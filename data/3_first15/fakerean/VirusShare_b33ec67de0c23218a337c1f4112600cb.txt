sbb
add
mov
sbb
insb
sbb
fldcw
fs
adc
push
adc
xor
sbb
inc
mov
push
aaa
outsl
xchg
imul
fistpl
mov
cmp
lods
cmp
adc
mov
mov
jns
or
dec
or
cli
incb
sub
fnstenv
daa
out
mov
mov
out
fwait
or
or
ss
fcmovbe
pop
add
inc
cmp
push
pop
repnz
mov
xchg
js
xchg
jne
stos
xlat
mov
cmp
shrl
rorb
jno
push
jb
js
arpl
mov
push
dec
into
or
mov
std
sarl
mov
mov
jo
mov
xlat
cmc
jmp
das
sbbl
sahf
xchg
or
ret
outsl
sbb
test
fwait
and
ljmp
stos
fs
sub
cmp
or
ficoms
stc
fisttpll
or
mov
adc
psllw
lds
push
inc
in
cli
xlat
sub
xchg
movsl
adc
sbb
jae
lret
enter
lds
mov
lcall
lret
mov
xchg
add
and
and
fadd
out
jle
xorl
and
mov
mov
adc
stc
dec
fstpl
lea
fnstcw
das
dec
dec
data16
icebp
mov
clc
add
mov
add
xchg
xor
or
dec
pop
scas
mov
mov
pop
inc
loope
mov
cmpsb
sahf
into
mov
add
fidivl
in
pop
add
jle
push
incl
add
mov
dec
sub
push
pop
popa
das
flds
stc
add
test
sub
in
inc
fisubrs
scas
or
pop
jno
xor
out
sbb
mov
imul
push
cmp
divl
xor
or
push
inc
xlat
stos
in
inc
sbb
fidivrs
das
in
repnz
or
bound
jae
repnz
fidivs
jl
data16
daa
lods
mov
sbb
lods
jecxz
pop
ja
push
adc
mov
inc
fidivs
popf
scas
ljmp
mov
inc
movsb
jmp
cld
gs
inc
mov
inc
mov
imul
outsl
mov
xchg
nop
sub
add
or
jecxz
test
in
or
lret
add
in
stc
push
hlt
imul
adc
arpl
push
fisubrl
je
lock
fists
shll
bound
out
and
push
push
cmp
sub
popf
jne
adc
mov
mov
hlt
xor
xor
dec
jge
repnz
mov
aas
sub
jg
psubd
adc
cmp
rcll
scas
in
push
or
add
push
mov
adc
scas
sub
pop
cld
test
add
xor
imul
fadds
dec
dec
test
mov
cltd
adc
jecxz
mov
imul
mov
xlat
shrb
mov
sbb
lock
xor
pop
mov
fidivl
push
inc
pop
pop
fstl
cmp
mov
mov
iret
aas
push
and
cld
sar
cmpsb
jnp
pop
cld
jo
scas
bndldx
daa
mov
dec
bound
cmp
jmp
inc
or
mov
movsb
in
pop
sub
hlt
arpl
push
ds
gs
push
jo
sub
lods
lock
pop
ret
js
popf
pop
fs
push
fcom
fdivr
cmpsb
sbb
int3
addr16
mov
ret
mov
and
add
mov
inc
mov
mov
shl
and
ss
xchg
xor
xchg
pop
pop
push
sub
inc
jbe
adc
pop
xchg
xchg
sahf
jmp
sub
fwait
sbb
mov
addr16
sti
jl
xchg
gs
rolb
jp
shlb
jne
cmp
cmp
dec
pop
push
sbb
mov
inc
test
lret
aaa
jnp
pop
cmp
mov
jae
cmp
out
sbb
jmp
mov
mov
cli
mov
and
pop
shl
popf
inc
mov
mov
cs
insb
mov
dec
lods
sub
jle
adc
push
loopne
in
xchg
dec
in
mov
jb
or
jl
mov
mov
in
fiaddl
dec
sub
fs
mov
nop
mov
or
xor
lock
dec
cmpb
movsl
adc
dec
fcoml
test
cld
pop
sub
adc
pop
test
mov
rolb
add
mov
pop
push
xchg
mov
or
arpl
inc
jbe
cmp
mulb
jmp
mov
loopne
lock
data16
sti
jnp
xlat
mov
ret
push
xchg
jg
cltd
cli
cs
xchg
repnz
xchg
addl
bnd
insl
jge
sub
mov
mov
je
pop
hlt
xchg
sub
push
lods
cmp
pop
xchg
xorb
push
sbb
jmp
inc
daa
stos
xchg
xchg
adc
adc
push
dec
mov
mov
jno
nop
fldt
adc
aam
dec
je
das
mov
rclb
insl
push
dec
out
fiadds
shll
jl
fs
aas
or
das
mov
cmp
es
sbb
or
xorps
movsl
mov
flds
jb
arpl
call
sbb
pop
sub
nop
in
jmp
jge
dec
fistpll
sarl
mov
sbb
fs
mov
js
out
mov
or
aaa
sub
sbb
push
nop
sahf
cmp
icebp
fiadds
out
xchg
xor
xchg
rcr
add
adcl
jns
push
xor
push
pop
dec
cs
jbe
sbb
push
test
ss
xor
mov
inc
mov
ljmp
or
mov
xchg
cmp
dec
jbe
std
loop
test
sub
arpl
cmpsb
ljmp
push
mov
sub
imul
daa
sbb
sub
test
xor
jg
and
pop
ffree
pushf
or
mov
daa
and
push
inc
fwait
cmp
fs
out
xor
or
test
mov
dec
movsb
mov
and
dec
in
sbbl
pop
sub
ret
adc
mov
add
fadd
mov
xor
cmp
insb
or
lcall
inc
jb
arpl
jns
fistpl
sub
loope,pn
inc
xor
jg
jle
mov
imul
jno
mov
cwtl
jns
aas
sbb
xchg
xchg
pusha
test
fnclex
les
xchg
call
jo
xchg
test
xor
mov
cmp
jge
dec
movsb
jecxz
aaa
or
cltd
in
out
in
cli
xchg
mov
mov
es
adc
movsb
or
insl
or
or
mov
int
adc
adc
ret
cwtl
out
imul
add
mov
fmul
inc
jmp
insl
mov
mov
sbb
mov
loopne
test
daa
adc
sub
push
and
xchg
xor
cmp
mov
pop
dec
je
mov
dec
ror
mov
jae
sub
inc
popa
callw
in
je
add
sbb
jl
mov
std
pop
mov
inc
push
and
stos
pop
loop
int
sub
imul
and
pop
jb
mov
adc
insb
lods
xchg
out
or
insl
enter
dec
clc
add
lahf
inc
ss
pop
std
mov
in
xor
mov
sahf
daa
jecxz
cmp
cwtl
pop
aam
enter
jge
popa
mov
cmpl
dec
and
adc
push
inc
cmp
repnz
in
cld
inc
cs
fs
lods
inc
pop
xor
xchg
loope
jae
mov
jl
mov
cltd
push
notl
shl
fcompl
xchg
xchg
mov
adc
dec
mov
mov
lret
in
iret
mov
push
push
ret
loope,pt
fwait
add
mov
adc
repz
xchg
mov
jl
lret
mov
xor
xchg
es
pop
add
popa
cmp
fnstsw
xchg
dec
push
jecxz
outsl
push
movsl
gs
jl,pn
icebp
add
std
incb
idivl
and
jecxz
jae
fwait
shll
and
dec
iret
push
cld
std
dec
mov
fnstcw
add
jbe
xor
js
mov
aas
mov
xchg
vmovd
add
mov
adc
push
inc
test
movsb
pusha
hlt
push
cmp
push
sbb
push
add
fsts
pop
jmp
and
iret
push
outsl
movsb
rcll
ss
push
imul
fnstenv
stc
test
jl
fnstenv
stc
outsb
cmp
adcl
or
cltd
push
sbb
and
pop
xlat
mov
mov
lea
sbb
xor
fcmovb
shl
pushf
out
ja
push
sbb
into
fs
jbe
imul
inc
daa
jbe
xchg
sbb
rcll
push
aad
add
dec
push
out
adc
jno
js
sbb
fs
mov
outsb
lret
and
lret
sub
mov
inc
dec
es
and
bound
xchg
cltd
inc
cli
cmp
ljmp
mov
xchg
pop
dec
test
sub
push
xor
mov
mov
hlt
xorl
mov
push
jno
sarb
and
pop
adc
mov
or
push
test
nop
mov
in
mov
pop
xchg
pop
inc
lods
les
cmp
xor
nop
sub
xorb
in
xchg
mov
movups
les
leave
imul
lods
outsb
addb
sbb
adc
mov
pop
xchg
les
dec
mov
lahf
inc
xchg
jle
call
sub
stos
lret
push
fcoms
test
or
dec
ss
pop
dec
fbld
jbe
lcall
js
push
mov
pop
jmp
out
jmp
int
loope
or
push
sbb
jns
in
pop
icebp
les
idivb
adc
add
fs
arpl
mov
push
test
inc
icebp
lahf
adc
pop
xchg
mov
sub
stos
fdivs
je
and
adc
xchg
push
fiaddl
pop
out
movsl
ja
cmpb
push
inc
adc
xchg
cmp
xor
insb
lock
push
add
add
popf
push
add
in
shlb
add
sahf
pop
adc
icebp
xor
pop
and
cwtl
pop
ror
stos
fwait
daa
mov
cmp
mov
or
or
push
inc
add
mov
jmp
jbe
iret
dec
cmp
stos
and
jl
pusha
or
add
sbbl
cmp
cmp
xor
int3
sarl
dec
icebp
decl
and
xchg
ja
outsl
mov
je
bound
das
pop
gs
inc
cwtl
xor
out
inc
mov
mov
inc
jmp
mov
movsl
es
in
into
cmp
xchg
cltd
ss
mov
jae
cmpsl
push
inc
int
pop
les
xor
dec
mov
mov
cld
stc
loopne
lcall
fsubr
jg
or
mov
lock
inc
pop
mov
aas
xchg
mov
repz
in
xchg
aas
sbb
mov
inc
xchg
ret
shl
dec
sub
ret
jnp
cmc
xchg
cmpsb
call
lock
mov
add
scas
sbb
sub
pop
loop
pop
ret
mov
sub
pop
repz
into
or
add
or
adc
jmp
repz
pop
mov
inc
sub
xchg
addr16
fdivl
sbb
jecxz
lods
mov
test
add
mov
into
aam
mov
dec
inc
mov
lds
sub
stos
jo
inc
fldcw
fidivrs
loopne
sbb
push
in
add
push
cmp
int3
sub
decl
or
idivb
add
lret
mov
push
sub
roll
xlat
mov
sbb
xor
in
and
sub
or
out
jne
adc
loop
adc
hlt
adc
ja
outsb
mov
pop
pop
xchg
xor
mov
cmp
jmp
insl
lahf
imul
cmp
xor
inc
out
adc
cltd
pop
adc
adc
sti
xchg
mov
mov
outsl
cmp
mov
pop
adc
dec
pushl
leave
movsl
mov
fwait
mov
insb
imul
adc
xor
or
lcall
cmp
ds
shrb
shlb
cmp
push
jo
push
inc
mov
adc
stos
or
push
mov
and
in
mov
xchg
std
rcl
inc
push
push
outsl
dec
push
daa
xchg
in
jg
rcll
outsb
leave
into
or
pop
inc
sbb
data16
arpl
push
jns
jbe
dec
insl
ss
jge
xchg
push
sbb
adc
push
dec
nop
pop
test
divl
sub
repnz
adc
mov
fadds
xchg
jno
cmpsl
or
xchg
ss
aas
sub
sub
inc
enter
add
addr16
inc
xchg
and
add
sub
xor
rcrl
outsb
ds
mov
mov
repz
inc
lahf
mov
into
pop
mov
mov
aad
mov
movsl
pop
add
insb
push
lock
cltd
arpl
adc
ds
or
cmpsb
sahf
nop
jno
test
arpl
jl
lock
dec
sti
aaa
add
jecxz
pop
sub
lds
fildll
aad
movb
mov
inc
call
jb
mov
call
pop
leave
push
jbe
add
pop
adc
lahf
mov
xchg
inc
mov
or
daa
icebp
cs
lahf
in
ss
iret
scas
jge
icebp
adc
add
arpl
adc
out
push
inc
std
mov
adc
or
push
addl
xchg
clc
push
cmpsl
mov
es
cmp
or
mov
cmp
mov
test
inc
aam
push
pop
pop
adc
or
xchg
push
push
out
push
xor
inc
in
mov
sub
sub
cltd
or
mov
or
mov
cmp
addr16
add
mov
andw
inc
jno
pop
push
xor
jp
repnz
xchg
xchg
fstl
push
jbe
shlb
push
inc
pop
and
mov
shl
lahf
push
adc
out
test
and
shll
das
cmp
lock
js
nop
mov
fsts
pop
jae
sbb
mov
adc
xchg
jmp
mov
adc
pusha
mov
dec
in
clc
mov
jge
into
stos
push
mul
pop
jmp
les
in
loope
inc
bndldx
mov
dec
pop
jg
lea
aam
shl
or
cmp
push
popa
pusha
scas
mov
push
adc
outsb
stos
inc
ret
pusha
add
jb
cmc
leave
in
insb
jmp
mov
sbb
or
jno
push
loop,pt
sbb
mov
in
lret
shlb
inc
push
adc
xchg
xor
arpl
idivb
push
cli
out
mov
fbld
add
push
les
cmp
mov
cmpsb
push
mov
jecxz
adc
mov
mov
out
std
fadds
cltd
mov
lds
mov
inc
push
jne
and
daa
shl
adc
jnp
stos
pop
sub
jge
and
movsl
in
mov
stos
push
js
subb
popf
add
frstor
imul
lahf
jmp
inc
inc
cmp
out
pop
push
ret
daa
aas
and
andl
data16
mov
dec
mov
mov
cmp
xlat
adc
pop
add
and
sbb
roll
sub
and
dec
mov
aas
lods
pavgb
rcll
pop
jg
cmp
lret
fimuls
int3
sbb
mov
repz
mov
and
add
mov
fcompl
mov
pop
out
bound
in
mov
mov
xchg
cltd
decb
sbb
xor
mov
and
aas
shl
sahf
sub
dec
popf
pop
and
cmp
pop
and
jge
and
cmp
xchg
mov
loop
mov
leave
fs
mov
mov
sub
cmp
out
inc
pop
jbe
push
sbb
stos
xchg
xchg
pop
mov
pop
jmp
mov
fidivrl
ljmp
mov
xlat
jp
inc
repnz
push
repnz
sbb
mov
fisttpll
dec
or
mov
sbb
movsb
xchg
mov
jle
daa
lods
pop
or
push
inc
sub
dec
daa
das
arpl
push
in
or
pop
adc
dec
outsb
push
xchg
fcoms
cmp
lods
jge
mov
dec
add
mov
or
shl
daa
mov
lock
mov
pop
mov
or
pop
sub
pop
mov
push
sahf
adc
pop
cmpsb
adc
scas
in
pop
testb
push
ljmp
xchg
imull
xchg
rorl
sahf
pop
push
or
lahf
lret
and
lods
cld
rcrl
inc
rclb
int3
push
inc
push
mov
add
lret
jecxz
cmp
les
push
jmp
hlt
pop
es
push
rcr
out
in
sub
pop
adc
xlat
ret
add
sub
dec
sub
mov
test
and
push
and
xchg
rorl
xor
push
das
xchg
inc
xchg
pop
fistps
sub
sbb
mov
cmp
roll
pop
pop
push
icebp
sbb
pushf
adcl
addr16
push
pushf
roll
adc
shlb
cmp
pushf
inc
sub
std
int3
adc
daa
or
ss
or
cmp
jp
push
stc
mov
mov
sahf
stos
dec
rolb
gs
cmp
mov
dec
sbb
cltd
lods
xor
mov
pop
mov
mov
sbb
xchg
cli
int
or
in
sbb
mov
and
mov
f2xm1
mov
cmc
aam
push
sbb
cmp
data16
cld
ljmp
push
xchg
push
loope
pop
dec
gs
lea
imul
xor
inc
ljmp
sbb
jecxz
push
jmp
test
cmc
insl
les
inc
out
push
add
sbb
aad
scas
push
sbb
imul
or
jecxz
mov
push
and
cmp
scas
jns
rcl
scas
outsl
xor
or
sti
mov
loope
bound
repnz
cmp
mov
sbb
cmp
cmp
jne
fs
test
jecxz
inc
mov
fwait
in
push
inc
push
shl
cmpsl
sub
out
repz
add
mov
add
fldcw
dec
out
xor
or
push
cli
cs
scas
sub
cmp
xchg
dec
leave
mull
pop
xchg
sub
adc
icebp
cmp
loopne
sarl
and
xchg
outsb
int
mov
hlt
dec
sarb
sbbl
or
dec
jg
sub
call
pushf
je
clc
xchg
xor
jnp
xor
aad
xchg
cmc
or
cwtl
sbb
inc
xlat
stos
jnp
jl
cmp
xchg
fdivl
sub
adc
inc
jl
mov
push
ds
sub
sub
ror
hlt
jmp
add
dec
pop
mov
jle
mov
mov
mov
adcb
xchg
seta
mov
push
xchg
int
inc
pop
jb
and
mov
in
outsb
jno
mov
std
ljmp
shll
arpl
mov
adc
pop
adc
push
sbb
mov
jae
aad
cmp
and
jmp
or
imul
jns
addr16
out
cltd
and
adc
aad
addr16
dec
lods
xor
mov
int3
mov
into
pop
and
outsl
adc
adc
addr16
adc
push
xchg
addl
es
into
int
cmp
arpl
dec
adc
mov
and
aas
pushf
fnstcw
imul
ficomps
lret
jle
jb
adc
mov
mov
cmp
adc
addl
mov
in
pop
stos
lfs
in
les
hlt
imul
mov
divb
xchg
mov
cmp
lds
xchg
mov
cmp
inc
sahf
test
rcrb
or
daa
jbe
push
pop
ret
in
and
push
loope
inc
xchg
je
imul
idiv
inc
inc
scas
int3
sbb
clc
xorb
repnz
std
push
pop
jle
or
popf
lret
out
xor
xchg
pop
enter
hlt
ljmp
idivb
repnz
dec
dec
cld
mov
mov
and
out
or
adc
ss
cmpsb
shl
clc
int3
into
outsl
adc
pop
add
int
mov
aaa
push
shrb
push
in
divl
xchg
jp
push
adc
mov
sbb
pop
test
sbb
aad
es
lret
inc
dec
imul
mov
add
push
pop
and
sub
lods
push
and
or
sub
cwtl
out
adcb
adcb
sub
call
scas
ja
js
mov
cwtl
jge
push
jle
out
insb
push
arpl
repz
pop
ss
sbb
fwait
xor
aam
into
stos
imul
and
lods
out
push
push
adc
adc
jmp
lcall
mov
sahf
out
movsb
shl
iret
pop
rol
clc
mov
cmp
jl
outsb
jmp
adcb
cmp
repnz
scas
xlat
xchg
adc
sbb
jnp
cmp
popl
push
inc
std
dec
inc
int
mov
sti
daa
add
test
dec
std
cmp
or
xor
jl
out
aaa
js
jecxz
push
test
popl
or
mov
icebp
ss
cltd
imulb
xor
fwait
pop
add
call
fldpi
cmp
cmp
push
aam
xlat
leave
ljmp
insb
in
sbb
inc
and
sbb
lods
popf
xchg
xor
cmp
lret
movsb
push
lods
inc
pop
push
sub
nop
sbb
lcall
lret
mov
call
xor
lret
popf
cmpsb
test
shrb
push
outsb
loop
add
je
rol
adc
aas
and
or
xchg
mov
mov
js
out
pushf
mov
dec
push
insl
leave
inc
int3
fisubrl
push
dec
sub
sbb
inc
sub
dec
rcrl
add
imul
int
fdivl
mov
cmp
inc
fs
adc
int
push
sbb
andl
pop
das
popf
add
mov
xor
orl
add
pop
fs
mov
jle
xor
lret
jae
cmpsb
orl
scas
sbb
in
arpl
loope
movsl
inc
bound
inc
aam
jo
mov
jns
jge
mov
mov
mov
jge
jno
insl
xchg
jbe
sub
xchg
ds
xchg
lods
jg
and
xchg
shll
bound
sti
ljmp
sti
or
ficoms
jmp
adc
sub
or
daa
xor
shrl
jge
mov
lret
xchg
add
and
pop
pop
push
mov
sub
test
cwtl
mov
xchg
clc
lds
aaa
outsb
xchg
stos
or
sbb
fsub
add
lods
mov
and
imul
hlt
mov
xchg
pop
sbb
sub
fcompl
in
hlt
fwait
std
lret
arpl
cli
push
push
adc
ljmp
and
xchg
sbb
add
fdivr
push
cmc
mov
dec
int
pop
jae
shrb
out
mov
outsb
jb
cmp
in
push
bound
shlb
dec
test
mov
and
aad
and
scas
push
sub
inc
int
call
cmpsb
aam
push
xchg
pop
in
cmc
and
jle
mov
or
push
inc
push
mov
subb
add
leave
scas
pop
adc
in
les
mov
jge
fnstsw
fs
cwtl
loop
clc
stos
gs
push
jno
push
mov
push
push
pop
out
outsl
iret
arpl
jp
inc
xor
and
repz
mov
mov
dec
dec
mov
push
into
inc
sub
xor
mov
push
push
xor
dec
test
imul
sub
lods
pop
pusha
int3
jmp
pushf
xchg
cmpsl
out
pop
cmc
scas
push
inc
es
xlat
xlat
addb
push
mov
test
fs
mov
outsl
and
and
dec
sub
pop
outsb
fs
pop
or
test
ljmp
xchg
inc
jp
je
inc
pusha
mov
data16
push
out
and
mov
cmp
lahf
add
out
mov
lret
rclb
scas
clc
ret
add
popf
outsb
fsubl
push
and
stos
pop
xchg
mov
dec
add
xchg
mov
inc
idivb
or
add
inc
and
dec
jecxz
push
ss
mov
adc
mov
cli
mov
lods
verw
and
jne
es
dec
sti
or
std
sub
mov
int3
sub
icebp
flds
shr
aad
xor
in
das
imul
aam
or
ss
cli
call
cmp
loope
mov
out
dec
add
push
mov
or
inc
rcl
and
test
cmpsl
sub
aaa
jmp
jae
and
or
and
push
orb
cmp
sub
pop
adc
or
xchg
hlt
insl
mov
and
jae
push
cmp
sub
insl
xor
mov
jmp
pop
ror
cmpsl
cwtl
dec
dec
into
in
jp
loop
fdivp
roll
pop
sub
stc
push
cmp
xchg
ds
pop
hlt
mov
mov
sub
cmc
mov
pushf
inc
inc
js
repz
mov
out
adc
enter
push
int3
adc
bound
cwtl
scas
cmp
leave
mov
fsubs
in
out
ss
fwait
mov
mov
outsl
pop
jge
add
lods
xchg
stc
mov
sub
roll
je
and
outsb
filds
and
mov
sub
cmpb
loopne
xchg
orl
cmp
add
test
dec
clc
clc
out
stc
lea
inc
ds
lock
inc
mov
shrd
jle
jecxz
push
inc
mov
inc
iret
jae
shrl
lds
testb
add
daa
int
xor
adc
fwait
scas
shll
repnz
repz
shll
jmp
mov
stc
inc
icebp
movsb
cli
and
clc
or
incb
sub
clc
ds
fisubs
scas
mov
mov
mov
ret
fucomip
and
clc
push
sub
pop
or
sarl
add
and
xor
out
stos
add
stos
cmp
jl
jns
add
cmp
repz
insb
adc
mov
and
pop
subb
inc
push
add
sbb
jle
mov
mov
inc
mov
ss
rcrl
scas
aaa
mov
fs
or
pop
inc
shll
and
stos
hlt
in
adc
lea
nop
mov
push
push
imul
out
sbbl
mov
es
jp
sahf
jno
call
data16
sbb
or
pusha
xor
sub
aas
mov
add
adc
xor
add
add
es
loopne
stos
repz
shll
test
ret
or
jb
dec
or
mov
movsb
xor
scas
fisttps
mov
enter
imul
andl
pusha
imul
mov
out
xor
xchg
push
or
mov
sub
xchg
xchg
inc
orb
mov
test
aas
mov
and
push
adcl
sbb
push
mov
in
xchg
cli
xchg
out
jnp
pop
jge
aas
ret
outsb
sahf
fstl
push
mov
in
jmp
mov
jge
cmp
push
lahf
mov
fildl
movsb
mov
rcll
les
add
pop
stos
fldl
and
mov
sub
inc
adc
inc
fisubrs
pop
pop
cs
ds
push
es
xlat
lods
sbbl
dec
ret
mov
imul
out
rorl
xchg
adc
test
jae
dec
cwtl
inc
movd
popa
jle
pushf
stc
sbb
lcall
cld
int
sub
jo
cwtl
jnp
pop
and
imul
jp
jmpw
or
std
pop
pusha
popa
cmpsl
les
cld
push
faddl
sbb
jl
inc
in
vpmulhuw
out
subl
in
fdivr
mov
in
rcll
loope
sbb
inc
sahf
inc
fmull
add
in
or
xchg
lcall
bound
subb
pop
push
mov
inc
and
or
xchg
add
movsb
push
xor
fwait
pop
sbb
ljmp
cs
cwtl
movsb
pop
mov
mov
xor
inc
adc
into
fnsetpm(287
popa
imul
fdivl
push
mov
lods
lds
outsb
inc
repnz
inc
inc
add
ret
imul
sbb
dec
inc
push
jbe
dec
andl
mov
cmp
loope
cwtl
or
mov
icebp
mov
dec
scas
xchg
call
jnp
push
stos
icebp
push
inc
test
dec
es
fs
pop
ret
lret
push
push
out
ljmp
int3
cmc
lods
inc
mov
jmp
shlb
dec
push
aaa
add
iret
mov
iret
aaa
cmc
out
outsb
cmp
and
jns
mov
pop
mov
dec
xor
mov
fadds
and
popa
sub
and
stos
fsubl
icebp
jl
lea
popa
repz
rorb
mov
imul
cmpsb
jne
jo
dec
daa
add
cmc
xchg
xor
lods
cwtl
jmp
jge
fwait
adc
xor
daa
cmc
push
pop
outsl
fistl
add
shl
sti
jbe
outsl
ljmp
pop
jmp
xor
push
lcall
iret
dec
fimull
push
addr16
or
jns
out
andb
mov
mov
fstpl
jae
hlt
out
xchg
xchg
fsts
jae,pt
out
jmp
dec
inc
push
stos
xor
shlb
movsb
lods
repz
cmp
inc
bound
pusha
imul
sub
xor
lret
sarb
mov
lcall
cmp
sbb
push
addl
gs
mov
negb
cli
ja
popf
out
daa
jnp
cwtl
movsb
popf
mov
mov
mov
pop
and
sbb
sbb
addl
lahf
or
cld
shrb
test
loope
sub
add
inc
adc
push
nop
repz
aad
sub
in
add
imul
adc
std
adc
loop
filds
or
pop
adc
mov
ret
ds
or
push
xchg
sbb
ja
ss
sub
std
clc
imul
jg
in
mov
in
lods
jo
testb
xor
push
mov
jb
pop
pop
bound
flds
push
sbb
xor
cmp
das
aam
js
push
jmp
js
popa
call
fidivrs
adc
mov
ja
mov
or
push
cmp
push
push
movsb
xchg
dec
cmp
data16
push
and
pop
mov
xor
stos
or
ds
or
push
push
sub
pop
vmovd
sub
pop
sub
aad
cmpsb
xor
psubsw
test
and
cmc
cmpsl
sarb
aas
sub
or
outsb
js
pop
push
cmp
pop
cli
pusha
jl
cmp
add
ficoml
mov
xor
pop
popf
adc
pusha
pop
lock
pusha
inc
sbb
imul
fldcw
and
or
cmp
pop
movsl
jnp
sub
pop
call
push
in
xlat
pushf
push
cmp
js
sub
cmp
imul
addr16
push
lahf
cmp
push
or
andb
sub
mov
mov
fdivl
add
cld
xlat
sub
xor
push
jecxz
sub
and
aam
insl
addr16
call
and
jge
add
in
adc
call
or
sub
je
xlat
adc
rorb
lret
xor
fcmovbe
aaa
test
int
mov
sub
jmp
sub
sub
cmp
inc
xor
ljmp
aaa
adc
inc
sbb
sbb
std
mov
pushaw
cmp
jns
movsl
dec
cmp
test
insl
dec
shll
arpl
pop
ret
out
pusha
loopne
cs
xor
stos
ljmp
daa
adcb
iret
jl
lea
cwtl
and
cmp
nop
std
test
adc
int
push
fs
xchg
pop
mov
ljmp
or
push
movsb
xor
lret
dec
scas
adc
clc
pushf
adc
jmp
sub
ja
sub
lret
loopne
rorl
pop
fistpll
pop
adc
in
dec
jg
xor
loopne
cmpsb
jo
sbb
add
rcr
js
jge
cmpsl
rorl
jge
push
adcb
fistpll
xchg
repnz
enter
fisttpll
push
sbbb
loop
js
mov
and
pop
lods
mov
clc
cmp
cmpsl
sub
dec
inc
inc
or
sub
jg
inc
mov
icebp
and
jle
jle
mov
cld
cmp
sub
leave
outsb
jbe
stos
inc
push
mov
adc
nop
ljmp
fldcw
sbb
dec
popf
dec
shlb
push
sub
cmp
or
mov
aas
dec
imul
push
aas
or
xor
push
dec
loope
jge
push
sti
and
shll
sbb
cltd
and
inc
fwait
icebp
fstl
jb
mov
xor
ret
icebp
pop
xchg
arpl
sub
pop
ficomps
pushf
push
jno
inc
xchg
adc
sti
mov
mov
shrl
xlat
cmp
das
call
aaa
sahf
aam
mov
popa
inc
cld
xchg
dec
stc
mov
xor
mov
dec
xor
xchg
xchg
repz
sbbl
cmp
in
int
or
enter
adc
movsl
jecxz
nop
xor
mov
mov
xlat
mov
mov
addl
xchg
lcall
idivb
dec
in
jo
pop
popl
movsb
movsl
jge
fs
sbb
sbb
mov
cmp
clts
cmp
int
rcr
xor
cld
test
ja
mov
sbb
int
orps
bound
mov
aad
cmp
sbb
aad
add
jnp
and
and
jp
mov
mov
sub
sub
mov
push
out
dec
aaa
inc
jl
inc
pop
sbb
push
sbb
mov
xchg
idivb
dec
xchg
divb
les
pop
cmp
dec
and
mov
pop
sub
jns
pop
adc
dec
cmpsb
jl
pop
sbb
mov
sub
push
fisttpl
inc
int3
cli
fdivp
lret
lret
test
repnz
xchg
push
and
fs
adc
push
stos
xchg
inc
mov
stc
mov
pop
adcl
adc
lahf
add
popf
js
or
inc
sahf
mov
cmp
lret
cmp
out
insl
jge
xchg
mov
push
subb
or
adc
sub
insb
mov
fdivr
pop
sbb
and
je
jmp
test
add
jmp
cmp
lods
les
call
add
xor
stc
in
mov
jmp
push
push
ds
or
mov
out
cli
and
imull
adc
pop
push
mov
and
push
xor
movsb
xor
add
rorb
xor
mov
data16
push
push
jne
in
sbb
rorl
outsl
popf
sti
jbe
aas
mov
mov
testb
mov
imul
lods
int3
imul
insl
nop
fs
push
daa
add
scas
jp
sub
cmpsl
cmp
loop
sbb
test
add
or
cmp
and
test
cmovnp
add
ds
iret
xchg
nop
setae
lds
fisubrs
sbb
push
lahf
jae
mov
shll
add
test
mov
stos
jae
fxch
or
hlt
and
aaa
xchg
add
push
xchg
jge
jecxz
mov
and
lret
in
call
insb
pusha
incl
sbb
stc
lods
test
add
jo
inc
ss
sarl
sub
push
stos
mov
loop
mov
mov
dec
jp
loopne
jg
xchg
jb
xchg
leave
rcrl
subl
or
pop
scas
or
push
insl
pop
sub
imul
or
out
imul
shrl
test
cld
lods
add
add
push
sub
push
fimuls
add
hlt
cmp
ficompl
fsubs
stc
cs
stos
test
outsb
or
dec
dec
push
sbb
aad
outsb
imul
jbe
push
push
mov
jno
imul
mov
mulb
data16
sbb
adc
aad
push
mov
dec
stos
push
enter
cmp
jg
mov
js
ss
cmp
jbe
inc
add
xchg
inc
pusha
loop
fidivrl
lock
sbb
sbb
das
jb
mov
mov
addr16
pop
popf
and
ret
out
stos
sbb
fld
dec
insb
sahf
jmp
movsl
and
shrl
add
std
add
ss
out
inc
xchg
int
push
and
lods
inc
xchg
or
mov
jmp
in
inc
js
xlat
pop
sbbl
sbb
js
cmp
sbb
jns
push
int
or
movsl
inc
push
sbb
divb
scas
inc
outsb
mov
push
movsb
decb
pushf
aam
lret
loop
sub
lea
js
xchg
adc
cmp
push
imul
test
lcall
sbb
or
jo
ja
sahf
add
sti
jg
je
cli
int3
jae
xor
ret
pop
pop
enter
xor
ss
add
sbb
mov
and
aas
cltd
cmp
mov
pop
sub
cs
mov
bound
out
lea
pop
mov
lock
popf
push
dec
mov
icebp
push
adc
xchg
imul
es
ret
popa
hlt
rolb
push
pop
scas
ret
sti
lea
es
or
xorl
dec
sbb
lea
sub
loop
mov
push
adc
mull
sbb
cmpsl
mov
mov
push
lahf
std
inc
pop
pusha
cmp
shlb
mov
lcall
pop
or
adc
into
js
and
les
push
jp
and
dec
call
lret
jp
push
aam
mov
in
mov
shrb
nop
sbb
xchg
adc
dec
and
xchg
mov
cli
add
andb
int
cmp
push
js
mov
push
ljmp
cmpsl
cmp
inc
outsl
std
lods
ss
mov
movsl
mov
outsb
xor
fsub
pop
in
fstl
popa
sub
pop
cltd
and
sbbb
xor
mov
cmp
xorl
xor
into
sbb
mov
lret
add
xor
sarl
push
ja
mov
into
in
jnp
xchg
in
push
pop
dec
xor
ss
cwtl
shlb
ljmp
mov
inc
sub
pushf
xchg
addr16
xchg
lret
push
mov
sub
fisttpl
jb
or
jmp
xor
leave
outsb
or
add
mov
mov
xchg
mov
xlat
or
pop
outsb
cmp
es
in
jge
sub
cmp
das
mov
sub
sub
xor
pop
mov
lock
adc
scas
dec
xchg
mov
mov
mov
mov
fstpt
lods
sbb
repz
je
hlt
sub
jp
inc
push
addr16
sub
jo
imul
add
or
mov
icebp
aaa
ret
cltd
sbb
mov
or
call
leave
push
xchg
lock
enter
shr
push
adc
and
jl
imul
pop
jnp
sub
add
xchg
outsl
xchg
out
dec
test
or
scas
in
add
fisubrs
push
cmp
scas
xlat
sub
add
xchg
inc
mov
movsl
mov
or
hlt
sarb
push
push
mov
addl
popa
jmp
sbb
stos
std
je
jno
repz
lahf
test
sbb
cmp
cmpsb
inc
fsubs
ljmp
fcomps
stos
clc
jb
sbb
lahf
icebp
das
jl
loope
scas
popa
jmp
scas
mov
pop
aam
xchg
dec
dec
enter
xor
jnp
pop
inc
jp
mov
out
xorb
fcmovb
hlt
xchg
imul
dec
dec
aam
add
jge
pop
imul
iret
cmpsl
and
mov
jmp
push
std
rcr
xchg
data16
fwait
loope
adc
fsubs
and
xor
dec
and
mov
mov
inc
stos
int
jecxz
sub
xchg
cmp
movb
lock
cmpsb
add
cld
into
shll
cs
outsl
dec
lock
mov
outsl
mov
sahf
push
adc
scas
mov
fdivl
pop
push
dec
mov
stc
ret
subl
or
mov
int3
sub
add
aaa
incb
mov
fildl
or
jmp
movsl
sbb
sub
test
fs
es
rorl
or
xchg
cli
mov
xor
sub
ds
and
push
xlat
sbbl
dec
ret
imul
push
xchg
and
scas
fldenv
push
iret
arpl
inc
sahf
xchg
mull
cmp
cwtl
dec
fisubrs
mov
or
adc
add
add
insl
xchg
cmp
or
shrl
hlt
cli
loope
or
xchg
orl
ljmp
subl
lods
mov
icebp
jb
inc
rorb
mov
repz
mov
cmp
xchg
pop
cltd
sbb
sarl
push
test
fdivl
push
or
mov
das
int3
test
and
stc
dec
movsl
loopne
hlt
mov
sbb
mov
idivl
loop
mov
fsubr
fnsave
popf
stc
int3
iret
cmp
inc
or
enter
pop
sbb
clc
out
in
xchg
add
sub
pop
xor
push
cmpsb
stos
jnp
dec
test
cmc
scas
xchg
cli
lds
inc
inc
loop
stc
dec
mov
push
mov
and
add
int
adc
jmp
nop
xchg
xor
dec
pop
lea
and
cmp
push
adc
data16
in
mov
mov
setg
mov
inc
push
sub
mov
and
shlb
popf
fld
mov
mov
mov
pop
jne
mov
sbb
add
sti
and
mov
cmpsl
int3
pop
mov
cmpsl
fildll
test
clc
mov
addr16
lds
loope
xor
popf
mov
dec
ret
test
ljmp
sbb
lods
xchg
jbe
push
arpl
inc
and
lcall
mov
sti
fcoms
testb
xchg
pop
es
insl
inc
pop
or
inc
cmp
xchg
xor
fisubrl
jp
add
or
mov
inc
push
jae
cwtl
test
lret
stc
inc
test
xchg
cltd
cmpsl
setg
push
dec
jg
mov
sbb
inc
mov
push
jo
inc
lret
rolb
jge
push
mov
test
add
cwtl
or
xor
push
enter
in
es
flds
push
push
repz
or
lea
dec
adc
mov
inc
outsl
aas
in
pop
addb
fsub
adc
lods
sti
pushf
aas
test
cli
add
push
cwtl
dec
popa
xchg
pop
push
or
dec
sahf
rorb
mov
mov
push
push
pop
sbb
scas
mov
stc
mov
rclb
jno
js
or
dec
daa
adc
outsl
cltd
loope
pop
inc
inc
add
addr16
jmp
inc
sub
in
testb
pusha
rcll
xchg
push
sti
xlat
lock
or
add
es
arpl
movsb
sub
dec
pop
mov
sbb
push
push
mov
sub
inc
es
jnp
mov
push
push
push
pop
jle
xor
pop
fistpl
cs
loope
xchg
fmuls
sbb
push
repnz
xchg
les
sub
out
xchg
push
rcr
sti
addr16
jge
outsl
repz
xchg
ss
and
sub
lahf
loop
cwtl
xchg
inc
mov
jnp
decl
dec
xor
pop
push
pusha
adc
clc
xchg
sub
xor
inc
xor
pop
inc
faddp
sub
push
aad
jnp
add
test
push
mov
or
jl
shll
subb
inc
sti
push
sub
in
push
movsb
xorl
cmp
inc
clc
aas
jge
and
pop
enter
pusha
xchg
out
pushf
sti
ds
dec
and
or
and
cmc
mov
sbb
mov
fidivl
sbb
xchg
add
xchg
stos
loopne
je
imulb
cmp
cmp
mov
popa
jns
shrl
dec
pop
inc
pop
or
aad
xchg
mov
subl
mov
cmpsb
mov
dec
movsb
scas
rorb
inc
shlb
mov
fwait
nop
data16
or
daa
mov
inc
cmp
test
je
pusha
inc
test
imul
sub
icebp
lea
fimull
insl
clc
pop
cmp
jnp
add
jmp
jo
addr16
push
enter
add
stc
repz
sarl
push
xchg
stos
es
lret
pushf
test
out
sbb
mov
es
cmp
sbb
mov
clc
in
or
daa
loopne
push
rcrl
lods
push
mov
xchg
cmp
or
push
inc
icebp
je
js
imul
xor
movsl
lds
pop
lods
out
mov
in
out
insb
dec
out
js
xor
lcall
mov
gs
push
jb
loope
mov
cld
aad
rol
fdiv
sarb
scas
lahf
jge
je
cmp
mov
push
pop
or
push
dec
pusha
push
and
or
gs
aad
adc
or
pop
mov
add
mov
and
xor
or
cmc
inc
sahf
mov
mov
loope
std
into
sbb
mov
ss
pop
rolb
int3
in
ss
cli
daa
aas
out
xchg
inc
mov
or
adc
js
sub
xor
or
movsb
and
out
popf
bound
add
ss
imul
xchg
mov
and
mov
add
mov
xchg
sbb
sbb
xchg
jge
lock
xchg
xor
dec
scas
adc
mov
movsb
in
cmpsb
sbb
jo
xchg
sti
cmpsl
int3
sahf
push
pop
mov
jns
sbb
movsb
insb
movsb
rclb
xor
mov
xchg
shl
fs
popf
das
cmpsb
cmp
shll
xchg
inc
outsl
or
push
mov
adc
pushf
aas
daa
test
scas
or
xor
fsts
int
pushf
inc
mov
nop
shlb
das
divl
jl
jnp
xor
cmpsl
push
sub
push
dec
xor
shlb
sbb
pusha
mov
jge
into
push
lret
dec
mov
ret
sub
fwait
jne
xchg
ds
xchg
dec
shrl
xor
test
fcmovb
adc
jno
mov
push
mov
rcr
or
int3
in
adc
pushf
xchg
mov
test
sbb
push
add
cld
fst
out
int
dec
mov
pop
popf
test
sub
adc
dec
aam
mov
xchg
popa
test
inc
shll
mov
movb
call
mov
sub
imul
sub
sub
pushf
fstl
jmp
orl
subb
rcl
in
ficoml
cmp
add
adc
out
cmpsb
movsl
inc
cmp
mov
daa
fisttpll
dec
xor
mov
out
leave
dec
sbb
cs
xchg
gs
das
fiaddl
std
out
icebp
mov
pop
or
jb
adc
movsb
pop
jb
xchg
cli
push
cltd
dec
std
jbe
enter
push
js
not
aas
test
ss
int
insl
imul
lcall
mov
push
imul
outsb
aas
mov
dec
shll
jle
out
inc
pop
dec
xchg
xchg
xor
in
cmc
std
sub
out
js
call
orb
pop
mov
aad
int3
mov
mov
rcll
push
and
cmp
imull
and
jecxz
outsl
dec
xor
and
cmpsl
sub
lods
stos
add
jno
test
dec
stos
pop
sub
insl
xchg
and
sahf
iret
lret
fcmovnu
scas
pop
sub
clc
cs
inc
push
popf
cmp
or
cmp
jo
push
pop
bound
jae
jbe
lds
in
sub
dec
xchg
and
xchg
lret
jb
fisubs
or
xor
sarb
int
insb
xor
mov
cwtl
rorl
repz
cmp
pop
jle
cwtl
mov
std
shlb
mov
add
and
or
mov
popa
pop
sub
nop
jl
pop
xor
outsb
in
ljmp
sub
les
popf
add
cld
and
jns
adc
mov
fwait
sub
mov
cmp
and
mov
lret
inc
fidivrl
lret
push
or
stos
in
or
mov
test
mov
cli
popa
push
sub
scas
cmp
adcb
mov
xchg
jne
cmp
jno
frstor
lds
inc
fcomi
pop
ja
dec
testl
add
push
rol
push
hlt
pop
movsb
jl
pushf
adc
push
mov
iret
scas
cmpsl
pop
ljmp
aam
lods
inc
pop
insb
pop
nop
or
idiv
xor
lods
pop
movsb
fstl
pop
loopne
push
mov
sbb
jo
mov
add
aas
xor
sub
int3
cmpsl
aaa
sbb
or
cs
pop
fistpl
sarl
int
xchg
push
arpl
mov
xchg
bound
scas
mov
rcll
xor
sub
and
sahf
test
popa
pop
cmpsb
mov
js
repnz
add
mov
dec
les
bound
outsb
jecxz
aad
push
pop
xorb
mov
sub
or
sub
xchg
sahf
adc
std
xlat
fdivs
subl
push
jg
fcmovu
roll
mov
ret
jmp
mov
imul
fcmovbe
aam
pop
repnz
sbb
cmp
mov
shll
or
repnz
ljmp
popa
int3
int
adc
or
xor
fsubs
xchg
ret
push
dec
lods
pusha
inc
jmp
imul
xchg
xor
push
mov
enter
sub
xor
lret
jnp
lock
xor
inc
cltd
pop
xchg
mov
adc
adc
mov
adc
xchg
shll
push
out
fidivrs
cld
cltd
sub
mov
stos
in
xlat
fildl
addr16
add
push
imul
mov
pop
jecxz
pop
gs
fildll
add
mov
jle
lds
bound
jl
inc
je
and
mov
push
sbb
xchg
dec
lret
out
and
stc
test
and
sbb
push
xchg
xchg
lcall
pop
xchg
inc
cmpsb
popf
and
jb
adc
xor
or
cmp
enter
pop
in
mov
ja
inc
insb
xchg
addr16
mov
sbb
scas
inc
divl
sbb
lods
mov
mov
inc
movsb
jg
pop
imul
add
mov
lahf
push
div
outsl
add
mov
sbb
cs
jnp
movntps
lods
sti
loopne
out
mov
mov
xor
cmp
push
ret
out
loopw
mov
jo
jge
inc
jge
xor
pop
daa
add
test
imul
pop
add
ret
add
mov
dec
jg
xlat
sub
movsb
ss
push
jmp
pop
cmp
adc
mov
dec
ficomps
mov
adc
pop
out
fwait
sub
mov
jle
mov
push
push
ja
aaa
movsl
pop
sub
outsl
int
leave
mov
test
in
cltd
test
jp
je
inc
imul
dec
rcll
xchg
sbbb
mov
pop
cmpsl
mov
pusha
jnp
inc
jbe
test
adcl
ja
clc
subb
add
out
pop
bound
outsl
in
idivl
mov
adc
imul
imul
mov
ret
jp
jb
int3
hlt
shlb
jns
sub
outsl
dec
iret
add
dec
data16
ljmp
jb
arpl
arpl
mov
push
subl
fwait
jle
loope
andl
int
sahf
orl
push
imul
or
popf
imul
addr16
out
push
xor
or
push
les
imul
inc
push
dec
pusha
push
stos
dec
or
stos
jnp
rcr
add
xchg
jbe
dec
cmpsl
xor
xchg
and
sub
addr16
inc
lods
cmp
lods
xchg
aaa
sahf
jmp
aas
and
mov
inc
and
jmp
xor
aam
iret
fs
push
fwait
xchg
mov
or
sahf
insb
shlb
push
inc
or
push
stos
aas
xchg
xor
mov
xchg
mov
fstpl
icebp
ret
sub
add
and
adc
shll
pushf
mov
jecxz
add
dec
xchg
sbb
mov
cwtl
and
sub
popf
divl
sbb
clc
pop
or
stos
rcl
imul
loopne
mov
inc
or
jecxz
sar
stos
cmp
pop
shl
insb
push
subl
jne
pushf
inc
outsb
mov
stos
lcall
and
mov
dec
dec
sbb
xchg
outsl
clc
xor
or
mov
dec
xchg
inc
shrl
jns
inc
lret
adc
aas
fistpll
aas
mov
push
push
or
mov
and
push
push
ljmp
in
mov
dec
mov
inc
sub
and
ss
mov
push
jp
stc
dec
pop
push
testl
repnz
or
or
sub
into
loopne
xchg
push
ja
and
mov
repz
into
push
outsl
jp
lods
inc
adc
pop
out
and
test
cmpsb
mov
and
iret
mov
pop
inc
pop
in
jbe
mov
clc
jge
scas
sbb
push
arpl
aam
xor
cmp
leave
pop
inc
nop
scas
insl
aam
mov
lcall
stos
or
lcall
js
cwtl
push
sti
cs
sub
addr16
addr16
dec
lods
mov
movl
icebp
sub
add
ss
xor
jl
mov
sub
jo
ja
xchg
pop
shll
push
pop
in
lahf
in
dec
pop
jnp
orl
mov
roll
scas
mov
test
arpl
imul
loopne
daa
pop
lea
ljmp
mov
in
mov
mov
enter
add
pusha
xchg
lods
mov
xchg
fimull
push
jl
jge
into
xchg
xor
mov
call
xchg
sahf
loopne
cs
cmp
imul
sbb
pusha
into
cli
mov
repz
pop
jl
iret
mov
xlat
popf
inc
fucomi
test
push
es
loope
xchg
out
cwtl
dec
or
scas
pop
cwtl
pop
jns
ficompl
mov
ds
testl
mov
cs
dec
mov
arpl
sub
scas
sahf
sub
inc
rclb
dec
cld
mov
outsb
or
add
mov
cmp
or
adcb
iret
mov
loop
sub
or
pop
ss
or
adcl
mov
repz
mov
sbb
gs
mov
pop
sbb
bswap
test
adc
jnp
adc
ffreep
xchg
aaa
mov
or
jae
cmp
out
cld
mov
scas
repz
pushf
ret
adc
es
jle
mov
lcall
es
mov
cmpl
mov
mov
ret
mov
idivl
cmpsb
sub
mov
mov
mov
cmp
in
push
dec
push
adc
sub
inc
push
cmp
pop
push
sub
xchg
cmpsl
int
aas
scas
imul
shll
xor
mov
mov
push
stos
shr
ret
dec
pushf
adc
pop
xchg
pop
rcll
cmp
cwtl
add
loop
out
pop
in
dec
test
mov
mov
notl
aam
out
pushf
movl
inc
sub
xor
jmp
jp
mov
mov
sub
ljmp
and
fwait
xchg
jle
dec
jno
lret
dec
das
sti
insb
cmpsl
das
jge
sar
xor
pop
inc
mov
arpl
aam
pop
and
das
or
xor
pop
fs
loopne
mov
cwtl
lret
xchg
int3
cwtl
dec
mov
pusha
mov
sti
stos
pop
es
ficoms
mov
je
pop
xchg
push
rcr
in
fmuls
cwtl
push
in
inc
icebp
outsl
jg
inc
xor
mov
fcomp
int
js
xchg
out
dec
dec
aad
cmpl
stos
push
inc
push
ret
push
faddl
inc
adc
sbb
loope
test
imul
mov
lahf
cmc
cwtl
cmp
je
or
in
adc
push
lcall
push
cmp
lahf
push
lds
into
dec
orl
mov
pop
fdivrs
in
test
and
push
fistps
mov
test
push
xchg
sub
test
xor
push
shlb
fwait
js
inc
add
movsl
jne
fadd
jl
push
inc
mov
sbb
sub
hlt
and
xchg
jno
mov
pop
outsb
mov
lods
filds
push
jno
inc
mov
jae
js
jnp
stos
lret
add
mov
lea
imul
push
pop
out
or
fistl
addr16
sub
outsb
std
push
mov
loopne
shrl
jmp
sbb
aas
jae
stos
repz
mov
test
std
fs
jae
add
loopne
pop
push
stc
dec
xor
mov
repz
insb
dec
test
js
in
stos
push
and
jmp
mov
dec
fiadds
xlat
mov
jb
test
add
mov
or
xchg
jecxz
cmp
add
stos
inc
jmp
mov
scas
in
jecxz
outsl
jbe
ljmp
mov
scas
insl
jo
movsl
rolb
cmp
mov
adc
jmp
pop
add
popa
mov
jmp
sub
cmp
cld
jmp
lock
jle
add
mov
rcr
and
out
nop
pop
xchg
dec
lods
pop
xor
push
xchg
pop
lods
repz
mov
adc
jg
out
popa
add
cmp
js
pushf
aaa
in
call
enter
jg
cmp
mov
cmp
lret
cmp
dec
out
popf
mov
adc
sub
pop
jnp
cwtl
ret
jo
pop
nop
insl
movsb
mov
out
jp
dec
sbbb
push
inc
jae
pop
orb
fbstp
jg
adc
adc
jg
cmp
in
es
aad
xchg
in
jb
in
cmp
pop
sbb
mov
dec
fidivs
ret
jp
jge
ljmp
pushf
aad
xchg
mov
ret
in
cltd
jg
mov
cmp
rcrl
pop
cmp
pop
and
andb
out
outsb
jle
movsb
sub
mov
pop
jo
outsl
mov
push
and
out
xor
into
fsubrs
mov
les
cli
fucom
pushl
add
xor
int
outsl
add
out
sub
mov
into
jge
mov
aaa
add
mov
loope
xchg
roll
fsts
inc
dec
xchg
popf
in
lret
loop
test
cltd
shrl
push
divl
insl
fiadds
fmull
lea
in
test
jg
in
add
in
js
and
pusha
inc
xor
push
dec
out
jge
stos
sahf
sub
test
adc
gs
dec
outsl
scas
scas
clc
imul
rorl
and
cmp
jno
push
nop
jns
mov
jg
xor
dec
adc
arpl
pop
dec
jno
out
lret
xchg
push
mov
inc
ljmp
insb
or
cld
dec
cmp
xchg
rol
and
and
dec
sub
in
fcompl
inc
push
daa
loopne
dec
xor
cli
inc
dec
jae
imul
movsl
adc
cmc
jb
je
dec
or
or
ror
scas
xor
lahf
sub
cli
negb
in
fdivp
and
imul
xchg
ltr
loope
test
std
mov
mov
mov
pop
jmp
and
pop
fstpt
mov
stc
loopne
or
push
imull
dec
aaa
push
add
mov
inc
test
dec
xchg
test
jecxz
jno
std
nop
hlt
mov
sub
popa
scas
lcall
fcomps
insb
popf
or
pushf
mov
and
aad
or
aas
fiadds
movsb
or
ja
pushf
push
add
es
or
shr
jnp
cmp
adc
mov
movsb
jbe
lods
push
sub
test
iret
stos
ret
xchg
dec
xchg
pop
fstl
in
mov
cmp
aas
or
aas
adc
cmc
xchg
xor
stos
push
imul
mov
lcall
inc
jns
xor
imul
lcall
clc
test
call
mov
out
movsb
sti
rcll
xchg
popa
xchg
out
xor
add
je
jl
inc
and
fisubrl
aam
cmpsl
push
movl
jle
sub
ljmp
xor
les
fdivrs
loop
push
mov
jle
lods
mov
stos
outsb
outsl
ds
mov
mov
and
popf
push
lcall
xor
jne
fisttpl
add
sti
pop
loop
sbb
notl
les
test
sub
push
jg
aaa
mov
mov
pop
xchg
in
xor
daa
imul
outsb
in
sub
jge
mov
fmuls
aaa
test
rcll
xlat
push
test
data16
sti
mov
fwait
repz
dec
xor
mov
int
mov
dec
inc
inc
in
xchg
push
lret
es
and
es
or
shl
in
dec
mov
ret
fs
push
and
pop
orl
xchg
mov
mov
sbb
hlt
cmc
imul
loopne
pop
icebp
sub
ficoms
movsl
xchg
stos
xor
movsl
rolb
push
pop
xchg
int3
aas
shl
mov
les
fiadds
adc
ficoms
adc
and
aas
jnp
jge
pop
push
or
sub
sbbl
cwtl
pop
loop
mov
lods
or
rcrb
sbb
adc
cmp
aad
lea
mov
or
xchg
adc
shlb
xchg
or
in
adcb
scas
jb
scas
cmp
fwait
sub
mov
aad
mov
inc
out
jno
in
ret
xchg
std
fnsaves
xchg
or
xor
xchg
mov
inc
pop
scas
mov
shr
clc
jo
cld
test
orl
inc
out
sbb
cs
add
mov
fistps
adc
push
loope
andb
icebp
data16
jns
movsb
test
push
cmpsl
insl
and
cld
lret
ret
jb
xor
movsl
jo
sti
cld
mov
shl
jno
lods
faddp
leave
xor
sbb
pop
and
jnp
stos
push
sbb
pop
xchg
nop
jecxz
popa
in
fidivrs
mov
pushf
cld
dec
jbe,pt
clc
jo
and
add
cmp
xchg
ds
xlat
adc
pop
cs
and
test
or
adc
out
cmp
sbb
push
inc
adc
aas
pop
std
mov
sbb
cwtl
lret
and
dec
test
cmc
sar
cmpl
fisubrs
mov
mov
pop
mov
cmp
or
lcall
inc
sbb
popf
cmp
cmp
xor
mov
out
test
jo
adc
repz
in
push
mov
adc
fwait
clc
cmp
pop
pushl
shrl
push
bnd
data16
xchg
js
stc
pop
adc
dec
sub
push
aaa
adc
loop
mov
scas
sub
add
pop
or
or
cltd
mov
pusha
jg
jge
push
dec
clc
lret
imul
push
sub
xor
cmp
inc
gs
cmp
jns
cld
jp
cmp
test
lea
out
sbb
inc
sti
gs
inc
fucomip
out
xlat
sbb
push
fsubrs
arpl
cmp
inc
add
sti
bound
xor
dec
mov
xor
in
stos
fiadds
rorl
mov
and
mov
inc
adc
sub
xchg
leave
mov
mov
lock
mov
sub
std
xor
mov
ss
mov
fwait
and
inc
in
movsb
mov
fidivl
insb
push
add
ja
mov
ror
shll
and
out
pop
fists
imul
mov
lea
push
insb
ja
sbb
push
jb
insl
fdivrl
pop
out
stc
stc
in
xor
mov
xchg
frstor
negb
lds
xor
jbe
push
lods
into
in
pop
add
andl
cltd
or
fidivs
push
or
dec
movsl
sbb
lcall
lds
out
mov
nop
cwtl
inc
outsb
imul
loopne
jae
mov
gs
mov
xor
shlb
or
leave
mov
xchg
jp
mov
movsl
inc
cwtl
push
cmp
inc
ja
sub
mov
pop
jle
sub
mov
mov
loopne
int3
stos
jnp
mov
mov
push
loopne
push
push
sbb
pop
popf
dec
mov
sbb
lock
int3
mov
das
mov
push
fldenv
sbb
inc
xor
mov
add
sbb
mov
testb
pop
leave
divb
mov
and
and
cld
sub
in
or
inc
cld
push
stc
add
pop
mov
or
mov
xlat
fstpt
ja
mov
inc
sub
xchg
pop
rclb
mov
dec
rep
mov
rcrb
int3
sub
dec
dec
das
cs
pop
xchg
pop
push
mov
push
stos
inc
sbb
clc
aad
xchg
mov
aas
push
push
sbb
push
push
int3
and
adc
mov
imul
int
lock
mov
das
mov
es
or
das
ret
leave
int3
call
inc
cmp
sbb
fstpl
insl
xchg
jl
add
cs
clc
mov
xor
out
rcrl
cmp
jnp
scas
xor
xchg
fwait
sti
outsl
jle
jmp
xchg
push
bound
push
cli
stos
adc
lcall
jo
cwtl
mov
fsts
jo
add
fcoml
or
cmp
test
lret
psllw
or
adc
loopne
sub
adc
mov
xor
imul
push
inc
bound
test
xor
mov
dec
jnp
stc
popa
pop
push
pop
xchg
ds
lock
ljmp
repnz
fscale
jmp
add
lret
ret
adc
cmp
inc
test
adc
sahf
pop
pop
add
add
dec
cmp
out
rcrl
cmp
jae
adc
mov
pop
mov
jnp
mov
dec
lahf
cmp
pop
int
or
jo
sub
hlt
ret
mov
adc
cmpsb
adc
bnd
ss
dec
mov
mov
push
push
xorb
test
inc
orl
stos
nop
sarl
sbb
rcll
lock
adc
lahf
in
por
loop
and
adc
test
pop
cmpsb
test
add
xchg
lds
push
shlb
jbe
xchg
std
repnz
pop
stc
mov
lahf
xorb
shlb
mov
adc
es
enter
movsb
pop
mov
adc
and
fadds
mov
repz
cmp
daa
sahf
xlat
push
mov
xchg
repz
js
add
inc
enter
int3
shrb
negb
push
push
mov
cli
push
pusha
add
popf
push
out
rep
adc
xor
es
and
pop
push
push
or
jnp
xor
pop
mov
push
je
push
ret
js
pop
jo
ja
mov
or
pop
test
sbb
inc
stos
inc
xchg
loop
mov
sub
fs
xor
insb
jp
insb
imul
pop
sbb
sbb
insb
icebp
daa
add
mov
mov
call
xchg
dec
lret
in
rcr
call
fcmove
pop
mov
aaa
scas
inc
jbe
push
mov
shrl
jge
mov
mov
push
ror
xadd
mov
mov
insb
fistps
lret
xor
shll
adc
pop
jmp
sbb
sub
test
cmp
adc
out
dec
jge
cmpsb
pop
stc
mov
jl
cli
mov
test
and
lcall
call
lods
rolb
sub
repz
stos
das
daa
ss
scas
jmp
lods
lret
cmpsb
push
mov
mov
enter
insl
aad
scas
mov
enter
or
sbb
popa
lret
and
sbb
into
and
and
cs
pop
out
test
push
or
clc
cmp
cmp
subb
cltd
mov
cmp
dec
mov
int3
aam
fdivs
sti
fisttps
je
adc
adc
mov
sbb
cmp
dec
fistl
inc
add
in
mull
jne
mov
sbb
xor
mov
lea
insb
dec
push
jge
adc
adc
outsl
mov
popf
xor
jno
outsl
xchg
shr
fdivs
jmp
or
lahf
or
mov
xchg
mov
movsl
pop
mov
in
aam
lcall
sti
mov
cmpsb
rcrb
cmp
je
addr16
sbb
inc
flds
cmp
imul
add
out
das
lods
sub
xor
insl
mov
cwtl
mov
mov
rol
pop
mov
jb
add
add
popf
mov
jl
lea
cmp
dec
hlt
out
xchg
cmpsb
shrl
ja
pusha
push
aam
int3
test
xchg
sbb
scas
dec
scas
pushl
mov
cmp
push
xor
and
scas
pop
insb
jmp
and
or
mov
adc
lds
cmp
or
jb
and
xchg
fiadds
test
dec
xchg
push
dec
movsl
push
roll
adc
sub
dec
push
inc
cmc
lds
loop
inc
dec
loop
adc
push
test
inc
fdiv
lds
inc
mov
lods
fisubrs
adc
lds
dec
aas
push
nop
mov
cmp
and
and
lock
push
in
adc
es
fstps
out
or
out
push
dec
fnsave
add
fcoml
dec
lret
ficoms
or
jecxz
test
add
jmp
leave
jo
sbb
pop
xor
popa
lcall
popa
cld
xor
lgs
cwtl
pop
and
addr16
cli
out
inc
stos
movsb
imul
adc
out
dec
in
fcmovu
std
icebp
aaa
pop
sub
lahf
in
sbb
vpunpckhdq
mov
iret
insl
rcll
sub
add
lds
jne
rcl
sbb
psrad
or
popa
cmp
jge
lcall
sub
adc
add
jnp
sbb
enter
in
aas
cmpsl
xor
push
enter
lea
fimuls
rcrl
lock
or
cmpsb
push
in
stc
or
div
adc
inc
xor
xchg
mov
jge
fsubp
js
cmpsl
ficompl
mov
sarb
aaa
sub
xor
outsl
shr
dec
cltd
rcrl
mov
pop
das
pop
movsb
je
mov
and
loopne
mov
scas
xchg
pusha
popf
jns
mov
mov
dec
sub
push
ret
jg
popf
push
call
adc
and
xor
fldt
lods
loopne
cmc
loopne
pop
dec
push
into
dec
cmp
push
jo
iret
push
repnz
into
loopne
jo
cmp
and
je
test
pop
cmp
int3
mov
push
sub
adc
jmp
mov
adc
imul
leave
sbb
or
fmull
adc
dec
xchg
insl
das
pop
cmpsl
mov
mov
and
stos
shll
pushf
mov
filds
and
div
or
repnz
mov
sbb
xor
lahf
jns
jnp
cmp
mov
add
mov
mov
cmp
inc
cmpl
mov
hlt
mov
sub
aas
add
popa
cmpsb
push
imul
inc
adc
inc
jno,pt
stos
dec
loope
lret
lea
ss
dec
push
fdivr
inc
das
mov
cwtl
repnz
lahf
xor
dec
sub
jmp
xchg
xchg
fistps
insl
mov
pusha
cmp
data16
jbe
mov
jecxz
out
es
pushf
sbb
out
repnz
add
in
ret
push
cmc
into
jnp
mov
int
mov
push
out
adc
pop
decb
inc
mov
icebp
and
sub
scas
jmp
sub
jo
dec
adc
xor
in
dec
mov
cmp
pop
out
addr16
negl
aas
fistpl
aad
cmpsl
xlat
jmp
mov
adc
out
popa
mov
in
pop
push
imul
adc
adc
xchg
div
mov
mov
dec
sub
lret
xchg
and
xor
mov
lahf
outsl
mov
fadds
pop
rcrb
pop
bound
mov
lahf
ret
mov
scas
adc
mov
pop
push
inc
test
aad
loope
inc
insb
jae
out
adc
and
dec
add
out
mov
sbbb
jecxz
rcrb
or
push
cmpsb
xchg
mov
lret
dec
pop
dec
sub
dec
push
je
das
add
mov
or
enter
rsqrtps
jg
lcall
out
cmpb
lea
jmp
sti
cmp
hlt
jne
dec
xlat
jle
or
stos
aam
imull
scas
xlat
jne
mov
or
mov
xchg
and
enter
clc
fidivrs
inc
in
dec
fsubl
jecxz
or
les
push
xor
dec
jb
repnz
enter
jge
dec
pop
mov
sbbb
and
xchg
sub
jg
cmp
mov
pusha
mov
dec
shrb
in
push
rcll
in
mov
sub
mov
dec
jge
das
divl
pusha
sub
mov
and
mov
xor
repz
shll
jle
shrl
or
sub
cli
sbb
mov
xchg
movaps
int3
push
rorl
dec
xchg
sub
mov
movsb
sbb
divb
nop
adcl
shlb
lock
pop
mov
iret
dec
nop
int
arpl
pop
aas
outsl
jle
cmpsl
cmpsl
mov
mov
in
sub
push
out
out
mov
pop
mov
lods
cmp
xor
dec
mov
mov
sbb
mov
out
dec
push
pop
mov
fcomps
js
ss
inc
mov
fwait
cltd
and
xor
das
add
pop
or
mov
or
lret
xchg
idivb
lret
scas
inc
jae
xchg
jo
cmp
jle
les
xchg
or
pop
adc
pop
or
out
int3
pop
movsb
xchg
std
loope
jmp
mov
ret
push
cmc
add
push
and
out
and
jno
lcall
sbb
mov
sbb
jno
sbb
jns
rcll
int
xchg
dec
stos
jnp
or
aaa
sbb
icebp
xlat
mov
xor
sub
sub
stc
ja
jmp
or
arpl
clc
pushf
mov
imul
imul
or
jmp
fists
jnp
cmpl
cmpsb
jb
add
shl
mov
inc
or
hlt
movb
jecxz
andl
and
sbb
mov
jno
dec
sub
dec
sbb
xchg
add
or
test
fnstsw
aaa
push
sub
jl
cmp
adc
scas
subl
mov
jp
std
pop
fstpl
mov
addl
push
jnp
js
loopne
inc
jmp
lret
insb
nop
dec
pop
sahf
adc
or
mov
in
push
popa
pop
xchg
add
dec
cmp
push
xchg
fiaddl
xor
stc
xchg
inc
sbb
imul
jecxz
test
mov
mov
mov
mov
mov
fistl
inc
sbb
clc
mov
pop
scas
dec
xor
or
loop
push
aad
cltd
xchg
scas
push
sbb
inc
pop
adcl
imul
test
cmp
fsubr
sub
jmp
mov
cld
call
jnp
adc
inc
mov
mov
in
or
cmp
pop
movsl
inc
adc
int3
inc
push
pop
xchg
sbb
push
fnsave
inc
ja
sbb
ret
jp
xor
mov
fbstp
sub
pop
pop
pusha
push
shl
popf
aad
adc
adc
icebp
xchg
mov
test
xor
imul
outsl
xor
mov
inc
iret
incb
ljmp
pushf
inc
mov
daa
push
aad
or
cmp
cmpsb
cs
lea
xchg
push
sbb
push
mov
xor
inc
jno
ja
test
inc
and
cmpsb
aam
pop
clc
or
scas
pushf
das
out
mov
sbb
adc
or
cwtl
sub
iret
xchg
aam
int3
and
lcall
lahf
push
sahf
fnstcw
mov
mov
ret
sub
clc
and
pop
aas
cld
lds
inc
xchg
pop
inc
leave
jne
lds
inc
fwait
sub
mov
mov
add
xor
pop
call
cmp
dec
mov
push
or
imul
call
push
mov
push
mov
sub
jne
lahf
shr
jo
xchg
outsb
shrb
dec
dec
sbb
sbbl
cmc
test
imul
ljmp
adc
mov
jno
pushf
pop
andl
lods
out
adc
fnsave
mov
mov
mov
pop
and
test
pop
sub
push
das
mov
aad
jp
sbb
loope
aam
or
fidivl
cmpsl
jmp
and
cwtl
das
xchg
fsubrs
and
inc
insb
xchg
lods
shlb
shlb
outsb
loopne
in
rcrb
adc
jp
jmp
xchg
lcall
repnz
int3
movsl
and
sbb
loop
out
scas
xor
lods
mov
mov
inc
dec
sub
pop
mov
stos
inc
pop
test
daa
xchg
adc
jae
xchg
or
das
imul
push
popf
sub
rorl
inc
add
add
jl
pop
add
pop
test
jo
or
mov
je
xchg
outsb
test
in
cltd
sbb
ljmp
pushf
shll
cmpsb
bnd
pop
clc
in
mov
xchg
and
mov
inc
push
push
mov
xor
das
pop
add
and
dec
fcompp
fnstenv
mov
pop
lahf
cmp
out
fstl
or
call
dec
outsb
mov
add
aad
repnz
dec
das
xor
mov
mov
fldenvs
stos
push
sbb
mov
jge
gs
cmp
scas
xchg
lock
lds
popf
test
js
lret
sub
shll
shlb
incb
out
mov
addr16
subl
xor
out
and
sub
mov
out
mov
inc
hlt
cmp
pop
mov
pop
test
or
daa
imul
int3
xor
movsb
xor
outsb
push
jl
inc
inc
aad
sbb
xchg
cmp
lahf
ljmp
call
add
mov
fwait
sarb
movsb
mov
add
mov
and
mov
lds
add
aad
inc
push
minps
pop
out
loopne
jg
sbbb
inc
mov
inc
jecxz
cs
pop
cmp
or
mov
movsl
jmp
jne
xor
outsl
and
dec
clc
inc
pop
fstpt
ret
xchg
repnz
jl
adc
mov
fwait
inc
into
hlt
lcall
fs
xor
ss
sbb
cmp
lods
scas
cmpb
pop
push
in
xchg
sbb
pushf
scas
out
inc
ret
int
cmpsl
mov
push
shlb
lea
and
imul
and
add
scas
xchg
dec
test
and
pop
mov
sarl
dec
mov
inc
add
aam
scas
pop
scas
daa
sub
add
das
popf
test
lea
jmp
call
xlat
lcall
adc
pusha
dec
adc
adc
lods
out
popa
mulb
mov
push
divl
cli
test
imul
pop
push
xchg
adc
sub
scas
outsl
or
xor
out
push
insb
mov
repnz
xchg
loop
ret
cmp
insb
stos
cmp
xchg
xchg
inc
xchg
and
sbb
ror
out
repnz
cltd
mov
jbe
test
xor
in
mov
and
scas
cmpsl
xchg
test
cmp
popa
push
adc
aam
mov
pushf
mov
sub
repz
jae
push
pusha
sub
and
and
ficompl
aam
aam
ret
mov
jge
mov
scas
cmp
in
outsl
dec
pop
cmp
popa
xchg
aad
gs
and
inc
scas
jnp
iret
icebp
addr16
ljmp
cmc
repnz
inc
lods
das
movsl
cmp
cwtl
jne
jmp
in
push
mov
xchg
inc
leave
gs
xorl
jmp
dec
cmc
testb
out
xlat
push
call
inc
cli
test
push
ja
dec
inc
jmp
jmp
movsl
ja
jge
mov
dec
sub
out
outsb
dec
lea
push
dec
in
jmp
sbb
mov
mov
ret
push
testb
pop
xchg
jae
jo
jo
sub
pop
mov
jg
adc
movsb
cld
xor
arpl
xchg
mov
das
popf
mov
push
pop
xchg
push
add
mov
fstl
fsin
add
cmp
ja
into
adc
push
movsl
dec
nop
jno
clc
mov
add
pop
push
test
outsb
cmp
pusha
popa
gs
push
dec
jbe
sub
push
nop
jl
aas
adc
jbe
mov
xor
les
push
cmp
cld
push
mov
jne
mov
loope
cmp
daa
sub
xchg
and
jmp
ljmp
cmp
lahf
or
xchg
test
or
lods
pop
movsb
cmp
dec
xchg
xor
jo
adc
mov
jecxz
mov
sub
and
pop
mov
adc
lods
mov
sub
jmp
xchg
mov
adc
push
mov
push
cmpb
add
jb
sbb
jns
xchg
mov
js
ljmp
sarb
xor
push
inc
jbe
pop
sbb
js
add
pop
xchg
je
out
enter
lret
mov
icebp
or
dec
clc
push
jb
rorw
aaa
sbb
mov
popf
add
cmp
add
jmp
lcall
out
or
or
or
cmp
or
in
mov
adc
xchg
jl
outsl
mov
cmp
mov
sbb
jae
shrl
cmpl
inc
stc
sbb
cmp
inc
and
cmp
ljmp
loopne
xlat
sbb
jmp
mov
mov
adc
inc
push
in
adc
push
xchg
cmp
outsl
lods
in
or
xchg
xor
sub
cs
push
das
roll
js
mov
dec
sbb
paddb
push
loop
hlt
test
je
and
and
jecxz
pop
add
bound
hlt
imul
call
or
bound
in
pop
test
adc
adc
and
lret
xchg
test
stos
leave
mov
xchg
inc
sub
dec
sti
jne
pop
inc
pop
sub
insb
inc
xchg
sbb
fwait
cmpsl
and
lret
scas
mov
mov
imul
xchg
xor
mov
push
mov
xlat
sub
add
sbb
daa
sbbb
sarb
sbb
les
repnz
push
js
mov
lcall
fisubl
dec
in
cs
jge
lret
sbb
hlt
cmc
jne
adc
scas
cmp
std
ja
jmp
jmp
into
pop
enter
pop
push
fwait
inc
stos
adc
inc
cld
sbb
add
pop
push
test
mov
xchg
mov
mov
cmpsb
ret
iret
push
pop
rorb
lea
test
addr16
neg
insb
js
inc
mov
xor
pop
or
fistpl
adc
jns
inc
lea
cwtl
sub
popa
xchg
pop
mov
shl
jecxz
fistl
mov
icebp
ffreep
inc
mov
sbb
inc
or
cmp
xor
in
adc
xchg
ja
and
ss
add
pop
dec
aad
inc
xor
and
addr16
dec
xor
pop
push
repz
and
pusha
cmp
repnz
inc
xor
pop
out
orb
gs
mov
mov
lret
push
daa
das
hlt
mov
xlat
aad
aam
sub
jae
and
insb
shlb
dec
fnstenv
sbb
sahf
push
pushf
cmp
pop
and
jp
icebp
lock
adc
mov
mov
and
movsb
push
lock
and
sbb
and
lock
aam
aaa
mov
mov
jl
or
std
or
sub
sbb
jae
push
dec
cmp
sbb
sub
sub
and
sub
rolb
fadds
loop
sub
pop
mov
jnp
xor
les
pop
aaa
outsb
adc
push
or
sbb
mov
jle
and
and
das
inc
jno
imul
adc
js
pop
daa
mov
icebp
jmp
sbb
or
dec
fs
in
adc
cmp
stos
outsb
jns
and
push
fsubl
mov
out
mov
lods
hlt
test
out
push
mov
jmp
test
jmp
mov
inc
dec
test
lret
loopne
stos
leave
ret
mov
neg
jae
mov
repz
and
hlt
aaa
stc
retw
lret
jnp
js
xchg
clc
pop
mov
out
jmp
loopne
imul
je
push
sbb
loopew
lods
push
jp
call
inc
fisubl
push
cli
push
push
push
lock
test
sub
xor
aas
sbb
pop
xchg
cltd
popa
and
jge
in
rol
mov
cmp
xchg
jno
mov
into
jbe
in
sbb
xor
pop
cmc
pop
adc
fxch
fs
mov
adc
inc
into
add
jecxz
je
in
jae
testl
cmova
or
js
std
jae
mov
repnz
add
or
jne
mov
mov
pushf
mov
push
mov
test
int3
lods
movsb
daa
or
add
repnz
mov
fidivl
in
or
ds
xchg
pop
add
sbb
sub
repnz
xchg
mov
cltd
cmp
cld
sbb
movsb
jns
push
lret
mov
lods
xor
dec
cmp
add
lret
in
add
push
lds
cmp
adc
ret
or
or
aad
sti
lea
or
aam
lcall
add
fistpll
shlb
cmp
adc
jne
in
je
fs
rorb
xchg
insl
loope
fildll
mov
repz
popf
mov
inc
std
fimull
lahf
cltd
cld
hlt
mov
je
fwait
dec
bound
xchg
dec
mov
dec
push
test
jo
shll
call
jns
loope
lret
jg
dec
xchg
pop
pushl
cmp
les
jns
dec
fwait
in
jno
out
cmp
cmpsb
ret
jno
sti
xchg
movsb
lcall
add
push
push
iret
push
sbb
and
loopne
ss
xor
inc
ja
push
sub
sub
inc
push
dec
adc
add
pushf
or
pop
popa
das
mov
lods
shrl
mov
pop
add
adc
scas
xchg
mov
and
aad
fcomps
push
cmp
cmp
aas
push
inc
push
lret
xorl
fildll
add
cmp
jle
lret
xchg
movsb
ss
mov
push
pop
nop
insb
push
scas
pusha
xor
aaa
mov
repz
addr16
sbb
data16
cmpsl
test
out
test
jnp
xor
add
stos
cs
cmp
scas
adc
push
sti
jb
jb
movsb
lods
into
adcl
pop
mov
lds
jns
shl
fildll
or
mov
xchg
clc
leave
fisubs
arpl
jl
sub
adc
adcl
sbb
in
pop
adc
imul
xchg
lret
fsubrs
dec
movsb
ror
popa
sahf
jno
sub
lret
jl
xor
push
xor
sbb
call
add
mov
out
push
push
icebp
imul
xor
xchg
scas
mov
pop
jecxz
mov
sub
cmpsl
insl
jo,pt
and
xchg
cs
cmc
jb
and
cltd
add
scas
add
std
sahf
cmp
push
mov
jns
repnz
rcrb
in
aaa
add
xchg
pop
sbb
add
mov
sbbl
test
or
int3
jo
dec
imulb
aam
xlat
ss
cmp
lock
mov
or
sub
mov
sub
mov
mov
and
xor
negb
mov
repz
lret
sahf
push
jp
xlat
test
push
cmpsl
sub
push
enter
das
ret
dec
adc
out
sbb
out
into
enter
lods
jge
insl
iret
or
jae
jmp
dec
jne
adc
inc
add
inc
pop
fdivrs
push
hlt
pop
xchg
dec
repnz
adcl
xor
push
aad
adc
shll
or
out
adcb
jbe
xor
add
ss
repz
fidivs
sarb
shl
adc
sbb
xchg
jle
mov
pop
xor
dec
jp
jmp
add
lds
rcll
cld
jle
add
or
rcrb
pushf
add
sbb
movsb
xchg
push
out
outsb
jne
lock
xor
adc
jg
xorl
xchg
xor
lcall
cli
push
inc
push
or
cmpsl
xor
in
fstpt
mov
mov
jnp
fidivrl
mov
in
lret
and
jnp
fwait
cwtl
cwtl
insb
in
inc
sbbb
jae
sbb
push
enter
mov
sub
fs
sub
pop
pop
loope
xor
jecxz
xchg
push
pop
mov
das
or
mov
fidivl
repnz
jnp
jno
dec
lods
lock
xchg
mov
jl
xchg
lcall
stc
push
ror
or
inc
inc
xor
lock
inc
dec
addr16
sbb
arpl
adc
mov
daa
pusha
sbbb
cmp
push
jo
lret
push
aad
fcompl
dec
enter
jne
mov
scas
mov
ljmp
outsl
xor
dec
loop
mov
daa
sbb
aaa
sahf
xchg
ja
xchg
out
mov
mov
cli
ss
or
call
jns
sub
test
sub
mov
scas
clc
xchg
mov
push
add
inc
jmp
in
fcoml
fdivs
cmp
pop
in
test
and
out
or
cltd
lock
test
xlat
sub
jbe
fstpl
mov
xchg
dec
xor
cli
insl
mov
lret
bound
sbb
lods
loopne
iret
sub
xchg
mov
and
inc
mov
adc
cmc
call
stos
mov
movsb
sbb
mov
pop
js
jo
cwtl
adc
add
dec
and
cmp
call
adc
fs
arpl
mov
pusha
sbb
outsb
dec
lds
cli
pop
jne
add
test
inc
adc
int
jo
jl
lcall
invd
push
inc
shrb
mov
aad
sbb
push
pop
out
shrb
ljmp
cs
scas
nop
ret
mov
mov
pop
es
out
rol
sbb
mov
mov
push
mov
push
sbb
xchg
jg
or
repnz
sub
popa
jge
nop
cli
mov
dec
enter
std
cwtl
lds
cli
addb
and
fidivrs
dec
push
mov
push
dec
push
mov
pusha
ret
xchg
pusha
fsts
in
xor
mov
pop
roll
mov
jecxz
add
test
dec
lods
test
add
sub
push
mov
cwtl
xor
jge
adc
lret
cmc
repz
pushf
arpl
sarb
cmc
arpl
mov
cmp
or
adc
lds
pop
jg
dec
cmpsl
add
cmpsb
mov
jnp
in
ret
xchg
add
cmpb
inc
fwait
les
lods
jo
mov
pop
push
ljmp
dec
aaa
xchg
shl
adc
mov
aam
test
enter
ficoms
repnz
mov
stos
mov
scas
jp
cmp
mulb
push
or
push
mov
mov
cmp
jns
mov
sub
add
inc
sbb
cmp
xchg
sub
andl
push
in
movsb
mov
cmp
aas
out
mov
inc
xchg
lcall
ss
mov
adc
insb
and
rcrb
xchg
pusha
pusha
call
repz
mov
pop
mov
add
jnp
xchg
xor
outsb
mov
jle
push
jbe
mov
idivl
adc
mov
push
outsl
jbe
jno
sub
jbe
ret
dec
xorb
cmp
dec
mov
rcrl
add
and
cmp
nop
pop
mov
sub
mov
pusha
sarb
mov
shll
inc
call
cmp
cmp
fisttpll
pop
std
mov
loopne
pop
sbb
jns
jle
ret
jnp
mov
mov
push
push
sbb
pop
scas
int3
inc
inc
and
dec
dec
lods
movsl
lcall
sti
jb
mov
stos
add
sbb
fsubrl
inc
xchg
fnstenv
dec
mov
imul
ds
into
push
inc
int3
push
dec
inc
jae
jg
and
ret
adc
movsb
jo
sub
cwtl
jge
loope
or
int
xor
aas
adc
sbb
daa
cmpsb
adc
lahf
mov
xorl
mov
fldl
fwait
lcall
shll
push
dec
cmc
bound
es
cmp
pop
ficoms
or
push
pop
fbld
add
jae
mov
stos
pop
adc
cs
lret
jg
outsl
inc
mov
cmc
mov
sub
mov
mov
les
lahf
addr16
testb
mov
rorl
out
fldcw
cmp
xchg
fwait
mov
int
loop
mov
imul
lods
push
or
lea
mov
inc
test
testb
or
loop
add
popa
lods
pop
pop
fisubrs
mov
jns
jo
pop
xchg
test
incb
ljmp
mov
ss
xor
xor
lea
fwait
and
rcrb
sub
testb
mov
outsb
aas
sti
xchg
adcl
lret
cmp
sbb
fs
jns
inc
pop
xchg
pop
sbb
cs
mov
mov
mov
mov
dec
lahf
daa
dec
xor
sub
aam
mov
int
sbb
push
divb
mov
aaa
aad
inc
hlt
push
ficompl
pop
loop
cmp
xchg
jg
sbb
sbb
adc
cmpsb
arpl
movsl
ret
sub
stos
push
adc
jmp
add
in
scas
and
sbb
inc
inc
lcall
jbe
ds
dec
sahf
data16
sahf
inc
xor
add
lret
std
dec
xor
in
mov
jmp
adc
mov
or
mov
call
jge
inc
or
sub
pushf
dec
and
add
pop
inc
repz
adc
icebp
or
out
rcrl
xchg
fmuls
push
testb
aam
arpl
lcall
or
jo
xchg
arpl
fistps
lahf
insb
stos
shlb
insl
imul
aam
cmp
fisubs
push
stos
clc
lock
repz
dec
and
push
imul
jns
sbb
insl
shrl
nop
pop
imul
sarl
movsl
int
fsub
mov
and
dec
add
shrl
cmp
push
inc
jmp
aas
push
dec
inc
lret
add
xor
hlt
ljmp
arpl
scas
dec
mov
dec
push
sarl
mov
xchg
inc
mov
iret
sub
jb
push
xchg
add
sbb
pushf
test
jnp
cld
jnp
arpl
adc
sub
inc
outsl
out
xchg
shll
and
aas
push
mov
pop
xchg
inc
enter
mov
loopne
fadd
lret
jo
leave
or
xchg
sbb
scas
sub
or
push
adc
sti
push
adc
mov
or
mov
xchg
push
int3
jb
xor
in
testl
mov
nop
jge
sub
dec
pop
push
enter
jecxz
rolb
inc
int
sub
dec
test
in
loop
enter
repnz
les
mov
add
fwait
mov
add
cmp
cmpsl
ds
xor
fs
scas
sbb
aas
sbb
cmp
sub
inc
mov
mov
shrl
mov
adc
lret
sub
stc
stos
arpl
movsb
cmpsb
inc
bound
or
push
push
lds
stc
cmpl
je
push
stc
pop
notl
stos
fs
ret
sbb
lahf
xchg
fldl
scas
or
orl
nop
and
fcmovb
sub
or
stos
or
iret
mov
or
jnp
dec
test
aas
push
adc
lods
imul
ret
repz
sbb
jbe
pop
pop
cs
mov
stos
push
push
inc
leave
test
add
rcll
into
or
push
addl
orb
mov
leave
or
repz
cmp
jb
add
cltd
mov
out
xor
add
mov
int3
data16
in
mov
adc
bound
sti
add
sub
movsb
mov
and
pop
aad
mov
cmp
cmpsb
enter
dec
leave
push
cmpsl
cmp
jb
add
mov
xor
xchg
pop
jae
pop
pop
add
out
rolb
bound
loop
in
push
pusha
adc
stos
mov
test
jnp
ret
mov
inc
xchg
pop
outsb
dec
hlt
inc
call
push
movsl
mov
mov
xchg
mov
xor
ljmp
test
sub
push
cwtl
pop
stos
cs
js
cli
mov
xor
mov
cmpsl
xchg
jmp
xor
jo
insl
sbb
rcl
dec
sti
mov
into
sti
js
or
stos
das
xchg
ficompl
outsb
sbb
ret
bound
jl
cmp
shlb
popa
inc
xchg
mov
jne
loopne
rcl
or
aaa
imul
xor
scas
or
xor
jne
adc
movsl
imul
jae
out
into
sbb
adc
mov
imul
fdivrl
xchg
and
push
dec
cmp
mov
popa
push
inc
js
pop
insb
xor
cmp
dec
mov
pop
pop
cmc
fsubs
jbe
das
inc
sbb
test
insb
stc
lods
xor
imul
sub
add
lock
push
mov
popa
daa
inc
and
inc
cmp
push
insb
movsb
cmp
xlat
or
test
mov
inc
mov
sbb
xchg
jnp
xor
cmp
or
push
mov
lcall
xor
ret
mov
push
popa
mov
cld
mov
movl
movsl
into
push
in
push
in
cwtl
fnstcw
pop
cmp
test
jae
push
int3
add
mov
lret
stos
pop
imull
and
sub
repnz
mov
je
lea
jmp
lock
loop
mov
ljmp
xchg
fdivrs
dec
les
int
in
out
and
add
subl
popf
jge
add
mov
fsubrl
test
sub
pop
mov
fldenv
add
dec
mov
shlb
shll
cmpsb
push
push
js
sub
in
xchg
gs
lods
data16
and
add
leave
cmpb
rolb
add
push
sbb
sub
test
or
lret
mov
mov
pop
aad
cwtl
test
push
dec
or
pop
cmpsb
sbb
xchg
lods
push
jmp
cld
cmpsl
fdivr
mov
lods
ret
sub
or
movsb
sub
mov
mov
scas
push
sub
jle
push
aas
ljmp
cltd
outsl
and
rolb
lds
into
push
stos
xor
jno
mov
sbbl
enter
out
cltd
out
test
inc
jae
dec
sub
push
mov
lods
aad
frstor
cmp
call
jp
xchg
test
into
mov
adc
loop
clc
iret
fdivrs
pop
inc
nop
sub
fwait
pop
subb
fildll
inc
nop
in
sub
mov
push
call
sbb
fcmovnu
xor
push
cmp
daa
cmc
xchg
movsb
cwtl
test
sub
jle
mov
xchg
mov
jl
imul
sub
push
xor
mov
jge
push
les
xor
push
pop
sub
lea
and
mov
sub
pop
dec
dec
adc
cmp
imulb
sbb
pop
xchg
jno
mov
clc
mov
mov
cmp
push
cmpsb
xor
sbb
pop
ljmp
out
cmp
cmp
push
fildll
movsl
sub
xchg
mov
scas
scas
and
push
cltd
push
add
xchg
iret
adc
pandn
adc
je
add
jecxz
insl
rolb
cmp
xor
and
jle
push
sbb
ss
es
mov
mov
loopne
push
pop
ja
lea
and
leave
cmp
cmp
cmpsb
enter
or
addr16
jo
idiv
or
and
aam
nop
es
mov
notb
scas
jb
movsl
shrb
pop
stos
sbb
push
fs
push
data16
xchg
outsb
push
xor
insb
sbb
in
pusha
mov
out
int3
adc
pushf
pop
into
xor
in
scas
jno
mov
stc
adc
cmp
out
cld
jnp
mov
scas
ffreep
insl
adc
and
test
movsl
sbb
ja
lcall
adc
add
pop
jnp
adc
jno
inc
dec
pushl
xchg
xor
insl
popf
fdivs
push
dec
inc
mov
fmuls
outsl
adcl
nop
or
cmp
and
mov
mov
jmp
jecxz
call
mov
sti
shrl
lahf
aas
or
mov
and
jo
and
add
push
int
add
mov
mov
and
repz
add
push
sbb
adcb
dec
fildl
scas
or
inc
jl
test
mov
out
incb
stos
inc
fldl2t
mov
mov
push
pop
xchg
mov
sub
repnz
mov
int
call
inc
lcall
stos
or
icebp
or
lock
sarb
sbb
fwait
jno
ja
scas
jne
cs
cmp
xor
sahf
pop
clc
aad
inc
cmp
or
imulb
sub
insb
fstpt
outsl
lret
data16
pop
stos
sub
dec
inc
in
jne
aaa
frstor
xchg
hlt
dec
mov
cmp
pop
add
es
aam
sub
push
sbb
mov
sub
in
cltd
mov
icebp
adc
lods
and
adc
mov
cmc
repnz
jmp
int3
ss
push
push
gs
pop
adc
loop
sbb
mov
sar
jp
insb
mov
lret
cwtl
mov
adc
push
cmc
ljmp
out
decb
das
xor
adc
lods
or
add
out
add
outsb
nop
hlt
jmp
lock
addb
push
arpl
arpl
push
leave
mov
lock
gs
loopne
sbb
cltd
or
orb
outsb
or
and
adc
lret
add
es
fldl
cmp
fdivr
daa
cmp
adcb
and
icebp
pop
cmpsl
push
sub
sbb
dec
xor
mov
mov
ja
pop
cs
jae
pop
lret
push
xor
jle
push
test
js
iret
repz
hlt
sub
cmp
adcb
aas
cltd
call
push
aam
test
mov
insb
mov
mov
push
and
xlat
sarb
stos
and
cmpsb
mov
push
mov
mov
ljmp
aaa
ja
mov
mov
out
and
jmp
push
dec
dec
xchg
dec
inc
stos
lret
ljmp
fcmovu
fnstcw
aad
and
pop
push
sub
mov
data16
pop
jle
hlt
loope
rcrb
and
or
dec
es
push
cmp
std
add
lock
es
gs
lea
dec
dec
movsl
jmp
push
add
imulb
rcrb
pop
incl
ljmp
addr16
cmp
in
scas
inc
insb
ficompl
clc
lret
arpl
cli
stos
pop
dec
test
pop
aam
stos
in
rcr
dec
call
push
shlb
mov
xlat
iret
bound
or
outsb
insl
jne
loope
adc
mov
xor
imul
or
gs
mov
call
movb
jo
imul
bound
nop
je
in
scas
ret
lahf
xchg
pop
fldt
add
data16
jecxz
adc
and
push
shlb
lods
rcrl
sbb
dec
das
in
sub
aaa
push
in
inc
jb
cmp
sub
arpl
cltd
out
adc
cmp
xchg
cwtl
shll
popa
mov
testb
fwait
and
pop
xlat
add
insb
fdivr
scas
or
cmpsl
pop
stos
testb
jb
ss
jne
pushf
pushf
cltd
xchg
je
inc
pop
cmp
push
dec
lea
aam
sbb
mov
push
or
xor
cmpsb
inc
test
inc
add
cld
ja
sahf
jle
inc
mov
lea
test
cmp
insl
cltd
movsl
adc
fidivs
test
scas
push
adc
stos
add
push
or
pop
test
not
mov
and
cli
nop
js
xchg
lea
fwait
sub
push
push
jp
or
iret
pop
jae
mov
shlb
xchg
jge
push
inc
aad
mov
pop
adc
sub
std
xchg
call
xchg
mul
pop
inc
add
inc
sub
nop
outsl
jecxz
xchg
in
pop
lcall
ret
mov
les
inc
enter
outsl
push
test
xchg
inc
dec
mov
mov
dec
cmpsb
xchg
jb
imul
push
push
inc
cmp
xchg
rolb
jno
aad
xchg
das
int3
pop
stos
or
jnp
sub
xor
adc
nop
fs
inc
xor
int3
dec
repnz
dec
push
ret
popf
hlt
loop
rorb
xor
clc
fcom
pop
test
and
sub
add
rolb
sti
mov
add
jp
icebp
ljmp
adc
inc
mov
xor
and
sbb
cmpsb
xchg
nop
adc
jecxz
xchg
xor
lds
xchg
insb
xor
xchg
lds
and
cmpsb
adc
je
cmpsl
xlat
imul
stc
mov
iret
fisttps
into
and
fst
push
loopne
xchg
mov
pop
les
adc
arpl
xor
inc
mov
jae
das
ret
jp
sbb
lds
jb
or
dec
sarl
daa
mov
movsb
jle
xchg
pop
lcall
add
scas
push
leave
inc
out
mov
ja
xchg
mov
cmp
jno
jmp
dec
imul
pushf
mov
inc
clc
dec
adc
mov
and
loope
jg
mov
out
cmp
loope
mov
push
and
pop
je
cmp
adc
in
jns
cmp
push
mov
or
daa
cld
rcll
mov
mov
xchg
fisttps
adc
addl
mov
fwait
imul
cmpsl
std
jmp
xchg
lret
inc
leave
mov
sub
in
mov
sbb
adc
fstpt
addr16
in
push
lock
cmpsl
loop
das
cmp
mov
push
sub
adc
cmp
mov
mov
jl
push
adc
xchg
popa
mov
pop
out
mov
ja
pop
sti
mov
testl
sub
add
fistpll
inc
pop
mov
out
sti
pop
jnp
addr16
shrl
sub
popa
jb
aam
inc
es
mov
xchg
jo
cwtl
add
inc
xchg
sub
test
xchg
xor
mov
popa
arpl
fildll
mov
mov
scas
sub
lret
das
cvtps2pd
lret
test
add
es
mov
lea
enter
xchg
jg
jbe
sub
pushf
pusha
std
mov
push
paddusb
lret
icebp
fnstenv
pop
xor
pop
test
fs
sub
inc
mov
and
sbb
dec
inc
xor
loopne
andb
imull
aas
cmp
inc
call
imul
daa
out
xor
daa
cmp
stos
sbb
std
push
popa
jecxz
mov
push
loopne
xchg
adc
add
or
popf
adc
in
stos
nop
scas
mov
mov
cmp
outsb
xchg
ret
xor
mov
push
inc
fildl
jmp
jns
push
mov
ret
mov
lret
and
icebp
mov
lock
popf
sub
xchg
in
add
aas
scas
adc
iret
mov
ja
cld
mov
fsts
jo
pop
inc
push
gs
mov
js
inc
jecxz
into
in
jl
dec
mov
mov
pop
or
clc
add
pop
cmp
mov
nop
cmpsb
inc
cmp
dec
scas
stos
adc
out
pop
jle
outsb
addr16
sub
fdivl
das
inc
or
or
mov
cltd
add
rcr
jmp
fdivrs
jl
lret
push
in
pop
sub
popa
fs
out
xchg
inc
cmpsl
or
push
pop
adc
mov
dec
test
and
mov
lds
clc
lahf
lret
in
scas
and
and
xchg
call
sbb
mov
mov
std
fwait
sub
mov
lret
xor
jcxz
movsb
adc
ljmp
loop
daa
pop
out
mov
ret
outsb
sub
ja
int
and
nop
imul
insb
push
cmp
fnstsw
mov
jbe
fwait
rorl
mov
dec
inc
mov
jle
mov
pop
insl
imulb
fwait
test
dec
jnp
lds
adc
cltd
negb
sti
or
hlt
push
sub
imul
les
add
cld
pop
and
rcl
pop
cmp
popa
cmpsb
jecxz
jge
popa
push
mov
push
mov
je
adc
pop
inc
sti
inc
jp
fwait
stos
out
mov
je
jp
mov
out
push
mov
fstl
pushl
ljmp
mov
push
mov
aas
movb
push
mov
mov
mov
stos
xor
nop
stc
jae
jae
mov
sub
movb
lock
adc
push
enter
xor
aaa
bound
mov
mov
xchg
xchg
daa
scas
cwtl
adc
add
repz
pusha
cltd
test
ja
lret
pop
jp
popa
out
movsl
mov
sbb
outsb
sbb
ja
testl
imul
dec
push
dec
adc
pop
inc
popa
into
stc
jg
add
and
xlat
cmp
pop
sub
adc
ret
imul
jbe
xor
inc
cld
std
dec
call
lcall
jle
movsl
shlb
outsb
lods
flds
mov
or
fisttpl
out
je
add
jnp
cli
les
stos
dec
jg
loope
jae
pop
cmc
or
incl
mov
mov
cmp
and
jo
pop
mov
testb
das
cmp
pushf
and
inc
inc
lea
adc
jg
stos
outsl
jl
repz
daa
inc
mov
fidivs
fs
loope
mov
mov
jns
arpl
xchg
clc
stos
js
cmp
pop
pop
add
jp
add
cwtl
out
jle
jle
pop
lods
xchg
mov
mov
pop
hlt
in
pop
out
mov
mov
or
push
xchg
pop
jmp
mov
xor
in
xor
and
and
mov
loop
cwtl
scas
and
dec
mov
int3
jecxz
rolb
adc
fdivr
stos
sub
add
pop
dec
out
aam
adc
cmp
sbb
fidivrs
mov
inc
fs
bound
cld
or
insl
sub
popa
cmpsb
add
pop
roll
into
jae
fs
pushf
movsl
test
cltd
mov
mov
xchg
out
pop
test
fldenv
roll
pop
sbb
and
fsubrl
aam
cmp
scas
ljmp
sub
inc
mov
enter
inc
orb
push
or
xorl
inc
jmp
shr
mov
lods
movsb
clc
repz
out
cld
jmp
dec
pop
sahf
shl
add
xor
aam
loop
orl
jbe
adc
inc
lcall
lret
je
outsb
cmpsb
mov
or
dec
dec
movsl
xlat
into
fs
sub
mov
fnstsw
fs
mov
aad
pop
divb
mov
pop
imul
aaa
aas
jmp
gs
aam
or
std
stc
movsb
or
push
popf
mov
pushf
mov
adc
pop
xchg
sbb
pop
xchg
sub
xor
mov
leave
jle
adc
sub
imul
bound
test
loop
dec
shlb
in
sub
daa
inc
sahf
rep
dec
int3
sub
jae
pop
pop
pop
outsl
shlb
arpl
jno
and
push
push
inc
xchg
or
push
or
push
push
pop
inc
scas
push
cli
movsl
test
xchg
lahf
nop
ret
scas
stos
dec
xor
imulb
push
sub
lea
cmc
ret
dec
and
mov
jl
out
sti
aas
movsl
loope
mov
adc
pop
push
jbe
pop
jno
dec
xor
inc
adc
icebp
popa
mov
shll
pop
fsubp
cmp
lods
cmp
int3
dec
data16
sbb
bswap
in
jbe
xor
xor
ret
jle
xorb
xor
mov
xor
cmc
cmp
or
adc
out
jnp
xor
jb
insb
sbb
adc
fwait
lcall
or
and
mov
mov
frstor
pop
lcall
push
out
add
ja
sahf
ret
cltd
dec
stos
fmuls
sbb
insb
mov
sub
add
test
pop
iret
out
jns
jbe
push
adcl
add
mov
leave
popf
mov
or
inc
push
xchg
movsb
out
das
add
repnz
sbb
push
lods
scas
and
ljmp
out
xchg
push
fistl
adc
cmp
push
lret
xor
push
lds
int
aas
or
mov
mov
rcl
dec
jo
dec
aaa
jns
pop
jno
fwait
aad
sbb
mov
pushf
bound
jno
out
pushf
arpl
repz
decb
inc
jecxz
lea
shrl
mov
and
aad
and
cmp
add
adc
cmpl
aad
fdivl
in
mov
or
pusha
stos
jg
xlat
mov
dec
aam
inc
std
push
xchg
sub
mov
sbb
mov
push
les
dec
clc
sbb
cltd
inc
fidivrs
mov
pop
negl
mov
sbb
in
xor
push
and
sbb
pusha
xchg
lret
jle
insb
sub
jmp
sbb
les
cmp
std
je
pusha
call
jo
shlb
mov
add
cli
xor
std
mov
inc
pop
das
fwait
inc
ja
shlb
jl
in
test
outsl
sti
into
sub
xorb
inc
or
out
inc
pop
adc
outsl
fdivr
loop
gs
es
lods
push
call
loopne
cld
mov
mov
call
push
mov
adc
dec
ret
push
imul
fs
push
mov
out
inc
mov
mov
jl
jp
xor
loopne
outsl
cwtl
imul
mov
xorl
push
pop
inc
fs
sbb
push
popf
aaa
fld
shl
into
es
and
jecxz
sub
pop
pushf
incl
jnp
js
cmp
or
orl
addr16
lret
adc
sub
idivb
scas
push
cmpsb
mov
scas
mov
es
idiv
jne
mov
pop
pop
jne
jne
aam
stos
inc
add
jecxz
out
movsb
out
outsl
dec
add
dec
adcb
or
clc
stos
aad
dec
mov
or
add
js
mov
outsl
lds
sub
popf
jl
inc
sub
movsl
rcll
inc
flds
mov
ret
out
or
inc
popa
lock
test
dec
jmp
popa
sub
jbe,pn
push
andl
adc
dec
imul
jnp
adc
push
insl
and
push
lcall
int3
or
stos
cmp
scas
jg
popa
add
addl
stos
adc
pop
xor
clc
lods
jno
stos
sub
mov
mov
mov
push
addr16
pop
and
sbb
jecxz
pop
fbld
cmp
or
std
in
sbb
or
outsl
cmpsb
xor
shrb
pop
mov
shlb
test
push
xchg
fwait
jmp
lahf
icebp
sarl
repz
roll
jl
push
mov
inc
mov
fistl
xchg
sbb
leave
push
int3
cmpsl
popf
mov
in
mov
push
cmp
push
pusha
mov
jge
add
out
sbb
stos
xchg
cmp
stc
mov
ret
inc
shrb
imul
and
mov
jns
cmp
cmpsb
lcall
mov
cs
outsl
data16
imulb
inc
pushf
xor
mov
or
in
mov
cmp
filds
cltd
ds
xchg
dec
jg
push
pop
lahf
iret
jmp
je
mov
notl
int3
mov
mov
fs
sbbb
out
xchg
not
lret
repz
mov
xchg
push
mov
jb
push
jecxz
mov
mov
jns
mov
popf
mov
and
cmp
mulb
sub
ret
and
mov
mov
lock
jns
inc
cmpsl
or
movsl
pop
push
inc
icebp
fnstcw
sub
movsb
fs
gs
xor
push
repz
cmp
sbb
fdivrs
xor
mov
or
pop
stos
mov
inc
je
mov
add
data16
adc
xchg
and
pop
jmp
add
sub
or
pop
aad
push
icebp
inc
daa
pop
insb
clc
inc
into
bnd
ficomps
adc
mov
pop
fwait
ret
xchg
cmp
xchg
dec
jl
iret
push
add
pusha
cmc
data16
jmp
clc
test
dec
stc
jne
divb
ja
loop
stc
inc
push
aam
iret
ljmp
jp
int3
sbb
pop
popf
mov
sbb
mov
fadd
push
jg
adc
add
jg
mov
iret
sbb
addb
add
in
pop
in
aaa
jns
std
adc
das
pop
cmp
or
dec
inc
mov
cmp
mov
push
inc
cld
shl
lock
or
inc
fistps
stos
pusha
data16
adc
cmp
in
xlat
and
push
stos
adc
adcl
jmp
mov
xchg
xor
cmp
hlt
repnz
repnz
and
mov
aaa
push
jg
cmp
xor
dec
mov
mov
sbb
push
mov
mov
mov
pop
dec
adc
movb
icebp
sub
gs
and
out
xor
out
inc
mov
rcrb
int3
xor
xchg
repz
add
lea
xor
lea
ds
pop
scas
push
pop
lahf
in
stc
add
fsubrl
dec
int3
iret
arpl
aaa
or
xchg
adc
test
sarb
mov
mov
inc
out
or
pop
lea
ja
pop
or
movsl
loopne
inc
inc
and
rclb
shlb
push
sub
pop
and
outsb
fwait
rorl
out
in
lea
repz
iret
test
fstps
loopnew
jo
pop
fsubl
push
arpl
cmp
jl
movl
add
movsb
in
inc
nop
push
sbb
mov
inc
fwait
jno
ss
add
mov
jp
sub
repnz
int
lods
mov
int3
push
cmp
add
flds
sarl
loopw
fxch
enter
mov
fiadds
xchg
in
sbb
sub
pop
dec
lcall
inc
mov
mov
shll
test
outsl
pop
test
nop
jecxz
xchg
bound
mov
jmp
idiv
jg
fsubrl
sub
mov
cmpsb
outsl
cmp
jle
clc
iret
sub
test
outsb
cmp
std
les
testl
pusha
mov
xchg
cs
aas
mov
push
stos
jo
lods
fidivrs
inc
call
inc
imul
mov
jge
repnz
clc
pop
pop
pop
rorl
je
mov
stos
or
mov
out
pop
clc
sub
bnd
adc
icebp
or
or
jne
hlt
lret
inc
fwait
pop
adc
ja
adc
xchg
scas
sub
and
xor
cli
adc
imul
ret
mov
dec
sub
rclb
movb
jp
mov
push
or
into
fisttpll
sbb
mov
jnp
pop
sub
repz
repnz
mov
jp
mov
push
adc
scas
pop
sub
sbb
icebp
or
mov
gs
xchg
orl
pop
xchg
iret
enter
out
dec
aaa
les
mov
rcl
lock
pop
fwait
mov
xchg
lea
iret
cmp
in
push
jg
sub
movsl
testb
jecxz
sub
scas
adcl
rcrl
ljmp
gs
frstor
cwtl
sub
mov
inc
std
push
outsb
test
lahf
fwait
push
aaa
imul
filds
xor
mov
xor
xchg
and
dec
push
arpl
gs
sub
inc
mov
in
xor
popa
sbb
push
mov
add
popf
bound
fadds
or
imul
ret
sub
je
cld
or
add
dec
mov
rolb
cmc
rorb
ficoml
fwait
scas
repnz
mov
mov
xchg
iret
fsubl
scas
test
lret
int3
sub
xchg
xor
fcoms
orb
nop
add
mov
aad
adc
cmp
cmp
jg
jg,pn
rorb
popf
orb
xchg
push
cmp
xor
mov
frstor
jbe
adc
cmp
divl
push
push
xchg
jns
sbb
cmp
out
push
imul
push
fdivs
add
arpl
sub
xchg
adc
xchg
dec
fimuls
pop
mov
jnp
pop
add
mov
jb
mov
shl
repz
adcb
pop
push
and
pop
lods
push
lods
mov
bound
out
dec
decb
pop
or
idiv
gs
cs
fwait
or
xchg
stos
sbb
imul
jne
ds
mov
sarb
shlb
in
xor
sub
mov
push
lcall
sbb
mov
dec
jle
dec
and
stos
push
mov
or
dec
out
mov
inc
data16
and
testl
in
addr16
out
idivb
lea
xchg
mov
cmp
or
mov
js,pn
dec
inc
push
cli
cli
push
push
nop
dec
adc
mov
test
loopne
xchg
pop
cmc
xchg
inc
pop
xchg
dec
mov
bound
out
inc
cmp
imul
test
mov
mov
push
xor
xchg
jp
mov
push
fisttpl
jecxz
sbb
insb
xor
or
sub
push
xchg
jecxz
xlat
insl
mov
sub
inc
mov
out
xchg
les
push
outsb
pop
add
lock
ja
xor
ucomiss
outsl
lcall
xor
adc
mov
lock
xor
fsubrl
and
cmp
out
aam
jge
inc
cwtl
mov
cli
lods
lock
mov
push
inc
je
jge
ja
es
adc
push
aam
je
dec
lret
loope
and
jne
subb
jbe
aas
add
lods
pop
push
cld
les
popa
rolb
fisubs
xor
or
cmpsl
mov
push
xchg
add
or
push
xchg
and
add
mov
cli
pop
push
sbb
jno
pop
lock
and
mov
loop
ljmp
shll
mov
pusha
test
bound
mov
mov
pop
cmp
mov
repz
hlt
mov
out
les
stc
pop
mov
or
iret
insb
data16
mov
push
or
leave
xchg
inc
out
jle
pop
rcll
loop
enter
lahf
pop
scas
call
in
std
xchg
filds
test
mov
xchg
jl
dec
shl
das
sti
test
jns
scas
adcl
addr16
adcl
mull
out
and
push
and
sbb
mov
push
jb
push
cmp
into
outsb
pop
nop
fdivs
cmp
pop
mov
inc
aad
mov
pushl
popa
mov
push
fistpl
test
fs
pop
adc
sub
hlt
lods
mov
push
cmc
jne
ja
shll
adc
pusha
movlps
sar
sbb
jne
lds
xchg
jne
xor
fbld
je
hlt
jle
popa
lods
orl
std
sbb
and
cmp
pop
xchg
std
push
mov
pop
icebp
or
xchg
xchg
rcrl
aad
mov
pop
cmp
movsl
xchg
sarl
dec
mov
idivl
mov
inc
push
sub
sub
test
idiv
fcomps
lods
add
cmpsl
cs
mov
jbe
or
shrb
sahf
in
lcall
out
sbb
lods
xchg
cmp
rorl
in
movsb
popa
loope
outsl
imul
cmp
lret
addl
mov
or
xor
lds
pop
scas
arpl
imul
popa
enter
mov
jge
inc
inc
push
inc
test
and
mov
sub
out
stos
aad
and
in
js
insl
mov
rcrb
popf
sbb
jge
sbb
leave
rcr
lret
daa
clc
jo
out
cmpb
mov
data16
jae
paddusb
cmp
js
dec
test
sub
in
dec
or
and
inc
sub
gs
pushf
call
push
int
push
xor
pop
shrl
minps
jmp
daa
cmp
js
sbb
mov
mov
xchg
sti
aas
jecxz
cwtl
inc
loopne
jecxz
sub
outsb
movsl
adc
mov
cli
ficomps
jo
dec
push
push
popf
std
dec
pop
mov
callw
pop
pop
into
pop
in
popa
lea
inc
and
stos
jmp
xor
inc
aam
cmc
jne
cmp
sbb
aam
add
fistpl
in
jp
fldcw
mov
icebp
pop
sbb
sub
xor
and
push
xchg
push
push
test
xchg
dec
jns
sahf
mov
test
mov
pop
jnp
dec
inc
sub
sub
in
cmp
adc
sbb
jne
or
pop
inc
repz
mov
loope
rcrb
dec
stc
outsb
xchg
push
inc
xor
push
ljmp
pushf
imul
jb
aad
les
lret
inc
pop
jne
sbb
in
jae
out
adc
inc
fsubs
cmp
mov
mov
pop
jle
push
dec
cmpsl
push
or
cmp
mov
std
push
loop
push
xchg
test
stc
sub
push
loope
jl
andl
hlt
add
cmp
adc
cld
or
xchg
xchg
or
mov
xchg
xor
in
ficomps
inc
mov
std
mov
mov
adc
push
mov
je
sbb
loope
pop
pop
xchg
or
out
aas
adc
fldenv
hlt
aas
lods
insb
pop
sub
adc
ret
leave
popa
sub
test
push
xchg
scas
pop
lods
cld
or
xchg
jns
mov
lea
xchg
aam
dec
inc
xchg
and
add
dec
scas
fwait
loop
mov
xlat
loopne
decb
stos
jecxz
rcrb
pop
jle
in
hlt
mov
negl
fdivl
outsb
cld
in
stos
data16
cmp
xchg
sbb
xor
dec
cwtl
cmc
adcl
add
jmp
repnz
jmp
decb
inc
pop
add
lods
andb
sahf
mov
pop
shll
call
out
add
sahf
stos
fsubrp
int3
shl
xchg
pop
idiv
leave
xchg
sbb
push
jge
sbb
jbe
jmp
addr16
sbb
inc
je
sarb
in
aas
bnd
jl
mov
test
test
pop
add
inc
out
push
in
ror
cmp
push
sbbb
mov
sub
cld
push
cli
addr16
xor
mov
adc
popa
jns
stos
popa
adcb
mov
xor
dec
dec
ret
add
sub
stc
jae
and
sbb
sub
xchg
pop
pusha
inc
sbb
dec
mov
inc
mov
je
and
std
add
fadds
icebp
and
icebp
push
das
int
jae
xchg
jnp
fiaddl
mov
adc
sbb
clc
in
popa
shrl
add
and
mov
rcll
mov
mov
xchg
pop
pop
push
xor
cld
jns
xor
cmp
sub
enter
aaa
xorl
divb
xchg
mov
push
addr16
dec
pop
jp
and
and
sub
mov
es
sbb
mov
sbbb
data16
js
add
adc
mov
fucomi
repnz
int3
movl
insl
inc
mov
imul
lret
leave
out
nop
and
bnd
or
fdivl
adc
je
adc
cmp
cltd
pop
lods
enter
popf
sbb
xchg
call
sub
arpl
pop
pop
fsts
scas
or
lods
xchg
fildl
add
dec
lods
pusha
xor
jnp
jo
cli
aaa
fsubl
add
out
lods
aam
cmp
mov
pop
fnstenv
adc
bnd
cli
bound
les
sahf
mov
push
inc
data16
jbe
shl
jmp
int3
mov
inc
jge
push
push
lret
dec
outsl
mov
cli
sbb
stos
sarb
rorl
or
cmp
mov
dec
push
jge
fidivs
outsl
mov
push
jl
sbb
xchg
ret
aas
dec
jo
stc
push
data16
mov
push
jno
pop
adc
push
or
sahf
inc
nop
or
das
sbb
inc
pusha
ficomps
jo
and
dec
mov
and
outsb
dec
inc
bound
cmc
xchg
sub
fldcw
setne
jns
jbe
jne
out
and
push
sti
addl
and
dec
enter
inc
or
out
adc
in
and
in
dec
test
adc
mov
fwait
mov
mov
and
outsb
jnp
test
shll
pop
out
nop
jne
cmp
cmc
or
xchg
add
or
popf
bound
jl
dec
cmpsb
push
ret
add
loop
mov
mov
sbb
cmc
or
cmp
ja
jl
inc
das
mov
or
push
mov
inc
sub
pushf
dec
push
mov
mov
fwait
andl
dec
sbb
or
jns
movb
sbb
jnp
xchg
std
mov
mov
mov
push
mov
pop
fistps
das
push
es
psrlw
adc
out
cltd
cli
mov
fwait
pop
sub
mov
inc
mov
icebp
mov
leave
pop
adcb
xchg
xchg
adc
and
pop
jmp
pushl
test
mov
les
mov
cld
leave
xor
mov
shlb
incl
push
adc
mov
jle
test
xor
das
pop
sahf
sub
inc
pop
dec
mov
jbe
jge
xchg
movsb
bound
adc
pop
mov
call
in
and
xchg
fstps
sub
mov
popa
imul
push
imul
mov
jmp
mov
imul
mov
add
inc
insb
repnz
jo
divb
add
xor
adc
push
push
inc
test
jb
aad
mov
lahf
add
mov
lea
shrl
popf
inc
xor
add
insb
lods
lret
aad
outsb
mov
xchg
jae
lahf
xchg
xchg
xor
mov
es
jecxz
out
and
push
xchg
xor
xchg
shlb
pop
and
sbb
movl
scas
jo
and
fldcw
sahf
xor
sbb
and
and
mov
subl
xor
lret
popf
mov
add
icebp
inc
or
xor
flds
outsb
fldt
stos
shll
fsubrl
mov
push
and
push
or
pop
mov
imul
mov
dec
nop
cmpsl
das
in
and
cltd
in
inc
add
daa
in
loop
ror
mov
sbb
lock
movsl
lret
xchg
sub
sub
stos
cmp
add
inc
fwait
out
xchg
add
insb
imul
mov
scas
lret
cmp
or
daa
fiaddl
cmc
mov
test
jo
jb
pop
pop
add
mov
xor
fstps
adc
imul
int3
fwait
mov
push
mov
pop
add
mov
shl
sub
jg
loop
and
pushf
sub
and
dec
inc
shll
loopne
push
addl
lret
jp
push
out
jae
adc
sub
mov
mov
xlat
add
and
cmp
sbb
adc
mov
mov
cmp
idivl
aas
lcall
ja
sbb
jne
xor
or
adc
adc
inc
stos
dec
jmp
in
rep
dec
xchg
xor
jl
loop
jp
aas
sahf
js
sti
cli
mov
aas
xor
filds
fiadds
push
aas
popf
aam
out
cmp
mull
js
jle
loopne
loope
fistps
mov
pop
std
inc
std
and
sbb
mov
adc
jg
enter
mov
dec
jns
aam
sbb
pop
xor
insb
mov
xchg
sub
aas
sbb
aas
mov
inc
dec
imul
dec
js
mov
sbb
inc
lods
insb
or
xor
push
mov
sub
push
xchg
movsb
push
pop
fistpll
mov
mov
cmpsl
dec
arpl
xchg
nop
jo
pop
ljmp
int
in
test
inc
push
ljmp
fstpt
lods
movsl
faddl
inc
aas
xchg
aas
inc
or
mov
cmp
pop
add
lods
xchg
hlt
arpl
pop
sub
lock
repnz
pop
inc
arpl
dec
mov
add
sub
or
pop
dec
or
pop
movsb
in
je
sbb
ret
repz
std
hlt
dec
sbb
gs
loope
push
and
pop
sub
inc
iret
aas
mov
mov
lea
pop
orl
in
in
add
imul
push
sahf
repnz
lods
adc
dec
push
adc
xchg
loop
cmp
sbb
ljmp
cmp
xchg
mov
leave
push
gs
mov
call
loopne
push
out
mov
mov
sub
lret
and
in
leave
lret
fiadds
pop
cmp
push
or
jl
adc
or
xor
sbb
loope
jae
xor
jne
push
xchg
xor
dec
sbb
jp
push
pusha
loopne
subb
or
inc
sub
lds
fimull
sbb
cmp
xchg
stos
xchg
mov
enter
arpl
cmpsb
pop
add
repnz
add
mov
pop
lret
jnp
push
mov
stc
cwtl
movsb
xor
inc
pop
lea
lret
data16
movsl
incb
icebp
imul
mov
pop
leave
cmp
add
xchg
add
adc
dec
es
loopne
out
test
out
push
xchg
cmp
jno
sbb
add
ja
cmp
or
mov
pop
jnp,pn
dec
icebp
cvtdq2ps
sahf
or
add
pop
popf
imul
repnz
xor
das
test
push
imul
mov
cmp
lods
jne
stc
fnstenv
push
call
pop
fldenv
sbb
aad
pop
cmpsl
jne
cmp
pushf
push
in
mov
dec
stc
cwtl
das
mov
push
mov
shl
cmp
mov
test
clc
adc
jle
jb
lods
pop
sub
jo
push
dec
mov
adcb
add
in
out
out
mov
push
mulb
je
mov
rclb
xchg
faddl
jno
stos
xchg
in
add
pop
xchg
mov
leave
add
ficomps
xchg
je
jle
adc
dec
jo
and
daa
cmpb
fisubs
push
sub
mov
cltd
fldl
sub
out
or
jbe
sar
insl
sbbl
or
jecxz
fildll
call
loope
xchg
xor
cmp
shll
mov
add
cmp
sbb
popf
movsb
iret
mov
mov
cmp
ja
icebp
cmp
hlt
sahf
mov
pop
std
adc
jl
mov
int3
ret
lret
test
mov
sahf
test
dec
and
jae
and
xchg
sbbb
gs
pop
mov
mov
stos
cmp
adc
xor
cmp
movsb
lods
xchg
xchg
jge
or
pop
ja
ja
jae
pop
loop
fsub
pop
dec
aaa
mov
and
mov
pop
cmpsl
cmp
div
ja
xor
inc
pop
and
nop
call
dec
mov
roll
xor
xor
mov
mov
mov
enter
dec
rcrb
pop
das
data16
cs
adc
xor
fmul
shrl
aas
cmpsb
inc
jmp
mov
int3
xor
icebp
or
loop
cmc
rorb
dec
rorb
inc
pop
call
dec
sbb
inc
xchg
cmpsl
les
dec
sahf
sbb
mov
in
flds
mov
fistps
ret
pop
dec
dec
js
jmp
add
mov
pop
sarb
rcl
sbb
push
cltd
xlat
rorb
mov
cmp
xchg
dec
repz
scas
mov
xchg
fcomp
mov
rcll
in
scas
adcb
movsb
out
insl
adc
loop
jb
sbb
leave
imul
cmpsb
lods
and
insb
add
mov
fcomip
push
xchg
dec
stos
nop
rorb
in
push
inc
in
jecxz
addl
rclb
and
jl
and
mov
push
jnp
jg
cld
lods
ljmp
mov
cmp
pop
mov
repnz
fs
add
stos
mov
inc
push
pushf
iret
shufps
shlb
and
movsb
dec
jne
dec
addr16
add
xchg
inc
xchg
pop
mov
add
cmp
mov
test
and
push
lds
or
xchg
les
inc
pop
stc
xor
mov
test
xor
jecxz
or
in
cmpsl
adc
or
dec
jg
mov
adc
inc
push
push
out
std
andb
pop
cltd
mov
pop
xor
into
lret
in
xor
movsl
test
xchg
mov
xchg
stc
xor
rorl
jbe
repz
popf
call
jmp
scas
adc
fisubrl
add
test
addr16
loope
ljmp
insl
shr
push
outsb
in
pushf
jmp
test
imul
cltd
repz
inc
sub
jg
mov
fwait
mov
xchg
adc
xchg
push
fmull
xchg
xlat
push
pop
in
les
mov
call
pop
push
xor
out
pop
bnd
and
xchg
mov
cmpsb
popa
fistps
rcrb
aad
push
and
mov
outsl
jno
or
fldenv
jg
ds
shl
mov
sub
xor
in
imul
je
pop
je
push
loop
in
push
mov
add
lahf
cld
sub
gs
out
add
xchg
pushl
jns
pop
inc
jle
popa
stc
xchg
lea
add
mov
lock
repnz
je
popa
xorl
add
popa
xchg
pop
fsubrl
and
jne
or
int
xlat
fisubrl
popa
in
aas
xlat
push
cmp
out
sbb
inc
pop
movsb
cwtl
cwtl
sbb
fwait
int3
jle
or
mov
mov
cwtl
cmpsb
pop
dec
xchg
inc
test
mov
dec
into
into
sbb
cmp
repz
mov
push
dec
jbe
les
ret
sahf
jmp
adcb
inc
mov
pop
jge
orl
aam
inc
cmpsl
add
stos
out
sub
inc
and
cs
push
sub
push
ret
mov
out
dec
cmp
out
jl
jo
jmp
and
or
aam
mov
iret
mov
lahf
shll
jmp
pop
pop
ror
mov
imul
sbb
xor
mov
les
and
cmpsl
mov
gs
out
insb
movsl
aad
or
aad
cs
mov
rorb
pop
repnz
pusha
or
lock
leave
pushf
sub
mov
lret
push
mov
mov
adc
adc
cmp
fdivrl
cwtl
inc
pop
push
andb
test
inc
sbb
mov
sbb
or
xchg
mov
push
or
lods
add
icebp
js
std
imul
leave
jbe
imull
outsl
hlt
sahf
xchg
sbb
mov
inc
add
inc
push
lds
mov
pop
ss
ds
add
inc
ficoml
dec
push
adc
inc
xor
popa
cli
jmp
sbb
movsl
pusha
loopne
push
repnz
mov
es
in
xchg
ja
test
fwait
movsb
or
aaa
shrl
fisubrl
push
jecxz
lcall
jl,pn
jp
push
mov
test
pop
insl
adc
int
lods
and
push
push
subb
sti
sahf
xchg
and
jbe
or
dec
in
divb
aad
testb
ss
push
in
xchg
inc
push
inc
adc
or
fsqrt
stos
pop
xchg
sub
mov
mov
std
pushf
sbb
cmc
outsb
aas
daa
fcoml
xchg
lods
cmp
push
cmpsb
jge
push
iret
shll
jge
popf
inc
xor
aad
sbbb
inc
mov
stos
mov
push
mov
popa
and
xlat
cmc
adc
jne
daa
jecxz
clc
jmp
and
and
movsl
dec
pop
jb
push
push
mov
std
in
jp
dec
dec
add
fistl
aam
scas
sbb
sub
imul
push
mov
mov
mov
arpl
mov
or
rcrb
loope
scas
jno
repz
xchg
test
cld
inc
cmc
shrb
jecxz
push
ljmp
sbb
aam
data16
xor
dec
xchg
lahf
inc
pop
nop
clc
and
fwait
jmp
lahf
inc
cmp
in
cmpl
jo
dec
les
mov
aam
outsb
mov
fisttpll
cmpsb
adc
lret
mov
cmc
int3
mov
xor
adc
push
cmp
ja
sub
nop
mov
sub
push
scas
cmp
jns
es
and
jmp
in
mov
movsl
mov
divl
stos
and
ret
xchg
stos
push
xchg
sbb
hlt
addr16
lods
push
daa
pop
movsl
sbb
push
mov
sbb
out
nop
cld
in
inc
pusha
out
pop
adc
add
ret
leave
or
out
or
shl
push
and
push
lcall
adc
std
push
je
sub
xlat
dec
mov
pop
jnp
test
gs
mov
mov
xor
inc
cmp
push
sub
dec
pushf
mov
mov
jp
add
dec
cvtps2pd
or
les
stc
jbe
jo
or
movsb
dec
es
pop
dec
movsb
iret
stc
and
jb
test
sbb
out
fsincos
icebp
stos
xlat
sbb
lods
sub
cmp
not
xchg
shrl
xor
mov
aaa
bound
pusha
inc
mov
cmp
dec
repz
jb
mov
ror
jne
inc
popl
sarb
dec
das
jmp
insb
pop
outsl
movsl
inc
adcl
test
mov
jns
inc
xor
ljmp
sti
outsl
imul
iret
shld
sub
mov
inc
imul
shll
and
and
enter
mov
das
js
popa
mov
dec
mov
adc
das
in
mov
lret
cmp
xchg
das
sub
fcomp
cmp
push
cmp
xchg
call
pusha
xor
ret
lods
dec
mov
inc
rclb
mov
out
cmp
and
lods
je
mov
shr
adc
shrl
in
repnz
sub
mov
mov
les
jne
scas
and
stc
push
sti
adc
pop
in
ret
lods
outsl
adc
lock
out
test
add
cmp
dec
mov
mov
out
arpl
inc
into
mov
cmp
das
xchg
mov
sub
into
add
jo
shrb
jbe
arpl
insb
movsl
lret
xchg
push
or
shrb
addb
push
push
jbe
insl
out
and
or
mov
mov
adc
xor
in
mov
sarb
cltd
mov
xchg
or
push
clc
sti
mov
cmc
or
pop
cmpl
push
fsubrs
pop
jmp
jge
test
mov
test
fsubrl
jle
shl
call
out
mov
outsl
jmp
leave
sbb
pop
out
scas
int3
sub
add
in
out
fs
mov
dec
movsl
jbe
sahf
mov
ret
clc
insl
pop
iret
test
sarb
or
jae
aas
inc
cmp
xor
mov
or
int
mov
rcr
xchg
test
push
bound
add
mov
in
mov
imul
jnp
jo
insl
cmp
scas
movl
jg
lods
and
mov
addr16
js
aas
add
inc
fldl
lods
xchg
xor
dec
nop
lahf
adc
ljmp
les
add
loopne
test
jp
dec
and
icebp
push
mov
fwait
xchg
cld
fistpll
rcrl
imul
inc
pop
inc
aad
out
lcall
subl
mov
dec
jo
push
cli
aam
pushf
push
pop
xchg
js
jmp
mov
stos
test
repnz
dec
ds
jg
sub
leave
xchg
cmp
jnp,pt
push
add
into
lcall
int
adc
push
xchg
mov
test
dec
es
ss
mov
xor
gs
sub
mov
das
outsb
and
push
lods
fidivl
dec
sub
int
subb
pusha
mov
or
inc
rorl
out
sarb
cmp
data16
movsl
or
int3
in
mov
jmp
fldenv
dec
dec
sbb
xor
pop
les
pushf
push
in
pop
lds
ljmp
arpl
dec
sub
out
and
jno
mov
pop
mov
mov
and
xchg
xor
daa
psubb
ret
xchg
fdivr
in
mov
sub
push
sahf
push
inc
loope
iret
xchg
mov
pop
orb
add
loope
or
fcoml
enter
loopne
mov
pop
fidivrs
jp
xor
imul
mov
jnp
mov
mov
outsb
loope
sub
stc
jbe
test
aam
and
xor
cmp
mov
cmpsl
inc
pop
push
xchg
cmp
out
cmp
xor
jg
xor
push
jns
es
sub
sbb
mov
test
or
daa
outsl
into
cmpsl
cmpsb
sub
ret
sub
insl
jns
cmpsb
pop
jl
daa
sahf
arpl
adc
stos
sub
dec
enter
data16
xchg
mov
fsubs
mov
lods
inc
mov
popa
ret
int
sub
std
testl
test
cmpsb
mov
pop
ds
and
push
sbb
push
and
push
arpl
arpl
loopne
cltd
movsb
je
mov
add
sbb
rcrl
fwait
ret
lcall
pusha
or
fstpt
dec
rorl
dec
repnz
js
xchg
in
mov
imul
sbb
dec
jmp
popa
outsb
jp
xor
fstpl
push
xchg
daa
aad
aaa
test
in
pop
insb
icebp
sahf
leave
xchg
and
pmaxub
mov
lock
or
adc
xchg
icebp
push
and
leave
lods
pusha
xchg
addr16
fldz
daa
sbb
pop
inc
add
add
mov
mov
gs
adc
inc
xor
adc
mov
into
pushf
sub
mov
jbe
int3
mov
movsl
dec
fwait
insb
pushf
mov
add
test
movsb
aad
das
cs
ljmp
cld
add
push
adc
stos
and
xchg
dec
dec
add
push
test
insb
push
adc
shrb
cmpsb
xor
cmp
inc
in
pop
pop
mov
les
jg
fildll
jp
ret
in
push
jge
sti
test
jg
ss
add
pushf
sub
add
das
scas
add
ds
xchg
iret
pop
cs
pop
mov
xchg
enter
jne
sbb
push
shll
stc
adc
rol
and
fldenv
xor
je
or
cld
or
pop
xchg
jne
mov
pop
in
push
jb
push
xchg
repz
mov
rcr
mov
mov
adc
mov
dec
inc
fldlg2
jnp
push
dec
dec
mov
push
sub
mov
ss
stos
mov
or
push
push
jne
fdivr
hlt
cwtl
mov
lret
sub
lock
das
test
xlat
divl
pop
sub
and
stc
sub
ja
or
jno
jns
ret
jl
subl
mov
cmpsl
testb
sarl
scas
jne
add
mov
fwait
and
jg
andl
xor
lret
or
adc
push
nop
jns
inc
pop
cmp
xchg
test
into
push
pop
cmp
loope
stc
dec
dec
dec
pop
fcmovu
das
fnstenv
popa
lea
xor
daa
jbe
sbb
cmc
aaa
adc
call
cmp
jno
lahf
adc
sbb
jo
xchg
mov
out
mov
jle
mov
sbb
xlat
adc
fwait
cmpps
loopne
mov
adc
jge
das
push
icebp
xlat
mov
or
dec
xor
pop
rcrl
and
test
mov
mov
rcll
mov
sbb
dec
sbb
push
or
ljmp
add
cs
mov
mov
in
cmp
push
das
popf
mov
imul
sahf
and
lods
addl
xchg
popa
je
mov
and
hlt
mov
addl
jge
notb
daa
mov
adc
push
imul
loopne
jae
jae
or
dec
clc
insl
cmpl
mov
cmp
adc
pop
jmp
inc
lods
rolb
rcrl
test
mov
mov
and
mov
ljmp
push
jg
loopne
cmp
lcall
out
fldt
loope
imul
push
mulb
pop
lea
cli
jp
xchg
jns
push
fisubl
cmp
push
sbb
mov
int
cmp
cmpsb
loop
push
int3
rcll
icebp
mov
fstpt
imul
mov
jo
xchg
inc
shll
ja
xlat
mov
sub
sub
cli
popa
out
jnp
out
pop
pop
arpl
xor
jns
push
cld
movsl
dec
jb
loopne
outsb
add
and
scas
ret
stc
jg
in
jp
and
mov
clc
add
sbb
in
repnz
or
lret
ja
out
xchg
xor
hlt
xchg
mov
pavgb
aas
in
out
filds
inc
xorl
insb
inc
out
xchg
and
mov
shrb
sub
fs
sbb
sub
mov
in
dec
mov
mov
fists
outsb
idivl
pushf
out
popf
das
and
mov
and
repnz
aam
jbe
inc
pop
pop
sahf
adc
fcomps
add
cs
outsl
lds
xacquire
andl
jns
enter
mov
mov
in
iret
loope
aaa
test
and
lcall
int3
mov
pushf
rol
sbb
mov
cmp
les
and
ljmp
or
and
push
xor
push
add
subl
arpl
jo
sub
std
push
imul
adc
sub
mov
sub
add
pop
inc
push
bnd
mov
xchg
or
out
cmp
sahf
mov
and
mov
stc
pop
outsb
mov
mov
mov
or
leave
rolb
xor
and
test
sub
inc
sbb
rcrb
sub
movsl
sub
cltd
test
ret
xor
mov
sahf
pop
in
sub
loopne
cmp
lahf
loopne
nop
popa
dec
sti
or
hlt
push
mov
cmp
and
call
xchg
cli
push
popf
dec
les
push
fs
cmp
dec
push
rcrb
mov
mov
loop
adc
dec
hlt
ds
ret
loope
inc
cmp
add
cltd
iret
fidivl
in
mov
lahf
sbb
fdivrs
or
xor
add
mov
pop
dec
int3
adc
or
scas
ret
enter
lds
sub
out
pop
outsb
sub
add
pop
adc
neg
push
out
repnz
test
test
pop
jp
cmp
jl
cwtl
xchg
or
sbb
lret
ljmp
or
ja
xchg
ret
iret
jg
sahf
gs
xchg
adc
in
into
leave
mov
cmpsl
sub
mov
push
mov
cmp
imul
ret
mov
pop
popa
rorl
data16
cmpsb
insb
idivb
pop
and
aaa
shl
ljmp
cmp
or
lods
das
or
test
sub
adc
test
cmp
das
inc
xlat
mov
das
lea
or
ljmp
sbb
inc
fucomp
imul
loopne
roll
movsb
lret
pop
lods
es
pop
mov
test
jno
add
xchg
xor
js
mov
push
out
orl
pop
pop
mov
adc
sahf
mov
sub
aad
out
ffree
add
push
add
icebp
xor
dec
int3
ficoms
scas
dec
mov
push
push
inc
ret
fcmovu
mov
stc
push
out
mov
mov
les
and
jp
dec
push
push
mov
or
into
scas
pop
imul
je
jmp
xchg
add
xchg
dec
push
push
adc
inc
lods
lcall
lea
test
arpl
inc
jmp
out
inc
jnp
repz
hlt
out
mov
sti
inc
mov
ds
lcall
mov
sub
adc
dec
dec
jae
lretw
mov
bound
in
jl
pop
ja
xchg
jbe
push
or
cmp
cmc
daa
out
adc
dec
nop
xchg
je
fs
add
xchg
push
jmp
cmp
out
aad
dec
push
push
sub
pop
mov
nop
pop
mov
inc
sahf
adc
cmpsl
push
into
xchg
int3
sub
das
add
xchg
sub
mov
movsl
mov
clc
or
xor
mov
scas
jno
xor
cli
xchg
scas
cmp
cli
test
mov
push
loopne
sti
pop
mov
ss
out
add
xor
in
lret
xor
cld
or
shll
clc
insb
fstpt
ds
push
lods
mov
stos
outsl
adc
mov
mov
iret
xchg
loope
mov
in
pusha
xor
jbe
adc
pop
xchg
scas
xor
loopne
sbb
dec
test
mov
mov
sbb
imul
pusha
pop
jo
jnp
xchg
lret
xor
push
mov
jb
test
dec
sti
pcmpgtb
aas
inc
pop
test
std
repz
pop
dec
mov
cmp
inc
repnz
lret
mov
scas
popa
cld
and
in
jecxz
jnp
mov
or
and
fmull
outsl
cmp
dec
lods
add
xchg
cltd
sub
jg
pusha
adc
jl
inc
or
inc
lods
mov
sub
icebp
push
mov
mov
add
rcl
and
sub
mov
mov
in
pop
lds
dec
jo
mov
ja
outsb
js
mov
lods
hlt
cltd
aam
adc
mov
pop
incb
adc
cwtl
or
cs
lret
aad
add
xchg
sbb
xchg
stos
pop
lret
mov
and
sub
jo,pt
xchg
je
dec
mov
aad
xchg
and
mov
sub
out
pop
iret
pop
mov
jne
movsb
inc
jns
adc
test
je
jle
sahf
bound
mov
test
mov
lods
call
sbb
test
inc
divl
mov
clc
aas
out
jmp
sub
xor
mov
dec
shll
daa
scas
aaa
es
inc
cwtl
sbb
xchg
outsb
mov
ja
pop
jb
subb
sub
iret
pop
mov
popf
xor
xor
cli
mov
jns
mov
lods
hlt
pop
ljmp
outsb
loopne
test
adc
xor
jecxz
cmp
xchg
jbe
and
icebp
lahf
into
push
xor
sbb
sub
mov
inc
mov
pushf
push
lock
push
out
in
lds
mov
out
imul
orl
push
out
fwait
aad
lea
popf
fiaddl
aaa
ret
movsb
data16
sti
ret
mov
add
push
iret
fmull
pop
or
data16
gs
add
jno
sarl
movsb
sbb
repnz
ret
icebp
mov
fists
gs
lds
fistl
pop
ljmp
add
sti
scas
mov
or
sub
adc
mov
adc
out
leave
and
xor
test
add
aad
mov
jne
xor
lock
dec
mov
cmp
add
xchg
and
std
aam
imul
jno
mov
or
sbb
rclb
nop
pushf
or
leave
test
xchg
mov
jmp
mov
xor
test
iret
dec
inc
add
mov
pushf
out
jno
cwtl
add
stos
mov
jl
sub
repnz
int
outsl
push
push
mov
pop
dec
flds
int3
es
out
adc
mov
test
xor
cwtl
add
mov
xor
das
jp
loopne
xchg
in
lods
es
mov
push
in
in
jp
pop
xchg
jmp
pop
aad
mov
sbb
xor
inc
call
cmpb
data16
aaa
mov
mov
pop
add
add
lock
icebp
in
adc
inc
scas
inc
mov
or
pop
mov
mov
mov
aas
xlat
js
out
lods
adc
stos
sahf
dec
cmp
push
pop
cmpl
test
inc
jne
jno
leave
cmp
inc
in
xchg
icebp
fistl
adc
inc
adc
mov
pop
mov
xchg
das
push
xchg
mov
lods
leave
jle
mov
xchg
mov
bound
inc
cmc
cltd
lods
sub
and
push
xor
cs
loop
push
push
jnp
lds
mov
insl
fcomp
cwtl
out
repz
addb
and
xor
cmc
push
xchg
mov
out
addr16
cmp
enter
mov
das
xchg
mov
push
push
repz
push
jb
movsb
mov
and
or
cmp
gs
imul
add
test
repnz
cmp
sub
lds
movsb
xlat
cmpsl
fiaddl
lea
hlt
jp
jle
add
popa
xchg
mov
and
fimull
test
add
adcl
cwtl
mov
xor
pop
into
mov
arpl
dec
inc
pop
inc
xor
lods
xchg
shl
popf
push
shll
mov
adc
inc
jge
or
xchg
sarl
enter
pushf
mov
andb
adc
lret
push
iret
test
in
aaa
std
push
fisttpll
and
lea
mov
out
repz
arpl
push
subl
mov
leave
push
pop
call
mov
in
dec
adc
xchg
xchg
mov
or
inc
push
xor
inc
dec
cs
cmp
or
fcomp
sahf
pop
sbb
in
pop
insl
lock
stos
shll
push
pushf
push
mov
jb
xchg
inc
inc
les
in
mov
mov
mov
rcr
scas
mov
mov
stos
mov
pop
inc
jns
js
fnsave
jmp
jbe
pop
jnp
arpl
scas
xchg
test
cwtl
ss
lods
cmp
dec
push
inc
add
daa
push
add
outsb
and
push
mov
repz
pop
add
js
jecxz
pop
adc
push
mov
cwtl
lods
daa
push
xor
rolb
mov
shlb
jge
stos
pop
and
addb
dec
xchg
in
jb
xchg
iret
jne
ja
loop
lods
insl
or
aaa
in
sbb
mov
and
scas
xchg
mov
cmc
mov
mov
lcall
int
xchg
aam
lret
pop
fdivrs
adc
xchg
sub
xchg
or
sub
sar
sbb
popa
pop
gs
dec
leave
push
out
lret
xchg
sbb
dec
and
sub
dec
aam
xor
lea
fs
mov
aas
mov
out
xchg
movsb
dec
pop
mov
jae
mov
faddp
xor
fucomip
dec
inc
mov
ffreep
pop
adc
out
test
aam
lea
and
inc
add
mov
neg
mov
stc
pushf
fnstsw
lea
insl
mov
xor
jecxz
rcrl
clc
pop
out
pop
lcall
scas
outsl
outsb
out
stos
filds
popa
in
cmp
cmp
mov
xor
jne
hlt
xor
stos
pop
in
fdivs
dec
push
cmp
inc
xchg
out
or
sub
mov
je
jg
cwtl
in
aaa
lea
je
in
mov
into
loopne
sbb
fwait
adc
iret
das
aam
mov
clc
pop
jbe
mov
jmp
xchg
cmp
sub
popf
push
or
inc
sbb
lock
popa
cmc
adcl
pop
mov
repnz
repz
enter
sub
stos
imulb
imul
cmpsl
mov
or
push
les
jg
pop
and
and
test
and
mov
mov
daa
pop
mov
pop
aas
sbb
add
add
ds
pusha
jae
and
and
jl
mov
mov
dec
sti
fisttps
mov
cli
sub
clc
mov
or
adc
test
push
pop
sub
mov
or
clc
mov
vpaddusb
popa
dec
sti
dec
adc
sti
cmp
pop
aad
stc
imul
mov
es
push
and
xchg
out
ret
sbb
mov
push
mov
outsl
data16
pop
out
addr16
pop
pop
xchg
cs
rcr
lock
add
dec
loop
mov
jmp
dec
mov
insb
push
nop
imul
or
mov
adc
dec
test
or
cmp
mov
xchg
insl
pop
cwtl
stc
repnz
ret
cli
in
rcll
pop
repnz
jnp
jecxz
mov
push
loop
loopne
pop
mov
xchg
cld
aaa
test
repz
movsl
pop
stos
test
cmpsl
mov
ffreep
fnsave
iret
pop
adc
mov
mov
mov
rolb
popa
sti
and
pop
pushf
mov
test
pop
lret
sub
aam
jne
mov
sub
fwait
cmpsl
pop
clc
shrb
push
adc
mov
sub
test
negb
dec
cwtl
mov
xchg
jbe
inc
popa
shrl
daa
fnstsw
popf
lret
inc
filds
mov
sbb
aad
push
addr16
cltd
addr16
mov
out
mov
dec
sub
insb
cwtl
xchg
lods
shll
push
shr
jge
es
adc
xchg
inc
or
mov
test
xor
fwait
mov
push
pop
cmp
fmulp
xor
adc
mov
xchg
cmp
sbb
xorl
mulb
lods
popa
cs
mov
sahf
adc
inc
cmpl
pop
pushf
pop
inc
sub
cwtl
out
ror
mov
nop
xchg
mov
iret
shll
out
out
test
movsb
mov
imul
push
and
icebp
cltd
decb
lds
jae
push
mov
outsb
xchg
leave
sub
mov
cmp
xor
push
mov
out
addr16
mov
cmpl
push
push
sbb
jg
inc
mov
push
stos
je
inc
ja
xor
or
enter
jno
les
jl
mov
lds
push
sbb
add
sub
sahf
in
or
insl
cmp
cld
xchg
fadd
push
stos
xchg
lcall
jmp
insb
bound
test
mov
aas
xor
mov
popa
xor
mov
test
mov
cmp
imul
or
mov
inc
scas
mov
xor
dec
xor
mov
pop
mov
nop
and
xchg
sub
pop
stos
inc
jmp
push
dec
cmpsb
imul
mov
add
clc
push
xchg
test
mov
xor
mov
stc
sarl
in
mov
or
fcomps
or
xchg
sbb
mov
sbb
insl
or
and
insb
push
fs
int3
mov
out
xor
arpl
cmp
cltd
adc
cli
pop
lret
jle
or
adc
ret
shll
cltd
adc
lret
mov
push
in
or
add
sub
pop
mov
jecxz
and
cmc
cmpsl
sub
xor
cltd
adc
ficomps
mov
inc
adc
hlt
lahf
push
int
movsl
cmp
push
dec
test
dec
pop
mov
aas
jae
aam
xor
jo
idivb
push
clc
mov
sbb
cmp
call
cmp
out
lods
cmpsl
push
out
fcmovne
adc
adc
orb
mov
loope
push
add
pop
jb
sbb
inc
or
js
add
cmp
into
mov
cmpsl
sub
jns
stc
hlt
jge
jle
or
mov
cmpb
mov
aaa
gs
lock
popa
out
out
int3
sbb
clc
stos
pop
cs
adc
push
pushf
xlat
sbb
xchg
pop
add
lock
decl
loopne
or
pushf
adc
add
mov
lds
pop
inc
inc
bound
cli
outsl
xchg
xor
insb
or
jne
sar
jne
push
and
xorl
cld
fwait
pop
xor
out
mov
mov
pslld
xor
shrb
lods
fwait
gs
sub
xor
inc
incb
lods
and
cmpsl
jl
sbb
adcl
inc
inc
fcmovbe
xor
jnp
ret
mov
or
cmc
mov
stc
test
mov
push
adc
pushf
cmc
add
lock
addr16
lock
loope
test
sbb
outsb
into
or
sbb
sar
or
sub
and
and
lds
loope
movsl
jmp
mov
cmp
pop
pop
fsubs
inc
pop
xchg
mov
cmc
xchg
xor
push
xchg
cwtl
orb
rolb
and
cmp
imul
lret
out
push
adc
mov
cmp
insb
cmp
mov
jns
jmp
dec
testb
pmaddwd
daa
adc
lret
ljmp
aad
es
jp
push
jmp
xchg
add
insl
push
jmp
cmpsl
aas
jne
jnp
lret
cs
repnz
xchg
or
push
cmp
cmp
scas
sbb
repnz
icebp
mov
xor
push
ret
bnd
xchg
scas
add
push
cmp
je
addr16
sbb
inc
cmp
fnstsw
ss
hlt
subl
clc
jns
imul
inc
mov
das
andb
lret
push
xor
sbb
jb
mov
outsl
imul
or
loop
sbb
test
push
in
pusha
mov
cmp
aaa
int3
les
aaa
cmp
jb
jbe
xchg
add
stc
sbb
mov
push
push
inc
std
xor
jg
out
add
pop
aam
nop
lahf
dec
jbe
imul
push
insl
jne
lods
imul
sbb
adc
inc
ficoml
pushf
mov
pushf
insl
or
dec
mov
loop
add
xor
push
and
sub
iret
ja
mov
popf
jb
iret
jo
sbb
divl
repnz
push
scas
test
xlat
push
mov
ja
mov
rcrl
dec
out
adcb
imul
xchg
mov
or
xchg
pop
iret
mov
notb
push
pop
add
aad
test
icebp
adc
lret
adc
cltd
movsb
jb
mov
sbb
mov
cs
push
inc
pop
xchg
push
lcall
aaa
in
xchg
xchg
dec
mov
ret
sbb
pop
and
xchg
cmp
or
push
pop
loope
adc
out
imulb
xchg
push
mov
inc
cli
rolb
insb
aam
leave
outsl
loop
sbb
inc
das
mov
mov
out
push
mov
mov
jecxz
sbb
lret
mov
movsl
leave
cmp
pop
inc
bound
mov
lret
outsl
in
or
jnp
cmpb
xor
pop
sbbl
popf
in
inc
sub
pop
dec
push
pop
cwtl
lods
lret
or
mov
hlt
xchg
push
xchg
xor
loop
inc
repnz
sub
dec
scas
loopne
push
gs
fcmovnb
mov
loopne
inc
pop
jb
mov
add
cmp
das
mov
iret
outsl
orb
sbb
mov
aam
dec
jbe
adc
mov
mov
add
shl
inc
jno
jge
xor
pop
arpl
mov
popl
dec
mov
daa
or
sbb
push
data16
int3
subb
insl
and
mov
movsb
push
push
jmp
js
cmp
pop
stos
push
mov
xor
flds
std
inc
jns
test
jns
mov
shr
daa
fstl
fs
jg
addb
sbb
outsb
pop
xchg
arpl
dec
les
rol
lock
pop
aam
adc
cld
insb
into
ret
ss
inc
icebp
loope
xlat
jmp
sti
cmp
pop
iret
mov
in
in
push
lds
aam
push
scas
out
mov
movnti
ret
cld
fnstsw
xor
fbstp
hlt
cmpsl
push
aaa
sarl
adc
inc
cmp
into
cs
ret
dec
push
js
mov
stc
data16
lcall
xchg
push
jge
cwtl
and
xor
jae
xor
shrl
xchg
icebp
fs
and
jge
addl
mov
repnz
cmp
mov
test
addr16
aas
dec
clc
bound
sahf
xor
pop
inc
inc
js
dec
sub
scas
sbb
pop
jae
mov
fwait
cwtl
mov
pop
leave
inc
xlat
je
sub
sbb
fiaddl
xchg
jno
test
das
or
xor
sbb
lahf
mov
push
inc
test
xlat
mul
movsb
xchg
adc
subl
outsb
cld
mov
xchg
inc
xchg
das
cli
push
and
clc
inc
sub
mov
cmpsb
fbstp
add
ret
movsl
add
lret
xchg
ss
movsl
inc
dec
jb
lods
mov
fidivrl
enter
pop
and
stos
outsb
push
pushw
inc
xchg
or
cmp
lahf
fisttpll
stos
movsb
data16
xlat
jecxz
push
shll
pop
scas
rcll
lret
jno
int
clc
repz
out
add
dec
das
and
xchg
lret
loopne
icebp
outsb
jae
ret
test
divl
mov
mov
push
xor
mov
xor
mov
and
dec
jo
stc
imulb
adc
jecxz
cmpsb
nop
mov
fistl
lret
cmpsb
test
push
mov
sarb
cltd
cmp
mov
aaa
outsl
jo
xchg
xchg
repnz
nop
mov
outsl
int
arpl
pop
pop
lds
dec
es
mov
xchg
fstl
loopne
mov
xlat
arpl
jo
pop
mov
pop
jp
inc
loopne
ds
or
xor
add
mov
aaa
cmpsl
push
jmp
scas
out
rcl
roll
pop
movsl
sar
mov
pop
cmp
cmp
jl
sub
jnp
dec
mov
sbb
xchg
out
in
rcl
push
or
adc
inc
jns
cmc
aas
xor
and
int3
xor
fidivrs
insb
adc
pop
test
aas
aaa
jmp
shl
sub
movsb
out
cmovns
mov
cmp
jnp
mov
inc
cmp
pop
pushf
jno
jl
dec
ror
inc
and
jecxz
cmp
mov
add
test
insl
lret
cmp
rcrl
sub
xor
mov
cmp
adc
pop
pop
push
in
push
lods
add
jnp
mov
sub
aam
stos
ror
fdiv
cwtl
sbb
call
jg
in
xor
imul
popa
sbb
rcll
das
pop
mov
xchg
or
cmpl
lcall
push
add
and
repz
add
testl
cmc
rorb
lods
gs
bound
adc
sub
cmc
dec
cld
mov
movsb
icebp
clc
pop
mov
jnp
mov
mov
jnp
arpl
out
mov
adc
stos
rol
pop
cmc
xor
pop
fisubs
or
shrb
inc
out
bound
mov
dec
js
mov
aad
jp
hlt
ljmp
sbb
adc
out
mov
mov
xchg
dec
push
cmpl
push
mov
add
xor
imul
mov
xchg
iret
mov
xchg
pusha
adc
pop
addr16
call
mov
push
mov
rcrb
push
add
xchg
dec
mov
mov
push
push
movsl
pop
inc
mov
loope
aaa
adc
pop
outsb
and
sbb
pop
sbb
xchg
notb
push
movsl
adc
sbb
xchg
jg
test
xor
xor
inc
dec
mov
hlt
je
cs
popf
test
pop
mov
int
rcr
in
inc
jg
mov
fisubl
sbb
sub
sbb
imul
dec
repnz
and
pop
out
in
cwtl
sti
mov
nop
stos
popf
mov
lret
pop
mov
jmp
mov
in
xlat
jae
lahf
xchg
insb
and
int3
pop
adc
negl
inc
sarl
ret
int
test
mov
and
shll
sub
lret
outsb
jne
movsb
ss
clc
sbb
popf
xchg
movsb
sbb
xchg
add
adc
xchg
jp
clc
or
push
add
ss
mov
subl
push
push
inc
iret
and
dec
ret
imul
dec
icebp
cmp
insb
nop
ljmp
adcb
jge
sub
sti
mov
decb
push
xor
jle
ss
xchg
mov
jnp
push
add
jp
cmc
add
and
cmp
test
shll
mov
jno
push
cltd
test
jbe
jne
rolb
ljmp
mov
and
nop
push
xor
mov
insb
inc
sbb
dec
daa
aam
enter
fmul
fildll
fs
jg
or
bound
clc
xchg
out
movsb
inc
fisubs
data16
es
xchg
xchg
jecxz
xorb
cmpsl
je
fwait
imul
jnp
stc
leavew
int3
xor
cmpsb
xor
icebp
aas
addr16
dec
sbb
mov
pusha
lock
xorb
xchg
and
inc
mov
das
stc
lods
push
sbb
inc
lret
call
sti
cli
xchg
push
les
lea
pop
insb
pop
jbe
jno
stos
or
mov
call
push
lds
add
testl
imul
lret
outsb
or
pop
inc
pushf
outsb
cmc
inc
lahf
dec
mov
mov
jns
pop
loop
mov
js
jns
xor
clc
lds
in
or
jmp
cmp
outsl
fimuls
lods
gs
lret
push
push
popf
ss
es
mov
adc
mov
jnp
pop
out
sub
push
mov
add
loope
mov
aam
or
add
rcrl
rcr
xor
pop
and
sbb
arpl
ds
test
xor
or
lods
lcall
hlt
clc
lods
aam
cmp
pop
repz
push
daa
push
mov
pop
cmp
ret
add
push
push
mov
out
divb
std
enter
lahf
or
mov
data16
scas
cltd
xchg
into
fistpll
scas
push
push
jl
fs
push
or
xor
aaa
and
and
jo
inc
mov
loope
sbb
gs
adc
scas
and
mov
and
dec
dec
adc
negb
shrl
dec
xchg
pop
fsub
and
enter
push
fdivl
inc
std
into
adc
and
sbb
insb
sub
cmpsb
loope
inc
lcall
popf
int
adc
lcall
lea
call
lods
movsb
inc
loop
cs
insb
add
lods
sub
add
jg
add
stc
ljmp
inc
mov
dec
and
jb
mov
mov
push
int3
inc
pop
mov
out
scas
sbb
fcmovne
mov
pop
fbld
cmp
out
int3
push
sbb
mov
cmp
in
movsb
mov
rorb
jb
je
push
icebp
imul
repz
dec
sub
imul
push
out
xchg
mov
orl
xchg
or
ret
es
std
mov
mov
std
mov
js
xchg
sti
cltd
imul
icebp
and
hlt
pop
daa
scas
leave
xchg
mov
rorb
adc
aam
aam
hlt
cmp
mov
inc
rol
ss
jo
push
rorb
iret
xlat
xchg
je
mov
aad
add
mov
mov
out
divl
and
je
addr16
pusha
addr16
iret
sahf
xlat
in
js
mov
adc
pop
mov
je
xchg
inc
sbb
dec
mov
jmp
cs
int
adc
mov
icebp
aas
xchg
in
std
pop
std
movsl
push
and
push
outsl
lcall
adcl
pushf
lods
fdivrp
in
cmp
cmp
push
xchg
push
add
push
loopne
push
ja
mov
dec
lods
jae
imul
sbb
mov
add
loopne
jae
cld
shll
lds
inc
mov
mov
sub
mov
in
mov
or
in
add
lret
gs
xor
mov
inc
insw
add
mov
ret
cmpsl
and
lods
imul
cmpsb
lcall
sub
cmc
movsl
jns
push
daa
and
inc
mov
pop
gs
mov
inc
cwtl
loopne
mov
pop
adc
cmp
fistps
fidivs
and
fldt
add
lahf
rolb
xor
sub
xor
stc
xchg
jb
cmpsb
cmpsb
popf
or
adc
xor
fcomp
sbb
testl
ret
gs
push
cltd
push
and
lea
inc
sub
shrb
pop
jmp
out
call
or
movsb
lods
imul
inc
xchg
push
sbb
aam
cmp
ficoml
clc
int
daa
inc
xor
pop
or
lods
pop
inc
pop
ret
test
adc
jl
out
or
mulb
mov
cmovnp
mov
mov
rcll
ret
cli
lea
or
test
lock
cwtl
mov
outsb
into
mov
test
daa
mov
sub
mov
dec
jnp
fmull
add
or
addr16
mov
ja
mov
xor
loopne
sub
pop
lods
adc
add
mov
dec
test
xor
jo
xchg
stos
jbe
testl
mov
stos
ss
lret
pop
pop
addl
add
cmp
mov
mov
test
jp
and
xchg
fdivrs
rorl
xor
inc
mov
lods
sub
jae
scas
pushf
adc
and
pushf
jae
and
scas
mov
cwtl
cmpsl
xchg
fdivrs
and
pusha
jbe
dec
cs
out
test
cmpsl
sub
imul
cltd
call
test
ss
and
add
mov
jp
cli
and
fidivl
cmpsl
xor
dec
imul
adc
or
scas
push
push
loopne
xor
pop
and
cmpsb
jp
push
repnz
cmp
push
pusha
and
pushf
sbb
pop
test
jle
leave
and
mov
stc
sbb
dec
pop
insl
sbb
xlat
test
sbb
ffreep
add
hlt
mov
cmp
ss
icebp
lea
sub
inc
in
shll
movsl
add
add
rcl
das
cmpsb
cmp
xchg
dec
pusha
bound
xor
enter
xchg
mull
lea
and
mov
sbb
push
xor
xchg
shrb
mov
addr16
popa
adcb
rcrb
mov
nop
pop
or
cli
iret
hlt
add
stos
gs
mov
pop
dec
mov
and
mov
nop
dec
movsb
push
mov
lret
xchg
out
ficoml
adc
pop
out
outsl
fs
xchg
add
push
mov
sbb
test
mov
jle
in
xor
sbb
pushf
xlat
rdpmc
fidivl
and
jo
orl
shlb
test
bswap
arpl
mov
nop
je
rcrb
lret
cltd
jp
gs
mov
ljmp
cmc
jo
sbb
mov
leave
add
test
out
popa
jmp
fbld
mov
mov
bound
xor
test
jns
jle
sbb
cmp
jbe
lock
sbb
testb
push
adc
rcrl
out
es
icebp
test
in
jecxz
mov
insl
push
mov
dec
addr16
roll
sbb
pop
imulb
mov
and
jns
mov
dec
sub
in
pushw
jns
sub
add
xor
mov
inc
data16
sub
add
inc
mov
jnp
shll
add
xchg
mov
sbb
jo
push
push
jae
je
mov
in
jge
scas
ret
pushf
lods
das
xor
push
and
stos
lahf
enter
fwait
or
and
push
adc
in
dec
dec
dec
inc
push
imul
cmpsb
repz
or
jb
lods
and
movsb
fimull
xlat
fcoml
or
popa
inc
leave
mov
xchg
mov
sbb
in
adc
xor
adc
mov
xchg
mov
leave
outsl
pop
adc
filds
add
add
push
jno
push
inc
leave
js
addr16
push
push
mov
pop
jecxz
mov
insb
pop
dec
sbbl
popf
movsl
test
cmpsl
push
push
sbb
sbb
addl
mov
xchg
out
cmp
iret
popf
mov
rcl
dec
dec
dec
mov
popa
loop
scas
mov
pop
mov
outsl
or
xor
mov
add
sbb
mov
js
addr16
mov
push
jg
int
lds
lahf
cmpsb
gs
adc
inc
pusha
mov
mov
scas
jge
mov
pop
dec
sbb
stos
aam
mov
sbb
sahf
mov
call
sub
gs
iret
jnp
dec
loope
push
icebp
pop
fsubl
pop
adcl
mov
jmp
xor
dec
movsb
adc
popf
outsb
pop
cwtl
pop
jb
mov
ds
dec
ret
push
inc
iret
lret
imul
into
int3
xor
ret
jge
lret
cld
inc
sbb
pop
movsb
sbb
rcl
adc
cmp
mov
lcall
jmp
add
adc
inc
pop
cs
sbb
add
cmp
push
xorl
jp
inc
sahf
divb
adc
in
or
enter
pop
jl
xchg
cmp
das
clc
dec
lock
notb
dec
jmp
fwait
mov
testl
add
shl
mov
fistl
imul
faddl
mov
cld
push
inc
or
xor
dec
scas
ss
cmp
mov
lahf
mov
out
mov
push
pop
sbb
pop
shl
sbb
call
test
gs
xchg
out
mov
pop
cmc
dec
out
jecxz
cmp
adc
idivl
and
sbb
and
int
jecxz
sbb
cmp
ds
pushf
inc
std
push
test
sti
pop
fs
mov
icebp
jnp
and
xor
dec
adc
nop
jg
in
pop
lods
mov
sub
insl
cmc
cmp
rorb
mov
inc
cs
and
xor
or
and
inc
iret
ficompl
aad
rcl
popf
pop
out
cmpsb
jle
stos
add
or
jns
lret
push
orb
loop
pop
pop
dec
lret
sbb
and
cmpsl
in
aad
inc
sbb
mov
notb
xchg
les
scas
loop
in
cli
into
aaa
xor
fisubs
push
mov
lcall
xchg
mov
cmp
jge
xchg
jns
fldl
fists
ficoml
addl
int3
dec
jmp
leave
enter
repnz
enter
jbe
mov
inc
mov
mov
jl
stc
js
lock
xchg
adc
sub
inc
aam
lret
or
inc
outsl
jge
mov
and
inc
cld
add
lret
mov
icebp
sarb
sbb
add
mov
arpl
adc
adc
fxch
inc
pop
and
rorl
or
xor
sbb
push
bnd
xor
jno
cmpsl
mov
fs
lods
or
jg
sbb
xorb
xchg
pop
jne
adcl
push
dec
xor
sub
fwait
mov
imul
loop
mov
sub
negl
pop
push
or
addr16
daa
inc
stc
aas
jge
push
mov
xchg
mov
fdivl
or
mov
mov
lret
lret
or
cwtl
jns
pusha
icebp
and
pop
testb
pop
icebp
mov
cs
jo
repnz
mov
mov
insl
push
mov
pushf
rol
xchg
ljmp
dec
xchg
cmp
add
sub
push
push
mov
ds
cmp
pushl
arpl
in
outsb
sub
xor
add
pop
imull
lock
lods
push
fs
test
push
sub
movsl
inc
out
push
xor
das
xchg
jg
xchg
nop
jmp
fs
mov
aam
inc
pop
cmc
xchg
out
lahf
aam
ret
imul
cmp
sub
cmc
xchg
jns
jo
jnp
sbb
lock
jg
and
push
adc
cmp
idivb
ret
leave
xchg
mov
daa
cs
jb
cmp
arpl
push
xchg
xchg
push
mov
filds
xor
cmp
adc
sub
pushf
xor
sbb
test
fidivrs
aam
xchg
adc
imul
ror
inc
dec
ret
jne
mov
pop
and
out
lods
mov
push
push
ljmp
or
and
mov
mov
inc
jb
mov
in
jg
das
xor
aaa
lods
mov
cmc
dec
sbb
cmpsb
imul
jne
popa
imul
inc
push
lds
or
pushf
popa
jge
lahf
dec
mov
movsb
ds
or
jo
out
mov
ret
dec
roll
mov
aam
clc
shl
mov
pop
sub
insb
lea
adc
and
pop
sbb
cmp
fldpi
in
insb
push
movsl
mov
pushf
icebp
push
xor
xorl
or
inc
fidivrl
push
inc
adc
or
sub
jno
mov
aad
jp
push
ret
cli
mov
cmpsb
dec
test
rcl
in
fadds
dec
jp
sbb
es
or
dec
adc
loope
inc
sbb
test
xchg
cs
sbb
inc
fimull
or
lret
inc
adc
scas
sbb
mov
or
out
movsl
sbb
or
and
ficomps
xor
scas
xchg
das
data16
jle
push
movups
mov
lcall
inc
xchg
ret
sti
lods
in
movsb
loope
xor
xlat
mov
in
jp
mov
mov
add
ss
push
arpl
xor
rclb
sub
shrw
lahf
inc
rcrb
loopne
xchg
mov
in
xchg
xchg
push
add
cwtl
xchg
lcall
push
int
push
jne
in
xor
aad
adc
lods
movsb
loope
pop
jo
loope
push
jl
dec
sbb
jae
xor
push
mov
push
pop
xchg
lods
dec
scas
ljmp
clc
sahf
loopne
mov
lods
dec
cltd
bound
hlt
dec
push
pop
jno
push
or
sti
xchg
scas
sahf
cmpsb
std
fsqrt
cld
daa
int3
mov
pop
es
mov
test
jge
mov
sbbb
pop
imul
xor
enter
push
fwait
inc
xchg
cmp
xor
test
mov
and
sub
add
cmpsl
push
pop
push
and
push
push
and
xor
jo
pmaddwd
imul
pushf
ret
or
cmc
or
iret
mov
adc
ja
xor
pop
js
pop
lods
push
mov
xchg
aad
cli
das
neg
cli
sbb
push
subb
fidivs
mov
inc
xchg
inc
pop
push
pop
gs
dec
es
xlat
jg
mov
xlat
cmpsl
outsl
mov
and
sbb
push
dec
mov
mov
shlb
pop
sti
cmp
add
and
jb
mov
jmp
imul
pushf
dec
rcrl
ljmp
push
pusha
scas
inc
mov
cmp
push
push
xchg
sbb
xchg
dec
xchg
pop
xor
test
add
idivl
sub
clc
dec
pop
cmp
andb
mov
in
xchg
or
or
mov
js
sub
mov
xor
jns
sub
ret
cmp
test
into
pop
pop
fstp
movsl
arpl
jb
mov
shlb
sub
and
insl
insb
stos
jmp
mov
sbb
int
test
and
stos
mov
lds
xor
add
ja
loop
xor
inc
cmp
in
jne
dec
fst
add
test
fisubrl
xor
ret
call
fmull
xchg
add
adc
fimull
jnp
jecxz
xor
dec
lds
sbb
or
pop
mov
xor
aaa
or
cmp
xchg
ret
sbb
scas
sahf
pop
pop
out
call
js
inc
scas
outsl
push
jns
daa
lods
pop
cmp
lock
out
cltd
dec
jmp
jp
popf
or
test
mov
jae
jae
pushf
hlt
fs
stos
enter
jmp
outsl
sbb
fcmovnb
and
sbb
subb
scas
sub
cmp
popf
fnstsw
jo
out
jmp
into
lret
les
arpl
push
xor
pop
imul
int3
xor
mov
aas
mov
cmp
and
pushf
ud0
cmp
cwtl
xorb
push
jb
mov
jne
jg
adc
dec
jnp
popf
push
xlat
lahf
push
xor
and
push
and
dec
inc
ret
test
into
push
push
rcrl
push
jg
sbb
sbb
or
ror
inc
dec
sbb
mov
jmp
sbb
outsb
xor
jo
stos
mov
bound
cmp
dec
repz
jne
dec
sbb
rcl
sbbb
xor
cmp
jl
notb
in
mov
out
or
mov
inc
ret
jl
ss
call
inc
test
stos
clc
jae
add
jno
mov
lcall
cmp
in
imul
sbb
bound
jmp
add
fdivrs
cmpsl
lods
jbe
scas
add
lret
ret
jmp
push
cmovp
inc
lcall
popf
mov
cmp
arpl
ds
cli
mov
sub
cmp
loopne
in
sbb
cmpsl
dec
lret
fdivrl
add
jle
test
mov
hlt
ret
fldenv
test
adc
lret
sbb
cli
in
cld
and
xchg
cmc
test
mov
dec
lret
sub
in
cmpsl
gs
xchg
push
movb
fs
jb
add
cli
xlat
mov
inc
popa
jae
xlat
push
dec
xchg
lahf
lret
mov
push
stos
inc
in
shrl
mov
ljmp
mov
lods
loop
mov
xchg
cs
leave
push
add
enter
mulb
fs
push
leave
mov
push
xchg
lods
in
dec
cmp
push
xchg
in
push
outsl
push
mov
imul
add
ja
ss
notb
cld
xchg
dec
pop
cmpsb
lahf
outsb
insl
adc
mov
into
jnp
jl
pop
out
sub
std
add
mov
sbb
movsb
in
mov
xchg
ja
das
mov
mov
xor
out
pop
mov
xchg
movsl
mov
inc
push
fdivs
lds
test
mov
int3
push
das
xor
cmpsl
lock
aad
clc
or
or
xchg
fwait
hlt
cmp
out
jns
push
lahf
mov
jl
cmp
pop
sub
and
mov
cmp
mov
sbb
loop
cmpsl
lret
mov
dec
push
inc
ljmp
xlat
adc
lock
movsl
mov
add
call
pop
dec
mov
lods
sti
cwtl
mov
lods
cmp
sbb
xchg
sbb
nop
mov
js
inc
or
outsb
mov
in
loopne
adc
push
cmp
adc
mov
sub
out
ss
bound
shll
dec
stc
jnp
jle
mov
mov
dec
aad
int
xor
push
cmp
movsl
and
xor
fisubl
cmp
stos
jbe
mov
lret
jnp
outsl
cli
mov
daa
sbb
inc
mov
push
int
sub
lods
pop
xor
aad
icebp
mov
adc
nop
ret
sti
scas
mov
pop
xor
xor
and
fisubrl
cltd
out
mov
lcall
fistpll
nop
inc
enter
mov
mov
and
sbb
dec
into
sbb
adc
stc
fst
divb
cmp
xchg
add
out
mov
pop
mov
add
cmp
xchg
shl
std
clc
jns
stos
ss
adc
repnz
scas
loope
data16
push
fwait
jmp
and
mov
les
aas
cmc
push
movl
mov
out
push
mov
fcmovnb
cs
out
sub
sahf
xor
enter
stc
jb
jne
add
gs
inc
jp
mov
in
mov
mov
adc
mov
fcoml
aaa
pop
pop
pop
mov
rcll
mov
ja
mov
sub
mov
pop
pop
jmp
shl
sbb
scas
lret
add
pop
lock
push
fnsave
dec
sub
xchg
jp
cmp
movsl
pushf
lods
add
add
sub
and
cwtl
jge
mov
inc
xchg
sti
in
je
push
sbb
std
cmpl
cmp
daa
mov
mov
add
jno
jne
pop
and
lods
movsl
out
cmp
arpl
adc
push
adc
xchg
daa
and
mov
jg
stos
bound
fnclex
mov
mov
cwtl
cmpsl
sbb
dec
add
inc
mov
pushf
aas
mov
adc
push
imul
xor
mov
insl
push
adc
rclb
adc
out
sub
popl
cmp
and
mov
orb
fs
mov
mov
and
in
insl
jne
xor
or
enter
hlt
dec
or
cltd
aad
les
jl
push
push
test
lock
xchg
lock
mov
cmp
sub
push
dec
pop
arpl
inc
std
shlb
into
pop
push
xor
push
scas
mov
mov
data16
mov
js
jmp
jnp
cmc
loope
lahf
add
inc
lods
inc
imul
mov
mov
xor
adc
cli
xlat
es
mov
sahf
add
cmp
push
iret
xchg
sbb
mov
push
jnp
lcall
mov
push
data16
sbb
add
sbb
aas
pop
cli
lea
push
imul
push
iret
dec
out
cmp
adc
insb
into
mov
jecxz
loopne
adc
pop
fldt
lahf
add
repnz
popf
cmp
lret
cmpsb
jnp
ja
fistl
fwait
mov
mov
adc
pop
sub
mov
imulb
andl
pop
mov
and
std
test
sub
test
push
xchg
jbe
mov
mov
xor
test
les
nop
pop
jns
add
hlt
data16
stos
data16
testb
inc
outsl
inc
cwtl
leave
add
dec
inc
ret
addr16
jno
rcl
xor
and
imul
add
es
jmp
in
cmp
addr16
and
and
add
mov
fneni(8087
data16
cmp
call
xchg
xchg
or
sbb
inc
push
subb
dec
pop
loope
pop
or
push
xchg
sub
pmullw
loop
sbbb
push
rorl
in
sub
insl
les
test
pop
cmp
pop
fstl
pop
dec
repnz
sub
leave
js
scas
xor
sbb
pop
pop
aam
cmp
mov
pop
xor
repnz
sub
int3
xor
das
sbb
xchg
cli
push
movsb
lea
aaa
jmp
push
ja
adc
hlt
or
xor
mov
jg
mov
xorb
enter
call
mov
adc
mov
jnp
mov
es
icebp
pop
adc
inc
jae
cmpsb
cmpsb
pushf
sub
push
lds
cli
inc
inc
jl
repnz
lods
and
mov
push
fidivl
pop
ljmp
sub
mov
push
or
arpl
inc
pop
js
xor
int3
insl
ja
shl
sub
lds
mov
enter
scas
dec
mov
push
ljmp
add
mov
sbb
jg
movsl
cwtl
and
mov
cmp
ss
adc
js
bound
jae
and
adc
xor
push
jecxz
xchg
jg
adcb
popa
push
jno
std
add
bnd
lcall
xchg
dec
and
daa
add
inc
xchg
fs
mov
or
ss
je
out
sti
stos
out
and
and
std
sbb
mov
mov
mov
sub
inc
lahf
cmp
and
mov
cmp
and
test
cmp
imul
adc
push
mov
fstl
addr16
sbb
enter
es
ljmp
jne
pop
ret
add
xor
lea
jg
mov
mov
push
movsb
sti
push
and
fcmove
add
insl
xchg
outsb
mov
jp
aaa
imul
push
push
pusha
out
inc
mov
in
push
popf
mov
sub
add
mov
cltd
jno
pop
sub
xchg
and
dec
cmp
cmp
adc
push
aas
popa
sub
stos
jp
es
inc
aas
cmovo
inc
pop
mov
jne
rcl
pop
in
pop
mov
sub
mov
js
popa
sub
inc
pop
insl
ret
shlb
jo
call
ljmp
mov
cld
lahf
nop
or
sbb
mov
jae
cmp
cmovle
xchg
push
mov
movsb
cmp
popa
mov
movsb
imull
mull
lods
jg
sbb
loope
adc
shr
sarb
stos
dec
mov
mov
mov
push
jbe
mov
cmp
and
mov
xchg
cmp
je
sahf
sub
rcr
sarb
lcall
ret
clc
or
push
add
gs
lods
stc
cmpsb
push
ret
push
shlb
popa
inc
sarl
stos
int3
or
shll
inc
xchg
in
mov
repnz
jge
or
fmul
pop
jb
mov
sti
mov
out
call
daa
add
out
inc
sub
aad
mov
arpl
mov
lret
or
fmull
or
insb
aaa
push
into
loop
sub
mov
push
loope
mov
subb
cltd
aas
xlat
mov
cwtl
dec
inc
mov
sbb
negb
and
fldt
les
add
mov
fildll
mov
test
bswap
xchg
mov
outsl
cmp
inc
jae
daa
or
loope
xor
cmp
adc
push
arpl
adc
inc
inc
shrl
push
inc
cmc
lret
call
sbb
ret
mov
inc
pop
dec
xor
mov
push
mov
xchg
test
xchg
ss
or
sub
enter
sub
cs
in
out
inc
lods
xchg
data16
in
dec
ss
hlt
std
xchg
es
in
mov
sub
add
enter
adc
push
lcall
jb
shll
xchg
mov
cmpsb
aas
cmp
pop
std
dec
test
mov
movsb
les
int3
icebp
adc
aad
jne
sbb
popl
ljmp
lods
mov
mov
stos
mov
mov
lahf
xchg
push
push
pop
andb
in
ja
daa
arpl
pop
clc
out
sub
call
jo
in
jne
xor
clc
add
jbe
cwtl
cmpsb
mov
mov
fldenv
int
cld
stc
out
mov
out
cmpb
or
cmpb
adc
hlt
xchg
outsb
or
xlat
adc
pop
mov
add
push
dec
dec
and
xor
movsb
pusha
cmp
adc
psubusb
sub
xchg
data16
repz
xchg
cmp
jge
stos
leave
jne
jle
sbb
push
and
jnp
mov
inc
sbb
repz
push
add
test
push
and
test
adc
mov
int3
sbb
lock
sbb
pop
dec
into
mov
jecxz
pop
pop
sub
mov
pop
push
orb
adc
xchg
mov
icebp
xor
mov
ds
out
add
test
ret
aam
rolb
jns
loopne
mov
sub
pop
push
loope
add
sbb
out
dec
mov
inc
ret
cmp
into
imul
fld
pop
cmp
lret
adc
in
inc
je
xlat
inc
push
int3
mov
mov
bound
sub
in
inc
mov
xchg
sbb
loopne
addr16
jnp
loop
ds
push
notl
dec
sub
jge
fistps
outsl
add
push
or
push
lods
xchg
imul
xchg
stos
cmc
inc
sub
sbb
bound
cli
dec
xchg
in
mov
jbe
mov
and
mov
mov
cltd
inc
clc
jge
gs
divb
xor
or
xchg
test
and
pop
dec
in
icebp
add
movsl
push
repnz
popa
aam
inc
stos
les
adc
mov
loop,pt
push
clc
loopne
fwait
loopne
jp
addr16
imul
cli
sbb
outsl
movsl
adc
pop
add
mov
cli
bswap
popf
pextrw
push
push
aas
or
cld
mov
scas
xor
cmc
hlt
dec
jle
sub
sbb
sub
rorb
push
mov
and
decb
jae
bound
jecxz
xor
jmp
sbb
sub
ja
lret
lahf
mov
push
xchg
cmp
out
push
mov
subb
aaa
addb
dec
aaa
aas
adc
mov
jae
add
js
stc
cmpsl
iret
push
cmpsb
out
jl
jmp
dec
mov
mov
repz
mov
mov
aam
fs
mov
iret
xor
xchg
jp
jp
cmp
or
mov
pop
jae
inc
fists
mov
sub
out
int
js
les
js
mov
fs
pop
jmp
pop
pushf
push
push
mov
adc
insb
mov
sbb
int
mov
mov
and
pop
addr16
cltd
ror
xor
jge
jle
imul
sub
jns
fimuls
pop
inc
inc
test
daa
fiaddl
pop
leave
subl
push
mov
inc
pusha
ret
imul
cwtl
shl
fwait
or
mov
and
mov
icebp
adc
and
aad
pop
lret
add
outsb
push
lea
faddp
push
mov
cmpsl
push
fs
jns
mov
int
mov
call
adc
fs
adc
xor
jnp
fimuls
xchg
in
mov
jg
leave
orb
shrl
push
add
mov
popf
cmp
mov
dec
or
adc
adcl
cmp
mov
std
add
lock
rcl
or
sub
sahf
xlat
mov
sbb
jnp
shlb
sub
aam
stos
adc
mov
in
test
xchg
rcrl
push
xor
push
inc
and
dec
pop
mov
mov
pop
mov
sbb
jg
mov
adc
rorb
fcmovbe
std
cli
sub
pusha
inc
rolb
mov
and
mov
subl
jne
inc
fwait
loop
icebp
sub
bound
scas
mov
and
mov
mov
call
push
std
xlat
inc
cltd
test
cmpl
xchg
mov
movsl
lock
mov
mov
mov
icebp
jnp
xchg
rcll
jecxz
negl
cmc
push
push
clc
cs
cmp
enter
nop
push
in
mov
rorl
inc
mov
lds
bound
jae
test
pop
shrl
or
cs
push
fwait
loop
xor
jmp
or
inc
stos
push
ljmp
gs
inc
lcall
pushf
jne
out
cmp
add
mov
mov
mov
mov
je
adc
insl
mov
mull
jge
pop
iret
dec
imull
sti
jmp
lea
push
inc
fidivrs
ffreep
int3
insl
jo
mov
xor
add
cmp
xor
xchg
stos
xor
dec
and
push
popa
jp
mov
icebp
jmp
test
loop
movsl
push
cmp
sahf
enter
lahf
mov
sbb
inc
mov
aaa
lea
neg
jecxz
jae
jne
push
xor
fcoms
mov
mov
add
sbb
call
adc
sbb
rorb
arpl
bound
and
cmp
sbb
sbbl
pop
and
inc
cld
into
orb
dec
xchg
jbe
adc
fimull
enter
js
or
and
push
in
ja
int
xor
pop
in
dec
lea
cmp
notb
in
mov
enter
xchg
sbb
lods
scas
icebp
push
xor
add
mov
adc
mov
push
inc
ss
or
pop
or
jo
mov
aam
xchg
pop
inc
cmp
and
gs
out
ret
ss
xor
movsl
push
mov
sub
fldl
test
test
push
movsb
mov
dec
jnp
push
or
mov
pop
ds
jg
jno
clc
fldenv
xor
sbb
loopne
out
xlat
sbb
cli
add
cmp
pop
xchg
cmp
cmp
mov
cs
cmp
outsb
inc
or
cmc
test
mov
shrb
sbb
dec
inc
cld
mov
insl
ss
cmpsb
pop
dec
xor
dec
test
and
out
inc
ret
add
adc
inc
push
xchg
jb
mov
jns
mov
or
je
sbb
adcb
ret
push
iret
mov
jnp
sub
lahf
aaa
rorl
xchg
jle
push
fstpt
xor
mov
sti
adc
push
les
and
movsl
notb
xchg
mov
insb
dec
lret
dec
ret
cli
sbb
leave
fnstenv
sti
and
subb
xchg
dec
push
xchg
pop
and
sbb
icebp
jmp
imul
and
setle
loop
adc
xor
jmp
mov
or
mov
and
xor
das
out
dec
cwtl
jns
xchg
or
push
sbb
sbb
fisubl
fistl
xchg
ljmp
pop
stc
loop
xchg
dec
adcl
jnp
adc
pop
gs
dec
mov
sarb
pop
mov
inc
aam
add
jb
imul
fdivr
xor
jno
mov
popf
or
pop
lds
mov
dec
dec
push
adc
mov
xchg
movsb
sub
mov
jmp
xor
and
mov
inc
ds
aad
jne
mov
arpl
pop
xchg
pushl
pop
out
enter
fimull
outsb
daa
xor
jp
ljmp
fcmovne
cmp
cmp
pop
sbb
push
fnstsw
add
push
fistps
sub
repnz
jge
xchg
in
in
jmp
sbb
repnz
int3
adc
fcmovbe
mov
mov
loopne
push
cmpsb
ffreep
ljmp
mov
bound
scas
scas
xchg
xchg
adc
sub
adc
les
popl
jg
in
icebp
sbb
lea
ss
mov
jle
imul
fstl
mov
pop
jl
repz
test
out
or
jmp
shrl
jnp
jg
jno
ss
xchg
cmp
aaa
adc
repz
xchg
cli
dec
or
jg
fwait
and
mov
push
in
xor
hlt
fisttpl
fs
adc
es
pop
lds
subl
inc
xor
cmc
xchg
dec
mov
or
inc
mov
xlat
pop
aam
orb
add
pop
lods
fsubrl
loopne
xchg
push
pop
stos
jno
scas
push
jnp
clc
cmpb
xor
xchg
and
mov
inc
mov
rcrb
insl
sahf
add
mov
pop
sub
mov
repz
push
nop
add
cwtl
enter
cmpsl
mov
cmp
dec
mov
fcomip
push
aas
fisubl
lahf
xchg
lea
das
pop
mov
jl
ret
fs
inc
fs
cltd
cli
std
mov
rcll
xchg
lahf
pop
xlat
xor
stos
adc
push
je
xor
mov
cmp
addr16
sahf
lods
add
xchg
fsts
xor
call
cmp
jge
aam
add
test
filds
into
xor
inc
mov
sbbb
icebp
sti
cmc
lods
inc
loope
ret
jne
les
xchg
add
sbb
mov
into
sbb
push
xor
daa
repnz
mov
xchg
mov
jge
fsts
mov
imul
insl
leave
jno
mov
sub
dec
pusha
fisttpl
add
mov
push
xor
jne
mov
or
out
push
mov
jo
popa
test
out
inc
mov
jmp
test
dec
leave
movsl
mov
and
icebp
pop
out
mov
fsubrl
movsb
lds
sub
and
in
in
dec
mov
outsl
mov
push
mov
mov
xchg
sub
pop
scas
sbb
adc
sub
push
lcall
movsl
pop
and
cmp
aas
fcmovnu
icebp
sbb
xchg
xchg
insl
cwtl
stos
push
fs
mov
push
loop
push
sbb
sub
push
and
lock
dec
call
mov
cwtl
loope
outsb
sub
and
mov
notl
xchg
dec
out
push
out
shl
je
inc
mov
jl
jnp
int
insb
push
jno
sbb
sbb
cs
enter
popf
and
stc
das
sti
jle
or
mov
sub
mov
add
add
mov
and
loopne
xchg
mov
int3
out
adc
test
cmp
gs
fistps
push
sub
push
hlt
jecxz
je
fistpl
and
cmp
cmp
imul
sahf
clc
jge
xchg
mov
push
push
dec
xchg
adc
shll
sub
sbb
mov
sar
push
xor
push
mov
cmp
aad
sbb
pop
sbbb
xor
cmp
adc
and
enter
fldenv
bound
jl
jg,pn
dec
dec
les
scas
add
add
push
xchg
repz
push
negb
cmp
adc
sbb
jl
lret
mov
lret
jae
insl
movsl
cmp
lods
adc
xchg
rolb
idivl
cmp
cli
fbstp
ret
xchg
dec
mov
aad
sbb
lret
lock
fisubs
out
mov
imul
xchg
out
adc
jne
xlat
adc
and
jb
inc
loope,pn
cltd
xchg
les
aaa
and
add
xchg
adc
mov
xchg
pushf
call
mov
fucomp
insb
insb
lods
pop
lahf
dec
fdivrs
das
lret
mov
inc
cmp
cmp
sub
or
push
int
pop
lret
push
mov
repz
push
cltd
mov
jmp
fldenv
out
mov
and
xlat
dec
mov
sahf
popa
fs
int3
int3
add
rorb
push
inc
rolb
mov
add
fisttpl
shlb
dec
pop
insl
and
data16
mov
add
dec
repz
add
pop
subb
arpl
jne
fs
nop
cmp
dec
xlat
imul
stos
sbb
stos
iret
xorl
and
pop
lea
cmp
push
inc
jg
or
sbb
pop
lcall
sahf
cli
inc
or
nop
pushf
pushf
jo
testb
mov
mov
mov
and
int3
out
addr16
loopne
jns
or
inc
xor
fildl
out
push
psubq
push
dec
and
mov
and
iret
cmp
into
sub
icebp
or
jb
cs
rclb
sbb
pop
pusha
outsb
dec
add
xchg
cmp
sub
or
ss
dec
mov
cltd
roll
lea
and
mov
movsb
dec
sub
fisubrs
adc
jnp
add
mov
rclb
sub
mov
ss
xchg
imul
mov
sahf
xchg
inc
lret
mov
mov
lcall
inc
xchg
and
or
sbb
jecxz
insl
and
into
lret
iret
scas
inc
mov
dec
imul
fpatan
sahf
lock
cmp
jns
inc
jp
xor
pop
shl
jbe
call
push
jbe
enter
fwait
popf
arpl
dec
add
xlat
insl
scas
dec
or
mov
fdivr
aaa
cmpsl
int
mov
mov
insb
pop
sub
call
fistl
mov
adc
cmp
and
push
mov
lret
lea
mov
mov
mov
xchg
or
mov
xchg
sahf
in
xor
cmp
inc
push
and
pop
jp
push
int
mov
inc
xor
xlat
mov
idiv
and
pop
ds
mov
divb
jmp
sahf
std
ss
lea
mov
or
or
aam
inc
stc
call
or
fcoml
add
add
repz
rcll
cli
mov
and
push
pop
arpl
and
cmp
lahf
imul
clc
outsb
jbe
mov
inc
mov
es
loopne
pusha
int3
xchg
add
push
xchg
gs
mov
mov
std
std
hlt
jae
das
xor
stos
shr
mov
xchg
xchg
mov
bnd
ficoml
pop
sub
out
cli
dec
insb
dec
roll
xlat
notl
jl
jle
scas
inc
leave
mov
jg
sti
cld
es
cmp
loop
mov
repz
sub
jmp
pop
mov
inc
jge
test
mov
insb
add
fcoms
andl
lock
fidivrl
xchg
adc
aam
adc
in
cmp
push
popa
imul
mov
dec
mov
addb
adc
mov
hlt
jmp
xor
lcall
mov
fidivl
sbbb
bound
es
jge
push
notl
cmp
cs
adc
push
mov
ja
jle
mov
bound
and
dec
dec
mov
xchg
sarl
cmp
lods
adc
push
data16
sahf
mov
mov
jl
mov
xor
lcall
fmuls
cmp
xchg
iret
push
mov
pop
repz
mov
int3
data16
sub
fsubl
mov
push
mov
or
pop
and
xchg
pop
stc
cmp
jle
loope
cmpsl
adc
idivl
xchg
xor
out
jne
sub
add
adc
mov
aaa
adc
mov
and
sbbl
xchg
fidivl
popf
dec
test
sbb
dec
seto
jge
sub
add
mov
cmpb
fcoms
inc
in
ret
inc
js
xchg
sti
dec
sbb
imul
in
ja
mov
stos
ds
mov
repz
sarb
fs
aaa
inc
lods
insl
inc
fistps
pop
adc
loope
imul
fdivrl
cld
outsb
xchg
and
jmp
sub
sub
adc
mov
orl
lods
js
sbb
xlat
cmp
out
out
push
xor
dec
inc
hlt
cwtl
dec
cmovne
dec
mov
jmp
scas
int3
jbe
sarl
adc
sbb
xor
sbb
xor
mov
sub
insb
into
xor
push
push
ja
adc
push
aam
jp
xchg
outsl
pop
pop
mov
mov
xor
xor
mul
fsubs
inc
das
push
dec
jecxz
xchg
mov
fidivl
xor
sar
scas
test
and
jb
dec
ss
sbb
mov
dec
adc
mov
dec
aam
insb
mov
int3
dec
mov
and
fidivl
jb
loop
push
sub
mov
nop
pop
xor
lahf
test
outsl
xlat
mov
fwait
pop
or
movsl
or
inc
and
xor
sub
push
vandnps
js
fadds
xchg
nop
push
ss
rorl
rcrl
das
shrb
pusha
adc
xor
mov
jmp
xlat
leave
cwtl
sbb
sub
add
fwait
xchg
jecxz
sqrtps
in
nop
push
xlat
sbb
std
or
shl
jns
repz
ret
mov
pop
mov
rolb
mov
pop
decb
mov
movsb
adc
inc
iret
adc
sub
mov
push
mov
dec
and
mov
mov
add
jno
push
mov
sbb
jne
inc
inc
dec
pop
and
fsubr
popw
fwait
repz
ljmp
pop
xchg
adc
mov
out
cmpsb
jmp
pushf
pop
fwait
adc
sub
adc
cmpsb
sub
xchg
mov
mov
aas
movsl
popa
mov
push
push
xor
ljmp
repnz
daa
and
inc
repnz
mov
add
pop
inc
scas
push
add
xor
sub
outsb
dec
sub
scas
pusha
jp
mov
cmp
jno
pop
or
push
out
push
push
arpl
and
ljmp
imul
jae
fcoml
xchg
and
jl
hlt
dec
mov
decb
dec
cmp
and
es
mov
sub
or
addr16
adc
xchg
jbe
mov
pushf
popf
or
push
inc
push
inc
lahf
xchg
testb
fs
or
out
jns
and
xor
repz
scas
int
fsubp
insl
pop
mov
dec
shlb
cld
pop
jnp
divb
ss
and
push
in
call
loope
jl
mov
and
nopl
mov
pop
in
cltd
movsl
xchg
sub
add
jge
pusha
sub
movsb
sbbb
or
aad
pop
pop
imul
jle
js
jp
shll
lds
xchg
sti
cmpsb
scas
jbe
jnp
or
cmp
gs
and
lock
lods
mov
jecxz
dec
mov
xor
lds
fs
mov
dec
adc
out
ljmp
pop
mov
mov
sbb
in
inc
or
mov
andb
fildll
sbb
push
pushf
cwtl
inc
xor
xor
ds
je
rclb
pop
shlb
mov
outsb
cmp
outsl
pusha
jge
jns
cmp
cmpsl
aad
iret
or
cmp
or
scas
shl
inc
shrb
jecxz
push
push
ja
mov
xchg
jmp
jg
les
pop
sti
lds
xchg
xchg
xor
add
cmc
aad
sub
inc
shr
roll
xor
jge
mov
mov
add
inc
ja
dec
sub
iret
sbb
and
cmpsl
scas
xchg
push
in
jge
cmp
mov
pop
jo
fidivrs
xchg
inc
movsb
add
and
or
xor
or
addr16
out
inc
add
sub
notb
jne,pt
inc
cltd
test
push
cmc
push
lods
fsubl
xchg
dec
and
fwait
jmp
jl
clc
sub
das
daa
shr
mov
js
enter
sbb
sbb
cltd
pop
jbe
sub
dec
xchg
repz
sbb
sub
cmp
cmp
xor
nop
loope
in
lds
jae
adc
sub
dec
dec
out
popf
out
aas
shl
mov
add
fadds
ret
flds
movsl
sbb
ljmp
sti
xchg
and
push
xchg
pop
pop
test
jns
mov
fisubrl
inc
cmp
cmp
mov
jg
addr16
scas
popf
push
es
push
or
pusha
das
std
int3
insb
sar
push
les
fsts
fists
test
mov
pushl
iret
iret
out
and
or
push
incl
xchg
cmp
push
add
sub
adc
xor
loope
adcl
outsb
out
dec
scas
aas
bound
cmp
nop
negl
and
jmp
jge
xor
bsr
sbb
or
xchg
data16
addr16
testl
cld
push
int3
mov
dec
jp
push
sarl
shll
add
daa
loope
mov
adc
imul
push
mov
or
imul
push
fisttps
movl
cmpsb
scas
inc
lcall
movsl
pop
or
out
ret
xchg
inc
fsubl
push
dec
addb
push
add
stc
cli
push
in
push
adc
pop
sbb
cmp
pop
mov
jne
xor
addr16
cld
adc
hlt
sti
mov
aas
push
repz
jae
iret
sub
stc
pop
sub
icebp
jbe
cmp
adc
and
jp
popa
pop
out
mov
push
mov
dec
add
mov
test
cltd
data16
lret
movsb
popf
xchg
rcrl
dec
sub
sub
sbb
xchg
mov
and
clc
rcl
mov
ja
pop
pop
mov
fidivs
scas
call
or
mov
adc
mov
nop
sti
inc
dec
ret
xchg
mov
and
dec
insl
in
aam
sbb
sbb
testl
xor
loope
mov
mov
sub
mov
mov
subb
and
dec
cwtl
push
mov
fldl
jno
repnz
pop
outsb
mov
cmp
rcll
icebp
out
mov
and
movsb
mov
rcrb
xor
imull
loope
mul
daa
pop
jne
xchg
mov
rcr
jge
sub
nop
pop
sbb
xchg
mov
jno,pn
add
aas
adc
scas
xchg
aam
leave
ss
pop
adc
mov
jbe
push
xor
add
lock
jne
xor
cld
push
lds
mov
mov
or
loopne
clc
outsl
adc
jne
fucomp
push
jmp
sub
push
hlt
mov
mov
decl
test
mov
xor
jb
push
or
lahf
dec
ds
push
and
sbb
ret
mov
mov
jno
dec
in
or
mov
jb
push
mov
iret
add
add
lahf
in
xchg
ror
iret
sbbb
xchg
mov
test
aas
pop
stos
xor
push
mov
and
addr16
mov
sbb
rorb
jl
dec
add
jle
popf
mov
cmp
inc
adc
aaa
leave
sbb
dec
cwtl
pop
xlat
mov
repnz
pop
cltd
imul
out
negl
outsb
mov
xor
shll
dec
xchg
xlat
loopne
cmpsl
sbb
sarb
cwtl
mov
nop
test
out
push
dec
sub
icebp
push
movsl
aaa
inc
mov
inc
xchg
cld
xor
sbb
push
xchg
out
pop
imul
js
imul
mov
es
imul
ljmp
loop
lahf
jb
test
xchg
mov
sahf
ss
js
stos
sub
jns
or
push
addr16
clc
in
cmp
jmp
sti
cmp
adc
xor
loope
adc
push
icebp
jge
dec
aam
movl
jb
jge
and
test
ja
mov
stc
popa
xchg
nop
and
push
sub
insl
mov
repnz
inc
inc
push
clc
aad
ds
ffree
mov
jo
sahf
pop
mov
cli
lea
imul
lahf
jo
cmp
ss
dec
jbe
mov
cmc
lcall
ja
lret
sbbl
fbld
add
push
push
cmp
orb
jecxz
xchg
sub
dec
in
enter
cmp
stc
push
pop
jl
adcl
das
leave
mov
or
add
cmp
sub
pop
pop
in
mov
testl
fcoml
pusha
or
or
sbb
aas
lea
in
mov
mov
mov
or
das
popf
fisubs
clc
insl
dec
es
int3
sub
pop
push
addr16
sbb
mov
std
cltd
mov
and
add
int3
filds
shlb
andb
sahf
mov
push
movsl
push
dec
out
sub
test
inc
and
push
mov
dec
jb
insl
adcb
insl
inc
cmp
out
ljmp
aam
adc
cmovo
dec
cli
sarl
mov
call
cmp
out
pusha
mov
rcrb
cmpsb
or
cmp
sub
or
or
add
xor
int
sub
shr
push
jmp
mov
cmpl
or
jp
fdivs
mov
jmp
mov
sahf
shll
mov
push
mov
mov
das
loop
push
sbb
and
and
cmp
xor
pop
jmp
rcll
hlt
cmp
stc
sub
mov
add
cmp
mov
mov
sbb
dec
fidivrl
sbb
cltd
or
outsl
movsb
aaa
adc
aad
addr16
and
test
cs
jnp
sub
je
mov
push
pop
push
sahf
aad
cmc
negl
cld
cs
hlt
aad
add
fcom
jno
addr16
bound
je
cld
std
in
jge
pop
inc
and
int3
pop
out
pop
pop
mov
fidivl
repnz
push
xchg
xchg
mov
lods
and
mov
mov
leave
leave
xor
js
mov
adc
push
sbb
and
jle
shrl
add
out
inc
mov
pop
stos
loope
test
and
push
and
or
in
cwtl
mov
and
lahf
xchg
int
inc
mov
jne
in
shl
movsb
dec
xadd
cli
or
or
nop
dec
mov
sub
cltd
sahf
xor
and
mov
insb
das
cmp
mov
popa
sbb
push
imul
jp
imul
pushf
xchg
cmp
sbb
sarb
mov
inc
push
mov
inc
xchg
push
pop
mov
jb
xor
enter
xor
int3
sahf
ja
inc
lods
mov
xor
lock
test
js
lret
sarl
mov
iret
js
push
xchg
cmp
cmc
es
jns
lcall
shrb
fsubrs
pop
mov
insb
out
mov
adc
and
adc
mov
push
cmp
mov
aam
std
or
jns
jecxz
fdiv
shrl
movsl
adc
inc
xchg
cmpsb
jp
mov
mov
call
adc
sbb
push
sub
fists
jp
int3
lcall
mov
ret
push
add
mov
mov
sbb
iret
xor
xchg
scas
dec
mov
shlb
es
movsb
mov
lods
shll
cmp
test
jnp
jge
add
push
out
mov
sub
outsl
rorl
mov
out
lret
pop
lock
sbb
jmp
popl
outsb
pop
mov
insl
rep
fbstp
repnz
xchg
mov
pop
mov
xchg
jmp
sub
pop
icebp
mov
dec
jo
inc
int3
or
jg
pop
xchg
xchg
cmp
and
jno
stc
adc
dec
push
jno
and
out
ss
cmp
std
into
lret
fstpt
push
test
xchg
rcr
ja
addb
inc
inc
sbb
cmp
cwtl
mov
push
pop
in
add
mov
xor
lret
loope
out
repz
and
out
lret
gs
ds
ljmp
mov
in
clc
and
adc
lret
insb
inc
faddl
mov
lahf
sub
pusha
into
aam
fldt
sub
xchg
rcll
lock
popa
fs
dec
xchg
sub
incb
pop
inc
sub
xor
jae
mov
push
sub
arpl
imul
and
insb
jp
jo
mov
movsb
mov
mov
pop
mov
jbe
sbb
cs
gs
mov
movntq
movsb
lret
add
in
mov
mov
dec
push
inc
sbb
pop
hlt
enter
ds
mov
lcall
push
jno
push
repz
imul
pop
icebp
xchg
mov
enter
stos
adc
mov
repnz
imul
cli
jecxz
sahf
inc
and
mov
inc
arpl
pushf
mov
and
ror
leave
pop
mov
icebp
jp
out
les
rcll
out
jge
std
xchg
jmp
bound
insl
es
mov
stos
cmp
ja
cmp
lea
cmp
stos
sbb
leave
loopne
push
enter
shll
sub
pop
push
dec
jge
stos
dec
jne
popa
bound
jp
pushf
ljmp
shlb
icebp
js
mov
call
add
pop
dec
mov
push
or
add
insl
mov
sub
arpl
push
xchg
es
inc
ds
jno
clc
fcomi
fldcw
out
gs
xor
cs
xchg
scas
les
push
pop
inc
aas
clc
xor
adc
insb
aad
add
adc
lds
sbb
jno
jge
mov
stos
leave
pop
test
push
mov
jo
sti
or
addl
cld
mov
fiaddl
xor
fwait
cmp
push
cli
jnp
xchg
sub
jns
sub
mov
mov
or
inc
xchg
ljmp
xchg
sub
mov
sbb
xchg
sub
mov
jle
incb
mov
pushf
stos
jl
mov
push
cmp
mov
faddl
inc
shr
sahf
gs
je
xchg
ret
fdivrl
sub
negb
xlat
pushf
mov
lock
cmp
or
add
ss
xor
mov
inc
dec
or
ds
sub
enter
inc
sarl
adc
inc
sahf
jbe
lret
cmpsl
pop
inc
mov
add
iret
or
jle
jp
xchg
cmp
out
mov
inc
cld
mov
out
stc
and
sub
inc
cli
inc
out
mov
xchg
test
dec
sti
ljmp
xor
cmpsb
arpl
adc
cwtl
stos
lahf
jns
idivb
das
inc
int3
push
pop
xchg
xlat
jecxz
add
xor
xor
jmp
js
push
jge
addr16
pop
leave
lret
inc
dec
mov
test
mov
mov
ss
sub
mov
testb
push
bnd
lret
cmpsb
les
mov
enter
into
es
cmp
cwtl
push
mov
movb
sti
jge
mov
mov
into
add
jo
fwait
cltd
scas
inc
stc
inc
xor
stos
mov
push
cmp
lea
mov
dec
addb
ret
pop
mov
jmp
dec
mov
xchg
aas
enter
pop
arpl
mov
and
adc
jle
int
rol
push
pop
pop
dec
std
mov
mov
cld
mov
pop
repnz
das
push
and
int
jnp
push
add
xchg
push
sub
add
xchg
aad
in
add
xor
jp
leave
popa
pop
sbb
mov
inc
mov
xchg
xor
sub
sahf
push
dec
cltd
push
pushf
ds
mov
flds
outsb
or
jmp
mov
fisubrl
sub
popl
xchg
pop
loopne
mov
mov
add
ljmp
mov
dec
xlat
cmpsb
pop
jle
hlt
loopne
in
jbe
js
xchg
cmp
mov
lahf
cs
movsb
lahf
mov
xchg
mov
shr
mov
jmp
gs
int3
push
xor
sbb
fs
mov
and
js
pop
mov
cmpsl
sarb
fsubrs
jmp
adc
jmp
or
sbb
hlt
cmp
movsl
clc
mov
int
or
rorb
push
cmp
and
pop
cwtl
and
mov
dec
outsl
movsb
add
sub
sub
test
adc
ss
mov
sbb
mov
or
arpl
fdivr
test
in
sub
lahf
int
sar
push
pop
outsb
subl
jmp
cmc
sub
sbbb
in
adc
push
xor
mov
movsl
and
ficompl
sahf
sub
mov
sub
pusha
nop
xlat
jle
push
mov
inc
mov
ret
mov
sbb
dec
mov
mov
push
cld
mov
cli
ret
loopne
mov
jmp
xor
jnp
insb
and
mov
sub
fbstp
repz
pop
jae
cmp
ss
fnsave
or
push
mov
arpl
std
scas
in
jns
test
mov
sbb
pop
cmp
inc
jae
leave
mov
lds
jb
and
cld
mov
test
ds
int3
pop
leave
repnz
adc
js
shll
lcall
fbld
or
out
rcrl
xchg
mov
and
fisttps
pushf
aam
push
mov
dec
lcall
inc
xchg
cmc
xchg
sbb
andb
in
and
sbb
ja
hlt
bound
lods
ss
das
push
mov
std
or
pop
mov
xchg
and
xchg
aaa
sbbl
and
pop
ja
les
pushf
insb
xchg
ret
or
cwtl
mov
scas
fists
jle
in
cld
mov
inc
pop
lcall
xchg
push
xchg
or
ss
lds
push
pusha
adcb
inc
mov
loope
int3
push
ret
cltd
ja
dec
fidivs
add
pop
imul
dec
push
inc
movsb
int3
lea
unpckhps
scas
pop
cmp
adc
sub
mov
add
shr
or
movsb
in
jge
dec
lret
add
mov
ljmp
jbe
adc
pop
mov
or
bound
jnp
std
xor
int3
sub
lock
xorl
jbe
cld
sbb
sub
popf
leave
jnp
in
and
insl
loop
call
movsb
into
adc
mov
cs
mov
sub
lds
outsl
imul
cli
pop
pop
gs
adc
test
dec
mov
add
aam
lret
dec
or
dec
fstp
int
movsl
xor
pop
add
mov
imul
or
mov
ret
inc
stc
pop
xor
sub
cmpsl
mov
sub
mov
push
and
inc
or
sbb
cltd
adc
std
ja
pop
or
xchg
dec
lods
add
and
out
mov
add
and
popf
std
mov
mov
ror
sub
test
pushf
pop
aaa
into
mov
jnp
scas
pop
xor
dec
add
xchg
lods
jno
cmp
imul
shrl
arpl
push
push
lret
outsb
test
add
outsb
pop
test
xor
movsl
inc
lods
int
jecxz
push
pop
mov
scas
push
pop
xchg
mov
imul
lahf
ja
lea
sub
popa
out
outsl
pop
arpl
adcb
ret
xlat
xor
mov
push
mov
enter
cmp
sbb
mov
pop
int3
das
or
insl
add
and
pushf
insb
clc
jbe
fldt
out
adc
fstpl
aad
jno
fxam
iret
dec
ss
sbb
stc
lods
popa
xor
lahf
repnz
xor
mov
pop
in
frstor
outsb
xchg
add
pop
xor
or
loope
dec
iret
pop
fisubrs
popf
mov
shrb
jp
jne
lods
repz
scas
add
sub
loope
xor
dec
sbb
mov
dec
lret
enter
sahf
cmpsl
and
push
incl
pop
inc
mov
dec
movsl
cmp
icebp
jg
dec
mov
mov
xchg
fistpl
sub
cs
iret
lods
ffreep
in
sahf
inc
loope
and
imul
clc
adc
rorb
sbb
popa
or
fxch
fcoml
or
das
mov
insl
inc
inc
jbe
insl
cmp
notl
mov
lret
adc
mov
test
pop
addr16
mov
call
sbb
rol
pop
push
roll
cli
faddl
mov
pop
mov
mov
insb
inc
aas
loopne
aaa
inc
cmpsl
scas
pop
dec
mov
mov
mov
jl
sub
sarl
cs
jns
fsubrl
roll
inc
push
addr16
sub
xor
cmp
aad
gs
outsb
loopne
and
jbe
jl
dec
mov
lret
cmp
aaa
dec
xchg
test
addl
jle
icebp
fnclex
call
push
sbb
cltd
movsl
dec
fs
out
lds
jle
hlt
ljmp
stc
loop
test
sub
push
popa
xchg
add
cmp
mov
or
out
aam
add
popf
dec
dec
sahf
xchg
sbb
js
pop
ret
inc
ret
add
mov
movsb
jno
mov
pop
imul
mov
rcr
pop
in
push
loop
xor
or
mov
loop
cmc
inc
fidivs
movsl
xor
neg
inc
ljmp
rorb
sar
cmpsl
repnz
idiv
in
call
or
fildl
xchg
pop
adc
push
pop
xchg
adc
divb
adc
mov
mov
or
outsl
pop
in
push
mov
dec
pop
pop
pop
loope
dec
jg
sub
cmp
cmpsl
xchg
pop
inc
sbb
pop
dec
cld
pop
ffreep
icebp
inc
jmp
mov
push
adc
push
xchg
mov
fiaddl
or
jo
xchg
lcall
andb
orb
rclb
sub
pop
addr16
inc
xchg
xchg
mov
mov
push
mov
sbb
sub
and
aad
gs
xchg
sbb
and
iret
std
enter
shlb
add
or
dec
push
sbbb
repz
test
movsl
int
pusha
mov
aaa
rcr
rolb
imulb
mov
sbb
xchg
push
cli
in
shrb
shlb
ja
sbb
push
pop
imul
jl
testl
out
arpl
ja
jecxz
mov
cmpsb
fstps
mov
js
add
sub
add
xor
jae
imul
into
imul
xchg
int3
bound
popa
loop
adc
xchg
in
mov
adc
lods
insl
sub
jno
or
addr16
int
pop
shll
push
pusha
repnz
aad
mov
js
dec
mov
mov
add
and
adc
mov
xchg
mov
lea
mov
inc
mov
clc
rcl
test
dec
call
in
pop
mov
mov
repnz
dec
cld
les
lods
push
sub
scas
fisttpll
ficoms
repnz
fistl
and
leave
or
push
outsl
sbb
pop
inc
nop
ss
mov
aas
mov
daa
xlat
lock
xor
or
mov
test
aad
pandn
cmp
scas
mov
pop
push
adc
scas
imul
and
sub
adc
fmull
add
std
ret
pop
mov
cmp
test
test
shl
mov
cmp
and
or
or
arpl
jno
jno
repz
add
les
add
dec
hlt
les
movsl
divl
imul
mov
mov
xchg
pusha
andl
xchg
sti
push
push
or
push
ret
in
out
loope
jmp
mov
les
cs
cmp
sbb
imul
fldenv
bswap
xor
push
inc
mov
fs
lock
aad
ds
xor
add
jo
sti
or
out
push
jnp
and
mov
dec
mov
into
gs
sbb
cltd
push
loop
cmp
movsb
shrl
or
mov
mov
pop
and
xchg
dec
lret
jmp
sti
pop
outsl
jae
out
jnp
and
xor
aam
xchg
call
popf
dec
cld
arpl
dec
cwtl
shrl
cli
jp
cli
push
gs
mov
je
push
ret
add
loope
fisubl
sbb
sbb
jns
xchg
daa
xor
sbb
dec
popf
mov
add
out
cmpsb
add
jge
pushf
sti
mov
cmp
das
adc
mov
es
fucomp
sbbl
je
dec
lods
push
and
shll
jno
cmpsl
jae
inc
xchg
mov
push
push
movsb
mov
pop
inc
cmp
adc
fdivl
aam
mov
stos
lahf
lods
dec
adc
cmp
pop
jne
push
cmp
mov
mov
pop
mov
fidivl
xor
mov
add
aam
or
mov
jo
popa
or
pusha
push
cmpsl
adc
mov
imul
push
rcll
push
jnp
jne
jae
movsl
push
out
repnz
mull
rcr
imul
jg
adc
scas
stc
jp
dec
dec
cmpsl
jecxz
add
adc
popa
loop
mov
cld
mov
jnp
push
inc
daa
pop
inc
xor
cltd
sub
outsb
mov
ja
fcoms
ja
aas
stc
out
cmpb
mov
shr
adc
mov
pop
dec
jmp
dec
in
lea
daa
xchg
dec
and
jg
mov
stos
push
lock
cmpsl
pop
das
or
add
mov
lcallw
xchg
mov
mov
push
pop
cmp
mov
push
mov
cmc
sub
xchg
sti
sub
inc
loopne
cli
aas
inc
ret
out
push
ret
nop
minps
in
pop
cmp
sbb
cs
rcr
sbbb
jmp
jbe
xor
stos
shrl
leave
out
push
pop
test
adc
cmp
pushf
inc
mov
jmp
dec
and
fisttps
outsl
pop
pop
jp
sub
daa
fsub
jae
adc
dec
xchg
xchg
int
xor
mov
mov
and
push
stos
mov
dec
adc
lahf
and
xchg
push
lret
push
cmpsl
sub
dec
arpl
paddw
call
rolb
mov
xchg
data16
xchg
pop
and
test
sbb
call
mov
das
adc
lret
je
push
pop
rorb
or
sbb
push
and
jle
fwait
or
int3
bnd
hlt
pop
aas
or
mov
jne
jmp
scas
jle
dec
inc
pusha
sbb
les
mov
daa
int3
lock
or
xor
dec
xchg
mov
movsl
push
das
jo
ss
aad
pop
test
mov
push
rcl
jo
and
movsb
inc
popf
inc
loop
aas
out
sub
pop
aad
pop
adc
or
fstpl
mov
mov
and
mov
xor
je
cwtl
jg
pop
mov
in
dec
cli
mov
push
imul
push
ss
mov
jge
or
in
lock
cmp
cs
dec
or
cmp
pop
or
adc
lcall
inc
jp
pop
fistpl
repnz
mov
pushf
mov
into
gs
ret
dec
add
mov
mov
fucom
out
mov
xor
sub
sbb
data16
pop
mov
cmp
imul
jmp
fstl
shr
popa
dec
pop
jae
push
icebp
aaa
aas
push
bound
sbb
fdivrl
jnp
push
jo
repz
xchg
xchg
insl
mov
movsb
xchg
cmpsl
test
xchg
sahf
scas
cmp
jecxz
jb
push
scas
cli
jns
test
cmpsl
push
jae
push
divl
xor
add
cld
and
mov
and
mov
icebp
outsl
push
xchg
pop
adc
insl
sahf
jbe
jp
je
les
inc
bound
iret
mov
adc
lds
test
mulb
lds
addr16
mov
aad
dec
push
lods
ficoms
out
loopne
xchg
xor
imul
loop
movsl
test
lock
jo
bound
cltd
mov
xchg
testb
bound
rorl
iret
xor
add
sub
mov
mov
sarl
mov
les
dec
jae
je
data16
mov
sbb
lahf
testb
cmp
pop
shlb
outsl
jns
push
jp
jbe
sarb
push
and
push
pop
stos
mov
fcoml
cwtl
and
es
xchg
dec
push
repz
stos
mov
leave
sub
mov
adc
outsb
jle
lds
push
scas
cltd
pop
mov
test
leave
or
loop
or
sti
mov
das
in
ljmp
push
inc
dec
pusha
cltd
push
push
cmpb
loop
test
idivl
gs
sub
call
pop
push
icebp
les
cmp
lds
aad
xchg
stos
lock
clc
cmp
test
mov
lods
or
adc
mov
xor
movsl
popf
jg
cmp
mov
cwtl
lods
mov
mov
stc
cmp
mov
mov
and
sbb
enter
outsl
xlat
ret
into
repz
inc
nop
lea
push
mov
cs
xor
adc
cmp
mov
int
cmp
outsl
pop
enter
jecxz
dec
test
inc
clc
pop
fadd
adc
cmp
sub
int
je
mov
mov
pushl
divb
inc
cli
xor
aam
jo
and
and
mov
jnp
xor
popf
xchg
jno
mov
mov
sub
in
pop
pop
int3
insl
mov
add
lods
scas
sbb
jno
mov
inc
mov
nop
jb
js
das
jl
add
movsb
jl
and
std
in
mov
lock
dec
sub
cmc
jmp
lahf
push
hlt
mov
pop
or
inc
cli
in
xchg
js
cmp
or
cmp
jne
bound
dec
enter
xlat
mov
hlt
xor
mov
sbb
sub
sub
dec
push
inc
inc
xchg
lds
imul
daa
sbb
push
int
mov
add
or
mov
stos
aad
pop
into
movsw
xor
int
inc
xchg
jge
sbb
or
jnp
enter
lret
jl
xchg
mov
lods
gs
sbb
jge
inc
test
and
mov
jb
push
mov
adc
sahf
fwait
pop
xchg
mov
fwait
popa
or
inc
push
ret
mov
movl
pop
popa
ret
jmp
scas
div
andb
push
push
adc
mov
nop
mov
nop
aas
test
mov
jmp
pushf
push
adc
xor
cmpsb
cs
imul
mov
enter
test
mov
cmc
inc
cmpl
fnstsw
adc
mov
add
xor
hlt
les
or
shll
pop
ret
mov
sar
sub
mov
xchg
lahf
inc
test
dec
inc
fwait
out
sub
aad
mov
and
inc
cli
sub
mov
jle
out
movsb
mov
lock
cmpsl
dec
jne
push
mov
and
jnp
mov
addl
push
xchg
or
mov
cmp
adc
jae
sbb
pop
push
jmp
dec
cmp
push
sarb
lock
rcr
incl
stc
scas
outsl
inc
gs
fs
mov
loop
pop
mov
add
pusha
pop
xor
cltd
lret
xchg
sti
adc
jmp
mov
outsb
cli
mov
push
mov
xlat
mov
mov
test
shrl
outsb
shll
inc
popf
dec
xchg
test
cmp
call
and
lahf
fnstenv
inc
sub
sub
ja
cmp
mov
jb
repz
or
or
mov
mov
sarl
test
adc
push
lods
leave
xchg
insb
jmp
movsl
shrl
mov
mov
clc
and
ljmp
lret
aad
fs
out
pop
jmp
out
cmp
insl
xor
ret
lods
jecxz
cmpsb
xchg
call
shrb
pop
repnz
jl
pop
fs
mov
loope
sub
shlb
adc
rcrb
fs
clc
mov
inc
pop
call
add
and
or
sub
es
adc
dec
dec
dec
enter
push
pop
xchg
jno
ficoml
pop
cmp
roll
pop
sub
and
xor
or
aad
cmp
sbb
or
ficoml
lret
mov
jae
pop
push
dec
daa
xchg
pop
adc
jbe
mov
cli
or
scas
pop
adc
int
push
xchg
pop
clc
adc
xor
jge
cs
push
sub
push
adc
es
jb
mov
leave
mov
fidivrs
cmpsb
sub
and
add
leave
loopne
sbb
out
loopne
int
xlat
leave
dec
inc
cmp
pop
inc
push
fcmovu
loop
dec
pop
mov
lods
cld
nop
mov
xchg
xchg
push
jnp
inc
mov
and
dec
mov
sub
fistl
dec
jge
stos
ror
fwait
js
hlt
and
mov
jb
xchg
mov
mov
pop
mov
icebp
fidivrs
mov
xchg
add
dec
fcoms
nop
rorl
dec
mov
test
repz
insl
mov
and
push
mov
xchg
shrb
je
repz
sbb
jb
sub
jnp
imul
sbb
mov
sub
jb
insl
movsl
jmp
fldcw
mov
jbe
or
push
pop
mov
push
out
adc
xor
pop
dec
or
cmp
in
jbe
fldcw
sbb
fstps
add
mov
stos
mov
rcl
repnz
xchg
sbb
sbb
into
into
data16
mov
mov
jmp
dec
scas
daa
sbb
jp
cmpl
into
jnp
fnstsw
add
nop
ljmp
mov
jnp
inc
dec
mov
mov
lahf
mov
js
mov
or
imul
pop
pushf
dec
push
adc
sub
and
fisubrl
mov
outsb
mov
push
push
jno
mov
adc
aas
lret
aad
scas
mov
lahf
push
data16
ljmp
test
outsb
data16
xchg
sbb
or
in
aad
rcl
das
xlat
out
lds
dec
rorl
movsl
sbb
std
icebp
das
jmp
in
mov
jmp
das
push
pop
inc
shrb
pop
lea
sub
sahf
mov
ljmp
js
into
pop
in
add
adc
loop
jg
ficoms
sbb
xchg
adc
push
or
cmp
and
iret
rcr
push
xchg
andb
mov
adc
clc
and
cwtl
mov
pushf
mov
xchg
arpl
sub
mov
push
push
jp
out
and
cmp
dec
dec
stc
loope
inc
out
xlat
xchg
pop
cmpsl
push
leave
lcall
daa
out
dec
mov
frstor
arpl
jbe
or
rclb
dec
inc
inc
popa
xchg
fcmovbe
dec
xor
or
mov
mov
cmp
mov
or
jp
in
jne
shlb
dec
and
movsb
lods
xchg
jnp
cmc
or
or
add
dec
fwait
in
outsl
push
add
push
pop
adc
imul
pop
xchg
jne
xor
iret
pop
mov
lock
pop
mov
aam
sub
and
inc
lret
pushf
scas
lret
xchg
jle
pop
add
std
xor
loopne
ret
mov
mov
jl
dec
dec
adc
push
dec
jnp
inc
loop
hlt
scas
arpl
loopne
in
xchg
enter
ficomps
aam
inc
xchg
insb
pop
sbb
lock
mov
pop
dec
mov
lret
sbb
jge
sti
pusha
sbb
push
das
lret
cmc
add
dec
testl
xchg
pop
and
xchg
mov
inc
lret
mov
xchg
xchg
test
pushf
pop
inc
dec
xor
adc
push
sbbb
mov
fcmovb
in
lcall
cmp
add
rcrb
nop
test
push
lret
pop
je
pusha
aaa
push
scas
dec
sbb
xchg
leave
mov
icebp
aaa
sub
push
jle
jno
sub
rcll
movsl
inc
loope
out
mov
jns
xchg
jge
inc
adc
das
inc
test
jle
or
or
jns
imul
in
test
in
xor
arpl
jno
js
lock
mov
shlb
xchg
aas
jecxz
xchg
dec
icebp
pop
dec
clc
fistl
mov
or
addr16
and
pop
push
jns
and
repz
jnp
push
fnsetpm(287
stos
and
jae
btr
push
inc
add
add
mov
and
sbb
inc
fists
jb
lahf
push
lea
cmp
mov
cmc
into
pop
ds
jns
shrl
test
cmp
aad
outsl
xchg
add
push
inc
xchg
shll
push
cmpsl
gs
add
dec
insb
mov
mov
pushf
sarl
je
sbb
push
mov
add
adc
shll
imull
pop
sub
xchg
stc
insb
push
inc
and
push
jb
pop
std
ret
mov
sbb
mov
jne
das
cs
decb
push
jp
lahf
add
pusha
loopne
sbb
mov
jo
stos
mov
sub
jae
dec
lret
inc
dec
cmp
inc
hlt
jmp
add
xchg
xchg
pop
xor
inc
cwtl
popa
xchg
lahf
cmpsl
inc
sbb
fbld
and
lret
or
leave
add
dec
clc
mov
sub
imul
in
repz
mov
lcall
sahf
xchg
xlat
decl
pop
add
stos
push
clc
mov
dec
scas
into
scas
mov
aad
mov
repz
push
mov
popl
iret
xchg
test
pop
push
sbbb
arpl
pop
in
and
icebp
dec
push
xchg
movsb
or
pop
sub
xchg
ljmp
loop
loopne
ljmp
xchg
sub
lret
pop
mov
test
xchg
cltd
pop
jns
mov
ja
repz
mov
and
shl
jle
push
inc
ret
shl
repz
mov
cli
or
push
sbb
movsb
add
inc
adcl
xorb
lock
mov
xchg
mov
ja
xchg
sti
test
loopne
push
jecxz
clts
ss
bound
rolb
test
sub
fstp
mov
aad
test
out
jp
adc
push
cmp
mov
sbb
sahf
test
jne
mov
into
scas
mov
inc
inc
jbe
dec
dec
jo
mov
mov
lret
int3
dec
hlt
pop
xchg
sarl
sbb
out
std
hlt
jno
loope
nop
cmp
insb
add
push
or
out
push
hlt
and
pop
add
sbb
and
cld
clc
je
adc
cs
sbb
jno
aad
jne
cmp
cmpsl
cmp
cmp
mov
pushf
test
and
cmpsb
xor
mov
cmp
push
xor
ret
les
data16
adc
jl,pt
adc
mov
or
pop
xchg
movsl
inc
bound
add
je
loope
adc
popa
popf
xchg
shll
sbb
hlt
in
jge
jmp
addb
movsb
loopne
daa
xchg
dec
div
add
adc
jle
fmuls
cwtl
adc
adc
cmpsl
pop
sub
push
xor
inc
out
lret
xor
pusha
and
ds
xchg
test
outsl
rolb
xor
ret
xorb
cltd
popa
adc
mov
sub
pop
jno
shll
and
sbb
sub
imul
xor
push
jg
jns
inc
cmp
adcb
mov
or
mov
testl
xlat
sbb
test
mov
mov
les
jbe
andl
movsb
jp
int3
lea
fs
inc
adc
mov
or
mov
out
push
jl
test
or
idiv
and
ficoml
pop
xlat
dec
cld
lock
divl
push
fsubl
xchg
test
push
jmp
mov
cs
arpl
stos
daa
jecxz
fwait
out
sub
negl
cmp
js
lea
add
shlb
mov
push
jge
in
out
rolb
fs
idivl
sbb
xorb
outsl
pushf
xchg
loopne
jns
inc
mov
pop
mov
dec
sub
cltd
push
int3
add
pop
fucomip
stos
into
fistpll
xor
outsl
popf
push
mov
or
cmpsl
fidivrl
pushf
inc
dec
mov
jne
aas
ret
add
mov
xchg
cld
pusha
fsubs
popf
jecxz
pop
mov
add
dec
aaa
dec
iret
sbb
iret
popf
cld
mov
insb
das
dec
inc
mov
popf
jmp
lods
sbb
dec
jne
mov
out
mov
test
lret
shl
pop
cld
out
push
ss
jle
dec
popa
fmuls
mov
mov
loopne
mov
xlat
addb
test
mov
xor
inc
es
dec
jnp
test
nop
inc
enter
in
push
ja
fcoml
mov
mov
adc
cmp
fsubp
push
in
pusha
inc
shl
iret
insb
cmc
shl
sti
jnp
clc
daa
add
jo
jno
movsl
pop
dec
adc
add
cld
hlt
add
jnp
loope
mov
sbb
add
dec
push
or
add
scas
adc
cld
and
sarl
mov
imul
arpl
xor
out
mov
xchg
movsl
lea
push
add
cltd
mov
pop
jmp
dec
mov
dec
iret
arpl
sub
insb
add
bnd
xchg
push
aam
stos
add
and
inc
addr16
aaa
push
pop
lret
push
cmc
shll
push
xchg
jecxz
fadds
cwtl
rorl
add
mov
fistpll
push
or
push
js
shrb
stos
mov
out
das
shll
push
arpl
xchg
jae
mov
ds
fwait
push
push
cmp
jne,pt
repz
lods
movsl
jecxz
es
outsb
shlb
sub
mov
and
hlt
inc
and
shlb
notb
jg
repz
insl
shl
xchg
adc
cmp
sbb
inc
loop
jecxz
mov
mov
push
xchg
ljmp
sub
dec
inc
xor
inc
iret
jae
loope
rcll
adcl
out
xlat
fdivl
stos
or
ljmp
sub
mov
cmp
jg
vprotb
sub
out
aad
mov
in
sarb
mov
xchg
filds
push
add
fidivs
mov
in
or
sbb
popa
sti
cmp
ljmp
jo
sub
loopne
cs
jecxz
test
test
out
out
repz
das
fwait
int
ret
mov
sub
cmpsb
hlt
cld
push
cmp
loope
and
lods
inc
add
mov
sahf
xchg
test
inc
insl
nop
cmp
flds
dec
movsb
adc
flds
cmp
ret
mov
nop
push
mov
jg
in
dec
ffree
out
mov
ffreep
shlb
inc
sbb
jmp
jle
jg
mov
mov
or
rcrb
inc
call
cmpsb
loopne
cmpsl
mov
sub
fiadds
ret
pop
dec
push
rcll
and
lret
in
icebp
jge
iret
imul
mov
mov
jecxz
lret
mov
pop
sub
sahf
sub
add
jl
mov
jns
jmp
jo
scas
mov
cmpsb
sbb
sub
push
pusha
jno
stc
and
data16
repz
add
fwait
push
hlt
inc
lcall
inc
pop
out
sub
out
popf
out
int3
cmpsl
lods
pop
lret
stos
fcomps
sub
mov
and
push
in
jnp
inc
jg
pusha
push
cmp
mov
outsb
mov
cmp
cs
cmp
lret
ret
mov
pop
push
sti
in
loop
jno
in
jnp
jecxz
sub
add
jb
jns
add
stos
negl
aam
ret
jp
mov
mov
pop
xchg
mov
xchg
jne
mov
inc
pushf
ds
mov
cmp
hlt
imul
cmc
mov
imul
out
sbb
xlat
fldl
jbe
xchg
inc
bndstx
idivl
test
aaa
hlt
leave
out
sbb
sahf
das
mov
push
pop
cmp
add
lods
or
ret
jl
dec
lods
or
push
mov
mov
fcmovu
sub
imul
stc
dec
insb
pop
fisttps
insb
repnz
addr16
inc
cmp
movsb
movsb
movups
mov
es
sub
xor
cmp
bound
lock
std
jg
lock
std
testb
cld
mov
push
sbb
push
mov
mov
sbb
mov
hlt
cli
sti
push
xchg
out
nop
out
xor
pop
out
inc
stos
divl
push
mov
outsl
or
mov
cmpsb
insb
sbb
sbb
cmp
pusha
mov
xchg
scas
dec
jnp
aad
bound
movsl
mov
repz
pop
bound
mov
cmc
push
sbb
push
lret
cmpsb
pop
sbb
ja
mov
inc
inc
cmpsl
gs
inc
cmpsb
aad
inc
stos
aaa
ss
cwtl
ret
or
cmc
fcoms
cwtl
sahf
stc
out
call
xchg
xor
ljmp
cmp
cmp
push
loopne
das
adc
dec
dec
loop
data16
and
mov
shll
ljmp
sub
cltd
pop
mov
jo
inc
testb
es
pop
in
je
adcl
loop
add
out
mov
shll
divl
add
lret
outsb
or
mov
xor
aam
adc
pop
das
mov
xchg
sbb
adc
jle
lods
shlb
push
sbb
sti
add
add
je
fistps
jmp
jne
scas
int
mov
jno
es
sbb
sti
sub
js
and
sbb
push
cmp
jne
outsb
jl
inc
adc
adc
mov
mov
outsb
cmp
or
ja
sub
je
and
frstor
dec
in
cltd
ja
push
dec
add
mov
xor
cmp
mov
mov
idivb
and
push
inc
cmp
cli
mov
adc
dec
cmpsl
out
loopne
xchg
testb
sub
stc
je
mov
mov
cmp
cli
mov
xor
and
inc
push
mov
push
sbb
mov
movsb
inc
bound
jo
inc
cmpsl
addl
pop
mov
les
jp
xchg
push
xor
mov
dec
enter
movsb
lods
fnstenv
pop
and
pop
es
out
dec
out
inc
mov
jl
jae
cmpsl
mov
idivl
insl
out
fucomp
push
inc
inc
popl
je
pop
clc
or
xor
out
icebp
and
dec
in
jp
mov
jle
push
imul
rcl
mov
cwtl
and
cld
lods
cmp
sub
test
xorb
lret
lods
mov
call
out
mov
mov
sub
test
push
xchg
add
pop
inc
aad
mov
mov
ficoml
sbb
push
jno
mov
xchg
and
aam
test
xchg
test
mov
test
sarl
rcrl
push
mov
outsb
or
bound
rol
repnz
lea
fcoms
inc
sahf
mov
cmpsl
mov
popf
cmp
pop
sub
out
xchg
jecxz
test
add
sbb
hlt
dec
stos
jmp
mov
xor
sbb
movsl
add
ret
dec
jno
fnstsw
movsl
divl
fwait
outsl
or
xor
inc
or
call
adc
cwtl
mov
dec
xchg
mov
jg
adc
imull
jb
loopne
in
mov
cmp
std
and
call
add
fcmovu
into
sub
adc
cmp
daa
cmp
mov
mov
add
add
or
add
inc
dec
call
rcrb
push
jbe
test
jg
mov
xor
dec
or
mov
out
in
xorps
nop
inc
inc
insb
xchg
fidivl
xchg
ljmp
out
outsb
popf
test
fwait
aaa
dec
mov
inc
shrl
je
or
xor
fcomip
push
out
std
call
aam
addr16
adc
lds
cli
ljmp
pop
lcall
out
fucompp
add
mov
out
loope
xor
xlat
mov
cmpsl
popl
inc
or
rcll
mov
cmc
cwtl
push
add
xor
mov
pusha
xor
arpl
jg
adc
shrl
mov
bound
jbe
mov
jo
cld
das
xor
inc
rorb
add
ds
lret
fldenv
shl
pushf
sub
in
add
test
out
das
iret
xchg
lret
addr16
adc
outsb
std
je
xlat
jnp
sub
inc
push
lock
shrb
xor
xor
adc
gs
pop
sub
xchg
jno
pop
pop
fwait
and
pop
add
xchg
or
nop
shr
insl
mov
in
inc
jne
adc
in
jns
gs
mov
push
mov
jle
lock
shlb
push
mov
xchg
jbe
cmp
sbb
es
les
cs
jnp
pushf
inc
in
inc
icebp
mov
push
cmpsb
dec
mov
fildl
mov
inc
enter
pushf
sahf
outsl
cmpb
push
insl
test
lahf
ja
mov
clc
data16
jecxz
mov
jne
or
in
subb
push
jle
jne
pop
enter
xchg
arpl
or
test
xchg
daa
aas
test
sbb
sahf
sahf
mov
shlb
stc
je
add
push
repz
paddsw
dec
cmpsl
inc
adc
xchg
jns
mov
stos
test
arpl
inc
lahf
js
sti
inc
xchg
loop
adc
mov
xlat
fwait
fs
shr
inc
sbb
adc
scas
lcall
add
sbb
inc
lods
in
add
aad
mov
push
cli
push
mov
iret
jg
mov
inc
adc
or
in
inc
xchg
inc
fnstcw
aas
push
lret
pop
xor
mov
leave
lret
pushf
mov
sbb
xchg
pushf
mov
pop
mov
jg
inc
and
mov
jecxz
int3
sub
daa
repnz
cmp
mov
cmp
or
pop
fdivl
xchg
inc
mov
sub
inc
shrl
and
sti
das
or
jb
lea
icebp
int3
mov
test
cmp
pop
jo
gs
movsl
xchg
dec
popf
push
or
aaa
fimull
jns,pn
cmp
mov
stos
jmp
inc
and
push
pop
mov
cmp
dec
cmp
sbb
mov
rcl
and
loope
xchg
in
in
fmul
cs
push
xchg
outsl
sub
mov
lcall
jbe
clc
insb
add
adc
or
das
cmp
mov
aaa
andl
cld
xor
mov
mov
mov
cmp
jae
addb
push
push
pusha
adc
mov
adc
sub
cmc
and
cmp
inc
hlt
xchg
cli
insl
outsl
insb
pop
mov
fwait
loope
sbb
sbb
icebp
jl
and
mov
lret
mov
or
xor
sbb
ljmp
adcb
sbb
push
ror
and
daa
inc
cmp
arpl
pop
mov
xor
jae
sbb
int3
iretw
sbb
insl
sbb
je
dec
das
out
and
movsl
dec
adc
and
dec
xchg
ljmp
and
jns
adc
or
popa
fdivrl
add
xchg
lret
lods
fidivrs
in
push
adc
imul
aaa
ja
or
rclb
jecxz
mov
mov
push
push
call
push
jle
mov
test
aas
sbb
nop
sbb
test
fimull
cmp
add
call
mov
fidivrs
out
mov
jns
pop
scas
daa
les
inc
ja
mov
xor
test
add
pusha
push
in
pushf
xchg
pop
xor
test
pop
pop
jmp
shl
mov
mov
pop
adc
pop
sahf
out
test
dec
out
lock
inc
mov
clc
push
dec
push
in
adc
sub
sub
push
je
mov
repz
push
dec
outsl
enter
addr16
pop
xchg
lret
mov
dec
addl
cmpsb
sbb
inc
mov
push
inc
mov
mov
xlat
ror
rorb
inc
out
lret
xchg
jl
fisttpl
add
mov
cmc
xchg
inc
or
mov
xchg
xchg
mov
pusha
dec
sub
mov
or
out
ja
lahf
popf
ret
jne
in
testl
in
push
aaa
shll
lds
fdivl
and
icebp
loopne
inc
lret
rclb
push
stos
out
stc
and
fmulp
cs
cmp
out
jnp,pt
les
xor
push
addl
pop
adc
dec
mov
ljmp
adc
rcr
sbb
push
add
mov
pusha
cmp
xlat
mov
jns
fildl
andb
jns
out
fbstp
enter
xor
mov
outsl
pushf
pop
sbb
push
pop
lock
int3
cmpsb
adc
pop
push
testl
mov
filds
xor
sub
in
ds
and
int3
ret
insb
popf
push
enter
mov
call
or
aad
mov
jb
leave
stos
push
push
pop
cmp
dec
ds
insl
fsts
add
call
mov
sbb
jb
imul
push
mov
test
pushf
mov
dec
inc
cmc
xor
clc
fisubs
in
sahf
push
inc
outsl
inc
mov
loope
test
mov
jo
sbb
inc
std
dec
nop
xchg
nop
loop
fcmovb
add
lahf
int3
enter
xor
dec
push
addr16
pop
sahf
mov
fstps
sbb
adc
dec
inc
cmp
xor
fwait
addl
dec
loopne
push
or
testb
push
iret
and
or
pop
push
bound
xchg
lahf
daa
sub
jo
fbld
jmp
jmp
aam
cwtl
popf
dec
sbbb
pushf
xor
mov
hlt
enter
clc
arpl
fs
inc
mov
in
adc
sub
sti
ss
mov
xlat
and
xchg
rorl
ds
and
mov
roll
jp
lock
dec
and
leave
fwait
dec
sti
aam
adc
pushf
in
pop
jmp
clc
jmp
mov
adc
rorl
mov
stos
hlt
sub
mov
popf
xchg
push
ljmp
push
mov
outsb
out
mov
out
add
outsb
in
jge
xchg
clc
mov
push
popf
lds
mov
xor
mov
outsl
je
or
cs
arpl
sub
mov
out
bound
push
test
sub
lea
push
addr16
mov
loope
dec
outsl
dec
lods
or
add
lock
repnz
xchg
mov
inc
lods
bound
xor
mov
rorl
lahf
cwtl
pop
cmp
mov
cmp
mov
xchg
icebp
or
adc
stc
cmpsl
lea
mov
mov
data16
xchg
in
xchg
cmovae
stos
pop
mov
sarb
les
test
aam
pop
push
mov
stos
movl
mov
mov
inc
inc
test
push
sti
cmc
push
push
push
adc
mov
adc
outsb
insb
cmp
mov
test
cwtl
loopne
test
cmp
dec
sub
loopne
stos
or
adc
bound
cmp
psllw
iret
dec
jl
mov
call
rcrl
xchg
mov
insb
or
inc
or
hlt
or
push
in
cmpsb
int3
out
mov
outsb
xor
repz
mov
imul
stos
movsb
repz
mov
test
fadd
jne
add
or
mov
jae
sbbl
pushf
push
lock
push
mull
mov
pop
fucomip
push
pusha
xchg
test
enter
or
enter
lret
push
mov
movsl
add
mov
je
mov
jo
add
jno
push
or
inc
inc
xchg
sub
xchg
subb
cltd
pop
and
and
xchg
mov
gs
shll
arpl
mov
add
cli
push
adc
outsl
rcl
sbb
xor
mov
mov
ret
pop
stos
pop
js
mov
out
push
dec
push
mov
lret
shlb
in
push
pop
mov
shrb
inc
pop
or
dec
stos
mov
adc
addl
aaa
adc
repnz
into
sub
xchg
and
imul
sub
insb
push
into
outsl
andb
xchg
sbb
xor
sub
test
repz
insb
adc
movsl
pop
jae
jbe
pop
fs
popf
bound
rsqrtps
cld
aas
repnz
call
fisubs
mov
cmp
out
lds
rcll
icebp
icebp
and
inc
js
add
cmp
testl
sbb
jns
insl
inc
into
mov
mov
enter
xchg
jns
in
test
push
in
fidivs
enter
mov
xor
idiv
or
cli
movsl
dec
adc
mov
jle
sarl
pop
adcb
cli
mov
mov
rcll
cmp
fistl
jmp
inc
xchg
or
movb
mov
std
jns
and
mov
push
jge
addr16
in
shr
fnstsw
out
mov
outsl
out
rclb
adc
mov
mov
or
mov
xchg
pop
loope
sbb
loop
scas
aaa
clc
pusha
push
cmc
add
jl
jp
fdivr
mov
xchg
pop
or
adc
dec
dec
fnstcw
sub
arpl
adc
xor
call
test
and
or
mov
xchg
cmp
test
mov
push
pop
sbb
int
jecxz
jno
sbb
out
sahf
ret
add
lods
cmp
in
push
std
add
dec
or
cmpl
push
dec
mov
xor
cmp
push
xchg
mov
les
rcl
adc
aaa
pop
aas
mov
push
jne
jb
mov
cmp
enter
inc
hlt
js
cmc
imul
sbb
das
push
ds
push
je
sbb
test
pusha
es
out
and
js
dec
loop
cmp
dec
mov
sbb
fistps
cltd
ja
cmpsb
mov
ja
into
fistl
adc
push
cmpsl
movzwl
cmp
loopne
in
jp
or
out
sub
jge
jle
jno
in
pop
dec
cltd
lods
out
icebp
lods
cmpsl
add
lahf
xchg
mov
jne
mov
scas
sub
cmp
hlt
cmp
fs
and
xor
push
mov
push
cld
cmpsb
jp
shr
or
push
add
fisubrl
sub
fcmovu
int
push
adc
mov
push
mov
jecxz
add
cltd
fucom
jp
mov
jnp
jle
aaa
mov
push
imul
std
adc
sub
ljmp
outsb
dec
popa
push
popa
lret
fsub
jo
xchg
xchg
mov
mov
push
lret
inc
movsl
inc
movsl
cmp
xlat
jmp
sarl
pop
lock
inc
push
cmp
sar
mov
xor
lcall
rorl
pop
mov
inc
cmp
cwtl
nop
mov
inc
cmp
xor
pop
mov
mov
mov
mov
cmpsb
bound
push
shrb
mov
jecxz
jne
cs
mov
mov
mov
add
dec
int
aaa
sub
bound
jb
sbb
mov
in
roll
inc
iret
fdivl
mov
fisttpl
push
mov
fsubrs
push
push
jecxz
cmp
out
ss
dec
mov
imull
fistpl
mov
fwait
push
add
cmpsl
jecxz
js
xchg
pop
movl
dec
popa
sbb
pop
adc
lds
loop
mov
sbb
or
sti
jg
xor
out
sbb
popa
mov
jge
pop
cmp
jb
shlb
cmp
sub
and
jmp
push
dec
sti
out
rcr
push
adc
ja
or
pop
movsl
mov
loop
in
fisttps
jge
inc
sbb
jg
inc
ljmp
in
imul
fidivl
push
fisttpll
hlt
inc
mov
addr16
pop
fists
add
stc
mov
stc
aad
cmp
push
test
jnp
lea
call
cmp
xorl
inc
loopne
out
sub
out
cli
daa
sub
hlt
jp
nop
icebp
movsb
into
or
test
pop
insb
push
int
mov
jge
jp
lcall
and
dec
push
mov
je
inc
andl
loope
rcll
scas
inc
inc
dec
mov
outsb
inc
add
dec
mov
and
lahf
lret
cmc
jge
leave
lods
idivb
cmp
xchg
xchg
fcomps
lods
insl
or
inc
push
in
xor
test
xchg
in
clc
lea
adc
ret
push
int3
push
sub
mov
jg
jmp
lock
cld
jmp
int3
mov
mov
lock
sub
imul
push
jg
jno
repz
xchg
aaa
les
testl
into
sbb
push
pop
mov
add
es
pop
xor
dec
sti
js
mov
sahf
loopne
loope
add
les
mov
mov
xor
rdtsc
bound
call
cmpsl
xor
mov
jae
mov
and
js
adc
adc
out
dec
subl
sub
pop
cmp
lret
data16
and
repnz
fimuls
xor
sbbb
fs
mov
and
sub
inc
loop
xchg
adc
loopne
adc
cltd
rcr
and
repnz
mov
cmpsl
fwait
lret
scas
sub
fwait
loopne
nop
ja
dec
jl
mov
xchg
ljmp
mov
xchg
or
sub
ret
gs
mov
insb
sbb
xchg
js
sbb
xchg
pop
push
jne
outsl
icebp
cmp
or
lds
cs
mov
rorb
cmp
mov
lds
fadds
inc
adc
int3
sbb
in
inc
pop
icebp
mov
push
mov
inc
jg
mov
hlt
fwait
stos
scas
dec
insb
jle
in
lahf
or
lock
xchg
les
or
adc
mov
add
sti
stos
pusha
rcll
insb
popf
mov
lods
in
int3
jno
mov
out
les
push
add
or
or
pop
gs
xchg
sub
enter
cs
ret
jno,pt
pop
xor
ret
rorl
pop
insb
pop
mov
data16
xchg
shrl
add
jmp
das
out
xlat
push
sub
imul
inc
push
inc
lret
jge,pt
pop
repnz
sub
jbe
jle
xor
insl
shll
mov
test
jmp
pop
lds
test
xlat
jp
xchg
fildl
xor
ret
aaa
dec
push
outsl
aad
lods
ret
aam
das
out
dec
in
mov
fisubl
mov
or
add
push
orl
push
sbb
ret
rclb
pusha
ret
push
stos
je
dec
les
cmp
add
aas
mov
outsl
cli
dec
mov
and
dec
xchg
shlb
cmp
push
jnp
inc
dec
repz
jbe
dec
outsb
call
ja
pop
test
repnz
mov
data16
mov
push
push
push
addl
test
inc
adc
add
ss
mov
ss
jns
or
jmp
jg
sub
xchg
xchg
dec
and
jae
outsl
add
in
clc
and
movsb
loopne
xor
push
iret
cmp
mov
out
in
mov
orb
jl
repz
jp
jbe
adc
out
push
pop
mov
lret
mov
out
aam
mov
mov
jnp
lret
aad
xchg
out
dec
sahf
stos
add
sbb
sbb
or
vandnps
insl
pop
push
adc
cs
dec
cmp
sbb
push
repz
mov
add
push
movsl
xor
popa
jle
outsl
and
xlat
mov
lcall
lret
cmp
mov
and
out
dec
pushf
and
dec
cmp
mov
pop
repnz
mov
les
int
lods
std
xlat
jmp
add
lods
data16
test
xor
test
call
scas
mov
hlt
test
lahf
add
out
sbb
sbb
insb
mov
pop
pop
cmp
fstps
das
into
jge
xchg
fbstp
out
jle
sub
or
loopne
xor
xchg
mov
push
cmp
scas
xchg
negb
outsl
hlt
data16
shll
inc
lret
ss
cmp
jno
xchg
repz
scas
jge
xor
cmpsl
stc
int
push
pushl
mov
add
sbb
xchg
jmp
inc
sbb
rcr
sub
push
cmp
pop
out
outsl
dec
add
negl
push
js
fsubl
or
movsb
repz
adc
fadds
cmp
stc
mov
jecxz
cmp
iret
popf
imul
adc
add
push
push
fldenv
aas
or
sub
bound
stos
into
lods
pop
in
jl
sub
int3
daa
xchg
cld
sbb
hlt
and
xor
xchg
lods
mov
outsl
or
adc
ja
test
push
jecxz
movsb
add
jge
inc
pop
sbb
sub
call
jmp
pop
hlt
fbld
cmp
jo
lret
aas
adc
xchg
out
lock
add
mov
pop
in
inc
movsl
sbb
test
sub
ds
loope
jle
adc
addl
dec
mov
mov
into
push
stc
jge
ss
xor
mov
push
pop
push
push
loop,pn
repnz
push
add
cmp
or
ret
punpckhbw
xorl
insb
popa
and
xor
mov
xchg
loope
sbb
adc
fldl2e
xchg
push
mov
arpl
sub
xor
arpl
popa
adc
lret
popa
xchg
in
cmp
adc
adc
hlt
sbb
jge
push
or
pushf
shlb
clc
cmc
arpl
cli
mov
cs
in
sahf
pop
loope
jbe
cmp
pop
nop
or
shlb
ja
jl
mov
sbb
push
lods
jne
adc
test
bound
lock
mov
fsubr
out
adcl
scas
cmp
push
fidivl
jl
lea
imull
mov
push
decb
fpatan
dec
out
and
push
sbb
sahf
cmpsb
stc
jnp
pop
mov
sbb
mov
into
cmpsb
test
dec
stos
inc
mov
mov
mov
stos
sub
xchg
aam
push
jmp
sbb
mov
mov
sub
shr
in
and
xchg
dec
lahf
aaa
scas
dec
insb
lods
xor
leave
or
daa
add
jbe
push
clc
scas
shll
int
mov
add
adc
dec
cmp
lea
cs
dec
xchg
rcrb
ret
fists
cmp
mov
leave
inc
rcrl
cmp
hlt
insl
std
jne
push
xor
xor
jl
movsl
and
int3
loopne
add
out
loopne
aam
cli
das
push
sbb
mov
lcall
call
scas
je
popl
imul
sbb
dec
sub
or
sbb
sub
jge
ss
aas
imul
mov
filds
push
sbb
mov
pop
dec
insb
jecxz
jns
pop
mov
fisttpll
cmp
mov
jo
fwait
outsb
mov
dec
jmp
sub
lret
and
push
mov
push
add
mov
mov
cmpsb
xorb
push
popf
imul
sub
push
icebp
out
add
inc
clc
inc
out
testb
in
ljmp
pop
lret
scas
jmp
dec
pusha
faddl
dec
into
inc
mov
mov
mov
push
sbb
lret
inc
stos
pop
outsb
dec
push
inc
movsl
scas
fldcw
xchg
mov
call
scas
push
ss
das
cld
pop
pop
aaa
fisubl
mov
or
xor
and
out
scas
adc
lahf
mov
jmp
jge
dec
or
insl
mov
jp
cmc
lods
mov
mov
mov
or
mov
xchg
int3
mov
subl
sbb
out
or
push
jg
and
popa
inc
daa
dec
and
mov
and
jbe
push
mov
sub
xor
xor
aam
addr16
push
sub
mov
xlat
fwait
scas
push
repz
negb
in
adcl
imul
imul
fs
das
xchg
mov
fstl
adc
pop
hlt
or
scas
fiaddl
mov
aam
imul
imul
repz
xchg
sub
gs
jp
rolb
jb
sbb
mov
fadd
test
sbb
xlat
jno
or
sub
dec
popa
dec
inc
jno
pop
stc
add
cmc
arpl
mov
cmp
ret
and
push
iret
mov
xor
mov
jno
mov
xorl
pop
fwait
stc
xchg
call
mov
lods
je
test
and
aam
fiaddl
cwtl
ficomps
out
test
mov
inc
lods
dec
push
sahf
adc
mov
jl
cmp
dec
scas
ja
or
push
xor
adc
cmpsl
push
in
mov
mov
mov
fstpt
xchg
mov
add
sti
aas
xchg
sbb
insl
jbe
and
pop
sub
cmpsl
push
cs
insl
out
fimull
sbb
rclb
ret
mov
lds
int3
ret
das
cmp
and
pop
or
pop
mov
outsl
out
sbb
leave
cmp
sub
mov
xor
jg
aaa
negl
cmc
dec
inc
sbb
sub
lahf
ret
loop
and
push
mov
test
or
fsts
add
loop
mov
out
adc
push
push
inc
es
int3
sub
jb
out
mov
or
std
pushf
insb
repnz
or
xchg
fiaddl
cwtl
add
ljmp
inc
jmp
std
sar
dec
cmp
jno
inc
pushw
mov
into
arpl
adc
xchg
mov
fisttpl
xchg
or
push
sbb
sub
in
out
ljmp
mov
push
xchg
sbb
xor
or
movsl
adc
out
movsb
rclb
divl
or
cmp
insb
xchg
clc
push
fmulp
xor
sub
or
adc
sahf
mov
or
gs
dec
xchg
insl
gs
xchg
adc
fdivr
aad
lods
jns
and
mov
stos
jb
push
jbe
out
lahf
bound
hlt
push
enter
pop
inc
mov
pop
dec
popf
sub
fs
jo
loop
pop
jne
outsl
into
sub
mov
dec
sub
xchg
je
and
popf
stc
insl
rcl
mov
pop
jb,pn
cmp
test
lret
loopne
inc
ljmp
sti
jae
mov
out
arpl
iret
ljmp
aam
jnp
cwtl
fidivl
fcompl
adc
inc
rolb
pop
add
fs
or
mov
mov
xchg
push
lds
ficoml
mov
jmp
xchg
fdivrp
or
cltd
cli
pusha
xor
dec
lock
push
xorb
out
cvtps2pd
xchg
mov
add
xchg
pop
leave
xor
xlat
addr16
xchg
push
aaa
or
jb
inc
adc
dec
add
ja
add
jge
sub
add
add
inc
sub
pop
stos
out
out
mov
fidivrl
ffree
jne
repz
push
loop
sbb
and
popf
insl
mov
call
sub
lret
stos
out
dec
pop
inc
and
jne
js
lods
js
mov
dec
xchg
push
sarb
into
dec
dec
not
sub
fisttps
push
cwtl
mov
movsl
ror
divb
movsb
les
jecxz
cwtl
in
mov
push
and
test
pop
arpl
mov
scas
repz
push
sbb
sti
imul
gs
mov
dec
mov
mov
inc
std
lea
jge
les
arpl
fwait
cmp
loopne
lret
incl
clc
push
aam
xor
inc
mov
push
lds
inc
cmc
loope
lock
mov
test
or
cmc
xchg
cmp
cmp
std
dec
sub
add
push
rcrl
nop
xorb
dec
int
nop
xchg
scas
ljmp
push
push
arpl
in
mov
push
test
and
stos
subb
jge
hlt
mov
data16
dec
xchg
loop
ret
jge
test
sub
cmp
push
jecxz
and
push
pop
je
insb
dec
scas
cmp
jecxz
ret
mov
pop
sub
or
mov
lea
movsl
jle
cmp
xor
test
mov
sbb
aas
jo
push
push
adc
push
xor
orb
stos
imul
in
call
test
les
mov
push
mov
xor
shlb
pusha
repz
in
leave
orb
cwtl
stos
sti
cmp
cmp
repnz
cld
les
mov
shl
jl
gs
test
and
repz
leave
sahf
mov
jp
push
pop
movsb
mov
js
addl
sbb
cltd
push
aam
insl
mov
loope
jae
pop
mov
stc
lock
out
adc
lret
jp
fnstcw
push
orl
dec
bsr
sub
jmp
test
jbe
pushf
push
xor
sub
dec
and
icebp
pop
xor
xor
pop
push
ss
lods
pop
inc
dec
popf
push
imul
cs
sbb
dec
jbe
mov
sub
sub
sarl
mov
out
xchg
adc
in
shlb
mov
loope
aad
mov
outsb
mov
cltd
popa
xor
in
and
pop
adc
or
imul
xchg
and
mov
sbb
push
pop
fdivp
pop
pusha
xor
xor
scas
jno
shrb
sahf
jnp
jo,pn
mov
mov
mov
cs
mov
sbb
mov
popa
adc
sbb
mov
dec
dec
je
jmp
lret
jp
lea
out
stos
dec
pop
mov
adc
aam
mov
mov
cmpl
sub
fs
test
pop
or
fmuls
cld
mov
cmpsb
push
inc
push
repz
iret
push
aad
icebp
mov
out
adc
push
add
fcompl
int3
mov
mov
inc
inc
xor
sub
or
std
sbb
and
mov
xor
pusha
xchg
jno,pn
sbbb
jmp
cmpsl
xchg
movsb
dec
push
inc
add
mov
inc
sub
push
xor
dec
or
sub
sbb
data16
cmp
cmp
decl
aam
pop
loopne
inc
jecxz
sub
dec
loope
and
mov
jg
aam
inc
cmp
leave
ret
sub
adc
mov
pop
cmp
addr16
cmp
push
std
call
push
sub
xor
stos
cmp
adc
jmp
sbbb
inc
iret
lcall
sub
sar
xchg
pop
insl
rcrl
in
jne
bound
jmp
ljmp
repz
cmp
xorl
jns
movsb
cmp
std
aas
mov
imul
fistpll
push
cmpsb
jg
negb
push
fildl
sub
movsl
mov
pop
dec
push
xchg
mov
xor
sub
dec
push
add
mov
shrl
mov
shll
or
jns
jnp
addr16
ja
xor
mov
aaa
inc
jl
pop
mov
dec
dec
rcl
notl
in
inc
int3
inc
movsl
call
sbbl
loope
adc
js
scas
xchg
test
fcomip
cmp
or
push
test
dec
aam
sbb
mov
aam
and
leave
mov
adc
add
jo
jl
int
adc
pusha
push
mov
mov
jmp
sub
mov
gs
cltd
pop
dec
int3
in
lods
xchg
mov
aam
outsb
dec
outsl
lds
imul
mov
ljmp
mov
in
adc
dec
nop
sbb
pop
test
add
ljmp
xor
ljmp
push
dec
push
cmovs
mov
cmp
std
sti
lcall
push
or
nop
mov
arpl
adc
mov
cmp
iret
addr16
repnz
mov
fimuls
jp
out
or
pushf
sbb
lret
sbb
test
test
pop
sub
cmp
and
out
popf
mov
adc
or
loopne
inc
xchg
fcmovb
into
xchg
in
adc
imul
cmp
ficompl
fistps
test
xchg
pop
popa
sarl
sarl
popa
loopne
push
and
test
mov
xorb
mov
cmp
lea
test
sbb
leave
aas
cwtl
inc
jle
stc
clc
sbb
fldl
xor
ljmp
es
cmpsb
cli
test
pusha
in
cmp
add
ja
or
inc
push
inc
jbe
fucomp
notb
fidivrs
or
jnp
mov
xchg
scas
jb
jg
test
jg
andl
cltd
cmp
stos
sbb
mov
arpl
cmp
pop
mov
out
in
pop
jno
add
stos
xchg
js
lea
cmpb
sub
push
mov
pop
stc
incl
xor
cmc
push
inc
loop
or
aas
lret
push
sti
int
insl
pop
ficoml
rcl
ljmp
mov
add
outsl
fsubrs
sbb
mov
shrb
js
dec
fidivrs
sbb
push
push
mov
fstl
mov
cmp
sub
push
test
int
or
test
in
mov
and
add
jmp
jb
cmpsl
pushf
aas
fs
out
mov
scas
in
call
adc
mov
ja
or
sbb
sbb
ja
ret
sbb
push
mov
sbb
sar
popf
jbe
adc
clc
cltd
mov
and
jns
adc
test
add
sub
cmp
push
and
adc
dec
inc
xor
jecxz
sbbb
cmp
rclb
pop
je
iret
xchg
push
sbb
mov
mov
movsb
outsb
lea
mov
cmpsl
push
xor
jb
dec
xchg
movb
pop
or
push
shrb
push
shlb
imul
dec
movsb
inc
test
mov
sub
stos
enter
add
cmp
mov
subb
mov
jns
push
push
and
sbb
or
mov
xchg
dec
mov
jns
mov
and
push
into
enter
xchg
cltd
loopne
mov
jge
loope
aas
loope
imul
int3
push
mov
add
loop
sub
jns
fs
adc
add
or
adcl
nop
mov
jle
push
dec
xchg
aaa
scas
in
test
mov
mov
mov
outsl
movsb
in
mul
fistpll
xchg
mov
test
add
xchg
mov
pop
movb
bound
mov
mov
lahf
fistpl
xchg
mov
repz
sti
lret
jno
cwtl
scas
cmp
push
xor
add
and
or
xor
or
in
loop
test
jge
out
ljmp
ds
mov
ja
sbb
sub
add
xlat
mov
lds
fnsetpm(287
fstl
div
mov
aaa
out
add
ret
lahf
lret
aaa
aad
xchg
and
es
jne
or
notl
icebp
sbb
vunpcklps
jle
mov
xor
shr
add
mov
jecxz
inc
xor
or
test
mov
popf
add
rcl
int
repnz
pop
insb
mov
loope
push
ja
test
dec
int3
lcall
imull
std
cltd
insl
imul
inc
lea
int
popf
sub
cmp
jo
out
inc
inc
cld
shlb
xor
push
or
imul
xchg
adc
iret
popa
dec
xor
lret
leave
rol
add
or
sbb
push
and
adc
sub
test
push
jmp
cmpsl
scas
push
sub
shl
sahf
mov
xchg
fstl
test
pop
jbe
ficoml
inc
call
lods
loope
and
xchg
jl
jbe
movsl
enter
nop
push
jns
sbb
add
nop
mov
pop
aaa
lds
xlat
mov
jo
mov
lods
pop
cmp
out
jp
push
jmp
mov
enter
addr16
stos
inc
push
jle
repnz
mov
jmp
das
mov
jl
or
ds
pop
jle
mov
ret
push
jmp
sub
xor
je
jo
mov
dec
lcall
insl
push
shlb
push
shll
add
repz
rcrb
in
je
pop
das
adc
xchg
ret
adc
clc
gs
in
aad
imul
dec
subb
outsb
cmpsl
lahf
adc
xor
movsl
adc
push
stos
test
ja
sub
xchg
stos
das
negl
outsb
mov
pop
dec
in
pop
jb
js
bound
jl
repnz
into
cmp
sub
lahf
imul
cmp
mov
pop
push
jp
imul
nop
cmp
or
aas
call
inc
push
inc
mov
cwtl
enter
jmp
neg
xchg
int3
es
cmp
sbb
cwtl
pushf
xor
xor
ret
jmp
dec
xchg
add
adc
xorb
add
mov
jp
mov
ficoml
in
jl
add
pop
gs
popf
lahf
xor
adc
and
std
aas
test
xlat
fcoms
nop
cmc
fadds
scas
shrl
out
push
ja
aaa
mov
shr
xor
sub
adc
cmpsl
and
adc
jns
or
fwait
jl
or
sbb
jae
push
shll
cmp
aad
pop
fwait
or
add
pop
push
hlt
jmp
lcall
inc
outsl
fdivrl
loopne
sbb
or
push
ss
cmp
gs
and
or
jbe
jp
dec
scas
push
mov
sbb
push
sarl
xlat
jns
lea
pop
xchg
cld
scas
cmp
adc
jecxz
mov
jbe
outsb
adc
stos
mov
cwtl
pop
stc
psubusb
hlt
arpl
pusha
pusha
xchg
lret
mov
pop
pop
or
add
inc
or
mull
push
mov
adc
mov
sub
mov
jp
mov
sbb
dec
cltd
repz
jb
cmpsl
mov
clc
js
or
adc
fwait
rcrb
mov
mov
pop
adcb
int
shlb
hlt
aad
scas
xchg
push
lcall
mov
out
push
cmp
push
aam
pop
pop
out
adc
mov
sti
shl
xchg
jne
jge
aas
shr
mov
inc
xor
jo
push
es
daa
movsb
xchg
scas
xchg
mov
pop
inc
cmp
lods
mov
lods
lock
xchg
cmpsl
stos
enter
mov
xchg
adc
aaa
popa
xor
xchg
aas
sub
popa
movsl
lret
in
loope
cs
push
push
nop
mov
loopne
rorb
add
int3
dec
push
nop
add
pop
out
movsl
adc
xor
xchg
dec
xor
mov
ja
scas
add
out
mov
push
or
sub
idivl
mov
pop
fnstcw
adc
xor
cmc
xchg
vcvtps2dq
cmc
inc
mov
sub
cltd
ret
mov
addr16
mov
pop
cld
xchg
imul
cmp
cmpsb
iret
es
xor
xorl
add
cmp
loop
jns
gs
mov
pinsrw
stc
dec
test
mov
arpl
dec
in
dec
mov
insl
out
inc
xorl
bound
mov
pop
xchg
push
mov
pop
pop
or
push
dec
loope
push
lahf
andl
or
mov
jbe
int3
rcrl
jecxz
adc
fldenv
arpl
mov
ret
andb
stos
pop
xor
test
gs
loopne
jl
stc
push
jg
jno
dec
dec
cmp
adc
sub
loopw
sub
sub
inc
loopne
and
pop
cmpsl
dec
fmul
jg
rcrb
fcmovbe
iret
sub
lock
clc
fwait
dec
subb
push
push
int3
jmp
sub
mov
sbb
mov
jb
sub
mov
das
mov
push
pop
sarl
pushf
pop
push
add
push
push
push
xchg
adc
cmpsl
xchg
das
jl
add
paddsb
lods
mov
xor
cmc
pushl
mov
mov
and
clc
loope
sub
lahf
scas
jmp
mov
dec
out
bnd
fsubl
mov
cmp
sbb
push
cmpsb
mov
add
pushf
pusha
psrld
pop
out
or
fwait
pop
sbb
pop
cmpsl
popf
adc
pop
insb
ret
add
push
fisubl
scas
mov
xor
fistps
int
aad
and
aaa
das
sar
loopne
dec
js
xchg
pushw
clc
and
xor
lahf
xchg
fidivl
andl
mov
jg
insl
adc
adc
or
mov
lret
jecxz
icebp
aam
testb
jne
in
and
popa
sahf
lods
mov
fildll
dec
mov
lea
cmc
sbb
clc
xor
push
dec
mov
ljmp
add
pop
fistpll
pop
and
jle
icebp
mov
mov
out
adc
pop
hlt
int3
inc
mov
dec
cmp
out
lock
jecxz
xor
sbb
jl
gs
stos
enter
scas
mov
cmpb
aaa
push
xchg
insb
scas
ds
repnz
inc
enter
dec
pslld
ss
adcb
pop
or
jbe
ret
adc
sub
cmpsb
cwtl
in
cld
hlt
mov
shl
repnz
cmp
cmp
dec
jge
int
push
dec
in
add
out
scas
adc
fnstsw
mov
adc
cmc
and
jo
jbe
in
mov
mov
mov
nop
mov
inc
add
xchg
or
shll
xor
jo
mov
lretw
jmp
mov
or
call
call
negb
comiss
add
push
cmp
dec
addr16
mov
sti
test
cmp
leave
mov
dec
xchg
in
mov
lret
mov
adc
neg
iret
fstpl
fiadds
les
jnp
mov
imul
stos
js
or
dec
xchg
pop
mov
and
sub
popa
or
frstor
push
test
cmp
or
mov
subl
lea
std
mov
sarl
sahf
push
sub
mov
cmc
pop
clc
sub
xor
push
popa
in
fisttps
insb
mov
inc
fcmovne
cmp
mov
jnp
andl
xchg
dec
fidivrl
orb
iret
pushf
mulps
mov
and
in
sti
repz
imul
sbb
repnz
jae
mov
cmp
out
aaa
add
stos
bound
das
scas
inc
push
lret
pushf
dec
pop
dec
imul
inc
lods
test
sarl
sbb
hlt
lock
jge
les
and
jecxz
xchg
pop
sub
cmp
dec
test
pop
add
cmpsb
fistpl
loop
in
iret
xlat
out
inc
xchg
fiadds
aaa
dec
lods
loopne
out
pop
imul
arpl
xchg
hlt
loope
outsb
in
inc
xchg
data16
cmc
pop
ret
jno
mov
push
jg
mov
fcoml
dec
dec
lret
sbb
shl
cmp
lods
mov
mov
pop
fmulp
pop
sti
leave
faddl
xchg
xchg
out
xor
mov
test
sahf
insb
call
or
dec
fidivs
xor
dec
jg
mov
cmp
and
addr16
loop
lret
and
leave
data16
int
add
xchg
xchg
iret
ror
repz
sahf
js
xor
ljmp
cmc
lret
add
jp
and
sbb
pop
mov
mov
pop
fs
fisubl
dec
loope
mov
mov
nop
push
pop
mov
in
clc
jno
xchg
test
clc
out
clc
movsb
sub
mov
iret
loopne
or
fs
jmp
pop
ja
or
stos
insl
xchg
mov
inc
cmpsb
in
ljmp
adc
orb
push
mov
aaa
test
scas
add
xorl
or
cmp
fiadds
sar
push
or
and
and
mov
or
adcb
dec
mull
pop
mov
mov
pop
inc
fmuls
lahf
sti
sahf
pop
jmp
jb
ret
mov
lea
lock
mov
push
xchg
or
sub
dec
mov
xchg
jmp
ss
inc
lea
data16
push
cltd
push
pop
or
xor
sarl
fwait
stc
mov
jle
rclb
mov
xor
flds
dec
pushf
cmp
repnz
jmp
sub
dec
jle
test
hlt
jl
xor
pop
sub
aad
call
adc
daa
add
mov
hlt
into
xchg
pop
cmp
inc
lods
xchg
es
dec
jbe
dec
mov
mov
push
mov
jmp
push
cmp
jle
rorl
mov
fiadds
cmp
loopne
xor
lods
stos
icebp
dec
cmc
push
add
or
dec
roll
dec
jo
dec
aas
arpl
mov
mov
xchg
xor
adc
sti
clc
setnp
aam
pop
data16
jns
sbb
mov
mov
push
jo
out
mov
jne
js
and
inc
loopne
into
dec
clc
imul
xor
call
cmp
outsl
in
hlt
in
and
repz
rcr
mov
sbb
jp
jmp
xchg
push
fcmove
xchg
ds
lods
dec
testl
push
nop
push
cmp
subb
xchg
icebp
add
in
repz
adc
repnz
xor
imul
dec
add
or
in
js
pop
sub
in
fimuls
push
cmp
lock
mov
inc
jge
xor
mov
jbe
je
and
rcl
dec
jg
movsb
xor
jp
push
add
aam
sub
arpl
push
jo
roll
push
clc
aaa
add
sbbl
push
pop
lds
or
loope
imul
dec
dec
addr16
iret
and
xor
std
sbb
fisubl
xchg
das
mov
adc
pusha
les
push
jb
sysexit
popa
dec
mov
push
xor
cmp
lret
push
jo
push
mov
or
dec
cli
loop
daa
add
pop
pop
in
mov
aad
adc
sub
mov
mov
ja
and
mov
nop
jns
push
sub
sahf
add
sti
jg
push
lret
and
sub
dec
aas
movl
aam
push
sbb
xor
sub
mov
movups
int
aam
and
aam
sbb
in
jp
xchg
pop
xchg
cmpsl
inc
fidivrs
inc
cwtl
xchg
add
mov
int3
add
adc
sub
sti
movsbl
jns
and
mov
sub
mov
mov
adc
test
ja
mov
ffree
repnz
jge
cmp
add
loop
hlt
sar
int
in
das
fwait
std
sbb
aaa
adc
jnp
cs
ret
inc
add
push
ret
or
test
pop
jbe
in
push
test
inc
xchg
lahf
mov
out
dec
mov
mov
test
add
push
add
loopne
int3
mov
xchg
scas
shll
cmpsb
js
mov
push
nop
roll
bound
mov
out
fistpll
jl
mov
adc
push
std
push
dec
and
stc
and
pusha
jns
dec
mov
jb
cmp
mov
xchg
cmp
cli
pusha
aam
or
mov
outsb
dec
lock
and
sbb
rolb
push
cld
out
push
ljmp
ljmp
js
mov
dec
int
mov
ror
out
pop
mov
inc
pop
inc
push
lea
pop
cs
je
xchg
lret
xor
cwtl
stc
dec
push
cs
mov
scas
cmp
jbe
add
lds
rclb
lods
push
sbb
xor
movsl
ds
test
push
ret
push
mov
and
lret
cld
ja
jge
clc
lahf
icebp
mov
xchg
mov
js
out
cli
insl
mov
imul
aad
in
sub
adc
inc
int3
imul
sub
scas
jmp
outsb
popf
dec
repnz
data16
push
scas
push
push
out
arpl
faddl
mov
cltd
in
xor
std
test
rorb
mov
iret
movsb
push
cmp
push
cwtl
sbb
sarb
stc
jle
push
pop
xchg
ljmp
fistl
jge
gs
aas
push
mov
rcrb
std
loop
bound
pop
xchg
mov
inc
loop
addr16
loope
aas
loop
mov
add
jge
arpl
add
lret
sbb
adc
lock
push
popf
mov
mov
adc
cmp
out
int3
sbb
scas
lods
mov
and
addr16
popa
and
inc
les
inc
jne
jno
or
clc
pop
push
xor
pop
nop
cmp
fs
in
xchg
subb
pop
rol
push
outsl
jp
and
pop
mov
daa
mov
sbb
jecxz
fimull
das
mov
xchg
mov
pop
cltd
imul
push
pop
xchg
jmp
repnz
shrl
divb
and
mov
jae
sub
cmp
leave
out
adc
fistpll
in
push
pop
push
filds
scas
mov
mov
mov
pop
push
in
fnstenv
ss
stos
sbbb
pop
icebp
fildl
fwait
pop
fnstcw
shl
aad
xchg
xor
or
lock
sub
or
stos
pop
movl
out
out
insb
ss
std
cmp
push
inc
js
rcl
and
lcall
nopl
jge
sbb
dec
push
lret
add
mov
adc
pop
sbb
arpl
mov
sahf
rorl
lret
sbb
fldt
sbb
push
pushf
xor
xlat
or
and
mov
je
inc
xor
adc
daa
rclb
push
pshufw
push
cmpsb
dec
mov
and
push
and
xchg
or
cli
addb
push
mov
push
push
out
push
push
dec
add
pushl
es
enter
fmuls
mov
xchg
outsl
fdivl
pop
push
mov
mov
jge
daa
fnstsw
popa
adc
pop
mov
add
pop
sub
push
popa
add
pop
fdivl
xor
dec
into
mov
or
or
test
mov
inc
adc
or
ror
insl
inc
mov
inc
mov
testl
xlat
gs
cmp
cmp
jge
dec
shrb
addl
pop
aaa
pop
lods
lret
mov
inc
fidivrs
mulb
mov
jmp
xchg
and
shlb
jmp
aaa
mov
jecxz
xor
mov
add
mov
sub
mov
sti
inc
add
pop
cmp
js
in
rcr
add
jne
mov
mov
mov
shrb
jo
or
mov
rol
insb
jecxz
daa
sub
fwait
movsb
repnz
pusha
icebp
pushf
mov
xchg
push
stc
in
popf
xchg
lods
daa
das
mov
mov
popa
cmpsl
and
test
push
cmpsb
xor
jno
cmp
psrlw
cwtl
imul
mov
fs
mov
hlt
hlt
mov
ljmp
pop
shlb
cmpsb
cmpsl
lret
or
sbb
cmp
pop
mov
dec
test
mov
aam
cmpsl
jp
movsb
sub
ret
sbb
xchg
jne
in
out
jbe
daa
pop
out
fiadds
cmpsl
mov
xchg
xchg
sbb
add
mov
lcall
adc
or
jecxz
and
mov
lods
inc
pop
inc
popa
dec
repz
int3
cltd
jo
mov
ljmp
rorb
mov
lret
rol
or
imul
fisttpl
adc
adc
sbb
fwait
or
mov
push
dec
jns
xchg
inc
mov
sbb
sbb
shrb
lret
mov
push
add
out
sbb
and
sub
jecxz
orl
mov
adc
dec
ja,pn
gs
push
mov
jge
into
sbb
je
pcmpgtb
fstpl
pop
inc
jae
aam
jg
xlat
jno
push
mov
cwtl
mov
sarb
push
and
pushf
mov
jp
and
pop
mov
jge
dec
jbe
rcll
mov
repz
mov
and
mov
lcall
cld
rcrb
jno
adc
fimuls
mov
into
fstpl
inc
iret
clc
mov
dec
sbb
repnz
mov
add
inc
mov
movb
inc
jno
stc
mov
lock
add
insl
clc
stos
xchg
xor
aaa
mov
add
pop
stos
jge
icebp
inc
sbb
fwait
jne
cmp
and
or
jns
loope
aad
in
jne
ja
leave
jnp
out
add
jmp
jp
nop
sbb
outsb
xchg
aaa
bound
mov
mov
inc
aad
xor
mov
test
mov
test
fdivr
jae
out
inc
xchg
cmp
push
aaa
mov
sub
in
pop
es
in
and
xor
std
xchg
sub
push
jl
andb
out
xor
dec
je
inc
xor
push
pushf
sub
cmp
lock
lds
push
mov
int
push
push
roll
pop
pop
mov
lret
dec
push
pop
jmp
and
mov
push
pushf
popa
jnp
scas
mov
lds
jo
insl
cli
adc
inc
inc
pop
data16
mov
mov
ja
movsl
mov
or
aad
and
sbb
addr16
and
inc
cmc
pushf
add
fisttps
jmp
jae
ret
and
rol
sub
mov
mov
pop
pop
ret
test
pop
mov
xchg
pop
ret
cmp
stc
cmp
fdiv
scas
adc
ficomps
lret
out
adc
cwtl
sub
jbe
cmpl
in
pusha
adc
push
add
push
add
mov
pop
clc
pop
xchg
popa
bnd
jno
mov
xchg
repnz
pushf
sti
movsl
inc
mov
cmp
int3
arpl
repnz
inc
je
pop
roll
iret
aas
addr16
dec
nop
push
stos
cmpsb
and
scas
jle
roll
mov
jg
cmp
mov
lds
dec
daa
sub
dec
sub
sub
xlat
jnp
sbb
addr16
cmp
hlt
jg
test
rolb
cmp
mov
in
pop
jmp
in
xlat
in
and
inc
aas
pop
and
mov
add
pop
cmc
aaa
mov
jb,pt
in
dec
popf
pop
es
in
out
push
dec
ja
lods
rcrl
dec
sbb
ret
shlb
jl
xchg
pop
movsb
mov
jb
dec
arpl
inc
js
leave
sub
xor
pop
xorl
adc
fs
inc
mov
adc
aad
adc
jns
lods
out
shll
adc
ds
popa
pop
les
fwait
into
arpl
pop
inc
mov
scas
fidivl
cmp
cmpsl
out
and
pop
adc
mov
mov
stos
cmp
cmc
push
aaa
aas
cmp
mov
jge
fs
inc
add
test
mov
dec
add
inc
or
ja
pop
add
cmp
in
xor
jg
outsl
popa
pop
out
stos
imul
cld
int3
fsts
pushf
in
fimuls
andb
sbb
lret
stos
insb
sbb
xor
jmp
or
cmp
fs
shrb
aad
jl
fcomps
push
call
negb
push
out
out
lahf
std
cmp
in
dec
int3
sti
nop
inc
add
cmpsl
sbb
shrl
push
sub
test
in
les
fsubrs
xchg
cmp
jl
inc
hlt
lahf
mov
ffreep
cmpsl
hlt
or
xchg
or
xchg
incl
ljmp
insl
bound
xlat
inc
mov
mov
jmp
jno
leave
fstpt
loop
push
nop
sahf
jp
and
mov
mov
mov
test
sbb
add
rolb
int3
pop
incb
lret
cmp
sub
push
js
inc
mov
scas
les
movsb
sub
out
ja
sub
jne
nop
sbb
dec
insl
xor
jle
inc
mov
mov
mov
in
mov
or
sbb
dec
add
sbb
test
xor
cs
stc
ret
daa
xor
jae
into
cli
add
hlt
aad
sub
mov
pusha
push
and
aas
loopne
ds
andl
xor
xor
dec
rcrl
xchg
mull
shrl
and
adc
add
jno
out
jno
iret
int3
lea
inc
js
xchg
push
lock
loopne
sbb
stos
in
mov
lahf
lret
jmp
pop
pop
js
lret
push
fwait
and
pop
lods
mov
stos
scas
fwait
addr16
aad
cmp
or
sbb
sbb
adc
std
ljmp
push
mov
mov
mov
mov
fs
mov
xchg
add
push
je
jb
incl
movsl
faddl
xor
lret
add
pop
sbb
loopne
push
jae
push
cmp
test
into
int
popa
les
repz
arpl
int
push
mov
xchg
jmp
and
lahf
inc
jbe
adc
arpl
add
mov
outsl
cmp
push
push
insb
std
push
xchg
mov
popf
cmp
push
in
lea
jecxz
xor
add
aas
fisubrl
cmp
lcall
sbb
lods
mov
hlt
sbb
mov
push
loope
and
rsm
mov
jecxz
test
test
push
xchg
test
aaa
sbb
push
loopne
lahf
stos
imul
mov
dec
out
xlat
and
mov
mov
pop
lret
jns
notl
lock
pusha
sub
mov
int
xchg
and
sub
jno
clc
cmpsl
inc
fdivr
pop
adc
xlat
ja
pop
out
lods
add
mov
cmovnp
inc
int
es
loope
mov
data16
int3
push
pop
jle
mov
ljmp
std
scas
loope
ja
mov
and
pop
xchg
gs
shlb
aad
imul
sub
mov
lods
sar
repnz
movb
cltd
test
sbb
int
cld
popf
mov
and
fdivs
jns
and
xchg
ljmp
repnz
cltd
imul
shlb
repz
in
imul
lods
in
sarb
add
push
xchg
call
mov
clc
push
sbb
push
out
and
lahf
jge
arpl
iret
and
scas
push
or
mov
je
xchg
aaa
outsl
jbe
mov
repz
jo
movsb
cmpsb
cmpsb
push
roll
mov
insl
mov
mov
mov
or
push
out
fisubl
loop
imul
out
fsts
pop
loopne
imul
xchg
sub
and
stc
mov
fldenv
nop
aaa
xchg
int3
shll
xlat
hlt
test
aaa
jbe
pop
loop
out
xchg
hlt
je
mov
in
cmp
add
arpl
push
mov
insl
lret
gs
mov
pop
add
outsb
sub
aam
inc
lcall
jbe
xchg
mov
mov
jmp
rorb
mov
out
pop
pop
push
repz
push
sub
inc
imul
lea
lea
push
and
shl
icebp
outsl
iret
mov
mov
adc
mov
xchg
mov
fwait
xor
mov
mov
push
pop
add
mov
mov
dec
ret
repnz
movsl
out
add
iret
push
pushf
in
aad
push
fldenv
into
jmp
mov
and
ds
adc
xchg
and
mov
mov
push
iret
jns
jbe
repnz
mov
push
xchg
mov
sarl
add
inc
test
dec
jb
insl
jae
jae
test
leave
outsb
cmp
jle
xor
mov
les
pop
add
sarb
mov
test
push
cmp
ret
sub
sbb
push
test
push
inc
addr16
insb
jo
and
imul
lods
lret
stos
loope
fucomi
outsb
mov
nop
push
andl
ret
aam
insl
dec
pop
fsubr
jp
mov
lcall
shrl
ret
mov
repz
mov
test
pusha
cltd
data16
push
imul
ljmp
cld
mov
mov
cmc
jmp
aam
jne
mov
test
mov
cmovs
mov
mov
push
mov
aaa
imul
mov
lock
push
xchg
popf
pop
out
fwait
cltd
ret
lds
clc
icebp
sbb
add
ljmp
lds
insb
test
mov
mov
xor
push
add
fisubl
cmp
add
aad
sbb
in
sub
adc
sbb
imul
bound
mov
lret
mov
mov
sub
adc
cli
aaa
or
ss
fisubs
in
xor
pop
call
or
add
test
and
add
in
mov
mov
ret
stos
popf
aam
cmp
mov
das
std
mov
aaa
in
lock
imul
test
rcl
sub
ja
movsl
shll
or
or
or
inc
out
push
dec
mov
adcl
inc
jo
loop
mov
aam
stos
divb
leave
sub
add
scas
mov
arpl
call
sub
dec
wrmsr
jge
xchg
and
bound
jns
mov
xor
xlat
sub
inc
mov
in
mov
andl
and
sbb
fsubrl
test
bound
mov
mov
mov
add
in
xchg
gs
pusha
lcall
or
test
inc
pop
mov
hlt
sahf
pop
push
mov
jbe
jecxz
leave
xor
add
repz
fcmovnu
sub
mov
and
or
aad
pop
xchg
dec
push
mov
mov
sub
daa
push
pop
push
lret
pop
push
sti
and
or
aas
into
aad
sub
pop
test
push
pop
mov
pop
das
or
pushf
xor
repnz
add
rcll
pop
push
and
loope
cmp
mov
jecxz
insb
cmpsb
adc
andb
aas
insl
jbe
ss
loop
push
mov
xchg
test
pop
outsl
cmp
loop
and
mov
inc
dec
fcoms
sub
adc
mov
or
pop
push
mov
push
jmp
and
ljmp
sbb
gs
ds
jnp
filds
std
xchg
or
push
cs
mov
jmp
dec
cli
pop
xor
negb
dec
mov
xchg
std
dec
lock
aas
mov
cmpsb
sub
out
fstl
pop
pop
sbbl
subb
push
jg
adc
or
std
sbb
in
xchg
or
push
cld
loop
imul
loop
mov
inc
dec
adc
sub
into
addr16
stc
push
test
xchg
mov
sub
test
std
mov
hlt
jl
dec
cs
dec
mov
sub
push
inc
inc
fsubs
lock
adc
pop
in
and
clts
push
add
bound
jae
in
scas
je
addr16
lahf
lods
into
xchg
inc
push
repz
jb
jge
sub
pop
pop
jnp
cmp
inc
test
es
adc
jl
fs
addb
enter
pop
clc
and
out
pop
aas
icebp
mov
insb
mov
out
test
or
jne
xchg
jnp
push
push
inc
les
cli
aad
loope
sbb
jle
push
jbe,pn
push
push
aaa
xchg
dec
incl
mov
jecxz
fistpll
adc
sbb
js
sub
stc
and
cmp
jb
fs
popf
loope
fdecstp
or
xor
xor
pop
adc
mov
pop
mov
mov
ja
mov
mov
rcl
cmpb
push
fwait
imul
xchg
rep
jp
cld
xchg
ja
pop
jle
int
in
fs
mov
xchg
hlt
push
mov
jmp
mov
push
add
sbb
mov
std
adc
outsl
movsb
jg
xor
mov
push
jmp
jl
dec
adc
sub
inc
mov
aas
mov
xor
add
scas
test
loop
sub
cmc
js
sbb
cld
cmp
mov
jae
mov
mov
xchg
sub
loope
mov
dec
push
inc
push
cwtl
push
cmpsl
notl
and
adc
ljmp
mov
mov
jge
sahf
inc
roll
subb
test
arpl
cmp
xor
scas
icebp
imul
ret
xchg
loope
mov
or
push
lods
das
mov
fbstp
push
inc
pop
test
mov
ror
popf
mov
inc
pop
jl
iret
cmp
push
push
test
and
xor
imul
sbb
dec
scas
pusha
pop
or
bound
mov
dec
xlat
int3
hlt
shlb
stos
in
fmul
mov
push
and
mov
pop
into
pop
sub
cld
fwait
add
sub
rcll
cli
cld
pop
lret
cmpl
mov
add
movsl
and
mov
sti
mov
mov
cmp
mov
sbb
iret
sub
jmp
xor
or
ret
dec
std
dec
call
inc
aas
sub
mov
sbb
jne
das
mov
mov
fwait
pop
movsb
pushf
in
imul
mov
dec
cmp
sahf
cmc
scas
aam
and
adc
mov
mov
jbe
fstpl
rorl
sbb
mulb
repz
push
out
fistl
sbb
cli
adc
icebp
mov
es
in
lods
jae
push
jmp
or
cmp
push
addb
or
ss
arpl
pop
pop
lods
and
or
mov
out
shrb
inc
and
push
imul
roll
lcall
mov
mov
sbb
ffreep
pop
push
aam
std
lock
cmp
pop
addb
dec
mov
cmp
and
pusha
or
sub
into
call
mov
mov
cli
inc
dec
or
adc
or
int3
or
sub
push
xor
cmpsl
clc
dec
jae
roll
fimuls
xchg
or
lret
mov
scas
push
sub
test
mov
mov
mov
mov
test
pop
iret
xchg
das
xchg
mov
dec
jbe
jns
lods
mov
sbb
repnz
adc
loope
cmp
outsb
sub
xor
push
or
and
jne
xchg
dec
cld
jo
mov
in
imul
rolb
fildl
mov
pop
inc
push
rorl
dec
push
sbb
loopne
in
xchg
mov
outsb
xchg
mov
sbb
sahf
pop
cmp
sti
pop
jne
xchg
sarl
push
inc
andb
iret
pop
jge
lds
inc
fwait
pop
cmp
push
ret
clc
test
jbe
mov
pop
fstpt
jge
and
xchg
xorl
add
les
xchg
sbb
loopne
push
jmp
jbe
mov
sub
clc
ret
hlt
jno
push
and
sub
movsl
add
scas
add
xor
lock
xor
push
jl
cli
dec
ja
mov
lods
idiv
push
xchg
cmpl
fldenv
je
jp
mov
mov
add
sbb
jno
dec
cmp
insb
out
adc
fs
push
add
cmp
pop
pop
pop
mov
in
xchg
scas
xor
cmp
loop
ret
cmp
jnp
push
ljmp
mov
mov
bound
add
inc
xlat
mov
mov
nop
xchg
aad
test
divl
cli
leave
add
sub
mov
mov
xor
xor
xchg
aaa
in
fcmovne
xor
mov
bnd
mov
sbb
cmc
fstps
out
pop
subl
mov
jne
int3
sbb
or
test
jge
mov
mov
fmull
jae
adc
arpl
and
dec
mov
std
xor
scas
adc
popf
dec
sub
xor
orl
adc
jno
jno
imull
call
mov
ljmp
test
mov
cmp
imul
jb
fwait
xor
lods
fldl
shll
inc
fidivrl
imul
dec
fmuls
cli
fsubrl
out
pop
push
clc
push
nop
aaa
add
outsl
sub
data16
dec
shll
push
nopl
test
fidivrl
inc
ds
jb
stos
adc
cli
push
test
inc
out
or
ret
jbe
pop
cmpsb
enter
ficoml
rclb
pop
push
push
xchg
and
sti
jo
mov
subb
mov
inc
or
add
into
pop
and
ror
sbb
dec
add
aad
mov
add
mov
mov
test
add
and
mov
arpl
add
xchg
outsl
cmp
fidivl
aaa
sbb
fimuls
mov
fistpll
jno
jmp
inc
mov
lods
les
inc
cld
fstps
loope
jb
stc
popf
push
sti
inc
lahf
inc
mov
mov
pop
inc
mov
test
bound
mov
out
mov
aas
adcb
out
inc
lahf
stos
adc
imul
jmp
mov
cs
aam
dec
mov
into
sarl
jle
lret
sbb
cli
orb
jge
test
lock
mov
push
call
pop
or
sub
cmp
rcrl
pop
cli
xlat
dec
inc
scas
mov
cwtl
or
std
mov
mov
ret
movsb
fcoml
jbe
inc
or
add
cmc
mov
fisttpll
xchg
js
dec
xor
je
xchg
int
fmull
sbb
mov
xchg
inc
imul
insb
xchg
pushf
ja
mov
and
rcll
mov
adc
rcpps
movsl
cmpsb
shl
push
inc
jg
stc
and
adc
mov
add
aaa
mov
jae
xlat
add
xlat
push
in
outsb
hlt
fidivl
xchg
mov
mov
loop
xchg
push
sub
sub
mov
push
mov
push
mov
xlat
pop
mov
xchg
xchg
call
in
xor
mov
cmpsb
sub
sub
popl
pop
mov
inc
push
cmpl
pop
push
add
dec
imul
mov
lods
sub
mov
pop
xchg
les
rcll
cltd
int
out
cmc
or
fiaddl
jle
iret
cmp
inc
and
cwtl
sub
mov
sbb
mov
in
movsb
fsubrl
jns
filds
test
lea
inc
or
andl
sub
mov
pop
jecxz
jle
rcr
cltd
xor
dec
mov
dec
xor
inc
ss
daa
enter
aad
xor
jb
xchg
pop
xor
and
mov
loop
xchg
lret
cmp
push
mov
add
inc
and
in
ret
push
flds
sbb
nop
imul
jo
and
push
and
push
mov
enter
loope
arpl
int
jbe
jno
inc
aas
and
sub
mov
stos
mov
stc
lret
xor
dec
xor
popf
mov
iret
xchg
aad
jb
push
lea
jle
add
and
adc
iret
add
mov
cmp
inc
or
pop
outsl
xchg
ljmp
orb
or
jnp
lock
outsb
rcll
popf
xor
movsl
cmp
pop
add
fistps
mov
repnz
cmpsb
test
test
push
and
mov
repnz
cmp
sub
rep
rcl
push
mov
dec
dec
mov
push
add
and
xor
cwtl
das
adc
add
and
or
das
lock
mov
xor
aas
adc
xor
push
mov
pop
mov
jp
loop
jecxz
bound
aam
inc
popf
test
loop
add
insl
inc
shl
clc
inc
or
sbb
adcb
into
fdivs
pusha
cs
xor
mov
push
cmpsl
and
ficompl
adc
pop
lret
inc
es
mov
cltd
cmp
sub
imull
fistpl
xchg
jecxz
stc
iret
in
mov
jb
outsl
mov
inc
mov
sbb
orb
aaa
iret
dec
xchg
fsubrl
add
popa
pop
test
mov
inc
mov
jo
jb
in
lret
enter
les
inc
sbb
out
pop
mov
imul
sbb
repnz
jl
pop
lds
ds
popf
dec
xor
adc
jmp
pop
sub
xchg
xchg
dec
inc
xchg
ror
jl
rdpmc
sub
mov
cmp
adc
cs
xchg
sbb
pop
sub
sahf
pop
inc
movsl
inc
xlat
mov
out
mov
pop
dec
mov
or
cmp
ret
or
mov
insb
jg
xor
dec
and
cmp
sbb
xchg
xchg
sbbl
pop
jp
std
lds
stos
mov
push
pop
lods
jmp
in
sub
jo
fists
mov
sub
push
in
shll
mov
mov
jb
rcrb
inc
aam
ja
inc
mov
lds
or
cmp
mov
xor
ss
addr16
jae
xor
fiaddl
cltd
mov
pop
mov
dec
shll
pop
mov
sti
pop
int
sbb
mov
add
cmp
aas
aad
cmp
loopne
jb
sbb
push
outsb
sub
into
xor
imul
popf
mov
mov
xchg
loope
and
lcall
sbb
orb
cmp
clc
fdivrs
dec
pusha
inc
movsb
push
lahf
or
xchg
jne
or
int
add
cli
mov
dec
cmc
jmp
cmp
jbe
xlat
xor
dec
jp
sub
cmp
sub
cwtl
hlt
sub
and
aas
je
shl
ret
cs
fcoml
or
pop
push
or
xchg
ficoml
lds
dec
aas
adc
fildll
movsb
lds
dec
leave
dec
mov
inc
test
or
adc
mov
xor
ret
ljmp
xor
iret
stos
in
test
ret
pop
mov
lcall
mov
or
mov
es
pop
dec
jl
pop
inc
jbe
rcrb
jle
jbe
mov
jno
lahf
add
out
push
push
pop
imul
dec
aad
xchg
fcom
les
xor
push
dec
cmpsl
bound
xor
mov
mov
adc
test
call
xchg
scas
jl
test
inc
sub
int
xchg
sbb
dec
xchg
xor
lret
mov
pusha
movsl
jmp
clc
mov
sbb
mov
scas
xchg
testl
lcall
inc
cltd
inc
es
jnp
movsl
ret
sub
popa
leave
rcrl
adc
int
mov
cltd
les
mov
sub
cwtl
popf
lock
cmp
insb
lock
loope
xchg
sub
cli
pushl
aaa
add
call
cltd
and
mov
lret
add
pop
push
ficompl
ficompl
pop
sub
pushf
fsubrl
pop
cltd
xchg
repz
inc
mov
ffreep
xor
ret
mov
push
aam
mov
add
test
push
ret
in
pushf
dec
mov
data16
icebp
mov
in
stos
sbb
leave
xor
jno
xor
add
cs
sub
cmpsl
loop
jne
aaa
jg
jne
mov
push
push
mov
jae
mov
or
cmp
pop
push
popf
scas
push
jns
inc
adc
dec
cmpsl
insb
inc
into
adc
mov
lret
icebp
push
lahf
xchg
out
and
popa
pop
rorb
sbb
push
rorb
filds
fldcw
jle
xchg
pushf
cltd
decb
push
test
pop
es
jo
ljmp
xlat
cld
dec
push
mov
lahf
mov
lret
pusha
scas
aaa
push
loopne
sub
dec
xchg
and
jmp
mov
or
mov
lret
out
pop
push
inc
into
ret
mov
dec
mov
lods
jl
pop
in
xchg
scas
mul
scas
inc
add
xchg
mov
jne
aaa
nop
loopne
imul
mov
rorl
mov
out
inc
aaa
pop
outsl
and
mov
fidivs
cli
xchg
test
popf
pop
sub
push
bsf
test
jmp
add
dec
jo
cltd
push
ja
fs
das
xchg
and
sbb
pushf
test
push
mov
aad
mov
mov
cmp
adc
sub
aad
cmp
jmp
lret
mov
inc
pop
jo
gs
pop
nop
push
xchg
iret
lcall
insb
jg
rol
mov
arpl
fwait
push
loopne
nop
scas
inc
ja
mov
cs
fiaddl
ja
mov
into
sar
js
cmp
test
int3
cmp
xchg
mov
inc
cld
sub
insl
mov
push
cmp
dec
out
mov
in
jg
rcrl
daa
mov
adc
test
and
cs
into
lret
dec
mov
lods
xchg
ret
sub
sub
test
and
push
jns
add
repz
mov
ret
inc
je
std
mov
shll
xchg
pop
mov
xor
fwait
and
add
fisubl
pop
or
enter
dec
scas
mov
loop
shrb
clc
adc
cmp
push
mov
or
scas
jle
mov
cmp
jmp
mov
dec
mov
jge
cmp
jg
mov
or
and
hlt
push
movsb
sbb
imul
test
and
lret
pushf
daa
ljmp
daa
fsubrs
or
and
or
scas
pop
out
ret
loope
bound
movsl
cli
js
mov
dec
addr16
arpl
inc
xchg
lret
mov
out
lret
sbb
shrl
punpckldq
out
mov
inc
adc
mov
jl
loop
xchg
or
mov
pop
shlb
repnz
repz
ja
sarl
jns
mov
repz
aas
outsl
xchg
push
aad
mov
push
mov
add
stos
xchg
xchg
xchg
pop
movsb
imul
mov
imul
mov
std
push
jg
add
int3
outsb
sub
push
fidivrs
jp
xchg
mov
int3
dec
adc
nop
dec
or
lock
lods
inc
jnp
xlat
and
lods
outsb
sbb
ja
adc
insl
sbb
mov
mov
loope
cltd
scas
stc
enter
mov
mov
inc
in
push
push
insl
pop
pop
xchg
cmc
cs
dec
sub
bound
sti
and
mov
loopne
je
fcoms
mov
jae
scas
fstl
inc
inc
in
fs
mov
lret
sbb
dec
pusha
ljmp
sbb
push
xchg
mov
filds
rcl
les
shll
loope
jno
jae
push
cmp
pop
adc
sub
fstl
lods
sub
pop
lret
add
daa
xor
call
mov
sbb
or
icebp
pop
pusha
outsb
lods
xchg
adc
inc
popa
xlat
adc
ret
mov
push
mov
jnp
or
iret
mov
inc
fcompl
clc
sub
test
sahf
jle
and
in
jbe
or
mov
fidivs
adc
push
enter
in
lods
fldcw
data16
in
pop
push
je
mov
imull
or
mov
cwtl
iret
cmc
outsb
shll
adc
mov
inc
gs
stos
sahf
lcall
push
scas
or
mov
inc
arpl
add
loop
inc
jle
das
outsl
ss
jns
push
imul
inc
mov
dec
setae
lods
inc
sbb
pusha
in
movsb
xchg
xor
mov
jge
push
sbb
xor
roll
push
movsb
xchg
inc
imul
outsb
xchg
sub
lcall
rclb
mov
imull
push
leave
cwtl
lock
pop
pop
xorb
mov
mov
js
lret
call
cwtl
mov
sub
iret
dec
pop
sbb
mov
nop
mov
imul
or
mov
mov
out
jb
sub
sbb
les
sbb
add
js
push
hlt
movsb
test
test
insb
lret
fcoms
pushf
test
push
cmp
xor
sbb
ret
add
jle
lahf
adc
notb
cmc
sbb
add
nop
fst
or
test
mov
adc
sub
lret
inc
push
inc
outsb
test
jae
jbe
and
pop
les
fwait
or
sub
sarl
cmp
imul
aas
sub
cwtl
mov
out
stos
xor
in
in
jge
ss
sub
add
mov
jl
or
pop
aam
cmp
je
mov
in
adc
fildll
and
icebp
out
mov
leave
push
test
xorb
scas
stc
enter
std
leave
xchg
pop
scas
dec
inc
stos
mov
psubw
xlat
inc
and
mov
pop
mov
mov
jecxz
jg
mov
or
in
mov
mov
aas
sub
mov
pop
sbb
in
and
repz
push
call
cmp
mov
andb
add
stos
adc
inc
xchg
icebp
fistpl
lahf
pop
in
xchg
aaa
mov
js
inc
mov
ss
xchg
mov
clc
adc
fdivrp
inc
in
movsb
push
jae
jnp
sub
mov
imul
dec
addr16
addr16
inc
inc
lock
mov
xor
push
popf
pop
or
xchg
lret
mov
loope
pop
xor
fisttps
add
divb
pusha
inc
jne
or
mov
dec
pushf
into
movsb
and
mov
pop
sbb
mov
mov
jb
testb
sub
jmp
std
lock
std
add
ja
push
js
loope
jns
lock
pop
and
lret
sub
jns
sets
ret
out
pop
fnstenv
cli
jge
outsl
xchg
lret
or
mov
jno
cmpsl
test
stos
xchg
loop
jecxz
rcll
xlat
or
je
pop
mov
cld
sahf
cltd
sub
adc
ret
mov
loopne
adc
enter
unpcklps
iret
xchg
sub
popf
insl
inc
aas
xor
inc
or
sarl
adc
in
fidivrs
dec
inc
out
jae
adc
sub
and
aad
fmuls
aas
cltd
dec
mov
scas
das
mov
cs
pop
in
scas
loopne
adc
movsb
xchg
std
jle
in
popa
sarl
add
sbb
enter
and
call
mov
xor
sub
jns
test
in
or
xchg
jg
das
mov
lods
fldenv
pop
xor
mov
es
xor
pop
push
and
outsb
cmp
cwtl
sbb
roll
into
mov
xchg
pop
pop
sub
hlt
and
bound
fidivrl
xchg
inc
scas
pop
lds
adc
mov
pop
imul
bnd
mov
push
sar
mov
std
lea
aad
imul
xchg
mov
mov
call
fisttpll
int
jg
sbb
in
movsl
icebp
das
mov
cmp
lock
pop
jmp
fwait
mov
enter
jle
pop
sbb
inc
incl
push
ja
mov
sbb
sahf
push
xchg
bound
add
popa
adc
mov
push
jmp
mov
adc
adc
adc
icebp
ficoml
data16
notb
rorb
sbb
mov
mov
xchg
scas
push
jle
addr16
ficoml
jbe
and
cmp
or
add
sub
test
xchg
idivl
mov
mov
lds
xor
adcl
test
sahf
inc
into
insl
pusha
lods
pop
je,pn
pushl
mov
inc
pop
jge
loope
ret
ds
repnz
repz
push
pop
push
jge
pop
into
adc
shlb
cmp
inc
insb
int3
in
jo
or
loop
rcrl
push
aas
jno
or
jo
adc
inc
xchg
mov
mov
lods
jge
orb
mov
faddp
mov
rorl
push
inc
xor
pop
adc
in
shl
aas
inc
mov
cwtl
cs
sbb
in
iret
jns
daa
jmp
outsb
ror
xchg
sub
data16
push
xchg
push
mov
addr16
mov
sbb
movsb
fsubrs
outsl
in
add
fmull
mov
sub
or
push
lods
movsl
into
dec
mov
mov
cwtl
aaa
nop
xchg
dec
mov
dec
inc
inc
gs
jl
testl
mov
repnz
pop
adcb
jns
dec
and
movsl
mov
or
xor
mov
or
mov
repz
sub
call
test
or
fldt
jbe
push
loop
std
mov
xchg
pop
test
add
jne
push
push
inc
jge
cli
lods
andl
lret
fs
pushf
loope
data16
movsl
test
dec
insl
jnp
pushl
sub
roll
pushl
jns
dec
and
out
int3
mov
fists
push
imul
inc
mov
fildl
xchg
or
in
insb
cli
lock
jo
mov
fstps
push
inc
jnp
xchg
mov
mov
mov
das
stos
push
inc
test
push
or
jns
mov
mov
sbb
shll
push
push
jns
jae
dec
xor
pushf
inc
or
lcall
jb
ja
dec
fidivrs
pop
and
pop
mov
icebp
cmp
mov
cmp
notl
push
jnp
cmovb
xchg
or
scas
jns
and
cmp
inc
sbb
adc
cmovo
lea
add
sub
dec
mov
data16
sbb
sub
lea
xchg
in
push
fcompl
aaa
mov
dec
repz
xor
dec
es
xor
mov
mov
in
test
push
push
ret
stc
ret
pop
jnp
out
or
jno
xor
jp
fbstp
xor
es
and
in
cli
fcomip
mov
and
push
sbb
aad
fistpl
xlat
xor
test
ja
xchg
sub
ja
cmp
jns
cltd
inc
adc
mov
inc
aad
mov
mov
jle
clc
das
rcrl
jg
repz
xchg
int
leave
stos
mov
mov
lods
mov
xchg
xchg
loope
lods
push
xor
sbb
ret
loop
je
mov
or
sbb
in
lret
cmpsl
int3
mov
or
jmp
sbb
mov
xor
jle
sbb
push
and
push
fwait
mov
xlat
mov
movsl
xor
mov
jg
das
and
std
and
popf
stos
pop
xor
call
cmc
xor
jnp
sub
jle
rcrb
in
add
stos
adc
cld
jmp
addr16
adc
popf
mov
arpl
dec
mov
ja
jne
jne
sub
in
negl
or
loopew
lods
add
cmp
pop
push
mov
mov
dec
aas
jne
sbb
and
sub
andl
dec
je
sub
arpl
xchg
test
out
dec
pop
loope
inc
mov
sbb
or
mov
push
test
and
nop
push
and
adc
icebp
mov
ficompl
add
sbb
into
ret
lock
mov
push
lods
adc
and
das
outsb
lods
mov
cmpsb
mov
scas
dec
sbb
push
cmpsb
fs
push
outsl
xchg
add
jecxz
xor
sbb
mov
pusha
inc
in
enter
sbb
inc
bound
in
mov
or
lods
cli
dec
out
mov
dec
aam
xor
int3
popa
daa
mov
pop
gs
shl
sub
fistl
add
into
cld
scas
jg
mov
xor
push
fdivp
pop
or
push
imul
add
jl
sbb
add
xor
imulb
jnp
scas
daa
nop
cld
push
push
iret
mov
xor
adc
jp
adc
ja
lret
push
lea
xchg
push
scas
cmp
pusha
loopne
and
jmp
push
cmpsl
ljmp
push
pop
in
sbb
inc
cmpsb
mov
adc
pop
movl
shl
out
add
sub
iret
bound
add
out
fildll
test
inc
mov
sub
or
jmp
inc
scas
dec
push
icebp
adc
pop
aad
mov
notl
in
mov
int
and
clc
stos
cmc
fstpt
jle
sbb
sub
in
xchg
je
pop
and
imul
rorl
xchg
out
cmp
setne
das
push
push
push
jbe
into
and
into
pop
jecxz
sar
sub
mov
add
loopne
aam
adc
mov
mov
or
inc
cwtl
dec
push
sbbl
pop
cvtps2pi
push
popf
cmpsl
push
sub
and
add
data16
out
cmp
inc
jne
mov
push
outsl
add
fildl
jo
jb
sbb
in
cmp
orl
xchg
dec
adc
call
push
and
cld
pop
aaa
mov
mov
mov
push
jl
jle
inc
fisttps
jmp
dec
enter
imul
xor
sub
sti
dec
and
loopne
scas
out
lock
mov
lds
std
cmp
loopne
adc
dec
lahf
add
sbb
hlt
mov
dec
mov
jnp
cs
pop
sbb
pop
or
cmpsl
or
aam
push
push
arpl
xor
mov
stc
imul
iret
push
stos
leave
jmp
sbb
dec
pop
int
lods
push
xor
pop
loope
mov
pushl
push
mov
and
mov
call
jns
punpckhwd
push
xchg
jae
inc
cld
xchg
inc
loope
insl
rcll
jne
imul
mov
cli
pusha
frstor
jae
xorl
orl
fiaddl
stos
stos
maskmovq
notl
cmp
repz
out
ds
hlt
lea
and
loope
xchg
push
mov
imul
call
push
lods
mov
cwtl
dec
mov
into
fmull
pop
fs
inc
push
imul
in
inc
ljmp
xor
jg
dec
lret
pusha
adc
rorb
and
mov
scas
rorl
std
pop
int3
fldcw
int
cld
mov
addr16
insl
mov
cli
aam
push
insl
dec
pop
jbe
lret
xchg
in
outsb
pop
push
xchg
movl
jae
cs
bswap
inc
push
cmp
in
hlt
pop
jb
popa
and
lods
lods
jo
test
das
scas
push
loopne
movsl
cmp
cmp
sbb
aad
das
and
scas
sbbl
mov
and
xor
std
ss
iret
cmpsl
into
fcompl
sarb
pop
adc
sbb
push
or
jmp
adc
mov
loop
inc
mov
mov
xor
sbbb
inc
sbb
cmc
mov
mov
jo
mov
xchg
sbb
jge
inc
lret
std
aaa
inc
lahf
clc
or
mov
add
das
lcall
mov
add
cmp
clc
inc
cli
data16
stos
ret
inc
icebp
cmp
roll
lods
popf
mov
loop
mov
sub
xchg
repnz
out
add
adc
adc
loope
lods
test
loopne
inc
cmpsb
loope
test
add
shll
push
cmc
push
inc
jle
in
or
jge
leave
aas
aaa
ss
ret
sbb
stos
push
push
push
pop
jnp
mov
xor
mov
test
inc
xchg
add
into
pop
aad
popf
mov
std
test
fldl
pop
cwtl
ret
push
sarb
ljmp
repnz
and
adc
stc
cli
int3
adc
mov
xchg
jmp
pushf
jl
andb
call
cmpsb
not
out
fldenv
outsl
loope
daa
mov
sti
dec
mov
push
push
jo
and
lds
lods
push
push
sbb
decb
sbb
push
bound
push
dec
mul
sahf
adc
inc
cmp
mov
idivl
inc
and
pop
sbb
fs
adc
int3
push
in
rorb
andb
mov
inc
dec
dec
pusha
mov
hlt
push
mov
pop
add
sbb
jmp
les
jns
mov
mov
pop
into
cmp
cltd
jb
in
mov
pop
mov
fsubrl
lahf
scas
cmp
push
fs
das
inc
cltd
inc
push
mov
cltd
xchg
lret
repnz
notb
sub
cld
mov
cltd
xchg
sub
movsb
fucomip
or
xchg
pop
dec
sbb
lahf
fdivrl
push
lcall
xor
inc
sub
andl
add
add
test
dec
into
push
fcompl
push
fisubs
pop
inc
hlt
daa
outsb
js
mov
les
mulb
sbb
xchg
or
inc
arpl
jnp
and
icebp
dec
mov
push
les
icebp
and
and
sub
jmp
jmp
adc
mov
pop
xchg
pop
mov
xchg
and
sbb
jecxz
insl
cmpb
in
dec
imul
jbe
inc
sar
adc
je
inc
int3
dec
loopne
lea
addl
push
daa
lret
imulb
faddl
mov
jns
mov
fnclex
push
inc
sahf
adc
call
cwtl
mov
jl
ja
orl
jmp
stc
ljmp
cmp
cmp
jne
movsb
in
test
std
mov
and
or
repz
test
and
pop
imul
push
pop
js
jns
js
xor
sbb
adc
arpl
jl
lahf
xchg
cmp
out
inc
sbb
and
mov
sbb
sahf
iret
add
outsb
in
popa
les
loopne
popa
sbb
repnz
xor
adc
loope
cmp
inc
sbb
lret
sub
xchg
push
and
out
je
outsb
movsl
lret
and
fistps
dec
xor
jae
mov
xchg
sub
imul
call
rorl
or
mov
pop
fs
push
lcall
aad
pop
imul
pop
pop
pop
and
int
mov
mov
in
mov
jb
push
xchg
push
push
aam
add
cmp
inc
inc
push
les
ret
add
js
inc
mov
nop
push
xor
fisttps
push
push
into
push
xchg
push
jle
adc
gs
push
lea
pop
call
lds
jno
mov
add
mov
sbbb
mov
movsb
insl
push
je
dec
jae
add
stos
aas
ja
xchg
mov
mov
push
add
fcmovnu
lds
cmp
mov
test
inc
and
mov
test
les
mov
add
test
adc
mov
sub
pop
popl
mov
fwait
sub
adc
nop
out
repnz
inc
dec
es
cmp
movsb
lea
dec
aam
loope
mov
add
ret
dec
sbb
push
in
mov
imul
arpl
js
xchg
sbb
adc
dec
add
hlt
mov
xlat
jb
inc
jnp
and
ficoml
jne
mov
inc
add
mov
aaa
jns
fiaddl
adc
mov
outsb
mov
mov
mov
adc
popa
movsl
call
pop
mov
stc
or
pop
lea
imul
fwait
mov
adc
scas
add
es
xchg
xchg
outsb
dec
ss
xchg
inc
xor
loopne
mov
add
or
ds
in
or
sub
outsl
mov
nop
int
roll
stos
mov
ret
jno
ja
or
push
mov
inc
js
adc
add
sub
push
sti
repz
loopne
dec
mov
mov
lock
scas
inc
dec
test
cmp
sub
mov
inc
loopne
mov
rorl
and
rcl
mov
in
add
es
cmpl
xor
stos
rorb
mov
mov
xchg
jge
rcrb
test
pop
xor
sbb
call
jg
push
in
and
pushf
hlt
push
cmp
jno
xchg
neg
jbe
add
iret
or
mov
sub
data16
movsb
pop
jmp
or
adc
xor
stos
inc
sub
lcall
pop
movsb
push
adc
adcl
lahf
add
mov
push
sbb
aaa
inc
mov
push
movsb
mov
das
xchg
int
adc
sbb
pop
jae
lock
sub
jne
cwtl
xor
and
or
push
inc
or
mov
push
pop
mov
jmp
jp
xchg
pop
rcll
bound
cltd
jge
or
mov
out
sub
stc
lods
test
fcompl
in
cmc
jp
rorl
mov
loope
lods
sub
cltd
js
mov
cld
push
shll
sub
jl
fcmovu
sub
or
dec
push
and
int
inc
sahf
inc
mov
lahf
lods
sub
mov
xor
xor
or
mov
xchg
cmp
mov
ror
fwait
addl
aas
movsb
inc
fisubrs
les
push
xor
jl
jns
aad
stc
outsl
les
or
dec
jge
lods
or
xchg
mov
movsl
and
xchg
test
sbb
test
out
mov
pusha
in
ja
adc
or
add
mov
xchg
xchg
in
stos
movsl
cmp
ficomps
add
nop
mov
xchg
ret
cmovp
int
fbstp
xlat
sub
ljmp
rcrb
mov
dec
or
movb
adc
inc
test
mov
cmpsb
repnz
cmp
into
call
test
cmc
lock
and
js
and
fdivr
mulb
lret
xchg
out
push
pop
xchg
sub
std
pop
or
jge
out
fadd
push
lcall
mov
lds
mov
push
xchg
add
int
xor
cwtl
out
mov
mov
sbb
popa
in
inc
leave
mov
cmp
xor
mov
int3
fs
ja
push
add
lahf
mov
repz
and
xchg
negl
lock
and
popl
imul
cmpsb
cmp
daa
dec
cmp
push
movsb
adc
inc
lock
pop
mov
or
nop
movsb
push
xchg
in
adc
je
and
lock
xchg
ja
inc
addl
testb
insl
test
stos
push
and
mov
out
mov
fisttps
fcmovb
or
push
pop
in
and
dec
rol
icebp
add
adcl
bound
sbb
mov
mov
in
aas
and
push
pop
popf
adc
fistps
bound
mov
fdivl
cmp
hlt
stc
push
fcoml
xor
adc
int3
movsb
mov
daa
dec
movsb
imul
ss
rorb
add
aam
lods
lret
mov
fstpt
shlb
add
call
pop
cli
xchg
lahf
pop
mov
push
outsl
push
jmp
imull
sbb
jb
out
xchg
sbb
test
cwtl
je
cmc
xchg
jle
push
lea
dec
add
mov
push
rcrl
xchg
pop
dec
adc
stos
das
cmp
push
mov
bound
pop
out
mov
xor
shll
mov
scas
js
pop
insl
lock
movsb
std
out
sbb
dec
stos
fwait
xchg
js
mov
jns
cld
xor
jl
cli
loope
adc
addb
push
bnd
rcrl
pop
cmp
jecxz
aaa
jno
lret
out
sub
jb
and
pop
sbb
jns
pusha
test
stc
jl
and
mov
mov
frstor
int3
stos
in
xchg
cmc
cwtl
icebp
lods
gs
rcr
sbb
mov
pop
dec
sub
pop
adc
es
inc
inc
lods
jle
pop
ja
xlat
jl
daa
out
movsl
int3
sahf
sahf
ss
pop
jle
xor
adc
hlt
fistpl
and
xchg
lods
decl
jno
mov
mov
fimuls
pop
std
insb
adc
xor
loopne
into
stos
dec
and
or
push
rcrb
outsb
or
aam
enter
sbb
fildl
ret
and
in
inc
jbe
fstps
jl
aaa
xor
outsl
jle
push
insb
gs
push
nop
mov
dec
mov
jecxz
aam
cmp
mov
rclb
addb
in
push
mov
sub
outsl
xor
push
ret
mov
xorb
in
imul
and
mov
jns
gs
ror
mov
daa
add
sub
adc
xor
adc
pop
lahf
jae
lahf
sbb
inc
mov
ljmp
test
jo
jecxz
into
out
pop
jnp
nop
push
sti
mov
in
sahf
lcall
clc
or
aam
sbb
lahf
sbb
fmull
jmp
cmpsl
mov
cld
enter
inc
imul
add
push
jne
pop
mov
test
andb
mov
dec
dec
pop
shrb
push
dec
add
inc
clc
int
xchg
cld
push
push
fs
loope
pop
dec
inc
add
push
xor
dec
jnp
aaa
xchg
cmc
stos
sahf
sahf
jp
aas
xchg
test
add
push
or
pop
stos
inc
pop
aad
adc
loop
rcll
dec
push
adc
push
jmp
cwtl
sbb
in
or
mov
lea
and
cli
inc
fsubrl
push
addr16
idivl
lock
lock
das
inc
xor
imul
jecxz
nop
ret
in
or
mov
xchg
in
pop
mov
jne
cwtl
fstpl
mov
out
xchg
cmp
sbb
into
ds
popa
cmpsl
mov
adc
rcrb
push
xlat
cmp
mov
cmc
andb
push
aad
push
inc
sub
or
adc
daa
in
or
jae
ror
fsqrt
iret
out
jecxz
mov
fstps
and
pop
mov
ljmp
add
xchg
adc
xchg
mov
cmp
pop
je
dec
lea
fbstp
stos
das
add
inc
sbb
xor
jo
pop
mov
iret
inc
in
lods
lahf
adc
push
ja
and
insb
push
xchg
rcrb
jo
stos
push
cmp
ds
mov
pop
push
add
aad
insb
cmc
mov
jecxz
pop
inc
movsl
add
adc
movsl
sub
xorl
and
es
jle
aas
mov
jb
cltd
movsb
int
jne
dec
aad
sbb
nop
mov
xchg
cmpsb
sbb
pop
rorl
xor
add
in
dec
sti
pop
adc
mov
gs
popa
enter
ror
mov
sbb
shll
enter
ljmp
mov
cli
cmp
cwtl
xchg
dec
and
lds
ds
dec
repz
sbb
pop
lods
jmp
pop
xchg
cwtl
push
mov
mov
fidivs
sub
notl
push
xchg
mov
subb
push
mov
call
movsl
cmpsb
xor
push
dec
inc
movsb
push
add
es
addr16
pop
in
mov
dec
xchg
push
pop
lcall
lock
mov
leave
xchg
adc
or
mov
sbb
add
neg
mov
insl
add
jno
sbb
popf
jo
cmp
stos
mov
mov
mov
push
outsb
inc
or
pop
mov
cmp
or
add
pop
shl
inc
idivb
push
outsl
jne
jae
or
loopne
fldt
in
sub
pop
jns
xorl
adc
dec
vmaxpd
ret
and
filds
sub
gs
leave
mov
xchg
jl
jne
incl
xor
fistps
or
mov
xor
int
mov
cmpsl
test
dec
xor
cmc
shlb
stos
pusha
pop
jno
pop
sub
dec
xchg
in
jns,pt
inc
lcall
aam
lcall
push
or
xchg
loopne
sub
clc
xchg
pop
daa
movsb
rclb
jne
sub
dec
test
jo
or
pop
imul
das
jbe
ja
mov
nop
in
out
movsb
ds
in
int
pop
mov
mov
adc
imul
sbb
hlt
jmp
cmp
jg
xor
int
ja
jo
jb
mov
fxch
mov
cmp
std
cmp
adc
dec
mov
cmc
unpckhps
push
sbb
fcomps
mov
aas
mov
leave
sarl
jbe
and
scas
xor
xlat
cli
mov
stos
push
jns
ljmp
inc
lods
add
jo
mov
stc
ljmp
dec
mov
movsb
stos
xchg
pop
shll
arpl
fisttpl
mov
popa
cwtl
jns
and
out
push
fwait
mov
mov
mov
leave
and
js
inc
dec
fisttps
mov
lods
push
sub
arpl
lret
push
mov
dec
mov
subl
iret
pop
cmp
loope
sahf
or
xchg
mov
mov
add
push
cmp
mov
daa
cmpsw
data16
add
in
mov
cmp
cmp
mov
in
lret
and
out
jg
push
nop
rcl
call
push
inc
in
iret
push
in
jle
bound
pop
insl
into
andb
lods
xor
cmpsl
or
shll
dec
das
pop
stos
and
mov
sbb
pop
shlb
outsl
sbb
ret
mov
add
or
popa
ret
jbe
ror
frstor
cmp
movsb
aad
js
jecxz
movsl
std
in
shlb
imul
mov
inc
inc
mov
insl
add
lahf
iret
lods
out
inc
test
and
lcall
jg
rclb
mov
fldenv
sub
out
pop
jno
bound
mulb
dec
mov
or
adc
lds
loop
imul
or
psubsb
in
ljmp
push
push
popa
mov
jbe
adc
out
imull
dec
cld
dec
imul
inc
aaa
arpl
sub
and
xor
lock
mov
test
mov
jns
jns
imul
mov
sbb
pop
xchg
adc
das
inc
jae
inc
sbb
popa
mov
cli
fs
push
divb
aam
arpl
push
je
inc
arpl
xor
out
leave
faddl
int3
jno
repnz
sahf
out
xchg
inc
gs
push
ja
divl
mov
clc
push
jb
roll
daa
xchg
gs
leave
les
popf
dec
mov
mov
xor
push
or
adc
rcrb
shrb
mov
add
in
adc
clc
flds
push
mov
mov
bound
inc
or
mov
iret
aas
push
bts
push
pop
xchg
ds
and
negb
mov
pop
pusha
push
and
aaa
jp
add
fwait
dec
ljmp
pop
mov
fucomi
cmc
inc
lret
lds
fwait
lret
subb
outsb
int3
enter
mov
repz
pop
mov
jb
ficoms
cli
arpl
enter
mov
fildl
or
and
push
mov
jbe
es
xchg
xchg
cltd
rcrl
loopne
pushf
lahf
out
cmp
dec
and
mov
mov
sbb
mov
sbb
mov
adc
xchg
sbb
nop
out
sub
fsub
or
pop
iret
lock
lods
mov
out
out
lret
scas
lcall
lods
jge
pause
fdivr
mov
pop
int
push
mov
jmp
loope
jnp
movsl
test
shll
ja
cli
pop
sub
jne
cltd
cltd
mov
or
lds
sub
int
jnp
into
lods
shl
sub
cmp
int
pop
aas
xchg
sub
push
xor
mov
fldl
xchg
stos
xchg
js
pop
mov
pop
imul
adc
jns
adc
xchg
fnstcw
out
in
movsb
jge
xor
fsts
push
test
in
call
mov
cltd
jle
imul
xor
jecxz
cmpsl
insl
aad
repnz
rcrl
dec
fmull
and
sbb
pop
xchg
mov
mov
loopne
je
mov
mov
js
and
xchg
mov
jae
mov
jns
adc
sbb
push
shrl
outsb
cli
sub
mov
push
xor
flds
pop
sbb
mov
cmp
jns
push
sbb
pop
lock
xchg
pop
adc
and
ljmp
pop
push
in
sahf
leave
jle
xor
loope
mov
push
les
add
cmpsb
test
fs
loope
loope
inc
stos
mov
lcall
rorl
or
cmp
lds
jl
addr16
lret
out
cld
fistps
pop
push
cmp
mov
jns
adc
or
ret
test
push
bound
jns
into
xchg
mov
jae
lock
pop
sub
pop
xchg
push
add
or
pop
xchg
cmp
push
fdivl
lea
and
pusha
push
test
cld
movsb
jge
push
cmp
jae
or
push
shll
stos
push
xchg
movsl
push
loop
and
sbb
sub
add
mov
cmp
dec
push
sbb
dec
inc
sub
cmpsb
push
popa
inc
push
xor
movsl
adc
ficoml
xchg
lahf
ds
sar
aad
xor
add
sbb
inc
xor
lret
sub
js
out
push
mov
nop
lahf
fsub
dec
mov
pop
adc
xor
repz
sbb
sub
loopne
imul
mov
jmp
into
in
aad
push
sub
cli
adc
jbe
xchg
sar
lock
ja
repz
jae
mov
push
dec
rclb
jne
fldt
gs
adc
pcmpgtd
loopne
cwtl
and
repnz
or
stos
mov
pop
rcll
sbb
iret
cld
test
push
pop
fsubr
loop
fs
aad
fstpt
or
cmp
stos
push
adc
mov
testb
mov
adcb
push
ret
addr16
dec
sub
lcall
js
push
push
dec
je
cmp
mov
nop
movsl
jnp
hlt
ret
push
aaa
pand
mov
cmp
add
add
push
xchg
cld
sbb
sarl
out
cwtl
and
cvtpi2ps
ss
insl
add
jmp
add
push
fisubs
mov
fldenv
push
lds
add
or
pushf
mov
mulb
jp
mov
mov
adc
push
lock
xor
out
iret
aam
je
jb
adc
sbb
or
xor
inc
test
rcll
and
mov
jl
mul
clc
fildll
fnstsw
ja
mov
mov
fnstenv
pop
mov
sub
test
dec
in
mov
pop
and
je
fwait
jae
and
mov
aam
mov
xchg
lret
mov
shrb
or
mov
insl
jge
inc
out
cmp
fdivp
ja
mov
mov
xchg
daa
inc
fstpt
icebp
pop
rorl
es
push
push
sub
test
loope
cmpsb
xchg
movsl
dec
mov
push
push
pop
push
cmp
pop
xor
fsubrl
dec
data16
push
jbe
mov
data16
cmc
adc
mul
in
dec
aad
xchg
cmp
mov
sti
test
shrl
mov
clc
dec
ljmp
mov
jbe
add
in
iret
or
mov
test
jl
or
flds
mov
push
mov
incl
xchg
dec
dec
or
icebp
sub
xchg
mov
repz
aas
stc
cmpsl
dec
test
push
inc
int3
dec
bound
icebp
leave
sbbb
inc
jp
stos
and
add
stc
test
jecxz
fcmove
es
imul
dec
jmp
psubd
outsb
inc
xor
cld
mov
inc
fwait
push
leave
js
xchg
lods
cli
fiaddl
mov
and
in
stos
sub
mov
repz
lea
jae
add
xchg
pop
shlb
mov
popa
sti
sub
dec
rolb
push
shl
mov
loope
push
push
sarl
mov
clc
mov
pop
std
or
rcll
mov
jbe
sub
leave
lods
xchg
popf
rorb
adc
addr16
mov
cmp
sarb
sbb
sub
mov
enter
loopne
popf
cmp
inc
jecxz
leave
lea
mov
inc
cld
mov
bound
add
jo
aas
or
scas
call
mov
fdivrp
sub
in
mov
sbb
js
cmc
rorb
loop
add
stc
add
stos
lods
imul
sub
rcrl
push
popa
imul
imull
or
cmpsb
mov
imul
dec
jnp
cmpsb
mov
mull
lahf
inc
aam
mov
mov
jo
inc
add
inc
jns
mov
jb
fdivrl
sbb
add
daa
inc
mov
push
lret
imul
jnp
cmova
test
inc
mov
rcrl
push
out
test
shll
pushl
les
mov
cs
imul
cli
xchg
stc
sub
add
xchg
mov
scas
ret
imul
mov
pop
notb
sbb
jge
mov
pop
lret
jbe
inc
push
sbb
add
leave
cmp
test
and
inc
cmpsl
xlat
ds
lcall
cld
int3
or
mov
sbb
jmp
sub
jmp
dec
insl
mov
xchg
xchg
movsl
cmpsl
xrstors
cmc
push
rorb
push
sbb
mov
loopne
xchg
pop
pop
sub
arpl
or
repz
es
mov
fimull
ja
xchg
sbb
pop
ljmp
orb
cmpsl
fcoml
inc
dec
xchg
mov
imul
dec
movsl
dec
je
inc
xor
xor
clc
lahf
mov
test
pop
movsb
or
mov
dec
xchg
jecxz
or
cli
fstps
cmp
xchg
and
mov
push
xlat
xor
pop
jmp
mov
mov
xchg
rclb
push
out
mov
push
sahf
shl
jmp
test
fisubrs
adc
cmovp
push
xor
cmpsl
ss
nop
aas
sti
xchg
dec
mov
mov
pop
push
movsb
mov
loopne
jp
test
pop
cmp
cmpb
fwait
call
test
push
in
imul
or
fiadds
data16
sbb
inc
out
mov
mov
pop
fwait
inc
sbb
inc
aam
adc
arpl
dec
rclb
cltd
pop
das
and
shlb
xchg
jnp
sbb
jae
daa
aas
xchg
mov
in
ret
and
rclb
cld
and
call
testl
push
test
jnp
sbb
inc
addr16
push
je
mov
xor
push
les
mov
pop
sarl
cmp
or
lret
and
jne
push
pop
inc
mov
shlb
ljmp
clc
push
add
and
jg
jmp
adc
jp
and
mov
sbb
xor
mov
dec
push
sahf
daa
mov
push
hlt
push
mov
lods
loope
out
je
in
adc
stos
and
or
dec
mov
daa
pop
sbb
and
jl
addb
lea
fsubrs
test
cs
scas
mov
xchg
loope
sahf
dec
push
ret
testl
lahf
dec
pop
outsl
or
push
outsb
repz
sbb
popa
mov
dec
add
cmpsl
xchg
sbb
int
aad
out
pop
daa
mov
cmc
sub
mov
sbb
or
push
out
xchg
addr16
lret
icebp
jnp
adc
insb
fisttpll
adc
xchg
xchg
cs
cltd
adc
ds
mov
add
xchg
mov
jo
pop
push
popa
inc
addr16
loope
out
mov
shll
push
sub
mov
in
pop
pusha
or
mov
push
sub
mov
test
arpl
outsb
jl
xchg
or
inc
negl
lods
movsl
lcall
ljmp
inc
dec
pop
inc
sbb
mov
cmp
repz
xor
stc
sub
loope
xchg
push
das
lods
stos
jns
bnd
cmpl
into
shrl
daa
dec
out
mov
shrl
jecxz
mull
outsl
jno
xchg
filds
in
iret
sub
loopne
pop
fcoms
adc
cmpsl
jge
or
hlt
mov
fs
les
sti
push
sub
outsl
bnd
mov
mov
xchg
fstpt
incb
ja
cld
inc
sbb
imul
xchg
ss
leave
cs
adc
roll
mov
and
push
ds
lock
out
pushf
cmp
jg
imul
mov
push
jp
ljmp
xlat
mov
lods
dec
jo
push
cs
sub
scas
xchg
push
cltd
jns
pop
xchg
in
fiadds
testl
std
sti
cltd
mov
roll
das
lret
pop
pop
mov
sub
add
cmc
sub
pop
mov
fsubrp
push
lcall
fs
jle
fimuls
inc
xor
fimull
call
daa
fcoml
or
mov
mov
cli
int
pop
icebp
inc
or
pop
pop
icebp
mov
inc
sarb
pop
pop
lock
insl
pop
mov
mov
adc
aad
daa
jle
das
mov
mov
fildll
jl
and
push
xorl
es
into
andl
cmp
sti
xor
cwtl
dec
dec
out
lock
adc
and
cmp
mov
mov
cmp
xor
stos
test
cmp
or
test
call
adc
pushf
sub
add
repz
sub
out
lret
jl
sub
push
mov
gs
pop
loopne
xor
pop
fdivr
cmp
add
pusha
add
jne
loopne
push
xor
lcall
push
je
mov
sub
out
in
xorb
jne
insb
repz
inc
fstpt
sbb
jecxz
ja
test
repnz
push
sbb
xchg
or
mov
pop
enter
pusha
imul
dec
pop
pop
push
jmp
out
xor
hlt
scas
shll
movb
add
daa
xor
and
lcall
cmc
fsubp
or
inc
dec
shl
stos
mov
xor
repz
rcrb
jbe
add
jae
cltd
mov
into
add
rolb
test
out
mov
sub
enter
push
xchg
ss
xor
cs
xchg
test
sbb
das
call
shl
mov
lea
push
outsl
lret
das
adc
sbb
enter
pop
mov
mov
mov
xor
inc
mov
bound
movsb
nop
jle
xchg
pop
test
fimuls
cmp
cmp
rolb
gs
inc
mov
sub
sbbl
mov
les
fstpl
or
lods
pusha
and
push
mov
mov
cli
xlat
test
mov
adc
mov
cmp
dec
mov
shl
icebp
lahf
jne
out
pop
jmp
fnsave
add
push
fisttpl
lret
dec
test
daa
xor
out
sub
add
xor
mov
outsl
out
scas
sub
leave
mov
and
data16
les
push
shl
shlb
xchg
cld
repz
rol
pop
xor
adc
rcr
adc
mov
fdivr
dec
inc
insb
out
test
inc
mov
mov
mov
fidivrs
jecxz
outsl
mov
or
add
xlat
push
and
mov
jb
xor
add
movsb
mov
dec
aad
mov
stc
and
movsl
je
mov
jl
lods
jmp
sub
ficoml
lahf
add
test
cmpsb
pop
mov
mov
call
ja
lahf
dec
cwtl
and
or
lds
dec
movsb
xchg
cli
adc
fstpt
jo
test
loope
push
fwait
cli
mov
fwait
cmp
scas
aad
sub
mov
rclb
sub
mov
push
popl
cmp
sub
cmp
cmc
xchg
lret
pop
call
jecxz
jp
sarl
mov
mov
adc
add
fnstcw
inc
lret
sub
fldcw
cwtl
push
cmp
aaa
sti
or
out
xchg
shrb
xchg
sbb
ficoml
fstpt
fists
xlat
jae
insl
pop
mov
js
sbb
lret
out
mov
movsl
jp
call
int3
addb
lds
fstps
outsb
int3
pop
int3
or
jmp
fucomi
pushf
mov
xor
xchg
lds
inc
inc
mov
jo
in
xor
pusha
rorl
push
push
lret
and
inc
push
and
adc
dec
bound
or
fs
scas
std
cli
cmp
xchg
xlat
dec
bound
add
inc
std
je
jmp
push
dec
int3
mov
ret
je
add
test
dec
in
mov
xor
pop
scas
mov
inc
lcall
xor
add
jo
and
cmp
xchg
add
xor
adc
dec
add
test
push
mov
cmpsl
in
pop
and
aaa
and
loopne
and
cmp
in
jns
testl
and
jecxz
dec
cwtl
cli
gs
in
mov
mov
fcmovbe
xchg
loop
outsb
cmc
addr16
das
repz
pop
shll
sub
inc
out
mov
aaa
hlt
sbb
adc
jb
cli
push
pop
jge
stos
jecxz
cwtl
mov
fsubl
jnp
push
jp
push
sbb
cltd
nop
ja
and
inc
mov
or
cmp
in
mov
rcrb
push
jp
int3
test
outsb
mov
les
cs
scas
and
iret
mov
int
insb
test
xlat
popa
insl
xchg
data16
fwait
sbb
clc
popf
jo
push
daa
xchg
cmp
nop
popf
call
fstl
pop
jae
and
jl
inc
mov
and
jae
lret
test
and
mov
cmp
fs
xchg
int3
sub
xor
xchg
lock
push
andl
pop
mov
xchg
mov
cmp
out
jns
fistl
and
push
clc
daa
push
xor
movsb
xchg
mov
hlt
fisttpl
jns
mov
aad
cltd
cmp
mov
jp
jge
sbb
sub
nop
test
pop
dec
inc
lcall
push
scas
jge
cmpsl
push
negl
mov
test
dec
dec
imul
jle
mov
cmc
pop
and
movsl
pop
sub
adc
mov
orb
mov
jcxz
fcoml
mov
push
inc
xchg
dec
jb
lret
imul
mull
mov
pushf
in
jmp
cmpsl
push
add
mov
scas
sbb
pop
xchg
test
jmp
psllw
sarl
ret
imul
dec
addr16
fucom
xchg
cld
and
sbb
or
scas
and
repnz
or
sub
mov
pop
mov
pop
in
sub
cli
icebp
cld
lods
outsl
pushf
push
push
fwait
jo
arpl
sbb
outsb
mov
ficompl
jmp
or
xor
sbb
mov
dec
mov
mov
add
test
popf
data16
push
test
sbb
ss
inc
dec
icebp
stos
xor
push
xchg
inc
cmp
or
or
fsubrs
loopne
jb
fcmovu
rep
jecxz
push
push
sub
or
sub
out
arpl
and
orb
inc
mov
pop
rol
fstpt
dec
mov
mov
ss
shrl
ss
movsb
daa
testb
in
loope
or
pusha
adc
dec
xchg
push
dec
sbbl
push
inc
sub
out
or
xchg
popa
push
inc
pop
and
gs
push
or
leave
push
insb
dec
test
out
or
pop
imull
sbb
scas
mov
nop
in
xchg
cmpsb
int
mov
stos
push
ret
push
scas
mov
out
in
cs
cmp
fdivl
fnsave
test
repnz
jnp
repnz
add
out
xchg
in
cwtl
xchg
inc
pop
aaa
fs
cltd
cltd
test
push
movsl
jmp
repnz
ret
cmpsl
rclb
adc
loopne
xchg
xchg
mov
mov
outsb
dec
repnz
pop
push
pop
pushw
pop
or
repnz
rcrb
mov
xor
mov
test
pushf
xor
repnz
push
loopne
add
fildl
mov
jle
mov
pop
push
sbb
cmp
cmp
jl
lret
icebp
push
rolb
es
sub
or
push
sub
and
sub
les
divl
cmp
pop
dec
xor
xchg
vunpckhps
mov
dec
jno
ljmp
test
xchg
pop
call
ja
rorl
lea
repnz
into
bound
push
lret
push
loopne
insl
std
mov
dec
shll
push
push
ja
mulb
mov
or
testl
lods
lods
cmpsl
lds
and
mov
fildll
add
fcomps
mov
js
mov
aas
stos
sub
cwtl
cwtl
inc
pop
or
dec
lock
lea
xor
jnp
inc
push
cmp
test
or
cmp
pop
fidivs
push
je
add
inc
mov
mov
leave
lret
dec
leave
test
push
fsts
adc
cmpsb
icebp
nop
fsubrl
std
xor
cltd
adc
pop
mov
loop
cmp
mov
adc
push
xor
popa
mov
cmp
push
test
push
sub
pushf
insl
cmp
adc
inc
sub
mov
les
icebp
in
mov
fildl
xchg
mov
ret
rorb
fs
mov
mov
adc
adc
orb
dec
add
mov
out
ret
push
push
and
jbe
add
out
mov
adcl
inc
pop
sub
and
mov
lods
xor
jbe
icebp
ret
pop
sub
mov
mov
fdivp
insb
test
jb
leave
dec
xor
xor
outsb
sbb
pop
mov
mov
xchg
imul
push
dec
xor
jmp
xor
fcomip
mov
aaa
or
cmp
enter
daa
dec
fwait
mov
test
jl
cmpsl
xchg
add
jnp
fidivs
adc
xor
xchg
add
mov
mov
push
sti
insl
outsl
mov
repnz
xor
movb
push
xor
test
addr16
pop
xchg
imul
lret
test
mov
std
lock
test
mov
or
fildl
jge
shlb
xchg
xor
mov
clc
ja
cmpsl
pop
inc
lock
inc
push
inc
nop
cld
out
push
mov
cmc
and
xor
fisttps
pop
or
mull
loop
ss
push
sarb
in
out
sub
lret
call
lahf
daa
mov
lahf
or
cmc
mov
lahf
in
pop
leave
les
cmpsb
ljmp
sbb
adc
and
mov
lods
mov
subb
mov
ficomps
or
int3
adc
shlb
xor
sub
inc
pop
dec
call
xchg
pushf
inc
les
xor
bound
pushf
and
in
and
add
hlt
push
inc
push
sub
inc
xor
lcall
outsl
imul
std
out
gs
mov
sub
hlt
sub
sarl
ja
pop
inc
push
mov
adc
leave
hlt
dec
xchg
enter
mov
xchg
push
mov
pop
sar
jbe,pt
mov
pop
fcom
jno
xchg
repnz
mov
jp
loop
cmp
rcrb
cmpsb
scas
iret
jae
mov
test
xchg
mov
mov
jmp
call
test
enter
stc
push
jnp
scas
js
jp
mov
sbb
xor
pop
repz
in
aas
pop
pop
pop
shlb
jne
imul
dec
incb
movsl
sub
ret
movsl
xor
add
xor
xor
mov
push
movsl
or
bound
cmc
in
mov
dec
pop
push
outsl
std
aad
dec
stos
push
movsl
adc
sbb
outsl
mov
cs
jmp
mov
dec
fs
mov
mov
js
in
or
fwait
dec
into
fwait
push
adc
lock
mov
int
dec
cmp
insl
fists
pop
imul
mov
sbb
mov
ret
aaa
stc
fidivrs
xchg
outsl
push
mov
int3
mov
dec
or
pop
mov
pop
xchg
insl
xor
idivl
jp
xor
negl
testb
enter
movsb
jb
jecxz
mov
xchg
out
xor
dec
test
jg
mov
push
pusha
xor
mov
sbb
jbe
add
xor
push
cmp
adc
rcrl
add
ljmp
mov
sub
out
stos
lret
cmp
lret
jnp
popa
sbb
adc
and
dec
ret
fcoms
out
jb
in
imul
shlb
push
lods
iret
adc
xchg
xor
sub
andl
je,pn
fcmovu
mov
push
mov
sbb
mov
mov
xchg
pop
lock
imul
data16
mov
mov
dec
push
fbstp
inc
int3
sbb
dec
hlt
mov
les
stos
and
adc
push
mov
xchg
das
movsb
fyl2x
xor
es
iret
shl
sarl
inc
jb
sbbb
cmp
fistpll
jecxz
cmp
rcrb
into
lds
push
cltd
das
add
lret
lods
cld
fistps
hlt
inc
clc
pop
lea
scas
push
insb
push
dec
inc
sub
popf
adc
lahf
fwait
loop
adc
sbb
or
dec
bound
call
call
aam
ror
sbb
push
nop
call
fldcw
cmovo
jbe
cmp
and
bound
daa
cmp
sarb
xor
mov
int3
lret
xchg
ret
add
xchg
sahf
fiaddl
sbb
fwait
orb
jge
aas
jne
ja
je
inc
xchg
out
faddl
push
push
adc
pop
in
out
add
adc
gs
jl
fdivrs
add
into
push
repnz
ja
jp
xor
mov
mov
js
push
jg
movsl
arpl
movsb
or
in
add
cmp
andb
imul
cmp
repnz
xor
sub
mov
cmp
push
cmp
pushl
imul
mov
adc
push
fs
int
pop
or
nop
mov
inc
idivl
xor
adc
lret
xchg
outsb
mov
loopne
jb
movsl
jg
lods
fs
xor
stc
sarl
mov
jge
outsl
in
les
js
subl
cwtl
fiaddl
mov
aaa
push
cli
outsl
jae
dec
jne
push
sbb
loop
data16
jno
mov
mov
xchg
out
mov
cmp
imul
leave
sbbl
xor
insb
push
add
jno
lock
jbe
push
push
cmp
fcompl
push
sbb
loopne
movl
xor
mov
addl
fldenv
fiadds
enter
mov
add
xchg
and
mov
out
subb
sub
push
int
sahf
mov
xchg
fists
lods
aad
jp
test
dec
imul
shlb
test
inc
and
das
orl
mov
loopne
pop
jg
pop
das
inc
mov
sbb
cmp
jge
data16
adc
rorl
dec
cmp
lds
xchg
icebp
int3
hlt
jmp
mov
or
ljmp
push
pop
imul
out
sbb
leave
sbb
les
ss
jg
jne
out
daa
dec
mov
daa
push
jb
jl
xchg
popa
imul
mov
das
idivl
aas
jae
cmp
push
subb
push
mov
pop
aam
jge
jno
fildll
movsl
insl
outsb
cwtl
xor
dec
lahf
pop
shl
jecxz
js
into
dec
mov
js
mov
fdivl
mov
pop
enter
ret
cmc
lea
add
test
mov
pop
lahf
xchg
ret
insb
mov
fcmovbe
pop
and
xor
push
call
dec
jecxz
inc
dec
ret
jmp
hlt
pusha
dec
add
repnz
add
gs
pop
aas
xchg
push
mov
push
es
cmp
mov
add
imul
rcrl
rorl
push
push
jb
dec
testb
jne
or
daa
ret
in
add
shl
xchg
imul
sub
imul
jmp
in
shlb
inc
fildl
push
lret
dec
cmp
mov
outsl
inc
push
cs
outsl
test
fidivrs
push
push
cmpsl
push
jb
mov
pusha
mov
daa
push
mov
stc
jg
sbb
inc
pusha
and
xor
lods
mov
inc
lods
ret
sbb
and
add
cwtl
dec
and
add
xchg
bound
scas
xor
mov
aam
addb
fstpt
sar
cltd
scas
out
insl
ljmp
push
stos
mov
or
mov
push
cli
inc
out
mov
sbb
jge
push
add
fidivrl
cmpsb
fcompl
sbb
hlt
jle
fnstcw
std
out
fbstp
inc
fbld
ds
sbb
idivl
popf
inc
stos
pop
les
adc
fsubs
int
push
pop
xchg
add
stc
outsb
or
out
dec
pop
mov
icebp
dec
mov
and
or
cs
test
mov
jmp
jne
xor
sbb
adc
jmp
pop
mov
shrl
jno
aam
loop
mov
and
enter
push
scas
add
lret
mov
or
mov
xchg
fiaddl
add
pushf
hlt
int3
adc
pop
jecxz
add
outsb
sahf
xchg
jb
test
aas
mov
or
iret
loope
mov
in
int
jmp
lds
dec
int
ljmp
pop
mov
int3
loope
cs
lret
lock
pop
mov
lahf
cmp
out
sti
lea
sub
test
clc
addr16
outsl
mov
xchg
xor
je
push
push
adc
pop
jle
addl
std
out
sar
inc
adc
movsb
es
dec
pop
das
jns
pushf
mov
icebp
xchg
adc
cmp
stos
out
push
es
dec
inc
test
and
adc
push
pop
je
push
xchg
mov
repz
repz
mov
fucom
cmc
adc
mov
pop
jb
jecxz
mov
hlt
or
out
adc
mov
pop
daa
stc
cld
push
xor
ja
and
jbe
cli
and
bound
or
aaa
test
or
imul
movsb
dec
inc
sbb
dec
js
and
add
push
aas
scas
sub
rolb
fistps
jae
jo
pop
xor
daa
popa
mov
push
int3
test
jl
insb
dec
jg
aad
stc
pushf
ds
and
cwtl
cmp
mov
pop
sbb
sub
cmp
sbb
inc
popf
ds
test
pop
push
std
xchg
dec
inc
xor
dec
pop
clc
lods
pop
stos
inc
mov
rcrl
gs
jae
mov
fcompl
mov
add
je
pop
je
mov
test
mov
and
sbbl
outsb
inc
notl
ret
mov
cmp
andl
or
add
jb
mov
sbb
adcb
lea
mov
mov
inc
sti
in
inc
mov
mov
or
pushf
stos
pop
in
insl
mov
xor
and
or
or
mov
dec
in
shrb
sub
aaa
fidivl
mov
and
cld
xchg
cli
in
popa
in
mov
inc
mov
das
push
in
nop
punpckhdq
push
jge
scas
fcoms
movsl
add
aam
mov
xor
jp
lds
clc
lret
movsl
xor
lock
mov
jge
sbb
xchg
cltd
push
sbb
jo
xchg
lret
mov
xor
xor
fistpll
fucomi
and
sub
jecxz
faddl
ret
lret
js
sub
push
test
push
fiadds
xorb
cmp
mov
push
fmuls
dec
push
pop
imull
inc
mov
xor
int3
lock
or
sub
jle
mov
lods
mov
inc
sbb
aad
sub
in
popl
inc
ret
or
adc
sahf
shl
xchg
add
or
push
rcrl
das
pop
cmpsl
dec
ret
fiadds
mov
mov
add
gs
hlt
ret
orl
sub
add
mov
and
sbb
and
cld
sub
or
imul
mov
pusha
scas
out
aaa
xchg
mov
xchg
jp
mov
arpl
movsb
xor
xchg
in
mov
jl
out
in
inc
fwait
dec
mov
sub
les
mov
dec
pop
cmc
adc
jae
xor
cmpsb
and
daa
cmp
ret
scas
orb
sub
pop
jp
pop
xorb
ss
xor
cmp
lahf
fstl
ret
jne
pop
sub
aam
dec
scas
push
out
xlat
arpl
jbe
push
mov
sti
xchg
push
push
pop
stc
dec
into
test
loop
or
pusha
push
cmpsl
stos
data16
into
imul
cmp
xor
movsl
test
cltd
ss
pop
inc
test
dec
push
xchg
fsub
icebp
ret
lea
inc
aad
lods
outsb
or
int
cmpsl
or
in
icebp
stos
mov
xchg
aad
push
adc
std
clc
or
or
aam
mov
adc
outsb
scas
jg
or
sbb
push
pop
jmp
mov
sbb
cmp
fstl
fcompl
mov
data16
mov
jae
cld
arpl
jb
inc
push
gs
or
jle
sub
mov
repnz
lahf
pushf
pop
mov
push
add
jp
fstpl
imul
inc
lds
gs
cmpl
xchg
inc
add
jns
sub
incl
leave
clc
sbb
pop
mulb
lds
sbb
sbb
and
pop
dec
cmp
or
andb
mov
and
mov
ret
out
cli
test
xchg
popa
push
fstl
js
popf
ret
push
sbb
cmp
inc
mov
mov
push
lcall
jle
sbb
mov
cmp
mov
rcrb
fnstenv
fnstcw
shl
cltd
mov
movsb
or
in
aas
push
dec
push
sub
lret
sub
in
xorl
jnp
and
js
jno
cli
jnp
and
stos
or
dec
push
and
and
push
cmpl
mov
out
xor
cli
sub
xchg
adcb
push
scas
nop
loope
adc
mov
cmpsl
fmull
mov
insb
jl
or
leave
mov
mov
loop
cmp
mov
push
jnp
mov
js
xchg
scas
pop
xchg
mov
add
or
push
inc
push
adc
ljmp
ljmp
int
pop
jmp
inc
mov
push
lods
mov
adc
loop
aaa
mov
mov
or
pop
xor
arpl
mov
mov
mov
sbb
sahf
rcll
xchg
push
or
jns
sub
cmp
cmpl
test
loop
and
or
fadd
adc
pusha
cltd
cmp
pop
xchg
push
shl
cmp
mov
jge
add
aad
pushf
aaa
pop
mov
xchg
or
push
push
fcmovbe
cld
sbb
cmc
shll
lods
xchg
inc
cmp
pop
mov
enter
jbe
xchg
jnp
in
jne
push
sbbl
lock
sahf
insl
jne
nop
mov
mov
les
cmc
stos
xlat
mov
xchg
and
ljmp
xchg
pusha
jecxz
dec
sbb
sahf
dec
arpl
xchg
mov
push
cli
ret
dec
push
dec
mov
adc
or
clc
test
sub
xor
test
xchg
or
lahf
icebp
add
sbb
dec
adc
cmp
lret
inc
fistl
push
add
and
cmpsb
addr16
in
mov
or
xlat
fisttpll
mov
pop
adc
loop
icebp
sbb
xchg
xadd
sub
pushf
xchg
popf
and
push
in
xchg
or
popf
frstor
idivb
call
cltd
mov
adc
adc
mov
dec
xor
sbb
imul
mov
push
add
movl
cmpsb
mov
mov
test
mov
lret
repnz
and
ja
adc
in
push
dec
shlb
inc
cmp
repz
mov
outsl
and
test
int
mov
cmp
aas
xor
push
je
jne
cltd
pop
lods
lea
scas
pushf
aad
jae,pn
dec
xchg
aad
loope
push
std
inc
jmp
aaa
inc
dec
ja
pop
fsubl
jp
mov
js
xchg
orb
xchg
mov
push
mov
repnz
mov
fidivs
leave
or
sahf
mov
mov
mov
xchg
mov
push
mov
inc
and
loop
and
jge
sub
sub
es
lock
lods
out
push
and
imul
mov
pop
cmp
inc
and
out
mov
xor
insl
cli
outsl
clc
fistl
lret
cwtl
imul
std
aad
lock
sahf
scas
xor
das
shr
jmp
push
fidivl
fsubrl
mov
pusha
jbe
cmpsl
jae
imul
jmp
jmp
call
sbb
out
mov
dec
decb
frstor
arpl
jg
enter
sti
pop
sub
rorl
or
cmp
xor
scas
sub
fmuls
and
and
xor
bnd
push
rcll
ds
outsl
rorb
add
outsl
jl
push
xchg
push
dec
push
pop
les
out
jae
xor
je
mov
lahf
scas
stc
ret
mov
pop
test
xor
pop
push
mov
movsb
push
test
add
push
xor
js
and
movsb
add
add
adc
scas
std
in
or
lods
ror
aam
push
imul
or
ficoml
shl
mov
cmp
fs
fimull
stos
insb
xchg
lea
jecxz
and
sub
xchg
dec
mov
aas
sbb
inc
xor
sub
mov
gs
test
jo
repz
add
dec
inc
pop
imul
ljmp
nop
leave
mov
out
push
jl
repz
movsl
mov
std
test
xchg
jbe
jp
mov
filds
aas
cwtl
fs
jge
loop
sbb
pop
cmp
iret
cmp
rol
insb
jne
jg
fwait
dec
pop
add
jns
sub
sbb
fidivl
jb
and
mov
lea
rorl
adc
std
push
cwtl
fldl
gs
xor
inc
daa
cmp
dec
movsl
lea
das
lods
mov
jl
xor
fldenv
dec
sub
mov
sub
push
stos
pop
push
ret
xchg
jb,pt
lds
pop
test
rdmsr
add
jl
out
xchg
jbe
testl
lods
stos
aas
push
jb
add
aas
in
or
sbb
inc
jns
rcrl
and
push
sbb
add
pop
inc
push
dec
adc
lea
faddp
es
loope
jg
adc
cmp
mov
test
dec
cli
sti
pop
out
dec
sub
insl
jg
pop
addl
cmp
dec
or
xchg
adc
xor
pop
movb
or
xchg
add
xor
ret
mov
adc
outsb
cmpsl
gs
nop
sub
xor
call
ss
ret
lods
sbb
jl
xchg
mov
jle
push
xor
add
sbb
sahf
mov
lods
les
push
ficomps
aam
mov
xchg
push
push
adc
inc
push
scas
push
adc
xchg
aad
sbb
out
call
clc
rcrl
lcall
cli
jecxz
jmp
dec
ljmp
mov
sbb
les
leave
xchg
xchg
inc
sbb
mov
fcoms
xlat
push
outsb
outsl
cmp
mov
incl
mov
push
mov
jo
jp
mov
sbb
cmp
dec
adc
rolb
out
pusha
xor
add
movsb
out
pop
xor
addr16
lret
sbb
xor
stos
mov
dec
add
add
xchg
lods
jb
lcall
pop
or
xor
test
xor
stc
xchg
test
and
xchg
adc
ret
sub
mov
sub
aas
shl
and
cltd
idivl
arpl
push
cmp
jno
pushf
xchg
gs
lods
lcall
xchg
clc
into
adc
or
pop
sub
bound
add
xchg
icebp
mov
fbld
loop
scas
cld
xchg
push
mov
into
insl
push
cwtl
ja
add
mov
aam
mov
mov
adc
fildll
ficomps
mov
mov
repnz
mov
call
xor
clc
ja
pop
imul
cmp
enter
stc
jne
iret
or
call
popa
adc
ret
pusha
loop
mov
jge
sbb
push
cmpb
mov
jmp
fxch
int3
xchg
das
cli
mov
sahf
jle
jo
and
sub
cmpsb
cmp
pop
shrb
fsubrl
cmpsb
jmp
shrl
les
int
xor
pop
mov
and
cmpl
or
mov
cli
cmpsb
sub
xchg
inc
cmp
dec
xor
in
pop
fidivs
xor
imul
cmpsl
sti
leave
add
jge
ja
mov
inc
lock
sbb
cmpsb
fs
cmpsb
inc
sbb
lods
into
pop
sub
inc
in
iret
push
mov
cld
add
decl
subl
xchg
mov
cwtl
andb
call
outsl
cmp
or
mov
pop
shll
inc
xchg
mov
lret
cmp
sub
xchg
lret
jb
jp
mov
movsl
or
jl
mov
cmp
int
orb
inc
ret
icebp
cmc
int
mov
enter
negb
xor
dec
cmpsb
jl
add
add
aas
shll
fildl
cwtl
sub
push
shrl
push
sub
jp
out
fcmovnbe
fwait
maskmovq
testl
mov
jno
out
or
adc
xor
test
loope
push
xor
inc
push
lods
adc
hlt
mov
enter
pop
and
jns
ficoms
mov
push
or
out
ficompl
out
sub
sti
addl
orb
push
loopne
loope
cs
dec
out
aam
popl
repnz
lcall
lea
movsl
rorb
pop
insb
leave
cmp
or
lock
sbb
ja
push
add
popf
stos
adc
iret
mov
sbb
out
adc
int
je
icebp
testl
and
sbb
js
mov
push
test
stc
lret
and
sub
insb
je
shl
xchg
out
movb
sbb
scas
stc
or
xor
les
insl
adcl
push
jecxz
xor
push
push
pop
cmove
addb
cmpsb
mov
lret
cmp
sahf
and
xor
push
dec
outsl
loope
jp
sbb
addb
leave
adc
vpunpcklbw
lcall
fiaddl
add
clc
mov
idiv
jno
mov
ret
add
pop
test
sbb
les
xlat
mov
incb
mov
sbb
rcl
lods
rcrb
xchg
cltd
jge
call
jecxz
fistpl
imul
repz
out
daa
xchg
jmp
mov
clc
mov
mov
lea
mov
daa
mov
rcr
jno
jecxz
sbb
add
sbb
gs
or
cmp
insb
pop
cmp
jo
popa
mov
push
dec
dec
or
mov
or
or
push
xlat
sti
xchg
mov
dec
inc
push
push
sbb
xlat
cmpsb
fldenv
nop
add
xchg
std
dec
sub
sbb
dec
pop
adc
lcall
adc
bound
lock
xchg
pop
push
pop
iret
cmp
icebp
mov
ret
jae
scas
imul
mov
push
mov
mov
jbe
xor
jns
decl
pop
push
test
test
sbb
sub
imul
sbb
sbb
fidivl
test
cli
in
ds
lods
movsb
aam
lock
je
jmp
mov
sub
add
test
ds
push
pop
jae
mov
sbb
test
rcl
fists
cli
adc
inc
lret
ja
cmp
ficomps
cmp
pop
sbb
lret
or
repz
in
call
popa
mov
mov
out
adc
inc
jmp
jae
repnz
mov
jo
jbe
sub
sub
mov
add
stos
imul
bnd
enter
cmp
mov
dec
mov
imul
out
iret
icebp
loop
cmp
push
mov
mov
mov
data16
sbb
adc
imul
mov
push
fstpl
idiv
dec
mov
push
insb
imul
and
stos
sbb
subb
and
cmc
hlt
mov
lods
lods
mov
mov
xchg
rol
adc
dec
sbb
jno
add
pushf
aas
ljmp
call
fcompl
loopne
dec
pop
jecxz
js
xchg
dec
popa
add
cmp
out
call
stc
lcall
pop
js
fcoml
dec
ds
mov
iret
stos
xchg
and
and
mov
rcll
xor
mov
daa
jo
test
insb
cltd
or
add
ret
push
mov
ljmp
pop
js
lds
fcmovnbe
push
cmpl
and
cs
xor
mov
xor
dec
mov
cmp
fwait
mov
les
es
hlt
jecxz
cwtl
je
das
mov
shl
icebp
xor
dec
and
movsl
pushf
push
aaa
aas
into
cmc
cmp
movups
sub
inc
mov
push
jecxz
movsb
jp
xchg
movsl
dec
dec
cmp
mov
mov
popa
mov
mov
xchg
xor
sahf
mov
insb
ss
pop
mov
add
sub
and
push
cld
adc
xchg
dec
and
and
mov
mov
and
mov
or
into
push
leave
rcll
cmp
js
in
popa
pop
push
scas
test
xor
cmc
jae
xchg
aam
add
dec
mov
mov
mov
cmpsb
js
sbb
jmp
push
push
xor
mov
in
icebp
in
inc
mov
push
lock
popf
mov
xchg
or
jp
push
bound
jne
negl
xlat
pop
outsl
mov
aas
adc
lahf
inc
stos
insb
pusha
sbb
dec
cmpsb
cld
xchg
enter
jp
jo
jle
cmp
push
jmp
adc
sbb
and
lcall
lds
sub
and
cmpsl
cltd
sub
mov
cwtl
mov
adc
and
js
das
gs
dec
xchg
xor
jbe
fstpl
shl
mov
dec
pop
fcoml
mov
jb
and
ljmp
fs
std
stc
mov
push
jg
or
jo
sahf
pop
mov
jno
jle
fwait
adc
jge
out
pop
and
xchg
xchg
mov
add
aam
ret
mov
xorl
aam
pop
pop
dec
jge
out
add
adc
dec
mov
loopne
orl
push
es
or
fldenv
and
loope
sub
lcall
adc
ds
push
fwait
lahf
mov
mov
push
xor
jno
cmp
jae
faddl
gs
and
popa
add
sub
sub
add
cwtl
jecxz,pn
or
add
inc
pop
pop
adc
fisttpl
fstpl
adc
rorb
push
jmp
pop
add
jmp
out
sbb
inc
outsl
jecxz
and
sbb
hlt
leave
cmpsl
push
inc
mov
lahf
stc
jae
xchg
sti
xchg
jb
inc
jle
cmp
fs
add
xor
xchg
sbb
mov
and
push
sbb
xor
dec
fisubrs
cltd
clc
cmpsl
sahf
cmpsb
sahf
fcom
cmpl
ss
lret
dec
cmp
push
and
lahf
enter
push
enter
adc
pop
mov
jmp
clc
cmpl
data16
inc
xor
cwtl
mov
ja
idivl
jge
cmp
cwtl
add
das
mov
cltd
mov
loop
mov
cmp
push
adc
jbe
pop
andl
ret
jg
jge
ja
fmul
mov
pop
clc
sub
mov
push
leave
cmpsb
inc
out
pop
in
jmp
clc
ret
or
cmpsl
arpl
mov
pop
inc
imul
xchg
std
ficompl
and
fld
pop
xchg
dec
xor
pop
sub
adc
fincstp
test
sub
pop
xchg
lret
cmp
out
mov
pushf
dec
pshufw
cmp
outsl
data16
push
xor
aas
lcall
nop
mov
cmp
leave
dec
push
out
insl
pop
daa
das
nop
jp
pop
push
mull
nop
xchg
adc
mov
fwait
hlt
cs
es
pop
push
sub
and
jp
mov
xchg
mov
mov
sbb
pop
xchg
das
dec
enter
mov
fildl
jno
inc
faddl
cmp
iret
sub
jns
push
movsb
jbe
pop
movsl
or
inc
movsl
jmp
cmp
add
and
push
push
repz
jnp
in
mov
mov
xlat
ja
jl
mov
lahf
daa
repz
mov
scas
ror
lahf
mov
js
pusha
dec
mov
xor
add
mov
pop
insb
cli
push
push
daa
lods
mov
jg
and
push
popa
mov
inc
out
cld
popa
in
mov
and
addr16
xchg
movsb
repz
in
xchg
add
ss
mov
iret
aaa
les
inc
rcll
or
xor
add
jo
fists
push
ljmp
cmp
stos
mov
dec
xlat
test
mov
lock
scas
push
sahf
cmp
jge
loope
mov
mov
cmp
inc
xchg
scas
push
out
push
in
jl
orl
movsb
fisubl
dec
ja
std
dec
out
push
imul
push
cmpsl
es
fcompl
leave
ss
rcll
pop
push
pop
int3
out
sub
aam
lea
mov
jecxz
push
or
push
das
in
xor
adc
mov
test
and
lahf
shlb
mov
hlt
dec
inc
les
dec
adc
testb
aaa
push
mov
int3
pop
jg
adc
sti
xchg
out
sub
pushf
dec
sbb
inc
mov
les
sbb
push
in
mov
out
sbb
inc
push
pop
aam
xchg
test
shll
jecxz
pop
sbb
test
xor
jg
push
mov
add
ds
sbb
sbb
aad
or
pop
leave
pop
xchg
decl
lock
xor
inc
test
filds
pop
add
mov
mov
dec
nop
push
push
dec
cmp
sub
sbb
rcrl
shrl
lret
pop
sbb
and
cmp
in
xor
cmp
jae
frstor
cwtl
lcall
jl
loope
cmc
jb
and
js
jg
xorl
inc
cli
mov
aad
stos
xor
aaa
sbb
jae
mov
mov
divl
dec
cmc
insl
lods
imul
push
or
or
and
imul
in
jae
push
aam
sbb
jecxz
into
mov
roll
in
jg
cli
rcll
inc
dec
popf
xchg
jnp
push
sub
xor
and
int3
or
rorb
xchg
add
inc
out
cmpsb
int
xchg
xchg
out
enter
push
jo
mov
xor
outsl
insl
call
notl
push
stos
sarb
mov
loop
add
inc
ret
jmp
adc
jmp
push
imul
add
xchg
pop
xor
mov
push
dec
testl
cmp
dec
insb
push
call
add
or
popa
hlt
je
dec
adc
ret
shl
and
jns
adc
aaa
fstps
push
cmp
push
sbb
das
xchg
add
fcomip
mov
mov
push
and
insb
inc
xor
jmp
aaa
inc
scas
outsl
cmp
xor
jns
mov
push
pop
fildll
mov
clc
les
rorb
stc
or
mov
inc
leave
jg
sbb
dec
and
ret
xchg
jmp
xchg
pop
sub
fiaddl
test
rclb
dec
out
scas
rol
adc
ljmp
fwait
addr16
push
mov
or
icebp
and
xchg
call
out
xlat
dec
mov
xchg
and
pop
fldcw
test
inc
sbb
inc
lods
aas
mov
add
ljmp
je
xorl
icebp
fsts
jmp
int3
int3
mov
int
fwait
gs
adc
xor
imul
push
idivb
jae
mov
push
addb
fdivl
mov
insb
xchg
jp
or
inc
dec
loop
cmp
int3
mov
push
mov
out
jl
xor
insl
lock
sub
sub
data16
lods
and
mov
aas
inc
mov
and
and
xlat
dec
out
rolb
pop
inc
and
call
movq
cmp
push
repz
aam
mov
push
cmp
mov
decb
movsb
pop
jno
push
int3
gs
cmpsl
imul
outsb
in
div
add
mov
aas
setg
xor
or
dec
cmpb
cmc
sub
push
adc
mov
pop
jne
adc
pop
pop
adc
and
xchg
pop
aas
mov
adc
mov
sbb
adc
xchg
sarl
test
jg
adc
sub
and
xor
inc
push
jp
dec
mov
push
jbe
sahf
xchg
mov
enter
cmp
rolb
aad
or
subb
mov
xorl
mov
push
and
adc
dec
in
leave
push
cmp
sbb
int3
mov
mov
inc
sbb
cmp
rorb
leave
sbb
jecxz
sbb
and
lea
sub
cmpsb
pop
in
dec
je
insl
dec
in
imul
push
sub
mov
fidivrl
pop
test
and
enter
jnp
movsl
sub
clc
or
mov
sti
sub
test
pop
cmpsb
mov
xchg
sbb
gs
test
and
jp
mov
rorl
inc
xlat
jp
lahf
lret
pusha
das
imul
fldcw
pop
xorb
out
ret
and
arpl
stc
repz
push
mov
sub
mov
sub
out
push
fsqrt
fistpl
scas
mov
call
or
pop
push
iret
in
daa
pop
mov
push
in
das
push
or
into
ret
lock
mov
add
pop
and
fimull
push
lea
imull
cmp
sub
inc
shrl
mov
sbb
sbb
sbb
popf
ret
rol
cwtl
into
pop
jne
jecxz
add
icebp
test
pop
outsb
adc
pushf
and
or
xor
mov
xchg
pushf
xor
out
fists
int3
pusha
ret
xlat
dec
or
lret
mov
or
lea
int3
lret
xchg
insl
xor
add
xor
aaa
sbbl
push
sbb
mov
xchg
cmp
mov
jp
ja
push
ja
pop
fidivs
imul
loope
xchg
and
cmp
rcrl
shld
mov
int3
js
fidivrs
push
pop
mov
in
or
adc
xor
vextracti32x8
lcall
ds
pop
test
aad
arpl
adc
mov
xchg
or
add
fsts
mov
sahf
and
xchg
mov
push
jle
push
and
adc
test
pusha
shll
jns
inc
xor
mov
cmp
push
testb
push
xor
aam
and
dec
xor
sbb
sub
inc
cmc
divb
and
mov
das
dec
push
xor
push
aad
cmc
mov
pop
pop
daa
pop
pop
jo
sub
mov
jl
repz
lret
fstpt
or
jns
jmp
sub
push
test
cmp
cmc
scas
lods
push
data16
lea
pusha
iret
dec
jo
cwtl
orl
or
push
xor
mov
push
mov
shll
popf
xor
vpunpckhqdq
inc
xchg
ret
jae
sub
sti
js
pusha
in
out
mov
test
pop
mov
scas
jl
scas
movsl
hlt
pushf
mov
call
or
xchg
inc
js
jbe
pop
dec
mov
out
sar
cmp
inc
insb
fs
incb
nop
mov
andb
shrl
enter
dec
test
mov
dec
inc
fsubr
dec
dec
mov
nop
sub
and
mov
testb
jl
pop
call
or
int
push
xor
and
pop
out
pop
mov
xlat
mov
icebp
sub
add
cmp
lahf
dec
xchg
sub
or
loope
push
scas
push
or
insl
scas
pushf
out
fisubrs
fdivrp
sahf
in
push
or
fs
decb
pop
es
or
insb
testb
aad
lret
push
lret
test
add
js
punpcklbw
addr16
cld
lods
fldenv
mov
cltd
mov
adc
adc
ret
loopne
lea
push
pop
fldcw
in
push
ret
hlt
add
jmp
adc
mulb
add
pop
pop
mov
les
dec
mov
rcll
addl
imul
push
daa
and
jo
fs
xchg
dec
push
or
scas
inc
jmp
in
jbe
jle
jno
arpl
xor
jae
xchg
push
lcall
push
add
dec
movsbl
arpl
fwait
xor
jae
insb
mov
jb
lock
dec
sub
lret
push
dec
in
push
in
inc
mov
inc
xor
push
mov
out
imulb
sub
xchg
pop
mov
add
rol
pop
fmul
lods
dec
cli
xchg
push
addr16
frstor
or
jmp
jecxz
lods
push
pop
idivb
dec
in
inc
into
scas
sub
js
fsubrs
push
push
mov
mov
lcall
icebp
nop
mov
and
shll
mov
or
outsb
insl
xchg
pop
mov
out
jmp
dec
add
mov
adc
cmpl
push
cwtl
pushf
ds
icebp
mov
call
in
mov
xor
xchg
cmp
loope
adc
aam
popf
in
cmp
loope
and
outsl
les
gs
jg
push
jns
repz
xchg
jbe
mov
ljmp
fistps
pop
push
movl
aam
pop
hlt
sarb
cmc
out
les
mov
fsub
jns
sar
xor
inc
xor
push
out
fistpl
mov
fs
and
sub
filds
out
shll
push
inc
push
jo
or
xor
jae
aam
call
stos
and
and
js
std
pop
jae
clc
cmp
adc
inc
popa
and
ficoml
pop
fcoml
sbb
ret
xchg
mov
movsl
rorl
arpl
jno
pop
aaa
or
pop
pop
out
inc
and
sbb
jo
dec
fisttps
out
fsubr
repz
cmc
add
divb
loope
jne
push
insb
xchg
fsub
mov
cmp
js
pusha
sub
cmp
loope
aad
push
xchg
jl
jo
rep
lods
sarb
add
sti
mov
aam
cs
popf
push
dec
repnz
push
nop
and
leave
push
mov
test
scas
sbb
cmp
jne
pusha
in
in
outsl
iret
or
inc
dec
fs
cmc
jno
js
je
loope
outsl
sahf
pop
test
das
xchg
dec
int3
inc
jb
shll
out
dec
cs
mov
int
mov
pop
in
cld
push
xor
sub
int3
js
jge
lds
push
push
lret
cmp
adc
and
mov
dec
cmp
bnd
jae
pop
jmp
mov
cmpsl
inc
out
mov
icebp
rol
jno
fstl
ret
mov
dec
cmp
inc
xor
push
cmp
test
cmp
jns
shll
sbb
xchg
add
sbb
shll
push
jbe
push
push
jae
dec
out
push
loope
scas
ret
cmpsl
push
pop
jl
sub
push
cmp
rcrb
enter
sbb
fbld
push
xor
aad
add
das
scas
add
movsl
mov
cltd
fst
mov
xor
test
pop
inc
cltd
push
lds
getsec
mov
aam
fs
mov
inc
nop
fsubrl
test
ja
push
sbb
nop
or
or
sbb
mov
js
es
xor
cmpsl
sbb
int
popl
xchg
aas
lods
sbbl
repz
pop
sub
int
mov
pusha
scas
out
mov
iret
mov
xorl
cmpsb
sbb
shrb
fsubr
enter
cmp
or
nop
push
mov
sub
lahf
and
hlt
pop
sbb
pushf
sbb
and
fcmovnb
xor
arpl
mov
in
cld
lret
cltd
jnp
inc
jecxz
int
xor
rcr
xchg
and
divl
mov
mov
outsl
sbb
mov
outsb
fldt
sarb
mov
jno
subl
pop
xor
das
rcrl
test
or
jbe
int
in
or
sbb
dec
push
mov
pop
jno
fidivrs
add
insb
enter
adc
in
xchg
pop
push
xor
add
icebp
jbe
loopne
pusha
popa
sbb
fidivl
enter
testb
sbb
shl
xchg
stc
mov
mov
daa
test
xor
xchg
mov
and
inc
and
insb
xchg
cmp
mov
mov
dec
hlt
dec
aas
dec
push
rolb
mov
pop
cmp
lahf
into
sub
enter
and
lahf
lea
sbb
in
push
dec
mov
inc
aad
pop
mov
test
mov
or
dec
sbb
loopne
xor
jmp
jg
jl
dec
xchg
in
test
mov
int
arpl
sub
repz
and
fninit
idivl
mov
push
popa
push
push
mov
adc
jl
pop
xchg
jmp
jbe
sarb
cltd
pop
in
gs
lcall
mov
stc
insl
in
call
ret
and
cli
loope
in
add
shrb
sub
mov
mov
call
in
xorl
out
xor
dec
mov
mov
cs
push
test
dec
addr16
stos
loop
mov
xor
push
push
dec
out
popf
mov
push
ja
nop
lret
and
push
aam
std
ret
cmp
js
ds
pop
mov
add
int3
xor
jmp
push
daa
xchg
adc
cmp
adc
sbb
jmp
popl
or
jle
in
inc
leave
fisubl
repz
lods
jne
cmp
sub
outsb
call
mov
insl
outsb
fucomip
jne
sbb
gs
lea
jmp
cmc
loop
push
icebp
mov
fidivs
mov
xor
or
jns
daa
and
fisubrs
fs
sbb
inc
cmp
cmp
into
xchg
gs
xor
in
ss
xchg
sub
fwait
test
inc
callw
clc
fcompl
hlt
jp
js
mov
movsl
call
push
lret
add
cltd
lret
mov
jo,pt
jae
sbb
sbb
pop
out
sbb
mov
jmp
cmp
cltd
push
mov
mov
pushf
xor
cmp
call
dec
sbb
mov
and
test
dec
mov
in
rcll
in
mov
inc
fidivs
pop
popl
das
popf
xchg
xchg
xor
mov
cli
xor
jo
sbb
push
sahf
dec
cmp
sub
out
xchg
out
addr16
test
addb
xchg
imul
aas
mov
test
movsl
push
inc
lahf
insb
mov
mov
jae
scas
lods
mov
sub
fcoms
xchg
jle
jl
call
xor
les
cmpsb
mov
div
frstor
fcoml
mov
xchg
add
call
sub
sub
movq
icebp
bound
mov
sbb
loop
ds
jbe,pn
add
shl
add
jp
cltd
mov
insb
scas
filds
ja
roll
adc
lcall
negl
test
fwait
and
xchg
les
and
aam
xchg
mov
inc
cmpl
das
xchg
xchg
and
or
test
fildl
stc
xor
xchg
sub
insb
mov
adc
cmc
mov
movsl
dec
in
jnp
ss
and
cmp
cmpsl
rcrl
add
inc
push
sub
call
cmp
cmpsl
inc
cmp
pusha
xor
add
ds
mov
fsubl
push
push
pop
xchg
jbe
movsb
fiaddl
imul
and
inc
mov
lea
jno
icebp
repz
cmpl
dec
std
dec
jecxz
sub
xchg
jl
xor
incb
mov
xlat
lahf
cmc
arpl
cs
push
jne
stos
mov
sub
scas
daa
pop
mov
xchg
dec
pop
add
ret
xchg
and
clc
dec
mov
jnp,pn
mov
js
push
lds
jge
pop
call
push
mov
jbe
loop
jno
cmp
into
add
aad
cmp
fstps
jnp
es
xor
mov
cmpsb
scas
mov
and
cmpb
cmp
dec
out
in
mov
sbb
es
add
sub
rclb
push
pop
add
in
test
cmp
pop
pop
lock
mov
jae
shl
cli
ror
fisubs
lds
adc
gs
xchg
rorb
xchg
mov
mov
pop
outsl
insl
dec
pop
icebp
mov
jne
inc
inc
sub
aas
pop
clc
in
mov
mov
mov
out
scas
jecxz
cmp
add
xchg
cmp
inc
movsl
test
out
and
adc
pop
sbb
mov
cmpsl
outsl
sub
loope
mov
ficoms
sbbl
test
lret
xchg
pop
fidivs
popf
das
loope
addr16
push
lods
mov
das
icebp
repz
xor
test
std
in
mov
addr16
add
or
push
enter
xchg
test
sbb
add
sbb
jecxz
jno
sti
sahf
cli
into
inc
xchg
fdivl
repz
fisubs
and
push
lods
push
add
dec
dec
jno
stos
in
pop
adc
test
xor
daa
insl
push
push
dec
inc
loop
sub
orb
inc
test
xchg
imul
sbbl
in
cmp
cmp
cltd
daa
jbe
cwtl
nop
dec
jno
test
fdiv
xchg
fwait
mov
cmp
fcom
bound
dec
add
sbb
lcall
mov
cmp
dec
push
pmulhw
int
repz
loope
pop
inc
fsubrl
test
sub
push
cld
dec
jecxz
xor
mov
xlat
sbb
mov
xor
add
sti
mov
mov
rcrb
fstl
pop
push
cld
push
out
and
or
mov
xchg
fisttpl
imul
loopne
sti
sub
stc
sbbb
cltd
cmpsb
pop
out
cmpsl
fimull
and
cmpsb
cmc
and
mov
adc
clc
shll
rcrl
fcompl
inc
inc
xchg
imul
mov
aad
push
jge
sub
push
mov
jecxz
mov
xchg
insb
rol
xlat
add
push
sti
dec
adc
and
push
or
xor
fnstcw
xchg
out
pop
dec
call
mov
mov
jo
dec
fs
pop
je
lea
mov
into
test
sti
ljmp
pop
int3
push
push
sbb
push
or
popa
addr16
push
fwait
inc
inc
test
jg
iret
mov
adc
push
iret
loopne,pn
iret
popl
ret
and
pop
xchg
icebp
stos
mov
xor
jp
xor
cwtl
icebp
mov
jb
fnsave
push
subb
stc
inc
nop
sti
mov
sub
shrl
mov
inc
pop
imulb
cli
or
xchg
dec
dec
cs
xor
aas
dec
push
andb
enter
imul
ja
loop
xchg
mov
push
fwait
iret
jne
js
xchg
cmpsb
mov
scas
dec
imul
decl
cld
push
shll
repnz
sub
shl
mov
mov
inc
mov
adc
dec
mov
jae
pop
cli
bound
xchg
mov
fwait
xor
rolb
pop
push
push
mov
dec
xor
lahf
add
in
cltd
push
cld
mov
xorl
jg
inc
pop
inc
dec
mov
mov
inc
insl
xchg
jo
lahf
sub
cmp
dec
pop
mov
or
sbb
and
icebp
mov
outsb
cmc
outsb
call
push
push
lret
notl
pop
imul
dec
into
fmulp
iret
jno
sub
je
stos
pop
andb
imul
cld
mov
pop
adc
pop
dec
cmpsb
xchg
and
enter
push
jns
and
outsb
call
push
cmp
jns
repz
scas
xor
push
add
out
jns
cwtl
sub
inc
faddl
jb
inc
fimull
push
jb
xchg
in
jno
les
mov
stos
ret
mov
inc
test
sub
mov
dec
fdivr
out
cmpsl
loop
repnz
push
popa
mov
and
xchg
xchg
aas
stc
and
bextr
stc
cld
or
movsb
or
repnz
mov
ds
mov
out
std
lds
cmp
add
xor
cmpsl
leave
imul
ljmp
lds
add
mov
add
inc
addl
pop
loopne
sbb
dec
mov
inc
xor
aad
jnp
popf
leave
lods
cmp
cmp
mov
pop
mov
daa
push
stc
call
fsubrl
pop
rolb
or
mov
inc
int3
push
insb
pop
adc
lret
adc
dec
push
ret
xchg
out
add
nop/reserved
imul
popa
mov
cmp
push
dec
lds
popl
mov
mov
and
mov
sbb
inc
cltd
test
movsl
stc
dec
fcmovne
xorps
pop
and
icebp
mov
in
cmpl
push
outsl
jmp
push
lret
mov
inc
test
push
rorb
mov
mov
jle
add
xorl
mov
push
dec
mov
mov
and
cwtl
push
dec
xchg
loopne
inc
cli
xor
aaa
sub
nop
loop
mov
jecxz
pop
mov
mov
scas
clc
pop
dec
adc
mov
sub
cli
mov
arpl
pop
cmp
roll
sbb
push
add
pusha
fmull
out
or
jne
or
in
sahf
xchg
mov
xor
dec
clc
dec
fdivp
ja
shll
mov
pop
rolb
jae
lea
dec
loopne
je
movsl
add
loopne
and
jns
push
nop
into
jmp
xchg
or
inc
nop
js
hlt
das
or
or
sub
repnz
cmp
mov
inc
mov
pop
scas
cmpsl
xchg
mov
mov
repnz
or
push
or
lret
pop
pop
mov
push
ret
cli
xchg
mov
addr16
data16
lcall
mov
stc
jl
add
cmp
xor
mov
and
aaa
mov
mov
dec
movsb
cs
lret
mov
imul
lcall
cwtl
mov
addr16
mov
xor
in
pop
adc
and
inc
and
xchg
push
mov
mov
and
out
in
and
addr16
into
dec
jnp
jno
xor
mov
imul
pop
jp
xchg
or
pop
xor
mov
jl
lcall
sub
mov
push
pop
loop
insl
je
fs
sub
mov
adc
out
fsubs
pop
dec
lcall
leave
jb
jnp
ret
fs
movb
dec
movl
lods
xchg
dec
leave
mov
pop
scas
repz
test
aaa
fimuls
mov
mov
inc
hlt
dec
mov
fsin
sub
mov
pop
jge
pop
stc
xor
push
adc
andl
jmp
popa
rorb
repz
cmc
mov
push
cmc
sarl
and
xor
push
cmpsl
ds
pop
repz
jp
es
ficoms
mov
lods
xlat
jae
add
or
pop
xor
pusha
sbb
sub
test
and
cmp
sub
adc
cmpsl
lret
cwtl
cmc
push
repnz
aas
pop
push
ljmp
mov
flds
and
leave
pop
push
je
cmc
lahf
sub
test
mov
rorl
arpl
outsl
ret
addr16
add
inc
inc
add
mov
sub
jbe
dec
clc
pusha
xchg
pop
test
lds
scas
daa
stc
fucomp
ja
hlt
pop
popf
jmp
push
dec
loopne
push
movsl
cmpsb
shrl
pop
inc
ficomps
mov
xchg
dec
add
rcrl
xlat
sbb
in
or
arpl
orb
pusha
lods
cld
rcrl
hlt
cmp
insb
or
cmp
push
popa
lcall
fisubs
icebp
sub
adc
or
test
mov
shll
sar
fldl
cmp
push
sub
mov
loopne
cmp
jo
inc
sbb
xor
rorb
nop
fldl
cmpsl
xchg
xor
jecxz
pop
and
sub
ljmp
into
into
push
fdivrs
jne
cmp
cltd
int
js
in
clc
lods
pop
fcmovb
mov
lea
iret
cmp
outsl
dec
adc
xlat
outsl
mov
lock
lret
jb
pop
cld
pusha
rcr
arpl
lret
out
dec
les
mov
or
sahf
lret
scas
jp
pop
daa
movsb
inc
inc
and
jge
or
jge
mov
mov
divl
mov
cmpsl
insl
jae
fdivl
cmp
adc
cmp
sub
loopne
mov
outsb
mov
cmpb
jmp
dec
test
pop
dec
rcrb
and
push
mov
fwait
lds
fsubl
xor
mov
pop
adc
jp
push
nop
xlat
inc
leave
and
lock
jmp
add
pop
js
rcr
gs
push
mov
outsl
inc
or
loope
jb
push
mov
xor
adc
push
addr16
adc
cmp
stos
mov
ss
adc
das
add
inc
inc
icebp
ds
or
movsl
cmc
adc
cmp
cmp
and
movsl
inc
dec
push
aas
cs
push
ljmp
push
mov
addb
shrl
es
adc
adcb
jb
rep
std
mov
xchg
mov
fsts
nop
adc
aam
daa
loope
xor
xchg
and
je
andl
das
incl
cli
mov
in
repz
std
rorb
movsl
or
mov
push
addr16
data16
sarl
inc
jmp
fcompl
cmp
loopne
cmp
test
movsb
stos
movsb
out
sti
jo
pusha
std
in
push
jbe
sarb
cwtl
addr16
push
xchg
inc
les
mov
sahf
fwait
les
out
pop
pop
pusha
test
mov
scas
xchg
icebp
xor
jb
mov
mov
pop
test
hlt
sbb
pop
inc
and
ret
xchg
loopne
testl
std
outsl
pusha
in
mov
outsb
adc
aad
cmp
repnz
cld
into
scas
jle
adc
push
and
sbbb
mov
scas
inc
push
mov
stos
stc
add
ss
inc
xor
int3
jae
fs
pop
mov
adc
gs
shll
scas
adc
xor
jle
inc
dec
xchg
imul
xchg
mov
inc
stos
test
push
sbb
inc
jp
andl
inc
jge
cmp
in
cmc
psrld
call
dec
test
push
jae
pop
pop
pop
mov
mov
leave
les
lea
fdiv
pop
jl
ret
outsb
daa
jne
ss
jge
cmp
fildl
adc
or
rcll
adc
dec
mov
adc
jecxz
std
ja
loop
xchg
adc
inc
push
mov
push
fld
out
push
xchg
or
pop
mov
sbbb
push
and
mov
dec
andb
lds
in
xchg
mov
add
dec
add
lahf
fisttpll
cmp
call
popf
repz
mov
add
sbb
sti
mov
repz
or
lret
cmp
int
mov
pop
mov
insb
pop
inc
mov
mov
bound
mov
dec
cmp
adc
outsl
stos
mov
pop
je
sbb
jo
stc
xchg
sti
cwtl
pop
cwtl
sub
sub
and
outsb
das
insb
cwtl
and
bound
scas
fcomps
mov
stos
pop
adc
xor
rcl
aad
fsubl
mov
lock
pop
mov
das
mov
stos
mov
cmp
mov
in
jae
jmp
dec
leave
sarl
sub
jo
push
rcl
arpl
fdivp
add
sbb
cmp
lret
lret
loop
test
sbb
and
addr16
rorl
xor
inc
ja
shr
ljmp
xchg
adc
and
mov
enter
roll
sub
in
xor
jmp
pop
jae
imul
xchg
mov
xor
rcrl
jbe
sahf
jge
push
rorl
sbb
lock
daa
add
pop
movsb
mov
mov
add
mov
repnz
mov
scas
xchg
xchg
inc
mov
xchg
jbe
sub
cmpsb
inc
and
pop
int3
push
xchg
xchg
jns
fnstcw
outsb
mov
jne
adc
sar
xchg
aam
ficoml
das
std
jns
or
pop
jne
je
sub
lcall
xor
sub
scas
sub
xchg
or
or
xor
push
adc
mov
shrl
or
popa
dec
out
int3
mov
push
js
stc
pop
movsb
into
arpl
jmp
sub
shlb
es
mov
cmpsl
add
jg
mov
stc
fists
shlb
dec
jle
push
fimull
pushl
enter
jle
iret
loop
rorb
gs
or
shll
int3
push
or
cmp
cmp
les
fidivrl
xor
jne
and
adc
push
icebp
ret
pop
push
cltd
cmc
jmp
mov
pop
sbb
mov
test
xor
in
arpl
adc
outsl
shr
orl
cs
rolb
outsb
cmp
sub
fwait
push
or
sbb
cld
shlb
jg
std
in
lea
pop
sbb
mov
dec
or
adc
les
inc
dec
test
push
jge
pop
jae
call
pop
pop
insl
xchg
mov
xlat
jbe
cs
push
mov
sti
rorl
jecxz
nop
jbe
jo
addb
mov
mov
idivl
out
negl
loope
mov
test
subl
pop
outsb
cmpsb
in
and
call
push
stos
or
clc
dec
aad
subl
data16
sub
xor
sub
mov
aad
pushw
inc
pop
push
lock
mov
popf
gs
mov
ljmp
dec
mov
ja
adc
outsb
jbe
dec
adc
gs
loope
arpl
push
lret
jge
loopne
cmp
scas
lods
cltd
pop
sbb
xor
or
or
jecxz
mov
adc
stos
in
gs
shll
xchg
xchg
pop
iret
adc
addr16
mov
and
cwtl
mov
nop
xor
or
mov
or
pusha
cmp
test
movsl
jb
inc
add
xlat
das
addr16
inc
jmp
push
pop
js
sub
push
xor
inc
stc
repnz
fs
jnp
out
dec
icebp
js
jb
mov
xor
testb
loopne
movsl
xchg
cmp
rcrb
xchg
sub
icebp
mov
out
push
ficomps
push
test
push
sub
std
fnsave
inc
jnp
inc
sbb
mov
cmpsl
gs
mov
mov
fcoml
lahf
add
repnz
adc
push
xor
testl
imul
push
test
mov
mov
sahf
xor
pop
fdivrs
dec
xchg
lock
cli
loopne
insb
add
add
into
push
ljmp
pop
dec
cld
push
dec
xor
data16
inc
test
push
lea
scas
imul
lret
dec
iret
push
mov
shlb
xchg
dec
sahf
inc
negb
add
mov
push
add
mov
fisubl
stos
jne
mov
sub
int
push
xchg
pop
inc
inc
cmp
jg
sbbl
jbe
sub
hlt
inc
inc
mov
aam
int3
lods
cwtl
push
cmp
adc
mov
xchg
push
lcall
mov
mov
xchg
inc
xchg
and
ffree
mov
movsl
sub
jno
arpl
out
add
xchg
jns
fiaddl
mov
in
ljmp
lcall
loopne
pop
or
sti
adcb
bound
mov
test
or
xchg
mov
adc
mov
fdivl
adc
mov
hlt
shll
sub
fiaddl
inc
add
lret
jno
test
movsl
cmp
imul
lods
in
pop
cmpsb
aas
cmc
mov
mov
movl
sahf
das
xor
das
inc
fnstsw
pop
xchg
push
add
pop
and
aas
iret
xorb
js
mov
hlt
ret
dec
dec
enter
sbb
in
jb
dec
add
mov
and
mov
add
lods
aad
insb
push
loop
xchg
push
push
jmp
inc
jg
dec
mov
and
lcall
dec
dec
and
mov
jmp
adc
sub
push
pop
pop
and
mov
clc
adc
adc
jo
dec
xchg
or
rcl
jnp
cwtl
pop
sahf
push
jle
imul
add
pop
popa
pushf
es
fbld
pop
sbb
ljmp
mov
mov
fwait
data16
sub
adc
fcoms
lahf
iret
and
mov
add
nop
xor
das
inc
mov
ror
test
add
cmp
rolb
inc
sub
jge
mov
ds
push
int3
lcall
mov
rol
into
mov
cmp
cmpsb
lods
sub
push
mov
or
test
fidivs
cmp
push
xchg
int3
xor
push
pop
mov
pop
cmp
pop
inc
mov
pusha
mov
adcb
sbb
adc
mov
test
and
add
or
add
add
jno
dec
adc
push
push
loope
push
outsb
inc
lods
add
icebp
dec
jb
aam
inc
ljmp
imul
cmpsl
cmp
ret
inc
xchg
ja
mov
pushl
xchg
mov
jne
jno
add
ljmp
cmp
push
and
sbb
aas
cmc
pop
xchg
ds
lock
imul
and
cltd
movsl
or
dec
and
add
xlat
xchg
rcrb
jns
fnstsw
jno
test
dec
arpl
mov
ljmp
mov
jae
cmpsb
mov
addr16
push
out
imul
cmc
popa
xchg
mov
xor
and
mov
roll
jg
leave
fwait
xor
ret
add
pop
es
sub
push
dec
clc
dec
pop
mov
cmpsb
mov
rcrb
inc
sbb
call
fsubs
pop
data16
or
mov
in
cmpsb
mov
pop
sbb
and
cmp
add
std
cmp
fisubs
scas
xor
mov
sbb
icebp
or
add
shlb
nop
lret
andl
mov
xchg
iret
mov
xlat
xor
pop
ljmp
bnd
adc
adc
jbe
push
fstl
push
mov
daa
sbb
nop
sub
push
adc
in
movl
scas
pop
aaa
sub
lret
repz
fisubrs
lcall
adc
xor
mov
or
adc
xor
rolb
fcoml
xor
mov
mov
test
lea
lea
mov
jb
dec
mov
sbb
pop
or
add
leave
jae
repz
mov
adc
mov
jl
test
push
push
cmp
push
inc
insl
mov
sbb
jne
cmp
xchg
aas
push
mov
mov
ret
insb
scas
dec
pop
rolb
mov
xor
dec
adc
mov
lcall
add
mov
xor
jmp
sarl
aad
jae
mov
pusha
lcall
fisttpll
mov
pop
dec
cli
cltd
mov
cmp
push
mov
movl
or
lods
out
dec
mov
lret
into
lods
jmp
adc
in
dec
mov
pop
in
cmovne
pop
inc
mov
mov
loopne
and
les
ss
out
loop
loope
stos
xor
movsl
in
jl
movsbl
pop
rcll
xchg
pop
mov
mov
mov
fwait
jb
jp
pop
dec
push
jl
push
mov
aaa
lods
xchg
or
hlt
mov
push
and
fst
fsubr
xlat
mov
les
push
int
shl
inc
xor
out
adc
push
push
dec
fildl
sub
dec
mov
stos
jmp
adc
xchg
sub
inc
xor
add
mov
clc
leave
pop
jg
cmp
lds
fwait
test
test
sub
stos
daa
cld
call
mov
cld
xor
icebp
xchg
pusha
pop
out
cmp
and
ds
je
xchg
popf
or
repz
out
sub
push
sbb
xor
lods
in
aam
in
jge
push
psraw
xor
mov
push
jae
cmp
pop
clc
sub
sub
mov
test
sub
jb
divl
push
pop
add
cltd
mov
jp
hlt
jle
sbb
sub
inc
dec
mov
cwtl
sbb
cld
inc
mov
cltd
cwtl
addr16
mov
add
push
jne
repnz
mov
push
add
popa
in
mov
stc
cmp
aaa
cmp
pop
scas
mov
outsl
or
out
pop
out
ror
jnp
lods
out
sub
adc
rcr
shl
cmp
mov
inc
rolb
cs
iret
mov
push
cmp
jbe
in
adc
jnp
add
xor
mov
xchg
stos
add
out
pop
popf
rolb
sub
mov
aaa
jae
fstpl
mov
sti
jge
xchg
xchg
xor
daa
icebp
xchg
sbb
xchg
mov
inc
imul
sub
push
mov
dec
ja
iret
jmp
dec
inc
inc
pop
rcr
mov
jmp
hlt
xchg
adc
add
subl
sbb
mov
cmp
movsl
cmp
add
fucomi
rclb
in
mov
and
imul
gs
mov
jb
push
fdivrs
inc
push
jae
movsb
mov
insl
fdivl
mov
loop
or
pop
repnz
xchg
jle
cmc
mov
aad
das
popa
popf
dec
jmp
push
push
add
pushf
jnp
sti
add
mov
pop
fmuls
in
pop
lret
push
into
pause
inc
xlat
test
or
xor
movsl
dec
test
movsl
xchg
lret
push
repnz
cmc
bound
sahf
popf
cmp
jg
outsl
je
push
sub
iret
mov
push
inc
adc
bound
pop
mov
sahf
int
iret
adc
rcll
or
out
je
out
aad
repz
enter
and
cmpsl
ror
add
repnz
enter
imul
cmp
mov
mov
dec
adc
sub
dec
jnp
fpatan
inc
fsubs
sub
xchg
gs
rcll
bound
xlat
jmp
mov
clc
add
lcall
cwtl
popa
icebp
test
mov
pushf
mov
mov
and
stc
push
push
mov
jno
out
dec
scas
push
sbb
mov
xchg
lahf
movsb
pop
pop
pushf
mov
movsl
or
out
push
sub
push
repnz
fs
push
roll
aad
popf
jp
adc
mov
inc
pop
loopne
inc
pop
nop
lret
mov
cmpsb
and
fstpl
popa
mov
xchg
decb
push
call
adc
xchg
adc
push
mov
popa
add
mov
jp
ret
mov
push
loopne
add
pushw
inc
orb
sbb
and
xor
lret
pop
ds
sbb
jns
ja
in
push
out
outsb
fnstenv
add
xor
lds
clc
sub
mov
mov
icebp
rcrl
push
xor
cmp
int
or
repnz
push
and
xor
xor
xor
popf
add
aam
mov
fwait
mov
xchg
hlt
in
xchg
mov
adc
cmp
inc
cltd
mov
repz
notb
push
adc
in
pop
mov
ret
fcomps
arpl
clc
ja
stc
and
mov
add
sbb
sbb
push
xchg
jne
mov
cmp
xchg
cmp
test
cmp
dec
cmp
gs
or
or
iret
insb
ja
fistpl
fmuls
daa
idivl
fsubp
aad
ret
inc
and
pop
mov
in
mov
mov
mov
mov
add
inc
lds
sbb
nop
push
js,pt
les
push
pop
pop
sbbl
orb
jnp
sub
loope
jno
orb
xchg
xlat
adc
es
sti
test
and
lods
das
testl
std
ficompl
cld
sbb
add
ret
pop
lret
fcompl
push
mov
jge
xor
lds
roll
sbb
sub
test
popf
lahf
jg
gs
push
inc
std
aam
cmc
push
stos
jl
push
push
and
pop
mov
xchg
push
add
add
jne
pusha
in
sub
std
sub
xor
dec
inc
gs
mov
inc
inc
sub
sub
outsb
add
in
xor
fs
cltd
jecxz
adc
mov
cvtdq2ps
adc
out
mov
inc
or
rcr
mov
addr16
repnz
std
or
jbe
movsl
clc
loope
je
add
xor
mov
mov
mov
push
mov
and
imul
lods
xchg
xor
and
shll
push
inc
aas
movsb
jmp
hlt
insl
xor
cmp
mov
les
jns
xchg
andl
jmp
pop
sub
fcoms
sub
mov
dec
push
mov
rclb
out
jno
lea
aas
out
dec
cld
or
dec
cmp
or
fnsave
addb
or
dec
xchg
idiv
push
lds
fisttps
pushf
add
pusha
std
stos
cmc
push
sbb
loopne
icebp
fwait
rclb
std
jns
ja
sub
pop
push
das
push
mov
or
cmp
int3
daa
addr16
imul
loop
mov
int
dec
xor
lock
sbb
push
into
jne
iret
ja
fnstsw
aad
lods
test
push
dec
lea
push
jnp
mov
stc
jmp
dec
adc
es
xchg
out
jbe
xchg
shrb
push
mul
outsl
int
and
pop
pop
aaa
adc
jge
xor
ret
mov
test
sub
loop
test
push
nop
or
shrb
sub
cmpsl
insl
call
push
and
sub
cmp
js,pn
mov
cmp
mov
out
jp
adc
push
int3
ljmp
lock
and
shlb
imul
dec
data16
jns
sbb
push
pop
jns
inc
jecxz
jp
js
cmp
jns
dec
cltd
push
lea
jno
jl
ja
scas
fcmovne
jb
aam
clc
fnstcw
addb
mov
in
xchg
add
pusha
push
hlt
outsl
jp
outsb
xchg
sti
inc
inc
pushf
xlat
and
pop
lea
mov
mov
adc
adc
xchg
dec
mov
inc
lea
inc
cmp
mov
mov
mov
out
and
icebp
and
lock
fwait
dec
pop
pop
sbb
lahf
dec
sbb
outsb
sub
mov
adc
rorl
orl
jne
ja
jle
mov
call
jns
xor
dec
ret
mov
out
lods
and
xor
out
push
ljmp
out
jbe
cmp
insb
jae
cmp
ljmp
lock
lock
enter
push
aad
dec
jp
out
inc
popa
cmp
cmpl
dec
pusha
push
or
rcll
pop
mov
popf
lahf
xchg
push
fisttpl
add
jnp
in
jmp
fistps
outsl
and
cltd
or
mov
arpl
or
test
jno
out
pop
test
roll
shrb
and
pop
imul
testl
jns
es
jmp
fldlg2
pop
xchg
cmp
push
push
adc
fidivl
sub
mov
or
push
cli
je
outsl
jb
xor
add
stos
xor
xchg
in
cld
outsl
push
loope
inc
push
in
jae
cmp
call
or
jmp
addr16
xchg
lock
sub
nop
arpl
scas
bound
ret
mov
and
xchg
cltd
iret
cli
ror
lds
push
fadd
xor
xor
iret
lods
jns,pt
mov
jbe
cmp
imul
sbb
mov
inc
adc
cmp
xchg
dec
addr16
shl
xchg
iret
cmp
insb
dec
and
sar
clc
pop
adc
leave
inc
lods
jmp
mov
pusha
cmp
into
je
in
into
pop
les
mov
js
pushf
movsb
mov
mov
mov
and
cmp
psrlq
dec
je
popa
xchg
inc
nop
jae
jmp
bound
call
fimull
xor
mov
push
mov
fidivrs
ss
int
scas
or
mov
adc
mov
in
stos
pop
addr16
std
mov
data16
jno
push
mov
mov
mov
jae
cltd
js
in
lret
jge
jg
ljmp
cmp
push
adc
push
and
subl
leave
repnz
xchg
out
push
xchg
and
lea
std
jp
inc
cmp
or
or
pop
sbb
outsb
nop
out
pmaxsw
add
das
ja
iret
in
iret
mov
test
mov
push
outsl
pusha
je
dec
and
ss
js
pushf
lahf
xchg
or
mov
js
xlat
imul
div
shlb
mov
xor
mov
mov
sbb
lret
fcomps
shrb
mov
xchg
pop
arpl
stos
rolb
fwait
stos
lahf
xchg
js
jne
test
cmpsb
add
mov
fs
pop
mov
das
cmpsl
cmc
enter
jl
fwait
mov
ja
or
enter
pop
sbb
or
mov
rcrl
jnp
jns
pushf
in
stc
gs
add
outsl
clc
add
sub
inc
cli
jb
stos
sub
fldl
jmp
mov
aam
dec
fmull
dec
imul
adc
add
std
sbb
aad
cmpsb
fbstp
mov
daa
add
cmp
movl
repnz
jmp
dec
pop
ljmp
jecxz
movl
les
mov
xchg
mov
add
int3
adc
mov
movsb
push
cmp
jo
sub
stos
dec
jp
mov
push
loope
push
sub
xor
das
mov
fcom
js
sbb
xchg
mov
and
adc
mov
jg
je
scas
pop
ja
mov
test
push
fwait
shll
adc
cmpsb
clc
das
mov
mov
lock
inc
or
pusha
lcall
and
xchg
mov
push
hlt
ljmp
cltd
in
and
stc
dec
add
mov
loopne
bound
mov
cmc
iret
rcll
add
movsb
scas
insb
fcomi
lea
movsl
jbe
das
jecxz
adc
rcr
mov
lret
mov
push
xchg
scas
in
pop
xchg
or
lock
cmp
enter
movsb
pop
cs
mov
pop
dec
lret
lea
ror
push
and
lds
jmp
mov
cmpsb
xor
shl
ret
rcr
ss
scas
push
lret
jmp
pusha
sbb
add
fldcw
aas
xor
or
daa
mov
push
lock
inc
cld
jae
movsl
xchg
and
loop
xchg
fsubs
jge
in
jo
pusha
add
lods
jmp
into
xchg
sti
insl
rorl
pop
push
clc
dec
or
xor
aaa
adcl
push
lret
in
out
subl
out
push
pushf
popf
sub
stos
xorb
inc
mov
mov
rorl
adc
in
and
mov
sub
sbb
adc
cld
mov
div
xlat
enter
add
lods
mov
insb
pop
enter
push
das
jo
push
jmp
cmp
xor
cwtl
push
int
idivb
and
adc
dec
jge
mov
inc
jae
dec
add
fwait
push
push
xchg
loope
or
dec
insl
call
fsts
out
mov
ljmp
ret
imul
mov
enter
arpl
jmp
inc
mov
lods
cmc
pop
cmp
push
sub
cld
lret
adc
adc
cmp
mov
outsb
dec
and
pop
mov
dec
xor
jl
or
mov
mov
cmp
xchg
push
xlat
stos
fldenv
mov
aam
dec
jmp
jb
aam
iret
push
add
stc
les
xor
xor
inc
jb
mov
adc
push
push
mov
sarb
mov
mov
mov
pop
aaa
out
ret
ja
xor
mov
cmp
sub
xchg
push
outsb
xor
mov
mov
jbe
xchg
mov
test
arpl
add
lret
aad
cs
or
inc
mov
push
mov
pop
jge
xor
fwait
loope
out
fsubs
aad
lock
sbb
adcb
out
sbb
cmp
cmp
cmp
imul
daa
in
mov
pop
inc
aad
pop
sub
inc
adc
xor
cld
mul
clc
in
jne
cmp
cwtl
mov
fstl
inc
lret
lahf
jge
mov
pop
jbe
sbb
pop
sub
inc
popa
add
loopne
lea
pop
cld
js
outsb
inc
cmc
push
je
mov
imull
imul
sar
jb
jo
add
sub
jno
cltd
aad
push
xchg
mov
push
loopne
sub
push
sti
cld
sub
xor
push
bound
jbe
clc
movd
ud0
ja
pop
js
jmp
mov
faddl
push
adc
xchg
lea
shll
xor
cmp
pop
lea
stc
xor
xchg
inc
jb
imull
ljmp
cwtl
mov
or
lea
popf
lea
pmaxub
js
dec
mov
cmp
fisubl
out
pop
test
jo
push
pop
mull
mov
push
fldl
scas
enter
xor
rcll
mov
clc
fistpll
xchg
aad
cmpsl
sbb
pop
inc
add
fidivl
rol
fcmovu
sbb
cmp
sub
mov
sbb
mov
insl
pop
pop
out
leave
fwait
pop
in
push
fwait
iret
fistps
repz
aad
dec
xor
lret
add
jno
lahf
cld
add
stos
stc
pop
jge
int3
aad
or
cmp
or
rcl
lcall
stos
loopne
mov
sub
sub
aad
scas
push
cmp
lcall
adc
adc
lcall
pushf
mov
pop
cmp
in
enter
into
sub
xor
mov
and
out
pop
sub
fidivrl
jp
mov
ret
jnp
ret
push
ficomps
adc
adc
divl
aas
xchg
and
gs
or
scas
jp
sahf
pop
jnp
sub
jle
adc
mov
cltd
fucomp
cltd
and
icebp
test
mov
test
test
mov
subl
rcll
rorl
data16
aam
mov
rep
lgs
es
fisttps
test
cltd
xchg
mov
cltd
test
dec
push
es
jge
cmp
push
mov
sbb
mov
jns
sub
dec
ss
outsl
mov
lock
cld
lahf
push
cmp
int3
in
xchg
pop
xlat
dec
inc
lods
mov
sbbl
inc
dec
xchg
dec
jno
clc
mov
int3
push
pop
hlt
cmp
ds
rclb
xchg
push
test
stos
adc
push
add
in
sbb
aad
fbstp
addl
pop
mov
pop
mov
push
cmp
dec
jo
and
sub
into
in
add
ljmp
cmp
add
mov
enter
xor
ret
pop
aam
imul
das
addr16
lretw
add
shll
sub
inc
pop
sahf
mov
lcall
out
push
sbb
cwtl
dec
push
push
push
inc
ret
add
scas
les
int3
xor
stc
mov
in
adc
bound
dec
sbb
sbb
out
fdiv
cmp
xchg
push
lods
jp
pop
pusha
sub
jl
lret
adc
out
sbb
xor
adc
fisttps
fdivp
jmp
repnz
xor
adc
rorb
sub
clc
cwtl
in
outsl
xor
sub
pop
add
ljmp
jle
fwait
cmpsl
inc
xor
inc
repz
stos
into
pop
mov
mov
sbb
subb
filds
out
out
cmp
in
inc
ret
xor
push
pusha
int
jge
sbb
shl
test
inc
mov
lods
xor
out
enter
lret
lds
mov
fsub
dec
inc
push
mov
sbb
xchg
fistpl
and
adc
fisubrl
aaa
out
hlt
fisttps
enter
cmc
insl
push
into
nop
adc
xchg
sub
imul
and
and
and
pop
dec
jle
push
mov
and
int
ffreep
mov
cs
or
shl
rcrb
mov
andl
jge
popf
adc
push
adc
cmp
and
lret
inc
mov
andl
lret
push
mov
in
dec
jns
xor
pushf
inc
add
insb
dec
mov
aam
mov
in
cld
pop
or
add
jo
icebp
add
jo
cmp
outsl
adc
call
push
jmp
cmp
dec
mov
lret
pop
mov
mov
mov
scas
jg
pop
mov
dec
jo
dec
xchg
push
push
and
dec
mov
bound
fcoms
add
shrl
mov
and
adc
lahf
test
cmpsl
inc
pop
sti
rcrl
ljmp
outsl
xor
xchg
mov
push
aaa
sahf
fucomi
cmp
imul
mov
stc
inc
cmpsl
cld
mov
dec
loopne
add
and
sub
and
xchg
cmp
pop
insl
cmpsb
dec
popa
inc
lret
cmp
mov
fmul
fcoms
dec
sub
jnp
xor
sbb
push
aad
insb
aad
inc
sbb
or
into
and
or
stos
jp
in
shll
sbb
dec
movsl
cmp
push
lods
mov
fsubs
xchg
lock
push
repnz
stos
inc
jae
push
mov
in
inc
inc
cmc
clc
fwait
xchg
sub
jne
or
fwait
xchg
add
jl
pusha
lret
adc
jmp
mov
sti
jmp
xchg
fwait
push
or
ret
xor
add
mov
insl
icebp
pusha
popa
out
sub
clc
lds
dec
rcll
in
or
jecxz
outsb
or
cld
jbe
adcb
jl
sbbb
mov
aam
arpl
sbb
fstpl
addr16
sub
or
mov
arpl
push
cltd
es
or
cvtpi2ps
mov
cli
sbb
ficoml
insl
movsl
test
mov
shl
loopne
movsl
cmpsb
stos
shll
lahf
mov
xchg
adc
jge
push
sbb
or
dec
jb
sti
jmp
mov
mov
jb
ret
adc
enter
test
add
iret
push
mov
arpl
scas
pushl
addr16
sti
push
jmp
sub
xor
inc
cmp
add
push
out
cmp
stos
outsb
pop
movsl
cmp
sti
out
in
ljmp
movsb
cltd
fdivrl
scas
pop
xor
lds
push
adc
add
lock
xor
cwtl
xor
and
je
mov
xchg
imulb
shrd
add
ds
je
push
cmp
cmp
jecxz
roll
in
repz
push
push
loope
stc
lahf
pop
jns
test
out
jne
and
xchg
inc
or
icebp
dec
mov
mov
mov
push
xor
cmc
fmuls
pop
fsubrl
imulb
push
push
mov
xchg
pop
cwtl
cmp
pop
scas
inc
jge
xor
xlat
call
jge
mov
or
aam
cld
add
jp
rcll
push
out
push
shrb
push
stos
push
gs
push
shl
pop
dec
xor
dec
into
mov
cmpsl
arpl
imul
loope
and
iret
loopne
pop
mov
cmc
insb
sti
mov
lods
iretw
imul
jne
scas
sbb
xor
mov
inc
and
and
jp
daa
cmpsb
out
jecxz
mov
pop
jb
jb
test
insl
adc
dec
jmp
xchg
add
mov
mov
mov
sub
pushf
push
add
fcompl
jmp
sbb
ja
ficomps
xchg
xchg
jnp
in
leave
imul
sbb
push
mov
shll
dec
adc
inc
mov
push
es
cmpsl
mov
cmp
adc
xor
xor
push
and
cmp
cmp
and
xchg
das
clc
push
xor
popf
and
arpl
mov
jbe
jbe
xor
divl
aas
sbb
orb
mov
int
push
add
and
outsb
push
orl
cmp
add
push
mov
sub
fnsave
sub
pop
das
xchg
sti
fs
mov
imul
xlat
fwait
mov
jg
sub
mov
sub
adc
sub
sub
sbb
in
nop
mov
notl
pop
lahf
ljmp
ftst
cld
mov
mov
mov
pop
movsb
push
mov
std
jmp
loopne
outsl
inc
and
inc
cmp
xchg
je
xchg
cmp
or
pop
dec
mov
inc
pop
fwait
cmpsl
lods
cmpsl
sub
cmpsl
je
stos
inc
outsl
in
add
fwait
pusha
xor
pop
mov
xchg
push
xchg
nop
gs
mov
push
stc
jo
pop
push
das
push
add
mov
inc
imul
inc
jp
sbb
lcall
orl
push
data16
jge
rcrl
imul
fnstenv
jecxz
test
test
fwait
roll
in
sbb
lock
enter
in
and
mov
loop
stos
in
adc
cmp
push
cmp
les
clc
sbb
xchg
jg
or
outsb
xor
lods
sbb
rcll
dec
mov
shl
add
fwait
rol
lahf
repz
mov
aam
mov
pop
sbbb
mov
popa
aad
test
dec
push
aad
push
mov
or
xchg
leave
std
cmc
mov
push
mov
mov
mov
xor
bound
jmp
sub
fwait
ljmp
jg
jnp
bound
jno
addr16
sbb
push
mov
mov
sbb
inc
push
in
pusha
mov
fsubrl
dec
cwtl
imul
mov
das
adc
push
add
or
aaa
ja
sub
cltd
adc
jne
mov
shlb
push
rcrb
enter
mov
push
jnp
sbb
loop
frstor
and
in
xorl
clc
pop
jae
jmp
les
sub
mov
xlat
and
ror
stos
lcall
xchg
icebp
aas
mov
xchg
lret
adc
shrb
aas
clc
fs
pop
and
sub
shr
sbb
mov
inc
in
or
jae
addb
and
insl
mov
int
pop
inc
sarl
sub
mov
or
out
mov
pop
sti
out
add
push
stc
pop
or
in
pop
sbb
ljmp
movsb
stc
ds
sbb
xor
xchg
jge
lcall
sahf
xchg
mov
xor
dec
ret
cwtl
sub
in
ret
pop
adc
mov
jg
mov
inc
push
or
xchg
mov
inc
hlt
flds
jmp
mov
aas
leave
cltd
ds
bound
jno
mov
cmc
ljmp
imul
pop
dec
shll
jbe
out
call
jno
cmpsl
sub
pop
adc
aaa
cmpsl
cvtdq2ps
dec
sbb
sbb
movsl
fs
mov
rorb
ret
and
in
aam
ss
add
xlat
and
iret
push
dec
ds
sbb
xor
push
jecxz
stos
adc
mov
fsubrl
cld
arpl
call
inc
push
inc
out
inc
aaa
ja
rorb
js
icebp
and
pop
mov
jns
loope
pushl
fcompl
mov
mov
and
loopne
cmp
leave
call
push
dec
out
adc
cmpsl
cmp
imul
in
clc
in
sbb
mov
imul
test
lods
aaa
push
mov
mov
std
add
mov
mov
fcomps
lcall
jge
cmpsl
or
hlt
daa
adc
rorl
sbb
lea
cmp
testl
and
inc
and
sbb
mov
imul
jp
in
es
loopne
dec
fdivs
adc
mov
icebp
stos
movsb
xchg
lret
inc
lret
mov
in
scas
or
mov
add
and
sbb
jecxz
repnz
jae
push
stos
fildll
das
nop
dec
lods
dec
pushl
lea
fistps
inc
mov
enter
push
stos
imul
call
mov
xor
out
push
frstor
outsb
sbb
dec
pop
mov
lret
test
jno
stc
jmp
push
cmpsb
xchg
and
mov
pop
mov
rcl
pop
cmp
cmp
test
ret
outsb
push
xchg
stos
aaa
lds
push
xor
cmp
pop
mov
jae
aas
call
add
sbb
or
xchg
or
aam
repz
sar
jo
xchg
mov
mov
mov
inc
xor
fldenv
add
xchg
std
sbb
out
lods
jg
ss
loopne
adc
clc
inc
pop
xchg
or
mov
popl
test
mov
inc
mov
and
mov
push
mov
lret
pop
imull
clc
jge
imul
test
add
cmpsw
pop
test
jmp
insl
lods
xchg
lock
pop
add
movsl
fcomp
pop
adc
cli
scas
sbb
sub
scas
sti
and
add
jnp
popf
and
pusha
push
in
cmpsb
xor
cmpsb
add
cmp
sbb
jp
mov
movsl
push
pushf
mov
or
push
fsubrs
pop
xchg
leave
out
cwtl
or
mov
xchg
adc
pop
sub
addr16
or
data16
test
aam
pop
mov
or
dec
mov
pop
in
mov
ljmp
xor
imulb
add
stos
xchg
inc
push
mov
add
inc
in
jo
sub
cmp
mov
mov
in
andb
inc
jl
rolb
sbbl
mov
push
pop
popa
mov
jp
dec
pop
mov
movb
outsl
dec
insl
test
or
aas
xchg
xor
pop
loopne
inc
lods
jo
cli
movsb
sub
cmc
fldenv
jbe
pusha
push
loop
mov
mov
pusha
ss
xchg
negb
cmp
or
sub
inc
dec
xlat
push
aam
filds
ror
pop
repz
jnp
call
ret
aad
pop
incb
test
inc
fsubr
das
call
xor
add
in
pop
cmp
mov
add
and
subl
sbb
out
lds
sbb
mov
shll
popf
ds
test
lret
jp
add
or
mov
and
lock
sbb
or
fcoms
cld
iret
jae
shlb
imul
push
fmul
mov
mov
add
dec
add
das
fcomps
push
in
das
sbb
int
add
or
mov
sub
fucomip
test
arpl
sub
sbb
repz
fildl
sbb
push
cmp
or
cmp
jl
fcmove
cld
ljmp
xchg
fidivl
lods
and
xchg
sub
add
sbb
popa
jg
cmp
cmp
push
lds
lahf
cmpsb
ja
inc
jg
mov
lods
test
je
mov
imul
fmuls
iret
dec
and
xchg
jle
or
xchg
xchg
insb
xchg
pusha
xor
hlt
jge
pop
xchg
mov
aad
xchg
xor
or
repz
xchg
jl
xor
dec
popa
jb
cmp
data16
shlb
fmuls
xchg
aam
ljmp
dec
sbbb
adc
bnd
and
ret
ficoms
and
imul
and
dec
push
out
les
mov
in
xor
pusha
xor
mov
mov
or
mov
pop
xchg
inc
flds
push
add
xchg
lahf
and
daa
bound
push
push
mov
mov
popf
jl
pop
sbb
rclb
dec
jae
js
les
fisubl
dec
cmp
rclb
mov
cmpsl
mov
mov
out
push
cmp
jecxz
in
pop
js
mov
cld
popa
fs
xor
jno
sub
out
repnz
in
cmp
inc
push
xchg
jle
and
mov
imulb
aas
out
cmpsb
mov
or
mov
pop
and
lods
inc
ljmp
or
sar
add
inc
dec
jp
loope
insl
inc
loopne
outsl
decl
mov
and
hlt
ja
ljmp
xor
callw
mov
insb
and
add
jns
mov
adc
into
imul
adc
mov
in
mov
testb
xor
adc
push
bound
into
cmp
nop
scas
nop
aas
jmp
icebp
out
add
push
xchg
and
in
pop
leave
test
fnstenv
lea
int
outsb
ljmp
push
ret
xchg
pop
sbb
bnd
mov
lcall
cmp
or
or
sahf
lea
mov
pushf
sbb
xor
lahf
scas
and
mov
popa
mulps
in
hlt
and
and
test
pop
push
lret
std
mov
sub
adc
mov
fisubs
ja
mov
loop
loope
pop
pop
and
or
fisubs
stos
adc
les
hlt
ja
pop
pop
notb
mov
nop
rcr
xor
xlat
cmc
push
mov
mov
mov
fidivl
sti
fsubrl
sbb
mov
int
pop
lret
icebp
cmp
outsl
or
or
cmc
jecxz
ljmp
js
or
mov
ja
stos
addr16
push
mov
mov
lds
or
push
gs
xlat
popf
sub
test
lcall
insl
sub
sbb
leave
cmpsl
push
loope
stos
inc
sub
rcrb
aad
sahf
add
ja
out
or
push
leave
sub
lods
call
push
xchg
pushl
lods
imul
sbb
mov
and
sbb
call
sbb
int3
push
cltd
lcall
hlt
xchg
mov
jle
out
call
cmp
cmpsb
mov
sbb
mov
movsl
xor
jmp
dec
mov
fwait
push
push
nop
pop
inc
data16
std
add
popw
arpl
shrb
aas
insb
fcom
push
scas
fwait
dec
and
push
sub
or
leave
cmpsl
inc
dec
pushf
dec
outsl
dec
lret
jge
lods
daa
push
and
inc
cld
jnp
inc
cld
jbe
dec
dec
rcl
cmp
and
fcoml
mov
or
cmp
sub
fadds
in
pop
push
out
add
loop
mov
out
cmp
js
je
sub
loop
mov
xchg
xchg
xor
pop
incb
adc
stos
pop
outsb
negb
pop
mov
adc
xchg
movsl
jns
push
lea
cli
daa
shlb
pop
loopne
cmp
idiv
fstps
and
pop
in
aaa
lea
jne
fimull
jge
xchg
xchg
jnp
jge
aad
sbb
loopne
push
xor
mov
shr
daa
mov
sub
cmp
cmp
mov
mov
jl
xor
roll
repnz
gs
pop
cwtl
lods
push
movsl
pop
sbb
in
sub
dec
in
in
arpl
mov
adc
fcomp
and
pop
or
mov
mov
mov
cmc
inc
sbb
pop
out
loop
sahf
dec
cld
mulb
push
jecxz
and
and
cmpsb
pop
in
xchg
xchg
sbb
sbb
pop
cmp
xchg
jecxz
sub
sbb
stos
std
in
cwtl
push
fstl
in
push
pop
cmp
cmp
add
pop
or
sbb
js,pt
push
or
push
sub
or
fsubrl
jg
sub
dec
pop
inc
cmc
loopne
inc
call
aam
fdivl
int
dec
arpl
pushf
shrl
aas
add
inc
mov
xchg
push
in
mov
push
nop
mov
out
test
jmp
jnp
mov
dec
push
shll
add
fcoml
loop
add
je
sub
int3
shl
xchg
lahf
subb
mov
or
inc
pop
mov
stos
xor
in
stos
mov
loopne
jno
push
jge
mov
lcall
test
push
xor
test
mov
rol
fdivrp
jecxz
pop
jne
lcall
or
jmp
popf
sti
cli
mov
pop
cli
fisttpl
ret
adc
dec
xor
and
popf
cmp
je
cwtl
cmp
push
lock
js
clc
cld
repnz
imul
es
lock
add
scas
adc
inc
imul
mov
and
fisttps
mov
insb
push
out
loope
mov
les
test
mov
mov
inc
cld
rcl
ret
cmpsb
cld
xor
insb
testl
cltd
fisubl
enter
inc
inc
or
mov
sub
sub
and
or
aad
xchg
adc
xchg
adc
into
ret
mov
or
shlb
repnz
jne
in
inc
mov
add
or
dec
cld
or
in
xchg
dec
sub
lret
inc
nop
sub
dec
adc
cmp
daa
xchg
movsl
add
icebp
addl
jecxz
popa
cmovb
bound
jmp
arpl
pop
or
inc
mov
and
fistl
test
xchg
sbb
cmpsl
mov
test
ficoml
push
loop
lds
idivl
jge
dec
mov
cmp
or
cmp
icebp
movsb
jmp
shl
in
cmp
jnp
sub
fmuls
loopne
out
cltd
in
mov
jp
inc
xchg
or
loop
sbb
mov
aam
and
int3
or
leave
insl
xchg
outsb
pop
sbb
daa
ret
cwtl
cmc
fcmove
mov
cmp
cmp
add
jmp
mov
lods
push
in
lret
mov
test
repnz
ret
push
js
jge
inc
mov
add
gs
rcrl
loope
push
dec
push
mov
mov
adc
jbe
pop
ds
sbb
dec
sub
scas
in
pop
add
test
inc
sbb
push
cli
aaa
test
loop
or
jmp
shl
xor
xchg
adc
inc
pop
nop
dec
push
xor
lahf
jg
push
lret
aas
sub
sbb
push
bound
repnz
ds
leave
mov
das
loopne
adc
add
in
aaa
push
inc
pop
cmc
or
repnz
add
cmp
in
inc
push
jns
cmp
jecxz
cmp
loop
outsl
insb
bound
addr16
push
out
and
das
mov
adc
inc
daa
mov
pop
adc
jle
xor
int3
int
mov
pop
push
jb
add
stc
xlat
adc
scas
rol
pop
xor
ror
push
outsb
data16
out
fisubl
lret
mov
out
inc
dec
sti
mov
xchg
pop
sub
idivb
fmul
stos
cmp
mov
mov
jmp
add
lcall
fldl
test
loope
lods
xlat
sbb
je
push
arpl
dec
push
scas
test
xor
push
sahf
int3
cmp
mov
data16
sub
aaa
inc
xchg
scas
jmp
pop
movsb
fwait
insb
xchg
or
pop
popf
cltd
sar
mov
add
stc
insl
test
vprotw
sbb
mov
iret
jmp
push
divb
mov
and
push
xlat
mov
dec
jb
cmp
out
cs
into
xchg
mov
cltd
dec
push
out
imul
xchg
adc
or
icebp
mov
sbb
or
out
in
push
sbbl
cmp
out
popa
loopne
cmp
inc
lret
jo
loop
inc
pop
sbb
cmc
mov
pusha
cs
fisttpl
cmp
mov
ret
out
pop
add
mov
mov
pop
jnp
lret
insb
je
xlat
loopne
fists
push
push
xor
stc
jb
mov
and
dec
in
cli
add
mov
cmp
sub
mov
shl
jg
subb
sbb
in
mov
and
loope
pop
call
sub
fs
pop
mov
rclb
mov
inc
insl
xor
int
lock
cmp
xor
je
movsb
pop
and
in
inc
xor
roll
movsb
cmpsl
and
and
xchg
imul
xchg
lcall
flds
cmc
lahf
push
rclb
sti
cwtl
mov
jecxz
add
nop
add
dec
cmpsl
dec
mov
add
fstl
push
out
movsb
xor
and
leave
aaa
dec
xor
inc
out
and
outsb
xchg
je
inc
mov
push
iret
lcall
stos
pop
js
sub
jb
push
xchg
xchg
lahf
les
iret
lock
outsb
test
stc
icebp
testl
xchg
lahf
js
loope
ljmp
in
sahf
icebp
push
subl
iret
movsb
dec
mov
sbb
jmp
xor
cmc
inc
push
je
sar
jbe
sbb
pop
shll
push
std
mov
add
dec
insl
sti
jo
pop
add
adc
in
cltd
inc
push
sub
mov
mov
ljmp
addl
lahf
inc
add
aas
std
mov
movsb
or
in
sti
or
inc
jge
repz
hlt
sbb
mov
fisttpl
cmc
sbb
xorl
push
mov
mov
mov
sbb
test
sbbb
in
pushf
data16
cmc
std
out
xchg
loop
xchg
cmc
ds
mov
mov
and
gs
add
divl
jo
and
fnsave
and
add
roll
adc
rcll
jg
mov
add
dec
mov
inc
push
and
shlb
mov
cmpl
adc
add
shll
adc
push
shlb
mov
push
sbb
push
lahf
xchg
ljmp
or
xchg
out
mov
push
xchg
xchg
out
mov
inc
push
jb
fdivp
icebp
popa
jbe
mov
lahf
jnp
test
es
push
push
call
test
clc
lock
sbb
sub
adc
cmpsb
cltd
and
sbb
or
icebp
in
repnz
or
int
adc
fs
pushf
dec
xchg
xchg
push
dec
mov
jb
xchg
iret
jnp
jg
inc
mov
fstpl
dec
or
out
pop
movl
jb
xchg
daa
in
pop
out
xor
mov
sbb
sar
dec
gs
push
and
iret
testb
and
push
push
xor
cmp
sbb
in
push
loopne
idivl
and
fisttpl
sarl
cmp
in
cli
into
push
dec
cmp
gs
inc
jmp
test
cmp
adcb
dec
sub
adc
int
std
insl
cmp
aam
pop
xchg
aas
fimuls
sbb
push
repz
in
xor
pcmpeqd
pop
hlt
lcall
xchg
xlat
mov
mov
orb
mov
mov
das
loop
lea
jns
outsb
in
dec
scas
pushf
adc
dec
subb
cmp
jp
pop
pop
subb
lock
xlat
mov
lret
push
ja
lea
xor
mov
add
push
stc
sbb
add
mov
cmc
push
sbb
jb
repz
je
lret
icebp
bound
out
pop
sti
pushf
add
lock
insl
insl
je
lods
dec
inc
scas
jb
xchg
loopne
repz
enter
out
add
lock
xlat
lods
cmp
sbb
dec
mov
xor
cmp
jb
pusha
push
and
lcall
and
mov
pop
sbb
loope
fldenv
insl
mov
xchg
lods
push
fnstenv
pop
xchg
inc
or
imul
mov
fisubrl
in
rclb
jge
sahf
xchg
and
push
ja
xchg
jne
into
jo
dec
popa
xchg
pop
adc
xor
mov
pop
rorl
or
xchg
in
in
ds
jl
aaa
and
cmp
dec
mov
loopne
cmp
mov
gs
dec
lock
cmp
daa
aam
xchg
nop
nop
std
mov
out
push
pop
js
mov
cmp
adc
mov
dec
cli
loope
imul
sbb
inc
pop
add
div
imul
sub
out
and
test
cmp
add
push
les
lcall
addr16
sbb
hlt
cmp
ja
dec
lods
jne
and
test
jne
lret
or
data16
mov
fidivrs
cmp
mov
xor
pushf
dec
mov
scas
fstpt
shr
out
pusha
in
fstpt
jle
dec
stc
mov
cltd
dec
ja
lds
popa
sbbl
jns
add
jle
sub
lahf
jle
aas
jl
sub
and
dec
fchs
aad
out
mov
xchg
xor
and
add
jmp
cld
or
sub
jne
faddl
lock
scas
and
jecxz
daa
jmp
pop
aas
add
push
mov
pop
aas
js
xor
stc
push
mov
sbb
out
sbb
mov
daa
sub
popa
jb
imul
aas
lods
mov
daa
es
popl
push
in
imul
mov
dec
jmp
push
pop
fidivrl
movsb
xlat
xor
aaa
insb
addr16
nop
mov
dec
cmp
std
outsb
xor
out
pushf
stc
jbe
jmp
mov
ss
repnz
pop
ds
jbe
adc
psubsb
jl
aam
sti
sarb
fdivrl
inc
mov
pop
and
pop
jae
call
xor
mov
jae
adc
andb
test
sbb
int
sbb
adc
jns
mov
push
ss
arpl
cmc
mov
and
pop
xchg
pop
jo
xchg
push
gs
je
daa
xchg
test
clc
adc
cmp
sub
or
xor
sbb
out
pop
lret
mov
arpl
sub
jle
pop
jnp
test
jecxz
or
sub
xchg
adc
rclb
aam
mov
out
jo
lret
loopne
inc
pop
dec
pop
mov
push
add
jg
mov
icebp
mov
and
xchg
popa
testl
add
push
adc
mov
mov
ret
dec
pop
ficoml
into
jo
into
mov
jle
lcall
mov
mov
pop
cwtl
scas
jle
into
sbb
push
das
lret
xchg
fsts
ja
das
aam
mov
mov
popf
pop
aas
mov
push
je
xchg
pushf
icebp
sbb
mov
mov
test
stc
jl
xchg
sbb
cs
stos
popa
shrb
push
ss
outsl
out
pushf
jne
and
xchg
cmpsl
sbb
popa
dec
mov
hlt
xor
shrb
push
in
and
dec
sbb
clc
sub
adc
mov
pop
lods
in
mov
hlt
push
iret
inc
cmpsb
cmpsb
push
pop
and
or
dec
lods
xchg
push
pop
arpl
int3
sbb
das
imul
jmp
int
cmp
xor
adcl
xchg
iret
andb
push
arpl
imul
sub
lock
mov
mov
push
jmp
xlat
lods
scas
lods
cltd
shr
ja
ja
mov
cmp
aad
das
pop
aaa
pop
dec
push
test
mov
add
outsl
dec
jmp
sub
hlt
imul
mov
add
ss
mov
jne
sbb
inc
pop
sbb
xchg
mov
das
iret
cmpsb
insl
outsl
jle
adc
jle
and
add
add
int3
arpl
push
jp
in
es
mov
pop
ss
ret
mov
fistpl
adc
xor
arpl
adc
out
cltd
cmp
aad
test
insl
aas
jmp
mov
jae
lods
imul
adc
mov
push
inc
sbb
push
shl
mov
int3
movsl
mov
sbb
pop
fildl
jle
sub
mov
xor
mov
filds
mov
sti
sbb
scas
push
xchg
cld
fmul
mov
mov
outsb
mov
add
dec
fstl
cmp
decb
sub
xor
lret
sub
adc
daa
push
cltd
sbb
test
jb
or
xchg
push
sarl
fmull
sahf
or
push
and
cmpl
pop
iret
ljmp
pop
movsl
jmp
xchg
cltd
ljmp
dec
rcrb
insb
ds
jne
loop
and
lods
aam
pushl
scas
jae
sets
adc
dec
cmp
repz
inc
pop
cmpsb
sti
js
inc
push
xor
je
sbb
lret
cmp
call
testb
jmp
cmp
pop
dec
mov
popa
das
movsb
mov
xor
rcll
es
xor
fwait
insl
sub
stos
insb
push
mov
mov
inc
jg
xchg
inc
sub
pushf
mov
sub
mov
pop
pop
adc
lret
xor
ss
movsb
dec
leave
sbb
add
and
jns
into
jge
subb
ja
sub
xlat
test
jle
xchg
mov
push
xlat
xchg
add
fwait
loopne
fldenv
push
pushl
or
into
das
jg
add
in
aas
mov
scas
mov
pop
xchg
das
or
stos
iret
sub
inc
inc
xlat
arpl
cmc
inc
out
inc
test
pusha
xorl
pop
sbb
mov
cmpsl
inc
stos
xchg
repnz
or
cwtl
fwait
stos
repnz
daa
pop
adc
and
dec
or
andl
movsb
icebp
dec
insl
jae
cwtl
jb
pop
mov
fwait
lock
arpl
xchg
enter
insb
xchg
in
jecxz
mov
mov
xlat
inc
shrb
inc
and
call
pop
aaa
xor
pop
filds
xchg
mov
test
cli
shll
pop
in
in
pop
lock
in
inc
shll
adc
popa
repz
nop
shll
mov
add
repz
mov
insl
ss
sub
shll
or
add
jg
xor
xlat
mov
push
dec
add
sbb
mov
addr16
add
push
xchg
dec
dec
pushf
mov
in
out
in
es
sti
cmp
int
cli
iret
sub
cmpsl
cmpsb
sbb
daa
faddl
mov
mov
mov
mov
cmp
jo
ljmp
xlat
adc
push
cwtl
push
jns
sub
jns
dec
sbb
lret
std
xchg
scas
dec
pop
scas
test
je
cmp
int
adc
sbbb
stos
xor
mov
popa
call
cmpsb
adc
and
scas
xor
imull
int
pop
xlat
add
daa
push
negb
cmp
or
xchg
push
sub
cwtl
mov
mov
xor
mov
lret
mov
stc
sub
add
ret
test
ss
in
cli
lret
nop
jmp
and
xlat
fistpll
cmpsb
cmp
push
adc
cltd
mov
int3
mov
cmp
cmp
rol
xchg
sbb
mov
fdivs
cmp
mov
xor
fs
data16
dec
mov
int
ljmp
ljmp
pop
xor
insb
js
cwtl
repz
lret
dec
xchg
adc
sub
shl
ret
out
in
insb
jno
push
out
popa
push
push
adc
dec
pop
iret
mov
repnz
xlat
adc
jb
or
jle
cmp
sbb
cltd
and
cli
adc
shll
inc
dec
clc
outsl
jle
mov
mov
xor
pop
push
push
test
sbb
ret
into
and
sbb
jae
out
jmp
loope
lods
mov
lret
gs
inc
jp
int3
shrb
pop
sbb
xchg
popf
pop
mov
push
cltd
adc
loope
fnstsw
lods
xchg
add
xchg
adc
test
lods
add
jnp
mov
xor
jno
es
xchg
sbb
inc
js
rorb
cld
pop
xchg
fwait
ret
je
popf
roll
pop
es
add
in
fistl
inc
testb
lahf
xchg
jmp
add
mov
cmp
aaa
mov
cmp
cmp
push
push
add
sub
jbe
add
movsb
and
push
insb
xchg
mov
mov
inc
test
add
lahf
dec
sbb
pop
popa
jp
fsubl
mov
jb
mov
aaa
pop
pusha
xchg
jns
test
dec
repnz
popl
lcall
xor
pop
push
mov
test
xchg
fmull
dec
push
jo
cmp
outsl
push
and
mov
les
push
mov
ljmp
popf
scas
jbe
xor
dec
or
push
or
xor
cmp
movsb
push
dec
mov
mull
cmpsb
sbb
cmpb
or
xchg
dec
mov
mov
mov
imul
subb
pop
jno
ror
dec
jne
lret
mov
fst
xchg
faddl
push
mov
enter
and
fistpll
add
outsl
lea
xchg
sub
mov
lods
adc
mov
sub
out
sub
push
xchg
pop
rolb
mov
xor
imul
dec
scas
mov
xchg
imul
push
nop
adc
nop
negb
lcall
pusha
dec
in
aad
or
dec
lahf
shlb
aas
inc
sbb
call
testl
mov
or
sub
js
jg
loop
mov
aas
rcll
xorb
or
enter
cmp
mov
mov
push
cmp
xor
add
and
xchg
insb
lock
pushl
lahf
lds
pop
cmpsl
or
leave
xor
push
inc
repz
jo
and
test
adc
lock
lret
mov
adc
cli
sub
jb
xor
es
imul
iret
stc
imul
mov
sbb
xor
mov
adc
cli
in
cltd
dec
xor
daa
test
out
sub
inc
jp
les
pop
mov
data16
cli
jb
std
pushf
lahf
add
inc
pop
clc
cs
std
lods
adc
xchg
test
dec
aad
mov
ljmp
icebp
les
xchg
testl
xchg
push
xchg
lahf
outsb
sbb
sahf
push
dec
cs
or
push
out
movsb
jg
mov
or
lods
mov
and
jne
jo
cwtl
mov
loopne
xchg
sbb
push
xchg
test
data16
sub
hlt
mov
inc
gs
sub
lds
sahf
inc
xchg
mov
rorb
outsl
jp
insl
sarl
sub
cmpsb
lahf
arpl
xor
repnz
jl
mov
mov
icebp
xchg
cmpsb
pop
mov
adc
and
jo
test
push
lcall
jecxz
fstl
outsl
mov
nop
idiv
movsl
gs
pop
lahf
mov
ss
jg
fldln2
daa
out
push
dec
or
and
jno
out
dec
inc
stos
mov
add
rclb
jne
adcb
pop
fsubl
stos
pusha
inc
sbb
lods
jecxz
mov
adc
mov
mov
mov
push
out
xchg
in
mov
inc
mov
push
jb
test
push
scas
sti
ja
jmp
sub
fstpl
call
shlb
fiaddl
gs
repz
push
insl
dec
xor
les
lsl
cmpsl
out
adcb
and
xchg
pop
in
stos
pop
xchg
jb,pt
mov
mov
sbb
outsl
push
ja
in
push
mov
shll
lcall
jne
adc
ret
pushl
pop
lret
loope
daa
cwtl
xchg
cwtl
call
arpl
shlb
sbb
int
hlt
cmpsl
mov
iret
jae
sub
out
out
idiv
pop
and
inc
add
push
push
xchg
enter
jbe
inc
ss
jno
dec
jge
test
out
shl
push
adc
dec
and
inc
lcall
pop
or
push
fisubrl
roll
ljmp
sarb
ss
movsb
adc
ja
jecxz
clc
inc
fidivs
ja
movsb
pop
xchg
xchg
mov
pop
mov
movsb
jns
sub
inc
icebp
push
movsl
fldcw
in
ljmp
rorb
lret
iret
fstps
push
mov
and
in
jno
negb
mov
out
mov
jmp
cs
push
ret
outsb
dec
movsb
mov
xor
sub
jo
repz
xchg
fdivrl
insb
and
mov
out
push
aaa
push
outsl
or
nop
mov
stos
pop
fstl
aam
adc
fidivs
cmp
push
test
and
push
lods
imul
mov
inc
nop
movsl
mov
pop
jno
ret
test
pusha
sti
sbb
pushf
or
fcomp
jno
push
iret
inc
arpl
aaa
inc
test
scas
stc
and
outsl
pop
cltd
lock
outsl
adc
bound
dec
mov
stos
xchg
xchg
xor
jno
out
mov
je
push
xor
push
cmp
pop
in
jp
dec
push
stos
mov
and
mov
std
pop
imul
jae
bnd
adc
push
imul
lret
jmp
xchg
fadds
mov
outsl
clts
dec
push
enter
cltd
test
idivb
pushf
pop
push
mov
adc
subb
dec
shrl
or
test
dec
and
daa
es
adc
inc
js
test
into
mov
stc
dec
inc
das
or
xchg
add
dec
das
jg
and
or
push
adc
nop
sub
adc
and
push
xor
mov
sub
popa
add
incb
jae
shl
popf
es
jmp
stos
cmp
xlat
cmpsb
dec
jle
rorl
popf
movsb
into
mov
scas
inc
int
out
pusha
stc
outsb
mov
sbb
test
adc
add
movsl
push
int
adc
fildll
clc
jmp
das
mov
sbb
push
imul
fmul
cmp
xchg
mov
idivb
jne
lods
insb
inc
jp
test
jecxz
js
cli
ret
mov
push
daa
shrb
fildl
and
mov
mov
mov
fcoml
dec
ret
add
cmpsl
cmp
cmc
or
mov
test
ja
aas
add
sbb
xlat
jo
outsb
aas
and
mov
repz
arpl
push
dec
pop
imul
sbb
push
leave
pop
call
add
jae
inc
stos
insb
movsl
adc
dec
sbb
stos
mov
loopne
adc
insb
loope
pop
das
cmp
jae
push
sbb
sbb
insb
pop
inc
xchg
jmp
pop
les
cltd
xchg
mov
mov
aam
adc
mov
jecxz
subb
adc
inc
fldenv
inc
pop
sbb
ja
rcrl
xchg
imul
scas
xchg
lea
js
mov
xor
mov
fxch
jo
stc
popl
adc
clc
push
into
pusha
pop
dec
dec
and
jp
cli
int
aas
push
ljmp
leave
scas
push
arpl
and
call
cmpw
jle
sbb
mov
fwait
mov
xor
cmp
mov
shr
pop
out
adc
std
icebp
ror
je
roll
dec
adc
imul
push
lret
jg
leave
fdivrl
mov
ficomps
jns
popf
add
jecxz
push
clc
hlt
xor
mov
xor
das
test
sbb
movsl
cmc
inc
test
xchg
mov
aaa
ds
push
xor
movsb
push
sub
shl
add
ljmp
test
push
int
outsb
pop
sbb
sbb
dec
push
clc
sbb
push
sbb
jmp
pop
mov
out
or
cmc
cmpsb
mov
jmp
subb
inc
sub
lret
inc
pusha
testl
not
ffreep
xchg
jae
cs
in
leave
shlb
loopne
fldcw
or
sti
push
es
sbb
aam
jecxz
out
add
add
pusha
lea
repz
fs
rclb
inc
push
and
enter
sbb
mov
aaa
push
xor
inc
xchg
xchg
or
cmp
fwait
dec
addr16
in
mov
push
mov
xor
les
jnp
aam
mov
pop
xor
pop
les
aam
ret
roll
repnz
gs
pop
fsubl
push
xor
sub
jb
out
mov
sbb
mov
adc
xlat
add
out
push
aas
cmp
mov
test
pop
cmp
orl
sub
xchg
mov
inc
cmpsb
push
icebp
inc
sbbl
and
sub
xor
sub
jmp
or
das
aam
jmp
jbe
mov
push
mov
push
lea
pop
inc
lahf
mov
mov
xchg
ljmp
dec
pop
scas
adc
mov
lds
wbinvd
pop
cli
jnp
sbb
repnz
sar
mov
add
das
push
add
and
call
xchg
fistps
into
xchg
or
pusha
sbb
loopne
mov
adc
cmp
pushf
popa
in
out
pop
or
xchg
and
jp
pop
cli
mov
jl
cmp
outsl
mov
xchg
sub
pop
enter
jne
insl
mov
or
fildl
ja
and
jg
xor
cmp
ja
and
jns
stos
mov
cs
dec
cmp
cmp
ror
lock
outsl
lods
sub
jae
sbb
pushf
xchg
jl
scas
into
arpl
jge
pop
dec
mov
pop
addr16
xchg
mov
lods
loop
add
or
jno
std
rcrl
addr16
cmpsb
cld
jae
cmpb
test
je
sbb
jns
dec
in
jmp
xor
lock
xchg
adc
fwait
xchg
loope
sbb
mov
push
in
cmpsb
bound
repz
or
adcl
mov
shll
adc
stos
or
call
fldenv
in
pusha
js
sbb
cmp
insl
sub
pop
repz
outsl
loope
call
push
enter
push
addb
fwait
sub
sub
les
mov
fsubp
mov
arpl
jae
mov
mov
add
jae
in
loope
mov
rcrb
pushf
adc
lods
push
jmp
add
notb
push
xchg
inc
bound
pop
mov
add
push
adc
xchg
mov
jg
outsl
cmp
popf
loope
ficompl
push
cmpsl
aam
mov
js
dec
sbb
sahf
push
cmp
pop
fwait
std
jmp
js
lcall
pop
xor
sbbl
add
sbb
jne
pushf
xor
push
call
or
movsl
inc
and
in
stos
aaa
nop
fnop
es
mov
add
mov
sub
enter
cmp
or
pop
outsb
jnp
pop
adc
push
jb
fwait
mov
sub
mov
je
dec
enter
cmpl
xchg
imul
in
dec
iret
imull
rolb
dec
or
xchg
inc
nop
jb
rcll
cwtl
dec
mov
xchg
or
and
insb
cmp
sbb
in
add
xchg
aam
mov
outsl
pop
sbb
mov
push
gs
mov
lret
out
mov
sub
mov
ffreep
dec
xchg
aam
shl
pop
add
js
scas
mov
cmp
sbb
sub
add
test
sub
les
int
imul
or
int
rcl
xchg
pop
std
jp
or
jnp
lds
cmp
daa
stos
sbb
mov
xchg
ljmp
xchg
sbb
xchg
aas
add
leave
cmp
jge
pop
dec
addr16
push
repnz
cmp
testb
pop
jns
jp
or
aad
xlat
scas
dec
add
scas
or
scas
mov
shrb
xor
out
out
shlb
inc
pop
imul
bound
and
in
jecxz
mov
push
inc
xor
popf
inc
and
stc
cmpsl
add
sub
es
pop
aad
clc
cwtl
xchg
adc
hlt
push
mov
dec
shlb
rcrb
int3
mov
lds
test
ds
out
dec
dec
arpl
xchg
xor
ficomps
mov
pop
mov
add
inc
pop
mov
mov
jg
ljmp
pop
outsb
cltd
push
repz
push
out
jns
and
push
mull
xor
adc
insl
push
pop
cmpsl
sti
lods
sub
or
cltd
lea
sub
fcoms
push
dec
add
mov
ljmp
jae
int
lret
add
fdivrs
inc
sub
jae
imul
lahf
cmpl
rcrl
sub
jno
out
enter
shrb
xor
sbb
js
push
mov
jg
pop
ret
cmp
and
sbb
cmpsl
icebp
jmp
sub
adc
sahf
mov
icebp
xor
cwtl
dec
xor
lahf
int3
iret
fwait
out
xorb
push
inc
adc
ffree
mov
subl
xchg
and
and
jae
or
pop
mov
add
jge
sub
repz
aam
or
sbb
loopne
adc
xchg
cltd
out
pushf
lock
dec
lret
inc
stos
mov
sbb
inc
jb
or
sbb
pop
into
clc
popa
inc
pop
shl
adc
enter
jecxz
pop
popf
sbb
jg
outsl
leave
fisubl
cmp
and
jns
cmpsb
pop
fcmovb
xchg
in
sti
pop
dec
add
cs
adcb
xor
stc
addr16
mov
push
jne
mov
sti
out
sbb
lock
iret
jmp
insb
sbb
jecxz
imul
sti
and
add
sbb
jns
adcb
insl
movsl
xchg
sub
movsb
das
repz
cltd
and
add
negb
pop
dec
movsl
sahf
cltd
jns
and
dec
stc
shll
sub
fldt
mov
lea
arpl
aad
cmp
lods
icebp
mov
fisubrs
mov
btc
mov
xor
and
outsb
xchg
push
lea
adc
dec
dec
sbbl
cmc
sbb
mov
add
sub
cmp
nop
and
shl
lock
xor
pushf
les
mov
popa
mov
iret
dec
mov
sbb
or
add
push
jge
scas
sbb
cs
and
je
es
or
rcrb
clc
leave
xlat
ljmp
jl
lods
pop
es
mov
fnstenv
pop
cmp
aam
sub
or
call
jo
push
clc
int3
sbb
dec
mov
popf
fstpl
pop
sti
out
jnp
into
inc
adc
loop
mov
inc
cmpsb
or
hlt
jmp
or
fstl
scas
or
push
mov
cli
dec
aaa
into
dec
lahf
xchg
sbb
lds
xchg
cmp
xor
sbb
pop
adcl
xchg
mov
dec
test
and
or
jno
push
jno
pop
sbb
cmp
in
jl
out
aad
test
outsl
pxor
jmp
push
and
dec
adcb
ds
in
pop
xchg
pop
aaa
jmp
pop
and
test
pop
push
push
push
mov
aad
leave
popa
cmpsb
shlb
push
adc
imull
jnp
mov
xchg
dec
stc
repnz
mov
inc
cwtl
mov
inc
das
pop
rcll
xchg
xchg
aas
jg
orl
enter
ds
jae
fldpi
push
add
pop
jno
stos
jns
pop
lea
mov
inc
mov
mov
outsb
push
fdivl
lret
mov
clc
inc
addr16
jno
add
into
fstps
dec
hlt
jae
into
hlt
push
xor
dec
sub
frstor
mov
daa
xor
sub
orl
mov
add
out
mov
lea
lret
or
stos
roll
pop
inc
jnp
leave
jno
sub
xchg
nop
push
add
cmp
std
not
sub
push
jnp
cwtl
xchg
sbb
jmp
testl
stc
imul
jae
repz
lahf
push
mov
sbb
nop
or
pop
mov
xor
xchg
ret
pop
rcl
fiaddl
mov
bound
sbb
inc
mov
xchg
mov
arpl
jnp
fisubrl
or
adc
mov
inc
add
ret
fdivl
inc
ret
mov
sbb
lret
or
add
hlt
mov
stos
and
enter
mov
lods
icebp
fldl
push
mov
lods
dec
cmp
repnz
pop
movl
imul
cmp
adc
mov
cmp
mov
jbe
repz
dec
xor
bound
cmp
sub
cltd
push
fwait
mov
inc
fcmovnb
ljmp
or
jns
out
push
adc
iret
or
jb
es
jmp
jae
imulb
fisubl
mov
jnp
jmp
dec
aad
fadds
jg
cmp
mov
xchg
push
in
out
outsl
lods
jmp
cld
add
xchg
dec
je
popf
cmp
jge
sub
int
mov
pushf
in
addb
das
mov
jb
cwtl
adc
cmpsl
gs
add
pusha
add
adc
and
mov
out
and
mov
aaa
and
add
xchg
add
xlat
cmp
clc
xor
sub
fnsave
and
dec
and
aaa
int
inc
push
dec
lret
imul
jmp
dec
test
xchg
add
out
cmp
ret
aaa
cmp
jp
sbb
mov
clc
aad
adc
cltd
lock
cmpsb
ret
gs
and
pusha
dec
push
mov
xor
mov
sbb
je
cmp
roll
mov
test
or
clc
mov
sbb
iret
testl
pop
adc
add
repz
clc
xchg
xchg
cmp
loope
and
sbb
dec
jg
or
mov
lods
pop
push
mov
add
fimull
icebp
pop
es
test
pop
loope
mov
pop
cwtl
mov
andl
push
mov
out
sub
decl
js
into
dec
pop
mov
adc
cmp
fucom
mov
xchg
xchg
mov
mov
xchg
addr16
sbb
mov
test
repz
ds
aaa
fcompl
xlat
cmp
sbb
push
out
pushf
push
jne
scas
fstl
dec
inc
jg
xor
add
add
shlb
faddl
lahf
lods
mov
sub
rorb
sti
imul
mov
xchg
pop
push
sub
cmpsl
dec
xchg
ljmp
rol
mov
jb
mov
aad
call
pop
call
je
mov
insl
mov
loop
sub
push
jb
xor
out
pusha
jmp
movsl
sbb
adc
jnp
mov
sub
sbb
xchg
in
mul
in
test
xlat
fildll
aaa
push
insb
xlat
add
and
test
cmp
mov
mull
imul
xor
subb
shlb
cmp
push
lcall
in
popf
js
hlt
lret
xor
mov
adc
add
jb
orb
cmp
aaa
push
jb
mov
cmp
xor
aam
xor
popl
inc
jmp
mov
pop
mov
and
sub
mov
adc
add
jno
push
sbb
adc
mov
xchg
dec
std
popf
movsl
xor
jg
ljmp
popf
out
push
jno
call
inc
mov
dec
sub
lods
mov
cs
and
cltd
lahf
mov
jecxz
jp
pop
sti
dec
lods
jmp
xor
into
lds
cmp
mov
jle
sub
daa
jo
incb
push
call
pop
in
mov
mov
pop
push
sti
jg
scas
sub
mov
stos
inc
sahf
aam
adc
xor
icebp
push
out
mov
stos
jmp
and
or
mov
sub
lcall
fstpl
sub
inc
mov
stc
lea
jno
lods
aam
aaa
sub
enter
clc
jns
pop
movsb
mov
ds
mov
adc
cltd
mov
and
adc
dec
xlat
jb
out
jg
dec
xchg
xchg
into
lock
jns
scas
sub
in
aam
fadd
in
xchg
pop
mov
ds
push
and
adcb
cmp
cmp
sub
mov
popf
in
xchg
push
xor
insl
mov
push
cli
xchg
mov
cmp
add
and
lahf
insb
xor
pop
mov
mov
insl
mov
xor
fs
mov
je
mov
inc
jo
incb
fistpll
and
cmp
pop
or
pop
and
in
in
and
sbb
out
movsl
jb
les
faddl
lods
xor
xor
jmp
or
sbb
sub
xchg
stos
out
outsb
mov
jbe
xchg
js
hlt
fisubrs
insb
xchg
in
loope
sbbl
ret
mov
jns
addr16
inc
mov
inc
adc
lods
mov
pop
mov
sub
inc
mov
inc
xchg
lahf
ret
cmc
add
sub
mov
or
imul
dec
movsb
test
ljmp
cli
inc
jmp
inc
test
add
sub
push
push
push
aam
pop
mov
add
mov
in
ds
pop
pop
push
fldl
data16
jbe
outsl
push
or
aam
test
cmp
lcall
xor
mov
xchg
xchg
lock
sub
aaa
mov
mov
adc
xchg
jge
test
cmpsb
add
adc
cli
ljmp
pop
mov
push
fisubs
xor
xchg
pushf
ds
push
popa
sub
ret
dec
mov
mov
mov
js
pop
xchg
data16
fcomi
inc
rorl
dec
ss
or
lds
popl
testb
aas
sbb
test
mov
mov
leave
dec
int
cli
mov
clc
imul
and
fisttpl
and
mov
fsts
lds
mov
in
fwait
test
pushfw
xlat
cmp
pop
xchg
sahf
push
push
xchg
lcall
and
xor
cmpsl
inc
jmp
jo
dec
popa
out
out
leave
push
lods
mov
in
sub
scas
lret
pop
xor
enter
jge
cmpb
out
inc
and
pop
adc
lret
popf
leave
cmpl
in
add
imul
push
dec
enter
arpl
leave
shl
std
sbb
sbb
adc
push
cmp
icebp
push
mov
repnz
fisubs
fnsave
aam
and
xor
pop
add
call
dec
jecxz
inc
bound
lods
sbb
lahf
and
je
shll
mov
inc
push
sahf
lds
mov
xchg
nop
popa
out
sbb
sahf
test
orl
lock
cmp
insb
or
sbb
outsb
gs
mov
jae
je
cmp
test
loope
orb
sub
rcrl
push
sbb
jmp
outsb
fldenv
adc
jo
pushf
call
and
lret
adc
insb
or
mov
cmpsl
addb
roll
gs
push
dec
ja
mov
push
pop
mov
inc
or
inc
mov
or
shlb
fidivs
mov
push
cmpsb
aad
pop
ficomps
test
push
jo
fcomi
ficoms
xchg
inc
dec
jecxz
dec
mov
fcoms
mov
adc
pop
and
mov
mov
xchg
inc
inc
jge
push
fnsave
cmp
jo
outsb
xchg
lret
mov
pop
fildll
xchg
enter
and
adc
sbb
jmp
pcmpeqb
mov
add
pop
out
pop
dec
mov
stos
and
pop
jae
jns
in
xor
pushaw
cmp
xor
add
incl
mov
mov
pop
or
jbe
ljmp
add
adc
iret
jae
fisttpll
xchg
and
or
jecxz
pop
fildl
xchg
out
mov
lahf
rcll
lcall
xlat
fisubrs
xlat
mov
pop
jns
sub
out
pop
xchg
test
sbb
test
popf
mov
or
rcrb
es
arpl
inc
xorl
and
jp
adc
loope
mov
pusha
dec
and
lcall
idiv
pushf
mov
cmp
xor
es
repnz
popf
in
addr16
jae
pushf
adc
repnz
sub
pop
jmp
pusha
daa
rorb
pop
scas
dec
jp
nop
fisubs
pop
js
enter
mov
sbb
shrl
jne
push
adc
cwtl
lods
fcoml
adc
rclb
mov
sbb
out
dec
mov
xor
das
movsl
in
push
mov
inc
mov
sub
pop
pusha
inc
mov
sub
lea
orb
rolb
mov
push
push
dec
arpl
xor
stos
lock
fdivp
sbb
inc
cmpsb
xor
rcl
testl
daa
dec
jmp
dec
gs
sbbb
mov
mov
sbb
push
add
push
les
jle
jg
jnp
cmp
jne
nop
ficomps
clc
aaa
sahf
repz
inc
popf
cltd
repz
lcall
mov
in
push
dec
sbb
bound
mov
lods
repnz
insl
jle
or
xchg
inc
imul
loope,pn
in
or
sub
out
faddp
push
or
stc
js
inc
outsl
jno
inc
subl
fstps
in
lods
icebp
or
andb
and
imul
aas
or
rclb
clc
js
push
scas
jo
push
loopne
add
mov
cmpsb
pop
xor
jb
out
dec
outsl
loopne
jae
or
sub
xchg
and
mov
xchg
jae
xor
push
adc
push
pop
push
cmp
fnstcw
xchg
movsb
lfs
mov
xchg
leave
enter
jp
xchg
mov
rcr
and
jne
outsb
mov
sahf
xor
cld
cmp
andb
add
ret
push
mov
add
outsb
dec
xlat
or
jns
sub
xchg
jne
add
jne
cmp
fiadds
out
lret
mov
addr16
hlt
fimull
mov
lret
fimuls
out
xchg
xbegin
loop
mov
sub
mov
hlt
and
lds
mov
mov
dec
addb
inc
xor
jne
repnz
adc
pop
pop
mov
dec
sub
das
loope
faddp
jae
mov
jno
int
inc
pop
rcr
inc
inc
pop
orl
addr16
dec
mov
jno,pt
addr16
cmp
mov
jp
sub
mov
inc
imul
jmp
rol
cmpsl
sub
fdivr
test
iret
push
adc
sbb
scas
push
lock
jne
sbb
js
scas
call
and
xchg
push
xchg
sbb
jnp
leave
fdivl
sbb
aaa
or
mull
xor
ja
jecxz
dec
fnsave
adc
testb
jbe
pushf
je
cwtl
mov
jbe
mov
mov
or
sbb
jg
into
ret
xor
clc
arpl
cs
daa
jb
divb
xlat
call
fucom
sbb
inc
rorl
pop
lods
mov
mov
mov
out
loopne
jp
sbb
outsl
addr16
mov
xchg
mov
fdivrs
fimuls
fiadds
sub
movsb
jno
mov
pop
mov
fldt
sti
sub
jbe
or
sbb
jp
and
inc
add
sbb
test
js
mov
add
jns
xlat
insb
jno
frstor
fadds
cmp
jp
cs
ret
leave
or
xchg
jno
fbld
pop
adc
mov
lret
pusha
icebp
cmp
xor
in
push
pop
jmp
jle
xchg
clc
mov
pushf
jcxz
jg
int
leave
mov
xchg
test
and
shll
push
xor
sahf
mov
and
pop
add
cmp
mov
push
movsb
mov
jb
mov
jg
pusha
pushf
call
cltd
cmp
jmp
loopne
out
cmp
inc
xor
mov
sti
cmp
pcmpeqw
aas
inc
jp
fstpt
cmp
sahf
xchg
rol
and
xor
shrl
ret
push
sbb
pop
loopne
push
push
mov
jne
add
adc
sbb
test
subl
std
inc
sahf
frstor
stc
pusha
js
sbb
ret
loopne
aas
testb
jg
mov
sbb
cmp
call
or
xchg
aas
jns
mov
mov
clc
xor
push
js
mov
inc
sbb
dec
bound
in
add
test
stos
hlt
xor
repz
repnz
fcmovne
inc
fldcw
sbb
data16
bound
sub
mov
pop
fnsave
jnp
dec
arpl
dec
add
xor
cmp
outsb
mov
mov
dec
xor
sub
orl
enter
xchg
adc
int
and
das
ss
sbb
leave
add
aas
inc
ljmp
dec
rcrb
jge
int
aad
xchg
inc
dec
mov
adc
mov
loop
adc
jp
add
pop
fisttpll
and
je
pushf
jo
cs
sub
mov
pop
orl
mov
and
xor
sbb
adc
adc
sbb
shll
xor
sbb
out
lret
outsb
push
in
cmpsl
lahf
stc
and
shlb
jnp
int3
loope
push
jnp
inc
addl
fs
dec
sbb
jns
scas
and
inc
adcb
mov
scas
stc
pushf
fistpl
cmp
fisubs
pop
mov
adc
and
out
sub
int
cwtl
movsl
mov
adc
gs
aaa
sbb
mov
push
cmp
mov
pop
jge
mov
fnstcw
jns
cs
pop
xor
sbb
jle
rcrb
ljmp
lcall
add
subl
pop
lahf
popa
pushl
stos
test
loop
dec
mov
push
and
sbb
mov
xchg
loopne
mov
idivb
mov
notb
cmpsl
je
cmpb
pop
cltd
bound
lods
push
sub
int
sbb
dec
mov
fsubrl
in
mov
jbe
fists
sub
les
push
cld
cmp
jecxz
pop
sub
rorl
stc
sbb
ljmp
mov
push
ljmp
test
movsb
inc
out
push
test
or
sub
xor
adc
sahf
movb
mov
pcmpeqw
sub
mov
cmp
cld
cld
cmpb
ss
or
pop
hlt
ss
clc
cmpl
mov
mov
rolb
lahf
outsb
inc
shlb
in
cmp
jecxz
insb
push
jle
nop
lds
add
int3
push
in
add
push
dec
jge
sbb
les
xchg
or
hlt
pushf
test
flds
pop
out
iret
pop
pop
dec
push
je
ret
mov
ljmp
and
fists
inc
and
stc
pop
dec
xor
push
pop
jo
jmp
sbb
cmpsl
pop
mov
add
or
xchg
std
add
out
or
ret
shlb
fistps
push
shlb
sub
adc
jno
orl
push
and
negb
loopne
push
outsb
outsb
or
call
mov
and
or
in
mov
cmp
or
jnp
je,pt
xor
dec
push
lcall
jne
push
jno
pop
push
add
divl
or
mov
cli
jmp
loope
mov
push
ja
cmpb
call
jle
iret
dec
push
jmp
sbb
scas
es
stc
iret
xor
xchg
decb
rcll
dec
xchg
lods
or
push
push
sbb
mov
push
push
aas
mov
sbb
mov
pop
push
push
outsb
lahf
sbb
jmp
lcall
jae
mov
jge
fisttps
jno
imulb
inc
sub
dec
pop
movsb
cmp
das
xchg
adc
dec
int3
fs
roll
push
push
mov
roll
loop
mov
sub
cltd
pop
test
xor
pop
pop
js
aaa
pushf
push
mov
je
fwait
xorl
mov
xchg
aad
and
inc
mov
pop
pop
stos
in
nop
sbb
pop
dec
mov
inc
sub
call
cmc
and
and
jecxz
into
inc
xchg
fs
mov
inc
add
enter
leave
lods
lds
and
cmp
adc
fs
daa
fdivr
test
dec
xadd
loopne
xchg
repnz
aas
and
pop
and
inc
mov
cmp
cmp
mov
nop
fisttps
test
cmp
jbe
int3
aam
sbb
lea
pop
aas
sbb
push
fcmovbe
bnd
mov
adc
mov
cld
mov
je
sbb
push
and
xchg
cmpsb
ja
adc
out
mov
lds
cmp
pop
mov
mov
mov
inc
rep
add
stos
das
out
sbb
mov
pop
jns
fisubrl
out
xor
sbb
mov
inc
js
push
sti
mov
sbb
push
in
cld
dec
das
sub
in
push
fstpt
in
daa
js
sbb
jp
rcl
sub
xchg
and
push
jecxz
push
mov
and
jmp
enter
cmp
dec
arpl
clc
loope
xchg
sbb
cmp
out
fwait
mov
and
orl
popf
ljmp
das
and
lcall
xor
cmp
xlat
pop
cli
adc
sbb
pushf
xchg
rolb
lret
pop
sbbb
inc
sbb
rcrb
push
xorb
nop
and
sbb
mov
popf
stc
push
add
cld
xor
adc
jge
add
sbb
addr16
xchg
les
mov
jecxz
xchg
loop
fdivrs
pop
mov
fldcw
movsl
loope
daa
and
xchg
mov
push
lret
icebp
push
jnp
ja
rcr
mov
add
inc
pop
jg
mov
xchg
dec
mov
jo
mov
sbb
bound
into
cmp
xchg
imull
add
mov
ficomps
mov
jg
sbb
cmc
jno
in
aam
xor
nop
pop
dec
and
adc
push
mov
pop
int
sbb
cli
out
rolb
sub
xor
ja
push
hlt
push
jae
pusha
sbb
mov
adcl
int3
jl
inc
int
aad
in
call
push
xchg
stc
cli
inc
stc
mulb
rcl
xor
js
jne
lret
or
add
andb
ss
std
mov
mov
out
ror
ret
movsb
scas
pop
mov
lock
fildll
out
sbb
subl
cld
sbb
xchg
inc
pop
mov
mov
adc
cs
in
scas
jae
sbb
movsl
inc
xchg
stos
lods
pop
subb
inc
jge
ret
cwtl
and
xchg
xchg
ficomps
pop
mov
mov
rcrl
loop
mov
push
sbb
das
or
lds
ss
mov
lods
xchg
and
add
and
sub
add
in
sbb
fimuls
dec
mov
out
cwtl
fcmovne
mov
lods
jbe
jbe
loopne
xchg
das
and
mov
lods
add
imul
rcrl
js
jmp
int3
rorl
adc
cmc
add
inc
mov
lods
lret
sbb
xor
popa
test
mov
fiaddl
ret
or
and
sub
aas
xchg
gs
adc
lock
push
filds
jnp
ss
enter
xor
and
sarl
daa
jns
jmp
xchg
push
jb
shlb
int
or
rcrl
mov
mov
xchg
jae
and
xchg
dec
or
jg
lock
jnp
jne
in
and
cwtl
std
ljmp
mov
clc
aad
push
sub
call
mov
cmp
pop
das
jnp
push
adc
pop
popf
jbe
cwtl
dec
dec
lods
add
cmpsl
ss
insb
in
pop
xor
popf
adc
adc
xor
adc
jns
fstpt
pop
mov
mov
mov
fwait
pop
fnstcw
adc
dec
xchg
mov
inc
test
xchg
pop
inc
jbe
xor
xchg
and
cmp
cwtl
jno
repnz
dec
cmp
loope
and
es
xchg
jae
ss
adc
pushf
aam
cwtl
insb
mov
lret
lds
push
movsl
fwait
adc
pop
mov
in
push
jns
test
repz
in
push
stos
adc
adc
mov
pop
mov
push
pop
fdivrs
sub
test
cmpsl
push
insb
sarl
xchg
cmp
ret
push
loop
je
inc
call
lahf
sbb
fwait
mov
in
iret
fiadds
sub
cli
adc
arpl
jnp
imulb
fdivs
cwtl
push
sbb
int
mov
mov
cmp
inc
pop
mov
adc
int
cwtl
pop
cli
inc
cmp
push
stos
repz
pushf
cmc
push
xchg
cwtl
dec
add
in
push
mov
sub
mov
imul
cld
inc
les
popa
test
adcl
jl
jp
loopne
jl
xchg
stos
rcll
sub
mov
inc
xchg
mov
pop
pop
mul
xchg
shrl
mov
xchg
insl
loopne
sti
fstps
lahf
cmp
popl
leave
imul
mov
imul
aaa
imul
and
xor
cmp
adcb
or
int3
sbb
sub
in
addr16
subl
das
push
pop
fcoms
mov
repz
pop
daa
or
jae
sarl
imul
jb
leave
mov
and
dec
shl
inc
pop
xor
mov
push
gs
pop
ds
sarl
mulb
sub
and
push
mov
or
cmc
add
dec
lret
je
and
or
lret
aaa
out
inc
in
cmpsb
jp
stos
or
xchg
cmp
fisubl
add
icebp
iret
jnp
enter
dec
gs
cmpl
inc
loope
cs
and
loope
adc
sub
pop
cmp
and
cmpsl
jle
xor
dec
hlt
jns
sub
sub
xor
lahf
dec
xlat
insb
in
daa
mov
jo
neg
jge
cld
and
push
inc
std
cmp
fstpt
outsl
sbb
add
sbb
jmp
cmp
dec
dec
into
add
je
cmp
pop
sarb
inc
push
jne
lcall
imul
push
jo
js
daa
sbb
pop
ret
es
movsb
inc
jmp
add
loop
fisubs
stos
cld
push
mov
movsb
test
xchg
fisttps
or
daa
pop
mov
dec
add
inc
fcomp
lods
int3
nop
push
rcrb
mov
mov
pop
cli
in
iret
inc
lds
jne
popa
push
scas
or
xor
out
popa
leave
cmpb
mov
mov
addr16
out
xchg
sahf
pop
int
ss
sbb
cmp
cmpsb
ja
pop
xchg
push
push
lcall
scas
xchg
test
fwait
scas
imul
lahf
outsl
in
call
cmpl
and
lahf
cld
adc
rorb
push
cs
and
jle
out
not
lret
mov
sbb
mov
xchg
xchg
fisttps
jl
dec
and
xchg
fsubs
shrd
stc
addr16
xor
repz
cmc
push
popa
xor
gs
jp
iret
and
or
xchg
pop
xchg
into
mov
or
sub
fidivrl
shll
xchg
jle
push
mov
call
imul
inc
add
popa
cltd
push
mov
es
incl
pop
jb
test
cltd
stos
jnp
int
mov
push
mov
jle
push
push
xor
fsubs
scas
jae
pop
loope
data16
popa
jb
sbb
mov
jl
in
dec
cmp
stc
jmp
movsb
sbb
dec
je
pop
scas
jb
dec
inc
dec
sbb
push
pop
scas
cmp
mov
push
adc
add
and
cmpb
subb
add
into
mov
in
dec
je
add
mov
or
xor
test
pop
or
jo
cltd
fadds
call
push
sahf
test
fs
nop
daa
push
dec
or
pop
test
out
mov
lret
popa
jp
sub
dec
sub
adc
push
out
mov
hlt
out
mov
mov
jmp
push
cmp
add
sarb
cltd
pop
sbb
push
xchg
and
pop
call
out
xor
and
dec
into
adc
outsb
mov
and
enter
rorl
fcoms
movsb
mov
cmp
lods
in
xchg
sbb
jb
jne
fdiv
mov
mov
inc
xchg
lods
out
btr
aaa
in
mov
shll
xor
xor
jp
cltd
pop
push
mul
jle
repnz
mov
mov
out
inc
shlb
jmp
ficomps
jecxz
inc
call
dec
test
rcrb
jbe
aad
mov
imul
test
jmp
sbb
aaa
imul
fs
stos
xchg
mov
jbe
inc
cli
inc
in
push
aas
scas
icebp
jg
nop
scas
sub
lret
loopne
insl
out
push
mov
pop
lea
push
jne
xchg
add
sbb
sarb
loop
divl
mov
out
lret
push
movsb
lods
pop
push
mov
adc
in
cmp
test
jbe
stos
sub
fsubrp
dec
shlb
stc
orl
in
or
sbb
mov
xchg
enter
cltd
nop
mov
push
es
adc
insl
cmp
stos
cld
inc
mov
js
adc
out
mov
mov
cmpsl
in
adc
jl
add
jne
leave
mov
and
fimuls
push
jle
mov
stos
pop
dec
xchg
cmpsl
out
push
xchg
mov
js
aam
xchg
aam
dec
aas
cld
jne
mov
lock
jnp
out
popf
mov
inc
imul
out
or
add
fcompl
xor
inc
and
bound
push
out
push
out
scas
es
loop
dec
adc
ret
outsl
loopne
bnd
ss
repz
lahf
and
mov
lcall
add
add
sub
inc
jp
outsl
stos
out
sub
fidivrl
imul
pop
and
mov
loop
pop
adc
xchg
xchg
jnp
imul
xchg
fildll
jb
movsl
notl
sarb
sbb
int3
loop
dec
mov
jle
push
shrl
sti
jg
aad
mov
clc
pop
pop
test
sub
mov
subl
loope
mov
out
xchg
pop
xchg
push
sub
cmp
sbb
imul
les
add
rclb
shl
loope
jl
sub
hlt
das
imul
jge
hlt
cmc
fwait
inc
inc
outsb
pushf
out
push
pop
inc
jmp
cmpl
ds
lret
js
or
mov
aas
pop
pop
insw
xor
push
daa
gs
lods
cmpsl
addr16
and
mov
sub
popf
mov
in
jg
cmpsl
fldcw
mov
mov
jb
push
scas
stos
jne
pop
jno,pt
sub
xchg
repz
addr16
fisubl
inc
mov
pushw
out
sarl
xor
and
cmp
pop
add
and
mov
dec
sbb
push
js
mov
xor
fdivl
mov
popa
hlt
faddl
pop
jnp
in
insb
dec
loop
jne
inc
shll
iret
and
sti
loop
stos
rcll
stos
imul
jns
push
or
stos
lods
jno
xorl
cltd
pop
sub
loope
jno
mov
dec
es
test
cld
adc
fisubrl
or
xchg
bound
xor
push
insl
insl
loop
jcxz
lds
nop
int3
pop
scas
adc
pause
aaa
jmp
arpl
sti
out
and
mov
lods
outsl
xchg
std
mov
mov
lock
jle
jno
dec
stos
test
cmpsb
in
enter
popf
mov
lods
popa
add
insb
fwait
mov
jecxz
push
cmpsb
push
loop
hlt
xchg
insb
jge
mov
loope
das
add
scas
aas
xchg
mov
mov
test
xchg
rcrb
push
inc
arpl
ds
sbb
test
jp
push
adc
pop
cmp
mov
sub
divb
test
test
mov
ret
xor
std
or
lahf
stos
xor
inc
outsl
adc
out
dec
outsb
jno
push
pop
scas
xor
lcall
mov
jmp
xchg
sahf
lea
sbb
push
jae
out
ret
mov
lock
clc
push
in
sub
inc
xchg
add
jle
or
lods
xchg
es
add
leave
xchg
mov
xlat
psubd
jle
xchg
test
inc
int
mov
xor
and
xor
scas
cmp
pop
push
in
es
mov
ret
add
ret
test
ret
cmpsb
mov
andl
pushf
rorb
outsb
shrl
jg
loopne
lret
lahf
inc
in
scas
sub
rcr
dec
mov
dec
popa
sub
mov
pushf
push
and
dec
mov
fdivp
into
gs
mov
pushf
ljmp
push
adc
push
xorb
cltd
insl
lea
fs
into
inc
repnz
mov
mov
ljmp
sti
dec
inc
aad
loopne
cmp
fnstsw
pop
inc
sbb
push
sbb
jge
popa
and
or
dec
adc
sub
push
div
iret
xchg
mov
adc
movsb
sub
and
mov
adc
cmp
mov
fcmovu
or
mov
xor
repnz
sbb
jge
xchg
xchg
jmp
das
and
xor
and
inc
and
fnop
and
xchg
imulb
sqrtps
jno
imul
fwait
andl
or
or
shll
xor
push
arpl
repz
call
jne
jl
cmpsb
mov
in
inc
rorb
sbb
bound
mov
mov
mov
pop
mov
inc
or
sub
sbb
jns
add
push
jns
cltd
push
xlat
negb
xor
cmc
dec
pop
jae
imul
cli
jp
ror
fldl
rcr
mov
sbbb
in
sub
xchg
adc
out
ja
inc
fistl
and
mov
mov
imul
lock
mov
in
shll
push
rorb
and
jno
aaa
outsb
daa
jp
aam
insl
and
fdivrs
xor
enter
mov
ret
jnp
cmpsb
jmp
test
mov
inc
shlb
fnstsw
int3
std
mov
inc
imul
mov
lret
mov
fwait
add
cmp
pop
xor
es
push
cli
push
pop
inc
jbe
ja
aad
lret
push
mov
mov
dec
iret
mov
mov
jecxz
dec
xchg
mull
xchg
push
dec
ljmp
fstps
jge
addr16
mov
xlat
mov
icebp
push
or
aaa
inc
cmp
pop
pop
outsb
push
mov
sti
mov
arpl
mov
aam
clc
lock
push
mov
insl
mov
lock
sub
inc
lods
mov
in
fdivs
popf
out
pop
out
movl
movsb
push
pop
popa
sbb
inc
mov
sbb
or
mov
cmp
out
addb
rcll
push
daa
cmp
xor
decl
lock
stos
mov
dec
fcmove
inc
pop
jno
add
aas
pop
and
imul
mov
cwtl
sub
push
rolb
and
ret
rorl
push
and
xchg
cli
inc
mov
jl
sbb
mov
cs
xchg
ds
cmp
adc
mov
into
sbb
leave
adc
cld
dec
pop
in
lret
jnp
pop
dec
or
pop
fsubs
scas
andb
dec
clc
sahf
es
aad
int
jmp
incb
adc
std
mov
movsl
cwtl
mov
adc
in
cmp
cltd
xchg
fsts
daa
aad
sbb
rclb
mov
push
movsl
popa
popf
int3
push
push
orl
pusha
lahf
pop
cmp
or
cmp
pop
loope
ss
test
dec
sbbb
adc
movsl
movsl
in
push
cmpsl
int
cmp
push
pop
mov
loop
fldenv
jne
push
mov
stos
fsubl
aad
cli
jnp
mov
cmp
lcall
or
or
sub
xor
pop
or
fisubrl
xchg
insb
sub
push
cmp
push
sti
and
std
mov
bound
cmpsl
scas
mov
xchg
cmp
loop
out
js,pn
mov
push
sub
ds
mov
testl
scas
aas
xor
jmp
xor
icebp
imul
imul
dec
fs
popf
add
sbb
out
mov
andl
sbb
addr16
jmp
or
ret
scas
xchg
int3
lahf
adc
icebp
xorl
mov
inc
test
jp
fildll
dec
mov
or
xchg
imul
movsb
jge
ja
add
mov
lods
jecxz
mov
push
nop
ja
insb
mov
mov
negb
fwait
jmp
jecxz
sub
imul
xchg
ja
push
mov
adc
add
adcl
mov
xchg
inc
shrb
imul
mov
fists
push
push
lahf
lods
out
push
bound
lahf
hlt
inc
adc
cmp
shrl
pop
cmp
dec
data16
cmpsl
pop
test
jns
hlt
sahf
mov
in
mov
xor
hlt
mov
inc
dec
out
imul
fimull
adc
lret
pop
subb
xor
mov
cmp
inc
lock
stc
xchg
mov
in
lods
lds
xchg
xchg
test
sti
in
add
daa
lcall
mov
enter
lret
pop
pop
lock
jae
mov
mov
cs
push
pop
push
add
nop
or
cmp
mov
push
pop
daa
fs
cltd
es
loope
xor
in
cwtl
decb
stc
ret
sub
es
inc
loop
xlat
test
insb
xchg
xchg
lock
sahf
pop
out
ret
jb
lods
jle
les
sti
add
in
mov
sti
pop
adc
test
jo
out
dec
repz
rol
jno
mov
dec
fiaddl
mov
neg
sub
test
std
movsl
jge
xor
mov
in
fimuls
mov
push
rorb
sub
repz
and
xchg
push
cmp
push
popf
mov
sbb
push
push
inc
sbb
iret
jmp
sub
dec
lea
mov
out
test
test
leave
fcmovnbe
mov
sub
mov
cmp
mov
mov
call
jle
mov
ljmp
add
mov
aam
scas
testb
mov
or
arpl
cmp
mov
xor
and
jno
imul
lret
adc
xlat
insb
jne
jmp
subl
xchg
scas
add
inc
aam
jle
inc
push
imul
cmp
or
mov
enter
gs
mov
xlat
push
xchg
adc
mov
mov
and
or
pop
and
cwtl
jecxz
cmp
stos
out
add
aad
inc
mov
into
lret
orps
and
and
mov
sub
ret
jg
xor
inc
mov
pop
xlat
sbb
aaa
outsl
stos
jbe
aad
test
jle
inc
fistpl
jo
inc
in
xchg
fucomi
xor
pop
push
insb
dec
mov
std
and
popa
mov
incl
lcall
mov
xor
ja
dec
mov
cmp
sbb
mov
mov
incb
or
adc
les
test
xor
jle
cmp
and
dec
sbb
out
ds
fists
shrl
rcrl
insb
sahf
push
fbstp
cld
xchg
xchg
int
aas
adc
test
mov
movsb
inc
sbb
sub
xchg
stos
in
cmpsl
imul
shlb
sub
imul
insl
xor
std
dec
jbe
cmp
out
sti
into
inc
xchg
push
ds
jo
es
jecxz
ds
in
arpl
mov
mov
dec
mov
movsl
adc
adc
gs
xchg
sub
divb
popa
idivl
nop
xchg
repnz
pusha
sbb
cld
push
sbb
outsl
add
sub
lock
ja
add
push
and
push
or
xor
sahf
mov
ljmp
push
sub
test
hlt
jb
lcall
add
ss
repnz
cli
inc
dec
pop
cld
fwait
mov
daa
xchg
mov
leavew
cmp
fcompl
arpl
popf
test
aaa
inc
jbe
mov
stos
lahf
icebp
cwtl
cltd
fcomip
jo
dec
into
sub
dec
es
imul
insb
fnstsw
movsb
lods
in
insb
cmp
bswap
jbe
repz
je
adcl
mov
pop
into
jmp
mov
imul
mov
loop
xchg
push
xchg
pop
lret
mov
insb
lcall
outsb
jg
dec
inc
mov
fwait
cmp
mov
mov
ja
push
lret
cli
mov
push
aaa
out
sahf
bound
sbb
mov
inc
xchg
xlat
ds
jecxz
out
popa
in
cmp
jnp,pn
aam
xchg
jb
push
rcrl
jmp
out
mov
fistps
scas
push
leave
loopne
xchg
call
pop
cmc
add
or
rcrl
mov
inc
adcb
lcall
xchg
sbb
or
dec
or
rcll
mov
lcall
mov
hlt
or
inc
mov
cmc
mov
sbb
cmpsl
popf
lock
cwtl
rcrl
mov
aam
push
cwtl
or
sti
loopne
sub
lea
fsubs
cmc
ds
enter
xchg
sub
jecxz
cmp
mov
sub
inc
sub
xchg
in
iret
adc
add
aas
mov
into
repz
xchg
call
clc
push
aad
cli
sub
pusha
test
cmpb
push
dec
nop
shrl
pop
dec
notb
xor
repz
lods
sbb
dec
pop
cmp
and
test
jae
jg
nop
sbb
pop
loope
shll
xor
testb
sub
push
dec
xor
in
stc
lea
push
lods
mov
inc
subl
dec
xchg
adc
sub
jecxz
cmpl
dec
imul
mov
mov
pop
adc
hlt
sub
pop
sub
and
fildll
or
rcll
call
js
movsl
ss
loopne
jle
mov
mov
rol
jg
sbb
outsl
lret
mov
sbb
scas
sub
out
jbe
mov
jb
sub
and
popa
mov
faddl
xor
ds
aas
es
ficomps
mov
xlat
inc
shrb
sahf
shrb
daa
stos
lods
movsl
cs
lahf
insl
adc
shrb
popa
outsb
and
add
and
lods
mov
inc
popa
pop
mov
rcrb
dec
xchg
andb
pusha
jb
sub
into
fldcw
sub
xor
mov
inc
scas
xor
mov
fstl
fs
mov
inc
data16
pop
push
mov
sbb
jg
insl
xlat
and
xchg
jae
push
in
jo
ja
mov
cmp
jae
sbb
cmpsb
jnp
test
pushf
pop
sbb
add
in
pop
pop
jns
outsb
adc
ds
fimuls
inc
fstpt
push
xchg
dec
std
and
dec
inc
push
mov
addl
push
js
mov
mov
out
jb
mov
cmp
push
sahf
pop
mov
cs
mov
imul
lods
mov
dec
insb
ja
stc
and
inc
xor
xchg
jb
jno
jbe
lods
jnp
rcr
cmp
flds
orb
jbe
jp
xchg
mov
xchg
or
push
push
add
jg
pop
jns
clc
and
sarb
inc
sbb
fildll
cmp
push
mov
rorb
mov
jmp
adc
mov
cmp
sbb
and
je
xchg
enter
mov
adc
xchg
je
leave
fldl
push
dec
mov
lea
repz
in
test
push
jmp
cmp
cmp
sub
ds
sbb
jecxz
mov
pop
pop
adc
ret
rorl
mov
push
fldt
sub
push
test
fwait
xchg
xor
inc
cmpsl
pop
sub
add
push
cmp
lcall
mov
sbbb
loope
fcoms
mov
mov
repnz
jae
rcrl
mov
sbb
sub
daa
pop
xor
mov
xor
je
sub
pop
pop
gs
dec
and
push
inc
jle
stos
and
scas
pop
cmp
mov
xchg
sub
and
es
sub
fnstcw
and
fs
or
ss
cmp
jl
push
sbb
or
sti
andb
mov
loopne
sahf
sbb
or
dec
mov
jmp
lea
xchg
psllw
pop
loop
or
subl
flds
mov
xchg
pushf
sti
add
jne
push
xor
out
enter
cmp
test
inc
adc
mov
nop
imul
sub
push
vmwrite
aaa
mov
adc
mov
adc
inc
xor
cmc
dec
das
xor
je
mov
repnz
test
js
inc
jnp
xchg
repz
sbb
loope
inc
rorb
popf
sub
ss
inc
in
and
popa
pop
mov
pop
add
mov
movsb
xchg
decb
ret
cmp
adc
test
xor
inc
pop
push
add
cmp
lods
clc
nop
cmp
and
dec
in
addb
lahf
outsl
pop
icebp
mov
xor
int
sbb
movb
inc
cmp
or
stc
fs
adc
fs
je
adc
xchg
fstpt
fdiv
mov
and
rorb
loope
dec
xchg
loopne
cld
cmp
mov
sbb
or
std
fidivs
lods
push
cmp
out
jae
inc
out
loop
in
mov
sti
ds
inc
pop
sbb
cmpsl
mov
jno
test
mov
insl
mov
data16
imul
inc
hlt
jg
leave
int
shlb
mov
cwtl
stos
lock
aas
mov
roll
pop
jp
and
inc
loopne
inc
sahf
mov
sbb
jnp
mov
rcll
movsb
xor
pop
adc
test
fisubl
fildl
jp
adc
sub
dec
ret
stc
mov
dec
jle
in
inc
sahf
gs
dec
movl
or
mov
subb
pop
in
jnp
int3
mov
int3
push
mov
mov
pop
es
enter
or
data16
sbb
ss
insl
lods
xor
inc
rcrl
fstpt
adc
out
pop
xchg
dec
mov
lahf
cwtl
push
pop
or
sbb
imul
loope
loopne
jnp
and
ja
repz
test
jbe
or
ja
and
lods
pop
mov
inc
not
into
insl
and
sub
movsl
js
pop
mov
sub
out
pop
notb
cmp
adc
je
xor
push
cmp
xor
push
test
mov
push
add
cmpsl
std
push
xchg
lds
testb
or
jae
daa
mov
daa
and
inc
inc
jecxz
sbb
mov
sub
in
sbb
in
in
pop
lahf
test
xor
lret
xchg
popf
mov
dec
xor
sub
movsl
es
xor
int3
push
pop
aad
cwtl
push
mov
call
ljmp
push
jns
dec
jb
mov
mov
jg
icebp
mov
push
cli
adc
ljmp
cmpsl
add
ja
subb
ficoms
push
popf
addr16
test
sbb
insl
insb
jmp
dec
xor
push
sbb
cmpsb
imul
pusha
push
loope
aaa
sub
icebp
lea
xor
dec
movsl
mov
dec
and
imul
cmp
jmp
jge
outsb
xchg
bound
push
add
pop
iret
sahf
out
ja
push
out
inc
mov
mov
vcvtss2si
insb
mov
call
es
cld
jbe
xor
cmpsl
arpl
sub
or
push
addb
cld
dec
test
out
lret
xor
pop
mov
repnz
jno
pusha
push
xor
dec
pop
cmovnp
and
pop
pop
dec
jl
dec
imul
test
xlat
test
popl
and
cmpsb
jle
and
in
dec
mov
add
sarb
ret
pop
inc
xchg
nop
or
in
pop
mov
xor
lock
mov
dec
dec
xor
and
jne
rolb
jle
mov
stos
xchg
gs
movsl
stos
add
jl
or
jmp
ret
xor
das
push
cmp
cmp
pusha
lods
xchg
jnp
icebp
inc
pusha
dec
inc
data16
insb
sub
xor
jge
push
int
ja
cmpsb
or
sti
sarl
and
mull
mov
insl
xor
and
pop
xor
roll
inc
rcrl
mov
adc
mov
mov
sbb
mov
sbb
ss
mov
or
jp
andl
jns
jno
ret
xchg
sub
scas
mov
adc
xchg
xchg
roll
pusha
dec
das
fmull
scas
loope
test
lcall
mov
push
adc
mov
pop
pop
popa
pop
cmpsl
jae
or
out
das
icebp
dec
mov
pop
jle
jae
jo
inc
es
xchg
jg
dec
in
rol
lss
sub
mov
cs
fistpll
lret
add
mov
adc
std
jb
push
lret
dec
mov
adc
push
xor
test
dec
mov
enter
xchg
cmp
sub
cs
mov
test
clc
mov
mov
imul
pop
rclb
jecxz
or
push
imul
mov
fwait
imul
fadds
cmp
adc
aas
gs
stos
lret
pop
in
movsb
push
or
ljmp
in
scas
cmpsl
mov
scas
fwait
xor
lods
in
gs
mov
sbbl
fcmovb
popf
shll
xchg
scas
stc
inc
sti
insl
jb
inc
xor
mov
sbb
adc
sbb
test
test
or
sub
lods
sub
rcr
inc
cmp
cmp
push
fldl
scas
loope
and
fisttpl
push
pop
inc
mov
inc
jae
incl
aas
dec
shrl
mov
pop
fcoms
xorl
lret
jge
or
or
insb
addr16
loope
fidivrl
popf
fstpt
or
loope
loop
sbb
mov
cmp
or
inc
les
je
and
xor
shl
sti
jns
dec
push
sbb
repz
daa
jb
jp,pn
fmul
cmpl
add
mov
daa
jae
cmc
cmp
int
sub
mov
in
or
sti
hlt
je
jb
fwait
or
aad
add
mov
jecxz
push
vmovss
adc
xor
in
stos
mov
and
dec
or
fs
out
add
and
outsb
icebp
popa
pop
mov
adcb
ror
sbb
or
add
mov
push
push
add
add
xchg
add
ficompl
xchg
or
mov
inc
cmp
pop
dec
jo
pushf
and
push
das
out
add
pusha
xor
jb
sarl
mov
ljmp
mov
in
pop
sbb
pop
pop
fldl
sbb
stc
shrb
aas
mov
push
mov
sub
pop
aad
cmp
in
decl
mov
adc
dec
sub
test
pusha
pop
xchg
sbb
cwtl
sub
push
fldenv
mov
mov
mov
cmpl
mov
call
mov
push
push
out
enter
or
mov
inc
or
sarl
xor
push
sbb
mov
xor
daa
xchg
gs
ljmp
sub
imul
cmp
mov
sbb
rcr
add
push
lret
nop
je
inc
cmp
cmp
and
or
xor
jge
or
lods
dec
fnclex
lds
loopne
rcrl
mov
or
pusha
stos
jg
mov
or
imul
fdivrp
pop
cmp
or
ja
jbe
add
out
cmp
enter
cmp
out
lods
loope
ret
inc
and
insl
into
loopne
push
arpl
xor
cmp
sub
adcl
sub
jge
xchg
sub
push
push
dec
test
pushf
sub
mov
inc
sbb
pop
jbe
out
mov
lahf
mov
xchg
cmp
je
fdivr
or
es
add
leave
mov
push
xchg
push
pop
popa
test
ss
stos
pop
out
pop
in
cmp
cmc
out
lds
inc
and
int
out
mov
mov
clc
shlb
adc
js
sbb
loope
das
shlb
cmp
arpl
cs
adc
sbb
jl
push
in
outsl
cmpb
cmp
js
test
fwait
loope
xor
gs
stos
sub
jb
arpl
and
neg
or
and
mov
inc
mov
xor
or
inc
int
gs
imul
movsl
inc
mov
outsb
frstor
lods
fldcw
sbb
daa
dec
jle
inc
sub
mov
dec
dec
insb
cwtl
test
pop
ss
mov
int
lods
mov
ljmp
int3
pcmpgtw
js
jl
stos
mov
nop
pop
xor
mov
cltd
int3
movsb
mov
aaa
push
fldcw
xchg
dec
mov
jns
sbb
out
dec
fldcw
adc
icebp
sub
cmp
push
fwait
or
cmp
out
push
pop
cwtl
cmp
jo
push
dec
mov
jp
arpl
hlt
jbe
push
and
inc
loop
mov
sbb
jbe
leave
pop
out
cmp
les
push
pop
movaps
cmp
mov
sahf
inc
ss
sbb
inc
jae
add
lods
adc
ret
push
mov
shrb
jb
and
popf
int
mov
cli
insb
mov
dec
lret
push
and
in
fsts
test
pop
and
xor
loop
adc
shlb
clc
aad
bound
mov
sub
dec
or
adc
out
jl
lds
inc
lret
mov
into
xchg
pop
and
fsubrl
pop
movsb
jmp
pop
inc
sub
push
lods
jno
cmc
fistl
cmp
sub
loop
cwtl
mov
mov
jb
pushf
cs
xor
add
jns
or
nop
outsb
lods
jmp
in
mov
xor
enter
xchg
jns
mov
cmp
dec
sarl
push
adc
jb
mov
mov
iret
and
push
fs
mov
jg
xor
loopne
loop
mov
movsl
and
inc
adc
ljmp
add
sbb
movsb
call
cli
pop
fiaddl
pop
fsubl
aam
cs
dec
stos
adc
fists
bound
test
jns
rorl
lods
pop
aas
sbb
adcb
div
aas
push
leave
sbb
fdivs
xor
shlb
xor
push
fdivr
cmc
jne
das
je
mov
jno
loopne
and
fdivs
stos
lret
add
jno
cmp
adc
jecxz
sbbb
dec
into
sub
test
mov
dec
arpl
gs
in
pop
xorb
lock
subl
cmp
mov
movsb
mov
adcl
dec
movsb
dec
outsb
enter
mov
jmp
xchg
pop
jle
add
lods
pop
nop
pop
out
lret
imul
into
xchg
push
pushf
out
adc
neg
arpl
jg
sbb
notb
popf
mov
mov
cs
repz
mov
aas
dec
sub
mov
aaa
sub
mov
call
mov
pop
or
mov
enter
jns
outsl
jnp
movsb
xchg
cmpsb
sub
xor
jbe
icebp
int3
push
xchg
mov
frstor
cmp
mov
cwtl
pop
ficompl
in
add
nop
jbe
andb
mov
xchg
pop
das
xchg
rol
mov
push
xchg
lret
aaa
insl
ffreep
jmp
cmp
pop
pop
test
dec
mov
cwtl
jb
and
enter
sbb
in
fisttpll
nop
jne
adc
dec
push
push
lock
daa
insl
dec
sbbl
fidivrl
out
std
hlt
nop
inc
sti
rcll
repz
inc
mov
adc
data16
lret
cmp
pop
push
clc
mov
mov
dec
sub
pop
sbb
insb
test
adc
jne
or
cmp
insb
pop
pop
aam
stc
push
push
adc
popa
jno
psubusw
shl
xchg
dec
fistps
mov
hlt
xor
aas
insl
push
xor
or
stos
sbb
mov
inc
jne
cmp
jae
in
mov
inc
xor
add
dec
or
int3
mov
jl
cmc
ret
negl
jle
cli
scas
mov
cmp
sbbl
dec
mov
mul
push
push
adc
add
ljmp
sub
jmp
ja
je
stc
pusha
test
sbb
and
loopne
jle
cmp
and
in
mov
stc
mov
loopne
fsubrp
mov
sub
dec
jl
mov
jg
or
jmp
and
nop
mov
lahf
insl
pop
fstpt
imull
xchg
push
xor
jmp
dec
mov
push
pxor
outsb
mov
adc
mov
add
ljmp
push
nop
or
or
sbb
repnz
pusha
sub
jmp
and
imul
xchg
fidivl
outsl
out
fwait
out
lock
in
pop
sub
xchg
fstps
pop
lret
ss
stos
repnz
xchg
mov
sub
dec
adc
xchg
xchg
mov
mov
mov
inc
pop
xchg
mov
mov
xchg
dec
dec
adc
scas
leave
jle
shlb
daa
stos
insb
popf
lcall
ficomps
repz
das
mov
push
mov
xlat
cli
cmc
sbb
shr
ljmp
pop
pop
mov
fidivrs
cmovb
lock
insb
fnsave
adc
pop
cmpsl
popl
jp
lret
popa
xor
or
mov
and
lea
and
sti
jmp
xchg
and
sbb
arpl
rorl
jmp
and
cmp
dec
or
rcr
lret
dec
lds
push
dec
pop
cmp
mov
dec
out
inc
or
cmp
pushf
and
cmp
int3
dec
repnz
shrb
xor
out
mov
out
sbb
lods
repnz
nop
andl
ljmp
outsl
test
es
inc
or
das
int
int3
add
push
scas
test
and
mov
sbb
leave
std
mov
cld
push
cs
into
jnp
mov
out
or
push
sub
and
xor
inc
outsl
leave
fisubs
jp
xlat
cmp
stos
rorl
or
sub
hlt
enter
fwait
push
jg
mov
pushf
add
shl
dec
mov
daa
bound
insb
mov
shl
fidivrl
int3
xor
sahf
jge
js
fmuls
sub
dec
xor
cmp
push
jne
sbb
or
jl
mov
bound
pop
stc
data16
mov
inc
xor
mov
movsl
enter
data16
in
xlat
cli
fistps
stos
sbb
pop
fcmovnbe
roll
mov
xchg
jne
mov
xorb
pushf
mov
out
lods
test
in
mulb
jl
popa
jne
mov
xlat
jle
push
out
aad
imul
insb
xor
ficoml
xor
outsl
popf
sub
mov
adc
addr16
cs
imull
adc
arpl
or
scas
or
cmc
cli
push
jmp
popf
adcl
inc
sub
xchg
inc
loopne
cmp
lahf
xchg
pop
les
iret
daa
jl
mov
dec
rcrb
mov
fxtract
lock
out
mov
sarb
cs
and
jne
mov
outsb
int
test
mov
xor
mov
ds
or
sub
fisubrs
xchg
jg
lcall
or
cmp
mov
clc
inc
loopne
ret
cmp
cmp
fisubl
push
outsb
ffreep
fmull
dec
repnz
xlat
cltd
fwait
add
pop
xchg
and
xchg
add
mov
sub
lea
lcall
push
mov
daa
cmpsb
aas
std
movsb
imull
fwait
out
cld
mov
movsb
lods
inc
cmpsb
ja
xchg
insb
mov
inc
mov
adc
loopne
adc
scas
and
daa
out
cmp
mov
ret
adc
dec
adc
dec
out
add
addr16
mov
xchg
repnz
dec
in
push
xchg
js
pusha
or
testl
test
repz
stos
push
lcall
add
jmp
mov
or
aaa
jb
outsl
or
dec
iret
sbb
or
mov
test
imul
push
filds
adc
insl
xor
lods
les
cmp
lret
jp
lret
xchg
or
mov
subl
cwtl
ss
and
sbb
lea
cwtl
push
mov
jg
mov
push
jnp
jg
and
inc
push
inc
insb
xlat
adc
xchg
andb
cmp
jns
insb
mov
daa
push
pop
es
jecxz
imul
xlat
mov
xor
jo
mov
call
mov
sub
xchg
xchg
dec
jmp
xchg
fstps
jno
and
daa
push
int3
cmp
lods
xor
sub
mov
pusha
mov
call
inc
adc
imul
imul
pop
shl
inc
mov
and
jnp
dec
and
inc
ljmp
insb
jecxz
testb
scas
mov
lahf
cmp
lods
lods
cmp
mov
mov
das
das
push
push
mov
push
xor
test
or
dec
add
xchg
lods
mov
mov
push
jne
push
mov
jg
cwtl
fidivl
daa
pop
das
mov
je
ss
add
inc
dec
outsl
adc
xchg
xchg
psrld
cwtl
xchg
cmp
pop
fwait
pop
jne
jg
push
lret
add
pop
fisttpl
lret
out
mov
mov
mov
lret
dec
pop
gs
and
rcrb
adc
test
fs
repnz
out
jg
cmpsl
out
mov
jl
cmc
jmp
cmp
pop
mov
sbb
sub
roll
pushf
sub
ret
sbb
dec
rcrb
adc
in
and
adc
pop
jbe
push
and
mov
xchg
cmpsb
ds
icebp
mov
xlat
push
out
bound
dec
or
or
cmp
or
shll
adc
or
inc
push
jmp
lahf
push
shlb
xor
jno
sti
jne
cmp
ret
xchg
fistpl
sbb
aaa
mov
fidivl
inc
jmp
imul
push
cmpl
rcrb
pushf
xor
fwait
mov
dec
popa
or
daa
cli
jae
mov
fsubrl
lcall
bound
and
aas
popf
popf
hlt
push
adc
imul
out
inc
das
adc
add
lock
imul
dec
inc
pop
cli
add
or
negb
add
addr16
mov
cltd
movsl
mov
iret
mov
cmpsb
ds
lods
cmc
xchg
jmp
int
fadds
aad
cmp
cmpsb
xchg
lcall
mov
outsb
lret
mov
and
mov
mov
sarl
mov
xor
sbbl
push
and
push
aas
loope
xchg
xor
jp
enter
adc
sbb
add
fldcw
xor
mov
enter
xchg
rcrb
jmp
movl
push
ret
loop
stos
fnstenv
into
cmc
insb
mov
push
xor
fnstcw
sub
push
dec
sti
pop
add
jge
or
hlt
jge
ror
scas
and
pop
inc
cli
jmp
sti
ja
stc
sub
lods
cwtl
in
sbb
aam
inc
lds
mov
add
ss
cld
push
pop
mov
cmc
dec
lret
xchg
mov
ror
out
xor
nop
xchg
es
pushf
mov
jo
add
jl
mov
add
or
aad
les
outsl
out
sbb
inc
mov
or
clc
jb
leave
out
fcmovnu
jnp
xchg
repnz
int3
dec
insl
scas
std
pop
xchg
repnz
push
mov
inc
fsts
fcoml
mov
hlt
arpl
out
pop
sub
sbb
sbb
cmp
outsl
inc
mov
sbb
cld
xlat
insl
divb
out
pop
mov
fs
or
gs
shrl
outsl
sub
cmpsl
nop
sahf
and
inc
inc
lcall
leave
dec
outsl
dec
loope
call
adc
mov
mov
pushw
mov
popf
mov
push
pop
je
ss
insb
lcall
push
in
fdivl
xor
jmp
sbb
add
push
add
inc
rcr
inc
loopne
sbb
rorl
cld
push
int
nop
add
lahf
mov
adc
or
pop
cld
push
fucomip
divb
mov
sbb
dec
bound
js
xchg
shlb
sub
scas
sbb
or
clc
jecxz
fsts
xor
ror
jnp
dec
jmp
xchg
xchg
aam
fdivs
sti
dec
mov
fisubl
jbe
jl
adc
mov
lahf
dec
dec
mov
add
decl
out
aam
aaa
inc
in
stos
shrb
ret
lahf
icebp
pusha
hlt
movsl
xor
jb
fdivrl
adc
das
test
lahf
iret
daa
aas
cmp
push
aas
or
mov
cmc
jns
dec
mov
movsb
pop
xor
out
aaa
sbb
cmp
shl
jecxz
and
mov
push
xchg
jge
push
cs
dec
stos
ljmp
push
xor
inc
cmp
ret
mov
push
xchg
cmpsb
rcr
pop
lret
call
ret
xchg
int3
mov
stos
cmp
jl
int3
mov
jp
sbb
ja
jmp
iret
xor
add
mov
rorl
pop
stos
std
sbbb
and
mov
jnp
adc
leave
cmp
push
adc
cmpsb
mov
mov
xorb
dec
jge
rcrb
std
pop
or
xor
xor
xor
sbb
jmp
inc
or
dec
daa
fnstsw
cmpsb
or
adc
arpl
push
repnz
out
pop
test
sbb
cs
icebp
jbe
repnz
ud0
into
data16
cmpl
loopne
aam
xor
or
pop
lods
in
mov
fsubrl
mov
push
sti
aad
pop
test
jecxz
mov
arpl
cli
inc
imul
dec
iret
int3
or
mov
idivb
lret
cmp
or
lret
jnp
out
add
test
push
xchg
sbb
rorb
jl
out
inc
mov
fidivrl
xchg
in
rcrb
lods
fidivrl
movsl
inc
sub
push
and
adc
xchg
lcall
sub
push
pop
dec
xchg
pusha
mov
jbe
popa
shl
cmp
pop
push
lea
cwtl
push
push
pop
add
xchg
testb
popf
repz
insb
in
mov
hlt
dec
fcompl
int
popa
xchg
inc
bound
ret
into
ret
mov
jne
test
lods
cmpsl
push
int3
repz
mov
bnd
repz
sbb
fsts
push
adc
popa
call
fdivr
stos
xchg
xchg
push
adc
out
cmpb
push
fsubs
mov
insl
dec
cmp
cmp
sbb
je
pop
inc
sti
xchg
jb
mov
je
mov
xchg
jb
mov
ret
cmp
in
mov
pushf
push
aaa
fistpll
andb
sbb
adc
mov
add
mov
dec
xchg
xchg
mov
xor
insb
mov
mov
cmc
xor
add
ret
cmpb
shr
pop
cld
scas
data16
xor
aam
into
lds
fld1
inc
add
xor
pop
int
pop
xorl
or
jp
cwtl
imul
nop
imulb
xlat
inc
loopne
popa
sub
sbb
stos
mov
jnp
xor
cli
mov
jmp
je
aaa
dec
push
out
jge
xor
sub
and
jnp
jp
push
xlat
xor
pop
jmp
or
test
aas
loop
push
adc
pop
stc
xlat
push
movsb
adc
jecxz
aam
flds
adc
xchg
adc
insl
push
ret
pop
xchg
sbb
int
pop
int
sub
xchg
clc
mov
out
xor
fimuls
lret
cmp
daa
xor
cmpsl
push
rcr
lret
shlb
pop
adc
xchg
cmp
int
insb
mov
xchg
addb
and
ds
mov
lcall
dec
dec
cmp
xor
cli
loop
ret
mov
cmp
xorl
cli
mov
mov
insl
lock
jmp
out
pop
fldl
pop
shlb
out
sbb
push
jnp
mov
xchg
outsb
std
icebp
push
sub
fmul
fisubl
add
ficoml
pop
inc
inc
imul
dec
test
out
sbb
je
adc
dec
sub
mov
xchg
lods
inc
in
leave
lods
push
and
jns
xchg
ljmp
xchg
push
dec
cltd
xor
aad
out
cmp
xor
divl
inc
mov
ret
sahf
sbb
adc
mov
inc
sub
ss
inc
inc
pop
and
test
clc
cmp
jns
sbb
fsubrl
jne
or
mov
jp
mov
lods
sbb
enter
sub
scas
sbb
int
sbb
jecxz
fcomps
cwtl
sbb
pop
push
stos
lret
out
cmc
mull
pop
sub
mov
shlb
push
leave
add
push
das
push
aaa
bound
lods
jo
and
ret
xlat
jmp
jbe
imul
hlt
mov
add
cld
cmp
sarl
sbb
enter
inc
push
mov
inc
fadds
scas
pop
dec
jle
sbb
movsb
add
cltd
jne
fildl
jno
inc
and
leave
cmp
call
fisubs
stos
and
fcmove
enter
andl
fnstsw
in
mov
jb
lods
mulb
cmp
nop
xchg
cmp
scas
and
lret
je
sub
test
lret
lcall
push
lock
and
pop
cmp
cwtl
lahf
pop
mov
lret
cmc
mov
add
mov
ds
out
dec
push
out
inc
pop
inc
sub
add
imul
cmp
jge
mov
jo
inc
mov
or
pop
push
jne
pop
push
in
or
loop
sub
sub
jo
mov
data16
mov
imul
or
bound
test
pop
or
out
movsb
pop
mov
in
cwtl
pop
adc
sub
inc
adc
nop
imul
out
ficoms
dec
out
adc
mov
in
push
inc
icebp
data16
pop
adc
ss
push
pushf
jae
mov
filds
in
mov
test
or
test
and
sub
xor
mov
frstor
ret
adcb
xchg
mov
inc
data16
mov
mov
adc
fdivrp
pop
out
bound
xchg
cmpsb
push
mov
je
mov
mov
pop
mov
sbb
rorl
ja
mov
stc
mov
ret
push
fs
push
imul
xor
xchg
dec
xor
ljmp
sub
and
iret
neg
imulb
out
push
in
cli
adc
jno
sbb
push
or
mov
addr16
jp
and
xor
cs
pop
mul
fdivr
loopne
cwtl
inc
fwait
es
ficoml
sub
cmpsb
jmp
fimuls
sbb
hlt
mov
js
adc
mov
jl
mul
fwait
push
pop
arpl
mov
stos
pop
mov
pop
std
jmp
inc
xchg
lock
loope
inc
pushf
lret
mov
ds
aaa
stos
in
mov
lea
mov
int
insb
jg
out
aas
mov
pop
sub
fdivrl
cmp
fnsave
loope
pop
iret
sbb
aaa
dec
arpl
jge
sahf
mov
out
mov
daa
push
fsubs
insl
mov
pop
mov
sub
adcl
clc
stos
pop
and
push
clc
mov
popf
adc
sti
shrl
jecxz
arpl
jb
and
jno
xor
or
sub
adc
add
test
xchg
aas
adc
push
pop
fistps
push
pushf
icebp
mov
out
bnd
and
pop
jbe
add
or
fadds
jo
loopne,pn
aad
sbb
sbb
dec
outsl
lret
xchg
cmp
add
popa
pop
mov
adc
push
mov
mov
add
mov
jl
jl
stos
and
cli
add
and
sbb
test
ss
ficompl
xor
mov
out
push
add
or
fimull
into
mov
jg
movsl
rcl
mov
je
nop
insb
lret
les
sub
lcall
movsb
push
cmp
or
xlat
jl
sub
cmp
in
sarb
loop
mov
aas
sbb
data16
loopne
mov
and
imul
jnp
fs
mov
fwait
cld
rorl
sbbb
jp
jmp
pop
dec
rcr
rcr
xchg
inc
faddl
mov
push
adc
ret
xlat
dec
xchg
call
in
clc
push
cmpsb
adcl
dec
sti
mul
inc
push
sarl
es
adc
test
dec
inc
in
mov
es
sbb
inc
aaa
lock
lret
int3
sti
jb
hlt
mov
test
dec
cli
cmp
push
lock
inc
inc
jmp
adc
sub
movsb
cmp
enter
pop
lcall
scas
or
inc
cmp
mov
imul
mov
add
les
test
pop
movsb
and
push
jno
mov
mov
out
xchg
arpl
xor
call
mov
mov
cwtl
mov
adc
rclb
mov
mov
jo
dec
jnp
push
testl
sub
addr16
stos
xor
lcall
stos
fdivrs
leave
scas
cmp
pop
dec
movzbl
inc
sbb
sub
popf
leave
jb
adc
les
mov
adcl
mov
inc
test
xor
movsl
xor
push
leave
push
cmp
sub
xchg
jb
mov
lcall
dec
call
mov
leave
and
pop
inc
daa
or
nop
cltd
mov
pop
imul
dec
cld
cmpsl
sbb
test
xor
pop
jbe
shlb
xchg
jne
or
aas
lods
push
push
fadd
fcompl
cltd
add
mov
add
test
push
in
je
mov
outsb
cltd
out
mov
pop
loop
mov
lods
sub
sti
or
and
inc
dec
xchg
in
jmp
mov
loop
xor
xchg
push
loopne
add
and
mov
arpl
ds
adc
or
inc
adc
fldcw
aam
pop
pop
and
das
pop
push
cmp
push
cld
mov
push
insl
jecxz
lahf
shl
gs
andl
or
push
iret
push
or
fidivrs
leave
ljmp
mov
jb
fwait
and
inc
popl
jge
push
inc
mov
nop
pop
lea
test
lret
rclb
and
push
fbld
cmc
stc
adc
add
xchg
mov
icebp
add
add
lds
pop
or
dec
int
inc
bound
stc
lods
push
push
inc
ja
les
mov
mov
adc
fsubrs
xlat
push
in
push
out
push
in
loope
xor
ret
and
mov
out
adc
or
fs
xor
ljmp
in
out
mov
xorl
and
daa
shr
fnstenv
stos
shll
dec
or
and
dec
in
mov
lret
cmpsl
popf
data16
xor
push
lretw
ljmp
stos
mov
mov
popf
sub
aas
cmp
repz
cmp
mov
jmp
jmp
inc
xlat
mov
imul
mov
iret
fists
inc
mov
pop
popa
aad
cmpl
movsl
aaa
push
mov
push
daa
movsb
jmp
mov
mov
das
cmp
sbbb
vrcpps
fwait
cmpsb
data16
inc
add
xor
cmpsb
mov
dec
lea
xchg
jl
jl
shll
sub
test
lahf
lods
fwait
xchg
add
mov
and
jmp
xor
push
lret
mov
gs
mov
loopne
or
xor
inc
hlt
fwait
std
adc
mov
fmul
arpl
and
inc
test
xlat
mov
nop
fwait
mov
loopne
add
jo
mov
popf
addr16
insl
sub
fsubrs
lret
iret
rclb
sub
imul
sbb
lret
pushf
shll
movsl
stos
mov
add
in
in
loopne
int3
sub
xchg
xchg
std
stc
jle
scas
adc
ficompl
xor
cltd
add
sub
sbb
ret
sub
or
movsl
dec
jge
daa
cltd
lock
lods
fbstp
pop
pop
xorl
xchg
and
cmp
addb
fdiv
sub
and
jno
push
push
repz
scas
bsf
das
jmp
jg
in
add
les
enter
movsb
stos
repnz
sti
int
and
int3
punpcklwd
sarb
jno
sbb
aad
fucomp
jle
mov
daa
call
scas
xor
mov
xchg
and
lds
cltd
jmp
lahf
loopne
push
stc
xchg
rclb
and
shlb
ja
ljmp
popf
inc
mov
xor
jmp
call
aam
stc
jl
inc
out
fists
pop
rcll
or
stos
int
xorb
mul
sub
aam
xor
rorl
ret
lods
fmul
xchg
cwtl
sub
lds
fwait
gs
sar
popf
das
lret
adc
mov
jo
and
jns
fwait
cmpsl
mov
adc
jle
jmp
aaa
sbb
cli
xchg
and
cmp
push
mov
jno
inc
push
lods
mov
xor
in
push
fisttpl
jg
dec
xchg
pop
subb
pop
add
in
in
sub
pop
test
arpl
insl
dec
sbb
mov
xor
xchg
xor
fwait
adc
push
iret
sub
cli
nop
jno
dec
js
ja
cmc
or
sbb
xorl
jle
push
rorb
je
or
sub
mov
xchg
pop
cmp
or
ret
pop
rcrb
add
cs
jae
inc
out
ljmp
fsubs
bound
jns
dec
cld
xor
lods
mov
cmp
adc
aam
xchg
outsb
mov
les
cmpsb
fcompl
or
loop
or
in
push
outsl
int
sbb
cmp
xor
xlat
scas
and
pop
adc
inc
lcall
dec
jnp
pop
mov
dec
xchg
dec
test
aad
inc
insl
sbb
test
mov
lea
fsub
and
cmp
jp
rorb
dec
lods
cmpsb
sbb
invd
shll
jp
mov
xchg
push
les
outsl
xchg
push
sbb
scas
sarl
push
mov
gs
or
and
ss
inc
shlb
sub
out
xor
or
cli
inc
push
enter
cmc
cmp
rcll
mov
sbb
xor
ret
ret
orl
sbbl
push
sbb
les
push
xchg
push
out
fistpl
aad
aam
lods
adc
subl
xchg
dec
flds
jbe
cmp
sub
out
repz
sub
xor
and
jns
dec
or
sub
cmp
jl
jb
adc
gs
cmpsl
jl
sbbb
push
sahf
and
mov
jmp
jbe
repnz
loop
shlb
cmpl
jno
xchg
stc
inc
xor
cmpb
cmpsl
inc
push
sahf
insb
clc
int
cmp
fs
mov
push
mov
mov
call
mov
mov
xchg
xor
sti
mov
cmp
ja
xor
fs
rclb
and
dec
ret
cmp
iret
test
xor
jo
inc
adc
or
sub
jns
add
jne
js
adc
cwtl
add
sbb
lods
popa
and
rcrl
inc
jbe
dec
mov
popf
xchg
shlb
call
push
js
icebp
xchg
sbb
mov
out
push
pop
fwait
mov
mov
xchg
mov
jmp
add
mov
arpl
mov
lds
aad
mov
mov
dec
shll
leave
lcall
or
jns
shrb
mov
loope
dec
add
pop
notb
mov
test
jmp
and
test
jle
enter
mov
popf
sub
add
out
inc
mov
xchg
pop
std
or
out
ds
lds
or
add
fdivrs
and
ljmp
fimull
scas
cmpsb
ljmp
clc
stc
stc
mov
enter
add
imul
pop
sarb
pop
movsl
sbb
sub
add
movsl
dec
enter
pushl
leave
imul
mov
outsb
push
lea
or
and
push
gs
std
mov
ficompl
aaa
sub
lea
xor
sub
sub
lods
enter
mov
fistpll
movsb
and
mov
mov
adc
cmc
das
leave
aaa
lret
cmp
sahf
push
or
sub
cld
jmp
sbb
xor
add
dec
lods
fwait
jo
jno
out
out
dec
test
or
sti
rclb
xchg
and
int3
push
pop
xchg
je
std
aad
pop
test
addr16
stos
inc
add
lea
sbb
sub
inc
cmpsl
pop
scas
call
mov
out
mov
mov
jp
xlat
sub
sub
push
subl
xor
add
outsb
mov
call
divl
xchg
pop
repz
sub
xchg
push
dec
dec
push
xchg
lahf
jg
aad
pop
test
out
mov
rorb
push
ret
test
leave
nop
cmpsl
or
imul
clc
ljmp
push
mov
mov
arpl
stc
adc
pop
cmp
mov
jne
sbbb
fwait
sub
push
mov
lock
je
mov
or
sbb
outsl
sarb
mov
add
sub
lods
sub
pop
push
xchg
sub
jae
aaa
jecxz
jo
dec
es
sub
dec
push
or
adc
ss
mov
inc
mov
inc
aas
inc
or
out
les
jg
xchg
popa
daa
decl
cmpsb
cmp
repnz
dec
sbb
cmpsb
jne
clc
popf
shll
in
inc
jnp
ljmp
cwtl
lret
lcall
scas
dec
mov
movb
cld
cmp
fdiv
cmp
mov
movsl
les
push
cmp
fsubrl
inc
sbb
loopne
mov
inc
xor
test
stos
popf
push
xor
jmp
aad
dec
xchg
sub
sbb
cltd
out
aaa
sub
fs
orb
fldenv
cltd
or
cmpsb
dec
mov
popf
loopne
cmp
aas
cs
and
inc
ljmp
xchg
imull
xor
subb
push
jle
out
jmp
mov
sbb
scas
adc
daa
mov
in
mov
pusha
inc
cmp
call
add
in
jle
in
xchg
cli
xchg
xchg
shrb
enter
dec
cmpsb
mov
stos
cmp
notb
popa
dec
push
scas
adc
add
ret
fcoml
jmp
fimuls
inc
and
mov
movl
sahf
daa
aaa
in
xor
inc
and
les
push
inc
mov
adc
xchg
add
jno
fstpt
stc
bound
push
addl
repnz
xchg
add
inc
arpl
shlb
lcall
pop
push
notb
insl
aam
xchg
sahf
jo
push
movsb
mov
mov
iret
rcrl
test
sub
dec
ficompl
push
shlb
mov
subb
data16
xchg
adc
test
test
inc
add
lcall
add
aas
adcl
adc
mov
lods
add
sbb
push
jmp
and
rcrb
push
cltd
pop
jo
sbb
lcall
in
popa
xor
iret
hlt
ljmp
cli
push
push
cmp
out
mov
ret
es
insb
xor
and
ror
jo
shll
and
leave
jmp
cwtl
aas
jg
jmp
cli
push
or
push
outsb
sbb
and
sub
int
mov
mov
iret
cmp
adc
fisttpl
daa
sub
push
in
push
inc
mov
imull
xor
stos
jge
je
push
stc
or
mov
aad
lock
pusha
push
fsubrl
adc
fstps
xchg
cli
push
push
jl
mov
sub
aad
inc
inc
bound
inc
in
mov
add
fnstsw
fld
mov
jae
sub
and
out
aam
mov
jp
inc
cmpsb
cmpsb
paddq
cli
shll
and
adc
lcall
push
xchg
pminub
adc
leave
bound
stos
fldl
jae
out
mov
jae
mov
xlat
gs
jb
and
push
sbb
jae
and
fbstp
int
test
imul
mov
xchg
ss
std
mov
pop
adc
pop
data16
roll
push
stos
push
out
rorb
push
dec
pop
mov
jb
test
lret
out
fcmove
loopne
test
adc
or
cmp
jmp
inc
sub
xchg
jo
cmc
mov
or
dec
pop
aad
iret
adc
mov
pop
test
sbb
pop
mov
xchg
mov
subb
outsb
popf
adc
js
incl
mov
mov
inc
mov
cmp
cmpsb
dec
data16
stc
ljmp
sub
gs
pop
pop
push
adc
pop
sbb
data16
mov
aas
divb
jo
xor
xchg
sti
out
xchg
xor
xor
es
xlat
rcrl
xchg
or
mov
mov
or
and
xchg
cmc
pop
out
mov
rcrb
push
aam
fsubs
jge
adcw
inc
mov
out
movsl
addr16
in
lret
mov
push
add
cmpsb
fbstp
add
aas
jns
push
ss
cld
sbb
adc
xor
cwtl
ja
mov
popf
rcrl
jb
hlt
daa
nop
imul
xchg
xor
jno
scas
cwtl
xor
lahf
clc
test
adc
mull
jmp
sub
pop
addr16
add
ss
ficoms
lret
daa
sbb
jle
sub
sub
xor
int
out
js
push
mov
sub
xor
ret
cmp
dec
roll
in
xchg
and
int
in
jne
movsl
and
pop
es
sub
jge
lcall
and
insb
cmp
fisttpl
clc
inc
mov
pop
fs
mov
aaa
ljmp
push
jmp
mov
jl
bound
add
fs
rorl
pop
iret
xorl
mov
mov
push
lcall
jle
data16
push
cmp
cmovbe
lock
hlt
jnp
push
push
mov
sbb
out
rcr
jle
sub
or
rorl
push
fnstsw
rorb
and
sub
popf
mov
xchg
or
sub
repnz
enter
popf
jns
rcr
test
sbb
cmp
inc
pop
add
mov
scas
dec
aaa
pop
lcall
cmp
fidivrl
es
adc
cmp
sub
push
sbb
xchg
cld
lret
sbb
dec
cmpsl
mov
shlb
cmpsb
mov
mov
loope
rcrb
lods
movsb
sub
jae
xor
cwtl
jb
xorl
or
pop
cmp
push
in
out
push
dec
std
dec
stos
xor
xor
orl
add
inc
or
stos
xchg
or
mov
sbb
icebp
aam
inc
pusha
jp
mov
adc
outsl
xor
xor
pop
or
repz
fcomi
je
add
mov
pop
ljmp
ja
sbb
jnp
cmp
mov
mov
xor
add
jmp
pop
mov
cmp
mov
mov
mov
and
adc
cltd
js
clc
ja
out
jno
aam
mov
mov
push
add
test
shlb
sbb
xchg
ljmp
mov
js
pop
sub
adc
jp
into
dec
fidivl
xor
aas
fucom
pop
xor
in
ret
fs
jle
leave
stos
adc
gs
xor
aad
sarl
pop
mov
mov
ret
xchg
test
aaa
cli
jb
lods
repz
or
lret
daa
cmp
sub
xchg
out
popf
adc
xlat
out
mov
pop
imul
sbb
pop
and
imul
and
lds
lret
inc
cld
popf
fistps
jo
es
repnz
movsl
push
mov
aam
sub
xchg
dec
loopne
pop
sub
push
in
pop
sub
sub
jp
jae
ret
mull
movb
test
dec
dec
mov
leave
jp
mov
scas
inc
pop
enter
imul
and
and
pop
inc
xchg
xor
xchg
mov
gs
in
pop
fsubrp
fwait
push
loope
xlat
push
adc
cmpl
xlat
shlb
or
les
pop
arpl
xchg
insb
fcoml
dec
mov
dec
mov
jl
neg
pop
inc
mov
jno
xchg
push
mov
test
pop
xor
rep
cli
jne
cmpsl
call
fmul
cmp
stos
das
xchg
inc
jl
fisubrs
and
iret
subl
xchg
imul
sbb
mov
idivb
push
sub
jmp
xor
jbe
inc
xchg
fucomi
in
jl
mov
pop
in
dec
dec
pop
test
inc
lods
jecxz
mov
push
inc
cmc
nop
enter
aas
mov
jg
and
stc
jl
push
leave
xchg
add
sti
and
loope
add
gs
jmp
adc
test
movsb
push
mov
stos
jecxz
and
fistpl
push
sub
sub
pop
lcall
call
loope
movsl
mov
sbb
xchg
and
subl
jns
sbb
aam
addr16
inc
jae
sahf
push
movsb
sarb
adcb
je
std
mov
ja
push
je
hlt
fneni(8087
mov
in
cmpsl
mov
and
into
sbb
jns
sub
lds
das
adc
cwtl
mov
idiv
jl
pop
xchg
cmpb
loopne
xchg
add
sub
inc
inc
cltd
push
mov
das
test
mov
pop
cmp
fs
mov
add
inc
pop
push
inc
xchg
pop
test
add
and
jle
das
push
ret
lods
pop
push
pop
sub
dec
sti
mov
xor
call
ljmp
test
mov
pop
mov
push
loop
sub
and
es
nop
and
lret
cmp
les
ja
and
mov
out
sbb
sub
sbb
shlb
jb
jge
sub
mov
fs
lds
fiaddl
xchg
push
ja
xchg
push
adc
ljmp
jp
leave
and
lds
xchg
or
or
pop
xchg
mov
sub
sub
fistl
sarl
dec
mov
dec
test
ja
fildll
lret
cmp
fdivl
outsl
dec
adc
and
inc
out
stos
jae
adc
push
mov
lret
repz
cmp
add
aas
sub
xchg
cmp
test
lahf
push
jl
sbb
iret
sarl
aas
repnz
idiv
lea
push
xchg
cs
xchg
inc
or
jnp
rcrl
out
adc
sbb
mov
dec
stos
outsl
addr16
fildl
data16
imul
out
movsl
sub
test
jns
jecxz
inc
lds
arpl
jmp
fdecstp
mov
and
jo
xor
in
sarl
push
imul
inc
push
xchg
pushf
imul
imul
rcrb
data16
mov
arpl
cld
cld
test
push
lock
in
adc
dec
or
aad
pop
jne
aad
out
cmp
mov
lahf
mov
adc
push
and
push
out
sti
pop
fstpl
mov
bound
jmp
xor
push
mov
jae
into
fiaddl
jge
jg
add
out
inc
xor
nop
dec
mov
jl
pop
in
push
pop
and
fimull
fcompp
dec
jae
paddsw
lret
and
adc
test
cltd
fdivp
mov
lods
xor
call
lock
or
mov
jge
mov
pop
aam
insl
mov
repnz
jge
adc
inc
xchg
jb
mov
xchg
sub
xor
jne
movsl
adc
mov
push
daa
rolb
aad
int3
test
dec
pop
xorb
mov
sarl
mov
mov
test
and
unpcklps
lods
imul
sti
mov
and
cmp
and
or
mov
push
mov
int
xchg
insl
sbb
dec
sbb
sub
inc
ja
call
mov
dec
dec
std
loopne
jne
dec
pop
lahf
std
or
movb
ja
test
scas
repnz
aam
aaa
test
sub
fsubrl
xor
test
and
pop
cli
xchg
xchg
ja
loop
jle
ficoms
cld
loope
mov
test
add
in
dec
push
and
push
andl
jg
xchg
add
jp
mov
iret
lret
dec
int3
shlb
jnp
dec
add
mov
gs
fldcw
pop
mov
call
and
push
repz
lcall
xor
jmp
movsb
mov
mov
sbb
insb
ss
jl
es
call
mov
popf
xchg
pop
sbb
jp
int
ljmp
add
cmp
mov
dec
adc
mov
and
idivl
mov
push
test
or
cs
pop
shll
adc
outsb
add
les
push
lcall
pop
sub
push
push
test
xchg
jl
les
jle
xchg
lock
outsb
or
mov
xor
lcall
fmuls
orl
cmpsb
cmpsl
sbb
cmp
sbb
stos
nop
add
push
pop
xchg
in
inc
in
push
xchg
jecxz
pop
fimull
mov
xor
push
in
enter
sub
dec
adc
cmp
scas
rol
sbb
and
dec
aam
pop
pop
sub
frstor
pusha
aad
and
xchg
or
cld
arpl
xor
rolb
pop
inc
int
sub
push
jp
xchg
push
lahf
dec
insb
cmp
pusha
or
jge
xor
xchg
xor
jns
sbb
xchg
imulb
jg
and
cld
or
hlt
cmc
inc
fldt
mov
es
imul
leave
pop
push
xchg
inc
cld
pop
iret
sub
stos
mov
test
push
pop
call
repnz
push
add
inc
mov
sbb
lcall
add
mov
jne
test
sub
mov
dec
jo
popf
xor
jmp
push
pushf
push
mov
jmp
dec
cmp
sbb
jle
cvtdq2ps
or
outsl
xchg
mov
jecxz
insb
adc
sub
mov
jl
out
push
stc
repz
sub
mov
vpsllq
or
imul
sub
pop
adc
pop
lret
lods
daa
mov
divl
pop
jo
testb
aaa
movsl
loopne
dec
sti
int
xchg
imul
call
inc
jo
or
adc
orl
test
insb
fistps
sub
push
sbb
aam
push
daa
in
xor
mov
or
pushl
xchg
ljmp
das
rol
insl
out
loop
pop
lret
or
sbb
in
mov
sbb
cmp
pop
dec
sbb
test
push
pop
jnp
hlt
jne
cmpsb
shrb
insb
jo
pop
jbe
xchg
ret
jae
push
sbb
mov
cltd
mov
push
and
mov
push
pop
xor
push
fiaddl
lods
xor
cltd
dec
mov
aas
pop
outsb
add
cmpsl
loop
mov
into
iret
mov
in
fwait
mov
lods
cltd
out
mov
cs
jbe
enter
in
lods
dec
sbb
cwtl
adc
insl
xor
roll
jae
cs
mov
jge
popa
dec
pop
mov
jns
bound
out
popf
addb
or
inc
or
jecxz
stos
add
sub
dec
push
daa
xor
mov
cmp
or
sub
in
pop
dec
outsb
in
les
into
lds
cmp
iret
jmp
push
stos
xor
jae
sub
sbbl
cmpsl
call
mov
shll
mov
out
addb
test
xor
xchg
mov
cltd
mov
out
in
or
sbb
repz
rcrl
add
sarb
pop
aas
jne
daa
pushf
adc
popf
pop
dec
movsb
jb
push
adc
xor
arpl
es
out
fs
ret
stos
mov
lret
xchg
and
shll
dec
sti
jge
cmpsb
jmp
int
sub
cmp
jbe
mov
sub
push
leave
push
cmp
and
mov
aas
ja
mov
push
xchg
pusha
int3
jl
sbb
fucom
sahf
pop
ja
xchg
inc
subb
or
repnz
xchg
add
gs
popf
or
mov
das
push
aam
mov
jbe
lea
ss
lret
lds
js
push
loopne
das
ds
sub
ficoms
mov
sub
inc
dec
jmp
dec
jns
iret
fadds
scas
subb
testl
mov
xchg
rclb
mov
adc
mov
test
jmp
je
repnz
popf
fld
jnp
or
mov
or
out
add
in
push
xor
add
xchg
mov
push
jbe
pop
test
jmp
lea
imul
popa
daa
pop
fdivrl
scas
and
pushf
xlat
sbb
andl
cwtl
scas
dec
inc
sbb
mov
inc
js
add
jle
loop
and
inc
mov
sub
inc
pop
mov
add
jne
xor
mov
xchg
bound
aam
mov
mov
inc
fs
xor
push
cmp
es
dec
clc
mov
jmp
cmp
fimuls
jbe
jecxz
inc
movsl
movsb
jno
mov
mov
sbb
sarb
mov
mov
add
or
fisubl
rcrb
lea
pusha
push
push
pop
rcrb
inc
loopne
lret
mov
dec
sbb
xorb
mov
icebp
jb
fs
push
pop
sbb
nop
lods
xchg
lahf
pop
pop
loope
cmp
dec
lahf
and
bound
cmp
push
jle
rclb
js
es
adc
mov
enter
faddl
adc
adc
xor
outsl
pop
adc
adc
inc
mov
inc
sbb
hlt
leave
pop
xchg
jbe
stos
jno
mov
test
ret
popa
imul
es
gs
jge
xor
inc
push
push
loopne
mov
shl
in
lock
cmpsb
sub
jge
cmp
push
push
fwait
cld
dec
je
in
sub
jge
inc
push
inc
dec
pop
ss
or
push
and
or
dec
jns
mov
push
and
hlt
jo
les
popf
cmc
aas
out
mov
subps
add
sub
stc
sub
in
push
movsl
test
adc
push
jge
mov
es
scas
jnp
ljmp
dec
sbb
movsl
push
pop
repz
and
out
cmpsl
push
sbb
sub
dec
ret
shll
movb
loopne
neg
and
fdivrs
jbe
pop
jbe
dec
dec
addb
das
arpl
jb
enterw
cltd
sahf
or
cmc
push
mov
movsb
stos
pushf
xor
push
jl
cmp
outsb
push
dec
add
mov
dec
add
dec
push
inc
imulb
imul
dec
scas
cli
out
push
mov
repnz
inc
cmp
mov
psrld
dec
adc
or
cmpsl
inc
pop
aaa
lret
xchg
and
adc
outsl
cmp
std
aaa
out
cmp
xor
faddl
jecxz
xchg
adc
stos
or
jbe
push
pop
test
ret
inc
cmp
mov
adc
mov
fnsave
ds
mov
andl
and
jecxz
cmp
cld
in
dec
mov
lahf
ficompl
xchg
repz
pop
loopne
into
js
mov
popa
imul
sar
out
sub
in
sbb
or
cli
jmp
cmc
lret
xor
cmpsl
or
les
jp
sbb
cwtl
jmp
push
push
push
lea
xchg
push
or
sti
pop
xlat
rcr
or
jecxz
enter
imul
outsl
jge
enter
in
sti
sbb
mov
mov
pop
jbe
aam
fistl
imul
mov
xchg
adc
push
jecxz
add
mov
add
xchg
xchg
sbb
push
jmp
loope
popa
push
out
lret
out
dec
or
xor
movsl
es
dec
pop
mov
stc
adc
loope
loop
sub
fstl
jecxz
xchg
bound
fildl
xlat
testl
mov
pusha
push
pop
add
inc
xor
in
or
add
add
adc
sub
xor
jbe
into
mov
iret
out
add
jb
and
jmp
mov
jge
in
or
pop
add
insl
stos
xor
mov
xchg
pop
inc
imul
movsl
cmp
mov
iret
xlat
xchg
fucomp
inc
ljmp
push
aad
mov
enter
cmpsb
and
sub
testl
out
pop
pop
popa
idiv
inc
pop
mov
push
mov
nop
les
pop
jecxz,pt
xor
roll
mov
xchg
mov
int3
lahf
imul
mov
test
and
push
sub
leave
aas
pop
repz
cmp
mov
jp
ja
and
or
mov
mov
push
cmp
sbb
cs
in
sar
nop
dec
inc
fstpt
rcrl
and
out
enter
dec
int
enter
inc
jns,pt
pop
in
imul
add
or
dec
xor
pushf
lock
jle
pop
cltd
rcll
test
or
jle
notb
jp
inc
je
and
pop
out
sub
stos
fcomps
jle
ds
out
rcll
scas
pop
cmpsb
hlt
fcmovnb
push
and
std
jge
into
dec
mov
cmpsl
adc
into
jmp
inc
sub
sarb
dec
push
push
inc
add
sbb
dec
xchg
loop
push
clc
push
test
push
scas
ja
popf
hlt
je
enter
cmc
and
aas
lret
push
or
xchg
sbb
push
pusha
cmp
xor
cli
mov
cmp
cmp
inc
and
cld
push
and
mov
jns
adc
lret
jns
jno
cmp
enter
sbb
sbb
jnp
push
mov
aaa
jne
mov
pop
sbb
mov
rcrb
jle
and
and
in
or
inc
mov
in
imul
mov
inc
stos
jmp
rorb
xchg
test
jle
test
pop
xor
into
loop
mov
mov
or
or
push
loope
inc
icebp
int3
push
inc
jmp
mov
adc
sbb
mov
call
xchg
push
in
push
fstl
insb
cmpsb
push
bound
or
icebp
push
int
add
mov
stos
jo,pt
out
cli
mov
mov
adcl
dec
test
add
leave
and
add
test
push
fdivl
in
out
jns
jp
and
sbb
cmp
addl
mov
jg,pn
lret
cmp
scas
sbb
loope
les
cmpsb
popa
js
ss
push
push
dec
xor
mov
jns
jae
cmc
add
cld
repnz
fimull
adc
popa
pop
test
testl
or
sub
dec
ret
pop
lret
iret
sbb
dec
in
inc
adc
cmp
cmp
jns
subb
gs
je
fidivrl
push
pop
sbb
sub
cld
or
cli
or
out
mov
aam
add
cmp
fstpt
lea
std
and
or
shlb
mov
xor
sbb
xchg
lcall
insl
jns
pop
bound
xor
sub
push
sub
dec
stos
das
popa
loopne
pop
lock
cltd
fcomp
jg
aaa
and
rorb
cmp
out
add
jns
mov
dec
adc
and
or
jp
cmp
or
loope
icebp
mov
data16
pop
jae
mov
enter
jbe
xor
int
pop
scas
push
dec
pop
out
mov
fmull
add
push
sub
jg
stos
dec
fisubrl
jp
push
lret
popf
cld
insl
in
inc
xor
mov
jmp
mov
pop
mov
outsl
fidivrl
push
mov
xorl
sbb
mov
push
ds
push
into
add
push
jge
jg
int
and
push
enter
leave
mov
sbb
pop
inc
or
out
mov
test
sub
test
mov
sub
sbb
bound
push
mov
mov
fildl
pop
jl
enter
add
adc
sub
rcl
fs
insl
out
popf
adc
arpl
fnstsw
out
aad
dec
scas
lods
jl
jne
pop
xchg
inc
es
mov
add
lret
sub
mov
and
das
push
cli
xor
mov
mov
mov
stos
rol
adc
ss
mov
repz
xor
jno
stos
jmp
add
sbb
cmp
inc
or
or
pusha
jns
lahf
fwait
lcall
aam
addb
mov
decb
xor
into
jge
add
jp
cmp
arpl
jno
shl
addr16
outsl
mov
sarl
adc
or
inc
mov
sbb
call
das
push
push
xchg
test
jecxz
lahf
imul
fstl
leave
jp
jb
outsl
lock
rorb
mov
mov
xchg
xchg
mov
mov
jecxz
or
movsb
fs
jp
mov
bound
cli
in
adc
mov
jl
fwait
pop
jg
mov
xor
dec
cmp
xchg
mov
sub
jns
inc
mov
out
mov
imul
mov
ss
pop
pop
notl
out
mov
out
clc
xchg
or
neg
add
int3
pop
jmp
test
push
or
fdivrl
sub
lahf
mov
sbb
iret
xor
ret
ret
add
pop
mov
cmp
and
out
test
cs
cwtl
inc
and
pop
jl
xlat
adc
in
xchg
addb
out
mov
pop
mov
xchg
out
mov
and
dec
xlat
or
insb
iret
sbb
imul
clc
push
mov
and
add
sub
hlt
mov
in
das
daa
or
and
push
ret
fsts
add
loop
mov
lods
dec
jnp
push
or
ss
or
lods
shlb
and
aam
cmp
sub
mov
repnz
popf
xor
push
sub
loopne
pop
ss
push
xor
repz
andnps
mov
dec
arpl
cmp
clc
jle
aad
out
adc
cmpsb
pop
testl
mov
lds
jae
cltd
xlat
cmpsb
xchg
inc
rorb
fwait
push
inc
dec
mov
jmp
adc
add
push
add
or
sub
test
cmp
cmp
cltd
pop
adc
adc
mov
out
loope
push
or
add
xchg
xor
enter
pop
add
jle
xor
pop
jg
jae
ds
xchg
adc
jno
pop
sahf
je
cmp
loopne
mov
cmp
sub
xor
lock
lods
movsb
lret
mov
in
call
aam
and
dec
xlat
into
sarl
repnz
sub
pop
xchg
hlt
push
cwtl
pusha
ja
jmp
cmp
ret
jns
mov
fidivrl
mulb
shll
loopne
pop
js
or
pop
xchg
sub
ss
sbb
shlb
iret
inc
mov
jecxz
insb
out
ljmp
addr16
sub
cltd
repnz
lea
mov
pop
dec
aaa
mov
push
fildl
xchg
js
movsb
add
sub
mov
mov
sbb
and
or
icebp
jae
mov
lods
inc
mov
in
notb
in
mov
inc
pop
sbb
pop
sub
aam
incl
push
imul
outsl
cltd
jmp
test
mov
aam
leave
ds
int3
shll
hlt
js
xor
sahf
pop
divl
dec
movsl
cli
xchg
jno
mov
aas
mov
inc
js
xor
out
inc
sbb
adc
and
sbb
dec
pop
add
jge
dec
adc
fsubl
add
xchg
insl
repnz
dec
lods
mov
shlb
mov
jecxz
lret
fiadds
xchg
cmpsb
ret
int
outsl
xchg
outsb
mov
add
imul
mov
ss
push
ljmp
mov
sti
sbb
int3
loope
cmpsl
jae
mull
xor
mov
cmp
mov
xor
add
push
pusha
inc
xor
mov
pop
aam
inc
lahf
adc
dec
mov
or
sbb
cmc
dec
sub
cmpsl
dec
or
sub
sbb
loope
scas
mov
mov
pop
sub
test
cmp
push
pop
mov
popf
pop
arpl
push
dec
push
into
inc
jb
mov
xor
pop
dec
in
pop
jb
push
jmp
xor
pop
and
test
mov
pop
stos
mov
test
mov
sub
mov
lods
or
outsl
push
rcr
sarb
xchg
ror
rolb
push
test
mov
adc
cmpsb
sub
dec
inc
mov
pop
std
pusha
xchg
pusha
cmp
mov
int3
push
mov
out
pop
or
pop
xchg
jecxz
lds
adc
jge
in
sub
pusha
nop
or
shlb
daa
lret
cmpl
out
xorb
ret
dec
jns
jne
xor
sbb
pop
pop
and
frstor
pop
cmpsb
xor
mov
add
bound
ss
movsl
ret
addr16
inc
scas
insb
clc
das
mov
jmp
mov
mov
add
js
shll
jae
rclb
scas
mov
mov
push
or
das
push
mov
xchg
loope
jb
lret
es
test
outsb
xor
loop
mov
pop
loopne
xchg
dec
and
mov
pop
lods
jo
cmpl
lcall
or
fldt
popf
loop
std
sub
clc
int
in
cmpb
cmp
push
lcall
fisttps
sub
das
dec
dec
xorb
aam
stc
jnp
push
mov
lahf
pop
and
scas
jmp
and
popa
mov
out
cmp
mov
ds
in
or
pusha
mov
jmp
test
outsl
cmp
lock
es
imul
or
outsb
or
loope
xor
mov
mov
inc
xchg
in
add
shll
retw
sbb
inc
mov
and
sbb
xchg
mov
lahf
inc
rcl
inc
loopne
mov
into
cli
andl
cmp
out
enter
and
dec
fcomps
push
adc
and
jbe
pop
insb
shlb
push
push
jo
pop
and
sti
mov
jo
mov
sbb
imul
imull
sbb
aad
dec
jg
lret
cs
fsubs
xor
mov
mov
mov
rcrl
jge
mov
jge
nop
and
xchg
cmc
test
imul
jecxz
or
cs
fwait
fwait
shlb
mov
std
es
bound
cmp
pop
cs
xchg
jb
dec
pop
cwtl
adc
jecxz
push
sbb
xor
mov
jl
test
xor
je
pop
dec
sbb
arpl
inc
adc
cmp
inc
sbb
sbb
mov
push
push
sub
lds
outsb
es
jne
jno
and
mov
icebp
icebp
pop
stos
mov
adc
fmull
rcll
jge
loope
ror
rdmsr
xchg
jle
pop
dec
adc
gs
cmp
cwtl
mov
fimuls
mov
mov
jmp
outsb
test
cmp
sbb
mov
xor
push
shll
fs
mov
lret
xchg
mov
popf
cs
jmp
imul
inc
pusha
cmp
push
loopne
mull
or
push
xchg
enter
cld
test
sub
in
imul
imul
stos
das
int3
mov
hlt
popf
gs
inc
fsubr
int3
sbb
and
pop
dec
cmc
push
push
or
mov
mov
sti
dec
and
call
addr16
or
dec
stos
loop
test
bound
cmc
sbb
mov
fnstenv
insl
or
lds
int
push
loopne
faddp
xor
shll
cwtl
ja
sub
sbb
pop
jge
out
not
mov
test
pushf
outsb
push
shlb
mov
jl
in
lahf
es
test
bound
in
pmulhuw
add
fstl
mov
scas
enter
fidivs
cmp
rcrb
push
repnz
sbb
iret
jnp
shl
mov
mov
mov
bound
test
xor
inc
aas
filds
inc
xchg
jmp
jg
xchg
lret
push
les
xchg
cmp
pop
jp
imul
cltd
add
mov
xor
cmp
fwait
sbb
xor
adc
jmp
cwtl
jp
xor
ret
mov
dec
inc
xor
mov
mov
lods
das
xlat
icebp
and
jbe
aam
push
test
xlat
push
icebp
lock
popl
jne
xor
mov
xchg
and
or
jg
mov
inc
mov
and
xchg
or
pop
cld
mov
imul
in
jl
pop
mov
fbstp
fbstp
outsl
add
imul
mov
push
jnp
cmp
mov
cli
adc
rcrb
mov
push
in
scas
shrb
inc
pop
adc
cmp
mov
out
lahf
push
pop
jno
mov
hlt
adc
cld
inc
push
and
jge
lods
leave
mov
and
jp
jecxz
lods
pushf
mov
mov
pop
scas
push
xchg
popa
cmp
jae
lods
imul
arpl
pop
jmp
push
mov
jbe
lods
mov
jne
cmp
in
push
dec
movsb
xchg
pop
fildll
mov
adc
push
add
mov
add
xor
mov
andl
cmp
and
push
mov
or
push
fstpl
mov
adc
int
ret
int3
mov
mov
push
cld
pop
cli
mov
nop
fldenv
dec
dec
mov
inc
iret
js
adc
mov
out
jmp
flds
mov
mov
mov
out
das
inc
jb
lds
push
push
pop
iret
lcall
adc
xor
jmp
push
sbb
test
pop
push
dec
sub
adc
xchg
inc
repz
inc
fdivs
ss
rcrl
add
mov
mov
mov
sub
lea
push
dec
ffree
aaa
inc
push
xor
std
mov
mov
add
inc
jecxz
ss
push
test
loopne
and
inc
aaa
out
out
and
xlat
push
adc
andb
jge
lcall
adc
jg
sub
repnz
lds
jge
jae
and
int
cmc
testb
mov
inc
mov
ret
movsl
jnp
cmpsl
mov
mov
call
inc
push
int
jae
ret
mov
hlt
popf
rclb
ljmp
andl
jo
in
xchg
test
imul
ret
xchg
mov
xchg
loop
mov
hlt
adc
loop
jp
add
lret
mov
lea
xor
enter
xchg
push
aaa
jno
add
in
clc
dec
test
dec
sarb
or
push
arpl
dec
or
mov
and
subl
sbb
inc
or
push
loop
pop
into
fcomps
and
jmp
pusha
xchg
fisttpll
sti
inc
adc
mov
pusha
pop
pop
outsl
push
inc
dec
out
mull
loopne
lret
xchg
leave
js
out
add
inc
pusha
ret
jge
and
mov
pop
into
cltd
and
pop
cmpsb
sub
sahf
push
aas
lds
jae
shrb
aad
pop
xchg
sarl
js
and
jnp
cmc
stos
iret
mov
enter
adc
and
mov
cmp
and
mov
fildl
pop
cwtl
cmc
adc
xor
sub
push
adc
adc
pop
add
insb
lahf
lea
jae
sbb
sbb
das
mov
sbb
inc
int
xchg
xor
xor
xor
ljmp
mov
push
and
scas
xor
cmpsb
leave
lea
ret
movsb
int
jecxz
pop
test
push
decl
ds
in
add
stos
mov
mov
cwtl
pop
into
je
iret
and
aaa
or
and
stc
std
fwait
inc
cmp
mov
testb
xor
xor
pop
or
aam
test
fbld
lds
push
dec
cld
scas
adcl
push
cmpsl
add
adc
push
test
decl
add
repnz
pop
lret
jbe
rorb
mov
out
pop
sub
mov
addr16
subl
psubusb
mov
cmpsl
lods
fidivl
dec
mov
adc
mov
jbe
cs
repnz
sbb
dec
xchg
xchg
xor
icebp
icebp
xchg
test
fcmovb
js
test
inc
repnz
cmp
mov
jge
pop
sub
mov
cmpsb
out
jns
nop
jns
pop
iret
jno
movsl
jno
dec
lock
dec
lret
into
mov
or
xchg
inc
std
add
add
les
into
cmpsl
mov
cmpsb
mov
adc
stos
cmpsb
decb
std
adcb
and
push
dec
outsl
inc
mov
and
push
sub
inc
fdivl
cmpsb
fwait
int
mov
pop
jl
mov
rcl
enter
jecxz
nop
mov
dec
cmp
inc
adc
mov
push
loope
popf
dec
or
cli
push
es
xor
dec
xchg
push
xor
lret
jg
lea
or
inc
xor
pusha
je
push
pop
sub
outsb
push
cmp
jecxz
test
lods
pop
pop
pop
pop
lret
jbe
in
arpl
sbb
or
add
icebp
or
inc
or
sti
cmp
sub
cmpsb
into
mov
ljmp
sbb
mov
push
lret
adc
sub
notl
lahf
jl
or
cli
xchg
cmpsl
negb
fisttpl
jl
and
push
mov
hlt
add
std
icebp
mov
aaa
in
pusha
inc
cmp
fwait
mov
sbb
sub
mov
mov
cmovns
sub
shr
mov
gs
add
clc
movsl
pusha
jmp
js
dec
ljmp
out
popf
or
mov
int
inc
stc
ja
mov
scas
rol
sbb
xchg
mov
fimuls
cmpsl
jp
inc
fwait
adc
jg
cmpsb
fwait
xchg
mov
xor
lods
ficoml
shlb
mov
push
pop
loop
jo
xchg
inc
insb
dec
outsb
test
mov
and
push
popa
jne
clc
icebp
jnp
push
jnp
or
pushf
xchg
mov
lds
and
add
mov
cmp
out
sti
xchg
cmpsb
inc
cmp
test
insl
jmp
pop
xchg
jns
sub
cmp
imul
sbb
xor
aad
mov
int
repnz
in
pop
add
inc
ficompl
xchg
sub
mov
repnz
push
adc
adc
push
shrl
xor
mov
xor
xchg
test
popa
cmpl
inc
jo
les
mov
mov
mov
fadds
pop
fbld
mov
fisttpl
rol
mov
inc
das
mov
push
lmsw
inc
and
jo
repz
sti
popa
push
insl
and
pop
mov
mov
fcoml
arpl
sub
add
movsl
pop
xor
outsb
scas
add
leave
out
sbb
shlb
add
add
mov
ds
jnp
sub
adcb
leave
je
pop
aam
mov
leave
dec
adc
shlb
int
add
jecxz
dec
jge
aam
stc
mov
push
pop
cwtl
jno
addr16
adc
cmp
xchg
push
dec
cld
mov
mov
xchg
lahf
popf
lcall
int
dec
leave
or
add
pushf
stos
pop
ljmp
ja
xchg
xchg
clc
push
shrb
ffree
push
repz
push
sub
mov
mov
mov
dec
push
mov
in
and
mov
mov
adc
push
lcall
sahf
sub
arpl
jbe
mov
cmp
roll
inc
push
push
and
jae
cmp
fwait
ret
mov
mov
mov
inc
dec
jbe
icebp
push
inc
pop
dec
scas
iret
xchg
mov
jo
test
or
das
mov
lods
fcoms
xorl
dec
mov
jb
mov
out
pop
test
mov
mov
test
out
xor
testb
gs
es
in
jecxz
sarb
popf
out
add
fiaddl
mov
sbb
mov
das
pop
xchg
dec
push
pop
out
cmp
cmp
ss
mov
push
xor
mov
jge
test
mov
mov
push
jo
adcb
ret
les
xchg
dec
outsl
out
cmp
hlt
shrb
aas
mov
jmp
dec
inc
add
jb
bound
sub
mov
rol
or
dec
int3
ret
cmc
mov
mov
lcall
aam
shr
aaa
pop
icebp
insb
data16
popa
cmp
or
add
dec
and
xchg
push
js
cmpsl
mov
cmp
ds
leave
scas
addr16
cmp
mov
xor
cmp
das
out
xchg
jae
imul
mov
fstps
jp
test
cmp
fldcw
dec
popa
push
lock
aas
hlt
nop
jnp
cmc
je
pushl
and
push
mov
outsb
out
iret
adc
xor
stc
nop
pop
push
mov
pop
gs
in
cmc
cmp
rcrl
les
jne
mov
dec
in
jle
jp
jne
inc
cmp
mov
mov
and
or
or
jae
sub
push
fdivr
or
mov
int
and
push
lds
cmp
aad
popa
pushf
sbb
push
sub
rcrl
jp
xchg
scas
inc
int
jno
inc
jle
gs
mov
sub
adc
lret
jbe
jbe
xor
xchg
xchg
sbb
mov
and
fidivrs
fcmovnb
mov
jbe
mov
in
mov
inc
fdivr
test
fsubp
jnp
aam
mov
sbb
mov
jmp
sub
mov
sub
mov
shrb
mov
jecxz
jo
and
outsl
call
call
in
iret
mov
fcmovnbe
jmp
mov
push
out
sub
adc
test
xchg
adc
inc
sbb
jg
inc
pop
inc
les
std
cwtl
ss
or
inc
lahf
shlb
movmskps
movsb
mov
lret
push
inc
jecxz
test
movsb
paddw
cmp
xor
mov
cmp
imul
mov
sbb
xor
in
je
jno
std
imul
and
xor
jecxz
pop
in
ret
mov
int3
push
cmovge
rorb
sbb
sub
in
push
add
mov
ficoms
push
xor
cs
pop
dec
inc
cli
xchg
mov
mov
sub
lcall
or
pushl
jl
loop
iret
mov
adc
mov
sub
cld
inc
cmp
mov
pop
sahf
sub
xchg
outsb
mov
roll
call
iret
push
pop
fcmovne
dec
fisubrs
repnz
jo
mov
push
cld
xchg
test
es
push
cwtl
pushf
or
fs
pop
fisubs
popa
push
pop
jp
adc
lahf
les
mov
dec
and
out
stos
stc
ss
addr16
fisttpl
mov
cmp
sbb
scas
cmpsl
xchg
je
test
loope
jecxz
bound
adc
flds
loopne
push
xor
ss
push
jae
movsl
fnstenv
jno
shlb
rorb
or
notl
push
repnz
xchg
cmp
rcl
add
inc
mov
fwait
inc
test
cmp
sbb
test
xchg
insb
and
adc
inc
rcrb
pushf
dec
cmp
bnd
xchg
xlat
mov
movsl
jnp
jb
call
sbbl
inc
daa
jecxz
sahf
dec
iret
cld
mov
pop
dec
cwtl
cmp
pop
ja
lahf
xchg
pop
sub
ret
nop
int
cmp
inc
aam
pop
mov
jecxz
sbb
cmp
jno
es
add
mov
or
or
or
out
ljmp
pop
push
in
in
enter
test
ret
mov
rol
ljmp
mov
push
ja
cmp
mov
nop
lfs
shl
imulb
test
xchg
push
leave
mov
inc
inc
sbb
arpl
pop
and
sbb
aas
das
ja
push
pop
cltd
push
sub
insl
imul
cmp
in
dec
testb
sbb
movsb
shr
mov
insb
mov
jmp
scas
jge
inc
aam
pop
or
inc
push
lock
sbb
lea
jl
xor
pop
test
lcall
fldcw
lret
or
cmpsb
mov
jno
clc
notb
push
sbb
fdivl
repz
leave
adc
aas
frstpm(287
adc
rcr
mov
or
mov
icebp
in
jo
push
inc
lods
xor
pusha
pop
das
jnp
aam
lret
cmp
push
jae
icebp
pop
sbbb
das
pop
mov
lret
xchg
out
filds
adc
fimuls
or
dec
sub
sbbb
fadds
dec
jno
pusha
cmp
rorl
mov
jb
ja
fcoms
les
ficompl
mov
push
mov
xor
xor
sub
int
lahf
es
pop
sub
mov
repnz
xor
scas
insb
xchg
aas
and
andl
add
push
xchg
ja
adc
cmpsb
adc
jmp
jbe
jae
aaa
imul
jno
js
popf
push
and
xchg
jmp
scas
cwtl
cmc
sahf
lea
adc
jae
mov
imul
sub
or
stos
sbb
stc
xlat
xlat
popaw
mov
mulb
dec
fistpll
xor
dec
adc
jmp
fstpl
add
orl
xchg
push
xchg
adc
lock
jae
pop
loope
in
in
dec
or
xchg
std
sub
mov
testb
dec
and
clc
add
add
pop
mov
xor
out
adc
and
jne
les
test
mov
sub
nop
lods
outsb
test
sbb
lret
repz
sbb
sbb
pop
lret
or
cmpsb
jmp
xor
loope
lods
icebp
xchg
pop
fwait
inc
lea
in
or
add
orb
mov
push
imull
les
xchg
jle
rcll
and
sub
sub
push
insb
mov
pop
add
je
or
in
ljmp
arpl
iret
rcrl
cmc
repz
inc
mov
pop
pop
xchg
data16
fsubrl
aam
insl
cvtdq2ps
clc
jns
cmc
mov
aam
test
adc
lods
ficomps
add
mov
add
dec
out
cltd
push
jmp
addl
jmp
adc
in
out
sbb
add
or
mov
jnp
data16
adc
scas
arpl
push
or
test
je
mov
pop
jge
pop
sbb
jge
jl
push
scas
or
pop
cwtl
gs
popaw
inc
aam
leave
ret
lods
fcomps
xor
fcoms
lds
inc
fsubrp
pop
sub
lea
pop
pop
jo
mov
pop
aaa
push
jnp
cmovp
add
sbb
add
jmp
inc
sbb
cwtl
in
lcall
jle
sbb
outsb
lcall
dec
and
jne
push
inc
addr16
push
jmp
andb
sub
rcrl
jo
movsb
mov
mov
fcoms
cmp
xchg
sbb
in
push
mov
xor
sub
push
pop
ja
daa
call
arpl
pop
pop
rolb
test
sub
ficompl
mov
aam
pop
sbb
leave
mov
out
popa
jb
imull
cwtl
xchg
repz
dec
adc
or
push
add
faddl
jg
mov
bound
orb
add
sub
mov
push
int3
jle
cmpsl
adc
adc
fbld
add
push
das
pop
mov
mov
push
out
xor
inc
in
js
insb
movsb
mov
adc
xchg
movsl
rcrl
lock
scas
andb
add
clc
jbe
sub
dec
and
pop
mov
sbb
sbb
mov
xor
dec
add
in
mov
aam
and
xor
xor
pop
fnstenv
jmp
jnp
jmp
ret
cmp
ljmp
pushl
cld
adc
mov
imul
mov
int3
pop
bound
pop
push
iret
xchg
int
cld
mov
mov
repnz
insl
fs
lds
sub
lahf
mov
sar
rcll
nop
push
lcall
push
mov
add
shlb
sub
rcrl
sub
push
push
push
arpl
mov
shlb
outsl
cmp
and
xchg
js
int3
or
xor
in
aad
xor
cmpsl
je
xorl
pop
inc
sbb
jne
test
dec
in
or
or
mov
mov
cmp
ds
insl
repnz
repnz
negb
xor
test
sbb
mov
mov
andl
lret
repz
xchg
in
mov
sahf
into
mov
push
pushf
add
mull
roll
mov
insb
insl
mov
pop
inc
popa
push
repnz
push
adc
jbe
dec
dec
aad
mov
jo
lock
cmp
sbb
mov
incb
pop
std
or
stc
xchg
sbb
sbb
in
xor
jo
inc
mov
int3
movsb
ss
sub
test
sbb
call
dec
add
inc
cwtl
xor
or
scas
add
push
inc
imul
jl
test
cmpsb
cmpsl
mov
or
ja
pop
push
ret
fsts
into
popf
pop
cld
add
mov
jp
nop
cwtl
in
and
xchg
xchg
fldl
mov
xor
les
popl
xchg
dec
jae
jg
mov
xchg
mov
notl
or
dec
xor
in
add
mov
xorb
jo
jp
in
cmp
xchg
adcb
cmp
mov
sub
sbb
dec
mov
or
mov
xchg
or
out
push
pop
call
pop
test
fisttps
pusha
adc
pushf
push
iret
adc
jge
adc
sub
jnp
ds
test
int3
mov
dec
out
mov
jp
mov
das
adc
in
test
adc
pop
mov
cmp
dec
adc
clc
repnz
jp
int
out
rorb
fpatan
jno
or
movsw
imul
stos
pusha
jge
or
pop
imul
out
pop
mov
xchg
push
movsb
sub
sub
inc
adc
test
es
and
dec
movl
push
iret
mov
inc
push
loope
and
xchg
push
mov
fwait
cmp
icebp
cmpsl
push
jns
mov
cmp
enter
pushf
int
les
mov
jge
mov
push
mov
mov
mov
arpl
or
test
movsl
repz
rorl
adc
mov
inc
add
push
lret
and
sub
scas
inc
mov
cmp
test
fisubs
bound
cwtl
enter
out
mov
xor
or
sub
and
xchg
dec
or
adc
in
icebp
pop
jns
cwtl
sahf
out
inc
xor
jg
sbb
and
lock
movsb
fsub
fldenv
push
xchg
push
adc
push
call
sub
jmp
stos
int
add
sarl
outsb
mov
and
es
push
mov
loope
cs
mov
loop
ljmp
nop
lods
mov
inc
ret
int
sub
test
aas
dec
loop
pop
movsl
inc
pop
out
cmp
xchg
mov
push
push
sub
adc
mov
cmp
clc
mov
les
mov
mov
pop
push
inc
cltd
or
lea
sub
pop
xor
inc
pop
jp
test
roll
call
stc
inc
dec
sbb
push
repz
stos
cmp
out
std
push
das
cli
enter
xchg
jmp
xorl
nop
sti
sbb
dec
outsl
sti
inc
data16
les
xchg
icebp
add
test
inc
jle
jmp
push
jno
inc
inc
out
inc
sub
daa
mov
pop
daa
sub
sbb
insl
add
jmp
test
cmp
fstl
fld
subb
shll
rcrl
xor
aaa
xor
lock
pop
pop
sbb
insb
test
xor
leave
mov
mov
push
repz
xchg
and
push
ret
fstpl
mov
xlat
jle
test
adc
add
push
stos
into
add
clc
in
inc
imul
loope
lock
call
out
ret
hlt
mov
pop
and
pushf
cmp
cmpsb
jge
push
adc
sbb
dec
out
xor
arpl
xorb
jmp
adc
call
stos
sti
call
pop
dec
mov
data16
cmp
imul
push
pop
mov
push
stos
mov
aad
pop
call
mov
ss
mov
pushf
mov
subl
stos
push
and
loope
test
mov
or
jnp
pop
insl
add
jne
pop
lcall
movsb
xor
clc
sub
jle
mov
fdivrl
inc
mov
mov
jae
clc
jge
xchg
mov
divb
lret
and
out
jo
popa
sbb
fidivs
lret
jg
add
fadds
dec
bound
mov
test
arpl
push
ret
xor
sub
sahf
inc
es
cmp
and
bound
lret
mov
jp
cmpsl
xchg
mov
movsl
sbb
mov
fcomp
or
or
xchg
orb
xor
mov
and
sar
push
adc
fisubl
je
int3
push
cmpl
xchg
aas
jle
mov
iret
inc
scas
push
push
test
mov
inc
mov
add
fdivrl
add
fwait
jl
mov
pop
mov
mov
inc
outsb
mov
stc
out
scas
sbb
sbb
dec
inc
call
int3
mov
mov
out
dec
sbb
ret
orl
fcompl
cmp
add
cwtl
jecxz
mov
and
stc
sbb
das
and
sub
movl
mov
cmpsl
dec
sub
sub
mov
ljmp
xor
or
sahf
xchg
inc
outsb
fxch
or
cmp
jle
sbb
jg
lock
pop
paddsw
in
cmc
lahf
push
ret
mull
mov
sbb
nop
pop
mov
mov
and
adc
mov
sub
push
pop
xor
or
psubb
jp
sub
dec
adc
dec
loopne
add
xor
rclb
cli
in
jno
js
sbb
lcall
dec
mov
jl
addr16
aad
stos
cld
gs
jge
leave
pop
out
mov
push
push
cli
pop
ja
mov
mov
xchg
in
std
out
fcmovbe
repz
dec
imul
or
ret
jae
out
mov
in
xchg
xor
ds
leave
stos
push
andl
lods
aas
push
fsub
mov
cmc
or
xor
push
repnz
pushf
mov
es
int3
movsb
negl
or
dec
fiaddl
into
ficoml
jnp
nop
clc
out
adc
shll
push
dec
movsb
adc
ret
stc
cld
sub
clc
lahf
jne
mov
stos
inc
in
xor
rcrb
mov
les
sarl
insb
jae
mov
inc
jno
lea
ret
mov
hlt
clc
cmp
popf
outsb
dec
mov
xor
cwtl
mov
sbb
popa
mov
adc
lds
push
mov
js
push
scas
mov
mov
das
mov
mov
inc
shlb
push
xchg
sub
cmp
mov
inc
in
cmp
ljmp
ljmp
inc
jle
jnp
xor
les
rolb
jb
filds
pop
mov
jnp
jno
movsb
xor
adc
and
std
and
iret
rcr
imul
xchg
in
push
std
mov
sbb
push
sub
nop
mov
cs
insl
push
jmp
into
pop
mov
xchg
mov
mov
or
xlat
scas
sarl
cmp
add
mov
cmovp
cmpsl
cmp
pop
inc
push
adc
sub
addb
jmp
xchg
lds
incb
push
xor
and
cmp
xchg
xchg
sub
shll
lret
and
xor
test
stos
sbb
mov
stos
jno
es
lods
loope
fcmovnb
sbb
xchg
sahf
je
pop
mov
or
rolb
sub
and
mov
adc
adc
xchg
je
test
les
pushf
xor
sbb
mov
jno
mov
push
mov
out
sub
out
add
push
mov
int3
cmp
add
xor
insl
loope
aam
dec
or
sub
and
popa
jecxz
jnp
jno
xor
lods
lret
imul
insl
jecxz
orl
xor
xchg
stos
mov
test
addl
mov
jp
push
mov
dec
shrb
insl
or
sub
in
shll
in
aas
lahf
ja
imul
cmp
sub
sub
ret
cmp
or
mov
xchg
loopne
adc
inc
sub
and
cmc
or
inc
push
int
xchg
jp
mov
test
scas
push
pusha
cwtl
add
mov
aas
ss
sbb
int3
dec
cmp
xor
cltd
nop
das
iret
leave
in
push
xchg
push
in
lods
aam
mov
adc
repz
daa
jb
inc
outsb
mov
push
aaa
daa
rorb
in
nop
ret
test
and
mov
pop
fst
add
test
or
je
outsl
sbb
jns
cmp
jne
int
out
push
or
ret
dec
cmp
dec
subb
jp
jno
repz
pop
sub
aad
lret
xor
into
aam
fcoml
fidivrs
sbb
and
insb
and
push
in
inc
adc
mov
or
push
or
lret
push
and
push
sarl
sub
jecxz
sbb
pusha
cmc
popf
movsb
testb
imul
inc
aad
adc
push
mov
fcmovbe
gs
jb
sbb
push
inc
sti
insl
fdiv
outsl
ss
shrb
dec
ja
gs
ret
sbb
or
inc
inc
scas
inc
mov
jge
jge
mov
ss
and
xor
mov
loope
repnz
push
in
jno
stos
gs
pop
or
jbe
out
insb
sahf
xor
xor
mov
rol
jbe
lcall
ds
adc
or
shrl
shr
jp
mov
cmp
cwtl
or
insl
outsb
aaa
lret
dec
cmp
stc
xor
arpl
je
sub
insl
jnp
les
jp
or
fwait
int3
ljmp
xor
shll
sbb
or
lcall
xchg
dec
adc
pushf
scas
jne
pop
push
mov
repz
clc
push
jbe
cmpsb
mov
xor
xor
int
inc
add
fdivl
push
sbbl
ret
pop
inc
jp
pop
cld
adc
add
push
sbb
insl
popa
pop
or
shlb
outsb
filds
mov
bound
sbb
and
test
fdiv
in
test
mov
clc
fwait
mov
mov
push
cmp
lret
cli
dec
mov
xor
mov
push
add
xor
xchg
repz
xchg
push
icebp
xchg
divl
xchg
mov
leave
sbb
xchg
jne
sti
pop
adc
das
int3
lea
pop
jg
ds
or
jo
cmp
fstps
mov
cmc
test
or
int
cmc
orl
adc
jmp
cmp
rolb
movsl
out
out
mov
push
loope
das
xchg
pop
xor
lds
fiadds
into
dec
test
ds
sbb
fists
mov
hlt
dec
icebp
jle
std
shl
push
sar
xchg
xchg
push
mov
fwait
jle
push
xor
mov
mov
test
pop
sbb
and
outsb
ljmp
xchg
popa
aaa
sar
xchg
clc
cmpsb
mov
call
xchg
or
aaa
arpl
cwtl
jmp
pop
shlb
rcll
fisttpll
sub
push
dec
pop
mov
aad
sbb
add
popf
fisubrl
out
outsb
inc
aad
inc
lods
stc
dec
sbb
push
sbb
daa
push
jg
lock
sbb
mov
in
xor
pop
das
les
cld
adc
mov
cld
sub
jo
sbb
in
adc
cld
imul
push
add
mov
popf
ds
out
sbb
nop
icebp
xchg
push
icebp
adc
xchg
test
jb
les
data16
cli
popl
enter
jp
fsubl
mov
in
jb
pop
jnp
loop
fisttpl
push
aaa
inc
sbb
scas
je
sbbl
roll
les
inc
out
adc
add
pop
movsl
add
pop
push
ja
adc
dec
insb
shr
out
or
adc
jo
push
lods
hlt
or
xchg
inc
das
stc
cmpsl
xlat
pop
mov
add
mov
adc
inc
or
pop
out
dec
push
ss
popa
mov
xor
sbb
stc
stos
xchg
mov
pop
xlat
pop
add
inc
inc
push
mov
scas
mov
das
rcll
sbbl
ss
or
mov
cmp
mov
xchg
jbe
jbe
mov
dec
adc
fs
cltd
outsb
mov
adc
outsb
je
ljmp
dec
inc
push
dec
pop
addr16
movsl
pop
adc
xor
aad
imul
imull
mov
test
into
xchg
repz
repnz
mov
clc
sbb
mov
jne
fsubl
std
cmpsl
pop
std
xchg
jae
dec
mov
fcmovnb
and
stc
leave
dec
dec
or
sub
push
lock
push
push
iret
add
pop
cmp
jecxz
fistpl
call
pinsrw
mov
push
inc
xchg
out
push
or
jae
cs
into
cmp
jle
int
aaa
pop
dec
xchg
cmc
pop
cmp
ds
stos
movsl
aas
mov
fs
xchg
xor
cwtl
cs
mov
bound
repnz
lcall
arpl
push
mov
pop
insl
insb
cmp
inc
sub
lret
je
ret
push
mov
sub
movl
cmpsb
mov
pushf
push
int3
push
xchg
sbb
push
push
dec
test
jp
mov
aaa
xchg
loop
lcall
cmp
jl
push
mov
or
inc
sub
xchg
pop
fisubrs
leave
and
outsb
lods
sbb
cmp
sub
test
xchg
popa
pop
lret
fstl
pop
mov
add
inc
popf
cmp
add
sub
test
int
ss
xor
aam
rol
stc
pop
out
fcomps
orb
mul
scas
pop
xor
popa
fimuls
aad
out
in
push
sbbb
inc
mov
aad
arpl
pop
or
daa
xchg
inc
adcb
aas
mov
mov
outsb
lods
loope
pop
pop
mov
sbb
loope
pop
lcall
in
pop
ljmp
inc
or
mov
arpl
mov
push
push
jno
repz
adc
mov
negb
jns
push
cli
mov
dec
cs
jns
mov
mov
push
mov
std
repz
dec
jmp
or
stos
rcl
sbb
add
cwtl
xor
pop
insl
sahf
jle
mov
aaa
ss
test
aas
jg
jns
sahf
out
insb
jmp
shlb
jmp
and
ss
xor
mov
loopne
adc
ljmp
cmp
rcrb
mulb
sub
in
mov
or
push
and
and
mov
or
lea
nop
push
mov
push
lret
xchg
nop
mov
cmpsb
lods
pop
pop
jne
popf
out
ljmp
testb
in
push
imul
mov
cmpsb
mov
pop
fldl
mov
shlb
aad
dec
repnz
sbb
xchg
andl
icebp
mov
inc
sub
inc
lds
push
jg
iret
out
xchg
cwtl
mov
popa
nop
push
in
cmpsl
adc
aaa
stos
in
insl
sub
mov
pop
xor
pop
rcr
js
mov
cmp
jmp
push
popa
sub
addl
imul
jmp
dec
jne
push
aad
mov
ffreep
mov
lods
xchg
fnsave
mov
shr
lcall
sbb
aam
xchg
clc
pushf
int
mov
or
fwait
out
inc
adc
sub
sbb
xchg
sub
cs
or
or
sbb
lock
mov
xor
mov
lcall
sbb
es
insl
inc
inc
das
icebp
or
stc
jecxz
inc
sbb
ja
xchg
movsl
add
add
dec
xor
mov
out
adc
fistpl
adcb
enter
sub
out
push
shr
pop
adc
inc
aam
xor
pop
scas
je
pusha
jo
pop
pop
pop
stos
and
daa
add
push
imul
punpckhbw
enter
push
cmp
mov
cmpb
sbb
or
adc
and
push
aaa
pop
aaa
inc
sub
dec
fimull
pop
cmpsl
mov
sub
les
nop
dec
adc
jns
xchg
daa
push
cmp
add
out
xor
dec
mov
mov
adc
xchg
pop
pushf
int
sub
dec
pop
xchg
aaa
dec
pusha
jb
lret
xchg
das
mov
mov
cmc
test
outsb
mov
or
nop
jbe
es
daa
out
adc
and
sub
outsb
inc
clc
imul
mov
and
out
test
inc
push
subb
inc
inc
ret
adc
xchg
jmp
pop
icebp
inc
sub
cs
inc
sbb
out
jmp
adc
icebp
movsb
imul
mov
subl
dec
mov
rclb
adc
mov
mov
fdivl
js
xor
shlb
jb
ja
or
scas
dec
push
xor
out
and
fsubrs
jb
rcpps
sub
add
push
ds
mov
pop
push
and
repz
movsl
xchg
movsb
pop
mov
jae
das
cmp
fstpt
in
push
mov
ds
cmp
cmpsl
sbb
dec
xchg
jl
imul
insl
adc
pop
notl
pop
and
icebp
adc
into
rorl
aam
stc
inc
pop
xchg
movsl
jno
mov
sbb
push
pushf
test
and
iret
cli
and
outsl
jno
push
sub
lcall
add
orl
adc
cli
adc
inc
push
je
xchg
cmp
je
enter
and
cld
je
sti
sbb
jl
inc
lahf
cmp
lahf
int
and
sub
int3
arpl
sbb
xchg
loope
sub
cmp
fcoml
aas
cli
mov
lret
addb
cmp
pop
fistpll
jp
call
push
sbb
pop
pop
pop
gs
push
insl
std
bound
cmp
push
sbb
jns
dec
mov
movsl
and
cmp
add
leave
aas
jae
sti
and
aas
jnp
add
sbb
add
psubw
repz
outsb
out
in
sbb
xor
dec
pop
xlat
xlat
sti
icebp
ljmp
adc
cmp
or
mov
clc
loop
andl
js
lcall
pop
inc
sti
mov
mov
inc
lds
mov
dec
fs
cmp
pop
sub
pop
insb
fistps
xor
jecxz
add
push
mov
subl
xor
sbb
mov
xchg
popf
shlb
mov
lock
mov
and
pusha
stos
cmp
movsl
and
xor
xchg
add
pop
insb
insb
dec
dec
enter
adc
mov
pop
push
mov
cmp
mov
or
or
jecxz
and
dec
lock
mov
lcall
sti
test
push
das
clc
cmp
call
sbb
xor
ljmp
add
adc
or
jno
sbb
cmp
adc
xor
pop
jae
movsl
es
cli
push
repnz
test
mov
sbb
dec
arpl
sbb
ja
ret
out
cmpl
cli
loop
roll
test
mov
in
sbb
int3
jnp
out
push
cmp
sub
cs
jae
sbb
insl
movsb
fisttps
or
xchg
sahf
xor
mov
or
add
jg
andl
mov
jge
push
sbb
sti
mov
aad
fs
jo
sbb
mov
sub
cmpsl
insl
lock
cmp
jl
out
adc
pushf
pop
mov
jo
xchg
push
xchg
sbb
sbb
push
adc
imul
mov
aaa
mov
pushf
clc
sub
mov
repnz
pop
sbb
loop
cmpsb
fstpt
mov
cmp
insl
or
mov
pop
pop
jl
gs
jno
cmc
in
mov
out
sub
xor
and
pop
or
dec
cld
sbb
int3
fbld
imul
out
pop
jge
dec
in
lahf
mov
js
hlt
jle
loope
enter
icebp
sbb
cld
adc
in
in
sub
out
or
jl
pop
pop
loopne
loope
cld
cmp
lods
mov
pop
out
ucomiss
popa
mov
push
test
rclb
mov
push
hlt
pusha
idivl
sub
ja
movsl
lds
outsl
cmc
dec
mov
es
mov
bound
xlat
and
push
adc
mov
inc
mov
loope
cmp
mov
movsl
add
or
outsb
xchg
dec
adc
jbe
into
in
mov
test
push
inc
fwait
and
lret
leave
testl
repz
gs
mov
aas
pushl
ds
dec
inc
ljmp
popf
incb
es
outsl
push
and
je
stos
pop
add
in
dec
xlat
lret
sbb
movsb
out
daa
jns
in
adc
push
jmp
addl
dec
sub
pushf
es
push
cmp
jmp
xor
dec
pop
in
dec
lods
or
arpl
aad
dec
adc
mov
call
lock
push
test
ret
sbb
lea
and
dec
jl
mov
sub
mov
sahf
add
cmp
mov
nop
inc
pop
push
pop
in
add
repnz
lock
je
rorl
fbld
jmp
in
test
push
xor
int3
and
and
nop
inc
int
and
push
dec
jne
xchg
arpl
push
push
cmpsb
dec
and
jp
and
outsb
xchg
adc
and
jnp
cs
clc
ret
mov
mov
hlt
stos
push
or
insb
and
push
sub
stc
cwtl
bound
repnz
gs
test
xor
pop
out
xchg
in
mov
aas
push
pop
adc
xchg
cmpsb
mov
push
sahf
repz
aad
and
or
js
aaa
fmul
pop
sub
mov
mov
jp
mov
or
mov
mov
orl
xchg
out
jne
mov
cli
cmp
pop
push
jmp
leave
push
fadds
or
add
cltd
and
dec
mul
fwait
jbe
or
shll
lahf
out
inc
cmc
xor
ljmp
loope
xchg
nop
xor
mov
test
inc
aaa
ret
sub
test
jnp
in
or
dec
inc
jae
xchg
dec
lea
dec
pop
xchg
popa
std
mov
test
or
adc
dec
into
cwtl
dec
js
dec
das
fsubrl
aaa
stc
out
jo
sbb
and
pusha
mov
rorb
sbb
scas
scas
loope
pop
in
data16
push
mov
xchg
ret
push
imul
mov
ljmp
push
out
popf
or
adc
shll
cltd
int
mov
dec
ss
sub
pop
add
aam
call
stos
cmpsl
lahf
idivl
or
pop
leave
or
add
scas
add
and
jno
sub
fsts
dec
mov
mov
mov
dec
aas
dec
push
sbb
call
jns
push
jno
pusha
popa
mul
movsb
push
insl
xchg
int3
lret
mul
add
cmpsl
jmp
push
xchg
sbb
test
push
pushf
push
data16
les
xorb
lods
int3
add
mov
adc
ljmp
jg
sbb
xchg
jns
inc
mov
push
test
cli
xchg
push
shr
lods
jnp
jecxz
daa
and
mov
adc
sub
insb
add
jp
xchg
es
or
pop
stos
xlat
xor
aas
movsl
ficoml
aam
cld
shll
stc
mov
push
sbb
xchg
arpl
imul
mov
movl
les
add
inc
xor
mov
push
outsl
ret
sub
sub
ret
ss
lds
inc
clc
push
xor
pop
pusha
adc
into
fidivs
movlps
cmp
ret
adc
sub
fcomp
das
push
insb
movb
aaa
into
fsts
xor
fsub
or
mov
sbb
xor
adc
dec
inc
pop
mov
push
pusha
push
lock
sub
add
gs
push
mov
aaa
adc
cmpsb
bound
push
push
pusha
xor
push
setbe
mov
nop
mov
sub
filds
lret
test
xor
push
pop
xor
push
cmp
int3
lret
mov
cmpsb
jle
jl
cmp
movsb
or
push
xor
pop
push
and
pop
inc
ja
xor
std
mov
outsb
sbb
rolb
push
sub
sbb
loopne
gs
xlat
add
enter
cli
lret
sahf
xor
push
mov
lock
cmp
mov
adc
outsl
xor
lods
je
xchg
inc
xchg
inc
mov
push
push
jo
cmp
aaa
xlat
push
div
push
out
add
movsb
sub
inc
outsb
adc
insb
js
pop
cli
sub
insb
or
cmpsb
push
lcall
xchg
mov
addr16
enter
cmp
pop
xchg
mov
add
mov
pop
sub
push
jnp
or
sbb
mov
adc
repnz
loopne
xor
ss
xor
into
insb
nop
mov
cmp
out
push
sti
or
cmpsl
push
movsl
mov
aas
xor
mov
adc
mov
mov
xchg
inc
pop
popa
xlat
xlat
push
push
jl
and
mov
sarl
call
iret
or
enter
out
imul
inc
xchg
inc
ret
andb
dec
test
mov
add
stos
push
jp
mov
inc
sub
lret
mov
imul
insl
jae
xlat
stc
pop
fimuls
jne
arpl
int3
bound
mov
sbb
mov
sti
and
push
adc
xchg
push
lds
out
das
jae
outsl
vmaxss
jne
daa
or
and
lock
push
ficoml
xor
dec
popf
imul
jns
pop
into
lahf
dec
cmp
or
stos
out
and
mov
fstl
inc
sub
in
pop
cmp
rol
ds
test
jg
inc
scas
push
pop
jp
jno
inc
mov
pop
pusha
adc
lods
dec
bnd
popf
fsts
push
arpl
fsubs
mov
lds
inc
push
jle
out
inc
lock
xchg
loopne
lret
test
inc
out
js
cwtl
push
sub
pusha
sub
in
mov
mov
test
orl
aas
das
loopne
push
fdivr
add
xchg
xor
popf
pusha
or
lock
scas
gs
ficompl
sbb
push
out
and
cmp
cmova
push
sub
sbb
sbbl
mov
sbb
inc
push
mov
incl
push
daa
xlat
icebp
jno
call
in
pop
pop
mov
and
insb
cmp
sbb
subb
mov
cmp
mov
or
push
in
cmc
push
decl
out
das
cmp
outsb
pushf
and
insb
jae
into
add
inc
add
int
dec
inc
inc
test
sbb
pop
pop
inc
loopne,pt
pusha
inc
in
add
xor
and
ret
push
and
in
xchg
dec
in
cmpb
xchg
add
push
in
jae
mov
and
cmp
mov
clc
lahf
mov
in
dec
outsl
jmp
dec
ss
inc
xchg
jne
mov
lods
sub
or
xchg
sub
push
frstor
and
push
dec
call
pop
shl
pop
mov
or
dec
xchg
cli
nop
cs
mov
sub
test
cld
mov
xor
mov
push
jg
in
int3
stc
rolb
fscale
dec
xchg
cwtl
mov
mov
das
icebp
jne
fs
int
dec
lret
fstpl
add
or
pop
rcll
or
pop
add
mov
mov
and
add
inc
xchg
push
mov
rcr
int
sbb
add
adc
mov
mov
pop
mov
icebp
inc
sbb
xchg
add
imul
dec
cltd
jns
push
lret
mov
and
loope
and
loope
rsqrtps
xchg
jmp
lock
scas
insb
dec
push
fwait
add
xor
and
push
inc
fnstenv
das
rolb
push
lret
pop
cmpsl
clc
xor
imul
adc
stos
and
add
jbe
sbb
mov
mul
out
gs
pop
arpl
int
pop
cmpl
js
cmp
mov
popf
imul
jb
movsl
decb
nop
out
loopne
sbb
inc
mov
pop
rcll
pushf
xor
lods
adc
jge
xor
sub
sbb
mov
mov
iret
mov
ret
iret
dec
hlt
stos
inc
or
xor
push
or
push
mov
jp
sti
xchg
xchg
popf
add
popa
rcrl
cld
cmp
imul
push
leave
inc
cwtl
gs
mov
inc
inc
pushf
inc
jns
test
leave
out
push
push
iret
jmp
push
shlb
mov
mov
adc
mov
in
mov
lods
mov
shrb
popa
fstpl
je
enter
dec
iret
sub
push
add
add
enter
outsl
outsl
mull
aad
pop
rorb
bound
fdivrp
cmpb
ret
ljmp
cmp
jne
add
comiss
dec
test
rcl
lods
cwtl
ss
ja
inc
test
mov
pop
rcrl
sbb
loopne
mov
daa
fdivs
pop
inc
inc
out
push
mov
dec
decb
sbb
arpl
or
mov
loop
bound
in
popf
int
mov
std
lods
xor
jl
push
push
mov
leave
jmp
daa
shrl
adc
popa
lock
lahf
pusha
push
testl
ds
shlb
push
pop
icebp
pop
xchg
mov
lret
or
cmc
nop
fimuls
lret
bound
fldenv
fs
push
cmp
dec
push
ficoms
repz
pop
rol
sahf
hlt
jp
xor
dec
gs
or
les
cld
mov
jge
xchg
xchg
inc
das
js
movsb
movsl
js
mov
repnz
jae
xor
loop
mov
in
mov
mov
test
inc
dec
xor
mov
sysret
cmpb
popf
sbb
and
inc
and
cmp
cli
in
sbb
push
scas
jecxz
aaa
adc
mov
mov
push
cmp
dec
xchg
sub
jb
fldenv
or
inc
xchg
mov
add
jle
rcrl
sub
mov
push
xor
pop
push
fsubl
jp
in
fdivs
add
cmp
movsb
js
dec
test
mov
xchg
shl
stos
push
das
xchg
jo
fwait
lock
pop
mov
xor
mov
jmp
out
mov
mov
outsb
movsl
push
aaa
fmulp
inc
xchg
iret
and
loope
std
dec
jmp
mov
int3
inc
sahf
ss
mov
push
mov
push
les
inc
int
mov
test
push
repnz
adc
adc
inc
mov
outsl
loope
lcall
enter
stos
inc
sbb
ret
sub
push
loope
cld
pop
add
stos
and
insb
mov
and
sbb
pop
in
out
aad
dec
or
mov
sbb
mov
mov
dec
xchg
imul
dec
push
adc
in
mov
xchg
jecxz
leave
popf
xor
xor
push
jno
or
mov
ret
dec
inc
mov
jmp
adc
dec
int3
ficompl
mov
mov
movsb
jbe
jl
inc
or
cmp
pushf
mov
in
xchg
pop
sub
test
std
lret
out
pop
loope
cmp
pop
push
pop
cmpsb
adc
inc
mov
mov
or
sbb
xchg
or
sbb
push
mov
mov
add
push
lds
ret
dec
cmpl
push
lahf
gs
lcall
call
pop
pop
xchg
mov
mov
jno
nop
dec
fnop
xchg
mov
mov
cwtl
add
cmpsb
pop
mov
loope
inc
daa
jo
cmp
cmc
jp
pop
mov
mov
xor
push
mov
cmp
test
jp
orl
rcr
cltd
or
cltd
jne
inc
cwtl
cltd
xor
adc
inc
aad
or
out
fdivl
lock
fadd
dec
out
daa
mov
and
xchg
sub
cmp
pushf
cmp
js
vmovntps
xlat
xlat
pop
add
add
sbb
lret
xchg
loopne
dec
fcomps
mov
je
add
stos
adc
ret
inc
gs
mov
pop
out
mov
aas
or
mov
mov
je
lods
jle
and
ss
jg
dec
into
pop
sar
aad
std
dec
sahf
xchg
inc
add
jge
pop
and
pop
popf
les
xlat
scas
clc
push
push
pushf
gs
inc
pop
sbb
jb
out
mov
mov
clc
cmp
pop
cmp
js
add
outsb
push
push
aad
xorb
push
mov
imul
out
cmp
add
mov
jb
mov
mov
movsb
lret
lahf
loope
js
xor
dec
mov
loope
sahf
mov
jbe
add
xchg
or
sub
sarl
push
jge
je
addr16
bound
scas
test
jle
test
add
into
scas
rorl
mov
repz
xor
adc
xchg
scas
cltd
movsl
jbe
add
test
xchg
xor
inc
mulb
push
push
outsl
xchg
sub
pop
lcall
in
mov
in
cmp
and
cmp
inc
lret
pop
adc
sbb
sbb
loop
mov
inc
pop
in
jge
test
fisttpl
shl
pusha
out
adc
pop
pop
dec
or
fdivs
aad
mov
in
add
mov
cmpsb
fisttpll
bound
sbb
lret
push
and
or
dec
adc
aaa
adc
mov
js
out
test
scas
and
jp
mov
test
int
xor
push
cmc
mov
in
push
ds
push
jnp
ljmp
cmc
jmp
neg
inc
jge
int
sbb
lret
psubusb
lods
inc
movsl
jb
leave
insl
sub
loopne
outsb
sub
push
aaa
ljmp
lret
rcrb
cmp
lea
test
pushf
mov
pusha
pop
mov
adcb
sub
arpl
pop
pop
sub
and
jl
push
pushf
cmp
pop
loope
ret
mov
movsl
mov
sub
daa
adc
into
fcomp
sarl
push
mov
and
bound
gs
in
dec
sbb
sbb
sbb
movsb
and
out
jbe
cmc
cmp
push
iret
jno
cmp
test
andl
mov
inc
jnp
adc
mov
push
stos
ljmp
add
xchg
mov
xorb
xor
and
mov
popf
push
mov
pop
add
sbb
mov
mov
adcb
test
pop
xor
jle
xchg
mov
or
lods
xor
inc
xor
ret
and
add
jg
arpl
movsb
hlt
sarl
sbb
mov
add
push
sbb
ret
cmp
lods
adcl
dec
int3
push
adc
inc
mov
xchg
cmp
jb
push
popw
mov
fwait
xlat
cmpsb
push
adc
xchg
testl
cmpsb
push
sbb
jno
or
xor
xor
lcall
test
lea
outsl
add
mov
test
dec
mov
les
add
loopne
push
xchg
fidivrl
mov
add
adc
cmp
insl
test
or
aad
mov
out
in
bound
sbb
fisubl
pop
jmp
jge
sub
add
xchg
mov
aaa
dec
andl
mov
loope
dec
cmp
test
mov
sbb
push
or
adc
pop
popf
adc
cli
add
mov
xor
out
or
mov
es
xchg
pop
or
test
rcl
xchg
mov
lods
pop
cmpsl
cmpl
test
stos
loope
add
cmpb
addr16
out
push
outsl
adc
pop
push
push
add
xor
rcrb
add
aas
dec
push
xor
pop
mov
push
pop
repz
fcmovu
int
mov
dec
loop
adc
dec
mov
add
mov
pop
pushf
sbb
aad
int3
dec
dec
and
push
paddsw
mov
jmp
into
push
orl
xchg
loop
fcoml
jp
mov
jno
sub
push
js
addr16
adc
aam
cltd
xchg
push
pop
add
adc
sub
lret
lock
aas
add
sbb
pop
cmpb
stc
or
or
fbstp
mov
sub
test
fdivl
insb
repz
faddl
ja
mov
pminub
adcb
mov
mov
popa
dec
inc
mulb
aaa
push
xlat
lods
sbb
das
out
and
in
pusha
dec
mov
pop
stos
ret
negb
flds
xor
daa
in
fistl
ret
test
and
cmp
lock
fcmove
xchg
mov
mov
xchg
ja
mov
mov
stos
mov
dec
test
sub
push
bound
daa
les
sbb
pop
leave
cmc
dec
or
out
push
inc
in
cmp
dec
xchg
adc
arpl
jno
mov
push
insl
mul
ftst
jle
imulb
xor
cld
push
push
inc
subb
mov
xchg
out
test
inc
push
sub
scas
lcall
pand
daa
jp
imulb
mov
aas
cmp
dec
js
movsb
sub
dec
int
imulb
push
in
jg
fwait
cli
ret
push
add
mov
mov
sahf
xor
mov
or
hlt
fcomps
popf
cmp
mov
mov
sub
imul
push
fildl
push
cmpsb
popf
dec
es
xchg
cmp
loope
mov
inc
icebp
add
repz
clc
insb
jae
ja
rorl
mov
test
aam
jg
mov
xchg
addr16
sbb
inc
or
mov
cmp
jns
pop
inc
mov
push
int3
mov
test
popa
mov
xor
fcomi
ja
push
pop
addr16
loope
scas
sbb
mov
sti
ret
pop
inc
ds
lods
pop
test
call
xor
rcr
loope
inc
out
lret
int3
jecxz
sbb
add
push
jno
mov
push
arpl
jge
iret
lods
xlat
inc
dec
icebp
fstps
xor
aas
jne
xchg
cld
add
nop
push
add
xor
stos
or
cmp
pop
jp
aad
inc
push
std
jno
fcmovb
xchg
outsl
cmp
sub
sti
jecxz
or
mov
sub
loope
lock
sub
add
mov
je
pop
sub
enter
mov
push
pushf
orl
popf
mov
sub
cld
jmp
add
sub
cmp
movsb
std
push
aas
cli
mull
rclb
into
data16
imul
addb
or
push
mov
inc
xchg
aas
incl
scas
jne
lds
dec
lea
jbe
out
fwait
mov
push
das
add
push
scas
push
or
scas
pop
popa
jle
xchg
imul
inc
xchg
hlt
mov
jp
pop
xlat
les
ret
inc
sbb
mov
push
cmp
pop
loopne
mov
sbb
and
sub
jl
in
sub
jmp
add
inc
jne
lock
jge
mov
mov
dec
lock
test
cmpsl
xchg
inc
cltd
cwtl
cli
std
mov
adc
aas
or
xchg
lds
adc
dec
outsl
ret
ds
and
mov
or
xor
adc
and
xor
lcall
dec
mov
rcrl
rol
inc
inc
loop
adc
aaa
sbb
push
mov
rcr
cltd
sub
aas
sub
in
test
stos
dec
mov
xor
aam
stos
xchg
add
popf
sbb
jno
movsb
and
dec
fs
insl
fisubs
lock
dec
shll
mov
xchg
aam
mov
jo
iret
mov
lret
loopne
stos
lock
out
dec
out
inc
push
cwtl
arpl
popa
mov
adc
and
mov
js
xlat
mov
push
aad
mov
push
test
or
arpl
inc
lds
in
lods
subl
sbbb
mov
and
outsl
stos
notl
sbb
push
jns
xchg
dec
xchg
mov
iret
icebp
inc
ja
int3
add
out
mov
mov
ja
mov
or
mov
jno
fs
jmp
mov
jge
aad
stos
clc
mov
and
inc
mov
mov
cmp
mov
sub
push
xchg
xor
sbb
pushw
daa
mov
fisttpll
lea
outsl
shl
clc
stos
dec
push
stos
aad
sbb
lcall
pushf
cmc
daa
mulb
or
push
les
push
mov
xchg
adc
push
lret
mov
lods
mov
mov
add
sbb
loop
push
xor
sar
in
data16
shr
mov
inc
xchg
sbb
movsb
push
push
inc
sub
cld
mov
sbb
sub
and
jns
mov
or
cmp
popa
push
shrb
push
pop
adc
or
iret
fstpl
push
loopne
bound
out
fsubrs
add
xchg
pop
aaa
pop
mov
lret
xorb
out
dec
das
cmp
push
jns
or
pushf
cmp
xor
sbb
fimull
je
mov
push
popa
add
stc
ds
cld
and
xchg
mov
rcr
dec
repnz
push
cmp
jae
outsb
xchg
lcall
in
pop
cmp
addr16
xor
pop
hlt
orb
sbb
dec
pop
into
nop
test
jl
in
ljmp
shrl
punpcklwd
scas
in
js
ss
and
or
aam
sbb
xor
push
sbb
into
nop
subl
in
dec
mov
insl
xchg
dec
sub
divl
xor
ds
inc
mov
push
mov
fisttpl
mov
lcall
fwait
cbtw
inc
or
xor
pop
shrl
in
jb,pt
int3
mov
insl
add
pop
and
pop
mov
insb
push
ficompl
inc
lods
adc
cmc
xchg
cmp
pop
push
push
mov
incb
popa
sub
fs
dec
xor
xor
fbstp
sti
lcall
aam
setnp
repnz
mov
das
and
mov
pop
mov
sbb
add
movsl
fwait
insb
lcall
or
ljmp
push
sub
aad
xchg
push
fcoml
aad
rorb
pop
mov
gs
jecxz
and
inc
xchg
test
ffree
insb
dec
adc
cmp
xchg
cwtl
push
mov
sub
rorl
push
je
pop
inc
enter
mov
jmp
sub
inc
add
gs
mov
out
dec
fdivrp
mov
movsl
xor
adc
cs
and
adc
in
xchg
mov
cs
xor
std
inc
sar
fnstsw
out
mov
dec
mov
sub
adc
mov
hlt
incl
or
dec
xchg
test
pop
and
lea
loopne
sub
and
loop
and
call
mov
mov
inc
xchg
pop
fdivr
int3
add
push
sub
popf
call
mov
xor
aaa
pop
and
jne
lods
add
outsl
fdivr
pop
pop
pop
mov
mov
cld
les
rcl
fwait
push
xlat
or
xor
jb
hlt
popf
stos
shr
adc
dec
bnd
lcall
ss
ds
adc
imul
flds
fadds
or
dec
jecxz
sbb
mov
cmpsb
xchg
xor
and
shufps
pop
xor
ret
mov
es
push
jnp
call
and
push
pop
xchg
lret
jbe
sbb
test
sahf
mov
pop
arpl
out
pusha
in
xlat
ja
inc
push
stc
inc
insl
into
mov
pop
repz
sarl
sub
outsl
iret
push
jb
mov
or
and
jmp
outsb
pop
or
fdivl
push
imul
jb
nop
mov
inc
mov
repz
mov
xchg
les
gs
sahf
cli
into
cmp
stos
cmp
fs
mov
or
mov
pop
cld
cmc
pushf
or
mov
xchg
push
push
adc
out
push
lret
xchg
imul
sub
mov
mov
cli
sub
shll
adc
push
mov
jecxz
sbb
add
push
jle
xor
and
cwtl
push
lock
shlb
dec
movl
pushf
loope
and
jl
add
sub
lds
and
rclb
inc
xchg
in
lret
cmp
jae
xchg
xchg
add
xor
test
jo,pn
mov
nop
js
xchg
pop
ljmp
aaa
push
mov
push
jecxz
pop
out
fisttpl
mov
jmp
js
jp
paddsb
aas
push
test
xchg
fucomip
mov
pushf
and
dec
mov
test
insl
pushf
testl
fstl
mov
sbb
cmp
std
jl
stc
xor
dec
test
cmpsl
add
bound
xchg
lea
mov
in
mov
or
test
xchg
addr16
lock
daa
mov
int
push
loope
dec
mov
inc
int3
rorl
jle
pushf
mov
fnstsw
or
test
jno
pop
test
sbb
outsl
aaa
inc
xchg
dec
ret
popf
and
rclb
ljmp
rcrl
ds
mov
sub
mov
int
xlat
loope
test
xchg
int
orb
mov
sti
sub
popf
das
inc
push
mov
jno
add
jo
adc
dec
int3
ja
out
lret
dec
jg
mov
jb
cmp
sub
pop
xor
mov
jne
sub
adc
js
and
js
aas
nop
nop
xor
clc
dec
cld
jae
sub
inc
stc
add
cs
dec
jl
in
mov
roll
xchg
popl
xchg
sub
lods
adc
mov
cli
dec
lods
ljmp
data16
add
lods
inc
std
lds
test
and
and
test
ljmp
lret
inc
in
xchg
addr16
dec
jecxz
sti
fldl
dec
xchg
mov
in
das
lock
movsb
imul
dec
inc
in
add
mov
or
ficoml
adc
out
adc
in
pop
jno
or
dec
mov
mov
push
and
insl
rclb
jecxz
pushf
jnp
fidivs
jnp
push
loop
mov
inc
es
or
mov
push
outsb
arpl
push
arpl
cs
xor
cmpsb
ljmp
and
inc
dec
cwtl
pop
jg
hlt
dec
push
dec
mov
mov
ss
push
sarl
jge
sub
imulb
sbb
dec
xor
mov
rorb
pop
jae
insb
or
add
pop
cmp
xchg
dec
rcrb
hlt
call
out
cmp
cmp
daa
bound
std
adc
xchg
inc
into
fistl
jo
xchg
pop
mov
loope
repnz
jle
inc
dec
lods
lds
push
xchg
nop
mov
addr16
sub
cmp
in
dec
jge
mov
and
lcall
icebp
jno
or
repz
cli
push
shrl
aam
mov
jge
jp
cmp
hlt
pop
cwtl
andl
stos
int3
adc
jl
movsl
inc
fstpt
mov
enter
insl
jmp
xchg
and
jecxz
pop
das
push
or
lods
popa
mov
sub
lock
cmp
insb
jno
dec
cmp
and
xchg
mov
and
jl
mov
dec
push
pop
mov
and
dec
jo
data16
xlat
js,pt
dec
icebp
sahf
sub
cmp
inc
mov
rol
pop
in
hlt
add
lahf
push
or
add
push
inc
cmp
dec
out
and
jmp
ret
lods
push
hlt
and
jl
xor
mov
xlat
bnd
sub
add
mov
popa
push
mov
les
dec
push
mov
imul
mov
dec
iret
dec
or
inc
insb
jl
xchg
push
stos
cmpsl
dec
test
add
mov
adc
into
loop
insb
cld
mov
jns
ret
xchg
and
mov
mov
cmp
push
in
lea
inc
mov
lret
scas
mov
sti
push
popa
or
cmpsb
pop
lds
fisttps
inc
adc
sub
ss
jbe
popf
lret
lea
jbe
out
xchg
out
loopne
sub
or
add
into
push
int
into
loop
test
cwtl
xor
add
push
popa
mov
mov
cmc
lret
adc
xchg
xor
xchg
stos
mov
lock
xor
cmp
aad
sub
push
popf
sbb
clc
rclb
mov
sub
mov
in
shlb
push
inc
pop
sub
dec
push
pop
ljmp
sub
jo
popf
lret
loop
pop
mov
fistps
adcb
push
sbb
daa
mov
push
xchg
cs
and
push
push
inc
jp
xor
fistl
lahf
mov
les
mov
std
dec
push
or
push
fcompl
aad
xchg
mov
in
sbb
loope
fimuls
jne
sub
pop
ja
outsb
jl
dec
and
lahf
into
test
push
lret
cmpsb
stc
xchg
les
or
jmp
sub
jo,pt
iret
int3
mov
xor
rorb
xchg
pop
out
inc
pop
test
or
fs
and
xchg
jecxz
jae
mov
sbb
das
jno
inc
push
rolb
mov
xor
andl
sbb
pmaxub
ss
jg
cmc
jecxz
lret
xor
xor
xchg
jo
inc
loop
orl
js
insl
mov
std
add
test
or
mov
addr16
lock
pop
stos
mov
mov
dec
addl
js
scas
jnp
sub
nop
pop
ljmp
dec
push
cmp
push
mov
mov
stc
xchg
xchg
fistl
mov
dec
or
dec
lret
pop
add
push
sbb
popf
pop
cmc
sbb
sub
mov
and
inc
mov
arpl
xor
fnstsw
aaa
icebp
lods
xor
mov
mov
clc
jp
cltd
sbb
adc
lods
push
sarl
cld
cmp
jbe
pop
mov
cmpxchg
push
push
xchg
jnp
pop
mov
in
mov
jae
dec
dec
pop
lds
sub
or
test
test
into
adc
and
cltd
and
cmp
dec
adc
je
sbb
pop
or
adc
ja
hlt
add
xchg
inc
cmpsl
ja
push
dec
or
mov
mov
sbb
xor
andl
adc
arpl
mov
jno
xchg
jne
pop
fwait
cmp
inc
jl
xchg
jp
out
ljmp
mov
cwtl
icebp
mov
test
in
test
dec
mov
arpl
jb
aas
pop
jne
repnz
pop
xorl
ss
push
cmp
mov
call
mov
addb
adc
cmp
out
stos
addl
idiv
mov
inc
push
adc
jp
stos
mov
xor
out
sbb
jo
mov
mov
push
mov
inc
mov
out
and
lcall
fiaddl
into
fidivl
negb
sbb
or
aad
repnz
in
shlb
sbb
or
sub
cli
mov
adc
cmp
aaa
pop
gs
rclb
inc
xchg
and
sub
push
stc
lcall
or
pop
add
push
fwait
hlt
aam
loopne
or
pop
inc
adc
mov
add
add
inc
nop
mov
repz
outsl
mov
and
out
pop
shr
js
aaa
xchg
sub
sbbb
inc
inc
add
jne
cli
jb
cli
inc
fidivrs
aas
jle
bound
pop
aas
lret
sub
das
shr
jne
mov
push
jge
mov
fstpl
insl
push
test
pop
sub
xor
js
mov
cmpsl
sub
jl
mov
repz
ret
outsl
aas
leave
mov
dec
insb
arpl
stc
iret
fnsave
mov
mov
incl
mov
dec
or
je
inc
imul
aad
data16
or
lods
lret
add
mov
xlat
fwait
jl
scas
jo
daa
int
xchg
jns
lcall
jp
in
pop
push
mov
movsl
mov
loop
out
mov
inc
add
loope
pop
mov
lret
test
fbstp
add
inc
fdivl
out
sub
lret
pop
dec
mov
jg
mov
sbb
daa
mov
decb
or
movsb
int3
mov
jp
dec
sarl
cli
das
das
jp
out
adc
xchg
add
cmp
pusha
mov
mov
push
inc
enter
test
xlat
icebp
xlat
ror
ret
push
hlt
test
xchg
test
xchg
call
push
jmp
push
pop
xchg
imul
gs
ljmp
js
lock
sub
push
into
out
aaa
or
pop
add
dec
int
enter
int
inc
jmp
out
pop
mov
mov
sbb
cmc
fcmovnbe
pop
jbe
out
insb
cmp
push
fistps
xor
jle
pop
and
push
pop
xchg
push
pop
loope
and
or
enter
adc
adc
mov
mov
cmp
arpl
jae
cmpb
pop
cmpl
rorl
scas
les
sahf
mov
jne
add
das
pop
and
mov
xor
notb
repnz
xor
jo
jns
push
dec
jle
and
js
mov
cld
scas
inc
cwtl
jno
xor
lahf
adc
cmp
or
mov
addr16
decl
pop
sub
addr16
mov
add
mov
pop
js
imul
push
fadd
stos
stc
ud2
out
repnz
stc
repnz
gs
mov
pop
pusha
sbb
inc
cmp
cmp
cs
test
sbb
out
in
mov
xlat
add
repnz
dec
jmp
cmp
cmp
test
and
fists
fistps
mov
int
push
or
enter
sbb
imul
dec
xchg
mov
prefetch
or
mov
popf
mov
pop
or
fildl
and
lock
pop
pop
mov
aaa
shrl
mov
ret
pop
jg
jb
js
pop
add
jmp
sbb
pop
loopne
add
js
and
outsl
subb
iret
cltd
xor
xor
xchg
and
xor
jecxz
daa
push
scas
and
dec
jbe
imul
std
cwtl
orl
add
and
add
jp
jl
inc
add
dec
lret
push
aas
outsb
repz
movsl
jnp
xorl
fstpt
add
and
lret
loope
sub
cmp
insl
push
xlat
pop
cmp
outsl
aas
jmp
add
ret
mov
push
movsl
xchg
mov
cmpl
or
pop
loop
sub
ds
sub
dec
add
adc
mov
mov
mov
mov
mov
jge
stos
or
xchg
fwait
shrl
jge
lahf
adc
pop
fistl
xor
fnstenv
inc
sbb
lret
inc
shrb
daa
mov
jno
sbb
cmpsb
add
mov
rcrb
fstpt
mov
dec
pop
mov
lea
pop
xchg
popf
xchg
mov
lods
jle
mov
mov
mov
stc
jmp
cmp
stos
movsl
adc
cmp
ja
fcomps
addr16
insl
push
xchg
xchg
mov
pop
fiaddl
and
xchg
in
inc
inc
cs
pushl
cmp
scas
pop
daa
mov
lods
or
loop
not
xchg
js
sti
sbb
jb
add
push
repnz
jge
in
ret
mov
and
inc
cmp
insl
inc
pop
jle
std
inc
call
jne
out
testl
xchg
out
cmp
sub
insb
add
jg
cmp
push
movlps
mov
jl
sbb
or
mov
sub
mov
xor
lcall
lods
jbe
sbb
pusha
xchg
push
push
in
sti
stos
mov
mov
out
push
jno
outsl
stc
jg
or
push
and
push
push
jp
pop
sbb
push
repnz
sub
outsl
or
or
push
xor
decl
cs
insl
and
mov
fcoms
inc
lret
xor
in
mov
sub
popf
adc
jbe
cltd
dec
cmp
std
mov
aaa
pop
add
or
bound
sarl
arpl
outsb
imul
mov
xor
cmp
outsb
or
loop
lock
cs
or
xchg
cmp
or
ds
call
stc
daa
lock
scas
sub
add
push
cmpsl
mov
mov
xchg
xor
fsubr
cmp
insl
rol
push
cmp
clc
and
insl
fmull
imul
jmp
dec
pop
jbe
sbbl
xchg
leave
pop
lret
push
arpl
or
cmp
outsl
fwait
push
xor
dec
mov
ja
lret
push
hlt
xor
add
inc
add
jp
ss
mov
cmp
sahf
sub
jno,pn
insl
nop
ljmp
jbe
add
clc
add
sahf
lahf
mov
sbb
jle
push
repnz
add
stos
stos
lea
cmp
cwtl
xor
roll
mov
add
ljmp
shll
jg
mov
or
adc
fisttpl
mov
pop
mov
jge
lahf
insl
pop
out
push
jecxz
add
sbb
cli
addr16
loopne
mov
pushf
mov
shlb
ret
mov
cld
in
pop
aad
jg
cs
scas
lahf
push
enter
jg
sahf
push
outsl
fisubs
insl
enter
dec
clc
fs
xchg
jo
sbb
sub
fbld
adcb
jl
cmp
dec
dec
fwait
xchg
daa
andl
mov
sub
jmp
test
js
sbb
push
shld
mov
push
clc
dec
adc
xor
in
inc
jl
lods
mov
mov
xchg
in
out
xchg
addr16
pop
mov
cwtl
out
push
popl
and
aam
movsl
jno
test
jmp
jecxz
ret
fs
xor
adc
sti
push
lea
out
push
fsubp
repz
je
jecxz
pop
addr16
test
das
sahf
test
pop
enter
push
or
push
bnd
outsb
push
and
js
push
or
repz
std
cmpsl
nop
ds
aam
cmp
jecxz
jo
push
xchg
or
jmp
lea
push
iret
jb
rcll
xchg
dec
or
dec
or
mov
mov
aad
dec
aad
xchg
movsb
insb
pop
mov
shrb
pop
inc
cmp
andb
cld
das
mov
in
push
push
sbb
push
insl
sbb
sub
cmp
or
push
xchg
mov
out
jle
add
dec
es
test
pop
xchg
loope
pop
xlat
sahf
jge
push
fdivs
scas
cmp
sub
leave
sub
mov
jecxz
ret
xor
sbb
mov
sbb
je
pop
in
mov
jo
lods
mov
lods
sbb
test
jno
mov
fidivrs
ror
out
data16
arpl
fs
sti
test
push
rorb
aas
outsl
xchg
add
aaa
loopw
mov
jge
add
fwait
out
lret
jge
xchg
dec
insb
rclb
xchg
std
pop
push
out
jo
out
sbb
push
dec
dec
inc
mov
imul
push
decb
xchg
cmp
nop
loop
jo
push
ret
aas
sub
jp
mov
movsl
jmp
jecxz
cmpsb
cmp
mov
cmpsb
in
ljmp
sbb
js
jle
cwtl
add
xchg
push
pop
inc
cmp
pop
stos
cmp
add
push
sbb
aam
fs
sub
jo
sub
insb
les
dec
push
inc
hlt
push
sbb
leave
xchg
mov
push
scas
xchg
inc
pop
sarl
aam
mov
jns
xor
mov
sarl
bound
and
sbb
pusha
mov
lods
sbb
pop
lods
test
mov
mov
das
push
loop
xchg
movsb
daa
ret
xchg
int
mov
lret
push
or
mov
xchg
sbb
pop
sub
cmc
dec
mov
rorl
lds
dec
push
je
or
mov
scas
jg
out
leave
pusha
jmp
sbb
mov
adc
out
scas
cmpl
out
fs
std
insl
push
sub
xor
repnz
mov
ds
mov
int
pusha
inc
push
jl
push
mov
lock
hlt
sbb
shr
and
mov
imul
test
ss
add
cmpsl
inc
xor
cmpsl
push
mov
cmpsl
sbb
mov
in
aaa
jnp
xchg
in
mov
add
and
sarb
adc
sub
ljmp
gs
movsb
or
or
fs
add
pusha
adc
lods
adc
icebp
add
mov
fsubs
js
aas
lock
sub
gs
pop
cs
ret
jge
stos
rcl
rolb
add
cltd
in
hlt
mov
punpckhbw
leave
orl
cmp
stc
jg
lea
movsl
ds
int
out
loope
aam
mov
pop
xchg
jmp
inc
and
mulb
jnp
add
sub
loopne
jbe
movsl
sbb
mov
jno
loopne
cwtl
shlb
decb
xor
imulb
or
pop
lret
jl
push
in
adc
subb
adc
sbb
adc
push
jb
dec
iret
jmp
add
stos
inc
sbb
push
out
cmp
fbstp
jge
dec
repnz
jg
data16
cwtl
test
rcl
pop
loope
in
pop
jge
and
std
inc
fdivp
add
pop
int
pop
add
sbb
gs
pop
jo
cs
xor
dec
jp
mov
stos
scas
lcall
out
enter
adc
jnp
cmp
jl
mov
test
push
fwait
add
es
push
cltd
stos
push
add
outsb
psrlw
and
fistl
popf
fisttpl
fadds
cwtl
cmc
pop
gs
adc
xchg
mov
or
xchg
test
pushf
nop
and
push
lcall
negb
gs
push
jmp
push
lret
shrb
clc
ret
xor
mov
mov
add
mov
mov
jg
mov
mov
rol
repz
jns
sbb
icebp
xor
das
jle
push
sti
repnz
xor
outsl
jo
pop
add
xchg
in
shlb
push
in
outsb
inc
sub
sahf
dec
mov
xor
cmpsl
xchg
pop
aad
sbb
jle
popa
in
cld
inc
mov
xchg
ficomps
ljmp
aas
adc
out
xor
fiaddl
inc
xchg
sbb
xor
aam
jno
dec
push
out
xor
xchg
std
stos
addr16
sub
stc
add
adc
adc
or
daa
cs
dec
jo
push
jecxz
sub
pop
test
or
aaa
xlat
in
jecxz
pop
xor
lock
pop
cmp
xor
fwait
mov
add
cmp
jo
loop
jo
popa
xchg
xchg
mov
cmp
or
inc
jecxz
push
cld
lock
repnz
mov
cld
adc
or
adc
lahf
fiadds
pop
dec
movsl
in
mov
adc
scas
dec
lcall
cmp
adc
add
sti
fbstp
jbe
roll
mov
js
test
cmp
pop
js
cmp
and
adc
cwtl
mov
scas
or
xchg
xchg
test
or
sbb
cmp
mov
dec
sub
data16
mov
xorl
push
lcall
pusha
inc
jae
imul
inc
pop
push
lcall
out
adc
cld
js
mov
rep
lret
icebp
xchg
inc
and
jle
fisubrl
hlt
or
pop
and
sub
mov
mov
or
adc
and
sahf
pop
or
lea
sub
pusha
jb
sbb
sbb
test
push
and
je
lahf
pop
lahf
test
xor
mov
and
pop
adc
xchg
cmpl
aas
sub
xor
mov
imul
test
imul
sub
xorb
push
xor
in
aad
push
lock
loope
inc
psubw
movsl
sbbb
xchg
add
dec
push
add
cmp
hlt
cmpl
ret
hlt
sub
mov
clc
movl
test
mov
dec
cmpsw
adc
ret
cmp
xchg
mov
jb
jp
fwait
repnz
loopne
push
pop
je
pop
out
ret
fiaddl
pop
xchg
xor
scas
popa
and
in
sbb
negb
rol
sub
dec
lahf
xor
push
sub
shll
jno
jo
inc
leave
pop
cmp
pop
lret
aam
pop
xchg
cmp
jno
fisubl
push
adc
push
mov
add
sub
xchg
or
and
sub
mov
or
xchg
add
sbb
mov
sahf
push
jb
in
xor
jae
lods
push
imul
sub
into
dec
test
jmp
sarl
lret
cltd
lods
xor
movsb
lock
loope
push
out
dec
stos
sub
outsb
cmpl
stos
adcl
jecxz
ljmp
in
sbb
iret
stc
insl
lds
or
or
out
sbb
xor
mov
orl
sbb
xchg
sbb
jnp
ret
jmp
stos
and
dec
mov
inc
sbb
xor
or
inc
dec
push
or
ja
inc
adc
push
ret
add
mov
fisubl
jb
aaa
cmpsl
add
adc
dec
pop
jle
stc
mov
fldl
xor
sbb
in
rclb
and
push
lahf
or
or
in
sbb
push
pusha
pushf
stos
insb
push
pop
mov
lret
pop
jecxz
rcrl
pushl
push
add
push
imul
stos
pushl
test
loope
loop
loope
daa
sahf
int3
clc
lds
sbb
push
ljmp
hlt
imul
jmp
scas
jl
shr
clc
mov
add
cmovs
das
cli
lds
ret
mov
mov
jge
cltd
insl
shr
dec
mov
xchg
xchg
ret
insb
or
xor
inc
push
clc
test
push
aaa
cmpsl
lret
inc
mov
es
sbb
dec
cmpsl
cmove
sahf
sar
imul
int
enter
push
sub
outsl
out
outsb
xchg
js
push
cli
movsl
mov
inc
loope
jnp
mov
sbb
dec
int
cmpsb
and
jbe
push
sbb
jge
lahf
lahf
push
jnp
push
mov
push
scas
xchg
or
js
dec
adc
pushl
in
test
xchg
push
xchg
popa
lcall
pop
cmpb
mov
xchg
pop
test
dec
adc
fs
xorb
ret
in
cld
dec
push
push
adc
cwtl
ds
mov
repnz
push
xchg
pop
or
xor
cmc
mov
out
mov
pop
xchg
xchg
sbb
test
xor
add
std
ja
fidivrl
outsl
jae
pop
pop
jns
inc
and
movsl
mov
jg
imul
cmp
push
faddp
sub
loopne
ficoml
push
sahf
mov
sbb
jae
test
xlat
andl
lds
sub
add
dec
daa
insb
add
cld
push
cmp
add
aas
fwait
rep
mov
dec
or
jle
push
jmp
jp
sti
popa
mov
lret
pop
pop
ret
add
outsl
cmp
call
inc
mov
xorl
ds
into
loopne
out
push
mov
addb
or
dec
fistpll
or
sub
in
sub
rcrb
adc
pusha
fcomps
aas
enter
hlt
jns
mov
mov
and
jno
mov
rorl
or
sub
pop
and
bound
push
and
mov
movsl
dec
cmc
xor
sub
push
sub
incb
mov
add
cmp
cli
data16
push
jbe
ror
xor
xor
mov
and
test
dec
jno
rcrb
daa
add
pusha
js
inc
or
stc
dec
movsb
outsb
insl
push
jae
cmp
add
fidivl
dec
adc
repz
mov
je
xchg
cld
loop
mov
dec
insb
inc
jae
dec
push
sbb
insl
popa
mov
mov
lahf
sub
imulb
push
test
add
in
cld
dec
cs
mov
movsb
push
fs
dec
addl
inc
loope
or
mov
cmp
push
mov
mov
xor
stos
dec
out
cld
fnstenv
aam
xchg
dec
or
jbe
cli
jb
out
and
jns
sub
sbb
mov
adc
fwait
cmpsl
jecxz
cmpsb
pusha
cld
lcall
repnz
adc
lods
xchg
lods
xor
dec
jle
subl
xor
xchg
rclb
ficomps
and
popa
es
xchg
cmp
in
sbb
jecxz
lret
mov
xchg
dec
pop
outsl
inc
popa
dec
movb
fcoml
sbb
jb
je
out
pusha
cld
mov
jle
fisttpll
add
subb
mov
aaa
cmp
jbe
jne
stos
mov
jne
sti
loopne
leave
outsl
jns
dec
mov
cmpsb
movsb
outsb
and
test
sbb
push
xlat
movsl
ret
push
std
and
and
mov
push
mov
xor
mov
test
adc
jnp
xchg
mov
icebp
jo
mov
or
into
ret
dec
jmp
adc
loop
stos
stos
dec
test
pop
jb
dec
mov
push
cmp
test
movsb
mov
mov
jmp
mov
jp
pop
or
and
jb
sbb
or
lcall
rorb
mov
fidivl
and
xchg
pop
std
cli
cwtl
jns
test
fadds
mov
xchg
rorb
aas
orb
addb
gs
pop
and
mov
ljmp
mov
loop
dec
sbbl
stos
mov
mov
sbb
faddl
rcl
mov
inc
mov
int3
sub
xor
fwait
lods
mov
adc
insb
xchg
das
mov
addr16
jl
jecxz
out
sbb
iret
cmpsb
or
lahf
pop
cli
cmc
mov
mov
sbb
ljmp
mov
clc
mov
mov
mov
dec
adc
xchg
xchg
push
jl
jmp
mov
dec
fldcw
nop
test
pop
sbb
and
lea
jle
fucomip
iret
adc
pushf
jns
pop
pop
into
xor
dec
jp
jle
movb
stc
xchg
lods
cltd
into
les
iret
jbe
je
and
cmp
mov
es
jb
fld
stc
fsts
push
fisubl
movsl
jbe
adc
aas
inc
in
pop
and
stc
xor
or
sbb
sar
hlt
push
add
loopne
pop
adc
xchg
stc
fwait
adc
dec
jmp
sbb
aaa
adc
stos
out
out
mov
xor
jmp
xlat
loop
mov
mov
imul
push
xchg
shr
repz
push
lods
mov
or
push
add
jae
mov
sub
shll
test
jp
into
add
adc
mov
mov
cmp
xchg
stos
pop
push
in
inc
inc
sbb
mov
jns
cs
mov
adc
sub
mov
adc
fsubr
dec
aaa
fsubs
cld
and
loopne
sarb
adc
stc
mov
ret
mov
push
mov
cmp
jp
adc
fs
fstl
push
aaa
push
and
ret
mov
mov
loop
fnstsw
mov
mov
dec
nop
cmp
scas
daa
add
jl
or
cmp
das
inc
jne
test
dec
mov
icebp
and
adc
dec
lea
incl
and
mov
dec
cmp
xlat
push
fdivrl
xlat
and
jnp
or
cmp
xlat
shl
or
mov
and
sub
aaa
dec
dec
nop
adc
mov
test
mov
mov
mov
cmp
leave
test
xor
arpl
sbb
add
or
push
lock
stos
push
push
fcomps
xor
jns
clc
mov
fildll
sarl
pop
nop
dec
sub
sbb
imul
repnz
cmp
fdivl
cmp
notl
lcall
sub
ja
test
pop
lock
aad
out
repnz
negb
inc
in
lret
xchg
lds
jg
mov
sbb
into
loopne
mov
push
pushw
into
push
cmp
repz
call
sub
test
pop
rclb
lds
add
cmp
repz
jnp
out
pop
jl
movsb
mov
and
lahf
cmp
cmc
sbb
test
dec
mov
iret
jecxz
sbb
cmp
shrb
add
les
leave
inc
aaa
and
push
adc
xchg
jle
add
jo
dec
mov
es
cmc
insb
jmp
pop
sbb
pop
fmul
ljmp
das
repnz
sbb
dec
dec
push
enter
mov
mov
sub
xchg
sbb
loop
dec
cmp
in
arpl
arpl
push
sbb
fstpt
adc
mov
sahf
ljmp
pinsrw
mov
jo
mov
mov
cmc
cmpxchg
add
pop
mov
sbb
push
sbb
ret
in
add
jl
repnz
dec
aaa
push
mov
mov
xchg
push
dec
insb
mov
imul
out
mov
pop
cmp
mov
mov
mov
push
test
sub
mov
mov
call
imul
fadds
loopne
cmp
aad
scas
mov
xor
out
repnz
adc
mov
jl
shr
push
lret
jns
push
ret
inc
rcrb
mov
inc
inc
movsl
jge
sbb
xchg
add
imul
lahf
sbb
jbe
and
jmp
xor
movsb
push
push
sti
packuswb
lods
mov
fstl
add
iret
test
push
pushf
or
xchg
fiaddl
ds
lds
inc
imul
jne
test
lock
push
test
add
push
cmp
fnstenv
pop
xchg
sub
xlat
sbb
shr
add
lods
lahf
add
lret
xor
jae
stc
adcb
mov
in
movsb
mov
daa
int3
pop
popf
sub
jg
adc
std
add
sub
es
in
add
pop
and
push
jl
mov
sbb
sahf
pop
push
ljmp
xchg
das
sbb
or
jle
pop
adc
roll
fmul
je
stos
icebp
stos
imul
xchg
jmp
cltd
adc
dec
pop
mov
clc
mov
push
mov
jo
sbb
jnp
sub
jecxz
mov
mov
ds
call
repz
loop
out
imul
mov
dec
mov
cmp
jmp
nop
dec
cmc
popl
test
and
pop
cmp
es
js
xchg
push
aam
fwait
test
xor
fildll
shlb
cmp
xchg
shll
out
lcall
push
mov
lret
fldt
sub
or
sub
push
mov
xchg
jecxz
mov
out
testb
int3
jbe
addl
aam
cmp
xchg
push
lret
loop
sbb
jb
sub
ds
or
movsl
mov
fs
jo
sbb
jge
mov
cmpsb
xchg
cmp
mov
push
jo
sar
xor
test
cli
mov
pushf
sub
out
fisubl
insw
mov
mov
push
test
cmp
cld
push
lds
daa
mov
loope
sbb
sbb
jecxz
sbb
mov
xchg
gs
outsl
lods
sub
divl
add
mov
jnp
adc
cli
in
mov
nop
jmp
lods
xor
push
leave
ret
jp
dec
mov
scas
and
push
mov
xor
rclb
pushf
nop
imul
push
mov
xchg
pop
push
cmp
jae
out
pop
cmpsb
sbb
std
mov
add
inc
pop
xor
aam
sbb
mov
lret
icebp
sbb
mov
jmp
inc
mov
mov
or
cmp
or
shll
shrl
sti
xchg
int3
xchg
xchg
xchg
dec
jmp
dec
or
lds
pop
mov
lahf
add
pushf
pop
sub
ja
and
and
xchg
nop
pop
fsubrs
in
inc
push
sbb
lds
loop
inc
mov
mov
ficomps
or
mov
fcmovb
add
pop
pop
bound
sub
cmc
stos
pop
jle
sub
jae
int
mov
jg
jbe
aaa
pop
ds
xchg
int
movsb
xor
cmp
fcom
sub
xchg
popf
inc
stos
orl
inc
pop
std
pop
addr16
jle
pusha
lret
push
sbb
push
mov
cwtl
bound
imul
enter
cmpsb
push
jne
mov
mov
jnp
sub
pop
cmp
cmc
das
pop
push
dec
bnd
fs
mov
inc
aaa
rolb
outsl
fsubl
jecxz
xchg
pop
in
scas
dec
pop
insb
icebp
jno
jbe
loope
jp
repnz
or
ljmp
jl
push
cmp
aad
cwtl
andl
sub
push
or
adcl
inc
sbb
push
xchg
mov
cmp
mov
ds
in
mov
outsl
daa
loopne
lcall
jg
mov
xor
xchg
leave
fwait
cwtl
out
mov
xchg
dec
add
cwtl
mov
loope
aaa
das
iret
cmpsb
cmp
pop
imul
repnz
call
lea
pop
inc
xchg
jno
xor
sub
scas
mov
push
sbb
jle
mov
push
mov
xchg
loop
insb
mov
fdivr
sub
iret
fwait
aaa
push
shll
or
fisubs
inc
jle
in
xchg
push
clc
lods
imul
pop
ja
pusha
xor
cmp
mov
and
sbbb
jns
xor
pushf
push
mov
mov
negl
imul
loope
or
inc
cwtl
shlb
ret
les
aaa
fbld
add
jp
dec
adc
mov
shr
xchg
cli
jge
cmpsl
stos
jge
mov
insl
adc
lret
sub
pop
dec
mov
or
fcoms
roll
mull
daa
popa
pop
aas
sub
dec
out
mov
xorb
add
ret
enter
adc
cmpb
jne
push
mov
push
sbb
xchg
xlat
sub
sbb
cld
xchg
lret
in
jp
lret
jl
imul
add
inc
pop
adc
int
cmp
lods
or
push
jl
repz
mov
hlt
or
jl
loopne
loope
fs
mov
mov
lea
and
jg
mov
int
mov
push
lahf
and
outsb
mov
xchg
xchg
jae
loope
add
push
or
inc
icebp
and
or
sbb
loop
add
nop
stos
testl
dec
pop
inc
mov
int3
xor
pop
movsl
shrl
mov
in
jo
int3
mov
jecxz
push
shrl
gs
pop
loopne
ret
xchg
imul
bnd
mov
stos
add
pop
mov
lock
mov
and
mov
shrb
fimuls
loope
sbb
aaa
pop
add
jbe
call
cmp
mov
repnz
les
int3
adc
dec
pop
test
cmpsl
in
add
cwtl
jbe
push
js
test
push
pop
jo
ret
ss
and
repz
pop
cmp
addr16
int3
dec
xchg
out
jne
and
pop
rclb
xchg
daa
adc
xor
out
pop
pop
pop
mov
add
rolb
or
mov
loopne
cli
ss
mov
mov
xor
sar
aam
shrl
mov
out
test
jns
inc
sbb
iret
or
fdivrp
mov
enter
jns
or
mov
repnz
sti
arpl
and
loopne
pushf
mov
cmpl
jmp
mov
fisubrs
sub
dec
popa
testl
fidivs
mov
mov
insl
lcall
outsl
decb
push
popl
push
iret
cltd
sub
jp
ss
inc
push
loopne
sub
lods
cmpsb
mov
sub
and
sbb
pop
push
inc
insb
insl
mov
inc
aas
pop
sub
cmp
lret
jge
lock
loop
or
mov
jae
shll
cmp
ja
aas
jnp
push
add
jne
repz
fsub
add
out
jo
lahf
cltd
stos
xor
data16
jno
sarb
gs
jge
sbb
or
or
insl
sub
adc
mov
filds
int3
push
cmc
pop
testb
push
in
lock
fstl
jne
sbb
and
sub
fwait
cmpsb
rcr
cwtl
jbe
daa
jmp
and
mov
adc
inc
mov
testb
sbb
imul
cs
jno
es
inc
test
xchg
jbe
push
mov
adc
or
add
nop
pop
jg
movsb
and
imulb
neg
nop
xchg
sub
pusha
add
mov
iret
sbb
lods
and
jb
jmp
and
xchg
sbb
es
testl
test
dec
aaa
push
fsub
sbb
out
subl
add
stos
push
notb
shr
cs
sub
and
ret
pushf
cmp
sbb
jo
ret
cs
dec
ror
mov
ss
mov
jmp
adc
sub
mov
mov
push
in
rorl
int
cmp
lcall
aad
pop
jno
jg
into
mov
aad
xor
ds
sbb
leave
xchg
sbb
adcb
mov
sbbl
lret
mov
xor
lods
push
jmp
push
push
test
pop
test
adcb
int
dec
addr16
fmull
lahf
inc
and
test
shrl
dec
and
test
mov
jl
rorl
jp
ss
xchg
sbb
insb
test
mov
jns
cmp
std
mov
add
mov
ficompl
fdivrl
add
dec
ds
popf
jns
jg
loope
inc
dec
lea
and
in
mov
movsb
mov
or
je
add
add
and
jb
xchg
lods
jge
test
add
add
js
sub
sbb
jnp
adc
leave
pop
push
mov
pop
jns
and
dec
cmp
xchg
lods
addl
sbb
test
dec
shl
mov
popf
push
or
ret
jp
push
xlat
scas
xor
popa
mov
pop
xchg
cmpsb
inc
or
fldz
add
sahf
notl
adc
data16
fistpll
dec
sub
aas
mov
clc
mov
test
and
add
mov
sarb
call
fidivs
pop
cmp
push
pop
add
aad
into
mov
jns
inc
mov
and
mov
test
adc
je
mov
insb
popa
sbb
inc
sub
icebp
nop
sub
int
xor
pusha
and
aad
pop
mov
mov
into
push
outsb
pop
popf
popa
lcall
mov
or
push
adc
pop
cmp
inc
loope
test
push
test
dec
inc
pop
mov
jno
inc
mov
mov
hlt
pop
inc
pop
outsb
inc
outsb
lahf
mov
inc
lds
jnp
and
lods
mov
stos
jmp
fisubrs
arpl
enter
cmp
pop
sub
nop
xchg
data16
jecxz
xchg
fstps
cmp
sbb
loopne
pop
xor
inc
sub
mov
adc
cltd
lock
cmp
mov
sub
lcall
popf
inc
push
cmp
xchg
out
xor
mov
imul
test
lea
in
ds
jno
xchg
adc
pop
js
push
sbb
popa
sti
sbb
fwait
xor
dec
dec
aas
sti
in
sub
jnp
add
test
dec
mov
cmp
out
mov
leave
pushf
imul
rclb
aam
or
orb
dec
add
ja
lahf
or
pop
or
out
stc
lahf
jg
rclb
cmpb
lock
xchg
sbb
jbe
xchg
idiv
push
ds
inc
inc
cmpb
xchg
cli
lock
out
dec
xlat
fnsave
inc
xor
push
pop
mov
insb
jle
dec
mov
lahf
lret
pop
sbb
scas
inc
dec
inc
push
test
popa
lea
dec
lods
ficoms
push
ret
sbb
sub
add
pop
jae
or
out
mov
sub
outsb
jno
popa
jl
hlt
sbb
inc
mov
sub
fwait
push
xchg
xchg
add
int
shrb
dec
pop
mov
orl
in
scas
cmpsb
fisttps
sbb
push
jp
je
xchg
sbbb
and
xchg
cmp
adc
insl
enter
test
ror
pop
xchg
pusha
xor
leave
in
push
jb
push
xchg
mov
mov
pusha
stc
popf
mov
loopne
mov
cmovnp
scas
daa
push
iret
je
pop
mov
and
cmp
inc
call
mov
dec
xchg
inc
mov
aas
jle
insl
daa
xor
and
cmpsl
push
jnp
dec
sbbl
clc
add
mov
inc
nop
iret
sbbb
push
pop
cltd
sbb
or
mov
fadd
or
ret
xchg
add
adc
inc
aam
fistl
mov
in
lods
jns
stos
push
push
fildl
sub
pop
cmp
shr
sub
iret
cld
mov
or
loope
pushf
jnp
sub
pop
push
mov
aam
dec
ds
rorb
push
nop
negl
fdivrs
insl
pop
mov
inc
jl
inc
fistpl
and
dec
sti
xor
das
ljmp
add
or
mov
ret
mov
dec
std
lcall
adc
pop
cmp
push
xchg
sub
add
arpl
cmpsl
imul
aam
outsl
xchg
in
loop
lea
jle
cmp
movsl
xchg
xor
pop
mov
ds
xor
lods
int3
ret
stos
imul
dec
xchg
faddp
pushf
psrlw
mov
pop
ja
mov
cld
pop
dec
sbb
adc
and
adc
push
and
xchg
std
ret
icebp
sbb
daa
lea
xchg
testl
jne
pop
mov
in
in
in
dec
data16
xor
jecxz
push
icebp
mov
stc
insl
mov
out
push
push
scas
pop
xchg
in
inc
outsl
pusha
mov
aas
add
sarb
sbb
in
pop
enter
pop
xor
add
lods
leave
lret
divb
test
aaa
lds
jno
fimull
aas
sbb
xchg
adc
pop
pop
xorb
int
mov
add
pop
and
aad
mov
scas
pop
inc
mov
jae
jnp
cmp
flds
popl
cltd
cmc
push
xor
push
jle
aas
fcmovne
and
inc
fcmovnb
mov
rorb
mov
xor
inc
lods
sub
or
pop
adc
pop
inc
push
add
xor
mov
loop
dec
mov
lds
aas
xor
fs
adc
js
xchg
push
sbb
into
pushf
in
sarb
mov
mov
arpl
jbe
pop
rcrl
lock
in
ds
ja
and
cltd
mov
outsb
mov
pusha
cmc
ficoms
int3
arpl
popf
jle
scas
in
movsl
jg
push
mov
xchg
push
xchg
jne
stos
add
xor
inc
std
adc
adc
loopne
lret
mov
cmp
or
lahf
lret
fmul
data16
movsl
aaa
cmp
sbb
insl
or
addb
push
sbb
adc
xchg
cmpsl
fs
xchg
push
sub
arpl
push
gs
rcr
out
mov
arpl
sbb
fst
sti
pop
pop
into
pop
push
push
dec
movsl
jae
int3
and
sbbl
push
jns
scas
int3
mov
repnz
push
xor
daa
push
jne
movsb
popa
lds
cmp
clc
pop
add
sub
add
scas
js
pop
add
in
push
pop
fadds
and
fdiv
xor
push
clc
pop
sbb
mov
push
or
jno
out
push
jge
lods
add
jge
jge
add
pop
nop
jns
mov
inc
cmc
inc
arpl
aam
scas
clc
pop
cmpsb
loopne
aas
lcall
or
jle
mov
shll
mov
imul
into
outsb
movsl
arpl
mov
add
and
imul
xor
idiv
adc
icebp
inc
sub
adc
int3
aaa
je
jecxz
cmp
mov
iret
add
ret
push
inc
dec
fldl
add
push
imul
test
push
xchg
pop
movsb
inc
pop
sub
jmp
imul
aad
pop
mov
out
inc
das
mov
add
in
cmp
mov
xor
add
pop
dec
adc
fdivs
fstps
lods
inc
cmp
fidivrl
xchg
pop
push
xor
add
pop
sub
fadds
mov
cli
enter
adc
cld
and
sahf
das
cmpsl
shll
adc
sub
or
shlb
pop
mov
xor
xlat
push
out
push
or
ret
adc
push
fisubs
and
and
outsb
shlb
cmpps
test
pop
leave
jns
xchg
fcomps
push
dec
out
enter
cmpsl
xchg
cs
push
push
imul
int
bnd
xchg
add
sbb
xlat
out
das
jle
sub
xor
psrad
ret
jmp
xor
es
int
mov
imul
pop
scas
in
inc
test
int3
cs
cld
outsl
aad
pop
push
sbb
mov
aas
jo
into
out
imul
into
jl
enter
add
cmp
in
push
gs
jae
mov
mov
xchg
or
pop
jle
sbb
mov
pop
ds
or
nop
inc
in
pop
aaa
jbe
cli
push
aaa
dec
mov
push
pop
lods
pop
mov
pop
xor
or
lahf
fnsave
adc
push
lea
and
dec
mov
aad
in
jp
sbb
pop
pop
test
push
add
idiv
ss
or
addr16
movsl
fucomi
out
add
add
fs
pop
pop
loop
lret
pop
rclb
ret
sbbb
dec
vmovdqu
add
adc
iret
adc
cmp
frstor
inc
and
push
js
sarl
stos
and
mov
sub
outsb
sarl
in
movsb
jb
cmp
lds
jnp
movsl
pop
adc
lret
lock
repnz
dec
dec
dec
stos
cwtl
cmc
movsl
mov
cmp
lock
jno
xlat
jo
shl
jge
mov
cmp
test
xchg
test
jle
add
mov
adc
int3
ss
dec
jne
add
or
xor
sub
fisttpll
insb
add
pop
mov
jae
pop
inc
adc
fmuls
into
sbb
xorl
lret
pusha
in
dec
and
test
inc
inc
and
add
sub
imul
clc
imul
sbb
push
xchg
out
ds
out
mov
cmp
fdivrl
lret
and
mov
ja
hlt
adc
jnp
sbb
dec
cli
lods
test
mov
inc
mov
sub
sbb
clc
fdivl
stos
add
imul
rolb
orl
mov
repz
andl
mov
enter
push
lret
enter
dec
int
push
dec
mov
jp
nop
gs
and
jo
rorl
je
and
adc
cmp
push
adc
inc
cmpsl
cld
repz
icebp
and
or
add
rclb
xor
notb
aam
je
fisttps
sahf
pop
or
xor
mov
sbb
mov
dec
jno
and
pusha
jno
adc
push
jb
cs
decb
or
fcompl
sbb
test
testl
mov
fidivrs
sub
rcr
test
xchg
shlb
rcrb
adc
push
adc
call
jne
mov
xchg
and
and
aam
sbb
lods
movsl
mov
aad
nop
push
negl
fucomp
push
ja
int3
popa
dec
pop
mov
push
jne
adc
or
inc
in
ljmp
aaa
call
jmp
cmp
sbb
inc
mov
mov
jno
pusha
mov
rep
cmp
movsl
xlat
mov
nop
jl
mov
jne
fcmovbe
lcall
inc
sarl
mov
lahf
inc
repz
adc
jbe
data16
popf
jo
or
cli
jne
adc
and
jae
xchg
mov
lcall
mov
das
adc
fs
inc
mov
inc
pop
jmp
mov
xchg
xchg
xor
cmc
rcll
cmc
jp
aaa
jne
rcll
rolb
push
xor
pop
movsl
iret
leave
cmp
lret
pop
popf
cmpsl
mov
inc
mov
lds
jno
adc
adc
test
sub
popf
mov
mov
adc
hlt
mov
adc
push
dec
xor
pop
clc
adc
mov
negl
addr16
aam
xchg
cwtl
cmc
xor
jmp
cmp
add
fists
cmp
iret
lock
loopne
cmp
jmp
testb
ds
lds
fisubrl
stos
movsl
xchg
repz
add
dec
fldl
in
push
xor
xor
insl
jecxz
and
inc
loope
mov
sub
pop
sbbl
push
push
gs
dec
dec
push
mov
shlb
push
mov
cltd
inc
xor
mov
lods
jp
cmpsl
push
and
pop
gs
jl
popf
adc
movsb
loopnew
add
ljmp
sbb
ficoml
sbb
or
rorb
push
neg
lret
and
add
into
sub
push
pop
aas
dec
xchg
loopne
fidivl
xor
testl
mov
mov
cmp
xchg
loop
lds
adc
pop
leave
cld
and
dec
pop
jbe
mov
mov
call
cmp
leave
jb
scas
inc
or
call
or
cwtl
std
and
lret
inc
ret
pop
inc
inc
lods
push
iret
shl
cmp
negb
add
inc
fwait
mov
push
xchg
cli
mov
jl
xchg
mov
repnz
xchg
add
testl
mov
int3
lret
and
cmc
dec
add
fidivs
pop
sbbl
adc
fwait
imul
popa
cltd
inc
leave
lret
repnz
mov
sub
shrl
adc
das
jb
out
cmp
aam
out
jne
mov
cmp
rcll
push
cmp
movsb
nop
mov
in
pop
imul
dec
xchg
fistpll
pop
nop
mov
add
adc
inc
dec
adc
or
fldenv
fwait
rolb
adc
shrb
popa
push
in
or
add
lds
and
out
int3
adc
inc
mov
pop
pop
pop
dec
fwait
test
mov
test
hlt
test
mov
mov
das
pushl
jae
call
or
jno
jbe
out
xchg
mov
fwait
xchg
sub
ret
pushw
cmpsb
sub
jo
mov
adc
in
in
aas
pop
out
sahf
es
mov
push
dec
mov
fisttpl
pop
mov
jbe
addr16
mov
out
adc
data16
push
jns
negl
jmp
inc
repz
mov
lahf
push
fcom
jae
dec
fdivp
lret
sbb
mov
xchg
xor
xor
adcl
notb
mov
je
jmp
lds
in
in
mov
ret
orb
push
xchg
scas
mov
aaa
jl
cmp
mov
or
insb
aam
xchg
in
cmp
loop
jne
mov
aas
push
mov
fwait
mov
mov
sbb
sub
jge
mov
outsb
mov
js
sbb
xchg
neg
xor
xchg
lret
add
inc
ret
dec
pop
in
push
sbb
shlb
in
das
scas
mov
jo
outsl
cmp
mov
xchg
jmp
fidivrl
push
sbb
fnstcw
pop
fiadds
xchg
insb
push
lock
iret
mov
mov
sub
aaa
jmp
in
push
in
cmp
insb
jbe
pop
and
add
dec
ja
subl
out
ja
flds
in
jnp
fbld
dec
push
mov
xacquire
subl
pop
add
dec
add
clc
into
cld
pusha
add
xchg
mov
ss
stos
cmp
pop
insl
aad
inc
test
mov
loop
ljmp
adc
repnz
mov
ret
or
pop
xorl
fisubrl
int3
aad
cmp
push
mov
in
jg
cltd
push
ret
outsb
sub
mov
test
rorl
xchg
and
add
jecxz
mov
pop
xchg
lret
or
aaa
jb
jo
xchg
das
mov
pop
or
hlt
lcall
sub
inc
add
shl
rclb
shrb
adc
fs
xor
roll
jae
or
das
sub
adc
jae
or
xchg
and
jo
mov
cltd
fimuls
jmp
aam
ret
scas
pop
mov
out
insl
aad
into
fsubs
mov
test
push
daa
add
pop
mov
cmpb
dec
xchg
aam
xor
subl
in
inc
movsb
cli
sahf
mov
jae
cmp
mov
mov
jb
adc
mov
lock
dec
push
jecxz
mov
mov
repz
cmp
sbbl
lret
iret
jl
mov
int
add
mov
aaa
repz
cwtl
rcrb
sub
sbb
pop
mov
cltd
movl
adc
mov
stos
iret
cltd
jl
mov
sub
sub
std
sub
cld
sbb
shr
mov
xor
out
push
xor
push
lods
xor
xor
pop
iret
xchg
ja
xlat
fwait
dec
pusha
test
cli
jne
dec
scas
mov
lock
jle
dec
or
hlt
fists
inc
fsubs
sub
pop
clc
sub
xlat
ds
adc
sub
and
xchg
add
mov
xor
mov
adc
push
dec
or
mov
imul
sbb
sbb
or
fstps
sub
cwtl
inc
sti
mov
out
fildll
lds
push
enter
and
xor
cld
adc
fucomip
cvtdq2ps
in
ds
mov
cltd
cmp
push
mov
insl
mov
addr16
enter
cwtl
inc
adc
pushf
aas
clc
sub
jb
jle
stos
mov
push
stos
or
sarl
clc
jns
cmpsl
inc
outsl
add
pop
pushf
sahf
cmpsl
sbb
test
fsts
sbb
gs
xchg
mov
aam
pop
dec
pop
pushw
cmp
push
ret
xchg
push
jle
stc
sub
cmc
adc
fsubrl
push
or
jnp
stc
bound
loopne
in
pop
loope
jae
push
pop
scas
clc
and
lds
mov
std
hlt
sub
imul
jo
sti
mov
sbb
inc
jno
cli
pop
xor
mov
jns
mov
jae
push
ss
mov
mov
mov
out
pop
mov
push
ret
sti
xchg
pop
aad
jmp
or
or
push
sub
notl
adc
leave
in
push
in
imul
cmpsl
xor
fisubrl
sbb
fdivl
push
xor
push
pop
into
ja
sti
outsb
mov
out
addb
ret
mov
add
add
sub
pop
mov
cmp
mov
lods
mov
scas
inc
ret
sub
scas
sub
and
add
jnp
dec
pop
decb
sarb
sbb
outsl
push
mov
xlat
jae
adc
roll
mov
mov
mov
mov
inc
xor
push
sbb
sbb
fldenv
aad
cli
pop
xor
loopne
ret
dec
aas
lret
add
cmc
rcll
movsl
adc
and
xchg
in
fcmove
iret
and
sub
cmc
jl
cwtl
enter
addr16
scas
and
adc
xchg
gs
mov
out
test
clc
or
cmp
jae
dec
mov
mov
fsts
pop
cltd
shr
xchg
fsubl
jmp
aad
mov
mov
int
xor
adc
sub
add
negl
test
inc
out
xor
mov
dec
jo
addr16
cs
or
lds
sub
stc
or
push
lea
xor
xor
xchg
lds
adcb
jns
and
adc
and
add
inc
ja
xchg
fwait
roll
lret
iret
or
popf
insb
aad
add
iret
fsubrs
cmp
mov
cmpsl
in
test
sbb
add
mov
adc
push
inc
pop
jmp
xor
sub
push
mov
jl
mov
popf
ret
adc
xchg
push
cli
lock
xchg
das
push
fcomps
cld
inc
jne
sbb
notl
cmc
lods
xchg
jne
or
ss
mulps
cmc
int3
mov
mov
mov
cltd
sbb
data16
sahf
pop
lret
sub
add
cltd
lods
adc
fcoml
hlt
xchg
inc
push
push
or
sub
loopne
add
jae
sbb
pushf
fnstcw
popf
sti
mov
pop
adc
jle
jmp
mov
out
cmp
pushl
add
rcl
outsl
ficoms
mov
xchg
pop
pop
out
shl
and
cmpsb
into
lods
int3
cltd
loop
int3
jne
add
in
aaa
out
out
xor
aaa
sbb
cmp
popf
jl
jnp
outsb
fs
fcoml
cmp
dec
rcr
in
sarb
dec
fsubl
loope
insb
bound
push
mov
mov
mov
std
or
fdivrs
scas
add
icebp
daa
and
out
jl
fcompl
out
shlb
mov
loopne
and
sub
mov
out
sub
xchg
loop
shrl
cmc
icebp
mov
cmp
arpl
mov
jbe
cmpsl
cmp
testl
xchg
add
jmp
xor
xchg
xor
ljmp
sub
pop
pusha
mov
es
or
into
inc
shll
fcomps
jns
mov
out
jg
repnz
pop
out
cld
dec
test
popa
fadds
in
lret
gs
mov
jno
jb
jmp
fisttpll
mov
xlat
repnz
adc
inc
mov
sbb
xchg
lock
sbb
pop
adc
outsb
add
pop
je
ds
aas
fnstsw
adc
mov
xchg
daa
sub
rcr
stos
adc
repnz
pushf
and
mov
lret
pop
or
pop
add
push
xchg
jae
cmpsb
fbld
xor
scas
sbb
pop
addb
fwait
or
sbb
pop
mov
sarb
aas
fistl
inc
popa
ret
sahf
xor
jno
sub
aaa
mov
pop
xlat
mov
js
inc
cmp
scas
addb
push
mov
loope
push
and
rolb
cwtl
xchg
sarb
bound
loop
ja
xchg
movsb
jmp
adc
lods
rcrb
xor
pop
pop
lahf
dec
arpl
pop
stc
ss
cli
fistps
rcrb
loop
adc
jbe
fnstsw
ja
fsubr
push
and
sub
jg
push
fiadds
lods
es
fs
xchg
sbbb
fnstenv
rclb
pop
imul
jno
test
xchg
dec
mov
mov
pop
aaa
in
adc
movsl
xchg
xchg
jmp
cmpsl
mov
mov
sahf
add
pusha
or
inc
and
push
inc
inc
adc
fildll
out
lahf
xchg
push
xlat
mov
cmpsb
inc
xor
stos
push
xchg
stc
ljmp
pop
xor
mov
pop
push
adcl
cmp
jno
in
add
cmpsl
adc
and
push
loopne
insb
or
dec
sarb
negb
inc
sbbl
jno
out
push
inc
outsb
cmp
pop
sbb
rclb
and
jne
cwtl
mov
sbb
adc
sub
sub
jmp
inc
or
in
or
adc
sub
cmc
and
mov
aas
scas
mov
repz
scas
or
shl
shrb
sbbl
lcall
clc
xchg
add
mov
pop
jae
popf
or
xchg
push
mov
adc
xor
fisttps
stos
repz
pushl
mov
in
adc
das
adc
push
in
insb
and
xor
aaa
repz
pusha
out
mov
mov
pop
aas
dec
jl
ret
insl
mov
stos
jmp
and
subl
cli
andb
es
jge
aad
icebp
add
mov
mov
cs
xor
or
jns
cs
mov
ss
lea
nop
mov
xor
and
xor
test
jae
push
cld
outsb
inc
pop
lods
and
in
negb
xor
test
fs
ja
int
mov
mov
xlat
lods
push
ret
cmpsb
leave
aas
lea
rorl
xor
mov
aam
add
js
stos
xchg
subb
sbb
or
dec
cmp
dec
nop
mov
jbe
and
test
push
outsb
sub
xor
sbb
jp
sub
aas
mov
clc
and
adc
xchg
outsb
ja
fstpl
push
das
shrl
mov
pushf
popa
xor
xlat
ret
jo
jbe
cmp
mov
inc
in
inc
jbe
sub
lcall
adc
gs
and
rclb
sub
ficomps
mov
rcll
or
cmp
ja
testl
mov
dec
inc
loope
cmp
imul
test
xchg
lahf
adc
xchg
in
inc
fsubrs
jp
shrb
test
mov
jnp
mov
xor
call
dec
or
mov
aam
jns
and
flds
lods
popf
cmpsl
and
and
xor
add
xchg
inc
jle
int3
cmpsl
add
popa
iret
ds
popf
cmc
filds
jo
sub
rclb
xchg
mov
add
outsb
xchg
repz
je
call
rclb
adc
xchg
xchg
xor
xchg
add
rolb
in
loope
lods
loop
idiv
loopne
xchg
add
icebp
lock
dec
inc
je
push
mov
cmp
pusha
sbb
sub
push
and
aaa
push
mov
mov
xchg
adc
adc
dec
arpl
add
addb
dec
cmpsb
test
cmp
push
into
mov
cltd
rcrb
push
mov
mov
cltd
movsl
rclb
enter
or
in
adc
and
dec
add
mov
push
push
mov
mov
jo
movsl
pop
push
jb
fisttps
pop
pop
shrl
dec
test
adc
sbb
and
stos
sbbl
fwait
push
outsb
scas
in
or
fisttpl
inc
push
cmp
in
cmpsb
test
push
push
sub
pusha
hlt
cmp
sub
adc
fcomps
mov
add
push
push
out
push
outsb
lods
cmp
rcll
mov
movsb
cmpsb
movsl
test
es
xchg
scas
inc
ss
jns
icebp
pusha
shlb
shlb
pop
sti
jbe
sarb
push
inc
mov
pusha
xlat
dec
add
andl
aaa
je
push
test
sbb
lret
xor
xchg
filds
and
loope
jmp
and
xchg
mov
mov
pushf
pop
pop
into
inc
leave
ja
loopne
and
push
pop
shl
and
and
lea
paddb
loop
popl
test
sub
sbb
divb
scas
stc
enter
fildll
mov
cmp
fimuls
movsl
in
test
in
lods
hlt
movsb
sub
mov
inc
fwait
stos
movsl
adcb
inc
xlat
decl
dec
inc
scas
pop
ja
mov
jp
xor
cmp
push
add
mov
jnp
ret
pop
sub
dec
fidivs
inc
lahf
loope
xor
fisubs
ficoms
inc
cmp
mov
xor
push
xchg
push
addr16
pop
and
xorb
mov
xchg
mov
xchg
popf
adc
int
or
jecxz
or
outsl
in
mov
mov
xor
push
es
shl
out
xlat
pushf
stc
inc
lahf
fnstcw
das
je
xchg
je
imul
pop
push
push
pop
xchg
or
les
or
cmpsb
push
or
shrb
into
or
mov
mov
xor
out
push
mov
ljmp
and
int
out
add
sbb
rcrl
scas
fdiv
mov
andl
sbb
loop
or
cs
mov
lret
fwait
scas
lea
stos
hlt
and
movsb
sub
push
mov
ljmp
cmp
test
call
sub
test
and
sbb
rcl
jl
fsubr
mov
shlb
pop
inc
cs
and
pop
jp
stos
add
mov
mov
rcll
fbld
adcb
cmpb
test
mov
and
inc
dec
inc
data16
das
inc
nop
jl
fxch
xchg
outsb
mov
mov
jbe
and
hlt
inc
jg
adc
fsubr
cli
movsb
fdivrs
jp
pop
push
pop
fimuls
icebp
cltd
mov
repnz
inc
pop
inc
popf
adc
xchg
nop
daa
mov
cli
inc
jne
dec
fcompl
cmc
loop
out
xchg
pushf
enter
or
mov
mov
dec
cwtl
icebp
pop
xchg
addr16
out
and
xchg
cld
pop
cmp
popa
add
lods
repz
aam
imul
sub
dec
push
push
cmp
loopne
js
fldt
pop
mov
or
das
scas
ficoms
jl
push
iret
stos
loope
inc
mov
insb
xor
das
dec
into
dec
cmp
and
shrb
inc
insl
cmp
mov
lea
cmp
arpl
add
cmp
xchg
addr16
pop
cwtl
and
pushf
int
adc
pop
adc
cmpsb
in
adc
je
or
mov
daa
xlat
insl
or
lea
das
test
ret
hlt
js
jp
bound
inc
pop
adc
and
gs
or
iret
and
xchg
scas
pop
arpl
xlat
push
and
ds
iret
jl
mov
mov
pop
out
mov
lds
fimuls
cmp
mov
jo
fistps
loopne
ljmp
rorl
shr
pop
fistpl
fstl
jns
dec
xor
pop
fldt
inc
mov
int
inc
popf
hlt
int3
movsl
cmpsl
daa
lcall
jge
add
cld
ja
inc
xor
inc
and
inc
sub
dec
shlb
loope
adc
push
inc
fstpl
mov
jbe
notl
sbb
dec
lock
mov
pop
xchg
scas
push
pop
pop
push
jno
mov
lcall
ret
xchg
push
cmp
stc
mov
jo
cmp
test
xchg
xlat
dec
adc
lds
lret
cli
or
xor
out
inc
push
add
imul
pop
iret
dec
xor
movsb
and
add
je
and
loop
adc
dec
inc
incb
xchg
inc
inc
inc
and
add
sti
popf
rcll
inc
outsb
and
iret
dec
repz
xchg
cld
dec
jno
add
call
fsubs
lahf
stos
add
movsl
lahf
clc
xor
mov
sub
cli
cmpl
ficoml
imul
sub
lea
lcall
imul
and
dec
fcompp
in
cmp
cmp
push
test
or
icebp
mov
je
shl
sarl
outsl
popf
xchg
cmp
decl
subl
inc
jbe
mov
popa
aas
inc
cmpsl
fwait
outsl
jp,pn
test
add
repnz
push
jle
sub
jp
popa
mov
out
cs
je
push
add
dec
adc
addr16
inc
jae
and
pop
fwait
in
mov
inc
push
xlat
xor
test
jns
xor
or
sbbl
dec
outsb
int
or
sbb
ficomps
dec
xor
jmp
push
sbb
push
jns
mov
xor
dec
dec
pop
add
mov
jo
pop
jg
in
jecxz
mov
or
pop
nop
cmp
inc
pop
mov
fstpt
mov
test
jle
rcrb
lret
lret
ja
xor
dec
cmp
fstps
push
push
dec
test
pop
jae
int
imulb
sbb
mov
fs
scas
test
xchg
js
lds
ret
popa
cmpsb
dec
mov
outsb
push
pop
aam
pop
push
mov
add
sbb
cmp
fstps
jne
pop
es
dec
and
fnsave
mov
mov
sbb
xor
popa
cmpsl
das
fnstsw
cwtl
mov
push
es
or
inc
repnz
sub
outsb
inc
enter
xchg
xor
imul
cmp
adc
roll
flds
int
xchg
jo
int3
movsb
dec
pop
mov
mov
mov
shr
xchg
jno
mov
aad
sbb
xchg
xchg
add
sbb
pop
arpl
mov
pushf
push
xchg
mov
aam
pop
or
add
in
xchg
mov
in
sbb
insl
stos
and
test
out
push
sub
mov
and
orl
dec
clc
xor
iret
or
xor
int3
ret
sbb
adc
push
jo
mov
ljmp
add
outsb
call
pop
popa
push
mov
xchg
sub
loopne
aaa
xor
enter
je
pop
popl
pop
sub
mov
sti
mov
sub
add
xor
mov
std
xchg
adc
sub
mov
popa
icebp
mov
inc
dec
into
popa
cmp
divb
sahf
or
stos
push
cmc
ret
mov
sbb
mov
and
orl
stc
daa
mov
pop
inc
aam
dec
mov
das
mov
iret
repz
pop
mov
aas
push
mov
arpl
mov
ret
adc
fidivrs
enter
test
popa
fdivrs
or
cld
fisttpll
lcall
hlt
fwait
ret
pop
cwtl
iret
jmp
adc
pop
shlb
clc
add
cmp
mov
and
pop
push
lods
sbb
add
cmpsb
fidivs
imul
bound
and
fs
pop
push
dec
add
jmp
xor
data16
pop
inc
daa
div
adc
push
je
sbb
punpckhwd
test
xor
push
mov
and
sbb
jg
xchg
mov
and
jns
mov
ds
stos
jle
lahf
dec
push
jns
dec
push
das
mov
mov
dec
xor
jns
dec
mov
dec
xlat
pushf
cli
icebp
xorb
int
xlat
dec
hlt
mov
xchg
rcl
dec
sbb
repnz
jb
sub
xorb
test
jp
js
les
test
mov
push
dec
adc
mov
pop
icebp
jle
jle
inc
push
rcl
cmp
lcall
cli
jmp
ret
pop
ret
add
push
cld
movsb
sub
pop
xor
loope
pop
icebp
in
shll
xchg
push
mov
dec
cmp
fsubl
call
int
addr16
xor
cmp
mov
ret
jmp
mov
dec
xlat
cmp
rclb
and
ja
fsubl
inc
leave
stos
shrl
pop
sub
enter
lods
mov
stc
cmp
addr16
jno
arpl
dec
mov
cld
mov
push
mov
bound
into
aad
jno
cld
or
jmp
test
loope
add
jp
adc
xchg
scas
shlb
decb
mov
dec
add
and
cmp
cmp
mov
lods
mov
rsm
dec
frstor
ja
nop
les
scas
add
inc
and
mov
adc
sub
scas
imul
dec
xor
ret
insb
jp
dec
lret
cmp
lcall
sub
and
inc
mov
movsb
mov
add
stos
loope
cmp
les
dec
fucomip
pop
repnz
shrl
icebp
bound
je
mov
int3
inc
or
stos
push
lahf
xor
and
jp
push
push
xor
add
jecxz
jle
mov
pop
xor
orl
cs
sbb
or
jae
faddl
dec
add
mov
add
cmp
mov
into
pop
jbe
mov
xor
in
sbb
mov
sbb
in
enter
and
sub
fisubl
dec
js
comiss
test
or
movsb
loop
clc
adc
adc
scas
in
jb
aam
mov
lcall
inc
xchg
fcoml
adc
sub
jo
cmp
enter
adc
lock
movsb
lds
adc
mov
push
mov
les
push
jbe
loop
fldenv
popa
adc
sahf
ret
xchg
dec
mov
sti
and
pusha
lret
insb
mov
mov
or
add
sbb
imul
jne
xor
fwait
lods
icebp
in
xor
loope
cld
add
mov
push
cmp
iret
pop
es
out
imul
xlat
fcompl
fwait
mov
gs
push
push
dec
hlt
jnp
fwait
cmpsb
adc
lods
xor
movsb
push
lea
gs
and
adcl
daa
adc
push
sub
filds
mov
mov
fsubs
movsl
dec
mov
xor
and
lds
ret
cmp
sahf
push
dec
icebp
lret
test
sub
push
es
out
popa
lahf
jb
cmc
arpl
xchg
popf
sub
xor
fcom
fdivs
push
dec
add
aas
push
push
lcall
shl
add
negb
pop
push
push
in
lahf
sub
sub
jb
mov
iret
in
cmc
es
test
jecxz
adc
pop
add
jge
test
pushf
fwait
mov
hlt
xor
mov
icebp
jb
outsl
push
cltd
mov
jae
int
mov
inc
scas
bound
lods
push
and
ss
and
add
add
mov
or
cli
push
mov
aad
mov
enter
outsb
in
aas
pop
repnz
and
sbb
movsl
or
lea
shrl
sub
push
call
and
js
fdivrs
xchg
fdivl
mov
ret
jae
inc
pop
xor
bound
les
inc
push
push
cmp
mov
insl
add
xchg
pushf
rorl
adc
or
clc
stos
test
lret
sub
lds
add
addr16
divl
int3
add
popf
add
add
mov
xchg
push
in
xchg
andb
mov
sbb
inc
mov
sub
dec
dec
mov
xchg
inc
xor
adc
jns
cwtl
push
addr16
cmp
js
lret
gs
sbb
mov
das
jno
inc
xchg
adc
inc
xlat
imul
xchg
xor
repnz
adc
aaa
mov
clc
dec
mov
jns
sbb
jp
xor
dec
icebp
mulb
cmp
mov
pop
mov
pop
imul
iret
out
mov
sbb
inc
cld
mov
and
loop
jge
sahf
sub
inc
js
in
add
adc
xor
scas
xlat
mov
sti
xor
push
dec
popa
sahf
add
dec
push
popa
imul
push
outsb
adc
xor
push
out
cmpsb
int
mov
hlt
aaa
jns
xchg
cmpsb
ret
test
sbb
cmp
adc
cmp
in
inc
dec
movsl
cs
loop
jp
into
testb
out
aad
scas
outsb
aas
and
xor
mov
insb
lcall
lahf
aam
ret
inc
mov
fmull
push
pop
xchg
je
jle
cmpsl
xor
sbb
dec
add
das
push
add
js
fcomip
mov
scas
push
and
call
in
arpl
push
sti
dec
fsubrp
rcll
ljmp
sbb
mulb
je
or
fmuls
test
imul
sbb
jp
cmp
mov
dec
aaa
lods
mov
mov
push
sbb
pop
mov
or
jno
sbb
xchg
mov
test
sar
and
mov
adc
lods
dec
lods
popa
lock
sbb
movsl
out
divl
cld
dec
sahf
cltd
dec
xchg
arpl
push
ror
sbb
aas
orb
mov
mov
lods
push
sahf
xor
push
mov
popf
pop
pushf
jnp
fisttpl
adc
rcrl
xchg
push
jecxz
add
nop
imul
pusha
xor
inc
mov
negl
fnstenv
adc
aam
xchg
sub
ja
sbb
and
divl
dec
ja
outsl
clc
and
adc
pop
pop
jbe
jmp
fbld
sar
add
cmp
pop
sub
mov
sub
pusha
jb
les
jbe
pusha
xor
and
lret
push
or
xchg
pop
insl
repz
or
cmpsb
xchg
dec
hlt
mov
sti
sub
fnstsw
mov
movb
jmp
scas
in
loopne
ret
repnz
sub
and
pop
or
add
call
loope,pn
push
scas
aaa
jecxz
mov
mov
nop
ror
bnd
roll
in
mov
enter
ret
subb
or
dec
lret
mov
orb
lods
inc
xor
call
push
sub
outsl
sub
ljmp
in
call
test
push
mov
repnz
leave
cmpb
mov
push
pop
dec
stc
xor
std
pop
incb
add
addr16
fs
jo
push
jle
jno
rorb
lods
loop
mov
stc
mov
mov
negb
dec
push
fs
out
enter
mov
sbb
loope
mov
aam
push
add
xchg
add
push
daa
mov
xor
insb
or
cld
sbbb
pop
pop
rcrl
imul
jnp
add
lcall
rcr
jo
jge
sahf
scas
cmp
popf
stc
sbb
xchg
mov
jecxz
adc
aad
pop
jbe
adc
pop
push
pop
push
jo
push
push
and
mov
pop
mov
adc
loop
aaa
mov
inc
sub
je
leave
dec
lret
in
fwait
jno
cs
leave
mov
fsubs
push
xchg
in
push
cmp
push
push
gs
cwtl
mov
mov
lock
mov
lret
ds
pushf
test
or
push
jmp
popf
pop
lea
aaa
add
pusha
mov
lock
shrb
push
cli
scas
push
loop
push
add
out
cmp
jge
daa
add
in
leave
jmp
cmp
lea
xchg
mulb
dec
icebp
loopne
sub
push
dec
cld
xor
mov
lods
faddl
xchg
lds
mov
xchg
aaa
mov
hlt
inc
or
or
sbb
sbb
sub
insb
mov
call
sbb
xchg
cmp
inc
or
cmpb
jo
cmpsl
into
test
ja
xchg
cltd
ret
rcl
icebp
sar
lds
mov
adc
in
mov
inc
mov
dec
jnp
jae
sbb
jg
add
mov
mov
mov
popa
popf
cmp
mov
mov
inc
lock
dec
adc
inc
mov
sahf
sub
fistl
push
pop
xchg
test
daa
iret
fcoml
mov
jle
jle
and
jb
int3
pop
imul
sbb
fsubrl
mov
leave
mov
push
mov
adc
jbe
push
jp
repz
pop
push
insb
jmp
lea
dec
sti
push
add
dec
mov
jne
or
popa
insl
or
cwtl
mov
out
icebp
add
inc
aas
sbbl
aad
les
adc
ljmp
inc
mov
andl
pushf
jp
push
in
xor
pop
out
lea
ds
or
insb
aaa
cwtl
and
je
movsl
lahf
movsb
pslld
push
push
pushf
xor
add
jecxz
out
sbb
xchg
mov
cmp
ss
fiaddl
inc
add
aas
data16
or
jo
mov
lods
and
push
lea
inc
mov
bound
xchg
and
cs
push
loopne
push
add
stos
xchg
fnsave
mov
add
xchg
mov
rolb
mov
in
xorb
mov
int
iret
insl
sub
adc
daa
inc
mov
xchg
ljmp
push
out
popf
mov
sub
push
inc
xchg
adc
push
inc
mov
xchg
push
sub
lea
lods
lret
lods
mov
inc
xchg
lret
jg
xchg
push
pop
loope
out
xlat
scas
pushf
jno
aaa
cmp
cmp
xor
xchg
adc
jnp
lds
adc
outsb
ret
cld
int3
cld
sub
lahf
into
mov
ljmp
dec
fucomp
cli
jmp
cmp
or
imul
fs
mov
xlat
stc
inc
add
add
mov
push
cmpsb
pop
imul
adc
pop
arpl
orb
pop
adc
or
xor
dec
sbb
icebp
sub
andnps
fisttpll
jno
xchg
push
mov
loopne
cmpsb
push
je
les
cmpsb
push
aas
fstpl
cmpsl
in
ret
mov
repnz
mov
sarl
mov
mov
xchg
mov
cmc
dec
inc
or
cmpsl
xlat
stc
stc
mov
sarb
xchg
fs
imul
xor
add
sub
ret
imul
daa
adc
pusha
dec
test
mov
filds
cmp
mov
dec
push
cmp
in
lahf
xchg
mov
lock
aam
aam
push
imul
mov
push
xchg
shll
rclb
sub
jmp
mov
test
cmpsb
sahf
sarl
jmp
stc
push
fdivrs
sbb
addr16
addr16
jmp
mov
faddp
ret
push
cmp
inc
xor
adc
stos
and
adc
shll
push
cmp
in
js
fsubrs
and
push
cmp
jg
adc
jl
xchg
and
mov
aas
add
xor
mov
inc
imul
imul
cmp
lret
stc
mov
push
xor
jnp
xchg
sub
pop
sbb
leave
lea
and
jb
sub
popf
adc
jno
xlat
fsubs
jnp
xchg
cmp
push
sub
jns
ss
mov
das
jmp
dec
mov
loop
adc
dec
sbb
aas
mov
push
mov
add
cltd
xchg
pop
dec
sbb
fwait
dec
sub
xchg
push
clc
je
cmpsb
fadd
sar
aas
test
and
sbb
lds
enter
inc
mov
xchg
xchg
mov
mov
cmpl
addr16
insb
sub
sub
lods
rorl
shll
inc
xor
sarb
and
mov
jle
and
cwtl
loop
inc
sub
addr16
add
xchg
in
test
adc
inc
orl
inc
pop
loop
cwtl
les
sbb
mov
shlb
add
adc
fld
dec
icebp
adc
jbe
inc
inc
jp
mov
repz
cmp
pop
mov
or
jmp
or
add
subb
dec
push
ret
hlt
dec
fsubrs
insl
out
jle
pop
lods
mov
jle
dec
pop
add
pop
pop
adc
sbbl
lds
enter
cmp
insl
sbbl
jp
push
push
mov
xor
lcall
mov
fsubl
shrb
sti
inc
mov
ss
int
es
pop
push
xor
inc
pop
mov
push
and
or
faddl
shll
adc
lock
xchg
push
rorl
sub
out
cmp
mov
fbld
in
inc
fwait
jp
bound
mov
inc
fmull
xor
dec
imul
jmp
xor
jmp
xor
xchg
int3
insl
repz
adc
jmp
inc
es
aad
pop
cmp
push
in
fdivl
outsl
imul
mov
jb
aad
jno
mov
xchg
cmp
fsubs
mov
mov
adc
fldcw
jecxz
sub
sub
push
lods
icebp
jp
sbb
dec
lret
popa
lock
sti
jns
repz
inc
in
cmp
fisttpl
arpl
inc
cmc
movsl
sub
inc
out
dec
pop
mov
add
dec
mov
cmpsb
pusha
aaa
sub
into
mov
mov
aaa
je
cltd
ret
xchg
rcrb
cmp
or
andb
inc
data16
push
dec
inc
pop
outsl
mov
or
sti
cwtl
mov
das
sti
mov
sbb
mov
insb
add
cmpl
inc
or
sbb
dec
inc
mov
test
ffreep
hlt
repnz
and
pusha
xor
xchg
or
inc
std
jbe
div
xchg
mov
jno
add
mov
in
in
xchg
add
fistpll
insl
adc
test
and
popa
loope
adc
adc
test
std
inc
ja
sbb
or
pop
pop
loopne
iret
mov
push
test
inc
lds
push
popf
test
addr16
sub
mov
jae
iret
push
lea
fstl
pop
or
outsb
loop
mov
ss
lods
jno
mov
test
jbe
pop
and
ret
shl
push
adc
incb
jmp
xor
mov
pop
pusha
sbb
std
fidivl
or
scas
rorl
adcl
inc
inc
cmp
mov
xor
dec
arpl
movsl
ljmp
lods
rclb
sub
dec
lcall
add
mov
push
or
push
xchg
addr16
pop
jl
clc
or
shrl
mov
adc
jbe
and
insl
sub
out
inc
arpl
cmp
lea
in
in
sub
sbb
out
lret
sbb
pop
xchg
andb
sbbb
push
jmp
test
addr16
mov
lds
shrb
cmc
inc
ret
jmp
inc
ljmp
outsb
cmpsl
sbb
and
insl
mov
or
xor
dec
imul
rcrb
pop
aad
movsl
sbb
xchg
rcll
add
push
test
dec
mov
dec
mov
jbe
or
mov
aas
push
mov
adc
lock
inc
cld
cmp
sub
jb
sbbl
inc
mov
mov
mov
jb
sbbl
mov
push
push
ss
ljmp
cmp
out
cwtl
mov
test
mov
pop
imul
inc
xor
mov
sub
addr16
add
jp
mov
loop
jmp
psrlq
jo
iret
sbb
jb
add
test
jmp
fs
jns
jge
pop
pop
adc
push
jg
bound
sbbl
pushf
shl
pcmpgtw
pop
xchg
cmpl
sbb
inc
push
adc
popa
outsl
sbb
ret
add
mov
test
sbb
cmp
js
pop
mov
cltd
xor
mov
sbb
es
and
fidivl
cld
das
cmpl
mov
pushf
stos
jg
lea
sbb
xchg
push
push
and
repnz
negb
cld
xchg
add
loop
stc
fistl
in
out
push
jnp
jmp
stos
fdivs
or
pop
inc
orb
add
pop
je
outsb
sub
fcomps
pop
outsb
lret
mov
xchg
lahf
movsl
xlat
xor
jns
and
out
push
addr16
cmp
xchg
lahf
jne
xchg
xor
or
in
xor
jo
mov
and
cs
stos
daa
addl
sbb
xchg
inc
sbb
cmp
popa
lods
jge
cwtl
sub
xor
pop
lahf
fists
mov
divl
xor
dec
inc
out
xchg
pop
aad
mov
adc
imul
scas
add
mov
or
jbe
inc
pop
dec
pop
adc
stc
pop
push
jo
mov
clc
dec
sbb
push
inc
fsubrl
leave
clc
fnsave
jg
shl
fsub
shrl
mov
pushf
jb
lds
add
cmp
cmpsl
hlt
icebp
dec
and
xchg
mov
jmp
xorb
fs
adc
xchg
mov
cmpsl
sarb
in
insl
jbe
push
cmpsb
fadds
into
cs
pusha
push
andl
pushf
mov
mov
pop
fimuls
outsb
and
stos
daa
sbbl
fdivrl
imul
inc
cmpsl
push
or
jnp
daa
cmp
or
std
sbb
pop
xor
lods
gs
lock
jmp
push
lcall
test
mov
xor
jge
divl
jmp
sub
jo
push
mov
or
xchg
or
stc
out
daa
test
imul
or
sub
cmc
cmpb
pop
or
fnstsw
cld
cmp
lds
jecxz
inc
add
dec
cmc
out
out
xorl
fs
cmpsb
hlt
or
comiss
xor
adcl
test
insl
aad
mov
sbb
subb
mov
push
xchg
rclb
sub
jbe
cmpsl
sbbb
mov
mov
cli
mov
cmp
popl
mov
or
iret
dec
jno
push
out
xchg
fimull
cmpsl
aas
fwait
popf
cld
lret
in
fdivrl
mov
lods
mov
sahf
jb
aam
sbb
xchg
jmp
pop
stc
ret
pop
sbb
mov
dec
sub
and
insl
push
inc
lcall
loope
ss
mov
int
and
push
and
insl
push
adc
mov
sub
xor
je
test
dec
out
test
aaa
lss
cmpsb
and
ret
cmp
out
ljmp
daa
les
movsb
lret
mov
movsb
and
testb
adc
jle
call
nop
fcmovb
sbb
pop
push
push
inc
dec
sbb
das
dec
ret
add
cmovae
pop
cltd
dec
adc
xor
fwait
cmc
shll
into
pop
cmp
lcall
xchg
ljmp
inc
mov
test
jno
mov
sbb
inc
lret
xchg
mov
mov
je
push
in
stc
ret
testl
jmp
imul
sbbb
aad
fisttpl
jmp
mov
cwtl
inc
push
cmp
mov
cli
xchg
popf
xor
jecxz
push
sti
jne
push
dec
movsl
aad
sbb
mov
out
rclb
in
sbb
xlat
mov
mov
push
add
aam
lea
jp
and
mov
js
psubusb
fcmovnu
xor
rclb
sbb
xor
nop
and
rolb
xor
mov
imul
inc
dec
mov
call
add
leave
dec
jne
mov
outsl
mov
rcl
xchg
addr16
test
lds
sbb
fs
sbb
jo
lods
xchg
adc
pop
fldt
jo
sarl
shll
or
and
outsb
jbe
insl
push
pusha
xor
cmp
sbb
aaa
fdivrl
das
cs
sub
pop
lahf
mov
adcb
rcrb
and
and
lock
xlat
clc
or
pusha
cmp
cmc
enter
fsts
fwait
inc
fadd
pop
cmp
cmc
adc
pop
sbb
and
sub
in
fnstsw
jo
adc
shr
repnz
xchg
cmpsl
pop
xchg
add
lods
scas
jae
and
xchg
out
stos
mov
and
adc
lock
mov
push
hlt
push
push
movsl
mov
fiadds
and
push
add
sti
lret
push
or
inc
xchg
adc
add
clc
and
repz
jmp
test
imull
pusha
xchg
fadd
sbb
pop
and
push
fisttps
pop
push
sbbb
cs
test
or
xor
sub
sbb
mov
inc
xchg
jp
mov
data16
adc
lahf
push
or
cld
adc
int3
jle
xchg
dec
orl
std
pop
iret
sub
mov
mov
lods
cli
sbb
dec
clc
xor
or
mov
adc
fiaddl
clc
cmp
or
pop
clc
cmp
cwtl
fldl
mov
inc
jb
cmp
xchg
or
data16
pop
roll
mov
in
lret
mov
mov
shr
mov
sub
aas
ljmp
pslld
push
test
or
sbb
andl
lock
sar
mov
or
adc
nop
lea
jecxz
push
cmp
je
xchg
sub
addb
fsubrs
rolb
cmp
addr16
jae
test
mov
scas
dec
imul
addr16
frstor
xor
fsubrs
ficomps
cmp
push
or
fmul
cwtl
fdivs
adcb
pushf
xchg
cmpsl
pop
in
pushl
adc
in
and
inc
cltd
jmp
mov
testb
pushf
add
mov
and
lds
xchg
outsb
movb
xor
in
cmp
pop
fcomps
rorb
leave
cmpsl
in
push
add
and
das
mov
or
rorb
cld
xchg
and
movsb
daa
andl
es
cld
xchg
jo
xchg
iret
push
pop
repz
loopne
sbb
dec
jge
lock
mov
in
add
gs
out
lds
pop
cmp
pop
add
inc
sarl
notl
movsb
jp
shll
fidivs
jae
sbb
icebp
mov
and
idiv
add
out
push
inc
aad
mov
cld
into
pop
mov
sub
mov
dec
cli
arpl
add
push
fcmovnb
fs
aas
test
xchg
loop,pt
and
inc
test
loope
inc
inc
ds
insb
dec
insb
or
push
cwtl
push
mov
inc
mov
cmp
mov
xor
mov
push
andb
lock
push
mov
sbb
push
mov
jne
sbb
jo
sbb
add
cmp
pushf
inc
imul
fnsave
pop
shrl
mov
test
out
jmp
lods
dec
adc
jbe
in
mov
adcb
dec
or
jbe
enter
lea
or
das
data16
out
xchg
push
mov
in
shrb
push
jmp
mov
xchg
movsb
movsb
push
pop
and
sub
sti
rolb
inc
jo
pop
ljmp
mov
mov
inc
movsl
mov
push
aas
mov
add
lea
sub
aam
lock
ss
aas
xor
add
or
scas
dec
std
nop
ja
or
in
popa
cwtl
cmp
jp
test
xchg
xor
dec
rorl
stc
or
push
imul
push
jns
ljmp
xchg
push
outsb
ja
addl
mov
fldl2e
push
stc
stos
outsl
dec
fiadds
movsl
jp
mov
adc
and
stos
jbe
ret
je
aad
sbb
addr16
pop
push
sub
inc
cmpsl
jl
out
inc
inc
mov
sbb
loopne
je
pusha
dec
test
data16
and
loopne
inc
sub
jnp
push
or
pop
xor
data16
ror
stc
xchg
mov
jp
std
in
rolb
sahf
inc
cmp
mov
pop
into
add
lea
icebp
in
jns
and
adc
fadd
or
xchg
pop
jae
dec
out
shrl
xchg
pop
cmc
gs
inc
jge
call
loope
js
or
dec
xor
test
cmp
fldt
aas
sub
jmp
mov
pop
push
fld
lea
sbb
stc
adc
fcompl
adc
in
sbb
ret
add
es
insl
fldcw
js
adc
in
gs
mov
repz
or
or
aaa
pop
push
xchg
mov
inc
inc
xor
cmp
scas
adc
loope
aaa
insb
rol
pop
sahf
cltd
xor
pop
arpl
xchg
push
or
clc
dec
mov
jle
pop
leave
dec
and
sysenter
jo
adc
enter
lock
xor
leave
negb
mov
es
hlt
or
dec
mov
es
cwtl
pop
out
sarb
push
mov
fisttps
mov
pop
jbe
cmc
inc
add
sbb
cwtl
mov
ret
gs
jg
dec
icebp
mov
stos
shrb
jp
or
cltd
sti
insb
inc
inc
in
inc
inc
gs
sti
jecxz
xchg
sub
std
mov
adc
lret
shlb
adc
cmpsb
mov
and
loopne
ficomps
jl
or
jb
mov
mov
fildl
pushfw
mov
jne
sub
mov
jns
loop
int
pop
cltd
arpl
sub
mov
stos
fidivrs
fs
adc
mov
mov
push
iret
leave
je
jo
pop
lret
fidivrs
sti
jb
test
inc
xor
mov
fnsave
std
in
test
outsl
mov
xchg
pop
sbb
mov
mov
lret
inc
imul
push
int3
cmpsb
shr
lea
sub
inc
cmovg
and
mov
out
test
jle
das
sub
jl
sbb
inc
sub
rol
jge
mov
test
mov
out
mov
mov
and
imul
or
xlat
std
aaa
hlt
sub
pop
xor
or
sub
pop
cmp
stos
lea
xor
cmp
in
clc
cmpsb
sbb
and
fadd
fldt
push
or
mov
pop
adc
and
push
mov
mov
enter
enter
sbb
hlt
push
mov
lods
andl
sbb
rcrb
inc
out
jecxz
pop
dec
andl
in
pop
xor
lcall
dec
ss
sbb
or
popa
aam
or
jmp
add
cld
repnz
and
mov
pop
jns
imul
das
data16
pop
xorl
sbb
push
nop
cmp
push
repnz
inc
xchg
stos
lods
lret
out
imul
mov
and
adc
ja
push
xchg
dec
cwtl
out
cwtl
inc
cmpsl
mov
xor
push
sbb
sbb
or
repz
add
and
daa
in
bound
imul
ljmp
aam
jl
mov
enter
or
add
and
ds
aad
xchg
pushl
pop
or
mov
push
add
inc
aaa
lret
cli
sub
ja
jb
in
xchg
xor
test
sub
push
push
in
out
test
mov
mov
out
cltd
adc
cmpsl
fnstsw
or
inc
lret
adc
jp
imul
sbb
repnz
ljmp
cmp
sarl
ljmp
jmp
xchg
rolb
pop
and
popf
stos
nop
scas
or
test
dec
or
stos
lods
aam
lcall
mov
xor
fcomps
sub
push
xor
inc
mov
jbe
movsl
rclb
inc
ret
inc
scas
and
xor
lock
fisubl
cs
div
jb
mov
xchg
pop
test
lock
sub
adc
idiv
stc
dec
dec
jecxz
push
divb
mov
int3
xchg
test
hlt
movsb
push
mov
data16
dec
les
scas
and
jns
mov
push
adcl
push
mov
pusha
cmpsb
mov
xor
scas
jb
lret
pop
rolb
cwtl
arpl
cmpsl
xchg
ja
shlb
lds
mov
jbe
fld
mov
mov
cmp
lcall
test
ret
cld
lcall
mov
sbb
mov
fsubl
cld
lcall
push
cs
mov
gs
xor
or
add
pop
jb
add
xor
fwait
lret
ja
mov
cmp
xor
inc
push
add
push
sbbb
into
xchg
lods
jecxz
fwait
nop
cmp
adc
in
scas
pop
orb
ds
cmp
pop
mov
in
mov
popf
mov
orb
roll
xchg
stos
and
jbe
hlt
out
mov
push
dec
int
adc
dec
pop
pushf
icebp
mov
xor
mov
ss
cmp
call
xchg
pushf
mov
repz
dec
outsl
jnp
jge
aas
jl
fidivrs
int
push
sub
test
cmp
mov
push
and
xchg
mov
sbb
adc
pop
xor
sahf
xchg
sub
add
cmp
clc
sbb
sbb
cld
jnp
iret
and
pop
inc
add
push
xchg
dec
test
enter
lret
sbb
icebp
jo
jno
lret
imul
and
lahf
loopne
loop
into
neg
inc
imul
test
sub
mov
adc
hlt
sahf
arpl
cwtl
mov
in
int3
imul
mov
jb
push
fcmovne
mov
sub
sbb
cmpsl
dec
jmp
push
addr16
lcall
int3
pusha
js
fstpt
packssdw
popa
sub
pop
lds
inc
sahf
fnstenv
xor
pop
xchg
aam
xor
push
adc
add
sub
mov
adc
pop
adc
imul
or
mov
or
into
je
adcl
popa
outsl
jbe
jne
mov
cs
sbb
frstor
insb
cli
or
pop
sub
roll
add
or
adc
jle
push
leave
loop
aad
push
push
xlat
cmp
fs
adc
jl
mov
sti
outsl
mov
leave
sbb
jb
cmpsb
flds
call
pop
inc
testb
in
push
mov
jae
mov
cs
jnp
xor
in
leave
inc
cmp
sub
mov
test
mov
mov
pop
das
sbb
xor
ror
pop
ror
cli
xor
mov
push
leave
sbb
shll
sub
ja
adc
hlt
aaa
push
scas
sub
fnstcw
aas
mov
adc
cmpsb
adc
push
mov
mov
fstpt
pop
and
js
jnp
subl
dec
popa
xchg
dec
push
inc
dec
mov
dec
aam
insb
push
mov
cltd
pop
lret
dec
and
dec
std
dec
and
mov
fdivl
mov
jle
into
push
adc
lds
mov
mov
aaa
repnz
adc
popa
jo
push
sub
test
scas
adcb
mov
daa
outsl
movsl
push
stos
and
push
imul
xor
lods
sarw
and
push
ficompl
sbb
push
test
ss
sti
fwait
repz
fdivrl
push
mov
xchg
dec
xor
and
out
push
mov
lret
and
out
repnz
sub
pop
jl
out
das
mov
mov
ljmp
and
cs
hlt
cmp
insl
iret
lcall
inc
mov
add
sub
and
lret
mov
fcomps
icebp
je
mov
arpl
add
pop
int3
cs
mov
repz
mov
popfw
xlat
mov
pop
pop
mov
hlt
pop
popa
or
sbb
scas
mov
mov
repnz
push
jne
aad
cli
out
add
out
cmp
mov
jg
ja
inc
out
push
adc
movsl
xor
out
sub
lret
adc
aas
pop
mov
out
mov
jnp
jae
clc
xchg
fstpt
sahf
repnz
test
mov
repnz
xchg
ss
sbb
sbb
cli
out
xor
and
js
pop
cmp
or
or
xor
sub
xor
bound
outsb
fmulp
repnz
jecxz
inc
shlb
sbb
mov
or
test
and
jecxz
daa
sarb
and
inc
cwtl
xchg
mov
mov
mov
enter
push
pop
in
shll
push
ret
cld
repnz
shr
inc
cltd
popf
inc
dec
add
lahf
pop
ret
iret
push
and
mov
fwait
cmp
sbb
or
pop
ljmp
cmpsb
mov
mov
inc
jae
repz
in
das
addl
xor
nop
cld
cmp
out
cltd
outsb
mov
mov
daa
arpl
cmpsl
in
lret
inc
adc
aam
clc
cmp
sti
cmp
in
inc
ss
test
add
jg
push
fstpt
and
loopne
sub
xor
push
and
mov
setle
nop
shrl
clc
mov
enter
lea
je
lock
js
jl
pop
push
insb
lcall
sbb
incl
push
lret
shl
test
lret
test
test
mov
test
sub
fcomps
ljmp
je
push
aad
xchg
sti
pusha
test
adc
aam
fsub
push
jo
push
or
pop
mov
cmc
out
and
loopne
in
int3
xor
std
pop
sbb
pop
push
add
mov
jg
stc
sarl
mov
imul
adc
xchg
imul
inc
jae
icebp
jmp
cmc
cmpsl
adc
stos
cli
dec
mov
inc
jae
pushf
xchg
or
xchg
mov
arpl
cld
icebp
lock
test
or
mov
ret
mov
enter
lds
in
fidivrl
int3
sbb
pop
aas
outsb
sub
js
add
xor
add
sti
je
popa
stc
cmp
mov
icebp
jb
popa
xor
fsts
scas
adc
sub
loopne
sub
and
int3
xchg
jb
lock
xchg
inc
jo
jecxz
push
mov
lods
adc
insl
inc
push
clc
xor
mov
loopne
cmpsb
push
xlat
sub
mov
dec
ljmp
gs
push
xchg
or
int
mov
sub
jae
test
test
lock
mov
bound
inc
cmp
daa
ret
insb
notl
je
bound
add
in
fcmove
xor
cmpl
push
ja
adc
dec
popa
sub
xchg
daa
cmp
fcomps
test
and
aas
test
jge
mov
mov
std
mov
lretw
icebp
mov
enter
insl
mov
je
jne
jbe
aam
loop
test
push
addr16
and
dec
inc
or
insb
push
xchg
repnz
jl
insl
sti
or
rclb
xor
sub
loopne
add
sbb
rcr
cmp
push
mov
xchg
adc
sbb
aas
cmp
xor
sarl
scas
fcoms
test
xor
push
repnz
faddl
call
push
rcr
cmc
or
xchg
pop
jb
pop
lods
call
fnstcw
lahf
sub
and
inc
ja
pop
and
jnp
inc
pusha
pop
mov
xlat
add
xor
pop
test
in
bound
push
xchg
cli
mov
or
testb
fwait
ror
push
dec
aad
movsl
xor
popf
pop
imul
pushf
sbb
fisttpll
fstpl
repnz
popa
rcll
dec
cmp
sub
jmp
cwtl
loope
ret
jp
cmp
lahf
nop
in
pop
sbb
jno
sub
pop
ss
lahf
divb
or
and
xchg
dec
dec
push
ds
sbbl
sahf
clc
jnp
xchg
ss
gs
bound
sub
cmp
and
aaa
pop
hlt
arpl
aam
adc
mov
push
les
sbb
lods
mov
mov
sbb
mov
scas
sub
bound
and
mov
lods
dec
sbb
fdivl
sbb
sbb
xchg
aas
cltd
inc
popf
push
sbb
scas
movsl
shlb
lret
clc
icebp
int
nop
imul
sub
mov
outsb
pusha
fxch
stos
icebp
dec
add
inc
test
push
fisubl
shl
fsubrl
ret
mov
fxch
mov
test
movsb
xchg
lret
dec
push
in
and
in
rorl
push
stc
push
push
fdivl
insl
out
out
fisttps
add
xchg
jb
and
test
and
jbe
mov
rcll
and
test
dec
dec
push
int
ret
and
and
in
mov
cli
jb
aas
jae
mov
mov
pop
mov
pushf
out
cmc
subb
aad
popf
sbb
xchg
push
shll
add
push
rorb
outsl
aaa
jbe
imul
and
jmp
aaa
push
es
lea
ds
or
xor
mov
cmpl
sti
adc
sbb
or
test
mov
xchg
and
lcall
inc
data16
adc
mulb
cmpsl
icebp
jle
pop
dec
mov
inc
push
clc
dec
fnstsw
sbb
or
and
adc
aad
jbe
fs
mov
popa
sbb
mov
popa
daa
addr16
pushf
push
adc
xchg
xor
mov
xchg
cmp
add
push
mov
shlb
and
xchg
cld
sbb
sbb
xchg
push
popl
sti
lcall
ja
xchg
stc
in
mov
push
or
pop
dec
jmp
fstp
lods
and
mov
insl
lahf
cmp
or
pop
in
mov
rcr
mov
xchg
fscale
mov
sbb
fbld
pop
inc
inc
push
add
scas
filds
gs
outsl
add
xor
jp
mov
cmc
fisubrs
dec
cmp
enter
into
and
dec
adc
nop
idivw
lahf
int3
xchg
add
inc
cmpb
xchg
mov
mov
inc
test
mov
mov
cmpsb
addr16
pop
cmp
inc
pop
out
ljmp
dec
daa
adc
cmp
std
es
movsb
sbb
add
sub
mov
push
sub
call
push
and
inc
inc
subl
jo
jle
xchg
sbb
lds
loopne
jge
push
mov
mov
mov
mov
les
xor
leave
je
xchg
jbe
stc
pushf
sahf
push
out
int
pop
ret
jg
mov
das
inc
xchg
ljmp
mov
adc
clc
shr
add
inc
push
cmp
inc
lahf
icebp
add
loopne
lahf
aas
int
inc
nop
xor
rolb
push
push
or
movsl
push
sbb
adc
push
ja
subl
test
dec
mov
inc
adc
pop
sbb
aam
add
dec
add
lods
test
lods
leave
xlat
xchg
jge
push
xchg
or
int
or
xchg
pushf
stos
inc
mov
xor
jns
xchg
adc
adc
inc
adc
push
inc
aam
xor
outsb
xor
mov
leave
loope
fistpll
pop
mov
mov
outsl
pop
std
xor
fidivrl
jae
sbb
ss
mov
in
xor
testl
add
sub
aas
inc
jno
xchg
pushf
sub
or
icebp
xchg
scas
mov
mov
cwtl
lock
shll
pop
sub
adc
jne
mov
movl
push
std
fimuls
jno
xor
dec
mov
inc
mov
fdivrl
push
dec
push
inc
scas
data16
scas
out
stos
lret
jno
stos
push
inc
add
lds
add
xchg
cmp
inc
mov
and
xor
jae
and
add
xor
pop
adc
sub
xchg
aas
pop
hlt
push
pop
adc
js
mov
mov
repnz
popa
ret
dec
cmp
inc
fidivrl
xor
gs
jne
sbb
mov
popa
jbe
dec
sbb
mov
fyl2xp1
in
adc
idiv
and
lea
lods
cmpsb
and
mov
aad
xchg
xchg
and
pop
imul
inc
inc
jl
jl
mov
loopne
cmpl
add
cmp
dec
push
test
clc
iret
movsb
movsb
clc
adc
push
leave
movsl
lds
scas
rcrb
inc
xor
xlat
xchg
in
stos
out
mov
mov
scas
popf
mov
jmp
cmp
jl
inc
cmp
mov
and
lahf
pop
iret
scas
jge
lock
test
dec
and
cmp
fstl
in
push
jge
sarb
lods
iret
mov
js
jb
xor
sub
or
idivb
mov
dec
dec
outsl
in
testl
push
jbe
inc
icebp
dec
adcl
arpl
pop
pop
add
mov
movsl
xor
js
push
cmp
push
xor
decl
inc
pop
jl
mull
mov
aad
ffree
insl
adc
sub
ss
push
fs
shl
and
mov
mov
gs
inc
test
and
push
movsl
lods
lcall
pop
test
mov
stos
xor
shlb
sti
mov
andb
push
insb
mov
ljmp
ret
jnp
aad
mov
pop
cmp
outsl
test
sbbl
fists
xchg
cmp
in
push
loopne
fdivrl
outsb
paddw
jno
sub
mov
mov
rcl
imul
mov
jae
shll
pop
sbb
sar
pop
data16
sahf
scas
rorl
mov
popf
dec
mov
lcall
les
mov
insl
xchg
pushf
mov
clc
ficomps
lahf
dec
shlb
or
jl
scas
mov
cmp
outsl
iret
ds
nop
mov
rcrb
jae
pop
clc
mov
sub
cmpl
cmc
int3
idiv
clc
test
rclb
pusha
mov
push
es
pop
push
sub
or
sub
ret
mov
into
fistpl
xorb
insb
and
mov
pop
stc
and
cltd
mov
cs
dec
bound
dec
mov
or
mov
cmpsl
int
sti
int3
out
push
enter
mov
lahf
jecxz
add
leave
aaa
cmp
mov
inc
xchg
mov
sar
test
add
repnz
test
stc
mov
test
sahf
rorl
test
leave
mov
pop
out
xchg
hlt
ffreep
xchg
xchg
mov
jp
test
jmp
fs
enter
sysret
cmpsb
cmp
push
xchg
or
xlat
ds
loope
cld
sub
mov
ret
mov
std
lock
stos
push
mov
xchg
das
testb
pop
mov
jns
mov
pop
sarb
popa
mov
mov
adc
adc
in
add
arpl
pop
dec
cmp
mov
fisubrl
mov
hlt
mov
into
xchg
dec
in
pop
ror
fcompl
stos
add
sahf
jbe
lock
andb
xor
daa
les
ss
dec
mov
ja
push
mov
adc
pop
adc
gs
mov
outsb
lahf
lea
std
add
jae
mov
lods
mov
jle
pop
push
scas
sbb
push
and
sbb
jbe
rclb
xchg
sbb
add
pop
push
inc
push
and
aas
mov
or
dec
or
pop
leave
add
push
stc
aad
jge
scas
shll
mov
mov
push
xlat
lret
sub
push
into
jle
lahf
cmc
push
ret
call
pop
pop
leave
inc
cwtl
loope
push
and
lahf
sbb
fisubl
inc
nop
lock
adc
jp
kmovw
pusha
jns
repz
testb
jmp
xchg
adc
jo
xor
jae
push
xchg
xorb
sub
movsb
jno
mov
andl
mov
and
and
mov
push
les
sbb
adc
or
pop
mov
xchg
ret
mov
mov
lcall
das
sbb
cmp
fidivrl
add
mov
cmpsb
pop
pop
notb
mov
cmp
pop
add
ja
add
mul
jl
decl
jge
xor
lret
jne
and
pxor
inc
idiv
adcl
push
lahf
pop
or
lahf
cs
enter
mov
lock
hlt
xor
nop
pusha
mov
inc
fsubrs
add
fstl
cld
out
aaa
jae
call
push
fucomp
dec
aad
dec
incb
dec
jns
mov
and
sub
adcb
out
add
xchg
mul
cltd
add
inc
test
cmp
clc
loope
mov
ds
lcall
aad
sub
mov
mov
or
lock
rclb
orl
scas
mov
mov
cmp
and
stos
leave
push
jl
or
shl
sbb
je
cmc
xchg
test
cli
dec
shlb
xchg
xchg
sub
xor
cmp
ret
jmp
subb
and
mov
adc
cli
push
dec
fwait
addb
nop
xchg
loop
ret
xor
mov
dec
lods
jl
addr16
sbb
dec
mov
xchg
adcl
les
pop
push
mov
insl
adc
mov
mov
lods
jecxz
dec
aaa
ljmp
leave
fdivs
inc
insb
mov
and
mov
sub
mov
cmp
and
dec
imul
push
push
js
arpl
cmp
pop
insl
loope
jg
cmpsl
jecxz
bound
test
mov
push
inc
jge
lods
sbb
mov
sbb
cmp
add
jbe
adc
nop
addr16
mov
push
repz
imul
popa
roll
inc
stc
mov
mov
movsb
xchg
mov
fcompl
xor
add
enter
sub
and
fistpl
mov
jecxz
push
sbb
scas
push
ds
pop
sbb
pop
fucomp
and
push
bound
and
mov
mov
sub
sub
inc
mov
jl
pop
out
xor
repz
mov
mov
pop
aad
sub
loope
inc
imul
mov
mov
sub
mov
loope
xchg
and
sbb
mov
push
inc
or
cmpsb
mov
xor
notl
mov
fists
jns
clc
arpl
pop
out
jmp
mov
es
push
or
mov
imul
lret
scas
mov
xor
adc
xor
xchg
jne
xchg
imul
int
mov
and
dec
pop
mov
scas
push
push
adc
and
cs
fwait
mov
les
push
ret
sti
xorb
cwtl
jne
outsb
movsb
push
jl
aam
lods
jne
sarl
and
or
adc
jns
mov
jl
int3
sbb
into
and
dec
outsl
loope
icebp
loop
loop
mov
pushf
jbe
pop
sbb
sti
out
push
mov
xchg
push
test
cltd
jg
mov
cmp
jecxz
movl
pop
dec
aaa
in
xor
xchg
mov
movb
pusha
les
std
or
std
push
inc
pop
popa
movsl
mov
mov
jbe
out
push
in
pop
jae
pop
loope
pop
mov
fwait
movsb
addr16
and
xor
adc
push
adc
mov
add
sbb
icebp
test
pop
int
jns
loopne
aam
mov
and
mov
loopne
jp
sbb
cmpsl
dec
mov
sbb
popf
loopne
adc
push
int3
push
mov
lret
adc
fcomps
fcomps
xor
inc
push
stos
cmp
push
insl
sahf
es
xchg
adc
inc
add
cmp
push
mov
sti
idivb
and
test
jecxz
xor
lods
out
cmp
movsl
dec
lea
rclb
push
jno
decb
ja
gs
xchg
or
movsb
mov
xor
test
scas
in
xchg
xchg
clc
cmp
mov
add
js
pop
int3
jno
adc
ds
sahf
in
push
jae
iret
cmp
xchg
push
push
xchg
xchg
xchg
mov
mov
mov
or
lea
sub
xchg
jmp
in
lds
and
jbe
xchg
mov
in
hlt
inc
sti
mov
aas
xchg
test
pop
and
cmp
sub
ret
jecxz
iret
les
test
push
inc
mov
or
rorb
xlat
rcl
cltd
mov
out
fdiv
iret
add
dec
fidivs
inc
inc
bswap
stos
mov
jmp
add
les
jns
jmp
xor
int3
jnp
sbb
mov
adc
pop
inc
enter
fstpt
lcall
in
out
jp
lfs
and
lea
dec
adc
ljmp
sub
clc
cwtl
jo
stos
cmp
leave
mov
lret
call
or
adc
jmp
adc
xchg
mov
incl
dec
mov
lret
dec
pop
out
dec
stos
sbb
pushf
icebp
and
cs
xchg
loopne
and
sbb
shll
pop
pop
and
test
pop
push
mov
lods
inc
add
in
xchg
arpl
mov
nop
shl
jg
pop
es
xor
repnz
into
inc
mov
cmpsb
xor
dec
aam
sbb
fcompl
mov
cmpsl
iret
fimull
iret
cmp
sbb
stos
dec
add
add
ficoms
mov
mov
ss
shll
sbb
sub
pop
xchg
fstp
lea
pop
push
gs
adc
imul
cmovle
aam
inc
and
mov
push
popf
jno
rcr
rcr
pusha
and
dec
mov
xchg
dec
out
dec
shrl
mov
push
hlt
push
xchg
push
pop
add
mov
in
lds
mov
sahf
cmc
into
jno,pt
fdivrs
add
out
scas
in
aaa
jne
jle
fwait
dec
cmp
pusha
mov
and
mov
and
and
cwtl
pop
add
or
fcmovnb
or
push
mov
and
cmp
pop
xor
push
mov
and
jge
add
and
ss
mov
pusha
mov
jne
xchg
loope
repz
cmpsb
xchg
inc
or
int
add
scas
adc
push
inc
jecxz
nop
and
int3
lahf
icebp
ja
std
pop
outsl
mov
call
rcr
call
in
pop
xchg
sti
adc
shl
je
daa
jbe
aas
xlat
scas
mov
cmp
sub
cmp
cmp
mov
cmp
cmpl
stc
jbe
ret
xor
jl
lock
sbb
mov
dec
adc
rcl
inc
movzwl
xchg
addr16
sbb
jg
out
mov
mov
adc
jne
add
mov
jno
mov
ret
xchg
lret
out
addr16
mov
ss
push
mov
adc
fldl
stc
mov
dec
testl
lahf
repnz
cmpsl
or
in
inc
sbbl
push
mov
lea
mov
mov
loope
sbb
ds
jne
adc
dec
fcompl
sbb
push
and
int
daa
cs
mov
shrl
mov
test
cmp
push
dec
aas
and
cli
loop
sub
xchg
lods
cs
daa
mov
or
add
jbe
sub
or
xor
dec
mov
pop
test
bound
sbb
mov
xchg
pop
std
and
sti
mul
mov
adc
int3
sarb
stc
lods
mov
cs
mov
add
jbe
cmp
mov
in
sbb
push
push
dec
dec
sub
jl
pushf
std
cmpsb
sbb
jbe
lcallw
cmp
les
dec
jmp
or
jb
test
adc
jmp
xchg
mov
sarb
ljmp
jns
pop
test
xchg
lcall
clc
repz
xchg
inc
mov
cs
imul
cmp
addl
xchg
push
fcomp
xchg
dec
push
inc
cltd
mov
or
fs
push
int
dec
int3
or
inc
xor
repnz
pop
in
pop
mov
aaa
iret
enter
jno
jne
push
push
fst
das
mov
xor
call
nop
popf
lret
jg
call
inc
loope
lahf
out
push
mov
add
xor
iret
sub
pop
pop
and
push
adc
test
add
adc
xorb
sahf
stc
or
repz
xor
mov
fcompl
and
lcallw
cmc
push
fucomip
xor
push
fiadds
shlb
addr16
enter
lcall
jp
mov
fiadds
mov
xor
inc
das
mov
mov
or
inc
fwait
adc
bound
push
cmp
repz
leave
cmp
push
mov
xchg
xor
sbb
xor
mov
push
xor
jg
mov
pop
jecxz
fwait
or
lahf
lcall
arpl
dec
cmp
rcr
jge
call
ljmp
scas
loop
dec
mov
pop
jae
jge
inc
push
fcomip
jg
xchg
sub
jbe
push
inc
push
mov
xchg
fimull
repz
out
xchg
std
int
jb
mov
dec
lret
enter
jmp
push
add
movsl
adc
fwait
sub
mov
mov
jne
js
push
lods
shl
inc
push
out
adc
int3
mov
movsl
sbb
mov
cmp
mov
sar
jl
inc
dec
clc
test
jbe
jecxz
dec
mov
sub
stos
rolb
push
mov
repz
pop
push
mov
in
mov
stos
es
fiaddl
test
out
xchg
add
pop
dec
pushf
loop
or
jecxz
pop
dec
icebp
jp
add
inc
ret
ja
xchg
rcll
and
rorl
xor
pop
push
mov
or
shrl
sahf
sahf
mov
popa
pushf
repz
fwait
dec
lea
push
jl
pop
cmpsl
and
in
stc
movl
adc
lahf
arpl
pop
sub
enter
ljmp
lcall
adc
call
sbbl
or
ret
xchg
and
jg,pn
divl
mov
pop
pop
call
icebp
sub
inc
test
lahf
jo
xchg
inc
cmp
int
int
push
test
incl
hlt
repnz
movl
icebp
inc
cmp
push
or
mov
call
cmp
enter
arpl
popf
ret
xchg
gs
pusha
fcompl
pop
pop
dec
inc
leave
xchg
fs
sbb
filds
lcall
ds
test
ljmp
mov
sbb
cmpb
lock
jo
clc
mov
xchg
mov
add
mov
push
jno
inc
pop
stc
sbb
ret
imul
xchg
lret
sbb
fldl
ljmp
das
sub
call
lds
test
sbb
add
fs
lret
je
and
xchg
js
addl
or
xor
rorb
mov
cltd
lcall
sub
lods
adc
pop
subl
cltd
mov
jg
pop
inc
clc
and
pusha
adc
pop
or
repz
nop
jne
and
mov
mov
cmp
push
sbb
out
fwait
ret
jle
push
mov
orb
push
xor
imul
jge
cmp
cmpsb
xchg
add
push
mov
test
cmpsb
jns
push
jb
push
sbb
xchg
pop
popa
sub
jmp
inc
or
add
je
xchg
xlat
cmp
inc
stc
pop
adc
jae
and
jns
emms
pop
and
icebp
dec
int3
inc
loop
jg
fwait
movsb
push
xchg
inc
popa
sub
dec
mov
out
sbb
and
lds
insb
cmp
aad
ret
jmp
push
mov
pop
ret
mov
jmp
mov
ret
fcmovnu
xchg
mov
mov
ljmp
in
xchg
adc
add
imul
or
dec
mov
jnp
pop
out
pop
or
lods
jmp
mov
dec
sar
out
fwait
or
out
ja
mov
rcll
xchg
or
out
adc
shll
sub
popa
pop
push
mov
push
sub
cwtl
sub
aam
repz
mov
cltd
dec
jb
mov
push
in
daa
push
sub
inc
sub
xor
adc
mov
popa
and
sub
popf
push
sbb
jl
fcompl
test
dec
sub
les
pop
xor
rclb
sub
push
xorl
jae
dec
push
sar
add
jl
xor
bound
pop
xchg
mov
test
cltd
cmp
aas
arpl
jae
xchg
fcoms
roll
mov
dec
sub
dec
movsb
jbe
ss
clc
bound
je
test
fdivrs
lahf
mov
xlat
mov
jnp
lahf
int
ret
push
scas
stos
cmpsl
sar
sub
adc
out
rolb
into
clc
cmp
mov
push
push
hlt
adc
lock
and
sbb
sbb
push
sbb
pop
mov
data16
pop
pop
inc
xor
pushf
fmull
int
add
cmc
shrl
in
add
mov
inc
ret
cmp
jae
mov
jp
fwait
dec
push
adc
pop
push
mov
imul
aaa
mov
clc
shrb
pop
pop
jmp
jo
sub
call
mov
ret
repz
lahf
comiss
mov
mov
mov
inc
sbb
inc
ffree
lods
into
sub
inc
pop
adc
js
mov
movsb
movb
mov
or
pop
test
lea
sti
jp
pop
imulb
into
cmp
pusha
in
cmp
and
in
rolb
icebp
xor
inc
xor
sbb
lods
test
clc
clc
jmp
or
push
fwait
xchg
inc
lahf
push
mov
outsb
addr16
sar
cwtl
movsl
test
cmp
push
testl
dec
and
push
aaa
pop
stc
fistpl
xor
cli
push
sub
dec
mov
cld
pop
ja
jo
sarb
stos
or
and
pop
popa
daa
int3
xor
sub
cmp
out
xchg
fsubrs
inc
pop
xor
jge,pn
testb
into
pusha
xchg
insl
popa
adc
sub
jnp
jle
int
mov
or
out
lret
aas
inc
xchg
es
outsb
ret
fcomps
sbb
fcoml
sti
scas
dec
fistpl
jns
sbb
add
aas
cmp
sqrtps
out
xlat
adc
ret
and
or
cwtl
jp
fs
and
mov
cmp
loopne
xchg
in
lret
in
test
clc
xchg
mov
push
daa
and
rcl
jb
xor
int
push
repz
push
mov
cld
sub
sbb
inc
movsb
icebp
push
repz
repz
lret
out
rep
aaa
cwtl
stos
xchg
jg
or
dec
adc
xchg
mov
cwtl
stos
cld
stos
and
lret
mov
cmp
outsl
and
sti
cmp
dec
call
and
mov
xor
imull
mov
in
loopne,pt
mov
repz
fbld
sub
ss
mov
repz
das
push
imul
sub
sti
cmp
scas
add
je
sbb
je
fwait
call
loop
test
push
sub
int
xchg
dec
mov
pop
pop
daa
fdivl
xchg
xor
jmp
arpl
inc
push
test
mov
sahf
mov
outsb
sbb
mov
pop
sar
cmp
aad
imul
adcl
int
sbbb
push
smsw
movsl
jno
ret
arpl
xchg
lahf
lret
cmp
adc
mov
insl
cmp
pop
mov
test
sbb
or
and
cmp
mov
inc
jg
adc
loope
nop
movsb
shlb
xor
sbb
cltd
mov
loopne
xchg
add
and
add
mov
mov
leave
sub
push
testb
add
mov
push
sub
out
adc
dec
aam
adc
sub
sbb
sub
fstl
dec
adcb
mov
jp,pn
jns
push
pop
fchs
and
shl
pop
jge
cmpsl
mov
pushf
out
sub
jne
add
xor
dec
xchg
sub
fadds
in
dec
lock
jns
cmp
dec
dec
adc
inc
mov
sbb
adc
pop
dec
stos
ud1
popf
cmp
in
js
imul
lods
jp
push
pusha
fadd
jns
adc
inc
mov
imul
xchg
mov
mov
loopne
and
call
mov
arpl
ljmp
in
jp
add
and
mov
mov
outsb
pop
sbb
mov
fnstsw
inc
pop
into
das
jns
sarb
push
inc
cs
and
jb
xor
ret
push
cs
cmp
jns
sbb
insl
je
or
xchg
repz
ret
cmp
adc
movl
cltd
rcll
sbb
cmp
dec
shrl
call
mov
data16
pop
mov
adc
shll
inc
mov
cmp
sti
push
and
dec
mov
xchg
dec
mov
xchg
leave
vlddqu
xor
stos
and
lea
aad
cmpsb
stos
add
jne
add
orb
dec
sbb
test
sbb
cmc
push
add
dec
push
jle
push
daa
push
mov
pusha
jae
dec
jns
addl
adc
xor
sbb
or
outsl
jl
cmp
fcompl
mov
sbb
push
mov
aam
sahf
insb
mov
jne
mov
xor
aaa
repz
ret
iret
aad
movsb
and
lcall
and
mov
insl
loopne
sub
fs
jmp
mov
add
adc
jns
rclb
std
aas
aam
mov
xchg
mov
push
sbb
cmp
adc
mov
cwtl
xchg
fsubr
and
cmpsb
cli
add
enter
lock
pushf
mov
popa
jmp
sub
adc
mov
jl
add
mov
int
dec
or
adc
int
inc
fldcw
sarl
ret
data16
scas
jnp
test
pop
mov
stc
rcr
fisttpl
mov
push
xor
or
cmp
sti
jnp
in
mov
je
mov
mov
adc
xchg
leave
sarb
shl
ror
addl
mov
in
adc
fistl
sbb
and
cmp
push
sub
and
pop
fs
or
cs
lcall
sbb
xor
loopne
xchg
xlat
movsl
mov
xchg
cmc
out
hlt
xor
adc
bound
mov
dec
push
fistpl
shlb
pop
add
cmp
or
shll
lret
and
repnz
push
dec
pop
push
push
in
test
call
dec
mov
fsubr
xor
jne
push
cmp
mov
mov
rol
mov
jmp
std
cmp
mov
ret
push
repz
add
jle
lret
pop
in
stc
sub
shrb
mov
dec
movsb
in
mov
xchg
fldt
lock
lret
xor
sbb
mov
shll
sbbb
test
and
dec
cmpsl
push
mov
cmc
mov
aad
dec
es
inc
sub
out
or
push
ss
jno
popf
dec
xchg
sar
dec
scas
repz
fiaddl
mov
jg
leave
movsl
nop
inc
dec
push
mov
inc
push
data16
add
sbb
cmpb
mov
adc
pushf
es
or
jnp
jae
cmp
ficompl
ja
insb
lods
bound
rclb
sub
in
xor
push
enter
jbe
mov
mov
pop
jno
je
dec
mov
lods
ret
and
add
push
fidivrs
and
test
fisttpl
dec
in
sahf
adc
and
shlb
cli
push
jp
test
je
aaa
jne
dec
add
mov
ret
fbstp
add
push
sbb
cs
xchg
das
ret
mov
rcrl
leave
das
aas
push
repnz
adc
mov
cld
rclb
pop
push
sti
ss
xchg
outsb
shr
xchg
inc
lods
icebp
scas
xlat
and
push
lahf
xor
mov
xor
test
push
negl
scas
ret
push
je
out
icebp
push
aaa
adc
xlat
out
nop
inc
push
and
mov
mov
dec
sahf
sti
jnp
pop
jp
jno
xchg
adc
ret
pop
push
adc
ja
jge
or
and
sub
shll
jp
cli
xorb
daa
push
fiadds
push
int3
add
jle
push
stc
pop
sahf
rcr
orl
xchg
test
ljmp
mov
adc
scas
call
jl
adc
sbb
je
mov
pop
sub
rep
fstps
pop
pop
or
adc
pop
fwait
adc
nop
and
adc
cmpsb
inc
sub
lret
or
icebp
xchg
aad
mov
clc
mov
lds
sbb
cmc
ret
sahf
inc
dec
cwtl
push
push
enter
hlt
xchg
mov
stos
jmp
sub
orb
dec
pusha
xchg
movsl
sbb
adc
and
push
pop
imul
or
sub
mull
xor
je
mov
sbb
test
pop
pop
fsubp
shrb
add
mov
fiaddl
dec
idivl
lds
gs
inc
adc
jge
sub
imul
leave
ss
stc
call
jo
or
cmc
test
call
xchg
insb
inc
dec
mov
bound
aas
jmp
sub
int3
mov
ret
lea
js
sbbl
push
in
popf
xor
sub
mov
movsb
xchg
xchg
sahf
and
mov
pop
fmuls
mov
stos
imul
fwait
mov
imul
dec
mov
add
jge
push
pop
push
adc
jbe
push
jb
jno
fistl
and
lahf
push
inc
add
cmpsb
or
adc
pushf
or
pop
xor
cli
aad
xchg
ret
xor
inc
lods
adcl
or
sub
mov
dec
cmp
pop
ret
mov
test
adc
adc
js
bound
push
cmp
mov
jmp
xorl
xor
aas
ret
xchg
imul
pop
insb
xchg
mov
inc
pop
jp
in
jnp
mov
pop
jle
xor
imul
movsb
cmp
xor
dec
int3
and
inc
mov
adc
out
lea
out
pop
pop
inc
es
ret
loope
insb
cmp
mov
adc
insl
mov
sub
sbb
cmpsl
je
ret
pop
sahf
loope
inc
mov
mov
and
pop
in
in
leave
and
adc
inc
cmp
mov
fnstenv
inc
inc
int
std
sbb
out
in
jge
movsb
insb
repz
xor
gs
mov
hlt
lods
and
push
mov
jns
inc
jg
mov
adc
inc
out
xchg
pushf
pop
ljmp
push
jl
mov
test
mov
pop
jbe
mov
in
cmp
stc
sub
cmp
test
shlb
sahf
mov
pop
mov
add
insb
or
mov
imul
std
adc
add
aam
insb
cmp
out
xchg
ret
cmp
icebp
mov
push
add
mov
ret
shr
inc
leave
or
push
int3
and
mov
lret
ret
sub
xchg
loope
dec
arpl
out
mov
in
push
adc
xchg
xchg
push
test
pop
push
adc
das
mov
push
insl
roll
stos
int
fwait
mov
mov
insl
xchg
pop
jmp
sub
iret
aam
push
push
shlb
fistps
mov
mov
ja
sbb
cmp
aas
sti
jnp
test
cmpsb
mov
add
shll
lods
movsb
push
xchg
add
mov
mov
gs
imul
xor
shrl
ficomps
dec
push
out
mov
push
push
fdivp
test
insl
mov
lahf
sbb
es
or
fwait
xchg
cmpsl
sahf
mov
mov
mov
and
add
add
pop
andb
loop
push
push
shlb
mov
mov
pop
das
sub
cmp
aas
stc
cmp
mov
sub
mov
and
pop
dec
shlb
std
pop
mov
sub
cmp
mov
xor
adc
sub
outsl
mov
movsb
sub
pop
movsl
xchg
bound
push
mov
push
int
addr16
add
jge
dec
loopne
gs
cmpsl
sbb
pop
mov
xor
movsl
jmp
hlt
add
fimull
call
mov
and
data16
jge
and
je
cmc
inc
mov
inc
stos
jge
mov
aam
lret
mov
sarb
inc
dec
out
loopne
aas
sub
jb
dec
mov
sub
mov
test
mov
out
or
xchg
imul
inc
xor
je
jl
andb
scas
add
sarl
pop
in
adc
mov
cld
inc
cltd
xchg
and
pop
std
xor
bound
fdivrl
pusha
xchg
adc
mov
adc
loope
sarb
mov
rorb
aam
push
mov
stc
jo
pop
shrb
sub
aas
mov
xchg
in
adc
inc
cmc
int3
ret
dec
arpl
push
cmp
jl
lds
lret
repnz
add
ret
testb
lret
imul
pop
xor
or
mov
jo
jg
icebp
out
ds
into
test
push
jns
sbb
xchg
dec
adc
icebp
subb
fs
pop
test
lods
mov
ret
ss
movsl
lods
mov
stos
sbb
popa
sbb
or
dec
lret
push
sub
ds
cmp
adc
ret
pop
les
mov
jno
repnz
add
jp
aaa
lea
aas
jnp
xchg
cmp
es
in
fstpl
stos
pop
mov
arpl
stos
cmc
clc
test
xchg
mov
mov
inc
inc
and
rcl
imul
sbb
push
xchg
xor
sub
dec
sub
lods
lcall
push
aad
inc
imul
and
lods
stc
sub
insl
xlat
push
fsubl
inc
test
mov
xchg
cmp
or
push
mov
shrl
imul
cltd
ret
pop
lds
adc
adc
popa
out
cltd
inc
mov
and
pop
xor
rcr
shlb
out
repnz
push
adc
aad
out
pop
mov
lahf
in
repz
out
lret
xchg
pop
ds
push
mov
out
cld
jb
fs
mov
subl
jecxz
rorl
leave
je
pop
or
in
mov
cld
das
fcomip
clc
pop
jp
xor
shl
jmp
xchg
sub
fdivrl
push
sbb
pusha
cmc
dec
mov
iret
in
mov
movsl
mov
mov
pop
inc
out
iret
xchg
cld
movd
movsl
mov
jmp
pop
jbe
mov
icebp
aas
sbb
sbb
adc
jl
dec
test
imul
loop
jnp
sub
test
xor
andb
jnp
xchg
mov
push
jo
gs
cli
sbb
and
or
movsb
leave
xchg
xchg
les
imulb
sub
and
cmc
fidivl
dec
mov
jg
and
inc
and
sbb
push
dec
inc
xor
push
push
or
cmp
xchg
popf
enter
push
add
sub
inc
mov
bound
insb
jne
repz
stos
out
shlb
and
sub
push
fsubrl
or
addr16
mov
adc
mov
in
cmp
js
pop
enter
add
xor
cld
aaa
inc
in
jmp
mov
popa
addr16
and
repz
xor
jle
push
xchg
mov
stc
mov
daa
inc
pop
pop
pushf
add
pop
std
cmpsb
sub
fldenv
dec
idivb
push
push
adc
imulb
fcom
jae
mov
sbb
das
addb
push
js
shrb
or
or
lret
adc
sub
sarb
push
inc
out
mov
stos
scas
dec
pop
pop
aaa
xor
push
jo
cli
xchg
mov
sub
mov
movsb
int3
or
leave
cmp
idivb
mov
jnp
in
xchg
enter
add
or
or
push
pop
pop
das
mov
rolb
xor
jae
cwtl
push
es
in
cli
inc
loop
mov
adc
push
lret
mov
cmp
or
test
stos
fstpt
jno
mov
test
mov
mov
out
test
jmp
or
pop
sbb
cmpsb
addb
adc
adcl
xchg
aaa
insb
mov
xor
repnz
jb
insl
dec
lcall
jbe
and
xchg
cmpsb
mov
dec
jne
rcrl
pusha
fldl2e
mov
sub
push
fmulp
cmpsl
adc
add
xchg
push
cld
xchg
dec
push
adc
mov
push
cmp
out
cmc
daa
sub
mov
mov
andl
or
lcall
scas
push
sub
jg
imul
sbb
fimuls
out
out
mov
mov
movsl
pop
test
pop
xor
dec
sbb
mov
mov
and
and
add
and
mov
add
push
test
mov
sti
sbb
pusha
wbinvd
insb
ljmp
cmp
in
cli
mov
ljmp
fadd
jp
movsl
test
fwait
lods
mov
clc
cmpsb
sub
iret
int
fs
rcrb
mov
aas
pop
jae
add
jmp
rorb
mov
inc
sub
fdivrl
cmp
leave
inc
mov
sbb
sarb
aam
add
cmp
data16
and
sbbl
xorb
lods
xchg
mov
cmp
dec
fisubrl
bound
xor
jmp
aad
xchg
pushl
lcall
pushf
cltd
cwtl
out
xor
out
popa
mov
arpl
or
xchg
loopne
inc
stos
lcall
cli
and
stc
pop
fcompl
sbb
jl
jb
and
push
test
lods
add
out
or
cmp
adc
sub
aas
rcrl
out
icebp
int3
or
test
xor
fstpl
xlat
in
mov
shll
sub
pop
data16
andb
or
sbb
lret
clc
dec
jg
int3
test
fcomps
xchg
int
inc
subb
mov
out
fucomip
mov
or
ret
imul
scas
mov
add
push
pop
jno
out
xor
repnz
es
pop
xor
cld
leave
jl
xchg
ds
or
sub
jg
fwait
inc
xchg
inc
cmc
es
clc
pop
pusha
cmc
pop
pop
lcall
push
cmpb
pop
cmp
pusha
das
fsubp
pop
test
mov
pop
pop
stc
mov
xchg
into
jns
mov
repz
push
mov
pop
out
outsl
pop
inc
xchg
in
dec
jg
jmp
xchg
mov
fdivrl
cmp
xor
loopne
adc
push
mov
cwtl
xlat
push
scas
adc
xor
cmpsb
icebp
cmpsb
sub
nop
mov
push
jmp
jmp
jnp
adc
inc
lret
mov
jl
mov
xchg
scas
sbb
sbb
roll
sbb
jge
daa
and
mov
mov
cmp
sahf
add
stos
sbb
push
sub
sbb
cmpsb
mov
out
add
cmpl
sub
pop
sbb
sar
insb
icebp
ficoml
mov
push
loop
or
enter
push
test
inc
adc
cmp
sub
lret
rclb
cmpl
rorb
xchg
ret
xor
jno
aaa
loop
jae
adc
and
mov
fsubrl
ret
xor
jg
mov
iret
add
nop
shlb
jg
fstps
pop
mov
dec
mov
dec
fimull
aam
test
outsb
xchg
mov
jo
push
clc
cwtl
inc
sbb
cmc
into
xchg
out
add
daa
pusha
bound
sar
aam
pop
lret
mov
sbb
ss
loop
dec
mov
shr
pop
push
push
jb
jp
faddl
call
shll
jb
mov
pop
in
pop
and
cmpsb
std
lret
cmc
sub
shrb
mov
mov
add
sahf
in
iret
sbb
int3
cltd
mov
adc
subb
bound
je
cld
xlat
loope
andl
shl
cmp
or
mov
sub
and
popl
mov
mov
call
scas
inc
push
inc
jmp
rcrl
xor
push
outsb
bound
mov
fistl
jmp
sbb
cmpsl
stos
fidivl
cld
cmp
fcomps
pop
scas
sahf
mov
repz
repnz
jl
pop
mov
adc
xchg
ret
clc
dec
ja
mov
imul
mov
cli
mov
pop
add
fmuls
jno
adc
flds
fdivs
mov
lods
mulb
add
sbb
repnz
sarb
cmp
jnp
out
mov
cmp
pop
sub
insl
shl
nop
in
cmp
jns
cmp
shrb
xlat
imul
cmp
jns
or
rcr
and
lods
jg
stos
ret
jae
adc
cwtl
mov
mov
loopne
sub
inc
push
xchg
dec
xchg
xchg
mov
in
push
stc
mov
lret
int3
push
test
mov
cmp
shl
mov
rorl
repz
cmp
rclb
sbb
stos
push
in
cmp
notl
scas
iret
and
mov
fimull
or
loope
into
cmp
inc
lcall
jb
sbb
sbb
popf
lahf
push
push
xlat
insb
dec
outsl
movsl
cmpsl
cmp
test
rol
xor
dec
jb
pop
decb
add
push
inc
push
inc
or
int
mov
cmpsb
jne
push
or
dec
gs
adc
icebp
push
test
out
shll
dec
push
mov
xchg
insl
mov
xchg
xchg
adc
jecxz
arpl
dec
outsl
ror
out
sub
cmp
cltd
outsl
pop
mov
mov
push
repnz
xor
fisubl
push
mov
pop
int3
cmp
jg
xchg
jecxz
int
add
mov
cltd
icebp
das
mov
ror
mov
ds
int3
and
pop
mov
cwtl
int3
xchg
loope
or
roll
inc
pop
add
mov
lds
pushf
into
cmpsl
sarb
xor
jne
pop
pop
or
jmp
xchg
out
mov
add
push
loopne
clc
and
pop
or
cltd
cmpsb
out
fists
enter
fcoml
jmp
ret
shll
mov
push
mov
scas
insb
push
std
jge
pushf
jmp
hlt
xchg
and
fbld
inc
xchg
loope
shrd
insb
pusha
mov
sbb
jns
push
inc
aaa
or
mov
fwait
out
lret
mov
iret
inc
sub
or
fidivl
mov
fists
xchg
and
dec
cmc
lcall
push
push
push
rcl
jae
or
ss
ret
mov
insl
pop
adc
enter
ja
xchg
imul
inc
push
aam
mov
inc
cs
jnp
mov
pop
push
sahf
imulb
xchg
xchg
sub
enter
push
mov
ja
insb
mov
xchg
mov
push
dec
dec
js
add
lret
je
cwtl
sbbb
pop
test
mov
or
add
add
fwait
xchg
nop
in
push
pop
stc
daa
xlat
sbb
mov
outsl
sub
idivl
aam
iret
iret
ror
out
movsl
in
sub
orl
repz
cmc
ja
cmp
cld
out
daa
mov
ret
mov
inc
inc
cmpsl
inc
mov
inc
sub
or
in
and
dec
xor
cmpsl
clc
add
popa
fadds
insl
adc
pop
daa
arpl
add
or
sti
pop
clc
inc
inc
mov
pop
mov
test
mov
inc
icebp
clc
xchg
mov
add
repz
inc
lods
or
push
cmp
dec
out
jecxz
out
pop
mov
lock
inc
inc
sub
aaa
aam
jle
dec
scas
pushf
mov
adc
sbb
inc
cmp
sbb
arpl
scas
pop
mov
mov
or
out
aam
rcl
pop
sbb
mov
xor
stc
movsb
leave
mov
addr16
stos
and
and
aad
dec
ret
sbb
out
jecxz
dec
std
and
neg
pop
mov
outsb
jge
outsl
rolb
jl
sub
or
int
mov
mov
jns
pop
add
xchg
outsl
dec
push
push
es
movsl
call
xor
loope
icebp
ljmp
pop
and
mov
fucomp
fdivrl
nopl
cwtl
aam
mov
mov
andl
push
xchg
add
xchg
cmp
and
dec
flds
insb
mov
dec
jp
lcall
test
movsl
mov
ficoms
mov
or
arpl
pop
mov
push
add
repnz
mov
sub
xor
inc
xor
add
loopne
in
loopne
dec
and
inc
mov
leave
out
ret
mov
fiaddl
cmp
or
mov
jp
inc
out
mov
movaps
rol
aas
push
lret
out
test
dec
sarb
xor
ljmp
inc
popf
pushf
fcompl
mov
ret
dec
repnz
jl
sbb
add
movsb
pop
xchg
cld
or
pop
cwtl
or
shl
mov
jl
inc
ss
inc
call
and
mov
jmp
cmp
mov
add
cmp
jno
movsb
lret
sub
lret
inc
fnclex
push
out
or
out
repnz
inc
push
lret
cmp
sub
lret
push
dec
sbb
in
adc
dec
lods
lcall
mov
rdpmc
or
ret
das
push
cli
test
subb
push
fistl
xchg
fisubs
notb
or
rcrl
xor
test
mov
aad
jge
testl
rcll
jb
ds
push
pop
mov
jnp
imul
in
and
ds
cmc
mov
int3
int3
dec
lds
je
push
cwtl
pop
sub
jb
scas
in
mov
xor
sbb
loopne
mov
push
mov
cmpl
ds
jle
pop
not
out
je
sahf
mov
inc
jno
sbb
fstl
xor
ds
sbbb
movsl
lods
arpl
fidivrs
popa
data16
cmp
arpl
dec
imul
out
mov
or
and
imul
add
movl
add
adc
jno
push
lret
lret
out
sti
lock
aas
pop
rcll
sbb
jns
dec
mov
leave
sahf
testl
pop
imul
inc
pop
movsb
jmp
cmp
pop
and
test
xor
cmpsl
push
push
push
fdivrl
in
xor
inc
lcall
pop
jmp
enter
in
xchg
lahf
pop
push
sahf
mov
mov
fmull
mov
add
cwtl
leave
jno
jle
xor
xor
inc
mov
cmpb
dec
std
add
sbb
stos
loop
fsubp
mov
adc
mov
add
inc
cmpsl
packssdw
insl
pop
pusha
cmp
aad
add
jns
sub
sub
mov
popa
fbld
sbb
das
jns
mov
pop
fiaddl
mov
cmp
pop
repz
orl
hlt
repnz
add
loop
shll
dec
add
push
aas
xchg
sbb
ja
dec
lret
icebp
pop
mov
jnp
sbb
xchg
add
jmp
rcr
arpl
or
dec
mov
lret
jnp
sbb
mov
arpl
jecxz
dec
pusha
ret
scas
icebp
and
fsubrs
mov
cmp
mov
jge
mov
pop
dec
jb
mov
jmp
lds
out
popf
fdivrs
add
shll
and
jbe
rcrb
mov
icebp
loopne
imul
daa
dec
push
bound
jb
jo
inc
mov
mov
lret
ja
pusha
aad
icebp
xor
cs
jg
mov
push
xchg
sbb
cwtl
dec
mov
adc
aam
dec
je
xchg
xor
xchg
inc
sbb
jecxz
aaa
mov
cmp
aaa
add
and
out
mov
das
or
ret
pusha
test
std
pushf
adc
sbb
mull
insl
or
iret
scas
cmp
pushf
and
or
push
xor
fmuls
mov
roll
nop
ja
mov
dec
sbb
xchg
or
and
in
pusha
xor
pop
test
mov
push
pop
lret
fnstcw
stc
fdivp
cmc
inc
movsl
inc
jl
les
add
cmp
push
and
enter
ss
lods
add
push
pop
mov
inc
insl
xchg
adc
inc
ljmp
mull
xchg
loop
das
xor
out
dec
or
and
mov
out
repz
adc
adc
pusha
loop
push
sub
jl
adc
insl
push
lahf
mov
xchg
cmpxchg
push
sub
outsb
orl
mulb
out
push
and
imul
stos
je,pt
rcll
dec
lods
lods
adc
or
push
and
jecxz
ja
sbb
nop
and
insl
lret
xor
stc
cwtl
in
inc
and
stos
mov
aaa
add
inc
xor
push
lahf
addr16
cli
adc
int3
fs
orb
push
test
and
dec
jns
add
dec
or
loop
inc
ds
ret
ja
inc
out
add
pushf
mov
xlat
fldl
je
stc
stos
sti
fistpll
ret
mov
xchg
push
sbb
jbe
add
cmp
test
rsqrtps
addb
inc
cld
nop
out
popf
pop
inc
mov
repz
jne
pusha
pop
xlat
shrb
add
jg
sub
imul
add
cwtl
push
jae
enter
mov
lods
loope
int3
into
popf
orl
dec
into
add
jl
sub
xchg
and
das
clc
daa
ljmp
lea
stos
popf
aad
mov
xlat
cld
dec
ljmp
inc
rorb
scas
enter
mov
jle
dec
bound
cmp
jae
pop
addr16
xorb
xchg
jnp
sub
adc
out
mov
test
les
jle
data16
jg
mov
adc
mov
sbb
xor
or
pop
mov
mov
xlat
data16
mov
jge
cmpsb
roll
push
in
cmp
mov
add
popf
sbb
jmp
call
into
push
pop
lcall
xchg
jbe
adc
stos
std
pop
push
inc
dec
mov
sbb
cmp
shll
leave
mov
cmc
icebp
inc
xor
mov
idivl
xchg
add
mov
movsl
mov
daa
fwait
adc
fldcw
faddl
sbb
sahf
sub
stos
unpcklps
cmp
mov
inc
ret
pop
imul
bound
mov
mov
xchg
lds
jmp
mov
adcb
push
std
lea
pop
ja
cmp
jnp
pushf
lcall
in
xor
cmpsl
mov
mov
xorb
fs
mov
cmp
jl
cltd
mov
dec
test
aam
out
sarl
aam
incl
cmp
mov
pop
mov
jbe
jne
fwait
stos
in
bound
into
mov
aaa
shll
aam
jecxz
in
movsb
xchg
mov
ret
cs
leave
cmpsb
xchg
cltd
aad
fistpll
cmc
xchg
cltd
and
jmp
arpl
rorl
rcll
mov
adc
shrl
xchg
adc
pop
outsb
inc
or
push
loope
push
sbb
data16
and
sbb
xchg
lahf
mov
rorb
lods
das
scas
aaa
in
sub
xchg
pop
inc
and
sub
out
lcall
sub
push
pusha
cmp
ficompl
sbb
jno
je
je
adc
out
xor
test
adc
out
repz
xor
pop
inc
mov
lret
out
leave
bound
mov
or
dec
das
pop
ret
mov
dec
inc
ljmp
pop
inc
aad
sbb
adc
pusha
subb
fcoml
cmp
pop
and
ficoml
aam
inc
negl
sub
inc
les
sarb
fldt
cmp
mov
popa
jmp
test
imul
cmc
hlt
lea
cltd
dec
or
mov
in
leave
jno
mov
mov
leave
cwtl
ja
push
loop
call
incl
lcall
mov
cwtl
mov
imul
sub
xchg
xor
xlat
mov
jns
mov
adc
add
mov
sbb
cltd
mov
das
je
stos
pop
mov
jbe
insl
pusha
push
xchg
dec
or
movl
clc
out
pop
in
push
lds
sub
push
nop
sbb
in
in
pusha
stos
pop
cmp
enter
xor
inc
xchg
pop
xor
aad
push
or
mov
aaa
push
mov
fdivrs
jp
rcrb
and
mov
adc
mov
out
movb
xor
xchg
jae
out
stos
pop
jmp
jae
movsb
shlb
test
jno
aam
imul
int3
add
push
jg
sbb
idivl
es
push
mov
sarb
mov
dec
add
inc
repz
les
jo
pop
cmp
cmpl
into
mov
xchg
imull
xor
and
and
add
jnp
addr16
sti
lods
mov
cmp
cltd
insb
mov
and
loope
mov
sub
imull
cmp
rcr
push
add
push
fcompl
mov
in
fs
cmp
inc
jle
dec
push
aaa
int
xchg
addl
pop
pop
insl
mov
and
or
gs
loope
sti
fwait
mulb
add
mov
inc
sub
mov
cmc
cmp
mov
xchg
outsb
dec
cwtl
sub
push
mov
and
outsl
orb
add
lcall
fldz
push
fildll
popa
mov
dec
das
into
cld
ss
jne
ds
cs
sub
ja
xchg
lods
sub
pop
in
movsb
int
pop
les
std
fsubl
fcoms
divl
inc
addl
xchg
and
repnz
int3
inc
adc
aaa
xchg
xor
jmp
xor
out
fcoms
mov
xor
xor
xchg
jns
clc
sbb
sbb
or
leave
ja
adc
push
sbb
inc
fwait
cld
mov
aad
out
test
js
mov
ret
xor
stos
cmp
jecxz
leave
inc
adc
loop
gs
out
add
andb
cmp
out
xor
mov
ja
loopne
std
jl
scas
clc
cmc
enter
push
sti
data16
pop
iret
into
ja
push
test
mov
mov
lds
repz
adc
imul
cmp
and
xor
cmp
adc
jmp
bnd
and
mov
in
aam
lcall
imul
dec
cmp
and
outsl
ljmp
push
or
cmp
in
out
nop
sub
popa
stc
in
outsl
pusha
loopne
cmpl
mov
lcall
xor
and
xchg
lods
cmp
mov
or
insl
inc
es
mov
stc
xchg
pushl
decb
rorb
and
lcall
mov
out
xchg
or
xchg
push
nop
ret
xor
inc
pop
js
jae
xsavec
shlb
jecxz
push
push
ljmp
repnz
sub
add
or
pop
dec
mov
pop
das
mov
addr16
xor
ficoml
shr
out
cmc
and
lds
adc
sub
mov
ljmp
push
aad
fwait
mov
xchg
rol
push
jbe
jmp
out
loope
daa
daa
pop
jb
ljmp
pop
int3
sarl
jp
cmp
dec
sub
lds
jmp
push
int
jmp
dec
mov
and
stc
mov
aam
cmpsl
sar
push
xchg
dec
iret
mov
or
shll
stc
adc
inc
cmp
push
inc
jecxz
xchg
pop
jns
gs
adc
inc
ja
add
and
sub
ja
add
stos
dec
xchg
xor
mov
pmuludq
xchg
test
jmp
cld
into
mov
test
xor
or
mov
add
call
push
repz
cmp
cmp
mov
sbb
aaa
pop
imul
adc
addl
fistl
pusha
xor
mov
das
jp
ret
jb
cmp
add
lahf
pop
sub
sub
leave
ret
cld
sub
lcall
cmp
push
cltd
mov
mov
leave
mov
mov
sub
leave
sbb
movsl
movsb
loope
inc
push
bound
adc
pop
push
out
pushf
outsl
xchg
lahf
sub
jno
jecxz
shl
outsl
mov
or
sbb
cmp
mov
dec
dec
aam
adc
mov
js
sbb
or
repz
lock
jae
add
subb
pop
pushf
clc
push
xchg
jg
mov
fwait
mov
push
out
ja
dec
cwtl
scas
pop
adc
imul
xor
int
adc
mov
out
std
dec
sbb
out
push
mov
lods
lods
xorb
pushf
dec
rorl
xor
aas
pop
push
stc
sub
cs
mov
xor
mov
cli
jecxz
push
fidivs
jmp
popf
cwtl
mov
jg
dec
sbb
mov
adc
mov
lret
dec
lods
icebp
push
mov
in
add
fsubrl
add
into
insb
sar
loop
ja
cltd
mov
ret
js
stos
mov
test
sbb
xor
mov
or
stos
pop
je
rorb
hlt
popf
loopne
int
push
pop
sub
push
shlb
xchg
or
scas
fld
popf
pop
add
cmp
mov
imul
pusha
jmp
add
pop
dec
shlb
sahf
xchg
jnp
xchg
not
mov
enter
inc
mulb
pop
in
int3
xchg
sar
mov
and
mov
or
pop
mov
fildl
std
xor
lahf
or
sub
div
sub
push
mov
shl
adc
mov
mov
jge,pt
xor
mov
push
xchg
sbb
mov
jmp
jp
xor
add
lret
mov
inc
leave
rcll
test
add
int3
insb
in
mov
and
inc
inc
fisttpll
push
jnp
jo
insl
inc
sbb
sbb
scas
movsl
movsb
test
or
in
mov
lret
mov
sahf
jl
pop
mov
filds
add
dec
adc
xor
aas
cmpsb
and
and
and
hlt
sbb
fildll
mov
pop
jns
and
mov
xchg
sub
inc
xor
adc
adc
pop
inc
outsb
dec
sbb
mov
jmp
in
mov
adc
bnd
dec
sub
daa
jecxz
in
shl
mov
ret
nop
inc
vpcmpeqw
and
jle
bnd
sbb
jne
movsl
movsb
daa
mov
cs
push
mov
adc
xchg
sti
xor
outsl
adc
jno
cwtl
mov
or
or
daa
inc
push
mov
call
bnd
mov
scas
dec
lahf
sahf
addr16
jbe
inc
xchg
dec
xchg
movzwl
pop
mov
fcmovnb
xor
ljmp
movsl
sbb
in
pop
fiadds
mov
scas
jmp
inc
xchg
lock
jl
ljmp
mov
inc
es
iret
in
and
or
in
sub
out
aaa
push
pop
jns
xor
in
xchg
pop
fldcw
imul
sub
push
xor
imulb
or
sti
notl
mov
cmp
aam
pusha
cli
lret
inc
or
jno
cmpsb
xchg
pop
lock
mov
mov
jmp
mov
xor
mov
inc
cmp
add
push
mov
sti
xor
iret
dec
pop
mov
and
mov
push
xchg
stc
add
nop
inc
jns
inc
rol
mov
push
shrl
hlt
std
mov
mov
js
pop
mov
sbb
inc
jbe
push
aam
inc
mov
mov
and
bound
jno
test
add
or
mov
mov
repnz
sub
xchg
adc
jmp
ja
and
in
loop
push
shll
das
xor
inc
out
insl
cli
or
out
push
xchg
dec
insl
and
jg
orl
test
mov
lret
roll
sbb
cli
in
lret
inc
icebp
sbb
mov
ljmp
cmp
push
jmp
pop
into
mov
test
dec
int
push
and
xor
sarb
and
or
scas
rcr
clc
jecxz
xchg
or
jne
jb
push
ds
mov
pusha
daa
lret
ljmp
test
mov
lock
add
or
push
push
icebp
aam
push
aas
xchg
dec
sub
add
adc
pop
aam
std
aas
push
or
repnz
cwtl
add
and
out
jbe
cmc
iret
adc
ret
adc
inc
lret
out
in
rcll
imul
inc
lcall
sahf
iret
gs
lahf
cltd
or
cmp
shrb
xor
orb
add
aam
lret
rcrb
cmp
pop
mov
fadd
pop
sbb
pop
icebp
jg
sbb
push
pop
rcll
mov
inc
mov
test
in
inc
mov
xor
imul
add
and
lret
dec
sahf
fnstcw
leave
xchg
inc
popf
icebp
test
push
cltd
push
lock
ret
mov
fs
into
ret
aaa
int
adcb
mov
xlat
and
aam
dec
loop
icebp
outsl
loopne
mov
testl
sahf
enter
int
in
imul
pushf
movsl
sub
xchg
push
pop
rcl
xchg
and
leave
push
and
add
lret
cmpsl
nop
shl
jle
dec
dec
lret
push
std
xlat
push
jae
cmp
xchg
pop
jg
sbb
aad
jno
fbld
int3
test
mov
imul
popf
adc
or
push
add
icebp
jb
pop
ret
mov
mov
sahf
push
sub
fisttpl
in
xchg
sub
fisubrl
or
xchg
add
fildll
xchg
lahf
cmp
bound
adc
and
dec
ret
xchg
rcl
sbbl
pop
aad
inc
leave
and
mov
xchg
int
fcmovbe
sbb
push
imul
outsb
pop
lcall
inc
mov
xor
xor
fs
jge
push
pop
int
mov
lret
jecxz
sub
mov
pop
cli
vphaddubq
outsl
in
cmp
sar
bound
adc
jne
push
or
cld
repz
mov
and
dec
xchg
mov
jnp
mov
data16
in
mov
cli
xchg
xchg
cmc
dec
mov
mov
outsb
in
add
clc
fcmovnu
inc
das
rcrl
cs
sbb
push
adc
sbb
cmp
nop
push
inc
jae
sub
lcall
lret
stos
ja
test
negb
fdivs
fnstenv
stos
ret
mov
xchg
jbe
dec
lods
sbb
leave
push
and
pop
fcoml
cmpsl
cli
and
outsl
int3
sub
das
sub
or
js
mov
insb
fwait
test
mov
maskmovq
sbb
cmpsl
cmp
xchg
aam
jl
dec
dec
jnp
add
inc
xor
test
jbe
jno
mov
cld
pop
pop
ss
cs
or
lods
adc
cmpsl
fs
cli
add
mov
daa
jno
in
cmc
out
enter
push
mov
ss
xor
push
jbe
or
iret
adc
and
mov
pop
loope
push
into
xchg
aam
sub
add
jg
mov
mov
fimull
xor
sbb
fdivrp
dec
outsl
xchg
les
sub
ret
in
xor
xchg
mov
jno
push
xchg
filds
decb
xor
or
in
lahf
psrlw
daa
popf
add
cmpsb
or
jns
in
popa
cmp
add
pop
fisttps
add
mov
push
int3
mov
lret
les
roll
add
push
cmp
mov
xor
jnp
and
inc
adc
cs
shr
jae
mov
mov
sub
cmpsb
mov
test
sbb
in
xor
rclb
data16
push
jae
mov
sub
sub
xchg
cmp
ret
fucomi
lahf
jnp
mov
pusha
push
add
push
mov
sub
xchg
mov
push
movsl
cmp
push
xchg
inc
push
inc
ds
add
ss
mov
sbb
xor
cli
mov
push
jne
pushf
and
in
cmp
inc
push
pop
dec
mov
xchg
cmp
jecxz
sbb
jl
mov
xchg
xchg
or
jge
push
negl
sub
pushf
ret
or
sar
int
mov
lret
out
push
inc
jmp
xlat
mov
pop
pop
xchg
shlb
cld
xor
mov
mov
adc
and
enter
mov
stc
xor
mov
xchg
test
in
cmpsb
mov
xchg
scas
mov
pop
xor
cli
sub
mov
mov
subl
bound
mov
push
xor
insb
imul
out
mov
loop
ret
mov
shl
add
dec
jne
or
dec
ret
cli
lods
call
pop
data16
std
ficoms
nop
fistpl
ds
fsubrp
pop
add
icebp
mov
push
inc
xchg
les
cmp
lahf
or
mov
stos
mov
fdivr
dec
filds
mov
mov
push
and
jbe
jp
mov
cmpsl
xchg
inc
out
mov
push
mov
sti
sbb
lret
fmull
cmp
sbb
mov
aaa
mov
jg
dec
fisttpll
call
xor
rol
and
xchg
scas
lods
arpl
sub
cmp
mov
mov
xchg
loopne
insb
hlt
lea
sub
jmp
popf
mov
loop
or
add
inc
lea
stos
adc
mov
imul
cmp
pop
lcall
xchg
inc
ljmp
cwtl
sti
outsl
movsb
sahf
inc
mov
mov
xchg
sbb
cld
lods
rcl
test
imul
mov
in
ds
aad
in
sub
ja
sub
mov
pop
push
pop
xor
ljmp
stc
mov
xchg
outsb
xchg
pushl
or
xchg
push
mov
mov
mov
add
test
call
mov
adc
jns
xchg
pop
rorl
aam
rolb
inc
lret
ret
dec
loope
xor
out
stc
cld
mov
int3
jmp
or
inc
jne
sbbl
mov
jo
or
notl
ja
push
ss
dec
ja,pt
test
outsl
mov
jne
test
jbe
dec
mov
repz
lds
or
fstps
out
cltd
xor
rcrb
sahf
sub
pop
ret
lahf
cwtl
jge
popf
cmp
mov
inc
addr16
xor
mov
dec
sbb
jbe
pusha
fnstcw
fnsave
adc
adc
push
adc
rol
in
jns
mov
enter
adc
xor
andb
add
push
sub
mov
cmpsb
inc
xchg
popa
fs
imul
xor
sub
xchg
pushf
mov
push
scas
sbbl
push
pushf
pop
bound
aam
adc
dec
ss
flds
stc
in
ljmp
push
scas
int
loope
sub
stos
ret
mov
push
cmpsb
pop
testl
xchg
andl
jo
lcall
cld
into
xchg
mul
mov
mov
test
mov
out
jl
mov
xchg
clc
sub
push
inc
sub
mov
or
jmp
iret
mov
outsl
shrb
sbb
push
pop
rcrl
dec
ljmp
jnp
sbb
inc
shll
pop
inc
or
pop
sbb
sub
lret
push
mov
nop
test
adc
sub
jecxz
flds
les
sbb
vpunpckldq
pop
js
mov
adc
and
lods
test
fsub
pop
or
inc
xor
mov
add
gs
jl
push
dec
mov
inc
int
test
sub
call
sub
ret
xlat
mov
enter
pop
pop
xor
mov
loopne
insl
out
subb
cld
ljmp
push
in
rol
lahf
mov
repnz
xchg
int3
mov
imul
adc
inc
xchg
icebp
cmp
pusha
sbb
inc
xchg
hlt
mov
and
pop
push
data16
adc
idiv
pop
loope,pn
jae
fs
jecxz
pop
cmpsl
xor
lea
fcomp
mov
inc
push
out
adc
test
mov
sbb
pop
xor
add
sti
dec
jg
mov
jp
push
fstps
push
pop
orb
mov
xchg
fstpt
aad
mov
cmp
int3
pusha
enter
stos
xchg
inc
jg
sbb
je
roll
pop
sbb
sbb
adc
into
std
lret
aam
cmp
rolb
je
xchg
mov
xchg
add
xor
or
fidivl
stos
jae
imul
sub
mov
es
pop
xchg
lcall
inc
imul
gs
shlb
mov
mov
les
imul
fcomps
jno
fldenv
fdivrp
xchg
jmp
lahf
stos
jmp
cli
fcomip
loope
cmp
sub
push
jecxz
inc
cmpsb
or
loopne
add
add
rcll
movsb
in
sub
mov
adc
xor
xchg
mov
mov
ret
or
mov
mov
push
or
dec
or
lret
out
arpl
out
push
sti
hlt
or
adc
jne
cli
push
sub
add
xchg
inc
jb
shll
pusha
pop
test
xchg
addl
sbb
cmp
fdivs
push
bound
push
push
add
incl
sbbb
or
scas
out
fisubrs
sub
fcoml
sbb
fmuls
ja
sahf
enter
cs
and
lcall
test
mov
ret
and
jecxz
std
mov
dec
orb
pop
inc
cmpsb
push
sahf
mov
test
popl
fdivr
popf
inc
mov
sbb
jle
imul
cmp
lea
mov
jnp
xchg
std
inc
inc
mov
push
cmp
lahf
leavew
sub
das
mov
pop
mov
cmp
call
scas
jecxz
das
push
icebp
sbb
mov
pop
mov
jne
xor
gs
pop
imul
es
or
jmp
mov
in
inc
mov
iret
add
push
repz
mov
lock
popf
lods
push
loop,pt
inc
addr16
lods
fyl2xp1
stc
mov
shrl
mov
jb
mov
shll
xchg
push
inc
imul
popf
lock
xor
xor
push
jbe
js
push
adc
xchg
fdivs
inc
cli
mov
or
jns
xor
and
mov
jbe
xor
xchg
stos
xchg
pusha
scas
sahf
mov
sar
dec
in
test
ror
pop
je
push
cmp
jge
cwtl
push
das
movsb
test
lcall
or
lds
push
sub
or
dec
mov
sarl
rol
push
out
mov
aam
inc
jae
sbb
arpl
lock
and
cmpb
push
cmp
cld
dec
fsubl
cli
dec
jmp
jb
mov
mov
in
in
andb
out
lea
jnp
sbb
xchg
leave
rclb
int
mov
push
shr
pop
imul
xchg
in
or
push
and
mov
sub
and
sub
sub
mov
stos
rcr
mov
test
std
repz
push
mov
mov
call
push
pusha
dec
shlb
sbb
test
outsl
sub
notb
jmp
jbe
aaa
dec
aas
xchg
bound
cmp
xor
add
cltd
sub
xorb
jno
aam
inc
cmp
push
add
inc
xchg
jg
cmp
cltd
sbb
movsb
cmp
loop
xor
es
push
cmpsl
pop
cmp
mov
stos
test
jg
je
jp
movsl
andl
mov
enter
lods
xchg
add
jne
lea
push
stos
bnd
test
insb
push
scas
xlat
jns
inc
and
sbb
ret
adc
enter
jp
mov
adc
sbb
sub
add
fs
pusha
sub
paddusb
inc
mov
xor
cmp
stc
bound
fists
cs
and
sbb
aas
lea
out
les
add
inc
jmp
mov
cmp
gs
cmpsl
in
icebp
js
lahf
pop
mov
push
sahf
sbb
mov
adc
ffree
cmpsl
aad
lods
imul
mov
popf
jns
rcl
jg
jmp
frstor
iret
shlb
adc
jae
jp
and
dec
aam
test
and
jae
sbb
mov
fcmovnb
xor
fxch
mov
add
call
pop
enter
xchg
imulb
das
ficomps
cmc
xchg
add
sub
fwait
xorb
pop
pop
push
jle
xchg
decb
or
jecxz
push
aas
in
pusha
mov
gs
xchg
stc
into
pop
xor
je
push
or
outsl
push
movsb
ljmp
pushf
mov
and
pop
xchg
lock
roll
cwtl
mov
xchg
in
cmp
pop
sub
jl
hlt
mov
jnp
xor
nop
jmp
call
jb
jnp
pop
repz
enter
or
mulb
cmp
jg
mov
shl
and
std
mov
adcl
mov
insl
xor
bound
or
mov
jb
jl,pn
cmpsl
and
dec
push
shll
je
inc
ret
adc
lods
sbb
sub
test
mov
stos
and
sahf
test
fldenv
iret
ljmp
add
inc
pop
inc
les
xchg
sub
mov
loop
movsl
lock
iret
adc
push
sahf
sahf
pop
jns
xor
in
push
out
cmp
or
orl
int
das
xchg
push
rolb
rorl
fmuls
xor
aad
sbb
loopne
stc
push
pushf
mov
loopne
cmp
or
inc
cmpsb
addr16
or
pusha
in
cmpsl
orl
mov
jmp
inc
cld
imul
pop
cmp
pop
mov
gs
and
inc
jl
add
test
cltd
mov
mov
jb
fsts
insl
fdivrs
xchg
pop
enter
test
fwait
inc
cwtl
movsb
nop
and
dec
cmp
loopne
and
adc
sahf
mov
push
inc
rcr
xchg
in
inc
push
outsb
add
es
mov
fldt
xchg
or
ficoms
das
push
cmp
addr16
loopne
cltd
add
loopne
mov
neg
loopne
mov
ret
mov
sbbl
int
pop
in
sbb
pop
hlt
xor
std
push
ja
pop
inc
int
mov
cltd
fs
push
inc
fmuls
fbstp
into
inc
cmp
mov
inc
adc
pop
bound
shlb
das
bound
adc
inc
xchg
movsl
iret
std
add
in
mov
cmpsl
arpl
stos
dec
xchg
jbe
leave
fnstsw
aas
lods
ret
pop
repnz
fisubrs
jp
out
into
push
mov
ret
nop
mulb
or
jp
ljmp
cli
ja
out
sub
lret
sahf
add
xchg
mov
add
out
pop
movsb
adc
cmp
add
movsl
fsubrs
xchg
sub
dec
mov
mov
js
xor
cmp
sub
inc
cmpl
xor
mov
in
sub
ss
pop
push
test
jb
outsl
and
in
add
aam
movsb
addl
mov
xchg
sub
push
pop
mov
aam
fadds
and
xor
lea
mov
and
rcrb
scas
cs
xchg
adc
push
xchg
js
and
mov
or
cmpsb
sub
adc
add
xor
sub
imul
push
aam
mov
dec
dec
jne
add
push
jl
ficoms
repz
fmul
lock
and
fcmovnb
sub
mov
mov
addb
inc
outsb
push
sbb
mov
sbb
pop
cmp
fdivrs
out
popf
je
adc
add
cmp
insl
mov
mov
push
push
inc
mov
cmpsl
subl
inc
push
adc
mov
pop
cmp
mov
pusha
cld
test
push
shr
lret
leave
sbb
sarl
outsb
stc
xchg
ljmp
mov
add
jns
mov
roll
addr16
pushf
ret
inc
push
int3
or
push
addr16
lods
fbstp
and
mov
push
add
js
sub
lods
pop
mov
adc
add
mov
sti
bound
shlb
pop
mov
add
cmp
scas
test
mov
ja
in
dec
xor
sub
ljmp
sub
jge
push
insl
fwait
cltd
xor
mov
mov
jl
inc
fistpl
mov
cmp
mov
jge
xor
outsl
mov
inc
sub
mov
sub
push
sbb
cli
idivb
rcl
out
repz
popf
mov
mov
test
xor
cmp
push
jo
mov
ret
movsb
add
adc
jae
sti
lahf
or
out
sub
xchg
xor
jbe
adc
mov
aad
test
lret
jbe
int
pop
jle
lret
movsb
lock
dec
sbb
dec
cltd
xor
push
xor
js
xor
sbb
pop
xchg
cmc
mov
sbb
lret
negl
lcall
test
push
ja
sub
ds
push
cltd
push
lods
aad
cli
cltd
jge
loopne
test
lds
pop
inc
xor
ja
lahf
scas
xchg
mov
sub
int3
cli
xchg
xchg
insl
int3
and
dec
inc
adc
adc
mov
sbb
xor
in
fs
inc
sbb
lahf
rcll
fists
xchg
int3
mov
adc
pop
or
push
ds
xor
int3
inc
inc
lock
std
and
jns
hlt
in
imul
dec
pusha
add
imul
test
cmpb
adc
lods
adc
cld
and
cli
pop
sub
xor
scas
xor
out
add
pop
inc
ja
jle
cmp
xchg
sub
inc
mov
push
sub
dec
push
fistps
insl
pop
outsl
push
dec
xchg
xchg
sbb
insb
decl
fsubr
sbb
and
inc
dec
stc
mov
cltd
imul
mov
adc
punpckhwd
mov
cld
lods
aaa
sub
adc
push
adc
dec
xor
jmp
add
ja
mov
pop
push
movsl
subl
shrl
inc
push
stos
ja
rcl
push
insl
subb
ret
xor
std
jmp
ret
mov
cmp
sar
sbb
mov
inc
insb
and
xchg
js
sbb
fimuls
scas
mov
jmp
sub
mov
insb
aas
add
adc
cmp
popf
mov
cmp
lea
and
dec
insl
repnz
adc
mov
cs
scas
add
rorl
test
mov
dec
rol
clc
pop
or
dec
push
sub
jne
push
negl
add
aad
pop
out
pop
cld
jnp
std
adcb
movsl
insl
and
mov
sti
neg
jns
call
mov
pop
adc
xchg
hlt
dec
mov
xlat
iret
out
and
aas
jg
insl
in
pop
xchg
inc
mov
sarb
out
mov
aad
jl
sbb
adc
push
push
cmp
adc
mov
and
dec
cmc
cmp
mov
pusha
fbld
hlt
nop
aas
sbb
popf
mov
push
std
outsb
add
pop
mov
sub
stos
jne
fwait
pop
mov
mov
ret
push
mov
jbe
inc
sub
fcomip
fs
mov
push
xchg
xchg
out
je
inc
pop
mov
pushl
ret
dec
ljmp
loopne
cmp
stos
dec
fistl
lret
outsl
pop
xchg
pop
sub
mov
popf
das
push
lret
xchg
xchg
or
or
sub
adc
jbe
mov
push
sub
adc
add
aad
scas
add
loope
sub
pop
arpl
and
and
mov
in
ficoml
jg
or
insl
aaa
shrb
insl
and
mov
push
sub
es
ret
xchg
push
mov
stos
clc
iret
cmp
ss
and
xor
enter
push
jne
inc
outsb
ret
cwtl
aad
sahf
mov
mov
and
xor
mov
movsl
jae
ficoml
push
dec
pop
xchg
inc
fwait
pop
icebp
popa
cmp
pusha
mov
adc
loop
call
decl
sub
movsl
jne
lock
sbb
mov
out
jb
or
sahf
push
icebp
lcall
flds
lds
sbb
push
mov
mov
pop
in
mov
or
or
or
outsb
stos
sub
adc
mov
sub
sbb
sti
fnstsw
int
or
loopne
jo
je
sub
std
cli
test
xor
jae
shll
push
nop
flds
popf
or
jo
sub
xor
mov
scas
stos
push
jge
loopne
pusha
jbe
sarb
inc
cmp
push
sarl
pop
out
add
xor
cmp
or
pop
leave
mov
sti
push
xchg
icebp
mov
jp
dec
cmp
push
stc
and
pop
sub
nop
out
test
mov
adc
fsubrl
xor
enter
pop
dec
cmc
rcrl
icebp
mov
dec
cli
inc
in
pop
imul
mov
fistl
and
xchg
int
ret
and
jmp
cmpsl
lds
push
repnz
rcll
adc
hlt
mov
pop
xlat
rclb
int
sahf
in
push
mov
sbb
sub
jno
xchg
std
pop
mov
push
test
std
pop
mov
adc
jle
leave
and
xchg
pop
and
jle
add
sbb
pushf
jb
push
cmpsl
insb
out
xor
sarl
mov
cli
stos
adc
dec
mov
mov
mov
rcl
in
aaa
mov
xor
pop
ret
jne
sbb
call
std
loop
mov
jle
sub
cmp
nop
pop
mov
iret
ficoms
fs
out
andb
xchg
cmc
inc
dec
pusha
ds
or
stos
iret
sbb
push
sub
aam
mov
jle
inc
mov
sbb
pop
xor
xor
ret
mov
and
cmpsl
inc
imul
lcall
jge
sarl
sbb
fstpt
xor
jb
imul
mov
jnp
sbb
insl
imul
jmp
cmp
add
fwait
sub
flds
adc
pop
addr16
dec
and
mov
mov
mov
iret
out
and
enter
adc
insl
popf
xlat
and
ja
push
lock
xchg
andl
dec
sbb
and
je
mov
jl
push
dec
inc
add
pop
push
cmpsl
fstps
xor
mov
cmp
sbb
mov
push
dec
cli
or
pop
gs
outsl
add
inc
popf
pop
jl
xchg
sbbb
ds
or
mov
in
xchg
adc
jno
pop
movsl
loop
out
lret
insb
repnz
dec
fdivs
ljmp
mov
in
mov
adc
stc
add
gs
loop
in
fisubs
sbb
shl
ja
and
mov
sbb
mov
cmp
and
push
pop
adc
out
push
push
pop
dec
fwait
adcl
mov
lock
repnz
jno
aam
add
and
ss
lods
jns
and
dec
pop
xchg
sub
inc
push
cmp
cmc
pop
std
sbb
enter
lret
ds
repz
enter
push
pop
xchg
in
das
pop
jp
ja
jle
pop
jg
movsl
mov
in
xor
cli
jbe
inc
lea
inc
dec
scas
mov
cmp
sbb
sarb
ret
add
push
cmpsl
ds
aas
inc
adcb
sub
mov
push
push
mov
mov
cli
lahf
cld
sarl
daa
leave
daa
xchg
push
ret
dec
fnstcw
rclb
dec
iret
adc
loope
daa
sub
xchg
js
mov
pop
push
rclb
push
lret
lret
movsl
push
sbb
ret
jmp
pusha
and
mov
jo
pop
push
aad
and
scas
mov
pop
rolb
push
mov
pusha
fcompl
lock
scas
fwait
test
test
mov
lea
mov
push
mov
and
push
sbb
leave
mov
mov
hlt
pop
out
dec
fcoms
mov
int
in
pop
mov
fs
cmp
aas
jae
jno
addr16
in
jmp
xor
imul
scas
orl
pop
adc
lret
repz
jmp
and
pop
shl
arpl
or
xchg
inc
scas
popa
and
outsb
mov
push
sub
nop
xor
jmp
cli
push
cli
cs
lahf
jg
mov
dec
cmc
mov
pop
or
xor
xor
mov
jmp
flds
jg
fmull
in
xchg
xchg
sub
pop
or
es
les
adc
lcall
inc
pop
stc
xor
and
pusha
and
xchg
shr
push
or
jne
out
cld
xchg
stc
fadd
push
fisubl
push
jl
nop
jae
inc
test
cvtps2pi
movsb
mov
inc
xor
inc
fnsave
int3
push
fisubrs
push
enter
sbb
popf
or
fs
cmp
mov
inc
push
push
cmp
jle
aaa
push
push
gs
adc
and
ffreep
mov
xor
icebp
cmpsb
fsubs
sbb
mov
les
xor
hlt
mov
test
stc
or
mov
add
push
mov
and
fwait
inc
test
cs
outsl
lds
out
push
xchg
adc
sbb
mov
subb
lea
testl
adc
dec
jl
xor
mov
xchg
xchg
cwtl
cmpsb
sbb
sbb
cmp
out
mov
hlt
xor
adc
cltd
into
mov
xchg
push
bswap
in
jmp
movsb
push
test
mov
or
rcrb
test
jle
ja
cmp
pushf
mov
js
fbld
xor
xchg
sarl
fwait
jb
scas
cmp
and
dec
stc
pop
mov
jbe
inc
roll
loope
out
lret
inc
xchg
subb
clc
jno
mov
inc
shl
push
inc
arpl
bnd
push
and
lods
ss
jmp
mov
jns
jb
sub
rcrl
cmc
lock
out
fxch
aad
loopne
xchg
clc
dec
and
mov
out
mov
and
lock
aaa
xor
or
outsl
outsl
pop
lods
inc
nop
inc
pop
ret
rcrb
cmpsb
das
outsb
enter
out
xchg
movsb
sarl
pop
in
dec
rclb
mov
fmull
or
jno
pop
jmp
lahf
cmp
cmp
pop
rcr
pushf
imul
out
and
add
shll
dec
std
enter
xor
push
ret
xchg
inc
movsl
cmp
xchg
rcll
popf
jmp
cmpb
mov
push
push
mov
jns
int
ljmp
fstpt
lret
scas
in
scas
adc
into
fisubs
insb
mov
repz
sub
push
mov
fs
add
lahf
xor
bound
mov
push
sub
aaa
aaa
mov
mov
push
nop
adc
hlt
movups
mov
ss
out
pop
mov
dec
cmc
and
int
add
popf
xchg
sbb
mov
popf
aas
jl
jge
outsb
test
daa
sub
dec
and
sbb
adc
mov
jp
adc
scas
cli
push
lods
or
aad
dec
mov
pusha
mov
dec
mov
insl
enter
mov
ret
pop
xor
inc
cld
or
arpl
imul
pop
loopne
std
mov
lods
arpl
data16
adc
ss
in
hlt
daa
jecxz
add
or
or
and
mov
mov
xor
jg
sahf
add
enter
push
std
icebp
and
dec
sub
dec
adc
sub
add
daa
movl
stc
jae
mov
push
mov
xchg
out
xchg
les
into
js
in
sub
fincstp
mov
lods
xchg
inc
cmpsl
pop
in
fstl
xor
sbb
xor
sbb
es
testb
dec
addb
aad
popa
ljmp
mov
sbb
push
mov
lret
push
add
push
lods
movsl
push
enter
and
pop
int
in
jno
or
loopne
neg
sbb
xchg
addb
iret
ds
xchg
adc
addr16
bound
pop
call
lahf
loop
ret
ret
lret
jne
lods
xchg
mov
es
mov
push
fcmove
sub
cltd
mov
mov
adc
subl
fsub
push
sti
mov
cmpsb
pop
call
loope
pusha
or
mov
test
fisubl
xchg
pusha
fistl
leave
out
sub
or
pop
cwtl
xchg
cli
xor
mov
in
pop
out
imul
je
sbb
scas
cltd
daa
aam
adc
sub
cmc
test
push
std
loope
aas
jge
in
shll
ljmp
ljmp
sub
ret
std
ret
jle
adc
mov
movsl
or
aam
test
cmpsl
lcall
or
jns
int3
out
push
js
dec
dec
or
cmp
mov
and
stc
add
push
ret
mov
mov
xchg
orl
jmp
xchg
dec
cmp
dec
hlt
pop
cld
sarl
pop
aas
stos
adc
faddp
sbb
gs
sbb
in
test
adcb
in
addl
add
or
lock
inc
adc
mov
push
jo
mov
js
flds
jnp
inc
dec
or
xchg
pop
inc
xchg
mov
cs
bound
push
insb
xor
pop
cli
dec
ret
pop
sbbb
or
jge
or
repz
pop
scas
cmpsb
jge
lea
sub
dec
dec
mov
mov
mov
push
cmpsl
jp
xor
sbb
mov
push
push
divl
in
xchg
cwtl
data16
sub
jne
clc
jbe
inc
and
sbb
data16
cmp
mov
xchg
negb
ds
dec
cli
dec
adc
add
pop
xor
mov
pop
mov
adcl
ja
mov
loopne
mov
imul
test
push
mov
stc
push
push
lcall
fidivrl
adc
fildll
dec
sbb
pop
xchg
mov
push
cwtl
jae
jmp
mov
mov
es
sbb
jg
xchg
fldt
int
xchg
pop
xlat
call
pop
adcb
arpl
scas
xchg
and
xor
mov
imul
cmp
insl
push
pop
push
or
mov
push
push
inc
test
cmp
mov
pushf
mov
pop
cmpsb
mov
cmp
dec
pop
insl
jae
loopne
aas
xchg
into
pushf
pop
inc
sub
pop
jp
std
les
or
scas
xchg
add
mov
pop
adc
inc
les
imull
out
pop
cmpsb
add
repz
sbb
xchg
mov
xchg
mov
push
or
mov
jb
call
xor
jnp
rcll
aad
int3
dec
ja
jns
scas
imulb
data16
mov
dec
mov
mov
pop
mov
sub
pop
daa
les
dec
test
mov
in
mov
mov
fbld
jge
int
mov
mov
lea
rcll
insl
ljmp
xchg
xchg
jecxz
movl
and
pop
push
pop
addb
fwait
push
mov
sarl
shll
or
pop
repnz
or
enter
add
nop
push
xor
std
lret
cmpsl
mov
fstpl
ret
sub
and
cwtl
loop
jecxz
xchg
ds
push
push
adc
pop
pushf
mov
stos
aam
cmp
cmp
shll
cmp
loop
movsb
shll
xor
inc
in
ret
ja
js
push
lods
add
loope
push
mov
shlb
in
xor
call
mov
lret
xchg
xchg
sbb
dec
pop
cli
dec
lods
leave
pop
xchg
pop
ret
mov
add
adc
stos
inc
ljmp
or
dec
das
mov
and
loopne
push
sahf
outsl
pop
test
inc
les
movsb
pop
cmpsb
xchg
add
lahf
scas
aaa
cld
nop
pop
mov
jbe
mov
jge
mov
push
sbb
fstps
lods
pop
nop
pushf
dec
and
andl
je
gs
aam
int3
xchg
loope
sbb
pop
repz
fs
mov
mov
push
push
jmp
inc
jmp
adc
loop
fisubl
fisubl
ss
cld
sbb
lods
fdivrl
xor
jne
scas
dec
sbb
test
push
sahf
xchg
lock
iret
push
xchg
adc
int
mov
xchg
mov
enter
in
dec
mov
int
jns
test
es
roll
subb
mov
les
mov
cli
cwtl
push
lret
jne
cmp
cs
dec
pop
mov
outsl
or
jge
xchg
sbb
imul
out
add
js
jnp
add
popl
loop
sbb
xchg
insl
or
xor
je
aam
push
fsubs
in
xchg
mov
pop
mov
sbb
mov
push
xchg
inc
pop
cmpb
jge
adc
fnstsw
mov
leave
aam
sti
call
cmp
mov
rolb
push
sub
dec
ret
int
out
aad
loop
cs
mov
sub
loop
jo
out
repz
fnsave
fistl
add
scas
or
stos
pop
movsb
mov
sbb
cmp
subb
daa
pop
std
cmp
jmp
loopne
fsubl
push
fs
insl
pushl
sbb
adc
or
xor
cs
sti
shlb
fidivl
mov
xchg
mov
inc
rclb
fbld
cwtl
mov
mov
aad
js
in
sbb
ja
xor
daa
lods
xchg
cmp
ret
popf
pop
add
jne
leave
fisttps
xchg
inc
insl
inc
xchg
daa
shll
lock
push
sahf
cli
stos
ja
push
in
mov
cli
add
mov
popl
aad
testb
cli
movsl
push
jae
lret
loope
fidivs
fcoms
sti
aaa
sbb
mov
dec
cmp
cmp
mov
inc
xor
in
pop
adcl
cld
aad
xchg
jge
dec
jb
xchg
jne
adc
pushf
iret
jmp
ss
out
inc
out
nop
rolb
ljmp
and
mov
fdivrl
sbb
and
mov
xor
shlb
mov
mov
or
mov
adc
sbb
fidivs
xchg
int3
adc
xchg
sti
out
fwait
sbb
xor
aam
dec
mov
push
dec
push
or
push
sbb
iret
jo
rclb
into
dec
and
jmp
imul
mov
lcall
jne
or
leave
lahf
cmp
add
jae
xor
lcall
cltd
stos
shl
mov
cmp
push
sbb
shlb
mov
pop
xchg
jae
add
stc
imul
imul
cmp
lret
jb
jl
xchg
fwait
dec
jne
lcall
or
hlt
dec
mov
and
lahf
pushf
repz
jae
icebp
mov
xchg
push
repnz
aaa
movsb
push
je
orl
in
ds
add
adc
adcb
mov
dec
xchg
stc
cmpl
sahf
mov
lret
and
mov
mov
jns
inc
jno
test
sbb
fcomip
adc
rclb
xchg
dec
scas
add
test
dec
cld
dec
lods
inc
aad
inc
dec
xchg
js
insb
out
sar
repnz
pushf
xor
mov
lcall
cmc
sbbb
daa
andl
out
ret
xor
pusha
cmp
mov
dec
test
stos
or
nop
bound
sahf
dec
and
or
in
scas
dec
mov
adc
adc
jno
out
je
sub
xor
psubq
xor
lds
push
rcrl
lret
les
cmpl
out
push
imul
mov
cmp
and
jecxz
cwtl
insb
and
fsin
sbb
inc
aad
sub
adc
je
bound
dec
scas
adc
fdivs
mov
fdivl
ss
insb
ret
loop
shr
mov
mov
fsubr
or
add
jo
andb
dec
pop
fsub
adc
repnz
jp,pn
push
push
les
fstl
sbb
fstpl
popa
push
ja
sub
insb
add
jmp
pop
test
test
add
adc
loop
jno
dec
out
jae
sub
pop
mov
shrl
hlt
sbb
or
pop
pop
dec
cld
ror
push
mov
es
es
ret
or
cmpl
mov
jnp
lret
dec
jg
jo
je
jns
pop
sbb
into
mov
xchg
aad
stc
and
ret
repnz
push
push
or
pop
or
test
mov
inc
cltd
push
push
sub
loope
loopne
dec
das
stos
adc
add
pop
adc
lss
or
xor
mov
jle
push
mov
adc
cmp
repnz
push
jnp
cltd
call
arpl
push
fwait
inc
push
ljmp
push
out
call
out
cmp
adc
mov
mov
popa
cwtl
sub
repnz
lret
arpl
ja
inc
sub
and
sbb
push
jb
xchg
mov
mov
inc
les
push
xor
push
cmpsb
push
or
daa
in
sarb
out
hlt
mov
iret
cmc
mov
sub
lea
mov
inc
mov
xor
push
into
mov
cli
cwtl
xchg
test
xchg
lea
cmpsl
ljmp
in
or
pop
and
or
imul
fmul
sbb
pusha
mov
mov
outsl
cli
lcall
ss
in
mov
andl
cli
jnp
inc
add
icebp
mov
inc
mov
mov
jb
mov
pop
jno
mov
jecxz
popf
mov
xchg
sub
repnz
or
loopne
aaa
push
jbe
cld
xchg
pop
insl
pop
imul
mov
sub
jbe
adc
les
cltd
ljmp
ret
xorl
imul
push
cmpsl
push
inc
mov
sbb
jne
jg
mov
outsb
push
xchg
lahf
adc
outsl
cmc
bound
fcompl
sbb
imul
jnp
test
adc
xor
hlt
pop
test
shrb
dec
movsb
in
out
or
cmp
out
mov
in
stc
xchg
adc
cmc
hlt
repnz
icebp
jg
in
pop
arpl
xchg
xchg
inc
xor
insl
es
in
xchg
xchg
aad
fildll
es
in
mov
imul
imul
mov
or
lret
sbb
jne
mov
fbstp
xchg
fistpl
nop
nop
cmpl
cmpsl
push
mov
hlt
sub
and
xchg
xor
jl
mov
lods
jb
or
pop
inc
or
push
mov
je
add
daa
loope
lea
adc
sti
iret
repz
and
inc
insb
dec
mov
jl
fiadds
int3
fimuls
imull
xchg
lahf
cmp
in
stc
or
neg
movsl
push
cmc
rol
jmp
jp
push
in
add
push
fs
out
mov
loop
pop
mov
testl
cltd
jg
sub
cli
sub
pop
and
orl
jl
sub
xchg
test
pop
stos
xor
in
or
stc
fstp
lea
std
fwait
addr16
push
jno
icebp
inc
jb
mov
add
cmpsb
fcmovnb
loopne
pop
stc
mov
mov
add
cld
fiadds
cli
xor
scas
ja
fdivl
out
xor
imulb
xchg
imul
roll
fnsave
xchg
sarb
popa
or
adc
mov
hlt
lods
in
jge
enter
mov
lods
int3
mov
adc
xor
stos
shlb
mov
nop
adcl
xor
in
int
fadds
adcl
sub
scas
mov
jp
daa
sbb
sub
scas
lret
inc
imul
push
dec
jb
test
fs
xchg
jbe
cmp
daa
jg
jmp
mov
lcall
cmp
mov
xor
push
fidivs
pop
or
aam
and
jle
pop
lods
pop
mov
sbb
pop
jmp
out
mov
push
out
lret
lahf
mov
mov
jle
pop
and
push
xor
enter
adc
mov
testb
adc
pop
shll
movsl
inc
and
test
test
leave
sarb
xchg
call
iret
rolb
repnz
daa
add
pop
dec
mov
mov
add
adc
out
pop
mov
dec
aaa
std
loope
pop
repz
pop
pusha
ljmp
nop
gs
cs
xchg
cmp
imul
iret
test
clc
loop
fisttps
cmpsb
mov
inc
dec
ljmp
rorl
sbb
mov
push
loop
push
and
sbb
or
imul
sub
fnstcw
push
and
popl
icebp
test
adc
mov
xchg
adc
mov
loop
push
mov
cltd
sbb
push
idiv
dec
neg
mov
add
cmc
data16
adc
jbe
imull
lret
sarl
es
lds
or
lods
js
mov
or
loope
sbb
jnp
mov
stc
out
sub
push
fwait
sub
xchg
push
in
lret
push
pushf
pop
out
scas
or
add
shll
pushf
mov
push
push
jmp
fcomps
out
dec
mov
xchg
test
xor
xchg
ja
clc
cmp
test
sub
adc
arpl
and
into
mov
adc
pop
ja
outsl
cld
jp
mov
setno
jecxz
int
das
movsb
pop
in
xchg
or
jl
sub
inc
sahf
fs
insl
inc
pinsrw
loopne
das
fimull
nop
jno
stc
std
xchg
dec
in
mov
int3
mov
cli
lods
jns
or
or
dec
scas
shrl
pop
sti
sub
cld
push
aaa
ds
xchg
popf
negl
lods
sbbl
in
push
xor
cmp
xor
fcmovne
insl
xor
xchg
pusha
fs
adc
push
scas
pop
xchg
fwait
movsb
jo
dec
je
jns
mov
shrl
and
orb
in
insl
dec
out
cli
shll
mov
mov
xchg
addr16
popa
fbld
in
mov
ret
or
and
mov
testl
add
sbb
lcall
cmp
sub
mov
test
fldcw
adc
add
xlat
xlat
idivl
lret
cmc
adc
shll
sub
popf
lahf
xlat
mov
test
popa
repnz
lcall
mov
mov
aaa
inc
push
mov
aam
popa
and
sbb
loope
push
mov
outsl
je
add
push
daa
fsubrs
push
cltd
lret
nop
sbb
mov
jnp
test
sbb
insb
loope
decb
pushf
imull
je
dec
dec
jge
xchg
xchg
mov
mov
repz
outsb
aaa
sti
cmp
jae
mov
xchg
mov
mov
loop
push
mov
aas
jp
mov
xor
push
cld
push
mov
mov
cmp
lea
mov
pop
cmpsb
xor
scas
push
loop
push
mov
sti
cmp
daa
inc
mov
int3
sub
or
pop
out
pop
clc
insb
push
imul
add
mov
xor
pop
pop
jns
test
jae
fstl
lds
popf
mov
imul
lea
sti
pop
push
xchg
adc
or
in
dec
insb
push
imull
pushl
sbb
cs
jbe
push
in
je
pop
rcll
pop
xlat
mov
jge
mov
cld
cmc
aas
adc
call
pop
inc
cmp
xor
xchg
jp
push
testb
xor
std
popf
xchg
xchg
pop
clc
daa
fiadds
insl
outsl
dec
or
out
insl
xor
pop
xor
dec
scas
inc
pushf
mov
lcall
mov
mov
push
push
mov
and
fstps
mov
mov
imul
xchg
xchg
pop
into
leave
popl
arpl
pop
xchg
popf
mov
fldenv
sbb
ljmp
pop
adc
xchg
jmp
sub
mov
repnz
out
push
jp
nop
adc
dec
cmp
cld
dec
rcll
int
jmp
cmpsb
stos
add
push
rcrb
hlt
mov
fldt
ljmp
mov
lret
push
sti
xor
sbb
inc
popf
sub
push
arpl
imul
mov
add
jo
sarl
loop
push
imul
xchg
dec
mov
int3
cmp
rorl
adc
ja
movsl
clc
adc
mov
dec
xor
dec
mov
pop
sahf
pop
repnz
lret
jo
lea
sub
es
fdivr
and
sbb
push
mov
xor
sbb
cmp
lcall
lcall
cmc
movsb
outsl
pop
cmpsb
rcrl
mov
inc
add
push
cli
rcrl
push
out
imull
cmp
and
jl,pt
or
or
ljmp
aas
adc
add
ja
imul
cmp
inc
jge
pop
adc
pop
mov
lock
push
and
mov
enter
xorl
sti
scas
mov
loop
and
cmp
inc
add
push
call
mov
push
mov
imul
cmp
pop
fimull
dec
or
repnz
adc
in
xchg
add
lods
out
or
cmp
stos
mov
inc
jle
test
mov
mov
js
call
ret
jb
mov
sbb
std
mov
push
mov
sub
adc
jl
add
icebp
inc
mov
cmp
aad
fs
addl
loopne
xor
movsb
adc
gs
cmp
enter
add
cwtl
mov
and
aam
add
sahf
inc
add
dec
xchg
lock
shl
sub
or
lea
push
js
or
aas
xchg
cmp
push
insl
fcmovbe
loop
xor
subl
jp
mov
js
lret
idivb
dec
mov
jecxz
xor
in
jo
dec
out
add
sti
push
sbb
popf
sub
out
dec
fidivrs
mov
push
cs
stos
or
outsb
inc
seto
jg
mov
aam
add
les
pop
fidivrs
scas
mov
dec
adc
fsubrs
xor
dec
sbb
sti
jno
pop
mov
pop
orl
call
and
mov
or
test
mov
out
loopne
and
in
lcall
dec
jl
out
push
or
mov
inc
loope
dec
data16
adc
es
mov
iret
pop
insb
loope
lods
jnp
mov
sub
ret
push
enter
cmp
xchg
mov
jno
mov
push
xchg
mov
jb
dec
imul
adc
mov
cmpb
dec
subb
movsl
push
mov
jne
insb
mov
dec
jb
mov
cwtl
or
sahf
mov
and
pop
mov
sub
les
inc
loopne,pn
add
xlat
es
addb
push
das
dec
jp
sub
cmp
mov
out
cmpsl
mov
jg
adc
adc
lahf
sbb
inc
sub
jle
stos
jmp
fcoml
sbbl
lods
lods
lock
dec
push
aaa
fnstcw
add
and
xor
in
sbb
sub
sbb
fldl
adc
push
dec
dec
or
dec
adc
in
ja
and
cwtl
movsb
cmp
sub
test
push
mov
arpl
lock
inc
sahf
or
mov
loope
jnp
pop
push
cmpsb
mov
into
inc
cltd
pop
inc
pop
aam
mov
adc
movsl
pop
pop
xor
inc
push
jp
adc
inc
dec
outsl
sahf
xchg
es
and
int3
adc
mov
insl
call
inc
sub
push
pushf
out
leave
xlat
mov
clc
lods
mov
out
xor
sahf
xchg
or
popf
sub
jecxz
sub
push
icebp
mov
sbb
nop
ljmp
jae
xorb
and
enter
pop
mov
cwtl
push
push
repnz
lds
call
cmp
cmp
test
arpl
inc
push
push
mov
add
jae
cmp
test
and
mov
and
cmpsl
and
popa
fcompl
leave
scas
arpl
out
pop
enter
movsb
push
in
jle
sti
mov
jnp
out
rol
clc
mov
in
mov
cld
mov
out
pop
mov
cmp
inc
jmp
repz
lret
mov
shll
jle
outsl
sar
xor
sbb
mov
popf
dec
sub
mov
rcrl
repnz
out
fiaddl
pop
jl
push
scas
mov
jb
repz
hlt
sahf
mov
fstpl
jo
sub
scas
add
movsb
xchg
test
test
pop
pushf
xor
roll
test
mov
mov
cld
jo
jecxz
push
sahf
inc
dec
push
sbb
ja
outsl
lret
add
in
xchg
sub
pop
sbb
inc
scas
rol
add
es
push
repnz
xchg
dec
jg
lods
lret
and
add
cltd
outsb
clc
addr16
out
push
jnp
aaa
push
fcomp
sub
adc
mov
inc
int3
js
sub
xor
lods
adc
cmp
lods
or
and
push
jmp
popa
dec
insl
cmp
or
movsl
ret
femms
jne
jle
insb
sbb
scas
mov
sub
leave
pop
jbe
mov
sti
scas
or
lret
sbb
jae
jo
mov
lahf
push
movsl
xchg
aad
ret
pop
inc
in
mov
lret
stos
jle
paddb
or
push
jo
and
test
icebp
inc
fildl
cmp
ret
nop
sti
push
cmp
adc
dec
xlat
xlat
mov
mov
test
pushl
js
aaa
xchg
jno
sub
std
lret
pop
mov
add
jp
adc
mov
lret
test
push
pop
push
inc
xor
pusha
mov
mov
repz
ljmp
iret
insb
xor
pop
xchg
iret
jmp
in
lods
inc
hlt
push
stos
iret
push
dec
movsl
leave
inc
adc
jp
iret
add
lea
dec
mov
test
or
adc
aam
cltd
or
sub
inc
dec
in
jae
push
jp
sbb
push
cmp
jnp
inc
pop
mov
stos
dec
adcb
pop
imul
loop
out
mov
pusha
cwtl
cs
outsl
pop
xor
jecxz
xchg
inc
cld
out
xchg
fbld
rorl
leave
mov
aas
outsl
push
or
fcmovnb
idivl
ljmp
shll
dec
out
mov
pop
scas
xor
dec
jg
fcomps
dec
cmp
mov
mov
ja
push
push
pop
sti
pop
jmp
movsl
push
jnp
data16
rorl
mov
adc
dec
pop
inc
ja
push
aaa
cmp
mov
stos
iret
enter
pop
aas
add
or
call
fcoms
cmp
fldcw
mov
lahf
movsb
sub
jb
in
mov
ret
pop
and
pushf
add
add
sahf
mov
or
test
out
stos
or
xchg
mov
test
in
or
adc
cltd
sahf
adc
sbb
or
test
btsl
xor
or
xchg
fucomip
xor
xchg
dec
adc
testl
add
sbb
ds
leave
adc
in
movsb
lret
mov
fsubrs
pop
cmp
pop
lcall
inc
sub
and
outsb
data16
scas
inc
fwait
cmpsl
movsb
sbb
fmull
cmc
int3
jp
into
xor
lahf
into
sub
insl
and
test
sub
dec
cld
fistpll
fs
icebp
mov
xlat
or
add
inc
fsubl
push
mov
repnz
mov
jle
stos
shlb
shll
pop
mov
bound
sbb
pop
xor
dec
movsl
pop
push
cmp
xchg
pop
js
in
xchg
inc
dec
mov
mov
ljmp
icebp
xor
mov
fdiv
mov
and
lock
push
notl
mov
test
adc
or
jp
xchg
ret
inc
ret
outsb
pop
xor
jne
stos
push
fsub
rorb
mov
fdivrl
das
sahf
xchg
insl
push
lret
fisttpl
adc
xor
xlat
test
test
aad
push
stc
cmpsb
fnstsw
stc
adc
stc
jbe
cmp
jo
sub
xchg
mov
scas
sbbl
lret
add
cld
sbb
aad
pop
pop
sub
roll
lods
pusha
and
dec
jle
cmp
cmp
push
sub
mov
nop
mov
movq
scas
pusha
mov
xchg
jae
arpl
jg
xor
jne
pushl
in
cmc
sub
mov
movsb
or
mov
nop
xor
mov
or
sub
mov
mov
mov
push
add
jne
imul
xchg
fwait
mov
cmp
into
xor
sbb
mov
pushl
es
aaa
lret
dec
mov
mulb
cmp
xchg
pushf
aas
repnz
sub
mov
mov
mov
orb
data16
xchg
mov
rcl
xchg
xchg
scas
pop
adcl
cmp
xchg
stc
or
addr16
and
js
aad
mov
sub
dec
push
movsb
movsb
mulb
adc
mov
inc
enter
lods
and
mov
ret
mov
adc
das
popf
mov
cmpsb
mov
dec
fmuls
dec
pop
mov
ret
jbe
cmp
das
adc
loop
movsb
ss
aaa
outsl
shlb
pusha
mov
and
mov
sbb
mov
mov
pop
mov
push
in
push
fnstcw
and
and
xchg
push
push
in
shrl
pop
test
int
add
arpl
mov
pop
decl
cmp
mov
adcl
jle
fnsave
rolb
mov
cmp
or
into
idivl
fwait
sbb
inc
subb
pop
out
mov
fistl
icebp
adc
loope
jbe
rorl
daa
push
fcompl
int
in
mov
sbbb
es
aas
sbb
shrl
pop
je
xchg
xor
cmp
cld
rcl
ds
in
fsts
cli
mov
es
lods
and
ja
lahf
push
inc
ffree
inc
dec
das
xchg
fisubs
pop
test
shrl
in
insb
fstpl
jmp
cmp
sbb
mov
popa
call
cmp
jecxz
pop
cmp
ficomps
push
div
loopne
xor
loope
es
shlb
and
decl
orb
ret
insl
repnz
pop
jo
xor
inc
inc
sub
pushf
test
inc
push
out
fwait
shr
call
dec
dec
xchg
and
rcl
mov
stc
adc
and
or
loop
adc
out
jmp
in
or
push
push
std
addr16
loope
dec
inc
cmpsl
push
jno
insl
dec
fsubs
xchg
or
out
cmp
inc
cs
push
xchg
xor
push
repnz
xchg
cli
mov
and
mov
cs
xor
and
fdivrl
mov
push
shld
pop
out
xorl
movsl
popf
faddl
sbb
or
xchg
ljmp
jnp
cmp
pop
add
push
and
cmpsb
jl
and
add
clc
mov
pop
push
mov
mov
pushf
imul
push
mov
add
mov
rcr
imul
mov
xor
lock
pop
mov
ss
or
mov
enter
xchg
mov
add
shrb
imul
add
call
jns
dec
addb
cmp
mov
cmpsb
faddl
adc
and
jl
jbe
pop
pop
lcall
cmpsl
fnsave
xchg
jne
pop
ljmp
out
mov
push
in
push
inc
jp
cwtl
mov
js
mov
mov
ja
movsb
lret
mov
fiadds
sahf
popf
ret
push
pop
lret
lret
jnp
iret
dec
mov
pop
ds
insb
push
mov
int3
clc
popw
push
jecxz
push
ss
gs
sar
aaa
cmpsw
adc
lahf
add
inc
sub
loope
testl
pop
into
std
xchg
adc
mov
movsl
jecxz
das
shll
push
pop
push
dec
cltd
out
cmpsb
push
jbe
push
dec
add
push
jmp
mov
ljmp
xchg
lret
sti
mov
fldl
std
push
out
out
fwait
xchg
mov
inc
xor
cmp
lock
in
movsl
adc
cmp
lret
add
add
stc
cmp
sub
mov
dec
icebp
and
ret
out
out
pop
xchg
inc
stc
xchg
inc
xlat
leave
dec
and
insb
mov
call
movsl
add
lret
mov
cmp
in
mov
dec
aam
mov
sub
insb
shlb
imul
mov
adc
fsubs
mov
xlat
xchg
insb
pop
mov
dec
ljmp
mov
lret
fstps
cmc
jg
das
test
mov
pop
shlb
in
inc
inc
movsb
push
ror
movsl
xchg
jbe
in
aam
jge
fadd
fsts
out
es
mov
daa
add
cmp
shl
test
bound
loop
filds
xor
dec
addl
das
ljmp
jno
test
pop
mov
mov
ret
lret
cmpsl
pop
pushf
cmp
xor
push
inc
subl
cmp
test
in
es
ret
out
out
xor
stc
push
and
jg
popa
xchg
jbe
mov
jp
jle
loope
jnp
add
mov
imul
cltd
xor
push
loop
data16
lret
xor
in
add
sbb
pop
cmpb
jno
add
inc
cmpsb
into
in
push
gs
mov
cwtl
push
push
iret
cmp
ret
popf
adc
mov
dec
je
and
addb
fnstcw
jno
jl
or
mov
push
ss
les
mov
aam
sbb
adc
mov
mov
add
aaa
jle
movsl
cmp
xor
out
inc
insb
rolb
cmpsl
stc
test
and
or
push
cmp
sub
sbb
lret
arpl
pop
jg
cmp
mov
mov
mov
push
inc
add
jp
fadd
pop
sub
sbbl
or
adc
xchg
loop
data16
in
xor
lret
repz
fldenv
mov
loope
adc
cltd
in
xor
ja
gs
adc
mov
out
call
sub
push
add
jp
jno
cmc
cli
ja
nop
fiadds
jecxz
pushl
in
jp
xor
ds
data16
or
mov
iret
lods
in
add
push
jo
adc
adcl
adc
sub
sbbl
inc
xor
dec
orb
fdivr
inc
test
xchg
hlt
adc
add
add
xor
mov
or
jnp
add
pushl
fistpl
aad
int3
test
xchg
shr
clc
and
sar
sub
xor
xchg
pop
and
ss
jbe
bound
mov
sbb
sarl
push
push
jle
cwtl
sbb
xor
cmp
cltd
nop
addl
stc
xchg
or
std
dec
pop
add
lcall
jle
cmp
int3
fistl
inc
sub
mov
iret
jno
sbb
sub
add
mov
insl
push
ss
cmp
sar
jns
fs
lds
xchg
mov
or
sub
es
push
push
push
idivl
add
mov
dec
mov
jecxz
sti
inc
push
push
and
movsl
outsl
divl
jb
dec
test
xchg
push
fldenv
scas
out
orl
xchg
cltd
mov
in
shll
ret
mov
cmp
divb
adc
out
jge
sub
add
es
test
in
sbb
push
out
adc
push
divb
ljmp
jp
std
or
or
insb
adc
dec
xchg
add
mov
mov
cmp
popf
fidivrs
mov
out
movsl
lea
pop
mov
outsb
cmp
ret
mov
push
mov
mov
outsl
testb
rclb
inc
push
lods
jge
pushl
xchg
jo
mov
in
adc
or
mov
sub
icebp
xchg
mov
and
ret
push
or
jns
fstpt
fstl
sbb
push
sub
or
mov
sbb
mov
movsb
bound
push
and
pop
das
jle
movl
push
push
sub
lods
fs
mov
fists
dec
inc
cwtl
int3
lods
out
add
mov
out
shl
gs
sahf
jns
jns
stos
lret
cmp
ss
xor
adc
clc
ror
enter
popf
dec
jle
or
imulb
sarb
xor
push
inc
and
add
mov
bound
in
int3
call
gs
loopne
nop
in
mov
jmp
div
int3
and
adc
fmuls
test
mov
dec
icebp
loop
inc
fnstsw
xchg
inc
pop
ret
int3
stos
ret
mov
xor
add
movsl
arpl
frstor
jg
shll
ja
push
sbbl
dec
xchg
in
inc
lock
mov
and
repnz
loope
andb
mov
int
int
adc
divl
sub
std
cmp
clc
inc
ds
jl
fs
dec
push
lods
dec
adc
mov
sub
jp
mov
jns
xor
mov
repnz
pop
inc
clc
dec
test
push
add
fidivrl
push
leave
xor
mov
jo
fstpl
inc
aad
ret
mov
sub
jle
clc
mov
roll
int3
movsb
loop
xchg
in
call
inc
loope
std
dec
lret
add
mov
jmp
mov
dec
loope
xorl
xchg
xchg
fdivs
fsub
pop
pop
ss
cmpsl
mov
mov
clc
movsb
cmp
push
testl
ja
imul
jbe
mov
mov
lret
popa
pop
or
jno
cld
sub
push
popf
cwtl
push
jg
ficoml
cli
sub
mov
jo
xchg
cli
mov
xchg
pushf
cld
inc
adc
cmp
lret
fbstp
sti
sub
loopne
mov
js
lea
dec
xor
je
or
addr16
xchg
sarl
pop
or
insl
loop
pop
insb
push
xchg
lods
add
add
or
push
dec
movb
fisttps
insb
sub
inc
shr
xchg
sbb
mov
mov
jle
ss
lods
lods
data16
dec
dec
insl
pop
adc
cmpsl
cltd
mov
hlt
hlt
lret
lods
push
sbb
mov
xchg
fcompl
or
mov
lret
icebp
loopne
and
lea
pop
sub
popf
or
decb
addl
xchg
jae
movsb
shlb
sub
mov
xchg
into
dec
fbstp
nop
mov
fnstsw
ficomps
cmp
cli
dec
cwtl
dec
or
sub
push
mov
out
sbb
push
aad
sbb
into
inc
insl
inc
cmp
mov
aaa
dec
lea
test
in
xor
outsl
cmpsl
jg
rol
xor
jo
hlt
cmpb
or
int
push
mov
mov
lds
mov
mov
inc
mov
xchg
push
dec
xor
popa
movsl
out
ljmp
mov
jmp
ror
popa
mov
or
shlb
es
and
int
out
mov
in
rolb
ret
mov
filds
les
cmp
mov
cmpb
jl
inc
scas
stos
lods
pop
push
mov
stos
flds
lea
outsb
inc
mov
jnp
gs
ja
sbb
aad
outsb
xorl
loop
test
idivl
mov
add
test
adc
and
daa
lods
dec
push
cmp
fdivrl
clc
xchg
push
inc
leave
mov
das
dec
scas
adc
jg,pn
shr
mov
jmp
in
add
fcoml
sub
cmp
insl
mov
dec
insl
loope
jae
inc
xchg
xchg
fsubrs
and
pop
test
adc
sbb
icebp
push
dec
sti
or
mov
scas
iret
sti
dec
ret
rcl
add
imul
fwait
std
add
push
jmp
test
fcmovnbe
movsb
mov
or
sub
sub
push
push
cmp
xor
out
jmp
sub
xchg
push
mov
mov
pop
pop
xor
xrelease
mov
pusha
lret
lds
cmc
jno
inc
inc
out
sbb
ret
lret
les
add
enter
mov
subl
in
inc
mov
add
cmp
or
cmp
mov
adc
lret
push
or
testb
sub
rcl
ss
jle
pop
sub
adc
push
mov
xchg
das
or
add
out
pop
sub
adc
scas
push
dec
lret
sbb
mov
in
xchg
cmp
shll
aam
xchg
in
jp
add
insb
rclb
mov
sar
jp
loop
in
rol
cld
insl
aad
mov
fstpt
into
mov
lret
fs
pop
and
bound
dec
in
shl
shlb
mov
fwait
xor
dec
add
lea
mov
cli
jle
lds
cmc
pop
jp
and
sbb
cmpsl
sub
dec
cmp
in
loope
outsl
mov
fistps
xchg
pop
jmp
mov
jb
jmp
xchg
inc
jnp
in
xor
mov
mov
cmp
mov
push
nop
jns
pop
jge
out
jnp
xor
push
std
cmpsb
mov
push
stos
cli
sbb
inc
stos
adc
ds
lcall
mov
ds
jecxz
sub
pop
popf
sbb
pushf
rcrb
out
cmp
repz
add
adc
inc
ret
mov
out
and
xor
mov
pop
sub
mov
xchg
mov
lret
lret
dec
mov
lahf
mov
and
cmp
push
dec
mov
adcl
and
fmulp
adcl
mov
std
add
push
add
jno
sti
push
pop
xor
inc
mov
pop
push
sbb
cmpsb
test
mov
dec
push
test
fs
push
pop
pop
fiadds
adc
shlb
xor
cmc
xor
adcl
cmpsb
fistl
lock
cmp
aam
push
popf
insl
lret
mov
xchg
lods
jae
jp
negl
call
jno
test
pop
add
outsl
popl
mov
cwtl
adc
repz
es
sbb
shl
mov
sbb
adc
or
sub
aaa
jp
push
xchg
push
js
inc
xchg
cld
sbb
lods
call
mov
adc
fldl
sub
les
inc
rcrl
ljmp
nop
popa
in
lahf
aaa
jl
fidivl
push
in
scas
xchg
jb
aad
les
dec
mov
scas
addl
ret
int3
test
add
dec
push
adc
inc
bound
sbb
mov
inc
push
repz
mov
je
and
lahf
mov
pop
xchg
flds
jns
in
xchg
pop
sbb
sub
xchg
jno
mov
cmp
push
lods
pop
pop
fcomp
std
push
pusha
or
in
inc
sub
in
dec
push
repz
faddl
sub
and
add
cli
dec
test
cmp
inc
lds
sbb
sti
jg
ffree
pop
adcl
inc
shll
mov
mov
sbb
stos
adc
push
pop
push
pop
sbb
sbb
add
lods
aaa
lret
std
pop
lods
into
nop
xor
mov
inc
imul
sbb
or
test
adc
inc
mov
aad
filds
aas
ret
add
mov
ljmp
in
aad
les
push
clc
push
mov
sbbb
sbb
fisttpl
jae
stos
lahf
mov
mov
mov
xorb
inc
repnz
in
loop
xchg
add
jae
hlt
out
outsb
sub
dec
or
mov
adc
jecxz
out
data16
sub
fwait
mov
bound
out
stos
in
aas
sub
push
add
es
adc
sub
mov
fcompl
push
adc
aas
mov
jmp
push
ljmp
in
lds
adc
cs
fdivrs
fnstsw
xchg
cmovb
cwtl
pop
push
int3
mov
xorl
lea
add
push
xchg
data16
cmp
ret
js
fistpl
ret
les
int3
out
jnp
pop
lods
movsb
rclb
cmp
stc
rcrl
lret
in
jae
icebp
lret
pop
popf
cmp
dec
jb
mov
mov
into
cmc
and
xor
jns
sbb
cld
mov
cmp
mov
shll
mov
or
outsb
jmp
outsl
push
mov
mov
mov
pop
fsubl
pop
cmc
ss
rcr
adc
dec
in
pop
mov
mov
mov
mov
inc
out
sbb
jp
xor
and
ljmp
int
fxch
pop
inc
sub
ret
fnstenv
mov
into
push
out
inc
addr16
loop
or
mov
mov
cmp
push
push
shr
inc
out
in
pop
push
fucomip
inc
in
or
jecxz
mov
fsubrs
add
leave
in
in
jbe
scas
sbb
cmp
jae
or
push
cmpsl
xor
lcall
fwait
mov
mov
adc
outsb
mov
clc
mov
adc
fwait
cmp
push
xor
out
push
arpl
out
or
push
mov
mov
cltd
ret
mov
cmc
mov
push
dec
push
lea
nop
adc
out
xor
es
scas
jo
xchg
sbbl
loope
mov
loope
mov
sahf
sbb
fstpl
sub
mov
cli
inc
popa
jmp
das
outsb
repz
or
in
adcl
xor
mov
xor
in
cmpl
rclb
push
jo
push
mov
sub
fstl
sub
je
fsubp
fsubr
mov
adc
cmpsb
jae
lret
mov
push
and
inc
stos
jl
das
js
ss
in
mov
add
mov
push
adc
sbb
in
lock
push
addr16
addb
int
icebp
mov
pusha
or
xor
push
mov
push
xor
mov
jb
nop
jb
cwtl
sub
mov
out
push
dec
fcomi
scas
cld
mov
sbb
in
mov
les
or
inc
sub
jnp
jp,pn
xlat
out
mov
out
pushf
xchg
cmpsl
sub
xor
cmc
cmc
sub
aaa
jge
fimull
cmpsl
cltd
sahf
leave
push
sbb
loope
movsl
popa
xchg
rcll
dec
pop
adc
push
push
mov
lret
in
adc
loope
cmpsl
mov
cmp
add
std
stos
fdivrs
xchg
add
cld
inc
das
and
adc
xchg
repnz
xchg
jl
aas
xor
jg
and
notl
push
lret
outsl
jmp
mov
out
mov
or
aad
mov
lret
pushf
mov
and
in
dec
mov
mov
cmpsl
dec
movl
or
jb
fidivrl
test
mov
imul
mov
sbb
add
mov
dec
xor
roll
ja
dec
mov
cmp
inc
enter
mov
out
fsubrl
stc
adc
mov
jb
adc
xchg
test
mov
js
adc
call
push
sbb
inc
rol
fs
jae
pop
lea
inc
pmuludq
add
sub
mov
or
and
sahf
push
insl
shr
mov
popf
xchg
and
mov
xchg
imul
nop
xlat
dec
dec
jmp
pop
mov
sbb
xchg
sti
mov
ljmp
inc
or
out
aam
outsl
test
fidivrl
pop
push
push
jecxz
add
dec
ss
inc
test
mov
push
dec
lahf
rolb
leave
cmc
xchg
insb
cmp
mov
popf
pop
divb
jge
mov
outsb
out
inc
stos
jb
push
xor
out
push
sub
xchg
outsb
push
fsts
mov
push
repz
aas
subb
sbb
sbb
pand
xchg
iret
rdtsc
push
or
and
out
xor
sbb
jns
inc
and
rolb
repz
loop
push
je
mov
cltd
leave
shlb
outsl
cmpl
push
out
imul
dec
fstp
lods
push
std
cs
xor
xchg
in
xchg
std
lea
push
mov
and
push
imul
rcll
fwait
lock
sbb
repz
sbb
xorb
mov
sbb
dec
lret
dec
cmc
clc
lret
inc
fsub
jmp
daa
dec
ja
in
pushf
loop
jle
nop
pop
test
es
push
sub
mov
push
add
addr16
push
test
ja
fdivrl
or
shlb
jbe
pop
pop
jb
sub
xor
mov
dec
jp
inc
mov
pop
mov
mov
inc
mov
xor
lock
outsl
pop
adc
mov
dec
fucom
fwait
adc
sbb
jo
mov
int
out
lret
data16
push
es
mov
push
fisttpl
out
jb
pop
dec
pop
add
sbb
pusha
jecxz
sub
add
ljmp
cmpsb
push
scas
lods
cmp
btc
mov
pop
in
and
sub
jnp
outsb
pop
sub
mov
jle
scas
sti
adc
out
xlat
pushf
pusha
mulb
popf
bound
iret
pop
mov
orb
movsb
or
push
add
push
sub
shrb
jne
push
dec
clc
jns
fidivl
fistps
and
add
das
fisttpll
jge
push
mov
sar
std
popa
inc
xchg
add
pushf
shrb
fdivrl
out
into
add
cs
mov
nop
outsl
mov
call
fwait
jle
in
mov
bound
shl
enter
push
jge
out
fwait
pop
in
clc
xchg
pop
fsubrl
push
pop
and
mov
cmp
xchg
lcall
dec
je
movsb
lahf
movsb
add
cmp
fadds
xchg
cmpsb
lea
pop
pop
sub
inc
sub
mov
mov
shrl
pop
mov
lock
and
loop
lcall
dec
cld
jns
das
enter
pop
cmp
push
xor
out
or
out
mov
icebp
stos
movsl
and
into
xchg
test
push
stos
les
inc
aas
sbb
push
xchg
scas
lds
leave
mov
push
jl
cmpsl
rorb
push
push
adc
sbb
xor
push
xor
nop
fldt
ror
imul
idiv
mov
enter
pop
xor
mov
xchg
push
leave
mov
dec
pusha
push
orb
lea
inc
xlat
and
add
js
cltd
mov
and
mov
adc
fldt
rolb
frstor
push
cmp
int
jo
cld
cmp
pushf
push
imul
jns
mov
addb
cmp
call
cmp
pop
outsb
mov
xchg
jmp
sub
lock
sbb
lea
dec
adc
pop
sbb
push
shl
jecxz
int
xchg
sub
sahf
mov
add
dec
insl
ss
repz
sbb
in
sub
ret
xchg
pop
xor
gs
js
sub
fldl
or
addr16
xor
test
cmp
into
jge
daa
adc
xor
arpl
ss
in
jecxz
mov
loope
mov
lahf
xchg
rclb
js
mov
mov
or
jnp
mov
ret
push
pop
sbb
rsm
xlat
aas
xor
dec
add
in
ret
in
or
ficoms
and
movsb
adc
test
cmp
in
out
push
call
jo
jns
cmp
ret
xor
mov
insb
mov
mov
scas
inc
movsl
insl
ret
subb
scas
insl
imull
out
xchg
adc
cmp
cltd
adc
push
out
push
mov
sbb
mov
outsl
mov
pop
push
mov
dec
pop
cmpb
cmp
xor
add
xor
arpl
bound
lods
mov
out
mov
push
aas
cmp
in
popa
xor
inc
fnstenv
pop
dec
dec
or
lcall
xchg
aaa
leave
into
or
sahf
ljmp
jg
inc
and
xor
pop
icebp
sahf
sahf
pop
pop
push
loope
and
pop
mov
cmp
hlt
mov
push
push
fistl
mov
adc
sbb
loopne
test
fwait
inc
mov
pop
jno
inc
xchg
push
sub
pop
mov
mov
jb
add
mov
notb
jae
jl
lea
sahf
leave
sbb
sub
push
and
mov
ficompl
movsb
cmp
popf
pcmpgtd
push
mov
pop
xor
xor
xor
leave
xchg
mov
jge
mov
sub
ss
sahf
jecxz
dec
push
lret
mov
adc
in
aad
shl
pop
lret
and
dec
hlt
sub
mov
sub
mov
dec
mov
imulb
out
and
in
jo
sub
fcompl
xchg
loop
inc
add
pop
inc
mov
jnp
inc
dec
es
pop
mov
loope
pop
push
jg
lret
push
pop
ljmp
fs
lods
add
jnp
cwtl
mov
int
mov
pop
test
adc
pop
repz
das
test
mul
int
dec
int
lea
inc
xor
jmp
mov
sbb
adc
mov
out
cwtl
mov
int
dec
divb
imul
stos
push
fadds
inc
add
cmp
mov
sbb
jp
adc
dec
xor
add
mov
pop
fnstcw
in
xchg
jle
movsb
push
bound
or
gs
fisubs
ret
sbb
or
sbb
pop
adc
pop
jg
xchg
mov
mov
mov
xor
int3
mov
mov
pop
and
fs
cmc
inc
cli
push
jg
lods
cmp
outsl
push
fsubr
inc
cmpsl
or
int
lahf
ljmp
xlat
lods
lock
xchg
sub
ljmp
ss
mov
or
leave
jne
addb
popf
sbb
cwtl
or
daa
outsb
pop
cmp
jb
and
jp
test
cmp
ds
loop
negl
repnz
fisubrl
pop
xorl
insl
bound
add
stos
lahf
dec
int
cmp
pop
mov
and
rcrb
push
ret
stos
cmp
and
pop
mov
sbb
shrb
mov
and
inc
mov
or
mov
rcrb
adcb
in
or
jbe
inc
ret
imul
inc
adc
pop
xor
pop
fsubl
fildll
xchg
nop
aaa
jbe
lret
mov
pop
adc
cmp
push
mov
into
rcll
rcll
das
aaa
leave
aad
mov
into
sub
movl
jnp
xchg
sahf
lret
adc
lock
push
xor
rorl
arpl
dec
jns
lods
es
stos
mov
sbb
jge
cmp
jg
jbe
repz
mov
and
mov
aas
in
cmp
jmp
and
jge
andl
dec
sub
jg
int3
fldcw
repnz
stc
sbb
or
xchg
pop
push
out
mov
jecxz
sarb
xor
mov
ret
outsb
sub
jle
pop
inc
scas
or
lods
aam
mov
popf
pusha
lods
in
lret
lret
sub
xchg
aaa
mov
add
mov
mov
sbb
jnp
testl
mov
push
cmpsb
jns
ds
insl
add
lcall
push
das
xchg
pop
imul
xlat
xchg
push
out
xor
add
dec
jg
push
lcall
jl
jnp
loope
cmp
or
movsl
sti
aam
add
sub
push
sbb
test
sbb
imul
push
out
jae
and
add
ret
decb
fstpl
inc
jl
mov
dec
sbb
std
xlat
cmp
jle
icebp
fwait
out
mov
inc
mov
fnsave
test
aas
or
or
fwait
mov
insl
mov
and
cmp
push
cmpsl
cmp
out
adc
jle
pusha
adc
and
mov
push
push
jne
add
mov
jp
xchg
lods
inc
or
xor
inc
pop
mov
scas
dec
cmpsl
sub
fldcw
push
push
push
clc
sbb
xchg
adc
adc
mov
push
lods
mov
in
lahf
dec
sub
cmp
fsubrl
adc
pop
jecxz
fcomip
pop
jb
push
or
scas
cltd
mov
imulb
bound
minps
sub
in
push
repz
test
jns
mov
mov
loop
dec
lret
imul
mov
mov
pop
shr
lods
scas
lcall
and
movsb
add
mov
int3
sub
mov
pusha
jnp
mov
jl
addr16
dec
add
push
mov
or
adc
inc
dec
hlt
jg
das
cmp
subl
lret
inc
fildl
daa
sub
adc
jmp
sbb
cmpb
lret
adc
and
std
pop
ficoms
mov
inc
loop
pop
in
stc
inc
adc
mov
xor
cltd
push
std
add
cmp
arpl
mov
pushf
lret
lret
out
sub
xor
dec
pushf
imul
loope
fiadds
lock
dec
int3
sbb
and
dec
pop
shll
push
outsb
imul
out
inc
ljmp
cld
int3
push
popf
xchg
lea
loope
cld
imulb
jge
or
add
sub
mov
loopne
into
or
push
push
fbstp
outsl
insb
insb
shlb
test
dec
adc
loop
movsl
mov
inc
test
fwait
jl
mov
xor
jne
pop
jg
loopne
testl
jns
stos
aad
jb
xor
ret
adc
mov
pop
xor
lahf
stos
add
adc
lcall
xchg
test
jle
insl
sub
xorb
jnp
pop
movsb
ss
cld
cs
add
lock
cmpl
jg
addr16
rcll
or
cltd
sub
adc
rclb
imul
push
aam
arpl
adc
xor
shl
ljmp
mov
shlb
push
sti
xchg
es
movsl
sub
sbb
xor
or
add
adc
adc
movsb
xor
xchg
sub
pop
aam
js
cmp
movsb
jge
gs
pop
stos
mov
jae
push
mov
in
in
xor
fisttpll
and
mov
sub
inc
mov
aas
lret
lret
or
outsb
rorb
sbb
push
mov
mov
sbb
push
xchg
test
jecxz
scas
sub
sub
xchg
js
cmp
out
sbb
xchg
outsl
push
xchg
or
lds
mov
jo
int3
sti
clc
and
popa
loope
cs
xchg
rclb
fldenv
movsl
nop
and
adc
push
add
ret
lahf
adc
xor
mov
sbb
and
and
mov
mov
jo
jmp
daa
fsubrl
pusha
jo
xor
push
mov
mov
aad
adc
pusha
fisubrs
dec
iret
inc
or
dec
cmp
jmp
shrb
in
frstor
jge
push
cld
jmp
xchg
test
mov
mov
push
dec
pop
sar
andl
ret
cmpsl
sti
negl
dec
adc
xor
in
jno
pushf
inc
ljmp
sub
add
mov
movsb
int3
jge
dec
out
adc
pop
test
pop
cmp
mov
adc
inc
push
inc
gs
add
mov
push
cmp
mov
push
mov
mov
jo
xchg
add
mov
mov
mov
xorl
dec
push
sti
sbb
je
xchg
lahf
xor
or
stc
lahf
add
stos
andb
cmp
fld
push
xchg
enter
andb
push
or
adc
mov
jb
addr16
mov
cmpb
jge
lods
xor
sti
dec
ret
pop
mov
adc
pop
popf
inc
repnz
insl
int
rcll
ss
loopne
fcmovne
inc
add
add
sti
sub
lods
fisubl
sbb
push
pop
push
sbb
mov
cvtpi2ps
push
and
shld
addl
pop
arpl
and
mov
fimuls
aad
dec
mov
pop
les
arpl
sbb
sub
sub
push
aaa
icebp
and
mov
mov
hlt
cs
xchg
sbb
daa
mov
or
jmp
pop
mov
lret
mov
in
mov
sub
movsb
cmp
fadd
nop
inc
jecxz
shlb
je
and
fiadds
fiaddl
popf
jae
pop
pop
shlb
or
push
add
or
shrb
icebp
jb
cmp
jp
lock
lcall
jbe
push
in
daa
xlat
pop
shl
add
or
lret
pop
sub
std
int
mov
stos
lea
fidivl
mov
jge
aaa
pop
sub
xchg
cmpsb
rorl
xchg
dec
fcomps
shl
dec
dec
inc
pop
sub
lea
add
or
shll
cmp
shlb
adc
pop
dec
cli
xchg
push
push
sub
add
sbb
jbe
idiv
ja
mov
imul
ret
lret
sahf
mov
fcoms
imul
push
and
sub
call
cmpsl
fwait
jbe
jnp
mov
jae
xchg
xlat
jno
sbb
les
sarb
sbb
and
inc
pop
adc
ljmp
mov
and
cmp
cmp
mov
or
pop
jmp
mov
and
sub
push
inc
in
dec
adc
cmp
sub
inc
ret
mov
mov
mov
inc
aam
add
jecxz
add
popa
lahf
and
sub
aaa
cmpsl
mov
xor
scas
in
jo
push
cmp
cmc
push
cmpsl
push
imul
sub
loopne
test
arpl
outsl
or
xchg
sbb
jb
out
aaa
nop
lret
push
rcrl
jmp
sbb
cli
push
leave
xor
loopne
pop
push
adc
fdivrl
cmpsl
add
xchg
xchg
mov
adc
inc
dec
sbb
sub
cmpsl
in
adc
lret
push
ret
je
push
enter
js
mov
push
cs
pop
push
cmp
pop
ljmp
stos
push
cld
jbe
nop
stos
movsl
adc
jns
fs
pop
inc
mov
push
push
push
mov
int3
dec
je
into
push
push
dec
sub
add
mov
adc
outsl
mov
jb
add
lods
testl
les
cmc
jp
jmp
inc
xor
mov
mov
mov
mov
dec
into
xchg
mov
loop
imul
in
rcrl
mov
clc
xor
mov
sbb
ss
sbb
inc
movsb
aam
popa
dec
js
cmpsb
dec
push
pushf
cltd
lcall
sti
cmpsb
test
mov
scas
adc
aaa
in
sbb
out
fisubrl
arpl
lret
cmp
ret
fwait
inc
add
inc
jno
cmp
push
jl
outsb
rcll
sbb
sbb
divl
push
sbb
sub
rcr
cwtl
jo
cmc
test
dec
in
daa
mov
subb
aaa
add
push
xchg
loopne
mov
jmp
iret
jb
repnz
or
push
push
push
sub
ret
repz
cmc
xchg
lea
dec
loopne
push
cltd
shll
lcall
adc
mov
mov
xor
js
repz
lods
cmc
orl
push
adc
out
sbb
sbb
pop
pusha
lret
insb
or
mov
mov
rolb
jno
pop
mov
inc
cwtl
cmp
cmp
sbb
aam
inc
mov
xchg
leave
cmp
jo
sbb
adc
xchg
movsb
sarl
mov
cmc
sbb
fidivrl
jecxz
jecxz
movsl
add
ljmp
fcmovnb
xchg
pushf
nop
fisubs
cmp
ret
pop
sti
pop
gs
jge
fs
xor
xor
daa
xlat
or
sbb
test
mov
mov
dec
fmull
fwait
pop
and
lahf
loope
lds
mov
sbb
mov
mov
lods
mov
sbb
loop
inc
xlat
xlat
mov
xor
aam
xchg
jb
and
sub
hlt
gs
loopne
inc
pop
cmc
inc
jno
and
adc
repz
les
es
or
adc
dec
xlat
mov
into
lahf
xchg
adc
cld
xchg
fistl
sub
inc
add
mov
jb
dec
cs
cmp
mov
test
out
push
or
outsb
add
mov
cmp
cmp
sub
stos
repnz
dec
mov
lds
xchg
lcall
shrb
insb
cmpsb
shll
push
and
cmpsb
ret
sbb
aam
and
or
mov
das
cld
jp
sahf
stc
jns
imul
movsb
adc
jbe
push
mov
pop
adc
lret
push
loopne
mov
lahf
aam
sti
and
incb
test
cmc
xchg
mov
adc
ret
movsb
push
inc
movsl
or
inc
stc
fidivs
repnz
repz
jne
or
push
jno
ljmp
mov
dec
and
pop
mov
inc
push
repnz
gs
pop
cld
js
jg
xchg
popa
out
rclb
push
out
and
mov
sbb
add
push
inc
pop
fcom
pop
adc
jmp
shll
lds
jo
hlt
test
in
pop
push
and
ds
or
jb
data16
es
out
mov
dec
adc
lods
mov
repnz
comiss
jmp
mov
jb
ss
ja
ja
in
pusha
cwtl
inc
add
into
in
adc
in
js
dec
fnstcw
adc
xchg
jp
pop
jmp
sub
fbstp
inc
cmpsl
insb
fnstcw
sub
push
xor
rcrb
inc
test
dec
mov
and
adc
mov
inc
lcall
pusha
or
cmp
movsl
xor
jl
sub
dec
out
iret
in
pop
cltd
cmp
cmp
or
in
clc
stos
lahf
pop
into
pusha
xchg
movsl
ret
aam
cmp
push
or
roll
xchg
fsts
stos
add
xchg
sbb
add
push
lcall
mov
sbb
lret
xchg
ja
or
fwait
popf
xlat
test
xor
jge
jno
mov
fstl
repz
addb
sub
test
test
sete
fildl
pop
out
das
movsb
mov
sub
xor
ds
mov
adc
mov
das
mov
cmc
jnp
hlt
cmpsb
adc
pop
stos
ret
dec
add
cmp
insl
push
mov
pop
add
popa
btc
loope
adc
cmpsl
jne
lahf
xchg
dec
ror
cmp
adc
mov
adc
or
and
mov
jle
jbe
in
stos
sub
daa
lret
punpcklbw
adc
and
outsl
pusha
movb
and
xor
or
and
adc
in
cmpl
fdivr
pop
ds
into
sub
and
aam
dec
mov
mov
and
sbb
popf
mov
mov
ss
jbe
xchg
xor
xchg
pop
addr16
xor
xor
mov
xchg
in
sbb
mov
xor
pop
stc
push
mov
icebp
fnsave
mov
test
adc
push
push
adc
nop
loopne
xor
imul
dec
mov
inc
cwtl
fdivs
jmp
jl
ficompl
ljmp
jl
iret
ljmp
stos
sbb
inc
repz
jo
mov
cmp
xchg
idivl
xchg
loopne
sbb
ret
pop
cmp
fwait
xchg
fcoms
dec
sti
mov
aaa
std
repz
daa
int
fnsave
movsb
lods
mov
sbbb
jb
dec
xchg
adc
insb
mov
rorb
movsb
push
les
sbb
adc
out
sahf
cmp
and
xlat
mov
jb
ret
inc
filds
push
cmp
ds
sub
xor
insl
jp
dec
pop
hlt
daa
sbb
out
fcoml
pushf
cmp
iret
cwtl
loopne
cmpsl
iret
inc
in
jno
sar
xchg
pop
pop
mov
sbb
andl
jo
stos
jb
loop
jnp
in
xor
push
js
inc
mov
dec
fdivs
mov
xlat
out
insb
test
lahf
cmp
popa
stos
lahf
out
leave
mov
mov
and
jbe
mov
hlt
adc
gs
cmp
bound
mov
call
pop
inc
cmc
movsl
dec
add
or
repnz
push
iret
js
push
testl
jmp
cltd
jmp
mov
push
lea
imul
sub
or
jne
ficoms
jle
cmp
lods
shlb
cmp
add
scas
imul
lahf
push
sahf
mov
pushf
jl
lods
rolb
int
push
stos
test
sbb
jmp
sbb
ret
mov
pushf
hlt
cmpsl
and
cmp
lret
cs
pop
jp
pop
mov
mov
jb
inc
adc
mov
mov
mov
testb
lds
repnz
xchg
out
xor
and
sti
cwtl
stc
rorl
push
jno
mov
pop
mov
add
inc
push
and
int
jl
jo
ljmp
ljmp
in
loopne
pop
inc
xchg
in
outsb
or
jo
push
xor
mov
ja
clc
je
push
ja
sbb
out
out
icebp
mov
xor
xor
das
adc
pop
jecxz
mov
das
pop
xchg
mov
sbb
dec
cli
adcb
pop
out
sti
adcl
leave
jmp
xchg
jo
cmpsl
pusha
or
std
xchg
mov
mov
insb
or
aad
and
pushf
push
xor
xor
test
mov
or
int
lds
cltd
lret
or
inc
fwait
arpl
ret
add
push
adc
adc
pop
inc
lea
test
sub
jle
xchg
inc
and
imul
pop
jb
inc
pop
cs
xor
or
pop
icebp
lcall
les
aas
push
in
int
dec
fwait
xor
insl
stos
add
mov
mov
xchg
sub
out
pop
xchg
jge
jecxz
cld
addb
call
push
or
sarl
ficoml
lret
lods
scas
add
mov
into
xchg
aad
mov
stc
das
xchg
fsubs
pop
icebp
in
sub
inc
mov
mov
cmp
xchg
fistpll
lods
sahf
inc
cltd
jp
dec
int
and
imul
mov
mov
mov
cmpsl
mov
aad
jne
xor
outsl
mov
push
fcomip
sbb
mov
iret
fwait
push
sbb
add
lods
adc
je
sbb
push
outsb
sarb
mov
negb
movsb
stc
mov
xchg
xchg
mov
shl
shr
fldenv
mov
pop
je
enter
lods
inc
fwait
push
pop
jp
roll
imull
jb
je
or
sub
es
movsb
repz
or
or
sub
out
cmpsl
adc
lods
jne
jge
jp
outsl
adc
adc
add
lds
xchg
shrl
mov
hlt
repz
push
and
pop
inc
xchg
jns
js
mov
cmp
push
adc
fmuls
movsb
pop
inc
cmp
mov
xchg
push
xor
push
lea
add
pop
jle
xor
xchg
adc
in
add
xchg
xor
movsb
mov
cmp
sbb
lahf
inc
mov
repz
je
loop
sbb
negl
clc
xchg
das
sub
int
xor
lds
add
mov
push
ljmp
push
aaa
dec
sar
fdivrp
insb
aaa
xchg
mov
cli
jno
scas
cmp
hlt
add
test
in
dec
jle
in
int3
in
dec
adc
leave
mov
int3
dec
rolb
dec
fimuls
inc
mov
test
ret
push
hlt
pusha
das
icebp
jle
jge
aaa
mov
pushf
pop
xchg
push
or
outsl
nop
dec
dec
xchg
popl
mov
outsb
subb
push
inc
addb
in
xchg
cmpl
and
ljmp
cltd
inc
push
push
mov
push
add
fildll
pop
mov
xchg
inc
and
or
mov
inc
adcl
pop
rclb
or
pop
movsl
sub
fnsave
mov
popa
jle
mov
enter
fadd
gs
push
mov
repz
mov
flds
repnz
lods
mov
xchg
xchg
mov
mov
lret
jge
insb
mov
xchg
adc
xlat
adc
or
iret
in
test
jb
das
push
int
sbb
es
sub
test
out
inc
xchg
inc
pop
push
add
out
shlb
jl
int
cmp
in
mov
outsl
fwait
or
pushf
add
inc
hlt
clc
cmpsb
dec
cmp
test
push
idiv
add
ss
out
or
push
and
fisttpl
gs
dec
flds
xor
repz
adc
leave
and
push
push
xchg
orb
or
rcrl
addl
lds
xchg
pop
sub
jp
out
outsl
add
and
jnp
push
dec
adc
rolb
dec
mov
outsb
xchg
xor
mov
push
pop
fimull
jge
or
mov
imul
add
ss
add
push
inc
pop
jle
adc
scas
rorb
out
cmp
push
sbb
xchg
je
inc
rcrb
mov
mov
push
xor
mov
test
jle
sti
push
les
inc
lcall
xchg
lret
mov
xor
cmovae
inc
sub
ret
jae
push
jae
adc
insb
sbb
loopne
loop,pt
fdivrl
mov
mov
enter
xor
mov
call
xchg
add
cmp
inc
pushf
cmp
dec
leave
mov
out
gs
pop
pop
in
cmp
dec
mov
scas
dec
mov
roll
adc
adc
push
mov
lods
jmp
out
pop
xchg
mov
mov
and
dec
adc
adc
mov
sti
mov
jno
imul
inc
xchg
leave
xor
int
cmpsl
jle
in
dec
fwait
inc
jl
in
or
inc
lcall
xor
test
mov
xchg
daa
xor
sbb
xchg
das
dec
and
outsl
cmp
jle
sub
dec
mov
pop
aas
push
int
insb
negl
and
xchg
or
loop
lock
inc
repnz
dec
movsl
test
mov
bound
cmc
add
push
aas
das
inc
sti
les
lret
gs
int
jae
mov
in
sbb
push
sbb
push
push
sbb
xchg
mov
jae
repz
mov
scas
aam
int
mov
inc
adc
sbb
clc
pop
jmp
fisttpll
mov
xchg
ret
daa
jne
sbbl
sarl
or
mov
or
hlt
push
loope
jae
or
ja
add
push
loopne
data16
ds
jae
cld
popf
mov
fisubrs
stos
test
xchg
cmpsl
mov
sahf
ds
pop
nop
scas
xchg
add
decb
jbe
and
gs
leave
sub
movsl
cmp
jnp
dec
or
call
cld
out
cli
xor
add
jbe
sub
mov
add
popf
popa
mov
or
out
or
pushf
movl
cmp
or
imul
test
sub
or
mov
sub
lods
out
mov
je
sbb
fisubrs
sbb
xchg
test
dec
test
inc
loopne
fdivrl
stos
inc
hlt
push
call
shlb
mov
popf
push
sub
outsl
outsl
xor
lods
fldt
popa
push
fcmovnbe
movsl
lahf
sub
push
popa
mov
sub
enter
sbb
and
fs
xchg
jg
xchg
xor
mov
pushf
nop
jns
mov
cs
sub
mov
ficoms
xor
pushf
sub
add
cmc
test
cmpsl
push
sbb
push
test
ret
mov
lret
jae
mov
sbb
aad
xlat
ret
out
xor
pop
adc
fnstsw
push
mov
mov
mov
fcmove
add
out
adc
xchg
insb
cmp
fmuls
dec
adcb
outsb
dec
sub
movsl
pop
pop
pop
add
inc
stos
add
rol
pop
adc
call
push
xor
dec
jns
loopne
or
mov
imulb
push
lret
aad
mov
dec
sahf
xchg
mov
ficoms
xchg
push
out
xor
adc
std
mov
sti
stos
push
push
xor
cmpsl
in
arpl
std
out
xor
mov
and
sbb
mov
das
mov
test
sahf
jb
or
rcl
in
cli
mov
sbb
outsl
loopnew
push
mov
mov
sbb
cmp
js
inc
cmpsl
out
sar
push
cltd
shll
daa
or
test
pushf
xchg
test
jmp
scas
mov
push
pop
movsb
test
sti
sbb
rolb
jl
popf
inc
stos
xor
inc
or
ja
cwtl
divl
sub
dec
jne
lcall
les
cs
stc
lods
mov
sub
pop
pop
lea
jge
add
dec
imul
out
push
mov
adc
mov
pop
aam
movsl
nop
sbb
dec
adc
int
enter
test
fnstenv
test
cmpsl
cwtl
and
and
iret
cltd
stc
lods
adcl
andl
testl
sbb
push
popf
movb
enter
icebp
clc
mov
or
adc
fldcw
in
dec
pop
add
sahf
out
push
xchg
pusha
sub
pop
daa
cs
mov
adc
rcrl
push
shl
adc
or
fnop
dec
mov
adc
sbb
sub
incb
xchg
mov
or
mov
push
pop
inc
lret
mov
sarb
fchs
pop
dec
sarb
das
xor
lods
cmp
jno
inc
pop
into
mov
loope
fs
subb
xchg
xchg
push
imull
int
adc
mov
inc
dec
cmp
inc
test
cmp
xor
push
test
cwtl
rcrb
dec
ret
adc
xor
inc
pop
clc
add
xchg
mov
cmp
xor
addr16
in
icebp
scas
adc
pop
fiadds
mov
sbb
or
sbb
fst
mov
stc
je
lods
test
mov
lods
cmp
fisttpll
mov
roll
inc
aam
out
lret
popf
rol
mov
icebp
andl
and
call
movb
nop
xchg
jmp
test
addr16
push
fldcw
lock
jp
mov
mov
cmpsl
shll
cmpsl
xchg
lods
and
push
sbb
outsl
stos
pushw
aas
leave
insl
adc
mov
push
jae
fs
mov
ret
clc
mov
jg
leave
push
inc
mov
and
leave
inc
jne
stos
adc
lahf
into
pusha
sub
pop
test
dec
lcall
outsl
sub
xor
std
xor
dec
lock
mov
jns
jecxz
lcall
sub
jb
mov
outsl
lds
repnz
cmp
leave
jno
daa
sti
icebp
enter
scas
xchg
push
jle,pt
shlb
aaa
mov
cmp
lds
repz
xorb
and
jl
test
repnz
hlt
shll
in
inc
xchg
add
push
xlat
ss
jbe
es
je,pt
and
inc
in
dec
movsb
and
outsl
push
jle
xchg
xor
outsl
scas
jns
ds
in
out
fbstp
imul
sbbb
sbb
fdiv
outsb
mov
dec
push
dec
adc
jg
mov
idivl
jecxz
push
jle
mov
jp
sahf
std
jle
fisubrs
adc
pop
dec
daa
cmp
in
outsl
mov
dec
rcrl
dec
xchg
lock
rcl
inc
pop
mov
into
push
sbb
dec
adc
ds
and
in
daa
xchg
pushf
xor
push
push
mov
and
push
cmp
loopne
inc
or
test
cmp
xchg
scas
jecxz
or
mov
out
pop
mov
shr
sbb
movsl
popa
shlb
add
hlt
movsl
js
xchg
xor
jo
outsb
pop
xchg
out
sub
mov
loopne
pop
fldcw
ret
cmp
test
mov
loope
and
xor
inc
and
inc
fadd
and
shlb
pop
or
mov
call
sub
nop
shl
lahf
lea
dec
fcmove
push
aam
ret
fdivs
sub
std
mov
xor
hlt
jmp
outsb
mov
je
jmp
dec
adc
rclb
sbb
nop
add
mov
je
lahf
xor
std
xor
mov
push
jp
pop
scas
xor
add
dec
fcoml
adcb
adc
sti
aam
and
or
mov
pop
pop
iret
xor
xchg
or
loope
mov
inc
ljmp
rcrb
fwait
popa
ficoml
out
xchg
dec
in
jle
push
jle
mov
stc
leave
mov
or
test
xchg
fisubrl
cmc
mov
pushf
mov
cs
popf
or
xor
movsb
jns
movsb
inc
pop
ret
iret
mov
mov
arpl
scas
rorb
mov
jno
sbb
cmp
cli
jecxz
stos
popf
sub
pop
xchg
mov
lds
adc
pop
adc
clc
je
int3
outsl
pusha
jl
jl
xor
addr16
out
adc
int
jno
or
sti
push
lea
sub
mov
pop
scas
inc
imul
out
mov
call
test
js
push
inc
push
mov
addr16
ds
aad
and
and
jle
jb
mov
fdivrl
cmp
cmp
inc
call
mov
leave
int
or
loope
mov
fcomp
in
inc
inc
xchg
je
push
mov
sub
sbbb
push
mov
pop
ss
push
insb
mov
das
inc
inc
rorb
xchg
movl
mov
jne
ds
mov
jg
add
sti
jecxz
lret
lcall
mov
sar
scas
cltd
stc
push
lahf
mov
call
mov
add
jl
sahf
dec
outsb
sahf
push
jne
mul
adc
cld
xchg
mov
or
add
rclb
cmp
es
pop
fldt
pop
sbb
push
mov
dec
in
push
gs
or
mov
inc
jns
jbe
pop
andl
inc
xchg
adc
mov
pusha
inc
loope
sub
test
repnz
adc
je
scas
mov
mov
scas
cmp
jb
fdivp
push
inc
inc
clc
jno
test
sahf
test
adcb
pop
lea
lods
repz
xchg
orl
gs
in
int
in
jl
fs
mov
adc
stc
lret
push
insl
inc
jbe
dec
jmp
push
test
repz
fidivrs
xchg
sub
xlat
adc
dec
inc
sbb
xor
mov
leave
sbb
mov
adcl
loope
in
fisubrs
mov
pop
sub
test
in
xchg
rcl
cli
shll
fidivl
cwtl
lcall
shll
xor
cld
and
cmp
mov
adc
inc
mov
pop
sub
es
inc
repnz
sub
inc
add
fadds
mov
cwtl
pop
and
sub
jecxz
mov
pop
test
cmp
jg
cmpsl
out
pusha
ds
inc
push
icebp
mov
repnz
add
into
fsts
ret
sbb
jo
cmp
inc
movsb
out
daa
ljmp
cmp
adc
pusha
imul
leave
xor
pop
push
jae
loop
sub
cli
jno
mov
xchg
jmp
sub
cld
dec
clc
xor
lea
in
scas
dec
cli
jo
mov
scas
mov
jns
fstpt
orb
adc
stc
jecxz
sub
fcoml
dec
sti
and
mov
push
or
frstor
pop
sub
sbb
pop
jcxz
stc
in
adc
rorb
or
stos
inc
iret
xor
xchg
out
pop
ja
inc
mov
mov
mov
stc
mov
xchg
out
or
and
jno
test
ljmp
add
or
add
sbb
fildll
cmp
notl
pop
repz
in
lods
repz
mov
out
add
mov
ja
or
arpl
aas
pop
int
inc
jae
out
lods
fistl
stc
or
mov
add
add
lahf
xchg
sahf
out
sbb
daa
or
stos
add
xor
push
iret
pop
mov
fnstsw
cli
cmp
in
pop
ja
ss
pop
imul
out
out
div
jo
lods
pop
aam
and
xchg
sbb
data16
addl
cmp
incl
bnd
push
jnp
add
cld
lret
pop
and
mov
jns
add
imul
sti
dec
or
in
in
jle
insb
pop
xchg
xor
cmp
cmp
sub
dec
pop
lds
negb
mov
push
sbb
mov
daa
mov
pop
push
arpl
xor
sbb
and
sbb
push
mull
mov
fmuls
sbb
pop
jbe
inc
fisttps
in
jae
add
jl
mov
mov
mov
test
iret
mov
mov
stc
int
lahf
add
movsl
or
inc
pop
pop
and
and
std
dec
enter
or
out
pop
aad
mov
mov
or
pop
sbb
lcall
in
out
mov
std
xchg
daa
push
dec
xor
call
test
loopne
xor
add
dec
scas
mov
das
dec
adc
testb
mov
pushf
or
push
jne
repnz
sub
incb
mov
les
jnp
push
jmp
mov
dec
aas
std
push
lret
iret
lods
pop
push
fnstenv
shrl
push
mov
cmpsl
sarb
jae
dec
cld
or
imul
scas
lahf
rolb
jl
fsubl
dec
les
insl
jl
int3
ljmp
sub
add
loopne
insl
stos
clc
int
push
dec
and
fisttps
or
jp
pusha
ljmp
sub
rcr
in
mov
aam
xchg
subl
add
scas
fwait
xchg
jmp
fsubrl
out
mov
div
xor
xchg
nop
int3
orb
ret
dec
mov
fsubrs
test
jle
pop
mov
repnz
mov
orl
sbb
add
mov
mov
or
scas
pop
cmpsl
sahf
js
ret
psubsb
ret
or
test
mov
dec
or
jp
mov
inc
dec
aas
aad
jns
inc
ss
dec
fnsave
lret
divl
cmp
mov
clc
bound
fldl
int3
jp
imul
fsubrs
or
adc
sub
jl
fs
mov
lods
sahf
lahf
xor
enter
inc
in
mov
fwait
mov
and
or
stos
stos
scas
mov
jae
test
fbld
not
xchg
inc
push
aaa
ljmp
mov
mov
arpl
pop
jb
clc
inc
push
iret
push
adc
xchg
sar
cltd
adc
cwtl
and
test
xor
sub
xlat
and
rorb
pop
rcrl
mov
cmpsb
std
dec
jo
icebp
mov
in
pushf
add
or
xor
pop
std
push
xor
aaa
or
xchg
daa
xchg
cmp
add
sbb
aam
push
jo
mov
movsb
inc
and
push
inc
insb
mov
ss
test
mov
xchg
mov
mov
sub
dec
sahf
cld
jno
data16
sub
xchg
sbb
xchg
xchg
mov
xchg
cli
adc
insl
in
int3
sub
pop
or
shr
and
mov
and
push
ss
out
es
inc
rolb
stc
insb
pop
mov
mov
pop
push
dec
cmp
mov
jp
sub
mov
jbe
adc
jno
popf
and
sub
int3
inc
and
mov
idivb
cmc
ja
jnp
test
es
xchg
stc
adc
xor
mov
mov
testl
adc
push
xor
pop
pop
lcall
mov
or
ja
sub
mov
pusha
sahf
out
repnz
mov
jmp
stos
mov
fs
adc
mov
push
pusha
ret
sbb
pop
daa
mov
cwtl
popa
xchg
jnp
lret
test
xor
pop
add
cld
test
idivb
cmpsl
shlb
out
jg
push
mov
cmp
in
dec
and
lret
test
or
mov
adc
or
ret
mov
cmpsl
ret
mulb
sub
jno
xorl
fdivl
test
adc
in
leave
jg
cld
or
mov
loope
test
cmp
or
sahf
jne
pop
add
sub
dec
stos
xchg
out
adc
aaa
jle
lret
outsb
mov
xor
mov
sub
cltd
mov
jo
mov
or
ljmp
or
stos
imull
cmp
nop
dec
dec
ss
sbb
xor
mov
iret
dec
or
xchg
jno
ljmp
sahf
iret
push
mov
sbb
imulb
sub
sbb
sub
mov
dec
orl
repz
ret
jns
test
pop
cmp
cld
or
ds
push
std
adc
shl
dec
out
insb
test
pop
jno
iret
jl
xchg
and
jge
inc
icebp
fildl
push
sbb
xchg
hlt
xor
out
mov
dec
inc
jg
cwtl
out
shll
and
aas
pop
xchg
add
int
popa
insb
outsb
les
fsubrl
aam
nop
mov
outsl
adc
rclb
aaa
cmpsb
ret
gs
ja
add
xlat
out
les
int3
cmpsb
ds
add
mov
orb
mov
xor
mov
push
push
sbb
inc
push
mov
sub
ljmp
mov
pusha
cmp
lcall
popf
jmp
pop
mov
popa
mov
andl
lods
push
mov
mov
mov
lcall
add
mov
sub
and
cmp
insb
mov
jmp
pushf
cmp
leave
mov
daa
roll
aas
ret
sahf
inc
cltd
bound
in
ja
jp
push
push
xor
push
jb
in
mov
cltd
scas
sub
mov
cltd
ljmp
push
inc
push
push
add
sub
lock
mov
js
insl
popa
clc
mov
cmp
ret
lcall
out
aaa
in
lahf
subl
sub
bound
pop
nop
testl
add
in
dec
pop
cmc
addb
inc
imul
lock
repnz
xchg
insl
aaa
mov
movsb
pop
outsl
in
and
leave
inc
sahf
popf
andl
adc
push
add
xlat
and
jecxz
fmull
mov
adc
xchg
dec
xchg
out
lahf
sbb
cmpsb
pop
les
je
mov
orb
push
adc
push
loope
testb
push
xor
inc
jg
xor
xchg
jecxz
orb
xor
mov
push
ja
insl
push
out
lock
mov
pop
das
push
push
movsl
add
inc
adc
jl
hlt
mov
mov
out
out
jne
adc
or
mov
inc
int3
bound
fmuls
cs
pop
mov
pop
movsl
test
xor
push
stos
leave
or
add
cltd
jns
xor
ja
shrb
lock
test
repz
push
mov
mov
js
mov
lret
push
or
into
sbb
jecxz
jecxz
ret
ss
inc
orl
shrl
push
mov
mov
and
movsl
into
or
dec
ficompl
mov
xor
add
aaa
in
bound
jnp
xchg
pop
daa
addr16
xchg
sub
jg
mov
aad
cwtl
dec
mov
mov
rolb
pushf
mov
stos
sbb
mov
shlb
incb
mov
pop
lret
mov
std
sbb
fsubrp
mov
in
sub
ret
lret
cmp
push
sar
push
test
add
xchg
dec
adc
inc
lds
jg
repz
mov
in
out
xchg
and
cmp
out
pop
sub
mov
outsl
testb
jns
in
mov
pop
leave
cmp
mov
jo
push
dec
and
push
cld
dec
mov
adc
xchg
mov
bound
fcompl
sub
xchg
jbe
dec
cmpsl
ja
or
roll
hlt
adc
sub
cwtl
bound
xchg
xchg
stos
add
lea
shll
imul
dec
and
aam
push
dec
cmp
xchg
push
ja
sti
lds
sub
xor
or
jne
ds
cwtl
fldenv
arpl
out
mov
adc
cmp
xchg
out
insb
and
hlt
test
add
jp
add
shll
push
ret
aas
push
adc
adc
push
sbb
add
inc
aad
jae
mov
xor
nop
jecxz
add
sbb
dec
pusha
cmp
add
pop
in
es
test
out
mov
fsubr
mov
outsl
pushf
inc
xchg
xchg
mov
pop
lods
daa
out
ja
cmp
ret
dec
or
lods
movsl
adc
pop
jecxz
jns
push
cmpsl
mov
pop
jle
inc
sahf
mov
fdivp
outsb
pop
subl
xchg
pop
outsl
stos
inc
mov
sbb
mov
xchg
out
pop
shlb
pop
ja
movsb
dec
ret
mov
xchg
lret
xchg
andb
ds
insb
pop
push
lods
push
fisubrl
jle
xchg
push
mov
push
inc
sbbw
lret
pop
jle
mov
push
out
jle
adc
add
test
cltd
mov
pop
insb
dec
mov
and
mov
mov
mov
push
jae
and
push
push
mov
mov
mov
pop
xor
fidivl
ds
bound
mov
aaa
push
push
test
cmp
es
pusha
jg
dec
ret
outsl
arpl
push
js
jae
inc
cmc
pop
out
sub
lock
xor
lret
int
iret
stc
and
shll
mov
call
jbe
out
push
inc
jnp
dec
ffreep
and
push
int
outsl
push
hlt
jne
out
and
xlat
mov
int
xor
mov
in
pushf
push
pop
pusha
lods
movsb
lods
lahf
sbb
stos
incb
mov
int3
sbb
push
or
hlt
xor
in
sub
incl
call
mov
lds
add
pop
outsl
outsb
push
xchg
cmp
test
out
and
mov
notl
test
call
movsl
add
and
mov
cmp
test
cmpsl
push
mov
pop
cmp
adc
pop
out
fmulp
xchg
push
pop
xor
dec
mov
sarb
cltd
dec
xor
xchg
aas
fiaddl
xor
dec
and
ss
xchg
out
stc
ret
test
ret
mov
insl
push
push
adc
add
mov
lret
inc
dec
aaa
shll
mov
mov
imul
loopne
lcall
mov
add
aas
jno
sub
sbb
mov
pop
xor
mov
sbb
mov
pushf
sbb
lock
sahf
test
jge
lods
gs
mov
or
cmp
leave
into
dec
andb
icebp
pop
lods
jbe
fistps
sahf
inc
add
push
shl
repz
xchg
stos
or
ficompl
adc
xchg
pop
dec
dec
pop
aad
pop
sbb
jbe
dec
in
pop
fwait
inc
jns
mov
cmp
add
sub
or
lock
xor
ds
adc
jg
sbb
mov
cwtl
jmp
pop
call
js
xchg
push
xchg
jmp
cwtl
ficoml
mov
into
push
add
ljmp
movsb
push
shll
aaa
push
mov
or
jmp
std
test
std
icebp
cmpsb
inc
sbb
add
test
fldcw
jne
xor
fld
mov
sub
xchg
jne
repz
into
rorb
lea
enter
js
push
lcall
mov
js
inc
add
cmpl
ror
aaa
mov
daa
jo
and
ja
jb
add
cld
cmp
imul
push
es
mov
js
lds
or
insl
pop
aam
adc
loop
enter
adc
mov
jno
adc
jno
arpl
pandn
mov
mov
sbbl
iret
mov
enter
addr16
xchg
and
enter
aam
ficoms
push
das
mov
sub
fwait
aas
pop
pop
dec
daa
aaa
into
inc
loop
cmp
jne
cltd
push
sbb
mov
push
mov
fwait
sbb
call
inc
xchg
push
xor
xchg
sub
sub
lea
add
repz
sahf
repz
loop
cld
dec
mov
xchg
sti
xor
mov
and
and
lods
enter
mov
xchg
nop
inc
aaa
push
or
cmpb
stc
repnz
xchg
push
fs
cmp
or
or
mov
out
push
jp
xchg
fcom
popf
shl
arpl
mov
movl
jle
or
pop
or
sub
xor
out
call
lods
add
jg
out
sbb
hlt
push
pushf
test
stos
mull
mov
dec
fdivr
dec
hlt
inc
mov
mov
or
scas
push
mov
ficomps
mov
jmp
out
mov
stos
mov
pushf
mov
call
mov
pop
aas
adc
fnsave
xor
push
xor
cmp
daa
hlt
pushf
cmpsl
ja
push
mov
xor
sub
test
mov
and
dec
sub
loop
pushf
mov
and
iret
mov
subb
and
sahf
push
xor
inc
enter
adc
xchg
inc
push
test
push
cmp
loope
inc
push
xchg
lcall
and
and
or
je
jg
sub
repnz
mov
xchg
fsubl
jle
push
xchg
jge
push
inc
add
mov
cmp
xchg
cmpsl
add
push
pop
sbb
gs
loope
leave
adc
pop
push
adc
cmp
sbb
jno
jne
outsl
cmp
jmp
add
mov
ss
jbe
jle
mov
arpl
loope
mov
into
sub
jo
xchg
cmp
pop
sahf
pop
jno
adc
cld
out
iret
fisubs
ds
sbb
adc
ljmp
clc
jp
and
sahf
mov
adc
nop
sbb
or
adc
or
or
xchg
dec
icebp
dec
sub
xchg
movsb
or
test
lods
ds
out
add
sbb
jge
mov
test
and
mov
test
xchg
sahf
sbb
rolb
sub
sub
test
scas
test
leave
or
aas
aaa
mov
sub
inc
mov
sbb
test
jnp,pt
dec
es
bound
arpl
test
popa
push
ljmp
add
arpl
adc
bswap
scas
pop
mov
fdivrp
mov
or
push
int
inc
jnp
inc
or
adc
add
mov
lahf
cld
cmp
cwtl
fs
std
jae
mov
and
or
gs
add
dec
data16
jb
lcall
and
jp
mov
out
int3
lea
mov
mov
and
lock
push
popf
push
fnstcw
out
repz
into
mov
sbb
dec
in
cld
ss
imul
stos
scas
mov
mov
clc
cmc
data16
dec
sbb
mov
dec
pop
push
or
dec
outsl
or
mov
cwtl
int3
xchg
pusha
ds
addb
add
lds
mov
or
int3
and
mov
aad
or
outsl
std
outsl
xchg
mov
jmp
add
test
idivb
js
gs
dec
mov
jl
test
popf
ja
imul
inc
mov
mov
push
xor
mov
out
jl
in
push
ss
xorl
jno
lcall
mov
subb
subb
xchg
pop
scas
imul
and
jbe
add
out
inc
stc
mov
mov
cmc
mov
jmp
or
out
movsb
and
xchg
sbb
xor
and
lods
mov
pop
jp
ss
push
flds
aad
outsl
add
ficoms
fstpt
flds
lret
mov
jmp
loope
subl
mov
adc
add
icebp
or
xchg
mov
sub
lcall
xlat
leave
repnz
mov
hlt
jae
xchg
cmp
fprem1
popf
mov
fildll
stos
sbb
arpl
sbb
cld
mov
xor
pop
mov
cmp
mov
hlt
sub
pop
add
cli
sub
mov
shrb
out
jp
cmp
shll
or
pop
jnp
les
adcb
aad
test
xor
in
les
int3
lea
pop
jmp
jnp
inc
xor
movsl
adc
xchg
jbe
popa
xchg
xor
mov
or
cmpsb
insl
je
inc
mov
imul
lret
je
dec
lahf
aas
movb
ja
loope
xchg
rorl
mov
arpl
icebp
std
inc
insb
bound
loopne
sub
lret
shll
mov
shll
loopne
inc
mov
andl
mov
jno
imul
pop
in
enter
in
sarb
and
enter
clc
jb
dec
mov
cmp
xchg
push
push
adc
xor
mov
adc
cltd
cmp
pop
jns
pushf
mov
aaa
out
rcrl
insl
cmp
adc
xlat
testl
mov
out
mov
lock
pop
pop
sbb
dec
pop
cltd
jne
add
mov
in
ss
mov
jne
and
daa
punpcklbw
xor
mov
jo
loope
inc
mov
xchg
sarb
or
cmp
ljmp
xchg
adc
je
lods
jnp
xchg
mov
out
inc
jns,pn
sub
enter
xchg
mov
inc
inc
push
test
ret
sti
jle
xchg
fwait
es
enter
dec
int3
pushl
loopne
cmp
xchg
dec
xor
jmp
or
mov
dec
enter
out
pop
mov
push
adc
out
pop
inc
iret
sub
packssdw
cmpsw
out
adc
xor
xlat
ret
lock
lods
mov
dec
fiaddl
sub
pusha
pop
aaa
xor
and
push
popf
mov
mov
mov
lret
mov
js
mov
mov
inc
jo
push
das
outsl
sbb
jle
jb
out
out
bound
xor
lahf
mov
pop
loopne
dec
loope
insb
push
xchg
out
and
pusha
cmp
adc
icebp
insb
shl
rcr
inc
xchg
into
in
orb
std
mov
addb
incb
lahf
push
inc
movsb
loopne
les
aaa
push
or
mov
push
mov
and
sbb
sbb
xchg
dec
stos
jae
insb
in
add
pop
loop
push
jecxz
mov
and
xor
sub
jecxz
xchg
leave
sbb
sub
std
icebp
push
xor
mov
pop
mov
push
testb
gs
or
das
pop
les
out
jns
sahf
sub
ss
out
out
jae
mov
imul
ss
pop
xor
jle
lret
aad
xor
pop
mov
sarb
pop
call
mov
xchg
pop
add
notl
sub
imul
pop
sarl
shll
xchg
add
data16
dec
cmpsl
ljmp
push
cld
add
jnp
pushf
inc
add
popl
inc
jp
outsl
inc
jg
jnp
jle
cmpb
mov
mov
or
inc
mov
mov
mov
or
mov
push
insl
xchg
mov
xchg
pop
nop
push
jbe
mov
bound
xchg
or
xor
lret
popa
xor
adc
js
bound
je
out
jecxz
enter
dec
sub
aaa
int3
outsb
imul
mov
pop
repz
ljmp
shlb
and
adc
add
push
mov
xchg
xchg
test
cmp
lahf
test
adcl
addr16
pop
aas
sub
jmp
lahf
scas
inc
pop
pop
or
je
inc
pop
push
data16
push
loope
jmp
je
jl
mov
push
ds
cmp
movsl
or
ss
or
popf
mov
andl
mov
fnstsw
addr16
mov
fcmovnu
cmp
imul
mov
data16
push
dec
xchg
xor
mov
jne
jb
insb
sahf
ret
inc
lock
mov
pusha
movsb
pushf
sub
movsl
iret
and
mov
sub
adc
hlt
xchg
ja
push
ss
lds
pop
adc
fsts
adc
add
repnz
call
jl
add
inc
shrb
cwtl
pusha
inc
stos
push
lahf
mov
fisubl
incb
ljmp
dec
int3
mov
pop
jp
mov
mov
sbb
xor
sub
sarb
fwait
xor
fcmove
pop
cltd
bound
pop
lcall
adcb
loopne
ret
arpl
xor
jne
mull
fsubl
bnd
outsb
mov
jns
movsl
pop
sahf
push
and
pusha
dec
stos
cli
clc
mov
jecxz
mov
rcll
call
pop
jne
cmp
sbb
push
mov
in
mov
xor
fidivrl
jmp
push
sbb
xlat
mov
xchg
cmp
dec
sahf
ljmp
mov
inc
add
data16
mov
inc
push
ljmp
jge
ljmp
fbstp
xor
fildll
sbb
lahf
dec
sbb
bswap
push
dec
rorb
aaa
sti
inc
xor
sbb
cld
aam
addb
mov
xchg
mov
mov
lcall
mov
mov
sub
mov
add
jbe
add
mov
add
movl
aad
add
in
jbe
mov
cmp
jb
add
add
inc
xchg
xor
dec
pop
xor
pop
pop
and
and
push
cltd
lahf
inc
clc
imul
xorb
lcall
mov
daa
cmp
xchg
aad
dec
push
hlt
leave
push
call
jmp
pop
lahf
xchg
inc
jnp
pop
and
je
mov
sub
pop
out
cmp
xchg
scas
jns
cmp
adcb
push
aaa
adc
and
inc
loop
and
call
andb
adc
test
cmp
pop
push
mov
test
in
ds
fsubl
test
sub
jns
pop
sbb
inc
mov
ds
pop
push
dec
mov
lods
push
push
cltd
cmp
mov
dec
pop
add
add
sub
scas
adc
cmc
insl
aad
jmp
cmpsb
adc
lods
sahf
in
lods
push
andl
movsl
movsl
or
sbb
push
fsts
lret
mov
jo
mulb
dec
jp
je
add
mov
into
inc
xor
aad
push
or
dec
aaa
shl
sti
jle
je
cmpsb
pop
jns
sbb
rorb
enter
push
and
out
out
hlt
pop
data16
jae
jp
jno
rcrl
movsl
mov
cld
popl
nop
xor
jo
orl
or
push
add
fmul
mov
repz
cmpsb
add
fcompl
shlb
int3
out
add
bnd
mov
cmp
aaa
pop
inc
rolb
push
popa
xor
mov
lock
loop
add
iret
jecxz
insl
add
push
es
out
xchg
inc
loope
divb
jl
movsb
shrb
stc
insl
jbe
mov
xorl
ljmp
xchg
int3
sub
repnz
jp
mov
sub
lahf
mov
mov
daa
sbb
add
jg
push
ljmp
mov
bound
xor
mov
arpl
rolb
xchg
repnz
fcmovb
jnp
loop
adc
repz
test
adc
test
mov
xor
adc
sub
es
loop
sub
shl
cld
test
fildll
repnz
std
push
dec
mov
addr16
mov
pop
xlat
aam
and
push
cwtl
ds
ds
popa
lret
jne
hlt
push
jno
mov
or
pop
sarb
shll
sahf
lods
push
or
xor
cmp
pop
lods
jle
mov
pushl
xor
pop
repnz
pop
ret
mov
xchg
xor
imul
loop
add
int3
add
jl
inc
sahf
pop
xorb
sbb
int3
mov
xchg
mov
repz
jnp
es
pop
cmp
clc
push
nop
cmp
shll
stos
jp
add
push
cmp
jo
pop
fs
aam
adc
xchg
dec
fdivrl
ret
incl
ja
outsb
pop
cmp
insl
inc
pop
jmp
cmp
fwait
ss
int
pop
pop
and
dec
mov
fwait
dec
mov
fdivs
lds
call
in
lods
push
iret
xchg
insl
iret
mov
xchg
dec
or
lahf
mov
mov
cmp
movsb
mov
pop
jmp
idivl
out
mov
sbb
movsl
push
pushf
and
dec
cmp
pop
add
popf
in
mov
lret
loope
mov
pop
stc
xor
out
sub
sbb
fistps
pop
lcall
mov
fcmovbe
and
sahf
dec
pusha
push
cwtl
cmp
mov
test
jbe
cltd
scas
nop
out
jae
test
rclb
mov
jb
hlt
jo
jno
out
add
pop
pop
adc
test
mov
es
mov
movsl
sahf
outsb
xlat
fisubl
movsl
jb
or
je
xor
dec
sarl
stos
jno
in
dec
stc
jne
push
xchg
xor
gs
cmc
test
jb
sub
fisttps
aaa
add
out
daa
dec
sahf
outsl
sahf
dec
ss
or
mov
adc
and
lds
dec
out
das
and
mov
jb
test
stos
jo
int
out
add
lahf
loopne
int3
test
push
les
or
aam
lahf
test
xor
pop
cmp
vhaddps
jge
shrb
mov
idivl
inc
movsb
stc
jbe
sbb
insl
adc
mov
mov
loop
ret
push
adcl
mov
enter
dec
ret
dec
xchg
imul
bound
data16
xchg
or
or
cmpsb
sub
cmpsb
aam
ror
inc
jno
out
mov
inc
out
out
and
mov
xor
fdivrs
fistpll
xchg
daa
add
mov
insb
mov
push
cmpsb
add
mov
shll
xor
and
mov
rclb
mov
mov
sbb
mull
xor
mov
or
arpl
cmpsb
jb
jge
clc
sti
call
inc
jle
xor
in
fbstp
lods
es
mov
scas
test
xchg
pop
sbb
stos
subl
mov
aad
mov
push
in
jle
and
mov
bound
push
scas
cmp
aas
aad
sub
das
sbb
lret
pop
mov
cs
dec
fbld
cmc
test
movsl
xor
sahf
or
or
sbb
imul
shll
push
sub
inc
dec
push
cwtl
aaa
jne
xchg
jns
imul
xchg
pop
lret
ss
clc
jle
repz
xor
add
sub
insb
push
and
aam
add
stos
cmp
divl
out
jle
mov
stc
or
or
repnz
push
and
mov
dec
mov
mov
cmp
adc
mov
cmp
inc
xor
dec
push
rcl
push
sbb
fdivr
fdivrp
or
loopne
dec
lret
out
in
data16
pop
movsl
icebp
pop
aad
hlt
cld
in
cmpsb
pop
cltd
hlt
clc
pop
popl
xor
movsl
xchg
bound
cmp
cmpsl
sub
lret
sbb
test
dec
cmpl
lea
push
in
pop
mov
inc
mov
xchg
lcall
cmp
mov
sti
test
xchg
inc
dec
add
mov
dec
call
int
cmp
dec
loope
adcl
xlat
jg
xchg
icebp
lahf
in
arpl
ret
xchg
lods
mov
sbb
cmp
cmpsb
movsb
loopne
out
call
sbb
ror
or
add
sar
push
and
or
pop
inc
pop
inc
dec
pop
jmp
je
jg
addr16
pop
mov
leave
adc
mov
mov
mov
les
mov
inc
mov
or
sar
jmp
jae
div
arpl
fdivr
mov
jmp
push
in
pop
aam
ljmp
dec
es
fcoms
clc
xor
in
ss
mov
jl
mov
fwait
lret
xor
cmpsb
arpl
jecxz
pop
and
out
xchg
les
xchg
inc
loop
out
insl
sub
stos
hlt
enter
add
shrb
repz
sub
bound
xchg
mov
mov
dec
sub
cmpsl
mov
ss
jp
adc
scas
mov
mov
mov
mov
fs
mov
popa
jl
insb
stos
pop
jl
jecxz
fisubs
movsl
scas
stos
into
mov
fmull
gs
mov
fsubrl
jp
xchg
mov
jg
mov
inc
scas
xor
fsts
push
dec
mov
cmpsl
in
jns
test
mov
and
sbb
outsb
repz
lcall
enter
push
test
sahf
mov
js
sbb
add
repz
stos
jle
in
and
fstl
test
ds
int
cmp
pop
sbb
hlt
jecxz
xchg
cmp
dec
out
mov
mov
sub
mov
jnp
fnop
inc
arpl
mov
push
lret
add
mov
fsubr
and
jmp
imul
addl
mov
stc
out
sbbl
stos
movsl
rcrl
mov
mov
xor
fld
add
adc
push
cmp
add
test
movsl
xchg
addl
sbb
cld
xor
cmp
mov
inc
popa
les
mov
imul
or
push
jae
push
popa
sti
push
shlb
mov
cli
xor
xor
mov
mov
nop
pop
mov
xchg
jl,pn
dec
cs
push
or
cmp
aam
inc
pop
xchg
insb
sbb
nop
aas
jnp
pusha
rclb
push
lock
inc
mov
arpl
or
int3
push
dec
xchg
adc
cmpsb
mov
rcl
mov
popf
test
mulb
movsl
cltd
aam
mov
jmp
mov
push
cmp
cmp
pop
and
aaa
add
jl
jnp
adc
cmc
adc
sub
negl
in
xorb
push
sbb
dec
xchg
mov
nop
push
imul
arpl
sbb
inc
fcoms
std
ret
push
jo,pn
mov
pop
ret
je
mov
shll
sarl
test
movsl
mov
enter
aad
mov
mov
adc
push
sbb
es
movsb
pop
mov
iret
clc
xchg
cmpsl
jb
fsubl
ja
adc
mov
dec
inc
scas
dec
into
adc
add
adc
decb
mov
sbb
and
jne
jnp
aas
dec
inc
iret
call
or
jbe
xchg
dec
aad
pushl
xchg
repnz
adc
add
xchg
xchg
les
shrl
pop
sbb
mov
and
gs
outsl
cld
lret
notl
cmp
gs
push
jg
popf
stos
fistps
xchg
mov
out
inc
mov
jp
pop
cs
cld
out
inc
and
or
shl
xchg
imul
mov
or
cmp
dec
xlat
lods
loope
imul
mov
out
test
hlt
test
ljmp
andl
pop
scas
ja
mov
roll
mov
lds
cmp
xchg
test
xlat
insb
negb
push
cmc
arpl
jmp
jl
adc
and
or
and
xchg
pop
mov
pop
clc
out
add
pop
aaa
fldt
mov
fildl
and
inc
je
jmp
adc
add
adc
dec
inc
cmp
pop
xchg
pop
push
push
sub
iret
jbe
and
andb
rclb
movsl
mov
jno
xor
jnp
pop
les
dec
movntps
insl
icebp
xchg
add
adc
sub
or
or
push
loope
jae
or
mov
and
pushf
cltd
popf
mov
mov
adc
push
lods
popf
jnp
cmc
dec
icebp
cmp
bound
iret
cmp
or
push
xor
faddp
pop
add
lahf
add
sbb
repz
mov
sub
or
add
dec
ret
test
mov
mov
or
lds
mul
imul
xchg
mov
inc
xchg
push
mov
dec
popa
mov
jnp
imul
mov
add
xor
jb
daa
insl
mov
je
ret
jae
loop
and
insl
pop
or
xchg
aaa
inc
cmp
adc
mov
loope
lods
add
inc
jo
rdmsr
and
lods
pop
outsl
add
in
stc
or
push
mov
jle
cmp
jmp
adc
loope
jmp
cmp
dec
in
roll
pop
mov
sub
pop
pop
mov
loopne
xlat
pop
xor
jo
adc
inc
lods
sub
lock
mov
jp
inc
mov
lcall
dec
pusha
pop
pop
daa
test
int
je
jne
xchg
xchg
xlat
xor
cmpsb
adc
mov
aas
xor
movsl
mov
sub
cmp
fcmovbe
dec
add
ret
sub
pop
lret
enter
mov
inc
fldt
cmp
in
neg
cmp
out
pushf
test
loopne
and
sbb
jmp
je
sti
jae
pop
mov
or
pop
clc
in
rep
insb
sub
int3
mov
inc
sbb
int
pop
jg
xlat
jp
inc
sarb
aad
pop
pop
xchg
mov
nop
xchg
call
inc
loop
pop
adc
sub
jae
fistpll
scas
fisubs
dec
jp
xchg
mov
add
fcmovnbe
mov
xchg
in
mov
dec
loopne
mov
or
and
jl
adc
cmp
cmpsl
push
pop
jno
shlb
pop
cmpsl
int3
jns
and
adc
lods
mov
dec
les
xchg
add
aad
pop
push
lods
push
std
push
adc
adc
mov
mov
push
push
lret
inc
fwait
sti
xchg
adc
insl
fwait
sub
xchg
sbb
push
add
jecxz
pop
mov
shll
in
xor
inc
mov
test
inc
imul
iret
loopne
mov
mov
addr16
loop
add
jmp
out
jnp
pop
xchg
divl
push
js
jne
shrb
sub
add
fld
xlat
into
add
push
mov
mov
out
andb
movsb
ret
fildll
add
or
adc
jns
loope
or
mov
mov
cmpl
jae
mov
push
mov
add
pushf
ja
ror
repz
push
jmp
fsts
gs
push
filds
mov
sti
aaa
bound
ret
push
loope
dec
cmp
xor
mov
roll
push
ja
push
shl
jb
sbb
mov
bound
inc
dec
icebp
mov
dec
mov
pop
in
popa
orb
dec
out
loopne
stc
loope
aaa
adc
xor
aam
cmp
lds
sbb
xchg
inc
test
push
push
gs
jl
jb
jg
movsb
mov
mov
adc
call
rcrb
cld
les
inc
mov
das
insl
les
push
jns
xchg
xor
fcoml
inc
movsl
push
adc
aaa
cmp
arpl
int3
push
xchg
mov
or
mov
mov
rcr
jae
sbb
popa
xchg
adcb
mov
mov
push
test
mov
orb
pop
add
shr
aad
pop
mov
sbb
sub
add
sti
leave
xchg
sbb
fsub
xor
mov
jb
fadds
fcomps
repz
push
cld
dec
push
inc
pop
fimull
test
xchg
pop
mov
loopne
movsl
pop
loopne
add
pop
mov
aad
call
cmp
jle
mov
sub
out
push
cmp
mov
pop
sbb
and
sti
jbe
and
lcall
cmp
sub
call
xchg
mov
or
lods
cmc
add
xor
movl
daa
jecxz
xor
sub
test
roll
sbb
and
add
out
call
sub
ljmp
aam
adc
jp
adc
sahf
imul
xor
push
sub
jl
shrb
addb
push
aas
jne
movsb
pop
test
push
cmp
fsubrs
jbe
out
dec
xor
jge
jne
cmc
mov
xlat
or
xchg
add
jle
test
sub
leave
cltd
enter
dec
dec
jge
test
in
or
pusha
addl
mov
mov
sub
jae
or
sbb
sbb
xchg
pushf
mov
lock
in
les
lcall
inc
loop
jno
int
sarl
mov
sub
roll
mov
mov
push
rcr
adc
aad
mov
into
pushl
aaa
xorl
adc
xor
out
sbb
test
and
adc
push
addr16
xchg
or
sarb
cmp
cmp
mov
lea
and
pop
inc
lret
nop
push
xor
das
xchg
add
add
jmp
nop
push
adc
mov
out
cmc
mov
or
jae
lds
data16
cmpsl
dec
cmp
inc
fldcw
xor
cs
xcrypt-ofb
cmpsl
das
je
push
hlt
pop
cwtl
ficomps
movsb
stc
sub
aad
out
add
in
push
enter
jb
pop
mov
mov
fcoms
loopne
adc
loopew
mov
xor
pop
ljmp
sbb
and
sub
dec
cmp
pop
push
ret
mov
rep
sbbb
out
ds
and
cmp
mov
rorb
mov
push
adc
out
fs
pop
shrl
jo
outsb
std
mov
or
or
js
mov
sub
cmp
in
ja
sub
mov
mov
out
icebp
dec
popf
ss
dec
adcb
test
sahf
xor
test
pop
hlt
and
inc
leave
push
jle
mov
js
or
push
sti
jmp
aaa
xlat
push
mov
pop
hlt
cmp
mov
jg
call
mov
std
movsl
sqrtps
sbb
imul
loop
pop
pusha
pusha
jnp
insl
sbb
push
push
pop
mov
add
cltd
cs
mov
sbb
push
out
add
hlt
mov
jp
add
pop
mov
mov
mov
sbb
inc
es
test
cmp
arpl
movsb
out
jecxz
mov
xor
imul
sbbl
in
sub
sub
out
cmc
fcom
cmp
add
cli
fiaddl
mov
js
push
jecxz
out
js
repz
mov
fildl
gs
lcall
sahf
mov
jbe
int
aam
adc
cmp
inc
and
loopne
lods
ds
sbbl
mov
mov
dec
rcr
les
aam
mov
sub
and
movsb
imul
dec
call
mov
sar
mov
ret
adc
mov
adc
orb
push
pop
push
gs
jne
sub
mov
sub
add
cs
mov
add
inc
aaa
rclb
or
leave
imul
ret
add
movsb
in
or
xlat
jle
and
outsl
scas
rcr
sub
leave
jne
leave
lahf
bound
aam
dec
in
aaa
or
insl
jg,pt
mov
aaa
xor
int
mov
out
mov
repz
fidivs
or
pop
sbb
jp
dec
lret
sti
scas
sbb
lea
jb
cmpsb
xchg
push
lret
add
lret
out
cmova
inc
test
lcall
push
mov
into
sub
mov
imul
imul
lcall
mov
sbb
lahf
movl
mov
inc
adcb
mov
data16
cmpsb
mov
xlat
insl
shll
add
push
ret
push
lea
dec
lahf
pushf
inc
scas
push
jp
dec
and
dec
jo
or
adc
sbb
repz
xchg
pusha
inc
xor
inc
shll
cli
mov
push
test
sbb
push
adc
scas
loop
add
out
mov
xchg
lods
fcompl
xlat
mov
cli
or
inc
hlt
mov
xor
in
aad
decb
test
add
lock
pop
jmp
cmp
nop
lods
mov
pusha
mov
scas
dec
repz
fisubrs
xchg
dec
stos
xor
xor
cli
call
xlat
jecxz
inc
or
or
xchg
inc
ds
imul
popa
ljmp
int3
pop
ss
rcll
adc
mov
push
cmpsl
ja
jne
pop
ret
rorl
aad
sahf
push
push
sti
rcr
pop
lds
sti
sarl
xchg
mov
pop
jbe
imulb
in
mov
clc
aaa
cmp
xor
pop
pop
mov
cli
and
lea
pushf
jae
insl
sti
repz
adc
inc
pop
insl
in
add
push
sub
outsl
mov
add
popf
xchg
data16
jbe
sub
cld
xor
sbb
and
inc
in
rcr
out
cmpsb
cltd
push
faddl
push
cmpsl
sbbb
lock
or
sbb
mov
push
and
jp
push
lahf
loopne
movsb
dec
inc
push
in
and
shll
out
jo
pop
mov
push
add
sub
pop
mov
and
dec
mov
out
fsubl
imul
mov
sub
sbb
aam
jae
mov
jno
add
cmp
icebp
mov
mov
shlb
push
xchg
xor
xchg
cli
adcl
loopne
std
stos
cld
add
lock
test
insl
jecxz
lret
push
scas
mov
and
aas
jb
or
and
int
mov
xchg
push
insb
sub
sbb
in
imul
icebp
popf
sbbb
rcrl
mov
sti
xlat
inc
sub
outsl
daa
lahf
outsl
cmp
mov
arpl
stc
sub
push
cmpsl
bound
lahf
add
mov
lret
cmp
xchg
push
icebp
into
jle
add
stc
mov
or
ja
pop
bound
test
int
xor
xchg
mov
outsb
cmp
or
mov
js
mov
cli
add
in
cmp
jmp
mov
hlt
cmp
in
inc
insb
mov
sbb
ret
dec
nop
into
jb
popa
stc
out
jecxz
jnp
add
test
cmpb
mov
push
int
sbb
jo
inc
push
cmp
sub
repz
pop
dec
les
xor
addr16
pushf
and
ficoms
or
stos
imul
or
in
pop
xchg
fldt
decl
adc
test
push
jae
and
shll
xchg
repz
ljmp
lods
rcl
mov
cmp
rcll
dec
mov
push
or
fwait
aam
neg
and
push
out
inc
ds
push
push
jnp
mov
imul
das
adc
subl
mov
cli
jecxz
adc
push
ja
jmp
and
push
divl
inc
mov
push
cmpsb
iret
mov
sub
add
jne
aad
sub
mov
es
or
sub
dec
jg
or
loope
pop
cs
das
mov
cltd
sbb
mov
inc
iret
ret
iret
lods
mov
out
add
or
outsl
data16
mov
adc
add
push
xor
iret
sbb
sub
push
out
jnp
inc
jp
pop
adc
or
push
daa
push
pop
mov
mov
scas
sahf
ss
jg
push
or
mov
sbb
xor
shlb
enter
or
pop
out
int3
mov
lods
mov
aas
fdivrl
rcrl
mov
faddl
xchg
add
xchg
xor
mov
sbb
pushl
sub
mov
fidivl
add
mov
mov
sarl
insl
jo
roll
in
add
pop
jle
mov
dec
xchg
cmpsb
rol
iret
mov
mov
lcall
dec
mov
test
lret
or
lret
push
lret
shll
dec
out
push
pop
cmpsl
arpl
std
in
dec
sarl
bound
pop
popf
aam
fidivs
int3
sbb
ljmp
pop
mov
popaw
movsl
pop
int3
pop
mov
cmp
mov
push
adcl
cmpl
dec
hlt
push
in
scas
or
pop
std
sbb
aas
shrl
fstpt
mov
lcall
clc
lea
in
sbb
mov
mov
mov
and
and
lock
cmp
iret
loop
mov
ja
mov
or
cwtl
daa
mov
in
cmpsb
xor
sub
std
repz
xlat
clc
les
out
clc
ficompl
cmpb
dec
push
add
das
loope
inc
adc
loopne
xchg
mov
inc
pop
inc
aad
fstl
mov
clc
add
leave
loop
mov
cwtd
pop
insb
cld
outsb
rorl
arpl
dec
repz
add
ds
inc
lds
jle
adc
xor
push
fwait
lahf
out
and
loopne
adc
and
rclb
fcmove
adc
js
xlat
call
flds
mov
mov
add
pop
jbe
testb
and
xor
lahf
add
or
clc
in
pop
movsl
das
jb
adc
or
sub
lahf
pop
inc
xor
jmp
pop
and
jno
push
inc
push
adc
fmull
cvtps2pi
loopne
addr16
cltd
jbe
fwait
out
arpl
xchg
push
and
in
mov
dec
jle
subl
mov
and
mov
pop
mov
pop
mov
pop
clc
jle
push
scas
arpl
fwait
xchg
push
test
pop
sbb
and
push
mov
or
icebp
pop
fisubs
outsb
pop
sbb
fsubrp
clc
jmp
daa
ds
gs
adc
shrb
cmp
roll
dec
test
xchg
jne
test
pushf
xchg
in
jle
push
cld
sub
shr
pusha
xchg
sbb
loop
mov
inc
cmp
mov
xchg
imul
les
mov
dec
pop
cltd
cs
sar
push
jmp
or
aaa
add
xlat
int
inc
mov
aaa
adc
inc
rcr
mov
dec
cmp
adc
mov
dec
mov
cmp
jae
xchg
sbb
sub
inc
je
out
mov
mov
add
movb
mov
cwtl
mov
mov
mov
mov
lods
pushf
dec
ljmp
test
movsl
mov
or
fdiv
mov
js
or
pop
xchg
call
xlat
mov
or
cmpb
sti
xor
inc
push
xchg
xlat
addr16
sub
das
es
rclb
adc
sbb
lods
ss
push
xchg
aam
push
add
inc
lret
mov
adc
pushf
test
push
add
out
out
push
lret
ss
in
popf
and
dec
mov
jg
jae
gs
mov
adc
cli
mov
test
xor
aaa
pop
lods
jns
aaa
out
shll
arpl
aam
in
xor
dec
sbb
jl
mov
in
jo
xchg
jb
pop
xchg
cmpsl
insb
sub
addb
pop
aam
enter
push
xor
or
jnp
sbbb
mov
cmpl
inc
push
mov
mov
cli
cld
push
gs
ljmp
hlt
aas
sub
inc
rol
insl
pop
stos
cmp
mov
add
hlt
lods
clc
xchg
inc
jle
int3
adc
mov
stos
jg
pop
and
aad
aas
clc
dec
ret
adc
cld
pushf
or
es
out
inc
push
xbegin
cmpsl
lea
je
popf
or
addl
jmp
test
ja
lods
jmp
mov
movsl
ret
jb
stc
mov
pushf
push
jbe
sarl
push
loopne
test
pop
pop
test
and
repz
outsl
push
std
push
out
in
pop
pusha
adc
insl
pop
and
notl
frstor
std
ja
stc
inc
mov
xchg
rorl
popf
cmpsl
mov
aad
sbb
aam
pusha
leave
adc
pop
cmp
push
pop
or
sub
je
add
jne
lret
mov
xor
pushf
pop
enter
and
push
mov
sub
leave
shll
out
daa
or
xor
fwait
jge
jmp
testl
dec
jo
outsl
lret
dec
out
cmp
test
adc
inc
mov
lcall
mov
enter
pop
int3
into
xor
jmp
ret
xor
dec
loopne
stos
imul
mov
insb
xchg
inc
jmp
pop
rclb
push
pop
mov
sbb
mov
aaa
or
adc
jo
add
and
add
getsec
aaa
pop
cmp
cmp
test
test
jae
leave
pop
inc
and
pop
adc
dec
cwtl
mov
fwait
adc
pushf
jecxz
cmp
xchg
pop
call
sbb
data16
cmp
push
xor
sub
xchg
lret
or
lock
cmp
add
les
push
or
aam
mov
je
repz
mov
xor
jle
push
add
mov
fistpl
les
push
lret
cmc
mov
movsl
xchg
dec
and
mov
mov
adc
add
ret
push
and
inc
push
test
shll
and
or
lds
mov
stc
pop
adc
mov
jge
xorb
repnz
cmp
out
xchg
test
or
arpl
pusha
test
clc
cmp
and
ss
push
mov
out
adc
loope
or
outsb
movsl
mov
cwtl
pop
dec
sub
insb
test
sarl
aad
repz
shrl
pop
pminub
xor
mov
aad
das
push
push
in
or
jns
rolb
cmpsl
lods
pop
lds
jg
or
ret
add
dec
aas
gs
out
sbb
insl
or
pop
push
pushl
sarl
insl
jge
sbb
sub
test
adc
or
pop
xchg
in
sub
inc
pop
orl
push
repz
xor
jae
adc
ss
pop
nop
in
outsl
dec
mov
xchg
out
call
mov
pop
scas
or
insb
mov
jp
jl
dec
pushf
mov
data16
xor
push
insl
in
in
xchg
mov
movsl
pushf
in
test
mov
mov
dec
cmp
inc
sbb
mov
mov
mov
inc
push
push
shr
or
sbb
ror
mov
imul
inc
sahf
xchg
inc
subb
inc
outsb
xchg
das
push
dec
loope
xor
loope
rclb
xor
mov
ficompl
movsb
ret
shll
das
lret
ret
imul
movsb
xor
lcall
cmp
adcl
scas
pop
cmp
pop
mov
xchg
xor
mov
out
outsl
stos
or
into
js
xchg
add
pop
gs
ss
inc
pop
loop
add
cmp
sahf
and
sbb
sbb
clc
push
and
ja
cmp
push
lods
pop
out
je
stc
push
inc
or
mov
xchg
cli
or
push
cltd
cwtl
push
pop
sub
fists
or
push
xchg
std
jne
popa
in
cld
ja
aas
fsubl
stos
mov
inc
adc
lret
in
mov
dec
ds
and
outsl
lock
inc
loope
sub
hlt
mov
lea
inc
aas
lods
inc
and
sub
cmpsb
das
adc
add
out
rcrb
jno,pn
and
dec
xchg
in
test
fcoml
out
pushl
addr16
test
in
xorb
int
jl
shrl
xor
xchg
rorb
test
push
incl
sbb
mov
inc
and
das
push
lea
mov
stos
add
inc
push
ret
xchg
jmp
push
dec
mov
aaa
mov
syscall
sub
push
push
fwait
xchg
fs
mov
cmp
dec
pop
popf
rorl
add
andb
xchg
mov
or
std
repz
mov
insb
dec
push
jmp
mov
mov
jbe
mov
lock
mov
sbb
jle
push
dec
xchg
scas
jo
sbb
cmp
bound
call
mov
jp
jge
fildll
and
mov
sub
pop
jle
mov
les
adcl
jbe
mov
xor
int3
nop
in
leave
adc
in
fistpll
outsl
jb
es
inc
call
sti
or
pop
negl
sbb
out
jmp
dec
inc
push
inc
fldl2e
or
std
mov
shll
or
cmpsb
lds
xchg
dec
xchg
fsubs
and
inc
jae
push
out
movswl
dec
dec
addr16
pusha
in
dec
jecxz
inc
jne
lods
arpl
cmp
push
pusha
lea
inc
xchg
jne
shrb
fists
cmp
int
xlat
fs
es
mov
pop
je
jecxz
inc
inc
push
jnp
mov
jp
jns
and
popa
scas
jno
sbb
das
inc
out
fisttps
dec
imul
aaa
or
jp
inc
push
push
repnz
icebp
test
jecxz
int
loopne
sub
stos
pop
add
lret
pusha
bound
das
jmp
mov
shll
inc
dec
int
outsl
xchg
push
sub
pop
sbb
popf
and
mov
dec
mov
clc
cmp
insb
inc
sub
push
hlt
ja
xor
dec
aad
divb
std
insl
clc
inc
mov
or
test
sbb
xor
mov
cmp
lds
lods
pop
inc
call
add
insl
jbe
xor
or
push
fs
dec
add
mov
mov
or
imul
and
mov
hlt
xor
mov
xor
jecxz
sbb
insl
xchg
dec
addb
iret
cmp
or
xchg
push
shrl
mov
outsb
pop
out
roll
gs
aas
movsl
or
mov
addl
and
inc
cmpsl
rolb
cmp
and
add
jbe
jne
lods
xchg
pop
orl
ret
inc
cli
sub
push
xor
pop
inc
push
xchg
mov
add
aas
sub
into
in
cwtl
sbb
popf
sub
jg
loope
mov
aam
xchg
cmp
rcl
fisubs
sub
std
jmp
push
test
adc
mov
movsl
inc
mov
repz
mov
push
scas
fmull
and
add
inc
dec
dec
scas
aas
arpl
mov
and
out
add
mov
sbb
sbb
push
ret
in
mov
cmpsl
popf
sahf
add
sub
popf
add
lds
aaa
scas
gs
push
sub
out
lods
js
movsl
mov
inc
out
hlt
xchg
pop
cmp
pop
out
add
lds
in
mov
addl
aaa
mov
jmp
je
sbb
and
std
lcall
aad
mov
into
xchg
movb
and
pop
push
imul
push
push
hlt
cmp
aas
sbb
jge
sahf
add
rcrb
bound
or
aam
mov
push
mov
push
sahf
pop
or
jle
ss
sub
xor
sub
ret
mov
jno
and
xor
xchg
sbb
cli
in
mov
jp
push
loope
call
ret
ret
gs
ja
fs
jmp
daa
pushf
ss
mov
mov
icebp
pusha
mov
cli
das
lock
stos
imul
jae
outsl
xchg
shrb
mov
popa
and
dec
jb
mov
pop
cs
pop
stos
xor
out
scas
or
add
jb
push
dec
pop
arpl
dec
mov
out
pop
cmpsl
call
mov
jp,pt
inc
dec
dec
inc
call
sbb
ja
xchg
xor
ds
call
adc
xchg
cwtl
and
test
int
cmp
test
add
lock
outsl
sub
int3
mov
pop
ja
rclb
lcall
test
mov
mov
adc
popf
into
out
aam
jge
imull
add
sub
xchg
sub
pop
xor
mov
or
cmp
lods
mov
mov
sbb
jbe
lods
movsl
dec
mov
sbb
int3
mov
xor
scas
xchg
aaa
xchg
mov
hlt
mov
insb
mov
inc
jb
movsl
push
adc
in
sbb
and
sub
xchg
mov
jns
push
inc
nop
mov
das
daa
pop
cs
add
mov
xchg
hlt
xor
dec
into
adc
insl
fdivl
clc
popf
jmp
xchg
out
mov
sbb
sub
in
inc
push
movsb
inc
add
dec
sub
popa
add
inc
aam
mov
mov
dec
push
arpl
sbb
push
xchg
inc
jnp
or
rep
dec
mov
dec
cltd
mov
shlb
push
lahf
rorb
fs
mov
or
leave
and
mov
std
cmp
inc
and
out
int3
and
jle
push
rorb
xchg
movsl
and
xchg
cwtl
fisubrl
movsb
xor
pop
fmuls
xor
push
test
mov
pushf
xor
es
mov
js
sti
decl
push
scas
aad
xchg
sbb
hlt
popf
mov
pop
mov
fstpl
add
out
movsl
mov
xorl
sbb
adc
mov
ret
rcll
movsl
jge
push
or
fs
pop
add
mov
xor
or
divl
push
xchg
pop
out
iret
jae
fstpt
mov
loope
jl
jmp
xchg
movaps
movsl
pop
push
pusha
stc
cmpsl
xchg
scas
inc
in
sub
ret
enter
fists
push
repnz
sub
mov
lahf
cmp
and
insb
adc
cmp
mov
sti
mov
push
ret
mov
iret
adc
js
sbbb
rcl
pop
adc
popa
dec
dec
mov
pushf
or
fmull
out
cmpsb
sbb
and
push
ja
mov
cmp
or
mov
cmp
stc
xor
in
or
and
clc
sub
lock
jmp
fcmove
cmpsb
out
lods
sbb
inc
fcoms
mov
and
movsl
cwtl
or
xchg
mov
ds
fisubl
rorb
cs
or
adcl
or
cmpsl
pop
pop
cmp
xchg
cli
inc
add
cli
jmp
out
adc
lahf
in
jns
sahf
pop
push
push
inc
push
cld
sub
iret
rcr
mov
rcll
bound
aam
sbb
mov
mov
pop
cmp
insl
cli
clc
cli
insl
dec
data16
popf
ret
nop
sbb
int3
ret
push
subl
sbb
fdivp
push
and
nop
dec
add
scas
data16
outsb
lea
sub
cld
outsl
fisubs
movsl
mov
xchg
sub
xor
popa
mov
test
adc
sbb
push
jbe
daa
iret
mov
dec
jns
outsl
shrb
push
fsubp
aad
rdpmc
fldl
cmp
stos
mov
sbb
xlat
mov
es
and
sub
es
fstpl
or
js
mov
outsb
dec
sub
mov
leave
xchg
cli
mov
das
mov
inc
or
movsl
pop
test
jbe
inc
xor
cmc
xchg
adc
insl
mov
daa
outsl
and
adc
outsl
or
fisttpll
sub
js
mov
fwait
daa
mov
inc
mov
push
sar
lahf
and
push
add
int3
aas
sbb
add
dec
inc
cmp
outsb
add
scas
loopne
punpckhwd
or
cmpsb
cmp
int3
data16
scas
mov
and
clc
outsl
stos
mov
into
fcom
movsb
test
push
stos
in
outsb
ss
mov
sarb
in
test
out
sub
sub
xor
mov
aad
into
jns
xor
fldt
pop
daa
sub
jb
cmp
leave
scas
cld
lock
push
scas
rorl
aad
aas
hlt
in
push
ljmp
pushf
push
push
arpl
lods
xchg
xchg
adcb
adc
pop
outsl
xchg
and
iret
loopne
lock
mov
lea
jns
shl
repz
fwait
xor
mov
cmp
jno
jle
hlt
jg
fucomi
into
xor
data16
mov
push
aas
lret
popa
test
jns
cld
bound
pop
cmp
sub
sarl
fcmovnbe
adc
mov
add
imul
iret
stos
xchg
adc
andl
inc
or
popf
jl
addr16
sar
pop
das
push
mov
mov
enter
xor
ret
sbb
inc
lods
xchg
outsb
in
jb
or
mov
mov
clc
inc
stc
call
or
push
ds
lods
sub
outsl
in
push
or
aaa
xchg
sbb
add
sub
pop
lret
or
mov
jae
sub
pop
dec
and
mov
sbb
inc
js
mov
adc
pop
mov
xchg
out
testl
arpl
aaa
cmp
dec
jmp
or
xchg
mov
jnp
pop
aam
or
popl
loop
cli
into
mov
mov
or
arpl
pop
lds
lcall
addb
sbb
push
scas
xor
jl
push
and
stos
jmp
imul
fwait
cmp
xlat
mov
cmp
fadds
mov
addb
xchg
mov
cwtl
test
inc
pop
mov
xor
mov
fisttpl
inc
imul
inc
xor
rcrb
push
leave
imul
test
ss
fstpt
cmpsl
movsl
push
lahf
adc
and
repz
xor
pop
mov
je
inc
adc
fsubrl
jmp
jecxz
out
mov
daa
cmp
repnz
insb
out
push
cmp
xlat
sub
xchg
shl
jbe
popa
mov
mov
sarl
inc
mov
push
fs
loop
sub
xor
popf
inc
jecxz
jle
adcl
pop
int3
sub
les
rcrl
mov
dec
ss
test
lods
shlb
sbb
sub
in
loope
xlat
sar
mov
hlt
out
jecxz
std
test
ficoml
dec
stc
jle
fucompp
and
es
xchg
enter
mov
lods
in
push
inc
xor
xchg
jae
int
push
cmp
out
pop
xchg
fldl
dec
hlt
pop
fcmovbe
lret
stos
xchg
lods
call
icebp
pop
mov
jae
xchg
mov
mov
mov
bnd
cmp
lods
scas
pop
cs
outsb
jge
adc
sbb
jno
daa
or
adc
test
aaa
out
push
aam
jmp
rcll
xchg
mov
call
jns
addr16
rorl
xor
pop
xchg
sub
std
stc
dec
push
ljmp
lret
cmp
fisttpll
adc
mov
fiadds
mov
cmpsl
lret
cmpsb
or
idivl
andb
push
test
jle
cmpb
dec
adc
mov
mov
jmp
pusha
cltd
dec
push
cmp
scas
leave
mov
pop
pop
iret
jb
in
xor
call
pop
fdivl
pop
loopne
cwtl
int3
jmp
das
mov
popa
dec
bound
clc
sub
mov
movsb
and
pushf
and
fmuls
mov
jp
mov
mov
push
call
adc
stos
in
ret
fdivs
pop
fwait
insl
into
pushf
imul
lret
ja
add
and
in
add
add
mov
inc
add
in
jg
popf
imul
push
xchg
and
and
nop
push
xchg
or
xor
pop
dec
test
popl
add
mov
ds
mov
lods
push
fnstsw
mov
dec
inc
sbbb
adc
rcll
mov
idivl
out
mov
cltd
ret
subb
xchg
pop
and
nop
inc
mov
xchg
loop
jmp
xorl
ss
int3
dec
test
mov
mov
les
ret
mov
jbe
scas
mov
jge
das
jne
mov
fmull
sbb
jbe
adc
in
push
test
cmp
xor
cmc
lock
dec
xor
pop
stos
push
add
sbb
dec
pop
cmp
clc
popf
pop
inc
dec
inc
test
je
xchg
sub
pop
cmpsb
sub
in
pop
jae
ret
ss
pop
stos
jno
ss
or
lahf
and
stos
mov
xor
sbb
cmp
xchg
sub
xchg
add
scas
mov
lcall
and
das
xchg
or
repz
mov
cld
mov
jnp
pop
mov
cmp
push
add
ja
out
cmp
add
jb
push
int
lods
cmp
mov
mov
push
xchg
dec
fdivrl
inc
iret
hlt
jno
leave
cli
gs
cmp
cmpsl
stc
lock
xchg
fldln2
sbb
or
ror
mov
insb
mov
inc
mov
es
aam
mov
mov
cmp
mov
ror
sbb
rol
mov
add
addr16
ret
push
xor
mov
pop
stos
mov
push
stos
xor
repz
icebp
xlat
hlt
sahf
mov
mov
enter
jg
sbb
movsb
mov
xchg
pop
push
fwait
mov
sub
insl
rep
xlat
loope
lret
ds
or
outsl
and
sub
in
test
test
insl
adc
sbb
fstpt
push
mov
inc
push
icebp
stos
push
mov
cmp
shll
iret
arpl
lods
ret
mov
aam
inc
mov
push
pop
mov
std
cmp
adc
test
mov
or
mov
push
or
mov
jecxz
push
insl
push
pop
jne
je
mov
fwait
sbb
inc
sbb
push
dec
xchg
pop
or
inc
mov
lret
xor
adc
jle
jo
push
daa
int3
sub
xchg
lods
mov
adc
push
push
call
lret
push
xor
xor
js
in
imul
jbe
mov
call
mov
data16
push
pop
pop
xor
shlb
dec
push
pop
out
or
hlt
shrb
xor
call
mov
pop
rclb
fdivl
enter
out
stos
xchg
es
das
sbb
mov
scas
xchg
pop
pop
call
jb
jae
pop
addr16
xchg
pop
cli
call
mov
pop
data16
outsb
icebp
jo
mov
sbbl
scas
and
jo
mov
push
ds
cmpsb
sbb
cmp
jns
clc
add
popa
adc
sub
cmp
js
aas
jnp
out
dec
aad
cs
mov
mov
test
popa
aaa
or
sub
xorl
imul
fidivrs
adc
lahf
jae
scas
loope
or
pop
fisttpl
sub
loop
xor
lods
ja
insl
or
xchg
cs
leave
shlb
scas
cltd
ret
push
xchg
pop
inc
xchg
jb
inc
fdiv
ret
sahf
int3
add
dec
lret
std
aaa
jp
jne
icebp
pop
out
ss
dec
jg
adc
xchg
rol
subb
aas
lret
push
pop
ljmp
rcrb
imul
imul
loopne
roll
jno
inc
daa
lret
popf
cltd
mov
xor
push
xlat
in
mov
xorb
aaa
jo
xchg
xchg
cli
mov
sub
mov
push
or
jb
sub
xchg
movsb
push
mov
orb
ljmp
add
inc
roll
lock
cmp
out
je
loope
sti
push
iret
fwait
xchg
adcl
jmp
dec
mov
fadds
jmp
testb
mov
sahf
arpl
inc
flds
jne
test
popf
enter
fsubrs
stos
pop
aam
cmp
xor
les
mov
cmp
mov
out
test
in
roll
xor
cmp
and
pop
jp
and
mov
push
cwtl
arpl
pop
sub
stos
jno
shrl
rolb
and
cmc
out
inc
and
adc
fnstenv
js
add
and
xchg
nop
aaa
test
movsl
xchg
adc
sub
inc
jecxz
mov
gs
or
push
mov
or
inc
jne
fisubrl
movsb
push
jg
add
mov
or
enter
mov
rorb
test
out
mov
pop
or
and
insb
xchg
hlt
xorl
jg
int3
jbe
insb
mov
jo
and
inc
mov
int
xchg
leave
das
test
es
enter
mov
pop
mov
fs
sub
dec
int
out
adcb
adc
mov
movl
jecxz
mov
cwtl
cmp
adc
push
xchg
test
lods
loop
inc
cmp
lds
xchg
sbb
add
pop
cmp
mov
push
cmp
add
xor
push
inc
xchg
cmp
scas
test
xchg
jecxz
adc
xor
mov
and
in
pop
pusha
and
sub
add
dec
lea
mov
inc
aad
hlt
and
inc
data16
or
or
jb
fcomps
inc
jmp
out
rcrb
jnp
pcmpgtw
sbb
mov
mov
imul
push
xchg
out
ss
repnz
pop
jb
int
movsl
add
mov
testb
inc
fs
dec
adc
sbb
mov
rorl
mov
xchg
pop
std
mov
cwtl
add
adc
stos
sub
add
loop
or
ljmp
outsl
mov
mov
rorb
xchg
test
daa
push
ret
insb
pop
mov
popa
mov
jb
in
sti
lahf
inc
ror
inc
outsl
insl
out
sbbl
jecxz
sbb
add
sar
std
xchg
adc
dec
xor
mov
cld
sub
add
lret
adc
add
ret
lcall
mov
or
jae
std
inc
daa
mov
push
mov
xchg
jecxz
inc
push
mov
fdivl
mov
sub
adc
mov
or
hlt
lods
push
cs
stos
inc
stos
xorps
push
xor
add
mov
cmpsb
ror
and
shrb
popl
ja
inc
mov
js
inc
nop
and
jmp
aas
xchg
sbb
in
sub
fidivrl
mov
fwait
xlat
xor
mov
cmp
mov
fsubrl
xor
in
jo
movsb
mov
das
popa
nop
iret
or
or
mov
cltd
sbb
jle
and
mov
lock
sub
int
xor
test
add
negb
js
or
mov
mov
shlb
or
and
push
sti
xor
jo
mov
es
test
dec
int
je
fdiv
lcall
pop
add
pop
pop
jne
xor
sbb
testb
push
std
or
mov
adc
test
jns
ss
dec
fnstenv
dec
push
or
xchg
pusha
or
in
roll
int3
jae
mov
xchg
pop
fsub
test
outsl
dec
inc
adc
jge
inc
dec
mov
test
xchg
jne
sub
ds
dec
lds
cmpsb
pop
ljmp
jo
icebp
dec
ret
mov
shlb
push
or
outsb
loope
test
out
pop
jle
sbb
fnsave
loop
sarb
nop
filds
les
xor
outsl
jo
pop
add
aam
cmpsl
inc
fstl
bound
arpl
or
hlt
pop
mov
repnz
xchg
cld
popf
mov
in
sub
push
das
mov
jle
mov
sub
jae
ja
inc
popf
cmp
mov
leave
xor
insb
cmpb
pop
or
mov
mov
mov
int3
mov
mov
mov
test
or
inc
adc
adc
jnp
sarb
jge
rolb
mov
cmovbe
outsl
cmp
fadds
push
adc
cmpsb
sti
frstor
out
xchg
in
xchg
push
dec
pop
inc
inc
int
out
les
out
adc
mov
push
fsubrs
push
fidivrs
insb
imul
lcall
daa
outsl
or
iret
jo
cmpsl
not
aaa
fsts
mov
sbb
daa
push
loopne
and
and
dec
xchg
push
hlt
xchg
or
movsl
int
outsl
loope
jl
popa
lods
xor
out
insb
xchg
jo
rolb
repz
ret
ljmp
mov
dec
xchg
cli
push
sub
mov
mov
push
jae
dec
mov
or
rcll
add
sahf
ret
cmpsl
xor
or
jmp
mov
mov
gs
fsub
jne
cmpsl
aaa
dec
shlb
adc
pop
push
leave
push
pusha
jns
or
mov
jno
or
in
or
mov
adc
push
jns
push
inc
int
sbb
inc
daa
jbe
aad
sbb
push
pop
dec
cmp
push
fcoml
mov
idiv
sub
xor
xorb
mov
jne
jle
in
cmpsb
inc
repz
inc
xchg
insl
dec
or
lock
pop
test
pusha
xchg
adc
pop
or
xor
push
xor
inc
stos
push
ret
popf
incl
fwait
lea
shrl
js
push
adc
pop
in
push
jbe
shr
sub
int3
daa
in
xorb
xchg
scas
push
test
sub
in
and
sub
xor
mov
loopne
sbb
das
add
sarl
nop
out
add
ds
sbb
out
cli
push
lcall
mov
call
cmp
ds
pop
xor
into
test
push
add
test
and
imul
setne
fstl
subl
xchg
mov
xor
cmp
cmp
out
loope
int3
add
mov
movsl
inc
fcompp
inc
or
fstl
mov
sub
scas
jl
push
popa
rclb
lods
cld
xchg
outsl
ret
movsl
fcomip
jecxz
pop
lcall
stos
pushf
int
add
adc
inc
and
cld
aas
jno
adc
mov
jbe
movsl
mov
xchg
mov
aaa
adc
dec
cmp
and
xlat
data16
xchg
push
lahf
push
ss
addl
jecxz
fidivrl
dec
xor
int
lods
pop
mov
inc
test
adc
xorps
pop
test
loope
xchg
sbb
out
mov
ror
sbb
test
sti
pop
shl
cmp
or
scas
mov
cwtl
cs
notl
mov
jns
clc
push
pop
mov
inc
mov
std
mov
xchg
xchg
xchg
sbb
pop
dec
lods
jmp
push
and
mov
push
aad
mov
cmp
sbb
inc
loope
fisubrs
lea
push
xchg
push
test
dec
add
xchg
ror
push
adc
test
cmp
sbb
rorb
mul
jb
inc
sbb
out
adcl
imul
mov
xor
arpl
data16
or
sub
cmpsl
add
push
add
adc
pop
out
jne
out
adc
cmp
icebp
in
push
adc
inc
mov
xorl
scas
lahf
in
loope
and
or
cmp
pushw
or
sti
mov
shrb
inc
ret
test
pop
dec
cmp
stos
bound
out
into
adc
inc
mov
pop
sahf
xchg
lea
xor
cld
pop
dec
pop
scas
cmp
add
xorl
aad
mov
mov
jns
push
test
lods
cli
insb
mov
stc
pusha
mov
fcoml
jecxz
andb
mov
cmp
xor
es
fldl
jl
push
ret
lahf
inc
shlb
imul
adc
inc
insb
mov
ja
mov
ret
xchg
int
cmpsb
mov
sub
hlt
jg
pusha
sbb
lods
cmp
orb
mov
test
xchg
cmp
jle
or
les
fs
pop
stos
mov
repnz
mov
and
jecxz
xor
add
dec
daa
popa
jae
test
sbb
mov
in
out
sub
mov
popf
add
setp
pop
pop
leave
pop
adc
adc
aam
jo
decb
dec
mov
fstl
lea
jge
jne
fcoms
inc
dec
push
inc
lret
pop
in
lds
mov
shl
cld
jns
add
push
imul
fcoml
enter
hlt
and
fnstcw
add
and
cmpsb
lods
hlt
ds
addb
push
aas
sbb
cmp
loop
xchg
es
lret
jmp
inc
popa
rep
push
dec
push
out
movsb
fisttpll
cmp
cmp
jle
mov
loop
add
lcall
add
push
pop
pop
test
inc
hlt
xchg
pop
mov
xchg
mov
test
or
and
mov
pop
mov
mov
add
cmpsb
cmp
es
jp
xor
ljmp
lock
cmpsl
popa
out
xchg
pusha
les
push
xchg
movsb
stos
je
jl
mov
jnp
dec
loopne
out
and
xor
dec
dec
inc
adc
scas
dec
and
out
cmpsb
inc
movsb
cli
sub
pop
inc
adc
mov
insb
arpl
cltd
cs
jns
jno
add
arpl
lea
jecxz
jo
scas
xlat
mov
xchg
dec
push
out
mov
xchg
aam
xor
mov
rol
sbb
add
lock
fstpt
out
movsb
je
dec
xchg
out
lock
push
sub
pminub
cli
pushf
sti
dec
daa
push
lea
push
push
gs
pop
out
add
repnz
sub
push
sbb
sbb
adc
sub
adc
dec
inc
idivl
sbb
pop
icebp
lods
ret
nop
int
jge
fs
enterw
fcomip
clc
pop
das
outsl
jne
rcrl
loop
bound
je
into
sbb
int
movsl
sub
sbb
cmpl
sub
aam
mov
mov
ret
pop
cmpsl
and
lock
adc
mov
leave
xchg
scas
add
pop
push
adc
jns
jno
jbe
int
enter
and
lock
loope
add
sub
push
inc
push
xor
sub
mov
loop
sub
lret
mov
jo
push
add
aad
das
jmp
xlat
fisubl
icebp
sbb
sbbl
aad
imul
or
mov
mov
pop
and
and
sub
xchg
gs
push
ds
fisttpl
jbe
in
sbb
out
fidivl
cmp
roll
xchg
or
cmp
hlt
mov
bswap
fwait
sbb
adc
and
and
mov
filds
sub
aas
push
cmc
lods
dec
les
fdiv
or
cmp
jle
outsl
dec
rcll
mov
xchg
dec
stos
hlt
sub
pop
xorl
or
push
rcll
dec
cmpsl
orl
push
sbb
cltd
mov
lret
lahf
shrl
mov
mov
sbb
popa
cmp
adc
lret
push
adc
sbbl
adc
sbb
cmpsb
ss
sub
lahf
fcomi
cmpsl
repnz
push
jbe
test
out
into
jge
aaa
push
mov
cmp
shlb
add
mov
mov
test
std
inc
into
cmp
lods
jne
pop
xor
dec
in
outsl
call
or
mov
jb
sub
aam
shrl
jle
mov
out
fimull
out
pop
and
mov
adc
mov
repz
les
jg
mov
and
mov
fisttps
shlb
jmp
loopne
ljmp
mov
scas
scas
scas
daa
arpl
jg
andl
out
js
push
inc
mov
icebp
cmp
xchg
pushf
gs
sbb
rcrb
mov
lods
test
jg
insb
fcoms
popa
loopne
pop
in
cltd
fs
dec
add
sub
adc
lret
xchg
cmc
or
jmp
push
repz
mov
sahf
rcl
jae
cmp
pop
xchg
inc
push
mov
mov
shlb
mov
int
addr16
popa
or
lods
inc
ds
repnz
xchg
pop
call
insb
push
mov
adc
flds
arpl
xchg
dec
mov
sub
add
ja
push
xchg
mov
pop
xchg
mov
cmp
in
in
out
sbb
lret
sbb
insl
fistl
jmp
ds
int3
sub
into
cmp
xchg
sbb
adc
loope
mov
jg
icebp
mov
or
int
arpl
sub
es
stos
dec
dec
or
into
stc
pop
or
jne
and
xchg
jae
adc
test
cs
and
decb
rcl
addr16
and
sahf
cmp
cmpxchg
data16
cmp
mov
shr
add
dec
outsb
dec
jbe
sbb
in
arpl
cmp
loope
lret
sti
ds
das
mov
add
ror
sub
push
sub
jae
jno
push
add
lcall
andb
cmpsb
inc
cmpl
pop
movsb
inc
loop
mov
add
pop
test
push
cs
movsb
outsl
mov
rorl
sti
in
test
mov
out
cmp
jmp
push
mov
lods
xor
adc
lods
dec
andnps
mov
inc
imul
stos
lods
jge
mov
mov
xchg
or
insb
pop
ret
lahf
sbb
push
or
or
arpl
in
aad
sbb
mov
icebp
xchg
out
idivl
lret
in
popf
js
lods
or
sub
into
cmp
inc
fisttpll
sbb
mov
push
sbb
jae
pop
xor
cmpsb
loope
cmp
push
push
pop
add
std
jno
mov
aad
pop
mov
jmp
dec
sub
jnp
adc
cmp
ja
cltd
leave
jg
lahf
adc
lret
mov
xor
mov
add
inc
ss
sub
lahf
fwait
sarb
or
int3
ljmp
mov
mov
xchg
or
push
lods
mov
dec
rcrb
push
jg
repnz
fs
fildl
mov
cs
ss
out
jbe
test
jle
dec
mov
movsb
testb
jb
outsl
add
ja
mov
lret
cwtl
pop
dec
prefetchnta
and
pop
out
movb
cmpsb
jo
out
push
mov
dec
sub
out
out
adc
xchg
repz
rcrb
addr16
loopne
jnp
sbb
adc
aam
stos
mov
or
dec
aad
sbb
adcb
imul
push
dec
mov
push
cli
mov
cmp
addl
imul
xor
rcrb
cmp
addr16
andb
into
jle
pop
out
mov
lods
cmp
rcll
jecxz
out
dec
das
nop
int
jb
ljmp
testb
mov
xor
cmc
fs
inc
std
mov
xchg
xchg
cmp
mov
loop
daa
int3
xor
outsb
mov
pop
push
imul
rorl
jmp
sbbb
clc
push
xor
shrl
jo
loopne
mov
rcrl
jmp
stos
pop
das
imul
pop
std
bnd
add
jg
imul
lret
cmpsb
lret
and
push
dec
xchg
jne
lea
adc
push
test
mov
xchg
int
bnd
pop
dec
jl
nop
dec
xchg
push
addl
cmp
jecxz
pop
addr16
mov
int3
les
xor
push
mov
mulps
test
fisubs
mov
pop
rorb
add
pop
popa
shrl
mov
lods
fmull
in
icebp
cli
ss
cmp
int
sbb
sti
sub
or
test
mov
lods
sbb
dec
add
cs
in
push
fmulp
leave
aas
loop
iret
or
fiadds
mov
scas
dec
push
lock
sbb
push
test
cmp
jb
fcmovne
jne
or
adc
clts
or
jp
jge
cmpsl
mov
inc
lods
add
ret
sbb
rcl
cmp
mov
das
adc
popf
es
sbb
test
loop
mov
push
adcl
sahf
add
jl
lret
out
lods
mov
bound
jge
ret
mov
sbb
push
push
add
hlt
sahf
mov
enter
sarl
out
mov
pop
push
pop
xchg
cmp
jae
clc
cmc
imul
fstps
hlt
subl
add
inc
push
pop
and
aad
mov
adc
lcall
push
lret
pop
cmpsb
repz
push
les
jle
and
out
lock
sub
rcl
arpl
mov
sbb
addr16
pusha
sub
or
icebp
divb
cmovno
jno
sub
pusha
push
pop
pushf
ljmp
fiadds
stos
add
or
xchg
push
in
adc
jmp
mov
fsubr
xor
lods
cmp
or
testl
inc
mull
add
dec
push
int3
lock
paddw
sahf
cmp
mov
negb
mov
pop
push
sub
mov
clc
inc
or
adc
sahf
xor
ffreep
mov
inc
les
dec
test
mov
mulb
repnz
xor
in
shlb
ret
push
push
shll
cmp
push
mov
ret
mov
jp
cmovne
jp
dec
fwait
test
push
and
push
or
and
lock
and
mov
imul
into
lock
xor
jo
pop
sbb
lret
inc
or
xor
push
push
xor
push
movups
add
sub
pop
jne
arpl
orl
mov
mov
stos
les
jmp
pop
fstl
xchg
js
loopne
mov
add
in
ret
ss
clc
lock
sub
push
into
or
into
inc
sti
bound
ss
sahf
dec
pop
mov
or
add
nop
cmpsl
or
push
jg
pop
xor
jecxz
cmpsb
aaa
jbe
aaa
jp
dec
dec
movsl
inc
mov
xor
mov
fwait
shrl
sbb
mov
pop
mov
mov
push
xor
negb
daa
test
lods
unpckhps
aam
mov
rorl
insb
jnp
jle
jecxz
ficomps
nop
xchg
xchg
cmc
fdivl
movsb
pop
arpl
das
rorb
pop
mov
rcrl
stos
or
lahf
dec
jo
pusha
sub
repz
popf
jo
arpl
adc
shll
jge
addr16
jp
das
push
rorb
inc
mov
adc
repz
int
sbb
int
dec
loop
loope
int
nop
xchg
jo
cltd
push
cmp
movsb
lods
sub
inc
xor
and
inc
pmaddwd
xor
add
jecxz
add
stos
xchg
into
xchg
cli
leave
daa
je
inc
lock
jns
mov
fcomip
test
mov
ljmp
aad
pop
jg
je
add
fldcw
icebp
stos
les
clc
jge
sub
stos
nop
mov
jg
or
mov
push
mov
cmpsb
test
int3
sbbl
dec
sub
push
mov
imul
cmp
outsl
fwait
xor
test
in
cmp
mov
jbe
push
ss
test
fildl
or
cmp
jle
and
iret
test
push
loop
mov
lods
xchg
cli
lds
jmp
add
loop
lock
pop
mov
inc
cmp
mov
xchg
jmp
and
push
and
push
adc
jmp
pop
pop
and
pop
adc
mov
push
sub
ds
repz
outsw
ret
and
leave
mov
xchg
mov
push
test
sub
fwait
xchg
repz
loope
and
pop
xchg
lds
pop
mov
add
enter
test
mov
test
pusha
mov
cwtl
jp
fiadds
pushf
flds
arpl
aas
test
push
enter
not
fs
in
jb
xchg
stos
add
sub
pushf
cmp
sub
int
or
sarb
lock
sub
sub
popf
cmp
jle
lock
xchg
leave
dec
icebp
jmp
cmpsb
das
leave
pop
cli
fldcw
jecxz
rolb
cmpsl
movsb
xor
addr16
scas
push
sub
mov
in
or
pushf
adc
cmpb
std
push
inc
imul
test
push
xor
sbb
adc
jmp
lret
push
nop
xchg
or
js
xchg
aaa
jo
and
push
decb
sarb
jle
lds
mov
out
lods
ficompl
dec
add
pop
gs
idivl
mov
rcrl
lea
xchg
neg
dec
pop
xchg
pop
fidivrs
imulb
or
jecxz
sti
and
pop
xchg
data16
pop
arpl
mov
int
sub
inc
movsb
movsb
testb
sub
jns
mov
ret
rorb
repnz
sbb
imull
cmp
test
sarl
cmp
pop
enter
inc
adc
xchg
cld
mov
ret
clc
dec
int3
pop
or
push
jbe
push
jl
nop
dec
jo
and
cwtl
addr16
push
lea
dec
enter
leave
sbb
arpl
divl
aaa
adc
lcall
xchg
imulb
mov
bound
mov
mov
dec
into
ficompl
jns
xor
dec
jle
jg
cmp
jecxz
xor
cmp
shr
xlat
stos
xchg
push
fdivrs
pop
popa
inc
ss
ret
inc
adc
repnz
lock
fs
sahf
insl
int
lods
cmp
mov
mov
inc
test
mov
mov
jge
jl
xlat
mov
xchg
mov
movsl
in
test
rcrl
cmp
sti
nop
adc
cli
xlat
out
divps
out
jecxz
gs
roll
jp
mov
jmp
nop
mov
mov
adc
lret
daa
cmp
push
xlat
jmp
add
movsl
push
xorl
jae
ss
dec
xchg
cmp
into
aad
cmp
in
fldt
inc
mov
mov
arpl
sbb
xchg
pop
push
pop
sahf
shl
jne
data16
sahf
inc
aaa
out
and
std
hlt
popf
fstps
ftst
out
push
popf
pop
pusha
xor
pop
mov
shrl
int3
rcrb
sbb
into
lods
lahf
inc
rclb
scas
or
lcall
jnp,pt
ja
xchg
add
mov
jmp
cwtl
leave
cld
dec
mov
xor
pop
and
sub
cmp
bound
ret
jne
repnz
adc
xlat
lods
inc
loop
and
inc
pop
outsb
mov
or
xor
xchg
cmpl
loopne
leave
cli
inc
imul
mov
inc
mov
shll
mov
jmp
movswl
mov
sahf
loopne
xor
dec
dec
push
add
add
in
pop
icebp
shlb
xor
or
mov
sbb
inc
enter
filds
and
pushl
stc
scas
mov
dec
out
arpl
scas
fnstsw
dec
ss
in
sub
mov
adc
pop
push
mov
aas
jle
das
mov
fsts
add
lahf
scas
or
inc
jle
sub
xor
insb
xchg
cmpsb
mov
cs
in
mov
leave
in
ror
icebp
sub
pop
add
push
jge
xchg
popf
cmpsb
cmp
iret
xor
inc
mov
in
loope
rolb
and
imul
jecxz
adc
hlt
inc
idivb
repz
dec
int3
add
imul
jl
aad
jg
outsb
mov
pop
mov
aad
je
or
dec
xor
sbb
add
movsl
jecxz
aaa
jne
shlb
fsubrs
mov
fwait
push
js
dec
mov
in
mov
xor
mov
ljmp
add
cld
enter
dec
push
or
fsubs
loop
push
jecxz
hlt
mov
in
fs
push
cmpsb
push
pop
aaa
add
dec
je
addr16
iret
gs
stos
cmp
or
xor
lret
into
lds
adc
sbb
sub
rcrl
out
clc
sbb
push
sub
insb
mov
mov
mov
movsb
ret
sub
aam
pop
cmp
repz
pop
ss
sub
stos
ficomps
pop
insl
inc
add
rclb
and
pop
rclb
dec
mov
cmpb
cli
fcmovb
sbb
xor
inc
mov
hlt
jae
js
sub
in
cmp
scas
cmp
cwtl
loop
push
movsl
mov
push
jle
movsb
or
in
sub
test
ret
cmp
xor
std
int
mov
pushf
jg
leave
add
cmpl
jae
in
or
cmp
ret
aaa
xchg
add
sbb
insl
jg
xchg
jl
shll
sbb
sub
cmpsl
sbb
xchg
jno
popa
mov
cmc
insl
sub
sub
pop
std
flds
inc
aas
mov
xor
and
sarl
lods
int3
dec
fwait
shrl
js
mov
sbb
pop
adc
inc
fisttpl
out
pop
hlt
les
mov
jnp
sub
scas
mov
cmpsl
ss
lahf
pop
aad
or
clc
mov
dec
mov
push
pop
mov
js
mov
push
and
mov
mov
imul
inc
or
cmp
lcall
xchg
stos
outsb
test
mov
adc
adc
mov
fwait
xchg
repz
xor
ret
ss
scas
pop
lcall
mov
mov
notb
push
divl
adc
enter
icebp
into
pop
outsb
bnd
dec
cmp
popl
fidivrl
icebp
adc
sub
sarl
arpl
dec
aam
xlat
pop
bnd
and
js
xchg
in
les
sbb
mov
rolb
das
adc
stos
sahf
scas
mov
stos
aas
outsl
rcll
pusha
sbb
icebp
jb
mov
jbe
xchg
adc
lret
sti
out
push
inc
xchg
repnz
lock
rcl
dec
or
jle
and
push
xor
std
mov
jge
sbb
jne
lods
jl
xchg
push
bound
mov
stc
adc
addr16
popl
or
cli
push
jno
xchg
mov
int
sbb
push
xchg
and
jge
inc
mov
cmp
lods
pop
mov
sub
fnstenv
outsb
sbb
add
xchg
mov
fisubs
jmp
daa
addr16
stc
jecxz
jle
das
cmpsb
ss
clc
sahf
push
xor
pop
arpl
daa
push
fadds
mov
lods
fadd
test
pushf
dec
push
push
jecxz
incl
xchg
inc
cmp
jb
sarl
popf
pop
push
mov
mov
mov
sti
iret
movl
jns
into
sti
sub
outsl
sbb
enter
mov
test
cli
lahf
jl
xchg
xchg
hlt
pop
cmp
sbb
int3
sbb
out
mov
push
jno
int
in
ds
mov
cmp
aaa
sarl
jns
pop
ss
aam
js
sub
xor
stc
mov
push
inc
inc
push
orb
inc
or
movsb
or
stos
iret
mov
xor
xchg
sbb
inc
fidivrs
xor
push
jg
inc
or
push
add
xchg
add
clc
push
jle
shrb
imul
push
stos
xor
or
orb
xlat
in
into
xor
icebp
fistps
adc
mov
ss
jp
cmp
or
mov
mov
shlb
add
xchg
rorl
aaa
addr16
cmp
mov
sahf
mov
cwtl
leave
adc
in
pop
and
add
add
adc
iret
sar
sti
mov
push
popf
jecxz
imulb
xor
xchg
fs
out
jge
mov
dec
xor
cltd
or
mov
mov
jg
mov
orl
out
mov
dec
xchg
loop
or
xor
ret
jbe
adc
push
push
adc
ss
push
push
adcl
imul
aas
sarl
loope
sbb
lahf
mov
xchg
test
pop
sub
dec
or
push
in
jle
add
repz
pusha
je
ljmp
out
dec
scas
ljmp
into
mov
mov
sub
insb
mov
push
jne
insl
iret
out
repz
sbb
push
pop
xchg
push
mov
xchg
mov
fsub
push
ret
xchg
imul
pop
in
jmp
pop
mov
jbe
sub
mov
inc
jo
fcoms
push
xchg
gs
in
adc
mov
in
leave
es
add
adc
sbb
jns
nop
lcall
pop
mov
jo
add
arpl
in
lods
cs
int
test
imul
mov
adc
pushf
leave
out
incl
lods
neg
jae
shrb
push
sahf
fwait
mov
mov
incl
enter
out
and
mov
mov
shlb
out
jge
int
inc
shlb
test
mov
sbb
dec
push
or
leave
pop
push
pop
pop
dec
repz
and
lods
cmpsl
add
inc
adc
xor
dec
mov
sbb
mov
jno
mov
inc
mov
inc
lods
outsl
push
jmp
mov
das
push
pop
mov
jae
pop
xchg
test
mov
dec
iret
lea
out
mov
and
mov
mov
mov
mov
aaa
cmp
pop
movb
pop
push
fucomi
scas
fsubrl
loopne
jb
in
xchg
jp
xchg
shrb
mov
call
and
ss
sbb
jmp
dec
loopne
aas
in
lcall
inc
test
shl
pop
jne
lahf
aad
mov
and
jnp
inc
aam
std
inc
adc
lahf
aad
stc
dec
inc
push
lcall
clc
popa
daa
adc
or
fwait
lcall
fstpl
inc
xor
and
dec
push
into
sarb
pop
jnp,pn
and
stos
push
andb
clc
mov
add
jmp
cmp
repnz
addr16
adc
fstpt
add
inc
outsb
das
xor
and
mov
adc
mov
lock
xchg
fsubl
sub
test
sbb
jno
mov
insl
dec
pop
mov
dec
push
insl
xchg
iret
xchg
adc
add
stc
aam
xchg
xor
orl
xor
in
inc
nop
sub
movsl
cmp
mov
jle
cmp
adc
fs
cmp
inc
or
add
fidivs
testb
xor
data16
repz
ja
outsl
loop
in
gs
jl
shll
outsl
pop
pop
lahf
loope
adc
jno
int
sbb
pop
push
leave
add
dec
and
lret
xchg
sbb
inc
jns
or
add
pop
push
aam
lods
mov
cmpsl
fmul
je
sbb
dec
or
data16
aas
out
inc
push
dec
sub
in
jmp
cli
sub
sbb
into
mov
pushf
or
insl
idivl
dec
mov
jle
add
lods
inc
fisttps
push
or
pop
clc
icebp
fdivrl
ret
jl
mov
cmpsb
popa
sub
daa
repz
lods
cld
je
sub
lcall
stc
sub
popf
add
cmp
xorl
fninit
cmp
sahf
clc
shl
movsw
sbbb
mov
in
fs
popf
or
mov
faddl
sub
jp,pt
xor
into
xchg
popf
outsb
push
inc
adcl
mov
pushf
mov
and
loopne
stc
ret
cmp
adc
mov
in
cmp
add
int
sbb
cmove
mov
mov
push
dec
data16
test
adc
pop
mov
loope
push
adc
jmp
shlb
xor
xchg
mov
mov
nop
bound
xor
imul
lret
in
xlat
push
push
test
lds
loop
and
cwtl
je
push
mov
lcall
lret
jbe
sub
or
mov
cmp
repnz
aaa
enter
mov
mov
arpl
add
push
mov
outsb
add
cli
les
gs
outsl
and
nop
and
das
push
jg
fs
or
ds
mov
repz
dec
dec
push
xchg
fcom
nop
gs
fcompl
jae
inc
dec
shrb
adc
ja
pop
xchg
loope
iret
stos
int3
stos
or
push
fucomi
jmp
leave
rcrb
gs
mov
nop
in
inc
movsb
leave
adc
push
mov
inc
iret
sub
scas
testl
fbstp
xor
cltd
jle
and
mov
ljmp
jecxz
stos
adc
mov
jbe
mov
addr16
shr
jle
xchg
and
out
inc
sub
mov
adc
jmp
es
and
jb
inc
stc
inc
mov
fcoms
push
sarl
test
jo
mov
lret
fcompl
cmp
mov
bound
push
jecxz
aam
sbb
inc
lock
xlat
fs
lahf
sbb
or
pop
mov
jmp
and
push
inc
sub
andb
pop
push
inc
cmp
adc
pusha
cmp
pusha
jne
arpl
inc
lods
adc
jae
in
push
leave
into
inc
jae
into
push
aas
into
cwtl
sub
xor
and
roll
mov
jp
imul
mov
cmp
mov
pop
push
and
insb
mov
lds
loope
xchg
cmp
and
icebp
gs
aad
rcrb
lods
ret
cmc
lods
jge
int3
jecxz
pop
mov
cmp
cmpsb
inc
jbe
add
fisttps
or
insl
subl
push
sbb
cli
or
hlt
dec
ss
push
out
das
and
pop
inc
jecxz
sub
sbb
mov
fistpl
adc
mov
sub
js
xor
adc
outsl
je
mov
gs
adc
pop
push
out
cmp
pop
cmpsb
idiv
dec
inc
and
std
fsubp
mov
push
repnz
outsb
mov
stos
int3
xchg
mov
jmp
mov
adc
add
pop
ffreep
push
mov
movsb
jnp
xor
clc
xchg
xor
xchg
aam
lret
lret
push
or
sub
push
mov
daa
lock
pop
js
stos
shrl
or
jl
fiaddl
sbb
icebp
rcll
cmp
fidivl
pop
dec
stos
repnz
inc
mov
dec
roll
push
mov
xchg
mov
inc
sbb
data16
mov
gs
add
sar
or
or
dec
and
adc
in
mov
push
sbb
into
push
or
div
dec
mov
mov
ficoml
cli
xor
mov
inc
xor
pop
and
cmpsb
shlb
fnstenv
jne
jne
aaa
insl
adc
test
dec
lea
cltd
push
dec
out
sbb
adcl
in
jne
sbb
lcall
or
cli
inc
cmpsl
decl
jb
leave
leave
push
mov
mov
dec
push
andb
out
loop
push
out
cmp
cmp
inc
mov
fdivrp
popf
call
add
inc
sbb
out
icebp
push
addr16
mov
jno
or
dec
ret
xchg
movsb
outsb
in
das
ret
dec
addr16
inc
iret
adc
les
dec
add
subb
filds
mov
aas
ljmp
cmpsl
mov
pop
xlat
aaa
adc
mov
lret
push
dec
popa
add
cmp
into
jns
sbb
sbb
dec
adc
push
pushf
imul
mov
pop
add
movsb
stos
mov
push
roll
xlat
push
mov
call
fcom
hlt
repnz
int
adc
adc
and
inc
or
in
decl
lds
js
imul
mov
push
cmpsb
dec
cmp
or
jae
xor
xor
addb
addr16
mov
mov
hlt
cmpb
fldenv
mov
movsl
xor
mov
movsl
dec
out
stos
mov
jl
stos
dec
cwtl
cmp
jns
pop
and
sub
jnp
stc
lret
lds
bound
aam
repnz
mov
sbb
in
cmp
fsub
xchg
into
adc
jns
add
mov
push
mov
add
popf
aad
push
jno
mov
xchg
pusha
popf
push
pop
adc
ss
cmp
int
int3
jl
push
inc
jb
lea
sub
push
movsb
mov
jmp
cmp
mov
lods
rcr
in
ret
xlat
push
cmp
jnp
sbb
fcoms
xchg
jns
sbb
pop
loope
outsl
push
cli
inc
jp
jb
mov
clc
mov
xlat
fsubl
add
inc
mov
adc
mov
inc
data16
xor
adc
loopne
into
mov
sub
out
aaa
insl
lock
adc
aam
push
add
jle
xor
loope
outsl
mov
call
sbb
adc
inc
inc
push
pop
lods
cltd
insl
mov
jg
mov
jg
dec
cld
aas
ss
imul
jg,pn
push
inc
into
mov
or
test
mov
nop
pop
sbb
decb
pop
aas
mov
xchg
leave
roll
jo
lret
pusha
dec
mov
insb
sub
movsl
jo
out
pop
lcall
test
jns
push
add
jle
inc
mov
mov
xchg
loope
mov
inc
and
stos
stc
jae
xchg
xor
jmp
mov
fmull
xchg
inc
sbb
enter
dec
out
mov
les
xor
and
pusha
popf
or
xchg
out
std
ja
cmpsb
sub
movl
outsl
repnz
rcrl
inc
mov
sbbb
movsb
adc
jp
dec
cmpl
subb
ret
out
sbb
aaa
leave
in
adc
pop
cmp
sbb
mov
icebp
sarb
mov
jp
add
add
jmp
aad
cmp
aaa
aad
push
mov
fwait
jne
shlb
adc
sbb
je
adc
jbe
loope
inc
in
test
js
int3
sbb
lret
push
push
testl
jae
and
insb
push
stos
mov
push
mov
fwait
nop
je
inc
stc
sub
div
cmp
dec
pop
mov
scas
jb
pop
fs
notb
in
adc
pop
pop
hlt
lretw
mov
rolb
push
test
xor
xor
jne
cmp
push
sub
xchg
add
and
fnstsw
jae
dec
xchg
dec
sbb
mov
mov
xor
sbb
ss
fs
and
dec
cmpsb
cmc
or
out
icebp
shrl
xor
aam
cmpsl
pop
aaa
outsl
pop
sbb
xor
and
dec
inc
cli
dec
mov
outsl
shll
cltd
mov
stos
add
mov
jge
mov
scas
pop
lock
addl
inc
mov
xor
pop
push
mov
fisubl
pop
sbb
push
jae
and
inc
push
pop
inc
pop
sub
push
sub
int
mov
popf
shlb
cmpb
and
cmp
lret
in
or
pop
xchg
pop
jns
add
stc
sbb
jle
mov
and
lea
lods
fstpl
xor
mov
pop
push
das
sub
faddl
cs
sbbb
mov
jl
pop
jo
insb
out
push
push
in
push
cmp
stc
and
ficompl
sub
sbb
loop
leave
aad
pop
mov
pop
movb
push
rcrl
inc
adc
mov
dec
aas
push
cld
test
les
aas
lods
xchg
sub
adc
lods
gs
inc
pushf
lcall
mov
mov
lock
fcmovne
jmp
daa
mov
lods
and
sbb
lret
push
rolb
inc
pusha
cli
dec
or
int3
and
xor
shll
push
push
cmp
mov
scas
push
push
icebp
cmpsl
leave
xchg
mov
nop
mov
out
lahf
scas
adc
push
ljmp
lret
dec
cli
mov
mov
ficomps
shr
mov
leave
add
dec
sbb
cmp
mov
outsl
cwtl
insl
jp
and
data16
gs
insl
xlat
lahf
dec
pop
mov
jbe
push
addb
jo
ja
call
dec
addl
inc
sbb
mov
sbb
mov
mov
sub
adc
sahf
xchg
mov
mov
inc
lods
dec
push
xchg
dec
adc
in
cmp
mov
aaa
jmp
orl
inc
push
sbb
jg
fs
and
mov
les
jp
sub
jge
test
push
and
popa
cmp
pop
mov
xchg
stc
mull
mov
movsb
or
cmc
sub
outsl
das
pop
add
rcrb
lds
add
inc
ljmp
lods
std
fidivl
aad
xor
loope
test
ret
lret
cmp
mov
repnz
out
cld
sti
jns
fsubrs
shl
pop
sbb
push
ror
push
mov
andl
sbb
movb
insl
fldt
jg
cli
jge
mov
cmp
adc
idivb
xlat
lods
xor
addr16
cmp
stc
inc
mov
movsb
sbb
lcall
mov
dec
xor
sbb
dec
sub
pop
mov
js
std
mov
movsb
xor
movsb
or
mov
jmp
out
cmpsb
cmp
push
dec
out
jo
shlb
fcmove
jg
popa
notl
mov
lea
pop
pop
mov
inc
add
scas
push
pop
sub
ret
lret
xchg
push
mov
push
mov
daa
push
subb
leave
test
in
sbb
in
lcall
sbb
stos
dec
cmp
out
xchg
cmp
mov
mov
jl
add
mov
cmp
push
syscall
imul
mov
mov
xchg
push
dec
push
sub
ret
int3
stos
sub
jb
pop
faddp
adc
push
mov
pop
ljmp
pop
hlt
push
fadds
dec
repnz
cmp
push
mov
cmp
cmp
aaa
jecxz
test
lods
push
and
jae
sbb
fwait
pop
daa
xorl
fwait
cmp
xor
jecxz
pop
push
pop
fs
jae
cmp
sub
jle
xchg
sbb
iret
and
neg
and
push
mov
add
push
imul
je
in
shr
out
pop
frstor
aam
fidivl
and
popa
iret
mov
push
mov
and
mov
jecxz
inc
push
and
sbb
mov
test
sbb
popa
add
push
ss
sbb
inc
inc
aad
xchg
dec
add
push
test
mov
fsubrs
shll
cmp
xchg
inc
int3
jb
adc
lods
mov
mov
and
sub
xor
in
and
dec
in
call
mov
or
lods
push
xchg
sub
cs
iret
out
mov
mov
out
push
jb
mov
adc
inc
jle
imul
cld
in
lcall
arpl
cmp
hlt
mov
adc
xor
popa
add
sub
dec
fdivrl
mov
push
mov
gs
adc
bound
xor
xor
push
xor
cmp
pop
bound
mov
jno
fists
mov
ret
mov
mov
into
xor
xor
ja
xchg
jle
lahf
mov
sti
pop
mov
nop
cli
mov
cli
xchg
jo
lcall
lea
and
popf
xchg
sbb
insl
sub
enter
ret
movsb
inc
dec
push
imul
mov
insl
and
jl
mulb
inc
mov
ret
push
clc
icebp
fdiv
out
adc
aad
icebp
dec
dec
shlb
divl
subb
in
xchg
lahf
aam
lods
jnp
scas
cmpsl
dec
fcomps
les
call
jg
cwtl
pop
pop
scas
mov
test
fcomps
adc
xor
xor
ret
fmul
push
jmp
add
jae
out
in
iret
mov
cmp
mov
testb
fprem
subl
icebp
iret
xchg
mov
xor
in
decl
mov
hlt
sar
inc
pushf
in
jmp
ss
mov
js
mov
shrb
add
dec
std
add
mov
lods
in
fwait
sub
cmc
jns
mov
int
imul
ficoms
lds
push
mov
pop
cmp
insl
xor
jnp
mov
inc
xor
arpl
dec
popa
push
mov
xchg
lea
sub
mov
jl
jno
popf
sahf
mov
nop
xlat
mov
mov
jbe
call
insl
je
adc
jecxz
lock
sub
jmp
push
mov
adc
jns
or
xchg
in
xchg
sub
adc
jge
repz
sbbb
xchg
mov
mov
sbb
scas
testl
push
lds
out
mov
mov
cmp
add
sub
push
or
jne
lcall
cmpsb
std
inc
pop
jno
cmp
adc
movsb
or
sbb
fs
push
sti
xchg
insb
rcrb
aad
xchg
stos
gs
jb
mov
mov
insl
jge
stc
jns
popl
sbb
daa
lahf
aad
dec
xor
popf
mov
mov
cmp
aas
xor
or
lods
jmp
mov
xor
lds
mov
xchg
jnp
mov
js
xlat
sbb
xor
loope
xchg
test
jge
sbb
rcl
mov
or
fcomi
jmp
pop
repnz
push
aad
jp
ja
ret
cmpsl
dec
leave
push
fcmovnu
cmp
push
dec
jb
jl
shlb
sti
and
adc
icebp
xchg
lock
xchg
incb
jns
mov
xor
sub
fmull
cmpsl
sbb
xchg
inc
sbb
test
and
xchg
add
add
movl
jg
ljmp
dec
push
mov
pop
and
mov
cmpsl
subb
sti
cmp
loop
imul
and
daa
pop
cmpsb
fsubrl
stos
push
sub
xor
sbb
sub
pusha
sbb
stos
adc
mov
js
movsb
jns
fwait
xor
lds
mov
cmp
adc
les
imul
push
pop
out
out
movsb
mov
inc
dec
inc
andb
mov
mov
inc
mov
fldl
call
leave
or
or
and
pop
out
xor
fwait
jo
xchg
shll
mov
xchg
loop
push
and
data16
sti
negl
xorb
clc
clc
jmp
mov
or
inc
dec
push
add
pop
ret
addb
cmp
jb
mov
addr16
scas
or
mov
jp
stos
inc
ret
dec
jle
incl
je
dec
inc
or
mov
loope
and
dec
xchg
and
cmc
mov
scas
test
jnp
in
ficoms
popf
or
mov
or
test
or
dec
xchg
aam
mov
mov
orl
dec
mov
cli
cmp
inc
dec
loopne
insl
out
out
fldenv
mov
cmp
adc
ds
ss
lret
fldenv
cltd
stos
and
int3
imul
call
jmp
fcoms
movsb
cmp
iret
and
fnstenv
aad
ja
out
scas
ret
xor
cmpl
and
popa
es
xchg
jg
loop
call
adc
testb
sub
mov
cmp
icebp
pop
mov
jno
aaa
lret
into
stc
sahf
xchg
xchg
push
push
fistl
dec
dec
rorl
push
xchg
jmp
xor
arpl
dec
add
in
stos
pop
xor
arpl
xchg
out
repz
sub
xchg
movsl
sbb
ret
sub
mov
jge
or
xchg
mov
shr
enter
int
pcmpeqw
and
or
jbe
rorl
jno
mov
lds
lock
stc
sbb
aam
arpl
sbb
dec
and
les
xor
stos
test
pusha
cmp
pcmpeqb
cmp
mov
adc
or
or
jl
add
pop
pop
nop
mov
sub
jg
scas
jecxz
mov
push
sbb
sahf
jecxz
fstps
in
pusha
js
fisttpll
sub
or
push
xchg
mov
ret
repnz
jno
cmc
sbbb
ljmp
hlt
cmp
loope
sbb
jmp
mov
dec
aaa
push
fwait
out
mov
or
push
std
and
clc
sub
mov
adc
sub
mov
push
add
inc
mov
test
xor
scas
cmp
bswap
inc
mov
repnz
inc
sahf
mov
das
mov
dec
addr16
mov
fnsave
pop
sbb
adc
xor
clc
pushf
ljmp
jle
in
icebp
mov
dec
out
xor
daa
bound
mov
hlt
fisubrs
inc
push
ret
mov
and
jmp
push
rol
jl
push
loope
mov
insl
xor
mov
int3
push
jg
orl
rcrb
in
repz
dec
popf
stc
arpl
imul
shll
insl
daa
mov
mov
xor
adc
xchg
das
dec
or
xchg
inc
daa
decb
fiaddl
fiaddl
cs
fs
or
mov
cwtl
rorl
mov
or
fistpl
sbb
leave
dec
push
push
std
cmc
push
lcall
mov
jbe
je
cli
mov
sti
push
cwtl
pop
repnz
jo
pusha
jbe
sbb
jb
jmp
fnstcw
mov
sbbb
mov
mov
cmp
pop
popf
out
or
cmp
dec
rcl
xchg
gs
iret
xor
and
jne
cmp
ficoml
xor
push
push
mov
ret
push
movsl
pop
jno
xlat
rcr
mov
xchg
and
add
lcall
mov
lcall
jbe
add
xchg
add
mov
inc
push
and
testb
add
pop
jno
sub
xor
fisubs
sbb
jmp
fisubs
pop
inc
jnp
xchg
icebp
lock
popa
mov
pop
gs
dec
xchg
and
loopne
xchg
fistps
mov
stos
dec
jp
into
inc
xchg
into
enter
std
inc
ljmp
xor
inc
repnz
in
sti
pop
cmp
xchg
fbstp
push
jge
jg
addr16
dec
ljmp
sbb
inc
dec
das
pushl
cwtl
mov
out
xor
mov
push
out
imul
xchg
lods
in
sahf
test
ljmp
addb
add
call
mov
or
mov
leave
add
mov
les
mov
dec
aas
sar
adc
test
inc
xor
sub
aad
mov
lret
jmp
ljmp
push
add
and
cmp
ss
mov
jle
mov
cwtl
sbb
inc
stos
jae
jmp
mov
cmpsb
repz
and
fdivrs
cmp
or
or
das
pop
scas
mov
cmp
push
andl
out
push
mov
adc
movsb
mov
fimuls
sti
mov
aam
and
scas
fwait
pop
push
sub
mov
dec
xchg
pop
and
push
jbe
lea
cs
jp
jp
dec
and
ljmp
aad
dec
jo
sbb
mov
fucomp
mov
punpckldq
pop
cmc
cmc
dec
popa
dec
fldt
jg
dec
movsl
jp
sbb
mov
bound
stc
out
mov
xor
and
mov
dec
bound
sti
ficoms
cmpsb
incb
mov
test
mov
mov
mov
aam
movsl
cmp
shl
cmpsb
cmpsb
mov
jae
dec
fldcw
ret
jnp
mov
and
inc
mulb
js
mov
xchg
mov
fwait
adcl
push
popa
add
sub
dec
dec
or
mov
test
add
lret
test
dec
push
sti
incb
xchg
aam
mov
push
and
aas
hlt
push
iret
cmp
mov
flds
mov
leave
imul
pop
xchg
mov
cs
mov
outsl
push
fiaddl
push
rolb
outsb
add
jno
fbstp
js
ja
mov
repz
push
imul
lock
pop
fisubrl
push
ss
sub
xchg
movsl
jecxz
loop
adcl
jecxz
fmull
inc
scas
jl
sbb
add
test
dec
sarl
pop
std
xor
mov
adc
pop
cwtl
cld
cwtl
jns
cmpsb
sbb
and
jecxz
mov
mov
mov
pop
or
subb
mov
mov
ljmp
push
pop
dec
xchg
adcl
out
cmp
xor
jo
cld
pop
repnz
pop
add
jp
dec
sub
cld
mov
pop
test
imul
cmp
jecxz
in
xor
int
or
or
xchg
adc
inc
cmpsl
pop
aas
aaa
pop
testb
arpl
pop
dec
clc
xchg
jns
daa
rclb
fwait
dec
add
fisubl
sbb
hlt
xchg
cli
pop
lahf
push
pop
sub
xchg
repz
arpl
and
es
shll
xchg
dec
pop
jne
cmpsl
leave
out
shll
pop
jge
popf
jo
cmp
cld
lods
xor
out
push
push
dec
fisubrl
std
cmp
in
pop
dec
movsl
clc
lcall
jmp
inc
mov
out
dec
sbb
clc
lods
and
mov
xchg
mov
sub
adc
in
bswap
jnp
les
mov
test
push
arpl
rolb
adc
or
push
test
je
out
fwait
rclb
pop
jo
jns
push
push
jl
pop
insb
cmp
add
or
dec
in
cmp
adc
scas
fsubrp
push
lods
loop
xchg
push
aad
adc
shld
loopne
add
out
lret
insl
pop
insl
xchg
jnp
and
inc
and
in
lock
and
imul
xor
mov
sahf
in
push
jmp
jp
ret
aaa
sub
in
data16
dec
fcoml
adc
mov
mov
addb
mov
negb
push
ljmp
xor
mov
xchg
pop
dec
cs
mov
pusha
xor
jmp
jge
adc
add
les
in
xchg
adc
cmp
and
mov
jle
in
dec
mov
lods
cmp
adc
lock
mov
clc
mov
push
clc
shlb
xchg
dec
icebp
call
and
and
aam
imul
lret
and
ret
push
add
mov
in
adc
in
push
sti
push
mov
xor
inc
cmp
mov
movsb
mov
inc
lahf
add
cmc
pop
in
mov
scas
shlb
int3
and
lcall
mov
jge
xor
iret
adc
xor
add
lret
or
push
out
sti
xor
inc
mov
push
lods
out
mov
call
in
inc
incb
pop
insb
ljmp
insl
pop
mov
mov
jg
je
clc
mov
adc
pop
insl
ss
fsubs
mov
adc
xchg
mov
mov
pop
inc
xchg
sub
jmp
add
mov
pop
popa
pop
pop
fisttps
and
pop
and
aaa
cltd
pop
dec
lret
push
lcall
jge
loope
sbb
imul
cmp
sbb
arpl
imul
loop
js
int
jns
cmp
es
repz
add
ret
dec
jge
xor
mov
fwait
jecxz
sbb
dec
std
hlt
dec
scas
les
in
icebp
inc
pop
fdivs
xor
pop
and
cld
int3
xchg
in
pop
xlat
ds
int3
lea
call
add
sahf
sub
dec
pop
xchg
and
insl
pusha
add
das
jge
and
jb
fnstsw
or
xor
shl
pop
daa
sbb
cmc
test
popf
mov
cmp
dec
xor
and
mov
fisubs
or
test
xchg
jo
xor
adc
xchg
testb
pop
and
outsl
addr16
cmpsb
mov
andb
nop
mov
mov
or
inc
jbe
or
sub
push
mov
clc
mov
jno
and
cmp
mov
mov
add
adc
dec
xchg
rcr
xchg
fstpl
mov
aad
jne
mov
dec
jg
jbe
inc
inc
shl
sbb
xchg
stc
or
shrl
mov
pop
dec
mov
mov
mov
in
xchg
sbb
out
test
mov
call
nop
or
out
adc
daa
in
and
shlb
push
adc
mov
imul
std
and
adc
dec
xor
inc
addr16
xchg
arpl
push
jno
jb
cmp
sahf
jmp
test
int3
mov
shll
jbe
adc
loope
ud0
cmp
mov
fcomi
push
fstpl
popf
les
in
mov
mov
cmc
mov
test
adc
pop
sbb
xor
cld
lods
orb
xchg
pop
push
push
call
mov
sbb
push
nop
mov
adc
in
sub
scas
add
jl
and
decl
or
xchg
in
pop
adc
dec
mov
pop
pop
adc
aad
sbb
jp
xor
xchg
sarl
dec
shlb
roll
fs
or
insl
arpl
fistl
dec
int
pop
movsb
cmpsl
ja
jo
repnz
dec
call
subl
xor
jp
adc
jmp
repz
clc
sub
push
jle
cld
xor
sub
adcb
not
int3
repnz
addps
lcall
call
jge
lahf
mov
sahf
int
movsl
in
adc
dec
mov
jne
mov
sti
add
dec
aas
aam
and
in
mov
jg
out
pusha
pop
aad
lods
flds
aas
adc
insb
inc
lds
cmp
testl
into
sub
insb
pop
fsubp
insb
adc
jo
lods
scas
dec
jae
xchg
popf
shll
pop
popf
fst
popa
cmp
ror
scas
lcall
cmp
test
adc
or
cld
or
ret
mov
test
iret
nop
jle
add
cmp
out
pushf
push
xor
add
outsb
mov
xchg
aam
call
test
nop
hlt
fdivs
lret
sbbl
pusha
sahf
test
outsb
jle
add
enter
in
jmp
scas
or
enter
jnp
imul
xor
lcall
or
sub
pop
sbb
shll
xchg
dec
loop
int3
fcmovb
mov
cmp
pop
jl
cld
sbb
xor
fs
ss
push
sub
jo
call
adc
cs
enter
cld
and
xor
jne
inc
mov
mov
loop
ret
out
sbbl
mov
pop
pop
pop
das
inc
into
leave
sub
cmp
sub
mov
hlt
mov
les
jnp
in
xlat
jecxz
mov
lds
ficomps
mov
cmp
cmp
loope
pop
push
orl
mov
data16
inc
mov
cmp
outsl
dec
and
dec
rcl
or
aam
repz
push
adc
mov
arpl
push
imul
scas
mov
popa
mov
inc
xchg
clc
add
dec
stos
mov
jg
outsb
sub
stos
arpl
xchg
mov
inc
cmp
dec
in
sbb
xor
in
xchg
clc
pushf
out
xchg
inc
jl
jne
mov
xchg
inc
cld
jmp
test
inc
sub
pushf
insb
aaa
jmp
cmpsb
js
iret
fsub
in
sbb
pop
shll
push
divb
movsb
push
enter
dec
iret
inc
mov
fdivrs
jae
mov
aam
es
push
inc
outsl
mov
enter
out
das
fcomps
mov
in
call
repnz
adc
out
dec
xchg
mov
sbb
mov
stos
sub
gs
mov
push
add
cwtl
inc
out
mov
loop
add
mov
loope
in
mov
js
push
or
pop
dec
std
mov
mov
insb
mov
aad
dec
mov
in
push
sbb
add
add
scas
int
adc
inc
cmc
inc
pop
out
inc
imul
aam
or
mov
dec
adc
adc
in
and
enter
rolb
rcl
jb
call
adc
pushf
fistpll
lahf
push
xor
call
mov
inc
or
loopne
adc
dec
mov
insb
jno
adc
jne
inc
lds
push
imul
push
imul
cmp
add
pop
mov
ss
fistl
pop
jae
or
inc
out
cmpsl
inc
xchg
fwait
aas
push
les
inc
enter
add
add
cmp
sub
gs
icebp
add
xchg
test
out
popf
inc
dec
xor
push
mov
idivb
jno
orl
inc
jnp
dec
sarl
jno
xor
mov
iret
cmp
lret
lcall
js
jo
popw
mov
pop
outsb
ja
ret
insb
xorl
daa
in
jecxz
inc
sub
rol
lods
lahf
aaa
clc
mov
punpckhdq
xor
and
sahf
lret
dec
inc
mov
in
pop
mov
leave
mov
cmp
xor
xlat
popa
loope
jne
repnz
cmp
sbb
test
orb
loop
loop
mov
xchg
in
push
enter
into
lahf
xchg
sbb
mov
sub
ficoml
or
sbb
adc
rcrl
xchg
popf
pop
loopne
lods
mov
inc
cmp
inc
inc
das
adc
faddl
add
push
sub
insb
pusha
and
popa
cli
les
adc
mov
jp
enter
aas
imul
xchg
xchg
aaa
xchg
mov
addr16
adc
int3
pusha
add
mov
mov
xchg
loope
pusha
fisttps
mov
repnz
bound
imul
lea
cmp
mov
into
mov
jns
inc
mov
pop
decb
cmp
aas
pushf
xor
stc
test
dec
and
div
sbb
jmp
into
ror
dec
push
aad
shll
popa
jnp
sahf
inc
popf
cmpsb
adc
add
xor
mov
mov
mov
or
pop
cwtl
mov
subb
lcall
into
ret
push
sub
or
mov
xlat
enter
lcall
adc
mov
xchg
orl
push
jmp
or
pop
aad
addr16
cmc
repz
inc
lock
push
xchg
dec
ljmp
or
mov
adc
int3
adc
mov
aad
sbbl
aam
push
mov
lret
int3
cmp
xor
stos
in
push
jmp
movsl
rcll
dec
pop
cmpsl
jp
lock
xchg
sbb
pop
jne
mov
sbb
inc
mov
cmpsb
mov
in
out
aas
pop
lods
and
test
shlb
mov
lahf
lods
iret
mov
ljmp
and
jg
mov
mov
out
ljmp
push
fs
jb
shrb
cmp
inc
fisubs
das
dec
cmpsb
loop
es
adc
nop
daa
icebp
sbb
loop
push
push
xor
push
dec
movsb
inc
data16
mov
cmp
mov
cmpsb
stc
sub
test
xor
sbb
out
jp
push
push
daa
push
je
rorl
add
out
inc
in
mov
ljmp
or
dec
push
adc
fnstcw
pusha
sub
push
xor
cvttps2pi
xchg
or
out
or
or
and
adc
aad
enter
jl
fcmovb
std
mov
cmp
push
mov
xchg
hlt
in
lock
and
xor
push
in
sbb
sbbb
inc
lea
pop
inc
push
cmpsb
pop
and
push
pusha
adc
or
sarb
into
lods
sub
lock
js
mov
xchg
enter
xor
mov
add
adc
xchg
inc
pop
rclb
mov
push
sarw
pop
loope
js
arpl
cmpsb
mov
mov
out
movb
pushf
mov
or
or
and
sahf
inc
mov
push
out
sbb
mov
push
aaa
lods
push
dec
lods
out
sub
inc
mov
nop
pushf
jecxz
xor
in
xor
lds
in
push
xor
scas
bnd
int
push
out
inc
fs
sub
stos
fidivrs
repz
adc
mov
fwait
popf
mov
enter
cli
es
sub
sbb
push
mov
adc
push
jno
lods
outsl
adc
jae
push
lahf
fsubr
sub
xchg
lods
repz
adc
ffreep
cmp
aam
gs
pop
repz
neg
xchg
jge
lods
insl
ss
in
pop
add
xchg
and
dec
icebp
cmp
and
loop
and
xlat
push
cmp
imul
ljmp
in
fs
out
xchg
push
mov
imul
mov
add
push
bound
in
push
dec
fcompl
lods
loopne
and
test
xchg
sbbb
push
add
js
jb
mulb
mov
adc
rorl
nop
adc
add
imul
stc
inc
add
push
mov
cs
mov
add
mov
stc
shlb
enter
jmp
sub
xchg
inc
jns
adc
in
fcompl
xchg
insl
jle
xor
adc
aad
mov
sti
cmpb
scas
push
daa
lds
mov
ja
mov
mov
lods
xor
dec
xor
jge
outsl
orb
jecxz
in
push
movsb
push
insl
sub
mov
ret
mov
iret
cmp
into
cmpsl
repz
mov
lds
shrl
inc
out
or
outsl
push
leave
and
sbb
imul
lret
insb
movsb
sahf
dec
sub
ds
xor
addb
adc
jle
pop
push
mov
xchg
fbstp
push
add
call
or
jle
mov
sub
sub
xchg
aaa
cmc
mov
lock
fstps
jb
mov
lds
test
jmp
add
jmp
mov
cmp
mov
imulb
jp
cmc
and
add
frstor
ror
adc
call
add
rcll
data16
cmp
sti
hlt
jo
push
scas
aaa
negb
std
hlt
imul
xchg
sbb
insb
js
and
push
les
in
test
dec
lds
test
push
sub
xchg
cmpsl
lods
mov
pop
pop
mov
dec
xor
sbb
cmp
loop
xor
inc
or
xor
lret
cmpsl
mov
cmc
dec
mulb
outsb
neg
call
adc
fildll
out
orl
sbb
out
rolb
push
jl
mov
push
inc
adc
shll
push
clts
pop
push
and
add
mov
das
or
int3
pop
sub
mov
aad
mov
sub
pushl
testl
adc
in
int
int3
test
fsubrp
lret
push
scas
std
test
mov
roll
mov
mov
test
xchg
mul
lret
andl
jnp
jo
jmp
dec
xorb
lahf
mov
inc
pop
mov
sbb
add
adc
daa
frstor
sahf
aas
and
ds
test
dec
xor
addr16
pop
or
pusha
je
gs
jmp
xchg
scas
dec
js
mov
stos
xchg
xor
lds
or
mov
mov
mov
test
repz
je
push
push
cld
pop
cltd
es
sbb
mov
sti
and
inc
pop
jp
lods
xchg
add
mov
xchg
iret
sub
movsl
dec
mov
cltd
into
mov
jle
rorb
add
xlat
pop
pop
push
and
imul
and
jae
aaa
out
inc
push
fisubrl
jbe
push
fs
jmp
loopne
inc
dec
test
call
jb
fdivs
jecxz
cmp
jmp
push
sub
iret
daa
sub
and
xchg
rcll
and
pop
pop
leave
arpl
add
rcll
cmc
stc
dec
xchg
movsb
lock
or
imull
mov
mov
cmpsl
xchg
fistl
stos
sbb
xor
push
add
pop
mov
pop
out
cmpsl
filds
xchg
sbb
mov
pop
inc
frstor
aad
dec
mov
rcl
shrl
inc
ret
aad
push
leave
pop
pop
push
aad
iret
dec
push
stos
xor
inc
out
push
xchg
cmp
lods
xor
call
fistl
and
repz
xchg
add
inc
imul
cmp
adc
fcmovnbe
or
sub
mov
cli
dec
jmp
sub
mov
mov
imul
xor
mov
mov
pop
sahf
insl
mov
mov
bound
adc
movq
cld
ret
inc
into
or
sbb
pop
mov
orb
cwtl
leave
xor
mov
sbb
leave
cmp
test
jmp
sbb
add
mov
cwtl
call
je
outsl
xor
test
and
and
jg
push
test
popa
ljmp
jmp
mull
loop
mov
xchg
ficoms
and
xchg
xchg
cmpsl
inc
cltd
adc
xor
jo
cltd
scas
ret
xor
dec
jne
scas
out
ficompl
outsb
dec
add
push
push
fwait
pusha
bound
dec
inc
mov
inc
iret
add
xchg
push
and
mov
cmp
and
sub
push
push
add
icebp
out
lds
cmp
mov
jg
enter
outsl
ret
sub
call
xchg
adc
lods
in
sub
jb
iret
xor
cmp
pop
test
push
adc
xor
repz
xchg
sub
imul
insl
roll
addl
cmp
add
lret
mull
repnz
iret
int
jae
sub
mov
gs
lds
or
xor
pop
fildl
sarl
jle
cltd
cmpsl
xlat
sub
js
ss
pop
frstor
fsub
stos
sbb
cwtl
push
lods
mov
fcomi
sub
stos
sti
pop
js
add
lods
sub
mov
inc
je
pop
pop
add
leave
jno
aad
jecxz
imul
hlt
adc
in
pushf
pop
andl
loopne
push
ret
sub
negl
aad
jb
or
add
jg
jge
sub
pop
out
enter
sub
mov
xor
test
add
add
arpl
rcl
add
jg
dec
xchg
or
fimull
fs
and
rclb
cmp
outsb
and
cmc
xchg
je
pop
fists
inc
ja
loopne
outsb
lods
movsb
or
test
insb
aaa
es
xchg
inc
mov
pop
add
out
cld
mov
incl
adc
push
sarb
mov
pop
sub
inc
adc
add
decb
xorl
in
pop
fstps
das
or
fs
push
add
fwait
or
repz
pop
cmpl
inc
lret
jbe
insl
pop
into
cs
icebp
sub
lods
xor
jae
test
jb
mov
cmp
inc
adc
test
push
arpl
aad
mov
jns
add
jae
xlat
out
out
pop
fnstsw
insb
das
sbb
out
push
in
push
pop
jo
mov
ror
mov
rcl
xor
xchg
xor
xor
jne
push
adc
out
jl
int
pop
push
fisttpll
xchg
or
sti
xchg
fisubs
dec
sti
xchg
out
repnz
mov
push
filds
push
or
pushf
shrb
sahf
nop
jbe
push
jmp
adc
and
ljmp
sub
icebp
xor
gs
inc
or
ret
out
jge
cltd
aas
cwtl
inc
sbb
js
dec
addr16
jnp
incb
std
adc
in
out
or
ja
cmp
and
cmc
dec
stos
jo
inc
cltd
jmp
xchg
lds
adc
adc
in
push
lock
fwait
jecxz
pushf
bound
push
pop
cmp
lods
out
jno
fsubr
add
data16
xchg
push
mov
mov
stc
and
loope
ljmp
addl
xchg
adc
ret
xchg
pop
outsb
xor
add
dec
imulb
in
and
or
in
fwait
sub
mov
inc
mov
fwait
jl
push
and
arpl
das
movl
adc
fstl
push
xlat
mov
in
xorl
and
sub
mov
shl
test
sti
leave
dec
fidivrl
fisubl
clc
inc
fsubrp
lods
xchg
add
sbb
and
mov
out
dec
insl
add
sub
xchg
and
stc
add
scas
push
cmp
mov
inc
jg
daa
or
push
or
xor
je
ss
hlt
adc
pusha
aad
rcl
mov
mov
cmc
inc
in
sub
dec
hlt
lea
mov
popa
push
pusha
and
loopne
loop
int3
mov
push
xchg
pop
jge
jbe
fs
xchg
pusha
in
lcall
icebp
mov
outsl
pushf
inc
dec
stc
xlat
ret
in
add
in
or
in
pop
out
stos
pop
lods
dec
push
lea
dec
movsl
or
js
cmpsb
das
mov
and
stos
test
icebp
cmp
mov
lcall
xor
bound
dec
in
pop
popa
rolb
add
div
js
mov
pop
jmp
lods
dec
cmpb
mov
jno
cli
scas
mov
and
inc
mov
scas
scas
data16
fisubs
sti
mov
add
stc
sub
cmp
testb
aam
add
leave
je
stos
stos
push
adc
sbb
inc
jae
sbb
scas
mov
not
push
or
adc
outsb
push
pop
mov
fisttps
aad
push
add
add
sbb
call
inc
loop
int
sub
xchg
fisubs
in
movsb
xchg
push
push
movsl
sbb
lret
ljmp
cmp
sbb
xchg
cmp
bound
mov
xchg
mov
inc
dec
iret
jno
lret
outsl
pop
mov
pop
jbe
sub
fisubs
dec
mov
fs
mov
scas
cmc
stos
adc
test
lock
push
in
dec
pop
shrl
mov
fs
das
clc
loope
cmp
rcrb
cmp
lods
jb
fbstp
outsb
dec
xor
jge
sub
cmp
outsb
ss
cmc
mov
and
pop
je
jg
aad
or
insl
mov
push
mov
sbb
out
inc
ss
test
mov
mov
jae
arpl
cltd
pop
pop
ret
sarb
loop
movsb
ret
and
add
mov
test
jmp
ds
loop
subl
lcall
mov
enter
les
cltd
xlat
inc
jg
ret
popa
add
in
adc
imulb
adc
and
bnd
lds
movsl
out
xchg
push
cs
mov
pop
jp
xor
gs
push
xchg
and
inc
xor
cmc
in
mov
pop
or
or
jge
push
add
push
les
jne
mov
mov
mov
out
jo
movsl
aam
test
cmp
dec
pop
addr16
cmp
xchg
cmp
out
imul
or
xlat
adc
xchg
inc
push
not
in
adc
pop
mov
mov
mov
hlt
sub
mov
stc
mov
add
cmp
into
gs
cwtl
mov
cmp
sbb
mov
sbb
ror
jp
inc
mov
lods
shll
je
sub
add
push
jecxz
outsl
xlat
stos
ficoml
push
inc
xor
lods
lds
sti
mov
push
cmc
jnp
xor
add
inc
mov
push
push
sarl
mov
arpl
push
sbb
lods
push
ret
ret
jle
shr
fwait
sub
or
inc
xchg
xchg
out
dec
insl
cli
in
inc
hlt
push
shll
jg
pop
in
sbb
lret
and
jecxz
in
outsl
adc
test
adc
ret
lods
xor
out
inc
scas
push
xor
test
mov
jnp
jecxz
test
pop
loope
cmpsl
roll
or
adc
push
scas
pop
scas
cltd
stos
out
fdivl
loopne
xor
push
adc
lret
pop
call
sbb
push
sub
sub
and
aas
jb
jge
adc
or
mov
andb
mov
ficoms
adc
mov
xor
dec
xorb
insb
adc
mov
push
ret
xchg
in
adcl
movsb
sbb
push
in
lret
lods
mov
mov
mov
jl
jbe,pt
fcomps
insl
in
lret
pop
xor
mov
push
outsl
ljmp
jbe
iret
jmp
mov
test
mov
jbe
std
adc
pop
cmpsb
fcompl
inc
mov
adc
jg
imul
clc
ja
xlat
loop
jp
repz
es
daa
cltd
pop
inc
mov
mov
cmp
jb
xchg
cmp
ja
lahf
adc
mov
arpl
push
cmc
sub
push
rolb
xchg
adc
mov
mov
jg
add
stos
into
cmp
lret
mov
push
rorb
push
jl
ljmp
sbb
shlb
cmpsb
dec
mov
movsl
mov
xchg
cmp
push
or
add
jmp
xor
or
add
bound
ret
aaa
cltd
adc
and
xchg
ljmp
into
mov
lods
push
cmp
lret
mov
mov
addl
xchg
loope
mov
push
cltd
or
mov
and
leave
pop
inc
pop
ret
ret
push
sub
sbb
fwait
or
call
stos
movsl
out
aas
das
pusha
xor
and
setno
rorl
in
xchg
adc
iret
arpl
lds
sbb
push
dec
add
icebp
mov
pop
pop
adc
rolb
rolb
nop
xchg
pusha
jbe
jae
test
out
notl
js
ss
xchg
popf
fistpl
cmpsl
repnz
or
adc
push
mov
pop
ret
js
icebp
mov
sub
sbb
jns
adc
xor
bnd
or
inc
movsl
cmpsb
sub
adc
cwtl
shlb
inc
test
jb
cmp
cmpsl
movsl
int
mov
add
lods
aaa
addr16
rcrb
xchg
cmp
stos
xor
adc
rcrl
sbb
iret
sub
test
and
mov
dec
pop
insb
popf
fnstsw
pop
jae
testb
rcl
out
adcb
mov
mov
add
loopne,pt
gs
shl
lock
xorb
mov
mov
lahf
mov
sbb
mov
jle
in
scas
outsb
jae
jns
inc
xor
jne
aam
and
rcr
std
adc
test
sbb
test
push
in
mov
jbe
mov
add
sub
jnp
out
imul
jecxz
addr16
xor
ret
and
add
adc
test
movsl
adc
add
gs
or
xor
mov
push
mov
test
cmp
test
scas
push
adc
sbb
loope
arpl
jnp
ret
inc
jb
push
adc
fsubl
mov
out
push
push
add
incl
mov
sbb
loop
fcom
repnz
inc
mov
xlat
fwait
xchg
push
dec
inc
mov
xor
sub
mov
dec
push
mov
or
daa
inc
pusha
jmp
or
lahf
inc
test
mov
leave
xchg
or
roll
js
aas
push
movsl
lods
lea
pop
xor
jg
pop
ja
mov
or
jno
fisubrl
xlat
jno
mov
sub
jb
std
or
mov
and
scas
and
fsubl
stos
js
mov
dec
int3
pop
pop
sbb
cmpsl
sti
es
repnz
xchg
cltd
mov
dec
dec
jge
pop
jl
sub
sahf
add
data16
aas
dec
adc
xchg
fnsave
inc
addl
mov
lods
nop
mov
fdivp
dec
or
ds
mov
mov
rorb
jns
insb
sarl
idivb
jbe
fisubrl
sbb
pop
out
inc
sub
call
sbb
and
pop
repnz
add
mov
push
mov
lods
pushf
mov
cmp
inc
mov
inc
pop
adc
and
rorb
adc
jno
rcr
pop
jle
pop
movsb
mov
cmp
add
test
sarl
push
mov
mov
sbb
cli
ljmp
sub
cwtl
mov
js
jno
imul
xor
cmp
ja
add
xor
movsl
xor
jno
movsb
inc
add
push
std
mov
stc
sbb
cmp
clc
xchg
inc
js
xchg
lods
mov
popf
cs
mov
push
mov
xchg
push
pop
lods
jo
scas
rcrl
and
sahf
jle
mov
cmp
push
fcmovu
sti
pop
and
lods
std
das
arpl
jbe
inc
cmp
sti
push
xor
inc
pop
jbe
cmp
cmc
andb
js
scas
cltd
and
xor
sub
clc
lods
sub
adc
push
lahf
inc
push
ret
push
or
xor
shrb
addb
pop
jecxz
jnp
xor
sub
ss
loopne
adc
push
loope
mov
out
lret
shrb
xor
sub
xchg
push
sbb
stos
push
jle
and
mov
call
add
sbbb
cltd
adcb
push
dec
fwait
subl
lret
int
repz
enter
lret
ret
mov
in
xor
mov
ss
js
fimull
sarl
clc
fcmovnb
xchg
inc
jmp
ja
sahf
push
xlat
hlt
push
mov
aas
ret
push
push
jle
sub
shl
lea
dec
lahf
test
adc
add
push
jmp
jns
lahf
xor
in
xorl
inc
loopne
push
hlt
loope
push
push
or
insl
mov
loop
pop
cmpb
mov
vmwrite
mov
xor
fstl
outsl
mov
and
sub
mov
aas
cmp
popf
mov
and
and
adc
dec
dec
repz
fbld
push
lods
ja
adc
lods
daa
jg
push
mov
inc
nop
jo
rcl
inc
cwtl
popf
ss
push
sbb
adc
jl
loop
stc
jae
leave
sbb
aas
jo
arpl
dec
imul
repnz
icebp
dec
std
xchg
mov
mov
sbb
hlt
cmpb
adc
push
sub
leave
into
pop
int
pop
ss
dec
ss
fsubl
out
push
push
push
nop
inc
push
jmp
dec
push
or
out
int3
add
cmpl
push
movsb
mov
arpl
push
add
cmp
fisubrl
enter
sbb
sbb
add
cld
add
dec
scas
out
pop
sbb
dec
dec
sahf
test
inc
or
pop
inc
pop
sbb
push
dec
sbb
pop
outsb
rorb
pop
fcompl
es
pop
in
cmpsb
popf
xchg
insb
lods
and
arpl
push
mov
mov
icebp
pop
pop
push
insl
mov
xor
add
test
test
jmp
in
arpl
roll
mov
pop
mov
dec
loope
fwait
pushf
sar
inc
out
xchg
enter
dec
xchg
test
ljmp
push
call
icebp
jle
or
sbb
add
xlat
and
inc
push
arpl
xchg
test
cltd
xchg
or
or
test
or
fs
popa
or
ret
push
sbb
insb
ret
dec
aaa
loop
cld
movsb
pop
jne
decb
sahf
mov
out
fstpt
and
jge
mov
cmpb
inc
sbb
push
cld
std
sbb
dec
stc
dec
jae
out
sub
lock
sub
addr16
xor
jns
mov
push
add
push
call
pushf
in
insl
add
cwtl
cmovo
stc
je
faddp
or
mov
pop
push
das
fwait
inc
lock
lret
adc
rclb
cltd
mov
call
add
xchg
xor
lods
inc
out
adcb
sbb
mov
add
mov
push
jmp
pop
push
mov
rcrb
test
inc
mov
jecxz
xchg
jge
xchg
ds
push
int
lods
mov
sahf
rorl
add
outsb
mov
js
mov
imul
jns
fcoml
mov
js
cmpsl
out
rcl
mov
testb
inc
daa
test
lds
sbbb
ss
cli
ret
mov
mov
pop
add
cld
push
xchg
aaa
fucomip
and
and
sbb
fistpl
enter
sub
xchg
jo
stos
lods
xor
aaa
mov
mov
jmp
sub
cmp
inc
jae
ljmp
dec
push
mov
xor
cld
pop
inc
jecxz
leave
and
cs
adc
jae
in
lret
sahf
or
mov
push
mov
iret
jecxz
dec
push
fisttpl
retw
sti
lret
movw
inc
test
out
jmp
mov
stos
mov
mov
in
sbb
inc
mov
aam
or
test
sbb
popa
mov
sub
sub
popa
mov
lcall
into
shrb
ficoml
mov
int
fildl
cmpsb
xor
fs
sub
shl
in
mov
push
out
enter
mov
clc
push
mov
mov
mov
adc
dec
or
inc
and
cmpb
adc
outsl
out
jae
pushf
xchg
test
cmc
push
xchg
aad
lea
mov
dec
ljmp
ja
and
enter
and
xlat
lds
into
dec
ficoml
jno
xor
jae
aaa
js
sti
cld
test
sub
and
out
push
cld
ja
add
push
call
inc
rorb
inc
ljmp
jb
cmp
fdivrl
scas
jnp
push
pop
daa
jb
sbbb
push
inc
mov
test
sbb
scas
idivl
and
js
cltd
imulb
out
dec
aas
jnp
add
mov
dec
sbb
cmpsb
sub
jmp
dec
icebp
rcrb
add
push
loop
cwtl
clc
nop
inc
bound
or
nop
mov
arpl
iret
fcmovbe
push
enter
outsb
pop
rorl
pop
jle
aad
adc
fsubp
movsb
dec
push
sub
xchg
xchg
cmp
add
pushf
and
scas
push
and
movsl
pop
mov
mov
stos
insl
jne
xchg
pop
xor
jbe
subl
mov
cmp
sbb
jnp
filds
jo
push
pop
mov
int
mov
hlt
sahf
movsb
sbb
or
xchg
mov
sbb
ret
mov
push
mov
scas
cmpsl
in
int3
xchg
inc
movsl
jg
adc
adc
and
cmpb
inc
xor
outsb
out
and
adc
movl
cmp
pop
lea
sub
nop
dec
popf
jp
pop
ja
ds
lcall
mov
pop
or
ret
ret
mov
mov
lods
xor
or
inc
adc
mov
mov
jmp
sbb
rcl
and
xor
lea
push
xlat
jb
ds
daa
testb
out
int3
scas
in
mov
push
push
ds
aas
xor
les
dec
dec
jns
sbb
mov
push
sbb
inc
push
daa
pop
xor
mov
in
push
stc
mov
mov
imul
rclb
lds
out
stos
cmp
in
popa
cld
int3
or
stos
mov
out
xor
sub
fwait
mov
xor
lret
pop
push
pop
jbe
inc
xor
push
icebp
in
xor
cmpsb
sbb
dec
mov
add
push
push
fs
xor
lret
add
inc
daa
leave
adc
inc
or
aam
bound
xorb
mov
ror
outsb
and
shll
fdivrl
imul
jmp
cmc
movsb
push
sub
mov
loope
mov
adc
imul
dec
fisubs
push
jle
popa
inc
data16
testl
inc
pop
mov
cmpsl
jmp
sub
mull
call
jns
pusha
add
xor
add
sbb
xor
add
push
or
mov
dec
inc
dec
adc
pop
fcmovne
sarb
outsb
mov
lds
loop
lcall
push
imul
iret
jecxz
jns
dec
mov
je
add
cmp
lock
xchg
roll
push
incl
je
xchg
and
aad
stc
out
int
or
dec
push
mov
xor
pop
aad
push
shll
out
jbe
mov
popl
loopne
jecxz
sbb
ss
in
test
test
adc
leave
dec
inc
cmp
pop
es
adc
testl
outsl
inc
inc
pusha
daa
and
mov
jp
notb
inc
sub
fs
push
lods
inc
sub
and
inc
call
or
dec
mov
fldt
subl
inc
adcb
pop
imul
scas
xor
or
out
xchg
lea
nop
mul
dec
mov
inc
sub
addb
xlat
jns
pop
cmp
cltd
in
insb
rcll
inc
adc
outsb
das
xchg
clc
jecxz
adc
dec
repnz
mov
arpl
mov
dec
jmp
mov
call
mov
push
popa
xchg
das
or
sbb
lea
mov
lock
movsl
jp
dec
movups
data16
sbbb
and
pushf
scas
dec
fld
les
sar
cltd
stos
rcl
push
in
pop
and
push
push
sbb
cwtl
pop
adc
push
or
push
mov
cltd
jmp
dec
push
stos
or
std
pusha
imul
pop
xor
imul
lock
push
data16
out
push
mov
repnz
mov
cmpsl
test
pop
mov
sub
xlat
or
arpl
shlb
jbe
sar
nop
xlat
insb
arpl
ret
cmp
dec
mov
and
cltd
adc
sti
and
pop
mov
xor
add
movsl
in
test
das
gs
loop
or
cmp
bound
lcall
or
daa
mov
pop
lcall
clc
rolb
xor
mov
das
xor
dec
out
cmpl
mov
and
cs
mov
js
push
cmp
sub
or
mov
or
jnp
push
dec
dec
cmpsb
xchg
cmpsb
dec
or
and
dec
stos
dec
mov
jecxz
cli
push
int
rcrb
into
xchg
mov
jne
movd
ret
xchg
scas
xor
out
or
adc
pop
test
nop
lahf
ret
repnz
push
lods
in
lcall
xchg
movsl
pop
movsb
leave
xchg
lods
sbb
std
push
jmp
mov
mov
xchg
les
comiss
and
inc
dec
add
lock
test
inc
outsl
es
sbb
xchg
rolb
and
sub
popa
std
rolb
dec
and
sbb
mov
mov
loopne
inc
js
pop
pop
mov
fildll
imul
xor
movsb
xlat
mov
sbb
aad
inc
mov
repnz
inc
mov
ret
sbb
clc
test
mov
dec
push
pop
pop
ret
out
lahf
pop
in
loope
or
inc
out
sub
movsl
sub
add
movsb
dec
pop
or
imulb
lds
testl
lcall
push
push
faddl
int3
and
sbb
fidivl
data16
mov
insb
mov
scas
mov
fidivrl
xchg
clc
int
cmpsb
xchg
mov
adc
sub
pop
push
mov
dec
mov
call
mov
jae
aad
lds
and
lea
ror
pop
push
idivb
out
inc
xchg
data16
and
test
bound
in
xlat
mov
xor
lret
shrb
pop
scas
inc
cmpsl
mov
bswap
cmp
pop
and
jg
stos
inc
int
loop
icebp
jp
gs
jns
adc
in
mov
and
lret
cmp
xchg
shl
stos
dec
xor
jmp
stos
adc
inc
mov
cmpsb
or
rclb
add
ja
mov
adc
hlt
fs
pushf
in
push
pop
cmpsl
cmpsb
ljmp
cmp
fs
lds
ret
push
xor
push
mov
sbb
add
pushf
data16
push
xor
inc
hlt
pop
mov
ret
mov
cmp
movsl
test
in
jp
fimuls
out
aas
cs
inc
out
sti
mov
inc
cmp
or
jae
mov
scas
xchg
movsl
leave
mov
cmovp
mov
mov
in
dec
lret
lds
jecxz
and
icebp
scas
push
popa
adc
adcl
and
pop
and
jnp
lock
insl
into
bound
lret
loopne
mov
xchg
push
xorb
sub
add
test
inc
shll
sbb
and
dec
jb
shlb
push
push
fmulp
mov
push
mov
inc
out
inc
and
test
dec
out
fwait
and
ds
sub
pop
mov
xor
inc
pop
pop
outsb
adc
gs
gs
or
aad
pusha
shlb
mov
dec
fcom
xchg
adc
mov
mov
ret
out
add
js
mov
in
and
fstps
sbb
int
int
in
arpl
ss
xchg
test
and
in
and
fsub
cmc
xchg
and
sbb
bound
leave
push
xchg
cmp
adc
jne
mov
out
push
cltd
btr
xor
mov
sti
ficompl
xorl
mov
lret
ja
add
pop
xchg
jne
mov
sub
dec
int
data16
lcall
pusha
bound
cld
out
shrb
aam
mov
pop
out
addr16
addr16
nop
lods
sbb
and
cmp
fists
or
out
mov
cmp
ret
dec
mov
fs
es
gs
pop
sub
test
inc
xor
add
nop
je
sub
xchg
jae
pop
adc
fcmove
loope
arpl
cmpsb
inc
sub
js
or
aas
iret
sti
sbb
and
push
in
add
pop
ja
lods
xchg
into
aad
mov
ja
gs
in
fistpll
pushf
lock
mov
push
push
repnz
movb
daa
out
rcll
cli
out
les
and
xchg
or
jno
out
andl
ja
add
inc
adc
jno
pop
xlat
outsl
sbb
out
xchg
out
into
dec
outsb
popa
dec
std
xchg
loopne
lds
push
fdivr
xor
pop
gs
pop
cmp
outsb
aaa
clc
sub
adc
cmc
testb
test
push
repnz
movsb
daa
push
fnstcw
psllq
jnp
lods
clc
ss
outsb
jnp
push
push
pop
fiaddl
mov
mov
fucomp
xchg
jb
fidivrl
cmp
jno
cld
inc
das
sbb
push
int3
mov
mov
xchg
lret
jmp
mov
dec
jne
scas
das
leave
push
push
push
lret
adc
andb
or
lahf
adcl
aad
pop
loope
lahf
xchg
sbb
jle
std
into
and
xchg
lds
add
mov
out
xor
addr16
out
jo
mov
mov
hlt
mov
mov
mov
lods
je
inc
insl
cli
fs
sbb
pop
inc
in
inc
ret
fdivrs
lock
cmp
add
mov
sbbb
out
cltd
mov
cwtl
rclb
adc
sub
lods
mov
roll
sarb
decb
push
push
loop
std
sbb
test
mov
cmp
pop
inc
stos
jne
inc
stc
dec
lock
ljmp
jno
xchg
or
mov
jg
je
imul
jle
push
or
ljmp
xchg
adc
push
dec
lcall
mov
cmp
cmp
push
xor
adc
lds
sub
add
jb
daa
shll
mov
hlt
rcl
cmp
test
cltd
push
fwait
inc
pop
jno
or
sti
pop
imul
jb
sub
int
iret
or
jnp
jmp
mov
sbb
imul
loopne
testb
movsl
lret
fadds
jo
shl
stos
jecxz
dec
fwait
loopne
es
and
lret
sahf
inc
add
popa
mov
adc
addb
jns
outsb
test
pop
ret
cmp
adcl
mov
or
rorb
into
and
xor
stos
or
in
cmp
fs
push
rorb
mov
mov
jle
pop
sub
push
and
jg
cs
mulb
sbb
sahf
fxch
lds
or
div
jl
mov
cmp
lods
adc
call
mov
and
mov
fnstenv
sti
or
inc
enter
pushf
mov
test
pop
das
xchg
lods
ror
xor
sbb
in
subl
aas
cmp
prefetcht1
mov
mov
adc
stos
lcall
iret
push
cmp
jp
movsb
xchg
out
out
movsb
je
rclb
pop
pop
cmp
sbbl
or
iret
sti
mov
popf
dec
mov
push
test
adc
js
cmp
in
xchg
sahf
pop
add
or
hlt
repz
push
fisttpl
sub
ja
pop
test
jmp
xchg
test
dec
aas
test
jmp
jle
xchg
mov
xchg
popf
enter
lret
test
ja
mov
jne
cmpsb
pusha
divl
loop
and
xor
adc
imul
adc
loope
sbb
out
out
cmp
in
sbb
push
fwait
pop
cmp
jmp
jl
and
and
lods
test
scas
loope
cmpl
mov
into
jb
mov
lret
in
mov
movsb
ja
sarb
pop
loopne
je
xchg
es
lret
and
stos
out
ljmp
call
lahf
mov
pop
sbb
dec
cmc
pop
mov
or
and
and
push
rcrb
xchg
addr16
add
movsl
outsb
push
mov
jle
mov
or
js
or
mov
fildl
dec
mov
scas
shl
test
and
arpl
addps
out
or
fs
jmp
bound
rclb
jecxz
out
push
add
xchg
push
movsl
out
sub
fidivrs
hlt
popf
cmp
cmp
jp
or
pushf
adc
jg
or
lret
or
sahf
mov
jg
push
and
mov
inc
fadds
cmp
sub
push
cmp
lahf
cwtl
push
sub
ret
lods
sbb
das
mov
stc
gs
jnp
cwtl
sti
aad
ds
xchg
and
repz
sbb
aad
loop
stos
int3
fiaddl
cmp
pop
int
xor
push
mov
cli
decl
jmp
cmp
shll
mov
pop
dec
cld
push
sbbb
fwait
movsl
add
jge
ja
push
imul
and
data16
xchg
push
add
mov
addb
add
pushf
pop
xor
mov
jmp
fs
lods
stc
test
or
sbb
inc
hlt
jo
mov
lcall
fiadds
adc
iret
or
or
fwait
bound
cmpsb
adc
sub
lea
push
mov
ret
push
sti
jae
loope
sahf
xchg
loop
movsb
imul
or
mov
aaa
rcr
inc
lds
jp
cli
add
push
adc
push
stc
xlat
pop
sbbl
xchg
jmp
mov
dec
movsl
mov
popa
pushl
pop
int3
test
adc
add
mov
push
in
lods
sahf
add
mov
out
cmp
idiv
js
shll
xchg
xor
pop
nop
fldln2
ffreep
call
nop
bound
xchg
sub
and
cmpsb
xor
aaa
push
pop
jnp
aad
test
loop
test
stos
or
lock
sbb
leave
add
hlt
stos
insl
xlat
popf
xor
cli
adc
pop
jl
out
enter
and
lcall
les
fucomip
pop
cmp
add
jne
xor
into
iret
notl
xchg
sub
mov
mov
je
dec
test
mov
sbb
inc
mov
loope
cmp
mov
push
sbb
mov
pushf
aad
das
es
adc
xchg
pop
repnz
adc
cmp
cmp
fs
test
dec
ds
testb
xlat
adc
lock
cld
test
das
or
imul
inc
mov
pushf
cltd
jg
cmc
ss
andl
dec
mov
movsb
add
sub
cltd
xchg
nop
sahf
pop
fidivrs
xorl
mov
popf
fsubrl
sub
pop
jne
cmp
insl
and
xchg
cmpsl
jns
in
lcall
fstps
xchg
loope
nop
data16
fucomi
push
sbb
mov
mov
mov
test
pop
lcall
pop
cmp
sub
stc
call
imul
iret
adc
cwtl
rolb
cmp
add
mov
aam
lret
jb
jnp
inc
jp
cmp
rolb
std
and
in
xlat
mov
aaa
and
and
xchg
adc
xor
lret
ds
or
push
xor
pop
push
inc
dec
pop
pop
ret
jb
add
mov
jne
push
in
pop
negb
cs
in
es
ss
loope
fisubrs
jo
add
xor
add
subb
test
add
gs
cmp
jbe
xchg
mov
xchg
sbb
ja
dec
sub
pop
aad
add
nop
mov
out
inc
xor
arpl
popa
mov
mulb
popf
imul
call
sbb
out
xor
xchg
hlt
out
call
add
xor
xchg
sub
mov
adc
or
ficomps
std
cmp
mov
stos
or
dec
push
out
nop
andps
inc
or
pop
es
pop
mov
sub
int
or
in
and
jae
sub
adc
insb
outsl
imulb
sarb
mov
movsb
mov
mov
dec
cltd
daa
test
clc
sti
pop
sbb
push
and
divb
push
addb
mov
jno
gs
insb
fstps
sar
arpl
cmpsb
sbb
jnp
push
int3
lea
cmp
jge
bound
jb
xor
stc
roll
fucomi
cmp
jns
adc
test
mov
inc
add
loop
push
fcomi
inc
in
call
pop
pop
mov
adc
sub
cmp
and
mov
pop
aad
mov
repnz
aad
adc
in
and
inc
aaa
fidivl
repz
pop
mov
push
lcall
test
andb
and
mov
or
mov
pop
xchg
jne
pop
jle
fisttps
ds
xlat
mov
aam
or
dec
call
cwtl
gs
out
insl
jne
ret
or
mov
lea
sarl
cmp
ret
test
js
loopne
jae
push
jle
lahf
or
daa
sub
jns
xor
xor
jge
sbbl
movsl
pop
inc
fsubp
test
std
and
out
jo
jb
mov
push
inc
inc
insb
xor
inc
fidivs
and
or
fcoms
pushw
in
ds
das
jle
pop
jge
mov
dec
sbb
sub
cmp
insl
leave
ret
inc
or
cmp
dec
and
or
xor
add
sbb
mov
sahf
mov
or
into
dec
sahf
sarb
jl
sub
nop
sbb
mov
adc
in
jbe
rcll
test
das
add
or
lahf
out
sbb
mov
loop
popf
fs
out
sahf
cld
in
ja
cmp
xchg
sbb
push
out
movsb
and
jl
pop
dec
adcb
jg
add
fisubrl
or
lahf
jae
call
sbb
cli
cmpsb
jmp
fcomp
roll
sub
adc
sti
xor
and
inc
xor
or
sub
test
movsb
jmp
lret
sub
rcl
mov
cmpsb
in
adc
gs
int
es
pop
push
cs
fisubs
lods
or
test
inc
xchg
aas
xchg
cmp
sbb
es
mov
cmpsb
add
mov
pop
shll
imul
mov
js
ret
sbb
mov
sti
xchg
dec
test
call
cmpb
aad
pop
pop
lret
xor
jno
dec
sahf
or
leave
pop
fwait
jns
sub
pushf
cmpb
ficompl
arpl
orl
or
shrl
or
add
std
mov
dec
je
movsl
adc
jmp
inc
cmc
sbb
inc
daa
cwtl
ficoml
into
pop
mov
add
lds
lods
mov
pop
cmp
js
fsubrl
inc
mov
adc
aas
cmpsl
call
or
jmp
jb
in
mov
test
outsl
popa
in
xchg
push
mov
nop
lret
sub
mov
in
test
pushf
xchg
sbb
push
pop
push
clc
or
divl
or
sbb
orb
add
cli
mov
pusha
jp
not
jno
mov
popf
add
xlat
sub
vshufps
nop
mov
mov
mov
jl
ljmp
shll
decb
ja
test
cs
push
or
adc
sub
flds
lock
jp
loopne
das
pop
aam
fcomps
mov
lea
sub
ret
pushl
push
in
mov
push
inc
aas
dec
push
sub
mov
shll
adc
mov
mov
pop
mov
aas
fstpt
dec
ja
fs
testl
addr16
sbb
xorl
jb
enter
ljmp
mov
mov
mov
jge
push
mov
stos
xor
push
loop
adc
pop
cmc
add
mov
fldl
sahf
sub
or
sub
les
das
or
roll
sbb
add
in
shl
xchg
sub
jp
into
pop
shll
and
sbb
outsl
mov
out
rcll
movsl
cmp
icebp
scas
test
aam
and
fstp
mov
mov
dec
and
add
in
fdivs
jge
pop
xlat
jp
jmp
mov
cmp
iret
or
pop
or
cmpsb
or
inc
push
jbe
add
sub
mov
jne
xchg
mov
jnp
es
and
rcrl
or
xor
aam
push
inc
repz
xchg
mov
in
and
mov
sub
pop
inc
inc
mov
push
outsl
mov
mov
adc
xchg
jp
cmp
add
loopne
ds
jae
inc
sub
mov
mov
adc
ja
mov
adc
imul
insb
daa
insb
add
insl
cmp
push
inc
or
ss
inc
inc
clc
xchg
sub
daa
add
std
outsl
cld
sahf
xor
movsl
jo
mov
sbb
pop
daa
outsb
or
xchg
xchg
mov
les
loopne
jo
mov
cmp
mov
and
or
push
dec
jnp
mov
dec
or
and
push
mov
jecxz
imul
enter
ret
scas
jge
test
sahf
ja
or
add
cmp
cwtl
fwait
or
pop
or
jecxz
cs
jno
ret
jb
mov
les
sbb
ds
mov
shlb
lods
inc
mov
mov
pop
sbb
cmp
mov
pop
sbb
stc
sar
shrb
insl
mov
pop
roll
push
dec
sbb
pop
shr
mov
aas
icebp
xchg
mov
loopne
add
mov
shll
jnp
testl
mov
xlat
out
ja
inc
js
rclb
dec
dec
test
stc
inc
xchg
pop
xchg
insl
sbb
jmp
stos
jno
dec
inc
ja
popa
iret
mov
das
out
ljmp
fbld
xchg
sub
inc
cmp
push
loope
xchg
insl
test
pop
inc
xor
adc
lock
sbb
sub
inc
push
pusha
popa
int3
adc
ds
test
popa
fidivs
cmp
mov
adc
mov
data16
fadd
cld
xor
sar
push
je
mov
imul
cmp
jge
das
test
sarb
sbb
push
xchg
xor
lret
pop
std
or
jecxz
adc
xor
dec
test
ds
call
orl
pop
mov
pushf
sub
fs
push
push
scas
jecxz
jmp
int3
aas
pop
ss
mov
lret
and
xchg
notl
pop
andl
es
in
loop
fildll
jge
lock
push
sbb
inc
xor
xchg
js
pop
fisubs
add
addb
mov
add
lds
push
dec
sub
xchg
call
push
jnp
mov
aas
and
hlt
lock
std
dec
sub
pusha
jb
cmc
push
pop
adc
mov
adc
sbb
xor
mov
pop
cltd
mov
jg
pop
nop
scas
ss
out
fdivr
add
fs
fnstcw
daa
add
addr16
sbb
das
jmp
sub
movsb
mov
out
push
sbb
mov
mov
mov
dec
mov
mov
js
cmpsb
sub
pop
mov
rcrl
imul
and
ss
xchg
mov
dec
mov
subb
jno
and
or
in
popf
ffreep
sub
mov
push
je
jge
cmp
mov
gs
in
subb
mov
jbe
test
xor
bnd
pop
jmp
xor
int3
sbb
and
in
sub
test
xchg
hlt
imul
lret
repnz
dec
lock
sub
in
mulb
xchg
jge
andl
xor
mov
cmp
dec
fidivs
orl
push
jle
shrl
xchg
shlb
mov
or
mov
inc
mov
test
push
pop
mov
cmpsl
cmpsb
mov
jno
scas
ja
jmp
push
test
xchg
lock
add
mov
mov
call
fcmovu
pop
mov
ja
xor
add
cs
pop
scas
dec
add
push
js
xor
xor
pushw
lahf
xchg
arpl
fldcw
insl
push
rcrl
loope
jb
or
ret
in
push
push
push
sahf
test
add
jge
popf
outsl
dec
pop
xchg
mov
loopne
cmp
hlt
mov
inc
flds
ret
push
data16
les
clc
sub
xchg
aad
in
andb
mov
in
lods
mov
lahf
push
sub
pop
push
xchg
lahf
sbb
outsl
inc
test
arpl
dec
lds
sbb
push
fsubp
dec
push
repnz
jb
xor
push
inc
cmp
or
xchg
cmp
add
addr16
in
in
imul
push
mov
stos
je
xor
xor
out
andb
lss
loopne
subb
xlat
xor
out
inc
sbb
lret
mov
adc
xchg
push
andb
jne
mov
out
iret
xchg
repnz
aad
adc
xchg
shrb
push
inc
aad
sbb
sarl
in
xlat
push
xchg
cmp
inc
or
cmp
insb
scas
sbb
lcall
mov
iret
cwtl
stc
fimull
sub
mov
stos
or
pusha
ret
cmpsl
xor
mov
aad
dec
inc
cld
jno
dec
cmpsl
scas
pusha
cld
mov
insl
jbe
jne
pop
adc
inc
lret
hlt
mov
sub
cwtl
fwait
daa
mov
jnp
pushl
lret
imul
cld
iret
aaa
xor
push
cld
xchg
data16
stos
jae
inc
aas
xchg
push
add
imul
push
ret
sahf
dec
or
jo
iret
test
inc
aam
inc
into
loop
add
cmp
mov
mov
aas
popa
and
jb
pop
cmp
adc
adc
stos
mov
outsb
aaa
mov
jmp
pop
sub
xchg
xor
cmc
xchg
pop
imul
xlat
imulb
xor
shrl
jg
dec
pop
and
or
dec
orl
mov
sahf
enter
dec
les
scas
pop
cmpsl
xchg
bnd
jmp
sbb
out
out
push
adc
insl
push
call
inc
push
pop
outsl
pop
jne
nop
idivl
xor
add
pop
pop
pop
inc
sub
add
jns
or
or
xchg
outsb
rorl
lock
xorb
pop
sbb
mov
mov
jg
cmpsb
push
or
xchg
lea
xor
xchg
mov
jo
std
or
adc
lret
adc
xor
stos
loop
mov
push
adcb
ljmp
xchg
cmp
xchg
insb
push
and
mov
mov
mov
nop
fwait
adc
xadd
sahf
fsubrs
xor
jae
jecxz
mov
sub
add
push
mov
push
and
aas
dec
or
adc
pop
xor
sbbl
add
sti
movsl
mov
sub
arpl
dec
stos
insl
dec
sbb
cmp
pop
and
pop
aaa
inc
jp
in
les
cli
cltd
lds
mov
scas
sbb
test
ret
and
les
dec
jae
clc
inc
dec
cmp
cmp
std
sub
xchg
js
mov
in
inc
add
xor
jecxz
adc
shll
cli
jecxz
leave
sub
ret
xchg
fadds
ss
idivl
notb
push
mov
cmp
out
arpl
inc
lret
fdiv
scas
cmp
loope
je
push
mov
cmp
jmp
inc
pusha
cmpsl
mov
lods
mov
or
inc
mov
pop
lret
cmpsb
mov
xchg
xor
push
mov
dec
xlat
push
sub
add
insl
lods
mov
sti
jns
jp
mov
push
adc
sahf
mov
jne
mov
inc
imul
pop
and
xor
std
jmp
dec
cmp
ficomps
mov
jbe
aaa
pop
and
jmp
nop
aas
scas
push
ja
sbbl
and
test
xlat
jg
insl
cwtl
lods
jns
popf
loop
fs
push
inc
adc
fsts
xchg
push
jecxz
mov
fbstp
or
jne
inc
lods
rorb
or
mov
inc
cmp
imul
insb
mov
call
mov
and
xchg
movsb
and
sub
vphaddbw
mov
xor
add
outsb
lock
push
fnstenv
jns
adc
test
jbe
arpl
or
push
cmp
push
fsub
push
inc
pop
mov
xchg
xchg
ja
or
ja
lock
lcall
jmp
sub
mov
popa
fcompl
jle
idivb
cmp
adc
loope
rorb
fsubrl
mov
fdivs
mov
popf
or
pop
pushf
jb
nop
sub
xchg
cld
aas
fstl
or
call
sbb
outsl
stos
mov
ljmp
fbld
lods
es
dec
jne
xchg
bound
sub
xchg
mov
and
mov
aaa
push
stos
dec
test
adc
mov
notb
insb
sub
adc
popf
sub
xchg
sub
push
ss
jno
adc
sbb
mov
loopne
mov
sbbl
inc
repz
nop
push
loope
sbbl
sub
mov
xchg
sbb
xchg
dec
mov
sub
dec
jle
aam
jo
les
jl
mov
jmp
gs
dec
xchg
mov
adc
in
decl
mov
pop
loopne
cmp
push
clc
ja
fsubs
sbb
xchg
lods
outsb
inc
cltd
in
push
fiaddl
jnp
loope
xchg
jns
loopne
sahf
cs
outsb
sub
test
insb
fldt
jb
clc
jno
scas
mov
push
or
mov
xchg
pushf
rcl
adc
fsubrp
insl
aam
in
in
scas
out
sbb
in
outsl
scas
or
icebp
pop
into
xlat
jl
add
cmp
mov
ret
mov
and
rcrl
jae
bound
sti
adc
insl
adc
sarb
fs
cmp
inc
lods
rcl
mov
sti
insb
jge
inc
mov
fwait
sub
iret
mov
pusha
call
lea
mov
js
les
pusha
scas
sub
jnp
dec
dec
movsl
push
faddl
jecxz
nop
dec
cmpsl
add
adc
sbb
int3
leave
inc
sub
loopw
xor
jnp
lds
and
xchg
inc
ljmp
in
int
jg
mov
cmp
fisttps
mov
sbb
inc
jp
push
and
inc
je
test
mov
push
imul
rcrb
popf
out
cmp
xor
and
cmpsb
mov
cwtl
push
mov
jge
mov
orb
outsl
and
outsb
jle
scas
pop
arpl
div
into
pop
and
mov
fiadds
mov
sahf
inc
mov
leave
pop
mov
sti
jo
mov
cmpsb
aam
inc
xchg
lods
jns
std
movsb
mov
out
mov
jno
sbb
push
out
sbb
loop
mov
mov
cmpsb
movsl
xchg
xchg
cmp
scas
aam
mov
shl
jp
pop
lods
cltd
jge
mov
dec
shrl
aas
test
js
mov
popf
lahf
push
cmp
push
sbb
pop
js
ss
mov
shll
add
add
and
push
rolb
dec
cmpsl
pop
or
mov
sbb
adc
jg
cltd
loope
nop
ficoml
popf
add
cmp
pushf
jg
xor
flds
outsb
mov
cmp
in
mov
int3
call
shll
add
bound
aad
es
cmc
inc
xchg
movsl
js
call
inc
into
mov
or
les
mov
xchg
movsl
mov
call
outsb
sbb
adc
push
movsb
add
jl
aad
in
addr16
jge
cmpsl
mov
mov
cmpsl
fdiv
add
inc
sbb
es
pop
pop
or
push
es
sbb
xchg
repz
ljmp
inc
sti
push
mov
jnp
mov
dec
cltd
popf
sub
sbb
xchg
pop
ss
xchg
insl
mov
scas
lret
ret
lods
push
mov
or
fcoml
jae
std
pop
cli
mov
mull
imul
mov
push
ss
or
mov
leave
stos
inc
push
mov
cmp
je
and
add
xor
xchg
scas
fadd
sub
jmp
push
mov
dec
mov
fstpt
mov
add
adc
pop
inc
and
nop
repz
xchg
push
adcl
outsb
stos
mov
jnp
add
push
xchg
int
xchg
mov
rcll
xor
or
std
add
aas
add
in
xchg
dec
notb
lods
or
cmc
enter
xor
andb
push
arpl
ja
lds
mov
jb
rcrl
jecxz
pop
int
cmp
sub
jb
mov
mov
and
jp
dec
add
sub
pop
mov
cltd
mov
sahf
mov
mov
test
pop
dec
les
xchg
sub
push
cmp
xor
stos
jne
jle
imul
bound
push
xchg
lret
inc
aaa
mov
je
add
mov
flds
jo
inc
pusha
and
push
clc
or
out
shrl
int
add
sbb
jnp
js
pop
test
push
clc
xchg
iret
clc
loope
pusha
call
mov
jmp
jae
lcall
es
adc
mov
ja
and
test
jno
lds
sti
pop
cmp
pop
lret
cmp
xlat
nop
dec
pushl
mov
mov
repz
adc
loop
xchg
add
sbb
pushf
pop
inc
popa
mov
or
cld
insb
cltd
inc
mov
movsl
xor
xchg
fsubrs
sub
insl
mov
xchg
and
pop
adc
lahf
push
std
dec
xchg
shlb
fbstp
xor
pop
das
adc
stos
sub
enter
mov
cmp
mov
in
sub
push
xchg
sub
ss
xor
cmpsl
and
xlat
push
fs
push
adc
addl
add
leave
jns
cld
mov
jp
enter
test
jns
decl
push
aaa
inc
push
test
mov
gs
pop
mov
subb
xlat
jecxz
jmp
inc
jg
lcall
shlb
add
mov
lods
pushf
mov
mov
mov
addr16
mov
loop
sti
inc
jmp
jbe
push
and
mov
mov
xchg
imul
pop
jne
fistpl
xlat
mov
pop
test
sar
pop
cmpsl
dec
mov
loopne
sub
mov
subb
hlt
inc
aam
add
add
sahf
cmpsb
es
pop
sbb
scas
in
lea
dec
cltd
icebp
mov
int3
xor
xchg
dec
push
xchg
enter
inc
xor
sbb
les
mov
andb
rcrl
fsub
cmp
inc
es
jo
xchg
xor
xor
loop
or
sub
ljmp
cmp
cs
inc
xor
xchg
gs
xor
adc
scas
jnp
pop
jge
mov
int3
or
inc
test
mov
mov
hlt
lcall
cld
cmp
jbe
loope
loope
ja
enter
lret
add
jo
xchg
fisttpl
imul
dec
dec
mov
mov
ud1
popf
mov
and
cmp
icebp
add
inc
ss
and
test
mov
push
lods
adc
imul
js
addl
lcall
fwait
out
sub
pop
repnz
and
mov
mov
rcrb
dec
or
jl
xor
jno
mov
pusha
pushf
pop
jnp
jmp
sbb
sbb
cmpsb
adc
sub
mov
push
or
repnz
pop
add
rol
lea
insl
je
test
or
flds
scas
or
lcall
inc
mov
pop
mov
insb
rolb
xchg
or
adcb
sub
mov
and
sti
dec
xor
daa
vmread
mov
sub
ja
push
js
leave
dec
and
jo
mov
push
jmp
add
popf
int3
push
xchg
dec
loopne
push
stos
out
sub
dec
fmull
aaa
sub
stc
aad
sub
cmp
mov
ret
dec
jmp
dec
cmpsb
iret
inc
dec
push
mov
rorl
and
mov
dec
jnp
addr16
popa
ljmp
pop
dec
sub
int3
add
inc
pop
test
stc
into
stos
or
test
aaa
es
xchg
jp
stos
insb
fisttpl
ds
xchg
jecxz
mov
movsb
cmp
outsb
push
xor
mov
pop
mov
cmp
mov
adc
cmp
std
xchg
lea
adc
rcrl
mov
cli
in
and
fldl
stos
dec
or
mov
pop
cmpsb
xchg
jl
out
mov
imul
sub
jbe
and
nop
mov
sub
sub
mov
sbb
pop
mov
add
pusha
stc
shrb
insb
aas
lds
inc
xor
daa
sti
adc
adc
xor
popf
shl
mov
cs
pop
andnps
out
jnp
cs
push
and
mov
pop
cmp
adc
push
in
push
das
sub
sub
mov
loop
sti
idivb
repz
xchg
mov
pop
mov
xor
xlat
xchg
or
ret
cltd
fdivrl
jl
mov
dec
mov
loope
adc
add
sbb
lret
dec
dec
adc
mov
les
loop
xor
es
sub
daa
xlat
pop
popf
add
mov
mov
test
cmc
or
les
in
mov
leave
scas
fnstenv
fs
repnz
iret
cmpsb
push
push
mov
dec
movsb
adcl
les
scas
or
hlt
xchg
cmp
fmuls
sti
mov
and
xor
fildl
in
aad
adc
iret
out
enter
and
dec
xor
and
aad
outsl
adc
pushf
sbb
cmc
add
dec
mov
int3
out
cwtl
cld
pop
gs
scas
andl
idivl
xor
outsb
xchg
loopne
sub
push
out
jp
inc
xor
push
stos
jae
add
sbb
adc
std
out
in
xor
push
loope,pt
sbb
hlt
popa
jno
cmp
cmpsb
cmp
push
repnz
adc
pop
add
cmp
icebp
sahf
jmp
test
fists
test
stos
into
sahf
imul
inc
xor
or
adc
int
mov
outsl
out
inc
jbe
xor
mov
stos
add
pop
imul
adc
xchg
pop
add
inc
mov
inc
inc
cmp
pop
mov
ljmp
shlb
or
push
xor
jns
or
out
push
dec
lcall
mov
repz
fnsave
pushf
das
popa
push
fwait
jl
out
dec
daa
dec
ljmp
nop
jle
push
pop
pop
fwait
ror
fucomi
jno
outsb
bound
add
xchg
push
fsubl
stos
aad
mov
mov
cltd
je
sahf
and
sbb
test
pop
adc
andl
enter
cmpsl
pop
mov
cmpl
mov
sub
dec
mov
and
pop
xor
and
adc
add
or
rcr
xor
je
jne
repz
adc
xor
fldenv
jmp
lcall
les
in
aas
mov
scas
adc
rorl
mov
repz
pop
sbbl
andl
add
mov
mov
push
xchg
lret
mov
cmpsl
in
and
in
xchg
pop
mov
bound
and
dec
mov
mov
dec
shlb
jle
dec
jecxz
xor
sarl
sub
xchg
inc
add
ret
jbe
xchg
ficoml
and
sub
jbe
outsb
adc
xchg
pop
push
mov
dec
fstl
int
ljmp
mov
rcrl
mov
pop
shrb
xchg
xchg
fistpl
dec
je
pop
adc
test
dec
stos
aas
cmp
xor
sub
push
fldl
push
mov
pop
mov
dec
or
mov
adc
mov
jnp
and
rcr
out
test
pop
cmpsb
loopne
sub
out
jo
out
cmc
test
pop
es
rolb
jge
nop
addr16
xchg
repz
pmaxsw
and
incb
mov
cmp
or
xor
inc
aaa
movsb
mov
aas
sbb
insl
xor
out
jae
push
imull
aam
aad
xchg
dec
and
jmp
push
dec
adc
test
mov
adc
aaa
add
mov
inc
dec
cmp
leave
mov
inc
cmp
xchg
pop
cwtl
mov
xor
lret
fbstp
das
aam
aad
xchg
push
lea
adc
jmp
adc
test
mov
adc
pop
cmpsb
lret
add
iret
xchg
and
dec
inc
lea
sub
jne
rcl
pop
stos
pop
hlt
cmc
or
ficoml
push
xchg
inc
mov
cmp
bound
daa
sub
cmp
jne
cmp
sti
aas
cmpsb
mov
out
cmp
clc
aaa
mov
lret
mov
popa
xchg
lahf
or
pop
cmpsb
pop
dec
negb
mov
lcall
loop
xchg
pop
mov
jo
mov
fwait
jmp
pop
xchg
nop
mov
mov
mov
insb
divl
sbb
bound
jo
sub
pop
or
mov
aaa
ljmp
dec
and
pop
daa
xchg
leave
pop
sub
push
mov
insl
das
cmc
in
mov
div
jecxz
out
popf
mov
xchg
inc
dec
iret
jmp
push
xchg
pop
jo
rolb
and
mov
imull
mov
push
out
arpl
mov
add
js
lods
jb
or
enter
aaa
and
mov
cli
mov
mov
inc
mov
inc
aam
and
jns
mov
out
cltd
dec
js
pop
cmc
sbb
or
enter
in
cmp
cld
xchg
dec
inc
pop
dec
xor
stos
test
ret
aaa
popa
mov
out
and
dec
fsubl
clc
dec
push
mov
add
push
jne
jg
adc
lods
adc
lds
pop
aam
ret
add
cmp
jg
mov
mov
and
nop
js
dec
jp
sbb
add
or
insl
adc
xor
sub
cmp
pop
mov
jbe
ja
push
test
sub
rorl
lahf
out
stos
popf
xor
dec
rcll
pop
out
lea
iret
adc
popf
inc
or
roll
mov
mov
mov
cwtl
push
and
xchg
jmp
xor
insb
xchg
push
xor
in
jecxz
movsl
mov
jno
ret
arpl
add
mov
dec
scas
inc
jl
push
into
push
icebp
or
andl
and
pop
imul
cmc
add
in
sbb
rcll
add
lcall
arpl
pop
jg
pop
mov
int
cli
int3
add
cltd
sbb
dec
scas
ds
sbb
xor
aas
or
mov
xchg
dec
jle
sahf
sub
dec
sti
push
adc
sub
filds
icebp
outsb
dec
fcoms
mov
repz
lcall
orps
lret
jle
mov
or
int3
jl
xor
push
jge
test
hlt
adc
scas
sahf
hlt
pop
pushf
push
bnd
push
insl
ja
dec
mov
out
push
data16
push
out
xor
push
insb
iret
mov
add
test
sbb
in
jno
xor
pop
aaa
pop
faddl
add
pop
jge
popa
ja
mov
movsb
xlat
fdecstp
mov
fwait
movsb
dec
rolb
sbbb
mov
movsl
dec
inc
aas
bound
out
cmp
arpl
push
mov
scas
hlt
mov
sbb
push
sarl
outsb
dec
mov
sbb
mov
add
adc
data16
or
in
icebp
jb
mov
jecxz
sti
lcall
mov
sbb
add
das
vcvtpd2dq
fdivl
aad
rcl
push
fwait
push
imul
sbb
or
fisubrl
jo
pop
hlt
jg
cwtl
inc
in
cli
lock
jge
arpl
mov
loop
jns
rcrb
adc
mov
icebp
insl
lea
bound
js
cmp
ljmp
cltd
cmc
repnz
jmp
cli
xlat
jg
fbld
inc
int
xchg
inc
pop
xor
inc
mov
inc
clc
sbb
push
xchg
test
rorl
in
in
and
xchg
jg
jmp
mov
insl
adc
push
xchg
stos
mov
lret
and
push
adc
rorb
divb
loope
mov
int3
xchg
pop
out
mov
sub
jle
in
decb
xor
mov
enter
mov
jg
adc
cmp
adc
cmc
mov
cld
pop
inc
test
xchg
inc
dec
and
xor
shrl
jecxz
into
jle
outsb
fimull
sbb
add
and
fidivl
repz
je
jnp
cmp
test
jne
das
mov
mov
jl
sahf
and
out
mov
mov
lret
mov
inc
andb
enter
repz
lds
popf
adc
mov
mov
cmp
mov
mov
nop
roll
test
xchg
add
and
and
and
out
enter
cmp
adc
dec
lock
xchg
iret
pop
sbb
sub
xchg
sub
sbb
out
mov
mov
repz
mov
push
je
outsl
cltd
adc
dec
ds
and
cmpl
in
lret
xchg
lods
add
mov
lds
ds
adc
or
fs
arpl
pop
mov
adc
mov
push
pop
jg
xorl
ret
lahf
fisubs
sub
sub
jnp
mov
add
imul
mov
mov
xor
mov
adc
cmp
fprem1
int
out
lods
inc
cmc
or
hlt
cmp
movsl
iret
xchg
xchg
jecxz
dec
scas
mov
mov
cs
popf
shll
or
mov
pop
into
scas
enter
and
jb
dec
es
loopne
push
bnd
inc
or
ljmp
stos
inc
inc
fcmovnb
cmp
scas
jne
jnp
jle
xlat
push
je
sub
outsb
mov
sbb
mov
pushf
sbb
dec
dec
repnz
xlat
int
adc
sbb
sbb
and
xchg
xor
jge
and
pop
adc
std
mov
mov
add
and
mov
out
jecxz
lds
jb
insb
aaa
push
adc
data16
jg
popa
push
jle
in
mull
enter
xor
sbb
out
mov
aad
dec
cmpsl
cmp
jge
lods
xor
clc
inc
divl
movsl
insl
jecxz
int3
cld
outsb
lock
mov
sti
cmp
and
add
cli
lds
pop
mov
lret
js
out
imul
pop
mov
cs
repz
mov
sub
int
les
cmpl
aas
adc
and
jge
aas
dec
push
ljmp
mov
xor
ja
sbb
pop
xchg
insl
sbb
mov
jp
xor
fs
insb
jl
inc
fstps
cmp
ret
lret
push
gs
leave
cmp
shrb
add
add
enter
cmp
dec
repnz
xlat
loopne
fbld
cmpsb
lods
mov
addl
pop
sbb
nop
mov
clc
into
dec
inc
jmp
pop
ds
pop
cmp
int
mov
int3
icebp
inc
loop
push
rcr
aad
outsl
cmp
pop
int3
cmp
and
jg
mov
xchg
dec
fmuls
add
dec
inc
scas
add
jge
dec
push
sub
jns
or
test
push
popf
and
push
cltd
sub
adc
mov
mov
mov
pop
push
stc
pop
fnstcw
jne
movl
push
xor
xor
adc
and
cmp
dec
movsb
pop
mov
dec
stc
pop
lahf
dec
out
popa
lea
xor
pop
jo
adc
cmp
cmp
js
test
pop
jne
pop
xchg
bound
ds
sbb
mov
pop
jecxz
movsl
ficoml
stos
sub
dec
add
sbb
mov
mov
out
das
lcall
push
je
pop
icebp
sbb
add
adc
stos
pop
or
cmpsb
pop
adc
imul
xor
hlt
jg
inc
out
mov
xchg
jmp
scas
xchg
and
or
jno
mov
cmp
ss
or
xor
push
into
out
or
and
in
mov
into
outsl
subl
push
into
shll
pop
and
test
fistpl
mov
and
sub
adc
dec
xor
sub
bound
movsl
jo
add
adc
mov
fiaddl
mov
les
or
jmp
test
lret
les
addb
clc
dec
out
inc
out
js
push
shll
mov
imul
or
aam
cmp
cmp
adc
pop
add
es
in
pop
jmp
dec
shl
test
mov
int
dec
dec
lods
sbb
sub
xor
sahf
adc
dec
gs
in
mov
idivb
clc
mov
hlt
xchg
loopne
fldcw
dec
out
lret
add
mov
scas
lret
iret
xor
test
aam
into
xor
fcmovnu
mov
in
lods
lret
rcrl
aas
call
divb
lret
mov
sub
mov
scas
data16
or
xchg
cwtl
insb
mov
cmpsb
lock
in
dec
fidivs
and
adc
popa
xchg
cmp
push
repnz
test
mov
test
icebp
cs
mov
sub
icebp
or
adc
dec
jl
jno
popf
sub
or
lock
xchg
add
mov
jne
jmp
lds
mov
hlt
scas
mov
dec
jecxz
rcrl
test
mov
out
inc
aam
pop
dec
dec
stc
mov
loop
dec
xlat
push
aas
negb
aaa
je
int
jno
xchg
fs
icebp
and
lahf
icebp
xor
sbb
xchg
cmp
mov
mov
push
hlt
add
sbb
add
inc
cmpsl
imul
stc
outsl
sbb
kandb
xor
das
jnp
xor
mov
xor
mov
cmp
add
scas
in
flds
cmp
push
cmp
and
ss
ljmp
sbb
ja
loopne
stc
inc
rclb
sti
shrb
rcrb
ja
enter
loopne
push
movsb
jae
add
push
add
testl
outsb
fisubrl
inc
fists
jns
push
lds
ds
repnz
mov
dec
cmp
pusha
mov
sub
lcall
and
inc
mov
and
repz
mov
adc
imul
insl
mov
dec
lods
in
test
enter
adc
pop
ret
lods
xchg
add
mov
xchg
test
push
pushf
xor
inc
dec
dec
dec
pop
scas
dec
mov
pop
xor
aad
popa
or
fistpl
cmpsl
je
adc
push
dec
add
dec
in
mov
and
mov
test
cld
push
in
mov
aad
ljmp
andl
imul
or
aad
call
jecxz
sub
and
test
repz
mov
mov
mov
jbe
aas
cmpsl
mov
jge
imul
arpl
dec
pop
push
lock
in
in
arpl
or
gs
fwait
popa
hlt
call
or
push
fdivrl
sub
fcmovbe
pop
push
nop
push
push
mov
test
leave
addr16
jle
js
fnsave
js
jle
jmp
ret
ret
in
arpl
xor
in
lock
cmp
dec
and
xor
push
les
sub
mov
in
repz
imul
mov
jp
jnp
js
xor
sbb
test
mov
sub
mov
xchg
iret
pop
enter
xchg
test
mov
cli
loop
push
xor
jae
ffreep
imul
movsb
inc
test
mov
push
shrl
aas
pop
fwait
int3
cmp
cmp
xor
jmp
adc
push
mov
jne
mov
xchg
cld
notl
mov
sbb
or
inc
rclb
fsubr
lds
sub
arpl
mov
ja
test
cld
movsl
xor
cltd
and
shr
test
std
add
cmovge
mov
push
mov
xchg
dec
jb
pop
or
xor
push
pop
push
push
sbb
xchg
adc
cmc
cld
mov
mov
les
das
mov
iret
add
lock
push
je
movsl
jb
pop
icebp
pop
aaa
fnsave
mov
lcall
mov
xor
ljmp
or
push
es
pushf
jnp
int
imul
cmpsb
cmp
add
inc
dec
cmp
cld
jg
les
sbb
arpl
pop
imul
int3
push
das
jo
sub
lods
cmp
mov
jne
lahf
aas
push
mov
movsl
mov
cmpl
cli
mov
jp
xchg
mov
push
xlat
js
or
sar
hlt
mov
adc
loopne
lods
lock
cmpsb
dec
repz
sbb
aam
mov
lahf
aaa
sub
sbb
es
cmp
je
cwtl
xchg
or
add
lret
shl
dec
add
outsb
ljmp
pop
jge
push
sub
sub
jno
mov
or
cwtl
jo
jg
xchg
jae
xor
dec
cmp
cmpsl
push
mov
movsb
push
jp
rolb
flds
int3
int
fsts
add
cmp
cmc
test
mov
cmpsb
xchg
mov
ss
add
jns
enter
mov
lahf
inc
jl
neg
push
pushf
orl
add
cwtl
sub
ja
xor
sbb
fisubrs
or
or
add
aaa
cmpsb
jns
mov
or
out
xchg
pop
jnp
aad
dec
sub
hlt
mov
pop
lret
outsl
fcmovnbe
xchg
dec
or
mov
pop
adc
add
in
cwtl
or
iret
mov
sbb
out
sbbb
pushf
and
mov
xor
jnp
mov
mov
out
cmp
or
outsl
inc
push
outsb
xor
lds
insl
leave
cmp
pop
imul
cltd
clc
mov
pop
jae
and
gs
adc
mov
sbb
pusha
mov
sub
cmp
roll
mov
outsb
ss
adc
sbb
cmp
xrelease
and
pop
pop
out
and
das
cld
jne
mov
xchg
or
pop
or
inc
dec
fcmovbe
sahf
push
hlt
mov
jb
pop
push
popa
leave
adc
adc
add
adc
faddl
fstpl
cmp
inc
das
rol
dec
jmp
mov
loope
mov
dec
xchg
pop
add
stos
sub
lretw
sub
stos
into
xor
fstpl
rclb
ret
fnsave
aas
mov
or
rorl
cmp
xor
clc
nopl
arpl
fst
cmc
cwtl
cmp
and
lds
xchg
push
mull
mov
push
ss
lods
dec
mov
mov
out
in
push
xor
jl
sub
jbe
lret
mov
mov
adc
icebp
cmp
xchg
clc
lcall
cmp
pop
sahf
pop
mov
loop
stc
subl
mov
ss
dec
mov
fwait
adc
xorl
add
test
std
loop
ljmp
jb
jle
mov
ja
dec
push
repnz
dec
mov
mov
mov
xor
mov
jae
rcr
arpl
jge
cmp
push
and
lret
push
sarl
sub
push
or
push
push
fildll
xchg
in
gs
rcrl
xor
in
pusha
pop
test
xchg
insl
adc
cmp
sbb
jg
cltd
lds
xchg
iret
jno
sbb
or
inc
xor
psubq
ror
out
pop
js
push
dec
inc
mov
imul
or
xor
inc
or
iret
stos
in
std
cmpsl
aam
pop
or
jns
lea
pop
in
call
test
insb
les
push
xor
push
adc
pop
mov
mov
or
cmp
push
stos
xchg
daa
xor
rcl
pop
or
push
xchg
adc
repz
or
mov
push
adc
clc
pop
pusha
cmp
adc
imul
hlt
inc
mov
sub
push
cmp
xor
xchg
jbe
repz
inc
mov
data16
ss
movb
stos
fbstp
fldt
fiaddl
clc
imul
cmc
push
cmp
mov
cld
pop
scas
aad
dec
jne
div
hlt
popf
pop
ljmp
or
jle
xlat
or
jmp
in
aam
pop
cmp
mov
dec
das
mov
mov
jbe
pushl
pop
push
inc
iret
cmpsl
es
xchg
bound
int
jbe
int3
imul
pop
sysexit
sbb
mov
mov
or
in
scas
add
insb
stc
lahf
imul
repz
add
jno
bound
fcompl
shlb
jns
jp
jmp
sub
mov
movb
pop
mov
fsubr
lea
cld
sub
test
push
xchg
mov
sbb
sbb
inc
in
fadd
cli
add
xchg
lods
jno
lret
lahf
sarb
mov
out
nop
shrb
dec
push
xor
cmp
jle
push
sbb
mov
je
mov
xchg
and
daa
push
aas
js
addr16
and
shrb
aam
or
adc
cmpsb
sbb
mov
pop
mov
data16
inc
xchg
je
push
je
enter
jg
clc
sbb
dec
lret
and
enter
push
or
mov
sub
cmp
mov
dec
pushf
roll
nop
sbb
imul
fmull
dec
icebp
push
xchg
adc
aam
out
mov
loop
out
incl
test
xchg
add
sbb
xor
decb
xchg
loop
cld
mov
pop
mov
mov
cmp
mov
inc
xchg
aas
push
jns
adc
xchg
ja
scas
or
outsb
xor
pop
pusha
dec
jmp
loope
jb
scas
sbb
int
xor
std
out
hlt
sub
lds
add
or
fldcw
xor
aaa
cmc
dec
pushl
and
xor
das
jno
adc
movsb
shl
ja
lahf
fsts
pop
sarl
dec
xchg
cmpsb
xor
dec
cmp
cmp
test
daa
or
cs
adc
or
pop
dec
pop
jne
and
add
aam
and
cmpsb
notl
or
popa
scas
ljmp
xor
mov
and
fcmovb
aas
cwtl
aaa
dec
movsb
adc
sub
test
out
pusha
shl
xor
cwtl
sbb
jl
xchg
or
daa
loopne
pushl
outsl
outsb
sub
fidivs
xchg
hlt
push
pop
fmuls
stc
jmp
fidivrs
shr
cmp
ss
bnd
lds
gs
lahf
cmc
addb
mov
cli
mov
add
enter
cmpsb
mov
arpl
mov
es
je
and
clc
lahf
add
ret
notl
lret
add
mov
pusha
rcrb
mov
and
xchg
sub
fisubs
mov
sbb
das
adc
sub
ja
dec
mov
pop
add
enter
dec
loopne
arpl
adc
int
fistps
jae
pop
jnp
cmp
dec
es
jp
sbb
xchg
add
mov
inc
or
pop
mov
sbb
jno
or
jnp
fwait
xchg
xchg
jle
insb
outsb
jnp
ss
fnstsw
push
ds
xchg
ja
stos
lcall
lods
fisubrl
scas
scas
mov
xor
testl
adc
movsl
and
cmp
mov
inc
mov
push
hlt
enter
push
adc
fisubrl
pushf
adc
in
rcrb
fiaddl
shrl
int3
xchg
jae
pop
in
jmp
shlb
dec
daa
inc
and
loopne
inc
loopne
cmp
rorb
in
arpl
or
and
fistps
jg
push
pushf
fldl
andl
imul
aad
int3
imul
lret
insl
mov
test
and
roll
rorb
lea
gs
cmp
in
jo
scas
sub
cmp
stos
push
xchg
push
imul
fldt
je
or
out
and
paddusb
ds
mov
pop
push
mov
out
cld
cwtl
pop
movq
ja
sbb
sbbb
jno
cltd
mov
sub
dec
cli
mov
inc
iret
jb
test
bound
lcall
cltd
sbb
or
add
sub
ljmp
jmp
xchg
dec
inc
mov
mov
pop
les
loope
xchg
dec
inc
rcll
pop
test
push
jno
mov
xchg
pop
pop
in
loope
lret
cwtl
int
pop
outsb
movsb
test
cmc
arpl
fmulp
or
xchg
gs
inc
and
in
out
mov
imul
fcmovbe
insb
shlb
add
dec
xlat
aas
icebp
sti
mov
jb
jl
fs
pop
es
mov
mov
ljmp
shll
lret
push
or
mov
pop
lds
mov
jne
add
in
and
outsl
lea
mov
rorb
adc
addl
inc
push
iret
mov
mov
cld
add
fimuls
call
insl
push
js
adc
cs
leave
ficoml
out
xchg
jl
loopne
or
fs
or
mov
lahf
in
enter
add
lcall
mov
jae
rcrb
pop
test
push
daa
mov
mov
jmp
bound
fstpl
cmpb
mov
xchg
add
push
sub
scas
out
jne
cmp
daa
mov
add
pop
aad
jb
mov
adc
mov
xchg
sub
mov
push
cmpsb
pop
fistpl
sub
dec
push
rcrl
leave
fsubp
or
dec
gs
xor
push
int3
and
mov
cltd
stos
adc
dec
ss
and
mov
and
ret
mov
ficomps
pop
mov
and
jge
sbb
mov
in
and
sahf
shr
cmp
mov
addb
mov
shlb
pop
mov
loopne
xchg
aad
cmp
pop
and
cld
dec
into
in
jp
and
ds
and
daa
sub
shll
xchg
and
shl
popf
add
push
lcall
out
loope
xchg
mov
aas
xchg
hlt
out
dec
cmpsl
and
in
sub
ja
push
jmp
dec
insl
sbb
pushf
or
daa
dec
adc
outsb
cld
out
rclb
sub
sub
add
insl
jne
test
stos
fcoml
fisubrl
adc
sahf
push
dec
mov
and
or
int3
push
pop
sbb
movsl
pushf
mov
ja
gs
ds
fcomip
insl
cs
incl
imul
stc
or
mov
pop
pop
push
adc
call
mov
mov
cltd
je
add
adc
in
lock
frstor
push
dec
jbe
call
outsb
je
cltd
bound
mov
int
pushf
sar
jp
in
mov
cli
adc
fcoms
shlb
outsl
es
mov
or
mov
js
pop
rorb
jnp
and
icebp
sub
lods
xor
sbb
imul
movsb
nop
ret
push
jno
jmp
adc
int3
adc
pop
jnp
in
aam
add
jne
mov
xor
and
or
rcr
pop
fldcw
mov
stos
pop
jno
cmp
neg
mov
out
add
dec
dec
enter
in
jg
inc
je
cld
cmp
outsb
or
sbb
pop
sbb
into
lds
roll
adc
loopne
mov
push
cmp
out
pop
inc
or
xor
leave
and
fstps
lcall
push
lret
sub
test
xchg
cmp
push
sub
dec
addl
lea
dec
pop
gs
jne
icebp
xlat
arpl
mov
mov
push
fcmovnb
pushf
mov
push
push
push
clc
adc
outsl
out
jle
xchg
js
jecxz
jg
push
fcompl
push
negb
pop
insb
and
cli
adc
aaa
rorb
mov
out
xlat
or
scas
xor
cmp
push
xor
cli
push
xchg
lret
and
loopne
fisubrs
sub
loop
sbb
sbb
mov
test
mov
aad
movsb
push
sbb
out
mov
test
xchg
adc
das
lret
xchg
popf
repnz
inc
dec
int
rcrl
in
ljmp
cwtl
addb
xor
push
gs
cmpb
movsb
stos
pop
lahf
cmp
std
fisttps
stos
xchg
andb
fstpl
adc
xor
mov
ja
push
mov
or
fcmove
dec
push
cmc
cmp
xchg
mov
push
rcl
push
loop
jge
mov
je
jecxz
rcrb
inc
mov
das
insb
mov
and
daa
push
dec
lcall
out
mov
mov
inc
movb
pushf
and
dec
jnp
ds
mull
mov
inc
cltd
jae
rcr
insb
push
push
cmp
mov
call
sahf
fldcw
shlb
fsubrl
orl
test
mov
imul
fwait
test
add
add
sbb
adc
imul
pop
sarl
xchg
cltd
mov
dec
mov
loope
adc
pop
inc
jecxz
pop
inc
jl
pop
jecxz
xchg
or
jnp
adc
stos
adc
mov
push
push
mov
xchg
lea
daa
pusha
stos
fiadds
push
stc
mov
cmpsb
repz
sub
subl
in
xchg
fildl
push
or
stos
xor
adc
pop
mov
mov
cmp
pop
adc
test
jge
inc
push
scas
popa
pop
lds
adc
adc
cltd
lret
gs
and
out
dec
cld
clc
popa
in
xor
jnp
adc
inc
push
imul
dec
in
insb
add
cmp
dec
pop
push
dec
push
sub
cmpsb
xor
inc
push
mov
test
popf
movsl
scas
les
addr16
sub
mov
into
scas
fwait
loop
and
addr16
mov
mov
rcll
and
jmp
adc
pop
jl
xchg
int3
out
pop
fcoml
mov
insb
lcall
into
lahf
jae
scas
and
fwait
inc
pop
cmpsl
and
fsubrl
xchg
jbe
repz
out
or
aam
jmp
fimull
sbb
lahf
in
lret
in
mov
cmp
ja
adcb
sub
push
sbb
enter
lcall
leave
sub
cmpsb
jns
dec
addr16
insl
cmp
mov
insl
sub
and
xor
scas
mov
sbb
hlt
push
inc
sti
and
sub
loop
cwtl
dec
jae
push
inc
adc
lods
mov
lds
imul
iret
push
add
mov
inc
or
mov
jnp
sbb
mov
arpl
pop
int
mov
stc
pop
adc
stos
scas
sbb
or
or
and
js
jb
je
stos
pop
out
mov
fdivrp
stos
cmpsl
adc
xlat
lcall
inc
cmp
sbb
push
out
or
cmp
dec
sbb
inc
dec
dec
not
inc
shlb
push
inc
mov
jb
jp
xchg
ja
xor
enter
ds
sbb
arpl
adc
xchg
xchg
cmp
jmp
clc
cli
out
push
adc
jns
jns
sbb
scas
mov
fwait
leave
adc
hlt
mov
xor
in
or
aaa
and
call
cmp
int
jl
ja
jp
pop
jb
jp
fistl
dec
call
je
jg
pop
xor
mov
daa
push
xor
daa
xchg
je
mov
fucom
dec
dec
rcr
xor
and
sbbl
mov
adc
lret
sbb
fcompp
and
mov
dec
pop
jb
pop
cli
daa
es
add
loopne
mov
jne
inc
pusha
cmp
push
clc
lods
mov
xor
xchg
dec
adc
gs
sbb
and
and
fsubl
push
or
loopne
out
pop
dec
mov
mov
aam
loope
mov
and
push
adc
jne
sbb
clc
jo
sub
sbb
and
lock
rclb
int3
dec
push
loop
enter
inc
je
outsb
arpl
mov
js
mov
cmp
sbb
arpl
daa
mov
xor
fidivrl
repnz
and
xchg
mov
adc
hlt
fwait
jno
aam
fidivl
mov
sbb
and
or
sbb
xchg
outsb
xchg
push
into
jmp
repz
mov
mov
cltd
int
jns
xchg
sahf
sub
ljmp
loop
adc
sub
jb
mov
arpl
mov
inc
out
push
cli
xchg
rolb
mov
decl
mov
dec
out
bound
mov
jb
movsl
scas
cmpl
cmp
hlt
sahf
shrl
inc
sub
inc
jp
das
out
fstps
mov
mov
mov
loope
lret
ja
mov
repz
mov
mov
sbb
aam
cltd
dec
jl
sbb
pop
cs
mov
add
std
xchg
mov
jmp
inc
popf
add
adc
leave
xor
xchg
jne
gs
cs
lret
mov
aas
test
lock
mov
in
cmpsb
sahf
imul
pop
mov
pop
data16
cltd
mov
pop
test
push
sahf
rclb
jle
sarb
aaa
mov
out
aad
outsb
mov
adc
and
dec
cs
mov
popa
xor
and
fidivrl
dec
in
dec
push
cmovns
sbbb
jne
mov
mov
mov
out
pop
data16
dec
loope
repnz
add
call
mov
mov
mov
outsb
clc
pushf
aad
js
mov
pop
push
sub
rcrb
insl
int
pop
sti
jbe
movsb
jle
jnp
mov
je
xor
shlb
mov
xchg
cmp
and
push
and
push
popa
xor
jae
cld
int
mov
jbe
js
adc
xchg
jmp
stos
push
pop
fcoml
sub
jp
and
popa
insb
lds
in
and
iret
out
fistpll
sub
imul
jp
mov
push
repnz
lods
mov
outsl
movsl
lea
xchg
sub
in
mov
jmp
adc
pop
xchg
data16
mov
test
adc
or
push
sbb
out
shrb
dec
add
out
stos
idivl
sub
or
je
aaa
ss
jp
iret
imulb
sub
dec
testl
aad
mov
cmpsb
jo
aaa
sbb
cmpsl
sbb
push
and
arpl
pop
ja
xor
shrb
sahf
imul
notl
mov
adc
mov
nop
mov
xchg
or
outsl
sbb
inc
mov
out
aas
inc
xchg
enter
mov
dec
int3
cltd
and
icebp
cmp
push
xchg
cltd
fmuls
or
ds
and
or
sub
pop
cmpsb
pop
xor
mov
dec
xchg
imul
pushf
rclb
ljmp
in
jp
inc
mov
ja
push
daa
dec
mov
cmc
jecxz
popf
les
mov
inc
jae,pn
push
inc
mov
dec
xlat
cmp
insl
sti
fld
adc
mov
jge
or
xor
out
xchg
cmpsl
lret
push
dec
xchg
dec
into
in
pop
int
adcb
scas
cmp
rorb
push
rclb
lods
push
pop
out
dec
fwait
cmp
clc
ljmp
flds
mov
es
imul
outsl
sub
inc
push
mov
sub
xor
cmp
xchg
or
movsb
insl
in
popw
adc
push
aas
stos
std
repz
mov
pop
adc
pop
pop
stc
mov
or
mov
iret
push
aas
jno
lret
iret
fdivs
sub
adc
aas
jle
insl
pop
fidivrs
mov
adc
into
ret
mov
mov
nop
xor
int
push
dec
dec
cmc
ja
xor
jno
sbb
push
cwtl
decb
bound
push
cmpsb
fdivp
push
adc
mov
push
sub
mov
pop
rcr
call
and
mov
and
fdivs
xchg
fadds
dec
aaa
rcll
mov
or
and
bnd
fbstp
fdivrs
inc
mov
jge
cmp
sub
mov
mull
cli
xchg
enter
lock
mov
mov
imul
pop
xor
push
dec
mov
daa
xchg
mov
xlat
fisubl
pop
insl
mov
pop
xchg
test
loopne
cli
xor
insl
fs
js
cwtl
jle
les
and
push
jle
mov
sahf
lock
adc
ja
inc
js
movsb
cwtl
scas
pop
pusha
popf
nop
fidivrs
bound
test
xchg
cmp
sbb
add
cs
add
push
aaa
sbb
mov
stos
sub
jg
sub
out
pop
leave
jle
pop
add
das
mov
push
mov
call
or
lods
xchg
and
outsb
push
sbb
mov
mov
orl
sub
push
cmc
adc
and
mov
cmpl
push
mov
mov
push
cmp
xchg
aas
sub
sahf
in
xchg
fisttps
sbb
pop
mov
fwait
aaa
xor
les
ret
lds
dec
scas
pop
lods
or
das
sahf
mov
loop
jnp
loop
ffreep
cli
fxch
inc
inc
hlt
mov
pop
mov
add
jo
loopne
rol
imul
fldt
sbbl
call
cli
adc
jb
xlat
movsl
int
and
movsl
dec
das
test
xchg
test
repz
movsl
mov
add
outsb
jl
push
std
mov
ss
xor
popf
out
xchg
push
mov
cmp
mov
aas
mov
cltd
push
pop
adc
jp
in
sbb
scas
adc
mov
sub
dec
fiadds
mov
mull
js
fistpl
adc
xor
inc
mov
cmp
ret
sub
outsb
sbb
mov
fistpll
nop
xchg
jle
or
sub
leave
xchg
jl
std
mov
cmp
inc
arpl
sarl
hlt
push
clc
cmp
pushf
dec
ret
cld
jge
push
mov
or
sub
cmp
enter
std
mov
cmp
gs
pop
push
sbb
dec
lret
inc
gs
cld
pop
mov
and
pause
inc
mov
sbb
out
loop
and
outsb
mov
out
fcomps
daa
pop
or
and
cmp
fistpl
mov
mov
imul
outsl
mov
cld
int3
stos
sbb
xchg
test
ljmp
dec
test
jg
cli
sbb
aas
sub
fstps
mov
sbb
into
leave
les
nop
mov
pop
push
lea
outsb
clc
aaa
mov
fisubrs
add
sbb
push
mov
loope
cmpl
or
sbb
xchg
mov
pusha
push
pop
sub
mov
pop
fisubl
ljmp
mov
stos
cmp
push
push
mov
mull
xchg
xor
push
dec
aaa
inc
sbb
jb
bound
push
jp
mov
ja
ljmp
cmc
xchg
xlat
mov
leave
sub
in
stos
ret
push
subl
sbb
pop
orl
movsl
movsl
repz
and
push
jno
mov
push
fisubrs
dec
jb
cli
rclb
and
stc
dec
rcrl
rol
dec
sbb
das
cld
push
insb
pushf
xor
pop
jmp
cmpb
cmp
imul
into
mov
mov
or
filds
cmp
movsb
xchg
aas
lock
xchg
data16
scas
rolb
xchg
and
outsb
imul
ss
fldcw
xchg
pop
or
loope
sub
push
imul
xlat
sarl
cmp
pop
fdivl
sub
inc
sub
adc
loope
hlt
cmp
fcoml
rcl
mov
jp
das
mov
fmuls
out
mov
pushf
out
gs
jo
arpl
adc
sbb
icebp
in
xchg
cmovs
inc
inc
std
insl
push
fists
rorl
push
scas
roll
mov
cmc
lock
out
cmp
push
ret
inc
lock
cld
fidivrs
or
push
add
mov
mov
movsl
sub
cltd
jnp
push
fwait
mov
or
cmp
popa
mov
push
idivl
push
aad
sbb
pop
outsl
addr16
sti
incb
cmp
or
xor
xchg
outsl
sbb
ror
jmp
shrl
dec
loope
movsl
test
outsl
and
pop
adc
adc
inc
lret
inc
and
ds
repz
stos
add
mov
icebp
shlb
mov
xor
xchg
jecxz
mov
out
lahf
inc
inc
cmpsl
je
int3
adc
std
pop
fwait
cwtl
shrl
cmp
arpl
jo
scas
popa
outsl
pop
jg
mov
fidivl
cmc
std
cltd
mov
add
cmp
xlat
push
addb
and
iret
inc
in
les
xlat
sbb
xchg
pusha
mov
inc
or
sub
aas
lods
dec
ret
xchg
pop
pop
imul
sbb
mov
dec
mov
xor
inc
dec
js
cmp
fisubs
pop
cmpsb
pop
mov
mov
test
push
fsqrt
xlat
mov
clc
imul
jbe
ja
movsb
daa
adc
sbb
dec
sbbl
mov
adc
pop
push
stc
xchg
and
scas
push
fnstsw
cli
mov
aam
jle
stc
inc
ja
push
or
daa
in
push
js
xor
xorb
mov
in
pop
xor
aam
xchg
push
xorl
inc
shll
adc
sbb
xchg
loop
insb
ljmp
lods
in
jns
fmulp
rcll
pop
int
imul
out
stc
fisubl
or
mov
test
xor
fisubrl
pushf
jp
mov
lahf
adc
fsubrl
lock
mov
push
arpl
test
sbb
out
icebp
ret
sbb
dec
sub
mov
pop
adc
pop
and
test
in
push
xchg
or
push
add
mov
sbb
loope
xchg
std
sbb
push
popa
push
mov
and
mov
jns
mov
jne
or
mov
dec
add
ss
je
adc
mov
and
pop
out
gs
sub
jl
dec
stos
sub
fildll
arpl
and
lds
nop
mov
xor
movsl
mov
pop
pushf
inc
and
aam
clc
shll
mov
cmp
iret
cmc
aaa
jmp
bound
icebp
clc
jle
aaa
pop
xchg
rorb
mov
sbb
negb
mov
xchg
sti
mov
adc
shrb
push
sub
adc
jmp
fisubrl
cwtl
xchg
imul
aad
and
and
test
cmp
insl
cwtl
in
dec
lods
fsub
test
pop
cmp
lods
and
cmp
cmpsl
aad
mov
cmp
jg
ds
fcompl
aam
pop
into
or
mov
pusha
adc
fcmovb
je
ss
sbb
and
mov
push
sbb
jg
ss
adc
es
pop
push
shlb
insb
ss
jns
jecxz
ret
jne
mov
out
cmp
jne
add
aaa
outsl
cmp
out
sbbb
push
and
int3
shrb
push
xchg
push
jns
sub
data16
mov
inc
add
cld
out
mov
loop
stos
fisttpl
mov
jle
adc
loopne
cmpsb
sbb
neg
push
cwtl
inc
test
fnsave
repnz
and
xchg
push
pop
or
popa
xor
sub
jg
into
fldenv
sbb
mov
adc
jb
out
mov
aas
dec
dec
and
add
xor
in
xor
lea
fldcw
sti
rol
jg
sti
pop
cmp
popf
inc
mov
cmp
mov
push
adc
cmp
repz
rep
inc
pop
in
and
sahf
out
pop
mov
add
outsb
and
push
aaa
int
mov
push
ljmp
lods
outsl
addr16
popf
pop
test
or
cmp
mov
jo
scas
gs
cmp
rcrb
sbb
xchg
mov
push
jb
sbb
lds
or
mov
jns
les
stc
mov
mov
xor
repnz
data16
clc
sub
pop
and
movsl
and
rorb
add
dec
and
adcl
mov
lods
and
mov
dec
add
les
pop
stc
dec
sahf
cmp
push
jmp
lods
dec
xor
mov
pop
jno
testb
cmpsl
in
insb
lods
mov
movsb
cmp
popa
movl
or
lret
icebp
aas
xchg
fldl
add
popf
mov
dec
nop
es
mov
xchg
pop
lea
add
mov
sub
mov
xchg
out
bound
and
jge
inc
jnp
lret
jg
mov
add
jno
movsl
cmp
ja
clc
and
fwait
adc
and
rcrl
cmp
rcr
sbb
dec
lcall
mov
shlb
std
xchg
xchg
pusha
dec
mov
adc
das
lea
fistps
gs
xchg
repz
adc
arpl
nop
fs
adc
mov
push
jl
or
lea
or
fisubl
sub
or
aam
hlt
pop
and
jno
ret
push
in
cmpsb
pop
xlat
sarb
jmp
mov
inc
push
xorl
push
gs
sti
dec
jle
add
push
add
je
pop
push
jge
imul
dec
push
xchg
lcall
lret
and
fcomps
pop
sub
popf
pop
aas
jbe
arpl
sahf
mov
data16
lahf
lret
leave
xsha1
cmpsb
dec
inc
adc
int3
rorb
push
dec
mov
dec
out
jg
lret
mov
hlt
js
mov
dec
push
add
adc
lahf
scas
mov
arpl
sti
dec
xchg
stc
hlt
push
int
pop
pop
mov
push
fstps
repnz
cmp
scas
xchg
loop
cmpsb
adc
adc
sbb
popf
or
add
out
outsb
aam
fstpl
inc
pushf
xchg
mov
aas
leave
loopne
dec
in
daa
test
fdivl
lcall
decb
mov
test
mov
xlat
jecxz
or
cmpsl
ret
add
leave
sbb
cmpsl
cmp
movsb
xchg
jnp
es
xchg
push
fstpt
jp
lret
mov
mov
sysexit
ss
mov
jbe
inc
pop
or
sbb
movsl
lcall
ret
cwtl
mov
fwait
sti
dec
mov
sar
cwtl
lds
xor
mov
mov
lret
sbb
loop
jo
sbb
psubb
adc
cmp
add
andl
push
cmp
mov
or
pop
stos
mov
movsl
fwait
in
jo
lods
xor
mov
mov
push
into
inc
fsts
imul
out
scas
sub
shlb
pop
pop
rorl
stc
cwtl
mov
aaa
fists
mov
xchg
lret
lcall
cmpsb
pop
pop
pushf
pop
addr16
inc
push
xor
fdivl
dec
shrb
fstpt
dec
inc
add
and
ljmp
add
shlb
dec
mov
mov
xchg
mov
cltd
ret
js
cmp
add
jg
out
ss
test
scas
add
test
cltd
dec
sub
pusha
mov
dec
mov
popl
test
icebp
cld
xchg
test
push
jbe
mov
cld
xor
jbe
mov
push
ss
aam
push
sub
inc
repnz
or
jns
xor
idivl
call
dec
mov
mov
ja
mov
imul
sub
mov
rolb
fs
push
mov
jecxz
pop
inc
aad
movsb
cmp
cwtl
das
cmp
fidivrs
jb
bound
dec
mov
xchg
mov
adc
sub
jecxz
xchg
inc
loope
sub
add
pushf
pop
fs
rcll
in
xchg
jb
daa
mov
sahf
aas
inc
in
pop
cs
inc
xor
jo
xor
lcall
mov
aas
jno
ljmp
sti
ret
mul
pusha
icebp
adc
in
or
xlat
or
sbb
mov
sarb
mov
mov
sbb
sahf
mov
stos
fwait
mov
sub
sub
pop
into
int3
mov
stc
pop
loopne
int
lahf
cmc
add
add
push
or
popf
test
mov
call
xchg
or
sbb
paddq
push
cmpsb
jne
dec
mov
daa
mov
fs
rcrl
mov
mov
js
int
pop
clc
push
push
lods
xor
pop
cmp
loop
test
xor
cld
inc
push
push
pusha
inc
psraw
out
pop
add
popa
jecxz
aad
clc
xor
mov
test
and
aam
pop
enter
into
das
push
lahf
imul
inc
out
sar
imul
xor
mov
adc
jp
out
pop
xor
inc
mov
and
in
loop,pn
loop
stc
fwait
mov
mov
out
clc
jae
pop
das
jbe
cwtl
ja
popl
shl
loop
xor
mov
mov
lock
adc
adc
jl
jle
call
das
sbb
scas
andb
xchg
sbb
xchg
das
repz
divb
push
les
adc
enter
shrd
fstps
xchg
leave
scas
subb
imul
dec
lcall
data16
jnp
hlt
pop
jmp
pusha
xor
xchg
mov
movsl
mov
xor
and
test
or
fimull
push
pusha
cmp
fdiv
jb
cltd
sub
mov
jns
mov
sub
je
jmp
xchg
sbb
push
fisttpl
pop
je
sbb
xchg
jns
cmp
xor
fwait
jo
test
test
aad
call
sbb
add
gs
jne
mov
inc
xor
lds
xorl
jl
push
adc
xor
iret
xchg
xor
icebp
mov
mov
cmp
sub
xchg
test
jle
mov
jae
push
xchg
mov
dec
fisubl
out
push
mov
test
mov
mov
jb
xor
sbbb
sbb
bound
mov
in
cmc
add
mov
leave
loopne
mov
mov
and
out
cltd
fsubrs
ds
popf
shlb
adc
and
scas
or
push
cs
sub
dec
cld
sbb
dec
fistpl
scas
jb
or
lcall
push
arpl
ret
mov
aaa
mov
xchg
add
test
pop
cmp
jo
jg
in
mov
es
stos
adc
push
into
mov
mov
dec
add
push
mov
popa
adc
push
fmuls
xchg
jp
test
cmp
sub
sub
cmp
xor
inc
adc
test
test
pop
jno
lock
negb
orl
std
js
mov
rorl
and
inc
bound
jnp
mov
in
mov
jge
xchg
cmp
jae
mov
adc
cs
imul
dec
out
pop
jbe
out
dec
dec
or
xchg
ret
sub
aam
cmc
adc
dec
sti
sub
fwait
test
out
inc
xchg
mov
cmpsb
out
in
mov
repz
ret
repnz
push
mov
popa
aas
repz
incl
push
lock
cmp
nop
idivb
pop
ret
hlt
cli
sar
iret
stos
movsb
lcall
pop
mov
xor
int
jp
pop
test
sub
adc
sti
repz
or
ret
call
mov
and
push
push
out
ja
sahf
out
and
push
inc
sub
andb
push
movsl
call
mov
das
or
test
das
mov
jo
js
ljmp
cmp
xchg
inc
mov
popa
add
dec
cwtl
movsb
and
sahf
andl
rcrl
inc
push
mov
and
cmp
shrl
repnz
cltd
clc
xor
shll
pop
mov
clc
pop
mov
addl
inc
inc
mov
mov
dec
shll
cmp
sub
lret
or
add
add
daa
push
xor
jno
stc
sub
inc
sti
imul
test
in
popf
push
pop
xor
enter
les
outsb
cmpsb
mov
gs
or
sbb
bsf
sbb
iret
arpl
pop
idivl
sub
adc
dec
sub
inc
ret
and
enter
jmp
xor
jb
cmp
or
std
test
div
mov
push
hlt
js
stos
les
inc
xchg
xor
fcmovnbe
out
call
int3
shrl
addr16
adc
mov
jbe
fs
out
test
push
mov
xor
mov
mov
cld
out
fwait
push
inc
xchg
ret
mov
vmwrite
arpl
adc
pop
push
inc
cmc
outsb
inc
push
int
jb
jnp
cmpsl
aad
addb
or
testb
adc
int3
fidivrs
xchg
sub
sub
pushl
dec
call
jae
cltd
fwait
pusha
dec
test
sub
pop
cmp
test
adc
inc
inc
in
xor
out
ss
je
add
push
in
repz
pusha
mov
mov
sub
int3
cltd
inc
repz
insl
nop
popf
divl
jo
jbe
out
jp
pop
cld
in
sbb
int
jbe
push
insb
cmpsb
or
repz
lea
hlt
pop
or
and
xchg
pop
sbb
sbbb
inc
in
pop
data16
and
fwait
mov
cmp
ja
sub
xor
jle
cltd
and
xor
jns
pop
xchg
into
push
mov
aas
cwtl
aas
test
imul
jmp
fldcw
lret
std
mov
mov
xchg
jbe
pop
mov
popl
lods
insl
imul
cli
repnz
cli
cmp
into
pop
jo
hlt
aam
in
repz
popa
xor
jmp
mov
jbe
dec
insb
test
sub
jne
aad
sbb
je
decl
out
das
xchg
loope
mov
mov
dec
lret
xor
jg
xchg
mov
xchg
push
setl
add
pop
scas
pop
imul
inc
shll
pop
rol
test
dec
dec
dec
cmpsb
or
inc
mov
leave
fcom
xlat
pop
mov
mov
hlt
mov
aaa
inc
inc
ffreep
push
adc
xor
leave
push
sub
imulb
sbbl
std
test
outsb
or
inc
test
cmp
mov
sbb
enter
mov
ficompl
adc
push
add
jnp
stc
xor
jmp
xchg
pop
add
and
lret
gs
out
jo
movsb
outsl
mov
jmp
out
mov
pusha
dec
inc
xabort
mov
ret
cmp
cmp
and
ss
sub
cmp
push
movsb
orl
test
xor
mov
jg
test
or
gs
or
cltd
jae
xor
adc
mov
lret
add
cwtl
cwtl
mov
pop
adc
int3
mov
test
mov
movsl
or
adc
jns
pop
add
xchg
test
es
mov
push
leave
rolb
movsb
push
mov
shlb
repnz
dec
or
push
lea
lods
push
sbb
mov
lret
inc
loop,pt
fnstsw
imull
jge
or
lahf
and
ja
jnp
scas
jo
jnp
je
cmp
and
adc
jno
cmp
scas
inc
push
test
cmp
cmc
and
pop
add
or
aaa
lds
movsl
inc
dec
nop
dec
addr16
mov
mov
lahf
sbb
aas
push
fistl
fsubs
ja
push
xor
cld
fistps
lea
mov
xchg
push
out
mov
push
mov
lock
and
cmp
inc
outsl
in
mov
loopne
mov
or
cmp
jno
enter
mov
jae
inc
imull
xor
xchg
pop
imul
idivl
xor
xor
mov
std
adc
lahf
scas
ljmp
dec
ljmp
dec
sub
or
inc
or
ret
adc
jae
add
clc
out
pop
iret
ss
mov
pop
out
cld
xor
adc
mov
rorb
and
fistpl
cmp
ret
push
in
jl
test
mov
sub
faddl
cmp
inc
mov
scas
pop
scas
das
mov
movl
cmpsb
out
bound
sub
je
stc
add
pop
dec
je
cmc
loopne
sbb
dec
mov
mov
push
pop
shll
xchg
insb
or
out
adcl
sti
mov
out
cli
leave
stos
sbb
sub
cmp
jmp
dec
adc
outsb
lea
js
pop
jne
add
push
dec
fbstp
ror
test
nop
cs
jg
enter
dec
stos
stos
jmp
jmp
iret
and
mov
loope
mov
movsl
sti
xchg
fs
xor
call
outsb
pop
je
rol
test
sbb
mov
mov
in
in
jo
outsl
jne
mov
adc
jno
add
and
arpl
xor
in
bound
mov
mov
push
xor
ss
aaa
mov
divl
or
imul
inc
clc
push
pop
sbb
pop
push
adc
arpl
push
int3
sbb
fcom
dec
sbbl
outsb
and
fbld
fdivl
mov
sbb
sbbl
and
loop
push
mov
xchg
add
leave
lds
and
cs
adc
jle
roll
sbb
test
stos
inc
sbb
in
aas
mov
adc
ret
aaa
loope
stos
icebp
shrl
mov
repz
adc
cmp
test
xchg
int3
stc
mov
cmp
pop
fnstenv
addr16
ja
pop
insl
add
push
add
mov
cmpsb
jbe
add
add
push
sbb
adc
nop
xor
and
pusha
outsl
jbe
dec
orb
cmp
bound
push
xchg
sahf
dec
adc
aaa
scas
and
pop
mov
push
or
out
sub
lcall
sub
inc
and
sbb
loop
pop
iret
mov
jae
inc
and
clc
jo
or
cs
out
rolb
fs
fs
dec
mov
sub
pop
pop
xchg
mov
std
enter
mov
out
cltd
test
xchg
sub
pop
ret
inc
mov
mov
js
mov
mov
cmpsb
pop
lahf
push
pop
jl
loopne
or
loop
mov
and
jns
adc
mov
mov
arpl
decl
cmc
inc
adc
mov
in
pop
imul
in
mov
dec
mov
jge
sub
push
shl
push
lret
aaa
xor
mov
jge
mov
or
pop
or
cmp
repz
mov
fs
mov
sub
push
mov
ja,pn
hlt
es
inc
add
popf
sub
mov
cmpsb
repz
dec
test
and
cmp
jg
xchg
insb
or
sub
jb
cmp
mov
mov
hlt
std
mov
inc
pop
or
adcb
lahf
pusha
cmp
push
xlat
lret
fnstenv
je
dec
xor
pop
dec
jne
cli
inc
xchg
push
aam
xor
sbb
mov
dec
call
in
movsl
mov
test
inc
xchg
lock
or
inc
repz
xchg
or
sub
lock
arpl
xchg
shl
xor
loope
pop
pop
mov
cltd
in
scas
adc
mov
fsubrp
xlat
push
pop
stos
xchg
aam
mov
xchg
inc
or
aas
jbe
out
imul
pop
pop
out
mov
inc
lods
testl
call
stos
mov
insl
cmpsl
outsl
stc
sub
push
mov
jl
out
adc
fimuls
mov
push
ja
fcmovnb
inc
pop
add
rcr
add
ljmp
lea
aas
gs
jp
xchg
add
imull
bound
dec
mov
pop
pop
cmp
fisubrl
out
clc
fbld
push
dec
fcomps
out
sub
jns
and
push
std
call
aas
out
fsubp
ss
xor
xor
xlat
pop
cmp
mov
push
pop
aaa
int3
dec
lahf
xlat
jbe
roll
pusha
pop
out
xor
call
add
xor
bound
fiadds
scas
ret
push
and
jmp
popa
fists
pushf
sub
mov
xchg
je
push
adc
push
dec
sti
cmp
ret
lret
out
ds
mov
scas
dec
push
fnstenv
jbe
rcrb
adc
inc
inc
xchg
daa
rorb
movsl
xor
sub
insb
in
push
subl
xor
pop
bound
mov
xor
scas
loop
lret
jp
jmp
add
jmp
xchg
fidivrs
pop
ljmp
nop
adc
and
aad
jge
fmull
xor
sbb
cmp
push
les
call
adc
int3
mov
xor
dec
shll
aaa
push
enter
cltd
popa
sub
xchg
jmp
adc
inc
adc
loop
loope
addr16
aas
notb
cmpsl
fdivl
pop
xchg
and
xlat
cmpsb
cwtl
push
or
cltd
imul
loope
and
or
repz
dec
popa
lret
xor
adc
lds
sub
cmp
mov
mov
inc
jmp
pushl
inc
push
xor
or
arpl
xchg
hlt
ficompl
xchg
lods
imul
stos
arpl
xor
vsubsd
mov
loope
aas
je
dec
push
xchg
push
sub
movsl
adc
imul
mov
fldcw
cwtl
lret
dec
cltd
lahf
and
xchg
sarb
mov
inc
xchg
mov
xchg
xchg
je
inc
cmp
jl
mov
dec
and
jns
xchg
push
cltd
ljmp
shll
pop
dec
sbb
push
test
mov
push
std
add
push
das
das
add
push
xchg
or
nop
loopne
js
jg
out
cmpsb
rorb
je
test
loopne
dec
adc
daa
test
fnsave
mov
dec
fisttps
lret
push
jmp
out
loope
pop
jmp
xchg
cmp
inc
lods
xlat
xlat
add
scas
fisubs
aam
cs
mov
js
jle
shrl
lret
jg
jnp,pt
push
mov
mov
jecxz
add
hlt
cmp
sti
gs
xchg
int
daa
cmp
cmc
adc
mov
xchg
push
lss
adc
cmove
adc
movsb
in
xchg
inc
cwtl
jge
add
mov
dec
daa
push
sbb
pop
add
je
and
jnp
cs
cmp
outsb
je
or
dec
rcrb
sbb
out
and
adc
mov
ret
out
ficoms
stos
loope
fmul
lods
sbb
inc
mov
lea
add
cwtl
push
shr
sbb
movsl
cwtl
adc
sub
sub
sbb
ja
lods
aaa
rclb
jecxz
lea
insl
inc
pop
cmp
jnp,pt
lock
popa
xor
cmp
cmc
mov
jo
stos
mov
dec
lcall
mov
jp
xor
mov
lock
xor
imul
push
bound
mov
jge
testl
sbb
aam
lock
push
xlat
dec
pop
test
out
outsb
pop
frstor
mov
sbb
test
mov
nop
ljmp
jmp
dec
lret
cli
lods
sbb
ja
stc
or
shrb
cwtl
pop
and
hlt
or
jb
xchg
lock
cltd
rorl
mov
call
inc
jns
push
addl
aas
pop
sahf
xchg
push
xor
adc
aad
push
jg
jne
jb
lret
mov
and
popf
scas
xchg
and
mov
pop
jg
sub
movhps
and
pop
aam
mov
xchg
stos
sbb
xor
rcrb
pop
inc
jae
xor
call
mov
ljmp
stos
insl
push
sti
jg
lods
cltd
test
push
adcl
xor
inc
sub
push
aam
nop
daa
nop
push
mov
out
inc
jbe
stc
jle
scas
lcall
popa
sbb
jne
mov
dec
xchg
ja
mov
shl
and
push
xchg
mov
jnp
add
xlat
mov
in
fadds
jg
mov
and
dec
or
dec
addr16
idivl
jne
adc
bound
mov
aaa
sub
adc
adc
sbb
lret
mov
or
mov
test
inc
push
movsb
lds
js
xchg
sub
adc
pop
mov
fsubrs
mov
mov
push
clc
mov
pop
test
jp
lods
out
or
adc
loop
jmp
pushf
out
cmp
jg
aas
push
xchg
loope
rcl
inc
fwait
cmc
in
lea
out
mov
mov
stos
mov
fisttpl
lods
inc
arpl
test
in
dec
cmp
test
pop
cmp
mov
push
addb
mov
stos
mov
mov
lcall
or
aam
pop
cmp
in
sbb
mov
lcall
cmp
sub
test
cmp
ret
or
orb
push
mov
lock
mov
cmpsb
test
or
xor
repz
sti
mov
pop
mov
pop
jmp
push
into
inc
call
insl
mov
xchg
adc
mov
mov
bound
push
mov
jmp
mov
pop
fwait
clc
out
imul
mov
aas
or
xor
int
jbe
jmp
daa
xchg
iret
jne
push
sbb
gs
dec
test
inc
mov
ss
xchg
add
mov
imul
adc
xchg
xchg
test
add
in
push
cvtpi2ps
in
outsb
adc
add
cmp
pop
cmp
push
out
mov
lods
pop
stos
pop
jne
or
dec
std
aaa
sbb
jmp
mov
cmpb
test
push
out
mov
adc
movsb
dec
xchg
leave
xor
addr16
aaa
inc
sub
dec
dec
jno
xchg
mov
inc
jg
imul
xchg
adc
jmp
push
jl
sub
inc
cmp
leave
insl
ja
sub
adc
mov
push
push
cli
test
push
imul
lss
sub
std
pop
mov
adc
movb
mov
push
sbb
cld
movlps
inc
xchg
xor
cmp
adc
leave
xchg
xchg
mov
in
add
mov
fwait
dec
in
inc
daa
outsl
nop
sub
xor
scas
mov
mov
iret
je
mov
jnp
jo
test
and
jp
jb
nop
sub
dec
decl
or
xchg
or
adc
adc
xor
int3
cltd
es
xchg
xchg
aam
imul
ds
xchg
aad
and
xchg
pop
sarl
cmc
or
xchg
filds
outsl
mov
out
push
ror
pop
aaa
insl
dec
popf
int3
sub
loop
rcrl
arpl
ret
cmp
xor
shlb
inc
aad
dec
decl
and
aas
aaa
fisttpl
cmp
fnstenv
mov
mov
dec
xchg
pmaxsw
mov
pop
out
mov
xor
ljmp
cmp
notb
push
sub
lcall
in
push
leave
sub
lods
mov
call
loope
sub
jl
mov
aad
jle
or
test
jle
xlat
and
sbb
test
adc
jmp
es
js
add
loop
mov
push
lret
shll
fstl
repz
mov
sahf
add
gs
add
and
test
cmp
mov
mov
mov
ds
push
or
add
shrl
bound
xchg
pop
cli
pop
out
mov
out
addr16
ja
incb
leave
cmp
dec
pop
xor
lret
pop
ds
stos
out
out
inc
in
shl
push
scas
rolb
bound
lods
dec
stc
and
pop
insl
lea
lret
sub
cmp
or
hlt
es
test
mov
mov
stc
push
sub
or
rcr
lds
adc
mov
call
inc
jnp
jbe
xor
or
push
xor
in
dec
test
dec
jo
flds
jge,pt
sahf
or
xchg
add
jecxz
push
xor
pop
mov
stos
fbld
sbb
jle
sub
scas
xor
jo
sub
aaa
jl
pop
inc
lahf
or
push
sbb
and
cld
inc
lock
push
pop
push
xchg
push
popa
add
xor
stos
inc
xor
inc
mov
aad
lods
mov
fldl
push
inc
movsb
cltd
js
sub
sahf
mov
mov
testb
iret
fcomps
xchg
int3
push
cmp
mov
sbb
or
jg
and
pop
push
repnz
or
daa
inc
sub
or
sub
mov
add
in
in
lods
jle
out
jo
lahf
xor
ja
cmp
scas
hlt
lods
mov
mov
test
test
mov
mov
lds
clc
cmp
mov
jns
cmp
in
fidivrl
adc
shll
outsb
dec
sub
stos
stc
cltd
data16
sbb
outsb
out
in
jnp
jb
adc
sti
lods
or
rcl
xchg
out
add
cmpsb
sbb
test
or
push
xchg
jae
jnp
jne
inc
insl
fcomps
rorb
pop
daa
jmp
xchg
pop
inc
mov
push
stos
dec
adc
in
xchg
cld
fisttpl
call
inc
mov
push
mov
sbb
fcmove
inc
xchg
sbb
aas
lcall
mov
push
mov
jns
nop
out
inc
lds
push
mov
or
or
fldcw
jnp
adc
das
add
sbb
mov
pop
in
pop
xchg
cld
jp
cwtl
xor
xor
repnz
sub
sbb
adc
dec
ja
call
lea
scas
insl
das
add
dec
cmp
sahf
inc
shll
inc
cmp
daa
js
imul
mov
loop
xchg
xor
mov
xlat
in
ftst
adc
call
notb
dec
xchg
filds
inc
mov
sbb
cmp
test
jg
cwtl
scas
push
es
mov
cmp
ss
repnz
mov
add
mov
xor
mull
dec
inc
fcmovnbe
and
ds
paddusw
xlat
movsb
jbe
mov
pop
inc
dec
cmpsl
je
jne
push
push
call
insl
das
sub
mov
in
sbb
push
iret
in
add
je
and
sub
and
dec
mul
insl
mov
pop
push
aaa
stos
jno
xor
in
scas
pusha
je
imul
sbb
adc
push
cltd
sbb
loope
inc
mov
xor
mov
jle
dec
enter
pop
outsl
int
mov
out
fcom
sbb
xchg
mov
sub
jl
dec
imul
adc
icebp
mov
or
push
dec
xchg
pop
cmove
in
adc
or
push
add
aas
jbe
mov
cwtl
repnz
int
or
pop
lret
adc
mov
jg
mov
xchg
pop
inc
sbb
fmuls
add
cltd
jae
cli
mov
in
cltd
add
sbb
xchg
lret
sbb
popf
and
stos
leave
std
and
enter
lods
or
mov
xlat
adc
repnz
mov
mov
mov
movsl
fsubrs
sbb
ret
es
xor
jb
test
stc
pop
out
int3
ret
inc
int
pusha
aad
addr16
push
cld
cld
mov
arpl
dec
jle
lahf
and
inc
pop
mov
daa
pushf
pop
rcrb
mov
arpl
xchg
and
xor
inc
int3
cmp
iret
inc
shlb
add
mov
pop
jmp
add
rol
sti
mov
and
sub
pushf
test
ds
imull
data16
pop
rolb
push
and
lcall
inc
xchg
or
ds
decb
or
inc
lret
rcl
jle
pop
mov
mov
outsl
shll
nop
mov
aam
lock
mov
pop
pop
stc
mov
add
add
mov
xchg
sbb
fldt
dec
scas
ror
adc
and
mov
pusha
cmp
movsb
daa
dec
jp
lahf
es
mov
mov
cs
pop
mulb
push
xchg
pop
fstps
xchg
frstor
stc
mov
in
inc
inc
ss
lahf
in
das
xchg
cmpsb
pop
into
aas
xchg
in
aas
in
into
xchg
and
add
inc
xchg
push
lcall
jg
bound
jecxz
ja
pusha
add
inc
lret
lahf
insb
mov
jge
cmp
adc
loopne
mov
outsl
mov
pop
xchg
imul
fdivs
sbb
mov
out
sub
fsubp
or
aam
jl
and
or
dec
mov
jecxz
data16
imul
rcr
inc
ljmp
mov
xor
mov
loope
mov
or
xchg
loopne
fidivs
shrl
sub
push
jno
mov
and
rol
stc
mov
or
mov
sbb
mov
xchg
mov
sbb
xor
out
inc
lahf
fs
out
lcall
popf
popf
fdivr
loope
test
adc
xchg
mov
rorb
adc
jns
lcall
fisttpll
out
test
pop
int3
cmp
repz
inc
dec
inc
stos
orps
xchg
aam
adc
data16
add
pop
push
adc
mov
xlat
adc
sbb
imul
les
and
into
sbb
push
xorl
or
mov
mov
push
mov
mov
test
cwtl
dec
pushf
pop
clc
test
das
repnz
adc
mov
xchg
push
loop
bound
sbbb
shlb
pop
add
out
imul
mov
mov
bound
push
test
adcb
popa
ljmp
loop
jns
cmp
daa
mov
repz
in
outsb
mov
cs
ret
test
mov
mov
lahf
xchg
ja
imul
repnz
and
sbb
lcall
push
xchg
in
jg
sarb
cmp
rcrl
mov
out
imul
sbb
mov
cld
fstpt
push
and
fmuls
pop
and
add
jb
pop
addl
les
xor
mov
ret
dec
mov
inc
sbb
jl
pop
sub
mov
cmp
xchg
fs
xor
mov
mov
push
bound
rolb
and
out
jge
cmpl
test
test
xor
xchg
xchg
pop
dec
les
dec
popa
in
test
fisubs
or
stc
cmp
jae
mov
push
cmp
xchg
ficompl
ss
mov
cmp
out
xlat
sbb
xchg
jge
lock
fnstcw
xor
push
pop
filds
push
push
test
fists
sahf
push
or
aam
pop
jne
test
pushf
push
dec
movsb
adc
sahf
jnp
sahf
or
hlt
stos
loope
lahf
xchg
mov
pop
inc
negb
cmp
push
cmp
pop
jle
lahf
sbb
repz
mov
push
inc
adc
popa
loop
jb
xor
xchg
subl
insl
je
inc
and
pop
mov
ret
imull
inc
push
cld
xchg
cmp
cmpsl
das
jno
pushf
mov
push
testl
in
push
mov
lock
sub
inc
fsubrl
rcl
test
push
mov
cltd
xor
sub
cmp
gs
mov
and
js
cmp
adc
add
call
add
sbb
inc
fcos
shlb
pop
hlt
sub
xchg
popa
repz
popf
daa
scas
out
jg
loop
and
jae
add
mov
sub
jno
or
jl
into
cmp
cwtl
lret
push
mov
lea
out
mov
in
icebp
adc
pop
jle
cmp
loope
push
cmp
orl
daa
xchg
mov
mov
push
or
aad
push
test
xor
dec
adc
rolb
sbb
sbb
aas
dec
cltd
stos
mov
cmpsb
fsubp
pop
xchg
mov
mov
xchg
test
jbe
jge
ss
dec
insb
sbb
dec
mov
insl
scas
add
mov
fmuls
fnstsw
or
mov
loop
mov
popa
pop
sub
add
out
jg
jp
dec
es
fwait
push
in
cmpsb
popf
sahf
fmuls
fiaddl
adc
mov
cld
adc
out
mov
mov
lds
pop
cli
mov
cmpsb
in
mov
adc
cmp
leave
mov
sbb
movsb
loopne
sbb
int
jae
push
icebp
push
ret
sbb
lret
jle
std
or
mov
pop
aas
jle
inc
std
cmc
aaa
movsl
imul
nop
xor
mov
scas
sub
mov
push
scas
mov
xchg
cwtl
mov
jo
mov
cmpsb
cld
mov
push
insl
jg
inc
jne
rclb
add
inc
or
mov
mov
inc
and
pop
mov
inc
aam
or
mov
test
mov
xchg
mov
add
add
popf
aad
shll
push
shr
mov
ret
sub
push
ss
mov
ja
mov
jbe,pn
xchg
jo
dec
xor
dec
int3
adc
mov
dec
imul
fdivs
in
adc
shl
stos
push
sub
int3
cltd
test
inc
mov
test
je,pn
lret
and
or
fs
cmpsb
inc
clc
xor
int3
sub
outsl
cld
pop
movsb
adcl
fcomip
sbb
jmp
pop
iret
push
xchg
dec
rcll
cli
add
xchg
jae
cld
mov
xor
xlat
test
inc
cmp
inc
sub
jbe
sbb
and
hlt
xor
inc
dec
leave
les
fadd
daa
int
cltd
add
or
in
push
cld
mov
lea
popa
push
and
or
mov
js
out
scas
fnstenv
and
pop
lret
nop
adc
fmul
push
sbb
ret
test
sub
mov
js
jae
dec
push
cmp
in
fwait
cmc
call
xchg
or
pop
jl
hlt
aas
adc
nop
jp
loopne
int
inc
jl,pn
jmp
mov
mov
test
and
repz
pop
xchg
daa
sub
cmp
movb
stos
popf
mov
lret
sbb
xor
inc
lcall
cs
adc
mov
repnz
and
aaa
sarl
cmpsb
iret
add
mov
loopne
ja
shll
mov
push
and
sub
sbb
xor
pushf
loope
adc
xor
je
xlat
adc
mov
fnstsw
jmp
push
jp
repz
jg
pop
or
test
pop
pop
stos
adc
sbb
or
lods
jb
in
fsts
add
jecxz
popa
inc
cld
pop
mov
xlat
sub
pop
arpl
cltd
xor
fsubrl
outsl
aaa
ss
lret
push
test
cli
sbb
data16
or
insl
jle
or
sbb
mov
dec
mov
inc
fcompl
cmp
inc
cmp
push
dec
addl
orb
aaa
test
popa
mov
cmc
out
push
flds
in
iret
dec
bound
adc
mov
jbe
push
push
arpl
nop
neg
pop
mov
xchg
xlat
clc
adc
scas
add
xor
mov
dec
push
jo
daa
xlat
inc
rclb
callw
aad
sbb
imul
call
mov
jmp
mov
mov
test
xchg
ds
or
mov
adc
fwait
roll
test
je
fimuls
mov
inc
out
sbb
clc
xchg
loop
add
dec
stos
leave
pop
jno
loopne
mov
xchg
push
dec
dec
cmc
loopne
sbb
cmp
pop
xor
or
pop
sbb
add
repnz
enter
test
lret
ret
lahf
sub
xchg
jge
repz
iret
or
push
pop
push
xlat
popf
lods
loope
out
rcll
lock
xor
xchg
insl
lcall
out
xchg
sbb
sbb
fwait
xchg
dec
test
sbb
xchg
ret
add
adc
insb
cmp
jae
loope
inc
lahf
aas
movsb
movsl
pop
loopne
sub
lods
or
xor
sub
test
xor
pop
sbb
ds
imul
push
scas
neg
jl
scas
into
rcrb
pop
and
mov
xor
shrb
mov
push
loope
scas
pop
push
bound
mov
xor
mov
or
out
lret
mov
cmp
xchg
fildll
push
lods
and
mulb
movups
lret
movsl
and
pop
mov
mov
test
xor
push
mov
adc
repz
fbstp
jmp
arpl
sti
mov
sub
sub
or
mov
sbb
sbb
icebp
ljmp
js
adc
fisubl
jbe
fwait
sbbl
mov
mov
dec
mov
jecxz
or
sub
cmp
mov
pop
bound
push
sbb
orl
inc
loopne
jo
insb
push
xchg
pusha
sbb
adc
pop
jge
in
or
aam
pop
mov
jmp
adc
insb
repz
inc
dec
mov
sub
imul
sbb
out
cmp
sti
lods
je
mov
outsl
lret
in
mov
lock
out
repnz
fmull
xchg
mov
dec
popf
add
je
mov
xchg
or
cwtl
adcb
popf
sub
and
dec
and
movsb
add
lret
jg
jg
in
lret
jo
inc
out
jg
in
ljmp
aam
adc
ljmp
pop
dec
mov
loop
cmpsl
cmp
mov
sub
xor
xchg
cltd
add
xor
inc
aad
add
inc
mov
es
sbb
int3
mov
push
out
fcoml
jb
test
les
adc
and
mov
or
call
loop
gs
add
push
and
out
cmpsl
mov
int3
jp
test
fucom
sbb
adcb
mov
imul
xlat
push
mov
imul
cmc
cmc
push
xchg
test
xchg
sub
xchg
rorl
push
mov
or
add
or
adc
xchg
sbb
or
sti
xchg
movsl
ljmp
int3
rolb
jg
add
cmp
cmp
pop
pop
sub
les
cmc
dec
push
add
andb
or
cmp
aam
jae
stc
mov
fs
cld
cmp
out
repz
push
xor
bound
fcmovbe
rclb
into
int3
enter
pop
outsb
sub
inc
jmp
mov
inc
das
add
pop
adc
stos
call
icebp
je
das
aam
sbb
push
mov
mov
fcoms
inc
rcll
or
ss
xor
mov
arpl
test
icebp
test
push
test
and
rolb
add
das
ret
iret
xchg
inc
lods
mov
mov
push
jbe
add
rcll
push
or
sbb
mov
mov
sahf
hlt
cli
mov
mov
aaa
xchg
xorl
in
icebp
add
cmp
insb
xchg
test
jnp
pushf
sahf
add
js
mov
or
outsb
cli
jl
test
jge
les
xor
pop
hlt
xor
shlb
fidivs
push
cmp
adc
mov
pop
aas
push
xchg
cmp
lret
xor
sbb
cmp
loopne
pop
insl
in
jge
and
dec
jne
pop
cmp
mov
push
or
jns
xchg
shlb
sbb
lods
insl
fisttpl
mov
cmc
mov
cmp
add
mov
jnp
clc
jecxz
push
outsb
ror
daa
nop
dec
shrl
pushf
rcrb
jb
enter
xor
add
sbb
mov
insb
aad
mov
add
cmpsl
aas
mov
outsb
pop
mov
cmp
mov
xchg
pop
scas
mov
fcomps
mov
sarb
popa
cmp
movl
mov
fldt
ss
or
les
adc
out
inc
inc
sub
lahf
in
add
or
rcr
es
sbb
bnd
xor
dec
sbb
int3
sub
pop
push
enter
pusha
repnz
and
dec
xchg
mov
mov
fbld
inc
mov
cmp
fwait
mov
popf
sub
push
mov
repnz
ret
pop
xchg
insb
fldl
mov
xchg
notb
mov
push
stos
xlat
jno
cld
mov
rol
jns
inc
cmp
lods
push
cmp
or
imul
gs
stos
cmp
data16
in
mov
push
xor
cmp
in
jnp
sahf
lret
outsb
call
cmc
lea
lret
fimuls
je
andl
jmp
and
cmp
stc
ja
xchg
lcall
fnclex
repnz
xchg
cmp
push
or
test
push
add
lods
hlt
jno
jne
cltd
adc
and
data16
sub
pop
insl
and
out
push
arpl
push
out
fisttpl
popf
popf
inc
out
cmc
mov
mov
jo,pn
push
lahf
cli
loop
jg
xchg
outsl
add
add
sbb
cld
dec
enter
stos
or
and
jp
cmp
inc
sbb
stos
outsl
lds
sbb
rclb
push
mov
lods
int3
fistl
lock
sub
cld
icebp
dec
xor
outsb
lret
mov
or
repz
rolb
out
clc
shlb
mov
dec
add
cmp
cmp
add
insl
and
mov
lods
xor
aas
dec
mov
stos
stos
jl
mov
jne
outsl
lahf
hlt
int3
aam
pop
shl
mov
aas
sub
dec
xchg
pop
push
lcall
iret
rcl
jle
loope
insl
and
mov
out
pusha
push
subl
addl
imul
jmp
sub
shlb
pushf
fadds
loope
leave
orl
jp
inc
nop
inc
outsw
out
push
pushf
xor
mov
orl
cld
pop
push
cmp
sub
mov
mov
xor
xchg
fmul
push
mov
repnz
pop
sbb
call
mov
dec
sub
push
shrb
inc
dec
mov
xchg
mov
cmc
mov
or
fmul
push
pop
addr16
pop
mov
sbb
loope
fbstp
jg
ss
mov
inc
fdivs
subb
addr16
sub
je
aam
cmp
mov
dec
and
fnstcw
dec
loope
sbb
push
jmp
cmp
test
xor
fldt
mov
push
push
mov
or
test
jp
mov
adc
inc
lret
lods
xor
pop
cmp
daa
push
sbb
jmp
hlt
mov
cwtl
xor
andb
insb
negb
into
mov
mov
pushf
data16
pop
push
xchg
rcrl
xlat
push
pop
test
shrb
push
test
pop
inc
movsl
dec
adc
mov
scas
push
dec
sub
add
or
fcoms
inc
mov
push
mov
hlt
test
in
in
gs
xchg
sub
mov
cmp
pop
faddl
je
dec
ljmp
xchg
les
inc
mov
mov
lea
movsl
into
out
xchg
jecxz
pop
mov
stc
sub
fdiv
out
iret
cmp
in
loopne
xor
paddb
jne
add
pop
fldcw
popl
lock
push
outsb
test
and
push
dec
mov
cmp
out
insb
xchg
sub
and
test
cmp
mov
adc
in
loope
cmpsl
mov
jl
pop
sub
dec
dec
sbb
dec
add
es
add
sub
pushl
das
incl
js
sahf
dec
repz
mov
mov
into
lods
dec
mov
xchg
sub
or
mov
in
pop
addl
mov
pop
dec
dec
jg
ret
push
push
lock
mov
jl
inc
and
jl
push
push
mov
inc
cmpsb
sub
bound
aas
mov
rcrl
imul
ret
pusha
add
subl
bound
fsubl
jl
mov
test
addr16
sbb
jge
fs
repz
movsl
xlat
cltd
scas
jmp
inc
mov
xor
push
jb
int3
loopne
data16
or
push
xchg
dec
xchg
push
movsl
fmull
arpl
stos
pop
test
sub
call
cs
dec
lods
and
mov
out
cmp
mov
inc
idivb
jle
mov
inc
sub
cmp
jnp
add
sub
sbb
jb
jne
mov
outsb
sub
roll
sbb
cmpsl
iret
rolb
mov
mov
add
push
repnz
sbb
jnp
sbb
mov
pop
push
sbbl
cmpsl
sub
inc
xor
outsl
out
pop
idivl
inc
mov
or
mov
inc
mov
aaa
inc
mull
cmp
and
sti
aad
xor
fucom
cmpsb
mov
std
ficomps
xor
inc
add
xlat
adc
inc
imul
andps
mov
jno
mov
jecxz
dec
push
and
adc
mov
les
push
out
add
xchg
mov
cs
push
or
xchg
jo
mov
xlat
adc
fchs
in
adc
repz
stc
adc
xlat
xchg
inc
pushf
or
cmp
and
sbb
icebp
push
ret
inc
aad
fmulp
mov
into
dec
cmp
dec
loope
enter
push
repnz
add
jbe
mov
lods
add
xor
jno
mov
xchg
or
jl
lock
in
aam
insb
in
mov
inc
xor
sbb
ja
mov
cs
mov
jg
inc
jne
and
out
cltd
and
fisubrs
test
popf
rorb
bound
push
cwtl
fists
lds
je
ret
sbb
out
add
sbb
and
stc
add
rorb
fiadds
bound
pop
fwait
xor
icebp
mov
jge
jmp
js
xchg
sub
add
mov
mov
xor
mov
pop
or
add
mov
pusha
test
or
stos
push
mov
dec
pop
outsl
outsl
mov
add
data16
mov
popa
sbb
ljmp
jecxz
into
mov
xor
es
push
stos
mov
iret
inc
push
sbb
inc
adc
repz
loop
xchg
shr
popw
in
mov
fidivrs
sbb
mov
mov
je
cmpsb
out
add
and
and
mov
data16
dec
je
shll
push
sti
mov
push
fisttpl
femms
test
xchg
push
lods
push
ds
in
inc
adc
cmc
push
inc
push
loopne
push
sarl
adcl
scas
pop
mov
sbb
inc
jae
push
in
dec
xor
sub
sbb
push
je
xor
scas
add
jns
push
jns
mov
call
les
movl
sbb
ds
cmp
xchg
dec
mov
jno
cmp
jne
jge
and
sbb
jo
repz
inc
sbb
stos
mov
mov
cld
fwait
daa
hlt
xlat
push
bound
sbb
sub
push
mov
addr16
xchg
dec
or
and
dec
mov
dec
arpl
xor
cmp
out
ljmp
push
imul
cli
and
imul
sahf
jge
mov
inc
sub
add
mov
jmp
inc
jmp
or
jns
lods
mov
mov
mov
add
dec
mov
add
sbb
ss
xchg
dec
or
or
and
dec
jl
sbb
stos
das
xor
pop
dec
pop
add
dec
add
dec
pop
fidivrs
notb
pop
xorb
neg
outsb
sub
pop
ljmp
loopne
inc
enter
sub
mov
scas
mov
inc
gs
loopne
clc
mov
mov
sbb
sahf
adcb
scas
stc
in
add
data16
xchg
mov
jne
lds
mov
rorl
sti
xchg
mov
leave
lea
cpuid
mov
fldt
or
fldcw
cwtl
icebp
cli
xchg
ljmp
xchg
ffree
stos
jle
xchg
das
cmpsb
aam
xor
adc
icebp
xor
and
adc
fistl
xchg
out
mov
dec
pop
pop
fnstsw
xchg
sbb
mov
sub
mov
mov
insb
shlb
dec
jae
inc
mov
xchg
ljmp
jne
mov
add
insb
mov
mov
lret
inc
ret
sbb
cmp
arpl
fdecstp
imul
gs
subl
pop
inc
pop
int3
push
inc
inc
xlat
lods
cld
mov
rcll
mov
jge
lods
xor
sbb
shrl
inc
or
mov
mov
repnz
pop
cmpsb
xchg
xor
mov
ret
pop
inc
fstps
fistpll
lret
sbb
inc
mov
jbe
xor
into
jg
int
xlat
shll
aaa
nop
sbb
ss
loopne
push
mov
xor
mov
cmp
setne
pop
xchg
call
and
mov
push
lahf
jo
shrb
adcl
push
les
testb
mov
or
push
or
arpl
xchg
sub
outsb
xor
pushf
push
add
loopne
push
dec
xor
mov
mov
or
mov
sub
or
mov
mov
cmp
and
test
in
pop
xchg
adc
mov
lods
rcrl
adc
push
gs
mov
inc
pop
pop
mov
cmp
aas
sub
sub
sub
int3
fsubrl
in
push
sub
lea
mov
mov
mov
cmp
xchg
arpl
into
clc
sbb
push
je
leave
nop
sub
inc
icebp
or
jbe
lods
jb
pop
aam
std
cpuid
lret
xlat
ror
out
insl
inc
xor
and
test
pop
movsb
adc
jno
cmp
int3
or
mov
in
jno
cmp
imulb
dec
xor
lea
add
xor
push
sbb
push
xor
and
rcl
orw
andb
aad
iret
xchg
mov
stos
jnp
mov
loope
cmpsl
jp
mov
sbbl
ret
out
inc
in
jg
mov
fcmovu
std
jno
ljmp
inc
push
pop
xor
imul
jae
fcomps
in
out
gs
es
xor
and
mulb
xlat
pop
lahf
clc
mov
mov
xlat
sub
ret
sub
mov
outsb
xor
aam
andb
add
push
sbb
pop
daa
cmpsl
xor
xor
sub
jo
dec
cmpsb
cmp
call
inc
leave
push
fiaddl
ret
cmc
jne
push
nop
fs
cwtl
sbb
outsb
mov
push
iret
fsubrl
div
aaa
mov
insl
std
sbb
mov
mov
and
adc
dec
mov
mov
cld
xlat
mov
inc
arpl
ret
stos
xor
inc
enter
int
push
add
xchg
dec
and
aaa
fsubp
or
mov
mov
and
fisubl
inc
fcoms
xchg
add
jne
xchg
push
rcrl
jno
incl
or
pop
pushf
jnp
je
popa
mov
jge
stos
insb
sbb
dec
popf
ret
test
jl
enter
mov
sti
dec
sub
lods
jge
jle
push
sbb
jbe
and
mov
add
ljmp
jmp
mov
dec
cmp
das
mov
je
mov
and
cmp
shl
mov
dec
int3
ds
and
scas
notl
popa
imul
jno
in
and
cmp
or
adc
sbb
pop
jmp
sbb
or
push
dec
shrl
push
fs
icebp
ss
pop
popf
jmp
or
mov
adc
jbe
xchg
mov
rcr
nop
stos
pop
sahf
or
adc
lods
xor
cmp
xlat
movsl
mov
add
cmp
stos
mov
pusha
fwait
pop
test
inc
xor
dec
push
je
add
fdivrs
cld
pop
xor
int
out
dec
bound
fidivl
mov
mov
int3
xchg
cmp
inc
clc
pop
push
mull
jne
fiadds
aas
ret
xor
mov
add
int
xchg
data16
mov
int3
push
gs
mov
pop
loop
aas
repz
pextrw
lea
push
add
addr16
iret
in
pop
cmp
mov
sahf
outsl
mov
add
jle
dec
adc
xor
ret
aas
outsl
sbb
pusha
fwait
xor
fs
mov
scas
fs
in
mov
lahf
loop
jp
adc
mov
sahf
aam
xor
inc
pop
xor
jle
cmc
ja
dec
jns
nop
repz
pop
stos
push
add
aad
push
inc
js
jb
xchg
leave
add
jns
dec
in
fimull
aad
incl
jns
pop
rolb
pop
movsl
inc
es
cmp
into
icebp
xor
jbe
mov
xchg
insb
pop
sub
ss
lods
add
sti
sti
data16
xchg
xor
outsl
cmpsb
add
jnp
mov
subb
je
cmp
rolb
mov
fistps
stos
and
cmc
adcb
ljmp
shl
xchg
cmp
add
ret
or
cmp
xor
outsb
lds
lods
push
je
fimull
stos
out
push
add
dec
sbb
cmp
fistpll
mov
scas
fldl
lcall
cli
gs
nop
aaa
ja
xchg
shr
pop
dec
xchg
ljmp
jnp
loop
mov
jb
lods
dec
mov
mov
xchg
fisubrs
js
push
fwait
xchg
iret
cmp
jnp
mov
pop
lcall
daa
and
mov
pushf
mov
ret
lds
adc
sbb
add
sbb
out
inc
outsl
mov
xlat
pop
rcrb
mov
xchg
lret
fmull
in
lock
ja
lds
test
cmp
inc
mov
inc
mov
in
adc
fwait
jle
and
mov
fwait
or
lret
inc
add
insb
in
or
daa
xor
mov
adc
mov
dec
inc
ljmp
rcr
and
ss
or
inc
test
or
mov
ja
sub
mov
adcl
jle
xchg
push
hlt
pop
or
cld
pop
xor
sti
or
adc
ret
sbb
out
stc
mov
stos
adc
aas
adc
sahf
into
mov
nop
mov
xchg
test
dec
sbb
out
lock
lea
mov
mov
lods
fidivrl
mov
jecxz
push
cmp
mov
and
pop
int3
movsb
cld
addl
mov
jne
inc
sbb
push
jle
cli
xchg
in
jne
loopne
dec
jecxz
test
into
mov
xlat
xchg
sbb
or
adc
sub
sbb
cmp
or
pusha
popf
out
pop
imul
xchg
test
mov
inc
pusha
lcall
outsl
cmpsb
insl
ret
xchg
fs
aam
inc
jg
rol
subb
jp
xchg
mov
aaa
push
adc
inc
xor
adc
mov
test
inc
andb
cmp
mov
cmc
inc
inc
xchg
push
inc
jg
adc
daa
call
in
dec
out
inc
jb
mov
js
orl
aas
xchg
add
xor
ljmp
aaa
add
cmp
pop
fidivl
test
mov
pop
dec
in
fcoms
fnstsw
mov
addr16
clc
leave
loop
sbb
ljmp
popl
mov
push
pop
sub
jg
and
cwtl
shl
bound
push
dec
imull
cmp
loop
jg
mov
xchg
lcall
jae
lds
dec
cltd
movsl
xor
mov
sbb
cltd
outsb
adc
jbe
fs
jge
arpl
out
jo
lea
push
notb
dec
dec
mov
mov
mov
cmpsl
cmp
pop
jbe
sti
mov
iret
sbb
shr
dec
movsb
aam
sti
or
pop
test
fsubrs
inc
xor
pop
or
mov
es
stos
or
push
pop
mov
mov
les
push
out
mov
sub
xor
mov
mov
loope
jecxz
sbb
sahf
out
and
dec
mov
push
fsubrp
push
xchg
mov
mov
cmp
jmp
push
sub
cmc
xor
jb
cld
fadd
and
std
ret
and
pop
or
and
jl
aaa
push
dec
xchg
mov
xchg
pop
iret
pop
in
insl
xor
jp
mov
stos
adc
mov
mov
inc
jne
and
mov
pop
insl
arpl
test
mov
and
fwait
popf
loopne
jnp
sbb
arpl
gs
fcom
pop
es
and
andl
dec
mov
sbb
add
inc
xchg
aad
or
sbb
lret
xchg
cmp
pop
sub
cmpsl
xor
cmc
push
mov
outsl
fnsave
or
fldenv
scas
das
stos
push
imul
inc
inc
lahf
mov
add
orb
sbb
add
in
sbb
jns
aas
dec
imul
fidivl
xor
in
push
or
loopne
mov
adc
cwtl
fistpll
dec
popa
and
pop
rcrb
add
mov
xchg
push
xor
mov
mov
jmp
push
outsb
scas
lea
imul
push
scas
lcall
push
cmp
xchg
push
out
cmpsb
mov
mov
xchg
jno
test
add
xchg
adc
test
xchg
lods
addl
sub
pop
pop
xchg
into
roll
fwait
inc
xor
mov
hlt
insb
xor
stc
gs
xchg
and
adc
sub
pop
xchg
cmp
insb
imul
insl
mull
into
int
pop
push
adc
movsb
dec
sbb
push
mov
fldl
jmp
aaa
dec
push
lret
daa
or
clc
jbe
add
pop
mov
cmp
stc
dec
pushl
mov
pusha
mov
and
or
and
pusha
mov
pop
mov
mov
cmpb
fadds
lea
or
sbb
fsubs
inc
enter
mov
mov
ds
cmp
cld
data16
and
dec
movsl
cs
shr
into
push
jae
int
loop
xchg
hlt
and
imul
dec
or
inc
fs
xchg
jecxz
in
jne
sarl
outsl
cmp
and
sti
mov
adc
fldcw
and
hlt
inc
mov
inc
mov
jecxz
inc
loopne
ficomps
test
cli
mov
sub
add
push
mov
or
jmp
inc
or
add
xorl
jnp
sbb
ljmp
lds
inc
andb
popf
inc
outsl
and
inc
inc
jns
sub
inc
pusha
incl
pop
enter
wrmsr
scas
in
hlt
mov
sbb
cmpsl
cmp
sbb
mov
add
movsb
pop
out
ret
sbb
inc
sti
and
jecxz
lods
dec
hlt
mov
mov
sub
loope
push
call
mov
mov
add
out
pop
addl
cwtl
stos
nop
lret
cmpsl
xchg
fldcw
push
inc
mov
jno
mov
or
pop
repz
shl
pop
sbb
cmp
or
outsb
int3
das
inc
jne
stos
sub
aaa
in
pop
lret
sbb
or
cltd
ficompl
push
push
xor
pop
enter
stc
push
je
add
mov
shll
sub
push
stos
lahf
das
int3
aam
sub
jl
ficomps
fwait
xchg
inc
out
mov
loop
dec
iret
ds
fisubrs
pop
push
addb
mov
xchg
adcl
sahf
lea
push
mov
inc
and
les
cltd
aam
aam
cmc
das
cmp
mov
add
xchg
jecxz
jle
cmp
mov
out
je
mov
pop
lock
push
mov
cmp
fists
inc
js
mov
pop
vmread
std
xor
sub
and
aad
mov
cli
jge
mov
mov
lcall
inc
jp
fisubs
sub
xor
popa
testl
cwtl
xchg
push
js
inc
cwtl
or
out
out
adc
mov
pushf
repnz
dec
adc
push
fisttps
ret
loop
mov
inc
mov
mov
push
push
popa
or
aad
dec
push
inc
pop
mov
mov
cmp
mov
jo
int
push
mov
cmpsb
push
push
nop
and
or
loopne
in
xchg
sarb
test
shlb
cmp
add
movsb
adc
jb
xor
jno
xchg
aad
push
push
mov
or
mov
mov
mov
and
jmp
cmp
inc
push
daa
shl
stc
dec
jecxz
sbb
inc
mov
inc
lret
cs
setne
sub
pop
out
lea
or
lds
test
outsl
cmp
fdivs
inc
in
incl
mov
push
inc
pop
fwait
out
js
and
jl
mov
mov
or
push
sub
imul
fs
sbb
jmp
test
es
es
hlt
fcom
incb
cmp
out
mov
cmp
mov
mov
mov
and
iret
or
adc
test
push
add
mov
es
jnp
jo
and
movsl
popa
or
fcmovnu
sbb
daa
je
or
pop
or
scas
fstps
cmpsb
xor
leave
int
sub
push
in
pop
pop
int
sub
inc
mov
push
out
ljmp
push
cmp
push
push
and
or
stos
popa
xchg
mov
mov
mov
and
inc
mov
js
xchg
rcrb
sbb
sti
xchg
cld
or
or
std
dec
fldt
add
outsl
mov
inc
push
xchg
mov
and
call
mov
mov
jmp
arpl
std
sub
mov
test
mov
test
pop
pusha
xor
ficoml
or
arpl
je
dec
push
test
inc
jp
jge
push
xor
imul
leave
in
leave
adc
pushf
loope
or
fsts
mov
lret
dec
and
stos
fidivl
out
push
pusha
repnz
xor
cli
push
adc
or
fsubrs
cmp
stos
mov
adc
mov
add
ja
out
lods
push
ds
push
and
and
mov
or
xchg
cmp
pop
add
sbb
aaa
inc
push
lds
enter
push
mov
out
pusha
mov
js
test
out
pop
mov
xor
push
int3
add
pop
fisubl
xor
arpl
lcall
cmpsl
loop
sbb
ss
inc
scas
lcall
xchg
popa
pop
push
cmp
jne
out
cmp
sbb
jmp
push
inc
xchg
xchg
fdivrs
adc
rcr
push
lcall
leave
jmp
jo
scas
jge
jmp
mov
jge
notb
sbb
jbe
call
les
data16
test
or
mov
push
sbb
inc
adc
dec
jb
sar
inc
dec
jbe
in
shll
in
cmc
daa
sbb
es
ret
aaa
daa
inc
and
add
mov
sub
pop
pop
out
in
movsl
imul
adc
adc
mov
sub
cmpsb
lods
xchg
repnz
aad
ss
loop
mov
pop
pop
lret
mov
imul
jp
mov
movsb
dec
mov
adc
rclb
loop
pop
or
adc
inc
adc
popa
xchg
sub
add
xlat
aas
rclb
div
lods
sub
cmpl
mov
ret
cmp
incl
cmp
dec
into
scas
or
or
jp
clc
mov
fimull
aad
push
add
imull
cmp
pusha
or
inc
xor
loop
cmp
xchg
sbb
xchg
fcmovne
and
clc
xchg
pop
std
and
and
fadds
lock
cli
sbb
inc
sahf
mov
cmpsl
data16
lcall
sbb
jg
mov
jb
mov
push
push
inc
shl
adc
outsb
mov
aaa
xor
movsl
aam
fstpt
jo
adc
jno
or
jle
xor
insl
dec
jb
or
push
dec
jg
cmp
inc
out
xchg
mov
cmp
cltd
dec
jecxz
jnp
mov
fisubl
cmp
inc
mov
mov
mov
outsl
or
clc
or
mov
jle
pop
xor
dec
mov
push
jecxz
mov
cmp
ret
mov
rcl
add
mov
pop
andl
mov
leave
adc
pop
sub
loope
jnp
sbb
out
dec
fwait
jne
inc
sti
and
in
nop
jmp
mov
imul
fs
jl
in
jbe
dec
test
lcall
cmpsb
xor
mov
xchg
test
or
jecxz
mov
cmp
pop
adc
fsub
sbb
aad
push
in
hlt
and
add
out
sub
sbb
adc
cmp
std
fabs
scas
std
icebp
cmp
mov
xchg
in
cwtl
jb
add
mov
rorl
cmp
stos
rolb
mov
stos
stos
loopne
fistpl
sarl
fcomps
incb
movsl
fcmovu
and
lock
pop
mov
sub
fcompl
decl
imul
and
sbb
inc
bound
dec
repz
inc
lods
pop
test
push
and
jle
or
pop
sti
loope
mov
pop
in
adc
push
jl
inc
int3
mov
dec
call
loop
cmp
xor
jae
into
rcrb
movsb
cmpsl
not
jns
cmc
mov
xchg
xor
push
xchg
inc
and
xchg
popl
nop
montmul
int3
inc
dec
filds
mov
idivb
mov
mov
leave
and
arpl
jnp
pusha
xchg
out
jb
aam
insl
scas
or
mov
pop
mov
fldl
repnz
jmp
cmp
add
vinserti32x4
pop
cmp
inc
js
mov
xor
cmc
addl
mov
pop
inc
jns
outsl
call
mov
enter
mov
xchg
iret
rep
call
enter
pop
xchg
daa
jecxz
hlt
pop
sti
shlb
bound
dec
idiv
fincstp
test
push
fs
sub
mov
nop
js
popf
sub
fldcw
sbb
hlt
dec
push
repnz
add
mov
mov
jle
pop
push
loop
jle
cltd
dec
std
cli
fmuls
cs
subb
push
or
fincstp
loop
test
lret
and
mov
xchg
xor
sub
push
ja
in
or
push
mov
in
mov
fwait
outsl
jb
inc
test
pop
ret
mov
jmp
adc
pop
pushf
xchg
jne
xlat
mov
xlat
mov
mov
sbb
adc
cmp
add
push
shl
xchg
movb
gs
ret
mov
or
in
out
shr
movsl
div
fistpl
inc
mov
sti
xchg
notb
pop
fldcw
pop
adc
int3
push
out
xor
dec
xchg
sub
gs
in
inc
mov
pushf
pushf
fldl2e
fnstenv
pop
xchg
adc
lret
movsl
ret
cld
pop
das
lods
lea
add
xor
push
add
mov
xor
or
test
lds
pop
stos
loope
mov
mov
mov
das
or
push
ficoms
mov
sub
sub
sbbl
es
inc
lods
jnp
fidivrs
cmp
jp,pt
setbe
out
dec
mov
push
adc
jnp
ljmp
ret
lret
mov
pop
pop
repz
pop
imul
jo
scas
idivl
int
lods
xchg
adc
iret
add
mov
push
mov
test
push
loopne
sbb
mov
movsl
inc
sarl
jns
test
mov
mov
push
push
fincstp
mov
pop
add
and
daa
sbbb
adc
jl
ret
fsts
insb
scas
rcrb
lret
out
cmp
mov
aad
jae
sub
mov
cmpsl
outsb
imul
lods
mov
mov
dec
jb
in
mov
push
scas
std
and
or
jo
nop
xchg
or
jmp
leave
dec
xchg
cmp
lahf
push
dec
lods
jg
mov
xor
or
adc
jecxz
mov
das
lods
imul
xlat
jne
fmulp
stos
fldl
mov
mov
fldl
stos
adc
outsl
pusha
add
cwtl
cmp
int
inc
int3
shrb
cmp
fcoml
insb
sbb
std
xor
imul
stos
xor
mov
movsb
cmpsb
enter
push
xor
frstor
mov
arpl
push
out
xor
xchg
nop
mov
xorl
sub
lods
xchg
mov
or
arpl
dec
bound
lcall
xchg
daa
daa
or
inc
xchg
loopne
enter
and
bound
sbb
shll
call
adc
arpl
or
nop
ja
mov
popa
mov
push
and
aad
sub
dec
imul
jmp
jnp
mov
cmc
fneni(8087
out
pusha
ss
pop
pop
push
rep
or
ja
or
jne,pn
pop
test
pop
inc
or
hlt
rorl
loop
repnz
mov
int
std
sub
or
insb
in
nop
inc
pop
or
daa
ret
jae
cli
out
mov
xlat
fdivrl
lcall
aaa
popa
stc
or
hlt
adc
pop
mov
insb
mov
pop
mov
out
xor
in
push
mul
mov
mov
stos
sub
mov
fs
mov
ret
pop
gs
xchg
rclb
pop
stos
add
lret
push
xorl
mov
and
push
mov
dec
pop
sarl
enter
adc
push
sub
sbbb
jb
add
popf
iret
cli
out
or
mov
aad
into
or
pushf
outsb
loopne
pop
lret
loope
or
in
mov
push
clc
test
sub
mov
fidivl
cmp
mov
inc
fidivl
pop
inc
gs
pop
dec
or
in
nop
mov
icebp
ror
shll
addr16
xlat
push
sbbl
stc
nop
pop
das
add
imul
sahf
fimull
mov
mov
imul
aaa
fnstcw
lret
xchg
cmp
push
mov
jae
aaa
repnz
mov
inc
movsb
lds
cmpsl
ja
aam
add
jecxz
and
popa
pusha
movsl
aad
jno
mov
shrl
addl
jl
stc
jno
mov
jno
das
fsubrs
adc
sbb
push
xchg
sub
ret
and
pop
mov
leave
aad
inc
or
popf
adc
push
pop
or
cmp
and
push
inc
mov
in
lock
and
sub
mov
push
loopne
testl
pop
arpl
sub
mov
inc
dec
mov
loopne
cmp
jmp
mov
sti
ret
clc
adc
mov
sbb
push
and
aad
mov
clc
arpl
and
mov
lcall
sbb
movsl
or
and
mov
mov
jo
ljmp
cli
test
or
xlat
js
xor
cmpsb
int
out
icebp
pop
subb
std
insl
jge
or
or
mov
dec
add
pusha
in
lahf
in
or
xor
xchg
dec
pop
xlat
xchg
jae
insl
adc
daa
mov
sub
adc
cmp
sbb
add
push
sarl
hlt
shll
ja
mov
loop
mov
addb
mov
adc
loopne
add
push
rcll
imul
loop
inc
pop
jbe
pop
test
mov
jp
test
lods
sub
push
inc
lods
jb
inc
icebp
sbb
rorb
cmp
jl
cltd
sti
and
icebp
dec
dec
xor
outsb
xchg
testb
test
fbld
ljmp
daa
jae
xor
mov
test
leave
inc
cmpsb
push
rclb
movsl
jge
xchg
push
dec
sbb
test
loop
lods
cmp
scas
cmp
mov
or
rol
pop
cmp
add
xchg
stos
xor
not
int3
imul
or
and
cli
cmp
fs
and
int3
sub
jae
adc
popl
sbb
sub
mov
outsb
imul
daa
arpl
pop
cmp
dec
mov
xchg
hlt
xchg
out
jp
fnstenv
push
bound
std
or
push
push
out
outsl
mov
jp
shll
pop
dec
jae
xchg
dec
sub
mov
mov
push
mov
mov
mov
clc
out
xchg
scas
sti
and
pop
xchg
xchg
loope
cltd
cmp
out
out
sub
cmp
or
stc
das
out
pop
loop
dec
dec
dec
mov
in
mov
lcall
shrl
or
stos
in
in
push
jge
sub
push
dec
out
jp
in
or
push
lock
jp
adc
stos
cmpsb
jecxz
mov
cld
cmp
sbb
aaa
mov
pusha
aaa
sbb
cmc
imul
lock
sbb
aad
ja
js
jae
scas
xor
mov
sub
enter
push
mov
inc
adc
in
imul
xor
and
push
out
data16
test
push
aaa
ficompl
in
lcall
mov
xchg
mov
mov
xchg
pop
mov
push
cmc
daa
add
mov
data16
leave
jg
cltd
ss
testl
xlat
test
inc
lret
inc
mov
fcmovbe
jge
enter
jl
adc
pop
sub
jge
bound
cmp
cmpsb
dec
rcrl
pop
pop
leave
jmp
sbb
rcrb
fwait
jns
repz
addl
cs
loop
hlt
and
push
in
mov
jmp
and
arpl
int
testb
cmp
pop
mov
cltd
sub
inc
lahf
push
sub
xchg
bound
cld
in
add
mov
mov
xchg
out
daa
inc
push
repnz
mov
jne
jl
pop
mov
pop
fisttpl
push
push
xlat
ljmp
and
or
ljmp
stos
cmp
decl
icebp
sub
inc
xor
xlat
mov
mov
jb
pop
scas
loop
fistpll
or
push
dec
decl
pop
addb
movsl
ljmp
xchg
shl
xchg
leave
xor
inc
dec
bound
ljmp
ja
fiaddl
std
inc
das
and
or
fwait
pushf
xchg
xchg
dec
ret
pop
xor
xor
pop
sub
sub
push
int3
out
jo
push
add
push
sbb
xor
or
cmp
push
cld
cltd
stos
lcall
shlb
fcompl
cmpsb
adc
daa
out
idiv
add
pop
sar
jo
mov
fisubrl
fnstcw
dec
sub
push
sbb
push
fisttpll
mov
push
xchg
jl
xchg
jns
sbb
pop
jecxz
shrb
push
into
xlat
xchg
jl
addb
imul
cmp
or
lock
repnz
pop
mov
fnstcw
mov
cmpsb
mov
icebp
dec
mov
fwait
shll
cmp
mov
cmc
xorl
enter
fldenv
push
jne
mov
xchg
sub
mov
cmp
mov
adc
add
or
pop
mov
xor
outsb
lcall
gs
nop
das
ret
loop
aas
dec
enter
push
mov
es
jge
sbb
xchg
xchg
inc
pop
sbbb
pop
jl
inc
mov
enter
in
jns
or
adc
rclb
js
int
or
cli
xor
rclb
je
sbb
xchg
int3
fs
fcmovne
cwtl
jmp
lock
inc
mov
loopne
jge
and
lret
xorb
out
add
push
add
push
mov
lods
cmp
movsb
lods
sub
dec
daa
lods
int
sbb
lods
adc
ret
testl
arpl
xor
xor
dec
push
fs
jmp
push
mov
or
insb
ftst
lds
mov
pop
dec
fisttpl
lock
insl
cmpl
je
addb
sbb
push
hlt
out
nop
ret
and
mov
and
adc
test
push
dec
xchg
xchg
jo
movsl
xchg
adc
mov
pop
xchg
push
push
xchg
jge
ret
xor
jl
jle
test
sbb
rcrb
sub
sub
or
iret
ljmp
xor
push
cmp
sub
jmp
xchg
dec
nop
add
add
mov
jbe
test
xlat
inc
sbb
cmp
mov
loop
push
icebp
call
push
adc
lock
mov
ret
add
sub
add
sub
push
das
sbb
in
mov
xchg
out
cmp
mov
inc
ja
mov
in
adc
iret
mov
adc
sub
and
fwait
sbb
mov
aam
pop
in
data16
in
test
xor
mov
pop
dec
in
scas
sub
pop
stos
fsubp
inc
sahf
out
mov
adc
jl,pt
xor
xlat
inc
rorl
inc
jmp
repnz
sarb
xor
xchg
andb
or
rorl
outsb
cmp
dec
test
insl
mov
insb
cmp
inc
arpl
mov
mov
mov
push
repnz
or
subb
mov
sahf
movsl
int
pop
jl
lret
inc
mov
dec
pop
into
add
inc
add
shlb
call
call
call
add
mov
es
insb
mov
gs
xlat
addb
dec
bound
xlat
fsubrl
cmp
mov
idivl
xor
sarl
jg
arpl
dec
mov
push
mov
xchg
data16
add
ret
sbb
pop
movsl
outsl
sbbb
sbbb
inc
in
outsl
mov
sbb
xor
fdivrp
jae
hlt
lfs
mov
enter
popf
enter
push
sub
sub
aas
xchg
jmp
fiaddl
mov
popf
fbld
jbe
inc
xchg
or
add
mov
and
lcall
and
fisubl
stos
stc
dec
ficomps
repnz
or
lea
cmp
mov
mov
and
push
mov
arpl
lock
daa
pop
scas
fnstenv
sahf
adc
adc
mov
test
cmpsb
mov
lret
xor
fldenv
pop
idivb
leave
filds
push
sub
mov
lcall
or
rcr
gs
outsb
inc
push
fdivrs
ds
ljmp
or
inc
xor
add
icebp
outsb
pop
jb
push
cwtl
fildll
daa
je
mov
jmp
push
int3
test
mov
inc
nop
sahf
js
adc
cmpsl
push
pushf
insb
add
aam
push
jl
imul
inc
imul
mov
cmp
lret
lret
mov
fs
dec
xor
add
inc
outsb
mov
repnz
mov
push
cwtl
inc
xchg
addb
jge
lretw
mov
sbb
gs
or
fisttps
and
ret
xchg
jno
xor
test
test
and
iret
push
sub
lods
mov
shr
pushf
popf
add
lods
pop
add
pop
xor
mov
cmp
shrl
sub
jp
push
sbbb
arpl
fdivrl
out
mov
sub
add
push
leave
mov
push
pop
fmulp
inc
push
jl
mov
adc
mov
jl
inc
xchg
xor
adc
push
dec
inc
fs
pushf
cmp
sbb
sbb
xlat
push
xchg
mov
cli
push
push
lods
pop
fbstp
pusha
out
lahf
in
inc
add
cmpb
cmpsb
decb
fmuls
shrl
int3
test
push
out
push
rolb
add
mov
and
testl
imul
jns
call
or
out
scas
adc
lock
clc
mov
xor
xlat
inc
dec
aad
add
sbb
daa
dec
jle
xchg
scas
insb
jp
jae
mov
xor
xor
and
lea
jno
mov
ret
outsl
push
lock
fdivp
clc
int
stos
lods
jmp
test
jl
cmc
mov
add
stos
stc
cmpsl
dec
push
jns
or
test
popf
pop
mov
xchg
jg
xchg
mov
loope
push
mov
cmp
jge
test
das
movsb
addb
jl
mov
cli
fsubrl
cmp
push
ds
addr16
out
mov
jnp
insb
push
pop
xchg
testb
cld
iret
xlat
inc
mov
sub
popf
cmp
in
xor
les
jnp
jmp
dec
js
or
and
je
xor
push
xlat
jne
lds
pause
and
mov
inc
stos
mov
pop
and
and
lock
lret
sti
daa
adc
outsb
inc
arpl
add
dec
aam
mov
rcr
inc
sbb
add
into
and
lret
or
dec
mov
sub
jmp
rcll
cmp
iret
stos
lcall
mov
in
fiaddl
pop
or
and
adc
push
es
adc
add
sub
call
outsl
inc
nop
add
inc
sar
xor
cmc
xor
cmc
jne
ds
mov
pop
cld
jle
xor
notl
xor
fimull
shlb
lahf
mov
dec
push
or
bound
jp
adc
stos
aaa
in
aaa
sub
ror
jecxz
and
int3
mov
xor
jge
cmp
repnz
insb
int
sub
xor
mov
mov
test
push
movsb
popf
sarl
daa
imul
push
and
sbb
das
xchg
outsl
cwtl
add
sbb
test
sub
pop
sahf
xchg
fs
iret
pop
dec
push
xchg
add
negl
adc
test
int
pop
in
imul
ret
jmp
sbb
outsb
sub
dec
jns
arpl
jno
push
aaa
inc
cli
js
or
adc
pop
mov
pop
adc
push
sub
cmp
push
fnstenv
mov
sbb
mov
shlb
or
dec
add
mov
cltd
int
sub
mov
dec
mov
push
xchg
bound
stos
idivb
adc
or
dec
dec
push
pop
loopne
mov
mov
clc
call
jno
sbb
mov
rcrl
out
test
mov
adc
hlt
stos
mov
lcall
push
addb
dec
dec
pop
addr16
mov
adcl
xor
out
inc
aad
cs
cmp
lret
cmp
adc
cltd
adc
push
shlb
mov
rolb
dec
pop
xchg
sbb
aam
xchg
sbb
lret
aaa
push
imul
mov
adc
lods
dec
pop
fcmovnbe
lret
andb
sub
push
dec
push
xorl
and
lods
pop
pushf
inc
stc
and
or
popf
js
jmp
fidivl
outsl
int3
in
rcrl
sbb
or
jne
stc
adc
pushf
in
adc
xor
bound
jge
fadd
fdivp
andb
loopne
mov
adc
out
push
cli
inc
in
sub
cmp
jne
adc
dec
mov
push
movsb
stos
jp
insb
jne
lret
js
sub
xor
mov
testl
mov
dec
ja
roll
cmp
xchg
pop
push
inc
into
and
adcl
inc
pop
aas
or
mov
popf
jns
out
mov
dec
divb
sti
inc
scas
iret
adc
jb
insl
fimuls
repz
pusha
mov
mov
push
jbe
adc
mov
cmpsb
cli
mov
jmp
mov
outsl
mov
push
mov
push
aad
ja
xchg
sub
push
jp
std
fisttpl
adcl
mov
pushf
inc
jno
pop
cmp
cltd
cmp
xorl
jns
push
jmp
jmp
fs
or
add
mov
stc
dec
pusha
add
or
push
fadd
adc
aaa
ljmp
xor
scas
dec
stos
ror
mov
adc
adc
cmp
xchg
hlt
mov
dec
dec
xchg
sub
mov
in
fisttpl
cs
dec
aam
dec
xchg
je
hlt
inc
sub
xor
cmp
daa
xchg
mov
dec
jno
inc
xchg
dec
lods
jg
insb
rorl
lds
ja
or
std
aaa
sub
mov
stos
movl
push
mov
jge
mov
xor
movsl
shll
sub
cs
movsb
mov
enter
ljmp
jge
add
aas
and
out
pop
push
aad
lret
sub
lods
test
mov
sub
dec
daa
or
push
push
sbb
out
fisubs
xchg
xlat
xor
lods
mov
jecxz
xchg
jnp
pushf
xchg
jb
fcoms
pop
add
ss
pop
std
push
pop
lods
std
push
xchg
add
sub
cmp
pop
cmpsb
inc
push
popa
xor
jl
out
nop
shlb
orb
mov
sbb
or
clc
jecxz
fisubrs
cmp
jle
pop
sahf
je
cld
pop
push
jl
incb
enter
pop
xor
sub
xorb
pusha
mov
sub
nop
lret
dec
call
xchg
sbb
sbb
push
sti
and
xor
or
pop
dec
mov
jbe
add
lret
sub
call
cmc
xchg
xor
int3
xor
xor
cmc
xor
mov
sahf
idivl
cli
fistpl
ret
jmp
jne
mov
negb
imul
push
out
imul
push
jle
stos
add
gs
rorl
sbb
pop
mov
pop
sbb
mov
sbb
jns
xchg
ficomps
jmp
in
pop
sub
je
pop
lret
subl
scas
mov
mov
sub
neg
rclb
xor
xchg
out
popf
lea
aas
xorb
subb
loopne
jp
movsl
pop
icebp
pushf
pop
je
outsl
pop
popa
dec
push
xor
fcomps
xchg
in
lods
imul
dec
or
xor
mov
aas
jae
cmp
das
mov
xchg
test
aam
add
mov
pop
test
ret
push
stc
scas
lret
push
add
mov
sub
push
insl
add
and
mov
es
mov
aad
imul
mov
xor
jl
xchg
mov
je
inc
stos
inc
adc
push
sub
pop
int
das
push
fidivrs
imul
add
je
inc
ret
push
sub
test
sbb
cltd
adc
out
xchg
popa
mov
sub
mov
mov
dec
ffree
mov
xor
lds
xor
sub
fdivrl
mov
mov
pop
hlt
xchg
mov
mov
inc
imulb
cmp
or
andb
cmpsb
adc
imull
stos
pushf
pop
out
data16
rcr
xlat
les
dec
int
cmp
push
call
dec
cmp
movsl
inc
or
int
rorl
pop
push
sub
cmp
lods
mov
out
xor
xchg
mov
pop
mov
mov
sub
lea
popf
test
les
clc
rorl
fisubrs
mov
fsts
sar
jb
cmpsl
pop
inc
nop
ds
sub
jnp
mov
in
mov
or
dec
sbb
iret
jns
stos
cmp
fldenv
mov
dec
nop
inc
movsl
outsb
das
xor
mov
popa
fsubrl
sbb
cmpsb
jae
std
bound
push
icebp
xchg
or
mov
xor
int
cmp
mov
fiadds
movsl
int3
dec
or
sub
mov
ja
ret
sbb
lods
dec
fwait
mov
lret
stos
and
add
das
ret
and
imul
js
mov
std
fwait
iret
fwait
out
jb
je
loopne
jnp
dec
lds
xchg
fmull
cmpsb
mov
jne
fistpll
cli
inc
pushf
ficoms
mov
add
test
jbe
pop
push
test
hlt
lcall
int
mov
pop
arpl
adc
mov
int3
inc
rorl
push
inc
pop
insl
sbb
xor
mov
mov
fldcw
test
ljmp
lds
xchg
jge
out
jl
xor
xchg
out
cmp
mov
or
sbb
fmull
and
and
movb
cmp
mov
int
add
lods
sbb
xchg
push
jge
mov
mov
clc
pop
jmp
scas
jnp
pop
loop
lret
push
jg
test
fildll
nop
jno
enter
mov
insb
jnp
mov
lcall
prefetch
jnp
or
mov
jnp
test
dec
cmp
add
sub
xchg
sbb
xlat
or
icebp
adc
outsl
lea
xchg
pop
and
clc
sarl
adc
xchg
cltd
lds
pusha
add
imul
sahf
imul
sub
aas
lods
push
dec
inc
xor
inc
roll
imul
adc
aam
xor
inc
lea
fdivrs
jle
sbb
mov
fiadds
imul
dec
push
fs
mov
mov
hlt
xor
outsb
nop
dec
xchg
insl
cltd
fnstsw
dec
adc
test
mov
sahf
mov
push
inc
in
add
mov
jge
push
adc
mov
mov
adc
sbbb
pop
out
mov
dec
das
mov
test
inc
cmp
in
shll
fstps
sbb
pusha
pop
xchg
jne
addb
test
and
add
push
icebp
inc
out
cltd
es
mov
push
lods
cmc
sarl
mov
push
xchg
int3
pop
scas
addl
add
lea
sbb
clc
arpl
dec
mov
into
fldl
pushf
cli
push
outsb
mov
test
sahf
or
jmp
push
lcall
leave
sub
test
ljmp
sbbb
jne
sbb
lret
xor
aas
cmc
xchg
mov
push
out
or
dec
outsb
sub
adc
xor
cli
jp
movsb
lret
popa
ficompl
lahf
or
int3
lods
fs
jb
andl
pop
insl
push
das
mov
fsubrs
mov
mov
xor
scas
jo
jg
lods
xchg
mov
sub
mov
lock
add
enter
or
adc
int
out
jle
inc
pop
mov
int
rdmsr
fisttpll
push
fbld
sub
cmp
lea
mov
xchg
xor
mov
mov
adc
rclb
sahf
and
in
sbb
je
test
testl
and
pop
repnz
shrb
loope
push
add
push
rorl
fidivrl
aaa
lods
xchg
addr16
adc
in
jl
cmc
dec
daa
inc
jl
inc
mov
fwait
or
test
xor
outsb
jl
jecxz
int3
mov
xchg
leave
fsubs
icebp
bound
sbb
daa
and
push
int
inc
lea
fcomp
pushfw
icebp
int3
pop
cmpsb
fisttps
jb
xorb
cmp
in
xor
cld
test
lods
inc
adc
cmc
loope
scas
mov
jl
mov
sti
test
lods
add
ret
lods
jle
es
add
add
movsb
jne
push
stos
mov
push
shll
das
mov
mulb
addr16
js
fcompl
stc
jg
cs
xor
into
jno
mov
mov
jo
pop
popa
mov
cmpsl
mov
mov
adc
pop
and
lods
sub
adc
mov
nop
mov
mov
lods
jmp
das
rcll
in
loop
mov
insb
jmp
lretw
leave
or
xchg
les
lret
mov
pop
and
and
jp
enter
inc
sbb
inc
ljmp
ret
out
xchg
push
sbb
pop
call
pushf
xor
sub
mov
std
in
pop
dec
cmp
xchg
loop
add
sub
jp
out
inc
and
int3
leave
inc
cmp
jl
fsubrs
sub
jmp
dec
scas
test
jp
mov
aas
lcall
and
cmp
cmp
cmpsl
xchg
aaa
je
xchg
ds
dec
pop
gs
in
ret
push
ljmp
sbb
mov
dec
mov
and
cmp
adc
scas
dec
std
mov
sub
dec
data16
nop
mov
shr
xor
xor
mov
scas
mov
lret
cmp
ret
adc
popa
inc
test
mov
aam
lret
je
pop
in
lods
xchg
out
iret
ret
mov
dec
mov
lret
push
xchg
jno
pusha
call
fistpl
test
ss
sahf
js
ss
dec
lea
push
and
clc
in
sub
mov
inc
sub
push
ss
test
dec
push
xor
xor
test
xchg
sub
popa
loopne
or
push
mov
push
lea
or
scas
xchg
xchg
add
sbb
lock
in
popa
jl
add
sti
dec
and
das
mov
add
jo
and
lea
mov
adc
outsl
mov
subb
push
ds
xchg
les
leave
push
ds
sahf
dec
popa
dec
xchg
or
jns
jmp
mov
negl
push
push
xchg
aad
inc
loope
jp
xor
call
sbb
sbb
dec
jle
or
jp
fmull
repnz
mov
xchg
adc
push
inc
sti
add
or
mov
cmp
push
iret
sbb
lret
jbe
adc
mov
in
and
jmp
lods
pextrw
mov
leave
push
sub
or
push
leave
sub
ficoml
mov
fs
or
xchg
aas
jno
cmp
mov
test
mov
fsubrs
int
mov
xchg
int3
inc
dec
bound
lods
mov
fadds
scas
push
push
in
fiadds
and
fistps
mov
stc
sahf
or
clc
cld
cltd
dec
sahf
stc
ret
pusha
xor
rcrb
dec
shlb
js
shl
push
out
jl
inc
mov
xor
push
push
cld
stos
adc
sbb
dec
cltd
or
xchg
cmp
cmp
jnp
scas
ja
cli
mov
add
dec
lock
sub
aam
insl
scas
pusha
mov
out
jnp
outsb
stos
mov
pop
aaa
jecxz
xchg
push
cmp
inc
orl
add
stc
mulb
mov
repnz
mov
std
fisubs
subl
cmp
stos
or
loope
mov
adc
jp
push
fs
test
stos
xchg
stc
and
bound
loopne
cmpb
pop
xor
jae
sahf
fildl
jecxz
jecxz
mov
jge
dec
ds
mov
jnp
xchg
adc
add
push
push
jle
loope
lret
push
pushf
push
loop
sub
sbb
xchg
sbb
pop
dec
push
pop
movsb
stos
push
sub
push
mov
cwtl
int
and
sbb
xor
scas
pop
pushf
lahf
in
sbb
imul
ss
jge
push
mov
adc
int
dec
sub
icebp
mov
xchg
ljmp
pop
je
jne
dec
push
push
out
mov
inc
inc
add
and
or
test
cmp
pop
adc
stc
in
aam
int3
js
xchg
jge,pn
sbb
cli
cmp
gs
pop
fcomp
pop
xchg
loop
lcall
push
inc
lea
push
push
stc
enter
sbb
pop
jmp
stos
adc
push
cmp
dec
mov
mov
shlb
scas
pop
jo
mov
jno
mov
mov
xchg
or
push
pop
nop
outsb
dec
adc
loop
mov
test
push
int3
inc
fdivr
into
cmp
into
ljmp
push
push
in
push
cmp
and
xor
jle
mov
sbb
adc
push
outsl
loopne
xchg
mov
xchg
push
dec
aam
lret
clc
xor
outsl
xchg
push
lahf
les
test
inc
push
call
flds
ret
fcmovbe
loope
dec
cmc
push
pop
hlt
inc
lretw
daa
arpl
push
ds
das
in
aad
mov
enter
movsb
fs
mov
ret
lahf
mov
pop
or
adc
popa
push
xor
pop
xchg
fwait
jg
test
jbe
pushf
ljmp
pop
and
xchg
push
cld
call
dec
fwait
xor
mov
or
xlat
dec
ret
lods
les
push
sbb
or
out
jecxz
or
add
lea
pop
sti
add
cmp
rcrl
leave
adc
pop
lds
cmpl
aad
adc
vmovss
mov
inc
jg
jno
rcll
cmp
mov
repnz
xchg
xchg
jg
mov
dec
inc
fs
adc
dec
aas
lret
jnp
mov
sti
shlb
loop
hlt
test
or
out
mov
popa
add
push
enter
inc
mov
inc
push
fwait
out
push
push
lcall
pop
inc
mull
jae
jmp
loop
sbb
mov
push
inc
jp
fisttpl
lods
lret
adc
mov
imul
movsl
adc
inc
xor
out
xlat
dec
pop
fld
ds
mov
inc
je
fnstsw
fbld
adc
movsl
sub
addr16
sub
dec
cmp
call
mov
mov
jns
jo
sti
outsl
xor
mov
mov
xlat
ja
mov
loope
jnp
loopw
rorb
mov
cmc
mov
cmp
mov
inc
push
jp
sub
cmp
imul
add
mov
mov
jle
divl
mov
repnz
cmp
mov
bound
add
sbb
jne
pop
outsl
push
mov
rorl
cmpsl
push
int
fnstenv
jg
inc
mov
mov
inc
or
inc
into
movsb
dec
icebp
icebp
div
push
movsb
lock
out
xor
add
xchg
push
repnz
fbld
gs
cwtl
pop
sbb
mov
adc
aas
loope
jecxz
addb
cwtl
xchg
push
test
or
aaa
imul
in
icebp
jae
leave
mov
leavew
jns
in
cmpsl
rcrl
xchg
adc
add
pop
xchg
push
cwtl
add
mov
push
outsb
lret
int
in
jno
add
cli
ljmp
jne
or
ds
hlt
icebp
xchg
cmp
mov
dec
lods
xchg
daa
cmp
xchg
push
cs
mov
rol
sub
test
in
aaa
int
mov
sbb
mov
add
or
bnd
cmp
dec
pop
subb
icebp
push
int
jnp
ficomps
imul
push
xor
cmp
mov
push
mov
push
push
insl
movsl
fs
and
jnp
scas
dec
lcall
xchg
inc
sti
mov
xchg
sbb
jmp
sbb
cmc
jecxz
subl
dec
inc
outsl
loope
sahf
movsb
sbb
add
leave
aad
dec
cmp
dec
lods
inc
cli
jg
pop
add
jecxz
cmc
cmp
sbb
stc
xchg
neg
adc
and
xchg
jno
test
pop
jmp
adc
pop
inc
lea
jecxz
decl
repz
inc
cmp
inc
or
xor
out
jmp
ds
sbb
cmp
jmp
fimull
je
sbb
insl
div
and
mov
sahf
fsubp
dec
push
test
push
or
out
int3
fsubrs
lock
out
outsl
outsb
fnstcw
shll
mov
movsl
cmpsb
cmc
xchg
rcrb
lock
or
das
dec
cwtl
mov
ret
icebp
sti
sbb
clc
test
pop
mov
cltd
lcall
push
imul
aad
clc
and
shlb
sub
mov
jae
xor
lcall
pop
loope
daa
loopne
mov
scas
mov
pop
pushf
push
jle
and
jge
mov
dec
sbb
sub
mov
adc
and
gs
jle
aam
or
int
aaa
ljmp
gs
test
pop
mov
mov
jg
ret
jbe
call
cli
jl
in
add
mov
inc
ficompl
ret
movsb
cmp
cmpsb
or
in
and
inc
das
rolb
cltd
jae
pop
cmc
mov
sbb
jle
ds
sahf
inc
mov
mov
adc
pop
adc
pushl
jo
push
cmp
lea
push
dec
enter
pusha
data16
mov
pop
hlt
pop
int3
push
mov
jmp
hlt
pusha
cmp
dec
or
mov
shrl
iret
sarl
inc
mov
jns
cmp
and
cmp
cmp
outsl
xor
lcall
int3
cs
sbb
hlt
push
jecxz
ret
adc
sub
add
cmp
xchg
hlt
jge
sub
aas
rorb
dec
xor
clc
xchg
push
jo
ret
cmovg
mov
push
in
es
cmp
push
roll
mov
loopne
dec
cmpsl
push
loopne
lds
lock
sbb
lods
inc
fs
fadd
fidivrs
sbb
les
inc
jae
mov
lret
int3
push
clc
data16
dec
pusha
pop
mov
ffree
dec
xchg
push
arpl
dec
leave
cltd
xchg
xchg
and
mov
jne
dec
xchg
jno
xchg
sub
js
call
std
adc
imul
leave
movsl
ret
cmp
fnstsw
ds
repz
cmp
xchg
inc
cmova
arpl
lds
mov
sub
testb
inc
bound
xorb
movsl
cwtl
icebp
dec
push
rolb
fwait
xchg
adc
xchg
jmp
dec
pusha
gs
inc
jl
loop
insb
in
jecxz
sbbl
push
xor
mov
mov
arpl
push
or
cmp
outsb
outsl
lds
cmp
ss
stc
dec
sbb
mov
add
add
call
lods
push
pop
pop
jb
sbb
sbb
cmpsb
outsl
sar
gs
outsl
leave
jge
push
notb
inc
add
fnstenv
push
push
and
add
ficoml
mov
addl
sarb
mov
push
dec
cmp
movl
test
fsubrs
cld
dec
ss
daa
in
mov
add
pop
out
add
scas
and
jo
out
out
data16
rolb
push
fsubl
mov
pushf
cwtl
inc
push
or
subb
outsl
xor
mov
adc
pop
or
mov
aas
mov
popa
arpl
call
sbb
mov
ljmp
xlat
mov
ja
fstpt
cmp
jb
insl
pop
push
lods
mov
mov
xor
insl
loopne
add
shll
or
movsl
xchg
out
mov
mov
mov
sub
or
xchg
cltd
movsb
ret
fucomi
movsl
sbb
push
iret
sbb
loopne
dec
cmc
dec
cld
inc
out
cmpsb
sub
std
sub
ret
out
push
loopne
int3
popa
pop
movswl
mov
mov
push
leave
ret
mov
and
and
and
mov
xor
jle
dec
push
or
adc
negl
roll
std
cmpsb
xor
dec
in
cmc
mov
inc
dec
xchg
cmc
movsl
into
fiaddl
mov
add
cmp
push
cld
cwtl
les
pop
cli
gs
fidivs
shl
xchg
xlat
sub
in
dec
fcom
gs
sahf
mov
aam
in
and
pushl
and
xchg
aad
pop
adc
push
adc
lahf
pusha
test
push
push
adc
dec
xchg
test
push
in
cwtl
movsb
loope
andl
cmp
hlt
rorl
je
sbb
cmp
icebp
aaa
je
loop
push
mov
pop
adc
jl
xchg
jp
hlt
sbb
adcl
repnz
push
popf
int3
leave
mov
add
cld
sti
mov
dec
in
iret
stos
mov
stc
adc
inc
stc
lods
sub
add
add
popl
cmp
xor
or
xchg
leave
gs
dec
inc
dec
xchg
popf
imul
mov
icebp
shrb
loopne
int
test
jmp
shr
dec
or
fidivl
mov
cmp
clc
rol
add
leave
scas
call
sbb
mov
inc
jge
add
inc
cmp
out
pop
push
test
inc
jp
xchg
and
cmp
push
lret
mov
mov
push
into
push
insb
adc
or
stos
push
mov
ret
adc
loop
clc
stos
jle
in
pop
mov
fidivs
pushf
adc
scas
inc
adc
leave
add
mov
icebp
sbb
add
shll
dec
mov
lret
out
mov
pusha
aad
jb
dec
icebp
xlat
loopne
cs
lret
andl
inc
pushf
repz
mov
dec
stos
pop
mov
loopne
fwait
xor
addl
call
cmp
scas
sbb
pop
xlat
inc
outsb
and
movsl
xchg
iret
sub
xor
xchg
jne
pop
sub
mov
sub
insb
or
jns
outsl
sbb
push
loop
pop
inc
outsb
call
shll
add
adc
dec
sbb
cltd
xor
out
jge
adc
jnp
in
aad
push
mov
push
pusha
cmp
and
lcall
lcall
std
xor
popa
sub
sub
cmpsl
and
out
into
mov
adc
adc
dec
fsubrp
lahf
mov
or
mov
in
adc
dec
jge
arpl
clc
int
mov
pop
repz
dec
sbb
push
enter
shlb
fisubl
iret
popa
dec
fdivl
pusha
sub
fmul
xchg
pushf
jne
nop
and
jb
adc
inc
cmpsl
or
xchg
sub
aas
xor
sub
mov
dec
sub
outsb
pop
jbe
mov
lret
adc
mov
inc
test
rcrl
shl
sti
and
and
jne
je
pop
push
cmp
mov
mull
sub
ja
xchg
scas
and
mov
mov
mov
dec
push
mov
dec
xchg
les
add
rolb
dec
fdivs
jecxz
lret
test
popf
cmpsl
and
xor
pop
pop
scas
dec
rcrl
or
jae
addb
push
sub
ret
es
jb
dec
scas
outsl
push
xchg
dec
mov
clc
cltd
xor
adc
in
pop
jecxz
bound
fcoms
xchg
ss
add
or
popf
daa
popa
stc
pop
into
mov
daa
inc
sti
mov
mov
mov
lds
enter
leave
jle
inc
mov
aaa
xor
int3
mov
xor
out
mov
inc
inc
repnz
lcall
and
cli
cltd
jmp
sbb
neg
push
sarl
pop
cwtl
jl
sbb
roll
jb
cltd
ret
outsb
ret
sub
insb
sbb
cmp
push
xchg
fldt
fiaddl
addr16
push
mov
loop
pusha
sub
or
jne
mov
ret
pop
push
inc
jno
cmp
lret
and
pop
mov
mov
and
pop
loope
mov
cmpsb
xchg
fwait
shrb
ljmp
jnp
jnp
pop
push
pop
out
pop
push
or
outsl
roll
push
data16
enter
jae
add
into
outsb
stc
sub
inc
dec
das
dec
test
jecxz
pop
ss
mov
flds
cmp
and
into
push
add
and
shlb
sahf
mov
adc
add
divl
andb
mov
mov
pop
gs
cmp
loop
lahf
sbb
scas
adc
or
test
push
int3
cmp
shll
outsl
push
cmp
test
xchg
arpl
insb
cwtl
xor
pop
xchg
test
data16
sub
push
lods
movsl
outsb
add
imul
inc
int
sub
jmp
cmp
in
xchg
jecxz
loop
add
sub
ret
jo
js
add
scas
mov
shrl
sub
inc
mov
adc
add
xchg
add
icebp
cmp
and
idivl
xor
cltd
mov
movsl
dec
fstpt
sbb
push
cs
pop
aam
xor
sub
xchg
cld
pop
pop
fbld
inc
mov
inc
sbb
cmp
sbb
test
fnsave
notb
sub
cmc
lds
xor
inc
icebp
lret
mov
add
and
in
jno
cmp
cld
and
add
push
inc
clc
pop
fcoml
mov
in
mov
gs
sub
jns
jge
pop
push
clc
mov
jg
stc
cmp
imul
inc
xchg
dec
jnp
testl
dec
test
xor
aaa
cwtl
es
inc
sub
xor
roll
mov
adc
fiaddl
and
push
jae
mov
cwtl
cltd
cmp
xor
test
mov
iret
sbb
xchg
loope
into
imul
sbb
mov
inc
sub
sbbl
adc
fld
ret
push
hlt
sub
cmp
and
inc
jmp
mov
stos
lahf
and
cmp
cmp
xchg
jmp
push
add
in
push
mov
sub
adc
mov
mov
inc
xor
out
mov
and
cld
xchg
dec
lahf
push
push
sbbb
imulb
inc
adcb
xchg
pop
repz
sub
idivb
test
sbb
add
inc
cld
clc
imulb
inc
inc
sti
jbe
push
daa
mov
insb
jno
inc
mov
xor
pop
stos
cwtl
inc
loopne
movsl
pop
push
cmp
test
add
fstps
test
lds
inc
daa
test
pop
lods
jne
fsts
into
xor
lock
sbb
shll
movsb
stos
mov
sbb
cmc
lahf
push
das
dec
idivl
inc
push
inc
push
test
lds
out
pop
sub
iret
loope
inc
mov
stos
or
sbb
pop
fistpll
lcall
inc
jmp
sbb
mov
and
les
pop
mov
movsl
xchg
or
and
into
mov
test
mov
insb
pop
in
ja
fnstenv
push
add
test
mov
jg
repz
sahf
push
jecxz
int
rcrb
fnstsw
stos
sub
or
stos
xchg
push
xchg
fcoml
rcrb
ret
rcrb
xor
mov
sub
test
nop
dec
outsb
xchg
mov
fldl
adc
pop
lods
lret
loope
inc
push
int
push
adc
mov
jae
stos
add
mov
sbb
stos
fs
cld
sbb
mov
push
inc
stc
cmp
sahf
inc
jb
je
fcoms
mov
pop
mov
add
push
sub
and
push
test
mov
insb
loope
loopne
test
fldenv
test
inc
xchg
and
mov
mov
cli
sbb
negb
daa
cmpsl
insb
scas
mov
xchg
jle
ret
repz
push
arpl
add
sti
jb
mov
ret
mov
dec
aad
jbe
push
push
inc
lods
dec
jp
xchg
or
lcall
mov
push
clc
dec
add
movsl
and
test
push
xchg
mov
lea
or
pop
push
addb
dec
dec
cli
jmp
sti
xchg
dec
inc
pushf
ret
pusha
cs
mov
mov
xchg
cmp
inc
daa
test
push
mov
aad
mov
xlat
or
stos
in
push
loopne
and
dec
movsb
mov
lcall
cmp
xor
scas
loop
in
cmpsl
xchg
mov
inc
lea
jmp
jp
insl
jecxz,pt
stos
push
icebp
push
inc
cs
cmp
xchg
pop
outsb
lahf
xor
cmp
ret
imul
movsl
mov
push
sub
pop
pop
sub
fs
lcall
fimuls
or
gs
add
imul
fadds
adc
stos
xchg
or
add
and
pop
popf
ljmp
sub
mov
js
and
mov
bound
dec
xchg
lds
jge
lock
pop
dec
divl
aas
aas
pop
sti
xor
dec
sub
enter
push
lcall
adc
stc
jl
dec
mov
and
push
inc
jo
jecxz
push
xorb
outsl
in
lock
push
in
jnp
jae
pop
xor
jmp
lret
inc
xchg
jb
filds
cmc
mov
mov
je
xchg
sbb
scas
cld
xor
jno
sbb
js
insb
imul
push
xor
dec
mov
mov
and
cld
mov
in
add
jbe
popa
sti
popa
sub
push
dec
or
subb
les
add
inc
stos
dec
add
pop
add
mov
mulb
mov
cli
and
in
cs
insl
adc
pop
ja
dec
mov
cltd
fcompl
mov
movsb
shlb
inc
pop
sbb
cltd
add
adc
jge
aas
jg
icebp
xchg
inc
fwait
jo
xor
sub
sti
nop
enter
int3
pop
mov
xchg
rcrb
or
fildll
cmp
pusha
pop
and
cmp
adc
sbb
mov
inc
mov
cmp
sbb
repnz
xchg
push
outsb
jbe
shlb
ljmp
jne
mov
push
rorb
fidivrs
test
add
mov
cmc
cmpsb
fimull
das
fwait
adc
pop
cmp
scas
in
mov
js
mov
loope
mov
inc
inc
cli
jae
inc
fwait
jns
mov
cld
out
fstps
adc
repz
subl
fistps
daa
lods
mov
mov
pop
sti
sti
in
fiaddl
xchg
inc
mov
push
scas
clc
cmp
fstpt
jbe
xlat
push
mov
xchg
push
sub
pop
jns
mov
push
rcll
stos
hlt
les
push
mov
inc
enter
lcall
fadd
ret
leave
ds
fimuls
loope
test
je
xlat
mov
and
out
cltd
pop
mov
ja
lret
xor
mov
fistpll
lahf
lret
shr
pushf
xchg
out
push
mov
jbe
pop
imul
sub
mov
daa
cltd
leave
mov
xor
popa
nop
rorl
jbe
gs
out
or
mov
sbb
icebp
hlt
dec
inc
or
xchg
pop
call
stc
pop
xchg
or
mov
pop
test
mov
mov
jmp
mov
push
cmp
popa
loope
or
aam
inc
push
mov
cmc
mov
loope
out
shll
mov
xor
sbbl
and
and
gs
inc
sbb
jg
and
push
mov
lods
insb
add
mov
jnp
mov
int3
scas
loopne
inc
mov
lret
lea
add
cmc
push
sub
adcl
xchg
mov
imul
add
iret
mov
arpl
or
xchg
sbb
push
and
mov
ds
pop
jg
sub
leave
push
mov
lds
popf
jns
mov
or
xchg
adc
fildl
pop
sbb
mov
push
push
dec
mov
jl
jbe
add
testb
xchg
mov
gs
mov
iret
sbb
mov
add
aas
pop
mov
movsb
xchg
adcl
fdiv
mov
in
jge
cmpsb
outsb
lds
add
popa
gs
sbb
mov
jmp
insl
icebp
sarl
inc
lods
pop
cmc
jl
aas
mov
stos
dec
daa
out
jae
adc
xchg
test
mov
dec
insb
cmp
pop
stos
loop
daa
leave
outsb
fmull
mov
mov
imul
aaa
pop
fs
mov
xor
addr16
loop
jle
lcall
in
mov
pop
mov
popf
sbb
outsb
adc
mov
jmp
jg
adcb
xchg
and
add
mov
out
fcomps
xor
pop
mov
add
and
xchg
inc
cmpsb
icebp
and
clc
jle
push
test
jmp
jbe
push
stc
sbb
inc
mov
mov
add
and
or
test
lods
jmp
js
addb
enter
jno
popf
in
cmp
mov
jae
add
jecxz
into
push
push
scas
dec
mov
jb
dec
pop
xor
pop
cmp
and
test
xchg
cwtl
dec
lods
pop
jbe
lods
push
out
push
mov
in
js
xlat
and
nop
sti
lret
std
mov
data16
in
xchg
or
into
daa
gs
cmp
je
push
or
mov
lods
xor
sbb
mov
cmpsl
arpl
push
pop
lds
dec
stc
pushf
or
add
and
xchg
sub
sub
mov
addb
mov
pop
adc
xor
pinsrw
mov
cmc
fidivrs
mov
adc
ljmp
push
adc
idivb
daa
inc
outsl
sub
ss
jl
xor
rorb
mov
shl
add
ja
fnsave
mov
xchg
mov
xchg
ja
fcomps
sti
adc
and
lods
and
sub
insl
arpl
lea
inc
mov
or
repz
pop
jl
popa
pushf
repnz
mov
enter
and
negb
cs
movsb
dec
inc
mov
jns
pop
lahf
ret
inc
dec
jbe
cli
pusha
adc
add
jp
fwait
lcall
adc
pop
popa
negl
stos
jl
mov
jl
call
ret
cmp
jns
push
icebp
pop
test
add
aam
dec
arpl
aas
faddl
xchg
rcl
popa
js
nop
adc
cmp
fucomi
xchg
or
pop
jae
cmpsb
in
arpl
dec
mov
cmpsl
mov
arpl
icebp
inc
mov
mov
clc
xor
push
xor
cmp
out
mov
sub
dec
lods
or
mov
test
inc
sbb
lret
arpl
adc
push
mov
xchg
adc
lsl
push
jno
je
pusha
aaa
and
xchg
lret
nop
lock
decl
pop
nop
popa
or
mov
add
inc
jns
mov
push
scas
or
pop
fcomps
xchg
xlat
shr
aam
sbb
dec
push
sbb
mov
add
cltd
mov
pop
push
int3
jle
sbb
addr16
sbb
push
js
imul
pop
stos
into
sbb
dec
mov
jbe
and
popa
sub
roll
adc
bound
aas
sub
push
push
adc
cld
mov
cmp
out
sbbl
mov
or
jl
pop
cltd
mov
push
sbb
sbb
push
dec
inc
insl
and
jbe
shrb
jae
or
inc
jbe
mov
fnsave
daa
je
jnp
pop
add
sbb
sub
jns
xchg
pop
dec
cmp
add
repnz
into
mov
out
sahf
lods
int3
arpl
mov
mov
dec
mov
fadd
mov
xchg
lcall
in
adc
push
adc
pop
gs
adc
xchg
adc
lcall
movsb
jecxz
repnz
rcrl
stos
jle
cs
add
bound
inc
pop
dec
clc
add
xlat
lahf
xor
jne
loop
lock
fstl
imull
out
aad
das
mov
movsl
ss
fs
mov
inc
movsl
or
test
popf
loopne
mov
cmpsb
addr16
aas
push
leave
sti
xchg
inc
add
push
cmp
xchg
ret
mov
notl
loop
and
inc
int
cld
test
sub
mov
jg
jmp
adc
iret
mov
pushf
mov
pop
sbb
fisubrs
cmpsl
pop
test
imul
mov
and
xchg
jmp
mov
push
jl
in
nop
daa
sub
stos
jecxz
push
jnp
push
cmp
cmp
push
jl
les
jecxz
mov
pusha
cld
sub
int
sub
sarb
mov
cwtl
cmp
test
mov
cld
and
stos
adcl
push
hlt
cmp
dec
adc
and
mov
std
divl
xchg
or
xor
sbb
andl
adc
mov
jo
inc
add
movzbl
int3
add
int3
arpl
in
div
xchg
cld
aas
dec
inc
xchg
and
xchg
pop
xchg
cmp
xor
fmull
iret
mov
negb
mov
mov
and
sbb
sar
jb
xor
mov
enter
mov
aas
or
mov
and
in
adc
fxch
xchg
sbb
add
jae
adc
or
insl
imul
inc
or
push
ljmp
sbb
dec
cmp
ret
jecxz
repz
dec
jecxz
into
add
mov
cmp
das
mov
and
mov
lock
jae
push
mov
lods
xchg
or
jns
mov
test
in
xchg
add
enter
out
sub
aas
xchg
sahf
cli
inc
push
insl
imul
test
dec
xchg
adc
fisubl
inc
lods
cmc
in
insl
iret
insb
fsubrl
out
mov
push
mov
jbe
clc
fidivl
outsl
inc
je
loope
lret
aad
dec
ds
mulb
pop
xchg
sarb
out
sub
mov
adc
aam
shrl
add
addl
inc
cmp
out
imul
adc
call
je
stc
inc
xchg
nop
and
aaa
dec
into
add
add
push
mov
mov
out
loope
outsl
pop
mov
push
pop
xchg
mov
sub
xchg
in
xor
mov
cmovs
lret
lgs
roll
rcrl
test
iret
cmp
mov
mov
mov
and
shll
push
jle
lock
jp
divb
or
mov
jb
adc
std
clc
pop
inc
jno
xor
adc
jns
ja
jns
or
popa
inc
popa
jl
into
pushl
or
sub
pop
insb
into
faddl
das
adc
jo
mov
fwait
js
dec
push
and
mov
add
push
add
push
gs
mov
lds
jno
and
clc
push
incl
imul
adc
jne
cmc
insl
push
xlat
arpl
iret
inc
movsb
mov
or
call
scas
leave
or
mov
cs
aam
loopne
ror
mov
inc
loope
push
outsl
and
pushf
inc
dec
cltd
mov
push
mov
sub
dec
shrl
mov
mov
adc
lock
or
mov
jg
adc
fmul
test
movsb
mov
cmp
adc
test
mov
out
ficoms
sub
rcl
cmp
mov
lock
add
jmp
cld
push
scas
arpl
add
leave
fwait
leave
jb
pop
xor
xchg
rorl
sbb
xor
push
mov
pop
or
jg
inc
std
sti
jg
mov
sbb
mov
xchg
sub
xchg
sub
test
xchg
mov
xchg
addr16
ds
pop
int
or
shl
sub
test
adc
scas
movsb
ds
push
xchg
icebp
mov
xchg
ss
les
push
inc
sbb
aas
cmp
ja
push
pop
ret
xchg
imul
push
lretw
dec
and
gs
fwait
cld
nop
in
das
andl
ljmp
adcb
lds
push
add
xchg
cmp
xchg
dec
xlat
rcl
enter
pop
sbb
out
cmpsb
inc
daa
jp
shrb
lock
or
hlt
int
sahf
pop
rolb
sub
cld
xor
sarb
cs
inc
sbb
or
fnstcw
add
mov
movsb
out
ret
cmp
scas
or
cli
popf
lret
gs
adc
sub
xchg
out
test
sbb
sbb
sbb
mov
cmp
inc
std
popa
sbb
push
or
orl
jns
dec
push
mov
pop
sbb
test
push
add
adc
setne
mov
add
adc
insb
jo
mov
pop
sbb
daa
mov
mov
mov
add
jo
sahf
and
inc
cltd
rcll
mov
mov
cld
dec
xchg
pslld
mov
scas
xor
jns
aam
addr16
pop
xchg
insl
cs
mov
shlb
xchg
pop
lock
adc
jns
push
sbb
mov
repz
pmaxsw
xor
aad
or
popf
sub
sub
add
mov
and
pop
adc
dec
inc
lret
faddl
or
out
sbb
js
mov
push
jae
dec
rcrb
or
jo
or
or
movsl
mov
decl
push
xor
or
int
push
bnd
pushf
adc
nop
push
sahf
inc
js
pop
inc
push
jmp
subl
jnp
stos
aam
xchg
or
sti
popa
add
jo
roll
je
xchg
inc
fbstp
pop
aas
jb
fwait
cltd
inc
stc
subl
adc
das
push
int3
fisttpll
dec
out
xorl
rorb
jns
in
dec
cld
push
or
out
inc
mov
leave
inc
insb
mov
push
ja
sub
xchg
jecxz
and
and
add
mov
jecxz
in
add
push
out
sbb
ljmp
xor
jge
xchg
popa
and
mov
cmp
xchg
dec
inc
or
and
pop
mov
cmc
push
into
inc
xchg
mov
out
cltd
mov
test
inc
push
lret
aad
jae
fwait
jg
fnstenv
xor
in
sbb
sahf
push
add
mov
lea
fimuls
aam
cli
push
inc
roll
leave
xchg
jno
add
das
sahf
inc
test
xchg
leave
dec
out
arpl
sub
and
out
outsb
mov
pusha
jl
xchg
sub
mov
pop
sbb
mov
in
stos
cwtl
movsb
fwait
ljmp
enter
lock
rol
xor
dec
das
xlat
jg
arpl
stc
stos
and
out
flds
in
pop
int3
js
repnz
rorb
adc
mov
pop
pop
mov
sbb
lcall
fs
flds
xchg
sarb
stc
imul
sar
sti
add
push
fadds
xchg
or
push
push
mov
arpl
out
pop
ficoms
jmp
int3
or
add
dec
mov
mov
pop
rclb
xchg
fs
lock
std
mov
jae
nop
out
xchg
jns
jp
hlt
jmp
dec
and
add
xchg
xchg
repnz
or
into
push
js
and
fsubrp
nop
cli
shlb
jge
sbb
add
mov
shll
xchg
add
xchg
les
or
addr16
pop
push
lods
jg
mov
out
shl
ret
push
dec
xchg
iret
push
xchg
jmp
cmpsb
jmp
cs
sub
test
nop
xor
sbb
xor
shrl
xor
loopne
xlat
lods
cmp
imul
ljmp
xchg
iret
sub
xor
lret
in
shlb
cld
adc
aaa
idivb
movsl
repz
ret
fwait
push
hlt
or
shll
scas
orb
test
mov
mov
xchg
test
push
dec
cmp
mov
aas
dec
jb
stc
mov
jo
dec
lods
out
xchg
adc
xor
or
jg
mov
scas
mov
mov
pusha
mov
adc
xchg
pusha
or
scas
add
fwait
push
sub
data16
lcall
ja
sub
cmpsl
xchg
cli
cmp
jae
loope
loope
jl
add
repz
mov
lea
cmpl
stc
lods
repnz
insb
arpl
mov
mov
adc
inc
mov
iret
xchg
cmp
sbb
xchg
pop
mov
or
ret
mov
scas
dec
mov
xor
pusha
mov
sbb
mov
test
in
add
dec
div
fcompl
xor
mov
mov
movsb
mov
fstpl
divl
stos
stc
xchg
dec
test
sbb
enter
inc
mov
sbb
push
sbb
jl
loopne
mov
sahf
pop
jo
repz
inc
cmp
or
shrb
sbb
adc
jbe
jge
pop
add
push
popa
mov
mov
rcrb
pusha
dec
sub
xor
fstps
loopne
and
call
xchg
mov
outsl
divl
or
sub
mov
adc
mov
loop
xlat
rol
loop
mov
cwtl
inc
mov
mov
aam
shll
stos
mov
inc
adc
lock
loop
enter
test
dec
sti
mov
xchg
dec
leave
sub
stc
es
adc
into
inc
push
in
mov
mov
pushf
lock
cli
aaa
jge
aam
mov
pop
xor
sbb
xorb
add
dec
or
cmpsb
cmpsl
sub
imulb
shll
daa
js
mov
and
nop
push
pop
and
arpl
cmc
mov
roll
lret
jg
mov
in
cmpsb
add
ljmp
xchg
mov
adc
inc
test
cmp
inc
fsubrl
addr16
adc
cld
sbb
mov
aam
pop
and
inc
and
enter
push
xchg
or
jb
in
repz
sar
out
mov
cmp
jmp
and
loop
mov
adc
jb
jns
in
outsb
mov
and
and
pushf
imul
movzwl
movsl
push
aas
cmp
push
loopne
lds
stos
cmpsl
sahf
lret
daa
test
xchg
out
lods
xor
dec
arpl
call
mov
xchg
adc
push
mov
lcall
and
iret
hlt
int
sbb
push
mov
inc
inc
stos
jle
mov
sbb
inc
js
and
imul
xchg
lds
jecxz
es
cmp
mov
je
push
sub
sub
imul
clc
cmp
adc
sub
dec
and
in
sub
les
enter
inc
push
mov
fbld
inc
mov
std
loopne
xchg
adc
test
mov
stc
cmp
or
fldcw
dec
sub
adc
xchg
pop
lahf
adc
cwtl
das
in
xor
nop
popa
gs
push
in
push
mull
sbb
in
das
in
mov
mov
jmp
push
xchg
push
adc
xor
sbb
jge
call
jmp
mov
je
cltd
sbb
ret
repz
test
push
pusha
push
add
xchg
add
daa
lahf
xchg
pop
jns
and
push
ljmp
xor
push
dec
sbb
movsl
and
sbb
xor
test
stos
aas
mov
sbb
or
sbb
jle
sti
mov
mov
ja
enter
push
idivb
add
test
or
xorb
inc
sbb
push
mov
mov
daa
stos
mov
inc
mov
outsb
xor
pop
xor
xor
cmc
arpl
mov
sbb
sbb
rcrl
popf
pop
repnz
and
insl
js
popl
dec
dec
scas
sbb
leave
mov
mov
xor
mov
add
mov
sahf
call
lea
jl
or
orl
dec
push
pop
cmp
addr16
sbb
in
fsub
cltd
in
pop
je
sbb
testl
push
push
inc
test
push
dec
aam
pop
mov
je
loopne
jle
movl
vpminsw
lods
mov
div
ret
push
loope
sub
fistpl
xchg
jge
xor
pop
pop
inc
imul
jmp
or
fldcw
push
sub
mov
icebp
xorb
or
mov
enter
cmp
cmp
arpl
js
sbb
sbb
dec
fs
inc
inc
mov
das
inc
mov
mov
pop
mov
call
aad
add
and
jle
sbb
cld
add
mov
sbb
insl
mov
adc
lcall
adc
mov
adc
ds
jae
mov
data16
cld
dec
push
fcomip
inc
mov
xchg
mov
mov
jle
push
cmc
mov
dec
fwait
call
ss
sbb
sbb
gs
xor
dec
pushf
lock
xlat
inc
lahf
ljmp
adc
xorl
fsubrs
xor
mov
sbb
push
movsb
and
xor
scas
movsl
pusha
dec
push
lods
pop
push
mov
insl
sub
dec
loope
xor
and
flds
repnz
or
fwait
clc
fcomi
mov
mov
adc
or
pop
xchg
and
call
inc
sbb
jecxz
jle
aas
mov
xor
dec
dec
lea
ret
test
sub
in
fsubs
mov
inc
dec
icebp
adc
pop
jecxz
dec
push
mov
sahf
mov
sarl
arpl
mov
pusha
popa
clc
sbb
mov
outsl
scas
or
push
pop
leave
imul
insl
jecxz
dec
repz
dec
hlt
js
cltd
jbe
loop
pushf
xor
loop
ficoml
clc
pop
iret
mov
push
adc
pushf
out
xchg
or
cmp
push
dec
int
inc
je
fcmove
push
and
out
in
xor
js
out
pop
add
sahf
shl
push
jbe
das
dec
xchg
mov
daa
aaa
vmovddup
mov
mov
jl
push
push
fmulp
je
adc
repz
cltd
fldt
sub
jne
adc
sub
je
pop
mov
pusha
jmp
in
xchg
push
jmp
push
fidivs
fidivrl
push
mov
mov
dec
mov
je
sub
sarl
xchg
push
mov
inc
scas
sbb
xchg
sub
mov
std
jo
pop
ljmp
iret
jno
in
int
stc
test
aas
pop
movsb
sti
lahf
stos
adc
pop
dec
cmp
sub
adc
mov
pop
dec
add
lock
rorb
mov
fildl
adc
lock
push
xor
mov
addr16
or
ljmp
dec
lods
sahf
or
cmp
push
outsl
nop
pushf
jbe
movq
xchg
fisttpll
cmpsl
cwtl
je
lcall
inc
mov
movsb
in
imul
jns
mov
gs
dec
jne
lds
incl
dec
scas
xchg
loopne
jmp
bound
adc
andl
and
pop
add
jo
stc
fsubl
jne
les
jmp
push
int
cmpsl
mov
shll
adc
jns
ljmp
fistps
sti
shlb
pop
xor
imul
mov
mov
fdivs
gs
repnz
lret
jb
add
inc
decl
dec
std
push
sub
cmp
dec
jp
adc
ds
lret
and
inc
les
lock
sti
dec
outsl
jne
jnp
sti
pop
add
fcomi
inc
shll
mov
cmp
icebp
xor
sbb
or
push
and
xor
fwait
mov
insl
mov
push
cmp
shlb
hlt
test
loopne
sahf
cmp
xchg
repnz
sub
movsl
pop
xchg
inc
push
mov
dec
out
loopne
shl
xor
cmpsb
pop
push
cmp
cwtl
cwtl
stc
cmpb
loope
hlt
popf
fwait
test
add
inc
mov
div
sbb
fs
adc
test
ds
mov
xlat
xchg
jo
push
mov
sub
stos
sbb
dec
push
xor
push
je
lcall
ja
pop
mov
das
imul
fisttpll
inc
mov
ja
cmp
pop
lret
sub
mov
pop
leave
jnp
in
sbb
adc
jae
fwait
ss
dec
push
pop
icebp
adc
adc
jb
loopne
sbbl
movsb
sbb
lock
xlat
outsb
adc
push
push
fiadds
dec
pop
arpl
fmuls
test
cwtl
mov
aas
das
out
inc
mov
mov
pop
mov
adc
sbb
cmp
insb
jns
or
and
adc
xchg
adc
ret
xlat
or
cmpsb
push
iret
and
lock
ljmp
cltd
je
jge
cmp
and
xor
clc
ds
es
std
vaddsd
sbb
in
stos
push
push
push
ret
inc
or
mov
lret
dec
add
jp
movsl
daa
mov
push
addr16
cmc
stos
pop
push
add
and
cmpsl
xchg
dec
cmp
fwait
popf
outsb
jp
fsubr
jne
xchg
ret
insl
mov
lcall
sahf
lods
sub
sbb
js
ret
mov
push
pop
push
ds
imul
lret
sub
push
lea
jno
push
sbb
jb
add
sbb
lea
cli
call
outsb
arpl
sbb
xchg
das
cmp
aad
in
mov
xchg
cld
mov
repz
fldt
sub
loop
xchg
xchg
jbe
inc
pop
scas
sbb
out
negl
test
stc
or
mulb
pop
clc
test
mov
aaa
faddl
jne
xor
repz
sub
test
xor
or
mov
push
imul
popa
jno
jge
imul
sbbl
mov
in
cmpsl
or
push
leave
adc
fdiv
jecxz
daa
inc
in
aas
add
in
xor
mov
daa
outsb
push
cltd
or
fstpl
dec
inc
pop
bound
in
lcall
xchg
xor
sub
dec
jno
jno
inc
ljmp
xchg
out
or
push
orl
inc
adc
in
cmpb
adc
lcall
adc
repz
fmull
sub
in
adc
cmp
mov
lahf
dec
pusha
and
sbb
andl
test
xchg
cmp
and
popf
test
mov
data16
sub
push
xor
imul
es
ret
jg
add
mov
loop
rorb
push
lret
hlt
inc
inc
cmp
imul
lret
mov
mov
addr16
mov
mov
frstor
and
jae
dec
pop
mov
pop
cs
adc
clc
lcall
outsl
add
jp
js
test
adc
rcll
and
or
shrb
aas
add
jmp
mov
andl
fmull
inc
in
xlat
pop
daa
rorb
stos
ss
mov
fsts
add
loopne
fnstsw
jno
into
into
jecxz
cmc
iret
js
enter
addr16
cmp
stc
orl
fs
add
or
int
add
sbb
mov
jb
lods
or
subb
dec
aam
test
sub
sub
push
mov
addr16
cli
and
ljmp
lds
andb
jae
addl
aas
adc
jle
mov
pop
leave
xchg
repz
fldenv
mov
jbe
mov
dec
rclb
jmp
push
inc
rcll
lods
sub
imul
dec
ljmp
hlt
jp
or
sub
sbb
dec
mov
sub
adc
mov
rdmsr
mov
es
dec
addb
out
push
xchg
push
test
leave
shrl
xchg
jne
fistl
cmpl
stos
in
xchg
cmpsb
and
std
lods
mov
mov
sub
rorb
sub
loope
aas
mov
jecxz
lret
jl
into
aam
adc
sbb
or
and
xchg
mov
into
fwait
jne
in
les
or
and
testl
and
cltd
add
and
ljmp
lds
jno
add
lock
and
lock
push
popf
push
js
data16
xchg
int
adc
cmp
xchg
sub
mov
popa
test
cmpsl
dec
pop
ret
je
ds
out
push
sbb
hlt
fcomps
pusha
push
mov
gs
in
push
scas
xchg
loopne
lea
cmp
lret
pop
das
lock
jp
xchg
aas
cld
mull
out
mov
xor
push
sub
xchg
sub
sbb
xlat
cmpsb
mov
inc
in
ja
pop
xlat
gs
cltd
push
dec
pop
test
xchg
test
cmp
or
push
sbb
lret
aaa
lret
dec
iret
dec
test
xor
xchg
out
iret
cmp
out
and
stos
xchg
arpl
xorb
xor
loop
and
and
xchg
dec
mov
test
push
xchg
pop
imul
jmp
lods
lret
adc
ret
xchg
mov
mov
hlt
dec
int
mov
incb
out
aad
fimull
ljmp
dec
adc
hlt
lcall
xchg
repz
subb
mov
add
cld
and
in
in
cwtl
pop
mov
or
or
mov
add
sub
sub
inc
movsb
fdiv
xchg
push
inc
call
and
xor
cmpb
pop
clc
rol
shlb
push
cmp
add
push
push
insb
scas
loop
ret
jb
cld
js
xor
xor
adc
arpl
or
bound
lock
test
mov
dec
xchg
mov
fnstenv
pushf
js
xlat
dec
fidivl
inc
xchg
sub
xor
xor
int
ret
inc
js
sti
fs
jo
add
and
cli
ljmp
push
out
xchg
xor
cmp
aas
icebp
push
inc
push
inc
imul
iret
cwtl
pop
cli
sub
mov
mov
lods
lcall
cmp
cltd
cld
enter
fcmovnbe
test
push
cmp
out
and
pushf
aam
inc
and
andb
adc
jp
fs
stos
fmulp
dec
ss
lret
sbb
mov
mov
mov
orb
fs
mov
jle
movl
and
fnstsw
scas
sub
sub
stc
sahf
xchg
xchg
jecxz
enter
ljmp
aas
sub
adc
aas
movsl
mov
fisubl
mov
add
notb
repnz
inc
enter
add
orb
cmc
xchg
stc
lcallw
lods
shl
sbb
pop
sarl
cmc
push
test
test
mov
loopne
incl
inc
push
sub
pop
jno
sbb
pusha
clc
cmp
or
aam
jb
cld
push
mov
push
pop
xor
sub
adc
jp
es
sub
push
adc
emms
jmp
push
jne
dec
das
sbb
add
push
pop
inc
xchg
scas
in
and
jae
es
adc
mov
push
lret
push
push
dec
aas
lock
xchg
mov
xchg
dec
ror
iret
mov
out
cmpb
xlat
pop
pop
or
xchg
mov
xorb
jno
and
cmp
jns
jmp
adc
push
cmp
cmp
sarb
les
je
pop
shlb
or
cld
rcl
int
dec
test
sbb
scas
scas
int
dec
data16
xor
scas
jne
ja
push
xor
in
ds
pushf
mov
cld
imul
cmp
int3
lret
pop
frstor
jmp
data16
popf
cmp
or
jmp
sti
pop
inc
sahf
and
xchg
int
sbb
push
enter
pop
adc
mov
ret
push
mov
push
and
pusha
fs
arpl
mov
and
jecxz
enter
push
dec
out
mov
or
pusha
inc
push
or
mov
ljmp
sbb
fnsave
mov
adc
imul
lods
inc
outsb
frstor
fnstenv
pop
push
inc
mov
imul
mov
mov
inc
mov
ljmp
mov
sub
jnp
mov
pop
call
and
cmp
mov
or
testl
cmpsb
mov
sbb
out
loop
fdivs
call
pushf
in
pop
xchg
cwtl
fldt
ficoms
xchg
nop
sbb
stos
xchg
lock
sbb
cmpsb
xchg
mov
mov
sub
fldcw
into
imull
outsb
sahf
iret
add
xchg
jmp
fstp
jp
cmp
adc
sub
xchg
loop
or
sub
in
sub
stc
stos
insl
lcall
out
pop
ja
push
rcrl
and
test
inc
test
add
lock
mov
mov
cmp
int
lahf
lcall
popf
jecxz
inc
clc
cmp
push
push
mov
jnp
mov
negb
xor
mov
mov
jle
pop
jne
sbb
test
xchg
mov
inc
insl
cli
negl
js
popf
and
pop
xor
sub
sbbb
and
xchg
insb
push
jo
sbb
icebp
scas
lret
shl
insl
xchg
jle
mov
fcmovu
sub
add
xchg
adc
fcompl
jg
inc
xchg
sbb
mov
imul
pop
mov
mov
mov
mov
jbe
jae
test
push
or
faddl
insb
sub
push
sbb
cld
push
jae
in
dec
cmpsl
pop
test
addb
clc
fiadds
mov
mov
push
mov
hlt
xchg
mov
lods
inc
into
jo
mov
mov
mul
xchg
add
lods
mov
sbb
jbe
lret
xchg
outsb
ds
sahf
mov
scas
sub
push
push
inc
insl
cmp
cmp
mov
push
mov
dec
cmpsb
mov
pop
sub
ret
inc
or
jae
divl
sub
lret
sbb
mov
sub
xor
stos
adc
lret
enter
or
inc
call
rcr
enter
sub
jne
dec
mov
push
sti
jb
js
ret
lods
sub
clc
sbb
lds
int
mov
insb
mov
jne
scas
dec
inc
into
xor
mov
mov
in
ljmp
cmp
jecxz
cmp
daa
scas
jl
fdivr
pop
push
dec
jns
test
or
pop
sub
clc
stos
sbb
pushl
adc
jno
mov
iret
repz
cmpsl
jg
or
mov
icebp
pop
mov
dec
jecxz
inc
iret
dec
dec
cmc
dec
jle
imul
adc
fs
call
pop
hlt
aad
mov
adc
inc
push
inc
dec
ficompl
mov
jae
out
dec
mov
cmp
out
dec
cmp
pop
rorb
xchg
jl
outsb
cmp
pop
inc
in
mov
pop
dec
arpl
inc
je
push
popa
jne
inc
bound
ljmp
cmp
adc
sub
mov
cmp
add
loop
mov
dec
popf
inc
push
mov
repz
das
sub
and
into
add
lret
adc
mov
es
pop
or
mov
inc
pop
sub
mov
inc
jno
insl
scas
inc
add
ljmp
add
cmpsb
vpshuflw
add
rol
out
mov
mov
pushf
cmp
dec
inc
sbb
or
clc
inc
pop
mov
xchg
xor
mov
xchg
fistpl
int
insb
mov
mov
cmc
out
cmpsl
lcall
push
pushf
inc
lods
test
mov
xchg
mov
in
lods
ret
sub
jle
xchg
bound
jno
std
mov
fadds
ret
cmp
adc
insl
stos
inc
fisubl
cmpb
and
test
fildll
popf
repnz
repnz
mov
rcll
insl
jae
mov
out
in
pop
inc
testl
push
movsl
dec
xchg
icebp
mov
enter
mov
xor
icebp
or
ss
fnstenv
out
cli
jecxz
cmp
sbb
or
inc
and
cltd
stos
pop
out
pop
imul
sub
jbe
cmp
outsl
ljmp
mov
sub
int
js
push
inc
stc
popa
and
pop
and
fbstp
adc
ret
fwait
je
ja
mov
mov
and
push
push
outsb
cltd
icebp
jge
loope
aas
cs
xor
add
scas
dec
jae
pushf
mov
fildl
stos
cmp
dec
fistpll
add
fstpt
btr
dec
add
and
xchg
pusha
sarb
test
inc
mov
inc
loope
mov
rcrb
stos
and
imul
fsubs
in
push
imul
pop
cmp
dec
popf
sbb
pop
adc
bound
xor
xor
in
ds
nop
fisubl
dec
pop
mov
push
rcl
adc
push
jmp
imul
fcmovb
xchg
ja
cmpb
and
push
pop
aam
or
push
mul
ds
inc
imul
in
push
les
push
or
sub
sbb
fldenv
sbb
push
or
clc
sbb
dec
adc
sbb
lcall
movsl
mov
or
fidivl
and
ljmp
xchg
loope
cmp
pop
sbb
add
xor
mov
sub
gs
mov
xor
jns
pop
loope
and
cltd
or
repz
pop
inc
lods
mov
cmpsl
dec
ds
fcom
test
xor
movsl
dec
and
ret
int
lahf
add
andb
xor
mov
jae
jb
adc
xor
push
jae
leave
insb
adc
pop
xor
jbe
or
pushf
sub
out
out
inc
pop
out
test
cmp
jno
out
adc
popf
dec
test
stos
fsubrl
movsl
mov
jle
inc
sbb
and
andl
out
push
sbb
cmp
test
sti
sub
jns
lret
push
mov
out
cmp
insl
sub
add
ljmp
test
mov
pop
xor
sbb
hlt
aaa
mov
inc
in
je
dec
insb
into
xchg
in
je
lcall
fnsave
fnstcw
mov
xchg
pop
jg
rcrb
std
dec
xor
or
push
lahf
jge
mov
outsl
lods
adc
xor
das
aad
mov
push
andb
jnp
je
xor
xchg
ss
dec
sbb
repnz
js
ret
jnp
pop
cmp
ret
push
cmp
rcl
sbb
aas
xlat
mov
pop
or
mov
popf
mov
ja
mov
cmp
lds
inc
xchg
testl
sub
mov
ja
shll
popf
cmpb
inc
jg
jo
fwait
xor
fisubrs
mov
mov
sub
push
add
adc
ret
sbb
sub
das
outsb
and
lcall
push
dec
pop
add
aad
push
ljmp
mov
push
lahf
jns
xor
add
sahf
xor
sbb
mov
mov
and
das
mov
lret
push
add
test
xchg
adc
cs
xchg
outsb
dec
mov
and
lods
xchg
push
leave
xor
loop
jle
js
mov
pop
xor
stos
enter
inc
ds
sbb
mov
ret
xchg
push
inc
mov
jo
cld
cs
and
or
lret
jg
sahf
sub
stos
rcll
divl
xor
inc
stc
insb
xchg
cmp
adc
dec
sti
jmp
bound
jbe,pn
cmpsl
insl
mov
in
mov
pushf
jle
mov
push
push
pop
and
mov
jge
cmp
xor
pop
adc
lahf
das
sbbb
xchg
adcb
push
sarl
les
adc
push
ds
or
mov
scas
and
imul
call
jg
adc
sbb
mov
cs
cli
and
imul
lods
adc
mov
mov
mov
loopne
enter
outsl
inc
test
add
sti
mov
and
fidivrs
das
push
cmp
js
push
movsb
data16
scas
mov
loop
repnz
sbb
pop
clc
sbb
dec
out
data16
jnp
sbb
fsubrs
jecxz
push
jbe
ret
xchg
pmulhuw
test
jns
mov
imul
or
orb
mov
fs
ja
outsb
mov
pop
sbb
mov
loop
aad
dec
adc
fstp
sbb
pop
aad
pushf
lods
adc
inc
adc
stos
shlb
jns
imul
jge
sbb
sahf
xchg
or
mov
sbb
loope
scas
push
popf
int
cmc
aaa
push
mov
xor
mov
in
aad
mov
xchg
sarl
jge
mov
mov
loopne
pop
push
fs
or
mov
scas
and
xor
test
rcrb
adc
imul
test
pop
jecxz
pop
repnz
xor
lods
lds
mov
push
cltd
push
pop
jp
repnz
xchg
mov
mov
popa
cli
xchg
mov
add
xchg
test
and
insb
inc
out
push
ret
std
lea
pushf
xchg
add
lea
insl
lods
subb
pop
dec
cmpsb
adc
adc
popf
in
adc
jp
jecxz
cmpsl
mov
dec
jecxz
stc
adc
mov
push
lret
fisttps
inc
or
push
test
cmpsl
cltd
neg
jg
push
repnz
sub
stc
or
fwait
bound
lock
sub
pop
inc
cmp
push
popa
cli
ja
mov
lods
repnz
sbb
dec
testl
jnp
cmpsl
stos
xchg
enter
fcoms
inc
movsl
lret
add
lock
mov
out
pop
mov
insl
fcompl
pop
push
jge
mov
xchg
stc
arpl
pusha
mov
pusha
xchg
xor
jae
lock
shrb
sahf
lcall
jle
push
xchg
ja
jmp
cmp
fldl
push
pop
icebp
sub
lret
testb
ficoms
subl
cwtl
xor
in
shll
dec
jnp
popf
inc
pop
sti
fwait
test
jo
rorl
add
xchg
test
cmp
add
or
xor
push
xchg
movsb
enter
lods
push
jae
insb
add
sbb
sti
shlb
icebp
ja
mov
cmp
mov
rcrb
lds
cmp
mov
mov
adc
sbb
adc
mov
rclb
sub
inc
xchg
mov
xor
icebp
outsl
dec
repnz
mov
sarl
ds
ds
add
cmp
mov
in
push
sbb
add
inc
pop
loopne
or
cmp
sub
pop
fs
ud0
mov
adc
pushf
mov
cmc
jecxz
movsl
js
test
rol
xorl
push
test
pushf
bound
add
int3
shrl
mov
mov
lcall
sbb
mov
jae
adc
fisubs
into
push
test
insl
pop
icebp
mov
jo
stos
dec
arpl
js
jp
into
cmpsb
pusha
jmp
inc
xor
mov
aam
shr
mov
dec
xchg
and
mov
in
mov
and
jae
gs
push
pop
je
cmp
sahf
sub
in
into
aad
cwtl
xor
loopne
xor
repnz
rorb
jb
mull
idivl
shll
add
popf
ljmp
dec
push
adc
testl
ljmp
xchg
mov
add
push
push
fiaddl
cli
sbb
mov
aas
cwtl
call
clc
pop
sub
into
lcall
scas
shlb
cmpsb
mov
je
loopne
mov
mov
pop
sbb
insl
pop
fs
flds
sbb
jecxz
sbb
mov
lods
stc
push
cli
mov
jle
mov
js
lods
scas
pushf
paddb
fildl
ss
outsl
aad
test
cmpsb
bound
jge
aaa
mov
push
sub
lcall
push
leave
inc
sbb
inc
dec
aam
mov
mov
sub
push
mov
cmp
jge
shrl
sub
pusha
cmc
pop
adc
aas
pop
pop
or
dec
mov
or
fldl
mov
xchg
ds
cmp
adc
ret
mov
jecxz
nop
push
xor
xchg
loope
callw
pop
push
stos
push
movsb
sbb
mov
mov
push
xor
pop
mov
mov
xchg
adc
push
add
popa
xchg
js
in
and
into
dec
mov
add
xchg
jge
sbb
out
lock
push
test
mov
call
loop
rorl
mov
dec
pop
je
cli
push
jae
push
jl
shrb
dec
mov
xor
jge
push
bound
inc
jge
rol
xchg
cltd
adc
into
mov
pop
mov
andb
outsb
nop
ss
ljmp
xchg
mov
leave
aam
pop
pop
fcoms
pop
jo
add
in
jl
sahf
lods
mov
mov
fwait
or
jmp
mov
fistl
push
jne
fildl
test
add
subb
inc
fwait
cwtl
and
inc
pop
fistl
shrl
pushf
or
push
lret
mov
mov
jb
inc
or
add
xchg
imul
daa
fwait
fwait
out
or
dec
dec
cmpb
xor
push
pop
mov
xchg
push
inc
out
cmp
pop
mov
mov
test
fcmovbe
fisubrl
ret
sbb
cmp
adc
lret
cmp
sbb
mov
and
and
xchg
sahf
jne
add
jle
loope
sbb
jge
lahf
xor
cmc
inc
cmp
sub
sahf
adc
imul
dec
js
mov
mov
adc
jg
xor
push
cmp
andl
stos
xor
daa
icebp
outsl
xchg
inc
out
xor
hlt
mov
lods
mov
cwtl
fsubrs
enter
pushf
mov
loopne
jnp
into
fnstenv
in
into
adc
sub
inc
jns
sbb
pop
rorl
xor
ja
xor
into
push
mov
es
addr16
jns
xchg
dec
cmp
fistl
xlat
cmpsb
repnz
loopne
rcrl
dec
andl
lahf
shrb
popa
pushf
sbb
fdivr
xchg
add
shl
rolb
jno
sbb
sbb
stos
xor
in
inc
or
arpl
push
into
popa
lcall
pusha
and
mov
lods
lods
xchg
cld
push
or
push
xchg
fs
jno
cltd
add
mov
jns
jecxz
pshufw
push
roll
lods
fadds
mov
sub
mov
sarl
lret
xor
stos
lret
inc
fldz
mov
cld
lcall
cmp
xorb
push
jne
jge
dec
jle
and
pop
mov
xchg
add
pop
out
push
sub
rolb
push
and
les
cmp
aam
iret
mov
cmp
arpl
inc
mov
loop
cmp
dec
hlt
imul
xchg
push
repnz
test
arpl
pop
mov
repz
mov
sub
cmp
in
ret
and
ljmp
cmp
test
jg
ss
jae
decl
fsubrl
in
out
push
outsl
fidivs
jg
jmp
and
aas
icebp
bnd
xor
mov
jp
jb
push
or
pop
mov
and
in
inc
push
ds
ret
or
mov
imul
mov
test
inc
lea
or
outsb
xor
lahf
aam
mov
int
fsubr
out
or
cmpsl
mov
dec
clc
outsl
sub
dec
das
dec
push
mov
pop
xor
pushl
dec
pop
cltd
jno
leave
xchg
and
loop
cwtl
stos
aas
push
inc
je
xorl
lahf
sbb
mov
or
cs
inc
out
out
rolb
jge
sbb
addr16
aad
popa
int
adc
jno
jg
jp
out
daa
daa
pop
xor
cs
in
into
popa
cs
dec
hlt
jns
push
sti
lcall
clc
adc
or
mov
gs
setae
cli
fsub
hlt
inc
sub
push
mov
mov
adc
repz
andl
xor
add
cmpsl
push
push
pop
push
ds
je
loop
push
daa
add
mov
daa
add
xchg
enter
hlt
xchg
mov
or
cmp
push
mov
rcl
nop
dec
or
popa
bound
sar
and
out
jl
jo
sti
xor
xchg
pop
shrl
test
fadds
pusha
test
and
xchg
adc
mov
das
add
jb
loopne
pushf
divl
sbb
mov
xor
sub
pop
sti
and
adc
enter
jp
cmp
dec
fwait
cs
jge
jle
cwtl
gs
jle
push
imul
sub
dec
notl
or
add
idivb
pop
fistps
inc
add
jle
pop
push
push
js
das
sub
pop
xchg
mov
inc
aad
jg
stc
ret
popa
push
jns
clc
adc
jnp
dec
sbb
stos
mov
out
or
into
inc
pop
mov
jle
cmp
hlt
notb
and
stos
and
in
icebp
jle
jmp
or
jo
sub
jmp
push
cmp
mov
adc
inc
adc
xchg
adc
in
adc
dec
test
clc
or
adcb
sbb
das
sbb
rcll
popf
es
call
add
mov
inc
ljmp
movsl
inc
fists
mov
pushf
jae
pushw
pop
xchg
adc
push
or
test
test
mov
lock
dec
nop
mov
add
stos
mov
inc
cltd
loope
cltd
push
aas
insl
sub
lret
mov
sub
push
fldenv
jnp
cld
push
push
adc
pop
pusha
mov
mov
daa
fmulp
xchg
sbb
sub
stos
sub
dec
push
inc
sub
or
xor
xlat
je
scas
push
in
faddp
lods
jmp
push
repz
pop
inc
mov
jno
or
xchg
rcrb
clc
and
adc
fcoml
or
ljmp
out
add
stc
aad
stc
mov
int3
jecxz
sbbb
sbb
in
mov
pop
in
sbb
fidivl
ja
xor
xchg
mov
insl
imul
and
fldenv
xor
xchg
in
pop
jle
rclb
les
sahf
xor
cli
pop
fisubs
inc
out
mov
push
jle
push
insb
repnz
stos
aad
insw
inc
leave
and
gs
popa
mov
adc
inc
adc
mov
test
jp
popf
and
sub
sbb
or
jns
cltd
fld
inc
cmp
incl
cmp
fcomps
nop
jecxz
xchg
xchg
push
xchg
cmc
cmc
insl
mov
xchg
sbbb
dec
fdiv
enter
test
in
xor
imul
mov
popf
sub
ret
stc
fwait
adc
lds
bound
psubw
mov
mov
mov
into
ds
xchg
xor
inc
das
shll
rcl
ds
mov
fs
cmp
in
fnstenv
pop
adc
loopne
bound
or
pop
cmpsb
std
cmpsl
out
or
pop
test
push
clc
dec
in
in
sbb
stc
push
or
cltd
aas
insb
imul
dec
stc
cmp
andl
out
test
push
xchg
cli
mov
pop
mov
pop
adc
adc
pushf
add
or
andl
mov
xor
mov
xor
pop
pop
push
jecxz
cmp
aam
cs
test
jne
js
or
adc
sti
repz
shl
xor
mov
sub
or
dec
dec
pop
leave
fidivl
iret
cmp
add
addr16
ja
dec
cmc
mov
push
push
lret
test
lret
cltd
or
data16
in
imul
fbld
pop
stos
and
xor
jns
dec
mov
push
loopne
pop
shrl
jmp
popa
push
outsl
push
pop
adc
test
fistl
aaa
pop
and
cmp
clc
dec
cltd
xor
xchg
ret
dec
cmpsl
cs
xor
popf
insl
aaa
pushf
jge
cmc
sbbl
and
add
loopne
push
vsubsd
shlb
mov
pop
xchg
mov
push
mov
cmp
mov
shrd
inc
pop
jge
js
push
lcall
test
out
stc
call
push
xchg
and
xchg
or
jo
dec
push
mov
outsb
and
movsl
push
sbb
pop
mov
jb
movsl
jo
icebp
or
xchg
ds
mov
insl
lret
sub
inc
cwtl
xchg
repz
loop
dec
xor
mov
fildll
sub
cmp
addb
jmp
lret
rcr
adc
dec
push
lods
jnp
fsubrs
jle
inc
rolb
out
inc
notl
dec
out
inc
add
arpl
xor
rcr
loop
call
sub
insl
call
jl
leave
lret
sub
jg
push
sbb
fsubl
pop
imul
bound
pop
and
sbb
push
push
pop
mov
cltd
mov
movsl
push
fwait
cmpsb
xchg
gs
mov
push
mov
add
insb
sbb
cs
mov
popa
jge
dec
push
cmp
das
mov
adc
lods
rol
dec
push
ljmp
mov
adc
cmc
mov
xchg
pop
cmp
dec
popa
push
xchg
repz
push
out
dec
popa
xor
mov
mov
fstps
arpl
push
cmp
pop
xor
mov
int
push
xor
lods
jmp
sar
lret
cmp
aam
sbb
cld
fsubr
adc
xor
out
xorb
or
inc
jle
jns
xchg
add
xchg
lock
pop
loope
sub
decb
repz
sbb
aam
pop
out
aaa
add
mov
ret
jnp
jno
dec
mov
mov
aam
lods
out
insb
mov
jbe
rcll
dec
loopne
push
jbe
or
imul
inc
in
push
sbb
and
out
js
xchg
mov
clc
ret
in
pop
push
xlat
xchg
mov
mov
pop
fs
scas
cmp
sahf
jecxz
xor
aas
pop
ret
enter
ss
fiadds
call
cmp
xor
jle
jle
push
mov
sub
fists
lret
sub
xchg
or
jno
and
mov
lods
and
push
fwait
icebp
jmp
add
nop
mov
test
xchg
dec
xor
pop
sti
fnstenv
adc
mov
fdivl
rcrl
test
adc
pop
push
je
dec
in
cmc
add
push
adc
fs
push
in
dec
aas
push
mov
xor
push
jmp
lcall
inc
cmp
mov
push
mov
rorb
loope
lea
sbb
push
mov
gs
cs
std
adc
ret
mov
adc
xchg
add
mov
shlb
testb
xlat
adc
mov
pop
jne
movsl
jnp
sar
dec
pop
mov
add
enter
cmp
jle
cmp
je
pop
pusha
jp
cmp
cmpsl
roll
repnz
cli
xor
pop
add
cs
test
movsb
inc
enter
std
xchg
rorl
jl
jae
iret
adc
fstp
fldl2t
push
pusha
push
push
dec
dec
add
je
cmp
add
jmp
cs
pop
pop
or
ficoms
add
aaa
aam
jbe
aaa
or
sbb
add
mov
les
push
addr16
xor
xor
xchg
imul
lret
addr16
jmp
jle
fcomps
mov
mov
ret
mov
lods
scas
negl
jge
or
test
pop
jno
push
sub
into
add
scas
divb
and
cmpsb
push
pop
fsubl
movsb
jge
pop
jbe
push
mov
jnp
sbb
sbb
aam
sub
jmp
mov
imul
in
inc
and
xor
divb
pop
fiaddl
les
and
repnz
xlat
dec
mov
in
jmp
scas
lock
inc
pop
stc
pushf
mov
sbbl
pop
xchg
cwtl
cltd
ja
std
jg
icebp
fwait
notb
mov
scas
into
ror
sahf
movsb
jg
xchg
jne
insb
loop
cli
sbb
or
imul
cld
imul
xlat
or
std
mov
ss
jb
rcl
sbb
pop
fidivs
or
or
fistl
rolb
inc
inc
adc
mov
lahf
jne
lods
lds
xor
fnstcw
stos
movsl
in
call
dec
and
es
sub
dec
push
sbbb
lahf
addb
sahf
inc
mov
jp
cli
and
cmc
rorl
cwtl
xor
jecxz
dec
sbb
bound
rcrb
push
push
iret
je
cmp
xor
pop
pop
mov
notb
imul
dec
inc
xchg
adc
dec
std
add
inc
popf
out
loop
jo
out
scas
xchg
outsb
cmp
shll
jae
shrb
not
add
imul
mov
dec
fs
pop
lret
int3
out
aaa
shlb
adc
mov
dec
jno
test
pop
jmp
mov
cmp
nop
and
adc
clc
mov
cli
loopne
jns
mov
pop
jbe
data16
push
lcall
jl
jmp
aas
testl
xor
dec
popa
je
fdivrl
xchg
cmpsl
shll
or
ss
out
daa
lods
xor
int3
cmp
rorl
ret
add
mov
fisttpl
xchg
xor
enter
daa
pushf
cmc
mov
scas
repnz
add
mov
lds
jae
add
jge
and
cmp
lret
push
in
dec
jmp
cmp
imul
jmp
fbstp
add
mov
and
sbb
scas
or
sub
cmp
mov
pushf
dec
scas
ja
push
cmp
dec
scas
daa
repz
mov
vmwrite
pop
cld
test
fldcw
adc
pusha
add
mov
push
dec
aas
jle
in
mov
cwtl
mov
lret
int3
or
imul
sbb
or
inc
sbb
fwait
push
cmp
ror
test
inc
test
push
inc
incb
fimull
or
push
and
and
leave
mov
in
mov
sbb
adc
in
hlt
pop
in
in
pop
sub
inc
repnz
movsb
lds
sbb
jl
adc
mov
xor
test
push
sbb
cmp
push
jae
pushf
outsl
jbe
mov
imul
outsb
loopne
mov
dec
leave
add
add
jno
jns
sbb
cli
bound
cs
sub
sbb
fs
mov
inc
inc
push
orb
dec
xchg
popf
test
dec
idiv
jl
pusha
cli
mov
dec
loopne
mov
push
cmc
push
mov
cmp
xchg
out
movsl
jns
add
std
sar
fisttpl
std
pop
dec
sub
inc
loopne
and
popa
mov
faddp
popf
ja
jo
mov
in
jecxz
cmpb
xlat
add
pushf
push
jno
fisubs
mov
jle
xor
shll
adc
mov
sbb
daa
mov
pop
xor
test
xchg
insb
aam
stos
mov
cltd
dec
fistpll
scas
pop
lahf
dec
sub
out
shrb
pop
loopne
stos
fildll
cmp
cmpsl
add
mov
push
js
mov
lods
movsb
jp
mov
sbb
jp
cmpsl
test
nop
inc
test
dec
or
dec
cltd
aas
mov
fsubrl
sahf
clc
mov
inc
pop
cmp
or
insl
hlt
outsl
fsubs
stos
dec
rolb
sbb
lea
stc
outsb
cwtl
jl
and
in
xor
mov
xchg
leave
push
push
xchg
push
call
mov
add
mov
sbb
inc
mov
aam
and
add
mov
in
lods
arpl
jle
sub
push
outsl
mov
notb
rolb
push
in
ret
insl
popa
mov
jnp
push
sub
add
out
dec
rcrl
flds
push
jnp
jmp
ljmp
jnp
stos
push
push
push
adc
or
xchg
xor
call
scas
out
clc
repz
idivb
add
insl
cmp
pop
xchg
popf
les
sub
clc
fisubrl
xor
mov
aad
out
add
jne
loope
rorb
icebp
fistpl
mov
push
bound
aaa
lret
mov
loope
sets
sub
leave
add
movsl
mov
outsl
in
mov
sarl
sub
into
sahf
mov
inc
push
mov
out
xchg
adc
leave
hlt
in
rcr
adc
mov
jo
fwait
jmp
xlat
mov
sbbb
mov
orb
pop
adc
imul
mov
jl
mov
push
sub
test
arpl
fwait
loope
mov
mov
cmp
aad
or
aam
das
incl
gs
xchg
jne
popf
std
js
push
adc
inc
adc
in
xchg
mov
mov
mov
loop
push
clc
pop
jge
mov
fwait
dec
mov
out
xor
sbb
es
repnz
into
fsts
inc
repz
add
inc
mov
and
and
in
dec
xchg
adc
cli
mov
sbb
leave
dec
and
sbb
pop
scas
xchg
popa
cmpsb
mov
repnz
mov
adc
xchg
push
pop
xor
cltd
adc
mov
xchg
push
ret
aas
les
jg
lock
repnz
cmp
shr
jb
push
xor
xor
pop
leave
leave
inc
jecxz
jno
xchg
push
dec
lods
mov
dec
pop
lret
cmp
mov
mov
cmp
mov
inc
call
ficoms
dec
adc
jmp
or
sub
sub
mov
adc
je
sub
pop
xchg
mov
xchg
popa
pop
enter
sbb
mov
lcall
les
sbb
sbb
nop
push
stos
push
inc
inc
sbb
or
addl
stc
fxch
mov
call
stos
push
mov
mov
fnstsw
adc
negb
sub
int
adc
push
cmp
cwtl
sbb
fs
pop
push
or
loopne
test
sarb
add
insl
gs
shrl
xchg
in
rol
lret
les
movsl
inc
xchg
adc
lds
add
jbe
dec
mov
aad
fs
inc
icebp
and
jb
adc
cmpsl
icebp
daa
mov
jnp
push
dec
inc
and
xchg
push
push
push
in
lods
fiadds
add
out
jnp
jno
pop
and
inc
push
stos
cmc
aaa
arpl
push
push
repz
push
test
pop
mov
in
lods
push
or
mov
in
arpl
lret
push
decl
cld
add
inc
mov
cmp
mov
inc
xor
out
sbb
ds
test
ret
inc
aam
inc
pop
cld
test
push
mov
aas
sub
mov
add
mov
sbb
mov
movb
adc
in
sub
fistpll
lret
push
std
mov
push
lret
and
mov
sub
sub
inc
mov
adc
sbb
and
xor
xor
and
and
jbe
xor
subb
pop
xchg
inc
fisubrs
lds
mov
xchg
dec
test
in
outsb
fistpll
cmpsb
push
mov
loope
fsubl
dec
movsl
add
push
pop
dec
cmpsl
repz
dec
and
scas
cwtl
fdivl
push
repnz
mov
cmpl
adc
pop
cld
xor
ror
fucomip
sub
dec
mov
adc
sbb
movsl
adc
sti
jne
popf
adc
pop
xchg
jmp
enter
scas
sub
pop
adc
dec
jge
inc
and
test
ret
pop
push
jle
sub
shrb
adc
push
or
nop
mov
adc
cmp
push
sahf
loop
cmp
outsl
push
loopne
repz
lock
call
mov
cmp
sub
scas
xchg
pop
loop
prefetch
xchg
mov
pop
push
out
xorl
push
mov
cmpsl
pop
pop
mov
jae
insb
in
fdivrs
call
mov
jecxz
mov
in
push
outsb
pop
int
and
rolb
xchg
mov
or
test
imul
or
push
and
sub
pop
pop
gs
inc
das
ss
jmp
adc
clc
lods
or
mov
xor
push
xor
push
ficoms
aam
xor
inc
test
xlat
push
push
jecxz
xorl
add
popa
sbbb
jge
or
insl
and
cmpsb
scas
cmp
add
adc
mov
adc
jmp
fwait
xor
pop
push
add
jle
inc
push
mov
loop
in
testl
mov
mov
or
mov
cltd
scas
mov
lds
shr
push
fwait
aaa
test
in
scas
xor
pop
les
cmp
enter
imul
push
repnz
and
loop
xchg
or
jecxz
jmp
push
xor
out
add
inc
out
jecxz
mov
pop
and
mov
xlat
iret
lahf
inc
notl
jo
xor
les
jae
je
pusha
ret
cmp
xor
cwtl
sub
mov
sbb
out
add
cwtl
cltd
les
xor
sub
sahf
ljmp
xchg
push
shrb
push
addr16
or
lret
adcl
jmp
jmp
outsb
sbb
aad
and
shrl
mov
xor
inc
inc
daa
xchg
cld
and
and
insl
push
mov
cmp
out
or
xor
das
and
cmp
gs
mov
lret
jmp
stos
sbb
rorb
dec
xchg
ret
sti
sbb
dec
sti
jle
adc
jge
lcall
sbb
or
sub
int3
push
movsb
sbb
jne
popf
and
xor
js
and
fistl
pop
orl
mov
xchg
pop
insb
lcall
jb
mov
enter
xchg
add
leave
and
stos
or
dec
ds
add
into
xor
test
sbb
jb
jbe
push
lahf
xchg
dec
js,pn
std
mov
fwait
dec
shr
xor
mov
test
ret
sub
mov
push
stc
ret
sub
jnp
fdivrp
rolb
fstpl
lret
jecxz
mov
push
pop
adc
mov
inc
or
sbb
inc
shrl
hlt
push
mov
xchg
adc
ficoml
adc
psubw
hlt
xchg
mov
dec
and
ja
xchg
xchg
in
into
mov
dec
jnp
icebp
sbbb
test
jo
outsl
cmp
imulb
aas
cli
sar
cmc
xor
mov
dec
mov
loope
mov
push
mov
or
cmp
repnz
push
mov
jmp
movsl
cmp
add
and
or
addr16
aaa
arpl
in
int
out
pop
fnstenv
inc
fisttpll
fisubrs
pop
dec
cs
cmp
dec
and
nop
daa
xor
lret
arpl
jae
jnp
jbe
enter
xor
mov
mov
pop
mov
shl
loope
nop
cltd
dec
dec
mov
cmc
test
sbb
xchg
out
adc
cmp
clc
cmc
push
mov
pop
out
or
dec
les
sbb
sbb
lds
mov
sbb
xor
ja
aaa
xchg
nop
adcl
pop
push
jnp
mov
in
add
dec
aaa
insl
xlat
faddl
dec
mov
dec
notb
sbb
mov
ret
clc
cmpl
pop
jmp
into
or
sub
xchg
and
dec
mov
les
dec
push
or
and
cmp
out
scas
mov
aad
push
fdivrs
or
enter
jae
sti
lahf
jp
je
in
repz
push
jo
lods
or
jle
lret
into
nop
sub
jno,pt
inc
out
hlt
inc
mov
pop
ljmp
inc
sbb
pop
ret
les
fnstsw
int
inc
in
sbb
daa
loope
cmpsb
push
pop
rolb
cmp
cmpsb
gs
mov
popf
in
xor
int
or
jge
or
movsb
xchg
jne
add
sbb
inc
adc
pop
push
xchg
cmp
daa
loopne
cmpsb
add
insb
std
sarl
fisttps
adc
sbb
jecxz
int3
mov
and
sbb
jmp
mov
mov
mov
lock
sub
lret
push
jno
fisubl
fcos
pop
add
and
mov
lcall
mov
jmp
or
iret
dec
jge
or
ds
push
or
push
ds
mov
shll
ror
enter
mov
xchg
adc
adc
cmp
jle
xchg
int3
dec
test
test
lds
mov
xchg
or
nop
add
pop
je
mov
in
rcrl
mov
mov
ljmp
adc
mov
mov
std
imul
dec
loope
cmp
add
jbe
outsb
pop
dec
rolb
mov
pop
stos
xchg
mov
jmp
xchg
scas
mov
mov
cmp
repnz
aaa
shrl
adc
sti
ror
jnp
xor
mov
dec
xor
scas
in
xor
hlt
enter
mov
fdivr
mov
and
inc
cmp
push
jb
or
sbb
je
dec
adc
push
pop
xchg
fldenv
movsl
shr
int
inc
dec
test
shlb
sbb
pusha
push
and
lahf
fistps
cmp
or
xor
push
pop
sti
xchg
test
mov
les
out
sbb
cmp
xchg
ror
adc
mov
je
shld
insb
xor
movsb
imul
pusha
movsl
mov
add
data16
xor
add
fwait
sub
mov
addl
test
xlat
in
and
jo
imul
addr16
mov
rorl
mov
xor
lcall
add
inc
cmp
aas
mov
shr
mov
ja
sub
cmp
xchg
jl
jno
shlb
cmp
jne
rcrl
and
addl
mov
into
xor
add
lahf
mov
push
pop
iret
xor
jl
xchg
and
dec
andb
fnstsw
pushf
and
xchg
loop
mov
pop
cld
out
xor
fucom
jns
inc
addl
push
mov
mov
pop
pop
pop
cltd
movsl
insl
lea
mov
push
adc
mov
add
mov
movsb
sub
bound
test
mov
jbe
and
gs
pop
push
mov
jl
into
je
mov
mov
push
icebp
sbb
xchg
faddl
inc
xchg
sub
outsl
mov
pushl
mov
cmp
pop
out
enter
mov
pop
bound
adc
pop
xchg
ret
stos
out
push
mov
push
es
jbe
cmp
dec
pop
add
inc
sbb
cmp
fsubr
or
push
insl
sbb
shrb
push
inc
xchg
jp
mov
sbb
mov
mov
add
fisubs
je
mov
out
roll
push
pop
lret
jbe
or
lea
mov
cwtl
rorl
lret
bound
ljmp
or
cli
in
outsl
push
mov
and
movsb
ljmp
ds
push
into
out
sbb
fldl
nop
jle
ret
int3
lods
cltd
dec
inc
mov
mov
add
cmp
xchg
cltd
sbb
push
mov
shlb
leave
dec
xchg
arpl
xchg
pop
ds
push
xchg
sbbl
mov
xorl
in
mov
mov
sbb
sub
push
push
mov
fnstsw
jge
in
mov
dec
pop
xchg
sqrtps
mov
fnsave
dec
push
jbe
gs
ja
sub
fsubl
push
xchg
js
shlb
movsl
pusha
inc
or
sti
adc
outsl
mov
sub
in
mov
pushf
sbb
mov
mov
das
and
frstor
mov
aam
xor
pop
dec
cmc
adc
ljmp
sti
in
xor
leave
add
call
movsb
hlt
jmp
cmp
int
div
adc
jmp
fwait
sbb
fwait
adc
mov
jp
lahf
dec
cmp
xchg
push
icebp
les
add
jae
adc
inc
rcrl
shl
jmp
mov
xchg
xor
mov
int3
jecxz
push
inc
xor
add
jg
jae
mov
loop
jg
popf
fistpll
and
out
iret
add
call
and
push
mov
ljmp
arpl
push
gs
repz
enter
rcr
out
push
lahf
or
testl
es
inc
add
es
sub
nop
imul
jle
repnz
pop
mov
cmp
push
cmp
pop
mov
out
cmpsl
push
or
sbb
cmc
pop
jbe
jecxz
adc
xchg
mov
imul
jnp
or
cmp
xchg
or
repz
jo
cltd
mov
outsl
std
cwtl
jae
inc
cltd
loope
je
rorb
pop
lahf
fstpl
mov
or
ret
scas
xor
mov
hlt
js
sub
mov
clc
lahf
decl
mulb
mov
arpl
pushf
push
stos
rclb
iret
stos
mov
xchg
or
jg
sbb
pop
divl
push
fisubs
add
xchg
xor
daa
push
cmpsl
scas
xchg
pop
xchg
icebp
aas
aaa
xor
xor
pop
mov
test
cmpsb
cli
mov
fcompl
xor
jbe
enter
mov
int
jp
faddp
addb
addb
inc
cld
js
and
lret
xorl
lcall
adc
push
lods
movsl
fs
push
daa
jg
cld
nop
shr
into
pop
fildll
mov
shll
sti
subl
stc
add
inc
cmpsb
movsl
jbe
cwtl
repnz
stos
mov
jae
push
fsubs
dec
les
add
fistpl
pop
jp
cs
dec
dec
push
push
mov
or
push
sub
dec
daa
mov
sub
out
add
sbb
scas
ror
dec
lahf
add
mov
fmuls
in
jno
mov
fmul
push
cmp
ja
ret
test
inc
jg
add
mov
sbb
jns
repnz
dec
fcoml
inc
data16
inc
inc
stos
pusha
std
and
cwtl
push
addl
sbb
jne
mov
inc
es
and
adc
inc
int
xor
leave
cmc
push
mov
icebp
or
sub
sbb
lods
inc
xor
mov
insb
lods
sub
cltd
hlt
ret
xlat
cltd
sahf
and
mov
les
dec
mov
lea
xchg
pushf
inc
mov
imul
test
mov
enter
cmp
jbe,pt
adc
rol
loop
jle
movsb
repz
pop
wbinvd
mov
cmp
xchg
mov
in
cmpsb
xchg
xlat
fidivs
das
push
dec
xchg
jb
adc
mov
or
adc
cld
xchg
leave
ja
mov
int3
ret
lcall
inc
push
jne
jle
shrl
sub
ret
or
mov
inc
dec
pop
pop
jnp
sub
jnp
fadd
inc
xchg
std
sbb
fistpll
adc
jb
mov
push
mov
lods
rcrl
and
push
add
mov
push
dec
mov
jg
shlb
mov
add
and
das
aad
int3
bswap
mov
fisubs
in
sub
mov
jne
jb
xchg
aas
jne
mov
and
sahf
jae
push
out
mov
or
mul
test
pop
sub
je
mov
add
sarl
mov
dec
sub
cmpsl
pop
jp
scas
and
xchg
dec
mov
dec
imul
lds
sub
adc
vpcomuw
divl
push
cmp
cmp
out
pusha
pop
call
xchg
or
sbb
je
fsubrl
push
cmpl
mov
lahf
push
aam
mov
lcall
jae
ss
jae
cmc
rcl
push
inc
rorb
lods
mov
pusha
dec
data16
les
cmp
add
cmp
stos
sub
cmp
push
call
test
jbe
aad
add
les
adc
cwtl
fwait
lock
mov
mov
lock
xor
in
je
mov
das
push
mov
lea
imul
leave
lock
cmpb
dec
adc
test
nop
fbstp
outsb
cld
or
insl
fcmovne
repnz
sub
push
xor
jnp
and
les
fsubrp
mov
mov
mov
lcall
fistl
and
pusha
arpl
pop
sbb
mov
jnp
ds
jl
jnp
cmpsl
aad
rclb
les
adc
scas
stc
mov
dec
inc
test
sub
mov
push
push
out
mov
je
pushf
jle
adc
cmp
sub
loope
pop
in
push
adc
loop
leave
nop
scas
or
jne
mov
push
aam
jmp
cmp
enter
inc
fidivl
pushf
and
test
pop
mov
test
push
push
and
adc
sub
and
dec
ja
pusha
daa
jae
gs
andb
repz
sbb
lock
push
xchg
pop
dec
sbb
jp
rcl
stc
push
lock
jae
enter
mov
adc
sub
ja
in
cwtl
sub
xor
sub
push
cs
inc
sbb
andl
cmpsb
jns
and
lock
xlat
js
lret
shl
orb
lock
pusha
xor
daa
hlt
dec
xchg
aam
aas
add
dec
xchg
bnd
cmp
xor
mov
push
xchg
xchg
mov
mov
rorb
sub
jl
sti
pop
xchg
scas
aaa
and
dec
outsb
dec
into
jp
pop
lret
das
out
punpcklwd
push
fnstsw
fimuls
mov
push
xchg
mov
mov
inc
xor
adc
call
push
mov
iret
push
inc
ret
add
mov
aad
jne
decl
xor
sbb
sub
icebp
cmp
ret
cmp
cmp
lret
adc
adcl
and
jecxz
lock
and
scas
xor
lods
sub
and
xor
xchg
push
test
test
push
pop
mov
mov
cmpsl
push
jbe
sbb
jns
hlt
nop
imul
cmpl
js
fwait
cmp
pop
rolb
imul
xor
or
mov
in
jl
iret
in
bnd
hlt
lods
add
inc
bound
mov
sbb
jb
sbb
mov
pop
sbbb
out
test
ds
das
outsl
push
xchg
outsl
repnz
cmc
fucomip
xor
sti
mov
xorl
addr16
lock
ljmp
outsl
stos
test
les
daa
movsb
sbb
sbb
cli
jmp
mov
idivl
fcomip
inc
xlat
sub
dec
xlat
hlt
pop
mov
push
testb
stc
test
out
in
add
add
adc
xchg
or
movsl
pushf
dec
shrl
dec
jns
repz
lds
inc
movsl
mov
inc
sub
movsl
fwait
jmp
xchg
mov
orb
enter
add
cmc
fistpll
mov
or
sbb
int
inc
loop
aaa
jg
jo
std
lahf
push
cmp
pop
ljmp
fldenv
mov
cld
incl
cmpsb
lcall
mov
push
aas
push
inc
test
mov
lods
mov
daa
iret
lods
sarb
add
sahf
cwtl
fistps
adc
dec
sbb
push
cmp
dec
jge
sub
ror
or
jnp
mov
jmp
mov
lods
lret
aaa
or
fsubrs
sti
leave
fcoml
push
mov
mov
xchg
mov
jb
arpl
xchg
shlb
push
inc
xor
lret
fisubrl
xorb
mull
add
dec
mov
sahf
jle
jle
jmp
insb
or
std
fs
cli
jb
outsl
daa
cld
movsb
mov
or
je
ds
push
and
mov
sbbb
movsb
dec
lahf
ja
mov
sti
pop
dec
push
mov
or
jno
fstps
cmc
jp
pusha
scas
aaa
pop
dec
pop
inc
rcrb
inc
xchg
xor
aad
jge
jge
jb
das
xlat
xchg
adc
insb
out
sub
ja
add
jns
inc
mov
pop
shrb
popl
imul
pop
mov
sbb
ss
xchg
stos
es
and
ret
mov
inc
push
loopne
lahf
or
shlb
scas
imul
iret
xchg
xchg
cmpsl
pop
xchg
pop
lret
inc
mov
imul
push
adc
repz
xor
shlb
stc
mov
sbb
loop
jl
faddl
lret
pushf
sbb
sbb
add
xchg
xlat
mov
dec
mov
xor
push
inc
adc
sbb
dec
rcll
xlat
or
add
vmptrld
mov
cmc
push
popa
sub
pop
pusha
rcl
sarl
loopne
or
call
mov
ljmp
in
neg
mov
hlt
in
aad
cmp
ret
mov
mov
scas
mov
mov
pop
push
xchg
add
inc
adc
cmpsb
mov
xchg
ret
fnstsw
je
add
jo
lret
push
sbb
lds
mov
add
and
push
sbb
jo
int3
sub
mov
adc
stos
ret
mov
scas
cmp
das
jl
inc
aad
rclb
inc
fcomps
inc
adc
pop
adc
test
repz
pusha
mov
and
push
mov
movsl
cmc
push
dec
lcall
cmc
adc
loope
sub
mov
cmpsb
test
int
cmpsl
loop
adc
shll
ds
addr16
or
mov
out
mov
fcoml
cwtl
mov
xchg
pop
push
popf
ret
stc
mov
cmc
fidivrl
cmpsl
xchg
in
rcll
cli
adc
xor
add
sbb
or
mov
and
icebp
push
inc
push
insl
insl
je
int
cwtl
sbb
mov
mov
adc
gs
fimuls
frstor
push
je
xchg
jns,pt
mov
xor
cmp
or
ds
stc
inc
push
push
xchg
jecxz
push
mov
cmpsb
popa
sub
mov
adc
ljmp
movsb
lret
outsb
das
test
and
push
or
sub
out
stc
jo
dec
jne
movsb
xchg
cmp
std
fsubs
mov
sbb
mov
or
inc
movsb
mov
dec
dec
cmc
mov
lahf
es
test
cmp
dec
xchg
inc
sbb
sub
popf
ret
sub
bound
inc
loop
mov
sub
xor
iret
sti
push
pop
xor
shlb
fildll
xor
cmpsb
imul
and
sub
cmp
das
push
ffreep
mov
push
mov
mov
adc
icebp
loopew
fs
leave
rcll
jmp
popf
bound
repz
inc
int
cmp
je
rcr
push
imul
mov
xchg
push
push
lahf
jb
pop
lds
xor
mov
push
sbb
adc
test
mov
mov
pop
pushf
push
movsb
cmc
popa
mov
outsl
pushf
push
push
and
movsl
mov
inc
push
imul
ds
out
push
mov
outsl
gs
cli
mov
in
mov
aam
sahf
out
jns
aaa
mov
pop
shlb
mov
cs
cmp
inc
adc
jg
sbb
adc
stos
add
push
cmpsb
mov
fsubs
inc
xor
out
xor
mov
mov
in
xchg
popa
inc
sbb
lods
clc
packuswb
movsl
dec
out
aam
push
pop
dec
cmpl
aas
movsb
mov
xor
xchg
mov
je
pop
xlat
stos
fsubrs
adc
shlb
inc
mov
in
cs
push
jae
out
nop
dec
stc
adc
cltd
xor
mov
pop
mov
cltd
icebp
adc
out
jecxz
lods
xchg
cwtl
sub
pop
rorl
add
xor
inc
adc
cmp
scas
pop
xchg
add
add
cld
cld
or
repnz
xchg
stos
insb
xor
pop
aad
les
loop
sbb
and
mov
mov
sbb
ficoms
test
sub
inc
fnstenv
shll
jl
cmp
or
repz
gs
fists
jne
cmp
cmpsb
push
jp
ret
pop
stos
sbb
rcrl
jne
jge
mov
fsubs
rsqrtps
cmp
fsubrs
add
daa
in
cmp
mov
cwtl
mov
scas
lods
stos
add
inc
adc
and
mov
cltd
lea
jp
mov
loope
lds
xchg
icebp
mov
push
mov
out
icebp
ficoms
jge
leave
mov
mov
les
sbb
popa
or
data16
je
iret
sub
inc
pop
or
das
loopne
fwait
jmp
out
xchg
xchg
inc
pushf
ja
fs
jmp
xchg
iret
cmp
pop
xlat
pop
js
int3
pop
pop
or
mov
cmp
adc
fimull
call
popa
cmp
push
mov
add
jle
mov
or
inc
sbb
mov
pop
out
push
inc
stos
mov
mov
xchg
arpl
les
push
mov
in
shl
stos
inc
fninit
xchg
push
jno
cmp
fsubl
cmp
adc
jmp
stos
test
add
mov
sbb
push
cmpsb
sahf
push
clc
test
mov
stc
out
or
sbb
or
jnp
dec
dec
and
or
lahf
push
enter
push
push
inc
sub
loopne
mov
jmp
ljmp
push
ds
mov
pop
or
pop
sbb
test
mov
aam
insb
dec
mov
and
in
cmpsl
or
dec
and
push
and
int
adc
cmp
mov
pop
lcall
or
inc
fldt
mov
aaa
imul
stos
sub
lahf
adc
inc
mov
hlt
xchg
cs
cs
mov
inc
add
test
sti
pushl
outsb
std
movsl
sub
fwait
add
jnp
flds
mov
jno
mov
push
movsl
sub
insl
mov
push
loope
push
into
jbe
cmpsl
in
cmp
in
lret
pop
cs
lock
stc
popf
imul
sub
adc
push
int3
std
lahf
xorb
cwtl
es
mov
aad
mov
and
lods
sbb
sbb
inc
inc
inc
imul
inc
and
pop
cli
outsl
push
pusha
movsb
and
mov
mov
pop
fistpll
jmp
add
mov
inc
xor
push
push
and
xor
or
fwait
out
daa
sub
pop
pop
int3
ret
call
jmp
lahf
ds
test
push
adc
bound
pop
cld
iret
cmovne
cmpsl
push
mov
pushl
dec
cmc
popa
xor
lds
dec
das
addb
xor
movsl
xor
ret
dec
repz
sbb
fnstenv
sub
sub
and
and
jmp
fs
shr
lods
xchg
jmp
in
push
or
in
adc
mov
int
loope
pop
cli
std
hlt
pop
jmp
xchg
mov
add
and
ret
and
data16
sti
mov
mov
mov
xchg
xchg
jae
in
pop
xor
sahf
ljmp
cwtl
dec
dec
cmpsb
mov
pop
pop
test
lds
inc
or
pop
pop
mov
sub
cmp
sbb
lea
dec
push
imul
or
adc
lret
sbb
pop
sbb
mov
shlb
nop
enter
mov
and
mov
stos
push
ss
xchg
adc
dec
aad
add
stos
sbb
xor
repnz
lahf
test
push
daa
and
pop
lea
cmpsb
outsl
lcall
mov
sbb
imul
stc
das
jl
fs
sub
icebp
inc
push
mov
sub
or
xor
mov
arpl
mov
adc
inc
outsl
push
push
sbb
or
jno
jl
adc
dec
ss
fisubl
push
popa
mov
out
std
jns
xchg
jb
mov
in
fisubrl
mov
jecxz
push
fsubl
pop
inc
enter
repnz
mov
jns
cmp
jnp
movsl
in
pop
dec
sbb
or
pop
stc
add
xor
test
shl
mov
decl
add
dec
sahf
ror
pushf
sbb
jp
stos
sub
icebp
xchg
lds
cli
push
lods
adc
roll
jb
mov
jl
shlb
mov
jecxz
dec
insb
add
inc
addr16
xlat
in
pop
sahf
sbbl
inc
cmp
imull
lret
jns
mov
lret
jne
mov
or
pop
mov
inc
mov
out
div
in
and
adcb
ljmp
and
pop
pop
push
cmp
xchg
pop
mov
mov
loope
jbe
out
xchg
movsl
pop
and
lcall
sbb
add
call
inc
gs
test
iret
negl
lea
repz
jl
or
sub
inc
or
inc
data16
cmpsb
add
dec
adc
rcrb
adc
pop
addb
adc
ficoml
cmpsl
adc
mov
push
js
push
int3
mov
imul
xchg
jnp
repnz
jg
aas
movsb
and
push
es
pop
jg
xlat
xor
mov
fbstp
mov
push
push
dec
dec
movsl
imul
aad
fdivrs
xor
int
outsl
pop
fisttps
cli
xor
xchg
push
dec
mov
adc
jp
repnz
xlat
test
test
pushf
smsw
mov
jp
fistps
stc
cltd
xlat
lods
icebp
jns
add
sbb
adc
dec
add
popf
cmp
adc
out
mov
xor
lgdtl
int3
cmpsb
aam
mov
xor
int3
sub
vmovhps
xchg
dec
push
or
lret
dec
scas
rcll
int
pop
xor
mov
test
cmp
pop
adc
sti
lds
push
bound
cmpsl
aas
pushf
lock
jo
cld
out
pushf
add
mov
inc
sbb
std
sahf
fcmovbe
icebp
jb
or
and
jg
sbb
les
xchg
popa
adc
repz
cwtl
int
test
add
sub
dec
ror
pop
or
dec
lahf
loop
jne
jl
fldl
xor
cmc
aaa
inc
insl
cmc
or
in
inc
pop
mov
and
mov
push
xchg
xor
add
or
pop
sar
in
aad
dec
inc
push
arpl
push
ljmp
or
xchg
fxch
cwtl
mov
sar
sbb
push
cmpsl
stos
cs
mov
test
fidivrs
fiaddl
sbbl
add
daa
or
loope
mov
push
scas
push
xchg
lea
addr16
imul
xor
cs
adc
pop
pop
push
jecxz
rorl
sub
sbb
cli
lods
imul
rolb
int3
xchg
sarb
aam
pop
xor
push
add
xor
xlat
mov
mov
mov
adc
xchg
add
loopne
and
fucomip
aaa
lahf
and
loopne
les
mov
jecxz
and
pop
push
pop
and
lret
sar
arpl
and
jg
stos
leave
push
sbb
mov
or
cmp
xor
pop
xchg
dec
aad
jge
push
fsubrs
int3
addr16
fistl
inc
or
push
mov
add
sbb
jle
iret
jb
test
inc
jb
xor
push
mov
cmc
sti
idivb
leave
adc
cmc
fst
loopne
out
ss
xchg
mov
jne
xor
xor
or
fildl
jge
fcmove
xorl
call
push
pop
push
cmp
inc
aas
adc
fmul
dec
lods
jmp
add
sub
push
fistpl
xor
in
rcrb
fistl
hlt
ret
in
pop
pushf
add
push
in
mov
out
add
data16
fstl
push
in
lods
inc
sub
pop
std
pop
stos
sbb
enter
cmpsb
enter
pop
data16
out
mov
mov
sub
cwtl
std
push
mov
and
or
xchg
inc
int
daa
mov
jecxz
insb
xchg
mov
xlat
inc
add
outsb
add
cli
push
dec
repz
jmp
sbb
dec
mov
stos
mov
jbe
sbb
filds
push
or
das
xor
imul
divb
outsb
test
jl
cwtl
clc
pop
fistpll
or
jne
pop
loopne
add
addps
inc
push
ret
clc
mov
inc
mov
sbb
movsb
add
mov
or
pusha
lcall
rclb
shlb
and
inc
divl
mov
arpl
add
fnstenv
sbb
loopne
sti
jge
jg
data16
enter
xchg
jmp
push
insb
jg
xor
out
repnz
fisubrs
fnsetpm(287
imull
push
mov
pop
in
popa
xor
dec
les
and
lret
sbb
adc
cld
mov
fildll
mov
or
sub
fcomps
mov
lock
fdivrp
lahf
sbb
lret
cmc
push
fcmove
push
rolb
js
stos
pop
pop
rclb
push
lea
daa
cmp
outsb
inc
leave
sub
aad
lret
push
popa
adc
add
and
fldl
lds
stos
pop
clc
or
sub
push
jns
jns
adc
mov
adc
loope
sbb
xlat
aas
mov
pop
out
ret
add
xchg
pop
jl
xor
movsb
sbb
lea
mov
out
dec
jmp
mov
mov
mov
movsl
cmp
jb,pt
mov
loop
mov
cmp
sub
cld
sbb
daa
adc
scas
jne
adc
xchg
stos
movsb
das
rcr
pusha
and
cmpsb
inc
xchg
ja
pop
fwait
rcrb
sbb
jne
cmp
stos
pop
gs
jge
adc
mov
shrb
push
mov
call
test
push
push
dec
xchg
push
fisubrs
inc
lea
fs
inc
push
xchg
decb
insb
xchg
pushf
cmp
xor
lods
jg
ficoml
insl
mov
mov
xchg
xlat
clc
push
or
sbb
pop
mov
xor
fstpl
inc
outsl
push
popf
pop
jo
fs
clc
sub
cld
mov
mov
xchg
inc
mov
push
xor
cwtl
test
xchg
addb
out
jns
push
mov
push
jp
pop
outsb
pop
push
sbb
fdivrl
test
mov
xchg
subl
lcall
fs
fcompl
sti
push
jb
and
lods
enter
adcb
cmp
aas
lea
lods
dec
mov
int3
mov
cwtl
jmp
jle
ret
int3
mov
sbb
faddl
test
rcrl
popf
push
out
adc
and
jbe
mov
xchg
ret
cmp
and
sub
push
addl
sub
cmovbe
mov
cs
lea
sbb
sbb
mov
mov
sub
insb
rorb
fldenv
mov
xchg
mov
adc
js
push
ljmp
dec
adc
outsl
int
mov
mov
nop
and
sar
pop
cltd
cmova
loop
cmpsb
pop
mov
add
and
jnp
ret
adc
mov
cmc
sub
push
mov
mov
mov
inc
ja
mov
int3
in
lock
jns
mov
mov
sbb
cmp
jge
mov
xchg
adc
outsl
mov
xchg
loop
mov
sub
in
dec
int
xchg
jno
int
push
test
sarb
push
mov
jae
push
push
fidivrs
es
nop
lods
mov
into
stos
cli
sidtl
cmp
push
les
sub
push
and
sub
mov
sahf
push
xchg
adc
fnstcw
inc
mov
or
jge
and
les
test
rorl
mov
and
aaa
jl
iret
lods
sub
and
lea
push
adc
sub
mov
sbb
inc
cmp
mov
outsb
es
lock
xchg
and
fildl
xchg
pop
xchg
out
jmp
adcb
inc
aas
mov
sti
sbb
daa
jae
ret
movsb
jb
daa
lock
popa
fwait
add
lret
in
add
divb
syscall
sbb
subl
aas
dec
mov
nop
push
dec
pushf
xor
pop
ret
xor
xchg
out
xchg
das
loope
movsb
xchg
mov
imull
add
lods
rolb
inc
adc
shr
xor
mov
clc
mov
xchg
or
outsl
xchg
cli
cmp
in
out
in
movb
adc
ret
test
inc
adc
or
stos
push
ja
xchg
gs
imul
push
ret
jbe
pushf
dec
decb
lods
mov
mov
ja
sbb
cmc
out
cmp
xor
movsb
pop
movsb
jo
pop
orl
xlat
into
js
loope
push
xor
jo
sub
cld
sbb
mov
jg
mov
int
movsl
sub
inc
outsb
out
jne
dec
ljmp
cmp
inc
push
xchg
test
dec
test
mov
or
mov
push
push
xor
out
icebp
fsubrl
aaa
pop
aad
aam
mov
lea
fimuls
mov
enter
or
lods
mov
xor
aad
ret
mov
movsl
enter
dec
add
fistps
lds
fistps
jnp
scas
xchg
scas
add
icebp
std
xchg
ret
mov
fwait
dec
cmp
mov
push
mov
inc
adc
sbb
gs
xchg
aam
loope
hlt
jno
mov
test
xor
add
pop
mov
xchg
cmp
cmpsl
push
dec
cmc
sub
pushf
jne
pop
popl
test
stc
jecxz
sti
aad
sbb
pop
mov
ljmp
andb
arpl
rclb
cmp
adc
out
rolb
icebp
mov
jo
push
xor
jmp
adc
arpl
mov
mov
nop
pushf
add
inc
outsb
faddl
sub
jmp
lea
pop
movsb
add
inc
lea
sub
xor
mov
mov
jne
adc
call
cmp
mov
mov
jns
ss
or
shll
jp
ja
in
jmp
cld
fistps
xchg
outsb
inc
stos
aaa
out
imul
and
pop
js
aad
mov
les
dec
hlt
jmp
cwtl
sub
xchg
cmpsb
mov
movsl
jb
mov
sbb
sbb
movsl
xchg
cmp
idiv
sub
outsl
xchg
xchg
dec
movsl
jno
jno
arpl
cmp
cmp
push
movsb
data16
loopne
rep
and
sub
add
inc
pop
adc
aaa
ja
mov
cmpsb
cltd
add
ret
lods
in
jo
pop
test
pop
stos
and
push
mov
fnstenv
adc
xchg
xchg
jle
cmc
push
inc
fmulp
mov
inc
adc
add
subl
mov
hlt
xchg
xchg
or
cmp
dec
mov
sbb
sub
loop
dec
movsl
dec
push
push
lret
adc
clc
push
jno
sti
sar
shrb
sub
dec
push
inc
imul
iret
adc
or
mov
xchg
mov
xor
or
push
add
fsubrl
out
adc
subb
pop
adc
cmp
mov
sti
mov
cmp
jle
jmp
inc
xchg
jle
sub
fmull
jns
push
jl
pushl
out
push
jmp
xor
hlt
das
fs
push
shrb
push
sbb
mov
push
add
push
loopne
das
jmp
xor
lret
dec
adc
cmpsb
mov
addr16
movsb
dec
push
movb
fisttps
subl
sbb
cltd
sbb
mov
cmc
ljmp
into
pop
mov
loopne
add
mov
adc
add
add
dec
ja
xchg
imul
add
cmp
cmp
mov
sti
in
hlt
nop
mov
or
fidivs
jg
adc
pop
repz
xorl
ret
push
flds
sbb
mov
sub
cmp
sub
or
xchg
repnz
sub
cld
mov
or
mov
sub
adc
testl
hlt
xchg
and
es
push
cmp
dec
jp
call
mov
callw
jmp
mov
insl
fs
nop
gs
movsb
push
jp,pn
nop
mov
jns
ljmp
and
pop
pop
stos
pusha
cmpsl
ret
xchg
shr
inc
mov
notb
cmp
or
xchg
or
sarb
rcl
xchg
adc
cwtl
mov
sbbb
loop
jle
sub
rcl
popf
add
push
pop
push
in
xor
ret
xor
imul
cli
cld
adc
dec
ljmp
and
pop
lea
in
aaa
mov
hlt
cmpsl
push
mov
cmp
sub
xchg
pop
insl
xor
into
enter
inc
aaa
push
out
subl
jg
fiaddl
jae
xor
dec
or
scas
jg
push
and
sbb
jns
mov
inc
rclb
loopne
sbb
ret
fwait
add
scas
sbb
lahf
add
or
cmp
mov
jp
lahf
mov
lret
sbbl
movsl
jns
xchg
jns
mov
cmp
dec
add
movsb
or
mov
or
das
jl
dec
add
imul
std
push
repz
sub
fwait
es
and
or
mov
xchg
jae
cwtl
mov
xchg
mov
push
dec
in
xchg
mov
pop
loop
neg
push
clc
mov
pop
pop
rcr
fbstp
arpl
jle
frstor
dec
jp
push
fs
mov
cltd
xor
cmp
mov
scas
cmp
test
mov
movb
jno
dec
enter
pop
test
mov
xchg
lds
adc
pop
arpl
push
or
xchg
pushf
andb
xor
stc
leave
and
dec
xchg
mov
mov
fmuls
fcomi
shl
movsl
out
fdiv
js
pop
fsts
xchg
mov
mov
xor
movb
in
in
push
mov
movsl
and
adc
mov
mov
lea
dec
dec
ret
add
adc
mov
sub
imul
jae
mov
scas
fadds
lods
repnz
jg
pop
xchg
decb
lcall
xor
and
xchg
mov
xor
pop
or
inc
jmp
mov
jge
mov
mov
fmull
in
out
movsb
sbb
inc
das
das
pop
pop
dec
loopne
dec
cs
mov
out
movsl
pop
mov
push
popa
mov
xor
je
fisttpl
cltd
mov
scas
sub
inc
mov
dec
cmp
pusha
xchg
dec
cltd
dec
add
push
push
xor
clc
fisttpll
les
mov
imul
push
jl
repz
leave
and
mull
inc
pushaw
ss
leave
imul
shll
add
shrb
mov
scas
xchg
test
mov
dec
lds
frstor
xchg
stc
jp
iret
insb
lods
stc
ret
mov
loopne
stos
and
dec
sub
sub
add
jp
pop
cmp
pop
push
mov
jns
mov
dec
loop
je
xor
mov
shrl
sbb
outsb
outsb
pop
jns
data16
xchg
icebp
and
outsl
sbb
mov
aam
sbbl
das
outsb
dec
inc
pop
pop
adc
or
in
jns
movsl
bound
sub
shll
inc
add
daa
inc
pusha
add
imul
inc
lods
cmp
xor
xchg
out
insb
loope
ljmp
xchg
xchg
out
sbb
mov
mov
xchg
sbbb
jl
cmpsb
fstl
pop
outsb
jmp
rolb
in
sbb
inc
jmp
and
xor
imul
ret
sbb
mov
inc
or
cltd
mov
push
sub
xor
cmp
pop
pop
dec
sbb
xor
in
loopne
sub
pop
mov
rclb
dec
mov
daa
ja
cmpsb
or
sbb
stos
mov
mov
addr16
sub
jno
sbb
jge
filds
mov
sahf
xchg
push
fldcw
dec
xchg
xchg
push
pop
mov
inc
and
push
inc
lret
or
xchg
dec
jmp
jns
pop
mov
jnp
adc
les
shl
mov
cmp
call
dec
mov
inc
inc
mov
mov
cmp
or
push
lahf
mov
mov
dec
pusha
mov
es
mov
insb
fldenv
insl
or
inc
mov
das
and
inc
or
std
cwtl
add
add
sub
cmp
lds
or
jmp
sbb
push
les
jp
scas
fdivl
push
mov
into
mul
push
sbb
outsb
adc
jg
xor
cmpsb
lea
mov
jp
cli
jbe
or
test
rcrb
out
orl
jbe
push
xchg
sti
jge
sbb
cli
ds
bound
mov
fdivrl
out
or
aam
scas
mov
in
test
pop
sbb
jne
notl
jb
mov
mov
nop
xor
mov
pop
pop
test
xor
data16
push
mov
xor
stos
out
faddl
dec
xchg
daa
gs
mov
and
enter
adc
or
ret
or
adc
cmp
xchg
fdivs
jle
rclb
cmp
xchg
jae
mov
inc
pop
rclb
mov
inc
mov
mov
sub
mov
orl
test
mov
push
mov
andl
int
data16
movsl
adc
mov
and
iret
int3
jp
push
mov
subl
cmp
mov
sub
inc
or
mov
out
xor
repnz
lea
movsl
cmc
shl
inc
and
xor
fs
xor
aam
adcb
sbb
mov
mov
rcl
jnp
xor
pusha
mov
aas
jge
int3
test
shr
test
cmp
js
sbb
dec
shr
add
add
lahf
xor
ret
jle
inc
or
jmp
mov
mov
das
push
dec
mov
stos
les
pop
das
loope
iret
sti
jmp
les
inc
cmpsb
xor
pop
pandn
inc
sbb
dec
xchg
ss
pop
mov
enter
or
les
gs
pop
por
pop
mov
sbb
fisubs
fmuls
movb
dec
push
sbb
pop
bound
lcall
xchg
ljmp
in
xchg
outsb
pop
or
leave
pop
or
fdivrp
cmc
mov
jle
repz
mov
sbb
fcmove
decl
or
insl
xor
pop
add
add
jns
gs
cmp
loopne
jb
shrl
jecxz
cmp
daa
mov
daa
lret
cmp
xorb
dec
pop
mov
ljmp
cmp
jl
addl
mov
xchg
cmp
or
cmp
jno
sub
outsb
push
negb
ja
dec
lods
xlat
cmpl
test
cmpsl
dec
lods
loopne
sti
enter
bound
sub
movsl
mov
mov
stos
cmp
or
jmp
cld
ljmp
xlat
data16
nop
out
rcrb
cmp
push
f2xm1
pavgw
add
dec
sub
aas
call
push
iret
or
jle
inc
or
xchg
leave
pop
jmp
xchg
iret
les
jo
pop
mov
fs
and
cmp
inc
fldt
test
jle
adc
lret
leave
stc
mov
das
loope
shll
in
jae
sub
jg
cld
test
adc
ficomps
cmp
sbbl
mov
fists
xchg
ret
std
sbb
test
jnp
push
mov
inc
das
jmp
or
cmp
sarb
imul
push
insb
xchg
adcb
mov
mov
mov
or
xor
adc
pop
and
pop
lods
inc
mov
adcl
cli
inc
ds
mov
or
insl
mov
inc
pop
mov
and
les
popl
sub
xor
mov
xchg
jp
xchg
iret
shll
das
pop
mov
ret
mov
imul
lahf
loope
sub
xor
jo
sub
dec
push
sub
ja
sbb
jnp
sti
enter
mov
cmp
adc
shr
pop
xor
mov
aad
xchg
or
dec
xor
cltd
or
inc
enter
outsb
mov
rorl
mov
test
fistpl
movl
inc
imul
aas
mov
dec
mov
cmp
cmp
fidivrs
adc
iret
enter
pop
iret
inc
or
push
jl
call
jnp
in
push
insl
cmpl
pop
add
cmp
xchg
ss
add
stos
dec
inc
stos
imulb
mul
add
push
mov
mov
pop
lret
pop
mov
cmp
dec
push
ja
imul
sti
or
dec
sbb
mov
sub
dec
xchg
push
push
dec
popf
jns,pn
mov
ja
push
mov
sbb
loop
div
sbb
dec
lods
stos
pop
add
jns
and
dec
leave
cmpsb
fs
movsb
fs
adcl
sub
cwtl
divb
gs
xchg
scas
add
addr16
out
aaa
lods
mov
sarb
cmpl
sbb
xor
setne
into
jne
and
push
or
mov
dec
je
fwait
adc
ja
loopne
popf
movsl
jp
dec
inc
push
add
push
shlb
mov
jecxz
inc
fs
push
repz
not
or
or
xor
mov
in
xor
sbb
in
sbb
jp
push
or
mov
loopne
inc
jbe
push
lea
pop
inc
push
cmp
fmull
sub
incl
aas
scas
daa
jo
ret
pop
cmpsb
mov
out
sub
and
test
sub
int3
int3
add
movsl
ja
mov
stos
dec
in
push
push
jl
bound
movsl
inc
xor
rcr
scas
jbe
stc
xchg
ss
pop
lcall
stos
mov
mov
pusha
mov
xor
clc
fsub
sbb
fs
lods
add
lea
loopne
or
pusha
pop
vminss
xchg
lcall
ror
loope
mov
mov
out
dec
jmp
sbb
cld
pushl
test
inc
mov
push
in
out
scas
out
test
pop
lods
call
or
cmpsb
cmp
jge
cmp
aaa
sbb
push
call
pop
in
popf
arpl
mov
pop
subl
mov
pop
scas
cmp
push
pop
ss
fsts
push
xchg
cmc
sbb
pusha
aad
mov
mov
lret
mov
inc
pushf
stos
je
cmp
sub
in
mov
sbb
push
sti
mov
and
pop
addr16
add
jb
stos
lods
sub
inc
insb
cs
inc
pop
push
cmp
ljmp
mov
sbb
and
xchg
cli
or
push
sbb
adc
outsl
int
or
cli
insl
sti
adc
nop
push
das
xchg
add
scas
pop
mov
inc
out
pop
jg
xor
xchg
inc
repnz
jne
mov
sti
icebp
rorl
dec
rcll
xor
adc
mov
push
adc
add
jge
adc
xchg
gs
xor
jne
xchg
mov
fcom
inc
lock
test
adc
pushw
xlat
dec
mov
mov
pop
test
sar
cmp
inc
cld
lods
int3
xchg
leave
xor
mov
or
jne
or
les
xor
lcall
loopne
inc
cmp
lock
or
loop
mov
int3
pop
movsl
rcrb
aam
and
xlat
and
imulb
aas
sub
or
loope
leave
add
popf
inc
rolb
mov
rcll
fidivl
out
adc
sti
sti
cmpsb
and
jns
adc
cltd
cmp
jne
sbbl
loopne
push
pop
pop
dec
jnp
mov
jo
pop
cmp
fs
gs
dec
and
subl
pop
fisttps
jg
xchg
pop
xorb
scas
jmp
iret
sbb
xor
adcl
lret
movsl
mov
sub
pushl
aaa
xchg
mov
movsb
loope
out
mov
jae
aas
sbb
push
push
push
mov
std
mov
cmp
test
push
inc
rclb
movsb
xlat
cmp
jge
mov
jge
xlat
pushf
pop
xor
cli
adc
outsb
jg
mov
jb
push
cmpsb
jmp
pop
packssdw
inc
sahf
dec
icebp
xchg
and
daa
icebp
add
out
cmp
cmpb
aam
loope
sbb
cld
pop
inc
cmc
fimuls
inc
sub
add
repz
mov
mov
xor
sub
cmp
fnstsw
mov
and
sub
mov
pop
out
push
sbb
and
flds
nop
nop
xchg
push
rcl
nop
bound
xlat
and
sub
out
shrl
aam
dec
push
and
test
mov
test
pop
mov
and
not
sub
xchg
cmp
jne
aad
dec
pushf
cmp
push
mov
fstpt
and
adc
fadd
dec
out
dec
iret
sub
push
jne
stos
jecxz
mov
push
loop
out
enter
push
movsl
xor
cmc
mov
xchg
inc
test
fs
sbb
and
inc
in
dec
cld
pusha
jmp
insl
in
icebp
pop
and
mov
xor
mov
das
nop
stos
and
test
enter
mov
lcall
xchg
push
scas
imul
mov
mov
mov
jmp
sub
shlb
lret
pop
push
or
xor
sub
jmp
mov
in
aas
mov
mov
nop
or
and
sub
das
mov
movsl
outsb
and
shlb
or
imul
push
and
pop
fidivl
pop
jae
add
mov
dec
sub
cmp
std
hlt
loope
xchg
or
add
mov
cltd
pop
loopne
ljmp
mov
sbb
push
adc
jnp
mov
push
ror
adc
aam
mov
add
rorb
mov
aad
lock
mov
mov
iret
inc
dec
cli
xlat
insl
cmp
popf
mov
rcr
cmpsl
jnp
mov
mov
fcoms
push
jp
out
xchg
jle
ficompl
push
mov
inc
sub
cli
jecxz
ret
loopne,pt
mov
cltd
or
push
mov
lret
xchg
push
js
add
mov
and
sub
xor
adc
dec
dec
push
fs
or
dec
and
out
pop
dec
cmp
sar
cmpsb
mov
in
adc
pop
scas
mov
out
shlb
xchg
push
xor
push
lds
movsl
test
mov
pushf
mov
xchg
rorb
sbb
data16
gs
mov
xor
jmp
jecxz
jg
call
xor
dec
vandnps
cwtl
imull
add
scas
iret
xlat
aam
jecxz
sbb
test
scas
jne
xchg
shlb
jb
mov
push
ficompl
pop
push
cs
inc
or
mov
dec
xchg
ret
sub
or
cltd
jae
dec
inc
ret
pop
mov
fists
cli
cltd
xchg
hlt
xor
sbb
testl
pop
mov
mov
or
xor
shlb
addb
xchg
dec
sbb
mov
jp
push
push
sub
ret
ror
pushf
push
in
pop
jbe
fdivp
inc
push
sti
ficoms
xchg
sub
cmpsb
mov
fnstenv
jno
xchg
xchg
jp
cmp
pusha
mov
dec
xor
enter
inc
xchg
ja
adc
sti
sbb
push
dec
xor
push
pop
sbbl
imul
cltd
addr16
daa
mov
inc
fldenv
lods
imul
mov
push
and
aad
jne
jns
push
sbb
mov
xchg
push
in
sti
dec
mov
mov
adc
fdivl
test
das
in
cmp
jb
cmp
cmp
sbb
test
shrl
roll
xchg
xchg
loopne
popa
jecxz
and
mov
popf
jg
rol
cmpsb
pop
ljmp
loop
jno
test
loopne
xchg
add
imul
adc
ret
cwtl
mov
insb
sub
inc
mov
imul
jmp
or
sahf
cld
notb
repz
mov
cmpl
sub
in
ja
adc
arpl
aam
cltd
sbb
cmp
fsubl
movl
mov
add
cmp
imul
sarb
in
or
cmpl
sub
mov
push
fwait
insb
push
sahf
xchg
xor
pop
dec
imul
mov
add
dec
lock
stos
adc
and
mov
imul
cmp
bound
adc
pop
mov
xchg
aad
movsl
pop
adc
pop
fnstsw
xor
inc
stc
lds
push
xchg
rcll
or
sub
xor
jae
sub
iret
popf
push
adc
test
lods
movsl
popl
mov
ljmp
into
loope
in
test
sahf
adc
dec
into
push
sub
int
std
dec
sub
fwait
mov
cmp
popf
scas
pop
stos
das
push
out
adc
outsb
in
sar
sbb
adc
pop
adc
mov
loopne
or
or
test
dec
xchg
xchg
xchg
add
xchg
es
aad
jae
xchg
mov
adc
inc
cwtl
cmpsl
sbb
lret
xlat
mov
divb
mov
cli
inc
push
mov
je
shl
in
mov
insl
adc
outsl
scas
add
cmpsb
fstps
fcomps
int3
fimull
jmp
and
dec
jp
push
xchg
movsb
dec
sbb
fstp
mov
decb
jecxz
daa
adc
fnstsw
mov
inc
push
mov
ljmp
cmp
or
cmpsb
imul
jno
sub
and
jmp
mov
adc
jl
aaa
cmp
sub
and
dec
ret
dec
fstl
xchg
fistps
add
xchg
fwait
inc
fdivrl
cmc
test
dec
cld
mov
sbb
shlw
shlb
jnp
insb
cli
mov
mov
inc
jbe
lcall
and
sub
popa
pop
ds
fcompl
lahf
and
pop
out
xchg
stos
dec
jmp
movsb
mov
in
mov
in
in
push
ret
fisubrl
sub
pop
push
xorl
lret
and
xlat
mov
sbb
jl
sbb
aas
fs
xor
hlt
push
testl
sbb
mov
hlt
mov
ss
xor
mov
push
inc
shlb
jne
mov
dec
std
xchg
pop
js
xchg
rorb
imull
test
xor
bnd
call
and
stos
cmp
repnz
cli
in
stos
out
or
mov
addb
hlt
in
sar
sub
push
out
ret
xchg
lods
or
and
fs
push
or
cmp
pop
dec
shl
push
fmuls
dec
mov
add
outsb
cmpsb
or
ss
int
adc
lea
lret
bound
adc
in
pop
jne
or
mov
lret
es
shll
leave
add
jo
insl
imul
es
fcmovb
push
push
flds
add
insl
adc
dec
and
scas
mov
mov
push
sbb
inc
pop
inc
push
out
jo
jl
orl
inc
push
jge
or
mov
xchg
lahf
fcomi
adc
notl
or
push
idivl
fldl
adc
imul
loop
in
jb
fisubl
and
sub
sahf
stos
sbbl
out
push
lods
sub
ficoml
fistps
sub
adc
xchg
hlt
es
adc
mov
test
scas
das
les
lock
adc
mov
dec
push
mov
and
cmp
mov
sub
in
mov
mov
in
dec
pop
aaa
cli
jg
sub
and
and
mov
adc
pop
jg
sbb
cmc
enter
push
add
shll
adc
jmp
mov
push
movsl
xor
int3
pop
push
negb
je
rorb
push
pusha
mov
pop
out
mov
xor
jno
sbbl
iret
pop
mov
inc
add
mov
ret
jmp
mov
and
pop
clc
cmp
movsl
insb
sub
push
push
stos
popf
jl
adc
add
pop
or
lcall
sub
lds
aam
mov
cli
xor
dec
inc
mov
pop
xor
jnp
fnsave
cltd
scas
add
ja
ficomps
or
cmp
pop
cli
jmp
out
aad
pop
rcrb
cmpw
loop
or
jo
push
mov
ficoml
inc
outsb
cmc
xchg
mov
and
xor
cli
adc
dec
scas
inc
rcl
imul
les
in
fsubl
push
jne
or
cmpsb
sbb
mov
dec
mov
pop
cmp
mov
es
sbb
iret
decl
arpl
or
aam
inc
sbb
jge
push
dec
dec
fdivs
idivb
mov
lods
dec
mov
stos
push
push
repnz
sub
scas
into
cmp
jmp
cli
mov
and
cmc
repz
in
jp
mov
dec
xchg
xchg
sbb
dec
mov
out
movsb
or
outsl
and
test
mov
jnp
add
adc
mov
test
dec
mov
mov
sbb
sub
iret
cvtps2pd
loopne
mov
repnz
fdivrs
jecxz
stos
cwtl
imul
pusha
mov
inc
lea
mov
xchg
cmpsl
add
mov
fmulp
push
push
mov
ffree
ret
icebp
cltd
leave
js
sbb
ror
sahf
dec
lods
sub
dec
inc
mov
pop
out
movsl
mov
mov
pop
or
dec
or
orb
mov
pop
rcl
add
out
sbb
dec
das
pop
ja
and
cmpsb
adc
shll
and
cmp
cmpsb
push
jmp
and
push
aaa
inc
mov
test
pop
test
mov
xlat
cmp
in
int
decb
xlat
sbb
int
in
sahf
pop
add
or
test
ret
out
adc
repnz
mov
pusha
push
mov
xchg
ret
mov
into
nop
pop
ja
imul
add
cmp
les
cmp
js
jns
sahf
xor
push
pushf
scas
push
xor
ljmp
push
cltd
repnz
orb
jne
mov
or
lock
shlb
pop
scas
pop
jae
bound
cld
pop
xchg
push
adc
add
pop
scas
mov
xchg
mov
daa
mov
leave
cmpsb
jge
sbb
in
hlt
inc
lret
jp
xchg
leave
ds
sti
push
adc
icebp
cmp
sbb
push
sbb
mov
and
xor
xchg
shlb
mov
jb
gs
imul
scas
aad
outsb
out
aaa
jo
push
and
nop
adc
mov
stos
inc
mov
add
jp
or
xorb
repnz
in
lea
scas
or
ss
imul
sbb
sbb
pushf
stos
mov
and
or
pusha
test
jns
stos
lret
sahf
or
push
fsts
add
jb
ret
test
scas
mov
imul
rcrl
jge
std
and
shlb
pop
in
leave
push
bnd
cmp
je
inc
test
repnz
int
out
lcall
mov
popa
adc
fisubrl
lahf
ss
jle
sahf
inc
fcomps
inc
and
sti
ss
outsb
mov
sbb
dec
and
pushf
aad
mov
sub
inc
mov
pop
cmc
in
xor
lcall
rcl
sub
add
dec
lods
pop
push
pop
or
divb
rorb
ss
adc
lahf
push
push
cmp
mov
cmp
fnstsw
aas
in
mov
push
push
aas
in
xor
cli
add
aam
out
mov
insb
and
jmp
jno
movsl
outsl
cmp
mov
inc
jns
pop
sub
jg
sbb
dec
gs
cmp
loopne
xchg
fs
pop
jge
sbb
sahf
sbb
ret
loopne
xlat
xor
cmpl
les
mov
imul
and
mov
jecxz
push
mov
mov
into
ret
fdivs
push
cmp
stos
inc
inc
ljmp
fdivrs
fldenv
xlat
fstl
xchg
in
test
sub
mov
sbb
lret
lock
mov
lds
popa
pop
pop
inc
xor
outsb
push
cmp
adc
stos
push
insb
xchg
hlt
loop
in
or
cmpsl
push
lahf
fcomip
loope
mov
dec
and
subl
repz
sbb
test
sbb
push
mov
jnp
movsb
xchg
dec
jae
out
divps
jae
lods
nop
sbb
cmp
pop
mov
scas
shl
adc
jb
mov
popl
mov
int
sbb
sbb
cmpsl
fisttps
dec
icebp
mov
sbb
fcoml
out
aas
mov
pop
data16
adc
sbb
mov
inc
or
dec
aad
xchg
orps
lock
dec
jno
inc
adc
popf
jecxz
in
arpl
xchg
pushl
add
lret
mov
mov
or
in
outsb
fildl
pop
stos
sub
repnz
jl
xor
out
add
pop
cmp
xor
and
inc
jae
mov
imul
fimull
imul
imul
iret
xchg
popa
mov
imul
lret
mov
mov
or
cwtl
cltd
shll
dec
jg
and
or
loope
or
test
fisubl
stos
sub
addr16
into
enter
sti
jns
add
andb
testl
lret
push
sbb
push
add
es
addr16
fldenv
mov
lds
mov
stos
roll
mov
test
mov
pop
adc
xor
cld
pop
mov
pop
add
shrl
sbb
addr16
cli
and
mov
sub
pushf
mov
xor
pop
int
ljmp
xchg
fdivp
jmp
xchg
mov
lret
push
inc
mov
scas
shlb
aas
cmp
imul
jbe
hlt
cmp
int3
cli
shrb
fldln2
lds
fdivrl
sbb
pop
sahf
inc
data16
pushf
jno
pop
and
or
push
clc
add
imul
es
adc
jno
or
push
mov
mov
mov
push
lahf
inc
out
adc
sbb
mov
xor
jae
push
lods
push
mov
sbb
cmp
fwait
lcall
sbb
fs
push
frstor
mov
test
pusha
jno
iret
out
adc
mov
mov
ja
cmp
arpl
lods
xlat
inc
mov
imul
mov
push
arpl
test
enter
frstpm(287
orl
subl
lahf
fs
sub
sbb
mov
loop
and
mov
push
cld
sahf
and
mov
fsts
bnd
lahf
fisubrs
add
pop
sbb
pop
push
into
imul
dec
popa
cmp
mov
fldl
or
mov
push
call
enter
nop
fs
shll
dec
sbb
in
rorl
iret
jno
decb
stc
cmc
leave
cmp
iret
popf
mov
mov
lock
and
jmp
xor
xor
clc
mov
icebp
leave
clc
mov
mov
lds
sub
jg
popf
inc
scas
hlt
mov
pusha
cld
inc
and
fildll
mov
inc
fldenv
dec
pop
push
xchg
push
sub
popa
xor
jnp
cmpsl
cmp
outsl
xchg
loopne
push
ret
orl
dec
adc
inc
test
mov
js
jmp
xchg
in
mov
ret
push
sbb
dec
or
xchg
push
sbb
dec
mov
jno
adc
bound
sub
out
sub
adc
push
cli
cmpsb
dec
sbbb
xchg
sbb
cmpsl
mov
lret
jne
lock
cmp
into
cwtl
dec
into
mov
cltd
xor
xchg
mov
cmp
add
loop
sbb
sbb
aam
sbb
test
mov
mov
inc
push
push
fidivrs
leave
idivl
push
and
mov
bound
sub
fwait
xor
push
mov
cmp
dec
dec
je
std
notl
repz
xor
add
dec
insb
int3
pcmpeqb
data16
dec
inc
sbb
cmp
push
clc
std
add
loop
pop
int3
push
and
stos
dec
into
pusha
outsl
dec
mov
arpl
out
sbb
insl
push
pop
popf
adc
sub
std
sub
dec
xchg
xchg
pop
leave
mov
mov
mov
inc
add
xor
push
inc
fbld
out
fsubrl
xlat
pop
mov
test
cmp
adc
std
jle
js
loop
xor
pop
test
hlt
push
push
rcr
sar
stos
aad
push
sub
xor
insb
leave
sub
cmp
mov
push
sbb
cmpb
int
mov
cs
and
rolb
roll
push
mov
and
push
xchg
push
cld
sbb
orl
adc
pop
lods
mov
jne
jae
and
scas
ja
lahf
and
ds
repz
jnp
cmc
popf
mov
stc
lcall
imul
cli
aas
jp
gs
add
int3
cltd
in
scas
push
jno
adc
cltd
and
pop
pop
jmp
inc
dec
sub
ja
pop
in
add
push
mov
mov
mov
imul
hlt
dec
push
dec
lahf
mov
push
out
pop
xchg
outsl
push
pushf
lret
fldcw
ja
gs
loop
addps
lods
xchg
int
push
jmp
arpl
mov
cwtl
or
inc
das
inc
aam
mov
inc
imul
sub
dec
mov
inc
cmp
sbb
xchg
mov
adc
sbb
bound
adc
or
cmp
mov
cmc
idivb
mov
aam
test
mov
or
xchg
push
and
jmp
mov
mov
inc
movsb
cmp
call
xor
pushf
and
sub
cwtl
xor
and
cmp
aam
data16
cmp
pop
je
xchg
jl
orl
mov
dec
mov
out
mov
call
adc
inc
push
aaa
sahf
test
js
into
imul
adc
sbb
mov
lods
adc
sbb
xor
push
pop
pop
sub
pop
and
int3
pop
cwtl
imul
out
xchg
sbb
adcl
roll
lea
jecxz
and
addr16
pop
in
xor
sbb
jb
inc
sub
out
js
push
arpl
lcall
inc
dec
ljmp
inc
mov
adc
fs
xor
jge
aaa
mov
jb
addr16
xchg
scas
mov
out
data16
cmp
sbb
outsb
movsl
sbb
frstor
ja
dec
xor
ds
dec
in
sub
mov
insb
cltd
fstps
and
push
push
inc
fsubs
std
jns
mov
pop
ficompl
mov
push
jge
icebp
ja
pop
xchg
push
popf
mov
enter
inc
imul
out
stos
sub
sti
xchg
mov
xchg
cmpsb
mov
cmpsb
fs
in
data16
xchg
sub
sti
rcl
inc
test
jle
and
dec
and
mov
test
cli
ljmp
rdmsr
fdivrl
cs
add
scas
mov
mov
pop
insb
xor
jmp
fistl
cmp
fistps
repz
mov
out
dec
cmp
xor
jno
mov
push
add
adc
or
shlb
mov
in
imul
mov
jle
or
xor
xchg
adc
orb
sub
adc
std
sub
jecxz
cmpsb
or
xlat
lea
int
das
ss
push
addr16
test
in
add
cmp
pop
cmpsl
aad
jbe
adc
aaa
jmp
sub
mov
push
mov
addr16
subb
inc
ja
xchg
sbb
push
shll
cmp
and
or
out
sbb
add
dec
inc
mov
sbb
stc
sub
push
adc
inc
cmpsl
test
pop
addb
mov
pop
dec
flds
in
cmpsl
sub
jno
stos
roll
xchg
sub
sbb
push
add
scas
inc
fnstcw
out
push
cltd
pop
sub
push
sub
jno
sub
pop
and
pop
rclb
push
fcom
mov
pop
fildll
or
mov
jnp
push
sbbl
or
scas
insb
cmpsl
jnp
push
inc
dec
add
out
sub
pop
dec
sub
mov
lret
inc
add
movsb
in
lea
pushf
or
stc
push
mov
dec
dec
mov
adc
test
jbe
dec
fsubs
xlat
les
leave
inc
cmp
inc
inc
adc
test
mov
lods
cmpsb
loopne
push
in
jl
call
jns
dec
scas
out
in
inc
cs
pop
jg
add
push
cmp
in
pop
cmc
add
data16
mov
sub
push
int
fsubrl
lock
sahf
sub
lahf
push
cmp
cmp
jle
test
ss
cmc
fldt
xchg
pop
cmp
mov
fwait
jmp
inc
stos
ja
mov
push
divl
pop
add
push
push
das
push
mov
mov
mov
aaa
movsb
rorb
loopne
fimull
or
aam
andb
setge
shrl
xchg
adc
mov
hlt
push
push
ds
push
push
xor
mov
push
and
push
movsb
test
pop
jmp
jne
mov
xor
sbb
in
cld
cmp
leave
js
sbb
sbb
icebp
in
repz
enter
repnz
xor
icebp
icebp
dec
out
sub
adc
mov
imul
sahf
aaa
pop
add
mov
sbb
pop
mov
pushf
sub
lea
xchg
aad
xor
mov
mov
mov
push
or
aaa
mov
sub
aas
xor
add
push
add
cwtl
stos
das
nop
jnp
mov
repnz
mov
and
fsubrs
cltd
mov
fstp
inc
subl
sti
xchg
pushf
into
pop
fwait
mov
popf
xchg
mov
popa
out
jbe
push
jb
sti
xor
mov
jae
mov
hlt
xor
push
in
mov
cmp
mov
sbb
aam
scas
dec
or
sub
jbe
data16
ss
popa
jae
outsl
sbb
mov
mov
das
pop
xchg
mov
inc
mov
sub
adc
ds
and
push
out
lea
stos
xchg
mov
imul
js
pop
mov
outsl
sti
inc
popf
cmp
lret
cltd
xor
fidivrl
xchg
inc
mov
inc
fs
xchg
mov
xchg
jl
shl
divb
aas
and
mov
inc
sub
addr16
aas
sbb
out
mov
movsl
pop
cld
lea
outsl
mov
fcompp
xchg
mov
rcl
outsb
pop
jle
test
arpl
add
mov
adc
cwtl
adc
test
dec
repz
inc
pushf
popa
outsb
inc
mov
inc
hlt
fwait
jae
mov
into
jnp
mov
mov
lret
outsl
test
fisttps
aam
and
iret
and
int
pop
pop
int
popa
inc
add
xor
sub
cli
out
ljmp
iret
xor
sarb
or
ret
into
test
cwtl
xchg
fwait
outsl
daa
rorl
push
test
push
mov
mov
cmp
addr16
fcoms
push
andb
add
test
mov
stc
mov
dec
jmp
cmp
ret
notl
mov
shll
into
aas
sahf
xlat
icebp
cld
push
fimuls
push
cmp
sbb
sar
stc
ss
les
sarb
repz
out
sub
and
fucomip
hlt
pop
mov
xchg
push
sub
lret
push
lds
dec
insb
inc
aaa
into
xchg
add
ret
and
jg
cmp
and
and
je
cmp
mov
js
mov
popf
add
ljmp
inc
adcb
int3
sbb
lds
shll
xorl
push
xor
mov
nop
push
fwait
movsb
lret
xchg
in
xchg
inc
xor
mov
and
pusha
cli
and
pushl
hlt
fistpl
pop
fbstp
out
dec
ja
call
and
xchg
subl
inc
cmp
dec
adc
mov
mov
ds
jecxz,pt
sti
pop
pop
pop
lret
push
je
shlb
daa
sbb
add
pop
in
sub
divb
xorl
sub
fbstp
jg
in
aam
sub
nop
mov
push
xor
pop
push
dec
jb
and
inc
lahf
fcompl
fwait
adc
mov
push
pop
xchg
lock
negb
inc
sbb
jp
and
xor
mov
pop
dec
popf
addr16
mov
mov
xchg
in
icebp
add
mov
mov
inc
mov
fwait
pop
jp
inc
les
and
popa
iret
call
mov
push
dec
xor
cld
jmp
push
cmp
call
push
sub
sub
push
js
pop
push
jg
jecxz
fwait
out
cmpsb
and
lret
sbb
hlt
mul
bsf
and
adc
stos
je
add
push
repnz
mov
xchg
adc
dec
mov
jns
in
scas
outsl
pop
jecxz
cwtl
repnz
inc
test
inc
adc
cmp
shrb
mov
cmc
ja
ror
adc
cmp
pop
mov
popf
sub
mulb
lods
adc
inc
push
hlt
outsl
outsb
testl
mov
sub
out
insl
inc
or
sbb
sub
xchg
mov
adc
cmp
int
xor
fs
pop
adc
cmp
lock
mov
push
mov
mov
jmp
jg
jne
ss
or
cmc
jbe
pop
jge
cmp
je
xor
iret
jg
jo
jb
lret
xchg
mov
scas
jl
push
xor
pushf
cmpsl
outsl
rolb
mov
xchg
xchg
jg
outsl
test
xor
mov
pop
pushf
or
stos
sti
testb
push
imul
rol
pop
iret
mov
cmpsl
jg
lds
andb
stos
jno
in
mov
in
jmp
insl
icebp
sbb
jmp
sub
adc
push
pop
jbe
es
sahf
mov
cmp
pop
xor
lods
mov
lock
jle
fsubl
scas
jg
lock
mov
movsb
hlt
mov
je
ljmp
call
fsubrl
enter
enter
pop
daa
cmp
adc
int
adc
xor
or
pusha
lods
mov
inc
fists
mov
adc
push
cmp
sti
xchg
lret
cli
sbb
dec
sub
inc
roll
loopne
dec
dec
out
and
mov
cs
add
push
stos
or
mov
imul
enter
xorl
loop
inc
aad
cmpl
fdivrp
jne
cwtl
mov
pop
xorl
in
push
aad
dec
add
jne
in
mov
push
jb
out
or
lock
ret
call
mov
cmp
lret
push
rol
testb
and
repz
outsb
dec
ret
data16
adc
add
shlb
les
js
cmp
fmuls
cmp
idiv
addr16
bound
push
leave
sub
fisttps
cmp
pop
popf
loop
adc
xchg
inc
out
rol
ret
or
shll
sahf
outsl
sub
mov
icebp
inc
pushf
fnstcw
scas
sub
int3
aad
cmpsb
cmp
sbb
sub
nop
sbb
sub
and
xchg
push
mov
repnz
and
je
idivb
jmp
mov
mov
sbb
nop
xor
rcl
adc
rcrb
push
repz
xchg
popa
mov
mov
cmpsb
ss
pop
and
or
movsl
out
or
jmp
push
xor
mov
mov
sub
xchg
lods
pushf
fmull
xchg
pusha
lods
fsubl
mov
int3
ret
add
push
and
add
sahf
pushf
popa
pushl
dec
mov
mov
flds
jnp
jg
enter
adc
mov
hlt
mov
inc
inc
jns
cmp
pop
and
or
jecxz
jge
mov
sub
orl
js
shll
jge
push
js
sti
cmp
adc
and
inc
push
outsl
fbld
or
aad
mov
mov
mov
jge
fcmovnu
pop
fs
in
add
mov
into
rorb
push
fcoml
xchg
pop
rol
cwtl
sbb
sahf
or
cs
push
pop
les
bound
ss
cwtl
pop
cld
jl
pop
jg
imulb
leave
or
in
sbb
fs
mov
shll
iret
add
outsb
jno
sti
xchg
sbbb
inc
adc
mov
xchg
nop
push
xchg
sbb
dec
out
es
imul
adc
jb
push
imul
mov
insl
cwtl
ss
xchg
rclb
mov
dec
xor
movl
mov
notb
push
fs
dec
adc
jecxz
rcll
xlat
iret
sub
pop
icebp
cmp
roll
push
mov
ret
cmp
pop
aad
popf
adc
fmulp
movsl
rep
and
rol
js
sbbl
jle
std
add
cmc
iret
add
fnstsw
test
adc
xor
stos
dec
fsts
jl
imul
adc
bound
in
popa
jnp
mov
adc
aas
dec
div
xchg
jg
mov
in
xlat
and
cmc
mov
sbb
in
lret
ljmp
fs
adc
mov
imul
pop
cmp
mov
xchg
and
icebp
out
lock
xchg
andl
xchg
sbb
pop
pusha
dec
mov
cmp
jl
sti
movsl
lret
sub
mov
sub
adc
cmp
add
lret
jg
adc
cld
fldt
lahf
cltd
xor
mov
sbb
ja
and
mov
adc
jmp
or
push
aaa
add
dec
push
jbe
jmp
jge
mov
mov
rclb
jle
shrl
aad
adc
fwait
cmp
jp
xchg
cmp
push
fists
fwait
gs
add
xchg
add
push
jmp
cmp
inc
dec
out
cmp
mov
pusha
sub
xchg
pop
movsl
movsb
add
or
les
movsb
add
and
cmp
mov
or
es
lret
mov
out
mov
lds
push
popa
clc
incl
aas
push
test
sbb
sbbl
push
aaa
in
mov
repnz
sub
lret
inc
call
outsl
test
jmp
iret
sbb
test
jp
mov
mov
cs
cmp
dec
add
add
leave
fsubs
cmpb
mov
push
mov
push
pushf
mov
pushf
add
pop
adc
and
aam
or
cmpsb
imul
mov
jg
shll
fs
stc
adc
and
leave
xchg
add
push
mov
aas
imul
dec
add
push
out
ret
cwtl
xor
dec
push
scas
jl
movsl
sbb
loopne
in
jae
push
xchg
scas
xor
sub
xorl
rcl
into
sbb
pushf
loopne
jl
fcmovnu
outsl
add
in
mov
push
adc
inc
cmp
ja,pt
andb
mov
mov
repnz
aad
pop
shrl
pop
or
aaa
jl
fcom
gs
pusha
add
fadd
pop
xchg
in
mov
cmp
adc
pop
jp
pop
gs
shrb
aaa
inc
rorl
scas
lahf
aaa
mov
out
ds
je
sbb
ds
adc
fnstenv
scas
icebp
pushf
pop
rcrl
addr16
test
add
into
push
lock
push
mov
in
jg
addb
scas
loope
add
imul
gs
and
or
test
sysret
es
bnd
pop
dec
movsb
sub
ja
and
into
and
repnz
insb
sub
xor
xor
test
cmp
movsb
mov
dec
insb
xor
jb
add
cmc
scas
mov
pop
loop
loope
fnstenv
mov
mov
enter
mov
shll
xor
mov
out
or
jbe
push
sarb
inc
dec
stos
les
sbb
shrb
mov
out
ror
adc
push
cmp
hlt
jl
mov
jae
xchg
std
ss
push
fimuls
jbe
out
jae
mov
mov
inc
addr16
roll
not
jno
sbb
add
push
lea
jo
pop
mov
mov
push
sub
push
je
adc
jmp
xchg
mov
movsb
jp
sub
mov
shlb
inc
cmpsb
cmp
push
inc
dec
adc
mov
in
fwait
and
jo
rolb
add
and
das
jl
and
testl
arpl
mov
pop
jecxz
cmp
or
dec
mov
test
in
js
mov
push
pop
or
call
cmp
pop
test
push
loope
cwtl
in
sub
loopne
xor
insl
pushf
cmc
or
pop
jnp
ret
mov
in
and
imul
push
lret
daa
xchg
adc
cmpsb
pop
lcall
lahf
lods
push
sahf
push
mov
rep
mov
fcomi
mov
fmuls
sbb
nop
orb
sbb
push
shll
pop
call
adc
divl
pop
mov
hlt
subl
or
js
dec
xchg
mov
cmp
and
adc
repz
jg
rolb
xchg
outsb
lret
test
mov
xchg
out
inc
and
and
pop
jbe
add
fsubrs
sub
mov
mov
stc
add
mul
fsubr
xor
jo
xor
cmp
insb
dec
sub
and
xchg
xor
cmpsb
mov
cmpsl
mov
ret
add
fs
aad
sub
xchg
xchg
or
mov
inc
out
inc
test
mov
scas
push
call
xor
sub
ds
push
sub
jbe
int
outsb
adc
int
mov
sbb
mov
push
push
inc
fldenv
mov
loope
push
enter
or
sahf
dec
pop
jmp
pop
mov
inc
jle
sub
mov
push
mov
jg
ret
fdivrp
push
xor
dec
dec
lods
jo
fidivrl
cmp
inc
add
add
push
aas
and
popf
mov
dec
pop
dec
in
xor
clc
movsl
push
sub
aaa
sub
xchg
jnp
adc
mov
push
add
xlat
arpl
push
sub
jl
mov
cmp
repz
scas
mov
into
lahf
movsb
imul
fabs
and
sub
scas
or
and
and
repz
xor
push
cli
clc
jns
inc
nop
push
sbb
arpl
cld
mov
push
cmp
loopne
sahf
inc
popf
lds
xor
mov
es
or
cmp
in
pop
inc
test
push
xor
jae
sar
orl
cmpsl
push
jnp
sbb
xchg
lea
or
dec
sub
orl
js
mov
xor
xor
ds
ret
push
jl
push
negl
push
jo
inc
fdivrs
jecxz
sbb
jl
cmp
pop
in
jmp
in
cmpb
adc
cmc
cmp
jno
div
xchg
cmp
incb
pop
and
jno
mov
inc
loop
jae
sub
add
mov
dec
cmp
push
sub
push
or
jae
lcall
scas
arpl
and
ja
and
push
sbb
packssdw
pop
mov
test
out
inc
pushf
mov
mov
dec
push
xchg
daa
and
in
insl
sbbb
das
stos
imull
in
imul
mov
mov
jae
cmp
sarb
dec
shrl
repz
in
roll
cld
fisubl
add
fsts
sbb
scas
xor
jmp
aam
sub
sbb
mov
add
bound
mov
sub
xchg
dec
daa
data16
rcll
sbb
or
and
mov
imul
xor
push
ret
lods
mov
xchg
out
push
cs
repz
dec
stos
jl
stc
int3
daa
setge
or
test
jecxz
pushf
cli
les
push
mov
add
stos
test
imul
push
test
push
clc
lea
jmp
or
cmpsb
sub
ljmp
jl
push
or
add
aas
stos
dec
jl
mov
lea
sub
test
rcrl
gs
pop
mov
dec
inc
int
xor
mov
dec
mov
int3
iret
jl
or
mov
dec
jg
mov
outsl
fs
sbb
mov
pop
hlt
imul
outsl
pusha
jmp
xchg
mov
push
push
loop
push
icebp
jl
mov
rcr
fmul
lods
push
adc
push
out
js
sbb
cmp
jp
pusha
jne
sti
orb
fwait
dec
push
int
sub
push
movsl
cmpsb
sub
outsb
std
mov
xor
cmpb
or
and
data16
fldl
inc
iret
fcmovu
es
adc
jne
lods
stos
xchg
inc
xor
mov
lock
fisubs
xor
mov
inc
js
bound
sahf
pop
sbb
enter
int3
pushl
mov
push
or
or
ffreep
push
or
or
enter
adcb
and
inc
push
cwtl
jmp
and
jns
inc
add
bound
out
jg
std
cli
mov
dec
fidivrs
mov
xchg
mov
mov
xchg
repz
data16
mov
cmp
int
popl
push
pop
out
int
clc
pushf
les
or
js
jnp
es
les
inc
push
cmp
mov
fidivl
enter
sbb
repz
dec
and
pusha
hlt
push
inc
hlt
dec
mov
mov
xchg
in
ret
unpcklps
xor
cmpsl
cld
je
sbb
cmp
and
mov
btr
mov
cmp
aaa
dec
pop
xchg
xchg
icebp
test
aam
ja
push
xor
mov
xchg
mov
cmp
cmp
fisttpll
in
xor
cli
and
xchg
xchg
mov
jns
push
jo
mov
push
pusha
dec
sub
lret
ds
xchg
or
or
mov
push
ds
mov
push
mov
mov
push
stos
sbb
jmp
sbb
pop
xor
mov
outsb
lock
mov
inc
lods
mov
adc
lods
adc
mov
out
pop
lds
cmp
pop
jge
inc
mov
loopne
jp
les
pop
push
mov
jbe
dec
xchg
push
nop
aad
xor
jne
cmp
js
add
push
xchg
push
jl
dec
jns
or
sub
sub
clc
lds
jge
sbb
xchg
movsb
dec
dec
sbb
mov
sbb
cmp
jo
xchg
sub
jno
xchg
push
push
fldl2t
push
ret
hlt
cmpsb
xor
subl
in
cmc
adc
cmpsl
jb
push
xor
leave
int
mov
scas
and
mov
dec
xchg
movsb
sbb
aam
pop
sub
arpl
into
xor
rorl
mov
nop
scas
js
or
mov
xchg
mov
cli
addr16
mov
inc
jno
lret
jnp
std
mov
mov
xlat
xchg
dec
push
sub
js
inc
imul
mov
or
adc
add
jle
imul
xor
cli
insb
jns
mov
out
test
mov
pop
push
pop
mov
mov
insl
popa
addr16
sbb
ljmp
adc
outsl
and
add
xor
popa
dec
pushl
outsl
fsts
imul
fnstcw
xor
mov
mov
xchg
das
in
scas
inc
jno
lds
add
inc
cmp
jne
dec
into
mov
jecxz
pusha
push
lock
cmp
insl
jecxz
push
xor
or
and
pop
mov
push
and
cmp
adc
stos
mov
fmul
jbe
jl
bound
xchg
xchg
daa
out
in
inc
ss
mov
repz
xchg
push
lret
aad
lahf
cmpsl
lret
adc
add
push
jb
repnz
icebp
inc
cmp
jno
mov
inc
das
and
mov
xchg
mov
add
push
popa
dec
subb
mov
add
sub
nop
jmp
and
and
or
mov
mov
ficompl
mov
negl
aas
mov
std
sbb
mov
nop
int3
push
jb
dec
inc
mov
test
call
inc
and
and
mov
xor
dec
lret
out
or
sub
add
jmp
push
repz
push
das
jp
and
jmp
js
sti
imul
test
pop
fwait
adc
mov
dec
mov
aam
sti
or
into
or
adc
jl
jmp
jnp
scas
gs
mov
mov
mov
xor
nop
adcl
sub
cli
mov
jno
cmpsb
pushf
push
or
out
xor
dec
dec
leave
jmp
je
notb
lret
jl
xor
test
lcall
loopne
stos
cmp
pop
ja
mov
arpl
mov
jmp
aaa
push
dec
inc
inc
mov
add
cmpl
sarl
push
push
test
xor
pop
flds
xchg
aaa
inc
xor
mov
shrl
pop
cld
add
hlt
dec
xchg
jne
movsb
xchg
enter
lods
shr
lock
movsl
add
das
sub
cmp
dec
call
mov
test
and
test
and
mov
js
out
jmp
iret
pop
pushf
sbb
cli
sahf
enter
lds
in
out
fiaddl
mov
aad
adc
add
hlt
dec
cmp
sub
jp
data16
sbb
popf
arpl
xor
mov
jb
int3
scas
push
or
sbb
sarl
inc
jecxz
adc
add
xor
xchg
xor
jecxz
pop
mov
adc
mov
inc
fs
add
jb
add
fisttps
xchg
sbb
dec
cmp
xchg
add
cmp
sub
xchg
lret
xchg
aas
out
in
cs
aam
xorb
ss
mov
dec
xlat
addl
pop
and
jae
imul
out
rcrl
push
mov
xchg
cltd
orl
sarb
pop
movsl
repz
mov
stos
push
ja
jle
jo
pushf
push
push
mov
jo
movb
fildl
aas
mov
cmp
push
adc
lret
jo
inc
xchg
subl
fsubrs
dec
aas
fisubs
bound
loope
and
push
cmp
mov
push
xchg
mov
and
fsubl
add
ljmp
mull
mov
inc
xchg
cld
hlt
inc
cmpl
xchg
adc
jns
xor
push
test
dec
mov
adc
mov
or
and
sub
cmp
in
mov
mov
loope
add
incl
int3
hlt
push
bound
lret
fstps
adc
sub
les
mov
ficompl
repnz
sub
popf
loop
fsts
push
adc
scas
xchg
cmp
stos
and
lahf
jl
or
push
ret
inc
aaa
inc
sub
mov
mov
and
jno
push
add
inc
aas
call
nop
fs
or
cmp
test
aas
inc
mov
cmp
sub
ret
cmp
mov
and
lods
std
sub
mov
jbe
or
jg
hlt
test
rcr
pop
shlb
insb
mov
sar
jae
mov
subb
in
cmp
popa
in
movsl
shlb
push
std
sbb
ret
ja
scas
jns
adc
dec
jns
cmp
and
mov
adc
jg
icebp
gs
ret
je
add
xlat
aam
gs
mov
stos
cmpsb
or
cmpsl
fdivs
xchg
lods
aad
jbe
mov
jbe
pop
jle
inc
repz
in
xchg
call
repnz
or
outsl
push
mov
mov
xor
mov
sub
jbe
sbb
mov
std
loope
pop
mov
pop
pop
mov
fsub
adc
hlt
popa
sub
push
pop
dec
sbb
or
mov
in
arpl
jbe
fstl
addl
inc
push
fstpt
push
xor
mov
cmp
out
xchg
push
and
push
and
rclb
adc
jmp
mov
test
jg
test
call
or
ret
xchg
call
sub
and
stos
fimull
dec
lds
icebp
scas
push
xor
stos
pop
cmp
jl
sti
out
mov
and
fadds
aad
or
jb
dec
ficoms
push
sub
mov
pop
jb
mov
movsb
adc
nop
pop
cmp
xchg
sbb
out
xorb
subl
loope
insb
jmp
sub
mov
mov
mov
xor
int3
jnp
xchg
mov
nop
mov
jle
pop
jl
bound
push
or
lock
andb
bound
int
fs
xchg
push
movsb
cmp
cld
mov
mov
jns
idivb
nop
inc
test
pop
lret
ljmp
push
lods
push
push
js
mov
faddl
test
inc
cmp
lods
dec
sbb
iret
or
pop
gs
jo
hlt
or
push
cmpsb
in
adc
or
bound
les
mov
out
xchg
lods
sub
pop
lahf
mov
xor
pop
in
cmp
aaa
std
mov
push
or
pop
pop
dec
icebp
fdivl
es
dec
outsl
and
ret
mov
push
jp
jmp
int3
mov
push
jmp
rcll
mov
add
push
mov
in
hlt
mov
jmp
adc
je
fwait
cmp
mov
shlb
inc
ret
jbe
sub
pop
or
ficoml
in
imul
add
insb
cli
adc
aas
and
pop
rcrl
test
adc
adc
pop
mov
lea
mov
or
sbb
xor
xor
jmp
jge
and
insl
jb
jbe
dec
or
arpl
aam
daa
cwtl
lock
inc
cmp
or
mov
mov
inc
add
xchg
loop
xorl
pop
aaa
sbb
jg
jnp
mov
je
out
cmp
mov
lock
gs
in
and
pop
jle
std
add
icebp
sbb
xchg
in
pop
pop
mov
mov
push
movsb
xchg
adc
sahf
stos
mov
jb
cmp
insl
mov
scas
push
iretw
sub
and
jmp
cwtl
inc
dec
fstps
stos
sub
jne
push
filds
xchg
mov
jle
test
sub
fiadds
lcall
ja
hlt
dec
jle
int3
dec
mov
mov
xchg
jb
lret
insb
push
nop
jp
mov
and
addr16
mov
cmp
ljmp
push
cwtl
in
call
loope
icebp
lods
sub
addb
inc
jecxz
sub
sub
sbb
out
cli
shl
xchg
sub
cmpsb
push
and
dec
mov
cmp
xchg
mov
push
xchg
icebp
sbb
mov
cmp
xorb
cmp
sub
sbb
xchg
jg
sub
call
out
sbb
jle
ss
addr16
sbb
xchg
mov
sbb
lds
in
lret
push
mov
das
inc
mov
jbe
cmpsb
mov
and
pushf
nop
out
rcl
lret
daa
cwtl
push
xchg
push
bound
es
sbb
cmpsl
add
pop
push
data16
fcoms
xchg
loop
nop
add
or
outsl
fdivrl
popa
arpl
fidivl
push
mov
sub
mov
xchg
mov
or
mov
cld
iret
xor
adc
test
and
sub
jmp
push
pop
sub
push
push
jecxz
aaa
scas
fistps
push
dec
leave
sbbb
fcomps
jnp
mov
add
lock
loopne
jnp
push
arpl
stc
addr16
inc
or
in
nop
out
cmp
aas
fwait
sahf
xchg
data16
add
lods
punpckhwd
xor
jb
inc
inc
hlt
cmp
out
std
fsubs
mov
clc
outsb
push
add
xchg
mov
cli
out
mov
outsb
out
das
test
inc
jmp
jge,pt
scas
ret
pop
out
cmp
in
push
fdivp
mov
outsl
or
push
call
cld
mov
test
cltd
in
add
mov
add
jge
stos
rclb
push
mov
lods
xor
and
sbb
into
cltd
xchg
arpl
xor
test
loopne
mov
mov
lret
js
pushf
scas
push
bound
out
outsl
cmp
inc
mov
mov
mov
adc
repnz
mov
cmp
fcmove
sbb
add
sub
mov
rcll
sbbb
push
pushf
mov
ret
insb
or
fadd
outsb
xchg
dec
flds
fisttpll
cmpsb
js
pop
or
data16
movsb
mov
xchg
ret
out
pop
ret
imul
andb
fcompl
loopne
in
mov
lods
inc
cmpl
sub
adc
test
sarl
sub
ljmp
adc
sahf
fadd
and
and
mov
push
dec
fistpll
fsubp
xchg
sti
movsl
fstpt
mov
aaa
lret
bound
dec
xor
repz
mov
push
ficoml
and
daa
leave
cmp
jo
iret
and
js
mov
out
sbb
xchg
out
xor
or
cmp
pop
gs
mov
movsl
out
dec
mov
sub
jns
xchg
dec
mov
aam
testb
loop
dec
lret
in
pop
jle
cmp
outsb
shll
pop
jp
push
test
jp
rorl
lods
hlt
repnz
dec
rolb
fildl
and
sub
out
das
out
xor
ljmp
mov
aaa
jmp
mov
mov
mov
mov
out
mov
add
cmpsb
or
add
jmp
dec
or
mov
and
das
jle
fstpl
out
jle
lds
lahf
add
fstps
lea
insb
lret
sub
arpl
aam
in
jb
out
outsl
lcall
cmp
lods
pop
sbb
clc
pop
stos
mov
mov
push
add
fiaddl
mov
pop
sbb
or
xchg
xchg
jno
scas
jge
push
or
insl
clc
cmp
sub
mov
jle
mov
xchg
xor
xchg
and
cs
movsl
dec
ror
das
imul
xor
mov
jmp
adc
stos
clc
shr
and
mov
mov
xor
pop
scas
outsb
mov
jns
push
xor
sti
jp
scas
repnz
dec
int3
and
cmp
and
add
fisubs
in
call
xchg
mov
inc
xchg
mov
xor
dec
adc
mov
subps
and
xchg
jle
mov
push
add
sahf
jo
pop
cmp
sahf
dec
mov
pushf
mov
aad
mov
add
xor
xor
cwtl
enter
inc
mov
mov
push
cmpl
std
jns
loop
mov
pop
cwtl
push
xor
test
subps
jl
cwtl
sub
je
repz
cli
cmc
pop
scas
mov
cmc
mov
and
push
ljmp
and
mov
dec
js
pop
ds
jl
adc
and
push
mov
aam
cmp
lods
and
cmovnp
add
insb
cmpsl
xchg
fadds
or
sbb
mov
pop
push
aad
add
mov
outsb
sub
scas
pop
cmc
data16
hlt
push
inc
jns
out
aas
push
sar
fnsave
aad
jae
jns
inc
bound
dec
adc
ret
mov
out
inc
xchg
jne
xor
rorb
xchg
sub
xchg
inc
push
mov
imul
sbb
cmpsb
enter
or
mov
dec
jmp
xor
mov
jo
sbb
cwtl
sbb
sub
popf
adc
mov
dec
mov
or
sqrtps
or
test
cld
outsl
xor
jbe
loope
pop
mov
sub
and
add
or
nop
dec
popa
xchg
ljmp
clc
bound
mov
lcall
lods
push
int
xchg
sub
repnz
push
and
dec
push
rorl
inc
stc
pop
jb
pop
lret
fidivs
out
je
pop
jg
push
dec
aaa
and
sti
aaa
push
or
push
insb
sub
mov
mov
loope
aas
popf
scas
bound
jecxz
dec
hlt
mov
pop
mov
aam
stc
frstor
fimull
shrb
mov
mov
jmp
rolb
cmp
and
sbb
ficompl
stos
mov
xchg
pop
mov
xor
mov
aaa
ds
out
cmpsl
cmp
cmp
xor
pop
cwtl
sub
jbe
into
cmp
and
jb
mov
push
loop
and
mov
in
dec
outsb
lock
add
test
negb
mov
outsb
pop
and
mov
std
movsl
push
xor
sub
push
cmc
push
jmp
int
pop
js
cmp
xchg
dec
push
adc
jae
rcll
arpl
outsl
sbb
jmp
sbb
test
out
dec
adc
das
pop
adc
ss
xchg
xchg
and
adc
insb
inc
mov
sbb
push
inc
inc
int
jne
mov
xchg
rcrb
pop
push
or
lcall
scas
xor
ja
ret
sub
ljmp
cmc
dec
fdivrs
std
in
aaa
pop
dec
xor
pusha
mov
jmp
clc
pop
add
push
out
lret
lcall
mov
in
aad
push
inc
hlt
jb
es
push
sub
in
xchg
imul
pop
xor
push
push
out
call
push
cmp
xlat
xor
jnp
jno
mov
pop
cs
add
or
rorl
mov
adc
in
xor
sub
jb
in
mov
loop
xchg
shlb
pusha
cmc
jle
xchg
cmpsb
mov
cmp
add
or
mul
pop
mov
cld
jae
ret
leave
out
sbb
sahf
in
ljmp
test
mov
jle
jo
outsl
mov
pushl
xchg
arpl
adc
pop
fwait
aaa
jnp
stos
nop
jne
cmpsb
addl
dec
repz
push
push
sbb
mov
mov
out
pop
lea
pop
or
pop
push
cmp
pop
incl
adc
push
into
iret
insl
es
jne
pop
adc
inc
cwtl
dec
stos
popf
test
jb
ds
addr16
je
testl
mov
cmpsb
int3
fwait
mov
aas
mov
and
push
sbb
fs
jge
pop
xor
xchg
lret
jp
push
cmp
sbb
pop
cmc
mov
add
jne
xchg
inc
add
adcb
lcall
pop
int
or
js
xchg
aad
pop
shl
lret
lods
pop
testb
das
lcall
xchg
xchg
jae
pop
or
leave
in
mov
xor
stos
sbb
imul
push
mov
xchg
add
cltd
add
iret
and
add
sbb
mov
sub
jp
shlb
pop
xor
fcoml
mov
imul
push
js
dec
out
out
adc
sahf
out
repnz
cld
mov
jecxz
add
mov
mov
jg
jge
sarl
and
mov
aad
and
xlat
add
ficomps
push
inc
int
lea
mov
dec
xor
push
xchg
pop
mov
gs
ss
push
nop
enter
push
stos
cmp
jecxz
and
sbb
sub
sub
in
out
loop
or
adc
jbe
or
stc
cli
xor
fwait
adc
test
adc
or
add
sbb
dec
mov
data16
and
cli
dec
fcoms
pop
lret
repz
jns
nop
push
shl
dec
adc
cwtl
int3
dec
cmp
push
adc
jnp
adc
addr16
push
cmp
mov
jbe
xor
out
das
arpl
push
add
ret
jns
cmp
pusha
icebp
adc
mov
mov
ss
aam
aam
in
negl
hlt
and
scas
icebp
ljmp
aad
jecxz
sbb
mov
cld
fcoml
fsubs
mov
popl
xchg
adc
repz
xchg
mov
and
xor
xchg
in
xor
mov
sbb
pop
pop
push
xlat
hlt
jl
pop
data16
jg
das
push
push
je
imul
xchg
shll
cmp
fidivrs
sbb
sbb
mov
sbb
ffreep
pop
or
std
fmuls
shr
xor
jecxz
cmpsb
outsb
adc
inc
gs
outsb
inc
nop
test
push
pop
inc
in
mov
adc
lea
inc
scas
jnp
in
mov
jl
insl
stc
iret
iret
sbb
pop
dec
xor
inc
in
aad
mov
jp
jo
jle
sti
cli
aam
sub
iret
cmp
or
mov
pop
test
rcr
jecxz
jo
xchg
pop
or
je
mov
pop
jae
mov
std
lods
gs
jbe
xor
enter
into
aam
test
sub
js
cs
insb
xor
inc
xor
push
faddl
loope
pusha
arpl
push
icebp
lret
jmp
or
cs
and
inc
ss
xchg
into
xor
enter
ja
cli
sbb
jbe
add
hlt
cmc
xchg
mov
imul
pop
stos
inc
inc
mov
movsb
or
fisubs
leave
mov
mov
fadd
pop
lret
cmp
push
lods
das
std
pusha
scas
mov
mov
call
cmc
xchg
push
jns
subb
int3
and
leave
repz
repnz
aaa
add
cmpsw
std
jl
jmp
pop
or
stos
adc
push
aam
mov
mov
cmp
icebp
ret
cmpsb
out
mov
jns
sahf
mov
xor
pop
shr
adc
push
imul
and
inc
or
or
push
or
ret
dec
lods
stos
sub
mov
xchg
pop
xchg
lock
out
dec
and
mov
adc
daa
cmp
sub
cmpsb
add
push
sbb
ja
test
lret
into
cmp
dec
push
loopne
cli
pop
push
lods
jp
pop
inc
mov
xor
cmp
sub
sub
dec
mov
jg
and
inc
or
test
jae
add
pop
mov
notl
sbb
cs
lock
sahf
es
fsubrs
adc
in
fwait
jle
flds
dec
hlt
lret
lahf
leave
and
pop
adc
adc
adc
mov
xor
ds
data16
jo
scas
mov
mov
push
xor
sbb
pushf
jecxz
and
push
into
fsub
and
gs
xchg
push
shlb
out
into
mov
stos
sti
sbb
adc
sbb
push
add
testl
xchg
jmp
or
lods
xchg
pusha
subl
inc
or
fstl
sbb
popa
nop
jle
ret
lods
fisubrs
icebp
cs
inc
adc
jns
popf
lods
pop
or
aam
and
cwtl
inc
sub
into
or
push
test
and
iret
sub
imul
clc
daa
pushf
out
call
pop
dec
jno
shl
sub
mov
rorl
icebp
imul
imul
cmpsb
sub
testb
jo
cmp
sbb
arpl
fmuls
push
pop
and
push
jge
test
negl
rorb
dec
mov
popf
sbb
and
sub
sahf
mov
movd
aaa
push
push
into
mov
lock
xor
adc
js
mov
push
shrb
aam
orb
pop
sbb
mov
fstpt
sub
iret
outsb
mov
scas
mov
mov
add
in
jae
les
and
dec
mov
push
pop
icebp
jp
or
push
inc
adc
mov
ret
push
dec
jmp
mov
pop
outsb
push
or
mov
cmc
cmp
fildl
nop
xchg
mov
inc
sub
testb
or
pop
jmp
cmpsl
insl
xorl
aad
aam
xor
mov
jle
jl
xlat
in
mov
imul
dec
int
jns
add
adc
push
mov
mov
fimuls
faddl
in
pop
into
xor
cmp
xchg
pop
xorl
insl
sub
jecxz
push
sub
loop
sub
stos
inc
pop
int
sahf
sub
pop
je
jmp
inc
xchg
pushf
jmp
jne
fcoms
cltd
loope
pop
and
sub
mov
xchg
mov
div
fidivrs
fs
push
jecxz
sbb
call
cmpsl
pop
pushf
push
gs
mov
adc
pop
jg
mov
add
sub
sub
dec
je
and
mov
cmpsb
sbb
cmp
dec
pushf
pop
repz
add
ret
outsb
inc
cmp
andl
adc
xchg
jmp
popa
in
lret
and
jle
cmovge
into
inc
xor
or
push
lcall
mov
adc
dec
jge
stos
jmp
ret
sub
addl
ret
jg
out
inc
push
mov
sar
test
mov
add
int
jb
xor
xchg
cmc
ja
or
cmp
ds
lock
out
sbbl
mov
imul
ss
sbb
mov
bound
jp
aam
mov
mov
push
adc
mov
cmc
int3
cmpsl
cmp
mov
sub
mov
xor
adc
sahf
pop
outsl
negl
movsb
xor
lcall
inc
mov
add
movsl
and
out
xor
stc
sbbl
fbstp
sarb
in
lods
or
adcb
imul
xor
cmp
push
xchg
in
aaa
sub
add
divl
les
pop
add
sbb
sbb
paddsw
out
movl
push
sub
loopne
call
add
xchg
lods
push
lods
inc
xor
out
jbe
adc
scas
cmp
sbb
mov
lock
incl
pop
or
pop
sub
push
cmp
mov
sbb
shll
xchg
loopne
sti
ljmp
dec
lock
dec
dec
and
push
adc
mov
sbb
lds
xor
lahf
mov
call
or
cmp
push
je
pushw
xor
inc
sbbb
clc
lock
pop
nop
xorb
adc
mov
std
dec
js
push
dec
negb
shlb
scas
mov
sub
add
in
xor
repnz
lea
leave
es
pop
mov
call
cmpsb
mov
lret
pop
mov
pushf
ret
xor
bound
lcall
sbb
sub
cmp
pop
ds
add
pop
inc
aaa
cli
cs
lahf
cmpb
leave
xchg
xchg
pop
rol
pop
jge
dec
arpl
insl
imulb
cltd
xchg
or
cmp
lahf
in
or
fs
test
xchg
pop
mov
dec
cld
sub
aas
cmp
cmc
xor
sub
int
movsl
xchg
push
test
lret
mov
cmp
test
es
cld
pushfw
xchg
push
mov
call
mov
cmp
orl
std
les
movsl
in
fisubs
xor
dec
add
jbe
jae
xchg
outsb
out
ds
dec
mov
xchg
mov
push
sti
push
and
dec
cli
mov
arpl
psubq
popa
jmp
dec
enter
stc
shl
into
mov
dec
cmpsl
mov
test
cmp
out
mov
cmp
push
xor
mov
lcall
ret
inc
and
aaa
adc
sbb
and
repnz
fs
outsb
cmpsb
ja
scas
inc
or
outsb
int
jecxz
xor
imull
xchg
shr
sahf
mov
mov
xor
gs
pop
insb
test
mov
cmp
lods
inc
inc
xchg
in
jl
stc
cmpsl
mov
pop
jp
fsubr
out
add
pusha
scas
jecxz
arpl
cmp
or
std
xchg
and
dec
dec
xchg
sti
movsb
or
push
pop
icebp
dec
pop
pop
fmul
aaa
fwait
scas
xorb
xchg
dec
jle
mov
shl
cmc
xchg
push
gs
mov
push
test
out
pusha
clc
or
into
popa
pop
shrl
pop
mov
dec
jo
push
shrb
or
mov
sbb
rcl
aaa
out
jp
jbe
fmulp
or
testl
mov
pop
ret
loop
mov
loopne
mov
add
loop
lods
adc
mov
cltd
xchg
adc
outsb
cltd
inc
repz
push
je
pop
sbb
jbe
xchg
aas
push
mov
mull
xor
jns
sub
sub
xchg
cmp
mov
xchg
add
out
dec
outsl
sbb
add
lods
sbb
insl
std
psubd
out
nop
scas
cmp
inc
or
pop
cmp
mov
movsl
mov
jnp
sub
dec
je
imul
fcoms
pop
jle
cmp
push
pop
mov
daa
ljmp
inc
inc
je
pop
xor
popf
sarb
aad
push
xor
inc
idivl
mov
outsl
mov
push
jle
fwait
xchg
xchg
push
aad
inc
mov
adc
movsb
hlt
xchg
mov
xlat
sbb
adc
cmp
cmp
adc
and
jg
div
cmpsl
xor
xchg
cltd
into
sub
mov
lahf
push
data16
sarb
cld
sub
je
dec
fldcw
clc
daa
repnz
roll
fs
jnp
inc
and
add
mov
mov
dec
mov
cli
push
push
dec
pop
popa
mov
push
int3
mov
jg
jo
mov
aas
arpl
xor
mov
shll
jae
mov
into
pop
stos
xchg
ss
pop
call
std
cmp
cwtl
movsb
int
popf
push
addl
push
cmpsl
mov
push
icebp
mov
insb
mov
ljmp
xchg
add
imul
cmp
cmpb
aam
movl
in
scas
or
push
jg
js
sbbl
mov
lea
loope
mov
mov
in
insl
stos
shll
int3
inc
aad
movsl
mov
rcl
test
push
stos
loopne
adc
hlt
dec
sub
fisttpll
aam
in
negl
lods
rcrb
xchg
in
popf
loope
mov
add
or
in
mov
aas
dec
or
dec
mov
sahf
lret
push
and
xchg
vphsubwd
mov
jbe
jmp
mov
or
xchg
sti
fs
lret
je
leave
xchg
mov
and
cld
mov
outsl
push
inc
and
adc
imul
shrl
pop
lcall
jle
mov
jecxz
daa
test
fcomps
xchg
cli
sbb
push
adc
xchg
jns
sub
mov
sbb
stc
mov
jbe
sarl
mov
jg
xchg
test
sbb
test
sbb
lret
mov
imul
jmp
pop
mov
inc
setno
lods
or
sti
or
outsb
push
and
dec
sub
in
jo
in
mov
add
add
mov
add
adcb
das
aas
pop
arpl
in
pop
mov
jmp
pusha
stc
mov
and
dec
xchg
daa
add
cli
lahf
fsubl
pop
call
ds
adc
mov
xor
push
mov
leave
lahf
pop
insb
xor
call
pushf
lods
mov
ret
pop
jmp
out
cld
push
cmpl
std
mov
pushf
sbb
out
insb
add
mov
sti
lret
jp
or
cmp
nop
pop
shl
sbb
add
mov
cmp
push
sub
in
inc
and
dec
lret
mov
jge
xchg
dec
mov
mov
inc
pusha
sub
andb
mov
pop
adcb
pop
into
xorb
rcrl
inc
mov
adc
stc
in
lds
push
into
xchg
mov
pop
lods
pcmpgtd
jle
cld
movsb
push
mov
pop
mov
scas
js
add
xorl
insb
shll
adc
push
mov
push
movl
ds
inc
pop
push
xchg
or
pop
jmp
mov
pop
push
cmpsb
or
xorb
loop
xor
jg
push
ss
or
pusha
sarb
imul
push
and
sub
loop
insb
jl
popa
and
and
dec
push
movsb
cmp
push
iret
xchg
jecxz
into
scas
negb
jb
je
mov
cmp
xchg
sbb
cs
ja
dec
popa
imul
lret
ljmp
lock
shlb
or
or
cmpsb
add
sub
jno
xor
out
stos
push
or
popf
lahf
and
mov
aaa
js
cltd
out
add
jp
movsb
ret
sbb
bound
push
lahf
mov
and
mov
movsb
ficomps
jnp
aam
jnp
out
fsubrs
dec
sub
call
mov
or
mov
insl
adc
adc
mov
add
mov
lds
lret
mulb
adc
mov
test
fistpll
dec
or
sub
ret
loopne
cmp
jp
test
adc
push
or
cmp
scas
adc
xchg
cmpsl
insl
push
push
xor
cwtl
xor
fs
xchg
insl
int3
int
add
mov
test
and
xchg
sub
icebp
push
xlat
pop
dec
cld
and
and
ljmp
jg
jae
cmp
insb
push
and
fimull
pop
sbb
pop
jnp
lret
xor
fimull
cmpsb
enter
scas
hlt
mov
sub
loop
rep
sbb
into
pop
mov
xchg
stos
push
mov
test
lahf
cmp
dec
or
mov
cmp
pushf
lock
jae
sbb
and
inc
cmp
scas
cmp
jp
jae
lahf
test
sub
int
add
mov
add
inc
pop
sub
andl
dec
cltd
or
ss
inc
sbb
pop
sbb
int
fcmovu
add
aad
mov
or
ss
sbb
rcll
xor
sbb
insl
mov
ja
cltd
popf
sub
es
mov
xchg
pop
cmp
jbe
cld
add
dec
je
mov
xchg
shll
in
sbb
push
xor
and
mov
and
pop
xchg
pop
cmpsl
or
add
sub
rsqrtps
data16
xchg
addb
stos
fldt
xchg
pop
test
mov
outsl
and
jmp
mov
popa
leave
lods
inc
incl
push
mov
shll
inc
push
sarb
push
inc
enter
mov
or
push
push
call
pop
cmpsl
mov
sub
int3
mov
movsl
test
and
xor
addb
fmuls
adc
orb
pusha
aaa
fistps
popa
push
mov
pop
nop
add
in
dec
cmp
movsl
sub
mov
or
adc
xchg
fmull
js
xor
cmp
sbb
shl
xor
stc
shrb
cld
cmpl
pop
add
jbe
pop
cmpsb
cmp
sbb
sahf
int
jmp
mov
sub
ljmp
inc
stc
std
jp
pop
cmp
bound
sub
adc
push
mov
loop
aaa
gs
jg
fldl
fldl
add
sbb
mov
cli
bound
xor
fnsave
jl
add
dec
imul
adc
jo
lods
mov
test
imul
mov
sbb
and
frstor
pushf
test
inc
mov
pop
insb
mov
push
cld
mov
stos
push
inc
fisubrs
loope
sub
xor
dec
or
testb
ret
jmp
push
enter
rcl
dec
adc
dec
adcb
add
mov
sub
mov
rolb
das
aam
push
dec
xor
fldcw
lods
cmc
xor
xchg
push
data16
inc
pop
xor
sbb
pop
lods
or
push
clc
add
insb
xchg
xchg
sbb
out
sti
inc
jg
mov
mov
or
jge
icebp
jle
test
decl
and
leave
aaa
jns
movsl
shr
insb
dec
in
stos
push
popf
or
pop
mov
jmp
jae
dec
dec
icebp
data16
push
mov
push
out
pop
in
les
or
lods
mov
adc
insl
arpl
push
sub
fmull
dec
gs
ds
xchg
add
jecxz
popa
mov
daa
cmp
test
scas
xor
inc
push
ss
inc
mov
scas
cltd
cmp
pop
jl
shrb
mov
into
movsl
jbe
mov
stos
repz
mov
cmpsl
fs
jb
nop
pop
lea
mov
jp
mov
clc
scas
jbe
jbe
dec
cmp
cmp
xchg
sbb
xor
or
iret
adc
das
mov
inc
dec
loope
push
gs
and
pop
pop
out
mov
cwtl
les
mov
jl
jg
push
insb
pop
cwtl
adc
iret
jae
shr
mov
popf
jnp
out
pop
subb
jo
lock
push
in
xor
leave
fnsave
sbbl
jno
shlb
mov
mov
dec
sub
ficoml
push
stos
loop
test
imul
and
mov
jo
pusha
mov
mov
mov
cli
dec
cwtl
cmpl
fisubl
pop
or
test
adc
pop
aam
mov
lods
xchg
lahf
and
inc
testb
or
mov
push
int
aam
fisubl
pop
scas
dec
add
fstpt
inc
icebp
xor
cmpsb
in
stc
xchg
daa
and
add
popa
stc
aaa
and
data16
dec
rolb
mov
sti
or
jl
popf
push
xchg
roll
mov
mov
push
pop
enter
or
mov
out
push
outsb
in
out
xlat
inc
mov
push
xchg
mov
loopne
adc
pop
push
out
inc
inc
in
jle
in
or
out
adc
adc
pop
movsb
popf
lods
jnp
mov
int
xchg
stos
mov
ret
and
and
xchg
insb
mov
jns
jecxz
add
test
fistps
sub
shrb
add
or
sub
sbb
dec
in
fsubrs
stos
test
out
pop
mov
mov
shll
and
aaa
iret
sub
jmp
jp
and
dec
cmc
or
push
push
pop
rcl
loop
popf
mov
ljmp
or
mov
sub
fisubrs
je
filds
aas
icebp
scas
push
repz
add
push
sub
call
ja
sbb
in
aaa
push
xor
sub
fdivrs
lds
test
cmp
dec
js
cld
push
or
and
clc
push
pop
aaa
lret
aam
testl
ret
mov
insl
push
xchg
and
adc
adc
popf
movntq
sub
jmp
dec
xchg
insb
dec
fstps
cld
push
call
push
sub
cmc
dec
rcrb
cltd
or
rcrb
push
mov
or
pop
lods
mov
pop
adc
xor
add
xchg
dec
cs
jo
and
sti
dec
addr16
int3
shll
adc
xor
imul
shll
jns
cmpsl
call
xchg
leave
in
clc
mov
das
xor
or
jnp
jp
mov
and
xlat
lahf
xchg
mov
inc
lock
cmpsl
add
aam
lods
stc
out
sub
stos
lods
xor
xor
xchg
xchg
movsl
mov
and
repnz
test
in
add
std
xchg
cmpsl
sbb
sub
test
scas
js
mov
test
repz
xchg
paddw
mov
in
fdivl
jecxz
xchg
stc
pop
adc
shl
mov
ret
clc
mov
mov
mov
jbe
jg
add
aas
cmp
jae
xchg
or
or
in
pop
test
daa
aad
ds
jbe
shlb
hlt
xor
leave
jle
data16
adc
das
insb
cmp
enter
addr16
mov
loopne
and
jb
ret
mov
mov
pop
sbb
mov
clc
clc
dec
mov
aaa
lods
pop
inc
cmpb
or
pop
xor
clc
cmp
mov
and
push
mov
int3
nop
lods
jle
inc
shll
shl
mov
dec
jno
adcb
jb
cmc
sbb
cmp
in
jl
xchg
pushw
push
or
clc
clc
and
sbb
or
lcallw
insl
pop
push
sbb
adc
pop
iret
xchg
cltd
push
mov
adc
dec
out
das
or
int3
lds
inc
push
adc
cltd
mov
dec
mov
add
ja
adc
inc
sub
mov
cmp
jb
pop
sarl
lcall
aas
mov
shrb
in
mulb
mov
arpl
aam
lret
cmp
ljmp
daa
es
push
je
push
jnp
lock
cli
lret
scas
iret
push
in
pop
dec
jnp
cmpsb
add
dec
jo
incb
xor
imul
leave
sbb
int3
sbbb
push
sbb
xchg
add
xchg
mov
pop
cli
div
insb
adc
xor
insb
stos
insb
pushf
pop
je
mov
popf
pop
ljmp
pop
mov
pop
stc
xor
rcr
in
pop
jns
ret
cli
sbb
ja
addr16
mov
movsl
sahf
je
mov
cmp
into
xor
dec
mov
jge
out
dec
imulb
jno
fwait
mov
cli
xor
js
and
push
lea
sahf
outsl
dec
adc
mov
sub
sbb
nop
outsb
mov
cmpsb
xor
iret
sub
pusha
inc
lods
les
mov
loopne
and
frstor
idivb
cltd
aas
mov
cltd
inc
and
bound
push
jge
dec
mov
mov
or
xor
gs
sbb
and
mov
and
xor
enter
pop
push
mov
pop
loope
paddb
jge
sub
xor
gs
jl
stc
in
inc
push
sub
lock
or
inc
insl
ljmp
adc
rcr
mov
and
test
adc
jns
lods
adc
gs
test
sahf
leave
ret
mov
bound
adc
dec
sbb
or
js
pop
daa
icebp
mov
outsl
sarl
jle
movsb
lahf
add
das
imul
hlt
shr
mov
push
aaa
sbb
test
mov
push
mov
nop
inc
xor
stos
pop
std
lahf
cmpb
xchg
rolb
and
nop
pop
scas
fidivs
bound
add
push
or
cmp
mov
push
int3
sbb
xchg
outsb
jnp
rorb
es
pop
int3
cmp
out
xchg
std
dec
lcall
fmull
jmp
movsl
call
imul
fwait
add
test
jle,pt
gs
xlat
popf
ficomps
repz
jo
popa
cmp
sbb
sarl
daa
testb
inc
imul
mov
jp
jnp
insb
nop
adc
cmp
mov
mov
xchg
jge
in
push
lea
pop
lods
dec
clc
xor
cld
cmc
pop
mov
or
sub
push
mov
rorb
jo
insl
adc
lea
lods
jns
push
sar
cmpsb
cli
dec
rorb
loop
xlat
inc
xor
push
cmpsl
outsl
adc
sahf
inc
movsb
or
push
outsb
dec
sbb
into
jo,pn
or
loop
push
daa
jo
xor
push
mov
cmp
insb
loope
fcompl
push
xchg
jle
out
ret
in
xor
sbb
pop
jno
jne
jmp
xchg
push
push
mov
sbb
and
pop
mov
je
cltd
out
movsb
mov
push
xlat
shll
lret
faddl
xchg
xor
and
pop
add
push
mov
push
mov
cmc
pxor
push
mov
jns
cmp
push
nop
lret
mov
xor
mov
or
adc
sub
mov
nop
mov
lods
pop
fdivrs
shr
ljmp
lods
adc
or
lret
pop
cld
fistpl
sub
aaa
loopne
popf
pop
inc
ret
cmc
push
adc
shl
xchg
cmp
pusha
fs
lods
xchg
fstl
enter
push
popf
xchg
pop
mov
in
mov
sahf
mov
xchg
ret
pop
out
testl
scas
and
push
jle
sbb
ret
inc
fldenv
out
inc
sub
jno
cmpb
adc
imul
dec
leave
aaa
fcomip
dec
push
dec
das
jp
sbb
jo
xchg
pop
pop
and
dec
add
scas
imul
xor
ret
adc
dec
push
xor
mov
sbb
imul
xor
jle
imul
sbbl
out
jb
test
insl
xor
insl
xor
gs
add
es
push
sub
into
aad
jg
shrl
sbb
mov
cmp
std
add
push
xchg
jne
imul
pop
lods
movsl
shrb
test
inc
outsb
sub
mov
pop
bound
stos
push
sbb
dec
ret
out
dec
in
cmc
dec
inc
fistl
and
lods
xchg
mov
xchg
cmp
std
push
mov
or
jns
adc
loopne
jg
mov
push
test
cmp
pop
dec
jns
loopne
cmp
shll
jl
pop
in
cmpsl
test
cmp
add
jo
aad
cmp
push
icebp
sub
mov
call
daa
mov
test
xor
fisubl
sahf
in
xor
push
stos
je
xchg
out
mov
ljmp
into
negl
mov
call
xchg
ficompl
xchg
jbe
aam
out
jecxz
inc
pop
rclb
subb
push
fcoml
dec
xchg
jmp
adc
clc
push
jnp
adc
dec
or
jle
jae
test
cwtl
aas
test
lods
test
sbb
xchg
xchg
dec
ret
and
push
mov
ja
xchg
lret
in
lods
xor
iret
ljmp
aas
push
or
sahf
pop
sti
in
data16
add
cmpsb
sbb
dec
lcall
cmc
test
xorb
jl
push
xor
in
outsb
movsb
xor
iret
mov
sbb
movsl
pop
push
jo
cli
xchg
std
fnstcw
mov
inc
mov
outsl
cmp
ds
loop
push
pop
aaa
ss
stos
loope
pop
ja
jne
xchg
mov
or
mov
les
jo
lods
push
sbb
daa
add
push
movsl
hlt
pop
jbe
xchg
xlat
xchg
mov
imul
inc
and
push
jnp
mov
scas
jle
mov
cmp
loopne
pusha
adcl
xchg
call
push
xor
sqrtps
adcl
sti
adc
mov
cltd
lahf
cmp
mov
inc
mov
mov
sbb
or
and
and
jge
sbb
inc
inc
jle
cmp
in
mov
inc
fwait
xor
sbb
mov
cmpsb
test
popa
into
pcmpgtw
mov
cmp
add
cmpsb
idivl
xchg
js
xchg
mov
js
out
pop
repz
enter
mov
xchg
hlt
jp
add
cmpsb
rcll
ret
arpl
jne
cmpsb
cmp
or
gs
add
jl
fisubrs
daa
push
mov
and
mov
mov
nop
pop
mov
sbb
pop
mov
hlt
in
sub
or
stos
jge
push
pushf
xchg
bswap
cmpsl
es
jge
jno
sbb
mov
addl
lea
dec
cmp
std
mov
mov
adc
in
enter
sti
push
iret
mov
push
cs
and
xchg
stos
js
xor
push
out
leave
sub
lock
lahf
sbb
bound
mov
pushf
mov
sbb
sub
add
loope
fucomi
aaa
pop
mov
cld
rcll
mov
cmp
fisubrs
dec
jmp
stos
add
test
pop
xchg
lcall
divl
adc
add
scas
mov
mov
hlt
inc
xchg
dec
arpl
sub
sub
adc
pop
aas
pop
xor
test
xchg
dec
xchg
and
push
leave
icebp
or
jae
scas
dec
insl
aaa
pop
mov
add
adc
pushf
mov
aas
mov
shll
ss
cmp
add
dec
ret
ret
jmp
int
shl
insl
xor
idiv
xchg
mov
ret
into
ja
daa
sbb
dec
dec
bndstx
mov
lret
dec
ret
ljmp
push
and
arpl
push
sub
mov
sub
ds
loop
cmpsb
add
jbe
xor
push
gs
cmpsl
xchg
mov
test
aaa
fsubl
xor
sub
aas
inc
sti
push
lret
lock
dec
out
pushf
xor
add
insl
mov
push
arpl
cmp
cmp
subb
sbb
decb
or
push
push
mov
mov
lea
iret
ret
shlb
imul
outsl
test
pop
enter
mov
sub
addr16
cmp
jge
or
pop
xchg
clc
mov
pop
lcall
sbb
mov
mov
lods
rcr
out
pop
cs
add
repz
cltd
adc
mov
outsb
stos
lea
cmp
call
cltd
and
sub
xor
xchg
es
arpl
aas
push
cltd
dec
imul
out
or
adc
rcrl
push
pop
mov
and
daa
mov
popa
xchg
inc
mov
sbb
fistps
mov
push
xchg
sub
fimuls
sbb
pop
sbb
jnp
add
dec
sub
pop
outsl
pop
out
movsb
sbb
xor
aad
scas
int3
xchg
pusha
xor
xor
aad
jp
mov
bound
je
ja
pusha
mov
ds
xchg
aad
arpl
add
mov
insl
pushf
loop
and
mov
aam
scas
gs
cld
ret
jnp
xor
inc
cld
and
sbb
out
jae
jno
pop
cli
mov
pop
std
mov
xchg
xor
inc
std
test
sbb
lcall
mov
and
fcmovbe
dec
mov
out
aam
pop
idivb
lods
test
dec
sub
ret
adc
inc
xchg
fcmovnbe
pop
mov
push
mov
mov
cmp
outsl
adc
pop
pop
in
insl
sbb
outsl
adc
push
push
inc
xchg
hlt
mov
and
jecxz
fisubrs
dec
movsl
adc
repz
shlb
fwait
cli
ss
and
mov
mov
shrl
outsb
iret
imul
add
imul
outsl
cli
test
xchg
mov
and
add
inc
adc
and
aas
stos
inc
xor
pop
and
xor
jl
dec
adc
jno
ja
jnp
insl
sub
rcrl
imul
out
js
add
and
pop
cmp
cmpsb
in
adc
sbb
cmp
jb
pop
add
push
mov
mov
pop
out
jmp
dec
sbb
adc
sti
pop
aas
jae
jbe
sub
test
aaa
outsl
xlat
stc
push
inc
pushf
and
cmp
pop
cmpsb
mov
adc
cmp
mov
sub
sbb
xchg
inc
fsubl
inc
fwait
repnz
shlb
shrb
pop
sub
je
ret
aaa
push
mov
xor
jle
add
lods
shll
mov
or
insl
push
pop
pop
cmp
sahf
push
leave
sbb
push
push
test
pop
jae
xchg
scas
sti
int3
out
test
cmp
adc
jbe
lods
pusha
mov
or
jne
in
dec
lods
dec
jmp
lret
pop
lea
sub
andl
push
xchg
push
adc
and
cs
adc
xor
pop
dec
xor
je
iret
cmp
mov
or
cmp
sub
insl
mov
add
push
push
aas
int
cmpsb
ficoms
adc
mov
js
mov
jae
iret
ja
sti
push
xchg
das
mov
negl
ret
dec
test
ja
test
subb
popa
dec
xlat
aaa
fiaddl
push
popa
sarb
adc
add
scas
xor
mov
add
pop
dec
insb
adc
mov
xchg
in
dec
or
mov
insl
imulb
jb
into
dec
fsub
mov
out
daa
xor
xor
out
roll
push
repnz
jle
adc
test
sbbl
inc
inc
xor
or
jg
dec
or
dec
loope
adc
lcall
lods
ljmp
fimull
jmp
jns
inc
cltd
lock
push
daa
xchg
dec
push
xchg
insb
jecxz
test
add
cmp
jle
mov
repz
cmp
into
int3
call
xor
pop
aaa
cmp
lret
lea
dec
into
jge
es
cmpsb
fucomp
jmp
mov
rcrl
dec
out
test
bound
dec
cmc
xor
mov
xchg
jge
out
cmc
add
pop
mov
aam
jecxz
dec
mov
mov
loop
fsubs
and
xchg
dec
movb
push
mov
out
cmp
add
mov
ljmp
mov
mov
jns
ret
movsb
push
or
xchg
cltd
mov
lret
dec
pop
dec
adc
jmp
xchg
jno
sub
fdivrs
sbb
add
xor
fdivrs
imul
push
cli
mov
out
cmp
inc
cmpb
push
out
jp
sti
push
data16
daa
cmpl
ss
scas
xchg
adc
cwtl
in
mov
punpcklwd
test
xor
xor
scas
cld
insb
fisubl
int
mov
sarb
rorl
add
cmp
xor
mov
fbstp
xchg
sbb
mov
push
scas
ret
adc
fwait
cmp
push
inc
call
sub
mov
rol
push
xor
lret
sub
pop
pop
mov
inc
ja
insl
jo
xchg
mov
and
cltd
jno
mov
jge
push
dec
add
pop
nop
and
jmp
das
xor
inc
clc
xchg
lods
mov
dec
mov
rclb
mov
xchg
sahf
scas
mov
loop
inc
stos
mov
ss
mov
mov
es
jb
sub
mov
dec
xor
adc
mov
sub
daa
subb
call
add
lock
loope
call
test
call
repz
cltd
jnp
push
sbb
popf
and
aaa
push
xlat
pop
push
jnp
inc
jb
inc
xchg
or
mov
jmp
stos
pop
push
ret
mov
das
insl
mov
dec
xchg
scas
jmp
and
push
ljmp
leave
ss
cmp
or
dec
jle
sahf
push
jmp
mov
dec
or
pusha
sbb
jae
jge
pop
lahf
daa
pop
mov
or
fcmovnbe
pop
jbe
mov
xor
call
mov
mov
sub
mov
jo
jo
xchg
adc
mov
pop
call
pop
or
insl
pusha
add
lret
mov
jmp
outsl
jge
flds
test
mov
enter
mov
mov
push
inc
push
bound
inc
inc
xor
pop
inc
gs
out
insb
es
sub
xor
sbb
movsl
test
cli
ja
xchg
and
cmc
in
sbb
loop,pn
pop
mov
adc
add
mov
movsl
insb
jmp
data16
or
mov
pop
mov
add
sbb
movb
mov
repz
xchg
es
cltd
xchg
mov
cmp
push
mov
adc
pushf
jle
and
and
sbbl
jl
inc
mov
and
pop
xor
sbb
inc
pop
sbb
loope
cs
xchg
lahf
ds
adcl
cwtl
into
pushf
xchg
in
test
inc
mov
ja
icebp
ljmp
jl
mov
int3
imul
jg
dec
mov
addr16
imul
pop
pushf
mov
jno
cmc
test
mov
sbbb
ret
bound
mov
in
neg
push
je
dec
mov
in
jno
scas
sarl
in
xor
sbb
repz
fsubs
sub
lods
lods
xor
cmc
cmc
push
sbb
clc
icebp
and
out
xchg
shll
adcb
push
push
ret
xor
test
into
fcomps
push
into
mov
push
mov
arpl
push
jnp,pt
pop
lods
clc
lret
sub
fsts
pop
pop
xor
xor
add
cmp
rol
lahf
sahf
mov
inc
in
ss
fistl
adc
cmpsl
leave
push
or
fdivs
shl
nop
add
icebp
adc
lods
cmpsb
stos
sub
cmp
xadd
lods
xchg
popf
sbb
dec
push
les
add
xor
fldl2t
es
pop
inc
sub
sahf
push
fldenv
cmpsl
jp
sbb
cmp
jle
push
fstpl
enter
mov
das
jle
dec
inc
jl
dec
nop
test
lret
mov
test
add
cmp
dec
jge
dec
test
repz
mov
je
jmp
add
sub
out
fs
test
sbb
jecxz,pn
xorb
ljmp
fdivrs
cmp
sbb
aaa
aad
xadd
mov
ficomps
sahf
test
scas
and
jp
mov
adc
lods
sbb
scas
mov
movsl
jno
sbb
shrb
dec
push
sbb
lea
stos
jge
mov
pop
push
gs
add
xchg
push
dec
enter
imulb
mov
testb
test
test
pop
inc
sub
jne
shl
cld
cltd
dec
add
push
iret
addr16
icebp
add
hlt
mov
xchg
mov
or
xchg
shrl
inc
mov
in
mov
add
lods
cld
gs
das
mov
popf
out
sar
aas
gs
mov
scas
pushf
xchg
cmp
es
mov
fstl
out
in
js
adc
iret
mov
sar
xlat
add
mov
or
test
jp
xchg
jecxz
mov
scas
into
fmull
daa
mov
mov
and
dec
and
iret
sbb
add
dec
out
std
testb
inc
xlat
dec
lock
push
cmpsb
mov
push
mov
ret
bound
mov
mov
pop
mov
mov
mov
leave
in
add
mov
and
inc
enter
inc
pop
sbb
adc
cmp
jmp
cmc
xchg
mov
or
shlb
sahf
sbb
inc
push
das
test
jp
cmp
loope
add
cmp
daa
mov
scas
cmp
mov
jnp
pop
add
mov
mov
sbb
xchg
push
push
xchg
jp
in
sahf
lds
mov
iret
rcrb
lods
xchg
sti
dec
mov
lods
hlt
mov
outsl
in
stc
aam
dec
xor
mov
insb
inc
push
mov
mov
je
inc
cmc
pusha
mov
fs
imull
lcall
test
dec
inc
arpl
mov
pop
push
jns
xchg
insb
lcall
sub
loop
inc
mov
push
aam
imulb
jns
stc
mov
jnp
movsl
clc
jne
jp
pop
xchg
mov
sbb
lock
push
pop
inc
mov
fidivl
out
dec
inc
lds
int
fcomps
inc
dec
lea
jns
fisttps
mov
popf
scas
inc
test
dec
push
mov
divb
jno
xor
loop
pop
mov
sbb
jb
pushf
cmp
xchg
jnp
cmp
ljmp
out
sub
imul
xchg
xchg
mov
imul
lds
mov
addr16
xchg
sub
mov
test
xor
les
enter
and
sub
sbb
dec
mov
xorl
rcl
leave
pop
in
sti
mov
subl
jg
repnz
pop
lcall
push
and
ja
scas
mov
scas
sbb
jmp
inc
dec
int3
pop
adcb
enter
mov
imul
addr16
xor
pop
mov
cld
pop
and
test
or
pop
xchg
jns
ror
dec
mov
add
jo
cld
int3
and
push
ret
outsl
add
inc
mov
pop
int
jecxz
push
mov
and
add
fldl
mov
fisubrs
int
ss
jecxz
jns
icebp
inc
mov
push
mov
mov
cmp
jbe
xor
inc
jl
test
sub
imul
push
pushf
call
test
cmc
cmp
nop
dec
and
mull
push
jnp
lcall
pop
push
pop
rcrl
add
sub
add
adc
stos
shlb
pop
out
xor
es
inc
pop
shr
pushf
jecxz
xor
xchg
test
mov
jns
jns
jo
call
cmp
data16
fimuls
sahf
mov
clc
iret
addb
inc
movd
cmpsl
lret
je
sbb
dec
inc
fistl
jo
js
cmp
dec
mov
dec
jp
xchg
imul
pop
push
sub
imul
hlt
cmp
insl
sub
jo
sahf
cmpsl
xchg
and
adc
int3
subl
fwait
aaa
lret
out
push
hlt
ror
je
in
push
push
mov
push
sub
jae
mov
mov
lods
adc
jl
xor
hlt
stos
jns
push
mov
mov
mov
jp
xor
je
in
xor
dec
and
out
or
sub
xchg
arpl
pop
sahf
jg
xor
pop
andb
mov
sti
dec
pop
inc
sub
pop
testl
out
int3
mov
rcr
adc
mov
jnp
push
or
sub
repz
and
lret
dec
push
cmp
imul
roll
dec
in
mov
std
out
pop
xor
hlt
test
jmp
mov
jb
cmp
inc
nop
leave
add
push
or
cwtl
xchg
clc
fstl
decb
dec
cmp
xchg
inc
ret
jge
jle
test
sahf
mov
in
dec
lahf
ficoms
jmp
mov
adc
xor
jnp
jns
je
add
mov
cmpsb
sub
sbb
xor
add
aam
xchg
movsb
in
mov
test
hlt
lret
outsl
lods
jle
sub
stos
addr16
mov
jb
jle
js
loop
mulb
dec
es
fdivl
fists
push
sahf
sbb
cmpsb
rcrl
push
inc
jmp
push
pusha
arpl
das
arpl
fbld
jne
mov
or
sub
gs
adc
test
pop
jmp
nopl
test
les
das
jl
sbbl
cmpsb
mov
pop
jmp
inc
repz
rolb
cmp
loopne
dec
push
insl
sahf
lahf
mov
cmp
in
test
ds
and
mov
push
push
popa
fucom
mov
jne
mov
pop
insl
pop
test
push
dec
std
and
push
jnp
leave
inc
clc
in
leave
int3
nop
mov
iret
or
rcrb
sbb
rcll
push
sub
pushf
or
ror
and
jle
fstps
lods
inc
movsb
jp
sbb
int
cmp
mov
jbe
xor
push
adc
jmp
add
cmc
daa
mov
out
add
sbb
fcomip
rcrl
dec
mov
nop
mov
adc
jo
xlat
fmuls
lock
fiaddl
adc
inc
push
in
mov
fdivrp
fcoml
adc
movl
dec
xchg
outsl
xlat
push
mov
pop
mov
enter
imul
test
movsl
rol
ds
es
xchg
and
stos
insl
lcall
xorl
jecxz
and
or
pop
or
daa
sbb
jo
ret
xchg
loopne
popf
xchg
inc
sahf
out
out
les
ficoml
aas
mov
push
imul
cmp
or
test
or
lds
cmpsb
mov
imul
add
jge
mov
pop
imul
push
xchg
dec
cs
cmpsl
xchg
test
ljmp
or
dec
and
cs
cltd
mov
xchg
lea
out
stos
fidivrs
mov
add
and
sub
cwtl
inc
ret
cmp
cmp
push
pushf
movsl
push
jle
or
insl
vmaxsd
jno
popa
jns
push
fs
bound
fcmovnb
push
add
aas
pop
inc
hlt
lret
in
stos
mov
clc
mov
enter
add
jnp
and
cmp
cs
dec
xor
sub
push
mov
or
add
nop
sub
outsl
in
sti
sahf
pop
sub
filds
mov
aaa
lock
ljmp
outsb
sbb
xchg
sub
jo
push
xchg
xor
aaa
movsb
add
xchg
pause
add
xchg
ds
push
pop
shlb
cmp
clc
loopne
inc
ds
mov
cwtl
clc
cld
cmp
aam
int3
clc
mov
mov
lods
mov
iret
stos
mov
fimull
and
push
push
push
adc
lahf
jb
stos
imul
mov
ss
std
sub
xchg
jl
cmp
and
jo
loope
lea
add
aam
pop
stos
fildl
dec
fldcw
pop
dec
mov
in
in
adc
popa
cmpsb
push
ss
mov
sub
sub
shl
mov
sbb
lods
adc
stc
inc
mov
lret
mov
push
inc
mov
jns
pop
ds
mov
call
jae
mov
ret
daa
mov
push
inc
adc
lods
fldenv
sub
pusha
jbe
jbe
arpl
or
ljmp
pop
dec
push
cmp
push
adcl
sub
jg
scas
mov
pop
add
pop
ljmp
rolb
insl
aam
add
cmp
jbe
in
hlt
mov
inc
aaa
fabs
pop
addb
fwait
je
pop
push
inc
mov
lret
paddb
mov
bound
leave
sti
ljmp
dec
and
sbb
sbb
sbb
bound
adc
test
dec
mov
addr16
sahf
adc
sbb
mov
inc
int
add
cmp
fdivl
mov
cmpsb
shlb
xlat
bound
shll
test
inc
sti
das
sbb
ljmp
loop
cmp
rorl
insl
sbb
les
in
mov
cmp
sub
lret
xor
sbb
and
bound
jg
xor
pop
inc
lret
mov
mov
mov
sub
pop
cmp
dec
dec
mov
add
sub
mov
cmpsb
cmp
mov
sbb
cltd
adc
rolb
jp
dec
inc
rolb
lods
pop
mov
adc
mov
rorb
aaa
inc
cmp
and
scas
dec
mov
enter
sub
jge
mov
and
test
pop
int
imul
adc
inc
ss
mov
das
jnp
outsl
jl
or
cwtl
ljmp
and
add
clc
in
mull
cld
outsl
sahf
add
out
mov
cmpsl
jbe
les
xchg
mov
repnz
add
xor
call
mov
ret
sbb
jo
scas
adc
sub
and
ss
loop
jo
fsubs
push
inc
jle
pop
popa
and
sbb
sbb
jo
sbb
movsb
fwait
movsb
mov
jg
gs
jmp
jle
adcb
cmp
jmp
mov
jle
mov
xchg
sarw
ljmp
sub
subl
jne
push
and
add
pushf
fbstp
cmp
mov
pop
push
push
into
push
fisttps
inc
add
xor
adc
aam
inc
xchg
mov
push
jg
daa
lea
push
jmp
mov
outsl
cmp
sbb
pop
int
jns
sbb
addb
pop
jle
lret
mov
hlt
lds
adc
pcmpeqw
mull
mov
jo
movsl
loope
je
push
btc
add
jl
sbb
pop
xor
aaa
cmp
cmp
shll
and
pop
dec
mov
repnz
mov
out
jb
enter
dec
aaa
shr
movl
bound
jae
vpsubw
rorb
sbb
xchg
test
mov
add
jl
xor
jne
lret
mov
pop
jmp
in
inc
adc
leave
jb
lds
mov
pop
adc
sub
mov
icebp
aas
mov
xchg
cmp
call
or
push
fnstenv
adc
jl
mov
adc
jg
jecxz
ret
insb
adc
push
xchg
ds
push
fwait
jg
sbb
out
xchg
das
loop
das
inc
fwait
inc
sti
repnz
dec
mov
out
fs
mov
adc
mov
xor
pop
push
shll
mov
push
in
cmp
ds
loopne
pop
fsubrs
cmovns
nop
jae
stos
xchg
aas
cli
xchg
pop
jae
xchg
int3
mov
ds
leave
jmp
aas
adc
mov
and
sbb
outsl
jecxz
cmpsl
ret
mov
add
mov
push
push
lret
pop
xor
mov
divb
push
sarl
popa
sti
icebp
mov
outsb
shll
gs
clc
das
pop
addl
mov
ret
mov
and
mov
shlb
mov
add
mov
lods
add
dec
sbb
pop
aas
js
xchg
mov
iret
lret
cmp
pop
mov
daa
mov
ss
lret
shll
lds
lret
cltd
jecxz
xor
and
push
test
xchg
jle
lds
movsb
jecxz
and
inc
xchg
mov
loop
add
xchg
dec
and
pop
dec
add
je
and
call
mov
jmp
xchg
mov
rol
cmp
dec
add
test
arpl
rclb
gs
rorl
cld
sbb
sbb
pop
sub
js
jl
and
arpl
movsl
pop
or
lock
jmp
xor
in
xchg
jne
add
fwait
dec
cmp
mov
xchg
and
cmp
ficomps
cwtl
or
jl
sahf
mov
sbb
fisubl
jo
clc
add
fcoms
movsb
test
iret
lods
and
test
ja
testb
dec
or
lret
outsl
and
imul
pop
jae
pop
and
fsub
xchg
cmpb
adc
pushf
arpl
leave
idiv
jl
jle
movsb
xchg
cmc
clc
xor
nop
addl
test
dec
notb
ljmp
insb
daa
or
or
xchg
mov
gs
inc
sbb
push
jmp
lods
sbb
sub
cs
loopne
std
lret
cmc
mov
mov
push
sub
cmpsb
int
movsl
sbb
aad
dec
cmp
cld
xor
data16
inc
pop
pop
and
cmp
loop
test
pushf
repnz
and
xor
cli
mov
sbb
or
jmp
rorb
cmp
xor
sahf
das
xor
or
push
inc
sbb
push
aaa
stos
add
jge
mov
out
enter
inc
rorl
in
mov
ret
dec
cltd
popf
in
lcall
pop
ffreep
loop
cmp
std
outsb
push
adc
aad
jmp
sub
add
cmp
test
or
es
loop
lahf
mov
mov
cld
xchg
inc
sub
add
cmp
inc
adc
dec
imull
stc
cmpsb
fidivl
adc
repnz
cld
xor
cmp
fcomps
cli
mov
lods
dec
loopne
hlt
test
mov
and
mov
add
mov
mov
mov
mov
lock
js
test
xchg
pop
sbb
push
xchg
adc
cmp
push
imul
or
mov
or
jmp
in
inc
adc
movsb
dec
pop
cld
jmp
mov
add
inc
out
mov
bound
jns
dec
clc
mov
or
std
mov
mov
and
loop
jnp
pop
daa
sbb
loopne
mov
push
xchg
dec
jo
loop
inc
inc
push
add
pop
sub
fsts
xchg
add
jb
and
out
cs
out
js
add
int3
test
sub
jbe
notl
into
jmp
lcall
fcom
fldt
je
inc
in
mov
aam
push
push
addl
int
jo
les
push
popf
mov
arpl
cmp
pop
leave
push
xor
mov
data16
shrl
lock
mov
notl
push
and
add
push
and
sub
ret
sbbl
loopne
sbb
insb
and
mov
subl
notl
fidivs
fsts
cwtl
jmp
in
fdivp
pushf
outsl
outsb
inc
pop
xor
dec
xor
mov
daa
lds
or
and
cmp
inc
lea
in
cld
fidivs
mov
arpl
enter
mov
push
or
sahf
mov
xor
lds
sbb
pushf
mov
push
jl
xorl
ljmp
and
mov
dec
and
addr16
daa
inc
push
sarb
push
xorl
inc
push
movsl
mov
sub
pusha
call
hlt
jecxz
push
dec
mov
jb
push
movsb
in
fs
xlat
into
daa
sbb
jae
aam
loope
add
scas
mov
mov
push
mov
fimuls
xchg
int3
inc
out
shlb
mov
cmp
adc
sub
sbbl
test
je
sub
mov
in
ret
lret
xchg
push
push
ret
es
ds
loope
pop
xor
mov
in
rcrl
scas
movsb
pop
sub
and
pop
or
ret
andb
xor
ljmp
xchg
xor
roll
out
cmpsl
xchg
sub
les
outsl
punpckhdq
push
push
push
insl
outsl
mov
push
dec
test
out
add
xlat
mov
out
rcr
mov
jg
mov
test
rcrl
lcall
mov
mov
sbb
push
xchg
sar
out
add
push
inc
imul
mov
iret
loop,pt
icebp
ds
xor
test
call
mov
cmp
stos
jmp
test
stos
stos
js
push
cmp
mov
repnz
sahf
out
lods
and
push
adc
fisubs
fsubp
mov
in
push
jno
and
daa
in
in
jle
xchg
imul
bound
sub
inc
ljmp
out
leave
pop
mov
or
mov
mov
xchg
imull
ja
lret
adc
ja
jecxz
sbb
ja
push
push
dec
sarb
icebp
test
and
xorb
ja
push
pop
inc
mov
push
inc
xchg
punpckhwd
and
movsb
push
fmulp
mov
mov
or
pop
out
mov
cmpsb
insb
push
lea
adc
pop
outsb
mov
loopne
jne
fnstcw
sbb
mov
adc
add
sbb
inc
xchg
jae
push
outsl
mov
insb
stc
iret
mov
insb
or
mov
xor
mov
ds
divl
shll
js
cmp
sub
sub
fbld
pop
and
cltd
in
push
cwtl
xchg
jg
jmp
pop
enter
cld
mov
sub
iret
je
and
mov
mov
mov
pop
pop
xor
mov
ljmp
dec
add
pop
je
mov
rcrb
mov
call
sti
xlat
xchg
mov
rcrb
dec
sub
push
movsl
imul
nop
arpl
adcl
mov
movsb
pop
js
hlt
sub
stos
mov
sub
and
shrb
adcb
pop
jecxz
xor
lea
dec
mull
in
and
imulb
inc
fwait
jns
and
mul
jb
stc
adc
push
sahf
movsb
pop
lcall
fisttpll
xchg
fisttpll
test
popa
inc
cmpsb
mov
enter
fsubrl
jle
mull
inc
cs
bound
xchg
mov
add
out
in
mov
mov
push
dec
popa
jne
jbe
add
inc
mov
jg
push
inc
enter
pop
jb
int
inc
ret
mov
add
mov
jmp
loopne
xchg
popf
add
mov
addr16
or
rol
ret
outsl
xchg
jmp
push
inc
mov
fs
rcrl
rclb
sarl
cmc
jno
cld
dec
cs
in
aad
notb
es
rcr
inc
xchg
ds
clc
xor
leave
xchg
into
rcr
mov
push
push
xchg
fwait
addr16
xchg
mov
lret
jbe
out
jecxz
mov
xor
lahf
addr16
rorb
mov
fbstp
std
jo
jbe
sbb
loop
mov
das
or
mov
add
xlat
jl
insb
or
or
fisubl
push
leave
sbb
lret
mov
outsl
and
pop
mov
pop
lret
jg
and
pusha
pop
dec
push
jg
adc
lahf
push
xchg
xorb
into
sub
in
adc
push
pop
inc
xor
and
cmp
xor
xchg
mov
bound
sarb
mov
xchg
pop
movsb
cmc
xor
mov
fsub
push
into
pop
mov
inc
cmpsl
imul
cmp
dec
xchg
mov
mov
aas
and
negb
andb
cltd
cli
adc
and
add
repnz
dec
pop
jge
int
ja
xor
push
iret
rol
xchg
addr16
in
xlat
in
xor
pop
xor
sub
inc
push
mov
dec
push
xor
mov
xchg
mov
pop
push
ficoms
and
push
sub
je
mov
xor
inc
stos
popf
rol
outsl
mov
cmp
xor
pop
das
movsl
std
and
loop
mov
jl
sub
aam
inc
fs
push
fistpl
xorl
rcrl
inc
xor
or
jle
xchg
arpl
sub
add
or
gs
push
sbb
iret
xchg
xchg
cmpsb
sbb
sbb
dec
pop
mov
dec
clc
std
jne
and
sbb
imul
mov
jne
jns
inc
push
xchg
pop
lea
psllw
mov
les
lock
sub
enter
adc
pop
jb
inc
addr16
fcmovu
add
fwait
scas
push
xchg
sbb
in
aaa
ljmp
mov
cwtl
movsb
ret
xchg
pop
repnz
in
lock
cld
mov
mov
pop
test
xor
insb
add
jecxz
rorb
js
enter
rclb
lock
xor
pop
push
push
rcr
movb
pop
call
loope
push
movsb
fsubrs
sbb
pusha
dec
push
aam
cmp
fs
adc
xchg
popa
add
enter
icebp
adc
test
pop
sub
mov
lods
jl
adc
xchg
xchg
sbb
clc
iret
adc
lods
mov
inc
fnstcw
add
arpl
imul
loope
or
sbb
insl
xchg
mov
push
mul
cmp
pop
or
jmp
daa
push
shr
in
mov
das
fstpt
pushf
insb
push
adc
mov
sub
or
lret
ret
cli
push
or
stc
xor
lods
fxch
cmpsb
cmp
lds
push
xchg
mov
enter
lea
data16
or
std
dec
push
mov
lret
popf
daa
lods
adc
mull
inc
bound
push
pushl
nop
cmp
push
mov
adc
data16
sub
or
mov
lret
cld
test
xlat
lds
das
lea
shrl
and
mov
out
mov
roll
sub
movsb
hlt
hlt
xor
fmull
pusha
outsb
lods
pop
and
lret
mov
movsb
mov
sbb
or
ret
daa
pop
pusha
fidivrs
fisubs
mov
push
pop
insl
pop
xor
daa
and
icebp
lods
pop
add
push
jo
orb
and
movsl
movsb
sub
sub
into
ja
lods
sub
xor
xor
rolb
ja
loop
sbb
mov
mov
loope
xchg
pop
ss
sub
adc
or
adc
sti
dec
imul
jb
pushf
cmp
inc
ret
shlb
mov
sbb
adc
pushf
int
mov
xor
mov
push
add
mov
stos
and
shl
xor
repz
jne
cmp
sub
rcr
cmp
orl
adc
scas
mov
les
test
das
mov
fwait
adc
sub
out
push
mov
lods
mov
adcb
hlt
jns
and
stos
jle
mov
jle
fdivl
jne
and
lret
cwtl
push
pop
jecxz
fidivrl
lret
dec
imul
push
int3
xchg
xor
insb
jns
scas
and
out
es
mov
inc
xlat
sub
aam
xchg
mov
iret
cmp
in
jae
insl
and
fnstenv
xor
loope
add
adc
hlt
ret
mov
cmp
loopne
mov
pop
data16
adc
xchg
hlt
cmp
inc
lods
fisttpll
fdiv
mov
es
ss
mov
mov
mov
loop
addl
push
cmp
sahf
in
lcall
insb
jne
pop
repnz
push
push
jne
lea
mov
jg
cmp
dec
pop
leave
lds
gs
outsl
jns
jo
adc
fsubr
sahf
orb
jl
adc
cld
test
and
inc
mov
push
jge
out
out
cmpsb
pop
xlat
add
into
xchg
cmp
cwtl
je
jmp
lods
jle
iret
cmp
and
scas
mov
or
cs
cmp
frstor
jne
pop
out
lret
js
cli
decb
push
lods
lock
dec
or
add
mov
icebp
data16
aaa
sub
pop
mov
push
cmp
xchg
cli
and
cmpsb
add
inc
test
inc
or
repnz
sbbb
lret
cmp
test
cmpsl
lods
dec
aad
mulb
pop
pop
pop
or
outsl
pop
xchg
filds
jo
stos
pushf
js
xchg
aaa
mov
cmp
xchg
sbb
xchg
dec
js
fwait
add
out
jb
cmp
fsubr
cwtl
fnstcw
loope
lahf
jb
cwtl
popa
xlat
sbb
jnp
imul
push
pusha
cld
sub
mov
mov
out
jle
btc
push
or
lods
mov
pusha
scas
dec
in
rclb
call
or
dec
int3
fistpl
cmp
outsw
ret
repz
sahf
lret
and
in
sbb
sub
pop
andl
mov
pop
scas
add
into
mov
mov
dec
andl
std
sbb
out
jg
sub
loopne
cmp
int
scas
lcall
stos
lahf
jo
and
push
addr16
lret
adc
jge
out
mov
icebp
cmc
mov
cmp
in
inc
movsb
in
out
ret
lret
pop
repnz
xor
dec
imul
cwtl
xchg
jmp
mov
test
rep
js
dec
es
mov
push
dec
add
add
or
and
or
cmp
mov
mov
pop
jl
mov
sbb
mov
sbb
mov
jp
cmp
inc
sbb
dec
dec
addl
cmpsb
dec
fwait
shlb
pop
outsl
and
adcl
pop
loope
sahf
sbb
data16
push
sub
lods
jne
add
mov
mov
arpl
cltd
mov
inc
dec
shlb
fcmovne
xchg
enter
sbb
jb
insl
fldcw
jmp
pop
fidivl
mov
push
push
mov
jno
jne
int
xchg
or
xchg
or
xor
xor
push
subb
sti
push
loopne
shl
jo
xadd
int3
mov
push
push
mov
cmp
mov
fisubrs
test
ret
lcall
popf
pop
push
or
sbb
inc
push
mov
push
rol
cmp
xor
in
cmp
and
xchg
movsl
cmp
test
addr16
ss
pop
test
inc
inc
cmpsb
fs
roll
sub
sbb
sbb
movsb
mov
test
xchg
testl
addb
sbb
test
loop
ds
dec
jae
out
das
dec
mov
fsts
xchg
repz
mov
in
call
fcmovbe
xchg
fcomps
mov
iret
and
adc
and
mov
fnstsw
sar
cmp
jmp
mov
movsl
mov
shrb
es
out
cmp
stos
mov
lcall
push
cmpsl
cli
rcrb
and
mov
hlt
stc
xchg
or
or
sarb
dec
xor
inc
shrl
mov
pop
cmp
adc
stos
jb
add
jp
xchg
bound
or
inc
mov
or
adc
movsl
sbb
nop
cmp
loop
idiv
cmp
pop
mov
jo
jge
inc
inc
inc
popw
push
andl
xor
pop
sar
lret
call
incb
mov
ds
lcall
xor
inc
rorl
fwait
push
push
cmpsl
pop
shlb
daa
scas
inc
inc
dec
jbe
cmpsb
xchg
lds
pop
popa
mov
int
popf
sti
lock
push
adc
mov
sub
mov
push
aam
subl
xor
cld
sub
push
cwtl
sbb
jge
jb
mov
push
cmc
xor
adc
lret
cmp
xor
jae
adc
ret
xchg
mov
push
lods
dec
cmp
push
inc
sarb
inc
incl
mov
add
scas
punpckhbw
jl
and
push
jb
js
pop
mov
jbe
push
mov
daa
int3
ret
mov
inc
fwait
push
push
sbbl
aaa
xchg
rclb
xlat
cli
jecxz
mov
and
jno
sub
rcrb
xchg
push
enter
sahf
lea
sbb
loop
and
mov
mov
test
sbb
xchg
pop
inc
dec
push
jno
mov
mov
testl
pop
jge
mov
sub
addr16
cmp
in
loope
sub
repnz
cmp
xchg
dec
add
out
or
lcall
das
ret
loope
lds
pop
lods
mov
xorb
cmp
in
sbb
daa
test
jns
push
jnp
sti
mov
push
leave
ficompl
fcmovnb
jg
test
or
sbb
or
imul
int3
inc
lods
adc
sbb
test
es
xor
test
mov
adcb
push
xor
stc
cmp
leave
or
dec
jnp
arpl
jecxz
mov
sbb
adc
mov
mov
shrb
mov
mov
mov
aad
fcmovbe
add
pop
push
test
icebp
stos
cs
mov
sbb
in
jge
and
inc
inc
in
sub
stos
or
mov
cmp
xor
in
dec
cmp
es
jmp
dec
fmulp
cwtl
movsb
cmp
mov
jl
sbb
shlw
adc
lcall
pop
cld
add
jg
adc
or
fsubrp
dec
faddl
test
cs
lods
cwtl
test
loopne
xor
add
or
mov
hlt
pop
or
pop
pop
cmpsl
sbb
or
movd
scas
or
jno
in
push
into
cmp
jle
jl
inc
fnstcw
lock
sbb
mov
jmp
dec
arpl
sbb
shrb
outsb
andl
push
mov
pop
dec
sbb
nop
mov
xchg
jle
push
push
pop
ja
xor
cs
aaa
sub
shlb
and
cld
push
jbe
inc
push
filds
adc
je
repnz
add
pop
sar
inc
mov
arpl
pop
lock
inc
push
push
and
jnp
cld
cli
and
out
sbb
cmp
cwtl
jne
stos
aad
out
mov
int3
and
test
mov
xchg
mov
out
xor
and
or
out
dec
cli
in
fbstp
push
hlt
imul
test
cmpb
sarb
jb
out
lahf
adc
jmpw
and
mov
das
lret
cmp
xchg
push
outsl
pop
sbb
movsb
inc
shll
and
or
mov
or
jg
aad
ficoms
movsl
pop
mov
sub
stos
pop
test
insl
jno
xor
sub
or
xor
mov
adc
inc
arpl
jae
call
cmpsl
in
sbb
out
mov
cld
repz
bound
outsb
dec
fcompl
cli
test
xor
dec
loop
fs
mov
sub
push
dec
adc
js
jb
sub
cli
fsubrl
jne
mov
dec
mov
arpl
mov
dec
es
mov
pop
mov
mov
jo
int3
jbe
popa
gs
mov
adc
les
jge
dec
xchg
in
cmp
xchg
push
imul
mov
cmp
or
dec
pop
arpl
add
and
add
jmp
pop
xlat
mov
adcb
and
out
js
jnp
jl
adc
mov
aas
cmp
mov
jae
aaa
push
enter
icebp
jl
test
mov
push
imul
imul
and
add
iret
iret
cmp
iret
xchg
loope
push
das
pop
les
mov
pop
clc
cli
sub
pop
add
repnz
bound
push
shlb
mov
fistpll
je
je
inc
inc
push
cs
test
inc
cli
inc
xchg
bound
aad
iret
cs
pop
mov
movsb
and
ror
adc
sbb
enter
popl
rclb
pop
pushf
cmp
sarb
xchg
fistps
push
cltd
or
sbb
test
sub
mov
or
sub
gs
insb
push
fistl
jbe
test
lds
mov
in
shll
push
mov
imul
inc
addr16
mov
out
dec
out
push
sbb
lods
fadd
in
sub
xchg
mov
enter
inc
sbb
lahf
pop
dec
lahf
hlt
out
cmp
ret
adc
pop
jle
enter
xchg
aaa
jo
idivl
jg
rorb
std
or
roll
mov
rcll
dec
pop
xchg
add
dec
mov
int3
mov
xor
sbb
mov
sbb
or
xor
lea
ds
pop
mov
out
mov
cmp
outsl
fdivs
adc
int3
jno
out
out
mov
subb
sahf
and
jmp
movsb
sub
mov
jae
dec
and
fldenv
aad
clc
outsb
dec
lock
andl
addr16
pop
test
dec
stos
dec
sub
loop
aas
inc
add
das
adc
or
imul
jbe
push
jne
pop
or
pusha
or
jmp
mov
push
cmpsb
fistpll
outsb
pop
js
dec
mov
in
xchg
movsl
mov
fcmove
push
pop
sub
ds
adc
inc
xor
test
and
test
addr16
sub
movsb
int3
push
pop
xor
pop
jb
sbb
push
mov
or
mov
cmp
scas
sti
test
test
lock
arpl
imul
sbb
shlb
mov
jle
add
in
inc
jp
insb
repz
add
imul
xor
in
lods
insb
xchg
inc
cmp
sub
push
loope
ret
xchg
sbb
and
jp
insl
fwait
fs
dec
pop
push
jl
mov
dec
pop
xor
push
dec
sub
cs
or
cmpsb
inc
js
out
addl
cld
out
pop
fadd
xchg
into
mov
mov
mov
mov
mov
add
orl
loop
int3
sarb
lahf
pushf
popf
int
adc
sub
inc
and
mov
mov
outsl
int3
fwait
mov
scas
sub
cmp
xor
jno
add
imul
add
imul
sub
cmp
push
sub
cltd
push
adc
cmc
or
insl
stos
adc
fnstsw
in
shlb
and
test
jne
sub
fidivl
daa
stc
cmp
fimull
stos
sbb
fldt
inc
int
jp
enter
jmp
cmpsb
les
push
popf
stc
enter
stos
and
inc
inc
jmp
dec
roll
adc
or
xchg
mov
cmc
movsb
push
gs
outsb
ret
data16
sub
call
sbb
enter
push
test
lret
add
add
in
xor
test
es
push
aam
jnp
cmp
lret
scas
mov
dec
movsl
xchg
popa
leave
xchg
jmp
jecxz
cli
pop
xchg
mov
roll
xchg
lahf
inc
fsubp
loopne
popf
loop
jg
imull
xor
mov
mov
mov
push
inc
mov
call
pop
add
ficoms
sub
inc
ja
jmp
test
scas
xchg
popa
dec
lods
popa
xchg
xchg
push
leave
lret
xchg
daa
xchg
xchg
imul
dec
adc
aam
cmpsb
xlat
add
jp
shlb
xchg
loop
ret
dec
addps
ret
xchg
mov
mov
ljmp
cmp
addl
subl
cs
test
mov
in
out
dec
dec
push
add
popf
push
inc
in
mov
mov
cmpsl
sub
ficoml
xor
js
inc
sbb
ljmp
enter
sbb
xor
clc
ret
aas
sbb
fcoms
cmpsl
inc
xor
dec
jbe
rcl
inc
mov
and
cmc
pusha
dec
cwtl
test
jns
jbe
das
dec
test
pop
xchg
jo
in
and
dec
xchg
dec
bound
or
mov
je
ret
popa
jle
loopne
push
or
jl
ljmp
stos
mov
mov
sarl
mov
addb
add
scas
adc
or
loope
imul
ss
sti
fdivs
in
dec
mov
mov
dec
aaa
ds
fildl
in
outsl
and
cmp
or
rcl
xchg
nop
leave
popf
stc
sub
xor
sti
les
jl
inc
adc
sbb
cwtl
lock
outsb
lds
std
adc
sahf
stc
addr16
jecxz
dec
add
pop
push
in
std
or
xchg
pop
cmp
jecxz
mov
xchg
cmp
jns
cs
mov
test
ljmp
clc
rolb
gs
lahf
std
or
xchg
lea
pop
adc
in
xchg
mov
push
cmp
pop
lret
popl
xor
cmpsl
lods
mulb
sub
int
ds
fstpl
xor
dec
cmp
jle
andb
cmp
je
loope
imulb
cmpsb
dec
test
inc
or
test
daa
jle
iret
adc
jb
mov
push
icebp
in
jbe
sub
cld
and
push
iret
mov
mov
cmp
test
into
sub
inc
xchg
outsb
pushf
or
dec
shrl
fsts
pop
xor
pop
aaa
loopne
xchg
movsb
sub
adc
push
stc
sub
scas
imul
sbb
je
out
sbb
sub
xchg
lds
shlb
jge
and
or
lcall
aam
jge
dec
in
xchg
jb
ljmp
aad
cmp
xor
fdiv
das
shll
int3
mov
add
or
outsl
xchg
lahf
jl
xchg
dec
mov
mov
call
inc
test
movsb
ret
lods
test
cmp
call
out
and
loop
repz
imul
in
fistps
aaa
jl
jge
shll
cli
xor
pop
sbb
loope
sub
sub
arpl
stos
mov
inc
lods
not
mov
pop
and
push
add
push
loopne
and
xchg
out
ljmp
jge
mov
inc
leave
jg
in
lahf
jle
iret
fistpl
ds
push
int3
cmp
bound
jnp
sbb
dec
sub
cmpsb
icebp
inc
fnstenv
xchg
rolb
stos
nop
pop
push
repz
cmp
jne
xchg
sub
cmp
jecxz
daa
xchg
or
cld
add
jne
out
sub
mov
add
cmpsb
lock
decl
dec
in
cmc
jmp
ja
xchg
ret
pop
and
test
inc
pop
scas
mov
adc
mov
mov
les
dec
popf
sub
pop
sbb
xchg
and
sahf
mov
or
in
rcrb
add
pop
or
rep
jl
push
jo
xchg
sub
and
outsb
loopne
das
daa
cltd
sub
jmp
movsl
aad
and
sub
and
out
pop
loopne
dec
pop
add
xor
cmp
ja
xorl
jge
lcall
int3
mov
test
sti
adc
adc
xor
into
das
insb
xor
mov
add
gs
adc
cmc
int
les
daa
jp
and
pushf
cmp
xor
cmp
and
mov
jg
lods
scas
xor
insb
jp
xor
mov
pop
adcb
pop
and
mov
lds
dec
ficompl
or
xor
jl
mov
mov
enter
push
pusha
push
sbb
sbb
leave
imul
xor
xor
mov
inc
jp
test
test
mov
push
or
cmp
daa
in
mov
or
sbb
loop
mov
and
add
mov
lcall
enter
pop
and
mov
lret
xchg
ret
imul
xor
adc
lods
mov
js
jmp
out
jnp
xchg
cmp
push
femms
mov
loop
adc
leave
sti
xchg
fisubrs
fisttps
andl
roll
out
xchg
cmp
and
and
jecxz
enter
mov
mov
fisttps
jb
sti
mov
cld
iret
clc
and
jns
sarb
arpl
pop
jle
mov
mov
cmp
loope
push
out
adc
dec
sahf
jg
out
dec
movsb
repz
ljmp
lods
in
jne
mov
mov
test
hlt
stos
gs
cmpl
jge
lods
mov
jno
int3
aas
mov
cltd
or
mov
cmpsl
dec
jecxz
mov
mov
cltd
inc
into
xchg
cmpb
dec
das
push
xchg
mov
shll
xor
mov
mov
in
or
jg
shll
outsb
sbb
arpl
adc
add
mov
iret
xor
icebp
jmp
xor
fcomip
lods
cmp
ja
out
out
cmp
sub
jne
inc
sarb
adc
enter
imul
jne
sub
inc
shl
or
xor
lock
mov
mov
rolb
pop
and
cltd
mov
cmpsl
push
lret
jge
mov
xor
aas
jmp
es
stos
andl
flds
dec
lret
xorl
add
mov
xchg
push
sub
aam
or
mov
sbb
stc
outsl
leave
jp
sbb
mov
repnz
add
lock
repz
mov
pop
adc
cmp
sarl
cmp
data16
xchg
cmp
popa
xchg
cmp
pop
and
nop
cld
stos
out
daa
lods
out
fisubrl
enter
or
adc
std
clc
dec
std
and
rorb
cmc
xchg
rep
xchg
inc
shlb
xchg
xor
nop
fdivrp
ret
aas
fnstsw
xor
or
mov
xor
pushf
cwtl
cmp
pop
adc
push
rcrl
popl
mov
sbb
jg
jae
std
mov
xor
dec
jmp
arpl
xchg
movsb
dec
dec
test
test
sbb
shl
shll
aam
mov
cmp
fs
pusha
mov
getsec
leave
xchg
adc
pop
pop
mov
mov
movsb
jle
and
pop
xchg
and
xor
dec
pop
leave
pop
or
lods
xchg
negb
out
xchg
xchg
adc
jns
mov
push
cltd
out
clc
jbe
xchg
rolb
inc
subb
sti
imul
cmc
push
daa
popa
and
push
stos
in
repz
enter
push
cmp
inc
jle
imul
mov
shrl
add
lret
stos
nop
ds
roll
lods
or
out
sub
jmp
mov
js
pop
cld
clc
repnz
clc
leave
mov
gs
repz
jl
loop
cmp
push
dec
ret
push
mov
cmpsb
sub
sub
and
fnstenv
mov
in
cmp
xchg
jl
daa
jp
in
add
data16
add
xchg
xchg
cmpsb
inc
add
movsb
lods
les
push
mov
inc
or
add
dec
sub
aad
jmp
xchg
xchg
jnp
and
sub
imul
mov
mov
fisubrs
and
int
movsl
dec
loope
into
inc
in
jg
int3
ror
jge
mov
cmpsb
imul
or
out
addb
mov
cmp
push
pop
lret
push
mov
xchg
cs
dec
test
adc
daa
mov
int
lea
push
nop
pop
adcl
hlt
popf
es
adc
add
fstp
jge
mov
cmp
push
scas
addr16
clc
mov
mov
xchg
and
je
lods
in
rolb
xchg
mov
repnz
fcomip
push
pusha
mov
lret
xor
imul
adcb
jmp
push
sti
sbb
pop
jp
jo
mov
sub
or
inc
lcall
adc
stos
inc
orb
cmpxchg
jmp
int3
ja
rclb
aad
mov
popa
dec
lahf
int
sbb
cmp
insl
sbb
xchg
jecxz
inc
or
dec
ja
dec
jp
pop
cmp
filds
mov
test
lods
xchg
xor
sbb
dec
mov
repz
stos
mov
push
pop
icebp
lock
adc
mov
mov
add
or
inc
jnp
imul
push
pop
sbb
xchg
mov
leave
imul
xchg
ret
cs
push
xchg
aaa
fists
mov
fnsave
popa
sbb
mov
lret
iret
es
fistpl
fldcw
and
in
daa
ret
test
cli
sub
mov
dec
sbb
or
mov
mov
sub
jle
out
aam
mov
cmp
sub
mov
outsl
xchg
icebp
jno
and
xchg
mov
jle
jnp
repz
imul
pop
or
xchg
mov
xchg
sbb
in
adc
jo
cmpsb
mov
in
popa
imul
pop
mov
sarb
js
adc
jecxz
sub
arpl
add
push
aaa
xor
mov
sub
test
or
jne
xchg
call
scas
push
mov
jbe
sbb
test
mov
in
cld
repz
add
dec
dec
rep
dec
sbb
movsb
jne
js
movsb
jnp
fs
test
adc
cmp
test
scas
loope
lahf
call
cmp
in
push
loopne
jle
mov
or
dec
pusha
xchg
pop
inc
imul
cmc
sbb
add
ret
insb
int3
push
inc
mov
stos
sahf
cmp
xor
dec
ficoml
mov
scas
xor
cli
cli
fs
call
popf
and
push
mov
lods
es
adc
pop
add
fisubrl
cmp
out
inc
mov
inc
test
faddl
insl
add
in
xchg
lods
adc
pop
mov
dec
dec
pop
iret
andb
pop
ljmp
lret
xor
fadds
mov
cmp
imul
fwait
out
pop
fs
push
and
adc
add
xchg
xchg
popa
inc
jae
aad
add
jnp
sbb
xchg
cmpsb
push
inc
fsubrs
aam
xor
aam
jg
xor
icebp
repz
xchg
sub
pop
mov
sub
mov
stc
ret
sbb
mull
cmpl
xor
movsb
popa
scas
neg
mov
sub
sbb
fsts
xchg
lds
bound
mov
ja
jnp
nop
sahf
sahf
mov
mov
fisttps
push
test
xor
movsl
rcrl
pop
test
xchg
fisubs
cmpsl
je
inc
pop
jle
outsb
cltd
fyl2xp1
pop
sbb
cmp
push
daa
sub
push
push
shlb
pop
add
jbe
pcmpgtw
mov
stos
les
rcll
sbbb
xchg
rcll
std
jle
mov
fwait
loop
xchg
pop
sbb
cltd
dec
outsl
nop
xchg
pop
leave
push
dec
jge
ljmp
inc
push
sub
mov
mov
cmp
fs
int
imul
add
outsl
in
jecxz
fcmove
imul
enter
mov
inc
xor
dec
int3
int
inc
push
inc
dec
xchg
or
sahf
xchg
inc
mov
scas
int3
push
loop
xlat
test
movb
rolb
add
sbb
outsb
imul
or
pop
mov
mov
pop
mov
js
ljmp
mov
jb
push
adc
jnp
jbe
ret
out
mov
push
lods
lods
dec
lret
loop
test
cmovp
ds
stc
xlat
push
jb
fnstenv
pop
adc
loope
out
testl
mov
push
popf
inc
dec
adc
cmc
lcall
sub
jnp
in
cli
leave
imul
push
mov
das
xchg
and
pop
adc
in
cmp
sub
stc
int
xor
ficoml
shll
xchg
insl
test
xor
sub
bsf
xor
cmpl
das
fcompl
fmuls
roll
fdivr
adc
inc
in
je
not
jg
and
add
les
les
add
dec
push
out
movsb
jg
lcall
cmp
dec
cmp
sahf
pop
mov
xchg
add
or
add
mov
jns
dec
mov
shlb
push
inc
xor
cli
ret
addb
imul
sub
cmpsb
dec
jl
xchg
mov
dec
outsb
fisttpl
push
loopne
mov
adc
inc
jecxz
add
rcrl
xor
cs
mov
insl
sbb
pop
pop
add
js
xor
pushf
int3
adc
dec
mov
pop
xchg
adc
pop
les
dec
mov
inc
cmp
jge
adc
rcrl
mov
aad
test
adc
jge
das
mov
push
dec
popa
mov
inc
enter
jb
int
std
cmp
cmp
out
pop
push
imul
ds
mov
add
cmp
fxam
sbb
in
inc
pop
aam
sub
cmp
out
push
cmp
jnp
mov
stos
ret
pop
dec
jbe
sub
or
xchg
stc
mov
jbe
ds
incl
sub
shrl
add
ja
dec
xor
jbe
arpl
jns
in
test
les
mov
aaa
mov
xlat
aaa
idivl
dec
dec
subb
fwait
lret
pop
xchg
mov
data16
lock
outsb
imul
add
mov
adc
jne
jnp
in
mov
addr16
cltd
ja
push
and
xchg
and
ficomps
icebp
mov
cmp
xor
popf
sub
pusha
fistpll
movsb
xchg
std
pop
mov
push
inc
and
mov
push
movsb
repz
or
sbb
push
xorb
lret
sahf
insl
push
push
scas
mov
shll
xchg
aas
mov
outsb
sahf
jnp
mov
xchg
sub
push
lds
push
out
mov
fidivrs
xchg
and
jne
cmp
aas
arpl
xchg
je
xor
ss
sbb
sbb
mov
lahf
dec
jns
and
loop
outsl
xchg
push
stos
adc
sub
shrb
and
mov
dec
aaa
or
inc
jp
sub
adc
pushf
pop
test
jp
jbe
xor
inc
jbe
xchg
orl
mov
cwtl
pop
jae
mov
cs
mov
inc
shl
sahf
xor
and
rorb
mov
insb
into
or
pop
push
decl
movsl
sbb
jmp
sbb
mov
xorl
add
mov
sbb
dec
loopne
xor
add
jecxz
mov
mov
out
andb
sub
shlb
les
or
fdivr
cld
mov
int3
loop
pop
aas
xchg
jne
cmp
pop
imul
pop
into
popf
cmp
sti
outsl
mov
outsb
lret
test
rcrb
push
cmc
pop
insl
into
mov
adc
push
pop
test
xor
int3
pop
into
dec
cmpsl
repnz
out
sub
adc
and
dec
shll
lret
push
cmp
mov
mov
pop
push
inc
mov
mov
nop
mov
fisttps
cld
stos
dec
lds
pusha
push
in
jl
push
sub
mov
jmp
lods
enter
fists
pop
mov
fildll
cli
movl
je
xor
outsl
out
das
push
and
clc
into
call
inc
rorb
mov
divb
xchg
imul
xor
mov
xor
push
push
pusha
lret
xchg
push
push
scas
mov
add
adcl
add
in
int3
xchg
jbe
imul
adc
pop
data16
arpl
repnz
sbb
mov
mov
inc
repz
xchg
xchg
inc
cld
push
out
pushf
push
pop
stc
adc
jmp
mov
or
jbe
in
ret
or
push
scas
aad
inc
push
mov
insl
add
ds
rcrb
xor
ds
cmp
fmuls
lods
call
cltd
cmp
and
ret
or
xor
jno
clc
scas
xor
fsubrs
test
or
sbb
jge
fstps
repz
push
leave
imul
sbb
in
test
sub
adc
pusha
in
pop
pusha
gs
sbb
sub
stc
ret
sahf
sbbb
jae
fisubl
fwait
mov
jle
cmp
fbstp
and
cltd
dec
int
inc
xchg
xor
or
movsl
xor
xchg
jno
or
xchg
das
and
fisttps
lea
push
or
or
push
pop
jmp
fimull
je
cmp
xchg
rolb
int3
out
aas
icebp
fcompl
inc
clc
xor
mov
rcl
jb
xchg
out
fimull
cld
add
or
imul
repz
cmp
hlt
in
rcrl
pushf
out
lods
insl
mov
fsts
xchg
fidivrl
gs
pop
jmp
call
inc
fst
aaa
inc
xor
fisttps
inc
shlb
mov
cmp
push
fimull
or
or
movsb
loope
popa
jle
bound
les
cmp
enter
shr
cmpsb
mov
add
add
mov
ret
add
add
xchg
xlat
pop
cwtl
out
mov
inc
or
mov
jns
pusha
mov
repnz
jbe
mov
std
jno
bnd
sbb
cmp
and
das
add
daa
clc
or
or
cmp
imul
mov
jo
pushf
sub
dec
cwtl
popa
push
add
sbb
sub
cmpl
sub
xlat
fsubrs
aad
out
fisubs
jge
push
xor
sahf
adc
out
mul
repz
stc
cli
mov
aas
aaa
adc
lods
leave
inc
std
repz
cli
ret
jo
mov
cltd
sbb
inc
data16
imul
or
jp
rcl
adc
jo
idivb
mov
jl
arpl
fildl
xchg
lds
or
fldl
cmc
clc
shrb
dec
adc
aaa
mov
pop
cwtl
mov
cmp
fmuls
int3
je
mov
xchg
inc
cwtl
push
fnstcw
mov
inc
cli
imul
push
mov
lods
test
sub
ljmp
js
push
shrl
lds
sbb
xor
jmp
sahf
xor
xor
push
mov
push
lds
faddp
xchg
in
xor
sub
lods
lahf
int3
pusha
cmp
sbb
andl
push
pop
imul
fwait
sub
xchg
xchg
xchg
push
mov
jae
jb
jo
pop
add
mov
frstor
scas
daa
clc
lock
shl
int
dec
push
xchg
aaa
ja
movb
lock
shlb
xor
dec
or
insb
xlat
test
cli
ffreep
pop
gs
jl
sbb
stos
jne
and
and
bound
mov
cmp
add
jne
inc
pop
pushf
inc
adc
dec
movsl
sub
std
aam
aad
cmpsb
movsl
loop
lret
mov
sbb
dec
push
sti
adc
lret
push
shrl
xchg
push
adc
jp
xor
dec
xchg
jecxz
popf
stos
in
cld
test
xchg
je
inc
jbe
xchg
fldcw
aas
jl
sbb
xchg
imull
adcb
pop
dec
aaa
sbb
dec
imul
cs
in
push
roll
mov
jmp
or
les
adc
sbb
cmp
enter
xchg
sbb
rorb
pop
mov
inc
sbb
and
test
and
sub
add
test
adc
arpl
jno
clc
mov
jmp
dec
xchg
pop
mov
adc
sbb
push
scas
outsb
je
scas
negb
inc
inc
cmp
inc
jg
sub
or
testb
mov
mov
ljmp
mov
mov
cmpb
inc
ds
inc
int3
sub
rcrb
loopne
lea
mov
adc
cmp
dec
jge
test
add
in
iret
and
movsb
mov
stos
cmp
jp
pop
adc
jae
mov
stos
ja
jp
or
mov
in
xchg
jle
sbb
idiv
xor
lds
gs
and
xor
cmp
adc
loope
faddl
adc
lds
jb
lahf
ret
mov
outsl
inc
test
adc
pushf
pop
push
jmp
jmp
xchg
jns
lock
jb
push
xor
hlt
repnz
adc
jno
enter
hlt
popf
or
mov
jl
xor
inc
aaa
daa
inc
les
out
jmp
loopne
mov
jne
xchg
scas
fsts
loope
adc
popf
xor
aam
in
dec
xchg
mov
inc
xchg
push
push
add
mov
cmp
xchg
out
mov
inc
jb
insl
lret
repnz
sub
sub
lods
repz
adc
sbb
aad
or
mov
pop
push
pushf
loop
xchg
jnp
or
push
mov
movsb
mov
mov
pop
mov
jl
mov
filds
xor
sbb
imul
sbb
xchg
add
popl
sbb
les
and
jp
imul
pop
in
jns
push
das
add
pusha
jl
jbe
sub
dec
call
clc
fdivs
sub
mov
outsl
into
sub
mov
xor
sbb
fcomip
mov
pop
jbe
push
mov
scas
jge
imul
cmp
xchg
pop
ss
movzbl
ds
dec
mov
in
hlt
aam
adc
pop
lods
jae
cli
mov
fildll
sbb
pop
test
test
mov
adc
pop
sbb
insb
lods
popa
cmp
jmp
mov
xchg
fstpt
adc
enter
test
rorb
repnz
mov
jmp
xchg
add
add
sbb
out
lds
imull
or
pusha
inc
inc
ja
and
enter
and
push
push
mov
xor
out
and
pop
scas
jmp
jns
inc
andb
ret
mov
imul
mov
inc
imul
sbb
jmp
mov
imul
jo
int3
sbb
jns
dec
into
shll
or
mov
rorl
push
into
mov
xor
mov
mov
outsb
ljmp
pop
ficomps
out
push
into
negl
sub
adc
lods
aad
inc
in
inc
icebp
pop
push
mov
dec
dec
jne
js
xchg
adc
fwait
nop
orb
jmp
ret
mov
xor
xor
inc
daa
stos
icebp
scas
test
dec
call
out
cmp
cmp
jecxz
cmpsl
aam
dec
adc
call
fdivrp
ret
jg
xchg
inc
movsb
sbb
int
mov
fsubs
fisubs
aaa
fs
sbb
mov
inc
xor
insb
xchg
inc
pop
ds
pop
dec
popf
vcvtss2si
cli
stos
xchg
fwait
xor
mov
inc
mov
nop
sub
lock
adc
aas
cmp
fisttpl
lds
add
notl
pop
int3
cli
xchg
push
outsb
lock
int3
mov
ffree
insb
aas
cmpsb
xchg
pop
pop
sbb
sarl
mov
cld
sbb
cmp
ljmp
test
add
push
lcall
xor
cltd
jle
push
aad
aaa
insb
inc
jmp
andl
lahf
jle
xor
fnstenv
fimuls
aas
jo
adcb
adc
sub
adc
hlt
xor
roll
out
sti
gs
ss
xchg
inc
mov
mov
pusha
in
jno
cmp
or
nop
cmc
rorb
mov
mov
sub
pop
jns
in
imul
adc
jo
jno
xorb
mov
xor
mov
pop
shlb
dec
icebp
mov
sbb
push
fisubl
imul
mov
fdivrs
mov
scas
rclb
pop
dec
mov
stc
lea
cmp
sti
mov
jge
aaa
sbb
nop
push
dec
inc
dec
rcrl
cmp
inc
fwait
xchg
repnz
pop
std
das
mov
ljmp
fstps
xchg
xchg
pop
xchg
imul
cwtl
push
rcrb
std
cld
sbb
mov
in
push
pop
jnp
pusha
mov
scas
mov
cmp
sbb
jne
out
push
sub
mov
inc
jecxz
cs
pop
int3
pusha
and
mov
lds
adc
sub
test
sbb
loopne
iret
in
adc
imul
push
fabs
cmc
mov
cwtl
fidivl
adc
xor
and
add
aam
pop
jl
in
mov
hlt
stos
pop
hlt
fdecstp
sti
inc
mov
dec
adc
notl
lret
js
dec
ja
mov
cld
jns
cmp
sub
lret
jbe
ret
jno
fidivs
push
sahf
xor
push
pusha
cltd
xchg
daa
ljmp
into
cmp
movzbl
push
cmp
mov
scas
xchg
inc
ljmp
mov
mov
pop
jl
pushf
sub
sarl
dec
dec
adc
push
ljmp
cmp
nop
jl
xchg
dec
cmc
icebp
mov
ret
adc
into
loop
mov
addr16
imul
stos
ret
pop
in
cmp
cs
add
scas
sub
mov
cwtl
dec
pop
mov
lahf
les
cmp
cli
movb
test
std
sbb
dec
push
mov
pop
pusha
push
rcll
sarb
test
ja
jne
sbb
dec
xor
fidivs
mull
mov
or
ja
push
sahf
adc
movq
stc
icebp
outsb
leave
mov
add
mov
mov
movl
push
jmp
mov
ret
or
test
push
mov
testb
pushf
outsl
popa
xchg
xchg
mov
test
mov
mov
pop
jno
inc
inc
sbb
jg
stos
xchg
mov
orb
add
mov
insb
test
data16
and
sub
rorl
cli
out
test
sub
mov
lcall
fdivrs
mov
adc
jnp
stos
test
std
shrb
add
enter
or
repnz
sub
inc
imul
popa
test
fs
cwtl
pushf
xor
and
mov
iret
pop
dec
loopne
adc
mov
ds
and
or
stos
stos
push
cmp
inc
lcall
insb
mov
inc
xorl
xchg
and
iret
jae
sbb
int3
sub
test
fidivl
lcall
fs
cmp
lea
xlat
into
cmp
xor
shl
ret
daa
add
mov
jb
mov
pop
add
cli
pop
repz
aaa
add
sarl
jg
repz
and
pop
aad
or
fwait
mov
repnz
cmp
or
aaa
adc
xor
cli
mov
xor
into
movsb
pop
scas
push
in
mov
dec
sub
mov
movsb
shrb
fcomi
adc
je
add
jecxz
jnp
test
cmpsl
insb
and
insl
sarl
adc
inc
daa
daa
xchg
mov
jno
insb
fs
mov
js
stc
mov
ret
add
jns
nop
xor
out
enter
hlt
pop
test
popl
push
add
and
test
pop
out
clc
jns
nop
mov
dec
fmull
ljmp
cwtl
add
jmp
loope
stos
stos
adc
inc
loopne
push
das
popf
nop
cs
test
xchg
sbb
outsl
jmp
dec
and
dec
stos
nop
cld
mov
cmp
arpl
dec
push
mov
and
adc
shll
test
and
ja
mov
adc
pop
lahf
cmp
inc
push
xchg
lods
leave
xchg
push
sub
adc
xchg
nop
test
jae
xor
lods
nop
xchg
dec
pop
pop
sub
mov
lock
stos
push
add
repnz
test
mov
into
cwtl
jg
jl
jbe
sahf
test
outsb
call
cwtl
das
adc
outsb
bnd
daa
xor
push
into
pop
inc
loope
sbb
pop
xlat
js
adc
jns
xchg
movsl
pop
dec
arpl
lcall
fs
mov
test
mov
stc
aad
add
lcall
pop
jl
sub
xor
pop
lcall
push
inc
jmp
cmp
aad
dec
daa
clc
lea
loop
mov
repz
std
cmp
jle
and
loope
jb
inc
in
inc
insl
push
lods
lods
xorps
mov
jp
mov
aaa
mov
dec
dec
jno
dec
scas
adc
mov
xor
push
dec
xor
dec
fiaddl
and
mov
sarl
insb
cwtl
movsb
mov
mov
xor
jle
mov
jne
cltd
xorb
mov
dec
lea
dec
clc
mov
xchg
sbb
lock
je
jge
rclb
hlt
nop
mov
fwait
mov
movsb
mov
dec
jp
pop
rorb
push
ljmp
lret
stos
stos
xor
loop
scas
divl
fmuls
push
or
popf
push
test
aam
mov
iret
mulb
mov
test
push
outsl
push
inc
cs
xorb
push
pop
fdivrl
jp
daa
pop
movsb
or
mov
jns
xchg
jle
clc
inc
jg
cwtl
gs
mov
scas
push
xlat
jecxz
pop
sbb
xchg
cs
or
xchg
sub
out
stos
lea
and
leave
sbb
mov
stos
sbb
in
inc
into
cmpsb
jecxz,pt
jle
push
mov
out
push
cmp
or
xchg
push
or
jecxz
aad
mov
stos
dec
xchg
call
inc
adc
xchg
sbb
jle
jno
jb
jno
shll
mov
aas
inc
jne
xchg
mov
sub
cli
popa
sahf
popl
repnz
fcomps
loop,pt
mov
or
call
mov
pop
mov
mov
in
add
pop
stos
es
sub
scas
lahf
or
sub
cs
cmp
sbb
dec
andl
inc
lret
shlb
xchg
iret
lret
enter
lahf
inc
shll
xor
mov
xor
ja
xchg
xchg
stc
lods
sbb
lods
nop
sub
jne
push
arpl
adc
add
mov
movsb
dec
pushf
inc
xor
jno
test
ss
push
test
fcomps
pop
js
inc
pop
push
into
or
das
and
adc
add
sub
ror
je
aaa
rorb
nop
out
pop
add
mov
jns
pushf
xor
stc
insl
add
xchg
mov
cmp
ret
lods
sub
shld
test
xor
pop
fistl
sub
xchg
rorl
sub
iret
mov
stc
sub
mov
aad
ret
and
and
js
xor
outsb
mov
ja
ss
inc
mov
jo
test
jle
or
into
inc
aad
and
mov
out
inc
dec
lahf
push
cwtl
pop
lds
scas
popa
out
in
push
lret
add
inc
fcoml
stos
jno
mov
idivb
jns
test
add
jnp
sbb
aam
pop
ljmp
push
push
lahf
add
dec
adc
mov
sub
dec
outsb
cli
sbb
ds
cld
xlat
push
mov
jmp
xchg
das
addl
mov
test
imul
in
jle
mov
jecxz
mov
incl
adc
mov
flds
sub
add
sbb
cli
jns
jmp
mov
pop
lahf
inc
mov
or
adc
lock
mov
sub
pop
add
push
push
jo
pop
test
mov
std
insb
lcall
xor
sub
push
pusha
lret
sub
out
inc
cmp
or
clc
add
andl
loopne
xchg
je
cld
push
fmuls
mov
sbb
push
popf
adc
mov
call
fbld
jp
mov
ret
sbb
inc
negl
aas
and
sub
inc
icebp
lods
aad
cld
movsb
leave
test
pop
mov
div
shrb
loopne
xchg
adc
call
lods
aaa
or
pop
pop
popa
push
inc
stos
lods
dec
inc
insb
popa
outsl
lds
inc
xor
aad
fwait
pop
stos
and
or
lock
int3
pop
jg
ss
ret
stos
cs
es
rorb
popa
out
aad
sbb
jle
ja
cmpsl
adc
adc
hlt
rcrb
lods
mov
sbb
dec
popf
std
ljmp
adc
cmpsl
dec
mov
sub
jnp
inc
xchg
mov
push
pop
mov
dec
rol
jno
pop
lret
mov
adc
sbb
pop
ret
clc
cmp
push
nop
test
adc
shlb
movsb
int3
mov
stos
lea
mov
aas
cli
sbb
lea
add
mov
sbb
jg
adc
inc
jecxz
xor
stos
rcl
sbb
test
jae
dec
fabs
in
or
iret
cmp
jne
aaa
mov
testl
fwait
jle
xchg
inc
sub
movsb
inc
ret
xchg
mov
add
cmc
adc
add
jb
call
push
pop
mov
jne
movsb
in
cmp
into
stos
adc
xor
pop
fwait
add
inc
sub
xchg
stc
push
xchg
push
fnsave
sarl
fsubs
imul
subb
das
jecxz
mov
fiadds
adc
cmp
jbe
jne
or
cltd
ljmp
jl
ret
dec
adc
std
ljmp
clc
sbb
mov
xor
mov
xor
aaa
cltd
or
jmp
jbe
xchg
add
jg
sub
jbe
sub
in
mov
pop
sbb
pop
jne
sub
xchg
les
mov
jge
cmpsl
lods
sar
mov
jle
mov
jle
or
es
clc
mov
cwtl
jns
out
pop
lea
orl
movsb
mov
dec
fidivs
les
imul
std
dec
jnp
add
xor
cmp
add
xor
sar
xor
mov
xor
imul
sub
popa
pop
cmp
setno
jno
out
aas
call
mov
insl
mov
rol
lret
cmp
push
mov
push
jg
popf
mov
popf
push
sbb
jnp
lea
stos
xor
inc
imul
xchg
add
mov
push
xchg
jb
push
pushf
roll
fwait
shl
sarl
cmp
inc
inc
ret
and
fmuls
ds
jne
jno
add
mov
pop
add
fbld
js
sbb
and
cs
insb
repnz
sub
mov
mov
xchg
shlb
imul
inc
mov
js
add
pop
sbb
and
dec
iret
inc
mov
in
dec
movsl
call
pop
sub
mov
mov
loop
xor
jecxz
imul
call
out
xchg
aas
or
xchg
lcall
dec
stc
ret
mov
stc
cmpsb
adc
iret
repnz
out
inc
or
mov
push
mov
gs
lds
dec
push
sbb
xor
test
scas
sbbb
jne
pop
adc
add
sahf
add
ret
xchg
inc
mov
push
fisubrs
cs
or
ss
imul
xor
jmp
and
les
pop
mov
clc
add
add
cwtl
ja
test
cltd
or
jb
push
mov
lods
mov
jae
mov
shr
jo
iret
adc
dec
je
adcb
and
jb
and
loope
pop
jmp
mov
repz
jg
xchg
xor
cli
and
mov
mov
into
pop
idiv
sub
loope
ss
sub
popa
sub
les
nopl
outsl
push
pop
pushf
cli
cmp
jmp
mov
and
and
and
and
cmc
push
adc
jb
push
orb
ret
and
mov
in
sbb
stc
fwait
inc
or
dec
sub
std
in
or
test
arpl
test
mov
add
xchg
pushf
xchg
push
adcb
sti
inc
neg
movsb
add
shrl
xchg
das
call
repnz
pandn
or
jmp
and
push
mov
xchg
sets
inc
js
push
pop
adc
xchg
xor
jns
scas
pop
mov
or
jle
pop
enter
mov
nop
inc
sub
mov
mov
mov
cmp
lret
mov
popf
ljmp
pop
cmp
clc
ficompl
ja
jnp
and
pushf
psrlq
xchg
xchg
and
ret
xchg
add
insl
in
xorl
inc
pop
test
loopne
or
aas
or
cltd
lods
fdivr
scas
adc
shlb
jbe
lcall
cmpsb
fadd
push
lods
mov
mov
xchg
xchg
push
add
enter
loope
sbb
cmp
jp
dec
mov
pop
lret
movsl
push
test
cmp
shlb
and
dec
jg
les
sub
jl
lahf
push
sub
mov
mov
stos
add
cmp
cmp
mov
push
cmp
adc
cli
or
sub
xor
andb
mov
dec
xor
jl
maxps
in
pop
mov
adc
sbb
pop
add
mov
xchg
push
push
popa
ds
lret
push
rclb
pop
dec
mov
aaa
xlat
orl
and
pushf
add
pop
fistps
rcl
ja
mov
aam
rol
add
into
bound
neg
aas
cmp
out
sti
lcall
ret
scas
mov
sub
fwait
adc
icebp
sub
rep
mov
les
imul
hlt
push
mov
add
lahf
dec
loopne
sbb
and
adc
jl
inc
std
or
dec
jae
jl
pop
lea
aaa
jb
add
repz
xorl
xchg
out
dec
pop
repnz
sbbb
les
pushf
push
icebp
es
jg
pop
xchg
sub
xlat
clc
cmpsb
pusha
dec
inc
insb
sbb
cmp
pop
test
imul
and
sub
cmp
push
arpl
jno
or
cmp
repz
imul
loopne
dec
jne
ret
push
inc
fnstsw
xchg
cmp
int3
jae
push
ds
hlt
test
mov
cld
testb
push
cmp
leave
xchg
cmpsl
enter
sbb
ljmp
std
mov
outsl
faddl
sbb
dec
xchg
iret
enter
jmp
xor
stos
jl
mov
loopne
push
xchg
adc
aam
xor
mov
and
xchg
xchg
pop
popl
mov
or
mov
rcrb
mov
dec
jno
xor
lret
mov
adc
push
rorl
or
les
sub
loope
pop
and
in
in
push
stos
add
ljmp
ret
nop
gs
or
mov
mov
xor
lcall
test
inc
in
jl
pminub
and
adcl
pushaw
fiadds
inc
push
cmp
bound
adc
aam
es
shlb
jp
mov
dec
push
pop
rcrb
mov
ja
in
fbstp
or
sti
mov
cs
jp
push
enter
xchg
into
aam
test
cmp
cs
or
fidivrs
cmpb
enter
insl
aam
cmp
mov
dec
add
vcvttpd2dqy
xchg
sbb
mov
clc
jns
jno
jge
jecxz
mov
xchg
xchg
add
add
fstpl
inc
rcrb
xlat
ret
aam
xor
xor
xchg
shl
push
mov
es
push
cmp
mov
lods
out
mov
add
or
add
in
lahf
mov
cmc
inc
lods
stc
pop
iret
adc
add
and
sbb
dec
push
mov
pushf
pop
popa
mov
lods
add
pop
data16
mov
xchg
mov
enter
cmp
cmp
push
cld
popa
scas
jecxz
and
mov
cmp
adc
lock
xchg
out
adc
add
cmpsb
adc
xor
or
lock
cmpsb
testl
xchg
out
mov
cmp
out
mov
testb
cmc
adc
pop
mov
popa
or
mov
fs
jno
adc
inc
fiadds
test
pop
out
movb
shll
out
pop
cli
push
fwait
roll
jp
xlat
mov
mov
jne
dec
adc
push
push
inc
mov
xchg
int
fadds
rdtsc
test
scas
out
loop
icebp
xchg
or
cld
shl
addr16
cmpsl
ret
inc
faddp
cwtl
or
jl
enter
sbb
bound
jns
and
ds
mov
pop
xorl
mov
adc
int
lock
xchg
test
fdivl
cmp
add
mov
mov
mov
jns
add
jne
mov
xor
and
stos
roll
fs
scas
cmpl
lcall
ss
or
jae
inc
cmp
inc
xor
sub
scas
xlat
mov
scas
orb
mov
lret
add
int
movsl
ror
xchg
in
nop
push
push
ficompl
lcall
sub
and
in
ret
adc
inc
push
inc
ljmp
mov
mov
pop
mov
jp
out
arpl
pusha
push
push
xor
add
push
mov
call
jbe
sub
mov
fwait
inc
retw
or
popa
pop
sahf
fdivrp
sbb
sbb
pushf
pop
sub
aad
inc
pop
jb
xchg
xchg
repz
popa
addl
ja
cmp
ljmp
pop
xor
call
aam
mov
dec
or
cmp
addl
xlat
addl
fcmovb
xor
hlt
imul
cmpl
leave
dec
loopne
xor
xorl
leave
int
out
inc
dec
jecxz
lods
inc
hlt
xor
cli
push
dec
testb
jle
shll
push
stos
testl
imull
imul
adc
cmp
inc
mov
rclb
cltd
mov
test
inc
icebp
iret
push
jae
pop
imul
fadd
add
bsf
repz
push
mov
xchg
aaa
shll
and
push
mov
inc
xor
sti
lahf
repz
aam
add
out
xchg
dec
jmp
dec
and
fimull
mov
jle
inc
mov
adc
add
cmp
mov
lds
push
mov
ss
xchg
xchg
pop
leave
cmp
jmp
push
lret
pop
ret
cli
addr16
and
mov
mov
gs
in
scas
xchg
and
int3
out
sbb
cmpb
inc
inc
jl
and
repz
ja
mov
jo
fs
xor
sub
in
push
iret
add
dec
rep
inc
pop
enter
lret
push
mov
rcrb
gs
xor
into
inc
icebp
pop
fimull
lock
jmp
std
mov
dec
imul
ret
mov
sbb
cmp
mov
pop
leave
andl
shlb
fdivl
cmpsb
ret
lods
int
sbb
mov
adc
push
jns
and
xchg
inc
js
fisttps
adc
loope
xlat
sbb
or
sub
adc
call
loop
xor
cmp
test
mov
mov
xchg
icebp
cmpsl
pop
dec
cmpsb
adc
pop
dec
lods
test
enter
aas
test
sub
pop
data16
cmpsl
cmp
adc
divl
shl
push
jbe
dec
decb
pop
push
mov
cmp
xor
js
dec
cltd
cld
inc
pop
mov
inc
sub
sub
xchg
stc
lods
std
push
pop
hlt
fucomp
jmp
mov
aad
sar
push
dec
into
add
data16
sub
jge
pop
jo
inc
call
filds
test
dec
cld
adc
cmp
sbb
fcomi
pop
push
je
loop
jo
js
xchg
sbb
push
cmp
test
mov
jb
arpl
negb
mov
jae
or
out
lret
push
daa
push
add
dec
xor
pop
scas
popf
inc
jb
add
sbb
pushf
ret
or
xchg
ficomps
outsl
sbb
and
mov
jge
cmp
lcall
scas
mov
xchg
adc
sti
push
fbstp
cld
xchg
push
or
xchg
xor
xchg
xchg
shll
popa
movsl
xchg
stos
mov
in
addr16
cld
mov
pop
pop
lret
xor
ss
into
in
test
insl
sbb
into
mov
adc
mov
int
adc
idivl
sub
mov
inc
cmp
xchg
add
aad
loop
sub
repz
mov
xchg
nop
mov
cmc
jge
icebp
and
cmpsb
mov
cli
mov
bound
cmpsb
inc
repz
out
or
lods
movsl
and
xchg
pushf
jecxz
lods
dec
push
sub
pop
sbbb
out
pop
jne
pop
pop
js
mov
aas
js
dec
cmpsb
call
push
in
fidivrs
cs
push
mov
into
mov
negb
sti
inc
and
push
push
mov
scas
adc
cmp
pop
push
ja
out
cs
push
cmpl
test
push
popf
mov
push
dec
cmpsl
xorl
enter
adc
inc
push
pop
out
fnstenv
loopne
pushf
rorl
mov
push
adc
fs
mov
pop
mov
and
enter
stos
pop
lods
inc
ljmp
fiaddl
imul
loope
push
cmp
outsl
xchg
add
push
push
nop
mov
mov
cwtl
fdivs
sub
xlat
inc
int
lcall
lea
jns
inc
xor
fimull
mov
cmp
fistpl
mov
fwait
inc
loop
shll
lock
cs
mov
movsl
adc
ss
fsubrl
add
xchg
out
ljmp
cwtl
cli
add
imul
ja
lcall
pop
or
in
rorb
add
mov
call
push
and
stos
mov
mov
jo
mov
imul
lcall
push
shr
loop
push
add
test
dec
das
xlat
mov
inc
mov
jno,pn
inc
sbb
sarl
push
pop
jb
scas
mov
sub
fsubl
stos
dec
cmp
inc
jp
arpl
push
test
popf
pushw
dec
jb
je
mov
jnp
arpl
jns,pt
add
leave
movl
pop
loope
ret
pop
push
nop
add
sar
push
test
jno
into
js
adc
mov
mov
test
add
arpl
mov
cmc
inc
rorl
out
mov
add
mov
aas
popa
decb
dec
xchg
shll
push
mov
lahf
jl
out
or
push
loop
and
ret
jl
gs
movsb
je
pop
xchg
mov
mov
and
std
outsb
dec
push
fisttpl
dec
pop
sbb
fsubl
adc
jne
jbe
push
xor
hlt
and
std
arpl
xchg
mov
ficoml
jmp
jbe
cmp
push
in
call
jmp
imul
cmp
cli
stc
aam
pop
in
enter
add
fcompl
add
push
mov
stos
addr16
int3
pop
or
xchg
iret
sbb
dec
cld
jns
add
js
push
xor
jp
and
fldcw
xchg
daa
jne
push
mov
js
leave
ds
insb
pop
cmp
cmp
arpl
or
shl
js
lcall
sbb
push
clc
into
mov
add
imul
call
cmpsb
shlb
pushl
mov
arpl
mov
xor
xor
andb
jg
pop
mov
out
pop
cmc
push
popa
or
push
pushf
mov
fidivl
adc
sbbb
ljmp
in
shr
rcrb
add
std
lds
and
xor
ljmp
ljmp
and
insl
dec
insl
sahf
lods
mov
cltd
jg
xor
adc
add
insl
pop
xor
pusha
dec
test
int
cwtl
in
and
fildll
inc
adc
lea
or
cmpsl
dec
and
addb
push
movsb
lods
inc
inc
ja
lds
cli
pop
mov
xor
mov
push
pop
insb
movsb
stos
dec
sbb
into
sub
add
lock
repnz
ja
jecxz
add
call
fcmovu
jnp
loopne
daa
mov
pop
inc
add
dec
aas
in
cmc
int3
or
xor
pop
and
in
lods
xor
cmp
adc
xchg
adc
inc
nop
and
add
sub
testb
aas
out
rcrb
xchg
adc
push
cmp
sub
mov
cmp
lods
out
aas
pushf
sti
imul
arpl
and
push
repz
jns
jle
mov
add
loopne
inc
je
inc
cld
lods
daa
jns
sub
adc
xor
sbb
divb
mov
out
popf
inc
fisubl
clc
pop
or
adcb
out
nop
imul
pop
cmp
mov
es
jge
adc
mov
and
mov
sbb
mov
jo
jnp
subb
jb
roll
xchg
or
mov
sub
iret
sub
push
add
out
mov
adc
jl
daa
cwtl
add
inc
mov
cvtdq2ps
iret
cli
xor
push
inc
sub
idivb
outsl
mov
stos
shll
add
popf
scas
xor
xchg
lods
inc
add
cmp
ror
inc
mov
inc
jmp
popa
cltd
xor
sbb
mov
stos
cmp
pop
mov
negl
xchg
loope
pop
cmc
out
scas
imul
leave
cmpsb
mul
popa
push
jnp
aas
sub
push
sbb
enter
mov
xor
dec
clc
fsubp
xor
lcall
pop
pushf
or
cltd
add
jmp
test
mov
xchg
std
dec
mov
insb
out
sub
pop
outsb
gs
xlat
lea
icebp
push
push
sub
repz
lods
push
mov
addb
jecxz
fimull
mov
sahf
mov
mov
ja
xchg
mov
call
xor
imul
and
sarl
inc
xchg
movsl
xor
and
fidivrl
adc
cmp
mov
jmp
aam
fisubrl
or
cmp
push
mov
mov
inc
pop
push
aad
push
pop
lods
outsb
push
scas
cltd
xor
pop
fldt
addl
jle
lock
jle
imul
lods
xor
imul
out
push
in
dec
out
mov
stc
mov
ret
daa
dec
aaa
lods
ror
gs
ret
mov
mov
fists
repz
ret
ret
insl
push
roll
add
pop
jmp
xchg
daa
loopne
xchg
rolb
sub
fisttpl
popa
mov
ja
pop
xchg
rorl
inc
ret
mov
fimuls
into
in
pop
mov
loop
arpl
xor
int3
xchg
push
rcll
movsb
push
sbb
dec
cltd
adcl
popf
and
sub
and
pop
shlb
insb
push
fdivs
or
shl
es
filds
loop
pop
push
mov
loopne
jnp
jl
cmc
pop
dec
out
jp
das
rcrb
adc
mov
or
fimull
mov
fwait
jcxz
or
mov
aaa
mov
adc
push
insl
xchg
sarl
push
lods
js
mov
fnstsw
shrl
sbb
cmpsb
dec
mov
or
mov
fsubl
add
push
xor
lock
rcrl
pop
pushf
sbb
mov
les
js
cwtl
xor
sub
hlt
or
sbb
cmpb
leave
int
insb
int3
jbe
mov
inc
and
mov
xlat
lret
ljmp
je
push
jbe
ds
into
push
sub
add
mov
xor
mov
push
mov
shll
adc
out
hlt
jle
cmpsb
and
pop
adc
fcmove
push
push
lret
and
lds
mov
lcall
sbb
xchg
pop
stos
stos
push
out
pop
jbe
mov
data16
and
rorl
cmp
cld
repz
pop
add
ficoml
jnp
dec
mov
cmc
push
push
test
aam
push
mov
test
jbe
orl
stos
in
je
sbb
les
or
cltd
add
lods
xor
cmpsl
inc
sahf
dec
bound
insb
and
or
addr16
iret
out
cmp
jmp
jle
pop
sahf
jne
add
pushf
lret
inc
fidivrs
inc
add
and
je
cmp
pop
pop
out
add
imul
adc
insl
jmp
movsb
jbe
roll
pop
or
push
mov
push
rcl
gs
nop
mov
and
push
jae
ret
imul
mov
mov
lods
cmp
fldl
jle
pminsw
das
loop
in
cltd
adc
rcll
test
test
jecxz
add
inc
mov
es
adc
cmp
icebp
hlt
orl
test
cmp
add
cs
outsb
out
repz
and
push
xor
jg
ljmp
fmuls
sbb
inc
sbb
adc
imul
add
jge
inc
sub
sub
lret
data16
inc
adcb
jnp
aaa
repz
sti
enter
enter
jbe
lcall
in
in
repnz
scas
movsb
or
lea
jb
fdivs
mov
and
pop
es
mov
xchg
cmp
popf
insb
jb
xor
imul
sub
adc
sar
xchg
adc
xchg
cmp
repnz
out
mov
fidivrs
and
ret
lock
cmc
pop
stos
pop
xchg
std
jo
mov
out
xor
or
xlat
insl
ja
int
pop
jmp
dec
xor
cli
xor
push
add
out
add
sbb
push
clc
and
inc
les
sbb
fs
push
cmp
fisttpll
dec
inc
or
rorb
shlb
sbb
dec
jecxz
cmpsb
imul
leave
fs
jne
add
mov
push
add
cwtl
imul
xchg
mov
sbb
mov
cltd
leave
cmc
pop
imul
xor
inc
mov
and
mov
js
sub
out
fwait
cmp
xor
cltd
cmc
inc
jae
cwtl
xchg
xor
add
fiadds
sub
call
das
xor
add
std
sbb
insl
shrb
pop
add
cltd
pop
rcrb
or
jmp
daa
push
test
movsb
mov
mov
jae
sarl
imul
pop
xor
ret
dec
mov
sub
scas
pushf
jo
and
arpl
sbb
xor
push
mov
and
scas
hlt
ret
int
pushf
push
mov
in
rorb
push
pop
or
enter
adc
repz
dec
insb
adc
std
sarb
stos
mov
and
lds
into
mov
mov
push
es
test
or
or
mov
cli
fistl
call
popf
xchg
fld
jne
cmpsb
js
in
cmp
xlat
rol
mov
cmp
pop
adc
testl
cmp
roll
scas
call
mov
fsubl
pushf
das
mov
or
jge
add
mov
data16
test
std
ret
outsl
fimuls
sbb
mov
lcall
pop
vcmpss
ja
pop
fs
leave
movb
push
mov
nopl
leave
out
or
inc
xchg
xor
inc
lds
arpl
mov
inc
sub
mov
loopne
outsl
insb
mov
leave
and
and
xchg
mov
pusha
mov
inc
cmpsl
bound
aam
outsb
sti
out
inc
mov
jmp
sub
or
xor
dec
push
mov
or
fisttpll
jle
insl
fucomp
lods
push
sbb
mov
lea
pop
mov
mov
ss
pop
mov
xchg
adc
je
jge
cmpl
jmp
movsl
xor
and
fidivs
jge
aaa
xor
jne
stos
insb
mov
jle
lret
jmp
sbb
cmp
out
push
push
adc
cs
das
andb
pop
cld
cmp
or
lock
and
rcll
push
xchg
orl
aaa
adc
inc
bound
push
stc
div
aam
xor
aam
ret
js
inc
dec
dec
fldenv
mov
inc
mov
cwtl
mov
leave
jl
pop
jb
xchg
mulb
cmp
inc
mov
mov
and
mov
leave
clc
pop
ss
cmpsb
orl
inc
aam
fstl
ja
jg
ljmp
xor
lock
ss
vpmacssdql
jecxz
std
jbe
adc
outsb
fs
and
or
jne
cmp
dec
data16
std
push
popa
jp
mov
in
test
call
ljmp
inc
push
mov
xlat
test
xor
push
call
inc
mov
cmpsl
mov
mov
mov
es
mov
or
sub
sbb
jle
out
cltd
dec
flds
aam
repz
add
fnstcw
xchg
jge
sbb
sbb
sarb
pop
push
sub
pop
pusha
sbb
outsb
in
lahf
pusha
jecxz
movsb
ja
inc
mov
aas
mov
adc
xor
flds
leave
and
repnz
mov
push
mov
adc
jo
fdivl
cld
and
and
or
in
push
pop
fsub
xor
sub
sbb
lcall
mov
sbb
pop
pop
dec
and
pop
mov
rorb
mov
movsb
fwait
mov
jne
jbe
ljmp
mov
xchg
xchg
xlat
cmpsl
outsl
in
rorl
pmaxsw
push
pop
int3
cmp
cmp
scas
clc
xor
xor
ficomps
imul
clc
shlb
sbb
iret
fsubrp
inc
mov
rclb
lahf
cmp
in
call
int3
into
addl
out
imul
sbb
cmpsl
push
xchg
in
loopne
jb
sahf
jo
aam
cld
js
repz
dec
sbb
and
add
icebp
cmp
gs
pop
xchg
das
jle
outsl
int
pop
sbb
mov
ret
pop
sti
mov
adc
ficoml
leave
fbstp
movsb
loopne
cli
push
jle
cs
jne
pop
lea
mov
jl
xchg
dec
pop
dec
mov
dec
adc
pop
test
fisubl
iret
addl
add
pusha
dec
lret
adc
xchg
and
fwait
in
dec
adc
in
inc
mov
adc
shl
mov
lahf
mov
cld
inc
mov
add
mov
mov
dec
mov
addb
mov
dec
fnstsw
adc
cmp
insb
aad
xlat
scas
sbb
mov
rol
outsl
xor
pop
xchg
adc
mov
popa
cmp
mov
js
insb
psraw
push
js
out
jp
sbb
es
cs
cltd
leave
add
add
neg
call
das
popf
popa
scas
daa
cmp
lds
dec
lret
ljmp
mov
lock
loope
sub
push
stc
stos
xchg
jg
lret
lock
and
xchg
in
ret
push
andb
sub
pop
mov
cs
imul
mov
pop
data16
cmpsl
in
dec
or
mov
test
jp
mov
mov
stos
iret
bound
add
dec
sarb
dec
push
push
clc
hlt
or
rclb
dec
jb
or
adc
pop
pop
or
jmp
movsb
jns
jg
lea
fistpl
pop
lcall
inc
push
je
fstps
cmp
arpl
mov
jp
ja
sub
lahf
insl
fistl
jns
push
pushf
lret
loope
dec
loopne
icebp
push
and
and
dec
ret
mov
push
xor
shrb
bound
call
fsub
jnp
ret
ja
cltd
popf
sub
push
mov
dec
mov
fcmovne
and
cld
repnz
adc
in
test
mov
pop
fldl
bound
pop
scas
fcomip
jnp
fstps
dec
ds
dec
xor
cwtl
sti
sub
xchg
sahf
jae
xor
fisubrs
jae
or
inc
fcompl
jg
rcrb
jne
les
psubb
out
or
dec
xor
lcall
in
or
mov
scas
push
ror
push
mov
add
inc
adc
testb
sbb
loopne
gs
dec
add
add
add
popa
xchg
and
xlat
sub
mov
mov
jmp
int
andl
cli
cs
js
mov
pop
mov
jp
sbb
and
dec
sub
xchg
insl
xor
mov
inc
lods
push
push
jbe
add
imul
mov
addb
xchg
jo
xor
cmpsl
stos
cmc
jbe
mov
popf
jg
xor
lds
adc
mov
in
mulb
add
push
xor
test
mov
or
rolb
stc
pop
adc
or
aad
dec
sbb
addl
enter
mov
pusha
sub
movsl
outsl
pop
rcrb
jge
jge
push
iret
push
repnz
jp
test
popf
jne
pop
gs
shrl
repnz
jmp
xorb
rcl
jmp
in
and
mov
and
cmp
les
mov
shlb
cmp
adc
packuswb
push
arpl
push
ds
jge
ss
cmc
inc
into
jbe
ja
sbb
test
adc
push
cmpb
add
xchg
es
outsl
dec
ret
dec
dec
cmpsl
cmp
lock
test
sti
je
adc
pop
or
iret
push
jp
and
sti
push
repz
inc
and
pop
ret
sub
in
inc
mov
movsl
jecxz
pop
adc
ss
call
lea
mov
mov
sbb
mov
out
mov
cmpsl
sbb
fbld
out
js
enter
dec
sub
pop
pop
inc
arpl
mov
lods
imul
inc
out
leave
notb
sbb
pop
movsl
add
into
sub
jecxz
hlt
int3
movsb
out
mov
mov
cld
out
sub
imul
xor
xlat
imul
xchg
ret
jb
mov
push
es
nop
mulb
std
mov
fnstenv
mov
stc
xlat
dec
xchg
jmp
lsl
movsl
adc
in
push
std
cmc
sbb
scas
cmpsl
fidivs
sub
fidivs
fnsave
xor
pop
int3
popf
push
sub
xchg
stc
nop
dec
jne
mov
sbb
das
je
icebp
inc
dec
fstpl
dec
dec
fldt
dec
out
fs
push
fcoml
cmp
mov
and
lahf
decb
sub
fiadds
cmp
cmpsl
jbe
xor
sbb
js
sbb
aaa
inc
push
sub
push
test
lret
jecxz
inc
push
hlt
ffreep
subb
jmp
add
jl
inc
jae
das
addr16
test
jo
aad
movsl
int3
mov
inc
daa
inc
sarl
jb
mov
lods
rcrl
sbb
cmc
ljmp
mov
aam
push
fimull
inc
xchg
sub
cmp
out
adc
jns
jo
fwait
scas
push
jg
mov
out
loop
cmc
cmpsb
mov
cltd
mov
cltd
shl
jle
push
dec
rolb
or
in
xor
xchg
sbb
xor
enter
imull
fwait
stc
pusha
cmc
stc
ljmp
jne
loop
loopne
pop
inc
pusha
mov
mov
or
addr16
jnp
mulb
and
jns
fcmovb
pop
sbb
loopne
or
loopne
cmc
fs
push
out
jmp
pop
ret
push
fstps
and
lret
popa
sahf
mov
inc
stos
int
sahf
daa
mov
flds
mov
movsl
adc
pop
ss
daa
fbld
js
dec
lret
xlat
ret
mov
dec
sbb
sbb
test
or
dec
int
add
push
xor
ret
cmp
ljmp
cwtl
dec
sbb
mov
push
scas
cmp
aas
fists
ret
psubd
pop
dec
xor
xchg
imul
xchg
push
int
add
xor
lret
mov
mov
pop
rclb
fisubrl
jnp
stos
mov
mov
lahf
adc
and
xlat
outsb
es
xor
inc
sarb
sti
outsb
mov
sub
and
push
sti
sar
loopne
scas
xor
jo
test
cwtl
jno
nop
sbb
adc
xchg
les
in
mov
jbe
mov
outsb
scas
shr
xchg
fcomps
xchg
sub
rclb
fstps
and
int3
jne
mov
push
ljmp
int3
addr16
sub
mov
mov
cs
lods
inc
pop
js
daa
test
pop
out
dec
push
das
dec
pop
adcb
movsb
icebp
adc
ja
in
test
sub
adc
imul
shrb
xor
add
test
popf
fcoml
fcompl
cmpsb
push
mov
xchg
jmp
xchg
scas
mov
lret
lock
ja
shll
mov
shll
fdivl
sbb
xor
sti
jno
popa
mov
loope
clc
out
or
mov
or
shll
jno
push
inc
cmp
inc
mov
mov
repz
sahf
xor
mov
lcall
rcll
in
inc
loope
mov
ja
test
fwait
sbb
movsb
sbb
xor
and
ss
sub
aam
movsb
nop
rcll
xchg
push
cmp
cld
push
lret
jg
ret
jns
adc
fcomip
stos
cwtl
mov
insb
je
and
and
iret
jae
out
test
push
and
into
repnz
sbb
sti
outsb
xchg
xor
pushf
subb
fisttpl
pusha
mov
sbbb
sbb
dec
sti
repz
mov
push
pop
aam
xchg
push
push
dec
or
movsb
daa
mov
fsub
mov
pushf
xchg
adc
jecxz
adc
test
pop
jge
dec
sub
mov
xor
decl
cmpsl
out
sub
cmpsb
adc
xchg
lea
xor
mov
test
mov
js
ret
or
sbb
mov
mov
xchg
int
and
and
jp
sarl
push
mov
rorl
enter
negl
addr16
cmp
test
or
or
popf
xor
jns
mov
les
inc
stos
dec
imulb
lea
dec
push
dec
es
sub
ss
jp
sbb
add
dec
test
inc
push
stos
aaa
jb
cld
mov
sarb
sbb
or
loop
mov
cmp
inc
loope
fbld
xchg
inc
mov
and
int
mov
into
pushf
inc
dec
jle
pop
mov
dec
mov
mov
jo
add
dec
xchg
stos
sbbl
adc
loop
fidivrl
ds
adc
lods
mov
mov
imul
loope
hlt
xchg
cwtl
mov
cli
pop
add
in
roll
or
jmp
xlat
xchg
cli
xor
sbb
pushf
dec
push
pop
iret
fs
push
mov
pop
pop
rorb
stc
pop
fsts
lahf
mov
sub
jbe
xor
sbb
ret
unpckhps
das
cmp
mov
sub
scas
addr16
mov
sub
sbb
repz
sbb
xor
inc
daa
cltd
xor
stos
daa
dec
push
push
xchg
xor
mov
iret
pop
dec
cmovg
cmp
dec
adc
add
js
enter
dec
outsl
enter
lret
lds
test
out
rclb
sub
icebp
sub
je
jns
push
movsl
add
pop
scas
inc
pop
adc
pcmpeqw
or
add
jle
or
ficoms
pop
mov
lahf
adc
mov
lret
xchg
xchg
aad
popf
fnstsw
add
iret
xorb
cmp
aad
lds
pop
cmp
add
dec
jecxz
ss
cmp
fnsave
cmp
and
je
lea
sbb
in
mov
out
into
jno
inc
dec
add
mov
rol
sbb
out
arpl
mov
stc
test
sarl
enter
mov
mov
iret
mov
sbb
sahf
cli
adc
dec
adc
in
ret
in
adc
fs
clc
jne
arpl
jb
mov
pop
mov
movsl
push
mov
cmp
roll
sbbl
insl
nop
mov
push
test
lds
out
mov
pop
add
roll
xor
outsb
sbb
cs
and
xchg
jbe
lret
mov
xor
cmovg
pop
mov
xchg
lahf
add
js
mov
jno
call
xchg
ret
sub
idiv
jmp
cld
add
loope
push
ljmp
cmpsl
outsb
cli
xor
std
int3
and
rdtsc
jge
xorl
sbb
xlat
sub
or
loope
dec
jg
adc
pop
push
mov
add
fisubrs
cmp
jo
add
sahf
xor
cmpsl
xor
lock
jbe
push
adc
sub
outsl
ret
fs
add
movsb
repz
repnz
sbb
dec
xor
bound
cmc
outsb
movsl
iret
scas
test
cmpsl
or
sbb
push
outsl
jb
mov
dec
orl
mov
daa
xchg
popa
jp
cmp
call
imul
icebp
scas
jge
mov
or
ss
in
dec
and
mov
xchg
lock
aad
addps
dec
cmp
mov
scas
push
je
sbb
or
jmp
cld
int3
lods
dec
xor
aad
shrb
fstl
fistpll
xchg
mov
push
mov
imul
mov
movsl
dec
daa
xchg
cmpsb
cmp
jl
shll
or
jbe
sub
fsub
ja
out
push
inc
cmp
mov
pop
mov
mov
mov
icebp
mov
popl
xor
sbb
subl
std
push
lret
test
sbb
ljmp
in
loope
xlat
and
aas
add
pop
and
mov
mov
jge
out
push
adc
jmp
lret
stc
test
clc
jnp
and
pop
aas
test
out
mov
add
pop
popa
dec
cmp
cmp
inc
ja
fisttpl
icebp
sub
in
jb
movq
ret
jae
aad
std
xchg
jo
jge
xchg
mov
dec
shl
lods
xor
addr16
jnp
add
lahf
popw
movsl
loop
addl
cmp
push
jmp
ljmp
mov
mov
bound
mov
and
adc
cmp
int3
jb
mov
jp
js
adc
adc
lods
pop
outsb
xor
testb
popa
or
cli
jmp
and
sti
movl
xchg
sahf
inc
or
lock
fs
jmp
sub
addl
cmp
pop
jmp
mov
aas
pop
repnz
mov
or
add
dec
sbb
jle
popa
push
sbb
stc
out
test
sub
ljmp
inc
push
dec
subb
push
roll
test
xor
shr
fsubl
movsl
gs
cs
out
pusha
imul
aas
out
cmp
mov
pop
or
dec
cmp
sbb
js
loope
xchg
fdivl
cld
mov
fldcw
xor
loopne
mov
pop
lea
lahf
imul
or
int3
sbb
sub
test
enter
cmp
mov
xchg
jne
cltd
mov
fcmovnbe
repz
push
push
add
xor
push
mov
test
out
lret
fsubrs
inc
or
idivb
ja
sbb
xchg
cmp
xor
push
sti
and
sbb
add
mov
mov
mov
pop
mov
cmp
mov
imul
mov
imulb
pop
or
jb
xchg
data16
pushf
insl
cli
inc
fsub
inc
add
push
loop
or
aaa
loop
sbb
jl
pop
xor
xorl
push
lock
dec
aam
or
mov
in
or
xchg
ret
dec
lahf
add
call
pusha
les
leave
xchg
fisttps
jo
adc
xor
mov
subb
clc
push
dec
jne
mov
mov
lahf
pop
lret
mov
jg
xchg
ljmp
popf
fwait
add
mov
dec
jp
mov
lret
dec
add
pop
sbb
pop
lahf
rorb
cmp
cs
jle
inc
xor
test
or
jmp
sti
mov
mov
movsl
push
js
je
sub
mov
inc
add
cli
pop
mov
mov
pop
repz
jb
push
mov
mov
scas
xchg
mov
add
sub
sbb
popa
or
pop
ljmp
mov
or
xchg
cmc
add
xor
shrb
mov
adc
mov
push
mov
or
dec
repnz
add
cwtl
int3
sub
rclb
out
mov
xchg
jl
imul
xchg
or
leave
xor
jno
mov
add
cli
loope
ret
mov
sbb
xor
cmpl
in
shrl
mov
mov
jp
cs
jl
out
push
adc
les
fstpl
inc
pushf
add
xor
pushf
mov
fnstsw
push
icebp
mov
repnz
cmp
jg
jb
stos
pop
sbb
dec
ja
mov
dec
aam
cmpsb
pop
mov
adc
sbb
movsl
sbb
mov
adc
repz
sub
cmp
nop
jb
mov
pop
into
pop
add
rorb
aam
xchg
sbb
and
mov
test
lods
sbb
orb
incl
mov
cmp
adc
jmp
mov
fidivrs
test
inc
adc
jmp
test
jg
lret
in
enter
jle
cmpsb
jge
lcall
out
dec
scas
mov
subl
insb
fdivrl
pop
cmp
lods
and
leave
jp
cld
sub
in
out
sbb
cwtl
xchg
xchg
sub
lock
xor
je
sub
or
mov
add
scas
cmp
jl
dec
add
out
lods
xchg
cmp
xchg
inc
das
out
xor
jno
repz
add
mov
mov
cs
scas
stos
or
pop
cmpb
icebp
lods
ds
aad
sub
mov
int
mov
loope
cmpsl
fisubs
loopne
or
and
pop
push
xor
inc
add
pushf
xor
in
mov
andl
xchg
xchg
shll
sub
iret
push
push
movsb
mov
jo
stos
cmpsl
and
in
xor
jecxz
ficompl
inc
in
mov
add
gs
sarb
mov
fsubs
cmp
inc
mov
out
cmc
push
call
jp
insl
inc
stos
add
mov
fcmovnbe
or
repnz
mov
out
pop
sbb
andl
or
mov
mov
sub
xor
cli
mov
in
jae
xchg
hlt
std
dec
inc
xchg
loop
sbb
outsl
arpl
push
loop
fwait
inc
push
pop
lock
stos
rcr
rcrl
mov
pop
inc
push
cmp
inc
xlat
popf
adc
mov
dec
loopne
sti
test
mov
cli
add
fidivs
lret
nopl
mov
sub
popa
push
mov
lret
aad
and
fs
mov
and
jl
inc
aam
sbb
xor
rcrl
icebp
adc
sbb
sbb
fimuls
mov
sub
jb
xor
xor
xor
es
push
imul
inc
push
bound
jno
xchg
out
in
loop
dec
inc
lret
and
fdivs
adc
test
lahf
push
out
add
push
jle
gs
jp
dec
cs
mov
sbb
lahf
addr16
ds
sub
call
inc
imul
add
pop
enter
xor
dec
iret
enter
cmc
aas
mov
popf
test
sbb
and
shr
push
xor
sbb
aaa
mov
neg
or
mov
and
hlt
cli
les
dec
mov
push
sbb
lcall
jle
mov
mov
and
jno
push
jle
cmp
sarb
icebp
in
cmp
pop
int3
pop
cmp
stc
cwtl
cmpsl
push
adc
inc
repz
lar
push
les
pop
jmp
inc
or
push
push
mov
cmpsb
or
aas
xchg
add
push
out
add
mov
testb
aas
xchg
arpl
mov
cmp
gs
cmp
jecxz
jno
das
dec
jo
sub
sahf
adc
scas
popa
jo
mov
pushf
fdivrs
lahf
jno
add
dec
xor
aam
pop
out
push
jo
daa
mov
je
jne
daa
rcll
outsb
movsl
inc
add
sub
jecxz
sbb
adc
das
or
jns
dec
xchg
cmp
mov
fwait
popf
jecxz
mov
bound
jecxz
inc
mov
mov
loopne
pop
lea
imulb
ljmp
outsb
xchg
inc
fistpl
adc
xchg
enter
lret
mov
sbb
popf
dec
mov
inc
xchg
clc
lods
sub
cmp
add
dec
and
push
sbb
stc
sub
push
inc
mov
mov
sbb
xchg
jecxz
dec
sub
fldenv
sub
or
in
addr16
in
mov
mov
and
xchg
jno
add
std
les
mov
add
dec
out
ljmp
or
sub
adc
nop
jo
shll
jg
jo
sub
es
xchg
add
inc
ret
lock
cltd
push
push
mov
imul
or
xchg
mov
fisubrl
jmp
sub
cmpsl
fldenv
adc
fld
mov
loop
mov
mov
pop
mov
std
adc
adc
movl
imul
dec
push
call
fisttpll
xor
mov
push
pop
fnstsw
je
ljmp
sbb
pop
sub
xlat
pop
jno
cltd
fucomi
mov
outsl
shrb
imul
mov
jnp
inc
jl
cmpsb
xchg
lret
mov
sbb
lret
test
pop
inc
in
out
popf
add
cmp
shlb
inc
ficoms
or
pop
push
jmp
push
ja
pusha
mov
addl
sbb
enter
sbb
jg
outsb
aaa
sbbb
les
scas
lods
fdivl
les
jnp
pop
push
in
add
loope
dec
sub
push
mov
iret
in
gs
filds
xor
push
jp
sub
sub
push
mov
inc
js
in
push
repz
loop
jg
test
add
testb
or
add
push
xlat
xchg
xchg
loopne
sbb
sbbl
pop
pop
jp
rol
je
inc
add
cmp
sarb
mov
icebp
jne
shlb
lret
in
cmpsl
mov
push
scas
pop
add
lcall
leave
lock
fs
divb
pop
dec
or
add
inc
mov
pop
lcall
mov
ds
pop
shll
call
dec
repz
mov
add
cli
in
aam
jecxz
out
popf
enter
cmpsb
mov
jmp
int
or
outsb
mov
outsb
push
je
jne
jbe
lcall
cmp
mov
jnp
xchg
mov
mov
jb
sbb
jns
sbb
insb
insl
ret
int
mov
sahf
and
mov
or
testb
mov
mov
sbbb
in
call
dec
mov
movsl
push
subl
or
subl
loop
adc
pushf
scas
repz
pop
lods
out
stos
pop
or
sbb
mov
adc
icebp
movl
stos
pop
lahf
jno
xchg
nop
sbb
lock
pushf
pop
push
test
imul
or
mov
ret
jb
push
push
pop
and
add
mov
sti
mov
push
or
mov
dec
cmp
jmp
dec
enter
push
xlat
and
mov
xor
pop
jb
in
popf
adc
and
out
xor
sbb
xor
sbb
xorb
call
inc
sub
mov
lods
inc
je
lea
imul
ljmp
xor
leave
sub
mov
shl
sub
pop
sub
daa
mov
mov
jnp
and
sub
cmpsl
xchg
adc
loop
popf
shl
jns
add
test
mov
mov
xlat
mov
dec
lcall
test
or
xchg
pop
adcb
sub
out
mov
cmp
lcall
mov
mov
and
aam
fsubrl
cltd
lds
leave
lock
inc
cmpsb
jne
fstps
pushf
sbb
cmp
cmp
fisubrl
popf
sti
into
dec
xor
leave
cmp
mov
xchg
popf
enter
stos
aad
movsl
ficoms
pusha
mov
ret
dec
or
cwtl
rcr
mov
sbb
aad
aad
or
fwait
adc
xor
inc
stc
aaa
pop
mov
int3
jnp
inc
or
subl
xor
lret
inc
and
xchg
cmpsl
xchg
or
dec
fiaddl
mov
popf
je
imul
int
loopne
lock
popf
pop
sbb
inc
jge
pop
push
inc
pop
jb
lds
xor
jbe
enter
into
hlt
pop
popa
call
jl
int3
je
pop
cld
cmp
or
inc
lea
inc
jne
cltd
dec
shl
lods
test
call
loop
or
inc
jb
test
xchg
scas
push
sbb
cmpsb
mov
cli
add
mov
cmpsb
aam
out
loop
test
setle
cmp
adc
and
fists
ja
adc
mov
mov
aas
mov
movsb
dec
out
jge
lcall
mov
xchg
rclb
sub
rolb
dec
inc
add
pop
sub
leave
andl
cmp
xchg
daa
push
xchg
push
and
sub
mov
mov
push
mull
out
and
xchg
pcmpeqb
aaa
dec
jne
fsts
mov
fisubl
and
stos
aas
mov
add
mov
add
stc
jne
ds
inc
lret
add
inc
call
push
imul
scas
push
test
int3
scas
pop
addr16
mov
mov
pop
cwtl
stos
sub
mov
test
stc
xchg
js
cmpsb
add
or
dec
fwait
push
mov
in
mov
jg
adcl
dec
mov
stc
lock
xchg
sbb
push
rolb
inc
mov
adc
shl
cmp
cmp
adc
lea
mov
stos
cld
push
xor
add
xor
cli
adc
lds
das
xor
sub
lahf
push
sub
xchg
pop
adc
std
push
push
add
fisubl
mov
enter
and
xchg
test
jo
aad
pop
repz
nop
xchg
stos
and
dec
arpl
sbb
or
sub
jbe
cltd
pop
bound
adc
mov
mov
inc
pop
in
pop
cli
jmp
adc
stos
sbb
mov
inc
subl
imul
adc
into
pusha
sbb
jb
inc
mov
lea
jb
incb
xor
mov
fs
add
xlat
ja
or
mov
addb
cmp
int3
cmc
cmp
imul
std
sbb
or
and
mov
repz
movsb
sub
outsl
xchg
arpl
pusha
jnp
jae
adc
inc
repz
sub
mov
cltd
das
jle
jl
ret
mov
js
xchg
adc
scas
jno
inc
mov
dec
aaa
push
cwtl
pusha
cmp
sbb
daa
sub
fs
fbld
jl
push
out
daa
push
mov
cmp
std
testb
fildll
mull
sub
xor
sbb
inc
or
lcall
push
cld
sbb
out
incb
push
mov
mov
jo
inc
adc
movsl
je
dec
or
jno
pop
call
cltd
push
sahf
adc
add
cld
mov
popa
das
dec
dec
sub
mov
mov
icebp
leave
and
test
xchg
testb
js
mov
flds
outsb
ss
imul
cmp
lret
cmc
sub
gs
or
dec
clc
pop
lahf
sub
leave
pop
push
xor
pushf
pop
jecxz
add
or
sbb
lock
divb
or
xchg
call
mov
sbb
sub
int
jns
xchg
lods
int3
pop
cmpb
lds
jb
or
inc
shrb
outsl
mov
test
divb
in
inc
mov
inc
mov
out
sbb
xchg
lods
jno
je
lcall
dec
aam
iret
inc
in
push
sti
sbb
fldenv
or
jecxz
push
lds
push
and
dec
mov
in
jp
std
pop
repnz
scas
mov
or
std
cmp
loopne
lcall
jns
dec
loopne
loop
lock
fsts
inc
push
dec
jbe
mov
test
mov
xchg
test
int3
add
inc
and
out
and
push
roll
jl
xor
mov
int3
cmp
int3
jb
lea
add
xchg
push
sub
ret
xlat
insl
push
adc
dec
sbb
push
pop
pop
prefetch
inc
pop
scas
pop
pop
or
and
nop
test
loopne
mov
je
sbb
popf
fs
cmc
into
movsl
push
mov
xchg
subl
sbb
cmp
mov
sbb
jae
or
mov
mov
or
mul
les
pop
rcrl
outsb
jns
stos
adc
faddl
cmp
cwtl
in
push
hlt
sbb
jl
inc
mov
out
stc
lahf
dec
pop
mov
push
jecxz
xchg
and
cmpl
mov
repz
nop
daa
aas
jg
fildl
shlb
or
ficoms
mov
aaa
cli
push
push
das
fsubr
shrb
test
inc
sub
cmp
mov
repz
add
arpl
mov
sub
fsubr
xchg
daa
add
cmp
in
jp
test
xchg
cmp
mov
pop
mov
mov
push
inc
scas
dec
lods
xchg
inc
sbb
bound
shll
or
mov
pop
xchg
mov
les
arpl
dec
xor
int3
mov
loope
and
xchg
jb
and
out
pop
lcallw
ret
pushf
push
jnp
aas
jecxz
or
push
test
adc
out
pop
push
push
test
pop
push
inc
icebp
lea
imull
and
pop
data16
jnp
jg
mov
mov
imul
bound
fisttpll
pop
shr
pop
jmp
repnz
mov
push
cmpsb
rclb
sar
push
lods
sub
mov
sbb
xchg
mov
lods
push
cwtl
pop
lea
xor
out
and
cmp
js,pt
xchg
push
cmpsl
jae
test
pop
bound
xchg
in
sub
xchg
into
stos
cmp
or
leave
sbb
test
mov
outsl
sub
mov
int3
mov
pusha
inc
xor
mov
add
sbb
fs
aam
pop
std
arpl
mov
cmpsl
push
pop
pop
in
enter
loope
scas
add
fwait
call
repz
and
mov
and
add
mov
out
xlat
lcall
mov
lcall
scas
fdivl
mov
fistpl
aas
ss
push
sbb
sbb
xor
mov
mov
shl
jmp
pop
inc
movsb
filds
test
cltd
lock
xor
ret
cmpsl
lea
hlt
out
sub
mov
pop
lods
repz
stos
rorb
clc
add
push
push
jns
dec
mov
mov
mov
push
sbb
lods
aam
mov
sbb
push
jbe
pop
pop
js
add
out
and
jns
rclb
jae
sbb
xchg
jo
inc
xchg
pop
pop
mov
ficoml
dec
scas
or
fwait
mov
mov
sbb
aam
scas
inc
fldl
js
cmp
icebp
dec
pusha
adc
inc
jecxz
xor
xchg
scas
xor
inc
loop
fs
cmp
div
mov
iret
lret
test
into
js
movsb
push
or
mov
mov
add
xor
xor
nop
inc
xor
lret
scas
out
ret
ret
mov
push
test
daa
inc
jle
cmp
leave
scas
mov
into
inc
ljmp
xchg
mov
adc
in
lods
lret
ljmp
mov
jb
lods
jg
lahf
push
loopne
jnp
js
in
and
lods
cmp
stos
fstl
or
mov
jno
movsl
mov
jbe
or
lcall
sbb
mov
loope
mov
testl
dec
lret
dec
and
push
ret
or
and
xlat
pop
fmull
push
int3
insb
imul
xchg
sbb
xchg
dec
stos
cmpsb
loopne
sub
cmpb
pop
aam
sbb
in
scas
ljmp
mov
fmull
jl
fnstenv
mov
nop
or
cmpsb
or
imul
aam
adc
popf
lahf
inc
jecxz
out
inc
fisubl
inc
ret
pop
jp
fisubrs
xor
movsl
lret
inc
iret
jmp
jecxz
fwait
popf
cmp
push
inc
test
xlat
sbb
cmpsb
mov
cmp
sbb
inc
test
mov
push
jp
enter
ret
mov
std
std
add
int3
mov
add
mov
pop
into
mov
push
aas
setnp
dec
lock
lods
fs
popa
test
or
test
int3
cs
push
ffreep
rcll
xor
outsl
push
jo
mov
imul
out
adc
jae
in
and
or
inc
sbb
arpl
or
aam
aam
fistpll
es
adc
push
sub
adc
cwtl
mov
xor
pusha
idivl
adc
dec
loopne
inc
mov
ja
and
mov
arpl
jle
and
int3
int3
inc
adc
mov
aas
gs
outsb
clc
add
xchg
fisubs
cmp
adc
sub
ds
jmp
addr16
loope
cmp
stc
and
xchg
faddl
and
jne
jecxz
inc
mov
call
mov
popa
or
into
pop
test
jnp
lcall
out
ficoms
insb
mov
out
imul
add
push
dec
xor
mov
arpl
test
cmp
inc
aaa
mov
sub
xchg
js
cmp
xor
fadds
fcomip
repz
push
jmp
sbb
test
push
sub
rcll
lcall
cwtl
mov
cmpsl
dec
sbb
idivb
lret
inc
dec
into
cli
std
mov
jmp
push
dec
fs
sbb
dec
pop
push
jmp
jb
movsb
in
fwait
mov
popa
inc
mov
sub
arpl
push
pop
push
idivb
fwait
lds
orl
or
mov
adc
adc
cmpxchg
nop
popa
ret
or
arpl
lahf
imull
fwait
cli
mov
add
mov
push
push
ds
pop
subl
cmp
cmp
mov
testl
xlat
pop
push
ja
data16
mov
shll
jb
imul
or
sub
or
xchg
inc
test
push
lock
jo
push
adc
in
inc
iret
pop
mov
cs
loop
lods
sarb
fstpt
adc
dec
xchg
dec
sub
scas
mov
mov
pushl
in
inc
bound
pop
jno
in
lock
jbe
cmp
mov
sti
mov
jg
orl
lahf
mov
mov
js
repz
jnp
and
push
out
jbe
jnp
out
in
mov
idiv
jae
fmulp
and
sbb
push
outsl
lds
jo
jb
es
jo
cmp
daa
sub
or
fdivr
and
xchg
xchg
push
fdivrp
jbe
insb
stos
lret
lret
in
dec
jp
daa
ss
mov
test
fistps
mov
aam
and
mov
stos
cmp
pushf
sub
push
pop
enter
adc
sub
inc
jbe
mov
lods
sub
or
test
mov
add
cmpb
lods
pop
jge
cmpsb
int3
jl
aad
or
add
push
bound
mov
push
test
call
mov
dec
push
sbb
xchg
nop
or
cvtps2pi
mov
movsl
lret
pop
mov
pop
roll
mov
enter
rcll
mov
cmp
sti
test
or
mov
int3
mov
mov
mov
mov
imul
mov
mov
adc
fcmovb
mov
loop
pop
das
push
mov
adc
adc
jae
ja
push
cmp
mov
or
mov
pop
outsl
push
or
orl
add
fcomps
mov
mov
sti
popa
pop
push
aad
inc
mov
mov
ljmp
add
adc
pop
adc
int
test
negb
popf
lock
divl
shr
mov
pop
inc
jecxz
jae
jae
cltd
push
rcr
adc
mov
movsb
lock
fcmovnbe
cmp
fldcw
pop
mov
inc
sti
mov
adc
mov
sub
in
mov
cmpsl
stc
mov
and
xor
cmpsb
adc
das
cmp
fimuls
mov
jns
scas
or
adc
mov
sub
dec
roll
filds
call
movsl
sub
mov
repnz
cwtl
loopne
mov
lret
out
mov
or
xchg
adc
outsb
loope
xorl
mov
cmp
add
adc
movsl
sbb
scas
dec
adc
dec
arpl
dec
jbe
lahf
mov
roll
cmp
mov
and
popf
and
inc
dec
lods
orps
in
in
and
inc
daa
mov
test
rorl
jp
pop
mov
movsb
mov
cmp
stos
sub
push
xchg
pop
mov
lea
adc
loopne
and
pop
push
nop
push
or
cwtl
sub
out
mov
push
jge
xchg
mov
outsb
testb
int3
xchg
test
orl
cmp
les
jbe
imull
mov
iret
fs
lcall
xor
fstpl
fmuls
out
xlat
test
stos
ds
subl
in
popa
cmp
fs
fdivrl
xorb
je
outsb
pop
icebp
xor
out
fimuls
pop
mov
xor
adcl
in
xor
sbb
dec
push
int
or
imul
bound
fcoml
je
out
jmp
or
add
mov
and
xchg
loope
xchg
cmp
lods
mov
repz
xchg
push
lds
insb
scas
dec
add
dec
add
jecxz
cmp
shrl
fldl
xchg
test
shrw
mov
jne
dec
sbb
mov
push
jb
out
inc
pop
mov
popf
push
jle
mov
push
adc
loopne
mov
pop
jbe
aad
pop
dec
testb
dec
push
mov
iret
fs
cmp
xor
or
inc
stos
adc
or
add
or
mov
push
xchg
and
in
sbb
push
test
mov
mov
cltd
es
and
lods
mov
rorb
loopne
call
xchg
mov
mov
jmp
sbb
mov
dec
jge
lahf
or
jmp
pop
cmc
divb
xor
xor
enter
mov
dec
jecxz
repz
cmp
push
inc
push
enter
sbb
jb
lret
and
insb
adc
pop
dec
cmc
lock
fldenv
fwait
inc
testb
aaa
jno
push
loopne
mov
sbb
inc
pop
xor
je
xor
shll
lret
call
das
sti
adcb
hlt
jae
mov
and
dec
sahf
fsubs
and
mov
cwtl
or
movsb
adc
fcoml
pop
cmp
insb
daa
adc
xchg
movsb
lahf
pop
and
leave
daa
mov
les
add
lret
mov
mov
cld
ret
pop
xor
push
int3
icebp
add
sbb
cmp
je
negl
ljmp
xorl
jl
inc
add
mov
scas
push
jbe
scas
dec
fbstp
add
pop
pop
mov
jns
sarb
inc
cltd
jecxz
fcomp
and
sbb
mov
aad
mov
ffree
push
push
in
push
jo
cmp
jp
insb
fstpl
sbbb
mov
sbb
jl
xor
mov
pushf
popa
mov
and
xlat
fiadds
sbb
ret
mov
scas
leave
push
pop
jp
push
cld
lock
repz
adc
fdivp
in
mov
lods
minps
pop
mov
daa
jg
push
mov
pop
sbb
scas
bound
or
cmp
sub
loope
xchg
pop
or
xchg
in
ret
decl
hlt
pop
icebp
inc
mov
loope
mov
and
faddl
jecxz
ret
adc
ds
push
jo
pop
stos
dec
jmp
xor
daa
xor
test
ss
pusha
in
popf
lock
jns
sahf
sbb
sub
dec
xchg
or
or
test
pop
out
stos
inc
xor
xor
lret
add
cmpsl
push
stc
inc
movsl
addr16
pushf
insb
aam
imul
outsb
pop
xor
jl
mov
push
ljmp
sub
dec
enter
call
add
loopne
jns
push
mov
push
adc
sarl
test
pop
add
push
mov
pusha
popf
inc
mov
cli
sbb
pop
inc
inc
sbb
out
xchg
vpunpcklqdq
inc
sti
jne
lea
mov
daa
nop
in
sahf
std
movaps
nop
mov
movsl
inc
cmp
mov
icebp
push
pop
push
mov
cmp
lods
push
lcall
xor
leave
rclb
fists
popa
outsb
xchg
sbb
sbb
popf
aas
pop
inc
or
sbb
lcall
imul
rolb
mov
aas
adc
arpl
lods
dec
adc
ja
jns
sub
mov
ss
pop
mov
rclb
xchg
dec
ficoml
je
je
stc
jmp
imul
cld
cli
hlt
cld
call
or
ret
ja
pusha
cmp
adc
iret
int3
push
scas
loopne
pop
aam
sub
push
xchg
cltd
sub
adc
lods
arpl
dec
pop
xchg
xor
adc
or
xchg
cltd
sub
mov
stos
inc
jmp
mov
mov
fwait
repnz
pop
inc
inc
fcmovu
xor
lahf
popa
lea
shrb
es
cmp
mov
fimull
pop
ficompl
xor
fwait
iret
push
out
bnd
popf
or
fisttpl
loope
sub
dec
push
or
xorl
mov
jnp
fs
inc
inc
dec
repz
aad
pusha
sub
xchg
adc
outsl
rcrb
adc
mov
dec
sub
pop
fs
pushf
rcll
cmc
fnstenv
dec
cmc
andl
pop
and
push
or
mov
fldt
jo
jo
shl
pop
pop
scas
mov
test
cmp
jne
pop
rcll
jg
into
dec
dec
lcall
jecxz
inc
pop
mov
jbe
push
cmp
std
adc
mov
cmp
xor
cmc
enter
test
jae
and
pop
jo
out
movsl
inc
push
out
shll
or
adcb
call
dec
push
std
push
aas
test
and
add
jl,pt
xchg
clc
xchg
cmp
jbe
push
dec
sahf
cmp
and
xor
sbb
out
mov
mov
xchg
outsb
lcall
out
in
stos
inc
mov
jecxz
xchg
fcmovu
daa
push
cmp
cmp
stc
cs
int
insl
movsl
data16
xor
pop
dec
sahf
mov
inc
test
xchg
or
sub
bound
ret
lret
sbb
js
rcr
sub
std
mov
lock
mov
sbb
sbb
rorl
call
enter
out
jne
lret
mov
call
cmpb
pop
aas
outsb
jae
aaa
insb
push
mov
lret
bound
or
or
cmp
popa
mov
bound
xchg
jg
ljmp
out
lock
push
xchg
in
or
mov
iret
out
mov
mov
out
dec
push
push
jns
in
or
xor
jp
fcmovu
xor
mov
add
cmpsb
loope
shll
in
xchg
lods
inc
movsl
in
sub
sub
imull
xchg
mov
aam
iret
dec
sub
xchg
pop
mov
mov
xor
lahf
insl
xor
xor
push
xchg
in
jecxz
cs
and
int
pop
fdivrs
push
or
cld
cs
push
daa
pop
or
dec
shll
sbb
pop
mov
jno
repz
mov
rol
fisttpl
lea
inc
in
xchg
repz
xchg
fistpll
sbb
nop
ds
in
cmp
xor
or
mov
sub
les
es
mov
dec
cwtl
cmp
pop
repz
aaa
mov
jno
cmp
lret
jne
cmpb
mov
imul
mov
aaa
inc
xlat
cli
je
mov
push
cltd
pop
inc
add
add
push
les
add
dec
in
adc
xor
aas
cmp
insl
mov
stc
nop
pop
das
xor
cmc
fwait
mov
cld
arpl
mov
push
shll
xchg
jae
cs
push
fcoms
xchg
xchg
jne
aam
cmovno
jecxz
in
addr16
scas
sbb
mov
mov
je
inc
popa
jb
in
and
stos
test
movsl
imul
mov
lock
ret
xchg
mov
add
mov
fisubs
pop
cltd
je
popf
push
or
ret
xchg
out
and
pop
fsubs
test
icebp
repz
mov
orl
repnz
ret
lods
sahf
sbb
scas
aad
push
pop
mov
iret
repnz
mov
xchg
pop
lods
dec
pushf
lret
or
push
push
mov
fs
cs
adc
pop
cmp
loope
rorl
and
mov
jns
mov
adc
xchg
imul
jl
test
outsl
rcr
jb
mov
push
mov
mov
or
and
add
popf
sub
in
jnp
ss
mov
and
inc
ss
test
cmp
push
mov
insl
add
jmp
sbb
jg
jp
ja
xchg
ror
fs
inc
dec
pop
add
add
and
and
jmp
xchg
adc
cmp
push
jl
dec
addr16
pop
loop
call
xchg
dec
les
scas
jp
sbb
or
jbe
dec
outsl
sahf
out
jne
push
sbbb
mov
outsb
xchg
add
sub
pushf
xor
dec
jmp
adc
icebp
mov
adc
sbb
sub
ja
jmp
inc
shrl
or
scas
mov
mov
jecxz
in
sub
mov
pop
mov
jl
ret
cld
incl
jl
das
or
pop
in
xor
gs
mov
imul
dec
jg
negl
pop
cld
sbb
mov
sub
nop
aas
je
ret
jg
sti
push
jo
test
cmpsb
outsb
cmp
pusha
push
cmpsl
loopne
jae
insb
repnz
hlt
or
mov
pop
xor
imul
sub
push
pushf
arpl
stos
call
mov
repz
xchg
xchg
push
dec
loope
hlt
bsr
jmp
or
pop
and
test
aad
fstps
cmp
cmp
int3
clc
pop
xlat
jnp
out
sbb
mov
adc
push
fisubrs
cmp
pop
xchg
repz
jg
inc
mov
sahf
pop
pop
je
lcall
or
std
fsubrs
mov
movsb
inc
and
adc
dec
pop
jl
pushf
xchg
int
popf
pop
xor
xchg
xlat
adc
cmp
enter
into
sti
test
cmpsb
int
repz
inc
sarl
pop
mov
out
mov
fnsave
push
mov
test
sbb
xor
jno
push
dec
sbb
icebp
xorb
in
out
pop
lret
dec
scas
fstl
or
and
mov
adc
in
rcll
adc
outsb
mov
jb
nop
push
adc
cmp
clc
add
divb
push
adc
shrb
outsl
adc
loope
repz
cmp
movsl
pop
cmp
xor
insl
mov
lcall
inc
xor
or
mov
fistps
aaa
jl
push
popa
xchg
cmp
cmp
out
addb
into
dec
mov
nop
jmp
loope
mov
shlb
jmp
pop
cld
or
jb
jbe
jecxz
fucomp
adc
addr16
mov
ret
rcrl
adc
mov
jno
fimuls
and
inc
sarb
jmp
cmpsb
adc
xor
mov
test
or
negl
xor
fnstsw
shlb
out
jp
push
sbb
out
dec
pop
fists
sbb
pop
js
mov
mov
pop
xchg
adc
push
inc
pop
lods
sbb
or
scas
mov
adc
sbb
jle
jge
jo
pop
fistps
test
xchg
push
xor
in
outsl
push
mov
lcall
lret
test
enter
cmp
cwtl
fnstcw
dec
pop
jnp
and
bound
add
push
rorb
loopne
cmc
in
fdivs
sbb
mov
fcompl
add
xorb
shrb
les
imul
and
ljmp
dec
inc
dec
sarl
xchg
inc
sbb
decl
cmp
mov
test
hlt
sbb
or
or
pop
repz
pop
pusha
ror
jnp
xchg
into
pop
clc
add
adc
xchg
and
inc
jo
iret
mov
or
aas
daa
stos
popa
sbbl
dec
mov
mov
and
push
lock
fxch
ficoms
xor
push
mov
dec
mov
xor
xchg
pushf
int
addb
stc
loope
sbb
pop
in
daa
xchg
bound
and
push
lods
outsl
and
scas
ljmp
into
cmpsl
cmc
sub
push
push
loopne
divb
mov
dec
fiadds
sar
sub
mov
data16
push
sbb
js
cmpsb
lcall
inc
mov
in
daa
in
xor
aas
xor
sbb
push
aas
cmp
xchg
cmpsl
and
mov
scas
and
push
hlt
subl
icebp
and
sub
sti
cmp
lret
add
cmp
shrl
xchg
xor
rorb
fnstcw
inc
inc
xchg
in
xor
cmpsb
inc
mov
bound
sbb
aad
test
sbb
adc
gs
fists
or
pop
shlb
fmull
mov
push
mov
xchg
shlb
jbe
pop
or
xchg
or
push
cmp
movsl
jl
and
xor
imul
jecxz
fwait
and
jmp
fcmovu
test
sub
sub
jp
mov
scas
xor
out
mov
sub
les
cmp
and
out
cmp
ss
xor
adc
ds
in
inc
jp
insl
or
cmpsb
hlt
push
lds
jnp
cli
inc
inc
mov
sarl
gs
out
pop
fs
jae
xor
out
cwtl
dec
sub
jl
inc
jg
lods
movb
pop
mulb
in
mov
int
jne
dec
inc
int
sbb
or
out
mov
and
test
jg
or
mov
out
in
les
es
call
shlb
dec
lea
insl
and
add
lahf
cmpsb
aam
pop
je
pop
in
negb
mov
jbe
fsubrl
jb
push
icebp
push
sbb
lcall
push
jne
jnp
loopne
lret
dec
pop
aad
inc
cmp
push
sub
xchg
dec
es
pop
lret
dec
cs
movsl
movsl
sub
stos
psraw
cmp
inc
dec
lea
dec
jbe
mov
pop
dec
fwait
and
mov
mov
push
ffree
jg
andb
cmp
pop
imul
insl
add
mov
fcmovne
jp
loop
cmp
packuswb
xor
xor
pop
fmul
mov
cmp
xor
xchg
mov
pop
into
sbb
mov
cmpxchg
outsl
notl
add
outsl
mov
inc
xchg
pop
cmc
gs
mov
repz
inc
rcr
cmpsl
test
imull
jge
adc
nop
rorb
mov
orl
sbb
xor
dec
jb
fsubrs
push
sub
cmpl
das
stc
insl
jmp
xor
out
arpl
stos
out
xor
sbb
xor
cli
stc
pop
pop
add
aaa
mov
inc
jl
ja
ss
xchg
and
loopne
mov
sbb
stos
push
mov
inc
inc
xor
mov
ret
cmpsb
xchg
in
inc
jmp
movsl
mov
cmpsb
in
dec
or
lret
xchg
sbb
xor
inc
sbb
push
add
pop
mov
mov
sub
jae
stc
cmc
sub
cmp
jae
sti
or
push
jns
cltd
insb
fwait
push
fdiv
aaa
roll
adc
int3
inc
sub
test
pushf
out
mov
push
mov
xchg
mov
repz
dec
fistl
cmpsb
nop
dec
int3
lahf
aas
mov
arpl
test
test
jmp
arpl
aas
dec
sub
and
imul
cmp
mov
sub
sahf
cmp
xor
rdmsr
cld
xor
stos
xchg
sub
popf
movsl
pop
cmp
in
aaa
xchg
sbb
and
addr16
jmp
xchg
dec
mov
inc
fnstenv
lret
out
dec
mov
out
jmp
jl
pop
cmp
jns
clc
divb
adc
icebp
negl
cmp
fnsetpm(287
or
inc
inc
mov
jb
adcb
xor
fcmovnu
cli
cli
pop
fstl
push
mov
sarl
push
sbb
adc
sub
xor
cmp
inc
sbb
push
push
arpl
movsb
and
lret
push
loope
rcll
mov
lods
dec
out
lods
mov
and
mov
lret
and
sti
out
cmp
cmp
mov
sbb
cmc
mov
mov
movsb
add
add
fs
dec
mov
sbb
adc
mov
das
testb
mov
ja
jp
xchg
fs
aas
jl
dec
dec
jae
and
jl,pt
xor
xor
sarl
jecxz
mov
jle
dec
cmpsl
mov
clc
add
mov
cli
sbb
shrl
sbb
ror
cmpsl
or
mov
les
je
cmp
cmpsb
sub
push
push
arpl
mov
in
mov
aas
or
aaa
pop
cmc
pop
int
faddl
mov
fcoms
ljmp
xchg
sahf
inc
je
ja
sahf
test
popa
mov
inc
iret
pop
xchg
stc
dec
je
out
sub
sbb
cs
cmp
addr16
loope
mull
push
push
pop
hlt
jae
test
repz
jne
jns
cwtl
ret
add
andl
ljmp
js
fildl
pop
xor
sub
xchg
jb
xor
call
out
jns
jg
jp
sub
jae
ret
pop
xor
pusha
test
test
jge
or
and
add
push
rcll
cmp
adc
and
js
and
xchg
testb
cmp
outsb
cld
loopne
pusha
jno
enter
mov
adc
and
pop
adc
dec
pop
jge
push
dec
outsb
dec
pop
mov
cwtl
lods
movsl
dec
mov
arpl
push
and
call
mov
es
scas
jg
jo
ja
mov
mov
js
add
sub
repz
mov
jns
out
lds
xchg
pop
jmp
leave
lret
clc
cli
sub
mov
dec
cmpsb
test
dec
pop
pop
pop
adc
in
scas
rorl
jle
dec
addr16
mov
xchg
sub
pop
push
mull
lahf
inc
pop
push
sub
movsl
daa
jmp
icebp
jnp
loope
pop
dec
or
push
cmp
lcall
cmp
inc
fcmovb
mov
pop
movsl
xchg
call
lock
push
dec
addr16
push
pop
movsl
scas
call
and
loop
push
or
mov
notb
mov
data16
leave
inc
mov
adc
cli
cmpsb
mov
stos
jns
mov
mov
sub
scas
cs
scas
jb
jae
jns
test
cwtl
stos
xor
enter
adc
out
inc
out
or
or
mov
sub
jae
mov
loope
sbb
fs
cmp
ds
repz
jne
icebp
call
fldt
dec
ss
jp
and
insl
fldcw
mov
inc
in
imul
xorb
xor
cmp
stos
out
pop
mov
and
jb
outsl
inc
jmp
push
and
cmpb
mov
js
adc
sbb
pop
mov
popa
adc
mov
je
mov
icebp
inc
test
jg
sub
dec
pop
push
iret
into
adc
std
push
mov
mov
lods
lea
testl
pop
adc
cwtl
hlt
fadd
mov
adc
out
imul
push
outsl
sub
mov
pop
mov
inc
test
mov
cmpl
xchg
fsts
adc
mov
push
lock
pop
mov
xchg
jbe
mov
inc
mov
mov
ljmp
arpl
mov
mov
and
scas
jecxz
dec
fst
inc
std
lds
mov
pusha
adc
or
mov
xchg
decb
or
cltd
das
sbb
add
addr16
xlat
clc
cmp
xor
lcall
lahf
mov
and
xchg
call
movsb
pop
jmp
clc
lock
push
mov
mov
mov
iret
mov
jg
inc
sub
or
mov
adc
mov
add
rcl
dec
sahf
sub
push
lahf
mov
sbb
adc
stos
sub
push
cmp
imul
mov
inc
mov
or
cmp
push
xor
fidivrl
cmp
sbb
sbb
push
push
sarb
out
mov
inc
mov
orb
data16
pop
insl
mov
pop
jo
sbb
dec
add
pop
jecxz
and
xor
cmp
fnstsw
scas
test
push
inc
pop
aaa
push
jbe
cwtl
in
xchg
sbb
out
out
sub
cmp
or
pop
add
fiaddl
cmp
sbb
mov
push
and
icebp
and
cmpsb
rorl
sti
testb
jno
sub
add
fldenv
ret
std
adc
insb
jns
cmp
mov
push
ljmp
pop
sbb
icebp
int3
mov
xlat
out
fmul
and
sbb
mov
adc
pop
lods
xchg
pusha
test
cli
call
aaa
mov
bswap
or
adcl
test
stos
jg
lock
adc
jmp
xor
stos
ja
cmpsl
pop
adc
loop
ret
hlt
inc
lahf
std
enter
dec
popa
or
flds
and
xchg
sti
or
or
stc
popf
hlt
scas
out
push
mov
inc
xor
in
filds
ret
add
push
and
in
les
sub
pop
shrb
data16
add
jnp
cmp
push
scas
dec
mov
xor
pop
xchg
push
sub
xor
outsb
int
or
jnp
dec
rclb
xchg
jl
pop
sub
lcall
adc
push
sub
xchg
adc
das
aaa
lahf
scas
cld
scas
mov
mov
add
cmp
lea
inc
ficompl
xchg
inc
das
loopne
push
aam
fs
and
cmp
inc
arpl
test
ja
mov
adc
pop
push
mov
mov
ret
movsl
lock
push
dec
insb
shll
cwtl
jg
outsb
sub
mov
in
push
xchg
push
mov
adc
inc
iret
or
mov
mov
bound
mov
mov
stos
jmp
mov
fucomi
adc
fdivrl
daa
dec
sar
test
adc
loope
pop
daa
fisttps
mov
cmp
pop
call
aam
movsl
pop
pop
out
inc
mov
add
loopne
ljmp
outsl
loopne
insb
xor
imul
ljmp
test
mov
dec
jge
add
jbe
jl
int3
mov
xchg
mov
movsl
jnp
mov
gs
jno
lcall
stos
add
sbb
xor
addr16
inc
xchg
sub
add
dec
roll
jb
out
xor
mov
andb
fnstsw
aaa
fiaddl
jp
or
out
xchg
push
shlb
jl
dec
jb
lds
mov
loope
nop
jle
mov
cmp
or
fcomi
sub
and
mov
xchg
call
das
fisttpll
cmovs
stos
or
lds
iret
pop
pop
sub
cmpsb
xchg
sbb
xor
mov
sarl
inc
jne
aas
push
jp
mov
inc
imul
mov
push
add
in
xor
adc
jge,pn
pusha
adc
ljmp
xchg
sbb
inc
mov
les
cli
mov
jae
hlt
mov
fcoml
mov
mov
gs
je
or
cltd
dec
jecxz
jecxz
pop
xor
nop
pop
rorb
jae
or
push
scas
inc
mov
cs
mov
rorb
in
insb
stos
sub
repnz
or
sbb
fnsave
dec
and
mov
mov
repnz
add
mov
cli
and
loop
mov
lea
inc
pop
imul
rorl
imul
xlat
jge
js
mov
push
aad
std
push
mov
cmc
call
pop
and
and
push
push
in
add
ja
xchg
push
aam
push
dec
push
pop
add
mov
aas
inc
rcrb
test
cs
sarb
mov
cld
insb
jl
in
es
lcall
inc
fstl
dec
sub
dec
stos
sub
insl
or
lods
outsl
push
cwtl
les
std
jecxz,pt
mov
or
imul
lret
rol
and
mov
dec
jl
mov
loopne
sbb
or
sub
xor
mov
sbb
pop
dec
mov
sbb
or
jne
outsb
mov
js
in
mov
out
xchg
jmp
mov
movsl
inc
test
das
fwait
lret
scas
cmp
or
divb
dec
adcb
stos
pop
and
mov
push
mov
or
and
fsubr
inc
jg
mov
jg
adc
ja
mov
aas
or
jbe
push
xchg
dec
icebp
das
xchg
dec
pushf
push
jp
xchg
andl
dec
cmpsb
in
jno
jecxz
call
sub
jmp
add
add
add
push
jp
inc
add
fildl
jge
add
jg
faddl
sub
cmp
fildl
test
loop
jno
pop
dec
mov
or
mov
mov
jne
lcall
and
gs
mov
cld
dec
inc
or
aad
fstl
push
jae
jl
cmp
push
call
popa
lret
xchg
out
enter
dec
cld
clc
arpl
pop
cmp
hlt
insb
add
imul
xor
ret
jae
pop
out
cmp
xor
rolb
gs
ds
xor
push
xor
add
cmc
mov
in
rcll
int3
xchg
mov
or
pop
add
imul
jae
xor
xor
js
push
cmp
inc
aam
push
nop
pop
xor
movsb
data16
cmp
cmp
cmpsb
mov
divb
lahf
lcallw
lea
in
sub
lock
stos
les
movsl
push
dec
xchg
jle
aad
stos
dec
sbb
out
push
add
mov
stc
in
and
and
shrb
xchg
out
cmp
fmuls
es
repz
sbb
and
push
pop
cwtl
pop
dec
sahf
push
js
stos
dec
or
stc
shl
test
mov
lods
stos
xor
sub
movsb
loop
xchg
jae
or
fsubrs
jecxz
dec
cmp
add
pushf
push
mov
push
mov
fistpll
add
sbb
test
icebp
jp
sub
push
fs
add
fimuls
sub
push
fidivs
int3
scas
mov
mov
pop
xchg
or
inc
cmp
jne
mov
or
pop
movl
push
jecxz
sbb
lock
mov
jno
or
imulb
jmp
xor
xchg
inc
jb
inc
push
loop
pop
mov
jp
jnp
mov
or
adc
add
out
push
pop
and
and
xchg
outsb
xchg
call
push
mov
cmp
mov
xorb
mov
pushf
or
xchg
cmp
jge
pop
xor
mov
repnz
scas
adc
push
icebp
sarb
mov
insb
inc
push
dec
shrb
mov
enter
cmp
sub
inc
pop
cmpsl
into
and
or
or
mov
dec
aas
mov
and
adc
inc
cmp
movsb
sbb
sahf
xchg
fsubs
pop
jl
loope
outsb
jns
push
pop
loop
xchg
xchg
inc
aas
js
push
cmpsl
xor
cmpsb
enter
sub
or
mov
mov
orl
add
sbb
notl
gs
shrb
or
dec
mov
shll
outsb
jecxz
mov
pushf
test
iret
sbb
jecxz
adc
dec
mov
inc
subl
shrb
cmp
pop
dec
pop
xchg
mov
fdivl
psubq
mov
cmp
push
imul
lea
mov
cmp
jl
pushf
scas
or
mov
jp
nop
add
sub
fsubrp
lods
pop
inc
stos
outsb
xchg
cmp
jns
jge
cmc
sbb
and
cmp
sbb
xchg
jg
lds
cld
sbb
dec
mov
imul
inc
xchg
jge
sbb
dec
and
shlb
mov
xor
pop
les
sub
andl
hlt
mov
data16
std
push
or
cmp
or
jmp
subb
push
push
stos
mov
imul
lahf
stc
or
add
sbb
jle
adc
xor
push
dec
jbe
lea
aas
movsl
mov
stc
mov
test
add
imul
aaa
xor
dec
out
adc
mov
in
cmp
icebp
jge
sbb
jge
lahf
fwait
clc
adc
xor
movsb
push
loop
clc
dec
or
rolb
or
lahf
ret
adc
push
pop
xchg
sbb
jl
mull
push
push
stos
pop
sub
lods
fnsave
insb
jp
test
mov
mov
scas
xchg
in
ret
inc
xor
jbe
pop
push
cmp
fwait
inc
sbb
xchg
and
lods
cld
xor
test
inc
fiadds
in
stos
ss
inc
pop
jmp
insb
aam
cmp
rorl
sbb
cmpsb
xchg
ficoms
outsl
addr16
pop
add
push
mov
je
add
in
cmpl
out
pop
div
cmp
push
mov
cmp
lods
pusha
popf
add
out
or
mov
adc
cld
jo
add
jae
push
hlt
popf
jp
mov
mov
test
and
xchg
data16
xchg
cwtl
sti
lret
call
push
fbstp
dec
xor
xchg
leave
mov
sub
add
dec
push
insb
cld
mov
pop
dec
and
dec
add
dec
stos
and
mov
sbb
mov
push
add
push
mov
xor
leave
push
xor
add
xchg
fisubl
push
mov
add
xor
mov
pushf
ds
test
lret
pop
xor
xor
ljmp
mov
xorb
jg
cltd
pop
xchg
jle
cmp
loopne
ror
mov
enter
xchg
xchg
add
test
insb
out
repnz
xor
jnp
jbe
movsb
sub
xchg
jg
xchg
inc
mov
or
push
xor
scas
jbe
es
aas
stos
cmp
mov
mov
jle
jmp
js
push
mov
pop
test
dec
sub
xchg
push
mov
jl
pusha
idivl
jmp
cmp
shlb
add
mov
jl
mov
jnp
subl
dec
lret
mov
lock
jb
jno
hlt
es
lahf
pop
movsb
sbb
mov
mov
dec
xor
iret
jns
shlb
mov
dec
pop
and
popf
cmc
xor
and
jo
aam
jnp
sbb
mov
jbe
jp
push
movl
jge
mov
xchg
mov
mov
daa
inc
adcb
mov
scas
iret
sbb
data16
jbe
cs
push
orb
mov
or
adc
or
push
movsb
sbb
loopne
sbb
adc
bound
call
add
or
xchg
sub
pushf
cli
bound
fcmove
sbb
xchg
push
loop
and
jmp
aad
jo
inc
jne
rcr
xor
pop
mov
stos
mov
pop
nop
std
fbld
sbb
push
add
or
sbb
mov
push
clc
mov
ret
ret
mov
ljmp
mov
dec
in
in
xchg
mov
aad
push
push
mov
scas
sahf
mov
mov
inc
dec
lahf
mov
or
add
inc
jl
aas
nop
sub
adc
push
pop
xor
mov
movsb
aam
mov
inc
cmp
sub
mov
mov
cwtl
dec
pop
jmp
mov
xchg
mov
and
lods
pusha
into
sub
popf
sbb
mov
and
not
pop
repz
arpl
jecxz
inc
cmp
mov
test
add
lods
cmp
jae
fwait
rcll
movsl
bound
inc
ja
lahf
jmp
xchg
push
xor
hlt
mov
inc
sub
add
ja
or
cmp
xchg
call
nop
lahf
ret
jbe
jnp
iret
mov
orl
sub
add
je
rol
and
aas
sbb
jne
fsubrs
adc
sub
xchg
rcrb
ret
mov
sub
test
ljmp
and
cmp
and
dec
rolb
call
adc
stos
arpl
sbb
das
mov
or
add
xchg
sub
lcall
pop
cmp
fldln2
push
lcall
shrl
arpl
fbstp
jns
fmul
pop
xor
pop
cli
pminsw
sti
pop
mov
out
cmc
ja,pt
push
jl
test
mov
pop
or
or
or
mov
add
outsb
jge
mov
aad
sarl
add
mov
outsb
rorl
pop
xchg
sub
mov
fnsave
adc
and
and
inc
push
movsl
mov
push
xor
int
sbb
lldt
mov
adc
cmpsl
rol
mov
roll
push
mov
mov
sbb
sub
icebp
and
sub
pusha
mov
rolb
iret
comiss
adc
les
and
jo
sbb
repnz
jl
lea
lods
mov
fisttpl
inc
mov
mov
adc
inc
adc
xchg
jae
or
test
stos
fwait
push
sbb
inc
mov
and
mov
mov
loopne
enter
iret
int
lods
sub
enter
jecxz
add
sub
sub
imul
sbb
pusha
cmp
mov
cmp
dec
aas
pusha
imul
push
mov
lret
and
ss
inc
xchg
pop
cwtl
ja
pop
and
sub
add
push
sarb
pushf
dec
mov
jle
enter
pop
or
icebp
pusha
lcall
jl
pop
xchg
mov
fwait
cmpsl
cli
jg
shlb
inc
sarl
loop
es
enter
shrb
pop
lcall
aas
add
xor
cltd
andl
movsb
test
sbb
add
cmp
mov
jg
das
nop
dec
ja
nop
test
inc
push
and
sub
lahf
inc
mov
js
test
cmpl
push
adc
sub
mov
cmc
fsubl
imul
xor
dec
hlt
xchg
ss
adc
fisttps
and
fldt
xchg
daa
xchg
jge
add
jbe
stos
inc
shl
outsb
in
mov
mov
sbb
cld
xchg
jnp
xlat
mov
cmpsb
test
outsb
pop
ljmp
aaa
loopne
xchg
in
aas
adc
outsl
ret
into
je
imul
lret
mov
stc
pop
cmp
push
cmp
loope
enter
inc
push
imul
mov
outsb
in
scas
arpl
subl
cwtl
aam
test
sbb
jle
nop
loop
movsl
addr16
sub
mov
orps
adc
movsb
inc
mov
add
xchg
mov
cmp
inc
clc
mov
int
icebp
pusha
sub
insl
clc
dec
add
mov
es
mov
dec
or
dec
dec
xchg
dec
xor
adc
popa
sub
adc
and
shrl
fiaddl
nop
mov
fcmovnu
xor
dec
js
jmp
inc
jae
mov
pusha
jmp
ljmp
fdivs
fnstcw
and
aad
pop
push
cmpsb
popf
mov
sub
push
xor
dec
pop
jecxz
test
dec
mov
jp
loopne
in
and
out
dec
out
cmp
xor
mov
jo
cmp
data16
loop
xchg
sub
into
pushf
std
jg
jecxz
movsb
lahf
lock
daa
fisttps
into
sar
xor
lods
pop
imul
icebp
icebp
xchg
pushf
arpl
mov
pop
sbb
fs
and
test
cs
xor
add
or
pop
mov
and
adc
iret
fsubrs
cs
xlat
std
jp
cltd
push
rorl
pop
xlat
add
movsb
and
jl
repz
out
mov
incb
out
inc
jo
xchg
jle
dec
dec
stos
push
adc
loope
lods
push
jo
stos
fs
pop
or
jecxz
push
mov
sbb
xchg
xchg
out
fxch
popa
xor
gs
mov
mov
xor
xchg
jns
mov
in
push
insb
dec
cmp
sub
dec
icebp
xor
push
xor
dec
sub
insl
mov
pushf
fsubp
lahf
mov
mov
xchg
sbbb
popf
stos
cmpsb
popf
pop
repz
ljmp
les
xchg
repnz
xchg
sahf
lock
push
xchg
ss
ja
cli
or
xchg
cmp
movsl
and
lock
lods
repz
dec
outsl
jmp
cwtl
pop
psrad
xchg
sbb
scas
mov
mov
jecxz
jg
pusha
push
dec
mov
inc
pop
adc
or
scas
fcmovnu
pop
push
sbb
in
movsl
out
mov
leave
addb
cmp
inc
dec
jge
in
fnstcw
lret
push
sub
xchg
or
loopne
cmpl
sahf
shrl
aaa
mov
cs
mov
scas
rolb
test
dec
or
jno
inc
xchg
push
stos
add
sahf
pop
cmc
sbb
insl
ja
loope
out
cltd
push
inc
cmp
jo
popa
mov
test
aam
ss
out
out
mov
enter
aam
jp
std
aaa
cmpl
ret
xchg
jbe
pop
aam
mov
inc
sbb
and
push
cmc
mov
adc
gs
aam
xchg
xor
in
xchg
inc
nop
es
aaa
push
leave
stc
push
ret
jge
movsl
fdivs
or
cmpsl
fwait
jne
pusha
xor
cs
push
sbb
cmpsb
sub
adc
pop
bound
pop
scas
mov
stos
adc
in
xor
cltd
test
cmp
lret
mov
jbe
pop
mov
mov
mov
and
scas
xchg
jmp
cli
insb
sub
sub
lret
into
xchg
ljmp
adc
test
gs
cs
js
pop
fucomip
loop
xchg
stos
mov
rorb
xchg
xchg
mov
mov
pop
popf
mov
pop
leave
cmpsb
mov
xchg
int
mov
jo
subb
int
stos
and
das
fcoml
push
hlt
mov
xor
stos
je
jl
sub
add
push
mov
gs
lock
aam
fdiv
xchg
inc
nop
lret
outsl
popa
inc
call
jmp
jb
push
pop
stos
adc
cmp
jmp
loope
pop
add
data16
hlt
jb
out
push
jne
les
mov
and
hlt
fs
or
cmpsb
out
mov
jl
fsts
mov
mov
cltd
fiaddl
lock
icebp
ret
push
imul
push
aaa
fidivrl
xor
outsl
xor
push
gs
fwait
add
dec
dec
mov
sbb
scas
jp
test
jecxz
data16
sub
lock
cltd
and
ss
iret
pop
pushf
sbb
xchg
mov
popa
inc
fdivl
outsl
inc
dec
inc
mov
mov
aam
adc
mov
and
cmpsl
and
adc
and
mov
aaa
inc
loop
setns
iret
sbb
popa
mov
aad
rcrb
ret
jne
add
inc
sub
je
rorl
imul
cmpsb
in
scas
push
clc
arpl
xchg
dec
mov
jo
aad
pop
add
and
stc
jg
cld
push
repz
adc
mov
xchg
and
adc
xchg
pop
mov
lcall
sbb
jecxz
cli
ficoms
mov
repz
inc
je
testl
fcompl
es
stos
mov
inc
xchg
add
mov
fistpl
adc
movsb
mov
cmp
dec
xchg
mov
adc
mov
sbbb
ds
mov
push
jl
push
or
lret
add
pusha
addb
outsl
mov
lcall
int3
fcomp
test
sbb
jnp
and
sbb
insb
and
cmp
xchg
mov
push
sub
leave
fidivrl
adc
jnp
icebp
mov
ja
loopne
jae
mov
xchg
or
in
ja
outsb
mov
div
pop
mov
and
fildll
xor
cs
test
mov
shll
inc
aad
jl
fcompl
sbb
xor
xchg
fidivrs
jo
icebp
add
in
add
sub
jno
xchg
repz
les
inc
aaa
sub
lock
pop
ja
les
dec
cmp
or
adc
loope
fnsave
clc
aam
pop
rorb
jmp
lret
or
outsb
int3
or
je
arpl
mull
add
push
jmp
es
xchg
data16
cmpsl
fcmovu
pop
test
stc
sbb
add
mov
js
cmpsl
out
xor
mov
pusha
les
push
cmpsl
rcrb
dec
popl
jmp
push
jae
mov
cwtl
inc
mov
roll
icebp
psrlw
jp
jp
mov
inc
pop
dec
cmp
jnp
sbb
insb
out
push
fiadds
inc
pop
mov
cmp
cmp
setne
popf
jmp
cli
jecxz
or
or
inc
cld
add
insl
push
popa
bound
sub
out
mov
sbb
lcall
lods
sarb
xor
xchg
cmc
mov
icebp
mov
pushf
xchg
fcmovnb
ror
stos
pop
cmpsb
xor
lret
sub
subb
sbb
popf
out
mov
rclb
inc
push
std
adc
sbb
jecxz
add
loopne
iret
ret
cli
in
loope
pop
js
shl
rcl
into
out
mov
ret
or
adc
push
sub
and
pop
jg
sub
aad
and
push
call
pop
push
sahf
lret
fdivl
test
movl
adc
pop
dec
push
xchg
pop
sbb
pop
inc
mov
shlb
xor
test
es
nop
push
js
fcmove
pusha
ret
sbbl
dec
sbb
mov
shl
or
sar
test
and
out
orb
inc
add
imul
add
push
mov
int
cmpsb
aaa
xchg
jo
jge
insb
cmp
adc
popf
push
dec
adc
add
sub
data16
push
xor
push
lcall
jne
xor
add
cmpsl
cmp
out
sub
cmpsb
testl
sub
jl
push
loopne
inc
mov
mov
addb
pusha
ss
imul
xor
push
jnp
adc
out
lcall
outsl
imul
icebp
cltd
add
ss
or
arpl
pushf
ret
iret
js
daa
mov
ja
cmp
into
mov
adc
cmp
cld
cld
shlb
arpl
ret
notl
dec
sar
pop
loop
dec
xchg
adc
xor
mov
stc
out
dec
pop
stc
imul
cwtl
pushf
mov
mov
dec
jmp
rolb
or
adc
cmp
icebp
pop
sub
jl
fwait
add
sub
sti
stc
mov
fdivs
inc
not
xchg
es
scas
or
push
pusha
in
and
sub
add
out
pushf
pop
xor
cmpsb
add
in
lret
and
movsl
cmp
adc
mov
inc
into
mov
sub
sub
inc
out
addr16
ret
outsl
jecxz
addr16
pop
cs
rcll
shl
je
xlat
pushf
imul
std
repnz
fwait
fisttpl
inc
sahf
in
popa
pop
push
mov
cmp
adc
in
in
sbb
xorl
cmp
sahf
and
test
inc
jns
dec
or
mov
mov
cli
sbb
nop
lods
push
testb
xchg
push
xor
add
pusha
mov
rcrl
pop
xchg
push
jge
stos
cmp
fsubl
ja
pop
scas
xlat
inc
push
adc
mov
addb
iret
or
xchg
popf
pushf
outsl
mov
dec
cmp
sbb
push
pop
in
push
je
into
cmp
mov
cs
sahf
ds
pop
loop
jle
xchg
lds
jecxz
push
aam
lret
mov
sub
or
sub
cwtl
ret
pop
jb
push
add
call
lret
fwait
inc
hlt
inc
jb
xor
jae
jnp
inc
clc
cmc
cmp
clc
pop
into
push
mov
mov
fidivs
xor
test
xlat
cs
jns
scas
fstpl
pop
arpl
int
pushl
dec
call
notrack
popa
icebp
outsl
cmpsl
mov
cli
aam
into
bound
rcl
stc
push
mov
jecxz
pop
std
gs
cmpsb
dec
int
ja
movntq
mov
repz
jae
dec
movsb
test
repz
leave
add
jno
push
popf
inc
cmp
pop
or
fs
bound
pop
out
fwait
icebp
sub
mov
adcl
scas
outsl
daa
decl
jp
or
shll
cmp
add
inc
xchg
aam
sbb
ficoms
and
cmp
out
stc
das
mov
mov
aad
or
pop
js
movsl
cmp
lea
je
stos
push
cmp
dec
adc
adc
gs
mov
xor
js
lock
mov
sbb
lea
imul
or
shl
lret
jl
mov
ret
fisttpl
in
pop
pop
addr16
flds
or
sub
and
dec
pop
adc
ret
aas
dec
lods
outsb
insb
cmp
add
cmp
pushf
and
or
xlat
mov
push
mov
or
stos
out
pop
fwait
adc
pop
mov
sbb
fbld
push
mov
cltd
mov
sub
dec
sub
inc
movsb
fisubl
push
sbb
sub
test
sub
scas
sub
cmp
jl
inc
push
or
push
stc
lods
in
fisubrl
repz
negl
pop
scas
or
or
and
aad
xor
pop
ja
jno
sti
jne
cwtl
add
lea
mov
test
lods
push
or
test
sbbb
decb
or
dec
mov
and
dec
cmpsb
xchg
dec
fisubrs
popl
mov
pushf
rcr
mov
test
mov
xchg
dec
lcall
jae
ss
nop
insb
test
inc
psubsb
push
shr
mov
out
dec
sbb
jmp
jnp
lods
repnz
mov
jmp
jge
insb
stos
and
mov
dec
mov
aaa
push
lea
cmp
ljmp
loope
movsb
fsub
ss
push
int3
xchg
std
in
xchg
dec
je
push
test
sub
pop
out
push
inc
loope
mov
aam
pop
cmc
push
mov
div
clc
punpckhwd
mov
or
loop
jne
and
fs
xor
sbb
sbb
xchg
ljmp
pop
stc
sbb
mov
ret
xchg
iret
leave
adc
inc
inc
push
adcb
addr16
xchg
out
out
xor
int3
test
int
shrl
js
lcall
sbb
xor
sub
lcall
or
or
and
shrl
in
sbb
movsb
add
xchg
int
call
imul
pop
adc
in
xor
pop
stos
sbb
cltd
push
gs
push
jl
mov
fwait
pop
xor
sahf
dec
daa
inc
test
stc
or
call
imul
mov
mov
testl
inc
and
jmp
pop
imul
cwtl
sbb
adc
insl
lahf
test
and
sub
lret
mov
sbb
push
fimuls
andb
mov
mov
loop
add
enter
ret
adc
pop
scas
push
lahf
pop
or
mov
mov
lock
cmpsl
or
push
popf
adc
mov
cmc
sahf
mov
aas
mov
push
stos
enter
jns
aas
mov
adc
popa
mov
in
jl
or
daa
sbb
push
cmp
popa
mov
xchg
stos
xor
push
aam
or
insl
arpl
mov
cmpsb
jno
inc
push
jmp
dec
mov
add
insb
mov
sub
out
je
mov
push
push
push
add
xorb
ret
lahf
stos
leave
popf
push
mov
out
dec
inc
sub
pushl
aas
push
sub
mov
stos
adc
ja
and
movsl
or
add
sub
sbb
and
adc
out
rcl
loopne
push
xchg
outsl
adc
frstor
imul
add
and
imul
or
iret
inc
sysenter
data16
shr
jb
cld
inc
ds
jl
sub
jl
adc
lea
cmp
gs
jbe
push
inc
pushf
push
dec
push
mov
mov
mov
jp
outsl
push
mov
pop
adc
pop
mov
cld
cmc
popa
inc
and
add
test
in
inc
push
loop
mov
shlb
adc
or
test
lea
cwtl
push
ret
rcll
cmp
repnz
dec
pop
add
pushf
mov
cmp
mov
popa
push
xchg
mov
mov
adc
outsb
fdivrl
fidivl
jns,pt
or
test
push
push
into
rclb
push
inc
jl
arpl
dec
rcrb
popf
pop
mov
in
inc
jg
or
cmp
xor
sbb
add
cli
jns
in
mov
dec
repnz
test
sti
sub
ss
jo
and
jge
fiaddl
ret
inc
jmp
push
lret
sbb
inc
daa
add
mov
xchg
mov
outsl
pop
cmp
sbb
cmp
dec
mov
push
fisubl
arpl
loope
add
jmp
fs
push
jecxz
xchg
cmp
xor
loope
xchg
pop
xchg
xor
pop
push
push
jb
shrl
jae
push
js
and
sub
cmp
imul
test
mov
pop
mov
xchg
stos
out
fisubrl
jmp
adc
sbb
insl
ds
hlt
in
mov
gs
nop
inc
ds
int3
jae
push
rcll
aad
sub
out
jbe
fldl
cmp
fcmovbe
sbb
cmp
add
mov
je
out
hlt
sbb
sbb
jge
into
pop
or
ljmp
ret
imul
nop
ret
aas
sbb
mov
mov
pushf
mov
xchg
mov
push
inc
dec
aas
mov
fnstenv
je
lcall
cltd
adc
adc
fnstsw
je
sbb
jge
outsl
cmp
sbb
mov
pop
rcrb
inc
scas
pusha
test
cmp
andnps
sti
push
mov
addr16
xor
and
jg
outsl
adc
dec
into
dec
dec
jg
repz
std
adc
lahf
lret
daa
repz
inc
push
pop
aad
push
pop
jnp
pop
cmp
jbe
test
fcomp
inc
mov
fsubrl
mov
cld
pop
lcall
loopne
lahf
lret
dec
je
mov
inc
inc
cld
pop
sbb
sahf
out
jb
inc
out
outsl
push
jns
inc
aaa
mov
call
sub
sbb
sub
call
ss
bound
fwait
je
adc
xor
jbe
stos
pop
mov
mov
scas
arpl
das
xchg
mov
lea
je
ljmp
nop
cmp
cs
jg
add
pop
iret
ret
push
or
sbb
lcall
xor
xchg
mov
lods
lea
loope
xor
cmp
cmp
mov
movb
lcall
pop
enter
mov
pop
insb
insl
push
or
imul
pushf
xchg
jle
jo
cltd
lock
ss
es
imul
adc
and
and
pop
cmp
jne
sbbb
and
jbe
cltd
pushf
icebp
pop
add
lea
jbe
mov
jmp
sahf
or
jecxz
push
or
dec
xchg
fcmovbe
insb
outsl
mov
lret
lea
rolb
adc
fs
pop
movsl
push
dec
fucomip
sub
shll
xchg
arpl
out
sub
jmp
sbb
ret
fdivp
repz
push
mov
or
fs
sbbb
push
js
loop
inc
sbb
scas
imul
arpl
jns
mov
rcrb
jmp
fldl
in
lds
add
pop
cwtl
dec
sti
and
inc
outsb
inc
cs
cwtl
in
es
xor
fs
test
insb
das
mov
das
mov
ja
testb
dec
xchg
push
lods
negb
jmp
add
fsubl
lds
jnp
add
neg
mov
pushf
loope
pop
test
or
in
sub
pop
outsl
cs
out
je
jno
sub
loope
imul
std
push
push
int3
or
mov
into
or
inc
ljmp
push
popa
mov
popa
add
mov
mov
xor
xchg
push
xchg
mov
add
jno
or
sbb
ret
in
dec
sub
mov
nop
push
nop
sbb
addr16
add
aaa
mov
sahf
push
repnz
sbb
mov
cmp
push
jbe
lods
mov
out
pop
shlb
js
daa
cmpsb
fisubrl
aad
pop
dec
and
rcrl
push
jg
repz
and
mov
rorb
pushfw
and
pop
push
fistps
push
movsl
loopne
xor
cli
mov
mov
aaa
mov
xchg
sar
mov
std
sbb
mov
lret
push
jp
aas
inc
sbb
mov
loope
lahf
ret
in
pop
gs
es
cli
push
insb
les
push
arpl
jo
sbb
or
cmp
ret
mov
and
inc
xor
mov
mov
fcoml
jae
lea
push
jge
add
mov
lret
adc
das
gs
and
insl
pop
ret
fnsave
cmc
xchg
cmpsb
pushf
push
xchg
mov
data16
lock
jp
cmpsl
pop
popa
bound
setns
fistps
inc
shrl
mov
push
loope
push
mov
stos
dec
popf
mov
sbb
cli
xor
je
push
pop
sbbb
mov
mov
lret
rcrb
lahf
pop
stos
ficomps
loope
cmp
bound
nop
imul
and
imul
hlt
arpl
fwait
mov
andb
lods
xchg
mov
fs
mov
mov
fimull
mov
jo
and
movsb
fdivrs
adcb
push
cmc
loop
sub
or
out
sub
enter
jb
dec
ud2
add
jne
pop
addl
gs
dec
das
jmp
in
dec
pop
call
arpl
testb
jge
ja
popa
add
enter
stc
rep
sub
lret
pop
xchg
enter
push
sub
addr16
mov
push
dec
push
add
testb
mov
or
cmp
dec
pop
mov
aaa
push
test
shll
test
lret
jecxz
in
mov
adc
jmp
pop
lcall
xchg
hlt
je
and
jns
cmpsb
and
movsb
std
adc
cld
ret
cmpb
je
sar
sbb
outsb
cmp
pusha
xchg
mov
aam
lock
ss
push
jo
xor
adc
mov
add
sub
bnd
fsubr
fisubrl
outsb
push
pop
ret
out
gs
jno
cli
rcrb
lock
fcmovnu
insl
pushf
mov
cmp
gs
pop
pop
mov
test
jg
dec
sub
dec
popa
inc
mov
inc
or
nop
test
test
aam
mov
stos
aaa
sbb
cvttps2pi
inc
sub
fsubl
fcmovb
pusha
aam
shlb
cmp
push
push
jno
rclb
add
cs
inc
aas
and
dec
inc
pop
fnstenv
into
pop
insl
push
notb
sbb
std
lock
push
es
push
lcall
lock
cmp
push
inc
inc
ror
push
fists
xchg
retw
je
test
sbb
and
and
js
jp
stos
fsts
xchg
std
ss
mov
je
lea
pop
in
sub
or
sbb
lret
push
cmp
mov
mov
mov
push
fs
shl
sub
hlt
jnp
push
sbb
lock
iret
xchg
mov
sbb
std
addr16
bound
xchg
inc
jp
dec
push
das
movsb
xor
out
je
popf
inc
adcb
scas
push
jp
imulb
xchg
xor
dec
dec
movsl
or
xchg
pop
jmp
mov
or
mov
adc
imul
insb
ja
pop
mov
bound
jp
loop
push
mov
cmpsb
cmpb
inc
mov
lds
xor
movsb
stc
loope
pop
xor
mov
int3
arpl
loop
mov
xlat
jle
imul
mov
call
cld
xchg
rolb
adc
sbb
sahf
lods
in
ja
jl
in
or
cld
lock
scas
sbb
push
mov
add
pop
lcall
pop
ljmp
cmp
xor
or
cmpsl
lret
fsubr
fwait
jecxz
enter
sbb
push
mov
jne
clc
rorb
fwait
add
cmpsl
arpl
or
aas
pop
scas
sub
push
mov
in
mov
out
mov
add
fisttps
cmc
xchg
xor
enter
dec
mov
loope
jb
popf
xchg
adcl
mov
out
shl
mov
repnz
stos
mov
jecxz
addr16
sti
xor
fisubrs
add
push
ljmp
mov
fisttpll
push
mov
pop
jns
mov
jae
lock
fucompp
sahf
mov
ficoml
or
shrb
adc
jp
std
cmc
lods
sbb
add
ret
sbb
sbb
mov
xcrypt-ofb
cmpsl
outsl
out
jp
lods
scas
adc
push
loopne
in
loope
inc
sub
sub
and
push
xor
jb
aad
mov
test
pop
cmp
mov
dec
fidivrl
in
cmp
es
xchg
mov
xlat
mov
jmp
push
add
popa
push
cmp
scas
jne
dec
dec
imul
sub
adc
orl
in
scas
pop
inc
jecxz
mov
cld
cmpsb
jge
imul
sbb
xor
lea
sbb
enter
fcmovne
add
les
inc
cwtl
jecxz
test
pop
sahf
stc
fcompl
add
icebp
and
xor
jns
stos
or
dec
call
sbb
outsb
pushf
add
int3
out
and
in
mov
lods
iret
popa
test
push
or
sbb
adc
adc
or
and
jns
leave
daa
and
xchg
or
sub
shll
mov
jbe
and
shr
loopne
sub
fs
enter
or
mov
xor
dec
inc
inc
pop
jle
inc
xchg
cmp
mov
and
popf
add
mov
dec
add
or
xor
mov
push
mov
test
add
insb
xor
sbb
push
jp
mov
cmp
stc
jns
inc
dec
pop
test
pop
mov
fcomp
add
jns
or
sbb
fisttpl
test
push
arpl
push
out
and
pop
inc
cltd
inc
clc
add
ja
cmpsl
jge
cmp
cld
dec
and
sbb
push
or
and
pop
out
les
test
xor
adc
pop
sbb
xor
pop
test
nop
mov
push
cld
je
adc
xchg
outsb
rcl
sub
xchg
ss
jg
in
scas
packuswb
addl
fcoml
and
cs
adc
adc
jbe
mov
mov
jnp
test
gs
mov
inc
test
sbb
out
fucom
fcoml
push
stc
xorl
pop
aas
xchg
jmp
push
pusha
inc
testb
nop
test
mov
dec
push
xor
ss
sarl
xor
mov
aaa
cmp
lahf
into
mov
dec
xchg
jb
pop
pop
nop
std
pop
faddl
xchg
sub
dec
outsl
cmp
or
add
hlt
nop
mov
mov
push
fnstenv
jle
jo
pushw
or
iret
mov
or
loopne
and
sbb
dec
pop
clc
int
fidivl
out
int3
xchg
mov
stc
clc
mov
pop
dec
add
or
clc
cmc
xor
mov
add
cmp
sub
adc
mov
cmp
sub
xor
cmp
xlat
sti
mov
or
adc
jnp
sbb
daa
scas
lods
call
sbb
inc
ljmp
imul
mov
stos
fs
lods
int
sbb
daa
mov
dec
insl
dec
add
addr16
mov
mov
sub
out
xor
pop
pop
xor
jae
and
jns
jo
inc
pop
lret
push
in
lds
xchg
pop
inc
dec
js
mov
mov
pop
sahf
inc
scas
inc
cmp
dec
in
xchg
push
jns
mov
sbb
push
jno
or
outsb
movsb
adc
cli
icebp
jge
push
sub
inc
pop
lods
pop
xor
mov
movsb
js
dec
push
xchg
inc
mov
cmp
or
or
pop
jae
loopne
frstor
je
mov
push
shrl
inc
inc
es
mov
rcrl
jae
rol
and
fdivs
fmull
outsl
sbb
xchg
xor
not
loop
jns
and
sub
jecxz
inc
mov
or
fs
mov
shlb
and
mov
mov
jp
nop
sub
mov
push
js
mov
pop
divb
or
sti
out
xor
les
leave
outsb
imul
rol
fwait
sbb
jmp
je
inc
mov
icebp
and
lds
pop
sarb
jmp
jle
ret
push
xor
push
mov
and
sbb
cld
insb
andb
es
add
ja
jg
shll
mov
pop
push
cli
add
jns
ficoms
jle
jo
mov
loopne
sbb
cs
std
ja
ror
loope
sub
int
lods
test
mulps
sub
aam
add
and
popa
dec
je
jo
dec
lret
and
enter
shl
inc
adc
shrl
cwtl
out
loope
ja
ds
cmp
fdivl
mov
mov
inc
out
mov
xor
xor
sub
sub
adc
out
mov
and
sbb
adc
adc
add
int3
mov
add
jbe
divb
mov
add
inc
or
cmp
ret
ja
repz
mov
mov
push
cmp
mov
fisubrl
rcr
adcb
bound
jb
pop
fisubrl
xchg
pushf
inc
adc
add
jno
out
push
outsl
dec
cs
clc
adc
pop
xor
aam
push
jae
adc
rclb
mov
sbb
jmp
mov
cmc
and
cld
cwtl
inc
sti
data16
cmp
test
pop
push
clc
or
xchg
pop
sbb
sub
cmp
ds
sub
in
mov
push
sub
fistps
int
leave
repnz
int3
mov
in
cmp
inc
lock
xchg
mov
fs
xchg
adc
push
int3
or
imul
mov
add
cli
add
and
add
adc
jns
arpl
loop
aas
push
js
lods
mov
sahf
mov
stos
mov
jl
mov
ljmp
push
add
jns
imul
and
jne
sbb
pushf
mov
push
les
scas
adc
cld
dec
fs
addr16
xchg
enter
pop
mov
mov
inc
packsswb
sbb
pop
mov
les
mov
cwtl
movsb
sbbb
into
fisubrl
pop
sbb
jno
xchg
cmpsl
push
cmp
rcrl
dec
je
adc
pop
sbb
mov
out
sbb
push
push
push
mov
inc
fwait
and
sub
mov
scas
dec
inc
je
scas
jns
fs
mov
lcall
pusha
pop
xchg
mov
jb
sbbb
insl
jmp
pop
mov
das
cmp
and
xchg
xor
sti
ss
mov
sbb
js
jmp
aam
mov
mov
mov
mov
imull
popa
stos
in
pop
das
aad
clc
je
mov
inc
aam
dec
adc
clc
or
call
ja
push
jbe
push
test
int
dec
pop
dec
adc
jmp
sahf
xorb
call
push
mov
jne
cmp
push
in
fsubr
dec
jnp
rolb
stc
out
cmpsb
push
nop
jae
cwtl
mov
je
xchg
adc
imul
jge
add
iret
add
cmpsl
movzwl
cwtl
add
mov
cs
fisubs
cmpsb
mov
add
sbb
mov
loope
and
xor
std
leave
leave
pushf
push
xor
push
xchg
dec
and
rcr
int
roll
add
jl
dec
dec
cmp
sbb
push
cmpsb
xchg
fisubl
test
fsts
out
int
divl
xchg
push
icebp
test
mov
jns
sub
sbb
out
add
pop
sti
inc
das
imul
jle
scas
xor
stos
add
cmpsl
out
rcrl
pop
dec
xchg
and
in
clc
or
mov
out
push
mov
clc
xor
jmp
jno
xchg
pop
mov
lret
stc
cmp
and
test
push
rcr
aaa
mov
mov
adc
fcomip
std
nop
ljmp
out
ljmp
cmp
mov
js
andb
push
push
add
in
js
loope
jno
test
aad
inc
cmp
das
lret
dec
aad
scas
sub
jge
rcr
mov
test
scas
xor
jmp
inc
xor
fnsave
into
add
push
iret
push
or
xor
outsb
std
mov
jae
div
lock
dec
pop
data16
push
movl
push
mov
es
xor
cld
dec
loopne
or
jae
or
jg
mov
pop
dec
sbb
mov
or
sbb
roll
fists
jns
sbb
popa
sti
xor
or
sub
jns
pusha
sbbl
testb
push
or
push
cmpsb
sti
inc
packuswb
pop
outsl
int
in
adc
imul
xchg
adc
pop
and
fucomip
dec
adc
aas
xor
lret
pop
dec
cltd
fs
dec
pop
inc
test
and
push
jg
inc
adc
or
xor
xlat
jmp
mov
les
out
pop
and
cwtl
clc
cmp
outsb
lahf
jns
aam
dec
jnp
es
push
mov
cmp
xchg
push
insb
fisubl
mov
lods
mov
inc
inc
out
decl
xor
imul
arpl
jmp
xor
push
mov
ss
fidivl
pop
cwtl
or
mov
sbbb
stc
cmp
pop
outsl
cli
inc
out
rolb
dec
movsb
aam
xor
push
out
popf
dec
or
popa
sbb
mov
mov
sahf
shl
mov
add
shrl
addr16
popf
xchg
jbe
jmp
push
mov
inc
mov
ud2
scas
dec
or
lret
sbb
dec
lret
cmp
loopne
mov
stos
cmp
loope
insb
push
aaa
dec
push
lods
in
mov
mov
inc
jle
cmp
cmp
cmc
sbb
sahf
cld
sub
sub
inc
xchg
fistl
jbe
jmp
dec
or
ja
mov
mov
mov
test
dec
mov
sbb
or
lods
push
pop
call
jo
in
test
cmp
adc
xchg
into
or
cmp
imul
pop
cmp
fidivl
jp
insl
push
mov
push
pop
and
insl
sub
sub
test
int3
jmp
mov
stos
mov
or
scas
fldl
sbb
sbb
aad
dec
sub
int3
pop
idivl
mov
dec
dec
adc
mov
aaa
inc
cmpsl
mov
lock
ficompl
les
outsb
inc
loope
push
sub
pop
xchg
idivl
insb
pop
bound
mov
jl
mov
mov
popf
sub
jne
stos
push
mov
inc
cs
add
mov
imul
addr16
push
ja
or
movsb
xchg
sub
or
mov
je
es
dec
jno
xor
add
adc
mov
and
cmp
in
dec
loop
je
lfs
sub
jno
mov
nop
sbb
dec
fadd
cltd
test
in
repz
push
cmpsl
stc
cmp
fidivs
sbbb
repz
mov
sti
testb
icebp
leave
or
cmpl
push
setnp
aad
aaa
xchg
dec
cli
ljmp
imul
sbb
push
adc
jle
pushf
aam
mov
shll
ret
dec
lcall
lock
cmp
jl
add
xor
negl
aaa
mov
xchg
les
inc
loope
and
ja
push
popa
aam
int3
ljmp
insb
jmp
xorb
cmpsl
mov
mov
out
mov
scas
popa
cmp
fidivrs
cmp
into
xor
pop
adc
cmp
ja
sub
cmc
pushf
ds
dec
ficompl
call
push
mov
pop
shl
pop
add
mov
loope
mov
loope
lcall
cmp
scas
jnp
mov
sbb
data16
dec
add
cli
mov
mov
mov
in
add
xchg
andl
rclb
cwtl
ss
ret
pop
lea
adc
loope
insb
mov
jecxz
adc
xchg
xchg
frstor
and
inc
cmpl
jle
mov
cld
lcall
inc
pop
lret
add
cld
mov
lods
sub
push
adcb
stos
lret
pop
sarl
out
rol
repnz
jle
ja
pop
push
pop
jg
xchg
push
mov
fwait
inc
ss
repz
push
out
cmp
daa
lds
dec
iret
mov
mov
imul
jo
out
or
adc
mov
dec
insl
jnp
xchg
cmpsb
xchg
ds
and
jmp
jns
fiaddl
jb
mov
mov
pop
inc
bound
sbb
negb
xchg
mov
xchg
jecxz
dec
loopne
fcompl
mov
sub
lret
insb
adc
loopne
loop
scas
mov
mov
out
pop
or
out
jb
fwait
xchg
out
xchg
hlt
loopne
adc
cmc
movsl
mov
pop
adc
dec
sbbb
and
sbb
int3
mov
cli
aam
cmpsb
pop
shlb
lret
cwtl
negl
mov
js
addr16
mov
sbb
lea
popw
xor
in
jmp
pop
add
jmp
int
xchg
mov
mov
aad
sbb
imul
push
pop
xchg
add
fwait
sub
int
or
jg
fsubp
adc
jnp
loop
dec
and
jns
push
ficoml
mov
call
dec
addb
movsl
mov
subl
cmp
and
rcrb
pop
mov
leave
sub
mov
mov
js
inc
into
pop
or
sti
add
or
scas
inc
ss
dec
cmpsl
push
ja
lea
pushf
outsl
fstpt
stc
movsl
mov
icebp
aam
divl
es
iret
push
cmc
testb
icebp
add
cmp
mov
fldcw
ss
dec
or
ror
std
adc
cwtl
push
sbb
push
adc
enter
dec
jno
ljmp
jmp
pop
inc
pop
add
in
cmpsl
mov
stos
sbb
adc
pusha
mov
ret
jbe
mov
mov
adc
mov
dec
in
jl
repz
pop
test
test
jecxz
mov
mov
in
shl
sbb
push
jecxz
sti
push
enter
ret
arpl
js
push
aas
xor
xchg
cmp
xchg
cmpsb
cld
orps
and
jnp
mov
jecxz
xchg
ss
repz
xchg
cmp
test
fwait
dec
mov
jle
pop
lahf
sbb
cli
jp
inc
fisubrl
lds
mov
stos
jne
mov
jmp
push
js
pushf
fstpl
in
jbe
inc
cmp
repnz
xor
fisubs
out
xchg
xor
pusha
add
push
dec
cmc
shr
mov
stos
xchg
loopne
pop
jbe
inc
jl
sbb
stos
daa
dec
sub
push
adc
divb
scas
ss
icebp
cmp
or
ret
mov
repz
hlt
or
mov
xor
je
mov
inc
cmp
scas
xchg
inc
dec
imul
in
fwait
cmpsl
fwait
xchg
cmp
sbb
push
push
inc
gs
sbb
nop
movsl
mov
sarl
jle
cld
adc
seto
sub
and
or
das
push
ret
push
push
fsubs
out
mov
push
stc
lahf
scas
xchg
das
add
jmp
int
jecxz
mov
dec
imul
mov
push
mov
test
adc
ss
aad
jl
pop
push
pop
ja
dec
aam
lds
pop
stc
dec
fildll
xor
xchg
ss
adcb
dec
sti
pop
mov
cmpsl
in
pop
leave
aas
sahf
inc
mov
js
mov
imul
clc
aaa
mov
call
lret
shrl
out
rorb
xchg
add
mov
jmp
leave
dec
xchg
imulb
loop
test
sti
ss
xchg
push
mov
mov
push
push
ds
push
lods
jnp
lret
cmpsl
insl
lock
jb
dec
or
es
jns
jle
push
cld
in
inc
jmp
test
sub
cli
inc
pop
lahf
outsb
and
lods
and
cmp
push
pop
inc
pop
sub
in
jp
pop
adc
jge
repz
inc
fs
pop
adc
mov
sub
adc
jns
fnstenv
sbb
xchg
aas
mov
xor
mov
add
into
sub
bound
mov
loop
or
push
adc
cmp
mov
cmp
pop
dec
in
jle
out
test
push
mov
outsl
mov
sbb
xchg
movntps
inc
stos
addl
out
les
icebp
cmp
push
pop
and
xor
in
ss
xlat
mov
dec
pop
or
jl
test
xchg
addl
rorb
pop
aaa
inc
push
mov
sub
fiadds
or
sub
int3
mov
sbb
xor
stos
jg
repz
xlat
add
sbb
in
jmp
popf
mov
pop
or
add
lods
ret
and
adc
or
je
stc
fimull
test
mov
mov
xchg
sahf
dec
pop
mov
push
jbe
jge
popf
and
loop
adcb
inc
popf
mov
xor
mov
pop
rorb
push
adc
mov
add
je
mov
test
ss
outsl
roll
mov
outsb
cmp
cmpl
lahf
mov
jp
and
sub
dec
inc
xor
stos
rcrl
ljmp
lcall
lahf
repz
adc
adc
jmp
add
fxam
loope
enter
lcall
jge
je
add
or
scas
cmp
insl
cli
test
into
pop
add
xchg
adc
and
mov
sbb
sub
mov
mov
movsl
pop
adc
in
sbb
sahf
ljmp
push
sbb
push
ljmp
pop
leave
repnz
mov
ret
outsb
out
push
hlt
test
leave
ds
dec
adc
icebp
push
cmc
push
jmp
ljmp
push
in
xchg
and
call
imul
adc
fwait
fs
fs
jne
add
sub
cmp
add
daa
push
adc
mov
dec
rorl
fisubl
sahf
std
cs
insl
ss
or
jg
inc
xchg
push
xchg
adc
xchg
push
cmpb
cli
das
hlt
xchg
pop
cmp
pop
inc
and
je
in
repz
ja
ds
fsubrl
in
pop
in
sbb
push
cmp
imul
stos
jo
push
cmc
add
cmp
orl
xchg
jbe
mov
lret
push
pop
xchg
imul
ljmp
out
pop
clc
mov
addb
jnp
ret
sub
imulb
mov
mov
mov
pop
adc
lahf
into
fnsave
mov
adc
aad
xchg
sbb
subb
push
inc
and
inc
les
jle
popa
sti
bnd
xchg
cmc
pop
or
cli
andl
add
sub
scas
in
lds
sub
sbb
cmp
movsl
aaa
xor
test
das
lret
or
stos
push
shl
pop
cwtl
cwtl
std
fsubs
jmp
out
xor
outsl
mov
or
push
jae
cmpb
cmp
dec
add
sub
sti
stos
stos
mov
movsl
cmp
mov
xchg
dec
loope
xchg
cltd
test
xchg
jmp
pop
cmp
cli
push
idivl
stos
in
into
loope
xchg
push
outsb
mov
sbb
outsl
subl
add
sub
scas
inc
dec
pop
sahf
gs
add
mov
arpl
push
mov
cli
xchg
into
std
in
mov
test
bound
cmp
andl
stos
xor
mov
pop
cld
cmp
xchg
push
cltd
sarb
outsl
outsb
pop
cli
or
in
cmp
cwtl
fs
mov
loopne
aad
repnz
aam
call
pop
mov
cmp
fmuls
inc
add
rcll
fwait
pop
cmp
add
iret
sub
fisubl
dec
cmp
pushf
and
pop
cmp
cmc
adc
idivl
sahf
fsubr
stos
xor
icebp
mov
stc
movsl
push
clc
sbb
test
rolb
data16
xchg
xor
aam
call
hlt
data16
idivl
inc
and
hlt
outsl
adc
gs
loopne
imul
jecxz
pop
sub
xchg
xchg
xlat
pop
out
xchg
in
add
sbbb
insl
int3
ja
jns
xor
xor
sub
pop
fdivl
stos
xchg
push
push
mov
in
cmp
xchg
loope
fsubrl
fwait
je
dec
and
mov
sub
stos
push
lret
inc
jle
add
dec
int
and
push
or
adc
mov
out
jbe
inc
mov
data16
or
es
lahf
cwtl
es
sbb
out
hlt
dec
mov
xchg
lcall
div
and
icebp
jb
mov
ficomps
hlt
adc
cld
add
cmp
inc
lea
lds
jmp
dec
xchg
inc
cmp
and
xor
mov
inc
loopne
test
fcoml
outsl
mov
and
and
cmp
sar
scas
fidivrl
in
pop
imul
sarb
push
adc
jge
add
inc
inc
jecxz
out
stos
int3
outsl
pop
sbb
cmp
push
jmp
negl
imul
les
test
cmp
push
sbb
daa
push
inc
or
fsubs
mov
leave
push
sub
jp
pop
lret
movb
mov
and
and
fsts
lcall
and
add
movsl
push
lock
pop
inc
aad
imul
pop
inc
scas
sbb
js
fnstsw
ja
jno
sti
adc
ss
mov
stos
idivl
es
sbb
jp
test
pop
inc
test
lret
and
lea
fsubrp
fisttps
and
out
xchg
xlat
cmp
int3
mov
jno
jge
mov
pop
pop
hlt
lods
cmpsb
inc
aad
decl
inc
ja
xchg
inc
aaa
lock
popf
cltd
out
mov
cmc
cmp
lcall
push
popa
xchg
sub
jmp
lock
shrl
mov
pop
out
into
mov
push
mov
out
jns
inc
xchg
adcb
dec
add
lock
fmull
or
push
add
in
in
fmuls
sub
mov
sub
push
mov
mov
data16
cmc
push
cmp
jge
loope
sbb
mov
ja
push
sarl
jge
repnz
outsb
lret
mov
outsb
addb
cld
pop
mov
jbe
push
xchg
inc
mov
mov
pop
int3
aad
pop
mov
aaa
mov
push
pop
adc
sbb
out
repz
leave
jl
iret
mov
es
aaa
popf
aad
xchg
inc
loopne
sbb
insb
fdivl
fs
movsb
sub
mov
imul
rcll
xchg
pop
test
xor
add
sbb
ret
add
imul
adc
adc
cmpsb
cmp
scas
xor
lahf
mov
dec
push
idivb
stos
add
aad
and
repz
dec
dec
push
sub
or
sub
aaa
lds
lcall
loop
in
dec
xchg
jbe
popf
sarb
xor
insl
orb
sbb
push
cwtl
push
pop
pop
inc
jge
mov
stos
leave
xchg
ret
sbb
scas
add
in
mov
sbb
sub
in
sbb
mov
cmp
mov
insb
std
xchg
pop
xor
pop
xchg
fistps
add
or
int
shl
add
mov
push
or
fs
and
mov
dec
sahf
adc
add
push
jae
pop
test
aaa
stos
data16
xor
mov
cmp
jp
icebp
jg
dec
mov
fcmovnbe
jecxz
aas
hlt
add
pop
idivl
dec
jno
in
mov
cmp
in
sub
test
pop
mov
ftst
int
or
sbb
pop
imulb
xor
push
cmp
data16
jge
mov
fildll
fbld
cmp
sbb
ret
pop
push
mov
push
sti
mov
push
xabort
aam
adc
data16
mov
pop
xor
je
lret
adc
sub
dec
xchg
and
lock
shlb
push
stc
test
pop
js
xchg
jge
inc
aad
cmp
inc
icebp
jle
pop
xchg
in
or
mov
sub
ficompl
gs
push
mov
cmp
in
repz
pop
or
cli
aad
shl
xchg
mov
xor
sti
xor
push
push
sbb
xor
imul
xlat
leave
fs
add
insl
sti
cwtl
xor
jbe
inc
xchg
fwait
sbb
mov
shll
mov
ret
cwtl
aaa
ljmp
sahf
testl
sub
sbb
cltd
mov
cmp
push
pop
cmp
mov
pop
sahf
fidivrl
lret
das
sahf
arpl
xchg
adc
call
icebp
pop
jecxz
insb
jmp
dec
mov
cmp
loop
adc
cmp
into
es
lock
adcb
fcomps
aad
sub
pop
xchg
pop
aas
add
xor
aas
xor
sbb
pusha
add
fcompl
cmp
movswl
sub
int3
sbb
loopne
je
mov
mov
push
add
dec
hlt
loop
movsb
ss
xchg
icebp
pop
clc
adc
mov
js
int3
inc
mov
je
call
add
xchg
adc
std
jno
push
and
adc
jle
and
cmp
jb
ret
std
dec
int
stos
enter
int3
cmp
lea
mov
jp
ffree
dec
adc
fbld
sahf
sub
rolb
cli
cli
adc
scas
sti
push
and
jl
or
sub
iret
xor
test
add
js
adc
fisttps
daa
aam
mov
fdivp
rolb
cmpb
in
aas
jmp
and
add
fmuls
dec
int3
jo
loopne
push
fistpl
push
test
dec
mov
jb
add
test
das
xlat
add
sub
jae
gs
push
addb
andl
adc
inc
mov
ja
mov
xor
or
fcmovnbe
push
push
sub
rcrb
inc
ss
xchg
jg
push
push
push
xchg
es
inc
mov
mov
out
xor
lret
testb
sbb
sar
addr16
cmp
and
dec
mov
xchg
mov
or
push
rorl
cld
ljmp
movsl
out
in
rcll
adcb
rol
sbb
mov
test
pop
adc
scas
mov
lcall
fsubr
rcll
popf
and
test
jnp
stos
sub
xor
jg
sbb
out
fnstcw
cwtl
mov
mov
dec
sbb
mov
cltd
lret
and
mov
xor
and
cwtl
dec
adc
fucomip
movsl
inc
jne
xor
jge
pop
adc
jbe
in
stos
scas
jmp
push
rcll
adc
xchg
in
adc
cld
jmp
lahf
mov
movsl
and
imull
xlat
adc
mov
aaa
jns
adc
xchg
xchg
pop
cmp
add
aad
das
pop
in
inc
negb
adc
jle
jmp
ds
jb
andb
test
mov
je
pop
call
pop
mov
jbe
fldenv
dec
xorl
lcall
add
cmpsl
xlat
and
rolb
fnstsw
pop
dec
push
and
push
aaa
pop
test
mov
push
sbbb
mov
mov
loope
popf
mov
fistpl
pop
sub
xchg
loop
lret
mov
fidivrl
imul
mov
repz
cmpsl
sbb
sarb
adc
sub
notl
fsub
je
mov
xlat
call
stos
adc
subl
fsubrp
fwait
imul
xchg
aad
jecxz
mov
fcompl
les
mov
xor
jae
jnp
cmp
sarb
xor
add
cmp
popl
fprem
cmp
cld
fsubs
dec
cmp
pop
rcrl
dec
int3
inc
push
lods
out
jecxz
push
mov
inc
divb
dec
mov
cs
ror
iret
std
add
cmp
rol
cmp
mov
repz
cld
ror
inc
xor
adc
les
mov
sti
push
mov
je
sub
pop
jecxz
out
mov
out
enter
sub
hlt
mov
mov
mov
testb
mov
stos
sbbb
idivb
add
mov
popf
testb
shrb
enter
dec
enter
sub
jbe
add
leave
push
ja
leave
jl
add
cwtl
lods
xor
or
push
sbb
xchg
sub
lcall
fyl2x
data16
inc
ljmp
mov
jle
ret
xorb
pop
mov
int3
or
xchg
push
cmpsl
test
mov
pusha
insb
mov
jb
ljmp
inc
sbb
pop
or
add
cmpsb
xor
insb
push
push
mov
rolb
or
mov
sbb
lret
popa
dec
push
push
jecxz
or
inc
cmp
into
repz
mov
in
rcrl
jo
mov
lret
gs
sbb
lahf
pop
fld
push
mov
jnp
push
out
xor
lahf
push
xor
or
sub
and
xchg
pop
sbb
dec
fsubl
jo
jne
paddsw
add
add
sbb
mov
nop
sar
pop
jmp
lahf
rorb
xor
jns
and
adc
stos
sbb
sub
repnz
stc
mov
sub
jecxz
and
js
cmc
sbb
popf
mov
add
mov
daa
aas
dec
or
fnstcw
push
or
sbb
lock
fstl
pop
sti
pusha
add
lret
int
and
out
dec
dec
mov
push
xlat
les
xchg
pop
out
cwtl
testb
rclb
mov
lret
out
and
sub
mov
pop
arpl
gs
push
mov
adc
push
cmpsl
in
add
lret
popa
cwtl
in
int
cmc
xchg
sub
jbe
repz
and
scas
lahf
mov
fisubrs
ja
sbb
test
lahf
pushf
pop
pop
dec
push
adc
push
popa
movsl
or
mov
hlt
jne
nop
fmuls
pop
out
cltd
test
movsb
push
incl
ss
scas
lea
or
lods
sbb
cmp
aam
repnz
ljmp
mov
push
push
sar
fwait
lea
std
stos
add
jne
and
xchg
pop
mov
mov
lahf
fadd
pusha
fdiv
arpl
adc
inc
aam
add
repnz
xchg
mov
pop
out
mulb
jmp
jo
or
inc
pop
popa
loop
and
mov
sub
xchg
movsl
pushf
xchg
cmc
mov
or
imul
popa
mov
pop
fildll
mov
dec
enter
or
les
push
mov
jl
cmc
rcl
add
jno
mov
pop
mov
fstl
cmp
fsubs
cmp
loopne
ja
dec
fldenv
cmp
cmp
push
pop
xor
push
ret
data16
pusha
fucomp
jns
cld
push
mov
sbb
mov
dec
repnz
and
aam
adc
dec
xchg
lret
fcomps
jno
fcmovbe
jno
data16
cs
sub
inc
xlat
xor
in
mov
add
in
and
inc
add
cmc
push
pusha
je
pushf
and
std
mov
mov
aaa
divb
fidivrl
mov
enter
dec
xor
and
mov
jl
subl
repnz
jbe
imul
stos
dec
xor
sbb
pop
fisubrl
cmp
rcrb
cmp
and
cmp
rol
cmp
lods
fstps
pop
and
push
bound
mov
adc
add
mov
jge
inc
push
pop
sub
lret
cli
cmp
pop
int3
mov
loop
mov
sub
jmp
fisubl
test
repz
mov
movsb
lret
sbbl
out
pushf
push
pop
aad
xchg
push
mov
leave
aas
jno
cmp
imul
dec
pop
push
cmp
test
pop
pop
push
jnp
jb
xor
sbb
add
cli
nop
mov
lret
hlt
out
mov
mov
call
ret
fs
add
arpl
jecxz
insb
sbbl
push
add
and
lret
stos
push
lret
cs
cld
lcall
insb
ror
lcall
fdivrl
call
adc
mov
xchg
ficoms
jg
bound
mov
mov
or
adc
cmp
jecxz
xor
or
pop
cmpsl
adc
add
jge
dec
pop
mov
push
cld
mov
out
or
adc
stc
sbb
rcl
add
sbb
pop
test
mov
scas
jo
icebp
jg
inc
lods
pop
mov
js
push
mov
mov
cs
inc
jge
aad
popf
and
mov
cmp
mov
xchg
jle
adc
mov
add
dec
addr16
xor
cmp
jns
xor
fdivs
insb
and
mulb
xchg
add
cmpsb
pop
jle
xchg
xchg
mov
lock
xlat
pop
jle
adc
insb
mov
push
lods
or
mov
jo
push
lahf
testl
jae
aad
adcl
loop
fs
js
daa
popa
sub
sahf
pop
sub
cli
mov
push
and
lahf
lods
xchg
dec
insb
fs
aam
popa
sub
loop
inc
sbb
sub
out
sbbb
inc
inc
and
test
outsl
ds
jns
shll
sub
outsb
lods
adc
bound
sbb
ret
pop
push
sbbb
in
lret
mov
adc
adc
data16
and
or
arpl
jmp
push
stc
fists
mov
add
bnd
loopne
daa
push
lods
pusha
cmp
call
pusha
fcos
pop
xor
fstpt
adc
inc
push
xlat
ljmp
lods
pop
pushf
sbb
add
and
jne
pop
mov
xchg
mov
adc
add
push
mov
pushf
mov
repz
push
shlb
sbb
adc
int3
sub
pop
xchg
xor
mov
jle
pop
xlat
shlb
jmp
dec
cmp
mov
idiv
hlt
ss
outsb
hlt
pop
pop
push
ret
xlat
call
push
lahf
mov
push
insb
xlat
inc
in
cmpl
pop
mulb
xor
jle
out
xchg
push
rcrb
inc
jae
sarl
jp
push
scas
xchg
xchg
mov
gs
hlt
cmp
stc
shlb
jne
pusha
into
rcr
test
cmp
cmp
pop
ja
xchg
pop
jno
cmp
lea
cs
out
lods
das
xchg
pop
xchg
xchg
mov
hlt
add
sub
sahf
dec
mov
ret
inc
jb
lods
push
fldcw
cli
push
andl
js
frstor
fldl
bound
clc
adcb
out
in
dec
push
scas
ljmp
in
in
push
mov
or
push
lods
imul
adc
pop
push
lret
aad
inc
daa
mov
daa
lahf
mov
mov
cli
insl
aad
inc
mov
dec
inc
ds
out
xor
js
negb
rcl
fisubs
lret
sbb
cmc
pop
and
or
negb
push
decl
sub
xor
mov
mov
sub
repnz
mov
cmc
cmp
pop
or
sahf
std
jg
adc
and
lret
loop
xchg
push
and
pushl
ljmp
dec
mov
shl
je
out
add
divl
jno
jbe
sub
movsb
adc
xchg
mov
inc
mov
in
jmp
or
sbb
adc
movsb
leave
or
jg
sub
mov
dec
incl
jecxz
imul
and
hlt
jp
jp
mov
nopl
dec
mov
lods
mov
jbe
sbb
mov
aam
in
cmpsl
jg
sub
dec
dec
cmpsb
test
pop
xor
xor
push
xchg
jnp
mov
cmpsb
pop
xchg
mov
mov
jecxz
mov
data16
mov
jl
pop
push
fbld
sub
imul
ret
jae
mov
add
out
loop
stc
cmp
xchg
das
and
add
add
add
lods
jbe
stos
call
je
shr
sub
dec
ds
dec
mov
nop
or
push
shll
shrb
xor
inc
lds
jno,pn
sub
xchg
or
fdivr
xor
cmp
jno
cwtl
pusha
mov
jl
mulb
or
xchg
ljmp
and
mov
ljmp
pop
stos
xchg
fcoms
dec
cmp
enter
add
add
xchg
cli
push
movsl
sahf
adc
push
lcall
daa
loopne
rclb
bound
lods
sarl
pop
das
add
pop
cmp
mov
ja
cmpsl
into
and
aaa
xor
daa
mov
or
in
sti
fs
ljmp
jnp
in
pop
pop
out
mov
adc
lods
mov
or
dec
das
xchg
les
inc
aam
dec
xorl
cmc
clc
add
or
loope
mov
mov
aas
pop
insl
add
or
rcll
call
mov
testb
adc
mov
roll
mov
sti
push
inc
mov
das
cltd
inc
arpl
mov
jp
cmp
icebp
xlat
enter
mov
or
add
fs
pop
xorb
xchg
cmp
repz
cwtl
and
mull
repz
out
cmp
popf
mov
sbb
push
outsl
mov
mov
xor
pop
mov
jmp
mov
repnz
mov
inc
mov
ljmp
insl
lods
mov
clc
sarb
inc
es
je
pop
push
inc
insb
jns
sbb
adc
js
inc
clc
xchg
cmp
outsb
in
loopne
sahf
adc
lcall
dec
xchg
mov
movsb
mov
addr16
jl
adc
aam
in
aaa
xchg
fwait
rorb
roll
leave
pop
xor
adc
jno
loope
mov
pushf
into
or
jg
ret
pusha
les
xchg
stos
xchg
sbb
push
sbb
xchg
mov
outsb
loopne
xchg
xor
mov
mov
sbb
stos
xchg
stos
imul
aaa
inc
jnp
pop
jge
shll
out
xchg
add
xchg
sub
hlt
movsl
das
pop
roll
xchg
adc
daa
inc
xchg
aam
mov
fwait
lret
aam
lahf
imul
mov
xor
lods
sti
and
fildl
jle
mov
stos
mov
mov
sahf
shll
pop
cwtl
pop
movsl
xchg
xchg
jg
hlt
jl
lcall
scas
leave
rcrl
sbb
repz
cmp
sahf
out
sbb
push
imul
jo
nop
lret
inc
pushf
mov
enter
xchg
and
test
mov
pop
cmp
fidivrl
mov
mov
pop
lock
lahf
clc
xchg
fisttps
pop
xchg
enter
imul
jmp
cmp
sub
mov
sub
jne
xor
sbb
pusha
push
xor
xchg
push
int
xlat
inc
inc
xchg
movsb
andb
pop
clc
dec
fldt
aad
aad
test
jmp
shll
movsb
scas
or
jo
mov
sahf
xor
shll
ret
stos
push
adc
rorb
sbb
mov
leave
push
sub
test
xchg
mov
lods
push
mov
add
rol
xchg
and
mov
sbb
inc
add
out
add
mov
es
xchg
mov
loop
adc
mov
lahf
or
xor
jne
ret
or
mov
aam
sbb
emms
mov
in
es
lock
add
iret
jecxz
and
int
es
sarl
mov
inc
movsb
adcl
shl
add
pop
or
cmp
es
enter
inc
gs
repnz
sub
push
fdivr
sub
cmp
sub
out
loope
add
sub
and
cmc
ds
stos
cmpsb
aad
push
pop
nop
insb
and
out
enter
dec
xlat
lret
notl
into
sti
jp
adc
shlb
test
faddl
dec
pop
xlat
and
inc
sahf
movsl
adc
daa
mov
addr16
cmpb
pop
mov
testl
mov
push
fiadds
cmp
or
dec
or
mov
or
ljmp
mov
ret
dec
xchg
xor
pop
mov
test
inc
lea
jns
push
lods
push
sbb
jnp
sbb
xchg
jecxz
cmpsb
cmp
es
push
mov
mov
push
push
push
test
xchg
divl
popf
std
inc
stc
sahf
xchg
push
clc
xchg
push
dec
push
mov
in
addb
mov
mov
pop
mov
in
cmp
rorb
cmp
lock
xchg
push
mov
inc
xor
sub
fiaddl
jbe
inc
iret
mov
cmpsb
add
push
ljmp
ret
rcr
dec
leave
sub
push
dec
mov
mov
mov
pop
cmpsb
pop
nop
dec
pop
add
pop
stos
repz
xor
rcrl
js
xchg
jecxz
mov
mov
xchg
mov
dec
pop
shl
sahf
div
outsl
cmpsl
in
test
sbb
sub
out
insl
push
in
xchg
jne
out
dec
fidivs
or
bound
testb
xor
repnz
adc
push
pop
mov
out
out
xor
dec
cs
mov
fs
popl
mov
ret
sbb
or
and
push
xchg
xchg
mov
mov
lock
xchg
push
pop
rcrb
pop
les
or
mov
xchg
leave
dec
push
pop
out
mov
notl
test
mov
jnp
lock
mov
or
sbb
mov
mov
ljmp
lds
jg
data16
mov
pop
mov
jae
movsb
sbb
xor
push
adc
xor
fnsave
sub
and
rclb
push
lods
jmp
call
lret
sub
test
pop
or
fisttpll
ds
adc
cmc
mull
push
loopw
add
fcoml
xchg
mulb
or
aaa
mov
mov
pop
lahf
repz
sbb
pusha
test
out
call
and
adc
adc
push
dec
mov
js
arpl
daa
cld
jge
insb
pop
cs
push
dec
inc
jbe
cmp
adc
adc
jmp
sub
sub
push
fiadds
sbb
push
dec
mov
in
cmpsb
mov
nop
xlat
xchg
push
and
mov
add
xchg
frstor
les
stos
ja
inc
cmpsl
ljmp
sub
das
jg
fst
and
bound
outsb
test
loope
jo
lret
and
jns
and
adc
dec
ror
adc
sar
ja
nop
add
les
fsubl
pop
test
xor
xor
xor
push
push
scas
mov
scas
sub
mov
xchg
and
in
cld
popf
rcll
repnz
in
test
ror
sbb
jle
mov
mov
testl
mov
or
icebp
test
dec
sub
int3
stos
mov
lods
out
pop
dec
mov
mov
dec
aad
mov
pop
adc
icebp
push
and
into
rcll
or
cli
out
fs
sbb
sub
sbbl
repnz
cmp
push
out
pop
in
ficomps
es
jne
pop
ret
adc
dec
cmp
jo
add
inc
insl
push
push
lret
in
data16
pop
mov
subb
lahf
mov
xchg
idivl
outsb
mov
stos
out
add
xchg
scas
dec
mov
mov
test
stc
adcb
ss
mov
xor
mov
and
jb
test
push
cmp
mov
lahf
popw
mov
or
add
in
jmp
add
repz
push
loop
mov
push
cmc
push
insl
in
cmp
insb
je
jne
inc
test
outsb
sbb
push
lret
fwait
movsl
popaw
sarl
sub
stc
add
add
sbb
test
lahf
sbb
mov
push
inc
movsl
aam
and
sti
das
xor
fwait
dec
pushf
or
insl
push
jns
push
push
xchg
push
shrl
fists
aaa
push
lods
mov
pop
sub
xchg
push
inc
mov
loop
sar
push
icebp
das
jbe
add
adc
cmp
xchg
fisubs
inc
test
lea
pop
je
loop
dec
cli
or
imul
lea
sahf
mov
adc
mov
mov
negl
lret
xor
mov
lods
xchg
xchg
imull
fiadds
imul
mov
dec
mov
cmc
jle
mov
rcl
and
lds
push
and
pop
jnp
xchg
push
test
add
fs
push
fwait
and
enter
sub
stc
mov
mov
xchg
sub
ds
and
or
sbb
pop
rcrb
inc
xor
lahf
test
add
cwtl
in
outsl
dec
inc
test
jo
lret
sbb
insl
in
nop
outsl
cmp
test
loope
and
mov
sub
push
inc
jl
adc
mov
fcoms
xor
add
or
sub
mov
out
inc
mov
scas
movsb
sub
xor
aaa
les
adc
inc
into
mov
dec
dec
push
int
scas
sbb
sbb
pop
pop
jo
cld
inc
or
popf
cmpb
movsb
lds
xor
push
ret
fsubrl
mov
cmp
and
cmpsb
in
sti
xor
push
add
test
inc
and
mov
jnp
mov
mov
push
dec
and
in
movsb
ja
mov
mov
xchg
scas
xchg
jp
outsb
lods
jns
std
movsb
xchg
adc
jecxz
ljmp
ss
loop
push
stc
icebp
sub
icebp
xchg
xchg
out
scas
lret
sub
mov
lds
cmp
mov
dec
xor
aad
sbb
jnp
cmp
pop
std
cmc
inc
fldcw
mov
idivl
and
or
xchg
test
xchg
push
xchg
sbb
xchg
mov
lcall
rclb
into
jno
xchg
dec
sub
outsl
out
mov
js
fidivrl
inc
mov
jne
mov
dec
mov
cli
push
and
jle
pushl
xor
xchg
das
aad
ljmp
in
push
or
sub
dec
jo
std
mov
jo
lahf
xchg
jle
sbb
in
adc
xchg
out
push
mov
mov
js
or
xchg
adc
mov
adcb
cmp
orb
sti
jle
jnp
sbbb
cmp
pop
cmp
jecxz
popa
xchg
mov
popf
out
jg
js
sbb
or
cmpsb
shr
mov
subb
xor
sub
inc
dec
add
shll
mov
orl
lods
cmp
nop
dec
push
mov
mull
mov
lret
or
lds
push
test
rcrl
xor
rcr
dec
xchg
xchg
mov
mov
fwait
out
in
ljmp
or
push
imul
jno
ljmp
lods
outsl
xor
jns
ret
in
cmp
mov
xchg
adc
in
sbb
cmp
clc
xchg
div
push
add
js
mov
ret
pushf
stc
fcmove
in
in
dec
push
nop
pop
setne
jno
pop
inc
pop
xor
fidivs
push
out
lret
sarb
sbb
xor
sbbl
pop
ficompl
rorb
or
in
andb
sti
nop
inc
lock
leave
popa
xor
xor
aaa
mull
rep
bsf
andb
cmp
outsl
sahf
mov
ret
mov
ss
not
es
lods
inc
int3
or
xor
cmp
inc
negl
push
and
dec
lds
or
sub
insl
or
scas
out
das
addb
dec
cld
push
int
jb
aad
sti
sub
sbb
mov
movsl
or
repnz
lret
sti
xchg
fdivr
add
cltd
mov
int3
les
add
rcrb
push
mov
nop
xor
xchg
mov
jnp
aad
or
frstor
mov
sub
or
pop
mov
mov
shr
data16
loope
ss
fsubr
mov
in
mov
xor
jne
lock
scas
pop
xchg
out
insl
mov
adc
inc
int3
insl
adc
js
cmp
dec
pop
idivb
jmp
sub
push
dec
jo
mov
clc
xchg
jmp
mov
imul
dec
cmpsb
jg
push
cld
mov
adc
fdivrs
lret
scas
and
jae
xor
cmp
arpl
xlat
dec
sbb
jmp
pop
sub
sub
mov
sbb
test
xchg
sqrtps
pop
leave
add
push
iret
outsb
fstps
mov
gs
jle
rsm
inc
sub
add
mov
test
ljmp
push
jmp
call
out
insl
ss
imul
inc
inc
rcll
mov
std
in
outsb
adc
shlw
cmpsb
ret
scas
xor
icebp
mov
add
stos
mov
push
inc
in
cltd
jbe
jmp
call
add
jae
loop
push
push
ds
cltd
out
jle
push
adc
and
sub
es
xchg
movsb
adc
jmp
inc
pmaxsw
adc
iret
mov
push
xchg
pop
das
daa
fisubl
cs
fldenv
lea
sbb
test
and
lods
xorb
into
fisttpll
add
xchg
decb
inc
iret
test
mov
pop
stos
pop
mov
imul
mov
stos
loope
sub
mov
jae
sbb
jmp
sbb
mov
jg
mov
fs
xchg
movsb
inc
pop
sub
add
xchg
inc
cmpsl
sbb
dec
and
sbb
pop
popa
pop
mov
sub
and
addl
iret
cmc
or
orl
or
and
mov
sub
decl
cmp
xchg
push
adc
push
pop
dec
fimull
cltd
cmc
sbb
sub
sahf
xchg
mov
dec
lcall
mov
mov
ljmp
jg
out
out
ljmp
pop
inc
xchg
pop
adc
test
fbstp
movsl
sbb
int3
lock
mov
in
xchg
xchg
icebp
fldl
mov
aaa
pop
xor
sub
xor
aaa
dec
or
xor
mov
arpl
dec
jle
out
mov
aas
leave
std
scas
and
cmp
int
adc
jae
imul
outsl
inc
dec
outsb
sub
pop
dec
mov
lods
int3
mov
enter
xor
sar
clc
pop
int
sbb
gs
filds
jl
sub
push
lea
fdivrs
cmp
adc
gs
xchg
jae
rcl
shrb
add
into
mov
pushaw
imul
jnp
jecxz
loop
xor
mov
cmp
iret
inc
or
inc
mov
out
sbb
aas
mov
add
lahf
orb
jb
cmpsb
or
dec
jns
popf
or
mov
add
pop
fisubl
lods
xchg
pop
shl
and
push
lods
ficoml
sub
cwtl
mov
add
inc
pusha
fwait
cmp
insb
subl
stos
stc
dec
fiaddl
and
adc
cmp
push
jg
or
push
mov
mov
sarl
cmp
out
pop
gs
pop
int3
dec
mov
jge
pop
xchg
xor
mov
push
out
ds
test
test
mov
adc
xchg
loop
push
lea
sub
and
ja
adc
mov
imul
jmp
xlat
lods
ljmp
dec
out
pushf
push
push
es
push
xchg
xchg
mov
mov
sub
outsl
or
pop
add
sub
cmp
sti
push
scas
ss
add
inc
and
pop
sbb
mov
pop
imul
mov
insb
lret
addr16
int3
push
inc
or
xor
aad
adc
lds
enter
aas
xlat
sti
rorb
stos
pop
pop
iret
jo
jno
mov
hlt
ja
sub
jae
mov
insb
fadds
jns
dec
sub
sub
out
jb
mov
loop
and
push
or
or
jae
jo
mov
jns
cltd
imul
inc
xor
fstl
mov
cmp
jl
scas
fwait
dec
or
add
lock
push
xchg
lds
dec
cmovbe
push
ja
jp
sub
xor
repz
daa
je
lods
mov
bound
or
scas
jle
subb
sbb
sub
mov
adc
pop
jmp
xchg
sub
stc
ja
and
imul
sbb
in
loope
imul
cmova
aam
mov
xor
sbb
addr16
mov
hlt
push
jb
inc
xor
pop
adc
jb
cmc
sbb
sbb
xor
xlat
testl
fbstp
xor
call
jo
pop
popf
aam
ds
dec
push
and
test
push
leave
icebp
jmp
test
test
mov
jns
xchg
cmpsb
dec
sub
mov
test
aam
fldl
call
jecxz
shll
mov
leave
mov
ret
inc
rcl
es
lods
repz
jo
xlat
lea
int
sbb
lahf
mov
inc
cwtl
sbb
push
jno
sbb
pop
cmp
stc
dec
movsb
sub
repz
dec
pushf
arpl
rolb
lcall
das
or
ss
jl
mov
jecxz
jmp
jnp
and
add
sbb
ja
mov
jae
or
test
popa
push
pop
push
cmp
add
adc
imul
mov
inc
sbb
push
test
clc
push
pop
pop
jns
enter
xor
popf
inc
int
mov
je
in
test
xor
movsb
jno
pop
jge
lds
sarb
push
jge
jb
loopne
jnp
sbb
imul
in
pop
dec
cs
fstpl
mov
add
jne
push
push
mov
xchg
movsl
gs
cs
insl
hlt
stos
test
push
inc
insb
stc
sub
add
cmp
mov
cli
sbb
pushf
mov
out
mov
test
xchg
fisttps
shlb
and
shrl
fiadds
cld
cmpsl
jl
adc
repnz
mov
inc
cli
imul
icebp
mov
xor
repnz
loope
ds
mov
dec
sbb
xchg
aad
les
sbb
dec
jle
mov
push
inc
aad
std
lods
daa
je
inc
sbb
jo
es
outsb
dec
cs
popa
daa
lock
jb
fstpl
push
jl
push
jbe
ret
jns
stos
and
jo
dec
pusha
push
flds
jmp
nop
cmp
xchg
add
xchg
enter
arpl
adc
loopne
push
test
out
inc
pop
fdivrl
sbb
adc
and
inc
leave
ljmp
cmpsb
lock
scas
bound
cmp
movsb
dec
mov
sbb
ds
mov
xchg
es
enter
loope
popa
pop
pushf
dec
dec
jbe
jg
xor
jecxz
xchg
ret
jge
and
arpl
push
push
inc
jns
mov
lcall
ja
js
add
and
xorb
mov
sub
ss
push
das
mov
or
push
jnp
daa
add
int3
popl
cli
sti
and
push
sti
movsl
in
sarb
sub
pop
aad
jbe
div
nop
clc
loopne
and
mov
push
roll
test
lods
aad
sbb
ss
lds
jae
mov
sbb
lret
cmp
cmp
jmp
movsl
push
lods
out
mov
push
aam
push
sbb
pop
iret
sbb
cmp
loope
push
xor
in
loopne
movsl
stos
fnstsw
dec
lahf
lds
lods
xchg
test
popf
pushf
scas
inc
aas
mov
lods
shlb
test
push
sbb
adc
push
push
roll
fisubrl
hlt
std
xchg
push
aas
mov
mov
popa
cmp
inc
pop
push
pop
add
inc
xchg
notl
clc
pop
fmull
lea
stos
int
cmc
test
or
adc
test
push
xorl
mov
adc
jle
and
xor
push
cwtl
dec
cwtl
cmp
arpl
push
sub
or
push
stos
push
adc
sbb
orb
jl
push
and
add
pop
push
sbb
repnz
outsb
test
dec
insb
in
jne
mov
or
xchg
fstpt
xor
jo
sub
mov
sti
sbb
mov
popa
sbb
hlt
pushf
aad
dec
loopne
mov
fistpll
lds
pop
bound
mov
xchg
mov
xor
je,pn
fldt
push
orl
inc
pop
sbb
ret
sub
jb
mov
pop
pushf
push
divb
cwtl
sbb
push
in
sbb
pushf
aas
pushf
pop
mov
inc
push
rcrl
mov
aam
sub
jmp
test
dec
call
loop
outsl
mov
fs
jno
pop
pop
cmp
xor
mov
xor
adcb
push
jmp
stos
scas
mov
leave
pop
lods
push
and
adc
fsts
xchg
cs
leave
pop
mov
ds
out
mov
ret
sbb
inc
pop
imul
lret
ja
xor
push
mov
xchg
pop
lea
sbb
int
inc
int3
lret
inc
in
loop
repz
xor
not
add
add
or
mov
insl
lret
mov
xor
ret
push
lods
adc
cmpsl
loopne
popf
mov
fistps
mov
add
and
rorl
lock
stos
aaa
dec
repnz
sti
mov
ret
mov
and
mov
adc
and
sti
add
push
nop
xor
scas
fmulp
outsl
sti
pop
push
xor
mov
mov
jne
cmp
jecxz
dec
mov
lcall
jg
hlt
sub
bound
adc
or
rorb
test
into
cmpsl
and
mov
push
out
mov
mov
push
mov
sub
push
ljmp
mov
std
pop
test
and
gs
aaa
mov
lret
pusha
pop
mov
jmp
jmp
and
mov
sub
rcrb
add
dec
dec
mov
or
mov
sub
xor
pop
inc
lret
fcomps
stc
sub
push
pop
insb
cmp
cmp
pop
insl
pop
and
dec
push
dec
or
mov
das
shlb
je
popf
xchg
pop
dec
dec
xchg
adc
xor
mov
add
call
pop
loop
outsl
sub
mov
jmp
sbb
js
and
pop
scas
mov
sub
fnstsw
call
mov
xchg
pop
in
xor
mov
adc
cmpsl
imul
push
std
or
jl
addb
pop
cmpsl
inc
ror
imul
les
stc
inc
push
test
mov
jecxz
xadd
xor
shl
shr
add
sbb
or
cmpsl
vpaddusb
stc
mov
fstpl
sbb
xchg
jmp
sbb
pop
pop
sub
push
out
cmpsb
add
ret
loope
mov
je
jne
sub
roll
jns
fdivp
dec
fsubrl
mov
pop
ret
movb
dec
cmp
cmpsl
pusha
dec
push
outsl
lock
leave
ret
mov
scas
das
inc
push
and
push
loop
mov
inc
daa
out
xor
adc
insb
push
out
mov
and
stos
add
nop
out
adc
lock
stc
add
sbb
loop
sub
pop
jne
jge
outsl
shll
inc
push
insb
xchg
mov
sbb
pushf
out
subl
xchg
dec
or
iret
lret
xor
or
jmp
push
sbb
js
inc
aad
cld
in
inc
aas
xor
bound
or
jb
movsl
ljmp
fldcw
sub
sbb
xor
shl
xchg
aaa
unpckhps
sub
jge
jg
shrl
mov
xlat
sbb
pop
mov
les
pop
push
je
popf
dec
mov
out
fstpt
nop
adc
inc
and
mov
mov
xor
inc
adc
cmp
push
pop
push
shrb
popa
in
dec
lret
mov
rcrb
inc
sub
lcall
jnp
adc
push
lds
or
adc
pusha
sarl
mov
daa
xchg
cli
dec
jge
cmpsl
lret
aad
cmpsb
cmp
loop
mov
adc
jmp
aad
testl
es
add
rcl
inc
pop
lret
incb
push
or
daa
das
aas
andb
lret
mov
cmp
loop
mov
dec
js
movsl
xchg
push
icebp
pop
int
adc
jmp
mov
sub
test
and
sub
inc
out
aam
jl
adc
shrl
jns
dec
mov
pop
adc
push
mov
hlt
dec
or
fstps
jae
cmp
lods
dec
ljmp
jo
call
testb
push
push
inc
nop
mov
call
addr16
insb
cwtl
imull
nop
push
lret
rcl
je
mov
jp
cs
fdivs
add
push
lock
mov
jbe
mov
mov
xchg
aas
jbe
xchg
and
adc
and
mov
xor
push
push
pop
and
mov
shl
js
ret
or
cmp
sub
ficoml
push
decl
push
popa
movsl
inc
sub
lds
popf
cli
pop
or
sbbb
fmull
sub
push
jmp
pop
clc
jnp
mov
cmpsb
loope
bound
or
ss
sbb
hlt
repz
pop
xchg
fucom
push
jbe
incb
iret
xor
xchg
mov
sahf
insb
arpl
add
in
xlat
ss
fistpll
inc
in
cmp
fwait
popf
jg
das
mov
sti
dec
jg
addr16
dec
lock
jne
push
xchg
pop
arpl
dec
fisttps
pop
ss
xchg
add
sbbl
ja
cmpsb
in
cmp
dec
cmp
mov
push
mov
ret
subb
xchg
xlat
addr16
dec
lds
enter
ja
xchg
cmpsb
lcall
stos
push
add
cmc
mov
scas
mov
aaa
mov
in
jae
sbb
lea
xchg
add
int3
js
imul
cmp
mov
sub
adc
and
scas
dec
lcall
sbb
lcall
movsb
stos
mov
ljmp
test
jl
loop
jmp
stos
pop
fnsave
orb
mov
mov
jge
pop
pop
pop
iret
test
mov
rol
xor
pop
fnsave
imul
mov
fwait
dec
and
call
cmp
repz
out
jno
or
mov
jecxz
jecxz
mov
in
loope
push
xchg
adc
pushf
es
mov
lds
sub
mov
fsubs
nop
mov
add
aam
add
and
loop
aad
fidivs
cmp
aaa
clc
fcmovnbe
mov
out
xchg
popa
call
xchg
xor
dec
sbb
xchg
and
fistps
add
in
inc
pusha
popf
ret
shl
or
iret
sahf
fiadds
pop
loop
ret
mov
dec
test
test
jns
clc
shrb
dec
insb
add
test
xor
nop
call
dec
cli
adc
repnz
cli
es
pop
mov
sub
mov
rolb
addl
into
jp
inc
sbb
enter
ret
std
xchg
scas
ret
jl
pop
aad
sub
fiadds
push
shlb
iret
ffree
adcb
inc
dec
out
cs
mov
pop
or
ljmp
adc
and
test
fistpl
shll
xchg
in
jno
xchg
add
jnp
cmp
inc
ret
jns
test
dec
push
cltd
pop
fwait
inc
pop
shlb
cli
add
movsl
inc
jbe
pusha
mov
popa
cli
clc
pop
addr16
dec
jno
inc
add
inc
pop
sub
jbe
test
shr
popa
add
jb
mov
jg
jmp
lods
test
adcl
jb
scas
cmpl
stos
jmp
ficomps
frstor
out
test
ret
jmp
lret
mov
aas
cmp
mov
mov
out
sbb
movsb
cmp
mov
cmc
das
into
fidivrs
cmovle
sbb
cmp
insb
push
inc
lret
jge
std
xchg
out
xchg
pop
jmp
inc
push
cmp
and
inc
insl
stos
clc
add
xor
xlat
sbb
inc
hlt
add
icebp
lock
sbb
xlat
sub
testl
sbb
mov
lahf
adc
mov
test
or
in
iret
push
loopne
mov
sub
fmuls
arpl
add
and
jno
adcb
pop
jno
mov
xlat
xor
mov
scas
imul
ret
push
adc
mov
jmp
xor
lock
in
dec
xchg
call
out
rcrb
xor
sub
fdiv
ret
jecxz
inc
pop
sti
repnz
jge
add
add
add
and
fistpl
and
fcomp
ss
jge
dec
add
jbe
enter
out
scas
add
lcall
frstor
sarl
jmp
cwtl
jne
insl
int
lea
mov
jnp
jge
ljmp
aaa
jb
xlat
mov
jne
insb
or
mov
hlt
jae
sbb
dec
js
std
stc
nop
daa
pusha
push
inc
repnz
decl
inc
mov
popf
xor
sti
push
incl
aam
and
xchg
add
iret
push
inc
icebp
leave
lock
adc
or
cmp
mov
in
inc
scas
pop
outsb
lds
adc
lock
es
jge
push
mov
mov
negb
bound
cmpl
repnz
test
mov
dec
xchg
inc
popa
clc
xchg
outsl
leave
inc
dec
shll
and
mov
push
sub
dec
and
push
jecxz
test
pop
aaa
jg
mov
aam
mov
xchg
or
lds
inc
shlb
sub
shll
inc
bound
mov
movsb
aaa
jbe
push
or
cmp
push
jg
in
mov
mov
add
cmp
nop
mov
mov
inc
enter
stc
mov
jo
xor
nop
and
test
push
test
insb
in
scas
adc
mov
cmp
adc
popa
mov
test
cwtl
ja
rcrb
mov
add
negl
les
rcrl
jmp
jl
mov
adc
dec
ret
ljmp
pop
add
mov
cmp
sub
lods
rolb
fdivp
mov
jecxz
les
jle
xlat
and
push
rorb
cmp
add
dec
jecxz
cmpsb
mov
pop
out
cmpsb
hlt
jg
sub
jbe
outsb
or
sbb
movsl
dec
loop
and
aaa
sahf
mov
or
adc
negl
or
mov
fnsave
popf
lret
dec
and
jno
sub
sar
addr16
mov
push
sti
xor
mov
addr16
inc
cmp
fidivrs
adc
mov
inc
arpl
fisubrs
fistps
imul
dec
ret
pop
mov
mov
lods
ss
ret
lcall
call
fs
jecxz
pop
std
ror
sbb
adc
ds
sbb
pop
fwait
sbb
push
addl
or
fisttpll
push
xor
xor
or
les
daa
adc
call
xor
addr16
fistpll
sahf
jle
push
cmc
jge
fcoms
outsl
test
mov
adc
dec
sub
add
sub
adc
cmp
mov
fucomp
push
cmpsl
lods
push
aam
or
rol
data16
xor
in
mov
out
pop
or
or
mov
sti
jl
inc
push
jmp
xor
stc
iret
test
push
cmp
outsl
push
scas
sarb
add
scas
or
mov
mov
imul
mov
jp
xchg
mov
cmpsb
bound
insb
cmc
mov
mov
movsl
push
aad
adc
lahf
mov
sub
popf
xchg
cmp
add
mov
out
not
in
add
aas
cmpsb
cmpsb
data16
mov
and
xor
loope
lret
jbe
sub
sbb
mov
cmp
and
push
mov
dec
and
fisttpll
test
add
mov
or
mov
lods
xor
pop
out
or
or
lea
pusha
in
mov
cmp
call
adcb
pop
xchg
sub
aam
lahf
sti
cmpsl
shrb
push
ss
and
out
inc
into
fists
ja
iret
cltd
and
into
enter
xchg
jl
enter
lea
xchg
je
mov
and
mov
orl
loopne
lods
outsb
subb
dec
pushf
popa
jnp
out
fsubr
adc
scas
insb
shl
ror
out
fmuls
cmp
mov
push
mov
imul
ret
inc
push
pop
fisubl
cmc
repnz
inc
aad
jp
in
aas
xchg
xchg
cld
fiaddl
cmp
push
fnstenv
xlat
mov
jge
or
xchg
into
dec
mov
daa
pushf
les
pop
lret
fnstsw
mov
rcrl
orl
pop
xor
fstl
cmpsb
mov
jnp
jmp
mov
ret
add
xchg
push
jp
mov
add
in
cwtl
fstl
or
cmc
xor
sbb
popf
jnp
jg
and
stos
mov
inc
cmp
push
pop
inc
movsb
cltd
out
inc
sbb
add
inc
pop
jbe
or
cmp
shlb
scas
dec
mov
movsl
inc
jp
jl
mov
int3
in
pop
xchg
mov
lret
adc
sub
shrb
inc
pop
imulb
loop
xorb
mov
loop
add
arpl
mov
in
pop
xchg
sbb
mov
mov
add
push
dec
ja
sub
add
outsb
insl
decl
into
pop
dec
aam
ret
adc
and
outsb
shl
dec
stos
push
push
adc
pop
call
insb
and
inc
push
test
xor
mov
pusha
lret
pop
cmpsb
inc
outsl
dec
fiadds
fwait
movsb
andb
pop
mov
pop
dec
mov
fwait
push
int
addb
call
mov
out
push
cltd
loope
mov
xor
xor
movl
cmpsl
mov
add
jmp
outsb
insl
sbbb
cmp
dec
divb
push
mov
lahf
inc
sub
fistps
cmp
mov
pop
ret
or
mov
lods
dec
test
lods
push
scas
stc
cld
mov
mov
adc
add
cmp
xchg
iret
mov
jne
insb
jbe
mov
mov
ret
add
dec
push
clc
push
leave
fistl
sbb
dec
mov
testb
stc
test
push
mov
mov
mov
adc
mov
adc
mov
out
popl
data16
adc
pop
shrb
in
cmpxchg8b
lret
mov
jnp
cmc
jle
jmp
xor
mov
cltd
lret
and
xlat
sub
xor
mov
adc
adc
pop
pop
or
sti
sbb
aam
push
icebp
pcmpeqw
pushf
mov
push
aas
fstps
push
inc
lcall
mov
lret
lahf
leave
adc
mov
xor
subb
sub
insb
aad
adc
or
mov
int
inc
ja,pn
xor
jae
lods
iret
mov
cmp
xchg
repnz
sbb
lahf
dec
ss
mov
push
fs
lock
imul
fdivl
arpl
loop
mov
outsb
loope
out
shl
push
mov
pop
aam
xchg
insb
adcb
dec
movsb
mov
add
addr16
pop
mov
test
shrl
add
cmp
mov
test
frstor
andb
jecxz
not
inc
mov
xchg
xor
jg
aad
mov
mov
fwait
in
scas
div
sbb
mov
dec
aad
lret
loop
rcrl
aaa
cmp
push
sbbl
mov
cmpsl
mulb
pop
es
outsl
cmp
jecxz
das
sbb
adc
cmp
pop
xor
sbb
insl
fldcw
pop
shlb
dec
and
pop
fcmovb
outsb
mov
mov
sbb
or
subb
repz
lds
ja
xorl
mov
repnz
dec
ja
mov
lea
adc
lret
pop
insl
pop
stos
es
icebp
xchg
cltd
cwtl
js,pn
pop
mov
das
or
mov
mov
jb
scas
bound
icebp
out
dec
sbb
cwtl
aam
xchg
cltd
movsb
mov
sub
neg
test
adc
insb
popa
rcl
cmp
inc
mov
test
inc
xorb
sbb
in
dec
dec
mov
negl
mov
push
ret
scas
cmp
arpl
loop
outsb
adc
call
cmp
push
gs
daa
lods
popf
dec
out
mov
or
js
lahf
cltd
or
jl
jmp
fs
nop
sbb
shl
add
cwtl
lcall
jecxz
out
mov
popa
mov
cld
mov
stos
dec
mov
ret
loop
jl
outsb
xor
aaa
dec
test
add
pop
cmpsb
out
shll
sbb
push
fnstsw
in
lret
adc
adcb
dec
in
mov
cmp
inc
pop
cmp
inc
insb
cmp
imul
roll
not
xchg
or
fstps
jl
out
cmp
lods
mov
or
fchs
sbb
mov
shlb
sub
mov
cmc
sbb
int
mov
stc
dec
adc
fnsave
lods
stos
inc
jle
aam
loop
outsl
call
roll
push
cwtl
sbb
fisubrs
mov
xchg
cmp
add
arpl
call
jg
rcll
push
shrb
pop
xchg
fcomip
sub
sti
fcmovnu
sti
dec
xchg
or
jp
sti
decb
inc
pop
mov
inc
test
lods
es
sbb
gs
test
addr16
push
pop
loop
shl
in
data16
push
in
xchg
gs
fs
push
mov
xchg
ljmp
mov
fwait
arpl
lea
push
jg
loopne
jo
lahf
add
add
xor
inc
sbb
outsb
cmpsb
mov
adc
push
cmp
adc
imull
sub
xchg
test
rol
inc
lret
repnz
xlat
add
out
add
adc
jl
or
adc
add
andl
pushl
adc
std
mov
mov
mov
pushf
inc
jnp
pop
fcmovnb
or
test
adc
jmp
aam
lods
inc
lods
sub
add
decl
add
xchg
dec
test
movl
push
insb
faddp
add
leave
aaa
push
xor
aaa
das
mov
inc
and
aad
or
out
push
inc
lods
jge
dec
fs
iret
pop
mov
pusha
jle
lock
or
xlat
inc
sub
xor
jb
fwait
lods
cld
fsub
or
jg
aaa
lret
cmpsl
pushf
aam
or
lods
inc
ljmp
jno
and
and
aad
out
imul
out
pop
pop
mov
jle
push
xchg
je
pusha
mov
pop
faddl
daa
jb
jbe
lret
mov
aam
mov
fdivrl
mov
push
fsts
cli
aam
mov
dec
ss
jae
add
popf
dec
xchg
dec
ss
clc
sbb
sub
int
and
sbb
cmp
xor
inc
dec
jo
inc
jmp
mov
lahf
sbb
cwtl
pusha
mov
and
into
add
in
push
les
mov
push
pop
insl
push
ret
push
fdiv
outsl
inc
daa
and
ja
imul
dec
jo
pop
mov
cmp
or
sbb
dec
fcompl
cmp
xchg
xchg
lds
out
aad
mov
jbe
jnp
popf
sub
dec
jg
lods
cwtl
and
pop
xor
fcompl
fs
mov
cwtl
mov
mov
aas
pop
or
popa
fmull
outsb
and
adc
inc
cli
inc
pop
loopnew
add
cwtl
sub
pop
js
aam
push
mov
sbbl
mov
lret
cmp
in
push
push
cmp
fs
cmp
pop
adc
add
xor
mov
xchg
das
mov
std
imul
out
std
aad
adc
dec
fisttpl
sarb
xchg
repnz
adc
jnp
dec
stos
push
outsl
inc
or
dec
mov
jno
mov
mov
ret
jge
or
inc
bound
and
xchg
mov
pop
sub
push
xchg
pop
mov
mov
jmp
imul
xor
aaa
in
enter
dec
out
jne
leave
sarb
add
out
add
in
jae
mov
push
mov
pop
fiaddl
xchg
mov
dec
xchg
mov
lcall
push
std
sbb
dec
xor
add
mov
push
mov
stos
or
pop
cmp
mov
sahf
testl
lea
xor
jecxz
cltd
and
test
xor
scas
mov
sbb
jae
jl
imul
into
aam
jmp
push
and
xor
cmpb
imul
adc
fs
and
push
push
enter
outsb
sub
pop
mov
out
daa
lea
ds
push
stos
shlb
mov
mov
xor
mov
cmpsb
pop
mov
lds
jno
pop
dec
test
adc
dec
adc
dec
ret
dec
adc
dec
arpl
lret
outsb
mov
mov
arpl
lcall
sbbb
xchg
jne
scas
jmp
sub
jmp
push
push
push
xor
aaa
xchg
dec
xor
mov
xor
clc
sub
cmc
cltd
mov
inc
sub
mov
popf
repz
push
jo
repz
ljmp
xor
mov
and
outsb
add
and
int3
dec
loop
cmpsl
lock
out
xchg
cmp
and
cmp
inc
test
call
xor
jg
fsts
je
sub
jo
imul
adc
addr16
pop
mov
dec
and
pop
adc
enter
xchg
test
orb
pop
cli
mov
clc
pop
test
mov
cli
aaa
jecxz
data16
or
rcll
test
inc
fucom
or
jo
sbb
cs
pop
sahf
sbb
mov
loopne
mov
out
in
movsl
insl
outsb
popa
pop
inc
in
aam
mov
mov
icebp
dec
mov
inc
mov
push
push
insb
fsts
mov
ljmp
insb
xchg
imul
push
jbe
fwait
push
pop
loop
scas
sti
lahf
sbb
fdivrl
arpl
loope
fdivrs
fdivrs
mov
das
jp
lock
xlat
dec
xchg
loop
xor
cs
shlb
pop
call
stos
lods
int3
mov
pop
adc
or
notl
ds
clc
add
dec
or
shlb
jne
aad
xor
sti
mov
arpl
mov
dec
test
lock
insb
scas
or
out
leave
imul
icebp
push
clc
xor
out
rorl
lods
dec
outsl
cmc
into
je
xchg
data16
popa
lock
adc
xlat
add
mov
test
mov
dec
sbb
and
mov
jbe
add
adc
cmp
and
ja
stos
dec
mov
pop
orl
mov
pop
jmp
inc
fisubrl
lods
je
fcmovnu
cmp
xlat
sub
stos
je
jae
sbb
or
int3
call
inc
ds
rorl
lret
loope
sahf
add
icebp
lret
fcomps
mov
push
mov
sbb
mov
sarl
mov
cmp
loopne
sub
sar
js
imul
dec
jmp
dec
mov
idivb
int3
add
or
lahf
pop
les
or
arpl
mov
pop
sbbb
movl
fucomi
xlat
xor
mov
inc
outsb
push
cmp
insb
repz
cmp
mov
mov
cmp
push
pop
movsb
call
inc
aaa
les
cld
adc
fistl
sarl
fildll
cld
fsubrl
mov
fmull
push
ret
pop
mov
ja
dec
cmpsb
and
jnp
ss
repnz
add
lahf
test
sub
movsb
inc
sbb
pop
ja
lcall
gs
out
vshufps
xor
aaa
adc
sbb
push
push
fwait
sarl
imul
push
cmpb
inc
stos
scas
sbb
add
lahf
dec
testl
push
mov
push
fmulp
push
fwait
inc
adc
inc
cltd
lahf
popf
out
mov
pushf
push
cmp
pusha
dec
je
stc
dec
or
mov
pop
push
mov
fwait
insb
or
xorb
fsubs
cmpsl
and
xchg
lret
rcrl
scas
xor
aam
xchg
andl
dec
add
adc
jecxz
mov
push
scas
repz
push
mov
data16
add
cmc
sbb
test
pusha
into
dec
jmp
mov
inc
cltd
adc
pop
jl
imul
mov
mov
pop
sbb
pop
mov
sbb
xlat
imul
sub
jmp
lcall
iret
mov
pop
push
fstpl
daa
pop
mov
mov
mov
pop
or
jge
add
pop
es
das
sar
inc
ja
mov
test
int3
fxch
lods
mov
and
and
sbb
mov
add
cmp
mov
filds
aaa
inc
icebp
cmp
xchg
or
adc
outsb
in
push
loope
movsl
popa
mov
xor
mov
enter
ds
test
jmp
mov
je
in
sbb
xchg
ret
inc
loopne
rcrb
mov
rclb
push
add
in
sbb
imul
daa
in
ja
sahf
loop
ret
xchg
pop
adc
ret
or
jns
test
movsb
push
push
mov
cmpl
push
push
ds
hlt
clc
push
lcall
int3
sbb
push
ret
in
xor
sbbb
idivl
ss
xchg
cld
mov
sbb
rcll
mov
sbb
cmp
insl
cmp
dec
ret
int3
pop
daa
and
cmp
sbb
adc
push
pop
fwait
pop
popf
dec
aad
dec
cmp
fldenv
enter
mov
cmc
out
testl
push
cwtl
test
fnstsw
inc
pushf
push
dec
add
scas
insb
int
pop
dec
dec
cmpsl
imul
mov
stos
dec
mov
adc
sbbb
or
cmp
lcall
std
mov
inc
leavew
mov
ljmp
push
mov
fcompl
scas
sub
test
ss
ja
or
push
test
or
jecxz
outsb
sub
rcll
dec
ja
iret
pop
jae
fidivl
xor
mov
jmp
xchg
std
int3
and
test
repz
adc
sub
mov
cwtl
popa
push
imul
mov
movsl
dec
sbb
rclb
jge
xor
js
push
fldl
or
and
mov
dec
mov
pop
out
jae
adc
fcmovnb
notl
mov
cltd
and
and
mov
push
test
mov
pop
xchg
cwtl
mov
xchg
xchg
push
loopne
out
jnp
cmp
into
add
jo
test
enter
xor
sahf
pop
jge
cmp
add
int
inc
mov
in
mov
bound
pushl
ret
add
cmc
add
add
mov
add
inc
addr16
dec
xchg
sbb
push
popa
inc
stos
fwait
jle
add
movsl
mov
or
insb
jmp
imul
popa
addl
sbb
movsb
pop
ja
into
xchg
pop
cmpsb
cmp
adc
or
jp
fcmove
mov
xchg
lods
or
mov
scas
mov
stos
lcall
imul
cmp
add
enter
pop
sub
lsl
mov
or
leave
sbb
push
pop
rcr
adc
test
je
sub
jae
jae
xchg
jbe
shrb
aaa
pop
cld
lcall
cld
shl
icebp
fldt
mov
stos
xor
add
xor
dec
push
xor
pop
sti
out
push
ficomps
insl
es
jb
cld
mov
sub
mov
mov
push
adc
pop
add
mov
pop
dec
pop
es
mov
jne
outsl
adc
aas
loop
lahf
dec
sarb
int3
pop
int3
push
ds
fadds
ret
dec
aas
dec
leave
mov
mov
mov
mov
std
pop
sub
mov
rdtsc
in
daa
inc
sub
insl
mov
dec
or
or
mov
movsb
xor
movsl
cmp
aad
xchg
inc
mov
push
and
fs
inc
decb
pop
mov
arpl
cmp
push
pop
xor
stos
cmpsb
leave
dec
adc
in
push
daa
sub
mov
pop
cmp
mov
fstps
out
add
test
dec
push
cltd
andl
repz
jecxz
add
add
sbb
test
push
or
pushl
xchg
aas
out
mov
out
add
sub
hlt
lahf
bnd
ljmp
stos
or
in
outsl
sub
lods
jno
cmp
xlat
xchg
xchg
jmp
mov
dec
outsl
xor
sub
ror
int3
test
mov
push
shrb
jno
iret
mov
imul
xchg
add
jmp
mov
mov
testb
xchg
scas
pop
movsl
jg
mov
mov
jecxz
rcll
stos
lahf
in
mov
jbe
mov
stos
sub
data16
push
sub
mov
jg
test
or
lcall
adc
pop
sub
mov
lcall
inc
dec
loopne
outsb
out
iret
out
mov
add
int
mov
aas
or
cs
movsb
std
cmp
and
jne
loope
inc
lea
je
out
xchg
cmp
push
leave
xchg
mov
add
pop
add
mov
xchg
pop
mov
mov
ret
bnd
jo
es
xchg
inc
xchg
mov
clc
pop
adc
test
outsl
insb
jbe
ja
sbb
nop
mov
stos
sub
bnd
scas
test
iret
shrl
and
mov
push
mov
jae
out
mov
in
rclb
pop
push
jl
add
jb
call
into
jp
outsb
imul
ja
inc
jp
out
sarb
xor
xor
push
push
in
sub
jne
dec
ja
pop
mov
out
mov
das
and
add
aas
hlt
sar
jo
lods
popf
outsl
popa
push
push
pop
lods
std
repnz
leave
in
imulb
mov
mov
cltd
testb
jle
sahf
sbb
xlat
mov
dec
fsubp
les
sbb
sub
retw
test
mov
sahf
xchg
adc
xchg
jecxz
push
lock
add
repz
or
mov
or
mov
in
or
sub
pop
loopne
or
inc
jb
and
push
pop
adc
movsb
dec
lret
mov
push
ss
push
mov
fdivs
and
pop
nop
ret
ret
loopne
psllw
sub
nop
lret
or
mov
out
push
add
mov
mov
lock
fmul
xchg
test
xorb
test
dec
in
and
sbb
sti
out
pop
lcall
loopne
sbb
or
mov
xor
stc
clc
ja
jbe
inc
push
fcomps
sar
mov
lea
dec
stos
shll
lods
dec
inc
mov
push
xchg
scas
ljmp
push
mov
fdivrl
mov
ret
mov
pop
dec
data16
in
dec
xor
fwait
jae
xchg
lds
je
fs
mov
lcall
inc
es
fdivl
pop
jle
mov
inc
pop
lret
inc
out
fldt
shll
loop
addr16
push
sub
or
jecxz
icebp
mov
dec
jecxz
pop
ljmp
ret
xlat
xchg
ret
lea
mov
cmc
sub
pop
jmp
push
leave
cmp
xchg
nop
scas
ds
jle
ja
xlat
sahf
mov
inc
pop
fiadds
jb
inc
cltd
test
push
aad
out
adc
ljmp
jb
cmp
test
xchg
stos
mov
sub
dec
push
xchg
addr16
xchg
repnz
push
cs
fwait
aad
and
out
mov
out
das
add
mov
xor
lcall
loope
add
xchg
cltd
fimuls
jmp
pop
push
fistpl
push
cmpsb
lods
sarl
xchg
push
dec
lret
pop
cmc
arpl
mov
push
or
cli
jp
test
repz
out
xchg
aam
popf
pop
int3
inc
clc
xchg
idivb
insb
je
push
cs
stos
test
dec
xor
popf
loopne
je
lods
or
lret
lret
xchg
add
lret
mov
inc
jle
leave
dec
aas
shrl
jg
or
mov
or
xor
ja
popa
int
mov
test
mov
dec
cmp
inc
add
cmc
dec
ror
push
dec
push
inc
outsl
mov
mov
inc
cmp
lods
xchg
mov
dec
add
loope
fcos
push
inc
movsb
rcrb
pop
icebp
xchg
push
out
leave
lock
jno
in
pushf
and
jnp
fisubrl
pop
dec
pop
sbb
iret
adc
rcll
test
clc
xor
outsb
fldl
push
sahf
aam
outsl
cmpsb
in
cmp
pop
jl
in
jecxz
dec
test
add
scas
dec
xchg
mov
test
int3
in
pop
in
push
pop
sbb
add
inc
mov
test
insb
shlb
adc
pop
lods
outsb
jns
inc
dec
aam
int3
dec
lret
mov
and
test
mov
int
in
jnp
xchg
pop
mov
fsubr
inc
xchg
fcoml
mov
popf
or
mov
jmp
mov
sbb
pop
insl
mov
cltd
shl
push
std
rsm
into
out
fsubr
and
pusha
or
nop
dec
cmp
sub
xchg
fcomps
mov
icebp
je
loopne
lcall
outsl
xorb
push
lock
ds
mov
adc
mov
cld
mov
and
xchg
subl
xor
or
jmp
bnd
loop
add
jle
pushf
fsubl
mov
push
mov
pop
jo
bound
insl
es
sub
imul
pop
arpl
xor
dec
push
mov
xlat
mov
cmovge
out
lcall
ja
cmp
outsl
lock
dec
and
cli
je
mov
add
or
aaa
scas
sahf
mov
ret
pop
adc
jmp
aas
inc
aad
aad
and
adc
mov
cmpsb
jae
outsl
jbe
inc
shrl
sti
mov
movsb
adc
and
xchg
pop
cmc
les
aaa
mov
inc
mov
int
adc
lock
push
daa
lock
xlat
sbb
lods
int
test
lret
inc
xor
fnstenv
rolb
push
add
pop
test
ja
fadd
adc
jns
mov
cmc
adc
dec
or
push
cmp
jnp
daa
mov
cmp
and
fwait
mov
xor
jns
loope
cwtl
jno
rorl
add
ljmp
gs
xchg
pop
jb
pop
orl
sub
rolb
adc
cmp
repz
and
mull
push
imul
testb
and
push
sub
test
cmp
sbbb
cli
adc
test
and
inc
cmp
lret
cltd
push
icebp
jl
adc
dec
pop
mov
mov
aam
cmp
push
cld
pop
sbb
out
push
inc
out
testb
ficomps
divb
jno
popf
push
subl
adc
arpl
gs
jns
stos
nop
imul
jmp
shll
ja
pop
push
leave
stos
sahf
xlat
ret
in
sub
dec
loop
and
add
pop
in
push
mov
lret
and
sahf
enter
js
sub
sub
sahf
gs
cmp
stos
push
xor
clc
cmpsb
add
or
andb
data16
scas
push
lea
dec
outsl
and
xor
pop
rclb
sahf
xchg
sarl
xchg
pop
ljmp
xchg
jae
pop
aaa
popf
loop
stos
pop
jge
sbb
shrl
and
jl
fists
imul
sbb
mov
fs
imul
xchg
cmp
lahf
ljmp
cmp
into
cmp
scas
adc
repz
and
cli
iret
sbb
inc
cmp
in
addr16
rcll
sbb
sbb
cs
mov
and
xchg
mov
jmp
sbb
lock
adc
ret
pop
popf
test
pop
add
sahf
xor
lds
dec
jle
sahf
repz
aas
cld
xchg
add
jnp
adc
pop
cmp
subl
lcall
lods
cs
sub
jno
pop
pop
dec
xor
outsb
movsl
ja
sbb
fidivl
insl
mov
xchg
je
mov
jg
ja
dec
and
cltd
jmp
lods
jmp
cld
mov
fisttpll
jge
cmp
dec
cwtl
fsubr
pop
cmpsl
push
jle
inc
rorb
test
repz
mov
test
lods
cmp
cmp
andb
and
movsb
or
adc
pop
xchg
cmc
dec
loop
adc
add
idivb
adc
in
dec
mov
fistps
lods
adc
and
jp
push
mov
das
mov
mov
addb
cmp
xchg
or
mov
mov
gs
daa
jne
aas
clc
push
insb
nop
outsl
mov
lea
rolb
gs
lret
cmp
pushf
imul
jmp
imul
xor
mov
cmp
leave
rclb
jno
cmp
dec
push
dec
adc
aad
pusha
inc
xlat
adc
fs
jo
and
push
dec
sub
adc
out
or
iret
es
cmp
imul
lods
sub
add
std
add
aam
pop
or
rclb
out
xorl
xor
pop
test
sbb
imul
ret
stos
add
mov
cmp
push
lock
dec
loop
add
pop
out
addr16
add
sub
imul
inc
lods
or
ja
mov
sub
out
inc
mov
lahf
lea
jae
outsl
cmpsl
push
out
pusha
fs
std
daa
cmpsb
sub
pop
mov
scas
stos
dec
rcll
jae
fldt
mov
je
mov
mov
sbb
fidivrs
std
push
fsubl
icebp
enter
addl
shrb
lret
in
xchg
les
in
xchg
or
std
cmp
hlt
sbb
and
sub
pop
adc
pop
pushf
push
jns
jp
mov
sbb
xchg
sbb
in
cmc
sti
cli
adc
mov
ja
xlat
dec
push
cmp
and
test
inc
dec
pop
in
pusha
or
dec
pop
adcb
repnz
loope
ja
loop
sbb
outsb
add
dec
icebp
mov
xor
push
pop
loop
xor
clc
insb
shrl
outsb
frstor
js
xlat
xor
push
stc
fsubrl
in
add
adc
or
gs
sbb
xchg
arpl
mov
fmull
or
inc
loope
jp
mov
mov
lds
cmp
pushf
xlat
stc
loopne
mov
jne
jns
lods
pop
jle
cmp
push
xchg
pop
xor
and
in
adc
in
jne
push
mov
movsl
subl
mov
out
inc
dec
inc
adc
test
ficoml
sahf
xor
xchg
pop
hlt
int
inc
push
or
stc
push
jecxz
imulb
and
sbb
loop
icebp
xor
lods
jbe
xor
test
out
test
pop
call
cmp
mov
jbe
sub
and
mov
add
jo
sub
sti
mov
jnp
push
add
scas
aam
leave
test
subb
dec
xor
pop
das
andb
mov
loopne
and
mov
mov
push
dec
mov
xor
loope
pop
in
mov
jno
popa
and
add
jnp
lcall
cmp
pop
int3
aaa
push
sbb
mov
adc
adc
fs
fiaddl
loop
pushf
mov
addr16
cmp
fwait
dec
push
add
shr
mov
in
jecxz
jmp
addr16
enter
xlat
and
pop
shlb
mov
hlt
sub
mov
arpl
pop
cwtl
push
and
in
movhlps
pavgw
rolb
mov
xor
cmp
push
mov
jb
lahf
or
ljmp
fsubrl
test
fsubl
and
mov
ret
test
inc
mov
repnz
xor
add
movsl
in
dec
and
add
jl
sbb
insb
cmpsb
rcrl
pop
aam
mov
xchg
push
pop
fcmovb
ss
out
dec
jle
inc
shlb
xchg
or
xchg
fidivs
pop
hlt
pop
stc
in
loope
inc
lret
mov
and
dec
adc
and
in
dec
pop
ret
pushf
jg
loopne
cmp
stos
aam
inc
dec
cmp
in
mov
mov
in
jbe
mov
in
movsb
jno
jns
or
mov
push
out
inc
xchg
and
repz
shll
xchg
fstpl
iret
ficoml
lods
cmpsb
jp
mov
mov
adc
icebp
and
pop
pop
imul
sbbb
add
clc
mov
xlat
mov
imul
addr16
stos
out
and
fwait
and
fcmovnu
aam
jns
les
mov
inc
pop
int
pop
mov
cmp
cld
or
cld
xor
leave
leave
inc
out
sbbb
push
sbb
jge
dec
mov
ror
and
and
adc
insl
test
mov
jns
pop
and
out
in
ret
mov
mov
inc
movsb
adc
xchg
pushf
xchg
cmp
jecxz
movhlps
push
rol
fistpl
div
push
je
iret
xor
jg
mulb
push
jb
gs
rolb
mov
xor
mov
std
nop
jecxz
rolb
rol
lcall
mov
push
xchg
iret
push
cmp
int3
mov
mov
pop
sbb
test
mov
imul
mov
mov
sbb
xor
repz
lds
lcall
shr
mov
mov
jns
aam
mov
xchg
jl
mov
pop
push
sti
pop
push
mov
pop
nop
scas
pop
fistps
das
leave
outsl
mov
in
xor
cmp
mov
addr16
popf
xor
ret
pop
rolb
fbld
sbb
add
push
mov
sti
mov
push
adc
fwait
cltd
fldl2t
jo
scas
jg
mov
aad
add
pop
sub
lods
sahf
incl
inc
and
inc
aaa
adc
rolb
and
mov
add
mov
dec
pop
in
jg
in
push
inc
push
outsl
fchs
and
pop
pmaxub
fadd
sub
and
fistps
lret
dec
into
mov
inc
sub
mov
addl
jecxz
sbb
orl
jg
jae
sub
xor
lods
sbb
gs
inc
jne
sbb
jns
mov
fldcw
inc
aad
mov
dec
pop
imul
adc
bound
xchg
xchg
out
jmp
iret
or
cmp
fs
dec
aad
xor
insb
pop
psubusb
mov
xor
pop
adc
cmp
fisttps
aam
and
ja
fldl
call
scas
xchg
adc
lret
gs
outsb
repnz
pop
ret
and
cmp
out
mov
and
lods
fisttpll
outsb
and
xchg
popf
inc
cli
rorl
ret
pusha
push
cmp
lret
das
scas
ret
mov
pop
sti
lock
mov
ret
sahf
mov
xchg
imul
cmp
cli
insl
lret
mov
xchg
mov
cmp
adc
xor
addr16
adc
mov
psraw
lret
push
jp
push
mov
jp
or
das
sbb
sbbb
and
iret
mov
outsl
xor
and
out
push
sub
repnz
bound
orb
mov
jle
add
inc
or
jns
jge
cmpsb
lds
and
notb
or
cmp
iret
inc
push
stos
mov
jns
cmp
gs
inc
imul
and
pop
push
mov
push
sbb
inc
inc
mov
movsl
lods
imul
xchg
sti
addr16
daa
jmp
addl
ljmp
loope
pop
mov
les
adc
xchg
fadd
push
inc
fistpl
jb
sahf
xor
loope
int3
lahf
lret
sub
stc
lahf
cli
xchg
mov
fcmovb
mov
xor
sbb
add
xchg
in
movsl
imul
jnp
stos
fdivp
push
jge
repz
push
cmpsl
dec
sbb
int3
pop
fs
test
mov
in
jne
jmp
test
aam
pop
sub
sub
and
mov
mov
jbe
imul
dec
or
or
idivb
jne
loope
arpl
add
add
inc
pop
sarb
adc
mov
loop
bound
xor
cmp
out
and
pop
fistps
jl
adc
jnp
jl
jle
lret
push
mov
pop
mov
xor
and
pop
mov
inc
scas
scas
cmp
daa
insl
cmp
mov
jl
pop
inc
in
inc
inc
or
outsl
loopne
test
stos
addr16
push
cwtl
pop
imul
add
pop
add
shll
ret
sbb
repnz
insb
xchg
call
sbb
outsl
daa
dec
cmp
xchg
fdivrl
loope
add
repz
add
insb
insl
pop
loope
xor
xchg
rcll
insl
nop
sub
inc
jo
je
inc
jmp
push
mov
imul
xchg
add
loop
cmp
mov
jg
pop
push
iret
xchg
mov
ja
cld
enter
rclb
movsb
daa
rcll
or
pop
push
out
rcll
clc
xchg
fmuls
push
jnp
jmp
outsl
cmpsb
adc
or
cs
and
imul
fxtract
push
fs
or
adc
fisttpl
pop
mov
lods
cwtl
sub
mov
jmp
es
scas
jge
orb
mov
mov
cmp
adc
pop
out
push
xchg
adc
jnp
in
aam
test
cmpl
sbb
fadds
sbb
fadd
and
rcr
adc
mov
scas
sbb
push
jg
push
pop
xor
sti
fwait
and
rorb
aaa
test
rorl
lret
lock
inc
roll
or
lret
push
lods
pop
xor
inc
xchg
pop
in
push
and
mov
or
inc
xlat
jecxz
dec
mov
shl
dec
xchg
cwtl
adc
inc
fnsave
not
es
jge
stos
movsb
mov
mov
stos
xchg
inc
cwtl
xor
ficoms
mov
or
in
test
cmp
sub
adc
xor
pop
mov
in
adc
stos
insb
addr16
das
add
cwtl
xchg
nop
xchg
inc
stos
jbe
xor
mov
pop
mov
jle
cmp
jp
adc
les
test
cmc
mov
jno
or
or
or
add
cmp
push
inc
adc
clc
dec
dec
in
movsl
fidivrl
mov
xchg
add
scas
ss
mov
sbbl
push
xchg
pop
aas
shll
cmp
lret
jns
push
test
add
fnstcw
push
fdivl
xor
mov
jbe
xor
bound
cmp
xlat
std
dec
mov
inc
push
mov
mov
xchg
bound
xor
lahf
ret
div
lcall
int
movsb
pop
fstl
rcrb
in
mov
add
repz
movsl
push
jb
int
sbb
or
mov
les
and
xchg
icebp
je
inc
cmpsl
push
repz
mov
ficomps
mov
shr
neg
sub
addr16
sub
jnp
filds
testb
sub
lret
cmpb
xchg
sbb
insl
lret
xchg
dec
inc
pop
dec
fisttps
push
pushf
call
adc
jb
sub
stc
insl
std
les
clc
push
xchg
cld
fiadds
push
mov
adc
jmp
and
call
adc
jo
aaa
in
outsb
push
fmuls
ja
inc
xchg
mov
sti
or
push
lods
mov
sbb
sub
push
stos
mov
jl
push
aad
push
sub
xor
rcl
jl
int
stos
call
jge
loope
pop
ss
xor
cmc
xor
and
movsl
jmp
sarl
gs
xchg
add
xor
stos
mov
and
insb
int3
mov
imul
lea
int3
or
xlat
lods
pop
cmpb
sahf
sbb
push
inc
fdivrs
ficoms
pusha
scas
mov
jge
sbb
mov
or
push
mov
jge
rolb
out
jl
pop
lahf
xor
pop
jns
xchg
int
cmp
mov
cmp
jmp
movsl
movsb
adc
push
fwait
in
and
mov
push
cmp
mov
and
sahf
cmp
mov
addr16
inc
inc
daa
mov
outsl
sbb
clc
testl
popa
or
mov
push
push
js
xchg
fdivrl
add
push
and
xor
sbb
xchg
adc
ja
fs
js
inc
jmp
and
lahf
jb
lahf
sbb
mov
outsb
aad
mov
push
incb
mov
inc
mov
add
cmp
sub
inc
mov
or
or
aad
and
les
sbb
dec
insl
mov
inc
idivl
pop
in
pop
sbb
mov
push
mov
repnz
dec
rcll
ret
movsb
xchg
andl
clc
inc
inc
repnz
pop
orb
mov
jbe
setnp
cld
movsl
test
xor
sbb
mov
xor
inc
sub
pop
mov
ljmp
es
fdiv
add
push
sar
push
push
pusha
jg
xor
dec
sbb
cmc
mov
mov
stos
cmp
mov
icebp
ja
cmp
pop
sub
fldenv
or
aaa
jb
or
or
xchg
xchg
add
mov
cmpsb
cmpsb
repnz
jmp
call
std
js
sbb
in
cmp
pop
jle
movsb
das
inc
cmp
adc
xchg
add
sub
jo
or
or
fstps
das
lahf
vxorps
std
add
fwait
imul
test
lds
mov
das
xchg
jno
adc
dec
mov
jmp
jae
dec
inc
cmp
dec
and
loop
mov
xchg
test
sarl
mov
movsl
xor
or
pop
push
mov
loop
fildll
push
stos
and
dec
jle
jb
jb
add
jo
jbe
mov
int
fistl
pop
pop
cmpsl
jo
les
rorb
les
out
orl
adc
xor
xor
lcall
int
addr16
aas
add
mov
ror
incl
pushl
stos
pusha
cmpl
jbe
jle
popl
scas
insb
nop
lea
es
popa
data16
in
js
flds
int3
jne
fsts
xchg
add
cmpsb
lcall
jne
ret
cwtl
call
cmp
push
ss
lret
and
popa
push
and
lods
cmp
sbb
call
jne
das
pop
push
cmp
loope
fucomp
outsl
pusha
and
xchg
das
test
hlt
hlt
push
inc
fsubl
pop
pop
es
push
sub
mov
dec
fidivl
ja
loope
ret
and
int3
mov
adc
sub
or
sub
dec
push
ljmp
push
gs
jb
xchg
ret
cmpsl
test
sbb
and
push
mov
ret
mov
push
cmp
xor
inc
addr16
mov
mov
lods
push
sbbl
lahf
mov
jmp
mov
enter
xchg
nop
push
push
test
sub
sbb
jnp
repnz
js
std
adc
ja
mov
lea
out
pop
pop
mov
lods
jo
mov
sbb
adc
fwait
out
lahf
pop
push
test
adc
fs
stos
ljmp
paddusb
mov
push
mov
add
mov
out
orl
add
pop
leave
lahf
lods
push
sbbb
enter
insb
cmp
lock
jo
dec
dec
xchg
push
repnz
stos
negl
jns
xchg
stos
stc
or
in
pop
push
mov
mov
jae
adc
in
pushf
cmpsl
sub
inc
inc
fs
pop
jb,pt
or
jno
sbb
cmpb
pop
sahf
into
xchg
push
out
pop
sub
pop
xor
mov
add
xchg
dec
mov
lahf
test
xorb
pop
fldenv
mov
xor
add
mov
xchg
xchg
push
jo
sub
out
dec
jnp
inc
xor
out
das
add
sub
cmp
mov
fmulp
addr16
cmp
inc
enterw
std
movsb
fistpll
pop
loop
jecxz
pop
out
mov
ret
adc
cltd
rclb
stc
sbb
std
inc
mov
xlat
out
je
sti
fs
xchg
frstor
cmp
sahf
pop
lods
dec
mov
inc
lea
stc
mov
cmp
cmpsl
dec
popa
out
jge
add
negl
daa
rorb
mov
fs
ret
lret
xor
js
aam
pop
push
fidivl
insb
subb
sbb
and
shll
inc
sbb
into
xchg
leave
cmp
push
xchg
fbstp
jno
loopne
xor
popf
sbb
and
flds
pop
or
sbb
pop
xor
movsl
fdivs
xchg
pushf
call
sub
jns
pop
xchg
pusha
aad
adc
stos
push
sub
jae
pop
mov
push
stc
lcall
daa
sbb
std
mov
dec
xor
pushf
xchg
jge
jecxz
mov
sub
insl
nop
add
out
cmpsb
fbstp
pop
push
les
aad
mov
pop
dec
cmpsl
rcrl
popa
add
in
lea
dec
sbb
cmp
jg
cld
adc
mov
xchg
test
cli
inc
andb
lret
sub
xchg
aaa
test
fs
je,pn
mov
fildll
loope
dec
mov
arpl
dec
stos
stos
aaa
cmpsb
idivl
mov
fwait
dec
loope
daa
lods
and
inc
jecxz,pt
dec
jmp
lock
xor
sahf
pop
iret
vcmpsd
sbb
test
add
movsl
loopne
cmp
cmp
inc
lcall
mov
xchg
rcr
movsb
ret
xlat
adc
lods
jmp
inc
loopne
cmpsl
stc
push
shl
and
fidivrl
bound
and
sti
pop
fwait
imul
pop
lods
divb
jmp
jo
cmp
cmpb
rclb
jb
daa
int
sti
cld
pop
jecxz
scas
xchg
hlt
je
out
xchg
cvtdq2ps
add
lock
sub
lahf
je
inc
jl
pushf
out
mov
in
fs
push
fcmovne
or
test
scas
das
imul
sbb
lahf
xor
std
fwait
int3
pop
mov
stc
and
out
fistpll
xchg
jno
pop
cmp
mov
xor
mov
test
sub
push
aam
jecxz
dec
movsb
add
imul
xchg
xchg
lret
jno
sub
fwait
movsl
push
jle
mov
jns
jge
dec
and
sub
xchg
dec
lcall
jnp
cltd
and
mov
fisttpll
leave
addr16
mov
jo
xchg
xchg
imul
mov
mov
sti
mov
jo
mov
pop
cld
lret
mov
loope
or
sub
cmp
iret
pop
test
ds
fs
fimull
loope
mov
loop
dec
mov
xorb
mov
xlat
cmp
xor
add
sbb
mull
pop
into
ret
sub
pop
int
test
int
xchg
es
loope
ret
aad
aad
mov
push
mov
add
push
push
repnz
sti
add
lock
mov
inc
ret
in
lcall
jnp
mov
mov
xor
enter
gs
xor
add
pop
jno
or
test
dec
inc
adc
xchg
dec
mov
sbb
dec
xacquire
das
sbb
js
dec
in
daa
jnp
add
clc
ljmp
xchg
jae
mov
sbb
jp
cmp
popa
andb
fcoms
xlat
pop
pop
aaa
mov
inc
jo
popl
adc
fbstp
pop
inc
mov
xchg
std
sar
dec
cmp
push
mov
or
out
bnd
xchg
insb
or
fisttps
and
jne
mov
jae
add
fisubl
std
push
lods
inc
pop
int3
jbe
in
xchg
test
sti
mov
or
sub
repnz
adc
xchg
dec
in
bound
jae
pop
push
stos
adc
aas
arpl
jg
fwait
jo
lahf
cmpsl
xor
cmp
lret
stc
sahf
jns
inc
sub
enter
pop
test
roll
cmp
dec
subl
mov
xchg
pushf
push
sbbl
iret
and
mov
cltd
nop
ud1
pop
mov
push
jbe
xchg
loop
cs
insl
dec
add
and
jg
test
scas
mov
jle
in
mov
pop
fidivrs
xchg
push
push
fildl
add
jnp
adc
rcrb
int
jecxz
inc
mov
dec
mov
push
lea
movd
push
outsb
add
insb
paddq
add
les
pop
cmc
int
test
fs
xor
or
xchg
cmp
sub
and
xor
mov
fnstenv
lea
sbb
sbb
dec
in
and
mov
sbb
icebp
aam
pop
cwtl
aad
xchg
adc
repz
cmc
cwtl
cs
and
push
mov
mov
bound
cmp
dec
mov
inc
xchg
cmp
rcrb
test
cmp
xchg
sbb
cmp
mov
pop
xchg
and
gs
mov
popa
aad
mov
bound
xchg
jle
mov
sbb
ss
mov
xor
fidivs
dec
aam
mov
dec
xlat
insb
mov
cmpsl
lret
add
cld
cmp
pop
xchg
fstl
test
lock
fwait
insl
adc
mov
sub
das
fsubrp
mov
or
or
mov
mov
mov
call
fs
mov
ds
inc
or
add
xor
jbe
imul
mov
xchg
mov
push
jb
mov
jbe
std
mov
lret
xlat
repz
xchg
xor
xchg
test
fisttpll
xor
in
cs
jle
int3
jb
cmp
push
aam
or
xor
adcb
repz
xchg
testl
fcmovne
ret
or
pop
push
stos
enter
push
cmp
in
push
push
inc
test
sub
lock
dec
or
or
jb
or
pusha
jns
pop
ror
push
mov
mov
sbb
fnstcw
pop
mov
sbb
movsl
mov
cld
mov
xlat
ret
stos
ficomps
dec
push
jns
and
mov
iret
add
pop
jp
shlb
jnp
jbe
aam
movsl
shrb
inc
lcall
mov
sbb
inc
push
adc
fnstsw
or
xor
stos
or
cmp
gs
int3
sub
mov
cwtl
arpl
mov
pop
loope
lock
repnz
addr16
push
insl
push
sub
add
in
lret
cmp
inc
gs
and
sbb
adc
mov
sub
and
or
ss
rorl
pop
ds
idivb
mov
nop
or
rcrl
cmp
addr16
cwtl
jmp
mov
cmpb
jge
scas
mov
push
mov
mov
dec
sub
idivl
out
in
and
jnp
pusha
sti
arpl
aaa
add
lcall
mov
orl
mov
sbb
in
mov
repnz
or
push
xchg
mov
int
cli
add
push
xor
jg
jle
int3
jmp
dec
push
repnz
xchg
sub
push
xor
lods
push
dec
inc
fmuls
mov
icebp
jo
jae
std
fs
adc
gs
sub
ljmp
pop
pop
fimuls
lea
test
mov
mov
aas
cmpsb
lds
in
dec
mov
lret
sbb
pop
jg
sahf
mov
ret
mov
sub
stc
int
jnp
loopne
mov
pop
mov
loopne
add
hlt
cmp
adc
lahf
lods
inc
mov
pushf
mov
out
sahf
daa
jecxz
loope
fadds
inc
and
imul
mov
sub
outsl
popf
and
push
std
pop
adcb
adc
or
jne
and
sti
xchg
stc
or
imul
imul
int3
out
aam
sbb
dec
dec
add
sbb
mov
add
jp
imul
mov
scas
mov
insb
push
loopne
jmp
out
fwait
xlat
fimull
cs
sub
xor
xchg
orb
sub
pop
fldl2t
das
stc
jne
pop
scas
sub
jne
aad
cmpsl
sub
mov
push
repz
pop
mov
add
fildl
and
xor
push
pusha
cld
sbb
add
jo
test
fstps
lret
jbe
jle
inc
and
push
dec
push
sbb
jns
cltd
cmp
scas
mov
add
xchg
inc
xchg
aas
pusha
xor
out
lret
jle
inc
sbb
out
lods
sbb
out
jnp
adc
mov
and
mov
mov
movsb
xchg
das
and
inc
pop
pop
push
icebp
dec
and
cld
pop
add
sub
mov
mov
test
or
loope
and
cli
jbe
push
and
cmc
inc
ffree
mov
into
ret
mov
ret
lret
and
incl
mov
int3
rcl
roll
insl
xchg
inc
les
roll
aas
xchg
mov
ljmp
pushf
inc
call
pop
iret
movsl
or
iret
incl
out
push
dec
cmp
mov
cmp
jl
and
sbb
in
add
mov
sbb
roll
aam
mov
cwtl
xchg
and
int3
mov
div
inc
ljmp
xchg
xor
push
mov
lods
inc
movsb
cltd
icebp
rol
xor
mov
test
mov
fmulp
dec
push
xchg
outsl
ja
ret
testl
or
inc
aas
and
inc
daa
inc
ret
dec
outsl
hlt
repnz
or
jge
xchg
jnp
lds
adc
incl
shrb
imul
out
dec
or
in
insl
mov
lahf
push
mov
dec
add
aas
out
push
aas
ja
jno
xor
repnz
pop
stos
sbb
imul
arpl
addb
sbb
rcll
call
or
push
scas
cmp
adc
ss
testl
xchg
cld
add
jg
dec
rcr
mov
leave
sub
int3
lahf
icebp
shlb
es
popf
test
cmp
data16
gs
and
sti
movsl
push
mov
jns
xchg
push
mov
sub
dec
data16
in
dec
mov
mov
pusha
pushf
js
ds
push
loop
call
lods
mov
fmulp
lods
pop
je
push
bound
add
mov
loop
and
test
sub
xor
fldl
jns
dec
fstl
pop
jne
push
dec
xor
add
aam
xchg
pop
stos
mov
inc
in
inc
mov
outsb
push
jns
or
loopne
lds
pusha
paddusw
lcall
mov
cmp
insb
xchg
push
out
scas
jmp
test
fs
bound
jmp
mov
inc
dec
add
imul
sarl
cmp
jge
sbb
push
xor
cltd
inc
xor
or
imul
mov
fisubrs
and
gs
xor
mov
xchg
add
pop
lcall
pop
stc
xchg
mov
cltd
push
push
pop
cmp
arpl
iret
lods
faddl
fsub
stos
rcll
imul
lods
pusha
sarb
fmuls
jns
or
addb
sbb
and
and
aaa
xchg
scas
data16
gs
ds
xor
stos
sub
jle
pop
lods
out
cs
inc
mulb
mov
out
dec
and
jl
adc
cmpsl
cs
sbb
xchg
nop
sub
pop
mov
les
cmp
out
cld
mov
lcall
out
xchg
rorl
mov
loope
das
inc
xchg
inc
cmpsl
adc
sbb
in
dec
imull
xchg
adc
loopne
test
mov
and
mov
pextrw
pushf
push
loope
add
cmp
inc
mov
cltd
rcll
add
dec
repz
repz
outsb
xor
fwait
pop
jmp
adc
cmp
inc
xor
into
cmp
dec
inc
int3
push
outsb
or
sbb
add
cwtl
out
and
cmpsl
std
mov
roll
sahf
and
test
add
adc
popf
lods
add
fimuls
sti
lret
das
or
rolb
into
mov
shl
mov
mov
nop
jno
addr16
mov
push
mov
clc
aam
hlt
xor
addb
pop
pop
mov
imul
adc
in
pop
test
pop
and
and
mov
outsb
lock
and
fnstcw
or
pop
jae
out
fcmovnb
ret
mov
outsl
mov
xor
dec
andl
pop
push
add
out
lret
aam
pop
pushf
and
or
sahf
cmpsl
mov
insl
push
lea
pop
loopne
add
arpl
hlt
jno
int3
addr16
mov
sub
scas
aaa
cmpsb
lock
xchg
into
inc
daa
aaa
pop
cmp
insb
popf
push
movsl
or
xchg
jne
lock
jno
andb
cmp
sbb
mov
scas
and
stos
hlt
mov
push
or
pop
inc
jb
int
add
gs
cmc
jmp
pop
js
dec
cli
mov
pusha
mov
adc
mov
cs
sub
add
notl
sub
mov
mov
sub
inc
dec
fnstcw
ja
sub
xchg
jp
enter
jmp
inc
mov
jmp
sub
nop
insb
sti
loope
mov
dec
pop
or
aad
outsb
in
add
and
sub
push
xorl
icebp
fists
addr16
mov
iret
rol
call
stos
in
ja
aas
add
or
addr16
push
cmp
dec
fsts
mov
inc
out
lcall
mov
cld
fiaddl
outsl
adc
push
xor
cmp
mov
jnp
dec
fwait
pop
cmp
cmp
and
cmp
pushf
enter
cmp
test
adc
enter
hlt
in
xchg
xchg
mov
mov
fwait
sarl
and
pop
xor
cmpsl
mov
jmp
int3
dec
xchg
mov
jns
aam
and
lock
call
mov
pop
jns
xor
scas
loop
mov
lret
add
cmp
pop
jecxz
stc
imul
mov
out
bound
push
ds
adc
iret
cltd
dec
jle
fsin
lahf
mov
xor
jge
xchg
push
je
pop
cli
sbb
xchg
sub
sti
inc
das
pop
push
pop
mov
inc
xchg
push
in
aaa
inc
loopne
lods
pushf
or
jecxz
fisttpl
add
inc
mov
jmp
iret
in
fwait
les
int
fdivrl
cmp
or
aas
test
mov
shl
ret
lea
rcrl
fmuls
shlb
dec
cmp
and
cmpsb
in
pop
cvtpi2ps
ljmp
push
pop
push
outsb
mov
les
loop
push
add
mov
push
or
pop
push
fdivl
in
movsl
jp
mov
mov
and
stos
aaa
mov
mov
mov
cs
mov
adc
jge
cmp
or
dec
inc
clc
cwtl
adcb
fs
fdivr
mov
jg
sbb
or
inc
cld
inc
mov
loopne
js
push
call
mov
xor
push
mov
out
dec
xchg
mov
hlt
jbe
lods
popf
maskmovq
idivl
ss
stos
js
hlt
xlat
mov
aad
cwtl
pop
cmpsl
gs
jae
cltd
aam
gs
inc
lods
push
test
jb
xlat
pop
inc
xchg
lods
xor
add
pop
rcr
lret
gs
scas
int
sbb
mov
jae
enter
lods
leave
push
xchg
test
scas
mov
idiv
lret
lret
test
insb
dec
andl
test
out
imul
js
push
mov
dec
sbb
ljmp
sahf
outsl
dec
stos
pop
scas
stc
pop
pop
cmp
notb
fadds
fistps
jbe
es
js
push
lds
sub
into
push
jb
inc
divb
jnp
sbb
popa
shlb
xchg
test
or
push
cwtl
stos
inc
addr16
mov
jo
mov
lea
mov
sbb
idivl
mov
sti
xchg
xchg
lods
call
enter
aad
or
add
stc
push
mov
cmp
iret
mov
inc
cli
dec
adc
ss
out
fs
pushf
mov
dec
push
arpl
pop
icebp
pop
test
pusha
pop
or
adc
imul
bound
mov
jge
inc
stc
lret
sub
loope
loop
les
rcrl
mov
mov
xchg
cmp
test
fsubr
mov
cmc
and
aad
mov
popf
cli
and
repz
jle
call
hlt
and
cmp
push
bound
jge
icebp
push
outsb
adc
stc
xchg
movsl
mov
je
repnz
sbb
fst
xlat
out
adc
mov
stos
test
repz
or
pop
lcall
push
inc
pop
and
dec
out
rcl
xchg
lahf
and
orb
xchg
subl
xorl
in
sarl
popf
jns
fmulp
shll
subb
lock
push
adc
xchg
sub
push
leave
outsb
bnd
or
lea
sbb
lea
sub
xor
sbbl
test
push
aam
test
add
jno
and
hlt
scas
enter
rolb
cli
out
in
std
mov
cmp
inc
pop
adc
mov
idivl
jno
push
fistpl
andb
lods
std
cmp
pop
int3
adc
fsub
sub
xor
cli
push
cmp
jns
addr16
lcall
les
pop
push
clc
cmp
mov
xor
mov
dec
xchg
sti
stos
and
sbb
push
jle
push
stos
lret
mov
outsl
out
or
js
imul
jmp
lcall
xchg
mov
test
or
sub
lock
mov
sub
insl
sub
aas
stos
out
lcall
cmp
fs
ret
mov
daa
cs
sahf
sbb
sub
adc
mov
lahf
jae
or
rcll
lret
adc
insb
mov
sub
lret
mov
sbb
or
clc
enter
int3
or
mov
xchg
scas
dec
pop
out
mov
cmp
mov
mov
mov
add
cltd
iret
divb
mov
scas
into
add
sbb
pusha
mov
dec
repnz
adcb
pop
jb
lcall
jno
sarb
popf
xor
jge
inc
arpl
jmp
sbb
xchg
jmp
cld
repz
mov
cmp
add
pop
mov
mov
out
notb
sub
loopne
lods
imul
cmc
pop
pop
jg
sti
and
jmp
add
xchg
out
push
add
mov
jge
mov
add
xor
aas
aas
out
bnd
in
gs
cmpsl
adc
sbb
in
jne
mov
loope
sbb
push
lea
clc
enter
xchg
mov
and
rcl
fs
inc
lea
add
jae
out
fwait
and
cmpsb
test
movsl
jp
pop
or
push
je
sbb
inc
jmp
das
inc
fistpll
jle
sbb
push
mov
lret
ja
daa
cmpsl
cmp
lds
decb
mov
jae
inc
mov
daa
clc
ret
xchg
mov
push
pop
cwtl
loope
add
inc
daa
mov
mov
mov
pop
or
mov
and
push
lods
fnstsw
je
and
mov
stos
hlt
outsb
xchg
sub
adc
sub
into
xchg
lret
xchg
and
enter
xchg
mov
or
hlt
jnp
fildl
or
lret
movsb
mov
in
nop
mov
data16
aaa
js
dec
sub
ror
push
popa
int3
mov
aad
mov
dec
fisubl
xchg
mov
ficompl
loop
and
push
jg
push
enter
iret
fldl
js
adc
dec
popf
or
lcall
fistpll
cmp
mov
xchg
dec
mov
orl
mov
movsb
sub
orl
xor
mov
push
sub
into
repnz
sbb
push
cmp
mov
mov
jns
sbb
mov
ds
lcall
aad
icebp
fisttpl
sti
sbb
xchg
mov
aam
imul
data16
adc
aam
sub
mov
mov
iret
cmpsb
rcll
jl
jp
cmpl
dec
sbb
pop
pop
inc
sub
jg
sub
hlt
xchg
ja
movsl
xor
jge
xor
out
inc
cmp
leave
adc
vcvtsi2sdl
dec
mov
push
and
and
mov
jmp
mov
stos
xlat
cmp
add
or
add
xor
push
test
das
js
xchg
mov
cwtl
out
pop
fldt
mov
cmp
cmp
push
int
push
xchg
in
mov
cltd
push
cltd
cmp
sbb
sbb
ja
or
push
sbb
int
mov
xor
pop
mov
push
cmp
rclb
outsl
sbb
and
or
repnz
fiadds
inc
dec
xchg
dec
out
sub
and
mov
sahf
mov
shlb
cmc
mov
dec
push
decb
outsb
mov
int
insl
ljmp
sbb
jle,pt
sti
icebp
jno
andl
push
in
xchg
outsb
clc
add
push
fsubs
arpl
mov
gs
inc
and
inc
negb
in
mov
add
repnz
hlt
insb
add
outsb
lahf
shrb
dec
das
fcomp
xchg
push
out
dec
xchg
jl
xor
jae
aaa
mov
mov
dec
arpl
cmp
repz
in
adc
jp
mov
xor
sbb
jg
fidivl
stc
xor
or
orl
add
pop
inc
xchg
sti
pop
xor
mov
mov
adc
inc
lods
mov
ret
pop
jb
xchg
pop
mov
xchg
and
jg
dec
nop
arpl
js
pusha
or
pop
adc
filds
mov
cli
cli
orl
lret
shll
and
icebp
lock
adc
pop
loope
es
shrb
inc
xchg
mov
lcall
push
insl
maxps
cmp
mov
insb
push
insb
jmp
leave
push
clc
jecxz
in
xor
lods
loop
jne
pop
inc
and
or
cmpsl
sahf
je
shrl
out
out
fdiv
adc
sub
pop
cmc
in
push
push
in
mov
or
bound
shl
insl
jo
push
fwait
pop
jl
mov
imul
mov
jge
sarl
and
aas
add
xchg
mov
cltd
dec
pop
cmp
jb
inc
js
loopne
repz
loope
ja
sub
std
fwait
scas
movsb
mov
jp
das
and
jb
ds
nop
insb
fldenv
mov
cmpsl
gs
cmp
dec
pop
xchg
inc
stos
fcmovbe
or
push
cmpsl
in
pop
pop
mov
cmpsl
lcall
ja
xor
adc
cmp
test
dec
sbb
ret
cmp
jo
push
shlb
js
call
mov
scas
xchg
push
out
xor
ja
inc
setp
sub
test
lds
cmp
mov
mov
mov
nop
cmpsl
or
in
loopne
mov
cmpsl
sub
cs
pop
ja
in
stos
xchg
pop
mov
dec
pop
jns
mov
orl
sbb
mov
pop
inc
ss
pop
insb
mov
sub
loop
aas
xor
jg
sub
mov
mov
imul
mov
jecxz
mov
sub
mov
add
or
inc
mov
fcomi
lret
dec
cli
out
mov
lock
dec
mov
js
mov
les
insl
ja
ss
pop
shll
aam
or
insl
and
jp
inc
and
sub
dec
jp
cwtl
xchg
jno
daa
sti
cltd
cs
push
push
jns
pop
les
popf
movl
out
test
out
inc
fs
adc
pop
jl
or
fwait
les
pusha
inc
js
rorb
xchg
inc
add
dec
push
loopne
enter
lods
add
push
push
add
inc
es
adc
jp
fcomi
adc
xor
scas
pop
xchg
imul
aad
mov
int
lods
mov
pop
jbe
insb
push
sahf
int3
xor
mov
popf
mov
xlat
sti
jl
xchg
popa
mov
shrl
and
rcrl
clc
adcl
xor
dec
mov
mov
rcr
dec
test
sarb
sub
in
push
lret
sahf
adc
inc
es
and
inc
adc
icebp
stc
cmpsb
push
repz
xchg
push
push
push
enter
mov
cmpsl
lds
cmp
adc
adc
cmc
dec
les
js
xchg
or
push
jg
into
inc
fs
rcll
pop
inc
mov
pop
out
rcll
addr16
test
int
nop
sti
push
shll
jb
mov
or
loop
dec
pop
mov
out
and
sub
movsl
push
out
pop
outsl
xchg
push
pop
dec
mov
sahf
mov
in
dec
xchg
push
cltd
out
mull
cmc
mov
xchg
sbbb
clc
jno
incb
cltd
imul
jp
or
es
mov
mov
or
adc
enter
lods
mov
cmp
xchg
cmpsl
cmpsl
inc
adc
push
ret
push
inc
push
test
aam
mov
add
add
mov
aad
push
and
clc
add
ret
jl
jne
cmpsb
pop
daa
outsl
cld
sahf
push
cmp
scas
iret
mov
sbb
cli
movsb
dec
hlt
inc
pop
push
adc
mov
mov
outsb
enter
pop
lods
dec
in
xchg
fnstenv
dec
and
push
jecxz
mov
add
cld
or
shll
xlat
hlt
call
mov
es
and
mov
lret
lcall
mov
cmpsb
aaa
push
dec
in
out
dec
fsubrl
hlt
and
insb
pop
loop
adc
bound
fadds
rcrl
cmp
movsb
sbb
insl
in
leave
imul
or
enter
and
lods
call
fidivrs
cli
dec
std
push
mov
cmp
inc
pop
add
cmp
adc
dec
xchg
pop
imul
sar
mov
sbb
lods
into
repz
imul
addr16
insl
lods
mov
mov
sub
sub
push
lds
cmp
shrb
movsl
cmp
xchg
test
sub
pop
pop
cmp
fdivl
cmp
lret
inc
xorb
sub
adc
sarl
adc
ficomps
jbe
sbb
add
sbbb
std
and
pop
dec
imul
and
in
cmovb
cld
mov
roll
push
cli
leave
pop
jge
mov
pop
aad
sub
sbb
push
push
jno
ds
pop
mov
lea
gs
ss
pop
movsl
aaa
sahf
cs
shl
outsl
pop
xchg
test
xor
sub
pop
enter
jmp
adc
add
inc
dec
iret
in
clc
ficompl
and
xorb
loope
insl
test
loopne
aaa
mov
or
pop
in
sarl
push
hlt
jecxz
xor
and
xlat
mov
pop
mov
repz
pushf
pop
sbb
ja
mov
pusha
cmpsb
jmp
jae
xchg
loope
loope
test
nop
sbb
fdivl
dec
xlat
popf
jns
sub
aad
ret
mov
cmp
jns
ja
fcoml
inc
ret
enter
add
and
rcll
pop
xchg
imulb
outsl
jo
add
mov
jmp
and
cmp
inc
das
fmull
divb
aam
push
mov
fdiv
daa
fldcw
jo
mov
and
testb
cs
mov
xor
cmpl
push
enter
push
cmc
jne
test
call
addr16
xchg
iret
daa
add
cmp
imul
movsl
das
xchg
mov
js
hlt
rcrl
mov
and
jecxz
add
ds
xchg
out
cmp
and
aaa
xor
loop
mov
movsb
push
jl
das
cmpsl
pop
in
sub
sub
icebp
ljmp
or
outsb
inc
shrl
int
cmpl
push
mov
sbb
or
or
rorl
bound
xor
inc
cmp
pusha
fwait
cmp
lea
or
xchg
ret
ret
sub
mov
or
in
enter
jae
jle
stc
rcrl
loop
leave
fstpt
xor
dec
or
imul
mov
stos
pop
sarl
test
fidivs
and
adc
imul
sti
and
mov
cmp
je
je
inc
ret
out
and
inc
int3
icebp
cwtl
ds
aam
addr16
in
lcall
mov
aas
movsb
cld
dec
lock
jg
subl
ja
out
fadds
addr16
jo
mov
subl
xor
jmp
jmp
inc
jmp
dec
rcll
xor
cmpsb
jp
bound
mov
and
or
or
xchg
pop
sbb
mov
mov
je
in
roll
shll
cmp
and
xchg
lcall
adc
sbbl
xchg
pop
arpl
jmp
push
adc
int
js
jns
outsl
ret
loop
mov
pop
lods
icebp
mov
and
mov
hlt
les
or
xor
ds
int3
and
inc
movl
shlb
fsubr
jno
mov
addb
pop
mov
push
loop
sub
adc
lret
xchg
ds
push
and
test
dec
pop
push
jb
sbb
in
cmp
adc
push
mov
inc
xlat
das
push
std
fnsave
sub
push
xor
sbb
mov
mov
int
mov
xchg
leave
mov
shl
push
mov
inc
inc
jge
shrb
mov
shrl
mov
mov
fidivrl
mov
pop
data16
popa
scas
mov
mov
in
xor
dec
mov
fstps
loope
xlat
int
loopne
adc
ret
push
jp
repnz
add
int3
add
sbb
add
cmpsl
xor
mov
mov
jge
scas
iret
jle
outsb
cs
imul
cmpl
fcoms
pop
inc
sub
cmp
data16
jns
daa
bound
or
mov
lret
shrl
xorl
jb,pt
pop
cli
idivl
pop
fs
es
lcall
aaa
pop
mov
mov
aas
add
shr
cmp
mov
cmc
mov
cmpl
outsb
stc
iret
lock
imul
test
sub
xor
xchg
mov
jb
jl
mov
test
xor
adc
jns
mov
mov
fstl
mov
js
daa
mov
movsb
jp
cmpsl
in
cmc
jne
rcrl
jecxz
xor
mov
loope
mov
jmp
shrb
inc
ljmp
or
fnstsw
adc
jl
adc
roll
xor
mov
ja
iret
aaa
lea
xchg
mov
and
gs
xor
xchg
leave
cmp
sbb
sub
jmp
or
sbb
hlt
jg
ss
scas
nop
out
push
cmpsb
push
mov
cli
cmp
add
adc
adc
xor
fsub
loopne
jmp
xor
test
adc
sti
aaa
or
movl
data16
movsl
pop
jae
loop
or
cmp
add
lahf
jl
push
mov
out
xor
push
mov
jae
push
inc
add
rcr
xor
fs
aas
add
jnp
xchg
lahf
add
data16
pusha
xor
adc
ror
int3
decb
and
push
test
seta
cld
add
mov
or
shll
xchg
pop
out
or
mov
imul
std
or
mov
add
or
jnp
xor
cmp
icebp
lock
movsb
fadds
mov
sbb
movsl
scas
fldl
mov
repz
xchg
sti
cmp
addr16
push
inc
mov
out
js
inc
push
and
test
pop
mov
cmc
or
cmpsb
or
imul
sbb
lahf
stos
jl
push
mov
add
fs
inc
xor
jb
out
cs
daa
test
mov
add
mov
xor
xor
jae
xor
ret
adc
xor
xchg
inc
std
or
inc
loopne
push
mov
ret
and
je
aad
inc
mov
stc
test
dec
dec
add
add
out
mov
pop
sbb
inc
loopne
lods
test
das
pop
push
sbb
pop
pusha
lahf
xchg
add
ljmp
das
xchg
mov
adc
pop
cmc
les
or
sti
inc
cmc
pop
jge
js
popf
and
out
xchg
imul
outsl
mov
add
loopne
adc
arpl
popa
mov
xor
mov
sub
jge
jnp
sub
mov
inc
add
je
mov
push
dec
int3
sub
push
cmp
int3
or
loop
pop
lret
push
fwait
rcll
xor
nop
test
mov
jmp
cmp
mov
les
push
scas
push
jno
pop
ror
mov
rcrl
daa
cli
mov
aas
stos
out
inc
jge
shr
mov
fs
gs
push
daa
xorb
clc
out
sbb
cmp
xor
insb
pop
loop
xor
sbbl
pop
pop
daa
pop
lret
sbb
cmp
dec
push
popf
pop
push
pop
push
movsb
inc
mov
adc
add
sbb
clc
pop
cmc
pop
pop
fidivs
add
imul
aam
out
cmc
cwtl
pop
pop
mov
ficoml
in
or
shrb
fdivl
test
cmp
inc
add
ss
test
jno
loop
das
test
loopne
xchg
pop
jae
cmp
stos
xor
inc
mov
adc
mov
mov
dec
cmp
xchg
jmp
outsl
push
aaa
and
sbb
je
insb
cli
mov
jl
xor
adc
dec
clc
roll
mov
add
push
push
aas
cltd
xorl
add
into
lock
xor
mov
sub
ss
popf
arpl
mov
xchg
and
out
mov
sti
leave
sahf
inc
in
test
pusha
adc
dec
or
mov
test
or
outsl
jle,pt
mov
push
add
or
in
pop
out
leave
repnz
loopne
lock
loop
mov
cmp
xchg
subl
cld
mulb
enter
in
xor
cmc
cltd
adc
cmp
incb
push
shll
sahf
stc
add
jb
arpl
in
js
es
enter
jae
xchg
add
test
or
and
je
xlat
pop
sbb
xchg
push
and
xor
sbb
inc
iret
xor
bound
xchg
push
adc
cli
pop
cmpsb
mov
rcrb
adcb
or
add
jecxz
xor
shlb
aam
jl
inc
js
sbb
mov
pop
jl
test
xor
arpl
leave
cmpsl
test
and
pusha
mov
in
jle
jge
out
lcall
dec
cmp
lock
dec
jo
push
ret
jb
mov
fists
push
xchg
in
pop
push
call
aaa
inc
cld
scas
mov
jecxz
push
js
cmp
dec
in
lret
or
mov
jge
xchg
popa
rcrl
sub
fidivrl
and
mov
mov
pushf
pop
nop
or
mov
rcl
and
dec
nop
push
inc
ror
hlt
pop
cmp
std
mov
inc
ficompl
adc
lds
or
cli
enter
push
mov
aam
shll
test
mov
xor
mov
push
daa
shrl
bound
adc
mov
or
into
jp
push
test
test
hlt
sub
jnp
arpl
xor
cmp
dec
dec
xor
test
insl
pop
adc
sbb
sub
addl
mov
mov
in
jecxz
push
mov
idiv
clc
mov
pop
mov
xchg
scas
or
pop
dec
jg
inc
cmpsb
sub
push
out
not
push
into
add
push
ficoml
adc
jecxz
add
lds
mov
mov
fwait
add
in
push
push
daa
and
lock
add
pop
or
xor
and
xchg
mov
xchg
push
roll
pop
jns
and
lret
dec
pop
sti
pusha
pop
add
std
push
fwait
mov
sbb
shr
loopne
pop
push
fdivrs
sub
pushl
or
xlat
cmp
pusha
jg
dec
stc
jmp
adc
xchg
dec
rorb
cmp
mov
cld
jno
pop
mov
mov
or
sbb
arpl
popl
xchg
repz
imull
popa
sbb
add
dec
ds
adc
jecxz
in
sbb
int3
out
insl
xor
mov
mov
out
cltd
lret
mov
js
sbb
push
fistps
xchg
std
insb
lea
iret
sub
mov
mov
sbb
push
int
push
sub
out
iret
lea
xchg
dec
adc
popa
imul
dec
xchg
scas
arpl
adc
push
test
sub
push
add
popa
mov
sbb
jmp
adc
jg
cmp
xor
addr16
fnsave
leave
mov
mov
cs
jmp
add
gs
fadd
enter
call
mov
fdivr
fstpt
mov
fcmovnbe
xor
std
int3
xchg
sbb
rcll
mov
inc
mov
xchg
ja
fcoms
adc
sahf
cmp
sub
pop
add
sti
test
adc
push
push
lret
stc
push
test
dec
jmp
ds
rep
cmpsb
dec
fldcw
loop
pop
fmuls
jbe
adc
or
cltd
int3
scas
jg
mov
scas
imul
into
pop
and
adc
cmc
gs
push
cmp
mov
dec
sbb
cmpb
jnp
fcoml
xor
call
lock
lods
mov
stos
and
mov
mov
mov
xchg
into
xchg
push
jbe
mov
inc
inc
pop
outsl
xchg
and
push
sub
nop
mov
stos
cli
pop
push
jg
inc
ficoml
call
jecxz
aad
pushf
cmc
dec
cmpsb
rcl
adc
vaddss
cmp
mov
mov
repnz
mov
dec
inc
dec
mov
jne
or
in
in
push
and
pop
add
lret
dec
adc
push
addb
sub
fwait
xor
mov
mov
out
stc
mov
mov
nop
jp
stos
add
sub
push
push
addr16
fsubr
lea
leave
sbb
das
ljmp
clc
arpl
xchg
or
and
sbb
cli
shrb
jbe
jb
ret
push
es
sahf
inc
sarl
stos
pop
insb
adc
push
adc
and
jne
pushf
jle
je
sarl
and
inc
sub
xchg
data16
xor
jl
mov
cmp
jecxz
iret
push
or
pop
scas
fisubl
jp
or
cltd
or
xor
push
in
cmp
jge
dec
je
adc
in
xor
lea
pop
cmovg
mov
sub
jle
iret
fidivrl
pop
sbb
inc
test
adc
insl
sub
aad
aaa
add
les
int3
sbbb
rcrl
or
mov
repnz
mov
xor
int3
rcll
mov
fistpll
pop
fadd
xor
shlb
push
loope
stos
xor
sub
aas
aaa
mov
sub
adc
jmp
pop
pusha
jb
push
mov
add
rcrb
popa
adc
jmp
cltd
movsl
fidivrs
sbb
push
insb
cmp
andl
sbbl
cmpsl
mov
xchg
pushl
jne
inc
sti
outsb
fmull
xor
and
ss
xchg
test
test
int
repnz
and
dec
mov
ds
or
sti
aaa
cmp
in
shrb
cmp
adc
xor
mov
popf
mov
jg
ss
in
ljmp
dec
sarb
sbb
imul
inc
xchg
sbb
inc
sti
jb
lcall
aad
pop
mov
scas
pop
or
jle
xchg
pop
or
pop
mov
mov
sbb
ja
push
hlt
out
xor
cwtl
movsb
jmp
lahf
xor
mov
xlat
in
faddl
dec
repnz
adc
test
pop
pushf
pop
dec
addb
jle
ljmp
inc
inc
enter
xor
dec
insl
rcrl
sbb
add
mov
sti
add
popa
out
mov
pusha
mov
adc
mov
das
test
scas
push
inc
mov
pop
dec
and
mov
fadd
pop
imul
mov
loope
xchg
xchg
cwtl
pop
js
mov
push
and
ljmp
fwait
in
xlat
sbb
xor
lods
dec
das
dec
sarb
mov
aas
pusha
jge
pop
xchg
ret
movq
and
in
lods
ss
movsl
test
xchg
cmp
leave
xor
hlt
mov
and
in
jp
lods
cmc
push
adc
in
sahf
std
mov
jecxz
cmp
xchg
loop
jae
jns
or
int
fcmovnbe
or
dec
repnz
cld
in
cmp
out
sti
mov
loope
push
mov
iret
sbb
jns
addr16
imul
mov
jo
or
int
lret
insl
pop
stos
add
push
ffree
lods
xchg
mov
mov
dec
icebp
adc
andb
dec
jp
add
in
and
dec
ret
shlb
push
push
repz
fldcw
fsubl
jb
adcl
lahf
in
inc
call
xchg
out
into
add
movsl
dec
bound
loopne
mov
mov
adc
sub
dec
sbb
jmp
jbe
sbb
clc
push
enter
setp
pop
sbb
int
pushf
mov
push
inc
mov
push
jle
gs
sbb
dec
sub
gs
outsb
repnz
out
inc
mov
inc
adc
ss
push
les
cmpb
lret
roll
pop
cmpb
test
leave
arpl
mov
xchg
rclb
ret
mov
cmpb
insl
adc
sub
popf
dec
jp
mov
add
andl
jl
js
cli
pop
mov
cld
or
daa
xor
fisubrl
pop
push
outsl
pusha
fwait
sti
mov
push
dec
lcall
sbb
push
push
aaa
fwait
nop
push
xor
out
cmp
lods
fiaddl
das
mov
mov
data16
outsl
insl
pop
repz
iret
adc
inc
xlat
popf
decb
loop
in
sbb
mov
mov
test
jmp
or
or
inc
out
or
scas
pop
jb
mov
mov
lahf
sahf
push
ss
into
int3
es
dec
add
dec
dec
loopne
ljmp
cmc
mov
cmp
aam
dec
and
lea
lret
add
sub
xchg
sbb
rcrb
das
mov
mov
push
mov
or
sbb
add
mov
aam
mov
icebp
sbb
mov
outsl
sti
cmp
sti
mov
fwait
push
inc
je
imul
cmpsl
cld
orl
cmp
imul
rcll
int
mov
push
push
rorl
xchg
mov
in
cmpsl
lods
inc
mov
jg
fs
jge
add
xchg
gs
call
jae
xlat
jo
mov
jmp
popa
or
in
cmp
inc
inc
sub
and
push
adc
push
jecxz
xchg
cmp
stos
cmp
push
cmpsb
mov
push
insb
js
mov
dec
imul
xchg
adc
cs
das
mov
or
pop
mov
and
sbb
or
out
dec
lock
out
dec
pop
data16
sub
mov
jg
sub
jnp
lret
pop
and
cmpsb
cmp
test
inc
stc
cwtl
push
loope
dec
jae
mov
mov
fcoms
pop
je
aas
dec
call
popa
cmp
xchg
pop
mov
je
adc
das
sbb
loop
int3
mov
shll
test
mov
pop
hlt
xor
mov
mov
iret
mov
leave
add
loope
cmpsb
adc
inc
cmp
or
popa
cmp
outsb
lcall
std
sub
aas
int
xor
test
mov
jb
loope
pop
push
jnp
xchg
adc
andl
testl
sbb
adc
sbb
sub
fisubl
xor
jmp
or
aas
mov
fwait
cld
fdivr
rorl
pop
and
ss
inc
mov
pop
aas
add
mov
cmp
outsl
popf
loopne
inc
mov
lret
lret
inc
addr16
cli
push
xchg
mov
add
popa
push
dec
xlat
mov
xorb
in
cmpsb
rorb
popf
jmp
or
sarl
xchg
xchg
xchg
repnz
mov
or
fcmovbe
pop
imul
sub
push
mov
xchg
out
mov
sbb
fstps
push
nop
push
mov
pop
lret
inc
je
jp
mov
into
pop
stos
cmp
repz
stc
into
movsb
mov
add
lahf
fsubl
clc
jae
int
inc
test
loope
xchg
test
pop
and
pusha
lret
or
cmp
nop
adc
xchg
adc
cmc
pop
sbb
addr16
mov
int3
mov
xchg
shll
stc
fldcw
inc
cmc
jecxz
xchg
push
sbb
sar
mov
cmp
add
nop
pop
pop
cmpb
jl
pop
or
inc
fnstsw
sub
jbe
rcll
jecxz
and
and
inc
fs
pop
mov
mov
rol
ss
mov
lods
test
fcomps
cwtl
pop
jae
xchg
jno
xor
or
add
mov
in
in
pop
in
sub
jns
jb
sbb
loope
mov
pop
adc
sub
outsl
xchg
mov
sbb
jle
push
in
andb
or
xchg
dec
dec
or
cwtl
mov
and
pushf
imul
in
sub
mov
in
pop
fldcw
mov
inc
mov
out
mov
mov
call
cmc
jb
xor
clc
sahf
mov
or
mov
adc
sbb
addb
insb
cmpsb
ret
test
clc
mov
add
pop
mov
call
addr16
stc
ret
pusha
mov
enter
ficompl
cmc
inc
or
add
push
daa
xchg
std
nop
lahf
pop
sub
jns
stos
cmp
movsb
lret
pushf
jg
xchg
pop
lods
or
stos
push
inc
adc
arpl
push
sahf
ja
rolb
lcall
lahf
mov
dec
sti
cld
cmp
push
xor
pop
movsb
std
xchg
push
add
sub
xchg
pop
pop
jmp
data16
or
dec
nop
out
push
pop
push
jp
notl
xor
and
push
repz
movsl
mov
add
stos
std
lock
int3
and
pop
sti
out
cmp
orb
mul
push
movsl
pop
mov
je
out
gs
jnp
ss
mov
sub
int
pop
push
mov
popf
decb
mov
cmpsb
pop
push
push
leave
mov
cli
dec
dec
sbbl
shlb
or
adc
xor
mov
push
adc
mov
adc
test
nop
or
cmp
inc
sbbb
jae
sbb
jae
fidivl
jbe
idivl
sbb
repz
mov
dec
xchg
fs
outsl
xchg
cmp
cmp
mov
insb
mov
into
mov
mov
cmovne
sbb
es
inc
add
jae
pop
sbb
inc
and
pop
popa
sarb
xor
mov
dec
xor
into
shlb
add
outsb
cmpsl
es
cli
aaa
or
arpl
mov
dec
data16
stos
cmp
mov
push
push
push
ds
inc
cmp
call
test
push
popa
xchg
pushf
out
stos
pop
adc
nop
inc
pcmpeqd
rcl
sahf
jae
mov
std
mov
out
lods
ds
scas
call
int
mov
jae
testl
pop
fcomps
lcall
sbb
inc
pop
mov
jp
jecxz
ds
jle
mov
fsts
dec
cmp
xchg
sahf
mov
out
push
ljmp
mov
repz
out
push
pop
lock
adc
xchg
push
adc
push
jg
sarl
xchg
jg
pop
arpl
bound
and
push
addl
xchg
mov
cmpsl
popf
cmc
cmpsb
add
mov
fs
lea
push
jnp
adc
arpl
mov
loope
pop
int
leave
mov
jno
mov
lret
je
js
imul
sub
hlt
jbe
hlt
gs
push
mov
jae
addr16
xchg
mov
clc
lds
hlt
mov
stos
loop
gs
mov
dec
add
scas
adc
in
jb
rorl
lods
jbe
add
arpl
mov
into
xchg
jge
jg
cmpb
jnp
mov
sub
in
fcoml
aas
inc
mov
jle
sti
push
mov
inc
fwait
jnp
lock
mov
outsb
rcl
adc
inc
loope
cmp
iret
stc
movsb
pop
das
pop
jno
lcall
stos
and
fisubl
stos
stos
or
fs
dec
mov
pop
dec
jmp
arpl
enter
das
mov
arpl
aad
test
jb
loop
xor
ds
out
addr16
push
inc
mov
push
cwtl
inc
fcompl
jns
outsl
dec
loop
or
mov
adc
push
pop
xlat
mov
popf
pop
push
mov
xchg
push
push
and
jmp
out
lahf
xchg
or
mov
cmp
adcl
jae
cwtl
js
lret
sbb
fisttps
pop
test
aaa
out
pushf
sbb
xchg
pop
cmp
and
xor
lret
push
sub
mov
xor
xor
jb
lods
je
inc
lock
testb
iret
mov
xor
scas
mov
mov
or
adcb
push
mov
inc
gs
ss
adc
sbb
jbe
push
and
mov
lods
test
les
cs
test
xlat
das
xor
xor
arpl
mov
xchg
fnsave
sbb
or
sub
cmpsb
dec
ret
loop
divb
push
sub
dec
dec
jge
les
lods
push
adc
sahf
mov
test
push
shll
cli
xchg
xor
pop
pop
push
mov
xchg
ret
sub
inc
gs
jl
and
mov
sbb
xlat
fnstcw
shll
xchg
mov
out
out
sbb
pop
cmp
repnz
pushf
sbb
pusha
insb
sahf
add
mov
outsl
roll
insb
testb
xor
cmp
loope
jle
in
adc
dec
nop
daa
movsl
aam
xchg
cwtl
clc
pop
addps
aaa
sbbl
call
dec
ja
shrl
sub
mov
pop
push
hlt
cmp
test
rol
cmpsb
jno
inc
jmp
and
push
imul
fisubrl
jp
fistps
and
iret
or
mov
loope
mov
xor
lahf
out
sbbb
jl
cmp
dec
pop
pusha
sbb
jmp
push
std
lock
in
xchg
push
xchg
inc
sbb
aas
ja
repnz
dec
xchg
das
lahf
adc
mov
call
in
push
jle
mov
int
xor
mov
repz
pop
pop
sub
popf
mov
orb
cld
les
sub
cs
jae
dec
fisubrl
pop
and
lods
add
les
adc
add
adc
sbb
loop
cs
addr16
scas
movb
and
ret
cmp
addb
mov
repz
dec
add
fisttpll
jl
je
fs
aad
aad
icebp
jbe
xchg
ds
sbb
dec
stos
pop
xor
or
xchg
adc
xor
insl
sbb
pop
enter
daa
inc
adc
iret
inc
xchg
iret
mov
stos
test
in
iret
fld
adc
loopne
add
xchg
lods
dec
and
xor
mov
je
dec
cmpsl
or
mov
cld
sub
push
faddl
cmp
push
outsb
adc
inc
fldpi
out
or
and
xchg
xor
xlat
out
jb
nop
adc
sub
jle
ficompl
aad
push
mov
pop
repnz
inc
xchg
inc
pusha
dec
push
clc
in
js
stc
sti
ret
into
dec
fwait
dec
push
mov
shlb
and
pop
icebp
xchg
xor
lret
dec
sub
inc
jno
cmp
pop
dec
loopne
xor
test
pop
mov
sbb
aad
lods
cli
sub
xchg
sti
ja
je
pushfw
push
pushf
mov
pop
fadds
sub
mov
or
push
xchg
add
cmp
sbb
test
je
iret
push
cmc
adc
lods
mov
jp
mov
frstor
jnp
ret
adc
lcall
mov
std
mov
sahf
push
sbb
or
sti
dec
pop
mov
mov
out
add
dec
jecxz
mov
and
fstpt
mulb
test
fidivl
jae
pusha
fstp
test
xchg
enter
cs
ljmp
lret
push
jle
adc
in
dec
jge
sbb
repz
sahf
arpl
pop
sbb
inc
arpl
xor
mov
movsl
addr16
and
sahf
or
icebp
fcompl
push
lret
mov
insl
test
sub
and
mov
lcall
xlat
pop
push
pop
bound
ljmp
xchg
adc
push
rorl
in
pusha
sbb
xchg
xchg
fnstenv
shrl
inc
repz
pop
fisubrl
push
push
lret
fcmove
leave
inc
cli
pop
jmp
mov
leave
in
jp
mov
scas
scas
jle
cmc
icebp
sti
dec
jle
js
in
cmp
cmpsb
lret
inc
add
nop
sub
loope
jne
mov
xchg
loopne
xchg
adc
decb
ss
and
into
lds
xor
aad
scas
inc
sub
mov
mov
sbb
paddsb
int3
fmul
in
pop
rol
pop
jmp
jae
sbb
lods
sbb
pop
lahf
inc
cmp
sbbl
fscale
mov
outsb
xor
cmp
into
mov
push
push
roll
ret
imul
out
or
je
in
je
and
das
adc
dec
lea
test
das
cmp
popf
jg
dec
mov
out
fildll
cmp
and
pushf
cmp
js
mov
sub
xor
int3
mov
and
mov
icebp
and
mov
aad
sti
lahf
xchg
insb
jae
ss
jp
jle
and
popf
adc
out
pop
gs
out
rolb
or
dec
xchg
push
mov
adc
xor
inc
shrl
jl
mov
cmp
inc
outsl
or
aaa
sysenter
add
jecxz
mov
jb
ljmp
test
xchg
adc
sbb
mov
pushf
jbe
movsb
jle
and
mov
adc
sahf
add
stos
popf
decb
jo
inc
sbb
test
lret
cmpl
and
stc
sub
xchg
pop
mov
mov
call
frstor
inc
jno
pop
push
pop
dec
cmpsb
fs
or
sub
negl
cmp
pop
inc
in
sbb
xor
ret
cwtl
and
mov
push
jmp
rclb
mov
inc
mov
push
je
cmp
rorb
cld
imul
and
idivb
das
inc
dec
shlb
jbe
scas
mov
shll
xchg
pop
int
sti
mov
fwait
jl,pt
pop
lods
aam
mov
cld
shll
lds
pop
cmp
push
jle
jne
pop
pusha
push
enter
scas
sti
inc
repnz
xchg
mov
xchg
push
nop
push
in
cmp
sbb
xor
scas
mov
fisttpll
jmp
xchg
sbb
mov
ds
mov
mov
sbb
jae
enter
xchg
lods
jo
mov
and
in
pop
insl
popa
out
or
adc
in
call
xor
sbb
xor
scas
loop
lods
pop
imulb
mov
jb
dec
mov
test
nop
int3
jne
repnz
pop
call
pop
je
xchg
xchg
adc
sub
mov
call
inc
out
aaa
lods
aas
xchg
subb
inc
enter
sbb
xlat
insb
cwtl
sbbb
idivb
enter
mov
pop
mov
add
shrl
stos
xchg
out
adc
lods
mov
xor
mov
insl
shr
idivb
xchg
inc
xchg
or
jne
cmp
jne
pop
pop
inc
stc
ja
cmc
adcb
daa
and
fmull
mov
in
push
sbb
xor
adc
std
shll
mov
add
std
xchg
inc
xrelease
inc
mov
push
aaa
insb
mov
sub
aas
fcoms
mov
mov
test
shlb
scas
gs
lds
andl
test
popf
sbb
xor
out
in
pop
sub
sub
pop
xchg
fwait
iret
ficompl
out
or
mov
int3
sub
xor
sbb
mov
sub
jnp
adc
pushw
dec
nop
fmuls
loopne
inc
adc
jo
pop
enter
push
sti
jns
sarl
push
int
fucomp
lret
inc
scas
mov
and
cmpsl
aaa
je
mov
push
xor
add
add
dec
pop
pop
mov
xchg
imul
loopne
test
jle
lret
or
or
mov
jnp
cmp
xor
loopne
decl
lock
lds
pop
add
outsl
divl
sarb
xchg
test
popf
andl
rorb
out
mov
addr16
jbe
sbb
scas
jp
insb
mov
sbb
pop
into
push
mov
dec
xor
shlb
mov
cmp
mov
sub
push
xor
cmpsb
adc
test
test
outsb
popf
aam
nop
stos
add
jne
out
add
push
lock
lret
push
jp
test
call
and
pop
dec
fistl
repnz
shlb
xchg
inc
ja
loopne
and
mov
adc
shlb
dec
mov
push
adc
jmp
inc
xchg
or
dec
js
repnz
mov
cmp
jp
fnstcw
mov
cld
sub
mov
sub
cmp
and
sub
pop
int
pusha
pop
push
imul
push
shll
repz
mov
int
xchg
add
mov
inc
jns
cmp
and
or
sbb
mov
shl
mov
loopne
mov
jnp
out
adc
out
jb
repnz
ds
dec
lahf
push
fwait
jns
enter
stos
mov
cmp
ja
in
ljmp
test
jmp
mov
adc
mov
fistpll
gs
or
int
iret
inc
xor
adc
rcll
dec
gs
pop
mov
mov
pop
fstl
mov
cmp
lahf
dec
out
icebp
fcoml
fnstenv
lock
jg
mov
lock
mov
pop
stc
add
into
repnz
dec
insb
ss
cmp
mov
inc
inc
sub
rcrl
or
gs
sbb
retw
lds
lret
sbb
adc
mov
mov
fisttpl
xor
shll
or
mov
push
outsl
mulb
pop
xor
cmp
sub
fstpt
dec
inc
je
jle
pop
outsb
or
je
or
cmpsb
rorb
int3
inc
jne
or
push
andb
xor
bound
push
call
xor
insl
and
dec
xchg
cs
push
shlb
mov
lods
test
mov
push
jnp
sub
and
ss
cmpsl
jo
inc
jne
lods
add
jge
sub
loopnew
sti
jns
clc
in
jg
pop
gs
xor
aas
push
pop
jbe
xchg
sbb
aaa
icebp
cs
in
aad
mov
mov
out
push
xchg
outsb
jno
enter
outsl
add
push
scas
fcmovne
push
pop
outsl
xor
pusha
cmp
dec
out
stos
add
repz
xor
jp
xlat
add
dec
push
inc
pop
fdivs
push
nop
je
add
add
pop
cmp
stos
sub
push
sbb
jno
int
push
adc
inc
add
mov
daa
inc
inc
pop
jb
mov
in
jb
adc
pop
movsl
jo
lods
stos
mov
xor
hlt
in
scas
ljmp
and
das
pop
test
leave
das
xor
enter
sub
lret
mov
push
pop
addl
out
push
ficoml
jmp
rorb
lret
fsubrs
outsl
pop
roll
idivb
sub
mov
test
mov
mov
shl
inc
jo
pop
add
inc
es
and
jns
cld
lock
cmp
jge
and
sub
pop
pop
mov
pop
add
imul
repnz
gs
sub
jno
xchg
fstpt
mov
xchg
fsubl
test
out
dec
cmp
jo
ret
ja
je
cmp
outsb
mov
fwait
test
mov
push
sahf
sbb
dec
ffreep
popf
cmp
cmp
stos
dec
stos
adc
add
mov
pop
rcll
sub
push
mov
aam
mov
xchg
cmp
daa
jo
std
stos
mov
pop
cld
mov
pop
mov
mov
in
or
iret
mov
fstl
popa
insl
xorb
ja
lods
mov
jle
push
pop
xchg
jl
xchg
dec
cmp
dec
cs
mov
jp
popf
push
xchg
adc
scas
or
in
dec
test
cmpsl
pop
lods
push
cwtl
scas
inc
rolb
xchg
sub
push
cmp
and
lret
fucomip
sub
jmp
sbb
mov
mov
pop
xor
repnz
ljmp
add
sub
jge
pusha
mov
push
in
dec
mov
pushf
pop
jl
jge
fwait
bound
cmp
nop
insb
add
mov
and
out
pop
sbb
dec
repz
hlt
and
jmp
mov
sbb
xchg
aaa
dec
test
ret
sub
or
xchg
loope
mov
mov
xlat
sub
notb
inc
lret
mov
in
ror
jmp
nop
dec
sbb
ss
mov
pop
in
inc
xor
das
pop
dec
adc
fstps
xor
adc
jb
movsl
sahf
es
sub
or
sub
xchg
mov
shlb
jle
aas
push
mov
in
inc
mov
jbe
adc
mov
jne
gs
fidivl
push
andb
jne
not
scas
mov
test
movsl
inc
subb
push
push
pop
xchg
aam
sarl
cmp
add
xchg
mov
andb
loop
add
lahf
push
pcmpeqw
pusha
in
das
loopne
negb
mov
les
xor
mov
in
sub
insb
shr
sub
enter
and
add
xor
mov
lcall
dec
mov
cmp
sub
arpl
lds
add
pop
cmp
push
out
xor
mov
loop
pop
xchg
jne
repz
xchg
xor
rcll
push
out
in
sti
jge
fwait
push
push
sahf
push
leave
lods
xchg
insb
pop
cmpsl
loopne
mov
push
jo
mov
pusha
movsl
cltd
jnp
or
jl
push
xchg
adc
add
sahf
xchg
inc
add
dec
mov
popa
adc
in
push
dec
and
jle
pop
jmp
je
cld
mov
pop
xchg
jne
cwtl
mov
and
std
ljmp
cmpsl
cmpb
out
mov
pop
imul
xor
mov
and
fcmove
xchg
inc
divb
sbb
test
lock
pop
cs
and
push
mov
xor
out
rep
cwtl
je
rclb
adc
push
dec
and
sub
mov
or
pusha
dec
repnz
push
testb
xor
mov
ficoml
jae
push
in
inc
insb
aas
push
lds
adc
cs
lret
push
jnp
idivb
or
xchg
mov
add
cmp
lds
pop
mov
sbb
in
xchg
and
fisttpll
and
xor
call
repnz
push
mov
xlat
sbb
and
mov
mov
movsl
mov
sub
jo
xchg
cli
dec
cwtl
jle
push
xor
mov
fists
cs
pop
xor
adc
add
adc
cmp
cli
fwait
cmpsl
add
push
inc
rolb
test
out
add
cmpsb
pushl
mov
popa
bnd
lcall
dec
inc
and
xchg
push
out
ret
mov
aad
ljmp
jb
xchg
sub
pop
jg
pop
jmp
pop
das
dec
mov
jmp
mov
in
jecxz
and
cld
daa
jmp
dec
lock
cltd
push
insl
out
xchg
call
mov
xor
xor
inc
stc
mov
cmovb
xchg
loop
xchg
or
ret
lock
negb
add
roll
insl
lret
cltd
xchg
ret
fnsave
loope
or
outsl
pop
lods
adc
ljmp
mov
sbb
push
mov
mov
pop
stos
in
fmull
pop
mov
mov
cmp
sahf
pop
rcrl
dec
fsubl
sub
subb
and
inc
push
ja
sbb
mov
cli
mov
movsl
xchg
mov
jmp
ffree
jns
stos
dec
dec
adc
repz
inc
popf
das
jno
mov
hlt
test
mov
mov
mov
jns
mov
jmp
add
and
xchg
xor
mov
mov
mov
adc
sti
mov
pop
mov
es
xor
mov
into
dec
pop
jp
lahf
dec
clc
aaa
pop
jno
xor
lret
neg
sbb
adc
subl
std
in
pop
js
jp
cmp
out
dec
lret
lds
aad
mov
push
lock
std
shll
push
sub
lret
popf
lods
hlt
lock
rcll
push
inc
scas
ds
rcl
sbb
xor
xchg
ds
out
push
ret
mov
nop
fcmovnu
aad
iret
jae
lock
adc
adc
sbb
call
mov
std
adc
dec
pmaxub
test
jne
mov
adc
je
mov
or
cld
sti
sub
ficoms
je
mov
pop
sbb
cwtl
ss
mov
imul
push
ljmp
jg
pop
sbb
in
xor
dec
inc
enter
adc
and
shlb
xor
push
or
out
pushf
xchg
xchg
fs
jb
pop
fimuls
ret
add
lret
cmp
fsubrl
adc
andl
add
add
or
push
inc
xor
adc
js
push
inc
jmp
shrb
insl
push
or
push
mov
xorl
loope
loope
lods
stos
dec
call
xchg
dec
xor
shll
lds
inc
arpl
jbe
cmp
dec
xchg
cs
cmp
push
std
mov
mov
pop
lds
push
cmpsl
fnstenv
pop
punpckhwd
mov
mov
lock
daa
pop
ja
sbb
movsb
lods
test
sbbl
gs
mov
in
pop
sarl
ss
mov
in
in
clc
xor
inc
cwtl
cli
jbe
dec
data16
sub
iret
pop
in
adc
or
xchg
xchg
adc
mov
ds
ds
imul
mov
les
adc
iret
nop
movsl
cwtl
pusha
cmp
shrb
dec
mov
xchg
aad
or
add
into
mov
adc
add
mov
and
in
cmpsl
inc
into
mov
jnp
rorl
adc
das
movl
push
mov
mov
or
push
nop
mov
test
aas
push
pop
xchg
dec
dec
mov
in
xchg
lds
icebp
jno
jns
mov
mov
xchg
es
dec
add
leave
xchg
dec
add
sub
lea
mov
ficompl
mov
mov
pop
mov
addr16
add
mov
cmp
lea
loop
push
sarl
push
adc
ret
add
cmpsl
dec
add
or
mov
xchg
mov
inc
mov
xor
mov
sub
shl
jle
ds
pop
lods
and
movsl
push
xlat
addr16
and
dec
push
shll
xor
popf
ret
jecxz
stc
push
data16
fwait
fwait
ret
out
out
mov
pop
mov
jnp
test
push
xor
xor
daa
je
lds
jecxz
and
outsl
xlat
or
sub
mov
xchg
mov
pop
inc
pushf
add
lods
and
loop
mov
stos
jb
ljmp
iret
scas
xchg
mov
popf
js
xor
pop
add
scas
test
jo
inc
sub
bound
imul
xor
js
jmp
fildl
repnz
jp
std
inc
nop
fsubrs
push
lret
dec
neg
clc
jnp
fimull
xchg
dec
push
pushf
fcomip
loopne
fdivrs
stos
fdivl
fnstcw
sbb
mov
movsb
cmpsl
pop
ret
dec
out
push
inc
add
sub
test
ret
shlb
xor
loopne
jo
das
movsw
mov
xchg
mov
insb
idivb
mov
arpl
mov
push
fs
sub
sub
sahf
mov
pop
inc
jg
jecxz
loop
out
xor
test
jle
lds
mov
addr16
ljmp
jmp
sub
cli
in
fildll
popa
lock
xor
cmp
ljmp
push
lods
icebp
push
daa
aad
rol
in
sub
ljmp
xchg
aaa
sbb
fs
loop
lock
in
pop
nop
mov
or
scas
jle
notl
addr16
jbe
push
add
cli
inc
loope
imul
in
or
aas
in
adc
mov
add
gs
add
cmpsb
divl
loop
adc
addr16
add
mov
fidivl
dec
lock
lret
shll
mov
sbb
xchg
negl
adc
sub
cltd
and
sub
pop
scas
outsb
mov
dec
sbb
pop
repz
dec
in
sub
jp
out
ret
lcall
dec
adc
rcll
decl
dec
pop
in
pop
test
lret
in
mov
push
jb
nop
out
push
insl
pop
or
or
mov
in
mov
sbbl
pushl
xor
les
lock
cmp
in
mov
out
pop
loop
gs
mov
or
mov
xor
mov
rcll
sahf
jecxz
scas
dec
mov
xchg
movsb
pop
jl
test
movsl
das
adc
rcll
movsl
rclb
mov
jo
xor
das
jg
xor
add
out
xchg
mov
pusha
test
lock
mov
daa
lss
pop
cmpsb
in
pop
dec
sti
lahf
fcoms
ret
mov
or
add
xor
inc
jp
clc
andb
and
inc
call
movsb
lods
add
dec
sub
mov
fstps
jnp
adc
mov
shll
jnp
lods
cltd
push
stos
ja
pop
leave
fs
fcoms
fcmovnu
dec
sti
mov
popaw
andl
mov
movsb
cmp
aad
push
notl
movl
dec
movsb
xor
push
in
bound
jns
add
jg
push
insl
mov
aam
push
xor
out
hlt
pop
xchg
jnp
or
fidivl
xchg
adc
outsl
ror
das
cmpsb
jae
popa
mov
sub
lahf
rol
dec
shrl
sahf
xchg
jne
imul
pop
int
pop
and
mov
leave
mov
xchg
fucomi
or
adc
pop
cltd
int
cmp
add
mov
test
push
je
rorl
out
xor
gs
jno
xchg
dec
push
adc
mul
and
pushf
cmpsl
or
add
xchg
cmpsb
add
and
sbb
push
xor
and
sbb
xchg
ljmp
sub
imul
and
lock
jae
adc
mov
or
test
push
cltd
addr16
shlb
loope
js
inc
jo
hlt
cmp
sub
adc
mov
mov
pop
aaa
arpl
add
xchg
mov
jns
pop
int3
orb
repz
fbstp
cmp
mov
cwtl
sub
lret
roll
rclb
leave
mov
out
es
dec
mov
add
mov
aas
push
pushf
rorl
hlt
xlat
xchg
filds
cli
jg
jl
xchg
data16
mov
add
out
push
or
pop
pop
lds
dec
sbb
push
xor
xchg
xchg
sub
pop
xchg
xchg
mov
and
xor
in
mov
in
iret
cmp
jp
decb
sub
sbb
adcb
rorl
xchg
mov
sbb
push
adc
mov
mov
rcrb
xor
push
or
sbb
inc
cld
mov
and
sub
es
and
pop
mov
xchg
fbld
xchg
dec
sbb
push
test
pop
out
mov
ficompl
dec
int
add
cmpb
add
subb
xlat
cmp
mov
sbb
imul
loope
mov
jno
push
mov
lahf
adc
mov
call
aaa
loopne
daa
sahf
fldt
push
dec
adcl
mov
add
mov
inc
sbb
or
int
or
pop
test
pop
inc
iret
cmp
not
dec
jmp
inc
jecxz
repz
gs
jmp
jle
jno
pop
cmpsl
cmp
pop
and
les
xchg
lods
xor
popf
pusha
mov
xchg
push
inc
adc
dec
pop
push
popa
mov
and
dec
mov
nop
or
jl
adc
push
sub
sahf
es
jecxz
cmp
test
or
or
fcompl
ret
pusha
int
pop
jg
scas
rol
fbstp
out
lret
dec
mov
or
int3
sarb
cltd
insl
int3
cmp
add
cmp
mov
cmp
je
test
xchg
iret
xor
rcll
and
xchg
pop
stos
in
inc
cmp
mov
adc
adc
icebp
mov
push
adc
push
scas
loope
int
orl
add
cld
mov
push
push
cmc
popf
stos
jecxz
lea
cmc
int
call
or
mov
aam
xchg
push
and
sbb
jg
dec
ss
push
sarl
and
push
clc
insb
cmpsl
lds
mov
roll
xor
and
cld
sbbl
fs
ret
push
xor
adc
cmp
idivb
push
and
dec
xchg
add
loope
out
cmp
add
rcr
shlb
aaa
and
cmpsb
fs
lret
xchg
out
cmpsb
jb
in
inc
in
shll
cmpsl
shlb
xor
in
pop
jecxz
bound
add
mov
sbb
cmp
lret
pop
jg
adc
popf
pushl
dec
les
jg
jecxz
add
fisubs
sbb
insl
std
vpmulhuw
or
aas
push
andb
mov
xchg
pushf
test
xor
lcall
pop
jae
gs
cld
testl
xor
ljmp
hlt
xor
sbb
pushf
and
les
cmp
dec
or
cmpsb
pop
and
sbb
cmp
mov
mul
mov
mov
sti
aad
mov
inc
inc
or
push
aaa
mov
mov
js
incl
mov
fldenv
xchg
and
pop
clc
outsb
pushf
dec
or
mov
ja
xchg
ficomps
inc
and
pop
fwait
inc
push
cli
jb
add
test
sti
mov
fwait
pop
add
jecxz
loopne
sbb
inc
jl
in
divb
push
sub
loope
es
push
pop
insl
and
xchg
imul
mov
and
shll
sub
inc
fs
loope
fs
out
rcll
subb
movl
jns
stos
sub
sub
out
push
icebp
loopne
xlat
push
mov
inc
neg
lahf
inc
jmp
mov
test
pop
imulb
mov
sbb
ja
lods
ret
lcall
repz
or
mov
cmpsb
mul
cmp
clc
cmpsl
repnz
and
popa
jnp
std
adc
movsl
mov
daa
jmp
adc
leave
or
cmc
fstps
fnstcw
sub
outsl
bnd
push
dec
out
jbe
outsl
xlat
mov
ja
gs
test
dec
cmpsb
leave
call
imul
push
push
adc
jno
add
pop
pop
xor
insb
scas
in
mov
adc
fldl
aam
out
dec
pop
fs
push
dec
cmp
pop
cmpsl
idiv
in
xchg
inc
mov
pushf
fimuls
cs
fs
emms
ljmp
jbe
outsl
pusha
cmpsb
push
inc
push
imul
ds
xor
jae
in
dec
inc
sbb
mov
xchg
or
jo
sbb
xchg
sar
lret
dec
and
fldl
jb
jne
sbb
xchg
loop
out
jg
dec
stos
je
cmc
sbb
fsubrp
in
jb
shll
pop
mov
ja
shr
adcb
pop
mov
push
inc
push
jmp
dec
iret
cmp
movsb
push
shll
xlat
test
dec
inc
aad
dec
fwait
cmp
dec
cmpsl
sub
notb
les
fstl
inc
push
jmp
jge
push
sbb
hlt
ret
movl
push
ret
aad
repz
inc
ror
aaa
fidivrl
pop
pop
aaa
clc
fwait
sub
repz
push
push
mov
xor
inc
adcb
jp
mov
pop
imul
push
cmpsb
fwait
add
outsb
dec
test
cmp
in
dec
push
cmp
scas
push
out
or
jge
sub
hlt
pop
xchg
dec
outsl
mov
jle
inc
fucomip
sbb
test
cmp
mov
jno
dec
dec
ja
push
stos
add
and
mov
ret
or
rclb
mov
imul
xor
fnsave
lock
sub
dec
mov
cmpsl
mov
cld
mov
xchg
in
xchg
loope
lock
add
push
xchg
enter
outsl
adc
push
aam
lret
jge
cmc
rcr
clc
loopne
sbbb
xchg
fimull
dec
arpl
sbb
inc
push
push
mov
lcall
jl
push
mov
push
mov
leave
pop
xchg
cs
xchg
cmp
sbb
jge
sub
sbb
push
sub
pop
sarb
push
push
call
xchg
pop
sub
adc
ret
and
outsb
arpl
sub
adc
data16
fidivl
xor
jle
add
mov
bound
pop
add
idiv
adc
fwait
es
mov
lea
aam
sub
sbb
scas
push
inc
mov
dec
xchg
mov
lods
mov
test
jecxz
repnz
lret
xchg
xchg
xchg
jb
push
or
and
xlat
stos
xor
or
jb
test
mov
pop
cmp
lret
jle
sbb
cmp
mov
fwait
lahf
cmp
fsubl
iret
xor
xchg
popf
int
imul
jg
cmp
lret
bnd
mov
fbld
push
fistl
addr16
int3
inc
mov
pushf
pop
imull
rcll
cmp
jae
add
sarb
inc
pop
jl
lods
dec
ljmp
xor
adc
aas
hlt
shll
or
mov
push
aas
adc
lea
mov
xchg
int3
pushf
ds
jecxz
dec
ljmp
lock
clc
outsl
sti
lock
jne
add
flds
mov
pusha
arpl
cmpb
data16
clc
and
push
gs
cmpsl
divl
push
xor
rcll
cmpsl
sub
lahf
cmpsl
adc
mov
jae
jle
vrsqrtss
dec
jge
mov
rcrb
jge
sbb
in
sarl
jbe
push
sub
ficomps
lcall
cli
adc
inc
sub
sub
mov
push
sub
push
lcall
mov
mov
pushf
inc
testl
lret
sarb
pop
xor
pop
and
lds
fildll
aam
in
jp
iret
or
push
cmp
je
loop
inc
and
push
imul
cwtl
scas
xchg
outsb
arpl
sbb
cmpsb
jge
push
or
int3
or
arpl
sbb
shlb
inc
sbb
push
add
push
jb
inc
stc
xchg
push
in
pop
lea
pop
or
in
test
fdivs
dec
push
test
push
jno
fwait
push
ja
sarb
sbb
das
adc
dec
loope
jbe
xchg
imul
and
cmc
xor
lods
jp
xor
mov
test
pop
insl
sahf
xchg
and
sbb
fcompl
sub
cmp
pop
out
out
sub
je
outsb
jno
xchg
cli
das
enter
mov
sub
xchg
incl
fimull
das
sbb
sarb
scas
data16
mov
sbb
mov
out
jnp
dec
insl
sahf
aam
call
or
push
jg
stos
hlt
and
or
dec
das
jp
imul
or
arpl
sbb
xor
inc
scas
es
push
inc
sarb
fwait
pop
mov
adc
aad
ficoml
sub
adc
lahf
jno
cld
int3
hlt
add
out
or
in
loope,pn
cmp
cmp
mov
xchg
das
pop
mov
mov
clc
outsb
xchg
jmp
sysexit
mov
xchg
adc
daa
sbbl
push
cld
cmp
lock
subb
adc
pop
pop
and
insl
repnz
gs
out
inc
mov
shll
dec
stos
jo
idiv
pop
and
fucom
fs
insb
test
mov
gs
mov
clc
add
fwait
lds
sbb
insb
xor
or
ss
mov
mov
fdivs
xlat
mov
daa
aam
xor
pop
or
ret
xor
scas
rorl
popa
push
adc
sub
dec
mov
or
inc
fidivl
add
push
push
add
inc
cmp
xor
xchg
add
or
scas
fsubrp
fwait
cmpsb
lods
pop
sbb
inc
dec
fsubp
pop
fmuls
mov
ljmp
xchg
mov
and
or
lret
in
push
adc
jle
xchg
test
sahf
lahf
push
addl
inc
jecxz
and
pop
xchg
inc
sbb
lret
pop
sarl
cmp
rorl
lcall
loope
add
jbe
push
fcomp
daa
cmc
and
adc
outsb
dec
test
xchg
jp
das
icebp
cld
std
ja
hlt
insb
int3
mov
mulb
out
pop
pop
inc
andl
stc
ds
cld
jnp
movhps
stos
mov
les
leave
std
or
shrb
aad
xor
mov
mov
pop
and
ror
lret
pop
push
inc
ret
xchg
xor
repnz
ljmp
mov
and
popf
lods
clc
dec
aaa
in
lret
and
cmpsl
push
fcmovu
fcmovbe
sbb
into
fwait
sbb
in
mov
jne
inc
jmp
ss
shrb
fists
xor
jp
xchg
cmpsl
filds
data16
ficoml
pop
push
jl
in
xchg
in
jecxz
cwtl
and
xchg
out
lds
out
aaa
mov
mov
jb
clc
mov
pop
dec
sbb
xchg
repz
ret
outsl
push
lcall
cmpsl
shl
pop
or
push
mov
sub
mov
or
pop
ja
pusha
scas
test
insb
dec
add
mov
add
mov
sti
nop
lods
dec
add
sub
dec
push
pop
mov
test
sbb
or
cmpsb
push
and
push
neg
mov
jnp
inc
fwait
jae
xor
out
add
sub
mov
pop
bound
or
outsb
int3
ds
cli
fcompp
and
or
pop
adc
jns
mov
mov
out
fcmovb
push
ja
inc
jno
xor
xchg
inc
mov
add
inc
jnp
pop
xchg
mov
das
into
xchg
mov
push
push
shrl
stc
sbb
fimull
mov
orb
jecxz
imulb
push
cs
adc
out
les
aad
or
lea
mov
mov
lahf
shrb
aad
push
sbb
push
adc
sahf
inc
stos
insl
push
sbbb
xor
xor
mov
and
scas
shlb
mov
leave
push
test
push
test
inc
test
stos
mov
ss
or
cmp
repnz
outsb
mov
in
bound
inc
movsl
pop
add
pop
push
out
insb
mov
and
jle
inc
in
inc
mov
test
add
mov
xor
jecxz
push
pop
push
mov
pop
dec
cwtl
arpl
inc
sub
es
arpl
xlat
push
push
pop
fidivs
adc
dec
inc
mov
arpl
filds
bsf
mov
mov
xchg
sbb
outsl
cwtl
subb
scas
cmp
in
push
aam
push
mov
lret
sbb
inc
movsl
mov
imul
cmpb
and
insb
addr16
sub
jmp
mov
xchg
inc
jge
push
push
push
jge
or
inc
and
sarl
push
cmp
pop
sbb
pushf
into
imul
ficoms
lods
cmpb
aaa
clc
je
add
adcl
fcomip
jb
dec
dec
push
xchg
and
dec
idivb
aas
inc
and
or
fwait
popf
sbb
mov
mov
jno
dec
pop
cmp
scas
mov
jo
pop
es
push
scas
pop
ljmp
or
cld
cmp
cmp
cmpsl
inc
add
ficomps
stos
xchg
sub
xchg
or
xchg
pop
repnz
cmp
sbb
mov
rorl
js
pushf
xor
sub
fdiv
cmpb
arpl
inc
push
jnp
adc
inc
cmc
pop
mov
lcall
or
and
int3
cmpsl
mov
mov
scas
mulb
lods
cmp
pop
adc
in
or
sub
add
dec
sti
adc
push
into
pop
jmp
cmp
jmp
mov
jmp
outsl
stos
aas
hlt
cmp
aad
mov
mov
or
in
aad
inc
add
stc
adc
jne
int
pop
subl
movsl
addl
aam
mov
mov
outsl
inc
stos
in
xchg
fadds
push
movsb
mov
and
icebp
or
js
mov
jae
aam
int3
rolb
xchg
iret
call
lea
fs
jo
xor
int
test
mov
shrd
cmp
jle
push
scas
incl
mov
icebp
push
adc
nop
repnz
icebp
dec
or
imul
lods
addr16
lret
add
stos
adc
xlat
cs
inc
adc
xor
sub
in
jge
cmp
clc
mov
mov
jle
add
ret
addr16
pop
dec
fldcw
xor
ljmp
pop
sbb
xchg
loop
fcomps
dec
aad
jo
jle
lret
push
adc
cmpb
jb
add
popa
push
stos
mov
pop
dec
lea
pop
xor
cmp
icebp
xchg
pop
into
and
rorb
or
je
push
repnz
adc
mov
add
fisttpl
insl
sub
xchg
pop
cmp
inc
jb
jp
and
xchg
mov
insb
mov
faddl
js
mov
mov
icebp
fildl
ja
clc
andb
pop
and
inc
adc
push
jns
pusha
sbb
ljmp
popf
jno
sar
ds
mov
out
fs
js
add
lsl
push
pop
lea
mov
xor
mulb
cwtl
test
adc
mov
out
and
xlat
rcl
and
xchg
dec
inc
ja
mov
push
mov
lods
ds
sub
test
bound
cs
in
movsb
mov
mov
xor
mov
ficoms
xchg
repz
dec
mov
data16
cmpb
mov
jns
in
sbb
pop
arpl
mov
sub
pop
or
inc
mov
push
int3
setbe
mov
clc
leave
lret
xchg
aam
call
into
jg
jo
inc
aas
jae
imul
mov
std
inc
cmp
mov
inc
jae
ds
mov
mov
sub
cmc
movsb
stc
add
or
pop
mov
xor
inc
mov
inc
movsl
xchg
ss
cmp
loope
out
andl
and
leave
sub
pushf
add
cmp
pop
lods
clc
lock
pop
push
ds
sub
dec
fprem1
int3
loop
call
cmpsl
test
cmp
xchg
jns
std
mov
mov
sub
jae
insb
mov
test
dec
int3
ljmp
in
imulb
jp
fstl
nop
pop
test
add
add
mov
lea
dec
and
push
mov
test
dec
in
lcall
xor
mov
adc
in
and
sarb
mov
add
test
and
cld
push
mov
filds
insb
jne
bound
pop
pop
test
sub
mov
fisubrs
jae
adc
incl
mov
sbb
lods
out
xor
es
inc
xor
lods
adc
mov
inc
movsl
nop
add
or
ret
xchg
out
fldl
jmp
and
mov
xchg
adc
push
and
sbb
and
dec
insb
inc
push
lea
sbbl
xchg
xchg
mov
fmull
xchg
leave
jo
outsb
dec
inc
test
imul
in
sbb
sub
mov
fwait
test
loopne
sahf
push
les
shl
test
mov
xor
add
divb
aad
aam
and
in
rcrl
sub
rclb
shrb
ja
sub
mulb
rclb
aad
loop
xor
fs
js
scas
pop
gs
ret
ror
insb
subl
test
mov
inc
inc
sub
daa
pop
xchg
jne
and
or
mov
jnp
lahf
pop
or
lods
dec
jnp
cmp
sub
fistpl
bound
movsb
cmp
inc
testb
mov
push
jle
je
loope
mov
enter
scas
lock
aam
arpl
sti
scas
aaa
push
jge
jmp
out
test
xor
jae
sub
loop
pop
adc
or
test
inc
xlat
mov
mov
lahf
das
das
or
lret
and
in
imul
jmp
mov
mov
adcb
jle
es
jae
mov
push
sbb
adc
xchg
xchg
xchg
sbb
xchg
mov
in
dec
jg
imul
in
cmp
lds
xor
jge
dec
dec
add
out
ja
xchg
push
popa
cmc
jg
flds
ja
add
or
test
push
or
mov
je
mull
fildll
push
pushf
pop
pop
jbe
mov
mov
push
jbe
mov
cld
and
pusha
fcoml
cs
das
scas
lea
ja
mov
mov
clc
mov
adc
mov
test
or
scas
mov
lcall
adc
ficoml
mov
ret
mul
fwait
xor
int3
in
cmp
mov
sub
and
inc
cltd
or
fstpl
insb
es
cmp
jmp
push
mov
mov
pop
int3
cs
and
shrb
les
fs
adcb
fimull
sub
or
adc
xchg
sub
xor
push
insl
loopne
out
stos
sub
test
mov
lret
or
into
sbbb
jl
mov
pop
std
lcall
xlat
dec
mov
xchg
jnp
push
int
test
add
jp
jno
sub
popa
adc
rorb
aas
cli
stos
cmc
push
adc
clc
aas
outsl
ret
sub
jmp
cmpsb
sub
in
enter
jp
fcoms
aam
pop
jno
lahf
xchg
mov
fbstp
mov
les
cmp
and
pop
and
dec
lock
cltd
ret
add
push
repnz
rcrb
daa
push
inc
pop
test
lret
or
test
jmp
xchg
push
cs
xchg
repz
movsl
push
ret
fildl
repnz
dec
in
test
pop
enter
bound
test
mov
mov
or
dec
lds
xor
xorl
popf
xlat
loop
inc
push
bound
cli
mov
sub
fmulp
mov
jne
mov
roll
dec
jge
js
inc
sbb
mov
fsubp
sbb
sub
shll
push
mov
icebp
mov
out
push
add
pop
dec
outsb
dec
aad
mov
stc
xor
or
bound
push
dec
bnd
enter
leave
push
mov
shlb
sbb
arpl
ror
sbb
test
je
cmp
popa
jp
es
add
insl
fsubrs
int3
push
loop
mov
stos
xchg
ret
mov
xchg
cwtl
jle
aad
sahf
mov
fld
scas
in
scas
mov
out
repnz
lahf
push
ret
fwait
shll
mov
roll
mov
popl
inc
lds
pop
pop
xor
test
add
mov
test
cli
insb
add
dec
sub
jno
ficompl
cs
inc
cmp
push
jl
jae
daa
add
pop
out
fidivrl
dec
fbstp
pop
out
mov
xchg
ss
loopne
push
mov
and
and
aaa
pop
add
adc
mov
and
movsl
das
dec
push
xchg
scas
jl
mov
mov
jge
fisubrl
adc
testb
xchg
call
pop
dec
adc
and
insl
mov
and
into
inc
mov
pop
dec
sbb
orb
mov
mov
xchg
push
pop
pushf
fistl
add
das
jl
je
stos
out
mov
add
mov
pusha
pop
int3
out
test
mov
dec
out
inc
mov
stos
xchg
mov
xchg
cmp
add
out
mov
cwtl
daa
out
jl
cmpsb
fwait
xchg
in
js
push
ja
xor
jle
iret
popf
sub
js
inc
jmp
xchg
iret
test
add
and
addr16
xchg
xor
cmp
mov
call
mov
jb
stos
xchg
rolb
daa
sub
push
sbb
adc
leave
loopne
and
inc
dec
sbb
or
and
mov
and
or
or
and
pop
cmp
int
bnd
adc
pop
fstpt
sub
iret
int
xchg
lret
sub
jg
std
sub
imul
movsl
test
shlb
mov
xchg
adc
xchg
enter
fists
movlps
mov
mov
insl
and
ja
fcmovnu
mov
mov
add
add
sbb
push
orb
call
loopne
pop
or
add
decb
jne
mov
add
stc
out
cld
jge
js
insl
call
xor
mov
fsub
fdivrs
or
mov
shr
mov
fadds
mov
insl
or
jns
mov
xor
ret
pop
mulb
add
fwait
lods
jecxz
cld
pop
mov
add
adc
jge
mov
mov
sub
cs
push
enter
push
imul
dec
dec
inc
subb
fdivs
push
pusha
push
mov
mov
mov
lods
cmp
fs
xor
scas
xor
aas
scas
xchg
sub
repz
and
outsl
cmp
into
outsb
call
mov
jg
mov
lahf
xlat
aad
fistpl
leave
div
insl
and
pop
orl
les
daa
cli
icebp
es
fsubrp
inc
popf
pop
xchg
fnstenv
mov
inc
or
dec
nop
mov
xor
xchg
push
mov
lock
ljmp
push
ds
sub
test
dec
repnz
mov
mov
push
lds
or
je
or
adc
mov
and
insl
cwtl
dec
jb
aam
sbb
dec
int3
pop
cmp
mov
jnp
jnp
pop
movsb
lea
mov
rcl
xchg
inc
mov
test
xor
ja
mov
pop
sbb
cs
cmp
xor
jl
adc
cmpl
je
mov
inc
sub
repz
inc
cmp
or
lea
xor
jbe
inc
xchg
idivl
mov
mov
pop
ja
dec
clc
mov
xor
cltd
int3
jmp
pop
mov
movsb
sub
ret
cwtl
xchg
xchg
mov
jns
pop
loop
popa
arpl
adc
ret
xchg
jmp
sbb
push
test
adc
pop
xchg
and
pop
push
xor
mov
nop
lcall
sarl
ret
and
out
push
dec
shl
int
xor
sub
cmp
fnstsw
or
test
imul
or
push
aaa
or
lods
jnp
roll
or
cli
shrb
js
ja
pusha
xor
ljmp
mov
and
mov
sub
lods
dec
dec
push
sub
push
lea
jp
lds
iret
mov
jo
jb
xchg
cltd
addr16
aas
jo
push
push
mov
and
xorl
in
dec
jp
jno
push
dec
mov
dec
mov
aas
cltd
pop
adc
enter
scas
lods
movl
mov
inc
pop
inc
sub
mov
cmp
stos
cmc
outsb
mov
mov
mov
outsl
scas
lahf
inc
mov
das
aas
and
std
add
in
ret
rcll
mov
sbb
cmp
fdivrl
inc
in
cmpsb
adc
imul
mov
addr16
hlt
loop
cmp
ret
gs
dec
xor
daa
repnz
mov
je
add
jae
in
fistl
mov
into
sahf
test
jp
insb
clc
scas
pop
pop
mov
loop
or
aas
push
pop
into
scas
cwtl
inc
add
pop
fwait
mov
es
fdiv
jne
pop
add
sub
add
push
inc
add
push
mov
and
mov
cmpsl
or
ret
lods
pop
movsb
les
push
pop
mov
add
push
mov
mov
inc
add
sbb
leave
pushf
mov
mov
outsb
movsb
aam
pop
mov
movsl
sarl
push
fcomip
jmp
jno
ss
and
jns
fwait
cmp
pop
stos
pop
stos
jle
cmpsb
ja
lea
test
inc
pop
test
mov
adc
in
xor
xchg
cmp
mov
xchg
je
inc
in
cmp
fisttpll
mov
les
stos
sub
dec
jmp
xor
daa
add
shlb
stc
mov
sub
lods
and
mov
push
divb
xor
xor
lret
xor
enter
xchg
fsubrs
dec
mov
cs
dec
insb
out
popf
aad
into
push
ss
push
dec
lods
xlat
movsl
outsl
das
cs
dec
in
dec
push
jnp
dec
es
lea
test
ds
js
pop
je
pop
and
clc
lahf
repnz
add
addl
mov
stc
std
stos
out
xchg
mov
push
faddl
imul
jo
mov
loop
jo
sbb
lret
pop
movsb
xor
jle
imull
xor
jae
or
out
faddp
nop
xor
push
add
xchg
cmpsl
cmp
sub
adc
or
xchg
cmp
xor
scas
test
or
int3
loop
jo
mov
lods
push
arpl
pop
bound
or
outsb
pop
mov
pop
fwait
inc
test
xchg
cmove
sub
sarb
mov
xchg
pop
inc
mov
sbb
sbb
sar
std
xchg
outsb
jbe
mov
xchg
xchg
xchg
shll
and
inc
outsl
inc
fs
sbb
pushf
pushf
jmp
outsl
lea
push
test
mov
repz
jb
jge
lahf
je
dec
mov
jno
std
adc
jle
incb
cli
inc
insb
roll
shlb
mov
repnz
ljmp
cwtl
mov
inc
xchg
int3
stc
sbb
in
jbe
dec
in
jg
or
rclb
inc
xchg
jnp
packuswb
dec
xchg
fwait
mov
jmp
cli
xchg
mov
fidivrs
or
in
lcall
cmp
dec
add
popa
adc
xor
mov
dec
mov
lock
cmc
cmp
fdiv
dec
mov
pop
jp
je
fwait
xchg
mov
dec
cmpsl
or
imul
mov
in
push
aad
dec
scas
call
jmp
cmpsb
int3
ds
cs
pop
mov
jnp
repnz
jb
test
iret
pusha
xor
pop
add
jns
loop
adc
out
mov
adc
adc
popf
stos
mov
and
xlat
xchg
fistpl
scas
xchg
sub
enter
xchg
or
dec
mov
lods
es
insb
repnz
test
je
push
mov
sbb
and
lea
hlt
push
and
loope
test
fildl
sub
es
call
aas
cs
sbb
mov
into
push
mov
mov
adc
push
jb
cmp
movsl
cmp
xor
inc
push
xchg
shlb
or
fcom
or
xor
ret
sbb
ds
pusha
call
in
andl
inc
cmp
out
jbe
fimuls
inc
push
mov
aam
pop
aad
mov
lock
mov
mov
out
shll
xor
jbe
sub
xchg
lea
push
push
sbb
out
adc
fidivrl
push
xor
pop
lock
xchg
loope
mov
cltd
xchg
inc
loopne
or
mov
sub
sbb
add
leave
imul
outsb
fildl
andl
xchg
es
push
shlb
or
push
inc
jbe
pop
dec
jns
scas
sahf
ja
aam
mov
lods
mov
adc
aas
adc
dec
jb
dec
mov
lahf
jne
inc
jecxz
sub
jp
enter
add
adc
hlt
nop
sub
cltd
push
mov
imul
ficoml
pop
cmpsl
lea
dec
fwait
or
jo
dec
pop
mov
lret
jno
out
sbb
je
or
inc
xchg
cli
sbb
cmp
stc
pop
xor
cmpsb
add
cwtl
lahf
inc
push
fiaddl
or
aas
dec
into
test
loope
loope
arpl
leave
mov
jmp
mov
jo
mov
movsb
int
aam
cltd
popl
dec
xchg
xchg
daa
arpl
mov
add
inc
cmp
bnd
xchg
jbe
or
sub
mov
and
adcb
stc
adc
negl
xchg
jmp
mov
enter
adc
adc
xor
push
pop
out
add
fmuls
xor
out
or
mov
cmp
mov
sub
mov
imulb
neg
add
xchg
addl
mov
xchg
mov
sahf
sub
repz
je
jnp
sbb
cmp
fbstp
mov
dec
fdivr
or
or
dec
popa
xor
sbb
cmp
roll
imul
or
ds
xchg
push
inc
pushf
pop
and
or
add
std
dec
enter
lea
pusha
lods
sub
outsb
mov
out
scas
in
pop
pushf
std
xchg
jo
xchg
notl
jno
add
addr16
test
lds
sbb
cmp
adc
mov
jnp
fsubrl
bound
or
mov
and
pop
push
and
imul
sbb
nop
fcoms
shrl
sub
xchg
mov
arpl
adc
lock
jno
cli
cld
test
imul
popfw
mov
inc
push
jae
and
stc
je
test
movsb
and
iret
mov
lret
jne
js
fcoml
popl
or
xchg
or
aaa
inc
xor
or
fists
xchg
das
movsl
clc
xchg
call
mov
fiaddl
mov
pushf
iret
mov
imul
loope
push
cs
and
xchg
jecxz
cmp
xchg
inc
je
adc
mov
or
test
add
test
xor
iret
insl
fistl
push
adc
out
repnz
lock
in
leave
push
and
int
cmp
mov
jle
xor
hlt
xchg
and
xor
rsm
pop
or
jae
mov
jns
push
cmpsb
pmuludq
mov
loop
mov
adc
leave
les
aam
lds
outsb
lret
mov
dec
pushf
pusha
mov
hlt
lcall
dec
adc
adc
je
repnz
das
stos
jge
cwtl
cmp
dec
push
aam
pop
testb
or
cli
cmp
rorb
and
call
adcb
push
jb
test
aaa
icebp
jg
aaa
mov
mov
sub
roll
lock
test
stos
inc
sub
jnp
cmp
mov
subb
mov
mov
jo
pop
int
mov
es
cmpsb
insl
push
pop
mov
sub
lahf
cmp
ds
stos
lds
adc
xchg
dec
or
xlat
push
enter
fisubs
dec
xchg
xchg
or
loop
jmp
mov
sub
xor
es
test
nop
icebp
cmp
xlat
jecxz
in
or
sub
push
in
xor
repz
mov
add
repnz
aaa
sbb
cmp
insb
push
divl
stc
imul
inc
inc
jle
add
div
xchg
andl
fists
arpl
xor
ljmp
test
gs
repz
cmp
imul
push
in
inc
jns
shl
sub
int3
rcrb
jns
fcmovnb
mov
and
fdivrl
test
push
pop
aaa
je
inc
push
inc
sbb
pop
data16
cmp
inc
xlat
mov
fmull
sub
xchg
adc
mul
fnsave
push
jno
jno
adc
inc
fimull
or
in
or
mov
dec
jb
sub
jbe
jmp
or
inc
cmp
out
inc
mov
ss
ja
cmpsb
ret
in
sub
sarb
lods
jo
jbe
std
add
sbb
jmp
pop
icebp
or
or
imul
or
out
in
pusha
jmp
outsl
repz
mov
add
jns
int3
inc
test
or
mov
mov
into
dec
mov
mov
and
orl
mov
out
dec
andl
popf
ficoms
pusha
or
sub
scas
add
ljmp
sub
idivb
pop
xor
lret
jecxz
dec
push
jno
and
repz
stc
mov
in
sarb
sbb
call
dec
add
cmc
mov
push
insl
xchg
in
leave
ss
adc
cmc
jno
fildl
nop
adc
xor
mov
test
mov
imul
stc
or
movsl
push
ja
pusha
inc
and
push
or
shrl
cwtl
add
cmp
mov
fisttpl
xchg
fmuls
mov
mov
sbb
inc
mov
icebp
xlat
stos
adc
imul
or
xor
fstl
movsb
cwtl
jbe
add
shrb
mov
sti
and
shrl
cltd
pop
xor
jg
and
push
bound
sahf
cmp
cmp
xlat
iret
lods
imul
or
cs
sub
out
jnp
test
dec
add
dec
mov
in
cmp
sbb
push
mov
or
push
mov
lret
data16
mov
pop
xchg
mov
sbb
pop
jle
mov
mov
xchg
mov
pop
xor
filds
pushf
xor
mov
mov
out
cmp
xor
ja
out
mov
lret
loope
xor
gs
jbe
xchg
mov
push
fwait
stos
cmc
scas
cmp
inc
mov
mov
and
cmpsl
adc
out
dec
or
sti
mov
cmpsl
jnp
out
divb
jp
gs
cltd
inc
push
and
push
xorb
enter
inc
popa
loopne
sub
xor
addr16
push
inc
sbb
mov
jbe
sbb
xor
jg
call
inc
ret
jbe
call
fsts
xlat
dec
pop
jg
xor
push
test
out
cmp
enter
and
js
fs
aas
and
shrl
minps
mov
push
inc
xlat
aad
jmp
xchg
mov
and
test
lods
sub
hlt
jle
popa
or
dec
xchg
daa
movsb
aad
jae
into
lcall
lret
in
push
es
push
mov
hlt
repz
cmpb
inc
push
lods
pop
movsb
out
and
mov
mov
jle
and
dec
insl
cmpsl
cmp
mov
push
add
xchg
psrlw
xchg
pusha
mov
jno
iret
idivl
sbb
dec
int
jb
addr16
inc
imul
dec
xchg
jg
mov
fbstp
loopne
inc
mov
mov
ret
enter
les
push
mov
lahf
add
in
adc
and
push
push
dec
and
jmp
mov
and
adc
lret
jae
lahf
or
lret
call
xchg
push
inc
mov
mov
fsubl
sbb
or
shlb
fistl
rcll
lock
xchg
repnz
cld
mov
dec
dec
andb
repnz
push
inc
fildl
inc
je
jae
pop
in
icebp
xchg
jge
ret
scas
ficomps
ret
dec
lods
sar
outsl
in
or
jmp
fcmove
inc
mov
cs
mull
pusha
lods
push
mov
shlb
stos
pop
ljmp
mov
cmp
adc
jb
fiaddl
sub
test
inc
inc
outsl
dec
inc
and
int3
jmp
out
fs
or
test
lahf
mov
clc
int
jecxz
fs
and
dec
shlb
xor
push
pop
inc
dec
mov
jno
aam
mov
pop
ret
fisttpll
pop
pop
pop
mov
mov
push
mov
ss
fildll
inc
adc
or
or
arpl
es
mov
mov
fistpl
out
or
lahf
sbb
adc
mov
mov
pop
out
mov
pop
in
mov
pushf
sbb
aad
push
lock
repz
pop
mulb
cld
call
push
cmp
sub
push
lods
stos
mov
mov
sub
xor
xchg
shrl
dec
cs
movsl
xchg
mull
out
insl
adc
jmp
mov
push
jne
leave
inc
inc
cwtl
xor
pop
fnsave
add
pushf
hlt
push
mov
test
add
test
jne
mov
xor
mov
mov
lods
loope
test
loop
push
mov
sbbl
and
es
jo
shlb
mov
lahf
pusha
mov
pop
pop
and
jp
pop
fistps
ja
and
ds
rcr
jg
sbb
dec
jge
inc
xlat
mov
inc
add
and
fcompl
and
pop
stos
push
mov
scas
ds
xor
std
dec
shl
inc
fisttpll
push
or
pop
js
sbb
dec
cmp
add
sub
adc
pop
push
test
or
add
pop
xchg
jge
mov
daa
in
push
lret
je
mov
inc
push
jl
lcall
cmp
or
inc
andl
push
ss
mov
fldcw
das
jmp
out
aam
mov
out
jp
push
jmp
mov
pop
aas
in
cmpsl
out
dec
add
jecxz
jmp
mov
ljmp
mov
pop
fwait
movsl
sbb
jns
jae
loopne
xchg
xchg
fisubrs
jnp
push
jbe
xor
js
mov
test
jmp
lcall
mov
rolb
loop
addr16
jl
mov
xchg
push
add
and
jmp
push
dec
jo
jnp
icebp
lods
cs
lods
mov
fucomi
and
add
xor
shll
or
rclb
scas
fcomi
mov
imul
rol
lcall
sub
out
daa
or
sbb
les
sti
push
popf
out
cltd
dec
shll
cmpsb
addr16
andb
xor
lahf
mov
loop
and
inc
sbb
ja
push
mov
out
and
inc
popa
cmc
mov
lods
mov
pop
or
xchg
call
or
add
scas
or
mov
jecxz
adc
xor
cmp
pop
mov
jl
mov
mov
xorb
cltd
add
jns
mov
xor
push
daa
or
pop
or
mov
mov
add
stos
fmull
lods
push
push
or
inc
jecxz
push
hlt
xor
push
jo
fcompl
shl
into
mov
pusha
out
add
jmp
push
jae
mov
mov
push
adc
fsubrs
arpl
add
jb
push
imul
mov
jecxz
lret
mov
xchg
xchg
dec
sub
xlat
cmp
andl
pop
int3
pushf
and
mov
pop
sub
rcrl
lea
sbb
mov
mov
popa
inc
mov
dec
sbb
cltd
pop
insb
fnstcw
jl
add
xor
jge
jo
stos
add
out
cli
mov
shrl
fsts
lods
repnz
inc
mov
lds
iret
into
loope
xor
sub
lock
lea
jl
and
or
shlb
imul
cmp
mov
or
mov
push
andb
out
jg
stos
dec
lea
scas
jge
in
shll
add
push
nop
fcoms
jecxz
jno
rep
sarl
push
mov
dec
lret
cltd
scas
outsl
cmp
sub
or
cmp
adcl
jno
sbb
popa
mov
mov
arpl
xlat
jb
jb
mov
fcomip
push
loopne
push
or
dec
push
jno
aam
imul
mov
scas
mov
in
xchg
xor
add
cmp
cmpsb
lret
push
icebp
ja
xchg
cmpsl
repz
int
iret
arpl
fbstp
xchg
cmovae
sti
loopne
iret
lods
test
sub
lcall
aaa
jnp
jg
cltd
addb
ss
dec
pushf
xor
js
pop
mov
shl
cmp
push
inc
pop
adc
and
cs
cmp
cmc
adc
adc
xchg
and
das
aaa
outsb
clc
or
cmp
pop
dec
cmpsb
fmuls
daa
shlb
push
xor
movsb
mov
out
cmp
pop
repz
jb
call
mov
push
sbb
mov
leave
mov
dec
adc
inc
mov
mov
je
or
cmc
fwait
js
and
addr16
add
push
into
jg
dec
ret
mov
mov
mov
mov
fmull
add
mov
mov
and
imul
sbb
jae
jne
sahf
jne
xor
shlb
sbb
stos
adc
push
xor
fcoml
push
jmp
fistps
test
gs
inc
sub
mov
xchg
xchg
in
gs
daa
pop
push
add
mov
xor
pop
add
movq
add
inc
lods
jge
ljmp
push
testl
in
jns
cmp
stos
call
cmp
xor
pop
push
adc
test
sbb
insb
insb
xor
and
pop
jbe
xchg
pusha
stos
xor
cmp
insl
xchg
clc
and
xchg
imul
das
jae
dec
mov
cmpsb
lock
lret
sarb
jnp
ss
les
out
outsl
out
jge
cmp
add
mov
das
push
aaa
stos
mov
push
sub
add
mov
cwtd
fs
in
jmp
dec
cmp
xchg
sbb
add
cmpl
fprem1
push
jmp
subb
mov
push
popf
xor
pop
mov
jle
fwait
cltd
leave
mov
cmp
sub
sub
cltd
mov
jmp
lea
scas
mov
int3
inc
shlb
cvtps2pd
cmp
cmpsl
mov
dec
flds
out
and
jmp
lret
insl
cmpl
and
das
inc
shll
shl
icebp
movl
jae
dec
and
mov
sbb
loop
push
xor
fcomp
add
dec
cmp
test
int
scas
xor
stos
adc
and
data16
sub
jp
into
mov
sahf
insl
les
adc
add
jnp
lock
loopne
xor
inc
xlat
adc
loope
xchg
sub
sti
pop
jbe
mov
inc
sbb
iret
cmp
lea
xchg
jp
int3
pop
pop
cltd
jg
add
loop
test
sbb
pop
aas
cmpsl
fucomi
pushl
push
adc
js
das
dec
data16
dec
xchg
cs
xchg
nop
out
pop
andb
fs
or
pop
push
dec
stos
int
dec
dec
inc
jecxz
xchg
mov
bnd
adc
or
pop
popa
dec
mov
inc
movsl
inc
insl
push
sbb
push
adc
dec
jg
addr16
cs
paddb
push
stos
sub
and
pop
jg
add
or
sbb
push
mov
pop
inc
dec
pushf
roll
mov
push
cmp
sbbb
loopne
stc
jns
cmp
mov
cmp
mov
add
popf
push
mov
jp
sub
cs
pop
pop
cmpsb
dec
mov
testb
jae
pop
icebp
cltd
mov
popl
subb
sub
addr16
ret
cmpsl
jecxz
stos
adc
pop
stc
cs
add
xor
ja
iret
sub
inc
jge
and
pop
fsubl
lods
jge
in
mov
mov
add
outsl
lea
jge
arpl
dec
les
lret
aad
cltd
adc
mov
ja
stos
or
lods
jmp
in
jge
into
push
test
into
lahf
xor
enter
mov
je
adc
out
mov
sbb
or
clc
sub
dec
push
jns
jo
int
dec
xchg
xor
mov
or
mov
push
pop
loopne
test
or
mov
jg
ds
add
into
xchg
adc
and
jecxz
jnp
mov
push
mov
lock
xchg
inc
jne
dec
test
inc
test
imul
test
shl
sub
frstor
mov
pop
lock
mov
movsl
aad
or
or
ljmp
and
mov
mov
and
pop
push
test
cmpsb
mov
lock
inc
mov
mov
cmp
pushf
daa
sbb
out
inc
xchg
cmc
iret
outsb
inc
adc
jmp
pushf
adc
lret
and
xlat
daa
sbb
rcrl
add
cmpsb
xor
mov
mov
imul
cmp
sub
inc
mov
in
pop
nop
cmp
shrb
out
out
mov
mov
mov
adc
enter
aas
cmp
gs
pop
popf
mov
cmpb
mov
inc
cmp
xchg
mov
shrl
out
imul
aas
loop
arpl
cmp
les
fld
and
insb
and
cmp
bound
jnp
je
pop
dec
test
nop
hlt
lahf
lret
mov
sub
xchg
inc
adc
popf
dec
mov
sbb
or
mov
stos
mov
outsb
mov
enter
mov
xchg
int3
enter
push
sub
pusha
xchg
sub
fisttpl
xchg
cmpsl
sub
cmp
mov
test
outsl
ja
mov
ffreep
sub
mov
outsl
iret
into
rclb
xchg
adc
jge
xor
and
jne
and
loopne
mov
inc
mov
pusha
adcb
mov
xchg
mov
pop
mov
mov
and
outsl
insb
pop
arpl
outsb
dec
jge
inc
iret
imul
pushf
je
out
ljmp
push
enter
mov
cwtl
mov
xchg
sbb
mov
xor
cld
push
fnstenv
xchg
aad
sub
test
xchg
push
ljmp
pushf
or
mov
mov
sti
fcompp
cld
das
push
je
imul
jge
ret
jp
ds
enter
stc
int
hlt
xchg
mov
inc
ljmp
xor
addr16
rcll
mov
cmpsl
pop
jle
negl
mov
bound
dec
fistl
gs
inc
push
fisubrs
lea
mov
mov
scas
popf
fs
xor
cmp
pop
std
mov
adc
mov
adc
pushl
loopne
fs
imul
cltd
stos
jae
movsl
inc
pop
dec
pusha
mov
inc
xor
inc
lods
push
mov
imul
pop
andl
jns
xor
ret
jno
pushf
pop
rol
sti
sbb
dec
add
cmpsb
fwait
dec
idivl
xchg
imull
pop
cmp
jecxz
pop
jb
imul
mov
pop
fisubs
mov
fs
mov
dec
lahf
add
repz
push
sahf
mov
jne
and
xor
out
ljmp
cmp
pusha
out
int
add
push
in
jno
aaa
xchg
cmc
push
fistps
and
pop
andb
xchg
aas
lret
mov
or
adc
pop
sbb
cmp
int
push
fxch
aas
ret
mov
sbb
rcll
mov
push
js
xor
je
or
into
std
movsl
testl
arpl
push
aas
mov
pusha
adc
jae
loope
adc
xchg
mov
cmove
adc
stos
jnp
add
out
dec
dec
pushf
pop
rorl
sbb
mov
mov
cmp
cmc
adc
fwait
pusha
pushf
les
push
lock
jg
cld
cs
sub
stos
push
movsb
cmc
sub
es
std
mov
jns
pop
add
mov
loopne
scas
outsb
addr16
jmp
out
push
dec
icebp
shl
cmp
cmp
mov
icebp
subb
int3
das
or
lods
adc
fwait
daa
xchg
movsb
add
xor
jns
test
and
test
jne
jne,pt
or
xor
xchg
pushf
divb
or
incb
push
imul
stos
rolb
and
dec
inc
imul
out
imul
xor
inc
pop
cmc
scas
jg
cwtl
hlt
insl
repnz
jge
in
cmp
gs
imul
push
leave
ficompl
jmp
cltd
movsb
das
jp
push
lods
xor
push
cmc
mov
jae
bound
and
cmpsb
dec
fmuls
jbe
push
xchg
ret
add
xor
adc
mov
jno
pop
mov
pushf
mov
push
icebp
aad
in
xchg
iret
push
adc
cwtl
daa
sub
inc
sbb
mov
ret
ret
push
xor
adc
mov
jle
add
jmp
mov
test
adc
adc
pop
rcrb
xchg
mov
push
lahf
add
pop
inc
adc
or
pop
sbb
mov
sbb
rcrl
inc
xor
dec
and
movsl
ss
loop
enter
dec
push
lcall
pop
repz
cs
add
insl
push
xchg
aaa
dec
jnp
mov
scas
aas
stos
sbb
fmul
inc
scas
push
dec
aad
cmpsl
scas
adc
fdivr
push
and
dec
test
or
adc
in
je
push
dec
fldl
sbb
ficompl
inc
into
ret
fsubrs
mov
push
sub
jno
xchg
jo
iret
loop
dec
dec
lods
jbe
mov
adc
aam
scas
pop
daa
push
ja
hlt
xlat
adc
cmc
xchg
mov
mov
scas
imul
int3
lea
inc
fwait
push
mov
faddp
sbb
add
clts
aam
repnz
lds
dec
ficoml
jp
test
cmp
push
jne
lret
mov
into
mov
call
sbb
cmp
cmp
loopne
in
sbb
add
or
cltd
jmp
dec
ljmp
or
insl
or
jno
inc
test
movsb
mov
enter
inc
loopne
icebp
popa
fldt
in
sub
aad
fisttpl
movsb
fdivl
pop
movsb
adc
fmull
cmc
ljmp
daa
rol
pop
and
xor
inc
dec
sub
in
cmp
jmp
test
and
inc
fmul
test
movsb
xchg
sbb
fwait
pop
adc
sub
dec
lcall
cmpsb
push
test
pop
xor
mov
push
je
idivl
test
cmpl
jg
mov
push
popa
pop
dec
test
cld
inc
lret
mov
fcomip
mov
in
push
cli
cltd
and
jae
sub
les
jb
pop
jmp
movsb
cmp
pop
xor
mov
fs
push
xor
dec
inc
dec
int3
pusha
and
pop
fisubrl
sbb
xor
icebp
ljmp
add
loop
mov
xchg
loop
rolb
mov
inc
sbb
xor
fisubs
jae
mov
lea
loope
pushf
fcoms
jecxz
xchg
lahf
int
clc
push
cmp
sub
insb
pop
sbb
test
inc
xchg
notl
cmp
xor
cmpl
pop
out
mov
fstpt
sbb
xchg
outsb
icebp
and
aam
sub
ljmp
dec
daa
cmpsb
and
cmp
sbb
movsl
push
add
xor
movsb
xor
push
push
mov
sbb
out
sub
lahf
lods
push
add
and
pusha
ds
aad
adc
mov
mov
mov
dec
std
mov
inc
inc
jle
cmp
dec
int
push
mov
mov
jecxz
and
movsl
ret
stos
adc
inc
test
xchg
sub
cmc
scas
jp
jne
cmpl
mov
jae
call
cmp
mov
push
mov
into
xchg
mov
mov
cmpsb
outsl
hlt
mov
out
dec
xchg
in
mov
bound
outsl
cmp
jle
adc
stc
cs
push
sub
fwait
mov
inc
sahf
sbb
iret
dec
ret
es
push
jno
out
mov
and
and
rcrb
adc
sub
inc
loopne
jbe
add
mov
push
and
arpl
fwait
jg
sahf
mov
mov
sub
add
call
mov
out
sub
fildll
push
in
stc
fcomp
sub
jno
cmc
ret
fwait
in
mov
cs
inc
sbb
stos
mov
push
repz
out
and
adc
jmp
sbb
xchg
aad
push
mov
push
push
jnp
push
dec
mov
mov
hlt
dec
ficomps
push
sbb
data16
in
cmovl
add
jg
fistps
test
push
cld
cmc
scas
add
pop
dec
test
pop
push
sbb
mov
xor
mov
mov
dec
jae
pusha
mov
dec
stos
add
scas
loopne
cmp
cmp
stos
sti
iret
mov
sahf
enter
xchg
in
add
jp
arpl
inc
ficoml
sahf
push
add
nop
addl
rorb
in
popa
test
lret
das
and
xchg
sti
and
les
and
xor
shrl
xchg
scas
jnp
mov
sub
jmp
xchg
pusha
jp
jae
jg
adc
mov
sbb
push
and
cmp
jmp
aad
fxch
lahf
out
xchg
or
sbb
fimull
dec
jb,pt
sub
lret
daa
xchg
sbb
xor
adc
hlt
pop
jbe
mov
aaa
in
inc
shlb
insb
mov
daa
mov
cltd
xchg
sahf
stc
ror
push
push
cmp
imul
lret
lods
stc
shlb
or
cmp
mov
fdivl
xchg
and
mov
repnz
cmp
pop
lea
call
je
jns
aad
mov
xor
or
mov
jno
mov
fldl
sbb
pop
stos
push
loope
neg
shll
sbb
lahf
jmp
addl
mov
enter
ljmp
push
push
push
or
adc
and
adc
stc
pop
and
xchg
push
and
out
jnp
push
mov
outsb
sub
pop
lods
mov
and
out
xor
test
clc
cld
push
xchg
lcall
mov
inc
test
lret
dec
sub
cltd
jnp
fnstcw
popf
cmc
xchg
pop
mov
xor
sbb
loop
and
out
xchg
jmp
and
mov
loope
pusha
bound
orl
jge
jnp
jle
mov
and
push
jne
push
cmp
ljmp
mov
cmc
push
and
in
cltd
aad
cs
inc
icebp
shll
into
add
push
jb
int
movsb
pop
xchg
lcall
push
test
outsl
pop
in
gs
xchg
roll
outsl
notl
cmp
ret
push
and
jecxz
push
enter
lea
das
and
pusha
pop
ss
inc
mov
push
or
je
flds
popa
fisttpll
xchg
ss
fisubs
mov
into
add
notl
fstps
jp
fstps
and
scas
push
jp
shrb
mov
in
inc
xchg
dec
push
mov
emms
cmp
outsb
pop
xchg
cmp
mov
add
add
push
sbb
sti
in
xchg
cmc
dec
popf
stc
sub
mov
sub
push
popf
adc
xor
sti
inc
push
and
mov
inc
or
sarb
mov
inc
and
cmp
xor
push
outsl
inc
mov
out
cltd
dec
lock
jl
xchg
out
mov
cld
jge
and
arpl
mov
cmc
in
into
shrb
in
pop
adc
push
jbe
push
push
mov
jecxz
clc
xlat
fs
xchg
jno
push
sub
shlb
xor
pusha
cli
sub
lret
inc
inc
inc
xchg
scas
inc
push
mov
insb
shrb
xor
jge
loopne
sti
push
aam
mov
cld
jno
mov
aas
cmp
add
fldt
adc
insb
nop
inc
aas
adc
sahf
std
subl
xorb
loop
out
lcall
cwtl
dec
fnstsw
cmpsb
out
leave
sbb
ret
ja
leave
scas
xor
xor
sub
jne
pop
addb
outsb
test
adc
push
fcom
and
sub
lret
test
jecxz
rcrb
movsb
sub
enter
pop
bound
shr
std
sarl
dec
loop
int3
out
adc
mov
faddp
icebp
out
mov
inc
xchg
mov
lret
push
lahf
add
jge
adc
ret
pop
xchg
nop
and
data16
roll
mov
cli
sub
push
je
jmp
mov
outsb
jnp
cmp
mov
inc
adc
in
fstl
sub
mov
push
adc
cmp
mov
repz
mov
adc
mov
mov
mov
leave
inc
inc
sbb
dec
imul
andl
fnstenv
jge
rorl
push
mov
add
lds
mov
sub
xchg
xchg
test
iret
push
data16
mov
dec
daa
xchg
pop
mov
push
nop
jecxz
pop
or
push
gs
dec
lea
shrb
mov
push
pop
pop
mov
xchg
mov
sub
out
add
shl
fs
dec
out
std
test
notb
shrl
enter
mov
aas
out
pop
stos
inc
jns
push
into
clc
popa
xchg
xchg
push
adc
cltd
bound
cmp
pop
xor
push
xor
jb
adcl
addl
push
add
cmp
daa
mov
mov
mov
test
push
lock
mov
and
cld
loopne
jg
or
int
pop
sbb
pushf
lods
add
cmc
scas
insb
adc
xchg
ja
out
test
shr
adc
lret
call
pushf
mov
loopne
cmp
cmp
fsubrp
fwait
xor
xor
sarb
icebp
ror
movsb
std
lea
loopne
fs
rclb
ja
cmpsl
pop
jno
pop
repz
sti
push
in
or
sarl
sub
pop
in
sbb
jp
pop
push
out
js
shrl
mov
enter
mov
push
add
dec
ficompl
subl
lods
sarl
sbb
push
add
ss
pop
xchg
test
and
shl
test
out
cmp
loop
mov
rolb
inc
loop
mov
and
jnp
mov
adc
sbb
jl
cmc
lods
scas
popf
pusha
xor
xor
push
pop
scas
pop
sbb
outsb
aam
cmp
adc
lahf
and
xchg
mov
xchg
sbb
sahf
ja
loopne
bnd
scas
sbb
xor
cmpsb
xor
sbb
xlat
out
out
sbb
pop
stos
idivl
jmp
mov
push
mov
scas
xor
jp
out
jle
es
xor
movsb
mov
jmp
jg
lahf
arpl
add
xchg
ss
jnp
pop
aaa
mov
and
in
mov
jp
and
addr16
cwtl
push
cld
adc
imul
pop
sub
das
xor
push
or
jmp
mov
outsb
mov
subl
sbb
cmp
out
fnstsw
loopne
add
sbb
jle
pop
inc
and
add
fs
push
rcrl
mov
or
jg
dec
scas
out
mov
or
aad
and
test
les
xchg
into
push
cltd
push
addl
test
xor
ret
and
cmpsl
dec
roll
dec
insl
cmpsb
and
test
insl
lret
xor
jns
xchg
fists
hlt
out
mov
mov
inc
repnz
push
ljmp
dec
scas
add
push
sub
and
jmp
into
cmp
cmp
cmpsl
cmc
mov
jb
push
mov
cld
push
pop
or
cmpsb
adc
sbb
pop
add
jb
cmp
adc
stos
enter
push
popa
jmp
das
add
or
in
pop
xchg
push
cmpsb
push
xor
sbbb
aaa
mov
addr16
rorb
pop
sarl
sub
mov
mov
lahf
and
out
jge
xchg
mov
inc
sbb
jecxz
or
mov
scas
push
loopne
or
lcall
scas
xchg
mov
push
mov
mov
fcmovnb
out
xchg
mov
sbb
jb
stos
and
push
adc
xchg
jae
frstor
iret
out
jge
cmp
add
push
cwtl
int3
xlat
insb
fsubrs
mov
loope
lcall
jnp
clc
mov
mulb
fidivl
je
imul
cvtpi2ps
int3
or
sub
scas
repz
mov
push
jmp
std
divb
fisubrl
pop
in
pop
mov
mov
popf
stos
mov
dec
dec
scas
cmp
fisttpl
vpmacssdqh
into
push
js
pop
test
mov
stos
xchg
fidivs
jle
push
outsb
add
dec
lret
dec
out
adc
negb
imul
xorl
jo
xchg
mov
rclb
dec
or
jl
fs
ror
cmpsb
js
in
and
lds
xorb
add
xlat
orl
and
push
inc
adc
bound
into
cli
js
sbb
or
mov
or
jge
hlt
jo
inc
stos
mov
outsl
mulb
stc
outsb
in
fcmovu
pop
mov
js
movsl
and
jg
loope
arpl
lret
pop
adc
out
xor
sub
ret
fildll
xor
mov
frstor
shl
bound
pop
addb
adc
aaa
push
mov
insb
int
insb
xlat
pop
dec
out
mov
mov
xchg
pop
adc
sub
test
mov
cltd
mov
push
add
xchg
pop
jle
stos
mov
adc
mov
xchg
or
push
loopne
notl
popf
mov
sub
and
cmc
lret
lods
xchg
mov
iret
pop
mov
xor
jno
fidivl
xorl
inc
clc
fcomip
xchg
mov
mov
jae
cmpsb
scas
push
sub
fucomip
dec
cmpsl
inc
xchg
fsubrs
dec
inc
lods
add
shr
out
adc
fstpl
insl
lea
pusha
cmp
popa
loop
repz
fwait
sahf
mov
repz
xchg
ljmp
fdivrs
lcall
xchg
dec
pop
xchg
cmpsl
push
ss
pop
xchg
int3
movsl
lock
inc
test
fisubs
mov
cmovbe
mov
sahf
xlat
idivl
gs
cli
ret
inc
int3
es
addr16
ja
je
pop
sub
fsubrl
inc
pusha
out
jl
push
rorl
ja
ds
pop
sub
gs
adc
inc
pop
int
aas
ficoms
jp
out
cmpsb
sbb
stos
das
bnd
sub
push
sbb
pushf
xchg
or
jecxz
mov
gs
xchg
fidivs
es
adc
into
repz
fucom
mov
arpl
ret
inc
nop
cli
enter
adc
aam
pushl
sbb
das
xchg
xchg
xchg
jmp
lods
nop
pop
into
std
pushf
pop
iret
mov
adc
xchg
sub
pop
mov
jnp
cli
aad
std
push
mov
mov
shrl
out
pop
jmp
rclb
sub
scas
cmp
cmp
jb
lcall
and
ds
sub
pop
orb
lods
popf
lock
popa
push
push
or
adc
loope
pop
mov
int
add
or
dec
les
loope
cmp
cltd
xchg
sub
add
or
aad
dec
iret
shl
fdivrl
or
es
test
push
sbb
fbstp
fs
leave
cs
mov
fidivs
xor
push
test
jecxz
jno
pop
xor
mov
cmp
sub
dec
jnp
popa
popl
and
fwait
es
mov
scas
fwait
call
mov
push
cmp
inc
push
ja
daa
inc
xor
push
push
insb
lret
bndstx
xchg
test
fistps
push
cld
mov
test
sbb
sub
mov
mov
xchg
cmc
fcmovnb
adc
loope
xchg
sahf
pop
dec
aaa
dec
std
or
ret
hlt
rorl
adc
js
lahf
scas
fldenv
cltd
ficoms
mov
je
and
or
enter
stos
xor
adc
mov
loopne,pt
sbb
popf
push
or
fsubr
dec
into
jae,pn
adc
dec
mov
stos
loope
push
jle
jno
aad
aaa
cmp
mov
hlt
jnp
sbbb
stos
mov
jecxz
cmpb
lock
and
mov
lcall
sub
jl,pt
int
out
out
sbb
cs
ds
cmp
in
push
sub
cld
xchg
inc
pop
cmp
hlt
sahf
ret
push
pushf
jmp
jbe
outsb
mov
cmp
mov
push
ds
out
negb
insl
pushf
push
and
pminsw
fbld
das
fucomip
jg
adc
adc
fldcw
xchg
and
inc
cli
dec
repnz
mov
adc
lea
dec
adc
out
dec
aad
fcoml
in
push
cmp
pop
movsl
push
sbb
test
or
add
mov
cli
sub
fwait
add
int3
lods
xchg
popf
xchg
jns
push
cmc
aas
out
mov
inc
add
cwtl
shrl
das
inc
jmp
aam
jnp
xchg
fnstenv
mov
add
sbb
mov
scas
sub
stos
jg
fdivrp
dec
in
clc
mov
cmp
and
and
sub
mov
push
fstpl
mov
inc
in
adc
jo
lock
xor
dec
mov
mov
fsub
loop
fwait
adc
jle
and
inc
fisubrs
xchg
enter
cld
adc
cltd
jmp
aad
add
push
xchg
lea
ret
cmp
pop
xchg
jae
loop
mov
cmp
ds
xchg
out
and
jmp
jl
push
sbb
inc
fadds
leave
dec
xchg
fbstp
in
repnz
xchg
ret
pop
stos
jnp
push
push
jnp
std
cli
adc
fsubl
lds
push
scas
fistpl
xor
jmp
mov
cmc
jmp
pop
mov
inc
je
fcomi
adcl
pop
inc
test
push
test
cwtl
out
out
sarl
int
xchg
lods
mov
xor
mov
imul
xchg
mov
jg
js
out
mov
pop
ret
aad
inc
scas
inc
add
cwtl
mov
or
repnz
dec
repz
outsb
pop
jmp
push
divb
fwait
outsl
fnstsw
and
fdivrl
das
mov
pop
or
movsl
xlat
xor
pop
jmp
push
cmp
xlat
pusha
inc
or
mov
mov
xor
push
push
fistpl
xor
loope
in
push
jp
jp
mov
ja
imul
mov
mov
std
insb
push
mov
mov
and
popa
mov
movsb
ficompl
or
jns
mov
ljmp
loope
xchg
ljmp
dec
inc
push
push
mov
cmp
popa
mov
addl
push
arpl
rorl
mov
cltd
mov
xor
sub
and
mov
push
repnz
mov
adc
hlt
pop
pop
cs
ljmp
mov
ds
aaa
imul
jo
cld
test
test
iret
dec
or
or
jae
jge
std
movsl
xchg
dec
filds
push
ljmp
push
jne
mov
mov
out
out
mov
sbbb
aam
bnd
mov
jne
dec
push
or
jge
push
or
add
mov
mov
lock
mov
mull
movsl
push
dec
shll
add
pop
faddl
sbb
push
ret
mov
mov
in
pop
push
stos
jo
ljmp
mov
std
push
push
mov
add
mov
mov
inc
and
xchg
mov
and
shlb
lahf
adc
stc
mov
or
inc
int
xchg
sbb
int3
mov
divb
xor
mov
shrb
sbb
sub
cld
inc
cmpl
mov
daa
movsb
int
cmp
cltd
sbb
xor
and
shl
and
pop
cmpsl
jge
mov
sub
in
mov
ljmp
push
stc
jmp
test
jp
dec
mov
test
inc
inc
fiadds
movsl
hlt
xchg
or
sbb
ja
clc
test
inc
pop
out
pop
jb
mov
xlat
inc
outsl
jb
ret
js
jno
dec
orl
add
jmp
cmc
test
cmp
out
in
sar
lds
aas
mov
and
or
call
imul
mov
fsubrs
cmp
repnz
xchg
andl
inc
cli
and
or
mov
in
mov
in
pop
fnstcw
shl
jne
inc
push
mov
lods
jo,pt
mov
shll
pop
and
cltd
loope
jno
pusha
inc
in
fdivs
test
stc
aam
dec
adc
mov
int
jne
mov
fwait
inc
mov
mov
mov
push
hlt
and
push
sbb
sti
and
xor
or
sbb
sub
jbe
in
push
mov
adc
or
push
xor
popa
sbb
add
outsl
bound
lods
js
shl
sbb
add
push
test
xchg
mov
and
xchg
sub
xchg
aas
sub
ror
mov
int3
jecxz
addr16
pop
popa
jbe
les
xchg
cltd
or
add
add
shlb
mov
les
jb
xor
add
xchg
jne
or
push
xchg
fcom
andb
lret
adc
movsb
xchg
fimuls
jb
stc
push
mov
test
add
cld
ss
cmc
or
gs
push
stos
popl
dec
mov
test
xor
pop
pop
adc
mov
sub
and
jg
sbb
shlb
rol
out
mov
popa
clc
aaa
push
sbb
icebp
or
shlb
je
jecxz
shl
mov
negb
adc
dec
jo
aas
int3
mov
nop
inc
pop
lock
divb
xchg
hlt
scas
push
mov
or
pop
fidivs
hlt
subb
loopne
push
mov
into
inc
mov
jg
mov
sbb
sti
mov
jne
cmc
add
aas
leave
movsb
sbb
pop
scas
jnp
dec
jg
loopne
pop
fs
and
xor
repnz
adc
mov
clc
xchg
jmp
sahf
add
inc
loope
ljmp
pop
in
cmp
add
aad
xor
pop
js
fsubl
cmc
pop
fxch
shlb
repz
jmp
mov
sub
cmp
mov
cmp
lret
pusha
adc
push
push
and
xchg
std
outsb
bound
sbb
mov
or
push
in
fcoml
fwait
cmc
mov
mov
xor
pusha
add
inc
scas
lods
mov
nop
fadds
mov
icebp
les
xchg
ja
leave
and
add
mov
add
stos
jl
sub
sbb
fldl
jbe
jle
rorl
add
sarl
test
xchg
inc
into
xchg
shl
jo
jle
out
xchg
cli
out
jmp
fs
test
or
ljmp
pop
sbb
lahf
enter
jno
nop
in
and
mov
cmp
pop
out
dec
dec
mov
dec
outsb
cs
push
fwait
or
pop
pop
movsl
xorb
xchg
sub
shll
inc
pusha
and
cmp
dec
sbb
cmp
imul
add
es
clc
push
and
xlat
jg
dec
mov
adc
repz
or
or
sbb
outsb
adc
jae
mov
mov
ljmp
std
jns
sysret
xchg
mov
lret
xchg
push
loopne
lcall
and
push
push
sbb
sbb
push
mov
mov
inc
cmp
test
iret
call
xchg
sarl
sub
xchg
xchg
enter
inc
jp
pop
scas
in
fsubrs
loope
push
xchg
mov
inc
sub
mov
cmp
and
fcomi
and
movsb
xor
cli
mov
movsb
daa
clc
dec
sub
inc
sbb
sbb
fimuls
or
je
stc
sbb
adc
pop
icebp
push
cmpsl
xor
cmp
je
insl
ljmp
fdivl
pop
pusha
fwait
and
shl
dec
mov
lods
lcall
pop
lods
and
test
aad
aas
pop
bound
mov
jg
jmp
cmpsl
dec
cmp
out
movsb
dec
dec
mov
inc
in
leave
fmull
jnp
and
pushaw
jae
iret
mov
mov
lods
sbb
cmp
cld
xchg
jmp
sahf
lret
inc
adc
test
test
jae
das
in
adcl
add
mov
rclb
test
test
movsb
rorb
xchg
or
lods
jmp
fisttpl
inc
xchg
dec
rclb
xchg
mov
pop
inc
and
jp
lods
pop
cld
fistpl
ror
jno
mov
mov
push
cmp
jno
xchg
push
pusha
int
mov
and
out
jns
inc
add
jmp
jns
clc
shlb
push
test
addr16
xlat
outsl
in
adc
cld
add
push
lock
mov
ret
stos
dec
mov
push
add
and
inc
jmp
lock
fistps
xchg
push
scas
and
mov
shl
mov
jns
xchg
push
fbld
push
data16
popa
or
cltd
sub
push
inc
pop
jmp
cs
jne
test
sub
fimuls
jnp
push
loopne
xchg
or
andl
xor
mov
cmpsl
jno
xor
leave
mov
and
jle
sbb
adc
jnp
clc
xor
or
lcall
les
pop
icebp
add
mov
stos
xor
arpl
repz
xor
cmpsb
movl
add
das
sbb
rcl
xor
sbb
daa
mov
sub
outsl
mov
xchg
cmp
mov
das
enter
fadds
pop
popf
or
mov
inc
stos
ficoms
or
push
push
mov
xlat
out
or
sbb
and
imul
sub
push
jge
cmc
jmp
fcmove
add
das
jmp
repz
cmp
push
dec
mov
aas
pop
mov
daa
mov
imul
scas
and
xchg
lods
std
adc
loopne
outsl
cmp
mov
rcrb
gs
dec
inc
xchg
or
stc
hlt
inc
xor
ja
mov
leave
shll
dec
loope
negb
jl
mov
ljmp
test
negb
push
cs
cmp
sbb
addr16
outsb
cwtl
adc
xchg
repnz
add
bound
pushf
mov
cmpsl
mov
daa
mov
jp
push
mov
andl
in
popa
push
xor
fs
xchg
loop
adc
in
stos
mov
lret
lods
and
insl
ss
jg
xchg
add
ja
jno
popl
or
outsb
and
jo
hlt
scas
push
adc
call
out
sbb
xchg
fstps
jns
inc
leave
daa
dec
cmp
ljmp
adc
inc
mov
ffreep
adc
subl
ret
repz
enter
add
jae
stos
xchg
lds
add
sub
in
push
fcmovbe
xchg
and
int3
rcrb
shlb
dec
imul
mov
pushl
sbb
popa
mov
js
ds
or
pushf
ret
push
pop
incl
js
test
jl
add
dec
inc
and
mov
dec
mov
outsb
fiaddl
or
into
aas
fadd
cwtl
cmp
nop
sub
jo
push
inc
movsl
nop
push
ret
sar
sbb
sbb
dec
movsb
roll
adc
in
dec
lcall
or
add
lcall
lahf
out
xchg
cmp
dec
cmp
icebp
test
int
dec
jl
stos
jge
ret
adc
adc
push
jo
add
stc
cmp
ss
jp
in
test
fnstenv
pop
xor
adc
mov
bound
jb
mov
fiadds
ss
and
shlb
jmp
xor
push
iret
inc
adc
scas
enter
lea
cmc
into
mov
fbstp
les
cmp
js
mov
pop
dec
inc
sbb
cmp
mov
ret
ja
sub
ficompl
data16
pushf
jnp
int3
sub
mov
jmp
out
stc
jo
lock
les
push
lock
xchg
lea
add
and
aaa
jp
jl
inc
xchg
mov
jle
jae
push
and
mov
int
fsubl
popa
sub
jns
xchg
mov
mov
mov
adcb
fwait
adc
mov
fwait
pop
mov
cmp
scas
add
mov
mov
and
and
xor
cltd
ljmp
fidivs
stc
pop
add
dec
ss
xchg
xchg
jno
push
roll
fwait
xor
jl
pop
jnp
inc
jmp
fwait
sbb
test
mov
mov
jnp
xchg
and
adc
js
sbb
sbb
sbb
jmp
and
je
popf
dec
push
inc
loope
stos
dec
adc
sbb
shrl
adc
insb
jo
xchg
push
testb
inc
jmp
fwait
pop
mov
jns
push
sub
and
and
adc
ja
xor
es
icebp
and
fildll
mov
xchg
ret
pop
add
es
loope
push
and
ss
and
imul
movsl
pop
and
bound
mov
out
ds
lahf
sub
push
xor
xchg
xchg
aam
sbb
dec
shlb
sbb
pop
movsl
jecxz
enter
and
hlt
jbe
test
cmpsb
es
pop
adc
sub
lock
call
push
aas
xchg
and
dec
push
call
int
push
js
pushf
sub
jne
mov
nop
dec
adc
fistl
ds
sbb
jmp
outsl
subb
ffree
pop
mov
ficoms
mov
shl
je
sub
jmp
std
jge
cmc
adc
xchg
movsl
xor
mov
jmp
dec
cmp
mov
rol
xchg
inc
lods
cmp
push
insb
gs
repz
stos
stc
fwait
jge
aad
popf
mov
xchg
aam
push
and
scas
fistpl
je
sub
mov
pop
rcrl
inc
push
pop
cmp
inc
adc
lahf
xchg
rcrl
sbb
daa
fildll
movsb
lahf
lret
xchg
pusha
mov
sub
pop
mov
or
ret
xchg
cmp
das
sbb
es
push
divb
enter
sub
or
imulb
pop
mov
test
loope
mov
mov
xchg
mov
fmuls
and
rol
xor
mov
in
outsl
mov
dec
xor
pusha
adc
fwait
jp
pop
or
sub
filds
lahf
jecxz
test
scas
cmc
push
movsb
xchg
int3
sbb
loopnew
jae
and
lahf
jge
jbe
fwait
jbe
out
sbb
lret
cmp
dec
xchg
xor
cmovno
push
lahf
iret
dec
repnz
cmp
outsb
scas
mov
ja
pop
jno
pop
dec
hlt
sub
sahf
fwait
arpl
out
fisubs
push
aaa
inc
bound
jne
lcall
cmp
cmpsl
adc
add
mov
aaa
repz
lock
lret
enter
xchg
inc
cmc
mov
push
imul
dec
aad
xchg
inc
xchg
bound
cmpsl
pop
pop
mov
out
out
xlat
and
or
outsb
in
roll
or
jno
inc
jp
or
xchg
data16
lret
data16
addr16
call
divb
and
js
aas
xchg
mov
iret
addr16
fs
jae
adc
jp,pt
enter
mov
hlt
js
ret
fwait
xor
mov
mov
mov
xchg
shrb
ljmp
js
jnp
js
sub
or
or
push
adc
in
pop
cmpsb
shlb
and
movsl
lret
cs
fildll
aas
nop
push
aaa
arpl
pusha
jg
subl
int
lods
leave
adc
rcrb
sub
jp
and
insb
sti
call
dec
mov
pmulhw
inc
mov
mov
les
mov
clc
jbe
pop
sahf
pop
jle
test
add
outsb
pop
xchg
ljmp
jbe
fwait
jo
repz
lcall
sbb
out
push
adc
sbb
pop
pop
adc
mov
je
popa
repz
std
movsl
stos
stos
sbb
xchg
pusha
out
pop
aas
cld
lahf
sbb
mov
xchg
addr16
pop
adc
sti
add
mov
mov
fwait
xchg
inc
lcall
add
dec
mov
lods
mov
nop
pop
inc
es
mov
xchg
pop
stos
sahf
imul
xor
push
mov
scas
test
xchg
mov
andl
sbb
inc
stos
into
sarb
add
test
dec
scas
xchg
adc
sbb
xchg
aas
fs
xor
arpl
pop
mov
int3
mov
xchg
sbbb
lods
cmc
inc
jo
punpckhdq
sbb
jo
add
sub
mov
xchg
test
push
and
ret
inc
sbb
stc
lahf
jmp
fstl
out
outsb
adc
adc
dec
push
arpl
xchg
pop
push
aam
push
push
mov
push
stos
mov
pop
test
shr
pop
icebp
cmp
movsb
mov
lds
iret
shrb
in
aad
ret
shrb
jl
and
pop
xlat
mov
lds
push
std
mov
inc
mov
frstor
sub
clc
repnz
fstl
in
cltd
pop
scas
leave
rorb
test
and
repnz
jno
or
std
mov
and
mov
test
cmp
fldt
pop
or
sub
adc
sbb
rorb
ret
mov
jp
push
mov
pop
mov
xor
adc
or
fwait
pop
xor
imul
loopne
out
mov
ds
sahf
aas
call
add
inc
jmp
mov
jecxz
jmp
sahf
mov
jp
jle
out
cmpsb
pop
nop
mov
pop
xor
ret
pop
adc
jne
fs
in
jnp
mov
pop
dec
int
sahf
mov
lcall
test
mov
es
push
lret
fs
lret
lods
scas
pop
cmp
mov
inc
cwtl
jmp
pop
jle
testb
sub
mov
adc
jns
mov
cmp
lods
mov
cmp
repnz
cmp
test
push
stc
std
repz
pop
mov
in
push
sti
fildl
push
push
xchg
outsl
mov
dec
out
dec
aas
inc
mov
pop
ds
hlt
xor
pop
cltd
xor
fcompl
adc
out
les
test
xchg
adc
and
push
mov
and
mov
das
in
fsubrp
jbe
dec
fs
in
push
and
mov
lcall
lcall
xorl
lea
pop
lcall
inc
pop
pushf
xchg
xchg
arpl
iret
orl
nop
ljmp
sbb
push
pop
xlat
insl
or
ja
lods
popf
popf
jb
insb
jno
inc
inc
test
adc
arpl
xor
xchg
repz
fucom
pop
pop
jnp
or
xor
cs
hlt
andl
mov
jnp
jl
cmpsl
int
shrb
pop
jmp
das
sbb
leave
sub
aas
cwtl
mov
dec
shr
fstpl
pop
add
xchg
and
loop
cwtl
cmp
push
adc
mov
in
adc
xchg
and
sub
addl
xchg
inc
xchg
fisubl
push
test
ficoml
sbb
mov
into
test
mov
mov
in
lcall
das
loop
inc
popf
pusha
cmp
sahf
lret
mov
fistpll
mov
xor
lods
ffreep
mov
aam
andb
enter
or
clc
adc
loop
push
jnp
push
sbb
fidivrl
push
pop
lcall
aad
sti
adc
and
subl
push
rclb
cld
fneni(8087
pop
ja
sub
adc
rcrl
sbb
pop
in
adc
add
stos
cmpsl
sub
loope
or
and
jno
hlt
dec
xchg
cmp
out
sbb
ljmp
pop
imull
pop
js
and
fs
dec
mov
lret
pop
scas
mov
rolb
lcall
repz
sub
pushf
cltd
pop
popa
lds
jp
and
test
aaa
sub
ret
fwait
stos
and
adc
mov
push
adc
aaa
or
sbb
lock
mov
ret
lods
roll
pop
fistl
mov
test
push
fwait
gs
jb
jb
mov
int3
or
pop
repnz
pushf
mov
ljmp
lods
shrb
lret
xor
mov
mov
jbe
lret
lods
rclb
out
cmpsb
loope
aaa
hlt
hlt
adc
lahf
mov
mov
jb
xlat
xor
adc
xchg
cmp
jae
pop
xchg
ljmp
mov
fs
sahf
xchg
sbb
pop
mov
lea
xor
xor
mov
mov
push
sub
mov
xchg
cmp
lods
and
xor
ret
push
jle
fucomi
jnp
adc
add
lock
cmc
dec
dec
sahf
mov
mov
stos
rorb
push
test
jmp
sbb
es
std
lret
add
adc
inc
mov
jo
jb
push
adc
mov
lods
or
cld
cmp
sahf
rcr
inc
int
adc
jle
ljmp
popf
je
sbbl
mov
sub
loope
sarb
pop
lods
mov
stos
dec
int3
cmp
mov
and
push
pop
sahf
movsb
dec
add
mov
add
in
mov
cld
jle
mov
ja
pop
cmc
int3
jp
inc
lret
inc
call
push
ficoms
jg
clc
inc
insb
xchg
push
popf
fdivrs
push
testb
out
push
fimuls
rcll
int3
or
mov
sar
xor
lret
icebp
inc
sbb
pop
xor
and
gs
cwtl
push
mov
sbb
lea
fistl
test
pop
icebp
sahf
pusha
fsubrp
mov
cmpsb
xchg
lock
push
loope
push
mov
push
mov
notb
sub
inc
rcr
or
int
imul
ds
adc
cmp
in
mov
shl
out
je
push
add
add
dec
call
shll
jb
cli
in
test
popa
mov
jmp
loope
adc
xchg
add
imul
fdiv
sub
aaa
cltd
loopne
outsl
test
mov
dec
mov
cmp
lock
mov
arpl
xlat
push
mov
ljmp
lret
pusha
xchg
xlat
sahf
aas
dec
lret
xchg
push
xchg
lret
fldcw
insb
int
xorb
out
xchg
subl
mov
test
sub
fistpl
or
enter
ss
addl
pop
jns
pushf
xchg
ret
mov
in
push
out
stos
xor
iret
ds
dec
push
bound
xorl
orl
test
out
mov
movsb
and
inc
movsb
sbb
nop
insb
sbb
pop
fdivs
cmp
mov
inc
mov
add
mov
push
lahf
cmp
cmp
push
fisubrl
pusha
ret
outsb
xor
xchg
fdivrs
mov
push
and
lds
mov
nop
bound
arpl
cmpsl
mov
or
cmpsb
stos
outsb
std
inc
inc
mov
movsl
sbb
mov
xchg
or
lahf
sbb
test
rcl
jge
adc
ja
aad
xchg
push
mov
mov
cmp
push
mov
sbb
sbbl
dec
stos
xchg
mov
jo
dec
cmc
push
mov
aam
xchg
mov
push
loop
in
mov
inc
xor
inc
call
stos
or
dec
push
add
mov
mov
add
call
aaa
add
lcall
xchg
stc
push
mov
jle
sbb
sbb
sarb
or
sbb
insb
mov
or
leave
sbb
shl
enter
jp
xor
mov
mov
xchg
cld
test
dec
out
mov
adc
js
mov
fmull
hlt
sbb
inc
mov
in
mov
xlat
adc
arpl
stos
stc
in
int3
pop
mov
mov
inc
pop
int3
jle
push
fcmove
sub
mov
push
mov
mov
ds
sbb
stos
pop
test
xor
sbb
xor
stc
jns
xor
js
cmp
or
pop
test
int
lock
orb
cmp
inc
xorl
add
leave
xor
mov
lods
jne
jno
cmc
cmp
iret
hlt
inc
xor
in
stc
inc
push
adc
pop
jle
imul
ret
sub
pusha
jno
jns
movsb
std
mov
insl
push
je
mov
std
push
push
jecxz
movsl
sahf
sbb
mov
fucomip
stos
scas
je
push
mov
lcall
xchg
ret
clc
enter
and
inc
testb
adc
insl
hlt
js
mov
les
fisttpl
sahf
jge
add
xchg
mov
sbb
in
xchg
outsb
and
shlb
sub
outsl
xchg
in
adc
imul
jle
cmp
movsb
add
cltd
sarb
mov
aaa
addr16
out
or
sub
adc
sbb
dec
outsb
jns
jmp
inc
cmovle
out
insl
jns
les
scas
cmp
fs
xchg
outsl
cmp
add
or
filds
repnz
hlt
out
cwtl
fwait
jg
dec
xchg
sbb
fistl
pop
inc
xor
sub
jg
test
jno
out
in
fcompl
or
mov
mov
adc
add
dec
cmp
inc
shrl
incb
adc
hlt
fwait
aas
loope
xor
shr
xchg
sbb
imul
iret
test
push
sub
scas
adc
jp
xchg
dec
negb
gs
dec
cwtl
out
and
ss
pop
mov
and
xor
fs
cmp
ljmp
sub
sti
dec
rclb
subb
pushw
out
aas
dec
cld
xchg
push
and
mov
data16
cld
cmpsl
xchg
out
xor
cmpsb
outsb
sti
pop
fcmovnb
mov
cmp
pop
int3
cmp
sti
roll
in
stos
mov
mov
icebp
or
pusha
adc
mov
test
push
shlb
outsb
aas
cmp
mov
call
faddl
cmp
arpl
xor
cmp
icebp
inc
cs
idiv
fs
push
add
insl
mov
lock
scas
test
adc
popf
push
or
mov
or
push
mov
imul
inc
stc
dec
lods
inc
out
sbb
mov
cwtl
ss
test
push
xor
call
mov
inc
push
gs
outsl
push
inc
scas
dec
lret
shlb
pop
lea
xchg
int3
mov
cmp
sub
jmp
ret
mov
inc
rol
and
push
movsb
insl
outsb
jne
push
dec
inc
mov
subb
add
lea
outsl
es
test
push
cmp
or
aad
mov
or
in
xchg
lret
in
test
fidivrs
cs
adc
jo
in
aaa
ret
fisubrl
repz
fdivs
sbb
dec
cmpsb
test
jne
adc
int
je
mov
inc
rol
mov
jno
and
jl
stos
cmp
cmp
cmp
imul
sub
mull
xchg
insb
pushf
mov
pushf
mov
filds
cmp
pusha
outsb
pop
and
mov
rcl
clc
aad
sub
idivl
push
je
jl
mov
push
adc
cmpsl
xchg
fs
dec
in
repnz
js
inc
fstpt
clc
mov
inc
int
mov
mov
fsts
sahf
insb
pop
mov
jb
dec
adc
adc
mov
xchg
hlt
dec
mov
faddl
pop
cmpsl
jmp
insl
gs
pop
out
iret
and
or
loop
rorl
enter
out
mov
ret
into
notl
bound
sbb
mov
xchg
dec
mov
and
mov
cmp
leave
ret
jno
xor
jo
test
iret
lret
mov
rorl
push
shlb
lret
inc
ja
fstl
fcomps
mov
shl
jg
mov
xchg
mov
pop
pushf
inc
fmuls
push
decl
xchg
les
adc
sahf
inc
pop
cs
dec
scas
lods
int
mov
dec
cli
or
in
sbb
mov
decl
cmpsl
pop
cmp
imul
insb
call
ret
and
inc
inc
sti
rclb
adc
std
enter
ljmp
inc
fbstp
cli
jnp
lods
mov
push
xor
ljmp
push
adc
adc
sbb
or
and
push
cwtl
fnstsw
testl
scas
ljmp
fbstp
repnz
repz
outsb
addl
sub
sub
outsb
mov
push
shrb
push
jno
jns
sub
lahf
cmp
lfs
adc
and
fiadds
adc
lcall
add
call
pop
xchg
jnp
jecxz
sbb
lret
mov
dec
push
inc
imul
addl
cmp
pop
push
pop
out
cld
aad
ficoms
loope
push
dec
mov
push
scas
jb
push
das
push
pop
sahf
sbb
mov
mov
or
adc
cld
lock
mov
cmp
mov
lds
xchg
xchg
cmpsl
fldcw
cmc
imul
push
push
cmc
pop
mov
mov
sub
add
push
push
jp
div
xor
out
cwtl
iret
fs
push
out
mov
xchg
mov
jle
fsts
out
in
scas
push
faddp
xlat
call
cmp
daa
and
and
adc
fsqrt
cmpsb
pop
shlb
stc
sbb
sub
daa
and
push
inc
lcall
sub
inc
in
mov
inc
lods
in
jmp
shll
adc
xchg
mov
or
rorb
mov
dec
lahf
arpl
mov
mov
cmovno
pop
ret
gs
xor
pop
sub
dec
and
add
pop
inc
cmp
push
push
push
xor
repnz
ss
sub
mov
sub
push
ja
sbb
mov
outsb
mov
pop
ret
daa
cmp
mov
jmp
or
pop
inc
pop
cmc
xchg
shll
xlat
mov
fnstsw
add
xchg
scas
add
cmp
jb
xchg
mov
xorl
push
inc
xchg
mov
scas
notb
stos
into
stos
mov
sub
xchg
or
jnp
je
jnp
xor
insb
xlat
pop
cmp
or
mov
loopne
mov
xchg
xor
mov
xchg
inc
ss
adc
or
adc
inc
js
sub
aam
enter
dec
jno
int3
push
dec
lahf
lea
lcall
or
lods
and
jp
aad
jge
dec
test
jb
outsb
mov
xlat
aad
mov
xor
popa
bound
lods
lret
loop
cli
shrb
xchg
stc
xchg
jno
ja
enter
push
fimuls
sub
cltd
ret
es
push
ret
xorl
or
mulb
pop
maskmovq
inc
inc
sub
adc
push
into
jae
fstps
mov
out
pop
jno
inc
andl
sbb
sub
cmpsl
dec
cli
xor
adc
xchg
bound
push
fbstp
sub
lahf
sub
add
xchg
cmp
mov
cld
mov
mov
mov
add
dec
cmp
push
outsl
adc
jno
mov
fidivrl
xchg
sub
roll
je
jl
pop
jmp
xchg
jae
dec
push
xlat
xor
or
pop
repz
sub
cmp
into
mov
mov
js
and
insb
adc
int
stc
fdivrs
in
pop
inc
jg
pop
jo
lahf
dec
outsl
jmp
inc
sarl
mov
cmpl
sbb
rcr
xchg
jge
loope
aas
xchg
out
jl
push
mov
jns,pt
movsb
lcall
xchg
xchg
dec
out
adc
sbb
lock
lahf
insb
das
cli
mov
sbb
add
jl
cwtl
bound
int
aaa
mov
fwait
dec
dec
fcmovb
sti
jbe
jne
rolb
mov
add
add
mov
inc
aam
nop
arpl
mov
cmp
sbb
mov
push
push
subl
es
cmp
pusha
sbb
inc
dec
or
jae
mov
mov
jle
dec
sbb
push
mov
sti
xchg
mov
repz
sbb
push
in
jo
call
cs
imul
stos
adc
mov
repnz
mov
mov
fists
sbb
fld
add
push
xchg
mov
mov
adc
inc
xor
inc
dec
xor
cmpsl
fstps
fs
jo
and
outsl
pushl
fwait
add
fucomp
sub
fisttpll
push
adcb
push
dec
enter
mov
into
jo
cmpsl
flds
fs
mov
sub
xor
ret
bound
mov
and
xor
xor
or
inc
aam
dec
dec
test
nop
mov
mov
aaa
aad
cmpsb
fiadds
mov
and
loopne
insl
xchg
insb
adc
into
jmp
and
xchg
and
sbb
xchg
pop
xor
in
mov
cmc
push
sbb
jle
inc
dec
and
loope
cmp
loopne
jb
and
dec
cwtl
inc
in
sub
jle
adc
mov
add
jg
shrb
cld
jns
cmpsl
rorb
sub
cmp
sub
fstpl
sub
packuswb
push
pop
imul
add
dec
sahf
stos
push
and
cmp
and
out
xor
in
shll
lods
cltd
xchg
test
nop
sub
loop
loopne
dec
jmp
jecxz
aaa
mov
aaa
popf
rcrb
aad
pop
loope
xchg
inc
mov
rorb
addr16
sub
push
cmp
xchg
test
mov
inc
es
les
fwait
mov
inc
imul
dec
fsubp
enter
loopne
dec
loopne
xchg
sbb
mov
cmp
in
dec
mov
inc
and
idiv
bound
adc
adc
sub
repz
cmp
int
adc
push
out
mov
adc
mov
test
push
xor
xlat
push
jle
jl
movsl
adc
dec
xchg
addl
aaa
cmp
sub
mov
mov
add
push
inc
int
test
xor
jae
mov
pop
outsl
pushf
sub
loope
push
sbb
sub
adc
aam
xor
incb
xchg
pushf
jge
rcl
pop
ss
fucomip
xchg
mov
pop
incl
dec
popf
xchg
xchg
loope
addr16
sub
rorb
push
jne
and
and
orl
adc
mov
or
inc
dec
xchg
repnz
mov
outsb
push
lret
add
jne
xchg
mov
inc
fwait
inc
jb
xor
loopne
movsb
into
and
test
fdivl
add
or
and
leave
sti
and
sbb
pop
xchg
xor
jb
xchg
xchg
out
inc
cmp
sbb
add
xor
mov
add
lret
rcrl
dec
cmp
mov
stc
mov
xchg
repnz
cwtl
cmp
and
ja
je
in
push
mov
les
jmp
mov
lods
inc
lds
outsb
popf
jbe
arpl
cmp
dec
pop
jae
ds
insb
adc
sub
movl
inc
mov
pop
or
sub
enter
ja
cmp
and
fstpt
sbb
lret
imul
jmp
mov
push
push
rcll
rclb
sub
inc
sti
paddd
jne
dec
das
cmovo
popa
jo
shr
inc
dec
xchg
out
mov
push
mov
nop
pop
in
push
into
sahf
mov
xchg
mov
je
mov
push
xchg
push
out
xor
or
mov
sbb
rorb
push
dec
xchg
scas
inc
addr16
das
ss
enter
jb
cli
adc
cmp
cmp
lret
lcall
in
mov
push
movsb
push
mov
jo
and
shr
mov
inc
push
push
push
add
idiv
dec
out
pop
lret
loopne
and
jp
sub
nop
lret
mov
cs
push
fucom
dec
jle
ret
sub
nop
in
cmc
add
lretw
lods
ds
sbb
dec
xor
mov
sbb
jle
sub
cld
xor
test
out
mov
ss
mov
addl
mov
cmp
or
jg
into
mov
outsl
jp
lods
mov
cmp
aaa
ss
shl
lcall
adc
mov
xchg
mov
dec
movsl
mov
or
cmp
aas
and
out
xchg
sub
pop
imul
adc
or
mov
fisttpll
sub
nop
faddl
mov
mov
mov
mov
cmp
add
or
cmp
inc
and
pop
mov
rcrl
or
movsb
push
int
fstl
sahf
sbb
inc
push
push
loopne
test
inc
cmpxchg
lret
ret
sbbl
xchg
dec
mov
sub
push
leave
jmp
sub
cmp
mov
mov
xor
xchg
jg
shrb
xor
adc
stc
aad
push
daa
add
loopne,pt
dec
insb
std
xor
sahf
and
call
fsubs
inc
or
iret
cmpsl
insb
mov
jl
adc
fnsave
xor
js
lahf
testl
push
clc
and
test
inc
addr16
loop
adc
iret
push
outsb
test
movsl
rclb
or
cmpsb
clc
push
sbb
add
aaa
or
jecxz
and
dec
push
movsb
daa
mov
adc
jbe
mov
lock
or
scas
push
aad
hlt
cli
and
jle
enter
test
andb
stc
xor
fs
aam
mov
cmpsb
pop
xor
das
cmp
repnz
outsl
out
pop
inc
aad
outsb
filds
in
aad
mov
sbb
das
mov
outsl
lret
mov
inc
scas
inc
mov
jne
mov
xorb
push
mov
rep
leave
fisubl
push
push
sub
test
mov
iret
dec
dec
mov
je
stc
mov
lcall
sub
mov
rcll
pop
dec
ds
lds
jge
ja
aas
mov
sbb
cld
pop
outsl
popa
popf
mov
push
inc
add
jb
adc
fildll
lds
jno
mov
lret
or
push
fs
mov
ret
mov
loop
add
loope
xchg
test
cmp
sbb
and
adc
inc
pop
cli
cmp
enter
ficoml
insb
cmc
push
sub
stos
call
sarl
adc
mov
lret
and
fimuls
xlat
loopne
mov
rcrl
jmp
out
cmp
xchg
mov
std
jb
push
sbb
dec
fnsave
mov
cmp
fcoml
mov
or
repz
cld
and
xchg
jb
ljmp
sbb
push
neg
daa
sbb
popa
inc
imul
mov
scas
xlat
mov
aaa
gs
and
lcall
popa
lods
arpl
cmp
adc
add
xchg
adc
xchg
std
subb
ds
push
cmp
aaa
xchg
in
pop
test
clc
loope
ja
stc
inc
xor
xor
add
cld
hlt
pop
adc
xor
repnz
push
xor
xor
mov
lods
adc
nop
add
loopne
dec
fimuls
pusha
loop
adc
mov
mov
xchg
inc
std
loop
dec
pop
and
or
jbe
mov
ljmp
push
pop
mov
push
leave
mov
push
bound
and
adc
push
inc
push
ss
jb
sbb
pop
scas
lods
adc
int
std
jmp
ja
sbb
fdivl
aaa
repz
divb
adc
xor
mov
test
shl
cmpb
inc
inc
sub
aad
aad
fwait
or
and
dec
inc
cmp
lahf
bound
xorl
fs
mov
inc
lcall
lcall
mov
repz
inc
inc
inc
push
rorb
sahf
into
sarb
dec
xchg
and
repz
and
out
bswap
mov
or
stos
mov
xchg
lahf
cmp
lods
fdivrl
popf
aam
sub
aad
mov
cmpsb
in
les
loopne
pop
adc
jle
lret
mov
or
das
daa
ss
push
fnstsw
in
jns
sub
mov
xchg
js
dec
mov
rcl
xchg
push
adc
add
mov
out
xlat
mov
sti
dec
mov
push
and
adc
cld
jb
imul
add
js
push
xor
aad
xor
cmovae
jo
les
shl
sarb
sub
int3
les
scas
mov
dec
mov
lret
ds
mov
sub
rolb
aad
pop
loopne
and
sub
push
dec
mov
aam
int
jo
xchg
and
or
push
cltd
or
mov
aad
xchg
popf
fmulp
movsl
inc
sbbl
shlb
out
scas
lock
gs
mov
push
filds
add
test
fistpl
add
mov
sub
and
push
sar
repnz
mov
push
out
mov
and
insl
push
sub
pop
xchg
or
fildl
addr16
lahf
push
xor
out
mov
xor
pusha
jne
pop
aas
jbe
mov
bound
xor
push
mov
dec
xor
pop
cmp
call
dec
inc
popa
das
mov
cmpl
jp
pcmpgtb
faddl
jno
push
and
lret
mov
insl
mov
cmp
fmuls
mov
bnd
fdivrs
les
pop
stos
es
adcl
jle
popa
xor
mov
fistpl
sub
sub
pop
jge
sbb
pop
sub
or
xchg
fcompl
rcl
movsb
inc
fdivrs
sbb
fisubs
xor
cmp
and
std
cmpb
sti
push
arpl
scas
scas
outsl
cmpsl
jp
lea
xchg
cmc
mov
lods
sti
out
out
lea
pushf
std
andl
push
push
xchg
mov
sbb
shll
aas
repnz
lcall
std
add
xchg
add
mov
mov
inc
popf
je
lock
sbb
jmp
test
xor
push
mov
ja
cli
fdivrs
jl
std
dec
imul
sbb
adc
lret
fadd
sub
pop
int
mov
xor
sahf
popf
mov
add
xor
cmp
rcrl
cmpsl
test
scas
cmpsb
dec
jbe
dec
int3
jne
clc
xchg
mov
jno
rcll
xchg
add
rorl
outsl
xor
int
mov
xchg
mov
mov
cld
jbe
push
std
loope
pushf
inc
scas
lahf
jo
lahf
in
xorb
cmc
fdivrp
test
mov
xchg
fstl
test
popa
push
push
fistpll
sub
dec
bndstx
or
mov
icebp
dec
ja
push
sub
cmpsb
lods
lea
sub
rcrb
xchg
pop
dec
xchg
mov
insl
insb
push
sahf
mov
xlat
mov
jno
cld
in
sub
es
rcll
jp
mov
jno
push
pop
loop
pop
push
xchg
mov
setge
insb
popa
pop
and
aas
pop
jo
pop
inc
push
push
xchg
cwtl
push
test
mov
into
xor
sub
or
aaa
jecxz
xchg
and
repz
push
adc
call
int3
idivl
mov
push
pop
lcall
movsbl
ret
and
xchg
pop
xor
cmc
fwait
adcl
sbb
enter
mov
popf
xchg
jns
fnstenv
cli
loopne
movsl
add
test
lods
imul
jle
std
rcll
das
sub
mov
adc
mov
push
jmp
fwait
mov
fimull
add
inc
push
les
push
sub
subl
stos
and
push
or
push
pop
sbb
push
mov
inc
sub
aad
popf
insl
dec
nop
stc
rcr
or
movsb
out
outsb
sarb
adc
mov
shlb
loope
push
dec
out
ror
scas
pop
das
loop
outsb
add
fistpl
cmp
mov
adc
mov
or
fisttpl
insl
mov
mov
ljmp
lahf
xchg
mov
add
sub
adc
mov
mov
addr16
sub
cmpsb
sub
cmp
mull
jl
cmp
cmpsl
movsb
cmpsb
fimuls
imul
jl
push
insl
lret
or
cmp
popa
pushf
jg
sbbl
mov
in
outsb
sub
insl
adcb
lods
scas
xor
xchg
pop
fnsave
adc
lods
scas
sbb
add
inc
sub
push
scas
mov
sbbl
mov
xorl
orl
fnstenv
es
sahf
cmp
pop
or
xchg
add
push
jns
and
xor
test
imul
sbb
mov
mov
cmc
filds
orl
inc
outsl
sbb
mov
aad
add
in
jl
dec
sbb
dec
loop
mov
out
mov
cmc
aam
jmp
pusha
mov
stc
std
popa
iret
push
xor
lea
mov
sub
cmp
rclb
sub
jle
dec
jb
insl
xor
inc
cmp
jbe
aam
mov
data16
rorb
in
lret
sbb
mov
cs
sub
adcl
ss
xor
dec
ret
sahf
lret
lods
pop
stc
sahf
jne
cli
into
and
mov
and
push
sbb
jl
push
xor
scas
test
add
in
adc
and
cltd
stc
jg
jbe
lahf
cmpsl
cmc
sub
sti
jne
mov
adc
leave
jecxz
cwtl
adc
into
push
jecxz
pop
push
fldl
xchg
push
insb
aas
fdivp
dec
popf
cmp
jb
adc
nop
in
sub
sbbb
lods
into
dec
push
push
call
scas
aaa
push
push
daa
ja
addl
fistpl
ret
cmpsb
repz
mov
add
sbb
dec
pop
adc
mov
in
nop
pop
imul
or
cmpsl
push
pop
push
gs
out
lock
popf
int
inc
loop
adc
jbe
iret
jp
mov
lahf
loopne,pt
and
out
xchg
xchg
mov
mov
sub
mov
clc
dec
jg
cmp
sub
xchg
mov
mov
push
aam
lds
ret
xor
mov
ja
dec
mov
push
shrl
push
mov
and
test
cmp
push
into
mov
imul
movb
add
ret
mov
cmp
mov
lea
push
ja
mov
mov
jns
push
outsl
add
push
and
not
in
inc
jns
lods
mov
bound
sahf
popf
mov
out
sub
and
lock
pop
adc
stc
pop
jnp
xor
sub
jl
adc
cli
bound
pop
push
in
jb
roll
je
faddp
fcomip
push
decl
or
pop
xchg
aaa
imul
cmp
scas
movsl
pop
gs
or
and
mov
mov
add
cwtl
mov
leave
gs
mov
std
or
jg
mov
mov
dec
jl
push
aad
and
leave
out
clc
xor
mov
movsl
cld
iret
xchg
cmp
stos
xlat
fsubp
sbb
int3
add
jb
sub
jle
and
xor
insb
cwtl
push
jae
inc
stos
fidivs
xchg
daa
pop
adc
shl
inc
shr
fwait
leave
xchg
lods
push
mov
inc
ret
jle
test
sub
aaa
rorb
mov
jb
pop
cwtl
sbb
jge
add
push
cmp
xor
sub
std
and
mov
aas
std
das
mov
push
iret
add
cmp
cmpxchg
imul
ds
ret
cs
mov
xor
std
or
fstpl
push
iret
xor
fldt
cmpsl
jbe
aaa
pop
pop
fwait
ss
xlat
mov
dec
rcrb
js
add
inc
mov
adc
jnp
stc
data16
jl
outsb
adc
pop
inc
add
dec
fidivrs
cmp
mov
aam
push
es
mov
xchg
sbb
data16
jecxz
xchg
mov
cwtl
in
jle
pop
push
cmp
out
mov
add
push
adc
add
mov
pushf
add
sbb
push
ljmp
aaa
rcr
sbb
cmp
test
aaa
add
xchg
in
xor
stc
lods
adc
int3
pop
mov
pop
insl
xor
sbb
shll
and
mov
repz
cmpsb
out
rolb
das
xchg
movsl
stos
mov
add
sub
sbb
sbbb
xor
pushf
fnstsw
hlt
cmp
call
mov
aam
fcompl
mov
mov
push
out
sbb
fisubrs
pop
imul
sub
int3
push
sti
jns
andb
rclb
mov
or
dec
mov
mov
repz
xchg
and
aaa
loop
jae
jnp
jb
cmp
adc
and
cmpsb
out
cmpsl
xchg
dec
xchg
cmpsb
aam
dec
popf
pop
push
dec
inc
xlat
loope
xor
pop
xor
inc
and
adc
xor
loopne
xchg
pushf
in
mov
mov
pushf
jo
inc
scas
dec
outsl
leave
ljmp
mov
stos
sar
and
adc
loope
and
orl
and
outsl
icebp
scas
out
daa
insb
fiadds
adc
push
sbb
js
iret
shl
popf
push
aas
dec
cli
pop
fdivrp
jne
pop
test
stc
xchg
ja
scas
lods
jg
xchg
adc
add
sbb
divl
xlat
and
insb
fcmovu
test
repz
loope
and
xor
or
cmp
daa
movsb
jno
mov
push
adc
mov
push
das
mov
popa
std
imul
lds
jl
mov
cmp
pop
fnstenv
dec
mov
dec
movsl
pop
scas
stc
movsl
mov
repz
sub
out
mov
mov
mov
lea
outsl
cmp
and
pop
pusha
jle
movsb
cwtl
out
aam
pop
xor
xchg
mov
add
xorl
loopne
inc
add
idivl
stos
ret
shl
pop
out
je
lret
popa
iret
in
sub
mov
hlt
mov
inc
dec
shr
fs
mov
mov
mov
mov
xor
adc
sub
rcrb
and
enter
test
popa
xor
dec
xlat
cmpb
cmpl
inc
sbb
xchg
lea
xorl
xor
les
xlat
xlat
push
mov
pop
or
mov
icebp
jmp
xor
scas
push
aad
cmp
cs
adc
push
or
jl
lahf
lahf
push
pop
mov
dec
cmpl
jp
sub
push
ljmp
aad
daa
inc
xor
nop
insb
jbe
sbb
inc
cmp
dec
data16
mov
mov
iret
cmp
jle
mov
and
pop
nop
pop
ds
cmc
movl
add
mov
mov
fidivrl
repz
pop
push
adc
push
xor
mov
sbb
in
jecxz
out
xlat
rcrb
sahf
push
into
add
mov
fiadds
add
mov
into
outsb
addb
orl
loop
mov
and
enter
mov
rcr
mov
cmp
test
hlt
scas
faddl
push
lea
cmp
arpl
popf
popa
mov
rorl
jg
dec
or
fst
push
inc
call
stc
fsub
jle
popf
add
mov
jmp
es
and
js
int
xor
mov
arpl
mov
push
xchg
dec
mov
adc
push
cltd
lock
push
jno
push
fists
inc
fsubl
adc
lcall
outsb
xchg
dec
xchg
and
mov
punpckhwd
pop
int3
pop
shll
mov
mov
or
mov
lods
push
imul
jp
or
pop
mov
jge
jno
mov
xchg
mov
mov
xchg
sbb
stos
sbb
subb
mov
sub
mov
mov
or
fstpt
push
in
lahf
jge
mov
enter
enter
imul
adc
mov
popa
and
int
and
dec
mov
sbbl
or
pop
ds
mov
ss
cmp
push
jge
repz
mov
jmp
aam
jbe
mov
mov
js
cmpsl
pop
and
sbb
xor
scas
mov
inc
or
adc
jbe
mov
mov
add
mov
imul
mov
leave
aad
cmp
mov
sbb
push
dec
mov
popf
sub
push
test
test
int
cmp
rcr
inc
dec
mov
loop
mov
test
inc
sbb
mov
adcb
pop
loopne
push
insl
sbb
scas
sub
cltd
rcrl
cmp
stos
or
pop
push
call
or
push
sbb
arpl
sbb
xor
sbb
js
in
test
repz
rorb
pop
push
jns
clc
cs
xchg
pop
test
aam
loop
inc
sbb
icebp
mov
dec
sbb
sahf
movb
lock
pop
jo
pop
lods
jae
mov
mov
or
arpl
adc
rorl
jae
out
rcl
mov
fiaddl
aaa
xor
jg
enter
lock
xchg
pop
popa
mov
pop
pop
aam
es
test
insb
test
fimuls
bound
ret
inc
imul
jg
add
push
loope
ss
pop
jecxz
mov
cltd
test
sub
lods
xchg
mov
cmp
inc
jmp
mov
clc
and
adc
mov
mov
fpatan
dec
addr16
xor
mov
inc
cmpsl
and
jg
cli
stos
jbe
test
mov
jns
mov
sub
movsb
mov
or
adcb
int3
cmc
into
test
mov
push
add
cwtl
call
adcl
shufps
sbb
call
cltd
xchg
xchg
adc
pop
fs
inc
test
sub
sbb
xchg
js
xor
jg
inc
in
pop
test
inc
leave
inc
loop
out
add
cltd
sbb
add
pop
jno
mov
jne
sub
enter
scas
xchg
not
mov
sub
popf
addr16
xchg
lea
mov
loopne
das
inc
and
js
or
jmp
jnp
int
rol
nop
lret
hlt
mov
push
dec
adc
mov
daa
sbb
mov
daa
fwait
cld
push
xchg
shrb
inc
mov
mov
pusha
push
sbb
sub
adc
xor
lahf
mov
or
andb
cmp
leave
fsubl
movsb
xchg
movsl
fs
pop
push
cmp
sbb
ljmp
dec
add
ret
xchg
jmp
jb
pop
cmp
shrl
dec
int3
mov
sbb
jl
imul
mov
or
push
test
int
enter
pop
push
imull
les
ss
loope
pop
aad
jle
pop
sbb
bound
mov
push
mov
cmpsl
call
adc
test
push
sbb
cltd
in
xchg
iret
iret
adc
enter
xlat
jb
nop
in
xor
jge
push
dec
ljmp
adcl
push
mov
int
push
loopne
mov
rorb
dec
push
pop
fsts
loope
xchg
cmp
daa
out
imul
push
cs
mov
icebp
fidivrl
ss
in
data16
sub
pop
jbe
jb
or
cmp
xlat
mov
jne
loop
xchg
jp
aam
inc
sahf
jne
test
das
mov
pop
mov
bound
sahf
mov
sarb
lea
sub
sbb
sub
jmp
mov
dec
xor
sub
test
out
dec
int3
xor
lods
stos
cmp
hlt
sbb
add
xchg
or
cld
mulb
jecxz
dec
aad
unpcklps
cmp
sahf
cmp
popa
testb
push
mov
add
jecxz
add
push
leave
jnp
leave
cmp
inc
sub
push
mov
lock
fnsave
js
daa
inc
lods
mov
in
push
cli
insl
cmp
adc
sbb
sbb
repz
clc
and
sbb
jp
subl
push
cmp
push
or
pop
xchg
adc
lret
repnz
dec
or
dec
mov
call
int3
fcmovu
lret
in
sbb
sbbb
jp
sbb
test
adc
pop
mov
sarb
push
mov
sbb
push
push
jle
inc
mov
jmp
addb
adc
add
std
xor
sub
int3
ds
jp
adc
idiv
divl
mov
sahf
xor
pop
dec
fcoml
fcom
push
push
and
into
movsl
int
mov
popf
hlt
clc
ss
outsb
bndstx
fcomip
xor
aas
jb
enter
aam
dec
notl
ja
xchg
out
mov
incl
repz
test
out
fstp
sbb
cwtl
adc
roll
add
sbb
sub
pop
mov
xor
xchg
negb
sbb
mov
xor
inc
cmp
ds
arpl
mov
and
dec
add
pushf
jne
leave
adc
fnstsw
pop
cli
jl
or
lods
jle
pop
push
adc
jl
push
in
jo
fimull
add
or
sub
stos
lret
inc
xor
lods
inc
push
mov
or
call
jle
cli
lods
mov
scas
repz
xchg
cwtl
or
repnz
xchg
xchg
inc
add
mov
jnp
dec
mov
jge
jne
pop
inc
pop
sub
int3
shrl
dec
jae
sub
scas
shrb
mov
es
jmp
mov
add
cmc
cmp
fcmovnu
daa
fwait
push
adc
mov
push
pop
sub
ds
cmp
lock
adc
imul
in
movl
push
push
test
cli
adc
aad
sub
xchg
inc
or
into
sbb
and
inc
les
enter
fidivrs
popa
cmpsl
rcll
and
rcrb
js
dec
les
stos
jnp
push
aam
loop
in
mov
clc
jge
cmc
push
xor
push
in
lea
jnp
in
ds
dec
xchg
xor
cmpsb
loop
and
sub
mov
cmpsl
aam
in
mov
fsubl
mov
pop
out
sti
leave
popa
inc
add
cli
pop
test
and
xchg
xchg
hlt
pop
dec
pop
xor
sub
xor
das
jno
stos
pop
fs
jae
sub
or
in
xor
stc
push
push
or
xchg
out
call
inc
ss
add
add
mov
cmp
icebp
stos
sub
ret
fisubl
dec
dec
and
in
mov
pop
mov
adc
sahf
test
inc
sarb
shl
ds
fstpl
xchg
xor
cmp
push
push
test
popa
jne
fstp
rcrb
push
test
sbb
xorb
out
decl
push
push
movsb
icebp
mov
jnp
jnp
out
cmp
sub
inc
jo
and
dec
jmp
inc
js
push
daa
fcoms
push
adc
mov
int
inc
jbe
mov
push
sbb
mov
pop
idivb
mov
aaa
mull
lods
push
pop
xchg
ficoms
je
fcmovnbe
xor
jo
push
jne
cli
dec
inc
dec
or
cmpl
fcompl
lock
inc
xchg
clc
jb
dec
mov
mov
sub
aad
lcall
adc
outsl
jne
dec
test
jecxz
test
and
jno
cwtl
aas
mov
mov
lahf
ljmp
or
mov
loope
mov
scas
fst
test
add
pop
nop
xchg
push
push
fldcw
lock
nop
mov
in
dec
mov
js
sbb
push
fsubl
add
or
sub
dec
and
mov
test
sbb
into
ljmp
cmpsl
cld
add
bound
nop
popa
jle
cmc
xor
adc
movsb
and
negb
scas
push
or
or
sbb
jns
mov
popf
or
jmp
out
push
pop
jne
js
ja
jnp
sahf
xchg
mov
arpl
outsl
popf
add
int
and
flds
dec
fists
and
pop
pop
cmp
jl
add
iret
sarl
jle
xchg
adc
pushf
cmp
jecxz
mov
lods
push
addb
sbb
das
inc
dec
dec
daa
rcrb
test
out
aam
fwait
notb
stc
mov
dec
mov
ja
shrl
cmp
lods
cmp
aaa
dec
scas
jae
rcrb
sub
add
sbb
movsb
xor
inc
jbe
ljmp
popf
sub
push
fwait
std
aam
sarl
or
aas
mov
shl
cmp
cmpsb
inc
mov
inc
insb
adc
jg
fwait
mov
orb
outsl
sbb
and
in
cs
loopne
and
jge
cmp
fs
fsubl
dec
in
lods
xor
sbb
fldl
outsl
xchg
cmp
das
stos
mov
push
add
repnz
push
mov
pop
notb
shrl
lock
push
imul
out
xchg
movsb
call
and
mov
sbb
scas
into
xor
bound
inc
lods
push
or
ljmp
rcr
in
push
into
jbe
mov
xchg
or
std
clc
dec
inc
or
int3
jge
dec
and
leave
jp
mov
imul
pop
push
mov
iret
call
xor
jmp
lret
sub
sub
jnp
pop
push
call
leave
in
rcrl
mov
xchg
mov
pushf
jo
mov
or
cltd
jmp
push
and
mov
ja
xor
or
mov
xchg
sub
ljmp
jns
inc
inc
fcoms
into
stos
pop
sbb
pop
rorl
std
lea
mov
fisubl
mov
adc
jb
mov
loopne
adc
rorl
inc
inc
insb
popa
shrb
mov
adc
lcall
insb
dec
jp
xchg
out
xchg
mov
mov
cmpsb
mov
cwtl
adc
faddl
mov
mov
mov
xchg
loop
push
scas
std
sbb
push
push
xchg
clc
cmp
jecxz
inc
aaa
xchg
sub
sub
test
clc
nop
inc
push
je
aaa
mov
in
insl
sahf
jne
pushf
mov
jg
aam
mov
out
sbb
mov
jg
lods
lods
mov
std
adc
mov
pusha
inc
repz
imul
mov
mov
enter
xor
jg
jns
mov
frstor
adc
daa
add
or
mov
sub
xor
inc
call
shll
mull
adc
out
pushf
cmp
sbb
call
sbb
push
imul
arpl
test
and
mov
cmc
push
lods
jmp
aas
in
scas
mov
mov
stc
dec
enter
xorb
sbb
loope
lods
and
sub
mov
jmp
pop
inc
and
adc
mov
pop
lock
inc
nop
jae
and
shlb
aad
addb
outsb
jl
xchg
mov
cld
insb
fwait
sbb
movsl
cmp
enter
jns
mov
mov
testl
xchg
pop
loope
ljmp
in
jb
shll
pop
push
pop
and
fwait
sub
sahf
repnz
cs
push
add
dec
sbb
dec
push
jo
cmp
je
dec
and
inc
inc
loope
jp
mov
sub
dec
cmp
jae
jno
aaa
cmp
test
dec
lret
sub
ss
cmpsb
repz
cmpsb
xchg
and
sbb
or
out
mov
inc
and
push
sahf
lret
sub
insl
push
shrb
cmpsb
int3
aaa
sub
mov
out
push
vfmsubadd231ps
mov
bswap
push
scas
adc
cmpsb
int
dec
push
xor
push
out
aam
aas
xchg
fbstp
pop
jl
dec
and
cmpsl
inc
xlat
mov
cmc
pop
mov
sti
dec
pop
dec
call
aaa
in
iret
popa
mov
testb
xor
nop
aad
jmp
and
lahf
xchg
ljmp
mov
jge
cmp
ja
inc
scas
jnp
jo
jae
add
iret
std
and
sbb
and
xchg
xor
mov
data16
fidivrl
mov
cmp
clc
lods
adc
sbb
jbe
aam
fwait
inc
rcrl
lods
sbb
aam
add
stos
mov
inc
cltd
dec
push
ret
mov
fldenv
mov
mov
fs
or
xchg
push
inc
pcmpeqd
xchg
xchg
gs
and
pop
rorb
xlat
inc
sbb
into
mov
or
insb
aad
inc
iret
add
add
jge
xor
xchg
jle
xlat
sbb
inc
lods
lret
mov
leave
mov
data16
or
mov
push
movsl
ja
clc
loope
cmp
cmp
out
arpl
adc
fisubs
es
xlat
cmp
leave
dec
adcl
and
lret
push
inc
xchg
push
jecxz
pop
add
jbe
ficompl
sti
adc
repz
in
mov
mov
aas
fcomip
into
push
loop
mov
push
xchg
jge
in
sbb
pop
lds
xor
sti
push
clc
loope
xor
jno
shll
xor
sub
pop
mov
lds
sbb
fstl
mov
sub
or
adc
xchg
fs
pop
int
out
fwait
lds
mov
andl
leave
push
push
mov
xchg
dec
orb
ret
in
dec
push
leave
pop
push
add
adc
js
xorb
pop
mov
and
lods
mov
test
loopne
scas
mov
push
push
pop
adc
push
loopne
and
cld
push
cmpsb
jp
mov
movsl
out
inc
sub
dec
aam
sub
push
out
mov
inc
push
cmp
std
sarl
pop
daa
xchg
sbb
shrl
ljmp
jo
sub
movsl
loopne
xor
popl
stos
xchg
cmpsl
mov
cmp
aas
sub
pop
mov
in
mov
sbb
cltd
xor
xchg
lret
dec
add
add
xorb
sbb
arpl
mov
mov
imul
add
pop
push
movsl
jg
shlb
js
push
pop
mov
mov
mov
cs
pop
mov
rcrl
popf
xor
out
ss
inc
pop
push
adc
in
lret
stc
add
add
inc
mov
pop
rorl
cwtl
mov
dec
or
xchg
mov
fcmovnu
ja
xchg
xor
dec
sbb
mov
ja
iret
dec
pop
in
in
mov
pusha
mov
stc
mov
fs
loopne
inc
jmp
and
adc
pop
stc
negl
and
dec
pop
adc
pop
cmp
mov
or
outsl
sub
inc
push
sub
xor
xchg
jmp
mov
inc
mov
jbe
sub
mov
mov
loop
mov
les
and
lods
and
jmp
and
daa
xchg
inc
push
and
aad
daa
or
xchg
shll
imul
inc
pusha
push
cwtl
sbb
adc
je
xorl
pop
and
popa
push
jns
add
and
fnsave
or
xor
mov
js
shrl
jl
lock
jle
lods
lahf
mov
pop
adcl
leave
lea
and
or
xlat
cmc
jb
out
stc
cmpsb
adc
inc
mov
adc
std
aam
jae
sbb
fildll
addr16
mov
aam
xchg
pop
clc
js
rorl
sti
mov
andb
lods
leave
add
mov
das
sbb
inc
mov
test
mov
cs
xor
iret
sahf
dec
jbe
xorb
xchg
sbbb
mov
push
lds
jecxz
cld
lret
aad
adc
andb
ljmp
fdivl
aad
or
ficompl
xchg
cs
fisttps
sub
push
rcrl
mov
movsl
xor
aaa
rolb
jbe
jbe
or
push
outsl
xor
outsb
mov
imul
sbb
lret
or
xchg
sbb
scas
fsin
dec
mov
gs
inc
das
clc
sbb
stos
xor
shrl
in
popa
mov
sub
mov
daa
add
add
xchg
xchg
mov
or
scas
push
dec
add
sahf
into
or
movsl
push
cmp
dec
xchg
adcl
sub
pop
xor
and
fnsetpm(287
pop
pop
add
pop
ds
jmp
movsl
jnp
mov
push
add
repnz
outsb
movl
adc
fsub
daa
xor
sarb
aas
xor
rclb
xor
leave
push
dec
out
int3
outsl
cs
loopne
inc
lret
rcl
sub
add
ja
hlt
in
mov
iret
and
jg
bound
push
repnz
mov
out
and
xor
push
xchg
mov
xchg
bound
dec
cld
pop
lret
test
inc
loop
mov
or
ret
or
dec
push
push
lahf
mov
fstps
inc
fisubrl
mov
pop
les
lcall
mov
fistps
mov
stos
xchg
ja
xchg
popf
imul
lods
mov
test
or
xchg
jne
int
imul
call
dec
data16
add
shrb
les
xchg
fwait
mov
sbb
mov
add
or
sub
xchg
stc
scas
xchg
sbb
jmp
cli
add
sbb
push
inc
mov
insl
lcall
jge
push
outsl
xchg
je
lea
add
das
and
adc
sub
stc
cwtl
sbb
xchg
push
and
shll
and
sbb
pop
mov
cmp
das
fninit
stc
movb
and
ret
outsl
mov
insl
nop
fdiv
cli
inc
int3
sbb
ja
or
je
mov
fs
fildl
or
jmp
cmp
mov
arpl
inc
outsl
xor
ret
hlt
mov
aad
imul
outsb
pop
test
aam
pop
mov
aaa
popa
xchg
dec
adc
dec
or
popf
inc
xchg
cli
xchg
out
es
jne
outsl
shll
data16
and
or
cmp
or
cmpsb
sbb
icebp
cmp
popf
jns
insb
cltd
cmpsl
sarb
push
add
pop
xchg
test
sub
iret
shrb
lds
ds
sti
shrb
sbb
inc
enter
sub
pop
mov
jg
repz
pusha
iret
fdivl
mov
js
push
and
test
push
scas
sbb
in
inc
sbb
popf
in
xchg
out
push
push
hlt
repnz
pop
sbb
movsl
pop
dec
jg
shrl
inc
loope
pop
push
cmp
xchg
inc
dec
shl
xchg
pop
mov
lahf
pushf
sahf
fstpt
gs
inc
or
mov
arpl
xorl
lods
jle
scas
loope
mov
icebp
test
mov
scas
and
ja
add
lds
push
pushf
cmp
jle
loop
push
pop
hlt
xor
shrb
sahf
xchg
dec
pop
ljmp
mov
in
mov
inc
mov
push
push
in
cmpsl
push
mov
dec
in
and
mov
cltd
mov
push
es
sbb
popf
jg
je
pop
and
jb
and
cmp
int3
pop
xor
or
adc
and
add
repz
popf
into
faddl
das
jns
test
add
push
xchg
dec
mov
test
jl
pushf
xchg
enter
sbb
or
push
mov
xor
inc
xor
rol
addb
std
test
stos
ja
lods
push
cmp
in
xchg
jo
pop
push
jno
jnp
mov
or
xchg
cwtl
mov
jbe
imul
and
lods
inc
sub
sbb
push
adc
cmp
shrb
adc
sti
cmpsl
cmp
daa
rcll
sub
lods
xchg
test
stc
pushf
push
je
sahf
jmp
mov
or
out
lock
add
adc
int3
xchg
js
push
test
addr16
mov
adc
lds
or
jb
add
or
aam
mov
cmc
lods
outsl
aam
clc
stos
popa
jl
inc
add
dec
popf
add
popa
push
push
push
sub
ret
popf
lods
inc
into
dec
jle
mov
or
cmp
and
inc
inc
adc
js
cmp
mov
repz
cmp
mov
adc
xchg
mov
sub
rcl
push
or
or
fildll
fisubrl
xor
std
lds
fsubr
xchg
mov
lods
pop
gs
inc
lea
jecxz
cli
push
js
jno
or
lods
pop
xor
xchg
insl
jg
or
adc
sti
dec
push
js
insl
cmp
shll
mov
mov
push
xor
push
frstor
stos
enter
jns
sub
inc
xchg
int
imul
enter
cmp
mov
rcll
jns
xchg
mov
jecxz
stos
mov
test
in
pop
cmp
arpl
enter
pop
bnd
xor
pop
inc
loop
add
push
pushf
icebp
and
out
jb
push
lcall
inc
jne
mov
int3
pop
sub
mov
les
xchg
int
in
push
lgs
pusha
popa
cmp
push
dec
ret
jns
loop
cwtl
movsl
and
leave
cmp
add
daa
cmp
push
push
mov
jo
mov
cmp
leave
ljmp
push
clc
inc
push
jns
mov
sarb
iret
lret
jo
ja
xchg
mov
and
sub
ret
shll
xor
jne
adc
repz
cmp
push
xchg
fwait
mov
dec
pop
sub
mov
and
add
cmp
iret
cmp
in
dec
rorb
dec
add
mov
fnsave
repnz
jae
ret
mov
sub
test
mov
mov
cmp
inc
pushf
xchg
les
push
ficomps
mov
adc
sub
sbb
pop
sbb
and
iret
adc
sub
sti
push
add
lea
dec
incb
jecxz
scas
xchg
movsb
mov
aam
push
dec
lcall
adc
add
aam
test
push
jno
rorl
fistpll
add
add
mov
add
scas
xor
in
jge
ja
fildll
adc
and
lock
pop
pop
into
push
inc
mov
sbb
dec
loope
add
add
fdivrs
xor
mov
test
fst
icebp
test
xor
mov
call
add
inc
xchg
mov
and
adc
xorl
adcb
jns
cwtl
jl
dec
or
adc
cmp
sbb
add
fstl
int3
cld
push
shl
add
xchg
push
hlt
mov
scas
repnz
inc
inc
push
mov
sarl
dec
ljmp
cmp
nop
stc
cmp
das
inc
cmp
or
push
aaa
loopne
add
iret
movsl
test
lods
jp
cmp
dec
sub
jg
add
subl
or
mov
jns
pop
inc
daa
test
cmp
sbb
scas
test
cltd
xchg
push
test
repnz
das
sub
outsl
push
repz
jno
push
adc
jo
or
sub
mov
jbe
ficomps
push
dec
popf
sub
sub
dec
out
and
in
test
gs
outsl
dec
pop
jnp
sti
lods
scas
int
fs
and
mov
insb
mov
loope
and
pop
mov
or
and
ror
cmp
jnp
jle
ret
addb
popf
sbb
rcrb
iret
test
push
cld
and
push
jp
cmp
ds
shll
mov
mov
aad
aam
xor
sub
stos
push
mov
sbb
repnz
sub
xor
push
push
hlt
xor
xchg
mov
add
pop
push
das
faddp
pop
sbb
shlb
cmp
jne
test
add
mov
test
movsb
cmp
mov
mov
out
shlb
sub
sti
mov
into
insl
xorl
mov
in
cmp
cltd
adc
push
and
lret
in
or
jp
icebp
or
out
int
cmpsl
mov
subb
sbb
les
cld
cmc
ds
xchg
nop
push
cmp
std
sub
or
xlat
push
lea
ret
mov
orb
mov
push
sbb
lds
test
pop
mov
lods
lock
xchg
sub
mull
insb
jbe
js
mov
push
add
mov
xor
cmpsl
sbb
gs
js
push
lods
das
fdiv
or
scas
sbb
xorl
repz
aas
repnz
lock
and
push
call
pusha
xor
dec
add
fwait
add
mov
fs
stos
or
sub
mov
mov
lret
xor
leave
and
mov
cmp
push
les
cmp
imul
push
pop
cmp
pcmpeqw
jecxz
inc
xchg
rcl
out
ds
repz
ja
int3
xor
test
fistps
fists
xor
into
inc
fidivrl
loop
mov
mov
adc
sbb
jg
or
pop
dec
and
inc
movl
test
jmp
jle
imul
gs
cmp
lcall
cmpsl
inc
negl
clc
fidivrs
insb
jecxz
leave
jns
dec
in
out
dec
xchg
stc
and
cmp
cld
and
stos
xor
xor
add
adc
jnp
push
ja
cmp
dec
js
lret
mov
decl
bound
push
jnp
test
inc
fs
push
mov
testb
push
mov
mull
aam
xor
iret
stc
pop
xor
xchg
ljmp
decb
push
jl
inc
inc
push
push
and
xor
adc
dec
and
in
sbb
std
js
imulb
jle
dec
pop
adc
gs
loope
inc
sub
mov
or
ret
fmuls
nop
xchg
pop
pop
push
xor
pop
iret
mov
mov
jno
lods
mov
or
lds
cmp
jbe
shrb
dec
push
mov
ret
fwait
push
mov
cmc
outsl
stos
lcall
ljmp
mov
jns
cmp
dec
inc
test
test
and
mov
mov
cmpsb
mov
cltd
mov
mov
daa
mov
or
or
ljmp
into
fdivrl
cmpsl
cld
rorl
jg
jge
in
lahf
sbbl
mov
sub
adc
mov
test
add
stc
mov
testb
call
inc
sub
xchg
faddp
lret
sub
mov
outsl
jne
jp
jmp
mov
lds
sbb
pushf
movsb
add
shl
ja
inc
ret
push
inc
mov
sub
mov
aam
fcmovu
lods
outsl
push
jne
dec
jl
mov
les
sahf
xchg
pop
int3
adc
inc
popf
pushf
cmc
and
cld
jns
jmp
cwtl
clc
js
fistpl
jne
push
cmc
movsl
repnz
aam
push
mov
xor
sbb
jle
aam
movsl
mov
int3
ret
int3
sub
lds
out
into
psubd
insb
mov
lret
inc
and
add
pop
or
or
scas
cltd
add
int3
into
sub
jae
xor
pusha
push
sbb
outsl
lods
add
push
mov
and
mov
ds
inc
push
pop
or
pop
cmp
add
sub
xchg
mov
mov
mov
loopne
lods
aas
ficomps
movsb
sbb
and
divl
mov
mov
flds
jb
mov
cmp
imul
jno
data16
mov
jnp
adc
fsubrp
rol
jnp
pop
sbb
jne
xchg
icebp
in
hlt
dec
ss
push
or
xchg
pop
out
mov
inc
cmp
arpl
sti
pusha
lahf
or
inc
out
pop
shll
jno
rorl
out
mov
sub
fldt
aad
or
pop
xchg
out
sub
sahf
and
movsl
sub
out
add
jo
inc
cmpsl
movsb
test
test
aaa
dec
imul
and
fs
pop
shl
repnz
imul
sub
add
xchg
jne
push
jmp
mov
cmp
sbb
mov
or
loope,pt
add
pop
xor
orl
cmc
xchg
shr
lds
dec
popf
add
sbb
sbb
mov
movsl
scas
js
je
cmpsl
cmp
movsl
iret
shrb
loope
shl
lods
push
pop
shl
int3
enter
nop
jmp
or
dec
in
mov
xor
out
sti
stos
xbegin
mov
pop
loop
addr16
leave
pop
add
popf
jo
sbb
fcmovnb
jg
popa
pushf
fucom
arpl
dec
test
jle
out
cmp
jecxz
cmp
jle
scas
in
or
jns
push
adc
into
aad
incb
mov
xlat
sub
jno
and
lods
fs
call
pop
gs
push
push
pop
pop
mov
clc
lods
cld
fidivl
adc
push
les
nop
xchg
or
xor
jle
clc
pushf
sahf
sub
repnz
inc
inc
jno
xchg
cmp
and
cmpsb
aas
addb
mov
leave
push
aam
pop
cli
sbb
mov
outsb
fwait
inc
or
add
hlt
pop
fcomip
xor
pop
in
add
and
xchg
fcompl
pop
cmc
stos
fucomi
jne
aaa
mov
or
fprem
cmc
mov
and
pushf
aas
or
sbb
xchg
adc
jae
mov
pushf
push
sar
xchg
xchg
clc
pop
mov
and
js
bnd
les
push
pop
jge
and
stos
stc
daa
lret
mov
jecxz
repz
or
or
add
xchg
scas
mov
inc
sbb
or
cmp
insl
sub
packuswb
out
aaa
jne
inc
push
or
outsl
sub
cld
mov
inc
xlat
push
inc
fs
push
cli
mov
mov
mov
sar
mov
loope
mov
push
imul
jg
fwait
cmp
iret
jne
lods
aam
jl
das
jns
cmp
lret
into
mov
and
mov
cld
hlt
fdivrl
mov
pop
mov
inc
inc
leave
jmp
and
mov
or
cs
stc
ljmp
push
pop
aas
int
sbb
out
add
mov
inc
std
pop
inc
imul
mov
roll
pop
int
cmp
pop
out
sub
xor
mov
ret
mov
jns
add
cltd
jmp
adc
repnz
dec
push
sub
repz
or
leave
pop
or
adc
pop
jp
fwait
pusha
and
std
fdivl
jo
arpl
fdivrl
cmpl
mov
mov
push
dec
jo
out
and
jge
sbb
icebp
mov
scas
in
cli
xchg
mov
push
xchg
test
adc
pusha
inc
fstpl
js
ljmp
test
sub
data16
mov
popf
bound
mov
addl
pop
addb
subl
pop
add
cmpsl
addr16
out
mov
pop
mov
lahf
mov
addb
sahf
inc
mov
inc
pop
loopne
ficoms
push
cmp
pop
add
std
stos
jecxz
jecxz
mov
ret
jnp
dec
out
pop
xor
inc
aas
sub
in
adc
cmp
ret
lret
sub
fstpl
ds
nop
lock
pop
push
adc
iret
jno
xchg
cmp
or
jns
xchg
jg
cmp
sbb
in
lea
pop
jmp
lret
pop
sub
cmpsb
sbb
in
mov
mov
std
test
inc
mull
shlb
inc
dec
scas
push
ret
mov
aas
jl
jg
insl
cmp
pop
mov
int3
js
sbb
mov
or
jb
and
jle
push
push
negl
mov
lahf
jp
add
test
mov
jecxz
cmp
mov
pusha
int
mov
outsl
jle
sbb
mov
mov
sbb
dec
jge
sub
jns
movsb
test
xchg
jns
and
add
and
fcmovnbe
dec
jb
pop
push
pop
mov
xor
sub
rolb
inc
push
daa
jb,pn
xchg
xchg
xor
or
cmp
push
bound
pop
js
ljmp
cmp
dec
and
inc
xchg
in
add
xor
mov
dec
adc
mov
negb
gs
xchg
and
push
mov
pop
push
sub
in
sbb
mov
test
sub
jae
iret
lods
int
loope
inc
mov
divb
sbb
and
mov
aaa
add
jl
sub
push
scas
push
pushf
cmpsb
pop
comiss
sahf
dec
std
clc
sbbl
iret
divl
inc
cmp
xor
outsb
aam
and
and
mov
xchg
cmp
sbb
cld
cmpl
out
sub
cmp
stos
jecxz
mov
add
dec
pop
push
je
test
fmuls
jnp
xor
and
sub
mov
and
xchg
ja
shr
test
xor
or
jg
into
and
jl
aaa
add
push
or
mov
push
xchg
sbb
popa
test
push
xchg
fst
add
rcrl
jne
and
not
mov
mov
pop
outsl
pop
sbb
cmp
xchg
sub
imul
std
outsb
inc
rol
enter
lods
mov
out
add
xchg
ljmp
push
cmp
out
sub
rcrl
dec
sub
mov
pop
jle
mov
and
ficompl
jo
mov
push
movsb
sub
lods
jno
cwtl
dec
ss
jnp
adc
cli
addl
rorl
jnp
sbb
inc
xor
add
cmpsl
mov
popa
out
xchg
pop
orps
jmp
push
or
xchg
std
cmp
aaa
out
nop
push
push
sub
test
call
dec
inc
jmp
mov
mov
mov
mov
fisubrs
mov
insl
add
pop
or
adc
or
iret
loope
add
jmp
and
test
lock
stos
mov
pop
add
lahf
repnz
jge
xchg
pop
cld
fidivs
sub
out
push
mov
dec
sub
xor
ds
push
jle
std
dec
in
jb
mov
cs
push
cmp
mov
mov
sahf
jecxz
aaa
dec
fbld
getsec
adc
xchg
cmp
add
and
shlb
sbb
push
dec
mov
push
or
push
scas
sahf
sbb
ret
divl
or
out
test
aam
scas
adc
xchg
add
aaa
sub
test
sbb
xor
pop
mov
stos
testl
push
fstl
jbe
pop
dec
aaa
mov
leave
pop
loope
icebp
fldt
cmc
adc
push
lahf
loope
arpl
nop
stos
cs
sbb
jl
jp
ret
ljmp
lods
cmp
xchg
movb
add
inc
lods
cltd
cmpsl
aaa
divb
ret
inc
jne
mov
dec
push
and
pop
scas
push
dec
pop
popa
cwtl
cmp
mov
nop
repz
faddl
inc
sbb
cmpsb
popf
xor
fisubl
jns
or
mov
inc
addr16
xchg
adc
push
jl
mov
dec
or
popf
jl
aam
mov
xchg
or
add
aam
pop
aas
xchg
lea
mov
dec
data16
mov
sub
stos
adc
sub
xor
mov
sbb
add
cltd
sub
push
mov
add
lods
fs
out
cmc
cmp
adc
imul
dec
push
and
and
sub
mov
xor
fld
push
push
lods
jae
mov
ljmp
or
jge
ss
mov
js
popa
leave
loopne
popf
add
stos
adc
push
pop
or
fwait
push
push
sub
push
fwait
mov
dec
cltd
data16
fs
pop
mov
push
je
mov
out
cmp
mov
loopne
lea
lods
sbb
jl
xchg
cmpsl
mov
push
roll
enter
stos
inc
or
pusha
popa
in
stos
xor
pop
jns
or
push
ret
dec
fbld
sbb
out
push
fmull
test
push
popa
push
push
sub
scas
add
addr16
in
and
rcrl
hlt
cli
xor
jmp
sbb
push
out
fcmovnb
lret
clc
repnz
loop
dec
je
mov
xlat
pop
and
in
icebp
hlt
test
andb
jg
in
call
scas
sbb
aam
test
scas
test
add
insb
and
movsb
push
popa
fidivrs
lret
lds
cmp
pop
test
xor
fidivrl
xchg
or
mov
mov
xor
xchg
jge
xor
xchg
mov
scas
mov
pop
rorb
push
fsubs
cmpl
dec
pop
jno
pushf
or
sbb
xchg
adc
divl
popa
cli
add
scas
adc
hlt
adc
push
adc
dec
adc
dec
sti
push
in
push
xchg
mov
pop
out
dec
rorl
pusha
pop
cld
mov
inc
sbb
or
pop
fsts
sti
stos
cli
jb
dec
mov
fisttpl
lahf
xchg
lock
or
jg
ja
xor
xor
jae
cmpb
and
call
in
sarl
arpl
adc
loope
or
fldcw
and
add
sub
testl
enter
or
adc
xor
sub
lret
pop
push
jb
loopne
popa
adc
cmp
add
in
rcr
fucomp
push
outsl
cmpb
push
inc
insl
adc
push
dec
movsl
inc
push
iret
pop
ud2
int
push
push
xor
jb
jbe
jns
lods
jns
pop
xchg
and
aad
mov
in
add
cltd
rcr
mov
out
lcall
cmp
and
iret
cmpsb
jo
clc
jo
or
push
fsubs
pop
push
xchg
aad
mov
or
scas
in
sahf
loopne
movsb
daa
lock
add
loop
mov
adc
fisubrs
movsl
leave
dec
jp
cmp
dec
adc
cmp
inc
xchg
or
nop
mov
int3
cld
sbb
bound
in
test
fdivrl
sbb
sbb
sub
aad
loop
lods
arpl
sbb
xchg
iret
jbe
arpl
cmp
push
ds
sub
mov
add
mov
mov
sbb
in
jl
cld
in
test
in
mov
add
mov
data16
or
pop
adc
aad
inc
jg
push
inc
jae
mov
arpl
fucomip
cs
aaa
xchg
or
mov
or
pop
cmc
push
sbb
mov
mov
movsb
pop
ds
sarl
std
jl
jge
dec
into
inc
and
jo
dec
jl
xor
cmp
lahf
mov
in
out
mov
mov
push
hlt
sti
es
jnp
jo
leave
test
out
sub
dec
jl
sub
jae
mov
add
sbb
aad
dec
pop
mov
sbb
mov
cs
aad
sbb
push
int3
inc
pop
mov
cmp
inc
jmp
lock
sbb
push
push
and
xchg
jecxz
es
sub
push
xchg
lds
out
daa
hlt
sbb
bound
xchg
push
cli
inc
pop
cld
nop
sahf
lret
xchg
or
outsb
test
xor
jp
cmp
loope
out
in
dec
insb
insb
out
mov
mov
aam
sahf
xchg
and
push
bound
pop
dec
fbstp
fbld
repz
add
dec
cmp
imul
rcl
fwait
mov
clc
repz
pop
adc
dec
jo
push
mov
cld
mov
leave
push
and
fnstsw
xchg
bound
xor
xlat
xchg
or
das
or
ss
in
dec
bound
popw
jno
mov
pushf
mov
dec
xor
in
push
cld
sub
mov
mov
addl
pop
jl
push
fmuls
push
iret
jl
jp
dec
shlb
xchg
jl
push
idivb
push
shrb
or
adc
cli
add
popa
adc
pop
push
pop
pop
adc
mov
pop
jns
add
add
ljmp
cmp
mov
add
jmp
mov
mov
sub
xchg
aaa
orl
fildl
mov
mov
popa
outsl
add
xor
dec
stos
mov
je
outsb
loop
sbb
mov
mov
gs
dec
outsb
int3
push
iret
push
rcrb
in
in
imul
bound
fs
and
jl
and
push
mov
pop
repz
jb
jle
int3
lods
xchg
mov
outsl
fimull
lods
dec
sbb
in
sbb
cmp
mov
movsb
jno
mov
pop
push
mov
int
insl
shrb
mov
mov
pushf
test
dec
popa
push
xorl
subl
dec
cwtl
out
ljmp
xlat
lds
or
ljmp
cmp
inc
jl
adc
mov
imul
mov
leave
add
subl
out
cwtl
pop
pop
movsl
inc
out
repnz
pop
test
sti
ljmp
in
xchg
push
outsl
std
mov
pop
fiadds
in
xor
js
mov
inc
int
cs
inc
xor
push
xchg
xchg
cld
inc
lret
aas
out
rorb
shll
push
xor
jnp
std
mov
cmp
mov
mov
aam
push
lock
mov
sbb
jge
push
and
pop
mov
jp
enter
xchg
aaa
xchg
push
rcll
popa
jg
call
xor
fists
dec
and
mov
mov
js
hlt
push
leave
cmpsl
jo
jb
test
push
sub
lea
stc
push
mov
cld
pop
jl
mov
jb
mov
mov
add
xchg
push
stos
and
xor
jle
aad
xor
dec
add
arpl
stc
mov
pop
mov
add
jb
pop
xchg
repnz
pop
aas
add
or
fsubs
inc
nop
insl
pop
xor
loope
lea
bound
pop
das
test
ljmp
cltd
add
cmpsb
sarl
out
daa
jl
xchg
xchg
les
mov
lret
mov
imul
pop
xor
lcall
addr16
gs
inc
shll
cmp
stc
test
or
cs
pop
movsb
aam
cmp
inc
sub
mov
pop
subl
mov
ss
in
and
lods
push
in
cmc
arpl
rorb
popf
adc
addr16
inc
cmp
call
cmpsl
flds
sub
sub
ja
push
js
enter
pop
lods
xchg
repz
and
lods
mov
rorb
xor
hlt
push
orl
jne
out
sbbb
mov
or
std
mov
cwtl
inc
ss
dec
ret
lahf
in
lea
aas
jg
test
mov
push
neg
xchg
sbb
adc
movd
jnp
out
fmull
push
mov
mov
js
inc
stc
loop
sbb
inc
mov
dec
rcrl
jnp
repz
pop
xor
add
mov
pop
or
insb
out
cmc
xchg
dec
aaa
imul
mov
addr16
dec
dec
push
add
mov
add
movsb
rorb
mov
xor
mov
not
cmpsl
rorb
shll
mov
sbbl
scas
xor
or
not
es
imul
xchg
lcall
enter
mov
ret
lock
xchg
test
imul
clgi
jecxz
jb
push
pop
pop
mov
stc
adc
dec
adcl
pop
call
mov
mov
add
sbb
pop
pop
iret
sahf
push
lcall
and
add
sarl
out
ret
je
rcrl
pop
xchg
jle
push
xchg
fnstsw
cmp
push
daa
daa
stos
sbb
jbe
jecxz
sub
int
xor
inc
mov
scas
push
add
xor
xor
jnp
sbb
outsb
pop
es
in
jne
jno
mov
jns
nop
adc
cs
pop
scas
mov
sub
sub
adc
add
test
jnp
cmpsl
lret
dec
push
shl
call
clc
inc
data16
sub
pop
imul
sarb
outsl
jge
push
icebp
adc
fcoml
fistps
and
and
scas
adc
push
sbb
lods
and
not
push
mov
xchg
mov
mov
push
and
enter
push
pushf
sbbb
adc
cld
dec
repz
mov
xchg
adc
out
adc
aaa
pop
stos
es
dec
adc
aam
mov
cmp
ss
outsl
lods
in
rcr
push
fistl
js
jbe
push
and
orl
js
sarb
add
jecxz
mov
loopne
and
mov
jecxz
lcall
loop
mov
adc
add
dec
sahf
cmpl
inc
lods
jge
inc
push
mov
dec
call
jo
lcall
mov
xor
push
mov
ret
repnz
inc
jno
mov
cmp
adc
hlt
std
inc
jne
ror
aam
aam
test
lods
jnp
es
sbb
mov
ja
outsl
dec
push
jne
cmpsl
mov
repnz
xor
mov
add
cmpsb
adc
lahf
sbb
scas
jae
push
jmp
data16
loope
bound
jmp
mov
ljmp
pop
pop
movsl
lods
pop
lahf
dec
dec
sub
dec
mov
out
inc
dec
push
popf
or
stos
jnp
hlt
xor
push
insb
call
addr16
mov
push
aam
mov
std
repnz
imul
cmp
mov
les
repz
fisubrs
in
insb
xchg
lcall
inc
ja
mov
xor
mov
sub
and
mov
insb
adc
jge
xchg
lahf
xchg
or
or
cmp
fdivrs
inc
xor
adc
fstl
inc
outsb
cli
mov
dec
dec
into
scas
and
out
fidivl
and
xchg
nop
jae
orb
fisttpll
mov
inc
xchg
pop
es
in
add
xor
outsb
inc
mov
push
cmp
lahf
aas
shrl
add
sti
loopne
push
hlt
out
dec
popf
filds
mov
or
fldenv
add
push
or
ds
push
and
notl
xchg
adc
mov
fistpl
das
mov
jmp
inc
push
rcll
cmp
lods
mov
cmc
or
add
push
popf
mov
cli
sbb
add
mov
std
sti
das
daa
cmp
xlat
pop
clc
std
dec
mov
rcll
mov
les
scas
fucomip
sub
das
mov
add
loope
mov
nop
push
insl
xlat
mov
sub
xchg
insb
push
loope
scas
test
ds
sbb
pop
inc
adc
pop
mov
lock
enter
outsb
movsl
das
push
push
mov
pop
xor
add
add
add
ss
mov
xchg
cmp
xchg
mov
fisttpll
insb
jne
mov
mov
sbb
lahf
adc
cld
scas
fsts
in
repz
or
pop
cmp
lds
loop
insl
jnp
rolb
sbb
and
sub
jmp
int3
push
pop
std
lods
mov
mov
std
mov
ret
ljmp
pop
adc
inc
sub
and
dec
add
aas
into
imul
cmp
mov
mov
pushf
mov
or
and
mov
mov
dec
inc
jns
jae
ja
movsl
lret
stc
push
mov
stc
pop
sub
adc
out
adc
ret
js
aad
mov
scas
cltd
loop
push
pushf
cmpl
out
xchg
lahf
xorl
mov
and
mov
push
xchg
cli
test
and
cmp
inc
lock
int3
aas
cmpsb
cmpsb
dec
cmpl
movsl
test
mov
mov
jecxz
mov
pop
jns
cmpsl
imul
pop
dec
in
push
inc
sub
std
cltd
iret
mov
mov
mov
sbb
popa
int
jo
pop
jmp
jbe
inc
mov
inc
dec
adc
lcall
in
jp
adc
out
lock
inc
push
iret
mov
cmpsl
jmp
pop
cmpb
lahf
push
fs
add
les
add
inc
jae
adc
lock
xchg
aam
fsubrl
add
dec
pop
sbb
dec
out
cwtl
pop
cmpsb
mov
xchg
cltd
adc
xor
and
push
xchg
jg
cli
and
out
adc
test
pop
fdivs
cmpsl
je
fldl
fidivs
lods
cmp
lea
jns
loop
jb
shrl
adc
push
pop
xchg
jbe
loop
ss
dec
mov
test
scas
jp
mov
fsubl
jp
iret
jae
sub
loopne
sti
fwait
and
or
adc
js
dec
in
push
sub
push
loope
ret
stos
lcall
out
dec
sahf
mov
adc
test
mov
lcall
sbb
stos
mov
cmp
in
mov
mov
in
fisubl
cmp
stos
cmp
mov
stc
adc
cmp
aaa
lret
mov
daa
nop
xor
addb
jp
pop
sub
sub
loope
daa
xlat
xor
inc
push
lcall
xchg
sbb
xchg
xchg
dec
addr16
xchg
push
in
gs
jle
fidivl
mov
and
adc
mov
aam
jne
mov
mov
fwait
in
mov
mov
cltd
or
mov
adc
sbb
jae
dec
or
fdiv
popf
inc
arpl
fwait
sarb
ret
xchg
ljmp
lds
push
sub
and
mov
test
call
dec
imul
bound
lahf
lret
pop
mov
jbe
and
sub
dec
adcb
pop
mov
out
shlb
xchg
test
jmp
sbb
inc
leave
lock
aaa
sub
jle
inc
lahf
mov
push
sahf
jmp
and
out
icebp
xchg
add
mov
fcomp
adc
fcmove
inc
xchg
dec
mov
stos
sbb
mov
out
dec
adc
add
mov
xchg
add
mov
clc
ret
and
push
jge
push
das
mov
jno
pop
test
test
adc
inc
push
notb
cmpsl
sub
pop
negb
dec
inc
pop
mov
sbb
push
divps
cltd
mov
inc
jmp
shrl
int3
pop
or
fstl
sti
or
dec
sub
mov
loop
scas
sub
adc
jp
fbstp
out
push
push
push
adc
and
clc
adc
stos
pop
jno
call
push
stc
mull
mov
lcall
inc
adc
jbe
inc
repnz
or
pop
cltd
or
mov
mov
adc
out
vpsllq
insl
mov
fldl
bnd
sub
insb
sbb
mov
fildll
or
dec
fistl
add
jecxz
cwtl
pop
test
aad
pop
repz
in
cmpsl
dec
arpl
in
pop
push
dec
push
mov
and
sub
leave
inc
mov
or
inc
call
jbe
pop
pop
jecxz
lods
push
pop
jnp
dec
jg
mov
fld
mov
push
test
cmp
enter
mov
scas
xchg
out
dec
pusha
out
mov
jl
out
sti
aaa
add
adc
mov
bound
or
fisttpl
scas
movsb
aas
and
or
jb
leave
stc
imul
je
fsts
and
sbb
or
sbb
and
cmpsl
lahf
loop
or
xchg
shlb
mov
dec
add
mov
iret
fs
sbb
mov
cmp
xorb
insl
push
das
sahf
fwait
inc
xor
adc
xor
xor
dec
inc
cmp
mov
imul
test
jmp
stos
fwait
pop
fidivl
out
sbb
and
popf
xchg
movsb
inc
sub
inc
adc
adc
fcomp
and
mov
nop
mov
ja
mov
push
int
mov
insl
push
shlb
dec
hlt
sbb
pop
scas
scas
xchg
fiadds
push
notb
xchg
ss
lods
enter
jecxz
into
ret
loopne
xchg
orb
shrb
fidivrl
insb
adc
fiadds
jo
data16
loope
xchg
jnp
push
mov
bound
div
inc
sti
jo
aam
data16
xchg
inc
inc
scas
aas
dec
xchg
mov
jp
mov
pop
jno
fs
out
lret
lcall
std
cmp
mov
sub
jp
mov
je
and
jecxz
jle
inc
daa
jl
or
data16
popf
repz
repz
xor
cmp
fsubrl
mov
push
pop
sbb
mov
mov
fbstp
repnz
push
sbb
push
fs
add
mov
pop
test
push
stos
fisubrs
fwait
scas
jo
xor
mov
inc
negb
cwtl
cwtl
test
sub
enter
inc
push
mov
in
push
pop
enter
sbb
add
cmp
call
jecxz
es
pop
iret
lahf
andl
js
mov
and
or
iret
int3
mov
push
jl
mov
mov
push
popf
hlt
fsubrs
les
mov
test
mov
push
out
mov
add
movsb
ja
xchg
mov
xlat
push
ret
stc
imul
fwait
negb
lds
jno
and
adc
mov
push
adc
jne
or
in
or
popf
repnz
cmpsl
clc
aaa
insb
or
loopne
cld
sub
dec
cmpsb
popa
scas
pop
loop
fistps
adc
inc
inc
ret
insb
popf
loopne
shr
mov
rclb
call
push
in
push
jnp
dec
mov
or
mov
jnp
xor
pop
mov
push
push
outsl
enter
out
loop
cltd
inc
stc
jne
sbb
in
hlt
mov
cmp
gs
leave
adc
pop
jns
cmp
pop
add
repnz
les
xor
dec
inc
mov
jb
push
stos
xor
mov
cmp
shll
add
or
in
scas
lahf
leave
push
add
std
les
mov
sub
out
and
pusha
xchg
sahf
or
outsl
repz
movsl
push
cmp
jb
push
mov
pop
ljmp
stos
inc
mov
xor
call
jne
add
les
js
fdivrs
sub
push
popf
fdivl
popf
ret
mov
and
iret
cmpsb
jbe
push
or
mov
test
jle
adc
inc
cmc
mov
push
movhps
mov
jb
shl
mov
fnstenv
cwtl
mov
ja
and
stos
jns
inc
mov
pop
jp
loop
adc
sbbb
and
iret
outsb
xor
test
lea
repnz
fstl
pop
test
xchg
stc
call
inc
fs
aas
jl
stos
or
sbbl
imul
mov
xchg
shrl
jmp
sub
pop
and
mov
mov
sbb
xchg
inc
and
xor
xor
js
fistl
jno
test
xorps
pop
aad
out
ja
push
push
pop
and
test
pop
mov
mov
cmp
sahf
jns
ret
push
test
js
xor
push
pop
cmp
jne
and
inc
adc
cld
in
or
lds
out
add
push
out
movb
dec
jge
adc
arpl
or
pushf
mov
mov
mov
or
test
pop
cs
jle
addr16
fisubl
xchg
insl
xchg
stos
mov
jge
sbb
push
jo
les
mov
and
jge
roll
push
mov
repz
stos
xor
mov
mov
movl
add
leave
lods
dec
pop
js
cmpsl
lea
jl,pn
sahf
xchg
scas
cmp
decb
int
out
add
sarb
js
mov
mov
pop
cwtl
movsb
and
mov
roll
push
repz
jmp
dec
sar
pop
xchg
repz
js
scas
popf
sub
test
cmc
repz
data16
add
push
lret
jmp
in
adc
lods
je
into
jmp
jbe
cmc
dec
or
movsb
push
icebp
push
out
incl
mov
inc
xlat
mov
push
inc
mov
outsl
aaa
mov
addr16
pop
cmpsb
adc
adc
push
pop
cmp
xchg
add
es
adc
pmaddwd
inc
call
mov
ss
imul
cmp
jge
jb
loop
lds
pusha
xor
mov
call
test
imul
int3
xchg
aad
and
mov
fcomps
imul
pop
xor
inc
movsb
lods
les
pop
les
rorl
pusha
add
inc
xor
adc
jno
adc
aaa
daa
mov
stos
xchg
movsb
cwtl
stc
sub
jle
xlat
pop
sbb
push
fnstcw
push
outsb
sbb
pop
pop
inc
mov
sbb
push
inc
cmc
cmp
inc
aas
xchg
push
in
lock
pop
inc
in
mov
rcl
inc
cmp
rcr
push
pop
or
loopne
jg
pop
mov
pcmpgtw
xchg
xchg
mov
in
stos
jno
lahf
mov
fistps
xlat
or
push
push
lock
stc
mov
enter
hlt
fdivrs
or
loop
dec
mov
int
and
xchg
pushf
clc
test
xor
adc
sub
lret
test
add
mov
movsl
in
sub
pop
jnp
movsb
sti
pop
add
test
mov
bound
inc
out
xchg
cltd
cmp
arpl
sahf
adc
sbb
xchg
sahf
xor
lea
xor
jo
mov
mov
loope
fisubl
adc
shll
push
or
push
mov
sub
push
sti
nopl
mov
fmuls
leave
clc
ja
sbb
lods
add
cmc
imul
ljmp
add
sbb
jp
add
mov
push
nop
jnp
adcb
adc
jmp
loopne
sar
cmp
in
sub
out
arpl
in
ret
out
sub
add
jne
dec
xor
cmp
repnz
cmp
push
in
js
cmpeqps
hlt
repz
jle
jne
lods
icebp
jmp
dec
mov
sbb
inc
push
adc
je
push
sti
js
sbb
lock
mov
xor
xor
aaa
addl
xchg
fs
lahf
jecxz,pt
ficompl
out
int3
out
lock
iret
in
mov
sbbb
inc
test
fnstsw
ror
pop
cmp
clc
into
jp
in
aas
pushf
into
sbb
in
jge
call
out
out
stos
scas
outsb
ret
sub
int
aad
dec
mov
xor
adc
inc
icebp
rol
sbb
push
hlt
ffreep
ds
es
ljmp
out
inc
les
adcl
das
leave
jbe
sub
jp
mov
jl
mov
iret
pusha
and
mov
gs
fldz
add
loope
sti
inc
cmpsl
lods
cltd
insl
scas
jp
mov
add
push
shll
mov
jecxz
out
fwait
nop
push
out
dec
test
adc
aad
mov
jno
ja
aaa
jnp
cli
mov
dec
cltd
xor
xchg
int3
push
sti
cmp
xor
cwtl
pop
daa
jns
orb
out
mov
mov
test
dec
fs
pushf
sbb
fstpt
sbb
push
mov
mov
ja
lret
test
cmp
dec
lods
xor
adc
jecxz
push
bound
jno
push
pop
xchg
addr16
adc
aaa
xorb
cltd
mov
mov
dec
adc
int3
push
mov
dec
cmp
jns
and
sub
testb
shl
cmpsb
gs
push
es
jae
push
xchg
mov
push
lcall
or
xor
mov
rcr
pop
jg
pushf
mov
ja
or
push
mov
pop
and
in
or
adc
fmull
inc
add
cmp
popf
lds
sarl
hlt
cmp
pop
or
test
push
lods
inc
jp
and
or
dec
bound
lahf
pop
imul
stos
andb
push
addr16
jnp
je
in
xchg
test
xor
push
cs
pop
stos
push
aad
adc
nop
mov
inc
or
inc
insl
sbb
punpcklwd
or
xchg
sbb
shrl
add
xchg
push
push
enter
mov
dec
inc
repz
andb
repnz
push
jp
enter
sub
xlat
inc
push
loope
xchg
fsubl
add
inc
fldenv
add
shlb
testl
fcmovbe
xchg
mov
cwtl
xchg
xchg
and
mov
test
nop
xlat
in
lret
adc
mov
inc
sub
stos
outsl
imul
mov
stos
imul
leave
jbe
lods
arpl
jno
repnz
shll
js
mov
mov
add
mov
lea
mov
mov
push
cmp
sub
pop
mov
addb
inc
mov
fldcw
pop
cs
ret
int3
adc
push
repz
jnp
cmp
mov
mov
mov
ljmp
xchg
test
std
jmp
or
aas
pop
aad
cli
mov
mov
dec
in
ret
sub
cli
stc
push
or
hlt
pop
xchg
rorl
loopne
push
sbb
sbb
and
and
dec
mov
lcall
enter
sti
aam
add
or
add
hlt
cmp
icebp
mov
cwtl
jbe
mov
out
and
ljmp
ret
lahf
mov
clc
jnp
xor
pop
dec
xor
xor
xor
push
xor
mov
jno
pusha
add
aam
insl
cmp
jle
lea
mov
mov
jmp
inc
mov
sbb
mov
inc
or
sbb
fimuls
fadds
xchg
adc
repz
cs
in
jg
enter
push
pop
insb
loope
or
ss
ljmp
pop
aas
daa
jno
jmp
push
sbb
push
and
and
push
clc
imul
xchg
lock
jp
adc
clc
repnz
jno
or
ds
rcr
jb
inc
or
dec
cmp
cmp
xchg
adc
test
xor
test
aam
push
fisubs
rcl
push
mov
loope
lahf
cmp
cwtl
pop
jbe
stc
scas
inc
out
aam
adc
jl
rcr
mov
sahf
out
and
repz
subb
fs
pusha
test
idivl
cmp
rcll
fsubl
in
sbb
cli
stos
ret
mull
mov
outsb
xchg
jl
cs
mov
jne
sub
iret
inc
add
sarl
pop
ret
pop
repnz
scas
jecxz
scas
jnp
aam
mov
mov
mov
out
sbbl
and
stos
dec
outsl
aaa
bound
jge
fnstcw
xor
daa
mov
lods
sbb
mov
sub
inc
adc
xor
inc
pop
cwtl
jecxz
repnz
rol
mov
sub
insb
jns
call
lods
testl
xor
pop
mov
leave
in
jae
xchg
insl
inc
lret
and
out
or
das
cmpsl
dec
insl
sub
pop
xchg
and
aas
rcr
xchg
jno
dec
repz
xchg
jle
and
xor
popa
into
and
test
jg
jo
mov
dec
jne
adc
pop
mov
jl
adc
mov
sti
call
pop
mov
sub
xchg
jae
push
inc
mov
adc
adc
aaa
enter
nop
pop
cmp
les
xchg
cmp
push
push
pop
aas
jb
sar
pop
lods
xchg
js
je
in
lcall
outsb
jecxz
jo
pop
iret
mov
mov
ja
addl
stc
or
je
jne
inc
mov
rorl
cs
mov
xchg
xchg
lods
aas
pop
mov
and
outsb
mov
insb
ja
add
jmp
inc
pop
jns
fsubrl
mov
cli
sbb
fs
clc
fdivp
xor
int
jle
ret
sarb
repz
jge
shll
push
ret
sbb
cli
mov
loop
pop
arpl
jmp
pusha
dec
cmpsl
push
scas
pop
lock
dec
jne
jbe
lea
shll
jg
fs
fsts
psadbw
or
sti
sub
jmp
out
xchg
dec
mov
pop
arpl
leave
dec
les
mov
xchg
test
push
cmp
sbb
roll
leave
mov
jne
and
insb
inc
pop
inc
lret
in
aaa
sub
adc
cmp
psllw
call
mov
cld
sub
xorb
or
xor
sub
dec
std
inc
push
std
mov
mov
dec
sbb
xor
in
sbb
repnz
add
clc
loop
push
fisttpll
sbb
out
aam
xchg
in
arpl
mov
mov
sbb
stos
sbb
ljmp
and
cld
mov
popl
or
ljmp
dec
je
pop
scas
inc
sub
fsubr
xor
pop
stc
out
xor
cmp
mov
adc
ret
or
push
cs
push
dec
shlb
fldcw
pop
pop
sub
enter
lea
sbb
mov
and
dec
sbb
cmp
mov
leave
xchg
dec
and
jns
imul
sub
inc
lock
jp
mov
jg
iret
mov
xchg
pop
xchg
pop
xor
push
mov
cmpsb
cmp
or
sar
mov
add
js
movsl
pop
addl
in
dec
call
mov
popa
js
imul
aam
dec
mov
scas
mov
lods
scas
add
or
inc
or
inc
test
mov
mov
sub
mov
mov
mov
ret
cwtl
or
pop
das
mov
repnz
fwait
stos
ficomps
jns
pusha
out
in
pusha
ret
psrld
inc
int
inc
push
mov
pop
hlt
outsb
scas
jmp
mov
jae
sub
lret
mov
sbb
sti
jne
inc
shll
leave
insl
mov
cmp
cmpsl
sbb
insl
stos
aad
scas
sbb
adc
insl
jge
and
sarb
or
cmpb
cmp
lods
sub
std
fadd
pop
and
xchg
negl
xchg
cmp
xchg
fdivs
loopne
outsb
int3
pop
ret
enter
ret
mov
dec
clc
fcoms
adc
or
dec
push
mov
movsl
fwait
and
movsl
jno
or
add
pop
push
je
cld
test
inc
popa
idivb
int
loope
js
push
adc
pop
or
mov
xchg
xchg
pop
add
push
mov
or
call
rolb
and
sti
or
outsl
ss
xchg
mov
mov
in
push
insb
push
cmc
shlb
adc
push
in
xchg
icebp
xor
lahf
xchg
nop
in
or
xchg
cmpsb
mov
mov
inc
aam
push
xchg
inc
jmp
in
popa
leave
cwtl
test
test
push
ja
es
sbb
int
movsb
push
xchg
sti
xchg
sub
dec
xor
sbb
lahf
dec
icebp
mov
hlt
xor
js
lock
dec
aas
mov
inc
pop
adc
mov
pop
fs
add
push
fadds
pop
and
lahf
xorl
test
mov
add
gs
and
jno
pop
lods
in
fidivrs
xchg
stc
int3
into
rcrl
or
jb
cmc
add
out
inc
push
les
fistl
pop
aas
out
inc
test
push
push
sbb
jp
and
lock
outsb
out
pop
mov
xchg
mov
jmp
dec
and
add
out
mov
jae
testb
shl
inc
or
call
jl
cmp
cwtl
inc
popf
outsl
int3
enter
pop
cld
call
mov
or
mov
push
and
mov
fisttpl
mov
cmp
std
fucomi
rcrb
cmp
push
pusha
hlt
xorb
std
inc
mov
fisttpl
mov
dec
push
or
push
add
adc
negl
jo
roll
mov
adcl
scas
subl
int
arpl
in
mov
jecxz
cmc
push
sbb
mov
dec
push
inc
xchg
cmp
cli
lods
push
enter
in
test
or
sbb
jecxz
rclb
cmp
mov
hlt
loop
jb
cmp
push
dec
mov
imul
test
xchg
or
in
push
stc
push
push
sahf
repz
adc
aam
aad
pop
jg
data16
test
sti
inc
or
sar
pop
xor
fnstenv
mov
add
mov
in
xchg
sub
sti
sbb
mov
jp
rclb
js
sub
jle
inc
enter
push
mov
xchg
mov
xchg
adc
or
and
jno
add
mov
mov
lods
iret
popf
sbb
bound
jnp
int
fstl
arpl
aaa
xchg
adc
mov
mov
lds
xchg
pushf
push
das
fidivrl
jle
adcb
jp
cwtl
rorl
rcrb
gs
out
scas
popf
push
adc
mov
das
shll
fcom
shlb
mov
pop
adc
cmpsb
orps
gs
addr16
dec
adc
shrb
mov
mov
jbe
sarl
fidivs
mov
inc
loopne
pop
push
sbb
mov
inc
mov
adc
jnp
cmp
mov
add
cmp
mov
mov
inc
mov
mov
fcoml
cs
bound
sub
lock
and
xchg
js
add
aas
mov
mov
stos
arpl
pusha
xor
shl
xchg
inc
shll
cmpsl
clc
lock
dec
adc
cwtl
pusha
push
mov
incl
sahf
mov
inc
dec
inc
ja
ljmp
repnz
icebp
push
fnstcw
push
push
sub
addr16
js
movsb
cmpsl
and
outsb
adc
mov
js
inc
int3
pop
push
mov
ss
adc
sti
add
cmp
ret
sub
add
rcrl
ds
test
lret
push
push
cli
mov
dec
adc
xor
inc
jmp
mov
std
push
sub
imul
insl
fisttpl
jne
ss
fmulp
xlat
inc
insl
popf
jns
xchg
shll
dec
fnstcw
gs
add
inc
shlb
aad
and
js
cmp
mov
mov
cmp
adc
test
push
xchg
popf
inc
adcl
mov
test
fmull
mov
fwait
aam
xor
xchg
stc
outsb
and
negl
movsl
out
push
shrl
push
xor
xchg
outsl
repz
xchg
popa
mov
push
pop
xchg
nop
int3
lcall
adc
xchg
push
loopne
mov
test
outsl
bnd
iret
test
lret
mov
idivb
or
aas
adc
das
xchg
out
mul
loopne
xchg
pop
inc
inc
stos
scas
inc
mov
inc
xchg
in
jle
mov
add
mov
ljmp
in
jmp
adc
mov
sarl
push
push
mov
leave
sarl
scas
rolb
mov
and
loop
pop
jnp
scas
call
out
repnz
adc
sub
andl
and
fnstcw
stos
stc
adc
adc
sbb
roll
fisubrs
mov
mov
or
das
and
dec
mov
popl
sti
pop
dec
mov
insl
movsb
add
out
outsb
xchg
sub
inc
xchg
fs
xchg
aaa
in
adc
daa
in
arpl
cmp
or
mov
add
pushf
jg
mov
xor
xor
cmp
cmp
pusha
inc
sub
cmc
and
ret
or
jns
mov
pop
daa
add
mov
sbb
nop
mov
dec
or
rorb
in
testl
fwait
lcall
dec
in
push
adc
sub
fistps
test
or
xor
inc
int3
mov
adcl
add
mov
mov
dec
js
fsubs
addr16
comiss
adc
leave
push
or
lods
cld
pop
mov
sbb
bound
movsl
repz
mov
adc
out
sub
pop
sub
in
stos
neg
adc
scas
jmp
rorl
out
xlat
jne
fmull
orl
movsb
and
pop
popa
xchg
push
test
clc
popf
dec
push
add
imul
xchg
lret
adc
pop
inc
push
ljmp
mov
in
js
inc
in
clc
jmp
jns
enter
inc
jl
sarb
nop
mov
movsl
xchg
adc
in
dec
xchg
scas
inc
daa
adc
cld
push
pop
outsb
outsb
lods
test
es
adc
and
int
jmp
xor
dec
add
scas
ss
cmpsl
push
mov
xchg
jp
mov
xor
pop
ficomps
inc
dec
inc
adc
repz
lods
add
or
xchg
sub
jb
jbe
fistl
adc
int
push
push
ss
hlt
nop
test
push
inc
aam
call
rcl
xor
xchg
and
cmpsl
sub
aad
pop
xchg
jge
add
fadd
mov
cmp
jmp
mov
scas
and
jo
xchg
xchg
lret
push
test
sahf
jb
cmp
leave
sbb
mov
sbb
movsb
ret
xor
mov
aad
mov
adc
cwtl
scas
insl
mov
shlb
or
push
sub
sub
fwait
push
adc
adc
sub
loopne
movsb
das
pop
xchg
inc
imul
cli
adc
xchg
inc
push
adc
mov
jmp
mov
sub
sub
jg
inc
push
nop
add
lods
and
iret
int
in
in
ds
sbb
dec
inc
repz
dec
or
mov
mov
or
jmp
dec
mov
sbb
cwtl
hlt
out
jbe
mov
imull
insl
ds
pop
movsb
nop
adc
xchg
cli
enter
ds
inc
add
test
and
mov
pop
inc
rcll
shl
jae
popf
cmpsb
out
xchg
scas
sbb
aaa
add
popa
int
fcoms
mov
mov
and
mov
or
jecxz
jle
mov
sub
sti
cltd
fcmovbe
int3
jle
inc
and
jno
push
in
and
stc
sbb
adc
push
movsl
sub
bnd
out
in
inc
lcall
xchg
pop
jbe
push
inc
fnstcw
mov
in
inc
ds
stos
jno
add
jbe
pop
loop
xchg
xchg
std
jge
stos
bound
lcall
lret
outsb
ljmp
pop
fldt
aaa
fdivs
add
je
shll
ljmp
jnp
xchg
push
xchg
mov
mov
dec
pop
popa
sbb
stc
adc
jmp
fcmovnu
hlt
add
inc
imul
jo
lcall
pop
jle,pt
test
cmp
add
push
sbb
pop
enter
adc
or
and
push
jnp
xchg
mov
lahf
dec
in
rcrb
cld
mov
gs
cld
push
sub
pop
mov
dec
and
add
aam
xchg
movsl
mov
or
rorb
mov
cmp
adc
sbb
andl
pop
or
inc
pop
stos
push
xor
push
es
mov
rcl
test
xchg
xor
inc
pop
pop
cmpsl
aad
bound
push
inc
cltd
sub
sbb
outsb
mov
daa
or
scas
subl
popa
ljmp
cltd
mov
out
mov
push
popl
jg
in
ljmp
lods
leave
sbb
push
outsb
cwtl
dec
sub
cld
movsb
in
add
cmp
mov
and
dec
pop
jp
adc
test
jp
gs
aam
fiaddl
cmc
sti
or
hlt
mov
repnz
pop
dec
sub
scas
xchg
loope
inc
dec
jb
push
mov
lock
js
fists
inc
sbb
hlt
xor
and
movsb
pop
test
jmp
mov
fs
leave
into
sbb
pop
mov
push
pop
scas
and
icebp
adc
cld
lret
jb
dec
mov
push
mov
adc
jns
push
std
out
fwait
push
and
ja
outsb
push
aad
sbb
mov
pop
lcall
dec
adc
or
notl
rcrl
mov
mov
push
adc
push
mov
push
push
std
iret
mov
ds
jmp
gs
aad
pop
popf
push
cmp
cld
mov
push
out
inc
test
icebp
mov
cmpb
loopne
aam
test
fistpll
pushf
movsb
dec
das
stos
and
sub
outsl
aad
pop
loop
imul
push
xchg
out
inc
lea
ret
stc
ret
cmpsl
clc
aam
pop
fwait
and
xchg
sti
test
jae
insl
loope
rorb
inc
loopne
movsb
rcr
mov
cli
push
aad
addr16
push
pusha
test
and
or
push
add
dec
xchg
cli
pop
imul
jne
aad
xchg
imul
repnz
mov
ret
notb
cwtl
cmc
and
cltd
clc
push
and
bnd
lcall
sbb
jns
or
sub
sti
cmp
jle
fsubs
jns
pop
dec
rorl
jbe
out
lods
mov
adc
std
aad
rorl
ljmp
xchg
and
js
add
mulb
in
popf
and
fimull
lret
mov
inc
lcall
jg
mov
mov
add
mov
xor
mov
into
or
js
xor
xor
test
stos
jl
push
mov
jb
cmp
add
and
mov
push
inc
jns
inc
sahf
ss
rolb
cwtl
pop
leave
inc
xor
imul
rcrl
popf
test
push
ficoms
scas
push
roll
xor
and
ficompl
nop
les
sub
int
pusha
xchg
pop
insl
daa
enter
add
push
loopne
mov
xlat
inc
loopne
lahf
dec
test
pop
repz
xor
shl
rcl
cmpsl
aas
bound
movsl
lret
mov
and
xchg
std
sub
push
das
xchg
push
ja
adc
pusha
pop
rcrl
ret
invd
fsubp
mov
int
pop
jecxz
mov
cs
int
test
push
ficompl
fistps
cmp
jo
jno
repz
inc
xchg
mov
cmc
pop
addr16
xchg
mov
lea
imul
add
scas
xchg
gs
bsr
sbb
mov
gs
mov
cmp
inc
out
loopne
add
jo
mov
fmul
and
jg
push
pushf
mov
cmp
dec
mov
adc
les
in
mov
push
mov
fdiv
es
jb
lea
xchg
out
cmc
cwtl
lock
fwait
aad
push
fisttps
out
xchg
or
add
cld
std
test
fisubs
mov
cmpsl
pusha
rorl
jbe
jge
test
mov
xor
xor
push
cld
fbld
in
cmp
push
imul
push
bound
xchg
nop
jmp
test
repz
ss
pop
adcl
and
pop
addr16
clc
sbb
lods
mov
clc
mov
sbb
cmp
inc
mov
hlt
loopne
or
leave
jecxz
pop
jae
mov
stos
cltd
jge
test
mov
xchg
jge
mov
lret
jb
mov
andl
and
repnz
clc
and
mov
mov
pop
cmp
mull
add
mov
adc
push
cs
jl
pop
pop
in
cmp
gs
lret
hlt
fcmovbe
rolb
push
std
or
std
daa
and
data16
xor
push
imul
imul
ror
pop
movsl
push
stos
test
ljmp
pop
pop
xchg
or
loope
xchg
xlat
rcrb
cmc
jle
mov
pop
xchg
pop
or
jb
mov
mov
cmpsb
mov
cmp
xchg
out
jb
loope
cmp
shrl
fwait
cmp
xor
andb
fbstp
sbb
pushf
mov
int
outsb
scas
jg
lret
stos
into
mov
nop
leave
lcall
jae
std
imul
pop
push
std
or
outsl
das
pop
pop
insb
sbb
rol
xchg
cmp
daa
pop
dec
imul
xchg
into
and
stos
inc
shrl
repz
pop
out
mov
popf
leave
xchg
mov
mov
push
subb
pop
test
mov
mov
test
xorb
cmc
insl
lods
out
imul
or
daa
scas
add
jnp
fmul
jge
mov
std
mov
sub
xchg
in
fisttpll
ljmp
in
popa
into
repz
sub
lret
int3
jb
xchg
adc
pop
cwtl
into
movsl
mulb
jl
outsb
divl
and
outsl
xor
push
inc
inc
xchg
push
add
xchg
pop
in
adc
sub
xor
ljmp
data16
repnz
cltd
mov
pop
ljmp
fsubs
adc
add
inc
pusha
out
adc
cmp
sbbb
push
orb
fstpl
cltd
dec
aaa
push
jne
push
ds
add
cwtl
sub
adc
pop
mov
daa
into
xchg
inc
xchg
cli
push
xchg
or
add
insb
lahf
ret
push
int3
fisubrs
mov
mov
aad
lcall
sbb
in
cmp
push
out
adc
dec
mov
sbbb
jbe
pushf
lret
jae
loopne
rorb
xor
adc
stc
arpl
cmp
dec
mov
loop
push
scas
mov
sbbl
inc
in
mov
es
cmp
sbb
mov
add
add
jo
lcall
shrb
mov
shrl
fstpt
jnp
fbstp
jne
push
xor
sarb
mov
rolb
hlt
lds
stos
cmc
and
je
int
jge
pop
sbbb
jno
inc
xchg
cmc
les
fdivr
std
dec
loop
shrb
sbb
xchg
cmp
lret
sub
mov
add
mov
ljmp
das
pop
or
adc
dec
in
pop
lods
cmp
nop
cmpsl
das
jo
jp
xchg
mov
or
ss
adc
sub
mov
pushf
mov
inc
push
push
dec
push
repnz
int3
mul
sbb
mov
gs
xor
jbe
sbb
test
ret
dec
mov
mov
push
mov
mov
test
divb
gs
mov
add
pushf
loop
test
mov
xor
fs
sbb
dec
cld
rclb
outsb
imul
inc
jmp
xchg
or
xlat
dec
mov
stc
jmp
test
fimull
pushf
mov
bound
adc
mov
dec
inc
sti
cmp
mov
mov
and
in
lahf
mov
loope
mov
mov
in
arpl
ds
ret
cltd
push
mov
push
push
out
xchg
xor
out
adc
xor
add
push
loopne
push
or
incl
mov
jg
adc
scas
jbe
in
add
stos
inc
adc
push
mov
pop
clc
fucomi
loop
data16
addb
mov
and
dec
dec
adc
xorl
shll
jns
cwtl
jp
enter
testb
pop
mov
inc
nop
jg
outsl
push
std
enter
movsl
faddl
les
mov
and
mov
sarl
inc
outsl
mov
out
adc
addr16
xor
xor
and
or
icebp
out
test
in
push
sbb
lret
inc
pop
sub
add
mov
andb
push
xor
out
lret
out
xor
cmp
sub
fimull
dec
ljmp
test
es
cmp
pop
jg
inc
sti
push
jg
xor
fucomp
sub
push
inc
in
adc
mov
pushf
cmp
sbb
ret
xor
out
pop
mov
dec
in
add
cmp
inc
xor
mov
jbe
xor
mov
cld
shrb
xchg
add
cmc
xchg
push
adc
push
lcall
pop
js
in
add
sub
in
repnz
es
in
repnz
push
into
mov
mov
ficoml
adc
and
dec
adc
cmpb
ja
je
push
std
push
inc
insl
in
cmc
dec
pop
xor
call
iret
pop
into
add
push
rclb
xor
sub
and
int
stos
pop
xchg
bound
lock
push
imul
pop
movsb
sbb
daa
aam
push
fucom
lahf
ja
sahf
mov
pushf
mov
inc
xor
sub
jno
dec
and
push
pop
adc
cld
mov
lret
mov
idivl
test
pop
lahf
pusha
xchg
sub
xor
xor
bnd
sahf
in
cmp
ret
pusha
mov
jb
imul
out
xchg
leave
test
rclb
ret
lods
imul
push
outsb
add
mov
cwtl
popf
notl
push
popa
push
das
mov
fstpt
clc
insl
sub
xor
adc
gs
pop
mov
pop
mov
dec
add
dec
jl
xchg
fs
xchg
jp
lret
push
testb
loop
xchg
push
addr16
sbb
and
lea
repz
pop
popf
mov
xchg
sub
sbb
movsl
stc
and
or
cmc
add
jo
adc
pop
mov
unpcklps
cmp
jg
jmp
and
jg
mov
xlat
les
loopne
fdivp
add
mov
mov
lahf
iret
leave
xor
mov
popa
xchg
test
cli
mov
rolb
shrb
cld
sbb
mov
push
pop
mov
imul
mov
cli
xchg
sub
jle
fcompl
sti
icebp
fidivs
mov
lcall
mov
imul
in
pop
icebp
push
ror
in
jo
loopne
add
daa
push
sbb
jns
fnstsw
cltd
sub
xchg
jb
jae
push
jne
dec
lcall
je
xchg
mov
lods
dec
sub
or
xor
mov
xchg
xor
aam
in
jmp
mov
cmp
mov
and
cltd
aas
mov
mov
js
push
or
jae
arpl
jg
and
mov
std
push
pop
or
loop
repz
daa
xlat
lret
or
mov
aaa
push
movsb
jb
and
sub
mov
mov
cmp
cmpsb
xor
or
lahf
jmp
pop
and
mov
daa
pushf
jecxz
insb
push
mov
test
push
add
pushf
cwtl
ljmp
mov
xchg
adc
popf
dec
xorb
or
scas
ret
loope
mov
inc
shrb
rcl
dec
sarb
test
ret
mov
pop
andl
add
pushf
sub
mov
push
mov
clc
stos
test
stc
jmp
outsl
insb
aad
lea
clc
sub
fistl
out
test
fdivr
jle
out
in
mov
arpl
jbe
xor
scas
mov
pop
aaa
pop
jmp
aam
fiadds
loopne
dec
mov
outsl
lret
pop
pop
ret
push
mov
mov
pop
adc
je
cmp
cld
aaa
out
push
faddp
cmpsb
jge
dec
push
lods
test
xchg
out
add
lods
sarb
lds
int3
lret
mov
mov
push
dec
or
out
sub
movsb
testb
sub
mov
mov
out
stc
cmp
sub
lahf
xchg
pop
inc
pmaxsw
enter
xor
popa
xchg
sbb
mov
or
mov
in
test
shrb
mov
shlb
sbb
aam
jae
pop
jo
in
inc
push
sub
pop
ljmp
mov
pop
int
shl
test
sub
iret
lcall
fwait
mov
mov
push
loop,pt
xor
push
in
mov
mov
and
je
fwait
cmp
xchg
and
imul
rolb
aas
xchg
xor
mov
push
xor
push
sub
jge
jle
insl
add
adc
fcoml
push
pusha
hlt
add
mov
jge
jns
popa
pop
xor
in
fcomps
dec
sub
aas
or
cld
fdivrl
add
je
sarl
das
aam
dec
add
js
push
cmpsl
cmp
loop
loopne
jae
cld
arpl
push
mov
out
inc
fldt
or
shlb
sub
add
inc
xor
enter
test
push
stc
sub
inc
ret
lock
imul
push
push
and
cli
jns
xor
jbe
enter
pop
sbb
test
add
mov
std
adc
xor
adc
push
mov
pop
inc
sbb
push
outsl
cmp
js
push
shrd
ret
dec
xchg
lret
cmp
into
cltd
pop
jb
test
sti
jg
fisttpll
add
nop
enter
ret
loopne
fs
cmp
mov
lcall
fwait
das
ja
jb
out
movsl
mov
dec
mov
inc
div
mov
lock
test
js
fcoms
dec
jmp
sbb
test
add
movsb
push
daa
ret
inc
gs
jnp
icebp
or
mov
arpl
insl
jmp
out
movsl
inc
adc
leave
push
dec
add
into
sbb
sbb
cwtl
les
pop
popf
jno
or
jae
outsb
mov
icebp
rorb
fs
insb
icebp
mov
gs
ds
insl
jnp
icebp
and
stos
sub
jns
xchg
fdiv
jp
pop
mov
sub
and
dec
arpl
pop
cmpsl
jo
push
mov
mov
jmp
stos
sbb
test
inc
mov
sub
mov
aad
xor
add
jno
cmp
or
xor
dec
test
mov
add
sub
pop
sahf
in
out
hlt
sbb
or
sub
ljmp
mov
add
repz
xor
mov
sub
mov
push
mov
pop
mov
fnstsw
mov
sub
rorl
jp
scas
jns
push
jae
rorb
js
fwait
or
adc
add
mov
insb
push
lods
push
and
or
add
sahf
sub
popf
adc
pop
in
scas
data16
gs
jb
mov
jp
cltd
sarl
gs
jno
jbe
mov
jg
je
cmp
sahf
lcall
scas
lods
shrb
push
test
in
imulb
xchg
into
icebp
aad
adc
arpl
xchg
mov
std
cmp
add
lcall
lods
pop
fs
dec
pusha
pop
in
jno
sti
jb
repnz
stos
add
xor
push
mov
pop
ret
and
sub
mov
jno
hlt
or
sub
outsl
push
stos
pop
test
mov
rcl
xchg
sbb
and
icebp
sbb
popa
mov
imul
xchg
loop
xchg
jg
xor
jl
loope
mov
mov
arpl
js
aaa
sub
inc
sbb
mov
cmp
fstpl
jae
test
mov
add
mov
ror
mov
and
xchg
lds
sub
sbb
xlat
sbb
mov
loope
ds
jo
rclb
ficomps
sbbb
ss
xchg
repz
add
inc
rolb
push
imul
mov
cld
and
or
mov
ficoml
pusha
pushf
xor
clc
mov
xchg
arpl
fstps
dec
mov
int3
sbb
mov
lret
js
dec
lret
and
cmp
cs
sbb
mov
mov
in
popf
lods
das
xchg
fsubrl
nop
std
gs
das
adc
and
int3
dec
insl
and
jecxz
or
sbb
leave
popf
insb
nop
adc
sbb
nop
in
push
jne
push
test
sbb
mov
fbld
push
xchg
sub
les
jge
out
mov
loope
jle
jl
add
ljmp
loope
sbb
rcll
sub
and
jecxz
fs
pushf
repz
push
dec
enter
fs
cmp
outsb
pusha
ljmp
push
lahf
inc
sahf
pop
fisttpl
cwtl
bound
stos
xchg
lods
gs
lret
push
rclb
cmp
pusha
sbb
push
pop
daa
imul
les
jp
das
push
push
dec
fisubl
in
icebp
adc
pop
cmc
rorl
sbb
cmp
mov
js
pop
mov
inc
jne
xchg
add
sahf
cli
or
mov
mov
insl
cmp
push
out
fwait
pop
cmc
sub
mulb
in
mov
or
outsl
push
dec
nop
push
dec
mov
pop
shr
add
shlb
or
jg
mov
jecxz
inc
push
lahf
mov
push
outsb
out
xchg
dec
roll
out
leave
int
push
in
dec
data16
popf
sub
sbb
loop
dec
test
cmpsb
inc
cmp
out
shll
xchg
das
popf
add
clc
rcll
sti
adc
fstps
mov
adc
add
and
xor
mov
jno
ljmp
test
adc
jno
push
sbb
dec
ret
ficompl
sbbb
jno
lds
cli
lret
dec
pop
lods
adcb
out
shll
xor
lcall
daa
sub
imul
fcomps
dec
push
mov
pop
push
pop
ret
or
xlat
mov
or
inc
xchg
push
aaa
sub
lods
inc
ja
ds
fmull
ror
faddl
sub
pop
test
jne
pushf
push
fs
test
jge
in
idivl
sbb
sub
orl
xlat
xchg
ss
sbb
push
arpl
jle
cmpsl
mov
mov
mov
lods
shl
cmp
sub
jo
sbb
dec
mov
cmc
sub
je
dec
or
fisubrl
mov
xchg
sbb
add
jmp
cmp
mov
xor
test
and
lods
stos
mov
loop
adc
and
xchg
add
xchg
in
jle
cmpsl
inc
sbb
int
sbb
fisubrl
pusha
lret
xchg
imul
popf
out
in
push
bound
aam
jb
ljmp
push
sbb
dec
ret
mov
dec
and
push
pushf
mov
bound
in
pop
lods
dec
loopne
mov
xor
jne
in
mov
jo
test
jbe
sti
lock
cmp
mov
sub
rcr
leave
data16
ljmp
stos
lods
push
sti
outsl
xor
dec
push
lds
or
adc
pop
cmpsl
insb
test
out
sub
aad
xchg
xlat
dec
outsl
cwtl
pop
cmpsl
mov
ja
ret
adc
or
lock
imul
dec
adc
mov
data16
shl
loope
rcll
or
pop
fwait
pop
xlat
hlt
inc
or
rorl
mov
lods
mov
push
add
xor
mov
test
insb
xchg
icebp
popf
xchg
sbb
inc
mov
fsts
rcll
jle
jb
push
insl
xor
int
xchg
jae
imul
in
out
push
jp
fmuls
push
xchg
pop
out
mov
sbb
dec
push
loope
jle
lock
inc
xchg
sbb
fdivl
inc
xor
sarl
stos
lcall
ud2
xchg
sti
cmp
or
jbe
xorb
cmpsl
aad
push
xchg
sub
pusha
lret
mov
arpl
lcall
and
fildll
test
mov
xor
mov
sub
sbb
and
cltd
add
dec
test
lods
adc
fldcw
xchg
mov
or
xor
insb
loop
dec
popa
adc
in
scas
andb
pop
fimuls
pop
out
sbb
roll
xchg
icebp
jg
xchg
addl
cli
rcrl
pop
pop
jmp
xor
push
cltd
mov
stos
cmp
jae
jns
jbe
pop
stos
repnz
jge
jne
fmull
sub
test
mov
jle
movsl
enter
xor
pop
add
and
mov
hlt
out
sbb
je
out
ja
pop
lcall
test
mov
and
xchg
test
scas
inc
rcrb
imul
mov
xlat
int
mov
jge
dec
push
loop
ljmp
stos
mov
pop
xor
pop
pop
jbe
or
and
add
mov
push
inc
sbb
repnz
movsb
mov
fistps
xchg
sub
and
inc
xacquire
fsubl
pop
rorl
xor
clc
pusha
cwtl
push
mov
jae
jb
push
mov
lea
pop
xchg
jp
inc
ja
iret
xor
xor
mov
ss
popa
inc
cmp
outsl
inc
lcall
ja
std
xchg
pop
faddp
push
shlb
mov
push
out
add
loope
loopne
daa
cwtl
fucomip
inc
lahf
lahf
jb
aas
mov
mov
test
mov
and
imull
xor
lock
test
pop
lret
jp
arpl
leave
push
pop
sub
pop
inc
mov
push
sbb
std
xchg
cmpl
sahf
mov
sahf
dec
aas
leave
fcmovnbe
dec
shl
ret
lahf
push
adc
pop
xchg
rolb
not
sti
xchg
jmp
in
push
roll
enter
int
int
shl
scas
scas
icebp
dec
and
movsb
add
sahf
lret
popf
pop
idivb
jg
sub
inc
jl
iret
inc
push
imul
mov
std
inc
add
sbb
out
stc
push
imul
popf
in
stc
pop
cmp
jl
mov
sbb
sbb
dec
or
fsin
inc
insl
les
push
push
insl
cld
sub
iret
popf
cmp
and
sub
out
inc
jb
mov
ss
mov
xor
xchg
int
or
xchg
push
push
test
loop
sub
pop
push
xor
inc
dec
jge
cwtl
inc
mov
testb
ds
int
arpl
fs
xchg
sub
push
and
or
loopne
or
mov
mov
fists
mov
mov
add
cli
pop
das
push
push
xchg
ja
std
in
dec
sbb
leave
sarb
jns
cmp
lret
sarl
cwtl
cmp
lods
push
cmp
sbb
or
jo
or
jae
fsubrs
loope
rcll
pop
push
push
mov
xchg
push
push
gs
jmp
ficoms
sbb
or
dec
mov
add
cmc
es
fisubs
sub
ds
xor
xor
push
mov
jg
lret
cld
fidivs
daa
push
je
mov
xchg
push
pop
cld
adc
push
mov
mov
mov
xor
or
dec
orl
jge
mov
push
push
and
adc
xchg
jg
mov
gs
cmp
cld
push
dec
sub
pop
and
popf
dec
ret
jg
pop
ds
lcall
mov
incl
inc
ds
sub
mov
ss
lods
adc
or
pop
dec
xor
jnp
sti
sbbb
fsubrs
sub
adc
dec
orl
push
push
scas
jge
cmp
bound
pushw
xor
mov
hlt
and
cltd
aaa
inc
loop
lcall
dec
js
fdivp
clc
adc
or
decl
and
xchg
cld
movsb
lcall
sti
mov
aaa
cli
pop
mov
jnp
xchg
or
mov
in
in
rcr
cmpb
dec
fcomps
jns
mov
or
cmpsb
sahf
ljmp
lods
mov
ds
xchg
or
test
fdiv
fiaddl
loop
icebp
mov
sbb
adc
inc
cmp
loop
lret
mov
mov
jl
cs
aas
cltd
pusha
jl
or
nop
data16
mov
and
ds
dec
lods
shll
and
xor
xor
adc
cmpsl
inc
jg
orb
add
test
push
pushf
clc
xchg
jae
lret
imul
push
pop
or
loopne
xchg
add
add
mov
push
sbb
popf
mov
push
cli
fwait
cmp
mov
jo
mov
sub
pop
inc
mov
lods
cltd
std
lods
inc
pushf
inc
inc
in
adc
inc
cmp
cmp
xor
outsb
test
daa
push
cmpsb
xlat
dec
adc
ficompl
das
je
test
dec
std
inc
adc
pop
ret
loope
mov
imul
adc
gs
scas
data16
ljmp
add
ja
cltd
ret
in
fcoms
mov
lcall
or
pop
or
sbb
in
inc
cmp
je
dec
pop
cmp
push
jge
mov
inc
filds
dec
xchg
stos
jnp
and
lcall
in
enter
pop
xor
push
pop
imul
test
icebp
push
jecxz
cs
fcoml
cmpsb
stos
cmp
push
jp
jg
jle
and
bound
shll
scas
cmp
xchg
cwtl
fimuls
and
stos
push
aaa
movsl
imul
xor
in
jae
cs
fidivrs
sub
cwtl
data16
and
stos
mov
mov
aam
gs
mov
movsb
bound
or
and
sarl
div
lods
sti
push
arpl
mov
push
icebp
mov
push
inc
fstps
sub
lock
repnz
fistpll
push
cli
inc
or
pop
daa
cmp
ret
inc
rorb
stos
push
xchg
pop
aas
fsub
inc
jo
aam
test
dec
pop
mov
call
mov
ss
push
xchg
dec
out
nop
jle
incb
es
call
or
adc
pop
mov
sbbl
fisubs
sbbl
test
enter
int
out
out
push
or
insl
sbb
sbb
leave
inc
xor
pop
mov
cli
add
imul
leave
push
sbb
test
jae
xchg
aaa
jmp
faddl
test
xor
mov
movsl
outsb
sub
lods
pop
fdivl
addr16
xor
xchg
jmp
xchg
leave
test
xor
loopne
sub
inc
fisubrs
in
jo
in
movsb
lock
lock
jnp
sbbl
or
movsl
xchg
dec
xchg
out
or
loopne
cmp
mov
icebp
dec
inc
cmp
aas
aas
aam
fucomip
push
bnd
xor
lcall
test
push
jb
sbbl
repz
mov
mov
dec
mov
ds
xchg
jecxz
xor
in
in
mov
stc
mov
rolb
pop
bound
cmp
push
mov
jae
dec
leave
cmc
repz
in
psubusb
loop
pop
xchg
inc
adc
cmp
jl
pop
fcomps
mov
sub
imul
cwtl
cmp
mov
loope
dec
pushf
pop
sbb
clc
or
mov
cmc
adc
cwtl
mov
push
stc
push
jg
adc
add
and
cwtl
js
lret
push
cmp
in
je
pop
mov
sub
adc
pop
and
xor
sub
adc
icebp
insb
mov
daa
mov
lcall
in
aam
nop
fsub
ret
ss
ss
jo
popf
fdivl
xor
sti
lods
sbb
orl
pushf
addl
stos
and
mov
cmpsl
adc
mov
fwait
dec
cli
out
mov
imul
cmp
jecxz
dec
add
int
jno
mov
mov
hlt
or
rclb
xchg
mov
ljmp
insl
sbb
and
pop
push
lock
rcrb
adc
int3
cli
and
test
call
push
xchg
pusha
lock
pop
iret
int3
push
mov
js
mov
mov
push
jno
imul
push
pop
popa
les
andl
int3
insl
in
xchg
xchg
lret
pop
popf
mov
stos
fmull
popf
mov
jne
jb
pop
inc
out
pop
or
icebp
mov
jo
repz
inc
xor
inc
or
push
lock
fildll
pop
pop
mov
cli
aam
mov
mov
repnz
icebp
std
jl
add
lock
inc
inc
dec
inc
sti
insl
sbb
mov
mov
outsb
push
inc
jecxz,pn
outsl
mov
or
jnp
int
shrb
stos
and
sub
lods
push
and
mov
rcrb
xlat
aad
jp
out
mov
cmp
jp
mov
addr16
sarb
mov
cmp
adc
jge
les
and
popf
add
std
dec
push
shlb
and
sub
imul
and
repz
cltd
aaa
inc
push
lahf
out
or
and
insb
xchg
pop
push
xor
rcll
add
cli
push
ds
imul
jo
jge
mov
out
cmp
movl
mov
ds
ljmp
xchg
sbb
jg
or
shrl
out
xor
imul
ret
bound
sub
repnz
or
icebp
and
pop
push
les
insb
cwtl
test
insl
or
stos
out
clc
nop
jge
push
sbbl
imul
in
push
ret
movb
cmp
or
and
out
mov
inc
stos
movsb
cmp
cltd
mov
mov
jne
ljmp
cmpsb
xchg
in
dec
loopne
jne
in
add
sub
das
int3
dec
inc
in
mov
pop
fidivrl
adc
cmp
ljmp
push
xchg
push
jne
std
pop
and
pushf
mov
xor
xchg
stos
lea
scas
out
sub
mov
xchg
test
aas
mov
sbb
push
rorb
push
pop
mov
outsb
inc
xchg
out
icebp
repz
ds
dec
out
push
hlt
leave
push
scas
shll
adc
leave
movsb
loope
inc
cli
pop
mov
cmpl
and
or
divps
imul
cwtl
sub
js
add
dec
add
call
mov
cmp
cwtl
js
push
xor
gs
repnz
dec
jge
mov
push
pop
sub
pop
xor
inc
ds
sub
dec
movsl
pop
frstor
add
inc
xchg
ljmp
insb
imul
adc
pop
dec
dec
mov
out
stos
outsb
or
xor
mov
insb
xor
dec
fdivrs
icebp
mov
ds
fnstsw
xchg
cmp
aam
mov
pop
jne
fsubs
ds
or
jl
mov
inc
jnp
cld
or
filds
orl
shl
out
into
in
mov
imull
aas
clc
mov
pop
mov
cs
int
popa
rclb
je
arpl
pop
scas
jmp
es
add
loopne
repnz
jl
pop
stos
mov
sub
cmp
mov
imul
xchg
mov
out
sbb
rorb
mov
push
in
mov
fisubrl
xchg
push
or
push
scas
jns
push
out
decb
inc
xchg
dec
sub
outsb
lret
test
sbb
mov
mov
push
ret
mov
mov
adc
lods
call
xchg
push
xchg
das
shlb
loopne
test
dec
inc
in
ja
addl
movsl
xor
pop
mov
jg
enter
push
ret
xor
das
fldl
lods
imul
out
leave
xchg
jp
xor
int
scas
shl
mov
mov
in
ret
fldt
lret
sub
fdivrl
frstor
xor
push
das
loope
std
int3
xchg
stos
xor
add
or
js
cmp
loope
rcr
mov
scas
xor
or
sbb
xor
shrl
adc
mov
and
js
or
dec
sti
imul
inc
sti
aam
adc
adc
out
dec
iret
ss
dec
popf
add
lods
add
xchg
adc
and
loop
sbb
jge
xchg
mov
scas
pop
sbb
ljmp
adc
sub
and
push
addr16
lods
mov
dec
inc
pushf
hlt
jmp
gs
push
jno
cld
faddl
notl
adcl
lcall
ljmp
fsubl
fsubl
inc
vpor
sub
movsb
push
pop
mov
cmp
jb
je
mov
pop
cmpsl
int3
clc
cli
push
pop
push
inc
popf
jmp
cmp
ret
jno
subl
cmp
push
mov
push
outsl
into
push
or
pushf
pop
mov
imul
icebp
push
jg
mov
cmp
xor
sbb
sub
xchg
repnz
in
xchg
jecxz
mov
xchg
cmpsb
mov
in
ds
mov
scas
push
nop
jo
jge
popa
jmp
xchg
in
sub
push
cmp
ljmp
mov
mov
repz
cltd
aam
and
mov
xchg
mov
es
bound
mov
rcll
imul
sbb
ss
testl
scas
adc
inc
pop
imul
fwait
cmpl
cmp
inc
shlb
add
cltd
mov
xlat
stc
adcl
outsl
push
jp
inc
cmp
or
pmulhw
cld
int3
ss
mov
or
pushf
scas
test
iret
xchg
cmp
orl
inc
std
xchg
pusha
icebp
lods
pop
test
mov
cld
testb
mov
popa
shlb
xchg
in
or
add
mov
push
ret
cmp
enter
lods
enter
cmc
es
notl
push
xor
push
mov
test
lds
mov
decb
jge
scas
adc
popa
sbb
push
aad
in
mov
inc
clc
movsl
push
cmp
jbe
cmp
dec
push
popf
add
pop
mov
sub
mov
adc
pop
xchg
adc
mov
mov
nop
mov
aam
cmc
xorb
jns
add
adc
ljmp
lret
push
in
ds
test
mov
or
sbb
mov
or
jl
mov
jno
mov
test
movsl
push
aaa
xor
je
mov
iret
data16
addl
adc
add
or
mov
xor
loopne
sub
push
jle
cli
mov
inc
dec
jbe
arpl
mov
ja
inc
mov
or
ret
repz
imul
xlat
pop
sub
xchg
aad
mov
dec
push
mov
fidivs
cmp
into
dec
pop
inc
ss
mov
cmpsb
xor
mov
inc
scas
outsb
mov
adc
dec
or
or
cmp
lret
cmp
fiadds
push
push
mov
pusha
xor
xor
jns
or
test
std
repnz
cwtl
inc
lret
ret
sarl
repnz
adc
sbb
push
inc
sub
jle
dec
div
loop
dec
lods
aad
cli
inc
test
add
adc
stos
sub
xchg
xchg
int3
mov
xchg
mov
leave
cmp
and
add
mov
sbb
outsb
popa
loop
lret
test
inc
or
xor
mov
test
daa
inc
popa
lret
lret
adc
mov
ret
lods
in
inc
cmpsl
out
imul
pop
fmul
jo
mov
xor
or
ds
dec
ja
or
cmp
ret
jb
out
fcomi
xchg
xchg
add
cld
jb
mov
lods
pop
xchg
jecxz
mov
incl
in
adc
jns
clc
sub
subl
jo
dec
sub
mov
add
jae
lgs
jno
mov
test
pop
cli
sub
imul
call
xchg
inc
sbb
shrb
mov
mov
mov
xlat
mov
and
cltd
out
adc
cmp
sub
push
rorb
ret
imul
mov
xchg
cmpsl
jp
aas
adc
mov
out
fs
stos
je
pop
pcmpgtd
mov
pop
enter
fimuls
cli
mov
scas
jle
dec
dec
call
das
invd
sbb
inc
mov
jp
push
dec
mov
fstpl
pop
xor
mov
adcb
mov
mov
sti
cmp
sbb
mov
pop
fldt
pop
dec
jo
or
and
mov
jne
cltd
mov
inc
jecxz
mov
cmpsl
mov
push
cmp
daa
sub
mov
lds
cmp
test
outsb
fsubs
dec
fistps
in
lods
mov
xor
mov
sbb
data16
popa
push
inc
fstps
jg
cld
movsl
cmpsb
lret
fisubrs
and
stos
adc
iret
inc
jecxz
sbbl
bound
push
in
dec
jo
mov
rcrl
sub
pusha
popa
imul
pop
stos
in
and
sub
es
jno
push
ss
cmp
mov
movsl
push
ja
xlat
addb
jne
sahf
pop
stos
pushf
jnp
subb
mov
mov
ret
or
sub
jne
jb
test
ss
inc
je
mov
popf
xchg
into
push
ret
loope
aaa
push
and
test
mov
ljmp
jge
xlat
jo
test
popf
push
pop
mov
loop
scas
lods
adc
push
shll
pop
out
dec
fstps
pop
cltd
loop
xor
sub
test
rol
bound
push
ficoml
stc
in
xchg
aas
std
int
sbb
xlat
pop
rclb
mov
sbb
mov
insb
and
jo
inc
test
test
mov
jecxz
push
dec
mov
sbb
sub
out
sbb
sbb
iret
test
test
mov
mov
mov
mov
mov
test
rorl
dec
mov
mov
cli
mov
xchg
lcall
sub
dec
rcrl
lret
mov
daa
jge
ljmp
imul
test
mov
mov
loopne
gs
adc
sbb
in
bound
test
int
aas
cld
aaa
in
rcrb
mov
cltd
push
loope
push
xor
inc
loop
cmp
xor
dec
je
mov
mov
stos
loop
mov
push
adc
sub
int3
jbe
lret
mov
pop
movsb
negb
mov
iret
pop
shrb
gs
mov
jmp
insl
sub
cmp
dec
sub
iret
pop
mov
cmp
stos
mov
popf
imul
mov
inc
lahf
cmp
cmp
or
jp
adcl
mov
ret
cmpsl
pop
fucom
aam
push
pop
sub
adc
fs
cwtl
out
mov
push
mov
stos
jnp
jp
jmp
lods
push
sub
or
add
push
ret
add
push
xorb
je
pushf
loop
aas
adc
mov
jbe
cwtl
mov
push
sbb
loope
push
xor
shll
fs
mov
das
cmp
out
loope
sub
js
add
shlb
syscall
aam
aas
sub
xor
add
mov
push
ss
inc
sub
cli
jno
mov
fldl2t
mov
mov
sub
or
jno
dec
adc
ret
cmpsb
dec
ja
pop
iret
push
stc
ficoms
sub
and
data16
push
popa
jo
sub
adc
and
sub
jecxz
xchg
inc
movl
sbb
mov
aad
in
inc
xchg
rcrl
outsl
cmp
ret
mov
fbstp
addr16
pop
call
xchg
ds
mov
jle
push
push
sbb
jp
sahf
mov
mov
pusha
testl
dec
fisubs
jecxz
push
lret
add
xchg
lret
mov
int3
cmp
pop
mov
test
cmp
negl
xor
mov
mov
mov
sub
ljmp
daa
jae
jns
pushf
xchg
imul
cld
jb
out
push
ljmp
fldenv
rcrl
sti
scas
jbe
push
cli
adc
cmp
jno
test
xchg
mov
lret
sbb
les
or
ficompl
mov
aas
xchg
inc
adc
call
mov
rcrl
fs
fbstp
inc
mov
push
mov
std
add
xchg
stos
mov
subb
pop
sub
adc
mov
int
outsb
outsl
push
push
fistl
enter
add
fiaddl
addr16
push
jecxz
mov
lcall
fbstp
call
sbb
xchg
std
and
cwtl
scas
shrb
mov
or
xor
push
pop
popl
lds
mov
mov
leave
jno
or
scas
and
adc
pop
mov
adc
movsb
lods
fmull
jno
jp
jl
mov
and
out
xchg
pop
and
jae
mov
sub
sub
mov
mov
lret
adc
push
adc
insb
cld
push
addl
and
orb
mov
xor
add
sub
sub
jle
cli
cmp
shlb
movsl
out
jns
push
std
scas
mov
dec
fdivrl
inc
or
pop
mov
mov
adc
stos
dec
aas
push
sub
push
mov
in
pop
mov
lret
stc
aad
xchg
int
xchg
dec
or
int
pusha
add
arpl
pop
mov
jne
mov
add
mov
hlt
dec
insl
pop
xchg
xchg
bound
lock
ja
and
roll
push
push
outsl
mov
into
arpl
inc
lds
pop
ret
mov
out
mov
mov
insb
sbb
dec
loopne
xor
adc
xor
shrl
popa
fwait
xchg
mov
ja
mov
call
leave
test
cmpsb
in
fs
jp
mov
lret
cmp
pop
fs
xor
insl
dec
in
sub
popa
into
mulb
insl
xchg
sbbb
cmp
nop
mov
mov
dec
mov
pop
mov
or
or
lret
or
sbb
cmp
fidivrl
mov
xor
xor
insb
das
push
mov
stc
jbe
xor
loop
mov
xchg
push
jmp
pop
jne
es
popf
insb
and
hlt
repnz
inc
jg
aad
or
fists
lods
in
in
cmp
les
push
push
outsl
push
daa
adc
arpl
adcl
xor
push
jns
xchg
xor
stos
icebp
out
xchg
in
jbe
imul
sub
fisubrs
jns
arpl
mov
dec
adc
xor
xchg
mov
xchg
jg
in
shll
fdivs
popf
out
adc
push
cmp
adc
pop
cld
cltd
scas
sti
arpl
mull
frstpm(287
outsl
out
sbb
stc
sbb
test
add
push
inc
mov
sub
cmp
xchg
adcl
push
leave
sbb
sahf
mov
inc
jns
arpl
daa
jg
inc
aad
stc
dec
mov
sub
in
mov
fldt
pop
dec
inc
lret
mov
xor
cmc
and
inc
movsb
add
push
pop
leave
lahf
push
add
or
inc
xchg
dec
dec
enter
jnp
test
ss
leave
jno
int
fildll
sub
inc
push
repz
dec
in
gs
push
mov
sub
or
push
icebp
loopne
stos
xor
mov
or
cld
mov
mov
test
push
repnz
push
imul
movsb
ljmp
pushf
xlat
mov
pop
rep
cld
mov
add
and
nop
sub
pop
pusha
mov
stos
pusha
scas
jns
push
push
or
mov
or
incl
popf
in
mov
jl
popa
dec
int3
movsb
hlt
mov
in
mov
and
pop
jg
outsb
lret
std
xlat
cmc
dec
adc
mov
or
ljmp
pop
push
out
gs
push
movsl
inc
pushf
inc
push
add
mov
sub
gs
test
repz
sub
iret
cwtl
dec
pop
repnz
loopne
fildl
mov
arpl
insl
lret
shl
ja
push
in
int3
nop
cmp
push
adc
leave
icebp
push
jbe
cmp
data16
ret
in
jecxz
xchg
in
cmc
jge
sub
add
lock
rcrb
inc
sbb
insl
add
pop
flds
icebp
test
push
xlat
lcall
cmp
inc
in
dec
es
jg
insl
mov
xchg
sbb
inc
add
fnstsw
loop
mov
mov
xchg
dec
frstor
je
fisttps
jb
sbb
mov
adc
pop
push
cmc
xchg
pop
and
cmp
add
inc
pop
inc
dec
mov
dec
insl
ja
and
out
inc
dec
mov
repz
jne
fwait
sbb
pop
in
shrl
xor
pushf
iret
mov
and
insb
mov
pop
sbb
popl
bound
je
or
jmp
fcmovnu
daa
jnp
dec
cmp
pushf
add
add
inc
adc
les
jp
ljmp
xlat
lds
jecxz
cmp
or
or
or
cmpsl
jle
mov
push
into
imul
pop
lds
push
mov
imul
sub
pushf
movsb
dec
rcrb
add
dec
mov
adc
outsb
ja
aas
rcrl
call
jle
punpcklwd
out
cmp
add
in
into
int
inc
mov
pop
or
scas
mov
gs
fcoms
dec
mov
out
inc
mov
aad
and
cmpsb
sbb
std
sbb
addr16
mov
jle
pusha
int3
mov
and
sti
dec
push
test
jmp
popf
mov
imul
test
sbb
lock
push
repz
and
cmp
pop
fdivs
out
ljmp
jmp
and
ret
mov
xor
fdivl
outsb
sahf
insl
mov
hlt
jbe
ljmp
mov
or
add
fs
push
push
sub
clc
mov
mov
aas
dec
mov
ret
nop
push
cmc
nop
imul
lods
clc
aaa
ljmp
xor
or
pop
push
add
or
or
pushf
ror
ret
mov
xchg
mov
mov
jbe
xchg
idivb
dec
push
loopne
and
out
fstpt
adc
adc
dec
mov
cmp
incl
sub
mov
or
push
cmp
ficoms
xchg
mov
int3
out
or
mov
scas
out
lds
mov
dec
jp
adc
xchg
pop
lods
and
dec
jmp
div
fstpl
lret
in
lods
and
sbb
lcall
int3
ret
jne
or
aam
jne
cmp
clc
push
sub
out
shll
dec
test
inc
jo
pop
stc
adc
cwtl
sti
xor
pop
ret
lahf
pop
xchg
xlat
shll
repnz
xchg
and
ljmp
mov
imul
es
jecxz
push
aad
sahf
out
pushf
adc
and
mov
mov
jl
sbb
and
gs
dec
dec
jle
call
in
fsubl
leave
xlat
adc
pop
cmpsl
outsb
sbb
cmp
mov
or
fwait
lea
cmp
push
xchg
idivb
sbb
jmp
into
lcall
insb
out
add
jbe
jmp
mov
jae
ror
inc
cmp
inc
scas
jmp
insb
popa
mov
inc
pusha
nop
mov
aas
and
shrl
mov
lea
sahf
sub
inc
into
dec
ja
mov
outsb
lock
aad
lea
or
dec
or
push
lret
or
fs
push
or
fcom
lock
pop
das
sbb
icebp
adc
xchg
lahf
fxch
adc
pop
dec
je
add
xchg
dec
or
xchg
orl
xchg
cmc
in
push
daa
mov
mov
fmull
leave
mov
sub
loope
loope
push
push
dec
nop
jle
pusha
in
cwtl
movsb
loope
or
mov
pop
add
sti
mov
movsl
scas
lfs
sub
xor
popf
ds
stos
out
inc
cmc
jbe
xor
lret
fwait
into
js
inc
mov
insl
pop
xorb
inc
sbb
mov
outsb
xchg
fisttpll
or
loop
inc
pop
es
jl
jg
mov
pop
leave
inc
icebp
cld
pop
cmp
sub
push
xchg
mov
mov
nop
jle
push
xorb
mov
cld
or
cmpsb
scas
xor
jnp
mov
jnp
and
pop
sbb
jnp
inc
dec
or
iret
pusha
mov
cwtl
jns
scas
daa
xchg
popa
in
jl
and
inc
dec
jb
in
movsb
or
movl
lret
pop
mov
cmp
jecxz
ret
cwtl
outsb
nop
add
jle
xlat
lods
add
cltd
lods
lea
pushf
shlb
lds
cld
cmp
in
jmp
jnp
outsb
mov
or
shlb
xor
jns
les
dec
jno
shll
mov
arpl
aad
in
fdivrs
dec
mov
add
pop
or
ss
xchg
cli
pop
and
sbb
movzwl
mov
int
or
clc
bound
fcmovnb
xchg
or
in
xchg
or
push
sbb
std
fdivs
scas
cmc
add
shll
test
mov
lret
idivb
ss
cmp
xor
and
or
push
js
pop
mov
inc
js
or
add
mov
dec
inc
mov
cmp
mov
inc
inc
adc
pop
jne
data16
adc
xchg
je
xor
pop
cmp
fcomps
mov
std
or
inc
sub
inc
in
dec
mov
or
inc
fcoml
ret
lods
pop
mov
negb
sub
cli
xchg
mov
adc
data16
test
movsb
lock
adc
pop
aam
add
lahf
jo
push
mov
sbb
sbb
int3
mov
movsl
adc
test
mov
popf
das
push
fldcw
jo
inc
xchg
js
cmp
jmp
movsl
push
iret
int
xor
sahf
sub
adc
jbe
ret
cli
dec
outsl
xor
push
jp
xchg
sub
xchg
imull
negb
sub
mov
ret
xlat
mov
cmpl
neg
sub
cs
aaa
fidivl
adc
loop
inc
stos
stos
sarl
cltd
or
les
jmp
ds
mov
sub
xor
or
bound
test
icebp
hlt
test
mov
adc
repnz
data16
push
push
pop
mov
stos
xchg
adc
rcll
xchg
cmc
mov
sahf
jp
hlt
test
sahf
sbb
mov
cli
test
or
pop
push
xor
jno
mov
mov
add
pop
dec
dec
xor
je
mov
sti
addr16
sub
movsl
dec
add
test
sti
in
leave
test
adc
adc
dec
scas
imull
mov
shl
mov
sarl
lcall
les
mov
xor
mov
add
test
and
lret
sbb
and
jg
push
sub
dec
adc
add
and
leave
aas
add
lret
fdivrl
popf
daa
mov
out
adc
arpl
in
nop
rcl
movsb
inc
test
ja
jne
and
sub
lret
jecxz
fsubr
pop
pusha
or
xchg
das
jmp
adc
jle
leave
arpl
addr16
out
xor
cmp
xchg
shlb
cwtl
inc
sbb
js
addr16
push
mov
aam
inc
xchg
xchg
outsl
or
scas
mov
mov
ret
xor
mov
xor
pop
aad
dec
sbb
xchg
dec
push
xor
adc
push
jl
mov
cld
mov
lods
pop
inc
jns
push
mov
or
andb
sub
jge
enter
test
mov
insl
xchg
mov
xorl
andl
popf
xchg
or
cmp
adc
mov
inc
inc
pop
mov
les
dec
in
mov
dec
mov
rorl
push
sbb
cmpsb
jns
fidivrs
sbb
sbb
add
push
pop
cld
jae
cmpsb
inc
fildll
or
fxch
push
ds
mov
scas
popl
hlt
mov
and
out
aas
mov
pop
int3
inc
add
outsb
mov
pop
dec
push
or
mov
jecxz
popf
jae
nop
mov
out
rcrb
dec
and
in
adc
jb
mov
dec
adc
fmull
xchg
imul
jp
inc
aas
and
int3
sub
xlat
nopl
or
lock
ss
nop
aad
stos
mov
ja
mov
int3
mov
ss
xchg
push
xor
lret
out
push
hlt
cmp
jecxz
push
lcall
cmpsl
rclb
in
sbb
movb
or
sub
inc
sub
inc
jb
out
mov
mov
add
adc
ss
xor
pushf
into
fildll
arpl
adc
dec
cmpsl
xchg
jb
jmp
cs
add
lds
mov
inc
fs
dec
pop
pop
jb
cmp
pop
sbb
jb
ss
mov
adc
xor
in
mov
outsb
and
adc
aad
movsb
cwtl
mov
lods
fstpl
pop
ljmp
xchg
jmp
ss
inc
ljmp
nop
rcrl
shl
pop
adc
mov
adc
adc
cmpsl
pusha
mov
xchg
inc
sbb
xchg
cs
aad
test
dec
icebp
clc
jge
in
arpl
psubq
cmc
xchg
jns
aam
repnz
add
popa
push
mov
sub
fsts
push
add
dec
popf
sub
lods
idivb
or
xchg
xchg
pop
test
nop
into
loope
add
mov
push
inc
popa
adc
mov
divb
xor
rcr
stc
scas
sub
cmpsb
push
mov
xchg
or
inc
test
pop
fsub
call
adc
push
push
int
cmp
shlb
push
inc
inc
pop
sti
cmp
dec
inc
dec
inc
push
dec
dec
fdivr
pop
mov
cmpsl
out
iret
fadd
sub
xor
test
mov
test
jbe
lea
or
lods
outsb
cli
je
enter
subb
xchg
shll
pop
jg
sub
inc
nop
rcrl
or
incb
push
int3
in
ret
sub
push
daa
add
cltd
out
mov
xor
sbbl
add
in
adc
xlat
mov
push
dec
sahf
scas
inc
mov
aas
inc
movsb
add
jne,pt
push
pop
mov
sbb
mov
jo
xlat
pop
lret
jp
lret
inc
lahf
cmc
mov
lods
fldt
mov
push
inc
aas
dec
jp
cmp
punpckhdq
sub
jae
xor
mov
sub
sub
repz
ljmp
xorb
sub
mov
icebp
push
mov
mov
das
loope
out
outsb
jge
xchg
fsubrl
clc
popa
outsl
outsl
in
pop
loope
int
es
cmp
add
jl
push
loop
sti
aaa
pop
scas
xchg
xchg
mov
mov
pop
pop
mov
mov
mov
jnp
dec
push
clc
leave
dec
or
lea
mov
xchg
add
inc
rcrb
add
sbb
sti
scas
adc
sti
aam
pop
cs
xor
enter
fnsave
cmpsl
sbb
fisubs
inc
inc
dec
dec
or
test
pop
lcall
cmp
shrl
in
sub
push
sbb
inc
add
cli
in
sub
nop
jge
and
stos
cmp
lret
outsb
in
and
js
xor
in
mov
fistps
addr16
mov
out
push
push
ret
mov
lea
pop
push
or
lea
mov
out
adc
cmpsb
dec
or
mov
into
mov
and
mov
or
les
push
cmp
test
xor
lret
sti
xchg
push
push
popa
add
decb
cmp
jae
into
in
orl
mov
push
pop
and
je
mov
rclb
lret
loope
pop
mov
arpl
inc
xlat
loope
cltd
cwtl
and
jmp
and
or
in
mov
adc
movsl
lds
dec
sub
cmp
pusha
and
iret
ja
xchg
subl
mov
sub
mov
ds
fs
imul
add
pop
jg
loopne
sub
sbb
or
xor
daa
icebp
cmp
xor
and
data16
cli
into
in
or
and
into
xchg
mov
jo
mov
fnsave
lock
mov
pop
xchg
int3
inc
fsubl
je
std
xor
iret
filds
inc
adc
stc
jb
mov
and
cli
jge
sahf
add
inc
cli
int
mov
adc
mov
enter
sti
add
or
sahf
ljmp
int3
outsl
int3
and
xor
mov
xor
sub
rorl
mov
cwtl
mov
aaa
sahf
mov
jge
jge
mov
inc
jmp
jnp
cltd
ret
or
ja
subb
int
xchg
roll
xor
inc
cmpsb
int
mov
cmp
fmul
and
leave
imul
loop
sbb
pushf
outsl
add
movl
leave
pop
imulb
ficomps
loopne
loope
shll
or
mov
sbb
inc
fildl
ljmp
xchg
adcl
shll
jns
in
lods
adc
or
jb
jne
push
popa
scas
fwait
xchg
roll
scas
je
pop
pusha
dec
mov
jge
push
jno
xchg
xor
cmp
xor
lds
sub
loopne
xchg
jmp
sub
mov
jmp
addb
pop
xor
xor
cld
inc
jne
sbb
sbb
js
stc
push
lret
push
sbb
and
mov
pop
rcl
push
les
mov
rolb
lods
popa
inc
int3
mov
lret
cmp
inc
push
lret
dec
popf
lds
push
mov
adc
rcr
mov
add
stos
lcall
test
icebp
ficompl
inc
dec
inc
test
jno
scas
cmp
and
dec
pop
ret
cmp
out
sub
dec
mull
mov
fmull
fldcw
scas
or
jle
hlt
add
into
mov
mov
mov
jl
pushf
jnp
push
mov
lods
fsubrl
sub
ds
xchg
xchg
stc
mov
inc
cmp
loop
mov
mov
std
mov
rcr
icebp
adc
mov
pushf
cmp
int
cmp
push
dec
add
call
push
push
lcall
pop
add
jnp
cmpsl
adc
inc
out
loopne
ss
lock
push
mov
fistl
shll
and
nop
addr16
or
popf
push
mov
out
and
and
or
add
cmp
scas
lea
gs
add
or
les
mov
rcl
in
cmp
push
les
ret
ljmp
loop
xchg
rolb
inc
cli
aas
hlt
repz
cs
dec
xchg
adc
and
adc
push
jbe
outsl
enter
pop
dec
mov
fisttps
stos
gs
cmc
sbb
jbe
jl
int3
aaa
and
pop
mov
pusha
jle
jle
inc
test
movl
scas
js
sub
and
ret
mov
or
inc
out
mov
hlt
fdivrl
enter
icebp
xchg
cli
and
adc
lret
push
icebp
mov
enter
adc
dec
or
imul
lcall
inc
xor
in
ss
mov
xchg
fbld
push
push
pop
dec
inc
paddw
ljmp
movsb
mov
push
add
ja
xchg
call
ret
scas
ret
and
xchg
jno
or
pop
shlb
dec
xchg
aam
popf
out
mov
add
shll
push
outsb
jbe
test
push
fstpl
or
aad
xchg
loop
mov
xlat
jo
imul
push
push
and
mov
sbb
test
mov
jbe
out
and
jne
pop
in
fisubrl
cltd
mov
jne
add
jb
cmpsb
adc
out
sbb
fidivs
adc
adc
sub
iret
fdivs
loop
jl
sbb
adc
sub
aam
popa
and
ds
dec
inc
xchg
aad
stc
sub
xchg
sbb
xor
lahf
aas
not
in
js
or
shll
pushf
cmp
popf
cmp
add
call
es
scas
adc
cmp
hlt
xchg
ljmp
push
cli
pusha
mov
add
loope
loope
dec
xchg
mov
mov
std
add
sbbb
mov
mov
cwtl
lods
int3
push
scas
or
pop
rorl
pop
imul
imul
xlat
inc
daa
inc
je
xchg
or
xorl
push
lock
mov
xchg
pop
pop
shrl
ja
mov
sbb
mov
in
mov
cmp
pop
insb
pop
mov
mov
sti
lock
mov
sbb
push
pop
mov
mov
xchg
inc
fcoml
mov
sbb
and
std
out
in
fucom
push
movsb
or
inc
and
xlat
subl
cmpsl
out
or
xchg
insb
in
lods
pop
add
mov
mov
sbb
dec
daa
xchg
leave
das
pop
jo
imul
and
pop
test
nop
pop
cmp
mov
mov
pop
dec
push
dec
cs
aas
push
inc
repz
add
cld
je
jno
mov
std
mov
or
cltd
mov
cmc
imul
add
cmp
stos
mov
jp
push
mov
fldl
scas
sbb
popf
sub
mov
jno
sub
push
pushf
repnz
ficompl
out
add
ljmp
xchg
inc
fs
divb
sbb
push
fisubrs
adc
inc
and
popa
icebp
mov
adc
jge
nop
aas
pushf
jmp
scas
push
dec
fucomi
in
pop
sub
mov
pop
test
mov
push
push
mov
push
push
sbbl
mov
push
jbe
mov
mov
push
or
fldenv
push
jp
mov
mov
lea
xor
ret
lcall
xor
push
jg
out
add
jae
dec
cltd
dec
jae
fwait
jmp
lods
call
test
xor
xchg
pop
sub
test
iret
mov
sbb
inc
adc
cmp
sub
push
mov
scas
add
sub
jnp
cwtl
dec
xor
lods
loop
divb
add
push
xor
cmp
mov
popf
lret
mov
mov
xchg
stos
fistps
bound
cmp
push
jae
push
cli
push
hlt
cmp
jnp
arpl
fmul
sub
std
pop
out
imul
push
fcmovnu
or
jbe
imull
int3
pop
sbb
xchg
les
faddp
fwait
push
scas
insl
xlat
jb
push
or
adc
ret
aad
push
push
add
push
arpl
arpl
jae
push
sub
adc
adcl
lods
push
jb
mov
fiadds
and
scas
sbb
loopne
frstor
cmc
push
inc
hlt
or
rolb
jno
pcmpgtw
pop
sub
fiaddl
or
mov
popf
movsb
and
push
lock
call
pop
xchg
in
outsb
dec
loope
lahf
jae
mov
or
mov
dec
push
adc
pop
and
dec
js
sbb
cmp
xlat
sub
inc
popa
push
push
insl
movsb
jnp
loope
aas
xchg
push
out
push
dec
adc
gs
cwtl
lret
sbb
mov
mov
mov
lods
les
pop
rcl
sarb
pop
mov
sub
adc
jecxz
xchg
jle
jmp
data16
outsl
push
aaa
subl
xchg
fstl
in
mov
push
mov
add
adc
jle
and
push
lahf
pusha
xchg
jge
pop
pextrw
adc
or
cmpsl
mov
daa
mov
jp
jns
add
or
fwait
xchg
push
outsb
test
cmp
xor
cmp
std
cs
pop
inc
shr
shrb
outsl
enter
pop
je
insl
stc
fiaddl
in
lds
jmp
mov
push
pop
sub
int3
dec
mov
je
movsl
push
dec
adc
stc
jns
xchg
out
lret
pop
adc
pop
sets
cmp
push
fcmovnu
push
or
lods
mov
adc
lret
pop
adc
ljmp
les
frstor
push
setp
xchg
mov
cmp
add
push
and
arpl
shlb
dec
sub
mov
shr
dec
not
and
jmp
and
jp
lret
in
adc
mov
push
or
shr
cld
sub
inc
mov
nop
push
mov
popaw
incl
ljmp
out
je
add
nop
mov
adcl
push
jbe
xchg
sbb
cmpsb
cmpsb
int
cs
jecxz
in
sbbl
pop
jo
out
inc
jnp
xchg
in
icebp
mov
add
insb
loopne
outsl
mov
xor
je
push
shl
dec
push
jle
or
xchg
mov
arpl
hlt
insb
nop
fucomp
scas
sbb
jo
add
fwait
sub
jmp
adc
push
sbb
test
stos
push
in
hlt
ds
enter
out
mov
aad
mov
lret
aam
xor
pop
bound
sarb
int3
ret
push
xor
in
scas
push
mov
aas
add
imul
imul
jnp
sbb
lods
movsb
aaa
mov
cmpsb
jb
jbe
lds
inc
or
and
lcall
mov
enter
aaa
mov
divl
push
dec
call
movsl
les
mov
popf
xchg
int3
xchg
aam
movsb
dec
sarb
push
pop
popf
ljmp
xchg
cmp
shll
cli
push
call
orb
jge
pop
lea
jae
or
jmp
dec
js
mov
lret
and
mov
lods
mov
pop
dec
out
dec
sti
cmp
sbb
in
cmp
imul
sarl
ret
xchg
xchg
shll
fistpl
aaa
je
inc
test
cmpl
loope
xchg
sbb
subb
mov
imul
mov
and
frstor
pusha
insl
adc
lds
xchg
test
imulb
sub
rorb
push
cmp
ds
fiaddl
mov
stos
mov
cmpsl
lret
xchg
adc
or
jns
mov
adc
test
lock
sub
getsec
sbb
int
pop
fwait
xchg
mov
or
jnp
cmp
xchg
push
shlb
test
push
aaa
insl
xor
out
push
jmp
mov
or
sub
mov
popf
dec
fnstcw
pusha
call
das
dec
sbb
jne
jle
push
cmp
inc
xchg
pop
stc
mov
add
add
cmp
mov
neg
fwait
cmp
sbb
lcall
mov
pop
lods
adcb
lea
mov
push
sub
ret
fdivl
test
add
jae
insb
lea
mov
pop
pop
shr
inc
jge
fadds
sarb
daa
lcall
dec
xchg
mov
je
insb
pop
push
push
sbb
mov
loop
mov
jg
mov
je
fucomip
das
ljmp
inc
mov
fnstenv
xchg
fs
lods
hlt
mov
pop
mov
cmp
push
sub
test
fists
adc
push
sbb
xchg
mov
mov
jno
pop
fwait
ret
push
lret
dec
pusha
out
jle
icebp
jns
les
jle
add
pop
sub
xor
or
into
pop
mov
or
nop
mov
stc
fisubrs
or
pop
and
int3
mov
mov
adc
mov
jmp
jno
gs
add
js
clc
outsb
add
adc
sbb
imul
cmpsb
call
ja
je
sti
shll
ret
out
push
jl
mov
cli
sarl
push
xchg
gs
lock
rorb
sbb
push
cmp
fdivr
ret
add
sub
outsl
add
imul
gs
fwait
jo
dec
insb
xchg
sti
insl
icebp
lock
jne
out
leave
jp
cmp
sbb
popa
mov
or
loop
rol
repnz
mov
xor
mov
cld
pop
aam
adc
mov
mov
sbbl
dec
cmp
xor
repnz
imul
push
mov
jno
push
dec
hlt
es
xchg
jns
jb
repnz
sti
dec
inc
pusha
lret
xchg
inc
lock
je
rcr
pop
iret
in
out
imul
out
shrb
jmp
in
scas
subl
adc
dec
call
movsl
adc
dec
xchg
outsb
sarb
mov
sbb
daa
rol
or
sbb
sbb
and
sub
xorl
mov
mov
cmp
cmp
ja
sub
imul
push
mov
and
test
cld
fistpll
mov
dec
and
mov
pop
int3
push
in
cmc
add
stos
cmpsb
xor
lret
push
pop
dec
jnp
mov
mov
cwtl
xor
and
push
dec
or
push
mov
cltd
pop
loope
inc
jmp
icebp
out
int3
aad
les
mov
fisubrl
and
aaa
mov
test
std
jae
xlat
sbbb
mov
clc
rcrb
jb
mov
mov
mov
adc
fadds
mov
and
scas
dec
jne
inc
stos
push
push
push
fisubs
xchg
dec
cmp
sub
mov
lods
cmp
pop
sub
cmp
and
aaa
jmp
neg
popf
cmpsl
jp
and
push
enter
or
or
xchg
ds
adc
sub
fldenv
rcrl
aad
outsb
les
nop
jl
lahf
mov
and
xlat
mov
pop
xchg
shll
rorb
test
xor
ss
cli
mov
lahf
fmull
add
jns
jl
fiadds
cmp
add
negb
cmp
or
loopne
dec
jb
repnz
ret
xchg
push
hlt
lret
repnz
sahf
outsl
mov
test
in
ffreep
arpl
mov
icebp
xchg
aaa
mov
dec
jl
test
scas
xchg
loopne
inc
sbb
push
je
cmp
mov
cli
clc
test
sub
unpcklps
xchg
in
add
cli
lahf
lret
lea
sub
pop
dec
mov
inc
xor
push
push
leave
mov
push
std
int
movb
mov
stos
xchg
xchg
or
xchg
and
dec
or
mov
out
mov
jne
dec
pop
dec
mov
out
push
fmuls
xchg
stc
cmp
jbe
bound
cmc
cmp
lret
lock
sahf
pop
test
int3
jne
jmp
mov
stc
xchg
xor
xchg
nop
sub
mov
popa
lcallw
imul
mov
sarb
stc
mov
cmp
clc
and
iret
dec
data16
xor
mov
push
inc
inc
mov
pop
lahf
cld
sbb
xor
int
gs
sbb
mov
int
arpl
cltd
and
mov
adc
inc
jne
xlat
sti
stos
lea
rolb
in
xchg
add
lcall
adc
mov
rorl
adc
insl
pusha
imul
mov
cmp
out
mov
repnz
push
xor
sub
je
push
xor
push
add
not
outsl
repz
jns
out
rorb
bound
in
mov
and
push
or
testl
mov
add
pop
and
push
imul
fsubl
mov
shl
out
push
movsb
and
push
sub
ja
sub
pop
inc
or
lret
or
std
mov
fs
cmc
jmp
jp,pt
xchg
lret
mov
lds
in
mov
rcll
inc
fstpt
cmc
mov
push
dec
mov
inc
ja
sarl
push
cmpsl
jne
mov
lret
xchg
fimuls
lahf
mov
dec
cltd
or
iret
jne
adc
out
push
add
dec
add
xchg
popa
xchg
xchg
shrl
fldln2
cmc
jmp
push
rol
sub
aas
xor
mov
sub
stos
sarb
lcall
pop
jmp
mov
cmp
mov
adc
lcall
lock
mov
jbe
insl
lret
stos
cltd
lahf
mov
addl
or
pushf
out
xchg
insl
scas
lcall
push
mov
data16
lods
sub
les
dec
pop
shrl
cmp
mov
lods
and
stos
mov
inc
lods
rclb
pop
mov
popf
sub
xchg
jl
fwait
cmp
push
or
sahf
xchg
lret
mov
xchg
ss
inc
cwtl
aad
sti
lods
sbb
fsts
push
bound
inc
mov
mov
mov
push
stos
int3
movsl
jnp
fstps
sub
pushf
dec
add
push
arpl
cmc
outsb
add
and
les
pop
add
pop
xor
repz
lret
into
adcb
lahf
loope
bound
fmull
jl
mov
sarl
push
lret
push
lea
xor
add
add
out
cmp
jl
adc
in
mov
pushf
in
mov
pop
xor
fsubs
test
inc
pslld
lock
and
adc
sahf
jl
mov
jb
and
mov
xchg
xor
jmp
leave
add
sbb
sbb
cltd
ljmp
fsubs
inc
fs
jl
fistpll
nop
enter
or
cmp
rclb
leave
pop
and
add
or
dec
pop
mov
je
shlb
and
lret
xchg
pop
or
adc
or
xor
mov
int
mov
aad
arpl
dec
lea
cmpsb
inc
push
mov
jg
dec
loop
clc
push
out
das
xchg
or
mov
in
or
adc
loope
xlat
leave
pop
push
icebp
rolb
mov
cmc
mov
mov
dec
out
cmpsl
frstor
inc
stc
dec
lret
pop
data16
nop
iret
je
push
jbe
cmp
push
push
inc
fcoms
adc
push
mov
dec
stos
nop
aaa
mov
cmpsl
mov
sub
jo
test
pop
clc
pop
sub
sub
and
mov
dec
or
imul
sbb
jne
lods
loop
inc
pop
out
call
setp
das
mov
out
inc
mull
mov
mov
jne
jns
ds
pop
inc
mov
pusha
fildll
rcll
rol
ja
nop
test
sub
inc
mov
out
mov
shll
jl
stos
imul
ss
stc
xorb
add
mov
cmp
es
push
xor
insl
cmp
dec
in
sahf
cmp
xor
loopne
jbe
mov
jb
dec
mov
outsl
mov
mov
push
je
ret
shrb
sbb
sbb
mov
movsb
lea
icebp
pop
es
aam
outsl
adc
imul
lds
movsb
rolb
mov
and
mov
mulb
mov
push
jge
sar
mov
clc
pop
inc
gs
mov
gs
cmp
cmp
jmp
pop
popf
xchg
jl
push
scas
xchg
xor
mov
pop
or
mov
cmp
in
aas
push
mov
repz
pop
mov
mov
push
mov
sbb
jp
sbb
mov
outsl
pop
fdiv
loope
push
loopne
jmp
and
dec
adc
add
roll
sub
shl
mov
adc
lret
sub
ret
or
bound
pop
cmp
mov
mov
test
cmp
xor
inc
xchg
jnp
rolb
in
pop
xchg
movsl
notw
into
or
or
sub
pop
cwtl
jp
xchg
into
dec
cmp
pop
dec
fnstcw
out
and
mov
adc
test
cmp
lock
aad
gs
sbb
xor
and
pop
mov
outsl
test
push
push
xchg
divl
js
mov
jns
leave
add
fwait
std
pop
push
push
pop
dec
cs
dec
inc
sar
hlt
cmp
dec
pushl
ss
ret
and
or
or
push
mov
mov
mov
xchg
stos
add
test
in
adc
aas
push
out
fwait
call
add
rcrb
ljmp
adcb
cmpsl
or
mov
dec
ljmp
mov
pop
rclb
xchg
incl
sub
sahf
sub
pop
rolb
lahf
rol
stos
jnp
dec
inc
scas
and
mov
jge
imul
jo
or
lret
lods
fsubs
and
inc
jb
pusha
mov
push
bound
xchg
jmp
clc
add
fsub
jg
and
inc
leave
in
jbe
and
pop
sti
je
mov
jle
clc
mov
das
lret
in
rclb
jnp
xchg
mov
inc
mov
mov
stos
jno
test
add
xchg
mov
test
popa
test
in
inc
es
dec
in
js
scas
gs
fsubs
mov
test
orb
jno
push
cwtl
dec
cmp
divl
jl
sub
dec
xor
lds
int
movb
test
negl
lods
and
push
out
pop
popa
test
mov
mul
pop
loopne
inc
aaa
xlat
lock
push
push
xor
cli
sarb
jmp
xlat
cmp
jmp
out
nop
cmpsb
cld
xchg
mov
fs
add
es
repz
std
scas
inc
mov
sahf
push
cmp
sti
data16
jnp
hlt
or
incl
sub
inc
cmp
je
sahf
iret
lds
daa
lock
sbb
pop
lcall
lret
and
lcall
idivl
aam
jb
xchg
cwtl
test
je
jb
arpl
push
dec
mov
mov
flds
popf
adcb
pop
add
in
add
push
push
lock
scas
cmpsb
imul
outsl
es
jb
xchg
and
inc
inc
lcall
fwait
lret
mov
add
lds
adc
je
jge
xchg
jle
xchg
mov
repnz
js
jecxz
sbb
jmp
das
cli
mov
xchg
insl
repnz
arpl
dec
lods
inc
aam
mov
mov
and
jne
push
rcll
push
xchg
es
scas
sbb
push
pop
cltd
cmp
and
add
pop
xchg
out
mov
inc
push
jno
xchg
xchg
int3
dec
xor
cmpb
sbbb
js
in
addr16
xor
scas
cmp
adc
lret
ds
jecxz
aad
fidivl
sub
or
and
mov
fdivr
sub
mov
mov
xor
js
xor
stos
and
push
mov
push
int3
dec
add
xor
xchg
dec
je
cmpsl
in
cld
outsb
mov
push
jle
push
cmpsb
fisubrs
jp
cmpsl
mov
pop
ja
imul
adc
fldt
subl
xor
mov
out
push
adc
pop
pop
filds
sub
imul
out
sub
mov
lea
rolb
insl
mov
adc
clc
loopne
cwtl
and
scas
jnp
mov
add
gs
mov
pop
mov
loope
sar
xchg
jmp
xchg
xor
push
inc
sbb
dec
and
cwtl
rcrl
add
and
cltd
std
xlat
pop
pushf
mov
aaa
push
push
in
jns
outsb
mov
jo
les
cmovno
jecxz
push
xchg
mov
jmp
cmp
cmp
mov
cmpsl
push
sti
ret
adc
in
imul
cli
mulb
fdivs
shl
cmpsb
aam
pop
pop
push
lods
xor
shll
cmp
insl
scas
outsb
ds
inc
rcrl
cwtl
arpl
addb
bound
scas
push
inc
or
push
and
jne
bound
ret
or
and
bnd
std
xchg
pop
fstl
sbb
inc
jp
inc
imul
mov
cmpsl
in
fwait
push
jbe
popf
adc
mov
push
cmp
out
clc
pop
adc
mov
ret
lods
mov
aad
repnz
inc
rclb
cmp
mov
pushf
sbb
mov
nop
xlat
loopne
les
push
pop
sbb
test
andl
dec
fisubrs
or
push
mov
jmp
mov
cli
xor
nop
inc
shlb
push
push
or
lcall
mov
mov
add
bound
mov
mov
push
sbb
add
and
cmpsb
mov
push
clc
push
inc
lahf
test
rcrl
xchg
push
cmpsb
or
dec
pop
aas
mov
iret
fildll
gs
in
mov
push
push
pop
inc
pop
insb
cwtl
pop
stc
cwtl
dec
out
pop
pop
test
jns
push
insl
jp
xchg
jmp
push
sahf
lahf
mov
pop
loope
aam
jp
cmp
sub
in
mov
enter
addr16
arpl
pushf
ljmp
int
jl
cmpb
mulb
loope
in
sub
imul
mov
movsl
push
dec
fwait
and
unpckhps
adc
int
adc
roll
inc
fbld
lods
inc
daa
push
mov
aam
cmp
dec
stos
int
adcb
shl
pop
pusha
fdivrl
xor
gs
fmull
dec
rorb
or
jo
dec
and
push
push
xor
aad
fsubl
das
inc
or
cltd
fwait
iret
test
nop
rcl
adc
cmpl
std
jne
fwait
mov
sbb
jecxz
mov
mov
sub
xor
mov
addr16
cmc
mov
push
sub
mov
test
sub
idivb
bound
lcall
aaa
and
push
push
push
xchg
movsl
mov
jp
das
sbb
push
aas
mov
sub
inc
xchg
xchg
mov
sbbl
dec
pushf
insb
sub
scas
jge
cmp
xchg
cmc
js
pusha
pop
hlt
sbb
loope
inc
mov
in
sbb
andl
out
pop
mov
cmp
push
sbb
xchg
and
out
add
sbb
push
sub
call
sub
out
cmp
sbb
rcrl
nop
mov
es
mov
ja
mov
ja
inc
inc
mov
xchg
pop
pop
sbbl
pop
add
jge
inc
ljmp
addr16
sub
push
cmp
cmp
into
ret
push
cmc
rcll
popa
mov
dec
leave
sbb
dec
iret
dec
xchg
lahf
int
dec
repz
cmpsb
jmp
or
loopne
mov
inc
outsb
sub
push
jnp
scas
stos
push
hlt
bound
lret
aaa
test
test
shlb
jl
rcrl
iret
mov
into
mov
mov
shlb
rcrb
fmull
pop
cld
dec
and
mov
fdiv
dec
stos
pop
int3
push
aaa
std
dec
cwtl
fcoms
mov
sub
stc
jmp
pusha
push
pop
or
mov
cwtl
adc
fucomip
shrb
sbb
rcrb
std
shlb
fcomps
inc
test
adc
dec
insl
orb
jg
lcall
shl
int
inc
pop
pushf
dec
stos
pop
aas
cltd
dec
pop
pop
mov
aad
and
push
dec
jne
and
lods
aaa
fwait
mov
fildll
inc
sbb
adc
inc
inc
sti
cmp
push
xchg
cmc
dec
pop
outsl
xchg
orb
fmul
jecxz
hlt
jnp
scas
call
movsl
fstps
fwait
arpl
pusha
outsl
in
insb
push
fmuls
jae
bound
shl
xor
adc
pushf
xchg
lret
popf
cmpsb
hlt
xor
xchg
and
test
repnz
cmp
push
adcb
cs
inc
cmp
fbld
mov
mov
test
sarb
ja
idivl
es
xor
movsb
dec
inc
es
xchg
js
mov
das
add
mov
sbb
pop
or
enter
jo
in
in
in
add
mov
sbb
jnp
int3
or
xor
add
xor
into
decb
push
dec
scas
and
pop
xchg
mov
jns
or
int
jne
negl
popa
mov
adc
sbb
pusha
fldl
sbb
jmp
in
loope
adc
push
aam
mov
lds
mov
jl
dec
sarb
into
push
int3
inc
mov
pop
in
in
dec
inc
add
jp
dec
addr16
jmp
jl
inc
pop
negl
rcll
xor
lcall
cwtl
sub
fsubrl
fxch
insb
lods
into
inc
adc
pop
sahf
pop
in
in
imul
psrad
into
mov
mov
adc
or
js
xor
mov
pop
insb
pop
mov
jbe
ret
js
push
testl
sub
inc
addb
call
cmc
aaa
iret
out
add
fs
sbb
daa
add
cmpsb
mov
jbe
es
ljmp
sbb
push
xor
jb
pop
pop
pop
inc
loopne
jmp
xor
jge
repz
arpl
rorl
pop
aam
pop
repz
orb
movsl
ret
xor
scas
add
fldenv
or
and
cs
inc
subb
pop
adc
push
inc
lods
test
or
inc
sar
sahf
and
mov
fstp
aas
mov
or
push
or
xchg
mov
dec
or
pop
icebp
adc
mov
pop
rclb
fimuls
insb
loop
inc
sarb
icebp
cli
idivb
iret
jge
ljmp
mov
fsts
xlat
js
jb
js
pop
sub
mov
inc
cmp
xor
lret
mov
mov
movsb
sbb
xchg
inc
and
out
add
push
xor
sbb
aam
dec
lds
ficoms
movaps
ja
out
int3
xchg
lcall
pop
fsubl
sbb
sbb
mov
mov
pop
push
mov
enter
adc
mov
mov
jne
xchg
popfw
or
sahf
cmpsl
ljmp
add
pop
cmp
pop
insl
test
add
mov
mov
test
stc
or
pop
stos
push
sahf
mov
mov
ljmp
insb
lea
dec
mov
bound
into
jge
cltd
ljmp
int
idiv
fwait
mov
sbb
fnstenv
pop
jnp
aas
fisttpl
fstpt
mov
sub
mov
pop
insb
xchg
sbb
xor
mov
mov
xchg
jmp
test
sbb
jl
dec
cmc
push
mov
and
add
push
push
jae
pop
test
mov
imul
test
or
sub
sbb
xchg
repz
je
adc
xchg
sbb
dec
push
lret
mov
imul
lahf
push
dec
lahf
jmp
inc
jns
aas
inc
xor
fldcw
and
mov
cmpsb
std
push
jle
xor
lahf
repz
sub
ljmp
jno
orb
and
insl
cmp
dec
adc
aam
cmovbe
sti
jae
jb
jmp
cltd
cmpsb
pop
ss
xchg
loop
mov
int
mov
lods
or
aas
xchg
and
divl
add
lea
cmpsl
xor
cmp
sub
mov
pop
test
and
gs
mov
xchg
out
inc
xchg
push
scas
pop
mov
jl
fbstp
jle
sub
iret
dec
mov
lods
sbb
jnp
push
fs
mov
dec
iret
insl
dec
mov
ret
lea
sub
repnz
popa
mov
scas
add
jl
dec
add
add
filds
add
adc
sbb
repz
jp
arpl
jle
xchg
mov
std
int
lahf
jg
xlat
fdivrp
ret
inc
sbb
sahf
lahf
xor
mov
out
ja
iret
fs
mov
inc
adc
and
div
loopne
jnp
imul
mov
dec
iret
inc
cmp
xor
sti
pop
int
pop
cld
out
mov
test
cmp
pop
cmp
fadds
push
movsb
enter
and
popf
mov
mov
push
aad
int
xchg
cmpsb
mov
xor
add
jmp
mov
rcrb
mov
es
negl
imul
dec
mov
jae
lods
sub
mov
ror
bound
sbb
cltd
repz
xchg
jg
flds
test
mov
pop
orb
shlb
mov
dec
shl
mov
jge
push
dec
adc
adc
xor
xchg
adc
ljmp
mov
adc
inc
adc
add
mulb
fisubs
mov
jb
inc
sub
sbb
repz
mov
pop
pop
xor
sti
fsubrs
dec
gs
sub
mov
mov
mov
xorb
jae
repz
jl
call
xor
je
mov
push
push
push
jno
lcall
push
xor
mov
test
popf
fildll
lahf
xor
mov
hlt
aaa
sbb
add
mov
mov
ljmp
xor
xchg
sbb
dec
dec
mov
fldl
lods
xchg
or
adc
enter
outsl
das
mov
dec
push
mov
add
pop
or
test
cwtl
movsb
mov
add
in
jnp
repz
in
mov
mov
push
aam
inc
popf
in
cmp
int
push
or
popf
mov
arpl
mov
lret
mov
pop
mov
jp
mov
sbb
and
test
not
jg
gs
jecxz
in
in
mov
jb
xor
push
add
out
enter
lods
sub
fldl
fisttpll
pusha
ljmp
xchg
or
cmpsl
sbb
cmp
sub
fwait
xchg
leave
cld
mov
scas
scas
dec
movsl
out
je
jle
das
xchg
mov
mov
mov
lds
lahf
lods
dec
jno
push
xchg
cmp
sub
jb
enter
dec
nop
popa
stos
out
gs
enter
pop
loope
xlat
cs
pop
sti
jno
xorl
cs
add
dec
loope
xor
jo
stc
out
stos
int3
dec
stos
sbb
mov
dec
jb
jns
out
sbbb
outsl
pop
xchg
sbb
insl
call
dec
gs
xchg
jb
pop
lock
std
in
outsb
leave
mov
aad
divb
aad
xchg
adc
in
and
leave
dec
jo
push
movsl
rolb
mov
sub
add
pusha
push
xchg
out
lcall
xor
clc
inc
xor
js
push
jnp
outsl
sub
inc
test
pop
xchg
push
pop
xor
pop
aad
repz
xor
cwtl
jnp
clc
loop
out
flds
xor
mov
sub
push
call
mov
imul
jno
mov
xor
pop
jmp
mov
jmp
and
jmp
xchg
mov
jmp
adc
cmp
or
xlat
rorb
pushw
push
mov
sahf
cmpsb
adc
iret
shr
push
cmp
push
sub
iret
push
enter
jne
ljmp
sub
xchg
push
das
xor
lahf
cmp
imul
test
xor
or
add
mov
inc
dec
pop
sbb
in
sbb
mov
mov
enter
mov
adc
loope
or
leave
cmc
and
mov
jno
popa
shl
or
sarb
mov
pop
test
push
add
pop
outsl
je
fcoms
mov
cmpsl
mov
and
pop
sub
sahf
lahf
jl
aad
loope
fiaddl
imul
and
movsl
testl
lods
dec
popf
rcll
jp
daa
icebp
xor
popf
inc
das
inc
test
sub
mov
add
mov
cmpsb
call
in
and
jp
out
inc
mov
mov
ss
test
out
push
sub
jmp
outsb
dec
loope
mov
test
mov
pop
dec
loop
aad
xchg
das
insb
xlat
insb
mov
adc
push
mov
dec
dec
js
fwait
sub
cli
fstpt
cs
adc
jnp
aad
lretw
jecxz
shll
nop
xchg
mov
stos
shll
mov
or
cmpsb
imul
nop
inc
stos
mov
sbb
fs
sub
scas
adc
cmp
out
outsl
sub
pop
jmp
jle
dec
mov
int3
adc
jns
rol
dec
mov
pop
xor
xor
hlt
icebp
or
aaa
sarb
stos
jb
add
add
push
dec
jns
cwtl
add
inc
inc
int3
xchg
sub
xchg
or
xor
mov
pop
push
pusha
test
ret
sbb
ret
sahf
pop
aaa
pop
xchg
pop
adc
pop
jo
mov
loopne
xchg
std
dec
in
mov
pop
subl
fneni(8087
movsb
jo
ss
xchg
mov
rolb
idiv
iret
dec
aad
lcall
je
cs
jle
lcall
push
sub
fimuls
xchg
xchg
sub
cs
hlt
xlat
popa
out
and
sub
pop
xchg
lea
and
pop
gs
dec
mov
and
mov
cltd
inc
push
mov
xchg
inc
sbb
fcomi
fwait
mov
push
mov
nop
mov
pop
xor
add
int
jns
icebp
jno
xor
xor
cwtl
or
orl
mov
ss
pop
jp,pt
mov
jg
mov
out
add
orl
inc
lahf
add
pop
push
lahf
jbe
fistps
mov
inc
into
ret
mov
push
into
dec
movb
xchg
and
xlat
xchg
ss
dec
inc
sbb
lret
in
or
jmp
mov
cmp
inc
mov
lahf
sbb
push
mov
mov
push
dec
or
iret
cltd
dec
inc
testl
push
push
shrl
add
jnp
out
mov
push
imul
repz
and
test
dec
pop
push
pusha
cmp
lahf
clc
icebp
insl
cld
sbb
in
cmpsb
cmp
pop
mov
fidivrl
add
cmp
arpl
jge
mov
push
push
test
jne
divl
insb
push
out
sbb
mov
xlat
sbb
add
pop
std
dec
and
pop
stc
push
dec
rcll
xor
popf
sbb
outsl
inc
cmc
les
sub
pop
imul
push
rclb
pop
mov
pop
sahf
mov
pusha
outsl
add
jns
mov
pushf
xor
popf
jo
jl
pop
cld
xchg
cmp
in
push
movsl
mov
pushf
insb
jge
scas
push
and
shr
call
mov
mov
cmp
sbb
or
mov
mov
pop
cld
cmpsb
mov
lea
mov
mov
js
popa
adc
les
and
pop
nop
iret
mov
cmpl
outsb
nop
ficoml
xchg
mov
stos
cwtl
add
and
rcll
stos
mov
rsqrtps
lock
jp
fwait
mov
out
hlt
lds
test
sub
loopne
mov
test
imul
roll
cmpsb
into
or
push
je
push
adc
cwtl
mov
adc
out
dec
add
xchg
or
cmp
std
cs
fsubl
pop
rcrl
fwait
add
bound
jno
adc
push
jnp
jae
out
neg
adc
imul
sti
pop
stc
push
mov
jge
bound
scas
inc
in
rclb
mov
inc
pop
sti
bnd
adc
jp
lock
loopne
mov
fstp
pop
jns
cli
mov
inc
sub
or
jmp
cmp
rcr
je
and
iret
cmc
cmp
or
negl
inc
test
sub
test
sbb
inc
mov
xor
sbb
jb
dec
outsl
mov
pop
test
adc
je
xchg
sbb
loopnew
test
test
push
inc
sbb
flds
push
pop
mov
enter
movsl
inc
fistpl
jnp
and
not
pop
test
pop
iret
mov
popa
popf
call
jl
pop
rcr
data16
sbb
popa
push
or
adc
mov
xor
pop
cld
sub
and
push
push
fwait
xorb
fildll
sbb
popf
push
xlat
and
mov
push
xchg
sti
push
mov
add
and
pop
xchg
add
inc
ds
inc
shlb
or
jo
mov
int
adc
jb
lock
xchg
mov
mov
iret
js
jne
stos
pop
mov
xchg
test
dec
or
loope
mov
test
cmpsl
or
dec
gs
mov
inc
stos
and
jno
add
iret
jp
xchg
sbb
cmpb
add
sub
push
jno
mov
jp
sbb
jbe
add
push
and
aas
inc
cld
mov
push
inc
into
add
les
test
insl
movsl
lea
hlt
sbb
cmp
subl
call
repz
or
repz
jb
mov
push
add
imul
xchg
loopne
mov
jge
and
out
or
inc
cmp
and
or
test
repnz
add
das
push
mov
js
mov
fldenv
test
mov
rcrl
inc
push
cwtl
daa
out
or
stc
xchg
shll
inc
adc
leave
xor
les
mov
roll
push
aam
sbb
mov
cmp
rol
jle
cli
outsb
adc
leave
or
push
mov
dec
stc
mov
mov
fwait
arpl
sbb
cli
fimull
mov
js
cmpb
in
cld
xchg
jnp
and
repnz
das
mov
xor
sbb
cmc
xor
pop
cmp
hlt
mov
sarl
mov
add
or
jnp
mov
in
or
push
and
dec
dec
pop
push
addr16
dec
add
ss
lret
repnz
and
sub
push
jl
sbbl
xchg
outsl
aad
cmpsl
clc
mov
push
fs
js
adc
cltd
scas
rorl
out
cmp
or
add
in
sbb
xor
and
jmp
pop
fnstenv
es
popl
int
or
xor
mov
ljmp
cmpsl
jbe
leave
dec
aas
add
orl
insb
sbb
addb
int3
lcall
mov
jmp
jge
rcrl
jo
push
mov
test
cmpsb
mov
shr
js
add
push
dec
flds
bound
lret
fstps
mov
out
loop
adc
out
dec
cld
and
adc
dec
adc
mov
lret
cwtl
leave
stos
push
and
jb
sub
movsb
ljmp
jp
and
shl
fwait
and
cwtl
cmp
ja
scas
inc
add
in
andb
outsl
add
into
in
lods
pop
xor
dec
leave
xchg
cmpb
adc
rorb
fbstp
test
mov
mov
lods
cmc
xchg
jns
sbb
int3
bound
jne
aam
adc
sub
and
out
and
and
inc
push
lods
xor
or
mov
int3
and
sub
xor
popa
pop
mov
aaa
jne
xchg
mov
pushf
mov
scas
xlat
adc
jno,pn
inc
dec
jle
sbb
jns
jne
lahf
mov
insl
imul
cmp
stos
pop
inc
or
xor
mov
jae
out
sbbl
out
xor
xchg
jo
push
std
push
mov
mov
clc
shl
cwtl
dec
ret
jle
jge
ret
lods
lcall
in
xor
push
sbb
jb
sarl
pushf
and
les
pop
aaa
sbb
rcr
mov
jns
loope
pop
js
or
ds
into
bound
test
ret
xlat
push
stos
test
outsl
jb
and
scas
xchg
ss
cld
leave
mov
mov
add
mov
xor
mov
xor
cmp
lods
jle
xchg
xchg
nop
out
push
push
std
xor
add
adc
jp
or
in
jbe
and
aas
mov
sbb
sub
xor
sbbb
and
add
mov
lret
cmp
mov
mov
repz
mov
cmp
js
mov
das
adc
or
dec
divl
rcrl
scas
int3
ds
jmp
gs
inc
pop
fldl2e
xchg
iret
push
ja
xchg
add
aad
ja
add
and
mov
push
push
push
pop
cmp
mov
movsl
and
pop
ljmp
jb
sub
jecxz
aam
push
jae
dec
mov
ds
test
js
pop
lea
or
mov
mov
and
loopne
test
inc
and
cld
and
testb
mov
shlb
fildll
sbb
inc
rol
out
cmp
pop
dec
outsb
sbb
ds
movl
out
ret
sahf
ret
xchg
and
pushf
rcr
daa
test
scas
movsb
push
push
movsl
jecxz
pop
aaa
adc
dec
imul
fs
movsl
jno
jle
mov
iret
int3
push
dec
fmull
adc
lods
idivb
enter
cs
sub
and
mov
jg
cmp
insb
jne
call
imul
push
inc
or
in
push
daa
xchg
pop
push
adc
jecxz
fisubs
and
cwtl
push
call
cld
add
and
mov
clc
aaa
push
je
jg
cltd
cmpsb
pop
push
push
pop
aam
cmp
insl
or
sti
cmpsl
xor
das
fdivrl
jae
testb
jl
mov
pop
jae
pop
ljmp
in
add
pop
xor
pop
mov
jmp
fmulp
outsl
adc
jne
rcrb
js
or
lea
sbb
fdivrp
sbb
push
push
je
xor
sub
mov
stos
dec
push
jae
dec
divl
pop
add
adc
loopne
cmp
insl
movsb
and
mov
js
pop
adc
and
mov
add
repz
adc
push
mov
cmp
test
loopne
shl
fstps
pop
xor
jle
aaa
sbb
xor
into
imul
jl
lea
aaa
fdivr
sbb
or
xchg
sub
add
fs
push
cmpsl
xlat
shrl
jle
int3
movsl
imul
jno
push
cld
nop
ja
mov
in
jmp
add
cs
mov
fisubl
add
xchg
sti
and
sbb
fnstenv
ljmp
insb
push
pop
pop
cmp
mov
pop
jns
or
push
imul
shlb
pop
jne
xlat
scas
jmp
mov
mov
pop
loope
mov
push
fcompl
mov
pop
dec
mov
insb
mov
mov
es
in
jmp
mov
leave
in
fistpll
cltd
or
push
aad
fwait
sbbl
ret
hlt
popf
jbe
pop
lods
stos
aas
in
cld
mov
xchg
popa
fs
out
xchg
cmc
insb
loopne
les
dec
inc
push
cmc
push
es
loop
and
push
addr16
adc
out
outsl
rcll
pop
push
jae
popf
and
mov
mov
out
in
movzwl
xlat
and
sub
inc
in
call
packuswb
or
push
cltd
leave
push
divl
xor
call
mov
lock
fcmovnb
push
and
jmp
jl
int
add
xchg
mov
push
mov
ljmp
inc
sbb
add
push
shl
scas
inc
decb
push
jno
dec
in
sbb
mov
xchg
push
jl
add
imul
push
test
pop
daa
rcll
fs
adc
xchg
rclb
sbb
mov
and
int
jbe
in
mov
cmp
mov
cli
icebp
lret
sbb
mov
mov
cmp
add
in
movsl
cmp
adc
mov
insl
shlb
fwait
imul
cmp
xchg
jl
test
inc
xor
xchg
das
popa
xchg
je
fisubs
out
inc
sbb
dec
aaa
pop
add
fnstcw
lods
fdivrl
sarl
movsl
lock
pop
pop
jp
fs
xchg
loope
fisttpll
push
subl
pop
rol
cmc
dec
sub
sub
mov
inc
cs
sbb
add
adc
bound
xor
iret
int3
sub
lock
test
stos
add
pop
cmc
loopne
arpl
pop
cmp
inc
push
loope
jo
addb
imul
xor
aaa
jns
repnz
sub
mov
push
jle
sti
data16
loope
push
fistpl
pop
sbb
mov
and
shll
aad
je
mov
ret
es
test
sti
push
xchg
dec
xchg
call
pop
adc
shlb
sub
cmp
js
ja
mov
enter
fidivs
and
into
sbb
cmp
shll
dec
jmp
xchg
inc
mov
leave
xor
or
pop
fcom
jge
cmpsb
lahf
movl
shrb
or
jns
enter
sub
mov
xor
lcall
push
rol
jmp
and
loope
cwtl
push
xor
fstpt
sti
pop
jp
dec
mov
push
mov
dec
xchg
mov
je
shr
pop
add
jb
dec
ljmp
outsb
movsl
lea
repnz
mov
mov
xor
adc
pop
mov
lock
mov
inc
push
test
xchg
aad
inc
clc
ljmp
inc
aad
xchg
andl
jnp
cmp
pop
mov
clc
cltd
jne
loope
rol
adc
imul
iret
leave
dec
mov
idivl
sub
xchg
scas
mov
out
mov
jnp
push
nop
movsb
mov
cli
clc
jg
jle
dec
fwait
cmp
scas
into
popf
xlat
lods
icebp
jp
popa
loope
fldt
mov
out
inc
aas
pushf
es
cltd
xchg
xchg
aas
push
jl
sbb
stc
aaa
mov
roll
mov
add
xchg
inc
mov
push
add
iret
push
pusha
push
ficoms
inc
or
or
adc
les
push
repz
jbe
iret
mov
mov
jp
fdivr
add
dec
push
inc
xor
add
rorb
push
jbe
add
xchg
sub
or
push
xchg
jmp
cmp
sub
xchg
iret
jp
mov
jmp
pop
pop
mov
aad
cmp
pop
sbb
or
jl
mov
inc
mov
adc
in
andl
or
sub
aad
push
lods
or
fbld
dec
add
inc
in
negb
cwtl
dec
sti
out
les
ficomps
cmp
int
ljmp
and
shlb
lock
hlt
pusha
test
fstps
ret
push
add
push
jbe
mov
lret
lahf
cwtl
out
rcll
lret
mov
xlat
or
pop
adc
outsl
mov
mov
jle
scas
ret
cmp
aaa
mov
push
cmpsb
sahf
adc
test
lcall
loopne
push
int
jle
push
jmp
mov
mov
sti
xor
aad
lds
shrl
fs
lret
mov
jge
sbb
sub
hlt
fwait
push
sub
ficoml
dec
ja
hlt
gs
aad
popf
out
not
ja
out
xor
mov
jmp
xchg
xchg
int3
js
pop
pop
cld
call
or
jne
pop
and
add
xor
out
in
or
sbb
clc
shlb
sarl
aad
and
jb
mov
cmpsl
int
in
and
aam
cmp
lock
int3
js
test
fsub
dec
test
cmp
mov
mov
rcr
cs
inc
mov
imul
pop
adc
out
mov
jp
insl
imul
and
sarl
or
inc
jecxz
xor
jae
out
dec
outsl
jle
mov
test
fcoml
mov
fstps
xchg
push
sti
and
pop
xchg
cmp
mov
push
ja
mov
fildl
sti
int3
sub
mov
mov
es
sarb
add
into
and
jmp
push
jmp
mov
jecxz
cmc
mov
cmp
mov
mov
sub
idiv
jo
aaa
xor
aas
jb
mov
push
ret
xor
mov
sbb
sub
scas
cmp
or
inc
mov
sbb
add
sub
fimuls
cmp
pop
mov
mov
push
ljmp
fmull
sbb
push
mull
pop
js
jo
stos
stc
loop
and
xchg
aaa
mov
int3
outsb
sbb
insl
mov
out
or
mov
sbb
mov
popf
or
lock
jo
iret
xchg
pop
imul
push
in
cmp
sub
jnp
adc
mov
imulb
lahf
rcl
mov
inc
xchg
les
je
mov
lret
ja
repz
cmp
into
pop
lret
pop
sbbl
cltd
or
jne
mov
fimuls
les
pop
mov
in
sti
aam
js
fldl
or
das
dec
xor
cmp
aam
nop
out
sbb
ds
mov
dec
sahf
and
jge
popa
mov
add
imul
add
push
sti
xlat
push
ss
mul
push
ja
test
hlt
jnp
shll
mov
jp
xchg
rcl
lods
cmpsb
adc
xor
sub
sbb
testb
int3
into
add
jno
mov
and
push
dec
flds
mov
push
push
pop
adc
out
xor
inc
jl
jae
enter
or
and
or
push
loope
fs
fs
or
mov
push
addr16
rcrb
xchg
insb
jle
push
lea
cld
movsb
mov
clc
fdivrs
mov
in
aas
bswap
adc
cli
jo
xchg
arpl
add
inc
loopne
xchg
sarl
in
xchg
push
sub
cs
xchg
inc
inc
divl
gs
pop
leave
cmp
cmp
cld
idivb
imul
sti
fwait
shl
push
icebp
aas
cmp
pop
fimull
dec
call
push
pop
pop
xchg
mov
outsb
adc
movsl
push
pop
mov
inc
push
sub
sub
bound
ljmp
repnz
xor
mov
xchg
shl
mull
lret
add
imull
push
mov
in
fists
cli
stos
test
inc
ficompl
pusha
jns
and
cmp
xchg
dec
dec
or
or
dec
sbbl
jnp
and
hlt
call
aam
mov
xchg
and
testb
in
mov
in
pop
xor
cmp
out
je
jns
xchg
mov
outsb
aad
sub
xchg
js
cmp
les
sahf
lds
xor
sti
push
nop
in
out
sub
xor
push
jge
push
push
mov
sti
add
push
insl
in
cltd
xchg
dec
pushf
aam
xlat
pop
loop
fsts
cmp
cltd
movsl
jg
lds
fcmovnb
adc
or
out
push
test
icebp
icebp
pop
outsb
add
jae
enter
icebp
and
test
popf
add
sti
mov
jbe
sahf
and
pop
mov
out
and
jge
lods
out
shlb
and
push
sysenter
inc
cwtl
enter
pushf
insb
or
inc
repz
inc
pop
cmp
dec
test
icebp
dec
mov
xor
mov
fistpl
shrb
dec
dec
mov
xor
mov
sbb
mov
ja
jl
adc
imul
fildl
jp
push
mov
push
mov
inc
dec
dec
inc
mov
push
or
xchg
push
cmp
andb
roll
frndint
les
dec
push
jae
das
aad
jno
movsl
in
dec
sbb
sub
push
lahf
lret
loope
cmp
cmp
je
pop
push
mov
cmpsl
cmp
iret
xor
int
or
and
in
test
data16
adc
push
add
lds
andb
shll
adc
pop
mov
sti
push
push
xchg
and
mov
add
sbbb
or
jg
add
jnp
sbb
and
cmp
cmp
push
and
mov
pop
int3
sub
sub
imul
dec
sahf
or
pop
or
inc
jae
lret
xchg
xchg
lret
in
adc
mov
push
sahf
rcr
mov
mov
decb
push
pop
popf
repnz
xchg
xchg
repz
arpl
das
inc
inc
pop
test
mov
into
adc
jno
out
lock
aad
mov
pushf
push
shll
jp
mov
inc
push
jo
fwait
hlt
cmp
popf
sub
fimull
jle
out
pushf
in
xchg
orl
pop
xor
mov
push
fs
xor
cmp
xor
leave
shlb
stos
mov
or
jb
movsl
jo
das
fwait
movsl
sbb
mov
call
jns
xchg
jmp
jmp
mov
jae
sbb
jg
fwait
adc
lock
mov
inc
dec
ret
arpl
test
pop
jae
dec
push
pop
sub
jmp
repnz
sbb
push
or
loope
cmp
hlt
sub
ret
roll
and
mov
fwait
iret
pusha
ficomps
aaa
xchg
adc
fiaddl
fwait
push
sbb
adc
ret
into
mov
inc
cmp
sbb
adc
fidivrl
in
dec
out
repnz
mov
aaa
cmp
mov
fldl
or
push
cmpsl
ja
repz
and
inc
push
cmp
sti
mov
loop
adc
movb
dec
xchg
lea
xchg
stos
add
jmp
lock
push
movsb
stos
js
lock
es
push
outsb
cmpsb
loope
ds
mov
fsts
pop
imul
and
mov
iret
daa
xchg
mov
cmp
out
cmp
push
insl
ret
divl
adc
adc
outsl
test
pop
sti
repz
adc
cmp
mov
out
sub
pop
cmp
pop
loopne
and
in
sar
fidivl
push
out
cwtl
lea
sub
fisttpl
test
cwtl
aam
add
dec
into
inc
inc
cmp
test
iret
movsl
jle
xchg
out
sub
cmp
in
ja
popa
xor
nop
mov
aad
insl
mov
scas
js
rorl
mov
enter
das
sbb
cmp
adc
xor
jbe
sub
push
sub
shrb
pusha
or
cmc
inc
loop
scas
push
pushf
ss
jmp
incl
fwait
pop
mov
out
xor
test
ds
pop
sahf
push
fistps
int3
test
inc
or
dec
mov
mov
add
or
out
cli
cmp
inc
idivl
fimull
mov
and
adc
xchg
or
mov
pop
nop
in
test
das
and
lds
xor
sbb
xchg
inc
dec
push
cmp
js
xor
add
mov
aaa
divb
dec
adc
std
scas
aaa
xor
lea
dec
push
dec
out
das
add
int3
popf
jnp
in
lahf
jae
push
out
stos
jmp
xchg
cltd
sub
jle
iret
icebp
add
xorl
pop
dec
mov
pop
mov
popa
pop
cwtl
push
pop
rcll
dec
fidivrs
pop
mov
test
int
add
sub
inc
xlat
add
push
add
dec
out
sub
dec
cli
mov
mov
test
jae
les
adc
jle
sub
add
mov
or
loop
mov
pop
lods
ljmp
adc
mov
inc
inc
aas
cmc
int
out
cmp
insb
jno
fsubr
xchg
daa
outsb
cmp
lret
aad
popf
ss
dec
push
or
call
sahf
ret
inc
jb
jns
outsl
xchg
xor
lea
imul
inc
in
inc
ret
cmc
fsubrp
and
imul
mov
insb
test
xchg
dec
imul
imul
mov
xor
xor
dec
or
lods
mov
sbb
xor
push
pop
call
jo
push
mov
movsb
push
cli
int3
rcrl
mov
dec
lret
xchg
or
mov
push
fwait
push
mov
popf
pop
jecxz
cltd
xchg
shr
lahf
ror
and
mov
mov
cltd
cli
lret
cltd
ss
stc
or
push
les
ds
enter
notl
jnp
adc
mov
lea
xorb
mov
sub
dec
push
loopne
ljmp
sub
das
or
dec
inc
push
ds
mov
jl
into
push
shrl
repz
adc
add
or
mov
stc
fcompl
clc
outsl
inc
sub
mov
cmp
sbb
rcrb
into
sbb
aaa
cltd
lret
adc
scas
cwtl
cltd
test
stc
mov
out
mov
and
sub
xor
test
imul
mov
lock
lds
inc
rorb
scas
leave
dec
lahf
jge
aam
decb
sub
xchg
cwtl
int3
jle
shl
pusha
mov
iret
jb
and
in
ja
jecxz
adc
pop
push
fwait
lea
in
rol
ret
call
pop
push
cwtl
imul
std
jle
daa
and
push
mov
sbb
lcall
aaa
cmc
jo
xchg
jbe
xchg
push
outsl
aas
sti
push
fxch
pop
inc
sarl
or
xor
jo
cmc
sub
mov
add
ficoms
insl
jo
cmp
mov
cmpl
inc
mov
outsb
xor
cmp
jno
add
push
push
cwtl
push
mov
sub
jge
pusha
pop
loop
leave
push
cmp
jmp
adc
ja
xor
mov
jo
xchg
xor
sbb
jne
mov
mov
mov
inc
les
lret
inc
jns
sub
xor
ljmp
popa
sbb
or
std
dec
add
shrl
mov
push
clc
cmp
or
insb
adc
enter
xor
adc
bound
xor
addl
adc
jecxz
orl
pop
xchg
push
cmp
test
test
or
imul
leave
movsb
fimull
sbb
ret
fisubs
jecxz
sahf
in
mov
sub
mov
pusha
in
inc
mov
addr16
or
idiv
xchg
sbb
xchg
inc
jg
xor
dec
push
add
add
not
inc
test
xchg
cmpsb
aad
imul
add
jns
ret
into
cmpsb
ret
popf
xor
push
pop
and
inc
push
cmp
icebp
dec
or
mov
lods
lahf
push
test
sub
xor
xlat
sbb
hlt
xor
and
fdiv
out
mov
mov
dec
xchg
dec
fs
cmp
pop
sti
cltd
sbb
faddl
mov
loop
shlb
sub
stc
cs
jo
pushf
mov
xor
inc
roll
dec
cmp
mov
sahf
jle
add
inc
and
lcall
loopne
jnp
jns
in
sbb
push
mov
pop
pop
dec
shl
sbb
test
inc
pop
in
in
push
add
mov
xchg
call
dec
cmp
push
ror
push
call
sub
mov
xchg
scas
mov
lret
xor
enter
shl
dec
lahf
jle
lods
cwtl
cmpsl
popf
push
dec
push
nop
xchg
inc
daa
rcll
les
pop
mov
bound
add
sbb
divps
sub
adc
lret
push
subl
popf
cmpsl
xchg
add
mov
add
mov
push
sbb
push
add
and
jmp
adc
aas
or
cmc
mov
mov
xor
pushf
mov
out
pop
jae
movsb
cltd
xchg
js
adc
loop
cmp
sub
or
cs
pusha
fisttpll
pop
cmpsl
sbb
rcll
ljmp
pop
mov
lahf
cmp
addr16
into
insl
push
stos
cmpsb
cmc
push
fiadds
push
fsubrs
jns
xchg
test
and
add
xor
pop
jno
lock
mov
popf
or
fimull
mov
inc
enter
inc
xor
es
fsubr
gs
insl
into
mov
push
fs
pop
sub
cmp
or
mov
rorb
outsl
jnp
mov
mov
cmp
xchg
inc
and
stos
mov
xchg
call
in
xchg
adc
popf
sbb
xlat
nop
or
xorb
leave
cmp
sti
mov
mov
inc
mov
pop
aaa
idivl
xor
xchg
sub
in
and
out
xchg
les
imul
ja
xor
adc
stos
psadbw
and
outsb
push
out
fwait
inc
sub
dec
in
fidivrs
xor
rclb
push
scas
pop
sahf
xlat
adc
shlb
in
push
inc
mov
hlt
sub
adc
out
rolb
fisttps
fisubrs
daa
icebp
enter
inc
mov
std
cmp
ret
aaa
push
xchg
xchg
insl
aaa
out
testb
xor
cmpsb
mov
or
add
insb
js
jnp
inc
adc
adc
mov
xchg
rcrb
and
sub
inc
dec
and
xor
cmp
inc
or
out
adc
push
mov
nop
rolb
inc
push
aad
into
outsb
ljmp
fistpl
pop
out
fldenv
rcll
xchg
sti
inc
dec
inc
push
sub
push
std
aad
int3
push
repnz
jo
pop
push
lods
jo
insl
mov
cltd
mov
lret
out
pop
mov
in
call
mov
lcall
or
push
pop
xor
subl
inc
mov
or
cmp
add
arpl
into
pushf
fcomps
movsb
adc
pushf
jmp
mov
sub
bound
xor
icebp
cwtl
sbb
and
and
roll
pop
aas
or
mov
pop
pop
mov
jo,pn
pop
jno
jno
and
fisttpl
push
js
xor
dec
xor
ss
leave
fsubrp
mov
out
mov
stos
bound
sbb
mov
xlat
xchg
sub
outsl
and
fbld
pop
iret
jno
ss
mov
cmp
jl
and
les
xor
mov
mov
or
or
out
cmp
add
xor
daa
xor
cmp
push
ljmp
pop
test
xor
cmp
mov
lods
mov
xor
sbbl
addr16
xor
add
fidivs
and
dec
in
cmp
add
add
clc
les
out
cwtl
aas
jns
ja
xchg
adc
lods
addb
push
jo
icebp
aam
or
flds
ljmp
mov
jbe
xchg
repz
adc
outsl
mull
or
push
xlat
std
mov
push
jae
leave
sbb
mov
out
dec
in
sbb
sbb
sbb
cmp
fmuls
or
aam
mov
aas
cmpsl
push
push
ret
fcoms
mov
rcl
add
push
pop
mov
xor
add
or
movsl
sarl
repnz
loope
daa
lahf
imul
lock
ds
jo
imul
push
push
dec
inc
mov
sti
cli
and
lret
aad
cmpsl
outsb
push
in
pop
pop
or
mov
repz
xchg
mov
mov
xchg
cli
or
insl
test
mov
loopne
imul
mov
lods
repnz
data16
xchg
mov
push
mov
js
or
insl
mov
jb
repnz
push
xor
lret
pop
inc
ret
lahf
cmp
add
out
shll
pop
js
dec
aad
dec
aas
mov
sub
mov
nop
data16
popf
dec
mul
xor
inc
add
popa
or
sbb
sub
stos
pop
jno
jo
call
and
das
jne
mov
in
out
nop
ss
xlat
stos
repz
popa
cmp
add
or
mov
psadbw
mov
adc
mov
divl
pop
imul
sar
xor
jnp
imul
mov
add
leave
and
push
pushf
adc
pop
adc
xchg
mov
xchg
fadd
leave
or
pushf
in
fstpt
xchg
or
cmpsb
cwtl
out
cmp
pop
pushf
mov
sub
in
icebp
add
add
insl
inc
sbb
xor
int
call
sub
pop
xlat
cli
push
and
in
or
lcall
pop
shll
pushw
adc
rcrl
jp
push
test
pop
iret
addr16
cmp
test
sbb
mov
jmp
ljmp
cmp
xchg
jle
xor
or
push
push
ljmp
or
add
jecxz
add
cmpb
inc
dec
fistl
jns
jae
filds
aad
and
sub
sub
fwait
cwtl
enter
xor
daa
jmp
scas
loop
jmp
out
addr16
push
aas
sbb
jp
mov
xor
pop
push
push
and
mov
adc
or
les
mov
cmp
dec
mov
fldcw
add
out
or
xor
call
std
insb
js
adc
push
jns
fsubrp
dec
testl
jp
fwait
push
adc
test
jle
inc
add
jecxz
xor
dec
jb
std
cmp
dec
cltd
popa
or
cmp
adc
pop
cmpl
push
mov
data16
jg
ficoml
shr
jbe
add
add
mov
mov
sbb
mov
push
hlt
out
cs
mov
adcb
jno
mov
mov
rdpmc
bound
jae
mov
jg
test
lea
xchg
pop
es
push
and
stos
xchg
lods
mov
xor
adc
mov
ficompl
neg
add
pop
adc
lock
add
imul
rclb
adc
addl
clc
mov
popa
cmpsb
jne
jl
add
in
movsb
add
adc
add
fstpt
inc
lahf
lock
add
rclb
jp
pop
popf
sbbb
cltd
data16
test
mov
mov
loopne
shrl
push
or
dec
mov
fs
push
daa
cs
adc
sbb
push
jnp
fdiv
xchg
push
jge
sub
cltd
mov
adc
jle
inc
xor
sti
sbb
xor
pop
mov
roll
sub
in
mov
stos
xchg
inc
test
and
in
pop
jb
and
jmp
jecxz
add
fistpll
or
les
or
pusha
std
and
daa
sbb
xorl
adc
lret
pop
rcll
sub
aam
gs
pop
and
out
lods
mov
int
add
sbb
adc
or
or
into
adc
ljmp
test
sbb
xchg
movsl
add
in
dec
fsub
lea
mov
or
dec
popa
mov
lret
xor
and
push
addr16
rolb
jg
sub
sbb
jecxz
mov
shl
les
aad
idivl
leave
icebp
mov
jns
push
bound
sub
lock
xchg
daa
rcrb
pop
jmp
mov
es
xchg
push
mov
idivl
dec
sbb
and
icebp
xchg
xor
in
mov
adc
inc
mov
imul
int
add
push
sbb
shr
shlb
dec
add
and
jo
scas
ljmp
cmp
jle
pop
and
data16
mov
sub
sbb
in
rorb
push
mov
mov
xchg
jb
pusha
xor
stos
pop
bound
mov
mov
xor
es
daa
adc
mov
pop
xor
repz
aas
jmp
cld
rcrb
aam
or
cmpsl
hlt
jnp
cs
rclb
sub
rclb
sti
stc
mov
adc
addr16
adc
pop
sbb
arpl
mov
lds
add
mov
ret
daa
mov
aam
into
test
fists
inc
jno
cld
add
add
sbb
sub
and
add
adc
in
xchg
dec
mov
add
leave
fnsave
xor
cmpsb
pop
push
or
insb
sub
and
lret
or
popf
mov
xchg
jno
ljmp
lret
jo
xchg
inc
cmp
and
repz
adc
std
sbb
cli
imul
out
pop
es
jo
es
jmp
lret
int
inc
mov
xor
pshufw
aas
pop
or
jno
ljmp
add
call
sub
push
pushf
jl
es
xchg
xor
and
xlat
jmp
and
pop
push
inc
pop
adc
adc
mov
mov
out
pop
repnz
mov
and
mov
shrl
sub
out
and
add
xor
popf
les
jmp
rcll
out
jg
fidivl
pop
xchg
mov
cmp
shr
movsb
mov
inc
dec
insb
cmp
lahf
ficompl
add
shll
gs
les
adc
inc
cmc
mov
pop
pop
daa
jb
cli
adc
push
mov
adc
mov
jg
sbb
insb
popa
add
out
jle
mov
imulb
cli
or
scas
sub
dec
push
call
pop
call
imul
stc
fwait
cmpsl
cmp
mov
pushf
loopne
frstor
in
sub
inc
pop
lret
cmc
sbb
cmp
mov
das
mov
outsl
cmpsb
stc
inc
mov
or
mov
adc
idivl
or
lods
xchg
loop
das
out
push
push
push
fwait
icebp
mov
sub
mov
das
movb
lcall
sar
cmp
fmull
xor
or
pop
pop
lods
xchg
int
in
lock
jae
inc
aad
pop
mov
inc
cmc
rcl
and
sbbl
in
jnp
andb
dec
xor
and
daa
xchg
push
cld
std
jmp
aam
les
cmp
cmc
cmp
jp
dec
mov
cmp
cld
adc
xchg
cmp
addr16
push
mov
testl
jbe
jmp
or
fldl
mov
dec
push
add
dec
add
aas
data16
loop
dec
push
rcll
cwtl
fnsave
adc
xchg
mov
loop
xlat
push
pop
push
lea
repnz
outsl
mov
lahf
dec
xchg
movlps
in
es
orb
in
and
push
jb
jbe
stos
xchg
pop
mov
imul
loop
out
jns
cmp
outsb
adc
cmp
or
push
xor
push
xchg
jl
sub
push
mov
push
dec
dec
add
hlt
lods
add
rolb
jmp
fs
xlat
test
lret
daa
mov
inc
mov
shl
fs
jo
stc
lahf
fwait
mov
lcall
cmc
ret
mov
jno
je
shll
rcr
test
mov
leave
test
sub
add
fidivl
mov
stos
mov
shlb
xchg
xor
fisubrs
lods
lds
jo
scas
mov
or
mov
cmp
popa
and
and
xchg
mov
mov
roll
add
mov
or
push
clc
cs
xchg
and
in
push
adc
xchg
fs
inc
es
sub
movsb
jmp
sbb
sti
sub
cwtl
sub
cmp
mov
xchg
addr16
push
aaa
sbb
popf
inc
daa
jle
dec
mov
clc
adc
movsl
loopne
inc
lcall
jg
mov
lea
inc
add
sub
je
sub
pop
in
jle
jl
adc
xchg
inc
ljmp
add
sbb
adc
sbb
jp
clc
pushf
test
push
xchg
aaa
jge
test
pop
push
fcmovnbe
mov
or
xor
or
scas
mov
in
xor
in
sahf
jecxz
daa
push
push
pop
data16
inc
and
mov
cmp
fidivl
push
mov
dec
xlat
loope
pop
mov
lret
dec
add
outsl
inc
stos
bound
call
jns
pop
lret
ss
dec
lock
into
aad
gs
leave
cld
sub
out
lods
cmp
xor
ret
mov
movsb
sahf
xchg
jns
pop
lods
neg
outsl
and
sti
divb
jb
push
mov
cmc
or
lahf
test
pop
lea
jmp
popf
lret
adcl
je
ret
daa
mov
fidivrl
lea
movsl
cmp
push
inc
fnstenv
mov
or
jl
dec
pop
xchg
or
in
sub
inc
int
addb
in
dec
sbbb
xor
das
mov
and
push
pushf
mov
outsl
orb
dec
adc
out
scas
call
inc
sbb
je
fldt
pushl
jp
pop
mov
sti
dec
cli
movsl
clc
mov
js
arpl
lcall
push
inc
into
or
stos
in
inc
cmp
push
mov
jge
repz
pushf
es
iret
negb
jae
jbe
add
in
cmpb
push
mov
xchg
shl
mov
inc
pushf
xchg
daa
mov
hlt
sti
sub
out
add
sub
dec
mov
fildll
out
push
roll
xor
xchg
ret
xor
add
push
pop
sbb
sbb
in
mov
adc
es
int3
xor
cmp
cli
mov
mov
mov
js
sti
enter
aaa
jmp
add
gs
push
fmull
lcall
mov
divl
out
outsb
in
cmp
cwtl
movsl
or
jge
fwait
jo
cmpsl
orl
sub
divb
pusha
sub
or
imul
pop
jnp
xchg
xor
pop
push
xor
pop
inc
xchg
cld
std
add
orl
out
rolb
in
inc
fs
test
add
inc
jae
fucomp
ret
daa
shll
pop
sub
outsl
in
cmc
mov
imul
repz
scas
std
jnp
xor
jge
dec
in
nop
jecxz
cmpsb
insl
lds
push
fistpl
ss
sbb
push
cmp
shlb
shl
push
and
or
sub
pop
stc
and
dec
cmp
nop
addl
or
into
addr16
dec
cmp
pop
pushf
jnp
rcl
cmp
gs
jl
inc
mov
sub
mov
aas
repnz
xchg
jecxz
cmc
or
pop
xchg
adcl
lods
ret
inc
mov
roll
sbb
push
mov
mov
xchg
orb
dec
and
xor
out
stos
add
ret
add
fstpl
imull
popf
push
inc
xchg
inc
and
inc
pop
mov
stos
push
mov
lahf
es
sbb
xchg
adc
pop
js
cs
sahf
loop
out
fsubrs
cmp
fisttpl
imul
add
mov
int
outsl
dec
adc
rcl
add
sbb
xor
cmp
jle
imul
xchg
add
ss
jle
hlt
xchg
lahf
repnz
add
rorl
lret
jo
pop
cmp
rcrb
push
clc
adc
lods
push
adc
aam
mov
xlat
outsl
nop
mov
aas
add
mov
adc
pusha
dec
jbe
ret
cmp
add
pop
xchg
jmp
push
dec
jmp
iret
and
cli
mov
mov
pop
inc
pop
sub
mov
jnp
subl
xorl
movsb
in
rclb
mov
div
adc
mov
orb
aaa
insl
fisubrl
adc
insb
sbb
xchg
inc
loopne
std
lret
cld
lahf
sahf
sub
jmp
lret
aad
xchg
in
pop
rcll
mov
ret
or
repnz
add
add
and
xor
dec
rcr
xchg
jbe
in
in
jno
leave
and
fwait
jbe
lcall
pop
xor
sbb
push
dec
cmp
dec
imul
xchg
mov
std
xchg
mov
movsb
adc
inc
dec
arpl
push
inc
stos
jge
scas
pop
push
repz
stc
inc
lods
cmpsl
repz
sti
cwtl
mov
rcrl
fdivrs
sarb
jae
lea
inc
lret
ds
inc
outsl
pop
ds
sbb
add
cwtl
mov
clc
rcrb
std
inc
cmpsb
add
jne
les
iret
inc
xchg
sahf
mov
push
cmp
xor
in
arpl
pop
add
scas
pop
or
sbb
out
rorb
addl
pop
fisttpll
fidivl
inc
mov
cli
cmp
out
mov
lock
pop
sbb
xchg
or
in
repnz
mov
popa
push
ljmp
loop
xchg
fdivrl
mov
mov
scas
xlat
mov
test
es
adc
enter
mov
enter
adc
imul
xchg
add
jnp
stos
sub
mov
fs
jno
jbe
add
jmp
aaa
cmp
lock
jns
fwait
inc
idivb
movsb
pop
aaa
add
xchg
shr
out
inc
adc
mov
cli
ja
dec
mull
sub
lcall
inc
adc
add
rcr
inc
das
add
push
fwait
lcall
sti
cltd
xchg
cmpsl
pusha
lcall
add
add
stos
and
int3
pop
in
inc
nop
xor
faddl
negl
cmpsb
mov
push
sub
jmp
lds
lock
xchg
test
subb
test
adc
mov
ret
ds
stos
dec
mov
add
or
adc
sub
rclb
and
sub
cmc
loopne
jne
or
addr16
sbb
int3
mov
adc
shll
lret
cmp
add
mov
cmpsl
sub
repnz
push
je
sbb
add
push
dec
idivl
push
call
daa
stos
pushl
iret
movsb
xchg
lret
push
cmp
mul
imul
cmp
hlt
popf
mov
mov
xchg
adc
pop
fstl
mov
push
lods
cltd
repz
or
sbb
push
movntq
xchg
mov
mov
and
sub
adc
es
adc
sub
pop
cs
in
stc
push
hlt
jp
scas
cmp
adc
test
sahf
sbb
dec
push
cs
insl
shlb
rcl
fimull
jg
push
js
into
ret
dec
pop
insb
mov
mov
test
shlb
mov
push
inc
pop
fnstcw
movsl
sbb
xchg
cmp
pushf
gs
imul
aas
pop
rcrb
mov
mov
sbb
es
adc
jb
jg
hlt
jmp
cltd
out
sub
cmp
popa
sub
jmp
mov
jg
xchg
cmp
mov
xor
and
xlat
sbb
enter
cs
pop
inc
in
and
repnz
cmpsl
jns
pop
sub
push
pop
outsl
push
jno
loope
sar
ljmp
sub
or
adc
fsub
push
mov
mov
mov
movb
xchg
cs
mov
sub
jb
insb
movsb
aad
sub
cmp
aaa
sti
sar
sti
jle
sarb
idivb
jb
and
ljmp
notb
push
nop
movsl
mov
inc
push
addr16
push
cld
repz
repz
mov
and
mov
repnz
sarl
scas
sub
stc
insb
ficompl
adc
push
jecxz
stos
xchg
xchg
stos
sub
rcr
test
or
bound
push
adc
pop
cmc
nop
imul
mov
and
ret
das
jbe
jle,pt
popa
and
aad
loop
nop
push
pop
add
popf
mov
pop
test
and
or
shrb
fcoms
push
mov
ret
ljmp
xor
jns
das
test
leave
rcl
push
cmpsl
inc
inc
rcrl
cltd
mov
jp
outsb
rcll
jl
or
ret
sub
mov
sti
out
xchg
mov
jmp
icebp
sbb
add
ss
sbb
inc
cs
inc
dec
push
and
add
jge
in
dec
pop
mov
adc
xchg
pusha
fiadds
and
shl
jno
loopne
fcmovb
sub
add
jg
xchg
test
aad
fldt
adc
fldt
dec
insb
rolb
add
testb
inc
or
jbe
inc
shlb
pop
stos
test
push
pop
andb
mov
add
enter
gs
test
lcall
add
fwait
gs
movsl
jecxz
call
nop
mov
adc
sub
insb
mov
repz
cwtl
mov
jne
loopne
jnp
int
or
out
in
push
pop
cmc
cmpsb
outsb
mov
lock
cld
dec
popf
sahf
mov
enter
cmp
adcb
mov
fmuls
xchg
jmp
cmp
push
jge
scas
sti
xor
mov
pop
fnstsw
addb
sbb
push
jns
xchg
sbb
fwait
xadd
add
mov
cmc
jmp
cmp
pop
or
aas
shlb
mov
mov
mov
mov
lret
movsb
pop
xor
imul
iret
inc
adc
in
fildl
cld
cmp
dec
in
or
mov
scas
loop
out
ror
ljmp
cmovae
adc
xchg
cmp
adc
mov
lcall
jno
or
shl
scas
arpl
out
pop
std
xlat
imul
fstpt
pusha
mov
cwtl
sub
pop
aad
jbe
xor
dec
scas
sub
mov
sub
xor
pop
mov
xchg
push
push
sub
mov
add
add
xchg
xor
mov
aaa
mov
filds
and
test
inc
jecxz
jp
push
dec
rolb
push
cwtl
push
aam
lds
addl
inc
jmp
sbb
pop
mov
dec
out
out
std
pop
fwait
or
rcrb
iret
jne
out
add
inc
stc
int
jmp
and
fcom
lcall
pop
aaa
aas
pop
push
inc
je
movsb
xchg
das
inc
loopne
jbe
pusha
cmpb
cld
jmp
mov
jne
sbb
in
into
push
xor
cli
or
inc
subb
bound
and
mov
push
push
or
out
outsb
nop
mov
dec
and
jl
outsl
das
dec
fadd
mov
sbb
xchg
push
add
cld
adc
mov
fmull
or
xchg
stos
mov
jecxz
cmpl
sbb
jmp
je
fiadds
lahf
test
jmp
cli
cmp
loop
mov
ljmp
push
xchg
jecxz
push
cmp
mov
fwait
pop
insb
push
hlt
and
dec
rcr
sbbb
pushf
out
inc
cld
inc
add
daa
cs
icebp
xor
insb
push
pop
loop
sub
pop
mov
int3
push
push
mov
xor
fnstsw
je
loopne
out
inc
jge
jmp
iret
call
mov
andb
mov
mov
fldl
xorb
nop
pop
cmp
in
mov
divl
mov
gs
enter
sub
xor
mov
jmp
jle
ret
xor
dec
outsb
out
xor
mov
mov
movsb
stos
cs
push
mov
icebp
mov
cmc
adc
sub
mov
movsl
pop
xchg
arpl
fimull
call
sarl
out
inc
andb
stos
push
pop
pop
arpl
das
jne
jnp
mov
pop
sar
bound
cmp
mov
orb
push
jg
add
scas
pushf
hlt
les
xor
dec
adc
mov
add
scas
mov
cld
jae
incl
sarl
popa
or
in
testl
add
cmpsl
xchg
repnz
pop
cmpsb
insb
sahf
incb
xor
or
cwtl
jp
mov
andb
hlt
sub
inc
test
lods
and
pusha
pop
lahf
jge
lock
arpl
and
adc
cs
add
aaa
je
mov
outsl
pop
pop
aad
rorl
jnp
sub
pop
pop
cmpsl
test
or
inc
mov
pop
lods
xchg
add
insl
xlat
jbe
cmpsl
mov
sbb
adc
xor
adc
push
inc
leave
jno
mov
jno
push
je
push
cld
push
fwait
nop
sub
cmp
push
sub
std
xchg
add
inc
stos
push
test
je
add
outsl
mov
data16
pop
sbb
cmp
imul
and
jecxz
add
mov
and
pop
testb
dec
ja
fmul
pop
pop
inc
mov
cmpl
lods
jbe
insl
fstp
mov
into
cmpsl
jo
sbb
mov
cmp
jg
cwtl
and
pop
adc
mov
aas
mov
pop
xchg
sbb
inc
daa
mov
popa
test
out
mov
popa
push
divps
incb
js
jbe
cmpl
cmp
bswap
rolb
insb
icebp
decb
mov
mov
orb
ss
mov
jle
stos
add
gs
aas
leave
stos
sbb
pop
imul
adc
jmp
pop
dec
mov
mov
xchg
push
adc
shl
cwtl
pop
cld
add
mov
sub
add
daa
mov
lock
inc
cltd
adc
enter
ret
loopne
mov
mov
cld
inc
out
dec
idivl
aad
int3
mov
aad
rclb
leave
push
int
pop
xchg
cwtl
mov
mov
sbb
les
in
mov
je
jl
ss
push
sub
into
sub
cli
lock
jp
cmovge
sub
mov
lods
mov
mov
stc
jge
insb
adcb
lea
mov
sbb
jns
cmp
inc
and
adc
cs
mov
popa
ja
pop
cmp
cmp
cmpsl
in
or
and
pop
lret
shll
ljmp
and
call
adc
jp
sbb
cmp
std
sbb
jle
icebp
adc
mov
mov
cmp
xchg
xchg
lret
fldenv
push
std
orb
mov
popf
pop
dec
jmp
mov
cld
sbb
jmp
in
dec
add
adc
mov
xchg
xchg
pop
cmc
lcall
stos
push
fdivr
insl
jg
cld
cli
cmp
inc
push
mov
subl
aad
in
stos
push
int3
dec
mov
mov
jl
into
jnp
lea
cli
adc
mov
xor
jbe
pop
fwait
and
cltd
cmpb
mov
les
mov
mov
repz
mov
mov
jle
inc
ja
insb
jne
mov
inc
xchg
push
sub
dec
pushl
or
outsb
cld
scas
gs
jno
inc
inc
xchg
cltd
xor
in
incb
test
xchg
xchg
xchg
inc
leave
inc
movsl
mov
dec
aaa
mov
adcb
mov
sbb
repz
xor
ljmp
jne
cs
push
pop
std
shl
inc
leave
jb
ss
test
xchg
push
pushf
ja
cltd
stos
jle
shrl
cmpsb
xor
sbb
movl
ja
ret
mov
jbe
mov
mov
arpl
jo
dec
into
das
gs
adc
cmpsl
out
dec
scas
daa
cmpsb
cmp
pop
inc
inc
or
inc
and
popa
icebp
push
inc
inc
roll
int
add
fstps
lock
push
sbb
or
jb
push
xor
aaa
or
or
xchg
scas
inc
nop
and
cmc
sbb
pop
pop
add
and
and
sbb
addr16
add
sbb
and
lahf
cld
shlb
push
mov
pop
mov
lods
movsb
inc
sbb
mov
pop
sub
inc
pop
cltd
pop
outsl
xchg
icebp
push
bound
ljmp
fildll
sbb
cmpsl
cmpb
add
sbb
mov
fiadds
test
stos
out
mov
xchg
loope
add
mov
and
and
repz
sbb
scas
ret
xchg
mov
xor
and
push
mov
inc
cmpsb
test
outsl
subb
sti
dec
out
add
cmp
sbb
sbb
mov
push
cmp
jp
cmp
pusha
sahf
adc
cmp
jb
add
add
insb
or
xchg
push
xchg
addb
xchg
or
movsl
dec
cmp
in
fidivl
mov
add
ljmp
mov
popa
inc
cmp
insb
pusha
mov
pop
mov
adc
mov
insl
pushf
loope
loope
in
jmp
arpl
sti
fnsave
loop
dec
mov
xor
push
arpl
xlat
inc
sbb
mov
mov
dec
xor
popf
and
scas
fsubr
adc
cmpsb
mov
cmc
loopne
jp
adc
ljmp
out
mov
adc
pop
mov
repz
out
loop
test
and
in
imul
push
push
out
inc
sbb
inc
and
sub
push
mov
inc
lret
cmp
lcall
xchg
dec
arpl
fstl
sbb
outsb
mov
mov
pop
and
dec
test
scas
sub
xchg
pushf
jl
jnp
dec
or
cmp
cmp
arpl
rclb
sub
sub
push
sub
pop
js
pop
mov
daa
cmp
fidivrl
add
xor
mov
into
dec
jo
xchg
mov
push
mov
adc
inc
test
lea
xor
ds
mov
cld
push
lret
xor
sbb
stos
scas
xchg
fs
arpl
and
mov
roll
loopne
dec
jge
add
adc
mov
pop
and
popf
xorl
out
loopw
into
mov
fidivs
jg
jb
xor
jb
jne
cmp
loop
mov
fistpll
and
pop
push
clc
inc
jbe
xor
out
sti
addb
outsb
jl
cmp
fildl
adc
mov
fildl
aad
imul
xchg
lahf
addr16
out
pop
pop
jp
dec
and
clc
imul
shll
inc
add
sbb
mov
pusha
mov
and
xor
inc
or
ja
std
movsb
outsl
push
clc
iret
mov
sbb
xorl
sti
add
mov
jne
aam
mov
mov
mov
cmp
fdivrs
jmp
mov
and
test
lea
sti
pop
adc
shll
and
cmpsl
and
mov
aas
pop
push
and
test
shrl
subb
mov
push
xor
lods
sub
in
dec
imul
push
mov
daa
pop
jno
lcall
pop
inc
add
rcll
sbbl
push
jmp
in
lods
push
adc
in
lret
aam
push
mov
dec
jno
xchg
mov
scas
jmp
sub
xlat
mov
filds
jp
jne
in
jle
stos
sub
call
enter
and
sub
fwait
in
sbb
test
test
les
xor
push
inc
arpl
in
pop
and
pop
sbb
faddl
call
sbb
dec
sub
out
push
insb
sub
pop
mov
push
dec
shl
mov
push
mov
aam
cmp
push
sahf
in
popf
add
sub
push
add
push
dec
fisubs
addr16
dec
mov
in
pop
mov
addl
pop
dec
inc
mov
dec
xlat
test
lahf
fwait
aad
mov
cmpsl
lock
push
sub
stos
movsl
jne
mov
push
adc
sbb
push
mov
jecxz
mov
adc
and
inc
jmp
dec
xor
icebp
orl
sti
add
xor
roll
mov
and
testl
cmp
mul
gs
jb
aam
fadds
xchg
dec
jb
mov
xor
xchg
xor
iret
test
jl
nop
flds
mov
das
jg
push
ret
pop
loop
or
and
lods
rol
xor
cld
repnz
xchg
jecxz
mov
sub
pusha
out
fbstp
add
sarb
add
lret
clc
sbb
dec
jl
cli
addr16
xchg
jg
add
cli
push
ret
jecxz
or
jnp
or
mov
stos
dec
inc
or
int3
mov
jecxz
push
test
fsub
jle
insb
std
dec
das
sbb
pusha
imul
lcall
les
jmp
mov
pop
xchg
push
adc
mov
insl
xchg
imul
mov
jbe
pop
int3
les
inc
jo
jne
mov
cli
stos
xlat
add
cltd
stos
enter
xlat
xchg
popa
cmc
push
or
cwtl
mov
mov
sub
rcl
out
fmull
clc
jge
stc
js
push
icebp
test
int3
data16
addb
push
jo
inc
push
push
pop
and
es
into
jnp
xor
push
and
xchg
push
sub
sub
mov
mov
aad
xor
loopne
in
adc
lock
mov
mov
shlb
fimuls
addr16
decl
add
sbb
stos
shr
xchg
push
fs
out
or
mov
add
lret
mov
aaa
pop
hlt
jle
xorb
pop
pop
mov
sbb
pop
pop
popa
clc
cltd
xchg
xor
mov
mov
je
push
mov
aam
std
xchg
test
cld
dec
int3
aam
dec
mov
cwtl
pop
arpl
stc
lods
stc
nop
dec
mov
cmpsb
jns
daa
movsl
mov
jbe
xchg
push
and
rclb
push
xchg
loop
sub
imul
pop
ret
inc
dec
jmp
mov
sbb
hlt
aas
lods
loopne
cmc
mov
lret
cld
jo
fstpt
add
stc
push
cmp
sbb
and
cmp
pop
cmp
adc
js
mov
sub
stos
pop
andl
cmp
push
shrb
dec
push
adc
xor
push
cmp
and
xor
dec
cmp
inc
mov
push
data16
cmpsl
inc
or
js
cld
dec
inc
imul
xchg
push
mov
and
sbb
imul
cld
inc
adc
lcall
sbb
sbb
mov
sub
stos
mov
outsl
jo
jmp
inc
sub
cmp
adc
fwait
and
or
daa
or
mov
daa
add
lock
mov
xlat
sub
pop
call
imul
test
push
sbb
mov
fsubr
in
mov
jnp
xchg
je
mov
cwtl
xchg
mov
sbb
cmp
pop
jno
lret
scas
ret
sahf
push
dec
dec
fwait
xchg
loope
cmp
xchg
imul
fldcw
in
clc
push
adc
clc
push
sbb
movsb
mov
add
outsl
stos
sti
lds
adcb
popf
ss
fwait
push
out
adc
xlat
sarl
popa
popf
addb
sub
inc
inc
push
add
ret
dec
mov
cld
fwait
pop
mov
cmc
lock
mov
ret
into
inc
mov
js
icebp
inc
clc
jo
xchg
cld
les
gs
test
jle
jmp
xchg
push
ret
aaa
mov
ret
mov
lds
lret
arpl
adc
cli
or
and
sub
dec
push
lods
jecxz
sub
dec
stc
je
push
pop
cltd
cwtl
sbb
jle
push
lret
test
jecxz
negl
shll
outsl
mov
negb
xchg
jnp
adc
xor
and
sub
push
adc
imul
pop
and
jp
call
xchg
je
sti
adc
shrb
add
mov
cmp
inc
mov
addr16
icebp
testl
shrl
push
inc
jno
lret
lds
mov
push
test
pop
or
xor
pop
orb
clc
fdivr
pop
sbb
jge
divb
pop
jne
xor
xchg
dec
dec
sub
or
add
arpl
jnp
adc
xlat
cmp
xchg
xor
in
sbb
mov
lret
dec
mov
dec
pop
fucomp
pop
int
inc
add
add
adc
stos
mov
xchg
sbb
adc
cmp
lcall
inc
mov
lret
xchg
ret
mov
imull
sbb
inc
aas
pop
xchg
push
add
fidivrs
mov
pop
push
cwtl
inc
flds
out
fdiv
dec
jmp
mov
ss
dec
mov
lcall
cmp
xor
sub
mov
mov
or
hlt
mov
mov
sub
pop
stc
mov
in
dec
add
mov
push
sub
repz
dec
xchg
testb
aas
pop
jmp
sub
xchg
arpl
int
push
sbbl
sub
mov
out
call
adc
mov
sub
or
movsb
addr16
and
mov
ljmp
inc
test
and
pop
data16
adc
push
sahf
xor
in
out
add
jl
cmp
sub
mov
in
xchg
mov
cmpsl
clc
sub
das
cmp
out
or
xchg
clc
push
js
loope
or
aad
scas
repnz
and
mov
xor
xchg
sbb
push
js
xchg
push
mov
adc
add
ss
sub
ds
notl
cmp
test
sub
mov
add
adc
mov
enter
incl
lahf
pop
add
sub
in
lock
dec
pusha
xchg
xor
sub
sbb
mov
pop
imul
rolb
inc
pop
test
pminub
gs
lea
push
sti
outsb
and
push
cmpb
sub
outsb
rcrb
nop
outsb
jo
test
mov
cmpsl
scas
adc
mov
cmovne
insl
into
ljmp
mov
sbb
orb
sbb
jp
inc
cs
lds
cmp
divl
cld
test
mov
mov
mov
outsb
in
repz
int
xor
outsb
jecxz
push
je
and
add
add
jbe
outsb
cli
je
call
sbb
xor
jmp
stos
lods
outsl
mov
mov
hlt
in
lcall
mov
fs
fnsave
cmpsb
dec
mov
jo
inc
int3
inc
sbb
cmp
test
int3
icebp
mov
leave
sahf
mov
dec
ja
inc
pop
fidivl
mov
pop
es
push
int
movsb
jae
orb
xor
inc
sahf
stos
adc
inc
mov
popa
xlat
incb
scas
or
cmpsb
fbld
mov
hlt
in
cmp
lcall
ss
orb
daa
aam
dec
lcall
sbb
or
push
cmp
mov
stos
repnz
cwtl
repz
pop
pop
sub
mov
lahf
aam
xor
fs
ljmp
imul
insl
add
add
xor
decb
setg
fs
jo
sub
xor
mov
lahf
scas
jecxz
add
cmp
pop
inc
add
les
insl
mov
scas
mov
pop
sub
jg
jb
jnp
xchg
shlb
sbb
sub
jge
xchg
fiaddl
outsb
pushl
xor
and
mov
lea
test
cltd
stc
js
pop
mov
repnz
cmp
or
jmp
fdivr
dec
into
pop
dec
mov
fldcw
test
sbb
mov
scas
pusha
ficoml
out
mov
jbe
rcrb
jmp
jo
and
push
inc
mov
data16
xor
test
test
std
mov
mov
cmp
sbb
or
sahf
fnsave
insl
lcall
pop
jb
cmovp
mov
or
out
data16
lret
dec
dec
push
dec
xor
outsb
dec
sbb
inc
outsl
or
cs
jbe
or
xor
rorb
rcl
pop
les
lahf
mov
movsb
sub
push
sbb
jl
bound
aas
fisttpl
fwait
in
leave
sub
pop
enter
cmp
xor
mov
jns
repz
std
sbb
xchg
arpl
inc
stos
loope
and
jbe
pop
lret
ljmp
and
jle
mov
jo
xor
ds
jg
int3
aam
sbb
pop
adc
in
pop
ja
mov
les
std
cmp
sbb
cmp
and
push
in
sarb
mov
fwait
inc
lods
xor
stc
lret
pop
sub
ds
pop
adc
add
loopne
sub
int3
push
clc
xor
jl
int3
jp
xchg
mov
mov
idivl
or
dec
xchg
imul
xchg
jecxz
mov
inc
cltd
pop
push
pop
jmp
add
or
ret
jecxz
sbb
arpl
pop
mov
mov
out
lods
cmp
rorl
in
stos
ds
cs
xor
mov
lret
mov
jg
fisttpll
repz
loope
imul
sub
shr
adc
adc
mov
or
jp
ds
mov
jne
cld
in
inc
mov
mov
sub
mov
mov
pop
add
aas
mov
shlb
mov
outsb
rolb
or
jge
lock
add
xor
sbb
cmpsl
int
jecxz
inc
and
hlt
jno
xchg
push
xchg
cmp
and
out
iret
inc
lods
hlt
shl
outsb
dec
rorb
jo
pop
lahf
mov
pop
push
jne
sbb
hlt
pop
sub
jns
mov
cwtl
xchg
push
mov
lods
fs
xchg
arpl
jbe
cmpsl
mov
mov
into
push
mov
test
popf
adc
test
call
inc
mov
pusha
and
jne
addl
fdivrs
shll
sbb
in
test
cld
sub
out
or
js
clc
sub
adc
imul
sbb
leave
cld
push
mov
pop
cltd
pop
pop
je
xchg
scas
in
and
pop
das
out
add
clc
outsb
imul
leave
popf
xchg
call
mov
adc
js
ret
sbb
sub
sbb
mov
out
rcrl
popf
jecxz
pop
push
xor
in
movsb
and
xlat
or
adc
adc
ret
fldl
jae
jne
jmp
sub
and
lret
sub
pop
sbb
fidivs
mov
mov
mov
sub
popf
lods
sub
mov
mov
fwait
je
dec
and
aaa
js
mov
cmc
cmp
push
mov
adc
dec
arpl
mov
in
enter
scas
std
dec
ljmp
inc
mov
lcall
mov
inc
xchg
repz
jecxz
and
inc
jo
jns
xchg
mov
mov
clc
negb
cmp
cwtl
mov
sbb
jecxz
inc
mov
lcall
xchg
and
xchg
inc
jp
cmc
or
in
test
lret
gs
cmp
push
mov
add
stos
fisttpll
sub
into
arpl
mov
mov
mov
aaa
push
insl
mov
mul
dec
loope
push
pop
es
push
push
push
xor
pop
leave
sarl
push
fwait
jmp
mov
xorl
hlt
mov
scas
inc
push
out
jne
lds
test
jl
mov
jge
jnp
das
arpl
mov
movsb
mov
aam
and
mov
rclb
clc
xchg
mov
test
cmc
sahf
mov
dec
lea
mov
imul
adc
ficomps
mov
mov
inc
out
adc
or
cmp
fdiv
mov
sbb
and
mov
jle
push
and
cmpl
and
call
out
lahf
jne
and
leave
out
mov
sub
sub
hlt
mov
push
pop
dec
ss
lret
pop
xor
sub
adc
scas
int3
pusha
aas
xor
pop
sbb
call
ror
cmp
mov
cmp
gs
mov
movsb
ret
inc
ror
enter
fisubl
mov
out
je
add
inc
fs
xchg
add
arpl
lcall
mov
les
and
push
or
pop
loope
mov
adc
cld
cmp
dec
push
stos
out
enter
push
pushf
adc
imul
cmpsl
xorl
sbb
imul
scas
mov
movsl
imul
clc
repnz
jae
push
icebp
sahf
push
test
cld
mov
jg
je
push
lds
aad
pop
ljmp
cmp
or
or
mov
aaa
jno
in
mov
xlat
imul
sbb
adc
pop
push
sub
mov
mov
in
ljmp
dec
adc
sub
les
inc
test
orb
inc
aam
or
sbb
pop
out
and
rolb
ss
dec
lahf
stc
lret
addl
gs
cmpsb
and
scas
cmp
xchg
lock
data16
adc
fsts
xchg
mov
lods
cli
pushf
and
and
mov
xor
push
pop
push
pop
ljmp
fstl
adc
fcmovnbe
nop
mov
inc
mov
insl
scas
lods
cmp
push
in
mov
cltd
in
aad
mov
jg
xchg
inc
lods
pusha
add
lret
lea
lds
scas
inc
inc
cmovnp
jb
cmpsb
xchg
shlb
pop
xor
cmp
add
push
repz
mov
add
aaa
stos
stos
ss
cmp
push
push
jae
cmp
jle
fistps
dec
cwtl
xlat
div
nop
rclb
test
sbb
xchg
out
sub
push
aaa
dec
mov
jge
inc
stos
or
or
adcb
jae
xor
enter
inc
scas
outsl
test
sub
xor
imul
out
mov
jmp
sub
or
jg
push
push
test
and
aam
adc
add
adc
loop
or
movsl
pop
or
mov
stos
lock
push
jbe
jb
jge
fmuls
or
xchg
jmp
lods
jb
repnz
xor
sbb
nop
test
or
lcall
mov
or
mov
mov
cmpsb
into
mov
test
mov
push
pop
mov
push
pop
dec
mov
and
push
cmpsl
test
les
mov
sub
sbb
sub
pushf
jb
mov
cltd
xchg
or
dec
rolb
add
lret
in
pop
push
and
xchg
inc
flds
sahf
or
xchg
mov
or
daa
popa
sbb
dec
test
cs
cltd
xchg
out
xchg
addr16
jmp
js
cmp
sbb
arpl
mov
jae
jno
and
int
or
mov
les
pop
pushf
iret
es
lahf
loop
push
movsl
jecxz
cmp
lret
call
inc
in
sbb
mov
push
lret
lret
jge
fs
and
mov
inc
pop
jmp
xchg
add
or
stos
cwtl
inc
mov
test
lret
dec
ret
adc
in
mov
dec
sbb
jg
pop
imul
xor
push
lret
jmp
lret
dec
lock
ret
test
sbbb
or
dec
pop
loop
xchg
or
mov
sarl
cmp
push
vsubpd
or
outsl
test
jecxz
fmuls
ffree
xor
mov
addb
imul
push
lret
cmp
and
xchg
cmp
fldenv
or
fs
dec
incl
add
jmp
jae
xchg
fwait
rcr
jg
es
mov
pop
enter
cmp
inc
xor
xor
push
cs
adc
inc
aas
pop
clc
rcll
andb
test
inc
sub
pop
es
push
cmp
sarl
adc
pop
pop
jb
outsb
lea
lahf
mov
loope
lods
movsl
push
push
sbb
sbb
out
imul
aam
iret
xchg
out
pop
and
inc
in
add
out
sub
in
push
out
addl
jmp
mov
daa
ljmp
xadd
fistpll
sub
in
mov
pop
adc
cmp
out
popa
inc
lcall
fisttps
push
bound
dec
ss
rcrb
add
xor
into
lods
cltd
mov
add
mov
ja
es
je
pop
sub
xlat
lods
xchg
scas
enter
dec
test
push
clc
add
cmpsl
adc
push
mov
or
daa
cli
imul
jmp
push
and
jge
movsb
jle
xchg
data16
push
andb
arpl
jmp
ljmp
sahf
sub
jae
negb
jb
into
das
stc
add
test
mov
lock
adc
iret
adc
divl
loopne
jne
xor
fisubl
ljmp
outsb
mov
add
sbb
repnz
insl
or
mov
std
adc
sub
lcall
stos
mov
pushl
loopne
and
sub
dec
popa
pop
mov
les
push
cld
cmp
dec
dec
dec
call
mov
lret
and
ja
xchg
sub
mov
out
dec
out
push
mov
add
negl
sub
imul
lods
je
pushl
aam
aam
inc
out
mov
mov
push
fldl
pop
xchg
call
cmp
sahf
fsubrs
sbb
adc
or
sbb
icebp
mov
push
cltd
push
movsb
cmpsw
jl
xchg
or
mov
pop
push
mov
xor
adc
mov
adc
jl
test
dec
xchg
in
stc
pop
mov
mov
add
test
xchg
mov
pop
push
or
jmp
sbb
testb
pop
pop
and
ret
push
pop
inc
fucom
cmp
or
pop
lret
push
fisttpll
and
mov
mov
sbb
test
sub
je
dec
outsb
mov
jge
jge
or
out
and
sbb
push
pushw
add
into
mov
and
inc
ds
mov
push
push
popa
aaa
lock
push
pushf
test
and
int3
xor
std
inc
inc
adcb
cld
movsb
xchg
popa
ja
into
adc
adc
movsb
sub
cmp
test
cmp
insb
aaa
aaa
outsl
mov
and
mov
cmp
push
int
addl
jae
pop
adc
and
out
or
mov
mov
lcall
decl
ficoms
cmp
and
loop
mov
and
xor
jl
mov
cwtl
xor
jns
pop
imul
fsubrl
cs
pop
cmpsl
xchg
imul
push
xor
push
sahf
mov
jo
mov
ret
jl
test
push
add
sub
imul
ljmp
adc
mov
les
fistl
push
push
test
xor
cmp
xchg
xchg
push
test
ja
xchg
or
mov
sub
jl
scas
leave
fstl
push
enter
and
dec
jmp
cmpsb
add
mov
cmp
jns
sbb
adc
fisttps
imul
xor
push
xchg
mov
xlat
mov
pop
ds
loop
xor
xchg
cmpsl
xchg
gs
leave
sahf
cmp
arpl
fimull
mov
sub
std
fisubrl
xorb
add
jno
js
bnd
or
or
and
icebp
push
add
insl
sub
jne
push
add
repnz
pop
ds
ficoml
iret
out
inc
es
icebp
leave
in
out
stos
sbb
jl
daa
notb
lcall
sub
jl
pusha
stos
pop
jne
cmp
bnd
adc
inc
cltd
cmp
sbb
ret
sub
int3
icebp
dec
mov
push
inc
negl
js
addr16
loopne
mov
or
lret
mov
inc
shlb
fldcw
imull
xchg
mov
scas
loope
push
mov
loop
lds
dec
orb
into
xor
stos
inc
inc
inc
pop
jne
add
jmp
mov
mov
jnp
push
iret
dec
dec
push
pop
mov
sub
pop
inc
lods
loop
cmp
fidivrs
jg
and
rcl
popa
push
mov
lds
cmp
repz
mov
sub
repz
mov
popf
test
xchg
add
sub
push
sub
ret
mov
imul
andl
insl
jno
jp
inc
into
and
mov
xlat
push
ret
cmp
in
add
pop
jecxz
or
inc
jo
in
stos
mov
jbe
push
push
shl
jl
add
fsubl
sbb
xchg
sahf
cli
fwait
adc
loope
push
nop
mov
ljmp
cli
cmpsl
add
rorb
fucomp
dec
test
sub
jmp
and
xlat
or
cmc
inc
test
and
lods
outsl
insl
nop
fmull
ja
xchg
inc
lahf
sti
sbb
push
fstps
stos
ds
adc
mov
je
insb
inc
es
xor
mov
shlb
dec
push
add
add
jae
sbb
fiaddl
cmovns
sti
arpl
in
ret
dec
and
sub
adc
nop
jo
lret
pop
xchg
dec
pop
lods
psrld
mov
or
add
mov
sti
push
sti
out
jg
cmp
xor
mov
jge
add
sbb
pop
cmp
mov
iret
in
arpl
inc
lret
push
lds
orl
mov
dec
cmp
fcoms
push
icebp
stos
mov
sub
xor
adc
mov
aam
sets
jo
dec
ret
sbbl
xchg
dec
push
or
cmp
xchg
mov
int3
push
or
add
subb
sbb
mov
shl
arpl
dec
je
push
push
or
xor
adc
inc
adc
dec
out
jnp
mov
out
and
xchg
sbb
fwait
js,pt
mov
or
and
inc
push
mov
imul
mov
inc
cmp
push
pop
push
pop
lea
adc
push
pusha
lods
fldenv
push
testl
lcall
and
inc
cmpsl
outsl
mov
fisubrs
cmc
in
mov
test
or
inc
lret
cbtw
in
lods
inc
shll
shlb
ret
jmp
insb
je
mov
scas
int3
and
inc
or
pusha
push
cmpsb
das
in
push
pop
insl
pop
push
test
jae
mov
inc
lcall
inc
setl
ds
outsl
mov
xchg
inc
mov
insl
jecxz
ficoms
xchg
imul
movsl
lock
inc
out
daa
into
push
cmp
jbe
and
mov
xor
adc
movb
pop
mov
push
lock
jb
roll
lret
pop
shrb
xor
mov
mov
mov
cmp
lds
fwait
outsb
or
arpl
fdivrs
lret
cltd
loope
mov
ds
bound
sub
pop
fwait
stc
les
pop
cmp
in
lods
stos
mov
push
imul
es
js
lods
daa
or
les
jb
mov
mov
sub
lret
xchg
sub
icebp
cmp
and
cltd
cmc
stos
jne
and
inc
mov
ss
dec
in
pop
fs
mov
push
sub
aam
jg
dec
jns
outsl
cmp
imul
or
out
sub
shlb
cli
testl
fstl
jp
add
scas
sub
ret
jl
fcompl
push
inc
jecxz
out
popa
clc
cmp
fwait
cmp
leave
shl
and
cs
pop
xchg
sub
fldpi
insb
xor
cwtl
jae
and
push
xchg
jecxz
je
cmp
iret
cmp
sub
sti
push
and
adc
je
in
inc
cmp
subb
jle
sub
jo
mov
mov
hlt
xchg
dec
cwtl
sbb
push
insl
jmp
mov
loope
mov
shll
outsl
jle
insb
negb
imul
or
push
and
and
adc
and
cld
fs
aaa
lock
fsubs
lods
incb
aas
xchg
mov
mov
push
aaa
loop
loopne
push
cld
jbe
fadd
mov
jne
and
test
insb
popl
cmpsl
xchg
mov
jecxz
sarl
daa
mov
shll
ss
ficomps
fidivrl
mov
push
and
pop
loopne
push
or
and
push
bound
inc
pop
or
add
xor
fidivs
push
sbb
cmp
jg
test
and
or
out
adc
ret
lcall
jmp
mov
push
mov
adc
adc
lods
into
dec
lahf
inc
mov
test
adc
mov
and
pop
in
out
inc
push
cmpsb
jo
lock
cmp
mov
testl
loopne
mov
lcall
xchg
lock
fsubrl
mov
bound
cmp
jbe
scas
mov
dec
sbb
lods
gs
pop
mov
push
xchg
adc
xchg
pushf
in
test
aaa
imul
fs
xchg
les
clc
jne
and
hlt
ret
jge
sbbb
loope
xor
pop
icebp
pop
aad
test
in
outsb
mov
outsl
imul
sub
pop
push
mov
loopne
push
or
dec
pop
aaa
mov
mov
stos
scas
mov
jmp
push
jg
and
xchg
stos
repz
dec
test
outsb
mov
push
imul
outsb
jno
xchg
insl
ja
movsb
jmp
adc
add
popf
data16
aam
cmpsb
jge
and
stos
es
icebp
movq
jg
and
movsl
dec
aaa
test
inc
push
push
ja
sbb
xor
clc
loope
push
xor
mov
lods
add
rep
pop
mov
jmp
scas
cmpsb
mov
pushf
sbb
adc
and
pushl
pop
loopne
xchg
stc
outsb
mov
movb
sbb
mov
sbb
xorb
add
movsb
shlb
push
cmc
loopne
sbb
dec
in
dec
inc
dec
pushf
pop
or
pop
pop
outsb
test
andb
loope
jg
pop
addl
lods
dec
pop
fstl
lret
notl
fsubl
hlt
adc
int
and
jno
add
inc
fnstsw
lea
adc
jae
jne
push
cmp
rcl
mov
inc
and
mov
clc
popa
cs
movsl
test
jp
repnz
dec
ret
daa
xchg
inc
loop
jb
xchg
pop
cmp
sti
aam
lahf
fwait
fs
icebp
push
pop
mov
mov
mov
ds
sbb
enter
cmp
pop
scas
or
jg
inc
cmpsb
xchg
out
sub
mov
ret
jo
xor
lods
xor
cld
das
clc
and
les
mov
push
and
adc
mov
dec
push
test
add
pop
mov
lock
lret
jbe
into
aad
lret
stos
sub
xor
stos
lds
jge
mov
sbb
inc
pop
js
hlt
stos
das
data16
ds
cmp
loopne
aaa
nop
cmc
mov
cmpsl
xor
repz
pop
mov
add
enter
pminub
push
xor
pop
fisttpl
mov
pop
clc
dec
push
jo
aam
xchg
sub
sub
lds
xorl
or
outsl
inc
pusha
jle
push
add
rcr
cmpsl
fwait
cvtps2pd
mov
cmp
out
test
add
cmp
sbb
xchg
rorb
adcl
push
test
cmp
or
inc
pop
push
xor
leave
stos
movl
repz
ss
pop
or
sub
stos
jnp
ljmp
or
jg
lahf
inc
pop
sub
aaa
dec
arpl
or
or
pushf
add
out
dec
and
and
cmpsl
ljmp
pushl
testl
jnp
nop
xchg
mov
cmp
out
enter
pop
sbb
iret
cmp
aam
push
loop
setl
lss
insb
fsubrl
cmp
sbb
popf
mov
mov
inc
sub
mov
jbe
pop
or
pushf
ss
movsl
or
pop
das
daa
jecxz
sub
daa
enter
push
movsl
inc
jne
cltd
lods
mov
test
jmp
iret
sub
dec
fistpll
push
cmp
inc
dec
xchg
dec
xchg
leave
fisubrs
lds
push
nop
insb
dec
pop
ret
mov
arpl
adc
fidivl
popf
pop
sub
push
imul
aas
lds
push
lock
cmp
mov
divb
push
insl
insb
inc
fidivl
shrl
sbb
lcall
sub
mov
cmpsl
mov
mull
je
xchg
cmp
sbb
aam
data16
test
je
fisubl
sub
sahf
cmp
mov
insl
mov
int3
or
xorl
test
sbb
sub
outsb
xchg
das
std
jb
stos
pushf
rol
mov
cmp
inc
or
cmc
mov
adc
fs
pop
add
cmpsb
mov
repz
leave
fnstenv
fwait
bnd
in
les
or
subb
les
arpl
sub
ss
mov
cmp
dec
push
fcompp
stc
and
adc
inc
mov
jecxz
ljmp
cmp
sbb
push
sub
lods
and
or
xchg
rsqrtps
aad
inc
mov
inc
test
or
push
jge
add
sbb
add
jmp
negl
mov
sub
cmc
stos
pusha
stc
push
sbb
push
out
in
js
pop
dec
imul
sub
call
adc
mov
cmp
jns
lcall
mov
lods
mov
fidivrs
stc
mov
pop
sbb
push
dec
inc
das
jp
stos
lods
test
xchg
stc
sti
cli
jbe
je
mov
or
in
adc
cmp
xor
inc
push
sub
xor
leave
or
loopne
repnz
push
fadds
lahf
fs
mov
jno
mov
test
pusha
loope
imul
sub
in
dec
add
jecxz
and
or
repnz
inc
outsb
pop
movsb
lret
je
pusha
adc
out
mov
pushf
pop
jmp
sbb
push
dec
adc
inc
ds
adc
jno
mov
jbe
sbb
std
gs
movsl
mov
push
fistps
lcall
fs
xor
xchg
div
mov
shll
jg
xchg
inc
andb
test
mov
inc
outsb
inc
les
or
sub
imul
hlt
lods
lcall
fbld
cmpsb
daa
adc
cwtl
cmp
shl
mov
jecxz
pop
push
sbb
pop
pop
loopne
and
sub
int
aas
stc
pop
lea
push
ret
test
aas
xchg
js
adc
jge
and
out
int
das
xor
int3
inc
fdivs
cmp
bound
stos
xchg
mov
cmpsb
je
pop
jg
cmp
sti
inc
lea
jae
insl
mov
int
ret
pop
sbb
repz
popa
inc
bnd
push
shlb
sub
cltd
cmp
cmpb
sbb
decl
mov
test
push
lods
movsl
jno
xchg
pop
cmpl
or
movsb
dec
cmp
push
push
aad
mov
das
mov
in
sub
inc
andl
subl
inc
adc
sbb
add
jg
int
xor
sbb
jne
hlt
cmp
and
pop
enter
add
cwtl
loope
xchg
adc
sub
jge
stos
fnstenv
rclb
cmp
bound
leave
cmc
pop
cmp
cmpsb
mov
pop
fdivp
lea
lahf
or
and
out
fcomps
jae
push
or
pop
shll
call
push
mov
fstl
pop
xchg
push
cs
mov
push
pop
mov
jp
fisttps
cltd
negb
push
cld
pop
int3
mov
push
in
scas
nop
bound
xor
dec
push
pushf
lock
adc
repz
outsb
ret
mov
inc
xchg
adcl
cmp
sarl
and
in
pop
jno
push
push
clc
rcrl
mov
inc
xor
andl
out
stos
stos
lahf
dec
data16
adc
lods
cwtl
sidtl
cmpsl
out
inc
lock
fdivrs
jge
jnp
out
fucomi
sbb
cli
jge
bound
loop
movsl
addr16
pushf
mov
xchg
jno
adc
jg
xchg
sub
loop
daa
cmp
aam
jecxz
mov
push
or
jl
adcl
icebp
lds
push
xchg
mov
cwtl
lds
out
js
imul
dec
cmp
fwait
add
mov
in
or
lret
lods
stos
fiadds
push
add
mov
arpl
repnz
and
adc
out
pop
push
std
mov
dec
cmpsl
dec
pop
movsl
mov
mov
enter
stos
add
mov
xchg
ja
lret
xor
add
ds
sbb
daa
sti
mov
arpl
adc
sti
sbb
dec
or
into
dec
lea
fbstp
cltd
push
push
das
xchg
adc
jno
lcall
push
dec
inc
mov
nop
cmpsb
adc
movsb
pop
jne
sti
and
push
daa
arpl
inc
movsb
pop
mov
pop
mov
outsb
fiaddl
cmp
icebp
dec
sbb
lcall
lods
idivb
sbb
scas
test
idivl
pop
in
jmp
pop
push
pop
lock
outsb
int
cmp
setb
mov
fsubs
ja
test
stc
sbb
inc
push
rcll
mov
dec
and
andl
cmc
sahf
mov
aas
lahf
out
mov
test
sub
pop
daa
loope
stos
scas
fwait
ret
shll
sub
add
jmp
scas
adc
int3
or
dec
mov
xchg
cbtw
in
icebp
nop
sti
inc
iret
pop
push
mov
std
xchg
push
pusha
repz
mov
cmp
or
push
cmp
les
mov
das
push
test
stos
enter
and
cmp
mov
jle
adc
rorb
outsl
test
repz
adc
fsubs
cmpsb
pop
push
jnp
jno
xlat
cli
cmp
jmp
repnz
cmp
cmpsb
mov
in
dec
push
jl
jne
iret
loopne
int3
mov
cmp
dec
mov
pop
add
std
adc
loop
sub
movsl
cmc
int
pop
sub
jp
sub
push
cs
das
mov
pop
movsb
lock
jmp
mov
movsb
mov
subl
push
xorb
enter
or
inc
movsb
cwtl
mov
std
sbb
pop
mov
rcll
dec
imul
cmp
idiv
or
out
pop
popa
in
jecxz
pop
outsb
in
popa
leave
lds
test
mov
adcl
sub
dec
das
cmp
es
mov
popa
xor
jmp
xor
stos
jecxz
add
inc
sbb
dec
jmp
jnp
pop
or
push
cmp
jno
daa
xlat
fwait
mov
push
mov
pop
or
stos
mov
lds
sbb
scas
jmp
mov
inc
rclb
sbb
add
cmp
jo
xchg
jno
test
cli
sbb
shlb
cltd
nop
repz
mov
fadds
add
push
sub
sub
stc
pop
mov
and
sti
xchg
and
dec
lds
outsl
jecxz
adc
in
mov
lods
das
xchg
andb
aad
fcomip
mov
pop
sbb
test
fcoml
iret
inc
jbe
jmp
mov
flds
xchg
sub
inc
and
clc
xlat
sub
lods
mov
pushf
jge
lds
rcl
pop
pop
mov
inc
fucomi
push
jl
dec
roll
sar
pushf
iret
clc
xchg
dec
inc
and
add
xchg
inc
cwtl
dec
and
sahf
mov
mov
fildll
adc
or
pop
dec
jle
mov
inc
cmp
adc
es
adc
popf
inc
and
jnp
rcrl
cmpl
testl
adc
lahf
je
fbld
fwait
jl
les
inc
mov
imul
mov
aaa
je
call
push
lock
outsb
mov
ss
cmpsl
add
dec
xchg
add
das
cmpsb
mov
in
lock
jg
inc
xor
daa
inc
fistpl
nop
mov
xchg
mov
mov
idivl
or
dec
sbb
mov
sub
dec
lret
xor
dec
aam
cmp
push
popa
push
imul
sbb
shll
iret
adc
enter
mov
aaa
mov
xlat
arpl
jno
lods
cmp
stos
jmp
pop
cmp
sahf
out
mov
cmp
adc
adc
push
push
in
fnstcw
imull
das
outsl
ljmp
test
aad
adc
das
or
xchg
jae
jae
inc
leave
loope
or
cli
fsubrl
movsl
sbb
mov
cmpl
sub
mov
subl
and
and
inc
cli
ds
mov
dec
les
outsb
clc
negl
xor
jne
sbb
mov
push
repz
aaa
push
in
daa
into
push
daa
push
and
sahf
negl
out
nop
pop
andl
xlat
aad
mov
outsb
inc
xchg
xchg
sbb
ds
aaa
or
inc
pop
sbbl
dec
mov
lea
ret
cltd
sti
out
cli
push
in
pushf
add
add
enter
mov
in
repz
test
outsb
pop
mov
sti
mov
inc
inc
iret
shrb
add
scas
and
cmp
sbb
imul
into
fwait
mov
xchg
dec
inc
mov
sbb
repz
sbb
jb
ja
movsb
mov
or
repnz
mov
jge
imul
sbb
or
cwtl
ja
lret
punpckhwd
call
jne
jmp
repnz
cwtl
movsb
andb
add
stos
jbe
xor
mov
loope
in
stc
xor
mov
mov
scas
push
gs
and
and
mov
lods
leave
out
push
int3
mov
sbb
fistpl
daa
mov
inc
fcoms
push
pop
aam
ret
incb
push
push
sbb
je
xchg
push
cmp
dec
lods
inc
and
and
repz
jbe
fiadds
ja
daa
or
imul
sbb
scas
jne
dec
add
cmp
mov
mov
sarb
inc
ret
add
mov
fcom
push
cwtl
outsl
iret
sub
fsubrl
mov
pop
mov
call
cli
xor
stos
cmpsl
cmp
mov
xchg
in
push
arpl
imul
push
jmp
add
shrl
sub
mov
or
mov
imul
negb
popf
pop
pop
fs
cmpsl
test
xchg
lcall
aad
clc
jg
sub
jg
movsb
inc
and
lea
lock
xchg
inc
icebp
movsl
je
jl
pop
rcll
or
insb
and
lds
cmp
stos
lods
push
push
add
push
mov
in
pop
mov
dec
stos
pop
scas
pop
jle
sub
push
inc
xchg
into
outsb
sarb
addl
xchg
sti
repnz
push
ljmp
loope
jb
xlat
push
inc
mull
or
cmp
or
xor
mov
dec
pop
mov
sub
mov
sarl
sub
aam
or
out
xchg
stos
out
inc
cmp
push
push
jbe
push
or
pop
mov
push
or
mov
test
mov
pop
mov
mov
bound
cltd
dec
sub
mov
mov
xor
push
sub
push
mov
pop
lret
lods
pop
mov
shll
inc
mov
mov
xchg
cli
jns
insl
push
push
pusha
xor
shrb
sbb
push
test
in
xchg
xchg
add
adc
dec
sub
mov
mov
jle
pop
test
adc
push
iret
shll
in
pop
add
shlb
es
xchg
jecxz
xchg
addr16
dec
sbb
test
aas
jp
cs
fwait
subb
rcl
outsl
push
sti
hlt
xchg
add
xor
push
mov
add
mov
stos
scas
fadd
or
int3
adcb
movsl
add
xchg
pop
std
inc
iret
icebp
fwait
mull
jbe
imul
jno
fnstenv
movsb
sbbb
std
lcall
out
add
xchg
add
adc
call
dec
inc
mov
pop
mov
xchg
orb
popf
push
push
lret
decb
ret
xchg
into
rorl
mov
xor
push
adc
mov
fbstp
out
push
lret
mov
mov
ss
outsb
stos
adc
scas
xor
stos
mov
in
inc
in
sub
sub
inc
xor
jp
cltd
loopne
mov
jns
out
or
cmp
movsb
adc
scas
addr16
push
imul
jle
out
push
and
xor
jp
adc
ret
mov
jae
mov
ficompl
mov
mov
clc
push
mov
inc
imul
pop
les
or
mov
outsb
adc
xchg
leave
pop
in
mov
mov
testb
outsl
xchg
shll
outsb
dec
stos
push
mov
jbe
inc
push
enter
adc
and
dec
mov
or
jl
lock
insb
movsb
aas
push
sbb
leave
stos
or
jge
push
sbb
lea
dec
in
lret
cmpsb
ret
push
xor
jne
ss
testb
xor
add
sti
or
mov
mov
xchg
push
sbb
mov
imul
orb
cmpsb
loope
pop
sub
mov
test
orl
mov
fnstsw
mov
ret
cli
dec
xor
jle
mov
xchg
out
lret
cmc
sub
lea
xchg
repnz
imul
lret
mov
or
add
xor
aam
pop
enter
into
sbb
pushf
mov
stos
stos
sar
push
jo
fsts
cld
jnp
lds
imul
imulb
pop
cmp
mov
scas
ds
lret
enter
aad
pushf
mov
je
cmp
push
insl
push
sub
jb
mov
pushf
jp
inc
ret
lds
push
ss
mov
jle
push
lret
out
xchg
gs
pop
adc
lds
inc
mov
mov
stos
mov
iret
adcl
push
data16
dec
xchg
stc
or
xor
pop
pop
hlt
push
xor
repz
xor
fidivrl
iret
add
faddl
loopne
push
cmp
jns
popa
out
or
movsb
enter
jp
and
sub
or
rcr
push
movsb
test
mov
mov
xchg
sbb
xchg
loopne
sub
push
xchg
pop
arpl
inc
sbb
jbe
mov
mov
add
add
cli
mov
pop
mov
inc
add
jno
out
add
sbb
and
push
sbb
sub
jno
cmpl
or
push
lcall
std
mov
jno
ficompl
jo
and
aaa
movsb
jecxz
out
sti
shlb
jmp
jae
psubb
outsb
mov
pusha
stos
outsb
iret
mov
adc
push
vmread
sbb
dec
dec
pop
mov
lret
push
cmpsb
pop
frstor
push
mov
jle
es
mov
cs
add
mov
nop
orl
daa
in
pop
cmp
sbb
pop
jp
lret
lcall
aad
jb
or
in
cmc
fcmovb
gs
jle
cmp
dec
mov
mov
int3
es
test
pop
push
mov
inc
dec
outsb
rclb
and
inc
bound
pop
jl
jl
and
iret
fdivrl
push
fisttpl
js
adc
and
stc
out
xlat
lret
push
jnp
add
cld
sti
cmpsb
add
lods
mov
or
leave
leave
xorw
inc
daa
adc
scas
gs
mov
repz
je
cmpsl
cmpl
loope
sbb
jle
adc
push
add
sub
and
stos
dec
mov
imul
cltd
lock
in
or
pop
not
add
popf
in
dec
arpl
jno
and
test
pop
sbb
aas
out
int
mov
rorl
movb
repnz
sbb
push
movsl
xchg
mov
jno
add
or
and
sbb
xchg
mov
and
int
mull
add
ljmp
push
movsb
jne
cmp
scas
test
inc
sbb
mov
pop
les
dec
or
xlat
xor
lcall
fimuls
mov
int
push
das
sub
idivl
or
jp
das
vpaddw
stos
jbe
into
dec
inc
sahf
leave
jp
cli
inc
jecxz
mov
adc
ret
dec
xor
rcrb
sub
jb
loop
push
inc
gs
lcall
and
or
inc
add
adc
dec
jmp
mov
and
mov
lcall
mul
imul
sbb
int
lods
ss
stos
rclb
push
mov
push
mov
prefetch
lock
ljmp
out
inc
inc
push
sbb
repz
sub
cwtl
sub
cld
mov
movsb
mov
dec
insl
jb
cmpsl
cmc
inc
jg
popa
into
testb
ret
fwait
mov
aam
push
add
xlat
in
jmp
push
leave
jge
cmp
pop
adc
test
jae
cmp
daa
and
cmpsl
mov
mov
ss
popf
sarl
sti
pushf
dec
jne
mov
dec
faddl
je
and
cltd
pop
test
push
testl
out
filds
xorl
test
add
cmpsl
lcall
out
pop
mov
iret
mov
not
and
out
push
xchg
jge
icebp
add
push
add
fstpl
or
mov
xchg
xchg
dec
stos
div
mov
cltd
ljmp
imul
jne
mov
in
xor
inc
jmp
pop
inc
cltd
mov
xor
movsl
fildll
xchg
mov
bound
jns
xor
lcall
mov
mov
cld
movsb
fimull
xchg
inc
stc
rorb
mov
mov
enter
adc
pop
push
in
sbb
jne
fdivl
adc
adc
jle
inc
mov
std
mov
cmpsl
xchg
dec
cmp
enter
push
fnstcw
loop
cmpsl
xor
into
push
jns
insl
adc
loop
cmp
or
popa
xchg
bound
add
xchg
and
test
sbb
sbb
hlt
xchg
jo
mov
dec
and
stos
xor
inc
dec
push
imul
jb
test
roll
sbb
jbe
cmp
mov
pushf
daa
sub
xchg
cmp
cld
pop
mov
out
and
enter
dec
scas
jo
xchg
lds
xchg
icebp
cmpsb
aas
pop
or
jle
scas
pop
and
out
mov
rcrl
xchg
lahf
fsub
sub
inc
lcall
lods
jle
xor
mov
subb
rorl
jmp
out
outsl
cmpb
sub
xchg
cmp
xor
stos
imul
stc
mov
pop
stos
popa
inc
je
in
mov
sbb
fdivrs
or
pop
arpl
aad
out
fcoms
xor
sbb
sub
push
pop
popa
je
push
add
or
push
lret
pop
push
add
inc
idivb
out
jle
mull
dec
ret
cmp
dec
jg
shr
sbb
add
sbb
and
je
loop
adc
repnz
xor
xchg
cmp
ret
adc
sub
dec
dec
xchg
or
pop
pop
nop
lret
cmp
mov
mov
or
sbb
sub
imul
addr16
pop
mov
pop
dec
mulb
jle
imul
shlb
dec
movsb
jmp
pop
fnstcw
inc
fcomi
and
add
stc
cmp
into
xlat
xchg
jecxz
fdivl
dec
jne
pusha
xor
jecxz
add
int
iret
fdivl
lcall
mov
inc
jl
pushf
lret
cmp
fists
test
hlt
add
movb
xor
xor
mov
sti
in
orb
loop
aam
into
imul
pushf
repz
movsb
xor
adc
jne
iret
clc
aad
mov
pusha
and
test
imul
sti
jb
dec
mov
jg
jnp
test
icebp
mov
sub
clc
mov
dec
push
adc
adc
call
or
dec
and
aad
or
scas
cmp
jle
sub
jmp
in
mov
xchg
jb
dec
mov
or
push
sti
sahf
or
push
add
lods
rorl
adc
ret
in
sub
xchg
add
xchg
bound
xchg
mov
jmp
mov
dec
sbb
popa
pop
dec
mov
pop
loop
jp
out
adc
inc
loope
aam
add
jecxz
in
scas
in
inc
sti
mov
fistps
push
loopne
lea
je
xchg
adcl
jne
adc
daa
xlat
pop
or
adc
lret
clc
leave
aas
fsubrl
mov
das
movsb
push
inc
pop
pop
shl
cs
rorb
jle
fcoms
cwtl
dec
adc
mov
int
push
xchg
cmp
dec
add
pop
cli
sbbl
pop
cmp
jbe
cwtl
push
fst
das
mov
add
pop
jb
sahf
out
sbb
loop
lret
ss
imul
jno
int3
popf
outsb
add
and
into
shrb
cmp
inc
lcall
mov
je
adc
pop
jmp
enter
sub
in
dec
inc
mov
addr16
xchg
sub
test
push
outsb
les
cmp
sahf
lods
add
test
and
cmpb
in
adc
sub
cvttps2pi
sub
add
das
cli
js
adcl
xor
out
mov
leave
enter
adc
data16
test
outsb
jae
ss
je
push
int
cmp
mov
mov
inc
mov
insb
mov
fbstp
aas
sub
and
outsl
cs
dec
cli
test
clc
jne
pop
mov
subb
pop
pop
mov
mov
fists
repz
xor
mov
pop
dec
pushf
rcl
cmpsl
adc
and
popf
std
out
loop
and
stos
push
sbb
rcrl
cmpsb
or
jnp
in
pop
je
sbb
scas
or
mov
rcpps
sti
dec
dec
and
lock
sbb
jnp
fdivl
mov
shrl
test
lods
into
mov
cmp
jb
push
cli
and
ret
jb
jb
adc
xchg
sub
mov
lods
mov
call
adc
xor
test
sub
or
dec
stos
jns
xchg
xlat
xor
cmp
into
push
fistps
xor
mov
adc
ficompl
mov
jmp
lret
xchg
sub
adc
adc
pop
insl
daa
jno
jbe
xorb
repz
pop
arpl
add
aas
stos
xor
fdivrl
in
adc
stos
dec
mov
xchg
jb
addr16
push
or
add
in
stc
push
mov
insb
jp
fs
jbe
push
imull
dec
mov
addr16
push
in
push
push
add
lret
xchg
pop
inc
outsb
mov
dec
leave
fucomi
xchg
cmp
mov
push
xor
es
mov
stc
jg
movswl
imulb
movsb
push
aam
jp
lods
aas
inc
fninit
add
cltd
sbb
lahf
xchg
and
and
out
add
mov
mov
lds
sbb
adcb
sub
in
movsl
popl
jp
push
enter
fnstenv
lods
movsb
pop
in
adc
xchg
hlt
ja
enter
pop
aas
jecxz
pusha
inc
or
ss
mov
inc
les
jno
mov
cld
lods
jbe
cli
or
insl
dec
pop
stos
xchg
repz
cmc
inc
and
sub
test
xlat
xor
add
cmovno
and
lahf
add
push
xchg
inc
loope
mov
aad
int3
movsl
mov
cld
into
lds
push
ror
mov
cld
mov
stc
inc
leave
orl
jnp
jno
imul
ficoms
xor
jecxz
add
lods
jb
faddl
jae
mov
lcall
cwtl
xchg
jl
push
push
and
out
nop
xchg
sbb
subb
les
mov
adc
outsl
icebp
xor
repz
dec
or
aad
inc
mov
xchg
int3
sbb
cli
push
xor
add
int
jns
push
sub
adc
pop
call
jge
and
shlb
cli
movsb
in
notl
sti
sbb
inc
pop
scas
xor
jg
lcall
inc
jle
repz
mov
mov
in
sub
mov
test
insb
rolb
mov
dec
xor
fimull
call
mov
fnstenv
scas
sarl
or
in
mov
aas
insl
aaa
rorl
jns
add
nop
pop
int3
lods
push
mov
or
pop
sub
cmp
dec
xchg
icebp
cmp
negl
mov
pop
inc
outsl
jp
jno
popa
jno
repz
xchg
push
enter
xor
mov
shll
add
xor
mov
lcall
push
data16
mov
dec
xor
xlat
jmp
dec
repz
pop
and
pop
mov
sbb
insl
repnz
ja
push
xor
cmp
aaa
mov
mov
jge
idiv
xor
push
aam
push
fcoms
cmpsl
flds
inc
rcrl
movsb
xor
movsb
adcl
sub
dec
data16
add
test
iret
cs
in
sarl
data16
sub
push
dec
ret
push
cmpl
daa
mov
adc
cmpsl
jmp
xchg
orl
cmp
xchg
adc
mov
xchg
movsb
inc
lret
push
jno
into
sub
dec
add
mov
test
push
out
in
sub
push
inc
repz
xchg
scas
and
inc
or
jp
sahf
adc
loopne
enter
mov
in
dec
mov
pop
ljmp
xor
nop
mov
sbb
repnz
cmp
repz
jle
xor
pop
pop
loop
adc
mov
inc
test
pmovmskb
lea
enter
pop
adc
fisttps
stos
mov
add
push
cmp
adc
fs
sbb
adc
jmp
and
mov
mov
xlat
add
dec
mov
mov
inc
shrl
gs
cmc
loopne
shl
repz
mov
push
push
xchg
imul
xchg
icebp
shlb
das
cmp
inc
rep
mov
adcb
add
imul
out
or
aaa
dec
js
sbb
xchg
jno
inc
insl
mov
std
xchg
dec
int
xchg
sub
out
push
scas
inc
xchg
pop
adcb
inc
test
gs
or
sub
rorl
cmp
jnp
adc
loop
sbb
mull
mov
sub
mov
and
shlb
sbb
les
lret
repz
loope
pop
inc
rcll
adc
movhps
stos
jb
push
leave
mov
inc
sub
lret
mov
pop
cmp
cmpsl
fadds
sub
fwait
int
or
hlt
jne
test
jmp
adc
fldl
inc
xorl
cmp
shll
and
inc
fsubrs
mov
mov
stos
xor
notb
push
cmpsl
and
cli
push
mov
pusha
xor
repz
fstl
xchg
push
mov
jp
jb
mov
xchg
clc
xor
lods
stc
cld
xor
add
xorb
xchg
rcr
inc
inc
vcvtsd2si
xchg
repnz
mov
sahf
sbb
adc
fistps
pop
insl
inc
cmp
xchg
mov
popa
mov
xchg
imul
les
adc
push
pop
movsl
xchg
sub
pop
enter
sahf
mov
cmc
push
push
pop
mov
jb
push
je
mov
aas
int3
sbb
popa
push
or
xchg
iret
jb
sub
push
jne
xchg
dec
fisttpl
movsb
scas
je
jae
mov
rclb
sahf
sbb
movl
enter
add
shlb
pushf
orl
push
fdivrl
pop
cmp
mov
dec
push
adc
scas
xchg
pop
stos
push
adc
xchg
shrb
dec
mov
dec
pop
push
push
leave
dec
cs
jmp
jecxz
insl
insb
add
lods
faddl
xchg
pop
dec
dec
jle
loope
imul
std
sbb
fiaddl
and
daa
loop
sbb
mov
fdivs
fnstcw
and
enter
enter
xor
lods
fldl
ja
dec
jmp
jge
sbb
sub
xor
xchg
decl
std
movsb
dec
lds
fdivrl
fists
out
nop
out
nop
nop
inc
in
jmp
loopne
inc
stos
pop
mov
xor
sbb
lret
hlt
cmp
fisttpll
ret
cmc
pop
push
fcompl
xor
out
pop
dec
adc
sub
test
mov
push
out
popa
shll
dec
adc
popf
add
cmp
dec
aam
dec
in
mov
pop
add
sahf
pop
call
sbb
inc
and
mov
adc
pop
dec
sub
pop
jle
scas
jae
sub
aaa
loopne
cltd
cwtl
lds
popa
daa
mov
jo
outsb
inc
fs
mov
in
cmp
inc
adc
scas
and
sbb
pop
mov
mov
call
arpl
lods
in
enter
leave
sbb
xlat
imul
mov
imul
xor
push
rorl
enter
out
cli
sbb
fistpll
lcall
fidivrs
fcmovbe
adc
in
jle
sub
mov
or
or
xchg
scas
sti
mov
xchg
add
repnz
out
das
lret
ds
sub
mov
outsb
push
or
data16
pop
sbb
mov
inc
fsubrs
cwtl
dec
neg
cmpl
sbb
pop
andb
sbb
push
pop
jno
mov
icebp
mov
or
stc
push
jmp
jp
mov
jg
mov
cld
push
mov
inc
outsl
push
mov
jae
sbb
testb
stos
add
repnz
outsl
stc
jo
cmp
pop
cmp
pop
icebp
movsl
mov
add
stos
test
stos
stc
enter
lcall
sbb
push
mov
push
mov
inc
xchg
jecxz
xchg
clc
mov
or
cs
xchg
sub
shr
adc
sbb
dec
pop
push
and
arpl
into
ljmp
cltd
pusha
lods
in
dec
mov
or
sub
mov
sti
test
xor
xchg
inc
andb
mov
es
lods
mov
xchg
and
and
cmp
mov
xor
roll
aad
aam
xchg
jmp
test
sbb
pop
hlt
mov
popa
dec
sahf
mov
adc
mov
and
adc
xchg
imul
mov
xchg
xchg
inc
addb
xor
xor
ja
ss
cli
cmp
loope
sti
incb
xchg
and
imul
push
mov
sbb
sti
hlt
testb
sbb
or
lock
fisubrs
pop
repz
fstpl
mov
cmp
sub
aaa
inc
gs
mov
test
cltd
adc
xchg
imul
mov
mov
or
sub
sub
stos
jmp
int3
bnd
test
test
rcrl
fs
divl
cmpsb
pop
out
aad
shrb
xor
push
imul
aaa
jle
mov
lods
xor
sub
xor
mov
fmuls
ficomps
icebp
loope
fldl
mov
and
lods
xchg
cmp
std
aas
lret
mov
push
inc
adc
in
sub
testl
xchg
pop
mov
cmpsb
lret
dec
shr
daa
shrl
std
cmpsl
je
adc
cmc
call
pop
insl
mov
test
push
mov
add
enter
mov
or
sbb
popa
inc
push
adc
push
icebp
push
dec
out
xchg
push
rolb
add
cmp
mov
and
ss
jmp
jns
or
xor
lods
lock
ss
pop
xadd
cld
add
lds
cld
add
inc
jmp
popf
aaa
hlt
rolb
int3
out
xchg
sbb
mov
insb
push
inc
xchg
add
in
jg
sbb
outsl
push
les
loopne
push
sub
dec
lahf
int
add
push
mov
movsb
jecxz
pop
push
gs
lock
hlt
mov
pusha
leave
rcrb
iret
ljmp
add
mov
imul
pushf
mov
aaa
mov
add
sbb
aad
dec
ficoml
or
or
fsts
testb
and
jmp
or
add
ja
out
rcr
icebp
xor
stc
in
or
repz
test
mov
jae
daa
xor
cmp
repnz
mov
jne
xor
cmp
jbe
inc
xchg
cwtl
sub
sti
and
incb
mov
test
cmc
and
mov
stc
scas
push
pop
mov
scas
push
mov
adc
cmp
ffree
icebp
cmp
clc
call
mov
ljmp
divb
das
and
push
aas
add
mov
sbbb
cli
mov
cmpsl
popa
or
imul
inc
pop
rorb
cmp
outsl
pop
push
add
cmpsl
mov
aad
fwait
add
pop
int3
call
dec
clc
mov
push
xor
repnz
cmp
xor
negb
sub
mov
and
rol
imul
fdivs
pop
push
add
lock
adc
out
loop
inc
stc
jmp
test
mov
gs
pop
dec
mov
mov
pop
sbb
fmuls
dec
jb
adc
mov
clc
lret
in
mov
xchg
imul
lea
sar
jecxz
adc
mov
test
lea
lret
xor
scas
pop
cmpsl
dec
jnp
xchg
xor
in
mov
jno
pop
push
leave
ret
ret
sub
js
mov
dec
loop
adc
jns
xor
movsb
jo
rcrl
mov
xor
aam
sub
jmp
sub
xlat
push
add
push
dec
pop
sti
pop
cmp
inc
and
rcll
test
cmpsb
sbb
or
cmp
mov
sahf
mov
dec
mov
out
mov
xchg
call
dec
mul
sub
addl
pop
push
aaa
mov
push
ljmp
sub
push
test
mov
fisttps
mov
iret
mov
jne
xor
inc
cmp
enter
fstps
dec
lods
ret
mov
aad
sbb
add
ret
pop
pop
lds
pop
arpl
stc
xchg
testb
stos
xchg
xchg
xor
xchg
cmp
cwtl
mov
aam
aas
iret
outsb
dec
icebp
jae
mov
xor
int
fwait
add
in
or
jg
jae
adc
stos
cmp
pop
lods
cmpsb
adc
cmp
ja
cmp
jnp
stos
xchg
pop
pop
push
inc
call
push
lea
inc
and
mov
stos
cmp
notb
push
mov
jmp
pop
out
sbb
mov
sub
mov
push
and
pop
cmp
imul
xchg
sub
addr16
cmpb
and
in
sub
pop
fmull
in
insl
dec
mov
mov
mov
add
cmp
and
sub
sbb
mov
push
pop
leave
xchg
in
test
test
or
mov
in
fisubrl
adc
addl
ds
lahf
clc
cmp
jmp
daa
jl
subb
mov
pop
lock
test
out
setge
outsl
decb
jbe
cmpsl
mov
call
lret
stos
sbb
xor
popa
dec
xor
mov
fwait
add
mov
out
push
push
idiv
xlat
push
sbb
dec
sub
ss
mov
insb
into
hlt
jno
shlb
inc
scas
out
dec
sub
xchg
sbb
mov
and
test
pop
frstpm(287
push
pop
lds
and
sub
loopne
sbb
inc
mov
inc
dec
mov
cmp
std
repz
add
mov
in
mov
mov
not
enter
into
add
xchg
int3
fsubrl
out
inc
mov
jl
adc
ret
aam
mov
push
rcrl
call
dec
sbb
test
dec
clc
faddl
or
stos
fnstenv
ds
out
xchg
xchg
add
sbb
sti
pop
inc
dec
xchg
fwait
sbb
pop
mov
pusha
adc
fildl
mov
addr16
bound
cmpb
cmc
or
pop
and
or
xchg
mov
add
pusha
cli
je
lret
test
and
and
mov
dec
add
lcall
insl
rcrl
xor
sbb
mov
hlt
inc
cltd
js
sub
cltd
jo
ret
cs
fmul
pop
sub
stos
int
repz
and
insb
inc
fcompl
sub
cmp
int
aad
jb
xor
stc
pop
pop
xchg
in
inc
lcall
into
xchg
jae
rol
sbb
jl
dec
cs
test
shl
pop
jp
jge
mov
mov
push
xchg
cmpsl
inc
je
push
xchg
into
popl
inc
fsubrl
outsl
inc
test
fiaddl
dec
mov
jg
iret
and
dec
insl
cmc
loopne
stos
movsl
ret
xor
jmp
rcrb
or
aam
xchg
mov
xor
mov
f2xm1
idivl
push
cmc
stos
cltd
pop
xchg
loop
mov
sar
inc
inc
in
ret
sbb
xor
or
lods
add
data16
fists
clc
jl
dec
inc
or
dec
xor
xchg
rcrb
adc
in
cmc
inc
push
or
pusha
xor
push
pop
or
xor
adc
mov
xor
aad
or
aaa
cmc
aad
pop
addr16
icebp
sub
call
and
pop
inc
std
lcall
lds
cmp
lahf
mov
jbe
repz
push
pop
xor
mov
add
xor
add
mov
repz
xchg
push
lods
jecxz
push
out
xlat
fisubrl
sbb
mov
jp,pt
fdivs
xchg
ret
sahf
clc
mov
cltd
jo
lahf
outsl
sub
insl
xchg
or
mov
gs
lret
repz
rol
jecxz
mov
push
sbb
les
pushf
inc
mov
dec
setl
mov
dec
xchg
jnp
ljmp
scas
pop
lahf
repz
lret
mov
fsubrs
or
xchg
xchg
cmp
in
clc
adc
or
cmp
or
xor
push
jne
sbb
fldt
cmpsb
stc
xchg
jb
push
and
and
add
pop
lahf
into
nop
cmp
in
adc
scas
adc
jl
cmpb
jg
cs
mov
mov
gs
js
mov
pushf
sbb
sbb
mov
mov
js
fistpl
xchg
into
dec
xchg
lcall
insb
or
jb
fisubrs
dec
jmp
add
mov
pushf
add
fdivrs
popa
test
sub
xchg
cmpsb
cmpxchg
jns
aad
cmpsl
cmp
inc
cmp
in
adc
jmp
cmpsb
jle
mov
cld
out
fnsave
mov
inc
cmp
aad
dec
push
pop
repz
jecxz
lock
daa
jo
inc
jne
sub
sub
stc
out
mov
xorb
inc
std
and
mov
das
cmp
pop
add
ficoml
test
lret
or
or
es
fistps
insb
orl
mov
push
or
shll
fucomp
mov
rcr
and
movl
add
push
cmp
mov
mov
push
sub
loop
xor
aad
repz
mov
jns
and
loope
test
mov
hlt
inc
push
mov
shlb
fwait
xor
aaa
icebp
xchg
cmp
and
and
bound
cmp
lret
dec
pop
xchg
add
clc
gs
insl
xlat
in
aam
popf
add
jb
movsb
aas
xor
sub
sbb
inc
push
rol
repz
adc
sar
repz
lock
roll
mov
test
je
cld
in
jae
inc
mov
push
ds
xchg
dec
ja
sub
mov
out
cmp
stc
xor
jp
push
js
rorb
loope
dec
out
jae
pushf
in
mov
xchg
sbb
mov
outsl
cmp
push
xor
call
push
sbb
xchg
xchg
mov
add
insb
popf
imul
cmpb
lret
sarl
jo
fldz
je
pop
test
test
jg
lods
fadds
inc
shll
aam
lret
jecxz
dec
or
adc
in
cltd
xor
inc
pop
push
sti
pop
test
pop
pushf
dec
inc
pop
out
fwait
in
push
popa
adc
loop
int
cmc
lds
sar
pop
js
jle
insl
mov
pop
inc
les
jb
fstpl
lock
loopne
jo
or
leave
leave
pop
pop
cmp
fdivs
xchg
cmp
ret
cmp
inc
rcll
ret
xchg
mov
cmpsb
mulb
xor
negb
ss
movsb
fnstenv
jbe
lods
pop
outsb
scas
push
cld
inc
xor
ret
sub
jl
push
ficomps
es
xchg
add
cmp
arpl
pop
xchg
push
xchg
and
lea
mov
sbb
popf
mov
fsubrs
shll
cmp
adc
out
mov
xor
push
mov
scas
and
lahf
cmp
add
inc
loopne
sbb
icebp
push
outsb
shll
mov
push
in
stc
rorl
sbbb
push
stos
outsl
sub
hlt
inc
jp
sub
cmpsb
shr
mov
pop
repz
test
pop
add
add
or
popl
push
and
fistl
sub
mov
pop
pop
pop
jae
mov
sahf
fisubs
rcll
and
push
sbb
and
fs
push
xor
xor
push
add
pop
inc
pop
cmp
cmp
loopne
test
pushf
adc
xchg
jle
jecxz
decb
push
stos
mov
lcall
popf
leave
dec
jno
movsl
fxtract
xor
pusha
xchg
sub
je
add
cwtl
mov
popa
adc
mov
out
mov
es
scas
push
xchg
push
push
ljmp
jno
cmp
repz
sar
out
leave
insb
aad
int3
add
cmpsb
push
cmp
sub
mov
mov
push
loopne
aaa
loop
and
xor
jne
loopne
jp
les
add
mov
jecxz
dec
sar
les
sbb
repz
out
pusha
cmc
movsb
mov
push
in
adc
dec
mov
sti
ljmp
loope
test
push
lods
into
iret
rorb
mov
mov
in
mov
in
push
xor
movsb
movsl
jp
addl
cmc
pop
mov
sbb
xchg
negl
pop
xlat
aas
pop
stc
test
add
sbb
es
dec
addr16
insl
adc
fxch
sub
mov
and
pop
inc
aam
sub
hlt
es
sti
fistps
mov
and
inc
es
filds
fstpt
mov
sar
push
xchg
or
cmpsl
jne
or
mov
es
rolb
jne
lods
and
mov
fdiv
out
pop
or
mov
repz
mov
adc
std
dec
pushf
xchg
and
ss
lea
out
outsb
fcmovb
clc
cwtl
push
mov
ljmp
cltd
ror
or
cld
sub
fwait
rolb
push
iret
movsl
lds
je
outsl
in
sbb
xor
dec
test
xchg
stc
mov
pop
imulb
pop
arpl
rorl
inc
js
pop
or
insl
aam
xchg
je
push
repz
xor
xor
movsb
add
popa
xor
cli
cld
aam
cmp
or
cmp
ret
imul
fs
sub
mov
add
jae
mov
mov
out
lea
icebp
cmpsb
jecxz
movsb
arpl
fwait
mov
fwait
pop
cmp
jmp
sub
sub
movsl
cmp
adc
dec
stos
sub
icebp
insb
ss
fsts
xchg
fimuls
sahf
call
outsl
jl
in
scas
cmp
dec
pop
xchg
jns
xor
xor
push
inc
xchg
aad
repnz
mov
jmp
jnp
inc
loopne
xchg
test
orb
lahf
test
pop
dec
movsb
sbb
sub
cli
inc
cmp
mov
adc
jl
dec
cmp
lods
pop
xlat
imul
cmp
xchg
cmpsb
and
xchg
cmp
arpl
dec
dec
and
mov
dec
insb
scas
jb
inc
inc
pop
movsl
add
mov
mov
sbb
or
pop
jl
sbb
addr16
sub
sub
nop
mov
mov
popf
adc
and
inc
sub
inc
lret
pop
fidivrs
mov
cmp
push
push
addl
mov
test
stc
movsl
pop
leave
pusha
add
xchg
ret
in
in
ljmp
xor
mov
fistpl
push
mov
jmp
aad
not
stos
les
xchg
xchg
adc
mov
gs
sub
push
movd
repnz
mov
lods
shl
mov
xchg
sbbl
nop
lock
leave
hlt
sarl
lock
rcrl
sbb
insl
movsl
icebp
insl
dec
je
je
fwait
push
dec
sar
push
imul
or
fildll
inc
xchg
sub
cmp
adc
pop
or
xchg
lock
sahf
pextrw
adc
lcall
loopne
xchg
pusha
jg
jecxz
ret
out
fstpt
adc
and
pusha
sub
int3
scas
fxch
cli
aaa
lret
adc
push
jns
push
sti
sub
test
sub
das
out
cmc
xchg
mov
fisubrl
lea
mov
pop
test
ror
xchg
cmp
mov
test
out
sarb
xor
lcall
ja
dec
leave
insl
pop
xchg
xor
and
loop
in
xor
aad
adc
lcall
cmp
movsb
cmp
mov
add
popf
cmp
icebp
test
mov
xchg
cltd
sbb
jg
cmpsb
stos
jbe
int3
dec
and
insl
scas
leave
mov
push
mov
cld
push
nopl
mov
add
add
cld
dec
mov
repz
sub
aaa
pop
fistps
iret
leave
mov
add
cmp
pop
pop
dec
lcall
ja
cld
les
testl
cltd
outsb
fcmovu
dec
dec
loopne
sbb
in
adc
pusha
fidivs
test
cmp
ja
xchg
add
lock
bound
push
pop
aas
popa
mov
loopne
jg
js
dec
inc
mov
repz
xchg
jnp
outsl
call
sub
push
sub
mov
out
xor
jg
mov
in
pop
aad
es
xchg
ja
mov
in
mov
pushf
testl
fdiv
dec
adc
sub
sbbl
mov
mov
jp,pn
notl
sti
mov
mov
lock
mov
pop
jbe
mov
pop
sub
mov
shrl
pusha
mov
sub
dec
cmpl
aas
xor
push
aas
pop
outsb
loopne
mov
sahf
and
mov
push
daa
nop
or
push
hlt
ror
std
js
mov
xor
cmpl
ds
fiadds
jecxz
dec
jge
adc
iret
repz
into
lds
repnz
es
mov
gs
sbb
cmp
popa
jge
xchg
mov
jmp
push
or
arpl
xor
int
pop
add
jl
push
mov
enter
push
push
or
test
sahf
mov
dec
pop
push
negb
dec
movsb
outsb
inc
xchg
call
cmc
notb
in
dec
inc
add
or
rcrb
sbbl
xchg
leave
loopne
bound
out
push
je
jl
mov
jnp
push
adc
shl
pop
aad
fs
div
pop
popa
mov
lods
cli
lods
outsb
jmp
and
pop
test
insb
shll
dec
movzwl
test
imul
xor
idivl
dec
mov
fcoml
mov
dec
fadds
mov
test
adc
push
stos
jl
adc
mov
push
hlt
popa
sbb
fs
jmp
add
int
pop
jne
in
outsl
add
ds
push
pusha
out
adc
cmpsl
adc
cmpsl
adc
notl
in
pop
mov
cltd
sbb
fwait
mov
add
xchg
mov
sub
pushf
sub
imul
mov
xchg
dec
dec
xor
xchg
sub
lcall
int
xor
lcall
xchg
jns
aam
bnd
xor
into
sbb
sarl
mov
clc
sti
push
int3
xor
test
fistl
popa
ret
jge
dec
fnsave
ljmp
movsl
lods
in
pop
aas
xor
fidivrs
or
push
or
inc
inc
mov
pop
test
fdivs
leave
das
cwtl
dec
sub
add
in
sbb
push
dec
iret
je
xor
imul
push
imul
inc
das
push
cwtl
xor
cmp
lods
pop
lods
lods
mov
mov
adc
inc
je
pop
sbbb
stc
inc
xor
push
dec
nop
into
mov
mov
pop
mov
ljmp
fs
cmp
or
popa
inc
mov
outsl
outsb
popa
cmp
sbb
adc
loop
adc
cmp
les
mov
les
xchg
sbb
repnz
popa
mov
push
dec
aad
dec
push
xchg
or
and
pop
fisttps
push
mov
push
test
cmp
pushf
test
dec
jl
sbb
cmp
mov
fcompl
rcr
inc
mov
mov
cmp
and
cmp
push
jp
clc
mov
fdiv
mov
cmpsb
pop
jmp
cmp
mov
subl
add
imul
std
xlat
jge
add
pop
dec
pushf
fwait
add
in
mov
lds
inc
and
or
mov
push
cli
xchg
add
sub
fisubrl
mov
add
fimull
ret
out
cmc
mov
adc
pop
movsl
xlat
push
fwait
icebp
inc
sbb
ret
sbb
jae
inc
and
sub
orb
pop
movsl
fsubrl
out
sbbl
xchg
insb
std
sahf
loop
fisubrs
popa
hlt
fwait
adc
movsb
mov
loopne
test
mov
jno
ljmp
pop
nop
push
xchg
mov
xlat
jge
test
push
jg
daa
test
bound
imul
cli
ja
mov
sub
cwtl
jmp
and
lods
out
jns
sub
loop
popa
sub
or
out
nop
and
add
inc
push
jge
aad
jnp
push
mov
pop
add
fs
push
je
adc
mov
mov
xlat
test
jns
lahf
adc
ss
dec
in
aam
fsubl
mov
xor
dec
push
mov
movsb
cmpsl
int3
jp
mov
sbb
push
or
xor
rclb
imul
movsl
sub
sub
push
mov
push
mov
fidivs
cmc
jl
adc
ds
mov
cmc
fstps
xchg
fistps
fiadds
jg
rclb
mov
jae
mov
mov
add
cmp
cmp
ljmp
ss
add
loopne
push
mov
in
mov
lods
shll
jl
fdivr
mov
into
cmp
sar
add
push
popa
cmp
or
psrld
fs
xor
arpl
xchg
xchg
cmc
or
or
cmp
bound
cmp
sub
pop
out
popa
xor
sub
ljmp
dec
lds
pop
cwtl
mov
mov
inc
mov
fildll
jbe
push
out
cs
xchg
arpl
scas
test
mov
or
pop
add
sbb
pop
int3
fcmovnbe
and
adc
mov
cmp
in
xchg
lea
inc
sub
cmp
mov
xchg
add
int3
push
daa
lret
sbb
jle
push
cmpsl
cmp
lds
sbb
mov
mov
aad
inc
stos
in
sub
mov
shlb
ret
out
add
mov
rorl
or
push
and
push
test
outsl
daa
push
inc
movsb
inc
aas
popa
mov
add
adc
cmp
loopne
ljmp
lea
lea
aam
pop
repnz
jle
pop
sub
push
add
add
sub
adc
in
xchg
inc
cltd
cmpsl
vmwrite
sbb
pop
inc
cmp
cmpsb
sub
movsl
and
mov
in
shlb
jmp
mov
stc
out
loope
pop
fisttpll
out
inc
pushf
cmc
lock
or
cs
cmp
and
lahf
and
stos
mov
jge
and
aaa
clc
test
xchg
mov
fstps
jecxz
daa
insl
push
into
dec
xor
sub
push
jp
fwait
imul
lahf
cwtl
dec
lea
cs
out
jno
mov
cmp
jnp
lock
xchg
mov
sub
hlt
push
adc
inc
xor
int
dec
pop
xor
mov
lahf
jecxz
dec
sub
push
rcl
add
dec
push
or
lahf
mov
dec
iret
loopne
pop
pop
and
mov
pop
cli
rcrl
cltd
test
jbe
mov
cmp
sub
addl
jae
mov
pop
dec
jbe
gs
jl
jae
je
mov
pop
add
push
pushf
jmp
jne
or
cmpsl
inc
sti
dec
jb
sub
fildll
sbb
cltd
js
pop
clc
jbe
into
fimuls
hlt
fadd
jp
fisubrl
xchg
scas
inc
insb
dec
shl
sub
cwtl
fiaddl
adc
lods
sbb
push
std
or
call
xor
jge
outsb
adc
and
lret
pop
xchg
loop
pop
icebp
sub
xchg
and
dec
push
mov
out
or
sub
sbb
jmp
cs
iret
adc
or
outsb
fstpl
arpl
cmp
mov
test
or
cmp
outsb
push
and
sbb
cmp
js
int3
test
jg
and
mov
shrl
pop
jmp
ja
fildl
push
and
dec
sub
sub
addb
xchg
and
or
fldcw
dec
xor
lcall
jno
fidivl
jae
jo
cli
push
dec
xor
ljmp
and
movsb
push
mov
xchg
repz
mov
fwait
jb
pop
add
repnz
add
add
test
gs
xchg
testb
imul
xlat
push
popf
sub
cmpsl
push
xchg
test
sub
cmp
adc
cmc
mov
xor
sbb
lret
push
loopne
and
or
cmpsb
testl
mov
mov
int3
in
jo
jle
xor
aaa
and
sbb
ljmp
js
fnstenv
dec
rorb
lods
bound
into
int3
lcall
enter
jno
push
scas
cs
scas
dec
mov
psubsw
jg
sub
xchg
adc
inc
push
iret
fldcw
fucomip
pop
and
insl
mov
and
iret
rclb
cmpsl
xchg
aas
adc
imul
xchg
fidivl
pop
xchg
xor
lods
in
ret
xor
sbb
int
mov
test
ret
mov
sbb
sahf
in
loop
leave
loop
adc
movsl
add
stc
xchg
arpl
outsl
push
ret
adc
fildll
in
and
mov
repz
push
scas
mov
push
mov
dec
jb
push
insl
lea
arpl
shrb
std
sti
jbe
mov
orl
stos
xchg
arpl
movsl
dec
mov
add
push
fildl
enter
arpl
ljmp
push
int
lods
and
test
cmp
clc
ds
mov
xor
ret
pop
mov
loope
gs
loope
jl
inc
mov
cmp
icebp
movsb
lock
jae
cmp
cld
push
xchg
mov
mov
decl
pop
push
add
ss
sub
hlt
push
aaa
xchg
es
mov
divl
out
dec
je
push
stc
push
test
outsl
mov
jbe
lea
addr16
jne
lds
loopne
fcmovne
aas
cwtl
scas
data16
test
add
sub
mov
sub
push
cli
pop
sbb
dec
lahf
das
pop
xchg
add
movsl
fs
cmp
cmpl
lds
in
pop
xor
push
ret
mov
stc
dec
in
lcall
sbb
jmp
push
pop
lret
das
push
pop
lock
add
aaa
pop
repz
xor
notl
stos
adc
ret
cld
aas
aaa
cld
mov
scas
sahf
mov
sti
lods
fistps
push
push
sub
push
xor
loop
add
mov
and
push
scas
sbb
fimuls
rcrl
sbb
rcr
inc
xor
std
rclb
or
arpl
sub
mov
push
inc
jle
mov
inc
loopne
nop
fistl
fwait
jns
in
add
lds
aam
inc
shrb
add
adc
mov
ja
in
add
gs
push
mov
movsb
in
loop
jmp
or
pop
popa
movsl
cmp
or
stos
into
sbb
insl
int
mov
dec
scas
dec
push
jecxz
insb
jp
lahf
push
jne
bound
fstl
pop
outsb
daa
fldl2t
and
daa
mov
jne
fwait
aas
std
sbb
inc
pushf
jl
ja
dec
pop
addr16
gs
cld
ret
test
inc
fwait
or
add
dec
mov
dec
inc
xor
add
jns
int
dec
divb
xchg
scas
pop
ret
in
and
iret
mov
or
cmp
lock
mov
push
into
inc
outsb
mov
cs
aaa
das
add
or
sbb
add
stc
jmp
mov
enter
pop
dec
lods
xor
roll
shlb
adc
xor
jecxz
mov
adc
sarl
pop
pop
ret
mov
xor
push
inc
ret
dec
jno
lock
das
loope
andl
outsb
dec
dec
sbb
loopne
push
data16
xchg
pop
sbb
jmp
dec
or
loopne
dec
inc
add
cmpsb
lods
daa
jecxz
in
add
ret
aaa
add
xor
lea
in
sbbb
stos
lret
mov
lret
pop
or
or
push
and
pop
inc
pop
les
xor
add
daa
dec
daa
push
sbb
shll
sbb
mov
xchg
popa
xchg
dec
arpl
je
sub
mov
roll
sub
dec
stos
rcrb
or
pop
addr16
or
pop
ss
enter
xchg
mov
jne
and
cmp
xchg
outsb
and
push
mov
push
in
or
cld
or
push
xchg
xor
sub
rcrb
test
push
jecxz
cmpsl
pop
popa
dec
es
ret
mov
pusha
xchg
add
jmp
push
add
sub
cmp
pop
adc
sub
xor
dec
push
divps
inc
testb
mov
push
test
push
es
inc
xchg
filds
mov
push
icebp
call
sbb
sbb
sbb
mov
shll
xor
jl
pop
and
jg
xchg
cmp
and
notl
or
mov
fisubrl
rorb
lcall
mov
jne
addr16
adc
push
int3
pop
fwait
xor
in
xor
lods
push
xor
sub
addl
sbb
mov
ficompl
push
sub
and
enter
mov
or
xchg
push
xchg
cli
ret
push
pop
push
xchg
arpl
shlb
sbb
and
sub
pusha
adc
in
jnp
inc
push
popa
cmp
aaa
and
pminub
popl
dec
fidivl
sub
mov
iret
nop
push
insb
push
sbb
mov
dec
sahf
mov
mov
stos
mov
sti
sub
jne
test
cld
arpl
cmp
or
insb
js
sub
adc
mov
int3
fst
xchg
push
and
pop
je
xchg
push
ja
jbe
xor
mov
dec
std
sbb
xchg
or
xchg
jns
lods
mov
pop
pop
loopne
mov
fsubrp
imul
scas
sbb
and
xor
mov
dec
in
sbb
jns
fcmovb
fdivr
cmp
fildll
mov
adc
aad
leave
fdivrs
daa
popa
mov
enter
enter
adcl
mov
mov
xor
xor
lods
js
jg
cmc
aad
or
inc
imul
mov
fdivrl
pop
pusha
dec
cmpb
ja
xor
inc
inc
int
lock
iret
sub
out
sahf
fistl
in
in
int
push
jmp
movsb
repnz
mov
xlat
push
or
les
adc
jl
clc
and
aam
pop
rclb
rclb
addr16
cmpsb
jno
mov
iret
jae
dec
push
dec
repz
ljmp
dec
imul
xchg
adc
rcl
daa
cmc
fisubs
add
insl
mov
sub
leave
std
sub
js
push
push
test
and
cwtl
mov
xor
cmpsb
pop
dec
push
rorl
mov
hlt
cmp
push
pop
push
xchg
movsb
ret
scas
in
push
xor
gs
insb
adc
jge
daa
sbb
xor
pop
jmp
or
or
mov
ret
inc
lahf
loope
filds
sbb
ja
std
loopne
sbb
or
cli
pop
push
cmp
mov
push
aad
push
testb
mov
pop
in
xchg
pop
jp
xchg
mov
xchg
push
jns
leave
inc
rcrb
jbe
pop
in
inc
push
sbb
imul
and
mov
jp
push
shlb
movsl
out
js
bound
bound
out
shr
mov
sub
inc
test
push
push
pop
mov
mov
adc
xor
lock
repnz
js
and
mov
lahf
pop
jno
add
imul
fiadds
or
jle
ja
fnsave
ss
sub
pop
add
sbb
out
daa
pop
inc
jns
dec
jae
or
jmp
jne
sbb
push
add
jecxz
lahf
mov
sub
jmp
push
jb
mov
and
cmp
add
or
pop
mov
stc
popf
daa
jne
std
cwtl
mov
inc
xor
mov
lret
pop
mov
out
jp
ret
ss
sbb
sti
imul
inc
cmp
jae
mov
scas
scas
jmp
dec
out
repnz
mov
jne
add
int
pop
adc
out
nop
ss
add
out
add
bound
pop
hlt
insl
push
adc
dec
sub
inc
push
xchg
divl
imul
ret
xor
lahf
fucomp
xor
mov
insl
stos
mov
xchg
imul
pop
and
scas
loope
andb
jge
sbb
xchg
xor
les
lcall
ficompl
pop
mov
out
test
cmpsl
xchg
add
xchg
xchg
xor
mov
data16
fwait
inc
popa
std
jns
xchg
scas
xchg
or
inc
lock
lds
jecxz
enter
sbb
pop
icebp
and
shrl
fwait
mov
xchg
test
adc
and
aas
fdivrp
pop
je
lods
test
adc
push
in
leave
out
xchg
stos
mov
dec
cmp
mov
jecxz
ss
cmc
lahf
rorb
mov
rclb
jle
jl
adc
mov
sub
outsl
filds
into
push
xor
sbbl
cmc
lret
mov
insl
into
and
add
cmp
xchg
xor
imul
rcl
and
mov
xor
shlb
outsl
fsubs
je
aaa
pusha
jle
mov
jecxz
loopne
call
mov
xchg
mov
xor
mov
insb
cs
xchg
pusha
cmp
aaa
out
insb
hlt
movsl
mov
push
mov
sub
mov
adc
push
lret
mov
adc
imul
fisttps
jl
mov
mov
sbb
arpl
jg
pusha
xchg
cli
roll
aam
jbe
mov
push
loope
lahf
cmp
ja
sub
std
push
cmpsl
bound
xor
jmp
cli
enter
mov
stos
mov
aam
add
lods
push
xor
aas
arpl
into
out
pop
jb
jb
and
rorl
in
flds
jle
lahf
fwait
add
xchg
sub
aaa
jnp
and
sub
dec
loop
xor
out
xchg
mov
enter
sub
arpl
lret
mov
gs
por
outsl
push
rorl
dec
cmp
pop
aas
les
scas
lods
pop
sub
and
inc
andb
test
cmp
pop
jne
cli
jl
mov
mov
cmp
lret
cmp
out
cmp
xchg
dec
mov
cwtl
ficompl
lahf
push
push
iret
test
cmp
dec
lahf
xor
subl
fsubp
popf
rclb
xchg
je
jecxz
dec
icebp
repz
mov
pop
inc
push
mov
push
and
dec
mov
xor
push
push
in
enter
xchg
insb
lock
gs
in
aam
ja
mov
rclb
sahf
in
push
adc
das
xchg
xor
aam
jp
gs
sbbb
pop
into
pop
subl
loop
and
test
lcall
and
mov
outsl
add
loop
jnp
daa
push
enter
cmpsb
test
jl
testl
dec
xchg
mov
push
fisubl
mov
adc
out
pop
std
pop
test
jbe
test
sbb
adc
mov
cmp
push
dec
mov
or
lcall
cltd
out
test
shl
add
arpl
mov
pop
das
lods
jge
ficoms
push
out
sub
inc
sbb
imul
dec
lods
pop
mov
add
xchg
insl
sub
sub
ret
jmp
lods
add
mov
dec
rcrl
mov
ljmp
adc
pop
es
xchg
pop
stos
pop
cmp
shlb
adc
setg
fldenv
mov
inc
aad
mov
cwtl
aad
outsl
lahf
insb
pop
in
push
sbb
sbb
or
test
mov
inc
mov
mov
imul
push
out
inc
call
add
pop
shll
inc
sub
add
stos
dec
jns
mov
xchg
mov
bound
push
jno
cmc
pop
pop
xchg
mov
imul
dec
dec
jb
les
arpl
mov
ja
push
pop
popf
cmp
cli
jno
sub
out
fwait
cmp
sbbb
dec
out
and
and
pop
dec
mov
addr16
jno
xor
push
xchg
inc
inc
inc
mov
cmp
lret
andl
add
xchg
dec
sbb
call
push
iret
sbb
mov
xchg
jmp
push
push
inc
das
mov
cld
pop
loop
mov
lea
push
leave
sbb
pop
jo
lcall
scas
inc
loope
xchg
je
xor
ljmp
cmp
add
ss
pop
and
ja
push
ret
push
das
xchg
repnz
insl
je
fstp
adc
pop
out
fcmovnbe
jle
adc
and
inc
sub
repnz
or
xor
push
fbstp
pusha
mov
jne
adc
fs
stos
mov
push
int3
popf
sub
inc
fisubs
movsb
add
adc
push
jp
js
scas
scas
pop
inc
les
addl
and
jo
adcl
in
pop
sub
cwtl
or
xchg
inc
ds
das
ss
cmp
and
mov
enter
fsubs
mov
gs
int
cwtl
test
mov
iret
es
add
add
cmc
push
and
push
je
or
out
inc
mov
mov
xor
cmp
outsl
adc
push
je
inc
or
outsb
call
cmp
pusha
mov
mov
mov
dec
sbb
xor
mov
in
add
dec
ja
sub
xor
jb
xchg
and
inc
push
or
mov
push
test
leave
inc
jmp
adc
inc
inc
jae
fstpl
pop
mov
mov
or
add
aaa
mov
fwait
add
pushf
or
inc
dec
push
repz
fnstenv
lea
mov
mov
cmp
punpckhbw
subl
sbb
sub
into
movsl
rcrb
sub
mov
xchg
hlt
sub
loop
jle
push
jecxz
xlat
idivb
mov
dec
clc
adc
cmc
xchg
xchg
inc
inc
push
sub
dec
push
mov
and
jo
push
sbb
jns
adc
pop
pop
lock
addb
push
lock
add
call
add
enter
cltd
add
out
fsubp
in
popa
clc
mov
push
pop
mov
and
pop
popf
aas
cmp
cmpsb
mov
rcrb
gs
ja
sub
jg
mov
push
shlb
inc
cmp
cmpsl
mov
out
xchg
mov
lock
loope
sub
mov
pop
bound
xchg
inc
adc
aad
cmp
dec
and
out
cmp
jo
sahf
cmp
xchg
and
add
sahf
push
inc
test
imul
push
sub
cli
adc
push
pop
jae
mov
mov
cwtl
insb
pop
aaa
and
mov
jp
ja
or
xor
in
out
xchg
insb
mov
push
and
in
ds
pop
fmull
test
xchg
xchg
test
scas
mov
pop
cmp
je
mov
dec
and
pop
aam
cs
or
pop
jo
push
into
pushf
lods
js
cmp
bound
sub
and
push
daa
adc
sarl
rorb
mov
push
lret
idivb
lods
mov
iret
xor
add
sahf
movsl
cmp
pop
ja,pt
fnstcw
addr16
cmpsl
xchg
inc
cmp
test
gs
jne
mov
mov
sarb
push
cmp
mov
fmuls
inc
xor
sbb
push
pushl
inc
flds
outsl
cmp
jae
xchg
mov
mov
lods
and
mov
mov
xor
jo
es
lcall
das
mov
xor
insb
daa
hlt
cmpsb
in
insl
stos
adc
popa
clc
mov
pop
push
test
cmp
hlt
xor
pop
xchg
dec
ja
or
enter
push
iret
adc
ret
jb
or
lahf
xchg
cmp
into
insb
movsb
pop
dec
hlt
and
mov
mov
out
mov
dec
shll
stc
jle
push
jae
call
inc
sub
cmp
fstpl
test
int
icebp
sarb
push
arpl
and
push
rcll
jb
jns
xchg
jmp
adc
xchg
scas
cmpsb
add
sub
jecxz
inc
add
sbb
addr16
add
inc
pandn
dec
es
push
out
sti
mov
pop
scas
adcb
push
sub
adc
outsl
dec
divl
in
sbbl
pusha
jnp
ret
addb
mov
test
add
shr
repz
dec
sbb
shrl
adc
les
dec
jae
adcl
mov
in
dec
leave
push
inc
jb
loop
ret
sahf
mov
movsl
jmp
nop
jg
add
adc
lahf
adc
lahf
cmp
adc
in
mov
mov
rorl
jnp
addr16
out
xor
cmp
je
jae
iret
sbb
mov
test
pop
fiadds
xchg
fs
push
ljmp
cmc
mov
sarb
xchg
popa
cmova
cmp
test
add
sub
jnp
je
inc
sub
fstl
out
sbb
test
or
ss
sub
xor
sbb
sbb
cmc
fistps
jge
in
pop
adc
mov
dec
jbe
fmull
xchg
push
shll
jp
mov
mov
push
ja
push
and
push
insl
xchg
push
sub
jge
icebp
and
or
scas
sub
lods
sar
add
cmp
dec
jb
xor
pop
add
bound
jnp
cs
sub
add
shlb
out
daa
loope
es
fsubl
into
pop
ret
or
ret
icebp
ffreep
xor
cmp
aam
mov
sbbl
mov
jmp
repz
xor
stos
adc
xchg
add
sbb
ret
sub
push
xchg
pop
mov
bound
insl
fwait
xor
inc
mov
adc
invd
popf
outsl
test
int
bound
sbb
or
adc
bound
sub
movsb
xlat
test
scas
pop
cli
std
push
pushf
fildl
sub
adc
les
lock
or
push
pop
stos
adc
aaa
mov
jmp
add
xchg
mov
jp
enter
clc
jo
sbb
push
jns
or
and
je
push
mov
mov
gs
test
clc
xor
pop
ljmp
rcl
inc
push
pop
lea
arpl
mov
mov
sbb
addl
sub
xchg
mov
xchg
xor
shl
je
movsl
enter
cmp
pop
mov
cli
dec
dec
shrl
rclb
or
das
push
or
mov
fisubs
xchg
ds
adc
and
pop
jbe
dec
xchg
dec
mov
lret
loop
fiaddl
cmp
cltd
pop
add
dec
repnz
es
mov
out
adcb
movsl
jge
ret
lahf
outsl
mov
mov
adc
pop
pop
inc
fiadds
js
lret
add
repnz
or
adc
cmp
cli
lahf
adcl
cltd
rcl
mov
mov
mov
shr
push
inc
mov
dec
mov
or
ffree
mov
xor
jg
cmp
mov
jno
fisttps
inc
add
mov
in
fmul
bound
push
dec
insb
or
pop
mov
pop
fldenv
lods
mulb
or
cs
pop
lea
add
dec
stc
push
pop
xchg
mov
xor
mov
push
sbb
and
push
pop
push
cmp
ds
push
dec
and
dec
dec
insb
test
add
ficoml
mulb
pop
add
lock
pop
ficomps
pop
lret
mov
jae
stc
fiadds
lock
lcall
push
int3
test
out
cmp
xchg
pop
je
std
xchg
push
aam
in
mov
sbbl
or
dec
scas
cli
dec
xor
mov
push
loop
data16
js
inc
xor
or
int
cmc
xchg
mov
push
jge
mov
and
xchg
fadds
pop
xchg
lods
mov
lret
sub
add
xor
xor
mov
and
sbb
jmp
ret
mov
pop
inc
and
adc
fs
jns
loop
test
out
mov
fwait
stos
cmp
mov
push
movsb
lods
daa
add
push
sub
and
jmp
and
dec
mov
add
and
fs
out
stos
xor
add
sti
aad
push
hlt
adc
mov
mov
xor
in
int3
imul
xchg
sbb
mov
pop
clc
xor
jb
sarl
dec
mov
stos
mov
inc
jecxz
fdivr
jno
test
in
sbb
in
fwait
jno
lea
lea
ljmp
mov
clc
lcall
or
sub
scas
aaa
ret
jmp
and
je
jbe
in
jl
bound
stos
sti
or
sbb
and
ret
lea
popf
cmp
or
inc
xchg
jbe
fistl
sub
and
outsb
neg
inc
mov
test
mov
shll
repz
xchg
and
fistl
pop
ds
testb
cmp
and
xorl
pop
loop
repz
and
fs
je
lods
adc
and
mov
add
adc
test
pop
loop
je
dec
ljmp
enter
pusha
or
and
jnp
dec
dec
inc
stos
stos
inc
sbb
add
pop
fbstp
jne
outsb
mov
test
ss
fldcw
push
cwtl
loope
xchg
lret
or
pop
pop
xor
sub
adcb
lods
xchg
xchg
mov
jnp
movsl
pop
jb
jmp
or
sub
out
push
mov
inc
cmpsl
and
push
daa
jo
in
pusha
icebp
inc
stc
mov
sahf
and
notb
mov
lret
cltd
aam
xor
mov
lahf
pop
test
es
pop
aaa
cmp
es
cli
cs
iret
or
insw
sahf
daa
push
push
sbb
hlt
lcall
jp
stc
pop
js
sarb
xchg
ret
inc
lret
pop
iret
punpckldq
cmc
inc
mov
sbb
test
testb
adc
push
inc
jno
xchg
xlat
xorb
inc
xchg
push
jecxz
call
push
cmp
push
les
or
mov
icebp
xchg
out
popf
mov
prefetcht0
jmp
xchg
mov
out
and
adc
add
rcrb
jns
mov
inc
mov
push
lahf
int3
xor
mov
dec
test
stos
shl
jo
je
mov
pop
ret
ljmp
aaa
xchg
fcoml
ja
mov
xchg
mov
jl
test
add
add
mov
insl
pop
xlat
or
cmp
cmp
push
gs
xorb
jo
jo
rcl
insb
mov
xlat
dec
cmp
inc
cmp
pushf
out
jb
fadd
add
sub
fldt
lock
sbb
jmp
imulb
and
push
clc
hlt
mov
mov
das
lret
push
and
jmp
xchg
mov
les
outsl
enter
xchg
rol
cli
pop
sbb
hlt
aaa
pop
add
loop
mov
gs
mov
es
mov
shl
test
rcr
add
push
dec
mov
jnp
mov
and
scas
cld
xchg
push
imul
js
sti
stos
mov
lret
pop
cmp
mov
adc
ffreep
stos
mov
mov
push
mov
imul
adc
add
aad
ficoml
add
out
add
lret
inc
xlat
sti
fdivr
rolb
xchg
mov
or
subps
ret
in
aas
xchg
sbb
and
inc
fbld
pop
pushf
cmp
pop
les
dec
push
test
icebp
jge
bound
or
shl
out
push
sbb
mov
sbb
sarl
lcall
cltd
xor
mov
and
ret
dec
mov
cmp
pop
out
pop
dec
xchg
sbb
pop
mov
ss
sarl
adc
mov
mov
inc
popf
fldcw
das
fwait
bound
call
adc
int3
sbbl
cmc
aad
xchg
insb
popa
jg
cwtl
mov
adc
xor
push
pop
gs
clc
enter
dec
xchg
mov
cli
xchg
adc
push
mov
movsl
lea
idivb
into
add
xor
adc
inc
pop
aam
cmpsb
sub
into
and
add
mov
dec
jo
xchg
add
mov
inc
mov
rol
push
sbb
sbb
lret
repnz
scas
dec
icebp
mov
popa
mull
add
mov
pop
orl
cmc
or
in
jle
vmovq
or
fs
xor
sbb
roll
pop
add
test
jno
gs
in
mov
xchg
stos
mov
fistps
mov
hlt
xor
adc
mov
hlt
rcr
mov
ss
push
shrl
sub
das
mov
lahf
in
inc
fnstsw
fstps
ljmp
js
and
pop
xor
scas
les
mov
pop
push
cmp
in
mov
sti
sbb
outsl
je
movsb
int
shll
adc
fcmove
pusha
push
push
ljmp
add
jmp
mov
iret
gs
inc
mov
add
leave
dec
xchg
and
jns
mov
pop
ficomps
mov
arpl
and
xor
scas
fsubrl
cmc
xchg
mov
out
ret
es
pop
popa
adc
dec
and
sub
out
xor
or
add
mov
add
pop
xchg
pop
mov
sub
out
cld
fsubl
or
jae
jne
shl
ret
jmp
pushf
int3
add
pushf
icebp
ficoms
out
inc
jo
fadds
ja
dec
xor
jmp
mov
sub
hlt
test
fwait
out
int3
xchg
mov
mov
dec
adc
cmpsb
fstps
mov
sub
ret
ret
jge
imul
sub
loopne
mov
mov
sub
daa
sub
or
out
sub
mov
cmpl
sub
mov
lds
imul
jge
lods
mov
pop
sti
xor
imul
and
shl
dec
movsb
dec
mov
xlat
jecxz
movsb
movsl
clc
mov
jnp
and
cmp
xor
jecxz
push
subb
add
push
test
dec
out
mov
xlat
mov
stc
fdiv
adc
pusha
sub
cmpsl
dec
in
enter
cld
cmp
jp
cmpsl
pop
adc
dec
maxps
dec
mov
mov
sub
jecxz
cld
adc
sbb
aaa
push
mov
scas
mov
test
test
arpl
inc
cmp
xor
lods
mov
fmul
xchg
push
and
xchg
add
lcall
xor
jbe
fisubl
out
cmp
lds
jo
dec
pop
fidivl
lahf
cmp
xor
call
sub
jne
dec
jno
push
jmp
fadds
filds
cwtl
hlt
pop
jb
adc
stos
aam
cmpl
pop
repz
out
lea
mov
test
loop
xchg
lret
bound
add
jne
sub
sub
push
dec
insl
cli
incl
cld
add
xchg
ret
inc
fs
xchg
popa
push
cld
push
cmpsb
cmpsl
aam
adc
cli
fsubl
in
dec
cmp
xor
inc
adc
pop
add
es
cmp
xlat
and
xchg
repnz
mov
pop
pop
lods
je
ficomps
cld
cmp
fcmovu
and
push
xorb
xor
repz
int
jg
xchg
pop
pop
xchg
mov
adc
pop
add
movl
bnd
leave
nop
shll
out
int
repnz
adc
cmp
cmpsb
mov
mov
mov
in
pop
sbb
jnp
mov
aas
mov
and
or
and
cwtl
into
jnp
ja
imul
fstpl
add
dec
mov
push
loope
jecxz
pop
bound
mov
xchg
pop
sar
add
ret
push
mov
sbb
sbb
dec
jo
mov
stos
cwtl
arpl
leave
dec
idivb
outsl
jl
push
adc
fnstenv
dec
jb
stos
test
jmp
xor
insl
mov
arpl
pop
mov
jp
xchg
dec
jl
dec
dec
test
mov
call
jnp
cmp
popa
pop
push
push
in
in
enter
das
push
xchg
cwtl
pop
outsb
pop
out
cmp
jae
or
jae
xchg
push
idivb
dec
pop
call
inc
mov
mov
adc
movsb
fucomi
fstpt
loopne
and
sbb
test
inc
fmuls
xchg
shrl
mov
clc
leave
xlat
int3
dec
cmp
fisubrl
pop
sahf
inc
js
mov
lret
jg
enter
js
xor
push
jno
in
test
ja
movsl
xchg
cmpsb
ss
sub
jo
repz
int
outsl
loop
xor
jae
out
repz
cmp
push
popa
fwait
jle
xor
push
enter
jl
dec
out
je
push
xchg
sub
xchg
cmp
pop
pop
push
fcompl
mov
pop
pusha
outsl
mov
mov
sahf
cmp
cld
jb
jb
rorb
repz
imul
mov
insl
xor
sbb
and
jbe
dec
divb
cwtl
mov
pop
xor
sub
test
je
fidivrl
mov
pop
fwait
push
and
xchg
repz
or
xchg
push
dec
push
cld
mov
xchg
shll
mov
sbb
into
pop
xchg
cmp
mov
mov
pop
out
xor
push
push
cmp
adc
push
adc
add
adc
or
aas
inc
mov
cmp
sbb
shrb
dec
dec
sub
clc
aas
les
frstor
rolb
arpl
xlat
lods
mov
sbb
in
pop
xchg
std
sub
fidivrs
movsb
xchg
out
gs
mov
mov
or
xor
dec
or
sub
xchg
mov
into
push
inc
xchg
sahf
aas
push
dec
fbstp
xchg
dec
or
movsl
lea
fdivs
imull
fwait
xor
out
mulps
mov
test
repz
les
fcos
push
pushf
or
fbstp
fsubs
loop
xor
sar
sub
jecxz
and
shl
jae
mov
ret
pop
sub
aas
add
fwait
cs
into
xchg
fsubr
jmp
sahf
and
jecxz
orl
xchg
mov
loope
and
sub
dec
pop
xchg
lret
sbb
and
sbb
adc
mov
inc
mov
lods
and
cmp
inc
pusha
inc
in
xchg
xorl
mov
inc
loope
pop
xchg
es
xchg
sbb
jecxz
mov
or
pop
jne
mov
mov
fcmovnbe
push
cmp
jne
or
sub
mov
xchg
jns
popa
inc
cld
jge
and
pop
adc
jne
mov
add
inc
pop
xchg
pop
jnp
sub
dec
lret
in
mov
cmc
das
lret
shl
sub
and
out
lea
dec
xchg
es
mov
jl
notb
mov
sahf
call
lret
sbb
popf
cmpsb
cmc
inc
mov
movsl
mov
fwait
daa
pop
int3
sub
insl
mov
mov
push
or
push
jecxz
adc
out
adc
push
stos
inc
xchg
mov
imul
mov
arpl
fisubrl
mov
sti
jmp
dec
shr
out
int3
inc
lcall
or
scas
addr16
pop
pop
mov
mov
mov
dec
sbb
sub
movsl
ret
lcall
mov
subb
lds
pushl
ret
les
pop
mov
repz
clc
ja
ds
daa
mov
lods
or
aam
stos
or
and
repz
ror
mov
xchg
repnz
pop
and
arpl
and
std
ds
je
adc
xor
lahf
add
and
or
mov
sbb
adc
or
push
bound
repz
xor
fcom
dec
lahf
mov
xchg
sub
sub
xchg
imul
rcrb
stc
mov
es
cmc
aas
test
xor
pop
push
sti
fnstsw
dec
push
cltd
push
loop
jl
or
xchg
xor
inc
or
aam
pop
mov
jmp
es
ljmp
movsb
push
mov
lcall
cli
sbb
in
int3
inc
xchg
movsl
scas
xorl
adc
mov
icebp
mov
jecxz
add
pop
lock
idiv
lock
imul
insb
cmpsb
loopne
outsb
xor
fs
pop
f2xm1
sub
fs
std
mov
out
lods
mov
pop
or
xor
imul
addr16
cmpsb
adc
sbb
frstor
into
dec
subb
and
sbb
idivl
mov
dec
and
sbb
jno
outsb
jecxz
mov
jns
stos
arpl
pop
jge
loope
jbe,pn
xchg
pop
dec
test
push
out
mov
add
xlat
test
mov
sub
hlt
jle
stc
shl
sti
shll
dec
ds
aam
stos
xor
enter
dec
std
adc
std
dec
xor
dec
pusha
adc
in
out
mov
scas
enter
out
jne
xor
pop
push
jns
mov
dec
push
adc
scas
pop
mov
rep
and
in
das
push
dec
repz
pop
nop
mov
inc
int3
mov
adcb
mov
inc
test
dec
sub
ret
sti
mov
popa
xor
cmp
movsl
mov
jecxz
push
orl
pusha
fdivl
fimuls
mov
pushf
shrl
xor
mov
idivb
xchg
push
adc
xchg
mov
test
adc
movsb
aam
int3
xchg
test
sbb
loop
mov
xchg
sar
test
sbb
iret
mov
or
and
stos
sbb
add
into
ret
sub
mov
lods
push
insb
hlt
mov
add
jnp
jle
lahf
mov
push
es
es
cltd
test
push
pusha
gs
pop
cmpsl
sbb
test
dec
jp
cmc
wbinvd
mov
cmp
jecxz
push
clc
std
xlat
and
scas
mov
aaa
add
cltd
inc
notb
fcompl
loopne
or
mov
xlat
inc
inc
pop
mov
hlt
add
iret
sti
mov
sub
arpl
mov
mov
push
adc
pusha
push
xlat
addr16
jmp
xchg
sti
inc
clc
loop
mov
add
enter
shr
test
stos
cli
mov
andl
pusha
jno
sbb
fucomi
popa
cmp
lea
mov
push
ss
sub
mov
ds
int
lahf
inc
loopne
fs
push
xor
mov
inc
imul
xchg
and
sbb
mov
call
insl
adc
stc
out
jg
fcmovb
mov
sbb
xchg
jbe
fdiv
push
lods
int3
adc
pop
xor
imul
frstor
mov
mov
mov
inc
add
ret
in
jmp
idiv
lds
arpl
mov
cltd
and
dec
pushf
mov
loop
xchg
clc
mov
data16
lock
loope
xor
dec
mov
sub
andb
ds
xor
xchg
lock
pop
shrb
xor
mov
aam
and
pop
mov
clc
push
imul
dec
mov
aas
pushf
out
cwtl
js
sbb
sub
or
push
mov
mov
sub
into
xchg
insb
and
inc
jg
ret
orl
mov
gs
out
push
jmp
jnp
aas
rol
insl
xchg
test
cmp
dec
pop
jns
int
decl
int
xlat
push
dec
leave
adc
jp
mov
incl
and
ret
pushf
ds
and
jge
out
into
lret
xchg
add
pop
mov
pop
fidivs
ret
jmp
jbe
jecxz
data16
add
shl
adc
push
ja
mov
and
out
int3
fs
cmpsb
fnstsw
nop
adc
in
mov
mov
add
xor
mov
sbb
jp
popa
subb
adc
mov
scas
in
les
cmp
mov
sub
xchg
push
or
out
mov
or
int
jno
pop
ret
mov
and
jp
es
dec
dec
out
xor
scas
loop
lds
fimuls
xchg
mov
xchg
or
adc
jg
push
sbb
mov
adc
adc
frstor
cs
push
fsubr
js
jns
sahf
icebp
lods
mov
repnz
cmpsl
call
jmp
call
data16
imul
xor
mov
rcll
jp
inc
sub
push
xor
loope
div
mov
mov
xlat
test
test
pop
fdivrl
push
push
xor
pop
cmp
into
mov
test
jns
out
stc
mov
push
pop
mov
popf
jle
ljmp
scas
fildll
hlt
or
jl
sbb
jecxz
inc
mov
loop
xchg
xor
rcrl
sbb
out
ror
inc
xchg
loopne
aas
jnp
std
xchg
call
test
testl
xlat
repz
ds
in
ret
jns
pushf
test
ljmp
out
lods
adc
stc
add
pop
or
fimull
adc
in
popf
sub
push
fstpt
cmc
and
push
pop
cli
or
sarb
or
out
leave
mov
imul
xor
mov
je
jg
dec
push
jmp
push
shll
lock
int
stos
dec
xchg
and
or
inc
mov
jns
lahf
mov
dec
pop
push
je
inc
sub
xor
icebp
lret
dec
mov
lods
jne
mov
sbb
xchg
mov
mov
divl
icebp
cwtl
sub
lret
ss
and
mov
lds
xchg
xor
insl
or
daa
xchg
les
and
aam
les
jl
or
pop
push
mov
repz
icebp
jno
adcl
push
or
sbb
repz
js
sbb
xchg
clc
mov
repnz
clc
push
int3
dec
pop
arpl
jp
mov
cs
ficomps
xchg
push
cmpsb
mov
push
xchg
test
sbb
sbb
mov
mov
hlt
push
push
push
sub
fstpl
mov
mov
repz
jnp
in
ret
insl
clc
fsubrs
cmovp
in
pop
xchg
fcom
lock
dec
push
cltd
shl
mov
sbb
stos
pop
mov
repz
int3
xchg
xor
dec
lods
test
jl
pop
jnp
dec
repnz
stc
cmp
sbb
repz
loop
push
call
mov
andl
adc
lahf
or
lods
js
sbb
sarb
or
enter
and
fs
mov
mov
add
pop
xlat
cs
imul
jle
mov
into
mov
por
stc
rorl
inc
sbb
lea
test
cs
sbb
lahf
cmp
dec
scas
pop
push
jbe
cmp
mov
sub
xchg
notl
ret
pop
iret
sahf
sub
sbb
pop
cmpsl
and
cmp
sub
test
mov
and
cmc
sbb
pop
pop
xor
rorl
repnz
mov
sbb
xor
or
add
jno
icebp
push
add
inc
and
cmp
data16
push
mov
jno
adc
into
int
das
push
xor
in
sbb
cmpxchg
mov
dec
mov
or
mov
cmpsb
add
mov
lcall
and
iret
push
lds
out
into
inc
lods
cld
jle
test
test
pop
scas
mov
fimuls
leave
jle
push
mov
loope
add
or
sub
leave
push
adc
ret
in
mov
add
xchg
push
push
lods
jns
cmp
scas
sbb
sub
pop
and
mov
shrb
mov
inc
loopne
mov
pop
push
fisttpll
scas
mov
cmp
and
iret
nop
sub
xor
or
fildl
lahf
inc
mov
xchg
sahf
outsb
cltd
or
sub
repz
sub
lahf
fsts
push
cmp
push
movsb
jmp
pop
lret
jne
mov
vmwrite
int
xor
ds
mov
ret
pop
testb
jg
push
or
sub
mov
jo
shl
bound
dec
jp
das
mov
fnstenv
xor
xor
add
sbb
dec
stos
xor
ret
ja
mov
sbb
into
clc
mov
movsl
arpl
je
sbb
mov
push
cmpb
pop
movsb
and
mov
sub
rcr
mov
orb
pop
jbe
xor
loopne
push
rol
or
jo
test
adc
dec
in
inc
mov
xchg
cs
jge
sbbb
fistpll
sysexit
sti
mov
in
into
rclb
push
ds
fcompl
xchg
mov
popa
fcompl
inc
ss
xor
ja
shll
push
cmp
dec
mov
mov
or
mov
loope
push
push
cmpsl
mov
shlb
jge
xlat
adc
punpckhwd
mov
addr16
aas
negb
loop
ret
in
mov
adc
pop
js
pop
fistpll
push
lds
push
fucomi
mov
repnz
shlb
pusha
and
push
sub
adc
mov
push
xor
sub
inc
shlb
ret
in
test
sbb
sub
out
stos
andb
daa
neg
sbb
stos
orb
pop
lock
push
jae
cmp
cmc
out
sub
push
movsl
pop
push
daa
es
dec
inc
testl
ret
push
jbe
pop
cmpsl
in
inc
daa
outsb
ja
add
cmp
jno
jg
jnp
repnz
xchg
xchg
or
jl
lock
in
cmp
sub
cmpb
shlb
imul
cmpl
push
pop
xchg
xchg
inc
hlt
sbb
xor
pop
ret
mov
das
xor
sahf
dec
sbb
jne
popw
jp
cli
cmp
pop
loope
jae
adc
and
and
jmp
loope
scas
jmp
xchg
aad
fldenv
test
sub
mov
mov
jg
push
addr16
cmp
popf
or
or
xorb
jnp
jge
xorb
mov
mov
adc
fnstcw
notb
inc
aaa
fidivl
add
sbb
test
out
in
jns
pop
les
inc
xor
cmp
xor
pop
aaa
mov
repnz
xchg
mov
push
mov
sbb
icebp
pop
shlb
sarl
mov
insl
ret
lcall
mov
fisubl
jnp
xchg
push
cmp
cltd
or
cld
outsl
mov
xchg
and
adc
push
dec
lds
lods
xor
sub
lea
lret
pop
mov
mov
or
dec
xlat
cwtl
xchg
mov
lcall
imul
scas
mov
mov
jle
out
loop
cmp
ret
sub
je
pop
jne
scas
jmp
mov
xchg
push
mov
xor
cltd
lds
sarb
pushf
icebp
pushf
xor
adc
mov
daa
enter
cmp
pop
das
data16
ds
fs
das
cmp
jbe
inc
fs
pop
adc
out
mov
adc
mov
pusha
push
adc
pop
nop
popf
push
pop
inc
fmull
ljmp
dec
aad
lcall
scas
addl
rcl
mov
sub
pop
mov
pop
sbb
jne
rcrl
stos
pop
test
loopne
mov
icebp
mov
mov
or
or
fildll
adc
or
adc
push
fwait
in
jg
push
test
fildl
inc
mov
adc
fbstp
xchg
imul
xor
loop
adc
cmp
cmp
push
enter
jl
mov
mov
jnp
sbb
aaa
jp
arpl
fcmovbe
xor
addr16
pop
pop
push
inc
cmpsb
push
aas
mov
pushf
and
add
insb
sahf
jno
mov
pop
adcl
push
inc
insl
add
stc
cltd
or
sub
push
mov
push
adc
dec
pop
pop
ds
test
stos
mov
rorb
cmpl
sbb
jle
xor
lods
mov
js
dec
sti
mov
mov
cmpsb
ret
cltd
outsl
cmp
mov
aam
jle
pop
and
mov
mov
pop
jne
daa
stos
inc
and
scas
xchg
mov
push
mov
cmc
shl
jle
pop
cmp
sbb
int3
or
dec
leave
mov
lret
push
ficompl
aaa
popf
xchg
cltd
and
dec
imul
xchg
inc
incl
mov
inc
pushf
insb
sahf
enter
sub
ret
or
push
adc
sub
sub
das
repz
jnp
aas
in
mov
lods
add
mov
inc
sub
daa
int3
push
fwait
movsl
jb
mov
mov
pop
fmuls
test
loopne
cmp
movsb
shl
je
out
cmp
sti
and
addl
jmp
lahf
jge
xor
pop
and
adc
push
xor
or
lods
pop
push
xor
insb
mov
xchg
pushf
push
in
xor
test
fnstsw
or
mov
inc
push
scas
mov
sbb
or
xlat
jg
pushf
stc
push
sbb
std
mov
loopne
loope
push
adcb
cmp
hlt
in
adc
hlt
test
push
cltd
iret
mov
loop
enter
testl
aam
stc
adc
xchg
rcrl
mov
mov
jecxz,pt
add
cltd
icebp
jge
popf
ret
sahf
xor
mov
lret
sbb
in
push
or
cmp
xchg
andb
xchg
sub
cmpsb
xor
xchg
lret
cmp
shr
jne
xchg
inc
lahf
jmp
loop
xor
jb
dec
inc
adc
fdivrs
sub
nop
lods
out
or
cltd
jbe
cmp
lods
movsl
pop
dec
inc
loope
push
in
test
mov
into
sub
bswap
and
pop
sbb
pop
ret
mov
enter
dec
lahf
pop
popl
adc
dec
outsl
sub
sub
or
sarl
pop
adc
cmpsb
jg
scas
ret
dec
bsr
mov
loope
out
aad
iret
push
movsb
cmpsl
xor
sbb
pop
ret
xchg
dec
or
jno
fsts
clc
or
adc
pop
mov
sbb
mov
scas
push
push
pop
xor
int
pop
push
jbe
pop
mov
add
lock
xor
ror
ret
in
adc
idivl
mov
push
outsb
ja
xor
add
inc
mov
sbbb
pop
int3
mov
or
dec
inc
pop
inc
rorl
sbbl
pop
cmp
sub
sbbl
and
sbb
mov
mov
sbb
jae
jl
outsb
cmp
stc
arpl
into
outsl
push
in
inc
or
or
imul
mov
add
cmp
leave
xor
push
out
nop
xlat
or
add
adc
adc
outsl
js
jge
inc
lret
mov
jp
sbb
or
push
lcall
je
push
or
sbb
das
jl
sbb
pop
mov
movsb
dec
mov
ss
int
xchg
out
pop
sahf
js
shll
shrb
sub
lret
pop
xchg
lea
cmc
inc
lock
mov
pop
adc
shl
out
push
pushf
div
ja
xchg
test
ja
and
jae
xor
push
sbb
repnz
sbb
jecxz
ret
scas
fsubp
dec
ret
fwait
loope
je
scas
jb
ret
stos
stos
push
jo
test
pop
std
xchg
lock
les
out
mov
fdivl
lahf
mov
pop
hlt
inc
pusha
cs
mov
ficompl
jbe
mov
fistps
mov
add
dec
out
je
out
xchg
test
test
in
stc
addl
inc
pushf
out
icebp
pusha
or
shll
loop
fstps
sbb
cli
mov
push
adc
outsb
cmp
sub
faddl
jnp
int3
lcall
fcoml
add
push
lea
js
lods
add
mov
les
not
or
pop
dec
leave
pusha
sbb
mov
cmp
imul
stc
lods
dec
mov
add
pop
inc
and
jbe
mov
mov
jo
scas
in
xor
test
inc
lret
in
mov
xor
pop
incb
cmc
mov
in
sbb
addr16
inc
test
inc
je
xor
lea
sbb
movsl
inc
jecxz
cmp
inc
icebp
dec
jecxz
lcall
std
ret
and
jge
call
data16
adc
dec
fs
lcall
or
adcb
shl
imul
pop
aad
mov
push
push
mov
push
insb
jo
jmp
aad
adc
int3
xchg
mov
xchg
ret
sbb
mov
cltd
addr16
inc
les
pop
gs
negl
stos
sub
cmpl
cmc
push
xchg
push
xchg
aaa
sarb
add
bound
fstpl
popa
push
fwait
inc
jl
jp
xchg
lahf
lds
aam
sbb
mov
ficoms
dec
lahf
insb
outsl
ljmp
mov
cmp
lret
addr16
cltd
push
adc
sbb
sub
fcoms
pop
jl
fdivp
pop
jmp
in
ss
imul
pop
or
adc
imul
xor
dec
loop
sarl
lret
mov
xchg
scas
mov
outsb
ljmp
test
xor
movsb
mov
dec
jbe
push
mov
jne
mov
out
push
inc
repnz
pop
out
and
sub
js
repz
cmp
nop
call
cmp
nop
xor
cld
test
sub
aas
movl
loope
push
lea
mov
test
and
push
push
lret
shl
dec
rorb
xchg
sub
push
push
mov
and
cmp
rcll
ljmp
adc
cld
add
mov
xchg
cltd
es
adc
xchg
insb
sub
daa
mov
inc
int
or
lret
negl
idivb
pop
lds
popf
lahf
inc
pop
push
mov
jmp
out
xchg
or
addl
mov
test
mov
pop
cmp
dec
cli
and
xorb
pop
mov
leave
dec
aam
clc
push
mov
xor
call
or
lret
fdivl
sahf
lret
stos
ljmp
pop
popa
lret
pop
in
adc
mov
gs
imul
mov
in
sub
and
ficompl
in
dec
cmp
inc
pop
sbbl
pop
lods
lea
leave
sbb
push
inc
repz
js
push
cltd
sub
add
out
shrb
sbb
cwtl
adc
xchg
call
insb
sbb
push
mov
adc
scas
stos
mov
xor
and
icebp
lds
cmc
js
push
push
mov
cmp
jns
and
adc
mov
ljmp
pop
scas
scas
shll
jmp
out
mov
cld
push
lret
xchg
and
pop
xor
mov
mov
adc
jl
in
inc
call
repnz
jb
icebp
adcl
push
jecxz
scas
cmp
fwait
pop
in
movsb
push
loopne
cwtl
add
jge
mov
shrb
jmp
pop
lock
cmp
jecxz
js
and
insb
pop
fisubl
sbb
add
adc
pop
ljmp
movd
cmp
lock
xchg
and
aaa
aas
push
inc
das
js
adc
xchg
jae
dec
cmp
ret
xchg
push
shll
mov
cwtl
enter
in
fwait
push
push
aaa
das
adc
mov
testb
outsb
cmpsb
cli
pusha
mov
pushf
xchg
mov
mov
movsb
inc
repnz
jne
xchg
jg
dec
call
inc
jmp
lret
lock
mov
xchg
dec
jb
ret
jo
cmp
clc
in
es
stc
inc
filds
aam
popf
and
ljmp
cmpsb
cmpsb
add
repnz
mov
add
dec
insb
sbb
in
lret
addr16
insl
mov
pop
jp
mov
jp
adc
jo
dec
sub
nop
mov
dec
and
inc
adc
push
sbb
push
in
repz
cwtl
lahf
outsb
push
adc
push
inc
insl
mov
or
xchg
push
mov
inc
movsl
lcall
out
push
or
subl
or
les
fldenv
push
or
repnz
cltd
push
imul
pop
imul
pusha
aaa
stos
or
jle
lock
mov
cmc
ds
loop
jns
push
aad
xor
jmp
xchg
imul
lret
ljmp
mov
or
dec
cmp
sahf
mov
sarl
enter
jo
lds
mov
fstps
ja
push
int3
mov
mov
xchg
xor
mov
add
les
push
sti
ja
nop
pop
and
xor
lcall
mov
leave
dec
mov
sub
adc
movsl
fidivrs
sbb
mov
pop
repz
mov
ror
fstp
mov
xacquire
shlb
cmp
mov
dec
and
cmc
inc
aaa
dec
sbb
das
push
in
pop
popl
and
in
or
mov
and
inc
cwtl
inc
loopne
popf
movsl
adc
jmp
mov
lret
xchg
fs
stos
mov
loope
ljmp
inc
fucom
inc
inc
scas
leave
mov
inc
insb
mov
inc
cmp
push
jb
mov
ret
mov
and
push
cmpsb
cmp
addr16
cmpsl
clc
ljmp
jnp
mov
lret
cmpsb
jb
nop
outsb
cltd
cmpsl
ljmp
push
mov
fmuls
sbb
cmc
jb
push
inc
aas
lcall
ret
push
sub
icebp
and
xchg
pop
pop
lods
repnz
out
add
mov
mov
mov
mov
rcll
jle
ljmp
into
ret
xor
leave
xchg
neg
adc
data16
in
mov
das
dec
or
aas
ret
fs
push
push
or
cs
or
mov
aas
or
into
inc
mov
and
je
pop
push
fdivp
or
cmp
lret
inc
ret
inc
or
lods
mov
filds
aaa
rcrl
fistl
imul
jae
call
xchg
fmull
or
test
jmp
adc
inc
daa
or
dec
sub
in
mov
stc
fisttpll
cltd
lods
dec
in
sub
xor
mov
mov
loope
push
sbb
add
fs
mov
or
fsubl
mov
andb
inc
out
jl
pushf
cli
lods
xchg
push
sub
sub
ljmp
test
xor
test
mov
lret
icebp
enter
int
jge
sbb
int
pusha
test
sbb
xchg
movsb
mulb
xorl
cmpsl
mov
fwait
mov
mov
popa
retw
scas
pop
repz
push
and
insb
sub
pop
das
inc
sub
xor
dec
stos
bswap
mov
ss
inc
sarl
sub
roll
movsb
mov
pop
fnstcw
repz
push
add
enter
stos
add
rcrl
int
xor
test
in
in
jns
aam
imulb
xor
sahf
mov
aaa
outsl
xchg
inc
cmp
cmpb
mov
mov
mov
mov
pop
xor
int
lods
mov
adc
sbb
adc
bound
rolb
inc
adc
pop
scas
push
mov
mov
cmp
sub
mov
push
scas
push
aam
xchg
jae
das
sub
inc
xchg
and
mov
popf
repz
or
add
cld
aaa
cmp
fiaddl
xor
cwtl
lock
popa
inc
push
test
adc
sub
adc
pop
push
sbb
cmpb
add
lret
pop
jbe
aad
xor
test
scas
insb
and
xorl
sbb
sahf
outsb
gs
fidivrs
pop
cmc
fidivrl
cmp
mov
push
add
jb
aad
mull
xchg
pop
mov
cmp
and
ds
and
scas
call
aam
andl
loopne
mov
adc
jbe
scas
sti
ds
and
mov
mov
cmpsb
loop
movsb
sti
pop
fs
cmc
jo
inc
into
idivb
popa
shll
movsl
es
xchg
sbb
stos
sahf
cmp
sti
and
test
sahf
jno
cmpsb
stos
dec
repz
push
jbe
shrl
das
jecxz
fcmove
sub
aas
dec
jecxz
jmp
pushf
dec
cmc
adc
push
cmp
into
pop
inc
mov
or
sbb
inc
rorl
push
fs
shrb
in
mov
jle
pop
cmpsl
cwtl
fbld
out
leave
dec
jbe
enter
dec
mov
in
xchg
in
pop
ret
inc
sbb
cs
and
xor
rcr
mov
adcl
popa
or
adc
popa
inc
dec
outsb
mov
lea
push
outsb
or
adcb
pop
mov
sub
xchg
pop
es
out
mulb
push
sbb
cmp
jge
inc
lock
fldcw
and
sub
call
xchg
xchg
out
inc
shlb
jmp
icebp
sbbb
xchg
jle
cs
jbe
push
sbb
add
lds
les
mov
xor
sbb
and
mov
push
clc
mov
unpckhps
popf
fiadds
stc
jo
xor
fldenv
call
pop
call
push
mov
cli
xchg
in
mov
pop
pop
xor
cmp
xchg
mov
jl
fcoms
xchg
rcr
test
pop
mov
cmp
cmpsl
scas
cmp
dec
out
push
xor
out
dec
test
leave
push
das
jge
mov
scas
les
sbb
mov
es
push
sbb
and
xor
xor
pop
sub
mov
mov
hlt
push
xchg
sbb
cmpsl
jns
cli
mov
push
gs
fcomps
int
xor
fwait
and
in
jns
fistl
cwtl
xor
out
int3
pop
scas
cmp
popf
jge
mov
pusha
in
mov
insb
fcoms
pop
int3
imul
loop
add
out
push
mov
gs
jg
gs
rorb
cmp
fs
jmp
push
bound
xchg
or
addr16
sub
aaa
dec
test
add
out
addr16
imul
jno
mov
imul
jmp
es
sbb
shl
ret
adc
les
jb
sarb
sbb
das
add
test
imul
xor
fidivrs
mov
int3
in
and
lahf
jae
sbb
repz
leave
mov
test
ja
sbb
mov
xor
rolb
mov
pop
adc
jecxz
fisttpll
lds
movsl
in
aaa
ret
ds
push
outsb
or
mov
mov
mov
lcall
mov
adc
cltd
add
mov
jecxz
pop
test
ljmp
ja
push
out
or
scas
xchg
and
inc
inc
dec
sub
push
mov
test
jecxz
insl
cmp
repz
cs
mov
push
sti
pop
les
stos
inc
sub
sbb
adc
out
cmp
in
outsb
dec
cmp
sub
cmp
dec
add
cmp
nop
adc
pop
shll
addb
push
aad
adc
ss
cmp
dec
pop
jb
xlat
pop
and
fcmovne
sbb
mov
inc
imul
lods
insb
clc
divl
cld
xor
jmp
jne
in
in
arpl
xlat
enter
ja
and
pop
cmpsl
add
push
add
movsb
aam
fwait
rcrl
and
cwtl
nop
sbb
and
mov
inc
popa
ficomps
stos
jecxz
rcrl
fwait
mov
xor
dec
or
sarb
adc
sbb
and
jg
loop
loop
mov
inc
cmpb
icebp
mov
inc
sti
and
arpl
adc
dec
mov
adc
jno
push
aaa
adc
shlb
pop
xor
jle
xor
lds
into
les
cmpsb
shll
sbb
fistpl
push
xchg
push
ss
mov
pop
jns
mov
cmp
mov
std
jnp
in
outsw
mov
rolb
cmc
jbe
pop
testb
nop
jo
push
mov
sub
mov
or
cmpsb
in
mov
out
andl
loop
sub
aas
xchg
hlt
sbb
pop
dec
out
or
js
cmpsl
xor
mov
bound
jae
cmp
call
cltd
ss
mov
pop
mov
dec
inc
imul
cs
lret
cld
cmc
or
pushf
stc
mov
jecxz
stos
mul
movsb
aaa
lock
mov
add
test
out
in
in
sub
push
gs
into
test
dec
cmp
mov
hlt
adcb
mov
pop
lods
jmp
repnz
call
mov
mov
sbb
popa
mov
fwait
and
pop
and
test
fcompl
jb
sbbb
mov
fildll
inc
movsl
int
xor
int3
or
adc
jb
cmp
sbb
inc
adc
cmp
or
mov
rcll
fld
inc
fcomip
add
jmp
push
int
incl
dec
lds
stos
mov
jmp
dec
rol
sbb
adc
or
lret
lods
inc
cli
idivb
or
in
dec
push
shll
shll
mov
hlt
mov
aas
aas
sbb
pop
cwtl
push
shrl
jns
push
mov
push
pop
fsubrs
mov
and
in
int3
xchg
xchg
pop
xchg
inc
enter
popa
rorb
loopne
xchg
je
scas
insb
nop
insb
xor
push
mov
fldenv
adc
in
push
and
cmp
xchg
mov
cmpsb
aad
pop
mov
push
imul
cmp
dec
sbb
ljmp
and
lahf
sub
hlt
xchg
jl
cmp
jmp
sahf
mov
jno
sbb
lods
rolb
pop
and
cmpsl
cmp
dec
jmp
and
ss
push
test
inc
sqrtps
or
aad
in
test
inc
adc
icebp
lret
push
adc
fisttpll
cmp
xor
inc
jbe
or
sbb
sbb
pop
cmpsl
sbb
fcomps
arpl
cmpsb
jle
mov
dec
push
jo
sub
pop
fsubr
imul
insb
mov
insl
mov
lock
addr16
ficompl
imul
es
jnp
jns
dec
xlat
pop
push
inc
jb
sahf
inc
sub
in
push
cmp
ret
lods
lret
mov
bound
mov
xchg
adc
pop
xor
xchg
or
inc
cmpb
scas
mov
mov
lret
gs
or
push
push
sbb
xor
cmp
mov
gs
adc
inc
iret
xor
mov
pop
lock
add
and
or
mov
mov
js
fs
or
icebp
fwait
pop
xchg
push
stc
loop
outsb
mov
aas
push
inc
inc
mov
in
xchg
mov
or
adc
outsl
bound
push
outsb
pop
ficomps
jb
mov
call
jo
fistl
mov
inc
dec
sbb
aaa
adc
loop
sbb
xor
jb
shlb
xchg
imulb
push
jl
push
ljmp
jl
cmpsl
mov
mov
cmp
inc
cmp
aam
push
sbb
jo
jecxz
xchg
fimuls
adc
xchg
imul
mov
and
mov
pop
inc
pop
or
in
mov
mov
pop
std
cmp
push
fstpt
push
stos
sub
test
addr16
iret
jp
movsl
nop
aad
in
pop
popf
lret
aaa
pop
lahf
int3
and
std
testb
sub
add
or
mov
test
pop
sub
inc
xchg
cld
cmpsl
cltd
jno
icebp
popf
lock
cmp
mov
sub
add
subb
cmp
xchg
push
int3
inc
iret
insl
adc
fldl
sbb
inc
shll
repnz
push
push
sub
outsl
cwtl
cltd
in
jge
push
xlat
sbb
dec
gs
sbb
inc
push
lea
bound
inc
arpl
nop
repnz
push
dec
cmp
leave
xlat
lock
cmp
jl
lock
mov
inc
shrl
aas
jbe
xor
and
xchg
inc
scas
cmp
fdivrs
mov
sub
pop
jbe
test
js
aam
mov
es
loopne
dec
cmc
push
push
mov
aam
pushf
push
inc
xor
lret
mov
stc
push
mov
jmp
inc
cltd
add
movsl
push
mov
fisttpll
pop
mov
in
ret
rcll
mov
mov
push
inc
xor
adc
adc
mov
xor
sub
loop
pushf
popf
push
or
addr16
jle
arpl
jo
sbb
push
sub
mov
lcall
out
mov
jl
das
pop
adc
jnp
xor
sub
pop
in
leave
jo
data16
dec
mov
mov
push
mov
ljmp
and
sbb
cli
hlt
pop
push
push
mov
mov
jns
dec
sbb
inc
lock
outsb
and
xor
pop
push
mov
jle
mov
add
add
jae
ret
xchg
mov
or
inc
push
shll
mov
andb
test
cmc
pushf
ret
jb
xchg
pop
jnp
and
cmp
fiadds
enter
jmp
dec
arpl
stos
pop
sub
cmp
pushf
ljmp
jno
mov
xchg
inc
out
jne
jge
popl
lods
hlt
inc
mov
pop
sbb
jb
pushf
cwtl
insl
je
ja
sub
decl
inc
insb
cmc
enter
loopne
cmc
cwtl
out
mov
jp
rcl
orb
int
mov
mov
clc
ds
dec
xchg
fsub
pop
rol
jb
into
xchg
cmp
stos
xchg
sub
sub
adcl
fisttps
mov
in
mov
pop
mov
mov
xchg
xchg
int3
leave
cmpsb
dec
adcb
xchg
ljmp
icebp
lea
cld
and
addb
jo
addl
cmp
mov
loope
stc
repz
int
push
push
inc
mov
fildl
mov
test
pop
push
sub
sub
mov
nop
jbe
jp
dec
push
xchg
dec
mov
ret
mov
call
push
add
out
jmp
xorb
push
add
dec
enter
out
clc
lahf
or
jp
pop
mov
push
imul
jl
aam
bound
mov
inc
and
shl
xchg
pop
adc
arpl
sbb
add
dec
out
push
ret
cmc
imul
or
lret
dec
mov
push
cmpsl
jno
jle
and
inc
lds
cmc
subl
mov
fwait
or
mov
shr
xchg
roll
adc
pusha
pop
mov
int
call
fs
sub
imul
and
inc
jo
pusha
insb
std
aam
mov
out
popa
sarl
xor
aad
mov
pop
push
mov
cmp
fistl
call
pop
cmp
xor
push
inc
fisttps
adc
jle
mov
pop
nop
sbb
push
adc
push
or
inc
test
dec
lret
sub
sahf
xchg
outsl
lock
cmpsl
mov
stc
popf
pop
data16
dec
xchg
jbe
mov
mov
stc
loopne
or
or
sbb
jg
fcomps
decl
or
rclb
add
or
xchg
aas
mov
dec
jecxz
clc
mov
pop
cli
loopne
enter
xchg
repz
jl
inc
dec
ss
stc
xchg
cltd
pop
push
fbld
adc
hlt
fs
out
xchg
and
push
mov
fsubl
jg
or
dec
lcall
stc
bnd
mov
or
mov
push
add
inc
icebp
and
fists
adcb
xchg
adc
dec
pusha
fwait
mov
cmp
dec
lret
xchg
mov
mov
and
mov
movsl
je
sti
mov
iret
mov
popf
js
sbb
or
hlt
pop
lret
es
push
sbb
clc
mov
outsl
lahf
insb
dec
adc
mov
outsb
mov
shlb
lahf
out
loope
push
push
ret
mov
popf
mov
mov
mov
mov
js
mov
jmp
movsl
or
outsb
sbbl
mov
inc
pop
pop
or
test
and
sbb
push
push
jl
bnd
xchg
xlat
push
inc
lods
xlat
mul
or
mov
inc
jnp
hlt
lcall
das
sub
movsl
movsl
or
push
mov
aaa
pushf
std
xchg
push
and
mov
jg
add
cld
scas
jl
ljmp
mov
push
lcall
ret
mov
sbb
shrb
lods
nop
mov
jne
insl
mov
into
scas
and
jo
jle
mov
pop
scas
pushf
cmp
pop
or
sbb
stos
repnz
jmp
stc
das
inc
lock
dec
rclb
cmp
cmp
popa
jno
outsb
jb
xor
mov
out
fwait
adc
fdiv
je
xlat
xchg
jne
les
xchg
sub
push
mov
scas
int
cltd
sub
mov
out
or
push
push
cmp
test
aad
testb
aam
sbb
pop
or
mov
mov
dec
push
sub
xor
pop
xchg
repz
cltd
arpl
mov
enter
and
push
lret
pop
icebp
out
pop
cmc
sbb
pop
xchg
scas
mov
add
or
rcl
mov
mov
rcr
pop
clc
or
or
cltd
outsb
out
jp
cmp
insl
xlat
lcall
rorb
adc
adc
addr16
ret
addr16
enter
imul
push
mov
add
pop
xlat
cmp
push
push
cltd
xor
in
fstps
xor
je
xchg
int
sbbl
in
repnz
es
insb
das
inc
adc
movl
repz
movsl
loope
cmc
ljmp
mov
rcr
icebp
mov
adc
cmp
sub
sbb
xchg
jmp
pop
jmp
repz
xor
mov
call
cli
mov
inc
orb
or
add
and
jl
in
dec
lea
into
repz
cmpsl
lcall
inc
pop
cmp
inc
jne
or
inc
xor
adc
add
push
adc
mov
inc
lret
inc
fwait
icebp
cmc
xchg
push
repz
int3
xor
and
add
stos
test
out
mov
push
jae
adc
and
mov
pop
es
xchg
out
inc
mov
mov
cld
and
jmp
cmp
inc
movsb
mov
mov
dec
leave
push
imul
push
loopne
cmp
lcall
lods
lods
ret
in
sbb
aad
pop
das
cwtl
imul
inc
mov
xlat
test
aad
cmp
pushf
in
xchg
aad
add
hlt
jns
int3
mov
shl
xor
mov
clc
xchg
push
ljmp
push
cmp
or
cmc
mov
jne
push
arpl
addb
push
mov
sbb
out
mov
mov
sub
fsubrl
pop
lea
int
sahf
lods
hlt
call
dec
xlat
dec
lock
jmp
xchg
push
xchg
cmp
inc
ljmp
jnp
test
inc
pop
inc
mov
push
push
clc
adc
adc
push
lret
rcrl
int
adc
jo
aad
scas
data16
fstpt
jp
cli
pop
jne
inc
mov
lods
jns
pop
sahf
das
rcll
sar
inc
cmc
lret
jnp
cmp
out
lcall
push
cmp
test
sbb
movsl
daa
pop
pop
mov
sub
push
cmp
or
dec
aam
movsl
adc
sti
cli
clc
mov
mov
cmp
pushf
inc
fimull
inc
lods
lahf
popa
dec
inc
imul
xlat
xchg
push
sarl
cmp
rorl
dec
jb
das
pop
dec
jne
xchg
jbe
mov
clc
cmpb
mov
je
push
jno
add
jmp
cmpsl
bnd
pop
rcll
call
mov
das
popf
mov
adc
insl
mov
inc
sbb
jae
push
repnz
push
adc
pop
xchg
mov
add
xor
sbb
or
adc
and
shrl
push
inc
sub
ret
iret
test
daa
lea
pop
push
inc
ljmp
adc
ja
push
fwait
mov
movsb
cmp
dec
inc
mov
xor
lret
popf
mov
rep
push
loopne
flds
add
adc
sahf
outsl
adc
xchg
pop
cmp
test
pop
dec
loopne
pop
sub
repz
adc
pop
movsb
or
frstor
cltd
inc
xchg
xor
rcr
daa
insb
es
dec
repz
mov
cmp
mov
lret
dec
loope
cmc
dec
repnz
mov
sbb
cmp
jae
icebp
and
dec
sbb
xchg
cmp
shlb
out
dec
fisttps
mov
jg
cld
movsb
jo
inc
cmp
leave
or
mov
sbb
pop
shl
cmp
sbb
add
es
out
adc
xor
cmpsb
sbb
or
cmpsl
cli
xor
test
push
xor
in
into
dec
add
sbb
fld
cmp
out
fldl
in
push
sub
sbb
scas
int3
xchg
out
daa
jl
adc
xchg
and
cmp
xchg
nop
mov
ror
jns
sarl
push
lea
in
mov
addb
mov
dec
sahf
xchg
fistpl
xor
idiv
and
add
pop
sub
jne
icebp
cmp
dec
mov
lock
add
mov
fists
sbb
ficoms
pop
ja
adc
je
in
lcall
das
outsl
stos
adc
jg
into
ja
pop
loop
and
call
cmp
or
mov
stc
cs
nop
ds
popa
fisubs
shll
mov
mov
out
cltd
or
push
inc
inc
cmpsb
jge
and
adc
pop
and
lcall
mov
xor
pushf
push
jmp
mov
inc
xchg
and
clc
cmpsb
mov
inc
mov
xor
and
pop
xor
mov
jo
popf
inc
idivb
inc
dec
in
cmp
push
push
cmpsl
adc
add
in
jle
sbb
pop
stos
sarl
lds
pop
fldt
pop
push
xchg
js
notl
pop
adc
jae
sarl
mov
jp
dec
aaa
notb
hlt
ja
xchg
and
cmp
mov
pusha
dec
js
iret
mov
and
lret
adc
inc
pop
outsb
enter
adc
xlat
clc
jno
addr16
mov
cltd
lds
pop
xchg
mov
outsl
lock
shlb
and
mov
xor
dec
lock
in
aam
aas
xor
jbe
pop
cwtl
std
adc
out
sbb
xchg
pusha
inc
sbb
push
and
cmp
fcmovu
daa
insb
es
cli
pop
mov
or
pusha
in
pop
mov
adcb
and
pop
andb
scas
lods
cmpsb
sarl
aas
stos
xor
and
lods
jecxz
cmpsb
das
pop
mov
mov
cmp
add
pop
dec
xor
lahf
stos
or
data16
add
cli
xchg
std
inc
lods
add
pop
idiv
mov
insb
jne
fmull
loopne
dec
push
add
iret
add
insl
setnp
pop
scas
cmp
and
sub
and
cmpsl
fldz
pop
rol
push
rcrb
sbb
mov
mov
insl
push
xor
dec
outsb
mov
orl
mov
in
xchg
and
ud1
sbb
mov
push
insb
repz
xor
imul
popa
cmp
std
cmp
pmaxsw
sbb
subl
xor
xchg
pop
lcall
pop
js
sbb
ds
jmp
dec
pusha
lock
insb
push
hlt
aad
ja
dec
jg
xchg
jge
xchg
push
xor
cmc
jl
dec
mov
push
pop
test
cli
shll
sbb
ret
stc
push
div
and
inc
lret
jecxz
stos
inc
inc
jb
add
sbb
jp
hlt
leave
repz
les
cltd
mov
xchg
cmp
adc
adc
and
xchg
mov
pop
xor
push
push
xchg
push
pop
lahf
pusha
mov
mov
pop
sub
and
int
mov
pop
stos
test
and
xor
aad
in
nop
cmp
xchg
jb
push
pop
jb
lods
stc
daa
lret
pop
jnp
jae
push
movsb
in
dec
loopne
xlat
fidivrs
xchg
or
xor
inc
divl
cs
je
adc
mov
sti
mov
mov
mov
sub
sub
jmp
mov
or
data16
adc
daa
push
rcll
dec
test
adc
jp
int3
jbe
rol
scas
je
mov
rolb
ret
pop
hlt
test
pushf
mov
cmp
adc
arpl
mov
inc
mov
std
roll
loopne
inc
insb
adc
outsb
mov
rorl
push
mov
mov
xor
aad
mov
xchg
xlat
cmp
out
add
mov
int
call
push
xlat
pusha
or
scas
add
pop
adc
insb
cmp
sub
clc
push
inc
inc
cld
lea
pusha
clc
jl
sub
test
movsb
shl
fistps
movsb
lret
sub
pop
fs
pop
lret
mov
stc
mov
stos
push
sarl
adc
jne
mov
cmp
mov
push
sbb
xor
sbb
or
sub
xor
clc
push
and
jnp
sub
sub
enter
cmp
jl
movsb
ffree
fisubrl
add
pop
push
in
add
outsb
cld
addr16
sbb
xchg
lret
mov
push
xlat
addr16
push
out
hlt
pushf
inc
xor
sbb
cmp
dec
mov
adc
in
ret
jae
loopne
mov
push
call
push
dec
mov
mov
jne
dec
pop
dec
stos
sahf
pop
ja
cmp
mov
push
fsubr
push
adc
jnp
or
sbb
jb
pusha
inc
mov
out
cmc
push
fdivrs
push
xchg
push
aad
imul
rcr
loope
rcrl
mov
fwait
or
xchg
sti
inc
imul
sub
pop
push
adc
push
addr16
enter
pop
stos
out
js
jge
jne
je
ror
in
call
or
popf
insl
lods
xchg
adc
das
cmp
cli
fistpll
sti
out
rol
mov
insl
hlt
and
shlb
mov
mov
adc
sbbb
jp
ljmp
outsb
pusha
inc
xchg
mov
clc
inc
jge
push
mov
xlat
daa
fsub
xchg
push
xchg
icebp
cmp
std
ret
imul
into
dec
insb
iret
iret
in
xor
dec
fsub
or
mov
xchg
jmp
xor
adc
lods
or
and
int3
flds
push
dec
xchg
sbb
subb
fcompl
add
or
mov
out
pop
gs
pop
cmp
sbb
cltd
pop
sbb
nop
ret
push
inc
sarb
pop
sub
imul
push
pop
lods
fprem1
stc
sbb
xor
jle
arpl
or
push
dec
mov
addr16
test
mov
arpl
jo,pt
mov
xchg
or
dec
out
add
sbb
lret
cltd
add
sbb
jp,pn
cmp
push
inc
fcoml
or
loop
mov
cltd
sbb
outsb
xchg
inc
cmp
into
add
and
jo
pop
adc
cmp
xchg
popa
cmc
test
sub
xorb
ss
push
js
dec
add
daa
mov
push
push
fidivrl
inc
push
in
cs
loopne
jecxz
and
xchg
mov
sbb
sti
mov
inc
dec
mov
orl
push
dec
sar
hlt
shlb
ja
cmp
xor
cmp
lock
push
or
mov
sub
jnp
xchg
and
push
shl
cmp
dec
outsl
inc
mov
test
fadds
mov
out
lods
movsl
sbb
sbb
out
icebp
xchg
jns
mov
cmpsb
insl
repnz
pop
mov
pop
aad
jp
in
sbb
dec
xchg
stos
inc
sub
jb
xchg
sub
jo
cmpsl
das
loopne
mov
iret
mov
mov
inc
bound
and
insb
or
lret
pop
scas
mov
scas
mov
dec
gs
test
int
cmp
aas
pusha
sbb
and
xchg
xchg
push
daa
popa
ds
jbe
out
jno
mov
jb
sti
or
mov
call
push
pop
mov
pop
dec
mov
movsb
cmp
repnz
fcomps
cld
movsb
mov
cmp
cmp
add
cmp
mov
adc
pop
jno
sbb
iret
out
sub
inc
hlt
aas
push
push
jecxz
push
mov
cmpsl
push
adc
pop
scas
jmp
adc
xchg
orb
sbbb
sub
fisttpl
lods
and
add
push
dec
xor
aaa
jno
mov
sub
leave
shr
xor
mov
or
scas
xchg
cmp
daa
out
loope
fidivs
jl
jl
shl
loop
add
mov
outsb
inc
orb
decl
xchg
pushf
sarl
hlt
inc
mov
dec
js
pop
inc
xchg
add
push
hlt
inc
fwait
xor
bound
loop
outsl
jl
add
in
mov
addr16
outsl
mov
sub
ret
sbb
jmp
fnstenv
xchg
cli
cmpsl
pop
in
out
test
push
loop
dec
inc
sahf
mov
in
loop
leave
mov
mov
mov
int3
xchg
mov
outsl
iret
ret
adc
mov
insl
sub
sarb
push
jmp
mov
mov
jno
insb
aam
xchg
data16
insb
call
xor
stc
adc
lret
jmp
andb
arpl
mov
add
jne
xchg
xchg
and
push
shrb
lret
cmpsl
jne
loope
mov
ss
ds
dec
xor
mov
pusha
and
inc
out
xor
mov
mov
in
pop
enter
and
pop
mov
or
dec
hlt
mov
xor
test
add
pusha
out
movsb
data16
push
adc
in
jo
and
and
inc
xchg
mov
dec
test
js
into
dec
push
lock
in
push
out
sbb
addb
add
inc
fidivrl
add
pop
jae
mov
sub
xchg
pop
daa
in
cwtl
add
cmc
xchg
inc
sbb
jbe
jl
fcmove
mov
arpl
data16
clc
mov
pop
fs
pop
in
push
sub
shrl
into
out
orb
xchg
push
out
or
gs
fisttps
mov
xchg
push
mov
mov
in
out
sbb
outsl
xchg
gs
outsl
cmc
shll
push
sbb
scas
jle
jecxz
sbb
outsb
aam
sub
jp
sub
add
test
sub
insb
dec
jl
stc
mov
and
loope
mov
mov
mov
sbb
aas
pop
mov
sub
icebp
jnp
aam
lcall
or
ss
jno
sti
cmp
bound
inc
xchg
in
push
pavgb
xor
mov
mov
in
and
das
inc
and
add
sub
mov
and
pop
push
aam
xor
push
int
jmp
mov
das
insl
scas
xchg
pop
loope
aas
pop
mov
test
push
lods
and
sub
push
fmulp
aam
rorb
dec
and
int3
leave
out
jl
stc
jl
scas
enter
lahf
lea
mov
mov
je
outsb
dec
scas
adc
fs
stos
bound
pop
shlb
add
and
adc
dec
daa
sub
inc
xor
jl
or
test
fidivrl
jmp
fstpl
cmp
imul
xchg
xlat
jns
pop
jl
fwait
cmp
jl
notb
loopne
dec
mov
shrl
std
adc
sub
pop
es
iret
leave
push
mull
jno
xchg
mov
sub
fsubs
movsb
fmul
je
sti
add
xchg
test
call
cvtps2pd
mov
sbb
sbb
inc
inc
int
lcall
js
mov
test
cltd
sbb
inc
sub
mov
or
ret
pop
into
mov
nop
pop
and
mov
insb
fidivl
loopne
jecxz
pusha
aaa
cmp
test
dec
sub
jmp
clc
movsb
mov
xor
mov
jbe
adcl
sub
cmp
jo
jne
cld
inc
xorb
xor
pop
and
xchg
into
daa
call
sub
data16
orl
inc
dec
jnp
mov
mov
test
pop
mov
push
cmpb
das
out
push
sub
ret
test
xor
dec
inc
mov
pop
scas
insb
jns
bound
lock
and
xchg
mov
adc
in
xchg
inc
lock
aas
mov
movsl
loope
push
aaa
add
mov
xchg
mov
mov
lret
roll
iret
mov
jns
jg
das
mov
bound
mov
dec
adc
sbb
nop
cmp
and
adc
shrl
call
sub
jno
cmc
outsl
mov
push
data16
test
ret
cmp
cmpsl
mov
pop
cwtl
inc
daa
dec
cs
or
push
add
jge
in
and
sub
lcall
and
or
popf
in
aad
aam
jp
jne
bnd
repnz
jp
mov
mov
cmp
scas
xor
sbb
pop
sti
adc
test
jmp
push
repz
sub
and
or
adc
xchg
and
mov
imul
lods
jmp
daa
test
faddl
imul
sbbl
in
sahf
addb
mov
cli
jp
jo
xor
icebp
xchg
mov
or
mov
sub
divb
dec
lods
push
jg
adc
popa
arpl
test
mov
outsl
adc
sbb
mov
mov
lret
inc
loope
nop
mov
pop
lock
mov
dec
jg
cmp
inc
mov
pop
dec
push
mov
pop
scas
cs
arpl
gs
lret
pop
aam
xor
cs
pusha
aad
loop
enter
mov
push
lods
xchg
or
mov
jl
mov
sub
fcom
dec
scas
rorl
sti
xchg
xor
sub
xchg
jecxz
ret
gs
mov
popf
mov
add
cld
loop
cld
repnz
imulb
xlat
xchg
inc
mov
cltd
jl
pusha
dec
cmpsl
shl
xchg
mov
ret
lret
add
sub
jmp
mulb
repz
adc
dec
movsl
inc
mov
aaa
add
aam
loopne,pn
stc
mov
or
inc
mov
js
mov
insb
ret
fcompl
xchg
jge
nop
std
ja
push
fcmove
jecxz
push
add
imul
xchg
jle
fists
test
iret
loopne
enter
or
lea
pushf
xor
aas
in
loop
stos
xchg
fwait
daa
mov
stos
sbb
push
cmp
arpl
in
xor
push
nop
pushf
in
adc
jb
jne
test
xchg
jb
push
leave
pop
mov
stc
dec
addr16
shlb
mov
mov
inc
mov
mov
dec
pop
loope
xor
test
dec
lcall
cmc
aam
out
jmp
jmp
sub
push
xchg
xor
popa
mov
loop
pop
pop
jge
shrl
in
dec
scas
or
mov
mov
sarl
jb
lret
pop
sub
push
mov
mov
mov
sahf
xchg
jne
and
cltd
stc
cmp
pop
in
inc
pop
cltd
mov
xchg
lds
gs
mov
sbb
mov
xchg
scas
ja
mov
outsb
add
pop
push
and
js
dec
ljmp
daa
shlb
mov
pop
mov
add
add
idivl
xchg
cmp
jecxz
iret
mov
mov
inc
call
xchg
das
pop
push
inc
sub
push
call
push
gs
lret
imul
adc
mov
pop
and
lcall
adc
mov
popf
xor
test
movsb
pop
arpl
imul
addl
shrb
jecxz
adc
jo
cmp
ds
push
shrb
loope
pusha
jne
out
sub
fwait
fs
sarb
popa
pusha
je
push
or
pop
outsb
and
push
mov
adc
ljmp
pop
add
pushf
or
out
pavgb
mov
mov
xor
dec
test
xor
mov
loopne
pop
xor
pop
jae
icebp
jl
or
jnp
mov
fdivs
imul
cli
pop
sbb
xchg
jae
aam
adc
aad
iret
and
sub
jbe
lret
cld
xor
adc
mov
jo
popa
push
push
pop
inc
sbb
jo
xchg
push
push
or
pop
fcompl
in
ljmp
mov
mov
mov
insb
or
mov
or
aad
lretw
stos
xchg
inc
into
jge
fdivrl
popa
icebp
pop
movsl
sub
out
movsl
and
inc
push
loopne
leave
fdivs
andb
imul
and
adc
imul
stc
pop
mov
sub
movsl
popa
cwtl
in
sub
jno
mov
sub
sbb
push
testb
mov
jae
jae
fistl
scas
nop
xchg
mov
bound
lret
push
pop
out
int3
fdivl
popa
hlt
loop
clc
xor
jae
nop
push
inc
roll
repz
mov
pusha
call
ret
lret
stc
mov
dec
stc
pop
add
out
fcomip
fwait
popf
and
mov
ja
out
imul
pop
cmp
out
pop
call
xor
adc
inc
sbb
mov
push
cmp
subb
adc
sub
xchg
adc
pminub
inc
cmp
jbe
inc
jb
lods
scas
in
xchg
das
mov
adc
sub
fdivs
xchg
stos
sbb
dec
std
addr16
lods
pop
repz
mov
ljmp
pushl
int
xor
mov
add
add
jle
fstl
xor
lret
scas
adc
insl
enter
mov
inc
pop
in
pop
sahf
popa
cmp
push
call
hlt
xor
mov
pop
insl
cltd
ja
lods
sbb
sbb
negl
jns
dec
shlb
cmpsl
or
enter
loope
scas
out
mov
adc
aas
mov
test
pop
xchg
test
call
add
out
adc
adc
sbb
inc
dec
movsl
lret
push
in
lahf
sbb
rorl
lods
lds
push
cmovp
call
cmp
lret
jne
add
add
inc
cmp
push
jle
xlat
faddl
ljmp
insb
imul
sahf
movsb
rcrl
negb
sub
xchg
loope
push
stos
xor
inc
sub
stos
push
sbb
push
add
mov
sub
mov
outsb
lods
jmp
sti
inc
mov
test
insw
mov
sub
sbb
cmp
andl
mov
sbb
pop
mov
cltd
cmp
test
and
iret
xor
cmp
push
mov
inc
cld
mov
jge
icebp
xchg
loop
adc
stos
push
mov
or
jg
ljmp
xchg
lcall
mov
dec
fldl
das
addr16
stos
stc
and
dec
daa
push
pop
es
mov
ss
jmp
gs
pusha
rclb
iret
mov
cli
out
sahf
sbb
mov
fwait
mov
test
inc
cmpsb
inc
aam
fdivrl
jo
int3
add
bound
subl
mov
mov
shl
mov
mov
test
sahf
cmpsb
dec
add
mov
jno
sbb
mov
cmp
cwtl
mov
sub
jmp
push
jp
push
xor
mov
pop
jns
pop
push
sbb
dec
bound
jecxz
jl
notb
femms
jecxz
fcomps
loopne
mov
ds
pusha
mov
ret
xor
or
sub
adc
xor
jge
mov
imul
pop
aas
scas
inc
gs
cwtl
bound
sub
lock
sarb
mov
ja
mov
mov
xchg
scas
xchg
outsb
cli
add
jb
addr16
jmp
imul
cli
cmp
pop
mov
rolb
pop
push
jae
jg
mov
call
cmc
or
mov
mov
aad
or
jnp
aam
add
lcall
push
dec
shl
lea
insb
out
jecxz
xchg
cmpl
int3
imul
dec
ficoms
aam
jmp
sub
sub
jo
lret
das
mov
pop
daa
xchg
sub
inc
xor
xor
pop
mov
imul
sub
cwtl
in
lahf
jmp
mov
imul
mov
test
leave
pop
cli
notb
test
fcomp
or
xchg
cwtl
std
es
ljmp
sub
out
mov
js
pop
sub
sub
flds
in
cltd
add
mov
mov
js
xchg
movsb
inc
lcall
pop
adc
pop
loope
xor
inc
in
pop
add
repz
test
inc
gs
fwait
jno
ss
stos
in
test
les
ret
push
pop
cmp
pop
ljmp
repz
cmpsl
jns
rcll
mov
jg
cwtl
in
lock
pusha
xor
adc
testl
out
mov
filds
cmp
testl
mov
pop
adc
xor
add
inc
lea
pop
add
xor
imul
pusha
mov
stos
cmp
leave
xor
push
jbe
dec
out
fwait
test
sub
adc
sahf
sbb
push
sub
sub
pop
mov
mov
pushf
inc
mov
xchg
movsl
pop
mov
sbbl
add
xchg
pop
pop
xchg
xchg
mov
fimull
jl
jb
mov
push
iret
pop
pop
pushf
imul
addr16
das
pop
cmp
mov
test
and
cs
pop
leave
jp
sbb
push
lds
mov
insw
or
cs
mov
push
insb
pop
repz
cmp
outsb
pop
jbe
dec
pop
das
out
adc
ja
in
dec
bound
add
int
rcr
test
or
dec
cmp
mov
shrl
cmpsl
xlat
out
imul
pusha
push
sbb
je
xor
aam
adc
lahf
rcrb
test
jl
ja
dec
xchg
inc
mov
cmp
out
jl
fldt
ret
mov
call
cmp
das
rolb
das
sbb
jge
pop
lcall
shr
push
cmc
adc
jp
stos
mov
leave
inc
gs
mov
rorl
xchg
nop
clc
xchg
in
cmp
mov
xchg
jo
jp
and
push
adc
jb
arpl
lahf
xor
push
aas
aaa
cmp
jle
rcl
ret
xor
xchg
in
into
in
push
aaa
inc
push
ficoms
sub
sub
xor
and
cld
sbb
inc
push
jg
pop
sub
call
pushf
mov
out
sahf
fsubrs
push
pause
jns
sub
inc
sbb
push
dec
mov
movsb
jbe
jae
xchg
pop
pop
int
in
inc
jle
jle
dec
mov
xchg
xor
push
sub
pop
cmp
scas
cmp
mov
out
lods
cmp
pop
in
mov
dec
out
cwtl
and
push
subb
punpckhdq
fdivrl
pop
or
inc
push
xchg
sub
pop
mov
lret
repz
mov
fldl2t
mov
lock
and
or
shll
pusha
and
sbb
popa
cmp
xchg
das
inc
push
push
out
daa
add
xor
or
test
or
lods
lods
xor
sti
mov
jae
cmc
and
cmp
testb
divl
repnz
cltd
sub
mov
fiadds
cwtl
xchg
cs
dec
out
bound
xlat
leave
aas
out
nop
xor
xchg
xchg
stos
xchg
ret
jo
inc
push
xchg
add
in
push
ljmp
outsb
pusha
mov
push
mov
mov
lds
jmp
out
push
add
cmpsb
aam
cmp
and
push
jno
leave
mov
xchg
es
inc
mull
xchg
cld
cmp
neg
mov
loop
insb
or
divb
sbbb
and
fcmovnbe
les
sub
sub
rcll
or
push
in
int
mov
popf
push
dec
adc
stos
xchg
ficoms
xor
test
ds
ja
xor
jo
mov
lds
stc
les
cltd
inc
test
add
cwtl
mov
pop
and
sub
mov
lahf
dec
imul
sbbb
jns
test
xor
shr
leave
sub
lods
popf
jle
ds
xchg
cmpsl
rcr
xchg
jne
and
fwait
mov
add
gs
mov
pop
hlt
arpl
insb
jmp
lret
shl
lret
pop
cmpb
jb
icebp
or
cmpsl
mov
cmc
imul
sahf
enter
adc
gs
aaa
je
push
add
cmc
rclb
add
pop
out
inc
cmp
shrb
push
loop
mov
mov
sub
cmp
out
shll
mov
mov
stos
js
mov
aas
nop
and
stos
add
leave
nop
or
sub
cmpsb
fcoms
sub
cmc
push
and
mov
xor
jne
xor
out
inc
mov
mov
stos
adc
jmp
push
and
shrl
push
scas
ffree
aas
lret
add
sbbl
cli
or
xchg
nop
dec
js
and
inc
shll
pop
xchg
das
or
inc
dec
mov
test
in
pminsw
bound
adc
negb
push
pop
pop
lock
adc
cwtl
and
out
mov
xchg
push
sbb
push
mov
push
xlat
adc
sarb
cltd
aam
pushf
gs
jne
adc
xlat
xchg
push
sub
inc
mov
dec
jb
fnstenv
pop
push
jbe
mov
pop
movsb
pop
cmp
mov
push
lods
shll
xchg
push
test
mov
dec
enter
adc
loop
jb
popf
loopne
enter
xchg
mov
mov
jae
push
int
push
xor
scas
std
add
mov
xchg
mov
xchg
dec
out
icebp
in
pop
push
popa
push
out
jno
cmpsb
outsl
adc
cld
ret
mov
xor
lods
call
mov
iret
subl
lods
test
lock
push
out
push
lods
out
in
sub
and
and
cmp
fidivrl
push
jp
mov
ret
mov
adcl
scas
cld
lcall
jno
out
das
in
ret
inc
xor
sub
movsl
mov
cld
sbb
testl
dec
stos
in
in
cmp
insl
jp
push
push
addl
and
daa
push
repz
lret
call
ret
mov
jge
adcl
push
std
pop
in
aas
in
add
ficoml
sbb
sbb
call
nop
xlat
and
out
xor
adc
pop
in
out
repz
push
cmpsl
aaa
xor
lcall
and
xor
rol
or
in
call
sbb
jae
lods
cli
sbb
rclb
push
dec
les
jns
js
js
and
jnp
lret
cmp
lret
mov
adc
add
mov
lods
idivl
js
stos
iret
inc
shlb
inc
cmpsb
out
mov
in
push
lahf
fidivrl
pushf
adc
sub
cmp
lahf
ljmp
push
shl
xor
in
and
mov
dec
fldt
in
dec
push
sbb
shl
or
leave
mov
aam
jb
imul
dec
jg
pop
or
mov
and
push
mov
outsb
mov
cmp
ret
cmc
or
fs
bound
sub
mov
xchg
ficoms
mov
aaa
scas
adc
jno
ret
jbe
pushf
mov
add
cmp
jg
imulb
mov
ljmp
out
jge
mov
mov
jns
cmp
sar
jne
ljmp
outsb
push
shl
bound
data16
les
add
lods
leave
or
fs
push
adc
push
adc
add
daa
inc
xchg
sbb
scas
push
mov
in
adc
inc
xor
jmp
adc
adc
xchg
push
cmp
cs
xor
dec
add
shrl
xchg
sub
or
arpl
jle
pop
dec
add
out
push
mov
xchg
pop
ljmp
out
adc
jecxz
adc
mov
sahf
mov
filds
pop
sub
pop
clc
aaa
ss
cli
scas
adc
or
xchg
mov
mov
push
fisttps
leave
into
mov
sub
movsl
lock
outsb
dec
sbb
xor
pop
mov
ljmpw
sub
mov
lds
lret
push
mov
mov
adc
movsb
or
mov
and
aas
shlb
xor
sbb
and
je
lds
out
cmp
mov
pop
loope
pop
push
adc
xchg
sahf
test
sub
dec
inc
test
inc
pop
xor
mov
lods
pop
inc
std
popa
popl
cld
push
cmp
push
shrl
std
xchg
or
dec
lea
or
push
mov
mov
mov
or
sbb
cmp
adc
out
add
pop
fadds
outsb
mov
push
lock
sub
mov
fnstsw
pop
push
jno
roll
sub
pop
push
mov
fistl
dec
jns
leave
adc
xchg
adcb
sbb
sbb
fstpt
std
xchg
repz
mov
cmp
cmp
lahf
repnz
sub
pop
or
ret
inc
ss
fs
push
adc
pop
stos
jl
aaa
mov
cmp
mov
scas
sub
or
out
ds
adc
dec
mov
adc
inc
mov
adc
sbb
mov
loope
daa
rcrl
sub
sti
adc
jb
push
adc
cmp
lock
jmp
add
inc
adc
outsb
ror
stc
xchg
mov
push
mov
jmp
mov
out
push
xor
sbbl
adc
mov
insb
into
mov
icebp
push
loope
out
aam
fadds
call
cmpsb
pop
and
cli
test
mov
adc
icebp
movsb
and
roll
push
sbb
pop
push
test
xor
pop
mov
nop
ret
lahf
xor
cmpsl
insb
scas
inc
in
repnz
ljmp
rcr
fbstp
cmp
jo
jb
xchg
dec
pop
push
ror
lret
ljmp
mov
push
sahf
xchg
nop
jb
sbb
ljmp
cmc
cwtl
icebp
push
push
and
cli
jmp
or
xchg
cmpb
mov
cli
sbb
mov
lea
sbb
cmp
loope
mov
jge
mov
or
cmc
pop
mov
jo
imul
inc
es
mov
fistl
fisubrl
push
or
pop
push
mov
out
lods
jmp
mov
push
pop
cmp
sub
hlt
addr16
ja
outsl
cmp
jp
cltd
xchg
mov
sub
push
popf
xor
call
jne
in
or
push
sti
push
nop
lcall
push
push
rcrb
cmpsb
add
lods
lret
jp
ds
push
push
adc
mov
push
cmp
test
movsb
mov
mov
into
cmpsl
loopne
dec
testb
subl
aam
lret
pop
or
fldcw
push
jl
loope
push
or
mov
lahf
cmp
rdtsc
ffree
sub
ficoms
sbb
divl
mov
cltd
add
adc
mov
sbb
je
movsl
xor
jge
mov
shlb
mov
ret
or
and
cmp
sbb
sti
mov
mov
mov
mov
aas
mov
push
pop
clc
sub
mov
push
clc
mov
fldenv
daa
sbb
ljmp
push
xor
dec
xchg
mov
sub
hlt
pop
dec
rorb
adc
pop
dec
fisttpll
push
add
or
pop
inc
pop
mov
ljmp
push
fbld
movsl
icebp
out
lcall
fs
dec
inc
dec
or
shlb
or
mov
ficomps
mov
fadds
repz
xor
mov
mov
outsl
pop
movsl
lret
test
ret
cwtl
stos
clc
xchg
jno
aad
das
mov
dec
fadd
mov
lods
pop
pusha
inc
jl
jle
jl
fnstcw
fwait
lret
fs
shlb
testw
iret
jae
sbb
icebp
pusha
lret
test
lods
dec
lock
pop
jl
loope
stc
push
and
dec
sub
jns
mov
repz
fbstp
add
xchg
leave
inc
leave
sub
cltd
dec
hlt
dec
aaa
dec
cmpl
je
cmpsb
fdiv
bound
cmp
dec
add
xchg
inc
shl
in
sbb
sub
rcl
call
dec
add
rclb
push
push
ficomps
pop
jg
mov
shll
shlb
popa
out
lods
fiadds
mov
out
scas
movsb
or
js
xor
push
adc
test
scas
mov
jnp
lea
out
xorl
divl
mov
sbb
movsb
setnp
xor
adc
xchg
xor
dec
lahf
das
push
adc
pushf
pop
add
aaa
scas
rcll
test
mov
insb
add
mov
push
ret
adc
out
pop
movsl
mov
enter
xchg
popf
jp
lds
outsl
sub
out
pop
mov
test
hlt
aaa
or
movsb
mov
pop
movsl
mov
pop
cmp
repnz
push
xor
push
loope
or
aam
dec
jmp
cmp
push
cmpsb
rolb
stc
data16
jae
in
hlt
sbb
ds
in
add
push
mov
fcomps
jns
lds
arpl
sarb
aas
mov
pop
push
fisttpll
ja
mov
iret
pop
rol
dec
ljmp
mov
or
push
out
mov
in
xor
lcall
dec
fldl
or
mov
ss
add
sub
or
sbb
mov
fadds
nop
mov
dec
mov
sahf
mov
adc
mov
imul
testb
xchg
xor
rol
lods
inc
jno
cmpsb
sub
rcl
lret
shlb
mov
lock
add
lock
sahf
mov
xchg
xchg
pop
imul
out
xor
add
les
btc
fadd
cltd
or
stos
mov
aaa
xchg
add
mov
punpckhwd
and
lea
pusha
data16
scas
jno
mov
sub
mov
mov
dec
in
xchg
xchg
lods
repnz
or
jle
dec
ror
adc
push
and
data16
add
mov
scas
or
test
into
ja
insb
data16
fldenv
jno
cmp
jae
movsb
je
out
pushf
pop
pop
cld
pushf
inc
xor
dec
popf
mov
fadd
shlb
stos
test
pushf
cltd
cmpsl
setne
sbb
mov
inc
hlt
xor
das
std
ficomps
push
cmc
lock
lahf
pop
popf
ljmp
dec
ljmp
mov
xchg
jg
and
xor
mov
mov
jnp
in
mov
sbb
xchg
add
outsb
jns
jl
lods
inc
xchg
mov
outsl
ds
dec
sbb
jnp
pop
mov
mov
lret
fnstenv
ret
stos
pushf
lret
push
add
or
jne
loop
clc
mov
testb
stc
cmp
daa
xchg
and
mov
pop
dec
dec
mov
xchg
enter
mov
ja
in
in
mov
rclb
or
fmuls
addl
into
cmc
dec
dec
sub
icebp
pop
xor
pop
lahf
pop
mov
dec
sbb
push
and
dec
mov
xor
jecxz
cld
sub
mov
int3
lods
dec
js
push
test
dec
push
add
movsl
push
mov
mov
gs
pop
aam
int3
mov
lahf
popa
pop
loop
add
out
and
sbbl
aad
mul
inc
test
mov
lods
pop
pop
lods
scas
xchg
mov
cmpsl
jno
cmp
gs
xor
pop
imul
or
and
adc
cmp
dec
pop
loope
scas
sub
js
pushf
stos
sbb
pop
aaa
icebp
sub
lds
xchg
jl
rcll
lock
push
xlat
movsb
scas
mov
test
sub
out
or
cmp
insb
stos
pushf
push
or
push
outsl
cmp
dec
push
lock
cmpsl
scas
jbe
rol
mov
sti
into
cmpsl
mov
fsubrs
aam
sub
xchg
and
add
scas
cmpsb
scas
dec
out
enter
push
mov
sbb
rorb
pop
jns
push
imul
ljmp
das
test
inc
dec
dec
mov
sbb
rcrl
xchg
adc
stc
inc
add
out
xchg
sbb
jp,pn
inc
mov
dec
fimull
dec
cwtl
jnp
adc
or
sbb
mov
ljmp
dec
nop
jg
mov
lret
or
dec
mov
add
rcrl
pop
pop
pop
push
xchg
inc
roll
gs
adc
lret
ss
loop
pop
fcomps
cltd
xchg
or
mov
xlat
and
jnp
idiv
es
test
dec
clc
aam
sahf
mov
ret
fisubrs
sub
push
xchg
or
imul
add
outsb
popf
xchg
fiadds
cmp
arpl
push
pop
jo
lods
sti
orb
sub
dec
xchg
icebp
inc
lods
repz
add
sbb
inc
add
xor
addr16
and
arpl
pop
mov
int3
fiadds
inc
push
cmp
pop
shll
mov
jne
fmulp
leave
sub
fwait
jae
xchg
sbb
or
into
xchg
or
stc
mov
mov
jb
jge
push
ss
push
loopne
sbbb
daa
punpckhbw
cmp
in
call
dec
subb
adc
paddd
mov
and
cmp
in
test
std
and
xchg
lock
pop
pop
pop
lahf
push
pop
add
aaa
dec
xor
loop
sub
fwait
idivb
fisubl
fdivr
test
into
dec
cmpsb
add
add
push
sbb
jp
adc
std
xor
cmp
leave
lock
mov
or
in
or
cmp
or
lret
es
mov
and
nop
outsl
pusha
inc
or
dec
adc
lods
xchg
cmpsb
jg
push
hlt
add
inc
sbb
mov
cmp
subl
je
or
cli
dec
and
inc
mov
jae
cmpb
adc
pop
outsb
xor
inc
add
mov
cmp
movsl
push
lcall
mov
bound
push
push
outsb
pop
and
push
inc
and
out
or
cmc
pop
push
ljmp
decl
push
loop
add
std
mov
add
sbb
pop
sbb
add
cli
jle
roll
jecxz
cmpsl
test
push
mov
xchg
push
pop
mov
mov
mov
add
jnp
mov
mov
xchg
cmp
icebp
test
push
adc
out
jnp
inc
push
loope
mov
xchg
add
and
roll
dec
mov
js
mov
or
decl
lods
push
and
dec
lock
mov
mov
mov
mov
iret
jmp
idivb
test
pop
les
pushf
xchg
mov
adc
cmovg
sbb
push
or
add
lret
ljmp
imul
pop
lahf
fstp
add
mov
test
push
out
xchg
xchg
icebp
jae
adc
or
dec
sub
pop
dec
dec
shrb
jnp
xor
cmp
icebp
mov
jmp
and
mov
sub
add
repnz
xor
pop
lods
mov
cmp
stc
loope
add
xchg
js
sbb
mov
pop
loop
mov
fcmovnb
inc
out
jnp
jno
in
test
arpl
test
xlat
mov
jg
mov
test
hlt
sbb
test
in
cmp
mov
in
jle
orl
sub
push
cmpsl
xor
jo
and
or
inc
inc
dec
lods
push
in
outsb
xor
fdivrs
mov
dec
rorb
mov
pop
mov
jg
iret
jp
insb
divl
stc
mov
sub
inc
add
test
xchg
jns
in
sahf
mov
lock
jmp
push
dec
mov
sbb
pop
jmp
xor
inc
movsl
int3
loope
add
ja
stos
sbb
and
fucomip
dec
jmp
adc
adc
or
data16
pop
mov
adc
mov
ss
in
adc
cwtl
mov
dec
repz
mov
pop
and
sbb
test
insl
and
cmp
add
aad
pop
lods
add
add
out
mov
or
xchg
pop
cmc
jecxz
adc
dec
popf
xor
test
shlb
mov
lahf
out
fidivl
lahf
add
std
dec
outsl
sarl
push
push
bswap
lahf
fidivrs
les
mov
test
sub
loop
cmpsb
adc
push
aas
jno
ljmp
aad
fwait
rcrl
aad
cmp
push
lods
into
and
clc
pop
and
dec
dec
int
gs
jmp
or
push
push
dec
iret
out
lods
cmp
dec
jb
adc
add
lea
cld
xchg
in
insl
enter
dec
out
rorl
push
pop
dec
push
movl
inc
xchg
movsl
and
cltd
cwtl
faddp
push
dec
int
pop
sub
xor
mov
out
mov
mov
int3
sbb
sub
enter
add
call
aas
jbe
loop
pop
xchg
iret
jno
or
cmp
xchg
and
mov
loop
dec
lret
adc
pop
mov
in
scas
ja
pop
cmpsb
dec
jne
popa
xchg
cmp
clc
fisubl
outsl
rcrl
mov
inc
pop
xchg
add
insl
adc
in
subl
into
gs
mov
xor
in
insl
test
es
mov
xor
popa
aad
call
adc
idiv
pop
cwtl
lods
xchg
mull
mov
dec
mov
repz
xchg
in
call
into
inc
addr16
xor
jmp
imul
push
mov
or
inc
fldenv
mov
jb
call
xor
sahf
or
stc
or
pop
cmpb
lcall
int
and
ja
add
push
ljmp
roll
imul
stc
pop
push
int
or
adc
mov
xchg
add
jl
movsb
sar
adc
lahf
popa
inc
enter
sbb
cmp
imul
jb
or
outsl
js
pop
xor
jnp
inc
scas
scas
add
push
pop
lods
and
sub
sahf
sbb
mov
push
mov
mov
popf
icebp
push
inc
xchg
jmp
sub
mov
ret
dec
or
lahf
ja
test
cli
lahf
test
jnp
sub
cs
hlt
fbld
rolb
aam
mov
jp
mov
jle
sub
xor
xchg
mov
mov
fwait
push
iret
or
adc
movsb
repnz
add
or
ljmp
in
jne
cli
pop
ds
lahf
fcomip
ljmp
mov
andb
imul
xchg
rorl
rolb
ret
pop
out
xchg
andb
mov
nop
fstps
pop
cli
test
mov
idivb
push
popa
mov
shl
pop
mov
mov
and
pop
lahf
sub
std
inc
lods
nop
xchg
jmp
pusha
psllq
dec
outsl
inc
push
push
test
test
mov
mov
push
lods
add
lea
sub
dec
mov
adc
pop
subl
xor
ficoml
dec
scas
sub
pop
cmp
xchg
lret
add
or
xchg
call
dec
dec
jae
lret
push
jbe
dec
ss
inc
cli
mov
inc
in
es
add
xchg
rolb
sub
jmp
or
loop
pop
mov
jge
dec
mov
and
test
ja
stc
xchg
cmp
xor
addb
adc
out
jg
mov
pop
cmp
pop
mov
cli
push
pop
cmc
bound
jne
cmp
sub
sbb
mov
jl
push
inc
adc
sbb
out
xchg
jecxz
jne
sbb
mov
sub
repnz
out
xchg
pop
sub
shlb
cwtl
mov
xor
push
pop
cmp
int
add
popa
jecxz
enter
and
ds
jmp
xchg
pop
lret
rcrb
popa
xor
xchg
jge
movsb
mov
pop
sub
xor
into
mov
cmpsl
into
sbb
jne
mov
push
hlt
push
jg
clc
leave
pop
pop
xor
mov
pop
je
dec
push
inc
mov
loop
sub
inc
xchg
or
clc
pop
jge
aaa
inc
pop
sub
add
popf
out
inc
sub
imul
into
push
and
mov
ljmp
pop
jmp
rorb
cmp
mov
negl
xor
or
shrl
mov
dec
dec
es
lahf
adc
es
popa
frstor
popf
add
sti
xchg
fisttpll
and
inc
test
xor
dec
xor
xor
sbb
push
dec
inc
sub
test
push
mov
sbb
subb
nop
xchg
cwtl
xor
cmpsl
push
testl
outsl
stos
lcall
inc
cmpsb
iret
adc
cmpl
testl
ret
mov
or
jns
rcl
sbb
out
jno
lret
pusha
dec
enter
sbb
mov
sbb
aas
pop
notl
lods
xchg
fst
adc
in
lahf
loop
sub
cmp
std
push
push
sahf
jp
cmp
es
shl
sbbl
and
in
ds
xor
enter
in
or
mull
adc
cmp
xchg
sub
cmpsl
fstl
mov
je
out
shr
sbb
aam
sbb
orl
adc
sbb
in
stos
fadds
sbbl
lods
fwait
mov
iret
adc
pop
lret
sub
in
inc
push
mov
sub
jl
fsubrp
xchg
divl
iret
ds
sbb
jnp
pop
lcall
and
mov
inc
push
mov
into
adc
in
mov
daa
jle
rcrb
es
sub
arpl
or
out
out
stc
mov
mov
pop
popf
loope
push
aam
push
pop
ds
cmp
aas
orb
mov
popf
adc
iret
lea
cld
push
dec
shlb
xor
sbb
sub
repz
xchg
popa
adc
inc
mov
cmp
or
add
sbb
cltd
mov
shll
popa
push
dec
neg
call
mov
xchg
insb
and
inc
mov
fistpl
sti
nop
in
sbb
jg
out
das
incl
ss
push
mov
jp
add
mov
aas
sarl
sbb
imul
mov
mov
cmp
popa
jmp
sahf
dec
jne
outsl
das
mov
jl
fimuls
frstor
add
push
and
jnp
rcr
shl
xor
ds
js
shlb
aaa
out
fsubrs
loopne
int
inc
push
pop
jmp
gs
loop
or
cltd
xor
mov
mov
lcall
bound
add
inc
ss
mulps
ds
fmulp
jmp
adc
cltd
and
and
pop
jl
cmpl
ret
cltd
aaa
lods
scas
imul
jnp
stc
dec
or
mov
std
sbbl
hlt
dec
adc
ss
outsb
inc
or
pop
test
fnsave
js
dec
mov
adc
repnz
cmpsl
cli
cwtl
add
dec
xorb
jl
xchg
pop
jg
sahf
add
jmp
xchg
xor
cmp
jae
arpl
mov
and
cmp
hlt
fldt
inc
cmc
insb
jo
int
in
fs
out
mov
cmp
ss
cmp
outsb
and
pusha
mov
or
scas
pop
sbb
ja
push
arpl
movsl
out
sbb
faddl
ljmp
movsb
inc
test
mov
jmp
or
or
test
mov
int
arpl
mov
jp
dec
fstpt
pop
push
out
bound
das
sub
pop
fidivrl
into
in
sbb
adc
sarl
xchg
push
inc
repnz
cmp
mov
addr16
cwtl
imul
test
mov
loope,pt
ljmp
dec
sub
int3
sub
mov
test
sti
mov
rcrl
movsl
xchg
jbe
dec
dec
jge
aad
xor
arpl
leave
rcrl
inc
scas
int3
stos
lock
call
jne
ficomps
fisubl
nop
mov
push
dec
add
jb
push
inc
cs
sub
sahf
dec
enter
loope
mov
sbb
mov
dec
pushf
out
cwtl
cs
mov
nop
in
xchg
push
or
xlat
rcrl
inc
xchg
and
dec
dec
mov
leave
mov
call
jns
cmpsl
push
leave
jl
int3
adc
es
jbe
mov
jnp
nop
scas
test
lock
sub
and
daa
not
std
adc
mov
push
imul
shlb
lock
xchg
loopne
adcb
call
jge
xchg
das
loope
je
mov
push
mov
test
mov
lods
loope
insl
or
pop
jb
fldl2e
imul
mov
inc
pop
pop
test
ret
cwtl
int3
sbb
cmp
xor
arpl
sbb
fwait
sbb
adc
pop
stc
out
sub
jnp
mov
sbb
in
mov
ret
cmp
outsl
cmp
fsubl
ljmp
jbe
cmpsb
in
out
cli
shr
push
sbb
jg
rclb
push
pushl
imul
jecxz
into
js
cmc
test
jb
cwtl
inc
lahf
jb
out
dec
fisubrl
insl
xchg
fcompl
loopne
mov
mov
ret
outsl
dec
pop
push
mov
mov
imul
xor
jle
lahf
lea
gs
mov
jecxz
adc
cmpsl
adc
movb
or
rolb
std
and
adc
mov
cli
cmp
stc
mov
sub
jmp
inc
and
cmpsb
int3
mov
pusha
inc
daa
dec
inc
gs
sbb
cmc
and
aas
mov
cmpsb
adc
add
rcrb
scas
call
and
pop
fmul
push
dec
jecxz
scas
inc
xchg
mov
repz
into
or
aaa
inc
out
push
lahf
jg
loopne
mov
mov
add
mov
cltd
stos
mov
sbb
mov
cmp
cmp
jbe
cmc
pop
sbb
inc
mov
mov
std
cmp
loope
jle
sahf
and
mov
xchg
insb
cli
inc
mov
push
jnp
push
mov
data16
sti
add
or
ret
loopne
vmread
mov
inc
sub
rcll
ret
iret
test
mov
push
sub
adcl
sbb
cs
shr
mov
cmpsl
xchg
mov
fstl
push
cld
lahf
sbb
daa
lcall
daa
mov
mov
shll
in
or
jnp
cs
pop
pop
push
shlb
out
jb
mov
inc
lods
rcr
in
scas
mov
data16
jle
cld
xor
icebp
dec
lea
in
push
lret
xor
fwait
add
pop
push
fisubl
cmpsb
sti
fisttpl
pop
sahf
ror
lret
add
xchg
jl
lds
xchg
cmc
xchg
lods
adcl
cwtl
xchg
or
test
ljmp
jno
and
sub
push
dec
dec
pop
popa
lods
sbb
jae
jl
jnp
outsb
sarl
lret
sbb
leave
pushl
dec
dec
stos
sbb
adc
stc
mov
xchg
adc
sub
jmp
das
fmuls
movzbl
dec
cmp
jge
fwait
push
mov
inc
pop
xchg
push
fcompl
das
pop
mov
cmpsb
enter
mov
sub
filds
cli
shl
imul
dec
divb
inc
int3
pop
inc
push
in
sub
jae
sbb
cmpsl
adc
icebp
shl
xor
mov
jbe
jmp
inc
inc
gs
jno
or
xchg
pop
ret
pop
and
adc
mov
popa
xor
cmp
xor
ljmp
inc
sbb
shl
sbbb
adc
inc
imul
mov
push
ds
jl
mov
xchg
and
xlat
sub
jne
inc
sbb
lret
inc
es
mov
mov
add
xor
movsl
xchg
jle
movsl
mov
insb
sbb
mov
cltd
fisttps
xchg
or
add
pop
mov
dec
pop
sub
or
mov
push
scas
loopne
mov
sub
subb
dec
int
adc
and
adc
pusha
add
ja
and
jmp
xor
stos
cmc
and
out
or
jl
aad
sahf
sub
pop
push
and
sbb
and
ret
mov
test
pop
movsb
negb
out
inc
adc
sbb
iret
scas
mov
mov
pop
lcall
rclb
stc
inc
dec
fadd
jo
xchg
or
shlb
in
add
add
aaa
aas
insl
bound
in
inc
push
roll
pop
push
mov
xor
inc
sbb
es
insb
pop
or
imul
jg
push
lret
mov
popf
sbb
arpl
and
icebp
xchg
cmc
mov
jb
mov
jnp
cmpsl
lcall
cmp
out
xchg
popf
int3
lahf
adc
sub
dec
sti
push
fnstenv
dec
xor
repnz
shrl
xchg
loop
das
inc
loope
dec
add
sbb
adc
xor
jge
adc
jmp
insb
out
jg
push
sbb
fisubs
push
pusha
push
lds
addl
and
sub
movsl
push
mov
xchg
adc
inc
xchg
outsb
jl
fwait
mov
mov
xlat
and
cli
jno
test
jo
push
lds
das
cmc
addr16
push
outsb
cmp
add
ret
scas
testb
add
lahf
loop,pn
fsts
mov
icebp
xor
mov
xchg
ss
mov
cs
xchg
ljmp
jo
cli
xchg
xlat
and
jg
jno
test
inc
dec
nop
das
lret
int3
in
movsb
popa
xchg
loope
and
mov
push
xchg
jbe
adc
jo
mov
mov
jno
mov
mul
insl
addl
repnz
pop
jae
stc
cmp
stos
sub
xor
pop
xchg
xor
xor
xchg
sbb
or
cs
mov
mov
jbe
nop
pop
cmp
ljmp
xor
push
sbb
xchg
add
sub
push
mov
jae
jg
jb
sbb
jp
pop
push
mov
xor
sbb
sub
push
ds
cmp
aas
cmpsb
jp
jmp
in
ja
jl
mov
movsl
inc
aad
push
loope
test
mov
sar
adc
inc
fisttpl
pop
sbb
mov
dec
cmp
rcrl
inc
or
fadds
aam
mov
mov
dec
fildl
cmp
cmpb
lret
mov
ficompl
xor
std
cmp
pop
sahf
in
inc
xchg
shrb
int
jge
loope
push
faddl
aam
cmpl
divl
xchg
jnp
cmc
enter
add
rclb
stos
scas
cmp
cmpsl
fisttpl
rorb
or
push
inc
dec
xchg
xlat
rorb
aam
adc
cli
push
mov
add
jl
pop
popa
push
shrd
mov
jmp
dec
xor
xorb
stos
lret
cwtl
pushf
xor
test
stc
rol
jmp
sub
mov
pusha
loop
add
dec
faddl
jnp
mov
adc
or
gs
movsl
cmpsl
xchg
mov
xchg
pop
leave
into
outsb
cld
ja
std
xlat
imul
outsb
inc
sbb
repz
adc
in
push
aad
out
scas
adc
dec
and
xchg
xor
jecxz
sti
push
xchg
or
gs
mov
cs
push
shll
dec
push
jge
dec
movsl
bound
ret
loopne
add
add
leave
push
dec
and
push
ret
xor
movsb
notb
or
add
jecxz
dec
cld
pop
rcrl
rolb
sub
jnp
inc
and
lods
jbe
cmp
jbe
mov
test
jne
orl
inc
push
lea
sub
cld
inc
loopne
mov
stc
add
mov
call
js
addr16
xor
push
fdivrs
xchg
icebp
ret
xor
sub
cmp
in
or
lcall
mov
loop
mov
cmp
pop
fs
lods
inc
dec
xlat
jmp
xlat
lret
mov
negb
fwait
gs
adc
sarl
imul
fxch
shl
pop
sbb
fadds
mov
loope
xorl
leave
inc
xchg
mov
test
and
sbb
inc
test
jg
ds
jmp
cmp
pop
push
adc
test
mov
inc
popf
inc
fldl
sar
push
jns
dec
insb
xchg
sub
or
cld
aam
cltd
inc
test
pop
inc
or
arpl
sub
mov
insl
dec
xchg
enter
xor
dec
pop
and
arpl
cli
imul
bound
lea
add
ljmp
sar
xchg
icebp
cwtl
xchg
mov
mov
sub
xchg
mov
orb
sbb
mov
or
inc
mov
sub
mov
pusha
divl
andl
pop
mov
addr16
fdivl
int
and
pop
push
cmp
adc
pop
popf
jp
mov
ja
jns
xor
cmp
cltd
stos
lret
pop
inc
add
outsb
iret
xor
cmp
andb
pop
leave
loopne
inc
cwtl
loope
movl
inc
ljmp
push
add
scas
loope
xchg
lret
lods
sub
inc
xor
pop
cmpsb
push
jecxz
adc
dec
adc
test
adcb
js
bound
lcall
mov
add
sti
lods
xchg
ret
pop
fucompp
ficoms
out
cltd
mov
adcl
or
sub
daa
cs
arpl
mov
or
stc
insl
pop
pop
sbb
jnp
push
xchg
loope
negl
imul
enter
dec
sub
xor
arpl
adc
data16
ja
push
or
ss
pop
or
adc
or
cmpsb
lds
test
icebp
enter
pop
stc
mov
mov
hlt
hlt
adc
std
or
int3
inc
mov
lea
sbb
repnz
xchg
push
jmp
sbb
lcall
call
xorb
icebp
jb
inc
test
xchg
xor
mov
and
lret
dec
mov
push
dec
inc
cvtpi2ps
fldl
and
out
mov
mov
mov
pop
outsb
xor
jp
inc
cwtl
and
xorl
aas
xchg
push
jl
stos
dec
out
movsb
sbb
cwtl
add
and
aas
lcall
mov
pusha
aad
inc
aaa
mov
in
cmp
xor
ret
pop
ds
cmp
imul
imull
in
jnp
sbb
sub
push
fdivrl
out
out
fdiv
push
ljmp
outsb
in
lahf
aad
pop
sahf
dec
sub
cmp
mov
fstl
insl
mov
sub
pushl
cwtl
mov
lods
xchg
add
push
lcall
shll
pop
sti
call
dec
pop
clc
movsb
mov
outsb
out
jmp
mov
push
out
cmpsl
push
lds
pop
rclb
daa
clc
xchg
xchg
cmp
and
or
adc
pop
call
jle
lea
iret
call
push
inc
mov
lret
popl
sub
lret
mov
add
sbb
push
pop
mov
mov
sub
adc
jbe
daa
push
pop
xlat
adc
mov
iret
xor
addb
ficoms
jmp
ljmp
xchg
jns
shlb
sahf
loopne
popf
add
fsts
arpl
mov
scas
mov
sbbl
pop
add
aad
mov
sbb
leave
lahf
lahf
rcr
es
add
cld
jp
orb
jo
xchg
mov
push
mov
loopne
rclb
adc
or
pop
repz
enter
or
leave
push
push
je
dec
fcmovb
bound
and
and
cmc
xchg
mov
stos
ja
inc
rcll
pop
bound
xchg
sbb
lahf
jno
roll
adc
dec
setle
cmp
adc
push
lds
and
mov
aad
mov
aam
inc
movsb
test
push
mov
xor
xchg
movsb
cmp
jecxz
add
imul
add
nop
inc
add
push
lret
push
cmpsl
aad
popa
add
add
push
lcall
fbld
adc
aas
sub
cwtl
out
std
xor
lahf
nop
dec
clc
lahf
sub
lods
xor
cmc
sub
dec
ljmp
mov
ja
push
movsl
clc
mov
jp
adc
adc
bound
mov
mov
xchg
mov
jge
into
out
jl
in
rcll
scas
xchg
mov
sub
sbb
and
sub
xchg
push
aaa
arpl
fsubl
popl
cmp
lcall
jg
movsb
lcall
or
pop
jmp
aas
inc
lods
std
dec
mov
data16
mov
adc
mov
sub
call
insb
mov
push
sbb
mov
shll
sbb
and
xorl
add
mov
add
scas
xor
push
in
scas
daa
jg
into
xorb
pop
dec
cmp
hlt
fs
rep
insl
pop
shr
bound
pop
scas
pusha
jbe
cmpsl
pop
adc
push
rorb
mov
js
aad
cmpl
cltd
popf
adc
cmpsl
cmp
std
xor
adc
inc
insb
pushf
adc
push
fsubl
xchg
popl
mov
sti
loop
dec
dec
mov
lahf
fsts
xchg
sbb
xor
andb
mov
pop
push
in
sbb
or
jl
fxch
xor
sub
test
jg
xchg
and
ss
dec
sbb
add
mov
dec
xor
dec
insl
jbe
mov
cld
sub
cwtl
and
loop
dec
sbb
sbb
adc
xor
test
xchg
and
cld
ds
adc
or
cmp
inc
pop
xor
inc
es
pop
in
pop
aaa
aad
dec
sahf
jg
push
sub
xor
mov
ja
orb
in
jecxz
push
out
divl
cmp
sub
cmpsl
aad
mov
dec
clc
out
in
dec
addl
push
mov
push
lods
mov
nopl
cmp
xor
les
in
cmp
mov
aaa
and
push
xchg
daa
shlb
mov
xchg
adc
pop
or
xor
sbb
dec
lcall
lods
add
decl
cld
mov
cmp
mov
pop
mov
ss
movsl
daa
xchg
dec
mov
xchg
pop
xchg
xchg
leave
cwtl
jbe
push
ret
andnps
mov
out
out
lock
dec
inc
shr
out
addr16
mov
add
jl
sbb
push
leave
mov
mov
addl
pop
jbe
flds
xor
xchg
shl
push
in
inc
cltd
sub
jne
jge
xor
or
mov
cs
test
movsb
sbb
rcrl
into
adc
call
mov
or
popa
out
pop
lcall
mov
or
test
jae
mov
mov
lods
sub
addr16
or
stos
mov
sbb
mov
pop
ret
lea
and
or
push
bound
movsb
ret
and
cmp
xchg
push
jge
push
loopne
movsb
add
mov
dec
pop
orl
jle
fisubrs
arpl
cmp
sub
aas
pop
mov
js
xor
pop
xchg
cbtw
fwait
cmp
test
mov
leave
std
and
inc
outsb
lods
xchg
les
mov
adc
adc
sarb
jno
jl
movsb
ret
insb
push
imul
mov
in
in
cltd
enter
jne
push
cltd
pusha
or
add
push
or
je
in
div
cmp
xchg
aad
mov
cmpsl
sub
adc
cmp
mov
cmpsb
adc
push
das
out
jle
add
inc
fwait
mov
adc
jmp
sarb
mov
sub
push
jb
sbb
mov
mov
leave
cmp
pusha
mov
cmp
jns
add
test
stc
imul
addb
jg
frstpm(287
cld
push
or
int
jl
ret
push
loopne
data16
fwait
pop
bound
mov
inc
xchg
or
cmp
pop
imull
cld
mov
pop
cmc
push
or
push
loopne
jbe
push
add
out
loop
push
cmp
imul
or
hlt
dec
pop
mov
push
lds
sbb
jmp
mov
push
inc
jg
jmp
pushf
mov
adc
je
sbb
invd
lcall
mov
add
and
data16
xor
in
outsb
enter
bsf
ja
fnstsw
sbb
cmp
mov
in
mov
mov
lods
cli
in
pop
inc
pop
pushf
popf
pop
hlt
jecxz
or
mov
fsubs
push
mov
je
jo
cmpsl
xor
call
arpl
mov
xor
hlt
mov
cmpsl
add
inc
ja
leave
aad
arpl
loope
aaa
xchg
scas
inc
jae
cmp
sar
daa
adc
les
ret
jmp
xor
movsl
jecxz
aam
out
push
pop
push
stos
push
mov
loopne
int
lock
fs
sbb
das
mov
jno
sbb
cmc
pop
mov
clc
cmp
mov
mov
out
push
cmpsl
divb
jb
in
movsl
mov
inc
and
xor
sti
scas
movsl
jmp
and
rep
fbstp
repz
adcl
mov
lods
dec
xor
pushf
inc
js
add
jns
orl
in
leave
fidivrl
inc
xchg
cltd
sbb
addr16
rol
lret
mov
jae
sti
rclb
xor
ret
sti
jmp
inc
in
cmp
div
mov
ljmp
roll
jo
lcall
xchg
fcoms
iret
push
scas
and
and
loopne
mov
sahf
dec
dec
xchg
test
lret
ds
in
clc
imul
pushf
xor
push
out
push
or
gs
pop
scas
into
or
cs
aad
mov
movsl
sahf
bound
jns
inc
cmpsb
xor
repnz
lds
call
test
ljmp
sarb
loope
test
add
rcrb
dec
push
nop
pop
add
lock
imul
add
adc
pushf
cmc
fsubl
xchg
movsl
sbb
icebp
cwtl
js
pop
and
cmp
imul
lea
xor
mov
aaa
adc
int
clc
fwait
jg
int
xor
lds
xor
pusha
mov
sbb
mov
mov
push
inc
cmp
sub
rcll
lret
dec
push
stos
cmp
lret
ja
cmp
sti
adc
repz
test
lods
arpl
lock
and
or
xchg
cmp
stos
sub
shrl
pop
mov
inc
lods
repnz
imul
orl
or
xorl
fdivrp
aam
pop
mov
sbb
inc
cwtl
stos
mov
push
add
mov
xor
jno
arpl
cwtl
sahf
mov
std
or
es
dec
gs
sahf
push
add
dec
sub
adc
pop
fld
fldl
adc
cmpsb
xor
mov
sbb
clc
in
ss
repnz
push
and
pusha
incb
mov
into
iret
jecxz
jbe
cwtl
pop
outsl
lds
mov
xchg
sbb
dec
jecxz
jecxz
pop
xlat
inc
cld
fdivp
ftst
in
pop
in
pop
ja
mov
leave
arpl
jne
les
scas
frstor
jmp
add
jmp
lret
add
push
sub
out
fbld
xchg
inc
stos
in
push
jmp
stos
mov
pop
xchg
repz
lods
into
and
push
repz
cmpl
out
or
fidivrs
mov
dec
fcoms
jns
aad
pop
sub
popf
fisubs
add
jmp
aas
and
movb
jnp
mov
fists
int
shlb
mov
repnz
jmp
aam
xor
mov
add
daa
lcall
movsl
xchg
xorb
leave
sbb
and
mov
and
cmp
out
fxch
jae
jecxz
sti
fcoml
std
arpl
movsb
test
mov
sbb
xor
jl
sbb
jle
mov
aam
setb
cmpsb
nop
sub
mov
push
cwtl
popf
adc
ret
nop
icebp
jns
stos
nop
std
fmuls
scas
cmp
in
decb
mov
out
jle
sub
enter
inc
and
lds
add
loope
xchg
dec
sbb
push
movsl
mov
popf
in
inc
bnd
cmc
ficomps
or
popf
cmpsl
mov
mov
inc
inc
mov
fs
mov
mov
test
outsl
or
add
push
inc
cmpsl
xchg
or
xchg
pop
std
xchg
addl
mov
in
dec
xchg
mov
inc
and
push
andl
mov
addr16
sbb
add
push
inc
imul
clc
pop
out
mov
or
jae
test
lock
xor
dec
in
imul
or
jle
xor
and
xchg
push
inc
sbbl
in
dec
test
loop
out
xor
mull
adcl
dec
add
mov
test
or
mov
or
das
push
fbstp
ret
addl
push
and
lea
mov
aaa
out
pop
fcoml
or
jle
or
inc
ljmp
incl
jb
idivl
mov
jb
mov
pushf
es
lahf
jae
lock
lret
pushf
push
xchg
jo
jno
or
mov
fstps
cmp
ret
loope
loope
cld
test
cmp
ret
in
jl
push
cmpsb
push
xchg
mov
push
sub
data16
stos
mov
or
mov
jle
push
xchg
inc
jmp
loop
ljmp
je
lret
lods
sub
test
sbb
and
cmp
inc
insl
aad
ljmp
stos
jp
lods
sub
adc
int3
mov
adc
popf
lods
mov
mov
and
rorb
xor
movsl
ja
mov
dec
adc
jbe
mov
pop
call
cmpsl
adc
incl
cld
dec
sbb
jb
inc
pusha
fwait
int3
mov
sbb
mov
out
pop
xchg
out
aas
xor
das
lahf
inc
sbb
sbb
dec
inc
xchg
int3
jae
imulb
es
push
jg
outsb
dec
pop
ret
insb
ljmp
and
cmp
dec
and
std
es
sbb
daa
jne
jae
lods
lea
pop
inc
push
lahf
data16
and
shlb
xchg
mov
mov
pop
fcmove
repnz
pop
out
xchg
pop
push
fildl
mov
cmpsb
dec
div
adc
gs
jecxz
jno
ficoml
call
mov
pop
push
mov
dec
pop
loope
push
shll
mov
mov
xchg
adc
mov
jl
sbb
neg
fists
add
mov
add
push
js
imul
pop
mov
xchg
rolb
cs
adc
xchg
mov
cli
xchg
roll
sbb
xlat
dec
test
je
in
mov
add
or
gs
mov
mov
insl
mov
aad
jge
cld
adc
or
mov
lahf
dec
adc
mov
ficoml
lds
sub
ds
jp
pop
mov
sti
ljmp
ret
mov
aam
inc
rol
pop
bound
das
ja
sbb
lods
cmpsb
fdecstp
sub
lea
add
sbb
les
fsqrt
sub
mov
call
sarb
and
imul
cmpsb
scas
in
dec
in
movsb
add
jl
and
jb
in
mov
ret
pop
lcall
cmpsl
mov
jae
mov
mov
filds
dec
mov
stc
lcall
shrl
int
dec
jmp
loope
cmp
sub
add
jb
jbe
inc
push
cmp
sarl
int3
in
mov
pop
or
stos
jmp
push
dec
lret
js
insb
popf
jmp
aad
adc
test
int
je
cmpsw
into
insl
dec
lds
xchg
scas
mov
out
enter
pop
out
fmuls
imul
shl
jle
repz
add
js
push
insb
jle
add
mov
pop
push
inc
xchg
enter
pop
sub
mov
enter
jne
lods
out
mov
andl
sbb
sub
sub
xor
aad
lcall
out
jbe
fbstp
scas
push
lea
inc
pop
shll
pop
hlt
adc
lret
mov
mov
aas
sub
push
sbb
lods
lods
dec
andl
test
jae
mov
lods
cmp
jbe
and
add
xor
jne
and
repz
imul
jns
cmc
cltd
fiaddl
xor
arpl
cld
rcll
mov
fsts
sti
ljmp
jg
mov
jl
sbb
cmp
loope
pop
push
xchg
cmp
aas
aad
sub
jp
mov
lahf
cmp
pop
fiadds
xorl
and
sub
xchg
push
mov
push
in
xor
jns
or
sbbb
mov
movl
mov
lods
aas
mov
fnstenv
pop
sub
adc
out
mov
adc
test
in
loop
ds
test
test
dec
fistpl
test
xchg
out
aas
out
mov
mov
sub
lret
adc
stc
mov
test
jae
jbe
jno,pn
shlb
in
loop
dec
add
pop
fsubl
js
loopne
retw
mov
mov
orl
scas
sub
into
movsl
push
push
or
and
fildll
fldcw
mov
and
fidivl
movsb
pop
faddl
lock
ret
xchg
jmp
std
sub
pusha
insl
movsb
cmp
aaa
mov
xor
sarb
sub
stos
add
xchg
cmp
adc
xor
aas
and
xor
lock
pop
cld
in
popa
cwtl
pop
cmp
in
or
cmc
mov
jmp
cwtl
jnp
insb
testb
pop
sbb
outsb
loop
adc
and
hlt
xchg
clc
jns
loopne
movsl
xor
negl
arpl
fcmovnb
pushf
jl
mov
jg,pt
sbb
mov
lods
insb
ret
rcrb
movsl
sub
mov
adc
cmp
cmp
mov
ficoml
scas
bound
insb
push
ja
mov
incl
jno
loop
scas
adc
inc
bnd
sahf
dec
out
inc
movsb
inc
add
pop
and
sar
cmpsl
mov
test
mov
adc
and
std
or
jmp
gs
imul
sub
idivb
and
dec
lea
enter
push
push
test
testl
les
in
mov
in
sahf
and
ss
adc
jmp
out
mov
jmp
lret
lods
lock
xor
clc
push
insb
rcrb
add
rolb
xchg
dec
lahf
adc
pop
add
int3
xor
les
adc
or
mov
or
shl
push
jl
inc
push
fdivp
push
jno
mov
ds
movsl
xor
or
fmul
mov
xchg
xlat
out
gs
cmp
cltd
or
insl
lahf
out
dec
jno
repz
add
popa
ds
mov
int3
cmp
sbb
pop
pop
add
add
iret
xchg
mov
lahf
sti
xor
and
jge
cltd
xor
mov
jecxz
add
pop
or
ds
outsl
dec
xchg
loope
xchg
xchg
jmp
out
jne
inc
lret
add
inc
lods
and
sar
sti
inc
add
xchg
es
imul
mov
add
imul
addr16
mov
dec
stos
mov
mov
jno
out
xor
and
insb
mov
xchg
outsl
pop
mov
jp
adc
cmp
xchg
dec
sub
pop
scas
lea
pop
xchg
ficoms
cmpsl
data16
jno
ss
jecxz
inc
outsl
cmp
enter
stc
dec
sub
and
imul
cmpb
jns
add
sub
adc
sbb
xlat
mov
add
add
mov
jne
scas
clc
pop
in
aaa
in
lcall
addl
in
outsl
out
insl
mov
ret
nop
sbb
mov
lods
les
iret
arpl
insb
call
lea
cmp
stc
jnp
mov
daa
ja
notb
inc
lods
xchg
push
sbb
mov
lods
push
scas
in
pop
mov
mov
xor
mov
adc
loope
mov
inc
into
aas
leave
into
mov
movsb
mov
jne
sbb
cmp
pusha
mov
lcall
lds
push
sti
xor
out
sub
leave
adc
push
adc
sbb
dec
cmp
sbb
pop
adc
lahf
sti
xor
movsl
inc
mov
and
cmp
jnp
pushf
scas
push
test
jl
dec
scas
pop
int
adc
dec
mov
mov
jmp
mov
push
shlb
adc
daa
fwait
push
mov
xor
rclb
xchg
cltd
daa
jo
push
aam
dec
fs
pop
gs
xor
les
push
shr
inc
jnp
out
sbb
das
aas
mov
lret
jmp
int3
push
lret
lret
dec
push
fisttpll
in
pop
and
in
sbb
mov
fstl
add
xor
jnp
cmp
mov
js
addr16
and
xchg
imul
inc
lret
push
imul
fs
into
leave
jge
in
push
add
cmp
pop
pop
or
cwtl
test
pop
sbb
movsl
cmpsb
jp
sub
jg
repz
pop
or
sub
mov
lods
outsb
jae
mov
pop
dec
shll
add
jl
mov
xchg
xchg
push
xchg
lods
in
adc
cmpsl
mov
xchg
sahf
leave
mov
lahf
test
movsb
mov
and
dec
repz
inc
push
flds
int
cld
mov
adc
pop
push
mov
leave
bound
dec
leave
sub
mov
rcrb
xchg
lret
mov
inc
je
inc
jo
mov
mov
push
dec
pop
and
shrb
and
mov
into
andl
jle
mov
jns
sbb
push
pushf
jl
sub
js
daa
sub
add
fsubrl
xchg
jo
jg
imul
jne
dec
jae
xlat
inc
lock
mov
repz
adc
aad
xor
cwtl
xor
push
popa
decb
xchg
test
mov
orb
xchg
sahf
or
sbb
jnp
lcall
pop
push
jmp
jmp
pop
xlat
pop
shrb
xchg
adc
cwtl
sbb
xchg
sarl
insb
fstpt
movsl
pop
movb
hlt
xchg
test
sbb
fisttpl
sbb
cmp
repnz
jp
inc
imul
aam
xor
lods
loop
sbb
pop
test
mov
or
xchg
sub
into
and
nop
push
in
mov
sbb
dec
scas
xor
sub
shrl
stc
and
cld
cmpsl
jnp
push
xor
outsb
out
mov
fisttpll
xor
in
jb
and
xchg
cli
and
das
or
shlb
add
les
mov
dec
outsb
test
xchg
rcr
sarl
lcall
lret
ret
icebp
cmp
dec
mov
inc
out
and
lock
iretw
dec
and
bound
jae
adc
test
jo
sub
lods
xor
and
fldl
jge
mov
xor
movsb
int
mov
push
inc
xchg
adc
dec
flds
push
push
test
rcll
gs
add
adc
scas
sbb
xor
xor
and
mov
mov
mov
xchg
leave
and
imul
inc
mov
cs
aas
jmp
fcomps
ss
out
fimuls
cli
outsl
adc
cltd
or
xor
mov
push
add
push
lock
xlat
cmp
lret
mov
sub
adc
xchg
mov
into
dec
fwait
jns
jns
jnp
mov
fidivrl
mov
add
ljmp
cmp
std
push
xchg
in
jecxz
push
rcr
andb
out
inc
mov
pop
cli
scas
push
mov
dec
xchg
mov
xchg
andl
and
dec
jnp
sub
xorl
mov
cltd
movsl
pop
sbb
pushf
adc
out
lock
popf
std
mov
das
ds
adc
mov
outsb
jo
in
fidivrs
add
push
dec
and
leave
inc
ficoml
aaa
pop
jecxz
orl
inc
jmp
out
subb
mov
fldt
sub
sbb
push
push
orl
cld
mov
jne
inc
xchg
cmp
inc
aas
in
xorl
daa
pop
inc
mov
movsl
in
mov
cmp
xchg
loopne
arpl
movsl
dec
js
cmp
int
pusha
iret
ds
inc
lods
sub
cmc
push
add
adc
loopne
pop
jne
adc
test
cmp
ljmp
mov
imul
mov
adc
jge
insb
ljmp
xchg
adc
sbb
js
push
inc
xchg
in
dec
jnp
test
xor
je
dec
cmp
fsub
enter
jo
push
and
push
mov
inc
xchg
mov
cli
sbb
pop
add
test
sub
mov
lahf
jp
push
sub
dec
adc
push
idiv
mov
dec
pop
pop
mov
fs
jae
pop
pop
adc
cmp
jmp
xchg
mulb
jne
mov
test
jle
ss
int3
dec
pop
shrl
stos
outsl
fsubrl
ss
sbb
je
pop
inc
xchg
add
hlt
dec
and
add
iret
push
imul
cld
mov
cmp
call
std
sahf
mov
aam
ret
pop
add
sahf
mov
jne
sbb
push
js
shll
and
cs
lcall
cmp
std
ljmp
fidivrs
aam
jo
pop
cli
fdivr
sub
xor
outsl
out
push
clc
mov
addr16
std
enter
popf
int3
mov
jmp
xlat
cmp
xchg
push
pop
sub
test
jbe
xchg
cs
sub
loopne
inc
cmp
inc
ja
cmp
js
fisttps
mov
out
push
mov
cmpsl
lcall
fadds
mov
aas
repnz
mov
nop
pop
xchg
add
inc
add
xor
notl
jmp
cmp
int3
xor
shrl
rclb
mov
push
dec
pop
shll
mov
mov
adc
lds
ja
jmp
sub
cli
mov
mov
loopne
pop
loopne
dec
lds
mov
ret
into
lods
xor
and
stc
addr16
call
jecxz
adc
arpl
or
ja
ret
or
mov
sub
xchg
pusha
pop
sti
arpl
sbb
into
push
insl
mov
mov
aaa
jno
and
stos
int3
adc
inc
popf
aaa
sub
add
pushf
enter
sbb
sar
dec
mov
mov
fstpt
shrb
lock
mov
dec
or
pop
mov
inc
jo
cli
dec
enter
add
add
nop
in
mov
xor
insl
es
mov
add
adc
aam
and
mov
cmp
push
push
fwait
and
rcrl
lods
push
rcrl
inc
imul
lods
push
in
sub
rorb
lcall
fbstp
je
sarb
sub
or
ljmp
sti
xor
cmp
dec
adc
inc
pushl
cltd
cld
movl
xor
push
push
sub
mov
loop
idivb
add
sbbb
sti
lcall
mov
push
push
aad
xchg
inc
mov
ror
lock
cmp
bound
add
scas
lret
push
push
pop
or
ret
leave
aad
imul
ret
bound
mov
cmpsl
push
sti
pop
jecxz
mov
pop
hlt
aaa
daa
mov
jbe
lret
cmp
dec
ror
jno
sbb
cmc
pop
mov
aas
mov
xor
xchg
mov
cmc
lahf
mov
dec
lods
push
loope
add
iret
mov
fadd
pop
mov
cmovnp
sbb
jb
stos
dec
or
xor
inc
insl
adc
or
adc
pop
pop
in
jle
mov
in
stos
sarb
inc
jle
es
iret
sbb
bound
movsb
push
inc
mov
lret
push
sub
xchg
gs
shlb
add
mov
das
sti
dec
ret
lahf
rcrb
roll
add
enter
test
dec
cwtl
dec
pop
inc
push
arpl
cltd
pop
lock
add
inc
mov
sub
add
push
jp
inc
fsts
add
dec
mov
adc
lret
cmp
sbb
mov
mov
outsl
repnz
sub
or
sbb
sahf
sub
pusha
ds
mov
xchg
and
pop
jo
arpl
sub
lds
loop
sbb
call
pushf
stos
shlb
lret
cmp
jg
mov
xchg
aad
in
orl
adc
loop
in
in
loope
ret
jbe
pop
cli
rol
ret
lret
loop
test
jmp
mov
or
add
jp
ret
add
push
leave
outsl
pop
scas
sbb
cmpsl
popl
ret
rcrb
fsts
loope
mov
aaa
jle
sbb
out
and
loop
push
faddp
pop
inc
add
stos
or
xor
add
mull
lds
inc
mov
scas
mov
stc
jecxz
fsubrs
lods
fiaddl
pusha
jae
xor
mov
ret
sbb
add
lea
repnz
out
dec
sbb
jo
iret
cld
aam
xchg
jg
jl
sub
idivl
imul
lods
aas
scas
inc
mov
jne
movsb
adc
idivb
in
out
movsb
adc
mov
sub
cmp
pop
cmp
sti
jg
adcl
mov
cmc
cmp
es
dec
and
cmp
mov
inc
movl
sahf
add
rorb
mov
mov
or
adcb
sub
pushl
jge
shrb
cltd
je
testb
arpl
lods
fs
mov
test
inc
mov
sbb
icebp
jne
inc
outsb
push
dec
subb
dec
mov
loop
cld
shl
jmp
mov
xor
loop
das
sbb
cld
lods
cmpsl
outsb
leave
int
mov
dec
mov
sbb
inc
pop
dec
shl
push
push
push
mov
aad
mov
subb
sub
rol
sarb
loop
push
push
loopne
xor
mov
and
call
les
loopne
sub
loope
push
out
scas
ja
pop
out
push
add
jb
or
xor
sub
mov
lods
cmp
xchg
mov
andb
add
mov
lods
jmp
dec
subb
push
cmp
out
loope
adc
mov
loopne
pop
jne
sub
fbld
xchg
mov
dec
daa
mov
dec
cmpsb
mov
pop
add
jle
inc
or
mov
cltd
scas
cs
cmpsl
stc
mov
mov
divl
and
cmc
pop
lods
adc
in
sahf
mov
loope
cli
xor
pop
xlat
pop
ds
into
lahf
inc
push
xchg
test
iret
mov
loop
ret
jnp
push
sar
xchg
pop
imul
in
ret
mov
cmp
add
movsb
mov
cmp
xchg
iret
jg
push
sbb
dec
mov
pop
xchg
jne
or
in
dec
xchg
xlat
sub
clc
rolb
mov
ljmp
sub
ds
mov
test
fs
inc
fiaddl
push
dec
cld
push
or
cs
mov
inc
jb
cmp
int
int
sbb
dec
in
and
inc
das
dec
aas
gs
xlat
in
cmpsl
sub
rclb
adc
push
out
push
xchg
and
or
je
jge
cmp
scas
decl
lea
adcl
test
pop
hlt
pop
bswap
or
addr16
insl
dec
inc
leave
push
add
out
fwait
test
popa
pushf
leave
popf
lret
repnz
push
in
and
xchg
lods
cli
push
mov
and
jbe
xor
pop
int
icebp
outsb
cmp
aas
jp
and
sub
in
xor
adcl
pop
dec
adc
mov
out
add
xchg
rolb
out
push
jb
sbb
addl
insl
mov
adc
jl
push
cmp
inc
in
fldl2t
jge
std
dec
adc
sub
stc
xor
dec
adc
mov
or
and
mov
aad
hlt
testb
sub
adc
mov
cmp
mov
or
call
mov
scas
inc
push
mov
aam
shll
and
xchg
cmp
testl
mov
sub
sbb
sub
mov
outsb
xor
push
daa
push
dec
dec
dec
popf
into
adc
lock
jl
loopne
test
cmp
movsl
cltd
mov
stos
subl
lods
mov
inc
sub
insb
cltd
out
mov
mov
fwait
xor
outsl
pushf
jl
sbb
or
scas
out
mov
mov
lds
mov
inc
mov
mov
fldl
jne
stos
dec
add
cmp
jae
dec
push
inc
ljmp
cwtl
stc
cmpsb
mov
pop
push
and
cwtl
mov
sbb
xchg
mov
pop
ret
lea
pop
test
lahf
cmc
je
imul
mov
jne
push
in
mov
push
jmp
or
es
rcll
mov
addr16
clc
mov
ret
in
negl
imul
add
xchg
gs
enter
jp
jl,pn
negl
xchg
mov
jb
stc
mov
gs
mov
insb
stos
movsb
push
push
xchg
mov
xchg
adc
lahf
mov
loopne
xchg
fcoms
sbb
orb
imul
jp
fwait
sahf
cs
mov
fwait
mov
xchg
mov
out
or
cmpsb
shlb
push
xchg
mov
cmp
sahf
xor
mov
int
jbe
xor
xlat
mov
inc
jecxz
lods
adc
dec
push
jl
cmp
call
xchg
jle
xchg
xchg
inc
mov
fucomp
andb
push
add
cli
xchg
fdivs
xchg
inc
and
mov
jnp
test
cwtl
leave
decb
sub
or
mov
mov
and
mov
lcall
and
push
inc
lock
fbld
or
sti
fnstenv
mov
int
jbe
push
daa
test
mov
xor
sti
or
int3
dec
lea
nop
imul
into
inc
adc
adc
std
ret
arpl
in
scas
test
jecxz
mov
jecxz
sbbb
lahf
cs
out
in
xlat
add
sub
fsubr
jle
push
cli
sbb
sbb
incl
push
movsl
or
call
or
imul
or
aad
dec
cmp
js
call
ret
sbb
xchg
inc
fildl
mov
hlt
mov
and
cmp
ss
push
repnz
ret
cmc
push
jp
shll
sub
imul
test
cs
fiaddl
mov
fldenv
lods
cltd
lock
sbb
mov
jg
out
in
out
js
daa
lods
pop
push
mov
insb
push
inc
mov
dec
bound
aas
enter
dec
fnstcw
cmpsl
or
test
jl
fadd
xor
sub
daa
jnp
outsl
lahf
mov
in
push
mov
inc
popf
std
test
gs
aam
jb
loop
cli
cmc
out
mov
adc
fists
mov
jae
pop
cmpsb
dec
out
bound
push
and
js
sub
push
je
repz
fs
lcall
aaa
push
aaa
adc
ja
cmp
ret
test
adc
or
in
into
repz
hlt
inc
jecxz
in
inc
fnstenv
xor
shrb
outsl
sbb
in
jmp
mov
mov
popa
fwait
push
leave
add
sub
sbb
push
adc
mov
aas
xchg
inc
mov
test
xor
adc
adc
cmp
mov
cmpsl
loopne
xchg
sbb
arpl
xor
xor
push
xchg
jb
pop
cli
push
dec
loope
lahf
mov
ret
or
cli
mov
adc
or
add
xlat
roll
and
adc
jp
pop
push
adc
mov
mov
cmp
call
sub
pushl
loope
enter
mov
popa
jmp
mov
cs
imul
sbb
int
ja
push
or
ss
pop
pop
xchg
xor
add
xor
popa
xchg
cwtl
xchg
push
jmp
xchg
mov
out
int3
rorl
inc
rorb
jmp
cmp
rcr
mov
xchg
nop
shlb
pop
inc
pusha
jae
jo
shlb
into
das
lahf
nop
dec
cmpsb
idiv
ljmp
mov
jg
cmp
aaa
cmpsb
inc
cmc
leave
or
fistpll
xchg
aam
call
iret
inc
xor
xor
sti
movb
sbb
int
xor
enter
or
mov
xor
scas
lret
xlat
stos
ret
sti
pop
sahf
sbb
and
sub
lock
dec
das
lds
ljmp
or
lret
add
scas
clc
cmpsb
in
aam
std
iret
dec
pop
push
lods
dec
aam
adc
pop
cli
mov
sbb
adc
insb
ljmp
cmpsb
movl
jp
lcall
iret
pop
mov
mov
push
inc
int
out
inc
sbb
aam
lea
test
sub
ds
pop
lret
std
add
sub
push
jecxz
sahf
push
cmpsl
and
test
dec
test
ror
or
xchg
and
and
outsl
dec
push
fbld
sbb
sub
mov
pop
add
movsl
pop
cmpsb
jmp
jp
mov
shr
sub
leave
mov
or
xor
js
jle,pt
out
cmp
cmp
mov
enter
adc
nop
push
push
mov
mov
lea
scas
push
cmpsl
into
xor
mov
xor
arpl
push
outsb
adc
loope
imul
xchg
test
dec
xchg
test
and
imul
rorb
insb
aas
dec
push
push
xor
cmp
pusha
cli
mov
lcall
sub
jo
xchg
insb
dec
lahf
jg
in
ss
xor
pop
fidivrl
jo
pop
inc
jp
adc
and
outsb
or
push
xchg
jge
js
mov
mov
mov
fstpt
popw
jb
mov
xor
mov
in
push
adc
bound
rclb
push
mov
sarl
loop
loop
iret
lcall
shlb
ret
dec
xchg
xchg
ret
mov
and
jns
pop
sbb
adc
std
pop
in
mov
xchg
out
and
movsb
scas
mov
mov
test
sbb
lods
mov
divb
push
pop
int
stc
xor
dec
das
mov
movsb
dec
xchg
add
repz
pop
arpl
cmc
frstor
jg
inc
ret
cmp
addr16
sbb
push
dec
and
cmpsl
pop
ja
insl
out
jnp
arpl
pop
shrl
idivl
push
es
sub
inc
test
or
mov
out
jne
sbb
inc
cmp
in
iret
fsubp
mov
sarl
jae
je
or
pop
aad
inc
pop
cld
jb
fs
xchg
call
das
mov
jl
clts
sti
pop
out
xchg
add
adc
mov
mov
das
mov
add
xchg
jb
shll
dec
addr16
cli
push
sub
scas
mov
iret
xchg
inc
jle
push
outsl
mov
sub
add
jne
push
sub
push
jo
in
shll
ficomps
aad
ds
mov
push
cmp
jecxz
daa
std
gs
ret
adc
lods
into
std
xor
daa
rcrb
jge
dec
pop
xchg
cmpsb
rol
jl
popf
outsb
psadbw
dec
jns
stc
in
cmp
push
mov
xchg
aad
popf
push
mov
sti
movsb
pop
xor
std
sub
test
popa
pop
xchg
inc
mov
mov
mov
pushf
xor
push
or
jl
push
ficompl
inc
sti
clc
dec
pop
lods
mov
add
push
mov
jb
pop
adc
sub
lods
inc
in
hlt
pop
adc
lcall
fldt
or
mov
rorl
ljmp
sbb
out
dec
mov
inc
push
fstpl
iret
pop
sbb
data16
mov
arpl
inc
jl
ret
rol
mov
fisubrl
jmp
cmpsb
and
leave
dec
sub
mov
mov
rcrb
call
ficoms
pcmpgtb
stos
js
ss
mov
dec
fsubrs
dec
push
sti
xchg
pop
les
jp
cmp
lret
pop
test
mull
xlat
add
xor
mov
sub
aaa
lahf
cmpsl
movsb
mov
ret
fstps
lods
cltd
pop
inc
jecxz
out
insb
rcrb
cmp
xor
cmpsl
pop
cmc
jecxz
pop
mov
push
into
sbb
inc
ss
subb
movsl
jecxz
xlat
mov
mov
lock
or
lods
into
xchg
add
add
adc
sub
shrl
or
and
lahf
pop
mov
pop
push
push
das
mov
jmp
rorl
jle
push
dec
sbb
push
jnp
faddp
bnd
lods
fistpll
fbstp
xchg
out
and
roll
push
pop
ret
pop
lea
pop
xchg
roll
fs
cld
and
lret
les
ljmp
es
nop
inc
sub
mov
dec
addr16
test
das
lahf
push
bnd
cmp
mov
jnp
pusha
cltd
clc
into
ret
pop
pop
mov
imul
jno
mov
cmp
cld
movsb
xchg
aad
sbb
lods
repnz
dec
pop
stos
iret
js
test
lret
add
dec
fxch
mov
ret
adc
add
fucomp
loop
out
xlat
and
mov
fwait
lret
shl
and
or
adc
lahf
sahf
scas
imul
insl
adc
es
int3
faddl
and
pusha
mov
xor
push
cmpsb
orb
divb
js
mov
push
or
out
cmp
orl
mov
gs
shlb
das
cltd
add
idivb
sub
and
lret
arpl
jecxz
std
mov
jge
mov
loop
cmp
push
addl
mov
enter
int
push
or
jmp
adc
mov
in
dec
test
enter
inc
dec
int
fidivrl
aad
je
cltd
das
ja
lret
cmp
cmp
adc
adc
mov
subb
inc
rcrl
addr16
xchg
scas
iret
leave
notb
mov
fistpl
dec
cmp
bound
cmp
inc
adc
sbb
insb
outsl
pushf
adcb
inc
pop
pop
in
stos
mov
lods
jns
adc
repnz
pop
and
icebp
fnstsw
test
bound
hlt
dec
data16
lock
pop
scas
dec
pop
cmpb
sub
fwait
shlb
repz
pop
arpl
ds
arpl
and
jmp
test
test
add
ds
clc
mov
test
push
adc
popf
stc
cmpsb
hlt
or
xor
sbb
sub
lods
lret
std
int3
jp
cli
addr16
push
mov
xchg
pop
std
int3
inc
xchg
nop
in
inc
or
hlt
push
pop
or
pop
scas
loopne
cmp
out
inc
jnp
dec
data16
idiv
dec
dec
jae
pop
data16
das
xor
mov
or
cmp
xchg
add
dec
stos
cld
pushl
jb
sub
or
mov
mov
sbb
add
pop
cwtl
std
pop
arpl
inc
addr16
jno
shll
sbb
mov
addr16
xchg
mov
out
dec
inc
sub
adc
scas
popa
int
pop
rorb
cmp
mov
hlt
movsb
mov
notb
add
sub
fs
cwtl
lock
dec
stos
rcrb
dec
xor
pusha
jbe
lret
fisttps
pushf
rorl
pop
jg
pop
lock
mov
sub
mov
scas
fwait
add
push
addb
in
pop
fwait
leave
bound
loope
pop
mov
and
repnz
jmp
lcall
xchg
rorl
push
test
add
or
aas
xchg
rep
into
imul
adc
repnz
inc
pop
scas
pop
xchg
and
int
add
jmp
push
insl
test
add
imul
imul
pop
mov
dec
into
ficoml
adcl
push
pop
out
je
mov
inc
stc
outsl
and
and
xor
fists
out
sarl
xchg
dec
fwait
xchg
add
imul
and
jne
xchg
or
int
add
fcmovb
xlat
or
aaa
fdivrs
jno
icebp
lret
sbb
nop
sahf
fnstsw
add
sub
lds
xor
nop
aaa
mov
nop
dec
mov
out
leave
in
mov
gs
xor
xchg
or
loop
or
or
dec
sub
outsb
pop
lds
xchg
jns
call
pop
imul
stos
dec
mov
sub
or
jge
out
rclb
bound
js
cmpl
inc
in
or
out
scas
sbb
adc
push
loope
mov
movsb
or
and
xchg
cmpsl
insl
popf
sbb
call
repz
mov
icebp
mov
test
arpl
mov
adc
aad
movsl
and
cmp
and
sarb
pop
jo
shlb
shll
stos
das
mov
pop
andl
idivb
ficoms
pop
ljmp
push
mov
loope
int
data16
nop
push
fisubrl
mov
out
aad
cmp
hlt
and
pop
mov
lds
gs
dec
push
push
push
xor
push
out
aaa
mov
loopne
fnstsw
xor
dec
pushf
inc
mov
scas
lods
js
in
aaa
js
imul
pop
inc
pop
sub
jnp
lods
sbb
cmp
mov
mov
xchg
fwait
jno
and
leave
sbb
adc
lea
push
sti
or
jb
popf
sub
cmp
movsb
repz
stos
pop
arpl
loop
imul
jmp
mov
arpl
mov
add
fisubrl
cltd
fdivrl
sbb
lcall
xchg
mov
das
xchg
jg
into
je
imul
push
jns
xchg
lahf
or
jmp
out
add
stos
mov
inc
div
xchg
lods
mov
cmpb
adc
scas
xchg
int3
icebp
rorb
bound
mov
shll
pop
int
push
mov
lock
cmpsb
data16
add
insb
cvtpi2ps
push
sbb
lds
scas
scas
cmp
repnz
or
sub
push
rclb
and
imul
loopne
mov
ret
fisubl
mov
shl
cmp
aam
dec
mov
or
and
sti
fwait
out
dec
mov
sub
repnz
cmp
sbb
out
push
xor
aam
mov
pop
scas
aam
insl
inc
hlt
jle
cmp
xchg
test
jbe
call
sti
lock
pop
cmpsb
push
sub
jge
xchg
sbb
push
loopne
pop
jno
push
int
add
sbb
xor
cmc
das
loop
or
and
ja
xor
cmp
push
mov
xchg
sub
inc
adc
xchg
int3
push
jb
xchg
ffree
push
adc
push
mov
sbb
repnz
adc
das
scas
mov
int3
jmp
mov
cs
pop
cmpsl
leave
popf
mov
xlat
or
mov
cli
mov
rcrb
dec
add
popa
imul
sahf
push
sbb
orl
ret
dec
lea
cli
push
mov
push
sub
inc
lods
dec
pop
inc
dec
clc
adc
pop
pop
push
jae
pusha
mov
call
jle
mov
and
push
test
xchg
stc
ret
mov
jl
push
mov
repnz
arpl
test
loop
lock
dec
inc
jge
out
testb
ljmp
push
inc
test
and
jne
cwtl
int3
outsb
xchg
lds
sti
mov
mov
mov
jge
mov
cltd
push
mov
cmp
leave
test
test
mov
mov
push
test
xchg
cli
pop
mov
xchg
adc
xchg
mov
addr16
dec
push
testb
imul
jbe
clc
or
lods
cmc
sub
or
imul
jo
orl
push
add
in
cmpsb
cmp
sub
inc
mov
orb
iret
and
jge
mov
jns
pop
es
adc
je
push
std
add
scas
rolb
js
dec
add
ljmp
cmp
or
xlat
jnp
aam
aas
mov
fnsave
push
adcl
add
push
mov
xchg
shl
stos
xchg
inc
cmp
push
cwtl
mov
push
push
jns
xchg
jns
insb
repz
xchg
movsb
jne
sub
cmp
jge
xorl
in
jae
test
or
inc
fcmovnb
out
xchg
in
xor
out
ja
xchg
lods
scas
cmp
jg
push
add
fwait
push
inc
jne
iret
lods
mov
daa
xchg
int
nop
dec
cmp
ja
popa
out
iret
dec
dec
jp
inc
lock
out
aam
xchg
xchg
sbb
push
adc
mov
push
arpl
mov
mov
test
inc
movsb
or
or
mov
pop
mov
sbb
movsb
pushf
push
mov
xor
pop
shrb
sub
cld
inc
jae
ss
add
cmp
add
adc
clc
xchg
inc
xchg
cmp
rcr
push
xchg
mov
gs
mov
mov
push
outsb
jl
sbb
stos
call
pop
xchg
xchg
mov
dec
dec
jp
test
cmp
adc
mov
es
test
inc
add
ljmp
loope
add
sti
push
pushf
mov
inc
lcall
nop
sub
lds
or
popf
cwtl
cld
dec
mov
add
rol
imul
jne
xchg
aaa
push
and
addr16
insl
mov
call
sub
dec
cmp
mov
pop
add
cmp
addr16
mov
cmp
daa
mov
cmpsb
les
jmp
cmp
cmp
inc
sub
dec
out
push
test
inc
jmp
aas
fistps
dec
arpl
mov
pop
mov
test
into
inc
jl
pop
out
cmc
sbb
cld
xor
cs
adc
fscale
ffree
cmp
cltd
stos
in
xchg
lret
mov
jmp
sbb
inc
inc
jp
mov
fwait
jp
cmp
iret
dec
mov
push
mov
push
and
push
mov
fistps
js
es
add
jb
xchg
cmp
xor
inc
inc
add
dec
mov
testl
cmp
lcall
loop
jg
sahf
dec
ret
mov
mov
adc
cmc
pop
push
ret
lods
insl
repnz
rorl
icebp
hlt
inc
arpl
mov
adc
mov
xchg
xor
rcl
loope
sub
gs
in
jnp
jp
push
jns
mov
cmpsl
inc
jne
pop
out
jne
clc
add
or
inc
mov
scas
dec
dec
enter
mov
or
ja
pop
lds
sub
and
push
rcrl
fnstsw
rcll
rclb
pop
jnp
fnstsw
mov
mov
lret
pop
dec
mov
bound
pop
enter
and
push
and
adc
icebp
jae
cmp
sbb
adc
xchg
mov
and
cld
js
sub
pop
bound
jns
adc
out
push
jmp
das
jo
pop
push
clc
cmp
push
jae
cmp
aas
jmp
adc
cmpsb
insb
mov
cmpsb
scas
mov
add
cmpsb
xor
fs
pop
scas
jno
xor
ljmp
jne
xchg
xlat
cmpsl
pop
sbb
loope
push
call
sub
mov
mov
bound
mov
dec
mov
cmc
rcrl
mov
adc
int3
or
sbb
mov
add
jg
add
inc
jmp
cmp
cwtl
ds
pop
mov
jbe
cmpsl
daa
imul
pushl
sub
idivl
shll
lock
xchg
dec
mov
push
test
in
orl
mov
pop
leave
ret
iret
or
pop
xor
dec
lods
adc
ljmp
adc
inc
mov
shll
iret
pop
xchg
xchg
sbb
xchg
xor
pop
iret
pop
lea
sahf
pop
pop
jae
push
and
std
idivb
add
int
add
mov
negl
dec
push
xor
mov
pop
test
cmp
dec
movsl
inc
inc
fdiv
std
pop
mov
jmp
subb
test
or
bound
int
out
das
je
sub
leave
or
incl
or
xchg
xorb
scas
sbb
inc
pop
pusha
fidivs
xchg
xor
sbbl
ficoml
mov
sbb
and
xchg
jo
pusha
jp
jecxz
mov
insl
repnz
mov
mov
jne
and
sbb
xchg
ficompl
jge
in
mov
sbb
mov
out
xchg
pop
in
push
test
sbb
inc
lret
divb
sti
adc
cld
adc
in
xor
cmp
ljmp
fmuls
mov
cmp
pop
popa
sti
lret
inc
sarb
enter
push
inc
dec
shr
test
icebp
in
cmp
fisubs
jae
mov
inc
das
hlt
shl
add
mov
cmp
mov
and
mov
movsb
inc
pop
add
shl
jne
pop
shr
push
jne
repz
scas
push
push
clc
xor
cmp
cmp
loopne
movsl
decb
fs
pushf
mov
sbb
push
add
jnp
adc
add
shrl
mov
push
lods
test
inc
int
pop
aaa
add
add
add
dec
push
cmpb
push
cmp
or
add
jmp
int3
fsts
jl
sti
and
or
out
mov
cld
movswl
add
sub
in
or
push
shll
mov
fsubr
inc
push
or
adc
mov
inc
lods
mov
jbe
icebp
cmpsl
bswap
loope
jge
lds
dec
and
jae
repz
jecxz
stc
ljmp
sbb
popf
pop
cmp
sub
pop
inc
repnz
add
cmp
cmp
cmp
aaa
outsb
cmp
sarb
js
dec
mov
jne
fidivs
cmp
cmpsb
out
adc
mov
jecxz
data16
sbb
xor
imul
mov
test
loop
inc
sbb
mov
xchg
adc
dec
std
ss
xor
dec
loopne
movsl
and
or
lahf
inc
jo
stc
or
inc
inc
cwtl
jb
popf
inc
sub
js
test
sbb
dec
fwait
jns
push
fsubl
push
xor
cmp
jg
adc
jge
in
xor
cmp
mov
insb
shll
es
mov
das
push
jb
orb
mov
mov
sti
dec
mov
shl
or
jmp
mov
ljmp
sub
pop
test
lods
jle,pt
push
lea
icebp
xchg
push
sub
test
fnstsw
jo
pop
xchg
les
mov
and
mov
xchg
repz
iret
inc
push
inc
insb
mov
or
cmp
lret
lods
cld
stos
mov
cmp
and
mov
xor
scas
sbb
in
cwtl
aad
mov
xorb
jp
stc
out
sub
call
js
dec
xchg
int3
movsb
mov
fstl
or
or
ds
cli
xlat
jb
mov
lods
or
and
rcr
rol
cli
mul
and
xchg
xor
aad
imul
repz
scas
mov
ljmp
in
sarb
jecxz
test
gs
lahf
mov
data16
mov
adc
jno
jbe
xchg
stos
sbb
movsb
dec
xor
sub
sub
rcrb
xchg
mov
dec
push
repnz
fidivrl
sub
add
cwtl
mov
add
mov
ud2
mov
rcrl
and
mov
lods
jno
movsb
or
jb
outsb
std
in
xorb
xchg
dec
cli
mov
jbe
repnz
push
xor
pop
jnp
enter
mov
sub
mov
sbbb
inc
inc
popa
or
inc
mov
int
xchg
ret
adc
mov
icebp
lret
push
int3
scas
incb
fisubrs
mov
and
ret
iret
sbb
adc
jo
fsubrl
xchg
scas
push
loopne
dec
mov
jecxz
xchg
xor
xchg
jbe
call
pushf
add
ds
rcrb
leave
mov
stos
stos
aam
xchg
out
out
dec
jmp
cli
xchg
jb
jno
out
inc
xor
out
inc
mov
mov
lcall
lea
or
es
out
ret
subb
jmp
jg
dec
je
shrl
aad
imul
or
aaa
cmp
jmp
push
inc
dec
add
test
decl
inc
push
in
inc
adc
roll
lret
arpl
aam
mov
and
cmp
je
dec
pop
and
sbb
add
sarb
enter
or
into
adc
decl
sub
int
stos
ret
and
mov
rorb
movsb
mov
dec
icebp
push
cmpsl
push
int3
jb
inc
pop
mov
movsl
nop
repnz
leave
cmp
outsl
xchg
mull
or
lahf
les
xor
mov
incb
xchg
mov
mov
mov
dec
lret
mov
popa
and
mov
mov
jnp
out
sbb
xchg
dec
dec
int3
dec
jbe
mov
fwait
sbb
pop
mov
in
inc
fs
imul
mov
push
stos
inc
xchg
add
or
int
test
and
shlb
jo
pop
adc
sar
scas
cmp
adc
and
mov
loopne
mov
dec
and
xchg
sbb
ret
pusha
pop
push
and
movsl
jle
in
mov
xor
dec
cmpsl
xchg
lods
mov
cmp
push
and
push
xor
rol
ficompl
cmc
inc
jbe
outsl
stos
dec
outsl
outsb
push
ljmp
rolb
rorb
inc
xchg
sub
sub
std
mov
xchg
xor
fwait
loope,pn
dec
jb
repz
aas
cwtl
pop
jle
inc
pop
xchg
or
jmp
inc
dec
inc
jns
xor
pop
test
push
pusha
shrb
fsubrs
gs
jg
mov
inc
mov
jmp
js
cltd
cmp
fsubp
cmc
mov
outsl
mov
fnsave
jo
ret
push
imul
mov
fisubrs
lods
cmp
add
fisttpl
shrb
jge
pusha
xchg
and
dec
push
aas
shl
aam
jb
ret
scas
stos
xor
dec
sub
fs
mov
loop
js
pop
lret
cld
testb
lock
xor
push
movsb
test
lods
sub
and
es
push
icebp
test
xchg
inc
ss
mov
cmp
inc
jp
or
std
sub
mov
fldcw
add
pop
cmp
mov
push
outsb
mov
mov
mov
ret
outsl
fyl2xp1
add
pop
mov
imul
xchg
ud1
icebp
loop
js
mov
push
and
xchg
enter
cmp
sub
xchg
dec
sub
add
mov
test
jl
dec
pop
addps
lds
xor
adc
jp
dec
loop
mov
sbb
pop
mov
imul
dec
mov
mov
out
imul
cwtl
call
in
add
lahf
lods
mov
cli
nop
add
cltd
fs
xchg
adc
in
js
xor
inc
dec
jp
lea
and
in
loopne
imulb
cld
jecxz
sbb
outsb
arpl
mov
rorb
es
leave
imul
add
fmull
cwtl
pusha
pop
or
int3
data16
cmp
outsl
and
outsb
jmp
and
jne
mov
and
jg
sbb
lret
js
xor
test
cmc
out
adc
ds
pop
je
fs
pop
mov
and
dec
or
dec
movsl
fucomi
jb
test
jno
and
and
pop
mov
aaa
inc
add
lret
jg
cld
push
dec
xchg
movsb
cmpb
mov
or
out
daa
aad
xchg
lret
mov
sub
push
out
mov
sbb
nop
push
xchg
mov
das
scas
mov
popl
adc
sbb
hlt
rol
lea
inc
movsb
imul
inc
ret
outsl
mov
ja
xchg
mov
fnstsw
mov
and
xchg
xchg
adc
dec
flds
pop
pop
cmpsl
int3
int
test
in
xor
movsl
adc
movsl
movl
add
xchg
fsubp
mov
stos
jecxz
out
push
mov
in
xor
out
das
sti
addl
lahf
add
idiv
imul
and
pop
into
sti
cli
push
add
addr16
repz
dec
or
cld
push
add
fs
js
or
jae
shl
xlat
jnp
cld
movl
clc
loop
xchg
fidivrs
mov
sbb
cmp
mov
pop
xlat
mov
bound
push
jne
leave
xchg
adc
mov
and
jl
inc
popf
sar
sbb
xchg
aad
mov
push
mov
pop
je
in
jp
pop
sub
stos
mov
xor
cli
out
cmc
cwtl
cld
inc
sub
add
fldcw
clc
fildll
lods
dec
insl
xchg
rorb
add
push
test
jg
int3
push
xchg
psubsw
sbb
push
pop
rcrl
pop
cld
prefetchw
jge
and
cmpsb
xor
loopne
shl
in
sub
mov
pop
mov
dec
mov
inc
daa
sub
add
xor
pushf
scas
cli
fisubrl
xchg
jmp
jns
push
scas
adc
mov
pushf
xchg
lods
jns
xchg
jns
lret
dec
inc
sbb
repz
mov
inc
out
das
int3
cmp
pop
xchg
daa
aam
call
test
xchg
rorb
std
addr16
mov
cltd
addr16
sbb
and
add
rcpps
dec
cld
add
mov
sub
sbb
xchg
stc
pushf
jge
mov
mov
int3
es
jne
add
mov
rcr
lcall
mov
stc
push
in
leave
push
add
ficoms
jae
mov
dec
subl
push
ja
dec
rolb
lret
jo
leave
stos
jp
repnz
sbb
enter
add
sub
fcmovu
lock
hlt
aam
cltd
sbb
je
xlat
daa
push
pop
out
loop
loop
xor
jmp
fistpl
test
cmp
and
popf
pop
dec
push
xor
jecxz
aaa
clc
gs
pop
push
dec
jl
adc
int
in
and
add
es
jb
hlt
cltd
adcl
inc
xchg
xchg
pop
jns
xchg
cmpsb
shl
and
sbb
pushf
out
mov
jo
shrl
cmp
bound
fadd
pop
push
in
mov
push
mov
mov
nop
ljmp
outsb
sbb
push
push
xor
push
add
mov
es
mov
ljmp
adc
mov
cmpsb
cmpsl
xor
in
cwtl
mov
mov
and
stos
mov
ret
jl
fdivl
xchg
push
sub
js
pop
add
bound
inc
pop
and
insb
push
sub
testl
cmc
loope
inc
das
mov
lods
mov
movsl
sbb
dec
and
and
mov
mov
mov
jg
xlat
cwtl
push
sti
mov
xchg
stos
or
xor
xchg
add
xchg
sbb
aad
dec
cmpsl
popa
das
mov
sbb
adc
sub
mov
jae
xchg
xor
les
mov
leave
add
loopne
cmc
aaa
jl
call
pop
jo
add
jmp
or
jge
shrl
xlat
or
xchg
arpl
xchg
pop
test
sub
dec
lahf
shll
mov
insl
mov
test
cmp
hlt
ss
xor
ret
sub
lcall
loop
cmp
dec
jbe
rcrl
hlt
mov
adc
xchg
cmp
mov
push
mov
test
pushf
xchg
cmp
imulb
jmp
int
mov
xorb
int
loope
mov
jnp
lods
mov
cmp
bound
push
pushf
mov
insb
cwtl
dec
adc
aaa
pop
lcall
ds
mov
in
cltd
sti
mov
push
jbe
test
dec
lret
jecxz
cmp
xchg
adc
mov
inc
mov
fnstenv
ljmp
mov
push
outsl
push
and
repz
push
in
aad
movsl
addl
xor
icebp
pop
xchg
mov
fcomi
and
jno
or
ljmp
popf
repz
sub
pop
hlt
xor
lock
sub
daa
jo
xchg
add
std
shl
xchg
lods
xor
lahf
or
inc
or
in
sbb
les
or
push
mov
in
inc
xchg
pop
int
mulb
or
mov
pop
das
dec
int3
popf
lahf
add
js
sub
sbb
xchg
stc
scas
fisubrs
adc
mov
add
sahf
add
sahf
pop
pop
fwait
xchg
dec
mov
in
lret
sbb
inc
mov
xchg
scas
jmp
outsb
imul
aad
adc
test
testb
jle
xor
sbb
enter
mov
mov
mov
shll
sbb
add
loope
out
mov
inc
add
inc
adc
mov
add
dec
lcall
mov
movsl
pop
xor
or
ljmp
adc
xchg
sub
adc
pop
mov
movsb
mov
repnz
mov
xchg
nop
insl
sub
cmp
cmp
adc
jo
insl
in
aad
aad
push
stos
push
bound
test
popa
jmp
subl
aas
sub
mov
xor
sbb
mov
adc
data16
inc
jp
fsubrs
daa
sub
sbb
mov
je
sti
scas
cmp
lcall
or
fwait
and
or
aam
lods
fdivrs
add
sbb
inc
stos
or
cmp
icebp
push
out
sub
js
movsl
mov
stc
dec
push
and
add
push
imul
js
scas
jp
mov
out
jle
fstps
test
pop
add
pop
fidivrs
lods
adc
lahf
mov
or
aas
fsub
cmpb
cmp
adc
pop
pop
mov
xor
dec
mov
xor
jb
fmul
jb
xchg
dec
imul
mov
adc
adc
or
mov
outsl
lret
mov
adc
bound
push
lret
push
mov
das
insb
xor
arpl
movsl
clc
int
inc
and
cmp
cmp
mov
push
inc
out
les
cltd
mov
xchg
mov
push
xchg
pop
mov
sub
sbb
cmp
sbb
cwtl
pop
cmp
aaa
fsts
cmpsl
lock
mov
jno
popa
adc
dec
fidivrl
or
xchg
pop
leave
int3
popa
push
insl
push
mov
xchg
in
push
mov
mov
pushf
pmaxub
sbb
mov
fs
aas
fcomps
dec
mov
xchg
jae
cmp
mov
mov
in
ljmp
arpl
fiaddl
sub
pushf
xchg
xchg
mov
lea
push
cmpsl
call
lods
insb
mov
push
call
icebp
popf
test
lea
out
push
fistl
sbb
repz
stc
fists
and
jbe
movsl
push
inc
popf
daa
test
mov
adc
mov
imul
pop
mov
pop
xchg
xor
enter
push
ja
insb
mov
cmp
pop
fimuls
bound
fsubl
mov
in
mov
pop
mov
lahf
adc
lock
rclb
pop
test
xor
jle
loop
sub
push
or
mov
or
lahf
loopne
gs
cmpsl
lock
sbb
iret
shll
and
shrb
outsl
fisttpl
sbb
jg
lea
pop
orb
lret
insb
sub
and
insl
lock
dec
lcall
lret
aam
rcl
mov
sub
orb
mov
rorb
or
insl
flds
daa
insl
jbe
test
and
sti
aad
ficoml
mov
cmc
inc
ja
in
jbe
adc
movl
outsl
movb
lret
pop
std
mov
dec
xchg
inc
out
lea
add
xor
add
mov
adc
repz
xor
lock
xlat
out
fisubl
or
ret
ja
stos
sbb
xchg
int3
mov
push
leave
repz
jge
out
or
fistpll
add
lret
test
clc
jmp
pop
mov
insb
cs
jle
and
lret
dec
xchg
adc
fstl
push
in
xchg
stos
add
je
sbb
cmpsb
sub
pop
push
dec
popf
sub
push
dec
test
fmull
mov
aaa
push
mov
ret
shl
pushw
xor
xor
jae
cltd
and
dec
mov
mov
cld
adc
dec
xor
add
mov
js
jge
imull
lods
or
lock
repnz
cmp
lods
add
into
inc
jo
sbb
fcmovu
dec
fwait
dec
cld
into
mov
aaa
mov
js
aas
call
stc
ror
push
fwait
repz
cmp
lods
lock
sti
sti
daa
push
push
adc
adc
or
mov
repnz
addb
dec
cmp
xor
lret
push
les
arpl
jmp
fidivrl
sbb
dec
push
aaa
lret
xor
push
cmp
pop
inc
ja
cmp
call
push
lret
xchg
out
mov
popa
push
add
fdivr
fsubrs
mov
adc
jno
jle
dec
mov
cwtl
loope
sbbb
push
mov
push
xchg
dec
and
push
lcall
xchg
mov
pop
aas
push
mov
popa
and
jg
push
jne
sbb
clc
jbe
xchg
out
out
xor
mov
cli
pop
cmp
clc
jecxz
enter
lret
or
int
cmc
mov
push
inc
and
sub
and
imul
mov
sbb
fimull
dec
inc
in
dec
cmpb
mov
idivb
in
and
leave
iret
repnz
cld
fimull
js
stos
inc
popa
dec
rcrl
jmp
push
aaa
stc
sub
mov
sti
xchg
sbb
fcoms
pop
nop
loopne
hlt
ja
sub
je
inc
fldt
jecxz
cmp
insl
inc
mov
mov
mov
cwtl
mov
mov
mov
inc
sbb
leave
rcr
push
jmp
jg
xchg
sti
add
call
add
jg
or
pushf
mov
mov
nop
hlt
rep
and
sbb
adc
adc
ror
jmp
iret
and
leave
jmp
movb
roll
push
dec
sub
inc
pop
arpl
push
ljmp
sub
mov
lahf
jmp
dec
push
xchg
or
pusha
and
mov
cmpsl
mov
insl
xchg
shrb
adc
inc
adc
cmc
sahf
pop
add
cmp
xchg
pop
xor
rclb
jnp
adc
dec
xchg
movsb
jl
or
xor
xchg
push
call
and
push
out
je
adc
xchg
or
insb
shll
dec
fidivl
jmp
out
adc
scas
push
loope
pushf
inc
mov
cmp
sub
jmp
mov
lock
jnp
dec
pop
sbb
test
push
je
cwtl
add
inc
imull
jbe
lods
lret
lret
inc
imul
out
loope
loope
xor
insl
xchg
xchg
xchg
and
movsl
cld
and
clc
xchg
and
out
pop
sbb
aam
inc
mov
mov
pop
adc
jno
jmp
dec
cmp
dec
pusha
pop
mov
or
inc
or
mov
fistpll
cwtl
lods
ds
ljmp
les
cltd
in
in
pop
call
mov
arpl
ret
dec
and
push
fisttpll
mov
in
cmp
and
repnz
addr16
jb
ja
lret
lret
ret
mov
jg
adc
pushl
push
sbb
jmp
and
inc
test
lahf
inc
jle
enter
mov
data16
xor
xchg
sbb
js
rcrl
xor
jb
mov
push
and
push
mov
scas
imul
dec
imul
push
stos
pop
push
repnz
add
test
or
jmp
jns
jns
notl
popf
mov
cmp
cmp
insb
cmp
add
add
fisttps
push
aaa
cmpsb
fdivrl
jns
add
xorb
and
es
sub
sub
mov
or
inc
call
rorb
or
js
fistps
pop
fnsave
or
in
cmp
cmp
aaa
push
aam
mov
bound
sbb
fstl
jl
cltd
mov
jg
sub
fcomi
insl
xchg
insb
ljmp
jo
jbe
xor
es
loop
xor
repnz
and
cmpsb
xchg
movsl
in
mov
xchg
jns
ret
in
out
lods
pop
daa
repz
pop
inc
sbbb
call
cltd
ja
jecxz
inc
and
sub
pop
mov
in
sbb
cmp
inc
mov
inc
mov
ds
push
loopne
jbe
pop
xchg
sti
mov
sbb
push
lods
movsl
sarl
add
les
and
sub
push
pop
into
jno
or
shr
adc
push
push
or
ljmp
or
mov
rcrb
mov
call
cli
push
loop
push
daa
jl
mov
jbe
or
push
pop
bound
iret
cmp
inc
pop
jle
in
lea
jl
jns
jge
fldl
adc
cmp
and
mov
hlt
adc
dec
pop
adcl
inc
mov
pop
sbb
int3
adc
fbstp
js
mov
add
cmp
mov
test
pop
popa
and
fmuls
fmuls
jle
lods
out
xchg
popa
out
neg
adc
push
adc
jl
lock
sbb
xor
out
mov
fildll
jge
xchg
bound
push
push
les
addl
fstp
adc
cwtl
xlat
xor
stos
roll
jecxz
sbb
jne
adc
cmp
pushf
lods
push
cwtl
jae
push
lods
fwait
pop
xor
xchg
add
sbb
mov
stc
not
xchg
cmp
mov
jae
or
xor
mov
mov
cli
ds
mov
in
ret
stos
out
ret
out
addr16
cwtl
shl
dec
xchg
add
icebp
mov
mov
mov
sarl
or
outsl
int3
pop
sub
add
cmc
cmp
mov
loope
je
dec
jno
clc
mov
into
xchg
popf
mov
lods
push
je
lret
xchg
in
call
dec
adc
lret
ljmp
xchg
xchg
in
and
or
mov
push
jmp
lret
imul
sahf
sbb
and
mov
and
stc
nop
sar
xor
xchg
nop
or
mov
sbb
pop
iret
sub
stos
les
xchg
push
inc
fwait
dec
cmpsl
imul
push
fisubrs
cmp
int
mov
cmpsb
inc
push
das
dec
rcrl
mov
push
imul
pop
jmp
cwtl
loope
pop
sbb
mov
jb
and
jne
out
cmc
unpckhps
mov
into
jbe
dec
add
cmp
pusha
mov
dec
mov
into
adc
mov
stc
adc
push
sti
and
and
and
cmp
mov
push
fstpl
shll
mov
jae
je
mov
fisttpl
jge
es
mov
insb
aam
push
in
mov
test
imul
push
mov
gs
add
cli
lret
mov
pop
mov
adc
test
mov
push
arpl
rcr
sub
pop
adc
sbb
mov
fisttps
fsubl
aad
sub
lea
pop
jp
out
daa
xlat
mov
enter
lods
test
cli
repnz
push
jo
shl
mov
jl
or
shr
xor
je
insb
cmp
push
pop
pxor
js
xchg
popl
and
mov
popf
lcall
mov
fildll
xor
call
test
inc
xlat
add
insb
popf
pushf
fisubs
sub
stc
xchg
mov
repnz
sbb
jnp
imul
outsl
add
xchg
cltd
mov
dec
mov
sub
jns
push
mov
lea
adc
jns
movsl
sub
fcmovnbe
loope
arpl
xchg
xorb
adc
insb
jle
les
or
xor
xchg
gs
sub
jg
sbb
push
dec
icebp
push
xor
lahf
daa
xor
jp
pop
and
sbbb
testb
out
mov
or
fstps
dec
xchg
fistpl
pushf
push
mov
rorl
mov
ror
mov
in
sub
scas
pop
push
cli
xchg
push
gs
inc
into
dec
sub
sbb
add
jge
js
cs
xchg
lcall
sahf
push
mov
sbb
lret
gs
mov
btr
sbb
push
pop
out
nop
in
xchg
mov
ja
nop
sub
push
mov
inc
in
lcall
mov
out
lret
enter
mov
stos
icebp
inc
arpl
movsl
out
cmpsb
sbb
in
ja
aam
aad
loopne
lods
xor
pop
push
inc
cmp
cmp
out
sub
repnz
or
adc
test
mov
xchg
out
mov
adc
out
dec
xchg
mov
xchg
ret
push
repz
xor
lretw
xor
ja
lret
rol
push
fdiv
jbe
movsb
mov
sti
in
cmp
lock
in
insb
jns
or
mov
mov
sbb
lcall
dec
aas
iret
pop
into
sbb
push
js
aas
jge
mov
clc
loope
or
push
in
xchg
movsb
xchg
inc
pop
cli
push
outsb
or
xchg
add
mov
push
in
outsb
pop
pop
sub
dec
imul
bound
mov
dec
xchg
dec
xor
icebp
fsts
mov
cli
out
xchg
mov
sbb
push
mov
movb
insb
repz
dec
lret
outsb
or
mov
or
fimuls
fdivs
call
dec
xchg
sbbl
push
inc
mov
jl
sarl
pushaw
stc
test
cmp
movq
mov
sti
lret
mov
xchg
rclb
mov
mov
add
or
aaa
icebp
fstpt
inc
mov
pusha
push
mov
inc
cmp
daa
cld
inc
mov
mov
jg
jmp
jp
cmp
pop
stos
inc
nop
cmp
insb
and
int3
mov
lock
mov
lahf
mov
dec
mov
dec
add
in
sub
cmp
ja
or
or
cmp
jno
ud0
pusha
test
pop
andl
bound
loopne
push
and
mov
cmpb
enter
sub
push
add
mov
in
or
negb
repz
mov
mov
ss
or
enter
jecxz
jno
jmp
cmpsl
outsl
mov
sbb
lock
insl
adc
das
dec
push
jns
ljmp
or
dec
sub
cmp
std
mull
pop
imul
aas
loop
sbb
in
xor
pop
testl
lea
sub
jb
adc
mov
mov
mov
rcrb
jb
std
add
inc
push
lea
or
xchg
cmpsl
test
scas
inc
xchg
adc
and
pop
xor
sbb
mov
jb
lea
fcmovne
jp
lahf
jnp
sbb
or
fistps
pop
popa
dec
aas
fmuls
int3
jmp
lahf
mov
insl
dec
push
add
push
shlb
cmp
scas
lods
out
mov
jbe
cmp
cmpb
fisttps
insl
test
sbb
les
mov
jno
dec
inc
sbb
je
jae
int
negl
fbld
sub
cmp
stos
outsb
shll
jbe
gs
sarl
scas
cld
and
mov
xor
mov
jb
lock
cmp
sbb
adc
maskmovq
mov
adc
push
mov
push
xor
lret
pop
in
stos
dec
outsb
lods
sbb
add
out
insb
jns
icebp
xchg
push
mov
fisubs
push
into
xchg
pop
sbb
push
sarl
sbb
bound
mov
add
test
cmpsb
pop
xchg
and
and
xchg
jae
ret
cmp
repnz
and
bound
xor
jp
test
adc
xlat
jb
mov
fidivs
and
arpl
ds
mov
sti
cmp
fldpi
xor
bound
dec
rclb
mov
pop
mov
sti
or
xchg
aaa
dec
dec
mov
lcall
mov
push
cmp
mov
sahf
and
or
cmp
fildll
add
movsl
adc
and
adc
mov
loope
cmp
push
movsl
lcall
or
push
adc
ret
ss
mov
mov
dec
mov
and
mov
fxch
ret
hlt
mov
int
xchg
fnstsw
sti
push
aam
dec
std
test
test
push
out
push
jae
sar
enter
jo
and
sti
push
fistpl
int
lahf
shrl
push
sbb
fsts
sbb
insb
mov
push
les
mulb
hlt
aad
push
mov
xchg
js
cmp
lock
push
xchg
call
pop
mov
repz
xchg
pop
movsb
aad
and
push
addr16
popf
jns
aam
fs
cmp
push
jecxz
sbb
and
jno
dec
or
adc
push
dec
sbb
xchg
out
int3
iret
pushl
dec
xchg
pop
scas
cmp
inc
pop
cmp
or
aaa
inc
cmp
mov
fbstp
jmp
jae
push
and
daa
mov
sub
inc
mov
sbb
and
jb
clc
movsl
dec
xor
dec
out
and
cmp
and
fdivrl
in
lods
js
xchg
imul
pop
mov
sbbb
inc
notb
ljmp
mov
mov
addr16
sub
das
add
pop
push
popl
xchg
repz
lock
and
mov
decl
pushf
and
xchg
bound
push
adc
insb
arpl
fwait
jo
pop
cwtl
repz
xor
jb
outsb
lock
add
movsb
stc
mov
sub
lahf
movsb
add
lret
js
mov
leave
xor
aad
movsb
jnp
xchg
popf
and
push
ss
sbb
aas
popf
movsb
jns
push
mov
pop
fcmovb
mov
arpl
orl
push
push
dec
pop
daa
mov
dec
sbb
orl
scas
mov
xlat
pop
sbb
ret
and
cmpsb
cmpsl
pop
ret
inc
pop
leave
jae
inc
ret
ror
push
sbb
pop
mov
pop
xchg
fstpt
ret
fadd
sub
jne
mov
push
mov
gs
push
pop
scas
lock
push
xor
fdivrl
xor
or
jae
js
mov
test
sbb
mov
xchg
push
xchg
int3
dec
dec
sbb
dec
cmp
mov
sahf
xor
and
pushf
or
mov
ucomiss
out
sbb
mov
shll
mov
mov
scas
mov
adc
pusha
adc
rcr
xchg
scas
fbstp
add
or
pop
xchg
or
jnp
pop
add
mov
mov
lcall
push
add
in
pop
mov
fs
push
mov
pop
xor
xorl
mov
cmp
dec
add
cmpsl
or
call
push
js
or
add
cmp
mov
xchg
inc
inc
out
ja
cwtl
aas
movsb
stos
xor
repz
add
lds
je
into
lahf
cs
cmp
call
je
xor
xchg
mov
divb
pop
dec
stos
sahf
inc
lahf
in
add
dec
xchg
int
xor
sti
jb
jl
xchg
fidivrl
mov
mov
xorb
or
mov
pop
stc
push
notl
dec
pop
mov
or
add
xor
inc
rolb
test
cmp
or
push
daa
jg
xlat
sub
sbb
lea
sti
arpl
shrl
std
lcall
push
mov
sbb
nop
mov
add
fs
or
dec
aam
call
push
sarl
in
sti
icebp
lret
fs
aam
nop
in
outsl
mov
out
mov
mov
call
int3
std
mov
mov
bndldx
add
pusha
dec
lds
repnz
mov
test
adc
jno
jne
push
repz
out
adc
shrl
xchg
push
lods
xchg
dec
mov
inc
and
inc
out
cld
ror
icebp
inc
sub
dec
leave
inc
mov
jno
sti
cmp
adc
in
pop
icebp
and
mov
mov
fstpl
mov
mov
lea
adc
loop
scas
push
ja
cld
popa
inc
mov
aas
jne
fmuls
jle
inc
jl
jbe
popa
lret
xor
pop
repnz
aad
andl
in
mov
add
mov
add
cmpsl
and
sub
push
push
dec
sbb
fwait
out
sbb
out
mov
push
inc
sbb
inc
ljmp
fcomps
pop
sbb
push
sub
out
mov
aaa
out
and
jb
cmp
loope,pn
aaa
daa
pop
mov
sbb
add
rcrl
je
loope
xor
sub
mov
test
sahf
lret
int3
fnstsw
push
arpl
sbb
shlb
push
xor
pop
cmp
out
xchg
and
ss
mov
cmc
clc
es
add
pushf
dec
fdivr
imul
xor
test
push
xchg
ds
insb
in
xor
cbtw
bound
js
std
ja
jns
rcrl
mov
adc
lahf
lahf
insl
pop
add
pop
cld
or
dec
mov
icebp
in
in
rclb
ja
int3
push
sub
test
push
cmp
xor
push
sub
xchg
popf
cltd
stos
aaa
pop
sub
dec
mov
sub
aaa
inc
leave
ja
or
jo
sbb
dec
dec
mov
jb
pop
in
cmpsb
rcrl
inc
mov
sbb
push
stos
add
cmp
cmp
test
push
mov
sub
ds
mov
pop
jmp
push
sbb
fcomi
fs
outsl
dec
jae
xor
sti
icebp
les
fprem1
xlat
outsl
push
andb
fs
scas
xchg
inc
sbb
mov
ret
mov
clc
dec
icebp
addl
stos
test
es
push
fwait
cwtl
sbbb
out
iret
mov
cmp
stos
movntps
sbb
mov
shlb
and
out
fs
xchg
dec
mul
and
mov
mov
roll
pop
sbb
push
mov
inc
rcl
imul
add
xchg
nop
cld
cmc
iret
test
dec
push
dec
sub
hlt
and
stc
sub
test
and
pop
xor
call
mov
push
aaa
inc
xor
scas
loop
push
pop
out
ja
adc
loope
out
insb
lahf
cmpsl
sbb
lret
xor
sub
xchg
push
andb
pop
aas
jle
add
sub
int
fbld
xor
loop
fsubrs
lahf
lods
lods
loop
jns
cmpsb
pushf
sub
mov
jl
rcrb
lahf
fstps
es
or
nop
sub
xchg
fwait
sbb
mov
stos
xor
pop
sub
sbb
sub
sbb
das
dec
es
sub
pushw
data16
fs
xchg
mov
and
lods
push
dec
xchg
cmpsl
dec
loope
mov
or
sti
es
aam
outsb
cltd
fsubrp
add
mov
into
add
loope
fs
dec
jg
pushw
xchg
dec
cmpsb
sti
daa
cmp
push
pop
rcll
clc
sbb
push
js
sti
mov
cmpb
push
divb
dec
xor
in
xchg
inc
or
push
mov
int
jbe
shlb
bound
jne
stc
inc
loop
sub
push
stc
sub
mov
fstpt
fcomps
sbb
shrb
adc
xor
jmp
shl
cld
dec
sar
rcll
sbb
daa
sbb
dec
sbb
gs
adc
fwait
iret
and
scas
je
push
push
push
or
popf
adcb
push
fcomps
push
mov
and
sub
std
push
cmp
push
ficompl
rclb
add
jae
mov
repnz
addr16
sub
dec
adc
call
and
ret
hlt
mov
cltd
adc
iret
xchg
mov
inc
push
ret
fwait
icebp
push
and
sbb
jl
jg
sbb
lds
jl
gs
sub
movsb
gs
add
push
mov
inc
ja
sarl
ficompl
sar
nop
sarb
add
inc
pop
sahf
negl
xor
dec
ret
adc
cmc
mov
ljmp
push
xor
inc
into
fsubs
and
shr
adc
fsts
cmc
or
rcll
mov
mov
mov
and
jle
ror
rclb
dec
pop
mov
pop
dec
jns
shl
add
inc
lea
push
mov
xchg
outsb
push
adc
or
mov
fwait
es
xchg
fwait
inc
ret
enter
fcomps
dec
cmc
dec
add
inc
fidivs
sbb
inc
je
cmp
scas
js
push
outsl
js
sbb
adc
pop
mov
cmp
push
divb
aad
dec
push
es
popa
and
pop
or
gs
mov
inc
mov
mov
leave
lock
pushf
rcll
adc
cmpsb
into
mov
sub
mov
pop
mov
pop
loope
mov
wrmsr
mov
jb
les
call
dec
arpl
or
mov
push
stos
dec
std
or
rorl
push
test
or
inc
pusha
pop
mov
sbb
cmp
test
inc
mov
jb
dec
js
push
add
inc
or
pop
push
sub
addb
clc
cmp
stos
testl
out
mov
push
mov
out
addr16
pushf
dec
dec
xor
arpl
mov
fs
cld
and
aad
jb
cli
ss
mov
gs
aam
dec
xchg
sbb
leave
out
jmp
adc
xchg
int
mov
shl
mov
ret
cmpsl
lret
mov
jae
aas
fstpl
push
push
push
fstpt
push
movb
or
mov
in
inc
outsb
push
sbb
sbb
push
mov
push
push
xor
jnp
iret
test
jns
aaa
div
aaa
jl
es
test
fwait
xor
xchg
or
je
das
mov
mov
fwait
xchg
cwtl
cmp
subb
pop
int3
mov
and
mov
lock
add
jle
xchg
adc
inc
fimuls
mov
add
fsub
lods
movsl
push
cld
inc
daa
arpl
mov
dec
hlt
ret
ja
adc
dec
sti
shrb
cmpl
lret
ljmp
pop
rcrb
push
ds
cs
jmp
lea
sub
addr16
fadds
add
aaa
sbb
stos
loope
pop
int
stos
outsb
outsl
std
fisubrs
lahf
fmuls
cmp
fnsave
mov
lods
bswap
repnz
add
sub
mov
cmp
push
jecxz
sbb
ds
mov
repnz
testb
sub
es
mov
lods
sbb
mov
ljmp
call
adc
sbb
pop
hlt
cmp
aam
add
sti
mov
in
pop
dec
pushw
inc
cmp
jmp
repnz
add
sbb
inc
addr16
outsl
or
pop
xchg
pop
rorb
enter
cmp
xlat
push
lock
pop
jmp
fucomi
adc
lahf
ret
adc
sbb
mov
and
call
sti
dec
mov
mov
repnz
pop
lods
cmp
clc
nop
push
das
inc
adc
or
aad
scas
mov
out
ret
pop
fs
insb
dec
mov
push
shrb
int
sti
movsl
repnz
pop
mov
cmpsl
stos
leave
or
sub
push
xchg
xor
jo
cltd
dec
sti
mov
fwait
xchg
out
imul
dec
inc
inc
or
inc
mov
xor
aad
into
je
in
jle
es
sarl
and
inc
frndint
push
xchg
mov
filds
mov
fdivl
das
enter
scas
xchg
sahf
test
cmp
daa
roll
test
stc
pop
mov
or
mov
mov
call
mov
push
loopne
mov
add
jge
adc
jb
sbb
cwtl
mov
mov
outsl
in
xlat
ss
or
mov
mov
imul
in
fmull
cs
lret
add
loopne
dec
enter
bound
xchg
call
imul
je
mov
test
jnp
in
leave
mov
scas
aaa
inc
pop
add
popa
mov
in
mov
movsb
or
inc
insb
pop
int
xchg
out
icebp
mov
xor
jnp
fdivrs
jb
roll
adc
adc
loop
mov
jp
call
pop
das
or
dec
inc
jbe
jns
bt
out
and
hlt
add
inc
lret
or
jo
test
inc
mov
adc
adc
adc
jae
jg
add
cmp
ja
js
sahf
jg
lahf
pop
adc
adc
lret
das
jno
mov
jge
insl
ret
mov
lods
push
sub
movsl
je
not
cmp
mov
mov
jo
outsb
jns
int
or
popa
lahf
imul
pop
bound
iret
testb
ja
movsb
nop
call
fwait
jne
push
jns
rol
loopne
pushf
jle
inc
push
loope
stos
pusha
arpl
ret
mov
mov
mov
pop
outsl
ret
mov
sbb
add
clc
ret
gs
mov
add
aad
sahf
cmp
mov
stos
add
ret
lods
mov
ds
ja
dec
int3
pop
rcl
pop
push
mov
xor
sbb
xor
jmp
mov
fdivs
dec
negb
mov
jle
sub
int3
sub
push
or
sub
lods
imul
xor
int
mov
and
in
sub
sub
popf
push
mov
enter
xlat
sub
icebp
fistps
and
add
test
jbe,pn
xchg
xchg
push
mov
jmp
out
mov
popf
mov
in
push
or
shl
xchg
cmpsb
sarl
xchg
mov
jp
int3
xchg
mov
hlt
int3
cld
rcrl
scas
std
andb
sub
in
stos
int
std
dec
aad
cltd
into
xor
push
or
lret
cmpsl
jo
negb
js
ret
cwtl
loop
cmp
lcall
sub
rcr
or
xchg
mov
int
jmp
push
addr16
daa
add
mov
dec
out
dec
lahf
imul
repz
addr16
mov
stos
xor
ret
js
adc
arpl
xchg
pop
sbb
mov
sbb
out
sti
mov
or
mov
lret
jle
jno
lcall
repnz
inc
adc
repz
cmp
mov
mov
imul
dec
xchg
movsb
cmc
xchg
xchg
push
push
sbb
jae
ja
shll
rcrb
jne
dec
out
pop
push
test
lods
pop
push
sbb
push
hlt
xor
scas
pop
mov
adc
dec
movsl
xor
dec
ficoms
xor
or
aas
les
inc
jle
inc
cmp
in
stos
ret
enter
stos
es
in
adc
cmp
pop
xor
sbb
sti
jne
in
pop
testb
xor
pop
mov
divl
xor
mov
lret
mov
into
mov
popf
dec
push
stc
jns
notb
push
or
mov
xlat
jecxz
lcall
imul
andl
jge
mov
push
adc
fdivs
mov
jo
xor
jo
in
fdivrl
in
mov
ret
or
fsubl
test
and
dec
rcll
adc
test
sbb
dec
loope,pt
sti
std
outsb
jmp
cmp
loop
xchg
push
push
lea
jecxz
les
imul
and
and
mov
cmc
in
rol
cmp
mov
mov
cmp
fs
sub
inc
test
or
dec
out
cmp
std
fistps
or
inc
xor
cwtl
lock
jl
cmp
lods
frstor
gs
aaa
add
add
mov
pop
xor
sub
add
xchg
dec
ret
or
icebp
jecxz
xor
mov
out
daa
arpl
movsl
sub
and
imul
or
data16
xor
jae
push
aad
lcall
insl
xchg
add
sub
mov
adc
mov
clc
shl
jge
imul
cld
and
pop
popf
mov
out
inc
imulb
mov
cltd
sahf
and
xchg
or
inc
lret
lods
test
pop
fsubr
test
fbstp
xorl
les
cmpsl
mov
cmpsl
dec
mov
in
orb
test
les
pop
sub
std
push
and
stos
xchg
fdiv
inc
cmp
int
and
sbb
int
xor
jge
add
xchg
lock
cmpsb
out
push
ja
aas
and
xor
pusha
fxch
jle
sub
sbb
lds
test
std
mov
fsubp
lds
jecxz
pop
fiaddl
xchg
inc
jp
sbb
mov
insl
and
rcrl
cmpb
cld
dec
mull
fidivl
sbb
stos
fdivr
jge
mov
jo
out
je
fisttpll
add
jo
jl
lahf
fcmovne
shrb
mov
xor
and
popa
pushf
lock
xchg
jbe
push
jl
add
stc
fcmovnb
ret
push
mov
and
mov
aam
sbb
and
hlt
shl
jbe
jnp
dec
jbe
repz
jp
ljmp
orb
mov
cmpsl
dec
jno
jp
enter
push
mov
xchg
imul
push
and
leave
jnp
les
xchg
mov
lcall
into
and
and
repnz
fsubs
rep
addr16
mov
xorb
sub
or
xchg
into
clc
test
xor
daa
inc
aas
stos
loopne
out
add
lods
repz
mov
jo
fcmovb
cmp
dec
or
dec
enter
scas
gs
mul
aaa
fwait
insl
movl
or
out
imul
cmp
sbbl
adc
add
out
mov
fcoms
jno
mov
inc
shll
das
popf
cmp
leave
xchg
xorb
pop
fld1
sbb
les
mov
or
push
adc
andl
inc
dec
push
repz
add
push
cmpsl
movsl
sub
leave
cmpsb
ja
add
xor
adc
cmpsb
aas
arpl
xchg
add
es
xchg
aam
repz
into
rorl
jne
pop
cld
repz
inc
pop
imul
dec
test
data16
mov
outsb
mov
popf
push
std
stc
nop
xor
inc
mov
nop
out
stos
and
leave
and
aas
xchg
ja
movsl
and
cmpsb
ds
adc
dec
adc
aas
mov
push
add
std
cmovo
jg
test
lcall
push
out
adc
sub
push
testl
std
movl
fld1
adc
add
sbbl
jbe
xor
push
enter
sub
pop
imul
jg
xor
mov
pop
xor
or
pop
push
imul
xlat
dec
adc
fisttpl
or
fs
mov
lods
in
xchg
cltd
addr16
data16
cmp
loop
outsb
aas
adc
cmp
sbb
mov
ja
mov
insl
and
icebp
push
dec
pop
inc
add
jne
aas
test
iret
inc
push
push
add
pop
mov
insb
fadds
lret
outsl
test
jne
ja
and
adc
sub
pop
addr16
add
rcrb
cs
cmpsl
jno
les
mov
mov
ja
pop
dec
pop
daa
push
adc
rclb
pop
sahf
aad
mov
mov
mov
in
mov
or
in
or
mov
loope
mov
iret
test
sub
stos
sub
jp
push
inc
cmp
and
dec
rcrl
scas
movsl
imul
in
dec
dec
xor
mov
or
jno
pop
mov
inc
xchg
aam
push
cmp
xorl
arpl
orl
and
mov
jecxz
rcrb
or
jb
fs
mov
sbb
mov
in
ja
push
sbb
in
jae
sbb
fistl
mov
dec
mov
cmp
pop
lret
out
cmp
mov
iretw
jbe
xor
mov
mov
shl
or
xlat
fs
xchg
in
nop
xchg
pop
out
pop
test
dec
push
jecxz
sbb
movl
movsl
jno
add
mov
jns
and
mov
and
dec
or
jmp
cmp
adc
dec
add
ret
js
mov
enter
and
fldenv
int
xchg
and
outsl
lahf
pop
cltd
mov
data16
xchg
cmpsl
testb
and
pop
cmp
sub
ds
and
add
aas
dec
jbe
mov
lret
jns
pop
cmpsb
cmp
push
xchg
sub
mov
mov
mov
jo
pop
xor
lret
mov
ja
mov
sbb
mov
addr16
fistpl
and
push
sti
pop
lock
xor
add
cltd
fldt
cmp
loope
xchg
rolb
xchg
pop
lock
and
xchg
test
or
arpl
and
test
xchg
fxch
outsl
loopne
popa
inc
js
test
or
out
push
jno
add
inc
jnp
aam
shl
add
jb
shufps
sub
sub
mov
cmp
mov
shrl
mov
xor
cmp
int
into
adc
mov
imul
loopne
and
dec
jb
int3
mov
out
shrl
repnz
push
dec
adc
sete
test
adc
mov
out
cmp
xor
insb
mov
mov
ja
lds
jl
add
mov
loop
mov
idiv
icebp
mov
rclb
mov
xchg
push
enter
sub
pop
ja
pop
jle
mov
adc
push
stc
lret
lret
xchg
fs
push
push
cmc
and
test
mov
call
push
xor
or
shl
addr16
jae
movsl
sub
cmc
or
fstps
or
adc
es
mov
mov
sbb
cmp
stos
aad
mov
subl
jp
rcl
cli
rorb
xlat
fcomp
mov
test
mov
push
in
jg
jae
sub
lea
daa
mov
js
out
popa
inc
mov
jo
xor
mov
cmpsl
adc
jmp
pop
bnd
ds
int
add
push
cltd
inc
mov
aas
pop
mov
push
loope
out
addr16
fiadds
sbb
adc
out
testl
sbb
jl
or
push
pop
push
subl
cmpsb
fs
mov
out
aam
std
cmp
mov
call
push
or
mov
jg
cmp
push
xor
in
ficomps
and
jo
push
cmp
jns
sbb
pop
or
in
jl
pop
leave
mov
jp
rolb
icebp
test
or
out
pop
jnp
sbb
mov
mov
sti
pop
mov
cmp
mov
test
in
movsb
sub
adc
sti
daa
jnp
xchg
loope
enter
pop
out
out
test
and
lahf
xchg
push
lds
sysexit
xor
inc
xchg
push
or
fst
pop
and
adc
sub
aad
mov
loopne
hlt
cmp
push
shll
test
cmpsl
dec
or
fcmove
mov
jns
ret
pusha
into
inc
aam
mov
in
nop
jne
das
in
mov
and
push
icebp
jecxz
push
out
dec
or
inc
jmp
pop
sub
stos
fimull
imul
add
sti
pop
sbb
push
mov
cmc
push
lahf
pop
iret
outsb
push
xchg
push
fcoml
jne
cmpsb
test
add
push
push
loopne
inc
mov
mov
arpl
and
dec
add
mov
sbb
fsubl
subl
adc
sub
push
dec
inc
jae
inc
sbb
inc
scas
test
mov
adc
inc
js
stos
jmp
inc
dec
push
inc
inc
shll
cmp
push
sbb
push
cld
add
mov
xor
xor
rcrl
cwtl
xor
shr
ja
ret
jle
mov
sbb
cwtl
shlb
push
mov
mov
mov
test
or
loop
xor
or
test
sbb
outsl
mov
out
jle
xchg
int
lret
cltd
cli
sub
out
mov
jecxz
or
push
pop
dec
sub
adc
or
xor
dec
jbe
push
outsl
sbb
push
out
jo
and
jnp
cmp
pop
aas
xchg
leave
loop
mov
jge
mov
repz
adc
pop
jo
xor
mov
rcl
mov
dec
and
test
mov
lock
jae
sub
cmp
test
pop
jae
stc
sub
gs
or
ljmp
lcall
dec
sahf
data16
aam
adc
aam
lea
je
ret
add
push
pop
jae
adc
dec
sbb
daa
std
add
push
mov
xor
pop
xchg
and
or
and
xchg
ret
popa
inc
addr16
ljmp
hlt
push
sbb
mov
add
xchg
leave
outsl
pop
data16
call
cmpsb
and
lcall
cmp
stc
adcl
jmp
std
inc
xchg
add
mov
xchg
les
xchg
mov
sub
imul
ret
scas
mov
push
and
jmp
repz
les
lods
rcrb
ja
sbb
mov
daa
lret
mov
test
pop
fstps
xlat
iret
jge
mov
push
lar
pusha
daa
push
in
jb
je
xchg
popf
nop
jge
pop
imul
or
test
xor
add
push
roll
in
xor
sti
faddl
xchg
fwait
aaa
push
sub
or
fldl2t
xchg
ficompl
mov
push
cltd
push
cmp
pushf
jmp
xor
xchg
xchg
aaa
mov
mov
push
push
or
pop
popa
fstpl
cmp
xor
mov
dec
mov
out
stc
sbb
and
fnclex
popa
inc
xor
push
lock
es
sbb
push
jae
xchg
std
jns
inc
or
repnz
cli
jno
mov
call
movsl
sub
fnstsw
inc
xor
hlt
je
push
sub
mov
mov
xchg
cltd
jle
mov
xchg
adcl
loopne
ret
and
push
loopne
outsb
fisubl
pop
cs
fistpll
ds
outsl
out
jo
ja
cmp
sbb
sub
fbld
or
lds
cmp
jb
insb
dec
pop
and
sub
mov
insl
fs
pop
adc
pop
ret
jae
mov
inc
cmp
fmull
adc
addr16
and
out
stos
sub
sarl
in
add
in
fs
sbb
mov
and
xor
movsl
lret
in
and
or
mov
xchg
dec
cmp
pusha
or
call
lods
mov
mov
dec
push
ret
in
add
cmp
xchg
sbb
test
and
movsb
mov
inc
cli
jecxz
int
jmp
icebp
imul
push
cmpsl
jns
movsl
rorl
push
cmp
imul
jge,pt
mov
xchg
ret
loopne
lods
inc
and
mov
xchg
sub
xchg
test
in
jmp
dec
and
adc
push
inc
jl
mov
ja
into
test
pop
xor
or
out
pop
out
push
mov
mov
leave
test
adc
xor
xor
imul
inc
xor
dec
insb
scas
out
sahf
and
notb
notb
mov
shl
pop
shrl
sti
out
sbbb
push
pop
dec
dec
cmpsl
inc
inc
cmc
pushf
es
fistpll
and
shll
orb
sub
aaa
jae
test
jle
xor
outsl
lret
sub
mov
sbb
jnp
and
movl
loopne
scas
and
xlat
mov
and
or
fldcw
jl
sub
cmpsb
es
xor
das
fs
mov
iret
movsl
lods
mov
mov
push
jns
mov
dec
ja
aad
mov
dec
add
loopne
jmp
xor
cwtl
or
aaa
loopne
inc
sub
cmp
inc
push
mov
mov
sbb
cmp
ds
sbb
in
xchg
test
stc
add
ret
dec
push
out
fnstsw
jge
icebp
roll
ffreep
cmp
in
jle
lock
sbb
jb
lahf
out
inc
push
sub
iret
push
pop
cmp
mov
push
and
cmpsb
xchg
jo
scas
gs
aad
and
adc
fs
mov
xchg
stos
repnz
scas
dec
lods
mov
mov
pop
pop
cmp
fsubr
or
cld
sub
xchg
mov
in
cmp
push
inc
mul
leave
dec
cmp
mov
outsb
dec
sbb
xchg
pop
lahf
int3
ja
lret
push
or
mov
jae
cmp
sub
adc
daa
jno
add
lahf
lahf
das
in
jns
inc
clc
add
movsl
aam
mov
inc
popa
pop
lret
aam
xorl
fadd
arpl
je
jno
adc
jecxz
mov
aaa
dec
bound
pop
stos
sahf
jne
cmpsb
cmp
sub
dec
lods
insl
rcl
dec
cmpsb
icebp
cmp
iret
out
adcl
jecxz
xor
decb
mov
and
push
subb
frstor
mov
or
pop
jb
frstor
std
mov
movsb
js
jns
idivl
pop
inc
dec
andl
repz
out
insl
sub
push
dec
dec
je
mov
add
hlt
repnz
fisubrs
mov
cmpsb
push
xchg
adcb
mov
jecxz
inc
sub
imul
lea
lds
xor
repz
int3
push
lods
xor
rorl
es
jmp
int3
fists
inc
pop
loop
mov
mov
mov
movsl
or
mov
push
mov
out
mov
dec
sbb
ja
sub
shl
xor
push
xor
mov
mov
pop
jge
das
imulb
stc
adc
or
dec
addl
inc
notb
int
je
xor
out
pop
in
ss
lret
mov
mov
dec
int3
call
jmp
jmp
xor
jl
pushf
loope
xchg
adc
xchg
cs
adc
adc
jle
icebp
lret
xchg
and
or
ss
cs
das
and
jmp
adc
xchg
and
daa
loope
and
jno
in
xor
lahf
lahf
repnz
sub
inc
mov
dec
js
shl
aas
addb
mov
jne
call
fisubrs
mov
jno
push
idivb
rorl
ds
cli
scas
movsb
fdivs
xor
dec
pop
mov
sbb
jb
mov
ficoml
out
pop
sub
cs
add
jne
insl
lock
stos
loope
fildl
or
mov
fsubrs
inc
test
mov
pop
arpl
fistps
fs
inc
lods
fbld
rolb
ljmp
and
aad
mov
rcr
inc
aaa
lods
fdivrs
pusha
icebp
push
and
mov
leave
hlt
icebp
ds
jmp
or
mov
test
dec
test
rorb
jne
push
rorb
in
mov
xor
les
inc
xor
je
das
xor
ljmp
mov
xchg
xor
cmp
fwait
call
into
add
xchg
fcos
inc
leave
adc
pop
int3
add
mov
mov
loopne
jno
and
add
sub
xor
arpl
adc
pop
mov
fiaddl
pusha
lea
std
aas
mov
mov
cli
adc
dec
in
cmpsb
into
nop
shrb
ds
leave
test
xchg
inc
ds
movb
imul
cmp
jne
pop
xor
xchg
in
cwtl
push
pop
popf
mov
dec
test
xor
in
sbb
pop
test
aaa
add
shufps
dec
push
mov
mov
daa
mov
mov
in
scas
lret
dec
es
popf
jb
imul
jne
les
mov
outsb
cmc
adc
or
out
aam
cmp
fidivl
mov
cwtl
mov
out
cmc
jo
gs
loope
and
pop
notb
ror
mov
jl
or
jno
cltd
mov
addb
shrl
fwait
or
sbb
iret
es
mov
daa
andl
mov
cmp
fs
fidivs
lcall
movsb
movsb
xor
ficoml
adc
mov
andl
test
mov
sbb
jg
or
dec
inc
xchg
cmp
lea
and
ds
cltd
xchg
out
movsb
mov
push
std
xchg
hlt
in
inc
rcrb
bound
lods
or
fwait
jle
mov
mov
cli
pop
sub
fcompl
insb
jo
ds
xchg
clc
cli
daa
mov
insb
dec
fadds
or
sub
stos
out
in
stos
in
mov
sbb
fs
das
les
jns
jl
arpl
add
fsubs
xchg
add
xchg
dec
or
out
pusha
lret
rcll
fprem1
lds
or
aam
xor
adc
dec
mov
out
sbb
xor
jecxz
icebp
hlt
int
jae
jmp
int3
dec
stc
clc
lea
xor
xor
push
je
lock
add
mov
repz
mov
aaa
add
jns
ret
rclb
mov
or
push
cmpsl
push
fsubrp
jle
loop
in
and
fnstenv
frstor
out
push
and
xor
cmpsb
push
js
adc
mov
cmp
lcall
scas
dec
imul
jecxz
iret
ret
pop
add
rorl
adc
pop
mov
inc
iret
dec
jae
iret
lret
sub
and
ret
xchg
inc
inc
push
push
jns
pop
mov
pop
jns
dec
and
movsl
inc
push
call
or
testl
or
pop
jnp
cmp
adc
pop
popf
popa
jle
shrb
sbb
lock
mov
sbb
sub
sbb
fwait
call
adc
pushf
push
testb
dec
stc
push
bound
dec
lods
lds
mov
push
rcll
lret
ret
mov
mov
mov
adc
out
push
sub
pusha
les
aas
popa
daa
lret
xchg
xchg
fsts
inc
orb
popf
mov
push
mov
cmp
and
gs
adc
repz
shr
xor
aaa
das
lds
popa
pop
sahf
cmpsl
xchg
sub
call
mov
and
ret
stc
pop
dec
cmp
and
jge
sbb
sbb
aaa
or
stc
int3
pop
ja
or
fldt
sub
sub
pop
call
push
out
mov
fwait
cmp
scas
jae
cmp
pop
sahf
pop
push
icebp
xor
popa
mov
int3
jmp
scas
mov
cmp
loop
sub
rorl
push
dec
inc
stc
inc
fdivrl
xor
fidivrs
shll
fimuls
ret
pop
push
mov
aaa
mov
sub
movsl
and
imul
data16
jg
andb
inc
xchg
cltd
flds
push
cmp
ds
mov
lock
inc
sbb
mov
stos
push
xor
sub
test
xchg
sbb
sahf
ret
jl
dec
fucomip
sub
sbb
add
fwait
andl
xchg
fisubl
dec
push
and
mov
mov
loop
add
mov
mov
xchg
dec
adc
push
push
inc
rclb
pop
sbb
daa
cmpsb
jae
mov
test
setle
hlt
push
xor
inc
xchg
and
push
and
mov
mov
mov
daa
cwtl
sbb
and
stos
xor
xor
or
sub
shlb
xchg
into
mov
lock
and
jns
sbb
xchg
inc
add
and
sbb
or
pop
mov
fimull
in
daa
and
outsl
mov
xchg
xchg
scas
in
sub
jp
mov
sbb
mov
sbb
out
xor
mov
ficomps
adc
lds
das
mov
test
or
adc
add
cli
sub
es
insb
jle
shrb
push
mov
xchg
or
int
sbb
div
divl
test
push
popf
or
push
lods
mov
std
sbb
pusha
in
outsb
dec
adc
jl
inc
sbb
dec
in
mov
pop
mov
fmul
rolb
inc
ret
js
leave
scas
jmp
dec
sbb
rclb
cmpsl
icebp
jbe
sub
hlt
lret
jb
jo
aaa
out
sbb
xchg
out
add
mov
sub
cmpl
aaa
sti
aad
cmp
pop
bound
adc
inc
pushf
mov
das
adc
idiv
shrl
pop
cmp
subl
in
clc
ror
icebp
jne
xor
jb
test
mov
outsl
cmp
in
adc
stos
shll
xchg
faddl
outsb
and
icebp
jno
out
std
sub
and
loope
adc
sub
cmpsl
adc
jp
test
xor
loop
jns
pop
pusha
icebp
gs
pushf
xchg
and
pop
popf
push
aam
test
jno
mov
jo
jae
scas
xchg
cld
imul
cmc
dec
jno
sbbl
movsb
adc
add
inc
sti
adc
dec
je
scas
or
test
pop
scas
jb
aam
mov
je
jnp
dec
push
mov
popf
cmpsl
adc
ja
out
xchg
xchg
fdivrs
pop
daa
loop
mov
stos
fidivs
xor
int
mov
imul
mov
xchg
ds
cli
cmp
insl
fwait
cmc
xorb
dec
mov
jecxz
test
stos
xchg
fwait
or
xor
jb
jecxz
jl
xor
es
in
lods
adc
mov
loopne
jnp
cli
idiv
lods
rclb
sbb
sub
es
cmp
pop
rclb
rcrl
dec
stos
and
icebp
push
cmp
rorb
loop
scas
icebp
std
into
scas
loope
inc
mov
jge
mov
test
iret
lds
popa
and
jns
jle
idiv
pushf
pusha
mov
xorb
sub
sub
int3
mov
cmp
rorb
rsqrtps
arpl
xchg
lea
pop
cmp
fdivrp
cltd
aad
push
adc
xlat
shl
inc
sbb
jl
inc
push
sbb
mov
add
repnz
dec
dec
ficompl
lret
rorl
push
movsb
or
sub
pop
fildll
adc
adc
xor
cmpsl
inc
push
mov
mov
clc
pop
pop
inc
cltd
add
mov
icebp
cld
pop
loope
pop
shr
insb
in
mov
push
xor
lahf
xchg
fwait
rcll
lcall
sub
jmp
movsb
ds
mov
xchg
xor
jp
popl
sub
icebp
fdivs
mov
sub
adc
adc
aaa
sub
xchg
cmp
fs
insb
fisttpl
orb
and
add
pop
sahf
daa
pop
dec
mov
rcrl
ds
push
daa
lods
shll
dec
roll
call
aaa
adc
idivb
in
push
sbb
mov
aam
or
loopne
es
les
ficomps
jne
fld
stos
xchg
hlt
jns
cmp
mov
ja
push
scas
sbb
or
mov
adc
lss
ret
push
xchg
push
xor
lds
aaa
pop
lds
and
push
mov
out
mov
or
pop
in
insb
in
sub
cmpsb
mov
mov
aam
shlb
mov
push
or
fisttpl
xchg
inc
dec
adc
cltd
lret
push
insb
xchg
lret
arpl
call
pop
loop
pushf
jbe
pop
pop
push
fucomi
hlt
pushf
ja
pop
jecxz
sbbb
mov
sub
loope
adc
pushf
push
push
mov
sbb
sbb
inc
or
ret
mov
mov
xchg
mov
imul
loopne
aad
cs
push
sub
xor
lret
ret
in
jmp
dec
jl
sbb
sub
pop
or
fistl
sub
out
push
or
cmp
pushf
jle
mov
int3
rcrb
jo
cmp
rol
sbbl
pushf
shlb
lock
daa
inc
jmp
xchg
dec
or
sbb
in
inc
pushf
sub
dec
icebp
sbb
aam
orb
xchg
rcll
xchg
leave
je
push
mov
cmpsb
adc
inc
leave
in
push
cmp
jmp
lock
and
stos
and
jb
jnp
scas
lcall
jno
sar
mov
inc
jns
or
push
adc
sbb
cltd
mulb
in
add
mov
lods
inc
repz
add
nop
bound
fsts
mov
jo
dec
and
lods
arpl
clc
shlb
icebp
arpl
fwait
sbb
fcmovnu
test
fdivp
sub
xlat
xlat
test
push
into
in
or
insl
es
int
or
xchg
inc
cmpsb
inc
push
iret
iret
cmp
je
sub
outsb
dec
je
jo
push
scas
aad
mov
fbstp
cmp
mov
enter
and
movsl
loop
cld
mov
mov
jae
in
cmpsl
mov
out
outsl
and
jbe
rcrb
add
cmp
arpl
into
sbb
mov
xlat
in
pop
mov
pop
int
repz
fcmovbe
fistpl
cs
xor
jg
jl
sti
imul
adc
xor
dec
pop
dec
call
mov
mov
popf
jg
cld
in
jle
sbb
pop
or
sahf
inc
sahf
mov
nop
and
test
add
mov
iret
inc
xchg
and
mov
push
ss
jne
cltd
sub
call
fists
xchg
fsubrs
push
dec
sub
scas
and
fsubrs
loope
push
mov
and
xchg
arpl
mov
loope
or
mov
imul
push
out
dec
cld
daa
mov
ret
push
jmp
jne
out
out
pop
mov
arpl
scas
dec
movsl
cmp
push
xor
and
dec
jns
pop
movl
jp
mov
adc
sub
dec
sub
inc
mov
lea
repnz
mov
mov
daa
int3
mov
imul
mov
cwtl
jo
rclb
lods
imul
shr
movsb
mov
inc
ss
outsl
aaa
stc
test
and
leave
mov
leave
add
lods
scas
jle
clc
push
loope
xor
xchg
loop
cmp
sub
mov
xor
insl
ljmp
sub
les
lret
aaa
cmp
jge
jg
cmovp
and
jne
cmp
imul
testb
scas
cmp
jl
xor
shr
cwtl
jnp
outsl
mov
imul
sbbl
lret
mov
out
cmp
clc
and
mov
or
add
test
scas
cwtl
pusha
inc
popf
or
shl
jge
dec
test
ret
mov
aam
ljmp
jle
cmp
test
sbb
orl
sbb
add
std
jmp
lods
or
jnp
sti
ljmp
pop
out
adcl
xchg
jmp
jl
jo
int
jmp
mov
ret
xchg
jmp
jnp
pop
pop
lret
add
mov
dec
sub
push
cmp
mov
fidivs
dec
pop
daa
adc
imul
cwtl
dec
xchg
pop
xor
ss
mov
add
lea
loopne
inc
lea
repnz
cmp
leave
push
xchg
and
call
xchg
clc
mov
mov
je
inc
push
addl
pushf
mov
lahf
adc
adc
xchg
lods
push
mov
call
mov
fs
into
ficoml
sbb
or
cmpsb
dec
sahf
loopne
jp
sbb
mov
jmp
inc
call
xchg
cmpsb
lret
push
rol
nop
imul
leave
sub
cli
push
jecxz
in
push
stos
and
adcb
mov
lahf
shrb
mov
rcrb
shr
jns
in
out
jnp
scas
or
jbe
cltd
ret
xchg
ret
enter
jbe
pusha
xor
mov
jecxz
pop
or
in
ret
adc
insb
shrb
pop
in
adc
hlt
lds
sub
sbb
or
xor
movlps
pop
mov
inc
or
push
int
repnz
cmp
sub
cmpb
bound
loope
not
outsb
aad
adc
and
xchg
cmc
inc
mov
and
lds
lcall
test
mov
pop
mov
mov
dec
iret
int
fldcw
sti
movsb
repnz
push
popl
sti
lret
fisubrl
jl
mov
sarl
out
outsb
dec
adcl
jmp
inc
in
dec
push
cmpsl
cltd
mov
push
stc
mov
test
aaa
xor
cmp
cli
sbb
dec
add
inc
pop
cmpsl
xchg
hlt
cltd
clc
xor
xchg
ret
enter
dec
or
rsqrtps
sahf
out
pop
mov
push
inc
test
or
push
add
xlat
rolb
imul
lea
mov
call
xchg
scas
dec
dec
insb
mov
ret
and
call
enter
dec
stc
xchg
jmp
mov
pop
cmpsb
xor
mov
test
mov
or
cld
xor
pushf
data16
lret
pop
sub
xor
jnp
rorb
out
mov
mov
mov
stc
sarb
and
mov
dec
cmc
insb
mov
fdivrp
popf
sub
mov
inc
and
push
sbb
push
adc
inc
pop
mov
das
push
into
in
jmp
cmpsl
dec
jb
mov
inc
push
lret
inc
div
mov
ss
mov
sahf
mov
fwait
xchg
jnp
ds
mov
cs
mov
xchg
ds
xor
sbb
shrl
fs
mov
push
stos
jb
mov
add
std
add
jne
add
jge
adc
pop
sbb
test
push
jns
aam
aam
jbe
in
mov
sub
loope
jl
pop
sub
mov
icebp
xor
pop
dec
xor
outsl
sbb
mov
call
call
in
dec
dec
dec
or
mov
fldenv
cwtl
mov
sub
js
stc
sti
sarl
cmp
sahf
cmpsl
sub
lock
sar
cmp
xlat
popa
push
inc
cmpsl
jg
sahf
shll
or
loope
or
call
adc
sahf
xor
lods
or
andl
lods
push
cmpb
into
xchg
loopne
push
cmc
mov
adc
ds
jb
push
inc
push
enter
sub
pop
mov
and
shl
xchg
cmpsb
mov
pop
pop
inc
lcall
push
jb
jp
popf
or
in
jbe
and
pop
sub
mov
aaa
adc
fstpt
ret
mov
fwait
dec
or
xchg
icebp
sbb
push
repnz
cld
movsl
mov
test
stos
fsubl
and
jle
xor
sub
mov
pop
push
les
dec
ficoms
sti
scas
jecxz
cmc
js
mov
mov
mov
and
out
mov
mov
adc
data16
into
push
adc
dec
mov
addr16
pop
cs
inc
sbb
mov
pop
fwait
sub
pop
dec
jmp
fimuls
mov
inc
add
test
mov
mov
push
clc
jo
push
inc
clc
cmp
adc
xor
or
mov
sbb
pop
mov
cmpsl
hlt
addr16
repz
cmp
mov
dec
cltd
xor
xchg
inc
je
and
fs
pusha
aas
mov
pop
fnsave
cli
enter
popfw
loop
xor
cmc
sbb
das
mov
cmpsl
push
and
leave
mov
leave
sbb
jmp
js
loop
sti
sbb
jmp
add
mov
psubd
cmpsl
movsb
or
pop
cmp
pop
test
mov
cmovb
push
inc
adc
sub
scas
sub
or
lods
sbb
cltd
arpl
pop
popa
lahf
pushf
fisubrs
aad
xchg
sub
adc
ja
xchg
jae
jb
xchg
push
mov
mov
lds
in
xchg
ret
mov
cltd
push
test
loopne
jp
cmp
pop
pop
test
xchg
lret
aas
out
jmp
pop
mov
push
mov
adc
lcall
mov
inc
lret
and
orl
cltd
xor
xchg
scas
cmc
aad
fs
leave
outsb
sahf
or
jae
inc
andb
jbe
fst
pop
test
loope
ret
fidivrs
call
cmp
sub
inc
jp
insl
js
inc
or
pushf
mov
hlt
jbe
cld
into
cwtl
mov
ret
add
jge
mov
xor
sti
pop
or
aaa
xchg
lock
push
jo
xchg
loope
sbb
lret
repz
pop
out
sbb
into
xlat
in
and
jne
fcoml
idiv
mov
in
adc
in
cmp
xor
idiv
fldenv
js
ds
adc
or
pop
lds
faddl
rcrl
jns
mov
jbe
into
out
sahf
out
inc
sti
divl
outsl
mov
sbb
imul
mov
lret
outsb
ret
lock
fisttpl
xchg
gs
nop
cltd
push
ret
pop
das
dec
sti
shll
stc
xchg
mov
xor
mov
add
ljmp
ret
imul
jae
mov
loopne
pop
push
testb
mov
xchg
mov
or
add
pop
mov
jno
push
xorl
adc
dec
sbb
mov
or
xchg
fimuls
cmp
imul
dec
inc
test
adc
loop
arpl
mov
dec
jmp
or
jg
mov
inc
daa
loop
dec
cli
pop
cli
int
into
in
in
sub
pop
in
dec
in
ss
popa
dec
sub
cmp
mov
or
cmp
or
hlt
movsb
push
outsl
mov
pushf
xor
mov
test
push
push
dec
cld
mov
jge
push
in
out
inc
rcrb
cld
jae
mov
aam
out
rorl
out
cs
fidivs
or
jmp
xor
test
pop
lahf
in
mov
adc
testl
shll
xor
dec
xor
scas
dec
xchg
mov
cmp
jg
lahf
repz
mov
dec
pop
inc
ljmp
std
push
add
lcall
xchg
fcoms
pop
mov
shl
jnp
xor
aad
insb
add
pop
sub
add
ret
sub
sti
mov
pop
sarl
xor
sub
mov
lods
pop
es
pop
movsl
xchg
test
push
push
rclb
jb
xchg
xor
scas
or
rcrb
cmc
insb
lcall
dec
inc
sbb
enter
dec
icebp
nop
jno
push
dec
stc
fs
lret
sbb
mov
jnp
les
sbb
mov
popa
push
cmp
or
int3
mov
lret
insl
jno
add
adc
mov
fdivl
pop
insl
or
adc
in
test
hlt
faddl
pop
mov
mov
adc
push
and
or
add
divl
jbe
fwait
into
add
int
lcall
or
fisubl
insl
mov
mov
ds
sbb
mov
hlt
and
in
outsl
inc
add
and
or
fcomip
stos
mov
pop
dec
adc
arpl
out
push
inc
mov
repnz
ljmp
data16
int3
pop
scas
mov
mov
mov
mov
test
mov
shr
mov
out
arpl
cmpsl
sub
or
add
inc
dec
test
int
jbe
jmp
sbb
cmc
js
or
jmp
mov
ret
fsts
jl
mov
xor
dec
sub
or
loop
mov
dec
lret
jnp
pop
das
rcr
ret
pushf
cltd
cmp
and
ret
lea
lahf
movsb
lret
ret
dec
ljmp
iret
into
std
jg
lods
xor
mov
stos
stos
add
sbb
push
pop
dec
gs
cmp
inc
std
mov
mov
inc
das
xchg
dec
xchg
jbe
clc
add
push
or
popl
fsubrs
sbb
neg
jp
jg
dec
push
dec
sub
sbb
push
divl
cmc
call
dec
mov
lods
das
add
inc
cmp
and
fsubs
jbe
inc
rep
pop
sti
cwtl
bts
sarl
scas
push
lcall
cwtl
mov
fistl
jge
sbb
loopne
call
xor
ds
mov
hlt
push
dec
movsl
mov
dec
cmp
ljmp
test
cwtl
push
xchg
pop
xchg
sub
dec
jnp
cltd
in
filds
insl
test
push
dec
stc
pusha
movsl
fisubrs
jg
test
shrl
jae
fsubr
notb
stos
cwtl
repnz
dec
jae
jmp
rorb
or
add
xchg
adc
out
stos
nop
in
stc
and
dec
cli
popl
fidivrs
pop
lods
add
xor
sarb
and
mov
es
push
repnz
test
movsl
shrl
stos
ja
lods
es
xor
cmp
mov
xor
icebp
inc
and
and
or
ljmp
xor
cmc
xorb
xor
leave
cmpsl
push
xchg
cmp
sbb
cmp
fidivl
jnp
loope
sar
outsb
dec
jnp
pop
xchg
pop
insl
pop
add
add
sarb
add
ss
adc
mov
daa
mov
scas
les
sbb
push
dec
aam
pop
sbb
inc
mov
into
int3
cmp
or
pop
arpl
imul
xor
aam
and
inc
ret
cmpl
mov
jne
or
dec
and
mov
jbe
jb
add
sbb
push
mov
lods
daa
test
int
repnz
mov
pop
out
test
into
insl
iret
negb
repnz
in
jae
sub
insl
and
or
adc
add
popf
loopne
push
mov
shll
pushf
repz
int3
dec
push
sub
pop
ds
aaa
in
lahf
dec
lods
and
xlat
pop
aaa
repnz
mov
xchg
dec
jbe
idivb
cmc
mov
jg
sub
sbb
test
sbb
xchg
addr16
mov
daa
fsubrs
push
pusha
inc
xchg
push
jno
js
cmpsl
cmp
push
jbe
add
pop
nop
nop
jge
sahf
jp
pop
add
and
imul
in
xor
shlb
imul
push
xlat
insb
dec
es
pop
mov
sbb
add
loop
xor
sahf
enter
test
sbb
push
pop
push
fs
mov
shr
inc
fwait
push
xchg
clc
rorl
mov
filds
pop
xor
out
mov
lods
test
repnz
pop
adc
fsubl
fldenv
pop
loope
pop
pop
jne
dec
iret
mov
scas
in
inc
aas
sbb
xchg
insb
mov
sbbl
dec
sbb
push
scas
cs
mov
out
or
es
xor
pop
cs
xchg
push
add
cmp
orb
push
fbstp
mov
mov
jle
loop
jns
addb
seta
mov
mov
mov
and
scas
pop
mov
inc
cmp
test
or
cmpl
daa
test
mov
ja
add
addr16
fdivr
aaa
pop
mov
mov
jns
cmc
cmp
add
mov
popf
cmp
mov
insl
inc
fiaddl
js
push
jg
mov
xchg
mov
sub
rcll
cmp
add
push
dec
cmp
nop
mov
cmpsl
mov
in
rclb
fcoms
add
cwtl
jg
lret
pusha
shll
rcrb
jg
mov
cld
cmp
popa
les
inc
ret
cmp
out
cmp
jl
jne
cmpsl
sti
stc
cmpsb
and
xchg
push
jmp
nop
push
aam
call
push
fildll
xchg
xchg
lret
cmpsb
fwait
mov
adc
je
push
clc
cmpsl
fdiv
and
cmp
cmp
popf
xor
sub
jne
int3
out
dec
mov
push
cmp
lcall
cmovl
mov
into
in
push
faddl
mov
inc
jle
sbb
fisttpll
fisubs
lods
xor
pop
inc
sub
sti
sbb
fsubl
inc
mov
sbb
mov
inc
hlt
sub
sbb
push
imul
inc
or
inc
push
push
add
mov
fcoml
and
mov
je
js
dec
aaa
mov
xorb
movsb
pop
aam
fildll
ret
jmp
add
clc
es
adc
roll
sub
jp
cmc
pop
jmp
mov
add
fiaddl
xchg
shrb
jno
jno
loope
ret
decb
sbb
sub
jle
and
scas
jae
mov
pusha
add
xchg
fldt
sub
sub
lret
sahf
pop
mov
sub
mov
inc
fldt
stos
cli
aas
xchg
fs
cmpsb
lock
js
lahf
ret
jne
adc
test
test
cmp
xchg
or
stos
loop
in
jmp
popf
loop
in
dec
insl
push
adc
push
jge
mov
push
pop
ja
mov
lret
ret
icebp
iret
mov
fwait
test
ds
sub
jnp
add
inc
xor
arpl
iret
or
orb
push
roll
xchg
imul
scas
inc
les
push
mov
pop
push
push
adc
xchg
aad
add
andl
xor
mov
inc
adc
rcrb
push
pop
push
push
jge
xor
in
adc
enter
and
dec
sub
icebp
mov
cmp
arpl
mov
test
inc
aaa
mov
aas
adc
mov
bnd
enter
lret
sbb
dec
jmp
ljmp
cs
lret
xchg
cmpsb
stc
mov
popf
iret
je
icebp
cli
jmp
cmc
mov
push
out
cmp
shll
push
cmp
cmp
scas
and
ret
and
jle
insw
jnp
das
xchg
xchg
into
jbe
push
outsl
hlt
and
movsb
inc
scas
mov
mov
dec
sbb
dec
mov
mov
ljmp
and
cmc
dec
lea
out
jp
shlb
cmp
dec
fsub
notl
xlat
xor
sbb
push
cli
sub
fisttpl
sbb
xor
data16
xchg
popa
out
insb
mov
or
std
push
sbb
shrb
mov
push
and
rorl
addl
shlb
xlat
sbb
xchg
in
dec
mov
pop
mov
dec
xchg
leave
sub
sbb
cmp
mov
aad
lcall
leave
push
push
push
inc
out
xor
jb
add
bound
xor
mov
xchg
icebp
add
and
outsb
scas
aas
add
fs
inc
cmpsl
push
mov
push
jge
cmp
inc
sbb
icebp
sbb
int
mov
mov
push
call
mov
cmp
lea
sarl
xchg
xchg
cmp
outsb
repnz
fs
cmp
test
dec
lea
testl
ds
mov
push
pushf
sbb
cmp
cmp
in
in
test
adc
cmp
fisubrl
cmp
pop
xor
loopne
test
pop
lods
cltd
aaa
outsl
mov
push
pop
sbb
mull
scas
hlt
and
sbb
popa
push
add
lods
ret
xlat
jae
xchg
or
xor
pop
push
cmp
and
ficoml
int3
bound
xor
movsl
cs
xor
or
mov
lar
cld
movsl
cmp
dec
fisubs
lahf
sbb
rolb
dec
adc
repz
pop
in
jb
in
subl
cmp
jecxz
es
lods
mov
jp
pop
aam
sub
cmpsl
pop
movsb
cmp
cld
lock
mov
test
out
lds
popa
std
adc
or
xchg
not
pop
xor
mov
push
add
cmp
out
and
jp
ljmp
lea
fcmovne
fistps
mov
addb
sub
lea
inc
lods
or
mov
add
cmpsb
adcl
mov
push
loopne
mov
lods
jnp
out
sub
adc
ds
arpl
jno
cs
sub
push
sub
jle
mov
xor
jo
and
jns
adc
xrelease
lods
sub
outsb
outsl
and
sub
fisttps
cli
jl
mov
add
pop
push
xor
add
fsubrl
arpl
loopne
mov
pop
repz
push
mov
dec
jl
sahf
ss
aam
jns
push
jl
or
add
inc
pusha
xchg
psrlq
mov
test
mov
lock
add
sub
xor
out
lret
cwtl
out
mov
arpl
into
or
xchg
sbb
jo
adc
inc
rorl
xlat
xchg
inc
xchg
jnp
fwait
gs
jmp
xor
sub
aad
cmp
ret
jne
in
lds
in
ss
xor
sahf
ljmp
mov
repz
sbb
or
mov
jle
pop
dec
push
std
xchg
push
mov
jae
adc
pop
jo
jp
lahf
idivl
rol
jp
push
mov
jbe
negl
inc
inc
adc
lock
bt
add
or
sbb
xor
fisttps
aas
or
lahf
popf
aaa
fisubrl
add
sbb
out
push
and
lret
inc
cli
popf
sbb
mov
push
adc
out
xchg
sub
and
sbb
aaa
sti
loopne
dec
scas
pop
nop
cld
loop
in
pcmpgtd
inc
shl
cmp
imull
xor
fnstsw
testl
sub
add
xor
adc
out
pop
fadds
sbb
pslld
cmp
std
jno
lahf
mov
gs
mov
dec
mov
cld
mov
cmpsl
and
fidivrl
mov
pushf
jg
jae
lret
clc
imul
ja
movsw
insb
jge
and
int
cmp
insb
mov
inc
repz
enter
decb
cld
mov
mov
lock
mov
daa
pop
xchg
xlat
sahf
mov
icebp
fdivrp
push
das
xor
add
loope
push
pop
pop
insl
stos
mov
xchg
xchg
imul
mov
and
pop
stos
bound
test
addl
push
push
push
xor
push
mov
lds
jecxz
adc
adc
in
fmuls
into
in
sarb
in
dec
lods
add
pop
push
adc
jno
jle
mov
insb
fwait
pop
adc
sub
inc
xchg
adc
mov
scas
aaa
gs
mov
push
cmp
dec
inc
pop
mov
into
in
cmp
mov
add
cwtl
jb
rcll
pop
dec
mov
rcll
sbb
push
cmp
pop
mov
mov
xchg
stc
inc
fisttps
and
sbbb
nop
outsb
dec
push
mov
push
test
loope
jo
mov
add
addl
or
xor
add
ja
aam
lods
lods
pop
mov
mov
sub
popf
push
add
pop
pusha
cwtl
es
cmpsl
leave
pop
lahf
mov
and
lods
inc
pop
into
sub
imul
inc
cmc
pop
pop
dec
std
push
or
test
addr16
repz
push
pop
mov
push
bound
ds
mov
and
add
jo
add
in
clc
popf
push
and
jg
hlt
mov
mov
push
dec
mov
add
fstps
lcall
cmp
int3
jne
jo
xchg
push
stc
pop
imul
lret
negb
push
jmp
cwtl
cmp
mov
sarl
lahf
push
enter
shr
or
lds
adc
rcr
out
cmpsl
out
or
and
popf
push
mov
mov
repnz
mov
lahf
ficompl
jne
cld
push
sbb
sti
jbe
or
scas
std
xor
test
mov
push
push
shrb
jg
fnstcw
or
or
nop
std
lods
es
mov
adc
loopne
cmp
jno
jnp
sbb
loop
lods
rcrl
ljmp
mov
xor
jg
adc
movsl
add
push
and
hlt
mov
pushf
cmp
hlt
std
test
sub
add
icebp
and
pop
jns
pop
hlt
cmp
popf
pop
negl
xchg
stos
data16
lock
aas
dec
jae
cli
loop
sahf
outsl
ja
mov
sbb
mov
push
sbb
hlt
jnp
gs
push
mov
cmp
lret
pop
addl
inc
xor
and
cmp
jne
insb
stos
inc
inc
iret
push
fsub
sbb
data16
mov
xlat
out
push
mov
les
fsts
leave
inc
cmpsl
popa
add
inc
aaa
lock
and
jne
mov
mov
or
sti
xor
imul
fucom
data16
jle
add
aam
xchg
iret
xchg
ficompl
mov
arpl
jge
dec
bound
push
jno
test
sarb
mov
adc
lret
mov
mov
mov
mov
shl
pop
repnz
jne
pop
cmp
pop
shll
and
adc
xor
cmpsl
fs
fcoms
jg
addl
sub
leave
out
xchg
sub
adc
aad
cmp
sub
dec
cltd
aam
icebp
dec
mov
inc
adc
mov
adc
mov
aad
ret
push
lods
ds
push
fwait
adc
dec
mov
sarb
popf
iret
jge
jg
jbe
sahf
test
icebp
test
lds
fcoml
push
imul
sub
xor
aad
push
addb
popa
sti
xor
scas
lret
cmpsb
aam
mov
cmc
aad
ja
pop
pop
jle
arpl
mov
fs
jmp
pop
xchg
mov
jb
jbe
cwtl
mov
inc
xchg
push
mov
jb,pn
pop
cmp
shlb
push
mov
orl
mov
fs
jp
data16
outsb
add
cltd
jbe
mov
sbb
jnp
jbe
xchg
add
jg
jle
dec
fstl
pop
aad
jnp
int3
cmc
iret
mov
bound
xor
xchg
mov
pop
mov
in
jns
addr16
mov
sub
jg
std
mov
inc
xor
xor
cld
and
ficompl
and
lret
mov
sub
add
out
jmp
mov
add
test
rorb
ljmp
movsb
inc
mov
out
inc
jl
lret
int
xchg
popa
shl
pop
xchg
aas
xor
and
sbb
dec
jge
mov
add
push
fldenv
sub
movsl
jo
pushf
xor
fdivs
xchg
and
jl
push
das
gs
xchg
sbb
xor
data16
gs
lcall
ret
add
dec
pushf
sbb
pop
nop
cltd
cmp
enter
add
fwait
lods
sub
cwtl
fisttpll
sbb
cmp
data16
arpl
ljmp
mov
inc
mov
hlt
mov
mov
lret
out
xorl
jns
test
jmp
push
jp
add
insl
cmp
dec
in
pop
xlat
or
das
sub
xor
aaa
repz
scas
cs
test
jae
and
fcoms
or
cltd
lods
push
scas
cmp
outsl
add
inc
mov
mov
inc
negl
add
xchg
fcom
dec
popf
fwait
sub
cmp
mov
push
leave
aas
xchg
jecxz
jecxz
aam
mov
inc
mulb
mov
or
xor
lret
jb
adc
xchg
sbb
xor
out
andb
cmp
or
pop
in
mov
dec
xchg
aam
and
jns
mov
push
push
rcr
scas
jno
mov
rcll
fimull
lcall
push
popf
xlat
adc
movsb
iret
sarb
inc
mov
xlat
add
mov
mov
mov
ds
cltd
pop
mov
les
mov
xchg
jmp
shlb
push
xor
cmpsw
stc
mov
pop
add
insl
test
jle
xor
jl
jle
add
xor
sub
andl
test
or
jge
xor
dec
in
or
faddl
rol
xchg
jl
dec
adc
sub
enter
dec
iret
and
jnp
cmp
nop
sub
dec
cmpsb
lcall
stos
jmp
inc
jno
dec
lea
jge
in
sahf
mov
sbb
out
in
sub
xor
or
mov
shlb
adc
adc
stc
and
sub
pusha
add
cmc
pop
mov
in
in
and
cwtl
pop
dec
cli
ret
jae
pop
in
scas
cltd
out
and
add
jmp
mov
hlt
sarl
xorb
inc
stos
fucomip
push
cmp
shl
xchg
push
push
push
or
ds
fisttpl
aam
in
rdtsc
aad
andl
mov
insb
inc
lock
popa
ss
es
ffree
and
inc
dec
inc
loope
mov
ja
push
clc
xchg
aad
fs
cmpsb
pop
sbb
dec
adc
cmp
or
call
xchg
sub
xor
add
xchg
or
inc
pop
mov
cmp
pushl
or
outsb
pop
js
or
jb,pt
pop
cs
mov
xor
mov
cmp
mov
outsl
daa
push
cmpsl
test
dec
or
js
adc
inc
cli
dec
mov
hlt
sub
clc
pop
stos
sub
pusha
xlat
or
das
xchg
cli
adc
inc
xlat
pop
rol
adc
loope
xchg
loopne
outsl
mov
test
sbb
adc
shrl
stos
sub
add
adc
sbb
mov
mov
mov
xchg
jb
js
mov
outsl
mov
push
into
dec
test
mov
sbb
sub
dec
mov
outsb
lret
cmp
and
stos
xor
adc
ljmp
mov
or
fcoml
mov
lret
cld
adc
xchg
sub
dec
jmp
jg
shlb
lcall
xor
dec
xlat
dec
cmp
popa
fdivr
loop
inc
int
xchg
mov
pop
mov
xor
cltd
fisubrl
xchg
sbb
jns
pusha
iret
andl
arpl
shll
xchg
add
push
and
add
pushf
sub
dec
push
jo
jbe
push
imul
orb
loop
lods
fnstsw
data16
jbe
xor
jl,pt
out
mov
inc
push
add
xlat
cltd
das
adc
and
sub
addr16
and
roll
cld
loopne
mov
ret
test
pop
sti
mov
push
inc
sbb
je
jno
cmp
imul
lcall
es
dec
popl
mov
jbe
mov
adc
xor
inc
bound
std
adc
and
cmpsb
or
cmp
in
cmp
cld
ja
ds
enter
lret
out
jno
dec
fs
and
out
in
xorl
inc
adc
xchg
out
mov
jp
mov
ja
jb
cmc
in
in
mov
loop
sub
ss
popa
inc
out
cs
jns
sbb
sbb
mov
jno
out
inc
test
add
jle
xchg
jb
pop
cmp
shrl
aad
mov
test
hlt
fnstenv
jb
xor
sbb
xchg
leave
ja
call
ja
or
jg
cwtl
and
dec
call
mov
sbbl
lahf
mov
dec
xchg
xchg
sbb
aas
aaa
movsb
imul
aas
add
cmp
pop
sbb
sarb
test
lret
loop
stc
jecxz
in
sbb
int
rcrl
xor
or
pop
add
pop
dec
test
dec
pop
or
es
dec
pop
test
cwtl
dec
rolb
sbbb
js
pushf
out
lock
cmp
xchg
rorl
lret
pop
ret
mov
cwtl
and
test
fimuls
popf
xchg
popa
out
pop
mov
fiadds
push
and
jnp
lahf
aad
and
mov
sub
rorl
scas
sbb
arpl
and
daa
adc
nop
add
daa
cmp
aaa
mov
inc
aad
dec
jo
mov
daa
movsl
push
mov
jb
jbe
xchg
push
les
mov
xor
inc
outsb
xchg
cmpsb
inc
and
pusha
xchg
mov
xor
scas
cmc
in
pop
xchg
test
shll
jne
mov
in
clc
sahf
push
pop
add
adc
xor
xchg
out
std
inc
imul
jp
sarb
and
jmp
pop
roll
shrl
fwait
xor
dec
add
dec
fiaddl
pop
jmp
add
mov
xor
bound
push
add
jns
mov
jmp
push
dec
je
add
out
push
and
jnp
ja
inc
pop
jo
fdivl
lcall
jo
or
push
cs
cs
jno
xor
xchg
les
rcr
cmp
jecxz
sub
iret
xchg
inc
cmpsl
inc
mov
icebp
add
dec
inc
pop
push
jbe
daa
pop
mov
pop
push
cwtl
push
stos
out
dec
stos
lahf
test
adc
pop
cmpsl
sbb
and
jb
mov
mov
popf
pop
xchg
insb
sbb
out
pop
push
mov
dec
jo
adc
sub
sbb
sbb
pop
insl
jo
fcmove
cmp
jp
ficomps
or
adc
mov
xlat
pop
cmp
fidivrs
repnz
sub
frstor
mov
mov
imul
sbb
in
inc
fisttpl
sbb
lret
or
push
mov
mov
lret
mov
pop
pop
stos
fnstsw
outsl
push
aas
inc
je
cwtl
pop
lcall
mov
or
leave
mov
cmpsl
jmp
test
mov
fdivrp
les
cli
xor
inc
jbe
test
inc
adc
fisubrs
stc
jnp
nop
xlat
xorl
and
shl
dec
inc
gs
test
mov
jnp
jae
dec
inc
std
movsl
cwtl
xor
adcl
lcall
and
mov
sub
sbb
insb
or
pop
loopne
jmp
inc
js
xchg
pop
dec
pop
popf
movsb
pushf
pop
or
cmp
cmp
loop
add
pop
negb
fdivp
add
lahf
mov
push
out
push
sti
js
mov
ret
shlb
stos
mov
imul
mov
xchg
addb
cltd
mov
notl
lods
sti
insl
lea
xor
sbb
icebp
push
sbb
mov
cmp
add
out
or
test
inc
loopne
std
les
push
sub
lret
pop
loopne
or
enter
aas
test
repnz
repz
add
xor
mov
push
inc
fs
push
sarb
stos
sub
cmp
loop
scas
sahf
fisttps
mov
out
lods
pop
jb
jo
mov
outsl
dec
jo
jl
lods
push
out
jmp
xor
mov
mov
bound
jle
jno
add
aas
fidivrs
xchg
cmp
cwtl
lods
pop
stos
xor
mull
loopne
cmp
pop
imul
das
sub
jns
sbb
pop
loope
ret
jo
push
or
xchg
loope
xor
je
inc
inc
insb
cmc
cltd
and
dec
insl
sub
mov
mov
jb
xchg
das
cmpsb
arpl
cltd
cltd
add
and
push
sub
ficomps
nop
xchg
shlb
inc
jge
push
outsl
mov
in
inc
xchg
xchg
ljmp
pop
test
inc
sub
leave
outsl
pop
sahf
mov
xlat
adc
sbb
dec
in
dec
js
pop
rcrl
and
jbe
dec
sahf
xchg
push
mov
out
cmp
std
cli
aad
mov
push
lahf
lret
sub
push
mov
push
gs
test
mov
cmp
daa
xchg
add
aas
test
aam
mov
call
scas
pop
scas
dec
adc
cmp
sub
mov
adc
cld
out
int3
aaa
jnp
or
inc
addr16
sbb
inc
les
sbb
in
sub
mov
decl
imul
cld
cvtpi2ps
cld
fdivl
push
dec
mov
and
nop
dec
xchg
dec
cmpsl
stos
jg
les
mov
dec
fwait
pushf
mov
dec
stc
xchg
rcrl
mov
popa
push
lods
cwtl
cmp
data16
sbb
dec
adc
data16
inc
fistl
leave
nop
dec
pop
and
fs
aam
mul
inc
cmpb
jle
adc
outsb
div
mov
sbb
cli
add
sub
out
adc
jnp
outsl
xor
push
push
sbb
adc
mov
xchg
stc
mov
mov
jae
in
cmp
push
add
jbe
test
push
lods
sbb
test
imul
aas
adc
aam
and
push
cmc
xchg
bound
sub
dec
push
mov
push
rorb
addr16
inc
test
xor
stc
fldl
ret
orl
movsb
xchg
pop
mov
jbe
mov
push
rorl
jp
push
mov
cmpsl
nop
push
push
sahf
shl
icebp
in
add
push
nop
rorb
pop
frstor
cmpsl
incl
mov
jge
aad
push
xlat
push
jge
mov
mov
push
mov
sbb
adc
mov
xchg
pop
mov
jle
mov
jp
inc
lret
add
push
lahf
xor
mov
mov
and
inc
test
dec
insl
inc
push
xlat
pop
out
push
sub
xor
das
movsl
aam
add
shl
dec
lcall
push
lcall
xor
inc
sbb
xchg
mov
jle
dec
mov
push
sbb
lock
ret
fldenv
push
insl
js
or
xor
or
outsl
mov
and
inc
repnz
pop
dec
int3
popa
pop
sahf
pushf
mov
inc
lahf
loope
or
and
or
push
ds
dec
cmp
adc
fcoms
dec
jl
loopne
pusha
dec
jno
and
adc
sbb
mov
sub
cld
dec
or
xlat
xchg
mov
mov
sbb
push
orb
fdivrl
clc
cltd
nop
pop
adc
ja
mov
jge
insb
ret
cmp
arpl
adc
scas
jns
sbbb
dec
push
mov
lahf
shlb
scas
rcll
sarl
mov
pop
add
or
xor
lds
in
cli
pushf
push
xor
mov
scas
mov
pop
mov
mov
adc
addr16
ret
adc
and
jbe
icebp
cltd
mov
pop
pop
ficompl
popf
pop
mov
jae
aad
jnp
mov
dec
int
data16
fbstp
stos
pop
cli
xlat
pop
in
pusha
sub
or
ss
push
jno
adc
push
loop,pt
cmpsl
push
in
insb
mov
aas
loop
cli
dec
cmpsl
push
imul
pop
test
push
dec
call
xor
shrl
mov
cmpsb
leave
out
push
in
sub
push
into
jl
rcll
fdivrs
pop
loopne
push
test
lods
call
daa
in
in
into
cwtl
push
cmp
xor
gs
lods
iret
pop
mov
jo
dec
xor
outsb
push
jno
or
outsb
cmpsb
inc
pusha
and
cmpsb
test
jns
add
lock
out
push
sub
and
inc
mov
jo
je
pop
stos
jns
push
fwait
aas
out
popa
fucomip
pop
push
stc
pop
stc
and
test
std
movsl
mov
xchg
adc
cmpsb
and
stos
mov
pop
adc
stc
sbb
and
inc
mov
sub
mov
lcall
sub
outsl
pop
push
jnp
dec
add
frstor
scas
pop
and
add
inc
bnd
add
adc
out
lock
clc
mov
neg
lret
mov
xchg
jae
sbb
movsb
rcr
inc
je
sub
cmp
cmp
xchg
ds
mov
aad
mov
push
iret
mov
icebp
ja
xchg
int
sbb
xchg
xchg
jno
push
iret
iret
add
cld
stc
into
js
sbb
fdivrs
pop
xchg
dec
movl
xor
lcall
lret
stos
pop
fcomp
pop
push
adc
push
mov
flds
in
sbb
or
stc
or
fistps
lret
test
push
popa
cmp
dec
movsb
jnp
pop
js
or
lret
mov
pop
ljmp
leave
xor
inc
inc
je
sbb
jecxz
xor
xor
xchg
push
and
fiadds
out
ret
dec
sti
push
xor
std
sub
es
fisubl
ss
dec
cld
inc
pop
ljmp
in
stos
jno
subl
and
pop
inc
dec
pusha
or
jae
clc
test
fsubs
aas
jb
inc
imull
jg
pop
arpl
clc
xchg
cltd
je
mov
out
in
sbb
mov
mov
lds
inc
pop
stos
mov
push
xor
adc
dec
mov
repnz
das
sti
jle
inc
lds
mov
lret
inc
mov
and
ret
lock
rclb
ret
push
outsl
inc
and
arpl
mov
mov
fistps
jp
fs
pcmpeqd
sbb
push
sub
mov
xchg
lea
aas
xchg
mov
adc
adc
popf
cmp
push
pop
cmpl
sub
jo
jle
scas
in
inc
adc
test
repz
push
test
xor
pop
aad
das
cmp
rclb
lret
push
add
or
es
pop
test
js
cwtl
stos
mov
adc
mov
outsl
inc
or
cs
xor
dec
fsts
std
and
xchg
add
cmp
pop
in
xchg
cltd
ss
xor
sbb
mov
lahf
jg
stos
pop
out
lret
rclb
mov
add
sub
add
loop
dec
lret
mov
leave
pusha
jecxz
mov
sbb
and
int
sahf
pop
adc
jb
mov
mov
xor
xchg
and
add
rolb
fldcw
mov
adc
mov
stc
lods
and
fadd
nop
push
pop
sbb
jae
adcb
push
mov
ss
out
and
loope
xchg
aas
mov
sbb
imul
inc
sbb
ffree
fs
xlat
jl
mulb
aad
jecxz
movsl
leave
xor
xor
inc
fmuls
fcomp
or
inc
mov
dec
or
cmp
cmp
js
movsl
imul
int3
jbe
cmp
sbb
and
jae
gs
in
pop
and
xor
mov
push
fsubrs
xor
test
call
ljmp
neg
movsb
sahf
inc
sti
mov
jb
sbbb
jno
test
mov
mov
sbb
lock
je
jae
adc
cmp
outsl
loopne
aad
lods
inc
int3
xor
je
xor
pop
int
std
xchg
push
xor
xlat
test
or
lods
sahf
fcmovnbe
dec
mov
movsl
jnp
dec
pop
cs
xchg
or
and
int3
insb
stc
add
push
xor
daa
je
and
hlt
inc
movsb
stc
stos
rcrb
call
push
hlt
iret
xor
mov
push
lret
call
shr
pop
jnp
sahf
mov
daa
and
mov
mov
or
xor
push
pop
arpl
xchg
xor
popa
mov
jge
sbbl
leave
xor
sahf
cmp
lea
pop
pushl
mov
dec
cmp
mov
mov
je
xchg
add
push
movsb
and
andb
mov
stc
jecxz
pop
sbb
or
shl
test
lcall
add
cmpsl
cmp
push
cwtl
mov
pop
add
fdivs
loopne
inc
ret
push
cmp
mov
and
and
flds
aad
scas
push
push
inc
cmp
lea
cmpsl
cmp
fs
push
jb
jl
cmp
or
loopne
mov
mov
jmp
cmp
das
ret
add
enter
movzbl
dec
push
xor
xchg
das
xlat
mov
outsl
cmp
out
adc
add
mov
pop
jge
shrb
or
ss
incb
pop
add
cmp
add
inc
mov
insl
ss
cmp
adc
push
inc
mov
sub
xorb
out
fwait
add
mov
movsl
scas
xor
in
lock
shll
jno
lods
int3
loop
pop
fs
idiv
and
inc
pop
pop
clc
mov
dec
and
dec
jbe
inc
lods
decb
jmp
jnp
lock
mov
pushf
and
mov
cmp
sbb
bound
push
call
mov
std
iret
mov
data16
aad
jecxz
xchg
dec
jmp
pop
sbb
clc
in
mov
bound
sbb
mov
lods
mov
outsl
cmpsl
sti
outsb
mov
and
jmp
cmp
fsts
lods
fldcw
insb
jo
pop
or
sbb
iret
das
mov
out
mov
jno
sahf
sbb
lcall
jg
xor
xchg
and
clc
sarl
xlat
mov
mov
sub
bound
aam
in
mov
push
jns
repz
dec
loope
or
add
in
cwtl
jecxz
dec
rcrb
xor
idivb
mov
mov
push
arpl
xor
mov
sbb
xchg
data16
pop
pop
leave
mov
in
movntq
out
into
inc
rorl
aaa
movsl
mov
adc
mov
or
jns
aam
lahf
stos
aad
adc
sub
aad
ret
jbe
in
sbb
pop
add
sub
out
gs
jo
mov
xchg
lods
pusha
cltd
shll
jbe
sub
mov
add
out
mov
dec
dec
pop
sub
pop
inc
jo
mov
and
cmp
insl
push
adc
scas
push
filds
sub
jns
adc
xor
push
jns
xchg
push
mov
dec
fs
cli
shr
insb
pop
movsl
push
mov
lods
push
mov
lret
ljmp
ja
in
mov
fs
or
popw
fucomip
stos
insb
movsl
ret
ljmp
imul
jp
jecxz
pusha
insb
mov
js
mov
dec
into
test
adc
ss
shrb
xchg
sbbb
cmc
mov
pop
imul
xor
xchg
insb
std
test
scas
sub
cltd
insb
mov
pop
lods
iret
icebp
xchg
mov
test
adc
in
insb
push
add
or
adc
inc
les
sub
cmc
cmpsb
mov
mov
into
or
jmp
dec
call
mov
aad
es
daa
push
and
cmp
pushf
inc
push
popa
enter
std
das
lock
dec
pushf
mov
mov
insb
inc
es
pop
mov
out
imul
fucom
pop
cmp
jp
mov
sar
sbb
loop
sbb
aas
test
mov
and
dec
inc
mov
das
inc
cmpsl
fdivrl
enter
pop
xchg
add
pop
ljmp
sbbb
inc
pop
mov
or
popa
add
cmp
ret
int
sbb
lds
cmp
push
xchg
jmp
dec
push
mov
xor
push
sbb
sub
in
sbb
cwtl
pop
push
cmp
push
sub
aas
subb
data16
outsb
xor
flds
shll
and
dec
inc
ja
and
jge
mov
dec
mov
inc
into
add
cwtl
daa
jne
int
push
dec
cwtl
stc
jbe
or
sbb
push
mov
dec
push
adc
and
inc
xchg
cmpsl
dec
sti
repnz
jnp
outsb
sahf
sar
push
fldcw
ds
inc
cli
pop
insb
ret
mov
fildll
mov
sub
xchg
das
outsl
insl
js
leave
in
lds
xchg
jle
pop
pop
mov
ja
or
or
scas
mov
cmpsb
aaa
adc
out
dec
loope
mov
and
popa
movsl
popf
stos
jle
loope
pop
imul
sub
mov
fldl
out
imull
or
jmp
repz
add
loopne
addb
leave
xor
push
pop
mov
or
cmp
nop
fstpt
xchg
rcrl
xchg
call
or
sbb
push
xchg
jg
mov
test
fmuls
sub
lods
mov
sbb
push
cmp
les
aas
inc
sub
push
xchg
inc
mov
subb
roll
pop
in
jmp
add
lock
outsb
inc
adcb
fwait
and
insl
pop
pop
ja
inc
sarb
push
shlb
sub
jae
fmul
lds
xor
fildll
insb
xchg
or
int
mov
fdivp
and
leave
sbb
pop
jb
mov
push
loope
fcompl
sub
pop
gs
rcll
xchg
lock
push
jae
inc
das
out
sbb
js
jae
and
cmp
or
push
test
mov
jo
lahf
test
pop
pop
inc
clc
test
pop
sub
ds
fists
jle
xor
lcall
mov
insl
inc
fildll
mov
pop
mov
inc
and
aad
cmc
scas
or
or
icebp
jg
sahf
dec
xchg
pop
pop
sub
dec
inc
or
enter
mov
test
add
dec
mov
push
adc
add
test
lret
xchg
adc
mov
mov
insl
sub
jns
mov
and
sbb
ss
mov
stos
push
imul
jmp
icebp
je
ret
jg
test
gs
stos
xchg
jmp
cltd
or
das
xor
pop
in
xchg
jl
lea
push
mov
jne
xchg
test
addr16
mov
mov
out
cwtl
ret
stc
dec
sbb
jns
cmpsb
aad
fmull
pop
cmpsl
lahf
fbld
push
xchg
adc
ret
aaa
xchg
cmc
aad
test
test
xchg
ljmp
addr16
mov
push
push
fidivl
add
mov
lods
xchg
pop
es
or
xor
add
xor
pop
adc
clc
or
mov
ja
test
outsl
enter
jb
inc
push
jo
setl
sbb
rcrb
pop
cld
ja
sbb
cmc
mov
pop
add
adc
or
test
in
inc
mov
nop
xchg
add
mov
enter
pushf
or
add
adcb
cltd
push
imul
ret
mov
imull
and
xor
rorl
clc
inc
pop
popa
inc
cmp
cmp
ret
jl
jne
sbb
lret
shll
adc
push
aad
addr16
pop
cmc
das
repnz
and
out
sbb
sbb
repnz
clc
inc
sub
test
cs
push
sbb
xchg
rcr
cmp
mov
sahf
pop
cmp
adcl
repz
outsl
jge
out
negl
icebp
fisttpll
shlb
cltd
pop
lock
sbb
pop
or
xchg
xchg
dec
nop
leave
addr16
int
or
jns
repnz
pushl
test
mov
popa
std
mov
mov
in
sbb
pop
mov
inc
cmpl
fcmovnbe
popf
and
stos
add
inc
mov
xchg
iret
fmull
aam
or
cmpsl
xor
add
sub
rcrl
add
sub
xchg
and
adc
sbb
cmp
push
loopne
add
out
into
jl
mov
out
push
dec
cltd
ljmp
sbb
push
movsb
js
jae
repnz
loope
daa
sbb
mov
inc
test
pop
mov
into
addr16
aam
into
int3
daa
xchg
cmpsl
mov
xlat
inc
mov
fs
in
jne
call
test
pop
call
imul
add
fsts
xchg
add
mov
iret
ljmp
shrl
jb
aad
inc
sbb
pop
jl
lret
xchg
outsl
jle
pop
pop
std
jnp
xchg
push
out
int
loope
dec
mov
jge
adc
add
insb
out
dec
or
cltd
jb
cld
inc
cli
aaa
test
dec
popaw
sbb
add
testl
int3
cmp
push
aas
push
xchg
mov
adc
sub
fdivp
movsl
add
and
test
xchg
popf
dec
add
sub
popf
add
xchg
sahf
sbb
stc
push
cld
sbb
pushf
mov
add
pop
int
loopne
or
je
mov
mov
mov
dec
lahf
xchg
jmp
repnz
test
test
push
lods
mov
ja
push
mov
xor
ja
aam
inc
mov
push
cltd
lcall
pop
jg
push
and
cmp
mov
jbe
in
popa
pop
jns
cld
sahf
decl
push
loope
jecxz
xor
jge
dec
mov
pop
push
adc
mov
push
push
xchg
lods
fadds
leave
push
push
xchg
es
adc
cmc
xor
insb
or
cmpsb
sarb
mov
push
test
cld
xor
mov
mov
mov
test
fmul
addb
jns
inc
shl
xchg
sahf
sbb
jl,pt
sbb
decb
bound
or
and
imul
clc
in
outsl
or
sbb
pop
mov
push
adc
mov
and
sub
push
pop
aaa
dec
cmp
mov
cld
jbe
outsb
andb
mov
lods
aam
std
faddl
mov
in
mov
or
mov
dec
repnz
std
sub
xor
sbb
mov
loop
arpl
jno
cmp
inc
mov
sahf
inc
dec
jne
ss
xlat
movsl
pushf
fiaddl
insl
push
testl
daa
das
or
js
test
mov
inc
push
push
imul
mov
jp
adc
in
jbe
jp
add
into
sub
jle
push
adc
cmp
jg
add
push
dec
lods
xchg
xor
iret
dec
adc
mov
icebp
mov
lock
addr16
xor
cmp
mov
push
cmpsb
hlt
sbb
push
mov
sbb
addr16
insl
jp
xor
ja
filds
adc
outsb
out
cmpb
jbe
xchg
aaa
cmp
push
mov
sub
jae
xchg
shlb
lret
adc
push
dec
out
pop
into
mov
aaa
icebp
cs
in
add
dec
cmpsb
mov
int3
pop
loope
add
outsl
xlat
test
test
addb
int3
in
or
xor
insb
mov
mov
add
movsb
lea
sarl
or
xor
ljmp
add
xlat
sub
pop
mov
scas
out
mov
adc
scas
mov
inc
xor
loopne
xchg
movsl
fwait
xor
xor
push
cmp
pop
das
data16
idivb
out
xchg
or
mov
ss
icebp
adc
fidivrs
jp
cmp
ret
mov
scas
fiadds
ret
inc
in
sub
jns
loopne
xor
cmp
inc
xor
cld
pop
and
jnp
add
ret
loopne
ret
inc
inc
out
sub
cwtl
cmpxchg
jmp
outsl
push
sbb
cltd
outsl
cmpsl
push
movsb
movb
add
cmp
jne
inc
pop
push
xchg
push
lahf
testl
jecxz
cmp
outsb
xchg
inc
and
dec
sbb
adc
mov
adc
jg
ret
mov
add
inc
test
stc
lahf
jp
mov
or
cltd
fadds
xchg
loopne
xorb
and
mov
aas
mov
dec
frstor
mov
cmp
lahf
int
sub
jnp
cmp
cwtl
or
mov
push
mov
pop
lock
cmpsl
rcll
daa
jmp
mov
mov
or
fcomi
lea
test
hlt
nop
cmpsl
mov
jae
and
jle
push
test
add
jno
xchg
push
dec
imul
jmp
fwait
xor
loop
mov
clc
add
mov
adc
lahf
dec
mov
sub
pop
sbb
shrl
flds
das
rcll
lods
pop
in
mov
daa
les
ret
push
mov
pushf
shll
jbe
sbb
outsl
sbb
out
cmp
push
mov
and
lcall
filds
adc
fisttps
dec
jns
xor
jbe
jge
sbb
stos
inc
jo
xor
lret
mov
mov
cmp
and
lock
adc
repnz
jbe
sub
dec
test
test
aad
push
lret
xor
cmp
imul
sbb
and
out
mov
fiadds
in
cmp
mov
jnp
imul
sbb
das
pop
jne
cmpsl
aam
ja
or
cmpsl
push
sbb
sbb
inc
loop
jmp
or
in
adc
cs
mov
sti
adc
sub
xchg
inc
shll
push
and
dec
push
lds
push
roll
out
inc
sbb
mov
xchg
js
in
xor
cmpsl
push
insl
fdivs
ss
jbe
mov
lea
sub
ds
incl
jmp
and
into
xchg
sub
push
mov
pop
xlat
ja
mov
loopne
orb
cwtl
shll
add
sarb
cmp
inc
dec
repz
cmpsb
repz
pusha
int
cmp
and
lods
fnstenv
iret
xchg
mov
ja,pt
insb
aam
xor
push
inc
lock
mov
jmp
mov
pop
push
mov
sub
sahf
xchg
add
xchg
repz
xchg
icebp
cmp
mov
mov
pop
lods
jp
add
sbb
in
popa
mov
lods
cmp
mov
or
mov
push
add
xchg
ret
rolb
pop
jg
xor
mov
aad
inc
lods
adcl
addr16
add
jmp
sbbl
cld
cmp
scas
aam
or
stos
push
push
hlt
and
cmp
xor
shl
jmp
sub
sbb
scas
xchg
or
in
sbb
pushl
cmc
mov
sbb
ljmp
dec
int3
mov
mov
out
fcompl
mov
mov
cli
and
mull
testl
xchg
decb
scas
bound
gs
dec
mov
push
stc
pop
dec
leave
ljmpw
add
mov
fistpll
je
and
pop
and
add
and
mov
movsl
cs
ror
inc
and
jp
mov
push
adc
cmp
push
push
movsl
push
fstps
xchg
sti
and
mov
ljmp
enter
cmp
mov
xchg
dec
in
mov
imul
data16
cwtl
les
nop
dec
adc
icebp
push
test
stos
mov
outsb
repnz
popa
mov
xorl
cmp
clc
mov
or
movsl
add
inc
add
xchg
dec
arpl
adc
xchg
pop
xchg
nop
inc
or
mov
jmp
icebp
hlt
xlat
sub
cld
insb
es
dec
xor
aaa
lock
jmp
xor
dec
inc
jg
mov
inc
aaa
jge
data16
fcoms
sub
mov
mov
inc
stc
clc
sbb
mov
or
rorb
fimuls
je
xchg
jle
cmp
loope
pop
lods
sti
je
xchg
sub
insl
dec
iret
pop
mov
adc
addb
test
mov
out
ds
jl
insb
shl
jbe
fwait
dec
cmp
aaa
pop
lods
lcall
shrl
ret
pop
jg
jb
jge
xchg
dec
filds
inc
data16
dec
dec
mov
mov
sahf
mov
mov
mov
aas
xor
mov
jno
inc
push
call
mov
and
add
stos
icebp
inc
xlat
lcall
fstl
lcall
jge
sbb
ss
iret
imul
xchg
add
shlb
sbb
inc
dec
mov
xchg
dec
rcrb
or
push
testb
shll
push
jns
mov
rep
sub
int
mov
fs
aas
push
adc
cmc
and
vpsrld
fwait
loopne
or
dec
cltd
xacquire
xchg
and
xchg
hlt
pop
push
inc
sbb
push
shl
cmp
jle
pop
ja
sub
test
jmp
ss
xorps
sbb
inc
jae
je
lret
push
mov
dec
xor
lock
lea
xor
hlt
jge
out
jo
dec
mov
jae
and
std
xor
lret
hlt
cmp
xlat
iret
scas
aad
movsb
lock
inc
scas
into
into
out
test
mov
in
mov
call
xor
les
mov
fists
push
lret
outsl
orl
mov
push
jbe
and
mov
mov
outsl
jno
xchg
fwait
test
arpl
pop
ljmp
pop
mov
sbb
pop
mov
out
scas
xchg
bound
fimuls
push
out
imul
cmpsb
out
fdivr
int
fs
and
outsl
dec
mov
lret
inc
adc
ss
xchg
out
out
xchg
sub
icebp
adc
inc
mov
rorl
mov
xchg
sahf
mov
mov
sbb
or
or
mov
mov
inc
lods
movsb
das
push
cltd
imul
dec
xor
push
lods
jmp
xor
xor
xchg
out
mov
xchg
pop
pop
flds
sbbb
gs
adc
loopne
xchg
or
aas
js
push
and
jmp
add
and
or
jle
or
gs
in
push
cmp
lods
cmp
jno
sub
sbb
xchg
and
scas
stos
add
ljmp
fs
xchg
xchg
fnsave
shlb
cld
aaa
push
mov
jb
mov
stc
cwtl
mov
sbb
fmuls
mov
or
sahf
js
je
jp
cmpsl
ss
nop
sub
data16
mov
pop
repnz
dec
popf
je
xor
xchg
leave
cltd
and
mov
xchg
sti
or
jb
mov
test
and
fidivrs
mov
add
fisubl
and
pushf
push
pop
clc
imul
into
xchg
add
imul
mov
inc
pushf
repz
ja
lahf
in
inc
jno
out
jp
push
out
adcb
test
xor
or
mov
sbb
into
aas
repz
sbb
and
enter
jns
mov
adc
imul
popa
xchg
es
jbe
mulb
cmp
pop
mov
sub
sbb
pop
sub
nop
dec
mov
mov
pop
mov
fists
sub
mov
popf
pushf
lahf
jecxz
test
mov
lock
inc
cmpsb
dec
cmc
fisttps
js
inc
into
and
pop
dec
ja
or
dec
insl
mull
push
jmp
or
fcmovbe
sub
sub
jmp
xor
cmp
jno
xchg
andl
lret
ds
adc
jl
stos
ljmp
xor
mov
iret
adc
sahf
dec
dec
fstps
sahf
dec
dec
lock
push
jne
push
push
pop
jb
inc
cmpsl
xchg
push
mov
imul
andb
outsb
cmp
dec
mov
call
fwait
int
fwait
icebp
scas
mov
xchg
push
stos
hlt
xchg
add
nop
iret
out
push
mov
jbe
mov
addr16
out
popa
mov
scas
jae
mov
jecxz
cmp
rclb
pop
sarl
inc
fsts
and
xorb
mov
stc
dec
cmp
das
push
lret
sarb
push
mov
shr
cwtd
out
push
jno
mov
push
popf
push
jge
or
and
xor
and
jmp
xchg
repnz
xchg
sbb
push
mov
fidivl
add
frstor
xchg
popf
fdivs
and
arpl
test
and
or
jb
push
dec
cmp
adc
cmp
in
dec
ja
aaa
roll
insb
out
xor
sbbb
add
stos
daa
mov
push
push
je
mov
mov
scas
mov
and
mov
mov
repnz
lods
lock
popf
mov
jmp
pop
push
push
lds
fisttpl
dec
cmp
xchg
push
jle
lret
pop
mov
inc
sbb
sti
arpl
test
add
sbb
arpl
les
inc
andb
pop
popl
adc
mov
in
insb
leave
jo
pusha
sbb
xchg
xlat
cmp
xlat
and
push
aad
dec
add
xchg
sahf
mov
push
and
pusha
push
and
sub
xor
mov
or
cmp
adc
movsb
or
lcall
test
shr
push
adc
fwait
mov
inc
lahf
add
das
and
scas
in
mov
add
pushw
rclb
xor
inc
adc
insb
xor
xor
scas
add
mov
icebp
mov
jns
es
sbb
xlat
and
rorb
std
test
outsb
add
sub
ret
mov
push
sbb
fdivrs
or
ljmp
mov
ret
jb
inc
mov
icebp
mov
xchg
in
dec
int
aas
inc
cmp
pop
or
lret
lret
ficomps
jecxz
xchg
jecxz
pop
push
into
or
dec
sub
lods
push
out
xchg
je
bound
out
jp
xchg
orl
dec
pushf
pop
cmpsl
xor
mov
dec
std
in
jmp
lock
and
xchg
ret
loopne
push
inc
dec
ja
fmull
or
scas
or
or
aad
loopne
dec
sbb
add
jae
jmp
cmp
inc
pop
jge
gs
xor
cmp
mov
pusha
clc
xchg
dec
mov
pop
out
jae
inc
jmp
pop
in
lret
xchg
movsb
mov
inc
in
out
iret
sub
pop
fcompl
inc
je
andl
cmpsl
lahf
enter
and
les
adc
inc
mov
jnp
push
fnstcw
cs
insb
pop
es
and
int
add
imul
adc
jb
and
or
xorl
mov
test
pop
loope
xchg
pop
outsl
lret
lods
fxtract
push
add
inc
mov
test
movsb
adc
cmpsl
ds
mov
dec
rorb
lret
pushf
cmp
jmp
ds
inc
or
in
int
add
sbb
aaa
and
mov
dec
mov
andl
xor
bound
push
and
mov
mov
add
icebp
xlat
pop
aam
pop
call
das
inc
cmpl
push
mov
xor
js
sub
dec
int3
jmp
movsb
popf
sbb
mov
cmp
jno
xchg
rorl
aad
push
shrl
jle
mov
cmp
rolb
fsubl
add
fcoml
xchg
and
jp
xchg
mov
inc
fsubr
lock
scas
pop
lret
mov
lods
inc
out
lea
sub
ficoml
enter
and
add
and
pop
test
inc
inc
pop
lods
mov
ret
dec
push
loopne
enter
ds
cmp
cwtl
xchg
sbb
xchg
imul
jbe
xor
pushf
lock
stc
push
mov
push
push
add
pop
mov
adc
sbb
out
mov
clc
lock
pop
jp
mov
cmp
xor
sti
sbb
inc
xor
push
cmp
or
pop
test
add
sbb
adc
pop
push
inc
hlt
dec
sub
daa
ret
jbe
mov
sbb
mov
jb
sbb
or
or
sub
test
lcall
rcrl
sbb
iret
icebp
lea
sub
je
dec
cli
cmpsl
dec
nop
push
aam
mov
cltd
scas
imul
fcoml
insl
or
clc
fdivrl
pop
test
push
dec
add
pop
movsb
fistps
lahf
xchg
and
pop
hlt
jne
and
mov
bound
pop
cwtl
scas
push
imul
inc
add
cmp
dec
insl
mov
clc
cmp
stc
cld
divb
inc
repnz
mov
and
cmp
test
xor
vmread
mov
jnp
ficomps
sbb
push
add
ss
xchg
xchg
xor
stos
mov
mov
sbb
push
xchg
push
or
xchg
cltd
icebp
or
iret
cmp
js
gs
inc
enter
in
sti
mov
scas
addr16
sti
push
cmp
enter
scas
enter
js
loope
das
in
ss
mov
stos
pop
and
push
or
jp
push
sub
jbe
inc
ret
rcl
andl
int
xchg
cli
xchg
cmp
and
xor
adc
sbb
sti
push
lret
dec
pop
add
mov
fs
xor
add
mov
xor
fisttpl
nop
mov
dec
fbstp
xlat
shlb
dec
xchg
mov
adc
lret
into
add
mov
test
out
mov
jnp
rol
sub
pop
aaa
cmpsl
push
mov
jnp
ret
add
sub
in
stc
cmp
popa
mov
ja
mov
pusha
cmp
inc
fldt
or
xchg
and
fs
push
mov
in
iret
adc
adc
shl
movsl
mov
mov
jl
lods
cmp
test
mov
sti
sbb
out
add
jge
cs
cltd
cmc
pop
mov
dec
pop
xchg
shrb
jle
sahf
int
inc
jne
lds
andl
jp
or
cli
test
dec
je
xor
pushf
cmp
in
dec
sub
jns
scas
in
add
dec
sbb
jnp
inc
iret
jl
cmpb
test
adc
test
or
loope
lds
mov
xor
es
movsb
inc
xchg
adc
sarb
mov
cmp
stos
add
xor
in
mov
mov
cmp
movl
jns
inc
hlt
insl
inc
lea
dec
inc
and
movsl
sbb
inc
mov
or
push
jmp
jb
cmp
mov
lret
xor
mov
cmpsl
xchg
outsl
lcall
mov
scas
mov
pop
std
fadd
ja
loope
sti
outsb
sahf
mov
adc
mov
cmp
xchg
mov
call
outsl
fs
sub
out
stc
add
out
mov
test
pusha
pop
fsubs
xor
xchg
push
scas
stos
and
mov
mov
aam
mov
add
cmp
addb
mov
rcr
bound
test
cwtl
mov
orps
pusha
ret
gs
outsl
iret
es
aas
popa
or
adc
fnstsw
pcmpeqw
xor
pop
cmp
mov
movsl
mov
insb
out
icebp
and
push
adc
and
xchg
push
or
mov
add
pop
in
daa
or
mov
rcll
jno
test
int3
es
inc
sahf
ret
outsb
mov
adc
push
enter
push
lcall
aam
cmp
insb
rorb
imul
mov
dec
adc
cwtl
inc
dec
call
call
orl
syscall
and
fcmovbe
jno
out
inc
loopne
jae
stc
fwait
xchg
jo
pop
mov
les
fnstsw
rolb
ljmp
adc
or
jbe
pop
jge,pn
je
cmp
inc
js
in
mov
test
dec
inc
mov
nop
cmp
xchg
pop
shll
xchg
outsb
rdrand
addr16
pop
out
test
ficoms
cltd
insb
push
fcoml
mov
movsl
cli
jo
fs
push
outsl
stos
mov
jbe
cs
jl
jmp
pop
test
mov
popf
xchg
xchg
mov
clc
adc
add
xor
push
mov
push
pop
mov
lret
jb
push
ss
mov
data16
rcrl
push
leave
int3
mov
ss
push
push
loop
in
in
test
jge
push
cmc
sti
sahf
subb
ffreep
mov
pop
sub
insb
mov
adc
push
and
mov
mov
sbb
mov
inc
mov
mov
and
clc
inc
sbb
pop
or
sub
and
pop
cwtl
hlt
add
test
sub
xor
cmp
popa
xchg
ret
or
adc
or
jne
xchg
pop
popa
mov
jno
push
or
sub
mov
test
jnp
xchg
xchg
sbb
adc
mov
dec
repnz
mov
or
push
movsb
add
leave
das
add
adc
adc
or
dec
cmc
mov
test
mov
ss
outsb
push
pushf
add
xchg
lds
sub
push
cltd
or
mov
xor
add
fwait
push
xchg
js
cmp
jp
sahf
add
cmp
es
js
sub
out
push
jnp
push
aas
add
inc
or
fldenv
dec
scas
sbb
mov
daa
inc
pop
push
test
imul
dec
addr16
sahf
insb
mov
iret
popa
adc
cmpsl
mov
mov
and
xchg
push
je
jg
fiadds
pop
and
inc
enter
leave
push
pop
or
mov
jl
push
fbld
push
ret
pop
mov
loope
gs
xchg
adc
pop
pusha
fwait
lea
pop
cmp
sahf
xor
mov
out
mov
cmp
or
mov
rclb
and
sbb
or
ret
loop
ss
in
jae
int3
in
add
outsl
scas
jecxz
or
cmpsb
add
sub
andl
inc
sbbb
rcr
and
push
cld
mov
insb
addr16
mov
scas
xchg
dec
cmpsl
stc
push
cmpsb
pop
mov
push
loop
insb
call
cmp
or
push
lret
pop
lods
sbb
pop
adc
les
push
or
outsl
xchg
es
fwait
hlt
fisubrl
and
mov
or
cmc
xchg
mov
dec
dec
pop
sub
xor
hlt
cwtl
insl
pop
add
sub
xchg
xchg
push
push
sub
inc
xchg
or
and
test
das
or
cmpsb
pushf
xchg
test
popf
jle
aad
test
adc
icebp
lea
daa
scas
movsl
pop
mov
imul
cmp
dec
imul
sbbb
in
aad
and
loop
aas
pop
or
cmp
sub
jne
pop
lods
rcl
and
lahf
mov
adc
mov
fistps
mov
iret
mov
sti
cmpb
cmpsl
ljmp
mov
imul
xchg
xchg
icebp
push
mov
inc
pop
jl
inc
and
repz
lahf
dec
movl
add
lcall
pop
cmpl
lods
pusha
mov
mov
lods
fldcw
pop
mov
leave
jnp
mov
xor
pop
fiaddl
loop
imul
jecxz
fmuls
cmp
lods
loop
mov
mov
sub
frstor
sahf
test
mov
inc
leave
nop
add
mov
pusha
syscall
sub
cmc
icebp
and
dec
mov
scas
or
xor
decb
inc
ficomps
arpl
in
data16
out
cmpsl
mov
sbb
add
cmp
and
mov
in
lds
test
pop
repz
arpl
orl
add
fsubrl
cld
or
xchg
lcall
hlt
test
aas
pushf
mov
andl
jnp
sti
push
adc
imul
aam
les
sub
aad
push
fcmovne
push
in
mov
xor
jno
xor
pop
movsl
ja
or
push
push
sarl
sub
mov
sub
jp
rcll
out
cmp
pop
push
sahf
add
int3
mul
xchg
mov
fistps
dec
xchg
out
push
jb
jo
and
std
scas
pop
add
xor
int
imul
jnp
add
sbb
mov
jmp
cli
mov
pop
jmp
sarl
sub
or
test
iret
hlt
in
sub
push
imul
and
lock
lock
mov
fistps
and
cld
jno
push
mov
shr
push
push
push
outsb
gs
cld
cmp
dec
lea
js
dec
adc
out
xor
les
inc
fdivr
pop
out
push
push
and
shll
add
gs
subl
in
push
add
je
pop
stos
enter
adc
push
mov
in
sbb
pusha
and
dec
lods
pop
lods
inc
fstpl
ret
ja
andb
mov
mov
hlt
jne
call
sti
dec
js,pn
jmp
xor
arpl
mov
sbb
push
push
fisubs
sbb
fistpl
xor
mov
mov
push
call
leave
mov
mov
xchg
xchg
xchg
push
jmp
jge
or
hlt
add
add
lret
shl
adc
enter
test
mov
out
and
stos
aad
bnd
dec
cli
out
call
les
cmc
dec
ficomps
sbb
ss
xchg
cli
lods
lea
call
int3
cmp
out
insb
js
imul
lock
aam
pop
adcl
clc
mov
je
in
jbe
add
fnsave
or
jns
jns
xor
in
jg
lods
lahf
adc
mov
int3
push
mov
nop
setle
dec
inc
dec
pop
mov
lock
adc
mov
aam
ret
shrl
xor
enter
cmp
dec
sbb
outsl
rol
divb
je
andl
rcrl
mov
jae
fbld
roll
popf
outsl
cmpl
adc
test
dec
pop
stc
pop
mov
ficomps
fldl
or
outsb
pop
cli
mov
cmp
mov
ljmp
xor
je
adc
mov
mov
dec
sahf
adc
cmp
xchg
sbb
repnz
sub
leave
rclb
fs
fistps
rcrl
test
lods
pop
rcrl
loop
cmp
sub
dec
stos
jnp
sub
add
sbb
test
mov
ror
pop
xchg
cmp
mov
mov
push
mov
mov
cmp
adcb
aas
push
les
test
iret
pop
dec
add
pop
js
dec
inc
cmp
icebp
cmp
sbb
mov
cmp
sub
push
jmp
pop
adc
arpl
fmull
xor
fstpt
into
sbb
or
mov
mov
icebp
sbb
popl
mov
jle
movsl
xorl
test
fcomi
xor
mov
mov
jg
hlt
or
or
adc
cmp
movsl
mov
xor
mov
mov
arpl
sti
or
mov
das
ljmp
stc
sub
push
scas
arpl
fcomi
dec
daa
stos
jg
xorb
adc
je
aad
imul
lret
sub
jmpw
pushf
out
out
jne
cmp
movsb
dec
es
push
out
push
add
inc
fistpl
repnz
xor
xchg
mov
stos
pop
xchg
fcmovb
sub
dec
test
test
dec
jno
int
je
mov
stos
das
sahf
js
in
es
pop
xchg
or
mov
add
call
into
fs
or
mov
jle
into
sub
and
fisubl
and
mov
lods
jg
int
mov
mov
into
mov
data16
cs
mov
adc
insl
inc
mov
nop
xchg
in
mov
jae
cmpsb
dec
jns
and
push
shlb
je
ficoms
adc
xor
jne
scas
adc
inc
mov
movsb
inc
fcmovu
mov
xor
pop
mov
je
popa
cwtl
jno
sahf
cmc
mov
adc
add
adcl
sbb
jle
jae
mov
rorl
andb
xchg
scas
jge
push
cli
inc
lahf
and
mov
neg
cmp
mov
jne
scas
hlt
cmpsl
dec
jb
scas
xchg
cs
loop,pt
imul
mov
lret
shll
sub
xchg
cmp
xor
push
push
cmpsb
outsb
xor
lds
xlat
and
jae
sub
iret
sbb
call
andl
sub
ret
lods
cmp
add
outsl
pop
lods
xchg
and
jo
mov
cli
push
mov
fcoml
aas
xor
add
mov
test
cmc
aad
mov
mov
sub
icebp
ds
fcomi
and
xor
inc
lret
or
xchg
test
mov
shrb
push
jae
sub
call
stos
fs
and
mov
mov
sbb
ret
push
pushf
test
add
mov
cltd
test
push
pop
mull
pop
cmp
cmp
adc
cmpsl
push
sbb
inc
syscall
scas
pop
add
cmp
add
in
in
inc
xchg
adc
sbb
inc
pop
push
and
adc
pop
das
aad
or
mov
das
push
fnstenv
lahf
sub
cmpsb
mov
mov
mov
or
sbbl
and
ficoml
out
dec
push
pop
adcb
sti
push
mov
pop
push
sbb
mov
into
cmp
dec
imul
psubusw
sbb
xor
pop
fcoms
jle
repz
sbb
popl
stc
js
xor
xor
out
cld
insb
pop
mov
lcall
andl
lretw
cld
mov
mov
icebp
pop
cmp
cmp
lret
aas
mov
xlat
sub
mov
mov
jl
pop
inc
imul
sub
testl
ljmp
and
and
ds
mov
mov
ja
shrb
stc
xchg
fidivl
jns
fisttpl
decl
cmpsb
cvtps2pi
popa
je
arpl
mov
repz
outsb
leave
mov
mov
mov
call
pop
test
fstpl
adc
jnp
leave
or
andb
and
or
mov
jo
fmuls
call
ret
lods
dec
sub
adc
sub
inc
ret
push
fldcw
out
jecxz
sub
fyl2x
std
mov
inc
pop
mov
popa
rcrb
cld
mov
and
xchg
and
cltd
sahf
icebp
sbb
add
xchg
sub
fstpt
cmp
popf
inc
pop
adc
xchg
and
out
or
adc
jno
cmp
mov
cmp
test
insb
inc
stc
mov
loopne
or
mov
xor
jecxz
sbb
adcb
dec
add
dec
add
xchg
sahf
aas
addl
xor
push
iret
pop
mov
push
mov
pop
fnstcw
cmp
xchg
in
int3
pop
mov
aas
mov
mov
mov
into
add
aad
or
inc
paddw
mov
lret
pop
mov
test
xchg
and
scas
pop
or
shl
ficompl
out
dec
push
mov
divb
hlt
or
inc
cmpsl
push
jg
sub
mov
jbe
loop
test
xor
jne
cs
notl
push
fwait
sbb
jb
into
pop
jmp
popf
mov
mov
mov
test
add
add
stos
xchg
repz
cmpb
das
repz
sbb
pop
jns
mov
test
mov
xchg
hlt
inc
in
xor
out
xchg
ss
test
mov
push
ficompl
sub
push
sbbl
movsb
inc
aam
leave
mov
xchg
fsub
lods
mov
jnp
dec
push
inc
mov
addl
in
mov
adc
lods
test
ret
sub
into
push
inc
psubusb
dec
loop
mov
dec
loope
fdivrl
jle
jmp
pop
mov
jne
cmp
inc
add
sub
adc
rolb
xchg
push
xor
pop
frstor
iret
adc
insl
fs
es
repz
mov
loop
push
loope
hlt
jp
jmp
mov
cmp
test
or
cmp
push
mov
imul
insb
mov
lcall
xchg
std
outsb
adc
and
mov
or
movsl
adc
stos
pop
adc
lods
lcall
popf
cld
rolb
or
or
xor
push
loop
mov
lret
sbb
sbb
or
mov
rorl
outsl
leave
cmpsb
mov
jmp
fldt
fildll
cmp
ds
dec
stos
mov
push
mov
xchg
in
pop
push
push
or
push
pop
xor
mov
shrb
icebp
shl
lds
adc
cmp
or
mov
xchg
call
sbbb
and
divb
xor
out
inc
sub
lret
push
sbb
aas
jle
push
inc
testl
sahf
scas
xorb
dec
lods
aad
xor
decl
out
inc
bound
shlb
inc
add
jae
push
roll
xchg
and
orl
or
fs
sub
mov
leave
cmp
cltd
subl
pusha
in
adc
movsl
push
jnp
movsb
xrstors
pop
addr16
lea
cmp
jle
aaa
aad
xor
mull
mov
mov
and
adc
mov
or
add
and
mov
and
lods
sbb
pop
dec
imul
sbb
call
cmp
jns
test
repz
inc
out
shr
scas
ret
in
mov
push
jno
cmc
inc
and
pop
arpl
xchg
stos
xchg
mov
lcall
lea
push
icebp
scas
out
fs
fdivrs
call
rorb
pop
jmp
sub
and
or
ret
inc
mov
dec
adc
jmp
mov
xor
push
loopne
nop
xor
cld
dec
aad
mov
fidivrs
add
testl
jbe
and
push
mov
add
inc
sbb
call
sub
je
popa
fisubl
outsb
scas
bnd
stos
iret
cltd
mov
push
push
push
inc
lahf
xchg
add
test
xchg
sub
xchg
xlat
fadd
mov
mov
mov
out
loope
mov
ret
imul
sub
push
scas
stos
sub
mov
cmp
aaa
adc
ds
xchg
cltd
add
ds
mov
dec
lods
into
mov
lods
insl
mov
mov
cli
mov
sbb
mov
call
repz
dec
aas
mov
fwait
lahf
jae
pop
cmp
and
dec
das
xor
mov
inc
dec
push
jge
lea
push
rcr
in
das
fimuls
sbb
movsb
sub
scas
insl
pop
test
jno
add
popa
mov
cmpsl
hlt
dec
fs
das
ljmp
sub
sub
lods
jmp
cmp
cmp
sub
sbb
inc
and
pop
sub
imul
jo
push
testl
repnz
xchg
inc
mov
stc
jae
sub
repz
hlt
add
push
lret
cs
inc
popa
cld
mov
or
rol
aad
adc
cld
daa
insl
adc
sub
cmp
stc
add
cs
mov
iret
inc
addr16
jnp
subl
mov
jns
out
into
test
fstp
mov
inc
aad
out
pop
adc
fwait
pop
inc
rcrb
in
mov
cli
test
mov
add
fsubl
ror
jno
mov
in
fstp
mov
pusha
in
loopne
adc
enter
cltd
inc
sbb
cs
xchg
jno
fisttpll
orb
push
mov
push
cmp
mov
pop
cli
push
scas
pop
xor
arpl
sub
jmp
mov
xchg
insl
cmp
lcall
lret
mov
scas
lcall
dec
mov
xchg
sub
mov
xor
add
clc
dec
lret
in
sahf
pop
push
lods
push
push
add
decl
xor
les
shlb
shr
push
int3
inc
nop
or
cmpsl
xor
test
push
cmpsb
xchg
bound
dec
arpl
or
or
flds
mov
xchg
sub
or
mov
or
xor
sbb
pushf
dec
mov
or
pop
and
mov
mov
insl
cmp
mov
sbb
cmpb
fwait
outsb
jp
ret
jns
and
jmp
in
and
xor
pusha
sbb
das
insl
jne
imul
int
dec
je
sub
mov
pop
out
mov
inc
fucomi
mov
jno
dec
out
sti
fdivrs
add
je
pop
pop
mov
adc
lret
pop
mov
push
shrl
mov
jae
jb
dec
mov
xchg
xor
or
je
jb
outsl
jg
mov
inc
jne
mov
mov
sub
push
pop
aad
les
push
push
std
aam
cmp
lret
dec
je
loope
test
cli
dec
push
mov
push
and
dec
or
not
in
popa
and
inc
in
cmc
cmpsb
sub
pop
jg
fst
cmp
add
jae
xlat
shlb
jge,pn
out
das
jae
push
dec
mov
sbb
xchg
mov
mov
sbb
xchg
cmc
cmp
lret
mov
xor
aad
add
mov
ss
and
lahf
subl
xchg
mov
xchg
sub
cmc
fsubl
add
push
mov
xor
and
jnp
rcr
jp
mov
enter
xchg
sub
arpl
jl
xor
xor
or
lods
inc
mov
sbb
mov
pop
stos
subl
jmp
mov
xchg
xor
push
sub
out
stc
fmuls
jno
and
mov
jno
sub
inc
movsb
push
enter
sub
jmp
xchg
int3
jecxz
xchg
movsb
dec
popa
sub
jno
ss
xor
mov
pop
pop
push
ja
push
adc
adc
xchg
mov
fiaddl
pushf
inc
in
or
lods
shrl
xchg
and
or
std
dec
popa
inc
sti
mov
xor
adc
mov
jno
xchg
fcmovne
cwtl
aam
out
jg
lods
jmp
push
out
call
sub
aam
idivl
jp
push
lahf
or
fwait
xor
jno
aaa
xor
or
mov
sub
push
and
inc
lds
jo
jne
mov
clc
mov
adc
mov
bswap
daa
imul
test
in
iret
and
adc
shl
jbe
pop
imul
sub
mov
mov
aam
fs
and
and
xchg
add
add
mov
fcompl
rcrb
in
fs
push
or
int
leave
cmp
gs
push
jb
out
add
popf
loopne
sbb
or
les
cmpb
push
loopne
rclb
lcall
in
in
popa
dec
and
rorl
daa
cmp
hlt
movsl
hlt
or
jne
out
popf
fimuls
aad
add
stos
jp
mov
push
push
add
push
add
insb
jecxz
stos
cmp
scas
jo
add
jg
aaa
inc
les
fdivs
xor
mov
stos
outsb
adc
inc
lret
jnp
dec
pop
sub
ds
es
push
cmp
dec
cmc
lret
xor
and
xchg
lea
sub
stc
push
lret
mov
cli
cmp
lret
outsl
dec
fdivrl
mov
mov
jecxz
jae
pop
push
pop
repnz
sbb
decl
add
dec
push
push
xchg
cmp
push
test
je
adc
aam
out
aam
inc
jne
aam
adc
push
in
sar
lock
aad
out
repz
lcall
stos
sahf
pushw
pop
fcomps
and
pushf
inc
mov
nop
ret
pop
sbb
xor
sti
mov
lahf
das
movsl
and
int3
adc
cmp
jge
sbb
imul
sub
push
jecxz
cli
or
popa
fiadds
xor
jno
clc
jge
outsl
jne
push
push
jns
xchg
gs
aam
ljmp
pop
das
mov
mov
adc
ds
dec
or
ret
icebp
push
lods
dec
or
xchg
inc
jl
cmpsb
dec
sbb
cmp
std
xor
add
mov
cmpsb
or
out
mov
mov
dec
ret
rcll
call
xchg
xor
stos
ja
aaa
lods
adc
test
cmp
fwait
les
gs
inc
xchg
sub
adc
scas
aas
sub
aas
es
cwtl
fs
cli
dec
cmc
jne
cmpsl
cmp
ret
call
jle
xlat
mov
xor
scas
test
cmp
mov
xlat
xor
xchg
cld
push
dec
iret
xchg
fisubrl
add
cmp
adc
mov
inc
add
xor
in
mov
outsb
and
push
xor
cs
pop
mov
jbe
jp
adc
xchg
insb
pusha
mov
lock
inc
mov
mov
jne
and
insb
mov
pop
mov
sub
pop
out
int
or
pop
adc
es
sub
dec
or
or
cmp
lock
jmp
cmp
stos
pop
sbb
xchg
mov
mov
imul
mov
orb
cmpsl
xor
mov
shl
sbb
stos
add
or
rcrl
sbb
jno
cltd
out
jp
adc
add
sub
decb
shrb
imul
ljmp
stos
push
mov
pop
imul
cmpl
enter
mov
sub
mov
lods
add
sub
xor
adc
mov
int3
rcrl
fidivs
stc
fcmovu
daa
or
iret
xchg
or
ljmp
cwtl
ja
subb
int
xor
aaa
pop
pop
and
cmp
lock
xchg
outsl
dec
addb
jne
mov
cmp
jecxz
inc
adc
cmp
xor
jo
sarl
mov
or
inc
lea
cmpsb
mov
ljmp
cltd
mov
lcall
stos
testb
test
daa
mov
mov
pop
test
jmp
in
adc
inc
incl
lret
ror
cmp
push
outsb
icebp
lods
or
xchg
mov
push
loope
xchg
ret
or
ss
jae
jecxz
pop
scas
pop
jns
rcll
push
mov
ficoms
adc
popa
xchg
je
mov
enter
daa
loope
scas
out
out
add
pop
lcall
test
cmpsl
mov
aam
testl
pop
jbe
xchg
sti
xchg
pop
lds
jle
ror
mov
stc
call
call
ret
mov
xchg
push
mov
jmp
inc
or
mov
pop
in
add
mov
mov
pushf
loop
test
std
insl
push
push
lret
jmp
push
pushf
pop
imul
in
repz
xor
outsl
dec
dec
fimuls
test
jnp
xchg
fs
aas
inc
sub
lods
push
test
pop
rorl
mov
lahf
fldcw
cmp
xor
sti
ret
sub
cmc
mov
cmpsl
sbb
pop
lea
mov
sbb
aas
repnz
add
inc
mov
stos
test
adc
ds
mov
rcl
inc
add
int3
xchg
fs
leave
aas
mov
leavew
jb
sub
hlt
adc
sub
rcrl
lock
fisubs
inc
fdiv
add
out
xor
jl
insb
stos
xor
mov
ss
fsubl
mov
adc
mov
add
les
sysexit
sbb
mov
dec
inc
push
imul
lea
push
jecxz
or
jae
push
nop
into
adc
dec
ffreep
fdecstp
leave
dec
rcll
jo
mov
or
or
loop
pop
jle
aam
push
dec
sbb
mov
hlt
fidivl
push
xor
cmpsl
fs
push
mov
insb
es
mov
das
push
jg
test
jmp
xor
inc
test
cmp
mov
adc
sub
lret
aas
adc
lock
add
add
cmp
xor
insb
cmp
sbb
push
shr
test
stos
push
mov
xor
and
outsl
pop
int3
push
pop
add
xchg
ffreep
jbe
fsub
add
inc
loope
or
out
pop
inc
int3
jg
repnz
cmpsl
xlat
jp
dec
jno
push
xorb
in
push
pop
pop
mov
aam
in
cld
push
inc
repnz
lret
mov
cld
out
rclb
xor
lods
lret
stc
outsl
cmpsl
jno
inc
sahf
data16
cwtl
xchg
inc
mov
xchg
repnz
popf
cmc
pushf
xlat
add
cld
out
and
jne
lret
jmp
and
mov
inc
rolb
sbb
jno
clc
mov
mov
and
ffreep
push
mov
push
lahf
mov
cmp
push
aaa
mov
scas
xor
or
bnd
addr16
pop
movsb
mov
movl
daa
push
insb
xor
mov
push
stos
jns
cmp
int
xchg
xchg
cmp
jmp
lods
pop
repz
out
pop
adc
mov
mov
add
jle
cli
dec
ds
sbb
push
push
sub
sub
lea
jnp
mov
addr16
repnz
clc
mov
sub
shlb
ljmp
push
cmpsb
jp
into
in
js
lret
mov
pop
sbb
addr16
daa
sbb
xor
fistpl
mov
inc
sbb
mov
or
bound
mov
add
add
add
stos
add
jb
scas
sub
jo
lds
mov
or
gs
pusha
and
sbb
push
outsl
inc
dec
inc
dec
mov
mov
loope
xor
sbb
adc
rol
mov
sti
mov
and
scas
out
out
mov
jecxz
pop
xor
cs
xor
shl
ljmp
pop
and
push
mov
adc
test
hlt
sub
pushf
enter
xchg
lds
xchg
dec
enter
je
mov
fwait
sbb
mov
sti
int3
xchg
sub
cmp
and
inc
pop
out
imul
add
push
cmp
adc
js
inc
pop
jle
mov
in
mov
inc
xor
mov
stos
dec
push
push
in
clc
xor
mov
imulb
aad
loop
repnz
dec
ja
mov
sub
ja
xor
pop
insl
lret
inc
and
cmp
xchg
outsb
xlat
pop
pop
or
arpl
xlat
ret
lahf
pop
inc
ja
lret
jo
inc
push
ljmp
roll
pushf
test
xchg
mov
push
xlat
decb
adc
movsb
in
mov
sbb
pop
dec
dec
xlat
jns
ja
xlat
add
test
test
jb
comiss
cmp
add
inc
mov
mov
adc
inc
fisubs
outsb
lcall
and
lahf
int
dec
push
int
mov
cmp
pop
mov
push
into
add
movsb
cltd
mov
scas
movsb
jb
jno
pop
sbb
je
sub
lret
xor
frstor
push
es
mov
iret
insl
mov
jecxz
in
dec
jbe
insl
sub
push
or
cwtl
and
aaa
mov
xchg
jmp
in
xchg
imul
sub
jo
pop
and
cmpl
mov
mov
sbb
in
sub
cmp
sbb
clc
movsl
mov
adc
subb
xor
es
cmp
sbb
sbb
sub
cmp
and
mov
imul
jnp
stc
popl
adc
jl
or
iret
xchg
and
adc
into
lea
int
xor
test
pop
cwtl
loopne
pop
adc
fisubs
mov
pop
sbb
mov
test
xlat
aad
push
push
adc
sbb
lahf
xor
dec
xor
mov
mov
jg
in
cs
or
inc
movsb
movsl
mov
out
ja
and
jb
aam
lretw
test
jns
ss
stc
cld
enter
test
push
and
jmp
leave
sub
lcall
fisttpll
jl
xrelease
push
xchg
add
rdpmc
loopne
add
dec
push
inc
jmp
push
test
push
jbe
fdivrs
sub
cltd
dec
jle
xor
jmp
sbb
out
xchg
inc
push
lds
fcoml
inc
ficompl
sub
cmp
dec
pop
jo
push
orl
movsb
jg
test
leave
xor
or
leave
into
mov
inc
mov
ret
jmp
mov
cld
adc
xchg
iret
pop
pop
cmp
push
and
push
mov
fwait
jp
jnp
dec
fildll
jge
scas
int
jg
int
and
addr16
mov
stc
pushf
pop
imulb
xchg
cli
or
xor
mov
outsb
mov
cmp
stos
imul
pop
xchg
shrb
lds
stos
xor
add
mov
cmp
aas
inc
fmuls
inc
sbb
xor
jnp
gs
sti
das
shrb
dec
pop
inc
sbb
dec
fistps
cli
loopne
popf
aaa
xchg
jmp
test
pop
aam
pop
fs
cmc
imul
loopne
orb
xchg
push
cmp
xchg
or
stos
cmp
loopne
mov
add
cmp
push
out
pop
mov
mov
mov
add
into
cld
lock
aas
pop
mov
ret
and
xchg
scas
gs
xor
scas
or
jb
fstps
dec
sbb
xchg
jno
in
mov
mov
pop
or
dec
fidivl
inc
sti
das
adcb
lret
cmp
lods
test
loopne
add
enter
add
xchg
mov
les
std
in
xor
sbb
arpl
lds
jno
pop
out
and
sbb
cli
sbb
movsl
inc
or
pushf
dec
cmp
sbb
gs
or
dec
dec
sbb
shll
xchg
int3
stc
or
mov
mov
or
sbb
lods
adc
roll
mov
negl
cmovle
and
mov
jg
pop
dec
sti
shl
cwtl
int3
xor
mov
add
mov
lods
imul
jge
sbb
adc
shrl
jnp
sbb
xchg
jge
sbb
in
cmp
inc
sarb
fmul
sub
mov
insl
rcrl
rclb
mov
pop
mov
filds
nop
mov
cmp
in
mov
push
clc
int3
je
ficoms
xchg
mov
int3
mov
add
jne
stos
and
mov
lock
mov
fwait
stos
loopne
mov
inc
loope
in
gs
aam
pop
jle
test
addr16
stos
daa
cli
scas
add
mov
mov
push
dec
pusha
mov
outsl
sbb
inc
push
int3
mov
into
mov
mov
cli
sub
int
in
fisttpl
movsl
mov
cmpsl
scas
mov
jbe
into
cmp
jmp
sbb
sub
fnstcw
sub
cmp
add
cmp
cwtl
mov
and
movsl
stos
sahf
stos
inc
add
mov
xlat
xchg
arpl
adc
jg
dec
andl
sbb
mov
jp
ficoml
adc
shrb
dec
ds
test
mov
jae
mov
dec
xlat
ja
xchg
add
add
mov
mov
pop
mov
sub
mov
jle
dec
push
pop
hlt
lock
xchg
jmp
mov
dec
in
mov
arpl
insb
sub
dec
fisttps
jb
loopne
movsb
pop
lods
xchg
and
jge
ret
jle
adc
pop
pop
in
pusha
shlb
movsl
sbb
inc
gs
push
iret
lahf
inc
inc
adc
jbe
mov
and
push
aam
push
mov
daa
jp
dec
dec
jns
ljmp
cmp
jbe
dec
pop
jbe
fildl
repz
pop
mov
sub
pop
sub
cmc
cmp
fidivs
add
cmpsb
or
pop
sub
aaa
push
fisttpll
push
ret
dec
pop
dec
daa
pop
push
sbb
lret
cmp
jno
add
mov
call
out
sbb
inc
popf
xchg
sti
sbb
sub
push
push
lods
adc
xchg
xchg
xchg
nop
sbb
dec
push
xchg
movsl
push
adc
into
rcrb
or
xor
cmp
cmp
pop
add
and
sarb
test
mov
xor
cli
shll
ja
leave
sub
mov
imulb
lods
mov
jns
fbstp
xor
sbb
or
and
leave
mov
int
xor
dec
daa
leave
out
inc
aam
out
shll
push
fdivs
fldt
jne
outsl
xchg
push
popa
dec
pop
mov
stos
cmp
std
imul
in
push
pop
jecxz
mov
and
push
lahf
pop
lea
jno
push
iret
jl
dec
push
mov
inc
sarb
mov
js
dec
ss
sub
fidivl
pop
dec
lds
mov
outsl
mov
cmp
out
inc
nop
pop
negb
loop
mov
icebp
xlat
popa
icebp
js
repnz
out
call
push
push
adc
push
fwait
test
popa
dec
push
ja
mov
add
mov
pusha
lods
out
aas
hlt
xchg
fldt
rcll
adc
or
add
sub
or
in
rorl
push
dec
pshufw
sti
xchg
mov
ret
sti
pop
sbb
pop
lods
mov
aaa
cmp
daa
and
cmp
movsl
ret
das
mov
and
push
fimuls
daa
sti
rcr
dec
fmuls
das
jl
xor
push
dec
imul
pop
in
shufps
lahf
lret
xor
xor
sahf
sub
mov
inc
cmp
scas
je
jo
or
xchg
mov
mov
rclb
addr16
pop
mov
scas
push
imul
dec
fwait
and
incl
pop
faddp
fdiv
subl
pop
fnsaves
in
jg
and
jg
out
addl
cmp
repz
pushf
mulb
mov
out
loop
fisttps
add
leave
cmp
sbb
pop
xchg
dec
stc
inc
rorb
fwait
inc
data16
add
jbe
add
sbbl
xchg
push
repz
pop
mov
lahf
sub
inc
sbb
into
jge
xor
push
andl
ljmp
cs
call
and
mov
add
pop
incb
push
or
jno
or
xor
cli
cmp
and
mov
jbe
data16
outsl
xchg
xor
push
inc
daa
push
dec
xchg
nop
subb
out
loope
ret
pop
push
lods
test
pop
add
cltd
aas
xor
sbb
jp
andb
addb
insb
adc
or
sbb
cmp
cs
mov
ljmp
subl
shrl
insb
inc
movb
out
aad
push
sub
test
dec
mov
sbb
sbb
mov
cmp
push
push
bnd
frstor
loop
mov
test
sbb
jge
addb
lret
rcll
add
repz
add
adc
lea
addr16
and
push
shll
andb
loop
pop
stos
and
clc
cmp
mov
ret
sub
or
call
mov
dec
push
lret
cld
or
aad
popa
lock
out
dec
sbb
adc
xor
fisttpl
xchg
adc
inc
ljmp
push
sbb
mov
or
mov
jno
mov
nop
icebp
pop
and
xchg
and
mov
mov
leave
dec
imul
addb
or
ror
rclb
je
add
adc
loopne
jmp
sub
cmp
fs
and
daa
add
sbb
mov
ds
je
fbld
loope
imul
lods
sbb
cmc
aas
orb
adc
dec
sub
add
sub
je
mov
out
aad
adc
cld
rolb
rol
stos
out
push
mov
adc
les
and
cmpsl
jp
test
in
in
adc
mov
test
lret
mov
or
sti
push
call
mov
xchg
dec
xor
fucomip
fisubrl
popf
bound
sub
add
clc
sub
aad
lret
jmp
pop
xor
js
cmpsb
pop
and
push
das
sbb
add
or
subb
fimuls
idivl
mov
xor
mov
mov
mov
in
ja
mov
push
cmp
inc
lods
dec
sub
adc
mov
dec
jecxz
jle
xchg
push
sbb
cs
aas
sub
arpl
pop
xchg
inc
stos
push
pop
xchg
adc
xchg
aam
outsb
arpl
mov
stos
cmp
sub
or
adc
movsl
mov
pop
cli
and
pop
mov
stc
mov
sub
pop
sbbl
add
mov
add
cmp
and
pop
orl
shrl
or
inc
xor
pop
test
mov
inc
sahf
push
std
mov
pop
test
in
adc
mov
pop
cmp
iret
je
int3
stos
xchg
jmp
pop
repnz
push
pop
xchg
loope
aas
cmp
push
xlat
jmp
iret
push
sbb
jo
push
icebp
loope
in
jnp
fmull
fmull
dec
xchg
dec
out
xchg
out
dec
xor
iret
xlat
jg
mov
stc
inc
jg
jmp
fcompl
mov
xchg
frstor
data16
pop
ret
ja
mov
jg
call
jno
sahf
gs
orl
mov
mov
push
pop
xchg
outsl
cmpsl
mov
mov
imul
movl
push
mov
mov
gs
push
mov
jl
pop
mov
lods
lods
cmp
or
rclb
int3
in
xchg
movsl
pusha
movsb
rcr
cmp
pop
enter
popf
leave
cmp
dec
xchg
fimuls
mov
mov
cmp
dec
mov
aad
push
movsl
mov
insb
insb
mov
mov
adcb
insb
push
jle
cmp
mov
loop
clc
stos
xchg
add
add
popa
jo
xchg
aad
and
push
xchg
lods
ror
fsubrp
std
or
pop
ret
sub
arpl
pop
push
cmp
mov
xor
jmp
jp
insl
push
xchg
adc
add
xor
jo
arpl
inc
xchg
or
leave
xlat
lods
lea
adc
jo
push
adc
std
orl
add
outsb
in
psubsb
and
sub
fs
mov
scas
ja
in
sub
jnp
addb
lret
cwtl
jmp
jnp
in
pusha
repnz
shrl
int
into
mov
add
mov
pop
shlb
add
pop
sbb
mov
adc
xor
and
out
pushf
js
daa
jae
or
sti
mov
lds
jae
test
ljmp
xchg
pop
fcmovnu
mov
and
sbb
dec
adc
loope
jecxz
jbe
xchg
in
lret
icebp
mov
or
xor
jl
outsl
mov
or
les
lret
dec
ljmp
push
jbe
ja
jg
jnp
mov
add
dec
adc
scas
lods
jecxz
imul
mov
les
jecxz
mov
shrl
mov
mov
into
in
cli
es
insl
dec
sbb
sti
push
jp
lret
out
ret
adc
jg
lea
add
mov
movsl
push
repz
mov
jge
cld
add
and
idiv
sbb
pop
mov
out
mov
adc
in
lods
sbb
div
jb
sbb
aam
pop
cs
shll
adcb
push
out
fcomps
sbb
jecxz
shrl
or
inc
mov
icebp
xor
cmpsb
fdivr
mov
mov
xchg
dec
mov
jle
pop
mov
stc
and
insb
out
sbb
aaa
aaa
mov
xchg
int
lret
dec
or
jle
add
xor
add
mov
sub
and
jne
inc
js
sbb
mov
inc
pop
mov
mov
mov
inc
aaa
adc
adc
outsl
movl
stc
pop
cmpsb
shlb
lret
pusha
pop
adc
jle
and
sbb
mov
lretw
test
das
in
xchg
jno
jnp
xchg
iret
xchg
sbb
pop
mov
jb
lods
lock
lret
frstor
sub
out
push
sub
pusha
xor
testb
and
jbe
es
lret
pop
pushf
stos
daa
jp
es
inc
sub
lret
xchg
jl
sti
push
adc
mov
movsb
add
inc
pop
sub
inc
das
inc
pop
pop
mov
mov
int
out
dec
push
and
lock
pop
mov
rcll
push
push
jne
fdivs
cmp
jnp
push
movsb
inc
sub
in
xchg
push
dec
fs
repz
aam
add
sarl
or
xchg
rol
mov
mov
lock
pop
insb
pop
rolb
cli
mov
mov
push
je
stos
shrl
push
mov
popf
mov
mov
pop
push
jne
xor
fidivl
fiaddl
popa
hlt
mov
jecxz
sbb
mov
mov
test
dec
stos
and
xchg
xchg
sbb
jl
mov
std
js
pop
mov
popa
inc
jne
dec
sub
stos
xchg
rcll
jne,pt
loope
pop
movsb
aad
enter
insl
rorb
ret
dec
xchg
aam
in
cltd
jg
es
or
cli
ljmp
adc
scas
icebp
cli
imul
mov
in
divb
or
loopne
insb
leave
aas
jno
das
inc
insl
xor
les
jno
addr16
clc
ret
dec
jne
add
xchg
mov
cmpsb
mov
sbb
mov
pop
push
push
cmp
outsl
test
or
dec
mov
inc
jmp
inc
rcl
add
sbb
sbb
dec
mov
shrb
fisubs
inc
xor
mov
mov
ljmp
addl
subl
out
sbb
loopne
mov
push
int3
data16
push
aas
or
stos
cmpsb
lock
jle
mov
cs
loope
mov
jns
xor
pop
lods
xor
pop
and
inc
in
lds
dec
in
xchg
insb
xchg
lcall
pop
in
cs
mov
cmc
icebp
lcall
pushf
loop
pusha
lods
mov
js,pt
push
stos
sbb
adc
inc
fistl
loop
pop
pushl
and
dec
and
fcmovu
call
cmp
push
scas
jne
pop
push
movsb
in
iret
jne
cmp
cmp
inc
bnd
sbb
test
adc
dec
mov
aad
sbb
push
lcall
aaa
sbb
sub
push
dec
in
mov
test
loop
cmpb
pop
adc
xorb
bound
hlt
adc
jns
cmc
jl
push
orl
sbb
fxam
int
and
mov
xchg
add
jbe
push
xchg
subl
lret
push
jle
mov
mov
outsb
popf
adc
push
jmp
adc
mov
insb
out
cli
mov
fcmovnb
push
push
push
pop
sub
inc
test
movl
mov
ja
imul
repnz
and
in
jmp
mov
fs
insl
loop
int
or
push
xchg
xchg
bound
jle
leave
js
test
pop
push
pop
jmp
ljmp
xor
lea
and
mov
mull
inc
cmc
jg
pushl
out
dec
inc
imulb
cmp
dec
mov
clc
mov
xor
ljmp
pop
and
cmc
jae
adc
pop
in
add
cwtl
dec
js
pop
mov
loope
dec
mov
adc
pusha
mov
or
ljmp
xchg
cmp
xor
or
popf
ljmp
dec
ret
mov
cmp
pop
mov
jne
addr16
cmp
roll
fwait
out
popf
jb
sbb
fistpll
mov
sub
push
leave
mov
fs
jp
mov
add
xor
insb
fwait
sub
pop
jno
pop
mov
dec
test
inc
int
fs
ret
jmp
lcall
adcl
xchg
fs
sahf
push
scas
inc
cmp
mov
xchg
mov
movsl
xchg
jbe
insl
jns
xchg
cs
fsts
ror
in
js
mov
and
lret
add
in
ljmp
lahf
push
cwtl
or
imul
clc
xchg
lcall
addr16
xchg
lods
mov
rclb
mov
mov
pop
lds
and
mov
rorl
and
xorl
ret
int3
adc
cmp
fs
prefetch
inc
rorb
dec
adc
fdivrp
ljmp
cli
mov
daa
inc
mov
insl
pop
in
test
cld
sbb
pop
mov
ficomps
push
pop
and
das
xchg
cli
cltd
pop
jmp
js
pop
in
pop
inc
ljmp
xchg
mov
cmpsl
mov
ds
leave
aas
mov
stos
sub
out
mov
out
cmp
repz
mov
jno
movsl
push
push
dec
pop
xchg
das
sub
aam
movsb
mov
xchg
cmpsb
lock
sahf
mov
test
outsl
cmc
std
rcrb
cmc
sub
std
out
push
in
outsb
mov
or
sub
push
arpl
cmp
inc
jns
sbb
mov
xchg
sbb
leave
dec
sahf
mov
ret
icebp
in
test
adc
inc
repz
aam
in
pop
xchg
mov
dec
pop
scas
and
test
adc
popa
xchg
lea
xchg
xor
fdivl
in
les
sarb
sbb
fnsave
add
add
adcb
mov
mov
testl
jne
sahf
je
lea
mov
inc
add
and
iret
jecxz
add
and
loop
shl
dec
fidivrs
sbb
jcxz
test
mov
add
mov
push
call
arpl
mov
xchg
clc
sub
out
mov
add
fimuls
cmp
jns
inc
daa
mov
out
je
cs
pop
pop
mov
gs
mov
dec
je
in
mov
ret
ret
nop
add
dec
aaa
lock
pop
xchg
add
or
cli
pop
inc
fisubs
pop
mov
or
in
mov
fs
jo
mov
push
test
out
and
in
mov
cmp
mov
push
rclb
adc
jecxz
aad
dec
mov
insl
push
mov
or
stos
call
mov
outsb
mov
dec
pop
dec
and
enter
mov
fimull
outsb
sbbb
xchg
sub
inc
add
inc
xchg
jle
dec
pop
mov
mov
es
and
sbbl
jmp
mov
push
nop
inc
insl
out
aam
xchg
xor
or
mov
notl
cmp
jl
dec
clc
ficoms
jno
ja
inc
inc
mov
popf
cmovo
adc
xor
inc
cmp
loope
xchg
cld
subl
mul
mov
add
insb
mov
fiaddl
int3
stc
mov
add
dec
push
outsl
fwait
push
xor
mov
cmpsl
pop
popf
pusha
adcl
into
aad
xchg
into
lods
jbe
popf
std
jo
cmp
daa
and
and
aam
sub
pop
sbb
cmp
icebp
cmp
mov
and
ficoms
imul
out
cli
push
fdivl
cwtl
fstpl
pop
scas
or
mov
cmp
icebp
mov
clc
dec
mov
idivl
sbb
cmp
push
sbb
adc
xor
xor
sbb
mov
push
sbb
cmp
aas
push
shll
cmp
pushf
cmp
inc
ss
and
add
dec
xchg
cmpsb
cld
mov
sbb
shlb
mov
shlb
insl
je
mov
pop
loopne
movsb
repnz
jl
pop
cmp
mov
test
add
lahf
xor
add
mov
addl
rclb
icebp
and
imul
shlb
iret
je
mov
and
push
lret
or
cltd
ret
inc
sbb
sub
je
xchg
xor
rorb
xchg
mov
insl
pushf
loop
xchg
les
mov
cs
mov
divb
pop
fs
jo
push
aad
jbe
sti
out
movsb
shrl
xor
je
or
pop
ss
mov
shlb
sub
divl
les
xor
mov
cmp
enter
and
out
sub
repnz
or
nop
dec
je
bound
jge
jg
in
jl
xor
adc
daa
push
stos
inc
mov
mov
mov
bound
cli
sub
or
enter
add
pop
sti
pop
inc
addl
cmpsl
pop
sbb
rorb
jb
xchg
adc
inc
das
sbb
jne
and
sub
roll
rorb
fdivrp
push
inc
mov
fsubrl
faddl
jge
rcrl
stos
lcall
lahf
push
adc
jb
or
xor
jno
test
call
in
or
ret
clc
icebp
mov
data16
call
ret
push
mov
dec
movsb
lock
daa
ja
jmp
inc
adc
lahf
xor
push
push
mov
xlat
or
adc
mov
hlt
mov
adc
ror
dec
lret
fwait
int3
jnp
cs
adc
or
ds
int3
testb
dec
push
in
or
push
xchg
mov
xor
jbe
add
inc
sahf
mov
sbb
out
lock
jbe
xchg
addr16
add
imul
clc
push
inc
adc
and
aas
das
mov
cmp
test
mov
push
and
sti
cmpsb
sub
scas
cmpsb
ja
push
cmp
mov
test
flds
push
cs
mov
in
cs
pusha
movsb
xchg
mov
pusha
push
inc
pop
ja
mov
cmc
lret
sub
mov
in
fimull
les
insb
adc
fnstsw
xor
jbe
std
mov
or
call
pushf
aad
pop
pop
int
out
sti
add
cmpsl
sub
jns
xor
fsts
pop
push
mov
sbbl
mov
rcll
clc
xchg
gs
sub
jnp
inc
ret
mov
test
mov
sub
cli
jl
add
adc
pop
fsubl
dec
xor
rcl
aaa
out
ss
jecxz
and
stos
div
jno
pop
xchg
jge
dec
cs
int
mov
jg
mov
cs
sub
scas
mov
push
mov
jb
bound
lcall
cmpsl
mov
or
jnp
outsb
sub
daa
vmwrite
sbb
mov
push
scas
and
xlat
mov
and
mov
xorb
rorb
pop
das
inc
push
cli
loope
jo
fistpll
jmp
dec
adc
cmc
and
or
push
xor
pop
cmp
jecxz
jle
lret
test
lods
repz
rclb
imul
push
adc
inc
das
jo
out
sub
mov
push
xlat
inc
outsb
jecxz
jbe
mov
or
jmp
lret
daa
out
mov
insb
jl
pop
popf
js
add
ss
subl
xor
pop
imul
js
mov
lock
dec
mov
mov
pop
push
jl
adc
mov
loope
cltd
aad
adc
ds
pusha
sub
mov
mov
jmp
pop
test
repnz
xor
aad
cmpl
lods
jmp
push
push
loop
ficompl
mov
dec
xchg
lods
mov
jle
std
mov
sbb
sti
arpl
pop
and
dec
push
mov
lds
iret
pop
mov
movsb
jp
dec
int
loop
fwait
cld
stos
pop
inc
pop
in
jns
dec
jp
jbe
jb
test
jmp
ja
add
aas
mov
xlat
inc
ja
xor
adc
in
stos
out
ds
pop
std
fdivl
fmulp
lret
inc
cmpsl
loope
jl
fimull
jl
pop
movsb
in
mov
lret
jne
mov
xor
xor
ja
xor
jg
lds
xor
shlb
lods
nop
dec
sbb
and
jmp
mov
testl
dec
jl
inc
movsl
in
push
sub
xorl
inc
outsb
or
mov
call
into
aam
add
or
daa
inc
and
or
loop
pop
cmp
adc
and
jge
aam
add
out
xlat
sub
sub
jmp
dec
fisubs
icebp
cmp
les
adc
cmpsb
pop
ja
and
rcl
sbb
popf
lea
mov
and
leave
sub
add
addl
in
sbb
outsl
flds
push
mov
cmp
sub
push
lcall
daa
aaa
out
jo
and
ja
iret
mov
adc
stc
je
outsl
add
inc
pushf
jbe
jns
shrb
adc
je
lret
jle
mov
pop
hlt
pop
add
rol
out
push
xor
sub
dec
lret
inc
or
xchg
cmpsb
push
scas
jp
aas
cmc
mov
xchg
imul
fs
dec
pop
fs
adc
imul
sahf
test
sbb
mov
dec
sti
mov
fs
insb
mov
mov
xor
cmpsb
inc
lods
cmp
fs
push
or
mov
cs
dec
test
hlt
imul
jmp
jg
push
ds
mov
cmpl
jp
stc
movsb
int3
xchg
pop
pusha
mov
stos
add
arpl
jno
adc
xor
mov
ljmp
xor
mov
out
pop
fmul
fwait
inc
cli
aas
stc
arpl
add
std
shlb
dec
iret
pop
add
lret
xor
cmpsb
adc
ds
mov
adc
adc
push
inc
xor
push
ds
repz
sub
sti
xor
push
fisttpll
add
pop
mov
push
pop
cmpsb
scas
push
mov
add
idivb
mov
test
es
jge
pop
mov
xor
les
cmpsb
dec
add
in
sarl
push
ds
pop
popa
cmp
popa
adc
ficoml
pop
jecxz
inc
pop
movsl
sub
scas
mov
stos
mov
cltd
pop
icebp
inc
adc
pop
cs
sbb
pop
and
adc
inc
rcrb
movsb
stc
movhps
cli
push
xor
jns
loope
pusha
ds
mov
and
jmp
arpl
rolb
add
nop
pushf
dec
pop
mov
sbb
sbb
std
lcall
inc
add
sbb
nop
repz
jmp
jb
jmp
in
decl
push
clc
fwait
mov
ficompl
fwait
mov
addb
les
and
stos
lret
xchg
call
inc
int3
pop
pop
and
dec
outsl
call
stc
pushf
inc
sbb
jecxz
mov
add
add
pop
arpl
jne
dec
jnp
leave
in
mov
mov
push
or
std
test
repz
hlt
imul
pop
xchg
xchg
rorb
dec
adc
fiaddl
and
imul
and
dec
lret
adc
dec
insb
hlt
sub
adc
xor
js
xchg
imul
mov
fnsave
mov
cmpsb
ja
adc
clc
neg
or
movsb
in
and
loope
sbb
and
mull
outsl
adcl
fnsave
cmpsl
xchg
adc
imul
addr16
jne
int3
aad
into
lret
fwait
adc
inc
sub
sbb
add
lods
mov
out
repz
cmp
fldcw
mov
mov
or
inc
pop
sti
ss
outsb
out
xchg
pop
divb
or
insl
mov
cwtd
inc
movsl
lods
sti
int3
aaa
push
ret
sbb
sbb
push
pop
mov
inc
insb
dec
shll
adc
leave
jg
pushf
jecxz
lods
insl
loope
call
cwtl
popf
test
inc
mov
or
mov
fistpll
outsl
out
imul
aaa
cmp
pop
inc
test
add
aas
testb
popa
cmp
mov
push
mov
lahf
add
repnz
and
outsl
rcr
into
incb
cmp
mov
and
xchg
out
mov
pop
cwtl
sub
mov
xor
scas
mov
push
jne
cmp
addr16
fistps
into
sbb
les
jmp
push
xchg
fsubs
sub
cmp
mov
mov
sarb
mov
dec
lods
mov
data16
jnp
jno
push
in
pop
mov
adc
mov
aad
pop
sbb
stos
daa
out
pop
push
xorl
clc
rorb
xchg
outsl
mov
fstpl
mov
divl
mov
jne
ds
cmp
lods
sahf
jl
inc
jnp
jl
dec
mov
mov
pop
cmpsb
test
mov
sbb
xchg
popa
xor
push
and
out
push
dec
loope
sub
push
nop
mov
inc
jg
xchg
and
xlat
jno
insb
push
cs
cmp
or
pop
or
subb
pop
in
repnz
jle
push
adc
popl
dec
lret
and
sub
scas
rorl
or
std
cmp
inc
cmp
mov
jns
in
sbb
or
add
lock
fildll
mov
cmpsb
idivb
jp
or
adc
adc
adc
je
push
jne
xlat
mov
arpl
add
add
cmc
push
nop
xchg
and
pop
fs
lret
jae
out
adc
mov
movb
cmc
push
mov
mov
xchg
arpl
pop
mov
mov
dec
sbb
xor
add
mov
inc
mov
mov
insb
cmpsb
in
jns
inc
or
lret
out
sub
sbb
mov
fidivrl
adc
dec
jmp
stos
xor
aaa
stos
mov
inc
loopne
mov
jns
mov
dec
push
mov
stos
inc
lcall
iret
movsl
fbstp
in
sbb
pop
out
pop
pop
or
stos
dec
or
fldt
cmp
push
xchg
mov
fs
push
mov
fnstcw
pop
stos
add
fadds
push
arpl
loop
adc
pop
or
insl
push
iret
mov
ret
mov
sub
stos
fadd
fstpl
fwait
and
push
mov
rorb
pop
push
sbb
test
push
adc
repnz
pop
ret
sbb
push
fwait
or
sbb
push
xchg
dec
test
popa
cmp
fbstp
jnp
lea
xor
fcomp
ficompl
nop
mov
int
cld
movsl
push
addr16
xlat
lods
jg
pusha
int
lcall
xchg
loopne
xor
xchg
adc
insb
ljmp
or
mov
add
lcall
mov
pusha
filds
fisubl
add
and
or
jo
xor
push
add
loopne
fldt
lret
mov
stc
int3
mov
movsb
pop
cmp
jp
xchg
xlat
jne
sbb
gs
or
jbe
push
sbb
in
out
add
shll
ja
cltd
jns
ret
das
and
shrl
dec
movsb
scas
dec
cmp
cmpb
mov
push
push
out
adc
scas
les
movl
push
jbe
xor
sub
pop
bound
shrd
lods
test
sbb
lahf
insl
add
icebp
pusha
push
xchg
xchg
lahf
cwtl
aad
ret
ds
jbe
sti
int3
loope
push
xchg
lods
popf
in
xorb
jmp
cs
aam
outsb
js
and
imul
mov
ss
test
or
cmp
mov
bound
add
sub
dec
or
lea
push
stos
fidivrs
inc
clc
loope
aas
enter
jne
in
inc
adcl
filds
fldt
xlat
lds
mov
or
insl
add
das
inc
mov
ja
dec
adc
fcoms
sub
jg
or
sub
push
mov
pop
roll
es
dec
cli
insl
inc
mov
iret
jmp
inc
lcall
aad
push
cltd
popa
jle
aad
jl
bound
push
pop
xchg
jo
enter
mov
aas
jo
pop
out
jnp
xchg
dec
dec
jo
xchg
adc
and
mov
xchg
mov
adc
aad
jns
cmp
scas
outsb
cmp
sub
mov
mov
jmp
imul
syscall
sbbb
decl
scas
cli
pop
es
jo
lock
dec
or
mov
pop
lds
incl
mov
fdivp
leave
mov
xor
cltd
cs
xchg
pop
adc
ss
jecxz
adc
clc
fwait
in
imul
subb
dec
stos
loopne
or
pop
sbb
rorl
add
outsb
cmpsb
adc
or
inc
dec
and
repnz
shlb
mov
insb
pop
mov
adc
push
jno
fs
div
pop
xchg
imul
lcall
sbbb
in
and
test
into
icebp
pop
out
and
lea
cltd
xor
mov
mov
arpl
je
popf
xchg
xor
adc
inc
sub
call
movsb
repnz
add
ds
sbb
movsb
adc
pop
add
sbb
push
or
mov
ljmp
insb
mov
fs
pop
popf
dec
stos
pop
and
mov
pusha
hlt
dec
mov
sub
push
hlt
cs
jbe
icebp
in
shll
out
pop
mov
vmwrite
and
andl
add
mov
jmp
enter
lods
popa
sbb
arpl
stos
xchg
or
mov
jno
in
nop
push
and
inc
inc
or
in
mov
mov
xor
and
jecxz
mov
ret
cmp
jne
xchg
jns
sbbb
fdivs
adc
enter
mov
test
cmp
mov
sub
sub
push
int
loopne
mov
insl
rclb
jbe
jmp
rclb
sub
jecxz
stos
dec
call
pop
cmpsl
leave
mov
push
out
or
ss
scas
mov
add
fists
imul
push
bswap
add
pop
mov
adc
push
xchg
mov
inc
mov
imul
pop
mov
bound
out
dec
fsubl
jle
int3
test
std
mov
rclb
enter
jb
pop
sub
nop
xchg
jl
hlt
cwtl
rol
fwait
mov
sub
or
xchg
jne
mov
sbb
xchg
out
dec
add
push
das
test
lahf
mov
out
adc
rclb
sub
loop
pop
pop
cmpsb
ljmp
jmp
arpl
fwait
popf
ret
adc
push
mov
rorl
ljmp
cli
and
push
ljmp
and
mov
xchg
adc
leave
ljmp
ja
gs
imul
cmc
pop
add
andb
int
sbb
inc
in
outsb
cmp
cmp
mov
jnp
out
mov
roll
add
test
jecxz
in
mov
xor
inc
mov
out
or
xor
insb
movsl
orl
in
out
lock
dec
adc
loop
arpl
pop
aas
sahf
insb
jo
ljmp
in
cmp
shrb
cmp
lahf
pop
inc
cmp
sbb
addr16
icebp
xchg
pop
sti
mov
gs
loopne
mov
fists
or
lret
ret
adc
addr16
mov
mov
xor
xchg
cltd
jecxz
cmp
adc
pushf
jno
test
mov
or
shrl
fistps
bound
repnz
or
pushf
dec
insl
bound
mov
push
aas
sub
outsl
shlb
xchg
sbb
jbe
enter
loopne
and
ljmp
test
inc
je
ret
or
jmp
js
and
jl
insb
outsl
je
hlt
push
call
mov
mov
mov
sbbl
xor
cltd
sub
adc
inc
enter
insl
push
adc
in
lret
rcll
cmpsb
jecxz
mov
movsb
and
inc
fimull
fcmovb
sbb
and
xor
cli
and
je
into
lock
jb
pushf
icebp
loope
pop
jg
mov
outsb
dec
push
fiadds
out
adc
mov
push
jno
fldcw
mov
push
jmp
pop
mov
or
mov
mov
arpl
out
jb
mov
xor
hlt
cmp
inc
in
loopne
inc
and
lea
ret
imul
test
scas
movsl
xchg
orb
pop
push
leave
fstpt
in
andl
cmpb
cmp
and
adc
cmp
adc
jnp
outsb
jmp
add
and
mov
loopne
repz
add
jle
mov
mov
mov
in
push
xchg
sub
sub
das
enter
dec
inc
out
mov
or
sbb
mov
mov
gs
ja
sbb
inc
adc
test
jp
leave
ret
ret
adc
push
scas
mov
and
mov
sub
fidivl
mov
jb
or
ja
add
xchg
xor
sub
enter
add
js
sahf
inc
das
out
mov
test
sbb
sbb
cmp
aas
fwait
sbb
inc
push
push
sub
mov
roll
loop
add
inc
stos
sub
std
push
dec
cmpsb
push
je
xchg
insl
fnsave
data16
imul
lret
adc
mov
push
arpl
mov
jns
xchg
arpl
stos
cmpsb
xor
fisubl
nop
and
jecxz
push
xchg
movsl
outsl
in
sub
jmp
jo
aas
xchg
orl
frstor
ja
or
out
aam
xchg
mov
xor
inc
mov
inc
inc
jb
sub
gs
and
out
or
outsl
test
sbb
add
jbe
cmp
hlt
mov
shr
add
scas
push
xor
aam
mov
fldz
cli
cmc
cmp
push
lods
jae
add
movsl
sbb
lods
lock
popf
xchg
and
aam
insb
ss
pop
pop
in
mov
add
imul
pop
fdivrs
insb
pop
cmpsl
and
outsl
lods
lahf
scas
fidivs
dec
je
mov
fnstenv
cwtl
je
movsl
mov
movsl
fldt
inc
mov
sbb
fists
add
mov
aad
and
ss
inc
and
mov
shlb
push
jnp
ror
daa
adc
sarb
sbb
lock
je
std
addr16
dec
mov
gs
xor
dec
loopne
fstpl
out
stos
push
mov
push
mov
out
sbb
lds
push
mov
mov
push
shlb
ds
cltd
push
and
mov
ret
fcmovnu
int3
ret
int3
pop
cltd
shlb
pop
insb
cmp
add
lock
lahf
shll
aaa
xor
sbb
iret
mov
aad
mov
dec
popa
adc
xor
movsb
ss
and
mov
and
dec
sarl
mov
cmp
adc
pop
jecxz
shl
push
clc
cmp
repz
lcall
aas
xor
sbb
pop
rcll
lret
push
dec
mov
push
lock
mov
dec
jg
shll
jne
fs
fimuls
mov
out
pop
cmp
loop
push
lret
in
lods
lea
in
fcom
les
in
add
sub
push
push
adc
mov
call
cmp
mov
adc
push
and
and
sub
add
ret
add
mov
pop
cmp
nop
cs
lahf
es
hlt
mov
lods
pop
pop
xor
adc
dec
scas
cltd
rcrl
icebp
movsl
pop
lock
mov
int
push
xchg
push
xor
adc
xchg
xchg
idivb
fsubrl
mov
dec
mov
jge
mov
pusha
inc
and
pop
add
scas
cmpsl
dec
sahf
jmp
movsl
repz
outsl
adc
mov
xor
mov
in
add
cmp
adc
ja
orb
pop
popa
push
fucomp
leave
sbb
fcmove
loope
shlb
mov
add
ret
push
inc
ds
xchg
aad
fsubrl
adc
or
inc
add
cltd
xchg
fisttpll
test
scas
adc
or
stc
mov
jge
mov
and
push
cmc
aam
sbb
push
jae
in
add
push
mov
mov
fmull
mov
orb
cmpsb
sub
pop
fidivl
test
xor
pop
inc
adc
cmpsl
aad
ljmp
mov
dec
std
cmp
insb
and
mov
sbb
xorl
push
adc
mov
jne
fdivl
pop
jecxz
xchg
aam
test
neg
mov
pop
loop
pop
inc
repnz
inc
push
cli
push
jge
sahf
xchg
pop
idivb
pop
rcrb
stos
sub
es
movsb
xor
mov
mov
test
mov
mov
add
adc
sbb
inc
dec
lret
dec
xchg
mov
lret
shld
adc
fcoml
xor
push
jecxz
fildl
push
or
xor
les
fdivr
out
dec
cmp
fisubrl
scas
cmpsl
lcall
mov
ljmp
scas
xlat
dec
pushaw
scas
mov
adc
inc
sbb
pop
dec
push
inc
push
inc
mov
pop
and
sbb
pop
xchg
mov
divl
adc
add
aas
mov
shrl
outsl
iret
rolb
mov
insl
in
fwait
pop
in
stos
lods
es
push
push
mov
lods
imul
pop
xor
call
push
cmp
xchg
xor
data16
in
daa
xor
rclb
cmp
jbe
cmp
pushaw
cli
adc
sbb
xor
xlat
incb
out
icebp
inc
neg
out
mov
ret
add
into
jb
lahf
mov
or
cwtl
inc
lock
test
inc
js
mov
push
push
dec
clc
in
jo
les
add
or
mov
inc
mov
dec
icebp
inc
mov
mov
mov
fwait
jns
jo
or
inc
lret
lods
js
mov
in
cltd
mov
adc
cltd
sub
out
push
sub
cmp
lods
pop
push
xchg
das
xchg
xor
jl
add
xor
and
popa
xchg
or
sbb
xor
notb
nop
or
mov
mov
sub
sbb
or
mov
int3
mov
dec
or
pusha
rclb
inc
ss
mov
addr16
ja
mov
aam
shrl
aad
sbb
mov
xlat
add
aaa
cmp
mov
cmpsb
arpl
sub
mov
inc
add
and
and
ret
xchg
xlat
sbb
cltd
das
or
scas
aas
daa
ret
fisubrs
dec
scas
pop
andb
sbb
cmc
movsb
gs
add
std
ljmp
mov
fisubrl
inc
cwtl
into
mov
fwait
adc
fildll
out
or
out
sub
aad
mov
jbe
lahf
ljmp
aas
into
xchg
xchg
dec
mov
into
push
push
cmp
int
and
xchg
subb
push
dec
push
jg
rolb
push
xchg
sarl
push
sti
dec
cltd
stos
cltd
mov
sar
jge
xchg
sahf
inc
or
pop
jmp
ret
and
js
and
mov
lret
cmp
std
shr
iret
xchg
pinsrw
shlb
pop
repz
mul
sub
pusha
into
inc
addl
xchg
xchg
nop
sbb
mov
mov
mov
shrl
xor
xchg
cmp
aas
int3
mov
and
push
dec
push
jo
inc
out
call
ja
lcall
pop
sub
jecxz
pop
test
lret
lret
dec
xor
rol
into
gs
jb
rcrl
pop
mov
dec
aaa
pop
jg
xchg
adc
mov
pop
cmpl
mov
xchg
pop
or
aam
leave
xchg
push
ds
jg
popf
and
decb
cmp
arpl
fbstp
jecxz
into
add
nop
mov
push
pop
add
xchg
mov
push
ss
jno
mov
loope
js
ret
mov
sbb
cmp
adc
sub
addb
pop
or
sbb
inc
inc
ss
in
mov
sti
jmp
adc
shlb
cltd
loope
inc
inc
xor
dec
dec
mov
lcall
inc
and
clc
push
out
rclb
scas
divl
cmpsl
idivl
sub
mov
fisubs
test
push
pusha
sarb
adc
jmp
xor
push
adc
push
xlat
mov
mov
mov
into
jl
adc
outsb
mov
dec
cwtl
xchg
ljmp
cmp
mov
in
lcall
jl
data16
dec
push
mov
popa
in
mov
outsl
pop
in
aas
inc
cs
loope
push
dec
ja
daa
movsl
sahf
or
xor
pop
mov
mov
cs
pop
adc
xchg
loopne
or
mov
stos
outsb
ss
subb
inc
nop
inc
lahf
popf
dec
xchg
imul
mov
jecxz
pop
cmpsb
enterw
sbb
enter
jnp
jns
loopne
push
pusha
sbb
cmp
cltd
mov
inc
adcl
in
popf
add
cs
nop
arpl
sti
mov
mov
movsl
cmp
pusha
int3
cmc
cmp
leave
repnz
mov
sub
mov
dec
stos
shll
push
or
sbb
sub
mov
ds
push
push
inc
add
sub
pop
xor
push
mov
shll
mov
cmp
punpckhdq
jmp
pop
pop
andb
repnz
push
les
mov
sbb
sahf
imul
lods
jmp
push
jae
bound
scas
roll
in
mov
xchg
into
imul
popf
push
dec
je
in
adc
scas
jge
fdivrp
cs
and
test
add
rcrb
or
or
and
xchg
mov
mov
lods
jge
stos
sbb
cmp
ret
push
pushf
lods
inc
adc
pop
es
lcall
xor
test
jno
push
or
or
sbb
inc
adc
rcl
daa
mov
jnp
outsb
cmp
mov
lock
xlat
daa
mov
pusha
pushf
lds
inc
fwait
loopne
sub
lcall
in
push
pop
add
mov
xchg
cmp
outsb
and
scas
je
ja
adc
mov
loop
xor
mov
or
jecxz
add
push
lret
cmp
lds
pop
enter
push
mov
icebp
stos
ja
add
jo
sbbb
incl
imul
out
xor
das
mov
adc
sbb
sahf
inc
inc
fistpl
inc
out
mov
imul
xchg
push
bnd
xor
lods
sti
mov
dec
xor
shlb
push
outsb
ss
std
push
les
push
test
push
xlat
mov
in
xor
cltd
dec
fsubrs
xor
jp
mov
fcmove
test
push
mov
inc
xor
xchg
inc
inc
test
jne
hlt
call
xor
sbb
ds
mov
jnp
stos
stc
adcl
mov
pop
rcrb
cs
sbbl
popf
cmc
loop
nop
cli
dec
push
mov
fsubl
xor
dec
mov
aaa
mov
pop
sub
or
es
dec
out
sti
and
fnstenv
dec
cltd
fcmove
imul
int
jbe
adcb
cli
in
das
rol
push
and
jg
aam
cmp
xchg
xchg
lret
sbb
sbb
mov
rclb
bound
insb
dec
cwtl
nop
push
std
cld
cli
lods
ja
cmc
daa
lea
push
std
popa
mov
cmp
and
mov
jge
adc
mov
jge
mov
sub
pop
nop
aaa
mov
lahf
xchg
mov
mov
movsb
mov
sub
enter
cmp
or
mov
shl
push
xor
add
jmp
adc
pop
lea
jb
aaa
stos
aaa
sbb
loopne
push
mov
es
inc
sub
stos
ficoms
orb
mov
imul
fwait
outsb
inc
or
mov
arpl
mov
push
nop/reserved
push
stos
daa
in
dec
out
leave
add
cmp
pop
xchg
mov
sub
aaa
add
inc
stos
mov
adc
sbb
cmp
in
roll
mov
or
or
adc
cltd
cmp
inc
xchg
push
push
test
xor
and
and
mov
xor
jae
push
pusha
fsubrs
lods
dec
lock
jge
cltd
pop
inc
pushf
ljmp
jecxz
shlb
std
js
or
mov
adc
mov
divb
sbb
push
mov
pushf
push
pop
inc
lcall
xchg
int
add
mov
mov
aas
or
push
jo
and
fisubrs
cld
addps
or
add
dec
push
in
psubusw
push
sub
push
and
rcll
xchg
dec
xchg
gs
icebp
pop
mov
xor
rclb
cmpb
int
imul
push
push
sbb
sbb
jbe
repz
ret
and
push
iret
push
das
fcomps
xor
in
xchg
jp
jl
dec
movsl
xor
adc
cmp
xchg
rcl
push
mov
orl
lret
sub
fisttpl
clc
mov
sbb
jnp
test
mulb
adc
adcb
mov
mulb
jg
jg
cmp
jg
dec
cs
movsl
xchg
sub
push
orb
nop
adc
xor
cmp
inc
mov
jo
insl
mov
mov
mov
or
stos
test
dec
in
in
adc
dec
jg
sbb
mov
xor
jp
movsb
in
and
mov
testb
cmp
sub
arpl
lret
in
push
xor
xchg
ja
push
sub
jle
adc
and
jae
xor
jle
pop
nop
jmp
nop
and
adc
test
sbb
sahf
icebp
and
xchg
jmp
mov
mov
cwtl
cmpsb
ret
mov
rcr
push
jle
fs
inc
inc
adc
fimull
icebp
pop
dec
jmp
out
pushf
dec
mov
cmpsb
mov
int
enter
add
inc
into
bound
pop
les
xchg
sbb
leave
stc
add
adc
sbb
ljmp
lock
loope
xor
fsubrp
mov
jmp
loopne
sti
mov
popa
mov
pop
subl
cmp
imul
test
mov
je
cltd
add
fcompl
sbb
in
rolb
ret
rcr
bnd
xchg
test
push
movsl
inc
lods
mov
sub
dec
pop
mov
add
ja
or
lock
hlt
push
xchg
aad
testb
pusha
dec
add
cmp
mov
cmp
repz
scas
fwait
cmp
fcmovnbe
sbb
rorl
cmp
dec
lret
sbb
mov
dec
pop
test
inc
push
subb
popf
rcr
outsb
push
rclb
mov
shrb
pop
icebp
mov
inc
outsb
out
js
nop
sbb
enter
cs
cmp
xor
das
mov
cmp
mov
inc
fsubr
icebp
pop
or
pushf
and
lods
inc
inc
outsl
push
mov
out
push
iret
xchg
or
rorl
add
lcall
into
std
pop
dec
mov
mov
test
jge
addr16
adc
xor
and
cmpsl
pop
dec
aas
dec
out
xor
xchg
insb
adc
in
mov
xor
or
incb
es
les
pop
push
mov
pop
leave
aam
inc
std
jbe
xlat
jnp
cmp
mov
and
ja
daa
cmp
daa
jns
xchg
aaa
pushf
imul
std
or
es
aas
call
push
mov
mov
xchg
shlb
xchg
cmp
fisubrs
test
lock
xchg
sti
mov
dec
lar
add
lret
jmp
add
das
pop
data16
xor
xchg
xor
mov
xchg
pop
clc
pusha
cmpsb
or
xchg
lret
xchg
ja
ret
stos
lret
mov
inc
add
mov
jmp
xchg
js
mov
cmp
xor
sub
in
and
and
mov
lds
dec
leave
cmp
push
inc
subl
sbb
aam
sub
les
pop
push
or
scas
test
mov
cmp
jmp
pop
pop
mov
inc
xchg
pop
push
mov
int
adc
rep
and
jmp
mov
ja
aaa
lock
clc
cwtl
ret
setp
inc
pop
stos
push
jb
mov
imul
cmc
les
adc
mov
out
hlt
cmp
loopne
cmpsl
xchg
loopne
inc
adc
sti
das
rclb
pop
adc
xlat
adc
sbb
pop
into
mov
fildl
and
jne
adc
fstpt
mov
sbb
mov
add
in
add
aas
xchg
push
enter
mov
testb
mov
fcomps
lock
decb
fmul
lahf
push
call
push
xor
cs
cwtl
inc
leave
mov
ja
push
jnp
fcompl
nop
sbb
shr
imul
mov
cmp
pop
mov
ss
and
pop
js
test
and
std
test
push
rorb
iret
repnz
out
fidivrl
lcall
inc
sbb
dec
lods
jbe
or
xor
js
push
into
jno
dec
movsl
sarl
sub
into
in
jge
mov
aas
in
xor
fs
pop
cmpsl
adc
cmp
push
fidivrs
sub
int
jns
scas
xorl
xchg
push
fs
in
dec
cmp
sbb
dec
mulb
xchg
push
or
mov
loopne
repz
and
xor
popf
add
inc
rcrb
ljmp
cmpsl
xor
lcall
mov
xor
xchg
in
xchg
mov
ficompl
mov
mov
and
mov
stos
hlt
sub
dec
insb
pop
mov
lret
push
dec
lret
aad
outsl
fidivrl
dec
mov
fsubr
movsb
mov
cld
jne
dec
cmp
xorl
or
push
sub
addr16
pop
movb
sti
fnstcw
cmpb
mov
pop
inc
sbb
mov
loop
ffree
out
pop
add
jnp
ds
pop
or
xlat
and
sub
sbb
cmp
push
mov
inc
movsb
pop
xchg
sbb
xchg
in
xchg
nop
cltd
cmp
push
xchg
jmp
loope
popa
stos
cmpsl
mov
ljmp
sub
enter
incl
jno,pn
push
arpl
xchg
dec
scas
xorb
sti
xchg
sahf
loop
inc
scas
pop
ret
pop
push
loopne
jmp
test
push
bound
aam
loope
pop
jmp
lock
divl
leave
test
jns
dec
loopne
cltd
in
or
lock
sbb
fs
or
sahf
dec
and
add
xor
fcomi
mov
or
xchg
pop
mov
inc
aam
popa
mov
sti
sub
lods
pop
les
cmp
jp
xor
loop
cwtl
push
mov
mov
lods
jle
xchg
out
popa
cld
out
xor
push
mov
xchg
pop
std
icebp
test
lret
or
clc
stc
jae
mov
xor
out
pushl
fdivs
mov
pop
movl
and
lds
leave
jns
add
imul
mov
jp
fs
popa
mov
das
ret
xchg
test
ljmp
ret
fiadds
into
cwtl
sbb
loop
insl
push
ret
xchg
mov
push
inc
push
ret
fisubl
adc
cmp
jcxz
mov
outsb
push
mov
mov
add
jb
pop
in
jle
sub
in
sahf
aas
loop
mov
mov
shlb
mov
and
fcoml
dec
in
imul
or
test
stos
sub
jnp
push
xchg
or
sbb
data16
pop
sub
add
push
jg
cmp
mov
sub
js
jmp
lea
push
and
js
sbb
xchg
mov
mull
or
mov
jg
or
leave
mov
or
ret
add
cmp
pop
inc
xchg
imul
push
push
repz
sbb
inc
fldenv
sub
fyl2x
add
xchg
rcrl
aas
pop
pop
shrl
fwait
dec
inc
mov
inc
xor
add
jb
stos
xor
stos
mov
or
push
lea
out
mov
js
xchg
pop
fistps
loope
movsb
movsb
and
loope
loope
jge
fsubs
pop
int3
jbe
repnz
mov
daa
pop
sbb
mov
pop
cmp
push
mov
xchg
push
loop
jge
inc
ficomps
xchg
xchg
xchg
mov
jns
jnp
adc
adc
jb
mov
xlat
pop
lcall
xor
inc
outsb
addr16
insl
fiadds
bnd
pop
pushf
pop
sub
addr16
in
stc
adc
jb
adc
insb
jo
sbb
cmpsb
adc
and
push
outsb
push
ret
rcrb
not
jmp
cs
xchg
ljmp
div
mov
loope
lds
pop
sub
sarl
loopne
xchg
loope
faddl
dec
les
and
or
add
imul
sahf
in
testl
adc
jge
hlt
push
fbld
fstps
or
shlb
imul
sub
test
js
mov
adc
out
push
shrl
xor
mov
push
push
dec
cli
mov
sub
sub
mov
pop
ss
push
shll
push
add
movss
cmpsb
test
ss
pop
pop
aaa
pmaxsw
fstps
jg
nop
std
mov
mov
orl
std
jge
outsb
scas
push
cmp
mov
outsl
loopne
adc
cs
je
mov
leave
xor
xchg
jbe
push
dec
jmp
dec
sti
fdivs
inc
scas
cmp
dec
pop
push
cwtl
rolb
test
jo
arpl
mov
nop
in
leave
ffreep
pop
cld
inc
in
jl
outsb
aam
adc
jae
mov
jg
xor
push
push
add
pop
and
xor
fsubl
sbb
sbb
mov
in
mov
ds
cmp
addr16
mov
stos
cwtl
cmpsb
cld
push
mull
fadds
cmp
push
popa
adc
shl
inc
sbb
mov
in
sbbl
notb
jle
mov
rep
out
cmp
pop
xchg
bnd
push
mov
ds
jb
jns
xlat
add
and
sub
call
cmp
and
popf
dec
mov
xchg
mov
insb
xchg
jle
fs
fs
outsl
pop
popf
inc
jmp
in
xchg
lcall
jbe
xchg
jecxz
loope
repnz
dec
cwtl
push
popa
push
mov
clc
pop
jb
shll
scas
dec
ja
test
push
adc
testl
pushf
sti
cmp
rep
cwtl
jp
sbb
test
pop
ret
mov
aad
dec
hlt
mov
jl
dec
sar
aas
aad
mov
push
lahf
out
add
lret
insb
mov
lcall
sub
lods
mov
in
and
into
mov
cmp
push
outsl
inc
leave
sbb
xchg
adc
cltd
ss
inc
mov
stos
loop
inc
iret
shlb
add
or
sahf
or
fnstsw
add
loop
call
sub
cmpsb
push
sarb
xor
jle
cmp
pushf
xor
or
and
mov
jns
xchg
add
mov
mov
mov
and
dec
mov
cltd
in
and
pop
push
aaa
xchg
imull
int3
mov
jb
mov
cs
push
xor
sub
pusha
cmpsl
mov
jno
movsl
xchg
repz
jl
popf
hlt
push
test
loope
jne
xor
jbe
loope
ficoml
orb
jmp
jo
mov
jg
mov
in
loopne
cwtl
xchg
repnz
sahf
jbe
stc
and
jl
adc
call
cmovno
pop
les
adc
and
or
pop
repz
orl
dec
xlat
xchg
adc
popf
xchg
cmp
leave
lds
mov
scas
xchg
int3
jle
ja
mov
incb
mov
jecxz
or
into
cmp
xchg
js
and
bound
push
cmpl
popf
mov
stc
cmp
sub
sti
cltd
int
aas
adc
fs
lret
test
add
push
cmpsl
ljmp
mov
jmp
push
xor
mulb
lds
iret
jno
jge
push
fadd
lcall
cmc
outsb
popa
pop
or
pop
negb
dec
cmp
and
inc
mov
push
imul
push
pop
dec
mov
adc
out
adc
into
loope
ficoms
jg
sub
stos
cmp
out
adc
dec
jp
push
in
fdivl
test
mov
sbb
pop
or
andb
mov
movsl
xor
jp
pop
inc
push
in
sti
pop
sub
mov
mov
mov
mov
adc
shrl
aad
fcoml
addr16
sbb
push
outsb
lret
mov
leave
pop
dec
or
mov
and
sbb
outsl
sub
es
mov
mov
aam
gs
xchg
cmpsl
cltd
push
mov
je
shrb
leave
mov
cmp
pop
mov
pushf
jb
loop
cmp
dec
xor
add
xchg
or
or
les
stos
je
test
or
xor
lods
xchg
cltd
pop
cmp
lock
orb
jae
pushf
adc
cmp
xchg
ja
cmovp
adc
dec
popf
mov
mov
jmp
std
add
pushf
xchg
xor
sahf
pop
jp
outsb
jns
xor
jmp
ljmp
mov
sbb
scas
cmpb
push
popa
ds
pusha
lahf
inc
mov
aaa
adcb
push
sbb
push
xchg
insb
in
dec
je
incl
in
mov
rclb
pop
jg
sub
out
mov
out
jp
mov
fwait
pop
mov
cmc
dec
lods
fldenv
xchg
es
pop
lods
adc
pop
pop
shrl
leave
test
hlt
das
adc
fsubl
pop
pushf
pop
fdivr
inc
lret
lret
movsb
and
jns
or
sub
dec
stc
loope
inc
outsl
inc
das
xor
mov
and
cmp
mov
in
xchg
lock
jns
inc
push
dec
mov
cltd
xor
shlb
and
sub
iret
imull
sbb
push
js
xor
jb
loope
outsl
mov
pop
orb
push
push
add
jb
jbe
sbb
push
out
xlat
or
dec
mov
pop
das
and
subl
sub
cmc
std
movsb
js
and
ret
mov
push
lds
jno
es
xor
call
xlat
sbb
fs
add
scas
mov
pop
dec
xchg
notb
cld
jle
jbe
xchg
aam
int3
sub
xchg
popf
stc
pop
push
sbb
push
xor
xor
cmp
mov
jmp
jge,pt
sarl
add
arpl
jno
sbb
jl
mov
roll
jae
sbb
imul
xor
clc
dec
adc
orl
dec
cmp
aad
and
mov
sub
fsubs
inc
and
arpl
push
xor
dec
lods
out
sbb
sbb
repnz
mov
pop
bound
ficompl
xchg
clc
sbb
xlat
outsb
mov
jge
and
mov
ds
cltd
jge
jb
push
jb
test
popa
dec
xchg
cmp
or
es
divb
jg
in
movsl
dec
in
push
inc
das
int
xchg
jbe
xchg
push
ljmp
jo
ss
iret
mov
xchg
inc
jg
addr16
clc
sbb
fcomps
xchg
loope
mov
inc
xchg
pop
bound
sbb
inc
or
mov
icebp
sbb
pusha
pop
mov
xchg
jg
xchg
jmp
lds
mov
daa
inc
pop
jo
or
sub
inc
mov
ret
sbb
mov
jle
rclb
je
adc
cld
mov
insl
mov
inc
mov
loop
sub
xor
or
outsl
mov
and
hlt
cmp
test
add
hlt
inc
ss
add
xchg
push
std
mov
jge
fld
cmp
push
icebp
adc
pop
mov
mov
push
aam
dec
loop
xlat
adc
hlt
push
dec
inc
push
stos
sub
mov
cltd
test
mov
ljmp
jbe
aas
cmp
mov
lahf
xchg
push
xor
xor
int3
cmp
jge
movsl
mov
cmp
ficoms
jp
sti
scas
xchg
pop
or
pop
lcall
pushf
pop
test
xor
sbb
pop
mov
lods
cmpsl
out
mov
mov
repnz
aas
jecxz
cmc
xor
sub
push
sub
sub
jmp
push
sti
fld
in
push
rclb
and
xchg
movsl
mov
jge
and
xchg
test
ret
inc
dec
mov
ret
call
scas
pop
jne
es
in
icebp
sbb
mov
mov
fdivl
jnp
divb
cmp
pop
or
int
rorb
mov
repz
leave
call
adc
mov
mov
inc
or
jl
rorl
xor
mov
imul
push
shlb
inc
ret
jl
gs
pop
mov
ret
push
jg
mov
out
mov
sbb
jmp
mov
rol
ljmp
nop
mov
rcll
cltd
inc
std
pop
ficoml
push
cmpsl
mov
adc
xor
in
std
mov
movsl
mov
jg
pushf
es
aaa
push
mov
ljmp
cmpsb
pop
ds
jb
lret
add
inc
or
jno
xchg
xorl
icebp
lcall
aas
cmp
in
loopne
xchg
xor
out
jne
stos
and
pushf
repnz
mov
into
rcrb
in
lods
jl
aaa
dec
sahf
nop
popa
inc
test
pop
xor
mov
in
outsb
xchg
add
mov
nop
decl
xchg
mov
push
ret
sub
in
jle
in
and
insl
inc
sbb
in
cli
cmp
xchg
sbb
imul
add
and
mov
mov
mov
sub
mov
adc
jns
sbb
sbb
adc
out
mov
pusha
lahf
rcr
lret
pop
or
mov
adc
mull
or
pop
pop
icebp
dec
adc
push
dec
pop
insl
addr16
adc
sbb
pop
fisttps
sbb
lock
push
mov
jl
call
mov
fistpl
stos
dec
jl
enter
fldl2e
add
nop
add
mov
insb
sbb
mov
inc
lds
rol
push
push
mov
jbe
pop
imul
jae
xchg
add
stos
xchg
loope
into
lcall
fldenv
jbe
inc
sbb
ds
nop
mov
or
push
xor
adc
dec
inc
les
xchg
fisubl
sub
adc
lock
cmp
lret
cmp
xchg
mov
repnz
mov
mov
mov
mov
pushf
xchg
xchg
sbb
pop
sbb
mov
push
imull
outsb
adc
inc
lods
outsb
clc
lods
add
insb
das
loope
mov
xchg
enter
mov
lret
incl
add
ss
stos
mov
loop
sbb
or
cmc
in
xor
fidivl
mov
stos
xor
scas
xor
jecxz
sarb
xchg
xchg
subb
mov
fdivs
das
pop
fwait
in
lcall
jg
shr
and
insl
jnp
xor
mov
outsb
outsb
inc
sahf
icebp
inc
test
in
sahf
mov
imul
mov
out
lret
rcrb
and
sub
jle
lock
xchg
sti
scas
std
mov
loopne
sbb
stos
jle
cmp
cmp
sub
fmuls
sahf
inc
sti
mov
mov
xchg
push
mov
sub
cmpsl
out
movsl
cmp
lds
clc
ljmp
mov
mov
inc
xor
fldt
adc
push
outsl
stc
mov
dec
fnstenv
adc
inc
adc
push
jbe
gs
icebp
add
mov
clc
lret
mov
push
jl
mov
add
daa
jne
aaa
push
push
inc
push
iret
mov
mov
cmp
jmp
xor
pop
mov
mov
xchg
sahf
xchg
es
subb
stc
mov
int3
popf
mov
or
push
incb
xor
repz
filds
cmpb
cli
out
push
adc
rclb
xor
mov
rorl
sbb
inc
jge
dec
sub
stos
scas
out
sti
ss
pop
sub
xchg
dec
iret
mov
mov
out
lea
imul
add
aad
adc
negb
jb
std
pop
loope
shlb
rolb
sub
pop
out
xorl
fdivs
dec
std
mov
mov
xor
mov
adc
and
lock
push
ror
add
out
mov
cld
scas
fists
aas
push
test
sub
adc
mov
mov
int3
dec
xchg
clc
imul
mov
ret
shlb
cmp
sub
pop
loopne
pushf
fcmovnb
in
or
pusha
or
fistpll
inc
jp
mov
jno
lret
xchg
aam
sbb
sbb
pop
jb
adc
xlat
xor
adc
xchg
ljmp
mov
mov
rcll
insb
std
jae
push
stc
push
dec
xchg
or
adc
leave
movb
sub
out
push
inc
dec
into
mov
sub
ss
dec
dec
mov
cwtl
xchg
movsb
fisttpll
inc
sub
mov
out
adc
cmpsb
pusha
int3
cmpb
add
sub
cmp
cmp
fisubrl
rolb
push
insl
inc
jbe
jnp
inc
xor
jne
repnz
mov
mov
mov
rcrb
or
nop
sbb
into
xlat
mov
sbb
sub
je
or
loop
in
fimull
out
sti
cmp
pushf
movsb
mov
sbb
inc
push
and
shl
movsl
clc
xor
xor
sbb
mov
fistl
pop
adc
inc
std
jne
ds
or
sub
movd
push
pop
scas
test
lcall
xchg
mov
dec
inc
jae
int3
imul
loop
fistpl
cmp
in
mov
imul
into
dec
mov
lcall
loop
stc
int3
cwtl
mov
push
test
push
imul
jp
insl
jp
jmp
repnz
jmp
add
mov
xchg
inc
pop
out
and
jecxz
lods
shlb
mov
dec
sbb
fdivl
mov
stc
std
pop
mov
mov
or
bnd
gs
xlat
jns
sub
add
jo
mov
shl
repz
out
fnsave
pop
xor
sub
aam
call
test
gs
xor
pop
push
gs
sbb
xlat
cmpl
xchg
std
cmp
inc
imul
out
out
fistps
add
shrb
aaa
dec
mov
repnz
pop
push
jmp
in
out
cld
or
shll
cmp
push
loop
cmp
notb
lret
add
xor
mov
out
pop
mov
jo
sub
in
loopne
and
stos
xchg
cld
pop
xchg
mov
ljmp
aam
mov
jo
pop
mov
jecxz
sub
stc
divb
mov
and
les
jg
and
or
roll
mov
dec
stc
sub
xor
scas
sti
mov
aas
lret
adc
and
jns
push
mov
xchg
cmp
fidivrl
jbe
cwtl
xchg
fsubs
and
lret
push
test
and
pop
cmp
jno
ss
inc
mov
lods
std
jbe
les
and
repz
outsl
xor
xchg
movsl
pop
or
jp
mov
je
lret
sbb
add
dec
xor
pop
insb
jge
jb
popa
dec
mov
scas
aam
cmp
fdivs
inc
cmp
push
loope
test
jle
sbb
roll
int
jbe
adcl
inc
jne
jne
lods
inc
lret
scas
jbe
pop
call
popf
mov
adc
int3
mov
outsb
mov
push
stc
add
pusha
loope
inc
sbb
sub
xchg
insb
mov
enter
aam
addr16
in
cli
fmull
lods
cld
shlb
insl
mov
enter
sbb
pop
addl
outsl
or
fdivr
lock
dec
mov
and
inc
out
mov
int
xlat
xlat
mov
sbb
sti
mov
xchg
or
jne
ljmp
shrb
les
imul
scas
jl
sbb
dec
or
test
scas
push
or
sub
xor
mov
jle
inc
mov
dec
dec
call
sbb
mov
movb
imul
popf
rcr
shrl
enter
test
or
mov
cmp
lret
iret
dec
xlat
xor
lahf
jl
lods
insl
shrl
cmp
pop
cmpsl
add
sub
mov
cmp
pop
scas
sbb
insb
ds
sbb
add
testl
aam
or
xchg
sub
xlat
dec
mov
repnz
shlb
cmp
push
sub
or
pop
or
cmp
cli
je
add
in
mov
out
outsl
aad
mov
inc
or
aam
jmp
mov
push
cmp
push
int3
dec
outsb
mov
dec
sub
test
sub
decb
sbb
scas
fcomps
dec
std
lret
js
fcoms
xor
sbb
into
int
idivb
outsl
inc
fmuls
xor
or
xor
pop
fndisi(8087
xchg
pop
sub
dec
adc
jo
enter
scas
xlat
push
add
stos
lahf
fnstenv
out
arpl
add
cmp
addr16
js
int3
sbb
push
mov
idivb
fmul
and
or
rcrl
or
cmc
scas
js
ja
and
loop
call
jp
jmp
xchg
icebp
rcll
repnz
mov
inc
sbb
pusha
cmpsb
xorb
add
pusha
adc
rorb
sahf
mov
ljmp
add
shlb
mov
nop
mov
outsb
adc
inc
push
mov
addr16
jne
pop
popf
imul
pop
push
cmp
sahf
orb
daa
jne
in
mov
mov
mov
cmpl
shl
mov
out
and
xchg
adc
int3
or
rep
mov
jecxz
cwtl
iret
xchg
scas
xchg
push
subb
loopne
push
sbbb
sub
sahf
shll
cmp
or
daa
mov
xor
fnstcw
sbb
hlt
je
mov
xchg
lock
lock
out
mov
sbbb
mov
fwait
jecxz
push
roll
cli
lcall
sub
punpckldq
rcl
and
xchg
push
pop
xor
nop
addr16
inc
or
fcompl
dec
lock
fcmovu
adc
jb
ljmp
and
shlb
inc
hlt
cltd
mov
jnp
push
fdivs
xchg
lea
shl
xor
inc
adc
xchg
add
dec
adc
jl
or
push
sti
dec
mov
inc
push
stos
in
xlat
or
ss
lret
arpl
arpl
fs
inc
lods
mov
loope
enter
fprem
mov
cmpsl
jnp
xor
lock
dec
mov
mov
jnp
out
jg
push
call
cmp
add
jnp
jle
stc
mov
pop
push
jmp
dec
xor
xchg
ret
je
mov
stc
adc
movsb
movsb
cmpsl
int
push
mov
psrlq
ds
dec
pop
ss
mov
enter
cmp
out
iret
pop
fistps
sub
les
test
sub
mov
push
std
xorl
cmp
loopne
pop
leave
xchg
sub
in
scas
mov
jns
ja
int3
das
lods
mov
mov
jmp
inc
int3
add
mov
ss
cmp
aas
mov
or
mov
stc
fmul
sub
dec
cmp
test
movsb
push
sarl
pop
in
stos
out
cli
jmp
mov
cmc
je
sbb
push
or
or
imul
out
stos
gs
movl
xor
pop
add
popf
jne
inc
mov
out
imul
es
jecxz
adcb
lcall
sub
dec
je
cmpsb
leave
popa
stos
or
push
fdivrs
loopne
arpl
in
xchg
adc
fdivp
push
inc
mov
mov
add
xchg
mov
pop
roll
xor
iret
std
fucom
inc
int
push
and
add
lcall
mov
addr16
xchg
sbb
jecxz
xor
ljmp
push
push
cmp
pop
or
add
jg
and
pop
push
shlb
and
cld
movsl
xlat
stos
xchg
pop
stos
mov
roll
cli
pop
lret
icebp
pop
xchg
pop
mov
and
lahf
sbb
mov
or
xchg
xchg
sub
imul
test
adc
mov
aaa
out
add
jnp,pt
xor
push
fdivr
xor
sbb
xchg
jns
inc
cmpsb
add
es
add
test
movsb
cmpsb
adc
les
mov
cmp
jl
sbb
das
mov
pushl
cmp
loop
sbb
push
ret
mov
lahf
push
cmp
pop
pop
or
movsb
in
es
jno
xchg
add
data16
mov
add
inc
clc
cmp
mov
mov
stos
fbld
xor
ss
cvtpi2ps
xchg
push
mov
inc
add
rcrl
sbb
fwait
adc
inc
push
mulb
and
subl
cmp
insl
or
repnz
scas
jno
pop
clc
and
sahf
mov
outsl
into
hlt
iret
mov
das
outsb
nop
gs
push
mov
push
mov
flds
dec
push
cmp
add
jo
es
push
fistl
dec
lea
icebp
cwtl
pop
pop
ss
and
jne
sahf
fnstcw
fsub
rclb
stos
and
mov
or
std
add
loope,pt
xor
pop
adc
sub
or
mov
jne
or
sbb
idiv
pushf
mov
adc
dec
dec
in
scas
mov
xchg
pop
mov
mov
mov
testl
bnd
out
sbb
pop
scas
sbbb
sar
cltd
pop
pop
add
int
cmpsb
aam
mov
pop
ja
add
jns
mov
rolb
jle
lds
xchg
fcoms
movsl
test
inc
inc
mov
cli
lcall
repnz
and
pop
int
mov
cmpsb
test
inc
pop
pop
out
mov
xor
pop
add
adc
push
addb
loop
mov
pop
and
add
repnz
movsb
mov
or
test
push
sub
inc
pop
add
enter
push
incl
test
sahf
cmpsl
mov
push
inc
lock
minps
dec
dec
and
push
ret
ljmp
out
sbb
xchg
jp
in
adc
mov
cmpsb
pop
and
cmpsl
sub
jbe
jg
xlat
ficomps
sbb
inc
jo
push
mov
arpl
jp
sahf
hlt
loop
sub
push
xchg
subl
les
mov
jg
sbb
sub
aam
fwait
mov
loope
repz
cmpl
lock
fbstp
jecxz
loopne
add
cwtl
push
sub
cmc
je
gs
mov
test
rcrb
sub
mov
xchg
sti
jo
std
movl
lret
push
mov
cmpsl
dec
adc
pop
pusha
and
jae
stos
test
std
or
popw
shll
sahf
dec
inc
mov
pop
movsl
test
mov
int
push
movsl
pop
stos
jp
fisubrs
stos
adc
inc
dec
xlat
nopl
jl
cmp
xor
jecxz
dec
hlt
aam
mov
sti
dec
mov
mov
js
fidivrs
fisubrl
dec
mov
imul
cld
ffreep
push
outsl
mov
xchg
and
cld
adc
idivl
jns
ljmp
jmp
insl
or
sub
movsb
and
fadds
push
and
call
cmp
test
jns
jmp
add
adc
cmp
push
jns
mov
sbb
xchg
and
stos
push
fwait
push
lret
data16
mov
fimuls
cmp
inc
or
or
xchg
scas
mov
sub
mov
or
adc
inc
xorl
stos
insb
cmp
inc
push
add
loop
sbb
fstps
loopne
test
pop
jbe
shll
lret
mov
dec
mov
push
sub
pop
sub
mov
subb
push
xor
aaa
fiaddl
ret
adc
mov
in
pop
inc
push
test
dec
je
outsl
or
sub
addb
movsl
fnstenv
daa
mov
mov
or
movsb
add
xor
inc
loope
cld
push
das
mov
mov
fcmove
adc
sbb
xor
roll
adc
movsb
pop
push
dec
push
cmpsb
xlat
jns
outsb
sbb
fbstp
sbb
lcall
mov
sub
mov
and
lcall
push
test
jbe
jae
shl
fdivs
jne
push
ss
sbb
pop
xor
lods
cmovp
stos
xor
in
clc
mov
push
fiadds
shll
je
pop
xchg
test
sarb
or
jle
push
int3
in
imulb
mov
call
icebp
dec
cmp
lret
sub
mov
jmp
aad
cmpsb
shll
js
push
xlat
in
stos
rcll
add
imul
pop
and
sub
addr16
lods
push
xchg
insb
jecxz
icebp
enter
pop
inc
add
xchg
jp
stc
call
shrl
ljmp
int
mov
xchg
xchg
data16
dec
mov
dec
loopne
fwait
lds
cwtl
scas
xchg
lods
cmp
mov
adc
sbb
js
insb
and
mov
loope
mov
sbb
xchg
lods
pushf
cmp
vcvttsd2si
shlb
pop
jnp
xor
sbb
add
mov
xchg
dec
testl
xchg
pop
fs
and
sti
pop
vcvtsd2ss
cmp
lods
out
xchg
arpl
inc
fisttpll
jbe
push
add
xor
cmp
inc
scas
add
xor
cmp
sahf
dec
leave
dec
sar
out
int3
mov
or
inc
mov
cmpsb
xor
in
jae
repz
mov
icebp
call
or
shll
dec
xchg
lea
adc
cmp
xor
loopne
ficoms
subb
clc
cltd
aaa
ficomps
lret
add
out
shlb
push
test
add
xchg
stos
fdivl
nop
mov
xchg
inc
iret
lds
dec
shl
and
pusha
push
aaa
pop
add
inc
shrl
imull
xchg
mov
mov
push
push
outsb
cmc
xchg
adcb
jns
mov
cltd
mov
xchg
aad
xor
dec
push
fidivrs
mov
lcall
out
out
push
mov
push
ja
or
adc
dec
adc
imul
cwtl
mov
adc
stos
jb
dec
jle
gs
daa
mov
imul
jecxz
data16
lds
cmp
nop
and
push
inc
loopne
mov
repnz
sub
mov
cmp
pop
push
xchg
aam
stc
pusha
push
jmp
mov
cltd
out
aam
or
popf
aad
pop
scas
jns
fmuls
fucom
andl
mov
aas
inc
adc
mov
out
or
daa
sbb
jnp
cmp
aaa
adc
jnp
iret
push
mov
push
xlat
push
dec
aam
inc
clc
jmp
push
out
lods
inc
push
fiaddl
mov
iret
loopne
cwtl
sub
inc
mov
imul
sub
cmp
aad
jbe
mov
cmp
adcl
dec
fsubs
scas
adcl
shl
or
cmp
and
shrl
into
cli
sub
int3
enter
mov
lods
jb
sahf
jp
mov
mov
add
xchg
dec
dec
fcomip
sbb
and
sbb
lcall
icebp
pop
js
cmp
lcall
add
clc
xchg
xor
ds
adc
cld
and
dec
mov
insl
icebp
leave
out
push
ret
add
mov
mov
negb
adc
mov
ret
inc
or
sub
jo
pop
jecxz
es
jl
mov
sbb
add
scas
dec
aas
or
push
loopne
xchg
std
gs
mov
mov
push
mov
pop
xor
ss
jb
add
lock
push
inc
popl
add
push
dec
mov
hlt
pop
int3
jnp
aaa
push
mov
jae
shr
cs
push
push
xchg
add
iret
aam
xor
dec
push
mov
dec
loopne
jb
mov
and
jbe
fadd
mov
lcall
adc
imul
cs
push
xchg
shrb
dec
mov
inc
call
cld
mov
aad
sbb
pop
and
aad
adc
fwait
mov
dec
ret
push
dec
enter
mov
pop
out
jns
fcoms
mov
ret
xor
loop
pop
mov
ljmp
cltd
xchg
and
arpl
addr16
mov
mov
call
insb
sub
push
dec
ljmp
pop
and
stc
sub
xchg
or
cltd
cmp
cli
cmp
mov
cwtl
imul
push
push
stc
sbb
mov
loope
sbb
stos
dec
sub
add
pop
mov
in
fwait
dec
jns
je
imul
xchg
les
push
adc
add
fidivrs
sub
aam
sub
or
and
jl
mov
lea
dec
xchg
ret
std
das
cmpsb
xor
or
lret
fistps
jbe
cmp
cmp
cld
mov
adc
pop
mov
dec
sub
push
jae,pt
outsl
adc
inc
pop
outsb
jp
xchg
cli
lock
enter
inc
cwtl
inc
and
fbstp
sbb
mov
pusha
inc
shll
mov
jg
je
subb
nop
fadds
sbb
adc
jl
pushf
fs
pop
cld
mov
testb
mov
mov
sub
xchg
xchg
fldln2
data16
sbb
sub
mov
push
lock
test
in
xor
xor
mov
stos
addr16
push
fwait
pop
add
mov
pop
xor
dec
fldcw
aam
or
repnz
mov
shlb
in
pop
cmpsl
enter
cmpsb
hlt
sbb
dec
and
or
pusha
mov
mov
movzbl
outsl
data16
mov
adc
js
or
fdivrs
dec
jge
push
insb
ret
orl
fisttpl
ja
jbe
mov
xor
loopne
in
sub
ret
push
mov
and
jmp
or
jle
cmpsl
ficoml
in
jl
or
pop
pop
inc
jmp
xor
cmp
inc
pop
mov
inc
loope
push
adc
fdivl
test
pop
rcll
push
movsb
hlt
hlt
xchg
loop
jo
jecxz
outsb
mov
cmp
clc
add
sbbl
push
or
jbe
out
sub
inc
das
dec
inc
mov
repz
popa
std
pop
ret
add
sarb
pop
fadds
insb
fwait
fwait
dec
rcrl
sub
sub
pop
adc
sahf
jge
insl
push
movsl
pop
cmpsl
das
dec
pusha
dec
push
loope
jns
sub
cmp
sbb
jae
mov
push
sbb
xor
sub
subl
in
ret
mov
mov
insl
scas
lds
push
jo
aas
jb
xlat
rorl
jae
scas
in
sbb
arpl
sub
in
adc
jno
xchg
aam
movsl
pushf
testl
repz
ficomps
ror
jecxz
mov
imul
inc
and
insb
insb
out
and
mov
adcl
pop
mov
aaa
bound
jecxz
daa
adc
mov
ficoml
dec
aam
lods
or
mov
cmc
andl
mov
dec
call
cltd
or
cmp
sub
nop
cld
xlat
out
imul
cli
inc
push
jns
xchg
es
flds
mov
cwtl
mov
fsubs
cmp
push
mov
cmpsl
or
fcmove
orl
or
jno
fstp
ret
push
mov
sbb
sbb
push
ja
lret
or
sub
out
pop
stc
cltd
cli
add
ret
outsl
pop
dec
dec
mov
jns
stos
inc
stos
mov
or
test
movsb
xor
popa
mov
sahf
cltd
fcomps
mov
pushf
loop
add
ret
jge
jnp
lods
dec
sub
rcr
fsubrl
xchg
lahf
xor
sub
fucomip
lcall
dec
mov
sub
data16
cmp
push
jbe
jbe
adc
pop
xchg
xor
int
push
out
adc
and
fists
imul
cmc
dec
mov
cmp
in
and
scas
notb
leave
lea
or
adc
ljmp
std
jg
je
ds
jle
jl
lea
ss
outsl
sahf
pop
inc
cmpsb
push
cwtl
jle
mov
out
mov
xchg
dec
and
fs
gs
hlt
mov
xchg
jmp
fimuls
xlat
push
pop
mov
cmp
adc
mov
ss
mov
sahf
std
sub
lods
and
sbb
out
pop
sub
cld
aaa
add
mov
adc
sbb
mov
orl
xor
push
xchg
cmp
arpl
dec
mov
jnp
xchg
icebp
ret
cmp
scas
inc
mov
out
aas
mov
arpl
xchg
mov
out
clc
outsl
push
pop
mov
loop
push
mov
sub
mov
popa
lcall
insl
sbb
mov
fdivl
jp
adc
push
jo
mov
cmp
sub
xor
xchg
out
xchg
ja
idivb
scas
push
loope
sub
add
and
push
mov
xor
popf
and
jae
dec
push
in
or
pushf
pusha
or
mov
xchg
test
test
lret
mov
cli
push
push
push
gs
cs
push
aam
xchg
mov
push
in
int3
out
sub
cmpsl
cwtl
cmpsb
stos
jl
jno
movsl
inc
inc
mov
roll
cwtl
loop
jp
vmulpd
imul
nop
outsb
xchg
aam
lret
jle
pop
pop
imul
ret
mov
test
fwait
icebp
imul
leave
jno
aad
or
test
or
addr16
jecxz
pop
jecxz
lahf
aam
and
aas
sub
xlat
jmp
sbb
in
xorb
mov
sub
lock
arpl
push
sub
mov
pop
sbb
test
sbb
add
push
popa
xchg
dec
xor
mov
jbe
mov
lods
mov
pusha
scas
outsl
mov
lods
inc
lock
filds
mov
sub
push
sbb
mov
and
and
and
test
int
add
std
cmp
or
push
sub
cltd
arpl
movsb
mov
gs
test
push
fwait
sub
mov
dec
or
arpl
inc
icebp
mov
stos
xor
or
pop
insb
xchg
mov
popa
cmp
pop
push
aas
imul
inc
nop
addr16
aad
frstor
adc
xchg
dec
cmpsb
in
aas
lret
and
pop
mov
mov
xor
outsb
scas
mov
rclb
xlat
sub
or
lahf
push
jno
test
rclb
pmaxub
dec
loopne
or
pop
popa
scas
cld
inc
jmp
push
mov
mov
jae
out
jb
mov
iret
inc
inc
clc
cwtl
les
movsb
or
and
inc
mov
subb
scas
mov
push
subl
shrb
jecxz
insb
inc
mov
xlat
adc
dec
mov
mulb
or
xchg
mov
jecxz
js
mov
les
push
popl
mov
push
pop
gs
js
sbb
pop
into
inc
push
call
andl
bound
repnz
fldcw
xchg
cmpb
add
movsb
fsubrl
xor
or
fcompl
and
ja
unpcklps
out
rorl
cmp
sarb
xchg
nop
fisubrs
clc
add
mov
loopne
scas
cmp
sahf
pop
mov
xor
std
mov
mov
stos
xchg
out
pop
and
jmp
mov
mov
xor
push
or
loop
sbb
stos
ja
jl
insb
adc
ljmp
sub
jb
cmc
out
aaa
sub
jp
push
daa
ret
inc
xchg
movsb
or
mov
insb
scas
movl
inc
fimull
daa
push
xchg
faddl
cwtl
in
jnp
lea
repz
inc
mov
sub
xlat
mov
daa
aam
aas
aaa
push
xchg
xor
xchg
lds
aad
std
xor
cmc
test
pop
ret
push
mov
popf
in
and
les
sub
add
pop
imul
mov
jne
int3
adc
push
mov
adc
fldt
sbb
lret
lods
cmp
pop
push
cmp
pop
sub
stos
jne
and
pop
add
out
mov
mov
in
nop
dec
pop
ret
or
int3
and
cmp
rcrl
fstps
arpl
icebp
sbb
mov
pop
addr16
stos
xor
std
in
out
mov
mov
and
xor
iret
inc
sbb
or
sub
mov
movsl
les
mov
lret
outsl
and
mov
xlat
aad
sbb
inc
adc
add
dec
sub
loopne
pop
pop
add
pop
inc
rolb
jne
aam
push
aad
bound
xor
dec
aam
mov
mov
lock
xchg
popa
push
sbb
sbb
xchg
gs
lret
lea
inc
pop
push
inc
xlat
fistl
dec
lock
arpl
mov
sti
addb
fmuls
dec
imul
or
stc
data16
mov
popf
fmull
mov
sub
push
mov
xlat
test
out
pushf
and
stos
sahf
setle
cmp
pop
arpl
popa
inc
lahf
loopne
push
add
push
xor
je
test
ret
xchg
xchg
or
int3
nop
push
adc
or
dec
xor
sub
xchg
subl
lret
add
nop
or
cltd
dec
mov
sub
pop
sub
sarb
int3
dec
pop
movsl
mov
outsb
int
xor
add
jns
sbb
inc
rol
int
rcll
dec
push
jnp
idivl
sbb
insb
ss
repz
pop
out
xor
ljmp
out
nop
pop
shl
xchg
aad
cmpb
push
push
nop
pop
mov
imul
loopne
adc
sbb
fistpl
adc
addr16
hlt
push
outsb
push
fistps
jno
mov
mov
mov
and
push
test
push
fcomps
cmpsl
pusha
mov
test
mov
mov
call
addr16
daa
add
xchg
adc
je
aam
shrb
sbb
and
fisttps
inc
xchg
popf
pop
scas
mov
sbb
jne
jae
xor
mov
push
xchg
and
iret
add
mov
dec
jns
mov
push
xchg
out
ss
xchg
lret
mov
shll
std
lret
outsl
jge
add
pop
rcrl
and
scas
and
mov
cwtl
fldcw
addl
movsl
add
inc
sub
fstl
push
xor
cli
mov
pop
xor
scas
push
mov
mov
pop
add
ret
jo
jns
inc
je
xor
mov
pushf
insl
ds
sub
ret
xor
inc
push
xor
mov
dec
xchg
mov
mov
mov
loop
loopne
fnsave
into
add
sbb
movb
je
push
out
scas
pop
cmpsb
jge
mov
jmp
push
stos
xor
lock
mov
xchg
in
shrl
pushf
out
jg
push
cmpsl
mov
adc
addb
xor
dec
pusha
cmp
mov
lea
data16
xchg
movsl
jae
ljmp
lcall
or
mov
push
jl
xchg
movsl
mov
push
sarl
stos
pop
popa
test
outsl
sahf
ss
push
or
popa
mov
or
in
push
aaa
and
adc
rolb
push
jbe
movsb
gs
jno
sub
sbb
push
and
scas
mov
inc
jne
cmp
ja
arpl
outsb
mov
xchg
and
add
insl
sti
xchg
inc
mov
sub
add
addr16
add
cmc
shrb
loopne
rorl
cmp
mov
insl
imul
je
jmp
loop
dec
int
add
not
pop
aaa
sbb
inc
enter
sbb
dec
ljmp
dec
popa
insl
test
cmp
mov
nop
cli
fildll
es
movq
jp
fwait
out
push
loopne
stos
xor
jge
xchg
repz
pop
testl
or
adc
mov
add
adc
pop
xchg
lret
mov
das
ret
sbb
or
mov
into
inc
iret
or
and
std
lahf
add
jg
xor
ret
mov
sub
test
cwtl
mov
shll
push
xor
enter
nop
xchg
movsl
fidivl
add
xchg
cmp
bnd
cmp
out
popf
call
and
mov
scas
cmp
movsl
cmp
sbb
std
pusha
cs
xchg
adc
cmp
sahf
mov
mov
and
or
mov
add
jbe
dec
out
loop
loopne
xor
ret
mov
mov
out
push
imul
add
aad
shll
adc
iret
cmp
xchg
jb
cmp
shlb
in
push
or
in
adcl
rorb
adc
mov
or
std
pop
mov
popf
in
add
cmp
int
dec
shlb
stos
pop
jne
imulb
dec
xor
test
mov
push
push
or
xor
popa
cmpsl
ficoms
or
sub
xor
xor
mov
cmc
fistpll
scas
push
xchg
push
xchg
and
mov
push
fstpl
mov
jmp
pop
cmp
pop
or
xor
ret
or
enter
jmp
pop
sbb
shr
inc
push
push
xor
or
xor
jne
cs
cli
cltd
call
loope
cmp
sahf
dec
or
jae
push
sbb
mov
bound
sbb
aaa
imul
mov
mov
adc
pop
adc
int
pop
cmp
loop
or
std
pop
fcmovnb
ljmp
push
in
sbb
jecxz
push
mov
in
cwtl
xchg
fdivrp
adc
and
jmp
stos
int
imul
xchg
fmull
fisttpll
add
inc
fisttpll
pop
movsl
pop
mov
mov
ljmp
push
jg
jnp
sub
test
and
mov
daa
or
push
pop
jne
mov
cmp
dec
jl
push
xchg
jg
cmp
mov
jnp
testb
rcrl
jg
and
sub
inc
scas
icebp
or
add
arpl
shld
lret
mov
lock
mov
sbb
cmp
lret
adc
and
andb
cmc
lods
add
mov
insb
xchg
mov
faddp
pop
stc
testl
sbb
xor
jg
pop
cwtl
mov
xor
icebp
repnz
mov
flds
les
addr16
xchg
insl
xchg
push
int
or
mov
push
out
repnz
imul
dec
addr16
dec
xchg
insb
dec
cltd
lods
sbb
pusha
test
adc
or
mov
mov
push
into
shl
dec
push
lods
out
dec
fistps
and
or
mov
xor
insb
jp
cmpsb
mov
xchg
sub
xchg
jno
jns
cmp
andb
hlt
or
mov
fs
fucomi
popl
cmp
out
pop
cmpl
xchg
arpl
stos
xchg
scas
aaa
inc
add
das
fsubl
divl
iret
cmpl
cmpsl
jp
xor
mov
xor
out
jle
inc
ret
dec
cltd
jne
mov
mov
into
cwtl
xchg
das
push
push
lock
cmp
mov
lahf
mov
leave
loope
cmp
push
jmp
dec
jle
pop
sahf
popa
jns
mov
jge
dec
push
mov
cmpsl
fistl
popf
test
outsb
mov
in
pop
mov
and
roll
xor
insb
mov
int
in
and
pop
xor
addl
mov
sbb
or
mov
push
mov
in
jecxz
insl
jbe
loop
call
loop
sub
and
mov
inc
fimull
insb
fldl
mov
and
mov
icebp
aaa
nop
mov
and
and
fists
or
jl
mov
jg
test
or
ja
adc
aam
add
icebp
xor
cs
sub
jmp
fldcw
mov
imul
sbb
cmpsb
and
lret
roll
and
addr16
cmp
sub
insb
xor
xchg
imul
fildll
mov
mov
or
mov
push
mov
mov
mov
movsl
jle
test
inc
out
mov
mov
add
imul
and
mov
xor
mov
sub
adc
mov
lock
fstpl
pop
mov
pushf
out
mov
jns
fdivs
in
into
sub
push
inc
sbb
loop
pop
sub
jle
mov
inc
inc
jmp
sub
inc
xchg
imul
sbb
xor
xchg
xchg
mov
cmpl
inc
xor
pop
ret
mov
jl
add
dec
xor
sbb
mov
shrl
mov
shll
mov
pop
push
xchg
jo
jg,pt
call
xorb
cli
pop
aad
into
in
shrb
jnp
loopne
add
cmpb
push
into
sbb
and
idivb
fs
mov
or
mov
imul
mov
adc
jo
mov
pop
add
lahf
lods
pop
and
sbb
fisubrs
out
aad
ljmp
or
adc
inc
psadbw
add
cwtl
iret
insb
mov
inc
test
adc
xchg
cmp
inc
out
out
ret
and
scas
cmp
outsb
out
xlat
jmp
push
out
or
aaa
jae
xlat
std
or
nop
add
xor
int
popa
mov
add
pop
sbb
in
inc
pop
push
out
loopne
cmp
addr16
mov
xchg
xchg
lds
xor
cltd
hlt
inc
mov
xor
repnz
push
stc
repz
pop
dec
dec
aas
popf
arpl
dec
std
les
dec
inc
outsb
fbld
stc
stos
jmp
sbb
pop
insl
pop
mov
add
in
shl
push
sbb
sub
sbb
pop
fisubs
lods
add
loop
jecxz
loop
aad
dec
movsb
and
and
cmp
jg,pn
inc
xor
jmp
outsb
dec
cmc
lret
insb
aam
inc
rol
mov
push
sub
sbb
test
jb
push
cwtl
mov
xlat
or
jnp
pop
aas
inc
pop
andl
bound
pop
mov
inc
xor
pop
push
in
hlt
lcall
jae
repz
xorb
pop
rorb
cmp
push
mov
xchg
lods
sbb
ret
xchg
xchg
push
lahf
jnp,pn
push
add
insb
inc
push
fidivs
or
adc
or
sub
jp
lock
test
mov
in
cmp
lods
pop
sete
dec
xor
pop
push
repnz
aas
jl
mov
in
and
cli
mov
test
insb
sti
xchg
hlt
inc
inc
adc
jne
enter
jl
mov
mov
cmp
sub
or
mov
pop
orb
jmp
ja
adc
push
adc
rorb
idivb
fsubl
sub
push
jnp
dec
dec
sti
xchg
mov
je
outsb
xchg
leave
mov
popa
dec
mov
insl
lret
cmp
mov
aaa
out
adc
cmp
and
cltd
fnstenv
dec
xorl
ljmp
push
das
daa
ja
add
dec
xchg
daa
aam
jae
stos
pop
push
addr16
and
sbb
push
inc
adc
xchg
mov
scas
lret
movsl
leave
cwtl
cmpsb
leave
xlat
fcompl
pop
dec
aam
jle
push
cld
add
mov
ror
xor
dec
ret
mov
mov
mov
xchg
mov
or
cwtl
ljmp
sahf
xchg
pop
aas
cs
and
in
adc
js
nop
das
xor
adcl
adc
push
add
dec
mov
stos
or
sbb
cmpsb
fstl
clc
xchg
jecxz
cmpsl
aas
push
jmp
inc
sbb
push
fists
test
pop
xchg
test
aad
aaa
inc
lea
fcmove
push
test
sub
jecxz
mov
les
incl
adc
idivl
mov
hlt
mov
xchg
scas
cld
mulb
hlt
mov
xor
pop
addr16
sbb
add
adc
jnp
dec
gs
mov
repnz
pushw
test
and
insb
popa
xorb
and
clc
cmp
push
sub
loop
push
mov
je
pop
sub
addr16
add
mov
mov
cmp
repnz
cld
inc
xchg
push
pushl
adc
and
push
mov
push
data16
test
mov
pop
or
daa
test
fucom
mov
push
jbe
cmp
jge
test
and
in
and
jecxz
insl
and
test
popf
jle
mov
sbb
stos
push
shll
int
jnp
and
aad
pop
popa
sti
xchg
push
mov
push
mov
mov
jnp
flds
cmc
nop
inc
and
adc
daa
gs
lds
jns
adc
jae
imul
data16
mov
inc
xchg
mov
push
ds
xchg
sbb
adc
mov
flds
ror
fucomp
mov
es
mov
mov
add
cli
es
loope
sub
gs
test
push
cmpsl
adc
pop
push
gs
push
xor
xchg
std
push
nop
inc
adc
aad
and
dec
comiss
repz
sbb
mov
ret
loop
cmp
adc
hlt
pop
fimuls
xchg
outsb
or
cli
ret
push
div
jle
dec
mov
mov
les
bound
or
xchg
daa
in
push
push
push
in
mov
subl
shl
dec
pop
mov
mov
jo
adc
into
push
test
fwait
jle
icebp
sbb
movsb
sarb
mov
jne
push
cmc
dec
aam
clc
test
lahf
or
push
fcoms
jno
cld
loopne
ret
mov
mov
jmp
adc
fistpl
add
ret
jmp
ja
or
mov
cmp
lods
loope
inc
xor
mov
lock
adc
bound
sti
movsb
or
mov
lods
scas
inc
pop
mov
bound
subb
pop
mov
shlb
xor
xchg
js
adc
adc
fsubp
les
mov
jecxz
andb
gs
xchg
popa
adc
lock
jne
fwait
shrb
ds
iret
inc
xchg
enter
subl
test
push
push
cmc
sub
or
and
jne
imul
dec
add
scas
push
imul
xchg
sbb
jge
and
inc
push
lea
mov
mov
sub
call
repz
repz
dec
movl
inc
mov
sarl
cmpsl
sbbb
cld
dec
clc
and
aam
pop
cmpsl
popf
push
shlb
mov
fcomip
inc
aad
pop
dec
repz
mov
out
xor
fwait
jecxz
into
pusha
sbbl
cld
sub
or
and
ret
jle
idiv
arpl
jmp
shlb
loopne
shl
repz
pop
call
push
shrl
das
pop
les
pop
xor
sbb
test
or
sbb
clc
xchg
movsl
outsl
imul
dec
loopne
cmpsb
fsubrs
movsb
add
sub
cbtw
lcall
cld
jmp
fistl
jbe
out
jge
decl
push
out
fcmovbe
repnz
pop
sbb
sbb
jne
xchg
dec
or
xlat
push
insl
je
scas
push
das
mov
int
dec
mov
imul
inc
xor
pop
daa
mov
fwait
lret
push
xchg
pop
mov
jp
fdivs
mov
inc
incb
outsb
jnp
sbb
lcall
icebp
es
mov
in
xchg
or
cmp
mov
add
push
jle
sbb
pusha
pop
jo
jns
repnz
adc
stc
jae
and
int3
lret
jmp
xchg
jns
data16
fcomps
mov
leave
xor
push
ffree
mov
fmuls
addl
enter
jmp
cmp
aam
insl
scas
lret
out
jg
test
cmp
dec
push
repz
pop
push
cmc
mov
xchg
rclb
repz
adc
push
or
orl
sub
jo
or
jge
lahf
jnp
mov
lds
fld
lock
xchg
leave
or
fbstp
fs
or
repz
and
insl
cmpl
je
adc
add
daa
jle
push
sar
push
dec
inc
and
sbb
scas
or
jle
ret
fimuls
xor
cmpl
inc
mov
xchg
mov
fwait
push
das
pop
sti
cwtl
cmp
jo
nop
je
push
loope
out
inc
aas
jmp
loope
neg
outsl
imul
arpl
out
cmp
lret
lahf
xchg
xchg
pmulhuw
add
les
sub
cltd
jb
xchg
jl
js
fsubs
cmp
lea
inc
sbb
xchg
and
pop
xor
int3
pusha
inc
cmpsl
add
pop
or
push
mov
adc
dec
push
sbb
sub
nop
inc
fs
xor
arpl
and
cmp
test
adc
dec
subb
iret
mov
cwtl
mov
lret
test
outsl
xchg
fcomp
iret
addb
jle
push
in
les
out
cmpl
sbbl
mov
and
adc
leave
dec
sbb
and
mov
adc
rcrb
mov
stos
loope
ret
and
xchg
ds
add
push
dec
ljmp
jmp
shlb
or
lea
fxch
popa
sub
sbb
sbb
inc
out
mov
imul
or
divb
loope
sub
sbb
insb
lods
jmp
shr
add
std
cmp
test
mov
mov
push
movl
xchg
mov
ljmp
clc
sub
mov
std
pop
negl
aad
jbe
ss
pop
test
fdiv
les
ret
and
add
in
addr16
pop
cmp
inc
pushf
shl
push
lds
and
enter
out
and
inc
cmp
sbb
mov
xchg
in
mov
out
stc
mov
push
xor
push
incb
cld
gs
add
test
push
sbb
outsl
mov
and
jmp
xor
sti
and
sbb
out
dec
imul
dec
iret
push
mov
xchg
stos
jns
cmp
inc
aas
mov
or
push
scas
sbb
mov
xchg
jl
xor
jle
repz
cmpsl
mov
jne
imul
stos
mov
ret
fcomip
fwait
lcall
gs
lret
dec
add
mov
out
inc
and
push
mov
aad
push
fwait
sub
cmp
aaa
mov
ja
inc
ror
sub
mov
fbstp
enter
xchg
mov
cmpl
dec
sbb
fcmovnb
jno
and
lret
sub
aas
lods
fdivrp
mov
mov
enter
lret
cmc
rcrb
mov
arpl
mov
outsl
mov
imul
inc
in
std
testl
mov
imul
ds
lahf
xchg
xchg
cs
jnp
clc
sbb
in
loope
jp
xorb
aam
scas
decl
and
jl
outsl
loope
mov
andb
xor
push
xchg
xchg
je
sbb
or
stos
in
out
mov
xchg
adc
call
dec
jmp
jg
gs
cmp
inc
clc
mov
les
cmp
and
aaa
pop
popa
stos
mov
jl
push
cwtl
xlat
ja
jnp
out
imul
jl
inc
jb
adc
fistpll
test
adc
cmp
sbbb
mov
test
sub
leave
in
xchg
and
into
jmp
xchg
addr16
mov
xor
hlt
and
cmp
fstps
adc
hlt
jecxz
out
mov
push
inc
dec
rclb
cwtl
cli
out
cs
mov
int3
xor
push
push
jp
ja
pop
and
nop
adc
dec
mov
fsubr
or
or
in
jge
inc
push
inc
adc
jb
xorl
cwtl
mov
popa
adc
rorl
lock
xchg
mov
popf
repz
xchg
fsubrl
xchg
inc
ja
fs
sub
aam
pop
pop
fucom
rcl
out
sbb
int
add
jmp
popa
push
dec
sub
and
mov
or
sbb
inc
shlb
pop
lods
mov
notb
jmp
cmp
inc
adc
popa
adc
add
jno
stos
js
divl
adc
and
scas
push
push
cmp
and
lret
imul
movsl
test
sbb
sbb
cmp
pop
mov
in
push
push
dec
mov
testl
cld
inc
data16
movsb
idiv
data16
cmp
pop
or
xchg
shll
ja
push
rcr
dec
jb
icebp
dec
fstpl
mov
mov
dec
lcall
sbb
lods
xor
or
lret
jl
lret
popa
imul
or
aad
mov
add
arpl
rcll
adc
cmp
in
mov
or
movsl
mov
sub
call
in
das
fnstsw
les
lock
or
pop
arpl
out
das
jae
xor
clc
cmp
cmp
aad
mov
dec
dec
lods
sbb
push
jo
jl
mov
dec
fs
push
push
mov
push
scas
in
mov
and
pop
loope
fdivrs
mov
pop
mov
jge
cmp
ja
lods
cltd
sbb
adc
hlt
push
test
cmpsb
movsb
mov
xchg
jb
xlat
sbb
pop
adc
test
call
iret
imul
xor
shlb
mov
lock
and
mul
cwtl
xchg
repz
inc
xchg
fcomip
mov
cmp
in
sbb
mov
cs
out
incb
inc
cmp
lea
testl
cwtl
mov
test
xlat
sbb
jo
inc
xlat
test
inc
cwtl
lods
sti
add
imulb
and
xor
rcrb
mulb
jmp
lcall
xor
and
push
aaa
and
cmc
bound
dec
mov
pop
push
and
into
aas
lret
jge
iret
cltd
int3
xlat
mov
xchg
in
sahf
mov
mov
in
mov
lcall
mov
repz
gs
jmp
rcrb
inc
fbstp
dec
mov
sub
mov
aad
or
sub
xchg
xor
dec
inc
xor
mov
pop
mov
test
mov
movl
inc
xchg
pusha
xor
lret
sub
sbb
pusha
hlt
mov
scas
pop
push
and
call
mov
mov
fsub
stc
mov
inc
push
into
imul
cvttps2pi
mov
sub
rol
sbb
inc
xchg
sbb
jecxz
outsl
hlt
mov
mov
outsb
ljmp
xchg
imul
in
das
dec
insl
and
push
fsubrs
cwtl
out
rolb
xchg
aaa
arpl
test
das
sbb
jge
push
out
mov
jmp
jg
mov
pop
push
and
cs
iret
xor
fcomp
jb
push
loop
push
jg
pop
insl
xchg
xchg
sbb
xor
cmp
inc
scas
jg
inc
push
or
push
daa
xchg
test
lahf
and
add
out
xor
popf
repnz
and
cmp
out
dec
push
mov
popa
push
mov
cld
mov
dec
xchg
and
insl
and
mov
push
stos
out
lea
call
dec
push
mov
ss
scas
sub
add
daa
lret
cmp
adc
test
jecxz
or
cltd
pop
xchg
and
xor
pop
movsl
mov
inc
push
cwtl
loopne
mov
xchg
fwait
and
pop
dec
lahf
mov
test
lret
ss
jg
int
sub
gs
popa
xlat
lock
sub
cmp
scas
and
adc
mov
mov
loop
cmp
les
and
nop
aaa
enter
int3
sbb
cmp
ret
xor
pop
mov
std
adc
gs
sub
clc
out
or
jle
mov
loop
or
inc
popa
pop
mov
ret
xchg
jo
movhps
ds
pop
mov
inc
add
mov
cmp
xchg
shll
out
jl
cmp
sbb
sub
fwait
jno
pusha
stos
iret
rorb
jg
add
mov
pop
mov
mov
aad
cwtl
fdiv
jbe
daa
mov
jle
jnp
mov
sbb
inc
and
shrl
xorb
mov
mov
out
dec
repz
sbb
sarl
imul
add
in
xchg
mov
cmp
lods
xchg
cld
movl
enter
outsl
out
push
cwtl
out
or
mov
mov
mov
sti
int3
pushf
int
fidivs
cld
js
js
icebp
or
inc
shlb
cmp
stos
repnz
bound
xor
sahf
mov
inc
test
adc
sbb
inc
jl
jl
xchg
arpl
fwait
out
xor
movsl
sbb
and
add
adc
jnp
cltd
cmp
in
pop
push
cmpsl
pop
pop
inc
dec
pop
cli
push
mov
xchg
mov
in
mov
out
std
lods
dec
push
fisubrs
pushl
dec
test
insb
fwait
shll
int3
mov
mov
mov
addb
xor
push
jle
push
jg
jp
mov
jl
movb
sub
dec
jno
in
sub
inc
aaa
xchg
testb
fidivrs
gs
fidivrs
ret
lret
popa
popa
xor
das
sub
xchg
jg
jno
adc
dec
stos
lcall
js
js
jle
ret
loopne
jns
mov
test
push
pop
sub
xor
pop
inc
repz
jmp
icebp
and
adc
in
das
push
fnstsw
jge
pop
dec
scas
lahf
in
aam
clc
bound
cltd
push
imul
fisubs
ret
ret
and
push
cmp
cld
subl
ss
in
arpl
data16
dec
fildll
leave
loope
xchg
mov
sub
push
sub
ja
xchg
mov
or
icebp
add
or
dec
popa
adc
jge
or
mov
das
sbb
ficoms
ret
in
aam
lock
ficompl
call
fcoml
lea
xchg
or
sbb
das
lock
xor
xchg
inc
jo
nop
dec
sub
mull
pop
fs
iret
or
xor
lods
mov
daa
xchg
addr16
jbe
xorb
in
lcall
dec
stc
cmp
pop
fincstp
xor
call
addl
cmp
push
cmpsl
cltd
add
jae
sub
test
dec
sti
sbb
frstor
fldl
dec
iret
push
inc
push
jle
mov
mov
aam
sahf
or
ds
leave
jmp
mov
push
incl
mov
out
jmp
aam
outsl
push
push
sti
pop
cmp
shrl
push
jg
xor
mov
pop
js
ret
popa
outsb
jb
push
aaa
out
and
dec
je
xchg
mov
movsl
or
dec
mov
addl
inc
shl
mov
mov
or
ret
push
ss
fdiv
add
pushf
inc
scas
out
call
mov
loope
cmc
notb
push
sbb
xchg
xchg
xlat
dec
cmpb
mov
mov
inc
jb
sbb
fwait
lahf
std
sub
cmc
outsl
test
cmp
jno
pop
stos
ja
jne
shll
pop
xchg
adc
jg
mov
insl
lret
and
and
js
mov
mov
jl
dec
insl
push
sbb
int3
lcall
sub
aas
jns
icebp
xchg
sub
push
cmp
push
mov
lods
cltd
repnz
outsb
loope
js
mov
push
cs
mov
sahf
xchg
fmulp
call
fldl
dec
test
sarb
xchg
aas
fistpl
mov
stos
inc
push
clc
jno
test
es
inc
inc
loop
lret
dec
test
pop
cld
adc
rep
sub
add
decb
mov
push
outsl
test
dec
sub
sub
inc
mov
sbb
xor
jo
int3
and
stos
fld
idiv
adc
mov
mov
pop
out
dec
je
outsl
stos
or
sub
mov
cmpsl
mov
movb
cmp
and
test
call
cmp
push
adc
pop
lods
mov
int3
xor
xlat
add
inc
push
cmc
enter
push
dec
jo
scas
xor
sbb
jae
subl
movsb
cmp
mov
push
push
popf
jl
pop
jp
adc
sub
lds
sub
xchg
push
pop
cltd
mov
je
fldl
dec
or
sub
dec
in
push
mov
pop
or
pop
into
push
mov
xchg
insb
lods
pop
pop
aas
push
mov
bound
mov
std
cmp
push
in
xor
repnz
loope
fld
xor
out
idivl
cmpsb
rcrl
subl
sti
xchg
movsb
push
pop
mov
imul
cmp
add
fbld
xchg
sahf
adc
adc
xchg
cmp
ds
xchg
or
rcrb
popf
imul
sub
or
es
pop
jns
lcall
stos
and
int3
add
jmp
push
andl
gs
inc
jb
jp
mulb
fcoms
into
xlat
and
lahf
nop
scas
rolb
sahf
pushf
sub
mov
pusha
sub
flds
or
dec
pop
push
insb
push
out
inc
lea
jge,pt
mov
rcll
mov
adc
push
pop
cmp
stos
pop
push
cld
test
in
add
shlb
sbb
jmp
or
mov
and
movl
incl
cmpsb
lods
xor
cmp
and
or
adc
adc
scas
ss
mov
mov
pop
insl
scas
jns
cs
adcl
mov
cmp
jg
and
aad
push
cmp
jo
cwtl
push
mov
mov
pop
addr16
mov
rcr
cmpsl
pusha
fs
loopne
pop
fst
push
xchg
dec
fcompl
pop
hlt
movsl
mov
sub
or
sbb
mov
mov
mov
push
ret
neg
in
addl
insb
std
in
insb
jecxz
scas
stos
dec
xchg
inc
dec
mov
mov
cmp
outsl
and
aad
lret
pop
push
shrl
adc
and
push
shl
add
ds
xchg
lcall
jg
call
in
push
xchg
pop
dec
sub
sub
pop
xchg
fmulp
sahf
stos
or
das
mov
or
aad
pop
mov
fs
xchg
cs
shr
mov
sub
xor
enter
xor
adc
cmp
inc
mov
sbb
icebp
arpl
fisubrl
sbb
faddp
imul
adc
pop
sbb
push
sub
stc
jo
stc
pop
cmpsb
mov
les
push
adc
ret
inc
add
stos
sub
jle
dec
loop
rcrl
pop
xorl
outsl
lods
pop
and
sahf
cmp
mov
outsl
cmp
pop
cli
push
cmpsl
xchg
add
es
movsl
rcll
mov
mov
mov
push
push
data16
inc
sar
mov
cmpsl
push
pushf
push
inc
insb
mov
jp
push
pop
clc
add
icebp
loop
insl
filds
mov
stos
js
cmp
dec
mov
and
jle
cli
cmc
cmp
movsb
stos
xchg
jmp
repnz
sub
push
cmc
int3
cwtl
and
subb
les
mov
sbb
xchg
xor
icebp
gs
mulb
rcrl
movsb
xchg
adc
mov
arpl
xchg
out
outsl
pop
enter
push
ficoml
lock
sbb
ja
cs
in
or
add
dec
adc
pop
popa
sbb
jg
shld
pop
inc
mov
loop
rolb
lods
jp
sbb
xor
loop
mov
loope
adc
lcall
inc
sbb
shll
js
mov
dec
and
sbbl
pop
mov
lods
outsl
stos
push
movsl
mov
add
inc
pop
push
pushaw
sahf
mov
je
bnd
and
push
cmp
add
and
in
popf
cli
inc
mov
mov
jno
push
ret
int
adc
adc
adc
dec
fldt
fisttpll
push
addr16
sbb
insl
jg
lods
xor
leave
testb
js
repnz
pop
stc
scas
shll
pop
jl
into
fwait
push
fsubs
leave
jae
rclb
add
aam
cmp
stos
gs
and
mov
pusha
or
xchg
jns
xlat
mov
aas
out
pop
movsb
or
sbb
sbb
mov
pop
sub
scas
xchg
jo
xor
and
fxch
add
cwtl
dec
lcall
outsl
jo
push
xchg
cmc
adc
insl
mov
xchg
and
lret
and
aad
sahf
jne
push
inc
test
repnz
iret
shll
ss
dec
frstor
outsl
or
mov
jno
out
in
ret
test
xchg
imul
push
fninit
mov
cld
adc
fsubr
mov
push
xor
or
xlat
cmp
jne
jae
mov
jae
sti
or
out
cmp
fstps
cwtl
cmp
jge
testl
fidivrs
sbb
cs
push
add
push
loope
push
into
bound
cwtl
lcall
push
in
outsl
inc
add
pop
lea
pop
aaa
xor
call
pushf
dec
dec
test
push
fxch
js
xchg
int
sbb
popf
sub
das
push
popa
enter
dec
mov
sub
mov
add
sub
ret
scas
sbb
or
fucomi
jmp
jmp
xor
dec
add
sbb
movsb
faddl
dec
pushf
jge
inc
lahf
jmp
cltd
lods
rclb
pop
adc
insb
clc
add
add
mov
xchg
fildl
lods
stos
mov
xchg
cwtl
and
andb
enter
popf
jecxz
jecxz
outsl
cmpsl
fiadds
mov
push
adc
pop
jne,pt
fmul
pop
pop
push
mov
mov
adc
ljmp
out
in
adc
mov
jno
add
stos
xor
jns
test
xchg
ficompl
cmp
cmpsb
mov
inc
dec
out
mov
hlt
cmpsb
pusha
dec
cwtl
int3
mov
lock
pop
push
push
imul
clc
out
push
ret
sbb
es
inc
popf
popa
and
in
inc
push
outsl
jecxz
dec
adc
add
push
sub
pop
dec
xor
pop
xchg
push
mov
outsb
inc
loopne
lahf
sbb
dec
or
cmc
aad
inc
add
mov
add
sbb
iret
je
outsl
jmp
shrl
testl
ror
rcll
xchg
cmp
and
cmp
ds
idiv
out
pop
inc
and
jmp
cli
jmp
or
stc
icebp
sbb
scas
imul
mov
dec
pop
add
je
call
jmp
cmpsb
test
cmp
sbb
dec
aam
repz
xor
icebp
das
test
rcrl
cmp
mov
and
xchg
and
in
loopne
or
les
add
fadds
mov
cmp
push
in
aam
pushf
mov
and
push
leave
inc
cmpsb
xor
std
mov
jp
repnz
sbb
sub
jmp
inc
popa
xor
jge
repnz
stos
jb
jb
or
xor
into
aam
cs
lock
inc
cmp
sbb
test
inc
fcomi
out
add
pop
mov
das
cltd
negb
pop
push
mov
push
or
add
sbb
and
xchg
add
fsts
stos
into
dec
ja
sbb
fistps
repnz
push
hlt
adc
mov
cmp
or
lahf
rcl
xor
in
hlt
lods
xor
and
xchg
cmpsl
sbb
sub
pop
jge
cmp
sbb
jno
pop
jae
xor
sbb
mov
push
add
gs
mov
orl
movsl
rcll
jl
mov
fxam
push
cmpsb
into
pop
pop
xchg
out
lock
xchg
inc
fwait
xor
sahf
dec
jle
fldl
iret
stos
sbb
pop
jl
outsb
sbb
lcall
mov
cld
lods
test
and
clc
fldenv
mov
dec
dec
or
dec
push
mov
cmp
lods
inc
push
adc
adc
inc
cli
cmp
add
in
add
fs
cmp
in
add
or
int3
cmp
mov
mov
cmpsb
cmp
int3
lock
sbbb
dec
aaa
sub
mov
cmpsb
test
add
xchg
add
into
adc
add
xlat
das
jnp
imul
stos
adc
hlt
cmp
notl
test
cs
inc
cmp
jbe
std
out
mov
lret
xchg
scas
loop
adc
and
pop
inc
mov
dec
fs
js
adc
js
mov
sarb
push
imul
mov
mov
xchg
ljmp
push
int3
mov
int
or
inc
pop
and
add
fwait
xchg
mov
inc
mov
jp
adc
icebp
repnz
cmp
add
push
mov
repnz
push
cmp
jmp
dec
and
out
xlat
mov
mov
jo
sbb
enter
sub
and
push
rol
add
dec
sub
push
jle
int3
out
mov
inc
sbb
adc
ljmp
shl
inc
inc
mov
sbb
cs
cli
imul
mov
mov
sub
push
test
mov
adc
icebp
xchg
fwait
out
pop
xchg
pop
in
push
push
jnp
pop
sti
aaa
aas
xor
punpckhwd
mov
dec
pop
mov
jae
clc
rcll
enter
cmp
mov
shll
ljmp
es
sti
std
loopne
jg
popf
pusha
cmp
mov
mov
lods
sahf
cmp
xor
xchg
int
cvtdq2ps
dec
jge
mov
jecxz
outsl
xor
pusha
mov
mov
mov
jns
jno
gs
or
loop
sub
ffreep
ja
mov
out
aad
inc
test
addr16
call
loop
jl
js
xchg
pop
int3
mov
andl
nop
adc
mov
sub
pop
test
loopne
sub
mov
xor
popf
or
fcoml
push
pop
cmp
lea
push
mov
or
ret
dec
jmp
movsl
pop
mov
cwtl
addb
sub
in
aam
inc
pop
push
or
ret
xor
or
aaa
jbe
dec
int
mov
push
push
xlat
adc
sbb
test
sub
fwait
ds
mov
into
sbb
js
sub
pop
and
sar
lcall
and
insl
fiaddl
gs
cmp
test
popf
xchg
int3
insb
sub
ret
jmp
xchg
gs
fisubrs
jno
cmp
aaa
and
test
es
pushf
xchg
dec
sub
dec
cmp
lret
sub
and
sub
pushf
ret
loopne
sub
inc
mov
mov
push
fisubrs
test
mov
xor
sub
loopne
inc
and
fmulp
in
sbb
pop
sbb
andl
cltd
jo
fwait
xchg
dec
aam
fcomp
ljmp
cmp
lods
adc
imul
mov
or
jle
xchg
mov
jae
adc
in
mov
dec
or
dec
lods
fidivs
sbb
int3
adc
outsl
jg
mov
stos
mov
ja
cmpsl
aad
push
out
mov
imul
adc
test
sub
mov
add
jl
cmp
test
jmp
loope
negl
mov
mov
sbb
adcl
notb
pop
xchg
ss
sbb
push
dec
fcoml
pop
pop
into
push
mov
push
dec
in
sbb
ss
out
mov
jnp
or
inc
adc
aas
aas
pop
les
ret
jle
movsb
add
aas
insb
das
dec
int
add
je
inc
aam
in
mov
scas
inc
into
mov
outsb
push
xchg
add
aad
call
add
add
arpl
push
cs
push
out
push
jge
call
cmp
test
pop
mov
xor
out
push
fs
test
cld
sti
add
cmp
mov
ljmp
fistpll
and
sbb
dec
cs
mov
insl
clc
aaa
iret
inc
ds
lds
adc
mov
imul
cs
movsl
sbb
rclb
ficoms
pop
out
imul
cmp
dec
in
push
mov
jle
je
xchg
jno
inc
jge
or
loopne
mov
ds
cli
int3
orb
xor
jl
push
in
push
out
inc
clc
add
dec
dec
stos
cmp
lcall
insl
or
into
adc
add
mov
jle
push
push
inc
in
in
data16
rclb
inc
mov
xlat
add
jecxz
bound
xor
mov
pop
lret
pop
jno
divb
sbb
fidivrs
pop
mov
in
out
ja
and
and
daa
adc
std
ror
sub
out
inc
jns
sub
out
jmp
pop
mov
ss
jno
lock
fmul
pop
jmp
adc
jne
lods
icebp
dec
aam
imul
fisubl
jmp
jp
mov
out
add
mov
and
pop
push
pop
push
iret
adc
mov
popf
xor
popf
pop
fdiv
sbb
or
lea
sub
mov
or
cltd
adc
jmp
clc
lahf
jl
jae
pushf
mov
je
xor
xor
cli
add
and
push
test
dec
leave
call
hlt
data16
mov
lock
push
out
shrb
fcmovnu
fs
fcompl
pop
pop
pop
jmp
gs
flds
xor
jmp
xor
hlt
dec
je
add
out
dec
imul
daa
or
cmpsl
popa
mov
aad
movl
leave
jmp
dec
icebp
push
xor
clc
cmovb
xor
adc
push
push
pop
repz
inc
les
cld
and
insl
mov
mov
or
sbb
xchg
push
sbb
inc
dec
push
jecxz
dec
jo
in
xor
sbb
ljmp
lcall
jmp
mov
cmp
mov
leave
into
in
jp
pop
mov
mov
add
fiadds
xchg
pop
int
lcall
adc
fists
inc
xor
xchg
bound
xchg
push
jg
aad
out
jne
push
pop
aas
insl
jnp
mov
inc
sub
xchg
out
lock
ss
mov
mov
test
and
mov
jg
repnz
idivl
adc
cmp
pop
xchg
aas
mov
xchg
jns
pop
int3
and
cmp
mov
sub
int
mov
mov
adc
or
shll
popf
in
add
push
push
rcrl
add
dec
mov
dec
xchg
imul
pop
mov
xchg
pop
pop
jnp
sub
fisubs
xchg
sub
push
or
ds
jecxz
orb
repz
add
enter
dec
repnz
dec
cmp
imul
int
bound
mov
or
dec
cmp
jl
push
mov
mov
nop
xchg
lea
in
popf
fcoml
data16
stos
aas
pop
js
in
pop
fs
cmp
aam
test
adc
push
jmp
iret
pop
push
aad
dec
cmpsb
xor
stc
stos
mov
xchg
adc
push
test
sub
mov
xchg
fidivrl
push
xchg
sub
xchg
sub
mov
loopne
lock
mov
mov
pusha
jp
in
jecxz
fldcw
pop
cmp
xor
fnstcw
xor
shll
xchg
aad
jno
jge
add
in
icebp
mov
dec
cmp
jle
and
dec
jno
or
cs
adc
jge
fdivrs
cwtl
repz
or
cld
scas
dec
lea
or
mov
repz
mov
and
das
jns
xor
sti
test
mov
lcall
and
dec
mov
hlt
mov
in
out
imul
adc
push
bound
jae
repnz
cmp
testl
jl
aad
push
pop
xor
movsb
mov
fistpl
jecxz
mov
iret
mov
xor
cli
inc
adc
fldt
std
sti
mov
out
mov
sub
lock
in
mov
cmpsb
adc
loop
test
cmp
sbb
inc
popf
pop
push
scas
cld
push
mov
adc
lcall
ret
data16
xor
xchg
sub
out
hlt
jle
pop
xchg
movsb
data16
repz
outsw
lcall
fimuls
scas
lret
jg
rorl
rcrb
sbb
out
lock
mov
sbb
sub
fisttps
fldl
xchg
and
xor
les
mov
push
mov
xchg
push
call
lds
pop
lods
dec
mov
out
int3
push
mov
mov
in
adc
xor
test
xchg
aas
push
mov
sahf
negl
inc
xor
idiv
enter
jns
mov
add
aaa
or
xchg
or
pop
mov
daa
sub
pop
ret
fidivrs
or
stc
mov
pusha
cmpw
ljmp
push
ds
mov
adc
mov
scas
movb
sbb
in
jge
push
mov
cmc
pop
enter
mov
clc
xchg
mov
sti
add
jns
or
cwtl
imul
sahf
dec
aad
cltd
mov
into
lea
repz
out
pop
add
test
scas
push
push
test
loop
lea
cmp
jle
pop
arpl
lahf
add
xor
movlps
sbb
jo
sbb
cmp
push
clc
mov
sbb
jb
xchg
test
and
popa
dec
out
popf
xchg
or
je
leave
mov
push
push
pop
inc
test
mov
in
fsts
mov
stc
xchg
lods
cmpsl
cmp
xchg
jne
sub
mov
lods
jne
jo
xchg
add
xchg
stos
cmp
lret
daa
stos
imul
lcall
jo
mov
sub
femms
push
loopne
xor
xchg
aad
dec
cmc
mov
pop
iret
dec
jnp
add
sbb
mov
lock
ja
iret
add
mov
ret
and
jmp
test
cmp
mov
mov
mov
mov
sub
push
inc
add
push
stc
les
into
sbb
enter
push
jne
leave
push
pusha
js
pop
imul
push
scas
xlat
scas
inc
cmp
xchg
mov
xchg
mov
pop
js
test
cmp
into
jecxz
out
outsl
push
or
insl
ljmp
pusha
into
and
lahf
call
aad
and
pop
xchg
fidivrl
sarl
dec
adc
into
adc
in
mov
mov
push
or
fwait
push
or
movsl
pusha
jmp
lods
mov
iret
lret
sbb
inc
fdivrl
jl
stos
stc
dec
inc
cwtl
jo
cmp
and
cmp
cmpsl
cmp
adc
dec
add
lahf
push
and
in
mov
cmp
fcoml
inc
cli
outsl
xchg
inc
jle
mov
cmp
and
push
mov
mov
sbb
or
subb
push
movsl
mov
push
mov
sub
sub
dec
adc
gs
jmp
ljmp
xchg
ffreep
xchg
fwait
mov
inc
jl
or
sub
stos
push
adc
pop
fcmovbe
xchg
xor
and
push
pop
mov
sbb
xor
insb
pop
aad
test
roll
sbb
cmpb
xorl
cmpsb
xchg
mov
add
mov
or
mov
jp
jp
daa
enter
cmpsb
sub
cmpb
lock
mov
sahf
addr16
lods
mov
xchg
pop
sbb
jp
and
push
fcomps
cmp
addr16
add
mov
jmp
idivl
push
sub
push
jae
out
aas
scas
xchg
mov
fnstenv
adc
scas
xchg
xchg
sbb
xchg
fidivrl
sbb
push
jnp
cmc
add
pop
dec
inc
sub
jecxz
push
scas
mov
andl
xchg
jns
gs
je
stos
xchg
cmp
sbb
xor
cmp
test
fldenv
fs
add
iret
scas
cmpsl
addl
scas
mulb
negb
loopne
js
mov
fsubrl
andl
test
mov
cmp
mov
mov
xchg
fcomps
jno
arpl
and
add
jg
xor
sbb
sarb
jae
pop
iret
in
mov
pop
lods
outsb
ss
fwait
jae
stos
pop
push
lahf
xor
xor
mov
sbb
daa
or
mov
mov
mov
rcll
cmp
ret
aas
xchg
std
add
mov
pop
movsl
jge
leave
xchg
sti
aas
std
fiaddl
pop
hlt
mov
jp
sub
fnsave
icebp
mov
lret
push
dec
daa
cs
es
rolb
inc
adc
shlb
loop
pop
insb
fdivl
insb
pushf
fildll
push
jmp
mov
pop
movsb
test
add
dec
cli
inc
stc
cmp
mov
loop
cld
call
add
or
and
aas
pop
outsb
insb
std
mov
std
ja
and
imul
dec
xchg
cmpsl
aam
out
int3
sub
adc
lret
mov
call
arpl
mov
and
rolb
loopne
pop
push
lret
adc
xlat
push
ja
xor
rorl
and
xchg
icebp
pop
insb
cmp
jge
push
cmp
lahf
sub
xor
fstps
aas
call
xor
outsl
fildll
mov
adc
test
cmpsl
sub
loop
lods
jno
sbb
jno
leave
data16
xchg
dec
les
xchg
popf
icebp
cmpsb
repnz
test
or
insb
bound
sub
xchg
and
or
in
xchg
inc
ss
push
inc
outsb
sbb
daa
fsts
xchg
loope
and
aam
inc
outsl
ret
xor
fcmovbe
sbb
movsl
je
dec
cmpsb
movsl
jle
in
jo
push
ficoml
sbb
sahf
adc
mov
xchg
mov
add
xchg
imul
ret
mov
bound
aad
cld
cli
push
das
sbb
sbb
out
out
xor
stos
sbb
xchg
cmp
sahf
sbb
mov
subb
gs
fldenv
movsb
repz
cld
out
add
fdivs
and
rcrl
out
xlat
mov
std
pop
repz
test
lret
dec
faddp
sub
cwtl
movsb
lcall
rolb
xor
sub
mov
pusha
sbbl
pop
add
aam
fisttpl
gs
mov
adc
outsl
cmp
movsl
shl
es
sub
and
les
lods
test
push
pop
mov
cwtl
adc
inc
imul
test
int3
cmp
and
and
cld
jo
xor
lcall
inc
pusha
mov
xchg
mov
dec
and
ja
mov
mov
dec
icebp
add
inc
dec
push
fstps
xchg
pop
dec
mov
mov
fcmovb
add
adc
movsl
xchg
ja
js
ljmp
int
rcr
scas
jne
mov
sahf
cmp
adc
icebp
add
jo
mov
loope
push
pushf
stc
repnz
dec
push
dec
mov
jecxz
sub
mov
dec
inc
icebp
negl
adc
imul
lahf
std
sbb
dec
ja
mov
sub
pusha
add
push
sbb
add
pop
inc
cmpsb
adc
fmuls
ss
ret
stc
mov
jl
dec
aad
int
xchg
dec
mov
int3
je
jecxz
mov
std
mov
cmp
push
inc
dec
insl
and
std
xchg
xchg
xchg
sarl
and
aas
sub
dec
loop
imul
fnsave
cmpsb
das
cmp
xor
push
pop
sbb
clc
add
push
es
pop
xor
aaa
popf
pop
dec
pop
aam
xchg
pop
xor
fisttpll
out
mov
mov
leave
rorb
mov
lods
or
jno
std
cmp
shlb
xchg
lods
sbb
sahf
inc
nop
sub
adc
inc
mov
jle
sti
xor
adc
imul
xor
sahf
js
fdivr
and
repnz
out
sub
mov
jge
scas
aad
mov
xorb
movsb
and
pop
mov
stos
mov
les
pop
xchg
jo
arpl
jecxz
cmpsl
xchg
fs
in
iret
imul
imul
pop
push
fucomp
hlt
or
mov
pop
mov
add
sbb
test
lret
out
and
lock
gs
dec
in
imul
montmul
cmpsb
inc
aas
out
sub
rorl
lods
imul
mov
pop
bound
dec
in
dec
inc
iret
dec
pop
mov
lods
test
adcl
push
mov
pop
cmp
scas
aam
add
lods
stos
lods
add
movsl
inc
mov
mov
inc
sub
cmp
pop
inc
enter
pop
stos
mov
in
push
mov
mov
mov
cld
call
add
loope
out
jp
pop
sti
push
fcompl
movsl
pop
bound
outsl
rcll
test
lods
outsb
cmp
gs
xorb
mov
pop
jo
sbbb
xor
or
cmp
jae
mov
add
push
test
adc
jp
jno
jo
les
sub
adcl
xchg
out
xor
enter
mov
clc
dec
icebp
and
stos
dec
xchg
inc
call
call
mov
data16
out
xchg
lock
addr16
loopne
jecxz
inc
es
inc
icebp
jge
fs
std
sub
inc
cli
enter
cmp
les
arpl
es
sbb
inc
sub
jo
stos
jecxz
sti
mov
inc
mov
and
or
imul
scas
jl
cmc
mov
iret
repnz
or
setbe
sub
dec
pop
in
dec
cmp
jne
pop
ljmp
or
fwait
dec
in
enter
lret
dec
jl
xor
cltd
push
hlt
or
fisttps
scas
pop
cli
imul
pop
fs
push
jae
ror
adc
mov
arpl
adc
repz
into
xchg
repz
sbb
push
cmp
adc
aaa
xor
jbe
and
lret
push
ja
pop
xlat
push
gs
and
mov
call
adc
divb
lret
repnz
rcll
ss
sub
rorb
mov
loope
lret
inc
outsb
outsb
das
sbb
lret
pushf
push
out
adc
cmpsl
or
out
test
mov
sub
mov
jae
in
pusha
insl
loope
push
test
or
inc
adc
test
xor
dec
mov
lcall
mov
incb
mov
xchg
cmp
es
in
sbb
sub
inc
les
insb
imul
test
push
sub
cltd
pop
sub
faddp
loop
shrl
cmpsb
fisttpll
les
mov
cwtl
imul
cmc
inc
mov
mov
adc
bound
scas
scas
jnp
cmpsb
push
inc
push
cmp
cmp
cmpsb
mov
jle
mov
xor
mov
xor
mov
mov
add
mov
pop
fcomps
pop
mov
fstl
lds
mov
call
adc
inc
sbb
dec
pusha
xorl
xchg
mov
adc
flds
xor
cli
rclb
adc
or
fisttps
fldt
mov
add
jg
xchg
stc
sar
jg
movsl
pop
aas
rorl
adc
mov
cmpb
xchg
cmc
pop
cmp
inc
sub
inc
jns
sbb
sbb
adc
xchg
popf
adc
or
pop
add
inc
mov
cmpl
roll
out
inc
and
enter
fistl
jge
mov
adc
mov
call
jae
std
jne
mov
mov
pop
ljmp
cmp
xor
cmpl
pop
cwtl
clc
xchg
das
and
jg
repz
sarb
or
outsl
in
mov
ss
sbbb
mov
out
sub
enter
or
push
xor
out
sub
adc
in
sub
and
sbb
das
mov
pushf
add
jnp
notb
jge
fcoms
adc
fdivrs
stos
mov
jne
mov
xlat
ljmp
inc
push
xlat
shl
sbb
aas
xor
add
push
sbb
test
shrl
mov
add
leave
push
push
int3
xchg
sbb
je
xchg
sarl
jmp
mov
loope
fimull
dec
icebp
leave
xor
jo
mov
xor
enter
cltd
push
mov
fsts
popf
rol
mov
push
xchg
cmp
repnz
and
aad
ss
push
mov
push
and
and
or
dec
inc
jnp
movsl
add
movsl
cltd
out
or
ret
popf
adc
jp
mov
rcr
pop
rcrl
das
dec
mov
sbb
cmpsb
push
scas
rcr
mov
fsubrs
out
xacquire
xchg
cmp
out
pushf
movsb
cmp
out
mov
push
stos
outsl
scas
out
ja
dec
and
xchg
movsl
xchg
push
ror
enter
lds
mov
xchg
addr16
std
rcrb
and
jge
aas
push
and
dec
or
popa
add
cwtl
mov
dec
stc
pop
and
cmpsl
xchg
mov
testl
jle
imul
popf
push
das
aaa
mov
aas
lret
pop
int
insb
popa
lea
fldcw
not
inc
cmp
out
or
aas
cmc
daa
cmp
dec
aaa
div
jb
mov
jl
mov
nop
mov
loope
jno
fcoms
add
push
lret
cld
testb
push
inc
fcoml
outsl
rcll
adc
imul
addl
mov
loopne
mov
pop
loope
movsb
mov
sbb
inc
or
sub
or
cmc
mov
cmpsl
lret
inc
push
xchg
push
adc
addr16
and
idiv
and
mov
pop
push
or
popa
adc
pop
or
xchg
and
insl
mulb
hlt
cmc
push
mov
fwait
dec
adcl
ds
push
ficompl
and
push
loope
adc
mov
mov
leave
in
insb
push
cmp
mov
sbb
fidivrs
sub
push
add
sbb
and
pop
outsl
sarl
into
sbbb
mov
ja
faddl
xor
data16
loope
movsl
int
bound
xchg
xchg
loope
jg
push
jl
jmp
subl
shld
cli
mov
notl
mov
mulb
add
fstps
daa
into
lcall
fstpl
seto
out
xor
mov
sub
test
sub
clc
shrl
mov
dec
inc
out
les
ljmp
gs
sub
stc
lods
xor
mov
dec
inc
movntps
lods
dec
ss
repnz
scas
cwtl
xchg
adc
in
pop
cmc
fstps
sbb
enter
mov
shll
cmpsl
imul
and
jge
dec
mov
push
dec
in
pop
and
ret
in
xchg
push
add
jae
loop
xor
adc
push
adc
sarb
sub
jns
push
mov
repnz
inc
std
mov
aad
or
mov
xor
decl
dec
addr16
xor
mov
shlb
movsl
cmc
push
pusha
loop
push
push
pop
aam
dec
lds
call
push
test
mov
dec
xchg
xchg
in
and
sbb
pop
push
repnz
loope
jl
in
jo
icebp
mov
push
mov
loop
mov
pop
push
sbb
pop
inc
std
lret
aad
aaa
shlb
shlb
sub
mov
and
fsub
push
jmp
pop
repnz
jb
lds
mov
xor
nop
mov
addb
jp
std
je
mov
outsb
sbb
mov
dec
test
rcll
xorl
add
outsl
sub
xor
aaa
rorl
movl
loopne
mov
push
sbb
dec
pushf
sbbb
pusha
mov
dec
fmuls
in
fistl
dec
mov
into
ror
inc
not
cli
in
aas
aas
mov
insb
shl
bound
push
out
jne
stc
mov
adc
dec
les
leave
push
sub
out
pop
xchg
or
into
xor
std
or
ljmp
add
fcomip
and
xchg
jne
imulb
sarl
loopne
movsl
popf
sbb
in
shr
jmp
sbb
packsswb
outsl
faddl
jle
lods
mov
mull
fucom
xor
sbb
xchg
and
insb
aas
mov
pushl
cmpsl
pop
movsl
loopne
push
insb
jne
pop
lods
cmp
xchg
fiadds
sbb
adc
cmc
test
mov
mov
jp
jnp
cmp
imul
cmp
rcr
sbb
lock
add
lcall
pusha
jecxz
pop
mov
cmp
add
dec
mov
push
fstps
sbb
jno
add
fistpll
pushf
sub
sbb
int3
xchg
mov
mov
cmp
test
imul
in
inc
loopne
scas
mov
ret
xchg
sbb
xchg
into
pusha
push
mov
notl
mov
add
adc
adc
mov
cmpsl
add
jge
mov
sar
cmc
sbb
jae
loopne
mov
sub
add
push
and
cmp
and
inc
dec
mov
mov
and
iret
pop
icebp
adc
test
mov
push
data16
cmc
and
jle
test
inc
cmp
xor
ljmp
push
in
shlb
pushf
mov
mov
sub
dec
enter
fs
popa
packssdw
outsb
fidivl
adc
sub
xchg
popa
pop
xorl
sbb
push
in
inc
daa
xor
and
xor
outsb
sub
jo
sbbb
call
adc
xor
adc
iret
sub
cmpsb
sub
inc
sbb
mov
mov
icebp
jp
mov
mov
and
stc
xor
stc
mov
push
lcall
hlt
lcall
sub
sub
xor
add
inc
sbb
xor
push
popa
pop
xor
jbe
and
out
leave
mov
add
insl
mov
cmc
insb
jae
push
xchg
lods
push
jecxz
lds
lds
push
add
pop
fcoml
les
sbb
push
add
dec
loope
jae
or
stc
subl
or
aad
mov
mov
in
pop
jb
sbb
arpl
lods
xchg
fsubl
stc
inc
pushl
repnz
push
rol
shrl
lods
pop
pop
into
xchg
mov
ret
divl
shrl
rclb
xor
cmpsl
dec
in
addr16
sub
mov
mov
jns
push
mov
jo
mov
mov
dec
lret
mov
push
aaa
loopnew
xor
dec
lods
push
pop
inc
shlb
jmp
icebp
out
inc
imul
cltd
pop
popf
sbb
in
cmp
pop
testl
jecxz
fsubl
adc
rol
mov
sub
pop
cs
fidivl
mov
js
ss
jge
cmovle
and
rorl
ja
ljmp
mov
outsb
adc
scas
mov
popa
cs
js
push
or
push
cmpsl
xor
popf
xchg
jbe
adc
aad
bound
or
push
fsubr
inc
repz
fsubs
out
dec
mov
out
fsubrs
adc
push
ret
aam
lock
xchg
push
jle
or
mov
adc
je
lea
mov
inc
push
lcall
jp
jle
lods
xchg
sbb
call
sbb
or
mov
xchg
std
jb
sti
decl
pop
mov
out
sbbl
sub
jns
ljmp
dec
into
outsb
mov
stos
push
fdivrs
out
lcall
ljmp
enter
and
add
sarb
movsb
pop
lock
lock
and
mov
or
mov
stc
mov
imul
mov
xchg
jmp
bound
les
cli
dec
fidivrs
mov
divl
push
mov
sub
imul
into
in
push
push
out
push
xchg
out
mov
dec
jne
pushf
dec
adc
sti
mov
cmp
dec
push
sub
cld
push
cs
rorl
sbb
mov
fisttpll
push
es
mov
mov
pop
mov
jge
out
jns
pop
es
xlat
mov
lods
and
xorb
mov
pop
fsubr
mov
ficoms
pop
ljmp
add
lea
notb
mov
cs
rorl
imul
xchg
data16
fisttpl
iret
pop
inc
les
lods
jp
out
test
sahf
mov
addr16
dec
jmp
sub
or
jnp
add
xchg
adc
out
push
mov
iret
and
inc
arpl
sub
jp
cmp
imul
nop
inc
xchg
icebp
pusha
push
jo
and
and
loop
mov
lods
imul
mov
imul
or
cmpb
clc
std
push
or
inc
jmp
sti
adcb
mov
loope
mov
jne
cmp
test
pop
pmaxsw
push
es
lock
jnp
push
or
or
inc
jge
cltd
inc
repnz
out
xchg
mov
xor
test
sub
or
jl
adc
icebp
lods
pop
dec
imul
cmpsl
sbb
mov
jmp
and
push
xchg
jbe
mov
mov
dec
insb
pop
sub
mov
pusha
neg
and
notl
add
movsl
imul
outsl
xor
jp
es
test
out
out
aam
mov
hlt
or
in
lods
inc
idivb
mov
out
ret
out
and
daa
mov
push
jnp
inc
test
and
rcrl
pushf
sub
ss
fsub
clc
je
jl
pmaddwd
and
sbb
jp
sub
imul
clc
in
sub
xchg
cltd
jle
pop
stos
iret
and
pop
jns
data16
iret
int
push
loopne
mov
and
rdtsc
scas
lret
mov
push
mov
cmp
ret
xchg
test
lods
sahf
add
push
xchg
sub
ficompl
inc
scas
inc
xchg
xsaves
xor
das
jecxz
scas
outsb
sbbb
xor
aam
pop
dec
mulb
dec
push
cmp
dec
into
iret
pop
cmpsl
xchg
dec
jns
outsb
test
movhlps
gs
rcrl
add
bound
es
push
cmc
add
mov
cs
into
and
adc
gs
in
rcr
ds
in
adc
incb
lret
ss
mov
dec
mov
or
and
out
jnp
leave
jnp
aad
push
stos
cmp
std
dec
mov
aam
inc
fildl
test
sub
sub
imul
xchg
cmp
ds
cmpsb
mov
pop
cli
pop
add
pop
inc
movl
aad
lock
or
and
pop
loopne
imul
jg
ret
inc
push
jge
cwtl
push
pop
dec
fsubl
mov
xor
shlb
inc
fiadds
sub
or
inc
inc
sub
adc
pop
cmp
xor
enter
in
jno
mov
aad
fs
and
jbe
and
pop
ret
mov
ja
insl
push
lea
ret
movsb
mov
jp
or
add
loop
icebp
loop
xchg
je
divl
xchg
icebp
rcrl
add
dec
jns
jp
in
bound
pop
xchg
subl
adc
adc
dec
stos
dec
out
mov
add
add
out
repnz
mov
xchg
test
movsb
movl
rcl
andl
xlat
xchg
iret
jo
loop
xor
inc
dec
mov
ret
mov
cmp
and
lcall
or
js
es
dec
nop
sub
shlb
call
pop
xor
popf
xchg
mov
shl
mov
imul
testl
insb
adcl
xchg
int3
fcompl
test
loope,pt
sbb
movsb
jmp
fistps
xchg
adc
and
jg
cltd
int3
or
jne
push
lret
loopne
fs
call
mov
bound
adc
mov
or
mov
pusha
repz
mov
ret
int
les
mov
xor
xchg
jne
xchg
shrl
xchg
repz
dec
addr16
in
ret
push
push
sarb
cmp
adc
in
movsl
xchg
sbb
inc
mov
out
cmp
xchg
movsl
push
ret
cmp
dec
lret
xchg
cs
out
xlat
outsb
xor
aam
out
fisubrs
add
pop
bound
int3
sbb
mov
into
rol
xchg
xor
fsubrs
xor
pushf
repnz
xor
adc
xor
xchg
and
push
inc
sbb
in
stc
mov
fisttps
push
into
stos
call
xchg
pop
pop
cmpsb
xchg
ds
loop
jp
xor
pop
test
push
push
xchg
test
daa
fiaddl
xchg
mov
dec
xlat
push
std
fimull
mov
inc
dec
inc
cmp
imull
pop
es
adc
adc
mov
inc
xorl
mov
stos
in
adc
adc
inc
lret
push
dec
lock
call
in
cmp
cmp
and
jg
xchg
cltd
and
cmp
aas
cs
and
fimuls
mov
std
mov
loop
into
out
cld
pop
test
imul
sub
push
xchg
push
xchg
add
cmpl
popf
jl
fisubs
loope
mov
out
xor
loope
clc
adc
xchg
cld
or
inc
out
aad
and
mov
pop
xor
movsl
out
inc
ljmp
fisubs
dec
or
dec
pop
push
imul
xchg
rcrl
pop
xchg
dec
mov
mov
push
in
lret
adc
lret
push
imull
dec
enter
js
aam
lcall
cmp
push
sub
mov
les
repz
insb
fs
in
or
out
bound
addr16
rclb
cmp
or
out
outsb
cmp
or
inc
or
and
adc
fwait
mov
add
dec
das
test
stc
adc
inc
xlat
xor
lock
clc
fmul
lahf
test
lock
jg
adc
rolb
pop
inc
add
sbb
mov
jge
scas
js
pushf
aas
sub
repz
xor
mov
jo
mov
pusha
jp
xlat
je
add
icebp
add
cmp
pop
or
mov
out
pop
jns
and
ljmp
js
leave
cmp
aad
stc
dec
fdiv
test
mov
into
movsl
mov
mov
iret
mov
fcompl
int
nop
cltd
adc
add
jo
aam
jmp
insl
push
sub
adc
mov
in
js
lods
jl
mov
stos
jg
lods
mov
cli
cmpsl
out
sbb
sub
inc
jmp
sub
pop
push
push
cs
cld
sahf
fiadds
iret
jo
les
xor
add
pop
push
popa
sub
add
cmp
inc
inc
cmp
inc
push
insb
sbb
fcmovne
dec
dec
xor
in
fsubrs
xchg
adcl
mov
inc
ficoml
stc
xor
sub
leave
xor
out
lods
or
add
ror
and
push
shrb
loopne
popf
jnp
adc
cli
js
push
jo
mov
popa
out
cmp
xor
jl
idivl
xor
shlb
xor
aam
jno
pop
ret
mov
inc
addr16
push
lret
lds
jp
add
arpl
pop
jmp
out
es
aaa
mov
lods
sbb
nop
lret
sub
mov
shll
inc
pushf
lahf
pop
pop
xlat
cltd
es
cmc
inc
jb
jecxz
mov
cmp
lods
pop
adc
stc
mov
inc
cltd
fldpi
aas
adc
or
fwait
mov
ficomps
in
fldcw
mov
incb
dec
sti
fcomps
mov
or
inc
jl
push
lods
scas
clc
mov
mov
sarl
inc
dec
data16
push
fwait
cld
or
fistps
mov
cmp
mov
cmpsl
out
je
adc
scas
test
inc
add
ror
add
test
addl
inc
fidivs
stos
ror
call
dec
sbb
repnz
test
mov
mov
add
or
int3
cmp
xor
int
push
rcr
xchg
data16
popl
pop
push
dec
or
addb
sbb
or
adc
cwtl
test
xor
popf
push
cmpsl
pop
mov
rol
in
arpl
xor
test
out
aaa
sub
jle
adc
mov
out
xchg
mov
bound
stos
nop
je
push
iret
xlat
cmp
fsub
xchg
cmp
fs
incb
out
push
mov
pop
into
xor
and
fnstenv
je
push
add
pushl
jnp
jne
cmc
and
jmp
mov
xchg
push
cmp
test
mov
sbb
jbe
sbb
call
jo
mov
aam
mov
into
dec
popa
outsb
or
or
data16
outsl
iret
jp
jbe
push
cmp
adc
les
int
aaa
in
ljmp
cli
mov
cmpb
pushf
dec
cmp
xor
filds
mov
cmpl
pop
dec
sahf
hlt
je
mov
xlat
lret
sbb
testb
xchg
leave
ja
sub
jmp
jne
dec
or
and
push
mov
or
mov
or
sub
out
and
mov
pop
cmp
inc
sbb
sbb
std
push
push
insl
aaa
and
mov
leave
pop
repz
lret
shl
test
iret
push
xlat
aaa
je
push
loopne
jmp
jl
les
lcall
xchg
jbe
clc
dec
fbld
hlt
mov
jo
test
fldenv
sbbl
ret
call
popl
cmp
movsb
fnstcw
outsb
popa
xchg
shrd
sub
insb
xchg
jb
jnp
or
std
push
out
inc
sbb
and
insl
lahf
arpl
jne
inc
pop
xchg
adc
insb
xor
pop
nop
repnz
cltd
xlat
les
imulb
sbb
adc
mov
jbe
rclb
adc
jle
push
push
mov
push
inc
outsb
shl
dec
add
insb
dec
mov
jmp
xlat
mov
sub
subb
fstpl
faddl
xchg
pushf
inc
xchg
or
fdivr
xchg
push
jg
add
push
cmp
pop
std
ret
inc
jecxz
enter
jmp
adcl
mov
outsb
jge
cmp
arpl
push
inc
lcall
fimull
call
xor
ja
mov
aas
sub
xorb
jns
inc
out
in
jl
out
stos
fstpt
push
popf
out
jne
notb
sub
sti
push
lods
jge
jge
lock
rol
mov
fimuls
mov
xchg
int
mov
adc
lock
stos
xor
daa
rol
push
cmp
adc
sub
into
push
aam
xchg
out
dec
ljmp
add
mov
xchg
pushf
dec
insl
sub
dec
jnp
addl
pop
cmpsb
aad
rcll
and
or
clc
roll
fcmovb
cmp
xor
dec
enter
ss
mov
mov
call
mov
and
bound
mov
adcl
dec
std
adc
jne
or
pushf
sbb
pop
and
dec
jnp
xchg
aaa
aaa
aaa
mov
pop
jae
xchg
sahf
mov
adc
jle
mov
xor
pop
sbb
ror
pop
xor
test
aad
mov
bound
mov
popf
dec
clc
imul
jmp
outsl
mov
adc
leave
sub
adc
pusha
enter
lret
sbb
sbb
add
mov
xor
shll
mov
pop
push
insl
push
adc
push
fbstp
or
mov
mov
sbb
mov
push
mov
xor
outsl
enter
mov
jge
js
mov
inc
pop
xchg
clc
js
xchg
movsl
scas
xor
lock
stc
adc
sbb
lahf
fcomps
ljmp
adc
dec
imul
stos
dec
xlat
ljmp
loope
pop
mov
xor
fisttps
push
out
sti
mov
sub
and
sbb
and
mov
lret
jb
sbb
sub
in
int
and
mov
lods
adc
pushf
push
mov
imul
xchg
lret
mov
mov
mov
notb
fists
add
lds
xchg
mov
pop
or
pushf
adc
jmp
push
jl
mov
mov
mov
jle
sub
shlb
rcrb
inc
jne
mov
std
shrl
daa
xor
push
cmpsl
lret
jbe
push
xor
out
test
adc
cmp
mov
sub
ljmp
sub
dec
dec
cmp
inc
pop
mov
imul
push
mov
push
mov
adc
fcmovnbe
js
mov
or
mov
jne
nop
sbb
stc
jo
in
xor
dec
jo
repz
mov
test
sbb
sbb
cmpsb
xchg
xor
ret
and
adcl
or
or
jb
stc
xchg
jnp
pop
sarb
fists
sbbl
xorb
mov
call
and
jl
mov
rolb
cmp
and
pop
jg
cmp
rclb
shrb
xchg
sbb
scas
push
add
push
xchg
icebp
xchg
andl
out
sarb
lahf
cmp
decb
rorb
insb
lea
mov
push
int
lea
fiaddl
xor
sbb
jnp
js
int3
fadds
add
mov
push
daa
test
pusha
mov
lret
fimuls
mov
pop
jae
cmp
scas
das
jmp
pop
or
insb
stos
fwait
adc
daa
dec
pusha
popa
mov
aad
pop
das
popf
jecxz
pop
sbb
repz
mov
sti
xor
repnz
push
or
out
inc
mov
pushf
cs
repz
and
adc
loopne
lret
mov
call
xchg
mov
hlt
pop
push
xor
adc
mov
jge
jno
cmp
lds
xchg
mov
sbbl
sbb
mov
push
and
std
and
loope
jo
mov
pop
test
test
lret
mov
je
or
cmc
mov
cld
lret
add
inc
cmp
add
fbstp
loopne
sub
sub
pop
pop
and
mov
icebp
lret
inc
mov
push
cltd
popf
adc
mov
dec
in
sbb
repnz
xchg
movsl
pop
icebp
mov
xchg
ret
cmp
dec
xchg
cmp
repnz
mov
or
jno
dec
fisubl
inc
or
in
movl
and
add
rcrl
cmpb
hlt
jecxz
mov
jl
ljmp
lods
shlb
lret
xchg
and
xchg
mov
mov
fs
jo
icebp
cmc
sbb
bound
scas
or
enter
inc
sub
fwait
addr16
lret
sbb
or
mov
push
fildll
push
xchg
dec
insb
out
jnp
cld
push
adc
pop
cltd
xchg
mov
mov
out
push
xchg
mov
stos
fstpt
out
inc
cmp
popf
out
jg
and
push
push
stos
movsl
sub
movsb
ja
test
loope
or
es
pop
jbe
icebp
repnz
aam
add
cmp
or
inc
pop
or
cmp
loopne
push
out
push
xchg
divb
add
jle
loop
or
jns
sbb
insl
push
nop
push
lahf
fucom
pop
cmp
popf
jo
stc
lret
mov
pop
inc
popa
xchg
add
jae
ss
xchg
nop
orb
push
mov
cmp
push
lahf
xor
in
push
xchg
mov
or
dec
in
lock
and
inc
subl
insl
fcomps
dec
xchg
fimuls
xor
or
cmp
and
dec
xchg
hlt
and
or
jl
movlps
sbb
jb
sahf
outsb
dec
fwait
in
lods
add
clc
push
or
outsb
adcb
ds
mov
sub
mov
fldenv
mov
inc
popl
test
leave
sti
cmp
fstl
dec
pop
std
rclb
sub
push
lods
shr
sbb
and
rorl
xchg
leave
sub
aaa
push
dec
pop
mov
push
cld
push
add
out
repz
push
jno
imul
sbbl
arpl
adc
daa
sub
sarl
push
pop
xor
push
push
pop
add
inc
inc
les
enter
stc
push
or
push
mov
xorl
pushf
idiv
cwtl
scas
dec
lcall
fwait
dec
adc
fsts
and
mov
and
lcall
pop
push
popa
arpl
fcmovu
fidivs
xchg
cli
mov
add
fildll
jge
mov
mov
cmc
cmp
cs
mull
insl
clc
xorl
xor
sub
dec
sub
jecxz
jbe
add
fstpt
jmp
jl
lahf
xchg
inc
movsl
pop
pop
pop
push
filds
pop
sbb
cmp
idivl
test
jg
cs
dec
dec
icebp
sub
sahf
fisubl
pushf
daa
imull
jp
inc
pop
xchg
js
dec
jno
mov
xor
push
or
rcl
ds
shlw
push
bound
adc
sub
loop,pt
inc
xlat
mov
mov
jmp
and
cli
pop
sahf
mov
or
lret
and
dec
cltd
cmp
loop
push
xchg
test
test
insb
shlb
mov
xor
dec
out
subl
sub
jbe
jns
cmc
mov
in
push
mov
pop
in
inc
and
pop
ja
mov
cs
xor
jb
repnz
dec
pop
in
lahf
inc
leave
xchg
mov
clc
pop
or
out
sarb
pop
inc
fwait
dec
adc
mov
insb
ja
leave
cmp
inc
inc
mov
lds
outsb
xor
das
inc
push
add
insl
fwait
and
or
dec
sbb
push
cmpsl
ret
lods
mov
cmp
sahf
scas
testl
push
mov
shll
push
arpl
nop
leave
push
outsb
dec
out
pop
rclb
xchg
push
loope
pop
in
in
cmpb
aaa
ror
sar
push
mov
clc
cs
jg
xchg
stc
push
lods
mov
push
test
xlat
xor
inc
xchg
cld
ds
fs
push
xor
jno
daa
push
add
push
push
push
clc
sti
mov
fistps
enter
mov
xor
push
xchg
push
movsb
cmp
sahf
lcall
ficoms
repnz
jmp
pop
xchg
popa
fstpt
scas
mov
lods
aad
add
cmp
aas
inc
xchg
clc
cmp
push
sbb
into
push
jl
rep
xor
add
lock
mov
es
shlb
xchg
adc
or
stos
int3
jecxz
ret
and
jge
xchg
push
outsl
adc
outsb
mov
adc
aaa
cmpsb
jmp
jo
pop
stos
dec
sub
out
pshufw
mov
mov
jp
ss
and
gs
lret
xor
aaa
aas
jg
adc
push
and
push
movsl
inc
mov
pusha
pop
adcl
insl
pop
jnp
mov
or
xor
test
aam
scas
push
aaa
mov
sub
out
dec
ss
outsl
repnz
div
fnstsw
add
push
and
jp
ret
fisttpl
insb
inc
hlt
std
mov
mov
aaa
sarl
adc
push
xchg
or
leave
add
inc
fs
inc
out
out
cltd
daa
out
push
xor
push
xor
add
xchg
sbb
lods
loop
imulb
subb
jae
sti
jne
mov
xchg
sub
xor
xchg
xor
testl
or
in
aas
and
out
jno
pop
adc
les
fstpt
imul
popf
push
mov
pop
lahf
not
push
mov
cmp
jnp
stos
mov
test
stos
scas
inc
es
pusha
mov
mov
mov
je
xor
xchg
adc
daa
xor
out
pop
repz
xchg
mov
jmp
imul
stos
and
leave
test
push
in
inc
out
adc
int3
aam
ljmp
ja
mov
jp
js
dec
iret
or
push
das
xchg
xchg
adc
xchg
sbb
push
jmp
in
mov
rorb
sbb
out
push
lock
leave
insb
aaa
xchg
mov
inc
pop
inc
jg
out
or
adc
cmc
cld
and
inc
pop
cmpsl
jns
lods
sub
or
dec
jle
pop
pop
fnstcw
insb
mov
xchg
pushf
mov
ror
add
add
dec
in
cmp
mov
mov
sbb
outsl
daa
pop
scas
jmp
sbbl
mov
dec
mov
inc
cmp
dec
cmp
sbb
cmpsl
flds
scas
xor
fldln2
xor
daa
pop
xchg
out
pop
mov
test
je
sub
push
sbb
mov
pop
int
paddw
lret
lods
mov
cmp
dec
jge
xor
fstps
ss
sbb
jge
stc
inc
es
fs
pop
mov
loope
dec
jp
loopne
out
imul
xor
adc
fimuls
and
xchg
int
jmp
mov
jne
jecxz
mov
mov
movsl
xchg
cmp
add
stos
pop
push
pop
pop
cmp
add
or
lock
jg
hlt
mov
adc
jns
push
inc
addr16
bound
popf
pop
mov
mov
adc
testb
mov
or
hlt
fsts
fnstcw
mov
xchg
sub
sub
loope
and
loopne
fildll
inc
cmp
in
mov
or
lea
mov
jo
mov
aas
dec
and
inc
mov
push
add
decb
pop
fdivr
pop
xchg
bound
xlat
in
sbb
jg
jle
sahf
cmp
in
cmp
cmpsb
mov
dec
push
push
mov
sub
pushf
fmuls
mov
cmove
stc
and
test
mov
shrb
iret
dec
fstl
mov
jbe
mov
xchg
pop
pop
fsubl
scas
mov
jo
mov
ja
add
jnp
js
stos
mov
cmp
out
xlat
scas
jb
inc
das
out
jb
cmpsl
lret
jl
jb
dec
fstps
cmp
aas
test
jg
aas
loop
jbe
adc
mov
cmp
jnp
inc
testb
mov
inc
pop
aad
cmp
arpl
cmp
test
jp
mov
aad
insl
xchg
cmp
mov
dec
mov
jl
xorb
shlb
push
lret
inc
pop
lahf
inc
roll
xchg
push
and
cwtl
gs
pop
sbb
into
push
cmc
jne
xchg
and
jle
jns
andb
imul
mov
dec
mov
stos
cmp
out
dec
into
adc
push
add
cmpsb
repz
arpl
mov
add
adc
insb
sub
push
nop
xor
repz
mov
jecxz
int3
or
cld
mov
or
or
lods
fnstenv
aam
pop
test
pop
cmc
aaa
into
xor
push
jge
imul
mov
stos
inc
dec
sbb
les
cmp
push
shlb
mov
lahf
test
cmp
movsb
out
inc
lods
pop
shlb
pushf
iret
jge
hlt
xchg
mov
xor
loop
mov
std
enter
mov
in
mov
and
mov
stos
sbb
outsl
sarl
idivb
mov
lds
adc
xor
mov
aaa
add
mov
mov
add
add
cld
outsl
out
push
pop
mov
pushf
in
lock
or
ljmp
mov
cwtl
fcmove
stos
je
popa
add
rcrl
aam
cmp
test
ficompl
dec
sub
cmp
dec
movsb
push
xor
js
fimull
aad
sti
fnstsw
pop
jmp
pop
xchg
cmpsl
pushf
adc
and
or
out
pusha
hlt
inc
pushf
pushf
and
pop
lds
pop
outsl
pop
test
dec
dec
ds
imul
lock
aad
fs
push
push
aas
pop
jmp
cld
mov
pop
repnz
mov
out
call
pop
mov
inc
pop
push
pop
arpl
jp
dec
out
inc
aas
mov
jno
divl
mov
leave
shr
lret
scas
jb
addb
outsb
popa
cmpsb
cmp
fidivs
add
ss
lcall
dec
and
gs
xchg
jp
addl
push
add
fistpll
xchg
mov
loopne
shl
lds
jp
xor
out
sti
pop
out
ds
and
ss
dec
jecxz
push
jb
inc
jecxz
in
fucomp
mov
adc
add
mov
sub
inc
in
adc
mov
xchg
or
fwait
mov
sbbl
push
xchg
adc
xchg
xchg
in
fs
nop
into
popa
xor
inc
fldenv
jecxz
lret
mulb
jl
scas
ret
ljmp
mov
pop
stos
pop
push
leave
test
fmul
dec
sbb
push
mov
inc
out
orb
out
int3
call
in
sbb
call
das
and
fidivrs
ss
and
push
add
pop
xlat
cs
and
pop
push
mov
dec
lea
and
add
inc
mov
stos
scas
inc
sbb
pop
add
adc
leave
xor
push
jge
insb
inc
sub
leave
and
mov
arpl
gs
cmpsl
xor
pop
sti
mov
dec
lea
es
jg
loop
mov
sub
inc
cmc
arpl
or
mov
es
mov
jle
ja
cmpsb
sub
add
lea
add
iret
in
sbb
mov
lock
out
ss
fbld
and
shrl
ja
xor
inc
ss
xchg
cmpsb
mov
invd
mov
movsb
dec
cmp
insl
add
xor
sub
cmp
xchg
repnz
inc
lds
push
gs
mov
pop
fldcw
leave
insl
enter
das
dec
add
decb
or
and
cmpsb
add
mov
mov
lock
xchg
push
and
call
jg
rcrl
out
xchg
cltd
mov
dec
rol
mov
and
and
stos
out
fistpl
ljmp
stos
imul
aad
imul
test
ret
cmp
scas
cmp
jns
pop
mov
xor
les
lcall
jp
mov
popf
lods
ss
adcl
movd
xchg
insb
xchg
popa
icebp
mov
pop
lahf
sbbl
insb
cmp
xchg
and
or
fldl
push
xchg
xchg
mov
and
mov
lock
add
dec
or
in
adc
xlat
xchg
fsts
rclb
inc
imul
xchg
sbb
sbb
cli
pushf
mov
add
add
ds
dec
sub
pop
mov
mov
push
sub
rol
xor
das
mov
xor
sub
inc
gs
in
pop
mov
jge
jbe
iret
inc
xchg
adc
mov
sbb
or
add
out
rcll
repz
rorb
mov
mov
fwait
sbb
pop
or
out
hlt
push
sub
jns
cmp
fs
jno
adc
push
push
stos
cs
dec
fisttpll
fs
or
sub
mov
xlat
jecxz
inc
test
ds
inc
sbb
push
jb,pn
aad
les
les
sbb
push
fsubl
test
orl
push
idivl
bound
lods
enter
jns
jge
dec
cmpsl
sub
stos
lock
and
stc
idivb
stc
or
mov
dec
adc
xchg
ret
popa
and
int
add
rcrb
sahf
lret
rcrl
sarl
adc
aas
je
clc
adc
lods
xor
jmp
jmp
in
int3
pop
lcall
scas
adc
mov
add
mov
mov
inc
ljmp
shr
mov
into
xlat
jb
push
mov
leave
ficomps
in
xchg
ja
pop
adc
rclb
and
inc
adc
xor
sbb
jg
inc
ss
sub
pop
xor
mov
cltd
js
arpl
aaa
lds
fisubl
xor
pop
cmp
shrb
xor
jo
mov
mov
sub
sahf
pop
int
fs
int3
push
repnz
xor
or
shrl
jae
bound
rcrl
xor
mov
xchg
lea
imul
fs
leave
das
shr
popa
or
mov
jl
push
sbb
lock
bound
mov
jle
test
ret
pop
push
scas
add
xchg
sarb
cmp
pop
mov
int
inc
push
rcrl
xorl
lock
popf
hlt
xchg
dec
push
cld
cmpsb
mov
ljmp
and
mov
pop
and
jne
push
bound
mov
jbe
jnp
lods
push
cmp
push
xorb
xor
mov
or
rorl
sbb
push
pusha
xchg
and
pop
adc
jne
jae
and
je
scas
xchg
push
xchg
movsl
bound
cmp
xchg
or
jb
and
mov
and
sbb
jmp
and
sbb
int
adc
pop
jo
mov
inc
mov
xchg
insl
test
jle
lret
insl
int
push
in
and
cmpsl
loop
and
mov
add
outsb
mov
add
xor
push
lret
cmp
rorl
sbb
or
nopl
sub
movsb
test
shll
inc
xor
imul
call
leave
mov
stos
in
je
rcrb
inc
lahf
add
dec
push
mov
xor
popf
pusha
pop
adc
add
stos
jg
je
enter
sbb
addl
pop
lcall
pop
sub
ss
mov
add
xor
adc
int3
and
shlb
pop
sub
cli
dec
xor
add
or
mov
loopne
clc
lahf
addb
xchg
jge
mov
out
ror
out
aaa
inc
jl
shrl
outsl
xchg
lock
sbb
aas
enter
ret
mov
jae
hlt
push
repz
fsubrl
movsl
adc
or
repnz
cmp
sbb
iret
sar
jb
adcl
icebp
popa
add
xchg
xor
iret
jbe
mov
lahf
in
dec
loopne
aas
inc
and
adc
aam
loope
lret
cld
push
out
enter
sub
jo
or
xchg
test
mov
lea
pop
sub
ret
and
dec
pop
mov
jo
punpckldq
ljmp
ss
aam
xchg
sarl
cmp
and
les
ds
xor
cli
sub
mov
aam
jmp
sbb
dec
pop
inc
aas
cmc
or
in
insl
jno
adc
push
shlb
repz
dec
push
cmp
push
mov
fcomps
and
mov
ljmp
pop
xor
jp
mov
rol
loop
lds
push
lret
xor
inc
cmpsl
fwait
dec
fnstenv
ss
popa
popf
mov
and
cmp
sub
cltd
jnp
dec
addr16
mov
mov
int3
lret
std
pop
pop
pop
leave
test
rcrl
cs
or
xor
je
adc
pushf
and
push
jg
pop
clc
cld
jl
je,pn
imulb
fs
inc
cmp
pusha
mov
data16
mulb
ds
jno
shrb
shrl
unpcklps
ds
cmp
negl
stos
lahf
mov
xchg
fildll
hlt
push
push
push
outsb
sbb
lods
sbb
jne
dec
add
cmp
fildll
stc
xchg
xchg
mov
into
pop
and
xor
cmpsb
ret
fbstp
sbb
jno
loope
bound
mov
sbbl
fsubrl
jecxz
fstpl
in
lcall
test
jo
sub
in
pop
dec
xor
pop
inc
rcr
popa
xlat
rolb
test
adc
ficoms
cld
lcall
add
cwtl
icebp
sbb
in
mov
stos
cwtl
lock
jbe
enter
movsl
mov
dec
and
push
lret
xorl
sub
mov
imul
mov
aas
rcr
jmp
mov
add
push
xor
mov
addr16
les
inc
insb
loop
xlat
es
dec
and
xlat
inc
or
cltd
lret
enter
sti
sub
push
and
pop
mov
stos
xor
test
loope
pop
rorb
sbb
or
in
scas
dec
jno
xchg
movsb
aam
dec
sub
and
or
stos
stos
mov
or
pop
pushf
sub
jnp
jle
add
mov
movsb
in
in
int
adc
es
and
push
lds
lcall
and
mov
adc
add
insb
push
popf
adc
jge
mov
sub
clc
cwtl
jle
adc
in
push
add
or
imul
inc
xor
shll
ficompl
gs
adc
fst
enter
push
mov
das
hlt
cmp
pop
adc
fs
adc
mov
ljmp
push
out
out
adc
adc
pop
inc
idivl
add
inc
mov
mov
mov
hlt
dec
cmp
sbb
jb
adc
jmp
movsb
iret
movsl
faddl
cmpsl
lods
ret
out
add
mov
mov
pusha
jmp
mull
xor
push
xor
pop
das
aas
movsl
es
add
cmpsb
mov
sbb
or
in
mov
fnsave
int3
sub
sbb
lods
push
push
sbb
cmp
sub
fistpll
cmp
andl
insb
cwtl
mov
into
cmc
push
aas
ret
mov
mov
mov
test
mov
ss
xchg
ret
inc
pop
repnz
enter
push
adc
into
lds
mov
enter
dec
mov
xchg
les
stos
iret
ret
dec
fbstp
adc
lahf
aad
shlb
fwait
out
mov
xchg
pop
mov
lods
stc
mov
mov
mov
jns
xchg
xchg
imul
mov
sub
cwtl
adc
fldl2t
and
pop
pop
cmp
pop
outsb
cwtl
dec
pusha
jl
test
mov
xor
in
inc
xchg
inc
notl
cmp
mov
push
or
sbb
in
mov
lds
out
push
cmp
ret
mov
or
push
pop
rorb
in
insb
xor
leave
add
mov
int3
sub
pop
jo
rcrb
lret
or
dec
mov
jb
dec
mov
xlat
movl
nop
outsb
cli
in
jmp
xchg
jnp
enter
lds
mov
cmpsl
inc
int3
push
cmp
test
aad
push
fists
out
xor
cmc
stc
push
mov
insb
mov
mov
cmpsl
in
les
imul
pop
xor
dec
lahf
addl
mov
cwtl
sti
jecxz
add
fisubrs
mov
xchg
xchg
pop
push
insl
xchg
out
or
lret
xor
out
inc
sbb
add
loop
push
in
and
mov
mov
int3
mov
lret
in
in
pop
jp
jecxz
jmp
inc
lods
in
mov
xor
push
or
mov
mov
mov
lods
lcall
repnz
mov
cmp
gs
xlat
mov
daa
mov
xor
sub
mov
sbb
mov
push
out
mov
inc
pop
xor
mov
push
into
xor
sbb
jmp
push
lcall
cmp
icebp
rorb
bswap
arpl
vpcomuq
xchg
jo
or
ja
es
lret
std
arpl
xchg
and
repz
lods
popa
mov
add
mov
call
add
jg
dec
xchg
mov
andl
sahf
rcrb
js
push
cmp
cmp
dec
inc
xchg
les
into
adc
loopne
leave
roll
xchg
sahf
mov
rclb
nop
pop
push
sub
repnz
movsl
insb
inc
les
push
jb
xor
mov
adcb
add
push
out
mov
loope
fwait
xchg
mov
or
pop
jne
arpl
enter
pop
sbb
and
sbb
test
movsb
or
or
dec
lret
push
inc
mov
mov
push
mov
fwait
in
rorb
sub
jb
xchg
lahf
inc
iret
jo
xchg
dec
xchg
jno
sub
jnp
sub
sub
lock
in
dec
push
lret
data16
rcrl
and
into
cmp
mov
aam
insb
add
mov
stos
andl
and
addl
cwtl
lahf
rcll
cmpl
cli
add
push
and
xor
inc
jne
or
mov
push
pop
mov
mov
lcall
dec
fsubs
xor
es
inc
push
cmp
xchg
jmp
aaa
insb
pusha
frstor
mov
clc
sbb
mov
inc
or
inc
outsb
mov
jmp
cli
les
dec
inc
movsl
imul
push
enter
rcl
cmpb
inc
rep
dec
push
int
inc
test
xor
xchg
ljmp
pop
out
dec
jl
xchg
loopne
xchg
imul
push
ss
xor
sbb
data16
xorl
leave
add
dec
inc
mov
add
andb
push
inc
adc
filds
andb
mov
sub
out
mov
jl
andb
pop
inc
hlt
imul
popa
daa
dec
fyl2xp1
xchg
xor
jo
sub
jle
addb
mov
js
jmp
stos
unpcklps
and
repz
repz
adc
xchg
xlat
adc
adc
sbb
out
mov
decb
push
imul
pop
js
mov
les
push
sbb
sub
rcrl
ljmp
gs
sbb
xchg
mov
jmp
out
xor
call
mov
lahf
jns
out
cwtl
aam
int3
lods
xchg
sti
pop
xchg
mov
movsl
inc
lret
sbb
ds
xlat
pop
mov
mulps
in
test
jmp
je
aaa
mov
mov
or
cwtl
out
xor
add
fcoms
cmp
push
aam
fcoml
jae
popf
hlt
pop
add
sahf
mov
sbb
mov
lret
nop
dec
mov
popa
lret
and
movsb
push
mov
xor
not
stc
jo
pop
xchg
mov
adc
jmp
sub
lea
jl
mov
ss
lods
je
ds
pop
push
jb
out
divb
mov
xchg
xchg
es
mov
sub
nop
loop
lods
jg
int
cmp
cmc
repnz
push
mov
aas
sahf
stos
cmpl
out
inc
xchg
adc
and
and
inc
add
xor
cmp
cmc
incb
xchg
inc
test
mov
call
push
pop
mov
xor
das
cmc
insl
bound
testl
push
push
mov
inc
clc
aad
mov
adc
orb
jl
lcall
decl
fwait
xor
mov
dec
xor
es
in
fadd
testl
pop
sub
loop
out
inc
xor
int
ljmp
add
mov
and
int3
shlb
cmp
fs
mov
lret
sub
pop
iret
icebp
jb
jmp
cmp
out
or
xchg
psubw
into
int3
inc
xchg
add
gs
sbb
adc
pop
lea
mov
movsl
add
add
adc
mov
dec
fsts
aad
or
leave
pushf
lcall
push
jp
xchg
sbb
xor
inc
cltd
inc
adc
out
xchg
test
or
dec
or
dec
lahf
push
decl
adc
xchg
ja
in
popa
pop
add
lods
shl
test
fwait
pop
or
ss
sti
fldcw
xor
dec
cmpsl
loop
xchg
mov
lods
cmc
daa
cmpsl
daa
std
addr16
out
mov
fld
pop
mov
inc
pusha
cld
push
repnz
in
inc
or
loope
jnp
dec
push
sbb
int3
push
cmp
xor
pop
ret
ret
pusha
sbbb
out
cmp
jno
jp
repz
mov
shrb
loopne
stos
push
ud2
ret
movsl
in
mov
sbb
inc
adc
movsb
jb
aam
xor
pop
repz
jg
adc
inc
sub
mov
push
sbb
pop
and
dec
or
clc
and
syscall
arpl
insb
and
scas
mov
icebp
jecxz
pop
dec
inc
jmp
ret
sbb
mov
pop
mov
sti
push
and
dec
mov
pushf
pop
dec
pop
rclb
ret
inc
sbb
mov
ror
xchg
ja
mov
lods
adc
mov
xchg
or
shrb
jb
xchg
arpl
xchg
cmp
or
stos
pop
enter
bound
jne
test
add
movsb
cmp
orb
pushf
push
rcll
dec
push
adc
lds
add
dec
or
out
push
push
inc
scas
jo
inc
ret
es
repnz
dec
out
xchg
ds
mov
xchg
and
jno
divl
hlt
mov
mov
mov
sbb
xor
bswap
dec
mov
scas
lods
cwtl
sbb
loope
rdmsr
test
pop
xchg
adc
sub
sbb
popf
mov
pop
stos
mov
xchg
mov
push
sub
cld
xchg
mov
jmp
xor
out
icebp
xchg
das
pop
ror
cltd
aas
cmp
loope
and
add
cmp
sti
lods
ret
shll
xchg
icebp
jb
mov
cs
pop
jl
add
inc
call
inc
cmp
sbb
les
aaa
mov
sti
int
rolb
mov
sbb
test
sub
xchg
xor
inc
aas
dec
xor
lods
loop
mov
mov
int
cli
je
daa
adc
imul
inc
or
stos
or
push
cwtl
xchg
imull
pop
es
movsl
xchg
stos
iret
sbb
fcmovnu
leave
mov
cmpsl
push
sbb
out
adc
dec
shlb
jp
adcb
mov
les
sub
fs
in
ret
mov
out
iret
dec
lds
cmp
cmp
imul
jle
fadds
mov
notb
aad
xchg
js
js
pop
pop
inc
add
xchg
ds
ret
enter
gs
add
addr16
xchg
aad
mov
shlb
inc
dec
aaa
mov
ficoms
imulb
cmp
push
outsb
shrb
xchg
xchg
xchg
rclb
outsb
jge
cmpsl
ja
out
and
imul
lret
sbb
pop
cmp
jo
xor
cmp
cs
jnp
adc
dec
inc
jle
xor
xchg
xchg
js
out
jp
push
adc
or
sub
into
push
adcl
jbe
mov
pop
iretw
in
movl
gs
jns
adc
cltd
jo
inc
cmpsb
inc
lahf
push
mov
insl
int
sub
sub
xchg
sahf
xlat
test
fidivrl
mov
xchg
cmp
mov
in
aaa
sbb
fcompl
fldcw
outsl
pop
sub
pop
jecxz
inc
scas
pop
dec
das
in
gs
mov
fmul
int3
sbb
and
add
inc
sbb
je
loope
xchg
test
lahf
jns
xor
pop
add
jnp
lods
ja
insb
insl
push
adc
ss
jbe
pop
adc
jg
cld
xchg
sbb
mov
cmp
push
mov
in
xor
dec
push
js
push
stos
daa
fwait
and
test
xor
dec
sub
lods
sbb
nop
push
or
mov
stos
pop
add
lods
mov
jae
sbb
sub
sbb
add
stc
lcall
and
cmp
push
call
push
jl
cmpsb
cmp
call
mov
inc
stos
add
adc
and
aas
dec
decb
lahf
adc
std
rcrb
pop
mov
adc
xchg
leave
jns
lahf
in
cwtl
andb
xor
out
xchg
mov
sahf
das
mov
inc
aas
sbb
je
sbb
mov
jecxz
imul
adc
xor
pop
fucomp
test
scas
lock
mov
cmp
mov
sub
in
mov
out
subb
jne
xor
dec
mov
mov
and
xchg
stc
aaa
not
lahf
out
int3
xor
and
adc
lret
add
add
mov
add
imul
jb
je
addr16
mov
adc
sbb
pop
int3
add
jo
ret
fists
mov
gs
mov
mov
dec
inc
pusha
xor
pop
loop
mov
mov
mov
jecxz
fs
fs
cmp
jl
cmc
test
in
notl
add
hlt
repnz
mov
xchg
jge
cld
pop
mov
jnp
sbb
cmp
stos
movl
in
and
fisttpll
push
xorl
lret
hlt
pop
inc
mov
stc
aam
mov
push
sbb
imul
mov
pop
lods
hlt
cli
js
popa
lods
std
push
xor
cs
mov
mov
test
sub
and
fbstp
push
aam
jl
fcmovnb
xlat
jle
add
sbb
mov
test
push
out
idivl
pop
xchg
fdiv
mov
mov
sbb
dec
daa
xlat
clc
int
dec
stos
sbb
out
sub
mov
fidivrl
and
pop
enter
gs
ss
sub
or
loopne
lcall
mov
xchg
xor
shll
add
jbe
pushf
adc
adc
dec
cmp
xlat
lock
ja
dec
pop
sbb
ret
ret
je
shrb
cmp
rol
cmc
push
sbb
fiadds
pop
sbb
cmp
enter
pop
pop
out
decb
jno
jmp
enter
adc
mov
cmpsl
jb
jbe
adc
jb
mov
aas
dec
inc
scas
cmc
ret
inc
mov
sub
jp
sti
clc
dec
iret
and
dec
fcmove
loopne
mov
dec
pop
jne
lods
and
insb
fwait
lds
cld
and
pop
sbb
test
lret
imul
lahf
mov
jmp
rcrl
aam
sub
ljmp
ret
or
push
loopne
sbb
into
jecxz
and
or
and
cmp
pushf
sub
mov
iret
pop
std
jb
aas
xor
jl
push
iret
hlt
outsl
cmp
or
or
imul
or
push
scas
inc
out
mov
fcmovnbe
out
data16
test
js
dec
std
or
orb
scas
pop
stos
inc
mov
ficoml
lock
data16
mov
jg
jg
jne
or
call
sbb
sub
jns
cmp
sbb
fimull
pop
sbb
cli
daa
lret
jge
dec
push
jb
jp
mov
push
fld
dec
inc
fmuls
pop
pop
pop
test
in
sbb
pop
dec
scas
test
add
call
mov
ds
xchg
push
std
xchg
aad
dec
jae
jge
inc
adc
inc
aad
add
xor
out
outsl
jo
add
movsb
sbb
fsubs
jnp
mov
sbb
movsb
xchg
pop
lcall
shrl
push
or
jns
sahf
xor
pop
inc
fs
xchg
xor
ja
cmp
gs
pop
cltd
in
cmc
inc
mov
cwtl
scas
scas
fsubl
sub
mov
xchg
mov
sbb
sets
addr16
push
int3
cwtl
xor
mov
repnz
cmpsb
je
jnp
fs
std
mov
dec
mov
add
inc
out
sbb
mov
repz
loop
pop
pop
notb
scas
popa
cmp
xor
and
jno
push
sbb
pop
mov
inc
sbb
inc
out
inc
sub
pop
jo
xchg
mov
out
sub
inc
outsl
mov
and
loopne
in
repnz
fidivl
dec
lods
add
out
idivb
sbb
mov
dec
sub
pop
test
dec
out
xchg
call
dec
sub
dec
mov
sub
sub
push
push
sbb
jmp
dec
mov
pop
pop
fadds
xor
sub
jne
into
pop
mov
outsb
cmpsb
in
ret
cs
mov
cmp
sti
push
rclb
das
push
mov
or
adc
clc
pop
insb
daa
cmpb
mov
push
ret
xchg
xor
hlt
insl
mov
push
xchg
push
sbb
dec
dec
movsw
cmpsb
jb
lret
fildl
mov
hlt
popf
jb
pusha
ret
icebp
cmp
movl
adc
lsl
push
inc
imul
adc
xor
ret
xor
fs
orl
ss
xchg
jecxz
stos
or
imul
mov
pop
jle
add
mov
rorb
sbbb
mov
jecxz
out
push
stc
inc
stos
aam
jle
popf
popa
mov
sub
lret
cmp
rcrb
push
mov
stos
in
outsl
inc
mov
mov
xchg
int3
cltd
sar
add
xlat
mov
and
das
sub
cmpsb
iret
pushf
push
mov
arpl
sbb
mov
add
or
les
arpl
push
repnz
sbb
xor
rcrb
add
pop
nop
dec
lret
pop
cltd
ret
inc
out
lea
inc
negl
lea
sbb
lea
adc
into
inc
movaps
jnp
popf
stos
adc
pusha
mov
stc
leave
xorb
jbe
push
jb
mov
ror
or
sarl
mov
in
lahf
dec
movsl
mov
loope
mov
push
cltd
popa
jnp
xchg
push
mov
mov
pop
sub
mov
mov
xor
fwait
in
lret
imul
fidivrs
jg
mov
test
and
insl
loope
cmpb
rcrb
in
push
adc
inc
out
test
jmp
ljmp
jne
mov
or
cmp
inc
cli
dec
mov
jno
negb
out
mov
insb
mov
adc
cmc
or
mov
sbb
mov
xchg
fwait
jp
mov
pushf
jns
lcall
inc
cli
test
out
jl
popa
outsb
xchg
frstor
sub
aaa
dec
imulb
lcall
adc
insb
jae
cmp
int
test
test
fcmovne
popf
fwait
dec
loopne
nop
stos
push
jo
ds
mov
nop
ja
out
orb
push
mov
xchg
roll
pop
mov
ds
aas
repnz
popf
mov
mov
jne
int3
rclb
add
mov
shrl
lods
add
push
div
outsb
repnz
loop
push
ret
mov
jno
pop
mov
out
adc
sbb
shl
shlb
cmpsl
add
xchg
or
xor
cltd
mov
xchg
push
push
aas
dec
sub
jbe
test
lret
loope
jecxz
movsl
mov
fisttps
jl
ja
fcompl
pop
add
fmuls
outsb
jns
mov
jne
data16
inc
test
cmp
and
mov
sbb
add
pop
outsb
andl
inc
or
lods
jg
daa
pop
cld
sub
cmp
roll
xor
movsb
clc
add
fs
lcall
enter
add
js,pt
mov
adc
add
and
and
jo
hlt
pop
dec
mov
jb
xchg
clc
call
stc
dec
mov
test
cmp
dec
arpl
addb
or
insb
pushf
inc
push
lock
mov
jo
imul
xchg
dec
mov
mov
push
mov
jg
call
stos
jns
pop
aas
fiadds
lret
test
je
push
test
push
xlat
in
mov
lds
and
fsts
test
jmp
dec
mov
lea
cltd
push
dec
or
xchg
jle
lods
mov
cltd
xlat
mov
mov
vxorps
mov
out
jg
into
and
out
fwait
adc
push
pop
pushf
rorb
push
add
sub
adc
inc
pop
xchg
out
aam
outsl
rcl
pop
jbe
cmc
mov
leave
jp
sahf
sbb
fildll
leave
pop
pop
ljmp
fistps
das
add
sub
cmp
lds
push
add
inc
inc
adc
adc
test
jle
mov
cmp
adc
and
inc
fists
sahf
mov
jae
and
mov
xchg
cli
cmp
clc
jb
in
scas
pop
fisttpll
adc
cmp
xor
mov
inc
das
lcall
in
cmp
mov
ljmp
stos
push
mov
mov
jl
mov
inc
js
push
mov
and
or
popa
pop
icebp
push
pushf
pop
xor
dec
and
jp
data16
popf
clc
adcl
mov
fadd
stos
mov
cmpsb
sbb
loopne
and
iret
call
or
icebp
jg
sar
xor
nop
es
int3
ret
mov
push
cmovno
mov
cld
shl
jne
shll
jmp
push
fld1
cmove
je
mov
pop
jae
dec
dec
cmp
test
and
add
sub
push
mov
in
cmp
mov
xor
mov
sub
inc
repz
std
loope
scas
and
pop
lods
ljmp
jns
mov
mov
mov
jne
int3
lock
sub
pushf
insl
in
ss
xchg
insl
mov
cli
xor
and
jge
push
stos
mov
or
iret
pop
pop
xchg
mov
xchg
popa
push
jbe
push
xchg
sti
out
add
mov
add
dec
lcall
mov
xchg
push
roll
fldt
mov
cmc
in
inc
shl
rorb
movsb
in
or
sbb
aaa
lods
mov
cmp
testb
pushf
dec
pop
jl
cli
rcl
dec
imul
test
lea
xchg
pop
dec
lods
dec
stos
cltd
inc
imul
pop
leave
xchg
scas
dec
enter
dec
popa
mov
movsb
test
imul
es
sub
cs
or
inc
inc
fcompl
lahf
pop
std
or
sub
aas
cmp
sub
mov
jno
mov
mov
pop
sbb
xorb
in
and
sahf
lods
mov
int
gs
adc
cmp
fnstsw
adcl
icebp
or
sub
sahf
aad
inc
insl
or
aam
inc
fimull
xlat
sub
gs
xorl
mov
mov
xchg
adc
push
pop
mov
jge
lret
loopne
ret
inc
std
jecxz
pop
push
loop
or
mov
sub
and
scas
fldenv
jmp
fimuls
js
scas
push
shrl
icebp
xchg
pop
mov
lcall
push
mov
cld
and
popa
ljmp
mov
scas
emms
and
daa
xchg
push
divl
mov
xor
xchg
cs
jecxz
or
mov
repnz
addl
add
ss
lock
cli
mov
repz
push
or
int
push
cmp
test
pop
or
sbb
rolb
pop
and
mov
out
cwtl
psubw
cmp
fidivs
or
hlt
push
pushf
inc
sarl
cwtl
sub
gs
fistl
lds
mov
loopne
jle
dec
out
add
dec
pop
jge
out
dec
enter
int
push
mov
fwait
and
cmp
repnz
int
sbb
bound
xchg
ljmp
mov
push
fldt
mov
mov
test
xchg
int3
imul
cmpsl
movsb
jns
sub
into
rolb
out
pop
mov
shlb
jmp
cltd
scas
hlt
call
pop
xor
notb
inc
out
outsb
test
mov
jnp
movsb
rcl
mov
mov
xchg
lds
cmp
jmp
shrl
mov
addr16
sbb
cmp
das
in
jae
movsb
mov
push
dec
add
imul
lods
cmp
push
les
pop
pop
jmp
add
pop
in
scas
fs
imul
or
xchg
dec
sbb
inc
or
and
jmp
mov
scas
or
std
in
cwtl
in
add
mov
xor
push
cwtl
fistpll
lret
dec
or
inc
inc
cs
lcall
test
jle
pushf
jb
add
inc
loop
xchg
sbb
push
push
pop
fdivl
mov
lods
dec
mov
and
cmp
lock
lret
or
inc
xor
enter
adc
lock
mov
mov
test
jl
fdivrl
rcrb
xchg
pop
pop
icebp
int3
sub
imul
xor
jle
out
clc
xchg
pop
and
or
jmp
lds
push
or
xrelease
jg
xchg
mov
rcr
pushf
cltd
lods
icebp
sbb
xchg
aaa
rcll
jbe
mov
out
rcrl
shlb
sub
xor
leave
ja
mov
and
cmc
lods
cmp
mov
out
and
inc
mov
cltd
sub
push
pop
xchg
enter
fadds
push
nop
pop
push
jmp
testb
push
insb
jnp
aaa
dec
rcrb
dec
std
cmp
sbb
sbb
in
lea
test
pop
push
cmc
push
hlt
test
mov
push
enter
jmp
popf
xchg
inc
leave
inc
and
ret
arpl
xor
int3
cmp
mov
cmp
inc
mov
mov
add
push
hlt
ret
jae
iret
adc
mov
fwait
clc
in
push
in
mov
sbb
lret
fsub
fisubl
outsl
data16
int
jecxz
mov
fsubrp
jb
cld
pop
cmpsb
stos
repnz
adc
cmp
cld
xchg
add
addr16
jcxz
xchg
rorb
pop
mov
imul
mov
sub
fisttpll
pop
mov
adc
divl
popa
stos
cwtl
lret
repz
sti
sahf
add
mov
arpl
loope
xor
cmpsl
cmc
mov
pop
cmc
xchg
add
mov
cmp
ficoms
jl
jmp
stc
sbb
popa
int
xchg
add
pop
or
lcall
cmp
repnz
inc
jge
push
mov
mov
and
dec
add
jle
outsl
and
xor
adc
enter
mov
mov
mov
mov
push
cltd
out
adc
mov
xchg
adc
mov
fildl
sub
int
inc
je
mov
mov
or
xlat
xor
or
xchg
test
insb
stos
mov
sahf
xchg
sbb
jbe
adc
pop
insl
xor
mov
mov
movsb
loop
mov
adc
addr16
push
cmp
rolb
push
mov
cmpsb
or
mov
fimuls
cltd
dec
hlt
cmp
int
scas
cwtl
xchg
cmp
insl
or
inc
pop
inc
shrl
mov
mov
fstl
cmp
xor
sub
int3
leave
mov
out
lock
jno
mov
jo
push
test
push
pop
cli
mov
mov
div
loope
inc
data16
pop
sub
enter
cltd
inc
sahf
popf
in
mov
lret
inc
aaa
jbe
lcall
imul
cli
push
dec
pop
dec
push
neg
stos
in
add
std
dec
mov
in
sbb
stos
pop
push
lods
pop
shrl
daa
push
imul
loop
inc
enter
aam
lret
add
outsl
cwtl
and
jecxz
ss
pop
out
mov
mov
adc
ret
jecxz
push
jns
addl
das
cmp
out
jns
stc
xchg
addr16
scas
out
loop
jecxz
hlt
xchg
inc
mov
enter
xor
push
dec
pop
js
push
mov
ja
mov
fsubr
jbe
test
mov
pop
xchg
and
enter
mov
das
sarl
pop
out
mov
repnz
xor
pop
sbb
int3
out
movsl
cltd
sbb
or
movsb
hlt
pop
mov
mov
enter
std
push
lods
je
into
or
jns
cwtl
shlb
ds
faddl
dec
push
push
push
test
sbb
movsb
mov
jnp
daa
sub
jno
xchg
shrb
xor
int3
into
and
mov
pop
scas
jnp
mulb
push
cltd
adc
sahf
push
iret
and
add
and
inc
movsl
lods
sbb
xchg
mov
cli
mov
iret
pusha
out
fs
lods
xor
xor
test
addb
out
out
and
or
lods
sbbb
inc
arpl
je
jne
mov
inc
xchg
loope
or
inc
popf
imul
and
movsl
xlat
andl
adc
xchg
lcall
add
sbb
loope
push
sbb
cmp
lock
test
rclb
popa
cs
xor
out
cmc
in
cs
mov
cmp
je
rcl
shll
add
mov
lods
dec
lock
cmp
repnz
add
pop
jmp
das
jle
jg
shlb
or
mov
and
sbb
and
imul
sbb
jae
mov
xor
in
hlt
adc
inc
scas
movsl
shr
ljmp
or
dec
add
data16
pop
adc
xchg
lea
dec
in
cmp
movsb
pop
jl
rep
push
push
jp
aaa
into
popf
mov
mov
rcl
bound
inc
lahf
push
xor
jo
adc
addb
inc
repnz
push
aas
in
sbb
daa
jmp
adc
push
mov
pop
lds
bound
lret
js
in
cs
aad
int3
xor
add
ret
test
into
xchg
bound
push
sti
addr16
test
mov
ja
clc
in
pop
adc
or
inc
cmp
inc
inc
push
cmp
lcall
push
icebp
pop
ja
or
cmp
fbstp
xchg
ret
sub
dec
sbb
mov
jg
add
cmc
push
add
cmp
adc
pop
divl
mov
jne
mov
sub
aam
lods
mov
ret
inc
xchg
pusha
adc
push
rclb
mov
test
les
adc
or
hlt
outsl
lret
or
into
lea
leave
inc
dec
test
rorl
mov
fwait
adcb
mov
or
pop
pop
sub
jl
cmc
sbb
jmp
push
jno
sbb
or
leave
dec
idiv
mov
std
and
repz
dec
jno
add
push
pusha
in
push
cmp
repnz
pusha
xchg
and
fmul
outsl
add
dec
out
cwtl
adc
inc
int3
lods
mov
fdivl
mov
dec
xchg
mov
cs
jo
test
aaa
and
push
mov
cld
mov
sub
aam
mov
aam
jo
inc
cmp
int
push
push
sub
sbb
test
dec
nop
jg
sbb
push
adc
lock
push
lods
sbb
xchg
cwtl
aaa
cmp
cmp
add
ret
adc
shrl
inc
pop
test
andl
leave
cmp
fidivrl
int
movsl
sbb
mov
cmp
mov
dec
and
inc
sahf
int3
arpl
mov
pop
shlb
out
cld
fisttps
fldcw
enter
mov
inc
imul
ror
jns
xor
hlt
mov
push
sbbl
sbb
stos
test
jl
popa
lret
clc
aam
outsb
mov
jge
push
sahf
mov
outsl
fwait
inc
cs
jae
or
lock
sub
dec
rolb
xchg
sub
in
jp
jecxz
and
jae
or
push
sub
test
lret
push
push
inc
das
inc
mov
stos
mov
divl
jmp
icebp
mov
inc
and
pop
xchg
test
shlb
push
cs
mov
sbb
sub
mov
xor
jg
xor
jno
sbb
int
stos
sbb
repz
call
popf
mov
scas
xor
fstl
jmp
lock
dec
scas
mov
mov
mov
test
sub
in
inc
daa
cltd
and
aam
test
out
pop
push
fldl
ss
mov
sub
int3
insl
out
pop
leave
hlt
xorl
sbb
adcb
aad
stc
mov
mov
add
sub
pop
cmp
adc
jb
or
ja
mov
inc
arpl
jb
xchg
mov
pop
jne
arpl
cltd
dec
dec
lods
jb
lds
sahf
call
push
cmp
int3
mov
in
nop
in
sbb
insb
out
push
inc
fwait
out
mov
shlb
aam
rdmsr
outsb
cmp
sub
aad
mov
xchg
lock
mov
fwait
pop
mov
fisubs
add
push
jge
and
movsb
rcr
or
aad
fisubl
arpl
icebp
pop
xor
inc
ja
clc
xchg
xchg
call
cmp
dec
iret
push
or
jl
shll
pusha
sub
dec
stc
ds
dec
sahf
mov
leave
hlt
xor
mov
inc
lock
xchg
pop
shll
and
push
cwtl
push
mov
lods
adc
popf
test
sub
sbb
jae
xchg
mov
jae
jo
mov
icebp
sub
push
aas
sti
movsb
or
pop
icebp
sbb
mov
sahf
arpl
mov
push
ljmp
cmp
add
jno
sahf
inc
nop
incb
inc
test
les
inc
inc
outsl
imul
sub
in
mov
push
mov
push
mov
mov
std
rcl
scas
push
push
mov
cltd
aaa
and
ja
cmpsb
jne
cmp
int3
mov
stos
and
jo
mov
rcr
popf
xchg
outsb
scas
jae
repnz
inc
mov
cmp
imull
cmp
stos
popf
xchg
dec
pop
mov
xor
test
and
aaa
or
fsts
xlat
negb
mov
fiaddl
push
sbb
xor
and
cmpsb
mov
mov
cmp
mov
xor
mov
pop
jns
pop
jle
scas
shl
lock
xchg
cmpsl
jge
movsb
sub
enter
in
cmp
sar
and
mov
sub
lret
or
das
push
jecxz
and
or
repnz
and
push
pop
lods
jae
aad
mov
lcall
mov
fwait
mov
mov
push
adcl
lahf
pop
xchg
mov
pop
push
cmp
sbb
mov
cli
gs
rol
mov
je
insb
dec
imul
loope
js
inc
and
jne
jnp
daa
insb
sub
mov
push
lret
sbb
int3
adc
xor
dec
ret
lcall
and
push
xor
xlat
fwait
xor
fcompl
aas
aaa
leave
add
add
inc
mov
cmp
cmp
mov
pushl
dec
push
cs
sub
cwtl
pop
push
mov
in
adc
cwtl
and
inc
icebp
scas
push
sub
into
mov
fnstsw
enter
add
xchg
pop
repnz
xchg
pusha
dec
int3
pop
mov
lock
cmpsl
sub
into
xchg
aam
mov
jae
push
cmp
sbb
in
or
xor
inc
lock
dec
jle
jne
jg
sbb
shlb
sub
icebp
dec
sbb
inc
jmp
mov
ds
mov
in
arpl
xchg
cmp
aas
addr16
and
fstpl
dec
enter
pusha
cmpsb
lahf
mov
sub
or
rclb
push
js
mov
outsl
ret
mov
adc
stc
xor
push
push
sbb
push
addr16
xor
xor
mov
adc
out
loope
push
test
push
sahf
jmp
cmp
cmpsl
fld
mov
hlt
mov
inc
inc
test
push
faddp
sub
lahf
gs
insb
fsub
adc
ret
pop
add
sbb
testl
push
mov
ljmp
cmp
pop
push
scas
hlt
push
popl
int
out
jmp
into
fisubrs
notl
or
jns
cmc
ja
sub
int3
push
push
pop
enter
inc
dec
fucomp
xchg
push
repnz
jo
push
shlb
pusha
out
sbb
lahf
outsl
mov
in
mov
xor
or
es
and
jae
cmpsl
push
fcmove
je
jae
push
mov
aad
ss
pop
and
mov
push
int
scas
mov
cltd
sub
dec
fiadds
movsl
icebp
push
or
bound
mov
fcoml
fnstcw
jle
mov
rcll
dec
je
mov
movsb
adc
inc
lock
push
pop
mov
sar
dec
int
jmp
fsubrs
mov
popf
xchg
mov
jg
sub
xorb
adc
pushf
xchg
pop
pop
xchg
into
jle
out
icebp
in
ret
pusha
js
in
fs
test
ljmp
adc
jae
inc
xor
fcomip
lock
xor
je
inc
les
mov
push
mov
rorb
inc
lret
std
dec
and
add
xor
adc
cmp
popa
pop
jns
fimuls
sahf
jp
sub
ret
negb
div
push
out
adc
sub
inc
push
dec
ss
iret
loop
cmp
inc
xorl
sahf
pop
and
xor
mov
movsb
xor
add
test
adc
push
pop
inc
movsl
or
xor
mov
xor
subb
add
test
outsl
nop
test
in
jns
cmp
add
repnz
mov
inc
xor
jnp
push
jmp
push
int
pop
dec
pop
popa
dec
lcall
insl
test
sub
scas
rol
repz
leave
cwtl
mov
sti
es
jbe
pushf
fistps
daa
mov
xchg
fiadds
cmp
adc
add
mov
pop
aas
shl
fstp
shll
je,pt
or
xchg
jecxz
xchg
mov
xchg
out
jne
xorb
int
sbb
bound
sbb
mov
mov
repz
mov
sub
pushf
jmp
incb
test
insl
dec
sbb
lods
push
push
mov
movsb
pop
lds
dec
adc
mov
negb
inc
aam
aas
cmp
popa
mov
inc
aaa
movsl
lret
pop
in
popa
scas
push
test
sahf
sbb
outsb
loop
call
inc
arpl
dec
inc
addr16
loope
pop
and
int
mov
mov
mul
jno
xchg
xor
sahf
adc
pushl
out
pop
push
pop
jne
lret
xchg
pop
fistps
loope
pop
xlat
inc
adc
stc
cmpsl
rcrl
and
dec
add
xchg
outsl
ret
sbb
pop
xchg
sbb
dec
das
ljmp
lock
in
and
cs
cmpsl
push
mov
hlt
jno
cmp
cmp
or
mov
mov
mov
jbe
outsb
in
add
add
dec
sub
pop
xchg
jno
mov
or
xor
dec
hlt
add
and
sbb
pushf
inc
mov
cmpsl
push
pop
inc
shr
bound
jb
push
push
jp
push
fs
add
lahf
cmp
icebp
or
loop
xchg
filds
cltd
outsb
ror
cmpsb
pop
jno
mov
xchg
inc
cmp
repz
add
mov
sub
xchg
mov
sub
pop
mov
adc
je
mov
jg
call
sub
test
insl
sbb
mov
inc
fnstcw
nop
cmpsb
rorb
clc
insl
cmp
call
mov
push
fwait
xor
das
xor
jp
mov
jecxz
cmp
and
or
call
fistpl
lcall
push
inc
mov
jno
dec
jno
gs
mov
addr16
daa
push
imul
mov
mov
cmp
sub
xchg
stos
sbb
stos
scas
lret
dec
pop
push
jp
ja
lcall
and
mov
fldcw
add
adc
xchg
mov
outsl
mov
mov
add
out
push
test
mov
pop
mov
inc
push
sub
insl
ficompl
stos
fs
js
pusha
push
dec
clc
daa
inc
aam
scas
inc
sbb
mov
imull
or
cli
adc
enter
clc
adc
sbb
cmp
and
outsb
mov
aas
rep
push
adc
inc
or
in
scas
out
cmp
adc
movsb
int3
cmp
and
lcall
xor
sbb
lea
sbb
pop
outsb
pop
rcll
mov
pushf
js
out
jge
mov
cmpsl
push
push
sbb
ljmp
mov
imul
mov
je
mov
jl
sub
add
sbb
add
jmp
xor
scas
sbb
sti
xlat
mov
std
pop
add
mov
mov
ds
cltd
jns
adc
inc
int3
mov
pushf
and
xor
ret
jge
or
pop
jns
lds
dec
pop
xchg
fisubs
push
xchg
popf
inc
gs
cmpsb
pushw
xor
outsl
gs
arpl
lock
jno
movsb
cmpl
sbb
mov
mov
loopne
dec
mov
sti
bnd
push
aas
pop
push
lds
adc
mov
adc
jp,pn
outsl
pop
pop
cltd
das
out
add
jb
xor
mov
sarl
mov
shlb
popl
dec
mov
sbb
lods
cmpsl
mov
xor
dec
pop
xlat
xchg
mov
dec
mov
stc
cmp
ljmp
push
fcoml
mov
pop
mov
movsl
stos
mov
adc
mov
pop
scas
call
xchg
rol
mov
mov
out
ficomps
lods
xor
cmpsl
shl
inc
stos
pop
push
mov
push
fwait
movl
pop
adcl
js
xchg
negb
out
into
inc
push
or
add
lret
loope
adc
dec
fwait
cltd
shll
cwtl
dec
xchg
push
in
cwtl
xor
adc
jp
bound
adc
jo
stos
adc
jno
mov
jl
sbb
jp
dec
repz
lea
iret
data16
mov
iret
sbb
xchg
les
imul
stos
push
mov
pop
sub
jl
add
es
scas
lahf
mov
fsubl
mov
jnp
jp
pop
mov
dec
ret
xor
pop
jnp
aas
inc
dec
dec
arpl
cmpsb
jmp
fwait
jnp
adc
xchg
je
jmp
add
dec
jmp
cmpsl
xchg
mov
cmc
cmp
repnz
push
gs
sbb
pop
in
adc
test
imul
dec
xchg
dec
popf
cmp
out
out
imul
mov
aas
mov
stos
inc
cmc
add
aaa
fmull
int3
sub
ret
aam
adc
jb
enter
aam
es
incb
pop
add
stc
insb
loope
jle
addr16
lret
mov
pop
mov
cwtl
repnz
int3
mov
dec
nop
into
popf
cmc
sarl
lahf
mov
mov
daa
dec
fs
dec
adc
pop
out
jne
xor
jg
lods
mov
lret
decl
sbb
pusha
push
dec
sar
das
sub
push
daa
push
jb
imul
or
jle
out
icebp
clc
xor
test
xor
js
in
les
inc
rcll
cmpsl
or
in
dec
fcomip
xor
les
xchg
add
jl
adc
adc
push
ja
or
dec
pop
movsb
pop
insl
push
sbb
repnz
js
cmpsl
in
and
shlb
or
lods
sbb
push
jg
les
mov
int3
xor
lret
jno
pop
mov
mov
xchg
pop
or
enter
add
cltd
js
adc
mov
in
popf
fs
std
in
out
pop
lea
pop
rcrb
test
jns
sarl
dec
mov
jno
add
in
or
cs
or
lods
in
mov
out
std
jo
jecxz
dec
pop
dec
or
add
es
testb
enter
push
lods
mov
cmc
inc
cvtps2pi
fmuls
incb
icebp
dec
dec
push
fbld
add
add
scas
push
sbb
and
es
push
fstps
pop
scas
mov
dec
cli
dec
loopne
fwait
in
inc
ljmp
es
xor
iret
jnp
fcompl
int
std
arpl
imul
into
push
jmp
xor
inc
je
xchg
outsb
mov
pop
roll
sbb
out
shl
xchg
sub
out
sub
fists
mov
fisttpl
and
jbe
cmc
dec
out
clc
aas
cwtl
je
or
sbb
iret
xor
js
inc
jno
jecxz
xchg
mov
repnz
addr16
add
js
xchg
pop
xlat
push
jp
loopne
daa
add
push
scas
ja
leave
dec
push
push
cmpb
cld
gs
cwtl
hlt
pop
xlat
jbe
inc
mov
jae
cmpsl
fsubp
in
pusha
jns
int3
dec
and
aad
in
push
scas
std
jnp
inc
mov
mov
xor
jbe
icebp
cmp
daa
mov
je
dec
and
popf
jns
xor
sbb
dec
xchg
inc
fsubrs
adc
cmc
shlb
adc
or
jnp,pn
bound
jne
out
cmp
dec
int
add
lods
cmpb
cmp
fidivrs
shrb
sahf
pop
or
subl
jb
xor
xor
mov
insl
loope
jnp
div
sbb
fnstsw
movsl
fildll
jmp
dec
sbb
inc
adc
xchg
sahf
inc
adc
aaa
andl
popa
ljmp
cld
mov
jecxz
jne
jle
xor
and
int
rcl
stos
mov
dec
dec
xchg
jo
inc
xchg
xor
add
mov
lcall
mov
mov
sub
xor
jbe
xchg
std
iret
movsb
in
push
xor
mov
xchg
or
stos
sbb
sbb
xlat
scas
sbb
in
inc
mov
rclb
fidivrs
arpl
sub
xlat
mov
mov
movsb
scas
pop
dec
mov
mov
inc
bswap
iret
unpcklps
cmp
sub
test
mov
xorb
sar
push
pop
cmp
jp
sub
das
inc
jo
xchg
fidivl
lahf
lods
cmp
pusha
dec
ret
scas
mov
cmpsl
stos
paddq
in
sbb
ljmp
mov
test
movsb
stos
sbb
out
xchg
shll
push
imul
es
mov
cwtl
push
test
mov
mov
jecxz
sub
repz
pop
dec
mov
lcall
or
jecxz
jbe
into
mov
stos
pop
aad
std
das
repnz
in
testl
insl
jbe
mov
lea
add
gs
shll
push
jne
xor
mov
jo
push
test
push
inc
pop
push
dec
xor
cmc
pop
out
mul
xor
js
mov
push
and
out
fsubrs
xor
fisubrs
mov
cltd
loopne
push
loopne
pushf
in
ret
or
or
and
dec
loope
repnz
sbb
push
fs
xor
mov
stc
inc
lcall
ja
fwait
jmp
in
inc
sbb
cmp
dec
mov
xchg
adc
jl
jb
xchg
das
mov
push
jle
popf
mov
lods
fs
sub
push
push
dec
ss
inc
sub
inc
push
xor
scas
jno
mov
sarb
jns
dec
dec
mov
push
xchg
push
adc
mov
inc
shrb
aam
jmp
push
ss
ds
stos
jb
mov
dec
fwait
jmp
xchg
fldenv
lds
cmp
lods
jnp
xor
xchg
mov
xchg
sbbl
mov
les
xchg
mov
fistpll
dec
mov
add
sbb
mov
push
jns
shll
stc
lret
ja
imul
nop
lret
push
cmp
clc
cmp
outsb
mov
stc
roll
xchg
test
xchg
fstpt
negl
mov
mov
pop
sub
xor
adcl
jb
sbb
inc
cmp
cld
fidivrl
leave
sbb
pop
mov
and
push
div
xchg
call
test
pop
mov
mov
lods
sbb
imul
xchg
sbb
sub
cmp
xor
pop
pop
rclb
cmp
andl
testb
loopne
clc
test
orl
pop
dec
dec
outsb
adc
adc
ja
sub
sub
ret
shll
loope
fwait
push
out
lahf
jmp
mov
js
mov
sahf
add
cmp
cmp
test
inc
test
dec
jge
pusha
mov
cmp
mov
stc
sbb
test
inc
test
mov
push
cld
jo
fisttpll
aaa
bound
sahf
add
mov
ficomps
lahf
loop
sub
inc
fwait
add
andl
test
pop
xchg
repz
push
hlt
scas
push
mov
popf
lea
loop
jo
mov
xchg
pop
andl
mov
mov
imul
and
loope
hlt
xchg
outsb
int
fnsave
pop
push
outsb
mov
out
mov
insl
sbbb
jnp
and
cmp
sub
push
mov
subb
mov
xor
pop
or
daa
arpl
repnz
jl
pop
dec
and
ljmp
ljmp
or
pop
pop
jl
lret
outsb
push
xor
ljmp
inc
sbb
test
mov
icebp
jne
jb
icebp
mov
mov
jmp
pushf
add
loopne
cmpsb
lock
and
jle
into
jg
invd
and
push
arpl
xor
mulb
fwait
jbe
negb
jae
cmp
cmc
adc
and
in
fbld
push
mov
aam
lahf
push
sahf
push
fldcw
dec
faddl
addl
stos
dec
mov
push
dec
and
add
pusha
mov
mov
in
hlt
addr16
jmp
mov
lods
mov
sbb
lds
fildll
sar
pop
pop
test
pop
cltd
xor
dec
jb
pop
cmp
push
jmp
mov
movb
cmp
or
and
xchg
xchg
call
sahf
mov
or
imul
ret
cmc
inc
xor
gs
stc
mov
mov
sbb
cmp
sub
aas
repnz
int
sbb
mov
in
pusha
sub
sar
lods
lahf
push
leave
fcomi
movsb
and
push
bound
sub
and
pop
movsw
sahf
or
out
sbb
mov
push
sbb
lea
das
int
xchg
xchg
sub
xor
je
add
pop
pop
fsub
xchg
ret
dec
dec
sub
push
cmpsb
xchg
pop
jnp
pop
add
jge
jo
lods
lahf
and
pushf
outsb
pop
sarl
filds
inc
jbe
pushf
jo
dec
ss
rcr
lock
push
inc
popf
pop
movsl
fmull
faddl
mov
fimuls
mov
sub
ljmp
pop
cmpsb
dec
lods
mov
jecxz
out
pushl
sub
pop
mov
pop
stos
push
negb
aas
cmp
xchg
dec
sbb
push
sar
dec
push
sub
clc
sbb
push
xor
clc
mov
xchg
test
int
mov
jbe
inc
adc
push
mov
adc
push
hlt
add
lods
bound
push
jecxz
cli
jmp
dec
addr16
cli
or
roll
xor
mov
cltd
or
jne
push
je
cmp
out
pop
and
aaa
pop
sub
ds
stos
outsl
in
add
and
push
pop
mov
and
add
pop
adc
add
stos
subl
sbb
xor
leave
pop
sub
mov
out
ficomps
inc
xchg
and
arpl
cmp
movsl
enter
insb
cmp
mov
filds
xchg
or
cmp
sub
ret
mov
sbb
xlat
xchg
jg
dec
rcrl
dec
lcall
cmp
stos
mov
bnd
push
out
sar
cmpsl
add
scas
mov
inc
xor
je
cli
sub
mov
mov
mov
xchg
dec
into
jp
or
nop
es
add
negb
xor
movsb
sahf
mov
dec
adc
mov
fildl
inc
scas
popf
movsl
andb
dec
push
test
out
push
cmpsb
cmp
cld
iret
xor
push
icebp
mov
pop
fs
stos
ret
fmuls
leave
dec
int
xchg
out
sbb
sbb
cmpsb
dec
adc
insl
mov
push
ss
sub
xor
jo
aaa
ds
inc
sbb
dec
xchg
adc
xchg
sub
sub
nop
outsl
xchg
lahf
rorb
add
hlt
mov
xchg
das
mov
lcall
jo
addr16
out
scas
mov
pop
test
pop
addr16
out
movsl
in
gs
stos
inc
jmp
add
inc
popf
mov
push
es
cli
es
xlat
out
sub
xor
pop
loopne
fimull
aas
mov
dec
daa
mov
leave
lods
cmc
mov
xchg
popa
test
sbb
pop
push
rcll
jnp
mov
aam
icebp
jg
fildll
lahf
xchg
mov
mov
loope
mov
jmp
sub
mov
push
scas
jo
add
aas
adc
push
int
add
out
sar
or
bnd
cmp
scas
cs
or
lret
gs
xchg
cmc
in
cmp
call
scas
dec
mov
and
mov
lods
lret
cmc
dec
dec
aam
aam
jle
inc
in
jnp
mov
lods
popa
cli
jbe
test
sub
sahf
out
sub
ja
adc
loop
sub
adc
in
icebp
mov
insb
inc
je
dec
imull
js
scas
idiv
idiv
adc
pop
push
int3
xchg
nop
idiv
dec
stc
add
mov
jb
push
sbb
sub
and
jo
fs
call
mov
loopne
lods
inc
jns
fisttps
pop
icebp
and
shrl
mov
flds
sbb
js
adc
push
cmpl
negl
inc
div
imul
add
sbbl
sbb
jne
pop
push
add
push
movsl
mov
ds
cmc
movsl
sbb
xchg
enter
in
push
dec
mov
shll
or
dec
pop
sbbb
int3
mov
cld
dec
inc
dec
adc
movsb
arpl
jb
dec
std
mov
cltd
pop
mov
inc
cmp
adc
dec
jb
dec
or
jl
jg
jnp
clc
mov
push
hlt
or
imul
and
ficompl
pop
sarb
mov
push
jge
add
movsb
andl
jns
jbe
push
xchg
dec
fstpt
xchg
fdivrl
sar
xlat
add
inc
mull
out
xlat
aad
into
sub
pop
mov
rclb
inc
lret
int
dec
lahf
push
test
pop
test
fsubl
sub
repnz
push
fnsave
inc
test
lods
orl
lret
lahf
lahf
or
jnp
in
push
mov
dec
xchg
pop
xor
fwait
jns
add
mov
sub
cwtl
fidivs
test
cmp
push
gs
xlat
sub
jne
pop
sbb
jecxz
je
mov
or
pop
add
into
scas
pop
or
outsb
mov
addr16
and
mov
mov
mov
xor
lret
mov
cmp
pop
xchg
lret
sub
mov
mov
and
sub
lahf
dec
cmpsb
test
cmp
and
mov
out
xlat
jbe
js
cmpsl
les
jae
add
mov
stos
fbld
dec
pop
and
pop
xor
pop
hlt
dec
jno
xor
adc
ljmp
gs
jns
leave
notb
pop
icebp
jo
fld1
adc
je
nop
sti
add
xor
mov
dec
and
jg
pop
adc
stos
idiv
insb
dec
push
sub
mov
shll
bound
jg
push
je
loope
mov
mov
std
sbb
pop
mov
scas
das
sub
add
mov
loopne
push
sub
lds
out
out
push
lret
insb
clc
hlt
mov
or
xchg
push
les
push
sub
lahf
pop
popf
in
fnstenv
sub
mov
pop
lock
jno
sbb
mov
mov
pusha
loope
jp
ds
cwtl
enter
test
lds
cmp
pushf
xlat
jmp
push
fs
pop
lret
cmp
or
push
xlat
mov
xor
int3
sbb
imulb
mov
sbb
mov
jp
mov
sbb
mov
pop
cltd
call
and
sub
jne
and
mov
shl
pop
push
xchg
pop
repnz
scas
aaa
jo
subl
pop
subb
or
sbb
gs
pop
testb
jbe
push
pop
sub
insl
push
inc
mov
xor
enter
ret
add
fcmovne
or
dec
jge
mov
rcl
mov
fistpl
fildl
dec
xchg
lret
lret
sti
ret
repnz
cmp
push
mov
stos
sarl
jns
ljmp
jge
xchg
mov
xor
clc
scas
cmp
inc
push
cld
jmp
sub
cmp
sub
aad
nop
xor
dec
xchg
popf
fwait
xchg
mov
mov
mov
movsb
add
and
pushf
testb
roll
mov
pop
pop
jne
das
cli
pop
cmpb
test
les
or
fld
outsb
xchg
push
sbbb
aaa
or
outsl
out
mov
sbb
fs
in
adc
add
push
push
lock
ret
sub
cli
sbb
lret
lret
shlb
les
sub
or
adc
xchg
fsub
rcrb
push
rorb
sub
movsb
or
out
cmp
push
mov
enter
lahf
idivb
out
shrb
je
lcall
sahf
sub
rcrb
and
lcall
adc
push
sahf
dec
out
cmp
fwait
cmp
xchg
lock
out
jecxz
mov
xor
mov
fadds
lea
cmp
xchg
shll
lret
out
lods
outsl
daa
cmp
cli
jp
mov
insl
fmul
fstps
std
add
mov
mov
sti
inc
movsl
stc
adc
dec
pop
call
test
out
mov
lds
adc
push
xor
dec
mov
dec
pop
pop
cmp
movsb
xchg
xor
xchg
call
sbb
sub
sbb
popf
sub
jle
push
pop
dec
adc
xchg
cmpsl
sub
cmpb
std
push
in
lret
sbb
enter
aad
idivl
sbb
sbb
iret
dec
inc
cmp
nop
mov
in
ret
or
cmc
addb
std
les
int
push
negb
int3
lods
out
add
stos
cld
inc
daa
push
pop
cmp
lahf
mov
mov
je
pop
scas
ja
push
dec
push
addr16
jp
xor
or
and
mov
jb
lea
mov
sub
out
ss
bound
dec
andl
dec
add
cltd
sbb
testl
add
jne
and
fcmovbe
in
jno
xchg
in
pop
jns
mov
dec
xor
aam
push
push
or
lock
add
repnz
mov
pop
repnz
push
xchg
fld
add
xor
pop
in
inc
dec
inc
sbb
das
add
mov
and
ss
mov
cmpsl
imul
xchg
scas
outsb
mov
repz
fxch
jmp
sbb
mov
pop
xchg
lcall
mov
shll
sub
push
inc
les
cs
repz
clc
sub
and
mov
add
cld
pop
adc
push
in
stos
out
push
xor
sub
popf
add
dec
jns
mov
adc
jae
mov
pop
je
cmp
push
out
movl
cmp
outsb
adc
pusha
je
ret
sub
push
movsl
imul
cmpsb
push
fwait
xchg
loope
pop
dec
xor
sub
mov
add
cmpsl
es
add
push
mov
addr16
daa
lock
ret
shlb
jmp
outsb
xor
adc
push
ret
push
shr
out
test
pop
adc
mov
fucomi
sti
cs
xchg
mov
insl
loopne
dec
rcll
inc
movsb
jl
lcall
sub
push
mov
push
aaa
push
movb
inc
adc
outsl
gs
into
cld
mov
and
aaa
cmpsl
push
cs
mov
enter
fisubrs
jo
idiv
pusha
or
enter
ljmp
mov
cs
sub
pop
cmc
pop
ret
cmp
dec
or
stc
pop
inc
js
lods
dec
and
test
ljmp
cltd
pop
mov
cmp
sbb
mov
fwait
insl
ficomps
mov
test
divb
fisubs
stos
addb
out
push
dec
mov
adc
lahf
push
call
pop
cmp
inc
xchg
in
xor
sub
dec
stos
add
mov
push
fstps
dec
sbb
inc
push
imul
ret
mov
xor
dec
dec
inc
and
scas
sbbb
xchg
add
aas
push
mov
pop
int
mov
jbe
hlt
mov
mov
mov
je
shlb
mov
dec
or
loopne
scas
in
out
xchg
lahf
fimull
cld
pop
call
sarb
push
jb
mov
repz
sbb
or
xchg
dec
push
aam
xchg
ret
lea
movsb
push
adc
add
jle
in
ss
sbb
rcrl
repnz
rorb
rorl
jl
shlb
jmp
pop
aaa
cmp
mov
mov
sbb
xchg
pusha
and
jmp
enter
adc
flds
shl
ds
lods
mov
outsb
std
lea
push
imul
stos
xlat
repnz
js
mov
xchg
sarb
cmc
inc
test
lock
inc
sbb
ficomps
push
loop
fmull
adc
push
out
adc
jo
rcl
sub
inc
sbb
pop
ds
pop
ret
in
cmp
fldenv
cmp
jbe
mov
or
mov
aad
lret
loope
aam
daa
sub
push
cmpsl
nop
lock
fadds
call
or
movsb
sbb
push
out
push
xchg
jb
sub
jp
add
ljmp
pop
hlt
push
je
sbb
sahf
xor
mov
and
ret
jmp
loopne
push
clc
dec
sar
push
cwtl
je
jb
mov
addr16
into
add
nop
xchg
stc
sbb
cmpsb
pop
fnsave
int3
ss
clc
loopne
inc
outsl
sbb
inc
shl
mov
fidivs
jle
lcall
shrl
pop
test
sbb
jo
xchg
mov
call
loope
lcall
xchg
icebp
ljmp
pusha
xchg
fists
or
repz
mov
jge
xchg
and
push
xor
add
jge
icebp
andb
stos
cmp
add
xchg
and
inc
xlat
in
pushf
mov
mov
inc
test
jb
mov
push
out
daa
leave
jbe
jp
xchg
dec
fistpll
fwait
rdpmc
dec
mov
mov
jmp
push
fcompl
jge
sahf
jp
aad
jo
ja
negl
stc
push
lahf
adc
mov
icebp
orl
frstor
cmp
out
bound
dec
add
sbb
popf
mov
das
push
sub
data16
test
sub
pop
test
popa
icebp
jle
xchg
add
mov
mov
jmp
inc
aaa
cmp
imul
jp
jecxz
push
dec
cld
das
subl
mov
push
add
outsb
xor
gs
adc
xor
call
aaa
jb
arpl
jnp
fadd
sbb
nop
adc
jbe
leave
das
dec
sbb
mov
sub
push
mov
pop
sub
nop
dec
lret
fstps
scas
xchg
std
stos
pop
mov
xlat
inc
fcmovu
inc
and
cs
mov
ds
push
imul
arpl
movsl
ljmp
cltd
sbb
js
jp
mov
mov
mov
std
mov
and
repz
shll
sub
dec
and
leave
rcl
jne
push
jmp
out
push
shll
mov
cmp
or
cmp
push
or
aaa
nop
jns
xchg
scas
rol
cmc
or
data16
out
fstl
sub
xchg
mov
scas
fmul
out
push
mov
push
sbb
jbe
in
sbb
pusha
popa
fists
stos
inc
xor
add
pop
xlat
push
add
mov
jmp
sub
decb
sub
andl
xchg
aaa
je
jmp
push
rcll
repz
ja
push
mov
pop
fsubs
adc
imul
dec
adc
add
mov
jl
pop
lds
outsb
int
jno,pt
aam
or
clc
xor
es
pop
adc
in
dec
xchg
push
movsl
jae
xchg
test
loop
adc
out
sbb
inc
mov
in
in
mov
in
add
data16
jne
pop
or
cmp
xor
fdiv
xchg
xor
dec
in
aaa
stos
jnp
adc
cmp
pop
das
adc
pusha
pop
clc
mov
lock
pop
std
cmc
mov
mov
adc
and
mov
xlat
iret
jbe
mov
adc
jnp
pandn
xor
es
pop
cmp
imulb
loope
std
pop
inc
mov
sahf
sub
xor
arpl
imul
or
sti
call
in
leave
pusha
popf
test
pop
push
inc
push
test
mov
fidivs
aam
dec
push
and
add
jge
cld
add
aaa
add
rolb
loop
dec
or
mov
lret
stos
inc
mov
ja
mov
pop
ret
push
sbb
cltd
lods
inc
jb
sahf
pushf
xchg
lahf
xor
or
push
imul
jno
jb
and
inc
loop
mov
loop
mov
or
pop
imul
aam
inc
hlt
xor
inc
inc
add
jbe
sub
lret
push
mov
xlat
jnp
lret
iret
or
ret
cmc
adc
in
ljmp
int
adc
sbb
jns
loop
cmp
jnp
sbb
cmpsb
fcoml
cmp
in
sbb
dec
sub
adc
inc
or
jb
bound
push
or
faddl
fs
shlb
mov
sbb
fwait
shrb
xchg
jp
insl
loopne
mov
add
lods
mov
xor
jnp
in
sub
ljmp
testb
adc
add
push
icebp
sbbl
dec
fistpl
mov
dec
inc
add
mov
in
and
out
mov
fs
data16
fcmovb
jmp
push
in
pusha
jb
sbb
cmp
mov
loope
xlat
imul
insb
mov
and
es
imull
test
fbstp
xchg
adc
in
out
insl
sub
cmp
popa
sub
inc
push
push
xor
test
mov
repz
mov
xlat
sti
pop
test
xchg
and
insb
ljmp
lret
adc
sub
xchg
mov
dec
les
xchg
mov
ret
sub
pusha
cwtl
fwait
ljmp
inc
pop
outsb
cmpsb
test
push
repz
dec
jl
imul
in
in
sbb
push
es
fmul
sbb
push
insl
push
ss
dec
lds
pop
push
aas
jns
leave
add
fnstcw
ret
into
cmp
add
lahf
sti
ret
cmpsl
shll
lret
popa
inc
sti
out
pop
mov
jmp
or
or
into
push
xchg
fsubrl
mov
push
sbb
outsb
pop
mov
mov
push
and
into
add
mov
xchg
call
stos
roll
sbb
repnz
aad
lahf
sbb
dec
popl
sahf
xchg
std
sbb
ljmp
dec
push
mov
addr16
pop
mov
pop
fcmovb
add
out
xor
sub
add
dec
fimull
sub
jns
mov
or
xchg
adc
mov
and
addb
int3
scas
add
outsl
mov
ja
mov
or
xchg
adc
or
rdpmc
cmpsb
data16
sbb
xchg
movsl
and
pusha
out
add
cwtl
xchg
dec
or
fists
lret
inc
int
adc
xchg
call
pop
xor
sbb
dec
cmp
jno
gs
fisttpl
lret
clc
lods
js
xor
insl
push
insb
add
es
cmpsb
xor
pop
repnz
xchg
nop
ss
aam
in
jmp
xchg
push
mov
sbb
inc
std
cmpsl
cmp
mov
pop
adc
dec
hlt
xchg
or
mov
cwtl
int
mov
fisubs
lahf
out
cs
inc
push
es
and
popa
or
lcall
sub
fsubrl
mov
push
or
insb
aad
inc
int
jns
adc
mov
enter
loop
mov
dec
sahf
test
pop
push
aam
adc
jecxz,pt
inc
sahf
push
cmc
mov
or
dec
jle
cmp
push
jg
loope
xchg
shll
xor
shlb
mov
test
adc
jae
sbb
mov
adc
addr16
cmp
fs
shlb
push
ds
stc
pop
sarl
scas
add
pop
sbb
repz
sbb
push
dec
and
mov
push
sahf
sti
outsb
testb
sti
push
xor
sub
push
pop
fisubrl
or
sub
sub
shlb
cmp
jg
repnz
inc
or
stc
push
popa
mov
mov
loopew
mov
movsb
jbe
add
or
mov
xchg
or
add
mov
jno
mov
or
xchg
inc
aas
fwait
xor
cmp
xlat
xor
stc
jb
icebp
mov
cmp
cmp
cmpsl
mov
sbb
sahf
adc
add
xor
lret
nop
out
in
clc
out
mov
push
in
outsl
mov
dec
inc
bound
mov
scas
in
ja
out
pop
call
mov
xor
pop
pusha
sbb
cli
fsubp
mov
je
and
add
fsts
cmp
enter
adcl
push
inc
mov
cmp
cmp
scas
jbe,pt
data16
xor
adc
xchg
or
sbb
std
adc
cmpsl
mov
out
clc
out
test
test
push
push
sub
dec
xchg
iret
mov
fmulp
jp
adc
repnz
addr16
fsubrs
sbb
insl
mov
and
xchg
js
cmp
mov
lock
sbb
jp
sub
dec
jle
pop
and
cmc
cmpsb
lods
sbb
stos
stos
xchg
in
jbe
xchg
inc
mov
and
addr16
lea
faddl
add
shrb
test
movsb
inc
pushf
dec
pop
fwait
push
mov
inc
jns
and
sbb
inc
push
movsl
cmp
addl
mov
sahf
push
pop
or
mov
mov
adc
int
mov
sub
sbb
dec
cmp
and
and
fmull
or
cs
pop
insb
jl
xchg
bound
scas
outsb
inc
out
mov
mov
pop
fmull
xchg
push
mov
cli
xor
sub
shlb
xor
mov
add
cmp
ret
aaa
retw
push
fldcw
fs
and
lea
or
push
mull
shlb
mov
rolb
ret
in
or
mov
cwtl
mov
dec
push
dec
cwtl
lock
jo
cmp
add
jmp
inc
test
rolb
push
shlb
adc
sub
dec
icebp
mov
shll
jnp
ljmp
pop
inc
mov
in
pop
jl
xor
push
or
in
into
aad
scas
hlt
sub
inc
push
cltd
mov
inc
addr16
leave
imul
test
rcrl
cs
test
jnp
mov
out
out
cmp
push
out
dec
in
dec
mov
aam
or
jl
jl
lret
mov
xor
sbb
xor
in
test
sti
bound
addb
mov
push
inc
adc
inc
aaa
mov
inc
jmp
cmc
adc
cmp
ret
adc
push
movsb
sub
adc
shll
insl
loop
in
nop
mov
mov
ds
cmp
adc
das
mov
jg
in
addb
mov
xlat
or
bsr
and
mov
cmp
popa
int
sbb
cltd
cwtl
jb
mov
pop
and
adc
xor
mov
inc
dec
xchg
xchg
add
adc
lods
inc
dec
fnstsw
setp
mov
mov
call
in
pop
mov
data16
mov
pop
mov
mov
pop
pop
icebp
add
repz
mov
out
pop
bound
mov
inc
repnz
loop
push
cwtl
dec
sar
add
jle
and
jl
lret
aaa
negl
gs
insl
mov
xor
popa
scas
jle
insl
adc
and
out
cmp
adc
or
adc
push
fsubp
mov
dec
andb
stos
xchg
mov
repz
sar
sahf
cmp
adc
sbb
insl
jns
ss
insl
mov
xor
or
xlat
jecxz
das
aas
ficomps
mov
bound
insb
xchg
sbbb
pop
xchg
ficomps
xchg
repz
inc
push
xchg
cmpsl
xor
sub
lds
sbb
loopne
mov
cli
push
enter
sub
or
xchg
mov
ret
fwait
lahf
aam
das
jae
sarb
pop
daa
sbb
sbbl
push
out
in
stos
xchg
or
test
imul
jge
aam
or
into
fwait
add
xchg
arpl
mov
mov
jnp
lds
or
cmc
inc
jb
das
dec
xor
sbb
adc
xchg
daa
jl
push
mov
cmp
movsb
into
sti
outsb
ficoms
pop
cltd
xchg
pop
push
push
push
cwtl
fwait
sub
lock
je
dec
in
pop
call
mov
push
mov
adc
enter
das
mov
adc
loop
xor
lret
xchg
xchg
cmp
dec
dec
decb
fisubrs
xchg
pop
add
and
movsl
dec
mov
insl
cmpsb
popa
push
jle
fildl
or
scas
mov
push
pop
mov
sarb
fwait
mov
lds
or
mov
gs
or
cli
mov
mov
int
lcall
pop
cmp
pop
int
lret
add
push
lock
std
adc
adc
lret
rol
lret
das
pop
jg
cmc
icebp
pop
push
push
adc
jecxz
lods
loop
pop
repz
lds
inc
insb
push
ret
aam
imulb
push
pop
xchg
stos
mov
jl
cmp
push
icebp
xchg
inc
push
adc
sub
dec
nop
xor
es
lea
int
pop
mov
ss
jp
pusha
cmpsb
loopne
imull
push
jbe
dec
test
repz
pop
cwtl
mov
dec
xor
push
fs
ss
inc
ret
sbb
in
loopne
push
mov
or
outsl
ret
lcallw
pop
gs
and
mov
or
sub
xchg
aaa
addr16
dec
xchg
dec
in
sbb
dec
xchg
inc
mov
bnd
sbb
sbb
jl
and
or
fldcw
sbb
sbb
notb
sub
std
xchg
out
cmpsl
iret
push
mov
out
jb
jmp
adc
dec
cli
mov
data16
js
stos
or
repz
sbb
js
adc
mov
js
pop
sub
daa
xchg
ret
pop
imul
mov
push
stos
jae
or
sbb
ljmp
mov
jb
jl
repz
adc
cmc
out
lret
lea
lock
jns
pop
mov
adc
push
popf
subb
pop
jo
fwait
das
jmp
xor
addr16
cmp
movsl
leave
shrb
leave
cld
mov
jmp
push
je
or
and
bound
adc
cmp
cmpw
and
push
into
inc
ja
fsin
pop
fcomps
mov
flds
add
mov
inc
ret
pop
orl
or
push
lods
aaa
aam
pop
sub
imul
push
adc
dec
or
out
push
in
cmp
lret
rolb
push
inc
scas
mov
rcr
inc
outsl
cltd
push
je
adc
jb
lds
xor
xchg
movsl
into
sbb
mov
nop
stos
mov
or
mulb
adc
loop
ja
iret
pop
push
pop
dec
pop
jl
mov
mov
xchg
int
push
or
xchg
xchg
cli
lock
enter
sub
je
jmp
jge
dec
shll
xchg
fadd
fldt
sbb
test
push
ja
xlat
inc
or
stc
dec
lret
adc
ret
mov
ja
push
push
xchg
jns
push
mov
and
roll
and
xchg
call
sahf
sub
out
mov
shrb
sbb
sbb
sbb
test
stc
gs
popf
adc
adc
cmc
pop
xchg
or
push
and
jbe
xlat
into
or
push
add
pusha
repnz
ret
aaa
xor
lret
test
or
aas
mov
or
fs
jo
hlt
push
sbb
xchg
xor
jge
sar
pop
add
push
fstp
or
call
test
push
leave
push
in
call
sub
mov
or
xlat
inc
inc
cmpsb
and
lea
adc
mov
inc
dec
out
mov
pushf
mov
sub
mov
sbb
movsb
cmp
or
or
lcall
add
jmp
stc
push
push
stos
adc
pop
cltd
xchg
mov
outsl
cmc
mov
das
adc
push
shrl
jns
dec
movsl
je
js
lods
xor
test
mov
pop
imul
js
leave
dec
or
mov
push
push
pop
enter
dec
push
mov
mov
cmpb
and
out
dec
fs
sbb
fimuls
testl
pop
or
mov
shlb
sub
in
push
mov
inc
inc
icebp
sub
jae
push
or
pop
xor
mov
add
or
in
mov
movsb
xor
in
roll
mov
test
pop
lock
sbb
sbb
sub
xor
fdivrl
inc
pusha
jp
dec
xor
sub
mov
mov
outsb
loope
push
bound
andl
arpl
inc
ret
out
iret
testb
enter
jns
mov
arpl
ljmp
push
cwtl
jecxz
dec
out
push
mov
in
ljmp
xchg
or
cmp
insb
shrb
idivl
and
jo
hlt
inc
xlat
das
cmpsl
cwtl
iret
repnz
ljmp
pop
xor
addl
xchg
pop
lret
inc
xchg
iret
dec
sbb
mov
mov
dec
sub
sbb
into
rorl
je
push
shl
loope
std
or
pop
aam
and
data16
in
jmp
jb
mov
push
rcl
nop
test
pushf
adc
mov
dec
iret
hlt
adc
pop
loope
inc
lret
or
adc
aad
fisubl
call
and
clc
xchg
add
jne
mov
adc
mov
push
les
push
sbb
stos
aaa
add
insb
and
xlat
and
dec
dec
sub
out
mov
stos
cmp
sub
jnp
and
repz
fwait
jle
rcrl
jmp
mov
jne
sub
and
adc
xor
xchg
in
pusha
fs
push
add
and
sbb
es
loope
mov
pop
xchg
addb
testb
fdiv
stos
cltd
mov
lcall
pop
scas
pop
xchg
in
pop
std
cmp
lods
aad
xchg
sub
dec
push
push
cmpsb
loope
andb
fwait
mov
outsb
fldt
xchg
push
xchg
pop
popf
rclb
and
sub
call
mov
jns
add
xchg
sub
and
jge
fstp
inc
daa
push
fs
mov
incl
arpl
out
xor
out
push
mov
cmp
xchg
cmp
cmpb
dec
mov
out
pop
insl
or
roll
inc
bound
loope
pop
dec
mov
lea
mov
add
xchg
rcrb
imul
jp
rcrl
cwtl
lock
scas
pop
jge
mov
inc
sti
pushf
dec
or
xor
mov
nop
sub
js
aam
dec
fsubl
out
dec
sub
lods
movsb
jg
paddw
into
psllq
idivb
divb
imul
inc
inc
adc
xchg
scas
sbb
mov
test
call
push
xorl
mov
rorl
ffreep
sbb
push
in
test
fwait
adc
dec
xchg
test
xchg
jp
sahf
loop
sub
call
das
leave
sbb
gs
mov
sarb
movsb
and
clc
jb
or
xor
scas
mov
or
pop
push
dec
inc
nop
add
adc
imul
outsl
test
xor
xor
sub
out
xchg
inc
andl
fiaddl
jnp
adcl
imul
cltd
add
sub
ds
mov
aaa
test
xor
outsb
mov
divl
or
popa
or
sbb
sbb
pop
sub
testl
mov
imulb
iret
dec
and
and
test
scas
and
sub
add
push
mov
push
cltd
out
sahf
and
fadd
push
incl
repz
xchg
rcrb
sti
push
sbb
sub
lods
clc
scas
mov
dec
xchg
in
push
les
addr16
jge
lcall
adc
fildl
xor
fcmovnbe
cwtl
call
clc
cld
or
cmc
mov
ret
xorl
xor
outsb
movsb
add
mov
pop
mov
imul
cld
inc
daa
adc
pop
push
cmc
div
std
dec
lods
call
mov
jae
push
outsb
mov
lock
es
dec
mov
shl
push
notl
ja
ja
xchg
adc
cmpl
lea
mov
scas
int
push
cmp
sahf
and
repz
in
adc
ret
addr16
cmp
into
loop
rcll
aaa
sbb
popa
sub
pop
fwait
xor
and
adc
cmpsl
mov
lods
orb
add
scas
sbb
and
mov
cmc
fcoml
mov
push
shll
test
fcomps
pop
xor
lcall
fiadds
push
mov
mov
xchg
jae
test
enter
testb
push
mov
pop
idivl
ljmp
jnp
cmp
mov
sbb
insb
sbb
aam
sub
es
inc
mov
pop
push
and
add
std
pusha
in
jo
add
stos
movsl
push
xor
test
mov
lds
sbbb
push
push
ja
jae
mov
shrl
sbb
aaa
dec
sub
push
nop
fidivrs
bnd
or
jo
dec
jne
lock
mov
and
scas
out
pop
xchg
xor
mov
ret
in
push
pop
and
lock
pusha
call
mov
jmp
cmc
aad
xlat
scas
inc
out
push
cmc
mov
out
sahf
ljmp
inc
adc
mov
xor
dec
in
lahf
out
mov
mov
inc
inc
mov
mov
xchg
mov
pop
cvttps2pi
out
push
mov
shr
popf
sbb
dec
inc
dec
bound
jl
test
xor
mov
stos
cli
push
hlt
ret
imul
mov
fdivrs
popa
mov
iret
add
in
ret
dec
inc
pop
sbb
add
xor
enter
pop
fneni(8087
sub
or
inc
mov
scas
lcall
push
mov
pop
out
inc
lahf
into
lock
es
mov
test
ss
pop
mov
jmp
fwait
mov
stos
invd
sbb
das
pop
jecxz
add
xor
inc
das
jle
jle
cwtl
jns
icebp
xchg
sahf
inc
roll
push
sub
fmull
mov
in
sub
data16
and
push
push
jge
loopne
xor
mov
bound
and
fcoms
ss
arpl
test
sbb
adc
push
xchg
xor
push
inc
lcall
cmc
mov
jp
test
push
bound
jb
pushf
push
mov
loope
ret
addr16
jg
dec
lret
and
sar
outsb
icebp
stos
stos
and
xor
mov
int
lock
adcl
or
orb
mov
cmp
lock
iret
mov
dec
inc
das
clc
add
testl
shll
fstp
mov
and
cmp
in
jnp
nop
repz
out
push
test
xor
sbb
or
pushf
xchg
xor
fiadds
xor
push
mov
pop
adcl
cmpsb
and
icebp
insl
xchg
xlat
xorb
sbb
je
bound
aaa
sbb
or
loopne
push
sti
mov
mov
fcompl
jg
add
push
ljmp
sbb
test
xchg
adc
adcb
adc
sbb
add
lods
push
movsl
cmp
test
adc
dec
xchg
pop
jo
inc
sub
repnz
or
jge
in
push
or
clc
repz
dec
jae
xor
add
loope
cmpsl
subb
shl
out
or
pop
cwtl
dec
mov
sub
cmp
pop
cmp
test
and
pop
mov
jb
jb
pop
jmp
insb
lds
sbb
sub
jbe
jl
mov
xor
ds
and
leave
sub
fmuls
xlat
or
es
add
jl
push
or
iret
aas
xchg
jnp
data16
cmpsb
mov
ret
dec
jmp
imul
nop
dec
test
push
adc
nop
cltd
cmpsb
push
jge
mov
fsts
repz
dec
jp
mov
fildll
adc
sub
inc
or
ljmp
pop
xchg
jl
adcl
test
ret
outsb
decl
scas
inc
pop
fcomi
subb
add
sbb
ds
idivb
or
nop
mov
fld
jb
push
cwtl
mov
js
lods
cmp
call
inc
addr16
mov
dec
stos
adc
lods
loop
sub
shlb
dec
adc
mov
out
es
adc
std
sub
mov
xor
test
add
dec
outsb
xchg
add
jo
add
mov
out
lds
or
icebp
adc
push
adc
iret
inc
mov
mov
fisubl
mov
aad
cmp
mov
cmp
gs
push
int3
test
shrl
add
test
mov
pop
sti
stc
shrl
out
xor
cltd
je
aam
xchg
jp
aam
inc
jmp
dec
addr16
mov
cld
icebp
in
clc
cmp
sub
popa
push
xor
mov
inc
popf
aaa
es
push
inc
orl
data16
push
lret
mov
jmp
mov
imul
sbb
sbb
xor
imul
push
and
dec
mov
mov
ja
scas
stc
roll
adc
jb
sbb
mov
mov
mov
shrl
rcr
subl
pusha
out
dec
gs
xchg
imul
in
add
clc
ret
pop
xor
lahf
or
xchg
adc
aas
mov
push
int3
mov
or
int3
sbb
inc
cmc
sbb
cmp
xor
ror
nop
outsb
scas
dec
xor
popa
xchg
ds
arpl
nop
sbb
inc
mov
mov
test
enter
cltd
pop
inc
sbb
xchg
add
pusha
enter
mov
adc
test
fwait
shll
adc
add
or
xchg
xor
leave
loop
jecxz
addb
ss
jmp
scas
lret
jp
fidivrs
adc
dec
stos
scas
ds
fistpll
add
repz
pop
sbb
jl
xchg
sahf
leave
aam
pop
pop
fs
jmp
movsb
mov
push
pop
das
int3
add
add
cmpsl
jnp
push
call
fistpll
mov
cli
les
arpl
ss
dec
add
movl
repz
test
mov
ja
xor
pop
push
mov
sarb
push
jge
add
push
pop
sub
flds
inc
aas
shll
jbe
call
jmp
xor
dec
stc
test
inc
fistl
add
mov
fcompl
ljmp
rorb
les
scas
xchg
xor
cmp
or
xchg
xchg
les
rol
mov
inc
movsb
mov
popa
and
mov
add
push
stos
mov
xchg
inc
movsl
sbb
pop
insb
cmp
fmull
icebp
or
imul
add
decl
adc
and
cli
int3
jno
mov
mov
dec
and
jp
loopne
xchg
dec
mov
mov
or
out
cli
shll
dec
xchg
cmc
inc
pop
mov
loop
inc
mov
push
lcall
add
mov
test
fdivl
cld
xchg
pop
or
int3
ds
cltd
inc
cmp
pop
inc
push
imul
enter
data16
push
pop
setnp
and
insl
test
jno
ss
aam
out
ljmp
xor
cs
xor
inc
add
inc
adc
push
cmc
pop
xchg
imul
or
je
dec
cld
jnp
push
insb
mov
adc
test
dec
popa
pop
ret
lock
add
adc
jecxz
inc
xchg
call
or
out
push
pushf
aam
cmp
aam
push
push
mov
jb
jmp
jb
push
jg
cmp
addb
lods
test
scas
add
push
sbb
cwtl
stos
lret
fadd
mov
push
jno
jns
leave
les
fmull
ljmp
cli
push
pop
daa
data16
cmp
std
insl
icebp
xor
test
cmc
cltd
call
inc
push
rcr
add
inc
inc
xchg
mov
sahf
dec
jle
outsb
sub
mov
push
loop
loope
repnz
jg
sbb
xor
mov
sbb
jl
pop
lds
pop
ss
stos
cmpsb
loope
and
jne
fdivl
jg
pop
jae
xor
int
xlat
lods
cld
xor
sub
out
inc
xchg
test
subl
hlt
jp
pop
inc
loopne
fildll
mov
jmp
stos
inc
push
test
addr16
incb
xchg
fadd
int3
out
mov
push
repnz
idivl
or
ljmp
cli
test
std
leave
in
sbb
inc
dec
mov
cmp
in
mov
ljmp
ja
sbb
movsb
jno
jne
mov
jns
sbb
add
movsb
pop
pop
scas
lret
hlt
pop
sahf
mov
lahf
xchg
xchg
cli
lods
dec
addl
jb
les
rclb
aad
mov
movsl
lahf
adc
sbb
nop
ret
inc
stos
pop
mov
adc
and
cmp
sub
outsb
and
cmp
idiv
aad
push
mov
push
enter
pop
or
jne
in
pop
lcall
push
scas
out
cmp
jo
leave
and
mov
lahf
push
cld
dec
imul
clc
cmp
push
or
mov
push
and
xchg
cltd
pop
mov
push
push
dec
pop
push
mov
imulb
push
jbe
lods
push
loop
inc
sbb
push
lahf
rclb
pop
adc
in
in
and
sub
or
add
fimull
insl
mov
mov
sub
stos
mov
adc
add
dec
repz
mov
aas
pop
or
push
loopne
cmpsl
adc
ljmp
in
lret
pop
das
dec
xor
cmp
adc
dec
mov
arpl
push
cmpsl
push
sbb
dec
orb
xchg
imull
fs
add
push
cmp
and
mov
sub
data16
testl
mov
jecxz
mov
lret
frstor
xchg
cltd
cmpsl
addr16
das
mov
xlat
daa
out
adc
mov
pusha
test
ret
jp
and
fmull
push
insl
push
add
clc
add
xor
push
jnp
jns
mov
movsl
adc
add
das
push
out
dec
lcall
int3
ret
fsubs
jecxz
cmp
mov
jnp
sbb
cmp
sub
push
call
repnz
loope
incb
int
mov
bound
jg
and
cld
adc
sub
inc
and
rcll
pusha
cmp
test
jnp
mov
sub
in
jnp
xor
faddl
dec
jle
shlb
xor
lods
xor
hlt
adc
fstl
jg
cs
addr16
movsl
stc
fsubl
fstpl
lock
lock
test
out
fcomp
lods
inc
pop
push
cmc
out
fwait
pushf
shr
ret
mov
imul
fstpl
mov
and
push
fs
je
lahf
data16
ljmp
test
outsl
shl
movl
rolb
sbb
fwait
dec
push
idivb
hlt
xor
mov
jae
scas
jg
and
push
rcl
push
push
jge
dec
push
mov
jge
jne
jl
adc
les
add
lret
fwait
jg
les
jg
adc
sarb
cmp
jl
shrb
mov
inc
sub
movnti
pop
pop
sub
int3
jmp
cmp
mov
sub
adc
ja
push
pop
into
scas
sbb
pop
mov
rcrl
jno
fimuls
out
je
xchg
or
xchg
fiadds
cmp
pop
xor
mov
dec
in
xchg
mov
sti
ret
cmpl
and
jbe
xor
adc
sbbb
dec
imul
popa
jmp
dec
and
into
sub
es
push
ja
inc
cmp
nop/reserved
mov
jns
xchg
insb
or
add
jno
adc
lret
repz
cld
pop
pop
jns
jecxz
add
test
lcall
cmpsb
adc
xor
loope
pop
sub
jp
adc
dec
and
add
sbb
push
fwait
inc
xorl
jle
out
pop
stos
jnp
ficoms
shll
jmp
loopne
pop
das
pop
dec
out
add
aas
fisttpll
repnz
lcall
mov
fildl
pop
fcoms
mov
daa
pop
xchg
pop
mov
mov
dec
incl
les
dec
xchg
pop
cmp
xchg
sbb
subl
mov
sub
call
dec
xchg
pop
std
int
push
mov
ja
stc
popf
hlt
ret
lfs
outsb
mov
or
imulb
sbb
and
loopne
imul
or
dec
cmpsb
outsl
cmp
push
xor
mov
outsb
insb
call
jo
popf
out
test
push
xor
sbb
imul
push
cli
out
aas
inc
leave
mov
adc
add
roll
pop
inc
mov
xchg
imul
aad
push
int3
cmpb
nop
fildl
and
adc
adc
cmp
nop
inc
add
or
popa
insl
test
or
out
out
or
stos
out
movsl
imul
inc
sbb
repnz
lret
loopne
and
mov
jp
fisubrl
loope
sub
aam
aam
mov
jb
stos
outsl
std
pop
xor
inc
daa
in
jbe
xchg
push
fisttps
pop
jae
cld
ds
call
cltd
mov
loop
or
ljmp
jb
mov
pop
mov
in
shrl
sub
sarl
add
xor
popf
dec
in
push
dec
pop
sarl
dec
lea
push
jnp
test
lcall
push
lock
roll
mov
fcompl
push
or
mov
push
cmp
or
bound
adc
xchg
inc
push
xchg
push
lods
push
add
inc
adc
fnstcw
jmp
clc
jne
add
xlat
sbbl
pop
jnp
cmp
icebp
inc
and
jge
adc
fistl
push
mov
mov
or
scas
push
pop
and
scas
inc
jo
je
mov
in
not
mov
pusha
mov
mov
adcl
inc
add
cmpsb
ss
mov
scas
iret
mov
mov
pop
mov
stos
and
in
pushf
push
pop
in
inc
push
xlat
shrl
xchg
mov
ja
mov
fimull
inc
xlat
mov
and
add
into
sbb
add
fcoms
mov
dec
cmp
shll
xchg
in
lds
sub
mov
int3
insb
test
shll
cmc
xchg
mov
xchg
je
dec
loopne
mov
xor
aas
sub
les
nop
or
inc
ror
gs
insb
sub
cmp
cmc
pop
add
scas
roll
pop
mov
mov
dec
and
loop
dec
repz
ds
stos
sub
cmp
mov
pop
or
je
cmc
int3
test
or
outsl
nop
push
movsb
push
mov
call
add
out
arpl
xchg
mov
ffree
icebp
int3
dec
rol
mov
push
push
imul
mov
arpl
ss
or
or
or
call
xchg
jnp
cmp
push
cmpb
lahf
bound
xor
inc
jge
push
ss
inc
and
out
arpl
icebp
jbe
hlt
stos
jle
cmpsl
or
cmpsl
pop
les
mov
dec
inc
mov
push
mov
loope
mov
xchg
mov
jle
pop
mov
push
fcoms
push
fs
inc
pop
mov
sbb
sub
enter
insl
shll
test
adc
cli
jno
ja
aas
shrb
adc
inc
loop
outsl
lock
and
jmp
mov
add
lcall
push
mov
imul
addr16
jnp
or
jns
xchg
stc
decb
and
cltd
mov
movsb
sub
in
ljmp
pop
xchg
mov
dec
inc
or
mov
movsb
jg
lret
jl
jg
insb
dec
notl
movsl
fwait
div
mov
mov
icebp
add
inc
inc
push
loope
mov
push
gs
push
insb
or
lahf
decl
sti
ret
mov
push
xor
cmp
das
rclb
test
lret
shll
adc
jmp
lret
hlt
cmpsl
cmp
jmp
mov
ljmp
aam
and
mov
sbb
cmp
xor
pcmpgtw
lahf
inc
lret
outsl
jp
dec
inc
xor
test
cmp
outsl
or
pop
aaa
sub
insb
push
xchg
repz
mov
clc
das
ljmp
cmp
dec
jl
sbb
cmp
rorb
or
rcrl
add
push
mov
pop
xchg
mov
call
pop
xchg
cmp
jb
xchg
paddd
xor
lods
in
js
and
repz
pop
gs
scas
clc
rcl
mov
sbb
lahf
dec
adc
pop
mov
jecxz
lods
jo
xor
stos
lea
cmp
and
xor
sub
sub
jns
scas
aas
int3
in
sbb
dec
xchg
mov
pop
cmp
popf
and
add
movsl
test
lods
dec
aad
push
pushf
cs
xor
mov
adc
fldl
js
int
insl
sbb
out
mov
xchg
cs
mov
stc
movlps
stos
sbb
add
adc
iret
jns
or
lods
pop
sbbb
push
xor
fadds
or
push
cmpb
jmp
mov
shll
fnstcw
jb
push
push
loopne
xorb
fdivrl
movsb
dec
push
fwait
mov
and
pop
fcomip
sub
rorl
ret
leave
xchg
sahf
mov
push
mov
inc
sti
mov
mov
aaa
fwait
push
fmull
mov
jmp
addr16
xor
sub
push
push
jl
sbb
adc
jo
jmp
xchg
adc
fs
mov
jmp
dec
fidivs
adc
testb
inc
xor
mov
mov
xchg
mov
test
outsb
dec
scas
je
mov
add
aaa
pusha
std
inc
popf
sarb
in
push
pop
fsubs
int3
lods
hlt
rcll
dec
dec
test
xchg
lods
dec
je
test
pop
jbe
xchg
mov
sahf
fistpll
add
mov
cs
out
fsubs
mull
mov
call
lret
imul
pushf
sbb
mov
push
cmp
sbb
ficoms
les
mov
sbb
out
jb
sub
sbb
cmpb
enter
and
pop
sbb
inc
jnp
sti
fs
mov
fmull
clc
mov
pop
adc
sub
adc
jmp
mov
adc
adc
fistl
push
mov
push
cmp
add
mov
je
sub
push
push
cmpsl
inc
outsl
jg
rsqrtps
adc
js
xchg
jl
push
cwtl
dec
mov
cmp
mov
sar
sbb
out
int3
sbb
jg
dec
repz
xlat
adc
mov
pop
loope
sti
frstor
insl
fnstenv
repnz
cs
push
ret
aam
stos
mov
push
sarb
inc
ljmp
fnstcw
xchg
sbb
add
xlat
outsb
notb
cmp
scas
lds
adc
dec
jne
testb
aam
mov
out
fnstenv
xchg
arpl
enter
xor
mov
or
adc
lret
or
push
or
out
pop
inc
out
adc
mov
xor
sbb
scas
pushf
int
fistl
mov
inc
shlb
or
bnd
dec
add
in
xchg
dec
enter
push
mov
dec
dec
jbe
sbb
pop
mov
fnstcw
xor
adc
rcrl
cld
in
xchg
mov
lea
lcall
inc
subb
adc
push
insb
ss
cld
xchg
xor
sbb
adc
loope
fildl
pop
out
lret
sbb
repnz
sub
rclb
daa
pop
push
and
hlt
fs
insl
jo
icebp
xchg
push
pop
mov
add
pop
cld
jae
insb
inc
pop
out
xchg
push
dec
xor
pop
jge
lock
or
shr
dec
dec
mov
movsb
stos
cmp
inc
iret
jmp
push
dec
pop
pop
jle
test
iret
aas
cmp
jmp
test
ljmp
test
in
inc
pushf
push
mov
adc
jo
mov
push
jle
shr
aad
cltd
mov
jg
out
outsl
xchg
cmp
imul
push
xor
sub
inc
mov
and
repnz
jo
add
xchg
adc
xchg
sbb
push
jae
dec
push
push
mov
sbbb
pushf
push
cwtl
popf
xchg
movsl
mov
movsb
add
scas
add
pop
icebp
mov
mov
pop
cld
adc
jno
cmp
push
jae
lret
lds
sahf
in
mov
inc
addr16
arpl
dec
je
subl
lahf
sarb
leave
push
loopne
ret
shl
dec
sbb
repz
mov
and
mov
mov
push
xadd
leave
stos
loop
sbbl
stc
int3
nop
xchg
insb
and
lds
mov
xchg
ljmp
jecxz
jns
sbb
cmp
cmp
fwait
in
dec
pop
fnstenv
enter
mov
enter
or
mov
cmpsb
cwtl
mov
and
or
mov
int3
sub
lods
cmpsl
jmp
mov
inc
arpl
inc
test
stc
pop
and
xchg
push
add
ljmp
scas
lcall
hlt
stc
sub
testl
int3
shrl
test
int3
rcrl
jecxz
add
inc
aad
mov
sbb
jnp
inc
fadds
push
mov
bound
cs
xorl
mov
pop
sbb
out
xor
and
nop
mov
jmp
int
and
xlat
fs
add
sbb
sbb
dec
ficompl
sub
push
xchg
mov
loop
shl
call
sbb
bnd
jl
push
xchg
insl
and
jnp
in
subl
sahf
fisubrl
into
scas
pop
pinsrw
mov
lahf
leave
jno
orb
or
cmp
pop
fdivl
mov
mov
nop
imul
xchg
and
cwtl
push
sbb
cmc
mov
jg,pt
lods
push
sub
enter
aad
xchg
lods
pop
push
dec
aad
rcrb
cmp
orl
lods
push
push
arpl
add
jb
icebp
and
rorb
rolb
xor
out
mov
js
add
sub
rorl
arpl
mov
repnz
add
jne
outsl
pop
xchg
iret
sbb
mov
push
mov
and
lcall
fwait
out
jle
add
imull
cmpsb
xchg
xchg
sub
inc
sub
mov
jecxz
test
xchg
test
test
sbb
xor
mov
pop
mov
inc
adc
loop
shlb
jae
clc
pop
loopne
es
popf
xchg
fwait
cmp
ret
inc
xlat
mov
cmp
scas
jge
sbb
stos
pop
shlb
jl
add
leave
insl
les
cld
iret
aaa
or
test
jge
je
cmc
fneni(8087
setae
mov
aam
in
mov
adc
scas
sbb
xor
sahf
push
scas
mov
stc
scas
sbb
sub
rcr
cmpsb
rcll
mov
jle
lods
into
sub
push
push
pop
clc
push
jg
dec
adc
sahf
sbb
ret
pop
mov
mov
and
hlt
aam
test
sarb
xor
pop
adc
sti
push
push
pushf
jle
aad
in
out
adc
cmpsl
movl
xchg
clc
cwtl
in
lahf
mov
lret
or
xlat
mov
jl
lret
pop
insb
int3
loope
xchg
dec
add
pop
pop
nop
mov
ss
and
jg
xchg
xchg
ror
push
mov
fdivl
pop
sub
inc
lcall
jmp
mov
inc
jp
push
cmp
mov
fisubrl
addl
cmp
sahf
xchg
push
dec
and
outsl
add
jl
push
sub
sub
sub
call
test
jo
push
mov
outsb
xor
mov
mov
add
dec
fildll
popf
aas
outsl
cmp
ss
ret
mov
mov
or
dec
jg
sbb
pusha
and
nop
shll
inc
ret
sub
push
xchg
roll
outsl
add
arpl
andl
gs
cld
pop
adc
idivl
jo
mov
rorl
sbb
inc
movsb
stos
imul
repz
dec
mov
fidivl
xor
mov
imul
mov
xor
js
or
ja
pop
imul
bound
sbb
inc
mov
or
jp
push
jmp
sbb
xchg
test
jge
lock
and
loopne
pop
dec
mov
sub
xor
sub
cmp
pop
dec
xor
arpl
jne
sarb
add
mov
dec
enter
mov
lret
xor
add
jb
push
loopne
shrb
mov
add
pop
xchg
out
icebp
rolb
pushf
cmp
pshufw
pop
call
aas
add
add
xchg
xchg
repnz
xor
mov
cmp
call
push
sub
xor
adc
add
lcall
cli
insb
test
sbb
sti
mov
call
adc
push
jg
mov
jns
mov
sti
jp
push
jo
push
push
imul
mov
sub
dec
negb
cmp
fisubrs
inc
sub
fwait
xchg
sub
out
icebp
rcl
adc
je
pop
movsb
dec
push
mov
push
stos
fsts
and
sbb
dec
xchg
pop
test
jns
cmpsb
icebp
cli
inc
mov
xor
shlb
pop
pop
inc
adc
pop
xor
aas
adc
xor
add
out
fstpl
pop
mov
test
cltd
push
out
aaa
fsubs
push
inc
sbb
add
sarb
int3
test
movsl
or
data16
fisttpll
dec
sbb
out
sbb
ja
and
orl
add
int
jbe
jle
and
fisubrl
lods
push
push
lahf
sub
xchg
aaa
sub
je
shrb
orb
popa
jle
daa
or
cmp
xchg
movsb
lret
push
aad
or
add
popf
cltd
jecxz
lds
mov
cmpb
hlt
xor
pop
cmpb
dec
pop
test
jg
mov
pop
leave
sbb
dec
dec
or
dec
scas
pop
movsl
cltd
inc
jmp
js
icebp
push
fldl2e
fsubs
add
xchg
or
cs
xchg
jge
and
sahf
cmpb
out
aad
shrb
adc
std
mov
cmp
mov
imul
aas
adc
popa
cwtl
popa
cmpsl
sub
dec
jge,pn
push
push
movsl
xor
outsl
daa
mov
add
sub
cmpsb
dec
push
dec
mov
mov
test
out
jmp
out
movsl
push
dec
sbb
cmp
mov
add
pop
pop
xchg
mov
mov
je
pop
ret
adc
addr16
mov
je
stc
sub
add
jns
sub
je
dec
aad
jno
gs
cltd
sbb
xor
cli
movsl
orb
mov
cmp
dec
cwtl
data16
imul
add
int
dec
lret
gs
xchg
out
sbb
es
pusha
in
or
dec
jp
ret
or
cmpsl
adc
in
pusha
and
push
jno
dec
sub
lret
xor
jns
xor
mov
pop
add
pop
dec
scas
js
xchg
pop
jmp
or
xor
inc
jle
int
and
popf
mov
mov
mov
insl
sub
lahf
rorb
inc
jo
cmpsb
mov
pop
jo
decl
adc
add
lea
sarl
test
push
jmp
sub
push
ljmp
add
pop
out
gs
cs
adc
mov
dec
lods
mov
jns
push
pop
jp
pop
or
insb
mov
xchg
test
inc
mov
daa
jg
mov
stc
xchg
aad
stc
imul
ret
loope
cmpsb
mov
int3
rolb
daa
movsl
pop
pushf
cmp
dec
mov
inc
lea
data16
out
pop
or
pop
jae
pop
xchg
fisttps
ret
push
fs
int3
mov
jno
push
aas
rcl
sub
hlt
xor
or
push
sub
cmp
dec
aas
das
loop
dec
sbb
js
je
mov
test
mov
jg
enter
fsubrl
das
adc
in
mov
dec
pusha
pop
mov
fmull
fstps
mov
sahf
loopne
sahf
add
mov
xchg
xlat
fstpt
aam
lret
dec
sub
popf
mov
sbb
cli
dec
stc
mov
mov
sbb
jo
sub
jnp
pop
outsb
mov
and
clc
push
testb
or
mov
cli
pop
dec
jle
loopne
jbe
mov
inc
aaa
xchg
push
add
mov
lret
xchg
outsl
pop
xor
and
xor
cwtl
adc
mov
mov
std
in
aaa
jnp
xor
in
inc
push
dec
or
aam
lods
mov
mov
add
fildl
in
pop
sub
pusha
pop
jmp
lea
test
lret
cmp
pop
adc
and
jb
shrl
inc
mov
int
in
jl
inc
pusha
loope
cmp
push
or
repz
xchg
sbb
jno
inc
and
cmp
enter
mov
mov
std
sti
pop
lds
fiadds
imul
add
sbb
adc
scas
jl
push
push
pop
mov
mov
imul
fwait
outsl
loope
mov
inc
mov
and
xor
pop
cmp
push
jbe
jno
push
pusha
mov
cmp
cmp
shrb
adc
std
and
add
stos
xor
orl
arpl
dec
ror
fs
fidivs
sub
add
mov
xor
into
pop
jmp
gs
loope
out
push
jl
push
add
jge
and
inc
cld
fst
inc
push
jo
mov
popa
stos
testl
shll
xchg
pop
clc
mov
mov
mov
lret
mov
xchg
jnp
imul
lea
jg
sub
fadds
push
loopne
out
adc
dec
push
gs
dec
stos
mov
idivl
adc
inc
iret
push
xchg
call
xor
mov
sbb
outsb
das
adcb
stc
ss
and
cmpsb
aas
adc
jecxz
lea
inc
movsl
jecxz
jnp
lret
pop
and
popl
push
jge,pn
popf
dec
in
jmp
shll
fidivl
movsb
mov
mov
and
popa
pushf
lea
test
fdivrs
arpl
inc
xchg
ret
outsl
lods
clc
mov
cmp
fcmove
pop
mov
in
xchg
insl
daa
sbb
push
pop
xor
lahf
jbe
jge
rcrb
xor
push
cmpsb
rcrb
lret
pop
push
xor
mov
out
dec
movsl
mov
xchg
mov
inc
jle
int
sarl
mov
in
sbb
and
and
mov
mov
mov
mov
lock
mov
dec
adc
mov
fcmovnbe
lahf
jg
je
lahf
sahf
xchg
gs
mov
add
jmp
ljmp
nop
dec
mov
mov
mov
add
into
fcmovbe
push
dec
in
cmp
sbbb
add
adc
and
les
pusha
jne
clc
mov
lret
pop
aam
cli
mov
xchg
adc
jmp
or
mov
jns
imul
push
dec
jmp
in
pop
mov
xorb
test
mov
xchg
xchg
rorl
popf
push
cmpsb
dec
jmp
ja
data16
dec
jle
cmp
mov
jne
dec
xchg
pop
lret
sbbb
mov
fimull
dec
std
hlt
ret
mov
jl
jae
sarl
and
lahf
cmpsl
xlat
fnsave
cmp
jae
insb
adc
sub
jb
hlt
repnz
cmp
in
or
push
mov
div
mov
cmp
mov
test
and
fisttpll
imul
lds
pop
push
rorb
add
sub
add
mov
mov
jmp
insb
scas
inc
sub
pop
or
in
lock
mov
loopne
mov
dec
lds
int3
xor
cs
inc
cmpl
mov
mov
xchg
pushf
mov
jl
jnp
add
sub
jnp
nop
mov
es
inc
in
or
stos
ljmp
subb
clc
cwtl
mov
imull
test
push
rolb
leave
push
cmc
daa
dec
lret
pop
clc
mov
push
jp
pop
adc
or
cmp
sub
sbb
daa
xchg
xor
bound
jnp
jg
mov
pop
pop
and
popa
into
sarl
rol
icebp
cmpsb
or
push
test
subb
adc
movsl
add
ret
xor
sub
into
loop
arpl
dec
jmp
loope
sub
mov
mov
mov
xor
and
mov
push
or
or
inc
insl
in
rclb
enter
aaa
jns
add
xchg
ja
push
test
pop
idiv
aas
push
repnz
add
stc
cmp
jl
jp
sub
test
ss
fs
lods
inc
mov
ss
jne
in
xchg
sub
xchg
mov
jecxz
pop
mov
push
cmp
test
sbb
xor
loopne
pop
aas
ret
inc
sahf
stc
movsb
stos
xchg
inc
mov
mov
lcall
mov
mov
sub
add
lret
pusha
xchg
lods
add
cmp
xchg
inc
and
sete
inc
imul
fistpll
inc
mov
aaa
sbb
push
jle
js
push
outsl
popa
push
xor
or
addl
pop
mov
out
sub
sbb
mov
fidivl
xchg
mov
outsb
push
out
js
add
xor
lock
andb
mov
push
movsl
fwait
lods
fdivrl
lods
jns
fistpl
mov
scas
cli
mov
cmp
pop
sti
cmp
mov
push
mov
mov
mov
mov
dec
mov
pushf
std
incb
cmp
out
es
cmpsl
jl
cmp
jg
lods
aad
cwtl
and
test
mov
in
nop
inc
and
cwtl
and
mov
scas
adc
testb
jg
pop
pop
mov
pop
mov
cs
ret
hlt
adc
mov
repz
pop
fldcw
je
fst
cld
push
js
pop
jl
jbe
fstl
sbb
nop
dec
sbb
lcall
das
movl
mov
xchg
shll
test
shll
rcll
cmp
adc
jecxz
mov
xchg
jno
jecxz
jecxz
scas
or
outsl
jae
aaa
mov
and
sub
adc
jl
xor
mov
adc
cmp
mov
sar
test
sub
push
clc
pop
inc
aam
in
cmp
jp
dec
std
adc
aas
pusha
and
dec
xor
cld
inc
xor
cmp
insl
imul
cmp
push
xchg
adc
repnz
or
ljmp
lret
out
sub
mov
mov
ret
cmp
les
sub
int3
cs
pop
inc
cmpsl
fistps
jp
mov
aaa
cmc
arpl
pop
pop
iret
movsl
mov
nop
add
pusha
cmp
jb
lds
in
push
popf
add
jno
mov
inc
jo
cmp
xor
imul
dec
dec
adc
pop
loope
push
and
push
pop
js
rcl
rorb
imul
adc
fists
in
mov
lock
stc
mov
jnp
inc
cwtl
out
sbbb
lahf
js
xchg
pushf
mov
cmp
mov
mov
mov
mov
sbb
sbb
lds
popl
lret
mov
enter
jmp
out
mov
repnz
push
mov
xchg
in
loope
push
sub
jb
sbbl
mov
cs
or
adc
sahf
dec
test
mov
mov
ret
or
nop
mov
sub
loopne
repnz
lock
loopne
inc
mov
sub
pop
push
cmp
call
insb
scas
repnz
xchg
outsl
sub
aam
lock
movhps
xchg
jnp
inc
je
add
mov
nop
rcrl
cmp
push
xchg
gs
or
sbb
loopne
mov
lods
subb
push
cltd
mov
js
pushl
push
fwait
repz
pop
in
push
in
sbb
dec
les
out
or
cmpsl
rcll
xor
sbb
pushf
or
faddl
push
loope
mov
and
inc
sub
dec
push
adc
pusha
lock
jb
orb
push
mov
fs
inc
repz
ret
push
shrl
dec
decb
mov
push
mul
int3
aas
aaa
daa
inc
movsl
mov
jg
outsb
inc
fcoms
jno
or
icebp
movsb
popf
inc
mov
popfw
cmc
jle
inc
or
add
rolb
subb
xor
aaa
cli
dec
xchg
mov
add
call
cmp
sub
negb
jne
sbb
data16
pop
pop
nop
mov
mov
push
xchg
lret
adc
add
mov
sub
adc
add
shrl
pushl
pop
scas
aaa
dec
int3
push
push
xor
jl
jl
sbb
xorl
mov
or
negb
mov
mov
inc
cli
addl
and
aad
into
mov
je
pop
sbb
stos
add
xchg
dec
push
and
dec
shrl
ret
hlt
push
in
outsb
push
pop
xor
repnz
clc
je
mov
ret
xor
mov
test
push
bound
or
mov
dec
in
and
loop
adc
scas
nop
out
es
imul
ret
mov
loope
leave
pop
clc
aam
iret
mov
stos
sti
and
mov
loopne
push
in
sarb
dec
setno
cmpl
jl
dec
cmp
jp
mov
into
adc
les
pop
pop
mov
shrl
mov
xor
adc
imul
std
add
rcl
sahf
mov
jmp
mov
lret
enter
and
repz
iret
stos
cmp
cmp
loope
js
stos
inc
inc
mov
jl
mov
cwtl
mov
fistpl
cltd
adc
cld
fisttpll
xchg
lret
mov
testl
movd
iret
lods
mov
pop
dec
mov
fisttpll
and
cmp
inc
jno
push
or
cmp
pop
jae
fprem1
inc
jp
or
cmpsb
das
lods
fs
cmpsb
jns
scas
xchg
jge,pt
pop
js
sub
push
push
jbe
cmp
rolb
out
das
fs
cwtl
test
cmp
adc
pop
sbb
rorl
lods
xlat
mov
fistl
jl
lret
push
stos
cmp
push
mov
in
push
data16
xchg
aam
sahf
lea
rclb
or
xor
sub
clts
test
mov
pop
loop
sub
insb
sbb
js
cmp
jecxz
push
mov
jge
push
jb
out
clc
add
inc
sbb
addb
mov
jge
or
movsl
fnstcw
push
or
or
insl
cmpl
mov
mov
xor
add
sbb
inc
push
mov
dec
cmp
movsb
out
push
cmpsb
jl
cmp
mov
pushf
xor
in
lret
in
in
adc
idivl
push
jne
imul
inc
dec
cmp
inc
or
inc
call
ret
jb
mov
popa
mov
lcall
sbb
mov
mov
addr16
jbe
mov
jp
jns
inc
cs
add
dec
sub
cmpsb
insl
mov
in
in
push
in
xchg
outsb
test
inc
popa
adc
sub
add
push
mov
push
ret
mov
movsb
cmp
cli
pop
mov
cli
pop
cmp
fsubs
pop
mov
jae
push
les
dec
mov
out
cmp
inc
bound
inc
mov
sub
idivb
sub
cmp
roll
sbb
loope
call
ja
test
inc
adc
out
dec
mov
adc
leave
es
lods
iret
cmpsb
mov
mov
sbb
shll
scas
pop
xchg
add
pop
jg
notl
shlb
pushf
rdmsr
ret
repz
jle
int
sub
ljmp
jmp
or
call
lcall
imul
xorl
ret
sub
dec
cmpsl
mov
pop
mov
mov
sbbl
mov
lret
inc
mov
js
jp
clc
inc
ss
or
add
push
mov
in
mov
data16
sub
push
in
jne
orb
ds
popf
and
xchg
bound
sbb
aad
mov
jne
jge
adcb
fwait
and
call
dec
ljmp
cmp
jmp
cmpsb
mov
scas
mov
iret
das
adc
aas
shll
sub
gs
mov
pop
cmovb
rcr
call
cwtl
out
jg
daa
lcall
sarl
adc
pop
ljmp
sbb
mov
lea
dec
jge
sub
mov
mov
je
pop
mov
jmp
dec
rcrb
mov
sub
dec
and
repz
adc
push
sbb
scas
cld
push
fisttpll
scas
add
and
test
ret
cmc
jnp
inc
mov
jae
subb
and
adc
mov
mov
bound
push
movsb
int
dec
or
xchg
xlat
sub
inc
popf
sub
push
lret
push
sub
xor
je
sbb
push
stos
fs
int3
push
mov
or
add
or
mov
fdivrl
pop
fwait
cmp
stc
mov
xlat
test
negl
fstl
cmp
fsubr
inc
fs
mov
push
ljmp
sub
subl
inc
leave
in
out
pop
lea
rcll
cmpsl
lret
mov
loopne
ss
in
test
mov
xor
sar
push
addb
cmpsb
scas
sub
test
xor
shlb
add
push
cmp
adc
and
cmp
sbb
jg
in
mov
mov
jae
mov
inc
jg
add
jp
cmpsl
fidivrs
je
adc
cmp
setns
int3
add
les
imul
xchg
movsl
xchg
out
or
xchg
dec
add
or
jns
mov
loope
xchg
mov
xor
sub
push
inc
cltd
add
jp,pn
or
mov
jnp
cmpsl
daa
jb
lahf
cmp
sub
push
xor
hlt
es
push
pushf
testl
xchg
popf
jbe
enter
sub
xchg
and
push
add
sub
clc
inc
outsb
test
mov
and
fbstp
shrl
icebp
mov
pushf
jl
mov
aas
mov
dec
outsl
scas
ret
lcall
or
imul
in
ja
xchg
mov
inc
xor
jns
xor
xlat
mov
or
repz
xchg
or
cmpsb
mov
outsb
sbb
shrb
imul
sub
lds
xor
out
fildl
ljmp
out
mov
pop
adc
ja
cwtl
xor
add
paddb
outsl
fldln2
fwait
mov
xchg
daa
add
jp
jmp
std
dec
mov
dec
add
dec
and
or
movhps
dec
or
dec
pushf
stos
cli
stos
outsl
fildl
mov
in
imul
cs
inc
xchg
jno
call
sti
outsb
ret
mov
pop
mov
testl
daa
mov
mov
mov
cmp
inc
jg
xchg
jo
scas
lock
addr16
mov
cmp
push
testl
out
cmpb
sahf
ret
aam
sub
sub
cmpsl
inc
das
outsb
cmpsl
iret
int3
pop
dec
ja
sub
int3
ljmp
jg
cmc
mov
shl
cmp
dec
stos
inc
and
mov
fwait
std
mov
dec
test
mov
push
mov
cltd
fadd
fcmovb
xor
les
mov
xlat
xor
in
outsb
outsl
add
adc
lods
push
shrb
jo
jns
push
push
and
shrb
or
jb
adc
fdivs
cmp
outsb
ds
arpl
fbstp
dec
xchg
call
jg
xchg
jo
pop
pop
leave
and
push
jmp
xlat
into
sbb
outsb
xchg
stos
push
decl
add
stc
into
mov
sbb
inc
imul
cmp
xor
insl
sub
aas
add
mov
iret
adc
cmpsl
add
aas
movsl
call
xchg
jnp
jo
dec
leave
flds
pshufw
or
clc
arpl
in
rol
aad
out
orb
mov
mov
and
repnz
fldcw
lods
sahf
sub
clc
adc
mov
xchg
xchg
rolb
orb
lds
ljmp
out
cmc
in
push
shrb
cli
lahf
adc
sti
incb
fcompl
dec
in
dec
mov
cmp
add
push
push
nop
mov
pusha
out
fnsave
ret
shlb
and
pop
sub
je
jmp
and
add
pop
testl
sbb
movsb
lock
fisubs
xlat
pop
pop
out
and
lea
imul
lods
sti
sbb
cmpsl
adc
mov
mov
cs
add
jbe
mov
cmp
inc
stos
dec
jno
das
dec
jmp
cwtl
jae
int3
jmp
xchg
and
insl
push
inc
icebp
mov
mov
push
xorl
inc
inc
mov
push
mov
andb
aad
inc
shlb
into
jae
mov
add
mov
push
push
sub
shrl
subl
mov
pop
repz
mov
loop
scas
jno
lods
movsl
ret
lahf
adc
sbb
negl
mov
mov
push
jns
jl
lods
aam
xor
pop
ficompl
adc
or
sti
xor
mov
xor
jle
mov
shl
xor
mov
sbb
enter
xchg
popf
mov
movsb
xor
mov
jnp
fistps
mov
out
hlt
scas
xor
mov
mov
pushf
xor
scas
or
jge
sahf
lahf
mov
test
sub
out
test
into
aam
rcrl
pop
add
loope
adc
lahf
inc
aad
sti
loop
pop
mov
mov
adc
js
scas
mov
gs
sub
mov
cmpsb
pop
cmp
sub
sbb
mov
loope
adc
pop
sahf
sbb
frstor
shrl
push
sahf
sar
leave
fcomps
loope
stos
testl
lret
mov
test
sub
push
pop
insb
xchg
pop
mov
lret
repnz
jg
inc
es
ds
add
mov
sbb
ss
pop
sbb
inc
lea
fsubr
dec
ljmp
stos
fsubr
dec
out
or
gs
adc
adc
sub
test
pushf
enter
and
sub
xor
outsl
pop
dec
lahf
test
in
lods
inc
in
sahf
fs
insb
add
inc
push
cli
add
dec
cmpsl
jp
test
pop
les
xchg
xor
mov
jns
lcall
arpl
sbb
mov
sbb
call
daa
jle
ljmp
jae
or
adc
jmp
shl
or
dec
push
xchg
or
insl
pusha
scas
sub
xchg
test
fistps
fsts
xchg
sbb
jo
jp
sbb
and
cmp
mov
mov
aas
inc
shl
cmp
inc
jge
outsb
xbegin
out
or
dec
xor
push
fwait
adc
mov
push
inc
push
ret
cltd
mov
add
data16
jne
jae
daa
stos
jnp
xchg
push
negl
mov
int3
and
dec
fucomi
mov
fidivl
mov
mov
add
test
shrl
hlt
aad
pop
inc
mov
aas
and
repz
mov
jne
fbld
call
cmc
pusha
fcmovnbe
pusha
lahf
sar
jne
popa
adc
push
pop
xor
xchg
mov
mov
cwtl
aam
fdivs
sbb
pop
sub
mov
in
lock
imul
cmpsb
stc
pop
cmpsl
add
sub
out
clc
fsubr
pop
push
mov
jmp
push
sarb
scas
xchg
call
xor
inc
inc
dec
xor
imul
imul
jecxz
insl
dec
out
gs
rclb
and
mov
lods
pushf
insb
add
xchg
mov
lock
xchg
nop
or
add
sbb
sub
push
lret
lea
ret
movsb
pop
sbb
mov
ret
mov
fdivl
test
popl
cwtl
pop
lea
jnp
in
test
add
loopne
aad
cli
fcoml
sbb
jmp
jmp
icebp
sbbl
popa
cltd
roll
stos
xor
push
jnp
lods
xlat
lret
and
mov
out
push
popa
add
mov
pop
adc
sahf
data16
and
rol
and
aas
out
addr16
je
aas
cmp
cmp
mov
out
pop
pop
flds
mul
cwtl
mov
sbb
adc
mov
dec
mov
cmp
adc
mov
fidivrs
adc
orb
cmp
aam
inc
push
cmp
dec
mov
stos
sbb
sub
mov
enter
cwtl
imul
sbb
out
aam
push
data16
arpl
jmp
add
lret
popa
hlt
and
pop
lock
or
xor
cmp
xorl
xor
adc
dec
pop
rorb
fisttpll
lods
xchg
in
fs
xlat
rolb
addl
or
loope
ret
je
push
sub
scas
sub
inc
cmp
faddl
jne
mov
sahf
in
aaa
adc
add
outsb
xabort
dec
cmp
push
push
das
jge
std
cli
pop
pop
pop
loopne
js
sbb
push
jl
add
insl
cmc
ret
rcll
cltd
je
inc
or
subl
xor
fldenv
inc
dec
sbb
movsb
insb
fbld
dec
lretw
test
aaa
mov
enter
push
jae
pop
and
shlb
std
push
out
mov
sbb
xor
aad
rolb
in
cmpsl
inc
hlt
mov
and
adc
scas
mov
jg
inc
mov
push
imul
loopne
mov
pop
inc
jns
xor
ffree
test
dec
cli
adc
fbld
mov
sbb
out
ret
jp
adc
cmp
lods
out
cmc
mov
iret
dec
xlat
repnz
lds
arpl
cmp
insb
and
shll
mov
cmp
xlat
dec
imul
xor
fucomp
jg
xor
jae
xlat
xor
leave
mov
mov
lret
xor
rorb
mov
ficoml
in
into
fcmove
mov
inc
mov
mov
push
push
rcl
js
stos
int3
outsl
sarb
in
jl
xlat
call
mov
pop
addl
test
mov
sbb
in
push
jns
pushf
mov
fwait
pop
xchg
clc
mov
xlat
icebp
xor
ds
pop
sub
cmp
jg
test
sub
mov
js
fcmovne
sub
sbb
orl
imul
popf
or
mov
aas
ret
cli
lret
xchg
inc
pop
stos
repnz
inc
cltd
cmp
imul
mov
inc
popa
push
fbld
fistpl
push
add
mov
inc
aas
inc
loopne
inc
mov
xor
adc
inc
mov
cs
sub
repz
in
jo
cmp
test
xor
cs
pop
stos
aaa
pop
pop
cltd
fs
push
cmpsb
pop
rorb
or
adc
or
mov
les
pop
jp
data16
aam
pop
and
mov
xchg
sub
pop
jo
mov
adc
pop
cmpsl
lcall
ja
cmpsb
loop
push
mov
test
ret
cmpsl
rcl
js
clc
or
add
fdivrs
movb
jge
icebp
add
sbbb
lods
clc
arpl
mov
negb
mov
mov
or
push
mov
mov
jnp
mov
add
cwtl
cmp
xchg
pop
add
mov
or
jbe
cwtl
es
int
mov
test
test
xchg
loope
rorl
cwtl
pushf
fidivl
cltd
pop
fsts
subb
add
mov
stos
out
pop
jmp
out
out
movsb
stos
jns
push
pusha
ss
popa
sbbl
xchg
mov
aad
mov
mov
mov
stos
mov
fildll
repnz
cmc
xor
testb
icebp
sub
mov
mov
sub
mov
fldlg2
aad
inc
pushf
mov
popa
outsl
xchg
in
mov
addr16
mov
daa
jecxz
mov
mov
ljmp
aaa
sub
cmp
scas
cmp
fidivrs
xor
mov
clc
sbb
jecxz
call
shrl
xor
inc
dec
dec
mov
mov
cmpsl
test
mov
push
hlt
sbb
xchg
cmp
lea
rcl
and
addr16
fsubs
inc
xor
mov
pop
xchg
sbb
or
xor
inc
mov
in
cli
jae
test
dec
xor
addr16
sbb
sahf
out
cwtl
lea
cmp
test
mov
movsl
out
stc
sti
mov
outsl
lock
dec
pop
cmpb
cmp
subb
imul
out
insl
aas
mov
cwtl
sahf
divl
or
sahf
icebp
sahf
outsl
push
leave
loopne
dec
pop
das
push
es
shrb
movsl
outsb
mov
push
les
call
in
fsts
dec
hlt
pop
repz
out
sti
lods
xchg
movsb
push
cmp
mov
sbb
jecxz
fdivrp
cmp
jne
int
clc
cmpsl
mov
test
mov
push
mov
sbb
addb
pop
imul
pop
xchg
and
insl
adc
mov
sub
mov
mov
push
push
lock
imul
test
inc
iret
mov
or
lahf
mov
insl
cmp
and
enter
xchg
jge
inc
xchg
ljmp
aaa
pop
add
inc
add
cmp
arpl
pop
mov
out
fsubrs
sbb
jns
inc
mov
add
push
add
shll
lods
mov
movb
ret
imul
loopne
outsb
mov
adc
daa
cmp
clc
lock
test
inc
or
inc
dec
inc
sub
jmp
jns
arpl
inc
sarl
cld
push
cmp
in
popf
or
add
adc
push
sbb
sbb
xchg
inc
fwait
mul
cs
int3
push
sbb
es
sub
sbbb
jg
les
push
add
fs
inc
outsl
int3
lds
or
add
inc
js
shll
pop
test
sbb
xchg
xchg
fdivl
push
rclb
arpl
cmpsl
jae
into
jge
je
xor
lock
out
aas
push
mov
fldcw
mov
add
and
in
je
dec
in
sub
imul
sbb
mov
loop
xchg
lcall
push
xchg
leave
fnstenv
jp
jecxz
mov
mov
pop
hlt
inc
dec
mov
sbb
test
mov
nop
adc
push
jbe
iret
xlat
adc
ss
dec
mov
insb
push
gs
mov
test
test
fadd
jae
lock
ret
imul
mov
test
fdivs
movsb
ucomiss
xchg
fsubrl
xor
je
and
push
pop
in
fdiv
iret
insl
lods
daa
inc
inc
fld
pop
adc
mov
outsl
cmp
popa
stos
out
test
outsb
cmp
mov
das
push
test
inc
out
hlt
mov
inc
sbb
mov
cmpsl
sbb
xor
mov
pop
jns
loope
mov
in
xchg
hlt
in
sub
mov
ret
push
out
jo
fwait
xchg
into
rclb
xchg
dec
mov
daa
or
sbb
sbb
fcoml
add
push
sub
repz
je
mov
cmp
lds
out
dec
mov
mov
in
mov
cltd
cltd
or
scas
adc
insl
into
push
xchg
fldcw
fwait
mov
adc
jbe
or
loope
xor
dec
sub
xchg
lret
mov
and
ljmp
lock
stos
pop
xor
dec
mov
xchg
dec
jecxz
and
in
inc
int
jge
stos
xchg
adcb
jmp
dec
jo
mov
inc
mov
dec
push
jnp
mov
jb
insb
mov
adc
jns
stos
xchg
call
scas
mov
fnsave
pop
data16
repz
push
pop
and
push
loop
stc
jae
fwait
push
mov
jnp
adc
es
ss
push
xor
dec
cmpsl
add
les
jnp
subl
enter
sbb
add
inc
dec
push
fsubs
cmpsl
add
dec
xlat
pushf
jno
jnp
xchg
out
test
and
push
fs
hlt
std
daa
cmp
ss
jle
ljmp
in
inc
and
in
add
jnp
fadd
inc
mov
or
push
filds
enter
clc
pop
sub
mov
xor
jno
mov
mov
cmc
cmpsl
xor
rorl
clc
push
loop
sbb
mov
idivb
xchg
movsl
mov
icebp
repnz
pop
out
sub
or
sbb
pop
xchg
or
adc
aad
loopne
divl
mov
jg
dec
or
push
jle
loope
push
loop
nop
imul
pushf
mov
and
and
mov
ja
push
sub
push
pop
dec
ret
movsl
mov
pop
ss
hlt
and
repz
xchg
das
mov
daa
mov
dec
movsl
aad
mov
int
add
shlb
int
mov
jmp
loope
loope
cli
dec
ret
mov
iret
dec
fiadds
or
por
loopne
das
cmp
shlb
enter
shl
push
lds
adc
push
stos
cmc
in
test
nop
or
pop
xchg
call
cwtl
adc
cmp
mov
icebp
cmp
and
cmp
or
stc
add
mov
and
or
and
cmpsl
pusha
dec
inc
shll
cmp
pop
mov
lock
addb
push
inc
test
imul
xchg
xor
or
fistl
aam
xchg
push
or
xorb
pop
js
aas
mov
cli
cltd
inc
jns
sarb
divb
fwait
cmp
lock
sub
cmp
sahf
add
pop
movb
aad
cmpsl
cmp
ja
sub
xchg
insb
insl
aas
movsl
push
mov
hlt
jle
mov
jg
inc
xchg
hlt
jno
test
test
shlb
notb
mov
fcmovnu
mov
test
pop
popf
pop
and
lods
fbstp
enter
jbe
scas
cmp
pushf
jnp
nop
fidivl
in
mov
insl
mov
adc
push
xlat
outsl
pop
or
adc
push
nop
push
push
lret
mov
xor
sahf
xchg
jl
aaa
mov
mov
cmp
movsb
in
xlat
push
int3
inc
xchg
les
pop
pop
ljmp
das
lods
adc
js
dec
and
data16
outsl
cltd
mul
insb
and
or
push
loope
inc
jae
cmp
xchg
cld
in
cld
sub
mov
xor
lret
sub
jnp
fdivr
int
jp
jne
push
sbb
fldl
sub
mov
int3
xchg
and
jge
or
subb
lods
stc
in
shrl
pop
adc
cmp
lret
xchg
sub
addr16
and
cwtl
int3
jne
xchg
test
push
lret
inc
xor
xor
push
ja
out
xor
jle
pop
fcmovnu
jbe
cs
pop
addb
clc
jle
push
js
dec
loop
adcl
frstor
push
jb
xchg
xor
sub
sbb
pop
repz
cmpl
mov
pop
inc
dec
xchg
mov
shrl
test
lock
or
adc
push
in
and
jns
cwtl
sbb
mov
mov
and
arpl
call
mov
jge
int
fstpl
leave
sub
mov
ficoml
fwait
out
cld
dec
ja
add
dec
insb
xlat
mov
stc
enter
lahf
add
xchg
sbb
fbld
inc
mov
mov
and
cmpl
inc
add
in
test
mov
add
push
outsl
mov
mov
mov
xor
inc
push
lahf
mov
cmpsl
loope
ss
add
xchg
pop
sub
fidivs
jecxz
dec
lret
xor
cmp
shlb
pop
test
pop
subl
xchg
jmp
stos
test
sbb
push
cmpsl
lcall
es
daa
into
ljmp
xor
cmp
lods
dec
mov
cmpsb
xchg
repnz
add
mov
mov
xchg
pushf
movb
push
adc
cmp
pop
inc
gs
and
xor
enter
dec
dec
sbb
cmpl
jae
pop
pop
lret
mov
stos
push
imul
arpl
loopne
dec
pop
add
je
xor
push
sti
fcmovb
sbb
fldenv
or
xchg
mov
bound
add
xchg
call
jmp
adc
inc
outsl
add
dec
ficomps
xor
push
cmp
fs
leave
add
sbb
lahf
push
sbb
scas
or
hlt
test
and
addr16
mov
mov
scas
fwait
xlat
and
lods
push
xchg
push
mov
pop
cld
or
add
xchg
pushf
xlat
pop
negl
xchg
push
fstpt
xchg
mov
dec
int3
pop
push
and
sbb
rorb
jl
enter
out
loope
and
push
mov
lret
adc
je
adc
xlat
mov
xchg
pop
idivl
call
mov
cmp
cwtl
in
sti
inc
jmp
rorb
dec
add
push
and
ret
repz
xchg
lahf
lea
shrb
and
jb
mov
jae
repnz
mov
jmp
cmp
fdivrp
sahf
sub
cmpsb
int3
popf
test
pushf
cmp
cmp
sub
or
jae
inc
dec
cmc
shr
push
movsl
out
cltd
andl
mov
shl
mov
mov
fldcw
mov
psubw
xor
loop
out
mov
movl
stos
sub
aam
cmc
mov
jb
mov
adc
push
inc
hlt
ds
jae
xor
xchg
ret
es
inc
rorl
pop
stc
mov
or
sub
out
mov
pusha
inc
bound
clc
aaa
out
cmp
mov
js
popa
push
mov
test
jo
test
addr16
cld
je
or
in
or
enter
adc
inc
sub
in
test
and
mov
pop
gs
lcall
fwait
add
lea
ret
mov
repz
and
push
xor
in
aas
adc
sub
insl
xor
fimuls
sar
add
sbb
sbb
int3
arpl
jg
stc
dec
inc
testb
push
jge
xchg
lret
mov
inc
repz
jno
pop
fs
mov
pop
stc
popf
test
mov
nop
sahf
insl
sub
add
dec
addr16
scas
mov
nop
fs
hlt
rcl
jmp
sbb
sub
arpl
jg
stos
dec
lahf
pcmpgtd
sub
stos
out
fucomi
sbb
jo
or
cmp
dec
cmp
mov
pusha
sets
test
and
lea
shl
aas
lds
push
rcr
and
sti
jne
jmp
je
mov
nop
mov
add
js
pop
cltd
repz
adc
scas
mov
clc
aaa
mov
in
movsb
inc
int
mov
mov
adc
mov
fmull
addr16
cli
imul
nop
push
sbb
pop
loopne
fisubrl
aam
or
mov
lds
scas
jge
outsb
cmp
adc
xchg
fwait
test
sub
push
mov
mov
lret
data16
rdmsr
cmp
push
pop
sub
daa
test
or
movb
lods
call
in
outsl
loop
inc
repz
push
repnz
rclb
sub
imul
lahf
mov
shr
xor
insb
mov
lock
xor
nop
adc
xor
rclb
mov
adc
cmc
test
jg
add
xchg
jl
test
jp
xlat
pop
mov
sub
cld
int
rorb
aam
mov
fwait
insl
push
sbbb
mov
lret
fsubrl
jo
adc
dec
pop
arpl
hlt
push
sahf
arpl
pop
pop
popf
mov
int3
mov
mov
mov
jne
mov
in
adc
xchg
jmp
das
xor
nop
leave
inc
into
push
in
aam
into
add
movsl
jp
into
js
test
and
mov
stos
loopne
jbe
out
mov
stc
ljmp
ja
incb
push
push
cltd
cli
pop
movsl
adc
mov
push
outsb
pop
or
jnp
sti
mov
aas
push
push
pushf
fs
in
ret
daa
jno
and
cmp
sbb
int
cmp
rorb
pop
repnz
mov
pop
cmp
add
pop
jbe
daa
leave
sbb
sti
push
and
es
pop
data16
test
mov
push
push
lret
popa
push
jmp
insl
add
pop
or
jge
loop
xor
movb
mov
xchg
pop
leave
jne
lock
enter
or
sbb
fistl
lret
pop
rol
add
or
cwtl
out
loopne
ljmp
mov
orl
push
xor
and
xchg
xchg
pop
inc
fs
lret
fisubs
xchg
mov
idiv
mov
xchg
jmp
sub
lock
and
test
or
es
cmp
mov
xor
leave
xor
das
sub
pop
addr16
sahf
adc
jge
sub
adc
shlb
lea
outsl
out
xlat
mov
std
inc
pop
popa
data16
sub
jecxz
stos
add
hlt
dec
lock
pop
in
jp
mov
inc
test
cltd
jp
and
enter
scas
dec
testl
add
test
icebp
xor
int
lret
xor
je
jl
mov
cmp
sub
xor
jbe
and
ret
push
or
or
ja
mov
pop
pop
scas
mov
insb
sub
aas
clc
sti
cld
or
iret
scas
lret
popl
mov
cmp
rclb
cli
pusha
push
daa
daa
out
pop
and
xor
sub
clc
pusha
dec
pushf
sub
sbb
jbe
cmovl
jg
mov
push
inc
mov
cmp
or
lcall
dec
lea
rorl
lea
push
and
enter
lret
loope
push
jbe
mov
icebp
push
dec
cmpsl
adc
sbb
jb
fs
adc
mov
xor
xchg
aaa
sbb
lds
outsl
push
dec
aaa
pop
mov
sub
jecxz
xchg
loope
pushf
jb
mov
cli
daa
adc
test
sub
adc
fidivrl
sbb
xor
add
mov
nop
inc
les
fnstenv
lods
cmp
xchg
arpl
pop
movsb
stc
jmp
jns
gs
xor
jb
aaa
dec
push
jge
rolb
loopne
push
push
in
fadds
test
inc
clc
loop
jecxz
push
sbb
jmp
pop
std
push
ret
cmp
int3
sahf
fildll
ficompl
mov
aad
lahf
imul
jmp
cli
lods
cmp
fdivl
test
mov
rcl
repnz
mov
inc
imul
pusha
cmp
movsb
xchg
pop
adc
pop
cmpb
aas
test
or
sub
pushf
jne
mov
or
pop
pop
inc
fcomps
pop
and
xlat
insl
dec
push
cmp
push
fwait
jmp
jbe
dec
xor
iret
pop
inc
mov
mov
sbb
movsl
push
dec
xchg
mov
sub
and
stc
mov
lds
imul
inc
flds
sbbl
dec
imul
jae
xchg
or
fidivl
iret
adc
push
sub
iret
inc
add
daa
jbe
mov
fisttpll
push
fimuls
repnz
adc
inc
mov
dec
cmpsl
ljmp
nop
jnp
dec
mov
sbb
add
fisttpll
jp
pop
fstps
fsubl
sbbb
es
das
jne
insb
addl
icebp
int
icebp
sbb
xchg
mov
outsl
lods
emms
or
aam
fisttpll
pop
dec
jl
ror
sub
mov
dec
cmp
sbb
sub
fwait
ja
adc
jp
xor
push
insb
jecxz
call
sbb
jp
pop
int
rcrb
scas
dec
add
test
or
xor
push
icebp
xchg
popl
adc
add
jmp
sbb
mov
pop
lods
mov
out
lock
add
inc
xor
push
in
mov
pop
mov
jg
pop
addr16
add
stos
lds
push
pop
dec
jne
cmpsb
cwtl
into
sub
in
mov
jo
nop
jmp
inc
xlat
scas
inc
mov
and
mov
dec
adc
es
mov
inc
mov
stc
jno
cmpsb
rcll
addb
fimull
push
mov
fld
mov
call
shlb
les
add
mov
rcrb
insb
lock
jp
stos
mov
js
sbb
pop
mov
adc
imul
lods
repnz
inc
xchg
jge
cmp
or
add
pop
mov
cmc
aam
pop
jae
mov
cmpsl
lds
cmpsl
bound
cli
mov
mov
test
push
cmpsl
lods
sub
cmp
or
loop
mov
pusha
xchg
lret
imul
popa
fwait
int
cs
nop
add
jns
push
mov
ds
and
popa
xor
popa
mov
jp
mov
xchg
data16
les
cmpl
sub
adc
mov
insl
pop
mov
sub
sub
xor
mov
lret
cmp
test
mov
mov
shl
inc
and
push
fbld
xor
dec
cmpsb
int
std
hlt
mov
pop
push
ficoml
movsb
leave
mov
testb
aaa
xchg
jb
mov
pop
shl
xchg
push
xchg
fldcw
cld
jl
in
hlt
cmp
push
sarl
xor
repnz
outsb
cmp
je
sub
xchg
push
fsubrl
push
cmp
or
movsl
xchg
subb
inc
aas
lret
mov
nop
xchg
fnstcw
in
in
push
pusha
pop
movsl
jnp
xor
push
movsl
add
mov
pop
test
push
pop
sub
bound
sub
test
pop
cmpsl
lea
push
xorl
js
cmp
ss
out
inc
cltd
subb
cld
xlat
mov
cltd
add
leave
int3
imul
imul
add
push
je
insl
test
test
dec
cmc
lret
fistpl
ret
das
mov
xchg
cli
out
sbb
enter
hlt
mov
std
inc
pop
mov
fldt
insb
mov
xor
pop
inc
scas
gs
test
fidivs
loopne
lods
clc
divl
mov
das
jbe
out
or
sbb
aam
add
popf
daa
and
xchg
ret
scas
stos
scas
push
insl
push
fldt
add
push
cmc
push
push
mov
outsb
pop
out
xchg
mov
xchg
loope
sub
xchg
inc
and
add
xchg
inc
inc
cmc
mov
pop
pop
xchg
add
cltd
ret
fwait
push
push
imul
lods
pop
sub
gs
imul
mov
pop
mov
cmove
inc
sbb
and
fimuls
outsb
push
and
mov
ljmp
mov
mov
inc
imul
into
xor
ljmp
sub
xor
mov
int3
pop
sub
or
enter
pop
jns
or
popa
bound
in
arpl
lods
dec
and
adc
and
xchg
cmp
lods
aaa
int3
or
or
das
rcl
push
imul
mov
dec
mov
cmp
outsb
and
ret
adc
xchg
and
or
dec
jo
aad
stos
xchg
iret
mov
fisubs
cmpsl
add
xchg
dec
imul
xor
cmpb
sub
movsl
out
add
cli
pop
pusha
dec
ljmp
dec
std
xchg
add
lret
imul
xchg
jbe
mov
adc
xor
dec
lcall
call
jg
gs
cmpsl
shlb
xorl
mov
or
mov
dec
mov
lds
andb
dec
testb
popf
pusha
mov
fs
mov
push
cmc
cmp
add
cwtl
dec
rcl
adc
pop
cmpsb
mov
mov
xchg
jns
or
int3
fisubrl
pusha
mov
cmp
jle
mov
int
int3
jnp
ljmp
sub
std
into
ss
jle
sti
std
push
inc
inc
and
lret
pop
mov
jb
popf
inc
pop
mov
or
rcll
push
inc
sub
mov
or
dec
data16
test
mov
sub
rcl
pop
inc
lods
jle
jns
imul
cmp
adc
pop
push
or
add
push
ret
cmp
and
add
inc
add
test
sbb
les
lret
cmp
dec
xchg
mov
or
cwtl
pop
xor
fdivp
out
mov
sbb
mov
dec
dec
jp
shlb
fnstsw
hlt
hlt
movb
xchg
pop
dec
xor
xor
mov
sbb
pusha
or
pop
or
sub
mov
pop
nop
mov
jge
pop
pop
mov
lods
lock
sbb
push
cmp
cmp
out
push
scas
shl
mov
movsb
cltd
xchg
incb
popf
inc
jbe
xchg
or
jle
adc
xor
and
loopne
loop
test
xor
call
sar
mov
out
adc
add
popf
sbb
xor
arpl
cwtl
xchg
dec
mov
nop
testl
mov
xchg
lret
lods
cld
pop
xor
das
popa
fisttpl
scas
push
sub
scas
test
in
add
shll
movsl
pop
sbb
cmpl
pop
movsb
test
push
xor
enter
push
xchg
popf
push
mov
gs
punpckldq
mov
sub
scas
and
mov
or
adc
jle
add
lds
test
adcb
repnz
cmpsb
orb
test
adc
mov
xor
cli
inc
scas
mov
imul
mov
sub
sub
pop
scas
pushf
cmpsl
add
push
xor
imul
jge
dec
xlat
sub
adc
fmull
outsb
mov
cmp
scas
add
test
lret
cmc
push
mov
mov
stc
jge
sub
jbe
shr
or
test
test
xor
xor
insl
jmp
outsb
in
xchg
mov
cmp
mov
clc
movsl
xor
aam
shlb
stos
fidivrl
lret
dec
aaa
orb
xchg
cmp
rcll
xchg
mov
scas
sbbb
mov
add
arpl
xchg
repnz
mov
popf
jae
dec
je
shrb
mov
ja
fsubl
aad
or
mov
insl
pusha
xor
popf
das
call
shrb
mov
in
rcll
popf
sbb
sbb
out
xor
stos
and
pop
mov
lods
push
push
popl
jns
popa
hlt
in
testl
fsts
dec
inc
fcomi
pop
movsl
xor
add
imul
or
ss
test
cmp
jg
push
cmp
mov
in
dec
js
push
popa
pop
bnd
jno
adc
enter
or
pusha
into
inc
imul
and
jo
mov
stc
outsb
mov
cmpsb
iret
jne
jns
pushf
xlat
test
loopne
mov
jle
in
lods
mov
sbb
adc
icebp
shrb
stos
icebp
and
add
mov
shll
cmp
sub
fxsave
in
test
mov
lods
sub
xchg
ljmp
int
mov
neg
fcomip
jae
xchg
dec
ds
xchg
or
mov
xor
cmp
push
sahf
push
adcl
inc
stc
jle
and
stos
iret
xchg
pop
add
jnp
and
jns
pop
je
cmp
inc
sbb
lods
mov
jae
adc
or
pop
imul
adc
mov
inc
mov
pop
movsl
lahf
xor
ret
fwait
out
call
mov
mov
and
and
les
dec
and
jae
lret
pusha
jne
mov
mov
sbb
cmp
inc
pop
rclb
test
sub
pop
mov
fstpl
and
push
push
mov
adc
das
cli
add
adc
sub
or
popf
jp
cmp
fisubrl
mov
testl
dec
test
xorb
aad
and
push
js
cwtl
daa
lock
mov
out
es
sub
frstor
inc
add
in
sub
fadd
imul
fisttpl
dec
es
addr16
test
xchg
sub
rorb
mov
inc
lods
in
jo
sbb
jge
in
or
xchg
push
xor
add
jp
iret
cmc
fdecstp
movsl
popf
aad
jb
sbb
cwtl
orb
mov
mov
add
mov
inc
cmp
push
mov
add
adc
sbb
sub
hlt
dec
xchg
sbb
sti
and
sub
mov
mov
xchg
or
inc
int
inc
push
push
inc
loopne
push
cli
sti
and
mov
adc
sub
push
lods
ret
sbb
imulb
push
jo
cmpsl
mov
out
jnp
add
cwtl
xchg
lcall
incb
in
pop
int3
arpl
loope
mov
repnz
call
sti
pop
pop
dec
jg
jae
aad
gs
lods
add
pop
std
push
ss
lret
mov
out
push
ljmp
push
push
aam
leave
ja
jmp
jp
cmp
push
add
out
outsl
inc
push
xor
jbe
xchg
push
mov
das
int3
xor
mov
push
push
push
outsl
push
jne
ret
test
pusha
adc
pop
cmp
push
cmp
and
jae
mov
mov
sbb
imul
in
add
int3
inc
sbb
aam
pop
into
add
cld
cmp
fidivl
fs
lret
jge
test
divb
cwtl
push
add
test
and
cmpsb
fsts
mov
dec
push
fadds
movsb
xlat
add
sbb
or
bound
push
imulb
movsb
pop
fdecstp
lcall
subb
fisubrs
into
imul
add
imul
call
pop
lods
xor
test
mov
dec
aas
dec
in
orl
push
out
push
in
je
loop
pop
add
lods
mov
mov
fistpll
ret
inc
jno
leave
dec
stc
inc
aaa
jnp
mov
aam
mov
nop
pop
mov
pop
cmpb
mov
idivb
pushf
jle
in
fmull
addl
pushf
push
jmp
or
cld
inc
inc
jecxz
sub
jecxz
lds
lds
dec
arpl
dec
xor
daa
test
adcl
jns
enter
sahf
pop
icebp
aam
ret
mov
cmp
lahf
and
pop
sub
add
out
pusha
test
sti
fs
pop
outsl
push
cld
xchg
aaa
int
mov
adc
pop
mov
or
xchg
mov
dec
roll
shrb
xchg
insl
lock
adc
push
out
cmpsb
or
cmp
jp
xchg
sbb
imul
data16
or
mov
and
test
arpl
cmp
stc
movsl
std
jno
cmp
or
inc
inc
and
dec
loopnew
cmp
inc
xchg
jno
stc
mov
icebp
adc
and
stos
cld
add
mov
add
push
into
add
scas
test
out
loope
insb
jnp
testl
mov
jnp
mov
push
andl
xchg
pop
sbb
fwait
jle
pop
inc
or
ret
mov
pop
loopne
pop
mov
mov
out
jecxz
and
fadds
mov
popa
insl
std
push
sbb
jo
lods
adc
xlat
push
push
mov
loopne
mov
fucomip
jno
aaa
mov
mov
pop
mov
inc
js
cmpsb
outsb
jl
inc
js
push
dec
mov
lods
fidivs
adc
vpcmpgtd
xchg
jnp
in
outsb
sbb
xor
out
lret
fmull
ret
pop
fldt
cmc
subl
xchg
sub
lock
xchg
mov
inc
lret
cs
jo
aam
add
stc
scas
lret
call
jg
ljmp
js
in
ljmp
jae
push
popf
imul
aam
mov
ret
aas
rcrb
das
cltd
cmp
and
push
mov
cmp
lods
scas
rcl
subl
pop
into
pop
pop
fstps
mov
or
in
and
sub
scas
iret
xchg
fbstp
insb
je
movsl
cmp
icebp
lahf
sub
fs
ret
stos
in
jge
data16
mov
aam
inc
sub
pop
pop
and
mov
ficoml
das
cld
xor
mov
pop
lret
push
mov
mov
std
sbb
rcrb
cmp
mov
outsl
ret
mov
cmp
ljmp
add
ds
loop
iret
mov
call
loopne
and
outsl
adc
jp
push
lahf
pop
clc
jp
fimull
fiadds
loope
inc
int3
outsl
sbb
jae
dec
aas
shll
fs
jge
pusha
test
andps
loope
pushf
sbb
adc
sarl
rclb
pop
pop
inc
dec
xchg
mov
inc
push
xchg
js
dec
idivl
push
pop
xchg
xlat
inc
shlb
and
jo
stos
sub
data16
add
in
mov
out
mov
sbb
sbb
add
xchg
xchg
arpl
sbb
hlt
push
sbb
hlt
inc
stos
or
es
cld
mov
push
jnp
aad
ljmp
lock
bound
loope
pop
nop
ret
lret
stc
mov
xchg
loop
mov
addb
repnz
cmp
ret
lret
decw
inc
push
inc
in
stc
cmp
mov
jge
lret
hlt
pop
xor
jo
xor
push
sarl
jle
lahf
or
xchg
in
sbb
cmpsb
or
lock
xor
jno
ficoms
jno
add
inc
mov
test
test
test
mov
adc
out
ret
scas
in
xchg
ljmp
imul
pop
aas
movsl
sahf
imul
or
mov
jl
lock
in
xchg
xchg
push
jle
lods
and
fst
and
sbb
cmp
sbb
and
gs
repnz
mov
test
lcall
jle
jae
sub
leave
jmp
lods
repz
jno
mov
mov
or
loop
int
cli
loopne
js
pop
das
mov
adc
push
add
inc
xor
scas
push
in
sub
sbb
nop
inc
inc
add
mov
push
andb
jo
xchg
lock
fldenv
xchg
jmp
xchg
push
fstl
out
xor
or
divl
and
cmp
xlat
popl
jbe
mov
xchg
cmp
out
lods
cmp
dec
stos
sbb
mov
and
jg
adc
xor
mov
add
inc
add
mov
push
adc
sbb
mov
and
popa
dec
mov
jbe
push
jg
push
aam
jle
cmpsl
aad
adc
adc
or
sbb
pop
cld
mov
int
pop
in
push
push
cmc
pop
sub
push
or
add
movsl
xor
mov
adcb
mov
dec
ljmp
add
and
movsb
jnp
movsb
jne
sub
fisttps
dec
jnp
add
jae
fadds
cmp
add
shl
jae
adc
and
push
gs
xchg
out
movsl
orb
je
jecxz
aaa
ror
adc
add
andl
les
dec
pop
sbb
push
cmp
lahf
and
gs
xchg
pop
mov
shl
dec
scas
sbb
bnd
adc
mov
imul
out
push
push
pop
outsb
ret
mov
fbld
decl
add
pop
sub
mov
jmp
pop
push
sbb
mov
sub
pushf
cli
push
hlt
push
stos
or
jno
roll
repnz
adc
mov
push
xchg
cmp
sbb
pop
int
mov
js
pop
leave
fadds
adc
jmp
lods
enter
jle
xchg
nop
out
mov
nop
jae
adc
mulb
xchg
aad
adc
xchg
out
cmpsb
pop
pop
imull
mov
inc
or
fcompl
bound
or
push
sbb
xchg
inc
add
les
shll
cmc
push
sti
xor
add
pop
popf
mov
cmp
test
add
call
pop
push
jns
jmp
inc
mov
fs
push
xor
pop
cltd
mov
push
inc
xchg
je
xchg
bound
push
enter
xor
pop
aad
fisttpl
or
repnz
mov
in
adc
pop
repnz
xchg
out
shlb
sub
and
test
aas
mov
push
push
mov
and
or
sarb
scas
mov
enter
divb
adc
mov
sub
mov
cmp
sbb
js
sbb
jae
xchg
or
adcb
dec
leave
rclb
icebp
sub
enter
xchg
test
gs
push
xor
stos
stos
cli
sahf
xchg
nop
xor
push
test
dec
cmp
into
mov
pop
sub
sub
das
xchg
fwait
mov
jnp
mov
mov
pushf
mov
leave
int3
add
movsb
mov
adc
push
in
pop
lahf
rorl
xor
sbb
inc
data16
pop
ret
mov
adc
sbb
bound
rorl
outsb
add
cli
loop
int3
daa
or
adc
and
xor
cmc
lcall
mov
or
test
inc
es
pop
testl
mov
out
push
jg
sbb
imul
popf
gs
dec
inc
inc
out
push
pop
loopne
jmp
push
mov
in
loope
outsb
cld
push
fdivrs
roll
mov
pop
lret
fsubr
icebp
stos
icebp
inc
pop
mov
lret
stos
popa
dec
mov
std
add
and
adc
lock
out
jle
leave
popa
icebp
cmp
jmp
in
jne
out
add
cmc
cmp
cmp
jmp
int3
sbb
push
in
adc
rclb
sahf
in
ljmp
jmp
sbb
pop
adc
pop
xchg
in
mov
mov
mov
dec
xor
arpl
fsubrs
inc
popf
sub
jmp
lret
adc
dec
and
fbstp
addl
pop
cmc
sbb
xlat
rorb
ret
xchg
incl
aas
jno
lds
push
les
int
inc
lods
les
cmc
movsl
pushf
jno
dec
pop
jbe
aam
inc
cli
mov
mov
enter
inc
dec
pop
xor
bound
xchg
lret
jae
leave
lds
popl
popf
movsb
dec
inc
in
fcmovne
pop
and
rcrb
cs
incb
into
out
mov
mov
test
mov
test
xor
adc
inc
lods
mov
fwait
lea
test
xchg
push
and
fdivl
pushf
add
insl
test
jp
xor
lock
mull
or
sub
jle
and
mov
mov
sbb
je
jae
aad
mov
mov
sbbb
add
ljmp
mov
jno
mov
out
scas
rorl
cmpsl
stos
daa
or
inc
sbb
jge
pushf
xor
xchg
hlt
pop
ret
out
mov
pop
gs
mov
insb
imul
xchg
dec
stc
mov
adcl
dec
push
imul
mov
inc
add
test
sub
or
lock
xor
cmp
adc
cld
push
fldl
sbb
lcall
xor
or
icebp
call
gs
pop
adc
scas
pop
jp
add
mov
pop
inc
test
ret
mov
out
out
stos
push
sub
jne
repz
mov
mov
lods
jmp
push
and
ds
dec
xchg
mov
ret
sahf
cmpsb
push
loop
mov
shr
add
jne
push
cmp
inc
scas
cltd
lcall
sub
jmp
mull
dec
mov
dec
mov
push
jno
cld
je
enterw
leave
cmpsl
xchg
mov
mov
xchg
or
loope
ja
icebp
cmpsl
lcall
cmp
xchg
adcl
nop
or
mov
data16
add
adc
pop
mov
cmovl
arpl
and
rclb
cmp
movsb
outsb
movsl
lea
inc
outsb
test
xor
cli
popf
rcr
xchg
ret
add
sbb
xchg
inc
aaa
sub
mov
int
std
cmp
das
lock
rcll
dec
lods
mov
add
setbe
shrb
shll
pusha
and
mov
cmp
testb
stc
insb
nop
mov
lcall
js
popf
movsl
hlt
push
add
xorl
cli
pop
or
outsb
lods
push
xchg
in
adc
xchg
jecxz
and
xor
adc
lcall
add
or
movsl
pop
rorl
dec
or
andl
scas
lods
je
pop
dec
lock
aaa
sbbb
adc
lret
shrl
pop
xchg
stos
iret
push
jmp
mov
add
push
dec
adc
or
enter
push
leave
in
sbb
loopne
lods
in
and
cmc
subb
mov
insl
out
notb
dec
daa
jg
and
dec
jae
ja
outsl
loopne
xchg
mov
test
outsl
push
push
rcrb
and
inc
addb
sub
mov
xor
mov
jecxz
js
fs
inc
test
jo
jg
gs
shlb
jbe
xchg
cli
pop
ljmpw
imul
fists
shrl
call
out
sub
roll
pop
je
jb
outsl
push
push
mov
enter
or
sub
loop
popa
dec
push
push
jno
sbb
mov
out
and
loopne
or
rcpps
imul
lret
sbb
iret
repnz
and
xchg
ja
jbe
pop
pop
int
in
inc
mov
in
das
sub
cltd
lret
mov
pop
ljmp
sbb
xchg
leave
jg
movsl
stc
pop
mov
sub
repz
insb
cli
add
enter
loopne
ja
dec
push
sub
xchg
stc
or
clc
mov
je
lods
cmpsb
out
xor
sbb
adc
or
stc
rcrb
popa
fcomps
xchg
dec
xlat
jns
sub
xor
xor
das
in
jg
call
scas
imul
outsb
pop
or
aaa
aas
xchg
int3
jl
cli
lods
popa
jmp
sub
rolb
mov
bound
out
pushf
cmpl
call
xor
pop
int
in
cmpsl
pop
mov
dec
es
stc
adcl
cmpsl
cmpsl
pushf
lahf
bound
pop
sti
fcompl
lods
sarb
nop
dec
mov
xor
xchg
sub
fmuls
outsl
cmp
es
xchg
mov
negb
lods
mov
test
and
test
adc
add
add
lret
outsb
mov
inc
into
ds
aam
insb
xchg
into
cmp
rorl
shrb
sbb
psrlw
nop
rcrb
out
imul
out
das
clc
mov
ffreep
sub
and
sub
inc
lcall
jg
adc
jmp
cs
movsb
cs
stos
std
jl
ret
push
shll
jge
jg
loop
in
lods
outsl
ret
jle
mov
push
pop
ficomps
push
test
aam
sub
outsl
xchg
dec
xchg
scas
scas
jo
cli
cli
sub
pusha
arpl
jns
sahf
mov
jnp
in
fnstsw
rclb
adc
add
or
or
xor
and
in
add
sbb
add
dec
and
xchg
push
inc
push
pop
scas
fwait
sahf
aas
xor
mov
mov
cwtl
in
imul
stos
orb
adc
jnp
imul
leave
pop
adc
jnp
and
mov
mov
push
cmpsl
cs
mov
ret
mov
jp
aad
mov
mov
mov
pop
xchg
xor
push
xchg
jle
push
or
dec
int
sbb
lret
stc
sar
xchg
jl
pop
and
lods
xchg
push
mov
bound
in
and
scas
xchg
add
add
mov
cmpsb
pop
insl
sub
pop
dec
outsl
inc
push
aam
pop
notb
xor
push
dec
mov
pop
and
sub
addb
push
mulb
fcompl
cltd
repz
pop
movsl
testb
loop
gs
push
mov
call
mov
cmp
jmp
shr
jecxz
insb
outsl
cltd
pop
and
xchg
pop
icebp
xchg
adc
pop
int3
xchg
xchg
jb
cmp
sub
rcll
xchg
xor
sbb
out
ret
stos
lcall
xchg
adc
ds
imul
dec
mov
jae
loop
or
aas
fldenv
inc
popf
pop
push
mov
lea
cmpsl
push
push
cmp
adc
add
fwait
sti
push
cmp
and
insl
add
popf
pop
test
jnp
popa
ja
xlat
xchg
hlt
mov
addr16
push
in
cmpsl
xor
vmaxpd
stos
mov
cs
js
pusha
imul
lahf
sbb
mov
sarb
mov
jle
sub
inc
sbb
inc
popf
adc
xchg
imul
lods
add
mov
stos
scas
push
dec
mov
mov
jns
in
subb
iret
pop
outsl
xlat
pop
jmp
and
cmp
mov
cmp
mov
popa
dec
push
stos
adc
sbb
pop
jge
movsl
sbb
shl
cmp
push
jl
pop
movsb
add
xchg
frstor
clc
aam
scas
push
fistl
jb
movsl
mov
sub
roll
mov
cmp
mov
jecxz
imul
mov
pop
out
addr16
add
mov
pop
les
mov
test
cmp
sbb
aas
frstor
pop
js
cwtl
fwait
push
inc
loope
scas
cmp
pop
jae
sarb
or
adc
push
push
repz
jp
and
icebp
xchg
inc
std
inc
fidivrl
subl
aad
mov
add
inc
push
jge
test
inc
cs
je
imul
in
jbe
sub
pop
aad
fldcw
fisubl
push
pop
std
mov
or
mov
mov
popl
outsl
pushf
aaa
in
stos
jb
arpl
iret
in
lcall
xchg
lret
std
add
inc
adc
loop
fiadds
sbb
les
dec
xor
push
je
dec
jo
xchg
mov
lret
add
pop
arpl
dec
shlb
cmp
push
ja
cmp
mov
and
pop
in
lret
sbb
aad
pop
rol
push
or
sub
mov
test
dec
hlt
jno
jge
jns
call
or
fcoml
sub
imul
adc
mov
lahf
xchg
enter
cmpsl
mov
vpshuflw
mov
pop
jle
push
pop
xor
or
jnp
hlt
mov
out
stos
pop
jl
shll
or
scas
aas
pop
mov
test
push
in
adc
mov
sub
push
lock
mov
clc
leave
sbb
or
shll
mulps
xchg
dec
lods
sbb
sbb
cmp
aam
daa
add
es
in
cwtl
xchg
sbb
roll
dec
sysenter
jne
inc
jno,pn
mov
and
and
ret
aam
int3
imul
cli
je
push
mov
mov
xchg
and
pop
jnp
icebp
mov
rcrl
mov
mov
cltd
ja
xchg
cltd
mov
imul
into
popa
in
jmp
fisttpll
pop
sbb
nop
out
sti
mov
jmp
xor
push
inc
jmp
decb
bound
push
sub
call
xor
int
data16
stos
or
icebp
xor
loope
lahf
dec
push
mov
mov
ret
mov
clc
pop
mov
sbb
data16
jno
mov
bound
dec
sti
xchg
rcrb
pusha
cmpsb
rcrl
jne
mov
stc
in
xor
and
or
arpl
shrl
cwtl
or
loope
mov
sbb
or
adc
loop
out
pushf
xlat
aas
sbb
jb
dec
inc
sbb
fs
dec
cltd
sahf
bswap
mov
fmuls
fistl
repz
addr16
scas
cmp
cmp
add
and
adc
mov
push
in
or
imul
insb
jmp
mov
inc
jns
loop
push
mov
cmp
sub
daa
fcmovne
mov
jne
sbb
bound
subl
fcoml
ret
repnz
jmp
xlat
mov
leave
shl
inc
mov
jbe
out
sbb
or
sbb
in
scas
loopne
fdiv
ret
pop
mov
lret
ljmp
add
test
das
dec
cmp
add
aas
popf
lods
mov
test
repz
or
repz
in
add
cltd
jecxz
mov
scas
push
push
dec
or
pop
lret
push
lods
inc
je
and
cmp
imul
xchg
mov
sbb
adc
into
add
push
enter
adc
sbb
pop
add
adc
mov
dec
jbe
xor
xchg
inc
lock
rcll
cmp
pop
ds
xlat
xchg
mov
pop
sbbb
scas
loope
mov
sub
hlt
lock
das
inc
adc
daa
cmpsl
clc
ss
les
xchg
dec
mov
xchg
fwait
jl
xchg
xchg
xlat
aaa
popa
xchg
pop
pusha
push
sbb
cmp
dec
cmp
loop
daa
ds
jb
inc
inc
cli
imul
jp
add
out
iret
adc
jbe
xlat
shrb
mov
std
push
pop
cmp
les
mov
cltd
sbbb
das
loopne
push
jl
bound
mov
mov
push
pop
lahf
sbb
mov
pop
add
mov
cmp
push
cmp
in
scas
and
ja
push
dec
adc
daa
add
movsl
lret
movsb
add
push
and
xor
aaa
movsb
jp
cwtl
mov
pop
sbb
jb
out
jl
test
jecxz
divl
fstl
mov
inc
or
xor
mov
sub
mov
outsb
or
fwait
mov
push
adc
jns
int
inc
push
mov
and
dec
ret
inc
daa
arpl
clc
in
add
ficoml
fs
out
bound
lock
and
dec
lea
mov
push
xor
dec
pop
sub
out
jbe
gs
js
xor
jne
xlat
mov
test
out
cmp
outsb
pop
pop
rcl
xchg
cmp
repnz
fwait
mov
mov
addl
cli
fnsave
scas
push
mov
adc
xor
std
iret
sub
in
jne
fisubl
xlat
dec
jnp
andb
pop
lds
mov
mov
or
idivl
les
orl
jae
mov
les
pop
mov
adc
aas
xor
mov
mov
test
test
rcl
cmp
stc
fisubs
adc
sti
mov
sbb
pop
psubusb
xor
mov
stc
xchg
call
fidivrl
rclb
add
adc
jmp
pop
test
adc
pop
mov
stos
inc
outsb
aam
clc
pop
stos
mov
push
dec
mov
push
xchg
lods
outsl
jae
inc
mov
aad
mov
rol
leave
mov
inc
sub
xchg
call
pop
lock
imul
lods
mov
cmp
fs
cmp
add
adc
pop
test
or
dec
ja
imul
adc
movsl
jge
push
je
in
ss
adcb
dec
mov
sti
lock
inc
aas
xchg
in
sub
push
lret
inc
push
daa
xlat
pusha
sbb
test
test
jno
test
aaa
sub
jno
dec
inc
rol
leave
inc
mov
mov
add
adc
add
adc
inc
dec
inc
fwait
mov
xchg
mov
int3
repz
sbb
repz
movsl
push
add
pop
inc
fcoml
mov
pusha
dec
mov
mov
add
aam
lds
sub
repnz
or
mov
push
insb
mov
sti
add
push
xchg
jae
scas
sub
and
sbb
mov
or
or
frstor
aaa
push
xchg
pushf
sub
mov
or
jle
mov
imul
cmpsb
arpl
inc
mov
add
and
or
sahf
push
xchg
addl
lock
bnd
mov
xchg
sbb
stos
push
inc
push
push
cwtl
xchg
and
inc
sub
mov
jg
aas
cmp
scas
sbb
xor
and
pop
sbb
sbbl
hlt
jb
rorl
jge
jl
test
aam
loopne
je
ret
pop
jmp
imul
or
outsb
push
rcrl
stos
repnz
in
mov
cli
cmp
hlt
clc
adcb
jecxz
cmpsb
cmpsl
pop
fbld
dec
inc
clc
lcall
int
sub
mov
std
mov
pop
aam
dec
mov
fimuls
ret
imul
jp,pn
lret
and
mov
mov
iret
fildll
test
sti
cmc
mov
lret
cli
dec
mov
push
pop
jmp
mov
hlt
shlb
and
xor
sub
inc
cmpsb
call
push
xchg
mov
das
cld
cmp
sbb
in
xlat
sahf
xchg
mov
adc
push
jne
outsl
mov
outsb
je
mov
push
push
jg
or
es
pop
aam
adc
inc
inc
add
jno
test
jp
dec
mov
adc
aaa
ds
lea
aaa
mov
movsl
popa
mov
gs
bound
and
lea
into
imul
and
out
cmp
shl
mov
mov
std
cmp
addr16
std
dec
mov
pop
jecxz
cmp
into
mov
shrb
cmp
sbb
in
mulb
fsubrl
div
popa
xchg
sub
mov
pusha
jp
pop
push
and
add
jmp
arpl
pushf
mov
push
jbe
add
sub
pop
jp
dec
adc
jmp
xchg
into
movsl
out
sub
add
mov
in
mov
roll
js
scas
sar
les
gs
add
jecxz
and
movsl
les
scas
mov
sbb
sub
mov
or
lock
push
inc
xchg
xor
aas
in
inc
inc
xchg
cld
cmpsl
adcb
xchg
loop
aaa
aaa
pop
fiaddl
or
cld
outsl
rclb
xchg
xchg
dec
rdmsr
adc
sub
mov
cmp
xchg
loopne
pop
push
scas
pop
sub
xor
jl
mov
dec
pushf
mov
sti
sbb
cmp
dec
jnp
test
xchg
inc
lret
stc
cmp
sbb
outsl
push
xchg
fdivrp
xchg
push
cli
jae
mov
xor
data16
inc
das
jl
adc
and
inc
push
jmp
and
xchg
sbb
pushf
daa
pop
loop
imul
jae
sbb
std
in
andb
jecxz
in
add
das
inc
sbb
inc
or
adc
cltd
cltd
mov
rorb
jnp
jb
outsb
aam
xor
cmc
mov
or
pop
cmp
pop
shlb
in
popl
mov
icebp
sbb
ret
jmp
dec
cmp
sub
mov
lods
popf
cwtl
popf
pop
out
fmuls
push
enter
or
daa
sar
cltd
sub
mov
in
mov
fbld
das
pop
and
test
xchg
add
js
mov
es
jns
mov
xor
jecxz
mov
push
cmp
je
nop
ror
or
push
pop
add
mov
jecxz
dec
pop
clc
push
inc
mov
pop
les
outsb
outsl
mov
pop
push
insb
dec
loopne
xor
pop
push
jne
loopne
je
jmp
push
jle
dec
test
jge
daa
in
ficoms
mov
shlb
test
mov
xor
ds
add
jl
adc
sub
pop
jecxz
mov
xor
cmp
decb
xor
popl
jmp
cs
adc
pop
test
inc
orb
adc
adc
adc
and
adc
push
pop
fs
outsb
popf
daa
imul
fcompl
or
aaa
xor
jp
sub
push
lock
shrl
stc
pusha
jnp
addr16
jne
sbb
pop
pusha
mov
lea
lods
jbe
xor
add
mov
mov
adc
lcall
data16
jb
push
shlb
jo
cmpsl
sub
mov
mov
push
or
dec
mov
mov
test
into
sbb
into
mov
shrb
push
mov
test
and
dec
test
mov
add
call
jno
and
lock
inc
cmp
outsl
pop
out
sahf
mov
lods
mov
aaa
in
mov
cmp
mov
add
rclb
fwait
dec
ljmp
repnz
mov
xchg
aam
xchg
push
dec
mov
mov
jns
xor
push
std
lods
cltd
pop
lods
subps
add
fdiv
mov
aaa
jmp
in
xlat
rolb
sbb
mov
push
test
xor
jbe
cmp
repnz
mov
popf
jmp
mov
out
stos
scas
aaa
orb
insl
cmpsl
cli
and
pop
nop
inc
or
es
push
jecxz
jl
mov
add
test
jg
in
xor
lock
test
mov
or
xchg
lods
repnz
je
inc
ss
dec
std
xchg
repnz
imul
out
icebp
add
dec
fldcw
and
into
pop
insb
mov
call
pop
test
mov
pop
add
stc
jl
push
iret
mov
fdivr
stc
in
clc
inc
mov
pusha
out
cmp
and
std
fistpl
add
mov
inc
pop
mov
test
cli
jcxz
cmpsl
imul
lahf
dec
lock
or
jo
and
inc
aas
add
aam
mov
xchg
iret
or
mov
push
outsl
cmp
cmpsl
mov
and
mov
popa
rcrb
xor
test
mov
xor
loopne
pusha
repnz
cltd
ret
daa
pop
call
lods
outsl
cmpsl
test
fsub
stc
rcll
xchg
mov
dec
ffreep
ss
add
in
mov
sub
js
outsb
test
pop
or
lcall
jno
in
ret
lods
test
pop
stos
jecxz
cwtl
sbb
js
js
cmp
cs
mov
shlb
mov
jecxz
imul
sbbb
out
jp
push
mov
mov
out
adcl
loopne
fwait
jns
cmc
fs
fildl
outsb
shlb
insl
dec
pop
aas
fldt
pop
lahf
movsl
jmp
mov
shll
ffree
pop
test
into
sbb
fldt
out
ret
or
sub
jo
pop
xor
std
xchg
sub
fildl
xor
lea
movl
movsl
or
out
insb
and
repz
loopne
add
pop
mov
sub
jmp
ret
add
es
stos
scas
sub
inc
mov
cmpb
loopne
push
jae
inc
mov
ljmp
les
pop
dec
sbb
dec
mov
cmp
push
fucomp
push
mov
xchg
ljmp
add
imul
xor
js
jmp
pop
clc
out
xlat
or
fwait
dec
lahf
jle
jnp
jne
add
mov
sbb
out
lahf
das
shrb
add
xor
bound
enter
xor
xchg
arpl
pop
mov
and
push
popf
pop
out
pop
and
push
cmp
fnsave
pusha
decb
xchg
xchg
xor
and
mov
enter
adc
pop
mov
sub
aas
enter
fiaddl
xor
cmp
pop
xor
pop
insb
jb
sbb
mov
xchg
xchg
pushl
jne
jns
push
xor
aas
aad
push
aad
fidivl
xor
ret
sbb
movsb
mov
pop
nop
aas
pushf
out
insl
and
push
out
xchg
call
mov
or
mov
loop
loope
push
add
imul
rolb
xchg
loopne
mov
xchg
out
push
and
cs
push
mov
dec
jb
inc
inc
cmpsl
fs
and
aad
xchg
and
ss
push
push
mov
lcall
scas
insl
mov
lahf
jb
std
js
sbb
adc
stc
jg
xor
das
daa
insb
in
repz
or
je
shl
mov
dec
and
or
cld
cmpsl
lahf
jl
lock
aaa
lods
lea
test
out
fsub
pop
daa
fisubs
in
les
mov
cli
and
shrb
xchg
rcll
adc
sbb
inc
mov
pop
push
push
aaa
psllq
xor
push
sarl
lahf
mov
add
repnz
dec
dec
and
mov
jg
ret
mov
push
xchg
and
dec
shll
cmpsl
icebp
adc
adc
repnz
out
insl
cmp
fcoms
dec
push
mov
popa
dec
bound
imul
jg
int
test
cmpsb
je
in
bound
cltd
pop
ljmp
imul
push
xchg
inc
out
int3
xchg
adc
mov
pop
testl
loope
jo
scas
or
or
insl
ds
or
ss
in
repnz
jmp
clc
push
fwait
jae
mov
mov
adc
outsl
std
cmpsb
push
pop
add
movsl
gs
jle
sub
pop
cmp
lds
mov
sbb
pop
loope
jo
ret
stos
mov
jno
dec
push
clc
decl
ss
dec
in
es
push
and
daa
jmp
ljmp
add
mov
sbb
ja
int
inc
dec
mov
dec
inc
fistpl
fisttpl
das
int3
das
jae
lret
ljmp
fnsave
ficomps
fimull
pop
or
and
or
sub
jecxz
dec
aad
cld
insb
and
jle
out
push
sahf
sub
xchg
mov
jns
mov
mov
mov
adc
sub
sub
loopne
mov
push
mov
movsl
mov
push
int3
pusha
jg
jae
push
jl
mov
jno,pn
jne
pop
clc
into
lcall
in
xlat
shll
movsb
or
inc
adc
out
mov
push
jnp
cwtl
aam
dec
lock
xchg
dec
pusha
pop
sar
fwait
push
ret
pop
sbb
rep
cmp
insb
cmp
mov
jne
das
stos
cmc
cmpsb
or
jg
jecxz
cltd
sub
mov
dec
and
aad
mov
push
cld
sub
jmp
mov
or
fisttps
or
lds
mov
push
push
gs
ret
mov
and
pop
cmp
push
pushf
xchg
mov
sbb
xchg
stos
cmp
sarl
je
test
mov
daa
or
pusha
sub
mov
push
jne
mov
fdivrl
stc
jbe
pusha
jp
and
adc
adc
fwait
arpl
adc
pop
pushf
fistpll
shrl
push
out
sbb
cmp
mov
insb
call
test
iret
dec
mov
mulb
leave
mov
arpl
add
dec
sub
sub
mov
ss
out
pop
pop
mov
push
xchg
mov
inc
cmp
lret
subb
mulb
dec
fadds
xor
mov
leave
mov
popa
jp
sbb
lds
mov
sti
movsb
imul
adc
lock
or
pop
push
mov
and
test
xchg
cwtl
pop
inc
sbb
mov
popa
dec
in
es
iret
loop
jecxz
jno
sbb
ss
int
mov
xor
fcom
lods
nop
push
negb
sbb
test
rorl
mov
std
mov
aam
call
in
inc
or
mov
shlb
add
sbb
shr
lcall
shr
xlat
cmp
xchg
pop
int3
mov
das
in
xchg
cmp
sub
rolb
push
xchg
or
js
mov
imul
and
jnp
ss
int
mov
scas
cmp
jg
adc
aas
aas
dec
movsb
out
sub
push
test
pop
jo
mov
std
or
xorb
push
fbstp
cmp
lret
lret
jmp
faddl
push
outsl
xchg
mov
gs
mov
hlt
test
clc
push
data16
add
fistps
fwait
and
lea
fisubl
mov
lds
xorps
int3
push
dec
lock
adcb
dec
or
adc
dec
rcrl
and
imul
push
dec
pop
mov
je
enter
dec
and
test
xchg
push
and
cld
and
sub
and
insb
frstor
jmp
nop
sbb
sub
cmpsb
push
or
xchg
aad
test
pop
cmpsb
sarl
mov
or
mov
adc
sbb
sub
jge
hlt
add
fldt
ljmp
adc
iret
mov
mov
sub
movl
repz
lcall
and
ficompl
jmp
fnsave
pop
inc
xchg
cwtl
ljmp
pop
add
cwtl
lock
stos
inc
and
andb
mov
test
mov
or
fisubs
mov
push
enter
out
sub
xchg
pushf
xlat
dec
lods
push
pop
mov
loopne
jb
pop
push
jo
sub
sbb
call
or
xchg
and
jb
clc
or
imul
inc
lods
lahf
jae
push
incl
mov
negl
loope
or
rcll
sub
repz
dec
rol
pop
out
push
mov
lds
sub
pusha
adc
aam
aam
jl
push
adc
mov
jno
mov
inc
push
mov
jl
ss
hlt
je,pn
mov
fldl
dec
rcrl
or
in
inc
sbb
test
sub
lods
fsubl
jl
push
pop
ss
adc
popa
fcmovbe
cmpsb
push
push
cli
stc
xchg
xor
dec
mov
andb
loop
adc
push
cmpsl
cwtl
mov
loop,pn
insl
dec
scas
sub
lahf
inc
sbb
pop
mov
inc
test
or
int3
mov
xchg
jg
enter
sbb
dec
pop
jnp
mov
scas
add
pop
scas
call
dec
and
pop
pop
sbb
pop
mov
cmc
outsl
dec
jne
shl
adc
cwtl
cld
push
add
push
push
lea
out
pop
inc
and
jns
or
mov
dec
cltd
lods
stos
pop
mov
rcll
popa
add
add
jge
stos
cmp
xchg
and
ss
xor
pop
sbb
inc
add
rorl
dec
push
add
or
ss
stc
test
jg
mov
fprem1
push
mov
sub
mov
fsub
sub
pop
sub
xorl
mov
push
pop
dec
decl
mov
nop
and
mov
das
std
es
jmp
xlat
push
stos
dec
adc
daa
cmpsb
push
and
mov
sahf
jo
into
inc
sar
test
sahf
fs
push
sub
lods
mov
dec
or
mov
push
pop
add
in
mov
movsl
adc
pop
cld
adc
in
push
xor
repz
fldcw
stos
loop
jnp
cmc
or
fbstp
push
inc
mov
jl
adc
xchg
lahf
jle
mov
lds
lods
data16
movsb
push
lea
mov
rcl
push
imul
int
mov
insb
xchg
rorb
and
cmp
mov
sub
loopne
fstl
std
mov
or
aam
pop
lea
jnp
xor
testb
jb
push
iret
add
loop
dec
mov
std
pop
mov
shll
cmpsl
shlb
mov
insb
iret
nop
insl
ds
pop
cmp
add
mov
add
mov
or
or
mov
aas
mov
mov
fdivs
lods
scas
mov
inc
nop
add
lahf
daa
or
push
subl
sti
mov
sub
and
pop
scas
outsl
xchg
pop
rcr
inc
sub
and
xchg
mov
ds
fcompl
outsb
push
pop
clc
xor
cmp
or
xchg
mov
rolb
push
pop
adc
orb
mov
xchg
push
mov
stc
lret
cld
lods
sbb
pop
cmp
das
xchg
jge
xchg
out
in
imul
xchg
mov
lret
test
inc
mov
cmp
mov
shr
sub
mov
int
loope
add
movsl
call
xor
pop
call
imul
add
mov
mov
in
ljmp
sub
sbb
outsl
push
mov
cwtl
sbb
jp
mov
repnz
mov
sbb
loop
cmove
call
je
lds
xlat
push
stc
scas
push
das
push
pop
xchg
in
lock
fsts
inc
das
dec
ret
daa
xchg
jne
jmp
mov
adc
aam
sti
xchg
sub
fsubs
and
addr16
es
jo
pop
outsb
iret
fldl
mov
mov
and
adc
xor
cmp
and
pop
testl
out
nop
pop
cmp
sub
nopl
mov
and
fstpt
insb
mov
xchg
and
fidivrl
mov
cmp
xor
jg
dec
outsl
nop
dec
mov
jecxz
hlt
or
jo
mov
push
sbbl
adc
outsl
jecxz
hlt
inc
xchg
movsb
pop
sbb
jmp
mulb
jl
dec
mov
fwait
jb
mov
lret
inc
mov
mov
decl
mov
test
lahf
mov
lds
lods
inc
inc
pop
and
lret
scas
stc
std
sbb
loope
daa
cmp
loop
jle
and
call
xchg
lock
adc
jmp
jb
mov
jns
cmp
pop
loope
pop
pop
sub
cmc
add
xchg
cwtl
and
inc
dec
pop
andl
mov
adc
mov
cmp
pop
add
cmc
repz
push
add
xchg
mov
mov
xchg
pop
mov
lds
sti
jne
mov
pop
xchg
stos
sarl
stos
and
adc
and
lds
and
decl
repnz
pop
jle
cmpsb
sub
pusha
pop
inc
or
and
sbb
sub
mov
ss
addr16
es
adc
pop
push
jmp
mov
lea
dec
mov
and
pop
mov
rorl
cmp
int
push
jns
fwait
psadbw
les
mov
leave
xchg
dec
xchg
cmc
pushf
sub
fdivrl
out
leave
push
pop
sbb
fdivs
into
jnp
mov
sbb
xor
or
or
mov
inc
popa
imul
and
jecxz
push
ret
mov
push
cmpsl
andl
sbb
and
cmpxchg
pmovmskb
mov
cmp
jl
andl
push
imul
jnp
notl
or
jno
push
aas
and
mov
cmp
push
dec
pushf
pop
dec
rorl
fists
cmp
mov
icebp
std
in
cltd
and
adc
iret
xchg
sub
push
mov
insb
jb
jp
stos
xor
repnz
stos
jmp
cmp
inc
insl
adc
xchg
or
int3
dec
fsts
mov
push
lods
xor
in
jo
adc
inc
and
aam
ljmp
outsl
adcl
fsubl
jae
das
pop
add
fidivl
gs
fs
mov
add
rcll
xchg
mov
push
pop
and
inc
in
xchg
pop
dec
out
repz
xchg
jbe
test
sarb
sub
xor
jmp
stc
fnsave
sbb
mov
xchg
mov
add
push
cmpsb
adc
in
mov
and
mov
sub
shrb
adc
and
adc
scas
xor
push
notl
dec
popa
cwtl
push
pop
aas
fldl
lea
mov
push
dec
pop
out
push
ljmp
sahf
not
cmpsl
movsl
repz
aam
jno
cmpsb
iret
cmc
fnsave
mov
rclb
pop
push
xor
add
das
inc
jae
inc
lahf
push
push
outsl
and
imul
and
fists
mov
cmp
mov
and
mov
sbb
xchg
adc
outsl
jns
push
mov
mov
or
cmp
daa
jns
scas
mov
mov
jnp
pop
pushf
and
push
fnsave
pop
out
push
and
pop
mull
out
jle
sbb
xor
fsubs
neg
fs
ror
orl
test
or
test
push
and
jb
data16
subb
cli
loop
jecxz
mov
or
ret
inc
std
or
outsl
call
xchg
inc
cmp
inc
icebp
loopne
adc
cmp
adc
sarb
je
ljmp
ret
inc
jno
pop
loop
push
push
jnp
xchg
incb
xchg
repz
ret
call
mov
jg
iret
or
scas
jns
sub
inc
pop
imul
add
xchg
sub
xor
adc
dec
adc
jae
xor
pop
push
sub
cltd
lret
mov
mov
jnp
js
xchg
push
mov
imull
into
push
je
sar
sub
cmpsl
lea
aam
inc
in
dec
cwtl
sub
cmpsb
and
and
imul
les
cmp
mov
std
stos
jge
push
xchg
roll
mov
mov
mov
dec
pushf
push
mov
push
xchg
mov
dec
loope
jae
repnz
call
xchg
imul
lret
test
xchg
call
inc
imul
mov
cltd
mov
sub
lea
outsl
fwait
call
mov
mov
sub
pushf
xchg
or
add
pushf
dec
insl
pop
sahf
ret
adc
popf
mov
sbbb
dec
push
xor
xor
xchg
test
sbb
scas
stos
xchg
and
inc
cli
add
out
mov
sbb
int
test
dec
mov
mov
faddl
cmpsb
loop
inc
add
lahf
insb
pushf
sbb
add
test
jecxz
int
repnz
cli
add
or
jmp
inc
stc
decl
stos
adc
and
cmpsb
xchg
cmp
insl
cmpsb
enter
push
sub
mov
ss
lret
pop
sub
cs
icebp
rolb
sbb
idivb
jmp
fsub
inc
mov
and
jo
mov
mov
fistps
in
sbb
pop
inc
dec
in
stos
push
icebp
sti
in
and
mov
push
xchg
add
push
xor
xchg
sub
inc
push
xor
add
mov
sbb
test
jecxz
shrb
enter
div
pop
lock
sub
out
pop
ss
pusha
mov
pop
lret
test
jno
out
into
dec
pop
lcall
dec
into
ret
add
nop
pop
fldl
jbe
loope
popf
mov
or
cmpsb
mov
in
cld
push
bound
lods
test
xchg
out
stos
sbb
cld
ss
das
xor
ret
mov
jb
jecxz
xor
and
cmp
pop
pusha
inc
mov
jo
cmpl
ret
push
mov
dec
test
sub
cmc
dec
push
dec
mov
mov
jecxz
cld
outsl
dec
lcall
into
push
out
mov
inc
call
test
test
in
gs
fwait
mov
fistpl
jbe
test
add
pop
mov
mov
aaa
jp
jmp
or
cmp
add
aaa
fidivrs
xchg
lret
jmp
daa
pop
sarl
or
int3
in
ficoml
push
jmp
sti
or
cmp
mov
xchg
mov
inc
sbb
dec
pop
fs
mov
sahf
testl
in
daa
ret
jp
clc
sbb
lods
adc
push
pop
fdivs
add
cmp
aas
jbe
jbe
inc
popf
pop
and
fsts
mov
push
mov
push
fists
es
xor
add
in
out
jns
sub
fbld
push
add
inc
inc
addr16
push
adc
pusha
lret
and
dec
xor
or
mov
aam
or
out
out
jbe
push
pop
add
pop
pop
std
pop
sub
lret
gs
jl
pop
xchg
mov
into
lcall
xor
cmp
leave
xor
adc
psubusb
in
sahf
ror
jbe
mov
cmpsl
adc
xchg
in
dec
sti
clc
in
or
or
mov
orl
scas
and
add
push
ficoml
mov
xchg
test
cmc
aas
pushf
cmpsl
pop
repnz
jmp
add
cwtl
jo
add
into
lret
cmp
jl
out
ret
jge
mov
mov
sbb
or
pop
inc
push
sti
addr16
push
cltd
mov
mov
sub
dec
mov
pushf
mov
adcl
push
add
fsubrl
int
enter
mov
or
pop
sbb
adc
sti
and
sub
leave
loopne
sub
or
or
sahf
push
dec
sti
arpl
add
in
sbb
lock
out
lds
mov
repz
mov
push
shr
jmp
lret
xorl
lods
and
rcrl
or
dec
mov
mov
push
fidivrs
into
call
jecxz
out
scas
insb
fiaddl
mov
mov
push
push
adc
lret
test
mov
dec
sub
push
pop
stc
shrb
push
shlb
jnp
mov
mov
testb
fisubrs
xchg
iret
dec
xchg
pop
sub
pop
addr16
xchg
sbb
jg
lods
nop
sub
push
sarb
inc
ljmp
cmpsl
adc
orl
and
mov
sahf
ficoml
shlb
decl
aam
cmp
lods
dec
adc
ret
jmp
ret
inc
mov
invd
arpl
pop
dec
pushf
es
jo
nop
aas
add
fcom
es
outsb
hlt
dec
ljmp
pop
inc
jecxz
in
daa
and
and
out
outsl
jns
xor
pop
repz
push
jne
add
gs
mov
enter
loopne
mov
jnp
xchg
test
dec
ror
mov
jl
mov
ds
mov
test
mov
and
lret
mov
int
jp
bound
mov
jb
mov
in
xlat
cli
mov
mov
or
xchg
pop
scas
sub
push
and
vmaxps
test
cli
out
xor
pop
add
and
je
lahf
xor
pop
and
fs
ds
mov
lahf
xchg
imul
adc
mov
icebp
inc
and
inc
sub
fdivrp
mov
jecxz
lds
jmp
mov
nop
hlt
jae
sti
shl
decl
les
cmpsl
mov
jp
faddp
jno
mov
xchg
sub
xchg
cmp
das
pop
int3
into
fwait
sub
xlat
pop
pop
pop
inc
push
insb
mov
test
xchg
repnz
ret
push
int3
push
and
mov
mov
xchg
sti
and
jl
movl
xchg
sub
xor
or
or
fnstcw
add
or
xchg
les
push
test
adc
adc
movb
push
adc
pop
or
lret
aam
test
sahf
cmp
mov
xor
cmp
je
sahf
mov
xchg
and
jg
cmp
in
mov
mov
sbb
rcrl
pop
xor
cli
das
lock
std
pop
lea
daa
icebp
shlb
fidivrs
mov
cltd
jmp
mov
dec
and
mov
inc
sbb
cltd
out
insb
arpl
cmp
les
adc
pop
or
lds
repnz
pop
iret
daa
adc
pop
push
jne
jo
push
pop
adc
rcrl
and
cmp
ds
lods
push
adcb
add
clc
out
mov
inc
pop
fsubr
hlt
sbb
or
mov
dec
push
sbb
cmp
adc
adc
or
mov
loop
mov
lahf
mov
in
jno
inc
push
or
mov
jecxz
in
inc
jecxz
mov
mov
rolb
xchg
jno
mov
cmc
scas
push
mov
cmp
and
add
les
pop
push
sub
xchg
loope
shrb
icebp
imul
loope
mov
das
jo
mov
push
aas
jns
mov
dec
loop
aas
pop
loopne
sbb
push
adc
cmp
push
inc
push
repz
out
bound
js
pop
repnz
inc
jo
add
push
pop
jne
outsl
arpl
ret
popf
popa
mov
rcrl
test
add
notb
mov
nop
xor
xor
mov
hlt
leave
and
cltd
scas
mov
fs
lds
dec
xchg
pop
fdivl
dec
out
fsubr
sbb
out
dec
bound
push
inc
jae
dec
cmp
in
iret
lcall
cs
inc
and
jecxz
xorl
inc
pusha
mov
sub
mov
xor
shll
cld
sbb
push
jecxz
out
sahf
push
mov
rcrl
sub
pushf
fistl
imul
clc
mov
mov
xlat
imul
xchg
call
clc
imul
andb
mov
rcl
aas
jmp
xchg
fsubrl
jnp
insl
cmp
stc
push
or
std
pop
aaa
add
add
divl
pop
mov
inc
xchg
jmp
rorl
sti
jg
xchg
int3
cmp
pop
mov
pop
in
orl
gs
mov
push
xor
dec
arpl
shrl
pop
ret
inc
popa
jbe
cmp
into
mov
ja
inc
mov
addr16
in
mov
negb
pop
stc
or
xchg
mov
pop
dec
ret
shll
jnp
mov
popf
sbb
outsl
jno
lods
repz
or
ficompl
mov
inc
mov
xor
ss
daa
lods
sub
xor
sbb
mov
dec
repz
clc
cmpsl
lret
stc
dec
enter
repnz
sbb
inc
and
in
in
arpl
xchg
xor
in
jno
or
xchg
mov
pop
stos
lock
ds
aam
ljmp
dec
cmpsl
sbb
lock
test
in
jmp
out
sbb
enter
lcall
mov
push
mov
cli
pushf
mov
testb
scas
adc
jg
subb
ret
cmp
adc
lcall
scas
and
stos
push
test
dec
les
out
das
cmpsl
fs
mov
enter
in
mov
in
mov
gs
stc
clc
push
push
mov
sub
stc
out
scas
jl
xor
stos
mov
xchg
push
xor
inc
xchg
mov
js
inc
jnp
gs
push
jge
shrl
mov
or
adc
dec
scas
jle
sahf
mov
loop
push
fsubr
mov
cmpsl
ljmp
cmp
or
mov
gs
jns
xor
push
sti
test
mov
mov
shr
rolb
jmp
mov
push
cmp
xor
out
jae
xchg
int3
cli
dec
jmp
imul
ljmp
mov
adc
add
jge
jg
xchg
mov
int
fiaddl
das
ljmp
mov
out
nop
popa
push
xchg
leave
fwait
cmp
out
push
add
mov
xor
mov
xor
out
sub
clc
jnp
repz
shl
inc
les
dec
jmp
cwtl
cmpsl
jecxz
aas
mov
lock
cld
das
fidivl
sbb
xchg
push
mov
add
inc
cmpsb
loop
mov
fsubrs
mov
mov
push
sbb
jae
fldl
dec
xchg
std
bound
inc
scas
out
mov
push
inc
bound
and
and
dec
inc
ljmp
or
dec
movsb
xor
mov
xchg
scas
add
push
std
aas
test
xor
mov
dec
mov
in
dec
aas
xlat
push
sbb
fsubs
add
pop
jmp
es
hlt
jg
leave
test
in
adc
mov
pop
test
sub
std
xor
push
call
dec
fwait
cmp
push
mov
shl
out
add
in
clc
test
inc
loopne
ja
cld
add
jbe
repz
pushf
lods
rclb
shr
pusha
or
cmp
xchg
push
xor
popa
pop
fstpt
and
test
stos
pop
imull
fldenv
rcr
push
jnp
adc
add
push
in
mov
cmp
sub
icebp
xorl
jp
ds
push
rcrl
cltd
loopne
into
fldt
fbstp
mov
aas
xchg
mov
inc
jg
cmp
dec
jno
in
clc
mov
ret
ja
push
notl
adc
mov
lcall
loop
mov
stos
in
pop
idivb
and
sub
cmc
js
mov
jmp
into
xchg
rorl
repnz
sbb
cmp
xor
sahf
jns
jecxz
arpl
lods
das
dec
jp
pop
loopne
das
add
cmc
dec
pop
test
daa
movsb
ret
lods
or
movsl
sti
out
jmp
add
int
xchg
inc
sub
inc
fsubl
sub
popa
lcall
pop
add
lock
pop
jp
sbbb
mov
stos
push
push
dec
js
pop
sub
pop
aad
adc
adc
xchg
loop
int3
xchg
pop
and
repnz
aaa
xor
es
loope
sbb
repnz
add
movsb
push
cs
jmp
inc
movsb
mov
push
lret
and
sbb
leave
outsb
add
pushl
iret
cmp
adcb
incl
cmpsl
test
stos
imul
out
jnp
std
adc
cmp
fsubl
adc
push
movsl
gs
outsl
out
adc
in
or
inc
xchg
in
cli
push
bound
test
xor
sub
incb
mov
xor
dec
ja
pop
decb
add
hlt
cmc
mov
ret
pop
xchg
repz
adc
fcomip
cmp
push
dec
push
pop
icebp
xchg
mov
loopne
cmpsb
adc
cmp
cmc
mov
push
pop
mov
mov
jmp
mov
push
sub
and
cld
xlat
sub
or
out
push
aaa
mov
adc
jmp
sub
inc
insl
jmp
shlb
jbe
daa
jno
jecxz
sbb
jp
mov
xor
cmp
pop
sub
test
stos
add
sbb
icebp
aas
cli
dec
cmpsl
sbb
pop
lods
loop
cmp
jmp
pop
or
aad
ljmp
jns
je
pop
mov
mov
push
jne
andb
shlb
cmpsl
imul
aaa
mov
fdivl
mov
and
mov
subb
push
mov
clc
mov
mov
popa
test
pushf
jmp
je
inc
das
rclb
mov
or
dec
cmp
jecxz
lods
sahf
call
sahf
add
adc
jno
rcrb
xchg
inc
fbstp
test
fiaddl
jp
adc
xlat
sub
dec
call
adc
mov
lods
adc
push
fiadds
jmp
xchg
iret
push
in
sub
or
add
lock
sbb
cmp
xchg
jmp
ljmp
rolb
clc
mov
xchg
push
aas
xchg
inc
enter
data16
and
cmpsb
inc
enter
lret
push
lea
push
daa
or
xor
stos
shlb
mov
lcall
mov
sbb
lahf
adc
cmp
loope
insl
push
jl
mov
call
lcall
test
jbe
fwait
xor
cmp
leave
lock
cltd
add
mov
rcrl
jo
cld
pop
stos
jnp
stos
sti
int
lcall
popa
test
inc
and
shr
shl
sbb
sarb
sti
inc
test
and
jecxz
addr16
push
pop
das
sub
loop
cmp
jmp
inc
sahf
add
mov
cmpl
sbb
xor
pushf
push
xchg
fbstp
popf
dec
push
fcoml
add
dec
sbb
sbb
fstps
xor
push
dec
subw
push
shlb
sub
jmp
sub
jne
sti
xchg
xor
mov
cltd
dec
push
jecxz
xchg
pop
adcl
jne
pop
insb
adc
sbb
sbb
in
lods
adc
fisubrs
bound
cmpsl
int
nop
mov
mov
pop
jb
dec
cltd
jb
repz
je
sub
les
es
in
push
pop
mov
pop
xchg
in
push
repnz
sub
aad
sbbl
int3
sti
stos
loop
xchg
into
stos
jmp
lahf
sahf
mov
mov
int
sbb
add
bound
mov
hlt
test
push
aas
mov
mov
inc
mov
pop
inc
mov
cmp
cmp
add
cmpsl
jp
sub
push
rorb
loope
mov
sbb
in
in
adc
aaa
xchg
int
xchg
pop
nop
jmp
ret
mov
in
int
pop
mov
push
jns
add
xchg
mov
push
lret
xor
popa
adc
loop
js
and
insl
lds
sub
sub
sub
das
neg
push
into
cmp
dec
incb
and
and
fiadds
push
cld
daa
or
inc
mov
fstl
sarb
pop
icebp
jnp
addr16
lods
mov
ljmp
inc
jle
out
mov
push
inc
addr16
outsl
pop
rol
ja
push
ja
mov
dec
repnz
mov
fidivrl
lcall
or
data16
xor
inc
ja
pop
cmp
ret
hlt
adc
push
das
mov
xchg
sets
sub
lret
xchg
dec
and
or
cmp
mov
sbb
fisubrs
jg
sbb
mov
and
lock
sub
xlat
push
stos
sub
cmpsl
test
cmp
ja
xchg
cmp
pop
and
and
loope
repz
arpl
ret
mov
push
jbe
jnp
ret
dec
push
dec
sub
sbb
mov
xchg
fdivrs
arpl
testb
inc
adc
fbld
les
sahf
fcoms
mov
sub
lods
cltd
cmp
mov
push
ss
xchg
jnp
xlat
outsb
cmp
cmp
ss
lods
and
adc
dec
sbb
pushf
addr16
mov
xor
or
xlat
xchg
das
adc
ljmp
fldt
inc
and
adc
push
cli
dec
sub
fisubs
orb
xchg
push
lea
push
inc
xchg
or
pop
push
jle
mov
and
popf
mov
mov
iret
ljmp
or
rorl
dec
sbb
push
push
movsb
sbb
adc
jp
xor
xchg
sarb
adc
aas
adc
aad
cld
xchg
xchg
das
cld
pop
cltd
movsl
and
dec
popf
je
dec
lahf
mov
xchg
jbe
cmp
cmp
sahf
inc
sbb
inc
orb
ds
jmp
int
or
out
faddp
loop
call
cmpsl
xchg
or
xchg
cli
fsubp
xchg
ret
jge
in
scas
add
jno
divb
bound
push
inc
cld
cmp
fstl
push
and
cwtl
je
es
pop
lret
jns
dec
mov
dec
mov
scas
adc
push
in
or
sbb
xor
popf
lret
mov
sbb
xor
xchg
mov
pop
pop
dec
jb
cmp
cltd
rcl
insb
mov
mov
mov
outsl
mov
in
insb
lahf
pop
push
adc
sub
clc
addr16
or
push
notl
or
stos
push
cmpsl
mov
push
fimull
enter
fisubs
cltd
cmp
subl
data16
add
cmp
push
xlat
testl
or
stc
adc
add
cmpsb
mov
mov
jno
sbb
ss
shrb
imul
push
jg
lods
out
adc
push
lock
mov
adc
loopne
pop
leave
rcrl
sub
pop
popf
out
xchg
push
imul
scas
push
imul
stc
fnstsw
pop
popaw
pop
lret
shll
daa
enter
clc
and
cld
mov
xchg
outsb
add
ljmp
and
jo
jp
aad
or
dec
into
mov
mov
ret
insl
test
sbb
lret
outsb
inc
mov
mov
pop
jns
out
and
out
pop
in
fisubl
push
and
adc
into
loope
out
fisubs
cmc
inc
jae
aaa
stos
int
jp
stc
jecxz
xor
fistps
xchg
loop
jae
aaa
popa
mov
pop
mov
add
std
bound
popf
mov
and
popa
push
mov
call
ja
dec
or
fisubs
xorb
arpl
add
xchg
fwait
mov
pop
popa
mov
cmp
rcr
push
enter
popf
dec
add
into
xchg
les
xchg
jns
xor
dec
shlb
fwait
iret
mov
pop
subl
add
js
ret
mov
jge
pop
bndldx
and
sub
pop
out
mov
repnz
stos
xlat
mov
outsl
pop
jb
call
test
add
mov
cmpl
adc
loopne
push
jne
cmp
mov
mov
lret
xchg
out
sub
cli
fs
push
insl
sti
jae
and
push
decb
dec
pop
mov
push
lock
and
int3
ret
pop
in
loope
add
lahf
clc
jge
mov
push
and
andl
dec
sbb
sbb
leave
xchg
sbb
xor
addl
and
das
ret
mov
adc
mov
inc
cwtl
adc
sbb
lahf
cmp
call
js
adc
not
out
add
cmp
lahf
ret
out
test
sti
pop
test
aam
jnp
pop
shll
lods
pop
xchg
mov
and
icebp
loopne
push
xor
inc
sbb
lds
lods
sbb
inc
pop
cmpsb
xor
pop
xchg
insb
out
cmc
jge
dec
jnp
pop
push
mov
sub
sub
pushf
pop
sub
in
and
fildl
repnz
mov
xor
hlt
push
mov
loop
xor
stos
jle
icebp
hlt
inc
xchg
dec
push
fldenv
mov
xchg
lea
push
int
jne
fisttps
mov
pop
pop
or
test
cmp
jbe
xchg
or
sub
jecxz
into
sarl
dec
pushf
and
hlt
outsl
aad
mov
xor
lock
lret
mov
or
add
jle
outsl
ret
movsb
imul
add
adc
sti
pusha
pop
push
addl
lock
add
js
inc
inc
js
xor
aas
dec
xchg
cmp
imul
jge
push
jmp
jp
mov
outsl
jmp
xchg
imul
fnstenv
mov
sub
ja
pop
inc
pop
mov
mov
push
call
mov
mov
xchg
pop
outsb
push
clc
icebp
pop
and
xlat
sar
xor
sub
je
mov
mov
in
std
fs
fnstcw
leave
gs
pop
jle
xor
sbb
out
in
push
mov
mov
in
repnz
push
jns
ss
xor
sahf
jecxz
lahf
mov
and
mov
rcl
or
inc
ret
dec
cmpsb
xchg
add
lret
scas
int3
sbb
test
repz
push
push
pop
int
pop
add
add
int
push
xor
jne
sub
aas
mov
pusha
idivl
add
mov
sbb
stc
mov
xchg
push
push
mov
repz
cmc
mov
push
xchg
mov
fs
mov
add
in
repz
adc
in
icebp
mov
or
lar
aas
mov
dec
scas
cmp
out
adc
pop
hlt
into
mov
fidivs
mov
or
cmp
mov
mov
cmovs
cmp
ficomps
jne
lcall
sub
rclb
dec
add
xor
xlat
shlb
xchg
iret
adc
hlt
fimull
push
lods
movsb
xchg
add
mov
test
jb
inc
cwtl
enter
icebp
add
or
or
out
pop
push
mov
jae
sbb
push
push
lret
out
fcmove
mov
add
je
sti
ret
in
pop
hlt
dec
adc
push
pop
outsl
fnstsw
stc
fisttpl
push
and
mov
jge
fmull
inc
icebp
loop
orb
fdivrl
shlb
mov
mov
leave
imulb
mov
inc
pusha
insl
imulb
inc
test
cmp
sbb
jnp
sahf
jecxz
lret
cmp
loop
add
push
sbb
cmp
and
mov
addr16
lret
sti
hlt
rclb
in
jg
enter
ret
aad
outsl
sub
cmpsb
mov
enter
jb
jnp
mov
push
pop
cs
notb
xchg
and
repnz
mov
push
aad
xchg
mov
pop
aas
xchg
sbb
mov
clc
push
pop
and
or
cmpsb
mov
cmpsb
loope
lea
and
mov
ds
cmp
fistpll
nop
push
dec
jmp
push
jmp
cmpsb
or
mov
popa
ficomps
popa
pusha
leave
push
popa
and
into
ret
push
test
loope
movl
jnp
lret
or
lret
xor
lcall
push
or
in
and
xor
inc
and
dec
jmp
lret
lcall
out
ret
sbb
hlt
add
sbb
dec
mov
add
lret
js
pop
popf
popa
les
mov
aad
sub
and
gs
inc
loope
adc
sbb
test
rorl
sbb
fs
and
lock
push
aas
shrl
fcom
cmp
xchg
rorb
pushl
and
adc
rolb
adc
scas
push
mov
mov
xor
rorl
push
sub
sub
subl
pop
loopne
cmp
inc
push
cmp
mov
daa
adc
adc
pop
lods
sbb
inc
js
or
rcrl
call
dec
sbb
inc
daa
mov
pop
shlb
mov
mov
jno
add
andb
fcoms
jmp
pop
stos
stos
daa
mov
xchg
inc
pop
xchg
ret
lock
dec
std
mov
fsubl
and
or
movsb
imul
add
inc
xchg
push
add
cmc
cmp
xlat
dec
out
aam
popf
cld
xlat
cmpsb
int3
push
cltd
pushf
jl
add
add
lahf
add
in
test
lods
iret
xchg
jns
cmp
mov
push
sbb
in
or
sub
clc
cmpsb
out
xchg
or
jge
int
pop
test
test
outsl
dec
mov
sub
sub
jp
js
jnp
mov
jecxz
lods
fstps
sub
lods
inc
nop
adc
cld
mov
xor
cmc
outsb
xor
movsl
cltd
cmp
daa
xchg
cmp
sahf
mov
negb
insb
out
cmp
andb
jl
arpl
sub
fisubrl
add
jl
cwtl
imul
fs
loop
scas
sub
lret
jae
xor
inc
inc
mov
jbe
inc
inc
pop
into
push
pusha
and
and
xchg
ret
add
push
lods
xor
lret
mov
pop
shl
sbb
xor
int
jp
lret
mov
lcall
xor
mov
and
and
pop
sub
inc
icebp
fstp
rcrl
or
xchg
push
sub
filds
mov
xchg
lods
pop
jmp
and
mov
pop
movsb
push
xor
loope
imul
lods
xchg
push
fucomip
pop
lret
call
cli
dec
add
mov
and
lret
outsl
mov
sub
imull
cmpl
addr16
xor
add
adc
dec
gs
push
jg
lock
int
lds
add
pop
pushf
mov
mov
jmp
out
stos
pop
jae
iret
add
cmpl
push
iret
ds
stos
add
push
cmpsl
mov
imul
iret
or
jmp
jle
pop
jecxz
ds
call
aad
sbb
repnz
scas
cmp
add
jmp
sbb
or
mov
mov
jbe
enter
mov
push
xchg
mov
push
test
mov
ret
mov
adc
je
popf
lret
cmpsl
xchg
jo
dec
int3
cld
sbb
push
repz
sbb
push
daa
dec
lock
push
cmpsb
xor
stc
in
inc
dec
enter
insl
pop
cmp
add
outsb
push
addr16
mov
pop
iret
xor
sbb
mov
mov
lods
cmp
mov
mov
dec
adc
lods
cmpsl
xor
cmp
testb
mov
outsl
lret
dec
sahf
xlat
es
sti
leave
pop
xchg
repz
arpl
bound
test
leave
jl
nop
mov
mov
or
mov
stos
fsubl
jnp
jp
add
cmp
jno
xor
push
stos
pushf
pop
subl
dec
mov
pop
cmp
cmp
mov
bound
dec
insl
aaa
jns
lea
jge
aaa
ret
mov
ret
jbe
xchg
fists
cwtl
mov
movsb
cmp
xchg
jecxz
add
inc
jmp
mov
add
pop
cltd
icebp
out
mov
mov
or
push
pop
mov
jg
xchg
mov
out
jno
cmp
roll
stc
lds
mov
rcrl
xor
fisubl
outsb
out
jle
nop
jb
mov
test
sar
aad
rcl
jg
and
mov
add
dec
cmp
dec
pop
lret
sti
xchg
dec
lret
jp
mov
push
pop
dec
mov
rorb
inc
imul
movsb
mov
movsl
and
inc
outsl
xchg
fsubrl
inc
mov
or
jb
shlb
int
inc
sub
ret
mov
xchg
fiadds
cli
mov
inc
out
push
inc
call
dec
outsb
sub
add
pop
dec
cmpsl
mov
inc
sbb
pop
rolb
dec
xor
mov
js
aaa
test
mov
mov
aad
in
aas
jne
aaa
add
adc
imul
push
push
fs
stos
mov
imul
in
pop
dec
mov
imul
stos
inc
xlat
jae
test
out
adc
mov
cmp
xchg
cmp
pop
jl
jns
pop
int3
cmpsb
int3
pop
sbb
and
add
aam
pop
add
fdivrs
fisttps
in
ja
out
sub
jne
in
mov
push
ret
push
ja
mov
mov
jae
mov
ret
js
xor
ret
mov
pop
lock
jl
dec
push
pop
pop
push
dec
mov
outsl
mov
xchg
mov
mov
and
imul
shlb
sub
test
repnz
and
and
sbb
xchg
jge
push
test
jp
or
into
xor
pop
ss
xchg
add
push
cmpsb
push
and
lret
adc
jno
jb
add
push
fs
scas
testb
pusha
dec
icebp
movl
inc
addb
pop
mov
subb
aad
stos
xchg
sbb
or
sbb
mov
xor
xchg
inc
sub
cmp
dec
sub
pop
stos
insl
fidivs
pop
xchg
das
adc
movsb
cmpsb
les
mov
jle
sti
lds
pop
xor
dec
clc
pop
pusha
popf
xchg
lds
fcomi
push
dec
mov
outsl
iret
mov
iret
outsl
in
dec
es
enter
jecxz
lds
push
stos
out
int
popf
and
repnz
mov
xorl
and
hlt
inc
out
fwait
movsl
arpl
loope
das
leave
xor
rcrl
fiadds
jecxz
push
repnz
mov
hlt
sub
xchg
nop
lea
rcrb
out
and
lods
in
mov
or
pop
xlat
out
xor
pop
pop
cmp
pop
jne
and
jbe
pop
outsl
imul
fs
mov
mov
pop
call
mov
and
nop
in
add
aas
mov
mov
inc
add
push
faddl
push
add
push
clc
inc
outsl
pop
lods
nop
xor
ficoml
sbb
loop
mov
stc
sbb
divl
test
and
js
stos
shlb
lea
sub
aaa
push
mov
cli
stos
int
out
fstps
cmp
push
xor
out
xor
aad
and
leave
xchg
add
mov
cli
pop
das
xchg
push
fiaddl
add
loopne
xlat
je
add
movsb
mov
lock
aam
and
divb
jae
xchg
in
pusha
cmpsb
mov
leave
shlb
add
mov
lahf
sub
mov
ljmp
rcrl
and
sti
mov
pop
push
cltd
xchg
imul
push
lods
daa
xchg
pushf
sarb
push
fsubl
inc
rorl
rcrb
inc
xor
inc
inc
fs
and
rcrb
and
mov
aad
test
insl
jo
sbb
fdivrp
mov
inc
js
test
xor
mov
divb
lahf
xchg
mov
xorb
mov
lods
jne
jecxz
outsb
out
jns
push
and
pop
mov
fdivl
scas
push
mov
mov
bound
inc
push
iret
and
fdivs
sub
adc
leave
add
push
xchg
mov
lcall
cmpl
test
cmp
lret
mov
adc
dec
add
sete
fnstcw
mov
sbb
aaa
out
adc
mov
bound
mov
jp
call
xchg
dec
xor
xor
mov
mov
sub
add
repz
cmp
add
add
sarb
jnp
cmp
les
sbb
inc
or
adc
pop
xor
cmc
jbe
loop
sar
xor
andb
iret
subw
sbb
iret
jb
push
or
mov
shrl
dec
aas
ja
ljmp
pop
gs
jmp
sub
jne
push
mov
xor
jae
jb
test
gs
inc
xchg
mov
jle
jo
xchg
or
dec
sbb
adcb
xchg
and
mov
rorb
inc
or
cmp
add
adc
xor
adc
dec
pop
dec
movsl
xor
cwtl
push
and
cmp
fs
dec
mov
add
jle
int
fmuls
pop
inc
pop
dec
orl
jl,pn
lret
push
xchg
add
cmp
cltd
std
leave
mov
insl
repz
out
frstor
mov
push
cmp
dec
sub
pop
jge
mov
mov
inc
stc
scas
add
roll
loopne
xor
shll
xchg
fnsave
dec
lret
push
pusha
jle
and
jo
shll
cmp
mul
sub
jmp
push
lret
inc
loop
mov
jg
aas
pushf
fdivrs
mov
jmp
mov
out
in
xchg
imul
mov
add
lods
pop
shr
push
cwtl
js
std
loopne
pop
scas
jo
addb
push
inc
ljmp
and
in
out
rorb
push
aas
xor
cmc
inc
scas
outsb
lock
xchg
pmulhuw
out
dec
into
mov
xchg
mov
in
push
pop
inc
xor
movsl
jb
inc
lcall
lahf
mov
jl
std
inc
insb
cmp
mov
ret
dec
sub
fcompl
out
jge
mov
sub
inc
lock
cld
xchg
pop
push
cmp
push
out
ja
arpl
pop
hlt
pop
pop
inc
aad
addr16
iret
imul
imul
hlt
cwtl
cmovns
ds
test
mov
loope
and
cmp
and
insl
cld
ret
xlat
or
mov
outsb
movsb
mov
stos
data16
lcall
adc
ljmp
add
insb
mov
cwtl
lcall
mov
add
or
push
or
loopne
and
and
lret
mov
outsl
push
shll
lea
push
test
leave
lds
xchg
rorb
fnstenv
stos
add
fs
ljmp
or
mov
mov
fisubl
sar
lret
pop
pop
mov
mov
pop
dec
cli
dec
mov
cltd
sti
xchg
cmpsl
cltd
cmpsb
je
push
dec
pop
in
add
jmp
imul
fdivr
cld
adc
shlb
pop
aas
pop
dec
lods
push
andl
cmp
dec
jg
sbb
popf
fcmovnbe
ja
je
sub
jns
jnp
iret
push
inc
xchg
divb
adc
bound
or
in
cmp
dec
mov
mov
mov
push
into
push
rcl
add
outsb
test
sbb
aaa
and
sub
rcrb
dec
dec
and
out
push
nop
inc
fcoml
pop
sbb
out
jne
pop
movsb
arpl
movsl
xor
mov
adc
daa
push
out
dec
fisubl
adc
xchg
jg
push
sub
addb
xchg
push
mov
mov
mov
int3
loop
dec
popl
add
or
xor
xor
mov
das
sahf
add
inc
dec
in
or
mulb
bnd
push
fstp
mov
js
sub
xchg
jno
lahf
and
insb
xor
mov
sarb
add
xor
ror
xchg
xor
in
inc
ret
sub
fdiv
pop
fstl
xchg
ljmp
xchg
dec
dec
aaa
int
cmpsl
je
push
mov
xchg
roll
loope
mov
pusha
fsub
inc
mov
jge
dec
push
mov
std
fiaddl
pop
les
xlat
mov
not
pop
inc
mov
inc
aaa
fcmovnbe
or
outsl
xchg
dec
sbb
shrl
iret
ret
jo
lcall
es
push
inc
mov
popf
pop
fcoms
movsb
xchg
push
int3
push
lods
lea
imulb
xorl
jle
lods
popa
ds
and
sbb
cmp
pop
jmp
out
mov
call
fwait
push
mov
push
mov
lods
ds
and
and
xor
dec
push
xchg
outsl
push
movsl
inc
or
xchg
stos
ja
add
inc
int3
test
sub
int
adc
js
clc
subl
aaa
cli
dec
andl
sbb
and
or
sbb
ss
test
push
cmc
xchg
jnp
mov
xchg
stos
aam
jp
inc
sti
adc
push
test
inc
iret
jo
popf
sub
and
inc
xor
or
leave
and
mov
and
jne
int
push
call
xchg
xchg
in
dec
cltd
jge
adc
dec
loop
stos
push
pop
or
push
inc
push
andb
cli
jae
scas
cmp
pop
jmp
mov
xchg
cmc
push
cmc
aaa
xchg
pop
jge
pop
and
cmpb
fnstenv
mov
pop
jp
lds
repz
fstp
push
pop
outsb
push
jp
adcl
clc
sub
mov
and
lahf
cltd
push
aaa
pop
mov
sub
aam
pushf
aad
and
loopne
imul
push
and
inc
popf
popf
push
imul
lods
xor
mov
xchg
cmp
orl
xor
push
loope
pop
xchg
jb
jbe
cmpsb
ret
xlat
sarb
mov
fmull
ss
xchg
cmpsb
dec
xor
jbe
sub
faddl
add
xchg
nop
or
mov
push
outsl
pusha
jmp
out
pop
xchg
aam
mov
xor
cmp
or
test
in
or
sbb
mov
lds
cmp
mov
fwait
push
xchg
bound
mov
imul
aas
mov
setbe
outsl
rcr
sbb
shll
movsb
sbb
mov
jns
push
adc
jge
cmp
mov
push
xchg
insb
notl
mov
add
or
mov
loope
sub
fists
push
xor
jmp
push
sub
mov
fimull
and
mov
test
fsubs
popf
je
dec
xlat
icebp
jge
out
int
popl
cmp
into
sbb
add
push
dec
sahf
and
andl
pop
cmp
in
xchg
out
push
pushl
inc
js
jl
jle
sub
ja
dec
dec
iret
cmp
mov
xor
pop
imul
xchg
mov
or
inc
mov
fldenv
movsl
movsl
sbb
adc
jp
and
ja
xchg
js
lock
mov
add
lret
scas
push
mov
adc
and
call
mov
pop
and
cmp
stos
cmc
aad
pop
fsubl
mov
loope
mov
repz
ret
push
out
loope
divl
or
ret
clc
xlat
fnstcw
sub
sub
clc
and
pop
and
pop
fidivs
orb
gs
or
and
fstps
push
push
movsb
push
fcoml
push
inc
ffreep
adc
cmpsl
mov
mov
mov
out
lcall
dec
inc
pop
repnz
popf
addb
leave
outsb
add
inc
dec
pop
add
or
push
fs
aam
cmp
rcrb
dec
cmp
out
fsubrs
cmp
mov
fisttpll
adc
shll
fs
fcomi
call
jns
je
jge
cmp
arpl
jbe
push
addr16
decl
out
outsl
les
je
js
movsb
push
mov
adc
testb
fbld
icebp
jno
sbb
lcall
xor
sub
call
or
sarb
jmp
sbb
mov
sbb
inc
setl
mov
push
sub
fwait
push
sbb
aam
loopne
adc
jbe
jmp
iret
xor
movsb
mov
fs
adc
push
lea
add
enter
scas
mov
cli
lods
rolb
and
orb
stos
arpl
sub
mov
mov
dec
fs
rclb
test
cmp
stc
mov
sbb
test
lahf
or
add
leave
mov
xchg
aas
sti
rorl
jbe
add
xor
fwait
xlat
and
int3
and
in
fnstenv
loopne
cld
mov
fldcw
sarl
fsubrs
js
jecxz
insb
lods
les
add
sbb
xor
daa
push
xor
inc
outsb
cltd
out
inc
sub
outsl
pop
rclb
addl
add
jl
insb
pop
dec
dec
jo
sbbl
in
test
mov
lock
das
xchg
sbb
movsl
dec
jae
and
jp
les
test
test
pop
lahf
int
sti
push
jne
mov
lahf
jae
push
cmp
jmp
lods
dec
iret
adc
jae
je
pop
adc
pushf
dec
stos
jno
push
in
outsb
ret
out
dec
jno
popf
das
and
scas
test
or
sub
pop
inc
xorl
ja
xor
push
cmp
rcl
cmp
addr16
or
movsl
ja
sub
lret
pop
xchg
orl
clc
clc
sahf
push
gs
add
popf
pop
mov
mov
jmp
mov
cmpsb
in
inc
arpl
in
and
insl
sub
std
lret
mov
xor
jmp
out
repz
outsl
xchg
cmpl
xor
data16
repz
ret
or
dec
aaa
mov
cmp
movsl
add
adc
rcrl
aas
sarl
in
pop
sub
dec
push
push
fsubl
lea
jg
stc
cld
icebp
das
les
shlb
xchg
xchg
nop
scas
loope
adc
pop
pop
outsb
loopne
out
mov
jp
cli
inc
ja
add
fnstsw
mov
testl
sbb
jo
pop
lods
pop
mov
cmc
xor
sub
gs
mov
and
jne
fs
sub
pop
arpl
mov
nop
lcall
mov
mov
sbb
or
cmp
push
aaa
sbb
bound
inc
lods
in
mov
push
stos
jb
in
cld
jecxz
cli
iret
lods
addr16
cld
dec
adc
mov
push
pop
hlt
and
push
out
cwtl
cmpsb
pushf
pop
js
dec
fsubl
lea
mov
dec
and
cmp
daa
jnp
or
pop
cmp
inc
ds
test
test
xchg
ja
jmp
je
stc
push
loop
pop
sub
mov
sub
adc
adc
jae
mov
and
sbb
imul
cmpsb
icebp
sarl
gs
scas
inc
cmc
mov
orb
jg
xchg
mov
pop
ljmp
fidivrs
mov
pop
push
fwait
cmp
inc
push
dec
subb
push
push
cmp
aaa
pop
pop
inc
jo
xlat
inc
out
push
dec
xor
mov
ja
sti
adc
jns
rcll
fistl
in
adc
pop
outsb
sbb
shl
inc
xor
sub
mov
clc
dec
subb
enter
je
test
adc
int3
push
cs
hlt
push
cmpsb
cmp
in
rcr
clc
push
enter
cmpsl
mov
mov
xor
shll
lock
pop
clc
mov
pop
inc
and
pop
not
dec
pop
iret
lret
das
bnd
mov
stc
pop
dec
cli
xor
push
lcall
sbb
jp
pop
sbb
or
inc
jp
sarb
or
mov
add
test
lahf
loopne
mov
popf
jb
dec
mov
cmpsb
bnd
hlt
fucomp
jae
add
cmp
mov
aas
shll
inc
cmpsl
stos
dec
inc
cmpsb
mov
push
sbb
ja
repnz
mov
lods
ficoms
mov
add
jge
and
ficomps
add
mov
push
sahf
xchg
out
aas
push
jecxz,pn
mov
loop
xchg
lods
dec
lahf
mov
dec
xor
dec
stc
add
or
test
sbbl
and
and
jno
sub
inc
jle
inc
inc
repnz
xchg
inc
sub
lods
sub
sub
mov
add
adc
cmp
pop
sbb
add
push
lret
je
inc
cli
movsl
add
ficomps
sbb
inc
or
cmpsl
push
push
inc
adc
jns
push
inc
xchg
popa
or
ret
sub
jle
sub
jne
movsl
adc
clc
jle
out
ds
xor
aaa
ret
sbb
repnz
lret
add
sete
pop
xchg
jae
daa
pop
fiaddl
ss
dec
das
int
push
int
push
xchg
insl
mov
shlw
ficompl
shl
cltd
movsl
jp
and
insl
jmp
shlb
mov
movsb
arpl
pop
inc
inc
jbe
jmp
test
jmp
cli
sahf
std
lock
and
test
mov
push
mov
cmp
mov
push
cltd
and
pop
push
sbb
mov
mov
icebp
fiaddl
xchg
and
sbb
roll
ja
add
inc
cmp
int
mov
out
push
sbb
jl
adc
xor
test
cs
incl
cmpsl
lret
int3
sub
imul
test
aam
sbb
cmp
loopne
jne
inc
cld
push
xor
in
aad
inc
lods
notl
les
mov
push
inc
xor
jecxz
cmp
lds
fnstenv
shlb
xchg
cmp
xchg
lods
incb
cmpsl
mov
add
data16
mov
pop
adc
test
push
test
stos
or
rol
sti
push
outsl
add
jbe
into
stos
push
pop
mov
sbb
push
xor
and
sbb
mov
jns
xchg
mov
addr16
add
mov
imul
loope
dec
jno
push
cmpsb
lcall
jns
test
imulb
xchg
xor
sbb
sbb
pop
ret
dec
mov
int3
pusha
xor
movsl
int
dec
add
ret
test
mov
jmp
jg
xorl
es
pop
cmp
pop
sbb
aaa
stc
popf
push
dec
xchg
xchg
pusha
inc
and
into
jbe
lea
into
stos
adc
mov
push
fstl
outsl
sub
push
add
data16
or
adc
rclb
dec
movsb
mov
ds
jmp
popa
inc
aad
mov
or
test
mov
xor
inc
std
pushf
out
popl
push
jo
or
sub
es
push
sub
adc
enter
stos
mov
jle
xchg
int
movsb
adc
inc
fdivr
mov
in
xchg
popl
push
xor
gs
add
in
sub
mov
popf
fs
in
test
push
rolb
bound
xchg
lods
or
push
iret
sbb
push
xor
ljmp
cmpsl
xchg
mov
nop
int3
inc
test
and
or
ret
dec
push
xor
rorb
add
ror
int3
loopne
pop
add
mov
hlt
dec
popa
bound
test
into
enter
add
jg
pop
sub
into
or
mov
inc
popf
ljmp
xor
iret
add
out
clc
sbb
lahf
nop
mov
lret
das
ds
jb
dec
sti
sbb
imul
and
loopne
add
jg
mov
outsl
cmp
nop
pop
adc
mov
inc
sub
adc
repnz
stc
lods
sahf
adc
testl
lock
cmpsb
lods
and
mov
mov
aas
pushf
psubw
int3
mov
ret
sbb
ret
or
push
mov
pop
add
fs
insb
add
jp
dec
jne
push
or
ficoms
jns
push
mov
mov
leave
cmpsl
movsb
std
jb
cmp
sub
adc
jmp
add
insl
test
push
fwait
movsl
lret
aaa
gs
lret
pop
sbb
lret
mov
into
ja
xor
lea
test
out
addr16
or
add
in
imul
mov
push
xor
xchg
sahf
push
and
mov
mov
sub
loop
sbb
nop
orb
or
mov
and
shll
jecxz
mov
dec
adc
and
lret
sub
jns
mov
fadd
mov
sbb
fistpl
xchg
pop
mov
sti
adc
outsb
jl
jae
jl
nop
movsl
in
jecxz
push
fisubrs
imull
or
add
xchg
call
insl
mov
and
out
xchg
sti
fnsave
sti
add
decb
std
jl
mov
scas
sbb
mov
sub
inc
xor
pop
sbb
addl
shlb
lcall
cmp
jbe
xchg
mov
fwait
mov
sti
repz
mov
shll
stc
notl
pop
push
arpl
add
pop
lret
or
std
add
mov
cmp
jmp
inc
xchg
xor
inc
adc
ljmp
push
aam
push
cmpsb
pop
ret
jae
in
outsb
cmp
cli
sbb
into
sahf
in
repnz
dec
mov
sarl
aam
cmp
pop
xchg
ret
out
or
cwtl
jp
dec
jns
push
sbb
enter
test
ffree
jl
shl
mov
fcomp
dec
sub
loope
sub
mov
adcb
lahf
pop
cmp
adcl
xchg
lret
push
push
add
mov
stos
fs
test
test
popf
mov
add
push
xchg
cmp
sub
inc
sub
sbb
movsb
or
mov
ljmp
jl
pop
stos
push
js
cld
push
stos
lret
mov
daa
hlt
jbe
and
rol
mov
jmp
cli
and
push
jae
in
pop
adc
xlat
xchg
in
adc
movsb
das
mov
leave
add
lahf
xchg
fnstsw
hlt
mov
clc
push
outsb
into
loope
fiaddl
in
cmp
fisubrl
je
loope
inc
das
fists
jno
out
xor
dec
divb
movsl
add
dec
xorb
mov
jmp
jne
mov
mov
bnd
pop
mov
xorl
sub
and
sub
dec
adc
inc
push
and
cmp
cltd
inc
into
cmp
mov
inc
call
mov
clc
mov
shrb
adc
das
lcall
mov
mov
loope
das
loop
cvtps2pd
push
cmc
jo
js
push
bound
stos
add
cmp
jp
shll
add
stos
jmp
insb
imul
inc
xor
dec
pop
cld
sbb
jecxz
dec
pop
inc
aaa
add
push
sub
cmp
mov
xlat
popa
in
scas
insl
cmpsb
jg
jecxz
jns
pop
jns
cli
in
clc
cld
lret
add
lods
movsb
repnz
inc
out
adc
push
ret
nop
repz
cmp
xchg
hlt
repnz
sbb
stos
stc
sti
inc
jecxz
adc
rclb
inc
jmp
icebp
inc
mov
and
bound
adc
cltd
dec
and
jecxz
and
dec
xor
mov
movsl
in
push
and
xchg
fs
and
pop
insb
dec
dec
inc
pop
sbb
cmpl
push
add
jns
std
repnz
lock
loopne
bound
add
daa
mov
sarb
out
mov
pop
sbb
sarl
sbb
dec
loope
xchg
adc
mull
clc
stos
stos
seto
dec
imul
or
stos
xchg
and
loopne
xchg
jmp
pop
lock
xor
or
movsb
aaa
fwait
btc
stos
inc
fimuls
xor
mov
repz
add
push
pop
stc
cmp
push
add
movsl
or
jbe
ljmp
stc
push
shlb
adc
inc
call
leave
fmuls
out
ret
dec
inc
mov
fisttps
sub
inc
into
ret
jg
fnsave
pop
jae
andl
sub
sbb
loope
cmpsl
outsl
in
or
mov
sbb
das
adc
mov
jle
xchg
fwait
jg
jl
sub
ret
mov
push
sub
filds
inc
into
cmp
inc
dec
repnz
rcrb
shlb
sti
mov
notl
sbb
cmp
imul
inc
xorb
xchg
xor
and
movsb
rcl
adc
outsl
xchg
ss
test
daa
cmp
pop
imul
repnz
pop
jecxz
mov
xchg
xlat
mov
pop
mov
xorl
fsubrp
stos
dec
jnp
xchg
or
xchg
jnp
lahf
loopne
les
cmp
movsl
add
mov
xor
cmpl
adc
testb
mov
test
popf
xchg
js
lcall
scas
in
mov
mov
sub
pop
xorb
inc
xchg
mov
jle
outsl
cmpsl
popf
sub
adc
push
cmp
in
jae
add
push
or
fwait
mov
sub
dec
inc
sub
cli
push
notb
insl
dec
out
pop
cmp
add
and
or
pusha
mov
inc
daa
lods
aam
test
sbb
mov
cmpsb
mov
std
cs
rcll
in
sbb
ret
and
fmuls
popa
dec
outsb
jge
inc
xchg
jmp
out
loop
and
mov
mov
mov
int
xor
mov
aas
mov
push
jmp
xorb
fwait
dec
mov
cmpb
addr16
ffree
xchg
mov
insb
adc
test
and
sbb
inc
sbb
call
loope
repz
jns
add
shrb
dec
mov
or
jl
add
out
fwait
int3
cmpsb
enter
leavew
xor
pusha
mov
jmp
jecxz
jle
aas
int3
repnz
adc
lret
dec
or
xchg
mov
dec
sbb
sbb
imul
lret
bound
movsl
sub
push
pop
ds
std
ret
xchg
iret
dec
pusha
movsb
lret
sarb
lock
lea
mov
mov
pop
or
dec
jne
les
inc
es
sbb
out
int
xchg
mov
lds
jno,pt
dec
fpatan
rcll
insb
imul
rcr
iret
outsb
add
add
ja
pop
mov
xor
in
or
gs
inc
insl
out
in
cli
clc
mov
imul
adc
stos
repnz
test
outsb
sbb
mov
xchg
adc
in
xchg
and
push
push
clc
fmull
es
jmp
adc
push
mov
xchg
stos
mov
sbb
mov
mov
cld
push
and
push
test
icebp
shll
repz
xchg
lea
out
sbb
add
repz
add
sbb
and
push
dec
mov
lods
sub
cmpsl
imul
jecxz
or
divl
xor
push
int3
xchg
rcll
aam
flds
nop
ret
bndstx
pop
cltd
fadds
cwtl
idivb
sti
push
dec
sub
jle,pn
push
adc
mov
pop
int
mov
push
mov
push
mov
jnp
insl
or
sbb
js
dec
iret
and
in
pop
fimuls
cld
ficomps
push
aas
mov
sub
lods
inc
mov
movsb
shlb
push
bound
inc
sbb
rclb
adc
lret
fadds
cmp
mov
fldenv
out
jp
pop
nop
pop
adc
xor
sar
push
mov
aas
jmp
push
or
mov
adc
addr16
sti
inc
mov
lock
pushf
mov
mov
outsb
cwtl
xor
pop
sbb
or
fsts
test
xchg
test
mov
lahf
test
lods
loopne
fimull
ja
call
fidivrs
and
mov
adc
gs
adc
push
mov
arpl
mov
ficompl
xor
test
jb
xchg
mov
loopne
lret
mov
fcompl
movsb
fstp
mov
mov
in
or
flds
pop
cmpsl
ds
ds
int
rorl
xchg
stos
inc
insl
sti
insl
sahf
sbb
out
pop
pop
xorl
xor
mov
ja
mov
jecxz
std
pop
pop
mov
test
and
mov
sti
out
and
je
test
mov
xor
dec
sbb
push
scas
xchg
mov
push
cwtl
call
lds
sahf
mov
loop
jecxz
mul
cli
scas
ret
jmp
in
mov
and
mov
hlt
in
addr16
mov
lock
lea
adc
mov
xchg
jp
outsl
jbe
dec
push
and
std
or
mov
daa
sub
movsl
jecxz
mov
push
fs
adc
and
or
nop
pop
add
inc
rcll
in
sub
mov
outsl
fiadds
hlt
shll
xchg
jge
bound
add
mov
mov
lret
test
mov
pop
mov
sub
xor
cmp
lcall
scas
ret
pop
daa
push
xchg
jnp
hlt
push
jle
push
stos
pop
leave
xchg
push
mov
or
cmp
inc
or
les
cmpsb
mov
mov
ret
cmp
lret
gs
mov
sti
mov
ret
pushf
add
out
cmp
rep
rol
inc
jnp
pop
movsb
aaa
xor
fbstp
mov
movsl
pop
cli
or
mov
adc
xchg
jle
sarb
cmpsl
and
add
jg,pt
mov
fdivrs
pop
pop
jecxz
test
xor
xchg
cmp
push
clc
push
loop
shl
jns
repnz
les
dec
or
dec
aad
xor
scas
xchg
movsl
or
dec
xor
sbb
mov
mov
jcxz
cli
inc
jae
test
jle
leave
orb
das
lock
sahf
pushf
add
sub
testb
add
jne
pop
lods
fistl
push
inc
xor
add
mov
adc
cmp
mov
insl
cmc
int
push
mov
adc
imul
nop
jmp
pop
cmc
push
pop
and
repnz
mov
push
dec
sahf
xor
shrb
cmpsl
clc
repz
xchg
or
adc
adc
enter
mov
ss
mov
test
cwtl
cld
fildl
xor
jp
sub
xlat
int3
push
sbb
out
imul
imulb
mov
mov
popa
pop
lods
jae
push
xchg
imul
sub
xchg
les
mov
inc
data16
inc
adc
sub
jae
and
lret
rcrl
enter
mov
in
cmpsl
nop
and
jmp
in
push
popf
bound
ljmp
or
loopne
pop
jnp
xchg
cmp
test
cmp
adc
xor
push
add
mov
jge
out
shrb
lds
adc
adc
cmp
js
inc
push
aas
dec
jle
push
das
cwtl
movsl
push
or
push
and
adc
fdivrp
inc
xor
push
jl
mov
dec
hlt
xorl
or
aam
testb
ret
fidivrl
test
push
pusha
sbb
les
mov
lods
cmp
cs
sbb
mov
fs
lds
dec
fisubrl
mov
lahf
adc
xor
jmp
mov
push
lods
cmp
int3
sbb
mov
lcall
jae
adcl
lods
cmp
xchg
test
fisubs
movb
daa
into
cli
push
lahf
in
or
test
mov
sbb
enter
xor
outsb
cltd
ret
cwtl
shr
sbb
imul
es
out
mov
fcoms
iret
xlat
inc
mov
add
bound
dec
imull
sub
je
lea
lods
icebp
adc
adc
mov
dec
mov
jae
pop
andb
push
das
xchg
or
inc
in
pop
clc
insb
jb
clc
mov
popa
shrb
sbb
and
mov
clc
push
jg
cwtl
out
outsl
icebp
fbstp
add
mov
sbb
sahf
xchg
mov
mov
mov
cli
and
aaa
xor
cld
mov
sbb
sub
test
stos
aad
pusha
decb
or
int3
fcmovu
jnp
adc
nop
clc
les
cmpsb
sbb
xor
mov
cli
nop
jge
push
jle
mov
sarb
aad
scas
nop
lret
cmp
jle
pushl
insl
repz
push
jb
call
push
mov
fcmovne
scas
sbb
je
adcl
lret
adc
pop
jo
pop
jecxz
add
inc
rorb
cli
shrl
pop
sbb
jecxz
jmp
sbb
adc
xchg
jo
subb
xchg
out
mov
dec
mov
mov
jae
ljmp
repz
adc
fs
jnp
andb
sub
add
xchg
test
aad
movl
sbb
add
push
popa
mov
nop
and
sahf
xchg
out
inc
ror
jmp
int
mov
outsb
push
mov
push
or
inc
loopne
lret
mov
ret
mov
out
daa
pop
movsb
mov
dec
dec
add
cmp
flds
jg
outsl
sub
xor
cmp
dec
outsb
in
mov
notb
test
stos
insl
aas
jmp
xor
mov
nop
scas
leave
mov
add
stc
sub
nop
out
pop
jg
mov
daa
ficompl
pop
inc
jmp
mov
sub
xchg
push
shlb
mov
or
ss
test
push
pop
push
jbe
sbb
pop
inc
push
in
push
dec
outsl
mov
lret
mov
push
dec
cltd
sbb
dec
push
lock
push
xor
and
mov
push
jge
mov
xchg
xchg
jo
pop
jb
mov
sahf
cmp
arpl
pop
test
movsl
popa
pop
or
sbb
loop
dec
insb
push
and
cmp
push
jecxz
insl
and
ret
testb
addr16
lahf
ds
mov
repz
sarb
mov
shrb
jnp
mov
jne
arpl
dec
jne
and
out
sarl
rcr
mov
ficoml
xor
mov
out
jl
divl
push
stc
insb
push
int
mov
sub
dec
fildll
push
outsb
add
cmp
mov
sbb
pop
mov
pop
and
and
leave
jle
cltd
lret
in
test
lock
daa
or
imul
adc
inc
iret
sub
dec
shrb
ds
and
bound
mov
add
jae
nop
lret
pop
lcall
sbb
out
mov
sub
pop
pop
dec
xor
out
inc
ret
jp
leave
xor
aad
jg
inc
lret
push
ss
pop
test
push
je
push
fisubrs
add
jecxz
mov
fcmovnu
mov
or
outsb
mov
cmp
shll
xchg
jne
into
mov
push
xchg
ljmp
js
pop
pop
mov
jge
pop
stos
mov
pop
and
mov
test
shlb
push
add
mov
mov
jg
nop
fisubl
mulb
xor
stos
andb
jb
mov
loopne
mov
pop
inc
lcall
out
psllw
mov
fldt
jle
lcall
insl
arpl
dec
loopne
dec
jb
movsl
aam
sub
sti
or
mov
negb
cld
cwtl
xorb
arpl
cmpsb
jbe
cmpsb
ja
call
pop
jns
mov
scas
je
mov
lds
test
xchg
xor
xchg
in
loope
loopne
inc
push
mov
lret
inc
push
cmp
pushl
sbb
lcall
lcall
or
icebp
pop
pop
addr16
sbb
pop
popa
dec
xchg
xchg
pusha
dec
xor
fdivr
jo
scas
mov
cmp
insl
xchg
push
mov
jo
jns
or
je
jns
stos
hlt
stos
inc
cmpl
push
mov
sbb
mov
xor
xor
xchg
mov
adc
jo
xchg
sub
sub
imul
mov
jecxz
into
add
cwtl
xchg
imul
pushf
aas
inc
imul
jecxz
push
inc
aas
xor
add
pop
sub
sbb
pop
mov
scas
out
push
inc
or
push
repnz
mov
add
push
int
lods
aam
cwtl
inc
jno
or
or
stos
and
adc
pop
adcl
xchg
adc
push
cmc
mov
clc
adc
cmp
in
lds
nop
loop
movsl
mov
add
inc
add
inc
sbb
pushf
icebp
lret
dec
lds
add
add
sti
pop
dec
outsb
sub
popa
mov
jmp
das
dec
xor
pushf
inc
rolb
cmpsl
jge
insb
pop
rcl
pop
lea
dec
daa
mov
mov
test
stos
jecxz
cmp
push
push
daa
cmp
ljmp
dec
pop
fadds
and
cltd
xorl
fyl2x
out
lahf
fadd
push
test
imul
aad
or
cwtl
jo
loope
push
in
jnp
xor
daa
push
insl
lahf
popf
scas
mov
sbb
inc
lret
addr16
loope
adc
add
sbb
dec
outsl
lahf
adc
in
sub
dec
call
xor
mov
pop
mov
jae,pn
out
loopne
iret
lock
repz
push
bound
cmp
or
or
pop
addr16
loopne
inc
jno
or
lods
add
or
pop
clc
adc
das
adc
lahf
aad
mov
mov
pop
push
loopne
shlb
cltd
movsb
cmpsl
sbb
cmp
sbb
ja
pop
cld
notl
mov
cmp
adc
add
push
loope
push
push
bnd
adc
cmpsb
aas
ja
out
movsb
enter
dec
jo
mov
lahf
dec
incl
jle
cs
jle
repnz
bound
iret
add
pop
and
jecxz
test
dec
cmp
lahf
pusha
push
jbe
ja
xchg
lods
lahf
clc
ss
jns
mov
lods
mov
cmpsl
fstl
push
mov
sti
pop
sbb
inc
xlat
loopne
sbb
rcrb
outsb
xchg
or
mov
pop
cmp
jnp
push
fninit
push
rolb
clc
or
aaa
dec
sub
jmp
aas
stos
popf
test
scas
popa
ja
into
sub
jge
jno
fnsave
negb
lea
idivb
and
insb
repz
jnp
insb
push
jmp
mov
inc
imul
push
dec
add
shlb
and
mov
imul
mov
cld
mov
mov
test
in
mov
les
mov
subb
cmpsl
adc
push
xchg
test
test
outsb
ja
push
jmp
les
pop
test
pop
imull
mov
in
push
aam
fldt
mov
xor
fcom
cmp
call
push
repz
out
mov
add
inc
nop
sbb
mov
adcl
mov
pop
pop
cli
mov
call
popf
xchg
fnstenv
loop
lds
std
sahf
add
stc
sub
mov
mov
xor
ss
iret
add
stos
stos
xchg
lcall
mov
sbb
stc
dec
cmp
fwait
lahf
shr
push
rolb
push
sub
les
rcll
ret
hlt
xor
pop
ret
je
cld
sbb
push
int
in
outsb
dec
push
sub
adc
inc
pushf
roll
test
xchg
decb
sbb
les
arpl
push
aam
dec
sbb
or
sub
mov
pop
sarl
dec
xlat
dec
push
sub
mov
lods
jbe
dec
lds
add
mov
sub
add
push
lret
cmp
adc
or
xlat
mov
dec
cmpsl
jae
ja
or
sub
adc
loopne
gs
mov
ret
rcrb
and
sbb
pop
dec
dec
je
js
bound
lods
pop
lcall
je
test
inc
pop
movsb
mov
ud1
lds
addr16
mov
xchg
imul
jne
mov
xlat
fisubs
aaa
sti
sub
mov
and
out
lds
xchg
hlt
in
xchg
stc
add
xchg
push
in
mov
mov
add
fs
push
xchg
cmp
xchg
cltd
inc
aas
dec
movsb
fdivrl
es
nop
jnp
pop
jl
add
int3
ficoms
imul
mov
cmp
nop
xchg
clc
dec
pop
call
push
addr16
jo
or
lods
into
cli
cli
loopne
cmp
and
and
sub
pop
and
lahf
imul
mov
sbb
and
fists
mov
js
repnz
inc
leave
cmp
repz
inc
or
push
cmpsl
lret
sti
lret
xor
push
scas
jno
lock
dec
inc
mov
inc
les
push
mov
mov
pushf
sti
arpl
jno
mov
cmpsl
sub
jne
cmp
cmpsl
je
adc
cmp
loop
inc
jb
mov
shrl
lods
add
fildl
lea
mov
xlat
ljmp
test
outsl
enter
movsl
sbb
fsubr
push
ret
out
sbb
call
ss
xor
mov
or
call
xlat
repz
push
xchg
xor
fadd
int
pop
xchg
sahf
nop
or
xchg
or
and
cwtl
arpl
adc
mov
add
push
aaa
xor
xor
sub
imul
push
adc
imul
stc
xchg
jnp
mov
fiaddl
cltd
adc
mov
mov
jle
sub
aas
scas
sar
out
mov
mov
dec
xchg
pop
gs
addr16
inc
and
pushf
xor
mov
dec
fidivrl
mov
clc
dec
in
into
xchg
lds
jp
scas
inc
jge
mov
mov
mov
xor
push
push
out
xchg
sub
ss
lods
jo
fwait
push
inc
adc
jb
scas
pushf
add
pushf
repz
in
mov
cli
sahf
jecxz
mov
jns
sub
push
gs
mov
out
sbb
mov
inc
lea
push
pop
mov
callw
data16
inc
out
fwait
pop
jae
sbb
and
jmp
and
mull
sbb
lahf
cmpsb
inc
jmp
cld
cmc
pop
pop
sub
popa
dec
xchg
xor
push
push
mov
jp
inc
mov
inc
jl
jge
mov
test
fwait
clc
xchg
sbb
inc
xchg
jno
leave
inc
aaa
popa
pop
popa
rcl
sbb
leave
cmp
mov
test
xchg
sbbb
push
cmp
xchg
jg
int
sbb
push
cmp
sub
leave
cld
mov
or
rorb
cmc
mov
push
pop
pop
adc
cltd
nop
outsb
mov
daa
cmp
mov
imul
and
out
test
aas
sbb
orb
lods
int3
shrl
out
andl
xor
test
imul
xor
out
push
mov
or
add
cmpsl
outsb
scas
jns
out
jns
fwait
nop
fistl
push
push
push
cltd
or
xor
xchg
cld
jno
jge
sub
rolb
mov
cltd
sub
into
mov
jp
imul
sbb
dec
mov
mov
jnp
hlt
sti
jo
inc
and
fdivrs
hlt
add
pop
push
daa
jnp
outsl
and
mov
xor
inc
dec
gs
add
iret
dec
push
cwtl
push
stc
bswap
sbb
xor
cltd
xor
xor
test
pusha
add
cmp
sbb
dec
sbb
pop
mov
jb
pop
mov
daa
mov
imul
mov
jecxz
cmp
movsb
lret
jle
mov
adc
iret
xchg
xchg
xor
pop
neg
jecxz
ret
test
cld
daa
push
adc
out
fcmovu
and
popf
pop
xchg
push
mov
dec
cwtl
rcl
or
xchg
pop
pop
and
repnz
push
mov
jnp
addr16
mov
mov
lock
cmp
mov
testb
xchg
cwtl
xor
ja
mov
jl
sub
lock
sbb
push
mov
rorl
jo
sub
loop
adc
imul
repz
pop
mov
inc
push
cmc
ljmp
fucomip
hlt
ja
aas
ret
hlt
outsl
popa
pop
out
test
sbb
movl
push
cmp
jae
and
jb
add
push
dec
cwtl
ffree
out
xchg
and
mov
sub
mov
cmpl
fsubrs
lahf
popf
repz
and
pop
mov
or
sub
or
pushf
cld
and
bound
in
cld
or
lea
add
loope
lods
fcom
lods
call
sbb
sub
or
rolb
mov
fadds
popa
movsl
call
sub
shll
mov
pusha
aam
in
xchg
outsl
jb
adc
xchg
orl
enter
and
pop
sbb
enter
in
mov
shll
lret
aam
pushf
xor
into
lock
or
in
push
std
pop
add
hlt
mov
shl
pop
lods
sbb
out
mov
jns
mov
les
in
inc
push
jl
out
and
mov
ret
pop
das
dec
bound
add
mov
inc
sahf
cmp
or
sub
fiaddl
sbb
mov
sub
imul
es
pop
pop
notb
jno
adc
xchg
push
dec
adc
and
xchg
aam
stc
mov
fmul
push
cs
cwtl
mov
pop
sub
pop
or
cmp
dec
add
xor
int3
out
push
inc
mov
shrl
ss
int3
or
mov
aad
aas
dec
divl
mov
outsl
sti
dec
mov
insb
inc
lret
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
mov
push
add
aaa
popa
or
nop
call
lods
mov
add
sub
testl
mov
arpl
cmp
call
fbld
pop
ljmp
add
mov
cmp
adc
adc
cmpsl
mov
xor
inc
loop
and
pop
mov
int
cmp
mov
push
mov
test
nop
sub
push
mov
pop
bound
pop
xchg
mov
pop
add
add
xchg
popf
shrb
aaa
je
iret
sbb
pop
xlat
mov
mov
enter
test
pop
cmp
pop
sahf
mov
xchg
int3
sbb
rcll
jno
sbb
mov
out
cmc
push
xchg
scas
xor
out
cmp
push
cmp
mov
sub
lcall
dec
xchg
mov
dec
push
pusha
ja
push
out
sbb
or
sbbl
sbb
imul
aas
loope
jle
scas
jo
mov
aas
sahf
jne
or
add
xor
mov
jo
loop
cmc
movups
xor
mov
pop
mov
push
aad
mov
push
sbb
cmp
jmp
pop
out
cmp
and
pusha
adc
dec
pushf
imul
push
sbb
repnz
sbb
std
sbb
mov
ret
inc
sub
mov
imul
mov
or
cmpl
push
sub
lahf
mov
or
and
fisttpl
sub
vpslld
sbb
xchg
outsb
sbb
lods
and
test
hlt
mov
test
inc
in
icebp
popa
cmp
or
imul
decl
imul
xchg
jecxz
inc
loopne
jmp
add
add
add
add
add
pop
add
inc
xchg
repnz
sti
mov
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
in
outsb
insl
add
outsl
insl
add
add
