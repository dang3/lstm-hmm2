push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
mov
and
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
xchg
add
push
lea
sub
mov
xor
mov
aad
inc
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
fstpt
inc
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
ds
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
sub
scas
push
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
fnsave
inc
add
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
sub
js
push
lea
mov
test
je
cmp
dec
inc
add
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
push
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
sbb
inc
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
das
dec
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
jne
inc
add
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
xchg
sub
add
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
in
inc
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
dec
inc
add
pop
and
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
dec
and
mov
lea
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
mov
push
push
call
xor
ret
mov
testb
jne
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
inc
sub
movsb
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
add
js
les
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
xchg
sub
and
jbe
lea
movzwl
addw
lea
add
cmp
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
mov
jmp
mov
shr
test
jne
jmp
jle
movzwl
mov
add
mov
mov
mov
mov
mov
jmp
mov
and
cmp
je
mov
test
je
mov
mov
lea
mov
sub
add
cmp
mov
jae
mov
shl
mov
lea
movzwl
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
jmp
xor
jmp
test
jne
mov
mov
lea
add
mov
mov
mov
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
add
add
add
cmp
mov
jae
jmp
mov
mov
jmp
cmp
jne
cmpl
jmp
movl
movl
movl
jmp
mov
mov
movl
jmp
movb
movw
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
shr
and
cmp
mov
je
test
je
cmp
jb
cmp
jae
test
je
cmp
jb
mov
shr
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
sub
add
add
sub
jne
test
je
movzbl
add
sub
add
add
test
jne
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
int3
mov
sub
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmpl
je
mov
mov
push
mov
push
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
movl
jmp
add
jne
test
jne
and
mov
push
push
call
mov
add
add
add
add
loopne
out
in
loopne
mov
pushf
xchg
pushf
jecxz
lock
cli
imul
add
jge
mov
icebp
in
cwtl
out
add
popf
shlb
popl
xchg
add
add
add
push
push
lea
push
lea
push
call
fists
add
out
add
add
add
int
add
add
xchg
jge
aam
add
sahf
mov
lods
mov
add
add
ja
xchg
add
jmp
add
fprem
shrl
popa
or
popl
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
and
idivb
add
add
scas
je
add
mov
add
push
mov
je
add
add
pop
scas
add
lods
add
fsubrs
rolb
add
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
out
jmp
out
add
add
in
add
out
add
add
icebp
jecxz
add
cwtl
lds
add
jge
add
xlat
pusha
add
add
clc
lock
mov
and
push
push
push
push
push
push
push
lea
push
call
push
add
shr
clc
pop
add
add
add
in
aam
ljmp
fnstsw
add
out
pop
jnp
push
je
xor
add
icebp
add
bound
add
sub
leave
jmp
add
add
add
xchg
cmc
add
lahf
loop
mov
jo
jle
testb
mov
lea
pop
push
push
push
push
push
lea
push
call
add
shrl
add
add
mov
mov
add
in
jne
les
roll
outsl
pop
add
imul
cwtl
popf
jb
add
mov
fmull
bound
xlat
mov
lea
push
lea
push
push
call
mov
pop
call
mov
lods
push
xlat
jmp
add
push
add
sbbb
js
add
fadds
add
in
add
add
popf
fwait
add
add
imul
pop
jge
stos
les
add
mov
add
add
out
add
mov
lea
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
shll
mov
mov
jecxz
insb
xlat
push
add
int3
jnp
mov
int
add
xchg
add
push
test
rcll
std
add
mov
mov
pop
add
pop
call
push
lea
push
push
push
push
call
add
fiaddl
lock
add
push
mov
out
mov
mov
add
out
add
aad
add
mov
mov
scas
add
pop
add
add
jb
incb
add
xchg
sti
jmp
fimuls
add
push
out
mov
lea
pop
jmp
push
push
push
lea
push
lea
push
call
add
test
shrb
arpl
jp
push
add
sahf
mov
lds
add
add
nop
repnz
add
add
add
into
cltd
add
mov
int3
lea
pop
ret
mov
push
push
lea
push
push
push
lea
push
call
jl
outsl
mov
push
add
lret
jne
mov
add
add
pop
imul
lods
lods
add
add
add
fcoms
sti
add
add
roll
add
add
add
add
mov
add
jecxz
xchg
add
add
test
pop
cmc
out
mov
stos
mov
lea
pop
mov
push
push
push
push
push
push
push
call
jno
movsb
faddl
add
outsl
lcall
addb
fcomps
add
add
add
add
add
add
aad
push
add
mov
xchg
add
add
mov
xlat
add
add
ficomps
add
ret
rolb
add
cltd
scas
xchg
aam
bound
add
push
push
push
push
lea
push
push
push
call
jl
mov
add
xchg
mov
jnp
push
add
pop
mov
add
add
enter
stc
les
mov
filds
mov
pop
rolb
popf
push
xchg
add
pop
add
push
push
push
lea
push
push
push
push
push
call
lock
xchg
jb
pop
add
add
add
out
mov
loopne
add
mov
add
iret
jge
add
mov
mov
mov
mov
add
scas
mov
add
repnz
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
cli
enter
add
cltd
lds
add
into
push
add
fadd
add
add
add
outsl
add
int
push
shrb
fimull
mov
stc
fidivrl
mov
aam
bound
pop
mov
push
push
lea
push
lea
push
call
add
ljmp
add
add
pop
out
add
add
add
lcall
mov
cltd
jmp
lahf
add
jge
add
in
cli
xchg
test
push
test
jp
jae
mov
mov
mov
lea
pop
xor
push
lea
push
call
add
mov
in
lea
lahf
icebp
add
jne
add
add
into
add
jae
add
pop
mov
add
jnp
scas
add
add
lea
add
mov
add
add
jne
mov
add
in
mov
add
push
popa
xchg
sahf
mov
lea
pop
add
push
push
shr
not
lea
push
sub
add
shl
shr
sub
sub
dec
pop
xor
shr
add
pop
push
lea
push
call
add
add
xorb
add
xchg
mov
add
mov
add
add
pop
fsts
insb
add
callw
add
mov
aad
pop
lods
addb
add
mov
mov
xchg
add
mov
lea
pop
pushl
push
push
push
push
push
push
lea
push
push
push
lea
push
call
in
add
mov
add
movsl
add
add
jge
add
add
add
jb
pop
ljmp
add
add
loope
push
add
jae
jge
popl
add
loopne
mov
int
lret
mov
add
add
add
cld
lret
jno
add
add
mov
lea
pop
call
push
push
call
mov
add
shl
lds
popf
add
lea
gs
add
test
add
into
bound
add
add
add
add
pop
jecxz
lret
mov
rolb
add
add
pusha
or
inc
call
add
add
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
add
mov
jge
mov
flds
lock
mov
jno
add
stos
add
mov
jo
mov
mov
ret
mov
int3
mov
add
add
hlt
add
cmpsb
out
add
mov
movsb
pop
add
pop
lea
push
push
push
push
lea
push
push
lea
push
call
imul
add
mov
jmp
test
cmc
jge
add
mov
add
out
push
aam
add
xchg
repnz
roll
imul
add
lock
xchg
add
add
add
mov
add
add
add
leave
cmpsb
add
js
nop
add
add
int3
lea
pop
pushl
push
push
push
lea
push
push
push
call
jecxz
add
add
test
loop
add
add
lret
scas
int3
mov
lock
lret
scas
add
mov
add
xchg
cli
add
pop
ljmp
add
imul
fisubl
add
lea
add
add
add
jae
into
add
jne
add
mov
add
mov
mov
lea
pop
pushl
push
push
push
call
test
add
push
add
fwait
test
push
add
add
scas
add
mov
add
add
add
movsl
addr16
fldl
add
insb
add
lods
bound
pop
movb
jae
outsl
int
push
cmc
je
add
jo
mov
add
add
fmull
sub
add
pushl
push
push
lea
push
push
push
push
call
add
add
add
add
add
add
pop
jbe
shr
add
add
stc
test
mov
xchg
add
test
add
lahf
mov
jecxz
add
out
mov
add
std
stos
mov
lea
pop
pushl
push
push
push
call
cltd
filds
rol
xchg
aam
mov
pop
std
add
pop
mov
scas
pop
lcall
fsubrs
add
stos
add
fwait
sti
mov
out
roll
mov
xchg
xchg
add
stos
push
call
mov
insb
fwait
add
imul
add
add
mov
pop
mov
icebp
add
stos
repnz
add
add
pop
call
push
push
dec
sub
push
sub
add
sub
inc
pop
rol
add
pop
push
push
lea
push
push
push
push
call
add
add
xlat
aam
sti
test
mov
imull
push
xchg
add
lea
mov
jns
add
jb
push
add
popf
scas
scas
in
add
add
scas
add
mov
xchg
icebp
add
add
out
add
add
mov
lea
pop
pushl
call
push
push
push
push
call
pop
add
imul
add
mov
cli
ja
lret
cltd
mov
add
jno
fstl
add
out
add
mov
cmpsb
in
add
scas
add
push
xchg
bnd
outsl
xchg
movsl
add
sbb
mov
lea
pop
push
push
push
add
push
sub
add
sub
inc
sub
add
ror
pop
sub
pop
push
push
push
push
lea
push
push
push
call
push
add
jmp
js
jns
call
rolb
add
add
add
xchg
roll
add
add
xchg
int
mov
add
add
fcoms
enter
add
pop
pop
mov
andl
fnstsw
add
incb
cltd
lret
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
add
mov
scas
add
lret
add
mov
mov
aad
push
add
mov
arpl
add
sarb
add
scas
add
add
aam
stc
ret
fstps
mov
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
call
loop
pop
mov
fldl
add
add
jmp
ja
rcr
loop
aam
add
cwtl
add
add
mov
cld
jge
xorl
imul
mov
add
add
add
popf
add
arpl
enter
jecxz
jle
add
push
arpl
lea
pop
call
mov
push
push
push
lea
push
lea
push
call
jno
add
fcom
xchg
stos
add
hlt
test
add
call
mov
int3
add
pop
xchg
pop
in
xchg
test
fidivl
loope
fistps
idivl
mov
add
int
xchg
scas
add
out
lret
fsubr
push
call
xchg
lods
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
jno
lahf
scas
hlt
add
xchg
test
lahf
mov
add
aam
jge
mov
ror
xchg
lock
push
mov
add
add
add
mov
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
loope
aad
lret
mov
hlt
test
xchg
cld
loopne
insb
movsl
add
mov
add
jae
lea
add
lret
mov
add
add
js
add
outsl
jl
sti
add
jmp
lea
pop
mov
add
push
push
push
push
call
mov
shll
add
cmpsl
mov
mov
jecxz
add
loope
lret
add
add
add
jl
add
add
xchg
scas
fsubl
fbstp
add
add
leave
addl
mov
mov
loope
add
add
add
out
roll
add
aad
cmpsb
fsubrl
adc
ret
add
add
push
push
call
addb
movsb
int
shlb
add
movsb
sti
mov
mov
scas
into
jp
add
or
in
imul
add
add
xchg
mov
movl
add
out
lret
mov
add
test
add
add
stos
mov
ljmp
pusha
les
jle
jne
lret
sti
js
add
cmc
lods
mov
lea
pop
add
push
lea
push
push
push
call
mov
jae
add
jbe
xchg
add
add
fistpl
outsl
add
push
add
add
add
xchg
jbe
add
add
add
arpl
jmp
fmull
xor
push
hlt
push
call
add
mov
add
jle
xchg
test
aam
addb
add
mov
mov
addl
mov
add
cld
add
add
add
pusha
lret
scas
add
mov
cwtl
xchg
cwtl
push
movsb
jno
add
lods
add
add
lret
add
fldcw
add
jle
addr16
add
pop
mov
fmull
xor
push
push
push
push
lea
push
call
add
fucomi
mov
lods
add
add
lock
data16
add
jne
add
xchg
aad
out
xchg
push
push
add
out
add
add
add
test
popl
cltd
cld
shll
add
xchg
fs
add
cltd
add
movsl
add
mov
add
mov
lea
pop
add
push
push
push
push
push
lea
push
call
int
mov
je
cmc
mov
add
add
add
ror
xchg
pop
les
add
mov
std
add
add
push
add
out
add
imul
add
add
testl
enter
add
add
add
mov
add
popl
push
add
jle
shlb
mov
pushf
push
rcll
cmpsb
mov
sbb
jne
push
push
lea
push
call
jmp
lea
test
bound
outsl
out
js
push
mov
pop
jno
add
rcrb
scas
repnz
pusha
lods
mov
mov
add
mull
add
add
xchg
push
mov
add
add
add
add
mov
popf
push
xchg
add
add
add
lea
pop
push
mov
push
push
push
push
push
push
call
add
add
add
add
add
test
add
mov
add
jno
leave
cld
jnp
roll
add
lods
jae
add
add
lret
add
rcll
jno
add
hlt
lea
pop
xor
push
push
call
add
add
add
add
add
movb
stos
enter
add
popl
test
add
int
fsts
aam
pop
mov
cli
iret
add
add
add
loop
xchg
cmp
add
add
mov
or
les
push
push
push
push
push
push
push
call
test
add
push
add
xchg
mov
flds
add
add
add
add
imul
add
negl
aam
les
insb
fnstenv
in
jne
je
add
int3
jge
mov
add
add
std
je
add
pop
mov
lea
pop
add
push
push
push
call
xchg
add
scas
jge
add
pop
mov
push
stos
push
add
add
lcall
add
add
push
add
add
imul
push
add
pop
movsl
mov
or
add
jle
add
add
jmp
add
add
add
pop
pop
mov
xor
push
lea
push
push
push
call
add
add
mov
add
mov
add
aad
out
mov
les
xchg
mov
gs
mov
add
test
les
push
lea
push
push
call
nop
push
xchg
addb
add
add
add
enter
cmp
add
enter
stos
add
lock
push
xchg
je
add
cmpl
add
into
outsl
add
into
imul
add
imul
lcall
lea
pop
mov
push
push
push
push
push
lea
push
call
loope
add
add
sahf
bound
add
add
mov
lock
mov
push
repnz
mov
add
in
movl
aam
leave
mov
fwait
add
cmpsl
add
jo
add
loope
roll
add
lret
push
add
mov
lea
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
call
aad
cli
pop
add
add
movsb
fsqrt
std
cli
mov
rolb
lods
xchg
add
lahf
ror
test
repnz
in
pop
lock
add
add
add
fmull
les
add
push
push
push
push
lea
push
call
add
add
add
add
add
out
in
fcmove
cwtl
mov
mov
add
add
out
fiadds
movsb
cmc
pop
push
add
add
add
add
push
jne
pusha
mov
in
roll
mov
mov
add
je
jbe
add
add
pop
mov
lea
pop
sub
push
lea
push
call
addb
mov
add
movb
les
mov
cmpsb
fwait
stos
repnz
add
push
add
je
add
lcall
jle
mov
movsb
lea
add
in
aad
popf
xchg
rolb
arpl
pop
pop
push
push
push
lea
push
lea
push
call
int
add
mov
jno
out
lods
sub
add
add
add
int3
fxch
icebp
in
add
add
mov
add
ficomps
add
push
mov
mov
lea
pop
rep
push
push
push
push
push
push
push
push
call
mov
fdivrs
stos
add
jge
add
loopne
jbe
mov
stos
pusha
scas
clc
fistpl
into
xchg
les
mov
mov
fidivl
arpl
add
add
push
scas
add
add
add
jbe
cmpsl
add
add
lea
pop
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
idiv
add
push
stc
mov
fcomps
sahf
push
stos
jno
xchg
mov
jmp
cmpsb
movb
fldl
repnz
add
pushf
xchg
add
cld
mov
sahf
xchg
add
add
pop
out
add
lods
push
mov
add
add
add
mov
fldl
pop
ret
jbe
add
lods
xorl
in
push
call
push
jl
movsl
add
add
mov
add
add
cmc
stc
push
push
hlt
add
lret
add
add
push
push
add
add
add
add
jnp
ljmp
mov
in
xchg
pop
add
push
push
push
lea
push
push
call
jb
filds
add
add
add
rcrl
push
lods
add
push
in
gs
iret
add
add
mov
add
jp
cmc
add
add
mov
arpl
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
call
in
add
mov
loopne
fldl
addr16
sarb
flds
loope
jno
add
cltd
add
jns
mov
mov
add
mov
add
add
push
add
mov
lea
pop
mov
xor
push
push
push
push
push
push
push
push
call
mov
addl
xchg
add
aad
add
test
add
movsb
add
lcall
add
loopne
add
add
mov
idivl
arpl
add
in
add
add
add
add
lahf
jnp
popa
mov
xchg
add
mov
lea
pop
mov
xor
push
ror
rol
rol
pop
mov
push
push
push
push
lea
push
call
xlat
add
rcrb
mov
push
add
out
pop
add
into
shlb
jmp
xchg
mov
add
add
add
jmp
add
add
mov
push
pop
add
andl
add
add
loop
add
test
push
gs
rcrb
int3
lea
pop
xor
push
push
push
push
push
push
push
call
loop
arpl
xchg
add
add
add
jns
add
pop
out
lock
add
stos
testb
mov
cmpb
movsl
add
add
mov
jp
aam
adcl
add
jl
add
hlt
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
add
enter
add
iret
jno
outsl
jne
xorl
lock
push
pop
mov
icebp
scas
mov
outsl
add
add
insb
add
add
add
jle
add
mov
add
push
xorb
popf
add
add
icebp
xchg
stos
xchg
pop
add
add
pop
mov
lea
pop
add
push
dec
shr
lea
sub
pop
add
mov
push
push
dec
push
xor
add
dec
add
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
imul
jo
in
add
xchg
mov
lea
jo
pop
add
add
add
add
loope
add
fcoms
cwtl
add
imul
in
scas
insb
pushf
je
insb
lret
add
mov
add
push
add
add
pop
pushl
push
push
push
push
push
push
push
call
mov
add
mov
pusha
mov
add
add
xchg
cltd
roll
add
add
ljmp
shrb
mov
imul
add
add
jo
addb
icebp
pop
add
cltd
xchg
xchg
leave
mov
lea
pop
call
push
push
push
lea
push
call
jae
add
movsb
add
test
fiaddl
add
int
add
add
icebp
add
les
xchg
gs
add
add
jae
jecxz
mov
rcr
imul
imul
pop
add
out
stos
cltd
add
mov
add
lods
mov
mov
lea
pop
push
push
push
inc
shl
push
and
add
shl
shl
sub
dec
shr
add
pop
shr
not
add
dec
pop
push
shl
pop
push
push
push
push
lea
push
push
push
call
sahf
lods
ret
shr
nop
mov
add
cli
int3
mov
popa
jns
add
mov
mov
add
add
ljmp
rolb
in
mov
in
jbe
add
add
negb
jecxz
in
add
add
imul
pop
cltd
lods
ljmp
add
add
fmull
rclb
push
call
mov
int
jp
in
add
add
push
movsl
scas
push
enter
in
call
iret
mov
aad
add
add
xchg
add
gs
mov
mov
in
add
bound
add
int3
push
popf
add
add
add
add
ljmp
iret
add
add
pop
test
lea
pop
mov
push
push
push
push
lea
push
push
push
call
jge
add
add
push
stos
fiadds
jle
in
add
les
aad
aam
jne
mov
add
add
add
movsl
scas
add
stc
add
iret
shlb
mov
push
pop
faddl
add
add
add
mov
lahf
add
add
add
xchg
add
hlt
lea
pop
push
push
push
push
push
lea
push
push
push
call
cmpsl
xchg
add
test
add
iret
jle
test
mov
out
add
pop
fwait
test
jp
add
fcomps
add
add
mov
add
sahf
ljmp
mov
lods
fcoml
sarl
divb
add
faddl
push
add
add
mov
add
int3
lea
pop
mov
push
lea
push
lea
push
lea
push
call
sub
push
add
xchg
lea
add
fs
push
test
xchg
popf
frstor
jbe
cmpsb
mov
add
scas
mov
add
add
jnp
add
add
add
data16
add
out
fildl
add
lods
add
bound
add
add
stos
add
add
xchg
add
mov
pusha
adc
pop
in
lea
push
push
lea
push
call
add
mov
xchg
add
sti
cli
in
loopne
add
stos
mov
add
lds
add
add
jo
gs
add
test
add
addl
xchg
arpl
add
add
mov
add
add
push
out
les
ret
add
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
mov
rorl
nop
je
xchg
add
add
aam
add
mov
add
popa
int3
fwait
out
test
add
in
jle
jo
test
data16
add
pop
rcl
add
js
add
add
lods
ljmp
add
add
enter
aam
bound
pop
add
push
push
push
call
xchg
add
rcrl
hlt
loop
add
nop
add
add
add
add
hlt
aad
fsts
roll
add
push
arpl
loop
xchg
cmpsl
jmp
fiadds
in
add
ljmp
push
push
add
jo
gs
mov
pop
pop
pop
mov
add
in
add
lock
fimuls
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
push
call
mov
add
push
stos
xchg
je
rcll
lods
add
add
movb
add
pop
add
jge
push
movsl
les
push
fwait
add
repnz
add
int
cli
cltd
add
js
add
add
add
imul
jle
int
loopne
fmull
xor
push
push
lea
push
push
call
les
loope
stc
push
jge
add
add
hlt
add
imulb
into
add
clc
mov
add
test
mov
add
add
ret
arpl
data16
add
jge
push
popf
jl
add
mov
add
mov
jp
add
call
lea
pop
add
push
push
call
add
add
lds
mov
add
rorb
add
add
cld
add
add
fistps
push
lds
push
les
xchg
add
add
mov
lea
pop
add
push
xor
dec
add
inc
pop
push
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
scas
jl
xchg
pusha
imul
in
add
out
add
loopne
imul
xchg
add
out
mov
add
add
add
ljmp
lea
pop
xor
push
lea
push
push
push
push
push
lea
push
push
call
add
add
pusha
pop
add
js
call
imul
mov
add
mov
aam
lret
push
push
add
scas
pop
js
jmp
add
pop
add
push
lea
push
push
lea
push
push
push
push
lea
push
call
cmpsl
fmulp
sti
outsl
into
rclb
add
add
add
lret
icebp
cld
ror
test
add
add
hlt
add
loope
add
add
mov
popf
add
add
jmp
mov
jo
aam
add
jp
mov
js
mov
leave
add
lcall
pop
add
pop
push
lea
push
push
push
push
call
loope
add
pop
mov
add
add
add
add
shlb
lods
mov
add
add
mov
jmp
add
testl
push
add
add
add
test
xchg
testb
clc
add
mov
mov
add
add
lret
out
movsb
stos
out
mov
add
add
lahf
mov
lea
pop
mov
xor
push
pop
rep
push
add
pop
mov
xor
push
ror
pop
or
je
push
push
push
push
lea
push
push
push
call
negb
mov
mov
mov
jne
add
scas
ljmp
mov
std
push
add
pop
add
xchg
pop
add
jne
add
mov
add
add
cmc
icebp
repnz
xchg
rolb
out
shrl
push
add
movsl
add
cltd
add
add
imul
add
leave
mov
lea
pop
mov
push
push
lea
push
call
jl
call
fxam
jae
imul
add
add
add
cmc
pop
add
jne
jae
add
jb
xchg
arpl
jae
mov
add
jo
add
cmpsl
mov
add
fnstsw
pop
add
movsb
xchg
fldcw
int
pushf
int3
mov
add
mov
mov
lea
pop
xor
push
push
lea
push
push
call
movsl
add
outsl
in
fs
jle
add
mov
add
ret
fnstcw
jp
lahf
iret
movb
mov
mov
add
add
mov
filds
ljmp
mov
int3
jge
fadds
lods
add
mov
add
jecxz
leave
push
add
out
leave
lret
push
mov
add
fidivl
into
addl
hlt
in
pop
add
pop
add
push
push
lea
push
push
push
lea
push
call
push
ficoms
add
push
add
add
add
jb
add
add
ja
mov
movsl
add
cmpsb
add
add
add
addr16
sahf
add
stc
lods
add
scas
add
addr16
cmpsb
add
fldl
sti
add
hlt
lea
pop
mov
xor
push
push
push
push
push
push
push
call
add
mov
add
out
add
gs
bound
add
leave
push
add
rorl
sti
add
mov
add
add
fsubrl
stos
mov
add
add
mov
movb
mov
leave
add
add
add
add
add
arpl
scas
add
jb
jno
fisttps
pop
add
push
shl
pop
add
push
push
push
push
lea
push
lea
push
push
call
jb
addb
pop
scas
jmp
in
rcl
add
add
icebp
xchg
cli
add
add
icebp
add
lods
mov
popa
jae
push
cld
in
add
js
mov
shl
mov
add
pop
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
add
push
add
add
push
js
add
ljmp
mov
add
jp
add
add
add
test
add
fistpll
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
movl
insb
add
jbe
add
ja
test
scas
add
mov
add
lods
mov
cmpb
add
xchg
ja
add
cmp
scas
add
jge
add
stc
mov
bound
add
push
push
push
lea
push
push
lea
push
push
push
push
call
loope
push
out
mov
scas
xchg
pop
push
push
jmp
add
pusha
add
add
loop
mov
add
mov
mov
add
add
add
gs
leave
add
add
add
add
add
add
pop
add
push
add
ror
ror
ror
pop
pop
push
shl
pop
rep
mov
xor
push
lea
push
push
push
push
call
add
add
add
add
test
add
add
add
cli
sbbl
clc
test
mov
in
ffree
loope
int3
mov
div
push
add
add
add
add
pop
or
je
mov
push
add
dec
pop
add
push
shr
sub
lea
pop
add
push
push
push
push
call
add
fcmovu
mov
sti
xchg
add
pop
jno
add
aam
test
repnz
xchg
test
xchg
out
add
jecxz
insb
add
add
xchg
lods
xlat
add
add
leave
push
pop
mov
imul
fsubrs
add
add
pushf
xchg
pushf
pop
mov
pop
rep
push
lea
push
lea
push
push
push
push
call
add
rolb
sarl
in
fnstsw
out
enter
add
jle
push
add
add
add
add
push
add
filds
mov
add
ret
mov
jbe
jno
add
mov
jb
jmp
loopne
push
add
add
add
push
jo
mov
lahf
loop
xchg
scas
add
add
add
pop
mov
lea
pop
pop
push
push
inc
rol
push
or
inc
add
ror
add
sub
ror
pop
shl
inc
not
pop
push
add
not
ror
sub
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
fisttpll
cltd
jmp
add
add
int
add
add
push
mov
loope
ficomps
fsub
add
add
add
add
jns
add
loope
mov
enter
xlat
shrb
add
mov
je
sahf
flds
test
leave
mov
popf
pushf
mov
lea
pop
mov
mov
push
push
lea
push
push
push
call
sahf
cwtl
jnp
xchg
mov
pushf
add
ret
lahf
add
mov
add
sahf
in
lods
lods
add
xchg
add
jae
push
jno
pop
movsb
pop
data16
add
nop
add
pop
add
lea
add
faddl
ljmp
add
ljmp
add
popl
adc
mov
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
imul
icebp
add
mov
andl
add
mov
add
ja
add
fildl
fstpt
jo
jmp
add
add
jecxz
push
mov
mov
pop
fadds
mov
push
popa
add
add
add
jmp
mov
call
add
add
cld
add
add
add
mov
jb
add
std
addl
mov
lea
pop
jmp
push
ror
pop
push
mov
push
xor
pop
add
push
not
add
lea
pop
push
push
push
dec
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
pop
jno
ja
nop
add
add
add
add
add
add
aam
add
add
mov
add
rorb
mov
sbbl
mov
in
jle
add
add
mov
add
insb
add
xchg
nop
faddp
xchg
out
lds
int
add
pop
mov
push
push
push
push
push
call
js
bound
std
out
iret
add
add
add
mov
add
add
add
add
lock
add
cmp
rolb
popl
je
add
add
add
ljmp
movsl
mov
data16
pop
pop
push
push
push
call
add
add
add
fildl
lahf
add
cld
arpl
movsl
add
push
add
cwtl
cld
add
movsb
add
xlat
add
add
aad
add
mov
add
mov
mov
mov
mov
jno
add
shlb
popf
add
jbe
mov
add
in
mov
aad
cld
lea
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
pop
shll
add
add
add
in
add
testb
pop
pop
add
mov
mov
idivl
jns
add
add
hlt
lea
pop
pop
push
push
push
push
push
push
push
call
outsl
xchg
mov
add
add
mov
add
add
add
add
add
sti
add
ljmp
add
movl
enter
cmc
inc
mov
lea
pop
leave
push
lea
sub
shr
inc
pop
ret
push
push
lea
push
call
lds
add
add
jno
add
addl
insb
rcrl
pusha
push
cli
scas
mov
fwait
clc
jecxz
popa
jo
mov
add
test
mov
bound
xchg
mov
add
jecxz
lahf
mov
pop
mov
lcall
or
push
mov
push
lea
push
call
add
push
lock
jmp
cli
xchg
xchg
movsb
add
add
out
aad
lcall
add
xchg
fnstenv
lods
mov
scas
jmp
add
add
xchg
add
add
lret
enter
add
mov
mov
cmc
add
sar
std
iret
mull
fs
testl
push
lea
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
jp
std
lahf
add
add
add
adc
out
testb
add
add
add
add
add
popf
insb
jns
mov
data16
mov
add
pusha
cmpsb
jo
add
add
add
hlt
iret
add
je
lret
out
add
mov
add
aam
add
add
lods
incb
nop
add
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
les
add
mov
add
pushf
add
stos
add
loopne
ljmp
rclb
mov
push
shlb
mov
lea
pop
push
movl
push
lea
pop
addl
push
shr
pop
test
je
push
sub
shl
pop
mov
pop
push
add
not
pop
pop
pop
push
push
push
push
push
push
call
js
mov
iret
pop
stc
add
jne
add
xorl
mov
add
cmc
jge
xchg
add
add
sub
add
andb
add
add
sahf
test
lret
add
add
add
xchg
add
sbb
push
push
push
lea
push
push
lea
push
call
test
add
add
iret
jge
add
add
jo
rorl
faddl
add
add
add
add
pop
sahf
add
les
push
add
jns
add
push
jl
add
add
mov
fldl
pushf
je
addr16
add
icebp
mov
je
loope
lock
sbb
push
push
push
push
call
add
add
add
outsl
add
orb
add
lods
mov
add
ja
pop
pop
xchg
add
push
iret
test
outsl
pop
jno
jno
mov
add
movsb
add
test
fmul
xchg
xchg
icebp
movb
add
pop
ret
push
not
pop
push
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
addl
nop
sahf
add
xchg
add
popf
add
add
add
pop
add
xchg
icebp
enter
add
mov
add
pop
orl
mov
pop
out
loop
popf
lcall
add
popa
je
add
lcall
add
in
mov
lea
pop
add
push
pop
push
push
lea
rol
pop
push
push
push
push
lea
push
push
lea
push
call
lret
cltd
push
add
mov
add
les
add
add
mov
add
mov
shrb
add
add
mov
stos
rolb
push
mov
mull
add
add
test
sarl
loope
test
out
repnz
ret
pop
add
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
rcl
enter
xchg
cld
xchg
mov
into
add
add
push
jp
fs
add
jne
les
add
adc
popa
add
add
jbe
les
push
push
push
push
push
push
lea
push
push
call
int
faddl
add
loop
fwait
add
add
lock
jle
out
add
add
enter
rolb
add
test
scas
out
add
ja
imul
popl
xchg
jge
add
add
pop
add
test
lret
add
mov
lea
pop
testl
push
add
pop
addl
push
push
push
call
add
incb
add
add
mov
add
iret
sti
mov
mov
out
add
lret
pushf
add
repnz
mov
int
mov
lock
out
add
ja
add
add
add
in
add
pop
scas
add
pop
add
add
add
into
mov
add
add
lea
pop
call
mov
push
sub
dec
xor
pop
pushl
push
lea
push
push
push
push
push
call
testl
je
sti
jnp
mov
mov
add
addb
add
xlat
add
add
add
add
add
xchg
mov
push
fmulp
add
add
add
fucomip
ret
jl
add
add
mov
sbb
call
or
loop
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
loope
test
sar
shl
jo
mov
cld
or
loopne
cwtl
pop
xchg
loop
add
add
push
push
mov
lea
pop
push
push
rol
ror
sub
pop
call
push
push
call
incb
add
jns
add
add
xchg
je
add
xchg
add
add
call
pop
scas
popl
xchg
add
add
mov
ret
add
enter
pop
add
xchg
mov
add
jno
xlat
lds
add
mov
lea
pop
cmpl
jne
push
lea
ror
pop
pop
push
sub
add
rol
xor
pop
pop
push
lea
push
push
push
push
push
call
xlat
add
movsb
outsl
pushf
jmp
xchg
les
mov
mov
mov
add
add
outsl
pusha
add
add
cli
jns
xchg
scas
mov
cwtl
addr16
ficoms
add
jnp
xchg
jno
mov
add
xchg
pusha
add
jle
popa
mov
jmp
add
jne
ljmp
add
mov
add
mov
lea
pop
pop
push
ror
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
sbbb
mov
lea
add
icebp
pop
pop
call
icebp
add
test
pop
jne
outsl
aam
add
add
add
icebp
fwait
test
mov
lea
pop
leave
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
fdivl
add
add
jecxz
add
jae
jne
mov
sarl
add
push
jnp
in
jns
mov
aad
mov
stc
add
mov
cli
mov
push
cmc
push
ficoml
mov
cwtl
flds
scas
add
fcomi
mov
lea
pop
ret
push
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
popa
mov
add
mov
add
add
addb
aam
add
push
lds
add
movsl
add
push
add
out
in
xchg
add
add
popl
add
imul
add
clc
mov
add
add
add
add
fs
loopne
mov
lea
pop
mov
push
push
push
call
nop
xchg
pusha
lods
add
data16
stc
data16
insb
popl
add
add
test
add
xchg
mov
movsl
nop
mov
add
add
add
imul
add
idiv
out
mov
data16
add
add
jae
rcll
add
loop
lret
xchg
mov
hlt
mov
lea
pop
add
push
push
lea
push
call
add
cmpsl
add
jb
rol
mov
fstpt
add
faddl
add
add
ljmp
mov
shll
add
add
mov
add
roll
shl
pop
xchg
lahf
mov
lea
pop
push
push
add
sub
sub
dec
pop
push
push
push
shl
pop
push
movl
push
shr
pop
push
push
xor
ror
pop
call
push
push
rol
xor
rol
pop
call
subl
push
dec
inc
add
pop
cmpl
jne
push
push
push
push
push
call
add
xlat
mov
push
in
add
add
arpl
add
hlt
add
add
lds
movsb
loope
add
add
add
jecxz
mov
add
popa
mov
add
jle
jmp
outsl
jnp
push
mov
mov
loope
add
int
mov
sarl
add
adc
pop
push
push
lea
push
call
add
add
fs
pop
je
hlt
push
add
add
push
les
pop
mov
push
add
add
add
add
add
add
cli
insb
push
andb
scas
addr16
mov
lea
pop
pop
push
rol
sub
dec
lea
pop
pop
push
push
push
push
push
push
push
call
add
push
icebp
add
in
mov
mov
xchg
push
mov
into
sbbb
test
add
add
in
aam
fadds
test
add
shl
add
add
cld
fcomip
je
pop
int3
test
add
insb
out
mov
add
mov
lea
pop
pop
leave
push
push
push
lea
push
call
add
repnz
in
mov
clc
add
bound
sub
add
jns
add
aad
add
add
testb
mov
mov
xchg
addb
add
push
mov
adc
push
push
push
push
push
push
push
push
call
pop
xchg
add
movsb
push
mov
test
add
add
arpl
add
lods
add
add
mov
rorl
add
add
push
iret
lock
add
cmp
add
pop
add
test
add
iret
add
iret
push
fnsave
jns
out
add
add
icebp
loope
fwait
movsl
push
add
add
mov
lea
pop
mov
add
push
push
call
jne
add
int3
add
ja
add
cmc
jecxz
fsave
les
mov
sti
aam
fisubrs
rclb
add
mov
add
push
add
pop
outsl
mov
cli
rcll
stos
add
add
mov
aam
bound
pop
push
push
push
push
call
ljmp
add
jae
stos
push
addl
aad
jge
mov
call
cli
mov
jnp
pop
add
mov
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
call
add
add
mov
add
jp
enter
jne
mov
add
int3
add
add
stc
add
hlt
js
add
mov
lea
pop
push
push
inc
ror
shl
pop
mov
push
push
push
push
call
push
addr16
pop
add
add
jmp
mov
add
xchg
jecxz
outsl
mov
neg
add
lret
push
movsl
lret
add
loopne
push
add
call
xchg
add
repnz
clc
icebp
in
add
add
popw
add
pusha
adc
inc
cmp
push
push
push
lea
push
lea
push
lea
push
push
call
int3
out
add
add
push
movsl
mov
push
xchg
leave
add
pop
jae
pop
mov
mov
add
mov
add
add
loop
mov
mov
add
fiaddl
fs
add
pop
sub
push
xor
pop
mov
shr
push
push
push
call
add
mov
add
pop
add
add
add
add
pusha
rcr
mov
test
mov
add
add
xchg
push
add
add
popl
add
push
rcl
popf
add
filds
lea
pop
add
push
ror
pop
mov
push
shr
xor
xor
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
nop
lods
add
je
sahf
add
add
mov
add
fdivr
push
add
add
cmc
add
js
addr16
jmp
add
mov
jl
add
add
xlat
ljmp
add
popa
push
add
add
iret
cld
addr16
fildll
mov
stos
add
aam
bound
pop
add
add
push
lea
push
call
cltd
add
hlt
add
push
add
add
mov
mov
lock
push
shll
into
lods
add
mov
jecxz
xchg
lock
lea
pop
mov
push
ror
lea
rol
pop
mov
push
push
lea
push
lea
push
push
push
push
call
add
jp
addr16
je
add
push
mov
add
add
jo
movsb
add
fwait
add
lea
lea
add
insb
imul
lea
pop
cmp
jne
push
push
push
push
push
push
lea
push
push
call
je
add
lret
add
add
add
cmpsb
popf
mov
pop
mov
add
add
nop
add
add
jp
xlat
add
in
jnp
add
jmp
add
addb
fadds
add
cltd
jnp
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
add
outsl
add
insb
add
add
add
pop
mov
jae
jns
mov
add
jbe
stc
jbe
add
mov
fiadds
fstl
loop
in
stos
mov
pop
add
add
in
add
pop
jmp
nop
pop
mov
lods
add
cmpsb
mov
lea
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
xlat
shll
add
add
add
xchg
add
add
gs
sub
testb
xchg
mov
add
movsl
rcrl
jp
push
in
bound
ja
iret
add
sahf
cli
outsl
mov
faddl
imul
fmull
add
add
add
orb
add
loopne
pop
mov
mov
push
lea
push
lea
push
call
mov
filds
je
add
sti
pop
mov
test
mov
add
mov
jo
add
add
add
pusha
bound
arpl
rolb
add
pop
clc
add
add
fsubrp
mov
lea
pop
sub
jne
mov
push
lea
add
pop
movl
jmp
push
push
push
lea
push
lea
push
call
add
sarb
fiaddl
mov
add
out
insb
add
add
sarl
ror
fsubrl
add
pop
mov
add
add
add
fs
lea
pop
mov
mov
push
sub
xor
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
pop
add
stos
add
cltd
xchg
shrl
call
pop
movb
xor
flds
sti
fdivrs
pop
test
in
add
mov
lea
pop
mov
push
add
pop
movl
push
sub
sub
pop
jmp
push
dec
add
pop
mov
push
inc
add
sub
pop
cmpw
jne
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
add
filds
add
xchg
add
add
add
add
testl
std
add
mov
ret
mov
push
add
insb
into
mov
mov
lret
jecxz
mov
lea
pop
mov
movl
push
not
add
lea
pop
jmp
push
not
ror
pop
pushl
push
push
lea
push
lea
push
call
xchg
shll
out
out
mov
add
add
add
pop
call
add
xchg
stc
add
mov
add
clc
xchg
add
cltd
cld
add
in
mov
jbe
scas
ljmp
push
jnp
into
add
fstps
int3
lahf
stos
pusha
jnp
cwtl
add
xchg
jge
add
push
test
adc
mov
push
push
push
push
push
call
mov
xchg
xchg
cli
mov
add
icebp
add
pop
pushf
pop
add
fnstsw
xlat
pop
add
jbe
add
andw
xchg
add
add
insb
add
add
fsubrs
xchg
nop
leave
mov
imul
je
sbb
mov
data16
mov
mov
push
push
rol
shr
rol
dec
push
sub
add
add
xor
sub
not
not
pop
ror
lea
pop
push
pop
push
push
push
push
lea
push
push
push
call
add
add
lret
addl
call
out
mov
add
add
add
add
lret
mov
roll
add
stos
mov
hlt
rcrb
mov
xchg
add
lahf
jb
data16
andb
pop
fdivr
add
addr16
lea
pop
call
push
dec
pop
cmpl
je
push
push
ror
push
or
not
add
add
add
sub
shr
ror
shr
pop
sub
pop
push
rol
pop
push
call
push
add
add
ror
pop
cmpl
je
push
push
shr
dec
shr
sub
push
push
pop
add
shr
add
shr
rol
sub
ror
add
pop
ror
pop
push
add
rol
pop
push
call
push
lea
push
push
push
push
push
call
mov
jae
mov
pop
add
add
enter
imul
add
fwait
stos
add
add
test
add
movl
filds
add
xlat
xchg
arpl
add
leave
pop
fnstenv
fisubs
nop
scas
add
add
faddl
jnp
mov
lea
pop
cmpl
je
push
push
lea
rol
dec
push
xor
add
sub
dec
sub
sub
dec
shl
pop
inc
add
pop
push
lea
push
push
call
add
cmpsb
xchg
mov
int3
sahf
add
add
add
repnz
xorl
test
add
mov
add
add
addl
add
add
fcoml
add
add
scas
add
push
scas
add
mov
add
stc
add
mov
mov
mov
lea
pop
push
push
sub
sub
pop
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
fdivrs
xchg
xchg
test
popl
mov
add
aad
add
add
cmpsl
xchg
jb
nop
out
jp
xchg
jae
out
jo
add
nop
xchg
push
add
pop
mov
mov
pop
xlat
cmpsb
shl
add
add
add
add
shll
rolb
cmpsb
xchg
enter
mov
mov
fs
push
loope
xchg
loop
mov
and
cmpl
je
push
push
shl
ror
rol
push
or
inc
add
sub
lea
add
pop
shl
ror
dec
pop
push
push
lea
push
push
call
jb
test
add
scas
add
add
mov
arpl
in
pop
pushf
lahf
jne
ja
add
add
scas
mov
std
mov
add
loope
add
mov
mov
pop
add
repnz
mov
ja
out
ret
ret
add
add
add
add
mov
mov
lea
pop
push
push
shl
add
pop
call
cmpl
je
push
push
sub
inc
push
and
add
sub
sub
dec
pop
xor
pop
push
xor
shr
pop
push
push
push
push
push
push
push
call
outsl
test
add
push
mov
in
icebp
lahf
add
add
push
lahf
std
scas
add
mov
test
fcomps
add
jp
pop
add
into
mov
lea
pop
call
cmpl
je
push
push
dec
sub
push
xor
add
shl
dec
xor
sub
inc
add
pop
rol
shr
ror
pop
push
add
add
pop
push
push
push
lea
push
call
add
add
add
jo
cld
pushf
mov
add
in
mov
add
rclb
add
in
test
mov
xchg
add
nop
ja
jle
fists
mov
hlt
mov
cli
movsl
int3
out
mov
cld
add
push
mov
lea
pop
call
push
ror
pop
cmpl
je
push
push
rol
push
or
inc
add
lea
add
sub
not
xor
dec
add
pop
shl
sub
dec
inc
pop
push
lea
push
push
push
call
mov
cltd
add
lods
flds
in
aam
out
add
in
lea
jb
loop
mov
pop
add
shr
fs
add
roll
add
in
add
add
add
mov
call
add
fiadds
add
add
cwtl
data16
mov
add
add
jae
mov
add
add
stos
add
add
int
add
add
add
add
pop
add
pop
push
push
inc
pop
call
push
push
push
call
enter
add
add
gs
xchg
mov
mov
mov
add
cld
jl
lock
jp
pop
add
lods
add
lods
addb
in
insb
add
bound
mov
mov
imul
fs
ljmp
add
add
mov
xchg
mov
jb
add
mov
addb
mov
movsb
lret
push
iret
mov
lea
pop
cmpl
je
push
push
xor
shl
shl
not
push
xor
add
inc
sub
lea
sub
pop
add
shr
pop
push
pop
push
call
push
push
push
call
xchg
test
loop
add
add
add
add
add
add
add
test
add
aad
bound
test
mov
cmpsl
mov
jo
add
add
add
addr16
add
leave
add
repnz
fists
mov
add
cltd
push
aad
add
push
add
add
repnz
out
clc
mov
push
hlt
mov
lea
pop
cmpl
je
push
push
xor
push
and
add
shl
sub
sub
add
shl
pop
sub
lea
ror
pop
push
push
push
lea
push
push
call
add
movsl
jno
add
add
add
jb
arpl
int3
add
add
lds
call
add
jbe
add
clc
movsl
add
arpl
add
mov
fbld
add
lret
add
in
mov
cmc
mov
push
test
insb
lock
cmpsl
xlat
add
hlt
lea
pop
push
push
sub
xor
shl
pop
call
push
lea
push
push
push
lea
push
push
push
call
mov
test
lret
jl
stos
add
popl
pop
add
test
lcall
add
mov
pop
add
pushf
lods
add
int3
add
add
outsl
add
add
mov
add
add
mov
pusha
add
filds
add
fwait
add
add
rolb
lds
lret
aam
jno
std
add
arpl
fwait
add
enter
mov
lea
pop
cmpl
je
push
push
dec
lea
sub
inc
push
sub
add
shl
sub
inc
pop
add
add
pop
push
shl
inc
pop
push
call
push
inc
pop
cmpl
je
push
push
shl
shl
push
or
inc
add
sub
dec
add
sub
xor
not
sub
pop
add
pop
push
push
push
lea
push
call
pushf
rolb
add
push
xchg
fwait
shrb
aam
add
lods
fdivl
incb
out
mov
add
cmc
xchg
int3
pop
int3
fcomps
addb
xchg
add
js
add
int
add
pop
add
shlb
add
add
add
cwtl
push
add
pusha
adc
call
push
push
call
lods
sahf
push
imul
jo
xchg
add
stc
clc
add
lret
rolb
test
test
add
out
cmpsb
add
add
add
movsl
jecxz
add
out
pop
add
mov
add
andb
add
pop
cmpl
je
push
push
rol
inc
shl
ror
push
xor
add
sub
sub
rol
sub
sub
add
pop
inc
ror
pop
push
push
call
stos
lret
sti
xchg
bound
nop
fwait
leave
pop
add
mov
jnp
imul
mov
orb
roll
scas
add
add
mov
add
add
mov
add
mul
add
lea
hlt
lea
pop
push
push
lea
push
call
test
lahf
fcmovbe
mov
pop
pop
add
fisubrs
add
add
add
pop
add
add
fcomip
add
incb
fsub
add
add
push
jp
jns
push
jge
mov
add
add
leave
mov
add
add
pop
add
out
fsave
jbe
add
jge
cli
mov
lea
pop
call
push
inc
shl
not
pop
cmpl
jne
push
push
lea
push
push
push
push
lea
push
call
add
add
xchg
fs
add
add
scas
mov
cld
sar
add
xchg
add
add
mov
xchg
add
lock
add
add
clc
add
hlt
lea
pop
mov
movl
push
lea
push
push
push
lea
push
push
call
mov
add
fadds
add
add
add
fildl
add
sar
int
add
leave
jne
mov
add
fwait
mov
xchg
add
imul
jb
mov
scas
add
add
fmull
imul
push
push
push
lea
push
lea
push
push
push
push
call
jp
add
movb
mov
incb
add
mov
add
imul
stos
out
add
clc
add
cmpsb
add
cli
add
add
mov
in
add
mov
lea
pop
pop
push
push
push
push
call
add
testb
add
add
pushf
push
shll
add
ja
mov
add
mov
ret
aad
add
mov
xchg
jbe
add
mov
lret
std
imul
mov
out
fmull
push
pop
pop
push
push
push
lea
push
call
add
fwait
clc
data16
or
cmpsb
in
push
jo
mov
add
add
jle
mov
roll
ret
fcmovbe
jne
kmovw
add
je
add
lock
out
add
add
in
mov
lea
pop
pop
leave
push
xor
not
shr
pop
ret
push
shr
sub
pop
push
push
push
push
push
lea
push
push
call
add
add
fidivrs
add
push
push
add
add
add
jns
lock
add
add
mov
pop
shl
add
add
add
test
add
lock
pop
mov
add
push
shl
pop
cmpl
jne
push
push
shr
lea
sub
dec
push
and
add
not
shl
shr
sub
lea
shl
pop
sub
sub
pop
push
push
lea
push
call
mov
test
pop
add
add
mov
sahf
outsl
add
jo
add
addr16
push
hlt
repnz
fcomip
pop
add
add
stc
add
pop
add
pop
pushl
push
lea
pop
call
push
push
lea
push
push
push
push
push
call
lds
jp
add
std
jl
add
add
data16
imul
test
imull
lret
add
pop
push
pop
pushf
add
mov
push
mov
les
pop
call
jmp
push
rol
pop
cmpl
je
cmpl
jne
push
lea
push
lea
push
call
aam
mov
into
mov
add
lods
mov
mov
iret
jne
xchg
pop
add
add
add
add
add
cmp
add
mov
add
mov
test
test
stc
add
add
add
pop
out
add
mov
lea
pop
leave
push
not
pop
add
push
push
push
lea
push
push
push
push
push
call
ja
add
pop
out
cwtl
test
fstl
mov
mov
xchg
add
add
add
pusha
mov
add
push
jb
clc
jmp
add
add
into
add
fwait
add
add
mov
frstor
add
add
jle
cld
lea
pop
pop
push
push
push
push
call
mov
add
add
shrb
xchg
add
fiaddl
ljmp
add
add
add
add
xchg
fsubrs
arpl
add
mov
lea
pop
pop
push
add
rol
xor
pop
pop
pop
push
sub
sub
pop
leave
add
push
push
push
push
call
mov
add
fisubl
add
push
ja
add
aad
add
out
popf
ljmp
add
add
pop
add
add
xchg
add
rorb
arpl
mov
add
out
test
jp
jnp
add
sarb
mov
push
mov
imul
add
add
iret
sahf
push
scas
in
mov
lea
pop
ret
push
not
add
add
pop
jmp
cmpl
jne
push
push
rol
inc
xor
push
push
pop
add
add
add
sub
shr
xor
pop
sub
pop
push
sub
sub
pop
pushl
push
sub
inc
dec
sub
pop
call
push
push
call
xchg
pop
pushf
in
mov
sti
arpl
mov
clc
lcall
stos
test
mov
fidivrs
add
add
pop
xchg
sbb
add
fiaddl
jbe
add
xchg
jnp
mov
add
push
add
add
mov
lea
pop
push
push
dec
add
pop
call
push
push
lea
push
lea
push
push
push
push
push
call
xchg
xchg
lock
aad
sahf
add
int3
jmp
add
add
add
addb
lock
add
add
test
loopne
mov
xchg
insb
mov
add
mov
jge
cld
push
add
loope
mov
ja
imul
add
push
add
mov
lea
pop
jmp
push
push
push
push
call
pushf
add
pop
jge
add
mov
imul
ljmp
add
add
add
ret
add
test
add
fsubrl
xchg
xchg
pushf
add
add
into
mov
bnd
push
out
int3
lea
pop
cmpl
jne
push
push
push
push
push
lea
push
push
call
or
push
add
icebp
add
add
add
add
pop
add
add
scas
add
add
nop
mov
test
add
insb
push
mov
push
add
mov
rorb
pop
mov
mov
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
lds
add
fadds
add
add
add
arpl
add
add
test
add
ljmp
xchg
mov
mov
add
into
add
add
add
test
out
int
lahf
jecxz
add
je
add
add
popf
add
add
pop
add
add
pop
push
push
push
shl
lea
rol
add
push
sub
add
rol
sub
sub
lea
pop
sub
sub
xor
pop
push
add
add
pop
pushl
call
push
push
push
call
popf
stc
add
cli
add
pop
test
cli
add
fldl
add
fnsave
roll
jo
jl
rolb
out
hlt
xchg
pop
add
add
scas
js
pop
add
jge
mov
out
add
or
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
addl
test
jmp
push
jmp
jge
aam
add
cli
filds
add
stos
add
add
add
roll
add
mov
add
cmpsl
add
push
mov
lea
pop
call
push
push
rol
rol
push
xor
add
sub
shr
shl
sub
xor
dec
pop
shl
sub
pop
push
shl
shl
lea
inc
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
in
jle
cmpsb
add
enter
mov
jb
add
add
add
add
jl
add
pop
mov
data16
mov
lock
stos
add
push
add
ja
or
fldl
mov
add
in
jp
add
xchg
into
add
push
add
push
add
add
add
pushf
stos
add
lret
mov
add
add
mov
lea
pop
call
push
sub
lea
pop
call
push
push
xor
sub
add
push
sub
add
inc
dec
lea
sub
pop
sub
pop
push
push
lea
push
push
call
cmc
add
xchg
lret
into
add
mov
aam
add
mov
add
add
mov
add
fldl
pop
jns
add
imul
leave
add
movl
add
lea
pop
pushl
push
ror
shl
pop
call
call
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
fisubl
xchg
in
call
and
fnsave
int3
add
push
add
add
leave
mov
add
call
cmpsl
add
add
faddl
cmpsb
bound
add
push
loope
add
add
in
xchg
enter
fmull
mov
xchg
lods
add
jbe
int3
lea
pop
lea
push
push
shr
sub
push
or
not
add
sub
ror
not
sub
pop
lea
pop
push
push
push
push
push
call
mov
lods
call
add
mov
xchg
jb
xchg
roll
fbstp
movsl
fiadds
mov
in
xchg
add
stc
iret
add
add
add
jp
popa
xchg
add
add
gs
add
stos
mov
add
xlat
add
imul
bound
pushl
push
push
push
push
push
push
push
call
mov
ja
add
scas
add
mov
push
mov
add
jns
add
add
hlt
std
add
int
add
add
scas
cmc
clc
leave
flds
fdivrl
popa
lret
out
nop
add
fs
lods
out
jno
fistpl
mov
add
notl
jge
add
add
mov
bound
call
push
push
lea
pop
call
push
push
sub
rol
push
or
not
add
lea
add
sub
xor
pop
lea
lea
pop
push
not
not
pop
pushl
call
push
not
pop
call
push
sub
dec
add
inc
pop
mov
push
push
add
dec
push
xor
add
add
sub
lea
lea
dec
pop
dec
not
add
xor
pop
push
push
lea
push
call
jo
add
ret
pop
out
ja
pop
cltd
fidivrl
pop
sti
add
jne
lock
mov
add
push
add
mov
add
int
add
add
push
add
pop
fistpl
add
in
int3
mov
add
add
arpl
je
add
jb
jle
pop
mov
icebp
mov
pop
cmpsl
jecxz
add
add
aad
add
mov
or
pushl
push
push
lea
push
push
call
cmpsl
incb
jnp
jge
add
add
add
rcrb
add
push
push
mov
add
pop
mov
add
add
clc
ret
add
popa
pusha
scas
lcall
mov
out
mov
add
add
mov
add
add
xlat
jne
mov
lret
add
insb
add
ljmp
mov
jp
hlt
lea
pop
call
push
sub
add
pop
push
push
lea
pop
call
push
push
add
add
rol
push
or
inc
add
not
shl
sub
xor
rol
xor
ror
pop
inc
xor
pop
push
push
push
push
lea
push
call
add
add
jne
add
ret
popa
add
mov
add
jmp
add
add
test
out
add
fs
mov
add
loop
mov
bound
pushl
push
sub
add
pop
call
push
shl
shl
pop
push
push
push
lea
push
push
push
push
push
call
add
bound
test
add
test
add
add
add
into
jne
popl
test
repnz
add
idivl
fcmovnb
loopne
add
add
add
add
roll
add
lret
out
stos
popa
jo
pusha
mov
lea
pop
pushl
call
push
push
lea
inc
lea
push
xor
add
add
not
sub
ror
pop
add
ror
add
pop
push
push
push
push
call
ret
pop
rolb
xchg
add
repnz
test
lds
add
add
aad
mov
mov
fnstsw
add
add
leave
lea
pop
pop
push
jge
insb
add
push
test
ja
push
push
rolb
testb
in
add
lods
pusha
add
out
add
fnstenv
add
call
cmpsl
mov
lea
pop
pushl
call
push
push
lea
dec
push
or
not
add
shr
shr
sub
dec
pop
shl
pop
push
push
shr
lea
ror
push
push
pop
add
add
shl
xor
sub
lea
lea
add
inc
pop
lea
pop
push
rol
lea
sub
add
pop
call
push
lea
push
push
push
push
lea
push
call
push
jecxz
int
push
cmc
clc
xchg
jbe
mov
jge
mov
add
fcoms
addb
add
add
ret
mov
add
xchg
add
ret
iret
mov
mov
scas
xchg
mov
mov
lea
pop
pop
push
dec
shr
dec
pop
dec
jne
push
xor
pop
call
push
push
push
call
add
fwait
xchg
add
add
add
in
leave
add
mov
mov
add
out
add
mov
pusha
add
add
cli
popl
add
mov
add
xchg
popa
add
add
mov
add
movl
pop
mov
lea
pop
jmp
push
push
push
push
push
call
mov
call
mov
mov
int
add
add
fcom
add
mov
add
add
int
add
push
push
fwait
add
add
pop
pop
add
add
cmc
jl
lcall
cli
add
je
add
add
add
aam
add
pop
test
in
add
add
lea
pop
call
push
push
inc
push
or
not
add
xor
sub
not
pop
not
pop
push
push
lea
push
push
push
push
call
stc
ja
flds
xchg
mov
add
add
mov
pusha
add
mov
add
add
add
add
add
fiadds
add
push
fucomip
xchg
add
arpl
rorb
pop
pushl
push
inc
add
sub
pop
call
push
xor
inc
pop
push
push
push
push
push
push
lea
push
call
add
fidivrs
jbe
pop
add
cwtl
icebp
add
cmpsl
mov
add
hlt
add
ret
jno
mov
mov
jnp
pop
insb
add
jmp
add
outsl
pusha
add
adcl
add
add
add
imul
add
mov
lea
pop
call
push
xor
dec
dec
shr
pop
mov
push
lea
push
call
add
push
in
mov
add
pop
mov
add
add
add
pushf
out
push
push
lahf
int3
add
pusha
xchg
roll
add
add
add
addr16
add
stos
clc
movsl
xchg
cwtl
xchg
cmpsl
out
loope
add
pop
lods
in
add
mov
jb
jnp
cli
pop
rorl
pop
lea
push
push
rol
push
xor
add
ror
inc
add
sub
dec
xor
pop
sub
pop
push
push
lea
push
call
add
add
add
mov
add
jge
add
fildl
add
add
divl
add
fwait
add
add
mov
lock
ljmp
add
add
add
mov
cltd
arpl
pop
pushl
push
push
push
call
cwtl
add
stos
pop
lcall
lcall
push
fimuls
stc
add
test
in
rcl
add
add
out
mov
mov
add
mov
add
jge
movsl
add
fucomp
add
add
mov
lea
pop
call
push
push
not
sub
sub
xor
pop
call
push
push
add
add
add
push
sub
add
ror
dec
rol
sub
sub
ror
inc
sub
pop
ror
sub
dec
pop
push
push
push
push
push
push
push
call
add
fbstp
test
add
push
xchg
aam
cli
add
add
jbe
data16
je
fiadds
add
popf
cmpsl
lcall
add
add
lahf
test
add
sbb
pushl
call
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
xchg
add
testb
push
pusha
xchg
mov
mov
fisttpll
shrl
sti
add
stos
add
add
mov
add
add
pop
sarb
add
rclb
pop
add
jmp
mov
add
movl
mov
js
mov
out
jmp
sub
rorb
clc
inc
dec
pop
lea
push
push
xor
sub
push
sub
add
rol
shl
sub
ror
sub
xor
dec
pop
add
ror
shl
add
pop
push
sub
sub
shl
pop
pushl
push
shr
inc
inc
pop
call
push
push
lea
push
lea
push
push
push
call
pop
add
xchg
add
hlt
out
lock
add
add
add
add
cmp
data16
add
lea
push
add
in
xchg
stc
mov
bnd
add
add
stos
add
ficoml
mov
notb
jecxz
add
popa
add
add
fldenv
add
add
add
add
sbb
add
push
lea
push
push
push
lea
push
push
push
push
call
mov
lret
add
addb
aad
add
lahf
filds
add
push
mov
int
icebp
xchg
mov
add
add
add
cmpsl
je
add
add
shrb
add
push
js
scas
addb
add
add
in
add
cmpsl
andl
add
add
jecxz
std
mov
lea
pop
push
push
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
out
add
mov
aam
add
push
lods
add
add
add
add
cmpsl
sahf
sti
add
xchg
mov
mov
add
std
add
push
add
mov
popl
add
out
push
add
add
add
mov
jae
mov
lea
pop
pushl
push
push
xor
inc
shr
push
or
inc
add
sub
shr
sub
not
rol
inc
shl
pop
sub
sub
pop
push
shl
pop
push
push
inc
pop
call
push
push
add
not
sub
push
or
inc
add
shl
add
add
shl
sub
lea
inc
pop
lea
add
ror
pop
push
ror
add
add
pop
pushl
call
push
push
push
push
lea
push
lea
push
push
push
push
push
call
idivl
add
add
add
pop
lea
jmp
mov
mov
gs
mov
add
add
add
add
roll
mov
mov
hlt
pop
add
jae
mov
push
xchg
addl
int3
lea
pop
push
push
push
push
lea
push
lea
push
push
call
clc
mov
in
add
mov
arpl
jns
pop
add
les
add
jge
add
scas
add
into
fld
add
popl
add
out
mov
add
ja
ret
add
fbld
iret
add
mov
add
test
mov
lea
pop
call
push
push
sub
inc
inc
push
or
inc
add
shl
ror
sub
dec
add
add
pop
shl
inc
pop
push
push
call
pop
xchg
rolb
call
stos
mov
add
push
faddl
add
mov
orb
icebp
stc
mov
add
cli
in
add
clc
les
test
fwait
leave
out
loopne
test
add
add
lock
sahf
shrb
add
mov
add
mov
jbe
ja
cmpsl
add
add
pop
mov
add
movsb
jnp
add
test
int3
lea
pop
pushl
call
push
lea
push
call
add
ja
pop
imul
add
call
cmpsb
movsl
cmpsl
hlt
lods
cld
arpl
add
mov
add
mov
pushf
outsl
adcb
xchg
mov
add
mov
mov
add
fistpll
add
pop
pop
add
mov
lea
pop
call
push
push
push
lea
push
push
push
call
jb
std
faddl
add
mov
add
addl
iret
movl
add
lods
add
shll
stos
add
add
mov
add
xlat
add
add
xchg
ret
lret
clc
mov
lea
pop
jmp
push
lea
push
push
lea
push
lea
push
lea
push
call
in
add
add
movsb
loop
push
cmc
add
call
add
add
fwait
add
movsb
add
popf
leave
mov
add
add
sti
sbb
lahf
aam
fildl
loopne
roll
aam
bound
pop
pushl
push
push
push
lea
push
push
push
push
call
push
faddl
add
pop
addl
add
push
mov
add
mov
mov
jo
icebp
stc
ljmp
add
mov
ja
jne
push
in
addb
imul
jno
mov
lea
pop
mov
push
add
xor
inc
pop
jmp
push
push
inc
push
or
inc
add
shr
add
shl
sub
inc
sub
pop
lea
inc
pop
push
sub
xor
pop
pushl
call
push
ror
add
pop
push
push
lea
push
call
sti
xchg
add
jle
add
add
jb
lds
mov
mov
mov
add
ljmp
xchg
movsb
add
andl
jnp
mov
add
stos
xchg
call
popf
add
add
add
sahf
scas
jmp
subl
xlat
out
add
mov
fldl
add
push
add
ljmp
or
shrb
mov
inc
dec
push
and
add
sub
ror
pop
sub
ror
pop
push
lea
rol
pop
pushl
push
inc
add
pop
call
push
push
push
call
add
lods
push
add
add
imul
pop
add
add
rolb
mov
add
push
pop
js
flds
into
add
flds
mov
hlt
lret
mov
mov
push
into
sbb
movsb
add
add
push
movw
xchg
add
push
mov
test
test
jae
xchg
fnstenv
push
mov
hlt
lea
pop
call
push
not
pop
leave
push
push
push
push
push
call
cmp
add
rolb
add
add
loopne
aad
cmpsl
cwtl
lcall
add
add
add
movsb
call
cmpsb
sahf
add
stc
add
add
lock
add
bound
aad
add
lcall
gs
add
nop
add
pop
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
shlb
les
add
jecxz
sar
filds
cmpsb
test
add
mov
add
add
nop
in
enter
lds
shrb
in
cwtl
add
add
pop
pop
push
push
push
lea
push
call
addr16
add
add
add
add
cld
xchg
aam
mov
add
mov
add
add
push
movsl
add
add
stc
fldt
andl
push
push
push
push
push
push
call
add
aad
add
add
popa
fsubl
push
ja
cltd
xchg
in
add
add
fnstenv
int3
add
gs
mov
cld
add
aad
add
add
add
jb
pop
mov
pop
push
fidivs
lcall
mov
fmull
pop
push
shr
pop
leave
add
push
xor
dec
rol
pop
ret
push
add
pop
leave
push
shr
xor
pop
ret
push
lea
push
push
lea
push
push
push
call
or
add
popa
add
xchg
add
test
add
add
xchg
lds
add
lds
add
mov
mov
add
add
add
nop
push
add
add
add
push
mov
add
add
xchg
mov
mov
clc
addr16
add
add
pop
push
mov
push
push
push
push
push
call
cltd
add
fildl
add
push
add
pop
cmpsb
add
add
je
add
add
add
jl
mov
xchg
pop
lcall
add
loopne
stos
insb
add
mov
add
loope
add
add
pop
cmpl
jne
push
ror
pop
mov
push
sub
sub
pop
jmp
push
lea
push
push
push
lea
push
push
push
push
call
repnz
add
pop
add
xchg
movl
into
jl
adc
add
data16
mov
aam
xchg
test
add
stos
jge
imul
add
outsl
test
add
mov
and
inc
or
loopne
push
push
push
lea
push
push
push
call
add
lea
mov
push
add
arpl
mov
add
xchg
lcall
lock
add
add
push
add
add
add
icebp
scas
add
add
add
mov
pop
lds
sahf
jno
pop
faddl
mov
add
add
add
jl
repnz
sti
mov
xchg
mov
cmpsl
popf
cltd
cld
xchg
sti
mov
lea
pop
xor
xor
push
lea
ror
pop
add
push
push
push
push
call
rolb
add
add
add
add
ja
xchg
push
mov
pushf
fdivs
lods
icebp
cld
shrl
pop
mov
popl
out
push
xchg
lret
push
insb
mov
fnsave
xchg
std
add
in
nop
iret
fnstsw
fisttps
movsb
incb
xorl
add
fsubr
mov
lea
pop
xor
push
pop
dec
push
push
push
push
push
push
call
outsl
push
add
add
in
mov
out
xchg
jle
xchg
push
add
movsb
div
mov
add
out
lock
xchg
and
add
add
sbbb
mov
jecxz
mov
mov
add
jne
add
out
cwtl
popa
add
lea
pop
sub
push
dec
xor
xor
pop
jmp
push
xor
shl
ror
pop
sub
push
push
lea
push
push
lea
push
call
enter
je
into
loopne
add
push
fadds
fdivr
jecxz
jnp
les
add
add
add
add
in
icebp
add
lods
jl
jp
push
add
lret
andl
cld
lea
pop
pushl
push
lea
push
call
xchg
leave
mov
add
sti
lcall
mov
imul
sahf
add
clc
insb
icebp
loop
mov
cwtl
insb
iret
add
cmc
gs
cmp
mov
add
add
movsb
lods
add
mov
add
add
aam
add
in
jno
mov
out
js
mov
lea
pop
pop
push
inc
pop
sub
cmp
jne
push
shl
inc
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
jl
pop
mov
ret
mov
ficoms
out
jecxz
arpl
add
add
loop
add
into
pushf
add
lods
add
add
xchg
fwait
std
popa
jno
out
in
test
mov
add
fwait
add
push
ljmp
add
fs
iret
jbe
fs
add
insb
jge
flds
mov
fcomps
fisttpl
fmull
dec
cmp
jmp
inc
pop
mov
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
cmpsb
in
jge
add
mov
shll
stos
clc
pop
movsb
add
jo
add
cltd
cld
add
aam
testl
add
sti
lcall
add
mov
add
scas
add
out
add
popa
add
jmp
pop
add
push
jp
xlat
mov
lea
pop
shr
push
add
rol
add
add
pop
add
sub
push
shl
xor
shl
pop
pushl
push
not
shr
inc
xor
pop
pop
shr
push
push
push
push
call
add
out
rolb
mov
nop
bnd
add
jb
add
add
add
add
add
add
std
add
stos
add
mov
mov
add
add
push
add
aam
add
ljmp
rolb
add
add
mov
and
add
pop
mov
add
add
pop
and
sub
push
lea
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
jns
pushf
add
jne
add
repnz
add
mov
test
add
jb
add
addb
mov
out
add
add
pop
cmp
jne
leave
push
push
lea
push
call
add
mov
add
jno
scas
add
lahf
add
add
add
mov
jle
jae
enter
jb
pop
jmp
mov
add
out
popa
xchg
mov
add
popa
iret
add
push
ja
cwtl
jno
add
add
pop
add
add
into
add
or
ret
push
add
not
pop
push
push
shr
dec
not
pop
mov
add
push
not
add
pop
push
push
lea
pop
push
push
push
ror
add
pop
push
push
push
lea
ror
ror
pop
mov
push
shr
inc
pop
lea
push
rol
lea
shl
add
pop
sub
push
shr
lea
dec
pop
mov
push
lea
push
lea
push
push
lea
push
push
lea
push
call
iret
fbstp
add
out
xchg
xchg
add
xchg
fwait
mov
add
add
ljmp
add
add
pop
add
add
addb
add
aad
add
jmp
ja
lods
jnp
mov
add
xlat
shlb
mov
lea
pop
shr
push
lea
push
push
push
call
lahf
jno
jl
out
imul
add
add
add
aad
add
add
out
add
pusha
stc
add
pop
fwait
data16
add
cltd
push
sahf
xor
call
add
mov
add
push
add
mov
add
add
call
mov
add
jo
hlt
lea
pop
add
push
lea
not
sub
pop
mov
push
push
push
push
push
lea
push
call
lret
xchg
les
push
add
add
add
addb
cli
add
test
add
push
mov
add
in
xor
pop
add
mov
shrl
add
jl
jns
add
mov
mov
jge
add
add
xlat
std
add
push
add
repnz
mov
jo
mov
lea
pop
add
push
lea
inc
sub
pop
mov
push
inc
ror
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
sti
fists
insb
movsl
add
shll
add
cld
movsl
lock
ret
add
push
mov
fwait
lcall
out
loop
ja
mov
imul
pushf
popf
push
rolb
mov
mov
add
pop
xor
push
shr
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
repnz
add
negb
leave
add
repnz
add
add
lds
lea
mov
add
pop
push
add
sti
sahf
pop
mov
mov
jle
jno
mov
mov
out
pop
int3
fmuls
add
out
stos
sti
add
add
in
pushf
cltd
add
xchg
jge
fadds
sub
loopne
push
lea
pop
rol
rol
push
xor
pop
xor
inc
push
lea
push
push
push
call
lds
pop
mov
pop
xchg
cwtl
repnz
rol
add
add
jge
bound
cltd
loopne
pop
popa
add
movsb
add
into
ffree
mov
add
incb
jl
mov
loopne
sti
sarl
add
add
push
add
add
in
ficoms
jmp
push
add
jbe
pop
cmpb
jne
push
add
not
xor
sub
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
mov
mov
add
je
jbe
add
add
add
lahf
add
mov
popl
add
xlat
cwtl
shll
enter
add
add
push
pop
pop
mov
lea
pop
cmp
je
add
push
push
push
lea
push
push
push
push
push
call
mov
test
add
mov
add
add
add
mov
pop
imul
shlb
lock
fiaddl
loope
add
les
jno
add
add
jge
in
add
arpl
pop
cmpl
jne
push
push
push
call
aam
stos
add
add
add
add
int
xchg
mov
stos
jge
loope
add
jge
fwait
pop
lret
add
cmc
mov
mov
ficomps
add
pushf
les
lods
add
mov
lea
pop
xor
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
test
add
add
andb
mov
cld
data16
xchg
mov
repnz
mov
xchg
popa
roll
cli
mov
jle
mov
aam
add
out
pop
add
mov
add
mov
sub
pop
push
push
push
push
push
push
push
push
call
pop
add
add
add
add
push
jp
cmpsl
add
add
add
add
ffreep
ja
loope
push
mov
scas
lahf
add
add
mov
out
lea
add
add
jl
in
popf
les
stos
mov
lea
pop
pop
pop
push
lea
sub
not
pop
leave
ret
push
lea
push
call
add
add
add
add
jae
add
mov
jl
stos
ror
add
out
mov
add
mov
jne
mov
ja
push
iret
mov
scas
add
xchg
add
pop
in
add
add
xchg
pop
mov
add
push
push
push
push
push
push
push
call
pop
stos
jb
movl
in
imul
add
add
jle
add
call
loopne
add
add
arpl
add
add
hlt
add
push
add
stc
mov
push
lret
roll
push
add
out
rcrb
mov
lea
pop
push
push
push
call
loope
sahf
add
into
fdivrp
mov
fldl
fiadds
add
add
pushf
add
je
ficoms
push
les
lds
stc
fimuls
add
lcall
roll
stos
add
xchg
add
mov
xchg
leave
xchg
js
int3
lea
pop
push
push
lea
push
push
push
lea
push
call
scas
add
add
mov
add
iret
ret
add
enter
add
mov
add
call
add
jno
push
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
imul
add
pop
add
pop
testb
cld
add
mov
mov
pop
add
add
add
add
push
add
add
repnz
add
lret
fistpll
loopne
add
mov
add
jno
fwait
add
test
jmp
aad
aad
mov
test
add
out
add
mov
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
push
call
bound
pusha
fisubs
add
add
jnp
jo
aad
mov
jne
add
std
add
xchg
add
test
pop
ljmp
add
add
mov
add
add
std
imul
leave
add
add
les
add
add
cltd
add
enter
int3
lea
pop
add
testw
push
not
pop
pop
push
push
call
xchg
cmpsb
ret
jno
mov
jmp
add
push
notb
add
xlat
jb
add
ret
add
call
mov
add
pop
lds
pop
add
jmp
pop
popa
add
add
movsb
ret
add
out
ja
test
roll
mov
arpl
push
add
push
add
push
fnstsw
add
bound
pop
pop
mov
push
push
push
push
lea
push
push
call
add
add
xchg
add
lahf
pop
repnz
fsubrs
xchg
add
add
add
mov
test
sahf
add
xor
add
clc
fiadds
add
cltd
call
pop
out
pop
cmpsl
les
rcrb
push
flds
add
add
test
mov
mov
lea
pop
push
call
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
xchg
imul
lea
add
flds
andb
fldl
scas
cld
idivb
mov
mov
mov
xchg
add
mov
push
out
add
clc
jno
lret
add
jae
add
add
pop
cltd
add
add
add
add
mov
add
add
movb
pop
xor
pop
push
xor
inc
pop
pop
pop
push
pop
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
add
pop
lea
stos
jecxz
add
xchg
jo
iret
popa
filds
popa
push
mov
nop
pusha
add
add
pop
jp
lret
pop
add
push
int3
add
jnp
fsubrp
add
out
movsl
xlat
enter
mov
jp
mov
add
add
mov
out
pop
mov
mov
mov
jnp
les
push
rol
rol
sub
pop
ret
push
pop
push
mov
push
lea
push
push
push
push
push
push
push
call
mov
lcall
mov
pop
lcall
add
add
xchg
icebp
stc
add
ret
add
mov
jb
stos
mov
call
add
add
mov
stos
add
mov
lea
pop
add
push
dec
sub
add
ror
pop
push
push
push
pop
push
push
push
push
lea
push
lea
push
push
push
call
fildl
mov
add
add
call
add
jmp
xchg
aad
hlt
jno
add
add
add
rcrl
lods
xchg
add
mov
cmpsb
arpl
add
cwtl
rcrb
add
bound
push
push
inc
shl
pop
mov
push
inc
rol
pop
push
push
not
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
lea
ljmp
jb
roll
add
xlat
add
add
pop
add
int
add
add
add
leave
push
repnz
push
fistl
lea
pop
lea
push
shr
shr
pop
sub
push
sub
pop
mov
push
rol
pop
shr
add
push
not
pop
mov
add
push
shr
pop
pushl
push
push
lea
push
lea
push
call
add
out
jb
jnp
imul
add
lea
js
jmp
sahf
add
lret
cltd
aad
shrl
add
add
jns
fcoms
roll
fistpll
add
pop
aad
add
mov
pop
jecxz
lret
cli
push
add
add
add
push
fldenv
cmpsb
mov
xchg
out
add
add
xchg
shll
popa
adc
inc
clc
push
push
lea
push
push
push
lea
push
lea
push
call
add
fbstp
add
idivb
mov
push
rcr
add
stos
cmpsb
add
add
pop
subl
add
cwtl
jecxz
cwtl
add
imul
add
jl
add
aam
bound
mov
add
push
push
lea
push
call
add
clc
add
add
lods
add
add
push
scas
mov
add
lahf
xchg
scas
addr16
test
jno
mov
bound
lock
loope
add
test
add
cld
roll
mov
push
imul
jns
push
add
mov
hlt
lea
pop
xor
push
lea
push
push
lea
push
push
lea
push
push
call
lock
add
pushf
jmp
bound
loopne
neg
pop
add
aad
jnp
add
enter
out
add
in
repnz
bound
add
enter
in
iret
add
add
add
add
add
int3
jge
fadds
scas
add
out
mov
lea
pop
lea
mov
push
dec
shr
shr
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
scas
add
mov
pop
mov
test
popa
mov
add
ret
add
test
mov
add
add
pop
xor
push
inc
inc
add
pop
rol
push
inc
not
pop
nop
push
pop
nop
xor
push
push
push
push
call
outsl
shl
add
add
in
add
push
add
in
add
add
js
add
jl
iret
enter
xchg
pop
push
add
add
xchg
add
cmpsl
add
add
cwtl
cmpsl
add
jecxz
add
enter
lods
fstpt
mov
enter
lret
add
add
pop
nop
push
sub
rol
pop
nop
inc
push
push
lea
push
push
lea
push
call
add
mov
popf
add
add
add
std
add
add
mov
roll
sbb
pop
mov
add
aad
pop
mov
pop
loopne
lds
add
add
add
lea
mov
fldl
add
cli
flds
cmpsl
lds
sti
enter
add
mov
lea
pop
nop
nop
push
push
push
call
js
add
add
jbe
mov
ljmp
add
add
pop
jno
filds
xchg
test
bound
add
jle
jno
int3
mov
add
cltd
add
ret
push
jnp
adc
add
cmc
mov
add
test
add
add
add
mov
add
add
xchg
cld
xchg
push
push
add
xchg
lea
rcr
add
cld
add
add
pop
cmpb
jne
push
lea
push
push
call
mov
out
into
pop
jae
jnp
add
cmpsb
jle
mov
out
jp
add
stos
jge
add
mov
add
out
mov
jnp
add
mov
shlb
add
mov
bound
loopne
add
testl
add
pop
add
cmpsb
jae
lock
aam
jbe
lcall
mov
lea
pop
add
push
sub
pop
nop
push
add
inc
pop
nop
push
rol
rol
pop
cmp
je
nop
push
push
push
push
lea
push
push
push
push
push
call
add
add
insb
in
addr16
mov
add
lret
add
add
add
add
add
les
mov
popf
mov
pusha
loope
add
xchg
js
push
mov
lea
pop
nop
inc
push
lea
push
push
lea
push
push
push
push
call
movb
add
add
pop
push
cmpl
add
add
cmpsb
stc
fiadds
ljmp
add
in
mov
add
add
xchg
xchg
add
add
add
cld
lea
pop
nop
push
lea
dec
shr
inc
pop
nop
push
shl
sub
shr
pop
cmp
jb
xor
push
sub
not
inc
add
pop
jmp
mov
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
arpl
roll
lret
shlb
stos
mov
add
pop
add
movsb
add
mov
jmp
add
in
jnp
add
jbe
add
popa
add
rolb
add
add
jne
popf
in
cmpsb
add
pop
add
movzwl
push
pop
mov
push
sub
lea
pop
add
push
push
push
push
push
push
lea
push
push
call
add
add
add
lret
add
add
push
add
call
push
cli
add
add
gs
add
in
add
add
arpl
cmpsl
add
cli
movsl
cmpsb
jae
mov
popa
and
dec
hlt
xor
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
add
add
push
cmpsb
icebp
mov
add
cld
pop
add
add
pop
out
std
stos
add
fiaddl
add
aad
stc
add
shlb
ljmp
mov
add
add
add
jle
add
aam
add
push
out
pop
stos
add
mov
jb
add
shll
pusha
mov
stos
add
push
mov
lea
pop
xor
shl
push
lea
push
push
call
cltd
test
add
add
cld
add
outsl
add
ficoms
shrl
add
sti
filds
mov
mov
mov
add
mov
add
mov
add
cld
lea
pop
xor
push
lea
xor
pop
shl
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
stos
loop
add
les
mov
add
add
jns
roll
aad
icebp
leave
add
add
add
repnz
add
iret
test
add
movsb
pop
frstor
add
mov
add
nop
add
add
add
lea
pop
xor
shl
push
pop
xor
push
push
push
push
push
push
push
push
call
add
add
add
pop
add
add
mov
mov
roll
add
subl
add
sarl
add
ja
add
addb
add
icebp
pop
int
adcb
js
pop
notb
add
add
movsl
addb
add
addr16
lea
pop
mov
add
push
push
push
push
call
ret
add
loopne
mov
pop
stos
add
ffree
jns
mov
add
fnstsw
add
push
add
aad
add
add
int3
lea
pop
pop
push
shl
pop
pop
push
not
ror
shl
sub
pop
pop
push
inc
not
pop
pop
push
shr
add
ror
pop
leave
ret
push
lea
dec
pop
push
push
push
push
push
push
call
add
cli
mov
pop
add
test
add
mov
add
add
cmpsl
std
add
add
in
mov
fs
xchg
mov
sub
add
mov
ljmp
mov
add
bound
arpl
add
mov
lea
pop
mov
push
push
inc
shr
ror
sub
pop
push
push
push
lea
push
push
push
push
push
call
add
jo
xchg
popa
rcl
add
stos
out
lcall
add
add
lret
sahf
mov
flds
push
mov
add
add
filds
jo
movsl
add
lcall
jne
jo
add
lea
pop
push
push
push
push
lea
push
push
push
call
add
incb
fldl
push
popl
int
roll
push
push
pusha
cmpsl
add
add
add
add
movsb
xchg
add
add
mov
loopne
add
lret
int3
add
mov
lea
pop
push
push
lea
push
push
lea
push
call
mov
jbe
scas
mov
js
lds
jb
add
imul
add
add
add
mov
jecxz
add
aad
pop
lds
cmpl
add
push
mov
mov
push
push
add
push
lock
stc
imul
popf
add
mov
outsl
xchg
add
add
mov
mov
int3
lea
pop
mov
push
push
push
lea
push
push
call
mov
les
lds
add
add
add
stos
mov
je
jo
int3
add
outsl
fadds
add
jge
add
push
add
std
add
test
fs
jne
lahf
pop
jnp
addl
xchg
xchg
mov
int3
lea
pop
mov
push
push
push
push
push
push
push
call
add
out
add
add
popa
lcall
flds
add
lods
add
roll
scas
add
add
add
fldl
add
add
add
pop
mov
test
je
push
push
push
push
push
push
call
jecxz
popf
add
add
jne
add
addb
testb
addl
enter
add
push
add
push
add
ljmp
add
mov
movsb
jecxz
xchg
into
xchg
add
add
out
data16
add
add
std
test
mov
lea
pop
mov
push
push
push
push
call
in
add
add
add
add
shl
mov
fs
pop
lret
call
imul
jmp
mov
add
add
cmc
imul
fmuls
push
hlt
popf
clc
add
fsubrp
add
add
loope
push
xchg
imul
fmull
testb
mov
enter
jl
pop
mov
push
lea
pop
mov
push
ror
ror
sub
pop
mov
push
push
push
push
lea
push
push
call
fildll
add
faddl
lea
add
add
stos
add
in
mov
out
add
add
lret
add
pop
add
std
je
mov
in
gs
cli
sti
add
popa
jle
push
mov
out
nop
pop
add
add
mov
lea
pop
inc
push
lea
push
push
lea
push
lea
push
call
jecxz
out
add
lods
popf
xchg
jb
mov
shlb
add
mov
std
push
add
lcall
add
out
add
lods
hlt
add
leave
rolb
add
scas
push
add
fildl
ja
test
ret
mov
cmc
push
push
movsb
mov
add
add
pop
cmp
je
push
inc
pop
test
je
push
rol
pop
mov
inc
push
push
push
push
push
push
call
test
push
add
push
scas
js
cmc
add
push
cmpsl
loop
jns
pop
mov
jp
mov
hlt
add
clc
jmp
test
loopne
imul
push
int3
movsb
add
add
cli
jl
jle
add
add
add
add
popf
add
add
add
add
sbb
rorb
test
add
add
mov
jb
test
add
mov
out
push
add
mov
push
int3
hlt
insb
mov
incb
mov
add
add
pop
stc
loopne
cld
out
add
add
add
jno
add
imull
mov
jmp
add
jp
push
pusha
push
pop
mov
lea
pop
test
jne
xor
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jno
xchg
mov
pushf
add
add
add
add
ret
jb
add
lock
add
add
mov
add
js
into
cli
mov
add
add
add
test
mov
sub
push
lea
add
add
pop
pop
pop
push
shr
pop
pop
leave
push
sub
rol
pop
ret
mov
push
inc
shl
rol
pop
inc
push
push
push
push
push
push
push
push
call
lret
lods
leave
fwait
add
add
fadds
xchg
add
mulb
add
push
mov
add
add
add
add
jmp
scas
add
jns
std
clc
pusha
je
mov
outsl
insb
addb
add
pusha
cltd
or
add
js
aam
bound
pop
cmp
jne
lea
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
ljmp
insb
mov
addl
add
add
adc
add
pushf
add
enter
fdivrl
jmp
add
mov
lea
pop
mov
test
je
push
shr
sub
dec
not
pop
mov
push
pop
add
push
inc
add
lea
pop
cmp
jne
push
push
push
push
push
call
add
mov
gs
hlt
jle
add
add
add
push
add
pop
out
cwtl
push
enter
movsb
push
add
fcoml
jge
add
add
push
fwait
xchg
xchg
leave
out
add
add
add
ret
xchg
pop
loope
jl
test
add
add
add
add
mov
lods
xchg
cld
lea
pop
mov
push
lea
push
lea
push
push
call
add
lcall
pop
add
add
rolb
arpl
jb
call
add
jp
push
jmp
add
add
loopne
add
add
jnp
mov
jns
lds
add
je
add
stos
ror
add
add
imul
xchg
mov
fdecstp
mov
pop
test
je
push
pop
mov
push
push
call
in
push
add
mov
in
roll
xlat
add
aam
jae
outsl
notl
imul
pop
imul
cmpsb
add
add
add
orb
add
les
roll
rol
add
pop
cmp
je
jmp
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
fiaddl
add
add
add
add
add
popf
gs
flds
add
add
add
add
popf
cmpsl
mov
cltd
repnz
enter
jmp
lret
push
addl
insb
fwait
mov
add
and
rclb
pop
push
push
push
push
call
sar
add
popa
cli
add
push
push
loopne
out
add
xchg
xchg
push
icebp
add
jp
xor
je
sti
arpl
jle
jecxz
fcompl
push
mov
add
mov
add
xlat
hlt
popa
mov
add
add
mov
lea
pop
pop
push
push
push
lea
push
push
call
popa
add
lcall
pop
rolb
mov
xchg
rolb
mov
add
leave
data16
add
push
mov
add
pushf
test
jmp
pop
xlat
add
xchg
pop
add
push
add
decb
mov
mov
lea
pop
pop
leave
push
inc
not
pop
ret
push
push
lea
push
push
call
fs
pushf
add
in
mov
add
xchg
fcomps
mov
add
jns
add
cmc
add
add
sarb
add
add
aam
add
mov
lea
pop
lea
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
cmc
mul
push
jb
add
call
jno
cld
lods
lret
push
into
push
fmull
add
flds
mov
mov
mov
add
in
in
in
fcomp
test
cbtw
pusha
in
add
add
pop
add
pop
pop
push
add
pop
pop
pop
push
dec
pop
pop
push
push
push
push
push
push
call
outsl
in
test
negb
add
add
add
add
add
push
mov
add
add
add
mov
fidivrl
stos
mov
add
add
add
jns
add
jle
mov
lea
pop
leave
push
push
push
push
lea
push
push
push
call
popa
popa
arpl
addl
add
test
add
add
add
add
add
adcb
add
sahf
mov
cli
add
add
add
pop
ret
push
lea
push
lea
push
push
call
fs
popa
xchg
jmp
int3
mov
add
push
out
push
add
add
add
shrl
mov
add
jle
jae
ja
mov
roll
add
mov
pop
scas
xchg
add
iret
add
xlat
mov
add
mov
lea
pop
mov
pop
push
push
call
add
sarb
jbe
jne
add
add
lock
out
mov
stos
lea
pushf
add
negl
rcr
movsl
cmpsb
lock
add
jo
out
add
cmc
mov
int
add
add
jge
lock
cmp
xchg
gs
jl
add
or
pop
push
push
push
push
push
call
stc
add
add
cltd
sti
mov
add
add
add
add
mov
add
repnz
add
xchg
mov
xchg
scas
add
xchg
add
pushf
add
scas
add
std
jge
mov
mov
test
jb
imul
xchg
mov
lea
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
call
add
std
fiaddl
flds
jmp
test
into
jle
test
test
lahf
sahf
add
flds
out
jp
rolb
jb
add
in
add
adc
popa
add
add
jbe
data16
aad
xchg
cmc
stos
add
add
xchg
ret
popa
add
add
xchg
add
add
popl
mov
lea
pop
leave
push
add
dec
not
pop
ret
cli
js
jb
mov
pop
jb
mov
sub
ds
pop
jb
in
pop
jb
lcall
cli
xchg
pop
jb
imul
pop
jb
add
add
out
sbbb
xor
push
mov
push
mov
lods
scas
aaa
push
adc
mov
shll
or
stc
stc
sbb
movsl
cld
sbb
gs
mov
pop
repnz
add
arpl
movsb
add
test
sbb
xor
out
sti
ficomps
push
into
inc
pop
aaa
jne
push
sarb
insb
sub
std
dec
mov
ljmp
jbe
sarb
mov
xor
pop
mov
mov
lods
cmp
mov
out
xchg
arpl
mov
aad
sub
mov
or
or
pop
fistpll
lret
pop
lds
fsubs
dec
jmp
inc
fdivs
mov
push
int3
mov
stos
data16
pop
mov
repnz
dec
pop
cmp
loopne
lock
test
sub
in
imul
pop
mov
insl
aam
shrl
rolb
scas
sub
xchg
aad
adcl
dec
or
and
out
mov
lahf
scas
push
jbe
pop
je
mov
mov
xor
adc
cltd
movsl
insl
inc
lahf
idivl
das
and
sahf
gs
or
ljmp
lahf
pop
dec
pop
daa
xchg
in
mov
sti
fildl
in
dec
pop
aam
pop
clc
cmp
mov
push
pushf
add
cmpsl
ss
dec
lds
dec
jns
and
stos
faddl
lret
andb
fstps
jbe
pop
lcall
lret
pop
mov
sbb
es
daa
pop
add
cli
sub
lret
outsb
and
pop
pushf
mov
push
repz
loopne
xor
mov
push
xor
mov
cmpsl
sub
test
jmp
push
xor
popa
rol
adc
inc
push
jae
mov
daa
mov
pusha
cmp
sub
test
inc
jbe
jp
mov
hlt
jnp
aaa
jl
pop
aas
scas
cmc
sub
sbb
mov
fisttpl
jge
mov
xchg
pop
stos
shlb
adc
fmull
fistps
xor
adc
insl
sub
imul
test
and
push
push
rcrl
pushf
loope
insl
xor
addr16
ficoms
xchg
lods
sbb
mov
xchg
loop
sub
or
xchg
hlt
mov
push
xor
test
test
push
cmc
mov
addb
in
sub
or
mov
cltd
aas
decl
mov
lcall
mov
je
jp
push
jg
mov
xchg
fdivs
xor
add
fdivrl
sub
cmp
push
out
push
sub
push
test
mov
rol
test
int3
leave
xor
enter
mov
xor
lds
jns
sbb
mov
mov
xor
push
jl
xchg
movsl
fsubr
and
xchg
mov
fmull
jecxz
mov
push
std
mov
jmp
push
dec
push
xor
xlat
pop
movq
adc
imulb
fisubrs
xor
dec
in
iret
dec
xchg
repz
ss
jmp
rcrb
sbb
sbb
ret
bound
stos
rcrb
mov
jecxz
in
mov
push
int
jg
mov
pusha
daa
jge
movsb
sub
mov
fs
stc
leave
fcmovbe
jecxz
shlb
enter
push
xchg
inc
stc
xor
or
int3
mov
mov
push
and
es
mov
scas
out
std
xchg
into
xor
add
jl
fildll
jmp
xor
sbb
mov
sub
into
and
adc
icebp
jg
mov
fsub
jb
mov
hlt
dec
test
sub
mov
xchg
and
insb
push
mov
mov
jbe
xor
les
xor
sub
enter
push
xchg
dec
push
inc
push
in
xchg
out
cltd
or
sbb
stc
sbb
inc
popa
shlb
sbbl
cmp
imul
sub
dec
fistpl
add
aas
xchg
lret
jmp
mov
adc
sbb
cmp
push
pop
scas
shrl
sub
enter
fldl
sbb
lds
jp
ds
popf
fcmovnb
push
in
call
cmovs
inc
pop
cmp
imul
stc
xor
adc
std
xlat
jp
cmp
mov
adc
loopne
push
lret
aam
lret
into
jp
dec
stos
push
mov
cltd
and
rcl
mov
fcomip
popa
pop
loop
dec
mov
cmp
jo
lock
inc
cmpsl
push
lea
das
or
pusha
dec
pop
add
mov
or
and
ret
ds
outsl
dec
cmp
push
or
ja
inc
andl
push
xchg
jnp
scas
inc
xor
mov
jle
mov
xchg
out
pop
cmpsl
push
outsl
mov
popf
pop
mov
mull
sbb
add
fisttpll
lret
sub
aas
shrl
test
cmp
jo
mov
dec
lcall
bound
jbe
adc
out
jbe
xchg
mov
or
das
in
dec
mov
dec
das
mov
aad
jno
sub
movsl
out
scas
daa
cmpsl
or
dec
add
fildll
push
shll
loopne
pop
cmp
or
pusha
out
adc
rcrl
and
mov
shl
push
shrb
mov
push
in
pop
dec
push
cld
xor
shlb
cltd
cli
push
mov
mov
jns
sub
jns
xchg
aam
mov
les
push
or
js
cwtd
mov
cmp
fwait
xchg
fnsave
xor
inc
lea
mov
adc
dec
add
test
sub
pop
xchg
push
adc
faddl
push
imul
xor
sub
push
dec
push
jb
rorb
and
jp
mov
mov
cmp
pop
imul
mov
xor
loop
fdiv
jb
icebp
mov
movsl
test
test
insb
and
pop
rcrl
lret
rcrb
inc
gs
rolb
inc
pusha
dec
popf
lret
arpl
xor
mov
ret
mov
dec
adc
mov
mov
cmpb
stos
lods
out
cmp
mov
cs
movsb
push
adc
xchg
fcmovbe
outsl
push
push
repnz
pusha
ret
lock
out
mov
sub
xchg
and
call
cmp
shrl
xor
jl
or
in
arpl
mov
arpl
das
inc
push
test
ja
xor
push
xchg
popf
fwait
sahf
aas
or
mov
jge
push
inc
mov
insb
xor
or
pop
sub
add
add
push
and
inc
sub
pop
mov
cmp
call
adc
and
fmuls
dec
in
mov
cmp
add
icebp
mov
mov
lahf
mov
sub
loope
xchg
in
inc
adc
cli
push
bswap
hlt
ds
xchg
jp
cli
fsub
imul
ret
imul
cmp
xor
sbb
jbe
lret
js
push
jl
xor
ja
ficoms
push
lods
pop
ret
outsl
xor
call
imul
addr16
sub
pop
dec
xchg
inc
xchg
xchg
mov
push
dec
js
sbb
les
xor
mov
cmp
jecxz
fiaddl
aaa
fistpll
out
lcall
cmpsl
lock
notb
mov
mov
mov
fwait
cmc
cmp
xor
dec
nop
mov
mov
dec
inc
inc
pop
sub
add
scas
fwait
stc
lods
ds
js
mov
mov
add
dec
mov
ss
xbegin
sbb
push
jnp
cwtl
sbb
pop
jmp
adc
ficoms
scas
and
popf
jns
adc
scas
loope
sbbb
aad
xchg
dec
dec
push
movb
lds
fwait
in
push
out
lret
jle
cli
lds
int
fwait
icebp
imul
cmpsb
mov
popa
mov
enter
sbb
adc
mov
jp
push
and
inc
movsl
sbb
scas
aad
and
cwtl
xchg
xchg
popa
push
push
push
mov
mov
movsb
daa
mov
je
add
push
pop
sbb
bound
out
out
scas
or
push
outsb
xchg
popa
andl
xor
xor
icebp
test
sub
fdivs
push
ret
pusha
out
in
lea
and
pushf
int3
push
lea
aad
out
inc
cld
movsl
popl
lcall
and
clc
inc
jg
cli
jecxz
cli
push
xor
cmp
add
add
push
ss
pop
cld
mov
mov
xor
or
cli
call
mov
sub
dec
data16
adc
push
aad
aad
add
xchg
enter
xchg
hlt
stos
pop
jp
jle
jb
jae
stos
push
test
push
add
or
mov
stos
hlt
jge
cli
insb
cmp
mov
xor
pop
xchg
xchg
cld
pop
pop
pop
loope
push
lea
sahf
lods
xor
and
cmp
in
push
xor
lret
fs
lods
js
and
aaa
mov
dec
and
inc
dec
push
pop
sbb
dec
xchg
mov
rorb
scas
imul
aam
stc
cmp
sarl
xchg
lahf
data16
fwait
cmp
pop
mov
mov
shrl
icebp
mov
jo
add
dec
out
fbstp
xor
ja
cli
sub
int3
imul
cs
into
cmpsl
dec
inc
in
fldl
mov
lods
mov
or
mov
std
sarb
jmp
lods
and
fstpl
rolb
lret
adc
lahf
stc
fistps
out
cmp
sub
fsubs
jl
xor
std
adcb
sub
jns
add
inc
cltd
jae
xlat
pop
repnz
and
pop
mov
jbe
mov
mov
out
leave
fistl
fs
xor
insb
into
into
out
dec
out
xor
and
mov
xchg
and
inc
adc
push
cmc
out
ss
xchg
out
mov
fsubr
shlb
jge
sbb
out
int
mov
lock
pop
pop
cli
mov
fadds
leave
cmpsb
jns
inc
ret
mov
push
cwtl
push
xchg
mov
shrb
jle
and
push
ret
mov
xor
pop
and
jnp
cmpsl
lea
xchg
and
pop
sub
cmp
gs
lret
lret
cmc
sbb
jne
je
shrb
xor
mov
cmp
inc
pop
test
hlt
mov
rcll
test
cltd
sub
mov
pop
popl
popa
gs
push
xor
adc
fdivrl
and
leave
mov
fisttpl
adc
push
shlb
js
popa
imul
ljmp
in
pop
xchg
sahf
es
inc
or
dec
push
adc
dec
and
in
int3
sub
and
shrb
ret
scas
lcall
mov
outsl
rclb
iret
sub
movsl
mov
fmul
jp
dec
inc
aam
sub
leave
inc
sbb
push
cs
jmp
cmp
ret
push
xor
ja
aaa
jg
jge
sub
and
scas
pusha
cmp
sub
push
lock
subl
add
in
push
mov
lea
inc
and
sti
mov
xor
pop
sub
sarl
dec
xchg
lcall
clc
aad
test
sbb
testb
jge
popf
scas
in
fisubrs
push
inc
lods
pushf
adc
add
mov
cli
sub
mov
repz
sub
adc
jb
jo
xlat
xchg
xchg
add
cltd
add
mov
dec
stos
xchg
dec
and
icebp
stos
inc
loop
mov
cmp
pop
divl
cld
loop
dec
lret
pop
mov
push
out
leave
or
aaa
outsb
stc
sub
pop
ljmp
dec
mov
aaa
nop
cmp
in
dec
dec
je
out
and
mov
rcrb
mov
shr
test
xchg
daa
and
mov
outsb
or
mov
fcmovnu
pop
ret
sti
mov
inc
xor
fildl
push
insl
mov
pop
jae
add
lret
test
inc
add
xor
lods
xor
pop
jno
aaa
insb
mov
cmpsb
loope
orl
popf
fcoms
jl
mov
push
aad
xor
leave
mov
push
out
sbb
mov
icebp
data16
push
add
stos
or
xorl
icebp
cltd
jno
xor
mov
ljmp
add
mov
jl
lret
ja
test
je
xchg
test
es
mov
push
cwtl
in
xor
fldln2
push
das
adcb
leave
mov
mov
in
dec
rorb
or
sbb
mov
add
cli
sahf
clc
xor
mov
cltd
not
aas
mov
adc
cmp
mov
fmuls
ja
xor
arpl
add
mov
jg
push
jae
gs
jne
cmp
dec
ds
cmp
cltd
jbe
dec
mov
pop
ret
gs
pop
cmp
and
dec
test
fcoms
dec
scas
lahf
xor
jge
mov
pop
lcall
xchg
sbb
or
nop
call
dec
fs
jp
arpl
add
decb
jl
pushf
xor
rolb
mov
push
cld
mov
je
cmpsb
out
or
mov
dec
ss
std
sbb
fs
rcll
test
stos
aam
mov
sbb
or
and
xor
lcall
int3
xchg
out
adc
add
xor
sbb
stos
lods
fisubs
es
xor
repnz
sarl
push
push
jbe
mov
jmp
mov
xchg
movsl
mov
scas
pop
mov
lret
adc
xchg
aas
clc
adc
push
fldt
add
hlt
pop
pop
pop
pop
div
adc
fistl
leave
dec
shr
sub
inc
int3
in
or
inc
sbb
xlat
adc
enter
mov
lds
mov
dec
mov
push
roll
into
or
lret
push
inc
mov
jo
pop
psubq
sub
lock
jne
and
mov
std
dec
aaa
push
push
or
repnz
cmp
js
enter
subb
ret
out
ret
movsl
add
add
mov
jno
sti
push
adc
popl
mov
inc
rcrl
xchg
out
stos
je
jae
dec
jecxz
inc
fistpll
jle
adc
cmp
pop
dec
push
cwtl
xchg
cmp
xor
cmp
adc
mov
adc
call
sub
xchg
push
xchg
popa
cmp
add
cmp
sub
add
addr16
insl
mov
jns
fisttpl
jbe
in
xor
call
subb
fsts
int
fs
xor
jno
imul
rorb
and
xchg
hlt
dec
lock
in
mov
cmp
jmp
test
sub
jl
mov
in
psrlq
jne
add
sbb
pop
data16
sbb
lret
les
mov
sahf
ret
inc
xchg
es
lahf
inc
pop
push
pop
and
pusha
movsl
out
call
push
push
int
jnp
aas
arpl
fs
int3
inc
cmc
adc
add
lds
xor
mov
ja
out
adc
xor
cmp
xor
inc
das
scas
rorb
xor
adc
and
sar
sub
bound
xor
push
movsb
push
jb
push
in
sahf
lock
sbb
mov
nop
xor
inc
jmp
dec
adc
lret
test
bnd
dec
push
lcall
adc
sub
sbb
nop
hlt
enter
mov
fcomps
fimull
push
jnp
fdivrs
add
out
in
adc
jl
imul
fldenv
jp
cltd
xchg
xchg
cli
dec
pusha
cmp
clc
loop
or
lret
or
jg
push
shrb
ds
jne
jecxz
rorb
sbb
xchg
push
push
dec
mov
add
jmp
popf
enter
popl
bound
cmp
inc
dec
push
jae
lcall
mov
xor
mov
popf
xchg
loop
inc
adc
lds
dec
and
out
stos
cmp
pop
sbb
fistps
sbb
pop
into
into
cltd
jmp
jbe
cmc
inc
pop
imul
lahf
leave
enter
sub
jecxz
stos
sbb
movb
or
out
pusha
cmp
cwtl
xor
lret
and
leave
mov
sbb
xchg
fcoms
or
jmp
jg
cmpsl
and
push
out
es
test
ja
and
and
mov
add
stc
shll
or
dec
lods
leave
fwait
inc
dec
fucomp
mov
cltd
sub
jno
xor
outsl
add
dec
push
mov
xchg
push
adc
rcrl
adc
xor
mov
sbb
cmp
fs
xlat
aad
xchg
xchg
mov
adc
mov
les
loope
or
imul
inc
andl
fsubs
xorl
pop
pop
dec
pop
push
int
movl
mov
and
fldenv
inc
xor
stos
sub
es
clc
mov
cmpsb
and
jp
cmp
lahf
pop
fldt
into
xchg
xchg
mov
or
out
lea
pusha
aaa
and
dec
aas
push
ljmp
lcall
cmp
mov
gs
imul
lock
scas
hlt
in
cmp
cmp
mov
jl
leave
ret
jg
cmp
adcl
cmc
pop
mov
stos
aaa
xor
shrb
pop
fmul
or
or
addr16
pushf
or
das
jnp
hlt
add
pushw
mov
mov
mov
clc
mov
and
and
mov
lods
pop
pop
mov
jno
in
push
cmp
sahf
stos
imul
clc
es
psllw
js
mov
lcall
dec
lock
test
mov
adc
outsl
jl
loope
sbb
adc
mov
push
popf
or
inc
push
mov
out
bound
icebp
lcall
lcall
adc
icebp
cmc
pushf
out
push
xchg
inc
mov
push
mov
std
push
out
aad
push
xchg
daa
xchg
not
addr16
push
ss
lret
mov
push
xchg
fnstenv
push
push
scas
push
in
rorl
notb
shlb
orl
cli
mov
mov
ljmp
test
out
sbb
test
mov
adc
or
sub
push
dec
loope
ss
dec
cmp
xchg
mov
daa
and
mov
jnp
cmc
jle
inc
lcall
rclb
sbb
fsubrs
adc
and
mov
enter
inc
push
push
mov
lea
pop
iret
outsb
push
addr16
adc
pop
cmpsl
pop
cmpsb
mov
inc
adc
in
mov
xor
sub
xor
pop
mov
xor
outsl
dec
xlat
fdivs
lods
imul
loop
test
add
or
int3
in
cli
push
xchg
jge
out
lahf
ja
push
inc
and
mov
rclb
jne
sahf
ret
scas
xor
jmp
bound
in
mov
xchg
mov
fnsave
idiv
addb
push
inc
out
mov
mov
stos
pop
xlat
push
insb
xor
adc
push
xchg
sub
push
lret
push
mov
aad
jmp
xchg
out
mov
test
pop
mov
sub
inc
jmp
fsincos
mov
aas
add
outsl
xchg
jns
pop
in
cwtl
dec
or
shrl
sti
jbe
xchg
aad
jecxz
jl
test
int3
mov
addl
push
mov
cmpsb
dec
pop
add
sub
lcall
mov
pop
imul
ffreep
and
mov
push
mov
or
lea
push
cli
jg
mov
and
pushw
sub
lds
inc
loopne
pop
ficompl
dec
das
cmovb
push
lods
fmuls
nop
push
and
mov
test
adc
mov
xor
rcr
mov
inc
xor
or
push
daa
rcl
cs
push
push
cmp
sub
and
xchg
icebp
xchg
into
or
mov
lock
pusha
ljmp
repz
lods
fisubl
and
push
dec
push
adc
dec
dec
iret
sub
sub
push
and
cli
icebp
imul
aam
lds
mov
icebp
rclb
popf
xchg
imul
aad
jnp
movsl
xchg
sub
add
mov
aam
fmul
int3
stos
xchg
xchg
xor
sub
cmp
ljmp
fists
pop
clc
mov
xor
jae
xchg
or
test
mov
loope
mov
add
mov
mov
ss
inc
pop
mov
inc
sarb
shr
roll
incl
inc
and
outsb
add
pushf
or
es
sub
or
mov
call
rclb
mov
sarl
jno
pop
mov
jo
mov
fidivrl
add
repz
sarb
push
mov
xchg
adc
jge,pn
pop
or
in
mov
mov
dec
cmp
test
lods
fwait
cltd
add
jnp
outsb
gs
cwtl
shl
roll
mov
adc
cmp
enter
les
cwtl
bound
pop
mov
popa
sub
xchg
leave
sub
bound
enter
dec
fnstcw
mov
xor
ljmp
xorb
push
pop
xchg
aad
sbb
xchg
or
fs
test
mov
pop
pop
sbb
mov
xchg
push
mov
neg
int3
les
std
int3
ret
cld
outsl
pop
loop
pusha
sub
pop
adc
xor
fldenv
repz
das
xchg
mov
sub
xlat
add
fidivrl
xchg
mov
add
mov
sbb
ss
cmpxchg
out
or
lds
fsubrl
mov
adc
fcomip
scas
rcrb
mov
add
js
xor
add
cld
jbe
movsl
sahf
mov
stos
out
das
adc
std
pushf
cmc
mov
push
cmp
ljmp
push
stos
jp
adc
fisubl
nop
daa
jge
in
ja
repnz
push
outsb
jbe
movb
cli
ss
xor
jecxz
test
testl
sbb
push
dec
std
pop
rcrb
push
outsb
adc
sarl
enter
shll
or
fcomps
popa
add
cmp
cli
imul
cmp
into
loop
dec
sahf
ljmp
bound
cld
js
mov
aam
lret
lret
cmpsl
push
lcall
bound
pop
lcall
pop
rcrb
loop
enter
rorl
scas
push
lret
es
push
xchg
scas
popa
sbb
adc
out
mov
popa
in
loope
stc
pop
xchg
inc
insb
pop
mov
nop
and
cwtl
mov
or
test
and
pop
inc
notb
subb
inc
pop
sub
and
les
cli
cmc
dec
icebp
aam
jl
aam
push
lahf
js
or
rcrb
fldl2e
int3
adc
loopne
jmp
lcall
lea
sbb
sahf
push
repz
mov
sti
roll
or
lret
add
aas
add
lea
push
ret
xchg
push
iret
mov
adc
adc
pop
jl
add
pop
stos
popf
sbb
push
sbb
push
pop
inc
adc
sub
xchg
sub
mov
roll
test
cmp
sahf
jmp
clc
mov
aaa
sbb
inc
mov
test
mov
loopne
push
shlb
adc
insl
stos
mov
mov
sub
daa
rcll
leave
mov
push
aad
ja
ljmp
ja
outsb
jno
test
push
or
push
addr16
inc
insb
add
ljmp
and
push
aad
inc
sbb
push
out
sbb
enter
add
outsl
dec
jno
adc
cmpsl
add
rcrb
sub
mov
loopne
sbb
stos
sub
rorl
in
ja
xchg
sbb
push
outsl
fwait
es
mov
lret
dec
sti
cld
dec
insl
lret
lahf
add
pushf
push
shrl
sub
jl
notl
push
add
xor
dec
push
push
lock
mov
rcl
mov
fiaddl
adc
pop
dec
xor
xchg
sbb
add
dec
lock
mov
dec
lods
ja,pn
arpl
jl
inc
lret
aam
loope
and
mov
rorb
testb
xchg
pushf
pusha
push
sbb
and
xchg
rclb
data16
test
fcoms
dec
jle
inc
lock
mov
sbb
cmc
leave
push
punpckhbw
inc
mov
dec
cmpb
xor
dec
mov
lds
imul
fsubr
nop
xchg
filds
push
outsl
daa
sbb
or
xchg
mov
test
jae
loopne
rclb
mov
jl
nop
cmp
fsts
cmp
mov
or
arpl
lea
bound
and
sub
andl
push
push
arpl
add
fwait
dec
fwait
mov
jae
mov
lods
insl
sub
lds
outsb
mov
cmp
xor
inc
push
pop
fstps
je
jmp
addr16
pop
mov
pop
in
ljmp
cmpl
imul
jle
xchg
jge
push
dec
xor
or
sbb
sbb
test
mov
or
xchg
test
gs
and
test
jmp
sub
sub
or
loope
stos
dec
aam
arpl
cmc
and
sbb
cld
pop
mov
pop
jns
mov
cli
mov
dec
lret
outsl
push
and
ss
add
jmp
dec
lret
movsl
pop
out
popf
call
cmc
lds
scas
lret
or
cs
ljmp
dec
or
jge
or
test
scas
lcall
mov
xchg
mov
mov
fadds
clc
inc
stos
and
sub
push
jno
sub
push
std
jge
cmpsl
lret
enter
xor
or
cwtl
outsb
inc
in
and
into
adc
pushf
sub
pop
xchg
inc
and
dec
pop
loopne
sbb
popa
aaa
push
lahf
pop
push
clc
mov
push
cli
loopne
push
leave
jp
mov
ret
inc
out
ret
dec
xchg
sub
sub
dec
cmp
fnsave
mov
xchg
or
stc
sbb
adc
adcl
lods
dec
cmp
jge
sub
pusha
pop
stc
inc
pushf
and
and
cmp
cmp
mov
sbb
jg
xchg
dec
jg
mov
cmp
push
inc
cmp
js
or
add
gs
pusha
mov
sbb
jbe
sbb
call
nop
test
repz
mov
call
lahf
call
sub
mov
mov
pop
lock
inc
cmp
jl
pop
mov
push
mov
lock
lret
jne
cli
popa
and
je
ret
inc
fiadds
xchg
inc
lcall
add
sbb
xor
inc
rol
or
hlt
mov
push
lea
adc
xlat
ret
dec
movsl
jae
sbb
jle
mov
lcall
scas
xchg
pushf
and
jno
cmc
mov
insb
lcall
mov
sbb
rorl
fwait
cmc
add
cld
lea
lahf
loop
inc
filds
enter
sub
cmpb
inc
imul
mov
popf
or
pushf
add
je
mov
lahf
mov
out
mov
jl
jne
inc
mov
and
iret
cld
xchg
fistps
in
clc
bound
stc
pusha
push
add
lahf
mov
sub
jg
scas
adc
pushf
adc
dec
mov
jo
sub
mov
scas
shll
mov
dec
push
das
push
cmp
and
cmp
dec
std
insl
jl
getsec
iret
arpl
cmp
test
mov
in
add
loope
inc
mov
out
push
pop
lret
push
adc
out
notl
push
ja
adc
test
stc
lahf
xor
repnz
ds
mov
xor
push
mov
mov
dec
adc
into
pop
test
testb
out
iret
test
sbb
or
repz
fidivs
inc
dec
mov
loope
test
sub
shrb
das
pop
push
dec
mov
stos
jno
in
mov
sbb
mov
imul
adc
push
in
jle
repnz
nop
fsubrs
and
sbb
adc
ljmp
lds
push
hlt
and
mov
cli
pop
ds
mov
lods
leave
fwait
arpl
xor
jno
out
mov
mov
repz
and
cmpsb
add
int
ljmp
sbb
push
jmp
pusha
inc
gs
jo
outsb
pop
enter
or
xchg
sbb
pop
jmp
sti
inc
mov
es
js
testl
int
mov
push
mov
xor
leave
add
insl
jno
fnstenv
fidivs
add
push
mov
jecxz
mov
mov
pushf
and
fcmovbe
mov
jl,pn
ja
jo
xchg
pop
and
hlt
mov
add
inc
stc
or
pop
es
mov
inc
push
das
inc
pop
pop
mov
fimull
lahf
push
mov
rclb
mov
pop
or
push
dec
or
je
cmp
sti
cmc
lods
out
add
sub
test
jmp
or
push
imul
loopne
cli
inc
xchg
sub
mov
cmpsl
push
adc
push
inc
ss
lock
std
mov
and
push
adc
xchg
imul
inc
sbb
and
mov
lds
popa
int
cmp
cmp
cs
test
inc
push
ds
ja
pop
popa
fiaddl
stc
in
lods
icebp
in
dec
psubusb
adc
add
add
stos
cmp
scas
outsl
cmp
sub
push
leave
mov
addr16
mov
cli
aaa
std
insb
dec
inc
fisttpl
shrl
fnsave
sbb
scas
emms
arpl
mov
addr16
jo
jge
or
push
xor
xchg
pop
insl
and
xor
idivl
es
inc
inc
mov
dec
pop
in
sub
inc
xchg
cmc
dec
sub
xlat
das
xor
mov
jne
in
imull
inc
jae
or
fiaddl
jae
jne
call
into
addr16
mov
mov
xor
das
add
outsl
jmp
outsl
mov
mov
scas
lcall
aam
nop
push
out
inc
inc
add
lret
cli
and
pop
pop
xchg
lret
imul
cmpsb
je
or
cmp
movsb
mov
lahf
sub
push
imul
push
jmp
mov
popf
fisubs
inc
jg
sbb
int3
mov
fwait
out
push
jge
sbb
and
push
lock
shll
mov
pop
pop
ret
cmp
mov
cli
mov
fwait
ret
mov
inc
add
lret
or
addr16
mov
xor
add
mov
adc
test
out
enter
es
jl
push
push
int3
jbe
inc
lahf
lret
notb
sbb
stos
lods
into
adc
call
xchg
jmp
jl
ljmp
xor
mov
cmp
lea
sbb
movsb
xchg
js,pt
ss
sbb
int3
adc
jg,pn
clc
mov
inc
enter
or
ljmp
rcrb
arpl
mov
jge
aas
ret
pop
lods
adcl
leave
lcall
ror
jns
jne
insl
sub
and
movsl
fiadds
insl
jl
pop
push
bound
dec
cmp
add
dec
aaa
sub
fldenv
mov
inc
cmp
cmpsl
xchg
clc
lret
fistpl
lea
jb
fcoml
dec
push
popa
cmp
enter
xchg
adc
mov
mov
insb
popf
and
stos
ja
push
mov
sbb
adc
cmpsl
jg
pop
push
xchg
xchg
repnz
fwait
es
ffree
lds
stos
loope
imul
jle
cli
ffreep
push
xor
insl
sub
imul
lds
adc
jg
push
adc
shlb
fwait
mov
mov
add
push
into
dec
mov
mov
lds
pop
push
addr16
outsb
inc
psubusw
mov
adc
testb
sbb
pop
ss
mov
jns
arpl
dec
mov
jle
mov
es
sbb
sub
pop
push
and
push
jge
jp
pop
and
das
call
clc
std
in
xor
outsb
in
loopne
dec
popa
cmp
mov
sub
sarl
pop
adc
or
fwait
shll
sub
adc
jns
and
dec
sub
sub
push
insb
movsb
out
pop
xlat
cltd
add
xlat
xchg
addl
sbb
bound
jb
stos
mov
je
dec
sbb
push
inc
mov
or
mov
push
scas
sbb
inc
sbb
ja
inc
inc
inc
inc
sub
lahf
arpl
pop
xor
loop
xor
adc
pop
and
or
divb
clc
cmp
shrl
xchg
shll
inc
aaa
pop
imul
mov
push
dec
sbb
nop
stc
test
xchg
push
aam
xor
out
dec
dec
clc
enter
lods
cmpsl
add
jl
scas
std
sub
adc
flds
in
call
stos
jmp
mov
leave
data16
lods
or
iret
mov
or
cmpsb
xchg
sub
mov
in
cli
sbb
pop
dec
call
scas
mov
stos
jne
cmp
jb
jb
pop
and
mov
out
stos
mov
add
dec
sbb
and
xchg
or
cwtl
loop
sbb
sbb
push
cmp
adc
jnp
arpl
aas
js
jbe
aam
add
push
ficompl
pusha
mov
dec
ret
dec
pop
cmp
pop
inc
mov
lods
call
push
jp
and
inc
test
dec
cmp
cmp
pusha
pop
adc
xor
mov
mov
idivl
shlb
xchg
cmc
push
jge
push
ficoms
add
ss
inc
push
push
sub
stos
jl
dec
mov
mov
or
mov
in
int
mov
jmp
add
rorb
inc
mov
sbb
lods
sahf
sbb
sbb
jns
push
addr16
sub
xchg
jne,pt
fs
addr16
and
daa
ljmp
push
jecxz
ret
je
cmp
fwait
into
mov
pushf
add
xchg
jg
mov
aas
loop
mov
jmp
inc
inc
sub
stos
addr16
mov
add
sub
jle
popl
add
andb
arpl
sahf
in
inc
xchg
jmp
cmp
push
mov
mov
push
push
push
lea
mov
scas
jbe
pop
push
sbb
std
xchg
push
and
adc
cmp
pop
sbb
mov
psraw
call
bound
insl
pop
rcl
orl
adc
jbe
jnp
outsl
push
mov
xor
dec
mov
loopne
add
xchg
and
in
fisttps
or
ret
call
fs
cmp
subb
or
cmp
adc
mov
clc
inc
pop
push
mov
mov
cli
mov
rorb
aas
jl
xchg
in
and
xchg
mov
add
pop
fs
cmp
test
lods
xor
xchg
adc
xor
xlat
ret
aad
cmp
imul
cmpsb
mov
imull
test
adc
or
inc
mov
and
dec
stos
dec
add
jmp
mov
push
pop
pop
jbe
scas
xchg
jb
cwtl
mov
imul
sti
scas
es
jnp
dec
imul
mov
sub
sub
popf
adc
fwait
lea
aaa
jmp
cwtl
pop
cs
xchg
push
xor
mov
aam
rcr
and
mov
adc
insb
cs
aam
add
lock
repnz
xchg
dec
pusha
and
add
movsb
sub
stc
pop
sub
pusha
add
aas
out
add
mov
adc
fprem
jecxz
mov
cmp
inc
sarb
lods
and
in
pop
inc
mov
sub
add
lds
sbb
or
jb
and
inc
or
mov
xchg
pop
lcall
push
lock
xchg
push
add
cmp
leave
aas
faddp
es
mov
push
cld
clc
fwait
std
stos
icebp
rol
das
andb
xor
mov
xor
addr16
in
scas
dec
xchg
adc
push
mov
ds
call
repz
sub
outsl
adc
pop
adc
dec
aas
xchg
daa
mov
jecxz
popa
mov
jae
adc
and
xchg
cs
stc
xor
mov
fldt
jecxz
or
stos
dec
lods
addl
adc
std
ss
filds
cmp
mov
lds
mulb
orl
xlat
dec
adc
daa
mov
adc
push
cmp
mov
lret
ljmp
xchg
pusha
mov
adc
andl
rclb
in
mov
sahf
je
int3
iret
imul
pop
mov
jbe
and
xor
loope
insb
repz
jmp
dec
clc
sahf
xchg
jl
adc
dec
or
aaa
inc
pop
mov
cs
test
inc
mov
std
adc
andb
pop
inc
adc
mov
or
mov
mov
movsl
mov
dec
enter
call
pop
arpl
mov
pop
jg
add
fdivl
movsb
lods
inc
mov
push
sbb
outsb
repnz
sbb
hlt
test
cmp
mov
adc
dec
ffree
pop
mov
inc
adc
fmul
mov
push
sti
lret
mov
fidivs
popl
sar
cli
xchg
mov
cmpsl
shlw
mov
pop
add
pop
call
test
mov
in
rcrl
out
xchg
pop
or
cmp
pop
lods
add
test
sub
cmp
je
sbb
outsb
push
add
aas
cmp
mov
push
cli
cmp
and
inc
jns
stos
fwait
lods
add
sub
mov
sbb
sub
or
les
icebp
fcomip
bound
std
lock
shll
adc
stos
scas
outsb
push
jb
mov
aas
lret
xorb
scas
movsl
jne
call
xchg
aas
mov
push
and
jo
ja
inc
fwait
xchg
adc
movsl
je
in
jbe
sbb
pop
xor
testl
cmpsb
sbb
fdivrl
incb
inc
sub
push
pushf
mov
pop
lret
mov
dec
les
fnsave
cltd
roll
mov
pop
repz
test
dec
cmpb
add
sub
cmp
cmpsb
jbe
pop
mov
or
adc
or
fdiv
lock
or
adc
jno
inc
mov
jge
add
fdivrp
sbb
popa
jno
adc
adc
nop
lcall
mov
xchg
fisubrs
jmp
mov
insl
outsb
mov
je
stos
call
jmp
rcr
addl
cmpsl
insl
push
dec
sub
or
pop
sbb
xchg
push
and
rcll
fisttpll
pusha
mov
cmpb
pop
fs
fisubs
hlt
xlat
xchg
psubb
cltd
daa
idiv
mov
movsb
aad
xchg
dec
pop
vcvtsd2si
sbb
mov
scas
addb
xlat
xlat
xchg
ret
ds
out
push
mov
jo
dec
mov
movsb
pop
rorb
pop
adc
or
adc
mov
jo
mov
adc
aaa
stos
movsb
je
dec
cmp
or
sub
push
adc
outsb
mov
stos
loope
push
in
xchg
in
sahf
cmc
loop
pop
rcll
dec
or
call
addb
pop
adc
loop
cmp
cli
in
scas
mov
jmp
rcll
push
push
cmp
lds
cs
inc
cmp
jecxz
adc
sub
push
js
add
cli
aaa
xor
ljmp
dec
das
cvtpi2ps
cmp
mov
cmp
sbb
and
cmpsb
push
inc
xchg
and
mov
into
repnz
rcpps
cwtl
fcmovbe
jns
cli
pop
sbb
jp
loopne
xchg
cmpl
cmpsb
xchg
cltd
adc
cmpsb
and
pop
jns
dec
lock
sbb
xchg
jge
pop
inc
in
jno
popf
push
pop
aad
jnp
mov
jne
pop
inc
xor
daa
out
out
or
push
inc
inc
lods
cmp
cs
sbbl
mov
insl
test
add
test
jle
xor
into
std
outsl
mov
cmp
cli
fnstsw
rorl
fsubs
mov
jae
fmulp
mov
mov
mov
orl
mov
das
cs
or
lods
pop
add
ja
push
adc
rcrb
pop
xchg
add
push
mov
mov
jns
out
aas
jns
pop
mov
ljmp
movsb
das
ljmp
jns
mov
sbb
sbb
pop
mov
clc
cmc
sbb
mov
mov
adc
cltd
mov
scas
fcoml
mov
addr16
inc
fidivrs
and
inc
cmp
popf
mov
outsl
addr16
sar
shrb
jne
repnz
outsl
cli
ljmp
inc
sar
outsb
outsb
or
mov
jnp
push
rep
cli
test
pop
enter
jnp
lods
lds
adc
lret
pop
inc
scas
in
sbb
jno
into
daa
les
xchg
xchg
fnsave
sub
dec
shrb
adc
int
ret
fwait
test
inc
lcall
sub
cltd
xchg
notb
testb
in
adc
fs
lret
imul
add
sub
adc
loop,pn
mov
insl
mov
or
xor
scas
rol
cli
mov
push
or
stc
push
fs
das
dec
cmp
aaa
aas
es
sub
dec
push
cmp
enter
imul
test
jnp
xor
lods
cli
jl
aad
mov
into
in
sub
js
sbb
pop
and
lods
fcoml
jecxz
scas
push
sbb
cs
or
repz
lahf
fwait
push
mov
jb
xor
inc
dec
push
das
push
arpl
scas
shll
test
mov
test
push
jmp
jecxz
sub
pop
fidivrs
into
and
fimuls
mov
and
lds
mov
jmp
pop
cmp
jno
pop
mov
arpl
mov
mov
ljmp
sub
cli
inc
inc
xor
push
adc
adc
push
stos
fcoms
jnp
inc
ss
rclb
sub
or
nop
pop
je
mov
push
out
xchg
sahf
xorl
jae
in
adc
cmp
jbe
jno
dec
xor
add
cmp
add
nopl
xor
fisttpll
repz
lcall
pushf
daa
shll
aas
sub
or
mov
lea
and
push
dec
daa
bswap
std
sbb
lahf
insb
jl
cmp
jae
in
push
ja
arpl
or
add
fwait
dec
sahf
cld
in
rorb
loope
rolb
jns
stc
xchg
shlb
je
addr16
cmpsb
and
xchg
push
pop
dec
inc
inc
mov
and
fsubrl
inc
dec
aam
mov
jo
popf
jo
inc
sar
ss
stos
lret
mov
in
and
insb
jae
adc
repz
int
pop
pop
jecxz
sub
cmp
rcrl
subb
sbb
dec
sub
dec
stos
inc
lds
ds
out
cmc
jecxz
xlat
mov
insl
or
call
mov
lret
bound
or
pusha
test
fcompl
je
repz
idiv
mov
mov
rcr
dec
mov
pop
jae
stc
pop
hlt
xor
pop
inc
push
insb
cli
sbb
sbb
inc
push
insb
addr16
iret
test
xchg
xor
sbb
push
repz
test
aad
sbb
repz
out
orl
xor
movsb
adc
aaa
cli
movsl
or
daa
inc
or
scas
pop
sti
or
dec
pop
push
outsl
xchg
ss
dec
jp
sub
pop
jle
mov
ret
sub
mov
cwtl
outsb
clc
sbb
sub
fdivr
sub
add
ljmp
xchg
push
pop
xor
nop
in
mov
test
filds
jmp
mov
mov
loopne
fstps
mov
iret
loop
mov
out
pop
rcr
pop
cmp
xchg
mov
pop
iret
test
lcall
push
shll
xor
mov
or
ja
dec
or
leave
pop
cmp
mov
mov
xor
cltd
jge
mov
inc
xchg
push
xchg
loopne
xchg
cmp
mov
pop
in
sbb
or
std
cmp
mov
jb
push
or
andl
ficoms
mov
pop
adc
sahf
ss
push
add
pop
stc
dec
sti
rorb
mov
ss
push
cmp
shl
fs
std
in
imul
inc
jmp
inc
push
jecxz
xchg
push
xchg
mov
jns
int3
sbb
push
adc
adc
jl
mov
add
lret
mov
leave
pop
test
lret
je
insb
or
add
dec
cld
ljmp
std
fsubp
dec
inc
jmp
rorl
pop
cli
int3
js
add
sub
sbb
pop
cld
lods
jecxz
jp
stc
mov
rorl
leave
int
lods
xor
ja
pop
js
nop
fldt
jns
nop
inc
push
pusha
imul
stc
aaa
xor
lods
or
cmp
insb
inc
dec
jp
sbb
nop
pusha
les
je
adc
lods
mov
loop
sub
jbe
cmp
bswap
fadd
sub
xchg
xor
sahf
dec
inc
mov
jge
ss
sbb
inc
mov
je
xor
jge
or
cwtl
outsl
shll
in
jg
cmp
lret
outsl
inc
inc
cwtl
aad
sahf
jne
popw
sahf
or
cli
pop
inc
push
outsb
dec
stc
popa
mov
inc
add
push
mov
mov
int
xchg
ja
notb
sbb
dec
xchg
and
cmp
cmpsl
cmp
hlt
movb
sub
mul
jg
fimull
dec
pop
pop
test
mov
das
divb
insl
mov
in
js
fisubrl
cmc
mov
jne
sahf
push
jp
mov
and
scas
sbb
lret
pop
lahf
jmp
sbb
cmp
daa
insb
pop
rol
mov
jp
movsb
sbb
fldcw
insl
sbb
or
mov
hlt
jnp
adc
subb
orl
aas
mov
sti
aad
es
cmp
pop
in
lret
mov
pop
mov
xchg
inc
jns
add
xchg
movsl
xor
sub
in
negb
xchg
insb
stc
xchg
orb
in
pop
ret
lahf
or
fidivl
xor
xchg
xadd
sti
ljmp
mov
lahf
xor
je
and
inc
jp
add
ss
dec
nop
pop
dec
ret
sbb
loopne
add
fdivrs
lock
leave
hlt
in
jmp
inc
pushf
or
jg
aas
lods
sbb
fdivs
adc
clc
in
lret
inc
es
or
jp
add
mov
jnp
push
dec
add
cwtl
lock
push
iret
pop
sub
pop
out
add
sbb
jg
cmp
cmp
jecxz
imul
mov
data16
insl
xchg
and
andb
or
cmc
shrb
out
xchg
sbb
adc
out
int
lcall
add
inc
add
push
cmpsl
push
gs
cwtl
aas
js
add
outsb
xchg
in
daa
push
fildll
popa
jno
outsl
adc
hlt
testl
jo
je
je
cltd
pop
jb
filds
es
cmpsl
sti
insb
std
jge
into
pop
mov
sti
lcall
jbe
xchg
movsl
adc
mov
ja
sub
cmpsl
es
daa
rdmsr
cmp
xorb
pop
pushf
je
lock
in
xor
in
cmp
jne
xor
jmp
cli
push
fmull
pop
jae
in
mov
sti
imul
sub
cs
jmp
movsb
stc
mov
sub
mov
cmp
push
xchg
enter
jae
jb
pop
jp
and
insl
mov
sahf
inc
push
add
add
inc
lea
xor
in
lods
xchg
lock
add
xor
inc
lock
push
jl
in
inc
adc
mov
test
pop
dec
jae
jb
xor
cmp
cs
and
xchg
scas
inc
mov
mov
insl
xor
or
xchg
sub
imul
adc
push
add
mov
xchg
or
mov
mov
rcll
xor
addr16
lock
adc
add
xchg
inc
mov
idiv
adc
mov
jo
test
push
fnstcw
enter
add
cmpsb
pushf
push
in
xlat
lcall
outsb
jne
push
icebp
xor
fists
repz
or
fstpl
push
or
jbe
jne
pop
ss
out
jmp
aad
push
loope
cmp
outsl
mov
mov
jge
xorl
lea
aad
fnsave
cmp
lods
das
adc
ss
xor
mov
xchg
into
std
data16
or
add
js
jns
add
sarb
inc
popf
pushl
cltd
inc
and
stc
adc
testl
fisubl
loop
jb
stos
xor
cld
daa
xchg
insl
pop
dec
adc
pop
xchg
in
shll
es
sub
mov
outsb
repnz
mov
std
sbb
in
lcall
adc
fstl
rol
dec
loop
mov
ljmp
push
xor
dec
mov
sbb
pop
sub
sub
push
xchg
mov
mov
enter
lcall
cli
cmp
mov
cld
mov
stc
orb
es
call
or
push
test
mov
mov
add
mov
mov
insl
js
movb
cmpb
xchg
out
inc
in
fadds
push
scas
sar
jge
xchg
sbb
test
cmpsl
and
jl
dec
iret
jnp
mov
jle
pop
subb
fdivl
cwtl
js
leave
mov
fildll
loope
imul
movsl
je
jmp
mov
cltd
mov
sti
mov
and
nop
jle
xchg
aad
adc
ret
das
sub
iret
mov
cwtl
jge
inc
rorl
in
shll
rclb
sbb
loopne
sbb
addb
shl
es
repz
rolb
cmp
xor
test
ffreep
fcoms
sub
outsb
sbb
dec
pop
mov
outsb
es
imul
inc
sbb
mov
insl
push
bound
mov
pop
xor
enter
int
push
fstpl
xchg
repz
pop
jns
jmp
sbb
jns
push
imul
movswl
push
in
push
xor
shlb
sub
pop
cs
pop
pop
mov
pop
mov
cmc
inc
inc
test
popa
insl
jne
outsl
insb
out
mov
sub
inc
jp
mov
mov
and
imul
out
push
fstpl
xchg
notl
sbb
sbb
pop
cmp
pop
push
cltd
and
xchg
imul
pop
test
fisubs
jb
adcl
sub
adc
mov
jae
adc
mov
cwtl
rcll
mov
xchg
mov
mov
push
loope
dec
push
les
fmul
jmp
xchg
pusha
pop
mov
dec
cmp
sbb
fnstcw
iret
sahf
pop
dec
in
jno
pushf
inc
cmp
push
mov
test
pushf
stc
andb
lret
sbb
aaa
push
add
cmp
dec
out
xor
scas
cmpsb
popa
xor
or
mov
xor
ret
ja
cld
add
lcall
mov
lock
insl
add
stc
and
in
test
test
mov
pop
mov
add
pop
sahf
test
sbb
xchg
ljmp
adc
movsl
movsb
cltd
mov
out
dec
call
push
repz
dec
in
leave
pop
push
push
das
push
sub
fcomp
or
fdivp
insl
pusha
in
out
imul
push
jl
push
jo
push
xchg
iret
popf
cmpsb
and
mov
jl
adc
cwtl
mov
addr16
pop
pavgw
dec
xchg
test
mov
add
out
aaa
or
sahf
push
jg
xchg
inc
sub
shll
push
jmp
xchg
jp
stos
inc
push
push
mov
lods
mov
mov
aaa
jecxz
pushw
in
fs
test
loope
mov
scas
je
sbb
and
lcall
popf
out
cmp
add
cmp
push
adc
imul
xchg
xorb
outsl
jle
mov
dec
inc
mov
mov
fdivr
mov
and
mov
xor
mov
jg
loopne
pop
pop
enter
lcall
jl
xor
pop
pop
outsl
dec
or
adc
call
repnz
push
jns
push
ss
cmp
loop
cmc
in
sub
mov
push
outsb
push
push
mov
clc
lret
pusha
gs
outsb
push
push
shll
add
sbb
pop
lret
mov
xchg
sbb
iret
ljmp
ss
sbb
cmp
cmp
dec
roll
ds
add
mov
push
outsb
pusha
dec
mov
leave
cmp
mov
pop
add
mov
lahf
mov
or
jbe
shl
sbb
xor
sub
es
xorl
jle
pop
jne
je
mov
jmp
jl
adc
mov
dec
cs
pop
mov
sub
push
jl
cmp
add
mov
pop
adc
or
es
mov
add
inc
mov
inc
sbb
sbbl
dec
fistpll
dec
pusha
or
daa
pop
jne,pn
adc
dec
add
setle
push
outsl
mov
mov
jno
popf
das
xchg
movsl
leave
mov
fs
add
cmc
mov
andb
pop
pop
dec
or
inc
and
mov
or
push
pop
and
out
adc
in
sbb
aas
xchg
jae
sub
fdivl
xchg
jae
imull
push
mov
imul
fucomi
push
nop
jo
ljmp
mov
ja
and
sahf
and
pop
int
loop
andb
and
test
mov
cmp
mov
repnz
outsb
cmp
cmp
stc
and
outsl
scas
stc
lock
cmp
mov
insb
dec
push
stos
leave
inc
mov
add
push
pop
xchg
dec
scas
dec
jns
ljmp
lds
ficompl
int
push
push
stc
mov
mov
pop
sub
sub
pop
int3
xor
mov
js
loop
nop
loopne
push
or
popf
ret
mov
icebp
sub
lcall
cmpb
insl
cmp
sbb
pop
mov
aaa
stc
fs
lods
in
mov
mov
aaa
cmp
jb
xlat
push
cmpsl
cmp
cmp
xchg
test
pop
cmpsl
out
ficompl
sti
scas
call
sub
jle
cmpsb
xor
adc
pop
jle
inc
inc
mov
add
cmp
stc
inc
jae
xor
stos
mov
pop
sub
loop
lret
or
pop
push
nop
sbb
cmpsl
inc
fcomip
lcall
jne
imul
aaa
faddl
int
aaa
xchg
dec
push
dec
mov
imul
xor
adc
lea
sub
test
or
movsl
xor
in
scas
adc
pop
push
dec
mov
mov
add
jl
lea
mov
movsb
jmp
lods
mov
mov
insb
inc
int
adc
out
cmpl
jge
jp
cmp
in
es
sub
mov
pop
mov
mov
mov
js
jg
lret
ljmp
cmp
add
test
pusha
leave
xchg
ror
xchg
sti
mov
cmp
xchg
das
insb
shl
loop
and
mov
pop
pusha
xor
jnp
pop
mov
mov
pop
adc
mov
push
xchg
fldenv
lock
pop
and
push
mov
sti
inc
adc
repz
push
xor
jo
mov
and
insl
insl
int3
mov
mov
fs
pop
shll
gs
jg
adc
clc
cmp
cltd
popa
pop
nop
ss
jb
inc
ss
cmp
xlat
loope
fwait
mov
imul
loope
es
xor
push
jb
push
das
mov
jne
dec
adc
sbb
mov
add
out
mov
test
inc
aam
ljmp
or
mov
ficoml
nop
push
push
out
movb
sbb
and
aad
xor
inc
mov
mov
cmp
call
int
movb
xor
les
mov
addb
jle
mov
bound
sbb
sar
ljmp
cmp
pop
inc
mov
imul
sar
add
mov
adc
inc
out
and
add
insb
pop
rcrb
insb
and
cmpsb
sub
inc
mov
xchg
mov
daa
mov
fists
or
xchg
sub
xchg
test
enter
and
inc
xor
sbb
insl
sbb
pop
and
lods
in
clc
loop
mov
cmp
fnstenv
mov
jp
movsl
xor
decl
mov
or
imul
push
mov
mov
mov
pop
mov
int3
mov
mov
lahf
xor
movsb
pop
fwait
sahf
ljmp
les
pop
icebp
iret
inc
call
ja
fstps
gs
bound
sub
xchg
or
int
mov
iret
jp
push
cli
dec
xchg
sahf
fs
les
mov
and
mov
cmc
xchg
add
icebp
xchg
je
fildll
outsb
mov
cli
test
movsb
or
cld
popf
mov
jl
popf
xor
add
mov
inc
or
adc
fildl
jecxz
push
out
out
or
mov
and
mov
int
sbbb
pop
add
fidivrs
cmc
jmp
jno
mov
mov
icebp
fcoms
add
std
cmp
jg
and
mov
mov
push
add
inc
jbe
add
add
jmp
popf
ljmp
adc
fidivrs
push
shrl
pop
ret
pop
and
call
sbb
mov
dec
sub
fldt
shrl
mov
lock
call
jle
lods
lahf
scas
xchg
sbb
pushf
test
repz
mov
sbb
adcl
aaa
push
stc
pop
mov
shl
out
mov
dec
vandps
add
sti
test
loope
and
out
and
shlb
mov
mov
or
lcall
sbbl
mov
sar
and
movsb
and
je
rcrb
fldenv
nop
stos
ljmp
jg
mov
jmp
jbe
xor
outsb
jl
mov
cld
adc
loope
dec
lcall
testl
cs
dec
outsl
push
and
ret
sbb
ja
imul
inc
enter
add
je
jbe
leave
icebp
cli
adc
jecxz
mov
sbb
mov
adc
inc
cmp
sub
jl,pt
mov
inc
insl
cmp
jmp
xchg
and
bound
mov
sbb
sub
xchg
into
dec
js
push
jmp
lods
sub
xchg
adc
cmp
sub
mov
sub
into
pusha
stos
jl
dec
roll
xchg
shrb
stos
rcr
loopne
in
pop
cltd
xchg
jmp
mov
sub
cmp
js
xchg
inc
pop
mov
and
pop
pop
or
push
push
testl
cmp
jae
iret
adc
es
and
and
in
scas
push
cmp
and
xor
mov
cmp
aad
outsl
xchg
lahf
cmp
loop
or
pop
call
or
hlt
xor
cmp
stc
mov
popf
lods
leave
iret
aaa
adc
outsl
xchg
fistpl
jb
add
in
pop
mov
push
xchg
push
iret
lcall
nop
repnz
push
push
add
sbb
jnp
movsl
orb
sbb
xchg
loop
inc
rolb
lahf
fadds
js
mov
xchg
mov
jo
jbe
je
in
dec
loope
das
push
mov
mov
fstpt
xor
inc
cltd
add
mov
pop
sarl
dec
mov
xor
and
shr
jle
cmp
mov
or
inc
dec
in
adc
insb
jmp
xor
ret
mov
sarl
jl
inc
pop
arpl
lock
mov
mul
fisttps
stc
and
fldt
aaa
and
insb
add
adc
xchg
lods
pop
pop
jmp
and
bound
ret
addl
lret
mulb
mov
hlt
and
adc
pop
jp
add
popa
mulb
jmp
scas
arpl
ds
stos
call
xchg
cmp
jbe
push
filds
inc
xchg
sbb
int
lea
test
aas
popf
or
or
xchg
jecxz
mov
mov
pop
cmp
sub
push
repnz
mov
xchg
fildl
lds
cmp
mov
test
lahf
pop
push
pop
gs
xchg
das
in
dec
test
or
jp
insb
mov
push
cmp
inc
or
ja
lods
test
sub
adc
int3
sbb
cmp
and
cmpsl
leave
inc
inc
stos
mov
push
lods
or
insl
ret
mov
lcall
add
jb
divb
and
cmp
mov
inc
cmp
inc
popf
aad
or
xor
icebp
and
movsb
mov
test
cwtl
xor
mov
fstps
sbb
add
mov
and
mov
cs
adc
sub
xchg
xchg
lods
fs
mov
dec
push
fisubl
iret
pushf
out
hlt
in
imul
mov
cltd
cmpsb
push
repz
mov
jb
and
pusha
imul
xlat
adc
shll
dec
cs
addr16
jae
mov
cmp
stc
or
mov
stc
pop
cli
adc
xchg
int3
das
and
push
into
ljmp
add
add
sbbl
xor
xchg
in
aaa
jbe
gs
sub
push
inc
call
pop
mov
pop
xorl
cmp
sub
or
cmp
push
lods
aad
cmp
dec
push
ja
xor
sub
dec
test
push
mov
fprem
punpcklwd
hlt
adc
scas
add
pop
aas
mov
add
daa
sbb
jle
fwait
loopne
mov
adc
mov
mov
imul
and
sub
mov
xchg
sbb
push
or
and
push
xchg
divb
pop
nop
sbb
outsl
xlat
dec
pop
in
jb
adc
pop
cmpsb
and
xor
cmp
mov
insb
movsl
inc
cmpsl
pop
rcrl
mov
subb
or
shr
movsl
sub
push
int
gs
mov
int
push
lods
and
adc
or
or
cmc
mov
in
jg
xchg
notb
mov
and
and
sub
inc
and
int3
pop
push
shlb
push
dec
adc
fmuls
popf
jmp
iret
mov
mov
push
in
arpl
or
dec
xchg
lret
out
scas
and
ljmp
in
fistpl
imul
pop
mov
lds
inc
std
test
stos
jno
push
int
mov
ret
mov
mov
jns
and
pop
xchg
xchg
lret
push
cmp
cmp
dec
add
aaa
pop
jne
out
push
cmp
insb
divl
scas
inc
icebp
fs
scas
lea
ljmp
in
lock
sbb
push
xor
cmp
shrb
push
mov
sbb
mov
mov
dec
adc
xor
pop
lock
jns
push
push
jg
stc
mov
dec
mov
mov
stos
mov
jns
add
push
jne
outsl
push
xchg
pop
or
push
out
lods
pop
addl
pop
das
mov
cmp
enter
pop
mov
ds
jmp
xchg
hlt
movsl
mov
inc
int
jmp
fidivs
mov
adc
ss
inc
aas
adc
ja
inc
mov
jp
imul
xor
addr16
lea
popf
inc
and
push
jb
push
cmp
mov
sbb
gs
jp
das
fwait
inc
mov
std
mov
divb
clc
jecxz
add
mov
sbb
aas
or
out
push
cwtl
out
sbb
loopne
xchg
mov
mov
loop
cld
inc
mov
xchg
aad
cmp
fsubp
xchg
dec
test
int
rcll
nop
lret
mov
sbb
adcb
subl
pop
sbb
lret
xchg
arpl
fldenv
lods
arpl
adc
mov
add
mov
xor
and
sub
dec
xlat
loop
aam
int
pop
push
jns
pusha
rcr
and
stos
mov
dec
mov
or
cmc
mov
fistps
ljmp
loop
mov
cmpb
cmp
cmp
fs
outsl
in
adc
test
pop
mov
scas
mov
xorl
hlt
cs
and
int3
int3
sbb
add
mov
push
je
pop
push
lret
pop
sub
pushf
push
xchg
movsb
ret
mov
cmp
inc
in
xor
push
fcompl
and
pop
and
adc
or
fs
out
in
scas
sub
es
xchg
sub
scas
insb
push
or
xchg
mov
in
lods
mov
xchg
sub
ret
lret
ds
test
jae
fldl
sub
sub
jnp
mov
sub
mov
dec
jmp
fptan
cs
sahf
and
mov
out
cmpsl
sub
popa
dec
sbb
xor
inc
mov
lds
loop
loopne
in
out
sbb
iret
rclb
lock
fidivs
sbb
lahf
mov
jo
loope
int
fidivs
aas
sub
fdivrs
dec
cmp
push
ljmp
dec
mov
icebp
addr16
sbb
pop
scas
pop
sub
lea
xor
push
mov
pop
imul
pop
cltd
dec
add
adc
xchg
xor
lea
or
sub
in
insb
call
jbe
cmpsb
and
push
or
daa
int
and
pop
add
mov
incb
arpl
mov
aam
mov
xchg
cmp
popa
mov
jecxz
fmuls
gs
xchg
mov
rcrb
mov
enter
pop
shrb
ljmp
mov
mov
gs
mov
lahf
inc
push
les
and
ret
mov
andl
orl
ficoml
mov
cmp
bound
call
adc
cld
pop
fnstcw
icebp
out
xchg
ret
xor
dec
movsb
mov
shr
fucomp
and
jle
es
xchg
sub
ror
stos
add
push
mov
and
push
rclb
aas
mov
jno
int3
add
jge
mov
add
lds
divb
test
dec
gs
popa
mov
mov
ja
jle
pusha
outsb
inc
push
jno
pop
arpl
subl
mov
mov
xchg
sbb
cmp
lock
pop
pop
fmulp
enter
or
sub
dec
mov
lods
das
sub
push
inc
fisubl
stos
or
mov
popa
xlat
xor
enter
push
aad
sbb
nop
dec
in
and
mov
lods
pop
inc
push
mov
mov
pop
imulb
cmp
outsb
clc
adc
cmp
cmp
jl
loope
add
mov
loop
int
ljmp
adc
xchg
in
movsl
inc
mov
fldcw
sub
sti
lret
or
add
inc
loop
jnp
mov
cs
data16
mov
push
clc
mov
mov
mov
das
add
sbb
insl
and
outsl
js
cmc
fs
sbb
mov
xor
mov
push
sbb
inc
dec
xlat
mov
sub
leave
jo
push
xchg
xor
cmp
pop
fnstenv
orb
sti
push
sub
or
mov
sahf
fs
add
lock
data16
leave
push
dec
movsb
loopne,pn
rcl
jg
pop
daa
lcall
imulb
cli
cmc
and
mov
scas
sub
mov
pop
adc
and
hlt
sbb
les
push
cmp
in
mov
lret
mov
cwtl
testb
fstps
aas
shll
sbb
aam
and
xchg
mov
mov
jo
inc
cli
in
push
and
sbb
repz
push
stos
test
inc
shrb
pop
fwait
pop
aam
or
mov
pop
or
xor
nop
idiv
das
inc
imul
push
add
imul
or
mov
stc
rorl
pop
and
testb
aaa
and
mov
clc
fists
or
mov
xlat
mov
or
cmp
ret
mov
shl
or
sub
enter
cmp
inc
movsb
and
lods
outsl
call
cmp
jno
clc
cmpsl
roll
mov
jp
adc
fbld
lret
jge
jecxz
push
stos
cli
cs
push
and
rorl
rorb
cmp
insl
scas
mov
rolb
jecxz
insb
repnz
push
lea
inc
mov
insb
xor
jecxz
cmp
sub
data16
dec
xor
cmpsl
in
fsubs
cmp
mov
dec
sahf
xchg
test
roll
sbb
inc
int3
sbb
addr16
pop
cmp
lcall
and
jae
adc
scas
sahf
dec
sbb
mov
sbb
push
repz
daa
incl
dec
xchg
mov
inc
push
out
hlt
enter
sahf
mov
mov
mov
push
ljmp
js
fwait
cmp
rol
cli
push
mov
andb
push
add
sti
in
add
insb
test
push
dec
fmulp
xchg
inc
jbe
hlt
cld
push
push
pop
stos
mov
cwtl
jp
xor
bound
mov
cmp
inc
pushl
jae
enter
into
bound
mov
lcall
cmp
mov
jno
cli
rcr
icebp
pop
inc
or
mov
sbb
fstps
pusha
ds
mov
test
xchg
lods
lret
sbb
jle
popf
jno
test
insb
mov
subl
dec
js
pop
rcrl
fchs
in
dec
add
int3
sahf
dec
fucom
cld
hlt
fists
add
popf
jbe
and
pop
mov
inc
into
add
dec
test
push
clc
push
insl
mov
add
test
add
jae
das
and
pop
sub
ficompl
popa
pushf
cmp
mov
pop
out
sub
push
fstpt
lahf
xchg
mov
es
inc
pop
jp
pop
loope
and
test
cmpsb
sub
sbb
shl
mov
lods
and
mov
and
xchg
das
dec
dec
pusha
in
push
and
or
outsl
mov
shrb
inc
pop
lods
xor
scas
lock
xchg
in
push
or
mov
sub
rcll
je
mov
gs
dec
xchg
cli
mov
jns
scas
inc
mov
sbb
dec
and
arpl
addr16
jno
lahf
lods
add
loopne
xchg
pop
dec
jo
cwtl
les
jg
sub
push
repnz
loop
cwtl
pop
and
pop
sub
xorl
add
clc
bound
rorl
mov
mov
nop
les
cmc
loopne
addl
in
icebp
sbb
pop
fildll
or
ja
js
add
cmp
pcmpgtd
jl
xor
jg
cmp
jne
movsb
cltd
cwtl
das
mov
les
jns
inc
subl
int
add
cmp
daa
jns
pop
mov
mov
call
insl
push
add
pusha
aad
fwait
jp
jnp
fisubrl
jp
push
jno
lret
jae
mov
cmp
movsb
pop
xchg
or
adc
mov
imul
jecxz
stos
fists
out
push
xchg
ror
faddl
jl
xor
and
stos
and
in
sarb
aas
cld
in
and
loop
testb
aaa
adc
adcl
xchg
xchg
je
jbe
and
stos
dec
jbe
jl
lods
subb
lret
push
jnp
and
lret
ss
js
sbb
repz
outsl
mov
adc
xor
and
dec
mov
or
mov
int3
popa
inc
dec
cs
ret
mov
and
and
lcall
add
ret
cmp
lods
pop
notb
xchg
scas
lret
das
jp
xor
enter
inc
jb
test
lea
dec
inc
scas
rclb
jl
cmpb
mov
cmp
xor
mov
add
mov
aad
ljmp
daa
je
popf
imul
shrb
aas
mov
popa
aad
sbb
mov
icebp
inc
mov
jne
stc
rcr
std
sub
mov
scas
testb
ds
mov
pop
inc
dec
test
pop
xchg
jae
pop
insb
mov
arpl
iret
lcall
das
scas
rcrb
stc
sub
cmc
fisubrs
icebp
shlb
jge
fidivrl
cmp
loope
dec
jne
xchg
outsb
adc
ljmp
push
pop
pop
cmp
loope
add
inc
dec
lcall
adc
push
decl
pop
and
stc
push
stos
int3
lods
pop
xchg
add
dec
loop
cmpb
mov
pop
setae
sbb
sbb
pop
push
jb
js
sbb
int3
push
inc
and
jmp
mov
insb
aad
into
xchg
popf
out
inc
xorb
pop
mov
and
mov
or
imul
and
lea
add
cld
cmp
enter
cld
in
xor
idiv
pop
iret
scas
imul
scas
loope
es
inc
aaa
bound
scas
roll
push
mov
add
shl
jns
adc
imul
inc
adc
into
cmp
adc
xchg
dec
cmpsb
andb
mov
inc
dec
hlt
jnp
repnz
aam
add
xchg
lea
push
aas
sahf
add
bnd
stos
clc
pop
adc
dec
pushf
sarb
dec
sahf
pop
dec
lods
mov
lret
ja
les
hlt
in
lcall
pop
push
push
shll
iret
fistl
xchg
aas
ffreep
push
orb
in
mov
inc
push
inc
loopne
cmpsl
es
shll
clc
sahf
dec
or
ja
mov
cmc
pop
jmp
pop
adc
dec
cmp
shl
pushf
loop
push
aam
xchg
push
movsw
dec
aaa
icebp
mov
mov
xchg
and
mov
lods
adc
fs
loope
stos
cli
sub
jae
push
out
jge
xor
push
rcrl
pop
ret
repz
xchg
pushf
loopne
mov
jl
imul
xchg
ds
cmc
or
xchg
repnz
dec
shr
repz
xchg
notl
lds
cmc
adc
dec
lea
jmp
xor
rcl
leave
popw
fnstenv
fmuls
sbb
xor
fistpll
enter
jne
lret
pop
push
call
test
in
xchg
xchg
enter
rcrl
xchg
mov
mov
and
add
sbb
adc
mov
pop
mov
lcall
clc
mov
sub
arpl
pop
sahf
int3
mov
or
push
das
sbb
pop
outsl
or
adc
outsb
popa
dec
sub
stos
rcl
inc
mov
xor
adc
push
mov
in
lock
sub
mov
adc
mov
movsl
adc
pop
movsl
mov
fnstsw
rdtsc
roll
add
sbb
add
xlat
fisubrl
cmp
cld
daa
arpl
mov
cli
mov
cmc
jge
ja
pusha
mov
sub
sbb
inc
pop
cld
push
jmp
jecxz
jmp
cltd
dec
jl
push
add
and
sbb
scas
hlt
shr
fsub
enter
xor
or
lret
sub
imull
pop
mov
mov
add
in
aas
xchg
mov
jmp
sub
xchg
cmpsl
and
jle
icebp
test
loope
sbb
dec
pop
ds
push
cmp
lret
dec
popf
shll
push
cmpsb
gs
pop
dec
push
push
das
add
xorl
push
and
mov
jge
mov
sar
hlt
xlat
pop
popa
dec
pop
cs
xor
jecxz
imul
es
fsubs
pmullw
add
and
das
out
xchg
icebp
frstor
adc
andl
fists
into
xchg
lcall
test
cwtl
xchg
xor
in
imul
test
hlt
mov
or
mov
in
and
or
idivl
popa
xor
roll
lret
sbb
ja
push
mov
xchg
pop
sbb
dec
sub
pop
dec
mov
push
ja
push
mov
loope
xor
xchg
inc
adc
adc
sahf
jae
fldcw
mov
sub
xor
mov
pop
test
pusha
mov
sahf
xchg
push
inc
jge
or
scas
push
pop
mov
dec
sbb
fcoml
testl
xor
pop
sti
leave
or
jbe
push
or
rcl
push
sbb
daa
call
jge
fwait
dec
mov
mov
cmp
std
or
push
adc
push
jae
mov
jnp
faddp
int3
and
imul
jns
orb
mov
and
and
in
lret
xor
addb
push
xor
inc
outsl
mov
sbb
add
xor
call
and
mov
mov
cmp
ret
mov
pop
ficoml
sub
hlt
mov
into
popa
jg
pop
push
loope
pusha
dec
call
pop
andl
mov
test
rcr
mov
jne
stos
ljmp
movsb
addr16
loopne
test
test
les
adc
xchg
cmp
push
bound
jmp
sbb
mov
je
jno
aas
fcmove
xor
and
sarb
fcomps
mov
out
xor
icebp
popa
movsb
fs
sub
jno
pop
mov
add
lret
loop
ja
cmp
and
in
jns
mov
ja,pn
fisttps
adc
mov
add
aas
addr16
ffree
push
cmpl
add
sbb
imul
cmp
pop
or
push
loopne
movsl
inc
jne
iret
adc
mov
push
mov
fwait
out
and
mov
jne
sbb
jns
push
leave
pop
mov
and
mov
inc
imul
call
add
sub
lret
shll
in
aas
aad
and
leave
pusha
fildl
mov
sub
jge
jns
fisubs
stos
dec
mov
dec
mov
pushf
xchg
arpl
mov
sub
test
fxch
mov
xor
movsl
mov
out
popa
sub
cs
xor
jp
shlb
cwtl
push
push
movsb
mov
xchg
je
ja
jecxz
nop
scas
sarl
jne
sti
xor
lods
out
imulb
lcall
movsb
rolb
mov
lahf
es
inc
sbb
sbb
pushf
jge
insl
arpl
leave
js
mov
rorb
dec
outsl
add
jl
add
stos
icebp
mov
cmpsb
pop
lock
mov
imul
int3
xlat
ljmp
dec
inc
stc
pop
mov
jecxz
jae
jno
ds
int
push
inc
xor
adcl
cmpsb
das
xchg
aas
jg
pop
inc
leave
rol
xor
subb
pop
lds
shll
mov
cltd
cltd
cmpsb
xor
lret
and
mov
sbb
or
std
add
xor
and
mov
loopne
sbb
insb
mov
inc
or
mov
jbe
sub
stos
jp
popf
adc
push
mov
xlat
adc
cmp
dec
xchg
pop
lds
xchg
pusha
scas
inc
inc
fstpt
mov
mov
insb
pop
aad
std
sahf
add
lcall
xor
rcll
or
adc
xchg
push
push
mov
insb
pusha
loope
mov
ljmp
pop
pop
je
and
ljmp
jecxz
das
int3
ffree
mov
mov
pop
fmuls
sub
or
dec
inc
pop
dec
or
pop
in
ror
rolb
pushf
ja
enter
into
sub
mov
aad
pop
fs
pop
mov
xor
mov
and
mov
mov
rclb
std
fwait
xchg
push
fstps
icebp
mov
rcl
push
mov
jns
das
loopne
mov
jg
sub
ds
scas
popa
bnd
mov
dec
ds
insb
xchg
daa
sahf
mov
and
push
arpl
adc
rorb
cmp
sub
jb
jge,pn
dec
aam
sub
mov
sbb
setns
push
cmpsb
push
pop
add
je
sub
push
xchg
scas
mull
jae
inc
pop
sbb
push
fbld
test
xor
int
adc
jle
std
inc
sub
aad
inc
inc
aad
add
pusha
sub
bnd
mov
hlt
in
dec
xor
jp
xlat
imul
je
cmp
leave
fiaddl
xor
jbe
int
rorl
out
data16
sbb
sbbl
mov
je
loop
mov
mov
xchg
dec
inc
sbb
jmp
push
add
jno
andb
xorl
aam
lahf
sbb
mov
and
push
in
cs
in
outsb
cmp
imul
lea
add
std
mov
and
mov
mov
mov
lods
cs
pop
inc
mov
imull
mov
scas
lods
cmp
mov
outsl
xor
nop
std
pop
or
movzwl
push
orb
xchg
dec
dec
test
jl
dec
in
push
pop
insl
loop
pusha
pop
or
jae
stc
cmp
jno
inc
shll
icebp
mov
repz
push
js
add
pop
mov
lea
or
xor
jns
jle
je
pop
pop
mov
and
scas
dec
pop
jg
idiv
ljmp
jo
cmovs
and
mov
jecxz
fwait
daa
fsubr
xchg
sub
jbe
movsb
mov
cmp
pop
mov
je
cmc
fcoms
adc
imull
push
ljmp
lea
bnd
push
add
pop
lea
or
jno
pop
inc
inc
xchg
rolb
dec
aas
or
mov
movsw
popf
pop
lcall
lret
or
adc
testl
test
aad
push
cmp
push
mov
inc
cld
sub
jl
pop
arpl
mov
das
les
idivl
test
inc
sarl
repz
lret
xor
jge
push
xchg
pop
enter
pop
xchg
cmpsb
mov
mov
xor
mov
xlat
xchg
cli
lret
jne
push
jg
inc
mov
jle
xchg
mov
nop
repz
inc
or
and
mov
sbb
mov
movsb
xor
lds
or
adc
xor
push
pop
and
adc
out
popa
jno
sahf
or
es
clc
mov
rclb
pop
and
adcl
enter
cmpsl
mov
mov
out
push
mulps
push
fistps
clc
sub
or
fwait
in
lea
push
popf
xchg
test
inc
sub
outsb
or
mov
or
pop
dec
test
pusha
pop
cli
aam
push
in
inc
cmpsb
in
call
adc
mov
pop
shlb
mov
loop
sbbb
mov
jnp
push
dec
xchg
pop
ret
or
pop
ret
leave
jmp
xlat
adc
notb
out
mov
lahf
jmp
xor
push
inc
push
faddl
rorl
xchg
add
push
add
sbb
ret
mov
jbe
mov
inc
test
or
enter
add
fdivrs
ret
or
xor
inc
or
sbb
loope
or
mov
addb
xor
cmc
jne
xchg
shr
into
in
push
adc
mov
mov
test
mov
dec
push
test
mov
lahf
faddl
pop
adc
xor
ret
in
loopne
loop
repnz
push
popa
lahf
push
js
pusha
inc
push
gs
lret
jnp
je
arpl
sub
xor
push
mov
int3
or
leave
orb
sti
fwait
adc
in
inc
scas
push
add
pop
xor
dec
test
mov
imul
adc
mov
inc
adc
pop
pop
pop
cmp
xor
insl
sahf
int
add
sahf
pop
jp
or
xor
jo
aam
push
push
add
xor
fdivrl
mov
scas
test
add
fldenv
lods
or
adc
int
dec
dec
cs
add
hlt
daa
movsl
push
cmp
inc
jle
cmp
iret
adc
sub
cli
leave
jl
mov
gs
mov
jecxz
fisttpll
icebp
scas
jno
push
pop
mov
in
testb
mov
push
call
imul
cmp
enter
mov
nop
adc
stos
push
cmc
ret
sarb
mov
jg
dec
mov
cld
cltd
mov
dec
addr16
cmp
arpl
jecxz
mov
mov
arpl
mov
ret
lea
pop
jecxz
dec
mov
dec
adc
imul
mov
jno
dec
call
imul
push
push
loopne
adc
call
loopne
adcl
mov
and
mov
jns
push
pop
mov
mov
xchg
hlt
mov
or
in
dec
dec
pcmpeqb
mov
es
pop
sub
fcmovne
nop
into
pop
mov
je
ror
pop
pop
aam
jle
pop
shrl
fsts
sbb
frstor
inc
fsubr
mov
lret
add
imul
mov
popf
std
cmp
sub
lcall
ss
or
adc
add
scas
mov
inc
cmpsb
es
out
mov
xchg
imul
sbb
icebp
arpl
push
mov
mov
dec
mov
mov
popf
pop
mov
movsb
sbb
pop
mov
cwtl
add
cmp
pop
adc
and
or
addr16
or
cltd
lea
sahf
inc
pop
mov
outsl
push
mov
movsl
je
pop
push
push
mov
sbb
mov
xchg
push
or
inc
jns
cltd
push
and
mov
pop
sbb
cmp
jl
or
or
xchg
test
jae
push
sub
and
data16
fwait
ret
and
div
pushf
adc
push
xchg
push
pop
pop
lcall
pop
mov
push
sub
test
outsl
xchg
pop
mov
cmpl
int3
lods
lds
add
push
lret
pop
fdivl
mov
xchg
jp
loopne
push
gs
insb
sbb
insl
pop
sub
aaa
sub
and
fdiv
add
arpl
scas
push
and
xchg
and
cmp
jae
adc
lods
in
int
inc
sar
out
pop
mov
jmp
movsl
or
cmpsl
push
out
sbb
add
mov
xlat
fldt
xor
lock
adc
arpl
and
inc
iret
push
or
mov
popf
jg
sbb
mov
aaa
cmp
or
lds
mov
push
aam
popf
in
repz
leave
sub
fs
jnp
sti
pop
and
popl
pop
cltd
and
lret
in
mov
inc
loop
std
add
xor
shll
mov
test
outsb
fs
jecxz
ret
push
ja
pinsrw
mov
mov
pop
mov
lods
jns
cmp
insl
das
push
lahf
push
sub
sub
adc
cmpsl
icebp
lods
lcall
mov
cs
test
orl
push
xchg
cmpsl
dec
pop
outsl
ret
sahf
push
call
jb
sar
sbbl
and
mov
mov
push
fistps
push
lahf
ljmp
ret
push
xor
lret
popa
sti
stos
push
pop
mov
mov
and
cwtl
dec
xchg
lods
stc
test
mov
cmpsb
add
out
jl
cmp
and
mov
cltd
sub
repz
stos
pop
int3
mov
and
cmp
adc
stos
or
mov
or
stc
xor
out
or
dec
or
mov
sbb
lret
jecxz
mov
shrb
or
pop
test
das
sbb
mov
nopl
aas
popf
dec
fdivrp
mov
pop
scas
repnz
jmp
cli
inc
ficoml
xchg
push
or
enter
cli
sub
mov
add
repnz
mov
push
lcall
int
inc
sbb
jnp
lods
std
mov
test
and
xchg
aam
sti
or
lahf
pop
repz
test
loop
out
xor
cmpsb
and
jle
ficompl
and
push
repnz
jbe
jns
add
cmp
std
pop
pop
dec
cltd
pusha
ss
stos
jmp
jle
jns
add
cs
psubsb
dec
in
pop
loope
or
push
adc
dec
and
mov
jno
out
aad
cld
pop
gs
xor
lea
mov
je
imul
and
push
dec
dec
sub
sbb
frstors
data16
stc
popa
add
or
or
cmpl
pop
fcoml
lds
mov
lcall
adc
push
mov
jg
sbb
push
and
fstpl
shll
repnz
fst
loop
jo
xlat
fstps
lds
jge
add
fisubs
dec
inc
fsubs
jmp
mulb
mov
dec
add
sub
and
adc
lods
rorb
icebp
cmp
xlat
stos
pop
cld
popa
jecxz
inc
lea
sub
fwait
mov
mov
popf
sub
addr16
fnstsw
push
out
cwtl
push
out
xchg
fistpll
jp
mov
lock
add
or
fimuls
adc
ja
adc
aad
pusha
or
call
fucomi
xchg
push
cli
shll
es
fdivrs
div
icebp
jecxz
imul
dec
arpl
test
aaa
enter
push
or
es
stc
or
lea
fisubrl
sbb
test
aas
arpl
push
inc
mov
es
adc
mov
lock
inc
push
das
in
and
lret
jnp
xor
or
dec
lahf
sti
jecxz
or
cmpsb
push
je
fdivrs
inc
enter
mov
fs
inc
int3
test
lock
and
mov
cltd
adc
or
jnp
stc
cmp
fwait
cli
into
pop
in
into
sti
jno
and
mov
clc
sub
push
xor
mov
lods
and
rcll
ljmp
push
xchg
imul
push
cmc
aaa
lock
mov
add
inc
cld
in
jbe
pop
mov
push
cwtl
adc
lahf
xchg
loopne
inc
sti
lret
sub
out
movsl
adc
ss
sahf
call
lea
adc
xlat
jo
xor
add
mov
les
shrl
sarl
fcoms
dec
movsl
repz
pop
pop
add
pop
pop
decl
mov
jl
leave
sub
inc
mov
hlt
iret
xchg
cmp
or
xchg
and
inc
mov
mov
xor
xchg
push
jnp
lods
int
push
inc
pusha
loope
gs
scas
lcall
leave
dec
out
ja
scas
mov
push
jmp
ljmp
sbb
lds
cmp
pop
cmp
cli
out
icebp
or
dec
nop
or
dec
cwtl
out
insl
movsb
pop
sbb
paddb
pusha
incb
in
adcl
pop
mov
or
push
xor
aaa
mov
xor
sbbl
loopne
push
xor
lret
dec
push
add
push
xor
jns
xor
vminpd
push
dec
scas
icebp
int3
adc
and
cwtl
mov
imull
lret
movsb
add
adc
scas
cmp
fnstcw
jo
addr16
imul
mov
test
fsubs
out
xchg
movsb
push
ficompl
cmp
mov
test
mov
sub
mov
dec
js
mov
or
push
out
cs
rorb
and
loope
push
cltd
int
push
jecxz
jecxz
pop
adc
mov
push
pop
mov
push
sub
adc
add
mov
bound
jo
xor
stos
mov
mov
insl
test
jnp
xlat
pusha
mov
es
aaa
and
repnz
pop
int
aaa
nop
jbe
push
mov
lods
test
mov
dec
or
xor
dec
faddp
adc
mov
pop
cmpsl
sub
adc
inc
out
jnp
jmp
xor
std
in
stos
test
test
outsb
inc
shl
xchg
loope
add
cmp
jbe
sub
lods
sub
adc
cmp
add
xor
test
mov
dec
pop
out
jle
mov
popa
dec
and
adc
insl
inc
lea
xor
sar
sbb
push
cs
sub
or
cmp
push
into
xor
push
int
loop
cmp
lret
outsl
pop
or
cmp
ret
test
mov
and
fisubs
pop
cli
stc
jle
pop
dec
mov
cmp
lods
and
xchg
inc
fmuls
sbbb
mov
xchg
cltd
dec
sbb
adc
mov
stc
decl
or
mov
jl
outsb
pop
shr
shl
aaa
mov
sub
mov
cmpb
xor
or
xor
xor
mov
adc
fsub
xlat
cmp
cbtw
jecxz
loopne
fiadds
mov
mov
std
int
lret
lea
test
lods
xchg
mov
jnp
pop
jp
dec
sbb
addl
hlt
mov
outsb
inc
cld
xchg
and
xchg
and
jg
shlb
xchg
mov
adc
fidivs
fstpt
sbb
mov
loope
gs
jle
or
out
std
ds
dec
cmp
cmp
mov
ja
nop
loope
dec
fistpll
clc
scas
cmp
add
jo
aam
mov
pop
es
pushl
in
test
xchg
push
lret
addr16
inc
test
push
cmp
sti
dec
rcrb
idivl
mov
addl
mov
fdiv
call
pop
add
cli
hlt
sub
mov
sbbl
pushf
outsb
fs
xor
xchg
aam
divl
mov
data16
jno
add
add
fiadds
out
xchg
icebp
adc
popa
cmc
push
add
inc
mov
aaa
movb
push
sub
push
xlat
int
aas
in
push
and
subl
movq
out
push
adcb
cmp
mov
mov
add
nop
ja
jg
rorl
fstps
jmp
fimull
jo
stc
jl
aam
lea
push
lds
mov
in
pusha
xor
adc
shll
outsb
popf
push
xor
aas
cli
outsb
in
jmp
and
adc
add
nop
push
int3
ret
xchg
cmp
xlat
pop
fistl
sbb
cmp
cs
sub
clc
test
jae
dec
int3
or
mov
fdivrl
xor
jo
sahf
jb
xor
ret
mov
or
push
negl
shll
and
sub
mov
inc
in
or
and
data16
into
lahf
jle
push
subb
rclb
ljmp
enter
cmp
xchg
enter
loopne
mov
dec
pop
loope
jge
xorl
lods
pop
arpl
lea
pushf
in
dec
rcrb
js
add
jnp
repz
loopne
mov
adc
mov
xchg
add
push
xor
stos
ret
and
stos
cmp
jle
les
push
pop
sahf
rolb
mov
and
xor
sub
cmp
daa
jle
shrb
notl
fistpl
out
pop
test
cmp
xor
fnstcw
dec
adc
aad
fdivl
jecxz
and
pop
lret
dec
mov
xchg
mov
js
call
sub
mov
ficoml
xor
hlt
out
mov
jmp
rorl
mov
cmp
popf
adc
ffree
mov
inc
sbb
out
bound
punpckhdq
fmuls
mov
mov
hlt
cwtl
dec
je
fdivrl
sub
jg
hlt
sub
push
mov
call
dec
or
and
or
inc
sub
pop
aas
fdivrs
mov
push
out
jae
out
call
popf
pop
stc
sub
fxch
insl
and
insl
mov
cli
cmp
das
mov
push
fnstenv
out
lcall
jl
mov
add
mov
ret
jne
xchg
and
out
call
inc
fs
jno
pusha
test
outsw
add
sbb
xchg
or
icebp
les
aaa
push
pop
movsl
xchg
jl
cli
test
mov
adc
dec
xchg
out
das
mov
into
mov
pop
jbe
loope
js
mov
sti
stc
lcall
pop
sti
inc
push
sbb
mov
jg
push
negl
and
add
pop
dec
testb
dec
and
jb
lret
es
outsl
sbbb
add
or
mov
mov
aam
imul
int3
add
jg
jns
sub
xchg
loope
push
fld
mov
test
cmp
fs
faddl
push
or
xor
add
inc
mov
data16
lret
cmp
loopne
pop
add
mov
movsb
loop
cmpsb
fmul
adc
adc
push
sub
cmpsb
aas
stos
jae
fistpll
cs
leave
stos
xchg
in
mov
sbb
rcr
ja
fstps
add
mov
push
rolb
jo
push
out
sbb
jmp
xchg
mov
mov
xchg
xchg
adc
repnz
arpl
sbb
push
sub
dec
ret
adc
xor
faddl
push
sbb
xchg
mov
js
out
int
outsl
sub
pop
mov
je
push
push
xor
cld
jg
pop
xchg
insl
pop
xor
add
fadds
stos
ds
jl
jge
sahf
int
into
jl
jl
lods
xlat
mov
test
pop
out
in
test
jp
aaa
or
movsb
xor
mov
mov
icebp
sti
sub
mov
jp
cld
fists
dec
inc
lret
lock
pop
sub
and
xor
pop
sub
aas
push
movb
cwtl
cmpsb
outsb
aad
fidivrl
lea
jge
jbe
dec
cmpsb
dec
mov
jge
mov
and
sbb
adc
shl
fildll
and
xchg
iret
movsb
pop
out
dec
lea
mov
dec
fsubl
into
push
and
jl
fisubrs
mov
or
xor
push
add
pop
xchg
lea
xor
jmp
sbb
ja
sub
pop
pop
mov
and
cmp
inc
and
xor
insb
lds
dec
pop
mov
or
pop
rorl
mov
fcomip
pop
ja
dec
adc
ficoms
adc
out
stc
in
mov
xchg
orl
jge
testb
jg
cmp
ftst
bound
repnz
data16
cli
add
test
in
scas
fildl
sbb
xchg
adc
jmp
in
mov
sub
les
jge
int
ja
sub
hlt
insl
outsl
adc
fsubrp
lea
xor
sub
shl
mov
loopne
or
mov
push
lcall
mov
dec
xchg
add
ds
xchg
std
cmp
hlt
inc
ds
frstor
and
pop
loope
sti
cwtl
jecxz
out
je
xor
lods
pop
cs
xor
mov
movsl
es
test
xchg
xor
jo
jge
pop
imul
jne
out
and
mov
pop
add
and
pop
stos
xchg
popa
push
xlat
push
pusha
out
inc
sti
or
fstps
add
cmc
push
test
inc
inc
or
and
adc
push
fistpl
adc
mov
inc
mov
mov
push
scas
cltd
push
lret
jecxz
xacquire
ret
sbb
mov
outsl
dec
test
or
dec
lret
jge
ljmp
imul
lret
add
je
mov
mov
aam
imul
sbb
insb
pop
das
rcrl
or
lahf
fnstenv
cmp
mov
inc
imul
xor
fcomip
mov
push
mov
leave
leave
mov
addl
push
and
cmpsb
xchg
jo
icebp
sub
fst
scas
div
push
bound
jp
into
cmp
mov
jp
mov
jg
js
rclb
push
outsl
add
mov
cmp
mov
xorb
call
push
mov
dec
jbe
xor
shl
xchg
jae
cld
ss
adc
das
lahf
dec
mov
jecxz
sar
xchg
jns,pt
cmp
or
cmp
pop
cmpsb
inc
into
xchg
sti
leave
jmp
mov
push
pusha
int3
sub
jae
pop
clc
int
rolb
adc
lds
sbb
pop
and
loop
pop
jno
test
xchg
out
movsl
roll
or
sbb
jecxz
dec
sub
das
shll
xchg
outsb
mov
xchg
ja
pushf
pop
mov
xor
xchg
mov
daa
cmpsl
xor
mov
sub
mov
xlat
cs
mov
jmp
dec
imul
jno
or
pop
loopne
das
fsubr
arpl
hlt
out
test
xchg
xlat
pop
aam
xchg
aaa
mov
call
jl
cmc
pusha
inc
push
pop
int3
lret
mov
test
mov
lea
push
lret
or
cmp
xor
jnp
jbe
adc
out
inc
push
and
test
jne
out
btc
outsl
mov
jae
mov
pop
pop
andb
cmpsb
scas
adc
mov
pop
fbstp
sahf
es
push
lds
jns
in
cmovle
fcoml
dec
and
roll
pop
push
dec
addl
adc
roll
hlt
dec
xor
addr16
leave
pop
ds
hlt
xor
int
andb
add
jg
jo
test
xlat
xchg
pop
jno
mov
lcall
sub
or
xchg
sub
inc
sbb
scas
cmp
lahf
insb
xor
xorl
das
ja
imul
std
and
mov
jno
jo
xor
into
mov
cmp
and
jg
fldl
sub
jo
jmp
xchg
cmp
fisubrs
cmp
outsb
dec
les
push
fwait
pop
outsb
dec
jnp
in
sahf
cmp
les
pop
mov
and
leave
adc
insb
pop
sahf
and
or
jne
pop
push
repz
arpl
inc
orl
inc
push
mov
adc
jp
out
sbb
sub
scas
jmp
icebp
fidivrs
adc
dec
cmp
adc
loop
out
aas
arpl
pop
hlt
iret
fwait
jmp
scas
cmp
add
call
std
popf
sub
mov
stos
jg
js
je
mov
roll
out
sub
test
ljmp
lcall
leave
loopne
cmp
popa
jbe
inc
jb
push
pop
adc
pop
dec
mov
adc
ficompl
xchg
mov
sub
lods
loop
push
pop
insl
and
push
inc
inc
iret
push
mov
cmovge
lock
sub
pop
dec
adc
xchg
mov
inc
aaa
inc
jmp
insb
adc
ja
add
icebp
adc
sarl
test
inc
nop
or
push
add
or
lahf
adc
and
mov
dec
sub
lods
sub
orb
and
jns
push
cwtl
sbb
dec
and
add
lret
push
jecxz
iret
xchg
fistpl
fmul
icebp
cmpsl
dec
sub
or
cmc
daa
xor
xchg
jo
and
add
bound
and
adc
cmpsb
shll
insb
sbb
std
addr16
lret
xchg
inc
xor
mov
addr16
add
push
or
add
jno
xchg
fwait
cmp
addr16
jae
pop
push
sub
inc
push
jns
or
pop
in
and
pop
sub
cli
push
ret
sbb
rcll
mov
inc
xchg
inc
pusha
rcrl
mov
dec
adc
and
not
dec
lcall
lock
enter
pop
sti
shll
mov
lds
out
fs
cmp
fistps
lcall
mov
scas
outsl
mov
and
int3
sbbl
int
out
popa
or
loope
lcall
aas
pop
enter
or
dec
jnp
lds
fidivs
movsl
pusha
xchg
mov
adc
stos
inc
dec
das
or
les
std
ret
decl
scas
or
popa
cmp
push
sub
push
popa
sbb
pop
sbb
loope
jle
xor
ljmp
inc
sub
popa
loope
loop
dec
mov
adc
push
rcr
jmp
dec
jge
lods
vpsubsw
ds
mov
movsl
aaa
push
lcall
cmp
pop
lcall
mov
arpl
imul
out
in
xchg
xlat
or
mov
sub
sub
jno
pop
js
mov
scas
adc
xor
outsl
inc
enter
loop
mov
xchg
cmovae
jmp
roll
cli
sbb
lock
sub
std
mov
jge
jmp
dec
mov
insb
fadd
enter
outsb
test
lods
scas
out
les
loope
inc
cmpsl
pop
in
lret
mov
push
and
push
mov
mov
adc
and
dec
adc
aam
or
sub
add
imul
fbstp
in
mov
jb
popl
add
aas
repnz
push
stc
in
and
lods
mov
sub
jb
rcrb
and
add
pop
out
insl
pop
scas
sbb
into
push
inc
pusha
and
add
xlat
lds
xor
sahf
push
cmpsl
and
ret
push
pusha
loopne
xchg
dec
or
and
mov
pop
jl
sbb
ljmp
add
sarb
sbb
lret
adc
inc
add
cmc
sbb
arpl
adc
jge
dec
mov
mov
pop
cmpsl
mov
int3
sbb
jp
jmp
fmuls
sarl
jmp
inc
jge
stos
mov
cmpsb
dec
xor
jnp
sub
lods
jle
test
mov
mov
xor
aas
xchg
fstpt
in
out
xchg
insl
push
adc
shlb
sub
or
xchg
les
inc
sub
dec
test
hlt
lock
fcoms
lret
xor
push
frstor
cli
ret
enter
push
rcrb
push
cmp
aad
mov
jl
in
mov
inc
mov
and
xlat
movsl
dec
popf
push
arpl
sbb
out
xchg
sub
xchg
jecxz
add
cmpsb
mov
movsb
movsl
push
add
jl
ljmp
aam
shlb
xor
jo
cmpsl
mov
ljmp
scas
test
testl
cmc
into
add
or
mov
mov
jp
push
adc
xchg
mov
std
int
nop
scas
mov
idivl
xor
jb
nop
adc
push
enter
scas
repnz
js
adc
pop
int3
sbb
ficoms
dec
mov
pushf
push
aaa
inc
mov
jg
push
push
xchg
jo
sbb
dec
cmp
mov
pop
cmp
lret
fnsave
sub
lods
jecxz
lods
cli
push
imul
stos
popa
push
movl
scas
mov
dec
lods
and
xor
cmpsl
ds
pop
jnp
add
sub
loopne
lret
cwtl
scas
pushf
sbb
test
pop
fmuls
les
xchg
mov
popa
jg,pn
xor
pop
mov
mov
repnz
into
fidivrl
lds
mov
mov
insb
or
pop
arpl
int3
push
loopne
fs
loope
sub
jmp
mov
sub
push
add
lret
fnstcw
and
pop
dec
push
dec
fldt
mov
or
inc
pop
push
mov
js
push
sub
push
jno
add
notb
inc
mov
mov
das
scas
add
pop
sub
push
dec
test
and
mov
scas
adc
jl
bound
aaa
mov
les
lods
pop
add
dec
test
fstl
mov
pop
dec
mov
adc
sbb
add
jb
aad
xchg
sti
cmp
stos
jmp
das
push
push
inc
cwtl
iret
mov
cmpsb
sbb
mov
cmp
ret
jbe
std
lret
inc
mov
jns
mov
jle
push
movb
mov
sub
or
mov
adc
sbb
cmp
enter
push
jle
std
adc
lea
or
inc
ficoms
aad
orl
sub
sub
cmpsl
inc
in
pop
insl
jb
lds
or
or
lods
repz
xchg
mov
sbb
add
sub
mov
shll
push
shll
jb
inc
add
test
data16
pop
pslld
in
pop
push
cmpsb
or
inc
popa
jg
mov
arpl
push
rorb
cmpl
mov
scas
movsb
xchg
and
mov
dec
jae
je
jmp
mov
out
mov
sub
fs
mov
insl
addr16
sahf
and
jno
inc
inc
jecxz
mov
lahf
shlb
mov
dec
fbld
xchg
stos
add
cmp
icebp
mov
data16
enter
pop
cmp
in
pop
adc
and
jmp
movsb
push
xor
es
cmp
xor
cmp
outsb
or
repnz
mov
cld
insb
sahf
pop
in
add
jg
pop
mov
or
or
pop
call
dec
fcmovu
or
mov
mov
repz
inc
test
loope
and
push
pop
sbb
dec
adc
enter
xchg
testb
jnp
neg
loop
test
sti
mov
jg
leave
shll
addr16
divl
test
or
pop
sbb
lods
fmuls
dec
in
xchg
lahf
mov
mov
inc
mov
mov
jo
hlt
cmc
fwait
stos
inc
jg
adc
xchg
jb
pushf
push
gs
stc
and
push
je
stos
repz
dec
icebp
pop
outsl
test
frstor
dec
fisubrl
sub
inc
inc
xchg
je
leave
ficompl
fdiv
adc
jne
mov
push
mov
popf
rcrb
xor
jne
pop
adc
pop
jmp
aas
in
cmp
push
cli
roll
mov
data16
sarb
or
dec
xor
shrb
mov
xor
mov
lahf
insl
fadds
psllq
cmp
fisttps
je
neg
adc
fnsave
xchg
adc
enter
pop
mov
pop
lea
test
out
or
gs
mov
divps
roll
jns
shlb
and
xchg
test
out
mov
mov
push
inc
jle
mov
fwait
test
stos
popa
scas
cmp
sbb
movsb
pushf
add
push
mov
mov
xor
ss
loopne,pt
mov
dec
inc
popa
push
in
popa
sbb
insl
data16
imul
in
xor
shrb
loopne
fsubs
push
xlat
mov
pop
mov
mov
sub
imul
test
aad
test
sub
xchg
enter
sub
dec
rcrb
shrl
bound
add
and
cltd
dec
push
jmp
mov
jmp
sub
jp
mov
xor
mov
and
lock
and
int3
jo
sbb
rcll
xchg
mov
inc
aas
cmpsb
insb
pop
fcoml
push
test
lods
aam
jb
push
test
pop
or
inc
bound
div
fcmovu
cmp
mov
inc
mov
jns
cmp
call
jbe
popa
cmp
cmp
xlat
xor
sub
or
shrl
cmpl
cltd
mov
push
sub
out
pop
jo
movsl
jge
lock
adc
call
mov
sbb
cli
sbb
arpl
pop
pop
repnz
xorb
xor
cmp
cltd
jecxz
cs
enter
mov
mov
push
and
into
push
dec
jmp
cmpb
mov
icebp
pop
mov
adcl
scas
or
push
hlt
sub
cmpsl
lods
and
cmp
jo
xchg
pop
jp
bt
sub
lock
mov
test
add
xor
jne
je
jnp
movsl
orb
mov
imul
mov
pusha
pushl
lods
stos
pushl
xchg
jg
in
mov
ret
pop
or
or
fwait
pop
xchg
push
loop
xor
imulb
xor
add
add
jo
xchg
xor
xor
or
sub
pop
sbb
outsl
sbb
loop
mov
out
std
stc
scas
pop
mov
mov
xor
push
fs
fsubp
dec
pminub
int3
xchg
cld
mov
push
pop
cmpsb
push
sub
or
idivb
dec
mov
inc
rcrb
popf
bound
pop
mov
pop
and
mov
sbb
mov
inc
ffree
clc
movsb
insl
dec
push
cmp
mov
repz
push
lahf
js
inc
fildl
int3
or
movsl
xchg
inc
shlb
pop
lahf
loopne,pn
outsb
lcall
mov
mov
inc
push
notb
jle
fstpt
pusha
test
cmp
fldl
lods
lcall
addr16
lea
or
mov
daa
outsb
aaa
mov
sbb
xchg
stos
push
xchg
enter
test
in
ret
jg
cmpsl
incb
xor
popa
jno
jecxz
push
mov
mov
add
pop
in
add
aam
aam
das
filds
cmp
into
das
lcall
dec
pop
inc
or
inc
sub
cmp
jne
mov
jbe
jnp
xlat
test
xchg
inc
push
or
shl
cmc
aad
lea
inc
mov
mov
and
mov
pushf
insl
mov
test
test
cmpsb
test
fcoml
out
in
and
mov
xchg
inc
push
lock
mov
inc
cmp
mov
jecxz
push
xor
sub
push
mov
movsl
add
jo
sbb
add
inc
pop
lds
adc
lahf
fistpl
icebp
xchg
movsl
cmp
or
xchg
cltd
mov
xchg
aas
push
in
lods
test
adc
test
pop
inc
adc
inc
cmp
sub
cmpsl
inc
mov
sbb
or
add
adc
rclb
mov
inc
or
cwtl
mov
xchg
lods
xchg
cli
dec
leave
ja
xor
sub
cltd
lds
cwtl
stc
cltd
stos
repz
inc
dec
mov
mov
pop
pop
lret
call
movsb
popf
or
pop
loope,pt
cmc
pop
aam
lret
int
push
xchg
es
cwtl
cld
repnz
pop
cmc
scas
in
lret
std
negl
lea
mov
inc
rorl
sbb
stos
adc
popa
insb
xchg
mov
push
lock
shrl
xchg
testl
push
mov
bound
adc
mov
je
adc
mov
leave
pop
aad
sub
jno
aas
cmp
stc
leave
mov
es
repnz
jp
pop
cmp
incl
out
or
mov
shll
and
out
push
xorb
out
cli
mov
adc
out
fimuls
pop
dec
repnz
push
roll
cmpsl
imul
repnz
icebp
nop
sub
decl
icebp
clc
add
aaa
jecxz
xor
ja
stos
dec
xor
test
adc
push
loope
aaa
dec
add
cmp
inc
cwtl
cli
decb
sub
push
sub
fs
pop
ret
inc
in
mov
jecxz
test
ficompl
mov
and
pop
cwtl
addl
mov
movsb
jo
xor
inc
adc
or
fdivp
fwait
xchg
pop
jp
stos
lahf
mov
call
cmpsl
xor
push
inc
pop
sub
adc
sub
loope
sub
movsl
cmp
loopne
pop
inc
inc
and
dec
std
dec
cmp
mov
sub
stos
jb
sbb
roll
mov
jmp
xor
push
cmpsb
jecxz
into
jle
lods
insl
fiadds
sti
in
in
sbb
mov
fwait
xchg
pop
imul
mov
cmpsb
insb
rcll
jge
lods
cmpsb
out
or
mov
test
sbb
xchg
sub
dec
add
lret
inc
test
enter
mov
mov
mov
daa
cmp
jge
pop
push
push
stc
ds
sub
push
mov
lret
repz
xor
in
add
inc
loope
cmp
dec
cmp
das
jns
movsb
and
add
mov
pop
push
ja
dec
mov
add
out
sbb
inc
repnz
xor
mov
mov
push
mov
stos
inc
inc
imul
xor
lods
hlt
push
sub
push
fwait
mov
mov
jo
outsb
mov
stos
xor
sbbb
sub
fisubrs
or
push
adc
inc
jne
test
xor
rorb
and
pop
jle
lods
mov
adc
push
test
xor
stos
icebp
and
ret
mov
popf
movsb
mov
xor
shlb
and
repz
jl
rclb
rcrl
stos
jg
adc
or
lock
push
sbb
in
add
ret
sahf
imul
lret
push
icebp
xchg
test
adc
inc
cld
cmp
cmp
jle
cmpsl
repnz
mov
icebp
dec
clc
out
adc
das
cli
lock
addl
or
jmp
bound
es
in
mov
xor
inc
mov
xor
or
insl
decl
pop
inc
dec
dec
sub
icebp
cmp
stos
inc
dec
inc
stc
pop
into
daa
out
shlb
jle
mov
pusha
aad
mov
mov
adc
mov
push
pop
sub
int
repnz
dec
imul
inc
and
jbe
fistpll
add
and
jg
enter
insl
or
fldl
das
jb
add
loop
jae
test
xchg
mov
movsl
dec
call
jbe
inc
jmp
paddw
xchg
mov
test
xchg
outsb
test
lret
and
sub
jae
lock
call
pusha
fildl
divl
lods
fildl
pop
or
sub
dec
xor
mov
leave
repnz
dec
loop
iret
lret
subb
into
shll
adc
imul
sbb
outsb
push
in
loope
adc
xchg
stos
in
push
mov
mov
cmp
mov
inc
pop
sub
adc
js
aas
fisttpll
xor
push
pop
push
inc
pop
shrl
fsubl
js
sub
jge
aaa
fwait
repnz
dec
xchg
dec
insl
mov
call
sub
aam
xor
not
dec
imul
iret
or
div
in
push
push
xchg
cmc
inc
sbb
stc
subl
in
adc
mov
mov
cmp
mov
adc
cmp
sub
mov
sbb
sbb
enter
lods
xor
mov
dec
mov
mov
lea
sbb
xchg
test
or
sarl
test
push
in
in
aad
add
push
xor
aam
push
icebp
jb
sarl
cld
push
xchg
xor
push
lahf
adc
xor
xchg
adc
rcrl
lret
or
sbb
jmp
sahf
jno
dec
fistpll
addr16
cmp
xor
popa
xchg
js
jle
scas
lods
inc
push
and
notl
push
xor
sbb
or
xchg
mov
xchg
inc
xchg
pop
shrl
rcr
add
lock
adc
jns
cmc
add
inc
push
and
mov
movsl
fistps
pop
pop
pop
stos
lcall
push
push
push
ljmp
data16
mov
fsubr
test
ss
inc
fnstenv
sub
decl
cli
enter
cmp
jns
ret
pusha
sbb
rcrb
adc
insl
inc
dec
scas
lock
scas
or
insb
mov
xor
mov
sub
mov
mov
popf
sub
jne
outsl
pop
add
lret
loop
addb
cltd
or
mov
loope
adc
and
lea
daa
dec
mov
outsl
xchg
push
nop
xchg
adc
xchg
shlb
or
sub
rol
push
pop
clc
pop
and
scas
cwtl
xchg
push
popf
ret
shrb
mov
enter
pop
imul
js
inc
mov
movsb
lods
les
inc
cwtl
mov
mov
mov
adcb
pop
mov
int3
aas
pop
pushf
fidivrl
mov
fiaddl
push
movsl
mov
das
in
mov
push
xchg
mov
sbb
out
lods
xor
popa
test
xchg
lret
loopne
and
cld
clc
sbb
loopne
xchg
and
test
xchg
mov
cmp
xlat
fwait
lret
aas
push
and
repnz
inc
jg
cmp
subl
lea
jne
in
xchg
inc
clc
push
lods
insl
cld
aas
scas
aaa
lds
lock
xor
fsubl
or
into
test
sbb
out
adc
sbbb
fbld
lea
jae
les
sbb
mov
pusha
add
popf
sbb
test
xchg
add
and
dec
inc
data16
insb
and
outsl
add
mov
xchg
hlt
cmpsb
jle
lock
or
xchg
cmpsl
out
mov
push
ss
stos
popa
shr
xor
mov
dec
cmp
into
out
cmp
or
fldt
loop
jg
popf
adc
xor
mov
add
jae
out
idivl
stos
fs
pop
jle
xor
in
rorl
call
xchg
xchg
mov
jo
pop
dec
stos
inc
out
divb
mov
popa
sti
push
push
aam
push
pop
adc
xorb
jmp
and
push
repz
int
or
push
shlb
mov
iret
add
arpl
pop
pop
stos
hlt
jae
popa
sahf
repz
enter
popf
xchg
imul
sub
aam
je
fwait
jb
xor
pushf
sti
push
xlat
mov
mov
fcom
movsb
mov
orb
cmpsl
movsl
adc
popf
js
stos
push
pop
cli
pusha
aad
nop
enter
inc
movsl
or
jns
pop
popa
imul
mov
dec
enter
or
dec
or
jns
inc
dec
jo
arpl
mov
inc
mov
ja
jnp
push
mov
jp
es
jb
roll
sarb
inc
mov
mov
xor
popa
mov
mov
xor
mov
or
movl
pop
cmp
mov
les
inc
mov
idivb
movb
dec
jns
pushw
xchg
mov
push
pop
xchg
loopne
and
imul
enter
outsb
sbb
and
pop
or
jnp
call
mov
mov
adc
mov
leave
call
out
aad
mov
repnz
pusha
stc
arpl
or
pop
je
inc
add
dec
in
fmuls
popf
dec
adcl
jmp
push
push
addr16
les
jle
pusha
xchg
fadds
sub
jns
and
fists
hlt
mov
push
imul
stos
sub
int3
rcrb
push
sarl
mov
inc
or
jp
jl
fimull
push
fstpl
cmp
mov
dec
xchg
je
cmp
cmpsb
scas
add
js
inc
mov
loop
or
dec
clc
ficompl
outsb
pushf
jne
add
ljmp
je
shll
or
negl
mov
cmpsl
mov
jl
xchg
sar
sbb
std
push
testl
mov
mov
fwait
ja
pop
enter
mov
clc
test
test
das
and
add
xchg
mov
mov
dec
xor
rorb
cmpsl
in
or
popa
sub
dec
jge
hlt
inc
jnp
pop
cld
jae
test
scas
dec
mov
cmp
jno
pop
call
and
cmpsb
movsb
sbb
out
pop
iret
inc
push
gs
add
outsb
jbe
out
lea
pop
jns
test
lret
sti
in
lcall
lret
and
into
adc
mulb
mov
jmp
mov
and
mov
stos
push
cmp
aas
pop
mov
mov
jbe
push
and
dec
lret
out
dec
adc
arpl
incb
xor
cmp
inc
adc
sbbl
push
arpl
adc
call
jno
xchg
mov
jne
mov
sbb
dec
and
cld
ja
cli
cmpsl
stc
adc
mov
enter
mov
sbb
pop
dec
stos
bound
mov
imul
hlt
jg
adc
mov
cmc
jbe
mov
lods
inc
sbb
cld
or
mov
xor
test
repz
and
and
push
sti
pop
pusha
mov
push
pop
push
push
sarb
sub
imul
or
push
xchg
sbb
jle
sbb
movsb
push
adc
je,pt
nop
and
mov
into
icebp
call
xchg
xchg
les
imul
aad
cli
cmp
test
fidivl
or
es
ja
or
pop
imul
jno
inc
xor
lods
sarl
and
in
jae
loop
sbb
shrl
or
sahf
fs
pop
dec
xor
and
iret
add
test
add
mov
test
in
mov
jae
dec
cld
aaa
hlt
mov
fiadds
mov
stc
movsb
ret
call
add
add
sti
push
xchg
mov
sub
outsb
sub
lods
push
dec
adc
rcr
push
repz
ja
mov
cmpsl
jmp
push
dec
and
pop
and
dec
push
aam
or
sahf
inc
push
jge
ret
adc
pop
ss
mov
pushf
mov
jo
insl
lahf
daa
lods
push
adc
sub
xlat
adc
mov
xchg
scas
adc
pusha
adc
push
call
jne
outsb
push
cmp
leave
inc
scas
adc
and
inc
pop
fwait
outsl
or
das
xchg
sbb
lret
push
data16
xor
fisubrs
adc
outsl
mov
cmp
and
into
xchg
xorb
jbe
mov
cli
loop
dec
lds
cmp
sbb
icebp
xor
mov
push
or
lcall
mov
dec
sbbl
cmp
inc
test
push
ret
das
cli
ljmp
xor
xor
or
or
push
roll
push
sbb
dec
xchg
arpl
imul
add
cmp
icebp
mov
fs
mov
ficoms
mov
add
adcl
sub
test
enter
mov
xchg
scas
adc
jbe
ds
xor
xchg
inc
xlat
xchg
jmp
sub
pusha
mov
sbb
lods
pop
icebp
inc
fwait
imul
ja
cltd
jbe
lret
mov
lds
mov
adc
std
cmp
fldl2e
jo
mov
inc
lods
pop
test
sahf
add
fcomps
push
push
out
or
ja
inc
sub
jae
mov
cli
nop
or
lret
jo
gs
pushf
push
lret
xchg
xchg
dec
mov
and
push
rclb
cmp
mov
add
sbb
hlt
popl
in
jbe
outsl
sub
push
add
push
stos
fmul
popl
sti
setle
mov
cmp
pop
lods
ljmp
sub
arpl
popa
adc
xchg
movsb
ds
push
sub
imul
or
jg
or
cmp
jecxz
das
sub
adc
xchg
shrl
xchg
sbb
call
in
adc
xor
pandn
cwtl
cmc
test
mov
dec
sti
out
adc
xcrypt-ctr
cmpsl
pushf
sub
and
or
jge
inc
js
test
shll
loope
clc
shll
or
mov
into
roll
fwait
lret
jge
jle
xor
mov
arpl
mul
cmp
add
loop
or
into
test
mov
mov
sbb
out
test
cmpb
pop
push
cmp
stc
insl
outsl
lods
cld
sbb
rcrb
and
push
mov
cmp
out
mov
lret
or
scas
cwtl
adc
sbb
lock
imul
sti
mov
jge
imull
ja
or
jnp
outsl
popf
sahf
xlat
mov
inc
je
orl
out
push
xchg
in
cmp
xlat
adc
inc
jl
dec
les
adc
lods
mov
inc
shlb
jne
out
xor
sbb
xor
pop
or
mov
call
pop
aam
pop
ljmp
sub
je
xchg
push
push
mov
pop
test
jae
nop
ror
cmpsl
int3
mov
inc
hlt
push
mov
lret
ud0
sub
aas
or
ficoml
into
dec
gs
mov
ret
out
addr16
xor
jmp
fidivrs
jne
std
int
adc
out
fsts
sub
int
jmp
jecxz
mov
and
and
and
cmpsb
add
movsb
inc
decb
mov
or
les
stos
jle
mov
fisubs
mov
inc
sbb
add
fldl
and
pusha
into
cmp
lock
test
jge
cld
lds
push
insl
test
lea
or
lds
pop
aad
push
test
mov
decl
jl
mov
imulb
je
and
pop
enter
pop
enter
sbb
cwtl
or
mov
mov
shrl
sbb
gs
xchg
xor
jle
xchg
stos
dec
enter
xchg
bound
pop
or
fmul
fisubl
sbb
je
ret
push
das
stos
lock
out
mov
or
xor
push
xchg
pop
and
stos
test
repnz
mov
jle
scas
pop
js
dec
cld
add
sbb
jbe
add
repnz
dec
adc
sarl
jae
popa
adc
bound
xchg
ljmp
mov
and
adcb
xor
cmp
fs
pusha
inc
aad
movsb
enter
imul
mov
mov
jo
mov
out
inc
aaa
movsl
lea
jno
mov
pop
jae
and
mov
dec
mov
and
push
pop
mov
sub
jae
xor
test
and
es
add
push
xchg
inc
pushf
inc
xor
or
pop
push
mov
out
mov
or
lret
sbb
mov
aaa
jns
mov
enter
adc
mov
pusha
loop
js
or
inc
cmp
enter
push
xor
lods
ds
test
sub
sub
mov
jl
jp
inc
jae
sub
cmp
stos
lods
add
std
and
mov
das
imul
pop
mov
rcrw
adc
sub
xchg
adc
insl
jmp
or
mov
lahf
jl
push
outsb
in
pop
js
sub
add
decb
push
rcrb
js
add
gs
mov
add
dec
lahf
push
xchg
cmp
filds
mov
mov
push
xchg
in
mov
jno
mov
jp
insb
subl
fdivs
int3
mov
cmp
pop
cwtl
add
sbb
lret
push
sbb
mov
jns
push
xor
add
inc
cmp
mov
cmp
in
xchg
pushf
jecxz
vfrczss
aaa
iret
inc
ss
rorl
or
popf
pop
dec
cli
and
hlt
push
in
sbb
aad
scas
push
push
pop
mov
jno
out
push
mov
xchg
pushf
mov
pop
nop
inc
push
loopne
and
or
data16
mov
xchg
hlt
push
outsl
push
mov
and
adc
or
cwtl
icebp
into
mov
in
sub
mov
cmp
lods
add
test
mov
adc
insb
cli
jp
dec
lahf
in
sarb
push
outsl
ss
movsb
mov
sbb
inc
pop
lcall
roll
popf
jbe
add
mov
test
dec
leave
mov
lods
mov
cld
sbb
inc
cmp
cmp
sub
pop
mul
adc
notl
jl
insl
insb
and
sub
jmp
mov
ficompl
stc
fisttpl
je
push
sbb
jl
out
pop
push
dec
add
dec
and
adc
jle
or
add
imul
sbb
mov
jle
adc
shll
rcl
pushf
loopne
sti
fcmovnu
sub
jecxz
rcr
mov
push
jge
pop
mov
mov
xchg
xor
ss
sbb
repz
mov
dec
mov
jno
and
cmc
jno
lea
enter
sbb
shl
push
sbb
in
fldl
imul
dec
sbb
aam
mov
ja
fwait
jbe
jmp
sbb
jl
mov
fldl2t
push
outsb
pop
or
pop
mov
es
xchg
jle
mov
and
fcomip
add
leave
and
add
push
dec
insl
enter
push
fbstp
mov
or
aaa
xchg
insb
xlat
xor
and
sbbb
es
push
mov
outsl
hlt
popf
jbe
mov
stos
stos
pusha
inc
rcrl
add
mov
and
jecxz
lret
stos
cmp
pop
pop
repnz
lea
mov
in
cmc
mov
jnp
mov
jno
dec
sbb
sti
mov
int
cmp
pop
and
incb
scas
push
loope
xchg
loope
xchg
shll
and
mov
adc
dec
sbb
mov
dec
inc
loope
sub
jecxz
cli
xchg
jp
insb
lret
mov
sbb
aas
test
jno
ja
push
mov
lods
or
sbb
enter
scas
call
xchg
inc
sti
mov
sbb
xchg
dec
fs
out
pop
xor
addr16
jl
in
cltd
jae
jle
popl
cld
mov
inc
hlt
adc
cltd
loope
sub
push
repz
or
cltd
xor
cmp
and
in
movsl
ror
add
sub
pop
sbb
ret
add
out
sbb
push
adcl
cltd
inc
lock
mov
push
scas
js
cmp
dec
scas
xor
xchg
jns
scas
mov
push
loope
arpl
pop
cmp
rcl
mov
les
jae
inc
pop
aam
mov
or
outsl
addr16
je
insl
das
ret
cs
mov
nop
xchg
mov
faddp
leave
jnp
push
cmp
add
out
xchg
inc
shlb
hlt
mov
push
mov
push
xor
clc
push
sarb
outsl
mov
std
sarl
jecxz
outsl
pop
fs
lret
in
int
mov
mov
insb
push
sbb
sahf
push
aad
push
dec
adc
inc
sub
shlb
cmpsb
cmp
subl
add
mov
jns
lock
std
jmp
mov
xor
icebp
out
loopne
mov
test
imul
popa
mov
insl
sarl
pop
jp
js
sub
out
sub
xor
nop
pop
iret
mov
add
cmp
adc
imul
pop
jecxz
adc
lds
or
jo
dec
mov
test
pop
lret
sbb
dec
fimull
jae
pop
loop
push
ds
add
sbb
push
dec
jbe
lret
aas
xor
mov
push
mov
outsb
lret
in
mov
rcr
leavew
lret
push
adc
cltd
jmp
xchg
push
or
loopne
xchg
pushf
push
decl
pop
nop
jbe
push
aas
fildl
mov
dec
inc
xchg
dec
push
fwait
pop
cmp
jnp
push
lock
sub
int3
mov
or
pop
dec
out
icebp
cmp
int
jmp
or
mov
mov
dec
imul
lods
dec
cwtl
adc
inc
push
jo
mov
push
sbb
mov
bound
mov
or
mov
push
fs
int3
sbb
jg
push
ficomps
hlt
mov
push
inc
push
sahf
and
cmpb
setns
jmp
test
in
das
cld
arpl
into
mov
sbb
xchg
into
inc
dec
mov
and
cmpl
adc
rcr
xchg
add
in
xchg
out
or
ds
add
outsl
xor
cmp
lcall
and
in
xchg
lcall
aas
mov
idivb
or
in
enter
xor
pop
addr16
ds
lods
inc
mov
pop
scas
clc
call
cmpsl
sbb
lret
push
daa
add
test
in
movsb
sbb
jnp
inc
pop
inc
jb
addr16
ror
and
mov
cmp
sub
out
ss
sbb
push
dec
jmp
imul
rclb
bound
int3
jne,pt
sub
and
adc
mov
xchg
pop
fcomip
in
dec
cmc
jle
mov
push
fistps
and
add
enter
insb
stos
pop
insl
cmp
push
pusha
adc
je
inc
scas
jle
xchg
dec
sti
lahf
mov
inc
push
call
dec
jno
dec
aad
xchg
insl
arpl
lods
mov
cwtl
sbbb
test
lods
fstps
call
insl
and
xor
push
test
jne
hlt
je
lods
push
icebp
add
movsb
dec
mov
lahf
xor
in
jg
sbb
add
stos
push
xchg
pop
aaa
and
xchg
push
shlb
int
jae
sub
pop
fstl
mov
adc
iret
fiaddl
mov
ljmp
cmpsb
xor
subb
lcall
cmpsb
pop
xchg
loopne
clc
pusha
mov
cmp
sub
push
int3
aaa
ret
adc
shll
aam
sti
orl
int
pop
ljmp
mov
or
out
mov
fcmove
or
clc
adc
call
mov
sbb
or
xchg
out
arpl
xor
push
fsubs
fbld
push
mov
mov
mov
sub
and
lds
loope
mov
shrl
hlt
daa
jno
test
push
xlat
cmpsb
mov
cmpsl
lock
sahf
clc
mov
mov
fiadds
fnstcw
loopne
mov
adc
test
imul
push
in
aas
xchg
imull
mov
leave
ror
mov
sbb
dec
push
xchg
mov
gs
aaa
dec
cs
scas
push
mov
outsl
sub
xor
jne
out
jmp
pop
mov
lods
sbb
add
inc
jecxz
adc
aam
pop
imul
mov
push
inc
inc
mov
cmp
adc
mov
jo
movb
or
sub
mov
out
add
mov
and
int3
inc
fstpt
sub
sub
pop
adc
icebp
jb
xchg
movsl
bound
jns
ljmp
js
dec
ds
lock
push
int3
mov
fcmovbe
push
push
daa
mov
mov
popa
stos
into
sbbb
mov
push
mov
test
pop
jle
pmaxsw
xchg
jno
adc
dec
test
in
gs
call
scas
inc
fnstenv
push
fldl
jle
sub
dec
repz
mov
xor
stc
jae
sub
sub
inc
or
adcb
fs
inc
fldcw
sti
loope
orb
jmp
xorb
xchg
adcb
xchg
out
in
loope
mov
std
push
mov
cwtl
jnp
mov
push
lret
pop
push
jp
inc
pop
adc
pop
push
aad
lahf
push
mov
or
jb
mov
imull
jno
jbe
sbb
pop
roll
cwtl
push
dec
into
iret
outsl
pop
mov
sub
insl
push
add
rcll
xchg
cld
jb
fcmovnu
pusha
pushf
mov
cwtl
clc
jb
push
and
incb
adc
jmp
mov
add
loope
sub
mov
cmp
lahf
mov
arpl
sbb
pushf
mov
mov
push
or
inc
icebp
dec
cltd
rorb
add
pop
mov
push
cmp
shrl
push
lods
stos
mov
sti
sub
frstor
in
jb
repnz
dec
sub
mov
pop
outsb
xor
xchg
and
xor
jb
jne
sahf
xchg
shll
mov
mov
lods
push
fsubl
das
mov
dec
xchg
imul
sbb
mov
sbbb
shl
imul
dec
popa
lods
leave
in
arpl
xchg
in
xchg
jmp
lock
fnstcw
movsb
out
mov
daa
test
pop
push
in
int3
push
sti
test
mov
outsb
lcall
in
repz
pop
out
cmp
cwtl
mov
jb
loopne
jbe
mov
pushf
sub
xchg
and
mov
je
xor
xor
adc
push
js
pushf
ss
mov
jecxz
sub
in
mov
and
mov
mov
jl
subb
call
insb
loope
xchg
push
add
mov
sbb
test
xchg
cmpsl
pop
inc
pop
out
rolb
push
push
loop
frstor
wrmsr
xchg
inc
pop
aad
xor
mov
xor
adc
in
push
repz
and
hlt
dec
push
pop
call
xchg
int3
shl
adc
les
sub
gs
xlat
mov
or
push
mov
xor
jno
jb
xor
andl
jp
sti
adcb
stc
mov
add
push
dec
bound
add
mov
daa
subps
push
out
adc
stos
push
mov
mov
jle
rorl
lods
fildl
jp
mov
daa
adc
ds
xor
addr16
call
enter
ficoms
out
sub
adc
mov
dec
xchg
xor
mov
push
daa
out
es
jnp
inc
bound
jle
aad
jmp
pop
ja
jb
dec
sub
jmp
cmp
in
fldcw
cmp
daa
sub
mov
dec
cmovne
imul
insl
sub
arpl
ret
mov
fsub
dec
lock
loop
notb
adc
or
sub
or
mov
add
dec
add
icebp
xchg
pop
mov
in
inc
lahf
loopne
sub
dec
les
xor
test
cmp
in
dec
in
or
lock
mov
je
adc
lods
or
cwtl
popa
les
inc
and
adc
in
push
loope
ficompl
nop
lea
negl
cwtl
addl
hlt
and
add
xchg
jl
bound
fisttpll
pop
jmp
push
mov
dec
jo
cmp
xor
and
push
mov
js
mov
pop
cli
adc
jle
xchg
nop
in
es
pop
pop
mov
stos
lret
inc
fstl
into
mov
pop
push
push
fadd
arpl
adc
push
jmp
mov
xor
cmpsb
jmp
imul
and
cmp
jl
dec
mov
jle
nop
push
data16
arpl
arpl
icebp
orb
mov
pop
add
sub
add
xor
les
fcoms
inc
push
xchg
dec
das
out
sub
out
mov
xchg
push
movsl
add
mov
jns
fstpt
dec
xor
je
push
and
subl
sub
dec
test
push
and
inc
pop
fnstenv
push
jno
loop
add
jecxz
repnz
adc
cmc
data16
loope
subb
xor
add
test
popf
int3
outsl
jg
push
mov
add
cmp
imul
mov
lret
hlt
jge
aad
adc
movsl
mov
xchg
in
pop
fwait
xor
sbb
repz
xchg
mov
push
mov
jge
push
pop
iret
jmp
aam
adc
insl
mov
stc
push
sbb
dec
cmp
andb
adc
xlat
notl
xchg
pop
fucomi
outsl
out
pop
and
movsl
mov
out
push
cli
and
enter
adc
lret
roll
xor
test
test
in
push
jg
enter
fs
out
popa
and
mov
cmp
out
jo
fidivrs
imul
pusha
xor
dec
out
mov
cmp
add
inc
adc
int3
mov
ss
lods
push
xor
xor
repz
inc
mov
cmpl
xchg
adc
mov
mov
adc
cli
add
or
loope
dec
jnp
or
sub
repz
pop
mov
xor
out
std
sub
or
ljmp
addl
stos
mov
lret
xchg
arpl
pop
in
mov
aas
push
jno
sbb
sub
loop
lds
out
pop
out
mov
test
dec
cli
out
xchg
jle
jb
test
pop
fildll
loopne
jnp
ss
fildll
add
xchg
mov
mov
push
jbe
push
scas
int3
add
and
orb
bound
fsts
inc
popf
stos
call
arpl
stos
lds
cmpsl
adc
ljmp
iret
sbb
xlat
dec
notl
fstpt
cmp
add
in
in
push
mov
lahf
cmp
mull
lds
mov
xor
sbb
xor
inc
jecxz
call
les
insl
push
ljmp
xchg
mov
cli
sub
push
adc
insb
movsb
dec
xchg
inc
sarb
xchg
mov
xchg
ljmp
cmp
mov
jns
test
cmp
mov
js
push
mov
loope
mov
mov
xchg
ret
dec
or
sub
sarl
xor
aaa
cmc
sahf
shr
mov
dec
xor
mov
pop
xchg
sbb
dec
add
fcompl
cmpl
and
mov
les
out
jge
sti
in
adc
aad
jne
xchg
and
push
push
rclb
sahf
dec
jne
gs
out
fists
sub
sahf
int3
jl
fbstp
mov
ljmp
mov
xchg
ficoms
push
aad
xchg
cmp
pop
and
jg
cmp
in
add
sub
mov
lret
and
xchg
pop
push
cltd
movsb
adc
inc
imulb
icebp
test
push
add
xchg
sub
pop
xchg
mov
jnp
test
int3
daa
sbb
push
jge
shrb
mov
mov
mov
push
lahf
or
xor
lret
ret
orl
es
lock
push
fs
dec
or
push
and
lahf
arpl
xchg
out
inc
add
inc
inc
sbb
aad
aas
cmpsl
xchg
popa
xchg
mov
dec
mov
call
mov
dec
jl
push
dec
and
and
into
xor
fidivl
lret
mov
jns
sub
adc
mov
les
int3
dec
pop
sbb
call
cmpsb
mov
in
xor
cwtl
mov
sbb
ljmp
cmp
lock
sbb
lds
push
lret
push
or
xor
mov
ja
pushf
iret
popf
or
ss
movsb
xchg
pop
mov
mov
addr16
mov
cmp
out
aam
filds
inc
push
xor
mov
xor
jae
addr16
inc
sbb
fisubs
gs
mov
clc
mov
out
xor
push
cltd
mov
js
xor
cmp
movsl
fisubrl
xchg
and
cli
xor
jns
jo
sahf
jecxz
sub
test
push
inc
jge
adc
pop
aam
inc
mov
pop
imul
add
icebp
fcompl
mov
outsb
xchg
push
out
cmp
xchg
jl
xchg
xor
cmp
lods
and
mov
cmp
push
fnstsw
xchg
or
xor
fidivrs
insb
push
cmp
cltd
cmp
adc
pop
icebp
add
sub
iret
js
jno
mov
std
xchg
add
arpl
jne
inc
push
rcrb
les
mov
inc
and
xchg
inc
ja
xor
lret
lock
cmpsb
fcomi
das
adcl
push
inc
add
cltd
mov
sub
pusha
mov
mov
aas
cmp
rclw
mov
jnp
movsl
sbb
das
lds
sbb
fbstp
fisubl
pop
fwait
bound
int
scas
jae
push
lock
aaa
scas
insl
daa
clc
hlt
jnp
cwtl
fisubrs
test
xor
lret
xchg
arpl
adc
lret
inc
mov
icebp
dec
or
jl
and
imul
fiadds
and
popa
in
scas
into
fnsave
arpl
addr16
add
inc
xchg
lock
sub
push
js
push
or
sub
aas
and
add
insb
pushf
outsb
fistps
mov
and
std
lcall
mov
ss
push
addb
fcoml
adc
or
inc
mov
xchg
inc
xor
orb
jb
adc
xor
or
sbb
dec
push
sti
ss
aam
add
push
les
sub
lods
xor
and
push
mov
dec
xchg
mov
out
cmp
movsb
icebp
fnstsw
lahf
adcb
sarb
add
push
cmp
jns
mov
aam
pop
mov
shrb
out
popa
add
mov
test
push
inc
into
in
rcrl
sub
iret
adc
insl
mov
jne
ja
je
adc
cli
mov
push
sub
mov
sub
pop
sbb
sbb
rcll
lea
mov
dec
loope
daa
dec
mov
add
mov
xor
mov
sbb
nop
fiadds
test
lds
lret
test
mov
sbb
mov
push
enter
or
and
sahf
xchg
dec
push
push
pop
cmp
enter
sbb
xchg
jle
cmp
dec
cmpsl
and
xchg
mov
pushf
xchg
add
mov
aas
inc
xchg
arpl
ror
lcall
push
and
out
inc
mov
cmp
insb
int
add
in
add
movsb
fs
add
loop
mov
sub
insb
ds
arpl
dec
add
bound
outsb
ror
jg
stos
jmp
jge
shll
cmp
cld
fcoml
stos
loope
stos
imul
cltd
cld
xchg
pop
cmpsb
inc
stos
add
div
roll
cmp
or
mov
cmpsl
jle
adc
aam
lock
sbb
pop
adc
je
mov
jmp
cmp
test
jg
sar
js
push
mov
movsl
and
or
jo
cmp
mov
fdivrl
xchg
ret
mov
mov
mov
mov
adc
push
xchg
loop
outsb
inc
push
xchg
call
or
sub
dec
adc
add
hlt
cmc
test
mov
out
push
pusha
out
test
push
push
push
cli
sti
testl
sti
arpl
inc
adc
and
imul
in
mov
cmp
adcb
xchg
lds
and
jne
and
fimuls
outsb
fcompl
or
mov
or
push
or
xor
sbb
into
sahf
jecxz
dec
out
test
mov
fildl
jns
mov
bound
gs
mov
rorb
jge
fisttpll
cltd
jnp
ljmp
fsincos
mov
dec
mov
cmp
mov
stos
mov
stos
mov
push
pop
cmp
cli
and
push
ljmp
lds
std
or
lcall
push
fidivl
or
test
cltd
jbe
lret
pop
sti
push
mov
dec
or
and
add
pop
adc
out
sbb
cmc
stos
and
ss
add
lds
int3
jnp
enter
dec
lahf
jo
outsb
adc
push
dec
out
loope
jno
int
inc
into
or
adc
mov
insl
pop
and
xchg
loopne
das
ret
inc
mov
cltd
sbb
inc
and
push
imul
sub
xor
jnp
pushf
sbb
cmc
fistpll
or
jnp
xor
mov
add
mov
popa
add
xlat
out
into
add
pop
ljmp
lahf
adc
or
shl
push
daa
out
adc
testb
dec
jp
lds
or
data16
push
xchg
dec
mov
fwait
mov
mov
adc
mov
ret
push
out
loope
push
add
setno
out
inc
clc
cmp
repnz
in
cld
and
xchg
add
or
sub
push
add
inc
inc
pop
fcomp
dec
add
xchg
sub
clc
int3
adc
jb
adc
push
cli
fwait
js
idivb
add
add
repz
mov
aas
and
inc
cmp
jnp
inc
xchg
push
cmc
add
mov
imul
sbb
inc
pop
xchg
enter
aam
push
idivl
lods
mov
mov
sub
pusha
jl
outsl
adc
aas
push
jb
repz
push
das
push
fidivrs
mov
xchg
pushf
fdivrs
push
pop
jbe
enter
mov
or
ljmp
insb
xor
sub
fwait
int3
movsl
pop
jns
add
push
jno
mov
subl
and
push
imul
fimuls
fnstsw
daa
inc
cs
nop
mov
push
xor
push
loop
dec
push
xorl
xchg
pop
pop
sub
push
sti
or
mov
jo
dec
je
push
xchg
orl
mov
gs
insl
inc
mov
push
sbb
push
xor
fimull
ret
aam
call
bound
in
pop
push
loopne
mov
cld
add
cmpl
aas
mov
loopne
int3
rcrb
lret
xchg
dec
iret
jp
imul
xchg
mov
shl
nop
js
test
lods
or
cmc
fwait
test
test
cwtl
and
call
outsl
lret
sbb
in
rcrb
mov
leave
mov
pop
dec
pop
xor
pop
in
loopne
fiadds
sbb
xor
mov
popa
call
lret
das
lds
jp
in
mov
dec
adc
idivb
push
and
scas
stos
pop
push
call
out
xor
xabort
stos
sbbb
jecxz
hlt
jmp
push
scas
out
add
inc
outsb
push
jle
mov
lcall
sbb
add
push
js
cmc
aam
xchg
je
inc
jb
jnp
sub
clc
icebp
in
out
cmp
push
xchg
fcomi
mov
cmp
stc
and
jbe
mov
inc
cmp
or
aam
mov
inc
inc
mov
les
jecxz
data16
lcall
xchg
xchg
les
jno
lock
sbb
pusha
push
pusha
stos
inc
xchg
insl
clc
xchg
sbb
shll
mov
in
jae
lock
outsl
repnz
push
outsb
jns
dec
and
lods
add
sbb
xor
aaa
cmp
nop
in
push
push
cld
inc
jb
std
jae
push
movsb
out
and
sbb
xlat
mov
jl
xor
mov
push
xor
aam
in
mov
cmp
sti
pop
and
daa
push
pusha
aad
jae
rclb
push
aaa
punpckhdq
push
sarb
pop
inc
jbe
jno
pop
loop
push
inc
or
iret
lds
and
mov
mov
jae
cmc
adc
add
movsl
orb
into
mov
sub
adc
inc
or
sbb
pop
clc
imul
cli
mov
mov
adc
lcall
or
outsb
xor
js
sub
mov
push
sbb
jl
xchg
pop
rclb
cmc
adc
mov
in
int
sbb
xor
mov
cmp
jo
inc
shrb
xchg
ds
add
cmc
daa
aaa
mov
jmp
sub
sbb
dec
addr16
xchg
adc
ja
lods
fsub
hlt
lods
lods
int3
adc
pop
inc
inc
mov
xor
fldcw
mov
movb
stos
or
pop
lret
stos
cmp
loop
push
mov
mov
cmp
ret
cmp
in
addr16
lahf
jns
cltd
mov
push
rorl
adc
mul
pop
dec
add
fs
mov
xor
mov
dec
xlat
xor
dec
push
gs
dec
push
vpsllq
sti
mov
ja
pop
pop
adc
inc
xchg
aaa
scas
push
sar
mov
shl
sahf
sub
inc
leave
mov
mov
adcb
ss
stos
cmp
mov
inc
dec
loope
or
adcl
mov
mov
imul
out
jp
fs
jbe
data16
push
out
mov
arpl
add
jecxz
xchg
inc
mov
movsb
fs
imul
cmp
jns
mov
push
push
out
test
ss
lds
mov
jg
pop
xchg
insl
jns
cmp
push
mov
outsl
and
pop
lods
sbb
xor
mov
cli
lret
roll
frstpm(287
push
cmp
cltd
imul
inc
stos
mov
adc
shrb
fwait
pop
arpl
stc
test
sub
data16
out
popf
subl
cmp
outsl
les
xchg
in
xchg
cmpsl
cmp
mov
cmpsb
sub
out
mov
pusha
roll
enter
pop
push
sub
je
inc
add
popa
repnz
stc
xchg
inc
test
inc
cmpsb
mov
movsb
add
xlat
repnz
clc
fcoms
pushf
jb
mov
icebp
xor
ffree
xor
ret
rorb
and
add
out
lahf
adc
push
mov
test
lea
push
iret
xchg
int3
mov
pop
xchg
ds
mov
jle
int
mov
jecxz
daa
fs
jnp
xchg
test
adc
out
xchg
out
adc
dec
lods
mov
xchg
call
das
dec
dec
push
jbe
sub
jmp
adc
mov
adc
adc
mov
das
enter
cmp
test
enter
lcall
ror
insb
ret
ljmp
popf
and
add
orb
adc
mov
test
mov
mov
jmp
aaa
pop
repz
xor
leave
sti
popa
xchg
jnp
or
sub
addr16
cmpsl
cld
loop
pop
or
jecxz
mov
sar
push
and
orb
shll
in
jmp
sbb
stc
xchg
pop
icebp
enter
cltd
adc
ret
shl
insb
xor
pop
fs
stos
enter
push
push
inc
pop
popf
jne
nop
inc
fs
repz
jnp
sbb
and
push
ret
pop
mov
sbb
lcall
leave
dec
push
jmp
sbb
jg
inc
movsl
test
jb
push
dec
jb
test
cwtl
sub
imul
xchg
and
mov
out
jle
jge
dec
loopne
pop
push
das
insb
add
mov
vbroadcastf32x8
ret
jb
inc
loopne
int3
movsb
cmp
add
sbb
lock
sub
cmpsl
pop
cs
xor
sub
es
rol
xchg
das
lret
or
mov
mov
xchg
pop
movsl
xchg
scas
mov
mov
and
out
in
jb
mov
mov
jo
clc
outsb
data16
out
mov
or
stc
xchg
mov
and
ljmp
xchg
or
pop
sub
push
inc
jge
add
mov
lret
push
adc
fwait
test
inc
in
jbe
and
adc
sub
test
out
lea
loope
or
sti
mov
mov
test
mov
aam
test
mov
aaa
pop
xlat
jg
and
imul
sub
mov
iret
shlb
mov
sub
adc
cmpsl
mov
lret
cli
mov
repnz
pop
sbb
ljmp
pushf
or
cmp
xor
mov
or
jmp
add
mov
mov
fwait
or
into
jp
push
dec
and
scas
sbb
lock
inc
mov
enter
xlat
cmp
add
dec
mov
xlat
jg,pn
sub
push
divl
cmpsb
test
jmp
pop
adc
inc
xor
mov
jae
dec
cld
mov
mov
je
insl
daa
add
divb
lea
xor
das
je
aam
cmp
addr16
int3
cwtl
ss
dec
xor
pop
loopne
arpl
clc
outsl
pop
mov
pop
jno
push
fisubrs
jae
cmp
pusha
shl
arpl
fdiv
sub
hlt
rcrb
outsb
adc
call
push
inc
orl
jp
add
iret
mov
jnp
mov
je
pop
popf
sar
imul
pop
sub
loopne
push
xchg
cmp
movsl
mov
call
or
jmp
jmp
ret
ror
insb
adc
jle
jmp
loopne
lea
or
mov
or
cmpsl
pushf
test
into
gs
movsl
fbld
icebp
adc
out
and
push
or
in
jg
jmp
test
xor
mov
sub
add
mov
inc
lds
mov
add
cmp
pop
loop
sbb
mov
cmp
inc
mov
cs
adcl
mov
fmul
cmp
lcall
cmp
push
inc
data16
mov
aaa
aas
mov
push
enter
jge
js
testb
xchg
push
pusha
jmp
sub
xchg
icebp
leave
cmp
cltd
mov
fwait
adc
jp
mov
faddl
aam
sbb
js
test
push
dec
pop
stos
sbb
push
scas
pop
adc
inc
lret
bound
mov
movsl
aam
sbb
adc
mov
aas
sbb
mov
or
cmp
ja
cwtl
fdivrs
leave
mov
mov
sub
fidivrs
lcall
cmpsl
imul
int
cltd
add
pop
imul
addl
sbb
ja
mov
xchg
sbb
mov
js
pop
adc
adc
sub
imul
stos
xchg
loopne
mov
push
xor
push
and
mov
out
test
mov
inc
cmp
jmp
stos
mov
out
dec
mov
sub
cld
mov
mov
cli
out
sbb
inc
push
jg
mov
mov
daa
stc
and
and
pavgw
push
fs
cmp
js
fs
fisttps
mov
mov
iret
pop
sub
adc
xchg
mov
sub
inc
dec
sbbb
mov
or
mov
jle
xor
mov
inc
dec
out
testb
sbb
xchg
mov
xchg
out
popf
mov
les
mov
cmp
sub
ss
js
filds
ljmp
pop
sub
lahf
lods
cmp
add
shl
cltd
repnz
sti
jne
mov
cmpb
sub
mov
mov
stos
sub
and
cmp
dec
push
arpl
mov
or
mov
hlt
mov
sbb
repz
icebp
push
jg
fucomi
jge
mov
add
dec
stos
fstpt
loope
imul
push
popf
or
xor
test
into
sub
test
jle
mov
push
mov
lock
icebp
push
push
and
lcall
gs
mov
mov
push
jno
mov
jnp
jecxz
push
push
test
or
dec
aam
jae
mov
sub
xchg
inc
dec
jge
mov
and
fstpt
pop
pop
sahf
stc
xor
adc
mov
rcrb
jo
imul
inc
dec
enter
pop
lea
lret
jg
inc
add
xchg
jg
adc
sbb
push
cmpsl
sahf
sub
jmp
dec
inc
scas
scas
rcll
mov
push
addl
in
push
rolb
inc
ret
mov
xchg
mov
adc
push
sub
fmul
in
push
dec
stos
cmp
mov
test
rcll
es
pop
sbb
hlt
xchg
outsl
in
inc
lods
je
ljmp
cmpsb
pusha
loop
sub
mov
jmp
inc
das
test
push
xlat
mov
repnz
xor
push
push
mov
inc
por
js
leave
in
das
cs
ret
pop
or
popa
jbe
ds
add
pop
insl
ds
sahf
jl
lods
lahf
and
adc
test
into
and
fldcw
es
ss
xchg
scas
adc
repnz
cmp
aas
xchg
mov
sub
push
jne
ss
sbb
pop
mov
adc
dec
fxam
jp
xor
jmp
call
inc
ret
mov
je
pop
cmc
insb
movsl
push
scas
push
repnz
add
cmp
and
addl
sbb
push
aaa
inc
je
repz
sub
data16
pop
dec
and
inc
addr16
nop
pop
pop
xchg
nop
mov
int
jb
pop
adc
dec
xor
clc
dec
rorb
and
and
pop
sbb
xor
negl
sbb
cmp
mov
jecxz
fwait
sub
fidivrs
or
sub
nop
add
xchg
jns
es
sbb
cltd
inc
shl
arpl
or
sub
pop
adc
out
sar
ljmp
push
lds
adc
lcall
jne
inc
pop
ss
push
les
aas
test
pop
xlat
into
bnd
sub
popf
movsb
loopne
test
push
mov
xchg
loope
inc
popa
pop
shrb
push
enter
cmp
test
loop
lods
out
movsb
test
fyl2xp1
btr
sbb
in
je
dec
inc
add
xorl
push
mov
xor
test
adc
fisttps
test
movl
stos
sbb
sti
push
cwtl
popf
cmp
les
jo
repz
pop
xchg
jns
xor
push
test
sbb
ret
test
pop
cmc
pop
xor
lret
jne
xchg
sub
mov
divb
sar
leave
arpl
cmc
enter
push
pushf
nop
rcrb
iret
in
sbb
pop
push
test
pop
mov
in
popa
cli
cmpsl
in
jle
icebp
mov
sub
jg
adc
dec
jb
mov
xchg
fnsave
pusha
mov
aaa
les
stc
ss
nop
sbbl
xchg
daa
jle
out
adc
mov
mov
pop
jecxz
pop
lods
jl
leave
xor
push
mov
xchg
cltd
sbb
cld
repz
or
and
cmp
xchg
mov
dec
cli
add
mov
ret
sbb
xor
lods
aaa
jnp
mov
ja
jle
pop
dec
ret
cmpsb
mov
pop
jns
jle
cmp
mov
iret
sub
fs
and
les
inc
mov
push
test
inc
sub
jb
xor
sub
sti
mov
fiaddl
dec
jecxz
xchg
jb
xchg
je
ja
loop
outsl
jp
adc
pop
jg
xchg
rcll
and
aad
stos
out
repz
inc
pop
cltd
xchg
inc
into
mov
subl
push
pop
pop
lret
or
and
add
xchg
sub
xchg
mov
pop
push
js
mov
inc
mov
inc
sbb
mov
cltd
inc
popf
leave
cli
mov
out
scas
mov
stos
setle
iret
push
enter
pop
jo
and
xor
adc
lret
dec
push
dec
ja
xchg
push
jo
ret
inc
out
adc
push
jnp
pop
insb
sahf
add
out
arpl
aas
lods
sub
sub
iret
repz
xlat
test
xor
dec
and
add
ljmp
sub
adc
rcrl
test
and
pop
divb
out
mov
popa
cs
es
repz
into
sbb
cmpl
test
das
mov
fldt
inc
mov
vcomisd
ljmp
push
into
jge
es
mov
jo
lea
xor
imul
add
mov
mov
mov
aad
clc
mov
idiv
push
push
pop
add
lods
subl
jmp
xchg
dec
mov
cmp
in
insl
std
jmp
sub
outsl
and
mov
fimull
dec
jecxz
pop
mov
pop
sbb
daa
arpl
push
jbe
jp,pn
aas
jmp
insl
push
sti
ss
data16
and
mov
out
and
ja
ds
push
daa
jle
hlt
imul
aaa
cmpsl
dec
pop
sub
xchg
cld
cmp
pusha
push
cltd
push
pushf
cmp
lret
rcrb
pushf
adc
pop
arpl
inc
or
shlb
cltd
xchg
pop
imul
aam
data16
adc
inc
mov
pop
cmp
xorl
mov
notl
aad
mov
test
sbb
xor
in
sub
mov
adc
xor
pop
xor
mov
movsl
js
ljmp
push
addr16
icebp
and
ja
or
xchg
dec
inc
add
dec
mov
int
std
loop
dec
jle
pop
jecxz
add
js,pn
sbb
jmp
mov
dec
inc
andb
arpl
out
dec
cmc
icebp
and
aam
xchg
dec
scas
pushl
xor
std
pop
add
jle
js
inc
dec
inc
ds
shrb
mov
cmp
andb
pusha
push
int
pop
or
insb
aas
dec
cld
xchg
add
xlat
jae
xchg
repnz
shrl
cmpl
cmc
push
lcall
je
pop
mov
in
shr
inc
nop
pop
pop
dec
lds
jno
cmp
call
dec
mov
movsb
jl
sub
inc
pushf
sbb
in
sbb
outsb
mov
inc
inc
xchg
push
push
xlat
sub
repz
scas
cltd
pop
push
adc
push
pop
cmpsl
adc
pop
into
aam
sti
jns
into
xor
cmpsl
fcoml
and
jnp
sti
xchg
xchg
je
mov
push
sub
out
lret
loop
dec
and
mov
add
add
inc
inc
dec
lock
jmp
pop
push
or
ret
ljmp
sarl
sbb
lock
stc
xchg
xchg
add
jl
lds
mov
cmp
xor
sub
test
mov
je
adc
popf
aaa
pop
jae
sub
pop
outsb
sbb
sub
cmp
jno
inc
andb
sbb
cmpsb
xchg
inc
mov
mov
ret
cwtl
insl
shll
cmpb
pushf
js
popf
cmp
pop
sub
sub
add
movsb
mov
mov
cli
sbb
sbb
mov
mov
in
cmp
adcl
xchg
incl
push
xor
inc
mov
jmp
mov
jb
push
fdivrl
cltd
shl
xchg
mov
and
sbb
inc
divl
addr16
push
or
and
sub
outsb
dec
enter
xchg
mov
outsl
andb
pop
pop
into
repz
ljmp
jg
pop
dec
into
addr16
sub
lahf
xor
es
jnp
shrl
pop
dec
inc
std
iret
or
icebp
je
pop
ljmp
mov
clc
or
clc
mov
jne
pop
icebp
leave
bound
lret
loop
mov
dec
and
out
adc
adc
sahf
xchg
xor
push
jns
mov
jmp
and
sub
out
jns
into
jae
push
in
ljmp
adc
add
add
xchg
mov
sbbb
xchg
cld
jmp
enter
jbe
push
sbb
mov
fucomip
mov
cmp
jb
sar
mov
inc
jg
jns
xchg
cmpsl
mov
and
mov
xor
mov
jg
pusha
loope
shl
addr16
and
cwtl
cltd
adc
push
lret
lds
dec
jle
xchg
push
sahf
xor
fidivl
aaa
loopne
jg
pusha
aaa
inc
movsb
loope
mov
dec
out
or
xchg
and
shll
popf
shll
push
dec
lret
loope
sahf
adc
xor
push
fwait
je
in
orl
scas
and
enter
andb
int3
jbe
inc
inc
mov
push
mov
inc
inc
outsl
fdivrl
dec
rorb
mov
jno
fsubrs
movsb
lcall
out
cmp
dec
sub
adcl
jne
adc
xchg
inc
or
data16
nop
jp
inc
lret
mov
inc
fists
mov
mov
mov
push
jbe
sub
ja
and
test
lret
xchg
out
stc
pop
and
cmpb
cwtl
shrb
insl
rcrl
jns
lds
imul
jg
inc
xchg
ja
fs
jb
lret
in
mov
dec
sbb
mov
imul
stos
insl
xor
cwtl
and
test
xor
test
inc
push
xor
pop
or
push
mov
imul
add
pop
in
imul
movsl
mov
lds
pop
in
xchg
cmc
and
andb
mov
sar
loopne
in
mov
inc
clc
sub
sub
in
sbb
arpl
cli
mov
ljmp
cmp
mov
js
inc
inc
mov
imulb
mov
pop
stc
fsubr
daa
fdivs
push
repz
sub
sbb
jo
mov
push
in
cltd
xor
shl
and
std
sbb
inc
sahf
and
sub
ffree
add
idivl
push
int3
mov
add
push
hlt
push
and
xor
inc
inc
mov
sbb
cmpsb
xlat
mov
fldl
mov
xor
or
adc
xor
cld
scas
lods
fs
push
mov
mov
pop
pushf
rcll
fimuls
cmp
lds
dec
jne
xchg
call
insl
pop
sbb
sub
cmpsl
cmpsb
lea
in
add
aaa
sbb
xchg
das
sbb
mov
add
out
test
pop
mov
scas
sbb
mov
imul
cmp
pop
out
jecxz
and
dec
mov
sub
jbe
int3
insl
pop
push
cld
or
xchg
movaps
hlt
in
cmp
push
je
ret
mov
pop
dec
fs
jmp
rorb
inc
push
loope
xor
mov
fimull
add
ss
push
xor
inc
rcrl
fsubs
int
cmc
jns
rcll
push
jle
mov
into
imul
lret
lea
sbb
inc
push
xchg
das
mov
icebp
and
test
sbb
outsb
lcall
mov
or
outsb
mov
xchg
add
call
scas
or
adc
push
push
sar
hlt
popf
popl
pop
sti
test
insb
pop
shrb
fidivl
pop
cmpsl
xor
lods
add
sub
pop
push
or
jo
int
mov
inc
aas
sbbb
out
add
pop
inc
sub
idiv
sub
jl
pop
lret
pop
test
cmp
lods
sub
adc
lock
mov
das
jnp
cmp
les
push
mov
sbb
push
test
xor
xchg
mov
es
out
mov
popa
add
sub
lcall
rolb
push
pop
cmp
jmp
mov
mov
stc
inc
lods
dec
out
pop
popf
and
test
fldln2
lahf
push
jae
mov
sub
ja
mov
or
call
jbe
push
shlb
inc
popf
sub
xchg
pop
push
sti
nop
jg
je
ds
sub
push
fcomi
pop
cmpsl
mov
xor
cmp
jg
and
jl
pop
cmp
ja
jne
push
push
jbe
adc
js
add
into
bound
jnp
gs
xchg
jns
dec
pop
lea
lds
xor
sbbl
mov
cmpsl
les
mov
shll
popa
in
jbe
jo
push
clc
cli
mov
adc
adc
add
sub
sbb
dec
loop
pop
les
jo
jns
shlb
mov
push
test
incl
jno
rclb
aad
insl
inc
mov
popl
inc
push
sti
ret
pop
cmp
lods
push
mov
xchg
jecxz,pt
mov
push
xchg
sub
push
les
stos
dec
xchg
lods
mov
outsl
sahf
int3
fwait
xchg
ja
or
gs
cmp
je
pushf
mulb
incb
in
arpl
mov
xchg
aam
aam
jo
mov
and
xchg
out
and
jmp
push
out
insb
and
cmpsb
xor
or
data16
outsl
aad
push
mov
push
hlt
sub
aas
sti
call
insb
gs
int
mov
aas
mov
jle
mov
or
pop
and
dec
mov
sub
mov
mov
push
sub
mov
pop
leave
xchg
push
mov
mov
sub
out
cmp
fistpll
in
scas
mov
add
loopne
pusha
sub
push
hlt
inc
sub
push
sub
adc
arpl
push
shll
mov
lret
cs
fs
mov
jae
fimuls
das
adc
lods
push
lods
pop
adc
repnz
xchg
das
inc
adc
movsb
jecxz
cltd
call
lock
data16
adc
lret
sub
adc
hlt
or
push
leave
sbb
or
xchg
push
xorl
push
dec
stos
inc
pxor
nop
cmpsb
lock
xchg
movb
pop
cld
rorb
fcoml
lods
out
je
into
rclb
pop
gs
pop
sbb
repz
adc
xchg
imul
push
mov
addr16
dec
popa
lret
sbb
cmp
pop
out
lods
adc
aas
fcompl
mov
in
jno
add
push
notb
jne
xor
jbe
adc
xchg
dec
je
icebp
cltd
ss
cwtl
lcall
jb
outsb
clc
mov
push
adc
xor
mov
pop
sahf
dec
cmp
hlt
mov
dec
jae
cmc
pop
mov
ja
gs
mov
in
stc
icebp
xor
subps
xor
fisttpl
sub
and
shll
and
iret
lods
test
and
and
in
jl
scas
insb
add
lcall
in
sub
hlt
jae
mov
in
lret
decb
lahf
xor
out
mov
aad
sbb
xchg
in
pop
repz
enter
cld
gs
lcall
cmc
mov
and
mov
mov
xchg
stc
push
adc
mov
push
mov
sahf
imul
mov
in
push
in
lods
stc
sahf
inc
fisubs
dec
cwtl
add
xchg
les
test
jne
mov
push
ficomps
mov
sbb
jecxz
fdivrs
xor
mov
sub
test
rcrb
add
adc
aas
addb
mov
cld
jg
loopne
mov
dec
leave
xchg
adc
rorl
mov
bound
lcall
jo
xchg
ret
dec
xchg
add
arpl
fstpl
es
sub
mov
das
in
and
pop
push
cmc
sbb
cmp
movsl
or
add
add
jo
xchg
and
push
xor
jp
mov
gs
sbb
mov
test
int3
sbb
loopne
inc
movsb
mov
aad
mov
dec
mov
stc
int3
sbbl
add
fiadds
add
pop
adc
add
pop
xlat
lahf
mov
fisubrl
pop
aas
and
cltd
in
push
loope
cltd
mov
scas
sub
sbb
cmp
in
cwtl
jb
add
scas
in
push
scas
pop
pop
movsl
cmpsl
jmp
lock
les
mov
faddl
mov
insl
and
dec
sub
aam
mov
lods
imul
out
dec
sti
dec
pop
in
idivl
fnstcw
jmp
xchg
rolb
lods
inc
outsl
jne
mov
mov
dec
cmpsb
in
mov
mov
mov
xchg
je
es
mov
mov
jg
xor
scas
sub
xor
adc
mov
or
call
dec
sub
pop
pop
subl
pop
xchg
call
xchg
cli
sub
loop
fidivrl
stos
inc
jle
mov
cli
cmpl
adc
push
mov
daa
add
ljmp
bound
gs
mov
jp
jns
xchg
lea
outsl
out
push
lock
fiaddl
fldenv
xchg
lret
inc
and
icebp
push
insl
fnstenv
jmp
shr
add
clc
mov
rcrb
inc
mov
jae
popf
sub
out
dec
mov
push
mov
xor
push
dec
xchg
popf
adc
in
fisubs
outsl
pop
int
xchg
out
nop
mov
rcr
add
stos
dec
pushf
jb
call
out
sub
and
and
fsubrl
cmp
push
cmp
adc
dec
cmpsb
inc
mov
mov
xchg
adc
hlt
xor
mov
lahf
inc
addr16
inc
mov
fcomps
insb
mov
push
xlat
ja
shlb
add
pushf
mov
popa
les
push
jo
lods
fdivrp
mov
iret
mov
xchg
les
gs
aaa
roll
add
out
sub
lea
xchg
lock
add
or
push
dec
mov
pop
or
mov
add
ljmp
push
mov
mov
ja
pop
pusha
aad
xchg
popf
or
jge
push
mov
jns
jg
rcr
jmp
in
insb
shll
das
mov
add
out
and
push
push
pop
add
and
adc
orb
mov
rcll
dec
or
inc
andl
jge
cli
call
shrl
dec
repz
cld
stos
dec
xchg
repz
jmp
in
xchg
mov
dec
fcoml
iret
ljmp
push
call
xor
push
xorl
add
inc
lods
lahf
mov
xchg
cmp
fisttpl
out
sbb
pop
movsb
jnp
xchg
sbb
lea
lods
rorb
jl
jmp
xchg
jns
push
stc
scas
jns
xor
sub
mov
and
mov
push
lods
ja
mov
xchg
cmp
ret
xchg
add
cmpsl
test
out
push
fs
push
imul
sub
pop
xchg
add
dec
gs
push
idivb
iret
outsl
cmp
pushf
es
xorb
or
ret
push
push
push
lret
pop
push
sbbb
andl
xchg
push
not
pop
or
lods
mov
xor
out
sahf
aaa
push
mov
mov
and
mov
ret
pop
aam
jmp
je
mov
outsb
or
loop
or
pop
pop
sub
lea
imul
sbb
ja
xor
addb
pop
out
dec
pusha
jne
or
test
orb
pop
pop
dec
sub
mov
in
mov
jge
jle
push
cmpsb
stc
inc
jae
aaa
and
add
loope
adc
xchg
mov
mov
aas
pusha
pop
inc
push
ret
adc
pop
push
sbb
popa
aam
cmc
aad
outsb
or
pushf
mov
push
jmp
mov
pop
sbb
xchg
dec
or
outsl
jecxz
pushf
daa
pop
bswap
jo
sbb
pop
in
sbb
test
adc
dec
sbb
pushf
jae
fimull
das
sub
mov
inc
mov
addr16
cmp
jnp
lods
lret
lea
popa
pop
aaa
imul
out
gs
out
pushf
in
add
sub
mov
xchg
sub
xor
pop
xor
pop
popf
dec
xchg
clc
xor
ret
pop
divl
loopne
movsb
cld
and
dec
adc
cmp
xor
testl
or
and
sub
pop
xchg
xor
jns
jg
push
xor
mov
inc
jb
in
sub
cld
xor
cmpsb
out
jo
lcall
mov
inc
fisttpl
cmp
mov
lret
arpl
pop
test
adc
stc
mov
in
loop
or
scas
add
pop
jl
jno
leave
push
movsl
push
aaa
jo
lods
out
popa
mov
lahf
push
popa
add
or
out
add
pop
push
or
dec
mov
dec
xchg
bound
lahf
loop
cmp
stc
out
and
sub
jl
or
movsl
mov
cli
add
push
push
mov
int
loope
xchg
add
addr16
ljmp
dec
js
fldenv
out
div
aad
and
fdivrs
mov
inc
push
xchg
ret
mov
jecxz
mov
icebp
addr16
adc
mov
adc
les
stos
movl
cwtl
nop
inc
mov
push
cmc
lret
lahf
inc
cld
das
pusha
sbb
push
dec
cmc
inc
das
inc
xchg
adc
ror
pop
push
aas
pusha
xor
pushf
mov
negl
add
inc
xor
push
jge
mov
negl
test
in
mov
pop
mov
pop
push
add
out
scas
lds
sbb
pusha
xor
xor
fdivrl
loope
aas
or
inc
jmp
test
pushf
inc
jecxz
mov
xchg
test
pusha
into
pop
inc
adc
popf
loope
cmpb
in
add
imul
lret
out
lods
ret
mov
mov
or
jno
mov
repz
sub
cmpsl
xchg
jmp
pop
pop
mov
dec
jb
test
and
mov
or
lods
xchg
out
out
cs
in
adc
mov
lock
nop
leave
mov
gs
cmp
push
xorb
adc
pop
or
mov
xlat
xchg
cmp
aas
in
jae
scas
cmp
ds
xor
dec
sbb
ret
sub
inc
dec
fcmovnu
and
sbb
adc
and
sub
clc
leave
xchg
and
aad
dec
mov
pushf
out
pop
jmp
add
lahf
cmp
or
or
push
jno
jl
sub
mov
mov
test
loope
and
cmp
insl
add
xchg
jns
mov
ljmp
dec
in
cmpb
or
cmc
dec
jecxz
in
ja
pusha
fdivs
jg
sahf
jb
cmpsb
xchg
andl
mov
cltd
pop
testb
xchg
outsl
mov
int
imul
cmp
and
cs
rcr
jmp
xchg
cmpsl
popf
in
fs
into
in
dec
push
fwait
ret
mov
sahf
push
dec
lcall
or
push
test
or
mov
push
loop
lock
loop
sbb
inc
out
mov
lea
pop
lret
into
incb
and
pop
mov
adc
lds
roll
xor
mov
inc
push
push
fnsave
dec
and
cmp
push
mov
cmp
mov
ja
mov
sbb
gs
push
mov
data16
cli
or
xchg
xlat
sbb
mov
in
mov
fldenv
inc
xchg
paddb
push
pop
ret
ret
push
push
xor
inc
xchg
ljmp
nop
sbb
imul
stc
push
fisubs
loopne
ljmp
fists
push
cld
xchg
dec
lds
dec
lock
icebp
lds
xchg
popa
or
cwtl
ljmp
sub
push
mov
icebp
jne
mov
cltd
pop
mov
or
dec
pop
xor
pop
mov
push
xchg
inc
xor
cmp
pop
dec
inc
jo
popa
pusha
sbb
filds
inc
lods
jmp
dec
jg
push
lock
xchg
jnp
or
ss
adc
cmp
dec
cmc
leave
mov
jg
adc
mov
jo
test
push
insl
or
ret
lcall
cwtl
andl
xchg
sub
fsub
xchg
sub
or
jb
movsb
sarl
mov
imul
adc
data16
sub
sub
jle
lret
mov
adc
shr
cmc
push
in
std
hlt
shlb
nop
jno
out
sbb
xor
loope
adc
fmull
aaa
lcall
mov
test
fimull
pop
mov
out
cmp
jnp
inc
sbb
xchg
rcrl
movsl
sbb
je
pop
or
adc
aaa
mov
jp
bound
or
in
push
or
mov
pushl
aaa
cmp
add
mov
and
push
cmpsl
jge
push
jmp
or
in
jecxz
gs
xchg
fdivrs
pop
ret
inc
std
or
and
sub
and
mov
cmp
xor
outsl
lds
and
jae
jge
mov
push
inc
fldt
inc
fidivl
cmp
scas
lcall
sar
mov
loopne
inc
adc
or
mov
stos
pushf
mov
cmp
sbb
mov
daa
and
std
push
cs
imul
or
adc
or
in
cmc
jae
xchg
lret
dec
fcmovnbe
subl
test
inc
leave
out
insb
repz
aas
mov
leave
dec
mov
xor
jecxz
jno
repz
pushf
hlt
jge
xor
or
and
mov
into
adcb
out
mov
stc
fnstsw
lea
popf
xchg
cmc
adc
daa
dec
test
shrl
jno
movsl
in
into
ficompl
scas
mov
push
rorb
pusha
or
insl
les
push
nop
mov
cltd
aaa
xchg
pop
adc
ljmp
fisttpl
xchg
lcall
adc
movsb
xchg
cmpsl
stc
cs
data16
pop
or
adc
inc
aaa
ss
repz
dec
or
sbb
nop
cmp
push
mov
mov
imul
jg
xor
pop
iret
into
fstpt
xchg
stos
insb
pop
icebp
jecxz
jbe
fwait
ss
dec
jg
popa
out
leave
mov
add
cld
inc
shl
aad
xchg
sub
xchg
pop
cmp
and
int
repnz
lret
xchg
mov
jae
jle
test
fstpl
xchg
cmp
iret
outsl
pop
xor
es
dec
mov
dec
mov
lret
or
push
data16
aaa
mov
adc
imul
push
ja
test
xchg
sbb
jecxz
cmpsb
mov
push
int
aas
inc
jae
cmp
pop
adc
xor
mov
outsb
pop
push
lock
inc
inc
outsl
adc
xorb
loopne
nop
fs
xlat
bound
les
or
ja
sahf
pop
lret
lahf
call
cld
in
lods
fldt
mov
sbb
xorb
inc
inc
test
push
dec
fildl
loopne
jge
mov
add
xchg
xor
push
ret
out
dec
sarb
or
sbb
cmp
stc
sbb
iret
mov
add
jae
and
scas
adc
rorl
mov
adc
jg
jl
frstor
inc
std
fwait
xchg
loope
and
fisttps
sahf
pop
add
in
inc
loope
pop
fimull
dec
or
sbb
mov
dec
outsb
jae
pop
dec
es
sub
shlb
add
cwtl
jbe
movsl
sbb
pop
fs
dec
dec
cmpsl
cltd
jo
mov
fstpt
add
mov
jae
inc
or
pop
add
xor
cwtl
mov
inc
and
fisttpl
sbb
lods
dec
xor
xchg
lods
mul
in
aas
cmp
push
push
test
fidivs
inc
outsl
mov
and
xor
and
sbb
fldt
sub
negb
mov
pop
movsb
jbe
cmp
sbb
cltd
ret
dec
dec
jbe
push
jecxz
mov
and
jo
nop
call
dec
stos
pop
bound
pop
ror
push
add
pop
mov
stos
adc
iret
jmp
lock
pop
cli
jbe
mov
cmp
xlat
mov
movsl
stos
adc
mov
fsts
outsb
data16
add
sbb
xor
pop
jnp
je
cmpsb
mov
outsl
sbb
adc
lds
or
inc
repz
ss
insb
push
cmc
movsb
sbb
jmp
orb
xor
ret
pop
and
popa
cli
xchg
stos
xor
inc
push
sub
jl
mov
ja
adc
add
inc
shrb
mov
sbb
add
out
jne
push
mov
fwait
pop
imulb
or
sub
xor
lcall
cmp
pop
rcll
sub
push
lods
push
roll
xchg
xchg
xchg
xchg
jne
cmp
cmc
lcall
movsl
shlb
sbb
leave
sub
leave
or
or
pop
inc
lods
sbbl
int3
lahf
or
cmc
divl
push
das
or
pop
in
lahf
lea
pop
iret
sub
into
xor
add
sub
daa
outsb
in
jo
or
lods
in
add
test
cmpl
jo
lret
imul
xchg
push
ret
inc
cwtl
add
pushf
dec
mov
std
in
leave
cmpsl
or
xorl
xchg
add
lahf
sbb
cmpsb
mov
ret
ret
pop
daa
xchg
xchg
outsb
testl
mov
push
add
aam
cmp
mov
mov
inc
loop
std
push
popf
nop
iret
roll
fildl
and
lods
push
xor
test
mov
jmp
das
cmc
or
lock
icebp
and
pop
out
cs
fwait
cmp
pop
mov
fisttpll
nop
lds
cld
daa
mov
push
loope
or
cs
std
into
pop
sub
cmpsl
mov
inc
sub
sbb
lcall
std
add
pusha
stos
xor
mov
cmp
js
insb
pop
jmp
lods
jae
int3
mov
mov
repnz
sbb
ss
jb
sub
pop
js
push
pop
lods
inc
jl
inc
mov
repnz
enter
adc
addl
lods
jecxz
dec
mov
lcall
jno
mov
outsb
lods
repnz
daa
lock
scas
push
call
clc
sbb
loope
jae
jb
ja,pn
repnz
lcall
fs
cmpsl
add
idivb
xchg
inc
out
es
fisttpll
pop
jmp
inc
loope
adcb
out
jp
inc
mov
mov
pop
icebp
fdivrp
mov
mov
aas
in
adc
add
les
shll
pop
dec
call
pop
push
pusha
adc
mov
fmul
mov
das
js
and
mov
andl
push
clc
sbb
call
pop
test
lea
fcomi
or
icebp
push
test
cmpsb
push
mov
xchg
jne
jns
inc
mov
pop
lret
ds
adc
cltd
negl
inc
mov
mov
mov
sarb
cwtl
aaa
aam
fs
push
rclb
fsub
jg
sahf
push
mov
adc
mov
xor
fcomp
fisubrs
and
xchg
sarl
push
xchg
jecxz
jmp
pop
rclb
cmc
jmp
pop
cmpsl
xchg
dec
jp
mov
out
out
xor
jne
test
lods
add
lret
cs
or
mov
cli
pushf
mov
mov
dec
daa
clc
hlt
mov
add
sub
icebp
xor
dec
ljmp
jle
push
xchg
mov
push
popa
pop
jl
push
out
or
sar
jle
pop
cmc
xor
mov
sub
mov
add
dec
mov
adc
inc
or
daa
mov
aas
xchg
dec
mov
add
fists
xchg
dec
hlt
push
push
cmp
sahf
rolb
inc
pop
enter
aaa
push
push
mov
in
sbb
test
add
insl
pop
repnz
mov
mov
shlb
inc
push
les
data16
int3
pop
rorl
aas
push
je
aam
sbb
pop
rorb
out
sbb
orl
or
inc
in
push
add
cmp
lahf
lods
dec
popa
mov
push
ja
leave
lahf
xor
cmp
cmp
cwtl
push
test
subb
ljmp
xchg
xor
popa
dec
push
push
pop
sub
sub
xor
and
jg
mov
jo
ljmp
arpl
push
xchg
push
insl
push
jae
mov
adc
add
mov
xchg
jbe
icebp
push
mov
jmp
xlat
mov
aaa
test
mov
lock
hlt
mov
xor
add
jl
inc
mull
or
add
inc
addr16
repz
dec
xchg
dec
or
addb
mov
loop
mov
push
in
out
dec
mull
jb
adc
pop
fstpl
lods
int3
ja
int
mov
jge
jb
cmpsb
jecxz
fidivs
cld
imul
adc
fcoms
xchg
dec
cmp
add
rolb
add
cs
mov
xchg
xchg
aam
mov
inc
pop
sarl
leave
ljmp
sub
unpcklps
xor
fsts
aaa
aam
jl
mov
mov
js
adc
out
enter
dec
ror
jno
mov
xchg
daa
cmp
or
jnp
push
cmpl
mov
aaa
xlat
subl
icebp
mov
sbb
jmp
xlat
mov
pop
inc
jne
or
orl
into
subb
or
dec
lret
outsb
mov
jne
loop
in
pop
mov
flds
adc
pop
das
push
xor
lahf
sub
mov
push
fucomp
rcl
std
orb
adcb
sbb
jecxz
mov
dec
cmpsl
jge
aas
testl
stos
jno
scas
cmpsl
hlt
ds
fstl
pop
jmp
int3
out
mov
lock
jb
arpl
sub
popl
mov
test
inc
jo
out
clc
gs
loope
sbb
out
jb
jnp
aad
ja
aaa
rcr
scas
fwait
xchg
or
fidivrl
cmc
mov
fs
rcr
dec
mov
cmp
fmull
adc
pop
stc
les
daa
je
or
test
lods
jae
scas
lds
call
add
daa
lods
or
repz
jle
mov
push
mov
xlat
and
sbb
mov
xchg
ret
push
cli
stos
push
mov
or
mulb
mov
data16
lcall
addb
inc
test
repz
dec
jmp
mov
pop
add
pop
icebp
aas
ret
pop
or
ljmp
mov
add
lahf
nop
ds
in
rclb
lea
and
or
test
shll
fldl
test
fnstcw
cli
std
enter
mov
lahf
iret
test
mov
adc
cwtl
and
rolb
out
roll
push
inc
jmp
push
insl
mov
adc
insl
jns
fsubs
nop
imul
xchg
xor
fiadds
sti
cmpsb
add
add
inc
test
jge
cmp
pop
mov
jmp
cmp
jecxz
and
into
add
sbb
lock
and
icebp
sub
ljmp
pop
add
ja
dec
xchg
pop
sub
dec
mov
js
jnp
mov
dec
test
mov
test
xchg
jbe
pop
jns
xchg
icebp
mov
lret
xchg
mov
pop
jns
xchg
adc
shlb
xlat
dec
mov
or
scas
popa
ret
jne
xchg
loopne
mov
xlat
pop
pop
fstpt
push
mulb
jno
and
icebp
cmp
mov
lret
pop
xchg
push
pusha
inc
mov
mov
push
das
push
sbb
add
ja
gs
jno
mov
daa
movsl
dec
lds
cmp
ds
mov
imul
mov
mov
push
testb
fcoms
adc
dec
jmp
movsb
or
xor
jae
test
push
loopne
nop
dec
push
enter
dec
mov
ss
cmp
or
repnz
ds
stos
add
sub
push
orl
dec
test
mov
and
test
test
sbb
stc
pop
lret
mov
inc
aam
jns
mov
in
jge
pop
popa
pop
mov
lret
aam
imul
or
mov
xchg
lret
sub
test
jp
and
add
aas
pop
int3
and
adcl
push
lea
mov
addl
jecxz
ficoms
xor
loopne
lea
das
popa
int3
sub
fnstsw
cmp
push
arpl
call
fstpt
leave
ss
xor
ds
shll
leave
jnp
inc
insl
xor
push
adc
sub
insl
push
mov
mov
ja
out
sub
aas
xor
rcrb
pop
sub
repz
cli
rcrb
or
or
insb
mov
in
push
cmpl
jno
mov
inc
lret
lods
js
mov
xchg
lret
adc
xchg
pop
les
test
pop
jge
jns
sbb
push
xchg
jecxz
xor
int3
inc
sbbb
cli
cs
or
iret
or
outsb
dec
dec
cmp
fwait
icebp
dec
movsb
bound
sub
lret
and
subb
dec
jge
jl
mov
dec
pusha
aaa
pop
outsl
push
lahf
pushf
mov
lds
mov
cmpsl
frstor
scas
push
fwait
popf
orl
out
ret
int
or
inc
inc
subb
inc
outsb
shll
imul
mov
add
fldenv
jne
fiaddl
ret
fst
mov
enter
sbb
shll
test
sub
mov
pop
jb
call
ret
mov
inc
nop
sbb
mov
or
xchg
mov
dec
loope
push
fildll
jp
cs
cmp
and
adc
and
jl
das
int3
loop
movb
aad
pop
dec
movsl
fnstenv
adcb
mov
fcompl
js
sbb
adc
loopne
mov
dec
dec
or
ljmp
push
test
pop
mov
mov
test
mov
xor
inc
and
nop
test
pop
insb
clc
incl
je
sub
inc
bound
jl
subl
mov
push
sub
mov
xchg
gs
push
insb
jb
mov
push
mov
addl
adc
inc
push
lods
add
mov
inc
mov
add
movsl
bound
rclb
cmp
mov
dec
or
and
call
iret
and
mov
cmp
sub
int
insb
xchg
cltd
lahf
jns
dec
sbb
out
mov
mov
inc
mov
mov
and
std
add
push
and
sbb
popf
cmp
mov
cmp
mov
call
test
or
aas
loop
enter
cwtl
push
push
mov
inc
add
jno
adc
add
rcrl
out
cmp
pop
mov
cmp
rclb
mov
int
arpl
xchg
pop
sbb
bound
and
inc
mov
fmuls
stc
adc
xor
xor
adc
sub
and
dec
lds
repz
sub
inc
dec
jns
jp
iret
pop
lods
push
push
lret
movsb
push
push
enter
xchg
mov
xchg
out
int3
aaa
aas
mov
frstpm(287
stos
daa
fldlg2
pop
push
mov
dec
and
mov
push
pop
rorl
imul
dec
inc
xchg
xlat
pop
adc
nop
jns
into
pop
cld
cmpsb
dec
into
or
ret
fldl
andl
pop
pop
push
fstpt
hlt
push
es
imul
rcrl
out
repnz
mov
mov
in
cwtl
adc
jns
cpuid
aas
loopne
and
mov
loopne
aad
bound
scas
cmpl
push
mov
cmp
inc
cmc
xchg
lret
fadds
call
int3
add
mov
insb
minps
mov
mov
cmp
scas
repz
lret
fldcw
stc
mov
dec
aaa
pop
daa
sub
push
xor
xor
in
test
push
pop
clc
dec
pop
dec
mov
jg
push
in
decb
push
loop
in
test
cld
mov
and
mov
jmp
in
xchg
lahf
jmp
mov
sbb
pop
ljmp
or
mov
xor
pop
dec
shrb
imul
or
es
pop
test
dec
mov
iret
pop
dec
dec
xchg
and
jnp
je
or
inc
shlb
pop
insl
outsl
out
ret
jmp
adc
sbbb
rcl
scas
xchg
jb
clc
pushf
adc
stos
xchg
and
cmc
inc
pop
mov
and
cs
scas
push
push
loopne
pop
or
add
stos
out
ret
push
fdivrl
jg
push
aad
into
cmp
jne
in
js
das
scas
addl
mov
jnp
cmp
add
push
bnd
loope
in
leave
and
jae
xchg
das
cld
je
enter
sbb
or
cltd
leave
adc
call
scas
es
mov
xchg
push
je
xchg
xchg
aam
cli
mov
inc
pop
fcompl
push
scas
jge
mov
mov
jge
jmp
adc
int
xor
fwait
stos
int
ljmp
sub
loop
cwtl
lret
xor
pusha
fwait
push
adc
xchg
jp
xor
je
xor
int
inc
ret
lcall
out
add
inc
dec
rorl
mov
sub
inc
test
jns
push
popa
jmp
jl
scas
fimuls
and
cmpsl
sub
jl
insl
adc
mov
int3
jno
xchg
out
adc
dec
lahf
lret
aas
mov
or
loop
mov
mov
mov
fmul
inc
loop
outsb
mov
mov
ljmp
divl
shll
rcl
adc
inc
pushf
fsubs
inc
repnz
cmpsb
std
sbb
mov
clc
and
popa
ljmp
mov
adc
shl
sub
adc
in
icebp
jmp
mov
loope
pusha
js
mov
fimull
mov
jo
jns
scas
lret
test
popa
test
fiadds
jnp
cld
lods
scas
and
imul
sarl
dec
push
ljmp
bound
data16
inc
push
pop
leave
dec
dec
inc
or
and
pop
mov
mov
enter
les
and
pop
xchg
mov
mov
dec
into
cli
insb
dec
stc
mov
push
push
mov
add
xor
mulb
or
outsb
pop
ljmp
sbb
std
lret
jl
xchg
or
sub
mov
addr16
fnstsw
test
sub
mov
xchg
in
jne
mov
mov
jno
imul
imul
inc
movsl
je
and
inc
inc
push
sahf
lret
adc
fdivrs
dec
pop
stos
fcoms
xor
iret
mov
xchg
dec
push
scas
popf
sahf
inc
push
cmp
mov
cmpsb
rolb
sbbl
pop
ret
inc
loopne
adc
outsb
out
push
jl
data16
insb
cli
cmc
push
and
rcll
xlat
inc
mov
in
inc
daa
xor
mov
hlt
loopne
lds
xchg
xchg
or
ja
cltd
push
loop
fs
out
addr16
mov
outsl
gs
sbb
cmp
mov
sbb
lds
jl
fsubrs
cmp
xchg
mov
stos
lret
ja
std
and
jne
loopne
add
jl
inc
loope
or
test
shrb
lds
push
push
neg
add
mov
stos
movsl
aas
dec
push
xadd
rcrl
push
stos
movsb
or
ret
gs
cmp
sbbl
mov
cwtl
xchg
push
sbb
inc
enter
xchg
cmpsl
rorl
loope
cmc
mov
fildl
js
and
pop
test
sbb
test
xor
mov
pushf
or
lret
movsb
or
scas
fs
mov
and
aam
mov
ret
in
or
fucomp
dec
cmc
xorl
outsl
scas
add
cld
sbb
sub
xor
pop
sub
rorl
add
push
and
lods
xor
pop
mov
push
adc
push
cli
lods
aad
out
inc
mov
dec
aad
lcall
pushf
dec
call
push
mov
push
aaa
mov
xchg
xchg
mov
fistpl
aas
mov
int
jns
mov
shr
pop
ds
les
orb
sbb
mov
pushf
dec
fldl
push
sbb
jl
icebp
mov
add
mov
cs
sub
pop
out
inc
inc
xchg
dec
sub
push
mov
shlb
inc
pop
lcall
and
jbe
cmp
ret
cmp
adc
bnd
adc
insb
cmp
or
lret
mov
ljmp
lahf
fstl
insl
mov
push
scas
inc
and
shl
xor
fdivrl
mov
test
push
sbb
cld
mov
iret
add
inc
push
je
ljmp
push
sub
pop
inc
cmp
jmp
lock
sahf
lods
xchg
sub
test
xchg
dec
subl
xor
sbb
mov
xchg
xlat
mov
pop
cli
mov
push
add
mov
loopne
int
xor
and
icebp
xchg
sbb
dec
mov
xchg
mov
insl
pop
and
stos
dec
mov
mov
push
cltd
xchg
mov
push
cmp
mov
xchg
mov
pop
and
push
xor
push
pop
movsb
fiaddl
insb
jg
sbb
push
cmp
ss
lcall
xor
sahf
jmp
xor
dec
xchg
fmul
dec
mov
cmp
aad
scas
dec
nop
push
cltd
cld
addb
nop
popa
ljmp
mov
stc
dec
sti
cld
sbb
pop
push
ljmp
movsl
loopne
lret
pminsw
inc
shlb
mov
rorl
loop
inc
sub
jno
cli
push
jae
cs
sbb
pop
pop
xor
push
xor
cmp
xor
cs
sbb
inc
jnp
push
fcmovb
fsubrs
dec
rcr
xor
cld
xlat
inc
repz
ljmp
jno
jle
cmc
lds
or
xchg
mov
jmp
arpl
inc
fsubs
arpl
stos
repnz
imul
cmpsb
sahf
movsl
mov
adc
adc
mov
scas
xor
lahf
and
lock
add
xchg
aam
mov
push
mov
fistpl
adc
cmp
testb
rorl
popf
dec
in
adc
xorl
xchg
xchg
addl
mov
mov
ret
xchg
vpsubusb
xchg
arpl
mov
push
lds
pop
gs
xchg
scas
mov
addr16
lods
es
adc
out
movsl
xchg
je
fisubrs
scas
mov
pop
adc
and
xor
xchg
cmp
mov
push
mov
fs
ja
dec
cmc
cmp
dec
or
insb
jle
imul
mov
ss
xchg
jns
subb
stos
icebp
push
xor
pusha
sbbb
mov
daa
sub
loope
sbb
fisttpll
pop
mov
loope
dec
jns
dec
mov
hlt
or
and
pop
jg
test
loop
mov
cmp
and
mov
add
jl
repz
idivb
fnstsw
loopne
or
inc
test
mov
add
sub
xchg
push
sar
stos
xchg
outsl
jle
mov
push
sti
shrl
cli
call
test
mov
adc
stos
jb
or
add
sub
test
loope
cmp
and
cmp
addr16
jmp
sbb
push
iret
das
xor
inc
inc
jle
cmc
iret
insb
cmpsl
push
outsl
lret
jae
imul
fcompl
lahf
jge
add
push
call
xor
jbe
add
stc
shll
sbb
loope
notl
add
jb
enter
sbb
mov
into
je
ret
adc
adc
sub
jle
fwait
dec
jns
repnz
bound
sub
xor
pushf
imul
rol
rcll
inc
icebp
daa
rol
or
pop
rolb
popf
mov
mov
clc
sti
mov
cmp
repnz
dec
test
stos
scas
in
orb
stos
push
sbb
aad
jmp
mov
adc
jecxz
dec
sub
pop
repz
push
sbb
cmp
scas
pop
fstl
ljmp
adc
mov
xchg
cs
jbe
xchg
mov
sub
inc
mov
dec
mov
mov
jmp
jne
hlt
les
inc
cmc
adc
movsl
xlat
ljmp
lahf
ror
push
cmp
test
mov
cwtl
cltd
pop
push
iret
fmul
mov
push
fcmovnu
movsl
mov
out
aam
mov
sbb
out
push
aas
push
in
mov
xchg
aaa
jb
pop
xorl
sub
push
scas
addr16
lahf
sbb
out
jae
decb
dec
repz
sub
mov
cmp
mov
and
adc
std
add
cmc
xchg
aaa
dec
aam
push
shrb
lret
enter
mov
cmp
fisubrs
mov
and
sbb
cmc
in
pop
iret
pop
pop
sti
ds
sbb
mov
rcrb
add
sti
xchg
mov
xor
add
inc
adc
push
inc
movsb
xchg
mov
mov
jno
pop
test
push
ja
xor
xchg
cmp
cmp
cwtl
mov
push
mov
xchg
int3
lock
clc
aaa
mov
jge
hlt
sub
movsb
int3
adc
mov
imul
or
cmp
mov
dec
sbb
or
mov
cmp
xor
in
jnp
out
jne
xlat
into
xchg
jecxz
in
lods
jmp
negb
cmp
xlat
xlat
pop
in
seto
cld
mov
dec
sub
jnp
xchg
loopne
imul
outsb
fdivr
pop
testb
call
dec
or
xchg
fnstsw
icebp
mov
stos
out
xlat
mov
xchg
sbb
or
stos
mov
or
add
pop
inc
enter
cmpsl
test
sbb
cli
pop
xchg
gs
lahf
test
lret
gs
rol
jbe
pushf
mov
rcrb
xor
lods
or
sti
out
or
rclb
lret
mov
clc
mov
je
std
hlt
scas
scas
mov
jne
in
or
test
jbe
std
fsubs
movsl
daa
push
jmp
adc
pusha
adc
rorb
mov
cmp
pop
lods
test
aam
in
pusha
xchg
cmp
rorl
push
dec
sbb
rcrl
lret
adc
lods
lds
xchg
mov
xor
xchg
jo
inc
jo
pusha
jl
adcl
jl
fs
mov
cmpb
std
add
and
in
das
add
and
stos
gs
in
sbb
mov
call
add
pop
mov
std
push
jns
lea
mov
adc
mov
xchg
stos
push
imul
xchg
mov
bound
xor
pop
add
stos
sti
mov
pop
call
insb
adc
jns
push
dec
xchg
sbb
outsb
leave
iret
push
mov
add
clc
cmovp
mov
and
test
mov
cmp
incl
scas
in
and
scas
test
mov
popa
cmp
jmp
ja
lahf
fstpl
add
mov
jns
adc
ljmp
pushf
icebp
mov
mov
push
lds
ds
xorps
mov
aad
out
nop
lret
jmp
outsb
pop
push
jb
loopne
push
inc
lds
sbb
adc
add
pushf
adc
jg
xchg
aad
movsl
pop
scas
sbb
fcmovnu
sbb
dec
addr16
adc
cmpl
dec
cld
jp
sbb
pop
shufps
fs
js
xchg
push
movsb
mov
imul
call
out
cs
ret
shrb
lret
pop
loop
fs
loop
inc
ficomps
mov
and
xchg
sahf
xor
outsb
lods
lea
mov
filds
jo
stos
out
les
mov
pop
pusha
stos
jle
xchg
adc
mov
out
push
cmc
lcall
jmp
push
push
call
int
lret
inc
xor
and
push
fs
sub
fstps
dec
cwtl
insb
jb
divl
pop
pushf
lds
sbb
frstor
nop
loop
pop
lods
mov
jmp
sbb
mov
cmp
test
lret
and
aaa
and
sbb
sbb
add
pop
mov
rcr
cs
je
sbb
and
adc
sbb
and
adc
jbe
out
push
pusha
mov
push
cwtl
mov
inc
loope
mov
pop
dec
cli
adcb
sub
jl
adc
cltd
mov
in
popa
bound
das
arpl
pop
rolb
add
adc
inc
sahf
std
inc
mov
shlb
jmp
popf
inc
jp
xchg
dec
outsl
inc
fmull
not
out
cmp
mov
jecxz
inc
scas
into
xor
mov
call
jle
adc
mov
fnstsw
or
xchg
ss
repz
add
test
dec
xchg
inc
clc
clc
dec
inc
cmp
inc
mov
mov
mulb
dec
push
pop
inc
dec
in
fldenv
mov
mov
sbb
mov
mov
mov
push
les
sub
orl
xor
es
mov
jae
pop
mov
arpl
or
inc
scas
pop
stc
jno
insl
mov
push
jecxz
mov
dec
push
pushf
pop
sbb
arpl
adc
sub
pop
lods
lods
push
mov
sarl
shlb
sub
sahf
adc
cmp
inc
and
lods
add
nop
aaa
outsl
lods
mov
add
mov
and
mov
add
xor
mov
and
cli
xor
loope
jmp
loope
addr16
leave
cmp
iret
mov
iret
into
jnp
lea
loope
mov
cli
inc
sub
sahf
in
adc
mov
adc
subl
in
add
push
lea
xchg
inc
jno
sub
push
loopne
xchg
outsl
rcrl
cmc
and
aas
bound
cs
int
push
mov
in
or
lret
ljmp
sub
pop
std
or
aas
pop
push
repnz
adc
mov
sbb
pop
nop
arpl
scas
cmp
jmp
dec
negl
stc
dec
lods
pusha
pop
dec
xor
mov
and
dec
mov
test
xchg
dec
sub
lret
push
sahf
inc
cs
loop
outsl
je
das
jns
hlt
cmp
shrb
iret
pop
jae
outsb
sbb
scas
loope
das
cli
inc
sub
mov
popa
push
jp
dec
or
or
lods
cmp
ud0
out
out
jne
repz
pusha
or
repz
mov
inc
pop
push
lcall
popf
and
and
cltd
jo
add
or
push
mov
outsl
in
lahf
sti
sbb
test
outsb
adc
arpl
ret
pop
cmp
mov
mov
pusha
scas
lods
or
arpl
inc
mov
ds
jl
or
xor
mov
shll
out
in
arpl
and
pop
outsb
or
jno
push
imul
pop
fidivs
cltd
cwtl
lret
js
aam
inc
xchg
sub
add
hlt
mov
cmp
cli
movsb
ss
lahf
js
test
clc
call
test
sbb
inc
or
jns
movb
pop
adc
push
dec
jb
sbb
mov
add
aaa
cmp
ret
scas
std
and
xlat
mov
rcll
cmc
into
sbb
jmp
inc
mov
push
mov
add
sbb
jb
pop
cmpl
dec
popa
add
das
les
fsubr
sub
xchg
sbb
push
lods
xchg
cmp
cmp
inc
inc
lret
ds
ds
pop
es
sti
add
inc
sub
lods
sbb
jp
mov
sbb
push
push
or
int3
dec
ljmp
loopne
adcb
dec
inc
cld
push
or
mov
cli
fsts
adc
ret
adc
inc
dec
pop
xor
fwait
stos
das
das
pop
sub
or
dec
dec
mov
cmpsb
add
insl
xchg
movsl
push
add
loop
cmp
inc
arpl
push
cmp
or
aaa
fdivrp
mov
xlat
or
inc
ljmp
in
call
mov
cmp
int3
rcll
repz
or
push
lahf
xchg
mov
rcll
data16
fcomps
roll
bound
cmc
mov
cli
cli
mov
xor
add
adc
mov
pop
xorb
push
fdivl
in
adc
mov
and
scas
stos
jbe
mov
add
fmuls
inc
in
ret
mov
xchg
es
jnp
data16
or
mov
dec
jp
push
jnp
imul
and
in
inc
dec
jge
push
sub
fs
stos
pop
aaa
push
arpl
inc
dec
mov
xchg
jns
mov
inc
sahf
lods
dec
pushf
out
add
loop
sub
mov
outsl
mov
out
fisubl
xchg
lcall
pop
inc
ret
mov
adc
cltd
mov
sub
sti
pop
jg
insl
inc
adc
dec
adc
mov
ja
sub
fisubrs
xlat
out
mov
xlat
pop
fdivl
push
cmp
sahf
push
insl
das
call
mov
add
int
xlat
hlt
fdivrl
and
clc
call
cmc
data16
jns
fs
lds
add
cltd
pop
xchg
push
sbb
punpcklwd
das
lret
out
adc
xchg
in
fisttpll
jbe
xorl
adcb
add
jge
inc
mov
xlat
add
inc
pop
mov
lds
cmp
aaa
mov
cmp
and
cmpsb
repz
aam
or
addr16
divl
jg
add
cli
xchg
aad
ljmp
aas
inc
testb
and
sbb
lcall
xor
mov
sbb
push
inc
cmp
rolb
loopne
int
push
add
pop
pop
ret
aad
cmp
fsts
sbb
adc
cmpsb
imul
push
movsl
pop
fs
pop
in
adc
or
cmp
pusha
mov
add
insl
xchg
and
cmp
fimull
mov
scas
hlt
in
adc
sbb
push
jbe
push
dec
cmp
ret
fadds
jnp
mov
cmc
mov
pand
sbb
mov
xchg
jecxz
cwtl
pop
subb
scas
js
pop
cmp
jmp
leave
mov
sbb
nop
fwait
inc
xor
jnp
ljmp
or
mov
dec
jo
cmpsb
out
jae
fdivr
fistl
cmpsb
cmp
push
pop
stc
inc
dec
repz
in
pop
dec
or
jle
cmc
andb
lods
xor
data16
and
jmp
aam
xchg
adc
aas
daa
mov
setbe
mov
push
fs
pop
xor
or
es
jp
and
dec
lock
or
ja
data16
arpl
pop
mov
xor
aam
add
lock
push
gs
loopne
aas
add
pop
mov
mov
or
gs
loop
call
lret
ss
adc
sub
xor
sbb
xchg
hlt
test
push
stos
packsswb
mov
push
push
xor
int
scas
or
adc
imul
hlt
jl
adc
out
pop
push
jl
inc
sbb
lock
sbb
int3
dec
jns
icebp
ja
xor
jecxz
daa
test
sbb
aaa
cmp
fs
leave
cmp
loopne
in
popf
mov
in
fisubs
mov
mov
scas
dec
roll
ret
mov
sbbl
in
and
das
je
les
stc
add
mov
dec
addr16
rolb
mov
xchg
xor
inc
xor
dec
xor
jne
pop
stc
or
daa
shl
mov
cltd
das
daa
icebp
stc
aaa
shlb
pop
mov
mov
add
sahf
xchg
aad
xor
mov
xor
das
pushf
mov
push
pusha
das
push
pop
mov
movsb
push
outsl
imul
movsb
jge
add
sbb
dec
push
add
test
mov
je
cld
push
xchg
sub
add
sar
sahf
clc
mov
push
mov
lahf
push
mov
or
icebp
pop
push
jo
jae
or
cmp
push
jne
push
dec
out
loope
mov
dec
aaa
inc
decb
test
fcomip
cld
aas
data16
pushf
repnz
ror
xor
fs
sbb
out
nop
leave
ret
lock
mov
xchg
mov
js
test
in
inc
cmp
repz
sbb
pop
sbb
or
pop
jecxz
jae
sahf
mov
or
push
jbe
mov
lods
pop
sahf
shl
xchg
enter
mov
ret
dec
push
test
fxch
push
shlb
mov
int
sub
xchg
lahf
jnp
loope
push
mov
dec
or
enter
insl
mov
jmp
cmpsl
or
repz
je
pop
test
push
jmp
cltd
mov
xchg
and
enter
pushf
mov
mov
mov
push
push
ds
test
ficoms
pop
jne
ret
pop
sub
or
jns
or
xor
fcmovne
cmp
cmp
mov
add
mov
add
out
mov
cmovo
mov
lods
mov
aas
sbb
arpl
lods
cmp
lcall
stc
outsb
push
mov
xlat
movsb
dec
aaa
cli
into
inc
inc
mov
jne
pusha
pop
out
add
mov
repnz
push
sahf
stc
ljmp
jmp
lods
xchg
lea
jns
mov
cld
or
sbb
add
sub
mov
fs
push
push
outsl
int3
xchg
sbb
scas
sub
test
rorb
repnz
sub
mov
neg
and
sub
ss
ja
faddl
xor
sub
cmp
xchg
push
inc
pop
add
push
jecxz
dec
sbb
and
jl
dec
sahf
mov
les
test
dec
or
jno
icebp
jg
daa
cli
jl
jg
sub
jg
icebp
bound
rcll
mov
xchg
mov
cmpl
xchg
enter
aas
adc
add
outsl
ds
lret
mov
push
fistpll
xchg
and
mov
je
aas
adc
lret
cli
and
push
fcoms
lods
jl
imulb
ficoml
or
loopne
into
mov
mov
std
adcb
xchg
mov
je
xchg
lret
sub
jae
adc
es
sbb
or
shrl
pop
jbe
lds
sub
in
push
insl
cmc
rcl
inc
dec
out
mov
lods
mov
mov
xchg
jecxz
lahf
aas
inc
push
mov
lock
jg
cmp
or
jge
shrl
in
test
mov
sbb
jae
or
scas
adcb
rcll
and
cwtl
js
or
dec
stos
repnz
shll
xor
sbb
sub
lea
andb
jge
imul
inc
push
shrb
mov
sbb
clc
inc
fs
bound
rolb
outsb
je
paddw
cmc
sbb
test
cmpsb
sbb
sbb
push
jo
insl
repz
dec
pop
inc
add
push
xlat
push
jb
dec
aaa
adc
adc
push
ret
xlat
cmpsb
hlt
dec
ss
stos
lahf
lds
xchg
inc
adc
or
subb
aas
sbb
rcr
ret
pop
mov
jl
and
mov
push
mov
adc
jns
shrb
es
ret
fimuls
pop
adc
sub
mov
push
popa
leave
mov
fidivrs
mov
data16
sahf
sbb
dec
adc
mov
jb
fsubl
gs
ret
lds
lret
jmp
cmp
clc
inc
add
pop
pop
das
mov
movsl
shlb
xchg
nop
mov
mov
ds
xor
loop
fsubl
adc
xor
xor
sbb
and
outsb
mov
sar
xchg
in
or
push
push
iret
aad
lahf
push
addb
icebp
add
dec
loop
gs
pop
jnp
outsb
jbe
fldenv
push
mov
cmpsb
bound
sbbb
repz
jg
mov
sub
jg
jo
cwtl
insb
cli
xchg
pop
pop
push
cmpb
dec
mov
cli
xor
cld
les
jae
cmpsb
std
clc
jecxz
sbb
add
test
xor
or
jmp
imul
test
dec
insb
cmpsl
adc
aas
xchg
in
in
lock
jle
jno
adc
xchg
mov
cmp
imul
jnp
fiadds
mov
dec
fstpt
cmp
mov
fwait
aaa
pop
out
mov
ja
jl
sub
xor
sub
push
arpl
push
mov
cmp
sbb
push
xchg
outsl
mov
push
mov
fwait
mov
pop
mov
cld
push
jecxz
and
push
cwtl
mov
stos
push
sub
mov
or
popf
inc
movsb
bound
cmp
dec
inc
cld
outsb
fdivl
in
clc
cltd
iret
jmp
and
cmp
pop
jns
inc
popf
divl
xchg
push
stos
adc
fmuls
imul
inc
ficompl
nop
fcmovbe
incb
cmpsb
or
nop
mov
iret
fs
xor
pop
nop
jnp
enter
mov
adc
sahf
adc
xor
cmpsl
std
xchg
add
xchg
lret
bound
sbb
test
js
imul
xchg
push
pop
shl
push
pop
mov
jo
mov
jno
jno
lahf
sarb
xchg
cmp
mov
ret
add
jle
mov
mov
jno
movsl
icebp
icebp
push
mov
mov
mov
mov
fs
cltd
negl
leave
dec
repnz
cs
mov
push
aad
cmpsb
jg
adc
jbe
add
iret
add
and
adc
mov
pop
pushf
xor
xor
fmull
xor
enter
sub
adc
daa
int
xchg
cli
mov
aad
jecxz
or
rorw
std
ss
xor
into
fadds
out
jno
and
push
mov
push
sbb
out
sahf
lods
add
roll
mov
add
insl
pop
jg
inc
outsl
test
cs
ss
bound
divl
jae
icebp
lods
push
sub
popa
pop
xor
and
lock
insl
or
leave
sub
or
add
adc
or
fs
in
daa
pop
jb
pop
push
mov
xchg
imul
jae
stos
cli
ficoml
ret
fs
or
and
xchg
pop
jae
into
mov
adc
fdivr
fdivl
mov
idivl
push
pop
xor
dec
loop
stc
cmp
lahf
xor
push
and
pusha
push
sbb
ja
push
inc
mov
testb
push
pop
sti
or
push
adc
imull
lea
adc
pop
das
add
add
jno
sub
pop
sub
testl
mov
cld
lret
pop
out
clc
lds
xor
adc
push
into
jle
cld
add
sub
jmp
rolb
add
xchg
outsl
mov
ret
push
pop
mov
cmp
add
sbb
por
rolb
jmp
mov
leave
mov
inc
mov
mov
test
lret
repz
js
dec
inc
fimuls
je
dec
push
lcall
adcb
roll
lahf
cli
call
in
jb
xor
jb
incb
push
xchg
cmpsb
push
xchg
xchg
sub
rdpmc
inc
cmpsb
fisttpl
mov
cs
mov
shrl
inc
mov
inc
pop
dec
call
and
testb
pop
jbe
add
fucomi
mov
and
and
dec
mov
sub
push
decb
pop
sbb
push
imul
or
daa
neg
mov
sub
adc
aam
xchg
into
push
les
js
scas
push
jp
mov
std
ret
addr16
fimuls
aas
aaa
iret
mov
add
scas
int3
adc
in
add
jb
mov
jg
adc
mov
inc
ret
dec
and
or
in
pop
push
mov
popa
fisttps
inc
push
jae
sarb
aad
dec
and
popa
jle
lcall
int
sahf
cs
cltd
out
shll
in
mov
in
cwtl
in
adc
add
sbb
push
mov
ljmp
rorl
xchg
popa
inc
insl
pop
cmpsl
cltd
pop
mov
fsubrs
pop
cmpb
test
add
test
pop
addb
call
jecxz
mov
adc
or
daa
or
mov
jb
mov
cmp
sub
jl
sub
sbb
mov
mov
incb
es
or
and
dec
ret
cmp
jl
sbb
sbb
stos
repz
xchg
mov
mov
mov
xor
aas
mov
mov
xchg
movsb
sub
or
in
fstps
push
push
shll
jns
or
mov
sub
add
call
ret
scas
ljmp
cmp
xlat
jmp
jo
into
and
lods
push
mov
mov
stos
fcom
arpl
fs
mov
dec
and
outsl
and
xchg
mov
jp
nop
test
xor
sub
test
out
into
cmp
inc
int
jbe
cwtl
insl
xor
dec
inc
test
rcll
rcll
imul
loope
mov
sub
push
push
pop
xor
mov
or
inc
cmc
xchg
ljmp
add
js
pop
scas
xchg
xor
add
mov
mov
or
pop
or
sti
sti
mov
xchg
cmc
roll
jno
mov
fidivrl
loop
sbb
add
adc
and
push
jmp
std
aaa
push
inc
imul
mov
sub
lods
push
dec
sbb
and
test
test
or
dec
int
rcll
leave
mov
or
aas
dec
clc
mov
adc
mov
es
enter
test
data16
cmp
je
cmc
test
xor
cs
lods
roll
cs
sbb
mov
shrl
sbb
inc
sub
pop
mov
inc
mov
ret
mov
mov
xor
std
repz
in
out
das
es
fs
or
clc
notl
lret
imul
mov
lea
arpl
pop
imul
notb
out
cmpsl
pop
xlat
mov
xor
cmpsb
mov
int3
inc
mov
or
inc
mov
jmp
std
adc
jecxz
sub
push
insl
cmc
jp
mov
mov
lods
jno
inc
daa
inc
ret
into
lret
adc
lcall
popa
mov
pop
sub
or
jne
pop
das
push
mov
maskmovq
imull
icebp
dec
into
pushf
scas
pop
ljmp
sbb
outsb
out
push
cwtl
sub
rorl
push
xlat
stc
lea
popa
das
shrb
push
xor
insl
outsb
push
cmpsl
stc
out
ds
std
dec
sti
ret
ds
dec
cli
sbb
inc
mov
repz
enter
pusha
jno
int3
jne
sub
in
push
out
add
movsl
cltd
push
test
in
outsb
in
iret
fstps
scas
inc
outsb
sub
xchg
adc
or
mov
mov
lret
nop
mov
mov
adc
cwtl
pusha
test
jg
jnp
mov
xchg
add
es
fisubrl
popa
daa
aaa
bound
test
clc
xchg
push
in
mov
push
ds
and
movsl
orb
mov
jle
pushw
or
push
dec
add
fidivrs
decb
scas
dec
jb
xchg
adc
adc
push
gs
add
test
xchg
movsb
push
add
cmp
or
lds
dec
loope
xchg
test
out
xchg
cmp
out
sbb
aas
in
insb
cmp
loope
pop
sbb
or
out
repnz
and
outsb
xor
mov
es
adc
pusha
add
push
jg
mov
sahf
add
xor
in
jg
int
dec
loopne
call
inc
shrb
stos
mov
rcl
cmc
imul
pand
clc
cmpsb
or
push
mov
or
add
cmp
push
xchg
fdivp
mov
bound
jle
mov
xor
pop
mov
dec
push
dec
push
or
jno
add
pop
xor
and
mov
xor
mull
pop
loope
xor
out
in
pop
jmp
movsb
sbbl
mov
lea
rcrl
adc
ret
cli
pop
mov
test
sub
ret
inc
sub
lea
xchg
push
jbe
gs
fs
fsub
sub
fisubs
jmp
xchg
outsl
cli
push
mov
rcr
and
jno
mov
bound
xchg
pusha
add
add
clc
or
loopne
lret
sub
xchg
add
imul
sub
mov
push
pop
decb
jnp
sub
mov
and
daa
ss
xor
or
mov
and
jecxz
loope
xor
jl
je
arpl
incl
jle
sbb
xchg
sarb
xchg
or
mov
mov
mov
vpunpcklbw
fcompl
cmp
lods
shr
jmp
lea
fdivl
pushf
jno
mov
jnp
aam
cmp
mov
mov
push
orl
pop
jb
das
loop
in
xchg
mov
adc
in
push
inc
inc
jb
ret
jbe
mov
daa
insb
dec
push
aaa
jmp
cmp
lret
and
bound
daa
inc
mov
addr16
je
leave
and
les
and
or
testb
or
adc
sub
inc
aam
jle
icebp
pop
loope
fisttpl
push
push
cmp
xorl
pop
outsl
dec
aaa
push
pop
sahf
add
jecxz
cmp
jp
fsubrs
sub
push
testl
inc
insb
jne
mov
lods
push
sbb
sbb
lret
adc
scas
inc
pop
lcall
scas
loopne
jp
inc
mov
cld
lods
pop
mov
insl
arpl
push
push
push
and
imul
cmp
push
xchg
repnz
aad
or
stos
xorb
sbb
insb
fmulp
xchg
jmp
push
sti
loop
mov
push
jae
mov
push
gs
ds
outsl
mov
outsl
pop
test
add
in
mov
pcmpgtd
ljmp
xlat
aad
jnp
jmp
xchg
ret
cmp
shll
ss
add
inc
aaa
ds
push
mov
int
cld
jle
ret
mov
fcomi
cmp
and
lds
fstps
fisubl
insl
lret
mov
das
fsubrl
lods
outsb
pushf
lea
in
iret
pusha
test
fsts
xchg
sbb
cli
cmpsb
mov
scas
shl
sub
xor
mov
aaa
nop
mov
insl
add
fisubrl
mov
cld
fstl
insb
mov
mov
jno
and
xor
cs
jb
ret
test
jmp
mov
pop
push
inc
push
mov
cmp
mov
mov
andl
das
push
icebp
psrad
out
into
sub
cwtl
andb
cmp
add
xchg
dec
sub
lock
decl
add
pop
mov
pop
or
mov
cmpsl
jle
push
leave
inc
jmp
inc
jle
inc
cmpsb
xchg
and
stc
and
and
fiaddl
aaa
rcrb
dec
lods
aaa
dec
cmp
mov
adc
push
sti
add
mov
mov
mov
stos
inc
add
out
jne
sbb
cmp
xchg
pop
pop
fiadds
cmpsl
in
sub
popf
pop
cmpsl
call
jle
mov
adc
adc
push
sub
enter
mov
inc
xchg
pop
add
aas
push
incl
pop
enter
loopne
clc
stc
mov
xchg
cmp
scas
mov
repz
dec
jnp
popf
inc
ret
pop
aad
cmp
and
inc
js
push
and
push
in
int
cmp
and
pop
xchg
dec
push
fwait
lods
sbb
cmp
sbb
and
jecxz
pop
addb
and
jl
cmp
mov
xor
fists
in
ret
add
loopne
cli
mov
test
mov
data16
jecxz
adc
out
pop
jnp
add
jnp
pop
insl
dec
into
in
sbb
and
out
jnp
fmuls
icebp
and
stos
outsl
das
popf
outsl
shrl
and
mov
fisubrl
andl
mov
xchg
daa
imul
push
inc
adc
stc
and
lahf
ljmp
push
push
mov
lds
test
jge
mov
dec
push
pusha
pop
out
fsubrl
pop
rorl
ss
flds
mov
xor
and
filds
rcll
out
adc
jle
push
mov
pop
xchg
mov
push
xchg
cmp
ret
sahf
stos
lret
mov
test
and
lods
in
lea
lock
shr
shll
ljmp
and
imul
and
dec
adc
int
lgs
fs
add
outsl
jnp
add
insl
data16
outsl
leave
inc
test
out
mov
sbb
add
mov
insb
nop
notb
push
insb
mov
sub
loope
or
jnp
and
rol
lahf
sub
call
pop
add
test
rclb
pop
dec
out
in
pop
icebp
push
mov
adc
push
jecxz
fsubrs
in
outsb
pop
negl
mov
rcrb
push
stc
and
aaa
mov
mov
xlat
pusha
pop
outsl
int3
mov
aam
dec
rol
sub
repnz
jo
or
iret
hlt
imul
mov
ja
fwait
ret
jmp
in
inc
xchg
push
mov
mov
mov
mov
jae
xchg
xchg
jecxz
pop
xchg
test
in
clc
test
out
mov
in
cmpl
xlat
imull
pop
dec
notl
sub
xchg
jg
out
jecxz
test
jle
fildll
cmpsb
ret
inc
jnp
inc
daa
push
movsl
lea
sti
adc
pop
repnz
insl
jnp
adc
loop
mov
pop
cmp
data16
fidivl
es
test
xor
dec
cmc
dec
sahf
test
aam
hlt
sbb
std
pop
inc
jo
lret
inc
repnz
add
repnz
enter
mov
mov
add
mov
mov
sbb
pop
mov
mov
js
xor
mov
dec
sbb
outsl
mov
shlb
aaa
shrd
adc
out
loopne,pt
mov
js
cmp
or
cltd
cwtl
adc
add
inc
test
lret
and
dec
orl
jecxz
andb
sub
or
test
push
push
sbb
mov
cmp
cmp
inc
inc
call
adc
mov
stos
divb
movsb
cld
adc
lods
sbb
lea
mov
insb
push
hlt
inc
outsb
and
sbb
mov
mov
mul
xchg
jge
popa
jl
jp
sbbb
push
mov
out
leave
clc
jl
daa
adc
jae
imul
lret
mov
rcrb
lock
aad
cmp
lret
pop
loopne
sub
adc
outsb
nop
pop
dec
sti
pop
or
xor
jno
and
stc
pop
ljmp
outsb
repz
adc
int3
sbb
cli
xchg
mov
fildll
inc
ljmp
popf
arpl
cmpsl
pop
xchg
imul
pop
cmp
fs
stos
mov
pushf
ret
outsb
inc
ja
push
mov
xor
push
cmp
jne
or
stc
fiaddl
mov
mov
test
adc
scas
faddl
pop
jle
in
push
adc
or
das
sahf
jae
idivb
divl
pop
aam
lret
mov
in
lcall
sti
stc
pop
inc
pop
lds
jmp
jbe
xor
sbb
loopne
cmp
adc
sbb
mov
iret
stos
xor
xchg
jo
cmp
push
dec
int3
and
jb
xchg
xlat
imul
mov
xorb
shll
cmp
jmp
xchg
jge
fisubrs
lcall
rcll
sub
insl
call
shrl
repz
pop
jno
lret
ret
loopne
scas
aas
fstpl
ret
lods
push
cmp
jg
mov
xchg
decb
fwait
adc
push
popf
bound
icebp
add
mov
inc
mov
shr
out
sbb
sub
mov
sti
cmc
je
mov
mov
orb
jl
jl
cltd
pop
mov
jb
mov
and
jge
adc
aas
xchg
or
fistpl
xchg
stos
xor
adc
sbb
or
or
idivb
pop
push
popa
iret
pop
fsubrs
push
inc
push
gs
add
loope
sub
xchg
adc
lds
shll
mov
xchg
pop
lret
iret
mov
loopne
dec
loop
arpl
subl
movb
sbb
xchg
sahf
gs
ja
mov
subl
push
subb
movsb
icebp
ret
icebp
cmp
je
pop
and
lahf
outsb
dec
dec
xchg
pop
cltd
sbb
leave
xchg
ss
out
mov
fs
and
jne
jl
xor
cmpl
cmp
mov
shrb
loop
rclb
and
loop
ret
out
js
inc
fwait
pop
add
insl
test
sbb
push
cli
mov
pop
testb
adc
adc
in
lds
sub
jg
sbb
fadd
mov
adcb
inc
push
lret
test
sub
adc
in
daa
addr16
pop
cs
lcall
dec
jmp
adc
loopne
idivb
xchg
pop
testb
clc
mov
imul
hlt
sub
push
insb
and
cmp
mov
aam
push
push
mov
inc
loop
xchg
xchg
fsubrl
cmp
mov
sbb
mov
lods
or
add
add
pop
push
aaa
shrl
outsl
out
cmp
xchg
int
pop
scas
or
add
xchg
insb
movsb
flds
lds
push
insb
lret
pop
sbb
subl
data16
mov
pop
add
notl
mov
scas
test
or
fmul
rcl
inc
xchg
movsl
add
xor
addb
xchg
cmp
pushf
and
js
daa
lock
push
fisubl
scas
inc
add
int3
daa
stos
and
pop
scas
jb
pushf
or
xor
int
mov
nop
test
andl
movsb
cmp
out
inc
sub
scas
cld
into
and
clc
mov
pop
outsl
test
aad
imul
sub
imul
ficompl
cwtl
std
icebp
xorb
xor
aaa
mov
jg
xor
ret
cmpsb
test
test
movsb
movsl
repz
mov
ljmp
in
xor
repnz
or
pushf
mov
je
in
andl
jno
shr
cmp
jl
fsubs
int3
add
dec
in
imul
or
lock
sub
pop
dec
pop
pcmpgtd
add
out
into
into
lock
and
shll
scas
hlt
sbb
fdivl
jmp
pop
dec
std
addl
ret
pop
cmpsl
stos
xchg
out
loop
enter
je
sub
je
xor
jne
loope
adc
add
dec
lods
lds
adc
add
loop
movsb
sti
dec
dec
push
stos
sti
push
jnp
repz
adc
imulb
in
arpl
add
movsb
inc
es
dec
stos
mov
sbb
cmp
xchg
push
add
sub
fstpt
jo
lret
mov
xchg
push
dec
icebp
adc
push
jne
cmc
popf
or
mov
test
int
call
cmpsb
mov
adc
in
insl
xchg
jg
or
fmuls
loope
mov
cli
pop
in
js
or
ss
inc
cmp
ds
add
fyl2x
leave
mov
xchg
dec
bound
mov
test
ret
imul
mov
xchg
mov
subl
mov
mov
xor
icebp
sbb
inc
xchg
dec
es
lahf
cmp
enter
sbb
push
imul
cmp
cmpsb
push
push
outsl
xchg
dec
movsb
data16
out
ret
xchg
jle
mov
pop
repz
or
fnstenv
shrb
icebp
call
cmpsb
push
hlt
fadd
mov
mov
sub
add
pop
pop
in
addr16
lcall
es
nop
adc
test
lret
mov
mov
lret
inc
fwait
add
sbb
ficomps
sub
fisubrs
addl
sub
xchg
push
insl
rcrl
add
push
ljmp
enter
ja
loop
scas
sbb
pushf
mov
out
addr16
mov
in
or
push
lret
roll
fbld
movsl
decb
fistl
adc
fbld
mov
insl
shr
orb
inc
push
jnp
jo
sbb
cli
scas
add
sbb
icebp
orb
push
mov
inc
fdivrl
xchg
pop
adc
dec
cmpsb
popf
or
jl
imul
inc
subl
cmp
inc
outsl
mov
inc
cmpsl
mov
xor
cltd
mov
mov
in
iret
orl
push
dec
mov
cmp
mov
pop
pop
push
fldenv
scas
sub
jnp
arpl
mov
pop
loop
or
cwtl
xchg
out
inc
repz
shll
xor
sarb
clc
cmc
das
jmp
or
pop
push
jnp
stc
cwtl
es
jp
test
push
imul
xor
xchg
xchg
sub
lahf
inc
dec
mov
jno
cld
mov
daa
mov
or
add
xor
imul
out
xor
push
mov
push
xorb
xlat
pop
nop
movsb
mov
mov
mov
lret
stos
out
clc
cmpsl
and
mov
insb
ficomps
and
mov
push
lcall
pop
jmp
iret
push
mov
es
popf
cmp
push
push
out
fdivl
sub
lea
jne
lcall
lcall
inc
ja
mov
iret
std
cmp
mov
inc
adc
adc
test
out
ljmp
insb
pop
dec
or
mov
outsl
mov
mov
cmpsb
inc
cmp
jge
add
lods
dec
call
push
imul
add
jns
movsl
jne
push
sub
hlt
adc
adc
das
in
outsb
sub
cltd
repz
stos
xor
add
push
call
mov
repnz
gs
arpl
loope
shlb
lods
insb
and
sub
call
pop
hlt
mov
cltd
dec
cmpsb
xstore-rng
cmpsl
inc
sbb
and
daa
mov
jg
mov
fcoms
fnstsw
mov
out
mov
sbb
jecxz
popf
cmp
je
xor
cltd
leave
pusha
or
icebp
cmpsb
shll
and
jno
or
push
stc
test
jae
or
lods
out
clc
cmp
pop
iret
inc
push
mov
adc
mov
mov
mov
jae
add
shl
fsubp
cltd
inc
mov
insl
mov
cwtl
push
xchg
in
aad
pop
popa
ret
clc
mov
call
fistps
imul
mov
ds
mov
cmp
leave
int
in
out
sarb
inc
mov
inc
insl
sbb
in
adc
pop
cld
push
dec
adc
mov
jbe
jae
push
mov
cmp
sub
loope
xor
xorb
sbb
xchg
xchg
push
mov
add
jmp
lcall
adc
xchg
push
icebp
leave
maxps
xchg
fs
mov
mov
add
xor
jle
xor
push
lods
ret
ret
insb
sbb
add
stos
inc
rcl
and
inc
xor
add
push
pop
je
stos
leave
pop
inc
das
arpl
lds
pushf
test
js
les
push
test
aaa
cmpsb
mov
test
jg
repnz
dec
in
frstor
outsb
cld
addb
push
xchg
inc
or
jo
sti
add
and
das
hlt
sub
or
lock
sarb
mov
movsl
add
sbb
lcall
dec
ss
in
or
in
outsb
xchg
leave
addb
outsb
pop
enter
sub
mov
mov
flds
push
mov
ret
fisubrs
pushf
cmp
bound
in
add
in
dec
enter
shll
mov
sub
xlat
faddp
in
jo
out
mov
sub
and
jnp
push
es
loopne
jns
cmp
in
mov
mov
das
lret
mov
add
data16
cmovge
cmp
daa
fwait
sub
decl
stc
mov
xchg
in
sbb
popa
cmp
cmc
or
icebp
and
lea
test
mov
and
addl
mov
das
leave
aaa
dec
sub
pop
push
in
push
and
or
inc
adc
iret
dec
pusha
cmp
add
les
imul
push
push
cmp
aaa
mov
mov
pushf
push
addr16
push
ljmp
ret
mov
xlat
mov
adc
sub
jns
lods
cmc
stos
sub
sub
test
out
dec
pusha
push
iret
jmp
and
repz
jbe
or
inc
lods
and
leave
inc
xor
in
push
int3
and
xor
popa
mov
es
add
sub
xchg
adc
lock
jnp
cwtl
push
inc
subb
cmpsb
in
stc
sub
mov
rol
cltd
outsl
fldt
and
push
sub
js
adcb
dec
add
or
repz
mov
push
pop
mov
gs
pop
xchg
ret
lret
mov
xor
lret
loope
add
test
lods
stos
icebp
cs
pop
and
mov
jl
sbb
push
mov
or
mov
ja
jmp
push
mov
adcl
aas
xor
gs
jbe
lods
enter
cmp
sub
xor
outsb
icebp
inc
icebp
pop
scas
testb
cmp
das
jno
pop
adc
movsl
jle
into
pop
lahf
cs
ret
cmp
dec
je
fwait
icebp
xchg
cmp
into
hlt
in
imul
xor
clc
xorb
mov
enter
cmp
cmp
inc
xor
ret
push
pop
adc
pop
scas
sbb
in
cmp
jl
jg
mov
fwait
jb
loop
mov
cmp
jnp
imul
rclb
shll
inc
mov
jmp
test
aaa
cwtl
inc
jno
test
push
and
out
jl
fstps
sahf
repnz
mov
arpl
jecxz
pop
mov
lahf
mov
xchg
in
pop
lcall
add
test
xchg
adc
dec
out
add
push
pop
fcoml
loopne
shlb
ljmp
int3
jb
and
cmp
pushf
jl
mov
ljmp
sub
clc
popf
add
mov
rclb
jle
inc
pop
and
call
push
ljmp
xchg
loopne
push
hlt
pmaxub
cwtl
jae
sbb
ret
mov
lret
xchg
lods
outsb
mov
cmpsb
push
dec
test
fadds
daa
sbb
in
popa
jl
ret
cld
cmp
in
push
insb
push
jge
mov
dec
leave
and
cmc
dec
dec
push
pop
xchg
movsl
dec
pushf
xchg
add
fdivr
fstpl
insl
cli
loope
add
pop
test
enter
dec
mov
imul
imul
ret
push
or
imul
cmp
arpl
mov
push
xor
mov
xor
mov
jno
rcrl
or
test
daa
out
xor
in
xchg
aad
inc
xor
fmul
arpl
lahf
imul
sub
cwtl
fs
lods
xchg
mov
popa
adc
mov
mov
cmp
lcall
mov
fcompl
or
test
mov
sbb
mov
fisttps
pop
les
mov
fmull
inc
push
je
jb
cmp
xor
pop
mov
push
ret
jle
js,pt
mov
push
and
or
dec
mov
pop
pop
nop
shl
mov
mov
push
cmp
test
pop
mov
sbb
and
mov
decb
sbb
and
push
inc
hlt
xchg
mov
push
pop
mov
xor
mov
push
scas
or
cwtl
xor
mov
pop
testb
mov
adc
in
fnstcw
cltd
mov
inc
xchg
pop
mov
or
repnz
sbb
adc
sub
mov
push
mov
push
sti
addl
shrl
loopne
inc
jae
loope
mov
push
pushf
jne
mov
push
adc
sub
loop
stos
xor
mov
loope
mov
add
cmpb
mov
dec
mov
ja
and
sbb
lock
or
bnd
cmp
cmp
outsl
mov
jbe
sub
popa
cs
adc
mov
xchg
add
xlat
fs
repz
sbb
sbb
mov
xchg
cmp
adc
sub
aas
lcall
sub
repnz
jmp
mov
xor
adc
push
push
out
popf
aam
push
out
lret
or
and
push
xchg
inc
mov
cltd
lahf
frstor
outsl
mov
sbb
xor
and
pop
dec
or
xor
mov
and
push
aaa
push
inc
call
and
adcb
mov
cltd
jl
mov
adc
push
jns
shrl
sbb
frstor
mov
cwtl
ror
and
xor
dec
ficoml
push
jnp
inc
or
addr16
inc
scas
fwait
pop
jp
dec
std
pop
mov
dec
bound
daa
inc
and
sbb
call
jno
inc
out
xchg
and
outsl
fisubrl
xchg
fldenv
scas
mov
daa
dec
jo
sub
sub
cmpl
cmpsb
mov
jb
rol
shll
dec
lods
mov
jne
and
xor
sub
add
fnstenv
cmp
cwtl
cmp
adc
mov
mov
jbe
cmpsb
test
cmp
sbb
pusha
xor
test
xchg
push
mov
push
loopne
dec
pop
pushf
xlat
fcmovu
pop
gs
ffreep
arpl
ljmp
mov
iret
jl
xchg
pushf
push
test
jbe
adc
je
data16
orb
scas
mov
stos
shlb
pop
cltd
fstpt
stos
cmp
jecxz
adc
cld
mov
shlb
cmp
and
subb
test
add
sbb
add
mov
mov
pop
cs
aaa
xlat
std
push
push
lret
fwait
movsl
aas
insl
dec
repz
mov
ror
xlat
cld
adc
dec
cmc
jns
adc
xchg
jg
or
jmp
xchg
jge
adc
xor
jns
and
and
sbb
out
adc
add
sbb
jp
push
cmp
lods
xchg
mov
push
ja
cmc
pop
and
sub
repnz
pop
pop
sbb
stos
push
pop
xchg
jp
sbb
adcl
mov
das
std
jge
cmpsb
fs
and
ja,pt
or
cli
push
cmc
cmp
lods
call
popa
hlt
jns
add
es
push
xchg
mov
jle
push
sbb
repnz
mov
fcomip
cs
sbb
mov
lods
jmp
jbe
xchg
xchg
iret
lret
and
das
aaa
std
xchg
popf
cmpsb
sbb
gs
mov
pop
jmp
jnp
movsb
sbb
movsl
fsubrs
mov
das
push
xchg
test
inc
or
imul
xor
lods
loop
xor
inc
cmp
xchg
incl
jbe
jmp
mov
sbb
pusha
and
ret
icebp
incl
nop
fidivs
mov
add
fnstsw
cmp
mov
imul
pop
adc
sbb
or
jecxz
clc
push
sbbl
mov
inc
pop
sbb
fwait
sbb
jecxz
mov
jae
cmp
sbb
push
inc
addr16
inc
pop
push
adc
in
inc
jo
push
and
mov
sub
scas
lcall
cmp
and
xchg
cmp
aad
jo
pushw
cmpb
fcomp
jb
or
jns
xor
pop
adc
jle
enter
hlt
pop
and
dec
jg
stc
mov
test
and
cmpsb
sbb
mov
cmp
test
ficomps
xchg
mov
add
pop
xchg
sbb
call
add
cli
mov
popa
insl
dec
jg
stc
push
stos
je
shrb
pusha
nop
mov
add
xor
mov
and
fists
div
cs
lahf
orl
fwait
lea
fistl
adc
or
pop
sbb
fdivl
bound
add
jb
popl
into
adc
insb
int3
sub
mov
mov
mov
xor
mov
stos
mov
fimull
movsl
js
and
testb
xlat
lea
movsl
jmp
movsl
push
and
fimuls
shrl
test
jb
pop
cmp
cmp
aas
adc
add
push
fdivl
jnp
aaa
xor
addr16
xor
test
sbbb
fdivr
imul
xlat
dec
les
clc
xor
mov
scas
repz
scas
jg
and
fisubl
daa
pop
aaa
sarb
or
sbb
push
mov
pushf
mov
xlat
dec
fxch
arpl
in
popa
add
out
in
fmulp
dec
dec
cmp
and
fidivrl
mov
icebp
push
lret
mov
insb
sub
idivb
daa
inc
aaa
cmpsb
dec
sbbl
and
cmovns
mov
push
sub
mov
aaa
and
or
cmp
jno
popfw
xlat
into
sbb
fiadds
inc
xor
imul
jb
cmp
xor
ja
mov
inc
nop
cmp
clc
outsb
mov
sub
icebp
cmpsb
pop
lahf
inc
inc
cmp
mov
data16
push
and
inc
adc
jle
dec
jno
push
hlt
rolb
in
lods
xorl
add
sub
js
test
jno
add
scas
aaa
loope
fists
or
jl
sti
mov
ret
sub
xchg
xchg
mov
add
gs
jnp
test
pop
push
inc
pop
pop
jp
loope
sbb
jne
enter
jle
xor
inc
scas
push
pop
pop
adc
ja
icebp
mov
sbb
push
jg
popf
sbb
std
pushf
out
sbb
mov
push
pop
arpl
mov
xchg
xchg
pushf
mov
loope
movsb
xchg
or
insb
imul
adc
push
lret
addb
out
addr16
stos
nop
mov
inc
in
icebp
ss
loope
fidivs
sbb
xchg
mov
out
repz
push
or
cmp
cmp
push
adc
sbb
outsb
and
dec
int
sub
push
outsb
lods
mov
incb
test
sub
xchg
lock
jb
cmpsb
inc
sti
ret
loop
mov
or
cmp
aad
popa
outsl
negl
add
lcall
jmp
mov
pop
rcll
push
adc
fidivs
inc
notl
inc
stc
xchg
mov
sbb
jae
movsb
pop
jmp
push
testb
pushf
lods
les
mov
pop
xchg
jge
movsb
pop
mov
sbb
out
int
pop
gs
xor
leave
pop
ds
mov
sub
loop
push
stos
add
inc
jecxz
loop
lret
or
or
pop
jge
movsb
pop
lret
mov
aas
jmp
popa
ja
mov
in
pop
fcompl
pop
popf
push
jl
jg
mov
js
mov
fs
mov
addr16
push
outsl
xor
xchg
sbb
icebp
adc
push
imul
stc
dec
stc
adc
cwtl
pop
jae
mov
mov
jbe
sub
xor
mov
mov
test
imul
rcll
sbb
and
pushf
out
pop
pop
fcomps
lock
insl
mov
pop
ljmp
xchg
les
jge
pop
fwait
and
adc
pushf
xchg
clc
push
out
rcrl
pop
fsubr
pop
fwait
outsl
fadd
dec
xchg
pop
movsl
push
xor
fs
pop
xor
nop
jmp
push
push
adc
sub
cld
xchg
insl
pusha
mov
int3
js
dec
xor
cs
jno
or
add
or
xchg
mov
icebp
movsl
clc
sbb
and
push
inc
dec
fidivl
adc
arpl
test
std
xorl
nop
sbb
testl
je
jl
stos
stc
out
xchg
fdiv
xor
mov
clc
lahf
daa
sbb
mov
xchg
rcrl
leave
or
cwtl
movsl
adc
cmpsl
popf
fidivl
xchg
mov
xchg
push
mov
xchg
mov
xchg
mov
dec
inc
cmp
pop
outsl
inc
jno
std
sti
movsl
jae
mov
ret
push
in
ret
sbb
movsb
sahf
mov
cmpsl
jbe
div
ss
fsubrl
lahf
ss
and
mov
dec
scas
mov
leave
cmp
aad
sub
cli
pop
leave
and
out
fdivr
out
les
ficompl
xor
out
xor
ss
sbb
cmp
or
push
test
dec
push
movsb
sub
xchg
inc
and
sbb
push
cltd
fwait
or
dec
movups
sub
pop
test
cwtl
repnz
jl
dec
ret
pusha
lock
xchg
mov
fidivl
pop
dec
fidivrl
addb
sub
ja
fnsave
faddl
outsb
in
cmp
movsb
sbb
aad
mov
jno
insb
adc
or
and
lods
or
jecxz
fcmovu
ficoms
int3
add
jnp
mov
lea
idivb
fidivs
flds
sbb
push
mov
pushf
jmp
lcall
adc
push
ljmp
xor
dec
jae
jo
xchg
push
mov
ret
arpl
mov
mov
in
arpl
mov
orb
adcl
in
leave
sahf
cmp
outsb
sti
xchg
lock
scas
cld
shlb
add
inc
hlt
inc
loope
outsl
jge
test
sbb
lahf
daa
lret
sub
in
inc
push
gs
xchg
push
xor
cmc
xchg
js
jl
inc
arpl
cmp
pusha
and
mov
dec
sub
rorb
cmp
out
jns
sar
sbb
mov
fwait
push
jmp
arpl
sub
scas
inc
fsts
cltd
jecxz
jge
and
into
into
cltd
rcrl
inc
cmpl
sahf
mov
mov
adc
fidivs
test
jl
gs
mov
xchg
pop
sbb
inc
add
sbb
nop
push
sbb
or
mov
dec
or
ljmp
pop
adc
fisubs
or
into
xor
fucomip
sub
xor
mov
test
cmp
mov
cmp
cmpsb
mov
je
pop
addb
sub
xchg
push
pop
mov
xor
or
add
sbb
pop
inc
lea
lods
dec
leave
lock
cmpsl
mov
inc
ja
xchg
xor
cmp
push
repnz
or
outsl
mov
bound
in
enter
aas
dec
repz
xor
scas
lods
lods
inc
mov
pop
dec
mov
xor
nop
bound
xlat
cmc
les
mov
jle
cli
movl
icebp
adc
repz
lcall
rorl
imul
or
aam
jae
test
pop
test
push
mov
popa
cli
sbb
xor
adc
jno
pop
loop
cltd
pop
mov
sahf
rcr
fcompl
jnp
lea
out
sub
mov
bound
push
mov
dec
mov
xorb
fistps
testb
int
push
cmp
mov
aam
sbb
add
ja
push
mov
into
mov
lcall
cmpsb
xchg
cmp
push
dec
add
jae
xor
fidivs
cs
lock
sub
iret
push
popf
mov
and
jmp
fstl
rorb
xchg
repnz
cmp
add
cmp
aas
js
nop
jecxz
sbb
sbb
mov
pushf
xchg
pop
out
cmp
idiv
shll
mov
loop
xchg
fwait
adc
insl
push
scas
xlat
add
ror
jg
data16
loope
aam
jnp
mov
rol
jo
mov
ret
inc
push
mov
and
mov
cwtl
sbb
fs
fistpll
test
jg
sbb
xor
or
nop
loope
push
xchg
stos
loop
fiaddl
mov
pop
addb
jbe
jo
outsb
sub
inc
mov
cmp
iret
mov
bound
jmp
aam
and
repnz
sbb
ja
inc
movsl
cmp
push
and
aam
push
mov
daa
xor
jae
xchg
bound
test
pop
and
loopne
shlb
jmp
jno
sbb
and
movsb
andl
lds
or
je
pop
test
pop
sbb
cmc
pop
or
jno
cmp
bound
cltd
sub
cmp
lcall
adc
mov
cli
cmpsl
int
mov
inc
outsl
iret
fs
leave
dec
hlt
mov
mov
inc
insb
scas
in
or
aas
lretw
adcb
popf
mov
lahf
std
stos
mov
cwtl
hlt
mov
adc
inc
pop
pop
insl
iret
js
mov
mov
addr16
xor
pop
testl
jl
fwait
lret
push
jecxz
std
fucomp
fmuls
movsb
into
jb
dec
out
shlb
loope
popa
cmp
int
or
sub
jl
fbld
xorb
movsb
mov
push
jecxz
dec
std
mov
pop
movsb
mov
aaa
jge
mov
inc
in
cmp
test
in
mov
mov
jecxz
movsb
mov
test
pop
jle
inc
mov
lods
adc
mov
jp
add
sub
movl
inc
int
cli
push
mov
mov
mov
dec
pushf
jp
dec
push
add
cmpsl
lods
cmc
xchg
push
inc
push
mov
push
test
dec
out
mov
inc
ret
dec
add
push
cmp
mov
ret
mov
sbb
cmp
or
push
aas
out
es
js
icebp
call
mov
rclb
dec
jmp
or
loope
in
xchg
stos
mov
scas
pop
cmp
ja
test
xchg
jecxz
mov
push
fstp
sahf
ss
sti
inc
pop
mov
rolb
scas
shll
push
xchg
outsl
push
sti
les
adc
out
and
pusha
cmp
pusha
ja
add
mov
scas
mov
pop
rorb
mov
in
add
jp
leave
or
scas
sub
sti
push
jb
pop
sub
dec
adc
repz
mov
mov
fidivl
mov
insb
lock
ljmp
mov
mov
cs
out
movsb
xchg
cmpsl
sub
ja
dec
push
push
iret
push
shr
gs
aad
jnp
fwait
mov
test
fs
xchg
add
ret
ljmp
pop
xchg
sbb
jno
and
dec
jp
shlb
mov
cmpb
mov
xor
add
fwait
gs
cmp
push
mov
cmp
daa
push
std
ret
movsl
sahf
lea
shrl
orps
leave
pushf
adc
dec
popf
shrb
scas
out
dec
lock
dec
cmp
and
fadd
scas
test
cwtl
movsl
sti
les
inc
jns
pop
sub
xor
sbb
stos
bound
push
sbb
push
cwtl
jge
sahf
scas
and
outsl
rorb
lahf
movsb
dec
js
push
insl
out
pop
cli
jg
inc
js
fcmovu
sti
les
add
xchg
jl
pop
jmp
lods
movsl
rclb
lahf
in
mov
mov
mov
test
jnp
popa
xchg
ss
sbb
rcrb
aad
cli
add
dec
fldz
clc
dec
add
cwtl
mov
in
jmp
imul
movsl
jno
test
loopne
iret
sbb
mov
xor
push
inc
movsb
cmc
adc
mov
pusha
xchg
mov
pusha
lret
or
popa
dec
mov
lret
fwait
push
jae
jmp
jnp
jg
lds
mov
bound
push
push
xor
mov
mov
roll
mov
xchg
out
imul
add
push
fwait
das
mov
stc
lret
dec
test
inc
push
into
mov
enter
imul
lahf
mov
scas
movsl
mov
imul
xor
push
ret
rorl
in
sub
cmpsl
xchg
test
movsl
jno
jno
arpl
push
mov
mov
add
cli
lahf
enter
clc
jo
inc
fcompl
mov
and
mov
pop
clc
sub
mov
pop
xlat
xor
sti
testl
js
cmp
ficoms
jmp
xor
daa
mull
into
cs
mov
fdivrl
leave
xchg
mov
pop
lea
sub
cmpsb
xor
arpl
push
and
add
loopne
xlat
les
xchg
aas
inc
cmp
dec
imul
loope
imul
sbb
divl
loope
cmpsb
jnp
ljmp
mov
dec
sub
sbb
xchg
inc
pop
and
mov
pop
shrl
mov
push
inc
jb
or
adc
std
lods
int
dec
das
fcmovu
mov
cmc
mov
roll
sub
pop
push
dec
pop
mov
fstl
sub
mov
lahf
ja
or
lret
jge
xchg
lret
cmpsl
fcmovbe
fists
dec
dec
fistl
inc
ljmp
xchg
sub
jno
push
rol
je
jge
jmp
adcl
flds
divb
pusha
mov
add
sub
adc
into
inc
dec
lock
int3
adc
pop
jl
lret
mov
in
inc
icebp
push
call
test
mov
sub
stos
add
jno
push
movsb
xlat
fidivs
pop
loop
inc
xorb
dec
loopne
imul
inc
lahf
inc
xchg
sub
xchg
cld
mov
xor
sti
mov
inc
rcrl
mov
out
push
loop
jecxz
out
pop
or
mov
out
xchg
sub
cmp
cmp
into
es
ret
dec
dec
cld
repnz
test
dec
or
mov
mov
lret
xchg
sbb
sub
cmpsb
ss
leave
mov
xor
mov
mov
sar
pop
leave
mov
mov
push
shl
mov
sbb
nop
sub
xor
adc
daa
mov
daa
jg
out
cmpl
ljmp
sarb
sbb
rcll
sbb
cmpsl
xor
dec
jl
lret
dec
cmp
pop
mov
pop
mov
pushf
out
mov
push
xchg
jnp
mov
pop
cmp
mov
mov
ret
sbbb
and
imul
in
enter
cmp
mov
ljmp
aam
and
test
rcl
imul
dec
ret
mov
and
ds
pop
out
bound
jb
and
sub
movsb
and
addl
cmpsb
stc
into
mov
add
cmp
lcall
mov
stos
mov
inc
int3
jo
aas
loopne
insb
mov
inc
jl
add
xchg
ret
pushf
in
fdivrs
pop
sti
push
ficoms
inc
push
cmpsl
jg
loopne
ss
jo
mov
inc
repz
inc
mov
cli
hlt
mov
addr16
lcall
jbe
incb
fcmove
repz
fs
arpl
test
cmpb
cltd
mov
pop
subl
adc
popf
pop
cmp
xchg
cmp
call
je
adc
sub
jmp
jbe
xchg
inc
xchg
push
and
fwait
das
fiadds
int
xor
cmp
sbb
ds
hlt
sub
fsub
dec
xor
push
addr16
repz
mov
jo
push
cmp
mov
pop
mov
decb
scas
add
sub
clc
inc
adcl
push
and
adc
xchg
dec
push
pop
cltd
sbb
adc
pusha
das
xchg
int
mov
stc
fistps
std
pop
sahf
ja
cmp
cltd
cmp
and
outsl
xor
mov
jge
xor
pop
mov
inc
jecxz
xor
xor
mov
pop
mov
jg
cmp
dec
adc
and
fdivp
divl
mov
cmc
test
sbb
hlt
jmp
pop
out
dec
push
pop
mov
jge
hlt
mov
cmp
cs
mov
jo
in
cmp
pop
cli
or
mov
sbb
sbb
ds
adc
push
mov
stc
push
or
insb
out
push
jno
mov
clc
jne
int
movsl
ds
cli
clc
loope
push
push
xor
scas
test
push
or
lret
aad
jae
jmp
shrl
jmp
mov
sbb
xchg
adc
icebp
xor
ror
pop
test
inc
imul
sahf
fs
inc
inc
cmpsb
roll
jl
rep
mov
pushf
pop
fcoml
sarb
aad
jo
xchg
shr
push
int
mov
xor
mov
inc
imul
sarb
sbb
cmp
mov
jae
xor
fdivrl
dec
sahf
pop
aaa
cmpsb
and
lahf
in
xor
jg
mov
das
gs
int
test
fdivp
pop
xor
mov
or
cmpsb
jne
pop
dec
mov
in
or
cmp
outsb
push
fildll
jae
pop
mov
fs
loopne
addr16
js
ja
aad
jl
push
loope
sbb
or
cmc
push
outsl
mov
cmpsb
pop
or
lcall
jns
jo
andb
into
push
imul
cmp
push
pushf
out
xor
leave
sub
arpl
xor
ficoms
cld
mov
mov
stos
iret
test
movsb
and
ljmp
aad
mov
dec
aam
imul
negb
and
in
loop
adc
adc
pop
jne
dec
in
insl
lret
mov
gs
jae
inc
in
push
add
cmp
jecxz
clc
stos
ljmp
fxch
sbb
xchg
cwtl
inc
jge
lret
iret
fld
xor
enter
insl
xchg
sarb
or
bound
dec
pop
jp
add
xchg
jo
jmp
mov
dec
sub
push
inc
inc
adc
addr16
bound
mov
jge
mov
ficompl
loope
fwait
jge
pop
mov
cli
pushf
int3
push
pop
and
jo
fcomps
insb
xchg
movsl
ror
xlat
pop
ficompl
test
pop
mov
in
jae
sbb
ljmp
cmp
xchg
je
gs
into
xor
fsubrs
shl
jmp
imul
add
leave
std
sbb
push
cltd
cmpb
bound
xchg
or
cmp
sbb
mov
xor
pusha
popl
insl
pop
or
or
cmp
push
mov
add
jae
sbb
scas
add
dec
popl
arpl
dec
xchg
fwait
xchg
insl
in
stos
ja
fstps
xchg
test
cmpsl
dec
nop
cli
cwtl
jnp
jns
push
mov
pop
data16
mov
dec
or
into
subb
add
ja
in
lahf
inc
xchg
in
lcall
pop
and
or
push
xor
aaa
pop
shll
repnz
movsb
inc
call
xchg
ret
shr
add
inc
rorb
lahf
leave
or
int
call
mov
pop
iret
call
push
pop
xchg
adc
xor
in
mov
stc
mov
inc
inc
rep
jge
gs
jbe
ret
imul
test
or
push
in
pushf
push
and
ret
mov
jno
push
adcl
or
add
out
mov
adc
inc
in
mov
lods
inc
aam
add
mov
dec
or
add
push
lret
push
xor
cmp
rorb
out
xchg
push
sub
jl
lea
dec
stc
mov
sbb
rcrl
mov
int
and
test
ss
divb
add
hlt
fwait
jno
pusha
jnp
lret
lds
leave
stos
int3
jbe
ret
test
test
push
sbb
pop
fisubl
ret
popf
imul
mov
repz
div
mov
fdivs
sub
xchg
fisubrs
xchg
testb
shl
and
mov
fcmovbe
and
pop
imul
imul
jnp
mov
js
mov
xchg
push
sub
inc
pop
dec
js
dec
daa
xchg
mov
out
add
pop
inc
sti
aaa
fisttps
xchg
ret
dec
iret
ss
movsb
and
inc
lock
into
lcall
adc
inc
jge
sarb
adc
jp
jg
push
aas
aaa
and
ret
stos
mov
xchg
jb
imul
test
mov
insl
sarl
xor
sub
out
jnp
inc
out
mov
dec
cmp
rcr
sbb
int
lcall
inc
stos
inc
sub
mov
pop
out
push
and
and
sbb
xchg
ljmp
flds
jbe
xchg
fwait
in
add
mov
imul
lea
dec
xchg
push
testb
das
loop
fnsave
add
mov
pop
xlat
inc
pop
out
sub
fdivrl
jmp
push
lcall
dec
fidivrl
xor
dec
sbb
jnp
ret
xor
jp
pop
fldenv
in
ret
mov
xor
cmp
cmp
std
arpl
xor
sbb
shrl
or
aaa
xor
mov
jge
xor
cmpsb
cltd
sarb
test
maxps
outsb
inc
jmp
test
mov
push
push
aas
push
ja
cld
shlb
xchg
test
in
xchg
imul
dec
xchg
orb
jnp
xor
lods
leave
add
rolb
in
js
pushf
inc
iret
jbe
dec
jg
dec
mov
divb
pop
pusha
push
mov
push
mov
add
jl
push
fiaddl
movsl
add
jp
push
iret
lahf
lahf
out
sub
test
repnz
and
frstor
jo
mov
js
xchg
mov
mov
inc
pop
mov
lods
sbb
lret
dec
lods
cmp
pop
xchg
push
mov
testb
mov
sbb
mov
pop
fadd
fsubrs
pusha
pop
mov
push
nop
jno
sub
jl
jno
mov
cs
add
jl
insl
int
cltd
add
cmp
inc
popa
sti
das
jae
jno
sub
xor
xchg
lret
aaa
outsl
and
imul
addb
cmc
pushf
shr
mov
cmp
loopne
add
or
lock
dec
inc
sub
sub
pop
aaa
sub
lret
mov
cmpsb
pushf
xchg
int3
mov
xor
or
sub
xchg
push
pop
daa
aaa
inc
sub
out
add
notl
pop
add
mov
xchg
adc
xor
int
and
andl
sub
sub
shr
jnp
and
outsb
into
sub
ss
and
sub
cmp
out
nop
clc
jge
mov
sbb
clc
or
dec
mov
int3
jmp
inc
push
and
inc
addr16
pusha
mov
mov
sti
mov
insb
insl
mov
and
xor
add
inc
movhps
pushw
or
imul
sub
lods
mov
pop
int
scas
ja
in
and
stos
dec
and
or
push
adc
lcall
push
cmp
adc
aam
mov
hlt
ds
add
bound
add
jmp
push
adc
mov
out
cmp
xchg
clc
or
lds
addr16
mov
out
test
orb
or
iret
cmpsb
mov
aam
or
mov
les
mov
jl
cmc
in
fmull
sbb
jge
xor
xchg
das
inc
mov
outsl
sub
ljmp
fildl
xor
out
inc
ret
adc
sub
cmpsl
mov
push
aam
into
xchg
shlb
xchg
cld
xchg
push
das
sbbb
mov
mov
mov
std
sub
mov
and
sub
mov
cmc
das
inc
negb
lods
xchg
jge
lret
aam
fadds
or
xor
mov
and
jne
sub
xchg
lea
fldcw
clc
mov
out
pushf
xchg
test
in
mov
jmp
jl
jmp
lods
and
mov
mov
inc
mov
dec
mov
rcl
mull
test
and
cmp
dec
pushf
pop
adc
in
popf
add
mov
inc
push
push
mov
add
leave
xor
add
mov
test
test
out
pusha
enter
add
imul
dec
mov
cltd
out
jno
js
clc
xor
or
jmp
dec
mov
adc
xchg
pop
pop
xchg
dec
mov
mov
inc
int
adc
sbb
cltd
xor
cmp
imul
or
push
cli
cli
or
sub
lret
push
or
out
dec
pushl
lret
mov
cmpsb
jl
or
sub
mov
into
int3
jmp
sbb
xor
pop
pushf
movsb
jle
push
xchg
pop
add
push
xor
pushf
mov
inc
shl
cltd
dec
mov
outsb
sub
pop
push
arpl
and
push
insb
inc
jmp
fisubs
lcall
push
clc
or
add
mov
add
jg
push
pop
mov
mov
in
push
or
jbe
push
jns
dec
sub
mov
aad
test
dec
fmuls
sbb
int
ja
das
mov
test
adc
and
in
hlt
outsl
xchg
inc
test
mov
ret
sbb
mov
jg
mov
aam
mov
jno
inc
and
dec
pusha
inc
push
xchg
test
dec
mov
xlat
inc
cli
jp
lahf
test
inc
int3
dec
insl
mov
push
push
jmp
mov
push
mov
scas
pop
clc
or
enter
mov
pop
dec
jae
sbb
sbb
push
aas
sub
aad
aaa
es
jnp
mov
fldl
inc
icebp
out
push
add
insl
mov
lods
cmpsl
mov
aam
scas
movaps
mov
out
push
icebp
xor
push
scas
dec
int
mov
cltd
cmpsb
insb
mov
cmp
in
mov
fldcw
sub
push
ljmp
and
push
xchg
nop
popa
or
arpl
je,pn
sbb
lret
xor
push
insl
lea
aas
popa
scas
mov
cltd
or
mulb
ljmp
loope
mov
jno
mov
mov
les
jne
mov
mov
cmp
add
jge
popf
ds
xchg
subl
iret
leave
xchg
xchg
dec
dec
push
adc
push
mov
insb
in
adc
xorb
pop
je
loopne
sahf
xlat
pop
pop
mov
fsubrl
adc
or
fwait
sbb
adc
orb
sbb
jo
das
xor
roll
sbb
sub
push
xlat
pop
jg
mov
dec
loopne
dec
icebp
xchg
fwait
cld
stos
mov
test
cmp
sbb
xchg
cltd
fisubrs
imul
sbb
sbbb
sub
enter
xor
inc
cld
cld
cmp
and
add
mov
xchg
repnz
aam
adc
out
int3
fsubrs
cmp
call
mov
xor
in
rorb
insb
insb
mov
jmp
mov
call
xchg
ljmp
fbstp
or
xor
or
xchg
jbe
dec
int3
flds
rcrl
sbb
dec
mov
jmp
push
and
pop
fidivl
loope
add
jge
push
sbb
into
mov
push
mov
stos
sti
fstpl
std
hlt
fs
gs
nop
loop
in
jecxz
xchg
cmp
add
add
add
pop
push
repnz
ja
jb
fsubp
jmp
dec
ss
sbb
inc
push
cmp
int3
add
lds
xor
and
movsb
pop
adc
push
in
jg
shlb
loop
icebp
mov
sub
enter
frstor
clc
scas
inc
movsl
adcb
inc
cmp
ja
std
mov
fs
cmp
scas
push
adc
in
int
mov
ds
data16
mov
cmp
lds
subb
call
push
add
ds
jp
push
mov
adc
call
mov
les
mov
popa
popw
imul
mov
or
inc
in
lea
repnz
sbb
mov
jnp
call
xchg
int
xchg
cmp
sbb
leave
mov
mov
xor
and
lods
adc
sbb
pop
adc
imul
cmp
repz
jo
and
xor
inc
pop
mov
ljmp
add
gs
popf
xchg
icebp
out
or
sbb
mov
sub
jo
dec
cmp
repz
dec
in
add
pusha
das
mov
fwait
jo
adc
mov
add
mov
or
ds
mov
lahf
xor
cli
lock
mov
adc
ljmp
push
lods
xchg
mov
mov
jns
mov
xor
add
push
push
push
mov
xchg
jge
pop
mov
fisttpll
push
xlat
cmp
imul
jb
lock
lea
inc
mov
fildll
sbb
loopne
push
popa
rcl
es
push
and
int3
push
test
aaa
adc
ret
xorb
xchg
lods
fcmovb
and
test
xor
dec
inc
push
mov
test
shl
xor
lahf
xor
icebp
pop
lret
fdiv
fwait
pop
cmp
sub
push
rcl
dec
in
dec
sbb
add
das
cld
add
iret
rcr
mov
stos
stos
dec
outsl
mov
imull
stos
or
push
movsl
mov
std
and
arpl
int3
test
adc
sub
xor
call
cmp
mov
push
repz
lea
in
pop
daa
cmc
cmp
add
ss
dec
add
out
ss
pushf
jae
test
sub
fisubl
sbb
push
dec
dec
and
jns
add
jmp
shl
mov
mov
dec
mov
jmp
repz
add
in
fbstp
add
adc
hlt
jp
push
pop
dec
sbb
xchg
sbb
inc
inc
lcall
mov
push
repz
out
pop
dec
jl
jg
cmp
mov
mov
lahf
out
pop
lcall
lret
sbb
lods
daa
dec
test
lret
lea
shrb
inc
aas
jbe
popa
mov
daa
push
cwtl
dec
lahf
out
lods
enter
incl
sbb
jp
inc
dec
rorb
push
mov
jmp
test
push
out
cmp
stc
dec
add
fistps
aam
std
or
lods
mov
sbb
mov
std
xchg
xchg
stos
xchg
fwait
lods
sub
mov
cmp
ljmp
inc
xchg
mov
roll
push
or
pop
fwait
cmp
xchg
lds
pop
lahf
mov
push
movsl
sbb
sub
aad
or
bound
sub
jns
ret
lcall
mov
adc
aaa
movb
les
mov
xchg
xchg
xchg
cmp
xchg
lret
or
fists
pushf
gs
repz
push
repz
lods
mov
loopne
pop
adc
cmpsb
inc
mov
int3
mov
fisubl
call
jge
hlt
mov
adc
cltd
xlat
je
jae
xor
pop
shrl
push
adc
sub
stos
test
rcll
adc
inc
mov
loop
test
in
jle
adc
jp
adc
cmp
test
sti
xchg
jp
and
mov
sub
test
dec
dec
jl
ss
adc
push
lcall
hlt
loop
push
mov
js
xchg
inc
pop
in
pop
cltd
pushf
jmp
mov
pop
cmp
adc
mov
push
nop
stos
mov
mov
enter
fstpt
out
sbb
push
test
cltd
sbb
rolb
sbb
cld
insl
xor
fildl
lahf
push
andb
adc
jge
sbb
es
and
dec
ret
xchg
xchg
aam
jp
mov
and
dec
scas
xchg
jl
fwait
sbb
test
mov
cmp
test
arpl
cwtl
cli
jns
scas
mov
out
jecxz
jle
inc
rorb
js
cs
adc
mov
scas
mov
pop
and
sub
xchg
push
lcall
popl
adc
mov
enter
hlt
addb
jl
ljmp
shrl
adc
inc
movsb
sbb
int3
xor
pop
xor
add
into
dec
cmp
arpl
and
clc
popf
lds
mov
adc
aas
mov
aam
pop
frstor
inc
push
aad
loope
fsubl
popa
cwtl
dec
cmpl
lcall
fnstsw
cmp
xor
cmp
xchg
xchg
daa
sar
addb
hlt
imul
jge
mov
add
inc
pop
push
mov
jns
or
stos
adc
fcoms
lea
mov
repnz
sub
incl
lret
pop
inc
jns
xchg
push
cmp
fwait
jmp
aad
push
mov
lret
out
xchg
jge
jno
sub
shl
pop
and
mov
das
scas
add
mulb
xor
icebp
out
je
sub
shll
pop
adc
inc
and
mov
test
hlt
pop
xor
mov
les
jecxz
mov
mov
sbb
orb
jl
adc
mov
or
push
pop
jns
cmp
add
daa
mov
cmpsl
mov
xchg
pop
inc
mov
int3
pushl
fcompl
adc
test
sbb
jno
xchg
push
int3
or
xor
dec
lock
lcall
mov
xchg
cmpl
cmc
pusha
arpl
cmpsb
inc
shlb
xchg
cmp
test
imul
or
stc
movsb
fsubr
dec
ror
dec
fadds
lea
movsb
cwtl
or
shrl
add
repz
dec
int3
or
cmp
add
mov
mov
and
sar
jecxz
sti
stos
or
mov
jl
inc
int3
mov
inc
inc
adc
pop
inc
sub
scas
push
push
sbb
insb
jns
adc
or
mov
mov
cmp
outsb
xorl
add
insb
shll
sub
std
and
test
flds
and
xor
adc
pop
test
adc
xor
test
pop
and
call
repz
insb
in
sarl
loope
into
pop
clc
or
enter
rcll
repnz
add
fwait
adc
lret
scas
cwtl
ret
les
cmpsl
mov
pfsub
mov
imul
jmp
mov
lods
or
adc
adc
adc
jb
push
movsb
fs
push
scas
mov
subb
jl
stc
mov
mov
sub
xchg
inc
arpl
mov
dec
pop
cli
pop
adc
imul
pop
sarl
call
jb
add
pop
ficoml
jbe
cmp
and
fnstcw
mov
paddb
out
dec
jmp
bound
movsl
loop
mov
les
jb
dec
icebp
push
jl
mov
push
iret
jne,pt
sahf
or
notl
js
inc
sub
test
mov
test
ss
out
dec
push
xlat
mov
ret
out
add
or
insb
sbb
and
xchg
mov
data16
mov
imul
xor
inc
arpl
mov
outsl
pop
fmull
add
xor
or
mov
inc
popf
xlat
jbe
rorb
jle
cli
sub
decl
scas
outsb
dec
inc
xchg
xchg
add
rolb
aas
roll
mov
or
movsbl
xor
icebp
nop
js
inc
cwtl
mov
scas
out
jne
jge
and
rclb
cli
nop
andl
in
cmp
mov
popa
cwtl
push
std
jg
push
mov
add
lcall
stos
and
divl
jbe
popl
add
cs
faddl
roll
add
push
jnp
sbb
stos
fidivrs
inc
push
xchg
inc
repnz
ret
mov
cli
loopne
movsl
rcll
or
mov
fwait
scas
aas
nop
adc
jb
sarb
or
jle
xchg
sbb
or
mov
clc
jge
inc
ret
loop
std
mov
and
adc
test
inc
xchg
ljmp
pushf
cs
ret
sahf
mov
jmp
pop
pop
in
loopne
mov
adc
mov
test
lods
daa
rdtsc
or
jb
and
pop
sbb
jns
cltd
sub
es
fdecstp
mov
int
aam
or
inc
push
loope
les
mov
xchg
imul
add
push
notb
push
mov
push
adc
in
jae
mov
pop
pop
adc
std
adc
xor
aas
gs
loopne
imul
sub
mov
add
xchg
int3
fnstenv
inc
xor
pop
pop
and
sbb
jmp
jne
mov
jmp
shr
xor
in
popa
cmp
mov
bound
pop
xchg
xchg
push
sub
shl
movsb
push
jns
jmp
mov
sub
ljmp
sub
and
pop
mov
push
std
aam
out
mov
mov
cs
jmp
imul
sbb
movsl
aam
jg
and
push
adc
mov
int3
sarb
push
jg
int
movq
cld
stos
cmp
adc
jle
in
jnp
sbb
jle
dec
pushf
and
and
jp
jecxz
loope
push
pop
repnz
add
pop
ja
cs
xchg
dec
sub
inc
jnp
lods
adc
xchg
xchg
repnz
idiv
pop
rcll
jge
pusha
push
pop
cmp
add
jnp
sbb
and
xchg
movsl
shlb
in
adc
sbb
leave
shll
in
push
lods
jb
add
cmp
leave
outsl
jge
and
pushf
pop
in
and
push
xor
dec
or
cmp
call
lret
aad
inc
sbb
fldcw
lret
imul
imul
out
in
arpl
mov
add
icebp
adcb
xchg
adc
lock
ret
pushf
and
push
repnz
push
dec
stc
xor
sub
xor
enter
dec
mov
loopne
movsb
or
xor
xchg
adc
xlat
adc
inc
inc
or
call
lods
ja
sub
xchg
cmp
sahf
out
mov
das
pop
cmp
js
xor
out
leave
push
jo
push
test
mov
mov
ds
shll
sub
and
push
popf
jge
in
mov
or
lea
leave
add
or
pop
sub
incb
xchg
out
inc
jge
and
imul
cmc
xchg
push
jns
negb
add
leave
cld
inc
xchg
mov
lock
push
movsb
push
pop
popa
dec
insb
test
inc
sbbl
das
inc
jns
addl
subl
add
adc
rcll
scas
stos
jne
lds
jb
fmuls
xchg
call
hlt
shll
or
ret
lock
or
outsl
xchg
sarb
pop
test
cmpsl
xchg
xchg
into
mov
mov
in
push
out
mov
mov
dec
ret
insb
cmp
mov
out
enter
or
sbb
and
sbb
test
out
movsb
imul
shrl
enter
cwtl
mov
xchg
lods
xchg
ret
icebp
sbb
sbb
xchg
cli
outsl
inc
rcl
loop
iret
sub
xchg
loope
mul
jmp
imul
stos
cmp
mov
dec
xrelease
rol
ret
cmp
inc
mov
and
pushf
ss
hlt
push
jmp
jno
in
not
fildl
or
jp
jmp
push
xlat
mov
movsb
xchg
jno
adc
xchg
lret
sti
test
out
movsb
aam
rcrb
sub
xor
movsl
cmp
imul
xchg
cwtl
pop
stos
rolb
pop
pmulhuw
pushf
push
jecxz
xor
pop
cs
sub
in
push
test
push
cmp
inc
daa
push
dec
into
mov
add
test
into
push
in
cmc
add
leave
jbe
call
pop
mov
aam
clc
outsl
mov
in
rolb
shl
lret
ljmp
jmp
cs
push
in
pop
enter
cmp
mov
inc
les
or
sbb
or
arpl
mov
out
add
sub
dec
imul
jo
jl
dec
inc
pop
pop
jmp
xor
mov
imulb
testl
in
mov
aad
pop
pop
dec
xchg
and
loope
ja
mov
mov
push
pop
add
mov
mov
lods
test
jp
sbbl
enter
mov
adc
adc
mov
fistl
mov
cmp
jae
mov
and
add
loope
mov
out
pusha
ja
xchg
aaa
aad
mov
repnz
daa
test
lahf
sub
dec
jo
in
jp
mov
aas
mov
and
int3
cmp
js
mov
push
xchg
mov
cmc
mov
mov
shr
fistps
int3
fmulp
ficoms
into
inc
std
fisubs
xlat
iret
lret
mov
xor
or
je
adc
sarb
cmpsb
add
mov
std
outsl
nop
mov
add
push
or
test
cmpsl
dec
xchg
cwtl
hlt
scas
jmp
mov
int
adc
das
push
mov
jnp
xchg
sbb
in
lcall
cmp
sub
dec
sub
mov
add
loopne
in
cmp
jae
xchg
mov
sar
jge
push
hlt
outsb
pop
pop
cmp
pop
cmpsb
jnp
cmp
mov
cmp
movsl
clc
sbb
cmp
imul
stc
lret
sub
push
push
inc
loopne
notl
sub
mov
xor
pushf
xlat
cmp
jg
in
cwtl
loopne
les
push
clc
xchg
xchg
push
xchg
fisubrs
repnz
rcrl
jo
sbb
inc
mov
sahf
mov
ret
lret
cmp
insb
scas
cmp
and
shrb
and
mov
aas
test
movsl
sbbl
ret
adc
mov
jns
fwait
mov
or
test
rcrb
dec
lahf
push
in
lret
cmc
dec
mov
xor
sub
cmp
or
xchg
lock
pop
push
cltd
scas
inc
out
sbb
mov
xorl
loopne
cmpsl
fstps
jl
xor
sbb
mov
push
int
inc
xlat
mov
dec
addl
sbb
pop
outsb
jg
push
inc
mov
pusha
dec
mov
stc
shrl
dec
jecxz
sub
ds
dec
and
je
testb
mov
xor
divl
negb
das
lret
andb
cmpsb
into
dec
adcb
mov
fiaddl
cltd
add
mov
rclb
jle
rcrb
xchg
les
pop
scas
rorb
movsl
cmpsb
xchg
push
rorl
xor
fiaddl
dec
mov
xchg
dec
mov
das
mov
xchg
psrad
cs
popa
fists
mov
sub
inc
push
lds
adc
daa
daa
mov
mov
jp
movsb
lock
dec
out
cmp
sar
stos
subl
lcall
push
fisubrl
mov
addl
test
mov
insl
xchg
adcl
aad
iret
lea
mov
and
out
push
push
insl
es
pop
inc
mov
ljmp
lea
jnp
and
dec
sbb
dec
pop
xor
cmp
lock
aaa
push
xor
jl
mov
cmp
pushf
cli
sbb
xchg
adc
dec
pop
sahf
pushf
sub
push
loopne
xchg
lret
test
scas
ljmp
xchg
ja
popa
jecxz
adc
cmp
mov
adc
iret
xchg
inc
int3
inc
push
mov
pop
sbb
cwtl
popa
jle
push
lret
insb
dec
push
lahf
cmp
out
sbbl
dec
push
lods
repz
and
stos
fprem1
nop
idivb
jbe
ljmp
insb
pop
cmp
xchg
inc
fsubrp
or
xchg
push
mov
dec
pusha
cmp
and
daa
gs
push
cli
movsb
mov
and
jp
inc
inc
xchg
cld
fcompl
inc
lock
popa
in
in
lahf
shl
xchg
and
fisubl
insl
orl
inc
push
cmp
push
in
dec
xchg
mov
scas
mov
lret
and
pusha
dec
test
pop
call
xchg
inc
mov
xor
fmuls
enter
pop
inc
jno
inc
jbe
mov
aas
aas
cwtl
lods
lea
out
sbb
cmp
ret
cld
sbb
mov
xchg
and
orb
pop
fnstenv
addr16
mov
ret
lret
adc
mov
call
pop
inc
push
shl
ljmp
cmp
stc
cmp
mov
cwtl
dec
jne
push
gs
stc
dec
and
inc
imul
jg
sub
testl
out
gs
sbb
loop
or
bound
sbbb
pop
cwtl
mov
mov
lods
mov
xchg
xor
or
adc
popa
mov
jp
xlat
cmp
test
popa
and
scas
lcall
pushf
xchg
subb
jno
pushf
xor
mov
pop
nop
sub
loope
add
mov
mov
test
fs
call
scas
clc
data16
sbb
jae
sbb
shrl
mov
daa
mov
sti
outsb
mov
mov
rorb
aad
cmp
cli
xchg
cltd
mov
jbe
pop
add
mov
xchg
ret
push
imul
sbb
insb
notl
enter
in
xchg
lcall
fsubrl
xor
imul
fiadds
int3
sub
data16
mov
xor
sub
sub
fmulp
notl
sbb
loopne
lcall
sbb
fcos
into
xchg
sub
repnz
xor
jb
ss
popf
sbb
popf
xchg
rorb
scas
lcall
daa
pop
jmp
mov
adc
cmp
out
icebp
pop
adc
rorb
pop
pusha
repz
add
popa
cmc
add
decl
aas
push
into
rclb
jo
push
sahf
mov
fistpl
push
push
std
push
push
mov
cmpsb
pop
pusha
psrad
int3
movsl
jae
mov
lods
and
pop
mov
rorl
roll
add
xor
push
mov
aas
das
mov
xor
std
test
aad
push
jge
mov
pop
sar
or
lock
cmpsl
and
test
rorb
mov
push
jl
je
jne
loopne
test
push
inc
adc
mov
scas
je
push
andb
xor
cmp
push
into
cmpsl
push
push
push
aaa
aad
mov
xor
fistps
fidivs
sti
mov
push
jecxz
es
test
in
mov
or
mov
stos
cmpsl
jg
mov
iret
lods
cmpsl
cmp
insb
xor
adc
inc
adc
xor
shlb
jmp
loopne
stc
pop
pop
jge
ja
mov
pop
pop
xorl
cltd
repz
and
sub
dec
xor
mov
jae
push
xchg
jl
das
imul
pop
int
xorb
adc
icebp
leave
incl
ret
cmp
repnz
fwait
push
adcl
repnz
aad
and
push
inc
lahf
cmp
stos
adc
es
insl
adc
fcmovnu
mov
in
push
scas
stc
cmpsl
fcoms
xchg
xor
dec
aaa
jp
stos
or
sbb
mov
pop
ljmp
addr16
dec
mov
or
aas
insb
inc
pop
dec
push
ds
mov
mov
push
sub
sub
in
mov
xor
stc
xchg
fwait
jb
adc
xchg
lock
loopne
push
sub
inc
xor
mov
rolb
cltd
cmp
das
push
mov
lret
cmc
lret
sub
dec
fs
or
add
pop
sub
or
and
arpl
cmp
jmp
sahf
stos
push
mov
mov
lea
pop
and
mov
sbb
pop
rorb
leave
in
add
or
mov
inc
dec
incb
xchg
lock
test
inc
das
jns
xor
push
xchg
test
xlat
lret
jb
push
pop
dec
inc
sbb
dec
and
out
sti
adc
pop
in
pop
and
cmp
pop
dec
or
xor
mov
xchg
popf
jle
test
sbb
jmp
jo
insl
jnp
adc
jnp
jns
out
cmp
mov
mov
pop
inc
lahf
mov
cmp
in
dec
loopne
outsb
inc
mov
inc
sub
das
jne
lds
sbb
into
mov
pushf
cmp
lea
daa
sbb
inc
cli
pop
pop
push
mov
leave
xchg
rcrb
push
inc
adcb
test
push
cmp
mov
movsl
test
lods
mov
addr16
jmp
aam
popa
xor
call
sbb
fidivl
xchg
pusha
movsb
sbb
xchg
fs
insb
adc
fucomip
loopne
pop
jno
and
sub
or
test
pop
js
cmpl
ljmp
imul
cltd
jae
inc
jne
xchg
pushf
pop
sbb
jecxz
pusha
push
dec
push
pop
jne
dec
lock
iret
les
out
jnp
inc
cmp
movsb
jns
mov
push
faddp
nop
xor
cmp
stos
push
xchg
popf
icebp
test
loope
imul
lds
mov
or
int
mov
rcll
mov
popf
mov
mov
bound
loope
dec
in
call
mov
gs
imul
jne
inc
adc
jecxz
push
lahf
ja
xor
ljmp
add
jge
sbb
sbb
fnstsw
add
pushf
sete
jg
cmp
or
into
pop
and
jle
popa
mov
cld
gs
sbb
add
jle
out
stos
dec
dec
loop
shrb
xchg
xchg
loopne
xchg
mov
fdivs
inc
test
adc
pushf
push
cmp
jb
ficompl
cmp
loop
in
inc
mov
jnp
or
mov
mov
nop
enter
jnp
cld
fstpt
sub
push
popa
and
mov
cltd
pusha
mov
out
fst
xor
push
js
inc
cwtl
xorl
lods
pop
test
mov
sbb
stos
jg
aad
xor
mov
pop
out
hlt
icebp
hlt
cmp
lret
insb
das
cmp
adc
push
and
push
imul
rep
dec
jl
jno
lret
insl
sub
pushf
popf
insl
jge
mov
push
outsl
jge
mov
dec
test
dec
cli
notb
fs
icebp
mov
int3
jnp
call
fstpl
loope
cmp
ljmp
and
rorl
cmp
pusha
fimull
and
out
add
int3
cmp
jg
push
fstpl
dec
insl
and
out
cld
xor
pop
ds
maskmovq
divl
icebp
or
and
ret
cmp
clc
or
stos
pushf
pop
or
es
sbb
aam
xchg
and
mov
fwait
jg
lods
add
add
cmpsl
sub
loope
xchg
popf
sub
jbe
cmp
or
jge
and
xor
aaa
pushl
push
in
insb
ljmp
push
sbb
inc
jle
cmc
adc
subb
rcr
into
imul
or
mov
mov
inc
xchg
push
pop
psrld
push
rol
std
lahf
jge
lahf
xorl
mov
fcomps
xor
jmp
stos
jbe
xor
into
add
test
sub
cltd
aas
addb
cmp
das
pop
add
aad
pop
cmp
movsl
stos
ret
xor
aam
fmull
icebp
stos
inc
lock
xor
and
sbb
adc
test
fiaddl
mov
sub
arpl
ud1
jbe
fdivr
sbbb
insb
jge
xchg
xor
andb
add
mov
xor
xchg
pop
sar
outsl
test
xlat
test
andl
out
dec
xor
xchg
ficoml
dec
punpckldq
rcrb
and
push
jo
xchg
les
rsqrtps
dec
push
popa
or
adc
mov
and
xchg
push
mov
add
push
xor
in
mov
adc
lea
ds
mov
jmp
adc
into
hlt
mov
lods
xchg
out
imul
sbb
imul
repnz
rorl
and
data16
imull
mov
jecxz
push
pop
movsl
fmul
sahf
imul
dec
sub
jle
cmp
daa
adc
dec
sbb
fldl
out
lret
dec
or
push
fwait
adc
mov
aam
or
jmp
xor
subb
daa
jmp
int3
xor
sbb
pop
cltd
insb
dec
pusha
nop
mov
sbb
cltd
aam
ja
mov
sub
and
insl
jp
test
arpl
loopne
outsl
jecxz
mov
decl
repz
push
fsubs
push
movsb
jns
push
push
cld
les
es
adc
imul
scas
push
inc
fcmove
cs
mov
int
jmp
imul
cltd
add
xchg
and
mov
jnp
mov
js
out
mov
inc
rorb
jbe
push
xor
lret
xchg
xor
addr16
fidivl
mov
mov
addr16
cmpsl
jb
data16
rorb
push
cli
xchg
ljmp
adc
in
cmp
test
add
add
or
test
xchg
cmp
push
orb
cmp
cmc
push
mov
test
pop
sub
mov
adc
mov
imul
mov
aad
imull
add
sub
mov
lahf
insl
pop
inc
lret
orl
stos
jmp
push
and
in
addr16
sahf
push
das
push
sub
adc
lods
push
iret
dec
inc
cmp
dec
lds
cmp
pop
sarl
ret
mov
jo
pop
inc
movsl
pop
jns
repnz
add
repnz
insb
mov
sti
in
cmp
gs
shll
jne
cmpsl
mov
sahf
mov
jne
shlb
fiaddl
pop
and
jbe
xchg
aam
cmpsb
mov
xor
lock
cmp
inc
imul
push
das
fildll
mov
testb
dec
in
imul
call
std
add
and
sbb
push
das
pop
movsb
mov
loopne
mov
or
jmp
pop
imul
push
mov
push
xor
mov
es
or
mov
sub
adc
add
adcl
cld
cmp
cmp
mov
outsb
popa
in
jbe
scas
lcall
or
mov
iret
stos
pop
jb
jnp
test
jno
xor
adcb
push
shl
popa
mov
daa
dec
inc
std
dec
push
mov
pop
xor
data16
les
ja,pn
rcrb
notl
dec
or
hlt
es
pop
popa
call
in
push
or
jno
pop
cs
stos
jb
jno
push
add
inc
repnz
popa
pop
cli
repz
adc
into
fldenv
cmp
je
mov
enter
lock
ljmp
cmp
push
ja
aaa
cs
arpl
or
fsubl
sti
arpl
fdivs
jne
add
sub
test
fistl
mov
insl
add
call
sbb
addr16
add
adc
or
not
or
cmp
inc
icebp
mov
or
stos
jge
push
mov
es
ficomps
mov
push
xchg
imul
out
rcpps
shll
jmp
push
clc
or
xor
push
push
dec
xor
in
shll
mov
icebp
shrl
repnz
loopne
in
mov
into
shll
xchg
xchg
or
push
and
push
and
insb
pushf
xchg
xor
sub
jl
sbb
cmp
mov
mov
fs
pop
sbb
mov
xor
fs
mov
lods
repz
mov
sub
mov
je
sbb
inc
repnz
sub
mov
push
sub
mov
push
ds
mov
mov
pop
ja
add
in
jl
cmp
fdivp
inc
insl
lret
in
add
scas
inc
int3
mov
out
jmp
xchg
lret
add
inc
dec
imul
sub
pusha
stos
mov
lods
push
mov
mov
int3
cld
fidivs
or
adcl
dec
sahf
arpl
popa
xor
les
dec
mov
and
mov
jecxz
ret
xlat
sub
scas
pop
push
cli
mov
cld
sbb
out
inc
mov
mov
cmpsb
gs
push
push
imul
and
push
inc
mov
addr16
aaa
mov
mov
xor
repz
ds
mov
ret
cmp
cwtl
fsubrl
mov
fucomp
mov
cmp
movsl
jmp
inc
push
and
inc
mov
mov
es
gs
shrl
cmp
xchg
ret
xchg
pop
cwtl
in
jbe
mov
cmpsb
leave
adc
inc
pop
insl
sub
pop
imul
fmuls
fchs
hlt
mov
insl
hlt
push
mov
daa
sbb
popf
xchg
xchg
xchg
push
cmp
dec
and
in
jp
iret
xchg
scas
daa
dec
mov
rcrl
in
push
scas
sbb
push
or
pop
cs
ret
jmp
add
sahf
and
pushf
pop
push
stos
fbld
push
scas
jge
subb
sub
repz
std
outsb
or
cmpsb
mov
sbb
and
mov
mov
add
cmpsl
cld
bound
mov
ljmp
pop
imul
addl
mov
icebp
movsl
push
ficomps
and
in
dec
in
sti
add
movsb
inc
pop
mov
bound
insb
and
adc
cltd
cmp
add
pushf
pop
sub
push
aad
lret
adcl
cmp
pop
mov
jle
xchg
mov
push
mov
cmp
movsl
mov
add
lahf
lods
in
mov
aam
fs
jmp
lcall
shl
stc
inc
sub
fildl
mov
lahf
aam
xchg
imul
jbe
xor
jne
fisttps
shrb
imul
mov
mov
cmpsb
mov
mov
inc
push
inc
mov
rorl
dec
and
das
mov
out
imul
pop
movsl
xlat
rorl
scas
mov
fcoml
jle
sti
cltd
cmp
adc
jnp
clc
push
adc
inc
rcl
jae
test
push
dec
mov
inc
inc
and
nop
jecxz
out
pop
movsl
mov
push
adc
jno
pop
cmp
pop
dec
ja
or
shll
cwtl
jecxz
cmp
popa
dec
add
mov
pop
movsl
out
hlt
rcrl
mov
and
add
adc
xchg
mov
cmp
stc
ja
mov
adc
arpl
aam
sbb
pop
mov
or
or
adc
stos
insl
dec
sarl
mov
or
jns
nop
cs
pop
or
rclb
stos
ss
push
ret
nop
push
in
push
roll
mov
stc
or
mov
push
test
lock
sub
adc
test
inc
inc
jge
ret
fwait
test
bound
push
pop
cmp
fcom
loopne
icebp
xor
or
mov
sub
sbbb
mov
sbb
aad
icebp
push
sti
xor
cmp
int3
cmpsb
mov
sti
test
pop
dec
in
pushf
mov
je
out
xchg
rorl
adc
mul
stos
jns
jmp
cmp
lds
stos
gs
add
pop
push
cmovnp
xor
es
jl
in
mov
aaa
or
or
push
nop
cmp
cmp
push
mov
jns
out
mov
bound
jecxz
push
fsubrl
lret
mov
pushf
ja
xlat
lcall
movsl
leave
scas
cmpl
shl
scas
jmp
sbb
sti
push
shlb
mov
mov
out
jno
daa
insl
push
or
and
fdivrp
imul
aad
adc
clc
pop
inc
mov
shlb
jmp
icebp
jmp
adc
adc
popf
movb
and
cwtl
jl
mov
ret
cld
inc
adc
sbb
cmp
and
pop
dec
sub
push
push
pop
andb
les
sub
ret
lea
andb
xor
xchg
mov
rol
cmp
outsl
jge
sbb
lret
jnp
inc
jns
or
or
mov
mov
or
lds
adc
xor
lods
sub
cmp
mov
adc
jle
movsb
push
or
data16
xor
jecxz
mov
icebp
pop
ja
dec
out
mov
in
mov
pop
or
pop
lods
test
loope
cmp
xchg
xchg
xor
add
mov
jns
push
jb
xchg
pop
test
push
lret
scas
ljmpw
jns
sbb
mov
push
out
mov
mov
push
adc
jmp
push
dec
push
pop
xchg
test
or
ret
adc
add
dec
push
ljmp
mov
stc
arpl
lret
fs
jae
or
mov
or
mov
adc
and
popa
push
sbb
popa
or
mov
dec
lock
fimuls
mov
push
pop
ret
lds
cld
pop
lock
mov
inc
add
add
and
pop
jl
aad
out
cltd
mov
mov
jg
jg
mov
sub
cltd
sbb
outsl
mov
mov
pop
cmp
data16
xchg
fiadds
push
pop
adc
movb
sahf
xchg
loopne
sub
jne,pt
std
pop
jb
mov
pop
sbb
pop
addr16
dec
mov
test
divb
sub
and
cmpsl
sti
push
pop
mov
pop
inc
xchg
shl
lret
dec
jmp
adc
mov
pop
incl
xorb
fnstsw
repnz
lock
subb
ret
arpl
pop
inc
and
addr16
fisubs
testl
mov
int3
addb
and
sbb
pavgw
xchg
insl
std
pusha
pop
nop
ret
dec
add
mov
pop
adc
fisubrs
xchg
push
lret
lods
adc
jno
sub
sbb
dec
ss
leave
cmpsl
or
mov
lods
iret
inc
add
adcl
xchg
cmp
js
mov
call
mov
popa
dec
xor
xchg
sub
popf
push
xchg
and
sub
insl
mov
pushl
push
test
jp
sub
dec
mov
fstl
or
xor
dec
cmp
shll
mov
scas
pop
xor
shll
push
cmp
add
xor
mov
add
dec
scas
pushf
xor
movsl
mov
ja
scas
dec
push
inc
xchg
xchg
and
jecxz
inc
pop
mov
jmp
inc
pop
sahf
cmp
inc
imul
xchg
sbb
shll
aam
stc
pusha
lods
cwtl
and
sarb
lods
loope
sub
lea
xchg
lcall
jg
cs
xchg
bnd
jle
xchg
fisttpl
xor
mov
fwait
jb
out
sti
or
push
cltd
ljmp
pop
addr16
out
add
cmp
in
jmp
cmp
sarb
aam
pop
dec
xchg
fcmove
xchg
xchg
mov
pusha
push
das
cmp
cmp
xor
sub
xchg
dec
idiv
mov
xlat
ret
push
push
leave
pop
dec
xchg
or
or
sub
ffreep
loopne
mov
inc
dec
or
xchg
lcall
lea
test
rcrl
mov
or
sarb
jecxz
inc
test
cmpb
xchg
mov
push
call
mov
mov
cmp
sbb
adc
and
ja
pop
mov
das
xor
ds
mov
iret
push
xchg
std
add
and
mov
adc
cmp
dec
pushf
push
sbb
lods
das
sub
and
xor
insl
mov
dec
ds
jns
icebp
pop
or
fistl
jle
xchg
mov
cmp
adc
ljmp
cmp
mov
shll
mov
mov
cmpsb
push
xchg
dec
mov
pusha
pusha
mov
fcoml
in
mov
sti
xchg
repnz
stc
ljmp
push
arpl
inc
lods
pop
lcall
nop
jne
cmp
push
dec
mov
cwtl
lea
lahf
mov
mov
idiv
and
xor
leave
push
cmp
in
push
dec
nop
mov
outsl
loop,pt
iret
shll
fcoms
add
pusha
jmp
repz
into
mov
fisubl
sbb
dec
cmp
adc
in
add
push
and
insl
mov
or
adc
inc
arpl
mulb
cltd
push
cmp
sbb
sub
bound
iret
xlat
add
ljmp
adc
cmp
ja
lods
lret
mov
push
xchg
movsb
jae
xor
sub
popf
ss
stc
push
roll
sbb
lret
pop
jmp
shl
mov
push
aam
adc
add
xor
into
setne
into
ret
xchg
scas
push
xor
jp
repnz
mov
jae,pt
stc
xor
insl
gs
add
ret
jbe
mov
test
jp
mov
pop
push
fdivrs
inc
and
inc
sub
pop
xchg
int3
xchg
jmp
adc
out
stc
cmp
fs
inc
pop
popf
mov
dec
outsb
or
and
push
add
ror
js
push
int3
fcoml
cltd
mov
jae
rorl
pushf
scas
outsl
sbb
mov
sbbb
lret
out
out
lcall
out
sbb
adc
inc
cmp
fs
mov
dec
inc
sbbb
loopne
pop
cmpb
sahf
outsl
mov
stc
cmp
sbb
sub
pop
test
jge
sbb
nop
sarb
cmp
or
loope
hlt
mov
mov
imul
push
das
ja
js
cmpsb
sub
cwtl
mov
cmp
jg
jo
insb
push
call
push
pop
mov
iret
fs
in
in
jp
pop
pop
adc
ja
jno
mov
sbb
and
and
cmc
enter
movsb
sbb
push
ficomps
loopne
add
xor
repnz
bound
pop
rcrl
xchg
xorl
je
mov
pop
fistps
and
aaa
fldt
jle
subb
ss
ftst
adc
xlat
jns
mov
mov
daa
inc
xor
push
xor
std
cmp
int
dec
mov
sbb
iret
cld
loope
bound
shl
mov
jnp
sbbl
mov
out
mov
movl
push
jp
test
sbb
push
out
jecxz
and
or
test
pop
push
cmpsl
aas
add
mov
int3
add
or
pop
iret
add
test
mov
xchg
test
add
aaa
push
add
sysret
subb
inc
insl
mov
jl
lock
fstpl
lea
out
xor
in
outsb
xchg
mov
idivl
mov
and
ja
push
mov
lret
pop
dec
push
shll
fcompl
andl
ficomps
test
pop
sbb
add
outsb
xor
das
pop
inc
lret
shr
push
cs
xchg
icebp
add
enter
out
outsb
inc
cld
push
sub
sarl
gs
out
rol
pop
push
jp
mov
movsb
shlb
icebp
or
jns
lcall
add
adc
pop
inc
cli
aad
shrl
pusha
fs
andb
adc
cld
inc
pop
dec
or
inc
mov
sub
pop
cwtl
imul
sbb
loope
inc
adc
dec
push
adc
sbb
or
mov
jecxz
sar
dec
cmp
cmp
sbb
and
mov
add
in
push
push
fucomip
lcall
leave
pop
pop
das
and
push
call
test
mov
data16
mov
mov
jno
shrl
inc
pop
sbb
push
out
scas
add
mov
add
inc
cmpsb
xchg
bound
dec
add
jnp
fistps
stc
cs
int3
ret
mov
fiaddl
adc
aad
sub
mov
mov
mov
xchg
addb
sbb
add
inc
push
push
sub
leave
test
sti
sub
test
aas
and
push
les
jne
or
mov
pusha
out
mov
mov
jecxz
add
add
sahf
adc
push
and
mov
and
cmpsl
pop
inc
xchg
repnz
aad
push
add
fwait
test
sub
inc
xchg
scas
pop
fwait
or
push
nop
loopne
mov
adc
mov
adc
scas
and
sbb
out
mov
aam
stc
adc
dec
out
add
test
sbb
or
rclb
jnp
jmp
in
adc
pop
jl
pop
dec
inc
mov
ret
inc
pop
pop
or
mov
adcb
xorl
cs
and
mov
adc
lret
xor
mov
loopne
fdivl
rclb
jbe
inc
jg
in
and
mov
sub
jnp
push
popa
movsl
cmp
cmc
dec
and
sub
pop
pusha
in
dec
and
pop
dec
push
add
out
in
repz
add
mov
popa
adc
mov
mov
inc
fnsave
inc
fisttpll
xchg
xor
psrad
xchg
call
lock
sbb
push
mov
cmp
cmp
or
sbb
cwtl
aaa
sbb
stc
dec
push
arpl
gs
cmp
ret
adc
lea
stos
push
adc
loopne
adc
mov
arpl
push
mov
leave
ds
adc
inc
repnz
repnz
test
mov
jmp
shll
cmp
fstl
fsubrs
add
pop
sahf
shrl
lods
nop
jb
fisubrl
adc
lock
xchg
dec
cmpsb
fdivrl
insb
sbb
mov
xchg
outsb
in
or
cmp
sbb
out
repnz
xchg
add
insl
dec
mov
jno
daa
mov
clc
sub
dec
cs
jge
mov
pop
lds
and
lds
mov
inc
cmp
mov
sbb
xchg
shlb
lret
out
pop
mov
in
mov
xchg
dec
sbb
xchg
ret
xor
pop
and
int3
xchg
push
fimuls
mov
mov
jnp
ljmp
jae
out
jge
mov
push
sbb
cltd
mov
mov
fmuls
jo
push
outsl
pop
xchg
iret
add
mov
mov
bound
xchg
movsl
dec
adc
out
lea
or
sbbb
adc
xchg
xlat
mov
loop
jge
or
insb
gs
stc
sbb
repnz
adc
fildl
jecxz
lods
pop
push
dec
jb
int3
pop
push
and
lods
pmullw
mov
push
popa
fnstcw
loop
jge
sahf
filds
rcl
les
popf
dec
cli
xor
sub
add
pop
cmp
mov
fcomip
xchg
add
jno
jl
js
dec
pop
push
cld
mov
fs
adc
or
and
mov
stos
testb
dec
mov
ja
push
xchg
cmpsb
cmp
aaa
mov
shrl
test
inc
cmp
sub
cli
pop
and
jbe
cmp
lea
sub
xor
lahf
jmp
aam
nop
pop
inc
lea
cmpsl
mov
shll
or
mull
mov
mov
and
fwait
mov
stos
incb
xchg
cwtl
int3
nop
jno
jns
pop
cmp
outsb
mov
pop
test
adc
shrb
pushf
je
cmp
or
aam
inc
fstps
and
dec
subb
jno
xchg
out
or
sbb
cmp
push
icebp
mov
es
push
gs
scas
mov
testl
jmp
fldt
mov
bound
pop
pop
loope
dec
jl
into
popa
les
rcrb
test
pop
fs
iret
data16
mov
aas
mov
mov
dec
pushf
and
push
push
outsl
mov
orb
and
pop
adc
mov
dec
movsl
cli
ds
sub
and
pop
mov
push
cltd
jmp
gs
or
addr16
mov
or
xchg
clc
insb
inc
cmp
cmp
mov
lret
xchg
sub
clc
jle
test
jns
mov
and
dec
xchg
sub
or
xor
mov
mov
pushf
mov
or
movsb
pop
enter
pop
or
jecxz
sub
dec
test
sar
adc
cmp
popf
sahf
pop
xchg
dec
fsubl
or
out
test
sbb
mov
movsl
sbb
sarl
icebp
pushf
push
rorl
aam
mov
dec
cmp
cmp
add
inc
out
mov
xorb
scas
repz
or
popf
dec
push
pop
cmc
adc
mov
fbstp
pop
mov
sbb
es
imul
loope
add
insb
jnp
and
mov
push
inc
push
lods
sbb
hlt
push
add
jl
inc
push
fwait
aas
ljmp
sbb
mov
es
fcmovne
test
cmp
push
adc
cmpsb
je
sahf
ret
pop
jg
jns
adc
bound
js
test
mov
test
leave
add
les
push
pop
hlt
jae
icebp
in
call
jae
sbb
cmc
and
repz
stc
je
sbb
into
sbb
out
mov
jne
mov
or
mov
scas
arpl
and
jg
ljmp
movsl
xchg
or
es
fdivs
sbb
sti
gs
dec
mov
test
sub
push
mov
fisubl
adc
sbb
mov
outsb
ja
repz
or
add
xor
and
push
popa
cmp
iret
inc
adc
cmp
movsl
bound
cmpsl
fistl
test
leave
pop
xchg
inc
add
cs
test
jge
jge
mov
adc
pop
in
add
adc
dec
cmc
jo
xchg
icebp
out
aas
inc
fwait
cs
repz
test
xor
mov
jo
stc
andl
movsl
das
xor
outsl
fimull
jnp
je
fdivl
xor
dec
dec
fwait
add
push
cmp
dec
loopne
mov
fwait
les
mov
imul
mov
sarb
mov
lods
pop
bound
sub
ds
pusha
mov
jns
add
sbb
cmp
jecxz
pop
out
pop
xor
push
push
data16
push
sub
loop,pt
mov
adc
mov
adc
jecxz
aas
inc
mov
test
sbb
lods
adc
outsl
mulb
sub
add
dec
ret
test
mov
xchg
jp
dec
pushf
sahf
into
cmpsb
pop
xor
pop
dec
bnd
lret
mov
scas
leave
cmp
pusha
lods
fidivrl
and
test
and
dec
pushf
movsl
cmp
cs
sub
loop
xchg
flds
aas
incl
mov
or
xchg
mov
cld
movb
pop
add
jp
pusha
and
xchg
adc
dec
jns
xor
push
add
shr
in
adc
cmp
add
stc
mov
or
hlt
lcall
mov
jmp
gs
sub
nop
adc
fdivrs
cmp
dec
nop
jg
add
shr
fst
push
mov
xchg
and
xor
xlat
sbb
dec
stc
push
push
imul
adc
daa
icebp
jnp
sbb
dec
outsb
mov
popa
cmp
ficompl
idivl
jg
inc
add
xor
sbb
hlt
inc
jb
push
cmp
jecxz
jecxz
outsb
nop
mov
sbb
test
mov
scas
jl
dec
push
decb
aaa
jp
and
add
out
xor
aaa
ss
jle
pop
shrl
cmp
jb
cmp
jg
dec
add
cmp
add
imul
dec
je
test
shrl
testl
mov
pop
mov
orb
and
xor
dec
scas
je
pop
cld
fsub
add
mov
notb
daa
mov
dec
repnz
mov
xor
cmp
ret
jne
aas
ret
lahf
mov
xor
fcomps
adc
iret
dec
xchg
inc
and
mov
lock
mov
out
popl
in
imul
xchg
mov
adc
sarb
stc
xor
or
cmp
pop
xchg
or
rcl
mov
inc
aas
into
fidivl
adc
sub
lret
out
fwait
enter
xor
xchg
iret
cltd
xor
or
fidivl
orb
sti
inc
fstpl
sbb
rcrb
cmp
mov
fmuls
and
push
fdivrp
movsl
dec
cmp
mov
fsubr
imul
add
stc
stos
imul
into
outsl
adc
adc
dec
stos
lcall
aas
push
ret
loopne
insb
pop
push
adc
cmc
fdivrl
das
mov
loope
addb
jle
dec
sub
cs
aad
xor
jne
sub
adc
ljmp
lret
icebp
push
pop
fadds
push
mov
dec
insb
adc
rolb
add
inc
dec
jbe
xor
into
add
stc
rcl
jbe
aas
enter
test
hlt
mov
cltd
push
inc
push
lret
mov
mov
jb
xchg
fstpt
cmc
int3
xor
adc
daa
cmc
scas
imul
inc
insb
lahf
lcall
jo
push
and
xor
js
jg
loop
ficomps
test
xchg
and
adc
mov
rolb
jg
cmp
jecxz
xlat
in
mov
scas
ja
in
fs
or
dec
mov
adc
daa
xchg
inc
cs
push
stos
mov
cwtl
cli
and
subl
pop
test
mov
nop
fmuls
pop
repnz
lea
jge
and
mov
cmp
mov
adc
sbb
fsub
mov
cmp
pop
mov
mov
pop
adc
cmc
mov
or
adc
mov
and
pop
jg
cltd
in
mov
or
cmp
aaa
mov
add
aam
or
ret
arpl
fwait
sarb
aad
mov
jno
test
dec
pop
dec
out
aam
hlt
int
mov
rcrb
lds
pop
and
out
push
pop
push
into
lahf
dec
xor
mov
shll
sub
scas
notb
sbb
sarl
lret
insl
push
int
mov
mov
fimuls
in
cmp
add
xor
gs
adc
sub
push
in
lret
cltd
testb
pusha
out
lods
xchg
cmc
into
sbb
jo
sti
sbb
lcall
cmp
push
lock
or
push
hlt
in
pop
adc
cmp
adc
es
lds
adc
xor
adc
jne
sbb
aas
xor
mov
or
push
lahf
xlat
fisttpll
xor
pop
or
and
int
pop
les
mov
cmpsl
inc
lods
xchg
jae
sub
xor
xchg
dec
or
cli
bound
shll
outsl
mov
lcall
xor
fs
daa
rol
xor
das
sbb
cmp
dec
popa
adc
loopne
push
iret
inc
mov
testl
sub
inc
scas
cmp
sarl
cmc
sbb
and
adc
lcall
xorl
add
push
lods
outsb
xchg
push
rcll
pop
xchg
add
or
test
fsub
stos
push
xchg
lock
fs
sar
shr
repz
pop
inc
jb
sub
jecxz
bound
mov
pop
sub
orl
mov
movsl
scas
roll
mov
mov
pop
sub
outsl
aaa
repz
inc
loopne
jne
dec
adc
xorl
scas
pop
add
cmp
stc
lds
xchg
in
gs
scas
dec
pop
outsl
popf
xor
loopne
call
jge
lcall
mov
xor
ret
cmpsb
popa
jbe
jns
push
stos
mov
nop
dec
xor
outsl
mov
cmpsb
pop
ds
arpl
aad
jo
sub
cmp
lods
xchg
pop
clc
stc
enter
out
test
sti
push
cmovg
fs
in
in
fistpll
imul
ja
jl
out
test
push
dec
aad
jo
and
stos
cmpsb
push
pop
mov
add
pop
jb
adc
lds
test
add
test
test
gs
xchg
mov
ret
jle
mov
jnp
push
jg
inc
xor
insb
in
loop
call
dec
mov
inc
mov
into
jmp
cmp
mov
in
mov
mov
sbb
shlb
inc
and
pop
cs
movsl
add
jb
dec
jno
inc
shlb
mov
data16
pop
and
pop
pop
dec
fcmovu
xchg
pop
push
and
sarb
push
inc
into
cwtl
repz
in
stc
lds
aaa
push
mov
add
pop
or
sub
decl
enter
dec
in
jge
std
aas
outsl
cmpsl
js
loop
nop
arpl
jne
stos
mov
scas
sbb
dec
filds
push
in
dec
cmpsl
push
ret
in
push
cmp
in
int
repz
sbb
in
add
fisubl
jmp
add
xor
adc
jbe
add
dec
inc
out
sub
js
mov
or
addr16
xor
test
mov
jo
xor
stos
xor
daa
cmpsb
jmp
dec
sub
mov
jnp
insl
jle
loope
in
lds
mov
dec
jno
push
jl
pop
push
mov
cmp
cmpsl
sahf
popf
sub
dec
or
mov
mov
fninit
sbb
and
adc
pop
popa
xor
daa
js
inc
js
movsl
jns
cmpsl
stc
and
or
mov
popf
push
push
mov
cli
sbb
lea
test
jno
jo
sbb
pop
sub
jge
sbb
add
lds
mov
and
jl
push
repz
scas
aaa
lcall
les
bound
in
loop
inc
push
ljmp
lret
cmp
mov
xchg
push
jg
pop
movsl
rol
pop
jo
and
dec
jmp
outsb
xor
xor
jp
xchg
les
mov
xlat
in
popa
pop
cmp
mov
jg
popf
mov
or
adc
or
inc
push
cld
fldz
dec
test
bswap
ljmp
gs
add
adc
rcrb
icebp
sub
mov
ficompl
jne
xor
push
das
imul
cmpsl
xor
jmp
lods
movsl
loopne
pop
addb
imul
inc
lods
or
popf
mov
rclb
int3
scas
push
imul
push
jl
xchg
add
add
insb
push
xchg
push
push
cwtl
add
jge
adc
push
or
out
sub
fxch
and
pop
add
orb
lea
pop
ss
mov
lock
lret
ljmp
jo
push
sbb
inc
test
mov
pop
adc
shlb
adc
insl
fs
loopne
cmp
rclb
jb
sahf
mov
mov
adc
ret
sub
in
ss
loop
and
rcll
addr16
fucomip
loopne
xchg
sti
pop
cs
stc
fisttps
into
pop
xchg
pushf
push
and
popa
and
push
inc
ds
sbb
inc
loopne
scas
imul
fmuls
cmp
fsubr
je
sub
imul
xchg
mov
cli
andl
cmpsl
xor
sub
xor
ljmp
sub
shlb
rcrb
out
data16
push
imul
lods
aam
jecxz
and
xchg
adc
ficoml
pcmpeqw
add
pusha
aad
imul
mov
pop
aam
das
cld
in
add
mov
mov
and
sbb
in
inc
arpl
call
adc
mov
popa
lods
inc
push
fsubrs
sahf
mov
xor
popf
sub
std
dec
adc
addb
movsb
cmp
popf
dec
call
mov
cmpsb
fistps
push
cmp
sbb
loop
loope
cltd
js
mov
nop
lods
cli
push
int3
test
popa
sub
pusha
inc
enter
orb
jge
out
stos
es
lods
xor
lahf
ret
rcrl
shl
enter
dec
or
xor
sub
pop
inc
rorb
and
les
mov
icebp
stos
flds
mov
sti
push
adcl
xlat
sub
addb
pushf
call
es
xchg
xchg
out
mov
and
jo
xchg
in
movsl
mov
sub
test
int
pusha
cmpsb
filds
fucomip
or
inc
les
adc
cs
mov
add
xchg
xlat
ss
xor
rcrb
adc
jno
xchg
cwtl
cmc
or
mov
push
into
sub
xchg
nop
and
add
cli
xchg
adc
push
pushf
insl
dec
gs
and
cwtl
jbe
xor
mov
add
push
lods
pop
fsubrs
adc
sub
scas
orb
and
mov
jae
fs
dec
mov
outsl
inc
mov
not
sarb
addb
mov
scas
scas
imul
add
daa
push
mov
pop
xlat
mov
and
cmp
cmc
jae
rcr
stc
outsb
and
je
cld
mov
stc
xor
aas
out
or
test
scas
inc
stc
pop
repnz
in
mov
mov
pop
das
cmp
popa
adc
push
jno
fmul
cwtl
sub
flds
es
xchg
mov
or
into
rorl
fiaddl
bound
cmp
xchg
add
ljmp
push
hlt
loopne
xchg
xor
adc
imul
sbb
mov
inc
mov
mov
ret
or
mov
mov
mov
push
adc
cmpsb
out
loop
sbb
lods
rolb
std
nop
mov
sub
fstl
push
imul
test
push
mov
or
in
jno
xchg
mov
mov
cmpsl
add
jnp
push
sub
jb
popa
or
daa
push
inc
add
mov
jecxz
outsl
inc
jne
cmp
add
fsubl
mov
dec
in
jmp
fcmovnu
adc
pop
sub
jns
xor
sti
mov
inc
repnz
xchg
sub
loopne,pn
ljmp
lgdtl
inc
mov
push
cmp
cli
mov
test
idivl
push
loop
cli
push
push
mov
cltd
pop
faddl
jle
or
hlt
xor
repnz
shl
daa
out
loop
fcomps
repz
test
addr16
lods
inc
lret
testl
sahf
sbbl
mov
enter
push
mov
xor
jno
out
int
xchg
or
aam
cmp
es
jbe
jnp
lds
dec
leave
cltd
dec
add
push
in
sbb
mov
test
cs
adc
loope
rorl
int
mov
int3
ljmp
fadd
loop
xor
sbb
xchg
dec
popa
pop
loopne
inc
push
insl
cmpb
sub
mov
push
repnz
mov
lock
movsb
clc
test
pop
sti
icebp
adc
test
jbe
push
or
cmc
shlb
adc
mov
int
fdivrs
mov
lods
loope
and
mov
cmp
cmpsl
cmc
lock
imul
xchg
pop
mov
xchg
in
xor
jns
sti
rolb
shrb
sub
enter
repz
dec
pop
inc
shrb
out
movsb
lea
dec
jecxz
pop
int3
sbb
push
add
cmpsl
cmpl
das
lret
idivb
fnstenv
inc
cld
jmp
fmuls
in
jmp
roll
loop
and
push
sbb
push
test
xchg
repz
add
lahf
inc
repz
pushf
mov
jp
into
xor
mov
inc
pavgw
icebp
dec
pop
mov
test
cmp
sahf
add
xor
adc
inc
lods
lcall
stos
filds
push
and
shrl
daa
test
cmp
xchg
in
sti
adc
xor
in
dec
xchg
xchg
inc
mov
push
and
and
push
out
pop
ret
adc
sub
cmp
xchg
or
sub
ds
leave
dec
pop
mov
ljmp
outsb
dec
xchg
push
inc
roll
add
sbbl
push
sub
cmp
jae
stos
jno
icebp
dec
push
stos
dec
pop
rorl
les
movsb
pop
push
sbb
mov
lods
push
ljmp
jge
add
mov
enter
sub
in
sti
xchg
rcrb
sub
pop
jmp
jne
mov
out
incl
std
mov
adc
sbb
dec
inc
adc
mov
rol
dec
cmp
mov
push
movsl
btc
cld
push
pop
sub
xchg
insb
lds
lock
push
test
mov
daa
icebp
or
ljmp
or
xchg
stos
pushf
xchg
lahf
pop
inc
pop
pop
inc
cmp
add
enter
push
fidivrl
pop
inc
or
inc
aam
imul
mov
cmp
inc
adc
pop
lahf
jmp
dec
adc
inc
mov
jnp
inc
or
fadds
movsl
xchg
jg
fisubs
push
mov
push
sbb
push
stos
adc
xchg
mov
pop
xor
pop
out
loopne
dec
dec
xchg
shlb
test
sti
es
inc
pop
add
jns
pop
mov
iret
test
popf
fcmovnb
mov
mov
enter
bound
or
jb
jmp
dec
in
pop
or
daa
and
sar
dec
arpl
push
maskmovq
mull
xchg
dec
out
outsl
dec
inc
lret
mov
lea
or
mov
push
lcall
and
pop
push
push
lods
pop
in
and
addr16
push
cli
pushf
xchg
cmp
fldcw
lea
add
lret
jne
mov
dec
cmp
dec
mov
iret
ds
int3
clc
cmp
xchg
lahf
sti
les
mov
data16
xchg
mov
cmp
mov
jecxz
mov
jp
sub
jecxz
xor
outsl
cmpsl
xchg
mov
add
dec
je
shl
pop
mov
daa
negl
push
and
dec
sbbb
push
fbld
jno
sub
xchg
outsb
xchg
add
inc
xchg
fdivl
pop
xchg
aad
push
aam
pop
xor
mov
test
shrl
xor
xchg
js
mov
pop
pop
in
jl
inc
adc
mov
mov
js
mov
movsb
mov
cmp
int3
std
sub
daa
out
dec
cltd
loop
addr16
fdivrl
pop
sbb
pop
fbstp
inc
jno
mov
mov
ss
jns
cmovno
push
loop
xor
dec
scas
dec
cmpsb
cli
loope
in
cltd
mov
sub
dec
stc
mov
mov
clc
ljmp
and
in
into
or
inc
push
mov
mov
dec
scas
inc
pusha
ds
enter
js
subl
cmp
loope
and
push
enter
stos
or
notl
pop
mov
ficomps
rol
xchg
test
sub
cmp
testb
sbb
rcrb
jecxz
lret
rorl
inc
adc
cmp
out
sti
pop
mov
daa
add
enter
dec
les
sub
or
mov
and
pop
outsl
mov
sub
add
mov
xchg
dec
or
jae
or
subb
fucomi
pop
into
jne
mov
daa
adc
nop
adc
cmp
push
mov
cmp
mov
stc
sub
push
push
fwait
sbb
mov
xchg
sbb
push
out
out
push
cmp
sub
adc
inc
dec
jns
xor
cs
mov
imul
push
adc
orl
aad
mov
xor
mov
rclb
jmp
adc
test
push
adcl
sub
jne
sub
in
shll
inc
and
dec
push
jge
mov
jle
ret
stos
js
ret
les
pop
out
jecxz
out
pusha
idivb
sub
sbb
int
pop
hlt
scas
jle
jmp
mov
jb
mov
cwtl
sub
popf
adc
jbe
jl
pop
pop
mov
jmp
or
movsb
daa
filds
xor
imul
or
jnp
mov
push
and
and
insl
mov
push
ficomps
sub
pop
sub
cltd
movsl
pop
sub
repz
test
add
hlt
push
out
cli
mov
jge
enter
jo
sub
xchg
mov
test
push
rcr
dec
int
arpl
popf
insl
jmp
shll
pop
dec
sub
inc
mov
mov
dec
je
scas
add
icebp
cmp
sub
xorb
or
sbb
stc
ja
cmc
imul
lock
cs
imul
loopne
pushf
js
cmpxchg
sbb
ss
mov
scas
in
out
cld
push
dec
lds
out
pop
movsl
enter
out
in
lahf
sbbl
into
aad
mov
jno
pop
sbb
sbb
out
push
rorl
gs
rcrl
int3
in
and
adc
notb
insb
fst
cmp
loopne
sub
or
mov
jne
outsl
xor
xor
scas
lods
cmp
lret
xchg
gs
daa
movsb
in
iret
mov
pop
xor
lret
in
and
mov
lcallw
sarb
outsb
sarb
cmc
bswap
pop
mov
lret
iret
loope
pop
scas
loop
xor
push
push
adc
repz
dec
mov
pop
mov
lds
sub
xchg
inc
pop
dec
dec
lods
add
outsl
rcrl
sub
jg
loope
dec
cmpsl
xor
cmp
jmp
sub
xchg
xchg
cmp
fdivs
mov
mov
xlat
mov
pop
test
pop
sub
das
sahf
divb
xchg
mov
mov
imul
movsb
add
adc
inc
lret
or
pop
push
in
rcr
and
adc
mov
inc
push
push
fcmovnb
int3
fcoms
cmp
je
loopw
aad
sub
stos
push
pop
inc
movsl
jle
ja
inc
inc
mov
cs
cld
ljmp
icebp
aaa
test
mov
int3
mov
cmc
test
das
les
mov
inc
push
nop
push
push
mov
sub
push
xor
cmp
xchg
aad
dec
xor
adc
gs
repz
adc
inc
pop
outsl
inc
loop
cltd
aam
and
inc
aas
cmp
jnp
cmp
imul
cmc
divl
jno
iret
sbb
push
dec
xor
decb
gs
in
jle,pt
sbb
ret
push
pop
in
in
js
incl
pop
push
or
or
xchg
mov
dec
das
jle
pop
pop
add
cmpsb
rolb
orl
mov
notl
xchg
loope
mov
jno
cmp
insb
push
movsl
or
mov
arpl
add
dec
cmova
mov
adc
adc
js
test
jge
add
cwtl
adc
je
xor
push
cltd
add
in
insl
loope
imul
mov
lds
jnp
mov
add
scas
add
xor
ljmp
je
adc
push
pop
cwtl
jb
dec
and
nop
mov
cmc
push
jne
aaa
fildl
pusha
scas
mov
outsl
mov
sub
fchs
jb
adc
sub
dec
jo
pop
xchg
mov
outsb
xchg
ret
sbb
cwtl
test
mov
out
ficoml
fnstenv
adc
adc
add
mov
cmpsb
sub
jbe
add
jmp
pop
repnz
add
pop
mov
add
movsl
and
out
jb
cmp
or
push
and
clc
popa
leave
decb
js
addb
pop
shll
push
mov
iret
push
pop
xorb
std
xor
or
push
dec
xor
jg
fisubrl
scas
jae
dec
sbb
dec
leave
push
ja
jp
loope
pop
add
fcmovne
pop
xchg
pop
mov
adc
push
cld
jbe
ror
xchg
jl
in
dec
loope
mov
sbb
pop
and
outsb
movsl
stos
inc
inc
sbb
inc
lea
ret
and
fsubrl
xor
mov
xchg
xchg
xchg
jb
ret
ret
das
outsl
lahf
or
loop
out
mov
xchg
frstor
xchg
movsb
push
add
inc
cmpsb
adc
push
sar
cmpsb
les
cmpsb
inc
loop
addl
sbb
cs
sub
add
mov
pop
pop
stc
into
sbb
jge
popa
mov
adc
mov
jne
iret
daa
addr16
call
dec
enter
pop
call
push
orb
push
je
iret
in
fcmovu
fistpl
mov
cmc
scas
mov
call
scas
leave
xor
push
mov
inc
xor
add
cmp
mov
fcomi
inc
aam
inc
aaa
inc
pop
mov
sbb
or
into
jne
mov
mov
mov
cld
int3
pop
lcall
lock
pmaxub
mov
hlt
jno
pop
or
xchg
mov
in
mov
insl
cmp
inc
or
pop
fsts
int
jns
jno
in
cwtl
stos
inc
mov
or
orb
push
shlb
mov
mov
or
fdivl
mov
lods
sub
push
adc
mov
push
cmp
xor
mov
mov
pop
pop
in
jns
and
inc
xchg
and
mov
xorb
jb
data16
mov
ficomps
iret
cmp
mov
pop
les
insl
cmp
jo
lahf
outsl
cmpsl
arpl
jge
in
ds
add
mov
inc
push
out
roll
xlat
sub
out
std
xchg
sub
mov
dec
testl
sub
pop
mov
sub
test
leave
push
adc
jecxz
sahf
scas
aad
xchg
clc
dec
test
adc
adc
js
push
push
jle
loope
xorb
jne
xchg
outsb
test
imul
js
sub
inc
out
insl
cwtl
sub
jle
aam
jmp
cmp
cmp
jle
out
aaa
cmpb
gs
or
cmpsl
xchg
push
aam
sahf
and
aas
inc
nop
lds
cld
mov
and
sti
xor
push
out
jns
leave
or
cmc
fisubs
pop
push
xchg
xchg
or
inc
xor
adcl
outsb
sbb
ret
pop
fdivr
sbb
push
jo
mov
enter
fsubs
mov
add
stos
fldt
dec
and
mov
inc
dec
movsb
pop
es
mov
pop
cmp
sti
mov
mov
mov
sbb
ds
dec
outsb
sbb
sub
mov
iret
div
scas
ret
loope
mov
in
jg
jbe
add
fwait
mov
sbbb
dec
pop
xlat
addr16
daa
adc
cmp
mov
je
add
push
push
jmp
pop
orl
repnz
idivb
pop
jge
mov
sbb
and
mov
pusha
inc
or
je
fadds
repnz
adc
add
out
mov
cmp
mov
les
sbb
xchg
lods
push
out
xlat
jb
jbe
cmpsl
pop
adc
cmp
out
int
sbb
mull
pop
stos
cmp
negb
pop
inc
sahf
pop
cli
stos
cwtl
loop
add
sbb
sahf
and
sbb
push
mov
push
bound
mov
xchg
lret
sbb
lret
cli
mov
rorl
push
mov
loop
cld
inc
add
dec
jae
push
subl
arpl
adc
jnp
push
mov
inc
sbbb
nop
aaa
inc
adc
out
fs
push
ret
lds
scas
or
mov
aad
sbb
into
mov
mov
cmpsb
lods
lock
pop
mov
adc
or
and
xchg
test
ficompl
lcall
xor
popf
in
or
and
pop
xor
sub
lods
lea
test
sbbb
ljmp
sub
cli
rcrl
cmp
inc
cltd
cltd
jne
ss
xchg
aad
scas
test
ret
pop
adc
inc
shlb
pop
xchg
scas
add
lods
pusha
push
push
sbb
clc
or
iret
icebp
push
movsb
lock
pushf
inc
loop
ss
imul
in
sub
rorl
inc
cli
imul
mov
dec
pop
ss
sbb
fbstp
pusha
or
loop
clc
in
mov
in
inc
stc
pushf
sub
mov
adc
or
flds
add
repnz
jnp
xlat
shlb
je
mov
lods
sbb
jb
arpl
adc
cmp
aas
leave
and
std
lds
ficoms
test
jl
mov
and
pop
fidivl
aad
ja
xor
ja
and
scas
sub
cmp
bnd
ret
leave
add
inc
rcrb
lock
cmp
loopne
jo
inc
jbe
cs
aad
fidivs
ja
inc
nop
sub
cmp
iret
and
mov
jno
je
xchg
cltd
pop
in
imul
sahf
lods
sbbl
insb
jecxz
imul
fwait
imul
cmp
js
cmp
dec
pop
mov
sarb
cmp
insl
or
lea
push
in
dec
ja
mov
xchg
push
sarb
std
xor
mov
lcall
push
mov
stos
dec
rorl
imul
cmpl
jle
pop
jne
xchg
insb
cmp
push
cmovle
xchg
arpl
fstpt
xlat
xor
or
in
insl
mov
pop
mov
jge
lahf
iret
popa
xlat
pop
sbb
xor
test
pop
enter
repnz
mov
lea
adc
aam
mov
xchg
cmp
movsb
mov
ss
xchg
repnz
mov
lods
mov
adc
out
in
int3
adc
outsb
or
xlat
pop
out
xor
lea
xor
scas
inc
pushf
fwait
mov
xchg
mov
xchg
mul
or
dec
push
push
inc
push
loopne
pop
adc
cmc
cld
imul
call
cmp
cs
inc
fimull
inc
gs
fisubs
stos
jl
test
aad
jnp
cmc
fcompl
mov
push
cmp
jbe
jmp
pop
pop
push
or
fwait
mov
push
mov
cmp
mov
mov
mov
push
or
cli
jnp
pusha
cltd
push
xor
mov
jmp
pop
dec
iret
sub
jg
mov
int3
aad
mov
pop
test
jbe
xchg
push
ret
pop
dec
cltd
subl
aaa
stc
inc
stos
pop
xchg
push
fisubrs
push
mov
lods
outsl
outsb
cmp
jb
and
adc
in
mov
sub
fistpll
xor
scas
inc
cltd
lret
aad
call
imul
or
notb
sub
inc
loop
lods
addb
andb
movsl
push
imul
or
inc
out
fisubs
shll
ljmp
fstl
in
mov
push
lea
cmp
mov
loopne
testb
jg
rep
xor
and
vpcmpeqw
ss
push
jo
cwtl
push
push
cmpsb
std
push
fisttpl
add
mov
mov
outsb
rcl
clc
loope
xor
push
popa
pusha
xor
pop
fs
stos
vpmulhw
test
inc
push
mov
push
sar
and
cmp
inc
dec
pop
xchg
dec
and
out
shlb
jmp
bound
mov
enter
jmp
aaa
sub
test
xor
xor
testl
add
sub
stc
popf
mov
je
std
adc
xchg
sub
stos
adcb
neg
mov
xchg
ljmp
fistl
sub
dec
xor
add
ret
negb
add
inc
scas
insb
lret
sbb
in
mov
or
jle
call
test
push
test
adc
sbb
aaa
in
aas
mov
or
pop
mov
dec
sbb
ja
mov
mov
dec
sub
pushf
inc
inc
out
hlt
jb
ss
pushf
rorb
roll
pop
out
and
xchg
mov
push
xchg
push
data16
inc
shll
jno
pusha
cltd
icebp
cs
cmc
popa
addr16
call
lock
dec
in
imul
xchg
jb
cmp
push
arpl
outsl
outsb
aam
dec
call
addr16
icebp
mov
mov
lret
popf
jmp
insb
iret
call
xchg
ds
xchg
mov
scas
jecxz
ss
pop
fistl
call
bound
in
sti
inc
jecxz
shlb
sbb
sub
js
ret
and
pop
jbe
cmp
lcall
push
cs
and
loope
push
mov
push
sub
lods
fldcw
dec
push
jg
scas
mov
sahf
xchg
fisubl
in
mov
or
xchg
sub
clc
jmp
cmpl
and
pusha
test
lods
jg
insl
sbb
sub
ljmp
addr16
sti
adc
in
lahf
mov
jle
sahf
jns
test
rcrb
pop
xchg
out
fisubs
mov
cmp
sti
aam
adc
fisubl
std
mov
mov
sbb
das
pop
inc
and
and
ss
xchg
jmp
pop
sub
stos
dec
push
insl
sub
scas
jecxz
lock
or
iret
flds
or
cmc
dec
jo
fwait
xor
std
or
sbb
pop
pushf
lahf
into
xchg
repnz
cmc
jmp
into
pusha
xchg
addb
cmp
mov
inc
add
outsl
lods
cmp
add
dec
mov
mov
mov
stos
scas
fcmovu
xchg
jmp
daa
jge
dec
dec
jg
bound
insb
rorb
cmpsl
mov
and
aam
adc
ds
jne
cmp
icebp
sbb
jbe
adc
xor
dec
jnp
mov
outsl
mov
xchg
mov
test
es
je
jne
or
loop
mov
shr
lcall
pop
adc
test
cld
and
mov
loopne
push
aam
cmp
cmp
mov
sbb
and
mov
push
shlb
ljmp
inc
jecxz
push
ret
in
fs
push
jne
lods
dec
xchg
jle
subb
inc
pop
lcall
sahf
mov
xchg
int3
inc
mov
pop
cmp
pop
ficompl
sub
aam
scas
pop
sbb
add
std
or
bnd
xchg
ret
arpl
mov
in
push
mov
mull
ret
mov
les
hlt
xlat
jmp
es
sub
addr16
sbb
cmp
jecxz
jns
inc
pop
jg
lods
jns
movsb
cmp
mov
es
clc
jo
inc
pop
sbb
jns
cld
ret
shlb
and
js
push
in
sub
mov
sub
pushf
and
das
lods
push
mov
in
xchg
xchg
in
push
sti
ds
fcomps
jb
jle
cmpsl
adc
xor
mov
in
push
rclb
aam
out
cmp
xor
add
jnp
lret
dec
out
sub
ficomps
je
inc
es
test
les
and
jns
leave
cmpsb
mov
mov
pop
jge
imul
in
mov
jg
xchg
xor
outsb
repz
enter
xor
cmp
aas
add
ljmp
aam
adc
stos
les
dec
mov
jge
lock
mov
inc
ret
xchg
cmp
pop
je
stc
es
sbb
pop
xchg
je
or
xchg
inc
sub
aaa
out
sbb
sbb
xor
stos
repz
addb
orl
fimuls
or
repz
repz
inc
adc
push
mov
sub
mov
jp
sbb
jg
and
pop
and
testb
imul
mov
and
push
adc
mov
icebp
mov
mov
imul
call
sbb
jg
lods
sbb
stc
pop
frstor
mov
jg
test
adc
gs
and
out
enter
add
and
adc
inc
icebp
fwait
mov
mov
adc
shrb
leave
or
pop
inc
movsl
cmp
and
sti
sub
push
jnp
fcomps
aam
rolb
lea
inc
mov
das
xor
insb
cmpsl
repz
enter
mov
stc
jno
pop
das
jnp
in
lea
cli
cmp
insb
std
notl
xchg
in
cmp
push
jge
sub
mov
sub
pop
dec
outsb
pop
pop
xchg
bound
addr16
loope
neg
sub
push
add
jmp
pop
jnp
sbb
fbstp
pusha
mov
movsb
cld
or
and
mov
mov
ds
int3
out
fisttps
pushf
dec
add
ds
js
adc
loop
mov
adc
je
in
das
shlb
lahf
add
mov
lea
ss
pop
pop
sti
cmp
mov
call
pop
inc
iret
jbe
push
ja
push
cmp
xor
jno
mov
out
push
into
insl
xchg
add
ss
push
jne
inc
fwait
sbb
popa
mov
sbb
leave
sub
scas
shll
je
test
jo
or
xchg
mov
sbb
mov
mov
and
and
mov
cmpsb
cltd
dec
dec
inc
add
fisttpl
cwtl
pop
xchg
jg
mov
out
mov
stos
mov
or
je
sbb
sbb
adc
adc
movsb
scas
std
add
outsb
in
test
fsubrl
add
pop
lea
nop
jp
bound
push
xchg
mov
add
test
sub
in
or
push
lcall
pop
in
adc
xchg
cs
xorb
jno
inc
jg
aad
icebp
or
adc
push
cltd
je
movsb
int
gs
or
je
sbb
mov
sbb
fcomip
popa
or
adc
rcr
jp
ljmp
or
mov
cs
pop
std
mov
inc
fs
sbb
sub
jecxz
shll
cwtl
js
gs
pop
push
es
jne
aam
push
int
mov
sub
test
inc
loop
xchg
fsubr
jnp
cmpsl
push
ficoml
or
lea
mov
xlat
lock
add
mov
mov
mov
mov
cmp
and
lock
jg
inc
push
cwtl
scas
mov
xchg
or
dec
mov
ja
mov
xchg
outsl
hlt
and
adc
inc
and
mov
stc
das
pushf
inc
aad
jno
mov
mov
push
fwait
add
cld
add
inc
or
loope
cmp
and
dec
push
sbb
sub
mov
push
jmp
fists
push
mov
mov
cmp
daa
inc
pop
xchg
pop
adc
push
pop
cltd
cmp
nop
divb
push
mov
dec
loopne
lods
mov
divl
sub
mov
mov
out
mov
xor
cli
sti
cmc
aas
sbb
out
ret
into
orl
pop
cld
xchg
mov
ret
cltd
ficompl
bound
rcrb
cmp
cmp
notb
jp
inc
push
mov
dec
shrb
mov
mov
imul
das
ret
in
sub
js
in
pop
xchg
mov
lcall
mov
push
scas
ret
mov
jmp
aad
mov
push
das
or
dec
adc
js
xor
inc
std
and
mov
mov
mov
sbb
adc
in
and
lods
xchg
and
enter
jecxz
imul
lods
mov
adc
jbe
jmp
call
mov
cmp
adc
fiadds
test
repnz
int3
inc
mov
arpl
jl
leave
test
lea
ret
xlat
pop
inc
or
scas
ljmp
popl
ficomps
lcall
outsl
mov
fs
cmp
dec
push
jns
push
jecxz
addl
test
daa
mov
pop
lea
jnp
bound
das
xchg
xchg
popf
hlt
mov
ds
aaa
sahf
rcl
pop
addb
lods
push
repz
jno,pt
pop
stos
pop
push
sub
pop
out
lods
pop
sahf
scas
push
dec
jae
or
mov
mov
sahf
sub
jl
lret
outsb
push
lret
cmp
flds
int
fidivl
lahf
or
movsb
or
push
loop
xor
fcomps
sub
xchg
sahf
inc
addr16
lret
jno
insb
jmp
test
lods
sub
adc
dec
in
enter
cmp
mul
icebp
test
sub
adc
les
fldcw
movsb
sub
and
sahf
subl
cmp
or
sub
cmp
cwtl
les
outsl
psubq
adc
outsl
push
pushl
inc
int
in
sub
push
lds
enter
test
shll
pop
sahf
and
adc
xor
inc
loopne
cmp
sub
jo
adc
pop
mov
dec
stc
xor
sti
fdivs
add
pop
or
stc
in
jp
mov
mov
rclb
shlb
pop
es
dec
lahf
iret
xchg
jbe
push
mov
cmp
fbstp
sub
int
pop
mov
sub
pop
lahf
mov
addr16
lock
roll
in
push
into
push
and
xor
lahf
mov
push
push
int
fimuls
cmp
inc
sbb
ret
add
pop
jecxz
repz
js
push
lds
and
inc
rclb
jae
pop
adc
mov
data16
mov
sbb
lret
movsb
xchg
cmp
and
mov
cwtl
or
arpl
call
shrb
xchg
gs
insl
lahf
in
and
mov
lods
pop
nop
adc
pop
cwtl
rcll
lods
sub
cmp
mov
jl
or
dec
inc
test
scas
pop
mov
dec
sub
std
dec
mov
imul
mov
ja
negl
mov
cmc
inc
push
pop
jnp
sti
loopne
xchg
movsl
adcb
and
inc
mov
addl
and
sahf
xchg
pop
push
insl
jle
lcall
push
add
or
push
fiadds
pop
or
cmp
jbe
sbb
add
dec
aaa
sub
inc
fcmovnu
push
movsl
inc
jb
bound
lods
mov
or
xlat
mov
out
in
adc
das
xchg
mov
inc
add
push
outsb
add
cld
clc
in
pop
push
notl
iret
add
push
pop
in
mov
orb
mov
mov
mov
ret
push
cmp
sub
inc
dec
jo
or
dec
sbb
arpl
inc
xchg
int3
rolb
sahf
xbegin
scas
clc
or
imull
inc
shrl
push
idivl
orl
repz
out
cmp
mov
cmp
mov
mov
xlat
rcll
add
cli
cs
icebp
lea
dec
inc
out
mov
in
mov
push
and
xlat
fsubl
add
fisttpl
mov
push
or
cld
loopne
std
dec
xchg
pop
mov
xor
cmp
cltd
shlb
les
insl
and
jge
xchg
sub
and
jg
inc
sbb
loopne
movsl
scas
pop
mov
xchg
lahf
mov
push
ds
iret
cli
popa
cs
jp
fs
cmp
inc
das
push
lea
test
stos
adc
push
and
aad
inc
jb
dec
and
xor
sub
test
leave
adc
fs
fdiv
push
stos
mov
sbb
or
cwtl
out
test
add
call
mov
ja
push
cmp
or
or
imul
enter
test
je
mov
pop
dec
or
out
cmpsb
cmpsb
data16
push
xchg
std
cmp
mov
sub
dec
cmc
mov
mov
lods
ljmp
pop
jae
add
adc
fbstp
mov
das
push
sub
add
dec
call
fidivs
pop
enter
or
sub
movsl
outsl
sbb
test
add
adc
test
popa
jnp
lods
mov
inc
jle
test
add
popa
xchg
arpl
lods
cmp
xchg
mov
loopne
stc
cmp
inc
fiaddl
movsb
jbe
adc
btc
mov
mov
out
testb
jne
xor
bnd
pop
mov
cmc
sar
mov
test
sub
jl
pop
inc
fwait
int3
movsl
ret
imul
inc
sarb
jo
test
cmp
test
movsb
jge
aam
sub
xlat
inc
jbe
sbbb
or
cmp
mov
or
ret
jle
faddl
out
out
xchg
imul
or
pop
std
and
jne
sar
xor
das
sbb
inc
mov
enter
xor
xchg
inc
and
aas
lret
test
dec
mov
lahf
cs
sub
sarb
cmp
rclb
frstpm(287
ret
cmp
push
jmp
mov
loop
loopne
push
jecxz
or
push
adc
adc
push
or
push
xor
lods
aad
pop
add
test
fidivrl
rorb
mov
pop
fxch
jl
data16
sub
jge
adcb
mov
les
div
in
pushf
pusha
adc
push
adc
cmp
rolb
cmp
and
adc
mov
mov
sub
or
dec
aad
cmp
faddl
dec
shrb
xor
jmp
inc
sbb
push
sbb
mov
ja
mov
push
sbb
push
aam
loope
jecxz
cmp
andl
dec
mov
mov
xor
js
shl
ds
ljmp
and
xlat
pop
xor
xor
mov
daa
cltd
mov
xchg
scas
xor
icebp
ljmp
push
xchg
or
movsb
jo
or
push
xchg
sub
mov
mov
mov
add
mov
iret
std
or
add
push
aaa
jecxz
or
push
test
fstpl
data16
lods
je
aaa
insb
sbb
lret
push
ret
outsb
sub
xor
ja
or
jmp
mov
call
jbe
sar
push
lock
insb
dec
dec
mov
mov
je
jle
fsubrs
adc
sbb
loop
test
loope
inc
stos
call
mov
into
xchg
xor
test
pop
dec
imul
or
lods
scas
stc
sbb
es
std
jp
aas
pop
shll
push
lahf
lret
sub
test
push
dec
imulb
cwtl
or
or
adc
mov
push
dec
jbe
pop
rorb
mov
mov
filds
cmp
clc
test
data16
jp
icebp
mov
int3
stc
aas
push
fildll
xchg
pop
jno
mov
jp
dec
inc
addb
sbb
inc
dec
push
stc
or
mov
sub
push
mov
ficoml
movsl
adc
jno
sbb
sub
sarb
popf
cmp
inc
fucomip
icebp
les
mov
cmp
bnd
mov
adc
sahf
cmpsb
inc
sbb
fildl
sub
loopne
rcrb
add
xlat
cli
rcrb
mov
shrl
jp
add
jb
enter
scas
fstpl
jo
inc
push
rorl
in
push
push
or
cmp
pop
sbb
sub
gs
sub
mov
out
ret
pop
cmp
and
add
pop
push
or
jg
andb
add
dec
insb
mov
mov
sbb
mov
mov
or
test
and
xchg
pop
cmp
add
int
insl
ja
daa
dec
push
pop
mov
sbb
test
addr16
enter
mov
cmc
loope
jle
adc
fmuls
pop
jl
pop
inc
ret
pop
adcb
subb
mov
lds
imul
jl
shl
cmc
inc
jnp
mov
aas
lea
aaa
inc
cli
std
adc
aas
cmp
push
jle
sub
pusha
mov
or
lret
add
or
cmp
int
inc
push
in
in
xor
push
xor
gs
cmc
mov
dec
mov
nop
xor
into
inc
mov
ja
sbb
jp
mov
es
pop
stos
ret
pop
mov
adc
mul
int3
dec
outsb
lds
xchg
mov
xorl
push
test
fwait
aas
add
int3
jl
mov
push
sar
jo
sti
push
adc
jp
xor
xor
mov
repz
push
scas
cmp
mov
mov
fnstcw
pop
xchg
nop
ljmp
dec
das
cmpsb
cmp
gs
enter
sbbl
mov
mov
adcb
and
aas
push
imul
and
lds
popf
cmovbe
cwtl
xchg
dec
adc
lea
aas
sbb
scas
mov
hlt
sub
lods
inc
lods
push
fmul
mov
insb
inc
and
xor
aaa
jg
pop
mov
add
push
add
mov
adc
ljmp
cmpsb
sub
aad
scas
or
out
jns
adc
push
aaa
pop
inc
push
shrb
and
pop
lds
add
sub
fcmovu
jl
lock
fcomps
cmp
mov
inc
mov
out
xor
push
std
stos
or
aas
mov
lock
mov
ljmp
adc
add
mov
inc
stos
mov
push
iret
pop
sbb
push
ja
lea
idiv
mov
dec
xor
bound
scas
out
and
int
icebp
xchg
lahf
fisubs
jle
xchg
mov
test
mov
movl
push
aas
cltd
cld
and
mov
jne
or
icebp
push
mov
imul
xor
shll
fmul
sbb
xor
arpl
mov
jne
or
cld
clc
enter
ljmp
loope
ja
nop
fadds
nop
into
sbb
xchg
add
fcoms
push
xor
movsl
loop
and
push
mov
sbb
rolb
add
lods
sbb
adc
fs
or
stc
push
adc
jno
xor
mov
test
js
mov
add
mov
movsl
fs
jae
push
sub
movsl
push
push
jae
mov
adc
imul
jbe
out
cmp
es
insl
mov
adc
cmp
xchg
shr
js
movsb
jns
xchg
fwait
inc
push
push
fldt
dec
aad
enter
or
push
mov
push
nop
or
loope
push
or
cmpsl
jae
popf
adc
push
mov
out
fstpt
shl
loopne
std
outsl
cmovl
dec
pop
roll
in
jae
inc
scas
lret
pop
push
dec
mov
fwait
cltd
ffreep
inc
inc
loop
pop
mov
xchg
xor
subl
sub
pop
scas
cld
outsl
movsb
mov
pop
mov
xor
std
popa
xchg
sub
push
lcall
in
mov
push
clc
xchg
push
mov
stc
mov
daa
das
fdivr
cmp
ret
cltd
xchg
xchg
or
lret
mov
lret
pushl
mov
std
popf
enter
sub
sbb
insb
jmp
ret
mov
xchg
fldl
aaa
stos
push
jp
test
aam
cmp
inc
test
aas
jo
mov
mov
dec
out
and
daa
out
out
or
cmp
aad
xchg
cmc
adc
std
lods
enter
mov
jb
filds
js
ss
jge
adcb
faddl
mov
xchg
lahf
ds
xor
in
push
test
cwtl
add
mov
sbb
iret
add
std
mov
pop
add
fnstcw
daa
sub
lret
push
and
std
aad
or
subb
pop
jecxz
add
push
in
fwait
dec
and
mov
fcompl
pop
push
sub
sbb
xchg
xchg
int3
inc
pop
lret
sbb
adc
out
jge
das
cli
sbb
pop
roll
cmc
sbb
cwtl
icebp
fisttpll
lea
inc
pop
ret
test
jnp
dec
sbb
enter
xchg
or
pop
push
inc
roll
adc
mov
inc
adc
aaa
and
jp
xorl
or
inc
pop
or
ret
fdivrp
mov
inc
das
mov
xchg
fsubs
inc
daa
or
repnz
dec
inc
adc
dec
es
or
mov
xchg
fdivp
pop
shlb
pushf
daa
sbb
add
aaa
imul
nop
xchg
and
push
push
ljmp
cmp
sub
mov
mov
push
mov
imul
data16
test
or
mov
les
jnp
and
and
and
out
test
out
je
or
inc
push
mov
add
sub
adc
in
jge
lret
in
loopne
fidivrs
dec
xchg
out
imul
adc
lret
lea
jle
mov
lahf
cli
xor
nop
sbb
fimull
adc
ret
test
cli
push
nop
jge
mov
xchg
mov
ret
dec
repz
push
dec
inc
dec
dec
jmp
mov
cltd
adc
lea
test
sbb
mov
testl
outsl
addb
cld
jo
mov
ljmp
leave
dec
jge
xor
xor
xor
icebp
xor
cmp
push
add
in
xor
pop
cltd
xchg
pop
sarl
and
hlt
addr16
sbb
xchg
or
subl
push
mov
mov
adc
push
mov
xchg
cmp
ljmp
or
mov
add
fistps
test
imulb
iret
sub
stos
xchg
and
cmp
mov
xchg
outsl
cmp
ds
sti
pop
rolb
cltd
les
insl
pop
or
push
lods
inc
push
xchg
aad
inc
mov
ja
shll
nop
unpckhps
adc
lods
add
push
xchg
and
push
mov
pop
testl
hlt
add
jnp
in
imull
inc
adc
adc
mov
jae
std
hlt
sbb
and
inc
mov
inc
shl
into
in
push
les
mov
add
in
mov
jb
mov
ja
sahf
push
fnstsw
mov
jle
popf
inc
imul
das
jbe
inc
or
or
cmc
fwait
dec
push
mov
adc
ds
call
sub
in
mov
lahf
and
insl
cmpsb
movsb
scas
mov
sbb
xchg
jne
sub
and
lea
pop
pushf
cmp
sbb
out
mov
cmpl
sub
es
out
mov
sbb
mov
jge
lea
cmpsl
mov
adc
sti
mov
repz
mov
mov
out
mov
insl
sub
push
sbb
cmpsb
je
inc
adc
pop
or
scas
loop
push
jmp
mov
inc
cwtl
dec
add
pop
data16
push
lods
fs
pusha
inc
push
pop
cwtl
inc
dec
test
aas
mov
out
mov
lret
jnp
inc
ret
les
mov
lea
push
ficoms
fldcw
push
ss
out
or
addl
mov
jo
ficompl
sub
xchg
add
jmp
sbb
xor
inc
sti
push
dec
and
jmp
mov
push
cs
add
sub
sbb
sub
loop
test
fs
mov
push
or
jecxz
xchg
movsb
adc
mov
jnp
cmp
sbb
xchg
jecxz
lods
shlb
xor
sub
xchg
pushf
lods
shll
xchg
push
addr16
push
aad
pusha
push
push
in
lret
test
daa
sbb
sti
cmp
rcrl
xchg
mov
int
cmp
and
push
mov
subb
add
imul
lret
test
lock
ret
and
push
addr16
out
out
ja
dec
pushl
mov
sub
sub
and
mov
push
mov
cmp
adc
mov
shlb
je
mov
pop
sbb
cwtl
pop
fcmovnu
xlat
mov
mov
sub
out
add
stos
imulb
pop
push
sub
jno
jb
outsb
icebp
pop
je
lret
dec
into
fnstcw
push
jge
sub
sbb
mulb
inc
gs
pushf
dec
lods
in
adc
shl
in
das
inc
clc
jle
scas
fcompl
clc
add
jecxz
inc
fstps
push
dec
stos
scas
outsl
push
mov
jecxz
das
sti
push
mov
cmp
mov
movsl
cmp
outsl
ljmp
sub
subb
sub
adc
sarl
test
out
sbb
nop
cmpl
xchg
add
outsb
cmp
negb
out
dec
into
mov
jecxz
cmp
arpl
or
push
pop
fistpl
push
dec
xor
sbb
ret
movb
out
sti
push
push
jmp
mov
xchg
jecxz
clc
out
dec
shll
inc
cmp
loope
lret
push
in
pusha
inc
aas
sub
jne
adc
adc
jno
sbb
mov
int3
cmpsl
pushf
xor
pushf
out
dec
cmp
jge
lods
push
outsb
adc
repnz
sbb
jp
adc
bound
add
lock
mov
movsl
push
xchg
lods
add
gs
adc
fcmovbe
lret
test
scas
pop
subb
aam
or
inc
and
push
mov
push
xchg
cmp
iret
icebp
iret
pop
icebp
inc
xor
call
jb
adc
cmp
mov
lock
push
ljmp
xlat
and
cmp
jp
push
sbb
push
mov
jge
or
push
jge
shrl
mov
or
pop
rcl
mov
push
cmp
ljmp
sar
arpl
mov
jg
outsl
repz
gs
mov
push
xlat
jl
fildl
mov
in
decl
mov
dec
adc
in
aam
fs
sbb
popa
xchg
mov
sarb
mov
push
repnz
xchg
mov
mov
mov
scas
and
cltd
and
js,pn
pop
mov
jae
ret
inc
adc
pop
and
fmuls
enter
div
in
mov
pop
mov
add
insb
loopne
in
inc
popf
cmp
pushf
ds
mov
packuswb
ljmp
add
ficoms
dec
std
insb
fiadds
divl
sahf
testl
pop
fistpll
or
xor
fwait
mov
xor
scas
mov
jge
das
callw
sbb
dec
mov
jg
push
leave
popl
dec
inc
cmp
mov
fs
sub
repz
pop
push
sbb
gs
icebp
push
inc
shrl
popf
lods
stos
ja
push
mov
push
fildll
cmp
cmp
insl
jp
js
push
das
add
cmp
movsl
aas
arpl
mov
lret
testb
decl
cmp
mov
test
push
mov
jmp
jo
mov
outsl
jo
jo
out
push
ucomiss
dec
sub
jne
and
imul
imul
mov
stos
loop
pop
sbb
cmpsb
cmp
sub
sub
adc
cmp
imul
icebp
scas
push
adc
push
out
push
stos
cmp
cmpsl
push
pop
push
stos
lods
cmp
imul
fldenv
in
imul
dec
xchg
icebp
push
fidivl
movsb
mov
fstpt
add
into
jmp
fdivr
fsts
mov
outsl
push
ret
adc
jae
add
inc
and
fsubrs
cmp
cs
cmp
dec
cmovg
pop
fdivrs
fxch
xor
mov
lods
test
data16
data16
fnstenv
inc
inc
xchg
or
mov
mov
cmpsb
pop
imul
lea
sarb
jae
cwtl
mov
xchg
jecxz
pushf
xor
addr16
inc
push
xor
insb
push
xchg
lret
mov
adc
sub
ja
imul
pop
popa
adc
cmp
sub
dec
add
sub
rorl
cmp
mov
cmp
cmpsl
push
adcl
push
xchg
jae
cmp
cli
int3
dec
aad
xor
repz
and
leave
adc
fs
xor
test
fdivrl
in
repnz
or
in
sbb
xchg
fstpt
add
imul
jbe
or
icebp
lock
bound
push
jb
cld
cltd
lahf
pop
add
xor
in
lahf
push
cmp
lods
je
xor
in
popa
pop
xchg
mov
mov
mov
bound
cltd
jbe
ret
sub
ja
andl
scas
xor
jmp
movsb
mov
lret
push
xorl
mov
mov
or
push
jne
jecxz
aam
imulb
cltd
pop
imul
popa
push
hlt
xor
push
adc
xchg
sbbl
push
popf
mov
push
xor
xchg
jo
cld
std
mov
sarl
xor
adc
dec
adc
aam
mov
mov
xlat
sub
mov
inc
gs
pop
mov
arpl
or
int3
shl
adc
dec
fs
in
jg
fcmovb
lahf
fisubrs
inc
data16
lahf
xchg
aam
mov
add
sbb
push
jno
jae
adcl
dec
data16
mov
stc
push
dec
ret
cld
int3
scas
mov
stos
adc
sbb
sub
or
in
insl
je
aas
addl
inc
rorl
imul
dec
sbb
fstpl
test
pop
ja
test
xor
inc
add
fsubs
imul
lock
and
icebp
jl
test
or
out
mov
loopne
arpl
in
pop
xchg
add
adc
scas
out
mov
mov
outsb
hlt
fstl
mov
imul
and
aad
sbb
cmpsl
xor
mov
and
addr16
adc
push
movsb
adc
mov
rolb
sub
dec
test
and
mov
jmp
shll
fwait
lods
insl
cmp
cs
ret
out
pop
xor
sbb
mov
xchg
mov
xchg
mov
fbld
add
addr16
push
xor
mov
sbb
pop
repnz
fsub
popa
sub
push
mov
inc
pushf
cltd
fisubl
test
ret
int
testl
or
sbb
ret
jne
lret
imul
stos
xchg
lods
add
mov
lds
dec
inc
lret
cli
or
fmul
cld
mov
les
push
xlat
imul
cs
or
negb
sti
mov
push
dec
or
out
dec
mov
aas
jnp
xchg
aam
daa
loop
jbe
or
outsb
into
out
into
add
mov
xlat
insb
js
inc
cmp
arpl
xrelease
insb
and
jbe
sub
repnz
adc
cmp
inc
movb
loopne
pop
scas
ss
mov
mov
enter
loopne
push
dec
add
loope
push
out
imul
mov
cwtl
mov
sub
jmp
lea
out
js
pop
icebp
ljmp
data16
sbb
sbb
mov
idivl
popf
ja
imul
mov
aas
pop
testl
fstpt
mov
int
popa
sub
sbb
jae
movsl
stos
cld
mov
mov
push
jmp
stos
pop
mov
repz
push
outsb
ficoms
test
sarb
leave
pop
inc
test
fidivs
mov
rorl
add
lea
sub
lock
xlat
push
dec
pop
xor
add
ror
enter
jl
sahf
xchg
inc
int
jle
inc
inc
pop
lahf
xor
mov
cwtl
push
and
cld
cmp
mov
xor
push
test
inc
js
rcll
sbb
es
call
sub
cld
in
sub
dec
subb
rclb
cmp
insb
in
push
adc
xchg
orl
and
enter
cltd
lret
push
inc
test
jne
rcr
lret
cld
aam
dec
into
test
jg
dec
push
lahf
xchg
fcompl
push
pop
rcrl
cli
out
jo
sbb
out
shlb
mov
push
aaa
int3
and
sbb
lahf
add
adc
lcall
xor
or
xchg
in
insl
stos
test
mov
sbbl
push
jl
add
insb
xchg
fs
into
fwait
jbe
pop
add
push
ja
jmp
clc
dec
lock
inc
aas
jnp
jno
push
cld
pushf
add
repz
testb
and
call
repz
sub
adc
imul
jbe
andl
hlt
rcrb
or
jp
fstpt
adc
sub
and
mov
mov
mov
insl
sti
xchg
lea
fidivl
faddp
mov
pop
sti
rcrl
cmp
mov
stos
fdiv
pop
pop
add
adc
clc
jmp
gs
push
dec
jns
loopne
jo
cwtl
rcll
testb
adc
fldenv
jecxz
outsl
lock
fldt
sub
ja
cs
leave
and
arpl
pop
dec
popf
xor
lret
mov
cmp
xor
and
mov
aaa
nop
popa
inc
fidivrs
xor
sub
sarl
rcr
ljmp
insl
inc
test
cmc
loopne
jecxz
dec
pop
xorl
sub
jl
loopne
pop
mov
fsts
test
fidivl
in
jp
mov
dec
test
mov
and
mov
aas
push
pop
push
cltd
xchg
dec
nop
out
das
icebp
loop
lods
cmc
lods
cmc
push
popf
aam
sahf
int3
sub
hlt
lods
jmp
dec
adc
jno
xlat
sub
push
repnz
mov
lock
pop
shr
ja
aam
pop
std
cwtl
arpl
ja
add
lcall
das
mov
and
sbb
jne
sub
lcall
scas
adc
pusha
idiv
fiaddl
jbe
dec
pusha
adc
xchg
add
aam
outsl
xchg
push
popaw
aaa
pusha
push
lods
aam
cmc
mov
gs
or
popa
pop
les
scas
fcomp
je
jg
inc
fisubrl
inc
mov
mov
cmp
push
mov
leave
inc
sbb
nop
jb
das
movsb
jae
xchg
imul
xchg
inc
mov
pop
add
rcrb
inc
push
pop
xor
dec
push
add
pop
mov
mov
mov
xchg
sub
lret
pop
jnp
mov
test
in
insl
and
pop
inc
cmp
sahf
fistl
imul
or
das
imul
sub
test
rcrl
jp
mov
insl
fisubrs
aaa
je
mov
mov
mov
jo
mov
mov
or
aaa
ret
inc
test
inc
rcl
outsl
mov
and
adc
and
xor
insb
push
xchg
push
dec
or
mov
fisubs
das
shlb
popa
jae
xchg
bound
sti
test
out
mov
xchg
lods
adc
mov
mov
mov
pop
xchg
mov
mov
insl
js
sub
pop
push
push
mov
adc
daa
icebp
dec
es
pop
add
adc
xchg
lods
jo
mov
insl
inc
push
lea
xor
clc
lods
out
add
lret
arpl
or
popf
out
scas
roll
mulb
xchg
adc
out
push
outsb
mov
sti
mov
cmp
xor
inc
xlat
dec
andb
mov
mov
pop
mov
sub
xchg
and
push
repz
sbb
shl
jnp
into
mov
frstor
shl
cmp
pop
imul
loope
sbb
sub
cmpsb
movsb
pop
mov
xor
aad
cmpsb
ret
adc
xchg
sar
and
jmp
jo
xor
pop
pop
add
rorl
je
negl
and
loope
xchg
cwtl
cmpsb
pop
rorb
call
add
adc
mov
rolb
sahf
cmc
pop
adc
hlt
or
pop
adc
pusha
mov
test
lock
jae
divl
sbb
imul
filds
cld
jle
mov
and
mov
or
cmp
nop
or
mov
cld
ja,pt
pop
dec
mov
test
mov
add
sub
loope
xchg
xor
mov
lahf
inc
mov
lds
sub
aam
mov
ret
cmc
mulb
mov
jecxz
or
mov
hlt
inc
push
fs
sbb
xchg
popf
les
dec
mov
dec
pushf
int
push
jo
cld
enter
mov
aaa
movsl
adc
es
clc
out
stc
mov
ss
insb
jmp
ljmp
and
cmp
adc
cmp
test
movsb
imul
sbb
mov
mov
loop
push
sarb
loope
add
imul
dec
inc
push
arpl
adc
daa
or
cmp
push
push
jg
cmp
lahf
push
or
adc
in
test
stos
mov
push
pop
leave
dec
cwtl
add
into
mov
cli
dec
push
pop
hlt
ret
sbb
push
cmpsb
fstpt
loope
push
jmp
mov
out
xor
clc
inc
mov
or
push
std
and
push
cmc
inc
mov
xor
fwait
pop
dec
fistps
cli
roll
sarl
jno
sbb
xor
loope
cmp
dec
je
cltd
xchg
sub
mov
adc
jmp
inc
repz
pusha
fisubrs
or
popf
leave
mov
push
cmp
ret
loopne
jnp
xchg
fistl
in
sub
cli
pop
mov
mov
test
cmp
cltd
jb
push
ljmp
push
aad
push
pushf
mov
into
nop
data16
pop
push
push
es
dec
xor
or
es
jp
fwait
sub
xor
pop
and
sub
xor
jmp
fldt
shll
movsl
movsb
adc
je
push
popa
es
xor
sub
cmp
leave
cmc
das
stc
popf
rorl
sbb
mov
jge
sbbb
loopne
adc
xlat
add
jne
mov
shrl
xchg
dec
ljmp
xlat
inc
data16
jmp
pop
add
push
fidivrs
pop
xchg
loope
test
mov
iret
add
xor
arpl
cmp
cmp
dec
or
add
imull
xchg
and
jb
aam
push
dec
ret
add
addr16
and
jl
dec
enter
fnstsw
repnz
das
out
jne
inc
cmp
sbb
addr16
loop
lahf
cli
ljmp
and
int3
jo
fcomps
or
lahf
or
mov
xorb
push
fs
cmpsl
out
mov
cltd
cmp
je
es
shll
sbb
mov
and
gs
cmp
movsb
jbe
jge
cmp
cwtl
loope
pop
inc
xor
enter
sarl
or
jecxz
sub
ret
js
sub
xchg
sbb
lcall
push
sbb
xchg
push
jg
mov
imul
hlt
mov
or
inc
push
ja
add
sbb
mov
push
daa
lds
push
in
push
sbb
and
das
pop
cs
sbb
enter
mov
xchg
fs
mov
sti
sub
scas
pop
cltd
adc
stos
leave
mov
jl
pop
inc
cltd
nop
mov
or
stos
arpl
cmpsb
and
gs
dec
adc
sub
jle
jbe
jmp
inc
lock
shlb
lods
int
push
mov
daa
cmpsl
shll
int
or
pop
aaa
dec
sbb
pop
int
lahf
adc
sub
push
fisubl
int
mov
insb
addb
sbb
sbbl
mov
inc
mov
cmp
dec
add
cmp
imul
nop
pop
and
pop
mov
roll
in
cmpsl
test
and
data16
and
inc
mov
cmp
sub
pop
pop
in
xor
inc
sub
mov
pop
es
sub
pop
adc
movsb
mov
sub
dec
mov
xchg
mov
in
outsb
sbb
rcr
inc
cmp
pop
or
sbb
xor
ret
and
push
mov
js
test
pop
loope
ret
test
popa
adc
dec
xchg
fsubrp
pop
push
push
outsb
aaa
stc
js
jns
cmc
adc
test
shrl
popa
jns
xchg
sbb
mov
mov
cwtl
out
int3
sub
call
pop
es
add
cmp
and
dec
jnp
jg
push
mov
popf
xchg
adc
aaa
cmp
cmpsb
xor
jno
mov
in
pop
xor
movsl
push
movsl
push
ds
shrl
cmp
inc
into
outsb
push
imul
cmp
je
insb
test
fimull
insb
js
mov
imul
jbe
and
repnz
cmp
daa
xor
aaa
xchg
sbb
mov
jmp
sahf
sub
xchg
fdivs
out
and
mov
cwtl
cltd
out
fs
adc
jne
push
int3
ds
xchg
lods
nop
push
dec
push
rcrb
mov
rcrl
sub
add
pop
pushw
adc
cmp
pusha
or
xlat
push
mov
lea
das
movsb
lea
sahf
pop
aam
lea
std
and
ss
hlt
adc
pop
push
jmp
mov
xchg
and
adc
cmp
cs
xchg
adc
aam
mov
jnp
sbb
pop
add
dec
or
sub
dec
xor
fcmovbe
cmc
mov
and
test
ret
sbb
cwtl
xchg
push
int
dec
jp
pop
inc
mov
pop
fidivs
push
and
mov
push
fnsave
cmp
fmull
fdivrl
gs
ljmp
dec
daa
or
lret
stc
or
scas
mov
aad
mov
shlb
test
xor
pmulhw
stc
dec
fwait
lret
scas
mov
loopne
shlb
mov
mov
dec
addr16
imulb
mov
adcb
test
mov
sysret
and
in
mov
loopne
adc
xchg
aad
fdivl
jmp
inc
test
inc
fadd
fimuls
imul
add
aam
js
orb
pop
lret
lods
mov
adc
push
fdiv
dec
push
ja
bound
adc
dec
fldenv
mov
lods
lods
test
xor
adc
out
rclb
imul
xchg
dec
insl
insb
mov
mov
nop
aad
jecxz
mov
add
std
push
push
add
movsl
test
xchg
in
faddp
and
jmp
jbe
repz
add
inc
call
xor
push
xchg
imull
scas
jo
mov
add
push
push
addl
or
push
pop
mov
and
jge
or
test
cmpsb
nop
xchg
in
push
test
push
adc
fdivrs
xor
pop
outsb
fstpl
fsubrs
xchg
test
xchg
test
cli
sbb
xchg
lods
pop
push
mov
cltd
mov
je
ja
test
lods
das
jp
in
je
mov
push
in
in
imul
mov
cmp
sarb
ja
jnp
out
das
inc
or
xor
addr16
mov
lcall
jl
pop
pop
pop
stos
mov
adc
add
sub
imul
test
push
mov
dec
jno
shr
add
jecxz
dec
adc
pop
or
je
push
sub
push
bound
repz
jbe
int
mov
daa
adc
jp
xor
les
push
les
test
pop
push
icebp
inc
xor
call
daa
and
pushf
in
insb
mov
bound
stos
jl
pop
mov
inc
test
cmc
out
mov
jno
xor
lcall
scas
test
popf
inc
mov
xchg
dec
mov
popf
repz
mov
cmp
adc
mov
mov
outsb
adc
adc
xlat
int
pop
scas
cld
mov
shrb
sbb
sti
sbb
daa
idivl
in
test
lock
xchg
dec
mov
int
cmp
cmp
pop
into
inc
dec
dec
push
cmc
imul
sarl
popf
outsl
push
fmulp
repnz
repz
aas
rclb
fldl
lods
dec
xor
mov
xor
and
ret
adc
fcmovbe
test
into
mov
in
sub
mov
add
pop
cmp
adc
int3
mov
dec
je
pop
push
xchg
adc
ds
pop
and
adc
test
inc
lret
shl
jp
jae
sub
aaa
or
loopne
push
fdecstp
test
mov
adc
sbb
aas
imul
not
add
or
xor
imul
mov
ss
adc
or
cltd
stos
int
push
lahf
pusha
xchg
stc
sbb
inc
inc
inc
in
loopne
pop
or
movb
mov
xor
mov
subb
int3
mov
ja
fs
mov
scas
or
insb
xchg
add
arpl
inc
int3
pop
test
out
fildl
xor
push
sub
jmp
repz
xchg
jle
xor
sti
lret
flds
jle
jne
lahf
stc
cmpsb
xor
outsl
mov
inc
rcr
dec
or
out
data16
rolb
xor
xor
add
or
aam
and
into
clc
mov
and
cmpsl
popa
cmp
sahf
mull
ret
mov
dec
insb
jp
pop
stc
or
mov
fistpll
or
mov
arpl
jnp
mov
daa
cmp
ja
addl
loopne
xchg
dec
xor
cmpsl
add
pushf
int3
add
cli
adc
ret
rorl
data16
stc
mov
ja
xchg
mov
mov
cmpsl
imul
outsb
scas
mov
scas
xchg
out
push
pop
jp
popa
and
imul
sbb
outsl
mov
call
jnp
in
sub
gs
ret
or
ja
int3
xchg
adc
mov
fildll
lret
sbb
test
cmpsb
pop
fdivr
jae
and
mov
lahf
nop
aaa
ret
cmp
xchg
dec
in
adc
fidivrs
imul
jae
adc
daa
add
fsubrs
dec
movsb
fcoms
xchg
mov
inc
or
dec
jge
pop
into
and
sbb
imul
sbb
movsl
mov
arpl
cmpsb
ret
frstor
pop
mov
sahf
mov
pop
jne
inc
mov
mov
and
mov
fstpt
xor
push
mov
int
gs
push
sub
mov
shrl
repz
sahf
cmp
push
and
pop
jno
jl
inc
sub
aas
pop
in
xchg
sub
add
fstl
jmp
shlb
sub
clc
mov
inc
mov
push
and
mov
or
cmp
mov
or
cli
popf
dec
jno
out
aas
and
cmc
es
gs
fldt
mov
notl
leave
lds
stos
cmpsb
std
xor
dec
mov
cmpsb
inc
repz
arpl
rorl
jge
lock
or
pop
int
out
sbb
pusha
dec
sub
js
mov
xor
mov
cli
push
push
inc
push
xchg
imul
enter
inc
adc
dec
push
lret
sub
aas
xchg
mov
sub
pop
dec
mov
pusha
dec
mov
daa
sub
jl
outsl
cmpsb
ljmp
dec
enter
int
sti
sub
ljmp
notl
stc
inc
fisttpll
leave
out
aas
fld
daa
xchg
stc
mov
inc
mov
sbb
xchg
mov
subb
inc
ljmp
mov
scas
push
outsl
and
pop
mov
aad
xchg
jb
or
out
mov
outsb
dec
add
jmp
cmpsb
push
mov
push
lret
loop
out
clc
dec
sbbl
sbb
jno
jne
popa
clc
mov
mov
jg
iret
stos
mov
ds
xchg
pop
mov
in
fnstenv
adc
sti
ret
loope
push
pop
xlat
nop
lret
clc
lds
add
movsl
add
aam
lcall
pop
push
push
cmc
mov
jp
mov
mov
stc
cmpsl
inc
jo
daa
xor
insl
rcrb
sub
into
out
xor
add
test
call
xchg
xchg
test
add
xchg
mov
in
adc
xor
jns
cmp
pop
repnz
sbbl
add
sub
cmp
dec
push
out
insl
arpl
xchg
aad
pushf
stc
sub
inc
or
int3
inc
dec
pop
dec
cmp
mov
out
pusha
imul
psraw
or
and
mov
inc
adc
add
sarb
negl
push
jne
xchg
pop
dec
sub
aad
add
rclb
push
jle
mov
add
mov
out
sub
adc
mov
