dec
adc
inc
add
andl
add
sub
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
cmpl
mov
mov
push
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
call
xor
cmp
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
lea
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
lea
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
mov
mov
mov
push
push
call
test
js
lea
lea
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
push
call
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
jne
mov
mov
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
mov
ret
mov
test
je
mov
test
jne
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
je
push
call
pop
lea
cmp
je
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
cmpb
jne
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
push
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
mov
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
addl
mov
mov
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
xor
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
xor
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
test
je
addl
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
push
call
mov
add
addl
je
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
mov
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
xor
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
mov
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
mov
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmpl
je
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
pop
pop
ret
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jmp
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
call
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
mov
mov
call
andl
push
mov
lea
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
das
inc
add
popa
add
add
push
mov
repnz
out
add
add
add
push
pop
stos
add
pop
xchg
push
add
add
jbe
lcall
cwtl
jl
into
xchg
aam
je
outsl
mov
clc
push
jae
pop
push
lods
sahf
add
add
mov
add
movsl
andb
sub
push
mov
add
push
push
push
lea
push
push
call
add
leave
mov
add
add
add
jbe
push
add
add
add
add
call
add
out
lods
add
add
xchg
rolb
add
sub
pop
popl
push
push
lea
push
call
jb
pop
fs
mov
add
int3
add
jns
add
int3
repnz
mov
add
sub
pop
push
push
lea
push
call
add
loop
mov
pop
add
xchg
addl
add
in
add
add
loope
add
add
add
jmp
mov
push
add
add
pop
add
add
lcall
push
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
add
add
outsl
fldz
mov
add
fildl
mov
mov
loope
mov
lret
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
in
loop
nop
add
add
add
add
add
push
lock
add
roll
test
stc
xchg
sub
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
loop
mov
push
rolb
add
mov
mov
test
add
add
add
ljmp
cli
mov
lret
test
lcall
xor
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jmp
add
add
sarb
add
add
add
xchg
jne
mov
add
loopne
cltd
push
mov
out
add
add
xchg
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
add
add
add
add
scas
pop
mov
add
push
add
fiaddl
add
nop
lahf
add
jnp
push
add
stc
add
add
add
push
add
in
in
call
push
push
push
lea
push
push
push
push
lea
push
push
call
jecxz
fistl
fisubrl
stc
add
call
add
add
pusha
add
add
add
fildll
mov
xchg
cwtl
add
mov
mov
pop
add
sub
pop
jmp
ret
push
push
lea
push
push
push
push
push
push
push
call
push
mov
ljmp
test
out
aad
sti
mov
int
lock
xchg
popf
mov
add
add
popa
add
addl
add
fdivr
lcall
inc
hlt
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
add
jo
add
mov
add
jle
add
into
push
add
jle
cld
loop
in
fdivr
lcall
pop
hlt
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
lcall
add
push
add
xchg
lds
add
add
stos
std
cltd
pop
mov
sti
lea
add
cmpsb
cmc
cmpsb
xchg
jmp
add
add
lcall
pop
in
push
lea
push
lea
push
push
push
call
test
mov
add
add
cltd
lea
out
jmp
jns
ljmp
add
add
add
test
jno
arpl
lahf
pusha
call
in
in
lcall
ret
add
add
push
push
call
push
add
add
add
push
add
lcall
xchg
mov
add
add
add
lods
add
add
lods
add
add
mov
sbbl
push
scas
pop
mov
shlb
cli
sti
add
add
lcall
ret
dec
add
push
push
push
push
push
call
stos
push
add
loopne
mov
in
add
add
add
add
mov
mov
xlat
leave
mov
add
ja
jb
add
jno
in
pop
scas
sti
add
add
cmpsl
add
add
xchg
jbe
add
mov
pop
push
addb
add
in
imul
add
lahf
mov
lcall
pop
add
repz
adc
in
lods
push
add
push
or
inc
add
sub
not
sub
add
pop
shr
lea
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
rolb
popa
add
fiadds
addb
clc
add
insb
mov
popl
call
add
pop
fs
lds
add
add
add
jno
imul
add
cmpb
js
in
neg
add
pop
pushl
push
lea
push
call
add
add
add
add
xchg
jbe
leave
sti
jmp
add
cli
add
movsl
mov
in
clc
lcall
sbb
add
mov
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
lret
push
mov
test
rcr
add
push
add
cmpb
add
mov
add
push
rol
in
add
jl
add
bound
add
add
lods
rolb
hlt
lods
rcrl
rclb
in
loopne
lcall
inc
call
lea
push
push
push
push
push
lea
push
push
call
add
out
mov
scas
add
imul
add
pop
roll
add
add
pop
outsl
add
lods
loope
mov
add
mov
add
in
in
lcall
pushl
push
push
lea
push
push
call
add
push
sahf
imul
aam
pop
roll
clc
add
cld
add
push
call
add
sub
pop
pushl
call
push
lea
push
push
call
add
jae
popa
add
add
iret
popf
add
iret
fadds
fiaddl
add
pusha
add
in
add
mov
mov
lock
mov
test
call
in
hlt
pop
pushl
pushl
push
lea
push
push
lea
push
push
lea
push
push
push
call
shll
push
ljmp
bound
cmpl
test
xchg
add
loopne
cmc
add
jns
add
sub
pop
call
push
push
ror
push
xor
add
sub
sub
rol
pop
ror
add
pop
push
lea
push
push
push
call
mov
add
std
ljmp
data16
add
jb
outsl
fldcw
out
pop
add
loopne
add
push
rorb
mov
in
lock
pushl
push
push
push
lea
push
call
add
add
shlb
add
add
popl
loope
fists
fadds
lods
add
stc
add
repnz
shl
pusha
add
mov
shl
add
mov
mov
mov
loop
mov
mov
pop
loopne
add
add
test
push
sub
pop
call
push
lea
push
push
push
push
push
push
push
call
mov
cmc
jge
jle
cld
les
arpl
mov
add
ja
add
mov
loopne
bound
add
sub
pop
push
push
push
sub
add
xor
push
or
not
add
sub
add
add
pop
shl
sub
dec
pop
push
push
lea
push
lea
push
push
push
push
call
jecxz
add
mov
addr16
out
mov
lods
add
cwtl
push
cld
mov
add
pop
mov
add
push
imul
add
add
cmpsb
xchg
lock
add
icebp
jl
add
filds
push
jp
mov
add
sub
pop
push
push
push
push
push
push
lea
push
call
add
jno
add
push
add
push
rolb
cltd
stos
add
mov
add
ficoms
out
lcall
cmpsl
in
movsl
lods
jbe
jo
push
mov
add
xchg
pusha
mov
int3
lcall
sub
pop
push
push
lea
push
push
lea
push
push
push
call
gs
jmp
jb
pop
add
lods
int
lahf
clc
out
xchg
add
fiaddl
add
cwtl
xchg
add
pop
cli
add
add
add
fiaddl
aad
mov
fldl
add
add
lcall
rclb
push
push
push
push
push
lea
push
call
add
xchg
add
add
jbe
xlat
lahf
push
add
cld
jb
enter
icebp
add
add
std
lock
add
pop
mov
popf
add
add
xlat
je
into
add
incb
add
roll
lcall
clc
push
lea
push
lea
push
push
lea
push
lea
push
call
add
loopne
int
lcall
lret
add
loope
ret
pushf
testb
pop
push
bound
add
add
cwtl
xchg
ljmp
jnp
in
mov
std
add
xchg
out
data16
stos
add
lcall
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
pusha
hlt
call
add
add
mov
out
lods
push
xchg
pop
add
add
push
out
jge
popf
add
add
mov
add
add
fisubrl
lds
movsl
test
add
lcall
lret
pop
int3
add
pop
hlt
add
push
lea
push
push
push
lea
push
call
add
hlt
add
add
xchg
ja
jl
in
mov
xchg
scas
add
add
add
sar
cwtl
add
fbstp
fbstp
out
add
add
leave
add
add
add
mov
aad
mov
mov
in
xchg
pop
lahf
add
in
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
push
call
popf
je
stos
icebp
add
mov
scas
xchg
ljmp
cltd
add
add
xlat
add
cmc
xchg
add
add
sub
pop
add
push
push
push
push
call
push
lods
add
add
mov
add
push
pusha
mov
add
add
add
ja
call
push
add
mov
add
popf
push
add
imul
xor
jno
adc
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
mov
push
add
add
cltd
add
add
add
sahf
std
add
add
scas
fmulp
lods
mov
insb
mov
jmp
add
add
lcall
xor
push
push
lea
push
call
rorl
popa
add
into
add
cld
add
ror
test
mov
add
shlb
movsb
xorl
mov
cwtl
lret
loope
add
jae
mov
in
add
add
fs
pop
add
push
lea
push
push
push
push
call
mov
mov
jb
fimull
pop
add
cli
add
add
in
add
int3
pop
push
in
outsl
subb
test
movsl
addb
insb
add
lcall
jne
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
leave
sahf
add
les
fildl
add
add
clc
lahf
mov
push
mul
xchg
test
add
repnz
hlt
mov
test
sahf
loop
clc
mov
add
add
pop
add
push
add
int3
add
xchg
add
in
fcompl
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
scas
add
fdivrl
in
xchg
jbe
add
push
add
mov
add
add
movsl
scas
pop
add
mov
add
scas
add
mov
gs
add
loopne
add
add
add
add
out
mov
in
add
hlt
enter
mov
out
fcmovnu
add
rol
movl
and
push
push
lea
push
push
lea
push
push
push
call
add
add
gs
mov
cwtl
add
jmp
jecxz
pop
fsubrs
add
imul
imul
mov
movsb
cmpsl
jle
mov
add
add
add
mov
jecxz
scas
std
roll
lcall
movsb
add
pop
add
les
add
push
push
push
push
call
add
incb
add
testl
roll
add
add
jb
pushf
std
xchg
add
add
mov
lcall
lret
mov
add
mov
add
pop
add
pop
lret
add
push
arpl
pop
out
mov
add
fwait
int3
mov
pop
add
pop
push
push
push
push
lea
push
push
push
call
aad
add
add
negb
ja
mov
push
add
imul
fsubrp
add
add
scas
xchg
cli
mov
add
mov
aad
add
cli
add
mov
add
add
add
mov
push
pushf
add
jl
xchg
pop
cld
sub
pop
mov
xor
push
push
lea
push
push
call
test
add
pop
add
fs
add
repnz
add
add
push
je
add
lea
jnp
add
in
lock
push
push
push
push
call
in
add
pop
ja
mov
mov
jl
mov
fiaddl
lods
add
in
out
add
cmpsl
add
addb
or
adc
xor
push
stc
and
push
push
call
add
add
add
movsl
add
xchg
mov
add
leave
addr16
add
std
add
add
out
add
add
in
lcall
xchg
sti
scas
add
xchg
mov
int3
xchg
add
add
add
gs
pop
sub
pop
push
lea
push
push
push
push
push
lea
push
call
add
rolb
pushf
jecxz
add
out
stc
mov
mov
cmpsl
mov
add
nop
data16
push
cmp
roll
insb
sahf
divb
and
add
add
add
xlat
mov
pop
push
add
filds
add
add
mov
in
rep
push
lea
push
lea
push
push
push
lea
push
push
push
call
jo
sti
jae
add
in
push
jl
fcoml
xchg
imul
cli
ror
add
loop
addr16
pushf
mov
in
loopne
pop
mov
push
inc
sub
pop
add
add
push
push
push
lea
push
push
call
pop
je
les
movsb
push
add
aam
test
roll
push
mov
add
stos
add
add
lcall
ret
dec
add
mov
push
push
push
push
call
fstl
ret
imul
pusha
add
mov
xlat
add
jbe
mov
out
add
lea
aad
out
scas
call
add
stos
test
in
add
add
xchg
lahf
mov
in
hlt
lcall
add
push
lea
push
lea
push
call
mov
movl
xchg
add
add
roll
add
add
pop
lds
jmp
call
sub
pop
add
push
lea
pop
mov
push
push
push
call
add
sahf
mov
add
add
add
add
pop
add
jecxz
stos
jns
add
rcll
add
bound
jo
lahf
loope
leave
sub
pop
xor
push
lea
push
push
push
lea
push
push
push
call
les
fldcw
add
add
add
push
mov
jmp
stos
in
arpl
imul
add
test
add
mov
jecxz
sub
pop
add
push
push
push
push
push
call
aad
add
add
int
fst
cltd
arpl
fdivr
add
cli
leave
add
add
hlt
add
add
fisubrl
fdivr
mov
add
mov
roll
in
int3
imul
mov
scas
add
lcall
dec
sub
adc
push
push
lea
push
push
call
add
pop
fsubs
aam
push
lcall
jbe
jp
test
rclb
sti
out
pop
jle
add
jb
add
hlt
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
movsb
add
add
add
fcomi
mov
cmpsl
outsl
add
mov
outsl
stos
ljmp
add
add
rolb
pop
xchg
cmpsb
lods
add
outsl
jae
test
xchg
add
ja
add
mov
add
add
add
ror
add
sub
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
call
add
std
add
mov
aam
mov
add
mov
mov
scas
add
test
add
add
add
pop
add
mul
lock
pusha
roll
fiadds
add
mov
lods
add
xchg
iret
stos
xchg
add
add
test
testb
repnz
add
lcall
fsubrs
xchg
mov
scas
shl
lea
push
or
not
add
rol
inc
shl
shl
sub
ror
pop
sub
sub
rol
dec
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
jno
call
int3
popf
mov
adc
divb
ja
fiaddl
fadds
add
add
cmc
pop
pop
add
arpl
add
mov
repnz
lea
add
fdivr
lcall
jne
push
lea
push
push
push
push
push
call
ljmp
fadds
jns
cwtl
call
add
add
add
add
fsubrl
je
into
pop
test
jns
add
add
add
divb
mov
arpl
jmp
cltd
xchg
xchg
add
shrl
int
add
clc
lods
push
add
imul
push
sub
pop
call
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
lret
sti
std
into
jmp
lock
add
add
jp
pop
loop
add
add
add
sarl
add
mov
cld
add
sub
pop
push
push
push
push
push
pop
add
sub
sub
sub
shr
pop
rol
add
not
pop
push
lea
pop
push
push
push
lea
push
call
add
loopne
add
add
mov
imul
popf
add
xlat
pusha
movl
into
jb
add
cli
push
test
jo
push
mov
add
add
add
sti
jae
add
add
xchg
popa
push
sahf
sub
pop
push
push
lea
rol
pop
call
push
push
push
call
data16
mov
mov
add
outsl
clc
add
jbe
jp
rolb
add
push
jge
addl
lcall
xchg
ret
pop
add
add
iret
movsl
fadds
pop
imul
cltd
add
clc
push
shr
inc
pop
push
push
inc
ror
pop
push
push
not
pop
mov
push
push
push
push
push
push
push
call
fildl
mov
lock
add
add
add
add
add
add
mov
leave
add
sub
pop
add
add
push
push
lea
push
push
push
push
push
call
add
cmc
fsubr
add
test
xchg
mov
add
add
popf
xorl
add
addl
pop
in
jp
scas
testl
add
xor
adc
push
lea
push
lea
push
lea
push
call
je
sahf
add
cli
mov
lret
add
add
cwtl
jge
add
add
stos
stos
xchg
add
add
mov
cltd
movsl
sub
pop
add
push
push
dec
shr
shr
pop
mov
push
push
push
call
rolb
jns
mov
aad
jno
fldl
mov
jp
add
fcmovnb
add
add
icebp
add
add
mov
in
clc
lcall
add
push
push
push
push
push
call
mov
gs
clc
xchg
jo
lock
add
fsubs
movsb
leave
leave
fidivs
lods
lret
add
mov
sahf
fildl
add
lret
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
jns
fs
stos
les
add
add
add
cwtl
mov
mov
add
add
js
add
add
call
add
scas
cmpsl
add
fisubrs
mov
add
movsl
add
add
add
add
les
xchg
cmpsb
sub
pop
add
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
xchg
jmp
push
jae
testb
add
mov
jmp
add
mov
add
add
add
add
add
stc
sti
jp
ljmp
add
xchg
test
add
push
mov
test
in
loopne
lcall
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
add
xchg
out
mov
push
add
addb
add
add
int
addr16
lods
out
test
loope
xchg
mov
add
cmpsb
push
add
add
mov
divb
jmp
mov
add
lret
add
dec
and
adc
std
pop
rep
push
ror
add
pop
mov
xor
push
xor
add
pop
or
je
push
push
push
push
push
lea
push
push
push
push
call
les
ret
sahf
add
mov
xchg
add
add
xchg
jnp
out
arpl
jb
push
pop
xchg
jle
neg
add
mov
xlat
loope
in
fdivr
lcall
xor
adc
dec
mov
push
push
push
lea
push
push
call
push
lahf
call
out
push
je
add
add
add
add
add
add
add
cmpl
cmpsb
jle
jecxz
add
add
in
call
mov
xor
push
push
push
push
push
push
lea
push
call
push
testb
rcl
jl
into
scas
add
xchg
add
mov
xchg
out
add
pop
in
mov
xchg
add
add
stos
add
add
add
add
into
mov
test
pop
add
add
push
push
call
add
add
in
add
add
add
push
out
add
mov
rolb
mov
mov
mov
mov
add
push
add
pop
add
pop
add
add
sub
pop
push
push
add
shr
dec
pop
mov
xor
push
add
xor
shr
shl
pop
add
pop
push
lea
push
push
push
call
add
add
into
lods
pop
incb
add
push
mov
mov
fwait
fcompl
add
add
sti
test
add
cli
jo
add
pop
add
sub
pop
rep
push
lea
push
push
lea
push
push
push
push
push
push
call
test
mov
scas
mov
jno
add
add
add
icebp
add
repnz
in
add
shll
add
lcall
dec
sub
adc
jl
in
push
push
lea
push
lea
push
lea
push
push
lea
push
call
lret
add
lock
pushf
insb
notb
add
bound
test
add
jb
mov
mov
mov
add
faddl
add
sti
faddl
icebp
add
add
scas
repnz
fldl
mov
jmp
js
roll
add
fwait
add
mov
vpsubb
add
leave
je
push
sub
xor
rol
rol
pop
mov
push
push
push
push
push
call
add
mov
add
xchg
filds
add
xchg
add
nop
in
mov
push
push
add
std
add
ror
add
add
out
in
jp
pop
jae
add
cmpsb
filds
add
jns
in
int
pop
add
xorl
in
pop
add
push
add
add
add
pop
add
push
shr
add
pop
rep
push
lea
push
call
add
mov
add
add
add
mov
add
jns
jbe
jmp
add
push
add
add
add
js
add
test
stc
sub
pop
pop
push
push
rol
lea
push
and
add
sub
sub
inc
xor
pop
not
xor
pop
push
dec
lea
pop
pop
push
add
lea
dec
sub
pop
mov
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
pop
add
sbbb
hlt
jno
outsl
add
add
add
addr16
lds
push
add
pop
xchg
outsl
std
lea
out
fs
in
mov
xchg
std
imul
lahf
jb
iret
add
add
jl
mov
out
fldl
cltd
sub
pop
mov
push
push
push
push
call
addb
jmp
add
add
lods
addl
cmpsb
push
icebp
add
lret
add
add
pop
sahf
repnz
mov
call
add
add
ret
call
add
scas
add
add
mov
leave
push
addb
ja
in
lock
lcall
loopne
push
call
popa
xchg
add
test
xchg
add
mov
pusha
imul
pop
aam
xlat
add
add
testl
add
add
fiaddl
add
add
jne
clc
mov
mov
add
ja
arpl
mov
add
add
push
push
push
call
scas
add
jl
add
mov
push
shll
sti
add
add
je
jb
add
xchg
popl
add
add
addl
imul
mov
add
xorl
add
movl
loopne
add
shrb
in
mov
rcll
jge
sub
pop
mov
add
push
lea
push
push
push
lea
push
push
push
call
add
add
ja
arpl
icebp
add
jp
incb
test
enter
push
jns
add
add
scas
add
cltd
jns
cltd
add
add
test
je
add
xchg
fidivs
add
mov
imul
mov
sti
jl
mov
ja
addb
push
add
mov
stc
add
bound
fisubl
push
push
rol
sub
add
shl
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
popa
add
xchg
add
fwait
pop
push
add
pop
in
addl
je
data16
ja
imull
add
add
jnp
jne
add
lahf
int
test
addr16
cli
add
mov
mov
add
add
call
lcall
push
ror
shl
ror
rol
pop
push
mov
push
shl
pop
pop
push
push
push
lea
push
push
call
fnstcw
jno
cmc
jl
add
insb
add
push
ljmp
mov
imull
rcl
push
out
shlb
repnz
loope
sahf
add
mov
int
fisubrs
add
sub
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
jmp
rolb
xchg
ret
add
add
jae
add
mov
ficoml
add
add
add
xor
add
leave
add
pop
pop
pop
push
pop
leave
ret
push
push
push
lea
push
push
push
push
push
push
push
call
mov
mov
pushf
mov
fadds
jmp
mov
pushf
add
lea
in
push
lret
push
add
sub
pop
push
push
shl
lea
pop
mov
push
shr
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
loopne
popf
mov
push
cld
push
add
scas
xchg
add
mov
push
add
jnp
xchg
mov
repnz
mov
insb
xchg
js
popf
add
jle
cmpsb
add
mov
xchg
add
add
mov
push
sub
pop
push
push
push
shr
dec
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
push
xchg
popl
push
fiaddl
icebp
add
pop
add
lods
out
mov
push
pop
shll
scas
add
add
add
jmp
iret
cmpsb
add
imul
in
push
fiadds
add
lcall
inc
cld
add
add
push
pop
addl
test
je
push
push
push
push
push
call
mov
jne
mov
in
push
add
add
push
fxch
fs
add
movsl
add
mov
add
add
mov
add
add
data16
fdiv
add
test
add
in
pop
mov
pop
push
push
push
push
push
push
push
push
call
jmp
jnp
add
add
add
add
clc
loopne
add
test
pushf
add
lods
icebp
push
add
iret
add
push
push
lea
push
push
push
push
call
stc
mov
iret
fiaddl
push
xchg
sarl
mov
mov
add
mov
mov
mov
xlat
xchg
add
add
js
hlt
sti
outsl
in
mov
add
add
data16
int3
jmp
shrl
sti
mov
jl
sub
pop
pop
push
push
lea
push
push
push
call
in
ja
icebp
add
add
jne
ja
cmpsb
test
add
add
add
add
add
add
add
mov
jns
fnsave
in
lcall
push
push
push
push
lea
push
push
lea
push
push
push
call
sahf
add
mov
js
flds
xchg
add
push
mov
add
push
jge
fwait
jl
add
add
add
add
push
add
mov
add
cwtl
add
add
lods
roll
pop
int3
lret
rorl
pop
xchg
add
jge
mov
fstl
push
sub
add
not
sub
pop
ret
push
inc
pop
push
mov
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
movsb
add
add
cld
in
js
add
add
pop
stc
xchg
mov
add
add
add
cwtl
add
pop
shlb
mov
mov
xchg
js
popf
add
call
lcall
cld
push
push
push
push
push
push
call
call
mov
cmpsl
add
add
mov
pop
test
lods
push
sarl
ficoml
enter
add
add
add
add
push
push
xor
pop
push
testl
push
sub
shl
pop
addl
push
dec
ror
shr
pop
push
push
push
call
pop
mov
jnp
in
js
add
fistl
mov
cwtl
js
add
add
add
clc
jl
bound
add
mov
in
clc
lcall
ret
sti
decl
mov
push
push
lea
push
push
push
call
jne
add
add
jecxz
cmc
xchg
add
insb
int3
test
fiadds
jp
insb
mov
xchg
pop
add
mov
add
lcall
jne
push
push
add
xor
pop
push
push
xor
pop
call
push
lea
push
push
lea
push
push
call
add
int3
mov
add
xlat
add
add
mov
fsubs
add
mov
add
add
add
pushf
lods
add
into
add
add
jnp
mov
push
ljmp
stos
add
add
add
cli
jo
ljmp
fwait
add
cli
add
in
in
lcall
jge
add
test
push
dec
sub
pop
pop
push
add
add
add
add
pop
pop
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
fadds
add
add
add
add
mov
mov
push
rcl
add
add
add
lds
add
adc
push
jns
add
add
add
loop
addb
cmpsb
movsl
jb
insb
cwtl
loope
test
lcall
lcall
leave
push
lea
push
push
lea
push
push
call
push
fistpll
add
add
add
xchg
jae
add
std
pushf
add
add
add
add
movsb
addr16
loopne
arpl
add
aad
addb
add
lret
out
push
pop
push
cmpb
in
addl
jge
mov
in
lcall
add
push
push
ror
ror
add
pop
mov
push
push
push
push
lea
push
push
lea
push
lea
push
call
pop
sahf
add
scas
jp
jae
testl
testb
js
add
xchg
add
test
add
add
add
add
mov
sub
pop
add
push
xor
pop
push
push
shl
pop
push
push
lea
push
push
lea
push
push
call
in
add
in
mov
add
mov
add
add
mov
add
enter
add
int3
fs
stc
ja
in
xchg
add
cltd
push
shlb
jecxz
sub
pop
push
push
push
push
call
pop
add
add
mov
add
sahf
rol
iret
add
pop
aam
add
xchg
pop
pop
add
loopne
add
add
add
fldl
lods
cli
add
add
mov
in
clc
lcall
inc
cld
or
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
fcom
xchg
xchg
push
nop
mov
iret
nop
mov
mov
mov
push
add
mov
jmp
push
ja
int
movb
add
add
sahf
mov
add
cmpsb
fdivs
lret
test
aad
jnp
filds
xchg
xlat
cmpsb
add
jae
add
push
call
push
lea
push
call
fsubs
add
add
outsl
cld
jb
xchg
repnz
add
js
add
jns
add
data16
fwait
add
call
add
mov
add
jmp
repnz
push
mulb
movsl
mov
add
lods
nop
mov
add
sub
pop
push
push
add
ror
pop
call
subl
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
rclb
in
add
add
mov
add
pop
mov
fldt
lods
mov
push
testb
mov
in
in
fdivr
lcall
jge
add
test
call
pop
push
push
lea
push
call
scas
loopne
mov
stos
add
mov
add
add
loopne
nop
insb
rcrl
sahf
in
outsl
ljmp
sar
lock
imul
add
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
push
add
test
scas
mov
mov
pop
add
add
add
jl
xchg
in
add
add
add
add
addb
add
add
stos
sub
pop
pop
pop
push
lea
push
push
push
push
call
add
add
arpl
add
insb
stos
test
add
stos
movb
add
add
xchg
add
sarl
mov
mov
fcoml
add
add
leave
add
xchg
push
push
mov
rcl
mov
call
bnd
in
in
lcall
push
ror
pop
ret
push
push
push
push
push
push
push
call
jl
mov
sarl
mov
in
sti
iret
add
aad
jne
add
push
pop
hlt
pop
add
add
imul
add
cmpsl
jmp
hlt
jmp
add
add
fs
cli
add
jl
repnz
add
add
repnz
mov
lock
lcall
mov
push
push
lea
push
lea
push
push
push
lea
push
call
pop
add
add
add
sbb
mov
test
mov
imul
add
stos
add
mov
jmp
add
test
sub
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
cli
cwtl
loop
add
rolb
add
lcall
les
add
insb
add
sahf
shrb
add
add
jmp
out
xchg
add
aam
in
fdivr
lcall
push
push
xor
add
ror
pop
push
push
push
push
push
push
push
push
call
xchg
add
add
push
add
pop
repnz
fmul
lret
add
imul
rorl
add
xchg
ljmp
addl
lds
lea
call
mov
mov
push
xchg
add
popa
out
fstp
cmpb
fsts
jmp
cmc
xchg
xchg
roll
clc
addr16
les
testl
lock
lcall
inc
or
inc
cmp
sub
add
shl
pop
sub
push
add
shr
xor
pop
mov
shr
push
push
push
lea
push
push
call
add
xlat
add
mov
pop
mov
add
addl
add
add
fistl
testl
jl
mov
add
add
sub
pop
add
push
lea
push
push
push
call
lea
movsl
add
mov
add
mov
mov
scas
add
cmc
push
lret
outsl
jecxz
test
add
lds
outsl
pop
out
add
sub
mov
push
add
add
add
add
mov
pop
leave
add
add
lcall
inc
cld
push
sub
pop
mov
push
push
call
push
push
add
addr16
imul
test
mov
add
js
push
add
fistl
ljmp
push
xchg
add
pop
fadds
push
add
int
leave
push
in
icebp
in
shrl
add
push
filds
add
out
pop
add
fcmovbe
lods
xchg
fs
add
std
mov
add
lcall
inc
or
ror
ror
pop
add
push
dec
shl
shl
ror
pop
mov
mov
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
jb
add
mov
or
mov
mov
ror
mov
jbe
add
add
rolb
add
test
add
add
push
xchg
popa
jle
pushf
mov
fiaddl
addl
in
fcompl
pop
outsl
jne
push
push
lea
push
push
call
shlb
out
std
int
add
jns
repnz
data16
xchg
mov
cmpsb
add
add
pusha
push
add
cwtl
fadds
add
jne
push
push
push
call
call
xchg
add
add
push
shll
movsb
add
add
add
add
add
mov
test
add
sti
mov
add
lcall
inc
adc
add
add
add
cmp
xor
mov
xor
push
push
push
lea
push
call
add
mov
add
add
mov
add
hlt
add
push
add
add
xchg
add
add
js
add
out
fadds
add
add
pop
add
add
add
add
lcall
std
or
jae
push
push
push
call
mov
lods
fsubl
frstor
mov
mov
add
repnz
add
scas
jmp
mov
mov
jae
xchg
add
jns
test
faddl
add
lcall
inc
cld
push
not
add
pop
mov
push
push
push
push
push
push
call
add
push
mov
jp
jnp
add
pop
mov
add
fstl
bound
into
add
add
ljmp
hlt
je
add
add
nop
xchg
out
pop
je
add
ljmp
je
add
push
push
push
call
insb
xchg
icebp
add
fidivl
add
add
cltd
mov
mov
mov
sarb
add
lret
nop
add
hlt
add
mov
add
add
icebp
push
jo
add
movsb
data16
jno
add
hlt
add
pop
add
add
add
sub
pop
mov
push
xor
not
ror
pop
movl
jmp
push
rol
inc
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
stos
add
data16
call
arpl
ret
add
add
mov
fadds
add
add
ljmp
add
cmpsb
add
mov
enter
add
add
nop
cmc
cld
add
add
lcall
nop
mov
add
push
push
push
push
push
lea
push
push
call
push
mov
aad
add
add
fimull
add
add
mov
mov
mov
add
pop
mov
je
mov
mov
lods
push
lea
add
divl
add
xchg
add
xchg
xchg
scas
fmull
sti
xchg
cltd
sub
pop
cmp
jne
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
ja
add
lahf
out
add
pop
add
add
test
pop
add
add
lcall
ret
outsl
loopne
mov
negb
loopne
add
add
add
sti
loope
jns
add
pop
add
add
inc
adc
cmc
xor
pop
movl
push
pop
jmp
push
shl
pop
mov
push
push
push
push
push
push
push
push
push
call
add
mov
add
mov
add
ja
add
pop
jle
lcall
lods
jb
xchg
mov
imul
cltd
aad
xchg
pop
add
add
adc
mov
movsl
call
addl
lahf
ret
test
adc
push
bound
loop
add
into
add
movl
js
add
test
add
add
mov
jle
rcll
aas
push
call
test
mov
ret
add
addl
add
mov
mov
mov
lcall
xchg
mov
xchg
icebp
mov
add
cli
push
iret
mov
add
call
imul
hlt
shlb
sub
pop
mov
movl
push
push
push
lea
push
push
call
push
mov
mov
jbe
add
add
lds
pop
lret
add
add
insb
add
int
add
lcall
loop
add
push
sub
pop
pushl
push
xor
ror
shl
lea
pop
pop
mov
push
sub
xor
pop
mov
push
shl
add
pop
mov
push
push
sub
push
sub
add
add
sub
not
sub
xor
ror
pop
sub
pop
push
lea
push
push
call
lds
add
lahf
scas
stos
pop
movl
add
iret
ret
add
add
push
jmp
loopne
jns
add
fisubrs
mov
add
xchg
add
add
push
jno
shll
fwait
test
add
add
pushf
pusha
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
popf
add
lods
lds
jno
add
add
add
ret
xchg
jo
cld
xchg
add
add
bound
push
add
add
je
test
outsl
popl
loopne
mov
push
je
mov
pop
xchg
fsubl
lds
add
jle
add
xchg
xor
add
out
ret
push
or
add
pop
pop
inc
push
sub
push
and
add
inc
xor
not
sub
shl
pop
xor
pop
push
push
lea
push
push
push
push
push
call
out
rcl
jno
add
jl
shll
in
fildl
cmpsb
mov
pushf
add
push
add
add
data16
pop
sub
pop
push
call
push
push
lea
push
push
push
push
push
push
push
call
ljmp
sahf
add
jno
mov
faddl
add
mov
xchg
mov
scas
add
add
scas
add
repnz
movsb
jns
ljmp
pushf
add
in
jecxz
add
out
mov
jns
in
fdivr
lcall
js
int3
fldz
ret
push
pop
add
push
push
rol
xor
push
or
inc
add
dec
inc
add
sub
sub
pop
shl
lea
pop
push
add
shr
inc
pop
push
call
push
xor
dec
pop
cmpl
je
push
push
sub
push
or
not
add
add
rol
add
sub
sub
lea
inc
ror
pop
add
pop
push
not
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
jae
stc
mov
leave
sbbb
cwtl
pop
cbtw
mov
xchg
mov
shr
add
jnp
mov
add
add
jo
in
fcompl
mov
cmp
rol
je
push
push
shl
sub
push
or
inc
add
sub
add
sub
add
ror
not
pop
shl
dec
pop
push
push
lea
push
push
call
push
ret
hlt
mov
fidivrl
add
std
adcl
mov
les
jae
add
add
imul
push
xchg
add
enter
add
add
bound
jmp
lcall
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
aam
add
pop
add
fs
add
stc
pop
jle
add
xchg
add
mov
jge
push
xchg
add
ficompl
add
mov
add
jns
add
add
ret
nop
add
outsl
imul
imul
add
lret
lcall
mov
in
fdivr
lcall
cmp
rol
je
push
push
sub
dec
not
add
push
xor
add
ror
rol
lea
rol
sub
shl
pop
sub
pop
push
push
push
push
push
push
push
call
js
rcrb
add
mov
add
in
add
add
fst
bound
mov
add
sub
pop
push
call
push
inc
pop
cmpl
je
push
push
sub
lea
add
push
and
add
dec
sub
sub
sub
rol
dec
add
pop
add
pop
push
shl
xor
lea
rol
pop
push
call
push
sub
sub
pop
cmpl
je
push
push
add
push
push
pop
add
rol
shl
sub
add
add
add
pop
dec
dec
shr
pop
push
lea
push
push
push
call
in
add
add
add
fstpl
add
add
add
add
add
arpl
rcll
cwtl
add
mov
add
mov
add
into
add
push
jecxz
sub
lcall
call
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
jno
add
faddl
add
call
add
xchg
add
ljmp
in
add
push
add
add
lock
jb
mov
jbe
mov
js
pop
sub
pop
cmpl
je
push
push
not
sub
add
push
xor
add
lea
not
dec
sub
rol
pop
add
pop
push
lea
shr
pop
push
call
push
lea
push
push
call
flds
jnp
add
jl
add
push
sbbb
add
add
add
add
add
add
je
mov
add
hlt
lcall
cmp
rol
je
push
push
add
ror
sub
push
or
inc
add
inc
sub
inc
add
dec
pop
sub
add
shl
pop
push
lea
shr
pop
push
push
not
add
rol
sub
pop
call
cmpl
je
push
push
rol
ror
push
and
add
add
sub
sub
shr
sub
add
lea
lea
pop
shr
lea
xor
sub
pop
push
pop
push
push
push
push
push
push
call
ljmp
mov
add
sar
mov
jb
push
out
push
arpl
xchg
mov
ret
add
add
add
mov
mov
rolb
cltd
lret
add
leave
mov
pop
add
addr16
nop
add
mov
add
push
sub
pop
call
push
dec
pop
cmpl
je
push
push
dec
add
push
or
not
add
xor
shl
xor
sub
rol
shl
pop
xor
sub
sub
pop
push
push
push
push
push
call
cmpsl
add
addr16
movsl
arpl
mov
incb
je
test
mov
xchg
pop
mov
add
mov
add
add
add
mov
mov
add
add
mov
add
add
lcall
call
push
push
call
add
add
stos
add
mulb
fadd
push
add
add
mov
xorb
add
add
addr16
into
add
add
cli
add
add
lcall
js
jmp
les
je
push
push
dec
push
or
inc
add
shl
sub
inc
not
dec
pop
not
pop
push
xor
shl
not
ror
pop
push
call
push
sub
shl
rol
dec
pop
cmpl
jne
push
push
call
add
mov
test
add
mov
xchg
pop
mov
nop
je
int3
jle
add
fildl
push
pop
add
imul
lods
in
add
add
xchg
add
je
add
lcall
inc
adc
leave
hlt
add
pop
movl
push
shl
pop
jmp
xor
push
shl
pop
pop
pop
push
push
push
call
add
aam
add
popa
add
fistps
movsl
add
add
cli
imul
into
add
cmpsb
mov
lret
scas
push
hlt
lcall
push
push
push
push
push
push
lea
push
push
call
add
add
push
pop
jbe
loop
add
add
sti
ficomps
add
xchg
pop
add
rolb
fldl
mov
add
movsl
add
jns
pop
lods
add
mov
add
jmp
add
add
sub
pop
pop
leave
push
sub
not
not
shl
pop
ret
push
push
sub
xor
ror
pop
mov
push
push
call
jo
pop
xorl
add
int
add
add
xlat
inc
pushf
mov
add
add
jecxz
bound
fldl
add
add
add
add
add
jl
popa
ret
int3
push
add
aad
add
test
add
sti
iret
cmpl
lcall
in
push
push
push
call
add
mov
fwait
add
mov
pusha
nop
add
add
add
lret
data16
add
xchg
jl
pop
sbbb
add
jno
add
in
add
roll
in
hlt
pop
cmpl
jne
push
push
shl
push
or
not
add
sub
xor
not
sub
lea
dec
pop
ror
pop
push
add
sub
pop
pushl
call
push
dec
pop
push
push
add
ror
inc
pop
call
jmp
push
shr
sub
pop
cmpl
je
cmpl
jne
push
xor
pop
mov
push
add
add
sub
pop
call
push
shl
add
pop
ret
push
dec
sub
add
pop
jmp
push
xor
xor
inc
pop
cmpl
jne
push
push
sub
shl
add
push
push
pop
add
not
sub
sub
add
pop
shr
shl
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
test
add
jns
mov
xchg
add
add
pop
popa
fiaddl
lcall
add
repnz
add
sub
pop
pushl
push
push
call
fildl
push
add
jno
xor
xor
insb
stos
add
cwtl
pop
add
cli
xchg
add
add
add
push
repnz
jge
push
add
jmp
add
pop
call
push
shl
add
pop
push
push
push
call
add
nop
js
add
add
lods
add
jl
mov
arpl
lret
add
mov
mov
rolb
add
add
iret
add
std
add
fcomps
add
lea
jb
lcall
fcmove
jmp
mov
lcall
rclb
stc
dec
pop
jmp
cmpl
jne
push
shl
shl
shr
pop
mov
push
lea
push
push
push
push
lea
push
call
mov
push
add
add
add
lods
add
add
loope
add
push
jp
xchg
add
lret
in
mov
cmpsl
sbbb
in
stc
cmp
out
ret
lahf
pop
push
add
add
add
mov
call
add
push
dec
add
pop
push
push
push
inc
xor
push
push
pop
add
rol
shl
sub
ror
not
sub
rol
pop
dec
lea
xor
pop
push
push
push
lea
push
lea
push
push
call
add
push
mov
mov
test
add
mov
mov
mov
add
add
pop
xchg
iret
add
add
add
out
ljmp
shll
mov
gs
add
add
add
pop
add
in
call
pushl
push
push
push
push
push
call
out
xchg
jecxz
xchg
add
jge
in
loopne
hlt
mov
mov
add
test
je
add
add
add
imull
in
jl
sbbb
stc
lret
cltd
xchg
in
add
test
push
add
add
mov
in
in
out
add
push
nop
lds
lcall
repnz
push
push
shr
sub
xor
push
or
not
add
sub
inc
add
not
sub
sub
pop
ror
shl
pop
push
push
lea
push
call
mov
cltd
push
pop
sbbb
add
add
add
jns
addb
rcll
rcll
xlat
add
imul
icebp
fildl
mov
add
loop
add
pop
cld
sub
pop
pushl
push
rol
pop
call
push
push
call
sahf
jbe
push
mov
movl
pusha
mov
mov
shrl
stos
les
add
js
add
add
add
push
add
test
add
fcoms
in
mov
push
sub
pop
call
push
push
shr
inc
dec
lea
push
and
add
rol
ror
sub
dec
rol
ror
pop
xor
sub
ror
dec
pop
push
rol
xor
lea
pop
pushl
call
push
sub
not
inc
pop
call
push
push
sub
dec
push
xor
add
sub
sub
lea
sub
inc
pop
rol
rol
pop
push
ror
shl
sub
pop
pushl
call
push
sub
ror
ror
pop
call
push
push
dec
ror
sub
push
and
add
sub
not
sub
sub
sub
pop
lea
sub
add
pop
push
not
not
xor
pop
pushl
call
push
pop
call
push
push
inc
add
shr
dec
push
xor
add
dec
add
sub
add
pop
inc
add
add
pop
push
inc
pop
pushl
push
lea
push
call
push
popf
jne
push
xchg
xchg
mov
int
add
stos
xchg
into
jns
jecxz
mov
cmp
mov
outsl
imul
clc
pushf
outsl
jl
push
push
add
add
popa
jle
test
add
loopne
popa
in
xchg
push
mov
jl
add
xchg
add
push
push
push
push
push
push
call
jmp
jb
mov
into
insb
add
testl
imul
scas
mov
lret
loope
cmc
test
add
lret
add
add
add
lcall
shrb
jl
pop
push
add
push
or
inc
add
xor
xor
sub
sub
not
pop
lea
dec
pop
push
rol
pop
pushl
push
xor
pop
call
push
shr
xor
add
pop
call
push
push
inc
push
xor
add
rol
shr
sub
rol
pop
ror
xor
not
xor
pop
push
pop
pushl
push
push
push
push
lea
push
push
push
call
cld
stos
rol
imul
add
add
jbe
arpl
mov
mov
add
fisubs
mov
add
mov
add
jbe
pop
aam
lahf
sub
pop
call
push
add
rol
pop
call
push
push
shl
push
or
inc
add
sub
add
lea
pop
dec
inc
pop
push
lea
push
push
push
push
push
push
push
push
call
add
enter
sahf
add
add
in
add
outsl
add
sarl
add
add
add
xchg
add
shll
add
sub
pop
pushl
push
push
push
call
add
xchg
add
lods
add
xchg
add
add
lock
mov
add
jecxz
mov
outsl
hlt
pusha
ficomps
jecxz
leave
add
testl
jns
push
mov
outsl
les
jb
pop
add
cmpsl
mov
add
jns
add
push
lea
push
push
call
enter
fldl
jne
imul
mov
js
jae
xchg
lods
imul
add
add
in
hlt
lcall
shrb
mov
imul
shr
push
and
add
sub
rol
rol
sub
xor
pop
sub
lea
lea
not
pop
push
push
push
push
lea
push
push
call
lahf
add
mov
add
pop
push
add
fcom
add
test
add
mov
push
mov
jl
add
add
add
ja
jnp
sub
pop
pushl
push
push
push
push
push
push
push
call
push
add
add
add
add
lods
add
flds
stc
add
jb
addr16
jmp
icebp
jae
mov
ja
pop
out
popf
xchg
add
nop
pop
jle
in
in
lcall
cmp
add
lea
push
rol
add
shl
add
pop
push
push
rol
not
pop
call
push
push
add
push
xor
add
xor
shr
sub
pop
rol
add
not
lea
pop
push
lea
push
push
push
push
push
push
push
call
push
out
stos
iret
mov
addb
sar
cmpsb
clc
push
add
test
add
add
add
cld
add
add
add
fstpl
pop
testl
shlb
movsl
push
into
jl
imul
lcall
jne
push
push
push
call
mov
add
test
add
pop
mov
leave
add
rorl
add
test
roll
jl
add
xchg
bound
mov
fs
ljmp
in
add
lcall
in
hlt
lcall
and
shl
pop
call
push
push
inc
sub
shl
shl
push
sub
add
sub
shl
shl
pop
shr
lea
pop
push
dec
sub
pop
pushl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
jo
lcall
ljmp
lock
xchg
stc
jns
int3
clc
nop
test
scas
movl
fdivr
lcall
mov
add
push
lea
push
lea
push
call
pop
push
in
jae
cmpsl
add
add
add
in
int
stos
add
pop
add
add
add
mov
push
add
mov
add
xchg
repnz
cmpsl
mov
stos
je
add
add
addb
pop
lds
add
mov
lcall
shrb
sbb
push
sub
sub
push
sub
add
shr
sub
sub
sub
ror
pop
sub
shl
pop
push
ror
sub
pop
pushl
call
push
push
push
lea
push
call
cmpsl
scas
test
lret
pusha
fisubrl
xchg
faddl
mov
add
add
fcmovne
add
add
cmpb
push
add
add
push
xchg
js
rol
aad
mov
movsb
add
add
pop
add
shrb
jae
pop
push
sub
push
or
not
add
xor
not
sub
pop
add
add
pop
push
lea
push
push
push
push
push
push
call
leave
mov
push
test
add
add
fcoms
rclb
add
in
in
lcall
jne
call
push
push
lea
sub
push
or
not
add
inc
sub
ror
shr
pop
xor
add
add
pop
push
push
inc
dec
push
and
add
not
sub
sub
xor
sub
shr
xor
shr
lea
pop
ror
pop
push
push
push
push
lea
push
call
mov
hlt
push
add
popl
push
stos
pop
lods
imul
add
test
pop
xchg
mov
add
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
jmp
add
add
ljmp
leave
js
aad
call
pop
pop
loopne
add
add
fimuls
sti
add
add
xchg
out
out
xchg
ficoms
out
test
mov
add
xchg
std
add
add
je
call
pop
dec
jne
push
push
add
push
sub
add
rol
add
dec
rol
sub
sub
rol
rol
pop
not
pop
push
sub
pop
pushl
push
sub
ror
lea
add
pop
call
lea
push
push
lea
push
call
add
xchg
add
add
add
fiaddl
add
movsl
add
stos
ror
push
leave
loope
xchg
add
add
jbe
sub
pop
push
push
sub
add
pop
push
push
lea
push
push
push
call
add
lret
xlat
mov
xchg
enter
fstpl
add
or
mov
test
lret
add
cld
loopne
add
lock
jmp
jl
clc
xchg
out
scas
jge
not
out
outsl
add
pop
add
mov
add
add
jp
addr16
enter
add
mov
lock
lcall
add
push
push
lea
push
push
push
push
push
push
call
pusha
aam
add
mov
add
xchg
lods
add
add
cmpsl
leave
add
xchg
addl
pop
sahf
add
push
outsl
push
xlat
add
lcall
rclb
call
push
push
not
ror
push
xor
add
shl
lea
dec
sub
pop
sub
sub
pop
push
sub
rol
pop
pushl
call
push
lea
shr
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
out
fiaddl
add
fldl
jb
jnp
movl
shrb
arpl
mov
add
jo
add
fadds
add
add
mov
mov
cld
jns
add
flds
add
add
add
lds
add
lcall
sarb
push
push
inc
rol
ror
push
xor
add
add
dec
dec
sub
add
sub
pop
not
sub
pop
push
lea
not
not
pop
pushl
push
sub
dec
pop
call
push
sub
pop
lea
push
push
shl
pop
push
push
pop
push
push
shr
shl
lea
pop
push
call
push
push
lea
push
call
je
into
add
lahf
xlat
add
add
fldenv
xchg
in
jo
add
outsl
les
xchg
fdivl
popf
mov
mov
sahf
add
hlt
lcall
pushf
and
ljmp
jl
adcb
lock
or
not
add
sub
ror
dec
pop
sub
pop
push
rol
dec
pop
pushl
push
shr
pop
call
push
push
add
xor
add
pop
call
push
push
sub
push
xor
add
add
sub
sub
add
pop
shl
pop
push
sub
pop
pushl
call
push
not
not
ror
pop
call
push
add
pop
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
fbld
add
gs
add
add
pop
aad
js
add
add
test
add
add
pushf
and
ljmp
stos
icebp
mov
add
lea
not
push
sub
add
add
not
ror
sub
shl
shr
pop
ror
sub
pop
push
push
lea
push
push
push
push
push
call
push
add
add
add
add
add
add
pop
jmp
add
jge
pop
push
loope
cmpsl
add
out
arpl
add
fiadds
jne
push
push
lea
push
push
push
push
push
lea
push
call
popa
les
xchg
cmc
xchg
add
jl
pop
ret
nop
popa
imul
ljmp
stc
add
roll
jns
add
mov
pop
jl
add
insb
repnz
lea
xchg
add
jb
sub
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
pop
lods
aam
into
jge
add
mov
pop
add
add
add
add
add
jmp
add
add
lds
add
in
loopne
lcall
add
push
push
push
push
push
push
push
push
lea
push
call
scas
enter
add
add
mov
mulb
add
pusha
add
divb
test
add
fildl
add
js
add
sub
pop
push
push
push
call
jecxz
push
icebp
add
add
add
add
mov
add
mov
push
add
insb
jmp
pusha
add
add
jno
add
add
add
pop
add
ja
xchg
add
push
add
add
mov
cmpsb
roll
sub
pop
push
push
inc
lea
pop
pushl
push
push
sub
push
xor
add
sub
sub
ror
ror
sub
pop
ror
rol
pop
push
shl
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
fdivrs
lret
rolb
in
add
movsb
movl
addl
mov
cmpsb
add
push
push
cmc
mov
lret
add
add
mov
add
fwait
add
jno
add
add
push
add
sub
pop
call
push
push
inc
dec
push
or
inc
add
ror
sub
shl
pop
rol
lea
pop
push
push
push
push
push
push
lea
push
call
mov
scas
addl
xlat
imul
in
lods
pop
add
idiv
add
xchg
xchg
scas
add
add
add
mov
ror
lcall
add
popf
add
jne
push
push
push
push
push
push
push
push
lea
push
push
call
add
divl
push
add
add
mov
xchg
mov
mov
add
or
add
add
repnz
xchg
push
add
add
add
xchg
aam
fdivrl
into
pop
add
add
add
lcall
call
push
push
push
lea
push
push
push
call
jecxz
test
into
cmc
leave
push
imul
add
popf
add
add
cld
pop
add
lods
pop
mov
pop
mov
out
add
mov
add
stos
push
mov
call
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
fidivrl
xchg
push
add
mov
mov
add
xchg
jo
fldl
mov
add
test
repnz
add
out
add
mov
push
xchg
in
fcomps
shrb
add
lea
inc
xor
push
or
inc
add
add
inc
ror
sub
pop
shr
pop
push
add
pop
pushl
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
add
add
add
add
rolb
cltd
add
test
mov
mov
mov
add
stos
movsl
in
add
add
add
add
add
in
add
pop
jecxz
movsl
ljmp
fdivr
lcall
rclb
xor
rol
pop
jmp
push
push
lea
push
push
push
push
push
push
call
mov
loopne
add
push
add
mov
add
rolb
lcall
fcompl
push
add
add
add
clc
add
add
jecxz
add
add
lcall
pushl
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
iret
fldl
fildl
aad
js
scas
add
jl
mov
pushf
in
aam
mov
ja
add
push
jbe
add
add
add
add
push
mov
jecxz
add
clc
add
into
xorl
lcall
mov
push
rol
pop
jmp
push
push
rol
push
or
inc
add
xor
dec
dec
add
sub
xor
shl
pop
rol
shr
pop
push
dec
shr
add
pop
pushl
push
push
push
push
push
push
push
push
call
addb
add
repnz
add
add
add
cwtl
faddl
add
cmc
add
xorb
pusha
shl
pushf
add
add
pop
popa
push
add
arpl
jns
in
lods
add
lods
in
push
add
add
lcall
xor
add
push
push
rol
rol
pop
call
push
push
shl
rol
push
or
inc
add
rol
sub
dec
sub
pop
add
ror
pop
push
add
shl
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
sahf
add
add
add
icebp
mov
pushf
add
ja
add
out
mov
pop
call
push
shl
sub
sub
pop
push
push
ror
not
ror
pop
call
push
push
push
push
lea
push
call
push
add
into
pop
mov
flds
add
push
add
cld
add
add
fidivrl
add
int3
divl
jl
mov
add
icebp
test
add
mov
pop
mov
lock
hlt
mov
mov
gs
mov
js
lret
in
in
lcall
push
shl
ror
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
les
push
lret
lock
add
xchg
pop
add
add
sahf
add
mov
icebp
add
fs
push
cltd
mov
out
add
mov
add
mov
add
add
add
fdivr
lcall
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
fwait
lret
add
push
add
rcrl
mov
jb
fsubrl
mov
loopne
jne
add
add
jbe
lret
cmpsb
int3
add
add
pop
pop
push
xor
dec
pop
pop
push
push
push
lea
push
call
insb
push
in
add
cltd
pop
rcr
mov
addb
jmp
clc
pop
add
les
mov
add
ffree
mov
shll
add
push
add
mov
xor
push
sub
pop
inc
push
lea
push
push
lea
push
lea
push
lea
push
call
add
or
fcompl
test
test
imul
cltd
test
pop
add
add
incb
lcall
or
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
popa
sbbl
push
push
lcall
fisubl
add
add
clc
add
hlt
jnp
mov
add
aam
add
cmpsb
mov
mov
in
fcompl
push
lea
pop
ret
push
push
push
push
push
push
call
mov
cmpsb
loopne
add
add
ffree
add
in
add
ljmp
test
loop
addl
lcall
in
push
push
lea
push
call
bound
add
movsb
add
mov
add
adc
mov
fidivs
sahf
pop
jp
fsubl
jl
lods
popl
mov
push
gs
repnz
pushf
mov
lcall
jge
add
test
add
mov
push
push
push
push
push
push
call
mov
nop
add
add
add
jnp
out
xorb
out
xchg
iret
jge
add
push
leave
add
add
fs
add
arpl
jnp
add
add
add
fisubl
cli
divb
push
xchg
repnz
add
pop
mov
sub
pop
jmp
push
sub
pop
mov
and
push
push
push
push
push
call
roll
xchg
repnz
add
add
add
in
lahf
in
mov
cmpsl
loope
outsl
add
loope
add
add
testb
pushf
popa
mov
mov
fadds
enter
add
fwait
add
fwait
jle
pop
testb
fs
pop
pop
mov
add
add
lcall
leave
push
lea
push
push
push
call
pop
add
add
add
fsubs
mov
add
cmpsl
icebp
add
add
add
add
add
push
movsb
push
add
fildl
add
add
insb
add
add
jne
test
lcall
push
rorl
add
push
push
push
call
xchg
jno
out
add
hlt
add
add
add
xchg
jmp
add
add
lahf
and
add
lret
add
mov
xor
add
enter
les
add
mov
add
cmc
test
data16
add
pop
pop
add
lcall
dec
call
ret
ret
pop
dec
push
rol
pop
sub
push
add
pop
jmp
push
ror
sub
add
pop
sub
pushl
push
xor
pop
pop
push
inc
pop
sub
cmp
jne
push
push
lea
push
push
push
push
call
add
cld
pop
nop
add
popf
add
add
add
sarl
add
add
int
sahf
pusha
add
clc
stc
fs
add
jl
loopne
mov
add
rolb
add
add
mov
add
jns
add
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
add
push
jbe
add
add
add
cltd
push
add
add
add
repnz
mov
mov
mov
jne
mov
add
add
pop
lock
int
mov
outsl
stc
insb
add
mov
add
add
leave
rcr
add
add
jmp
in
loopne
lea
sub
push
rol
lea
add
pop
mov
shr
push
sub
lea
pop
add
sub
push
add
xor
shl
pop
pushl
push
pop
pop
push
not
sub
pop
shr
push
push
push
lea
push
push
lea
push
push
call
add
add
add
add
add
add
add
xchg
add
xchg
mov
add
add
popf
add
xchg
cmpsl
add
lea
add
jmp
add
jo
add
test
lret
add
add
std
add
add
cmc
add
hlt
sub
pop
and
push
lea
pop
sub
cmp
jne
push
shl
sub
lea
pop
leave
ret
push
lea
xor
pop
push
push
push
lea
push
push
push
push
call
pop
add
add
add
add
lock
add
ljmp
in
mov
enter
add
push
add
fs
mov
les
add
lods
sub
pop
mov
add
push
shl
pop
push
push
push
lea
not
xor
pop
push
push
push
lea
push
push
lea
push
call
add
hlt
mov
add
std
in
add
in
add
add
clc
add
pop
add
hlt
arpl
push
cltd
ffree
cmc
add
gs
add
loopne
add
add
add
jp
add
add
movl
mov
push
lea
push
push
call
mov
push
add
fnstenv
mov
iret
add
add
xchg
add
add
in
incb
xchg
add
add
add
sub
pop
mov
push
push
push
lea
push
push
call
pusha
add
jb
jge
add
xlat
fdivp
mov
in
pushf
lea
add
push
fldl
add
xchg
pop
add
scas
mov
mov
add
movsb
add
add
add
lcall
add
add
js
sub
pop
lea
push
rol
dec
pop
sub
push
push
push
push
lea
push
push
call
add
xchg
add
add
add
gs
cmpsl
fildl
add
out
hlt
lret
push
add
mov
add
loope
pop
mov
add
adc
or
dec
add
add
testb
mov
add
ror
lods
lcall
fs
add
fiaddl
add
insb
loopne
in
add
sahf
add
add
add
loopne
out
xchg
mov
popw
mov
jb
out
add
add
lcall
ljmp
mov
push
push
push
lea
push
lea
push
push
call
mov
add
add
in
add
mov
add
call
mov
xchg
fnstenv
lods
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
jle
push
add
mov
out
test
out
mov
popa
test
mov
add
test
add
mov
push
fiadds
add
imul
add
incb
xchg
pop
test
add
add
cltd
sub
pop
add
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
jnp
mov
jb
add
xchg
fiaddl
fiaddl
pop
add
add
mov
cmpsl
add
add
lock
call
mov
xchg
fdivr
lcall
jnp
push
dec
ror
pop
add
xor
push
dec
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
add
xorl
add
pop
movsb
data16
push
in
push
push
roll
add
out
test
loop
fcmovnu
in
add
add
mov
add
in
sti
xchg
add
add
add
add
lcall
loopne
rol
push
sub
add
pop
rol
push
lea
push
push
push
push
push
call
add
pop
add
add
addb
add
popa
mov
add
add
add
pop
ja
add
add
add
pop
xchg
add
xchg
add
sti
movb
enter
popf
mov
pop
xor
inc
push
push
call
js
test
fs
add
add
mov
add
mov
fwait
add
add
mov
movsl
add
add
hlt
mov
xchg
sarl
cli
add
push
fidivs
add
xchg
add
jmp
cmpsl
mull
jno
sti
sub
pop
cmpb
jne
push
push
push
call
enter
add
imul
iret
out
fwait
jle
test
add
jne
cmpsl
add
add
int
cwtl
add
add
jb
movsb
add
add
testb
add
mov
lahf
repnz
xchg
add
aam
xchg
stos
add
in
hlt
pop
add
push
push
push
push
push
push
call
adcl
add
add
je
popf
push
cld
mov
fwait
push
insb
mov
add
add
add
add
iret
lcall
xchg
push
add
mov
in
call
cmp
je
push
push
push
push
push
call
cmpsl
popf
divl
jns
test
jno
add
stos
mov
xchg
jb
fcompl
add
les
add
add
add
mov
std
mov
push
add
lods
mov
adcb
cmpsl
movsl
push
enter
jne
pop
add
add
sub
pop
add
push
push
push
push
push
lea
push
call
add
xchg
add
jno
push
flds
outsl
mov
add
leave
addr16
jecxz
in
aad
int
test
lods
add
mov
loop
insb
in
in
add
lea
lcall
jnp
add
test
std
call
xor
push
add
sub
pop
pop
push
dec
pop
pop
push
add
shr
pop
pop
push
push
lea
push
call
mov
int3
add
mov
add
add
fs
jl
je
rol
arpl
mov
add
add
rorb
add
add
ffree
mov
sub
pop
pop
push
sub
not
inc
pop
pop
push
dec
not
dec
dec
pop
leave
ret
push
push
push
push
push
push
push
lea
push
call
test
add
jb
mov
mov
jo
push
jp
xchg
add
jns
add
add
nop
add
add
add
movsl
out
in
xchg
xchg
data16
add
pop
add
push
adc
sti
lea
add
pop
add
push
add
pop
mov
push
shl
add
ror
pop
push
push
rol
pop
mulw
push
inc
pop
pop
call
push
add
ror
dec
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
roll
mov
lock
out
scas
mov
xchg
sahf
add
add
idivl
mov
mov
mov
add
add
add
add
mov
xchg
add
add
add
in
fcompl
jl
call
lea
push
push
push
push
call
cli
pop
roll
add
add
outsl
pop
xorl
add
scas
shl
jp
loopne
xchg
arpl
add
pop
add
add
xchg
in
roll
add
mov
add
push
in
call
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
pop
dec
loop
add
mov
add
add
movsl
mov
add
add
add
stos
add
roll
faddl
pop
add
jl
xchg
mov
mov
add
cmc
add
jo
xlat
mov
popf
add
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
in
mov
add
in
test
jmp
scas
clc
clc
stos
jmp
iret
add
fiaddl
add
in
lret
add
lret
jle
add
in
add
clc
xchg
add
lret
add
lods
add
int3
roll
in
test
in
fcomps
push
shl
pop
pop
push
ror
pop
leave
push
push
call
add
lods
out
out
add
add
add
test
cmpb
sti
lahf
loop
out
add
add
bound
mov
xchg
push
add
clc
pop
ret
push
push
inc
pop
mov
push
push
push
push
push
call
add
xchg
pop
jp
add
mov
add
jbe
les
add
repnz
mov
mov
sti
scas
mov
add
add
push
mov
add
lds
add
jmp
jmp
add
add
mov
sahf
add
xchg
jo
add
lods
xlat
sti
pusha
add
bound
hlt
push
lea
push
push
lea
push
push
lea
push
push
call
add
movb
add
add
jbe
incb
add
mov
jge
pop
push
add
fiaddl
pop
add
add
imul
add
pop
add
movsl
add
add
in
lcall
push
push
call
mov
add
push
add
out
add
in
fmuls
add
add
ficompl
js
add
push
push
push
push
push
push
call
les
mov
push
add
jl
add
add
add
add
add
push
add
add
add
add
in
cmc
mov
add
add
add
add
mov
add
sub
pop
push
push
push
shl
not
pop
mov
push
shr
shr
inc
pop
push
push
push
call
mov
mov
push
movsl
ljmp
push
jl
movb
sti
add
fsts
push
mull
stos
test
xchg
call
xchg
in
repnz
pop
push
nop
lret
add
add
in
add
add
add
lcall
push
add
rol
pop
lea
sub
push
push
push
push
call
add
fldl
inc
lock
add
enter
add
mov
stos
add
add
add
xchg
add
divl
lea
stc
loop
add
popf
imul
call
add
add
ja
lret
add
add
aad
nop
hlt
outsl
sub
pop
mov
shr
push
ror
not
pop
add
mov
push
push
push
push
push
lea
push
push
call
xchg
add
fiadds
add
jb
fst
movsl
sti
mov
lret
sahf
addb
add
add
push
add
add
add
push
push
fld
add
add
fsts
xorl
push
push
lea
push
lea
push
push
push
call
or
lea
add
mov
add
lds
push
pop
lret
xchg
scas
add
mov
push
mov
lcall
jae
push
push
push
call
std
push
stc
xchg
jae
arpl
add
pop
stc
clc
add
roll
add
add
add
add
add
xchg
add
add
jmp
xchg
sti
mov
add
push
add
add
jae
add
add
push
test
add
movb
roll
jb
sub
pop
popl
push
add
lea
shr
pop
mov
push
push
push
lea
push
push
lea
push
call
cli
lock
ret
fstl
in
pusha
add
push
movb
pop
cmpsb
add
mov
popf
xchg
shrl
add
mov
pop
ret
ficompl
mov
xchg
add
mov
rcl
add
fiaddl
addb
mov
add
add
push
inc
add
rol
pop
xor
lea
push
sub
pop
mov
push
add
sub
pop
add
xor
push
push
lea
push
push
call
add
add
test
addb
push
add
lods
add
addr16
add
fs
lahf
add
add
imul
xchg
orl
aad
xchg
scas
add
lcall
rolb
push
push
push
push
push
call
js
mov
add
popa
add
nop
cmpsl
add
addr16
add
in
les
stos
add
popl
add
add
movb
add
add
add
push
add
add
add
cwtl
sub
pop
nop
nop
push
push
push
call
jmp
add
mov
add
std
add
add
mov
add
ja
add
out
lret
push
push
add
add
add
add
cmpsl
loop
cmc
nop
jo
in
hlt
lcall
add
pop
nop
inc
push
push
lea
push
lea
push
push
push
push
call
add
add
mov
scas
rcrl
mov
imulb
enter
into
mov
jo
faddl
add
add
cmc
ret
jle
xchg
add
test
lcall
push
pop
nop
push
not
ror
lea
ror
pop
cmpb
jne
push
push
push
push
call
stc
cmc
rolb
xlat
push
rcl
add
aad
add
add
jl
vpslld
filds
xchg
add
mov
pop
in
mov
add
cmpsl
mov
mov
xchg
rol
fdivl
stc
imul
add
test
add
add
js
lock
add
add
add
js
mov
stos
sub
pop
add
nop
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
xchg
add
add
lods
jbe
add
xchg
flds
test
xchg
add
mov
add
xchg
movsl
xchg
movsl
add
sahf
push
data16
int
add
stc
push
sbbb
add
xchg
add
sub
pop
nop
push
push
push
push
call
jo
cld
mov
shl
add
add
jecxz
add
add
out
shrb
out
cwtl
int3
push
fs
popf
sub
pop
cmp
je
nop
push
lea
push
push
lea
push
call
mov
add
scas
movsb
add
pop
mov
add
add
add
add
aam
jb
repnz
adc
jmp
outsl
add
add
nop
mov
testb
pop
pop
sub
pop
nop
push
lea
push
lea
push
push
push
call
mov
add
add
pusha
add
jb
add
jmp
add
je
movb
add
addb
stc
add
pop
add
xchg
add
pop
inc
push
ror
add
pop
nop
push
push
push
push
push
push
push
push
call
jo
add
icebp
add
push
scas
aam
add
add
out
push
add
add
js
add
mov
add
scas
roll
fwait
in
jnp
add
fldl
rcrb
cwtl
cwtl
adcl
lods
test
nop
mov
loopne
nop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
jp
cld
add
add
add
add
mov
pop
add
add
out
hlt
add
pop
add
add
mov
sub
pop
cmp
jb
xor
push
push
push
push
push
call
in
add
jb
push
mov
add
ret
add
mov
add
add
addl
mov
add
leave
jmp
js
add
testb
add
test
mov
add
repnz
into
in
jo
ja
mov
mov
in
in
lcall
in
add
mov
push
dec
pop
add
push
xor
pop
movzwl
push
rol
lea
inc
add
pop
mov
push
push
lea
push
lea
push
push
call
mov
xchg
shl
add
add
popf
add
lcall
xchg
push
cmc
mov
enter
push
add
add
add
jmp
jp
jo
mov
xchg
add
add
mov
lcall
rcll
sbb
dec
hlt
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
ret
cwtl
mov
push
add
add
add
lds
mov
xchg
jl
addr16
add
add
leave
add
addl
add
xlat
mov
add
roll
mov
loopne
xor
push
inc
add
pop
xor
push
push
call
xchg
loop
jnp
add
add
add
xchg
cmpsl
xchg
into
add
rolb
adcl
push
add
roll
add
xchg
lahf
add
add
push
mov
push
gs
movb
fwait
sahf
add
clc
lcall
loope
push
pop
xor
push
push
lea
push
push
lea
push
lea
push
call
add
test
stc
push
add
add
mov
adc
shr
iret
pop
pop
fdivr
pop
add
fildl
mov
pop
ljmp
loopne
in
call
push
xor
pop
xor
shl
push
push
lea
push
push
call
add
addl
out
xlat
jb
add
jnp
aad
pop
std
add
clc
data16
mov
add
cmpsl
add
add
add
push
add
lds
jp
add
repnz
add
stos
sti
add
rolb
add
pop
mov
push
mov
in
lock
lcall
or
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
out
add
fwait
clc
mov
mov
movsb
fdivs
add
scas
add
add
add
test
std
add
stos
add
repnz
mov
cli
add
sub
pop
mov
add
push
push
push
lea
push
call
add
add
push
hlt
xchg
add
add
add
add
add
arpl
add
add
sub
pop
pop
pop
push
push
push
push
push
push
call
add
jge
add
lock
add
gs
add
mov
fwait
mov
into
add
jmp
sti
add
je
add
cmc
add
stos
mov
mov
testb
call
xor
pop
pop
leave
push
shr
pop
ret
push
ror
pop
push
push
xor
add
sub
pop
mov
push
rol
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
insb
mov
add
jle
jb
pop
pop
stc
aad
jge
in
add
xchg
add
into
add
testl
loopne
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
pop
add
add
jle
add
in
pop
mov
add
add
imul
jl
mul
xchg
mov
add
mov
imul
jo
fadds
mov
xlat
fbld
jl
sub
pop
mov
push
add
pop
mov
mov
push
rol
shl
pop
test
je
push
add
pop
mov
test
je
push
sub
pop
mov
mov
push
push
call
add
add
out
test
ljmp
mov
add
add
pop
add
add
incb
popl
popa
add
fisubrs
sub
pop
mov
push
lea
push
push
push
call
mov
add
out
add
add
mov
sarb
add
aad
add
add
add
mov
mov
fwait
add
add
cld
rcr
add
add
jo
jmp
jo
fistl
add
jl
sub
pop
inc
cmp
je
push
push
push
push
lea
push
push
call
add
add
jb
add
outsl
cmc
xchg
sahf
add
movsb
loop
out
pop
stos
lods
jnp
cwtl
outsl
cld
mov
stos
add
in
mov
xchg
add
test
add
xchg
add
loopne
cld
jns
mov
fs
add
add
add
sub
pop
test
je
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
hlt
imulb
aad
fistpll
add
mov
fldt
add
jmp
fwait
add
pop
ret
nop
test
movsl
loope
add
add
roll
push
fdivr
xchg
add
mov
xchg
rolb
add
add
add
sub
pop
mov
inc
push
sub
add
ror
pop
cmp
je
test
jne
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
mov
icebp
add
ja
popf
add
popa
push
add
add
add
add
addw
xlat
lcall
adc
mov
cwtl
pop
out
clc
les
fldl
add
mov
sub
pop
xor
push
pop
pop
pop
push
lea
push
push
push
call
jb
add
jno
fcmovne
shll
add
std
add
rclb
jb
add
in
call
js
add
lret
add
add
push
jmp
ror
ja
add
pushf
pop
rclb
xchg
enter
insb
mov
jbe
add
shll
xor
add
rolb
sub
pop
pop
push
not
sub
shr
xor
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
lcall
add
rcrb
xchg
pop
in
std
mov
mov
add
fldl
jno
mov
ret
add
mov
jge
mov
add
lods
ja
les
add
add
scas
sub
pop
leave
push
lea
push
push
push
push
push
push
call
pusha
add
pop
mov
lds
add
add
les
jbe
enter
add
ljmp
lcall
or
push
ror
sub
lea
pop
mov
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
jbe
add
jge
add
cli
xchg
push
out
add
mov
movsl
add
addl
movsl
idiv
add
add
mov
aam
clc
add
add
mov
add
mov
in
loopne
inc
push
add
sub
pop
cmp
jne
lea
push
add
pop
mov
push
rol
sub
inc
pop
test
je
push
rol
not
pop
mov
push
push
push
push
push
lea
push
push
push
call
sbbl
lret
out
rolb
loopne
leave
testl
jae
ficomps
int3
jge
add
pop
add
add
push
nop
mov
leave
movsl
pop
mov
addl
add
add
sub
pop
add
cmp
jne
push
shl
rol
dec
shr
pop
mov
test
je
push
push
push
push
push
push
call
std
push
mov
add
testb
add
add
popa
add
call
aam
add
loope
mov
add
pop
mov
mov
sub
pop
mov
push
not
xor
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
cli
add
pop
lret
test
jecxz
lds
fcmovb
add
lea
add
add
xlat
add
sub
pop
cmp
je
jmp
push
shl
sub
lea
pop
xor
push
shr
pop
pop
push
push
push
push
push
push
push
push
push
push
call
mov
mov
int3
add
add
bound
clc
jnp
add
jnp
leave
pop
pop
push
add
icebp
into
rolb
aad
xchg
add
pop
repnz
push
add
add
jnp
scas
pop
add
mov
mov
sahf
lods
sti
out
xchg
mov
lcall
push
push
call
jo
lret
push
popl
leave
test
into
add
int
scas
add
iret
add
add
pop
popf
jecxz
push
out
stos
loope
int
add
add
sub
pop
pop
push
add
ror
pop
pop
push
lea
push
push
push
push
push
call
add
xlat
add
add
push
mov
pusha
mov
add
leave
movl
add
add
xchg
popa
mov
add
add
scas
enter
ret
add
mov
mov
imul
sub
pop
leave
push
lea
push
push
lea
push
lea
push
push
push
push
call
je
push
test
add
hlt
add
jl
add
flds
mov
add
out
aam
jmp
sti
add
jne
lcall
push
sub
pop
ret
push
push
push
push
call
add
add
add
aam
add
xchg
mov
jle
scas
cmpsb
enter
addb
pop
add
mov
add
scas
in
add
add
add
js
test
add
sub
pop
lea
pop
push
push
push
push
push
push
push
push
push
push
call
xchg
add
cmc
stc
data16
cwtl
notb
ljmp
add
xchg
into
add
in
popa
add
mov
movsb
sub
pop
pop
pop
push
xor
dec
sub
not
pop
pop
push
push
push
call
ficoml
inc
ret
rcrl
push
add
add
jo
add
push
add
add
sahf
cwtl
lahf
add
add
pusha
mov
add
leave
push
pop
ret
mov
push
lea
push
push
push
push
call
mov
add
jp
fadds
jge
xlat
stos
rcl
add
add
cmc
add
imul
push
rcl
cmc
cmpb
pop
xlat
outsl
nop
outsw
add
mov
jmp
in
jno
into
add
add
add
sub
pop
pop
pop
push
push
push
lea
push
call
add
mov
mov
add
sti
add
lahf
loop
add
add
add
add
cli
jno
push
lods
std
incb
cli
mov
add
bound
out
cltd
xchg
lock
add
mov
mov
shrl
mov
add
add
add
add
mov
push
inc
shr
pop
pop
push
sub
shl
pop
leave
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
fiaddl
xchg
cmpsb
add
int3
lret
subl
std
add
ljmp
hlt
les
add
aam
lods
add
in
ret
mov
add
add
add
in
push
add
add
jl
int3
mov
push
xchg
push
sub
pop
ret
xor
cmp
push
inc
cmp
xor
adc
and
adc
inc
cmp
repnz
cmp
sub
popa
cmp
xor
adc
add
add
sub
jp
cli
cmc
pop
das
mov
in
push
inc
jnp
mov
sbb
or
cwtl
pop
lcall
loope
lods
je
enter
dec
rcr
jle
dec
icebp
sub
add
hlt
add
and
hlt
and
jno
jae
fs
jmp
push
jae
iret
and
xchg
inc
shrl
mov
pop
jmp
out
mov
and
sbb
xor
sub
insb
push
clc
jmp
out
loop
lahf
push
cmp
or
xchg
cli
lods
push
mov
sahf
aad
popa
push
dec
fsqrt
add
fs
int
cmp
enter
jns
fimuls
jae
sub
add
adc
pop
push
jno
mov
fimuls
fiadds
lock
sbb
xlat
inc
sub
sbb
ret
das
roll
mov
pop
clc
jbe
out
dec
shll
cmp
iret
dec
add
push
fdivrl
mov
pop
testl
mov
mov
push
dec
addr16
xchg
add
clc
in
movsb
sbb
subl
enter
mov
cld
mov
mov
loopne
outsl
ds
in
mov
ss
fcomps
addr16
in
adc
pusha
dec
mov
add
std
xchg
out
mov
inc
and
lock
icebp
cld
jle
add
sbb
add
scas
sub
or
sbb
pop
pop
jp
cwtl
jno
popf
or
xchg
adc
and
or
insl
push
out
clc
push
and
or
or
sub
fisubs
rol
xor
fsts
out
cmpsl
mov
insb
add
jno
sub
ret
clc
jo
test
jge
fadd
or
testb
adc
push
sub
test
cmp
movb
bound
cmpl
imull
pop
pop
inc
jns
push
ds
cmp
add
add
lds
mov
loop
or
jle
fildl
icebp
sti
imul
cmc
sub
shr
imull
bound
fcom
fadd
inc
jge
cmp
iret
das
cld
adc
iret
jl
in
hlt
jecxz
push
push
sub
addl
adc
int
hlt
pop
js
ficoms
pop
out
push
mov
pop
mov
jne
insl
pop
test
jbe
jge
aam
cmp
jecxz
les
jle
pop
cmp
outsl
sarl
cltd
xor
out
std
mov
andl
insl
mov
sub
mov
adc
jb
mov
in
adc
jp
mov
negl
dec
adc
scas
push
sbb
dec
or
pusha
or
and
cmp
imul
gs
adc
xor
pop
test
dec
addr16
pop
je
repnz
and
add
gs
sub
xor
xor
xchg
clc
add
cmp
push
push
rol
inc
add
mulb
dec
mov
into
mov
mov
test
bound
or
daa
add
jge
xor
lds
pop
dec
pop
out
aaa
cmp
loope
pop
fsub
ds
push
add
sub
ds
dec
push
scas
dec
jo
or
test
or
pop
outsb
lret
push
imulb
cltd
cmp
add
cld
mov
jle
rcl
bound
push
ret
mov
push
adc
outsl
cmp
pop
sbb
mov
enter
adc
and
pop
and
pop
push
inc
dec
jnp
loope
fs
push
inc
mov
push
std
push
pushf
arpl
icebp
sub
lea
inc
jg
lds
shlb
jp
sub
xor
dec
dec
jecxz
aam
fcmovb
adc
xchg
mov
stc
and
pop
mov
inc
popa
mov
pop
jb
dec
in
rep
cmp
cmp
push
test
inc
inc
movb
xor
imul
sub
out
inc
xor
ja
iret
sub
dec
adcb
es
adc
stc
mov
shl
cmp
xchg
sub
orl
scas
adc
or
push
xor
sbbb
xor
xchg
or
xchg
xchg
nop
inc
into
pop
call
add
sbbl
xor
popa
pusha
hlt
xor
ror
mov
lds
in
int3
aad
dec
or
popf
imul
cltd
outsl
addr16
repnz
push
sub
stos
insl
mov
sbb
loop
out
out
loop
enter
xor
inc
dec
jmp
out
add
mov
insb
leave
mov
sub
pop
ret
xchg
gs
mov
mov
pop
in
imul
inc
xor
mov
inc
jo
or
jbe
in
not
and
xor
jae
adc
mov
arpl
mov
add
nop
pop
dec
mov
mov
sub
orl
mov
jb
cwtl
jp
es
aam
dec
addb
inc
outsl
jmp
test
mov
push
or
stos
dec
pop
cmp
stos
popf
cmp
out
lret
pusha
xchg
mov
mov
fs
inc
push
mov
iret
es
test
lea
repnz
inc
cmc
adc
js
fstp
cld
repnz
pop
in
dec
imul
mov
push
push
xchg
dec
dec
popf
jae
outsl
clc
fwait
test
inc
jmp
hlt
mov
jno
scas
movsl
cwtl
jmp
dec
push
inc
mov
mov
lock
pop
mov
aad
sti
adc
xor
lock
movsl
sbb
mov
pop
in
push
fistpll
movsb
sbb
sub
dec
cmpsl
jge
shlb
mov
testb
psubusb
fstl
loop
sbb
mov
insb
shlb
aad
push
popf
divl
mov
ret
out
xchg
pop
inc
call
pop
adc
jno
mov
push
sbb
mov
sub
adc
inc
jo
push
popf
and
mov
push
ficomps
dec
jnp
and
call
xchg
jb
and
sub
test
and
adc
fnstsw
or
jae
xchg
pop
dec
lahf
dec
bound
ds
sub
cmp
je
xchg
pop
imul
sbb
adc
push
fxch
bound
ljmp
dec
jns
pop
fimuls
data16
test
jecxz
or
in
int
and
fwait
push
fs
jnp
andb
and
push
add
into
mov
das
mov
scas
pusha
cmc
and
cmp
mov
iret
jp
mov
sbb
sub
fcmovnu
outsb
push
fmuls
xchg
sar
cmp
dec
ret
bound
sbb
pop
pop
xor
cld
cmpl
xchg
inc
dec
lods
jl
adc
rclb
inc
cwtl
add
mov
sti
enter
dec
mov
xchg
shlb
loop
xlat
and
into
sbb
lcall
bnd
in
xchg
sahf
push
clc
fisubs
adc
aaa
mov
cmp
out
dec
mov
add
andb
addr16
jns
inc
pop
push
jne
jle
sub
lcall
or
jns
sbb
fwait
jge
push
push
mov
adc
xchg
mov
xchg
in
nop
sub
sub
cwtl
arpl
add
jge
sub
xchg
clc
ret
out
mov
jb
dec
sub
mov
lods
mov
fldl
cmp
add
popf
cmpsl
sbb
jo
pop
pop
adc
lods
outsl
fucomip
lods
sbbb
subb
fsubl
cmpsl
jmp
dec
dec
aam
fisttpll
leave
lods
lret
and
cwtl
inc
div
pop
jg
insb
jne
sbb
or
sbb
cmpsl
xchg
dec
pop
out
sbb
ds
mov
fmul
adc
es
adc
imul
in
dec
pop
jmp
xor
mov
nop
mov
xchg
rcr
cwtl
es
dec
cwtl
inc
sbbl
sub
sti
mov
popf
push
inc
mov
inc
int3
inc
cmpsb
push
je
lds
jg
imul
lret
pop
mov
cmp
sub
lret
ss
mov
cmp
ljmp
dec
test
and
mov
loopne
mov
mov
and
mov
fmul
data16
xor
mov
dec
cmpsb
lods
lds
xchg
inc
mov
scas
out
pushf
xchg
aas
lret
or
int
jns
adc
in
rclb
and
xor
out
aaa
test
pushf
inc
or
data16
popa
sbb
inc
push
icebp
mov
push
mov
adc
out
sub
xor
pop
loop
xchg
int3
xchg
cld
or
shl
xchg
and
jo
or
fldt
pushf
into
sub
test
jbe
sbbb
inc
sub
inc
adc
test
insl
dec
pop
lret
data16
jmp
fdivr
inc
in
jo
movb
xor
push
lods
pushf
fcoml
xchg
rolb
cli
int
in
mov
lret
bound
out
xor
sub
dec
xchg
lds
mov
mov
lret
push
jg
js
add
xchg
mov
popa
int
mov
jl
mov
dec
or
imul
adc
add
add
add
mov
mov
mov
mov
test
rclb
fisttpl
cmp
cmc
arpl
testl
sub
lods
movsb
inc
and
movsl
push
pop
in
dec
jle
mov
mov
mov
adc
call
add
mov
adc
nop
mov
jg
imul
loope
aad
mov
cld
rcr
test
jno
repnz
fdivs
inc
xchg
pushf
out
push
pushf
adc
sbbl
xchg
test
pusha
mov
lret
mul
dec
rep
jge
jbe
sbb
or
int3
notb
jbe
int3
xor
pushf
push
push
jae
mov
mov
shl
lds
pop
pop
mov
jae
test
add
jb
jge
xor
jne
lret
xchg
push
dec
mov
mov
enter
out
incl
xchg
popa
xorl
push
adc
inc
loopne
xor
sbb
dec
jle
out
cmpsb
add
nop
lahf
lret
mov
jnp
cwtl
xor
inc
leave
das
jmp
fbld
aad
push
std
dec
inc
or
outsb
movsb
popf
arpl
jns
add
inc
or
mov
dec
mov
xchg
rcrl
inc
lret
dec
scas
leave
add
lcall
std
mov
dec
rorl
xor
sub
fdiv
xor
pop
rolb
fnstcw
pushf
testl
push
bound
jne
push
outsb
adc
jno
push
cmp
sbb
xchg
cmp
xor
mov
gs
fwait
cmp
sbb
cld
lds
rclb
and
mov
or
and
xor
sub
and
pusha
cmp
jne
aas
mov
xor
pushf
xor
add
xor
xchg
inc
idivl
jg
add
mov
les
add
sbb
and
fidivl
xchg
add
popf
push
mull
addl
jmp
loopne
pop
dec
mov
adc
xchg
push
mov
lret
add
jno
lea
jle
sub
sbb
test
shlb
ror
sbb
push
and
dec
mov
push
inc
shrl
call
xlat
cmpsl
rcrl
fisttpl
mov
mov
lock
sub
and
or
lods
push
xchg
pop
lds
mov
xor
jle
mov
ds
jnp
daa
test
pop
stos
pop
xchg
lds
ret
stc
or
js
movsw
in
mov
lahf
xchg
icebp
icebp
in
test
mov
adc
ja
cmp
lods
je
add
inc
mov
cltd
sahf
or
and
sbb
and
sbb
cli
aad
cwtl
addr16
fistpll
xchg
orb
out
jae
pop
ss
push
insl
ljmp
fimuls
mov
lret
jnp
adc
xchg
xchg
inc
sbb
imul
das
pop
add
cs
popf
loopne
inc
pop
pop
outsl
sbb
jmp
mov
mov
adcl
test
push
jecxz
and
mov
mov
int3
inc
cmp
pop
nop
test
push
out
popf
and
lds
cmp
leave
xor
leave
cmpsl
pop
stos
sub
cmc
rorb
fneni(8087
fwait
out
imul
in
xchg
xor
stos
lock
pusha
outsl
xchg
cmpps
dec
and
aad
jbe
lahf
lea
sti
mov
or
mov
testb
inc
xorl
roll
cmpsb
pop
and
dec
sbb
adc
pop
add
div
fcomps
cmp
lret
push
and
xchg
outsl
sti
inc
stos
inc
jle
cltd
gs
data16
aas
enter
push
pop
test
pop
inc
push
dec
shrd
roll
jae
dec
fisubs
lret
jge
adc
adc
sub
inc
adc
and
jnp
std
and
xor
sub
shrb
inc
aad
insb
mov
int
mov
xchg
enter
push
fistpll
cmp
adc
pop
add
negl
xchg
movsb
push
sbb
cmp
lahf
mov
jns
nop
cmp
addr16
cmp
pop
pop
sub
xchg
xchg
sbb
cmpsl
xor
gs
addl
sbb
outsl
fwait
inc
or
fstpl
and
pop
in
stos
mov
fsubp
lods
fldl
pop
jp
mov
jl
cmc
jecxz
push
jg
in
call
push
lods
jo
loop
sbb
inc
push
adc
test
pop
adcl
adc
insb
out
mov
test
or
pop
mov
xchg
push
sbb
add
test
int3
fnclex
repz
adc
mov
fstpl
subb
mov
cli
inc
lahf
jae
inc
push
enter
cmpsl
adcb
mov
loopne
enter
in
dec
inc
rcll
push
and
mov
test
xor
cwtl
jo
sub
ss
adc
in
loopne
inc
inc
inc
pop
xor
inc
push
int3
push
jbe
lods
std
and
jns
and
and
mov
subl
mov
mov
mov
addr16
inc
push
addl
push
xchg
add
fnstcw
out
mov
adcl
mov
iret
jmp
fiaddl
mov
pop
inc
das
sub
sbb
mov
movsl
cmp
ljmp
pop
sub
aaa
aaa
push
mov
addl
cmp
inc
fs
jge
dec
pop
scas
into
in
dec
loop
dec
pop
sbb
test
push
popa
clc
mov
insl
lret
cmp
imul
dec
xchg
pusha
pop
bound
cld
xor
push
add
dec
scas
or
jno
stos
xor
out
jp
fwait
or
nop
mov
data16
mov
xor
add
pop
bound
out
xchg
es
sub
rcr
repnz
imul
stos
sbb
icebp
mov
cli
and
out
das
imull
inc
pop
dec
mov
push
shlb
xchg
fwait
mov
notl
ja
data16
das
out
popa
scas
mov
test
mov
arpl
mov
pop
cmp
lahf
repnz
jmp
sub
addb
mov
push
jb
sub
lea
inc
xchg
and
fnsave
mov
add
or
out
into
aaa
mov
jne
pop
jmp
jecxz
sbb
arpl
into
mov
js
or
mov
in
shlb
movswl
push
sbb
out
ljmp
sbb
test
xorb
aad
xor
call
rolb
test
std
push
shr
xchg
leave
sbb
test
stos
push
arpl
out
mov
cmp
fcoms
add
pop
jg
jo
jl
jo
jecxz
add
cmp
fwait
inc
jns
xor
ficoml
pusha
decl
pop
push
repnz
test
mov
adc
and
les
nop
push
sbb
jbe
and
into
jne
jno
push
mov
mov
jbe
pop
adc
pop
sub
mov
and
enter
les
and
sub
cmp
pusha
cmc
loopne
mov
push
jg
nop
mov
nop
inc
mov
daa
dec
int3
inc
dec
cwtl
dec
mov
ds
mov
iret
jg
sbb
jmp
loope
loopne
stos
test
aaa
popf
iret
jno
mov
mov
addb
iret
xchg
fnstsw
testb
enter
mov
lahf
in
mov
push
sbb
jno
pop
fimull
scas
test
and
mov
jp
fs
test
pop
repz
lret
iret
mov
xchg
dec
popa
pusha
mov
icebp
data16
mov
push
hlt
jbe
xchg
out
das
fs
negl
sahf
pop
stos
push
dec
lcall
mov
or
pushf
sbb
xchg
sub
arpl
jnp
inc
daa
pushf
jmp
sub
clc
std
fldenv
fsts
cmp
xchg
repnz
fwait
sbb
pop
fldt
sahf
adc
push
jae
mov
imul
out
movsb
decb
sti
imul
jg
into
xorl
sub
hlt
es
inc
js
pushw
mov
fdivrs
jl
or
pushf
xchg
js
flds
jae
push
psubusb
and
clc
push
clc
adc
push
and
stos
sbb
mov
outsl
dec
mov
or
mov
inc
mov
aaa
sbb
popa
or
in
mov
imul
inc
cmp
fwait
hlt
xor
add
add
cmpl
jg
fidivrl
push
pop
repz
dec
lods
sub
pop
push
ljmp
in
fmul
scas
jge
mov
cmp
mov
push
movsl
pop
push
popf
xor
popa
loopne
adc
pusha
dec
mov
cli
in
je
mov
mov
xor
ds
ja
and
les
out
or
and
dec
shll
xor
and
scas
repz
jb
addl
xlat
pop
out
pop
loopne
lods
pop
sub
rcr
xchg
ffreep
out
scas
leave
fs
dec
test
or
aam
cmpsl
repz
mov
das
pop
sub
clc
pushf
data16
lea
in
popf
test
inc
mov
stos
jne
jbe
call
xchg
jl
mov
stos
add
int
cmp
push
xor
jle
mov
aas
cld
sbb
fisttpll
xor
dec
ss
in
pop
jg
and
jae
out
inc
push
pop
jno
xchg
push
fnstsw
cld
dec
mov
pop
popf
inc
inc
xchg
stos
pop
xchg
jle
sub
insb
sub
cwtl
aas
fwait
adc
in
ja
adcl
mov
decl
push
mov
jmp
shll
inc
daa
inc
xor
mov
and
imul
sti
stos
xor
adc
mov
jno
dec
inc
je
pop
aas
add
out
add
sbb
cld
bound
inc
mov
out
push
shl
jno
pop
hlt
aad
adc
jg
cmpb
aam
scas
ret
mov
jno
mov
add
jnp
sub
pop
jle
mov
stc
xor
mov
mov
call
mov
push
leave
pop
push
mov
xchg
and
xor
sbb
jp
xchg
xchg
add
push
jg
sbb
sahf
stc
cwtl
or
adc
loopne
push
jae
das
cmpsl
mov
inc
aam
mov
int3
sub
lock
out
inc
stos
inc
sbb
or
push
cmp
xchg
mov
pop
push
js
aad
dec
mov
leave
lods
fbld
ret
cmp
insb
mov
sbb
mov
xchg
jae
push
leave
push
adc
in
rol
cmp
push
push
mov
add
lahf
push
pusha
cmp
jns
sbb
xlat
cmp
sti
sub
dec
gs
push
stc
pop
fsubr
sbb
sub
mov
pop
sbb
mov
ret
push
xor
ljmp
pusha
push
popa
push
aad
cmpl
out
jl
addr16
pop
mov
call
in
mov
jmp
lds
push
sbb
sub
adc
adc
push
inc
out
inc
ljmp
adc
in
pop
mov
mov
xorb
insl
out
jge
jl
aas
call
ss
or
cmp
orl
push
aas
cwtl
cltd
cmpsl
movsb
add
ficomps
int3
xchg
mov
lcall
dec
jle
mov
xchg
cmp
outsl
push
andl
xlat
sub
mov
sarb
movsl
adc
test
mov
lcall
and
add
fwait
dec
jne
push
testb
jle
pop
jg
pop
and
cmp
mov
inc
les
loopne
jg
ljmp
pop
and
inc
and
mov
in
stos
ret
ss
pop
sbb
jmp
cld
enter
pop
mov
aam
icebp
clc
pop
lods
js
cmp
fldenv
jl
popa
out
sub
mov
ljmp
aad
lods
xchg
xor
jg
inc
in
jmp
push
popa
out
xchg
pusha
rorb
adc
jne
imul
cld
mov
je
or
test
js
xchg
pop
call
les
inc
inc
popa
sbb
test
jle
cmp
shrb
ljmp
cmp
repz
cmp
adc
mov
fcomp
dec
aad
je
mov
inc
lcall
push
pusha
data16
mov
dec
fstpt
leave
xor
add
movsl
xchg
mov
daa
pop
mov
adc
pop
dec
sub
lcall
stos
jno
adc
inc
inc
es
mov
notb
cld
jno
jge
xor
jge
mov
cli
popl
cmpsb
ja
add
or
fistl
aas
push
xchg
adc
and
and
push
cmp
sub
jnp
mov
test
clc
les
stos
jle
adc
xor
and
dec
dec
addr16
xchg
add
sarl
mov
rolb
mov
out
fsubrs
inc
and
inc
cltd
lock
popf
and
push
gs
or
xchg
shrl
xchg
sub
fadds
faddp
mov
inc
fisttps
cmp
sub
push
inc
sub
pop
jge
shll
fmul
mov
icebp
or
ss
jns
mov
inc
mov
xchg
mov
pop
xor
push
popf
mov
cmpsb
rorb
insb
inc
aas
cli
rorb
sbb
jp
js
scas
cmp
push
mov
pop
adc
sbb
testb
xor
dec
arpl
ret
xchg
test
sbb
mov
sbb
repnz
cmpsl
icebp
jne
dec
mov
jp
dec
popa
popf
jge
or
fidivrl
cld
cmp
aad
sbb
popa
mov
icebp
sub
sbb
sub
ds
sahf
jmp
pop
fstl
pop
cmc
int3
pop
mov
scas
clc
xlat
stc
dec
pop
cmp
pop
and
inc
stos
cmp
scas
dec
lret
orl
in
repnz
push
out
outsl
aad
lret
jne
call
pop
dec
mov
sbb
mov
inc
xchg
shrl
inc
scas
scas
mov
ss
mov
push
sbb
pop
movsl
adc
sub
mov
daa
insb
push
nop
cmpl
xchg
jae
arpl
popa
ds
fisubrl
pop
stc
push
sbb
push
jle
je
add
or
xor
lret
add
sub
repnz
lcall
adc
push
sbb
sbb
push
pop
cmp
hlt
sub
out
lods
dec
jbe
dec
out
add
jmp
lcall
mov
pop
ret
shll
pusha
mov
mov
into
movsl
pusha
nop
adc
pop
ficoms
sub
inc
pop
cmp
inc
sub
out
add
inc
movsl
addr16
mov
stc
pop
sub
inc
imull
mov
mov
push
clc
pop
out
lret
daa
lds
xchg
jmp
negb
mov
jp
xchg
repnz
rep
sub
pop
test
leave
test
mov
fs
in
adcb
js
shlb
addr16
leave
movl
mov
rol
fcomps
jno
cld
lahf
popf
cld
mov
fcoms
xchg
or
jl
sub
lahf
ss
jmp
inc
sub
adc
dec
push
push
or
dec
push
mov
mov
add
push
int3
int3
mov
cli
mov
fmul
push
fs
aam
dec
loopne
xchg
or
sub
dec
or
jp
pop
sbb
pop
pop
xor
xchg
xor
ret
cmp
xchg
ffreep
clc
sub
jne
dec
js
fists
outsl
loope
rorb
and
loopne
pop
or
add
ja
ret
lahf
movsl
mov
or
fwait
mov
mov
in
push
mov
lahf
or
and
cmp
or
prefetchw
ja,pn
xchg
xchg
jno
cli
aad
jl
scas
xchg
aaa
imul
outsb
ds
int
mov
aad
and
pop
in
push
mov
push
cwtl
pusha
clc
xor
mov
cmp
dec
jnp
rorb
pusha
out
sarb
data16
dec
in
lock
ret
addl
pop
sbb
ss
fwait
inc
imul
cmc
pop
pop
aad
in
hlt
xor
sub
sub
xchg
xor
and
adc
dec
dec
sbb
pop
scas
cmp
les
lret
cmp
push
dec
push
mov
xchg
fcomi
dec
sub
mov
dec
and
fwait
xchg
jmp
sbb
and
fsubrs
inc
enter
pop
lock
in
ss
mov
fidivrl
addr16
pop
sbb
xchg
mov
int3
pop
inc
xor
cmp
fwait
adc
es
into
iret
lods
and
inc
xchg
lahf
push
cwtl
pop
mov
pusha
jmp
xor
mov
outsl
adc
or
mov
lods
push
pop
mov
aaa
mov
xor
fwait
aad
cs
push
in
mov
adc
jb
inc
sub
mov
xchg
cmp
leave
ljmp
or
iret
lods
test
mov
pushf
scas
in
idivl
push
xchg
jl
push
pop
push
les
icebp
mov
sbb
mov
std
jg
fadd
dec
iret
clc
cmp
fstl
dec
outsb
popa
stc
stos
filds
call
pusha
ds
push
jg
jmp
mulb
inc
lods
ja
rcll
push
scas
pop
adc
cmp
lret
mov
push
sub
scas
pop
inc
test
lods
xor
dec
jb
popa
add
add
sub
es
das
mov
jb
fisubs
sub
mov
mov
sub
ss
xchg
sub
xchg
adc
push
or
loop
lret
mov
lret
or
dec
idivl
lods
imul
gs
push
mov
cmpsb
push
sbb
pushw
lret
loopne
loop
cmp
inc
je
mov
jo
push
mov
bound
outsl
mov
mov
adc
les
test
xor
jnp
pop
inc
xchg
out
push
add
inc
aaa
xor
mov
out
mov
scas
lds
shrl
cmp
and
and
jecxz
fwait
push
leave
cltd
outsl
jo
cmpsl
dec
mov
mov
repnz
daa
adc
inc
push
jp
adc
cmpsl
push
pop
sarl
aad
decb
std
adc
out
sub
sub
pop
out
xor
aam
push
mov
xor
movsb
minps
pop
dec
mov
ss
insb
push
add
pop
sub
mov
sarb
rolb
daa
jbe
mov
repnz
lret
cmp
mov
xchg
stc
add
std
je
nop
xchg
adc
adc
mov
shll
stos
dec
mov
sbb
adc
scas
push
pop
imul
pop
pushf
aam
or
cmpsb
rorl
loope
add
xchg
out
pop
inc
mov
out
adc
lcall
cs
adc
bound
and
out
es
push
dec
pop
or
push
stos
dec
sub
movsl
mov
add
cli
xlat
sti
mov
fs
add
pop
lea
inc
sbb
aaa
inc
gs
lock
in
fs
pop
nop
fwait
mov
movsl
pop
fnstsw
push
mov
out
xor
mov
out
cmp
mov
adc
inc
ret
add
dec
and
mov
pop
bound
into
inc
lods
imul
aaa
push
in
test
pusha
shll
fistl
daa
roll
mov
into
dec
movsb
mov
loope
outsb
xchg
gs
xor
fdivl
pop
sbb
or
pcmpgtd
sbbl
add
cli
push
sub
in
sub
sarb
es
jbe
fmull
jnp
push
jmp
sub
mov
xor
mov
add
cwtl
pop
inc
lods
push
xlat
imulb
pop
lods
jns
dec
xchg
sub
inc
xlat
loop
push
dec
into
jl
add
int
lret
incl
pop
call
fwait
leave
repz
mov
stos
outsb
out
xor
imul
jle
popl
inc
stos
test
dec
icebp
stos
je
sub
cld
pop
pop
adc
stos
cmp
sbb
addr16
mov
add
push
imul
pop
or
jp
cmp
sbb
cli
imul
in
sub
mov
and
scas
loope
scas
pop
pop
pop
inc
sub
xchg
out
in
pop
out
jl
add
adc
out
jge
lret
mov
repnz
add
scas
stos
xchg
jnp
je
sub
inc
jecxz
jns
pushf
repnz
addr16
add
mov
xchg
stos
jnp
in
gs
cmp
dec
xor
dec
hlt
mov
ja
cmp
mov
adc
mov
fistps
jae
or
push
aaa
mov
mov
and
push
cmp
push
mov
jno
and
shr
pop
jno
dec
mov
rol
cmp
inc
xchg
inc
fdivr
insl
adcb
pop
inc
dec
push
rorl
push
inc
inc
push
bound
lea
enter
aam
jns
mov
mov
adc
stos
in
roll
mov
cmp
mov
dec
inc
aaa
push
and
int
mov
pop
movsl
test
xchg
adc
popf
add
data16
xchg
mov
adc
outsl
sbb
inc
lock
sub
push
mov
mov
lods
gs
in
cmpsb
cmp
sbb
test
xchg
fcmovu
sbb
xor
out
in
int
rcl
das
xor
sbb
sub
xchg
jmp
loop
or
cmpsl
repz
pop
sub
imul
je
cmpsb
lret
adc
jecxz
mov
push
mov
xchg
push
pop
jne
mov
push
push
cmc
test
cmp
punpckldq
jnp
jnp
adc
jns
in
cmc
and
inc
sub
shl
dec
sub
pushf
push
jmp
adc
ficompl
xchg
imul
jp
pushf
xor
cmpb
push
cwtl
popf
push
sub
test
mov
pop
jnp
jp
fucomp
jg
mov
cmp
stc
cmp
filds
nop
out
mov
loop
mov
dec
and
xlat
pop
pop
dec
sbb
adc
mov
scas
repz
xchg
jns
jns
outsb
add
sub
decb
rcrb
adcb
arpl
subb
mov
les
insl
or
cmc
jp
mov
dec
or
lods
fstl
cmpsb
mov
pop
sbb
push
lock
inc
lret
mov
outsb
mov
mov
fstpt
mov
je
dec
xor
adc
xchg
test
or
pop
bnd
add
cwtl
sbb
fimuls
cmp
or
cmpsb
xchg
ror
bound
rolb
cli
xchg
inc
lret
fdiv
fidivrs
out
sub
bound
mov
test
mov
mov
xchg
pusha
aad
cmpsl
sub
hlt
jle
repz
xor
sar
push
xchg
mov
cmpl
pop
es
imul
insb
jne
xor
push
sbb
mov
in
sti
mov
imul
jmp
shll
dec
into
aaa
fdivp
arpl
or
insl
jecxz
mov
xor
lds
fdivp
cmp
mov
or
insl
data16
js
sbb
dec
pop
test
jmp
push
clc
clc
mov
mov
les
and
push
scas
aas
push
push
mov
call
imul
jle
cmp
xor
jnp
xor
inc
cmp
add
or
sbb
dec
dec
aas
or
js
sbb
aaa
out
xchg
push
loope
sub
cmp
and
test
adc
jns
jg
insb
push
dec
cld
xor
lret
negl
sti
pop
iret
adc
lcall
ja
rorl
cmp
mov
or
pop
pop
cld
cs
lret
les
sbb
les
test
adc
jnp
test
cmpsb
test
cs
cmpb
mull
jp
lock
jne
add
nop
test
ret
pop
push
xchg
push
outsb
push
es
loop
pop
or
inc
jmp
dec
sbb
cs
pop
mov
xchg
inc
lds
int3
and
outsb
sub
lea
mov
add
push
mov
adc
scas
jmp
hlt
bound
mov
insb
jecxz
shl
jae
stc
xorb
xchg
pop
and
mov
shlb
or
ljmp
stos
add
jle
dec
call
jns
pop
ret
stos
sub
in
ret
sub
mov
cmp
cld
jle
xchg
out
xor
sub
movaps
ret
cmp
mov
fcomps
repz
mov
subb
push
and
add
add
inc
leave
std
fnstenv
jl
lods
xor
push
mov
pop
xchg
jb
aaa
loopne
adc
movl
sub
insl
out
inc
xchg
push
mov
inc
cmpsb
mov
ja
sub
fnsave
in
inc
cmp
lods
addb
xchg
push
pop
je
xchg
daa
jns
mov
sub
jnp
mov
std
testl
in
xchg
and
pop
std
mov
adc
scas
or
stos
sub
sbb
xor
pop
movl
dec
xchg
cmpsl
ja
inc
push
pushf
push
or
mov
mov
aad
dec
pop
jmp
repnz
adc
js
adc
popf
sub
mov
pop
mov
pop
daa
or
sbb
push
jae
das
adc
aas
fcoml
sub
shll
stos
mov
pop
imul
or
add
sbb
stos
xlat
aam
mov
cwtl
adc
push
ja
mov
dec
mov
sub
jl
mov
jns
clc
mov
sub
mov
stos
mov
mov
test
aad
sti
cmp
or
in
push
cmpsl
push
aas
gs
mulb
clc
pop
lds
test
dec
clc
cmp
jp
push
mov
pop
dec
mov
test
push
jge
repz
dec
sub
inc
lcall
repz
add
call
or
lcall
cmpsb
scas
mov
loop
aam
mov
arpl
iret
cmp
sbb
push
outsb
xor
pushf
xchg
stc
push
mov
mov
cltd
inc
pop
pop
aas
scas
inc
loop
push
or
shlb
xchg
shl
pop
xchg
clc
pop
movsl
sub
rep
fmuls
mul
mov
and
mov
add
and
cli
inc
or
lret
adc
pop
pop
out
dec
and
js
iret
addb
clc
cmp
sub
mov
jmp
xor
adc
sub
int3
ss
inc
mov
mov
pop
movsb
xchg
sbb
fs
out
adc
jecxz
xor
jmp
lret
outsl
fcomp
pop
insl
pop
cmp
adc
push
and
outsb
ret
cmp
push
jns
pusha
adc
inc
or
xor
push
push
std
xchg
or
ds
xchg
test
jb
out
pop
cwtl
and
cmp
xchg
adc
inc
xchg
and
mov
andb
mov
and
cmpsb
sub
sbb
scas
cmp
popa
fsubrl
xchg
shll
sub
and
in
push
fadds
sbb
outsb
xor
sub
and
enter
sar
jecxz
test
sbb
test
fstpl
xor
ret
in
pop
loopne
xor
sub
sahf
mov
jge
jo
dec
pop
pop
fldenv
rcl
lret
clc
sbb
into
test
sub
push
stos
lret
js
int
ret
and
add
clc
push
and
ljmp
xor
lret
jecxz
jl
push
add
push
dec
push
sbb
ret
shl
inc
add
hlt
jp
sbb
mov
jmp
mov
aam
mov
out
insl
cs
jmp
or
xchg
addb
lea
insl
and
mov
mov
daa
xor
mov
aam
xchg
inc
xchg
aaa
imul
dec
cmc
jns
cmp
mov
dec
mov
push
bound
incl
in
fisubs
inc
mov
adc
sbb
xchg
xchg
push
mov
mov
add
pop
outsl
cmpsb
mov
call
dec
cwtl
inc
xor
clc
rcrb
add
sbb
lcall
push
add
sbb
lds
pop
sub
cmpsl
loop
lds
pop
stos
lock
leave
push
das
xor
xchg
xor
test
xor
sbb
mov
or
outsb
aaa
dec
es
or
jl
lods
cmpsb
mov
mov
adc
mov
mull
lcall
fisttps
xchg
lret
sub
inc
ss
adc
push
mov
fcoml
and
push
push
mov
xchg
sbb
sahf
ror
jne
jo
mov
push
push
dec
out
pop
push
push
mov
fwait
dec
icebp
mov
sti
enter
jg
icebp
repz
lea
aam
xchg
adc
sub
addb
test
sub
dec
mov
mov
cmp
jnp
test
lret
mov
inc
or
in
lods
cmp
lcall
sbb
mov
out
mov
and
adc
pop
ss
sbb
into
les
fsubrl
subb
insb
cmp
dec
jb
fcmovbe
dec
out
shlb
jecxz
xor
mov
out
pop
mov
sbbb
iret
ror
xchg
lcall
rorl
or
mov
push
sbb
jae
loopne
enter
jno
lds
cmp
mov
push
lods
gs
lock
cmc
ret
jns
mov
cli
inc
loop
push
lret
sbb
outsl
lods
hlt
es
sub
push
icebp
js
into
sbb
mov
xchg
dec
repz
mov
sti
out
lcall
das
cmc
nop
cmp
pop
xchg
shlb
xor
mov
mov
notb
xchg
pop
arpl
test
or
mov
dec
mov
adc
cli
jo
adc
pop
orb
inc
lods
inc
cmp
mov
add
fsubrs
mov
xchg
xchg
mov
bnd
in
insb
test
dec
outsb
adc
rorl
data16
outsb
int
sbb
add
je
jae
sub
sub
jne
mov
ret
dec
xchg
add
test
andl
xchg
jae
mov
sbb
mov
mov
fsubl
add
push
sub
jl
bound
repnz
jb
out
push
sbbl
cmp
ss
push
sbb
mov
or
or
orl
sub
mov
sbb
push
subl
jp
sub
cli
pop
je
and
sbb
arpl
adc
pop
mov
lods
cmp
pusha
lea
cmp
repnz
mov
lcall
lods
adc
test
cmp
jo
out
mov
lahf
bound
ret
dec
pop
js
pop
shl
icebp
pop
movsb
xor
dec
cmp
out
add
or
and
aam
add
aam
mov
cltd
xor
mov
sub
stos
mov
out
or
pushf
inc
jg
jno
outsl
arpl
adc
clc
aaa
or
cmpsl
pop
inc
pusha
ret
aam
mov
sbb
push
fdiv
movsl
xchg
out
mov
test
and
icebp
bound
fdecstp
inc
outsl
pusha
mov
sub
mov
repz
xchg
adc
mov
xor
cmc
mov
jo
cmp
shll
sub
sahf
and
rcll
idivb
scas
xchg
imul
notl
push
int3
and
faddl
lahf
xchg
cmp
push
adc
sbb
cli
stc
push
jmp
cmp
xor
inc
mov
pop
cmc
aaa
cmpsl
call
mov
pushf
dec
sahf
push
xchg
movsl
mov
ds
mov
jecxz
jmp
subb
pop
xchg
fisubl
incl
sub
cli
in
xor
bound
lcall
xchg
add
mov
fnstsw
inc
testb
cltd
xchg
ja
out
xchg
getsec
das
sub
lret
mov
mov
add
addr16
in
or
insb
inc
push
push
rorb
pop
das
cmpsb
loop
add
cmp
push
addr16
xchg
fidivl
sbb
pop
xchg
cli
sbb
mov
rcll
mov
jmp
ret
jmp
bound
clc
xchg
fdivrp
dec
imul
aad
scas
mov
jae
pushf
test
out
nop
test
test
mov
mov
loop
push
pop
mov
inc
mov
aad
daa
in
mov
aaa
xor
xchg
xchg
pop
insb
jb
iret
mov
mov
movsl
mov
jae
in
or
sahf
mov
add
out
and
dec
ret
dec
add
mov
repz
lods
inc
push
mov
dec
sbb
push
sbb
movsb
lea
push
movsb
clc
pop
sbb
xor
jle
pop
mov
jecxz
leave
addr16
mov
in
notl
add
fcmovnb
sbb
stc
jmp
push
rorb
mov
add
sahf
div
jge
sub
dec
lahf
or
adc
adc
test
mov
mov
ds
loopne
pusha
sarl
mov
xchg
faddl
mov
outsl
pop
and
or
sbb
add
add
adc
mov
testl
or
outsb
jno
pushf
into
fld
jne
lds
push
xor
je
mov
xchg
dec
test
rorb
xlat
jns
mov
mov
les
xlat
inc
push
jbe
pop
xor
loopne
mov
dec
dec
mov
xor
into
loope
imulb
pop
push
movsl
mov
movsb
aaa
mov
sbb
and
and
mov
xor
scas
paddd
rcr
mov
jl
mov
push
or
out
cmp
dec
int3
dec
inc
add
lods
test
pop
dec
sub
cwtl
ret
inc
dec
pop
in
flds
gs
loopne
adc
loop
sbb
push
ffreep
jo,pn
jbe
and
push
xor
movsl
daa
arpl
data16
inc
dec
dec
fimull
ds
mov
ffreep
stos
or
mov
iret
and
pop
pop
fs
pop
push
clc
inc
adc
sbbl
orb
inc
inc
dec
mov
cmpsb
add
mov
out
inc
dec
jp
rol
imull
and
negb
aaa
sti
adc
sbb
add
inc
subb
add
sub
int3
and
jmp
icebp
fcomps
les
arpl
xchg
pop
xchg
jb
mov
test
les
call
fimull
loopne
daa
rcl
and
or
mov
fbstp
and
cmp
aas
adc
fnstcw
sub
shrl
push
test
add
cli
push
cltd
push
repnz
push
add
and
xchg
push
jg
fsubs
push
repz
ficompl
cmp
mov
in
inc
sbb
push
mov
mov
pop
data16
enter
mov
xor
incb
jns
sti
fdiv
addr16
popf
cld
test
fbstp
mov
sub
pop
jle
fwait
jbe
addr16
fwait
sbb
mov
mov
clc
cwtl
sbb
and
inc
cmpl
jg
clc
int
bound
add
and
scas
sbb
test
jge
shlb
addr16
mov
xchg
jbe,pt
movsl
lods
sbb
out
ds
dec
inc
mov
adc
sbb
mov
movsb
sub
in
ds
jmp
xchg
hlt
cmpsl
xchg
adc
and
pop
pop
add
notl
jne
insb
push
cld
ret
scas
sub
jl
push
arpl
xchg
sbb
xor
xor
loope
sub
cmc
ret
cmp
jb
dec
negb
sub
jecxz
movsb
jge
cmp
cmp
cmp
inc
jbe
ja
and
sar
mov
pop
ror
popf
sub
xor
xlat
inc
ffree
lea
test
mov
movsl
xor
cmp
fisttpll
fwait
push
inc
jo
scas
mov
push
mov
in
mov
push
and
sahf
frstor
lods
imul
cmp
xor
or
xchg
inc
inc
jb
sub
out
in
daa
fwait
jo
ljmp
mov
xor
sub
fimuls
nop
sbb
sbbl
ror
and
xchg
stos
cmp
mov
cld
xchg
je
mov
popf
sub
clc
in
push
sbb
aam
or
mov
or
mov
jecxz
dec
fmuls
rolb
in
mov
loope
hlt
loopne
js
in
sub
scas
aas
lods
mull
repnz
popa
lea
int3
incb
pop
jg
rcr
inc
dec
jge
fisubs
orl
xchg
into
push
cltd
jmp
shll
mov
pop
and
jmp
inc
rorl
push
sbb
cmp
add
pushf
data16
mov
out
gs
xchg
inc
fwait
jbe
cwtl
xchg
mov
mov
sub
mov
sub
pop
xor
inc
xlat
sub
and
out
xor
repnz
or
dec
dec
fwait
xorl
test
lahf
call
dec
test
and
mov
enter
push
pop
xor
jg
mov
dec
pop
inc
lahf
imul
ljmp
cmp
sbb
sahf
cmp
jmp
call
push
cmp
adc
fsubl
and
xchg
popf
mov
mov
jno
inc
popa
cmpsb
mov
jl
or
push
mov
pop
or
sub
stos
dec
xor
cmc
dec
cmp
add
loopne
aas
mov
jb
xchg
inc
xlat
imul
fsubs
bound
das
rolb
dec
iret
dec
adc
jbe
mov
ja
xorb
inc
imul
pop
das
cmp
aad
cli
push
sub
js
icebp
mov
mov
sti
push
loop
stos
sbb
arpl
cld
xlat
decl
inc
xor
ljmp
mov
vmovntpd
jg
fidivs
insb
sub
movsl
in
in
rclb
mov
xchg
cmc
into
inc
imul
xchg
xor
mov
mov
gs
out
les
in
outsb
pusha
sub
rcrl
mov
and
jns
movsl
add
sahf
sub
int
stos
lret
ja
popa
stos
nop
addr16
aaa
sbb
mov
jl
push
dec
fwait
cwtl
mov
xchg
xor
cs
out
aam
sub
pushf
mov
out
mov
jp
insl
movsl
int3
xorb
mov
xchg
push
lods
sahf
stc
mov
xor
ret
xor
push
push
call
cmp
mov
dec
cmp
mov
sub
add
push
test
sub
dec
and
mov
jb
loope
pop
push
sub
test
xchg
jg
mov
mov
mov
fstps
rolb
jmp
mov
outsl
sbb
in
stos
aas
inc
cld
rclb
jb
call
or
pop
js
jmp
scas
dec
mov
movsl
pop
repz
mov
gs
dec
jns
mov
out
inc
into
lahf
loope
pushf
mov
in
xor
jmp
fdiv
sahf
incb
test
or
mov
xlat
mov
addr16
cmp
mov
dec
and
push
pop
mov
push
jl
fcmovb
push
repnz
xor
shrb
faddp
pop
icebp
xchg
lea
cmp
inc
repz
out
lret
mov
mov
sub
ja
enter
dec
imul
cmpsl
outsl
jbe
dec
push
out
xchg
xchg
nop
xchg
mov
dec
cltd
test
rorb
pop
cmp
dec
jns
in
call
push
xchg
scas
cmp
xchg
loop
fwait
and
push
sub
leave
jmp
lods
inc
cwtl
popa
mov
xchg
scas
imul
out
repnz
repz
cmp
mov
pop
add
fidivrs
in
decb
pop
repz
data16
popf
iret
dec
sbb
adc
pushf
inc
push
inc
sti
cld
sbb
dec
js
dec
inc
jb
jl
aaa
add
gs
test
stc
mov
xchg
enter
pop
pop
mov
loopne
xacquire
lret
fstps
pop
pop
pop
popa
push
pop
mov
mov
fstps
lahf
ss
shl
les
mov
xchg
lock
test
addr16
adc
add
xor
mov
dec
ljmp
es
aaa
jae
sub
push
movl
mov
scas
les
repz
into
stos
pop
pop
hlt
loope
inc
lods
xor
shrl
in
jge
fisubl
rcrb
jmp
cmp
push
test
mov
add
test
cs
sti
inc
jmp
xor
in
add
xchg
ljmp
sbb
push
push
dec
xchg
ljmp
daa
add
movsl
mov
je
lret
sub
cmpsb
mov
mov
or
loopne
mov
test
add
lds
bound
push
xchg
mov
fsubr
ljmp
inc
sub
xor
gs
loope
loop
in
ret
lret
or
jmp
push
addr16
lock
push
inc
in
scas
pop
xchg
mov
leave
bnd
xacquire
sub
cmp
sbb
test
push
and
jb
repnz
pop
les
push
xor
pusha
rorl
xchg
negb
out
out
cmp
adc
ret
imul
sbb
and
loop
xorl
inc
data16
dec
pop
xchg
add
scas
pop
xchg
imulb
aam
and
rclb
fistps
dec
and
mov
popa
add
cmp
outsb
sbb
add
push
add
inc
sarl
mov
jo
and
and
data16
repnz
aaa
cmp
fwait
dec
lahf
inc
scas
xchg
int3
je
sti
mov
add
pop
ss
cmp
xchg
xchg
stos
mov
lock
stos
scas
sbb
sub
inc
or
popf
andb
scas
int3
xor
mov
ret
jmp
fsubrs
adc
pop
lods
test
repz
jle
decl
mov
push
in
int
xor
mulb
inc
push
filds
mov
les
xchg
mov
dec
mov
imul
out
lea
cmp
push
mov
bnd
pop
sbb
adc
sbb
xchg
inc
sarb
sub
mov
sub
insb
pop
jno
add
addb
leave
xchg
pop
stc
cmp
xchg
test
xor
fmulp
cmc
pop
dec
pop
push
dec
mov
mov
pop
lea
push
ud0
jle
out
in
iret
push
cmp
mov
push
mov
lea
adc
ret
sub
pop
mul
jae
jmp
into
shrb
add
cmp
daa
dec
jecxz
cltd
jg
and
xor
js
xchg
fidivrs
mov
mov
das
mov
test
jmp
shrb
push
mov
je
dec
aad
sub
xchg
push
pop
dec
fxch
pop
fidivrl
xchg
xchg
cwtl
xchg
inc
inc
dec
icebp
mov
lods
cmp
cmp
sub
sub
bound
pop
fsub
fcmovne
data16
adc
divb
scas
imul
out
mov
test
insb
pushf
adc
jnp
cmp
fsub
mov
jne
push
outsl
and
test
inc
aas
xchg
imul
add
imul
int
add
sbb
fs
dec
mov
inc
bound
or
jle
cli
add
ficoml
add
outsb
clc
fidivl
and
movsb
insb
jge
into
xor
movsb
ljmp
iret
cmp
cld
stos
dec
push
repz
xorl
loopne
sub
push
add
pop
je
arpl
scas
imul
fidivrl
movsb
jne
jle
push
inc
pop
dec
dec
push
shll
aam
filds
lods
iret
xor
mov
cmpl
xor
js
jbe
shrb
subb
js
mov
xor
adc
ds
movsb
ss
rcll
lods
sbb
je
ret
loope
aam
inc
popa
push
xchg
incl
mov
movsl
clc
and
pop
push
and
pop
test
andl
mov
fisttps
push
jecxz
out
mov
mov
inc
or
and
cmp
in
inc
jg
sbb
or
fwait
bound
jno
jo
and
mov
sub
sub
cltd
sbb
loope
adc
jbe
imul
lock
pop
xchg
out
lods
inc
and
rorl
push
sbb
in
fimull
xchg
and
cmp
loop
inc
cltd
outsl
daa
iret
fcmove
sbb
popa
jle
fcomps
clc
pop
fnstcw
mov
lcall
jb
mov
pop
xchg
fadds
out
repz
outsb
mov
adc
jo
fs
decb
sub
pop
cmp
jecxz
push
rorl
mov
inc
push
mov
aad
sete
lret
mov
jb
ljmp
loope,pn
xchg
cs
jae
imul
movb
mov
in
repnz
popa
movsl
xor
lcall
shlb
inc
push
dec
into
maskmovq
jp
sbb
cmpsl
sbb
js
and
and
shlb
xorb
inc
mov
or
ret
pop
dec
and
mov
in
cmc
dec
push
and
adc
adc
leave
inc
repz
adc
fdivp
cmc
inc
adc
lcall
aaa
add
sub
outsb
xor
adc
xchg
wbinvd
or
or
add
insl
push
mov
xchg
mov
cmpsb
or
mov
fcmovb
adc
mov
shlb
fsubl
daa
mov
dec
js
nop
outsl
adc
enter
mov
jmp
roll
lods
out
jmp
sub
jg
scas
cmovo
inc
mov
or
loop
push
jnp
cltd
push
inc
mov
xchg
jb
cltd
aaa
mov
in
sub
inc
or
or
scas
out
fs
xor
stc
sbb
cwtl
aam
pop
jo
xor
xchg
inc
ret
ja
add
jns
push
ret
loop
lds
mov
mov
pop
lods
cld
out
mov
call
testl
das
dec
sbb
jns
xlat
xchg
mov
add
enter
nop
or
fld
cli
repnz
and
xchg
lret
jg
repz
and
out
ljmp
adc
sarb
daa
sbb
dec
loope
shlb
xchg
prefetch
or
push
stos
lahf
sbb
daa
stc
ljmp
push
mov
scas
or
imul
mov
add
stos
stos
int
xor
inc
sub
std
add
xchg
adc
aam
mov
dec
ja
scas
call
push
nop
faddl
iret
and
mov
push
lret
xchg
sbbl
cltd
arpl
out
shll
lods
lds
insb
push
fsubs
add
push
mov
jbe
ret
in
cmpsb
loop
mov
push
call
or
push
adc
xor
ss
cwtl
cmpsl
negl
loopne
or
mov
jae
sub
jge,pn
adc
mov
cmp
adc
dec
mov
bound
dec
and
ds
xor
jecxz
jmp
dec
pushf
sbb
jno
mov
idiv
sbb
sub
iret
mov
inc
outsb
movsb
cmp
aad
ror
jnp
cmp
and
rcrb
leave
or
lods
push
dec
jmp
das
sub
cmpsb
xchg
jo
insb
fimull
rcrl
xchg
xor
fadds
int
mov
pushl
nop
mov
aad
jl
push
and
jbe
jne
enter
add
jp
stc
call
out
mov
sub
dec
push
push
lds
popa
sub
and
sub
outsb
push
shlb
jl
xchg
add
cmp
scas
cmp
in
sbb
scas
pop
sti
gs
int
inc
mov
mov
add
sub
push
sbb
test
in
jle,pn
pop
inc
or
fdivrl
add
lret
mov
pushf
ss
es
or
mov
mov
divb
aas
iret
xchg
jnp
ret
lea
xor
jbe
lahf
clc
out
idiv
stc
pop
dec
jno
or
aam
mov
ss
lock
popf
xor
ja
jnp
insl
mov
outsl
ret
outsb
and
lcall
xchg
out
sbb
sub
jbe
ficoml
test
aaa
ror
jge
inc
jl
es
xchg
mov
mov
mov
mov
stos
pop
dec
xchg
xor
aad
imul
test
jge
sub
out
sub
lret
repnz
inc
test
adc
pop
sbb
mov
pushf
xchg
in
pop
clc
jl
lcall
aam
or
xchg
stc
out
outsb
ss
fstps
pusha
pushf
dec
cmovae
jg
ja
sub
inc
or
fwait
jae
inc
push
xchg
movb
popa
xor
cmp
lret
ret
cli
push
call
xchg
add
mov
bound
call
mov
push
cmpsl
popa
fs
dec
clc
in
test
jne
fdivrs
pop
loope
pop
icebp
xchg
sbb
pop
jl
cld
repz
fldenv
cmc
xor
orl
sub
push
or
repnz
cmc
jbe
idiv
inc
scas
and
mov
lock
ret
pop
dec
mov
mov
mov
cmp
les
xorb
test
jge
dec
cmp
inc
icebp
add
fs
pop
jmp
sub
mov
scas
xchg
dec
test
sarb
mov
rclb
scas
xchg
mov
je
icebp
jae
fistl
out
lea
mov
std
sarb
pop
adc
loopne
divb
in
jns
out
lret
xchg
sub
aam
mov
xor
cltd
pop
mov
jmp
bound
loopne
or
xor
dec
mov
jbe
std
mov
popa
pop
cs
xchg
fwait
ds
ret
inc
push
lret
imul
xchg
dec
jg
lods
mov
lahf
flds
inc
pop
loopne
lret
test
insl
push
out
scas
cmc
add
cmp
dec
shr
std
in
mov
stc
and
or
jo
btr
add
mov
and
or
nop
fcomps
js
cmp
and
add
movsb
dec
ret
mov
pop
popa
pop
adc
jae
mov
mov
rol
sahf
dec
mov
sbb
pop
fwait
ss
mov
dec
aad
sbb
pop
addr16
xchg
jno
and
sub
enter
mov
repnz
daa
pusha
movsl
clc
adc
mov
jb
sbb
push
outsb
daa
adc
adc
adc
pop
int
add
xchg
mov
inc
or
cmp
mov
cmp
adc
dec
xlat
adc
mov
negb
cltd
and
add
je
popa
fs
mov
lcall
mov
fnstcw
xlat
les
jmp
push
push
ds
mov
fnstenv
cltd
dec
inc
lret
cmp
mov
mov
mov
popl
les
xor
leave
xchg
fistps
sub
mov
mov
pushf
sub
inc
outsl
dec
pusha
jno
ret
test
fstps
pop
mov
pop
les
leave
in
into
je
mov
mov
adc
inc
cltd
mov
cmp
es
inc
testl
add
mov
insb
inc
out
sub
movb
jb
lds
sbb
cmp
cmp
mov
mov
sub
xlat
and
pop
xor
jp
or
jne
sbb
int
lock
push
pop
les
pusha
xchg
pop
mov
pop
add
xchg
and
push
imul
sbb
push
xchg
adc
mov
loope
xchg
pop
xchg
mov
add
push
iret
loop
mov
add
je
mov
pop
xchg
cld
xchg
les
sbb
or
jb
cmp
ds
call
xor
lods
jb
imul
jecxz
sti
jmp
jne
fildl
mov
int
cmp
cmpsl
fidivrs
sub
inc
lods
sbb
lds
les
int3
cmovs
cmc
sub
mov
sbb
mov
push
data16
movsb
mov
outsl
jne
mov
adc
cmpsl
sub
aas
test
je
fcos
sbbl
les
in
push
sbb
adcl
ret
mov
dec
xor
xchg
cmovnp
test
enter
scas
sub
leave
les
lahf
pop
insb
lcall
js
sub
push
lret
ss
pop
cld
push
icebp
adc
ds
es
xchg
and
test
jmp
sahf
fnstcw
mov
les
push
insb
jo
enter
cmp
inc
fidivrl
xchg
or
inc
fcoml
mov
jmp
and
or
lods
pop
mov
inc
dec
int
std
aam
cld
dec
jns
gs
aas
scas
ljmp
xchg
bound
inc
orb
lret
pusha
mov
lret
pop
or
in
in
inc
jmp
stos
fldenv
mov
test
das
xchg
pop
insb
fstpt
out
xchg
or
mov
clc
imul
test
addb
push
sbb
andl
dec
in
xlat
mov
sub
xor
mov
sub
rclb
adc
sub
push
add
mov
mov
std
mov
rol
pop
subl
push
testb
dec
xor
jnp
loope
movsb
mov
sub
repnz
add
daa
add
in
push
mov
loopne
pusha
add
js
loop
aas
adc
inc
push
mov
push
andl
lods
xor
add
sti
xor
sbb
cmpsl
pop
xor
out
inc
add
mov
inc
inc
dec
rcrb
out
loope
mov
inc
int3
and
dec
andl
aas
ljmp
rep
test
repnz
push
andb
xor
xchg
adcb
xchg
xchg
cmp
sub
enter
add
rcrb
stos
mov
aam
popa
imul
loope
xor
xchg
cmp
or
mov
and
inc
popf
fsubrs
fidivs
cwtl
adcl
xchg
lret
mov
mov
or
push
shrb
rcr
aam
pushf
call
lock
int
mov
dec
sub
lret
cmpsl
sarb
fs
push
push
mov
xchg
bound
sub
cld
repnz
aaa
bound
adc
stos
mov
ret
sbb
rolb
fldl
movsb
clc
dec
dec
mov
fcoms
call
mov
push
push
orb
idivb
loopne
cmp
scas
mov
pusha
es
mov
test
add
lods
pusha
sbb
imul
cmp
insl
dec
mov
daa
fisttpl
mov
sbb
dec
jl
mov
cmp
mov
aam
dec
cmp
rcr
je
loope
fsts
lret
sar
ret
push
pop
pusha
and
outsb
out
pop
adc
sti
xchg
mov
or
and
aad
arpl
cwtl
adc
and
insb
fsts
movsb
scas
adc
addr16
inc
or
push
in
mov
les
cmc
lahf
pop
inc
sub
jmp
out
mov
out
movsb
fildl
dec
and
dec
stc
scas
jecxz
mov
cmpsb
xchg
jp
adc
add
stos
insl
mov
add
cwtl
mov
cli
push
call
pop
add
and
mov
jle
and
popa
negl
shrl
inc
hlt
popa
lcall
fmull
scas
enter
clc
mov
loopne
dec
pop
divl
mov
mov
mov
and
sbbl
cwtl
pop
push
fiaddl
cmc
test
or
pop
ret
xchg
xor
aam
test
mov
push
xchg
cmc
fistps
aas
pusha
mov
stos
inc
dec
subb
or
push
cs
and
outsl
push
push
xor
sub
dec
xchg
inc
xorl
movsb
push
loop
push
sbb
out
sbb
jecxz
cli
test
loopne
pop
cmp
xchg
in
pop
test
fsubp
pop
ja
sbb
dec
shr
js
popf
xchg
fwait
ljmp
sub
lock
mov
cmpsb
inc
sbb
jg
mov
lods
lret
outsb
jmp
int3
nop
fidivrs
cmp
repz
inc
mov
cld
pop
cmc
sarb
mov
jle
hlt
xchg
mov
sub
pusha
lcall
in
xorl
jbe
and
sub
testb
adc
pop
sub
jbe
pop
sarl
inc
addr16
into
in
or
addr16
dec
rclb
mov
dec
aas
mov
mov
test
loop
iret
mov
icebp
xor
insb
gs
lods
ret
and
gs
out
jb
sub
mov
idiv
inc
movb
pop
pop
jge
xchg
imul
push
pushf
cmpsl
pop
inc
pop
or
shll
or
xor
push
and
xor
sbb
xchg
int3
xchg
jp
and
ds
aad
ror
imul
ret
sub
xchg
and
movsb
add
fisttpll
push
and
jns
outsl
inc
mov
mov
out
mov
mov
dec
jg
push
mov
repnz
add
sub
jg
mov
rcl
cmc
mov
ret
int3
insl
add
mov
push
mov
add
out
adc
loopne
sahf
add
movsl
popa
andl
in
adc
bound
std
lock
stos
add
sbb
fcmovne
test
mov
or
adc
xchg
mov
adcl
pushf
ret
sti
and
jmp
mov
enter
loopne
inc
in
mov
adc
test
dec
xchg
xor
xchg
push
push
flds
jl
cmp
rcrb
scas
push
add
dec
hlt
icebp
add
enter
sub
mov
jbe
xor
or
pop
push
paddusw
enter
push
cmp
pop
jo
cmp
push
xchg
insb
ljmp
sbb
jecxz
iret
stos
into
mov
ret
and
out
dec
fisubl
inc
mov
or
push
add
mov
jmp
or
xor
ja
mov
jle
push
adc
push
push
pop
pop
fstps
jno
or
jge
fists
inc
pop
jmp
in
test
test
loopne
cmc
jmp
mov
dec
lods
repnz
lret
inc
jns
cltd
dec
jecxz
mov
sahf
inc
incl
in
in
push
inc
or
cmp
cmc
mov
mov
inc
test
xor
stos
pop
aas
mov
cmpsl
lods
cli
pop
loop
sbb
xchg
or
sahf
mov
in
popa
das
mov
push
dec
daa
mov
xchg
adc
stos
int
cli
adc
outsl
loop
hlt
mov
inc
mov
movsb
stos
rcrb
mov
sub
cld
in
loopne
cli
leave
dec
and
data16
adc
mov
jl
jne
lret
cmp
mov
mov
pop
lea
sub
sub
xchg
inc
lea
push
fistl
gs
mov
sub
ljmp
mov
hlt
jmp
es
lret
loope
pop
fistl
popa
and
inc
sti
inc
sbb
push
addr16
adc
jge
push
mov
stos
jg
leave
mov
mov
add
mov
ds
xor
inc
add
ficoml
lcall
scas
sub
xchg
sub
fdivrs
ljmp
mov
push
xchg
ss
mov
int3
add
sub
and
push
mov
rcll
out
mov
add
add
xor
xor
or
arpl
lods
sbb
mov
pop
xor
xchg
aas
mov
into
add
pop
fldcw
add
loope
push
stos
jg
xor
fsub
mov
mov
pop
aaa
dec
cmp
mov
mov
addb
mov
nop
push
pop
ja
mov
push
mov
aad
add
aam
lods
and
add
scas
push
jne
xchg
test
xchg
sub
mov
inc
or
adcb
inc
rcll
or
daa
cwtl
cmp
std
aad
mov
sbb
and
cwtl
xchg
cmc
movl
mov
and
push
ja
jecxz
xchg
rcrb
push
lods
xor
inc
dec
mov
ljmp
jbe
fcom
sub
cmp
sbb
mov
cltd
shl
mov
out
jae
arpl
daa
sbb
cmp
inc
mov
push
mov
fists
leave
test
js
xchg
pusha
jle
jl
jl
fldt
loop
inc
lds
mov
orb
add
in
xchg
stos
xor
push
arpl
test
movsb
cli
repz
hlt
sbb
mov
mov
mov
repz
dec
jne
push
ds
movhps
dec
lcall
sub
cli
std
jns
pop
repnz
pusha
push
es
inc
lcall
stos
fincstp
push
and
xor
dec
add
or
mov
mov
mov
cli
push
lock
mov
xchg
inc
stc
lock
flds
loope
add
jge
in
in
mov
mov
aaa
bound
jbe
push
push
std
int
int3
test
movsb
dec
or
inc
or
aas
ss
mov
xor
sub
test
daa
jle
mov
xor
jo
mov
je
daa
sbb
xlat
outsb
sbb
xor
and
mov
push
adc
cmpsl
das
fldenv
and
cmp
or
jp
out
lock
dec
cmp
adc
sbb
jo
cvtpi2ps
out
mov
into
push
ds
push
lds
or
sub
jb
es
push
shll
jb
pushl
popf
mov
or
mov
or
xchg
into
adc
push
pop
mov
adc
jge
mov
push
sub
insb
jb
pusha
aad
push
out
jmp
or
fcoms
xor
pop
jnp
and
push
aad
inc
nop
mov
pop
jo
cmp
dec
gs
cmp
inc
fs
inc
stc
lock
mov
xchg
inc
test
in
jno
shrl
insl
scas
leave
mov
cmpsb
mov
pop
stc
sar
adc
ljmp
add
pop
xchg
mov
in
cltd
add
dec
push
sub
xorb
cmp
and
sub
add
leave
dec
sbb
xlat
mov
mov
popf
mov
in
fimuls
pop
adc
fisubrl
sbb
lret
dec
wrmsr
jne
scas
jns
mov
in
lock
pushf
js
lods
adc
aam
ret
inc
mov
cmp
xchg
pop
inc
mov
jne
repz
test
pop
sub
mov
call
out
jge
jecxz
outsb
inc
or
inc
out
bound
cs
push
aad
mov
imul
sbb
mov
pop
rcrl
in
and
shrb
std
sub
add
sti
leave
jb
rorb
sub
data16
mov
mov
inc
jb
into
xrelease
ret
lcall
cs
lret
adc
iret
inc
inc
shrb
into
je
leave
dec
dec
mov
dec
movsl
popf
sbb
mov
and
inc
push
mov
push
arpl
les
push
imul
test
lods
add
aam
out
mov
scas
daa
cmc
lahf
jne
aad
ss
arpl
andnps
loopne
or
das
out
mov
and
mov
popa
andl
xor
in
test
sbb
inc
lods
fsts
and
sarb
outsb
lods
jg
fistpll
mov
add
sub
dec
ja
rcll
dec
pop
cltd
push
cmpsl
inc
jns
divb
or
or
clc
lahf
and
add
mov
push
sub
jle
sbbl
inc
mov
or
sub
aam
jle
pushl
add
and
xchg
lods
mov
and
mov
sub
les
inc
mov
test
lret
fbstp
lahf
push
mov
mov
fs
or
xchg
inc
fwait
and
shll
xchg
fisttpll
stos
fld1
in
cli
mov
mov
push
pop
jno
dec
stos
and
in
inc
xchg
dec
or
mov
cltd
stos
arpl
jp
int
pop
scas
in
sbb
mov
inc
rcrl
movmskps
stos
or
pushf
repz
or
sbbb
or
cmp
dec
lcall
out
adc
fnstsw
xor
es
mov
leave
push
push
cmpsl
add
jns
cmp
mov
bnd
mov
into
mov
je
push
xchg
scas
ret
adc
push
ret
push
or
shrb
out
adc
lods
mov
inc
inc
aad
dec
neg
sbb
sarb
adc
cmpsb
int
or
mov
jno
dec
pop
rclb
sbb
sbb
mov
cmpsl
pop
mov
fldln2
js
popf
test
mov
or
and
xchg
stc
dec
data16
pop
lcall
sbb
fwait
sbb
into
xor
adc
lods
mov
sub
push
inc
push
sub
shlb
nop
push
sbb
dec
xchg
addr16
pop
pop
push
shrb
in
incb
idiv
pop
xor
xor
les
push
movsl
push
mov
aam
mov
adc
iret
pop
sbb
jnp
or
xchg
adc
jbe
stos
mov
or
adc
cltd
push
jecxz
dec
les
int
movsb
push
mov
sbb
sub
xor
roll
decl
sub
mov
mov
dec
mov
ljmp
pushf
dec
test
or
daa
jg
movsl
jb
xchg
xchg
cmp
sub
push
inc
mov
test
fwait
loop
aam
or
or
in
ret
adc
or
or
icebp
ret
int3
addr16
rorb
addr16
dec
lahf
inc
icebp
jg
xor
dec
lds
ret
xchg
mov
xchg
xchg
scas
clc
xchg
je
or
in
mov
mov
mov
mov
shlb
scas
dec
movsl
mov
out
and
pop
sub
push
flds
push
add
push
movsb
xor
sbb
and
in
hlt
push
push
xchg
push
add
in
ficoms
idivl
call
xchg
push
popf
mov
dec
ss
jmp
dec
cmp
jp
lds
data16
and
in
mov
inc
lods
xor
xchg
lock
pop
add
mov
adc
xor
aas
flds
js
in
sbb
loope
ret
jns
pusha
mov
les
dec
xchg
or
outsl
xchg
jge
fsubrl
imul
xchg
push
pop
clc
or
sub
in
mov
add
icebp
pop
push
rcl
cltd
xchg
mov
add
xchg
xor
cmpsb
inc
mov
aas
scas
pop
in
sbb
add
mov
cmc
repz
out
dec
xor
dec
insl
jp
jp
adc
daa
cmpl
pop
pushf
dec
ss
mov
mov
mov
je
jo
push
inc
push
cmp
sbb
dec
mov
in
lret
mov
sbb
insl
mov
lock
adcb
imul
and
fdivs
cli
mov
sbb
ljmp
push
addr16
push
pop
inc
loopne
mul
repz
mov
daa
lock
mov
lods
add
cltd
pop
mov
popa
inc
sub
fbld
adc
dec
adc
mov
mov
mov
pop
or
mov
sbb
stos
push
push
jp
xchg
sbb
dec
mov
cli
cwtl
shrl
fucomip
test
rolb
mov
bound
ds
insb
gs
or
lahf
scas
testb
sub
lcall
test
mov
pusha
cmc
imul
popf
mov
mov
xor
sbb
sbb
xchg
sbb
sar
jno
aam
sbb
in
cmp
fs
cmp
rcr
testl
pop
xchg
lret
add
in
jns
fnsave
movsb
inc
inc
jge
frstor
xor
mov
and
inc
jae
xor
push
std
jmp
xchg
test
rcl
mov
outsl
add
inc
pop
andb
stos
push
mov
sbb
lea
inc
jo
pop
pop
les
xor
mov
push
inc
sbb
pop
mov
aaa
pop
sbb
fstpl
inc
pusha
xor
addr16
jmp
jecxz
pop
jno
add
add
or
mov
xchg
roll
adc
aaa
ja
or
cmp
mov
ret
add
imull
movsb
dec
sbb
in
jecxz
xor
push
mov
jg
imul
loope
jb
mov
mov
xor
sub
jmp
js
xchg
push
sub
std
orb
movsl
pusha
cmp
push
shrl
in
cmpsb
inc
stos
test
xchg
inc
mov
pop
in
sub
lret
jmp
into
repnz
dec
data16
sub
add
dec
dec
xchg
cwtl
fdivrl
loope
mov
xor
mov
imul
mov
inc
popf
adc
out
mov
iret
das
xor
movsb
cs
pop
pop
movsb
ss
idivb
lret
lret
sub
aad
lea
in
stos
imul
cld
cmp
push
imul
in
repnz
andl
mov
pop
test
inc
dec
cmp
push
xor
pop
adc
pop
int
lods
sub
mov
cmc
pop
clc
pop
sbb
shrl
sbb
mov
mov
or
sti
xor
sub
sub
movsb
jl
sbb
sub
sti
xor
jae
dec
fstpt
sbb
das
jmp
push
add
in
es
mov
sub
jnp
jp
jo
testl
mov
cmpsb
out
lds
test
dec
mov
mov
ret
imulb
jl
ret
push
in
xor
inc
data16
add
imul
mov
xor
or
out
push
adc
icebp
movsl
sbb
xchg
addr16
mov
and
movsb
mov
jnp
outsl
iret
pusha
inc
insl
mov
cli
or
jmp
dec
ret
mov
and
mov
push
inc
rol
shlb
mov
cmp
lods
cmpsb
cwtl
jo
inc
add
orb
outsl
in
mov
jbe
xor
mov
xchg
push
in
shlb
mov
pop
or
lock
insb
jl
nop
push
and
jmp
rcr
sbbb
sbb
cli
popa
fcmovbe
mov
ret
stos
xchg
xor
or
int
inc
repnz
pop
repz
sbb
pop
pushf
bound
push
push
shrb
inc
shrb
pushf
in
ja
sbb
pop
dec
sub
xchg
cmp
dec
xor
je
dec
mov
rorl
push
jo
aas
imul
mov
pop
loop
lcall
push
or
xchg
or
fdivs
mov
mov
pop
and
enter
cmpb
inc
imul
leave
mov
mov
cmpl
or
xchg
jo
push
fnstsw
scas
jae
dec
sub
xor
dec
bound
rorb
aad
data16
ret
mov
push
int3
pop
ret
or
rolb
sub
push
adcb
imul
mov
repz
loope
xor
sbb
sbb
cmp
sbb
icebp
inc
cmp
sbb
into
sub
sbb
loop
shlb
xchg
push
mov
lcall
fwait
mov
xor
inc
imul
rclb
dec
mov
push
loope
in
mov
xor
pusha
pop
jo
das
inc
stos
mov
push
adc
test
lret
pop
mov
cld
cmp
insl
add
jno
adc
push
jae
push
repnz
ljmp
sbb
orl
js
mov
pop
pushf
mov
push
mov
mov
icebp
in
xchg
imul
sub
add
insb
cmpsb
mov
cmp
dec
pop
outsl
and
adc
fs
movzbl
nop
push
sarb
iret
xor
sub
scas
pushf
mov
xchg
inc
daa
out
jne
pop
jae
neg
das
mov
in
push
pop
hlt
and
insl
mov
add
repz
sti
rolb
popf
into
negl
xchg
xor
cmc
test
mov
cmp
fsubrp
repnz
imul
or
iret
shlb
scas
nop
mov
dec
cmp
and
iret
add
je
imul
sub
cmp
sub
push
cld
lret
add
out
lcall
jne
jne
push
cmp
xchg
lea
test
add
push
lods
inc
mov
pop
add
pop
fistpll
out
xor
inc
and
lcall
in
cmp
dec
sub
test
sar
xlat
fnstenv
dec
repnz
xchg
xchg
xor
or
popf
and
inc
imul
lahf
mov
mov
bound
aam
imul
jae
push
push
es
je
jmp
iret
jge
and
leave
sub
pop
inc
pop
popw
ret
orb
mov
push
xchg
xchg
or
hlt
jno
and
dec
cmp
and
xchg
test
pop
xlat
mov
cld
adc
xchg
fsincos
mov
mov
lcall
scas
mov
rorb
mov
sbb
push
sbb
in
add
add
mov
popa
in
lds
mov
jecxz
fstpt
or
into
cmp
adc
std
xor
scas
pushf
cmpsb
int
loop
cs
rcrl
pop
and
loope
lret
mov
rcrb
sar
imul
add
cmp
inc
sbb
repz
jle
pop
fadd
add
iret
popf
in
push
jge
jns
cmp
sbb
or
mov
insl
mov
and
jb
cmp
loop
pop
lods
addl
aas
ret
pop
fsubp
adc
dec
ficoms
clc
sub
and
fistpll
xor
pushf
pop
aam
and
loopne
fsubs
adc
add
or
ss
imul
mov
lods
sub
xor
xchg
pcmpgtb
jb
pushf
ret
test
cmpsb
cltd
mov
mov
add
les
add
jg
fs
rolb
mov
jnp
cmc
dec
ret
into
hlt
push
mov
movsb
mov
pop
sub
dec
out
or
sbb
shrl
out
out
sub
mov
sub
mov
fwait
outsl
mov
rcl
xlat
sahf
fwait
and
pop
scas
pop
sti
push
gs
loopne
xor
lret
outsb
inc
push
ljmp
jl
jp
cmpsb
mov
sub
jmp
xor
shl
dec
loop
mov
dec
sbbl
xor
xor
or
push
mov
sbb
or
cmp
mov
mov
neg
fs
cmp
inc
xor
int
mov
je
hlt
inc
push
xchg
dec
or
or
jbe
sub
sbb
or
mov
jg
pop
add
xchg
fs
cli
loop
shrl
pushw
jmp
or
or
add
jl
dec
and
or
stc
call
jnp,pt
mov
push
or
mov
lods
cmp
ficoml
xor
ret
inc
jge
adc
mov
dec
fsubr
pusha
mov
movsb
jp
jge
lods
pop
mov
inc
jge
pop
scas
insl
cmp
dec
xor
rolb
pop
mov
rcr
imul
cltd
fadd
fwait
rcll
cmpsl
mov
je
xchg
imulb
sbb
xor
lock
mov
cmc
cwtl
xor
imul
das
orl
adc
jne
dec
fsubr
stc
stc
inc
pop
icebp
cmp
mov
dec
pop
mov
and
lret
pop
fwait
cmpsl
imul
sahf
sarl
inc
cmp
adcb
fisubs
orl
out
mov
out
mov
aas
movb
lea
or
ja
test
mov
leave
and
faddp
jg
lahf
ficoml
pop
dec
or
das
cmp
lret
and
lea
pop
dec
js
jecxz
and
or
jecxz
sub
pushf
insb
lcall
outsl
mov
or
pop
lods
mov
stos
enter
pop
xor
andb
cld
cmp
test
fadds
lods
push
inc
test
pusha
cltd
and
and
ds
or
mov
fidivl
loop
add
ret
pop
pop
jno
lods
or
and
jmp
push
or
xchg
pop
inc
jno
adc
add
xchg
dec
adc
loope
insb
mov
push
fldl
mov
lahf
cli
sbb
sbb
inc
imul
mov
mov
out
mov
add
adc
jae
and
add
dec
popa
or
xchg
int
mov
add
sbb
lret
int3
xchg
dec
hlt
popf
fistl
xlat
inc
jbe
xchg
rorb
and
xchg
xor
sbb
movsb
cmp
mov
ja
repnz
push
in
mov
aaa
flds
sbb
neg
or
mov
nop
push
jle
insb
clts
sbb
in
sub
push
inc
jo
pop
insl
adc
fisubrs
sub
shrl
or
pop
and
inc
mov
inc
sub
aam
or
jecxz
sub
sbb
xlat
adc
jne
shlb
jge
mov
movsl
test
ret
sbb
push
xorb
jl
std
scas
xor
sbb
mov
add
pop
loope
pop
xchg
jb
push
clc
sbb
mov
lea
xchg
mov
leave
push
inc
add
lds
js
imull
mov
push
push
sbb
bound
mov
add
fisubs
jne
mov
inc
cmc
jge
and
pop
call
lahf
popf
movsb
pop
jle
pop
lds
out
out
call
stos
mov
jl
and
sbb
adc
cmpsl
inc
xchg
outsb
fisubrl
out
push
pop
jecxz
sub
add
xlat
mov
sbb
sub
mov
sbb
inc
dec
sub
test
sub
shrl
cmp
mov
jp
jmp
rcll
xchg
sub
or
popa
cmp
adc
int
aam
push
cmpsl
push
insl
out
mov
pop
lock
sarb
xchg
mov
std
inc
inc
popf
mov
sub
sbb
xchg
xor
sub
lcall
xchg
mov
sbb
xor
mov
repnz
inc
xor
es
in
xchg
and
rorb
aaa
imul
pop
or
xor
sub
scas
or
xor
stos
int
loop
cli
sbb
lods
sbb
iret
in
cwtl
sub
movsb
lret
daa
jmp
add
scas
imul
out
pop
outsl
push
xchg
pop
sub
lods
sbb
sbb
inc
mov
and
mov
lds
hlt
xor
aaa
adc
cmc
rcrb
out
jecxz
xor
pop
pop
xor
xchg
inc
fwait
mov
movsb
mov
cmp
xor
out
adc
cld
inc
mov
and
mov
ljmp
add
in
ss
jo
xorb
xor
add
leave
loop
lods
fidivrs
lahf
jecxz
stos
dec
fwait
int3
out
push
adc
aam
lahf
aad
xorl
sub
lcall
xor
aas
sub
pop
test
lea
das
fisttpll
inc
dec
in
cld
cltd
cmp
std
sub
add
cmp
mov
pop
cmpsb
xor
cld
insl
xchg
nop
jge
icebp
jo
adcb
adc
cmp
jns
lock
fwait
jmp
ret
mov
rolb
lock
jp
sbb
cmpl
call
jo
jl
aad
and
add
adc
mov
je
push
mov
rcrl
les
push
leave
lock
push
jmp
add
or
dec
mov
in
pop
mov
es
adcb
test
sub
faddl
pop
jae
push
cmp
xchg
mov
cmpsl
push
jno
inc
xchg
mov
inc
dec
aaa
iret
ret
mov
adc
ss
jg
xor
cld
mov
dec
dec
xchg
shrl
xchg
ljmp
mov
pop
cmp
fstl
sub
fldcw
inc
dec
stc
mov
or
sub
mov
in
xor
sbb
inc
in
lahf
and
mov
enter
mov
popa
imulb
movsl
push
push
insl
insl
in
call
xchg
movsl
aas
clc
mov
mov
loope
or
shll
insb
xchg
inc
push
mov
push
push
push
xchg
in
outsb
lock
xchg
out
mov
out
pop
loop
out
ja
js
and
pusha
cmp
push
inc
mov
mov
fldenv
mov
jecxz
cmp
movsl
jmp
push
push
push
call
sbb
rcrl
arpl
push
jg
cli
mov
out
pop
subl
outsb
add
ja
lds
ror
mov
repz
cmpsl
push
cmp
lahf
testb
aad
ret
mov
dec
fadds
dec
dec
sti
xor
aas
pop
mov
leave
push
mov
outsb
sbb
adc
fwait
mov
mov
mov
movb
add
sti
popa
fdivr
xchg
push
inc
sub
push
into
push
xor
aaa
adc
jge
push
ret
inc
and
shll
je
jo
jg
pusha
sbb
ret
mov
xor
sub
add
icebp
and
add
mov
pop
fadds
clc
fs
sbb
add
add
loope
loop
jp
pop
xchg
ftst
pushf
jno
pop
in
sub
dec
std
jns
push
insb
movsb
jge
mov
pop
gs
leave
sub
into
out
xchg
cmpsl
mov
pop
pop
dec
cs
push
aad
cmpsl
inc
loopne
xchg
cs
mov
rorl
mov
scas
fmul
xchg
out
cltd
inc
bound
addr16
cld
jl
mov
adc
mov
pop
and
pop
cmc
and
mov
mov
jg
jge
cld
inc
cli
cmpsl
imul
mulb
xchg
gs
add
pop
xchg
dec
and
xchg
insb
andb
jb
dec
test
push
jo
lret
pop
divl
popa
push
dec
inc
mov
push
bound
xchg
mull
lcall
out
inc
out
lret
fimuls
and
jnp
insb
or
popa
mov
xchg
pushf
rcrb
scas
lods
adc
lods
fcmovbe
jmp
xchg
sub
mov
imul
mov
jo
or
les
sub
enter
mov
popa
adc
inc
xchg
inc
add
mov
inc
jge
fidivrs
mov
inc
cmp
jo
dec
sub
sub
xchg
outsb
test
jl
ljmp
and
inc
mov
cltd
hlt
test
and
dec
inc
mov
rolb
adcb
dec
lahf
jnp
in
pop
in
das
jo
xchg
push
pop
sub
sti
imul
lods
jb
jo
dec
mov
int
fdiv
or
pop
jecxz
jle
xchg
lods
bound
test
add
or
das
or
cmpsb
aaa
dec
stos
mov
dec
rclb
ficompl
loope
and
mov
in
mov
aad
inc
ljmp
xchg
fnsave
scas
movsb
sbb
dec
pusha
jle
or
or
fcomp
dec
dec
fmuls
sub
pop
jns
adc
movl
mov
popa
ret
les
lock
pusha
sbb
push
mov
dec
scas
shlb
movsl
fs
arpl
sbb
outsb
cmp
movsl
push
add
xlat
jge
aas
cltd
div
clc
cmc
out
and
out
fmuls
ret
in
xchg
cli
sbb
add
call
xor
fisubrl
push
test
push
lods
adc
adc
xchg
ret
testl
test
cmp
mov
and
cmp
and
cmpsl
sub
cmp
in
ret
dec
bound
push
jno
aaa
xchg
cmp
mov
xor
shll
lods
mov
jo
xor
negl
sub
in
rclb
mov
sarb
jecxz
cmp
xor
daa
adc
xor
inc
or
fdivl
dec
es
push
lret
bound
notb
add
lods
mov
jae
faddp
mov
mov
mov
mov
mov
add
cmp
inc
xchg
jno
bound
in
inc
sub
flds
loop
mov
loopne
lcall
int
sarl
jns
cmp
imul
and
mov
xor
jae
in
jnp
xor
mov
mov
push
ret
aad
jbe
xchg
and
mov
jl
and
mov
adc
cmp
inc
pop
add
stos
jbe
insl
loopne
and
jb
fidivrl
shll
je
push
mov
aaa
add
testl
in
cs
fbstp
cmp
notl
cwtl
pop
cmp
sarb
pop
aas
xor
lods
xchg
scas
ds
push
inc
cmp
gs
stc
xchg
movsl
push
aaa
xchg
iret
fnstcw
inc
mov
add
mov
xchg
loopne
loop
stos
clc
xor
pop
add
ds
cmp
sbb
pop
popf
jnp
adc
lret
sti
pop
imul
push
int
and
movsl
cmp
xorl
in
push
inc
inc
jge
stos
mov
sub
pop
mov
icebp
xor
loope
xor
insl
adc
and
punpckhbw
sbb
fs
and
and
cld
outsb
push
mov
jns
adc
mov
mov
push
sbb
jbe
or
lahf
addr16
pop
xlat
fwait
add
into
mov
xor
mov
movsb
cmpsb
lds
scas
sub
xor
test
adc
sub
and
nop
mov
xchg
mov
add
fisttpl
in
aam
std
shr
or
inc
xor
inc
ds
cld
jae
mov
fsub
push
daa
test
pop
sub
dec
leave
sub
out
dec
loop
aam
repz
mov
and
femms
sub
sti
inc
ljmp
push
outsb
pop
pop
out
and
imul
xor
clc
rcrb
mov
leave
xchg
xchg
add
adc
xor
push
ret
pop
scas
or
xchg
scas
jmp
sti
adc
std
cmpsb
popa
inc
dec
arpl
xor
leave
mov
popa
or
adc
xlat
dec
repz
loop
mov
sbb
jp
jmp
int
push
cltd
and
hlt
pop
xor
jnp
pop
mov
es
pop
mov
shlb
xor
int3
pusha
lret
adc
addr16
sbb
pop
jbe
jns
shrl
out
frstor
push
lcall
loope
leave
das
mov
roll
jmp
jg
lcallw
push
push
stc
lsl
sahf
xor
sbb
fimuls
xchg
or
jb
inc
push
and
mov
movsb
sbb
aad
dec
mov
add
leave
pop
pop
adc
lahf
sbb
popa
sbb
xchg
adcb
sahf
mov
xlat
test
aas
xor
cmc
int
jb
enter
inc
ljmp
mov
cmpsb
call
push
call
sahf
je
pop
outsl
cmp
fadds
add
scas
enter
sti
fwait
adc
stc
cmp
aam
dec
mov
pop
or
bound
add
ficoml
je
insb
xor
add
xchg
or
xchg
xrelease
mov
xlat
test
popf
inc
inc
sub
cmpsb
jb
mov
movsl
and
mov
dec
jbe
adc
jecxz
loop
fistpll
ds
out
sbb
push
out
outsb
dec
lods
pop
and
jg
push
dec
and
sub
repnz
ljmp
mov
sahf
stos
mov
sarb
push
subl
loop
sub
popf
or
xorb
sarb
dec
mov
int
sub
or
lock
sbb
dec
sub
jae
xchg
in
js
jge
sbb
xchg
xlat
dec
xor
and
fnstenv
rorl
mov
xchg
test
sub
fldcw
pop
cli
jmp
fs
dec
dec
pop
mov
xor
loopne
fsub
cmp
outsl
fs
dec
sbb
dec
mov
test
and
enter
sub
push
mov
cmc
mov
sbb
push
scas
enter
ds
jge
clc
dec
xchg
leave
js
mov
pop
cmpsb
jnp
push
jmp
inc
push
mov
add
fldenv
aam
shl
repz
in
leave
shrl
mov
aam
imul
sbb
xor
jmp
insb
mov
rol
or
pop
imul
mov
and
dec
xchg
aas
enter
inc
addr16
outsb
and
pushf
movsl
xor
mov
out
paddd
inc
pushf
jmp
clc
mov
sub
xor
xchg
enter
or
iret
mov
add
leave
pop
add
adc
jno
rcrl
mov
cmp
rclb
push
cmp
xchg
imul
mov
int3
loopne
loop
add
imul
loopne
mov
ss
repz
lods
lea
jne
jp
rcrl
repnz
pop
xor
adc
movsl
mov
cmpsl
xor
int
xchg
je
jmp
cmp
mov
sahf
pop
add
jae
mov
dec
movsl
dec
rolb
lea
xor
xchg
mov
lock
push
pop
jecxz
cmp
fmul
mov
jbe
add
sbb
jbe
jo
sbb
push
daa
cmpsl
inc
jg
mov
jp
push
daa
rcll
sbbl
pop
pop
lret
sub
arpl
insl
dec
cmpsb
add
and
inc
and
test
or
rcrl
and
mov
mov
lea
ss
gs
scas
cld
xchg
repz
xchg
add
xchg
mov
cmpb
sbb
ja
pop
jne
xor
movsl
shlb
pop
mov
mov
mov
mov
push
inc
adc
pusha
repz
lret
test
sahf
inc
adc
testl
jle
pop
cmp
jo
sti
mov
mov
insb
push
je
pop
add
shrb
mov
lods
push
icebp
cmp
push
lahf
fidivrl
lds
repz
sub
cld
mov
or
jmp
xchg
adc
lods
test
pop
cli
rorb
dec
inc
cmp
ret
rol
scas
cmp
add
fidivrs
push
inc
fwait
xchg
sbb
lods
cld
or
xor
imul
mov
pop
jge
stos
jecxz
or
dec
icebp
clc
mov
jl
pop
and
leave
sub
sbb
in
pop
adc
in
sub
xor
rorl
or
out
pop
pop
sbb
lret
hlt
daa
popa
outsl
movsl
dec
pop
shlb
flds
jbe
xchg
in
in
cs
xor
cmp
aam
xchg
adc
rclb
jl
fdiv
pop
sbb
pop
rcrb
stos
aaa
sub
sub
sti
ret
cs
aaa
sbb
bound
hlt
jecxz
mov
add
addr16
push
daa
ret
rcll
negb
test
jno
lret
add
rolb
mov
stc
gs
push
xrelease
addl
mov
inc
outsl
fwait
aaa
rorl
loope
fcmovnbe
xor
xchg
lcall
sbb
xor
icebp
in
push
jg
pop
dec
imul
mov
shlb
or
and
fcmovb
sub
cmpb
das
addr16
mov
lahf
xor
in
pop
es
addr16
inc
sub
push
movsl
scas
jg
push
loope
js
in
xchg
mov
push
xor
les
popa
sub
movsl
repz
inc
pcmpgtw
clc
add
adc
scas
jne
inc
cli
sub
xor
xchg
mov
shlb
cmpsb
dec
test
jne
insb
cmp
addb
test
mov
je
dec
and
inc
sbb
call
pop
iret
das
cmp
push
nop
push
jae
out
jns
inc
mov
lcall
stos
int3
lods
pop
imul
scas
mov
data16
nop
dec
gs
mov
sbb
adc
cwtl
mov
xor
mov
enter
data16
or
inc
dec
xchg
pop
mov
repnz
inc
xchg
fmull
lds
movl
inc
cmp
inc
dec
sub
push
or
push
pusha
fistpl
inc
test
stc
mov
loope
mov
mov
adc
fldlg2
or
daa
or
int
cmp
in
in
fisttpll
push
pop
xor
ss
add
scas
and
ljmp
jne
sbb
xchg
dec
push
mov
fisubl
fsubs
stos
sub
das
test
aam
aad
pop
mov
rcr
inc
ficoms
popa
into
mov
lock
fcomp
imul
fiadds
xchg
iret
lret
or
clc
push
xchg
push
call
ljmp
stos
sub
and
dec
lahf
jns
mov
push
cmpsb
mov
sbb
out
scas
in
shl
add
xchg
add
mov
cmpl
lret
pop
sahf
insb
xchg
aas
call
sub
stc
lods
insl
mov
lcall
popa
fdivl
xchg
fistpll
call
adc
push
scas
pop
into
mov
insb
dec
jle
hlt
sub
and
popf
iret
gs
mov
leave
jg
sbb
sbb
inc
cmp
pusha
in
or
add
into
fidivs
push
gs
pop
sub
imul
pop
in
cld
roll
cmp
mov
sahf
lea
add
push
ss
jmp
xorb
subl
xchg
sbbl
dec
xchg
cmpsl
xchg
mov
shll
mov
shrl
jnp
dec
push
clc
out
testl
xlat
dec
fwait
cmc
xchg
cmc
mov
je
cmpsl
and
xchg
adc
rcrl
mov
sub
mov
mov
dec
sbb
xchg
lret
dec
popa
xchg
dec
lret
dec
icebp
cs
sbb
aaa
mov
ja
push
or
dec
subl
xchg
fs
imul
inc
cmpsl
push
test
inc
jg
push
ljmp
mov
repz
call
push
in
sub
xchg
cmp
or
lods
popa
cmp
sbb
cli
xchg
sub
loopne
and
loopne
lret
jns
fildl
pop
sbb
sub
data16
add
stos
andb
in
pop
inc
mov
add
imulb
into
or
or
std
rcll
mov
sbb
add
mov
out
add
adc
subl
in
push
mov
movsb
xorl
sub
stos
push
adc
lock
push
jo
lcall
pop
mov
or
mov
mov
sub
les
movsb
push
test
mov
das
icebp
cmp
mov
rcll
aaa
hlt
outsl
imul
xchg
mov
vunpckhps
lahf
lret
decl
sub
mov
jp
sbbb
sub
mov
stos
loopne
xorl
repz
aam
clc
je
lcall
fstpl
icebp
movl
das
cmp
ret
popf
into
nop
mov
xchg
test
pop
pop
inc
xor
jnp,pn
inc
inc
push
adc
divl
cmpsl
jle
mov
or
add
xchg
xchg
xchg
inc
lods
sahf
push
test
fstpt
xor
jns
dec
popa
leave
fwait
cltd
aaa
imul
test
inc
das
loopne
mov
lret
inc
pop
les
adc
popa
arpl
xchg
inc
shl
loop
test
push
mov
mov
lret
imull
loope
ss
push
rorb
sub
inc
xchg
shrl
push
outsb
mov
fs
pop
out
enter
inc
rorl
mov
or
sbb
jge
ljmp
nop
adc
cmpsb
cmp
in
mov
in
push
addr16
out
mov
cmpsb
imul
mov
cmp
push
cmp
pop
mov
incl
cmp
pop
stos
jp
push
adc
lods
icebp
mov
mov
jns
mov
mov
jns
sahf
into
mov
ds
testl
shrb
daa
cmp
push
arpl
out
jnp
pusha
inc
rclb
cltd
mov
test
sub
lret
movsl
aam
js
leave
enter
cmpsb
add
jns
je
mov
daa
cwtl
fwait
push
push
pop
aad
jae
aaa
pop
dec
add
push
cmc
mov
cmp
mov
mov
xor
or
scas
lds
xchg
jo
imulb
out
mov
or
and
sbb
or
scas
xor
test
sub
pop
dec
jo
pop
cli
cmp
fs
cmp
jb
push
ss
into
sub
sbbb
bound
jnp
movsl
fcoml
addl
sbb
test
insl
mov
pop
negb
dec
pop
pop
add
mov
test
pop
jp
pop
aas
fwait
aam
in
jecxz
sub
inc
xchg
adc
int3
xor
and
outsb
xor
or
push
movsb
mov
mov
xor
pop
es
jle
imul
stos
daa
imul
jmp
out
lock
mov
mov
push
jp
cmp
mov
and
mov
in
pop
add
mov
mov
or
fldenv
add
pop
imul
sub
cltd
mov
incb
push
into
rclb
dec
das
fmuls
fidivs
mov
jge
fbstp
jecxz
jae
in
push
jge
xor
sbb
repz
inc
pop
mov
nop
and
mov
mov
push
dec
aas
fcmovne
lret
mov
push
xor
iret
dec
and
cmpsl
jp
jmp
mov
insb
in
mov
lods
mov
fs
test
fisubs
aas
movb
into
test
lods
dec
jp
mov
inc
push
repnz
mov
cwtl
jae
aam
inc
push
notb
push
or
cli
adc
sbb
sbb
xchg
mov
xor
mov
push
mov
gs
and
stc
pop
outsl
call
sbb
pop
jb
out
pusha
lahf
loopne
cmp
xchg
push
cli
jne
xor
dec
dec
incl
lret
mov
clc
mov
test
mov
scas
cltd
inc
xor
fistpl
sbb
mov
les
pop
push
aaa
mov
mov
jns
mov
push
mov
xchg
add
hlt
test
xchg
dec
in
push
jge
mov
divb
daa
outsb
xchg
mov
lds
js
add
mov
aas
aaa
push
or
lret
push
xchg
shlb
jl
cs
outsb
loope
sbb
push
cwtl
ret
out
sbbb
push
mov
ret
jecxz
xor
stos
cwtl
dec
fdivs
push
icebp
mov
xor
shlb
fildll
mov
cmpsl
pop
add
and
pop
sbb
and
jbe
jo
push
push
scas
push
cmp
cmp
stos
test
lret
mov
mov
and
cld
fdivrl
dec
sub
dec
jnp
xchg
lahf
cmp
cmp
iret
jge
ds
aam
add
lea
sub
nopl
clc
cmc
inc
inc
cmp
sub
mov
cmp
pop
shrl
adc
inc
add
mov
sub
lret
sub
inc
xchg
jns
mov
in
lea
pop
sbb
imull
jmp
idivb
adc
insb
std
ficoml
das
pop
loop
test
mov
adc
sahf
sub
ljmp
jbe
adc
dec
ja
in
in
fsubrl
or
xchg
mov
add
lahf
icebp
lea
inc
mov
in
xchg
and
push
add
pop
imul
push
inc
mov
lods
jno
clc
scas
sub
mov
jecxz
into
dec
pop
fidivl
out
inc
adcl
ja
xchg
jp
sbb
gs
push
xchg
fdivl
and
cmc
icebp
mov
mov
in
imul
addr16
lds
or
mov
lret
fmull
cmpb
mov
push
add
lea
mov
or
xor
jbe
fwait
mov
shll
and
mov
mov
or
int
inc
repnz
xor
data16
shlb
jno
loope
std
adc
int3
cmp
rorb
adc
lods
pop
popl
std
mov
add
or
xlat
in
ja
daa
inc
repz
rorb
stc
sbb
psadbw
cmpl
mov
inc
sbb
jle
and
ror
lahf
and
scas
xor
xchg
mov
and
jns
std
aaa
jge
je
lods
pop
xor
push
or
cmp
iret
push
ret
js
mov
imul
sbbb
sbb
mov
dec
adc
jp
mov
sbb
in
idivb
leave
call
lds
add
jae
mov
or
fidivs
sbb
sbb
test
or
cmpsb
cmp
dec
mov
repnz
mov
mov
lds
adc
outsl
lods
cmpsb
mov
ret
or
scas
inc
stc
adc
xor
pop
fisubrs
push
xlat
clc
int3
cmp
sub
inc
sub
sar
dec
jae
mov
test
les
cmp
sub
ficomps
pop
fldl
sub
or
iret
inc
lcall
fwait
dec
push
ljmp
jmp
mov
adc
mov
xchg
mov
icebp
in
and
test
int3
outsl
push
jmp
jne
add
or
mov
or
stos
or
lea
xor
push
or
and
iret
xor
pusha
lods
xchg
add
aam
movsb
xlat
loopne,pn
test
rclb
adc
cltd
or
xlat
jnp
and
xchg
out
pop
cld
ljmp
or
push
loopne
push
je
dec
jle
mov
pushf
les
loop
sbb
xlat
popa
sbb
inc
cld
scas
cmpsl
inc
stc
jnp
outsb
ds
sbb
add
test
push
add
jecxz
daa
push
fildl
fwait
mov
inc
adcl
xchg
das
cltd
sbb
dec
insl
mov
mov
clc
add
xchg
sub
lcall
movsb
fistl
xor
stos
adc
leave
lock
mov
sub
lahf
mov
mov
add
lret
pop
inc
mov
test
mov
mov
sarl
popf
or
or
jns
insl
mov
fwait
outsb
add
push
inc
test
loop
stos
adc
lret
out
mov
jp
jmp
fwait
push
pop
and
int
sub
cmc
xchg
sbb
and
dec
pop
cmp
push
sub
dec
mov
cltd
push
and
jle
ljmp
and
iret
inc
pop
mov
jne
push
inc
sbb
popa
push
imul
es
dec
xchg
push
or
outsl
fsubrs
add
rcrl
mov
sbbl
leave
sbb
cmp
sar
sub
pop
lcall
js
cmp
xor
pop
and
ja
xor
push
inc
cmp
cld
orl
pop
lds
or
movsl
out
sti
push
jae
testb
pop
xchg
sub
push
xor
cltd
dec
or
mov
stos
ja
sub
scas
jne
adc
push
xchg
in
scas
adc
test
loop
jns
sbb
xchg
leave
fidivrs
adc
jbe
push
enter
lret
jbe
jnp
pop
dec
cld
inc
push
rcrl
cmp
cmp
mov
xchg
xchg
out
popa
insb
jge
dec
inc
xchg
es
adc
push
sub
shrb
stc
js
stos
loope
xchg
push
or
pop
mov
or
rcll
dec
test
pop
in
fsubl
sub
cli
icebp
xchg
loop
call
lea
inc
inc
stos
stc
jnp
cmpl
pop
mov
movsl
dec
inc
cs
in
dec
add
andb
push
sub
jne
xlat
push
lahf
jmp
mov
mov
pop
sti
push
inc
repnz
lret
lcall
mov
sub
mov
jge
push
push
call
icebp
outsl
jne
jle
mov
outsb
or
xchg
and
test
in
icebp
scas
leave
cmpsb
inc
notl
daa
fs
sbb
adc
fildll
stos
pop
outsl
sar
lret
repnz
add
mov
inc
daa
not
out
cmp
nop
xchg
dec
pop
dec
add
jnp
loop
ds
cltd
lahf
sub
cld
cmp
mov
bound
test
cmp
sbb
nop
inc
stos
jae
mov
iret
inc
sbb
test
movsl
jge
ja
cmp
jns
pop
sahf
pop
sbb
cmp
je
add
lret
xchg
nop
add
mov
mov
add
int
movsl
lods
and
out
stc
les
push
addr16
out
mov
in
sub
mov
mov
jno
leave
js
xchg
add
inc
js
jge
xchg
sbb
adc
and
cmp
arpl
jp
jb
xor
ss
xor
outsl
dec
repz
sbb
or
movsb
dec
jecxz
jle
out
or
in
cmpl
sub
rol
je
ja
popf
mov
push
mov
test
pop
aam
int3
mov
sbb
push
pusha
dec
mov
xchg
test
jns
xor
aam
rcrb
addl
mov
iret
mov
loopne
add
or
adc
mov
xor
hlt
dec
lret
stc
idiv
mov
lret
orb
dec
cmc
ljmp
mov
dec
fs
dec
popa
ljmp
imul
mov
xchg
ret
or
xstore-rng
cmpsl
inc
push
and
add
cmpsb
adc
xchg
push
hlt
lock
jl
stos
xchg
shl
in
cmp
mov
dec
mov
sbb
or
dec
out
aad
sbb
and
push
daa
xorl
popa
lock
mov
mov
push
sbb
xor
jmp
scas
jnp
lock
pop
fadd
cmpsb
or
movsl
adc
inc
push
xlat
pop
lds
ds
into
cmp
pop
adc
push
pop
sbb
addl
inc
stos
loopne
mov
add
mov
pop
push
jl
out
jbe
ss
inc
pop
cli
stc
mov
test
xor
inc
repz
cmpsb
xchg
aam
xor
sub
rcll
mov
xchg
enter
jnp
ret
mov
ja
xchg
add
mov
mov
ja
in
aas
inc
xchg
mov
lds
loope
push
outsb
sub
jmp
inc
sub
push
test
sbb
xchg
jae
es
push
das
jb
and
dec
ja
icebp
sbb
push
mov
aam
addr16
jno
call
popf
sbb
frstor
or
fnstenv
je
test
push
inc
jbe
dec
xchg
cltd
dec
xchg
test
ficompl
shll
icebp
lahf
into
jne
adc
mov
sarl
or
adc
hlt
pushf
cld
ret
mov
mov
cmpsl
fwait
jnp
pop
cmpsl
lds
dec
mov
jl
mov
rcrl
lret
xchg
and
js
aad
lock
arpl
sarb
jo
call
push
in
imul
enter
lret
mul
cwtl
gs
sbb
fidivrl
int
imul
aaa
sub
std
dec
in
insb
mov
nop
push
fldcw
clc
xchg
jae
test
mov
int3
pop
mov
xchg
xor
das
inc
insb
lods
mov
outsl
add
imul
cmp
negb
cld
jge
xlat
testb
test
xchg
lret
ja
aam
jmp
push
sub
iret
dec
inc
leave
insb
loopne
add
bound
jno
mov
shrl
push
mov
in
xor
inc
call
xor
dec
mov
lock
pop
and
into
xor
mov
sbb
out
and
xorl
mov
lods
mov
and
rorl
push
adc
inc
jno
stos
fbld
arpl
out
adc
je
sbb
call
mov
push
jbe
jmp
ds
testb
jae
aas
mov
cmp
jecxz
mov
mov
out
das
pop
jns
out
stos
jmp
shlb
cmc
in
push
lahf
sbb
clc
orb
out
pop
lock
lds
vphadduwq
loope
adc
rcl
or
pushl
jg
daa
out
mov
or
ljmp
and
in
lret
mov
lret
xchg
sbbb
jp
add
or
mov
pop
adc
repz
xlat
icebp
scas
mov
xchg
imul
lahf
adc
dec
xchg
sbb
enter
es
push
mov
imul
fsubs
daa
fucomip
pushf
xor
inc
fcoml
push
xchg
fidivrl
pop
push
jns
pusha
jno
mov
cmc
jg
test
jle
fwait
cmc
mov
or
lcall
jb
xlat
les
mov
mov
jg
xchg
iret
stc
dec
shl
fwait
mov
or
mov
sbb
movsl
fists
stc
push
cmp
xchg
add
fdivrl
adc
lods
movsl
cmp
push
or
cmp
mov
sbb
jbe
int
loopne
jbe
inc
inc
out
arpl
shrb
push
jmp
mov
xchg
cmp
mov
xchg
jl
test
and
mov
push
inc
xchg
dec
lret
push
test
fwait
pop
inc
sbb
testb
or
push
imul
aaa
jmp
pusha
stc
roll
ret
push
dec
push
cmp
inc
and
push
pop
and
mov
jg
mov
mov
pop
cmp
shlb
xor
je
mov
loope
fdivs
dec
push
ljmp
inc
adc
out
push
pop
lcall
push
shl
lds
iret
jbe
and
fs
in
mov
ja
sbb
push
jg
mov
sbb
stos
dec
nop
cltd
jno
and
jbe
jl
jge
ljmp
sbbb
pop
xchg
adc
xchg
popa
jge
push
in
xchg
dec
xchg
data16
pop
sbb
outsl
sub
push
xlat
clc
push
jno
mov
mov
fdivp
pop
rcrl
jge
insl
pop
test
cmp
int
adc
addr16
call
xlat
jbe
iret
mov
jne
jbe
repnz
mov
inc
xor
and
cmc
out
and
add
mov
mov
adc
incl
sbb
das
mov
inc
scas
lock
inc
sbb
jbe
cmp
fmull
out
adc
add
cmp
jno
dec
movsl
dec
mov
adc
or
push
push
cmpb
cmp
mov
ret
jae
dec
popa
pop
adc
xchg
out
outsb
movb
jb
imul
in
out
clc
testl
scas
popa
push
stos
popf
mov
sbb
add
bound
mov
mov
inc
lods
shlb
push
repnz
xor
lea
popf
push
movsb
cwtl
ud1
jbe
std
mov
sbbb
cwtl
fisubrl
adc
pop
outsb
dec
pop
inc
daa
iret
cmp
lea
stc
sarb
mov
es
pop
stc
ret
sub
fdivs
pop
gs
les
pop
fiadds
jne
jp
daa
jbe
mov
mull
xlat
test
in
dec
into
mov
loopne
or
movsb
pop
or
mov
push
jno
mov
mov
fldl
into
push
and
sbb
pushf
shl
ss
ss
jbe
dec
rcrb
dec
cmp
push
int
jne
popa
sbb
pop
test
dec
in
aad
sub
mov
mov
sub
cmp
das
push
push
sub
cmp
rcr
push
mov
enter
mov
pop
adc
pop
or
lahf
xor
fildl
sub
mov
xor
imul
mov
jl
push
cs
mov
cwtl
fsubl
push
mov
mov
lds
adc
xor
jg
hlt
push
and
sbb
cmc
push
jmp
out
imul
test
xor
rol
jl
jecxz
mov
mov
dec
push
stc
mov
in
movsl
jb
test
pop
inc
fs
or
leave
jae
pop
mov
cli
pop
inc
sbb
lahf
test
mov
and
cltd
jbe
push
sub
xor
jno
mov
movsb
imul
jle
loope
in
decl
mov
out
xchg
sub
or
nop
mov
ljmp
stos
je
adc
mov
or
and
pushf
faddl
fldcw
fs
mov
jnp
vmulps
bound
mov
scas
shlb
jne
push
adc
fbstp
push
mov
mov
cmp
dec
adc
mov
sahf
into
jmp
add
fs
dec
imul
in
popa
jno
fidivl
jns
or
pop
cli
loope
sub
in
sbb
push
iret
xor
mov
clc
imul
cmc
or
shll
jg
xor
aas
or
data16
adc
daa
and
stos
fimuls
xor
call
mov
add
jno
or
int3
dec
xor
fadds
shlb
cmp
mov
addb
inc
xor
mov
stc
hlt
in
lahf
stc
cld
xor
inc
xor
xchg
cld
fsubs
push
push
xor
sbb
sbb
jo
insb
cmp
cmp
cmc
test
push
repz
leave
bound
push
mov
add
xor
jno
pop
arpl
jge
push
stos
xchg
je
sub
daa
sub
sub
insb
mov
jmp
push
imul
cmc
in
lock
jmp
mov
jmp
stos
jp
sbb
leave
xorl
sbb
pop
adcb
dec
mov
mov
mov
icebp
pop
popf
xor
mov
mov
cmp
xor
int
filds
call
iret
mov
dec
out
jne
pop
jo
add
cmp
jmp
arpl
pop
mov
leave
mov
mov
dec
fmull
out
mov
xchg
ljmp
lock
sbb
fsubrl
jbe
clc
mov
jge
aam
fldcw
scas
mov
and
sub
mov
test
in
push
xchg
ds
pop
fistps
sbb
mov
and
mov
adc
xor
push
aad
mov
push
mov
cmp
insb
fsubrp
iret
fs
push
loope
insb
icebp
xor
adc
loope
sbb
xor
nop
test
roll
push
lea
imul
mov
iret
pop
js
mov
std
in
arpl
sub
in
and
adc
aas
push
ljmp
pop
mov
fdivrs
lds
fsubl
jno
pop
scas
mov
cmpsb
fiaddl
cli
jns
int
lds
dec
inc
aaa
dec
xchg
outsl
push
hlt
or
enter
mov
jmp
or
mov
imul
insl
dec
pop
xor
dec
arpl
add
xchg
dec
shr
add
xlat
icebp
xor
pop
cmc
mov
les
les
dec
into
sub
sahf
sti
test
mov
lret
jmp
scas
dec
adc
dec
push
int3
add
cmc
lods
pop
std
mov
push
add
push
mov
xchg
fmuls
push
sti
arpl
leave
pop
cmp
addr16
fdivp
ror
adcb
sbb
stos
outsb
xchg
xchg
aas
fiadds
fisttps
mov
repz
jge
pop
ret
scas
movsb
sbbl
sbb
aad
ljmp
adc
mov
add
push
loopne
fcomps
ret
add
arpl
jns
fisttpl
loop
xor
aas
mov
je
fidivs
outsl
mov
inc
or
cmc
je
call
fnstcw
test
add
xchg
adc
cmc
dec
jp
xchg
ds
popa
orb
out
inc
pop
jge
adc
fstl
dec
pop
jno
add
mov
ret
jns
lcall
mov
aaa
movsl
mov
int3
push
push
jmp
faddl
mov
lea
shrb
mov
daa
jbe
ljmp
push
add
push
pusha
stos
icebp
and
das
xor
or
xchg
scas
pop
add
out
cld
std
imul
mov
xchg
fisubl
adc
adc
cld
add
xor
andnps
mov
fsqrt
flds
xor
cld
cmpsb
idivb
cmp
stos
jbe
setg
fcoms
rcr
outsb
cmp
ss
mov
test
stos
mov
arpl
fisttps
je
rorl
pop
imul
pop
das
call
push
aas
icebp
je
int
lahf
sahf
outsb
into
ret
dec
jle
das
call
jecxz
icebp
jno
lods
stos
and
lret
xchg
cwtl
imul
dec
sub
adc
orb
sbb
roll
jg
dec
jle
push
and
push
aaa
loope
test
mov
test
shl
pusha
insl
or
dec
sti
sub
leave
rclb
inc
and
jmp
push
sub
xchg
push
mov
push
movsl
jne
adc
lea
shrl
fidivrl
mov
cmp
pop
xchg
cmp
dec
adc
pop
push
or
push
mov
mov
cld
imul
mov
rcr
inc
or
popf
mov
cmp
mov
sbbb
cmpsl
jl
popf
lods
mov
or
mov
cltd
arpl
fbstp
test
mov
stos
adc
add
loop
and
lods
jle
jne
cmc
mov
insl
stos
stos
mov
xor
mov
cltd
and
ljmp
std
cmp
shlb
adc
movsl
jl
mov
and
push
sti
loope
std
pop
xlat
mov
cmpsb
pop
jmp
ss
xor
dec
popf
sbb
daa
jns
inc
xor
dec
test
imul
data16
cmc
aaa
and
xor
fildl
loop
and
int3
repz
mov
out
addb
push
insl
lcall
inc
rorl
pop
add
inc
clc
jecxz
add
jbe
mov
add
lahf
push
sbb
fdivl
test
push
or
push
or
sbb
ss
inc
lret
daa
cmc
inc
out
jmp
stos
dec
and
add
mov
add
mov
outsb
push
shr
xor
mov
hlt
ds
jle
dec
lret
mov
into
add
stc
dec
cld
mov
fwait
std
repnz
clc
mov
repz
movsb
jp
xor
repnz
xchg
je
aaa
loop
mov
push
mov
xor
lcall
or
lds
add
sub
sub
outsl
xchg
idivl
sbb
fisttpll
sarb
clc
or
and
sbb
adc
movsb
fsubrl
cmc
shlb
ja
lret
out
push
push
adc
push
movsb
add
popa
out
addl
sahf
fs
andb
xchg
fdivrl
ret
cmp
and
mov
lods
popf
pusha
sarb
test
xchg
adc
adc
nop
mov
int3
sbb
jno
or
push
enter
jp
daa
loopne
into
adc
in
xchg
push
push
xor
xchg
fidivl
cwtl
dec
les
stos
inc
outsb
hlt
mov
fsub
leave
ljmp
add
mov
or
out
pop
mov
ljmp
pusha
ljmp
stos
fldenv
sbb
push
scas
jecxz
pop
mov
cmp
mov
dec
stc
outsb
sbb
je
adc
pop
lahf
mov
jg
mov
jmp
jb
mov
jnp
pop
lahf
in
je
arpl
aaa
cltd
das
adc
repnz
movsb
ljmp
cmpb
in
and
sub
cmp
dec
xor
jmp
fisttpll
add
jmp
outsb
add
mov
insb
movsb
cmp
mov
cmpsl
add
outsb
sbb
cmpsb
rcrl
mov
leave
outsl
cmp
fiadds
jle
inc
sbb
inc
sub
sbb
stos
hlt
pop
xchg
push
lret
pop
sbb
sbb
pop
add
pop
jle
push
xchg
and
pusha
das
and
sahf
inc
ret
movsb
cmp
lcall
ljmp
mov
lahf
ja
or
subl
stc
adc
mov
mov
and
xchg
outsl
mov
pop
loop
mov
std
addl
popf
andl
enter
push
xorb
enter
add
mov
cmp
jecxz
pop
int3
dec
inc
pop
xchg
aaa
mov
idivb
pop
cld
cli
and
mov
xor
pop
cmpsb
mov
xlat
sbb
sub
sub
sub
dec
sbb
jp
test
sub
push
aad
add
jmp
xchg
lret
in
add
xor
loopne
cli
flds
adc
jns
xchg
mov
xor
adc
pop
or
scas
mov
ret
and
adc
out
shrl
add
push
inc
cmpsb
out
jae
pop
xor
inc
je
nop
roll
lret
inc
sbb
loopne
adc
stc
bound
and
cmp
ror
arpl
xchg
inc
xchg
es
movsb
repnz
outsl
aad
in
adc
fisubrl
cmp
add
mov
push
out
xchg
outsl
xchg
sub
popa
adc
jae
dec
jmp
out
scas
dec
mov
jnp
or
movsb
pusha
dec
lcall
dec
push
xor
sub
mov
adc
addr16
repz
jo
mov
in
test
call
xor
mov
sub
xor
jp
sub
popf
jl
inc
sahf
jno
mov
fcomps
pop
test
fwait
or
flds
shrl
loop
jle
cmp
and
in
jmp
mov
repz
mov
jecxz
sbb
dec
jge
mov
xor
xor
pop
add
xchg
push
arpl
out
das
pop
sti
xor
inc
dec
js
cli
push
sub
daa
adcb
hlt
rcr
sub
mov
scas
cmpsl
in
popf
into
sbb
sahf
das
shlb
mov
pop
cmpsb
pop
dec
cmp
mov
in
jnp
sub
pop
dec
xor
adcl
out
clc
and
mov
cmp
push
icebp
sar
mov
ja
aad
das
xchg
bound
add
or
inc
push
jecxz
adc
jno
mov
lcall
stc
imul
addr16
enter
push
fwait
movsl
outsb
mov
test
in
in
sahf
push
inc
xlat
sub
xchg
inc
nop
repz
add
aam
ja
adc
pop
cld
sub
pop
or
pop
jmp
adc
es
jp
test
in
subb
mov
filds
out
inc
xor
mov
pop
cltd
outsl
cwtl
sti
sub
in
or
and
sbb
pop
nop
push
mov
pop
mov
cmp
std
jmp
inc
shlb
dec
sbb
or
data16
xor
and
pop
packsswb
adc
movsb
mov
pop
jnp
and
xchg
jae
cmp
stos
mov
js
outsb
mov
sbb
adc
mov
and
mov
cmp
xchg
xor
jne
addr16
cmovge
daa
test
rcrl
mov
imul
push
sbb
pop
xchg
aad
dec
ja
daa
stos
cld
hlt
stos
mov
stos
xchg
dec
cwtl
int3
push
or
jg
pusha
add
cmp
outsl
cli
jnp
loope
outsb
ficoml
jmp
inc
andb
mov
pop
push
cmp
int3
dec
or
aad
pop
subb
cmp
das
jne
jo
rorb
aad
inc
out
andl
rolb
in
dec
sub
loop
xor
data16
mov
aam
adc
push
sbb
hlt
andb
mov
mov
aaa
cmc
jae
movsl
xchg
sarb
jecxz
jmp
ja
lds
call
shlb
add
jl
cmp
daa
adc
pop
jg
cmpsb
mov
stos
pop
xchg
adc
movsb
ss
dec
xchg
push
insl
and
xor
in
shr
dec
popf
xor
inc
jbe
test
fs
test
push
cmp
dec
out
sbb
ja
sbb
adc
in
mov
push
mov
mov
sti
loop
sahf
jo
popa
stos
pop
jnp
jecxz
cld
test
rcrb
imulb
push
pop
loopne
dec
mov
pusha
add
push
inc
xor
mov
mov
cltd
dec
jp
out
jp
xor
adc
adc
jp
or
mov
scas
in
fiaddl
repnz
scas
notb
push
sbb
inc
data16
js
daa
call
jg
xor
stc
js
repnz
fmull
cwtl
cmpb
jecxz,pt
into
testb
in
lret
ljmp
adc
popa
in
sbb
push
rcr
dec
mov
pop
lods
fisttps
cmpsl
dec
sbb
xchg
or
loop
outsb
or
cmp
xor
dec
ret
insl
out
mov
leave
xorb
imul
in
mov
pop
scas
cld
insb
pop
or
and
int3
cmp
mov
fwait
ret
cmp
cwtl
orl
xchg
inc
test
inc
lds
out
repz
loope
sub
sub
push
xchg
pop
insb
xor
addr16
add
cmp
pop
or
outsb
or
cs
pop
mov
dec
lcall
inc
or
sub
lcall
xchg
shlb
add
xchg
adc
insl
push
fs
sub
test
mov
shrl
or
jne
cmc
mov
mov
int
int3
vpmacssww
xor
loopne
adc
dec
inc
xor
int
lods
dec
negb
push
stos
adc
cld
fwait
xchg
dec
nop
addb
inc
sahf
jge
cmp
lea
cli
test
jge
icebp
push
stos
jle
push
sbb
aaa
lcall
into
insb
mov
ja
sar
fisttps
fcomps
adc
movsl
movd
mul
mov
cmp
push
sbb
outsb
mov
or
mov
jne
push
imul
mov
xor
enter
lret
addr16
lods
in
iret
push
jge
inc
inc
in
cmp
imul
cmpsl
add
cmpsl
jae
inc
and
rcrl
sub
sahf
adc
mov
mov
jmp
inc
inc
xchg
jg
mov
cmp
lock
and
pop
lods
lods
cmp
adc
andl
lahf
aam
sub
cwtl
or
es
dec
jmp
hlt
pop
jl
cmp
xchg
dec
insb
scas
mov
inc
sahf
icebp
hlt
popa
cmp
fldl
inc
jp
push
test
call
xor
mov
jp
or
lret
inc
jle
daa
jg
cmp
and
out
lahf
jnp
push
sub
mov
sub
adc
push
ret
or
enter
imul
sub
pop
pusha
test
jns
ss
in
arpl
push
test
jle
ja
push
fcoml
push
dec
and
loope
call
sub
fstps
ss
lcall
or
aam
clc
and
ss
outsb
andl
iret
jbe
mov
sbb
mov
mov
add
xchg
adc
mov
mov
clc
dec
add
push
js
jp
add
sub
popa
cltd
es
and
lock
cmp
arpl
push
push
pop
popf
sub
repnz
pushf
js
push
roll
aad
lea
inc
mov
mov
popa
aam
adc
adc
ret
fcompl
pop
in
fmull
or
add
aas
fldt
cli
jecxz
cmp
jno
xchg
test
pop
xor
not
and
mov
dec
fnstcw
push
out
dec
pop
sub
push
clc
fiaddl
insl
push
ficompl
add
xchg
dec
lds
cmp
dec
add
or
push
mov
pop
ret
popf
push
daa
cld
or
nop
imul
push
les
lcall
pushf
ficoml
test
push
subl
imul
les
sbb
mov
test
inc
pop
cld
sub
jmp
add
xor
sbb
push
jg
sbb
or
push
inc
jge
ret
xchg
repnz
xchg
push
adc
hlt
sti
push
cmp
pop
xor
int3
jg
rorb
stc
es
ja
pop
insl
add
push
push
jl
cli
xchg
add
cmp
adc
mov
in
inc
fs
mov
adc
clc
sub
out
dec
aad
jae
outsb
call
mov
scas
xchg
je
and
movsb
sbb
out
xor
xchg
mov
pop
jne
cltd
jge
mov
and
insl
push
dec
clc
subb
mov
movsb
push
stc
adc
xchg
xor
pop
ds
and
add
lcall
cmp
pushf
sti
jmp
pop
imul
jecxz
mov
mov
jo
inc
sub
in
mov
push
add
adcl
mov
dec
loope
shlb
loop
aam
stos
jge
mov
loope
push
stc
repz
andl
les
test
test
sti
in
sub
lds
xor
fucomi
and
sarl
cltd
pushf
lds
inc
or
scas
jno,pt
push
sbb
xor
inc
push
jb
enter
inc
ja
jge
push
lods
fwait
jns
fs
rcr
xor
shrl
add
xchg
ficoml
inc
lret
stos
add
fldl
sti
stos
mov
testl
xchg
pop
test
and
mov
mov
pop
or
push
cmc
dec
sub
and
mov
pop
mov
mov
shrb
aaa
mul
stc
das
adc
pop
xchg
cmp
in
and
xchg
shll
repnz
lea
into
lret
les
sahf
jmp
cmp
aaa
xor
int
add
mov
lods
sbb
pop
xchg
aam
mov
sbb
mov
cmp
dec
cltd
and
and
pop
sub
jnp
movsl
xchg
xor
imulb
push
inc
cli
aam
inc
roll
cmpsl
sarb
mov
inc
sub
test
jae
and
push
jns
mov
add
test
xchg
or
aad
movsl
ret
dec
lock
cmp
lea
push
mov
aaa
or
lods
inc
jo
and
dec
lret
xchg
iret
mov
iret
std
fidivrs
imull
jle
imulb
adc
sbb
lea
xor
cli
adc
or
daa
inc
outsl
jg
dec
mov
push
jge
data16
adc
icebp
lds
movsb
cmp
ja
mov
and
es
addr16
cld
lods
loopne
rorb
imul
sbb
mov
das
jno
jbe
popa
pop
push
les
xor
fdivr
xchg
ffree
fwait
push
jmp
cmpsb
mov
fiaddl
daa
loop
orl
call
pop
cmc
cli
stos
bt
dec
and
jmp
insl
aam
nop
add
adc
sub
or
inc
dec
push
cmp
push
hlt
lret
pop
fchs
test
leave
sub
popa
dec
pop
into
mov
sub
fisttpl
sub
jne
in
jmp
mov
mov
cmpsb
je
imul
or
stc
popw
fsubrs
xor
test
fisubs
sub
jp
mov
ja
lcall
pop
xchg
test
mov
je
and
and
pusha
movsb
out
inc
add
sub
adc
mov
mov
jp
sbb
loop
fwait
pop
push
sahf
mov
lret
test
mov
mov
mov
es
dec
xchg
xorl
push
addr16
imul
hlt
xchg
mov
lahf
add
je
adc
jge
inc
popf
lea
lock
mov
pop
dec
mov
mov
pop
sti
shlb
call
mov
push
adc
push
ret
cmp
lret
xchg
shll
cmp
lods
mov
mov
mov
stos
jl
cmp
aaa
add
faddl
jl
add
lahf
addr16
loopne
dec
sahf
int
jno
sbb
decl
push
iret
and
xchg
push
jo
mov
cmp
ds
dec
mov
andl
mov
xchg
ret
mov
sbb
mov
lret
add
lahf
cmp
bound
mov
push
mov
in
sbb
xor
or
fidivrl
test
hlt
xchg
mov
pop
mov
cmp
mov
ja
fistl
cwtl
dec
sbb
lret
loop
or
dec
mov
adc
and
adc
jns
test
add
out
call
clc
mov
arpl
int3
es
inc
or
push
xchg
jmp
xchg
inc
xlat
cmp
cld
popf
aad
sub
xor
es
je
fs
test
inc
or
and
enter
push
inc
add
adc
cmp
jl
fldlg2
paddsb
lcall
sbb
in
fidivl
loop
cmp
repnz
icebp
stc
mov
jecxz
mov
negl
jl
xor
jbe
lock
and
fcmovnbe
inc
push
pop
daa
and
in
jne
dec
and
ret
jns
sub
int3
xorb
or
enter
pusha
adc
pop
inc
mov
inc
ffree
popf
jb
loope
sahf
xor
ficoml
add
loopne
sbb
es
popa
or
incb
scas
sar
or
ret
fnstsw
aaa
jle
push
insb
lret
dec
sbb
mov
sbb
cmpsl
mov
ficompl
add
sub
data16
jmp
mov
mov
cmpsb
sub
jmp
iret
incb
mov
mov
xor
insb
mov
mov
xor
imul
mov
cmp
ret
icebp
cwtl
lret
push
sarb
lods
and
push
ds
ja
jecxz
iret
pop
push
rorl
mov
jl
dec
outsb
dec
lret
push
daa
jb
xor
dec
sbb
pop
movsb
pop
mov
push
sti
sbb
insb
popf
xor
add
add
sahf
test
jne
ja
pop
lret
stos
cmp
add
sub
add
sbb
lock
xor
imul
test
cmp
cmp
mov
inc
imul
popa
idivl
xor
jae
or
push
jne
mov
cwtl
nop
ret
dec
std
xor
int3
ja
push
nop
test
loope
mov
mov
movsb
clc
nop
cmp
fs
js
xchg
jmp
aaa
jns
pop
or
in
cld
test
int
scas
xchg
pop
stc
xor
add
push
adc
xchg
push
cmp
push
mov
xor
jo
sub
adc
mov
lahf
insl
dec
leave
les
out
cmc
inc
add
sbb
test
mov
add
xor
push
sub
pop
xchg
inc
xchg
enter
mov
push
in
pop
loopne
and
sbb
mov
inc
mov
adc
lods
rolb
mov
icebp
jg
push
cmp
lcall
fbld
mov
fcomp
iret
fsubl
imul
rcr
xor
stos
adc
push
inc
cmc
jge
mov
or
hlt
xchg
aaa
cld
or
jp
pop
mov
cmpb
sub
pop
and
inc
push
lcall
fnstcw
push
jg
fdivs
jmp
jg
push
and
pop
push
shl
sahf
pop
cmc
call
sub
inc
lds
ss
and
xchg
jnp
in
daa
jp
mov
fldenv
push
jp
movsl
cmp
addl
dec
add
dec
jbe
enter
scas
lods
sbb
sahf
cmp
push
lret
sub
lods
fildl
in
shlb
lds
xor
notl
and
jns
lret
test
out
mov
inc
ret
xchg
popa
sbb
lcall
fists
incb
push
mov
cmp
negb
cmp
scas
out
inc
dec
scas
xor
pop
mull
mov
pop
stos
sbb
lret
push
or
dec
push
lahf
mov
mov
lea
add
dec
add
or
or
lods
fs
pop
adc
cmp
aam
les
das
cli
gs
add
dec
lods
cs
or
sti
push
jl
fimuls
rclb
adc
dec
cmp
rcll
and
movsb
cmc
pop
inc
add
mov
cli
jne
sbb
popa
xchg
or
les
cmp
ret
out
insb
frstor
xchg
cmp
shrb
xor
jbe
and
clc
push
mov
clc
loope
and
or
mov
stos
ss
add
jmp
pusha
xchg
or
xor
cltd
lcall
cmp
je
cmp
sub
xlat
mov
in
mov
fwait
jno
cmp
mov
mov
jnp
loopne
mov
dec
or
and
adc
iret
ss
mov
adc
jne
or
in
fistps
fdivl
add
mov
rolb
mov
jl
pop
mov
and
xchg
lds
mov
nop
ds
cmp
in
shlb
dec
mov
push
outsb
in
mov
pop
inc
sub
fs
xchg
push
mov
mov
out
or
pushf
test
xchg
stc
hlt
pop
sti
add
pop
jae
lods
pcmpeqd
nop
pop
loopne
mov
daa
jp
loopne
int3
or
mov
xchg
aaa
popl
dec
adc
mov
testl
dec
xchg
ljmp
cli
mov
add
leave
inc
stos
cmp
cwtl
imul
xchg
loop
inc
lcall
movsb
and
nop
nop
mov
movsb
bnd
cmp
fnstenv
pop
fisubs
rcrb
fcompl
sbb
jns
imul
div
dec
or
jge
gs
push
jae
mov
movb
repnz
jmp
fdivrl
hlt
adc
add
xchg
iret
sub
fidivrl
out
lds
or
test
das
ds
pop
cwtl
imul
and
aas
and
aad
pop
movl
and
lods
out
mov
push
mov
stos
cmpsl
push
adc
push
das
andl
ret
data16
data16
mov
push
fwait
out
dec
cs
sbb
sub
lcall
repnz
push
and
fcmovne
push
and
add
push
dec
lock
and
lds
xchg
mov
and
xor
outsb
popa
shlb
add
cmp
es
frstor
sbb
xchg
cmp
mov
xor
iret
fisttpl
mov
xor
addr16
cld
jg
icebp
adc
arpl
xor
clc
nop
dec
sbb
add
jmp
pushf
repnz
sbb
loopne
inc
clc
outsl
mov
jle
cmpsb
fldenv
push
pop
sbb
and
and
cmpb
shlb
fidivrs
add
push
cmpsl
jns
ljmp
movl
test
call
stos
xchg
pop
lock
insb
or
pop
push
in
nop
xor
test
ficomps
fwait
xor
push
inc
or
cli
mov
mov
dec
xchg
lods
cmpsl
jnp
es
push
jl
test
in
inc
shrl
push
lret
jecxz
pop
imul
les
arpl
xchg
fsubrl
movsb
les
xor
sbb
stos
sbb
jge
mov
gs
call
pop
xor
das
not
inc
fwait
stos
outsb
jno
out
adc
cltd
insl
cwtl
cs
out
jbe
cwtl
push
push
lret
jbe
xchg
es
iret
sbb
mov
jbe
sbb
js
test
cmpsb
scas
cmp
cmc
ror
push
jg
frstor
inc
adc
xchg
push
loopne
pop
imul
int3
call
js
jb
mov
cmp
test
pop
xor
negb
in
xor
jmp
push
bound
nop
pop
mov
add
mov
dec
xchg
mov
jb
lods
ja
leave
push
inc
lock
push
mov
fs
ret
add
mov
leave
out
jo
in
pop
push
ret
xor
cmpsl
adc
inc
and
inc
jbe
or
fs
or
mov
ret
dec
das
leave
jno
mov
mov
out
cmp
mov
add
push
mov
lock
or
push
jbe
mov
jecxz
jb
out
jp
cmp
and
fists
arpl
into
cmp
je
mov
jg
or
push
in
push
pop
rcrl
inc
fcomi
xor
xor
outsl
aas
push
test
test
rcl
adc
xor
icebp
pop
push
data16
adc
mov
leave
mov
jmp
cmp
push
movsl
xlat
fsubl
sbb
mov
pop
out
std
push
pop
into
push
push
mov
gs
punpcklwd
fimull
cmp
enter
jb
aad
cmp
rcr
sub
push
or
lds
xor
add
daa
nop
push
push
and
shl
adcb
ret
sbb
jmp
sbb
push
jp
cld
test
push
xor
xchg
ljmp
lcall
cmpl
cmp
shl
dec
cmp
dec
xchg
jbe
cli
dec
mov
das
or
notl
dec
cli
mov
bound
push
xchg
ds
cmp
sbb
xlat
mov
inc
push
sbb
pop
sbb
arpl
mov
cmpsb
xchg
dec
andl
xor
sub
push
inc
in
mov
mov
lea
and
int3
sahf
push
jmp
aas
mov
inc
push
xor
inc
aas
repz
int
jg
adc
ret
mov
insb
addb
cmp
std
mov
leave
push
sarb
out
mov
inc
xor
jge
add
roll
or
loop
mov
mov
jmp
sahf
inc
pop
pusha
lret
iret
push
pop
sbb
inc
xor
stos
pusha
inc
mov
je
movsl
arpl
adc
cli
adc
cmovp
mov
xchg
movsl
ret
jmp
jmp
std
pop
mov
xchg
mov
xor
mov
aam
or
dec
jge
xchg
pop
dec
fdivrs
sti
clc
lods
jnp
in
cld
add
in
fidivl
mov
push
cltd
inc
and
fcomp
or
cmp
rolb
mov
mov
jb
repnz
out
shlb
cmp
or
scas
leave
push
push
movsl
inc
cmc
repz
jo
or
sub
stos
push
jae
inc
das
xor
lods
inc
add
loopne
add
xchg
aaa
imul
lret
bound
test
ret
mov
clc
sbb
or
insl
inc
int
add
add
lods
std
pusha
xor
xchg
scas
fisttps
cmp
out
push
and
aaa
sub
or
inc
mov
push
cmpsl
xchg
and
adc
test
lock
dec
mov
mov
andb
rcll
movsb
push
popf
loope
test
fwait
imul
scas
mov
in
pop
fnstenv
stos
rol
push
cmc
mov
bound
les
mov
mov
insl
shl
ret
lret
imul
or
xchg
lods
outsl
popa
pop
mov
mov
cmp
cmpl
mov
push
push
mov
arpl
inc
lea
gs
push
sub
inc
push
aad
loop
dec
popa
adc
sub
adcb
scas
ror
push
divl
jno
sbb
ljmp
data16
sbb
inc
gs
call
dec
lock
jb
sbb
lods
js
ret
hlt
jne
xorl
out
or
xchg
shr
sti
cmp
test
add
addr16
mov
add
mov
fcompp
imul
pop
and
test
out
add
pop
mov
lcall
push
fcmovb
movl
std
sbb
inc
out
lret
pop
sbbl
int
xor
xor
push
fsubr
int3
jae
sub
out
hlt
lock
mov
sti
pop
push
sub
jno
leave
popa
rorb
out
mov
out
mov
mov
imul
lret
jns
add
mov
push
pop
dec
out
inc
add
subb
cmp
pop
repz
sub
jb
pop
add
test
or
pop
popf
aam
andl
andb
out
mov
fstpt
mov
imul
push
push
ret
jmp
pop
call
lret
out
and
jae
test
js
insb
dec
sbb
mov
pop
lods
hlt
aas
aas
fsubrl
push
adc
jp
fwait
and
jne
lcall
jo
push
jg
addr16
data16
jp
aad
adc
lock
jp
mov
and
ds
in
in
aas
mov
sti
sbb
cld
or
popf
dec
popl
cltd
jmp
jl
and
mov
inc
mov
repnz
test
les
sbb
and
and
sbb
xchg
cs
sbb
cmc
mov
pop
add
pushl
out
sahf
test
shll
mov
xor
xchg
mov
lock
inc
sub
out
sub
mov
push
xor
test
into
testb
lea
aaa
mov
aas
fldcw
ljmp
call
adc
xorb
xor
pop
push
inc
inc
insl
clc
sbbl
arpl
pop
stos
adc
xchg
push
lcall
mov
mov
sub
aas
jnp
hlt
xchg
mov
xor
pop
add
adc
rol
jb
fwait
sarb
arpl
bound
jmp
aad
test
add
cli
jnp
movsb
sbb
out
repz
paddsb
mov
or
jg
stos
icebp
lock
cwtl
hlt
xor
fildll
sarl
in
into
xorl
xor
in
dec
lcall
stc
sahf
sti
cmp
sub
testb
adc
mov
xlat
mov
hlt
jg
push
or
rorb
mov
inc
adc
adc
in
fwait
cmc
pop
mov
es
xchg
sbb
jp
loope
aas
outsb
gs
adc
pop
js
sub
sub
iret
mov
push
lea
xor
cmpsb
adc
jae
movsb
and
mov
push
push
xchg
fwait
xchg
jae
mov
clc
and
bound
call
cmp
dec
pop
pop
push
jecxz
and
cmp
mov
hlt
andb
push
xchg
xchg
push
arpl
loope
mov
mov
add
push
push
in
lret
pop
xchg
in
in
aas
sbb
test
mov
popf
loop
adc
sbb
movsb
adc
stos
mov
push
inc
jg
cmc
addr16
push
sub
mov
gs
lea
mov
xor
fs
repnz
cmpsl
xchg
rep
jb
jo
sbb
mov
push
cltd
ljmp
add
popf
fwait
hlt
add
in
push
out
jnp
shl
ja
fdivrl
cmpsb
fisubs
sarb
add
nop
iret
repnz
fimuls
cld
mov
rcl
es
fiadds
xor
jno
movsb
icebp
add
jns
push
es
xchg
in
das
or
leave
pushf
dec
dec
ja
in
add
cltd
js
into
test
dec
rcr
cwtl
ljmp
insl
out
popa
push
ret
mov
data16
shll
fmulp
push
lret
xchg
pop
or
cmc
mov
add
arpl
pop
mov
mov
jo
ffreep
inc
cld
insl
mov
push
in
das
pushf
rolb
cmp
xor
pop
sbb
popf
shll
xor
iret
sti
jae
fs
in
sbb
sarb
jo
jl
inc
cmp
lret
in
pop
insl
fcmovnbe
shll
jbe
leave
xchg
inc
std
je
mov
add
sar
add
imul
mov
dec
data16
ret
insl
rcll
xor
repnz
stos
cli
leave
movsb
movsb
jmp
arpl
mov
rcr
xor
int
jb
xchg
pusha
cmp
xchg
adc
int3
jne
push
push
cmp
cmp
cmp
aas
xchg
imul
cmpb
cmp
push
cmp
and
inc
sub
pop
mov
or
aad
sub
fidivrl
xor
fisubrl
adc
pusha
cmpsb
push
lahf
ja
fwait
ret
ss
cmp
cmpsl
mov
push
mov
mov
popf
pop
and
xor
gs
and
test
mov
adc
mov
lcall
push
sbb
pop
outsb
stc
sub
and
loopne
sar
add
aad
push
daa
xchg
hlt
jl
je
repnz
push
add
jmp
cltd
or
icebp
dec
repnz
jmp
ret
jl
ss
or
fucom
lcall
adcl
push
sub
and
loope
xchg
mov
or
mov
xchg
das
push
pop
rorb
jns
icebp
sar
xchg
jns
pop
jns
jle
lret
push
mov
inc
adc
and
mov
pushl
rorl
jp
jae
test
sbb
jae
sub
xor
and
xchg
jo
hlt
dec
or
sub
inc
aaa
sbb
stos
lcall
loope
mov
jne
sub
daa
pop
cmp
mov
gs
inc
cmp
add
movsl
fiadds
adc
jae
mov
add
cmp
nop
mov
aad
mov
adc
or
or
test
push
mov
sarb
into
sbb
test
sbb
gs
lret
xchg
add
xchg
imul
lret
inc
add
loop
ljmp
xor
mov
sub
int3
xor
cmpsl
aaa
loop
clc
and
and
les
ret
ret
in
dec
adc
xchg
xor
inc
pop
dec
inc
jmp
pop
add
das
adcl
and
and
negl
lret
jbe
xchg
adc
jo
cmp
rolb
jge
xchg
lahf
and
xchg
pushf
add
or
mov
out
data16
mov
sbb
mov
pop
xorl
lcall
repnz
out
jle
mov
addr16
aas
xor
jb
test
cli
pusha
mov
addr16
loope
mov
jno
pushf
add
fsubl
adc
push
xchg
lret
pop
test
mov
jle
or
lret
test
es
nop
loop
inc
data16
xchg
inc
inc
insl
add
pop
sbb
sbb
and
ret
cwtl
arpl
lea
and
lahf
push
loop
mov
jns
shll
test
repz
cld
xchg
jne
nop
frstor
or
add
dec
push
popf
or
insb
pop
cs
or
add
cmp
sub
inc
hlt
jo
std
ffree
mov
out
jmp
jle
pushf
lea
pop
inc
inc
inc
test
lods
stos
and
imul
xor
loop
pop
or
xchg
and
and
mov
sti
push
mov
sub
adc
mov
mov
orl
and
loop
mov
mov
imul
je
mov
push
mov
fdecstp
mov
mov
enter
test
pushf
scas
jecxz
orl
mov
pop
push
lods
push
inc
mov
jae
mull
jmp
inc
sti
inc
mov
fs
pop
xchg
dec
xchg
aas
mov
sub
lret
outsl
js
test
xor
sti
jge
movsl
int
ja
push
jnp
ja
inc
mov
pop
adc
andl
loopne
push
aaa
jb
sbb
orb
and
cld
jl
dec
sub
mov
repnz
int
pop
xor
das
cwtl
push
add
fcomip
pushf
sub
mov
rcrb
push
stos
ja
movsl
mov
in
loop
push
cmp
outsl
rcrl
jo
adc
ds
sti
es
aas
or
outsb
aaa
stos
sahf
adc
xor
fsubrs
cwtl
cmp
clc
call
jl
loopne
cmp
xor
or
movsb
dec
push
adc
xor
sub
in
cs
decb
adc
repnz
inc
xchg
jmp
xchg
mov
fmull
out
push
loope
cmp
xor
mov
aad
and
testb
aad
mov
xor
sub
sub
out
jecxz
stc
mov
xchg
adc
xchg
xor
mov
enter
sti
cmp
or
xchg
push
jbe
sub
dec
int
cmp
pushf
jmp
sbb
jb
sbb
or
in
push
add
fisubl
adc
sbb
jecxz
or
orl
jge
dec
sbb
and
xchg
orb
cwtl
add
insl
int3
test
std
dec
xor
mov
adc
lods
mov
cs
enter
or
jbe
daa
addr16
popa
rcrl
sbb
ljmp
xchg
sbb
cwtl
cs
jne
dec
mov
cmp
out
xor
ljmp
pushf
sub
mov
mov
cli
call
icebp
mov
mov
orl
adc
test
fldenv
pop
subb
cmc
or
jno
sub
test
mov
xchg
mov
push
or
stos
cs
jae
mov
leave
push
cmp
leave
xchg
xchg
or
repnz
adc
rorb
aas
js
push
jns
ds
out
pusha
xchg
mov
cwtl
lods
frstor
xchg
in
push
stos
mov
je
push
mov
pop
mov
add
scas
movsl
xchg
lcall
sub
mov
ja
xchg
int
out
out
adc
cmp
shrb
cmpsb
fstps
out
cmpsl
sbb
int
lods
and
insb
pop
mov
pusha
test
andl
dec
test
xchg
cli
xor
movsb
or
out
dec
hlt
pop
pop
push
xor
pop
xor
filds
mov
cmp
adc
jge
add
mov
bound
jg
arpl
popa
inc
xchg
notb
xchg
cmc
push
into
pop
xchg
or
lcall
mov
xor
out
mov
push
in
push
add
xchg
add
stc
lods
les
scas
dec
pop
jmp
pop
or
xlat
add
mov
fstps
sti
out
ds
pop
mov
pop
mov
loope
fadds
adc
fs
push
xor
fisubrl
test
jb
cmp
pop
push
pop
rcrb
fwait
scas
inc
inc
iret
mov
lea
xchg
inc
xor
fmuls
inc
push
jae
mov
cmp
sbb
out
in
inc
cmp
ret
sbb
jne
mov
int3
lcall
and
movsl
incl
pop
cmp
push
shll
jge
pusha
push
xor
cs
push
dec
or
cli
rcrl
sub
test
lcall
dec
sub
jg
gs
xchg
jno
fisubrs
sub
dec
in
lret
push
inc
cmpsl
xchg
dec
add
sbb
jge
pop
aas
mov
xchg
call
add
push
or
dec
fnsave
inc
clc
xchg
push
lods
repz
lock
js
pop
mov
mov
int
and
pop
mov
jbe
and
mov
adc
fidivrl
pusha
jno
ja
jno
lods
xor
or
ret
movsl
sub
cmp
xchg
lock
ds
jle
sahf
sbb
cmp
repnz
pop
pop
lods
mov
enter
adcl
sub
call
sbb
inc
mov
mov
or
adc
sbb
movsb
stc
fstpt
int3
push
mov
cwtl
sbb
add
sti
lcall
in
les
pop
cmp
mov
dec
sbb
nop
je
pop
mov
push
sbbl
pop
stc
shrl
lock
ljmp
and
stos
jbe
in
aam
test
jnp
mov
into
ss
ja
xchg
daa
insl
dec
stc
outsb
lock
repz
inc
stos
mov
js
sub
sub
lods
lahf
test
es
push
mov
pop
aaa
loop
inc
leave
inc
push
mov
pop
pop
mov
sub
inc
sti
xor
or
in
dec
mov
lcall
popf
ffree
xor
mov
loop
pop
cld
add
insb
adc
sub
ror
sbb
mov
push
xor
arpl
push
jo
icebp
inc
mov
xchg
pop
sub
cmpl
sub
pop
ret
jle
jp
jecxz
cli
std
fisubl
mov
mov
leave
lods
testb
shrb
adc
mov
push
fbstp
pop
mov
std
inc
js
dec
or
push
pop
jno
dec
inc
sbb
pusha
fstps
loop
xor
xchg
xchg
ret
stos
leave
jns
or
sbb
fmull
movsb
xor
xchg
jg
xor
adc
add
jb
test
hlt
imul
loopne
or
add
jae
lret
rcl
ljmp
inc
ret
shll
xchg
mov
pusha
popf
aad
cmp
and
call
jbe
stos
jns
lods
scas
sbb
cmp
lods
rcl
inc
jno
pop
cmpsb
or
std
inc
nop
dec
mov
sbb
cmp
jg
push
les
and
jae
xchg
push
cld
push
subl
movsb
dec
xchg
repnz
std
mov
xchg
cwtl
push
pop
inc
inc
dec
pop
sbb
aad
test
orb
lods
adc
imul
pop
test
out
outsb
xchg
mull
repnz
mov
cwtl
inc
mov
loopne
push
push
or
lds
mov
cld
xchg
cmpl
push
sbb
sub
cmpsb
adc
cmc
push
inc
xor
sbb
addb
adc
push
adc
in
imul
outsb
dec
push
cmp
movsl
and
sbb
insb
ds
fisttps
inc
testl
xchg
fbstp
or
mov
xlat
push
or
mov
jmp
dec
loop
lahf
out
xor
scas
xchg
into
scas
lahf
mov
lcall
cld
xor
mov
inc
out
push
adc
mov
sub
out
fmulp
cld
sbb
scas
xor
loopne
add
stos
and
aad
or
add
pusha
lret
mov
add
xchg
rolb
xchg
adc
fsubrs
sub
lcall
out
and
add
and
loope
pushf
lods
in
lods
mov
or
out
ss
repnz
mov
lea
adc
mov
ja
into
lock
rcrb
int3
pop
sub
les
add
or
adc
cli
mov
je
mov
push
mov
push
cbtw
pop
cld
mov
add
sbb
addr16
aaa
int
rcl
dec
jle
mov
icebp
mov
loop
loopne
cmpsb
and
mov
mov
mov
and
mov
es
test
xchg
sbb
fsubrs
pop
movsb
loopne
dec
pushf
leave
cli
ja
dec
jno
mov
pop
roll
cmp
xor
mov
pop
imul
fisttpl
jns
out
pop
or
cmp
mov
mov
or
mov
popa
xlat
xor
sub
jp
bound
adc
dec
or
scas
test
out
mov
mov
mov
xchg
dec
mov
mov
addb
test
rolb
lahf
movb
dec
clc
aas
ficomps
sub
aam
roll
cmpsl
jb
fwait
out
sbb
pop
je
mov
add
dec
add
adc
push
push
push
stc
add
ja
push
xchg
fldcw
push
mov
cmp
enter
xchg
ds
adc
das
ljmp
sub
outsl
sahf
add
test
pop
popa
and
arpl
mulb
jae,pt
cld
js
scas
inc
cmpsb
inc
pushf
adc
sub
push
daa
int3
pusha
dec
or
fisubl
or
mov
fs
loopne
in
cld
pusha
fmulp
ljmp
icebp
cmp
add
dec
mov
cmp
das
mov
ss
sbb
jae
push
xor
mov
lods
or
pop
jg
jl
adc
mov
ljmp
mov
push
xor
push
and
mov
and
xchg
xchg
aad
add
sub
cli
pcmpeqw
mov
sbb
mov
adc
xor
jb
cmpsl
sub
iret
cmp
mov
enter
dec
push
je
ds
and
lods
and
mov
inc
mov
ret
daa
fs
xor
mov
les
pop
add
mov
fstpl
sahf
xchg
xchg
xor
adc
orb
xor
icebp
std
loopne
dec
or
push
out
fstps
cmp
insl
rclb
mov
dec
insb
push
lahf
push
js
adc
add
shll
sbb
in
jmp
mov
xchg
push
dec
mov
jmp
ljmp
dec
push
nop
fwait
in
mov
push
sbb
sbb
imul
mov
pop
dec
pop
fstl
cmp
sub
adc
aam
cltd
addb
mov
js
mov
push
mov
add
je
popf
lods
pusha
inc
movsb
add
inc
push
dec
pop
adc
jne
push
pop
adc
push
inc
xchg
rolb
pop
push
add
das
test
or
adc
loop
add
or
dec
sti
cmp
arpl
mov
out
jns
pop
pop
sti
mov
cs
jae
test
sbb
decl
add
push
mov
xchg
xor
dec
cld
fildl
mov
stc
adc
and
cmp
inc
aam
xorl
mov
ljmp
or
cwtl
outsl
lock
sub
scas
stos
xchg
ja
push
inc
dec
les
loope
jno
notl
push
aas
mov
sub
or
fs
insb
std
ret
bound
inc
mov
scas
outsb
stc
std
cwtl
jb
jl
int3
int
cmp
das
push
jo
and
cmpsl
xchg
adc
enter
das
dec
stc
xchg
aad
vpsrld
dec
movsb
push
dec
push
xchg
push
push
ja
push
mov
pop
dec
mov
add
adc
jns
ret
jp
inc
mov
fsubrs
cli
push
jnp
adc
in
xlat
mov
mov
jne
fs
clc
inc
mov
popf
xorl
test
jne
out
aam
int
fwait
mov
cmp
and
pop
pop
adc
dec
std
inc
rcl
or
jnp
movsb
icebp
icebp
subb
pop
lds
addb
cwtl
pop
mov
popa
arpl
pop
jne
dec
and
xchg
lock
iret
and
cli
sub
clc
adc
scas
mulb
ljmp
repnz
xorl
aaa
in
mov
sbb
jge
cmpsb
js
xor
push
inc
pop
cmc
jo
dec
int3
lock
sete
pushf
stc
leave
insl
add
ret
insb
inc
enter
ficomps
popf
xor
pop
sbb
stc
or
push
cs
ljmp
in
inc
add
movl
push
pusha
fs
cmp
fstl
je
in
mov
jne
incb
gs
icebp
and
push
dec
add
mov
out
gs
shrb
pop
test
xchg
ret
es
sbb
adc
xor
mov
inc
jb
lret
in
mov
adc
dec
mov
inc
imulb
push
and
jb
es
shll
push
ljmp
aam
in
inc
mov
xor
xor
cmp
jns
lcall
frstor
clc
cmp
cmp
jb
cmp
push
mov
or
mov
cmp
mov
dec
cmp
inc
add
xchg
in
cmp
test
mov
mov
xor
xchg
sub
mull
or
sbb
xchg
mov
gs
cmpsl
adc
inc
clc
push
and
call
gs
xorb
imul
jge
xchg
mov
cmp
and
ret
jmp
mov
into
rolb
scas
or
nop
mov
pop
stos
xorb
jle
push
dec
sub
sub
in
pop
in
iret
addl
in
lret
add
or
jmp
rorb
dec
lret
push
rcrl
addb
mov
xchg
stc
pop
out
outsl
dec
and
popf
and
mov
mov
mov
inc
or
movsb
xchg
mov
cmp
jnp
jb
mov
add
xchg
inc
dec
pop
cmp
cmp
sti
jne
inc
lret
jbe
imul
insl
aaa
out
sar
rcrb
mov
jno
icebp
aas
popf
fs
cld
jne
xchg
sub
ljmp
pop
lahf
mov
shrb
inc
and
inc
out
sub
or
test
hlt
pop
pop
jb
cmp
pop
cmpsb
sub
cmp
ja
pop
lret
das
xchg
lcall
sub
pop
scas
cli
mov
leave
xor
sbb
push
in
lcall
ja
mov
add
dec
mov
sarb
xchg
sub
stc
cmp
add
ljmp
shl
test
insl
xor
ret
adc
stc
push
dec
jp
pushf
jns
stc
mov
arpl
ljmp
gs
pop
mov
movsb
addl
cld
mov
mov
mov
lahf
jae
icebp
addl
out
dec
mov
je
mov
loope
inc
cmp
cmc
cld
inc
fistpll
fwait
pop
lret
mov
decb
imul
das
dec
adc
xor
daa
hlt
push
lret
sarb
loope
lahf
xchg
mov
xor
pop
mov
pop
jae
adc
add
mov
xchg
ljmp
mov
xor
int
inc
es
adc
cmp
add
test
iret
pop
dec
rcl
adc
and
call
or
pop
lods
movsl
pop
daa
add
push
sbb
sub
inc
ss
cmp
xor
pop
mov
icebp
movsb
mov
sbb
add
jnp
dec
jb
shr
lds
sub
xorl
adc
lods
xor
lock
push
sbb
loopne
push
out
je
cmp
inc
xchg
jg
pop
inc
cs
addb
aad
scas
hlt
and
insb
jno
imul
dec
xlat
mov
xor
dec
or
mov
jl
jmp
mov
mov
xchg
xchg
push
ss
sbb
cmp
and
push
or
sbb
cmp
inc
pop
in
xlat
xchg
std
popa
enter
lods
or
jne
adc
sbb
cmpsb
leave
arpl
iret
and
sti
sbb
xor
xchg
dec
out
inc
scas
jno
and
jnp
mov
pop
sub
and
in
sub
lret
insb
sbb
ret
adc
adc
mov
jle
fdivl
daa
inc
pop
fists
cltd
jmp
repnz
pop
adc
adc
push
out
fwait
clc
jge
in
loope
inc
xor
mov
adc
jae
ret
mov
jecxz
ffreep
stc
inc
push
xor
jne
repnz
scas
movsl
jae
test
test
inc
cmc
arpl
std
insb
daa
cmp
or
cmp
iret
mov
in
lea
out
sub
xor
in
shll
sbb
sbb
pop
test
loope
pop
in
mov
pusha
push
popf
inc
xchg
inc
mov
out
adc
pop
jne
loope
mov
push
xchg
sbb
jl
dec
rcr
cld
in
or
push
test
pop
sub
ficoms
push
inc
sbb
xchg
cwtl
popf
mov
pop
cmp
mov
mov
jmp
mov
adc
dec
pop
add
daa
ja
sbb
or
inc
test
mov
xchg
mov
sbb
fisttpl
int3
idivb
fistps
cltd
sbb
push
add
mov
outsb
cmpsb
push
and
lret
xchg
xchg
fsubl
push
insl
or
xor
inc
cmp
popa
fildll
filds
test
in
shll
mov
mov
subl
shlb
testb
in
cld
lret
aas
rolb
lret
je
das
push
stos
xor
xchg
shll
or
push
scas
add
inc
or
mov
mov
inc
repz
nop
cmp
arpl
lds
pop
js
lea
pop
and
cmp
or
out
movb
dec
push
lahf
lds
or
or
icebp
cmc
stc
sub
es
mov
rcl
push
add
and
mov
push
adc
or
bound
nop
movsb
dec
inc
mov
mov
adc
lea
dec
sub
rcrb
pusha
call
testl
or
lret
xor
cmp
mov
fsubrs
dec
push
int3
adc
mov
bound
rorl
and
ds
add
and
scas
negb
inc
pop
jge
jp
test
nop
addr16
and
out
sub
adc
sub
pop
jbe
push
add
push
inc
int
gs
xor
mov
loop
sub
and
leave
das
xchg
cmp
repz
inc
fldl
cmpsl
repz
mov
adc
in
lock
push
cmc
mov
daa
xor
jo
sbb
add
sub
pop
or
fisttpll
dec
cmp
fistpl
mov
clc
gs
cli
cwtl
push
dec
into
push
add
pop
pop
in
mov
bound
push
pop
stc
inc
push
iret
jl
cmp
push
inc
mov
pop
stos
lds
aam
je
mov
test
push
pusha
adc
adc
mov
sbb
jno
mov
mov
pusha
mov
mov
rcl
cmp
clc
fadds
sbb
insb
add
insb
jbe
and
cwtl
xchg
mov
mov
scas
dec
in
cmpsb
sub
xchg
sub
lock
adc
inc
dec
jns
test
adc
jecxz
pop
mov
and
cmpl
lret
out
movsb
loope
icebp
jbe
orl
jl
sarl
sub
xor
mov
aad
pop
cmpsb
jl
fs
jne
add
movsl
out
adc
repz
jecxz
xchg
bound
push
mov
test
or
aad
pop
jg
out
mov
iret
rcrl
shrl
jno
lods
fistps
inc
adc
xchg
test
nop
in
stc
fmull
pop
mov
push
ffree
in
orb
popa
add
fisubrl
imul
adc
jb
in
push
es
daa
and
jno
push
xor
std
push
fstpl
lock
pop
pop
out
call
test
insl
cli
dec
mov
loope
scas
loopne
rorb
mov
icebp
sbb
es
aam
test
das
ss
mov
dec
test
jnp
mov
out
mov
test
pop
pop
fwait
out
stos
sbb
ret
sti
cltd
xor
pop
clc
jo
jnp
inc
mov
sti
je
xchg
mov
cmc
enter
ret
jge
negl
cmc
fistpl
sbb
out
leave
dec
hlt
call
xlat
sarb
rcrb
cld
fsts
adc
push
or
or
push
outsl
jns
out
xchg
sub
mov
sub
dec
pop
mov
iret
scas
xchg
sbb
jecxz
or
jl
les
xchg
mov
mov
jmp
adc
jmp
add
sti
negl
stc
jp
adc
xchg
inc
sbb
in
mov
dec
or
in
push
outsb
or
push
fcomps
and
sbb
mov
divl
xchg
jb
adc
jnp
outsl
inc
push
lret
ret
bound
adc
mov
add
fdivrs
shlb
clc
sub
sbb
out
lcall
fdivs
mov
insb
push
xchg
loopne
stos
test
sbb
aam
push
jp
fldt
or
test
shrl
push
mov
xchg
jg
mov
jg
lds
in
js
je
test
ss
addb
pop
xchg
cs
scas
add
test
orl
jmp
loopne
xchg
ds
sti
sub
mov
mov
lods
cld
cld
push
pop
shl
frstor
ss
mov
pop
sbb
dec
mov
sub
ds
jno
in
pusha
dec
push
cmp
scas
in
sbb
aad
aaa
adcl
stos
pusha
sbb
data16
insb
inc
pop
and
pop
aad
mov
lahf
adc
shrl
cmpsb
lret
mov
cmp
aas
push
or
push
mov
sbb
pop
xlat
movsb
or
lahf
pop
clc
aad
push
and
mov
or
inc
adc
mov
stc
in
fs
les
xchg
jmp
jb
int3
int3
mov
mov
sti
mov
cmpsl
jecxz
insl
xchg
sbb
data16
push
std
mov
adc
sub
bswap
xchg
or
xor
adc
cmp
test
lahf
int3
adc
test
ficompl
mov
sbb
push
push
jmp
cmc
popf
push
pop
mov
jne
test
aas
sub
inc
lahf
mov
cli
arpl
dec
push
mov
mov
pop
jmp
dec
shll
dec
dec
ja
mov
push
arpl
pop
pop
dec
and
stos
push
aaa
dec
mov
jne
cmp
fisubs
xor
rorb
shll
orb
or
mov
add
mov
push
sahf
lock
mov
pop
pop
fisubl
xchg
fisubl
mov
sbb
sbb
in
test
add
not
call
fldcw
test
xor
mov
cltd
xchg
mul
mov
fists
mov
mov
push
mov
pop
enter
xchg
xor
fdivrp
jbe
sub
loop
lods
idivl
pop
xchg
jae
mov
sbb
ss
inc
in
jge
fs
lahf
hlt
mov
xchg
mov
aad
lcall
xchg
xchg
sub
daa
les
mov
adc
mov
lret
jnp
js
adc
aad
dec
into
mov
pop
adc
pop
rclb
inc
jo
lret
dec
cmp
sahf
movsb
cwtl
aas
sub
or
jne
rcll
mov
push
or
dec
and
aam
jns
mov
dec
stos
mov
sahf
or
adc
pop
xor
lcall
aam
aad
cmpsb
les
and
lea
leavew
inc
test
add
inc
popa
adc
lods
and
xor
mov
dec
dec
mov
jae
stos
push
dec
mov
jbe
push
mov
aaa
insb
fidivrs
and
mov
or
sub
jne
loope
imul
mov
mov
add
mov
movsb
jo
aas
scas
inc
rolb
jge
adc
stc
sti
fcoml
jbe
xchg
imul
or
sub
and
pop
jle
adc
adc
je
xchg
xor
mov
push
adc
cmp
ljmp
outsl
subl
dec
dec
in
daa
sub
push
cmpsl
jp
or
outsb
loop
xorl
lds
sub
xor
xchg
pop
nop
dec
mov
in
jecxz
stos
push
lock
and
pop
sbbl
cli
bound
repnz
adc
data16
jno
adc
andb
mov
cwtl
jnp
cmp
cmp
psubw
pop
iret
mov
insl
in
xor
sbb
jae
ss
jb
pop
test
pop
pop
jbe
push
iret
pop
push
mov
or
addr16
mov
xchg
mov
push
ss
stos
mov
sbb
push
rcl
pusha
push
mov
push
push
popf
iret
cmp
shrl
adc
mov
loop
je
ficoms
hlt
notb
jg
jmp
sbb
dec
mov
or
lahf
or
inc
mov
in
mov
rorl
out
test
and
popf
bound
fs
arpl
out
jmp
or
adcl
addr16
sahf
lods
and
pop
jge
bound
and
insb
sti
push
aas
orb
mov
xor
push
push
ret
data16
adc
jmp
cwtl
stc
jae
jge
dec
notl
or
add
mov
mov
mov
adc
dec
mov
loope
push
decb
bound
sbb
movsb
sti
pop
cmp
mov
mov
hlt
push
jo
bswap
jns
aad
adc
mov
sub
ss
sbb
cmp
mov
mul
add
ss
psubsw
mov
mov
cmp
movsb
and
cltd
mov
mov
movsl
sub
lahf
jle
mov
lods
ja
cmpsl
sbb
mov
add
adc
pop
ss
imul
or
mov
stc
cs
inc
and
stos
mov
inc
jae
aas
ficoml
inc
ja
iret
movl
scas
jmp
push
movsl
stos
enter
inc
and
movsl
in
adc
call
das
jle
jae
jge
fcoml
inc
jae
pop
clc
add
cmp
and
or
add
mov
insl
inc
push
and
in
dec
jmp
jno
pop
in
or
sub
negl
mov
inc
mov
dec
mov
mov
mov
ja
add
or
pop
push
clc
xchg
pop
fimuls
sbb
jle
mov
fadd
sar
std
push
in
sbb
sub
dec
je
and
into
cli
lock
sbb
and
pop
jmp
or
incl
loop
mov
or
or
mov
test
cmp
push
jbe
mov
jnp
test
out
push
push
push
test
sti
adc
nop
push
into
mov
sbb
das
iret
pop
jo
aam
popf
mov
push
or
out
fstl
cmc
mov
test
adcl
sbb
imul
xchg
xchg
sub
sub
data16
jne
ret
add
pop
pop
cltd
mov
fcomps
paddsw
or
daa
shrb
rorb
dec
mov
mov
mov
inc
or
clc
xchg
mov
ljmp
stc
xchg
xchg
sbb
fsubrl
push
fdivl
cmpsb
js
jo,pn
push
fcos
and
leave
push
leave
repnz
inc
test
and
xor
pop
xchg
cmp
sub
xchg
add
xchg
jae
fisubrs
std
push
sbb
xor
in
jg
push
xchg
cmpsb
adc
aas
lods
adc
and
adc
aad
inc
fldenv
in
in
mov
adc
jecxz
popf
scas
mov
mov
popa
out
pop
outsb
mov
mov
xchg
xlat
stos
sbb
mov
repz
push
xchg
dec
mov
jp
mov
sub
mov
xorb
pop
dec
je
cli
jno
xor
push
mov
daa
cmpl
pop
fldenv
test
sbb
jle
and
in
lret
fisttpll
cmpsl
outsb
gs
lock
jecxz
aam
cmpsb
mov
and
in
push
mov
and
add
dec
mov
pop
mov
mov
mov
xchg
cmpb
movsl
jbe
jno
mov
test
leave
or
gs
cmp
push
inc
cmp
cwtl
jb
sub
stc
outsb
fwait
or
lds
ljmp
push
aaa
push
in
daa
sbb
jge
xor
arpl
push
push
sbb
mov
mov
jb
in
pop
mov
out
cmpsl
icebp
mov
jp
adc
pop
xchg
pop
inc
and
or
inc
add
mov
lret
cmp
pop
test
mov
psraw
out
add
orb
lock
popf
and
jp
fnstenv
mov
aad
test
movntq
rorb
or
frstor
ret
xor
lods
push
pop
pop
cmp
fwait
das
lods
jo
loopne
inc
out
nop
xlat
clc
pop
sub
mov
or
inc
gs
push
test
enter
adcl
add
pop
cltd
adcb
fwait
ss
aam
push
cs
movsb
stos
bswap
and
lds
lea
adc
sti
mov
sub
jecxz
lcall
xchg
push
into
cmp
imul
mov
in
mov
imul
rolb
jp
enter
mov
jb
outsl
push
xchg
scas
out
pop
sbb
push
rolb
insb
or
xor
jb
addr16
adc
test
bound
dec
mov
stos
outsb
fcom
or
push
push
aad
mov
outsl
pop
xchg
pusha
xchg
stc
cmp
mov
arpl
pminsw
call
or
call
add
or
mov
cs
jb
fimull
dec
mov
mov
repnz
cmp
movsb
push
sbb
in
rolb
mov
add
cs
in
leave
fdivrl
mov
cld
add
cmp
rcrl
jo
dec
sarb
mov
fisubrl
lods
inc
xor
fsubrl
or
ret
jmp
jno
rcrb
push
xchg
mov
fnstcw
adc
out
and
popa
mov
jnp
iret
lods
sti
xchg
sub
jae
je
jb
mov
and
push
test
pushf
sub
mov
pmullw
inc
jp
mov
sub
jne
inc
sub
imul
iret
addl
int
push
sbb
mov
in
sbb
push
fwait
pop
es
xchg
sub
adc
outsl
outsl
sub
mov
sub
std
or
and
push
cmp
mov
popf
adc
xor
and
add
jecxz
mov
lock
jge
fbstp
gs
add
fdivs
scas
mov
push
out
sub
repnz
mov
loope
sub
mov
pop
dec
xlat
mov
jge
pop
push
inc
pop
cmc
rol
jmp
rcrb
icebp
stc
fnstcw
mov
lods
adc
dec
push
inc
pop
push
ljmp
data16
dec
inc
push
sub
and
sub
or
inc
fistps
lcall
or
aaa
insb
xchg
lock
sub
mov
sub
rolb
adc
sub
xlat
cmpsb
jle
jno
add
je
dec
mov
cmp
mov
inc
mov
cmp
inc
cmp
add
call
cld
cmc
pushf
loope
dec
mov
call
adc
xchg
test
es
jl
cltd
and
push
mov
mov
jmp
pop
jno
mov
jnp
cwtl
jo
test
push
imul
cli
in
pop
sub
sbb
cmp
inc
cs
dec
arpl
lods
call
and
push
cmp
movsb
sub
sbb
jne
sub
arpl
dec
test
flds
lods
push
jl
sbb
dec
hlt
xchg
outsb
xor
jne
addb
push
shll
cmp
dec
dec
fwait
in
jecxz
das
jle
lea
ja
sub
lods
jg
pop
into
jns
mov
push
mov
cmpsl
rorl
jge
push
stc
inc
push
imul
test
clc
adc
imul
mov
push
dec
push
push
lret
jmp
cmp
push
inc
enter
pop
mov
popf
sub
sbb
repnz
pop
cmp
jg
lahf
pusha
pop
in
fldl
icebp
aam
sub
sub
shlb
lods
sub
cmp
inc
push
inc
mov
dec
sbb
pop
mov
push
and
fcmovbe
lock
orl
ss
bound
shlb
and
add
cmp
inc
jo
add
mov
aaa
mov
test
jecxz
movntps
push
mov
mov
push
das
loop
inc
inc
test
div
cli
or
sub
push
or
cmpsb
jl
dec
cmpl
xor
cmp
add
fsubl
int
pusha
sub
dec
stos
cli
fld
xor
popf
adc
imul
adc
dec
cmp
fdivs
outsb
mov
push
movsl
mov
mov
mov
arpl
dec
push
mov
mov
cmp
pop
and
outsl
jbe
rolb
arpl
jae
mov
cmc
out
inc
loope
cmc
aaa
sub
fcomip
imul
jno
mov
inc
and
xor
lock
out
dec
add
cwtl
or
fisttps
xchg
and
test
push
inc
into
fistpl
test
shll
nop
xchg
pop
jl
mov
clc
in
mov
inc
jmp
mov
cmpl
loopne
or
into
sub
outsl
pop
mov
mov
mov
xchg
cwtl
lea
push
fdivrl
leave
xchg
addr16
sbbb
out
and
stos
xchg
push
add
xor
es
and
scas
call
je
sub
lahf
lock
clc
sub
data16
adc
stc
cld
aam
jmp
fistpll
cmp
out
mov
inc
filds
xchg
sub
or
mov
pop
sbb
clc
mov
test
sbb
test
xchg
pop
push
loope
push
mov
fs
cmc
mov
xchg
es
pop
add
sbb
out
repnz
jno
clc
mov
or
out
pop
je
inc
adc
lret
pushf
jbe
testl
nop
movsb
pushf
pop
popf
outsb
xchg
dec
lret
jb
dec
push
dec
jmp
arpl
and
add
test
iret
btr
or
cli
mov
imul
or
mov
ret
sub
cmp
push
cmp
pop
push
lahf
roll
dec
lds
fldenv
push
outsb
push
xchg
adc
cmp
shrl
lds
test
ds
scas
xor
lahf
jne
leave
popa
scas
movsl
xor
mov
out
and
inc
das
rcl
dec
shl
in
mov
add
jae
hlt
stc
popf
sub
shll
push
sahf
stos
lcall
sbb
pop
outsl
mov
inc
pop
cmp
pop
push
pop
or
lea
lods
dec
mov
jmp
push
ss
cs
push
outsb
dec
cli
push
in
rcrb
es
jle
mov
and
ss
lahf
mov
jecxz
rcrl
lcall
lods
xchg
clc
or
push
mov
xchg
push
lret
fsubrl
lods
andb
rclb
pop
scas
rol
into
aad
sbb
std
sarl
mov
aad
and
sub
push
out
in
cmpsl
imul
cmpsl
sub
lcall
mov
cmpb
cmc
mov
mov
rcll
pop
bound
and
rcrl
mov
lret
addl
lcall
jge
je
nop
pop
xor
add
pop
cli
jp
add
pop
xchg
inc
std
xor
ss
push
dec
lahf
xchg
sbb
mov
loopne
cwtl
shll
sar
sbb
out
or
sahf
ficoms
lcall
dec
cs
das
lods
icebp
pushf
jo
cmpl
dec
xor
dec
mov
mov
idiv
repz
xor
lret
add
insb
out
inc
icebp
nopl
xchg
int
aaa
cmp
std
mov
push
push
cmp
aad
mov
jns
and
inc
dec
sarb
dec
or
sbb
sti
mov
cwtl
xchg
out
jb
dec
test
or
jg
xchg
xchg
jg
lahf
scas
xchg
adc
mov
les
pop
nop
arpl
cld
jae
int3
scas
mov
int3
inc
mov
cwtl
mov
es
add
add
mov
rolb
add
xchg
cli
cmp
mov
mov
inc
mov
movsb
mov
cs
rcrb
jp
neg
xor
inc
xor
sbb
inc
push
ds
sbb
shrl
sub
imulb
inc
sbb
loopne
addl
ja
sub
or
fists
js
xchg
dec
sbb
pusha
inc
test
mov
jbe
sub
mov
xchg
push
and
ss
pop
adc
sbb
cmp
jle
test
xchg
adc
cmpsb
mov
cmpsl
lds
cwtl
dec
cmp
dec
dec
xor
adc
add
div
lret
push
xchg
movsb
push
or
sub
insl
cmp
nop
fsubr
sbb
adc
sarb
cmp
fsubr
push
aam
call
jae
setl
stos
stos
and
cmpsl
dec
cmpsl
or
fstpl
inc
mov
hlt
ljmp
fwait
mov
scas
xchg
clc
clc
sahf
ljmp
mov
icebp
cmp
out
sbb
cmp
sbb
daa
cltd
fsubrl
je
loop
adc
xchg
xlat
fwait
inc
sbb
filds
inc
out
outsl
sub
cmp
fnstsw
or
call
push
setns
adc
test
nop
cli
adc
pushf
jo
push
das
repz
aad
mov
loop
mov
push
add
mov
enter
jge
add
sti
lock
push
pop
fs
aaa
popf
xor
shr
bound
jg
test
les
stos
adc
pop
jp
fcoml
jp
int3
pop
in
clc
inc
xchg
push
repnz
decl
dec
scas
out
adc
pop
xchg
xchg
mov
fldenv
jle
orl
fidivrl
xchg
adc
jb
inc
and
sbb
inc
test
dec
cmp
and
jae
push
movsb
lret
cmpsl
pushf
jle
xor
mov
xor
push
stc
imul
xchg
fildll
jo
icebp
inc
scas
std
jno
dec
mov
icebp
lds
std
movsl
stos
xchg
out
imul
test
sub
jns
xor
lea
xlat
in
in
pop
neg
dec
popa
mov
pop
insl
stc
test
xchg
push
mov
imul
imul
fimull
cld
ja
je
sub
fsubs
jno
sbb
pushf
stc
mov
enter
popf
mov
fwait
xor
sub
xadd
lcall
inc
push
sti
jmp
xor
mov
jo
mov
loope
lods
dec
push
mov
xor
leave
push
xchg
push
inc
call
push
cmp
add
push
das
mov
lds
pop
xchg
push
xchg
das
mov
cs
xor
push
div
fwait
shl
pop
adc
out
mov
jns
add
jmp
add
jecxz
dec
mov
sbb
sbb
arpl
outsl
mov
mov
sti
pop
cwtl
pop
ror
imul
movsl
test
dec
xlat
mov
adcb
loopne
stos
sub
mov
mov
lahf
mov
mov
mov
xchg
or
ret
es
xchg
mov
iret
jl
loopne
loop
sub
adc
mov
mov
incb
jae
fdivrs
ljmp
pop
mov
insb
push
in
movsl
add
jl
jo
push
jmp
sbb
pushf
cmpsb
jne
les
leave
pop
sub
push
dec
in
rcrl
jnp
jl
fistpll
push
xor
repnz
leave
mov
push
xchg
addr16
andl
and
xchg
jecxz
push
mov
stc
push
adc
pop
ret
jge
jbe
adc
xchg
int
fistpl
lods
xor
cmp
sbb
pop
mov
pop
xor
or
add
adc
sub
test
jne
mov
adc
lcall
or
xor
mov
and
les
xor
bound
mov
idivl
pop
jl
or
mov
ret
cwtl
and
sbb
into
mov
fidivrs
jmp
mov
jg
cltd
dec
mov
aaa
mov
mov
lret
and
adc
mov
or
jg
insl
outsl
mov
sar
rcr
cwtl
mov
into
call
repnz
sbb
xchg
scas
sub
ror
jmp
add
cwtl
inc
sbb
inc
stos
bound
pop
and
mov
rcll
mov
test
push
jl
cmp
push
repz
ja
mov
andl
push
rcrl
sahf
insl
clc
pop
adc
mov
loop
pop
out
call
mov
aam
das
dec
je,pt
pop
inc
pop
test
icebp
jp
or
movb
or
imul
ret
arpl
popf
fmuls
shll
mov
push
add
js
adc
xchg
xor
sub
push
pushf
insl
rcr
ret
inc
pop
call
outsl
fisubs
mov
push
jbe
in
aas
pop
mov
push
dec
das
push
out
mov
pop
or
ljmp
stc
out
stos
test
cmp
xor
fucomip
ret
es
pusha
mov
adc
add
xchg
in
xchg
or
push
mov
push
out
pop
ficomps
xor
mov
test
jne
dec
repz
sti
mov
cmp
imul
ret
andl
ljmp
adc
jle
dec
incl
xchg
aas
sbb
loope
into
mov
adc
std
cmp
fwait
mov
movsl
pop
rcr
lods
dec
pop
xchg
scas
cwtl
lret
and
outsl
mov
fistps
push
pop
stos
enter
adc
adcb
xchg
xchg
inc
data16
jo
dec
add
cmpsl
inc
rcll
mov
cmc
sbb
pop
xor
test
out
lds
dec
sbb
and
jno
ja
sub
outsb
stos
nop
repnz
and
adc
sub
loop
loope
imul
and
jnp
sub
rcrb
lahf
cmp
mov
scas
mov
cmp
or
or
cli
loop
das
or
push
enter
out
ss
mov
mov
sbb
cmc
imul
repnz
iret
cmpsb
sub
sub
push
push
shrb
lods
jmp
or
test
jo
out
or
or
or
ss
fmull
mov
sbb
andb
push
fsubl
iret
push
in
or
imulb
lods
and
jno
aaa
je
in
sbb
cmpsl
xor
test
sub
or
stos
or
popa
xlat
les
in
hlt
jecxz
es
je
es
mov
repz
add
dec
cmp
int3
add
das
push
movsb
sbb
or
cmp
lods
popf
cmp
cli
data16
into
ja
lcall
imul
sub
inc
mov
adc
sarb
inc
loopne
mov
ljmp
stos
fldl
and
mov
dec
lcall
xchg
out
lcall
inc
cs
mov
stc
sbb
mov
mov
cwtl
add
push
add
and
in
nop
data16
loop
lret
bound
clc
sbb
push
setae
fidivrl
adc
enter
cmp
popf
push
repnz
outsl
inc
and
sub
pushf
xchg
negb
cs
repz
hlt
push
add
imul
pop
mov
jg
sbb
aas
jmp
sub
repnz
mov
push
jno
test
ficompl
jns
test
sub
sub
mov
jbe
xchg
call
clc
mov
fbstp
mov
sub
or
adc
sqrtps
mov
sub
cmp
sub
scas
xorl
data16
and
mov
mov
adc
cmc
sti
mov
clc
clc
sub
in
pop
insl
pushf
fildl
sbb
xchg
ja
adc
push
add
imul
mov
test
cltd
or
or
jb
lahf
xchg
sbb
insl
add
inc
es
push
xor
adc
mov
out
mov
ret
movsl
ljmp
cmp
mov
icebp
mov
mov
cmp
sub
clc
jmp
adc
xor
shll
pop
add
aad
cmpsl
mov
xor
pop
mov
adc
aad
lret
mov
fucomi
xchg
mull
int3
stos
idivb
in
mov
testb
insb
add
xchg
push
mov
xchg
hlt
std
cmp
or
repnz
cli
das
inc
movsl
in
stc
js
pop
push
sbb
add
xchg
leave
lods
inc
jmp
hlt
and
loop
dec
stc
daa
cmp
imul
lret
fcompl
mov
std
push
outsl
push
pop
in
lret
jns
mov
ja
cmp
das
pinsrw
test
xor
add
jmp
xchg
and
data16
out
repnz
pop
or
push
sti
mov
icebp
aad
jb
test
sti
or
stc
dec
dec
xchg
pop
pop
dec
paddb
add
shlb
js
sub
clc
push
sbb
popa
fsts
inc
xchg
cmpsb
mov
cmpsl
cmc
outsl
add
test
nop
iret
fldcw
into
xor
sahf
jne
push
add
hlt
iret
mov
and
or
in
outsl
mov
test
rcll
cmpsl
xor
rclb
inc
inc
repnz
lock
into
daa
mov
fisubl
icebp
xchg
hlt
mov
and
adc
popf
jge
sbb
imul
lret
sbb
lahf
outsl
fs
shll
and
xchg
int
inc
add
rcll
test
jns
into
loop
mov
cli
fimull
mov
push
repz
push
clc
sbbl
mov
js
push
xchg
or
inc
xor
sbbb
jecxz
movsl
sub
fwait
lcall
jp
mov
mov
or
inc
or
test
mov
std
push
pusha
sbb
or
in
insl
rol
cmpsb
xchg
stc
jns
int3
insl
push
lea
adc
shrb
sub
scas
std
adc
dec
push
sti
or
xor
out
mov
add
mov
mov
jb
xor
xor
cmp
dec
mov
push
mov
mov
jnp
pop
sbb
pop
lods
pop
jbe,pt
push
jl
popa
cmp
fninit
cld
jg
aam
jne
insl
mov
sub
sub
cmpsl
lcall
rclb
fstps
pop
mov
push
rcrl
rclb
push
loop
popf
mov
mov
push
mov
jmp
sbbb
insl
sbb
dec
mov
mov
mov
fidivrs
arpl
fst
dec
sbb
xchg
addl
pop
dec
xchg
sbb
fldt
jecxz
xor
cmp
and
popa
icebp
jo
pushf
lea
mov
out
adc
sbb
sbb
stos
lock
add
sbb
xor
mov
lahf
out
clc
cmc
call
addr16
es
aad
mov
xchg
dec
imul
sti
jne
push
shlb
inc
arpl
xchg
fisubrl
xchg
push
nop
adc
loope
jp
fwait
and
dec
es
jno
inc
mov
lret
mov
cmp
push
fidivrs
out
push
inc
aas
dec
mov
push
in
push
xor
jp
test
dec
lods
std
sar
pop
scas
pop
das
icebp
sub
adc
and
mov
push
in
int
mov
or
pop
sub
mov
xor
lods
lds
jp
scas
pop
sbb
out
in
lcall
jle
repnz
push
repz
leave
mov
loopne
adc
lret
jnp
mov
insb
push
clc
std
inc
mov
loop
sbb
xor
and
push
stc
mov
je
xor
lretw
or
dec
orb
out
in
cmpb
std
ds
jns
xchg
jge
sbb
nop
pop
mov
lods
jae
movsb
scas
add
push
ds
xor
enter
and
das
gs
mov
scas
cmpsb
cmp
push
pop
sbb
cmpsb
cwtl
leave
pusha
inc
dec
add
orl
mov
mov
jp
sti
outsl
jbe
and
int
insl
dec
xor
jecxz
sub
push
dec
jbe
cmp
pop
xchg
inc
mov
aas
and
mov
les
cmc
sarb
sbb
jne
mov
dec
mov
sub
pop
es
add
and
cmp
xchg
in
ljmp
es
leave
shrl
lds
sti
aas
jecxz
dec
xor
test
shrl
out
mov
dec
adc
lcall
stc
popf
mov
xchg
les
pop
push
mov
out
mov
mov
mov
jge
push
inc
mov
testb
lcall
cmp
fsubp
or
outsb
bound
outsl
es
dec
sbb
jmp
sub
add
or
iret
sbb
adc
jae
ret
and
inc
sbb
out
push
orl
cld
xor
lret
negb
add
aam
jmp
push
and
add
rclb
cmpl
sbb
xchg
sbb
in
and
mov
adcl
out
push
clc
adc
js
sub
push
add
imul
pop
pushf
jmp
aam
das
mov
in
dec
fidivrs
cmc
jo
pop
dec
sub
xchg
scas
jmp
cmp
pop
sbb
jp
and
loopew
das
push
in
in
push
in
gs
inc
xor
sub
xchg
push
ds
popf
xchg
repnz
fldcw
sub
mov
bnd
pop
sub
repnz
shrl
xor
cli
lea
movsb
mov
jl
lcall
ja
insb
call
lock
add
movb
mov
push
add
sub
adc
xchg
movsb
lock
jo
jns
mov
xor
dec
bound
xor
jge
or
lahf
ljmp
mov
out
lret
js
cpuid
jns
rorb
sub
pop
or
mov
into
xor
sub
mov
xchg
dec
fsubs
test
inc
rorl
roll
mov
jmp
jmp
shrl
push
cld
pop
punpckhwd
pop
push
mov
movsb
cltd
sub
test
das
inc
pop
cmp
out
mov
fwait
jmp
imul
js
cwtl
xor
jns
scas
mov
and
test
push
cs
dec
pushf
daa
xchg
sbb
push
jne
sti
jmp
repnz
sahf
jnp
loop
jl
xchg
jno
fsubs
cli
icebp
test
cmc
or
inc
push
mov
mov
nop
jle
imul
insl
int
lock
sbb
jge
aad
xchg
add
sbb
xchg
pop
aaa
jo
xor
repz
push
inc
add
mov
out
mov
pop
cmp
in
jo
sbb
push
xchg
pop
mov
mov
andl
sub
inc
pop
xchg
add
sbb
iret
jmp
or
push
lret
call
fdivrs
jmp
and
xor
repnz
sbb
mov
pop
push
scas
lds
xchg
mov
and
sbb
mov
mov
enter
pop
mov
cmpb
xchg
fdivl
cmpsb
daa
loope
arpl
ljmp
push
popa
jmp
mov
xchg
mov
rclb
cld
jo
jmp
push
pop
out
pop
or
std
and
test
ja
xor
bound
inc
mov
int
add
dec
and
cmp
neg
dec
mov
testb
sahf
pop
mov
sbb
pop
xlat
popf
test
mov
cmc
stos
mov
data16
pop
pop
mov
pop
mov
mov
inc
cmp
lea
clc
jb
add
mov
push
mov
stos
inc
mov
push
jmp
imul
adcl
and
adcb
sbb
mov
movsl
sbb
pop
push
aam
inc
insb
enter
out
rorb
dec
and
aad
xor
mov
pop
sbb
sub
cld
movsb
mov
int3
push
lret
and
rclb
ja
fsubrs
iret
rcrb
sub
inc
add
mov
cmp
jne
pop
and
movsb
adc
or
shll
testl
mov
xchg
test
add
xchg
es
repnz
mov
sub
test
sbb
in
stc
ss
sub
cltd
adc
cli
fcompl
movsl
aam
mov
pop
insl
add
jno
push
push
pop
movsb
push
cmp
in
or
add
push
pop
xchg
ds
jnp
cwtl
mov
sub
push
stos
or
mov
js
cmc
fdivrs
and
sbb
jno
dec
lods
push
fisubrl
pop
int
pop
sahf
add
rol
inc
xor
and
shlb
sbb
xchg
sbb
mov
ss
or
dec
jnp
das
movsl
dec
or
divl
jle
jae
scas
fbld
fstpl
jle
lret
xor
lret
jae
mov
cmpsb
test
ret
popf
in
cltd
dec
mov
imul
pop
sub
cs
scas
or
mov
int3
xor
movb
jae
mov
popf
adc
adc
sbb
xchg
movsl
jo
mov
ljmp
in
add
les
xchg
cmpsl
adc
sahf
je
shrb
cmp
int
rep
rorb
rclb
mov
sub
cmpsb
aas
sti
movsb
movsl
imul
lret
pop
xchg
push
mov
sbb
lcall
test
loop
je
dec
inc
xor
xchg
jp
cmpb
scas
fdiv
jns
ret
lea
lods
jl
xorl
and
jmpw
bound
push
xchg
popf
in
inc
lock
pop
push
xchg
mov
in
aad
fwait
cmpsb
and
add
in
lahf
inc
cld
in
jnp
push
test
sti
cmp
imul
xchg
mov
pop
adc
xchg
jbe
idivl
cmpb
fbld
fwait
jae
shll
mov
lods
ds
push
outsl
rolb
adc
stos
dec
data16
adc
pusha
push
adc
test
xorb
out
imul
inc
rorl
je
pop
das
aas
iret
xchg
xor
outsb
cmp
xor
int3
ljmp
jecxz
aas
leave
test
push
inc
aaa
movsl
orl
lret
mov
adc
lcall
in
js
jns
fwait
jae
mov
pop
sbb
outsb
arpl
packuswb
stos
repz
inc
popf
icebp
cli
mov
and
test
cmp
test
jg
pop
push
xor
adc
loopne
cmp
xor
mov
sub
nop
pushf
sbb
jle
cli
out
cmp
push
add
outsb
subb
gs
out
lea
into
and
aas
add
mov
add
roll
out
mulb
int3
add
xchg
lods
shlb
sti
mov
int
leave
lods
push
mov
xor
in
js
or
out
ss
call
jp
mov
int
dec
pop
les
mov
jbe
mov
lods
popa
xor
adc
std
daa
sbb
inc
mov
aam
jnp
das
adc
out
hlt
idiv
ror
xchg
cmp
mov
loope
sub
das
mov
mov
pop
cwtl
and
pop
push
jnp
or
inc
cs
fs
mov
repz
mov
inc
repz
fadd
mov
mov
outsl
mov
jae
cmp
mov
daa
sbb
pusha
faddl
inc
jle
int
adc
movsl
popf
push
sbb
sbb
mov
popf
scas
and
cmpsl
cltd
mov
scas
mov
jb
addr16
jo
jno
mov
outsl
push
jl
lret
cmpl
adc
cli
xor
and
arpl
sbb
or
sti
popf
xor
push
mov
jg
out
pop
cwtl
push
test
fbld
outsb
movsb
out
push
sbb
xchg
sub
mov
popa
inc
fs
inc
out
outsb
push
and
js
adc
flds
mov
cmp
movsl
pop
imul
rcll
cmp
and
xchg
test
sarb
sub
push
xor
arpl
and
push
jbe
xchg
insl
lock
scas
inc
shr
insl
mov
les
popf
xor
fxch
mov
dec
paddusb
xchg
push
jmp
cwtl
imul
movsb
jae
imul
push
iret
add
xchg
in
loope
mov
xchg
add
xchg
pop
stos
mov
mov
mov
in
jg
adc
test
mov
push
adc
xchg
xchg
ret
sub
mov
js
cmp
pop
dec
aas
mov
push
cli
adc
xchg
pop
cmp
and
popf
mov
ljmp
add
lcall
pop
hlt
sbb
in
jg
cmp
sub
inc
sbb
pop
mov
mov
mov
mov
insl
int3
pop
jbe
mov
leave
lock
cmp
in
cltd
push
mov
ss
enter
fwait
lock
test
dec
loopne
sub
std
movsl
iret
lods
int3
hlt
scas
mov
in
xor
mov
movsl
mov
mov
dec
lret
jge
sbb
or
mov
adc
and
aaa
cmp
jl
jno
repnz
xor
push
mov
adc
out
jle
roll
pop
sbb
mov
aaa
pop
shr
pop
and
arpl
incl
cmp
aaa
push
sbb
rorl
test
mov
jbe
or
or
and
lods
enter
jb
jecxz
mov
sub
mov
push
imul
out
inc
icebp
adc
adc
or
movsb
or
adc
movsb
daa
sub
into
in
and
clc
mov
int
push
jmp
test
sbb
jl
cmp
pop
mov
sbb
and
fadds
mov
lcall
jecxz
imul
in
cmp
push
ficoml
ret
aas
sahf
enter
inc
sbb
outsb
xlat
xchg
lods
jo
testb
lret
sub
dec
cmp
in
push
jo
xor
adc
and
cmp
mov
cmp
xor
icebp
cli
mov
ja
add
push
repnz
test
xchg
out
stc
lret
enter
aas
cmc
clc
mov
pop
jg
stos
lret
stos
fsubrp
and
loope
sti
or
imul
pop
pop
fildl
push
xchg
add
ss
add
jno
xlat
lods
sbb
sub
pop
aas
ss
cmp
cmp
dec
js
jecxz
mov
and
xchg
insb
adc
sahf
xor
pop
jno
or
ficompl
imul
cmpsl
cmp
inc
push
cli
fimuls
inc
xor
cmpsl
fcmovu
mov
xchg
rcll
das
stos
adc
arpl
inc
bound
push
cmp
mov
pop
or
add
arpl
jnp
sub
scas
fstpl
jge
mov
cmpsl
ljmp
jge
aad
test
xchg
scas
sbb
jo
dec
push
out
push
aad
lds
mov
rorb
addl
inc
sbb
mov
adc
pop
stos
lods
loopne
clc
sbb
in
and
test
xchg
pushf
mov
arpl
loop
jmp
cld
jl
or
jno
sbb
shl
decl
in
shlb
ss
lock
cmp
loop
jecxz
add
add
xchg
insl
mov
xchg
pop
pop
xor
pop
or
jb
and
lcall
and
stos
xor
and
cltd
inc
dec
and
adc
clc
cwtl
xchg
pop
dec
sub
jmp
xor
sarl
sbb
and
jg
and
push
cmovno
in
clc
jle
aas
shlb
sub
mov
nop
test
movsl
or
pop
jp
push
cwtl
jle
dec
jmp
icebp
fiadds
iret
lds
and
push
jmp
aam
add
loop
hlt
sub
lds
in
mov
cmpsb
fmuls
pop
inc
add
jle
and
pop
inc
insl
xchg
das
or
into
ret
faddl
jbe
aaa
loope
faddl
xchg
dec
push
roll
sub
mov
test
lret
push
dec
or
cmp
pop
lods
cmp
pushf
push
iret
pop
dec
stos
xchg
dec
orl
scas
add
rcll
or
or
pop
lds
xor
scas
fcoml
xchg
imull
daa
pop
ds
pop
lods
nop
xorl
adc
inc
sbb
dec
xlat
fcoms
or
mov
cmp
addr16
mov
fwait
das
and
xchg
push
jle
adc
pop
es
inc
fldenv
pop
and
push
and
cmp
shrl
dec
mov
add
fdivrp
push
sub
into
xor
sbb
jp
dec
dec
les
mov
add
es
cmp
stos
and
adc
dec
mov
jmp
xchg
call
lods
dec
movsl
push
mov
xchg
xor
pop
push
add
in
pop
fwait
shll
dec
xchg
fs
in
pop
std
dec
jg
or
les
pop
fwait
dec
mov
jecxz
pusha
scas
imul
idiv
out
insb
mov
and
out
lahf
cltd
sarl
push
repz
and
jns
incb
bound
imul
repz
in
mov
repz
sub
sub
push
fimuls
inc
jl
add
sbbb
and
les
cmp
or
lcall
js
loop
cmpb
idivb
push
out
jo
bt
xlat
cmp
xchg
loope
and
loop
cmp
lock
pop
enter
mov
outsl
adc
imul
cmp
sahf
sub
cmp
sbb
mov
inc
pop
in
mov
sbb
xchg
sbb
and
push
cli
sbb
fildll
rcr
das
mov
imul
addb
jnp
xor
sbb
lock
mulb
push
mov
adc
mov
nop
es
cmc
fdivs
sbb
xlat
loopnew
or
cmpsb
pop
xchg
pop
pop
ds
xor
xchg
repnz
int3
pushfw
jb
dec
add
sub
inc
pushf
orb
jge
lret
push
push
ret
dec
fwait
push
sub
mov
rcrb
sarb
mov
adc
inc
jp
xchg
mov
imul
repnz
xchg
inc
out
outsl
jl
pop
push
lods
or
pop
sub
jnp
pop
faddl
fs
jg
lret
test
test
mov
push
or
adc
rorl
cmp
popl
inc
scas
pushf
adc
jle
aas
jbe
pusha
sub
lods
jnp
out
mov
addr16
jge
test
movsl
shl
movsb
sbb
or
push
pop
dec
adc
stos
in
in
sub
lret
les
xchg
push
jnp
sub
pushf
mov
test
fildl
lret
test
dec
mov
xchg
jne
jns
sub
lret
fs
and
out
jp
sbb
sub
lahf
push
xchg
stc
gs
andb
push
mov
push
mov
loop
adc
push
popa
in
hlt
and
out
mov
sub
add
call
mov
pusha
out
xorl
xor
jle
xchg
jmp
leave
mov
add
jmp
push
pop
xor
in
pop
inc
dec
or
adc
lock
testb
outsb
addb
mov
mov
xor
data16
lods
pop
stc
movsb
pushf
daa
nop
cmp
xor
mov
insl
sbb
insb
add
shrb
and
mov
icebp
in
adc
enter
pop
and
cltd
pusha
lcall
adc
adc
or
xchg
arpl
jbe
xchg
mov
push
repz
fstps
dec
push
mov
and
add
xchg
sub
push
in
adc
mov
jne
pop
mov
scas
ror
cld
nop
adc
jge
mov
push
icebp
add
ljmp
lods
xor
xor
inc
jge
nop
outsb
fildll
mov
xor
and
rcll
lahf
mov
imul
xor
sub
arpl
call
es
jl
int
out
pop
pop
out
jge
rcl
pop
add
idivl
dec
pop
stos
stos
xchg
mov
addr16
mov
mov
rcll
or
cli
sahf
push
xchg
aaa
pop
mov
fbstp
dec
dec
mov
sbb
xor
pop
mov
jns
pop
dec
clc
xchg
sbb
sub
jg
and
cmc
inc
outsb
aaa
add
ljmp
adc
fstl
fsubr
clc
movl
data16
in
int
sbb
adc
xchg
dec
sbb
mov
sbb
sub
or
ljmp
dec
xchg
jnp
jle
cmp
cmc
inc
outsb
stos
or
add
jno
pop
and
dec
imul
pop
jp
aaa
cltd
jp
sbb
jl
xchg
adc
fistpl
add
fistpll
int3
leave
jmp
push
shl
aad
jl
insl
bound
orb
xchg
xchg
stos
test
andb
aaa
es
mov
push
pop
pop
stos
mulb
pusha
mov
jns
stc
xor
or
nop
xchg
into
cmpsb
cmp
lea
cmp
mov
fisttps
pop
fdivrp
lods
sarl
scas
mov
ret
mov
mov
pop
xchg
hlt
push
mov
cltd
js
lret
cld
mov
sbb
filds
cmpsb
jno
out
jg
rol
mov
mov
push
push
sbb
adc
adc
inc
jecxz
lds
dec
pop
sub
cmpsl
jl
sub
mov
and
stos
arpl
loopne
inc
stos
in
pop
cwtl
out
adc
add
pop
mov
inc
movsb
mov
leave
pop
sub
imul
insl
mov
adc
jno
loop
push
scas
inc
js
pop
mov
dec
ret
mov
xchg
scas
ret
imul
aad
fldt
jne
adc
cmpsb
mov
add
stos
cwtl
inc
sahf
mov
loop
out
cmp
hlt
fxch
adc
push
mov
sti
jmp
mov
push
push
outsb
std
dec
in
adcl
sbb
inc
movsl
adc
adcb
inc
push
ret
addb
aas
mov
jns
sbb
push
xchg
jle
jae
mov
mov
ret
adc
insb
js
mov
cmp
push
mov
push
dec
inc
add
stos
jl
push
fildll
sbb
movntps
in
push
inc
or
pop
icebp
cmp
mov
push
test
sahf
add
xor
add
jp
fst
lea
sti
push
cmc
out
ljmp
test
fs
sbb
add
dec
shll
test
xor
repz
inc
mov
jne
xlat
push
imulb
cmc
adc
pop
or
lods
inc
push
mov
sti
add
lods
call
popa
pop
aad
pop
gs
mov
xchg
push
adcb
aas
xchg
or
flds
js
mov
mov
jge
out
clc
cltd
cmp
sub
push
lods
adc
pop
fimuls
xchg
dec
repz
jno
lds
data16
imul
mov
lea
sbb
push
and
out
cmp
dec
push
sbb
add
dec
clc
iret
dec
popa
inc
add
pop
and
add
lods
mov
fstpl
cmp
push
mov
add
dec
jp
add
insb
xlat
sbb
rcr
movsb
jg
pop
mov
in
int3
cmpsl
pop
daa
mov
jnp
or
bound
sbb
cmpsl
pusha
or
stos
rcrl
test
push
int
and
popa
or
jnp
imul
lock
mov
lds
aaa
es
fbstp
mov
xchg
pushf
es
xor
aam
lcall
out
lods
arpl
push
xchg
das
mov
popa
add
pop
sahf
clc
and
jge
insl
sub
das
cmp
shl
adc
or
sbb
adc
xorl
mov
aam
lods
adc
stc
mov
sbb
push
leave
pop
sbbb
sbb
movsl
and
sbb
fstps
lock
push
stos
push
cld
movb
pop
pop
cmpsb
pop
lret
mov
or
iret
xorl
mov
in
mov
lods
sub
ret
pop
jle
adc
mov
sub
imul
dec
mov
cmpsb
cltd
js
push
mov
push
scas
imul
mulb
cwtl
push
sub
jae
lock
nop
sub
push
xchg
fidivrs
add
into
jb
xlat
enter
popl
leave
iret
ja
nop
cmpb
cli
movsb
popa
mov
sbb
jne
aaa
mov
mov
rcrl
repnz
mov
popf
jbe
sbb
cvtps2pd
shll
out
test
and
jmp
inc
outsl
inc
or
aaa
lods
mov
andl
stos
and
push
fstpt
stos
shrl
ljmp
cmp
push
xor
cld
pop
xor
pushf
pop
ljmp
jge
lds
leave
jns
xchg
jo
mov
aad
test
fnstcw
push
jle
fisttpll
adcl
mov
adc
aad
bound
imul
jg
jmp
pop
push
in
sub
push
aam
sbb
in
or
fstpt
sub
mov
inc
mov
push
jae
rorb
or
arpl
int3
in
sub
ret
mov
rorl
push
and
andl
inc
ret
dec
test
xchg
cmpsl
fistpll
outsl
inc
lds
adc
loopew
es
repz
sub
cmpsb
icebp
cmp
push
rorb
inc
leave
sub
in
in
mov
in
cmpsb
loopne
in
shll
xor
jb
or
or
sahf
movsb
or
mov
idivl
data16
pop
push
xor
jb
xchg
int3
mov
jecxz
sub
mov
imul
add
sti
pop
push
aam
in
xor
jnp
sub
out
cltd
sub
fstpl
pop
inc
rclb
sarl
gs
fadds
dec
cmp
add
aad
and
cmp
enter
movsb
mov
xor
inc
inc
testb
out
sbb
dec
and
mov
dec
lods
push
or
arpl
lods
loopne
cmp
aaa
data16
or
mov
jg
fisttpl
jg
out
dec
ja
push
mull
mov
jmp
jle
dec
jp
mov
std
add
jo
and
xor
push
xchg
stc
repz
gs
add
sub
cwtl
xor
adc
rcrl
js
cmpsb
lret
test
or
jb
ds
repz
sarl
jbe
or
mov
cmp
push
ds
and
lret
push
mov
psadbw
test
mov
test
inc
out
add
xor
insl
sbb
jg
and
cmp
fs
xlat
in
ja
xchg
pop
rolb
cmp
data16
sub
xchg
push
push
daa
mov
pop
push
pop
sbb
sub
cmp
jae
scas
dec
xor
xor
shll
ds
fdiv
and
dec
insl
in
mov
ds
or
mov
rcr
push
popa
inc
out
imulb
mov
xchg
jp
loopne
jge
aas
std
out
les
sbb
ret
xchg
scas
cmpsl
mov
outsb
sub
jbe
push
xor
repnz
xor
jle
xor
xchg
sbb
leave
mov
std
cmp
jb
movsb
sbb
and
pop
adc
push
dec
pop
arpl
mov
enter
out
cmc
std
mov
enter
mov
scas
pop
cltd
adc
cltd
xor
out
outsl
add
imul
fwait
push
fs
pop
aad
cmp
inc
fidivrl
or
xchg
cmp
ret
inc
clc
push
push
out
lret
push
iret
push
sub
imul
cmp
scas
sahf
or
nop
dec
stc
aaa
sahf
fxch
adc
xchg
ljmp
mov
cli
lahf
cmp
adc
jnp
xchg
lahf
xor
add
loopne
mov
notl
adc
cld
fs
adc
inc
lds
and
mov
in
js
fucomip
sub
fcompl
data16
enter
xchg
test
js
popf
arpl
add
movsl
and
inc
mov
aad
push
or
loop
js
lcall
pop
jmp
call
insb
cmpsl
xchg
jne
loop
fldt
imul
sub
rolb
andnps
add
scas
popf
jmp
vpmaxsw
mov
popa
jnp
cltd
in
insl
in
push
mov
mov
xor
xor
push
in
mov
or
dec
imul
loop
pop
stc
icebp
cmp
mov
xlat
sbbb
lea
les
ret
dec
dec
outsl
cltd
and
test
clc
inc
sub
pop
data16
push
mov
jge
inc
mov
imul
inc
shrb
cmp
andb
iret
dec
enter
dec
xchg
lock
les
sbb
push
cmp
jecxz
pop
popa
adcl
pop
sbb
mov
not
mov
mov
fisubl
fdivp
jmp
in
imul
stc
push
call
push
xchg
xor
icebp
add
pop
pop
push
inc
mov
adc
xlat
std
or
push
mov
iret
dec
cld
jo
test
lret
xchg
lock
jl
mov
and
mov
imul
dec
jp
add
push
sbb
xchg
push
test
pop
jbe
mov
dec
fs
jl
xchg
pop
fs
aaa
iret
mov
lea
xchg
in
cmp
push
pop
or
adc
or
cld
pop
popa
loopne
es
dec
insl
pop
add
aad
stos
or
mov
iret
je
jl
shlb
bound
jl
rcrl
fildl
sti
push
hlt
iret
aad
inc
clc
mov
int3
inc
jae
std
in
lods
mov
loopne
in
bound
in
shlb
xlat
mov
add
aas
lahf
sbb
mov
cmp
mov
jmp
jmp
and
cs
dec
mov
fiadds
and
cs
add
stc
sbbl
or
pop
repz
shll
hlt
xchg
pushf
test
mov
stos
dec
clc
mov
xchg
and
shrb
out
xor
fstpt
stos
popf
out
js
dec
iret
adc
int
cmp
outsl
into
push
loopne
clc
les
mov
jo
jp
adcl
sbb
lret
aas
incl
fldl
scas
sbb
dec
mov
jge
test
mov
or
notb
sarb
mov
es
mov
cld
mov
dec
add
push
je
popa
jp
inc
repnz
xlat
inc
or
push
shrb
aam
mov
sahf
cmp
pop
lcall
push
out
push
pop
rorb
cmc
les
fsubrs
mov
les
cmp
aad
cmp
jo
adc
hlt
dec
dec
shll
push
lret
cmp
aas
push
jno
hlt
imull
xchg
pop
sub
adc
cltd
mov
jle
pop
rolb
add
cmp
sub
xor
insl
or
mov
adc
pop
cli
mov
adc
mov
lahf
hlt
cmpsl
or
mov
loop
and
xchg
ljmp
popa
jnp
in
jbe
orl
loop
inc
pop
adc
lret
jbe
dec
orl
dec
fdivs
sbb
pop
inc
std
sarl
mov
cltd
mov
insb
js
and
add
stos
movsl
inc
repnz
mov
lret
cmc
push
xchg
inc
inc
cmp
push
mov
bsf
xlat
push
stos
fcmovbe
push
ljmp
push
xor
inc
inc
add
cmp
inc
fsub
outsb
mov
mov
sbb
fisttps
sbb
gs
shll
je
frstor
movl
push
int3
adc
pop
pop
mov
pop
idivb
xlat
sbb
xchg
fmul
push
add
mov
and
inc
pushw
jnp
xor
pop
inc
shrl
xchg
xchg
notl
mov
repz
leave
scas
pop
stc
je
xchg
sbb
lahf
adc
xchg
xchg
xchg
orb
pop
sti
pop
lret
gs
and
pop
ret
ljmp
es
lahf
cwtl
mov
fstpt
out
subl
arpl
add
add
fsubp
adc
mov
mov
sbb
out
push
inc
mov
cmpsl
scas
jo
mov
in
dec
inc
cmp
mov
inc
sub
jmp
mov
pushf
xchg
mov
xor
mov
jnp
out
fisubl
mov
dec
imul
inc
pop
dec
pop
mov
shr
jp
pop
pop
xchg
adc
jbe
add
les
lret
inc
jns
push
mov
dec
pop
cmc
faddl
pushf
nop
xor
push
xchg
inc
jle
ficoml
pop
adc
and
xor
loope
inc
and
mov
in
xor
push
mov
mov
mov
mov
lods
mov
mov
div
int3
test
pop
rclb
jecxz
loope
ds
shll
imul
movb
cmp
jae
popf
pop
bound
in
lahf
dec
jo
stc
push
fists
mov
add
xor
sub
and
pop
cmpl
addr16
jp,pn
xchg
jp
es
test
lds
test
popa
gs
out
arpl
mov
pop
mov
out
jbe
mov
jns
mov
pandn
mov
cli
add
repnz
jno
push
and
xchg
cmp
sub
lcall
rorb
shr
nop
add
and
dec
mov
lret
xchg
shll
mov
testl
cmpsb
ret
jo
sub
pop
lds
mov
pop
subl
rcrb
mov
mov
add
adc
aam
je
push
stos
int3
mov
ret
testb
sub
shlb
lods
dec
mov
cmp
mov
out
lea
inc
rcrl
mov
in
pop
mov
ficoml
pop
adc
adc
mov
filds
std
in
lock
imul
popf
stos
cmp
inc
jl
outsb
fs
xchg
sbb
shl
fidivrs
hlt
cmp
dec
mov
xor
push
add
add
shl
inc
adc
mov
jmp
mov
mov
popa
mov
dec
inc
pop
stos
xor
test
adc
sub
pop
aas
mov
mov
stos
out
mov
outsl
popf
and
xlat
or
pop
push
dec
nop
push
jnp
mov
xchg
in
pop
mov
push
ret
xchg
push
xlat
pop
and
movsl
imull
stc
repnz
jb
push
scas
movsb
jno
inc
or
jbe
add
push
minps
out
test
imul
shrb
and
loope
jbe
and
sbb
imul
lds
les
das
lahf
cmp
push
inc
sbb
jmp
mov
jne
roll
inc
cmp
setne
mov
mov
sub
adc
rcrb
test
or
popf
adc
leave
and
xor
add
test
mov
mov
int
inc
popf
cmp
mov
cmc
ss
cmp
nop
mov
jp
orl
cltd
pop
in
pop
cli
adc
adc
mov
repnz
movsl
inc
out
mov
inc
pop
pop
lret
jecxz
mov
xchg
scas
mov
shll
cld
aad
hlt
add
jnp
jbe
imul
push
cld
mov
out
out
out
add
test
add
mov
mull
mov
sub
lods
hlt
xor
push
icebp
cmp
adc
adc
and
or
push
cmp
insl
xchg
repnz
pop
imul
jecxz
dec
adc
nop
cmc
adc
cmp
jno
and
stos
add
fdivl
lods
je
jne
shrb
and
imul
jle
aam
dec
test
xor
cltd
scas
and
pop
mov
gs
adc
xchg
movsb
scas
int3
add
lock
pop
std
cmp
stos
dec
scas
stc
in
adc
sbb
mov
pop
imul
mov
mov
movaps
dec
ret
cld
lods
xor
lret
inc
lret
adc
int3
jns
inc
dec
push
mov
nop
dec
pop
mov
dec
mov
adc
lods
fildll
or
jp
or
jne
repz
std
adc
and
xchg
and
push
xor
out
cli
push
pop
push
fbld
xchg
sahf
clc
jo
adc
push
sbb
sti
data16
pop
pop
push
pop
ss
or
into
test
adc
adc
mov
test
lret
mov
inc
ljmp
xchg
lret
lcall
mov
xor
sbb
rcr
js
mov
addr16
fdivl
data16
xchg
xor
sbbb
lahf
cwtl
push
outsb
push
jl
dec
xlat
add
enter
aaa
cmpsb
mov
jae
cmp
jecxz
cmc
movsl
cmp
filds
and
das
aas
ljmp
xchg
movsl
pop
jb
and
fisubl
leave
inc
and
pop
cli
je
in
cmc
popa
fabs
dec
cmpsb
adc
out
stos
xchg
cli
clc
aaa
dec
add
fidivl
shrl
push
cmp
mov
insb
cmpsl
mov
adc
into
xchg
mov
push
mov
movsb
test
mov
push
add
cmp
lahf
jno
stos
sub
and
popa
std
push
xor
add
int
sub
lcall
inc
add
push
lret
leave
ffree
xchg
mov
mov
iret
xchg
inc
imul
xchg
push
shlb
sbb
xchg
dec
push
call
shll
fmull
push
ds
fisttps
insl
mov
push
xor
iret
mov
mov
sub
pop
shl
test
subl
add
data16
es
push
insb
das
fcomps
xor
nop
mov
imul
fdivrs
dec
sub
lahf
daa
mov
dec
lock
inc
mov
cmpb
jbe
jecxz
dec
sub
mov
mov
test
aam
mov
inc
lret
add
adc
mov
dec
sbb
adc
pop
cmpb
and
rcr
loop
xor
sbb
sbb
and
xchg
push
fldcw
test
loop
shll
mov
push
rcrl
cmp
push
fwait
xor
std
fwait
shll
cwtl
popa
into
mov
aad
sub
ds
push
mov
lods
xchg
shll
and
dec
mov
js
jo
adc
mov
aad
sti
out
pop
rcll
jle
jns
pop
add
and
shl
push
inc
ret
test
aam
jne
addr16
jb
sbb
sub
mov
mov
mov
in
out
sti
lock
movsl
insb
dec
sbb
push
sahf
cmp
out
cmpsl
shrl
inc
repnz
lret
das
sbb
sub
mov
pop
cmc
dec
push
popf
dec
dec
out
or
shl
pushf
test
mov
test
xchg
pop
test
fs
popa
cmpb
xor
cmp
xchg
call
push
adc
mov
addr16
int3
or
jo
push
cltd
inc
stc
out
pop
push
push
push
subb
daa
bound
out
inc
add
fnsave
pop
pop
bound
arpl
test
aam
ret
add
dec
cmp
out
daa
scas
stos
loope
sub
jne
xchg
cmp
mov
add
cs
sbb
pop
dec
fwait
loopne
xor
cli
mov
xchg
sub
imul
mov
jae
mov
cmp
in
jo
incl
into
jle
nop
jnp
adc
into
rolb
pop
mov
adc
cs
pop
push
sbb
dec
leave
sbb
jns
xchg
jb
ja
pushw
inc
add
fmulp
fidivs
outsb
shlb
pop
fidivrl
ja
dec
pop
or
mov
pop
repz
and
push
cmpsl
add
push
jns
sarb
cmp
jmp
or
popf
mov
cwtl
into
cmpb
adc
icebp
push
lcall
xchg
xor
out
sbb
and
daa
sbb
jmp
sahf
test
inc
and
jo,pt
xchg
or
nopl
or
aaa
inc
or
cmpsl
dec
es
fistps
push
pushf
arpl
push
scas
cwtl
sbb
dec
add
pop
xchg
add
movsl
mov
cmp
ffree
cmpsl
mov
xchg
in
fildll
imul
pop
mov
jp
shll
test
mov
test
ljmp
jecxz
jecxz
lds
sbbb
icebp
stos
lahf
addr16
mov
sub
fcmovnb
lcall
add
ret
dec
dec
mov
or
insl
pop
ds
lret
in
push
xchg
das
ret
je
out
jns
mov
mov
adc
shl
or
roll
mov
aaa
pmaxsw
and
sub
cmp
stos
stos
pop
cltd
fcoms
and
mov
add
dec
xchg
mov
inc
in
push
pop
xchg
mov
fadd
jmp
sub
loope
nop
cltd
bound
pop
jp
xor
daa
in
ss
xchg
dec
nop
das
int
stc
cmp
es
cwtl
js
adc
pop
or
lds
ret
movsl
mov
out
mov
stos
stc
jle
repz
inc
gs
or
int
imul
hlt
mov
cltd
mov
sti
scas
xorl
mov
pop
imul
bnd
xchg
mov
stos
push
pop
ss
xor
lcall
push
dec
push
repz
xor
add
and
jno
push
dec
mov
popa
shlb
cs
shlb
jae
lcall
mov
inc
insl
mov
jmp
pop
xor
lret
push
aad
mov
and
and
add
inc
xchg
sti
push
icebp
scas
divl
add
dec
xchg
push
mov
lret
or
outsb
daa
or
and
in
adc
push
out
fwait
lods
fcomps
fsub
stc
mov
jno
mov
data16
imull
repz
mov
cmc
aad
leave
push
outsb
clc
jmp
push
inc
sub
pushf
mov
jge
xchg
sti
add
mov
lahf
je
jne
int3
sti
xlat
rcrb
ds
jmp
shlb
pop
das
call
xor
add
iret
popa
aam
popf
jp
pusha
daa
jns
adc
mov
fistpl
lcall
inc
aaa
mov
fbld
lea
call
fisubs
in
push
xor
push
inc
js
adc
mov
push
push
and
mov
les
adc
xlat
ljmp
sub
jg
fldenv
subb
jb
jle
adc
sbb
test
movsb
add
pusha
mov
iret
or
adc
pushf
cwtl
dec
pop
lcall
pop
fwait
mov
rorl
nop
in
stos
fwait
jnp
in
dec
lcall
mov
test
je
mov
js
test
xchg
cli
test
stos
sarb
mov
mov
jg
push
sub
test
jp
jl
ljmp
mov
mov
push
xor
and
mov
jmp
cmc
or
fistpll
or
mov
cmpsb
or
add
ss
aas
in
es
test
and
sbb
daa
add
pop
ret
lods
xor
lcall
mov
sbb
jnp
stos
lock
in
dec
mov
inc
insb
lods
lods
lds
jecxz
aas
pop
push
arpl
ljmp
mov
dec
or
pop
scas
adc
outsb
mov
ss
or
pop
push
pop
jp
out
stos
dec
lahf
pop
call
fimull
dec
xchg
sub
xor
inc
inc
push
inc
out
frstor
lahf
xor
std
iret
sub
jnp
xor
les
mov
mov
repnz
dec
aas
or
lcall
push
sbb
pop
lods
leave
jb
push
fwait
cmc
xor
enter
jns
push
arpl
lret
cmp
sbb
ja
jg
icebp
dec
mov
nop
loop
mov
out
jb
stc
cmovbe
mov
out
xchg
jb
inc
push
cmp
jg
fistl
mov
cmp
mov
fdiv
nop
mov
sub
or
outsb
fistpl
xchg
dec
adc
inc
inc
add
pop
cmpsb
inc
lods
pop
jg
jnp
mov
mov
sahf
sub
push
xor
jl
jne
leave
dec
xchg
out
sahf
sub
faddl
lds
mov
leave
push
in
sbb
xor
inc
aas
dec
mov
xor
lods
pop
mov
push
jo
jle
stos
dec
pop
loopne
stc
fdivrs
push
pop
adc
cmp
xchg
movsb
xor
mov
shl
inc
jl
xchg
xchg
popa
repz
out
add
inc
int3
shrb
into
dec
fiadds
push
and
fwait
scas
cmp
inc
push
xchg
mov
xchg
out
je
jno
jno
pop
cmp
fcoms
out
xor
aam
test
xor
mov
jns
push
fwait
jge
add
jbe
mov
sub
movsb
aas
mov
pop
cmpsb
inc
cmp
jne
pop
cmpsb
test
or
mov
sbb
icebp
dec
les
cmpsl
push
int
cmp
push
pop
int3
xor
adc
mov
rol
xor
push
mov
das
inc
test
arpl
mov
pop
sbb
sub
push
xor
push
hlt
in
sbb
lock
sbb
andl
dec
jmp
mov
pop
std
or
pop
and
std
push
popf
mov
push
jp
jmp
in
mov
jmp
jns
cmp
std
movl
pop
notb
pop
jbe
data16
xlat
out
xchg
sbb
scas
aaa
shrb
sbb
test
pop
scas
or
pop
jnp
push
ja
sbb
jl
push
sub
xchg
mov
xchg
pop
fucomi
push
call
testl
add
inc
xchg
loope
fsubl
lret
xor
mov
pop
insl
rolb
pop
pop
xchg
push
leave
fcompl
dec
shl
and
pavgb
and
add
mov
or
int
dec
call
icebp
push
adc
jae
fnstcw
fsubrl
xorb
add
and
cmp
cmp
or
cmpsb
cmp
adc
jne
inc
mov
mov
inc
repz
sbb
iret
into
ret
dec
addr16
add
nop
inc
pusha
repnz
ret
push
mov
jae
lods
rol
mov
inc
scas
push
fwait
into
xor
push
xchg
lahf
sbb
repnz
jmp
sbb
inc
add
lahf
dec
pop
notb
scas
mov
pop
movsb
jnp
fcmovb
les
lea
les
jo
lods
pushw
xchg
jl
mov
cld
lret
push
mov
mov
cli
ljmp
inc
js
aad
cmp
fildl
hlt
adc
add
lret
sub
data16
and
xor
std
nop
xchg
xor
inc
cmp
mov
ss
jno
lods
loop
cmpsl
lods
lods
dec
cld
fistpl
xlat
jns
dec
mov
and
jo
ficoms
out
aam
xchg
imul
out
je
rclb
xor
sub
out
fucom
out
inc
ja
rcrb
out
nop
push
pop
jge
cmp
jb
sbb
xorl
je
sbb
jg
es
sahf
pushw
push
and
loop
filds
pop
push
jnp
sbb
cltd
push
xor
iret
dec
add
adc
sbb
pop
rcr
adc
pop
adc
adc
loop
cmp
popa
mov
cmpb
or
sbb
or
fcmove
or
add
inc
sbb
push
sub
push
lock
add
jle
out
fwait
lret
movsb
std
xchg
and
adc
xchg
jno
sbb
xchg
mov
shll
pop
inc
repnz
push
mov
mov
push
ret
jg
pop
shrl
data16
hlt
jle
inc
push
lret
icebp
test
faddl
movsl
pop
sub
ss
inc
jecxz
out
cmp
and
xchg
mov
out
aam
fldt
movb
int
adc
pusha
lock
je
in
mov
jno
inc
sbb
adc
cmpsl
mov
test
cmpl
jp
lret
std
int
inc
insb
dec
mov
stos
or
fimull
arpl
xchg
pop
pop
or
pop
mov
lret
xor
pop
bound
sahf
test
mov
dec
push
test
insb
jg
arpl
push
cmpsb
stos
in
bound
les
push
popa
xchg
xchg
out
lahf
and
inc
nop
dec
in
adc
cs
pop
rorl
xor
int3
fisttps
jge
dec
fbld
xchg
inc
cmc
imul
mov
fs
xor
and
stc
mov
jp
mov
cmp
jno
movsl
dec
sub
je
jg
or
pushf
and
icebp
dec
pop
fcompl
sbb
sub
push
cmp
dec
or
push
lea
pushf
adc
xor
test
or
jae
jle
pop
jae
fmuls
subb
sbb
pop
xor
cmp
and
lds
sbb
jb
mov
or
mov
jmp
int
rcll
pop
ret
fucom
jecxz
rorb
testb
push
adcl
and
add
rolb
daa
ret
pusha
fsts
loope
nop
int
dec
sub
mov
negb
dec
jne
ds
lcall
mov
rclb
stc
mov
clc
cmp
out
adcl
hlt
outsl
jne
js
mov
cmp
or
lods
bound
addr16
mov
mov
sub
fisttpll
movsb
insl
sub
adc
jle
push
xchg
push
fmuls
aaa
and
xor
xlat
std
mov
paddq
daa
ja
int3
insl
pop
jl
ds
dec
mov
psllw
leave
or
sbb
xchg
cmovl
dec
inc
int
imul
imul
mov
stos
icebp
sub
insl
mov
lock
cmpb
add
mov
dec
push
lret
popa
add
xor
jbe
sahf
fdivl
sub
push
ret
adc
ds
jno
movsl
jp
adc
repnz
xchg
cmp
cmp
bound
dec
fnstsw
and
inc
cltd
nop
arpl
movsl
push
jg
es
rcrl
jp
imul
cmp
and
pop
mov
jp
push
cwtl
std
les
cmp
clc
fwait
push
dec
pop
in
xor
dec
in
lock
cmp
adc
mov
clc
sti
push
xchg
xchg
adc
sub
mov
lret
divb
mov
mov
mov
cli
push
sahf
jg
or
mov
xchg
sbb
xchg
orb
mov
jae
addr16
test
and
mov
lea
mov
fildl
imul
inc
or
jns
inc
cmc
push
stos
insl
stos
cltd
js
pop
or
in
sbb
xor
mov
and
xchg
pushf
jmp
mov
std
imul
pushf
mov
shll
roll
repz
cmpsb
aaa
mov
mov
dec
into
scas
pop
lock
rclb
aam
out
test
aam
inc
repnz
test
and
cwtl
movsl
scas
cmp
mov
push
es
pop
push
stos
pop
push
and
mov
mov
pop
jnp
inc
in
push
pop
mov
pop
loopne
cmp
rorl
popl
fwait
mov
clc
mov
cmpl
xor
adc
call
ret
in
in
jns
jecxz
push
insb
cmp
sub
sbb
arpl
call
inc
fcoms
loopne
cmc
int3
cs
fildll
dec
sub
popl
repnz
enter
dec
mov
dec
aas
fmul
std
jnp
pushf
pop
hlt
lcall
into
mov
arpl
lods
ret
rcr
sbb
cmp
negl
gs
mov
in
sub
xor
fidivs
adc
mov
mov
testb
push
insb
test
outsl
adc
jb
pop
dec
mov
add
dec
mov
mov
cmp
sahf
sahf
xchg
mov
xor
dec
fmuls
dec
cmp
clc
arpl
fsubrp
and
jo
std
in
insb
pop
iret
iret
add
or
cwtl
and
rcrl
push
ds
mov
ss
in
add
in
sbb
lods
fbld
loop
in
dec
fbld
fcoml
repz
sbb
mov
pop
cmp
and
inc
dec
inc
std
xlat
mov
or
into
push
jo
mov
iret
mov
xchg
cmp
icebp
pop
inc
lahf
das
and
hlt
adc
mov
xlat
or
or
aad
pop
push
popa
notl
test
jo
icebp
xchg
mov
xchg
and
lret
sub
adc
and
adc
sub
inc
jle
jmp
add
fdivrp
pop
xchg
test
add
and
xchg
and
push
jge
jns
adc
sub
js
jle
cmp
arpl
std
mov
xchg
repnz
mov
mov
outsb
add
xchg
fdivs
movsl
pushf
adc
cmp
sbbb
jnp
adc
push
inc
pop
rcrl
inc
sub
push
dec
stc
add
add
push
sub
mov
dec
pop
jmp
push
or
lret
or
ss
dec
jo
in
repz
mov
jns
sub
mov
sub
xchg
pop
cmp
pop
shr
and
jl
divb
mov
cli
push
imul
mov
dec
xchg
fimull
mov
xchg
outsb
outsl
adcb
lods
dec
mull
inc
setns
in
imul
cmpsl
lods
stc
sub
dec
jnp
dec
push
shrb
mov
testl
or
inc
insl
jge
sub
pop
jne
fimuls
sbb
icebp
dec
adc
and
sub
enter
cltd
or
insl
js
mov
mov
je
sbb
dec
mov
mov
out
xor
ljmp
jae
out
or
mov
loopnew
mov
xchg
xchg
shr
lret
cmp
xor
out
or
rcl
push
hlt
dec
cmp
gs
ss
cmp
enter
cltd
pop
push
clc
xchg
imulb
push
jg
idivb
mov
push
testb
lahf
stc
rcrb
gs
adc
cli
prefetcht0
inc
outsl
or
clc
or
jnp
test
or
cli
lock
mov
dec
in
inc
fcoms
test
jnp
scas
mov
das
fwait
mov
fadds
out
xchg
mov
xor
mov
push
adc
cld
mov
fnstsw
dec
scas
jb
push
aas
jo
rclb
mov
sbb
shl
fbstp
add
push
add
push
shlb
pusha
dec
sub
in
sti
sub
loopne
les
jl
in
stc
fnstenv
addr16
jge
sbb
push
push
cmp
aaa
xchg
cmc
mov
aaa
fdiv
popa
frstor
rcrb
inc
int3
stc
and
insb
pop
cmc
push
xchg
orl
xchg
hlt
jg
jb
pop
jg
popa
push
stos
shl
daa
xchg
out
in
int
mov
cmp
pop
adc
pop
imul
int
in
push
outsl
inc
shll
mov
test
sbbl
jne
dec
pop
jmp
loope
push
fdiv
pop
jg
pop
shlb
pop
cmp
xor
sarl
xchg
ljmp
je
out
nop
jmp
lret
in
adc
scas
bound
js
adc
pop
jmp
jb
mov
jno
mov
pop
jmp
xlat
in
subl
jae
out
sbb
xchg
jmp
insb
cmpsb
pop
xor
mov
cs
xchg
mov
outsb
je
inc
mov
scas
hlt
inc
lods
or
daa
inc
fcomps
es
repz
add
or
mov
push
inc
loop
mov
roll
shl
aad
das
pop
pop
mov
and
mov
fistpll
jmp
lds
push
test
mov
test
xlat
push
jns
sub
out
popf
les
mov
aam
imul
daa
xor
dec
and
inc
ret
add
rcrb
push
inc
mov
push
and
out
clc
popf
repz
push
lret
lahf
pop
cmc
and
outsb
dec
sti
dec
std
lock
outsb
dec
mov
push
mov
popl
lods
sbb
jno
into
mov
cwtl
add
sbb
addr16
nop
push
shr
inc
xor
push
pop
repnz
dec
jbe
ficoml
jo
std
sub
pop
add
es
sub
sub
xor
gs
sub
out
stos
inc
adc
aam
push
mov
or
push
int
test
aam
mov
jno
xchg
or
mov
ljmp
mov
std
mov
sahf
in
shll
adc
push
scas
mov
das
test
xlat
test
shlb
mov
inc
xor
jmp
divl
push
out
inc
sub
mov
push
pop
idivl
scas
enter
lea
mov
inc
push
mov
sub
popf
xchg
in
adc
and
les
cmp
subb
hlt
mov
fnstenv
push
or
mov
or
adc
lret
adc
jg
imul
push
sub
mov
jne
sti
inc
pop
lock
or
sub
jg
shll
mov
push
and
mov
adc
pop
mov
dec
shlb
ret
and
jo
in
mov
fmuls
sbb
stos
mov
dec
scas
test
mov
lcall
xor
mov
sub
cmp
cmpsl
inc
loopne
mov
sahf
adcb
cs
xchg
mov
in
push
cmc
push
dec
lock
or
cmp
test
push
data16
ljmp
jb
lock
orl
test
ss
cmp
aad
les
xor
and
pop
pop
jbe
cmpsb
cs
loope
cmpsb
lahf
cltd
sbb
cmp
pushl
inc
icebp
arpl
shll
add
test
fcomp
ret
jp
or
cmpb
mov
pop
adc
add
sbb
das
scas
and
sub
xchg
sbb
lea
cmc
sbb
lahf
out
xchg
cmc
lds
hlt
call
stc
pop
push
cli
cmp
fisttpll
pop
xchg
push
icebp
sub
push
xor
cwtl
cmp
leave
scas
mov
pop
dec
xchg
ds
jno
sbb
outsl
xchg
cmp
mov
fiadds
jmp
in
inc
mov
lret
cwtl
cmpsb
faddl
cld
lds
dec
out
xor
gs
call
fsubl
paddsw
mov
aas
and
mov
fmull
test
jnp
bsr
mov
add
icebp
cmpsl
xchg
inc
stos
cmp
and
push
add
sbb
pop
out
rcrb
pshufw
stos
sbb
jo
push
in
dec
mov
into
mov
mov
dec
shrl
scas
movsb
jl
dec
lds
mov
dec
sbb
add
stos
pop
sbb
sub
aad
or
sbb
and
pop
and
jns
add
faddl
sub
push
mov
aas
call
push
sub
dec
fmull
cld
shl
aaa
repnz
pop
mov
inc
test
cmp
push
stos
out
mov
inc
and
test
or
cmp
incb
sbb
dec
pop
inc
adc
aas
push
sbb
cltd
jnp
pop
jp
lret
repnz
ljmp
jge
in
jae
jg
lods
cmp
push
iret
stc
inc
aas
or
sarl
pop
pop
fadd
mov
mov
shl
sub
fistl
sti
in
test
pop
lock
mov
movsb
dec
xor
iret
xchg
fs
dec
fisubl
subl
outsl
out
dec
scas
push
cmp
dec
roll
lds
cmp
filds
mov
test
mov
mov
sub
ja
jno
jbe
es
add
add
adc
mov
sbb
mov
cmp
cmp
mov
movsl
mov
bnd
imul
cmp
ss
gs
pop
notl
mov
lock
outsb
andl
lea
loopne
cld
in
rclb
ss
ret
int3
inc
push
je
or
ret
xor
js
sub
shr
pop
cltd
lcall
mov
xlat
inc
dec
push
es
icebp
xor
lahf
push
in
inc
mov
mov
push
jp
jl
scas
repnz
loope
push
rcr
loop
test
ret
jecxz
pop
sbb
push
fdivs
decb
in
dec
xchg
pusha
mov
dec
pop
fisttpl
mov
mov
cmp
cmp
rcl
mov
push
int3
jp
movsl
sub
push
xchg
xlat
or
sbbl
add
cmc
mov
icebp
inc
cmc
sbb
xchg
out
mov
je
pop
aad
outsl
add
test
mov
xor
xchg
imul
stos
jb
imul
je
jo
cmc
mov
out
test
xchg
ja
lahf
adc
xchg
cmp
xor
xchg
cli
pop
pop
push
push
xor
and
inc
and
insb
fsubs
pop
clc
jnp
sub
inc
xchg
dec
jns
in
lret
push
js
adc
or
sti
cmp
cmp
inc
jns
and
add
adc
out
outsl
mov
push
mov
cli
jno
cmp
in
sub
adc
shlb
mov
add
into
pop
ret
pop
lods
inc
jne
push
push
fdivs
insl
rorb
test
js
loope
setae
cmpsl
test
incb
push
inc
pushl
pop
pop
cmpb
nop
or
inc
inc
push
sbb
xchg
lds
dec
fidivl
imul
and
mov
call
jmp
adc
lret
stos
cltd
sbb
jo
jb
scas
sbb
or
pop
dec
outsb
fscale
cmpsl
inc
xor
or
std
ljmp
jns
sbb
test
xchg
pop
and
sub
inc
jg
pop
cmp
mov
loopne
add
pop
repz
and
mov
mov
xchg
imul
push
inc
mov
mov
dec
cmc
cld
xchg
cmp
fnstcw
js
jp
cmc
cmp
xor
dec
sub
mov
xchg
adc
cmp
fs
and
lahf
dec
lods
ds
push
pop
mov
das
and
mov
jb
stc
enter
mov
push
outsl
sbb
shrb
lret
sub
into
cwtl
fisubs
sub
xchg
xchg
fimuls
inc
rcrl
test
sbb
xlat
mov
call
mov
xchg
push
jge
lahf
dec
outsl
mov
movsl
lock
lahf
xchg
push
or
je
or
insb
mov
add
hlt
jmp
sbb
inc
push
ds
out
in
xor
xchg
scas
insb
push
cmpsl
pusha
out
dec
xor
sbb
adc
or
iret
popa
mov
sti
cmp
sbb
outsb
or
jbe
lock
cmp
ds
test
xor
mov
mov
in
mov
in
jo
pop
cmp
ds
test
or
aas
in
adc
lods
mov
cwtl
xchg
add
push
cmp
mov
insl
rol
lahf
or
push
add
sub
mov
std
and
jae
out
ret
adc
lret
arpl
mov
gs
dec
jb
addl
mov
ret
mov
aas
lds
aam
das
inc
iret
les
std
mov
inc
pop
cmpsl
jl
loopne
ljmp
jae
adc
xor
pop
sub
inc
mov
add
add
cmpsb
push
xor
jge
sbbb
sbb
jecxz
sub
inc
mov
stos
hlt
jmp
jb
push
scas
nop
mov
push
sbb
sbb
jecxz
test
loopne
inc
add
and
jge
sbb
mov
out
jmp
jnp
fisubs
xchg
xor
inc
fisubs
orl
jmp
push
inc
or
insl
inc
pusha
icebp
fwait
cmp
lcall
push
les
mov
cmp
ret
mov
or
pop
and
outsb
rolb
push
xor
xor
mov
pop
repz
jno
dec
dec
jg
jbe
mov
pushf
test
popf
mov
or
mov
shll
fiaddl
outsb
or
js
push
and
xchg
sub
mov
cmpsl
sbb
test
stc
dec
dec
rcr
and
imul
jl
arpl
outsl
std
lret
out
insb
jae
lcall
sahf
sub
pop
mov
loopne
jmp
dec
or
xchg
xchg
in
fimull
hlt
mov
mov
call
fidivl
cwtl
mov
mov
stos
aad
into
mov
psraw
cmp
or
outsl
mov
mov
leave
xlat
jg,pt
or
fwait
mov
sub
sub
stc
or
cli
push
sti
sub
and
je
cmp
xchg
inc
in
dec
xor
pop
addl
mov
or
cmp
in
dec
and
pop
test
push
sub
dec
xchg
fnsave
xchg
insb
push
cltd
adc
pop
push
push
ljmp
jle
mov
lods
arpl
mov
sub
pop
leave
xchg
int
mov
ret
daa
scas
add
mov
xchg
push
lods
aad
xchg
sub
adc
jecxz
mov
xor
lea
fisttps
cmc
cmc
xorl
mov
add
cltd
mov
cmc
sahf
js
inc
mov
and
jno
add
repnz
repz
lea
jecxz
out
in
dec
jbe
mov
sahf
pop
daa
ficoml
cmp
and
adc
and
inc
cltd
fsubrs
aad
and
and
decb
or
inc
mov
adc
dec
sub
jne
dec
rcrl
test
mov
ret
fwait
cli
push
mov
out
pop
mov
and
or
lea
sbb
dec
and
test
or
xchg
int3
out
pop
cmp
lret
push
stos
add
xchg
cmp
in
in
add
orb
xor
bound
jmp
jle
xlat
jae
dec
sbb
in
jmp
push
sbb
jge
out
shll
xchg
adc
addr16
psllq
scas
cmpsl
je
mov
fimull
xchg
test
adc
pop
pusha
mov
dec
mov
jl
in
ja
cmc
stos
sub
sub
das
aaa
xchg
fldt
jl
pop
jae
adc
sbb
adc
dec
imul
js
push
or
mov
outsb
les
cmpl
lods
out
fwait
adc
shr
pusha
cmpsl
mov
xlat
fwait
push
sbb
js
shlb
dec
rolb
jge
lret
insb
idivb
js
mov
stos
push
les
arpl
and
out
sub
and
mov
cmp
mov
mov
jbe
idiv
add
icebp
test
lods
cmpsb
pushf
cmp
jle
inc
and
adc
repz
imul
cmpsl
out
ds
mov
dec
pop
sbb
fisttps
scas
xor
rorl
pop
int
dec
pusha
scas
cmpsb
sbb
cmp
shrl
movsb
scas
out
cmc
sub
lods
repz
cmp
inc
cmpsb
sbb
jg
clc
cmp
cmpsb
xchg
and
insb
and
lcall
adc
orl
pushf
push
jmp
push
repnz
insl
mov
sbb
movsl
sub
mov
jp
add
adc
mov
and
jle
dec
xor
mov
outsl
fstpl
mov
mov
xor
or
or
in
xchg
call
pop
xchg
inc
fsubrs
into
xchg
dec
pop
lret
loope
in
notl
xorb
xchg
jecxz
lret
push
jns
cld
popa
fs
data16
shlb
and
inc
dec
in
repnz
pop
loop
jg
and
ret
jl
int
lret
fdivrs
daa
jns
arpl
out
test
xchg
test
inc
cmp
arpl
rcrl
aaa
pop
test
leave
js,pn
mull
das
mov
mov
call
or
subl
mov
pop
enterw
lods
lret
cltd
pop
pusha
or
sbb
push
cs
mov
jae
dec
test
add
cmp
dec
mov
repnz
cmp
mov
les
mov
jnp
int
decb
jp
inc
cmp
and
mov
bsr
push
mov
jge
mov
inc
adc
dec
in
jb
xchg
cmp
xor
lds
jg
mov
rcrb
mov
jnp
hlt
jge
mov
sti
les
sbb
cmp
sbb
adc
jmp
std
mov
insl
in
stos
ret
jae
push
dec
cmc
les
pop
lcall
orb
arpl
cmpsl
dec
jns
mov
dec
pop
dec
cmpsb
stos
jae
cmp
lahf
and
dec
fwait
xchg
div
rolb
xor
push
testl
ret
cmp
xchg
shll
ret
mov
dec
popf
pop
pop
in
pop
lods
adc
mov
iret
jmp
lret
push
addr16
dec
test
xchg
jns
mov
mov
ret
dec
aad
fst
jg
ds
xchg
push
call
mov
mov
dec
mov
mov
dec
in
jecxz
xchg
and
jo
sub
stos
or
int
pop
lods
leave
xchg
ljmp
cmp
xchg
inc
lcall
push
sbb
xchg
mov
imul
push
insl
mov
ret
mov
sbbb
pop
jo
mov
adc
jb
cmp
add
mov
cwtl
mov
loope
ficoml
xchg
ljmp
add
sbb
out
test
xchg
popf
pop
aad
cwtl
out
mov
xchg
lret
test
xchg
ret
and
sub
pushf
pop
mov
adc
ret
loop
xchg
addr16
adc
xchg
push
outsb
je
lret
pushl
add
add
ja
lds
jae
jnp
adc
add
xchg
sbb
out
sti
push
and
stos
inc
pop
ficomps
das
mov
pop
push
mulb
and
add
popa
mov
cli
sub
mov
jmp
push
mov
adc
cli
clc
dec
or
loopne
test
jo
fiadds
adc
xchg
daa
cwtl
fstpt
jno
adc
push
pop
inc
mov
mov
gs
decb
mov
cwtl
rcrb
cmp
mov
mov
mov
jge
adc
dec
in
jnp
aad
sbb
xchg
and
adc
mov
sbb
nop
jecxz
adc
in
test
pop
cmpsb
fcoms
pop
aad
cmp
dec
mov
or
outsl
pop
lahf
mov
xchg
or
or
leave
stc
or
sub
movsb
fsubs
inc
js
mov
push
iret
in
std
dec
jg
cld
in
fmulp
cs
xlat
and
sub
push
adc
jmp
or
jb
imul
mov
pop
fldenv
mull
push
insl
pop
fstl
adc
mov
mov
push
xor
dec
ja
data16
idivl
clc
scas
test
sbb
push
and
fadd
mov
adc
out
cmp
xor
ret
test
and
addr16
ds
pop
mov
lods
lret
aad
mov
jns
sbb
or
out
das
inc
aaa
add
or
push
outsl
inc
mov
fwait
push
sub
pop
cmp
addb
faddl
icebp
mov
bound
test
dec
fwait
cmp
movsl
and
in
repnz
hlt
js
cmp
xchg
inc
cwtl
mov
shll
addr16
pop
adcl
cmp
leave
stc
sbb
shrb
inc
pop
inc
andb
and
fsubrs
xor
xor
test
test
xchg
mov
loopne
pop
sub
sub
insl
xchg
pop
mov
lds
mov
call
adcl
jge
cmpsl
xor
loope
ljmp
mov
int
loope
mov
sar
adc
jle
pop
inc
lret
cmp
lea
sbb
mov
addr16
out
fwait
arpl
mov
and
mov
std
or
pop
dec
adc
pop
xlat
pop
aad
xchg
cmpsb
add
mov
mov
push
pushf
adc
in
mov
add
and
pop
add
sub
mov
push
sbb
mov
cmp
mov
and
movb
sub
ret
mov
mov
movsb
mov
mov
dec
mov
test
je
and
jl
pop
or
cs
pusha
inc
pop
adc
or
dec
sub
bound
ljmp
rclb
aas
mov
xor
pusha
aad
mov
cmpsb
stos
sub
inc
or
imul
stos
jmp
popf
add
adc
stos
mov
sarb
sbb
dec
pop
jbe
cmp
push
popf
or
divb
scas
ret
lods
add
mov
add
movsb
ss
scas
cmp
inc
inc
inc
cwtl
and
enter
jbe
mov
add
mov
pop
adc
call
jo
xlat
mov
mov
push
das
les
xlat
icebp
push
sbb
push
out
insl
test
ds
xchg
sahf
bound
mov
mov
icebp
lret
pusha
loope
mov
add
ja
or
or
xchg
cmp
ret
push
pop
jnp
pushf
add
xor
jne
cltd
imul
iretw
movsl
je
or
in
mov
sbb
dec
sub
pop
orb
andl
fwait
lods
mov
and
push
mov
shl
in
rclb
pop
into
out
dec
sbb
push
mov
aam
andb
addr16
jne
gs
insl
pop
jmp
mov
cli
sbb
sbb
das
dec
aaa
fdivrp
adc
daa
adc
adcl
std
mov
dec
test
aam
sbb
adc
bound
cmc
rcrb
sub
mov
inc
pop
mov
js
test
xor
or
rcr
push
popa
jg
inc
xor
adcl
aad
popf
in
mov
jb
inc
into
aam
xor
insl
sbb
xor
cltd
test
mov
jle
out
dec
or
or
inc
fwait
rcr
out
lods
push
rorl
roll
imul
mov
pop
adc
fsubl
push
inc
push
push
mov
aam
mov
and
xchg
popa
add
pop
xor
test
mov
pop
pop
cmp
stos
xor
sbb
sbb
lahf
nop
dec
icebp
cmpsb
xor
and
xor
xor
into
mov
test
push
sub
mov
sub
rcr
into
mov
xchg
ret
or
mov
pop
adc
fs
and
mov
enter
mov
jbe
fwait
aaa
sahf
and
in
test
fsubrs
sub
lret
jnp
dec
icebp
adc
iret
pusha
jb
add
insb
movsl
imul
cmp
mov
ljmp
sub
shl
in
movhps
or
push
mov
or
and
jb
xchg
scas
xor
pop
or
lret
hlt
pusha
pop
and
cli
inc
fwait
lcall
icebp
pushf
mov
cmp
or
fistps
add
int3
fdivl
jg
cmp
push
loop
cwtl
sbb
sbb
rol
xor
hlt
xchg
je
lods
pusha
leave
pop
xor
bswap
cmpsl
mov
inc
outsb
decl
adc
ficomps
pop
xchg
push
out
fdivrs
sbb
xchg
sub
cmpsb
xorb
nop
jecxz
push
lret
dec
sbb
pop
add
fimull
adc
fucom
push
fcoms
minps
repnz
cwtl
fsubrs
mov
dec
popf
fcomps
mov
mov
push
test
cmpsl
add
mov
pop
xor
cmp
sub
sbb
in
and
or
cmpsl
mov
hlt
sbb
imul
insb
xchg
mov
popa
dec
cmp
incl
mov
fisubl
or
jb
sti
mov
mov
decb
enter
mov
ror
or
lods
mov
outsl
loopne
out
int3
rol
cmp
flds
sbbb
push
jo
jp
out
mov
test
sarl
xchg
lea
xchg
mov
push
cld
loopne
lret
shlb
cltd
enter
imul
inc
mov
mov
movsl
rorb
shlb
xchg
popl
mov
cmp
pop
jmp
adc
into
dec
push
aaa
pop
insl
cld
inc
je
hlt
cltd
inc
mov
call
adc
daa
push
inc
pop
pusha
fwait
sbb
insb
and
jbe
rclb
rolb
lcall
rorb
cmp
sub
int3
xor
xchg
les
popa
pusha
sub
mov
dec
jl
push
mov
sub
add
pop
sbb
test
addl
aad
push
adc
adc
sub
hlt
stc
xchg
stos
roll
push
fs
sub
adc
dec
outsl
mov
mov
shl
lcall
ds
inc
xchg
mov
mov
mov
jmp
fistl
push
in
cmpsb
inc
stos
mov
test
pop
lret
mov
addr16
pop
movsl
and
pop
enter
mov
mov
out
dec
lods
mov
outsl
lock
add
cmp
pop
lods
sbb
iret
popf
aad
pop
andl
sub
dec
ret
bound
add
hlt
xor
mov
out
xchg
ret
or
xlat
sub
movsl
or
shrb
cltd
sbb
add
xchg
test
mov
lock
cmpsb
adc
lret
mov
test
ret
jnp
in
in
pop
test
repnz
adc
sahf
sti
faddl
lods
das
hlt
xorb
jnp
push
add
shlb
mov
mov
ja
mov
or
outsl
aas
adc
xorb
sbb
push
mov
jo
mov
js
test
fidivl
bound
xor
into
mov
xchg
push
xlat
repnz
lock
pop
sbb
cmp
loope
mov
movsl
test
pop
push
inc
push
xorl
pusha
mov
jbe
pop
lods
shlb
mov
add
jmp
pusha
mov
aad
outsb
xchg
fs
cmp
dec
imul
and
jb
push
roll
push
lock
push
mov
mov
fistl
clc
aaa
dec
sub
icebp
mov
mov
mov
mov
or
xchg
dec
out
jl
out
cmp
pop
sti
outsl
fimuls
lock
xchg
jg
xchg
subb
xor
jns
test
ret
push
cmp
js
shrb
inc
test
push
fisubl
mov
aaa
add
out
and
in
fwait
test
lret
popa
lods
jmp
xorl
sahf
dec
cmp
pop
jmp
or
push
mov
sti
dec
add
add
mov
std
pop
jns
insb
sub
into
mov
movsbl
pop
mov
dec
ljmp
insb
mov
orl
dec
cmpsl
filds
jo
jae
lds
aad
adc
pop
add
arpl
ljmp
rcl
pop
lea
mov
mov
xor
add
faddl
sub
push
xchg
outsb
mov
rol
push
stos
xchg
and
inc
rolb
sbb
or
dec
push
xchg
pop
mov
cmp
lahf
and
inc
xchg
sbb
cmp
lea
ss
test
stos
fidivl
movsb
rcr
mov
aad
ds
push
loope
xlat
stos
ficoms
cmp
push
sti
notb
test
adc
call
cmp
cmc
mov
inc
xchg
or
call
jle
mov
bound
std
or
or
mov
insb
iret
or
addr16
mov
mov
jmp
jo
aad
inc
xchg
push
xchg
out
add
into
adc
clc
ss
jp
loopne
add
scas
out
push
or
adc
mov
inc
jge
fs
repz
ja
pop
mov
or
jb
pop
fwait
lock
js
scas
insl
dec
out
inc
sub
test
test
mov
test
xchg
mov
dec
inc
cmc
dec
inc
or
dec
data16
jne
pushf
sbb
adc
popf
scas
cmp
pop
fnstsw
push
cmp
fisttpl
push
fs
push
sub
ret
dec
outsb
subw
add
movsb
xchg
push
shrb
hlt
pop
cmp
outsl
mov
and
push
mov
cmp
xchg
outsl
xchg
sub
nop
pop
addl
in
adc
in
mov
jl
jae
lds
outsl
lret
dec
mov
push
mov
push
popf
scas
cmp
inc
sub
cld
and
pushf
add
fadds
cmpsb
outsl
and
add
adc
push
aas
inc
fmul
outsl
vmptrst
hlt
jp
fmuls
xor
and
mov
sbb
imul
leave
out
xchg
sbb
enter
push
xchg
int
std
ret
fcmovnb
and
inc
out
inc
and
lods
rcrb
mov
xor
cmp
insl
jno
or
push
insb
sub
daa
fwait
jo
mov
push
dec
into
nop
mov
xchg
add
bound
mov
test
adc
dec
je
inc
inc
gs
lret
add
adc
stc
shll
loop
sub
popf
dec
dec
stos
sub
ffree
mul
inc
pop
pop
loopne
repnz
ret
mov
and
jg
and
sbb
mov
mov
lds
lea
mov
arpl
xor
and
push
clc
out
adc
test
insl
push
push
pop
out
cmp
stos
gs
fimuls
jae
daa
daa
aam
cmp
dec
out
push
sub
ljmp
or
xchg
shll
add
scas
pop
push
push
fnstenv
loope
int
add
adc
cmp
scas
add
lock
add
aas
or
iret
cmpb
lds
dec
add
mov
push
insb
pop
bound
and
xchg
fsubl
std
mov
testb
mov
repnz
mov
stos
inc
nop
ss
movsl
je
mov
dec
sbb
out
mov
mov
jno
mov
test
jne
enter
out
jae
dec
jl
add
imul
lret
cmc
sub
jl
loopne
mov
arpl
cmp
stos
push
loope
out
out
inc
mov
lcall
pushl
pop
js
cmp
into
mov
push
sbb
mov
out
mov
in
lcall
frstor
test
divb
push
insl
out
outsl
testb
daa
push
sub
or
cmc
xor
xchg
sahf
ja
pop
in
mov
or
pop
cmp
ljmp
mov
cmp
outsl
ljmp
sti
or
das
pop
imul
mov
out
in
lret
ljmp
pop
add
and
sbb
or
or
mov
cmp
sbbb
cmc
push
mov
jge
xor
bnd
mov
cli
pop
push
jae
test
xor
sarb
push
lahf
nop
mov
mov
mov
in
fs
xlat
jo
and
inc
xchg
xor
pop
ds
loop
dec
cwtl
sbb
icebp
mov
xor
sbb
lcall
pop
lods
adc
fdivl
fiadds
icebp
andl
pusha
ss
xchg
ret
push
out
cmpb
repz
push
xor
data16
and
sub
int
fsubrs
dec
jecxz
adc
adc
push
push
adc
popf
xchg
aam
cwtl
ja
mov
pop
push
add
test
and
cmp
push
into
ret
dec
stos
or
jae
inc
jle
inc
notb
cmp
adc
and
push
dec
pop
or
pop
jg
xchg
and
clc
mov
call
xor
addr16
push
jns
mov
out
jle
movsb
sbb
xchg
sarb
ss
cmp
and
pop
arpl
adc
lret
jl
or
or
xor
push
popf
shl
add
jnp
mov
mov
add
lret
fistpl
xor
xchg
mov
lcall
std
ret
or
or
repnz
xchg
xchg
jge
mov
test
and
sub
pop
and
repz
add
pop
icebp
stos
sub
push
xlat
mov
sbb
jl
leave
dec
and
adc
std
jecxz
xor
ja
fimuls
jno
popa
stc
fs
mov
dec
aam
cmp
aad
jmpw
popa
sub
es
scas
outsl
pop
lahf
mov
popa
or
xchg
jns
std
xchg
popf
mov
data16
push
loopne
pop
pop
inc
arpl
mov
add
xchg
fimull
lock
xor
rclb
loop
jns
pop
imul
mov
nop
scas
in
rorl
sbb
clc
mov
stos
mov
cmp
ss
mov
in
mov
add
xor
mov
es
mov
adc
scas
xchg
fcompl
add
push
push
lret
xor
jo
loopne
ss
lea
cs
fnsave
push
bound
mov
jp
nop
push
icebp
sbb
xchg
inc
adcl
jge
sbb
sub
into
aad
mov
insb
cmp
sbb
jb
jg
enter
push
sarb
push
mov
cmp
cmp
daa
lods
cmp
divb
icebp
push
xchg
es
or
sti
xchg
inc
and
xor
pop
sub
push
lahf
cmpb
pop
lcall
inc
push
push
out
fldenv
pushl
jmp
inc
es
xor
daa
rorl
inc
push
inc
sub
notl
jg
gs
jne
or
jnp
mov
fdivl
mov
enter
sbb
cmp
push
jmp
xor
add
push
lea
add
add
jo
or
push
pop
xchg
dec
mov
lret
aaa
jbe
sbb
jo
les
xchg
loopne
xchg
inc
adc
push
vmovaps
fs
lret
rcr
stos
push
inc
enter
push
mov
les
or
lcall
xor
push
lods
fmuls
je
and
js
pop
sahf
jo
push
sub
sarb
xchg
mov
push
cmp
xlat
pop
mov
out
lahf
adc
dec
pop
add
pop
adc
xor
add
mov
mov
inc
in
gs
sub
scas
cltd
xor
adc
ljmp
pop
shrb
add
std
cmp
cmp
stos
inc
lea
inc
fistps
cld
cmc
bound
xchg
ds
push
mov
and
sub
out
inc
pusha
jo
pop
std
mov
and
out
cmc
jo
hlt
scas
ja
push
jecxz
iret
or
loop
ret
jmp
sarl
imul
cmp
aad
nop
sahf
mov
jl
add
mov
jbe
xchg
pop
sahf
push
lods
iret
outsb
jb
mov
pusha
data16
xchg
mov
lds
xor
jnp
and
fadds
pusha
repz
insb
in
into
dec
mov
fcomps
insl
cmp
add
scas
popf
movsb
jo
ss
xor
cmp
call
icebp
xor
or
into
imull
adc
jg
lock
cld
adc
xor
insb
and
jno
test
mov
lret
aad
out
mov
inc
daa
jle
jnp
lret
adc
imul
out
xchg
sbb
int
push
pop
loope
push
std
pop
ljmp
mov
jle
push
shrl
aad
sbb
popa
pop
lods
mov
sbb
sahf
xchg
jg
sub
flds
push
rclb
gs
shr
ret
ja
stc
sub
sbb
mov
in
mov
shl
out
jnp
lcall
jl
jmp
and
sub
sub
jmp
push
add
movsb
xor
sbb
aaa
add
pop
or
cmc
fnsave
sti
jb
mov
lock
dec
testb
divl
dec
xor
mov
xor
or
mov
mull
jnp
mov
mov
cmpb
sub
dec
dec
xchg
shl
adcb
xchg
fdiv
insl
stos
ret
movsb
rcr
cmp
ljmp
jl
pop
pop
aam
mov
and
in
dec
pop
popf
sub
mov
sub
inc
ja
xchg
es
out
add
sbb
sub
fldenv
fldcw
cmpsb
clc
add
mov
jg
scas
push
ss
xor
in
shrl
ja
sbb
mov
xchg
cmp
lcall
mov
enter
or
into
adc
test
icebp
jg
mov
mov
sbb
data16
int
mov
lahf
jmp
ret
jns
adc
mov
icebp
rol
decl
js
inc
scas
pop
and
pop
shlb
push
fidivrl
mov
push
and
pop
cmp
add
incl
and
sub
lods
addr16
cwtl
stc
sub
jno
in
pop
push
out
movsb
xchg
dec
sbb
dec
pop
sbb
outsb
repz
push
es
mov
in
xchg
adc
nop
popaw
popf
out
push
pop
fisubrl
test
mov
popf
adc
sbbl
js
mov
mov
int3
pop
sub
loop
cmc
mov
inc
inc
adc
jle
lcall
jno
jmp
cmp
xchg
in
and
in
and
jbe
pop
int
push
addr16
dec
dec
xor
pop
sti
adc
sahf
and
inc
mov
cmp
popa
push
sub
pop
mov
jecxz
jns
addl
mov
and
lcall
mov
pop
push
cmp
mov
data16
jae
dec
mov
jo
dec
fimuls
sbb
andl
jo
pop
fstps
lahf
xor
and
pop
cltd
cmp
loopne
lods
pop
and
das
xchg
and
pop
out
xchg
insl
stos
add
adc
mov
test
vprotq
adc
sub
pop
inc
or
mov
ret
pop
scas
roll
daa
mov
add
cmp
push
sbb
nop
fs
les
test
push
aam
insb
pop
loop
pop
loope
mov
insl
pop
push
test
stc
dec
jnp
ds
cwtl
cmp
mov
fcmovu
out
loop
inc
mov
and
jne
sbb
dec
daa
cmpsb
xlat
push
inc
or
aas
repnz
push
and
xor
int3
cmp
cmp
cli
orl
rcl
mov
xchg
mov
iret
cwtl
mov
dec
test
rcr
dec
adc
xchg
mov
adc
pop
sti
mov
icebp
fsub
lds
mov
sahf
or
sub
cs
or
neg
add
sub
mov
test
test
repnz
push
mov
add
pushf
cltd
decb
sbb
push
jl
repz
daa
sub
js
cli
ror
fwait
xor
xor
pop
ljmp
dec
and
pusha
cwtl
jne
inc
pop
insb
adc
fdivrl
inc
pop
sub
nop
xor
mov
repnz
jae
aas
adc
mov
stc
inc
dec
aad
xchg
cmp
xchg
js
push
and
nop
adc
dec
ss
add
pop
scas
test
mov
sub
addl
clc
xlat
and
mov
lods
xor
dec
pop
sub
jmp
cs
idiv
push
inc
xchg
mov
lds
cmp
lock
sbb
insl
pop
arpl
pop
arpl
icebp
pop
jg
in
mov
push
xor
jmp
stc
mov
das
sti
aaa
jecxz
xor
movsb
popf
push
mov
push
mov
mov
fwait
adc
adc
inc
shll
test
hlt
sbb
pop
jmp
lods
mov
mov
test
in
sbb
fs
add
out
xchg
sbb
sub
cltd
pop
cli
xchg
xchg
pop
gs
leave
cwtl
mov
push
dec
pushf
lods
jns
in
leave
dec
shll
ss
xchg
xor
fadds
pop
dec
cmpb
rclb
gs
sbb
les
scas
ljmp
dec
nop
or
pop
insl
jecxz
subl
jno
jmp
nop
mov
mov
dec
adc
in
and
and
sub
stos
jg
xchg
jb
mov
mov
add
popf
divl
push
cmp
inc
mov
loopne
hlt
pop
fimull
xor
push
lcall
pop
mov
dec
fadds
mov
adc
jb
mov
cli
or
pop
out
mov
aam
sub
rcll
pop
pop
inc
push
mov
inc
sub
xor
test
das
loopne
jae
push
adc
xor
je
inc
pop
sub
std
cmpl
inc
jo
mov
mov
repnz
popf
ror
lock
jmp
inc
push
rolb
data16
das
int
int
insl
mov
icebp
sbb
mov
jle
shr
pop
push
idivl
jae
imul
bswap
dec
insb
lret
xchg
mov
mov
dec
out
push
ffreep
and
add
mov
mov
jno
lret
movsl
iret
lret
push
outsl
sarb
mov
mov
pop
xor
rclb
dec
inc
or
push
lret
loop
jg
iret
addr16
aam
test
xor
mov
push
add
cmc
out
push
cmp
xorb
push
insb
in
mov
sarb
inc
sbb
and
xor
aad
mov
mov
or
mov
add
mov
lret
mov
dec
push
fucom
or
adcl
stos
mov
sub
icebp
push
sahf
jecxz
jmp
inc
jp
cmp
push
jns
xchg
sub
repnz
insb
bound
loopne
les
sub
pusha
and
notb
sub
popl
cmp
pop
pop
es
addr16
sub
mov
cmpsl
outsb
data16
mov
and
dec
icebp
xor
aas
mov
dec
ret
cmpsl
fcomi
jne
imulb
pop
or
mov
xchg
aam
push
call
dec
ret
pop
fcoms
les
pop
mov
cmp
jg
pop
add
imull
jmp
ret
clc
out
sbb
cmp
lds
xchg
subl
out
movsw
pusha
adc
incl
jb
jns
mov
int
hlt
push
jb
push
adc
aaa
mov
fisubrs
push
std
or
fidivl
pusha
out
sub
les
push
pushf
movsl
cmp
mov
lcall
push
gs
daa
subb
push
out
push
test
mov
leave
aas
fidivs
subl
push
push
cwtl
sub
int
mov
mov
xor
add
scas
mov
cmp
cmpsl
jns
call
sub
add
popa
stos
fidivs
das
stc
sbb
mov
enter
das
sarb
rcr
cwtl
js
add
mov
das
dec
or
jmp
jo
mov
sub
xor
fidivs
jns
push
daa
fsub
and
pop
outsl
clc
xor
jo
idivb
add
mov
negl
mov
cwtl
mov
mov
arpl
test
push
inc
mov
pop
pop
sbb
lock
add
push
and
aas
loope
cmp
fwait
pop
jl,pn
lret
out
scas
inc
cmp
cmp
into
aaa
repz
imul
mov
sub
jmp
sub
add
inc
std
cmpsl
outsl
pop
jl
icebp
lock
adc
and
sbb
jmp
inc
fstpl
es
shrl
lods
mov
jno
mov
sbb
fnstsw
inc
mov
adc
sub
stos
inc
push
scas
sbbb
or
bound
mov
adc
sbb
out
mov
insl
or
cld
xlat
mov
or
lcall
jo
gs
push
in
jge
cmpsb
xchg
cli
int
ljmp
cltd
cmovs
push
lret
push
inc
cmpsl
jge
cmp
add
bnd
pop
pusha
cmp
btr
rcr
jl
mov
adc
adc
cmp
loope
mov
xor
dec
or
iret
pop
push
mov
push
daa
or
ret
in
imul
jecxz
jp
adc
sbb
ds
mov
popf
jge
jle
rclb
in
movsl
mov
adc
fdivrl
jle
xchg
ds
jbe
rcrb
les
xchg
mov
js
pop
addr16
ds
inc
neg
cmp
and
sti
hlt
push
sub
mov
pop
adcb
into
or
repz
pop
sub
inc
xchg
stos
push
out
pop
pop
je
movb
stos
inc
pop
mov
ds
and
call
pop
in
hlt
outsl
ss
fstl
imul
jmp
lock
movb
and
sbb
mov
movq
mov
movsl
or
mov
js
in
sti
insl
loop
into
or
aaa
jnp
ds
push
mov
or
shr
ss
shll
outsb
in
push
aad
mov
sarl
xchg
ficoms
xchg
pop
aaa
dec
lea
call
or
cwtl
sub
jno
jmp
jns
pop
add
inc
sbb
jnp
addr16
repz
jae
addr16
add
dec
add
loope
inc
icebp
fidivs
lret
fs
in
pusha
int3
lods
mov
orl
mov
sbb
push
scas
xor
pop
mov
ficoms
out
inc
shrb
pop
dec
stc
mov
dec
adc
mov
jnp
sub
push
addl
roll
in
mov
scas
sbb
nop
push
jno
int3
push
xor
jg
cmp
sbb
call
mov
ljmp
push
aas
rclb
pop
cltd
jp
pop
push
mov
mov
mov
fisubrs
mov
dec
jbe
lcall
mov
mov
push
push
insb
jb
sub
xchg
xor
aaa
push
sub
insl
scas
into
jo
gs
cmp
push
sbb
stos
mov
popf
adc
add
movsb
test
ss
loopne
ds
call
test
cmpsl
loope
mov
cmp
ret
push
dec
out
out
add
sti
stos
push
mov
sub
sahf
sub
int3
sbb
xchg
mov
imul
scas
cld
pop
and
sub
lds
jns
fnsave
dec
dec
cltd
add
or
ficomps
fsts
xor
mov
push
sbb
nop
and
xchg
sbb
loop
pop
test
xor
dec
and
lfs
test
mov
negb
mov
pop
fstl
mov
lret
pop
jns
outsl
pop
fs
stos
test
lret
mov
test
jmp
mov
pop
in
ljmp
jecxz
and
adc
inc
das
adc
mov
pop
test
pop
push
xchg
adc
addr16
in
adc
lahf
mov
rolb
pop
xor
mov
pop
call
or
dec
adc
add
xor
rcrb
jnp
hlt
and
scas
pop
ss
out
mov
or
cmp
push
mov
cmp
or
ret
jp
repnz
ffree
pop
lock
lea
xchg
jp
dec
add
add
es
adc
ret
mov
iret
adc
test
xchg
push
lcall
leave
cmpxchg
pop
movsl
outsl
out
adc
or
mov
push
sub
add
mov
jnp
push
pop
sub
cli
lret
loope
xchg
jle
push
xor
cld
jge
aaa
out
loop
inc
ja
ja
mov
sbb
std
icebp
pop
add
inc
fwait
pop
and
add
lret
icebp
cmp
mov
dec
adc
shr
cmp
mov
or
repz
xchg
test
mov
mov
stc
shrb
jmp
aas
scas
xchg
xchg
jge
xchg
cs
cwtl
and
aam
int3
fsubrp
push
out
push
mov
aas
jnp
jne
lods
add
sarb
imul
loop
or
ret
int
repnz
gs
adc
adc
movsb
mov
sbbb
bound
jbe
xchg
mov
jg
dec
and
ds
sbb
out
xchg
addr16
iret
sbb
js
out
pop
fcom
lahf
and
sbb
inc
xor
jbe
xchg
inc
in
mov
add
setno
popf
js
orb
dec
out
mov
jg
pop
xchg
imul
fdivrs
xor
sbb
lret
out
out
dec
sti
repz
push
shrb
ret
addr16
aas
mov
jecxz
mov
mov
out
cld
or
daa
scas
and
imul
int
cmpsl
clts
into
mov
jae
enter
arpl
popa
xlat
and
sbb
dec
pop
jae
sub
fld
jmp
pop
pop
fistps
inc
notb
cltd
xchg
sbb
aam
sub
test
inc
pushf
xor
mov
fs
rcll
dec
mov
popa
mov
dec
incb
div
xor
push
cmp
in
mov
outsl
mov
test
fdiv
sbb
pop
xlat
mov
pop
lea
jne
repnz
repnz
and
add
sbbb
jns
repz
aas
out
lods
xchg
xchg
hlt
sub
mov
inc
enterw
loope
aad
pop
push
imul
dec
cmp
fisubrl
mov
shrb
dec
pop
pop
pop
sbb
sti
and
pusha
ss
xlat
popa
jge
test
lods
sarb
sbb
jns
push
sbb
mov
insl
adc
push
cmp
inc
xchg
and
movaps
sahf
mov
ret
push
clc
pusha
adc
out
pop
xor
and
mov
mov
call
rclb
inc
addl
outsb
iret
add
pop
insl
data16
xchg
ljmp
nop
arpl
aaa
leave
xchg
fildl
vunpcklps
mov
lock
pop
in
js
xchg
mov
push
pop
mov
and
incb
repz
mov
mov
jns
cmp
inc
iret
dec
ljmp
shll
jae
xchg
loope
icebp
repnz
lret
mov
out
movsb
sub
sbb
pop
or
in
mov
sbb
test
jl
stc
fwait
out
push
loopne
out
push
scas
sbb
leave
inc
pop
lock
movsb
imul
int
cmp
ret
cwtl
gs
push
push
jno
mov
jge
ret
gs
shrb
bound
or
cmc
fistpl
cmp
or
pop
inc
repz
lods
repnz
jno
jmpw
stc
iret
mov
daa
movsb
pop
mov
xor
cmpsl
and
fildl
xchg
dec
inc
cmp
mov
fincstp
lcall
adc
aas
mov
jno
pop
decb
hlt
inc
iret
and
sbb
xchg
fnstsw
or
or
icebp
mov
loop
push
mov
push
pop
enter
clc
nop
and
subl
xor
mov
movsb
dec
dec
jge
in
testl
jl
hlt
mov
xchg
push
xchg
mov
jbe
push
sub
jp
lods
movsb
push
xchg
mov
mov
stos
dec
negl
fdivs
aas
cmp
das
cmpsl
adc
add
outsb
dec
subb
aad
data16
cmp
jo
cmp
jmp
push
je
mov
cmc
mov
lahf
push
pop
pop
test
or
mov
sbb
ret
cmp
sbbl
xchg
das
xchg
mov
jnp
inc
les
scas
sub
in
addr16
xor
cmp
jmp
aaa
xor
lock
or
mov
inc
push
push
cmp
ss
or
push
lods
repnz
xchg
jnp
rcl
pop
xchg
xchg
mov
or
pop
pop
lods
adc
push
out
add
cmp
call
orb
call
loop
mov
test
cmp
je
repz
push
and
mov
push
jns
add
jp
sbb
mov
mov
imul
sbb
mov
inc
das
fs
call
aaa
ret
lds
testl
jmp
pop
mov
and
outsb
cmp
insl
and
cmp
push
push
lds
loope
test
outsb
pop
mov
repnz
cmp
mov
sub
clc
inc
and
mov
sbb
and
popa
nop
jmp
sbb
pushf
ficoml
mov
mov
fs
hlt
inc
dec
in
dec
bt
mov
push
outsw
pop
xchg
shl
xor
jns
sbb
std
addr16
iret
scas
jae
pop
lods
scas
data16
mov
enter
inc
ret
pop
xchg
xchg
push
push
push
gs
loop
shlb
addb
lock
nop
pushf
sbb
jne
adc
cmp
subb
test
pop
int
mov
dec
mov
mov
pop
dec
push
fidivrs
scas
mov
dec
out
loopne
inc
add
cvttps2pi
ret
sub
dec
push
shll
fwait
or
mov
in
push
es
xchg
icebp
pop
jle
dec
xorl
sub
loop
mov
and
daa
icebp
sub
andl
mov
or
push
or
lea
push
iret
mov
pop
mov
adc
cmp
sub
je
mov
add
push
xor
sbb
decb
icebp
int3
pop
mov
sti
leave
popf
push
testl
in
cli
popa
outsl
fdiv
push
push
jae
and
xor
dec
xchg
pop
push
adc
scas
popf
fwait
jge
lds
xor
jl
cmpsb
add
add
sbb
push
leave
outsl
mov
aas
pusha
icebp
mov
and
mov
fcomps
cwtl
inc
or
mov
out
ds
hlt
decb
mov
push
sbb
sbb
mov
dec
xchg
pop
jp
fisttpll
inc
outsb
and
and
lods
or
fyl2x
dec
sub
push
fs
mov
lods
test
out
out
loop
loope
mov
out
and
jmp
xchg
mov
push
test
adc
lea
sub
loope
jb
adc
lods
sub
sub
loop
mov
sbb
pushf
aaa
cltd
xor
inc
popa
scas
sbbb
scas
daa
add
sub
cld
lret
or
in
xchg
repnz
push
insl
mov
int3
inc
fsts
jle
xor
mov
mov
and
rorb
jnp
mov
lahf
jne
push
push
mov
push
lds
push
mov
test
cmp
stc
xor
js
call
rcrl
xchg
jl
dec
push
adc
inc
push
rcrl
sbb
call
jae
leave
push
sbb
mov
sbb
and
xchg
adc
fbstp
pop
mov
sbb
cwtl
int3
mov
jnp
mov
aam
rcll
cltd
fisubrl
push
sahf
mov
mov
sbbb
pop
sahf
call
shrl
movsl
xor
rorl
or
outsb
rclb
jae
adc
add
ficoms
or
inc
cmp
adc
rorb
fidivrs
pushf
dec
leave
xor
int3
inc
cmpsb
dec
cwtl
xlat
ds
mov
cs
adc
leave
pop
into
aad
inc
mov
arpl
popf
inc
add
and
push
cmp
xor
jmp
test
imul
xor
loopne
ljmp
jns
js
jnp
mov
data16
fidivrl
or
inc
lds
xor
les
fcoml
ja
jge
xchg
nop
pop
stos
nop
inc
mov
das
push
or
subb
add
call
adc
add
arpl
sub
adc
mov
sub
scas
into
mov
push
insl
or
mov
pop
xor
fwait
les
mov
lods
subb
cli
es
and
push
xorb
repnz
mov
enter
std
addr16
sbb
adc
push
xor
pop
call
pop
pop
rorl
leave
sbb
lahf
lahf
mov
mov
int
jae
out
das
fucomp
sub
das
xor
pop
dec
pusha
inc
cmp
inc
leave
jns
lds
in
aam
mov
ret
adc
jg
outsl
lahf
push
ljmp
cmpsb
js
lea
xchg
mov
mov
mov
aad
adc
and
pop
adc
jns
push
aad
test
mov
fwait
aam
and
test
out
fmul
push
ret
xlat
arpl
lret
shlb
cmp
inc
dec
es
pop
pop
push
mov
mov
movsb
addr16
inc
cmp
xchg
pop
repnz
negb
pop
jno
jne
int3
int3
data16
push
repz
pop
xor
push
xchg
cmpsb
faddp
sbb
push
mov
call
cmp
jo
cli
clc
add
sub
out
push
xor
in
cwtl
daa
ror
add
scas
mov
jnp
fiaddl
xchg
mov
or
in
outsl
pop
insb
add
fnstsw
sahf
repnz
mov
mov
repz
push
mov
pushf
leave
sahf
inc
jne
push
adc
ljmp
cmp
lock
popa
jle
push
scas
dec
xor
push
out
pop
jno
jg
fsubl
and
push
mov
or
fistl
js
dec
mov
xlat
cltd
sbb
fsts
outsl
pop
les
movsl
sub
push
and
rorl
inc
loop
pop
daa
cmp
inc
iret
std
dec
jb
mov
jo
mov
mov
sbb
icebp
divl
pop
or
stos
and
movl
dec
fisttpll
shll
cmp
test
push
adc
xor
pop
in
jne
pushf
sahf
insl
cmpsl
lret
pop
fisubrl
jle
jb
mov
and
stos
cmp
leave
sbb
mov
into
push
inc
insb
sub
mov
and
adc
popf
fidivl
mov
pusha
jno
inc
cld
sahf
cmp
adc
add
pushf
incl
call
mov
jns
out
dec
inc
loope
jb
fistl
dec
and
pop
cmpb
mov
and
xchg
ljmp
pop
mov
or
or
fld
bound
call
mov
pop
or
rol
jg
xchg
pop
mov
add
cmp
mov
xor
push
jo
outsb
pop
call
in
push
cmpsl
inc
sti
shl
sbb
in
push
sbb
out
hlt
push
js
into
sti
stc
cmp
jb
push
push
or
mov
mov
jb
sub
mov
mov
ss
insl
mov
mov
and
pushf
dec
push
jbe
in
adc
shlb
jle
xor
jo
ret
nop
mov
movl
mov
test
sahf
ficoml
fistpll
inc
adc
or
push
inc
or
sub
xchg
jge
loope
sbb
mov
into
jg
and
mov
stos
mov
pop
xor
dec
jge
cmp
xlat
jl
mov
fwait
xchg
ds
dec
iret
mov
lods
neg
add
sub
and
aas
jecxz
jg
mov
inc
movsl
cmpl
mov
xchg
xlat
xor
mov
xor
jno
fwait
mov
icebp
pop
mov
rol
sbb
ja
mov
dec
lret
jmp
mov
add
inc
mov
or
mov
mov
clc
cld
outsl
add
jl
xor
leave
add
call
add
ror
dec
sbb
dec
in
jae
pushf
ljmp
sti
jnp
push
xchg
mov
push
xchg
or
push
mov
fnstenv
pop
push
mov
xchg
or
enter
aad
roll
jnp
cmp
jbe
fnstcw
std
cwtl
cmp
out
sbb
or
sub
ds
sti
xchg
mov
cmpsl
xchg
movsl
add
rcr
xchg
dec
ret
ja
pop
leave
in
call
fsub
fs
mov
xor
popa
pop
sbbb
push
xlat
xor
xchg
xchg
pop
mov
jns
jnp
sarb
or
inc
lret
mov
mov
fwait
jge
fidivs
nop
lret
test
xchg
scas
adc
and
or
pusha
test
imul
xor
pop
mov
repnz
fs
adc
sahf
bound
and
xchg
loope
add
outsl
fsubs
gs
mov
fdivl
or
push
rol
sahf
adcb
in
adc
mov
mov
ljmp
add
cmc
andb
stc
lods
imul
adc
cltd
add
out
in
push
pop
sub
and
cld
add
sub
jmp
mov
adc
sub
mov
fmul
fwait
and
jge
lock
xor
fstpl
adc
orb
mov
add
xchg
ds
dec
daa
hlt
or
pop
xchg
dec
mov
xor
mov
loopne
inc
push
out
fdivr
sub
sub
mov
popf
sub
add
dec
dec
fimuls
test
aaa
jns
movsl
lahf
cmp
fidivs
shll
les
and
jb
cmp
ds
pusha
add
jno
adc
rcl
cmp
sti
jmp
adc
cs
inc
mov
add
push
imul
nop
outsb
mov
mov
fcomip
lahf
mov
scas
xor
dec
ret
subl
jl
push
repnz
lock
mov
sub
scas
rcr
lea
mov
aas
aad
movsb
jb
mov
xchg
mov
fsubl
inc
sbb
mov
mov
sbb
mov
insl
dec
sub
addr16
lcall
fidivrl
push
mov
jo
push
or
sub
inc
mov
cmpl
pop
sbb
cwtl
mov
fistps
mov
push
andnps
in
ret
lea
pop
mov
leave
xor
ret
out
pop
lahf
fldcw
cmc
aaa
fistpll
mov
mov
repz
and
ja
push
mov
cld
inc
xchg
jns
cmp
imul
pop
mov
pop
xchg
inc
mov
xor
out
call
sbb
xor
xor
push
mov
or
daa
dec
or
adc
dec
fcmovu
xchg
cmpsb
mov
je
stos
xchg
push
mov
int
lods
push
push
xor
les
and
push
xor
mov
jp
dec
cltd
push
mov
nop
mov
lcall
out
cltd
mov
mov
stc
fdivr
xchg
out
jne
stos
sub
lods
test
movsl
or
lds
outsb
test
mov
or
dec
inc
bswap
psrlw
add
loope
fwait
pop
je
mov
adc
aam
adc
mov
cli
enter
jnp
mov
push
in
mov
sbbb
popf
bound
add
mov
idiv
fimull
pop
mov
les
jno
aas
pop
test
and
nop
or
mov
cli
add
ror
outsl
jmp
pushf
sbb
lods
cltd
xchg
push
jmp
jl
outsl
fmuls
mov
hlt
faddl
or
mov
stc
sub
lcall
xchg
imul
jbe
xor
ficomps
add
out
push
jge
inc
hlt
add
mov
or
cmpsb
mov
popa
fsubrl
fs
push
loopne
adc
jo
sub
daa
sub
stc
rolb
jb
repz
push
ljmp
pop
repz
out
icebp
dec
repnz
mov
push
cmpsl
pop
mov
shll
rcll
sbb
cwtl
jns
int3
cmp
arpl
pop
lods
daa
mov
dec
adc
or
test
repnz
aam
jmp
jns
jle
sarb
cltd
mov
cmpsl
lahf
das
cmpsl
in
popf
add
jle
xchg
stos
pop
sbb
mov
inc
mov
test
cmpsl
icebp
xchg
mov
sbb
cmpsl
mov
iret
xor
jbe
loopne
pop
nop
scas
adc
xchg
int3
mov
sbb
xchg
scas
out
mov
cmc
int3
jmp
test
jg
and
cmp
mov
fisubrs
mov
sbbb
ss
cmp
and
adc
stos
scas
mov
adc
jo
mov
out
imul
mov
lods
cs
mov
rcrl
push
daa
dec
mov
sbb
outsl
mov
dec
push
enter
and
stc
and
add
push
jo
lret
cmpsl
or
in
sub
push
lock
roll
mov
cmp
push
gs
fsubrs
movsl
je
in
pop
mov
push
cli
and
outsb
mov
int
sub
dec
mov
insb
push
out
or
in
cmp
fs
loope
fdivrs
mov
pop
xchg
fldenv
sub
push
fwait
nop
mov
mov
fdivrp
testl
popa
int
nop
lods
and
xchg
ret
test
pop
ret
jae
cmc
cmpsl
and
jmp
cli
dec
call
dec
mov
xchg
cmp
push
shlb
flds
popl
push
sub
pop
scas
orl
js
jo
jo
sub
iret
jg
loope
js
mov
data16
pop
ds
int3
dec
jnp
cmp
add
ret
cmc
adc
mov
and
sbb
push
in
and
push
call
add
aas
mov
loop
shlb
push
clc
add
add
push
add
cltd
test
rcrl
ds
in
mov
jb
fmul
ss
ss
sub
lock
repnz
adc
or
xor
pop
into
stos
pop
es
xorb
add
insb
adc
add
add
mov
ds
rol
lods
dec
les
cmpsb
out
popl
insb
mov
sbb
je
cli
out
mov
leave
sub
scas
sub
imul
insl
push
jl
adc
xchg
rorl
inc
arpl
or
mov
xor
scas
enter
sbb
lock
dec
mov
out
int3
dec
push
xchg
repz
pop
lea
dec
iret
cld
mov
add
push
xor
mov
push
iret
and
scas
aas
sahf
jno
decb
push
cmpl
imul
pop
idivb
sbb
mov
mov
mov
sub
mov
xor
xor
mov
mov
pop
aas
mov
aaa
pushf
mov
icebp
insl
add
adc
divb
jnp
dec
mov
cltd
xchg
out
push
icebp
adc
adc
xlat
gs
loope
outsl
in
xlat
xchg
in
or
jge
or
rorl
sti
dec
sub
add
jno
push
test
mov
aaa
xor
jns
xor
jne
subl
pop
or
popa
or
jb
pop
jne
mov
filds
lds
cmpb
pop
sub
dec
push
arpl
lea
insb
shl
cmp
mov
movsb
push
popf
outsb
jge
pop
pop
push
neg
sub
test
mov
jno
fwait
rorb
push
or
ss
test
lahf
and
dec
mov
fiadds
push
popa
in
mov
push
jne
jbe
out
mov
aaa
inc
push
add
aam
es
and
jne
or
jle
dec
or
and
cmpsb
xor
cwtl
mov
cmp
repz
jno
subl
pop
xorb
xchg
in
mov
pop
stos
lcall
cmp
stos
icebp
xchg
in
mov
cltd
cmovg
sub
jp
mov
xchg
push
jbe
sub
pop
bound
mov
push
mov
clc
aaa
leave
push
lods
xor
mov
lret
cmc
push
shlb
sub
inc
push
es
icebp
test
in
scas
cli
test
or
notl
mov
xchg
out
and
fisubs
mov
fdivrl
mov
add
jp
jo
outsb
dec
pop
cwtl
jo
repz
out
loopne
cld
jne
cmp
jecxz
mov
or
in
cmp
ficoms
mov
hlt
dec
xor
int3
in
mov
test
mov
mov
lret
or
ds
inc
mov
jp
xor
push
les
movzbl
push
add
fwait
add
jbe
shll
mov
sbb
inc
pop
add
xchg
fs
add
push
xor
cmp
shll
int3
cmpsl
cmp
and
push
movsb
fwait
arpl
cmp
repz
inc
popa
aas
jbe
stos
xchg
jmp
cmp
lcall
int3
fistpl
mov
push
cmp
and
jmp
push
xchg
mov
test
mov
lret
sbb
cmpsl
xchg
add
jl
scas
jl
jnp
loopne
mov
arpl
subb
xor
adc
out
add
out
mov
xchg
loop
ds
es
cld
pop
add
cmp
das
test
mov
movsl
sbb
xor
jg
imul
push
enter
xchg
adc
or
mov
mov
pop
vpslld
sbb
test
fsts
pop
in
push
int3
xchg
xchg
or
xor
clc
mov
sbb
mov
xchg
sub
lcall
clc
addl
sbb
xor
das
out
xchg
xor
adc
jmp
xchg
dec
mov
mov
mov
mov
out
jecxz
mov
xchg
jnp
adc
jbe
fwait
sbb
adc
mov
sbb
inc
repz
push
call
ret
jo
push
sbb
push
outsl
mov
xchg
sbbb
mull
mov
bound
mov
lcall
jl
fs
sub
mov
xor
inc
sarl
mov
pop
xchg
scas
mov
inc
shlb
test
imul
into
repz
push
insb
cmp
adc
popa
xchg
sub
cltd
xchg
xor
inc
addr16
cwtl
push
pusha
fcoms
xor
movsb
push
push
rcrb
rorb
and
or
movsb
xchg
loopne
lock
sarl
xchg
dec
nop
sub
dec
fcomps
sbb
add
or
fmull
arpl
xchg
out
dec
cmp
inc
repnz
call
dec
xchg
and
fcmove
shll
pushf
call
mov
iret
jl
xor
hlt
mov
add
xlat
dec
cltd
lock
movsb
imul
and
lods
pop
jns
sub
inc
sub
test
or
xchg
xor
es
int3
js
mov
adc
jo
inc
sbb
rclb
mov
mov
mov
jecxz
mov
push
jae
loopne
sub
mov
inc
cmp
sbb
adc
dec
sbb
and
sub
mov
ja
xchg
mov
pop
sub
fcoml
xor
lock
jb
pop
or
int3
scas
pop
shl
dec
mov
ret
arpl
in
lahf
sti
cmc
pop
stc
and
std
cmp
in
add
pusha
xchg
out
aaa
adc
mov
imul
mov
push
and
fwait
in
adc
cmp
xor
aaa
sarl
dec
dec
xchg
lods
and
scas
fildll
pop
in
push
pop
nop
jbe
push
das
data16
or
xor
cmp
mov
adc
inc
or
inc
lret
out
mov
popa
dec
mov
adc
mov
int
add
aaa
in
add
sti
mov
test
sbb
addr16
xor
sbb
dec
cmpsb
jae
fstpl
xor
pusha
pop
shlb
cmpsl
in
lret
mov
fs
jno
xchg
push
das
les
cmp
je
mov
inc
in
ret
mov
xor
stos
in
push
aas
xor
jp
lea
daa
lea
std
push
arpl
inc
pusha
jg
xor
adc
fs
test
or
test
sub
sbb
adc
fdivs
push
pop
push
sub
mov
idiv
clc
inc
stos
lahf
mov
cmp
mov
mov
xor
fwait
stos
mov
push
dec
fildll
cmp
push
mov
outsl
rol
ja
xchg
gs
cmp
sub
push
sbb
push
fwait
test
add
jo
divb
push
loope
mov
push
mov
aam
or
sbb
sub
mov
nop
mov
dec
jge
sbb
imul
xor
push
and
loopne
or
push
fisubrs
pop
xchg
movsb
jl
mov
mov
push
xchg
mov
aas
fcoml
lret
pop
add
data16
and
fstl
inc
mov
popf
in
into
cld
outsl
pop
out
mov
arpl
or
out
inc
jle
dec
fldcw
mov
push
sbb
xchg
jno
or
adc
ret
dec
lods
xor
lcall
loopne
lret
es
mov
jo
fcomip
cltd
mov
jle
popf
pop
pusha
ficompl
mov
add
jge
xlat
push
shrl
int
mov
cli
push
popf
daa
sbb
andl
repnz
dec
inc
insb
pop
jne
jb
push
data16
fistpl
lret
adc
add
arpl
repnz
jecxz
fdivs
sbb
ret
insb
test
jp
je
jae
inc
mov
and
adc
fisttpl
inc
mov
int
cmp
out
sbb
je
enter
imul
add
cmp
cmpsb
add
sub
popf
lds
and
out
mov
cmp
push
or
dec
cmp
push
dec
in
inc
divb
gs
mov
jb
inc
xor
cmp
xchg
je
out
movsb
icebp
pusha
test
aad
pop
mov
sub
jl
ljmp
mov
push
stos
adc
xchg
in
sub
push
hlt
fmuls
dec
pop
in
cmp
dec
mov
nop
cmpsl
sbb
sub
add
pop
out
loopne
test
das
add
mov
dec
int3
ds
out
loope
pushf
mov
das
mov
cmp
add
sub
cmpsb
out
cmpsb
sarl
out
jns
popf
into
xor
leave
movsl
sbbl
ficoml
sbbl
data16
add
fsub
pusha
and
stc
cmp
xor
sub
cmp
out
stos
or
push
gs
push
mov
xchg
arpl
mov
lea
sbb
lock
gs
mov
jnp
fnsave
and
movsl
movsl
mov
leave
jne
clc
in
ljmp
xchg
push
test
or
mov
sub
or
lret
xchg
iret
lods
out
inc
cmp
jp
cwtl
inc
in
add
mov
cmp
sahf
dec
push
dec
push
push
push
sbb
cmp
addr16
sub
xchg
addr16
xor
fistpll
int
push
test
xchg
outsb
lea
pop
cmpb
into
push
jo
cmpsb
out
sbb
xlat
mov
fbld
or
adc
movsb
in
xchg
sub
cmc
xchg
dec
fsts
in
scas
inc
adc
sbb
jg
sbb
and
push
stos
push
lods
loopne
sbb
sbb
xlat
sahf
in
pop
cmp
dec
sub
inc
mov
bswap
cmp
mov
jae
cmp
shlb
dec
call
repnz
imul
mov
xchg
aad
xchg
in
and
js
mov
pop
or
mov
pop
xchg
push
clc
outsl
cltd
mov
imul
popf
mov
les
leave
xchg
loop
loopne
xor
mov
insb
rorl
jbe
mov
sub
inc
dec
inc
cmp
sti
lret
add
mov
pop
xlat
or
xchg
std
addr16
xlat
sub
pop
push
lcall
sbb
test
mov
cmp
mov
xchg
mov
aaa
jae
into
mov
ret
ret
mov
push
pop
jb
jb
icebp
loopne
ficoms
cmpsl
pop
add
gs
cmp
sub
pop
test
jae
leave
lahf
addr16
fistps
push
pop
add
ret
push
and
fldt
les
and
jecxz
dec
xlat
aam
xchg
mov
push
or
test
mov
das
addr16
ret
or
and
or
loopne
and
pusha
movsb
cwtl
insb
sbb
adc
xchg
leave
outsb
push
dec
call
ds
sbb
fildl
daa
pop
mov
loopne
push
xchg
pop
adc
and
dec
inc
inc
aad
fwait
int
in
push
hlt
xchg
pusha
clc
fmull
frstor
ss
adc
out
mov
xstore-rng
cmpsl
ret
push
jmp
and
add
outsb
jmp
pushf
xchg
or
jmp
cli
mov
dec
mov
aad
je
jbe
or
push
dec
loopne
pop
movb
xchg
xlat
xchg
jmp
adc
lock
test
pop
or
dec
mov
js
jb
jns
in
cmc
pop
lods
es
mov
jecxz
xor
mov
inc
sbb
setl
lret
testl
adc
xor
rcl
sbb
imul
jmp
adc
jne
or
testl
mov
mov
mov
xchg
or
ret
aam
repz
cwtl
stos
out
jmp
inc
jmp
sbb
push
sub
or
adc
lods
movsl
inc
mov
arpl
lret
clc
mov
or
mov
inc
mov
in
roll
imul
mov
adc
in
scas
or
mov
icebp
cmp
dec
mov
sub
ja
mov
cmpsb
inc
stos
pop
ss
sti
or
add
jb
andl
mov
mov
mov
dec
loopne
arpl
sbb
xor
movsl
sbb
nop
xchg
xor
xchg
dec
movsl
sbb
push
xor
divl
adc
push
jecxz
jge
sahf
xor
jmp
mov
ljmp
std
enter
adc
push
movsl
gs
in
and
repnz
movl
push
orb
popf
pop
rcr
popf
dec
adc
sbb
jge
sbb
ss
push
fnstsw
jmp
loope
jl
ret
in
out
aam
mov
add
hlt
test
mov
gs
inc
xchg
add
das
inc
sbb
stos
fs
xchg
cmc
in
inc
mov
ljmp
sti
stc
xchg
popa
loope
int
sbb
inc
and
cmp
sti
popf
dec
jmp
jnp
mov
repz
int
xchg
xchg
int3
xor
jno
push
movsb
jp,pt
cmp
xor
xorl
adc
popf
cmp
or
mov
add
ds
outsb
xor
sub
add
repnz
sub
inc
hlt
xchg
mov
lcall
push
rolb
mov
enter
xchg
mov
mov
jnp
adc
popl
mov
movsl
or
enter
lret
out
hlt
sbb
ret
bound
mov
xchg
push
fcoml
push
pop
fisttpl
pusha
cltd
mov
stc
mov
add
es
bound
xchg
in
mov
fcomps
sti
testl
push
mov
mov
jnp
or
std
lret
ja
add
inc
je
cmp
movsl
fdivs
aas
mov
arpl
cwtl
das
cmp
add
jmp
fdivr
push
cmp
into
je
xchg
ja
jne
push
sub
out
push
shrl
xchg
int3
xchg
je
inc
mov
sbbb
or
pop
adc
cmp
popa
jno
divl
dec
adc
mov
fwait
mov
pop
loopne
or
ret
sbb
imul
imul
fwait
adc
cmp
outsl
lahf
or
mov
ja
lcall
fimuls
fisubl
adcl
xchg
in
cmp
or
add
xor
jp
adc
out
loopne
ljmp
xlat
std
in
ljmp
testb
push
dec
fmuls
mov
cmp
repz
xchg
cmp
clc
shrl
in
test
or
adc
leave
mov
adc
add
lcall
mov
cltd
test
mov
push
arpl
xchg
paddsw
rol
dec
notb
cmp
loope
insb
int
xor
out
sbbb
xchg
fisttpll
pop
adc
and
in
jg
and
dec
mov
test
test
push
pop
xchg
jle
push
outsl
xchg
push
shrl
movsl
aas
pop
push
fstpl
imul
xor
xor
iret
xchg
jle
mov
mov
fstpt
repnz
xchg
jb
inc
mov
dec
js
lret
ror
shll
dec
insl
xor
adc
pusha
adc
push
scas
aaa
add
int
jl
pop
ds
mov
call
icebp
ror
in
jns
dec
orb
test
sub
push
add
bound
inc
jno
xor
jp
nop
lret
inc
lods
mov
pusha
ja
pop
push
fimull
out
outsb
mov
hlt
cmp
in
cmp
dec
lcall
leave
ljmp
jnp
add
out
stos
addr16
or
and
sub
mov
or
mov
pushf
jge
ror
rcrb
sahf
notb
add
jb
sbb
nop
push
js
setnp
fucomi
push
rolb
scas
push
dec
sub
iret
ds
pop
dec
adc
mov
dec
call
test
bound
orb
cmp
insl
xor
inc
pop
jo
mov
dec
shl
dec
int3
in
ljmp
popf
push
loope
inc
jge
cmp
rcrb
push
dec
jno
adc
xchg
test
jle
negl
xchg
mov
fdivs
das
imul
cmpsl
dec
push
inc
xor
xchg
lea
jmp
xchg
mov
lock
out
test
ljmp
push
sub
inc
sub
xchg
in
jp
add
mov
xchg
inc
cltd
in
outsl
cmp
jae
add
cltd
std
mov
orb
jmp
xchg
ds
add
pop
cmp
ljmp
jns
clc
pop
cld
jo
sub
stos
ret
inc
push
mov
xchg
pop
xor
and
repz
sbb
xorl
bnd
pop
pop
cmp
insl
pop
leave
adc
mov
cmp
inc
mov
ds
scas
insb
adc
push
cmp
fisubrs
jg
jle
xor
and
ja
and
mov
mov
mul
pop
jmp
push
jmp
mov
fidivrs
pop
lahf
jo
sub
lea
xchg
push
push
pop
push
push
pushl
roll
push
jge
adc
mov
mov
ss
or
xchg
sub
lds
shrl
in
movsb
sahf
or
xor
dec
push
xchg
cmp
mov
clc
out
in
push
dec
or
movsl
pop
dec
or
mov
inc
leave
adc
and
push
mov
sbb
mov
das
insl
mov
jnp
cltd
loop
push
xchg
testb
fldenv
or
pusha
lret
inc
push
addr16
test
mov
sub
jmp
mov
fs
adc
movsl
lock
inc
jge
jns
inc
xchg
nop
push
out
jno
fimuls
or
fcomip
ret
jbe
hlt
lock
add
or
pop
nop
add
mov
fistpll
stos
repz
and
mov
add
fcomip
sbb
xchg
ljmp
mov
cmp
out
jl
int3
fstpt
out
jl
imul
dec
fistpl
int
lods
std
stos
sti
mov
mov
jnp
cmpsb
mov
push
add
jns
inc
ljmp
stos
xor
loop
cmp
push
sbb
int3
adc
jbe
test
cmp
sub
mov
ret
xor
sub
bound
rcll
inc
jo
sti
cli
mov
arpl
xchg
fs
mov
iret
ds
xchg
filds
add
out
push
mov
inc
lcall
idiv
and
cmc
cmp
iret
loopne
fstl
cmp
fcompl
cld
xchg
rorl
mov
out
and
std
push
imul
in
insl
lcall
mov
mov
lcall
lods
pop
mov
test
out
add
pop
or
or
rorb
test
cmc
popa
out
out
pop
inc
xchg
sbbb
imul
cwtl
xchg
pop
ds
aas
aam
fs
outsl
push
mov
pop
jle
adc
call
lahf
push
fmuls
cmp
mov
sub
dec
pop
sbb
ds
shll
ret
mov
push
push
ret
lahf
test
sbb
into
insb
icebp
jns
arpl
pinsrw
push
ret
test
sub
cmpsb
push
and
pop
ja
mov
push
or
lahf
and
ss
sub
movsl
mov
in
cmp
clc
stos
mov
jg
mov
stc
and
fstp
push
lods
nop
mov
jl
push
mov
add
stos
enter
push
xchg
subl
nop
lret
loope
jo
fwait
push
xchg
mov
or
pop
add
imul
lods
push
loop
lock
xor
add
mov
add
push
adc
pop
ret
test
cmp
lret
pushf
test
push
mov
out
xlat
lods
icebp
subb
pusha
inc
adc
jl
dec
fidivs
fwait
mov
jo
pop
pop
popf
push
divl
popa
int
lds
mov
mov
sub
repz
data16
mov
bound
cs
aaa
addb
lcall
lcall
aad
xor
mov
out
xor
jb
ljmp
xchg
out
adc
cmp
sbb
add
pop
lods
test
stos
popf
pusha
cmpsl
int
jbe
lret
or
out
std
add
shlb
ja
ljmp
jo
or
sarl
stos
mov
rcll
cmp
adc
pop
cli
adc
mov
in
mov
dec
nop
pop
adc
lock
and
aaa
pop
arpl
add
xchg
mov
stc
loope
push
hlt
cmpsl
mov
test
or
pushl
cmp
xor
push
push
jb
ja
fnsave
sub
stc
cmpsb
mov
testb
jmp
addr16
clc
mov
aam
or
sbb
xor
in
xor
divb
insl
out
aad
mov
movsw
sbb
cmp
rcl
call
push
fnstsw
sbb
and
push
adc
js
pop
movsb
xor
push
jmp
sub
cmc
pop
fs
sahf
ss
xchg
add
scas
out
mov
aaa
mov
arpl
pop
mov
mov
jg
push
out
adc
cmp
sub
lods
repnz
jle
cmp
inc
mov
pop
ds
out
mov
push
in
pop
pop
mov
cmp
addr16
pop
aaa
adc
lods
sbb
std
ss
cmp
mov
xor
cmp
test
stos
aad
insl
shl
clc
popa
push
cmpl
or
jo
mov
rolb
pop
loop
dec
icebp
xlat
cmp
mul
sub
xchg
in
push
je
and
push
mov
cmp
in
stos
fldcw
add
fwait
dec
movsl
sbb
sub
flds
daa
aas
scas
jns
sbb
test
subl
popa
imul
dec
and
cmp
loop
gs
sbb
inc
adc
sbb
mov
lcall
push
xchg
pop
mov
inc
bound
cmp
push
dec
repz
enter
push
jmp
pop
fisubl
push
mov
insb
cmp
adc
adc
xorl
or
jge
fbld
nop
popa
jno
adc
xor
outsb
pop
add
ja
iret
adc
mov
and
shll
push
adc
fnstenv
call
mov
or
add
dec
arpl
cwtl
je
loopne
pop
push
pop
sub
std
lods
sbb
outsl
loope
dec
scas
push
jle
fs
movsb
add
xchg
ja
mov
sbb
or
pushf
mov
dec
and
iret
or
xor
scas
add
add
outsl
sahf
or
and
inc
inc
xchg
push
mov
mov
sbb
loop
ret
sub
xchg
mov
xchg
ds
cwtl
scas
push
sbb
daa
repnz
push
lret
aad
in
push
pop
jge
xor
das
lods
xor
stc
in
icebp
stos
int
fwait
dec
jle
movsb
lock
data16
adc
adc
mov
add
insl
int
or
out
movsb
mov
hlt
adc
ja
faddl
mov
jg
fidivs
inc
lret
ret
xor
adc
cmpsb
xor
xor
mov
subl
xor
inc
sbb
loope
insl
mov
or
cld
lea
imul
inc
lret
insb
cld
gs
lds
cltd
out
mov
inc
sbbb
loopne
inc
movsl
aaa
fstpt
xchg
mov
dec
or
test
stos
rorb
outsb
jecxz
dec
movsb
mov
cmp
mov
mov
incb
inc
sarl
cs
repz
mov
mov
inc
xchg
pushf
jb
fstpl
stc
mov
cli
add
lahf
mov
out
sbb
mov
je
cmp
out
daa
int3
inc
xchg
sbb
jnp
jnp
xlat
jl
pop
pop
testl
xchg
inc
lret
adc
ja
sti
jbe
mov
xchg
jb
jo
aad
repnz
arpl
mov
rorb
jae
sbb
push
and
inc
imull
gs
push
mov
vcvtsd2si
cmpsb
in
jns
fstpt
push
mov
loop
xchg
push
pop
xchg
jle
ds
and
sub
dec
pop
cwtl
dec
sbb
lds
jg
aaa
mov
mov
pop
push
or
pop
js
jge
test
fwait
cli
mov
jge
stc
add
into
or
enter
pop
cs
int
pop
add
add
add
aam
sbb
adc
inc
jae
cld
and
jge
or
dec
insb
mov
mov
sbb
sbb
mov
jp
add
fwait
jno
xchg
pop
push
jb
cmc
nop
mov
xlat
aaa
xchg
not
mov
and
xor
shll
pop
or
scas
sbb
push
lret
outsl
jecxz
add
cwtl
jg
call
ja
jbe
push
lcall
pusha
jo
cmp
sahf
stos
mov
lcall
and
clc
or
mov
jp
mov
adc
mov
test
cltd
and
jge
sbb
mov
mov
or
adc
mov
adc
cmpl
pop
sbb
cmpsl
pop
add
or
pop
mov
push
lret
repnz
mov
call
inc
xor
push
lods
or
jle
daa
mov
dec
lds
xlat
iret
dec
jge
std
mov
gs
icebp
xchg
pop
adc
xor
movsb
xchg
adc
xchg
fildl
xchg
or
pop
jmp
push
sub
mov
call
popf
arpl
hlt
push
and
aad
outsl
pop
mov
fs
out
int3
in
add
and
mov
test
cltd
sbb
jae
dec
inc
push
xor
mov
imul
cmpsl
cwtl
test
ja
cltd
mov
push
lds
xorl
xor
or
leave
arpl
and
fcmovnu
incb
inc
push
add
adc
push
ret
mov
xchg
push
mov
cs
stc
mov
stos
xor
enter
mov
mov
jb
shll
cltd
pop
sbb
pop
fstpt
test
jg
ljmp
ss
mov
push
ret
loopne
push
pop
divl
xchg
jle,pn
enter
mov
fisttpll
xchg
pushf
push
inc
xor
or
sti
sahf
pop
aaa
xchg
inc
insl
push
je
sahf
pop
cmp
aas
jge
imul
or
or
and
sbb
aas
ret
jp
into
xchg
inc
mov
gs
xchg
test
jp
xchg
mov
repnz
pop
rclb
push
or
mov
btrl
sahf
js
pop
add
xchg
sbb
loope
sbb
adc
xchg
mov
jmp
das
test
xor
mov
xor
subl
ds
and
mov
stos
popa
jle
sbb
push
and
sub
fisttpl
repz
inc
out
adc
insl
cmp
imul
dec
outsl
scas
jmp
test
fwait
xchg
adc
outsl
nop
jnp
pop
adc
mov
mov
inc
cli
adc
add
loopne
outsb
and
loop
outsb
or
lock
out
xchg
cltd
cli
stc
and
adc
or
outsb
jle
fwait
push
add
fwait
add
mov
push
mov
roll
test
ret
inc
xor
shrb
xchg
ror
ja
xor
xor
mov
push
inc
and
mov
jns
mov
mov
cmp
std
cmpb
push
fnstcw
lea
in
cmp
ret
popa
jp
mov
aam
cs
mov
rcll
push
loop
mov
or
sub
int3
shr
mov
mov
xor
imul
sub
jg
jmp
scas
add
dec
jnp
cmp
and
fldt
loope
das
outsl
mov
cmp
jg
adc
bound
addr16
clc
in
push
xor
lcall
subl
jle
cld
add
loop
pop
dec
lcall
rcl
ja
dec
dec
inc
and
repz
dec
test
jo
inc
inc
pop
inc
jg
adc
mov
arpl
and
push
xchg
popf
sub
stos
push
mov
out
mov
pop
pop
icebp
popf
ret
addr16
scas
mov
fisubl
push
mov
je
and
jns
mov
mov
or
aas
inc
adc
xor
sbb
fiadds
mov
mov
pop
cmc
pop
rol
addr16
scas
adc
add
out
fcoml
ja
lock
or
or
push
dec
testl
jmp
fcomip
mov
aad
arpl
push
cmp
jo
test
mov
aad
sbb
std
inc
repz
ror
adc
int
push
dec
push
movsl
loopne
fadds
xchg
jmp
jns
jns
pop
repnz
adc
adc
imull
mov
outsb
ljmp
pop
mov
jae
push
idivl
es
lds
daa
jnp
xor
jmp
test
cmp
or
dec
dec
lret
dec
rcrb
mov
in
in
mov
dec
add
xchg
test
roll
add
outsl
call
cmpsb
lods
out
jmp
jae
cmpsb
cs
test
inc
imul
pop
xlat
cmpl
dec
inc
test
inc
fildl
mov
cwtl
jno
pop
cmp
jmp
popa
sbb
xchg
sti
push
pop
push
jae
neg
into
and
adc
dec
mov
das
inc
pop
jb
ljmp
fucomip
xlat
mov
lret
data16
js
jns
xor
add
pop
jb,pt
cmp
ficompl
push
sbb
or
aam
pop
mov
ret
enter
ja
push
sbb
mov
addr16
adcl
les
mov
xor
cmp
cmp
lahf
pop
ret
mov
mov
stos
push
test
daa
pop
ja
test
movb
stos
mov
jns
cli
and
int3
mov
mov
mov
lods
pop
imul
leave
cmp
test
sahf
adc
dec
dec
inc
sbb
ficoml
je
jg
negl
push
stos
addr16
cmp
inc
mov
outsb
add
pushf
lock
xor
jne
rorb
stc
cmp
pop
int3
les
dec
jbe
in
sub
and
lahf
jl
ss
fisubrs
test
add
sub
ss
stos
ret
mul
ljmp
and
push
shr
stos
and
mov
out
imul
inc
adc
jmp
mov
xchg
outsb
bound
add
push
jg
in
aas
lock
es
pop
insb
inc
popf
dec
jle
clc
mov
addb
not
dec
sbb
arpl
out
arpl
cmp
push
inc
mov
sbb
dec
lock
adc
out
xor
fadds
adc
push
repz
push
adc
jg
andb
mov
jne
sbb
fwait
or
dec
aas
popf
mov
ja
pop
repz
in
out
push
enter
mov
ret
xchg
into
and
mov
shrb
cwtl
mov
xorb
inc
mov
sbb
mov
add
mov
jno
cltd
dec
inc
negb
clc
push
jp
pop
lock
test
cmp
add
sbb
mov
es
fcoms
test
mov
rep
jb
test
aas
filds
lods
subl
xchg
mov
rclb
inc
int
inc
pop
fs
xor
int3
mov
xor
and
mov
shrb
add
pop
movsb
test
fldpi
sub
push
and
scas
je
inc
push
mov
jmp
pop
xlat
data16
adc
mov
or
or
addr16
addr16
mov
je
pusha
out
rcl
lret
inc
pop
adc
lea
std
or
pop
dec
daa
scas
dec
mov
dec
data16
xchg
in
push
sbb
cwtl
cli
jmp
orb
and
jge
ss
mov
adc
js
or
daa
cltd
or
jp
jnp
frndint
push
movsl
xor
or
cmp
mov
scas
xor
or
fistpl
dec
ljmp
sbb
insl
repz
pop
testl
inc
aas
jbe
or
xor
pop
xchg
lods
mov
sub
addr16
adc
in
xor
test
ss
aaa
adc
push
icebp
or
mov
fwait
jmp
dec
stos
out
lods
insl
cwtl
mov
push
adc
stos
push
cmp
and
jge
das
and
outsb
dec
and
dec
mov
mov
push
jbe
mov
adc
movsl
nop
inc
orb
sub
mov
mov
movsb
leave
icebp
lods
mov
and
ret
cld
fucom
insl
out
in
or
mov
stc
insl
mov
mov
mov
sbb
mov
lods
sbb
inc
adc
mov
jae
fstpl
clc
decl
mov
cltd
out
popa
adc
pop
or
xor
mov
sarb
jg
inc
lret
inc
or
dec
jge
pop
and
xchg
xor
sbb
es
xchg
loop
lea
je
pop
add
or
add
sbb
or
ss
sub
mov
stos
repnz
ljmp
addl
xchg
leave
pop
xchg
rcl
mov
icebp
sti
mov
jmp
sub
jns
call
nop
mov
mov
dec
ljmp
add
repnz
cmp
enter
outsl
das
push
hlt
sub
scas
inc
mov
repz
andb
and
mov
push
push
sub
pop
mov
int
call
and
xor
cmp
outsb
cmp
out
jge
pop
test
mov
jo
push
loop
xchg
nop
fisubrl
out
aaa
ljmpw
push
mov
cs
xchg
adc
sub
lea
int3
popa
sub
ret
push
out
xlat
add
cmp
mov
or
dec
mov
cmp
mov
aad
lods
fstp
pop
adc
ss
daa
divl
sbb
mov
outsl
or
cmpsl
movsl
orl
out
sbb
xor
lret
in
mov
dec
shlb
fcmovu
fcmovb
or
xchg
push
xchg
fwait
push
decb
adc
cmpl
mov
mov
ret
jp
in
cmp
cwtl
out
mov
mov
lds
popf
gs
std
dec
test
ds
lret
cmp
mov
inc
mov
insl
leave
fildll
xor
mov
cld
cmpsb
pop
or
push
negl
sub
pop
test
pop
insl
rcrb
xor
inc
adc
dec
inc
dec
and
cmp
lds
xchg
out
mov
pop
xor
jbe
sbb
pop
mov
in
inc
jns
or
fmulp
rorl
or
sahf
ret
int
cmpsb
sub
nop
lea
or
or
push
inc
imul
xor
or
rcrb
sbb
xchg
cs
mov
js
pop
fsubrl
cmp
or
out
or
mov
dec
add
addr16
lcall
sbb
sbb
negb
stos
loopne
jbe
into
js
dec
jl
pusha
int
mov
jnp
outsl
push
fcomps
fdivp
adc
dec
test
jae
jne
dec
mov
fwait
mov
pop
sarb
clc
push
mov
or
std
inc
push
pop
jno
xor
or
jno
ficompl
lods
aaa
aas
divl
cmc
cmpl
inc
mov
xchg
scas
add
xor
sbb
clc
gs
rcrb
add
mov
adc
aam
push
mov
and
movsb
xor
lods
add
cmpsb
lea
bound
sub
push
test
lret
push
ds
pusha
gs
mov
imul
leave
push
fcompl
in
mov
mov
dec
popf
aas
imul
push
enter
ret
pop
pop
pop
cmp
sbb
mov
sbb
xchg
push
js
lahf
jecxz
bound
push
flds
sti
jge
fs
sub
mov
jl
jle
mov
test
jnp
inc
insb
jp
loope
pop
jle
adc
pop
fwait
out
sbbl
cs
adc
aaa
sub
mov
fwait
pop
xchg
cwtl
xchg
cmc
outsl
popa
movsl
pop
jmp
loope
subl
test
adc
dec
inc
xchg
jae
scas
dec
sub
and
mov
fstps
adc
mov
outsl
push
push
sti
jno
xor
outsl
sbb
push
dec
fs
pusha
mov
mov
jp
fildll
push
pop
jge
cwtl
xchg
xor
and
jg
push
xchg
imul
mov
outsl
sbb
into
call
stos
ret
add
lock
push
xchg
ret
mov
push
or
mov
inc
ds
imul
mov
mov
js
stc
mov
and
pop
push
cmpsl
xor
mov
dec
dec
and
mov
movl
sub
iret
movsb
push
movsl
add
dec
push
ds
sahf
lea
cmc
push
rclb
pop
mov
stos
adc
sub
push
push
cmp
in
stc
fsubl
outsb
xchg
and
mov
icebp
in
lcall
nop
inc
dec
adc
pushf
jmp
loope
outsb
cld
imull
ja
pop
data16
int
cmp
and
fdivrs
cwtl
das
jb
call
adcb
shr
int
inc
adc
outsl
es
stos
jae
es
aas
ljmp
jp
pop
and
cmp
ss
mov
in
ret
out
adc
or
mov
pop
cmp
scas
test
div
xchg
xchg
scas
imul
push
pop
add
pushf
xchg
fldenv
jbe
fwait
xor
cmpsb
jg
or
lods
and
cmc
jecxz
jo
push
insb
cmp
out
ds
lds
pop
repnz
cwtl
lea
fsubs
pop
jecxz
neg
or
rcll
and
sahf
pop
pop
inc
es
pop
add
inc
jge
sub
cmp
jp
mov
push
test
inc
scas
dec
adc
inc
mov
sub
movsl
cs
or
or
lock
out
mov
rol
aas
mov
push
rcr
inc
pop
and
sbb
add
bound
decl
dec
or
shrl
outsl
stc
orl
inc
daa
arpl
xchg
gs
mulb
sub
outsb
inc
fcoml
imul
frstor
ss
and
pop
push
mov
mov
xlat
pop
std
out
mov
dec
mov
xor
push
loop
or
mov
out
xchg
fstpl
cli
in
mov
jnp
jge
sub
pop
xchg
sub
sub
mov
fcoml
pop
mov
ficompl
and
sbb
and
or
xor
and
mov
cmpsb
mov
mov
fwait
or
sub
in
sub
cmp
jnp
sbb
mov
sub
aam
dec
gs
sbb
push
addps
sahf
test
loop
mov
lock
cli
test
adc
adc
js
fucomip
pusha
ret
push
push
mov
stos
sbb
rol
push
xor
and
fildll
cmc
lcall
ret
in
out
das
insb
sbb
stc
dec
fimuls
addr16
jmp
push
out
xlat
xor
mov
imul
xor
fists
shlb
outsb
push
repz
pop
dec
sarl
pop
mov
in
enter
sbb
and
pop
sbb
mov
int
test
roll
mov
adc
cli
sti
sub
in
cltd
sub
cmpsb
ret
dec
pop
outsl
add
jecxz
push
hlt
popa
jno
dec
dec
dec
inc
mov
stos
mov
push
push
mov
dec
lret
inc
pop
xor
push
mov
loop
in
fcomi
outsl
outsb
or
fs
mov
and
push
xchg
hlt
push
push
cmp
push
repz
dec
int3
movsb
dec
stc
or
xchg
jne
sbb
fsubl
cmpsl
cli
mov
and
push
rorl
pop
or
pop
jmp
jle
in
jns
sbb
jle
mov
dec
ja
pop
cwtl
mov
loopne
scas
int3
fimull
adc
lret
inc
lcall
in
in
imul
xchg
sub
cmp
push
rol
bound
jo
ja
jbe
cmp
jo
mov
lahf
pop
test
jnp
pop
xor
scas
testl
movsl
push
fstpl
mov
lahf
dec
nop
mov
fnstenv
push
add
pop
lret
lea
adc
dec
fisttps
out
loopne
int3
popa
je
xchg
sahf
jne
lods
and
or
decl
lret
cmp
or
fldenv
xor
addb
mov
out
push
cwtl
mov
push
repz
fstpl
loope
push
xor
push
pushf
ret
es
jae
ds
pusha
xlat
shrl
dec
sub
sbb
sbb
cli
xor
out
mov
xor
mov
sub
addr16
out
orl
std
stos
pop
push
and
jge
and
mov
jnp
cmp
inc
sbb
mov
int3
dec
test
out
xor
adc
aas
lods
popf
shl
stos
das
loop
mov
push
pop
repnz
adc
cs
in
cmp
pop
dec
adc
testb
xor
movlps
xchg
or
std
scas
bound
shrb
adcl
fidivrs
or
fptan
icebp
push
movsb
push
ja
pop
pop
es
gs
inc
fmuls
mov
push
aad
dec
das
in
cmp
fcomps
ret
cmpsl
jecxz
sarl
mov
inc
repz
out
lcall
int3
gs
scas
test
mov
cmp
test
popa
and
pop
jno
adc
scas
jl
mov
dec
adc
hlt
pop
outsl
jecxz
inc
insb
in
sar
sbb
rcll
out
inc
ja
jmp
rorl
mov
push
sub
test
call
adc
loopne
jae
lret
adc
dec
inc
clc
ret
in
sub
sahf
leave
jb
stos
popa
dec
insb
xchg
fisubl
test
pop
sub
ss
es
xchg
cmp
sub
lock
jb
pop
push
ror
xchg
pop
or
xor
test
adc
push
mov
pop
sbb
fdivl
ds
aaa
dec
inc
fdivp
push
jae
cltd
mov
scas
fnsave
xor
sub
xchg
into
cmpsl
ljmp
movsb
fstpt
inc
push
fisubl
pop
loope
xchg
into
sbbl
and
mov
or
pushl
and
push
push
sub
sarb
jo
fcomp
and
sub
enter
lret
xor
mov
call
or
lds
imul
jns
loope
adc
mov
negb
in
add
mov
sub
mov
insb
mov
aaa
fisubrl
in
and
xlat
shl
xchg
sbb
adc
cmp
mov
aam
xor
icebp
ja
loop
and
ja
cmpb
and
fnstsw
cld
mov
jmp
dec
inc
sbb
sahf
xchg
push
popf
pop
adc
insl
loope
out
jl
sti
adc
jb
jno
sub
push
jbe
xchg
add
and
add
fwait
jecxz
add
mov
add
hlt
sbbb
lods
mov
inc
int3
lea
xlat
and
pop
sbb
mov
jg
or
lret
daa
ljmp
cmp
cltd
xor
jmp
aam
jle
inc
iret
mov
dec
adc
movsl
test
and
add
push
sbb
stc
cmp
roll
push
mov
jge
cld
lret
sub
fisttpl
dec
mov
add
sti
hlt
pop
sub
rorl
imul
mov
pop
push
add
xchg
jae
xchg
and
cmp
pop
cmp
or
int3
pushf
repz
outsl
add
xor
pop
and
mov
pop
rcrl
xor
cmp
push
mov
fists
dec
rcr
xchg
inc
movsb
sbb
or
jne
out
test
cs
addb
push
scas
and
iret
cmp
popa
stos
mov
sbb
xlat
test
aas
adc
jmp
test
lret
mov
outsl
dec
sub
adcb
je
xchg
fdivrs
popa
dec
jns
lcall
push
cmpsl
fimull
dec
sbb
and
into
insl
xor
jg
dec
scas
rcl
mov
pop
xchg
cmp
pop
xchg
adcb
cltd
mov
orl
xor
shll
push
jecxz
jo
inc
dec
xchg
xchg
sub
and
and
cwtl
mov
mov
aam
pop
test
shr
ja
daa
mov
stc
push
and
xor
or
lret
xchg
cltd
push
jmp
push
xchg
lds
mov
ja
or
push
pop
sub
popf
ja
jge
push
inc
out
roll
inc
xor
js
xchg
dec
xor
sbb
dec
dec
ret
jae
xorl
mov
push
nop
bound
mov
movsl
test
setge
ja
jmp
sahf
sub
loop
cmp
out
inc
sar
jg
ss
mov
mov
pop
mov
popf
mov
roll
cltd
lods
stos
subl
jae
mov
jne
fpatan
xchg
scas
push
sbb
mov
lock
in
add
pop
push
add
mov
mov
xor
adc
aam
push
sbb
dec
pop
shll
rorb
frstor
test
sti
add
cmp
push
xchg
ret
dec
cmp
and
pop
jb
xchg
add
stos
jg
popa
jp
sti
sub
inc
jne
and
mov
int3
lret
mov
out
xor
inc
hlt
sbb
adc
dec
imul
data16
aam
je
data16
sub
jmp
je
pop
xor
es
jns
adc
test
cmp
mov
stos
mov
sub
mov
push
mov
sbb
push
in
adc
push
imulb
sub
mov
jbe,pt
mov
mov
push
push
pop
imul
rorl
push
test
dec
lods
cmp
cmpb
lret
divl
jb
repnz
sbb
call
fmul
add
into
sar
cmpsl
mov
push
into
int3
jno
sbbb
imul
pop
outsl
lods
mov
les
ds
or
adc
inc
push
popf
fsubrs
arpl
mov
imul
das
dec
popa
scas
leave
or
jmp
int3
dec
and
gs
mov
fnstcw
je
fists
add
sbb
xor
cmp
lods
jns
in
cld
dec
dec
pop
outsb
jo
mov
add
cmp
mov
pop
popa
sti
add
adc
mov
adc
orb
sub
jecxz
mov
push
gs
ret
loope
movsb
pop
mov
inc
subl
lods
add
jno
test
push
jp
popa
fildll
add
mov
push
jb
add
sti
fisttps
iret
dec
cmp
rclb
inc
imul
pop
iret
sbb
mov
jle
push
sahf
or
icebp
push
cmp
cmpsl
or
mov
aad
pop
mov
je
push
int3
lcall
mov
divl
notl
mov
loopne
dec
ja
outsb
xor
bound
insb
fldcw
sahf
add
push
xchg
xor
or
push
subl
inc
adc
mov
jmp
or
push
inc
stc
push
shll
adc
push
dec
insl
orb
sahf
aas
mov
push
mov
in
rcrl
test
push
fs
flds
movsb
jl
cmp
arpl
mov
adc
mulb
insl
ljmp
pop
or
cmp
icebp
jl
sbb
jp
mov
inc
decb
loopne
ficoml
test
bound
imul
or
pop
inc
pop
mov
jo
xchg
inc
add
enter
pop
xchg
out
fisttps
es
jae
shlb
mov
or
add
or
aad
call
push
sub
mov
and
test
mov
jno
cmp
outsl
imul
mov
dec
sti
push
and
inc
xchg
dec
testb
cli
imul
push
push
aaa
inc
inc
mov
cli
cs
push
sub
sub
sbb
push
fucomip
dec
cs
add
popf
sbb
or
or
cltd
pop
loopw
jg
xor
cmp
je
cwtl
inc
or
test
nop
and
mov
mov
jnp
mov
js
xchg
jb
fs
shr
adc
out
dec
cmp
in
pop
mov
add
pop
divb
popa
daa
das
mov
mov
adc
iret
inc
jns
ljmp
xchg
ds
xor
push
pop
xchg
aad
mov
xchg
adcb
pushf
xor
adc
out
inc
repnz
ja
xchg
jno
jge,pn
xor
nop
into
push
addb
int
stos
shlb
pop
shlb
cmp
push
mov
and
push
stc
inc
and
mov
out
aas
cmpsl
adc
mov
mov
inc
xor
sub
test
and
fildl
sub
in
lods
pop
imul
test
jl
cmc
cmpsb
ret
addl
mov
jl
sub
add
mov
das
in
inc
lock
popa
rcr
fldcw
aaa
in
jne
pop
les
aas
mov
outsb
loope
adc
mov
or
movsb
cmpsb
mov
adc
xchg
xor
pavgb
std
out
ficoml
insb
xchg
dec
sub
ss
test
int3
xlat
dec
repnz
dec
orb
in
xchg
loope
mov
and
stc
movaps
add
imul
adc
ficompl
or
shll
mov
std
loop
push
xchg
addr16
mov
add
pop
cs
adc
in
out
mov
ss
xchg
xorb
mov
dec
xor
xor
shl
aad
adc
pop
xor
sbb
lcall
sbb
idiv
pop
or
lock
adc
push
in
mov
xchg
adc
mov
and
mov
jmp
mov
and
push
gs
jbe
imulb
sub
jbe
xchg
ss
test
shl
cmp
iret
call
sbbl
aaa
sub
mov
sub
leave
jns
in
mov
pop
adc
fildll
imul
mov
cli
ss
mov
inc
mov
dec
ds
das
popf
inc
icebp
test
inc
pop
pop
sbb
inc
xchg
in
xor
xchg
aas
and
jmp
xlat
call
pop
bound
pop
push
scas
push
lcall
or
scas
lock
mov
jb
scas
jge
sahf
dec
out
int
adc
mov
dec
popf
outsb
sbb
aaa
jbe
call
inc
pop
pop
inc
mov
adc
add
inc
push
aad
pop
scas
push
mov
jno
hlt
test
popl
mov
lods
cld
push
and
repnz
fwait
adc
xor
mov
std
insb
das
cld
adc
cmp
xlat
add
lods
int
and
mov
shll
add
fsubrl
sti
in
xor
cwtl
push
jmp
lea
icebp
test
sbb
mov
pop
jle
stos
sbb
cmpsl
rclb
push
xor
xor
mov
outsl
neg
int3
in
pop
xchg
cmp
cmpsb
and
mov
cld
add
gs
paddsw
adc
cmp
xchg
aad
lret
in
cmp
cmpsb
ja
or
xchg
stos
bound
mov
mov
adc
fsubrl
lock
lods
repz
stos
aad
test
mov
mov
ljmp
xchg
decb
aas
dec
adc
mov
pop
fs
cmp
popa
les
xor
adc
popf
mov
adc
jne
push
push
xor
mov
inc
popl
add
clc
mov
inc
pop
dec
and
out
cld
jl
push
les
mov
idiv
xchg
sbb
cmp
mov
out
test
xor
shlb
out
add
repnz
inc
cmp
fucomi
jb
jbe
rcrl
ret
rcrl
push
pop
adc
aas
lahf
and
in
jnp
es
add
lea
repnz
mov
rorl
xorb
push
lcall
shlb
aam
mov
lahf
rorl
jle
dec
fldlg2
jo
pop
jg
test
out
fwait
lea
pop
mov
jno
pop
sti
cmp
xchg
loop
aad
pop
mov
fcomps
xchg
xor
push
pop
ret
in
xchg
or
xchg
push
and
shll
xlat
insb
scas
mov
sbb
scas
adc
data16
push
push
dec
fisubl
mov
cmp
mov
or
mov
icebp
fcmovb
pop
cwtl
cltd
adc
cmc
mov
add
add
pop
jno
testl
dec
lock
cld
in
pushf
or
mov
cmp
stos
clc
cltd
mov
mov
add
pop
pop
lods
jno
ret
sbb
push
inc
aam
test
mov
mov
leave
jmp
cs
aam
xor
hlt
addr16
jl
loope
in
lret
mov
push
push
or
xchg
push
add
sbbb
pop
xor
sbb
push
cmp
in
mov
test
xor
mov
xor
mov
push
das
pop
sbb
sti
mov
push
xchg
cmp
in
mov
pop
mov
cwtl
push
in
ret
or
or
addr16
pop
mov
cmp
jne
fists
cmp
cmpsl
lea
ret
mov
push
ret
push
clc
arpl
fidivrs
mov
and
jg
iret
stos
sbb
or
jl
mov
xchg
clc
ficoml
push
sbb
dec
sbb
rcll
test
pop
cmp
pop
mov
jmp
add
inc
popa
pop
mov
lds
xlat
rcrb
or
xorb
repz
les
rcr
cmp
add
and
xchg
bnd
push
pushl
enter
lcall
cwtl
ret
out
lahf
rclb
xchg
push
inc
xchg
in
cmpsb
xchg
lods
xor
add
mov
pop
pushf
sbb
push
xor
push
in
push
lods
push
test
sub
pop
clc
mov
dec
xor
imul
fadds
or
fisubs
and
insw
mov
cmp
das
pop
call
cmpsb
sub
mov
jge
mov
fs
std
test
icebp
mov
lret
xchg
popa
fwait
hlt
pop
lods
fcoml
xor
cli
les
fldenv
adc
sbb
adcb
dec
lds
scas
fdivrs
outsb
adcl
mov
cld
dec
aam
cmp
outsb
push
jne
rolb
dec
sub
xchg
or
push
or
inc
leave
test
dec
mov
mov
roll
lods
dec
je
push
jmp
pushf
sub
xorl
xor
fsubrl
or
jnp
push
std
outsb
cmp
jae
subb
outsb
inc
or
pop
popf
sbb
xchg
cmpsb
push
xchg
add
mov
loop
dec
push
cmp
sub
xchg
int
pusha
dec
jge
mov
iret
test
xor
jl
and
das
in
or
or
sar
in
repz
jo
das
jbe
test
mov
push
divl
sub
xor
add
mov
cmpsb
add
cli
xchg
js
aam
or
in
shlb
out
cltd
leave
out
in
or
and
xchg
lods
pop
lods
sarl
movsb
xchg
lcall
ret
sub
push
es
jno
enter
das
push
icebp
jb
jnp
je
jo
cmpsl
mov
je
lea
dec
addr16
mov
jbe
inc
into
adc
or
jo
inc
sbb
push
xor
std
cmp
mov
ret
xor
push
cmp
dec
lcall
sahf
loopne
add
inc
mov
mov
inc
push
adc
xor
ret
pop
mov
mov
mov
jne
add
push
sub
andb
jae
inc
mov
pop
pop
xlat
movsb
xchg
mov
adc
add
adc
mov
imul
dec
fsubl
push
xor
int
gs
ds
arpl
jo
mov
lret
cmp
das
and
sub
cs
shrb
inc
pop
push
mov
iret
into
js
mov
fadds
cmp
ss
add
inc
lret
jmp
xlat
aaa
ret
pop
ret
loopne
icebp
dec
xchg
mov
popf
rclb
aaa
pop
add
mov
loope
mull
and
stos
ljmp
jae
test
cmp
dec
shlb
jle
lret
dec
fistpll
fcoml
mov
pop
clc
mov
cmpsb
mov
sub
fistpll
sahf
lret
mov
inc
jg
dec
dec
inc
mov
and
add
sbb
aam
std
cmp
xor
into
lcall
inc
pop
test
fimuls
mov
testl
cli
xchg
mov
leave
outsl
insl
jmp
mov
jne
add
rcrb
pop
inc
xor
cmpsb
push
fiadds
test
jnp
inc
sub
inc
mov
push
xor
adc
and
mov
rcrl
sbb
inc
je
pop
scas
mov
cltd
icebp
outsb
fstps
into
mov
bound
je
iret
dec
xchg
les
push
mov
mov
test
adc
in
mov
and
cli
mov
sub
arpl
cmp
cmpps
mov
cmp
pop
stos
or
push
pop
jge
adc
clc
out
mov
daa
adc
add
and
popa
lds
and
js
sub
inc
cmc
lods
mov
dec
dec
pusha
mov
addr16
cli
scas
dec
xchg
push
aam
push
push
loop
gs
sbb
frstor
sbb
mov
jmp
sbb
cltd
xor
xchg
mov
sbb
adc
adc
stos
cmp
fidivrs
jbe
shlb
dec
cli
negl
inc
mov
test
addr16
sub
sub
and
push
lcall
das
fildl
dec
mov
out
xor
jg
dec
daa
loop
mov
pop
dec
arpl
mov
dec
jle
xor
or
xlat
aaa
ret
mov
mov
imul
mov
mov
push
add
fistl
pop
xor
popa
ficoml
stc
notl
mov
xlat
inc
fidivrs
dec
testl
adc
in
ret
bound
pop
mov
xor
xorb
xorps
out
pop
pop
jl
stos
jl
divps
and
enter
fisttpl
cmpsl
jmp
test
dec
pop
pop
loope
lcall
dec
lret
lcall
jae
fstl
jecxz
and
clc
je
stos
mov
sbb
cltd
mov
mov
les
xchg
pusha
outsb
push
mov
clc
sbb
dec
jo
sub
and
sbb
pusha
adc
test
xchg
in
inc
mov
dec
cwtl
jo
jns
xchg
or
sbb
mov
xor
orl
lea
push
pop
in
ljmp
sub
sub
inc
fists
jg
xchg
mov
or
inc
call
notb
pop
cmp
arpl
outsb
jl
stos
and
cmp
es
enter
pop
push
pop
xchg
dec
push
pop
dec
shll
in
hlt
je
mov
stos
clc
adc
leave
fucomp
ret
jecxz
in
jnp
sbb
push
fdivs
gs
popl
mov
in
sti
clc
xor
sbb
adc
loope
clc
push
dec
ss
test
les
out
enter
sub
hlt
push
push
jg
sbb
test
mov
ret
popa
dec
sub
test
pushf
jbe
dec
cmc
add
fstp
pop
and
rclb
hlt
movsb
test
adc
mov
out
and
addb
xor
pushf
adc
add
xor
jecxz
cmp
mov
les
adc
push
pop
dec
cmp
fwait
ss
jg
dec
or
cld
push
pop
or
sbb
loope,pn
aas
imul
fstpl
imulb
xchg
push
mov
jb
pushf
out
xor
subl
cmp
push
mov
push
lahf
jge
cmc
jl
aaa
rol
scas
test
xchg
pushf
js
in
mov
xchg
and
in
jb
cmpsl
ljmp
jbe,pn
mov
scas
mov
aad
test
mov
jae
add
out
sub
xchg
xchg
mov
adc
mov
mov
xchg
mov
pusha
dec
fsubrs
pop
push
xorb
xorl
in
mov
ja
jecxz
jge
div
flds
ljmp
xchg
data16
mov
fmulp
sub
notb
cmp
sbb
dec
add
das
ret
jecxz
scas
test
push
push
mov
mov
add
pop
add
push
fidivl
xlat
inc
test
push
fnstsw
or
dec
cmp
das
les
and
inc
and
adc
push
xor
xchg
adc
shl
mov
mov
pop
and
movsb
mov
imul
pop
bound
dec
sbb
lret
aas
cmpsb
lret
xchg
sbb
jecxz
adc
roll
cmpl
lods
jl
cmpsb
js
cwtl
insl
pushf
and
jmp
int
icebp
mov
idivl
push
pop
xor
mov
popf
jecxz
lods
mov
lods
sub
shll
sbb
pop
push
call
test
cwtl
popa
cmp
mov
push
test
ret
std
dec
nop
ret
inc
clc
cld
xchg
mov
sub
imul
jge
outsb
fdivrs
stc
fidivs
add
cwtl
stos
adc
sarl
jae
mov
dec
ljmp
xor
mov
cs
loop
loop
out
cmp
in
outsl
xchg
js
pop
pop
neg
pop
xchg
xchg
xlat
fadds
pop
fbstp
cmpsl
iret
pop
mov
jne
in
loope
data16
pop
out
cmpsb
cmp
into
nop
movsb
or
cld
lcall
push
mov
push
lock
andb
add
xor
inc
dec
fucomip
sbb
mov
xor
sahf
aas
cltd
pop
jmp
pop
in
iret
pop
xchg
sub
mov
stc
mov
lods
dec
mov
sbb
sub
xchg
fs
stos
out
lods
int
inc
push
or
jge
arpl
lcall
push
cld
xchg
pop
add
mov
in
mov
fnstcw
or
aad
mov
adc
shlb
in
es
andl
mov
lea
or
jne
push
icebp
outsb
jge
pop
push
daa
iret
cmpsl
push
sbb
inc
push
xchg
xchg
lret
cmp
jmp
fsubrl
outsb
xchg
xor
or
in
pop
push
cmp
mov
negb
add
and
cmp
ja
adc
pop
push
or
mov
ja
push
rclb
repnz
mov
inc
sub
jmp
cwtl
in
aas
sbb
loope
cmpsl
rol
popa
fucom
and
sub
ja
mov
int
cmpb
aad
jl
cmpsb
rcr
mov
xchg
pop
imul
daa
dec
add
mov
mov
popa
jp
and
out
ds
mov
hlt
les
fidivrs
push
fidivl
add
inc
es
cmc
sarb
lahf
cmp
fstpl
dec
and
or
push
rorb
int3
roll
push
test
pop
loopne
pop
pusha
lea
mov
movlps
loope
pop
or
pop
mov
loopne
mov
lea
roll
addb
fwait
inc
fstpt
xchg
lea
and
mov
jb
push
pop
pop
in
rcrb
lahf
je
jecxz
mov
and
repnz
lret
loopne
in
sub
cltd
dec
xchg
inc
cwtl
dec
xchg
pop
sbb
sbb
xchg
jbe
in
sub
push
popa
loop
movsl
add
ret
sub
imul
inc
mov
loopne
or
jg
mov
mov
xchg
stos
push
or
pop
outsl
or
in
xlat
fwait
leave
addl
in
popa
fstl
dec
cmp
inc
fld
push
outsl
mov
mov
int3
xchg
lahf
iret
lods
fdivrs
nop
sub
int3
cmp
xchg
sub
fidivs
xchg
imul
lcall
xchg
or
mov
jl
sbb
lret
leave
lret
cmpsl
sbb
jnp
mov
test
daa
repnz
js
pop
sub
or
mov
das
ja
dec
out
movsl
test
les
testb
test
and
ljmp
outsl
xchg
add
sub
roll
pop
jle
std
jp
jmp
adc
pushf
fcomi
mov
jmp
pushf
pop
cmpsl
insl
push
data16
sub
jnp
cmc
push
push
push
repz
movsl
pop
or
cmp
pop
xchg
addr16
aaa
adc
out
aad
popa
mov
add
push
ret
mov
xchg
popa
mov
pop
insl
push
jp
js
les
sub
lret
lret
stos
add
enter
mov
test
mov
cli
xchg
xchg
jg
std
cs
icebp
ja
pop
push
mov
ja
cltd
ficomps
adc
in
aad
xchg
adc
std
lods
jmp
das
adc
jmp
dec
outsl
jb
addr16
lods
aas
add
push
sub
push
xchg
popa
add
sbb
jno
mov
add
and
mov
jnp
and
and
or
inc
in
xorb
fxch
js
inc
scas
cmp
jbe
jg
add
xchg
adc
cmp
clc
inc
or
into
mov
fwait
data16
flds
gs
fldt
jp
dec
daa
stc
adc
and
sub
test
xor
xchg
push
repz
lods
ljmp
cmpsb
loop
ficomps
int
push
popa
outsb
mov
sub
mov
in
adc
jg
mov
loop
or
sub
sbb
fstl
adc
add
inc
add
sub
dec
xchg
fildl
add
aam
pop
pop
sub
inc
jg
test
dec
bound
int
cltd
jg
aad
add
dec
jge
jl
sub
push
outsl
pop
dec
pop
adcl
mov
cwtl
fistpll
loopne
cmp
repnz
cmp
add
data16
iret
or
ja
test
mov
mov
xchg
xlat
leave
jg
popa
test
and
fwait
xor
xlat
mov
mov
hlt
dec
xor
push
daa
mov
push
popf
pop
cmp
dec
addr16
in
push
rcrl
dec
addr16
repz
mov
pop
shl
pop
dec
xchg
cmp
lcall
imul
jl
rcrl
push
sub
pusha
adc
adc
jecxz
sahf
sbb
inc
mov
or
mov
sbb
pop
cmp
add
mov
jmp
leave
into
mov
into
jns
pop
dec
cwtl
movsl
jns
cmp
icebp
sbb
test
in
cs
bound
test
fmuls
fldl
xor
jge
shlb
sbb
fisttpl
cmpl
daa
jle
cmpsl
adc
call
loope
shrl
jge
jecxz
jg
mov
or
inc
xchg
mov
sbb
mov
popf
orl
xchg
pop
jb
outsb
subl
xor
out
cmp
adc
push
push
pop
add
lock
dec
int3
xorl
and
pusha
sbb
dec
stos
lods
push
add
loop
cmp
mov
fwait
inc
adc
sbb
mov
shlb
mov
icebp
or
fldcw
pop
or
pusha
fiaddl
sub
fisubl
jo
sbb
xor
pop
push
jo
aad
xchg
scas
or
push
arpl
jb
cmpsb
mov
cmp
sbb
mov
pop
xchg
mov
jmp
xor
fstl
iret
pop
jns
sub
mov
pushf
xchg
cwtl
push
shlb
pop
iret
jl
or
cmc
lods
movsl
popa
mov
ja
mov
pop
inc
pop
call
lods
faddp
xor
std
loop
jbe
cmpsl
sub
xor
lock
pop
test
xchg
cmp
xchg
jb
movsl
hlt
test
lahf
adc
mov
dec
ret
xor
out
ljmp
cmc
cwtl
pusha
mov
pop
cmc
push
test
incl
insl
cmp
jo
dec
inc
jae
aaa
mov
mov
or
clc
data16
repz
icebp
sbb
fldcw
and
aas
shll
mov
test
mov
mov
dec
mov
stos
inc
data16
jb
pop
mov
mov
xchg
adc
inc
daa
cmp
ret
jg
aas
dec
add
mov
in
push
or
sbb
cmpsb
sbb
loope
icebp
lret
adc
or
mov
std
mov
sub
bound
cmpsb
adc
bound
push
loop
mov
sbb
cld
xchg
stc
nop
movsb
in
push
fwait
adc
xchg
das
push
dec
insl
and
or
jmp
orb
in
sbb
mul
fs
add
test
dec
jecxz
lahf
mov
decb
jmp
popa
adc
jno
sti
rcrl
dec
and
dec
imul
adc
adc
mov
divb
test
lods
rcl
gs
or
movsl
mov
jnp
scas
xchg
nop
and
dec
mov
aaa
out
mov
sbb
fwait
mov
pop
lods
nop
push
dec
testb
sbb
movsb
fsubrl
mov
push
jb
mov
jmp
push
test
cmc
cmpsl
ret
movsb
jl
lods
pop
or
pushf
aas
andb
or
cmp
jbe
int
call
adc
xchg
mov
clc
das
out
test
jno
jnp
and
sbb
sub
and
jne
aam
push
jl
repnz
es
in
lods
loopw
cmp
xlat
in
xor
repz
testl
sbb
xor
inc
mov
in
movsb
xor
adc
fistl
cli
mov
jne
cmp
mov
dec
sub
xor
xchg
imul
push
imul
pop
pop
inc
or
adc
test
add
adc
or
int3
test
push
push
call
cmp
cwtl
xchg
fwait
dec
or
and
jae
movsl
mov
xorb
sbb
insl
stos
pop
push
add
test
imull
add
and
loopne
add
push
and
inc
mov
jb
mov
sub
rolb
test
adc
mov
pop
mov
dec
aad
xlat
lret
mov
xlat
lret
fstpl
jle
jb
cltd
cmp
nop
loop
xor
push
mov
or
push
out
sub
inc
mov
aad
popa
and
mov
cmp
add
inc
lock
je
jns
pop
into
mov
jecxz
movsl
aam
das
xchg
push
mov
adc
inc
ja
rcll
mov
xor
insb
test
cld
lods
pop
add
push
imulb
loop
cmpsl
aam
loope
pop
sbb
jg
fs
cltd
fsubrl
mov
add
or
call
adc
mov
test
or
mov
pushf
push
mov
xchg
mov
xor
push
stc
sub
adc
outsb
jbe
mov
cmp
daa
push
push
fdivrp
mov
dec
add
or
xchg
out
and
push
rorl
fcmovb
js
sahf
ror
mov
add
aad
mov
into
pop
testb
cs
jp
mov
sti
cmp
movsb
push
or
inc
orl
jl
sahf
mov
pop
xchg
lcall
out
sbbl
enter
into
fdivs
add
insb
jo
stc
mov
aam
pop
lahf
push
sub
lahf
push
dec
or
mov
add
shll
inc
mov
dec
add
cmpsb
xchg
xor
add
cmpl
popf
and
lcall
sub
es
fs
cs
cmp
std
fldl
in
jae
dec
sub
test
dec
ja
in
sahf
mov
pop
adc
addl
fistps
xchg
adc
fadds
gs
sti
cli
mov
mov
cltd
or
and
sub
cld
jns
and
mov
ljmp
pop
lcall
mov
xchg
out
inc
xor
pop
mov
mov
and
add
or
insb
cld
ret
pop
jg
cmp
sbb
push
or
mov
ds
cmp
in
outsb
push
in
loop
lret
lret
ja
shlb
mov
ficoms
mov
mov
lret
jo
stc
mul
repnz
fs
cwtl
cwtl
stos
jno
dec
lcall
iret
fnstcw
out
test
push
mov
jae
ss
sbb
movsl
dec
sti
jno
mov
mov
bound
jnp
xchg
or
js
stos
mov
sub
js
jle
sahf
test
stos
imul
cmpsl
lock
dec
adc
cmp
mov
fldcw
cmp
rcrb
sbb
sub
je
pop
loopne
jbe
outsb
mov
inc
addb
and
xchg
aam
test
fdivrs
aam
ss
add
jnp
adc
fcoms
push
push
adc
mov
xchg
jge
adc
mov
jnp
hlt
jno
and
imul
adc
pusha
fstl
sub
ret
adc
push
dec
pop
repz
je
icebp
out
jge
lahf
scas
iret
adc
mov
or
push
jb
cmp
popa
xor
jbe
sub
insb
mov
in
xorb
repnz
lods
xchg
cmp
shrl
pop
add
test
pop
outsl
or
jmp
xor
jae
jnp
lods
push
sarb
out
sbb
js
repz
or
loop
cmp
pop
dec
lret
lcall
push
mov
rcll
out
lcall
xchg
lret
jns
xbegin
xchg
add
pusha
leave
rolb
test
or
dec
divl
out
xchg
push
lea
mov
sbbl
xchg
fadd
cmpsl
aaa
mov
mov
ss
mov
arpl
decb
stos
pop
out
rcrb
pop
inc
out
jo
cwtl
xchg
adc
je
mov
mov
enter
pop
jge
xchg
cmp
nop
pop
out
mov
js
stc
cltd
in
rcrl
std
push
arpl
push
sub
jb
xchg
add
lret
sbbb
fisubrl
frstor
repnz
and
subl
add
jbe
mov
mov
sub
cmp
mov
mov
xchg
lds
idivb
inc
inc
xor
jg
inc
inc
mov
mov
mov
repnz
xor
sti
cmp
shl
in
xchg
pop
pop
sbb
and
ja
cwtl
pop
dec
mov
add
sub
test
add
pop
fxtract
int
test
test
mov
stc
mov
pop
pop
rclb
xor
push
adc
lock
jae
popl
jl
inc
movsl
outsl
icebp
loope
icebp
mov
outsb
and
push
jo
sbb
mov
jmp
mov
push
dec
adc
dec
dec
sub
mov
lret
sub
lods
sub
mov
mov
daa
movsb
fimull
cltd
lea
cmp
movsl
cli
jle
sbb
es
pop
aad
stos
xlat
cmp
dec
scas
lret
jge
sub
test
lods
sbb
add
pop
lret
sbb
jmp
arpl
inc
out
jmp
out
pop
adc
fwait
xlat
cmp
mov
aaa
inc
nop
mov
popa
mov
cmpsl
popa
aad
stos
xchg
sbb
aaa
push
jb
inc
mov
out
inc
push
pusha
lea
loope
roll
test
sbb
loop
sbb
outsl
add
cmc
or
push
push
out
loop
sbb
xlat
sbb
movsl
ficoml
aaa
sub
or
fnsave
pop
fisubs
movl
push
mov
test
xor
adc
xchg
repz
push
push
pop
lret
jnp
fs
mov
mov
nop
xchg
scas
adc
cmpsb
sub
pop
loopne
xchg
in
mov
add
idivl
test
sbb
jecxz
data16
push
xchg
xor
nop
inc
mov
js
push
sbb
sub
fwait
cmpsl
add
xchg
add
int
and
imul
sub
call
sub
insl
mov
adc
decb
jecxz
fnstenv
jbe
popa
and
dec
mov
in
mull
mov
pop
mov
push
sbb
pop
pop
pop
insb
cmc
out
lcall
pop
rorl
sti
scas
daa
xor
adc
incb
cwtl
cmpsb
mov
inc
cmp
js
pop
sar
sub
jl
cmp
and
cmp
cmp
xor
dec
and
out
roll
movl
dec
enter
mov
shrl
les
push
mov
in
mov
adc
mov
add
xchg
xor
in
mov
lcall
xchg
xchg
mov
imul
enter
imul
test
daa
and
xor
lock
xstore-rng
cmpsl
ret
xlat
pop
xchg
or
iret
push
xor
xchg
dec
mov
out
pop
and
inc
stos
dec
xor
mov
ret
test
shlb
jl
call
pop
fstp
sahf
dec
mov
out
cmpsl
dec
push
add
data16
mov
ret
adc
sub
mov
hlt
mov
mov
xor
popa
pop
fwait
push
mov
inc
pop
incl
jp
test
push
xchg
push
and
enter
mov
dec
or
aad
pop
cmp
outsb
mov
xor
sarb
jo
xchg
sarl
add
sbb
sbb
cs
jg
shll
or
je,pn
ljmp
mov
std
scas
aam
rcr
mov
dec
dec
mov
jno
aas
sub
xor
stos
jnp
cmpsb
lahf
icebp
les
add
lcall
push
stos
int
nop
cwtl
shl
mov
sbb
addb
mov
ja
push
xor
call
insb
sub
lods
repz
dec
sbb
dec
sbb
sbb
pop
mov
lret
add
scas
aad
out
cld
dec
mov
sti
movsb
dec
jg
or
ds
mov
ret
push
fwait
cmp
jle
and
push
xor
cli
sbb
jae
adc
dec
inc
inc
mov
dec
test
leave
sub
pop
mov
cmpsl
xchg
adc
jg
xchg
xchg
dec
xchg
adc
push
cmp
xlat
adc
fdivrl
ja
jg
ja
loopne
ds
sub
xchg
jge,pn
sbbl
repz
in
je
imul
lds
push
arpl
jmp
test
ficoms
jle
shlb
cld
pop
mov
jne
insl
ja
cmp
add
fsubrs
mov
in
cwtl
out
sarb
xor
inc
shrl
stos
je
ret
mov
or
xchg
les
add
addr16
imul
dec
push
repnz
fdivs
mov
rorl
mov
xchg
push
sbb
add
ret
cld
adc
lahf
mov
push
inc
stos
jne
add
ljmp
mov
popa
jnp
hlt
stos
inc
jmp
scas
dec
cltd
jno
adc
push
cli
std
scas
aam
testb
xchg
frstor
fsubs
xchg
cmp
insb
adc
dec
out
mov
mov
std
mov
or
and
cwtl
sbb
sub
jmp
roll
mov
xor
fstpt
sbb
fstp
sbb
lretw
pop
mov
push
mov
pop
ss
test
enter
addr16
insl
adc
xchg
inc
sub
inc
cmp
push
and
lods
popf
pop
cmp
mov
inc
mov
add
call
lods
cmp
mov
mov
ss
shlb
mov
lcall
dec
mov
jl
and
lcall
xor
adc
and
arpl
cld
inc
out
push
ljmp
insl
fisubrl
mov
imul
sbb
int3
and
sbb
imull
stos
out
imul
dec
addr16
or
sub
or
push
adc
adc
pushf
push
sub
sub
push
ret
les
cld
fisubrs
adc
jle
loope
scas
mov
xor
sbb
mov
in
cmpsb
dec
pop
fbld
jecxz
mov
add
mov
movsl
cmp
mov
movsb
ds
dec
nop
adc
ja
bound
sti
pusha
and
adc
lock
sbb
xor
out
std
push
sbb
rcl
imul
push
pop
stos
int
adcl
dec
sbb
push
sbb
dec
loope
stc
sbb
mov
jg
push
add
mov
fs
adc
xchg
xchg
mov
out
mov
adc
cmp
iret
cmp
iret
cli
ud1
cmp
adc
mov
lods
sbb
push
mov
cmp
je
mov
jae
in
mov
cld
xor
and
loope
cld
push
xor
mov
sub
and
mov
lods
out
add
xchg
xchg
fwait
aas
sar
aas
int
loopne
adc
sbb
jae
pop
pushf
push
cmp
lods
out
or
mov
cmp
outsb
adc
xchg
pop
stos
imul
pop
push
les
pop
lahf
mov
mov
inc
loopne
jbe
test
ret
dec
aam
push
mov
rol
or
push
xor
fwait
and
pusha
adc
jae
or
sub
pop
sub
sbb
pushf
stos
sahf
icebp
jns
xor
lods
push
mov
mov
xor
pop
fucomip
lret
gs
in
adc
or
nop
in
mov
hlt
aad
sub
js
ds
xchg
lock
ficoml
leave
cmp
push
xchg
xor
add
xor
and
je
or
pop
and
and
dec
aad
das
test
cmp
loop
cmp
pop
inc
xchg
leavew
ja
push
mov
imul
mov
and
daa
xor
fstpl
in
nop
add
je
cmp
out
push
mov
inc
iret
pop
push
fistl
arpl
and
xchg
xchg
mov
icebp
or
movsl
jae
pop
jb
inc
xor
lock
pop
hlt
dec
or
push
cwtl
xchg
cmc
cmpsl
movsb
sub
pop
mov
sub
sbb
mov
out
add
sbb
push
or
hlt
fadds
movsl
leave
aad
push
adc
mov
and
fmull
dec
inc
xchg
je
sub
mov
jne
out
in
pop
cmp
add
xchg
jle
loop
mov
pop
fucomp
lahf
mov
ja
aaa
sbb
outsb
bound
in
or
lds
mov
inc
ret
mov
add
mov
test
dec
adc
pop
icebp
dec
xlat
lock
lods
js
out
fstl
stos
icebp
push
push
jmp
std
loope
sub
jecxz
cli
xlat
or
int3
push
inc
xchg
pop
mov
stc
rcrl
mov
arpl
mov
and
and
add
push
jge
pop
sti
or
and
add
rorl
mov
add
ss
sbb
fidivs
andl
mov
cmpsb
push
out
and
pop
mov
push
int
jns
jb
dec
addr16
loopne
or
ret
xor
pop
jmp
fidivs
sarl
in
cli
out
ds
cltd
lds
stc
ljmp
rorb
cmp
xchg
movsl
fsubl
sti
jae
cmpsl
inc
and
pop
clc
sub
xor
jae
and
sub
fdivl
cmp
mov
mov
xor
mov
adc
mov
mov
pop
add
sbb
jbe
outsb
sbb
dec
or
xchg
jb
outsb
mov
pop
adc
jp
ljmp
movsl
sti
decl
fdivs
loope
das
shl
ss
dec
aas
fadd
xchg
xchg
mov
bound
sarb
adcl
mov
jb
call
sub
stos
inc
or
jg
cltd
inc
jecxz
mov
jb
test
inc
stos
or
add
arpl
rol
xchg
jne
enter
shll
lea
mov
dec
pop
mov
repnz
mov
fsubrs
push
pop
outsl
mov
ja
jle
loope
test
fnstenv
mov
movsl
fiadds
mov
push
inc
push
aad
gs
dec
into
push
cmp
sarl
fcoms
pop
jo
sbb
and
sbb
jae
ret
pop
pop
sbbl
adc
jno,pn
cmp
jno
inc
imul
pop
or
mov
out
push
daa
mulb
adc
add
push
cmp
xor
adc
xchg
jb
xchg
jmp
cmc
push
pmuludq
roll
inc
push
gs
stc
and
push
mov
mov
sbb
and
jno
sti
mov
add
hlt
xor
idivb
push
ret
fistl
xchg
cmp
push
push
das
sub
and
loopne
xchg
int3
inc
sub
push
loope
jge
daa
inc
mov
mov
sub
leave
or
and
test
and
sbbb
sahf
mov
gs
test
or
inc
add
mov
fs
push
dec
jle
and
insl
pop
out
shlb
jno
adc
adc
mov
in
repnz
out
add
mov
mov
lret
out
insb
cli
xchg
or
pop
das
cmpsb
cmc
jne
into
adc
fidivrs
add
mov
stos
xlat
push
pop
cmp
xor
add
sbb
xchg
fmul
pop
xor
aas
out
jg
dec
outsl
xchg
ja
jmp
sbb
lds
push
push
inc
test
insl
jle
insl
xor
sar
adc
out
pop
loope
inc
and
pop
loop
pop
aad
rcrl
cmpsb
mov
mov
lock
cs
stos
push
rorl
dec
jns
daa
and
movsl
lahf
jno
mov
inc
clc
add
inc
add
std
inc
inc
xchg
mov
stos
push
subb
xchg
and
clc
adc
gs
les
ret
ja
aam
pop
hlt
jo
jne
xor
mov
leave
lea
mov
fisubl
int
cs
aam
gs
ss
dec
in
lock
outsl
mov
ja
push
xchg
mov
and
sub
mov
insl
adc
fsub
lds
sbb
dec
cmp
inc
mov
scas
mov
shll
mov
mov
pop
and
cld
jecxz
cltd
push
loopne
push
jno
xchg
lds
decb
stos
xchg
in
jnp
mov
out
into
lods
mov
sbb
into
cltd
aas
movsb
out
mov
inc
insb
inc
mov
iret
js
pop
loopne
or
in
pop
jnp
cmp
pop
out
inc
pop
mov
lods
inc
imul
hlt
push
push
fstpt
into
pop
mov
sub
pushf
hlt
push
push
mov
pop
movsl
mov
jg
mov
ds
test
ss
cld
out
fdivp
cmp
dec
insl
ss
pop
in
mov
mov
jg
adc
sbb
cmpl
subl
xor
or
add
fwait
popf
fcomps
mov
lret
scas
xorb
or
cli
ss
idivl
fsubrl
inc
add
int
in
mov
jnp
movsl
stos
repnz
ss
push
daa
aaa
mov
xchg
imul
dec
outsb
xchg
mov
sub
pop
push
xor
les
stos
mov
cmp
test
sub
or
mov
jne
imul
or
fs
imul
dec
mov
adc
dec
and
fucom
dec
lea
shl
cmpsl
sbb
adc
cmp
ror
jo
sub
sbb
das
out
push
cmp
gs
fst
inc
mov
jg
and
xchg
stos
cwtl
cmp
pop
push
nop
mov
cmpsl
pop
push
dec
lcall
cmp
inc
out
xchg
add
out
add
bound
mov
ror
mov
blsfill
or
xchg
cmp
jns
in
mov
test
mov
fistl
ds
sub
pusha
xrelease
add
cmp
scas
pop
and
mov
adc
mov
dec
inc
and
insb
lock
jmp
cmc
sub
sti
cmp
cmp
push
ja
add
lcall
inc
ja
fnstsw
inc
insb
fldenv
and
mov
push
and
rol
jecxz
subl
xchg
inc
stc
lret
mov
mov
cmp
xchg
push
loop
jl
addl
pop
mov
imul
push
rcll
stc
jo
stc
loopne
shr
cwtl
pop
loope
ret
mov
adc
imul
pushf
movsl
out
rcrb
aaa
pop
shrb
lea
ret
in
daa
imul
sub
add
lea
add
adc
mov
imul
test
or
fdivrs
adc
test
mov
rclb
xor
push
ss
fucomip
sub
mov
add
mov
xor
scas
arpl
hlt
xor
add
cmpsb
es
pop
sbb
jne
lcall
sub
rol
sub
and
in
xchg
sbb
fnstenv
jo
dec
call
mov
stc
ja
push
xorl
mov
dec
loop
pop
pop
xor
addr16
dec
shll
jns
jbe
and
aam
icebp
popa
sar
sub
sti
xchg
das
sub
pushl
and
jb
dec
outsl
out
ja
aaa
cwtl
icebp
int3
shrl
pop
push
mov
enter
movsb
mov
cmp
shrl
mov
mov
enter
fcomps
sbb
in
mov
int
enter
movsb
mov
std
jne
gs
add
ss
mov
cmp
sbb
mov
setne
mov
xchg
nop
jmp
adc
clc
and
sub
xchg
movsb
lret
cmovg
xor
mov
ret
fwait
xlat
jecxz
mov
iret
or
xchg
pop
popl
subb
xchg
push
add
xchg
xadd
insl
idivb
nop
mov
jg
lock
mov
test
jp
std
inc
popf
ret
dec
mov
inc
jo
and
call
cld
jmp
adcb
cmp
push
jg
inc
mov
inc
mov
ljmp
pop
sub
sub
dec
dec
in
mov
xchg
dec
es
xor
stos
sbb
mov
mov
mov
shll
fiaddl
ljmp
inc
inc
std
shlb
or
jae
scas
mov
enter
in
pop
aam
test
outsb
xor
adc
test
mov
push
adc
nop
xchg
sahf
mov
mov
xor
xor
adc
insb
incb
sub
into
jae
cmpsb
inc
jns
xchg
dec
lcall
int3
loop
shr
repnz
add
mov
jae
lock
adc
leave
cli
cmp
test
sbb
pop
lret
popf
aam
ret
push
data16
popf
pushf
push
sub
pop
subl
mov
inc
cmp
enter
daa
mov
pop
mov
cmp
cmp
xchg
dec
lahf
dec
or
cli
sub
push
mov
push
in
pop
enter
cmp
outsl
dec
sub
stos
outsl
aaa
or
je
push
inc
pop
andl
inc
dec
xchg
push
repnz
fimull
lock
and
fnstcw
clc
dec
pop
fwait
test
dec
xchg
mov
enter
sbb
dec
fwait
gs
imul
ficomps
dec
add
push
adc
cmp
and
jecxz
xlat
mov
stc
clc
and
jb
inc
push
bound
pop
sbb
mov
outsl
jnp
add
mov
inc
test
adc
into
pop
jne
xor
xor
lods
dec
lcall
dec
sbb
ljmp
gs
jmp
je
insl
push
push
dec
pop
movl
loopne
dec
cltd
and
fisubrl
dec
scas
xor
lock
push
jecxz
mov
and
popf
push
push
int3
stos
pop
dec
jne
mov
cmp
sbb
idivl
stos
lods
out
mov
pusha
incl
and
xor
leave
ret
xchg
push
and
mov
cmp
pop
ficoml
push
int
mov
or
and
inc
out
jl
push
andl
movsl
xor
stc
jecxz
in
addr16
pushf
jge
xchg
pop
jge
or
or
push
or
inc
or
jg
push
jnp
sbb
lea
inc
dec
loop
out
mov
je
cmpps
pop
jmp
pushf
mov
rcr
mov
pop
push
movsl
scas
pop
add
jmp
test
xor
std
lds
cmpsb
jp
push
fsubp
imul
popf
add
dec
sbb
xor
push
xor
cli
cmp
je
orl
loop
jne
je
sbb
lahf
cmp
popf
jmp
call
ds
pop
call
lahf
jae
mov
out
mov
std
lret
or
test
sahf
dec
jb
push
icebp
loop
mov
daa
int
or
xchg
repz
ret
std
sahf
adc
repnz
xchg
sbb
out
icebp
pop
sbb
into
or
out
insb
in
adc
push
jmp
or
je
shlw
je
inc
push
jecxz
push
or
cld
int3
aas
out
adc
cmpsl
inc
push
pop
jmp
leave
xor
xorl
add
shrb
mov
push
xor
dec
push
inc
sub
in
rorb
ds
push
jae
inc
pop
sub
add
clc
sub
jb
dec
scas
jg
inc
xor
lods
adc
arpl
lcall
pop
push
les
mov
lea
add
push
pop
pusha
push
sbbl
sti
mov
xor
mov
xor
aas
sub
daa
pop
mov
xor
cmpsl
fldl
sub
mov
sub
cs
push
int3
pusha
adc
jecxz
push
adc
gs
iret
call
mov
sbb
inc
repz
aad
sahf
dec
mov
jge
cmpsb
jge
dec
or
fsubs
flds
pop
mov
cmp
inc
movsb
pop
cmp
push
jl
jae
add
and
shr
xchg
fimuls
sbb
cmp
lcall
je
imul
sub
mov
mov
sbb
out
scas
or
cld
add
roll
loopne
imul
fldenv
cltd
es
add
cmp
xor
mov
add
add
push
inc
mov
dec
ret
mov
call
or
test
pop
out
movsl
push
sbb
adc
sbb
lahf
loop
push
outsb
test
js
mov
rcrb
mov
into
sbb
and
dec
cltd
jae
or
mov
add
cmp
aad
and
loopne
xor
fwait
dec
mov
ret
lods
sti
insb
out
sbb
mov
add
test
call
or
jge
jns
cmp
mov
imul
int3
andl
imul
cmp
push
dec
fsubl
jg
jg,pt
shlb
mov
jmp
jmp
mov
sub
xor
mov
icebp
xlat
fsubrs
jg
test
mov
sbb
faddp
out
loopne
cmp
mov
mov
lds
testl
fcmovnbe
jns
mov
pop
adc
pop
pop
push
push
push
mov
and
mov
and
jno
adc
pop
xchg
push
stos
sbb
adcb
imul
adc
cltd
cltd
jae
lea
movsb
in
dec
xchg
dec
xchg
add
mov
fwait
ret
mov
in
and
sti
cmp
call
test
xchg
aaa
out
xchg
mov
xor
stos
out
jmp
cmp
lds
or
inc
xor
fwait
jae
das
jmp
arpl
fisttpll
xchg
out
push
scas
jae
arpl
xchg
xchg
push
dec
test
mov
adc
xor
movsb
test
ds
shll
addr16
js
aam
sub
adcb
sbb
les
cmp
xor
popa
in
adc
fcmovnbe
into
lcall
add
dec
lods
sbb
sbb
jnp
dec
sub
mov
in
fisubrl
scas
or
or
repnz
call
or
loopne
rcll
push
hlt
push
sub
loope
fs
sti
cmpsl
or
mov
fsubrs
popa
pop
les
adc
cmp
cmpsl
mov
js
inc
test
mov
pop
mov
push
pop
ret
push
jmp
sub
pop
push
mov
push
jmp
or
leave
sub
jns
xor
addr16
jle
mov
push
push
call
dec
mov
add
movsl
inc
push
es
je
sub
dec
in
out
adc
or
aad
dec
rcrl
or
jb
daa
jo
sub
pop
xor
int3
mov
sub
test
shrb
scas
or
cmp
mov
sub
pop
mov
lahf
jle
in
aad
int
aad
iret
and
inc
cmpsl
add
inc
stos
lret
pop
dec
sub
sub
iret
imul
fnstsw
sarl
or
rcrl
js
push
jl
ret
loope
push
jmp
enter
mov
add
jnp
pop
and
mov
xor
mov
adc
sub
sub
ss
mov
lods
cmp
loopne
sar
sarb
loope
cli
lcall
ret
inc
inc
inc
cmc
jnp
ret
clc
xchg
adc
sbb
pop
dec
xchg
test
fcomi
cmc
jge
leave
divb
lea
lcall
int3
cmpsl
jae
push
scas
xchg
or
mov
mov
xchg
jnp
sub
lods
jb
and
xor
sbb
int
jo
dec
pop
in
inc
push
lcall
cmc
mov
xor
lret
mov
pop
lods
xchg
mov
mov
inc
js
movsl
cmp
pop
das
popa
xchg
mov
test
push
inc
mov
icebp
pop
push
test
out
xchg
sbb
fstps
adc
rorl
fwait
adc
xor
sbb
lahf
dec
adc
bound
shll
hlt
into
jecxz
cmpsl
hlt
mov
mov
adc
into
add
inc
jmp
lahf
adcb
in
or
aaa
inc
and
hlt
pmullw
int3
inc
pop
int
arpl
pop
sub
jb
in
fucom
pop
xchg
and
xchg
insb
mov
dec
sub
ljmp
shr
fadds
push
loope
jmp
mov
inc
add
cltd
push
sbb
rol
repnz
call
lea
inc
inc
jns
inc
movsb
mov
ret
shlb
into
aas
lahf
enter
ds
sub
test
loope
jl
mov
fistpl
arpl
sbb
lea
rorb
xor
aad
std
mov
xchg
fs
xchg
push
pop
sbb
lea
subl
sbb
cmpsl
clc
cld
pop
fiaddl
aas
and
jne
ret
push
mov
push
push
fsubl
dec
jmp
popa
mov
fcomps
sbb
xchg
pop
inc
daa
add
ret
out
pop
inc
push
movsb
add
cmp
es
pop
rcll
push
jl
and
std
jecxz
test
lock
add
addr16
and
add
add
insb
int3
cmp
or
pop
insb
call
mov
mov
add
movsl
test
mov
mov
cmp
in
das
push
cli
jp
sub
loope
add
push
pushf
mov
out
add
add
pop
pop
inc
andb
jecxz
adc
aas
inc
sbb
cmp
sub
stos
out
repz
push
lcall
adcl
mov
inc
repnz
in
xor
inc
scas
fldl
out
dec
out
lahf
ss
loopne
pushf
push
fisttpl
xor
cmpsb
bound
outsb
cmpsl
sar
push
loop
mov
stos
push
lock
jne
lds
mov
or
xor
das
and
jae
mov
imul
mov
out
out
jecxz
data16
shlb
inc
push
add
jle
xor
jle
sahf
subb
popf
fsts
imul
add
cmpsl
test
pop
jecxz
jns
sbb
xorb
in
adc
push
dec
jle
add
jno
sub
loopne
stc
fcoml
stos
mov
and
lock
push
fcom
mov
pop
add
sarb
jl
jg
lea
jbe
sub
jg
xor
xchg
cmpsb
imul
adc
add
mov
mov
dec
push
pop
cmpsl
xchg
jmp
xor
xor
in
lret
adc
push
cli
lea
mov
jns
jnp
lock
dec
lcall
pop
cld
xor
xchg
jmp
out
dec
fld
mov
cmpsb
ja
push
add
ficoms
jl
out
pushf
aam
sahf
cmpsl
jp
mov
add
loop
fs
into
push
in
xor
and
int
add
cmp
xor
xchg
stos
sbb
jmp
push
iret
xor
rcr
imul
or
ss
das
in
mov
rcrb
outsl
add
aad
stos
push
or
push
inc
lret
sub
std
push
and
fnstsw
addr16
jne
lahf
inc
xchg
cmp
cld
mov
push
jmp
xchg
stc
mov
ds
mov
popf
adc
sub
xor
test
clc
mov
inc
jnp
nop
xor
jle
fisubrl
xor
cli
push
or
xchg
pop
sbb
inc
jno
sahf
cmc
mov
push
shl
dec
aam
repz
mov
adc
test
mov
xchg
inc
and
ljmp
pop
mov
pop
or
adc
mov
in
hlt
jnp
jbe
and
add
insb
or
push
jge
jnp
cli
xor
data16
out
inc
pushf
and
sbb
inc
in
in
jb
les
or
divb
mov
xchg
repz
fsubp
out
inc
sbbb
mov
mov
push
sbb
push
and
and
loop
addr16
movsb
mov
mov
es
xor
stos
stos
mov
mov
aas
and
mov
aaa
or
mov
shrl
mov
popf
aaa
cmp
mov
lods
addr16
je
mov
cmp
ret
sbb
pop
mov
push
addl
pop
std
inc
pop
cli
mov
ja
je
and
dec
mov
pop
or
adc
pop
jmp
in
mov
or
jno
std
jb
add
lret
add
cmpsl
in
fimuls
fisubl
bswap
gs
inc
fsubrp
fdivs
xchg
xchg
mov
push
repz
dec
lea
mov
add
mov
int
insl
test
jae
int
cmc
scas
mov
dec
arpl
jb
sbb
xchg
out
in
jae
in
test
jnp
bound
fisubs
lock
xor
xor
shl
pop
shll
and
cmovno
lret
and
mov
notb
sub
jle
scas
or
dec
inc
xor
es
std
dec
mov
xchg
scas
or
icebp
in
stos
fimull
mov
je
add
aam
mov
stos
mov
cmp
sbb
cld
dec
cwtl
push
arpl
rorb
insl
jns
add
dec
dec
imul
adc
dec
mov
add
push
mov
mov
imul
shr
mov
adc
ja
insb
pop
inc
icebp
cmp
xchg
mov
mov
aaa
pop
lods
fidivs
inc
sub
ficompl
sahf
mov
sub
mov
mov
cmpsl
push
rolb
movsl
push
adc
scas
scas
adc
fmuls
pop
scas
xchg
dec
or
adc
fstpt
dec
sahf
enter
mov
es
aam
rorb
sub
jecxz
daa
jg
lea
or
data16
dec
fcoms
adc
adc
or
or
or
test
mov
stos
sbb
pop
shlb
arpl
icebp
mov
or
les
cltd
fimull
sub
jecxz
pop
lock
mov
or
imul
mov
dec
xchg
cmp
jbe
xchg
pop
das
in
dec
inc
pop
idivl
push
add
nop
push
loopne
clc
mov
add
dec
movsb
ficoml
xlat
mov
pop
add
push
neg
cmp
sub
ficoml
mov
loopne
jnp
mov
iret
sahf
inc
adc
sbb
aaa
idivl
mov
adc
inc
xor
sahf
les
int
stc
xchg
xlat
xor
dec
divb
bound
or
inc
inc
jl
xchg
inc
or
std
or
popa
sbb
inc
out
push
add
cmc
inc
mov
repz
mov
pop
push
sub
mov
mov
bound
frstor
xor
loope
mov
adc
mov
test
scas
push
leave
push
repz
adc
movsb
fcompl
mov
or
mov
cmp
ljmp
adc
sbb
xlat
clc
mov
fucomp
jnp
push
mov
aas
roll
lods
xchg
mov
inc
subb
dec
stc
push
lret
push
in
xlat
bound
inc
jle
jl
add
ja
mov
int3
outsl
jnp
leave
inc
mov
xlat
adcb
xor
sub
dec
insb
shrl
push
jbe
ret
shrb
sub
clc
sbb
pop
sbb
xor
push
push
pusha
lods
sub
lods
jns
mov
cwtl
xchg
out
mov
in
stos
mov
repz
std
dec
ja
outsl
inc
ret
dec
dec
inc
sarb
out
imul
jnp
jecxz
or
test
je
push
mov
jnp
xchg
jg
add
jnp
scas
fidivrl
mov
out
es
fwait
sbb
push
aam
fs
add
mov
add
sbb
ret
mov
sub
push
adcw
sbb
cs
lret
bound
jno
cmp
js
lock
test
stc
mov
rolb
pop
dec
enter
pushf
fstpt
jb
add
mov
aaa
inc
jle
push
leave
add
push
or
and
dec
or
lret
lock
stos
call
pusha
lret
lods
fcoml
sub
pop
mov
mov
jg
imul
mov
mov
mov
mov
mov
aam
icebp
bnd
cmpxchg
outsl
fstpt
insl
push
into
rorb
dec
xchg
mov
movsb
xor
fldt
insb
pusha
push
push
inc
insb
jge
and
push
sbb
push
push
jb
and
scas
or
inc
mov
js
lods
inc
jae
sbb
iret
ja
xor
pop
test
mov
and
push
aam
inc
xchg
and
cmp
sbbl
push
mov
inc
sub
aam
addl
ljmp
into
repnz
pop
xor
lods
mov
push
cwtl
aad
adc
js
sahf
pushf
iret
scas
sub
sub
fists
or
loope
xorb
adc
popa
jno
in
cli
mov
inc
jg
mov
or
mov
dec
andl
int3
mov
stc
xor
mov
negl
xor
push
add
rorb
sub
fisttpl
outsl
lret
dec
inc
aad
scas
jne
rcrl
xor
enter
dec
xchg
scas
add
or
call
jl
pop
aam
push
cld
jae
in
aaa
lret
sbb
mov
add
mov
sub
sti
insb
out
pop
jb
or
xchg
clc
mov
divl
movsb
adc
mov
or
mov
dec
xor
cmc
sahf
cmpsb
aam
or
bound
out
cmpsl
mov
stc
out
gs
loope
mov
inc
and
jae
jp
in
call
pop
insl
rcrl
xorl
sbb
ja
adc
and
push
js
jl
jl
in
fstps
push
cld
inc
jb
jno
jo
nop
imul
pop
push
dec
shrl
pop
mov
aam
jae
arpl
xchg
push
mov
movsb
jecxz
test
inc
mov
mov
sub
rcrl
aaa
jbe
dec
pusha
jns
xor
sub
push
cmpsb
insl
cltd
mov
cmp
stos
xor
rcl
les
aas
xor
fildll
mov
adc
inc
loopne
cmp
rcl
jb
xchg
jne
xor
sbb
jnp
sub
jle
mov
popf
sbb
push
pop
mov
jmp
clc
pop
insl
sub
inc
sub
popf
call
sar
es
out
or
loope
pop
mov
xor
or
ljmp
sub
cmp
sbb
xchg
rol
scas
das
inc
pop
dec
out
into
cmp
xor
mov
jne
test
sbb
ret
shrl
adc
test
sbb
jns
rorb
jnp
dec
inc
mov
sarb
cmp
insb
popa
jns
pushf
sarb
or
cmc
stc
nop
sub
mov
inc
inc
push
pop
pop
pop
mov
dec
stos
out
xor
sub
faddl
faddl
sub
sbb
jae
insl
and
or
xlat
es
insl
pushf
inc
cmp
lds
std
push
ds
out
mov
mov
pop
jg
jns
lret
out
and
sub
fsub
add
ja
xchg
jecxz
shl
pop
stos
cmp
aas
sbb
ret
xor
dec
lea
mov
repz
fdiv
push
xchg
ret
test
add
rorl
into
sub
std
sub
push
adc
jnp
xor
jb
es
stos
lret
xchg
ss
out
xchg
dec
push
jae
mov
push
mov
push
mov
pop
or
adc
jb
ret
lea
mov
hlt
xor
ret
pop
in
push
jge
inc
xor
push
xchg
out
movsb
cmpsl
jg
inc
out
popa
xchg
jle
js
call
mov
shll
mov
xor
pop
mov
push
mov
sub
divb
jecxz
add
adc
scas
pop
pop
mov
shrl
test
test
inc
pop
and
gs
sti
lods
dec
xor
jo
ljmp
sub
call
or
jb
jne
pop
or
movsl
clc
stc
stos
out
ret
cmpsl
jg
cmpsb
jb
mov
ja
scas
not
fwait
cmpsl
jno
leave
fcomip
addr16
xchg
inc
or
mov
jmp
arpl
stos
aam
add
in
add
inc
push
xorl
dec
rclb
lock
nop
sahf
in
in
dec
or
xchg
mov
adc
mov
out
mov
and
fwait
push
mov
lret
and
shll
aam
cli
lock
mov
push
ror
pop
into
xor
dec
mov
or
std
push
js
jg
adc
rclb
es
loop
aam
mov
enter
adc
fbstp
inc
sbb
out
jge
inc
xor
xchg
cmc
cmc
cmpsl
clc
cmp
stos
sbb
pop
nop
or
call
push
pop
jecxz
lret
jbe
cmp
pop
fwait
xor
stc
add
and
ret
outsb
xorl
loop
push
mov
fdivrs
pop
out
pop
mov
cld
out
les
mov
mov
push
loopne
out
aad
int
mov
cmp
mov
or
arpl
sahf
fwait
aam
dec
cmpsb
pusha
rolb
in
aad
test
les
xchg
mov
pushf
dec
insl
popf
or
in
add
xor
fcmove
enter
out
xor
std
cs
jl
inc
mov
push
cmpsb
mov
and
jnp
sbb
scas
sub
mov
int
arpl
in
movsb
arpl
sub
xor
or
out
insl
xor
imul
ret
mov
out
movsl
in
pop
xchg
dec
inc
and
cmpsb
imul
fstpl
xchg
jnp
lods
mov
stc
adc
lods
stos
inc
shrl
insb
sbb
inc
mov
rcll
pop
fldcw
or
or
mov
lock
sub
and
xchg
movsb
jl
outsl
xchg
scas
mov
jmp
pushf
mov
mov
andb
jle
cmp
adc
jg
outsl
cld
adc
or
inc
mov
stos
cmc
jle
shll
and
jp
rolb
sub
add
sub
es
test
and
or
inc
movsb
mov
aas
decl
inc
inc
aad
adc
arpl
or
mov
mov
dec
sti
mov
rorb
int3
icebp
shrb
mov
xchg
in
into
in
lods
jp
xlat
cmp
sarb
mov
cmp
or
int3
or
xchg
movsl
js
fidivrl
mov
add
lahf
inc
push
fsubl
xchg
daa
rcl
ficompl
dec
ds
mov
cmpsb
test
xlat
cmp
cmc
adc
push
in
popf
cmp
pop
mov
out
fwait
lret
push
mov
push
fidivrl
jg
popa
mov
cmpxchg
xsavec
lgs
inc
sbb
lahf
push
dec
aam
jnp
idivb
adc
iret
adc
pop
es
ljmp
lret
xchg
scas
sub
test
or
aaa
mov
jb
std
lods
cmp
bound
cmp
mov
shrb
inc
mov
cmp
or
sahf
pop
andl
dec
cmp
incb
addr16
ret
mov
nop
pop
or
dec
pop
mov
cs
in
inc
out
ljmp
mov
adc
addr16
dec
vphaddbd
je
push
cld
out
fwait
dec
pop
jge
jbe
neg
stos
dec
mov
jle
mov
mov
fidivs
xor
mov
sub
xchg
inc
shrl
or
or
aaa
enter
into
cmp
movsb
and
push
dec
inc
and
and
lea
sub
jle
add
imul
adc
in
lods
fstpl
push
push
pop
leave
fistpll
add
cmpsb
cmpsl
xchg
insb
pop
test
sbb
jg
cmpsb
jnp
jecxz
xchg
push
sub
ljmp
xor
push
cld
xchg
cld
pop
dec
and
vzeroall
push
les
in
pusha
dec
push
jo
or
sub
mov
mov
push
pop
aas
mov
dec
or
lahf
add
add
adc
xlat
aaa
mov
shlb
jbe
xor
nop
aam
lock
or
xchg
clc
enter
jge
les
push
add
sahf
mov
out
push
mov
sbb
lret
jne
sbb
and
sbb
loopne
push
es
aad
fxch
adc
mov
inc
pop
insb
mov
jno
push
sti
adc
or
xchg
ficomps
out
pop
sahf
jo
or
cmp
inc
stos
imul
cli
in
into
mov
adc
mov
inc
sub
lock
jbe
imul
dec
jnp
pop
int3
dec
add
mov
outsl
cmp
in
pop
or
dec
cmp
mov
data16
movsb
jge
test
push
aam
shlb
xor
sbb
fisubrl
mov
adcl
test
xchg
inc
pop
jecxz
mov
aas
mov
das
loopne
sbb
in
es
ficompl
jo
in
xor
inc
pop
pop
sahf
cs
aaa
add
pop
cmpsb
jp
push
pop
and
mov
xor
mov
jl
notl
push
adc
les
xor
rorb
and
jecxz
roll
into
sub
xor
add
lret
enter
leave
test
sub
push
mov
je
ds
push
insb
in
out
xchg
jl
insb
jbe
shr
and
mov
sub
jbe
cld
and
xchg
mov
xchg
lret
mov
sub
repnz
pop
xor
and
lret
push
movsl
pop
dec
repz
jl
pop
lea
xchg
lods
push
sub
aam
mov
shll
jg
sub
mov
orl
xor
jmp
cs
test
loop
dec
cmp
jecxz
cmp
pop
or
mov
add
push
mov
add
outsb
cmc
int
jmp
scas
fidivrs
and
xor
xchg
mov
sbb
in
in
movl
adc
pushf
test
cmp
cmp
mov
mov
xchg
jo
dec
bound
adc
jg
aaa
and
sub
popa
push
mov
lret
push
or
test
jns
jae
test
stos
pop
push
push
outsl
std
push
mov
out
mov
inc
xchg
lds
aas
xchg
mov
data16
ja
push
xor
mov
loop
aas
push
jnp
add
push
aaa
stc
sub
xor
jno
divl
jo
mov
fld
pop
imul
pop
popf
cmp
jp
lret
xor
mov
sub
enter
ja
orb
cmp
int
mov
in
iret
push
in
iret
pusha
cltd
in
cmp
test
cmpsl
add
pop
mov
xor
out
mov
lret
lds
gs
inc
out
fnstsw
enter
cs
add
sbb
mov
cld
rcrb
cmpsb
adc
inc
jp
adc
mov
mov
addr16
das
pop
xor
icebp
call
es
and
xlat
push
xchg
jno
jecxz
clc
imul
jp
sbb
lcall
addr16
ret
inc
fs
pop
pop
aam
push
xorl
add
mov
leave
and
or
jno
add
incb
mov
ds
adc
mov
dec
pop
mov
lea
das
or
icebp
mov
insl
mov
fdivrl
jnp
cmc
sub
fdivrl
mov
cmpsl
mov
push
pop
lods
ljmp
lea
sub
dec
clc
pusha
cmpl
popf
icebp
popa
loopne
ficoml
lahf
sahf
push
push
pop
hlt
xchg
or
repz
inc
xor
jp
lcall
lret
mov
imul
add
andl
cmpsl
rcl
outsl
stos
sub
mov
xor
mov
insl
shl
mov
loop
inc
test
dec
aam
ja
inc
and
mov
enter
jb
sbb
add
data16
lods
xlat
subl
jno
adc
dec
pop
movsb
roll
mov
jno
lods
mov
mov
jbe
adc
lahf
dec
jnp
shl
ljmp
es
jp
js
mov
jecxz
repnz
push
pop
cwtl
pop
push
cwtl
push
or
pop
push
lods
movzwl
out
pop
mov
imul
dec
push
ds
lods
in
cmp
mov
stc
imul
enter
fwait
xchg
mov
jl
or
push
or
push
pop
jnp
mov
pushf
mov
in
xchg
push
dec
xchg
inc
insb
sarb
sub
cmc
outsl
inc
in
mov
cld
or
lods
and
dec
dec
pop
and
lret
cmp
leave
mov
jno
sbb
push
and
push
add
dec
out
rcll
pop
and
dec
cmp
adc
mov
gs
sub
leave
sti
mov
or
stc
xor
loopne
mov
lret
scas
sahf
into
adc
xchg
xor
push
bound
loope
jge
popa
or
popa
enter
and
sarl
testl
call
ss
adc
sub
inc
lds
jae
push
imul
sbb
fbstp
xor
pushf
jecxz
popa
das
xchg
cmp
mov
mov
ret
mov
dec
pop
int3
fwait
outsl
testl
fcom
push
push
dec
sub
aaa
lret
iret
aaa
outsl
lret
jo
int
jo
cmp
xchg
adc
sub
sub
pop
ja
jbe
stos
inc
sub
lods
xchg
cmpsl
nop
les
dec
push
mov
in
fwait
push
push
sbb
lret
and
lcall
push
xchg
cli
test
lret
loope
lods
xchg
leave
add
fisttpl
jo
lret
push
fwait
mov
sub
sahf
pop
dec
jne
dec
fisubs
mov
sti
iret
in
ds
add
fstpt
and
or
int3
cmp
enter
and
scas
lret
pop
or
aaa
imul
cwtl
push
fs
and
pop
and
jne
ja
cltd
hlt
or
or
insl
xchg
int
add
insl
push
mov
ffree
mov
repz
call
rolb
pop
mov
cmp
cwtl
loopne
inc
push
mov
out
loop
mov
pop
fbld
push
xor
mov
cltd
sub
daa
int3
sub
clc
jge
and
push
dec
xchg
fistpl
out
jae
repz
xchg
lock
jnp
xchg
add
sahf
and
mov
ja
stos
addr16
int3
into
inc
stc
cmp
scas
sub
outsl
inc
mov
imul
dec
push
loop
jns
clc
fldl
loope
roll
xor
subb
stos
fbstp
mov
and
loopne
ret
or
movsb
out
pop
mov
loopne
dec
dec
fnstcw
pop
pop
jl
addr16
xchg
gs
mov
pop
xchg
jle
loop
stc
pop
cmp
pop
lcall
pop
pop
pop
xchg
in
mov
lods
fsub
xlat
mov
mov
les
or
test
imul
imul
jae
push
out
aas
inc
inc
sbb
mov
fnstcw
add
mov
and
pusha
and
leave
dec
shrl
movsl
addb
jecxz
in
mov
cli
jbe
mov
cltd
rcrl
aas
in
ja
jo
and
inc
mov
mov
mov
iret
add
insb
jmp
dec
out
add
and
test
push
mov
test
push
add
out
mov
xor
add
xchg
popf
jne
loopne
std
mov
testl
int3
xchg
es
into
std
out
pop
lahf
test
xor
mov
sbb
lods
adc
jle
jbe
aas
dec
dec
inc
jp
repz
mov
jmp
add
sahf
xchg
pop
add
jp
add
mov
adc
cmp
mul
add
icebp
cmp
jmp
fstp
cmp
push
xchg
jo
jge
xor
dec
aaa
addr16
pusha
mov
fdivrl
mov
jg
mov
inc
loope
push
sti
aad
in
dec
or
push
ja
xchg
dec
icebp
popa
out
inc
mov
subl
in
xchg
xlat
xchg
lods
ret
inc
mov
lret
cmp
movsl
leave
das
mov
pop
pop
gs
lds
popl
ja
sub
mov
mov
mov
mov
loop
ret
std
ret
sbb
cmp
aas
cli
push
xchg
dec
div
sub
dec
cmp
je
lahf
and
mov
pop
aas
xor
aam
scas
mov
jecxz
test
xor
lret
stos
fwait
ljmp
xor
das
aas
nop
repnz
cmp
sti
xor
pusha
cmp
test
dec
lods
scas
out
lods
roll
jge
xor
inc
mov
cmpb
inc
in
andl
mov
cmc
scas
outsl
dec
mov
ficoml
xor
arpl
jge
imul
mov
popa
cwtl
mov
lods
mov
neg
test
adc
pop
push
sub
outsl
shlb
mov
xlat
jae
clc
call
ljmp
ja
faddl
lock
add
cmp
push
sbb
imul
mov
iret
pop
and
or
jno
lea
push
xchg
cmp
mov
jl
sub
sarb
cltd
inc
pop
jge
mov
cld
or
shl
das
aad
popa
mov
sub
mov
pusha
int
xor
cmp
jo
or
inc
popa
add
xchg
xchg
lods
loope
cwtl
cltd
pop
xor
and
sbb
xchg
in
and
into
mov
aad
push
aas
xor
aas
stos
dec
cmpsb
dec
movsb
orb
lock
rorb
ljmp
jb
xchg
insl
nop
daa
pop
sbb
add
daa
mov
test
xor
loope
fnstenv
mov
loope
or
cmp
out
cltd
loopne
push
fmull
out
xchg
dec
in
mov
mov
sub
sti
and
xchg
fwait
divb
jg
cs
push
xchg
aam
pushl
jbe
xor
push
pop
out
or
dec
icebp
cmpsb
jg
mov
or
shlb
mov
jbe
aam
pop
fmul
cmp
xchg
arpl
icebp
cmp
push
and
nop
or
mov
mov
in
pop
outsl
xchg
xchg
push
and
jp
ljmp
ljmp
das
imull
xchg
scas
mov
jno
mov
and
cld
mov
xorb
add
ret
lods
stos
testb
es
mov
je
xchg
loope
lea
subb
stc
decb
ljmp
xchg
sbb
outsb
dec
add
insb
ret
out
xor
test
mov
mov
sbb
mov
arpl
je
pop
push
add
xlat
fsubrl
mov
decl
inc
decb
or
and
mov
div
add
inc
sti
outsl
push
dec
jg
insb
sub
push
jg
and
mov
mov
popf
sub
push
std
movsb
mov
mov
mov
aas
sub
mov
jle
jbe
lcall
cs
xor
dec
insl
mov
test
push
adc
iret
jnp
aad
and
fwait
mov
inc
inc
mov
cmp
cmp
mov
scas
int
cs
into
cmp
stos
jno
jmp
or
pop
pop
fld
nop
or
cwtl
xor
dec
xchg
clc
stos
daa
jge
mov
dec
neg
adc
gs
push
xor
jo
cmp
mov
jg
jmp
lret
std
imul
std
inc
cmp
bound
sub
xor
jo
pop
lret
and
stos
mov
sub
jno
pop
stos
jae
pushf
leave
mov
out
or
push
pop
xchg
mov
in
xchg
lret
je
dec
xchg
test
aam
sub
int
add
outsl
inc
jno
movsl
popf
pop
jne
adcb
test
jo
outsb
mov
jle
int
mov
push
mov
cmc
xchg
lods
push
decb
test
aad
cmp
or
and
xchg
icebp
mov
call
aad
mulb
inc
shll
arpl
xchg
ret
sti
xor
lea
cmp
insb
mov
pop
fcmovb
gs
mov
ss
xchg
add
mov
pop
les
int3
pop
lahf
outsl
xor
cmp
or
into
lret
sub
sub
jnp
adc
xor
dec
push
cmp
or
xlat
test
push
out
aaa
ss
imul
pop
cwtl
je
ds
jno
movl
xor
in
pop
movsb
neg
popa
imul
jecxz
xchg
lods
out
pop
test
and
jno
jle
or
mov
rclb
icebp
xor
xchg
cs
loopne
mov
lahf
ret
push
mov
add
rorl
sub
mov
insl
mov
lret
dec
dec
push
fsubr
call
lcall
in
mov
lret
gs
lret
cmpsb
inc
std
dec
loope
push
sub
out
xchg
and
icebp
push
sbb
cmpsb
adc
repnz
inc
stc
aam
cltd
push
mov
scas
inc
pop
jg
stos
and
cld
adc
fsubrs
and
and
mov
stos
sub
jnp
test
lds
jnp
sbb
mov
or
push
pmuludq
add
mov
int3
jns
inc
rcrb
fistl
and
sbb
pop
nop
or
push
push
out
loopne
cmp
xchg
xor
cmp
mov
cmp
sahf
xchg
inc
ja
mov
aam
mov
jp
fcoml
fcoml
dec
jmp
loopne
push
andl
imul
and
sbb
sahf
pop
je
xchg
lods
popf
repnz
aaa
clc
mov
lret
mov
stc
mov
xchg
inc
das
stc
in
mov
push
aam
sahf
icebp
repnz
mov
xor
repnz
test
bndldx
addr16
ja
popa
lret
call
repnz
js
add
adc
pop
leave
adc
jb
cmp
mov
pop
dec
ficompl
xchg
xor
arpl
out
test
jmp
js
arpl
xchg
je
imul
lock
sub
add
xor
xchg
xchg
mov
lds
and
or
cmp
cmpsl
sub
mov
mov
mov
and
xor
adc
stos
xor
cltd
and
cmp
sbb
jbe
pop
and
or
adc
and
xchg
add
add
adcl
inc
jl
lods
cmp
adc
and
cmp
push
push
xchg
rcl
test
imulb
push
shr
pop
pop
lret
push
pop
cmp
sub
xchg
jnp
loopne
or
dec
adc
mov
pop
jp
sbb
mov
stc
enter
ljmp
sbb
adc
shrl
cmp
mov
scas
and
mov
jmp
jp
pop
orb
fldl
jmp
adc
scas
add
fcomps
sub
scas
lret
xlat
sub
xchg
repnz
mov
jmp
mov
cs
cs
pop
push
mov
arpl
add
mov
and
inc
cmpsb
hlt
rclb
scas
jge
sub
mov
loopne
dec
or
dec
in
popw
xchg
adc
push
jmp
std
push
nop
hlt
test
push
cs
mov
cmp
mov
pop
sbb
imul
bound
fincstp
push
shll
xlat
mov
call
mov
out
xchg
inc
mov
dec
inc
stos
pop
pop
lahf
xor
or
mov
insb
push
mov
shll
lods
sub
xor
icebp
pop
lea
and
pop
dec
push
lahf
and
shrl
push
testb
lods
or
pushf
cmp
push
mov
sbb
clc
gs
mov
xor
mov
inc
mov
fdivrl
jg
mov
movsb
sbb
ficoml
cmp
lcall
fs
mov
jp
mov
dec
pop
test
jecxz
loopne
jg
leave
jg
inc
mov
cmp
mov
lret
lret
dec
out
shrb
rol
outsb
xor
gs
mov
jnp
int
clc
add
sbb
xor
inc
scas
inc
in
fcomi
sti
dec
mov
pusha
dec
addr16
inc
je
cmpb
rcrl
mov
inc
ss
pop
xchg
call
int
mov
cmc
fmull
in
pop
out
aaa
fbld
xor
and
and
inc
cltd
xchg
scas
and
cli
sbb
lahf
mov
push
int3
sahf
add
mov
push
pop
xchg
test
mov
lahf
inc
jne
popf
xor
cld
cld
rolb
scas
fcmovne
dec
mov
jmp
pushf
lds
rolb
les
lock
xchg
mov
int
sar
outsl
xor
xchg
cs
or
mov
jb
push
inc
pop
jne
and
and
out
call
pusha
sti
jg
cmp
push
jl
jae
xchg
js
jbe
pop
cmc
xchg
cmp
push
in
mov
push
sarb
sbb
test
push
call
adc
xor
iret
sub
xchg
or
adc
or
jle
in
push
rolb
xchg
sbb
or
mov
faddl
mov
inc
rcll
xor
dec
adc
dec
jge
cwtl
or
popa
dec
xchg
pop
add
loopne
dec
push
std
mov
pop
popa
js
in
cmpsl
cmp
mov
outsl
je
jns
mov
push
mov
stos
rcrb
icebp
das
lcall
jg
mov
je
aas
or
push
mov
daa
adc
das
sahf
jl
jge
movsl
jo
add
out
cli
in
sbb
cmp
sub
jns
fsubs
pusha
ds
daa
movlps
and
int3
mov
sbb
iret
cs
pop
sahf
out
cmp
movsl
clc
jns
dec
pop
out
ret
and
jns
push
out
scas
in
jae
xor
fistl
mov
test
scas
sti
fwait
ret
sbb
push
sbbb
mov
out
push
pop
cs
aad
imul
pushf
sub
mov
imul
ds
cmp
dec
cli
mov
jbe
sub
mov
in
adc
dec
push
ja
or
xchg
stos
push
dec
mov
mov
stos
cld
negb
push
sub
fwait
mov
pop
int3
pop
cmpsb
dec
cmpsl
dec
dec
dec
inc
pavgb
mov
push
cmp
gs
or
fadd
inc
aaa
pop
xor
sub
call
xlat
push
rclb
xchg
pop
jp
dec
imul
sbb
push
add
pop
pushf
dec
aam
les
cmc
std
adc
mov
ds
jg
gs
mov
std
jp
xor
dec
outsb
pop
aas
jae
ljmp
lcall
dec
ljmp
insb
rcll
lods
addr16
fmull
dec
insl
xor
out
mov
jmp
push
ss
jecxz
jecxz
ds
mov
ret
pop
rolb
pushfw
dec
movsl
mov
pop
lea
shrb
xchg
push
jbe
adc
shlb
or
mov
in
std
add
ficompl
mov
test
fwait
lock
push
sbb
imul
inc
insl
mov
pop
jg
pusha
cmp
jnp
ret
inc
mov
xorb
xor
sbb
push
shr
xchg
pop
mov
dec
sbb
fcmovnbe
stos
pop
xchg
arpl
pushf
inc
sub
mov
mov
leave
subl
mul
es
inc
pop
or
push
push
mov
xor
cmp
dec
inc
cwtl
push
mov
inc
les
lea
and
lods
and
cmp
xchg
mov
cmp
fnstenv
outsb
mov
fistl
cmp
sub
or
mov
fdivr
shr
lret
dec
pop
clc
stos
int
add
in
cltd
dec
adc
cmpsb
mov
repz
cmp
loope
jecxz
sub
add
push
test
and
in
mov
lds
xchg
stc
test
mov
cmp
jnp
mov
push
dec
mov
push
lahf
leave
loopne
scas
mov
std
cltd
es
cmp
cmpsl
sbb
adc
aad
repnz
cmp
add
in
outsl
stos
stos
out
push
sbb
fisttpll
in
pop
iret
jle
je
test
cmp
out
outsl
xor
or
push
xchg
mov
nop
and
dec
push
scas
push
jp
push
jne
lock
pop
adc
mov
and
repz
xor
out
les
stc
clc
or
mov
xor
fs
outsl
popf
fldcw
and
popf
hlt
dec
fidivl
xchg
sbb
lea
fisubrl
js
sbb
lock
in
mov
outsb
out
adc
int3
mov
push
popa
out
fldt
loopne
sub
jl
jno
ja
int
sbb
xchg
xchg
jae
out
testb
stos
push
lret
pop
jl
aad
pop
hlt
mov
mov
testl
adc
int
mov
add
jns
ficomps
pop
mov
and
ss
lcall
push
push
aas
mov
push
movsl
sub
fadd
mov
mov
or
or
out
jne
mov
and
and
aas
cmp
fidivrs
sub
dec
lahf
sub
jp
adc
lret
jge
xchg
sahf
pop
popa
xor
fchs
or
xchg
mov
mov
addr16
dec
dec
inc
frndint
pop
push
outsl
and
dec
scas
cmpsb
les
mov
mov
adc
popf
dec
pop
pop
adc
pusha
sti
sub
out
sub
adcl
mov
or
in
aam
ror
mov
mov
push
mov
imul
sbb
xchg
jecxz
lods
sub
inc
addr16
mov
cli
in
push
jg
jnp
dec
jle
lret
xchg
push
aam
xor
lcall
cmp
adc
dec
push
jae
pop
orb
movsl
imul
cmp
lahf
pushf
movsb
cld
sbb
fisttpl
aam
mov
outsb
and
dec
or
cs
int
lret
ficoml
cmp
pop
mov
xchg
mov
clc
lods
je
push
ret
mov
adc
inc
jle
aam
xchg
jae
inc
shl
and
cs
jecxz
fsubrl
in
fisubl
out
les
sub
addr16
dec
cld
sbb
xchg
add
xor
in
lods
mov
cwtl
inc
cld
inc
test
scas
in
ds
dec
loopne
fcmovbe
adc
enter
mov
test
or
add
in
mov
fildll
inc
xor
push
dec
or
in
jbe
mov
adc
pop
repz
mov
seto
frstpm(287
sbb
xchg
cmp
ds
shrl
push
cmpb
hlt
inc
nop
push
and
jg
insb
out
sbb
loopne
sbb
out
push
fcmovbe
mov
pusha
xchg
or
cld
lahf
or
stos
lods
shlb
imul
and
and
cmp
sub
xor
mov
rorl
fsubs
icebp
or
mov
and
inc
xchg
test
sub
test
xchg
pop
loopne
in
test
xchg
inc
and
test
and
aaa
testl
in
mov
pop
jns
xor
xchg
sbb
mov
jne
ret
js
cli
sbb
outsl
outsl
jne
jns
mov
es
fcomip
loope
jle
mov
sub
lcall
xchg
idivl
jbe
mov
and
sub
adc
or
pop
add
jbe
divw
xchg
aam
inc
xchg
insl
out
shrl
cmp
fisubrs
hlt
pushf
adc
gs
jmp
xchg
dec
mov
aam
mov
movb
mov
sub
adc
fcoml
mov
cmp
insl
enter
ds
movsb
mov
push
pop
div
imul
hlt
xlat
mov
out
cli
dec
rcll
mov
rdtsc
fdiv
mov
iret
pop
adc
xchg
mov
adc
js
sub
ja
cli
pop
fcmovnu
int
mov
sbbl
xchg
mov
xlat
clc
xchg
imul
lods
inc
push
enter
add
lret
inc
lds
fstpl
push
fnstcw
decl
les
mov
add
ss
and
or
sub
and
outsl
aaa
into
sbb
adc
or
xchg
sub
paddq
pop
insb
xor
rcl
arpl
cmpsl
jl
push
mov
add
out
push
push
rclb
mov
cmp
mov
mov
or
cli
mov
dec
fstpl
jg
aam
xchg
jnp
jl
push
es
mov
or
mov
out
and
jae
imul
sbb
and
xor
or
fldl
cs
inc
sbb
and
jp
aas
pop
incb
xchg
aas
stc
mov
cwtl
pop
loopne
add
dec
pop
push
lock
cli
sub
mov
push
jge
cmpsl
lock
clc
cmp
or
mov
lock
lret
mov
push
add
in
test
mov
or
jp
jnp
int
push
and
test
add
in
jg
inc
pop
daa
in
jmp
cmp
clc
rclb
fsubrs
int
imul
mov
movsl
mov
cmp
movsl
loop
cmp
insb
add
out
test
push
aam
add
xor
std
mov
test
and
cmp
test
int3
addb
sub
int
pop
jmp
lcall
pop
bound
mov
xchg
sbb
jae
lock
scas
push
push
xchg
pusha
sbb
mov
push
push
mov
movsl
mov
xor
stos
ja
sbb
jno
pop
loope
cmp
cmp
lahf
sahf
inc
int
mov
add
xchg
iret
std
data16
jnp
xor
test
popa
loope
mov
pusha
arpl
inc
divb
sbb
xchg
push
pop
dec
mov
leave
push
push
lock
and
clc
inc
test
outsl
mov
push
and
mov
sbb
inc
or
pop
add
sti
sub
jnp
and
jbe
mov
or
leave
add
adc
inc
jecxz
pop
dec
push
repz
jmp
call
fsts
dec
and
int3
cmpsb
cmc
pmaxsw
fldpi
xchg
jg
dec
ss
repz
pop
mull
outsl
add
dec
shlb
rorl
das
rcll
lret
push
test
inc
fists
dec
mov
scas
es
hlt
fiaddl
push
pop
jns
aad
imul
stos
add
adc
sub
int
ljmp
mov
ret
test
imul
or
adc
cltd
sbb
bound
lahf
jmp
stos
mov
jne
and
xlat
pop
mov
sti
push
out
mov
xchg
push
adc
lods
adc
arpl
repnz
hlt
mov
rcll
scas
ljmp
repnz
div
add
ret
jo
cmp
pop
loope
mov
mov
mov
mov
sub
pop
in
loope
sub
es
adc
jae
inc
xor
popa
mov
adc
and
cltd
add
scas
push
xor
test
pop
adc
adc
ja
add
mov
adc
leave
jno
sbb
push
into
sbb
test
xor
jg
lahf
cmp
cltd
pop
push
ss
fsts
mov
add
xchg
add
push
fdivrs
dec
mov
shll
inc
and
out
fcom
sub
test
loopne
into
out
pop
mov
inc
inc
jns
cmp
fsubl
sbb
mov
sub
jmp
add
cld
cmp
stc
testb
into
lds
addr16
das
pop
cmpsb
fdivs
xchg
or
xor
pop
in
mov
xchg
mov
or
cmp
test
dec
sbb
les
mov
imulb
inc
mov
nop
sbb
adc
imul
xchg
mov
arpl
lods
xchg
xlat
test
mov
mov
xchg
pop
roll
xchg
idiv
push
push
sti
out
aam
xchg
sub
xor
mov
and
cmp
push
dec
inc
lods
dec
and
sub
cmp
xlat
cmp
fldl
aas
rcr
test
pop
xchg
test
xor
lahf
xchg
lock
inc
filds
fsts
add
xchg
push
adc
mov
jns
pop
addl
int3
dec
mov
xchg
insb
clc
insb
mov
test
or
iret
cmp
mov
inc
arpl
xchg
dec
xor
insb
gs
jo
in
movsl
sti
pop
sbb
test
pop
push
pop
sti
xchg
sbb
sub
test
lcall
scas
mov
xchg
lahf
neg
test
xor
add
mov
ret
push
xchg
dec
xlat
add
repz
ss
call
jle
ljmp
xlat
fwait
out
into
mov
fwait
push
gs
inc
shll
mov
orb
into
push
test
xchg
jnp
sbb
ret
inc
int
mov
fldcw
cmpb
jns
push
push
push
enter
out
roll
pop
stos
scas
or
lock
dec
sub
xor
test
jg
or
sahf
add
pop
jmp
lahf
dec
test
mov
and
aam
imul
dec
cmpb
outsb
and
loopne
jp
dec
pop
fwait
scas
dec
andb
jnp
fcompl
lea
cs
int
repz
imul
push
jg
mov
push
pop
stos
sbb
out
sbb
jecxz
std
insl
jecxz
cmp
and
bound
loopne
mov
dec
and
mov
dec
sub
and
std
lahf
js
cmp
rol
test
push
loopne
ffreep
xor
repnz
pop
lahf
scas
in
loopne
sti
dec
std
or
cmc
inc
arpl
jmp
inc
xchg
cs
lahf
vaddpd
add
or
mov
and
arpl
sub
sti
adc
and
fs
insb
adcb
shll
ljmp
cld
lret
in
stc
mov
pop
lds
xchg
mov
cmp
inc
cltd
imul
enter
stos
sub
pop
sbb
into
add
cmpsl
mov
lock
pop
std
dec
lock
dec
subl
xor
pop
dec
sbbb
insb
inc
cmpsb
push
sti
mov
xor
pop
js
insb
jnp
loop
inc
in
xchg
sbb
xor
cmp
or
hlt
in
jne
inc
xchg
jle
jg
mov
sub
inc
push
test
jne
jecxz
sbb
lea
imul
lods
icebp
call
nop
loop
mov
push
mov
daa
push
fwait
stc
call
sbb
sahf
push
jl
js
push
repz
js
enter
insb
xor
jne
movsb
and
xchg
popa
mov
adc
mov
inc
or
sbb
fisubs
dec
xor
mov
scas
push
xchg
and
orl
and
sub
mov
inc
in
call
xor
fistpll
icebp
hlt
xor
adc
scas
push
dec
jecxz
jb
stc
sarl
stos
add
iret
into
dec
add
movsb
lods
mov
popa
rorb
jp
mov
add
push
sub
add
xor
decl
popa
sbb
jg
or
sub
aas
out
out
test
fildll
sbb
push
das
mov
cmpb
rcll
sbb
scas
adcl
iret
outsb
sub
cwtl
xor
cmp
dec
fimuls
hlt
sbb
lahf
subb
mov
out
jl
lock
inc
repz
outsb
xchg
clc
iret
xchg
mov
pop
cli
xor
sarb
inc
cmp
mov
jne
out
sarb
sbb
sub
mov
mov
jae
cmp
in
fstl
push
dec
addr16
sarb
inc
mov
push
jl
fistpll
xor
sub
mov
cs
mov
fwait
sti
rorl
lcall
hlt
ja
jg
jnp
popa
js
les
cltd
leave
cwtl
js
mov
inc
pop
movsb
cmpl
rcrb
push
stos
popf
pop
mov
add
mov
clc
xchg
cmpb
negb
stos
mov
pushl
mov
push
sti
pop
mov
push
and
sar
popa
ljmp
mov
push
test
push
aas
mov
test
mov
xor
out
pop
ss
jo
lret
pop
cmp
nop
sbb
jge
mov
adc
nop
jne
cmp
push
and
jno
or
je
push
jecxz
pop
add
cmp
mov
hlt
xchg
and
xchg
fiaddl
lahf
ja
aad
mov
pop
rcrb
and
or
imul
subl
xchg
fs
add
mov
mov
xchg
sbb
aaa
xor
decl
lret
mov
jnp
lock
data16
nop
lahf
stc
sub
cmp
shll
inc
jp
jg
cld
inc
and
lods
pop
stos
dec
adc
xor
add
dec
repz
mov
jnp
xchg
bound
fiadds
shrl
xchg
fadds
roll
pop
imul
test
sbb
and
mov
dec
in
pop
push
xor
inc
sub
fsubr
ret
cld
test
arpl
push
stc
pop
cmp
mov
mov
add
jg
pop
test
gs
cmp
int
lret
mov
mov
movsl
rcll
mov
inc
inc
in
mov
pop
and
jae
sbb
pop
jae
pop
mov
jns
and
shrl
testl
xor
mov
inc
data16
xchg
xor
fldenv
cwtl
sub
mov
sbb
lods
xchg
negl
push
pop
and
push
push
cli
adc
out
jae
mov
mov
xor
imul
xchg
mov
xchg
leave
stos
mov
or
movsb
fimuls
mov
and
negl
fcompl
cld
popa
outsb
push
mov
inc
cmp
sub
cwtl
jmp
mov
pusha
in
jle
cmc
gs
mov
aad
pop
xor
inc
mov
stc
sub
cld
jmp
adc
testb
inc
push
sti
test
mov
out
inc
movsl
imul
push
in
pusha
sub
and
fidivrs
dec
mov
enter
and
jge
mov
popa
push
and
sub
gs
sbb
sbb
adc
mov
ret
sbb
cli
rclb
std
mov
movsl
sbb
pop
push
popf
xchg
test
adc
call
mov
movsb
inc
jb
dec
pop
xor
dec
or
pop
add
dec
js
or
mov
jmp
pop
mov
jne
out
sub
es
test
mov
cli
jnp
outsb
xor
stos
adc
jge
mov
ds
add
cmp
loope
jp
sbb
lock
push
jg
pop
sbb
mov
lea
clc
addr16
lcall
inc
dec
nop
jg
jb
in
pop
iret
jbe
out
subl
mov
push
pop
sti
mov
out
mov
lods
xchg
bound
ficoml
loopne
sbb
popa
mov
daa
hlt
cld
addl
mov
cld
xchg
mov
inc
sub
sbb
add
test
jg
pop
xchg
rolb
ret
dec
add
mov
sahf
xlat
roll
push
stos
adc
into
lahf
adc
mov
nop
pop
mov
add
fs
xabort
int
popa
pop
lahf
lock
cmp
insl
clc
mov
mov
mov
mov
dec
push
cli
mov
mov
push
pop
mov
ret
adc
dec
bound
imul
leave
mov
scas
jb
sub
into
add
inc
movsl
stos
arpl
inc
lcall
xchg
shlb
sub
lcall
or
xchg
clc
add
fildll
jp
mov
push
pop
xor
mov
rcrl
lods
dec
sahf
int
imul
sub
mov
leave
pushl
sahf
dec
or
xchg
std
mov
lret
cmp
xor
cmp
push
fninit
enter
ret
lods
xchg
mov
cld
sti
stos
push
rclb
aad
dec
mov
scas
cltd
push
insl
out
das
cmc
jae
mov
repnz
jnp
cmpsb
lret
ja
ficomps
cmpsb
xchg
lret
xor
mov
or
jne
pop
cld
pushf
jecxz
pop
push
iret
rcll
and
shl
cmpl
ja
jne
inc
mov
or
mov
ja
clc
mov
iret
jb
insl
adc
push
push
cmc
pushl
add
mov
hlt
es
ret
movsb
shll
sbb
push
sti
xchg
xor
fwait
sti
dec
test
insb
inc
movsb
int
call
sub
in
test
sub
jno
hlt
inc
pop
stc
or
insb
mov
push
xor
enter
sbb
cmp
ret
jl
clc
lock
pop
or
test
xchg
lret
cmp
scas
icebp
xchg
test
xor
inc
push
jbe
insl
addr16
testl
outsl
pop
mov
mov
xor
js
mov
shlb
mov
sahf
loope
jb
aas
lcall
cmpsb
and
sub
testb
jbe
shrl
clc
imul
sub
shlb
pop
aaa
adc
dec
jb
mov
ljmp
cmp
mov
ss
add
movsb
out
in
mov
mov
mov
in
mov
pop
loope
and
mov
xchg
mov
int
rol
cld
out
aam
add
mov
unpckhps
aas
add
xchg
push
mov
adc
pop
es
cmp
insl
adc
or
inc
inc
dec
clflush
mov
xchg
aas
imul
mov
mov
jb
lahf
lods
rorb
mov
cmc
jbe
outsl
xchg
adc
gs
and
mov
cwtl
sub
aad
jecxz
mov
imul
ret
test
adc
xor
scas
ret
pop
and
xor
xorb
mov
push
dec
dec
popa
mov
movsl
ss
scas
xchg
fcoms
repz
imul
sahf
ret
iret
inc
hlt
aaa
push
xchg
jmp
dec
test
in
cwtl
gs
jge
ficoml
or
mov
fiaddl
fwait
add
jle
test
xor
xchg
imul
mov
cmp
mov
inc
and
and
xchg
and
mov
or
in
aam
dec
leave
inc
orb
mov
aam
lods
pop
sete
lcall
cli
js
sahf
pop
bound
push
mov
mov
cwtl
enter
ljmp
inc
addr16
fcmovnb
aad
pushf
loope
cwtl
daa
jle
adc
dec
shll
in
push
mov
add
adc
loope
addr16
aam
inc
in
in
xchg
mov
or
lret
and
inc
outsb
and
xchg
add
in
sub
stc
fisttpll
mov
andl
sahf
or
inc
les
mov
add
sbb
pop
cmp
inc
lock
scas
jnp
ud1
pop
and
xchg
out
sbb
aam
fs
sub
in
aam
pop
adcb
scas
xchg
gs
push
dec
sub
cmp
jne
in
and
inc
mov
push
jle
outsb
fldcw
dec
iret
pusha
sub
push
pop
dec
xchg
xlat
cmp
mov
int3
push
adc
je
inc
xor
sbb
testb
movsl
daa
cmpsb
rcll
push
rolb
std
mov
mov
jg
mov
inc
shrb
leave
pop
insl
pop
lds
addr16
leave
ret
scas
adc
pop
xchg
and
sbb
ljmp
mov
pop
shr
jb
or
jae
sub
adc
filds
lods
aaa
mov
xor
testb
jb
out
enter
mov
ljmp
sahf
mov
mov
pop
imul
sub
repz
sbb
ljmp
fisubs
pop
jb
and
xchg
inc
notb
jae
iret
aam
xlat
mulb
xlat
sub
adc
fcoml
mov
int3
inc
push
rorb
mov
add
or
clc
cld
dec
out
adc
jnp
sbb
push
cs
fstl
mov
push
push
cmp
mov
and
mov
out
test
lahf
cmc
inc
xchg
inc
insl
fdivrp
les
xchg
pop
test
lcall
loope
mov
cmpsl
inc
add
enter
sahf
inc
scas
cmpsb
xor
cli
sub
data16
jge
mov
jbe
mov
and
push
aas
inc
fimull
popa
mov
in
pop
adc
in
loope
cmp
cmc
fs
mov
aam
or
lock
lret
aaa
adc
inc
imul
jmp
not
jne
pop
add
in
rcrb
mov
push
sbb
and
cmp
push
gs
std
addr16
lods
cld
mov
js
add
aam
rol
push
jmp
jne
push
xchg
pop
jp
or
xchg
xchg
mov
xchg
jns
pop
push
dec
push
cmpsb
test
enter
mov
lret
pop
xor
xchg
jnp
call
aam
outsb
cmp
cs
jmp
cmp
rorb
jmp
jno
dec
jl
add
fisubrl
lds
jp
cs
lock
rolb
add
mov
xor
lret
jo
mov
or
inc
cmp
out
dec
push
sub
or
mov
cli
ret
fisttps
dec
out
jno
cmpsb
push
repnz
adc
push
jmp
imul
push
pop
jg
adc
clc
movsl
test
pop
pop
adc
fstl
xlat
mov
mov
outsl
nop
std
test
push
pusha
pop
or
clc
jns
lahf
and
imul
out
or
stc
out
pop
dec
jo
fs
dec
xor
dec
shrl
outsl
push
dec
fbld
fs
and
adc
out
cmp
imul
push
cmpsl
mov
adc
loopne
mov
xchg
nop
jmp
pusha
xchg
popa
push
push
xor
leave
imul
pop
jmp
ja
roll
xor
stos
jne
pop
fcmove
and
pop
mov
sbbb
add
in
das
and
and
incb
shll
cs
inc
inc
pop
insb
or
mov
xchg
sbb
sub
loopne
pop
push
mov
fmull
fists
jge
pop
cmpsl
push
xor
sbb
iret
sub
and
repnz
js
jnp
test
xlat
insl
sahf
sub
movsl
jo
sbb
stos
and
push
push
aas
xchg
mov
pop
cmp
jge
fsubs
scas
lret
jmp
cwtl
adc
in
push
sbb
int
lds
mov
xchg
and
outsl
xchg
lea
mov
out
cmp
xchg
mov
push
xchg
test
es
push
dec
xchg
inc
mov
jp
lahf
aas
jbe
cli
mov
btc
pop
pop
jae
add
cld
int
push
nop
sbb
lcall
ja
call
ret
addr16
push
sub
pop
shll
std
cmp
xor
repnz
push
mov
or
popf
ds
push
out
testl
xchg
adc
xor
hlt
adc
repz
arpl
xchg
lret
push
js
das
daa
cld
push
fidivrl
movsb
jmp
mov
lea
cmpsb
rcr
ds
icebp
imul
jg
cmp
jne
push
out
jbe
in
stos
adcb
sbb
loop
cmp
cs
repnz
arpl
jb
dec
xor
cmp
fmul
test
mov
das
repz
loopne
cmpsl
sbb
push
pushf
arpl
popfw
adc
add
jns
ret
or
ficoml
ds
call
xor
inc
mov
xor
pop
ds
dec
adc
leave
rcr
cwtl
arpl
pushf
faddp
pushf
mov
mov
enter
or
dec
and
icebp
pusha
sub
aaa
push
sub
dec
jmp
jecxz
xor
sbb
das
orb
mov
mov
sbb
movsb
xchg
scas
pop
sbb
in
imul
mov
cmp
pop
push
repnz
inc
add
dec
xor
mov
adc
aam
pop
out
subb
push
notl
inc
mov
push
in
sti
mov
mov
cmc
jmp
pop
or
mov
insb
fisttpl
push
mov
imul
leave
inc
mov
stc
push
leave
arpl
fmul
pop
icebp
sbb
outsl
mov
cmp
add
and
or
and
jne
ret
add
in
fs
adc
xchg
push
pop
xchg
cmpsb
shrb
inc
fldcw
add
cmp
sahf
aam
test
insb
call
sti
xchg
sub
push
sti
aaa
cmc
test
pop
loope
bnd
xchg
rcrb
or
movsl
dec
flds
sub
movsb
jmp
pop
mov
ret
inc
in
dec
adc
push
mov
das
xor
loop
dec
mov
sub
mov
scas
dec
aaa
jno
cltd
jno
ss
sub
outsl
loopne
les
hlt
mov
push
lahf
xor
cmp
cmpsl
or
jg
pop
nop
pop
arpl
push
aad
roll
or
jo
stos
xor
or
jns
movsb
pmaxub
imul
fidivrl
shr
fwait
sti
xchg
in
outsb
pop
enter
add
mov
xchg
push
push
in
jb
in
xor
jge
incl
adcb
sbb
roll
add
cmp
jne
jl
push
mov
scas
jae
and
in
xor
mov
mov
std
inc
push
adc
ljmp
es
fs
ss
mov
add
mov
mov
subb
mov
push
lahf
mov
fisubl
call
cltd
or
pop
ljmp
rclb
push
cs
aad
js
or
dec
shrb
std
loope
in
fs
imul
dec
sbb
and
mov
gs
xchg
xor
jbe
sub
movsb
jmp
and
mov
stc
pop
jecxz
push
cmc
mov
aam
xor
out
push
xor
data16
out
pop
aad
adc
and
or
fadds
lock
mov
xchg
lock
or
dec
mov
outsl
rorl
add
gs
sbb
mov
sbb
stos
test
mov
pop
loope
mov
imul
ljmp
jnp
xchg
arpl
or
out
sbb
loope
push
fmuls
cmc
and
dec
xchg
jle
sbb
enter
ret
cmpsl
int
bound
or
cmp
pop
scas
cmp
jne
push
adc
js
out
push
sbb
aam
jns
stc
hlt
cmp
add
sub
out
xor
or
test
in
leave
sti
or
movsl
imul
and
jns
adc
xchg
mov
outsl
fidivl
mov
sub
cmpsl
aaa
cmp
in
or
and
fistl
jmp
ja
cld
add
lret
pop
cmp
dec
mov
inc
mov
mov
sbb
dec
mov
pushf
cmpsl
inc
out
pop
inc
lret
push
push
mov
xor
mov
orl
xor
insl
pushf
xchg
mov
int
inc
xor
and
insb
mov
dec
fwait
loopne
data16
push
int
gs
insb
rolb
and
movsb
sbb
bnd
inc
mov
out
mov
mov
push
dec
test
stos
xchg
flds
aad
fsubrl
test
xchg
std
add
mov
and
xchg
mov
mov
jg
fadd
cld
adc
js
cmp
lret
push
pop
addr16
inc
jb
lcall
xor
sub
jne
cltd
ret
repnz
adcb
push
aad
int
lahf
rcrl
lea
rorl
inc
testl
movsb
and
aad
add
lret
xor
sbb
pop
jb
jne
dec
into
out
fwait
js
mov
mov
push
sbb
addr16
daa
test
data16
lods
pop
sti
and
outsl
jmp
jno
add
lea
sub
mov
sub
testb
mov
sbb
fdivs
adc
in
loope
push
add
in
push
xchg
mov
sub
jecxz
call
cmp
scas
xchg
add
fdivrl
sbb
les
lods
ljmp
inc
not
lods
div
pop
mov
std
test
mov
push
outsl
dec
mov
lahf
sbb
adc
adc
dec
push
sbb
ror
mov
pop
jns
test
mov
jmp
mov
push
sahf
outsb
shl
xor
sti
outsl
cli
mov
imul
sub
pop
jg
sbb
sbb
cmp
arpl
rcr
adc
xor
mov
push
dec
adc
mov
sub
pop
pxor
push
or
jae
inc
dec
sub
lret
xchg
adc
mov
inc
pop
cmp
rcr
imul
movsb
mov
iret
ret
inc
dec
scas
mov
mov
lahf
or
lods
push
and
dec
cmp
xor
popf
xorb
cmp
mov
les
sub
mov
fisttpll
gs
or
add
aaa
cmc
stc
add
nop
cmp
movb
add
stos
jb
lea
loopne
popa
jl
rorb
or
fadds
lods
and
stos
and
mov
cmpsl
cwtl
mov
icebp
fiaddl
or
ret
xor
pop
xchg
add
mov
jmp
mov
push
out
test
scas
xchg
mov
or
cmp
pop
cmp
cltd
sbb
out
mov
xchg
movsl
pop
mov
fsubrs
add
test
int3
xlat
ds
cmp
sub
or
fldl
scas
in
stc
adc
mov
aas
repz
xlat
jbe
push
inc
sbb
xor
divb
mov
ret
sub
inc
cmc
lods
mov
adc
fdivrl
fstpt
pushf
dec
dec
fxch
mov
push
jnp
int3
sub
jle
cltd
push
xor
mov
mov
cmc
shrb
jmp
lods
mov
sub
mov
xor
mov
insb
nop
mov
mov
idivb
sbb
and
into
test
pushf
jns
arpl
add
outsl
pop
cmp
xor
cld
loopne
popa
xlat
ds
ds
mov
scas
pop
repz
dec
push
dec
mov
leave
mov
jmp
cmpsl
repz
repz
test
adc
jne
xchg
mov
mov
insl
in
add
push
ja
mov
jnp
mov
inc
lods
cmp
rclb
cmpsb
lock
dec
or
fcom
sbb
pop
cli
jle
lahf
pop
scas
sbb
push
clc
imul
faddl
ja
pushf
sbb
enter
sbb
roll
add
rcll
xchg
sti
mov
jae
pop
sub
int
nop
aad
hlt
mov
dec
jae
imul
mov
mov
dec
xor
les
out
jp
stos
mov
sub
jl
mov
xchg
cs
pop
sar
outsb
xor
cmp
sarb
inc
jae
push
push
cmp
icebp
bound
xchg
pop
popa
sub
lea
sbb
pusha
fucom
cmp
xchg
xorl
repnz
inc
rol
push
jns
sbb
inc
push
insb
dec
add
cmpsb
sarl
push
cmp
cli
imul
incl
add
bound
mov
lret
or
xchg
push
and
pop
sub
sub
jbe
adc
cmpsb
dec
in
mov
lret
mul
jl
loopne
xchg
adc
lds
cmpsl
pop
cs
jbe
out
push
cmp
and
test
out
mov
adc
cmovne
jbe
mov
and
and
add
lock
or
lods
jns
repz
push
aad
xchg
ds
mov
cmp
ret
out
clc
push
rorb
and
cmp
cmp
dec
inc
cmp
jmp
imul
adc
mov
xor
out
add
cmp
jno
jl
sub
testb
stos
aam
stc
sbb
cli
in
fcompl
mov
jmp
rolb
jge
push
in
mov
js
ret
dec
push
fcoml
inc
sahf
mov
jmp
cltd
loopne
xchg
sahf
sub
in
or
mov
in
cmp
lods
add
fiaddl
adc
enter
rclb
pop
pop
rclb
xchg
aam
jnp
and
xlat
inc
jae
fiaddl
mov
pop
push
mov
loop
mov
jne
fistpl
scas
sahf
xchg
pop
or
dec
sbb
mov
pusha
and
test
test
push
pop
subb
mov
push
inc
rolb
das
cmp
jb
push
push
cmp
jle
out
mov
push
mov
imul
inc
aas
jmp
inc
push
mov
or
or
in
dec
xchg
push
sarb
frstpm(287
pop
cmp
popf
xchg
push
in
imull
xchg
add
fsts
outsb
outsb
in
into
push
or
fwait
cmp
lahf
push
cltd
sbb
or
popf
adc
lods
mov
cmpsb
jb
aam
jnp
cs
xchg
das
mov
add
std
and
outsb
and
dec
js
and
test
mov
inc
negb
iret
mov
imul
sbb
push
mov
cwtl
mov
out
cmc
jbe
lods
leave
std
lea
cmp
cwtl
pop
sub
cmpsl
fs
mov
push
cmp
cmp
insb
fwait
mov
xchg
nop
pop
xchg
cli
jo
mov
lods
mov
loop
inc
shrb
and
lret
cmp
pusha
fnstsw
popf
or
add
lret
icebp
shrl
mov
inc
add
adc
xchg
movsl
cmpsb
call
rcrb
cld
jae,pt
cmpps
enter
ret
ficoms
call
cwtl
shl
rep
clc
xlat
lock
cmp
adc
push
repz
test
dec
ficompl
iret
xchg
push
pop
popa
mov
jbe
pop
int3
stc
in
bound
mov
dec
pop
rorb
into
mov
imul
jo
push
ja
cli
es
clc
movsb
sub
cmpb
loope
je
mov
add
push
mov
jne
into
adcb
jl
pusha
test
sub
push
stos
sub
push
dec
into
cmp
cli
cmpsl
jnp
dec
out
call
stos
push
iret
pushl
enter
stos
loopne
lods
ss
lcall
xchg
mov
and
sub
je
add
sbb
inc
pop
inc
idiv
mov
and
pop
inc
or
stos
xor
and
push
xor
mov
push
sarb
xorl
dec
add
mov
jmp
pop
push
add
xor
push
adc
pop
mulb
call
stos
and
inc
sub
decl
fmull
insb
test
les
shlb
xchg
mov
sub
nop
inc
repz
cld
xlat
inc
imul
fldl
arpl
inc
mov
cmp
test
lds
repnz
std
cmpsl
xchg
cmp
mov
jno
scas
and
pop
insb
aam
jp
cld
inc
out
cmp
inc
aad
xor
push
mov
repz
push
push
cmp
jecxz
pushaw
push
idivl
push
adc
ljmp
pop
mov
sub
cmpsl
pop
repnz
das
xor
sbb
mov
xchg
push
nop
lods
outsl
repz
cmpsl
jecxz
pusha
pop
aaa
icebp
cmpsb
iret
inc
dec
add
pushf
aad
or
aad
xor
out
mov
or
pusha
mov
xchg
ss
adc
sub
mov
ss
push
cld
sets
in
add
or
xor
mov
and
push
xor
pop
ljmp
rcrl
outsl
in
push
mov
in
inc
andb
push
jno
or
jne
jo
shl
xor
push
loop
mov
cli
mov
mov
pop
and
popa
call
mov
push
dec
test
daa
inc
sub
fidivrs
out
enter
daa
pop
rcl
xor
iret
pop
push
out
add
inc
jo
aad
mov
sub
inc
outsl
dec
adc
shrl
rcrl
and
roll
cmc
dec
cmpsb
sub
ret
fcmovbe
mov
insl
mov
add
mov
rcll
lods
clc
scas
lds
or
pop
fisttps
gs
sbb
sub
xchg
das
lahf
pop
fiadds
dec
into
jnp
add
xchg
adc
sbb
sub
xor
or
push
scas
lods
and
mov
xor
mov
push
and
xchg
je
arpl
inc
or
mov
inc
jno
sbb
cmc
stos
test
xchg
inc
push
out
orl
xor
filds
fiaddl
cltd
std
sub
inc
jl
ljmp
pusha
nop
sub
jo
loope
mov
fidivrl
gs
cmp
aad
mov
xchg
dec
daa
in
push
stc
test
sub
sbbb
dec
lahf
xor
lret
sub
fucom
sahf
or
jbe
cmp
test
sbb
lret
sbb
cltd
pushf
sbb
mov
inc
cmp
push
xor
sahf
outsl
fnstenv
cmpb
out
std
add
cmpsb
mov
out
stos
lret
mov
ja
jp
adc
int3
xor
pop
iret
mov
adc
cwtl
mov
cmp
repnz
and
ljmp
dec
stc
aad
scas
jbe
ja
mov
cmp
ljmp
rorl
pop
leave
cmp
mov
add
shlb
cwtl
cmp
mov
jae
out
pop
cmp
fs
mov
pop
fwait
jp
sub
mov
adc
fcompl
cli
fldcw
es
insb
mov
xor
dec
aam
xchg
dec
push
negl
jb
xor
inc
xchg
mov
into
adc
sub
cmpsl
pusha
lcall
mov
ljmp
pop
adc
sub
pop
jbe
insl
outsb
inc
adc
cltd
std
add
jae
test
jno
pop
aaa
jmp
aad
add
xchg
push
incb
pop
jmp
cmp
xor
pushf
ljmp
or
jb
sub
cld
cwtl
mov
sbb
pusha
popa
sub
pop
add
sub
mov
jg
repz
sub
fcmovne
data16
aad
nop
push
repz
xor
pop
adc
pop
xchg
mov
push
push
mov
mov
pop
das
test
or
sub
mov
xor
sbb
jns
mov
jp
dec
jne
or
mov
cwtl
cmp
enter
push
das
mov
jle
into
popf
testb
and
lds
sbb
fwait
or
sarb
sbb
leave
dec
inc
sahf
sahf
fistps
ds
mulb
je
stc
dec
mov
mov
mov
mov
loopne
leave
mov
cmp
mov
das
arpl
dec
sub
add
test
jmp
jmp
mov
out
sbb
jge
mov
or
mov
add
clc
nop
jecxz
cmp
jp
lods
out
stc
aam
arpl
jmp
or
mov
sub
jo
add
lods
and
mov
push
inc
ficomps
and
sub
cli
stos
jne
enter
cmpb
cmp
jl
jnp
bound
clc
sarl
mov
cmp
push
push
xchg
add
xor
jmp
ja
aad
inc
mov
pop
imul
cli
roll
cwtl
push
sub
divl
inc
pop
mov
movsb
movsb
mov
sub
lds
loopne
arpl
in
dec
scas
push
sbb
ja
negb
jb
fisttpl
mov
push
dec
and
jno
dec
sbb
dec
sub
es
inc
pop
jbe
out
sub
xchg
dec
insl
jmp
imul
pop
mov
loop
jp
or
inc
jg
ffreep
xor
push
addb
xchg
idivb
lahf
and
jnp
push
sub
fnstcw
mov
sbb
mov
mov
jmp
fists
dec
push
mov
shlb
jmp
sar
cmpsb
jmp
dec
push
mov
out
dec
pop
paddd
fsubs
xchg
mov
jmp
xchg
bound
sbb
das
cmp
sub
fldcw
imull
push
cld
inc
add
scas
cli
sbb
clc
das
dec
dec
jnp
imul
xlat
in
shll
cld
push
iret
movsl
sbb
mov
gs
jmp
lret
aad
scas
rcl
jle
shrl
jge
inc
dec
addb
mov
sbb
mov
sub
pop
push
in
and
mov
adc
inc
cmpsl
jne
pusha
xor
push
dec
xchg
jmp
jo
jno
and
rcrb
mov
mov
mov
lock
out
push
push
out
jl
addr16
out
sbb
add
les
bts
sub
mov
ret
xlat
mov
pushf
in
test
push
sti
ss
sarl
dec
lock
mov
and
pop
out
add
outsb
movsl
stos
sahf
fiaddl
jl
movsb
js
call
cs
ja
sub
fdivrs
inc
jno
jne
push
cmc
xorb
test
jl
popf
fwait
negb
stc
in
jecxz
cltd
notl
cli
nop
scas
sbb
inc
rcll
xor
ret
nop
push
sub
arpl
pop
enter
nop
addl
add
cmp
jne
xchg
and
pop
jmp
pop
or
mov
sub
cmpsb
out
add
jecxz
insl
in
test
movsl
jo
dec
push
call
sub
inc
lcall
push
dec
push
pop
clc
dec
test
js
lret
bound
cmp
jae
dec
rorl
icebp
push
insl
jecxz
pushf
cmc
lea
iret
ret
mov
mov
ret
jge
fwait
notl
ljmp
and
pop
mov
scas
fisubrl
and
mov
dec
push
mov
fsubrs
cmpsl
jnp
bnd
sub
inc
and
dec
out
jle
push
scas
inc
ds
inc
in
jmp
shl
adc
push
cmp
xchg
adc
data16
pop
sbb
test
inc
test
lods
inc
orb
or
and
pop
adc
sbb
mov
xlat
push
hlt
aas
xchg
xor
sahf
pop
adc
push
repnz
in
ss
mov
jb
push
loopne
mov
sbb
push
mov
outsb
xchg
inc
sbb
inc
in
jge
xor
daa
mov
icebp
pop
add
bound
shll
test
dec
repnz
dec
push
mov
out
mov
inc
shll
dec
mov
cmp
insb
movsb
int3
and
and
test
jge
out
mov
roll
insl
sub
ljmp
out
mov
jmp
ret
mov
cmp
addr16
jbe
xchg
fwait
xchg
decl
in
mov
fidivs
adc
adc
pop
or
and
rclb
lret
jno
sbb
jle
aad
dec
scas
jge
int
xchg
lds
adc
stos
in
test
pop
shlb
mov
cwtl
pop
pop
xchg
lds
sbb
aaa
leave
insl
cwtl
pop
mov
dec
in
mov
or
mov
rcrl
dec
ljmp
jp
lahf
adc
fisttpl
push
sub
loope
xchg
out
js
or
call
or
lret
pop
pop
xchg
jo
test
test
out
dec
outsb
mov
pop
lods
test
mov
jno
mov
addl
push
das
cltd
inc
sub
xchg
fidivs
and
fstl
push
adc
or
mov
cmp
xchg
stos
movsb
cli
insl
sbb
dec
popf
push
sub
mov
mov
pop
shrl
loope
inc
jne
lahf
inc
arpl
addr16
outsb
push
imul
xchg
ret
fdiv
aad
mov
sub
adc
int3
add
add
ss
pushf
fdivs
lock
fdivrs
adc
leave
adc
mov
into
push
incb
rcll
fs
imul
div
add
fimuls
xchg
push
ret
lods
mov
and
mov
pop
idivl
sahf
rclb
lods
adc
imul
adc
mov
cmc
mov
add
loope
ret
rorl
adc
addb
cmpsb
xchg
cmovnp
mov
mov
xchg
nop
pop
lds
les
and
fdivp
lahf
xlat
or
xor
fdivs
push
and
add
testl
aam
jo
mov
xor
lods
sub
pop
lock
mov
vpmaxub
int
jnp
lret
lret
cmpsl
lock
xchg
in
aas
inc
pop
push
je
mov
cmpsl
out
add
ret
addr16
aaa
sub
inc
outsb
jns
lahf
push
cmp
push
popa
add
push
nop
bound
mov
enter
cmc
push
hlt
xor
add
mov
adc
mov
jne
es
das
inc
stos
add
sbb
push
xchg
inc
lret
fstpl
sbb
and
jmp
mov
fisttpl
push
add
flds
cltd
sbb
movsl
mov
push
fisubs
push
fwait
lock
push
out
loop
and
inc
jb
fmuls
or
lods
lret
xchg
outsb
fildl
aad
mov
jmp
lods
shrl
in
and
xchg
add
push
js
or
test
icebp
mov
ds
inc
aaa
xchg
sar
pop
mov
fisttpl
xchg
rcr
or
mov
jl
xlat
ljmp
mov
not
push
fs
dec
aam
cmp
test
mov
pushf
cmp
and
adc
xchg
aaa
int
in
dec
les
pop
fwait
pusha
mov
inc
push
fwait
loopne
pop
adc
add
mov
sbb
mov
push
mov
arpl
es
mov
push
sahf
push
movl
gs
es
and
fstps
je
inc
push
pop
dec
cmp
xorb
pop
or
inc
adc
popf
fdivr
lahf
push
push
pushf
dec
push
add
jle
cltd
lods
mov
sbb
mov
xor
insl
mov
cmp
mulb
jbe
test
xchg
add
repz
pop
jecxz
mov
jmp
incl
pop
sub
mov
arpl
test
daa
out
ffree
jecxz
popa
push
and
inc
shll
add
pop
ljmp
mov
clc
sbb
ja
mov
pushf
xor
mov
mov
sub
nop
cmp
shrl
neg
cmp
cmp
sub
pop
les
mov
pop
jecxz
cs
adc
mov
fmull
mov
lock
filds
pop
or
pop
in
mov
xchg
shll
jnp
mov
test
dec
test
push
adc
cmc
xchg
or
jo
or
addl
or
subl
pop
jnp
sub
or
aam
iret
mov
jae
pop
add
loopne
arpl
out
adc
mov
inc
dec
pushf
loopne
and
in
xchg
xchg
sahf
loop
add
inc
enter
addr16
xlat
and
fscale
xchg
data16
and
idivl
iretw
arpl
inc
mov
es
repnz
bound
cmpsb
add
in
aaa
sub
or
pop
sbb
adc
or
notl
pop
fimuls
xlat
jmp
jo
xchg
xorb
jl
stos
hlt
and
jle
mov
xor
mov
or
aam
fcmovnb
mov
pop
or
cmp
arpl
mov
push
sbb
adc
jne
mov
jb
push
xor
cltd
loope
cs
cwtl
mov
out
mov
cmpsb
idiv
shrb
cmpsb
adc
je
pop
loope
je
in
push
hlt
sub
and
cmc
push
push
jnp
sbb
fwait
mov
pop
push
imul
xchg
lcall
xchg
mov
xor
test
jl
sub
or
sub
aaa
adcb
inc
cltd
push
in
int
mov
je
cmp
mov
adc
lock
popa
mov
mov
in
pop
pop
and
lods
sub
sub
mov
test
scas
push
imull
mov
dec
mov
cmp
in
push
jo
jle
sahf
pop
dec
fistpl
icebp
mov
inc
push
inc
sub
xor
js
cltd
mov
out
add
sub
jle
subl
sub
mov
pop
adc
les
xchg
mov
shll
fcompl
cmp
inc
dec
dec
dec
adc
push
stos
cmp
ss
in
and
xchg
inc
lods
xlat
xchg
mov
sti
or
pushf
outsl
cwtl
cltd
jo
or
xchg
movsb
cmp
popf
daa
std
and
ud1
xchg
lret
ljmp
mov
xchg
adc
jb
mov
mov
fxch
adc
test
sub
icebp
lds
out
scas
push
mov
push
pop
sub
mov
cmp
mov
lds
out
xor
stc
fwait
test
pop
scas
dec
dec
mov
cmpsl
pop
repnz
adc
or
cmp
fists
call
ret
es
fwait
sbb
inc
test
js
xor
addl
ret
fwait
push
shl
add
and
and
jns
fdivl
es
lss
neg
lret
test
xchg
jge
lods
inc
add
pop
or
sub
dec
sti
cld
jbe
cmpsb
cmp
mov
inc
push
sub
out
add
push
dec
jmp
xor
aas
loope
jmp
shl
imul
cltd
gs
ds
inc
cmp
jbe
xor
pop
xchg
sti
jnp
or
sbb
out
popf
dec
cmp
push
rclb
sarb
sub
hlt
mov
andb
sbb
sub
cld
pop
adcl
pusha
outsl
push
lods
sbb
aas
xchg
bound
and
aaa
je
xor
cmp
pop
xchg
dec
sub
insb
test
stos
cli
jae
dec
fcompl
and
in
aaa
fstl
icebp
cwtl
test
in
inc
sbb
stos
sbb
add
pop
sbb
push
xor
and
enter
cmp
idivb
inc
jmp
jmp
xchg
inc
push
cmp
lcall
sub
sbb
and
imul
ja
mov
out
jno
xchg
les
cmp
xor
pop
adc
popf
stos
lods
pop
subb
test
shl
mov
push
dec
fcoms
imul
insl
jmp
push
xor
jb
and
xchg
sbb
aam
mov
stc
mov
lret
jns
cmpsb
inc
mov
sub
adc
hlt
js
loopne
inc
mov
mov
into
mov
insl
inc
cmc
mov
sbb
mov
mov
jno
cmc
scas
mov
lahf
stc
or
loop
xchg
pop
fnstsw
push
scas
push
push
adc
adc
fnstcw
enter
inc
push
push
aam
xor
mov
or
int3
sbb
hlt
mov
push
push
fbld
or
mov
xor
pop
jns
movsb
fidivrl
sbb
shrb
sub
sbb
sbb
jmp
mov
aas
sbbl
mov
jl
push
push
rorb
shrb
push
mov
in
repz
das
lret
es
in
dec
cmp
rcll
jle
pusha
mov
cmp
jae
loopne
mov
sbb
cmp
jmp
loopne
shlb
dec
xor
inc
imul
push
pop
shlb
dec
sti
dec
pop
pop
rcl
add
aam
je
nop
ds
sub
roll
cwtl
idiv
pushf
mov
stos
outsl
out
cmp
iret
out
mov
mov
divl
sti
lods
xor
mov
js
ret
mov
mov
mov
jge
data16
insb
lahf
test
add
lods
sbbb
mov
sahf
dec
insb
xchg
pushf
add
xchg
movsl
add
add
fdivs
aas
push
xchg
cmpsl
mov
adc
xchg
mov
aas
imulb
xor
fucomi
cmp
xchg
add
xor
jne
addl
mov
fmuls
cmp
and
adc
jnp
and
mov
mov
hlt
sub
sbb
test
inc
mov
push
pop
xor
test
loopne
mov
leave
sub
rclb
inc
or
arpl
adc
mov
pop
xchg
add
imulb
aad
xchg
mov
daa
push
jecxz
es
cld
mov
frstpm(287
jg
jg
fisubl
ljmp
sti
scas
outsl
inc
dec
or
fmulp
sahf
mov
mov
mov
mov
dec
mov
mov
fldt
sbb
insl
xor
cmp
fst
jmp
xchg
loop
cli
push
jae
insl
ret
in
jmp
sbb
rorb
dec
or
push
bound
sbb
mov
mov
fildl
sbb
or
fidivl
ret
or
push
adc
xchg
aas
outsb
clc
mov
xor
cmp
lret
cmpsl
sbb
cwtl
pop
mov
cwtl
xor
mov
pop
or
arpl
loope
imulb
lock
addl
xchg
jne
shrb
mov
xchg
dec
mov
dec
xor
cs
mov
sbbl
push
and
or
scas
daa
cmp
lret
and
sub
fnstcw
mov
cmp
out
cmp
mov
dec
add
popf
pop
sbb
pop
repz
ljmp
out
shlb
xchg
stos
inc
jecxz
pop
popf
outsb
add
mov
cmc
ljmp
sbb
cmpb
push
push
xchg
xchg
insl
bnd
jg
adc
push
xchg
sub
fiaddl
push
or
pusha
xchg
cli
popa
lcall
mov
cwtl
fadds
mov
dec
imul
popf
movsl
ss
in
mov
int
push
stos
adc
ljmp
dec
pop
or
xchg
pop
ret
rolb
mov
or
adc
jne
jb
mov
int
add
sub
aaa
jne
push
pop
and
stc
pusha
dec
out
rep
jmp
adc
jle
aaa
sub
repz
shrb
test
and
or
sub
arpl
cli
lahf
pop
pop
out
lods
add
notl
lods
push
pop
in
fldcw
outsb
adc
pop
inc
sub
insl
jno
push
pop
lods
int3
dec
movsl
cmpsl
fcmovne
inc
and
stos
clc
pop
xchg
mov
cwtl
mov
out
push
xchg
or
pushf
inc
negb
pop
add
es
stc
fdivs
out
cmp
xor
mov
add
pop
les
dec
lret
jle
lcall
add
fucomip
shll
sarb
add
push
jo
cmpsb
xor
sarl
insl
jbe
jns
fisttps
mul
mov
mov
int
testl
mov
or
xor
cmp
insl
sbb
frstor
and
sbbl
insl
clc
adc
gs
fstps
adc
cli
adc
pop
enter
out
mov
push
nop
stos
shl
call
mov
inc
imul
mov
mov
jmp
testl
pop
or
outsl
sbb
mov
mov
jbe
sub
mov
lahf
shl
fistpl
movsl
dec
or
adc
jo
sbb
sub
movsb
insl
dec
sti
xor
sbb
subb
mov
clc
sahf
pop
repz
cmp
or
and
xchg
pop
adc
cltd
mov
mov
call
mov
jbe
ds
scas
cmp
mov
pop
out
inc
cmpl
dec
ss
aas
sub
mov
notb
adc
pop
sbb
or
mov
jo
jbe
in
jl
mov
mov
or
pushl
jnp
fwait
sbb
sbbb
fwait
ret
mov
scas
mov
jns
insb
mov
mov
mov
fs
push
push
ret
and
lods
jge
je
movsl
jns
ret
add
add
mov
or
dec
jg
jmp
adc
out
mov
pavgw
imulb
mov
push
cwtl
jo
hlt
lods
test
divl
and
sbb
loope
xchg
fidivrl
adc
daa
test
fistpll
loope
jnp
sub
fwait
or
xlat
cmpsb
out
xchg
jg
cltd
inc
xchg
aam
fst
jno
lea
mov
in
xchg
mov
loopne
mov
mov
jp
cmp
mov
call
mov
in
sbb
ja
lds
pop
insb
hlt
inc
cmc
jb
xchg
dec
les
pusha
add
outsb
test
inc
cmpsl
xor
mov
pop
fcompl
cmc
xor
lret
out
comiss
xchg
mov
fs
add
add
mov
adc
stos
fdivrs
loope
sahf
dec
addr16
jge
xchg
xchg
inc
arpl
mov
adc
jmp
int
sub
pop
lret
mov
pop
pop
int
lret
fldt
or
pop
movsb
rorl
xor
shlb
lret
lds
loope
xchg
xchg
sbb
push
xor
jne
sbb
jge
push
out
mov
add
aaa
test
mov
xor
adc
xor
jg
nop
push
nop
jnp
bound
hlt
add
inc
fsubrl
xchg
push
xor
push
insb
daa
adc
and
cmpsl
push
push
and
or
mov
and
xlat
jnp
cmp
push
js
daa
int
xor
xchg
sbb
lahf
ljmp
cmp
pop
loopne
test
adc
rol
mov
into
sahf
por
mov
enter
jne
and
mov
mov
les
and
mov
jmp
mov
mov
push
sub
test
inc
jno
mov
in
pop
out
shl
lods
shrb
dec
dec
cli
insb
xchg
adc
mov
ds
mov
dec
dec
in
pop
jbe
fsubrp
xor
enter
jb
mov
mov
stos
or
adc
ret
adc
push
pop
fs
gs
mov
pop
fildl
xor
loop
adc
push
xchg
push
pop
orl
les
sbb
sub
pop
mov
mov
jnp
mov
cmp
mov
out
push
test
or
movsb
inc
add
xor
sti
sbb
stos
shl
dec
mov
jb
dec
mov
or
push
scas
aaa
dec
sub
lcall
sbb
or
jae
shlb
adc
sti
push
or
repnz
cmp
jnp
stos
jne
and
repz
cmp
outsl
push
sti
fsubrl
cmp
in
pusha
sti
fidivrs
cmp
bswap
mov
cltd
inc
rcll
test
aas
mov
mov
mov
sbb
inc
stc
push
cmc
lds
in
int3
shlb
mov
hlt
or
stos
mov
pop
push
sbbl
insb
leave
jecxz
mov
hlt
enter
sub
mov
dec
xor
inc
shlb
xchg
pop
push
loope
jl
fmul
test
dec
je
adc
mov
or
nop
sbb
pop
fidivrs
ljmp
out
cmp
cli
out
jb
fiadds
push
into
into
mov
xchg
rolb
in
scas
enter
mov
aad
insl
in
adc
mov
lock
sarb
cwtl
out
dec
cmpsb
pop
dec
dec
cs
jb
pop
lods
and
lahf
sub
nop
dec
xor
jmp
loopne
outsl
xor
out
loope
xlat
cmp
mov
les
bnd
sub
cmpl
pop
test
movsl
add
dec
aas
jl
push
jnp
lods
lds
add
cwtl
outsl
push
xchg
lods
inc
imul
arpl
cmpsb
lcall
xchg
xor
mov
outsb
insb
bound
push
xchg
ret
mov
xchg
mov
sbb
loop
dec
pop
out
mov
jl
pop
sbb
pop
mov
aas
mov
mov
fldenv
lret
lahf
dec
mov
xlat
and
push
or
lcall
mov
mov
sarb
cmp
movsb
scas
incl
push
jmp
negl
cmpsl
push
or
and
ret
jnp
dec
scas
mov
icebp
outsb
pop
testb
or
mov
push
fbld
add
dec
data16
movsl
mov
les
xor
add
cmpb
jne
mov
sbb
inc
xchg
pop
push
and
lret
jg
push
xor
pusha
lods
mov
imul
push
sub
nop
jg
sub
rorl
mov
inc
pop
mov
mov
gs
sub
cmpsb
lret
jnp
mov
aam
cmpsl
cmp
stos
cmp
mov
scas
jmp
or
pop
neg
jns
nop
inc
int3
int3
xlat
loop
sbb
mov
mov
cmp
xor
sbbb
adc
fdivl
addr16
mov
inc
xchg
push
clc
and
push
orl
dec
in
sbb
in
aas
cmpsb
pop
cwtl
xchg
cld
icebp
add
add
or
repz
dec
stos
mov
mov
rcll
frstor
rolb
data16
insl
sbb
and
subl
dec
arpl
lret
or
push
mov
lods
ret
dec
sbb
mov
pop
dec
divb
aam
add
sbbb
icebp
dec
inc
sub
dec
xor
outsb
cmp
aaa
icebp
cs
outsb
mov
ja
test
add
ja
mov
mov
lahf
cmp
das
mov
stos
ds
jnp
inc
cmp
shrb
imul
enter
popa
fdivrl
ljmp
add
and
cmp
mov
adc
movsl
cmp
pop
pop
pop
xor
pop
sbb
pop
lock
lret
pmulhuw
out
pop
adc
call
dec
arpl
das
addr16
push
adc
xorl
sub
xor
lock
jns
orl
mov
ja
sub
sub
fs
push
in
sbb
sbb
test
es
adc
mov
adc
ds
fadds
nop
shr
add
pop
jge
push
rcl
push
repz
das
cmp
add
lcall
ror
hlt
add
xchg
sub
shll
movsl
inc
fnsave
jns
sbb
xor
jno
push
ficomps
xchg
movsl
xor
pop
jnp
pop
lods
ljmp
lds
push
dec
subb
mov
sbb
cmc
or
outsb
inc
or
aas
adc
dec
inc
das
ret
xor
pop
or
mov
sub
pushl
cmp
or
xor
or
movsb
mov
and
repz
outsb
jp
mov
pop
mov
mov
iret
jle
test
push
jns
leave
dec
mov
test
and
mov
pop
loop
lcall
jns
xlat
cld
rcrb
popa
fs
or
arpl
ds
ret
xlat
xchg
inc
sarb
enter
negl
lds
jg
sub
dec
push
daa
mov
jo
xor
mov
gs
cwtl
or
push
rcrl
cltd
jbe
push
cmpsl
pushf
xchg
jbe
mov
inc
jl
pop
test
icebp
lods
bound
iret
sbb
xchg
mov
add
inc
enter
push
push
test
mov
cmc
jns
mov
repz
mov
mov
cmp
ret
aaa
push
add
fadds
aad
cltd
jmp
cmpsl
cmpsb
ficompl
ljmp
or
aad
and
or
addr16
pop
jle
loop
lds
jae
pop
mov
cwtl
inc
cli
fwait
xor
shll
fistpll
pop
or
adc
xchg
cmp
adc
dec
xor
in
cmpsb
mov
fmul
repnz
inc
ficompl
loopne
mov
imul
mov
jp
mov
addr16
cmp
adc
or
roll
mov
inc
jnp
mov
sbb
dec
dec
pop
xchg
mov
dec
adc
dec
pop
mov
ss
daa
jns
out
divb
int3
call
stc
cltd
int3
inc
in
sbb
sbb
jae
out
mov
jno
inc
or
incl
pop
pop
mov
xchg
jl
push
sahf
or
xor
scas
push
adc
cmpsb
sarl
aam
sbb
cmc
mov
push
inc
dec
sti
jle
js
ja
loopw
pop
ja
jns
loope
repnz
fisttpll
or
inc
sbb
gs
ficomps
lret
adc
cmpsl
add
fstps
xchg
mov
jmp
in
sub
std
push
cmc
cmp
mov
test
push
into
cmp
movsb
inc
aaa
sbb
mov
add
pop
test
idivb
jb
and
stos
aas
adc
pop
dec
push
addl
dec
aad
mov
enter
les
pop
stos
mov
pop
inc
popa
sub
cmpsb
lahf
out
mov
push
in
and
mov
lret
int
loopne
orb
pop
jmp
es
imul
stos
xchg
loop
scas
aam
call
pop
movsl
pop
pop
es
mov
das
movb
out
repz
negb
popa
enter
push
pop
mov
cmp
imull
jge
out
ret
jnp
loope
jns
test
lret
mov
push
mov
sub
adc
dec
pop
fistl
ret
notl
xchg
mov
sub
lret
out
addb
dec
cmpb
in
and
fwait
std
dec
mov
cmp
pushf
pusha
popa
sbb
dec
and
mov
xor
aam
loopne
ss
jg
outsb
xor
cmp
repnz
lahf
push
loop
add
and
or
mov
jp
loop
repnz
dec
fcmove
push
sbb
cs
js
mov
imul
sub
fisubs
insb
icebp
rol
sbbl
inc
sarb
cmp
mov
cs
cmpb
and
push
aam
sarl
daa
ss
test
out
add
movsl
sbb
dec
fwait
aad
sub
pushf
loop
fwait
rorl
ret
pop
sbb
cltd
sti
mov
roll
cwtl
push
mov
imul
jo
sub
sbb
xchg
cmpsl
inc
adc
pop
out
repz
pop
gs
mull
cli
mov
jmp
cli
jge
das
pop
lret
mov
mov
sbb
xor
mov
mov
ljmp
fidivrl
leave
ss
out
aad
stos
cmp
sbb
lret
mov
xor
movsl
daa
pop
stos
xchg
mov
sub
adc
jl
loopne
out
push
scas
mov
mov
mov
stos
mov
pushf
shl
push
cmp
rcrl
hlt
clc
sub
mov
and
xor
or
and
adc
call
into
test
mov
xor
xor
jmp
in
push
iret
repnz
and
arpl
jmp
jmp
fsubrl
loope
int
imul
out
dec
fstl
stos
adc
in
adc
cmp
xlat
sub
scas
mov
test
pop
pushf
out
mov
stos
mov
test
pop
sbb
cmp
mov
inc
fwait
shl
adc
and
push
sbb
lsl
int
shl
mov
sbb
xchg
ja
imul
inc
mov
aas
repz
rcll
sub
rcrb
pop
mov
ds
roll
adc
outsb
mov
das
data16
cmp
adc
pop
out
lock
lret
inc
addl
cmp
aas
cmpsb
mov
cmc
add
pop
imul
xor
and
adcb
sbb
push
cmpsl
or
sub
add
xchg
mov
outsl
or
imul
mov
lret
in
pop
and
mov
sarl
push
in
testb
push
mov
into
cltd
jo
shrl
push
xchg
mov
iret
gs
popf
ds
adc
mov
imul
out
iret
jp
mov
and
fistps
xchg
insb
out
mov
dec
cmc
push
push
shll
out
fimull
scas
or
xchg
icebp
sub
sarl
push
sbb
mov
lock
lock
inc
cmpsb
xchg
shll
mov
imull
or
mov
cmpsl
dec
jb
jg
sub
std
xchg
lock
sub
xor
mov
pop
pop
std
adc
push
test
jns
or
add
fs
out
mov
push
test
insb
std
iret
dec
hlt
jb
cli
add
jmp
cld
mov
gs
pusha
pop
icebp
or
sbbl
adc
lds
cmpsl
cmp
or
dec
xorb
xor
xchg
into
push
xor
add
push
pop
inc
xchg
ss
pop
jg
xchg
test
and
jae
enter
es
sub
add
fwait
mov
xchg
jns
aad
or
aad
ret
jb
xchg
mov
rorb
test
dec
fsts
jnp
out
xchg
xor
outsb
popa
mov
mov
movsb
sub
popa
and
or
ja
xor
outsb
mov
mov
popa
and
mov
cmp
push
pop
popa
cltd
mov
inc
mov
inc
test
or
push
pop
dec
cld
dec
shrl
movl
mov
loope
ret
push
sbbb
das
adc
dec
xor
rolb
les
pushf
cmp
rcr
stos
mov
adc
xchg
fildll
test
stc
loopne
sub
aam
aad
test
pop
mov
xchg
loope
mov
jecxz
mov
jp
lret
leave
scas
sub
and
lret
inc
sbb
or
out
xchg
push
out
xchg
movsb
cmpsl
mov
mov
inc
jb
test
dec
std
movsb
jbe
daa
int
mov
popf
mov
pop
cmp
mov
loope
shrb
test
push
xchg
mov
sbb
fs
je
jg
cmp
cmc
fmuls
shl
pop
push
sbb
hlt
movsb
sbb
gs
in
int3
imul
push
cmp
popfw
aam
add
pushw
inc
test
das
lds
sub
ljmp
lock
pop
insb
in
out
loope
outsb
push
pop
push
push
sti
fisttpl
add
test
pop
pop
push
popf
insl
sub
and
mov
push
cmp
mov
mov
dec
sub
cmp
gs
nop
scas
pushl
mov
mov
push
and
sub
xchg
adc
sub
out
or
pop
cmp
cmpsb
imul
mov
add
push
gs
pop
mov
pop
adc
icebp
jmp
fimuls
mov
outsb
xor
les
stc
dec
sbbb
sahf
xor
fwait
sub
negb
fimuls
dec
imul
pop
lods
and
sbb
test
push
call
inc
not
es
arpl
fcoms
loopne
test
fwait
clc
mov
adc
cmp
or
dec
sbb
sbb
call
mov
mov
scas
dec
shrb
sar
lcall
add
hlt
cs
pop
lods
xchg
jge
movsl
popl
xor
cmp
cmp
pop
mov
fldcw
repnz
and
push
dec
lahf
rolb
rcrb
mul
xchg
in
test
add
mov
mov
jno
mov
jno
test
aam
sub
cmp
lcall
popa
push
xchg
jp
repnz
jae
imul
out
jecxz
inc
xchg
mulb
shrl
sarb
lahf
out
push
jle
daa
cmp
or
mov
inc
jae
dec
mov
xor
inc
mov
lret
ds
loopne
fisubl
push
test
xor
fs
jne
lods
test
mov
loope
leave
lahf
adc
aam
sbbl
push
jg
mov
mov
mov
es
fwait
sub
es
lods
sub
inc
add
add
ficoml
jbe
or
lret
inc
add
stos
test
aaa
testb
mov
stos
push
mov
mov
and
in
outsl
arpl
pop
xchg
repz
cmp
stc
adc
stos
ret
jecxz
xchg
inc
push
dec
and
add
inc
push
xchg
pushf
clc
ljmp
cld
and
rcll
mov
inc
pop
xchg
jb
pop
loopne
fwait
or
and
jbe
jmp
push
mov
arpl
and
pusha
inc
mov
push
cmp
add
data16
mov
movsl
mov
js
test
mov
cmp
test
mov
xor
je
jp
sub
and
pop
iret
jns
loop
or
test
je
pusha
cmp
jmp
divl
stos
cmp
icebp
aas
push
dec
dec
push
mov
add
lea
push
or
fnstcw
lahf
adc
pushf
aad
adc
or
enter
test
xchg
add
push
adc
xchg
sub
loope
leave
dec
xchg
sub
adc
in
sbb
xchg
insb
inc
mov
dec
das
scas
xor
ret
lret
cli
fcom
inc
shrl
mov
sbb
inc
aam
out
in
enter
mov
sub
lods
inc
in
pop
cs
mov
rolb
mov
imul
xor
jecxz
call
mov
in
arpl
mov
les
test
sub
cwtl
outsl
xorl
xor
bound
sub
rcrb
imul
push
ret
dec
subb
shrb
jmp
add
fs
es
stc
mov
adc
jge
lods
pop
iret
mov
add
jmp
scas
test
fprem
cmp
mov
cmp
add
pop
sar
cmp
clc
mov
mov
push
sbb
cmpsb
mov
sub
scas
jae
or
fsts
jp
pop
inc
mov
push
rcrl
fcomip
test
jae
icebp
aas
aad
ja
jge
xchg
xchg
imul
pop
mov
xor
jmp
movsl
lcall
dec
daa
je
js
ja
je
in
insb
cltd
clc
jo
add
pop
dec
and
cmpsl
dec
mov
test
mov
rolb
mov
mov
sub
int
lds
mov
inc
shll
fsubl
cmp
mov
stc
fldl
ret
jmp
test
mov
push
repz
jnp
jmp
add
fs
dec
test
ljmp
loopne
jo
popf
ja
ss
push
xchg
shrl
int
int
sbb
int
push
fimull
xor
and
mov
in
push
pop
mov
and
xchg
clc
fldl
imul
push
xchg
push
outsl
int3
cli
jecxz
movsl
cmp
or
xor
hlt
into
push
mov
in
enter
sub
or
mov
sbb
ja
fs
xlat
jns
add
roll
les
xor
popf
jno
add
icebp
dec
ss
xor
xchg
rcrb
inc
test
bound
sub
arpl
inc
mov
mov
fstpt
pop
mov
stos
push
jl
jp
cmp
sub
pop
dec
sub
adc
movsl
jo
fnsave
int3
and
insb
test
into
push
or
dec
pushf
insb
mov
das
or
and
jno
inc
lcall
push
std
mov
in
repnz
mov
push
pop
push
aam
mov
pop
decl
test
jmp
test
test
lea
adc
sbb
popf
in
sarl
push
lcall
adc
dec
ja
sbb
divb
push
push
test
mov
jnp
sub
shll
shrb
mov
sub
mov
inc
mov
mov
sub
bound
clc
cld
shll
icebp
lea
cmpsl
xor
call
mov
jge
jge
and
mov
adc
fcomps
xor
sbb
lahf
xor
out
inc
jge
pop
lds
lret
sub
jmp
mov
or
sub
push
dec
aad
in
jo
push
dec
fcomi
lock
sub
mov
cltd
mov
pop
sbb
rcl
push
pop
arpl
fs
xchg
mov
and
sbbl
cli
jnp
clc
push
sub
lods
pushf
in
mov
mov
xor
pop
adc
adc
mov
iret
mov
xchg
dec
enter
and
icebp
cmp
es
jp
inc
mov
dec
enter
out
sbb
sub
push
xor
sbb
pop
sub
lods
pop
mov
push
cmpsb
inc
or
mov
sub
mov
ja
ret
loope
inc
imul
sbb
lds
dec
fidivl
lahf
push
je
pushf
stos
scas
or
jle
leave
jns
in
and
adc
add
xor
mov
das
xchg
je
or
mov
add
fistps
das
loopne
sahf
jle,pt
cmp
mov
loope
mov
ret
sbb
dec
xchg
test
cmp
mov
sbb
pop
and
inc
iret
call
rcrl
daa
dec
inc
sub
xor
adc
sbb
decl
cld
gs
daa
adcl
push
cld
jns
push
aaa
jmp
cmpsl
imul
mov
scas
mov
fwait
rclb
fadd
jle
ljmp
in
cmp
aaa
mov
dec
pusha
jno
pop
out
aad
push
pop
adc
out
sub
mov
mov
roll
scas
jbe
int
nop
mov
es
ja
int
cmp
jno
repnz
addr16
out
adc
xor
cli
movsl
mov
and
cmp
shl
out
test
fdivrl
and
pop
aaa
mov
xchg
xor
mov
fsub
inc
es
inc
rolb
push
js
ja
lcall
movsb
push
stos
repnz
das
shrl
popa
fsubrl
add
lea
adc
jge
div
xchg
inc
test
xchg
xchg
sub
push
shl
adc
arpl
sub
lods
pop
mov
in
insl
push
or
leave
mov
adc
jno
mov
scas
dec
mov
loope
push
sub
lods
sbb
sbb
aad
inc
push
aaa
pop
cmpsb
das
and
decb
sahf
in
lret
push
pop
sbb
push
loopne
incl
hlt
js
fsubs
inc
jo
mov
and
pop
cmpsl
cmp
mov
iret
cmp
mov
mov
jecxz
xor
cltd
or
outsl
jnp
push
add
rol
cmp
push
shrb
les
aad
ss
and
aad
dec
mov
cmp
int
add
mov
aam
or
mov
pop
jp
xor
pop
adc
sub
add
mov
lret
popf
das
pop
sub
xor
fwait
movl
mov
push
xchg
push
lret
popf
pop
and
lahf
clc
adc
sahf
addr16
scas
mov
stos
add
xchg
xchg
cltd
pop
sub
out
adc
movsl
jb
push
ret
ss
xchg
in
in
aas
into
add
dec
mov
push
int3
imulb
lcall
hlt
inc
push
mov
adc
dec
jbe
dec
ds
cs
bound
cmp
or
cmp
out
nop
les
sbb
xor
add
iret
int
je
aam
fcoml
cmc
rorl
mov
push
inc
out
mov
outsl
pop
cmpsl
mov
cld
sahf
adc
daa
call
pop
mov
pop
xchg
cmp
and
bound
xchg
and
es
jo
pop
ss
xor
mov
sub
outsb
add
test
push
mov
insb
add
js
inc
rcl
and
test
mov
add
mov
cmp
pusha
mov
int
xchg
mov
inc
cmpsl
movb
in
or
call
inc
mov
ss
mov
cmp
pusha
push
xchg
or
stos
lock
lcall
popa
xor
sub
fdivs
cmpsl
inc
lock
inc
enter
repnz
push
cmp
cs
addl
xchg
xchg
mov
or
xor
mov
mov
jle
jns
repz
fstl
ljmp
je
lcall
or
add
lahf
inc
add
ljmp
xchg
cs
shll
je
xchg
and
dec
lret
mov
push
lahf
xor
mov
adc
push
pop
popf
ja
ds
mov
outsl
sbb
or
cmc
aad
xor
xchg
xor
or
filds
pop
add
xchg
and
fwait
adc
cltd
sub
loopne
push
int3
cmp
fwait
inc
mov
scas
xor
cmp
lret
idivl
and
and
push
pop
push
out
fsubrl
lcall
push
inc
mov
jle
and
dec
imul
into
aam
and
movsl
imul
sub
mov
mov
push
fdivl
icebp
imul
xchg
data16
mov
pop
in
es
repz
faddl
roll
add
in
and
and
cld
adc
push
dec
pop
popa
sub
pop
pop
mov
das
or
inc
adc
sbb
push
pusha
pop
xchg
cmp
insb
je
mov
and
and
cmp
lea
sbb
xchg
jl
addl
sbb
or
inc
cmp
push
pusha
inc
pop
pusha
insl
ja
pop
xlat
mov
stos
lea
repnz
outsl
sub
in
fistps
mov
out
cmpl
xor
jg
cmpsb
adc
imul
and
out
or
pop
jo
and
xlat
lret
sbb
adc
repz
aam
mov
cmc
and
pop
insb
inc
arpl
push
or
pop
dec
jg
add
and
cmp
shlb
aam
stos
mov
js
stos
lcall
pop
test
push
scas
or
scas
push
out
jae
cmpsl
push
inc
in
imulb
jge
pop
lea
sbb
aad
fwait
xor
inc
daa
sbb
xor
test
loop
pop
pop
dec
stos
jae
inc
mov
mov
add
nop
rcrl
jge
cmp
dec
imul
push
or
add
inc
mov
add
lods
xor
cmpsl
cmp
scas
loopne
daa
ds
shlb
scas
jb
shll
sahf
add
fidivs
dec
test
insb
or
hlt
add
mov
test
mulb
jp
cmpsl
cmp
xchg
out
and
imul
mov
xor
fdivp
bound
pop
and
push
cli
push
push
sbb
out
cmp
in
sahf
loopne
out
cmp
das
ret
add
inc
sub
lcall
push
fcomps
or
lods
leave
push
insb
sub
sub
call
gs
mov
mov
enter
lcall
shlb
test
pop
ja
add
cmp
dec
jp
mov
icebp
arpl
push
pop
jmp
push
pusha
xlat
negb
xchg
pusha
popf
in
sbb
sbb
shll
jle
mov
lahf
fistpll
sbb
mov
addl
mov
xchg
popa
push
int
xchg
ret
xchg
jg
pop
pusha
iret
into
loope
jo
or
pop
mov
test
icebp
adc
or
dec
xchg
xchg
lock
dec
cmc
jbe
inc
inc
push
js
incb
cmpsl
fadds
push
sbb
fistpl
push
fisubrl
aaa
int
in
or
out
and
fisttpl
testb
stos
sub
pop
testb
or
nop
rcrl
repnz
lret
mov
push
cmp
popf
add
xchg
mov
ljmp
pop
sti
lock
cmp
int
dec
daa
and
mov
sub
cmp
xchg
xlat
repnz
fsts
jb
mov
xchg
rcrl
xchg
dec
mov
and
ss
movsl
xchg
insl
loope
in
data16
out
int3
es
pop
scas
rolb
sub
or
test
adc
bound
inc
aas
dec
xor
ror
add
jno
imul
cmp
aas
fistps
dec
pop
cmp
aam
repnz
shr
xor
jb
call
fsubrl
mov
add
xor
jmp
adc
mov
popf
call
nop
aaa
jg
pop
imul
and
pop
mov
cwtl
mov
adc
loope
addr16
leave
shrb
mov
or
les
fwait
dec
adc
dec
cmpsl
je
jns
cs
xchg
inc
jno
repnz
test
fmulp
idiv
dec
cmp
movsb
jle
ja
lret
push
and
mov
pop
cmp
loopne
sahf
and
push
jmp
xorb
les
out
ret
icebp
add
mov
xchg
sbbb
test
dec
xchg
cmp
sub
sbb
dec
jge
mov
mov
sbb
cmpsb
ret
imul
pop
in
xchg
add
sarb
call
push
mov
mov
loopne
pusha
je
test
lock
adc
addr16
mov
js
aad
push
movsl
xchg
mov
bnd
pop
daa
mov
sbb
adc
jle
push
xor
mov
mov
mov
dec
sbb
push
inc
outsb
aam
fisubrs
sahf
out
sub
jmp
fnstenv
mov
jb
add
movsb
jp
jl
jne
int
fcmovu
fldt
out
mov
in
aas
inc
jp
repz
movsl
or
int3
sub
mov
mov
sub
lret
sbb
les
adc
imul
mov
les
inc
mov
pop
ss
stos
test
rorb
or
les
jge
inc
mov
mov
imul
push
in
pop
pop
cwtl
scas
js
xchg
mov
or
sub
imul
sarl
push
sahf
sbbb
add
mov
mov
fiaddl
inc
pop
mov
xchg
xchg
test
call
adc
mov
out
mov
inc
loopne
xor
dec
and
mov
mov
pop
jecxz
fsubl
decl
push
in
add
ffreep
rorb
fcoms
test
push
pop
loope
cmpsb
lock
aam
jmp
push
pop
push
mov
pop
test
xchg
lret
xchg
scas
cltd
das
xchg
push
out
inc
lret
bound
cltd
jo
add
xchg
mov
mov
leave
xchg
mov
push
add
inc
imul
mov
loopne
jle
xor
pop
adc
fwait
call
add
daa
inc
outsl
xlat
lcall
sub
fs
mov
lret
sub
leave
int
mov
xor
adc
mov
ret
nop
xlat
sbb
inc
push
mov
movsb
and
in
subb
nop
ja
ss
pop
int
pop
aad
fisubrl
xchg
mov
out
bound
aam
jae
xor
jge
mov
fdivrp
leave
push
dec
mov
pop
push
aaa
adc
xor
in
inc
cmp
out
cld
lods
dec
pop
jbe
xor
icebp
ljmp
ficompl
mov
xchg
or
mov
sub
jbe
jo
mov
hlt
mov
jmp
mov
add
jp
rolb
out
nop
jmp
popf
sub
cli
push
push
out
mov
imul
iret
jo
pop
pop
loope
jns
push
iret
cmp
jne
lcall
ret
xor
sbb
pop
push
fnsave
push
add
int3
or
daa
dec
gs
rclb
push
jno
jmp
popf
test
and
mov
fldl
out
add
enter
or
sub
mov
fs
dec
lods
insb
iret
push
pop
in
arpl
push
cwtl
push
pop
cmp
outsb
aad
int
cld
cld
add
mov
and
cmc
push
jno
pop
inc
jbe
mov
xchg
pushf
sbb
mov
nop
enter
sub
stos
push
repz
jae
mov
cltd
dec
aad
fsts
pop
lret
mov
jbe
mov
xchg
sahf
mov
aad
ja
jo
cmp
dec
add
aas
addr16
cli
iret
scas
add
int3
lahf
mov
dec
test
push
xchg
push
jmp
add
jb
cltd
add
popl
shlb
and
or
jp
jbe
push
test
inc
imul
js
sbb
test
dec
dec
mov
notb
push
sub
mov
lret
in
aam
rorb
push
in
mov
push
inc
das
adc
and
sub
je
mov
sbb
sub
stos
jp
xchg
mov
mov
pop
call
inc
pop
inc
in
sti
push
mov
inc
out
xor
dec
mov
shll
cld
mov
dec
pop
xor
mov
out
test
pop
cli
mov
arpl
or
je
testb
mov
ret
leave
or
stc
and
push
pop
or
rol
aad
inc
push
cwtl
fbld
pop
pop
addb
clc
pop
adc
fcoml
repz
loop
ss
movsb
test
inc
sbb
mov
add
bound
lods
shll
and
fs
faddl
and
mov
pusha
mov
imul
lret
loop
xchg
inc
push
das
sahf
inc
out
push
sbb
lret
fstps
sti
notb
mov
sbb
dec
in
in
in
outsl
aam
lret
push
call
popf
xchg
inc
mov
fwait
and
sahf
call
pop
fwait
fwait
inc
popa
or
das
add
shlb
icebp
push
or
cmp
icebp
int3
xlat
push
push
cmpsl
lea
jns
and
xchg
inc
xorl
push
adc
pop
push
xchg
cmp
jns
push
push
pop
test
push
bound
lret
adc
mov
mov
pushf
inc
xor
ja
aam
loop
lret
je
es
out
lret
rorb
into
out
ret
adc
mov
jno
fwait
pushf
dec
pusha
mov
sbb
mov
imul
addl
stos
pop
fmulp
sub
aam
inc
xor
sarb
lcall
mov
mov
add
cmp
and
in
push
mov
aad
jge
push
jmp
movsb
ficomps
or
movsl
roll
test
or
mov
cmp
mov
sti
dec
popf
in
inc
xchg
xchg
xchg
pushf
lcall
or
test
ret
int3
das
inc
mov
and
test
out
daa
mov
aad
int3
sbb
pop
fs
addr16
adc
fs
xchg
ret
imul
insb
stc
js
aad
ficomps
and
jns
cli
inc
jle
cmp
jecxz
addb
pop
xchg
ljmp
sbb
cmpsb
mov
fwait
dec
adc
ja
push
stos
lods
sbb
adc
adc
jo
jp
xchg
mov
loopne
stos
push
cmp
stc
in
rorl
scas
sub
in
xlat
xchg
enter
out
clc
loopne
insb
enter
int
ljmp
push
sarb
std
mov
and
sub
dec
jge
rclb
je
sti
cmpsl
mov
jbe
scas
cmp
pop
cld
push
pop
out
pop
lahf
xor
xchg
push
fisubs
sub
out
mov
arpl
int3
mov
mov
movsb
cmp
push
fwait
or
ja
cmpsl
data16
es
pop
int3
sub
pop
xchg
ljmp
test
mov
fsubrp
xor
fistpll
sub
dec
sub
leave
sub
incb
aad
test
dec
stos
jb
sub
push
pusha
aam
repz
lret
xchg
dec
or
addr16
mov
sub
clc
fidivs
frstor
xor
inc
hlt
das
gs
adc
stc
pop
fdivrs
insl
mov
lock
into
mov
mov
test
push
mov
out
sbb
aas
mov
dec
xchg
and
mov
outsb
lock
cmp
int
stos
cmpsl
push
pop
aas
mov
xchg
or
cmp
imul
mov
inc
insb
sub
adc
add
pop
lcall
lret
sbb
gs
sbb
cmp
mov
loope
aad
dec
cmpsl
imul
add
dec
jno
das
mov
adc
pop
add
push
lock
inc
pop
int
and
jo
sub
aas
test
insb
inc
mov
test
mov
out
adc
push
mov
fisubrs
push
mov
cmp
sub
jmp
cmp
jne
cmpsl
insb
sbb
dec
dec
sbb
sub
xor
fistps
imul
mov
jb
cmpsb
stos
fisubs
adc
inc
gs
dec
cs
xchg
or
cmp
int3
dec
and
sub
push
js
jno,pn
add
xor
insl
mov
ret
dec
scas
std
nop
gs
mov
inc
xchg
mov
out
rcrl
sbb
jecxz
inc
fildl
mov
or
and
mov
out
popl
mov
xchg
mov
daa
insb
xchg
and
notl
imul
mov
add
fmul
pop
fs
roll
xor
out
das
sbb
push
rol
push
mov
xchg
mov
aaa
jle
cwtl
ficomps
neg
xchg
push
pop
pop
lret
aad
sub
pop
and
add
dec
in
add
xor
pop
xchg
out
cltd
jmp
cmc
out
sub
decb
jb
jne
mov
cmc
xlat
xor
xchg
pushf
fbstp
cltd
push
push
pop
sbb
scas
mov
loop
cmpsb
daa
fsubs
cwtl
test
mov
xchg
jle
cmc
xchg
push
test
sbb
dec
outsb
sbb
pop
push
out
ja
pop
cmpsl
cli
or
mov
sbb
dec
add
leave
sbbb
push
mov
repnz
pop
pop
rorl
loope
xor
scas
and
sar
sbb
sbb
add
out
dec
or
fs
mov
in
cs
mov
scas
sub
cli
mov
mov
push
pop
pop
mov
leave
movb
pop
fmul
imul
mov
jge
ret
mov
fwait
push
movsb
jmp
iret
out
xor
sbb
inc
call
cs
pop
push
es
and
xchg
pop
lods
pop
iret
mov
int3
enter
or
or
sbb
popf
pop
xor
jno
dec
pop
fistpl
push
jg
mov
or
and
push
adc
mov
jb
push
and
inc
push
push
es
xchg
inc
aad
popa
fnstenv
mov
test
ljmp
cmpsl
adc
lcall
pop
push
xchg
pushf
stos
aam
cmpsl
pop
inc
in
xor
ljmp
push
jg
out
mov
int3
xlat
test
pop
mov
repnz
popf
fbld
cmp
inc
leave
mov
es
sbb
mov
lds
aaa
inc
xchg
ret
sarl
clc
bound
hlt
jecxz
cwtl
mov
pop
cmpsl
inc
mov
mov
or
das
fstp
mov
push
xchg
pop
xor
pop
pop
addb
xchg
mov
scas
pusha
xor
xchg
lret
mov
jmp
or
jbe
pop
fs
andl
out
xor
movsl
insl
arpl
xchg
sbb
outsl
push
inc
jecxz
dec
outsb
cmpsl
rcrb
daa
adc
jmp
nop
subb
hlt
rorl
push
aad
xchg
push
mov
jbe
mov
clc
stos
ja
cmp
test
loop
adc
adc
imul
aad
xchg
pop
mov
sub
imul
popa
loopne
xchg
mov
mov
stos
bound
mov
mov
aam
pop
stos
xchg
pop
gs
lods
fbld
cmpsb
addr16
lret
jge
mov
mov
jmp
pop
mov
bound
mov
adc
enter
sbb
and
pop
push
push
movsb
test
xor
popa
xor
add
dec
cmp
mov
cmp
mov
inc
cmpsb
test
clc
mov
and
mov
ljmp
test
mov
push
inc
cltd
out
mov
dec
scas
test
pop
mov
or
leave
sub
popa
popa
aam
jo
push
test
mov
sbb
xchg
jp
stc
mov
fldenv
cmpsw
test
sub
cwtl
mov
aad
sub
outsb
ret
mov
js
xchg
cmp
repnz
mov
cmovge
push
push
jne
inc
mov
sbb
bound
or
ret
imul
pop
jmp
mov
push
jns
jecxz
or
lods
arpl
adc
push
shll
shlb
es
mov
jle
stc
push
and
repz
shll
and
xchg
stos
in
push
ljmp
call
mov
out
fimuls
jbe
das
cmp
int
aaa
in
xchg
adc
aad
cli
mov
pop
mov
call
scas
mov
inc
xlat
inc
outsl
jecxz
sahf
cmc
add
sbb
cli
insl
xor
dec
lahf
cwtl
repnz
and
cvtps2pi
rcrb
sti
mov
faddl
popa
daa
idiv
inc
aas
mov
lcall
adc
sub
jae
in
dec
mov
adc
movb
jg
jg
sub
insl
adc
movb
xchg
lret
mov
mov
stc
in
or
pop
pop
or
xorl
dec
lds
sahf
hlt
lret
test
loope
dec
cmp
mov
mov
mov
outsb
jns
push
test
add
movsb
mov
jo
std
shll
pusha
jle
stos
outsl
jge
in
test
negl
or
sbb
xlat
add
addr16
pop
mov
sti
sub
iret
mov
pop
cmpsl
lods
jno
andl
sti
hlt
dec
and
div
out
enter
xchg
push
divb
or
xchg
fsub
enter
sbb
push
icebp
jno
stc
inc
cmp
clc
lcall
add
sbb
mov
jg
adc
sbb
add
sub
jmp
sub
ret
pop
mov
and
dec
xchg
mov
test
inc
add
stos
gs
cmpsl
sub
or
cltd
or
shr
or
cwtl
mov
pop
ja
xchg
mov
clc
cmp
dec
or
leave
mulb
shll
in
xchg
sbb
pop
xchg
out
mov
subb
call
cmp
dec
mov
mov
sub
inc
mov
lds
or
popl
addr16
icebp
push
loopne
into
icebp
inc
push
xchg
pushl
push
xor
bound
pop
cmp
xchg
jge
adc
cmc
push
test
dec
lock
mov
mov
out
lahf
pop
outsb
inc
loopne
ss
inc
repnz
pop
fistps
jb
xor
and
cvtps2pi
mov
lcall
adc
cmp
pop
jo
mov
and
loopne
and
push
mov
xor
pop
rorb
pop
loopne
push
push
jo
pop
sti
jmp
loope
in
or
xchg
ret
mov
mov
out
fmuls
ss
adc
insl
loop
pop
addr16
push
aas
or
int3
aam
call
stos
mov
scas
or
outsl
nop
push
popf
inc
out
std
jge
je
xchg
push
les
addb
xor
movsb
icebp
lods
xor
add
daa
dec
mov
mov
jecxz
mov
mov
loopne
inc
jge
inc
cmp
xchg
or
clc
mov
hlt
cmpsb
aaa
xor
pop
add
fidivl
cwtl
mov
mov
stos
mov
jmp
dec
push
push
jecxz
sti
jae
popf
loopne
jo
ds
lods
shlb
adc
nop
sub
xor
mov
bound
mov
lea
adc
fldl
sub
xchg
add
loop
call
sub
aaa
jbe
or
sahf
mov
inc
shll
stos
in
fwait
sub
pop
inc
int
fmull
push
scas
pop
jne
adc
cmp
push
sbb
xchg
xchg
mov
mov
jnp
jb
in
mov
adc
int3
adc
shll
rcrb
ret
xor
fwait
je
ds
negl
pop
je
push
sub
adc
inc
cmp
std
arpl
mov
mov
and
lret
mov
enter
int
adc
xchg
dec
mov
pop
cli
mov
inc
sub
push
adc
aaa
inc
int
or
fstl
pop
dec
push
adc
in
int3
mov
cmpxchg
divb
enter
mov
jecxz
lcall
aad
bound
cwtl
aas
fnstcw
cs
ret
popa
mov
push
addr16
add
fwait
xchg
leave
cmp
dec
xchg
lods
xchg
imulb
mov
addl
and
sbb
dec
lcall
push
or
adc
roll
cmpsl
cwtl
adc
dec
insb
mov
sbb
cld
or
out
xchg
sbb
js
sub
into
xchg
scas
subb
mov
push
and
sbb
gs
mov
xlat
inc
inc
dec
movsl
inc
fisttps
mov
pop
xchg
xor
mov
pop
fldenv
movsb
cli
test
xor
sub
push
out
adc
movsb
popa
xlat
dec
mov
mov
je
dec
out
lret
jno
and
jg
outsl
loop
xchg
lea
pop
jne,pn
push
mov
jnp
pop
push
aas
insl
jbe
sbb
icebp
pop
jae
or
stos
bound
add
push
pop
dec
add
cltd
jnp
scas
jmp
ret
cld
ret
mov
mov
sub
out
push
jns
sbb
add
outsl
dec
adc
pop
jmp
ds
imul
pop
cmp
sbb
or
cmpw
test
seto
test
scas
or
popa
adc
nop
cmc
pop
rcll
std
jg
xor
inc
pop
jmp
mov
fldl
popa
cmpsl
push
mov
mov
jecxz
cmpsb
jbe
push
test
rorb
test
inc
xchg
fsub
sub
pop
cmp
icebp
sbb
inc
mov
std
imulb
sahf
ds
ficompl
or
and
sbb
pop
cmpsb
jge
test
lods
xor
fstl
add
jmp
inc
subb
xchg
icebp
lret
bound
aas
icebp
adc
es
out
sbb
jl
mov
add
sub
hlt
pop
stc
push
cmp
xor
sub
sti
inc
push
mov
ss
ret
aam
and
lcall
sub
inc
pop
enter
sub
fistpll
xlat
fs
dec
sbb
and
fwait
decl
push
push
arpl
stos
iret
ret
in
lret
mov
push
addr16
or
jecxz
shrb
sbb
xor
pcmpeqb
push
lcall
sbb
xchg
mov
cmp
lret
mov
mov
movsb
mov
sbb
cmp
push
arpl
mov
stos
std
test
sbb
dec
sbb
or
rcll
pop
mov
sub
jmp
fwait
xchg
in
stos
aas
xchg
das
and
mov
pop
push
pop
dec
mov
or
fildll
lret
andb
sub
sub
leave
inc
mov
movl
pop
arpl
sub
fidivrl
cwtl
and
mov
into
test
call
sub
jo
push
js
adc
stos
fcomps
movsb
test
ret
sti
xchg
xor
insb
add
stc
int3
mov
fwait
or
insl
pop
mov
cmp
scas
in
sub
xor
push
sbb
dec
pop
dec
loop
out
xor
push
inc
cmp
cld
scas
scas
movsb
adc
fwait
cli
clc
rolb
stc
icebp
dec
sbb
xor
loope
inc
xorl
insb
iret
or
push
aad
out
addr16
ret
cmp
aam
inc
push
add
add
jp
adc
xor
pushf
fbstp
inc
adc
aam
jne
lods
sub
sahf
mov
jl
sbb
inc
push
push
or
daa
imul
arpl
dec
repz
subb
pop
mov
add
fimull
daa
jg
je
cmpsb
cld
int3
xor
mov
shlb
les
daa
mov
push
xchg
mov
mov
dec
fmul
insl
push
not
adc
sub
sbb
jge
popa
fnstenv
les
faddl
insl
sbbl
repz
mov
add
insl
sub
int
xor
jne
aad
mov
bound
add
push
and
push
jbe
jo
in
ds
adcl
or
jmp
dec
sbb
mov
cmp
imul
push
pushf
or
gs
pop
rcrb
mov
pop
out
cmp
insb
ss
pop
push
xlat
test
into
cmp
adc
cwtl
out
cmpsl
jg
mov
aad
mov
add
cwtl
fdivrs
pop
pop
nop
pop
into
testl
fldcw
cmpsl
scas
adc
cld
mov
add
inc
test
add
sub
or
cmp
pushf
ljmp
fs
push
rcrl
insl
les
mov
sub
ret
aaa
jecxz
sarl
lret
push
fwait
adc
popa
ret
mov
outsb
adc
mov
scas
jno
or
adc
mov
mov
sbb
out
jnp
inc
loop
ja
push
je
es
push
stos
cs
das
jge
xor
add
jb
sbb
mov
mov
mov
dec
lcall
std
jmp
in
pop
pusha
daa
int
cwtl
aas
pop
lcall
sub
lock
xor
cmovge
inc
push
outsl
jg
inc
movlps
pop
test
sbb
add
push
hlt
jae
lock
add
icebp
jl
in
cld
fcompl
adc
in
lcall
sbb
xor
stos
sub
push
xor
push
sbb
in
push
test
xor
test
loope
fwait
ror
imul
pop
and
test
lods
push
rcrb
in
push
enter
sub
pop
pop
iret
fildll
mov
pop
aam
lret
mov
cmp
inc
dec
fcoms
sbb
inc
cli
std
idivb
nop
int
mov
dec
push
std
cmp
mov
mov
adc
mov
ljmp
dec
subl
test
inc
lret
cmc
rolb
push
jae
sbb
fsub
add
push
jae
loopne
dec
ret
xor
xchg
mov
fs
aad
filds
jecxz
addr16
dec
xorb
mov
jae
fdivs
or
adc
into
jbe
and
pop
pop
pop
in
jns
jecxz
loopne
leave
test
out
inc
jg
mov
sub
jmp
stos
in
int
cmp
add
je
or
adc
iret
xor
mov
repz
sti
fs
and
aam
lret
mov
scas
lret
add
loop
lret
adc
stc
cli
cli
mov
push
and
daa
loopne
aad
mov
pop
fnsave
sbb
and
and
stos
sub
pop
jecxz
jle
and
pop
lahf
aam
jl
std
call
cmp
test
in
enter
hlt
sti
xchg
imul
mov
fwait
ss
jo
sbbb
xlat
sahf
cmp
dec
fldl
jo
mov
pop
daa
inc
arpl
sub
pop
aam
or
les
sub
push
mov
jmp
ret
dec
jp
or
std
ret
mov
icebp
movzbl
pop
clc
scas
mov
js
xchg
sbb
orb
xlat
and
lods
jg
xchg
cmp
push
sbb
cmp
and
movsb
leave
imul
test
or
pop
push
push
jmp
or
daa
ds
jp
jle
scas
negb
or
addr16
insl
insl
scas
pop
int3
sbb
movsb
call
pop
lock
in
xchg
shrb
pop
cltd
out
subb
xchg
add
mov
iret
mov
push
xor
push
lea
fisubrs
adc
hlt
sub
xor
sbbb
in
dec
sub
stos
sahf
mov
push
test
dec
sahf
add
lcall
into
arpl
cmpsb
mov
ds
aaa
fmulp
cwtl
shrl
shld
add
jge
sub
add
in
mov
mov
frstor
iret
imul
ljmp
movsl
add
pop
std
xchg
ficompl
mov
clc
cmp
mov
mov
inc
pop
mov
sbb
xchg
mov
out
xchg
adc
mov
and
shll
inc
js
movsb
adc
push
lods
in
jl
xchg
aas
loopne
rol
dec
addr16
jmp
push
add
sub
in
dec
sarb
cmc
ret
sub
pop
std
stc
mov
fisttps
mov
push
pusha
ret
and
add
mov
jb
sbb
test
xchg
push
mov
rorb
in
push
sub
jno
push
push
add
mov
test
sahf
in
pop
add
in
jp
imul
jecxz
mov
cmp
cmp
jmp
loopne
add
int
insb
roll
bound
insl
adc
inc
or
adc
fisttpl
movsl
inc
mov
inc
out
ret
rolb
pop
and
pop
push
pop
adc
popf
aaa
stos
leave
mov
addl
push
sbb
cld
push
and
sbb
mov
in
sarl
jo
adc
xchg
hlt
pop
mov
or
jle
pusha
adc
data16
or
bnd
frstor
sbb
scas
add
andl
sub
jno
js
jo
rolb
xor
hlt
std
ret
scas
lcall
insl
pop
mov
fisttpl
test
insb
jge
into
mov
cmpsb
fldcw
shrb
xchg
jbe
jge
rclb
inc
xchg
daa
popa
sub
iret
cmp
add
mov
dec
out
xor
mov
mov
inc
push
and
and
aas
xchg
movsb
movsl
dec
int3
cli
movsb
xor
addr16
or
lcall
cmp
arpl
or
xlat
push
xchg
sub
jo
fisubrs
into
jmp
xor
sub
notl
dec
ss
mov
lea
setp
and
sub
lahf
mov
cmp
push
test
out
adc
das
dec
sbb
inc
rolb
in
je
repnz
int
inc
jne
popaw
push
das
fs
add
fwait
sarb
jb
mov
inc
ja
ljmp
aad
cltd
movsl
mov
adc
lcall
xor
xchg
cmp
aas
pop
adc
cmp
sub
or
dec
lds
push
and
fistps
add
lea
add
shrl
and
cs
repz
leave
jns
xchg
sarl
cltd
sub
insl
je
sub
jo
cwtl
sub
testb
fwait
rcl
push
xchg
fldenv
cmp
and
pop
and
adc
cltd
mov
fmuls
xor
mov
pop
loope
leave
jecxz
pop
scas
xchg
fiaddl
dec
mov
xor
push
fimuls
cmp
mov
popa
inc
aaa
xor
out
lods
mov
inc
mov
sbb
inc
push
je
aas
ret
or
mov
jo
out
enter
sbb
or
in
stos
or
sbb
insl
js
lock
les
fisubs
stos
das
int
aam
mov
xchg
flds
adc
sbb
sub
std
mov
cmp
dec
mov
cmpsb
add
mov
mov
mov
jg
inc
dec
outsb
and
popa
dec
js
push
pop
paddw
xorb
pop
add
xchg
pop
and
xchg
lahf
lahf
das
aam
rcll
jns
push
mov
shlb
je
daa
lds
into
into
jae
lods
rcr
mov
jne
push
aam
daa
lock
mov
sub
jno
jge
and
push
cmp
mov
pop
fwait
adc
in
and
pusha
add
shrl
sbb
push
mov
ljmp
xchg
dec
lods
pop
pop
call
xor
or
inc
test
cmp
pop
mulb
mov
out
jp
mov
mov
sub
pop
mov
imul
add
dec
testl
mov
dec
dec
dec
imul
xor
adc
int
jnp
int
and
int3
fsubrl
add
or
fsubs
loope
aad
fnsetpm(287
fistps
ja
js
dec
andl
pop
xor
adc
sbb
dec
into
mov
test
aam
inc
clc
fldl
addr16
cmp
mov
sbb
loop
dec
sti
ret
jns
push
jg
jmp
faddl
inc
sti
add
xor
xchg
cld
pop
daa
popl
aam
fidivl
aaa
in
shrb
sub
xor
out
sub
mov
stos
cmp
adc
adc
sbb
aas
lahf
push
das
iret
lods
mov
mov
push
fld
push
test
jns
sti
pushf
shl
inc
cld
stos
jmp
pop
sub
repz
xor
mov
sub
fbstp
sub
dec
jo
push
in
xor
jae
and
mov
sub
push
pop
sub
fldenv
push
xor
ucomiss
sbb
push
call
xor
push
dec
jp
fnstsw
cmp
adc
mov
int3
lret
out
mov
add
adc
rclb
mov
xor
and
xchg
ds
lds
rolb
pop
jbe
stos
jb
xor
int3
stos
fcmove
cmp
sub
cwtl
sbb
aaa
adc
mov
lock
je
adc
dec
sbb
bound
loopne
mov
adc
negb
and
sbb
cmp
bound
inc
push
aas
in
roll
cmc
xchg
movsb
dec
jne
arpl
lods
mov
scas
cmp
lret
pop
pop
sub
mov
or
cmp
mov
xor
jle
mov
mov
movsb
stos
and
mov
mov
int3
xchg
movsb
xchg
push
xchg
aad
mov
leave
xor
adc
fstps
xchg
xchg
pop
adc
mov
or
xor
js
xorb
push
sbb
lcall
sub
push
mov
in
xor
jle
or
lcall
shlb
push
push
mov
in
aas
rcl
dec
jb
insl
loopne
cmpsl
lret
cmpsb
and
repz
dec
jae
mov
lds
addr16
arpl
push
cwtl
enter
sub
xor
fucomip
mov
push
inc
mov
out
scas
scas
adc
test
mov
lret
mov
in
cmp
movsb
movsb
out
orb
movsl
movsl
je
stos
push
dec
loope
add
push
scas
inc
pop
iret
mov
mov
test
cmp
aas
xchg
pop
in
orl
fabs
ds
rcrl
out
and
jae
int3
xor
lock
pop
les
and
sub
cs
rorb
push
cmp
push
add
adc
ret
hlt
mov
push
adc
aas
cs
fucomp
je
cmc
fucomi
push
lahf
xor
loopne
pop
jmp
or
lods
cltd
push
jp
mov
sub
sub
xchg
movsb
test
pop
adc
push
cmp
jo
int3
shll
cmp
lock
sarl
test
lods
call
push
lahf
sbb
inc
divb
iret
sbb
inc
cli
rcl
add
lahf
sub
add
mov
hlt
inc
mov
dec
adc
sub
repz
andb
shlb
jns
test
test
cli
xor
movsl
xchg
icebp
lock
mov
jbe
pushf
outsb
mov
cmp
clc
fisubl
dec
inc
sbb
icebp
sub
mov
decl
xchg
enter
xchg
sub
insl
mov
out
bound
shll
sub
leave
std
mov
xchg
mov
xor
shll
enter
cltd
fsts
test
cmp
sarl
inc
jns
inc
xor
in
adc
lods
or
add
insb
lahf
movl
mov
jl
dec
mov
add
test
bound
test
nop
js
mov
test
bound
mov
xchg
dec
mov
sahf
mov
ljmp
push
dec
inc
sbb
sbb
andb
lret
mov
xorl
cmp
pusha
enter
sub
jno
push
in
fidivrs
int3
or
test
xlat
aas
mov
push
mov
cmpsl
lahf
dec
lret
ljmp
sub
adc
das
data16
pop
loop
sub
and
cmpsl
into
mov
loope
fildl
push
shl
or
imul
movsl
outsb
repnz
stc
and
neg
push
insl
decl
test
adc
jo
cmp
xchg
jge
divb
out
insb
xor
arpl
sbb
inc
aas
jnp
test
mov
push
mov
inc
or
cmp
cmp
sub
xchg
leave
jge
hlt
fnstsw
mov
mov
jmp
sub
sbb
das
and
out
add
jbe
test
mov
or
das
dec
lea
push
inc
andb
lahf
and
lods
xchg
jo
jbe
repz
xchg
fs
ja
dec
in
jbe
jbe
test
xlat
adc
and
mov
pop
fiaddl
ret
imul
insl
sbb
mov
ds
mov
adc
lahf
push
lret
test
ret
jns
pop
addr16
and
js
fstps
stos
xchg
pop
xchg
inc
int3
cmp
jb
stos
movsl
loopne
mov
in
test
fcoms
scas
or
push
idivl
dec
cltd
test
fprem
xchg
dec
sbb
mov
mov
cmp
cs
or
scas
add
pushf
mov
lret
inc
push
imul
hlt
ljmp
mov
cmpsb
lahf
add
pusha
jnp
pop
add
ljmp
rorb
call
aaa
push
scas
mov
mov
repnz
xchg
adc
jmp
ret
mov
idivl
and
ds
sbb
leave
pop
or
movsl
cmp
movl
lcall
insl
loop,pt
aaa
out
cltd
mov
clc
adc
icebp
addr16
mov
neg
adc
cmp
test
int3
imul
cmp
jmp
cmpsb
sarb
pop
pop
mov
lods
fimuls
xchg
es
mov
dec
and
add
xchg
push
cmp
pop
ja
adc
mov
pop
fisubrs
movsl
xchg
lret
cmp
xor
mov
int
shr
pushf
xor
mov
xchg
mov
std
lock
adc
and
xchg
cwtl
cld
lock
pop
dec
mov
mov
stos
or
hlt
and
sub
mov
pusha
cld
mov
mov
jne
test
xchg
inc
xor
out
xchg
inc
and
sbb
gs
add
jmp
sbb
push
cmpsb
xor
push
in
inc
pop
mov
aad
or
mov
mov
es
lods
lods
sub
dec
mov
pop
jne
leave
mov
popf
sub
pop
dec
out
mov
add
push
popf
mov
and
cmp
iret
cmp
add
aam
syscall
idiv
mov
and
jae
pop
cli
cltd
xchg
lods
jns
inc
sub
xchg
adc
rorl
aad
repz
pop
jbe
xor
stc
add
mov
xor
cmp
adc
push
cmpsl
rcrl
int3
jbe
pusha
js
popf
mov
push
inc
enter
sub
iret
movsl
inc
add
xor
sub
jp
cltd
rcrl
rcl
lods
mov
sbb
and
test
adc
hlt
jle
inc
xor
fs
inc
sub
mov
push
cmpl
xor
inc
mov
jp
sub
fmulp
xchg
fs
sbb
dec
push
xor
clc
je
push
push
sarb
or
mov
mov
and
inc
mov
xor
mov
mov
call
pusha
jecxz
fs
or
testl
mov
jle
cmp
lret
sbb
enter
sub
cmp
shll
cmpsb
cmp
scas
mov
mov
or
sbb
push
push
and
mov
test
ljmp
mov
jle
adc
adc
mov
sub
sub
adc
loope
add
retw
xchg
jo
dec
push
jecxz
add
sbb
sub
dec
jl
sarb
mov
popa
or
and
scas
or
push
insb
or
jbe
mov
or
push
fstps
negb
pop
push
ret
pushl
lret
or
xlat
pop
dec
add
ljmp
sbb
cmp
stc
push
pushf
popa
mov
cmp
cmp
cmp
mov
cli
add
sahf
jl
test
aam
cmp
sub
int
push
stos
jmp
arpl
push
xchg
push
pop
into
dec
mov
mov
test
xor
in
mov
sarl
or
cwtl
mov
add
inc
stc
in
adc
js
xchg
insl
cmpsb
notl
add
pop
popf
xchg
mov
ljmp
dec
cmp
xchg
pop
adc
cmp
cmp
mov
shrl
lock
sub
xchg
roll
cli
mov
dec
pop
mov
mov
sub
mov
fisttpl
and
push
fs
in
push
mov
dec
jmp
inc
mov
mov
mov
dec
add
gs
clc
xor
pushf
aam
cmp
mov
dec
dec
xor
aas
fwait
xor
mov
in
data16
pop
sbb
out
inc
jo
call
int
mov
lea
inc
pop
xchg
aaa
lock
mov
aam
dec
xlat
aas
scas
push
mov
lods
stos
cmc
xchg
rcll
jb
push
mov
cmp
pushf
cmpsl
in
add
out
imul
or
leave
inc
mov
and
mov
imul
push
mov
or
inc
test
xchg
xchg
cmpsb
fcoml
sub
jne,pn
mov
mov
lret
jnp
xor
and
push
test
and
jmp
mov
lock
push
push
rclb
imul
arpl
fdivrl
sub
shlb
jge
xor
call
mov
dec
push
ret
mov
xchg
mov
cmp
jl
xlat
xchg
xor
lret
gs
inc
sub
ret
rorb
stos
sub
dec
mov
insb
mov
sub
jecxz,pt
les
xor
shll
xor
mov
adc
out
test
jns
and
fsubrs
mov
lds
cmp
xchg
xor
jns
mov
xchg
mov
fimuls
dec
jmp
insb
mov
dec
push
inc
cmc
pop
js
or
mov
pop
rorl
mov
jbe
sub
ja
xor
inc
or
pop
sbb
sbb
jl
jo
dec
test
roll
xor
in
push
loop
cmp
cli
loop
arpl
sarl
stos
adc
sub
lock
cltd
insb
movsl
fimuls
mov
nop
and
jecxz
sub
imul
xchg
enter
les
inc
andl
pop
stc
push
cmc
cmpsb
sbbl
pop
movsl
mov
lea
test
out
mov
add
inc
insb
inc
push
imul
das
fdivrs
mov
cmpsl
mov
xor
pop
loop
aas
xchg
mov
mov
imul
pop
mov
add
in
pusha
das
mov
out
push
out
addr16
cld
xor
notl
cmp
test
jno
ljmp
orb
dec
dec
jle
out
and
jmp
out
stos
fwait
and
mov
adc
adc
jae
mov
jne
xchg
scas
dec
mov
rorl
dec
sub
popf
and
mov
dec
push
sub
loope,pt
xchg
push
stc
adc
cmp
movsb
int3
cs
in
pop
inc
movsb
les
mov
das
mov
or
mov
fs
and
incb
jne
push
mov
add
cmp
loope
cmp
jns
push
dec
add
sub
mov
test
arpl
out
mov
sub
or
fwait
pop
stos
and
dec
inc
push
dec
mov
jmp
mov
insb
xchg
pop
and
and
mov
mov
fwait
dec
mov
das
loope
push
fmul
fcmovnbe
cmp
scas
inc
stc
rclb
ficoms
inc
subl
mov
shrb
int3
ja
xchg
pop
jbe
mov
xor
push
jl
pushf
sahf
cmp
mov
popa
in
dec
add
xchg
aam
sub
xchg
mov
add
lcall
cmp
sub
or
rcr
mov
dec
mov
ljmp
xchg
addr16
cwtl
pop
test
push
ret
mov
add
sbb
mov
sub
out
outsb
sbb
adc
inc
in
add
std
arpl
lock
dec
cmp
and
out
or
adcb
add
push
aad
dec
ret
mov
or
je
push
cmp
rorb
jmp
mov
jp
and
xchg
adc
in
pushl
fldl
je
mov
push
cmpsl
xor
rolb
push
push
mov
outsb
rorl
out
enter
fucomi
add
add
lahf
xchg
nop
dec
pop
push
ficompl
push
daa
int3
incb
sub
mov
rorb
xor
js
push
cmc
test
mov
jo
mov
mov
inc
cld
ret
inc
in
add
pusha
xchg
inc
xchg
dec
xchg
lods
xor
addr16
add
dec
or
adc
xchg
int3
data16
andl
jno
addr16
mov
scas
pusha
test
fimuls
rcrl
pop
sti
iret
stos
pop
jle
das
imul
sub
loopne
push
sahf
dec
inc
xchg
cmp
out
inc
adc
adc
outsb
add
xchg
pop
lcall
sbb
cli
pop
icebp
lahf
add
mov
inc
add
sti
mov
xor
and
pop
mov
xchg
pop
mov
jno
inc
lahf
sub
cmpsb
xor
inc
shlb
add
dec
sti
pop
fists
push
jle
sub
lea
xor
ss
std
or
fstp
inc
inc
and
cmpsl
mov
adc
lds
int
call
sub
cli
mov
sbb
push
jae
stos
fldenv
loop
jne
leave
xor
or
notb
nop
pop
scas
test
repnz
add
into
jg
push
and
and
scas
xor
lods
xchg
sbb
shll
adc
jmp
jo
fdivs
and
jb
loope
xchg
and
mov
add
and
jmp
dec
push
cmp
pop
loop
cwtl
jo
inc
inc
shll
jecxz
pop
mov
and
imul
stos
adcl
out
int
or
out
inc
sbb
lret
addb
fsubrl
cld
adc
push
mov
ret
inc
cwtl
pop
inc
inc
xchg
mov
mov
movsb
jg
cs
insl
das
hlt
and
call
in
xor
js
inc
xor
mov
cmp
pop
xor
mov
and
add
das
mov
jmp
mov
shlb
mov
loop
pop
fs
std
mov
rorl
dec
andb
aad
dec
or
jnp
pop
adc
xchg
aad
push
jl
jb
push
pop
xchg
ret
imul
mov
sbb
or
in
jmp
into
mov
sub
add
mov
xor
pop
fs
dec
or
xor
clc
stc
call
hlt
fs
mov
mov
enter
sub
in
mov
mov
sbb
popa
lahf
out
xor
xchg
pushf
nop
cmp
mov
push
inc
adc
dec
pushf
pop
cmp
repnz
mov
js
jae
mov
inc
push
mov
stos
push
mov
imul
sub
loop
enter
pop
mov
adc
and
push
mov
clc
test
lcall
add
aas
mov
mov
xchg
enter
in
mov
or
sahf
cmpsl
inc
cmp
mov
jg
sbbb
sahf
sbb
sbb
jb
repz
in
jmp
repz
addr16
jne
jae
sub
call
shll
fs
xor
pop
std
add
loop
adc
jbe
jmp
cmp
int
xchg
dec
pop
mov
mov
pop
adc
into
cmp
or
mov
fmull
push
shll
decl
mov
jp
mov
jbe
pop
fisttpl
cli
ja
sub
pushf
aam
cmp
cld
fsubrs
xor
fs
out
sub
xor
or
cli
into
std
lock
sub
push
xchg
mov
je
test
clc
inc
rorb
mov
dec
cmp
pop
into
inc
shr
pusha
adc
loopne
loop
test
push
pop
sub
mov
push
pop
xlat
ret
or
repnz
dec
jmp
cmp
push
aas
testl
push
pop
out
or
cmpsb
fs
pop
shlb
inc
adc
iret
fidivrl
sub
sub
repnz
mov
push
mov
cmp
xlat
inc
xor
mov
aad
insb
sub
imul
test
jmp
int3
xchg
xchg
cmpsl
adc
enter
adc
orl
inc
pop
scas
or
pop
adc
stos
jmp
xor
add
mov
fistpll
xor
mov
mov
mov
leave
jo
nopl
sbb
sbb
es
idivl
roll
and
and
shll
sti
mov
mov
dec
or
ds
jb
sbbl
popf
push
inc
dec
inc
stos
mov
movsb
mov
fbld
cmp
jne
jl
xchg
sub
or
sub
xchg
popa
inc
xchg
pop
fldl
xor
adc
push
jae
loopne
jge
push
sub
icebp
pop
mov
cmp
pushf
push
aam
pop
sbb
stos
aam
pop
cmp
out
test
dec
or
lcall
and
jae
ds
jl
lahf
add
pop
sub
stc
xchg
js
lods
loopne
lods
cld
add
fdivl
push
push
subb
test
mov
pusha
pushf
aam
cmp
arpl
ja
adcl
imul
xchg
fcoml
pop
adc
jb
repnz
jbe
mov
xor
jno
stos
mov
rcrl
dec
mov
outsl
cmp
sbb
loop
mov
in
lods
loopne
xchg
and
mov
scas
lret
out
loopne
mov
push
movsl
out
mov
and
add
jno
inc
jmp
call
sbb
andb
and
xor
jle
jge
sbb
sub
push
xchg
ds
int3
shlb
mov
hlt
adc
pusha
scas
clc
cs
xor
fidivrs
dec
imul
in
out
andl
inc
scas
adc
sub
and
pusha
jp
push
outsb
adc
push
jecxz
aam
repz
ja
je
adc
repz
pop
lds
mov
and
push
push
mov
cltd
fwait
into
dec
addr16
sub
mov
icebp
jmp
orl
shr
pop
jb
and
stos
cmp
mov
leave
mov
dec
in
mov
mov
ret
rolb
imul
cmp
das
pop
stos
pop
inc
mov
inc
js
cmp
gs
mov
xor
int
call
push
jg
pusha
pop
shlb
jb
cmp
jb
into
stc
mov
push
mov
xor
adc
jmp
mov
out
pop
push
test
and
pop
pop
cmp
jge
lock
mov
imul
sub
lock
add
adc
das
fidivl
int
cltd
or
or
outsb
pushf
xchg
adcb
sub
movsbl
out
adc
push
xchg
rorb
mov
adc
cmpsb
mov
shl
fs
push
sbb
adc
mov
daa
mov
pop
jbe
push
jae
pusha
fcoml
mov
hlt
push
mov
add
data16
jmp
leave
pop
cmp
fidivrs
lock
cmp
push
cld
je
sub
adc
add
pop
mov
in
fcoml
cltd
hlt
sub
xchg
ficompl
mov
nop
jnp
sarb
int3
ret
hlt
repz
sahf
cmp
mov
int
sbb
dec
push
ljmp
fwait
xchg
lcall
popa
aaa
je
lcall
sbb
jl
and
jg
cli
into
lock
or
mov
adc
push
inc
fisubl
mov
cmpb
and
xchg
int3
push
mov
or
and
jp
and
dec
flds
xor
mov
les
test
push
sbb
mov
cld
mov
jns
mov
lds
inc
lcall
cld
neg
aas
testl
mov
mov
je
inc
jp
ficomps
cld
in
push
call
shrl
mov
insb
xor
das
movl
inc
in
imul
dec
and
inc
or
lock
pop
in
xchg
iret
sub
push
aam
cltd
data16
cli
ret
cmc
mov
xor
jb
shlb
mov
jae
fcmovbe
inc
pop
in
mov
inc
stos
xchg
ret
pop
pop
dec
addr16
in
fistpl
pushf
pop
mov
jg
rcll
adc
push
inc
es
cmp
mov
sub
cmp
nop
testb
fs
pop
fdivs
and
cmpsl
popa
insl
roll
sbb
loop
arpl
mov
dec
sbbl
scas
into
test
dec
pop
jne
xchg
sbb
sub
loop
movntq
out
enter
jno
ficoml
push
mov
imul
or
dec
mov
movsb
test
xor
ror
mov
leave
repz
into
aaa
mov
mov
mov
scas
testl
rcr
cmp
clc
mov
aam
push
out
push
fstpt
and
xor
fucom
mov
mov
xchg
push
ret
lds
sbb
andb
clc
ss
subb
scas
ss
pop
dec
insb
int
fbstp
lock
fnstcw
hlt
mov
lea
or
pop
jp
jae
out
mov
out
call
sub
fcmovu
jb
pop
lea
andl
xorl
push
sbbb
testb
push
add
dec
aam
or
sti
and
push
sbb
icebp
ds
iret
rol
sbb
fsubl
addl
jns
imul
or
nop
popa
inc
lahf
out
adc
lahf
mov
and
jp
cmpsb
stc
mov
fstpt
ja
negb
setbe
scas
es
inc
push
stos
loopne
xchg
roll
inc
pop
push
or
lret
test
lods
ss
or
jmp
pop
test
push
bound
imul
cltd
jbe,pt
mov
fisttpll
cmpsb
cmpb
movsb
adcb
mov
jl
mov
jne
ss
cmp
test
popf
cmc
loopne
xchg
inc
je
lahf
test
mov
fst
add
sbb
pop
or
out
mov
test
inc
or
in
fisubl
mov
pushf
ds
mov
push
es
arpl
sbb
mov
pop
mov
mov
ss
and
hlt
or
cmp
test
notl
dec
dec
or
popf
hlt
imul
adc
adc
jae
iret
enter
repz
das
clc
sbb
test
mov
test
leave
mov
or
pushf
inc
or
jl
cmp
dec
and
out
add
leave
mov
stc
xor
push
enter
cmpsl
subb
mov
das
ficoml
hlt
mov
into
fwait
sahf
inc
outsb
mov
je
pop
jnp
lea
pushf
ja
mov
sub
adc
lds
and
test
out
out
sbb
xchg
mov
add
out
cmp
lds
pop
mov
rcr
loop
mov
jno
inc
mov
in
xlat
and
repnz
sbb
fs
add
dec
js
out
xchg
dec
rol
lret
negb
inc
sub
addr16
shll
popf
sarl
add
and
jb
xor
lods
aas
adc
mov
pop
es
adc
insl
push
xchg
push
pusha
imul
add
movsl
imul
push
jmp
push
inc
jnp
js
pop
pop
mov
jp
mov
adc
sbb
cmp
sbb
hlt
adc
int
xchg
mov
icebp
cmpsl
jle
mov
push
sbbb
mov
add
or
lcall
dec
jecxz
rorb
add
loope
fldenv
jbe
inc
dec
push
jnp
testl
xchg
inc
or
cmpsl
cli
mov
fs
mov
mov
and
mov
gs
mov
shrb
dec
cwtl
iret
push
add
movsb
pop
pusha
cmpsb
xor
pushf
cmp
sbbb
mov
inc
cmp
test
xor
xchg
push
push
gs
fiadds
mov
pop
push
sbb
movsb
adc
addl
push
fcoms
dec
sbb
or
push
rcr
lcall
rolb
in
mov
pop
subl
das
dec
not
mov
dec
mov
call
fisttpl
popa
testb
inc
cmpsb
test
popa
add
mov
push
mov
clc
std
aas
and
push
test
mov
xchg
ds
sbb
sarl
mov
push
insl
sub
mov
mov
pop
pop
movsl
mov
popa
fiaddl
scas
adc
and
dec
imul
mov
sahf
push
int3
fs
psllq
jg
mov
jp
stc
jbe
cmpsl
push
adc
push
inc
repnz
cmp
pop
inc
push
out
pop
mov
popl
mov
test
ja
loope
inc
inc
adc
pop
push
outsl
sbb
xchg
and
mov
addr16
or
xchg
and
add
sar
rcrb
stc
mov
pop
push
ds
arpl
add
jne
stos
sbb
xchg
std
call
sub
test
jle
outsl
imul
ljmp
mov
sarl
leave
and
int
addr16
icebp
inc
and
fadds
data16
test
fs
sahf
fucomi
pop
popa
adc
cmpb
jno
add
pop
out
and
in
ja
scas
push
dec
pop
jno
lock
push
pop
xchg
adc
jecxz
inc
or
cmc
xorl
dec
arpl
mov
jp
arpl
shrb
and
mov
out
sbbl
sub
cmc
cmp
dec
sti
aad
xor
addl
pop
adc
sbb
xor
es
ss
inc
lret
or
or
jecxz
iret
adc
sub
mov
js
hlt
fisubrl
gs
sbb
xchg
scas
sbb
xor
loop,pn
fimull
xchg
cltd
adc
ja,pt
loopne
test
mov
bnd
inc
mov
out
incb
shrb
add
mov
int3
repz
jne,pt
fadds
fistpll
ljmp
inc
sbb
sub
repz
mov
rclb
addb
push
push
daa
dec
xchg
je
cli
stos
cmp
xchg
xor
add
sbb
shlb
fisubrs
rclb
push
lods
sbb
scas
inc
bound
leave
xchg
sub
adc
daa
lcall
mov
jb
insl
call
aad
sub
xor
or
push
in
xlat
lods
inc
or
out
xchg
test
lea
add
popa
push
scas
je
aas
sub
xorb
mov
lcall
pop
cltd
pop
adc
pop
xchg
inc
dec
inc
loope
pop
mov
fbld
mov
out
cmp
loope
xchg
lods
cmp
das
cwtl
jbe
and
pop
xchg
mov
loope
push
xlat
xor
and
leave
inc
outsl
aaa
mov
sbb
cmpsb
mov
mov
fs
repz
orb
jmp
push
and
cmp
xor
lea
sarl
fistpll
mov
jmp
call
xor
push
pop
imul
inc
movsb
xor
sbb
cs
mov
push
sub
dec
push
test
testl
cli
roll
adc
xchg
sub
cmp
cmp
and
inc
jecxz
sti
repz
cmpsl
mov
inc
mov
es
divb
pusha
or
jg
mov
cwtl
repnz
test
aaa
mov
cmp
dec
xor
cmp
cmp
mov
mov
sub
xchg
and
lret
ret
inc
cmp
inc
push
xchg
xchg
mov
pop
mov
jecxz
push
mov
into
pushf
sarb
aas
call
lock
sub
pop
mov
sbb
movsl
fsubrs
int3
push
ret
inc
and
pop
jbe
inc
je
insb
jge
fwait
outsb
xchg
inc
add
fcmove
xchg
fdivs
out
inc
adc
jl
inc
ds
test
cmc
pop
cmpsl
mov
sub
adc
movsb
pushf
xor
xchg
fs
popa
fdivr
int
adc
dec
cmc
cmp
ss
scas
jae
xchg
lds
sbb
out
call
cltd
and
push
sti
rclb
testb
shll
sti
adc
int3
pop
mov
inc
enter
or
hlt
out
dec
xchg
cld
std
sbb
jecxz
rcll
lcall
cmp
xchg
insb
mov
and
imul
mov
pusha
into
ret
loope
xor
xchg
add
inc
mov
push
add
mov
sub
add
add
sub
sbbb
pop
and
outsl
mov
mov
int3
stos
ja
inc
lret
jge
jge
mov
or
iret
xor
and
add
pop
scas
enter
add
jno
hlt
or
cs
jo
ds
cmpsb
fst
push
jnp
adc
push
pusha
adc
sub
xor
out
enter
das
aaa
push
add
fidivrs
jg
and
xchg
fildll
movsb
cs
popa
add
cld
dec
dec
ljmp
or
popl
xor
hlt
cmp
pop
push
mov
cmove
pop
inc
sbb
gs
and
or
jg
cltd
or
popf
stos
cmp
imul
out
pop
jmp
pushl
shrl
xor
ljmp
push
pop
out
push
jge
xchg
cli
cmp
add
das
dec
push
imul
pop
push
or
cmp
lea
jno
and
movq
shll
jb
lock
xlat
add
negl
cmovno
cmpsl
lret
ja
push
pop
addr16
sub
adc
je
bound
or
idiv
push
inc
out
rolb
stc
ja
aad
pop
cmp
adc
rolb
inc
sub
pop
pop
nopl
es
jle
pop
pop
nop
mov
inc
rcl
cli
sub
cmp
in
popf
pop
lock
pusha
dec
bound
adc
inc
mov
daa
mov
into
push
jge
mov
loop
mov
dec
insb
pop
adc
mov
rcrl
mov
sahf
or
mov
and
les
or
in
mov
flds
subb
sub
mov
mov
test
cmp
ja
hlt
push
adc
push
adc
arpl
xchg
mov
adcl
out
insb
notl
cli
rcrl
xor
or
cltd
push
popa
jmp
imul
std
mov
and
insb
loope
pushf
icebp
jl
lds
dec
or
ja
data16
jb
mov
mov
mul
movsl
leave
xlat
mov
or
add
pop
push
or
inc
add
fimuls
and
or
mov
adc
mov
in
lcall
mov
pop
stc
sbb
xor
lret
add
mov
mov
pop
sahf
repnz
ds
mov
jecxz
out
xchg
fcoms
ja
mov
mov
mov
shrb
mov
hlt
push
cmc
mov
and
inc
cmp
push
lret
mov
ret
mov
fwait
lds
add
mov
ret
mov
dec
ss
push
cmpsb
dec
cltd
jge
test
dec
in
ja
xchg
rol
lahf
fs
xor
pop
loop
pop
cmp
sub
mov
es
pusha
jo
adc
or
jp
jb
testl
and
imul
adc
shrl
jnp
and
pop
adcb
nop
aam
repz
or
ret
mov
jbe
rorl
fistpll
out
mov
sti
mov
mov
sbb
add
lahf
mov
add
adc
bound
lret
adc
sbb
mov
xor
dec
mov
fcompl
jl
test
jnp
cmpsl
xchg
inc
mov
adc
lahf
cmpsb
jl
in
xor
inc
or
in
or
pop
push
push
stos
daa
mov
in
daa
in
and
int
icebp
mov
mov
call
ret
and
stc
arpl
pushf
leave
inc
loop
xor
pop
mov
pop
mov
xchg
lcall
fstp
mov
cmp
push
sbb
dec
sbb
pop
fcoml
lods
out
pop
insl
mov
loopne
das
pop
lcall
fists
cltd
inc
fsts
rorb
in
mov
inc
xor
insb
adc
and
mov
cmc
inc
add
or
std
xor
sub
xchg
adc
mov
out
and
insb
sub
cli
and
jns
loop
mov
cmp
xchg
loope
jbe
mov
fidivrl
cmc
out
add
mov
add
push
shlb
mov
push
jo
pop
imul
dec
xor
lret
xor
add
and
jge
cmp
gs
movsl
in
lea
mov
imul
inc
add
das
cltd
insl
adc
out
push
xchg
xlat
test
push
test
pop
xchg
fs
je
in
mov
fidivrs
adc
dec
push
jne
fs
adc
push
xor
lock
and
jge
clc
xchg
int
adc
cld
das
mov
es
add
stos
dec
add
mov
and
lds
push
ficoml
cltd
repz
in
bound
mov
pop
mov
cmp
insb
ret
mov
sti
test
call
loope
mov
jb
add
icebp
ljmp
js
icebp
jmp
mov
mov
test
stos
sbb
cltd
ja
out
adc
leave
rorb
xor
mov
jae
xor
xchg
mov
push
add
test
aam
cwtl
xchg
repz
mov
aam
sbb
out
js
add
nop
xor
jmp
icebp
push
inc
bswap
xor
inc
ret
xor
cmpsb
test
fsubrl
call
lods
movsb
pop
jmp
enter
aas
dec
int3
jno
sub
notb
push
push
xchg
test
rcl
mov
and
dec
mov
dec
lahf
dec
fsts
push
add
and
fwait
or
in
fmull
pop
jb
and
inc
jb
vdivss
test
rcrb
sbb
hlt
in
notb
in
test
stc
or
ror
push
xchg
push
ja
add
push
dec
push
fs
xor
enter
std
sub
arpl
insl
ds
push
ds
fs
jp
sub
xor
decl
mov
sub
mov
stos
fstps
dec
outsb
jo
stos
sbbb
push
cmp
scas
sti
cmp
pop
fstl
test
mov
cltd
leave
xchg
sbb
xchg
inc
mov
dec
adc
and
xchg
xchg
inc
push
pop
popa
addb
xor
jnp
sbb
sarl
pop
pushf
aaa
inc
sbb
xchg
inc
jecxz
sbb
adc
push
cmc
aaa
add
pop
pop
inc
push
scas
sti
push
ja
cmpsl
sub
data16
lods
test
jle
pop
icebp
nop
sub
sbb
push
sbb
or
loop
sub
pushf
jl
push
cmc
stos
sbb
mov
xchg
les
mov
js
loopne
das
jmp
mov
test
adc
push
dec
or
adc
and
mov
adc
fwait
push
mov
iret
mov
inc
gs
cmp
dec
lds
test
insb
and
dec
inc
ret
push
xchg
push
pop
dec
stos
jmp
cmp
out
aad
inc
fsubrs
mov
fidivs
js
rcll
xor
pop
jg
mov
cmp
xor
fdiv
test
xchg
imul
adc
add
cmp
out
dec
jns
call
cmpsb
fstpt
fsub
loop
dec
add
xchg
jo
mov
iret
stc
inc
pusha
lods
lock
repz
pop
sub
jle
call
adc
fabs
cmp
cs
lcall
lds
jmp
test
cmp
sbb
xchg
dec
jns
loop
test
mov
mov
mov
and
push
lcall
mov
out
and
mov
cmp
ret
mov
fs
cld
and
fdivrs
into
pxor
or
inc
outsl
repz
mov
xchg
aas
popl
in
pop
testb
je
push
cmpsl
lahf
ficompl
lret
in
in
ret
mov
and
iret
inc
daa
je
lods
mov
or
shll
repz
sub
pop
rorb
mov
ret
out
xchg
sbb
mov
out
cmc
xchg
dec
ljmp
mov
cmc
movsb
aaa
test
repz
jno
mov
mov
ja
repz
xchg
fwait
mov
pop
inc
add
jle
push
or
stos
xchg
xchg
jmp
clc
xchg
and
add
fs
lock
in
xorb
mov
sub
jecxz
mov
gs
xchg
or
pushf
call
or
call
sti
clc
adc
add
inc
decb
add
andl
xlat
jb
lahf
bound
pop
popa
sub
subl
shr
push
mov
xor
pop
adc
rol
sti
stos
pop
pop
movsl
push
icebp
repz
xor
into
sbb
push
lea
sub
xchg
mov
dec
stos
xchg
addl
add
xchg
mov
push
push
in
cs
dec
or
movsl
mov
andl
sub
push
aas
ja
or
pop
out
lods
scas
int
cmpsb
pop
pop
out
dec
and
sbb
push
rcll
testl
mov
packsswb
shrb
dec
les
and
dec
inc
xchg
mov
pop
inc
sub
pusha
cmp
popf
loop
outsl
mov
call
out
arpl
xlat
fs
std
hlt
mov
sarb
outsb
and
shll
fnsave
mov
out
mov
xchg
xchg
and
rolb
inc
mov
daa
clc
pop
and
mov
push
into
push
inc
mov
sub
aas
fsts
loop
pusha
or
pusha
push
cmc
cmpsb
mov
mov
arpl
mov
idivl
push
cli
pushl
sbb
add
mov
test
push
sub
arpl
les
push
inc
mov
xorl
push
repz
clc
orl
lods
adc
sbb
stc
dec
sub
mov
sub
xor
adc
shll
dec
ret
dec
push
mov
vmwrite
outsl
mov
add
imul
and
hlt
fcoms
test
call
daa
or
adc
push
xor
add
xchg
lods
mov
pop
mov
and
mov
mov
cmpb
ja
ja
pop
mov
icebp
mov
shll
mov
pushf
mov
adc
popa
mov
roll
push
or
mov
mov
mov
cmp
pusha
cmp
push
mov
sbb
fsubp
imul
movsl
push
leave
mov
in
es
out
into
fisttps
push
ds
pop
test
add
mov
sbb
ljmp
