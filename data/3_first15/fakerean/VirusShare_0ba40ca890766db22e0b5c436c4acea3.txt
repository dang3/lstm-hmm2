push
mov
push
push
push
mov
mov
xor
mov
div
andl
push
mov
sub
mov
mov
mov
and
cmp
jne
mov
and
test
jne
mov
xor
div
mov
add
sub
jmp
mov
and
xor
push
pop
div
mov
sub
shl
mov
mov
mov
mov
sar
mov
or
sub
mov
xor
mov
incl
roll
mov
inc
cmpl
jb
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
movl
mov
imul
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
xor
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
mov
push
push
mov
call
pop
pop
cmp
je
mov
mov
xor
push
pop
div
push
pop
mov
shl
mov
xor
push
pop
div
push
pop
sub
push
pop
sar
or
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
imul
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
sar
or
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
push
call
pop
pop
leave
ret
int3
int3
cmpsb
xchg
sbb
pop
and
sub
roll
cwtl
in
lea
pop
insb
sub
in
xlat
push
push
sbb
push
mov
test
jle
addl
or
imul
add
in
cwtl
adc
les
inc
inc
push
adc
mov
and
fdiv
adc
jg
movsl
aad
pop
cmp
test
loope
sbb
xchg
bound
or
mov
divb
adc
mov
xchg
pop
jge
cli
pop
dec
addr16
loopne
lcall
movsl
js
or
xchg
cs
add
sbb
movsl
shr
adc
sub
push
and
dec
xchg
test
xor
sbb
int
mov
jmp
out
jb
mov
push
pop
shlb
popa
push
push
addr16
jg
test
adc
movb
rolb
cmp
lret
adc
inc
test
popa
jl
repz
inc
mov
mov
loope
add
shrb
xchg
loope
dec
out
notb
dec
pop
lahf
xlat
add
testb
inc
push
lds
pop
iret
cmp
inc
sbb
xlat
sbb
xchg
xchg
jno
jle
jp
into
or
scas
or
xchg
xor
and
mov
jp
inc
cltd
inc
or
jnp
mov
std
jbe
dec
xor
sbb
lret
std
out
dec
mov
sub
shr
push
ljmp
dec
rclb
popa
adc
js
sub
mov
ljmp
call
lret
lcall
jp
ret
jp
cmp
jns
pop
xchg
decb
ret
sub
je
dec
ret
mov
int
aaa
js
pop
push
fwait
cmpl
jbe
mov
cwtl
lahf
jg
push
or
dec
xchg
jae
xor
mov
pushf
xor
push
outsl
cmpsb
cmp
xor
sub
dec
cwtl
mov
pop
push
push
mov
jecxz
sti
xlat
jns
cwtl
and
repz
fstpl
aam
fnstenv
sub
push
mov
sbb
push
lcall
aaa
cwtl
xchg
jno
xchg
jb
mov
mov
test
in
dec
lahf
or
and
loope
mov
mov
mov
addl
pop
sahf
insl
aam
xchg
fcompl
add
dec
ffreep
hlt
adc
sub
jl
out
or
fs
rcll
jge
lds
add
rol
push
push
pop
ljmp
dec
in
lret
shl
fisubrl
sbb
mov
mov
inc
cmpsl
pop
xor
sbb
les
cmpsl
repnz
cwtl
call
cmp
outsb
dec
mov
orl
mov
or
test
outsb
dec
test
push
ja
push
jb
lea
dec
push
lock
or
adc
hlt
test
jg
sub
mov
add
sub
mov
mov
sbb
mov
mov
add
mov
mov
xor
or
jp
inc
ja
push
jmp
sar
in
xlat
xor
rol
jne
push
add
dec
cmp
jg
ds
push
lods
pop
fcmovne
into
pusha
shr
cmpsl
in
jg
stos
es
lea
push
sbb
or
xchg
sub
sub
stos
sbb
mov
mov
mov
inc
adcb
push
and
test
addr16
in
scas
push
js
or
dec
jno
stc
sar
mov
shlb
sub
cmpsl
adcb
and
pusha
test
xlat
repnz
jmp
xchg
xor
sbb
inc
rol
addr16
dec
or
hlt
sbb
fidivl
pop
xchg
xchg
cmp
push
fs
mov
movsl
outsl
flds
pop
sub
cwtl
push
into
cmpsb
push
adc
add
pusha
aas
out
lahf
je
in
and
in
mov
addb
dec
or
shlb
in
ja
jl
jae
test
mov
loopne
cmp
and
mov
insb
push
sti
xor
roll
sbb
add
test
pop
cmpsb
imul
fwait
cmpb
out
rorl
gs
inc
mov
les
jnp
repnz
lret
lret
sbb
xchg
xchg
mov
mov
nopl
outsb
push
ja
xchg
iret
jg
xor
pop
push
dec
push
push
repz
popf
out
pop
enter
jbe
test
jae
fsubrs
cs
scas
push
inc
xchg
pop
and
nop
and
pop
pop
and
jae
ficoms
pop
les
mov
testb
pop
cmpsl
mov
les
cmp
daa
dec
add
rorb
jo
nop
pop
fs
inc
pop
fistl
adc
bound
cmp
jecxz
sub
fldl
or
nop
rorb
xchg
scas
or
pop
imul
push
or
aaa
test
pop
adc
xor
xchg
adcb
orl
mov
imul
mov
insb
lahf
test
jne
mov
cmp
mov
pop
inc
xor
push
and
arpl
std
movsl
xchg
inc
in
bound
jl
add
shr
out
mov
mov
out
enter
scas
cli
push
mov
inc
test
and
mov
lods
xor
pop
cwtl
mov
cmp
out
rclb
inc
xchg
pop
int
mov
mov
pop
mov
mov
movsb
pop
outsl
ljmp
cmc
dec
xchg
pop
mov
adc
test
lds
pop
mov
jecxz
jle
or
add
aas
nop
inc
push
loopne
mov
dec
test
std
sbb
enter
mov
sti
ljmp
cmc
dec
xor
xor
xor
rol
dec
fdivrp
and
jo
xchg
pop
jae
out
dec
sub
and
jecxz
push
in
jl
adc
stos
pop
cmp
lock
test
into
push
and
or
mov
repz
pop
sub
mov
pop
and
add
sub
xchg
std
orl
xor
xor
pop
lahf
xor
insb
mov
out
jno
lahf
out
roll
jns
imul
mov
adc
lods
imul
jno
movb
xchg
ljmp
fmull
and
jnp
xor
les
cli
jnp
stc
ss
fmull
lret
popf
inc
pop
push
xor
xchg
sub
shll
jp
push
sbb
xchg
xor
push
cmpsl
pop
sbb
inc
lahf
xor
mov
gs
adc
call
lret
xchg
inc
movsl
xchg
mov
xchg
mov
mov
repz
cmovo
in
repz
cmpsb
lret
mov
repnz
push
in
nop
jl
and
jno
sub
loop
pop
sub
in
out
push
or
insb
lea
mov
xchg
fs
sahf
ret
addl
xor
pop
leave
jmp
cmp
sbb
in
lods
inc
pop
rcll
push
lock
mov
pop
fcmovb
and
mov
xorb
movsb
iret
or
mov
dec
jge
enter
or
cmpsb
xchg
xor
test
add
and
add
lahf
sub
jmp
or
std
sub
sub
adc
mov
into
popf
mov
mov
imul
pop
sbb
out
ja
cmp
jle
imul
iret
arpl
lock
mov
aaa
outsl
pusha
shlb
addr16
mov
pop
pushf
add
mov
sbb
inc
add
fists
jle
fsub
out
icebp
movsb
xor
aad
or
and
clc
xchg
out
movsl
mov
pop
sahf
inc
xor
jne
xor
and
test
repz
or
sbb
aas
push
je
rolb
scas
and
mov
mov
cld
sub
jo
call
popf
outsl
cmp
mov
adc
js
gs
xchg
rcll
decl
jns
loopne
and
and
mov
mov
lahf
clc
lret
push
cltd
test
jl
lea
inc
pushf
sar
call
xchg
test
cli
jae
sub
pop
xchg
jl
adc
popf
add
scas
cmpsl
sub
push
and
aam
xchg
cmc
lea
das
jo
mov
pop
pop
push
xchg
push
xor
pusha
cmp
lret
sub
push
insl
rcl
mov
jbe
aad
pop
stc
jo
cs
rcll
xor
je
cmp
insl
xor
inc
inc
push
xor
push
xor
cli
das
movsl
scas
and
cmp
mov
push
mov
pop
data16
add
cmpb
add
outsl
testl
stos
data16
sbb
adc
aaa
dec
pop
xor
inc
cmp
fld
mov
lfs
pop
fiaddl
add
mov
aas
and
rcll
xchg
loopne
call
xor
mov
adc
fistpll
dec
fnstcw
call
shrl
mov
mov
outsb
lock
pop
imul
cmp
rorb
stos
jo
push
jb
or
jb
mov
fiaddl
enter
fs
lret
push
push
mov
loope
push
jle
ds
mov
out
mov
and
cld
adc
mov
ret
or
mov
xchg
inc
arpl
and
xor
in
jne
popf
fldt
sar
sbb
or
mov
mov
cmpsl
xor
sub
pop
jnp
stc
es
lea
xchg
mov
jb
out
inc
push
inc
aaa
push
cli
push
in
jle
jmp
jecxz
je
aad
outsl
in
and
mov
mov
ljmp
push
insb
add
cmpb
jno
and
add
sub
xor
pop
test
mov
cmc
jge
loope
pop
inc
dec
inc
or
push
dec
pop
cmc
repnz
rcl
arpl
push
push
jp
inc
lahf
fcoms
pop
ficoms
out
pop
push
addl
add
inc
stos
mov
jecxz
cld
popf
iret
jmp
pop
xchg
mov
xor
push
mov
inc
fimuls
sub
stc
add
outsb
mov
add
cld
icebp
and
rep
shl
jo
rcrb
mov
movsb
pusha
add
adc
ljmp
das
add
dec
std
test
lea
xchg
xor
xchg
fisttpll
test
xchg
cltd
lock
clc
nop
xchg
jecxz
sbb
dec
push
xchg
sub
por
mov
and
aas
aas
test
icebp
sbb
xor
shlb
mov
add
movsb
xlat
data16
xor
data16
sbb
cmp
nop
adc
in
es
mov
leave
hlt
loop
out
xchg
mov
dec
sub
mov
into
and
sbb
xor
out
mov
fs
icebp
shlb
scas
pop
jle
and
cli
imul
stos
pop
imul
add
and
enter
add
adc
test
push
dec
aad
fucomip
sti
call
jle
xor
and
aaa
fnsave
push
in
cmp
push
mov
jecxz
jns
dec
mov
repz
gs
fcoml
mov
dec
xchg
jmp
aam
pop
mov
push
adc
mov
mov
jnp
inc
dec
jmp
mov
add
cld
clc
in
xor
movswl
sahf
or
push
int
sub
lret
shll
jne
rclb
jmp
insb
stos
insb
stos
jne
imul
jl
movsb
cmpsb
cmp
pop
mov
fists
pop
sbb
out
xchg
aas
test
fnstenv
clc
test
inc
jmp
mov
lcall
ror
mov
popf
inc
hlt
stos
xchg
add
sbb
mov
lret
je
pop
lods
jbe
and
jns
jge
xchg
js
sarb
jg
cwtl
in
sub
add
push
cmp
jmp
push
mov
cmpsb
addb
inc
mov
clc
js
movsl
shlb
aam
iret
mov
rolb
sub
push
cmpb
data16
and
adc
scas
cmp
jl
fadds
movsb
xor
fsubr
iret
in
jno
or
call
ret
fwait
cli
movsl
jecxz
out
rolb
in
mov
push
mov
add
ss
test
push
xor
adc
and
ret
xchg
imul
jbe
ja
jge
movsb
mov
je
lret
and
jmp
aam
sti
jmp
fildll
xchg
add
fwait
negl
mov
inc
cmpb
loopne
addr16
imul
mov
aas
insl
xchg
repnz
and
adc
repz
inc
push
or
jle
lcall
imul
mul
inc
sbb
call
std
pop
dec
sub
lcall
lock
fdivr
icebp
stos
out
push
out
cmovge
fnstsw
popf
inc
mov
cmpsl
dec
popa
and
stos
int3
fdivrl
scas
repnz
sbb
mov
adc
aas
jecxz
sbb
push
loopne
fldln2
sbb
or
lahf
xor
lods
or
shll
sbb
sbb
pushf
jae
inc
xchg
pop
cltd
push
test
mov
movsl
scas
in
or
stc
cmpsl
jne
add
jge
mov
mov
loop
mov
out
jae
movsb
fadds
add
stos
lret
sar
stos
fcomps
inc
inc
mov
mov
test
movsl
mov
or
mov
dec
sbb
mov
sub
fcompl
cmp
adc
cmp
in
mov
adc
lods
repnz
leave
jl
cmp
hlt
adc
loope
sbb
dec
add
xchg
mov
mov
ja
ss
sbb
jg
insb
push
es
jmp
jo
test
test
jle
cmp
dec
xchg
sbb
in
pop
xchg
mov
leave
rorl
dec
push
add
and
fnsave
sahf
popa
add
jo
sbb
cld
mov
xor
leave
inc
mov
mov
mov
pop
jecxz
nop
into
scas
insl
pusha
movsb
psllw
mov
icebp
sub
add
or
jecxz
push
jle
sbb
adc
pusha
ljmp
push
pop
into
inc
jmp
sbb
cmpsl
dec
mov
pop
adc
pop
mov
push
mov
sarl
test
mov
mov
lcall
fadds
inc
cmp
xor
fidivl
mov
cmp
shll
sbb
and
cs
sti
fsubrl
sub
lock
aas
sti
inc
js
add
mov
movsb
ljmp
xorb
ja
xchg
fdivrs
mov
jg
xchg
add
out
popa
leave
mov
xchg
jmp
add
lods
pop
jno
loop
fnsave
inc
xchg
mov
xchg
iret
outsb
cmp
aad
push
rorl
cmp
pop
arpl
or
cmp
push
xlat
adc
push
sti
xor
sub
adc
lcall
loop
jge
hlt
push
lcall
pop
and
cwtl
or
fcmovb
pop
sub
and
rolb
outsb
pop
inc
outsl
repnz
push
xor
cltd
jp
push
cmp
push
jnp
nop
dec
push
xchg
add
aam
cmp
cmp
data16
adc
xor
cmp
test
test
dec
arpl
into
test
cmc
out
add
cmp
les
cmp
cs
mov
inc
int
aas
out
loope
mov
mov
bound
popa
push
jmp
aad
mov
mov
push
cmpl
test
sub
out
xchg
push
xchg
aam
or
push
add
in
fcom
push
sbb
ds
adc
aad
lods
push
sbbl
inc
push
sbb
lods
push
mov
cmp
test
xchg
jb
adc
shl
orl
loope
hlt
lock
or
lods
movsb
sub
lea
int
cmc
adc
hlt
inc
lods
enter
test
sub
pop
adc
sbb
push
movsb
lock
rcl
popa
out
xchg
adc
cmp
fldt
je
cmp
cmp
rcrl
cltd
adc
stos
xlat
popf
sahf
aas
cltd
mov
xchg
test
in
lods
push
mov
dec
push
sbb
mov
pusha
and
inc
aad
inc
inc
ja
gs
sub
sbb
inc
out
jg
cmp
inc
jns
ss
test
jle
and
pop
or
pop
jg
add
out
mov
sahf
je
ljmp
ret
dec
insl
repnz
insb
or
addr16
notb
pop
outsl
and
clc
adc
inc
push
mov
jl
and
dec
insb
das
xor
mov
xchg
rorb
outsb
outsb
and
sbb
rcll
and
div
inc
add
ss
outsb
and
xchg
aad
adc
inc
xor
pop
inc
xor
cmp
daa
jae
fisubrs
bound
push
jp
mov
inc
popf
add
mov
int3
sbb
inc
pusha
dec
jg
xchg
mov
fwait
xchg
pop
sarl
rorb
shl
movsb
das
mov
xor
divb
movl
pusha
scas
mov
inc
mov
mov
lahf
cmp
push
out
imul
bound
mov
cmpsl
mov
mov
jle
iret
and
out
mov
adc
mov
jbe
cli
es
mov
iret
mov
sbb
mov
cld
rcl
mov
lods
jno
sbb
mov
sbb
mov
negb
repnz
mov
jo
stos
scas
out
xor
fisttps
xlat
and
mov
pop
pop
jne
sub
mov
sbb
in
lret
fadds
push
xchg
dec
test
mov
sbb
aam
inc
das
push
data16
sbb
xchg
dec
mov
sub
fidivs
add
aad
xchg
push
push
shll
lock
insb
inc
mov
clc
mov
add
adc
fsubr
xchg
sub
sub
dec
cmpsl
jo
push
incb
push
cmp
rcr
lcall
cmp
aaa
repz
cld
stos
xchg
imul
aaa
add
xor
enter
pop
stos
dec
push
jo
rol
xor
clc
and
sbb
lret
dec
bound
and
std
sbb
sbb
push
jno
shll
and
lock
repnz
loop
enter
sbb
pusha
add
js
test
mov
dec
mov
sbb
out
out
mov
int
jp
cmp
stos
std
in
cmp
push
test
push
out
jl
or
jno
cmp
stos
mov
and
sar
mov
and
mov
popa
aaa
push
push
pop
adc
lock
dec
rorl
lret
or
ds
inc
xor
xchg
dec
fistpl
loop
clc
xchg
mov
insl
insl
push
stc
push
ss
pop
sahf
xchg
inc
push
pop
bound
xchg
mov
or
xchg
out
ret
out
arpl
cmp
aam
fyl2xp1
test
fbld
dec
in
pop
aad
adc
and
lds
outsl
leave
rorl
pop
fnstenv
sahf
call
fdivl
in
daa
xchg
repnz
pop
xlat
dec
loope
into
call
xor
cmc
pop
adc
xchg
pop
sahf
dec
ds
repnz
inc
in
scas
cmp
cmpsl
pushf
out
sub
and
lds
pop
mov
adc
mov
adc
fmull
jmp
dec
pop
into
pusha
test
xor
cmpsb
lahf
fcmove
pop
mov
nop
lods
inc
fbld
sbb
mov
push
jo
lret
loopne
inc
xchg
mov
sub
xor
inc
imul
mov
leave
jmp
out
jb
and
xchg
dec
adc
push
rcrb
add
push
inc
push
push
out
lods
pop
daa
pop
adc
pusha
cmpl
inc
lods
cli
inc
pcmpeqb
adc
or
int3
mov
cmp
pusha
out
xchg
test
js
jbe
leave
jns
jg
push
jo
or
sub
pop
sti
out
insb
pshufw
adc
jp
enter
es
movsl
rcr
popa
pop
mov
add
imul
sub
cmc
xor
leave
movsl
movl
mov
pusha
vsubps
add
and
addb
imul
scas
data16
mov
call
testl
pushf
and
jae
hlt
cmpsl
lds
jne
or
out
aad
jecxz
les
pop
pop
inc
or
outsb
orl
sahf
cmc
mov
lcall
push
and
ja
test
inc
xor
mov
int3
sar
ret
or
ret
fwait
xchg
push
lods
and
fwait
cwtl
mov
xor
addr16
inc
lock
xchg
push
lahf
loop
pop
lods
sbb
js
leave
call
imul
xchg
scas
mov
lea
aad
fnstenv
cmp
arpl
mov
orl
xor
cmp
lods
mov
sbb
movnti
cmc
add
into
popf
mov
dec
mov
xchg
cltd
pop
xchg
cmp
xchg
out
xchg
std
and
testb
int
pop
lds
xor
into
add
icebp
push
js
cmpsl
inc
icebp
mov
push
xlat
jl
xchg
pop
insb
xor
ss
outsb
adc
sub
jecxz
loop
cmp
sub
cld
mov
fldcw
mov
test
imul
xchg
sahf
mov
shr
jp
ds
sub
push
test
sahf
mov
orl
push
push
xchg
pop
movsl
jno
push
or
cmp
fwait
mov
out
inc
arpl
mov
mov
sub
or
sbb
lods
jmp
lret
cs
and
andb
add
mov
hlt
jbe
xor
sub
xor
push
cmp
popf
cmp
xor
adc
mov
xlat
add
rcr
push
lods
in
fcmovu
gs
bound
sti
push
data16
in
dec
rcrb
test
jae
sti
push
dec
jno
popf
push
sub
lds
cmp
cmp
mov
scas
or
cmp
or
addr16
mov
sar
add
adc
cmpsb
cli
adc
mov
sub
daa
sbb
popa
sub
pushf
xor
in
xchg
fisubrl
out
jg
adc
jecxz
cmp
leave
push
call
xor
jmp
sahf
sub
daa
or
bound
xchg
jns
lods
pop
sub
dec
push
add
mov
lea
push
push
rcrb
lods
aad
jp
cmp
sbb
push
movsb
push
push
insb
pop
inc
pop
es
mov
push
add
fsubl
mov
std
push
test
push
ss
orl
xchg
sbb
push
and
pop
adc
mov
sbb
push
mov
mov
rorl
in
cmp
aaa
xchg
pop
addl
lock
or
jle
shlb
adc
push
dec
xor
mov
mov
and
test
popa
cld
xchg
mov
mov
es
dec
or
outsb
jle
lods
sub
fnstenv
subl
fs
mov
jb
fisubrl
and
cld
test
cmp
jnp
pop
push
test
repz
xchg
popf
cmp
adc
xor
pop
outsl
std
jg
jb
pop
test
insl
int
or
pushf
lret
pop
sbb
mov
adc
into
insb
dec
mov
push
lods
xchg
mov
mov
sub
xchg
pop
icebp
dec
in
adc
mov
cmpsl
inc
lds
das
movsb
flds
sub
inc
sarl
sub
inc
in
cmp
dec
popa
cmc
mov
icebp
ret
sbb
sub
push
or
movsb
pop
gs
mov
or
lods
inc
jmp
pop
enter
mov
xchg
cmp
scas
push
popa
inc
mov
lret
mov
pop
jae
lcall
or
add
into
or
adc
mov
sbb
rcr
cmpsb
adc
xchg
and
loope
inc
ret
jmp
mov
inc
mov
dec
in
cmp
jl
popf
sub
mov
imul
inc
nop
mov
in
stos
dec
push
fsts
in
jnp
ret
push
add
dec
pop
stc
in
add
or
sbb
out
jl
jae
sti
fistl
dec
xchg
frstor
jg
pop
inc
add
dec
leave
cld
pop
fistl
add
lds
into
into
out
push
dec
mov
in
leave
lea
adc
jmp
nop
scas
push
mov
imul
cli
inc
dec
enter
addb
push
gs
jae
sbb
pop
shr
or
mov
add
in
dec
mov
dec
mov
out
jnp
push
das
mov
cmpsb
mov
jl
cmp
or
test
jo
call
popf
mov
fldenv
inc
cmp
es
loopne
scas
out
fildl
cld
sarb
cmp
lcall
sub
xchg
mov
or
jb
pushf
pop
mov
adc
std
xor
imull
mov
cli
mov
mov
add
inc
jo
stos
sub
sbb
mov
scas
cltd
pop
fdivs
xrelease
add
sub
or
rcl
js
and
imul
enter
mov
xor
or
dec
add
xor
out
adc
lahf
xchg
mov
push
jno
jo
xchg
xchg
mov
arpl
hlt
pop
xor
ljmp
dec
mov
scas
out
cmp
cmpsl
aaa
sub
pop
ds
das
aaa
or
xchg
xchg
icebp
cmp
loope
sub
inc
or
imul
pop
mov
cmpsb
loope
outsb
not
cmp
or
ljmp
cld
out
xchg
jbe
in
inc
lret
cwtl
push
sub
push
xchg
inc
cmpsl
pop
fwait
pop
je
xor
push
push
mov
xchg
out
out
fcoms
mov
push
mov
adc
xlat
scas
sub
das
sub
mov
rcll
mov
ret
mov
std
inc
mov
out
xchg
cmp
inc
dec
aas
pop
jecxz
js
mov
leave
pushf
enter
mov
loop
sbb
out
dec
and
ret
scas
ficoml
and
or
les
or
and
sub
pop
xor
aaa
add
clc
stos
or
popf
inc
mov
les
jbe
lahf
pop
mov
jns
mov
xor
in
xchg
adc
cmc
fsubrl
aas
adc
mov
fdiv
js
xor
push
lds
push
jo
icebp
in
cwtl
jge
shlb
stos
insl
xchg
neg
mov
mov
cmc
push
sbb
and
rol
mov
push
jae
leave
cmc
adc
jo
lcall
aaa
jge
push
lcall
xor
push
sub
inc
cmp
pop
mov
fs
and
jmp
imul
push
add
lods
dec
xchg
jae
xlat
jmp
inc
sub
push
fstpl
ja
inc
pop
mov
inc
data16
xlat
lret
mov
lock
popf
loope
mov
mov
pop
test
adc
mov
adc
andb
scas
sahf
pop
movsl
inc
cltd
dec
jg
js
pop
mov
aad
shlb
jnp
shll
cmp
xchg
aad
or
mov
mov
or
mov
and
jmp
add
data16
or
sbb
rclb
jae
cwtl
lret
icebp
cwtl
mov
cli
sub
dec
test
mov
mov
iret
out
aad
dec
sub
sbb
inc
mov
sub
outsb
imulb
pop
dec
jne
pop
fidivrs
adc
jo
aas
repz
push
inc
adc
ret
daa
jecxz
cmpsb
or
ss
shlb
mov
out
inc
xor
fs
lahf
adc
pop
jbe
in
sub
data16
mov
xor
arpl
mov
jns
int
popa
test
push
xchg
adc
test
fnstcw
and
lea
fs
mov
sub
fisubrs
shr
xor
sahf
dec
sbb
cmp
pop
sbb
lcall
dec
sbb
push
add
ss
gs
jl
mov
sub
mov
xchg
lock
sub
inc
cmc
inc
cltd
data16
lock
fsts
es
mov
xchg
fsubp
mov
pusha
stos
in
add
sbb
dec
pop
scas
fucomp
enter
pop
pop
mov
cmp
adc
call
mov
dec
inc
loop
addl
lds
cs
mov
cmp
inc
outsl
loop
dec
xor
mov
cmpsl
rorb
adc
fwait
pop
loop
jecxz
rolb
and
mov
stos
cmp
rorl
scas
xchg
or
xor
insb
ss
movl
push
je
jp
fnstenv
inc
sbb
push
sahf
mov
idiv
call
push
insl
into
mov
lods
mov
dec
sahf
xchg
mov
out
das
out
jecxz
cmp
cmpsb
cmpsl
jge
movsb
and
out
mov
jo
jmp
das
dec
jle
cmp
jbe
jo
enter
adc
or
jecxz
cli
add
addr16
jbe
into
call
push
jmp
sub
or
fs
sub
push
or
ja
or
add
pop
cmp
sahf
xchg
movsl
clc
sub
dec
mov
xor
jno
pop
pop
add
jl
or
push
dec
and
fisttps
pop
pop
fwait
add
jg
ret
shl
bound
jns
adc
in
mov
dec
add
dec
pop
add
test
rolb
in
jbe
addb
jge
push
fmuls
adc
pop
inc
test
rcr
aam
mov
loopne
psubq
xchg
adc
xchg
jnp
pop
mov
inc
movsb
xchg
add
jae
adc
sub
jns
jo
sbb
push
add
pop
push
adc
dec
cs
xor
jb
add
xor
repnz
pop
notl
aaa
push
icebp
loopne
fisubrs
inc
ret
loopne
dec
sub
xor
jno
test
mov
or
divb
xor
gs
mov
pop
testb
in
xchg
out
jns
or
rclb
movsl
adc
jp
pop
pop
and
add
or
subb
adc
test
sar
or
jns
pop
aas
and
mov
mov
mov
cmp
test
subb
mov
ficomps
sub
jnp
xchg
shlb
outsb
or
adc
ret
xchg
sti
add
sarb
mov
fmulp
jae
adc
inc
aaa
stos
cltd
sbb
shl
mov
jl
test
jmp
inc
notb
out
data16
aas
add
pop
mov
ss
push
inc
pop
icebp
jnp
ret
inc
test
rcrb
ljmp
lods
mov
xchg
out
push
addr16
adc
jnp
dec
push
incb
pop
adc
insb
adc
cmp
push
out
push
xchg
sbb
int3
sbbb
in
enter
lcall
decl
mov
xchg
mov
dec
pop
mov
out
push
sub
sub
cli
lods
mov
push
push
das
cmp
mov
cld
mov
outsl
jns
fstpt
mov
ds
mov
jae
test
xchg
setne
sub
repz
adc
sti
faddl
pop
inc
inc
bt
push
jle
scas
test
adc
iret
xchg
or
xor
inc
or
pop
push
mov
push
sti
sbb
mov
clc
loope
movsl
test
jbe
adcb
cmp
faddl
pop
sbb
outsb
fldl
out
pop
std
lea
dec
data16
inc
idivb
lahf
or
adc
cmp
and
cmp
xor
js
insb
mov
or
insb
adc
xchg
sub
sub
aaa
aam
testl
mov
jmp
push
out
pop
test
and
jecxz
mov
jle
mov
repz
das
lret
std
xchg
leave
push
jnp
int
loopne
int3
outsl
into
aaa
rorl
add
repz
adc
shlb
push
and
mov
popa
inc
push
rorb
sbbl
stc
xchg
dec
aam
add
jl
rclb
and
sub
jge
std
or
mov
fs
dec
inc
in
sbb
ds
jae
fcmovnu
push
push
inc
lods
es
scas
scas
cld
dec
je
xor
stos
cmpsl
adc
push
insb
sbb
inc
call
xchg
outsb
insl
loop
lret
xlat
daa
mov
lds
insb
mov
stos
ds
fstpt
fwait
stos
lret
jne
arpl
pop
mov
adc
pop
xchg
int
mov
sub
in
out
shlb
aaa
push
mov
mov
dec
sub
sahf
fwait
lea
sbb
pminsw
insb
push
out
ffree
cmpsl
mov
sub
daa
iret
mov
mov
lcall
sub
mov
je
jbe
lods
lods
cmpb
stc
shl
inc
mov
mov
out
cmp
jnp
arpl
aad
fcmovb
lock
test
aas
xchg
dec
and
mov
adc
push
aad
iret
cwtl
test
jge
mov
mov
and
push
or
jg
ljmp
ret
sbb
and
inc
loope
add
sbb
push
mov
repnz
cmpsl
iret
cmp
inc
mov
int
out
pop
jbe
movsb
pushf
fsts
push
pop
mov
imul
out
outsb
xchg
jmp
shl
cmpsl
push
jecxz
ret
cmpb
jle
sbb
testb
dec
es
fisubrs
push
sahf
mov
add
adc
mov
out
mov
out
sub
int
sub
call
sbbb
popa
dec
xor
cs
jno
mov
pop
test
adc
movsl
xchg
jp
jmp
jb
ret
and
fwait
sub
pop
mov
add
ja,pn
scas
add
outsl
insl
jecxz
test
das
jne
xchg
loope
in
push
fwait
and
push
mov
test
inc
mov
fs
sbb
cmp
dec
sarl
shlb
jl
gs
sbb
pop
js
add
or
cmpl
xchg
int
dec
mov
scas
std
sti
add
test
popa
cmp
dec
mov
and
ds
dec
adc
inc
cmp
push
insb
data16
out
js
aas
dec
sbb
rorb
inc
pop
sbb
rolb
pop
push
pop
dec
aas
cs
or
xchg
nop
and
das
test
and
popf
or
fldt
mov
pop
add
popf
adc
gs
mov
sti
mov
mov
int
pop
ljmp
aad
repnz
jle
sbb
xchg
sbb
pop
add
and
es
and
fldenv
ds
popa
rcrb
mov
jecxz
xor
iret
mov
pop
dec
push
or
inc
jno
outsb
or
pop
xor
ss
mov
adc
pop
mov
dec
in
in
add
loopne
push
sarl
cmp
mov
xchg
into
push
inc
imul
cmpsb
sbb
xor
sub
pop
test
movsb
jnp
repnz
mov
and
inc
test
mov
sbb
addb
dec
inc
pop
sbb
mov
aam
jne
sub
mov
sbb
rdmsr
jae
movsl
das
aaa
in
ss
icebp
aaa
jo
shll
shl
inc
fisubl
and
xchg
sub
icebp
adcb
sub
xor
addl
or
adc
push
push
cs
arpl
sub
inc
or
iret
xor
cltd
mov
mov
jno
inc
icebp
test
jp
insb
add
jge
push
dec
or
outsb
push
movsl
xor
out
aaa
js
cmp
inc
jae
addr16
hlt
xor
loopne
xchg
je
dec
xchg
rolb
mov
push
mov
in
outsb
jmp
fnstsw
movhlps
pop
neg
aad
lahf
into
std
push
jae
fmull
jg
repz
sbb
cs
dec
dec
loopne
loop
into
scas
int3
int3
cld
es
cmpsb
lahf
jg
add
fnstsw
or
lret
fsubl
out
out
imul
mov
mov
sti
stos
inc
jg
pop
jge
and
mov
cmpsb
nop
ds
fcmove
jg
add
decb
into
int3
pop
mov
mov
bound
cmpsb
or
movsb
js
add
in
adc
fmull
inc
or
pop
inc
add
push
roll
mov
or
call
clc
das
mov
xor
outsl
inc
addr16
sti
add
xchg
push
add
xchg
push
ss
hlt
fcompl
jae
lds
pop
in
sub
ret
fdivl
jo
or
out
push
mov
add
mov
sbb
call
sbb
in
les
aad
cmp
sub
cwtl
adc
dec
mov
cmp
fistpll
test
adc
dec
dec
aaa
jp
subl
stos
notl
outsl
mov
jno
lods
scas
push
mov
jmp
test
push
mull
filds
idivb
outsl
enter
mov
inc
cmp
or
jo
or
das
jecxz
sbb
cmp
xchg
dec
imul
out
dec
lahf
clc
xor
sbb
fwait
imul
jo
sbb
in
xor
jle
sldt
and
push
into
pop
test
imul
jns
or
call
cmp
fldl
popf
xlat
fisttpll
outsl
cmp
push
adc
int3
mov
cmp
outsb
xchg
pop
insl
cmp
cmp
jno
mov
dec
mov
push
ret
lock
mov
std
adc
int3
xchg
or
aam
arpl
test
pop
jg
orb
addr16
aad
sahf
or
aaa
push
sti
dec
push
dec
cwtl
std
es
dec
subb
loop
ljmp
and
lret
aas
scas
xor
lock
out
loopne
repnz
sub
loope
pop
insl
push
mov
mov
mov
movsb
neg
aaa
lcall
pop
sub
jno
pop
sahf
or
outsl
enter
call
adc
lds
clc
orl
mov
cmpb
lret
lahf
sub
dec
xchg
and
mov
xchg
hlt
insl
cs
mov
insb
cmp
fcmove
fs
add
and
push
movsl
rclb
shrb
lock
leave
or
jo
mov
rorb
jmp
pop
or
mov
sbb
fistl
outsl
dec
cmpsb
cmp
and
mov
and
scas
dec
mov
outsl
je
pushl
into
out
dec
push
mov
mov
cmp
jmp
mov
movsb
fdivrs
xchg
and
sarl
les
into
mov
push
xchg
pushf
pusha
ret
in
int
popf
fcmovne
lods
ficoms
or
mov
xchg
test
nop
inc
enter
pushf
xchg
mov
add
mov
dec
inc
sbb
xchg
xchg
sub
jo
fimull
insl
dec
aaa
dec
and
mov
xchg
leave
es
leave
leave
cmp
addb
pop
jno
pop
test
or
stc
jecxz
fsubrl
insb
rcrl
imul
out
clc
sbb
ljmp
adc
and
pop
mov
je
jnp
jae
add
jmp
mov
iret
mov
jecxz
and
popa
mov
inc
insb
lds
or
jge
mov
mov
scas
into
pop
add
mov
xchg
add
test
xchg
push
popf
and
pop
arpl
dec
loope
ss
ss
dec
shrb
lods
xchg
xchg
mov
into
repz
shl
popa
or
pusha
push
popf
sahf
ret
sahf
mov
and
or
pop
mov
cwtl
mov
dec
iret
pop
enter
push
lods
int
and
pop
ret
xchg
jne
mov
cmp
std
push
loope
mov
call
mov
movsb
hlt
jmp
push
cs
frstor
cwtl
mov
fsubr
pusha
fldenv
cmp
and
cmp
bound
xchg
push
test
mov
inc
xchg
inc
dec
pop
mov
scas
jmp
inc
in
mov
loope
cs
xchg
push
outsl
scas
insb
add
jp
mov
inc
out
mov
inc
sti
ss
outsb
cmp
ja
insl
or
ret
daa
or
cmp
cmc
push
inc
sbb
out
push
xchg
int3
sub
sahf
push
push
into
dec
jl
xor
push
jns
push
lods
sahf
xchg
out
cmp
sbb
jmp
inc
mov
hlt
std
mov
add
aam
bound
add
mov
sti
mov
xchg
dec
jne
jo
and
add
fwait
arpl
lcall
fs
mov
cmp
push
push
jno
inc
call
hlt
push
sbb
mov
mov
fs
popf
ja
dec
fnstenv
fsubrs
icebp
pop
sbb
lahf
outsb
mov
out
push
leave
cmp
push
push
dec
mov
fwait
inc
mov
push
pop
and
xor
roll
aas
imul
ja
stos
mov
xor
movsl
loopne
adc
hlt
sbb
enter
ret
insl
pop
pop
pop
push
mov
lds
sahf
inc
push
sub
sub
gs
dec
les
mov
jge
add
push
lock
sub
repnz
ljmp
sbb
orb
cmc
adc
pop
loop
lods
sbb
mov
dec
pop
sub
push
dec
lcall
push
dec
imul
lret
fdivs
pop
jo
sub
pusha
stos
mov
fldcw
sarb
cld
lret
push
mov
mov
pop
vmread
jo
cmp
roll
and
push
int3
das
inc
lahf
les
pop
jge
je
cmpb
dec
jne
jmp
xchg
icebp
fcomps
stos
ds
xchg
jno
cmp
shll
jecxz
adc
test
repnz
sbb
xchg
leave
mov
cmpsl
mov
add
out
or
lods
and
xor
mov
orl
cltd
pop
rorl
jmp
xor
icebp
sbb
pop
popf
mov
mov
add
pop
cld
icebp
enter
sub
add
sbb
pop
je
xchg
sti
into
test
or
aas
adc
aaa
inc
xchg
and
ds
mov
das
mov
cld
bound
imul
sub
sub
pusha
inc
daa
mov
ret
cmpsb
or
mov
jp
jnp
push
add
pop
jl
arpl
mov
pop
add
mov
add
jle
hlt
push
nop
negb
shrl
mov
add
leave
mov
and
stos
add
mov
and
and
xor
test
mov
icebp
push
add
dec
out
imulb
push
fucomp
push
test
xor
data16
push
cld
or
add
xchg
popl
cld
cmp
sbb
adc
push
adc
popa
lea
push
lods
jecxz
pusha
push
push
push
jg
xorl
mov
popf
pushf
popf
add
dec
movsb
cli
scas
xor
xor
lcall
loopne
outsb
inc
jecxz
xchg
xchg
arpl
cmp
jb
imul
push
cmpsl
sbb
push
lret
fnstsw
popa
lcall
push
sbb
push
sahf
xorl
test
das
or
add
cli
ds
push
mov
push
or
or
decl
cmpsb
aas
add
push
nop
cmp
test
enter
xlat
or
out
mov
lea
ljmp
cli
scas
popa
mov
inc
frstor
and
pop
jno
mov
mov
jge
scas
aaa
hlt
jmp
or
cltd
jbe
ret
push
or
mov
test
cmp
fsubl
cmp
in
xchg
xchg
fnstsw
or
scas
add
out
frndint
sbb
pop
gs
into
xchg
js
jo
dec
xchg
dec
xchg
xor
popf
jno
loop
cmp
push
pop
cmp
mov
sbb
sub
mov
mov
xchg
jle
cli
in
cmp
je
mov
inc
data16
xchg
cmp
into
mov
push
shll
pop
inc
loopne
pop
push
adc
or
stc
mov
xchg
js
js
std
inc
cmp
call
sub
mov
out
iret
aas
mov
mov
cmp
add
jbe
out
cld
pop
and
push
cli
iret
adc
jo
or
mov
jnp
in
dec
inc
outsb
inc
in
notl
xchg
jle
pop
and
inc
adc
sub
and
fstp
pusha
sbb
jb
loop
add
outsl
stos
fidivs
sahf
in
ret
sbb
or
cld
inc
movl
cmp
fldenv
inc
lods
lgs
nop
bound
xchg
and
or
adc
subb
mov
push
lock
insl
mov
orl
fdivr
add
outsb
imul
mov
add
dec
call
cmpsl
mov
adc
fwait
cli
inc
fbld
test
cmp
dec
and
push
loop
cmp
pushf
dec
popa
push
daa
dec
fldenv
arpl
mov
cmpsl
sbbl
ss
mov
dec
sub
out
icebp
push
adc
xor
loope
pop
shlb
mov
scas
dec
jno
imul
jl
loope
movsl
xchg
ds
negb
xor
sub
dec
mov
sub
xor
loope
fwait
cmp
out
loope
mov
gs
scas
or
add
cmpsb
cmp
adc
push
mov
pop
inc
imul
dec
into
aad
idivl
int3
sbb
rcll
lcall
xchg
jg
mov
xchg
sub
xchg
push
dec
notb
cmp
inc
pop
movsl
push
or
or
adc
push
inc
pop
push
mov
push
dec
or
out
lods
cmp
ret
ljmp
out
add
xlat
xchg
lret
mov
loope
jle
push
stos
int
pop
push
pop
mov
aas
addb
mov
addb
mov
fistpll
jmp
iret
fistps
and
xchg
repz
xchg
sub
dec
leave
insb
movsb
fwait
adc
xchg
cltd
adc
popa
scas
stos
ja
aad
sbb
sub
xchg
fdivrl
data16
pop
adc
mov
outsl
shll
dec
dec
and
jle
push
jmp
lods
pop
cmp
cmp
inc
push
ret
inc
fldcw
push
lock
out
lcall
xor
xor
test
es
or
bnd
adc
dec
sub
lds
lret
stc
jae
adc
lods
inc
outsl
sbb
push
xor
cmp
jecxz
jns
inc
jno
jmp
aaa
dec
mov
loop
push
sbb
cmc
ds
lea
mov
and
bound
dec
pop
dec
adc
test
dec
lds
fwait
idivl
lea
mov
movsb
jle
xor
frstor
sub
imul
popa
test
test
or
mov
iret
or
and
fwait
dec
jl
ljmp
xchg
cmpsl
dec
arpl
cltd
imul
and
pop
cmpsb
lea
xchg
add
movl
hlt
xor
lret
inc
lods
lods
pop
cwtl
pop
xor
cmp
add
xor
movsl
jg
jo
push
loopne
push
sub
cmp
ja
test
clc
push
lahf
hlt
sbb
lods
and
mov
xchg
gs
push
jg
xor
pushf
es
push
cmp
dec
addr16
dec
leave
rcrl
xor
sub
push
fs
dec
push
cmp
das
push
lods
leave
into
dec
xlat
mov
in
xchg
scas
lds
inc
call
stos
cmp
jecxz
add
inc
hlt
clc
mov
orb
repz
scas
cmp
mov
jnp
xchg
sub
fwait
sbb
call
mov
or
aas
cmp
xor
inc
push
ret
sub
adc
insl
loop
daa
xchg
outsl
jns
sti
ss
lds
fbld
and
xor
inc
mov
mov
imul
cmc
pop
mov
std
repnz
insb
mov
or
sub
cmp
dec
loopne
cmp
xor
orb
jno
pushf
mov
insb
inc
sub
pop
xchg
fsubrl
std
push
add
pusha
push
outsl
add
ret
js
leave
jbe
xlat
rolb
aaa
and
push
jp
xor
cmp
jo
int
cmp
arpl
fistl
out
xchg
insl
adc
and
mov
cli
dec
lea
mov
jb
fists
jbe,pn
jmp
sub
sub
into
lahf
cmpsb
fld
jl
nop
add
addl
xor
sub
push
loope
fsubl
or
and
lret
cld
out
sti
daa
test
testl
or
in
pop
mov
inc
sbb
lcall
pusha
jbe
add
sub
in
pop
pop
xor
pusha
test
or
insb
jecxz
xchg
mov
push
pop
lea
cmp
dec
nop
lods
cwtl
or
sub
ja
aas
test
in
cmp
outsl
add
aaa
ds
scas
mov
andb
add
jp
jo
sbb
mov
push
mov
movsl
lret
fnstenv
insl
inc
dec
fstpt
mov
mov
rcll
ds
inc
fisubrl
mov
jmp
lods
rorb
not
sbb
mov
add
rcr
mov
xlat
ret
das
das
sbb
rcl
mov
rcl
mov
push
addb
cmp
btl
add
dec
adc
pop
pushf
adc
pop
jecxz
cmp
pop
movsl
jnp
out
loop
subb
insl
cmp
inc
lret
in
rcrl
stos
inc
fistps
add
and
sbb
nop
jl
mov
out
inc
mov
divl
jmp
xor
xchg
cmpsb
xchg
jno
and
notl
jns
xor
mov
loopne
pause
xorb
push
xchg
orb
gs
lds
or
test
xor
aas
sbbb
lods
pop
cmp
cmpsl
xchg
daa
iret
sub
inc
jmp
jge
stos
push
xor
dec
lret
jecxz
inc
pop
fdivrs
mov
add
negb
cmpsb
lds
cs
clc
fincstp
add
ja
aas
loop
pop
imul
inc
popa
and
or
in
jbe
arpl
cli
data16
pop
fldenv
loopne
loopne
jae
inc
jno
cmp
dec
inc
and
sub
mov
push
jmp
outsb
pop
fwait
adc
inc
mov
sarl
xchg
dec
fidivs
inc
popf
cltd
sbb
lods
insl
xor
cmp
cmp
into
adc
xor
mov
test
cltd
scas
fyl2xp1
sti
add
mov
pusha
imul
aas
push
cwtl
mov
clc
jecxz
ret
rclb
cmpsl
cmp
push
gs
aad
nop
andl
lds
shl
lcall
inc
lcall
pop
orb
jge
ret
xchg
xchg
aad
cmpsl
mov
sub
push
mov
decl
push
rorb
inc
test
jge
fadds
or
rolb
rcl
stc
pop
shld
int3
loope
call
push
push
stos
int
ja
mov
das
cmc
clc
jge
cs
imul
lds
icebp
andps
cli
les
gs
xor
jnp
sbb
cltd
push
testb
jle
in
xor
cmp
pop
loope
popa
push
xchg
jo
scas
sub
fcoml
xorb
xor
adc
sub
dec
out
notb
sahf
or
jb
pop
push
cmp
mov
rcr
jecxz
add
fdivp
addl
fsts
xor
inc
push
ljmp
jg
sbb
outsl
mov
nop
inc
or
pop
ror
pushf
mov
mov
mov
es
xchg
pop
lods
sbb
sub
inc
pop
into
add
das
sbb
cmp
sbbb
mov
fmuls
cmp
in
ret
popa
xchg
enter
in
mov
xor
xchg
pop
bound
xchg
jnp
pop
add
mov
rcll
sysenter
ds
cs
out
jo
pusha
push
xor
xchg
sbb
pop
ljmp
popf
mul
or
mov
add
dec
xchg
cltd
mov
lods
or
pop
in
mov
or
les
test
repnz
in
mov
push
js
fidivs
ret
adc
mov
mov
sbb
or
mov
jo
hlt
repnz
lods
dec
inc
adc
test
push
int3
or
xchg
dec
or
es
aas
xlat
push
mov
mov
or
scas
inc
dec
dec
lret
push
push
inc
inc
xchg
ja
fs
repnz
pop
lahf
xchg
xchg
add
pop
xor
push
stos
sbb
lret
cwtl
cli
cld
aaa
das
add
jnp
in
and
je
jno
lods
xor
movsb
jno
sbb
dec
test
rclb
dec
test
data16
xchg
mov
int
fcomp
cmc
xchg
test
clc
out
clc
in
or
dec
jge
in
shll
sub
push
add
push
mov
imul
fwait
push
xlat
mov
mov
stc
sub
aas
push
loope
push
aaa
sbb
push
jbe
lods
inc
inc
repz
push
push
addr16
iret
fs
jl
das
push
outsb
inc
add
decb
cmc
es
sub
push
in
xchg
adc
subb
xor
mov
mov
ljmp
jl
scas
je
pop
stos
std
mov
or
dec
push
xor
loop
dec
and
and
outsb
mov
mov
les
mov
subl
dec
mov
mov
rcrb
jb
jno
mov
cltd
and
stos
sub
ret
push
jl
or
rcrl
adc
into
dec
shlb
dec
add
xlat
movsb
sub
pmaxub
sbb
mov
nop
and
mov
jno
xchg
pop
lret
mov
in
jb
mov
xchg
bnd
or
lcall
mov
shll
jae
sbbl
add
pop
inc
fmul
fildll
fmuls
mov
xchg
mov
xchg
push
icebp
jmp
mov
sbb
cmp
out
cmc
push
mov
jp
test
ja
mov
lahf
addl
pop
shlb
aam
adc
sbb
lret
add
pop
mov
rol
jge
dec
sbb
ja
inc
add
mov
inc
test
cltd
lock
mov
cltd
out
inc
push
sub
dec
or
ss
mov
stos
dec
jp
or
test
ljmp
sub
les
jmp
test
stc
pushf
pop
mov
and
test
mov
xchg
mov
inc
insb
daa
je
mul
pop
or
stos
mov
mov
popf
rcr
sub
dec
data16
aad
mov
pop
mov
jnp
adc
push
mov
add
movsl
ss
cld
cli
push
sahf
dec
push
ds
stos
cwtl
sbb
inc
fwait
inc
daa
shr
cmpsb
xor
mov
test
mov
pop
in
mov
aaa
stc
sarl
scas
loop
add
stc
loop
in
orl
scas
int3
in
cmpsb
daa
mov
mov
mov
lret
cmovbe
int
mov
fwait
adc
xchg
mov
sub
je
or
aam
pop
mov
cmc
mov
mov
mov
mov
lahf
mov
outsb
imul
movsl
and
movsl
dec
jo
cmp
push
imul
addr16
inc
cmpsb
or
or
and
aas
hlt
pop
leave
xchg
mov
dec
out
ret
pop
dec
sahf
mov
push
inc
add
adc
sbb
add
mov
xor
mov
lock
movsb
test
xchg
cmp
fiaddl
cli
and
xchg
or
cmp
jno
push
sub
pop
mov
push
in
arpl
sub
adc
push
pop
gs
das
push
dec
fcmovnbe
push
daa
test
xchg
imul
xlat
inc
hlt
mov
mov
pop
push
dec
mov
adcl
or
cld
xor
lods
xor
mov
mov
add
sbb
cmc
shll
add
iret
cmc
sub
jl
sub
mov
repnz
and
fcomi
aam
lock
loope
xchg
xlat
dec
mov
in
fnstsw
pop
push
mov
aad
xlat
adc
push
mov
icebp
dec
pop
fcomi
in
in
outsb
les
mov
jecxz
push
and
jns
out
mov
sub
ds
lcall
pop
cltd
mov
lret
inc
out
hlt
test
fucomip
lea
push
int
stos
mov
xchg
xor
imul
or
outsl
sub
adc
lcall
cmp
js
std
fsubrl
xor
cmpsb
xor
add
inc
push
jo
mov
test
sti
lods
push
outsl
jae
bound
imul
inc
subb
mov
cs
cltd
testl
movsb
data16
inc
push
aam
insb
dec
adc
fcmove
pop
push
cmpsb
fs
stos
aas
orl
je
in
jb
shl
outsb
movsl
shrb
jnp
jg
jecxz
gs
ds
mov
out
mov
mov
scas
xor
cmpsl
cwtl
xchg
xchg
inc
lods
or
fiadds
pop
lahf
sbb
cmpsb
call
scas
lret
mov
loope
out
xchg
inc
cmp
jl
mov
repnz
pusha
or
push
adc
push
fistps
push
fisttpll
or
addr16
jno
xchg
js
jecxz
add
loopne
xchg
xchg
jl
xchg
mov
mov
test
add
cltd
push
add
sub
sub
pop
cli
lock
pop
mov
lahf
in
in
mov
adc
cmc
and
lea
push
dec
lods
mov
jno
stos
fs
mov
mov
sahf
cld
into
icebp
dec
lods
xchg
cs
push
test
into
add
add
mov
dec
adc
inc
shll
xchg
jp
xchg
movsl
clc
add
enter
lods
sbb
cmc
push
inc
lret
and
and
shll
dec
or
ja
and
or
aaa
ret
jbe
jp
xchg
pop
decl
mov
scas
push
lcall
cmc
adcl
cmp
or
insb
adc
in
imul
mov
or
sub
mov
sub
pusha
fsubrl
adc
jne
aas
aaa
xor
les
in
jp
rorl
fwait
sbb
je
popw
xchg
aad
fadd
outsl
push
popa
push
imul
cmp
cmp
fs
fsubl
iret
test
lcall
pop
das
bound
jae
push
insb
cmp
sub
dec
add
cmpsb
sub
jns
insb
adc
jl
ds
in
inc
rorb
mov
mov
xchg
inc
sbb
and
enter
out
test
mov
sbb
mov
dec
loop
dec
adc
leave
ds
dec
and
push
rorb
ss
and
cmp
jp
outsb
mov
mov
pop
jl
inc
pop
sbb
lea
pop
inc
imull
xchg
inc
push
xchg
aas
orb
dec
mov
jp
mov
mov
cmp
or
fwait
lahf
ja
push
jmp
jns
inc
dec
lods
mov
fidivrl
cmp
pop
sbb
jge
rclb
xor
cmp
adc
pop
sub
push
and
rolb
cmp
push
lret
sbb
imul
movsl
mov
scas
jecxz
add
add
jmp
fdivs
cs
sti
mov
or
pop
dec
cwtl
mov
cs
ret
inc
or
push
sub
dec
fwait
mov
test
nop
and
push
inc
dec
mov
dec
repnz
imul
push
mov
call
xchg
cmp
das
ja
mov
adc
dec
lods
push
loop
xchg
xchg
inc
lds
movsb
pop
ja
or
pop
pop
sub
dec
push
mov
xchg
xchg
loop
jno
insb
dec
lret
dec
xchg
cltd
xlat
ror
dec
rclb
sahf
sub
xchg
push
mov
sub
dec
adc
xchg
jl
mov
fcoml
lods
and
cs
lahf
or
adc
out
xor
push
cmp
popa
xchg
lock
scas
sub
jl
jecxz
shll
fs
lea
xor
or
fistps
cli
aam
jp
pop
mov
mov
xor
inc
dec
arpl
clc
xchg
mov
out
movsl
add
pop
mov
dec
push
lahf
inc
call
sbb
mov
jge
repnz
mov
or
in
stc
les
jge
sub
ficomps
or
shl
sub
fistpl
mov
pop
cli
nop
cmp
inc
call
mov
cmpsb
adc
pop
jg
jl
shlb
addr16
or
mov
add
test
mov
sbb
jns
sbb
xor
lods
icebp
lcall
shlb
or
fwait
outsl
jo
rcrl
sbb
xchg
lret
cld
ret
lods
cmp
mov
addb
xacquire
mov
inc
mov
cmp
or
ds
jmp
xchg
xor
jge
insb
call
lods
xor
push
push
test
add
outsb
xchg
fdivl
hlt
push
sbb
push
sbb
js
inc
sbb
pop
gs
fldl
popf
push
scas
lret
jl
sahf
iret
fistps
cmp
outsb
je
dec
jnp
mov
push
out
inc
xchg
out
or
and
and
je
xchg
mov
sbbb
ficomps
or
into
pop
xor
sbb
aad
add
addb
pop
aaa
dec
dec
ss
adc
out
pusha
lcall
sbb
cmp
fiaddl
and
xchg
jp
adc
dec
sub
jp
push
loopne
fistps
push
inc
dec
add
or
xchg
cmp
mov
pop
xchg
and
or
and
sub
ds
aam
and
bound
add
test
mov
jmp
sar
enter
push
mov
mov
add
sub
cmc
inc
pop
out
mov
adc
das
adc
inc
push
fcmovb
jae
ss
rcrl
loop
cmp
mov
sti
and
mov
jb
mov
dec
mov
out
mov
aad
or
divb
leave
sbb
push
xor
aad
adc
push
lea
les
adc
lret
mov
adc
loope
cltd
mov
adc
subb
pop
sub
ret
and
test
cmc
jne
pop
ret
imul
inc
push
std
mov
add
out
adc
outsl
int
mov
mov
push
adc
sub
adc
push
std
jp
sbb
sti
sub
jg
pop
fidivs
cli
popw
jl
pop
andl
mov
dec
jl
ficoml
lahf
leave
pop
sbb
imul
xchg
stc
int
hlt
jg
clc
icebp
xchg
pop
subl
cmp
dec
push
mov
lods
xchg
xchg
push
sarl
push
js
jmp
push
xchg
lea
mov
lcall
mov
cmp
je
sarb
adc
or
sbb
jo
test
popf
pusha
rorb
mov
imul
es
jno
inc
mov
xchg
add
ret
in
aam
xor
test
adc
loopne
add
sub
jl
cmpsl
push
data16
imul
adc
xor
mov
test
mov
popf
sti
mov
xchg
sbb
or
mov
cld
sbb
adc
adc
push
jno
dec
pop
inc
xor
movsl
scas
mov
scas
imul
out
jae,pn
aaa
jbe
cmp
ds
rorb
repnz
aaa
ret
rcrl
or
jo
jecxz
loopne
iret
imul
idiv
lock
jg
adc
cli
mov
cld
daa
pop
loopne
xor
inc
cmpsb
stos
xor
and
nop
in
ret
dec
xchg
mov
and
test
jno
test
dec
inc
movsb
je
in
cmp
lcall
push
xchg
jecxz
mov
pop
mov
dec
mov
cmc
jge
xchg
std
pushf
stc
xor
add
jno
push
enter
es
xor
aas
daa
outsb
inc
pop
nop
aaa
aam
fcmovnbe
es
xor
test
cli
test
mov
test
mov
mov
data16
shll
xchg
movsb
ret
sbb
lods
or
pop
push
cmp
test
adc
add
jge
ret
pop
xchg
addr16
sbb
pop
and
sarl
pop
lahf
je
mov
sar
pop
add
es
iret
scas
fs
ret
clc
inc
jl
aam
popa
sti
pop
lock
mov
jbe
mov
clc
sbb
adc
inc
push
cli
icebp
cmp
mov
cld
pop
inc
sbb
xchg
cltd
adc
or
subb
xchg
sub
pop
pushf
stc
sahf
mov
inc
fsub
or
mov
adcb
inc
xchg
je
out
jb
mov
dec
test
cltd
inc
test
jbe
push
loope
cmp
int
test
stos
loope
jmp
add
les
or
xchg
insb
push
xchg
lea
popa
ljmp
xchg
sub
pushf
movsl
int3
sbb
or
les
cmp
jo
test
xor
xchg
jge
repnz
push
adc
pop
movsb
xchg
xchg
es
xchg
dec
push
inc
inc
pop
mov
sti
mov
mov
data16
lea
js
loope
sub
rcrb
jnp
fists
pop
xor
sbb
les
rcrl
sub
adc
cmpl
ja
loope
mov
adc
iret
das
sti
mov
cmp
push
pop
aaa
cmp
fs
jmp
jg
xor
out
and
xor
inc
xorb
mov
inc
adc
repnz
jae
push
xchg
sbb
push
mov
je
sbb
mov
js
dec
jg
jl
cmp
jmp
out
mov
je
mov
sub
or
arpl
inc
pop
mov
ds
or
lahf
repnz
fcomps
jg
pop
cmpsb
ja
dec
je
fstpt
adc
rolb
xor
jp
aaa
cli
mov
add
sbb
push
mov
clc
repz
push
jecxz
mov
shll
mov
push
sahf
add
in
out
in
xchg
mov
pop
loope
adc
imul
lcall
jo
insl
mov
jl
rcll
test
mov
nop
xchg
mov
adc
adc
pop
js
sbb
pop
xchg
mov
pop
aas
mov
mov
xorl
push
lret
insb
adc
and
ret
lret
insl
fs
insb
and
and
and
lods
out
mov
fmull
dec
movsb
insl
mov
out
mov
movb
stc
pop
loope
jbe
ret
sbb
sbb
cmp
lock
shrl
int
and
sbb
ljmp
or
iret
shll
lahf
pop
add
and
xchg
hlt
ficompl
bound
jmp
inc
or
int
xor
insl
in
test
and
ret
push
sbb
pop
jno
rclb
idivb
push
bound
insb
push
pop
mov
out
aad
rcr
jmp
fnstsw
or
inc
daa
cmova
iret
test
mov
pop
jb
daa
stos
test
xor
fstpt
imul
mov
repz
or
shlb
out
arpl
sub
pop
roll
pop
cmp
jecxz
sub
xchg
pop
dec
aad
or
jbe
jmp
sub
icebp
or
mov
cmp
inc
out
pand
sub
dec
lods
xor
ss
ljmp
sub
cmp
aas
dec
sub
xlat
jmp
sbb
dec
sbbl
insb
inc
aaa
adc
xchg
sbb
in
gs
pusha
out
dec
push
movsb
rorb
test
dec
aaa
fisttpll
stos
xchg
outsl
sbb
sti
gs
mov
adc
sub
or
inc
rcrl
imul
les
fisubs
aas
jl
lods
push
mov
pop
cwtl
cmp
adc
xchg
jg
shll
sahf
hlt
adc
push
ljmp
and
xlat
and
shll
push
in
xchg
out
subb
push
pusha
dec
sbb
mov
cmp
add
push
jb
in
xor
lahf
jbe
mov
sub
push
jp
cli
xchg
cmp
mov
jne
or
insl
aaa
mov
outsl
xchg
mov
shll
aam
sbb
ret
or
or
jo
or
sub
or
xor
addb
pop
push
ja
inc
loop
push
sti
inc
jo
mov
xor
test
dec
add
mov
js,pt
cmc
mov
mov
mov
push
xor
mov
in
clc
mov
cli
movsl
outsl
dec
adc
mov
adc
inc
stc
dec
ja
mov
pop
repnz
std
imul
mov
lock
and
add
fnstsw
add
pop
push
mov
cmpsl
dec
pop
test
push
fisubrs
mov
lcall
pop
sub
inc
test
popa
mov
or
call
subb
arpl
imul
cli
mov
jno
lods
mov
aas
pusha
mov
jne
loop
lock
sbb
adc
movsb
lods
mov
sub
add
rep
adc
scas
sub
push
mov
xor
and
mov
cmp
mov
push
stc
jno
xor
sarb
add
psubq
jmp
sbb
cmp
test
sbbl
movsl
icebp
ja
imul
clc
xchg
aaa
loope
lahf
and
dec
inc
pop
jbe
pop
cmpsl
adc
and
stos
mov
aad
mov
in
in
push
ljmp
mov
xchg
push
pop
leave
mov
xchg
xchg
into
lret
push
sbb
mov
ficompl
mov
mov
or
mov
pop
sti
jne
and
std
in
test
dec
mov
add
xlat
outsb
shufps
pop
add
in
popf
add
xchg
push
inc
outsl
dec
push
mov
int
decb
out
into
mov
pop
pop
mov
cmc
jno
mov
sbb
aad
sub
shll
xchg
pop
xor
cli
jo
shll
sahf
das
xchg
fcompl
in
push
cmpsl
pusha
and
popa
sbb
jb
dec
dec
xlat
pop
dec
popw
and
jbe
leave
into
fidivl
sbb
add
fwait
and
pop
pop
repnz
loopne
lods
test
jmp
aaa
out
js
mov
fwait
in
pusha
leave
stos
lret
icebp
xchg
sbb
dec
mov
mov
iret
xchg
jl
push
mov
es
jl
cmp
test
and
add
xor
push
lods
std
into
mov
icebp
negl
sbb
jno
sub
cmpsl
aam
inc
pop
pop
movl
or
mov
int3
xchg
jb
pop
cwtl
adc
stos
adc
lock
xor
sub
inc
fisubs
lods
push
lcall
jae
mov
push
out
jmp
pop
xchg
xchg
or
ljmp
or
std
lret
xchg
dec
ljmp
cmp
sbb
push
mov
cltd
cmp
dec
int
mov
ljmp
pushf
add
jp
nop
mov
xor
lods
ja
ret
push
mov
in
pop
shl
adc
jmp
sub
mov
jb
adc
xor
xchg
dec
pop
xchg
cmc
fbld
sub
push
fwait
jnp
sbb
inc
jns
mov
jg
inc
sti
xchg
clc
xor
scas
repz
lret
out
lret
mov
mov
push
fstpl
xchg
imul
cltd
mov
push
inc
cvtps2pd
sbb
inc
into
mov
stc
cmp
dec
mov
loopne
fildll
ret
mov
mov
leave
inc
dec
ljmp
sbb
jno
mov
xor
jle
fisubrs
sbb
push
cmp
fsub
inc
mov
sbb
std
aam
sti
neg
ja
aaa
xchg
shr
mov
jbe
xor
mov
lods
bound
and
lahf
mov
xchg
dec
or
jbe
repz
sbb
idivl
stc
push
jb
testb
orb
adc
loop
mov
cli
sub
jb
stc
xchg
clc
pop
jae
push
fists
xchg
lds
cli
xchg
dec
repnz
fwait
push
add
cs
insl
pop
mov
orl
mov
push
sub
out
xchg
aam
add
sub
ret
cwtl
out
clc
jge
xchg
fisubrs
mov
add
adc
add
adc
sub
arpl
sub
pushf
xchg
adc
xor
push
mov
stc
and
sub
push
jae
push
mov
or
shll
stc
mov
cmp
or
mov
jne
and
hlt
call
sahf
outsl
adc
sub
dec
push
lcall
imul
or
xchg
mov
add
imul
orb
out
movsb
push
sbb
xchg
push
lahf
mov
lret
daa
sub
aas
aaa
add
stc
rclb
cmc
push
pusha
dec
pop
fidivs
sarb
stc
popa
stos
jne
jo
adc
testb
inc
clc
pushf
mov
clc
mov
enter
cmc
or
leave
add
inc
mov
sub
out
stc
jb
sub
out
and
pop
jo
paddusb
imul
lock
sbb
mov
ret
rorl
mov
xchg
jb
xchg
mov
cs
xor
idivb
sti
inc
cmc
lret
sahf
sbb
and
dec
or
adc
outsb
sbb
mov
call
mov
cmp
and
push
or
js
lock
out
stc
shll
lret
insl
mov
lret
push
add
repz
pop
sarl
mov
outsb
xor
and
aas
outsb
rclb
mov
sbb
pusha
xchg
xor
push
xchg
rorl
add
movsb
add
jmp
dec
stc
jns
stos
ja
adc
xor
sbb
adc
sub
mov
jg
fwait
jns
push
into
imulb
add
pop
movsb
mov
ror
rorl
mov
push
adc
push
xchg
or
pop
inc
cs
dec
imul
pop
xchg
je
lock
adc
test
xchg
daa
or
insb
push
xor
stc
xchg
lods
repz
in
cmp
lret
movsb
pop
pop
mov
jb
insb
push
push
cmp
adc
sarb
push
mov
jle
xor
adc
inc
jae
mov
jmp
xchg
je
out
sahf
ljmp
jle
cmpsl
lock
adc
add
add
stc
adc
jno
jae
cld
mov
jmp
xchg
adc
in
fdivl
adc
jmp
shrl
sar
mov
inc
or
adcb
inc
adc
mov
mov
enter
shrb
iret
pop
pushf
lods
test
out
popf
es
nop
clc
and
push
pop
mov
pop
mov
xchg
pushf
popa
push
inc
dec
dec
or
jae
das
fisubs
or
faddl
repz
jmp
dec
inc
add
gs
push
inc
xlat
daa
ret
add
inc
cmp
xor
lods
push
pop
ret
xchg
dec
jg
cli
pushl
push
rcl
sti
inc
jmp
push
mov
popf
xchg
jmp
or
je
xchg
pop
push
mov
push
mov
arpl
lahf
dec
mov
push
sarb
std
mov
iret
mov
jne
cld
scas
add
ficoms
cmp
mov
mov
and
push
or
xchg
or
pop
cmc
cmpsl
jbe
popf
ret
shl
mov
or
adc
idivb
inc
cwtl
sub
push
int
in
or
inc
inc
cmp
xchg
mov
xor
insl
ja
adc
insl
mov
mov
or
imul
push
jbe
js
xor
xchg
cltd
outsb
jecxz
leave
pop
and
arpl
xor
jle
mov
add
bound
inc
pop
rclb
bnd
scas
imul
xchg
jne
fnstsw
dec
jg
push
push
arpl
fst
dec
repz
mov
ss
nopl
add
push
subb
imul
leave
push
push
gs
int
jecxz
add
outsl
xor
xchg
inc
mov
lods
stc
dec
xchg
xlat
mov
dec
sbb
subb
cltd
lods
sub
test
push
dec
stc
or
fmul
dec
or
xchg
xor
fldt
aad
xchg
dec
lods
xchg
test
out
call
fisttps
shrl
and
clc
mov
js
xchg
push
imul
adc
fsubs
cwtl
test
imul
cmpsb
dec
in
outsl
jle
push
jns
xchg
repz
adc
mov
movsl
pusha
push
call
int
fbstp
dec
mov
xor
int3
mov
mov
pop
inc
dec
fucomip
data16
les
dec
adc
inc
leave
pop
xchg
in
stos
les
insl
mov
cmpsb
sbb
mov
mov
insl
addb
pop
bound
xchg
mov
or
out
push
or
add
jns
loope
jnp
fsubrl
xchg
mov
push
sbb
mov
jns
add
pop
rcrl
cli
int
mov
scas
shrb
movsb
fs
jge
call
mov
or
and
imul
ljmp
sbb
xchg
repnz
sahf
jae
and
fldt
and
enter
xchg
cmp
movsb
sub
in
push
es
cmp
cltd
out
clc
mov
mov
mov
mov
into
and
jecxz
cltd
lods
cmpsl
push
push
xlat
andl
test
inc
insb
mov
add
adc
add
or
loope
cmp
push
fists
loop
mov
dec
cmp
cs
ljmp
sbb
popa
inc
mov
or
stos
xchg
shrb
pop
inc
fdivrl
push
inc
lds
jecxz
cltd
sub
cmp
idivb
pop
sbb
js
add
rclb
scas
aam
cmp
cs
sbb
js
cmp
ret
and
popf
ret
push
andl
add
sti
cmc
or
mov
popf
sbb
andb
imul
xchg
xchg
mov
ret
fdivs
hlt
inc
movsb
pop
loopne
sbb
add
inc
jmp
lcall
push
push
add
scas
inc
fadds
adc
pop
and
stos
xlat
aam
imull
dec
sbb
ljmp
cmpsl
nop
xchg
xchg
ss
push
hlt
repz
pop
push
xor
test
repnz
lods
mov
iret
rorb
adc
enter
ds
pextrw
sbb
mov
xlat
mov
cli
mov
push
test
lock
sub
outsl
lock
lret
je
in
je
and
jp
cmp
mov
mov
jns
sbbb
inc
or
and
out
leave
stc
aam
adc
aas
daa
arpl
mov
popa
mov
mov
add
pop
es
push
mov
icebp
lret
decl
ja
dec
add
out
push
cs
pop
push
add
idivb
mov
call
add
adc
mov
cmp
fisubs
leave
ss
daa
and
inc
cmp
push
lods
incl
pop
sub
outsl
iret
sub
enter
inc
rol
inc
xchg
lods
inc
iret
and
jl
fsubr
ror
xor
in
dec
popf
cmpsb
adc
jge
push
inc
pop
addr16
push
push
jbe
sub
int3
and
jae
ja
jp
mov
add
pop
inc
mov
loope
dec
and
into
xchg
fcoms
insb
sub
shll
roll
pushf
aam
aam
add
sbb
mov
mov
cmp
es
popa
mov
popa
sub
xlat
mov
xchg
sbbl
divl
test
iret
fwait
mov
sub
cmp
out
fs
in
add
arpl
mov
xchg
inc
mov
and
loope
movsb
adc
aam
or
mov
push
inc
push
repnz
adc
cmc
xchg
stc
enter
es
dec
mov
out
fstpt
push
sarl
mov
jmp
xchg
mov
jmp
xor
push
fimuls
jg
aad
sbb
lods
clc
mov
jl
mov
outsb
out
es
mov
push
xchg
sbb
xchg
repz
xchg
push
xchg
mov
adc
imul
jg
inc
outsl
shlb
adc
cmp
xlat
clc
xchg
pop
cmp
in
ja
orl
inc
fimull
loope
iret
jo
pop
push
jb
pop
in
dec
jg
sbb
jl
loop
ror
pushf
jns
mov
cmp
pop
fisubrs
fildll
imul
test
movsl
push
ljmp
lods
shlb
nop
pushl
mov
iret
adc
mov
add
das
mov
fistpll
push
hlt
into
mov
push
enter
push
out
mov
inc
add
shrb
or
pop
pop
push
sbb
push
cmp
arpl
pop
mov
xchg
mov
fidivs
imul
es
push
push
mov
add
in
mov
test
int3
or
aam
sbb
jecxz
adc
leave
leave
daa
leave
mov
mov
inc
jbe
nop
dec
sub
popf
sahf
pop
out
cltd
sbb
bound
mov
test
xchg
push
cmp
fidivl
dec
mov
xchg
cmp
mov
jno
repz
xor
mov
push
aam
enter
pop
jbe
mov
jg
je
inc
cmpsb
or
sbb
push
adc
test
loope
inc
js
aam
or
adc
mov
js
add
lods
or
jl
xchg
fldl
mov
adc
pushf
std
subl
push
ja
push
jne
ds
jp
push
fldl
jle
or
call
and
sbb
pop
jae
cs
sub
negl
sub
hlt
inc
adc
clc
jae
sub
out
iret
iret
fisttps
pop
push
xchg
scas
xchg
out
sub
cmp
add
pop
cmc
adc
push
lods
cs
xchg
sti
insl
pop
fildll
stos
cli
jecxz
mov
push
pop
pop
test
adc
xchg
ljmpw
ljmp
movsl
dec
pop
mov
outsb
ds
inc
insl
adc
mov
pop
lahf
or
push
sbb
insb
xchg
lods
sbb
fwait
nop
adc
clc
dec
ljmp
rol
lds
mov
testb
mov
iret
je
movsl
fisttpll
cmc
add
dec
jns
js
scas
fs
sub
mov
gs
out
jne
push
ret
lret
cmp
jmp
imul
mov
inc
jecxz
in
mov
adc
mov
cmp
jg
cs
rorl
mov
outsl
clc
xor
shrb
dec
pop
loopne
mov
jl
mov
movsb
cmp
sbb
adc
imul
sbb
inc
inc
outsl
sub
add
ss
cmp
xchg
cltd
mov
in
push
and
jb
imul
jno
and
std
xor
pop
xchg
mov
ret
cmp
sub
jecxz
add
fdivp
pop
inc
dec
mov
pop
sti
inc
mov
adc
push
sbb
imul
cmp
adc
call
or
jp
fiaddl
bound
cmp
lcall
cli
dec
jecxz
jne
sub
cli
je
sbb
fcoml
push
out
inc
movsl
aam
fisttpl
inc
push
push
addr16
adcl
ret
bswap
cmp
sti
ja
popf
hlt
mov
inc
test
push
push
in
cmp
push
jae
sbb
fmul
or
stc
inc
shl
mov
out
mov
push
dec
inc
sub
aas
mov
pop
xlat
xchg
out
stos
mov
fwait
pop
push
lret
jmp
nop
xor
test
sub
xor
sahf
stc
movsl
testl
adc
in
adc
les
cmp
addr16
pop
fisubs
lahf
dec
jno
sahf
in
xchg
dec
cmp
mov
icebp
fsubrs
xchg
insb
mov
incb
out
dec
loope
mov
cmpsb
mov
lcall
inc
xchg
xor
xor
jmp
inc
pop
ror
imul
or
ljmp
iret
xor
pushl
mov
mov
mov
pop
pop
mov
lret
ja,pt
cmpsl
mov
imul
mov
add
lahf
mull
adc
mov
adc
mov
mov
dec
leave
mov
loope
jns
xchg
sbb
xor
js
in
daa
outsb
ss
adc
fldt
es
stos
mov
mov
pop
mov
or
and
cld
aam
int3
mov
mov
aas
jo
pop
xor
sbb
lods
mov
xor
mov
int3
clc
les
jns
push
leave
cld
jle
imul
xchg
inc
pop
pusha
fisttpl
data16
loope
nop
sub
shl
into
testl
jecxz
jmp
mov
xchg
cli
mov
not
mov
xchg
out
xor
in
test
sbb
mov
mov
test
inc
or
and
mov
mov
jno
and
leave
push
pop
xchg
jns
scas
aad
mov
xchg
aas
mulb
cli
sbb
test
xchg
push
cltd
xor
mov
cli
add
stos
push
je
xor
daa
cli
pop
sbb
mov
aas
cmp
addr16
test
aad
test
push
movsb
fisubs
jmp
and
ret
mov
inc
cvtps2pd
rorl
jnp
push
call
idivl
out
sbb
cmpsb
dec
jnp
push
jmp
pushf
cmp
push
outsb
imul
imul
xlat
inc
push
cmp
imul
mov
sbb
pushf
sbb
push
mov
jns
or
jmp
mov
jmp
stos
mov
notb
int3
ljmp
dec
ja
fidivrs
fwait
jmp
imul
js
pop
nop
jo
lret
xor
xchg
push
in
cmc
aam
cli
lahf
loope
pop
pop
and
dec
movsb
and
push
sbb
repnz
xchg
pop
push
cmpsb
sti
add
or
sub
aam
out
jle
cwtl
push
jae
dec
jnp
fiaddl
and
stc
fwait
outsb
clc
int
subl
imul
movsl
dec
int
mov
pop
pop
cwtl
lret
mov
sbb
mov
sbb
fidivrs
loope
jo
xchg
xor
cmp
scas
dec
dec
inc
out
lret
fbld
sbb
inc
lcall
sub
and
adc
cmp
dec
test
js
inc
sub
xlat
lret
int3
ljmpw
sub
xlat
add
out
add
sar
jg
mov
scas
pop
jg
ljmp
in
push
cli
add
lcall
mov
mov
xor
sub
push
push
fucomip
mov
cli
adc
sbb
sub
imul
jno
lret
inc
push
and
add
xlat
push
dec
ljmp
mov
insb
xchg
ret
imul
fsts
jmp
dec
pusha
data16
fbld
xchg
xchg
int3
jns,pt
jne
outsl
icebp
jno
scas
add
jne
jecxz
cmpsl
gs
sahf
lods
das
fwait
loop
inc
test
fstpl
inc
imul
sub
pop
cmpsl
xchg
dec
sub
leave
pop
hlt
pop
ret
sub
fidivs
cmp
je
inc
or
mov
add
lcall
in
shrl
jge
fpatan
cmc
sbb
dec
iret
imul
push
xchg
cmp
jge
xor
mov
lods
cmp
pop
fnstenv
xor
mov
sbb
in
xchg
or
ret
adc
or
mov
outsb
mov
push
bound
jnp
jb
mov
cmc
mov
push
or
jnp
jmp
xor
push
sbb
mov
fs
test
xchg
sub
pop
lds
cltd
dec
push
ud2
enter
push
xlat
sti
addl
fisubrl
sbb
lret
mov
lods
jno
mov
sub
sbb
push
pop
into
push
sahf
push
mov
mov
je
or
inc
movb
sbb
push
inc
push
faddl
push
pop
dec
xor
inc
clc
or
fldenv
mov
xor
test
inc
push
imul
or
push
adc
add
lcall
fs
ljmp
dec
arpl
jl
in
stos
orb
inc
mov
cmp
mov
mov
push
push
outsb
out
xchg
sbb
addr16
je
ret
loope
xlat
mov
push
push
lock
and
xor
mov
or
push
clc
inc
push
ss
mov
ret
and
cmpsl
cltd
hlt
jmp
sarl
adcb
movsl
int3
and
movsl
dec
jl
push
aaa
imul
notb
sub
mull
hlt
inc
adc
jnp,pt
xor
rcr
cld
push
pop
and
ljmp
inc
pop
sbb
loopne
test
paddq
or
mov
dec
movsl
lret
add
mov
clc
and
dec
inc
imul
repnz
sbb
sbb
js
test
sub
loopne
fs
loop
lcall
bound
and
jp
ss
cmp
xor
sbb
add
mov
into
insb
das
sbb
push
cs
dec
arpl
fistpll
xchg
rcl
xlat
xor
add
push
pop
mov
insl
push
fwait
xor
shll
adc
or
pop
fs
icebp
dec
stos
sub
ficoml
and
dec
jg
sbb
mov
xchg
or
xor
repnz
sub
mov
pop
mov
and
int3
cld
lock
mov
push
out
cmp
jecxz
jp
out
mov
and
ljmp
push
cmpsb
int
sahf
pop
shlb
inc
add
rcr
cmp
repnz
inc
dec
jmp
jbe
ja
jo
adc
dec
aam
xchg
loop
and
adcl
lea
pusha
sub
add
pop
push
xchg
sub
clc
jp
scas
mov
or
dec
in
xor
test
aaa
repz
sbb
out
sbb
sbb
stos
jns
mov
xchg
pushf
in
outsl
outsb
jl
mov
xchg
jne
daa
ja
pop
test
loop
inc
movsl
inc
shll
pushf
xchg
add
mov
cmp
ja
aas
cmc
xchg
sub
mov
pop
test
push
lcall
sub
fiadds
into
shrb
enter
shlb
mov
push
cltd
int3
mov
push
push
iret
add
imul
loopne
orb
jo
sub
xor
xchg
cs
pusha
xor
xchg
repnz
xorl
xchg
and
xor
aad
sbb
fnclex
push
adc
xchg
sub
jecxz
fldenv
and
nop
cmp
pusha
mov
fldcw
jg
jge
sarb
pop
xor
jl,pt
sarb
cmp
aad
repnz
mov
jge
and
mov
sbb
sub
loope
jns
lcall
pop
aam
test
loopne
inc
nop
out
mov
mov
jo
xlat
push
idivl
adc
shll
push
pop
pop
adc
or
out
push
scas
ss
adc
xor
dec
imul
jge
mov
jl
out
push
mov
std
xor
rcrl
lret
add
shll
mov
dec
jp,pn
or
pop
mov
nop
shrl
ret
das
and
test
js
fcompl
aam
dec
and
pop
enter
push
imul
insb
inc
iret
iret
mov
jle
repz
lods
ficompl
mov
mov
inc
les
jge
fbld
cs
push
dec
ja
mov
in
cmc
jb
add
mov
push
fs
stc
popa
jp
jb
and
lds
mov
clc
movsl
push
nop
push
out
in
mov
lcall
hlt
add
xchg
push
push
int3
cmpsb
push
and
pop
jge
mov
pop
inc
icebp
jge
or
add
lret
pop
and
ficompl
in
jnp
dec
sub
xor
cmpb
adc
xchg
jns
enter
popa
add
stos
xor
sar
inc
sbb
scas
mov
scas
mov
data16
or
rcrl
out
jbe
inc
adc
mov
and
scas
sub
or
add
push
push
mov
add
faddl
jg
mov
cltd
or
push
push
scas
mov
adc
adc
std
push
rcrb
xchg
mov
adc
and
mov
pop
dec
add
in
cli
out
and
outsb
std
repz
imul
adc
inc
mov
push
inc
sbb
xor
add
stos
lds
jae
mov
or
xchg
sbb
andl
pinsrw
int3
aaa
sarb
fiaddl
dec
push
daa
push
mov
push
shrl
imul
adc
test
call
fildl
add
in
loop
mov
mov
push
mov
push
adc
xchg
icebp
and
pop
flds
icebp
dec
cwtl
sbb
xchg
rclb
fimull
daa
int
push
stos
leave
iret
fiadds
push
shr
mov
pop
mov
xor
pop
dec
icebp
jne
cmc
xlat
cltd
fcomps
lcall
jmp
adc
xchg
daa
xor
and
insl
lret
jle
mov
outsb
sub
add
add
push
jge
adc
mov
and
movsb
outsb
repz
mov
mov
mov
mov
or
incl
add
arpl
pop
shrb
stc
push
cmp
repnz
xchg
cmpsl
mov
aaa
jle
es
sub
mov
add
setp
loope
cwtl
out
fxch
dec
jmp
or
push
mov
cmp
dec
push
jb
sub
add
add
bound
jnp
divb
scas
out
pop
js
outsb
out
xchg
xor
sbb
jne
or
mov
jno
lea
cwtl
jo
fdivs
jns
lret
test
fnsave
cmp
in
mov
stos
cld
pop
cmp
mov
fists
push
jmp
or
mov
and
test
lret
add
xor
sub
imul
loopne
std
jmp
sub
jmp
not
ljmp
dec
pop
adc
fstps
fistps
fistps
jbe
es
cltd
push
in
and
or
outsl
xchg
inc
cld
sti
mov
adc
in
fnstcw
mov
add
sbb
push
jb
in
mov
aas
std
cmpsb
jmp
xchg
stc
pop
clc
into
mov
add
repz
add
push
ja
jmp
dec
dec
in
stos
lock
rclb
lea
xor
mov
adc
mov
mov
cmp
insb
mov
adc
je
mov
cmp
test
xor
cltd
jbe
jae
insb
leave
or
jbe
aaa
cld
loope
pop
or
push
mov
jns
or
imul
sbb
xchg
gs
int
mov
xchg
adc
jl
testl
call
rorb
fs
xorl
mov
cmp
mov
adcl
push
sarb
cwtl
clc
ret
arpl
sub
sti
pop
repz
push
sbb
leave
mov
inc
stc
push
sahf
cmpl
rcll
enter
fisttpl
aad
shlb
jae
and
sbb
ficoml
mov
pushf
mov
popa
clc
aad
mov
pusha
cmp
sbb
xchg
scas
stc
into
imull
jmp
insb
xor
cltd
xchg
cwtl
mov
nop
sub
sub
add
adc
cmpsb
or
aad
lea
jge
outsb
jge
into
mov
call
fcoml
shll
push
lahf
movsb
test
and
mov
js
xchg
lcall
ds
push
mov
add
fs
push
push
mov
mov
movsl
inc
out
push
mov
rcrl
mov
shlb
jns
dec
jae
lods
test
movl
int
xchg
inc
inc
clc
cmp
mov
hlt
jg
mov
mov
add
or
rcr
xchg
push
mov
dec
inc
inc
pusha
inc
aas
cmp
sub
sbb
sub
pop
adc
movsb
pop
dec
bound
jmp
pop
cmp
cwtl
adc
fcompl
cmp
adc
loopne
ret
fidivrs
inc
pop
cli
adc
dec
jne
jmp
scas
ss
std
jg
mov
xchg
jle
repz
lock
xor
mov
cltd
je
inc
sbb
pop
stos
mov
xor
leave
pop
dec
mov
stos
fs
fldt
dec
add
sub
and
stos
je
ret
jp
paddusb
lcall
adc
jl
shrb
xchg
xchg
inc
pushf
sub
out
fldl
pop
sti
inc
fwait
xchg
cltd
ret
sub
xor
loope
stos
inc
mov
hlt
or
arpl
xchg
rorb
jmp
out
mov
scas
or
cmp
or
loope
xchg
sub
frstor
inc
addr16
lcall
enter
mov
out
aaa
inc
scas
adc
nop
std
push
sub
cmc
mov
aam
das
das
ljmp
sti
push
imul
mov
dec
aaa
jbe
es
fiadds
mov
jecxz
inc
or
nop
enter
sub
bound
mov
clc
mov
mov
in
pop
int3
call
jns
jb
push
mov
sbb
xor
xchg
scas
in
xchg
lds
sub
test
pop
jmp
stc
mov
inc
dec
pop
rcl
addb
nop
add
sbb
jl
repnz
das
shlb
je
pop
imul
mov
mov
fidivl
out
push
sbb
jbe
test
jl
sarl
das
ret
outsl
cmp
mov
dec
lods
inc
rcll
std
into
movsb
pop
add
add
pop
and
jo
movsl
cwtl
pop
add
jbe
daa
in
push
inc
push
arpl
repz
cli
mov
ret
lea
xchg
or
outsb
xlat
or
cmp
or
out
cmp
xchg
cli
cmpsl
lock
dec
jle
outsb
rcll
mov
mov
pop
push
out
mov
xchg
js
xchg
fdivs
test
pop
mov
inc
imul
xchg
das
xchg
push
aas
les
loop
adc
rorl
pop
iret
adc
js
inc
call
icebp
fstps
jmp
and
xchg
and
int
scas
adcb
adcb
jle
pop
loop
jp
aaa
lcall
cmp
xchg
js
adc
jo
dec
sbb
pop
mov
jnp
push
pop
rorl
push
cltd
into
aas
dec
test
and
sub
add
int3
scas
scas
add
ret
cli
faddl
rcrb
cmpsl
out
or
mov
jae
mov
out
mov
sbb
fcompl
das
push
daa
sbb
arpl
lea
mov
fdivr
adc
add
jbe
inc
dec
inc
jnp
test
sub
sbb
push
add
call
mov
push
rcrl
into
and
jnp
hlt
movsl
jns
add
inc
inc
icebp
int3
xor
mov
loope
aaa
sarl
push
sbb
or
orb
les
les
mov
nop
jns
test
inc
scas
sbb
pop
cli
loop
outsl
dec
clc
leave
je
int3
in
and
sbb
ds
test
dec
xor
int
in
mov
jmp
inc
mov
push
popa
mov
dec
lahf
inc
pop
and
adc
push
xchg
jge
xchg
mov
mov
addb
dec
in
stc
xor
push
ss
jno
inc
out
cmp
xchg
dec
sub
in
in
lds
push
roll
mov
mov
adc
ljmp
inc
mov
xchg
repnz
out
xchg
dec
mov
add
dec
or
cmpl
or
gs
cs
xchg
stc
movsl
cltd
fists
jb
loopne
lcall
and
xor
adc
xchg
and
sub
dec
pop
test
mov
mov
test
mov
sarb
insl
lret
inc
push
and
inc
push
decl
xor
dec
add
xchg
dec
shl
push
mov
xchg
out
push
or
sub
xlat
push
mov
insl
aad
sbb
mov
push
push
bound
out
cli
scas
ret
test
call
pop
clc
sub
lea
inc
adc
cwtl
push
adc
rorl
dec
sarb
push
mov
xor
xor
int
std
xchg
xorl
add
je
xchg
cmp
cmp
sbb
mov
aas
adc
sub
loop
and
test
inc
aaa
in
add
shll
cmp
ds
orb
lods
mov
sub
jg
push
test
sub
push
std
fldenv
repz
add
nop
adc
sahf
adc
int
fs
aas
movsb
adc
frstor
mov
dec
pop
lea
or
inc
adc
xchg
int
outsl
adc
or
sub
mov
jae
fcmovu
mov
lods
ljmp
push
push
inc
pop
mov
inc
das
xchg
cmp
pop
insb
pop
add
imul
sbb
std
or
jnp
mov
mov
jge
bnd
loope
test
in
call
mov
popf
aam
sahf
and
cmp
loope
enter
and
add
adc
cmp
adc
jp
cmpsl
cmpsl
push
js
sub
cmp
loopne
sub
lock
inc
shrb
mov
dec
mov
dec
jl
xchg
fisubrs
cld
cmc
sbb
add
mov
inc
sub
and
sbb
ret
xor
pop
scas
adc
xchg
pop
and
cltd
xor
or
out
add
int3
jns
pop
es
cmc
test
add
sbb
fwait
dec
xor
mov
ret
out
movsl
js
inc
ffree
push
mov
lret
jg
inc
aad
bound
test
into
data16
pop
daa
bound
and
iret
mul
mov
mov
bound
xor
mov
or
leave
pop
mov
or
insl
cli
in
dec
jo
loope
xlat
and
out
xchg
or
loopne
ja
pusha
push
cmpsb
dec
cmp
or
push
sub
jecxz
inc
mov
aaa
adc
stos
mov
sbb
repnz
mov
or
out
pushf
fsub
xor
pop
lds
inc
mov
popf
push
cmpsl
into
aad
rcrl
mov
scas
test
sahf
pop
xchg
es
out
scas
mov
dec
mov
mov
inc
arpl
out
jbe
push
in
inc
push
test
imul
xchg
fwait
movsb
out
cmpsb
lods
pop
dec
outsl
mov
negb
out
sarb
jae
imul
sub
stc
push
lods
icebp
mov
push
stos
dec
xchg
or
insb
nop
adc
ja
rcll
push
aam
xchg
adcb
popf
and
ljmp
xchg
mov
or
aas
push
shll
fwait
push
sbb
xor
xchg
push
mov
xor
mov
mov
out
jb
jo
cmp
lea
shr
test
mov
pop
push
cmp
icebp
in
sub
into
push
in
pop
fisubs
xchg
and
sbb
cmp
jne
rcrl
testb
jmp
push
int3
lods
pop
dec
xor
jle
ss
and
ficomps
add
push
xchg
pop
cwtl
enter
movsb
ror
icebp
mov
sub
sbb
mov
add
dec
jecxz
xchg
out
mov
popa
dec
testb
jge
adc
ja
int
add
jae
test
pop
divl
rcrb
cmp
cmp
sbb
shrl
xor
iret
mov
scas
stc
pop
jb
jg
sahf
push
inc
sar
cli
jl
jecxz
dec
sbb
outsb
outsb
xchg
inc
loopne
mov
xor
push
cld
sbb
inc
and
mov
sbbl
into
aad
sub
lahf
outsl
sahf
lea
xchg
stc
inc
jg
les
stc
or
inc
push
popa
int3
push
jl
push
add
mov
cli
popa
xor
push
and
adc
insl
add
repz
cmp
xchg
pop
lods
je
mov
pop
push
jmp
shll
push
push
push
jecxz
call
jl
dec
outsl
sbb
inc
push
jp
xchg
sub
js
jbe
stc
cmp
adc
or
test
jo
push
movsl
daa
mov
hlt
mov
lods
pop
popa
out
dec
pop
cmp
sub
cld
push
dec
das
mov
sub
dec
add
cmpsl
ret
push
push
push
ljmp
mov
mov
pop
je
std
insb
ljmp
lahf
inc
pop
out
pop
push
dec
sbb
ret
push
shlb
sbb
sbb
jl
in
fstl
and
test
or
outsb
jne
xor
mov
shrl
lret
mov
dec
out
push
adc
cs
adc
jl
ret
and
jle
xchg
adc
in
fwait
rcrb
decb
sar
adc
test
sti
inc
push
xchg
add
jl
aas
ficoml
jb
inc
pop
jge
and
lods
add
cmp
cmpsb
rcll
test
pusha
gs
jae
es
scas
dec
movl
push
iret
hlt
lods
jmp
sbb
inc
sbb
int
jmp
fistps
xor
aaa
test
jo
sub
xor
test
ficoml
mov
cltd
dec
inc
push
adc
mov
mov
push
adcb
mov
mov
std
ficomps
push
xor
jbe
mov
mov
ja
pop
jno
jbe
xchg
push
adc
inc
sar
pop
mov
pop
mov
mov
mov
xchg
stc
xor
add
cli
xorb
aas
adc
inc
push
cmp
nop
pop
mov
lcall
sub
getsec
out
dec
pop
aas
add
lea
mov
dec
test
outsl
lahf
xor
cmp
or
lock
sbb
adc
or
pop
dec
repnz
bound
push
imul
push
ljmp
pop
cli
jl
mov
lods
sub
cld
adc
bound
push
hlt
into
cmpl
in
push
out
sbb
cmp
repnz
js
aas
push
push
jmp
out
or
outsl
dec
push
test
adc
pop
test
jb
rorb
push
pop
cmp
testb
ss
mov
adc
arpl
mov
ss
jno
std
xor
push
dec
lret
xchg
dec
ljmp
xchg
mov
jmp
movb
mov
add
cmc
push
add
movb
test
jmp
xor
add
aam
inc
jae
repz
mov
test
fstl
fdivrl
jns
test
jle
sbb
call
stos
jne
push
mov
movsb
mov
cli
and
je
mov
mov
jp
and
imul
lods
clc
fldt
cmc
arpl
adc
shl
aas
xor
pusha
pusha
sbb
pop
loopne
ret
cmp
push
loope
mov
int3
push
outsb
mov
xchg
test
jns
add
call
fdivrs
in
imul
or
cltd
mov
xlat
leave
or
fldt
mov
pop
sbb
insl
sub
mov
cmp
sbb
fdivrs
mov
pop
lcall
test
imul
or
shll
test
pop
std
rclb
insb
fnstcw
and
dec
fucomp
inc
arpl
pusha
imull
adc
lcall
lds
ds
repz
shll
data16
add
push
mov
popf
push
roll
adc
test
cmp
xchg
mov
xor
adc
mov
mov
jno,pn
xchg
mov
inc
hlt
pop
xor
inc
xlat
push
inc
addr16
xchg
push
adc
inc
data16
add
jmp
shl
cmpsb
mov
ja
fisubl
enter
sbb
jbe
mov
subb
add
add
sarl
jns
mov
mov
mov
loop
lahf
fstl
leave
mov
sub
mov
dec
sbb
mov
cmpsl
rcrb
xchg
mov
adc
and
mov
lahf
fnstcw
enter
jnp
aas
movsl
push
mov
cs
in
lcall
mov
mov
int3
jo
dec
in
jmp
insb
mov
mov
sbb
rol
ss
mov
lcall
ljmp
mov
xor
xor
cmp
lea
jne
mov
and
test
shrl
cmpsb
pop
cmp
daa
add
mov
dec
jmp
cmp
ret
fmull
mov
mov
xchg
inc
dec
jle
hlt
pop
push
cmpsb
adc
sub
pop
inc
sbb
sbb
adc
popa
cs
cltd
and
adc
ja
cmp
rcl
rcl
stos
fst
hlt
mov
sbb
inc
in
lahf
inc
mov
and
pop
movsl
movsl
lahf
mov
fs
pop
loope
fidivl
subb
xchg
pushf
nop
in
add
fwait
lcall
mov
sbb
cmc
stos
or
inc
and
hlt
and
insl
mov
icebp
sub
cmp
sub
adc
cmpsl
mov
jl
cmpsl
cwtl
adc
call
cmp
fcom
test
adc
pop
xor
inc
sbb
cli
xor
pop
pop
push
out
out
outsl
pop
and
mov
call
jecxz
cmp
mov
pop
cmp
jno
or
stc
arpl
call
xor
ja
pushf
mov
xor
cmpsb
mov
cs
imul
add
ds
rorl
add
jle
movsl
sbbl
lock
and
test
mov
sbb
pop
leave
cmp
dec
dec
push
and
adc
xor
fdivrs
shll
cwtl
add
mov
dec
add
icebp
lock
jge
addr16
stc
hlt
gs
mov
jb
jle
mov
push
or
push
dec
cwtl
subl
repnz
push
mov
jmp
clc
push
push
data16
orl
push
pop
dec
jnp
jnp
jnp
les
sbb
cmp
cltd
pop
mov
dec
xchg
inc
mov
xor
dec
stc
push
and
mov
pop
xchg
add
nop
mov
ss
or
stc
addr16
and
sbb
rcrl
mov
xchg
xchg
movsl
mov
test
adc
cmp
dec
sbb
add
push
scas
jle
ret
mov
int3
sarb
sub
jmp
mov
fs
adc
sahf
push
inc
sbb
mov
push
sub
jmp
and
or
pop
js
aas
and
add
cmpsb
fisubl
out
push
xlat
inc
repnz
mov
jge
pop
int3
cmc
xor
adc
sbb
stos
mov
dec
jbe
sbb
push
jge
in
fcomps
movsb
test
ffreep
sbb
aas
sub
xor
rcrb
adc
xlat
cmp
xchg
sub
aad
jle
stc
push
inc
jns
or
subb
fmuls
sub
int3
dec
xchg
cmpsl
mov
xor
pop
dec
enter
dec
mov
xchg
fisttps
jge
stc
xchg
xor
dec
pop
hlt
mov
xlat
orb
sbb
xchg
outsb
in
popa
flds
dec
int3
rclb
shl
dec
addr16
sub
fimuls
les
das
sub
pop
in
push
addr16
lods
dec
pop
sbb
rolb
ja
inc
xor
test
outsl
add
ret
imul
sbb
pop
or
jmp
js
adc
mov
fwait
insb
add
add
loope
out
cmpsl
lds
pushf
pushf
cmp
test
add
shl
sub
lret
add
jne
lods
xchg
arpl
scas
and
popf
push
adc
jge
test
sti
pop
loopne
adc
mov
cmp
mov
mov
lock
lret
and
dec
cli
xchg
xlat
int
fcompl
inc
cli
jns
cmp
lds
and
or
pop
out
xor
iret
fistpl
inc
pop
fbld
xor
loopne
cli
js
sbb
loope
test
outsl
mov
movsb
cmpsb
test
andb
cs
repz
fsubr
sbb
cmpsb
add
jns
or
cs
inc
or
daa
xor
addr16
mov
mov
es
int3
lcall
cmc
or
aad
push
add
aaa
leave
sarb
je
add
popf
cmp
imul
add
jg
pop
mov
inc
sub
outsb
adc
out
adc
mov
cmc
adcb
sbb
jg
ss
pop
cmp
packssdw
dec
push
aas
mov
add
push
and
out
fwait
bound
sub
cmpsb
sub
xorl
xor
mov
dec
in
dec
testl
jmp
add
xor
pushf
mov
rcrl
dec
imul
loopne
in
cmp
sub
sahf
dec
imulb
jmp
push
or
xchg
mov
mov
repz
test
adc
aaa
stc
in
imul
mov
dec
sub
icebp
sbb
xchg
mov
sub
lcall
sub
push
push
jmp
fstpt
mov
std
rol
xor
dec
in
ss
adc
sub
push
add
or
mov
ljmp
mov
je
adc
stos
push
aaa
fdivrs
adcl
dec
mov
sahf
or
outsb
mov
movb
arpl
or
imul
xchg
fcomps
or
in
fisttpll
inc
mov
aad
mov
cmpsb
xchg
pop
aaa
movb
movsb
mov
jnp
inc
pushf
xchg
pop
enter
push
sti
test
sbb
imul
cs
nop
leave
das
dec
dec
loopne
lea
stos
mov
sar
arpl
pop
jo
icebp
jno
sbb
out
jge
pop
xor
jb
insb
and
das
sub
jno
pop
lds
sub
mov
mov
ficompl
cmp
push
add
insb
and
sahf
sub
stos
lcall
scas
adc
cmc
jnp
cmp
add
aas
dec
xor
sbb
int3
in
mov
mov
testb
test
in
arpl
push
and
push
xchg
add
cmp
push
enter
xchg
icebp
pop
jmp
xchg
inc
adc
mov
fcomip
jp
stos
loop
cmp
xchg
add
loop
leave
mov
cmpb
enter
shl
sarb
xor
lock
fmulp
fsubs
fcomip
pop
fdivl
inc
and
xor
pushl
iretw
adc
fldcw
cwtl
iret
cmpb
xchg
cmpsl
pop
test
scas
dec
pop
imul
pop
cmp
shll
int3
test
pop
fsts
out
shll
clc
mov
jg
xchg
pop
js
jb
jmp
cmc
and
popa
dec
add
mov
jle
mov
add
cs
leave
into
call
fsts
mov
jecxz
adc
ljmp
jnp
test
jns
ret
and
pop
lock
out
mov
lret
sub
sbb
fsubl
into
insb
ret
popf
paddsw
int
add
push
cltd
add
aad
imulb
in
test
cmp
int
mov
mov
push
xchg
or
lea
sbb
push
decl
imul
addl
pop
aad
aas
push
push
fadds
adc
scas
test
shll
push
dec
jmp
pop
cmpsb
ja
into
les
mov
subl
addr16
loopne
dec
jns
jmp
dec
add
popf
add
cmp
add
cli
test
inc
jb
jno
dec
cmpsl
dec
sbb
dec
int3
and
fcoml
stc
mov
mov
sub
lods
mulb
add
jnp
dec
pop
gs
mov
aaa
push
icebp
xchg
adc
insb
adc
sahf
jb
stc
dec
pop
incb
outsl
inc
nop
inc
imulb
negl
mov
mov
sub
mov
and
jl
cmp
push
dec
flds
addb
stc
ret
adc
add
jne
faddp
push
sbb
mov
push
pop
or
fldcw
fs
inc
notb
and
out
mull
cli
xorb
pop
adc
stos
fs
cmpsl
push
jge
arpl
faddp
nop
shrb
sahf
xchg
pop
es
lcall
out
mov
jecxz
adcb
loope
jns
out
insb
mov
aaa
xor
push
inc
push
or
fistpll
aaa
mov
hlt
roll
mov
das
inc
psrlw
sub
push
inc
mov
lcall
icebp
inc
jg
aam
and
cmp
jp
fdivl
lcall
pop
mov
or
shll
mov
loop
mov
loope
mov
lods
rcrb
cmp
test
lahf
fs
jb
out
ja
mov
test
cmp
ret
cmc
pop
cmp
add
clc
ljmp
add
pop
dec
mov
jne
jmp
movsb
jl
cli
cmp
test
je
inc
test
mov
lcall
cs
mov
fsubrs
test
pop
sbb
pop
ds
aaa
mov
sbb
mov
fyl2xp1
xchg
lcall
clc
fldl
fidivrl
mov
cwtl
stos
mov
cli
icebp
push
pop
xor
test
in
test
or
mov
in
sub
loopne
aas
push
jmp
pop
imul
test
push
negb
mov
xor
jecxz
movsb
xor
sub
or
cwtl
dec
push
mov
lret
adc
cs
inc
cld
jp
lret
test
stos
lret
cmp
lahf
xchg
shrb
adcb
leave
scas
fwait
add
or
insl
sub
orb
xlat
in
jbe
add
lahf
fiadds
in
pop
jmp
push
ja
push
imul
cmp
scas
xchg
enter
sbbl
fisttpll
adcb
mov
sub
xorb
test
test
test
xchg
dec
imul
mov
lret
or
popa
dec
insl
popf
mov
shrb
fstps
mov
pushf
dec
add
and
mov
es
arpl
test
cmp
enter
cwtl
call
iret
shrb
fadds
xor
jns
fstpl
dec
mov
push
add
cmp
or
es
in
pop
adc
pop
xchg
shrl
lcall
and
mov
in
popf
call
push
stos
or
sarl
hlt
daa
mov
roll
add
rorb
cmp
fsubp
or
jae
adc
std
das
push
add
xchg
mov
nop
jl
sbb
pushf
sub
and
adc
test
sbb
frstor
jle
data16
imul
cmp
dec
cmp
xchg
daa
mov
sub
orl
clc
addr16
push
out
je
inc
or
filds
in
jne
imul
push
jmp
sahf
adc
cld
out
xor
out
loope
mov
popa
repnz
test
jg
mov
or
leave
mov
fidivrs
push
iret
inc
pop
add
adc
loop
nop
push
nop
mov
in
call
push
pop
jp
cwtl
rorl
jg
cmp
call
movsl
push
fistpll
dec
dec
xlat
inc
xchg
mov
xchg
cmp
mov
jo
or
jb
pop
mull
inc
lret
sahf
out
out
rol
fldl
sbb
je
adc
pop
xchg
sahf
sub
mov
mov
mov
icebp
inc
aas
dec
cltd
mov
or
push
add
push
gs
xor
adc
pop
lret
fdivl
jb
mov
stos
jp
jbe
xchg
mov
mov
les
xchg
or
insl
dec
jmp
imul
shll
divl
adc
pop
pop
data16
and
shrb
mov
adc
or
stos
je
fwait
pop
pause
mull
inc
cmp
adc
pop
jp
test
pop
popa
cmp
loop
pop
pop
jno
sbb
bound
sub
add
and
and
into
cwtl
scas
inc
inc
imul
int3
push
rdmsr
mov
push
dec
sar
or
lcall
sbb
bound
cmp
sub
sub
push
pop
xchg
xor
cltd
rcrb
xorb
ficoml
in
mov
daa
ljmp
out
ret
jmp
jmp
movsl
stos
sbb
idivb
scas
ficomps
lock
xor
insb
sub
xchg
push
pop
jo
cmc
inc
mov
imul
data16
mov
mov
mov
stos
or
pop
or
mov
roll
add
xor
xor
mov
shll
mov
testw
ljmp
push
repnz
outsb
popf
std
mov
add
lea
mov
stos
pop
or
or
mov
add
insb
adc
fs
outsb
ret
iret
pushf
cs
pop
jbe
lods
mov
pop
sbb
mov
adc
adc
xchg
daa
sub
pop
pop
test
cmovo
in
pushl
movsb
clc
sbb
adc
sbb
xchg
jmp
ss
add
pop
out
add
jmp
fnsave
ret
int3
or
xchg
mov
sub
pop
xchg
addl
dec
pushf
pop
xor
shrl
cmpsl
push
adc
pop
fstl
jb
gs
and
dec
pop
dec
data16
xlat
add
cmp
jl
jle
aaa
test
add
or
or
addl
popa
mov
test
daa
push
xor
xchg
add
scas
mov
pusha
lahf
ja
ret
leave
pop
inc
lcall
pop
mov
push
add
jns
adc
movb
jnp
push
jecxz
aam
ss
js
pop
aas
dec
xlat
outsl
sub
cld
and
mov
and
fmuls
xor
les
mov
fwait
arpl
push
push
push
stos
leave
ret
jge
rolb
or
and
sub
das
sti
add
in
pop
imul
arpl
pop
mov
push
mov
ss
imul
jo
fs
push
and
dec
add
les
nop
pop
xchg
xor
mov
push
test
cmc
shll
rcl
loop
fcmovbe
in
gs
inc
insl
xchg
or
ds
adc
mov
inc
xor
pop
lea
mov
lock
xlat
push
mov
add
push
es
ljmp
cmp
aaa
popf
mov
lock
or
mov
xor
fs
adc
jb
sub
scas
es
mov
xchg
mov
dec
jmp
stc
sbb
sahf
push
fs
jno
push
sahf
aam
scas
inc
and
fs
pusha
cmp
std
repz
shlb
xchg
mov
sti
mov
add
add
outsb
fadd
mov
sbb
pop
and
out
std
stos
icebp
pop
cwtl
lds
test
iret
pop
or
data16
jae
stos
ds
sbb
lock
jg
sub
xchg
xchg
push
cmp
jne
rol
outsl
repnz
or
or
repz
jbe
inc
andb
inc
jp
adc
sub
mov
dec
cmpsb
in
repnz
movsl
sbb
dec
ret
add
xchg
jbe
push
dec
cmp
sub
insb
loope
mov
mulb
and
fidivl
ljmp
lea
out
pop
andl
dec
dec
lods
and
addr16
adc
push
pop
imul
mov
mov
outsb
xor
push
hlt
arpl
les
cltd
in
mov
jae
iret
push
movsl
ret
das
test
loopne
es
sub
loope
insb
jno
ljmp
pop
mov
fisttpl
inc
push
popf
call
cmp
xchg
es
bound
pop
scas
jp
jecxz
mov
pop
push
push
cmp
inc
cmp
in
movsb
jp
fcmove
push
sti
in
cmp
ret
in
scas
cwtl
out
mov
out
icebp
data16
stc
dec
mov
push
scas
pop
pusha
sub
jnp
xor
lret
sub
push
xchg
xor
add
xor
pop
lahf
pop
aas
xor
adc
inc
out
orl
aaa
xchg
push
ret
sub
xchg
popf
mov
sti
cmp
dec
in
aad
call
jp
iret
jbe
prefetchwt1
mov
idivl
movsb
pop
hlt
hlt
cmc
add
add
sbb
xchg
xchg
out
ja
aaa
ljmp
xor
dec
sbb
mov
mov
shll
and
jg
push
sbb
lods
lods
or
out
lods
rcll
dec
lds
jbe
xchg
mov
cmc
add
inc
ja
outsl
in
or
inc
div
pushf
lcall
repz
sbb
push
jbe
cmpl
pusha
inc
jne
jg
inc
sub
pop
ja,pn
shl
mov
std
mov
jge
push
sbb
lock
loopne
ret
ret
adc
cmpsb
lahf
jmp
sub
push
ds
mov
jmp
and
fisttpl
jp
inc
call
cmp
adc
je
divb
mov
lock
jg
xor
pop
sti
pop
test
das
loop
jbe
push
mov
push
imul
js
jo
cmpsl
add
xor
xchg
sub
or
loopne
jp
inc
and
lds
cmc
jo
sbb
popa
sbb
je
jno
cmpsb
cltd
mov
adc
jns
aam
add
inc
mov
pop
xchg
adc
ljmp
sbb
ljmp
push
cli
inc
xlat
rep
xor
dec
xchg
add
jge
and
sti
xor
icebp
jbe
xchg
daa
or
push
dec
fidivs
rclb
mov
push
shlb
ret
jmp
or
stos
push
rcr
psubusb
dec
fidivrs
or
mov
dec
fdivrl
xchg
std
orl
cmp
xchg
adc
inc
jmp
adc
mov
sarb
nop
cmp
push
out
sbb
stos
pop
cli
movsl
loop
xchg
mov
cmp
and
popa
test
test
cwtl
popf
ret
push
lahf
mov
popa
lea
mov
mov
adc
fwait
xchg
ljmp
dec
int3
cmp
xchg
out
dec
shrl
int3
dec
sub
lods
mov
stos
iret
and
sub
adc
dec
cld
and
and
mov
dec
mov
mov
cmp
and
fstl
adc
jns
pop
and
leave
jmp
adc
iret
clc
push
xchg
aas
mov
inc
lds
in
sub
jno
cld
pop
icebp
imul
rcr
arpl
sbbb
fistpll
and
leave
pop
mov
jbe
lock
ja
orb
adc
iret
push
fcomi
repnz
movsb
hlt
xor
jnp
push
add
shlb
jmp
mov
in
sbb
je
rcl
or
or
and
iret
daa
rcrb
pop
call
stos
in
mov
imul
cs
leave
insb
pop
lret
dec
dec
and
insl
push
fistpl
mov
and
shr
mov
adc
push
mov
ds
or
cli
push
mov
xor
jle
mov
inc
inc
inc
test
rcl
mov
insb
incb
mov
stos
mov
cltd
xchg
mov
fidivrs
call
fwait
out
ficoms
testb
adc
and
mov
ret
call
leave
lcall
adc
mov
lods
aam
dec
in
je
fs
push
mov
pop
dec
in
mov
es
xor
cmc
dec
dec
xchg
push
sub
imul
adc
scas
mov
cmpsb
lret
dec
dec
dec
adc
or
arpl
inc
pop
repz
mov
push
nop
orl
or
mov
mov
mov
pop
jae
out
dec
add
pop
adcb
neg
xchg
mov
ja
xchg
cmp
adc
stos
jb
and
jnp
adc
mov
arpl
sbb
xor
jae
aas
xchg
loop
jae
int3
pop
and
jmp
mov
ljmp
sub
or
xchg
popf
cmpsb
cmpsl
orb
inc
int3
mov
adc
lahf
ficomps
xchg
push
daa
adc
pushf
fsubrp
shrb
or
addl
stos
xchg
xor
lods
icebp
setnp
fsub
popf
es
mov
bound
jmp
cmp
lahf
fildll
mov
insl
cli
imul
int3
xchg
popl
idivl
lods
cmp
les
adc
xchg
add
xor
inc
sahf
lret
fisttpl
jl
stos
jmp
enter
jl
dec
mulb
cmpsb
xchg
ljmp
mov
ds
xchg
shrl
iret
cmp
adc
xlat
jecxz
cmpps
jl
adc
ljmp
jl
sbb
repz
insl
ljmp
mov
fdivrl
pop
push
jmp
lcall
lcall
repnz
mov
xor
and
scas
jbe
xchg
test
mov
cmc
or
ss
lcall
or
mov
sbbl
xchg
cltd
stos
scas
sub
shrb
insb
jl
dec
sub
push
es
loop
scas
outsl
adc
sbb
cmp
in
out
push
ret
js
and
cmp
imul
mov
dec
and
xlat
push
pop
and
inc
inc
repz
mov
lahf
xchg
jmp
push
out
fisubrs
rorl
jne
jge
aaa
jp
aam
icebp
add
cmp
daa
cwtl
mulb
adc
daa
mov
xor
and
mov
mov
cmp
sbb
aad
test
ds
dec
aam
out
push
mov
fsubl
cs
adc
cmp
inc
dec
jb
out
iret
imul
inc
fsubl
or
cli
mov
or
pusha
dec
inc
or
in
mov
or
jle
dec
clc
xchg
rclb
jecxz
mov
and
adc
jne
push
rcrl
out
lods
push
insb
dec
mov
mov
and
loopne
mov
addr16
negl
test
mov
push
mov
movsb
andl
out
js
push
pop
sarl
jno
cld
rclb
lret
les
add
stos
test
sar
lret
movsl
test
rorb
das
add
rclb
aam
adc
add
iret
ljmp
jg
out
sub
mov
sbb
pop
dec
dec
aaa
jne
dec
in
pusha
pusha
popa
test
lods
mov
xchg
dec
popf
cmovle
pop
imul
dec
add
das
inc
fs
inc
jnp
mov
mov
xor
mov
dec
scas
mov
les
push
inc
nop
inc
pop
xor
pop
int
cmp
mov
jno
out
jl
repnz
scas
jno
sub
call
jmp
js
sbb
pop
cmp
filds
push
adc
pop
ficoml
sbb
out
sahf
jns
dec
mov
push
cmp
add
push
push
jg
sbb
xchg
test
stos
aad
add
ret
lods
xchg
fucomip
sti
push
out
xor
in
xor
imul
fimuls
notl
xchg
mov
lret
lret
nop
fcmovb
loope
dec
fnstenv
cmp
mov
repnz
ret
nop
sub
mov
sbb
jmp
dec
mov
call
xchg
pop
sbb
das
add
xchg
iret
or
aam
mov
ds
lret
xlat
xor
mov
pop
stc
cmp
xor
insb
push
lods
inc
mov
or
mov
addl
mov
fwait
lods
in
jge
test
mov
pushf
aaa
ss
xchg
fstpt
fdivrs
das
mov
out
out
out
dec
sbb
arpl
scas
leave
inc
lcall
add
mov
or
aaa
xor
mov
jb
insb
and
pushf
subb
adc
mov
ds
test
data16
sub
les
fisubl
push
pop
dec
push
call
and
icebp
inc
ficomps
dec
and
push
leave
bound
inc
adc
push
shrb
subb
movsb
jae
nop
aas
dec
adc
dec
mov
adc
fdivrs
jbe
push
pop
imul
sbb
repz
jne
adc
fstps
sbb
mov
add
inc
lcall
pop
scas
push
lods
iret
sbb
nop
sbb
sbb
or
cmp
jb
enter
dec
test
mov
mov
lret
pop
jo
xchg
clc
int3
stos
jle
outsl
xlat
pop
test
inc
test
sbb
pop
lcall
ds
ficoms
xor
inc
std
mov
loop
mulps
repz
jmp
ret
lret
and
das
divb
mov
cltd
call
nop
mov
test
out
aam
jmp
shll
and
pushf
xchg
fstl
add
addr16
negb
or
mov
pop
dec
lahf
sbb
xchg
fistpl
shlb
cmp
adc
or
adc
adc
loop
scas
xchg
sub
add
fcom
mov
push
addl
js
or
es
cmpsb
mov
jbe
mov
aaa
aam
inc
mov
daa
push
cmc
or
outsl
sub
xchg
xor
pop
aas
lds
stc
in
sbb
xchg
loopne
adc
xlat
adc
xchg
mov
add
xchg
and
mov
shrb
hlt
iret
sub
roll
pop
das
cmp
stc
pop
sbb
into
imul
sbb
fcoms
int
outsb
pop
stc
sbb
and
ret
testb
pop
call
xchg
dec
push
je
mov
adc
dec
gs
xchg
jle
push
push
mov
add
sub
testb
xor
hlt
push
add
or
fwait
xlat
clc
inc
pop
jb
out
ret
push
sub
fucomi
xor
into
sbb
push
pushl
div
dec
jb
jno
inc
flds
jne
jp
xor
addr16
loopne
insl
jl
lahf
pop
les
cmpsl
xor
rorl
push
and
mov
inc
cs
push
mov
repz
insb
cmpl
int3
lret
push
inc
les
out
iret
dec
adc
mov
push
mov
into
inc
aad
cli
stc
ret
es
and
in
int3
iret
sub
sbb
faddl
nop
xchg
leave
xchg
adc
and
pop
jge
leave
adc
xor
dec
and
in
sbb
ljmp
adc
dec
lret
jle
xchg
xor
push
jmp
or
push
xchg
and
out
cmpl
les
jmp
testl
xor
and
mov
gs
lahf
aam
pop
cwtl
and
mov
cwtl
or
xor
sub
lahf
decl
cltd
in
data16
adc
fdivrl
sbb
jge
add
ret
cs
bound
sub
sbb
xor
mov
popf
sti
roll
fidivs
insl
inc
gs
mov
sarb
sbb
divb
js
test
cltd
adc
scas
ja
pop
or
sbb
call
sti
mov
mov
sbb
xchg
push
push
pop
xchg
ficomps
rolb
bound
jl
push
mov
xchg
pusha
xchg
clc
dec
inc
cmc
mov
fisttpll
fildl
dec
mov
mov
js
jne
adc
jne
cli
lret
sbb
jns
js
mov
sbb
push
mov
popl
mov
mov
jmp
rcrl
in
lret
or
fiaddl
icebp
stos
xor
xchg
jl
das
push
les
sub
push
fldl
inc
fidivs
cmpsb
ss
mov
in
fisubrs
int
xchg
in
mov
inc
ss
lea
adc
cmc
dec
pop
or
data16
adc
xchg
dec
lods
loop
push
mov
mov
enter
sbb
mov
add
pop
inc
test
ljmp
test
mov
aam
pop
pop
nop
leave
mov
loopne
cmp
xchg
jge
shrl
push
sub
push
xchg
fcmovne
mov
pop
test
les
inc
outsl
int
in
clc
adc
inc
mov
in
xor
hlt
xchg
xor
ljmp
dec
mov
cmp
into
mov
pop
icebp
xor
rcrb
jns
mov
xor
cmp
pop
mov
push
lds
mov
xor
cld
adc
add
mov
add
aad
xchg
cmp
push
ljmp
or
movsb
sub
bound
mov
repz
xchg
jnp
dec
cmp
es
repnz
sub
jl
sub
loope
inc
add
push
mov
aas
push
into
mov
xor
std
mov
cmp
ja
sub
fidivrl
sahf
mov
pop
cld
scas
aad
xorl
insb
sbb
lods
pop
push
pop
adc
mov
and
fstpt
popa
mov
out
scas
fiadds
mov
in
xor
scas
mov
xchg
dec
mov
mov
pop
les
dec
jbe
add
sbb
mov
cwtl
mov
fs
pop
scas
jmp
mov
inc
imulb
adc
sbb
arpl
sub
push
jae
xor
insl
daa
mov
cltd
aaa
inc
mov
adc
in
ds
movsl
sub
sar
test
movsb
push
ret
mov
add
mov
mov
xchg
ds
jmp
fs
push
adc
mov
test
add
cmc
adc
xchg
sub
jo
xor
lock
or
cltd
and
or
movsb
loopne
adc
and
mov
repz
sarl
sub
inc
fsin
dec
call
jmp
es
iret
add
dec
scas
mov
pop
fdivl
inc
loope
sbb
filds
shl
dec
outsb
mov
mov
sete
cmpsb
xchg
in
push
push
data16
xchg
jge
mov
xchg
aam
int3
xor
sbb
jg
popf
je
cli
int3
and
cld
test
dec
mov
les
adc
add
lods
sub
pop
hlt
cmp
sub
stc
lods
sub
pop
push
ja
rorb
cmp
sub
dec
mov
scas
push
fisubrl
xchg
inc
add
jge
ret
mov
add
insb
out
rclb
or
mov
and
mov
testl
push
lea
xchg
pop
sub
push
sbb
jae
jecxz
add
jecxz
lahf
lods
pop
inc
pusha
push
loopne
mov
xor
push
xor
push
sbb
push
mov
das
and
push
sub
xchg
push
mov
mov
push
addl
into
out
scas
int3
adcl
test
jecxz
lcall
dec
sub
out
xchg
adc
pop
pop
test
and
sub
faddp
adc
je
xor
and
enter
aam
or
sub
jmp
pusha
insb
fimuls
movsb
aad
and
jp
and
add
or
fdivr
mov
adc
lret
movsl
out
inc
push
mov
dec
pop
enter
push
push
sbb
and
gs
std
and
or
test
call
inc
inc
xor
sub
js
cld
stos
jnp
sub
and
dec
push
jno
inc
pop
orl
das
shll
in
jg
adc
add
ljmp
sub
mov
movsb
adc
and
mov
js
ficomps
jmp
dec
mov
sub
add
push
sub
cmc
je
mov
cmp
or
jns
xchg
lret
inc
xchg
jle
sub
daa
xchg
arpl
sbb
xlat
addr16
lock
js
aas
cmp
daa
subb
xor
js
xchg
pop
int
mov
jl
iret
dec
out
push
repnz
push
mov
leave
fadds
and
notb
call
mov
xchg
mov
mov
leave
movsb
mov
popf
jo
jae
pop
imul
adc
loopne
bound
sbb
sbbb
in
mov
test
sub
outsb
repz
je
cmpsl
mov
and
aad
add
fnstsw
int
add
mov
jno
loope
mov
cli
ret
push
ljmp
das
aas
pop
dec
out
lret
or
and
cmp
jno
rcrb
ds
xchg
icebp
mov
pop
sub
scas
jno
cmc
dec
outsb
mov
arpl
adc
adcl
hlt
repnz
or
push
sbb
inc
pop
lods
push
imul
adc
insb
stc
dec
stos
movsb
lret
and
popa
dec
lcall
cmpsl
xor
out
lcall
push
xchg
sbb
clc
adc
mov
sub
shlb
imul
mov
xor
ljmp
mov
pop
jmp
inc
mov
cmp
or
mov
std
movsb
dec
and
cs
sbb
or
xor
roll
cmp
sub
popa
repnz
adc
shlb
aas
addr16
sbb
sbb
dec
cmpsl
in
sahf
movsb
mov
xchg
xchg
mov
cmp
insb
popa
jecxz
xchg
lret
jno
fucom
in
mov
inc
inc
sbb
fistpll
sub
and
cld
loop
sbb
mov
pop
test
inc
add
nop
aaa
outsb
gs
jns
inc
xor
add
pop
sub
pop
push
inc
sbb
sub
lds
sub
mov
imul
mov
loopne
das
outsb
shll
sbb
inc
in
cmp
aam
inc
clc
xor
pushf
sti
add
dec
inc
jl
and
test
mov
out
nop
test
scas
pop
into
push
pop
aam
ja
mov
mov
sub
jecxz
mov
mov
cmpsb
je
inc
mov
fs
add
sub
int3
or
and
inc
jp
mul
fiadds
aas
lcall
push
mov
xchg
fisubl
xlat
shlb
test
js
pop
movsl
clc
fldl
pop
mov
jmp
jmp
scas
mov
outsl
mov
pop
mov
xorl
fstpl
pop
test
lret
mov
outsl
mov
inc
mov
mov
ficomps
js
dec
add
pop
inc
push
fsubrp
push
push
mov
and
mov
leave
cmp
xchg
fwait
sbb
lahf
lock
movsb
bound
pop
aaa
aam
xor
aam
jne
jbe
outsl
repnz
jb
sub
adc
cmp
push
push
xor
add
fbstp
pop
mov
test
sub
lds
jnp
lret
outsb
pop
lock
sub
sub
loopne
dec
arpl
lea
mov
inc
repnz
leave
mov
in
inc
jno
popf
int
mov
xchg
pop
mov
decl
inc
add
imull
mov
fisubrs
pusha
pop
aad
lret
notl
icebp
pop
lret
fiadds
gs
outsb
push
jle
add
stos
std
imul
jbe
inc
jge
dec
movsb
jnp
and
push
mov
push
loope
pop
mov
mov
jbe
rolb
push
xor
adc
into
jl
rolb
jge
inc
adc
aad
dec
mov
test
shrb
ljmp
sti
inc
test
imul
mov
fildll
je
lods
jne
bound
or
push
xchg
adcb
sti
xchg
shlb
pop
imul
dec
mov
push
cmp
shlb
clc
daa
fidivl
cmp
and
ret
aas
test
jg
pusha
or
mov
sahf
jbe
loopne
push
in
nop
mov
jecxz
inc
fistpll
lods
jl
imul
push
push
xchg
ret
xchg
cmpsl
stc
icebp
movsb
or
test
sub
test
shlb
xchg
inc
jb
jecxz
xor
mov
mov
pusha
xor
gs
test
lea
and
push
icebp
push
lock
clc
sbb
fucomi
shl
jbe
lock
rcl
inc
jns
scas
scas
pop
stos
adc
aad
xor
loope
or
lock
xor
xor
pop
jae
xchg
or
fcmove
jns
mov
call
jge
or
aaa
or
inc
push
pop
sbb
aas
add
cmpsb
mov
shll
fsub
push
imul
sbb
xchg
pop
lock
push
loop
cmpsl
add
add
stos
adc
roll
cmp
insb
add
imulb
imul
adc
add
mov
mov
dec
jge
loope
scas
mov
xchg
les
jg
es
adc
jg
xor
sbb
inc
xchg
rolb
call
int3
xor
jp
fiadds
jp
push
xchg
adc
lds
xor
or
inc
xchg
jne,pt
aaa
and
cwtl
imul
pop
icebp
popf
stc
sbb
gs
xchg
movsl
cmp
jno
movsl
dec
arpl
xchg
fs
cli
mov
jecxz
xchg
adc
add
popw
cltd
scas
das
repz
mov
pop
push
pop
fwait
mov
wrmsr
nop
aam
sahf
jecxz
outsb
testb
jg
mov
jge
pop
cmp
stos
addl
call
faddl
jb
stos
pop
cld
cmp
cmpsl
lock
xchg
mov
and
adc
icebp
xchg
xchg
lea
and
add
push
rolb
out
sub
es
cmpsl
adc
out
cmc
notb
dec
jecxz
call
test
or
pop
cmc
sub
lcall
shll
xchg
jg
pushf
push
sub
dec
fistps
pop
mov
loopne
sbb
cltd
dec
jno
push
mov
hlt
add
pop
mov
icebp
dec
scas
out
xor
add
shll
out
clc
pop
jmp
aaa
fists
movsl
jno
ret
inc
inc
inc
sub
sbb
pushf
insl
adc
xor
fldl2t
mov
rclb
and
push
int
mov
dec
lcall
sub
xchg
aaa
push
in
ds
xor
movsb
insb
and
push
sub
fisubl
mov
lods
and
sub
jp
dec
sbb
push
and
dec
enter
xchg
or
movsb
fdivrl
jo
inc
pusha
push
jbe
xchg
or
gs
jno
sti
push
cltd
add
and
push
mov
inc
pop
dec
decb
pop
aas
mov
in
daa
dec
xchg
je
jo
lret
inc
cmpsb
mov
in
ficompl
mov
sbb
mov
in
out
pop
mov
xorl
jle
add
add
lret
cmp
rol
fadds
adcb
inc
mov
inc
add
fiaddl
inc
jmp
jmp
andl
aas
xor
mov
fisttps
inc
jo
xchg
fnstenv
add
inc
fildll
push
sub
push
sub
xchg
add
sub
out
in
push
pop
loopne
stos
add
in
test
or
sbb
xlat
cwtl
inc
movb
add
or
fists
add
mov
dec
cli
repz
dec
cltd
jge
mov
pop
arpl
insl
or
xor
sahf
dec
inc
fucompp
ret
je
stc
push
inc
inc
outsl
sbb
stos
movsb
xchg
repz
rcr
xchg
and
dec
rcrb
out
jmp
popl
mov
xor
inc
adc
cmc
fs
shll
mov
mov
or
adc
dec
xor
cmpsb
inc
inc
fisubrl
or
cli
or
mov
shl
lds
push
ljmp
sub
or
cmp
inc
pop
scas
stc
in
push
cmp
inc
enter
mov
push
push
fdivl
push
add
sti
shl
loop
js
subb
push
mov
or
int3
fstl
push
test
test
xchg
push
popa
scas
sub
pop
stc
cwtl
inc
pop
scas
rclb
iret
mov
push
or
pop
insb
and
jge
fnstenv
loope
insl
pop
push
aad
das
nop
call
das
loopne
mov
dec
fs
sub
sbb
jnp
fsubr
inc
cmp
xchg
cwtl
int
dec
js
pushf
mov
insl
pop
cmp
aad
jmp
pop
rcr
movb
mov
in
sahf
stc
push
sti
cmpsl
lahf
iret
mov
and
scas
ss
les
fldenv
mov
mov
shlb
adc
sbb
arpl
jge
dec
inc
cmpb
dec
adc
mov
push
or
add
add
xlat
pop
inc
mov
cmpsl
lahf
xchg
mov
mov
das
daa
sbb
pop
jae
push
arpl
adc
mov
cmp
mov
pop
out
repnz
cld
out
aam
out
sub
xor
inc
cmc
loop
stos
inc
push
pushf
loop
add
xchg
arpl
mov
xchg
jae
add
mov
cmp
orl
and
xor
mov
fdivr
sbb
xchg
cmpsl
push
mov
loop
or
fdivs
and
imul
arpl
xor
imul
xsave
cmp
xlat
add
rcl
and
in
jbe
shr
sub
fucom
lea
outsb
imul
cmpsl
ljmp
mov
shrl
xchg
std
out
xor
inc
push
jg
sbb
pop
pop
rorb
sub
fwait
or
mov
xchg
dec
pop
xorb
sarl
into
xchg
insl
insl
test
jle
xchg
mov
fwait
in
in
bound
fidivrl
dec
in
mov
loop
fnstenv
inc
cmp
cmc
jecxz
mov
mov
rcll
push
std
cltd
out
test
or
fcompl
adc
mov
cmp
lods
cmp
fs
mov
push
movsl
jns
arpl
xchg
mov
ss
fwait
add
movsl
pop
mov
push
sub
pop
mov
mov
sbb
push
aad
and
mov
mov
popf
xor
push
sti
add
sub
aad
jnp
icebp
cmp
int3
jae
cmc
cs
sarl
cmp
mov
inc
popf
xchg
fistpl
cwtl
leave
mov
push
or
test
cmc
mov
pushf
mov
cmc
xchg
movsb
loop
or
sbbl
std
mov
mov
mov
push
jecxz
cltd
sub
xor
or
mov
inc
std
xor
pop
mov
pop
mov
aad
mov
sbb
and
mov
in
movsb
pop
mov
jp
fs
or
loope
popf
add
sub
fnsave
test
ret
lahf
adc
adc
xchg
icebp
push
loopne
push
jno
mov
push
movsl
scas
scas
sub
inc
mov
pop
bt
fsts
in
lret
andb
dec
cmp
ds
push
push
ja
ja
fmul
out
call
stc
xor
fmul
loopne
mov
cmp
insb
int3
pop
add
std
mov
mov
jmp
cmp
lahf
decl
push
cmp
dec
push
cli
or
dec
cmp
out
push
mov
mov
lods
pop
fucomip
fwait
jle
or
fisubrs
out
fwait
stos
scas
and
adc
repnz
pushf
sbb
push
push
fistps
or
jge
movb
xchg
in
jmp
std
or
cmp
push
fisubrl
dec
mov
iret
std
mov
xchg
push
sub
fisubs
mov
xor
xchg
dec
aad
fisubl
mov
or
out
sub
test
orb
sub
lret
jmp
push
push
lahf
sub
in
xchg
jne
into
push
xor
xchg
sub
fsubs
sub
dec
pop
dec
or
push
mov
sub
popf
sbbl
fs
out
pop
push
inc
sbb
orb
scas
mov
fsubrs
cmp
and
scas
insb
popa
mov
pusha
jno
and
andb
adc
cmp
sub
iret
sub
into
shlb
jb
aam
dec
rorl
lret
std
mov
adc
inc
dec
pop
stc
push
xorb
jne
mov
jp
outsl
cmp
fsub
repnz
scas
addr16
cli
scas
js
mov
or
dec
pop
dec
sbb
cmpl
ret
ss
mov
std
pop
mov
ss
mov
add
int3
jl
insl
ret
cmp
ljmp
mov
sub
shll
push
add
ret
and
gs
jns
fisubs
out
adc
adc
es
outsl
imul
xor
mov
or
cmp
mov
inc
mov
pusha
fs
addr16
xor
fmull
ret
idivb
adc
xor
test
imull
mov
jecxz
push
push
xor
jp
add
mov
fwait
fistpl
jmp
dec
sbb
sbb
jl
cvtpi2ps
in
sub
mov
popa
hlt
jns
sbb
jnp
or
xor
jo
nop
or
xor
xchg
jns,pn
stos
mov
jno
jle
repnz
imul
ss
call
lret
add
cmpsb
sbb
jns
push
sub
xchg
jne
adcl
and
jp
add
andb
cmc
sub
out
add
cmpl
sbb
xor
dec
or
adc
ror
inc
shrl
sub
jg
outsb
push
addr16
fnsetpm(287
test
idivb
add
ljmp
ss
cs
aas
add
or
mov
loopne
aaa
mov
mov
bound
or
pop
jecxz
shl
roll
xor
sub
scas
inc
scas
out
insl
shrl
xor
sbb
pop
mov
call
dec
push
ror
vmovaps
subb
jge
lods
jne
xchg
je
jnp
lret
je
imul
and
ss
add
dec
jg
push
out
out
push
pop
fcmovu
cld
das
jne
imul
outsb
add
cwtl
pushf
add
cmp
lds
je
pop
mov
mov
and
mov
jbe
and
adc
ljmp
das
pop
sbb
fnstenv
xchg
add
iret
in
xchg
in
hlt
sti
sbb
out
and
fcmovnb
nop
movsl
fsubs
int
inc
inc
pop
mov
and
and
and
dec
add
ret
jns
cmp
sub
sub
mov
inc
pop
aas
loope
sub
sarb
aas
and
sub
enter
mov
addr16
dec
mov
std
test
pop
dec
pop
jmp
xor
adc
adcl
das
xchg
gs
pop
push
fwait
pop
xchg
negb
outsl
jle
xchg
mov
push
ficompl
cwtl
gs
adc
mov
stos
out
out
in
and
push
xor
mov
push
xchg
sbbl
dec
adc
movsb
jb
gs
insb
out
sbb
das
push
xor
lcall
sahf
in
mov
pop
movsl
fwait
mov
push
sbb
sbb
push
adc
leave
pop
pop
xchg
mov
add
cmc
xor
lret
sarb
dec
add
add
repz
loop
test
in
adc
sub
clc
mov
xchg
mov
adc
mov
lods
pusha
repnz
jb
ljmp
sub
into
in
out
std
pop
call
lcall
mov
mov
int3
mov
push
lea
das
jecxz
pop
add
sahf
outsl
pop
sahf
cmp
dec
lret
mov
movsl
les
cmp
lea
movsb
dec
or
lock
fwait
pop
jle
les
mov
inc
fstpt
jp
sbb
cmpsl
mov
xor
sahf
in
bound
lret
push
iret
fcomps
pop
inc
mov
cli
insb
fstpt
cmp
movsl
dec
sub
outsb
mov
xor
cmpsb
pop
mov
out
rolb
adc
shlb
adc
sub
or
outsb
clc
push
mov
lock
xchg
in
mov
push
mov
xchg
mov
loope
jae
pop
mov
shrl
jb
or
pusha
int3
jmp
and
mov
aad
mov
mov
sub
out
mov
aas
cmp
repnz
lret
mov
inc
xor
jno
mov
hlt
pop
add
dec
mov
je
mov
jno
push
dec
aad
dec
popf
mov
inc
int3
and
ljmp
shlb
aam
push
call
mov
mov
or
ret
sbb
jo
cwtl
repz
add
lods
gs
std
je
sub
push
cwtl
dec
shrb
ds
add
lock
mov
ds
in
test
cmc
jle
adc
sbb
in
lock
dec
dec
xor
test
out
mov
push
jo
dec
jecxz
pop
mov
ret
cmpsb
and
jmp
dec
xchg
push
mov
add
mov
popa
test
dec
loop
fcom
jb
adc
xlat
cmp
lcall
fldenv
popf
and
imul
adc
adc
lcall
ret
pop
cmp
push
add
stos
popa
fs
mov
mov
dec
int
ja
into
mov
cmc
rolb
mov
cmc
mov
out
cwtl
aas
repz
jns
jae
mov
fnstcw
add
jl
sub
lahf
enter
jl
cltd
cltd
push
les
inc
mov
jae
sahf
or
ret
sbb
jo
sub
jecxz
xor
xor
ja
mov
cmc
adc
xor
movsl
enter
daa
fcomps
mov
insl
fcmovnbe
mov
out
cmp
cmp
mov
push
mov
imulb
adc
push
inc
test
bound
xor
testl
sbb
mov
inc
pushf
fs
rclb
dec
loope
jmp
js
push
sarb
xchg
cmp
fldl
xor
jl
mov
inc
ljmp
and
mov
xchg
pop
xor
xor
jg
cmc
fmull
xor
xor
jnp
test
stos
ss
mov
pop
add
sti
shrb
loop
loope
leave
xor
pop
cmp
mov
or
clc
mov
in
push
mov
hlt
cmpsl
and
sub
xor
mov
stc
movsl
sbb
cmpsl
scas
rolb
repz
pop
cmp
jae
jns
mov
add
mul
ljmp
mov
data16
dec
adc
test
cmpsl
sub
sbb
add
out
sub
mov
ss
push
xor
pop
and
xor
or
and
stos
add
ds
dec
in
mov
shlb
pushf
loopne
outsb
add
in
aad
mov
push
adc
xchg
mov
je
call
fmuls
add
shll
popf
adc
add
push
scas
or
push
sbb
int3
inc
add
in
rcll
lods
pop
cmpsb
cmp
jecxz
loopne
push
add
push
add
cmp
jg
adc
xor
shr
sbb
ja
fs
dec
subl
add
lahf
xor
mov
jle
xchg
and
xlat
test
add
jecxz
into
inc
push
fdivl
fs
push
xlat
sbb
sbb
mov
jo
cli
jp
push
lahf
push
lcall
jg
jp
fwait
out
and
xor
leave
or
sbb
ret
ss
push
leave
stos
mov
xchg
and
inc
lods
fwait
cmpsl
sti
xchg
pop
leave
adc
cwtl
cli
sub
hlt
out
cmp
test
aaa
or
hlt
stc
mov
cmpsb
cmpsl
lea
sahf
das
and
and
sbb
repz
inc
inc
sub
push
lods
xchg
les
bound
lods
inc
push
add
xor
jno
cmp
std
pop
cwtl
out
xor
push
add
ds
ljmp
test
int
loope
jbe
xorb
ret
add
out
hlt
test
sbb
cmp
mov
loope
test
rorl
jmp
call
aam
lcall
insl
pop
xchg
or
add
and
cmp
loopne
popl
in
cld
pusha
out
icebp
add
fldcw
push
cmpsb
outsl
adc
insl
lea
mov
test
and
scas
push
lods
fs
pop
sub
mov
dec
ljmp
push
sbb
in
and
pop
std
sbb
push
movsb
sbbb
mov
stos
dec
cwtl
outsb
mov
bound
xor
in
xor
xchg
adc
adc
add
lret
clc
jmp
shll
cmp
xlat
mov
jecxz
and
xor
xlat
sar
out
inc
lcall
mov
vmwrite
pop
jb
divb
cli
enter
inc
add
cmp
scas
xchg
fildl
push
adc
test
pop
dec
and
mov
bound
loopne
or
jne
aad
pop
jno
add
pop
xchg
ja
lret
mov
add
xor
rsm
stos
cmpsl
jnp
cmp
mov
adc
push
aaa
jbe
bound
sbb
mov
xchg
cs
call
add
shlb
add
lds
pop
in
or
cli
call
mov
jb
into
add
shlb
inc
jle
shlb
push
into
dec
jp
in
push
mov
sarl
push
jp
xor
imul
inc
inc
mull
aas
scas
mov
or
popf
mov
sahf
sar
aad
sahf
add
mov
outsl
in
mov
call
or
ja
movsb
xorb
aaa
add
and
decl
mov
inc
xchg
daa
adc
push
call
frstor
cmp
ret
mov
sub
cwtl
jmp
dec
pop
jbe
xor
lea
jmp
mov
adc
lcall
call
mov
ds
jle
mov
or
push
cmpsl
push
pushf
in
outsb
jb
cmpsb
rorb
dec
inc
dec
inc
insl
pop
mov
mov
fnstsw
lahf
ss
pop
jbe
xchg
insl
sub
fnstcw
stos
loope
daa
dec
scas
rcl
xchg
sbb
ss
jecxz
pop
fistps
mov
jecxz
lret
orb
jp
cs
xchg
shlb
mov
xchg
cld
push
mov
pop
push
push
stc
leave
rcll
lcall
cmc
fisubrl
jne
int
bound
adc
xchg
les
test
ljmp
jo
shlb
dec
push
lahf
adc
out
or
mov
xchg
mov
and
jg
add
xor
cltd
and
call
xchg
sbb
xchg
jo
mov
les
aas
push
or
in
aad
sbb
xchg
fsubl
outsl
bound
imul
xor
ljmp
out
mov
jmp
push
in
mov
mov
or
arpl
frstor
jge
cmp
jecxz
xchg
or
bound
push
movsl
add
add
ljmp
dec
call
jl
jno
daa
xor
lods
sbbb
daa
inc
cwtl
pop
jl
lsl
repnz
shrb
out
jb
jecxz
mov
xchg
xchg
js
mov
add
sti
and
dec
inc
push
fcomp
mov
cmp
mov
stos
test
std
jae
mov
int3
mov
std
jle
adc
std
lock
and
push
xchg
xlat
imul
mov
pop
pop
cmpl
mov
xor
enter
in
pop
xor
pop
add
add
and
divl
adc
add
sub
mov
lcall
ds
push
lret
ficoml
sarb
fnstcw
loope
ja
xor
mov
jno
lret
jmp
sub
pop
test
xchg
negl
jecxz
es
cli
xchg
jno
aad
mov
push
jle
ljmp
mov
cmpsl
hlt
bound
pushf
mov
push
cmp
and
cltd
insb
xor
mov
test
push
push
jb
repnz
mov
pop
repz
pushf
or
xchg
outsb
pop
sbb
div
nop
sbb
movb
bound
inc
xor
sub
mov
jbe
dec
lahf
inc
dec
push
int
pop
flds
xorl
ljmp
dec
cs
icebp
inc
sub
movsb
into
leave
add
rcrl
or
aaa
mov
addr16
in
out
sub
rcrl
lods
shll
shlb
mov
int
add
nop
mov
sub
xlat
shrl
leave
addr16
mov
rorb
rcrl
jg
pop
cmpsl
pop
hlt
push
push
pop
adc
sub
popf
dec
or
in
outsb
insl
sub
test
add
repz
das
mov
xchg
out
xchg
mov
fisubs
mov
sbb
cld
jo
pushf
sarl
ficompl
inc
cmpsl
ds
ret
es
ds
and
stos
inc
sbb
sbb
lret
xchg
fwait
insl
pop
loopne
ss
xor
xlat
mov
or
or
nop
or
pop
cmp
xor
lret
cmp
xchg
push
push
cmc
pop
adc
in
jno
iret
xchg
call
mov
aam
imul
mov
pop
pop
cmp
out
jecxz
popa
and
sbb
dec
push
clc
leave
cli
in
add
mov
out
adc
arpl
inc
cmp
mov
push
cmp
rcll
insb
in
in
mov
adc
sti
xchg
xchg
sub
popa
push
sti
arpl
fildl
mov
iret
add
dec
sbb
fs
les
loop
mov
push
push
xorb
mov
adc
cwtl
xchg
jmp
sbb
out
aas
cmp
mov
outsb
addb
fiaddl
mov
mov
aam
or
shrl
lcall
mov
ret
lods
mov
dec
leave
test
cwtl
mov
pop
xchg
and
mov
dec
xor
stos
call
mov
jge
inc
imul
jno
stos
lret
mov
xor
enter
insb
popa
jp
inc
test
aas
or
mov
xchg
mov
adc
imul
das
mov
xchg
lret
adc
xor
xchg
addr16
mov
cmp
jg
mov
cli
js
shlb
push
cltd
lods
cmp
cli
es
mov
mov
idivb
pop
into
div
add
jnp
cmc
xchg
mov
out
push
into
or
mov
int
sub
stos
fstps
cmp
push
cmp
outsl
in
sub
inc
js
or
hlt
shlb
xchg
fwait
imul
jge
testb
aad
sbb
sbb
fistps
push
or
dec
mov
xorps
nop
and
and
test
adc
jle
fisubrl
jmp
out
sbb
sub
xchg
aas
sti
xchg
sbb
ljmp
inc
add
jg
jns
xchg
fiadds
fisttpl
inc
and
mov
mov
test
cmp
loop
push
outsb
rcr
push
lock
aad
xchg
je
iret
cli
sti
repnz
cwtl
push
stc
sub
stos
sub
jecxz
mov
lock
stos
sub
shll
xchg
jbe
imull
stos
stc
xchg
jae
aas
lcall
xchg
lahf
mov
jmp
idivl
imul
dec
xchg
nop
sahf
sbb
aaa
add
cmp
xor
jb
sub
cmp
lahf
inc
cmp
fisttpll
push
aaa
or
sarl
movsb
cld
leave
sub
or
insb
addl
outsl
popa
xchg
stos
into
add
insl
lcall
jmp
cmp
push
push
stos
mov
repz
jmp
std
mov
imul
jae
popa
mov
dec
rcl
outsl
addb
mov
cmp
std
pop
arpl
repnz
cmpsl
sub
push
stos
outsl
dec
fmull
fcoml
xchg
aaa
jecxz
sbb
ret
gs
dec
mov
faddl
fs
push
mov
into
std
popf
sbb
jl
mov
and
push
dec
or
jne
sahf
or
mov
out
push
or
mov
jmp
mov
repz
push
jg
mov
mov
mov
jge
sub
out
cli
mov
pushf
mov
inc
or
unpcklps
sub
push
inc
ds
jnp
idivb
cmp
or
orb
mov
mov
lods
mov
push
jb
xchg
pop
push
jecxz
cmc
imul
addr16
gs
imul
pop
dec
add
stos
xchg
sbb
xor
ljmp
pop
sbb
rol
mov
jbe
out
cmpsb
rolb
stos
cmp
push
jmp
mull
and
insb
pop
cmp
or
outsb
mov
xlat
nop
aas
inc
and
mov
enter
addr16
outsb
cmp
gs
sbb
sbb
mov
mov
ret
int3
sub
mov
push
dec
outsl
ret
or
add
fsub
das
xchg
je
das
fwait
lods
inc
mov
in
xorl
imul
dec
lds
push
push
std
mov
sbb
pop
pop
pop
push
sub
xchg
dec
sub
sti
in
add
loopne
std
cmp
cld
mov
inc
or
in
xor
scas
popa
xchg
aaa
xchg
in
dec
sbb
mov
es
adc
in
icebp
add
push
inc
clc
mov
pop
or
push
mov
insl
inc
sbb
fidivl
or
sub
gs
loope
mov
fcmovbe
xor
fmuls
inc
push
inc
jmp
jg
cmpl
sti
pop
push
sbb
faddl
inc
and
mov
dec
ds
shrb
repnz
jae
or
rolb
imul
fnstcw
inc
mov
fsubrs
in
push
repz
xor
movsb
mov
sbb
mov
inc
pop
mov
pop
mov
or
sub
leave
adc
pop
cmp
and
pop
insb
lods
out
lea
cli
sbb
jnp
xchg
cmpsl
fidivrs
xlat
push
mov
inc
iret
push
sbb
xchg
add
jle
dec
xchg
in
mov
xchg
xchg
test
aad
cmp
add
xchg
dec
jmp
xor
jae
xchg
mov
out
fcmove
jl
ret
mov
shlb
cmp
pop
cmp
clc
push
push
int3
push
xor
mov
mov
add
lret
and
push
push
push
mov
pop
xchg
pop
dec
cmp
lea
subl
lds
outsb
pushf
dec
pop
lds
xchg
adc
pop
scas
sahf
and
in
loopne
out
aad
ret
mov
movsb
bound
dec
inc
cmp
mov
test
test
insb
in
jne
adc
mov
sub
add
fadds
cmpsl
and
xorl
dec
add
push
inc
fincstp
inc
dec
inc
repnz
std
inc
pop
dec
pop
push
loopne
pop
push
cltd
rcll
add
mov
les
testb
test
loop
mov
push
repz
imul
lods
movsl
push
shlb
dec
mov
push
xchg
mov
sub
lea
or
clc
fmul
sbbl
add
jp
ljmp
push
adc
shl
mov
cld
fistl
inc
dec
js
or
mov
push
lret
push
adc
cmp
mov
adcl
push
mov
lcall
mov
dec
loope
sub
sub
jmp
dec
bound
cmp
or
shrl
gs
dec
sub
cmp
insb
cmp
and
push
addl
cmp
mov
daa
pop
pusha
pop
scas
pop
insl
cmc
add
push
test
cwtl
test
loopne
add
xor
repnz
fs
mul
dec
mov
pop
inc
insl
pop
cmpsl
outsl
repz
mov
pop
jge
jo
pminsw
add
subl
jne
mov
popa
jb
cs
setp
sbb
mov
mov
sbb
jns
dec
scas
daa
jle
cmpsb
and
or
outsl
dec
mov
xor
mov
or
xchg
jl
jne
outsb
jb
imull
int
lea
xchg
push
xor
pop
inc
dec
idivb
sub
mov
and
ljmp
lods
mov
in
inc
addr16
pop
aad
inc
xchg
jp
stc
adc
lret
ljmp
jne
iret
inc
cltd
orb
mov
popa
in
in
out
inc
xchg
adc
cld
mov
sbb
scas
jp
test
mov
xchg
test
push
fdivrp
jge
mov
jnp
xor
xchg
or
push
jns
adc
or
ja
cmpsb
arpl
or
mov
cwtl
in
sub
push
adc
out
push
int
push
fldenv
sub
lret
and
push
sub
push
in
add
cmpsb
pop
dec
andl
push
shr
lret
aaa
arpl
push
mov
pop
call
aad
neg
mov
outsl
pop
and
imull
cmc
popf
mov
add
aam
pop
push
xor
mov
pushf
popf
loopne
cltd
dec
lds
out
cltd
pop
xchg
inc
push
mov
sbb
jg
xchg
stc
cs
aas
lods
xchg
mov
ret
jge
cmp
aaa
mov
add
push
addl
dec
mov
mov
data16
je
push
jno
es
sbbb
add
div
push
cmp
push
cmp
sbb
cltd
pop
xchg
jnp
sub
repz
out
loop
or
sbb
clc
xor
jmp
movsl
das
jmp
adc
jp
pusha
out
sub
inc
lcall
push
shrb
and
jge
cld
mov
xchg
mov
xor
and
adc
ja
movsl
mov
and
enter
inc
jno
cs
aad
and
jo
sbb
jns
rcrl
js
dec
dec
insl
dec
dec
adc
inc
mov
mov
jg
mov
sbb
mov
sbb
inc
cmp
jbe
orl
mov
xchg
fistpl
xchg
adc
mov
insl
mov
sahf
call
xchg
inc
sahf
loopne
stos
inc
adc
xchg
aaa
fmull
cmp
daa
pop
xlat
add
jne,pt
cmpsb
addr16
inc
jmp
pop
int
xor
and
mov
arpl
scas
add
cwtl
lock
push
inc
push
mov
outsl
enter
mov
scas
add
in
mov
add
fwait
outsb
mov
gs
mov
mov
sti
sub
call
ds
stos
dec
jp
jg
or
xchg
adc
leave
sbb
shr
ljmp
mov
popa
jbe
dec
mov
in
pushf
inc
bound
inc
mov
xor
cmc
dec
dec
push
cmc
popl
mov
push
daa
inc
inc
xchg
in
jge
sbb
ljmp
test
pop
lcall
out
mov
jge
daa
in
addl
jno
cmp
pop
adc
jmpw
push
addr16
pop
push
out
push
cmpsl
aas
test
lods
enter
popf
mov
mov
mov
mov
fsub
inc
es
lcall
dec
in
inc
mov
push
sbb
rolb
inc
pop
into
or
fisttpl
sub
xchg
ljmp
adcb
cld
inc
jp
test
push
leave
pop
insb
out
mov
stos
inc
lds
sbb
jae
mov
lods
adc
jg
cltd
xchg
enter
rclb
shr
adc
jbe,pt
or
iret
stc
jnp
sbb
nop
repnz
push
dec
outsb
mov
shrl
mov
sahf
or
jmp
subl
fs
repz
loopne
xor
cmp
js
imul
sbb
sub
arpl
mov
int3
adc
mov
mov
xorl
mov
stos
lods
insb
sub
sub
test
and
in
mov
hlt
nop
fsubl
fcmovu
or
xchg
xor
lahf
dec
mul
data16
je
add
es
sahf
push
shll
mov
lock
outsl
mov
les
adc
dec
cmpsl
jl
stos
xchg
sbb
sbb
outsl
lds
sub
insb
std
pop
or
cmc
xchg
xchg
fisttpll
out
iret
iret
add
in
jmp
add
sub
and
pushf
or
outsb
les
cmp
aaa
lcall
sub
adc
dec
insb
push
jp
push
mov
jmp
incl
push
xchg
cmp
push
and
pop
popa
es
mov
stc
push
movsl
popf
sbb
jl
lods
mov
sahf
test
jns
add
ret
pushf
mov
sub
fs
pop
sub
movsl
test
or
aam
adc
push
jp
les
mov
adc
mov
xchg
xchg
repnz
sbb
mov
out
paddsb
js
dec
ss
test
lret
jne
mov
imul
add
push
pusha
jg
addr16
std
sub
scas
mov
mov
xchg
pop
popf
lret
pusha
push
adc
mov
add
ret
imul
or
push
je
mov
push
test
out
insb
xor
inc
jge
fsubrs
movsl
orl
inc
fistl
mov
and
repnz
lcall
leave
sub
hlt
sbb
jns
dec
lahf
push
xor
fwait
shl
mov
hlt
or
xor
lret
dec
sbb
int
data16
mov
je
in
int3
repz
xor
push
or
dec
add
fsubrl
jmp
add
push
idivb
lods
xor
mov
xlat
out
lds
lods
jmp
jmp
push
pop
pop
lcall
lret
sbb
dec
cmp
cld
les
aam
cltd
xchg
into
sbb
outsb
mov
popa
ja
sbb
xor
sbb
mov
cs
testl
sbb
xor
cmp
fldcw
push
jns
mov
push
mov
shlb
cmc
mov
sbb
cmp
sarb
jp
add
enter
movl
push
in
mov
push
ja
mov
sub
movsb
popf
mov
sti
inc
and
xorb
mov
sar
jge
pushf
pop
and
cmp
inc
inc
jbe
and
shlb
repnz
test
xor
fimuls
push
inc
test
scas
cmpsl
inc
dec
add
xchg
pusha
jbe
add
add
pop
mov
jnp
jp
xchg
ret
xchg
sub
or
jnp
in
orl
xchg
mov
add
mov
ds
in
adc
arpl
icebp
cmp
xor
xchg
inc
jge
fidivrl
pop
pushf
mov
jp
or
mov
fmull
mov
push
jmp
jg
in
mov
pop
outsl
imul
and
fisubl
xchg
jecxz
sahf
sti
loope
push
sub
mov
lahf
or
push
jo
push
push
cmp
in
xchg
popf
xor
xchg
push
sub
scas
or
repnz
in
dec
sahf
ja
push
inc
fldt
das
loopne
cmp
popa
mov
bound
jnp
jmp
cs
and
push
lret
jg
stos
inc
in
sub
cmp
push
adc
push
jbe
and
and
in
cwtl
test
test
es
mov
in
push
sahf
shl
daa
mov
shrb
xor
lds
ficoms
sub
mov
pop
push
cwtl
into
push
mov
fdivrl
mov
dec
xorl
mov
je
cmp
cmp
add
or
ja
popf
adc
scas
das
pop
das
mov
pop
imul
xor
mov
jns
les
and
mov
pop
adc
outsb
cmc
inc
rcrb
inc
dec
icebp
sbb
xor
and
je
mov
sbb
sbb
mov
xchg
sub
or
loope
and
jecxz
pop
xchg
push
xchg
rorl
xchg
mov
add
int3
inc
cmp
jo
jae
cli
mov
cmc
fadds
mov
inc
popa
shlb
sbb
out
stc
xchg
stc
lret
fsubr
xlat
ret
pop
mov
mov
sbb
shlb
movsl
rcll
push
and
dec
mov
adc
xlat
ds
ja
and
sti
mov
sub
stos
lcall
push
clc
xchg
aas
mov
pop
fiadds
in
in
test
xchg
dec
push
pop
mov
mov
icebp
fs
xchg
mov
xor
clc
or
sahf
cmpsl
sti
mov
or
insl
jmp
push
sbb
xchg
je
imul
clc
pop
hlt
lock
mov
cmp
inc
jae
rcll
jge
ja
shl
xchg
pop
inc
adc
outsb
loope
fisubrl
adc
stos
lea
into
gs
sbb
stos
mov
outsb
fsubrl
and
das
mov
mov
into
mov
rol
jmp
lcall
or
mov
addr16
mov
mov
mov
ret
inc
xor
pop
xlat
pop
clc
dec
mov
mov
pushf
sub
outsb
cltd
xor
push
pop
mov
js
lcall
xor
lods
insb
mov
xchg
and
sbb
addr16
push
cmpsl
jae
dec
enter
call
pop
loopne
and
test
addb
out
icebp
lods
xchg
push
lods
xor
mov
ret
mov
xlat
lahf
jno
and
popf
pop
xorb
je
push
pop
cmc
sahf
std
pushf
cmp
ja
insb
dec
mov
fmuls
xchg
int
mov
mov
xor
xchg
push
shlb
jg
repnz
xor
inc
jl
xchg
inc
adc
pusha
adc
popf
iret
mov
sub
out
sbbl
movsl
add
shrb
push
dec
sbb
test
fnstenv
dec
scas
imul
cmc
add
cmpb
sub
cld
push
ja
jge
jecxz
pop
push
sub
xchg
call
int
dec
shr
add
in
or
dec
leave
int
mov
in
push
popa
addl
fnstsw
je
popl
mov
cmpsl
xchg
mov
adc
sbb
das
stc
dec
test
cmp
sbb
cmp
jo
adc
nop
movsl
mov
repz
sahf
inc
and
adc
xor
dec
hlt
fwait
push
dec
divl
lods
mov
mov
jb
inc
sbb
jnp
in
int
or
fistpl
cld
sbb
jbe
sbb
push
add
dec
lock
mov
pushf
lret
mov
ret
xchg
and
pop
gs
aam
jo
pop
call
data16
mov
push
xor
sbb
dec
notb
ds
mov
push
add
xor
jbe
jns
xchg
sbb
add
cmp
sbb
cmp
popa
dec
mov
lahf
cmp
xchg
push
push
ja
pop
xchg
push
cld
sub
xor
inc
scas
pushf
sub
ret
jnp
ret
ret
push
or
and
xchg
clc
dec
pusha
sub
pop
fcmovb
xchg
cmc
cwtl
popf
jp
mov
sub
and
push
js
xor
jp
xchg
cmpsb
daa
inc
push
mov
cmp
push
repnz
rcrl
mov
int
lret
sub
jne
sarl
lret
add
in
jb
testb
fisttpl
repz
push
cld
or
xor
and
cmp
arpl
push
sarl
enter
add
lods
loope
cmp
dec
jp
dec
and
dec
adc
dec
jbe
xorl
sub
fucomp
push
push
hlt
mov
dec
nop
lret
ror
inc
mov
push
mov
sub
adcb
data16
pop
push
and
xchg
andl
cwtl
mov
mov
lcall
cmp
or
popa
shrl
ret
outsl
and
scas
data16
bound
test
aaa
sbb
das
cwtl
lock
push
and
add
add
gs
xor
push
lock
clc
cli
std
and
inc
loopne
enter
add
adc
gs
sti
cmp
xchg
stos
push
push
mov
dec
cmpsb
sub
and
pop
mov
dec
pop
pushf
dec
or
xorl
dec
pop
or
push
cwtl
rolb
inc
scas
or
cmp
lret
xor
xor
jne
cmp
mov
loop
das
dec
jmp
pop
sub
cli
shrl
jl
mov
and
xchg
hlt
jbe
pop
and
or
lea
pop
dec
xor
jne
int
decl
xchg
jecxz
xchg
dec
inc
roll
xchg
mov
or
lock
jo
and
push
pop
push
pusha
rolb
arpl
mov
fs
movsl
in
jecxz
mov
mov
sbbl
dec
xlat
je
scas
inc
repz
push
mov
sti
int
jo
push
aam
fdivrl
out
push
clc
mov
repnz
std
outsb
fcompl
les
ss
push
sub
lods
je
lcall
inc
mov
mov
popf
test
xchg
add
subl
mov
pop
inc
pusha
rcrl
pop
imul
sahf
mov
insb
movsl
lods
fstpt
mov
push
adc
ja
push
lds
in
int3
mov
and
fs
mov
jo
jne
into
cmp
mov
lock
test
jl
jge
mov
add
xchg
and
adc
sahf
xor
xor
clc
lcall
divb
xchg
jp
in
xchg
add
jge
std
mov
xor
arpl
xor
sbb
rcrl
cmp
lods
add
jne
aas
pop
in
xlat
int3
adc
scas
jo
mov
jbe
xor
shl
jg
xacquire
popf
fcmove
lea
cwtl
int
sbb
sbb
mov
clc
jmp
sub
lcall
inc
dec
cmp
jle
adc
xor
test
lahf
es
mov
in
out
fdivr
push
mov
fiadds
xchg
adc
pop
xchg
add
jb
ljmp
adc
ret
jge
dec
pop
sbb
leave
and
jl
add
iret
xchg
int
adc
push
sbb
nop
add
cld
fcmovbe
dec
outsb
mov
sub
ljmpw
pop
inc
dec
push
add
mov
push
cs
imul
pop
jp
and
pop
xacquire
movsl
sub
push
mov
xor
cli
mov
mov
cmp
adc
js
lds
mov
xchg
gs
sbb
cli
popa
leave
inc
cli
aas
es
add
ficoms
aad
addr16
mov
loop
nop
je
icebp
push
jae
in
fwait
xchg
jnp
mov
pop
push
adc
popa
and
into
aas
cli
and
sub
push
ret
mov
jb
or
or
and
mov
push
cli
mov
mov
scas
fildll
imul
imul
imull
call
ja
inc
cmc
jmp
shlb
and
ds
ss
jp
aas
scas
mov
or
push
jno
push
shll
push
inc
ja
cltd
aam
cmpsb
pop
mov
mov
add
mov
lret
sub
mov
mov
jmp
pop
enter
and
pusha
add
outsl
pop
pop
inc
scas
xor
scas
insb
xchg
mov
jmp
and
jnp
lea
xor
add
xor
cmc
insb
loop
push
out
bnd
jge
sbb
inc
mov
dec
int
js
mov
icebp
insb
in
pop
cs
ret
xor
movsb
dec
dec
push
mov
or
inc
repnz
arpl
sub
push
mov
xchg
jl
es
jp
xlat
mov
scas
lock
or
mov
sbb
divb
stc
inc
pop
sub
mov
inc
adc
mov
xor
leave
jbe
or
ror
in
je
mov
shrl
test
sub
mov
sub
pushf
xchg
mov
xor
scas
insl
aas
pushf
inc
xor
mov
cmpsb
bound
in
dec
loopne
sahf
mov
xor
enter
loope
loopne
stc
orl
mov
mov
inc
call
scas
out
sahf
loop
or
mov
jo
add
dec
sbb
mov
mov
push
rorl
inc
adc
xchg
leave
or
xchg
aad
add
and
lock
ljmp
es
sub
adc
out
iret
je
mov
jnp
pop
les
cmp
aad
xor
in
movsl
jle
sub
int
lcall
add
xor
add
icebp
int3
rclb
test
inc
inc
enter
das
pop
adc
dec
stos
test
scas
mov
or
mov
cltd
add
push
sub
popf
in
sbbb
inc
add
fdivr
jb
mov
lcall
nop
lds
mov
arpl
fstpt
inc
adc
push
mov
or
inc
icebp
ljmp
pop
in
into
adc
movsb
test
xchg
add
mov
mov
mov
aaa
in
adc
jno
sub
jl
rorl
sar
movsl
ljmp
jo
inc
push
pop
imul
test
add
or
mov
orl
or
and
dec
into
in
and
push
jp
sub
cmc
inc
in
mov
adc
mov
or
xchg
lcall
mov
icebp
test
cmp
loopne
jle
add
fidivrs
out
insl
adc
cltd
push
gs
or
popa
inc
in
pop
ficoms
add
mov
scas
ds
mov
mov
pop
push
push
arpl
movb
les
arpl
sub
iret
jle,pt
sub
mov
mov
xor
dec
lea
es
cmpsl
int
cmpsl
adc
cwtl
jo
aad
lret
xchg
fcoml
xor
out
adc
aas
insb
in
and
lds
scas
out
sub
mov
push
addl
aaa
and
mov
inc
outsb
bound
lret
mov
add
call
enter
add
jo
add
bound
and
in
push
cmp
repz
xor
in
dec
push
push
sti
scas
ror
adc
adcb
push
imul
xor
imul
cltd
dec
push
mov
insb
push
xor
sahf
inc
push
mov
in
ljmp
enter
fwait
outsl
pop
jecxz
out
fcoml
test
add
adc
retw
pop
test
adc
mov
test
int
xor
xor
push
mov
mov
xchg
es
inc
push
dec
mov
aas
push
in
out
repnz
cmpsl
adc
movsl
aas
mov
je
ja
jae
sbb
lret
test
in
fimull
cmpsb
cmc
shrb
push
test
push
ficomps
mov
add
shll
cld
sub
fwait
push
inc
or
cmpl
mov
cmp
imul
push
pop
mov
jne
push
sub
mov
push
push
pop
inc
lcall
sarb
inc
out
sbbb
push
jbe
std
sahf
gs
mov
cwtl
and
add
icebp
aaa
push
ret
add
mov
shl
dec
xorb
insb
in
xor
stos
add
gs
rorl
add
mov
push
pop
stos
sar
mov
cmp
mov
and
andl
dec
or
cld
js
mov
rcl
test
leave
sub
or
mov
out
std
adc
aaa
mov
push
cwtl
into
movb
enter
ficoml
add
push
frstor
fwait
mov
pop
rorl
jmp
xor
lock
adc
mov
ljmp
mov
push
cmc
mov
popl
adc
inc
pop
xchg
rol
repz
push
xchg
loopne
adc
mov
clc
adc
ja
ss
aam
adc
call
stos
and
das
ds
mov
pop
pop
xor
ret
ror
pushw
push
scas
fdivl
lods
nop
inc
pop
and
pop
int
ljmp
mov
adc
dec
lahf
das
aaa
adc
mov
test
test
sti
imulb
fidivs
push
bound
xor
mov
fbstp
mov
cmp
cmp
cmp
test
mov
in
adc
jo
scas
loope
ds
sti
hlt
call
shll
call
dec
fmuls
sbb
push
fs
test
add
fcompl
pop
cmpsl
sbbb
imul
mov
fldl
loopne
outsb
pop
decb
adc
lret
lds
cmp
sub
fdivrs
jge
jo
repz
jae
aam
imul
sub
loop
cwtl
out
dec
dec
imul
xchg
adcb
pop
stos
popa
sbb
fiaddl
into
mov
xor
imul
fidivrl
jnp
and
rcrb
xchg
sub
shll
xchg
xchg
sbb
fidivs
pop
jge
dec
cld
fildll
mov
inc
and
pop
sti
incl
dec
ljmp
cmp
in
cmp
xchg
out
ljmp
pop
cmp
andb
mov
mov
sbb
pop
rorb
inc
faddl
sbb
xchg
mov
cli
jns
xor
pop
sbb
fs
mov
add
js
mov
js
loop
out
and
outsl
xchg
xchg
gs
insl
testb
rorb
cmp
jge
inc
jl
in
jae
xchg
das
inc
clc
push
std
fwait
pop
mov
push
test
dec
jle
fcomps
sarb
adc
loop
push
movl
jns
pop
incl
xor
jle
adc
lock
mov
test
push
jb
in
cmp
add
cltd
lcall
mov
imul
subb
outsl
jp
rorl
int
sti
testb
dec
loop
cli
cltd
mov
outsb
adc
les
add
pusha
insl
mov
jae
mov
mov
jecxz
call
lds
out
xchg
jno
adc
and
scas
push
stc
negb
imul
js
into
faddl
mov
adc
sub
or
sbb
scas
fwait
push
hlt
push
jl
add
cmp
sbb
adc
or
and
mov
push
mov
pop
push
pushf
popl
jge
shll
cs
mov
pop
jmp
adc
pusha
fcomip
mov
mov
add
mov
stos
icebp
clc
and
dec
out
inc
xchg
lcall
dec
ja
push
push
stos
push
mov
lods
mov
clc
fldenv
dec
aaa
cmp
out
fimuls
mov
jg
push
and
cmp
mov
dec
cmp
xchg
dec
into
adc
push
imul
and
outsl
test
xor
mov
pop
xlat
push
dec
mov
and
test
xchg
dec
pop
push
ret
add
push
push
xchg
pop
outsb
xlat
xchg
push
fcoms
je
sub
jae
sti
xchg
add
rcrl
fldcw
push
mov
lahf
adc
and
decb
jge
jno
xchg
shlb
push
lods
xchg
aaa
nop
inc
stos
jmp
cmpsl
mov
lret
adc
andb
in
cs
fnsave
insb
inc
repnz
jne
ret
pcmpgtd
jge
outsl
imul
or
push
cli
jno
pop
jnp
lahf
jmp
aad
dec
loopne
js
xchg
mov
stos
sbb
mov
xchg
jecxz
mov
clc
sbb
shlb
adc
movsb
sbb
insb
xor
add
push
out
cmc
xor
out
pop
xor
adc
xchg
imul
dec
test
enter
dec
dec
std
call
xchg
addr16
int
repz
mov
mov
mov
mov
jge
fisubs
inc
into
cmp
sub
cmc
mov
xchg
aaa
cmp
aad
pushf
mov
seto
and
dec
dec
aad
inc
int3
data16
test
repnz
lds
inc
mov
pop
lahf
iret
cmp
inc
loop
out
mov
ja
ret
fprem
je
jnp
push
and
cmp
mov
imul
jl
ljmp
ja
pop
les
lock
cmc
test
add
cltd
cmp
push
or
fdivl
jne
pushf
and
pop
and
push
data16
mov
xchg
imul
xor
shrd
xchg
mov
jb
pop
jp
mov
dec
mov
push
call
rorb
inc
mov
pop
add
sub
out
repz
sbb
cmovnp
sbb
repz
sub
add
jno
jbe
cli
pushl
jbe
mov
int
rcrl
push
lock
and
mov
push
test
jp
xchg
sub
out
cmp
pop
jg
xor
dec
fldt
dec
xor
int
out
outsb
adc
in
nop
test
js
and
push
repz
dec
lock
adc
fisttpl
repz
sbb
cmp
jbe
cld
insb
stc
shr
lret
in
sub
xchg
xchg
add
xor
ljmp
or
movl
xorl
mov
jge
in
cmp
mov
incl
mov
sbb
cmp
mov
loope
inc
scas
clc
aam
ret
fnstcw
cmp
dec
fs
lcall
je
outsl
cmp
test
fldcw
pop
jb
cmp
das
mov
add
popa
std
mov
jns
orb
loope
mov
push
mov
xor
jb
jb
xchg
push
sub
pop
sti
ror
js
mov
jecxz
imul
inc
stos
jno
scas
push
iret
mov
cmp
sbb
cmp
je
dec
xor
idivl
sbb
cmpsb
adc
stc
mov
inc
in
cmc
rolb
mov
jl
negb
stos
cmpsl
push
jg
bound
mov
jbe
mov
pop
mov
jb
in
adc
stos
shrb
jmp
fnstenv
sbb
jmp
sub
sbbb
sub
cmp
dec
mov
out
stos
and
gs
jbe
movhlps
ror
add
and
out
cwtl
insb
cs
pop
aas
js
clc
dec
adc
add
lret
cmp
int
jecxz
jbe
dec
enter
push
mov
mov
push
repz
sub
push
and
sub
sbbl
jae
mov
fcmovnu
imul
ds
jp
dec
popa
sbb
subb
test
imul
filds
dec
jmp
inc
ss
xlat
movl
pop
aas
push
fstpl
inc
data16
lock
sbbl
xchg
cli
pop
mov
dec
fidivs
rcr
loope
sbb
iret
pop
inc
les
cmpsl
jge
mov
xor
enter
into
xor
decl
mov
sub
sbb
pop
leave
pop
into
imul
enter
sub
insl
xchg
sub
xchg
repnz
es
mov
dec
jg
mov
ss
lahf
dec
gs
lret
pop
adc
xlat
ud2
or
test
fisttpl
es
mov
pop
jno
sub
dec
and
in
lea
adc
xor
pop
cmp
sub
shlb
iret
in
pop
fists
mov
je
push
add
mov
adc
jns
rorl
xchg
les
jns
sbb
stc
cmp
xchg
jno
arpl
ret
mov
xchg
cmp
jno
pop
push
lcall
adc
inc
cltd
and
lods
jno
push
test
iret
outsb
cs
jb
ss
xchg
cmc
in
cmc
mov
gs
out
sbbb
aaa
je
ficoms
out
cmp
popa
adc
jnp
sub
push
xor
in
repnz
and
stos
daa
cmp
mov
idivb
fwait
scas
sbb
xor
push
mov
add
sar
les
mov
mov
sbb
push
mov
out
inc
dec
lcall
or
xor
in
cmp
sub
bound
ss
call
sub
jl
ret
mov
mov
jecxz
xor
adc
push
inc
lcall
test
bound
imul
and
pushf
pop
sub
iret
sbb
repz
arpl
pusha
xor
outsl
or
inc
lret
add
push
push
add
ret
xchg
add
mov
mov
mov
push
mov
mov
pop
push
cs
mov
sti
insl
cmp
pcmpeqw
stos
hlt
dec
es
test
adc
sub
push
lods
and
es
int3
jmp
mov
and
mov
stc
repz
fdivs
imul
outsl
insb
cmp
in
xorl
xchg
jo
mov
dec
and
xchg
and
cwtl
sub
aam
mov
ret
push
jmp
rcrb
or
ja
and
mov
lods
stos
sahf
mov
repnz
xchg
push
outsl
xchg
and
inc
jl
add
out
and
push
xchg
dec
aam
and
dec
fisttpl
inc
and
or
ljmp
dec
cld
gs
mov
loopne
ret
inc
xchg
push
movl
push
out
sti
iret
xchg
pop
lock
cmc
aad
pop
outsl
sub
rol
nop
mov
pop
mov
scas
cmp
leave
mov
dec
std
fidivrl
lahf
repnz
jecxz
jno
cmp
jb
lds
xchg
and
push
imul
scas
and
movsb
push
jmp
mov
inc
add
inc
xor
mov
xchg
ret
movsb
mov
psubusw
or
bound
push
loopne
dec
jo
imul
xor
sub
push
dec
cmp
xchg
fistpll
adc
repnz
push
jmp
loop
mov
lods
push
sbb
mov
push
mov
pushf
repnz
rclb
inc
pop
popa
cmp
aas
data16
fimuls
cwtl
aaa
jne
jbe
xchg
rcrl
push
lcall
in
adc
jo
mov
dec
insb
inc
lea
dec
std
push
arpl
xor
push
mov
insl
mov
in
xor
stc
adc
xor
dec
loope
fdivrl
nop
idiv
push
jp
cmp
pusha
mov
lret
loopne
add
faddl
cmp
pop
out
mov
sbb
adc
jge
fiaddl
dec
and
xchg
xor
imull
ss
js
sti
mov
addr16
sar
add
rcll
sbb
out
mov
and
lcall
mov
dec
in
out
fistps
repnz
xchg
jmp
mov
pop
pusha
das
add
sti
test
xchg
or
cmpsb
test
inc
adc
das
mov
and
popa
aad
js
sub
inc
fisubrl
xor
lret
xchg
mov
dec
xchg
ror
or
xchg
out
pusha
push
fcmovbe
sub
push
jmp
adc
fs
dec
mov
jmp
push
je
mov
jl
and
mov
push
ret
clc
cmpsb
cmp
pusha
lock
or
xchg
cmp
xor
sbb
fwait
add
sub
in
pushf
outsb
mov
xchg
andb
loop
sbb
xchg
push
xchg
sub
sub
jnp
add
mov
dec
sub
cs
jecxz
xor
insb
or
gs
mov
add
mov
pop
inc
arpl
push
xlat
adc
xchg
das
sti
inc
sahf
aam
add
adc
pop
pop
pop
mov
movsb
les
mov
jl
in
cwtl
hlt
xor
jns
dec
call
inc
call
repz
add
push
dec
mov
out
inc
and
xchg
lcall
add
or
lods
sbb
jne
outsl
fmull
xor
push
insb
mov
and
repnz
testb
or
cmpsl
cmp
das
cs
ds
pop
cmpsb
dec
stos
mov
add
xlat
cmp
imul
out
or
xlat
in
sub
pop
cli
lret
pop
push
mov
mov
mov
enter
loop
cs
iret
mov
jmp
mov
lret
cmp
lcall
stc
jns
ss
stos
gs
pop
inc
push
mov
lock
addr16
pop
pop
fistpll
and
pop
imul
lods
push
dec
or
into
pop
int3
ret
lods
lret
mov
dec
pop
scas
add
jb
or
add
mov
push
pop
inc
mov
fisubs
fwait
popl
insb
dec
mov
mov
aam
rorb
movl
or
push
jle
sub
sub
movsb
or
pusha
in
or
imul
pop
clc
gs
inc
aaa
js
mov
std
inc
in
pop
push
jp
or
scas
push
xchg
lea
fs
dec
xor
xchg
adc
jg
addb
fsubl
adc
or
test
xor
and
lods
fsub
ljmp
test
jle
sbb
in
jmp
pop
ds
movl
xor
or
in
inc
aaa
test
add
cld
out
inc
adc
push
cmp
xor
lret
pushf
jb
dec
fwait
xor
pop
dec
loopne
in
pushf
push
arpl
andl
enter
fimull
jbe
aas
mov
scas
adc
mov
mov
mov
push
cmp
les
pushf
arpl
cwtl
or
leave
jne
mov
sbb
inc
jmp
xchg
or
mov
std
cmpsb
pop
dec
arpl
mov
fwait
cwtl
pusha
cmp
add
xor
imul
sarb
enter
cmp
cmp
pop
dec
push
cli
push
cli
xor
js
aad
out
mov
jns
xchg
ljmp
push
mov
mov
mov
jbe
clc
and
nop
jmp
jl
push
push
addl
mov
popf
subb
into
ljmp
lret
xor
push
stc
in
and
jmp
movsb
push
lock
das
fidivs
pop
dec
arpl
pop
xor
mov
mov
mov
daa
mov
addl
lea
add
out
adc
dec
sub
mov
loop
push
imul
ds
cmc
stc
xor
orl
imul
and
fistps
lahf
xlat
in
aam
add
add
push
shr
das
or
jle
xchg
push
test
sub
popf
and
call
lods
dec
xor
push
sahf
pop
sbb
xor
mov
mov
push
in
fidivrs
jnp
sarb
mov
loop
loope
add
test
imul
aad
fnsave
gs
lahf
popf
out
out
mov
add
andl
jo
push
mov
push
test
loope
jb
ljmp
subl
fnsave
push
add
mov
push
daa
xlat
or
dec
leave
or
andb
mov
popl
je
cvtdq2ps
testl
dec
cmpsl
and
xlat
lcall
ds
pop
cld
and
jne
in
pusha
out
movsb
ljmp
mov
xor
and
test
sub
inc
cltd
push
std
iret
rcl
fnstcw
inc
mov
cmp
jo
mov
pop
push
add
sbb
add
xor
aaa
jns
dec
in
or
add
fiaddl
arpl
jne
cltd
cmp
jb
push
mov
ja
loop,pt
and
push
mov
pop
xor
or
mov
sbbb
inc
or
lret
xchg
loopne
pushf
mov
clc
and
mov
jb
clc
add
jp
popf
imul
and
jb
adc
fldenv
xor
icebp
lcall
frstor
enter
xchg
xorb
scas
in
push
repnz
inc
jnp
xor
popa
addb
cmp
cltd
insb
adc
lods
roll
pop
xlat
adc
jo
aad
sub
scas
add
mov
cltd
arpl
adc
mov
add
ja
and
mov
cmp
cmp
mov
dec
mov
mov
xor
inc
pusha
pop
test
sbb
pop
fiaddl
inc
adc
mov
mov
or
fwait
cld
adc
test
mov
sbb
nop
pop
das
xchg
push
arpl
push
or
js
or
stos
and
test
aas
jmp
lcall
lcall
lods
ljmp
xchg
jbe
mov
fs
lret
mov
jl
call
cmpsl
dec
cltd
sarl
fs
rcl
sti
mov
adc
push
or
aad
lods
mov
jne
je
pop
dec
test
mov
mov
jg
cmp
mov
jl
loop
push
mov
mov
in
push
push
xor
dec
cltd
xchg
mov
aam
sub
fstpl
and
xchg
ficomps
rorb
int3
and
inc
sbb
and
in
and
and
adc
sub
ja
ficoml
mov
or
pop
sub
dec
lods
push
mov
inc
ds
dec
sbb
add
adc
inc
out
sarl
push
sbb
push
cmp
push
ja
rcl
xor
stos
adc
mov
loop
incl
push
loope
fs
dec
das
test
jne
ror
xchg
cmp
cmp
sbb
js
lods
dec
cmp
mov
iret
sub
mov
jmp
dec
aas
xlat
sbb
rcl
sub
ficomps
call
insl
jb
xor
scas
call
or
fs
movsl
das
xor
pop
inc
adc
les
mov
xor
dec
movsl
sbb
xchg
pop
mov
xchg
dec
cmp
notb
in
aam
inc
dec
out
push
std
cs
push
sub
pop
xrelease
sar
pop
sbb
in
sahf
sub
push
inc
dec
loop
and
insl
mov
shrl
adc
lret
ret
mov
daa
pop
inc
xchg
cmp
jne
test
filds
insl
jbe
jle
ret
mov
mov
rolb
pop
outsb
call
sarb
aam
xchg
lahf
cmp
int3
sbb
in
addl
out
test
mov
fs
inc
push
inc
and
cltd
jns
xchg
pusha
cmp
enter
xor
xorb
add
push
sahf
hlt
clc
mov
fldcw
xchg
sub
pop
ret
in
cmp
pop
out
sbb
mov
sub
jno
stos
out
lcall
dec
dec
mov
xchg
inc
outsl
or
cmp
loopne
and
arpl
jno
pop
jg
jge
js
dec
stos
sub
insb
cmp
les
les
fstpl
xchg
xchg
movsl
pushf
rcll
test
jbe
cld
sub
lock
loopne
sub
xor
jl
lret
and
push
int3
in
pop
icebp
popf
aaa
inc
dec
mov
and
addr16
pop
and
inc
adc
popa
lret
sbb
jbe
push
mov
cmpb
lret
fdivl
sbb
pop
adc
push
xor
in
into
sub
mov
fsubr
add
sti
in
add
cmp
cmp
popl
fidivrl
in
xorb
xchg
jg
jno
ja
mov
call
hlt
sbb
fidivl
decb
jle
adc
jl
shlb
xlat
push
pop
and
jl
jp
pusha
sti
subl
mov
xor
and
push
loope
mov
pop
lods
xchg
or
or
push
xchg
mov
imul
in
insl
sbb
ret
stos
das
inc
jp
xchg
das
push
dec
jl
rolb
mov
sub
push
ljmp
cli
pop
cmpsb
insl
or
les
lea
andl
ja
out
mov
xlat
stos
dec
out
cmpsb
mov
mov
cmc
aad
cmp
sbb
and
xor
andl
mov
pop
aad
repnz
popa
inc
xor
aad
or
adc
ja
fcmovbe
cmp
lea
mov
push
add
ret
sar
sbbb
pop
xchg
adc
loopne
bound
jns
and
sbb
xlat
stos
mov
inc
mov
stos
js
gs
sbb
push
jnp
lret
inc
lds
or
inc
add
jo
sub
pop
pop
mov
mov
cwtl
mov
shld
sub
xchg
adcl
adc
mov
test
jmp
adc
gs
xor
mov
sub
testl
push
sbbl
dec
and
pop
jmp
push
int3
cld
push
es
pop
cmp
andl
lds
fs
js
icebp
inc
les
mov
and
pop
jecxz
mov
test
iret
adc
fs
add
jbe
push
ucomiss
add
aas
sub
mov
jge
lret
ss
sub
sub
lahf
mov
aad
cs
lret
or
out
test
outsl
xchg
aaa
xchg
cld
lock
sub
jp
add
or
and
inc
sbb
stos
push
repnz
shrb
cli
les
je
or
jg
repz
pop
sbb
fidivs
inc
adc
pop
cmp
out
gs
or
lret
or
mov
mov
imul
arpl
mov
inc
ret
mov
mov
sbb
pop
adc
jae
aas
xchg
lahf
dec
jae
mov
sbb
mov
mov
pushf
filds
sub
sub
lock
mov
sahf
push
pop
mov
insb
cmp
stos
mov
insl
shlb
mov
popf
mov
mov
sub
inc
inc
ficoms
xchg
aas
fincstp
insl
adc
ror
test
push
xchg
adc
xchg
imul
dec
loop
adc
mov
dec
xchg
lods
fwait
add
shrl
push
jno
xor
xchg
mov
hlt
or
out
mov
cmp
push
sub
inc
out
out
pop
or
orl
push
testb
xor
jns
cs
in
push
fldl
int
lock
jns
pop
xchg
inc
das
mov
je
out
sbb
pop
jl
dec
inc
pop
jb
push
jmp
mov
aad
pop
sub
js
mov
dec
in
in
mov
dec
pushl
jo
xor
xchg
data16
cli
or
inc
push
xor
repz
add
fwait
sub
in
mov
popa
out
jl
dec
or
jle
push
and
xor
out
dec
fisubs
in
sub
add
cli
cmp
mov
mov
fidivrs
lahf
push
ret
outsb
ds
scas
mov
jg
mov
lcall
dec
xor
xchg
xor
mov
ss
shl
jecxz
add
das
fsub
inc
jg
cmp
pop
aas
lret
aas
hlt
call
inc
pop
shl
add
push
xlat
mov
sub
cltd
push
repnz
sub
cmpsb
jne
xor
inc
dec
call
int
shr
jmp
jmp
jno
mov
cld
and
or
enter
test
or
nop
pop
push
mov
fistpll
dec
and
dec
orb
push
loopne
xchg
cmp
ret
mov
push
and
and
pop
sbb
sbb
enter
repnz
ret
movsl
add
cmpsb
dec
dec
fldcw
ss
xor
es
test
jae
sub
test
or
sahf
lock
adc
jnp
rorl
add
icebp
fcomps
stc
jo
cmp
mov
cmp
or
mov
and
out
dec
sti
pusha
mov
test
mov
pop
lret
sub
lock
xor
movsl
pop
push
xchg
mov
ljmp
out
lcall
ja
ret
lods
sahf
add
pop
cld
je
inc
cmp
and
iret
fisubrs
mov
push
push
xor
stos
xchg
adcb
cmp
mov
jle
mov
push
sar
cmp
jmp
and
dec
jmp
movsb
jo
and
dec
dec
and
outsl
int
inc
repz
xor
jno
xor
aam
fistps
push
fisubrl
incl
mov
sub
daa
add
ja
push
mov
pop
mov
adc
sub
sub
outsl
push
test
push
xor
cltd
mov
arpl
das
or
stos
cmp
test
cmp
xchg
or
xchg
icebp
ret
scas
cmp
cmp
and
jb
and
pusha
and
add
pop
inc
cmp
mov
mov
mov
push
outsb
call
or
sbb
push
or
xchg
cs
aad
lret
cwtl
sub
filds
jne
negb
or
adc
jp
cmp
cmp
xchg
jae
rorl
inc
mov
lahf
cli
xor
inc
push
mov
cmp
cli
dec
lods
push
xchg
mov
push
push
loope
jle
lds
xchg
xchg
call
icebp
call
stc
sbb
bnd
add
cltd
xchg
or
jno
push
rolb
leave
or
dec
test
lods
cmp
or
ffree
mov
xchg
mov
cwtl
daa
jmp
divl
pop
and
push
cld
ds
andl
add
cmp
shlb
and
insb
mov
andb
std
imul
ficomps
xchg
ret
inc
out
es
push
cmpsb
ret
verr
int
outsb
cmp
call
test
add
push
sub
inc
and
xlat
pop
xchg
inc
jecxz
jbe
lret
inc
push
push
jecxz
mov
mov
pusha
outsl
cld
mov
sbb
ficoml
dec
fucomip
popa
ficoml
out
xor
in
dec
xchg
add
jnp
loope
mov
daa
pop
adc
ret
push
fcmovnbe
mov
out
je
mov
push
jnp
mov
push
repnz
testl
fnsave
xchg
pop
aaa
leave
repnz
cmc
mov
testb
cwtl
jne
in
or
enter
jnp
inc
lods
lret
iret
cmp
sub
xor
in
bound
push
jge
mov
sbb
and
xchg
mov
and
movsl
daa
mov
xchg
jmp
and
mov
lds
scas
mov
out
push
dec
call
dec
imul
incl
jo
pop
into
iret
shll
in
mov
iret
mov
jb
jle
pop
add
out
or
xlat
and
ds
aad
out
gs
outsl
add
mov
cmpsl
mov
test
jle
mov
stc
cmp
push
mov
pop
pop
pop
cli
call
pop
out
mov
es
lcall
dec
test
std
mov
rcrb
mov
inc
inc
call
inc
sbb
or
shlb
dec
sub
fimull
nop
loop
mov
hlt
lahf
sti
icebp
lcall
and
or
loopne
mov
adc
gs
xor
insb
jne
add
test
mov
testl
pop
cs
xchg
mov
in
mov
xchg
cwtl
mov
pop
aad
loopne
aad
and
test
cmovb
cltd
push
shll
dec
in
adc
inc
mov
mov
in
cmp
mov
jno
repnz
xchg
cmc
inc
pop
shll
adc
or
or
inc
xor
inc
xchg
addr16
test
or
xor
and
outsl
and
pop
and
stos
shrl
fiadds
inc
cmp
cmpsl
rcrl
fidivs
not
ljmp
subb
adc
push
imul
jne
mov
xchg
sub
pop
lds
stc
aad
rol
jo
iret
sub
bound
gs
pop
fbstp
adc
sbb
sub
push
push
setns
mov
push
cmp
aam
ss
nop
cmp
mov
xor
or
icebp
scas
xor
inc
mov
mov
sub
push
mov
sub
push
push
jmp
and
jae
xchg
mov
mov
inc
dec
push
cmc
mov
and
fwait
loopne
push
xor
in
jnp
popf
pop
scas
pop
lods
rorl
leave
sbb
pop
pop
xchg
mov
add
mov
dec
and
fidivrs
adc
add
pop
sahf
stos
sub
dec
pushl
mov
js
lahf
mov
ret
and
loopne
daa
out
and
jns
aam
repz
lret
dec
out
insb
push
push
or
jmp
arpl
stos
fldcw
add
pop
add
xor
je
das
mov
es
daa
shlb
in
aam
fwait
les
notl
cmp
mov
ljmp
sbbb
xchg
xor
mov
pop
and
inc
push
mov
shr
adc
adcl
mov
jl
jb
inc
test
ret
addb
fstpl
adc
add
test
jns,pn
lds
lcall
xchg
addr16
add
jne
jecxz
cmpsl
xchg
cmc
lret
sbb
and
popf
shlb
lock
pop
xchg
jnp
cli
pop
inc
test
xor
ds
mov
stc
mov
jne
lock
aam
push
or
insb
mov
ret
or
sbb
inc
int
imul
jl
stos
jae
push
sbb
add
xchg
sbb
testl
mov
ret
xchg
testb
jne
push
adc
out
sub
adc
popf
icebp
push
mov
mov
inc
add
ja
xor
mov
mov
into
leave
icebp
aad
insb
mov
xor
js
inc
lds
mov
out
adcl
pop
call
das
roll
lods
inc
xchg
xchg
nop
mov
daa
dec
dec
and
xchg
adc
cmp
ret
mov
and
pop
pop
test
fwait
scas
and
jmp
dec
rcrl
fstps
fnstcw
push
jle
je
and
mov
gs
pop
data16
mov
xorl
nop
cmp
xor
or
fstpt
test
imul
fdivrl
das
mov
cmc
inc
xor
lcall
outsb
daa
dec
add
sbb
fldt
sub
cmc
push
dec
scas
cltd
xchg
pop
lea
jns
jge,pt
lret
test
dec
addr16
or
cmp
sub
and
adc
scas
test
cmp
fbstp
int
shll
mov
ficomps
mov
shl
lret
jns
lret
jmp
mov
das
test
inc
and
add
int3
imul
add
ret
gs
sti
push
push
push
rclb
arpl
jecxz
jl
mov
fisttps
fs
dec
scas
xor
jle
out
cmpsb
std
pop
sbb
and
outsl
icebp
gs
xchg
dec
fdivrs
jle
push
push
xor
inc
stos
test
or
scas
inc
xchg
in
push
or
cmp
cld
sbb
dec
mov
dec
mov
fsts
mov
mov
dec
mov
iret
bound
pusha
or
addr16
out
push
mov
xchg
mov
orl
xchg
scas
add
lret
inc
mov
or
rclb
xor
and
dec
test
les
mov
mov
loope
aam
add
mov
adc
enter
or
pop
push
addr16
in
fistps
add
icebp
std
mov
lret
and
or
rclb
test
adc
inc
stc
icebp
fwait
icebp
add
pushf
xor
xchg
outsl
das
jge
mov
test
inc
lahf
sub
sbb
popa
xchg
aaa
pop
push
dec
jecxz
and
inc
shrl
adc
add
adc
dec
sti
aad
loop
hlt
add
xchg
icebp
push
push
xor
inc
das
add
sbb
xor
inc
out
das
push
ljmp
push
loopne
inc
cmp
fbstp
fcmove
push
cmp
and
pop
push
and
ret
ret
dec
xor
xchg
mov
rcrb
push
cmpsl
mov
sbb
mov
mov
cmpsb
jns
aaa
push
shrb
xor
xor
mov
ja
aad
enter
sub
div
xchg
inc
fstps
imul
shrb
add
sahf
out
stc
mov
xor
and
lock
mov
inc
stos
sub
xor
jle
hlt
imul
and
or
jle
mov
mov
push
xor
xlat
add
scas
repnz
xor
push
sbb
out
lret
sub
stc
xor
in
adc
ljmp
mov
and
push
cmp
pop
aas
cmp
stos
sbb
push
sub
dec
mov
ljmp
inc
ret
dec
mov
ret
out
pusha
mov
jp
cmp
fs
or
add
pop
fwait
jp
stc
sbb
xor
mov
or
daa
dec
lods
adc
cmp
inc
dec
sub
adc
xchg
sub
add
jbe
jecxz
xchg
scas
xchg
in
jle
aaa
das
stc
popa
adc
ss
mov
pop
xchg
icebp
popl
and
sub
dec
pop
out
push
fcmovb
and
xchg
mov
repnz
sub
mov
mov
rclb
clc
lods
ucomiss
mov
scas
fisubrs
pop
ret
rclb
xor
mov
inc
arpl
rep
pop
cmp
es
inc
lret
loope
leave
push
sub
mov
cmpsl
xor
cmp
das
loope
mov
sbb
repnz
dec
mov
mov
push
fcmovb
pop
outsb
add
fimull
jl
dec
add
pop
sti
scas
repnz
fsubrs
fwait
pop
ss
pop
dec
fisubs
or
dec
addr16
xchg
push
faddl
sbb
or
mov
push
pop
stc
mov
pop
xor
nop
test
mov
aam
xchg
xchg
lahf
add
mov
xor
inc
scas
mov
sbb
lds
add
mov
cld
adc
jmp
pop
cmp
aaa
xor
lahf
int
dec
mov
or
inc
leave
push
movsl
mov
push
scas
jmp
mov
ja
add
notb
xor
ljmp
call
out
aad
jo
dec
mov
std
in
ds
and
sbb
hlt
jp
push
pop
sbb
lret
fistpll
xor
xor
ret
inc
das
je
fisubs
mov
or
cmp
xlat
xchg
cmpb
sbb
jp
lods
mov
repz
std
mov
cltd
imul
adcb
push
jmp
ror
sbb
and
jns
dec
cs
inc
sahf
cmp
aas
push
mov
insl
inc
pop
push
xchg
add
es
mov
scas
or
and
out
push
dec
cmc
popf
push
mov
adc
or
test
fwait
jno
mov
adc
out
cmc
mov
lcall
xor
sbb
pop
inc
jbe
popa
imul
frstor
cmpsl
lods
add
or
imul
mov
out
jge
mov
outsb
test
shld
mov
int3
popf
add
add
nop
push
add
addr16
add
dec
mov
leave
and
fwait
notb
psrlq
popf
jbe
push
pop
lret
repz
rcll
hlt
andb
push
jmp
test
xor
inc
cld
mov
ds
mov
inc
fs
bound
or
mov
popa
sbb
testl
xchg
insb
xchg
push
sahf
jo
jns
jnp
aas
aam
out
mov
loope
push
das
xlat
add
sbbl
pop
jne
testb
aam
and
outsl
loopne
dec
sbb
fadds
jb
stos
and
data16
add
sub
sub
lcall
and
orl
cmpsl
sahf
sub
and
rcrb
mov
mov
ljmp
mov
xchg
outsl
mov
cli
add
jo
or
xchg
xchg
dec
jne
arpl
ficoml
frstor
rcr
dec
xchg
xor
out
loope
cmpsl
rolb
push
mov
iret
xchg
out
inc
and
cwtl
jge
jle
sbb
push
cmp
sbb
mov
out
hlt
dec
fistl
jp
das
mulb
test
call
fwait
stos
insb
clc
dec
xchg
jns
daa
loopne
mov
sti
jns
or
clc
enter
sub
sbb
xchg
push
lahf
xchg
adc
cmp
pop
jbe
jb
les
inc
and
pushf
mov
dec
ljmp
cmpsb
sbb
aas
jnp
jg
jnp
mov
xchg
shrb
hlt
cmp
xor
jo
aaa
call
xlat
pop
or
and
fsub
xorb
iret
mov
mov
andl
out
je
or
mov
daa
out
repnz
fnstenv
cmp
mov
adc
inc
mov
dec
xchg
sbb
dec
cli
push
xchg
xor
dec
and
leave
mov
xchg
sbbb
add
jmp
cmpb
or
cmp
ret
js
movntq
xor
shrl
addr16
rcll
sbb
ss
pop
cmp
sub
js
inc
jmp
sar
pop
sub
ret
cmp
dec
scas
insb
push
jmp
sahf
in
xorb
hlt
mov
sbb
cmp
lods
xchg
inc
shrl
push
adc
cltd
fsubrl
mov
testl
clc
add
cwtl
xor
mov
fwait
and
xchg
imul
lods
cli
addr16
xor
inc
dec
and
push
out
lock
pop
mov
push
dec
scas
and
xorl
xorl
outsl
lock
dec
dec
cmc
pop
nop
ljmp
rclb
xorl
out
cmp
inc
lds
loope
sub
fwait
enter
clc
pop
mov
sbb
fldenv
outsb
addb
xchg
push
in
ficompl
scas
outsb
mov
xor
int3
inc
xchg
arpl
adcl
push
fnstsw
xor
stc
inc
inc
test
stc
icebp
dec
cmp
mov
sahf
pminsw
or
ficomps
sti
push
adc
shl
daa
stos
xor
aaa
mov
mov
and
or
and
lock
xchg
cmpsb
mov
call
fwait
inc
insl
lods
js
xchg
cs
lret
dec
jmp
or
int3
ljmp
xor
pusha
mov
leave
or
sub
shrl
or
sahf
fsubrl
shrl
lea
xor
lcall
call
sahf
push
cs
or
or
ja
roll
ss
pop
data16
mov
fsubs
mov
or
sahf
jae
ds
xlat
sub
cmp
lods
popa
pop
cltd
fcmovnu
test
mov
xor
in
ffree
lock
cld
push
leave
popa
rcrb
xor
je
fldt
add
inc
andl
adc
mov
enter
mov
cmp
arpl
cmp
bound
lea
ja
push
loop
and
lods
dec
rolb
int
shrb
lcall
sbb
and
add
shll
jg
adc
loopne
xchg
testb
fdiv
adc
fnstsw
jmp
int3
ret
pop
sub
cmpsl
lret
icebp
xchg
in
jmp
lods
push
imul
imul
fsubp
lds
mov
scas
or
pop
add
sbb
notl
jne
aad
inc
shrl
clc
xchg
pop
das
mov
xor
mov
mov
pop
cmp
mov
lret
mov
std
lds
inc
fwait
mov
mov
push
sub
cmpsb
hlt
jg
push
xchg
and
mov
or
xchg
int3
faddl
adc
sahf
iret
jg
movsb
or
stos
push
stc
sbb
dec
cmp
fidivrl
add
or
stos
sub
push
popa
pop
ret
mov
fnstsw
repz
sbb
xchg
mov
sub
imul
inc
cld
rcrl
xchg
push
sbb
out
jl
jbe
cmp
xor
inc
fiadds
lods
enter
rclb
int
repz
pop
add
or
xchg
adc
xlat
jns
mov
mov
addr16
add
movsl
jb
je
dec
addr16
xchg
movsl
loope
cmp
mov
or
scas
inc
adc
outsl
fstps
and
sub
and
adc
dec
daa
xchg
sub
stos
inc
add
in
cmp
in
pop
xchg
push
add
xor
pop
cmp
icebp
mov
lock
outsb
pop
stos
lock
aad
jge
aam
fdivl
sbb
into
lock
repnz
aad
cmp
cmc
dec
test
lcall
or
push
andl
pop
lcall
fisttpl
mov
cld
lock
sub
jno
lea
pop
lds
or
xchg
imul
stos
or
cmc
or
xor
inc
adc
or
push
mov
mov
sub
mov
sbb
mov
fwait
xor
pop
xchg
lock
popf
dec
add
lcall
les
dec
dec
and
dec
push
inc
cwtl
xchg
mov
lods
ret
in
sub
cmp
add
xchg
pusha
mov
fisubrl
adc
dec
test
mov
push
adc
pusha
andl
test
mov
cmp
cmc
rcl
shrl
and
xor
pop
sbb
cli
push
lods
pop
jb
cwtl
or
rclb
fcmovu
inc
out
jp
inc
pop
cmpl
std
jge
incl
xchg
int
jecxz
neg
pushf
pop
ficomps
sub
iret
je
pop
cmpsl
jns
outsl
scas
loopne
cltd
inc
idivb
or
cli
jns
dec
imul
aam
cmp
jp
add
pop
scas
jo
pop
iret
cld
filds
test
imul
sbb
push
fisubrl
daa
sbb
and
add
add
xlat
xchg
xchg
jb
adc
jge
xor
lahf
ret
adc
pop
add
sub
stos
pop
sbb
pop
mov
inc
rcr
mov
lahf
cmp
cmc
adc
js
dec
int
adc
stos
out
les
sub
lcall
ja
cmc
sub
fadds
insl
push
lock
mov
in
xchg
lods
or
fcompl
dec
dec
in
lea
addr16
dec
addr16
mov
js
xchg
sub
xchg
xchg
sbb
sti
test
cmp
add
mov
insb
mov
imul
ret
ficompl
ja
roll
loop
lods
inc
inc
das
shrl
fstl
divb
icebp
ljmp
cli
test
jno
lcall
into
fwait
pop
mov
addr16
ja
xor
sub
in
cmp
cmp
adc
adc
xchg
inc
ljmp
pop
rcr
mov
push
xchg
cmp
jmp
arpl
jl
mov
pop
inc
or
cmpsb
icebp
dec
mov
xchg
xor
jne
xchg
loopne
inc
addr16
mov
sub
mov
jno
movsb
and
inc
leave
cmpsl
mov
xorl
jne
xchg
popa
sub
dec
add
enter
or
leave
mov
fiadds
jne
mov
jno
test
cmp
lds
pushf
and
cwtl
push
dec
ja
sbb
hlt
cltd
mov
pop
adc
mov
mov
xchg
daa
js
movsl
stc
aad
dec
stos
mov
lea
fidivs
xchg
mov
push
cmpsl
loope
shlb
incb
shl
mov
or
loop
mov
or
scas
cmp
mov
icebp
mov
out
repnz
fistl
xchg
fwait
push
pop
inc
cltd
in
sbbl
jge
cmp
adc
mov
cmpsb
leave
lock
fistpl
cwtl
dec
xor
adc
inc
xchg
cld
adc
enter
xchg
pop
scas
push
adc
jb
jp
lds
rcr
mov
orl
sti
adc
out
jno
insb
pop
in
and
divb
test
push
out
scas
pop
mov
stos
mov
sbb
cld
pushf
mov
mov
jg
cmp
sbb
inc
outsb
or
xor
icebp
cmp
and
jecxz
jecxz
rorl
fldt
repz
sbb
testb
and
lret
or
add
jp
pop
or
mov
and
adc
out
in
adc
inc
ljmp
in
bsf
popl
jp
dec
jns
hlt
and
adc
push
sub
sahf
inc
fldl
stc
test
cs
fisubs
xor
sub
xchg
add
xchg
mov
push
orl
fcomi
in
mov
xor
ds
notl
mov
out
push
dec
test
mov
das
das
seta
pushf
call
hlt
push
lret
push
inc
andl
dec
pop
xchg
inc
mov
lods
sub
das
mov
xchg
sub
jp
cmp
mov
ljmp
shll
mov
pop
iret
cltd
xor
inc
mov
shrb
sbb
pushf
dec
call
stos
or
add
gs
or
in
mov
lcall
adc
push
je
test
stc
jmp
add
fyl2x
xchg
ret
dec
movl
jae
push
add
mov
loop
enter
push
push
cld
xor
aad
orb
and
xor
xor
xchg
daa
ss
xor
mov
mov
ja
xchg
insb
adc
mov
imul
sub
jnp
mov
jo
loope
cmc
xchg
inc
ret
mov
ljmp
popf
ret
out
push
imul
test
push
cmp
mov
int
popf
mov
xor
jo
mov
shlb
adcl
loop
or
les
push
sub
pop
lahf
mov
push
pusha
jo
adc
repz
and
bound
xchg
jg
popa
fwait
ds
xor
nop
outsb
in
pop
scas
nop
shlb
xor
xor
inc
jno
jnp
fldcw
or
xor
mov
mov
loope
push
aad
xchg
or
inc
sub
into
dec
mov
sbb
dec
fldl
insl
scas
pushw
adc
dec
in
loop
push
lcall
mov
inc
mov
lret
rolb
xor
aam
lret
and
blcic
xor
mov
mov
inc
push
push
xchg
mov
jg
jmp
data16
add
or
mov
jge
add
lcall
in
xor
sub
mov
push
pop
xchg
or
lcall
push
pop
test
in
and
pushf
or
fisubs
xchg
arpl
or
sub
cmp
bound
jmp
adc
dec
jno
adc
inc
xchg
cwtl
mov
mov
lds
push
jmp
arpl
ja
adc
frstor
dec
clc
rcrl
sti
je
daa
dec
and
cmp
dec
in
lahf
push
push
dec
loop
scas
outsb
push
push
iret
imul
loop
cmpsl
insl
movsl
aaa
sub
mov
lods
aad
xor
dec
mov
sub
mov
fsubr
xchg
sbb
inc
xchg
xchg
test
cwtl
int
pop
arpl
int
push
xor
ja
xchg
jno
pop
fistpl
sub
repnz
arpl
pop
aaa
mov
out
push
jp
popf
push
outsb
repz
in
scas
sti
xor
pop
shr
add
shll
xchg
in
pop
lret
imul
dec
rorl
pop
scas
inc
or
cmp
push
pop
cli
incl
aas
push
mov
fcompl
dec
pop
filds
xor
add
cbtw
and
into
pop
fsubs
push
jmp
xchg
fadd
push
cmc
loop
out
cmp
testl
and
sbb
cmp
pop
or
arpl
pushf
out
sbb
mov
adc
ret
lret
inc
mov
ds
adc
cmp
scas
addr16
dec
push
jbe
adc
sbb
out
mov
and
mov
push
lods
std
jecxz
sub
inc
out
fwait
xchg
arpl
das
inc
decb
imul
fxch
pop
mov
or
mov
sti
mov
inc
ja
cmp
loope
in
cmpsb
ljmp
into
inc
arpl
lds
loopne
scas
movsl
frstors
pop
push
pop
ljmp
mov
or
out
inc
pop
xor
fidivrs
add
dec
jb
cltd
dec
pop
orl
shll
out
push
jle
dec
imul
pop
inc
mov
in
out
adc
xchg
add
int
pop
pop
aas
and
push
inc
fnstenv
xchg
add
or
add
mov
xchg
negl
stc
pop
jecxz
iret
xor
push
stc
push
sbb
cltd
fiaddl
int3
sbb
repz
mov
xorb
xchg
pop
mov
popa
clc
and
add
xlat
xchg
dec
mov
loope
popa
adc
jo
in
pop
inc
mov
cltd
jle
and
mov
arpl
cmp
loop
mov
inc
cmpsl
into
add
imul
xor
and
push
xor
inc
aam
xchg
iret
cmp
insl
call
adc
sahf
lods
inc
sbb
push
out
loope
mov
cmp
pop
popf
add
jmp
fcoms
jg
mov
cmp
push
arpl
pop
jge
mov
inc
cld
pop
inc
add
xchg
xchg
xchg
mov
jbe
mov
jno
pop
call
jnp
dec
lods
mov
stos
jle
or
dec
mov
fs
xchg
adc
outsl
loop
jmp
sarl
das
mov
sub
ret
pushw
push
jmp
pop
pop
or
add
inc
push
mov
jp
push
rorb
data16
bound
movsl
std
in
mov
insl
adc
jb
pop
and
cmp
ja
mov
scas
call
xchg
fsub
push
test
add
divb
scas
xchg
dec
push
std
cmp
pop
dec
sub
fwait
ljmp
cmp
push
mov
in
mulb
jno
jne
ljmp
icebp
pop
cmp
out
xchg
xchg
out
jmp
imull
andb
xchg
movsl
ret
xchg
xchg
insl
jecxz
or
and
test
push
adc
iret
jle
xchg
loop
insl
pop
ror
xchg
ja
jl
sbb
loopne
stc
push
push
iret
xor
cmpsb
sti
and
daa
ljmp
sbb
mov
aaa
xchg
iret
pop
mov
pop
mov
dec
hlt
loopne
gs
in
dec
aam
jle
jmp
pop
mov
cmp
push
cmp
ret
call
pusha
cmp
test
sub
xchg
leave
xchg
inc
fidivrl
push
jne
or
jbe
aaa
and
mov
push
stos
cmp
sarb
adc
cmpsb
sbb
pop
inc
jnp
push
sub
mov
outsb
pop
push
loope
or
and
into
adc
and
add
push
sub
adc
insl
mov
sub
ljmp
je
push
mov
jle
inc
test
sbb
mov
insl
sbb
repz
cmpsl
dec
test
int3
adcb
and
stc
mov
dec
xchg
popf
ret
mov
fisubl
cmp
jecxz
les
lods
mov
cli
dec
mov
push
pop
loop
add
xchg
cmp
stc
jmp
jg
mov
push
or
jae
push
xchg
stos
repnz
divb
sub
cmp
xchg
inc
idivb
fwait
jns
sbb
pop
and
lret
jns
push
lds
sub
aad
rcl
push
addb
icebp
jb
mov
pop
mov
lods
shl
aaa
cmp
and
and
push
stos
fs
xchg
jmp
cmp
xchg
xchg
jae
in
scas
mov
mov
sub
pop
stos
or
xchg
les
fcomps
xchg
and
mov
xlat
mov
pusha
add
pop
push
ss
push
xor
js
or
loopne
or
mov
lret
sti
outsl
icebp
mov
sub
sub
fcmovnu
fidivs
sub
or
sahf
enter
daa
pop
mov
pop
push
jns
dec
cmp
arpl
addr16
add
icebp
in
outsl
pop
sti
enter
lret
xchg
and
push
sti
mov
inc
int
and
lods
aaa
sub
pop
in
bound
fwait
mov
fmulp
mov
push
lock
jg
adc
cmp
jo
mov
ljmp
je
stc
ss
enter
adc
out
mov
call
loopne
mov
push
repnz
iret
dec
arpl
aas
xor
mov
pop
mov
cltd
add
mov
fildl
loop
mov
xor
mov
out
xchg
xlat
inc
jge
scas
jne
fildl
xchg
ljmp
insl
iret
cmp
roll
pop
mov
cmpsl
notl
leave
or
pushf
mov
dec
mov
xor
pop
fsts
notl
pop
add
mov
adc
cmp
jnp
mov
divl
xor
rolb
mov
sub
adc
cmp
mov
sbb
pop
popf
xor
cmp
or
ds
inc
xchg
mov
xor
arpl
movsb
movsb
and
push
mov
add
pop
cld
jl
or
aas
xor
out
mov
jp
dec
int3
adc
or
pop
mov
ss
cmp
fmuls
pop
ret
jge
add
dec
rol
mov
notb
sbb
mov
sub
movsl
pop
xchg
jge
dec
loopne
repnz
jo
movsb
imul
cmp
mov
jmp
scas
lcall
xor
out
test
out
ficomps
sbb
std
jl
push
inc
jle
cwtl
scas
inc
adc
push
aaa
rcll
clc
inc
mov
ss
xchg
lcall
in
mov
int3
loopne
sbb
loop
xlat
cmp
or
mov
pop
rcrb
cs
xchg
icebp
dec
ja
sub
movsl
or
pop
adc
ret
fisubrl
ljmp
or
mov
xchg
mov
or
pop
iret
rsm
and
cltd
repz
shlb
cmovs
popl
jae
shlb
mov
dec
decb
mov
dec
in
adc
jb
sub
ds
or
mov
stc
iret
mov
push
repnz
adc
int3
lods
pusha
jle
popl
sub
adc
dec
dec
cmpb
cld
xor
movsb
loope
movsl
or
push
sahf
stos
push
xor
inc
sub
je
push
cltd
data16
jbe
imul
lahf
shll
jnp
pop
lea
inc
cmp
jmp
mov
in
rolb
int3
inc
dec
sub
pop
jb
sub
pop
inc
cmp
nop
out
dec
inc
jo
cli
lahf
and
dec
pop
cli
mov
mov
mov
dec
push
push
mov
fistps
orb
xor
dec
push
add
sbb
loop
adc
negb
jecxz
and
xor
cmc
dec
pop
adcl
repnz
cwtl
cmpsb
pushf
out
pushf
xchg
add
xor
cmpsl
sbb
cmpl
fsubr
pop
fldt
jecxz
scas
mov
sahf
add
out
mov
les
mov
push
mov
xchg
pop
shrb
ss
pop
cmp
cli
ret
decl
cmp
cwtl
divb
test
outsl
mov
add
or
inc
sub
lea
cltd
repz
in
xchg
jb
cmp
jg
fisttpll
sub
fsubl
jle
test
movsl
in
shl
fsts
xchg
cltd
pop
fbstp
push
int3
pop
xor
scas
cmp
loop
daa
jle
jo
jmp
repnz
into
mov
les
push
fstpl
stos
mov
inc
lods
test
cmp
pop
cmp
push
mov
mov
rorb
ror
xor
jp
xor
jb
mov
into
mov
shlb
sub
mov
pop
xchg
xlat
xor
inc
jl
hlt
out
lret
inc
pop
nop
mov
cmpsb
xchg
and
call
mov
add
ljmp
imul
xchg
mov
inc
dec
clc
sbb
add
adc
js
jge
lods
xor
xchg
jge
push
add
mov
popf
and
jge
lea
sub
push
xor
xchg
push
cmp
sub
cmp
aas
mov
or
addr16
xor
imul
add
sbb
cs
fisttpl
fnstenv
xchg
int3
das
pop
add
xor
push
xchg
inc
add
in
out
mov
jg
test
cmpsb
dec
ljmp
xor
fistl
mov
fisubl
cli
insl
outsb
xchg
push
dec
adc
push
xchg
dec
ds
sbb
stc
outsl
movsb
add
pop
in
fistpl
sbb
cld
add
pop
dec
mov
das
in
and
xchg
mov
xchg
test
pop
inc
add
fdivp
mov
pop
sbb
std
js
pop
adcl
dec
mov
jecxz,pn
pushf
insb
adc
push
xchg
xchg
pop
bound
aam
or
inc
aad
pop
sub
ret
div
inc
fmul
pusha
jns
popl
das
ljmp
imul
negb
mov
gs
jo
lods
and
push
push
fimull
into
xchg
je
xchg
pop
scas
jae
mov
movsl
mov
lods
lea
cwtl
sub
sbb
mov
add
adc
outsb
ret
sbb
std
jl
int3
xor
mov
ljmp
sub
mov
mov
xchg
dec
pop
jns
mov
cmp
xor
std
cmp
dec
enter
sbb
scas
cmp
inc
mov
movsl
jnp
mov
popa
mov
mulb
cmp
mov
xchg
push
mov
aad
in
cmp
dec
cmp
xchg
add
push
add
das
ret
ror
fwait
xchg
push
cmpsl
bnd
stc
mov
xor
dec
sti
adc
test
mov
out
pop
js
sbb
mov
lock
aaa
outsb
adc
xchg
out
rcr
imul
cmp
or
out
aad
enter
inc
cmp
int3
jae
filds
or
xchg
hlt
xlat
stos
xchg
inc
out
mov
jge
add
ljmp
pop
subb
dec
gs
xchg
pop
add
aas
push
jno
gs
pop
icebp
ret
imul
sub
xchg
mov
movsb
iret
pop
cmpsl
into
add
jns
xchg
cmpsl
mov
mov
cmp
fisubs
mov
cmp
jge
mov
test
mov
sbb
movsl
xchg
jnp
shrb
inc
and
or
adc
mov
inc
scas
adc
and
jecxz
push
lret
and
out
test
or
lret
jp
and
mov
xor
pop
lahf
dec
mov
pop
sbb
jmp
adc
test
dec
add
inc
jne
sahf
xchg
jle
xchg
fists
inc
in
cmp
js
or
aaa
push
jmp
xchg
or
inc
paddb
xor
pop
ret
stc
shrb
je
aad
jb
adc
mov
loope
push
add
xchg
xor
mov
incb
aam
and
ficompl
sub
movsl
and
mov
clc
imul
cmp
cmp
int3
mov
arpl
fisubrl
stc
mov
cmp
testb
fnstenv
add
clc
pusha
lret
into
in
mov
push
stc
sbb
data16
inc
mov
xchg
mov
or
sbb
dec
lock
mov
pusha
in
clc
shr
fs
jno
cmp
test
enter
bound
call
lcall
inc
and
cs
pusha
pop
in
adc
or
cmp
outsb
xchg
das
aam
inc
je
mov
and
add
and
push
aad
call
cmp
and
mov
adc
add
xchg
sub
push
xor
jp
test
inc
rcll
jns
stos
dec
lods
and
push
pop
iret
and
aaa
prefetch
mov
inc
shlb
shll
loopne
lret
aad
sbb
push
or
icebp
aad
fcompl
sahf
fldl
xchg
xchg
mov
cmp
movsb
sub
into
popl
ds
inc
cmp
scas
inc
lret
divl
mov
add
sub
test
add
inc
lods
out
lds
cmp
pop
cmp
lock
popa
add
std
xchg
out
dec
int3
and
call
mov
dec
scas
mov
pop
and
jge
in
in
arpl
sbb
pop
fisttpll
call
movsl
jae
push
adc
add
push
jo
out
cld
sbb
xchg
roll
push
pop
dec
ljmp
push
pushf
les
enter
or
bnd
mov
xchg
pusha
cmp
fwait
jl
push
inc
push
ret
xchg
jae
mov
cmp
mov
add
jecxz
cs
nop
push
je
xor
int
lds
lret
idivb
inc
sbb
or
dec
push
inc
pop
std
pop
aam
mov
out
les
sub
repnz
and
hlt
sbbl
in
adc
pop
and
iret
shrl
jecxz
fnstenv
lret
leave
inc
lods
fucom
mov
xchg
jle
test
in
adc
add
push
imulb
addr16
fs
orl
sub
lcall
mov
add
out
adc
xchg
lcall
pop
pusha
mov
mov
sbb
aad
out
addr16
fildl
repz
orl
sbb
ficompl
push
adc
mov
push
popa
mov
dec
mov
cwtl
aas
daa
lods
aaa
lahf
lret
adc
cmp
loop
adc
cs
add
das
xor
mov
cld
das
sub
cmc
or
mov
pushf
jge
shrl
sub
sub
dec
imul
mov
pop
dec
shlb
daa
out
pop
mov
cs
jecxz
sbb
mov
mov
leave
hlt
sbb
inc
sub
in
xchg
adc
jl
jo
rorl
cmc
mov
xchg
icebp
pop
hlt
xchg
jp
jns
aam
daa
xchg
divb
bound
aam
add
stos
push
sub
fstpl
imul
pop
nop
pop
cwtl
in
scas
xchg
ficompl
mov
adc
rcl
arpl
fdivrs
mov
mov
push
cmp
push
stos
xchg
outsl
ja
jnp
xlat
jo
jp
ret
pop
shlb
adc
hlt
lret
mov
jae
mov
notl
scas
push
mov
adc
stc
dec
pushf
inc
or
sub
mov
jne
jmp
adc
add
aam
insb
adc
icebp
cmpsl
roll
and
aas
jbe
push
sbb
scas
lea
lea
lea
add
fistl
pop
movsl
mov
inc
jecxz
sar
adc
or
in
mov
stos
std
sub
sub
add
and
fstpl
sbb
push
fbstp
rol
in
mov
xor
outsl
mov
jbe
jp
addr16
rep
shlb
dec
out
mov
js
fwait
into
dec
nop
push
aam
popf
ret
inc
sbb
out
push
xchg
cmp
sub
mov
loopne
dec
pusha
aas
bound
popf
inc
pop
cwtl
add
push
add
clc
cs
loope
mov
xor
ljmp
add
mov
jecxz
sbb
nop
inc
insb
xchg
pop
push
js
sub
xor
cmc
test
inc
movsb
inc
sbb
in
or
imul
add
push
daa
mul
hlt
xchg
out
or
js
xor
or
data16
dec
pushl
or
cmpsb
repnz
push
or
jb
cmpsb
xor
sbb
ljmp
into
ror
or
mov
pop
ffreep
sbb
or
sbb
sahf
jg,pn
shrb
jp
add
out
stc
push
int
jecxz
test
mov
inc
xor
mov
lds
es
rorl
aas
mov
and
add
lods
sbbb
sub
movsl
data16
ret
shlb
mov
test
lahf
test
lea
inc
lret
sbb
adc
push
or
int
mov
les
push
int
mov
fcomps
pop
repnz
xchg
sub
sub
popf
adc
cld
addr16
out
les
ss
stos
ror
xor
jmp
in
push
ljmp
jle
loope
push
push
or
lods
iret
mov
inc
out
and
xor
jnp
fwait
es
stos
fdivr
in
dec
shrl
jb
jp
or
mov
xchg
xchg
jecxz
mov
movsl
dec
mov
inc
pushl
jne
mov
inc
popa
cmpsb
mov
out
push
cmpb
outsl
out
mov
pxor
or
and
jnp
stos
arpl
inc
and
mov
adc
cld
jnp
mov
or
push
push
xor
xchg
nop
iret
roll
jl
pop
shrl
and
pushl
xchg
inc
cmp
lahf
ret
cmpsl
bnd
xchg
mov
test
push
loopne
ljmp
push
daa
hlt
sub
xchg
int3
mov
cmp
arpl
inc
inc
xchg
mov
jg
loop
pop
scas
push
pop
test
jo
test
ss
rcrl
iret
push
shrl
lods
lods
or
jnp
pop
mov
loopne
pop
add
jp
push
jne,pt
sbb
movsb
test
mov
hlt
inc
ret
push
ret
inc
sbb
popa
xchg
mov
xchg
add
nop
cmp
test
test
outsb
fdivl
mov
sub
repz
jne
hlt
pop
sbb
in
mov
mov
leave
lock
mov
popa
stos
mov
adc
push
mov
cld
ja
subl
and
mov
insb
jno
cmp
mov
arpl
add
jmp
jle
sbbl
loopne
push
mov
pop
push
js
inc
mov
aam
arpl
imul
inc
jmp
clc
into
rol
xlat
and
icebp
jg
lods
dec
and
icebp
fcoms
movsb
pusha
and
movsl
push
cmp
ljmp
ret
pushf
and
outsb
xchg
xchg
scas
aas
push
in
jp
dec
adc
mov
xor
dec
push
and
pop
int3
sahf
mov
pushf
jg,pn
ds
push
les
mov
repnz
fldl
or
lcall
pop
stos
mov
je
jle
pop
adc
test
jecxz
xchg
arpl
add
push
add
push
xor
ret
lods
mov
stos
add
add
movsb
movsb
rclb
jmp
pushf
popa
fs
ret
xchg
mov
lea
inc
mov
xlat
fadds
or
cmpsl
mov
je
and
and
push
pop
enter
mov
test
loopne
test
pop
push
aas
mov
push
into
sub
pop
repnz
dec
test
inc
and
mov
ljmp
xchg
nop
xchg
xor
jns
sub
shll
int
fwait
sub
inc
ja
push
push
jbe
shl
push
mov
psubw
cmpl
aad
movsb
sub
xchg
mov
add
add
faddp
int
cmp
mov
fnstsw
hlt
pushf
and
mov
test
ja
dec
jl
inc
sub
mov
pop
add
repz
mov
mov
adc
inc
scas
dec
das
mov
scas
out
mov
mov
mov
lods
loop
jb
dec
dec
lret
shlb
ret
or
pshufw
sbb
xchg
jge
xor
mov
in
in
inc
xor
sbb
jp
es
sbb
outsb
adcb
ret
mov
mov
xor
adc
jae
mov
pop
xchg
xchg
add
mov
inc
jg
cltd
mov
mov
push
push
negb
popf
and
jmp
fcos
xor
les
loop
ja
cmp
xor
clc
push
aas
add
cmp
cmp
sub
outsb
test
sbb
icebp
in
jno
pop
xchg
and
and
iret
sbb
outsb
xchg
push
loope
aaa
popf
stc
orb
push
add
mov
addr16
aaa
aaa
movl
fsubr
cmp
or
mov
pop
out
sub
pop
xorl
jmp
sbb
mov
in
add
xchg
jge
or
aas
pop
adc
aas
pop
incl
push
cmp
mov
sahf
push
sarb
push
sub
pushf
xchg
call
lods
push
es
pop
xor
cltd
stos
ret
mov
aaa
sbbl
ljmp
sahf
xchg
fldl
add
or
jmp
cmp
test
jmp
fidivrs
xchg
outsb
xor
pop
cld
cmp
sub
stc
ds
mov
mov
daa
out
bound
add
cli
mov
insl
pop
mov
add
xchg
inc
mov
push
outsl
and
add
push
out
xchg
cmp
fistps
sbb
popa
pop
ret
cmpsb
lret
into
lcall
mov
mov
mov
insl
ucomiss
jmp
sti
bound
loope
lods
cli
outsb
les
jecxz
sarb
jmp
adc
insb
or
dec
jge,pn
outsb
in
test
mov
fistps
shl
out
leave
mov
mov
in
outsl
adc
fcomp
add
or
lret
int
jbe
cltd
mov
call
insl
pop
jecxz
imul
xchg
mov
cmc
or
and
push
mov
stos
push
icebp
mov
pop
pop
cld
pop
dec
sub
mov
push
push
enter
push
adc
mov
insb
cmp
push
movb
inc
mov
add
fistps
mov
adc
mov
cs
push
stos
ds
pop
enter
icebp
inc
adc
popa
je
inc
push
mov
nop
or
xchg
inc
xor
dec
sbb
call
dec
add
insl
jl
test
mov
jns
fs
mulb
int3
adc
loop
lret
jecxz
and
mov
fsubp
and
std
rolb
jbe
xchg
in
hlt
shrb
cmp
adc
or
out
jae
lock
jge
xchg
inc
shlb
xchg
sbb
jo
fldcw
inc
and
lock
pop
mov
push
lock
and
push
dec
lcall
xor
xchg
imul
mov
les
daa
aad
cmp
xchg
aas
adc
in
jmp
push
adc
sbb
pop
sarl
sub
push
ret
out
hlt
sbb
adc
lock
xchg
dec
insl
aaa
repnz
xchg
add
and
sbb
fisttpll
jnp
nop
push
pop
rclb
leave
cwtl
dec
push
cmp
test
mov
adc
push
popa
or
aad
int
aad
int
adc
mov
xlat
mov
subl
push
jge
sbb
sahf
add
push
rorl
xchg
mov
flds
inc
xchg
jbe
pop
sub
add
xchg
ret
out
pop
cmp
adc
enter
add
stc
cli
leave
mov
mov
dec
mov
pop
cld
pop
and
adc
rcrb
gs
je
ror
in
ljmp
lret
enter
mov
in
mov
pusha
andb
xchg
fildll
lock
inc
cli
outsl
das
or
in
imul
sub
shrb
dec
lret
lahf
and
xchg
adc
jbe
cmc
mov
or
mov
jecxz
outsb
inc
fidivrl
lds
pop
mov
adc
push
jb
mov
pop
leave
lret
inc
mov
aam
dec
icebp
fsts
lods
ja
push
out
sub
mov
or
and
insb
fisttpll
pop
pop
notb
xchg
rorb
jo
jo
mov
add
cld
stos
data16
pop
fidivs
cld
or
dec
lret
mov
fsubs
test
pop
xchg
lret
xlat
mov
add
out
sbb
dec
mov
jp
pop
inc
add
inc
sbb
test
rcll
call
inc
or
sbb
mov
jae
inc
adc
pop
fists
je
or
cmp
jae
stc
xchg
jb
leave
inc
pusha
mov
inc
add
and
mov
dec
mov
aas
pop
lret
jmp
jp
adc
add
xor
jmp
aam
jae
andb
rcl
aaa
addr16
inc
add
sub
icebp
mov
or
jnp
inc
pushf
xchg
jne
or
push
int
xchg
out
cmp
push
in
arpl
addb
mov
lcall
fs
xor
cmp
dec
jl
cwtl
dec
test
loopne
pop
lea
rcll
jns
sub
cltd
mov
jp
fs
bnd
cmp
call
push
xor
cs
lods
lcall
jmp
pop
and
mov
pop
sahf
and
mov
mov
bnd
out
inc
xor
xlat
adc
outsl
test
pop
pushf
jb
fs
cmpb
cmpsb
and
add
jl
xor
ss
in
sub
je
inc
das
or
jns
int3
aam
mov
outsb
verw
pusha
insl
and
dec
and
mov
jl
daa
mov
push
iret
sbb
ficoms
mov
mov
inc
inc
xchg
cmp
repz
add
jbe
and
lods
add
mov
stos
sti
xor
lods
mov
into
pop
imul
in
mov
clc
sbb
shl
stos
sahf
daa
push
imul
and
xlat
mov
mov
lcall
inc
inc
pop
pusha
and
jae
hlt
cmc
sub
cs
cmp
fisubs
fmul
inc
push
call
sbbb
and
vcvtdq2pd
add
sbb
cwtl
or
xor
xchg
jb
insb
ret
in
sbb
cmpsl
mov
sahf
push
add
mov
mov
mov
mov
mov
roll
lahf
insl
lahf
xchg
push
cmpb
fadds
outsb
adc
orl
jne
mov
int3
cmp
xor
lret
jmp
mov
fmulp
sub
orl
adc
sub
roll
pop
shlb
push
rorb
jns
clc
sub
sahf
loopne
xchg
push
outsb
test
js
xorb
imul
call
test
xor
mov
or
mov
test
lock
mov
jb
dec
push
nop
aaa
pop
fisttpl
pop
cld
jae
or
adc
mov
jns
fwait
in
pop
mulb
imul
pushf
cmp
mov
inc
add
je
hlt
cltd
xchg
stc
das
imul
pop
cs
mov
push
lds
in
scas
add
jp
pop
mov
dec
fdivrp
movsl
add
bound
cmp
sbb
lret
dec
mov
insl
push
jle
fildl
lret
and
pusha
repz
push
rolb
aam
adc
jmp
pop
popf
sbb
xor
xchg
pop
rcrb
pop
rorl
stc
xchg
jbe
div
enter
out
push
aaa
lods
xchg
gs
jbe
push
xor
or
mov
adc
das
insb
mov
lds
and
pop
push
xchg
mov
in
lds
mov
xor
aad
adc
mov
or
xor
test
lahf
xorb
pop
jb
mov
cli
fimull
xchg
xor
jne
fiaddl
xorl
mov
popa
ss
add
icebp
fisubrs
sub
adcb
lret
aaa
add
es
jmp
jbe
aad
int
stc
add
cmp
inc
in
jae
xchg
jp
and
lds
imul
inc
xor
movb
js,pn
add
jmp
imull
xchg
lock
dec
fcoml
stc
ja
sbb
frstor
test
sti
push
xchg
add
insb
jae
dec
test
insb
imul
sbb
and
adc
mov
rolb
rcr
inc
aad
inc
inc
push
adc
inc
lods
pop
test
mov
sub
xchg
test
add
pop
push
filds
and
inc
gs
faddl
cmp
lods
movb
xchg
lea
flds
fwait
jl
add
add
cmp
lods
loope
cmp
int3
or
xor
icebp
jmp
pop
test
jge
inc
gs
dec
sbb
js
xor
xor
inc
imul
scas
or
sbb
push
cmp
gs
xchg
push
movsb
sbb
dec
dec
xchg
sbb
rorl
repz
jae
negb
fsubrl
iret
inc
pushf
scas
pop
lcall
pop
mov
imul
and
lret
sbb
lret
pop
nop
std
jb
ret
jae
sbb
sub
loopne
shrb
aaa
xor
sti
inc
inc
aas
imul
loop
cmc
outsb
adc
mov
roll
mov
into
mov
pop
inc
mov
bound
out
or
cwtl
cmp
xchg
or
int
cmp
or
push
je
sub
sbb
stos
dec
nop
xchg
into
sub
sbb
jecxz
fidivrs
addr16
pop
std
cli
das
scas
push
pop
pop
mov
push
lret
jle
fwait
stos
cmc
addr16
sbb
addl
dec
jbe
fadds
orl
add
and
int
jle
mov
mov
jecxz
das
jp
mov
pop
pop
pop
imul
jp
jmp
fwait
jg
push
or
shlb
xchg
repnz
shlb
jecxz
insl
in
push
lock
adc
sahf
pop
arpl
imul
adc
mov
jp
sbb
adc
add
or
mov
dec
fsubrp
dec
jns
mov
dec
xor
ljmp
fisubrs
fldl
insl
stc
pusha
lock
jl
inc
rcrb
and
adc
push
insb
push
das
outsb
shlb
fstps
cli
inc
ds
dec
idivb
out
fstpl
inc
sbb
mov
sbb
inc
mov
and
test
sub
cwtl
cmp
push
push
mov
or
orb
mov
nop
ror
popa
mov
jo
hlt
mov
add
ss
or
mov
dec
outsl
mov
fnsave
xlat
cmc
clc
scas
ljmp
iret
cltd
fmull
enter
repz
popf
cmpb
aad
mov
jne
imul
inc
push
ds
xor
in
xor
fcomp
in
push
mov
adc
pop
pushf
incb
ds
cwtl
push
scas
dec
ret
xor
dec
fwait
push
dec
addl
add
outsb
and
mov
fsubrs
inc
lock
repnz
iret
adc
cld
push
aam
add
adc
orb
test
call
pop
cltd
xlat
sbb
js
fmull
pop
gs
xchg
sbb
movsl
fs
or
mov
and
dec
push
stos
dec
cld
repnz
cmp
loop
roll
mov
dec
sbb
cmpsb
xor
jae
call
xchg
xchg
inc
jnp
inc
jnp
push
jno
cmc
adc
insl
fimull
adc
loopne
insl
mov
insl
mov
xchg
mov
cmp
stos
and
push
push
lock
repnz
dec
fmull
in
mov
xor
xchg
mov
or
or
xor
loope
push
lods
mov
insb
cs
sub
push
adc
bound
xor
fildl
xor
ficompl
add
add
daa
insl
lret
cmp
and
cmpsl
pop
push
inc
mov
or
daa
pop
mov
mov
das
cmpsl
mov
mov
and
cmp
inc
mov
inc
lods
enter
rorl
aam
cmp
adc
inc
mov
popa
sub
push
adc
cmp
mov
xor
jp
sub
jns
stc
ljmp
pop
popa
sub
pop
xor
mov
lea
data16
imul
scas
sub
push
sbb
movsb
lea
mov
and
mov
ja
ret
stos
push
outsb
cmp
mov
inc
ret
movsb
pop
push
add
jecxz
jle
xchg
jne
add
icebp
jo
push
jle
dec
mov
jle
mov
adc
stos
mov
push
mov
aas
sub
lret
scas
and
jb
das
pop
xchg
push
pushf
dec
jmp
jg
imul
bound
int3
subb
cmp
xor
push
mov
rcll
dec
sar
cmc
cmpl
jbe
divb
add
dec
mov
sub
outsb
jecxz
lahf
mov
sub
fidivl
fistps
fs
add
push
insl
cmpsb
sub
xorl
xchg
or
mov
sub
daa
icebp
add
and
rolb
push
and
scas
ljmp
lcall
fbstp
mov
bound
andb
dec
pop
repnz
movsb
and
dec
pop
faddl
fdivs
mov
push
int
clc
stos
out
pop
leave
ss
cmpsb
cmp
push
push
or
inc
pusha
jecxz
sbb
or
lods
int
push
mov
add
je
mov
push
xor
cmp
clc
mov
sbb
adc
cs
out
xchg
test
sbb
xchg
imul
sbb
into
daa
mov
and
decl
daa
fildll
xor
push
loop
xor
pop
out
shrl
lret
loope
push
jns
adcb
or
or
add
mulb
test
inc
jg
pop
arpl
push
jb
icebp
jnp
data16
roll
push
ljmp
test
xchg
xor
mov
lret
mov
jmp
popw
mov
mov
pop
xchg
sub
add
push
in
mov
pop
inc
test
test
repz
push
rcll
js
mov
out
mov
and
test
fwait
test
nop
fidivs
mov
js
push
dec
stos
jbe
mov
jne
lret
call
sbb
adc
ljmp
outsl
fists
pop
fimuls
mov
mulb
pop
jmp
subl
mov
sarb
popf
in
mov
leave
les
fwait
outsl
xchg
popf
add
pushf
lret
mov
sub
cmpsb
xlat
adc
cmp
in
test
clc
cmp
sub
sbb
xor
rol
popf
add
pusha
dec
cmp
mov
cld
pop
icebp
mov
adc
jns
pop
loopne
ljmp
jo
test
inc
adc
sub
cld
faddl
fnsave
scas
hlt
rcpps
scas
loopne
out
inc
or
sub
mov
shlb
push
pop
sub
ret
sub
jg
sbb
daa
mov
jecxz
arpl
push
fsubs
and
arpl
xchg
jle
notl
push
mov
pop
ja
out
hlt
dec
clc
pop
dec
dec
lea
fdivrl
cmp
stc
pop
add
scas
fldenv
movsl
scas
push
loope
mov
into
sahf
jns
inc
clc
mov
adc
pop
idiv
jo
xor
push
mov
add
add
les
mov
test
std
sbb
and
es
cmp
sbb
push
fcomps
cmp
push
cmp
pop
mov
in
icebp
jbe
xchg
xchg
data16
dec
inc
sbb
add
mov
mov
hlt
push
scas
xor
aaa
out
jne
lret
sbb
fdivrs
xchg
mov
adc
jp
sbb
in
rcrl
daa
ficoml
jg
cmpsb
and
jp
inc
stos
sub
add
jns
add
pop
add
mov
xor
daa
fs
pushf
mov
mov
popa
lock
mov
and
sbb
push
jg
cmc
cmpsb
ja
cmpl
inc
cmp
mov
aas
call
in
mov
dec
hlt
popf
sub
sub
aaa
push
ds
cwtl
inc
lods
add
jno
mov
scas
adc
stc
dec
mov
xor
cmp
add
test
xchg
iret
mov
mov
cli
ficomps
and
pop
xchg
mov
inc
mov
rcr
fisubrl
imul
lods
xchg
addr16
mov
in
in
push
push
int3
cmp
in
fmull
jns
inc
or
fwait
int3
dec
or
ss
sbb
lahf
or
sahf
pop
inc
lahf
sbb
outsl
test
mov
fidivl
jecxz
daa
inc
dec
sbb
sub
fisttpll
fldl
mov
hlt
inc
ret
jae
mov
dec
or
movntq
cmpsl
xor
xor
inc
jge
sub
cs
mov
push
jmp
xchg
dec
cltd
push
or
sbb
add
test
sbb
cmpsl
xorl
sub
pop
dec
sbbb
push
add
jmp
sti
cltd
push
sbb
enter
jno
inc
xchg
fnsave
loope
sub
sub
xchg
jmp
in
jbe
sti
aaa
cmp
fs
jmp
pop
add
jmp
out
aaa
jo
out
adc
orl
stos
ss
icebp
scas
jbe
mov
shrb
ficoms
mov
pop
jb
adc
loop
sbb
clc
lea
xor
stc
cmp
aad
mov
or
jmp
push
jnp
sub
mov
pusha
cmp
pushl
jae
sahf
ljmp
xchg
dec
in
nop
mov
push
dec
or
lods
mov
add
xor
std
inc
cmc
cmc
inc
xchg
loop
mov
jl
int3
dec
push
mov
sub
cmp
sahf
in
jle
inc
fs
loope
jl
add
iret
mov
int3
cmpsl
jmp
int
ret
inc
jo
xchg
sub
scas
and
scas
test
jae
push
mov
pop
data16
pop
ret
add
in
rcrl
fnstcw
dec
fistpll
shll
adc
movsl
jmp
pop
xor
mov
push
or
in
jno
popa
push
push
addl
xchg
and
xor
pop
jmp
lret
and
repz
push
in
add
jl
jno
xor
or
and
lret
inc
pushf
and
push
mov
mov
pop
pop
jbe
and
xlat
or
mov
pushf
and
out
out
cwtl
dec
das
adc
sbb
dec
imul
jno
xchg
es
shrb
leave
stos
addr16
xchg
es
xchg
jbe
cmp
test
mov
mov
jg
pop
inc
addb
test
jle
push
inc
inc
addl
fistpl
roll
mov
push
movsl
xchg
jno
jecxz
mov
aad
cld
cmp
adc
and
out
or
mov
cmp
fldcw
xchg
insb
arpl
stos
xchg
data16
lds
or
std
test
pop
jo
add
push
push
scas
lea
mov
pushf
daa
in
scas
bound
js
jp
lods
lcall
in
add
pusha
cmp
ret
fcmovu
mov
mov
mov
hlt
icebp
out
movsl
xchg
dec
lds
notl
xor
adc
loope
pushf
les
cld
fidivl
mov
test
mov
div
rolb
push
scas
mov
sub
test
dec
push
stc
out
ds
add
xchg
jbe
sahf
cmpsb
mov
leave
ss
ds
sub
mov
jno
adc
and
fst
push
jae
mov
popl
insb
lahf
iret
shlb
xchg
inc
mov
arpl
repnz
inc
push
mov
and
ds
addl
mov
and
push
popf
pop
mov
dec
pop
rcrl
jle
aad
jg
inc
mov
mov
mull
bswap
push
pop
jle
and
mov
sahf
ss
enter
mov
mov
and
and
and
lds
mov
dec
push
jne
pop
rorb
sub
pop
sbb
ret
sbb
cmc
pop
mov
inc
mov
cmpb
loop
xchg
mov
adc
popf
push
mov
imull
sbbl
jnp
int3
and
jmp
in
cmp
int
xchg
shll
in
outsb
test
inc
test
in
jecxz
rol
cli
mov
popf
jecxz
nop
fnstcw
scas
dec
cmp
cmp
adc
sbb
cmpsl
push
jge
xlat
std
fldt
enter
dec
lcall
push
lock
push
hlt
jno
dec
loope
imul
xchg
xchg
and
push
push
mov
sub
jle
outsl
sub
inc
lea
repnz
dec
push
pop
mov
cmpsb
jbe
ljmp
arpl
mov
xchg
loopne
rorb
outsl
cmpl
mov
cmp
sbb
std
mov
jb
xor
lcall
jns
pop
js,pt
adc
inc
fbld
jl
sbb
rclb
scas
sub
push
xor
fwait
lock
sti
int
push
jp
mov
stos
xchg
xchg
pusha
lcall
xor
adcb
addr16
imul
jne
jnp
and
sbb
or
push
sub
jge
mov
gs
stos
push
in
out
cmp
add
daa
incl
imul
push
rorl
inc
out
nop
sbb
clc
nop
or
dec
sbbb
jbe
sub
or
loope
lods
mov
stos
fmul
push
sbb
cmpsl
psllq
out
insl
or
push
xor
jecxz
xor
data16
stc
repz
xor
cmp
pop
ljmp
sub
in
push
lret
stos
inc
in
ja
and
cmp
outsl
les
stc
inc
repnz
test
sbbl
or
inc
jne
leave
dec
daa
jmp
pop
add
push
lods
inc
mov
pop
in
cmp
pop
xchg
test
call
mov
sbb
push
ljmp
addl
enter
add
and
ja
movsl
bound
mov
dec
imul
sub
movsl
outsb
fstpt
xor
std
pushf
out
nop
jnp
jecxz
insb
xchg
inc
fmul
int3
aaa
test
movsl
inc
in
sbbb
lock
push
int
sub
and
sbb
cwtl
insl
xchg
lods
loop
enter
out
popa
in
enter
unpcklps
xchg
add
mov
push
xlat
add
mov
popf
imul
jl
scas
les
add
and
mov
xchg
inc
out
mov
xchg
lcall
leave
sbb
je
gs
dec
stos
test
outsl
inc
pop
out
test
mov
adc
sbb
sbb
les
out
push
pop
xor
mov
cmp
cld
aas
test
jae
clc
xchg
add
xchg
lods
xor
lret
test
pop
sub
sub
cmpsl
fdivl
sub
insb
xchg
dec
add
pop
nop
xchg
jbe
dec
pop
in
stos
insl
ret
out
cmpsl
dec
in
inc
ljmp
or
mov
jmp
adcb
add
mov
pop
fistpl
sahf
inc
stos
mov
dec
adc
pop
mov
mull
xor
sbb
jg
push
clc
addr16
push
jne
in
pop
jo
mov
cmp
mov
insl
aam
inc
xchg
in
jmp
lea
sahf
cmp
xor
xchg
stc
mov
xor
mov
arpl
fldz
sahf
nop
insb
sbb
orb
push
out
cmp
mov
add
mov
mov
mov
into
iret
idivb
xchg
jbe
add
js
stos
sub
pop
das
ss
out
and
setge
out
jnp
call
test
inc
jae,pn
imul
stc
aas
pop
inc
mov
inc
cmp
imul
xor
add
xchg
hlt
cmpsb
or
mov
rclb
mov
xorl
jmp
in
fdiv
jno
mov
clc
push
xchg
das
lods
lret
cmp
mov
lgs
sbb
icebp
ss
sbb
cli
test
sbb
inc
mov
cmpsl
movsb
popf
sbb
push
stos
aaa
pop
out
sbb
inc
or
pushf
fwait
movsb
xchg
cwtl
gs
mov
fs
lea
pop
mov
xchg
dec
stc
pop
inc
lds
jg
outsl
pop
dec
push
lret
cmp
inc
cmc
iret
idivl
mov
lcall
push
and
inc
xchg
iret
mov
xchg
icebp
or
sub
push
adc
lock
movsl
scas
fcoms
mov
fnsave
jnp
in
das
push
mul
inc
sbb
pop
clc
iret
and
in
adc
pop
test
cmp
lock
mov
addb
lcall
sbb
pop
or
movsb
push
mov
enter
stc
faddl
and
ret
mov
cltd
xor
cmp
int3
lahf
xlat
std
scas
mov
lahf
test
jmp
dec
and
inc
fadd
jle
mov
sarb
repz
sub
or
mov
dec
enter
mov
mov
aad
lds
or
mov
sti
sub
adc
pop
xchg
pop
mov
fwait
aad
push
jmp
push
push
add
pop
pop
test
mov
inc
xor
adc
xchg
lds
mov
hlt
push
imul
adc
jge
das
add
iret
push
out
test
rcll
pop
scas
and
dec
test
dec
loopne
mov
fdivl
mov
test
bnd
scas
sbb
push
mov
push
jo
jne
dec
or
cmp
dec
rcl
xchg
inc
test
lea
addb
stos
clc
lods
pop
add
std
mov
pop
mov
ljmp
mov
clc
js,pt
enter
in
aam
xchg
dec
mov
movd
aaa
cmp
mul
xor
popl
out
cltd
jne
mov
xchg
sub
scas
pop
rolb
lds
mov
mov
jle
inc
sbb
mov
das
fmull
ss
vmread
mov
and
jmp
flds
inc
xchg
mov
gs
jl
aad
mov
or
cmp
repnz
repnz
out
or
sbb
dec
sbb
xlat
dec
jg
xchg
mov
ret
in
push
arpl
call
fmull
and
repz
push
jle
sub
insb
mov
pop
pushf
and
test
cmp
xor
pop
xor
pushf
in
sub
repz
mov
dec
imul
inc
lret
mov
lods
jmp
xchg
lret
pop
fdivrl
orb
ds
inc
in
les
sbb
fdivrl
test
lret
dec
jl
cli
xchg
mov
mov
andb
sarb
aad
adc
xchg
sarb
cmc
push
out
jno
mov
or
ja
lret
mov
xchg
addr16
xchg
mov
adc
mov
or
in
sbb
mov
outsl
dec
in
in
or
pop
mov
pushf
push
sbb
loopne
xchg
add
scas
addr16
pop
scas
daa
xor
jmp
pop
mov
jmp
cmp
roll
push
sarb
cmpsl
mov
shrb
mov
pop
xor
adc
sub
pusha
or
call
std
insb
xchg
mov
ljmp
or
stc
push
lret
ss
inc
push
push
jo
push
divb
outsl
je
inc
pop
ss
pop
mov
add
add
xchg
xorl
mov
xor
pop
mov
fdivrs
or
jae
inc
inc
scas
mov
sub
jecxz
inc
pop
or
xchg
sbb
aas
nop
dec
or
sbb
push
dec
mov
or
jo
jecxz
add
and
adc
fiaddl
sub
or
push
adc
jmp
arpl
xor
ja
xchg
lret
sti
mov
xor
stos
out
ljmp
fwait
or
pop
mov
insl
pop
jp
inc
sub
or
inc
adc
cmp
sbb
pop
xor
aas
sub
test
aam
imul
xor
ja
mov
daa
cmp
mov
xor
mov
dec
jp
ret
xchg
mov
push
stos
test
or
sbb
pushf
pop
mov
adc
dec
cmp
test
fnsave
push
out
cltd
lahf
cmp
jecxz
out
mov
jbe
shll
pop
pop
sbb
cltd
test
shl
pop
ja
popf
cli
dec
sub
pop
inc
pushf
out
cld
inc
scas
cmc
es
pop
insl
loop
rol
dec
or
mov
or
pop
and
test
inc
or
add
shlb
in
pop
xchg
enter
dec
mov
scas
jns
stc
push
inc
js
pop
test
sbb
lcall
addr16
and
int
mov
js
sbb
pop
pop
mov
push
cld
movl
bound
lret
fiaddl
addr16
test
call
pop
cmpsb
rcrb
lcall
and
addr16
inc
push
pop
pop
scas
fiadds
sub
sub
jae
push
mov
pop
adc
mov
mov
ljmp
test
mov
inc
fwait
xor
clc
or
test
aas
nop
imul
lcall
push
out
clc
xor
xchg
sub
test
movsl
sbb
adcb
and
leave
add
lcall
xlat
data16
add
dec
movsb
or
push
pop
in
movb
ret
sbb
out
mov
mov
sbb
jnp
xor
jecxz
xor
repnz
sub
mov
icebp
ret
xor
hlt
cli
jo
mov
sbb
pop
sub
push
ja
enter
adc
dec
inc
sbb
mov
insl
cmp
inc
ficompl
scas
jmp
ficomps
clc
pop
rorl
es
push
xchg
fdivl
cwtl
xor
inc
inc
imul
lock
add
movl
adc
leave
in
inc
ss
repnz
mov
inc
push
jb
inc
pusha
xlat
push
fs
mov
mov
cmc
mov
cs
mov
gs
ret
xchg
outsb
ds
jle
inc
add
repz
jns
es
push
cmp
decb
dec
outsb
dec
push
sub
xlat
mov
inc
dec
or
jne
xchg
mov
mov
imull
push
and
cwtl
sub
out
cmp
nop
and
aas
insb
push
dec
test
sbb
mov
jg
call
out
dec
jno
hlt
or
pop
incl
cmc
jmp
mov
aam
lea
and
and
repnz
xchg
sbb
pcmpgtd
cmp
es
mov
mov
inc
adc
or
push
push
addb
pusha
inc
cwtl
mov
push
lret
aam
das
ja
dec
adc
stc
leave
mov
aad
xchg
lods
pusha
xchg
loop
repnz
icebp
lods
neg
adcb
in
add
jmp
mov
loope
xor
clc
stc
and
adcl
cmp
cmc
test
and
and
xchg
insb
dec
mov
sub
dec
xchg
arpl
push
and
or
fsubrs
test
sub
cmp
aam
faddl
jmp
insb
arpl
push
lods
push
ffree
ljmp
icebp
push
shlb
popa
jno
rcrb
dec
mov
scas
add
inc
sub
fistps
adc
adc
mov
mov
lds
xchg
sub
sarb
xor
and
mov
mov
ret
testl
fisubrl
jb
mov
out
pop
inc
push
adcl
repz
pop
fmuls
or
outsl
jnp
pop
mov
in
xor
add
pop
pop
cltd
dec
sub
test
sub
xchg
mov
sbb
mov
lock
arpl
push
loopne
popa
inc
jmp
test
lahf
jnp
mov
mov
scas
test
inc
fsubrp
fs
adc
mov
fisttpll
test
cmpsl
xor
jge
pop
push
in
jne
pop
and
xchg
imul
repz
fidivl
shlb
roll
push
gs
inc
movsb
std
mov
mov
scas
pop
mov
lds
inc
xor
jg
jne
pop
aas
pop
inc
sbb
jno
les
pusha
test
jo
inc
hlt
enter
gs
sahf
lahf
xchg
testb
and
cmp
sti
and
out
push
iret
jbe
mov
mov
clc
push
fcomps
cmpsb
jp,pn
mov
aad
add
cmc
fwait
mov
xchg
push
mov
or
inc
pushf
aas
and
arpl
ret
hlt
popa
in
shrb
and
ret
out
mov
cs
loope,pn
imul
jno
incb
inc
mov
push
ret
loope
cs
adc
call
mov
stos
push
nop
sub
into
mov
sub
cmp
in
daa
add
outsl
rcr
sbbb
scas
add
xor
mov
sbb
mov
cmp
jbe
ljmp
mov
data16
mov
lret
push
push
mov
adc
mov
lods
lahf
inc
cmp
sub
enter
cmp
xchg
and
push
and
pop
mov
sahf
or
sbb
adc
and
cmp
adcl
adc
mov
popa
jns
mov
fdivrs
mov
bound
mov
mov
lcall
ds
test
lret
push
rorb
xor
push
pop
and
mul
dec
jb
test
dec
dec
cltd
js
pusha
es
add
das
repz
adc
pop
and
movsb
in
mov
mov
incb
xor
orl
std
adc
data16
mov
sbb
fidivl
shrl
imul
cmc
xchg
adc
in
mov
cld
bound
push
scas
or
jle
movsl
jmp
sub
stc
jge
adc
rorb
ja
bound
jb
and
pusha
nop
pop
jp
xor
add
mov
add
sahf
jne
pop
sub
aas
jp
pushw
and
test
lock
dec
cltd
imul
pop
fdivrp
jne
xchg
outsb
mov
push
imul
and
addb
int3
jg,pt
push
mov
mov
push
mov
mov
imul
xor
bound
cmp
jg
shr
dec
xor
mov
imull
js
lret
xor
mov
cmp
divb
or
shll
cmp
mov
add
fdiv
mov
push
in
xor
sub
pusha
ficoml
push
pop
adc
inc
push
adc
or
daa
in
push
xchg
clc
mov
xlat
scas
std
call
push
jns
out
shl
or
outsb
mov
or
ret
mov
push
inc
inc
dec
xor
or
push
push
sub
inc
adc
cmp
cmp
sub
in
or
out
cld
jnp
sub
ret
and
xor
fcmovne
pop
aas
mov
jge
mov
push
lock
dec
int3
lret
cmp
bound
sbb
push
jp
popf
push
mov
cli
cmp
cmp
jle
mov
push
test
rolb
mov
loopne
fmull
mov
xor
and
stc
imul
scas
loop
subl
lods
hlt
sbb
inc
subl
mov
int
out
mov
fwait
cmp
mov
pop
cmp
ret
test
sbb
lcall
xor
adc
imul
pop
or
insl
js
xchg
gs
repz
xchg
sub
mov
add
xchg
jbe
add
mov
scas
daa
sub
dec
rcrb
loopne
loop
dec
js
push
das
fsubrp
outsl
ret
xchg
icebp
hlt
jp
mov
jnp
insb
push
ds
fimuls
sbb
aam
dec
fstpt
jl
mov
test
sbb
enter
lcall
cwtl
ja
int
mulb
lsl
inc
and
test
jge
repnz
outsb
aas
xchg
cmc
fmuls
out
jmp
mull
jmp
and
std
call
int
pop
xchg
enter
popa
scas
mov
daa
hlt
sbb
adc
xor
cmp
insb
or
xchg
flds
ficoms
push
pop
cmp
mov
adc
ds
popa
dec
out
mov
aaa
mov
xor
sahf
mov
mov
xorl
movsb
push
test
lret
or
or
mov
jl
dec
push
nop
leave
out
xchg
mov
pushl
pop
cltd
cld
push
in
adc
in
xchg
test
add
sahf
cmc
les
sbb
xlat
fdivs
and
xlat
or
jnp
sub
mov
mov
mov
mov
lahf
mov
push
jmp
jbe
mov
sub
jecxz
dec
not
imul
push
xor
std
sbb
xorb
mov
push
mov
mov
loop
inc
lea
jmp
fstpt
mov
sbb
sahf
mov
dec
bound
adcl
xor
inc
pop
aam
cld
lret
mov
pop
rorl
adc
addr16
adc
cmp
adc
lret
mov
or
repnz
and
movsb
inc
hlt
int
out
sarb
sti
sbb
xchg
xor
aam
or
adc
mov
cmp
sub
or
dec
mov
add
push
stos
cs
lahf
push
cmp
inc
mov
push
popf
mov
push
out
movd
or
or
mov
adc
fs
incl
mov
jns
adc
inc
push
inc
dec
inc
std
sbb
pop
sbb
es
nop
and
aaa
sub
pop
xchg
and
pushf
pop
stos
mov
scas
or
pop
jo
clc
pop
jno
ret
or
sub
xchg
fdivrs
divl
testl
dec
jne
xlat
adc
xchg
mov
loopne
sub
mov
mov
outsb
fcoml
mov
cmp
push
cld
loopne
jle
xor
sbb
out
aam
xchg
leave
xor
cmp
scas
out
stos
es
ljmp
sti
in
stc
mov
in
jp
jecxz
insl
std
jp
xchg
add
gs
imul
mov
xor
cmp
into
imul
loope,pn
push
pushl
push
gs
and
jmp
xchg
mov
enter
in
daa
fwait
inc
or
lds
inc
lods
and
nop
outsl
cwtl
xchg
mov
pop
icebp
add
and
inc
hlt
ljmp
pop
xor
aad
sub
dec
sar
cli
and
sub
fcomps
mov
mov
mov
pop
into
mov
pop
mov
pop
arpl
inc
push
cmp
push
pop
sbb
lods
xchg
jge
adc
into
loop
addr16
push
shrl
mov
cli
lret
jmp
xchg
cmp
push
push
xor
fdivrl
and
aaa
jle
ljmp
cmp
ret
stos
fwait
dec
cmp
rcrl
dec
iret
cmp
roll
pop
xchg
pop
jecxz
inc
int
hlt
cmc
aam
sub
push
push
scas
movl
mov
jg
mov
xchg
mov
push
in
mov
scas
mov
repnz
mov
push
cmovbe
insb
movsl
pop
pop
cmovl
in
cmp
out
dec
mov
sar
adc
sub
sbb
loopne
scas
out
shrb
jecxz
arpl
jo
lods
sub
inc
inc
leave
mov
xchg
xor
adc
push
out
mov
sbb
sbb
jg
loop
stc
cmp
or
push
jg
pop
xchg
sub
fnstsw
and
sbb
mov
or
mov
enter
push
in
mov
sub
imul
leave
xchg
in
cmp
add
jecxz
mov
das
xchg
dec
flds
addr16
sbb
icebp
inc
pop
mov
mov
mov
mov
fs
hlt
push
dec
xchg
xchg
ds
dec
mov
or
xchg
sub
add
dec
insb
sub
sub
mull
jmp
pop
in
mov
pop
into
lock
lret
mov
stos
rcrb
movsb
clc
iret
test
mov
jno
or
and
lcall
mov
mov
repnz
adc
ficoml
sbb
sub
mov
push
jo
adc
cs
adc
rcrb
call
mov
xchg
daa
adc
push
ret
jp
and
sbb
jno
sub
jns
push
insb
loope
icebp
pop
cli
pop
mov
outsb
stos
dec
jnp
mov
sbb
ja
mov
mov
mov
insb
pusha
mov
sbb
dec
leave
add
in
push
and
fildl
and
test
or
and
cmp
and
pop
imul
std
cmpsb
add
push
inc
mov
popa
popf
xchg
insl
jae
inc
jne
xchg
cltd
les
mov
jg
movb
push
ret
dec
mov
pop
push
in
push
sti
xchg
mov
fdivr
adc
jecxz
jno
addr16
pmuludq
dec
and
add
push
aas
and
lahf
or
inc
cwtl
test
dec
out
icebp
ljmp
sbb
xchg
in
push
jno
in
dec
cmp
lods
popf
or
out
into
jnp
je
and
cmc
sbb
call
test
cld
and
push
fbld
inc
cmp
lahf
aas
popa
adcb
stos
aas
repnz
ljmp
std
xchg
sub
adc
sbb
insl
mov
cs
scas
or
rep
lret
mov
decb
mov
mov
ret
in
iret
ss
or
xor
adc
push
shl
mov
ret
inc
or
loop
mov
ud0
push
add
je
xchg
inc
push
sbb
es
pusha
jecxz
into
repz
xor
push
inc
test
sar
insl
push
cmp
lahf
lock
xchg
mov
mov
sub
ret
mov
cmp
cli
pop
repnz
mov
fisubs
cmp
and
pop
mov
mov
dec
mov
fcmovu
jae
movsb
cmp
mov
adc
in
add
pop
mov
setle
jno
dec
mov
xor
loopne,pt
cs
push
dec
cmp
repnz
call
lret
mov
shlb
sbb
jl
mov
xor
cmp
jne
push
jae
enter
push
pushf
xor
jno
pop
jne
stc
es
add
in
sub
xchg
ljmp
ds
js
mov
mov
xor
mov
sub
cltd
mov
xor
mov
shrl
inc
arpl
lods
pop
cmp
movsl
leave
inc
xchg
mov
mov
mov
ficompl
ljmp
add
add
pop
xchg
aas
imul
dec
aam
test
std
sub
jl
mov
arpl
test
orl
dec
xor
xchg
mov
xchg
shll
int3
inc
into
xchg
adc
ja
mov
dec
mov
leave
bnd
bound
int
mov
lret
lock
sbb
xor
dec
mov
ja
shlb
push
cmc
inc
int3
sarb
lea
jb
imul
pop
add
test
xchg
xlat
les
mov
dec
aas
loopne
into
jecxz
lret
out
popf
xchg
hlt
cmp
shlb
adc
cmp
xchg
xor
inc
jne
ret
pop
fs
dec
xorb
ret
jge
pop
mov
adc
loopw
dec
sub
fsubrs
negl
and
mov
sub
les
test
fnstsw
inc
nop
out
loopne
aam
or
insl
pop
adc
test
mov
popf
ret
int
fs
pop
add
jae
mov
cmp
mov
dec
inc
mov
outsb
leave
ficompl
movsl
add
mov
xchg
popa
jno
shl
adc
xor
mov
jns
daa
cmp
daa
push
mov
lods
adc
pop
jns
lahf
mov
jmp
cmp
adc
outsl
lods
es
out
rclb
mov
cwtl
daa
fs
xchg
std
sbb
adc
lods
dec
pushf
xchg
cmp
and
sub
sbb
mov
sbb
sub
fimull
jne
out
mov
mov
stc
in
cltd
inc
dec
leave
pop
aam
adc
outsl
ret
mov
fucomp
pop
cld
mov
js
andb
xchg
in
add
movsl
jmp
inc
mov
push
pop
cltd
popa
xor
pop
and
mov
inc
sbb
les
and
movl
jmp
fiadds
fs
mov
xor
push
shll
out
sbb
leave
mov
jnp
scas
lds
lods
enter
inc
mov
es
mov
or
pop
adc
and
jb
lods
adc
notl
push
sub
xchg
lret
jns
push
ss
cmp
outsl
mov
sub
mov
popa
pop
ficoms
outsl
pushf
adc
and
popf
adc
adcl
add
adc
mov
js
leave
xor
mov
pusha
inc
inc
pop
jne
cmp
add
pop
push
in
icebp
popf
or
mov
iret
rolb
mov
lret
pop
dec
scas
dec
inc
mov
insl
ja
add
pop
or
movsl
shrb
bound
cmp
pop
xchg
jg
dec
xchg
xor
mov
lret
and
lds
cmpsb
test
jae
adc
xor
ret
inc
jecxz
or
popf
pop
lret
lret
or
sbb
leave
and
aad
inc
xlat
imul
xchg
mov
das
rcrl
divb
push
loope
mov
outsb
imul
and
mov
add
xor
push
test
sbb
push
cmpsb
xor
pop
iret
rcl
xchg
cltd
pop
addr16
int
push
fnsave
mov
dec
loop
stc
aas
pop
ds
and
or
stos
push
cmp
xchg
and
and
aad
and
outsl
mov
aaa
fucom
rcrl
push
jl
push
lcall
xchg
cmc
insb
xor
xchg
scas
in
clc
dec
push
push
fwait
stc
dec
into
or
ss
add
mov
ds
and
fildll
pop
or
cmp
popa
sub
or
fiaddl
pop
and
pop
aad
nop
or
push
scas
push
xchg
aaa
dec
sti
and
lods
mov
xor
cmc
nop
out
push
in
adc
cmp
push
push
fst
leave
mov
icebp
cmc
push
insb
mov
cli
cwtl
adc
jp
mov
inc
dec
enter
inc
imul
test
sbb
addr16
xchg
mov
adc
cmc
xor
pushf
popf
lahf
inc
fstpt
dec
aad
or
push
out
js
cwtl
cli
add
dec
inc
test
push
inc
inc
shll
in
xchg
mov
shlb
divl
int3
icebp
outsb
fmull
dec
dec
js
push
mov
push
fisubs
pop
out
ss
fsubs
addr16
pop
pop
in
les
pop
mov
add
or
in
int
mov
pop
push
mov
faddl
xchg
sub
ss
imul
mov
pop
cs
iret
movsb
sbb
mov
cmp
lea
cld
jle
or
dec
lcall
sub
movsb
test
pusha
enter
mov
sub
aas
jg
rcrb
gs
jae
leave
push
test
shrl
add
dec
icebp
sbb
pop
iret
jecxz
out
ja
stos
inc
add
xchg
pushl
mov
push
add
push
lret
rcrl
xlat
ja
repnz
dec
fldl
dec
dec
jg
js
inc
jecxz
xchg
rdpmc
cmc
jge
cmpsl
inc
mov
cmpsb
lds
movsl
lahf
ud0
xchg
data16
push
int
mov
cli
mov
xchg
and
push
mov
push
idivl
popf
aas
pop
fwait
sti
push
jle
add
or
xchg
sar
dec
sahf
rorb
push
outsl
add
call
subl
xor
mov
aas
xor
add
sbb
icebp
ljmp
mov
stos
xchg
sbb
and
and
call
movsb
xchg
push
outsl
sub
out
xor
cld
and
stc
scas
lods
adc
outsl
gs
test
aam
sbb
cmp
les
out
outsb
push
cmp
pop
xchg
mov
lea
jae
jnp
mov
push
and
cmpl
mov
dec
out
push
out
pop
stos
fisubrs
add
outsb
and
icebp
clc
loop
cmpsb
mov
rcrb
jmp
mov
push
or
icebp
std
sbb
lea
test
sbb
lods
ret
push
scas
and
sti
mov
filds
add
test
stos
ficoms
lds
jge
nop
in
lods
addr16
clc
xchg
int
lahf
cmp
mov
rorl
inc
mov
jo
int3
lds
xor
sbb
cmp
mov
mov
xchg
inc
fcomps
dec
lods
jecxz
push
in
pop
bound
into
movb
push
cld
xchg
adcl
add
mov
cmp
dec
add
xor
arpl
loop
pop
addr16
pop
pop
mov
push
cmp
aas
mov
ljmp
pop
es
into
mov
mov
xor
pop
fcmovb
loop
ljmp
cmp
mov
into
call
push
xchg
sub
int
jg
mov
test
xor
clc
xor
arpl
loopne
sbb
sbb
jno
mov
cwtl
jle
lock
xchg
xor
and
cmp
out
adc
cmp
negb
sbb
cmp
or
jp
fisubs
inc
xor
lahf
mov
push
loopne
sbb
and
in
sbb
outsb
nopl
push
mov
push
sbb
jle
out
das
dec
ret
xchg
pusha
js
or
dec
jmp
pop
movsl
andl
pop
and
cmp
inc
loope
and
mov
add
test
leave
int
test
sub
pop
rol
push
icebp
cmp
ljmp
cs
lcall
adcb
cltd
sarb
rcrl
mov
cmp
pusha
popa
insb
push
lds
cwtl
lret
mov
cwtl
push
fimull
out
and
mov
icebp
mov
subl
sarb
inc
dec
repz
icebp
dec
cmpsb
xchg
stos
aad
dec
fnstenv
jae
mov
in
dec
add
adc
sub
cmpsl
outsl
fld1
push
mov
mov
mov
pusha
loope
test
mov
push
ret
decl
or
je
shll
loope
out
lods
xor
xor
adc
test
loopne
mull
int3
push
xor
sbbb
mov
jb
lahf
aas
dec
repz
cmc
nop
xor
inc
adc
sbb
jbe
sbb
mov
and
loopne
add
mov
pop
sub
fnstsw
arpl
xchg
and
aad
jo
mov
int
inc
fnstsw
xchg
ja
in
xchg
sbb
dec
add
cmp
add
das
test
jmp
bswap
mov
out
jg
xchg
sti
xor
fstl
dec
mov
in
mov
cmp
mov
inc
andl
or
fmul
fisttpll
and
sbb
out
sahf
pop
pop
imul
inc
cmp
mov
ss
into
in
xchg
jo
lods
mov
mov
mov
add
dec
pop
dec
cmpsl
dec
out
add
xor
mov
add
lods
xor
adc
lods
mov
addl
pop
in
mov
inc
adc
adc
xchg
mov
push
scas
loope
outsb
pop
inc
push
mov
sub
mov
in
dec
lret
xchg
push
jg
xchg
int
repnz
lcall
sbb
cmp
fldz
pop
mov
mov
push
jmp
sub
dec
icebp
xchg
lret
xchg
mov
xchg
cmc
test
cwtl
shlb
aam
int
mov
out
mov
in
popa
imul
inc
pushl
jns
mov
dec
scas
push
shlb
lds
push
push
and
out
je
hlt
in
loopne
pusha
jmp
mov
out
lods
subl
mov
pop
mov
js
cld
out
pop
xchg
adc
adc
pop
or
pusha
cmp
xchg
inc
sbb
inc
test
stc
les
stc
test
xor
push
jo
lret
sahf
negl
out
push
mov
adc
jg
fs
jge
sub
adc
fisttps
ss
cmpsl
fnsave
jns
cmovle
lret
sbb
sub
xchg
sub
pop
sub
lods
sub
adc
mov
sbb
pop
inc
sbb
push
push
pop
imul
out
and
adc
pop
out
pop
xor
mov
add
mov
pop
pop
sbb
mov
sub
jbe
dec
dec
outsb
mov
icebp
arpl
int
mov
cmp
jns
inc
mov
ret
shlb
sub
mov
sbb
loopne
lock
xlat
push
and
lahf
inc
outsl
jns
jo
and
lret
wrmsr
iret
mov
mov
sbb
loope
cmp
cwtl
xchg
ja
mov
aaa
cmp
outsb
lods
add
into
adc
dec
loope
cmp
dec
mov
pop
ret
in
pop
sbb
mov
mov
mov
push
call
mov
ror
inc
jg
sbb
push
pushf
cmpsl
or
mov
pop
xor
in
cmc
mov
cmp
sub
test
push
ret
jne
add
adcl
roll
jmp
xor
push
ret
xor
jnp
mov
pop
leave
test
imul
mov
lret
add
add
dec
jl
pop
xchg
mov
mov
cmpsl
mov
sbb
nop
leave
sbb
clc
cmp
or
cmpsb
sub
push
sub
lods
or
hlt
cld
aaa
jns
cmpsb
cwtl
enter
cmpsl
insb
in
inc
sbb
ja
push
mov
lock
mov
roll
repnz
ja
add
lods
ds
mov
xlat
mov
lret
arpl
adcl
jp
or
and
pop
cmp
out
mov
xlat
or
and
add
pop
add
jg
mov
testl
or
std
push
inc
fwait
push
decl
cltd
push
or
push
out
and
pop
push
movsb
insl
mov
sarl
ljmp
sbbl
jle
dec
scas
dec
jae
lret
inc
lods
pop
negb
push
aas
cmp
cltd
cmc
bound
mov
rcrl
iret
cmp
adc
hlt
mov
cmpsb
push
pop
jo
mov
push
or
mov
fs
aam
lahf
clc
sahf
pop
pop
jbe
mov
cmc
mov
and
cmp
lods
add
aas
adc
loop
inc
jb
or
enter
mov
fbld
push
or
adc
insl
mov
or
gs
aaa
jns
loopne
in
xchg
mov
or
mov
cs
nop
or
int3
xlat
xchg
lds
iret
roll
and
pop
sbb
imul
sub
sbb
je
adc
clc
xor
in
jmp
js
pop
lret
inc
mov
sbb
rcll
mov
jno
adc
loopne
xchg
jle
arpl
in
mov
inc
int3
int3
jb
sub
sti
push
les
in
push
lcall
pop
sbb
sub
hlt
rolb
push
fdivl
das
fldt
add
arpl
push
jg
cli
lods
aas
aad
pop
pop
xchg
popf
cmp
sbb
mov
add
add
xchg
push
dec
adc
push
mov
or
repz
pop
pop
add
dec
or
testl
sahf
push
push
lock
add
sub
imul
dec
adc
mull
push
sahf
fwait
int3
scas
lret
dec
lcall
aas
jmp
outsb
mov
std
xlat
lods
and
push
mov
jp
mov
fs
addb
cli
add
shrb
mov
testb
sbb
js
fmuls
imul
add
stos
lea
pop
mov
xor
pop
cli
sub
pusha
jo
loop
fiadds
pop
aad
mov
test
mov
bound
lret
mov
in
ret
sti
hlt
std
pop
push
mov
sbb
or
mov
inc
push
xor
fisttps
dec
int3
movsb
pop
pop
stos
js
jecxz
std
lods
lea
pop
sub
lds
ja
pop
pop
lds
ret
or
add
das
fisubrl
push
movsl
cwtl
jae
mov
cs
jne
cmp
mov
mov
imul
add
inc
mov
jbe
clc
out
jl
mov
cmp
mov
imul
push
jecxz
clc
inc
or
push
out
dec
cld
inc
pushl
leave
cld
sub
cmpsb
and
mov
lods
ss
lds
xchg
sub
jno
adc
add
test
inc
xor
aad
arpl
inc
arpl
pop
dec
jbe
or
inc
cmpsb
out
sti
sar
add
fisubs
fldt
test
aam
sbb
pop
mov
out
lahf
mov
shrb
jl
sub
imul
inc
lret
add
mov
jnp
mov
lcall
loopne
or
aad
cwtl
popf
inc
mov
pusha
repnz
ljmp
push
lds
xor
es
cmpsb
or
int3
ljmp
mov
daa
lods
xchg
fwait
stos
xor
and
inc
sbb
jno
dec
dec
popa
pop
xor
sarb
xor
arpl
nop
aaa
push
fldt
cld
cli
or
or
sub
pop
or
xchg
addb
shr
dec
push
mov
xor
into
xchg
push
mov
or
xor
cwtl
dec
fcompl
stos
not
mov
data16
jo
mov
dec
sub
mov
xor
add
fisttpll
mov
mov
hlt
mov
pop
insb
hlt
out
pusha
imul
sub
aad
sub
add
scas
push
pop
leave
and
push
fisttpl
dec
test
pop
mov
xor
cmp
add
add
icebp
out
out
sbb
push
sub
xchg
sar
push
ss
push
sbb
cmp
sub
out
test
dec
lret
insb
xchg
cmpb
dec
add
outsb
dec
inc
xchg
push
jp
mov
add
sub
push
scas
mov
xchg
es
push
jno
mov
mov
in
test
push
scas
out
inc
or
lret
jns
cmp
gs
hlt
xchg
xor
in
sub
xchg
out
mov
out
movb
mov
in
and
call
jae
push
mov
jp
into
or
push
aam
jb
dec
jns
pop
adc
pop
pop
adc
xor
push
testl
fidivrs
or
sti
mov
sahf
mov
dec
add
loopne
mov
jne
sbb
inc
cld
inc
jp
shrb
jno
mov
mov
add
mov
cmp
lds
cmp
fisubrs
daa
lea
int
repnz
psubsb
inc
cmpsl
sbb
mov
jnp
mov
imul
popa
mov
dec
lahf
negl
xchg
call
stos
push
pop
lahf
xor
leave
pop
cmpsb
lock
add
xchg
jae
add
jmp
sarb
cwtl
and
xchg
cltd
mov
inc
pop
sub
xor
call
or
mov
imul
cs
xor
xchg
xorl
push
test
ss
add
into
jecxz
ja
push
fsubr
mov
les
push
filds
sub
pop
ret
sbb
jo
mov
movsl
cmp
jno
in
dec
fnsave
or
stos
xor
mov
cmc
push
dec
jmp
sahf
movsl
daa
xor
add
int3
jb
cli
ss
and
sub
jge
sbb
push
clc
loopne
bswap
inc
clc
xlat
test
and
push
movsb
popa
in
repnz
nop
mov
ret
and
rcl
cmc
lods
mull
cli
sub
in
insb
rorb
hlt
rorl
jmp
add
rorb
or
jge
test
xchg
iret
pop
repnz
mov
mov
aas
jmp
loop
sub
mov
jmp
fwait
ret
jno
ja
mov
adc
loopne
jle
mov
push
cmp
push
mov
ret
popa
pop
cltd
inc
dec
push
dec
lahf
outsb
xchg
sbb
add
and
push
lret
push
jl
stos
dec
sub
add
movsl
sbb
push
lods
xchg
in
das
cmp
sub
aad
pop
xchg
xchg
flds
out
or
and
and
xchg
scas
or
aas
jp
and
out
push
popa
mov
push
in
outsl
cwtl
xchg
pop
stos
mov
push
outsl
test
int
push
add
loopne
jb
jnp
out
fiaddl
shlb
es
sbbl
inc
pop
mov
dec
std
xor
inc
sub
xor
push
sbb
stc
or
loop
inc
fmul
ror
sti
fadds
dec
add
push
mov
mov
jns
fs
mov
iret
pop
hlt
add
push
daa
adc
cld
mov
js
lret
xchg
mov
rcll
jl
loope
push
rorl
sub
dec
test
xchg
dec
mov
xchg
sub
sub
xor
xor
pop
xchg
je
lcall
ret
push
adc
ds
jbe
jl
loop
add
out
or
shll
and
shll
jmp
int3
int3
push
push
jne
cmp
xchg
xchg
lret
aaa
aam
dec
pop
sbb
das
cmpl
mov
mov
es
inc
and
inc
mov
arpl
sti
cmp
and
jg
push
dec
int
inc
int3
scas
call
push
dec
pop
cmc
cmp
sub
outsl
push
xor
pop
ucomiss
in
mov
and
lds
ffree
and
negb
sbb
add
divl
setno
fisubl
ja
ljmp
jge
fwait
push
jne
decb
dec
mov
mov
fwait
mov
lock
or
push
xor
pop
hlt
mov
cmp
sbb
push
dec
movsb
adc
add
xor
push
inc
cmp
shrb
aad
jb
mov
data16
cmp
xchg
mov
jecxz
loopne
std
sbb
cmp
dec
inc
and
imul
sbbl
sbb
jmp
push
bound
test
cmpsb
andb
int
pop
test
insb
popa
lret
cltd
xor
jno
ja
jmp
imull
push
xchg
dec
sarl
cli
stos
adc
adc
faddl
andb
jb
sti
or
jnp
xchg
mov
add
xchg
in
or
mov
in
add
push
xor
and
dec
jo
in
xor
jae
sti
inc
dec
stos
lock
cmp
sub
movsb
mov
out
push
mov
jle
xchg
xchg
push
shll
xchg
aaa
je
jns
in
jne
int3
cmpsl
and
mov
insb
add
hlt
or
xor
jae
dec
or
test
push
nop
jne
mulb
call
xlat
outsb
loope
ficoml
aad
xlat
lret
js
or
lock
cmp
sbb
aad
cmp
mov
mov
stc
mov
dec
xor
test
jne
loopne
add
inc
jge
mov
and
xchg
or
cmpsl
xor
ja
pop
jae
push
in
outsl
sub
fidivs
pop
into
ret
push
fidivl
or
dec
jo
add
jecxz
xor
iret
and
scas
out
fsubs
xchg
adc
dec
out
sub
and
pop
add
jg
outsb
das
sub
cmp
sti
xchg
xchg
imul
lret
inc
inc
push
aam
sbb
mov
inc
mov
or
andl
mov
dec
gs
or
bound
cwtl
sub
mov
and
mov
fsubrs
aaa
add
dec
xchg
cld
into
dec
pop
fnstsw
inc
rol
xor
orb
in
pop
cmp
mov
jbe
push
add
pop
mov
subb
dec
adc
in
iret
pushf
sarl
jo
jmp
je
sbb
test
arpl
jge
dec
das
dec
push
shrb
dec
xor
cmp
cmp
push
xlat
jb
mov
adc
or
insl
enter
gs
mov
stos
sub
xchg
mov
negb
mov
jg
pop
inc
cmpsl
mov
mov
pop
sbb
out
in
out
and
or
test
stos
jb
test
pop
test
mov
int
add
xchg
fiadds
dec
or
andl
cmpsb
stos
jbe
leave
in
push
add
fisttps
lret
iret
out
fimull
aam
mov
orb
jno
pop
cs
stos
ret
or
mov
jno
xchg
cld
xchg
dec
xor
jge
mov
pop
stc
aaa
nop
push
jae
in
popa
aad
add
and
popa
push
dec
ret
pop
jmp
push
mov
and
jge
imul
inc
std
push
cld
xchg
int3
test
inc
xor
xor
ret
popf
mov
mov
inc
push
add
into
mov
add
insw
lds
sub
lret
ffree
popa
in
sub
mov
out
call
mov
and
push
add
xor
int3
sub
test
pop
mov
addr16
push
push
dec
and
shll
out
mov
aas
ljmp
mov
lret
insb
fsubrl
xchg
cmpsb
mov
adc
sbb
pop
cmp
jp
sbb
stos
pushf
insb
xor
xchg
js
bound
mov
dec
sub
mov
leave
push
out
jmp
and
cmp
and
or
push
inc
ret
mov
mov
sbb
daa
das
lods
test
pop
cmp
dec
andl
cmp
inc
pop
fidivl
test
in
loope
cmpsb
pop
subb
std
push
sub
xchg
jo
push
xor
sub
mov
pop
push
sti
fstl
loop
push
dec
mov
sbb
add
mov
insl
adc
negl
push
test
mov
test
dec
inc
roll
pop
and
fwait
inc
add
sahf
popa
es
fsubl
rcll
xchg
add
sub
hlt
aam
lods
repnz
mov
mov
sti
mov
iret
lock
rorl
xchg
fsubl
adc
jne
loopne,pn
pushf
test
or
rep
aaa
push
iret
rcll
push
cmp
or
inc
sub
out
testb
clc
mov
shlb
addl
stos
insb
sbb
pop
jp
add
cmp
outsl
out
int
xchg
insb
ja
loop,pn
mov
fsubrs
xchg
js
jno
add
jecxz,pn
addr16
xchg
mov
mov
rol
and
fcoms
add
out
pop
xlat
test
movsb
or
das
int
and
arpl
das
cmp
fmuls
cmp
ss
adc
insb
push
rorb
pusha
pop
lret
add
mov
ja
fsubs
sahf
push
popa
stos
addb
jl
mov
lahf
leave
dec
test
jae
inc
cltd
mov
push
outsb
pop
pop
ret
dec
lea
lahf
jae
mov
xchg
call
pop
and
push
push
or
add
fs
xchg
push
les
sub
sub
data16
idiv
int3
push
adcb
stos
or
into
cli
lods
pop
lcall
inc
xchg
in
cltd
dec
out
test
lods
mov
lret
inc
xor
lods
cld
sub
mov
popa
xchg
aad
inc
sub
mov
dec
mov
repnz
inc
fldt
pop
push
shll
fiaddl
cwtl
loope
rcll
push
mov
jl
dec
xchg
jle
pop
jle
push
push
stos
sub
lock
cmp
xchg
mov
stos
cltd
movsl
imul
jg
loope
popa
xchg
cmp
loopne
aas
es
push
test
push
pop
xchg
jnp
sti
xor
nop
rclb
push
lea
call
repnz
insl
mov
or
into
and
ds
insl
ljmp
mov
and
push
les
xchg
mov
push
loope
or
inc
xchg
lret
jno
xor
imul
sbb
pause
sub
lahf
popa
out
lcall
bound
sbb
push
je
outsb
out
add
push
frstor
aaa
movsl
dec
fistpll
adc
mov
push
sti
sub
sub
cwtl
push
add
pushf
loop
loope
rcl
adc
mov
test
rclb
test
je
bnd
lret
insl
jl
in
arpl
xchg
call
pop
push
sub
cmp
sbb
lock
daa
cmpsb
mov
pop
pop
xor
cltd
int
notl
lods
and
enter
fdivl
mov
call
pop
mov
xchg
imul
aaa
push
fs
add
lret
jae
push
jmp
and
js
fst
in
mull
je
xchg
push
xchg
jne
add
sbb
test
push
mov
aad
xchg
jge
push
sub
and
inc
test
or
cs
xchg
lea
xchg
out
push
mul
push
jb
or
fmul
outsb
daa
inc
jp
cs
jne
mov
push
mov
fsubrl
out
in
gs
pop
cltd
loope
add
repnz
ficoml
adc
mov
xchg
sbb
or
cltd
sbb
xor
aad
das
sbb
pushf
pop
add
jnp
loop
dec
jne
int3
lcall
lret
push
sbb
push
dec
and
and
clc
mov
out
xchg
sub
dec
movsb
or
mov
enter
xchg
sarb
leave
dec
lcall
call
pop
insl
mov
inc
cmpsl
fdivrs
dec
mov
int3
jno
test
pop
je
fldenv
jmp
push
adcl
xchg
repnz
push
dec
repz
add
imul
mov
pusha
pop
into
dec
scas
aaa
mov
int
stc
jnp
lods
jge
das
aaa
arpl
iret
add
jecxz
cmp
and
adc
mov
mov
in
out
and
sub
arpl
insl
lods
and
dec
mov
xor
push
jecxz
cmp
cmp
sub
in
cmpsb
loope
dec
jno
mov
cltd
sti
fldenv
dec
aam
push
sbb
jo
into
fcomp
adc
mov
aad
inc
jg
mov
sub
jecxz
imul
pop
xchg
stos
aaa
movsl
ds
pusha
repz
mov
cmp
push
aas
data16
jbe
add
sbb
addr16
mov
iret
or
sbb
cmp
xlat
jb
out
filds
pop
arpl
cwtl
arpl
insb
out
test
ljmp
sahf
push
stos
aad
mov
xor
shr
add
les
xchg
adc
pop
gs
sbb
ljmp
push
push
or
iret
mov
jnp
dec
jl
jno
mov
mov
ljmp
dec
iret
leave
adc
les
jg
or
insb
in
adc
sub
push
sti
xchg
jno
sarl
lods
fwait
ds
pop
jge
in
mov
adc
push
and
negl
ror
shlb
js
inc
jns
or
pop
push
test
push
and
push
push
out
dec
jp
sbb
divb
stos
imul
adc
scas
mov
jnp
push
jae
rol
or
cmp
hlt
pop
pop
adc
jo
std
ret
orl
lods
sar
add
pop
cltd
jp
jns
stos
push
pop
mov
jb
xor
mov
mov
xor
pop
pop
pushf
loopne
jmp
int
mov
or
pop
or
mov
stc
out
push
jno
push
cli
sbb
pop
mov
int3
popa
std
scas
mov
mov
push
int3
sarl
scas
mov
lret
outsb
addr16
sub
pop
shlb
aad
negl
push
int
mov
and
sub
push
xchg
dec
int3
cmc
adc
mov
fidivl
mov
xor
sti
pop
jge
or
xor
push
xor
popa
mov
idivb
outsb
cmpsb
inc
pushl
jecxz
mov
cmpsl
jle
cmp
xchg
data16
int
lods
inc
jecxz
mov
fdivl
add
icebp
mov
push
mov
sub
adc
and
cld
orb
call
repnz
das
xor
cmpsl
mov
ds
dec
cmp
pop
mov
jge
push
sub
lock
cmpl
jle
cmp
imul
jbe
push
add
hlt
jg
addb
test
int3
xchg
dec
lret
in
inc
xchg
shll
pop
mov
cwtl
std
shrl
lahf
les
push
ror
push
ficomps
add
ds
adc
nop
xor
les
cmpsl
pop
mov
add
test
in
movd
xor
xor
in
adc
or
xor
fstpt
or
aad
lret
xchg
fs
dec
sub
pusha
jne
mov
mov
cs
push
lds
mov
jo
mov
fldcw
xchg
loope
push
dec
adc
orl
sub
xchg
add
pop
fmulp
lret
sbb
dec
add
ret
cmp
and
test
mov
movsb
jge
fiaddl
les
sbb
or
in
ja
xchg
pusha
jmp
pop
in
shll
or
push
sbb
enter
movsl
ret
sub
out
xchg
stos
xor
test
push
shlb
sahf
and
rol
inc
add
bound
push
gs
loop
iret
inc
popa
mov
xor
inc
jecxz
popf
inc
into
imul
mov
dec
ret
lahf
ljmp
in
jmp
loop
jnp
cmpsl
cld
jmp
pop
icebp
xchg
fisttps
pop
jge
clc
xchg
push
mov
fiaddl
loop
aad
fwait
enter
aad
jmp
fwait
or
or
test
mov
sar
loopne
sbb
pop
cmc
stos
popa
cmp
out
insl
cmp
sbb
push
sub
int3
or
dec
insl
rorl
negb
cwtl
jecxz
popa
cli
mov
nop
push
call
push
test
jmp
adc
jo
mov
sub
xor
mov
clc
pop
popf
push
sti
cmp
push
mov
pop
push
ja
xchg
ja
push
ljmp
adc
sbb
push
daa
inc
out
push
sar
mov
add
hlt
adc
cli
pop
xchg
xchg
push
mov
or
mov
fnstenv
adc
nop
testb
sub
pop
cmp
ret
xor
and
fcmovu
and
decl
movsb
jae
das
lock
xchg
cmp
clc
xorb
adc
adc
xor
push
push
cmp
lods
adc
dec
dec
sarl
sbb
cmc
in
scas
dec
leave
and
ror
cmpsb
gs
stc
test
xchg
mov
mov
nop
sahf
mov
sub
enter
and
mov
jecxz
insl
outsl
push
out
test
arpl
sbb
push
mov
dec
enter
cmp
mov
jl
into
push
or
inc
rcrb
pop
xrelease
scas
sbb
orl
gs
sbb
out
scas
icebp
aaa
push
mov
inc
inc
dec
data16
mov
fistpll
imul
and
test
cmpsb
mov
xchg
int
pop
sub
repnz
sbb
fsubrs
add
add
imul
jle
mov
sarb
stos
cmp
and
aas
popa
inc
fdivp
jno
test
call
sub
mov
sahf
data16
mov
gs
sbb
xor
test
int
dec
mov
popf
lahf
mov
dec
xchg
ss
sub
push
imul
mov
inc
dec
jns
imul
shlb
testb
bound
push
outsl
jno
mov
push
arpl
test
popa
adc
adc
xchg
outsl
xor
bound
es
push
push
mov
sub
cltd
inc
jg
mov
add
or
push
push
jo
ljmp
xorl
adc
mov
mov
lock
ss
pusha
pop
loop
iret
in
add
bound
push
xchg
xchg
dec
mov
mov
fcomp
ss
and
push
popa
mov
sub
rorl
iret
and
icebp
imul
inc
test
lods
or
in
mov
repnz
pop
outsb
add
or
mov
push
mov
ret
ret
and
push
pop
jae
mov
sbb
scas
inc
xchg
jbe
loope
fmul
bound
je
mov
bound
int3
xchg
lcall
sbb
push
imul
and
xchg
and
adc
ljmp
mov
xchg
or
subl
cmp
test
dec
sub
mov
lcall
jno
jmp
ret
popf
mov
sahf
clc
repz
mov
add
push
inc
jl
cmp
dec
cld
mov
in
xchg
pushl
outsb
icebp
jae
pop
pop
test
ljmp
and
ss
adc
fwait
mov
pop
sbb
popf
pop
and
inc
loopne
inc
das
test
push
sbb
out
je
xorl
jle
mov
addr16
testl
push
in
and
jle
fidivl
xchg
movsl
mov
cmovbe
xor
ret
mov
mov
std
test
daa
outsb
pop
out
pop
into
cmc
and
and
shlb
mov
push
dec
xor
xor
cld
leave
pop
dec
sbb
es
jno
adc
mov
mov
icebp
xor
in
leave
pop
inc
popa
sbb
xor
jecxz
cld
xchg
sbb
sbb
arpl
in
xchg
xchg
pop
dec
cli
incl
decl
inc
inc
inc
mov
pop
mov
cli
jge
push
out
sarl
pmullw
mov
mov
jnp
jae
test
pop
pop
adc
xchg
pusha
imul
rolb
cmpsl
mov
icebp
out
mov
or
aad
xchg
inc
cmp
imul
sub
shlb
mov
push
leave
lods
or
fisubrl
repz
dec
mov
in
popf
imul
mov
jno
jl
mov
dec
inc
adcb
or
sbb
aas
lods
dec
and
enter
and
inc
fcmovnbe
mov
cmp
imul
test
or
jnp
ss
and
push
aas
cmc
dec
inc
lods
or
jb
sti
xchg
push
mov
jg
lea
or
mov
jbe
in
jo
fistps
dec
or
in
imul
insl
int3
mov
daa
pop
jmp
xor
push
jno
fwait
lea
or
pop
xor
dec
xor
cli
cwtl
fidivs
clc
test
mov
test
jg
mov
cwtl
sbb
shrb
loopne
ret
adc
call
outsb
repnz
add
cli
int3
decb
outsl
jge
rorl
mov
xor
pop
jns
aad
push
mov
dec
mov
mov
adc
add
shrl
sbb
or
mov
lods
std
fcoms
pop
or
out
imulb
pop
sub
xchg
sbb
push
push
sbb
fisubs
fstl
mov
xor
cwtl
mov
insb
add
enter
mov
sub
hlt
les
add
aam
mov
mov
add
popf
pop
into
xor
or
mov
push
rorl
call
cmp
pop
popa
sbb
push
jp
sbbl
movsb
in
cmp
ss
insb
fcompl
cmpsb
in
xor
push
test
push
fsubrs
inc
fdivs
cld
push
lock
jo
es
dec
jle
and
out
push
bound
dec
lret
out
mov
addr16
rcll
or
mov
popa
mov
mov
sahf
push
mov
push
inc
xchg
xchg
lods
lea
xor
push
jmp
add
cmp
inc
iret
pop
pmaxsw
dec
mov
js
fistps
dec
mov
push
ret
and
xor
inc
imulb
xor
push
mov
and
test
lahf
add
jns
test
xor
test
ljmp
xchg
ds
or
inc
lods
sbb
mov
call
adc
dec
ror
iret
pushf
leave
jns
mov
jb
lret
lds
lods
fndisi(8087
cmp
mov
divb
sbb
pop
mov
repnz
jmp
clc
dec
pop
sbb
xchg
add
sub
sbb
pop
mov
gs
popf
imul
dec
pop
loope
outsl
sbb
repz
mov
xchg
add
lock
push
cmp
mov
pusha
or
mov
fs
cmpsl
adc
rclb
out
cmp
subl
jmp
bound
lret
mov
xchg
repz
push
adc
and
pop
arpl
movb
in
mov
test
loope
in
xchg
int
ss
xchg
push
inc
aas
std
fsubr
push
push
mov
ficoms
add
inc
push
adc
sub
push
mov
inc
aam
add
adc
sub
je
repz
test
cmp
fildll
dec
cmp
jnp
xor
in
mov
test
pop
mov
data16
flds
pushf
and
xor
pusha
push
pop
lret
dec
clc
scas
cltd
pop
dec
test
push
lds
scas
sbb
mov
mov
xchg
jl
enter
hlt
sub
clc
das
out
dec
mov
enter
cld
pop
xor
push
mov
add
loope
outsl
test
rorl
pop
pop
push
or
je
pusha
and
pop
pop
clc
mov
mov
lcall
pop
in
ret
jl
jns
negb
test
jg
and
sub
aaa
test
aad
into
test
pop
es
aaa
push
mov
inc
stos
jl
mov
cmp
adc
es
outsl
fisubl
cli
or
test
mulb
mov
sbb
mov
mov
xlat
jno
adc
insb
rcrb
mov
outsl
xchg
xchg
int
les
jno
mov
insb
add
adc
jecxz
push
out
xchg
sub
sbb
or
dec
icebp
aaa
hlt
imul
rsm
xchg
sbb
cmpsl
and
sbb
addr16
and
jg
movsb
addr16
sbb
imul
adc
or
fdivrl
cmpsl
mov
dec
sbb
pop
inc
push
xor
sub
cwtl
lret
mov
jmp
mov
inc
fwait
std
rcrb
pusha
icebp
inc
inc
jmp
dec
insl
push
bound
pop
inc
xor
sbb
cltd
ljmp
test
int
xor
xchg
arpl
mov
pop
js
popa
mov
and
adc
mov
fsubrs
jl
inc
mov
sub
push
es
out
fdivr
repz
mov
jg
test
sbb
push
lods
ljmp
cli
icebp
dec
aaa
cli
mov
loopne
jl
loop
and
out
push
dec
jp
mov
out
bound
and
or
cmp
jne
in
add
mov
test
pop
cmp
inc
jo
out
add
inc
pop
push
mov
insl
jne
enter
jb
xor
dec
int
or
sbb
shrl
out
cmc
daa
and
mov
xor
mov
pop
and
or
mov
imul
aam
sbb
rcrl
dec
rcrb
xor
gs
jb
std
and
sub
shl
push
push
test
pop
jg
mov
push
mov
mov
adc
fsubrl
js
pop
pop
add
fiadds
add
push
push
test
xor
gs
nop
sub
dec
ljmp
xchg
cmc
ss
or
mov
icebp
and
pop
xchg
jp
fisubrs
mov
hlt
aas
dec
sbb
adc
inc
sbb
add
ljmp
bound
dec
sbb
jmp
leave
decb
pushf
arpl
jge
or
stos
mov
xchg
inc
out
fneni(8087
mov
int3
jp
ret
push
xor
repz
sub
rcll
sbb
sar
lret
gs
gs
std
jne
mov
movsl
mov
gs
out
jne
mov
xor
aas
dec
xor
xchg
pop
jns
jne
ds
cli
outsb
mov
jecxz
cmp
daa
hlt
pop
pop
jg
pop
or
sbb
cmp
test
push
inc
cltd
mov
test
sti
pusha
mov
cltd
adc
leave
test
sbb
xchg
mov
sub
xchg
or
cmp
cmp
cmp
dec
lods
ljmp
in
dec
xchg
push
pop
lahf
pop
adc
lods
add
pop
inc
adc
cmpsb
outsb
enter
test
bound
into
fdivp
push
in
clc
mov
sbb
mov
dec
adc
imul
insb
testb
testb
sahf
xchg
shrl
and
lock
ds
cmc
mov
push
jmp
push
out
jae
adc
jne
xor
addr16
lret
aas
mov
lahf
cmp
mov
imul
dec
xorl
jne
fimull
fldl
cmp
xor
int3
sarb
mov
mov
dec
leave
mov
and
add
add
jne
iret
jl
shll
popf
mov
lahf
cmpsb
sbb
jnp
stc
ret
dec
into
outsl
push
aad
outsb
shr
lcall
nop
insb
mov
ror
stos
lcall
and
clc
add
jge
and
mov
clc
popf
jnp
add
mov
pusha
fistpl
pop
inc
shlb
icebp
dec
sub
arpl
and
xor
aas
xchg
add
clc
rorb
jg
outsb
andl
int
shll
adc
inc
mov
mov
xor
ret
lods
imul
in
push
push
jno
xor
repz
pop
loope
psubd
push
stc
jne
pop
ss
popa
icebp
jbe
lea
insb
out
loopne
or
xchg
out
pop
enter
ja
dec
xchg
cld
add
xor
xor
jo
push
pop
dec
jecxz
es
jge
jns
cwtl
ds
imul
xor
mov
enter
xor
mov
jl
cmpsl
jg
sahf
mov
int
les
xchg
out
inc
ja
movsb
mov
fs
mov
jl
push
stos
mov
pop
dec
nop
inc
es
or
and
aad
dec
pop
xchg
add
jo
push
sti
jae
dec
push
jge
imulb
icebp
bound
incb
jl
jl
mov
addr16
mov
cli
pop
leave
mov
nop
leave
pop
jl
xor
ficoml
or
lods
mov
or
inc
cli
mov
movsl
mov
mov
movb
ret
xor
pop
aad
xchg
jmp
pushf
shlb
xor
jne
ljmp
jg
int3
push
dec
imul
stos
adc
popa
jae
fwait
or
rcrl
jge
enter
and
out
test
sub
xchg
inc
aam
sbb
es
add
mov
les
push
cmp
aaa
add
mov
jl
dec
fsubrs
int
daa
repz
pop
jno
or
test
inc
subl
fists
imul
aaa
lods
scas
jb
and
xchg
xor
xor
mov
mov
mov
je
pop
orl
mov
das
push
cmpsb
in
and
adc
jle
add
add
mov
subl
adc
dec
xchg
fistps
xor
adc
cmpl
or
mov
add
xchg
out
mov
and
mov
test
or
fs
xor
fwait
aas
add
popf
leave
int3
jnp
in
xlat
lods
sub
aad
sbb
mov
or
inc
jp
rol
dec
adc
push
dec
pop
or
sub
mov
xchg
mov
push
nop
xchg
add
cwtl
ds
test
outsl
and
sti
adc
add
cltd
xor
movsb
sahf
cmpb
mov
test
mov
std
popa
cmp
sub
stos
out
mov
jb
mov
jle
xchg
lret
mov
jno
mov
push
jno
addb
xchg
jo
mov
mov
testb
jg
in
insb
jnp
xchg
aaa
test
lahf
hlt
pop
fisubrs
call
lods
inc
clc
cmp
mul
sbb
inc
mov
xlat
or
ljmp
lcall
add
mov
or
std
dec
mov
cmc
xchg
aad
out
fisttpl
roll
mov
xchg
lea
or
xor
ret
rorb
ss
adc
jns
int
and
cmp
inc
push
incl
jecxz
loopne
inc
add
cmp
pop
lahf
adc
push
pop
mov
mulb
jno
out
xor
sahf
mov
add
xchg
jmp
add
mov
rolb
jge
sbb
cmp
bound
call
add
popf
pushl
mov
inc
dec
imul
movsl
pop
inc
notl
push
mov
movsb
xor
push
push
pusha
aam
dec
lret
ds
test
mov
divb
sub
mov
pop
jge
sbb
or
cmpsb
adc
sarl
xchg
cwtl
jecxz
negl
xchg
popa
into
mov
cmp
imul
lret
jmp
push
hlt
out
add
stos
jge
inc
sbbb
rorl
outsl
insl
shlb
addr16
adc
adc
pop
and
aad
xchg
sbbl
lds
cmp
sahf
or
mov
into
pop
or
ds
xlat
es
inc
xor
test
or
enter
fists
lahf
movsl
notb
jnp
adc
push
cmpsl
xchg
fidivrs
push
cmp
rolb
jo
push
lahf
mov
pop
dec
sbb
mov
loopne
jns
cmp
shrb
mov
cmp
xchg
xchg
pop
daa
movsb
xor
es
sub
repz
cmpl
testb
stos
inc
loope
clc
jae
pop
mov
test
int
jae
sub
lret
or
pusha
and
fs
push
sbb
pushf
outsl
movlps
mov
push
xchg
dec
aam
imul
popa
notl
dec
push
cltd
cmpsb
insl
out
sub
cmp
hlt
inc
out
sub
lods
lds
cmc
mov
add
mov
push
jnp
popa
aas
aas
sar
or
inc
pop
cltd
insb
aam
mov
ret
dec
scas
cli
inc
out
out
jne
pop
dec
xchg
stos
cli
mov
pop
or
cwtl
xchg
sub
push
jecxz
xchg
and
or
test
xchg
inc
fwait
xlat
push
cmpsb
mov
sbbb
mov
fdivrs
cmp
setge
push
mov
add
rolb
aas
add
std
rorb
adc
sbb
mov
mov
xchg
mov
dec
cltd
mov
pop
push
and
enter
into
mov
leave
insl
push
hlt
jb
jno
push
in
add
rcrl
cmp
or
popf
mov
push
and
sub
inc
inc
dec
xchg
jb
sbb
hlt
jle
sbb
sub
lahf
std
xchg
cmp
inc
aas
xor
dec
add
movsl
ds
add
les
cmpsl
xor
and
jbe
cmp
jl
incl
cmp
in
cmp
addr16
or
mov
jecxz
sub
sahf
in
ret
mov
daa
in
mov
cmp
lds
sbb
gs
sub
mov
and
or
adc
andl
lret
fidivs
mov
scas
nop
dec
lds
pop
adc
arpl
test
sbb
imul
int3
loope
movsl
into
cmp
mov
data16
add
jb
dec
pop
lea
mov
fnstenv
outsl
nop
push
add
mov
adc
and
nop
scas
cmp
cmpsl
dec
mov
dec
mov
adc
mov
addl
js
mov
inc
push
dec
lods
lds
out
aas
mov
outsb
jnp
cmc
pop
sarl
pop
sub
mov
lea
lds
adc
xchg
daa
sub
and
jge
adc
stc
xor
pop
dec
mov
lds
mov
aaa
dec
imul
loop
adc
cmpsl
adc
add
xchg
pop
inc
xor
aam
fwait
je
pusha
xchg
fldl
xchg
sub
icebp
jl
inc
popf
adcl
lret
adc
in
xchg
mov
inc
push
jae
sbb
adc
inc
cmp
add
sbb
scas
sub
cwtl
dec
shlb
sub
fstpt
into
lret
pop
xor
adc
push
adc
pop
nop
ds
in
pushf
inc
push
cmp
sub
loope
sub
xchg
push
dec
xor
cmp
loop
and
adc
and
dec
fld
or
adc
sub
cltd
jno
popa
inc
int3
mov
mov
push
mov
rcll
in
push
lods
testl
cmc
test
mov
cmpsl
push
jge
sbb
test
push
mov
push
jmp
sub
adc
cmpl
mov
push
mov
cltd
out
jae
xchg
int
ffree
popa
and
jmp
adc
xchg
fmull
jge
xor
fmull
mov
cmp
das
in
std
xchg
adc
fxch
push
cmp
jo
mov
fs
mov
adc
es
mov
and
iret
test
dec
jle
imul
sbb
movsb
repz
dec
and
ret
inc
xchg
mov
push
out
mov
mov
frstor
jno
std
adc
test
jne
jp
push
and
iret
lcall
pushl
mov
cmpsl
movsl
jne
sarl
cmp
repnz
int3
fsubs
add
pop
sahf
sarb
pop
aam
shlb
scas
mov
xchg
cltd
dec
push
sub
stc
cli
in
outsb
mov
fdivp
adc
daa
lea
popa
mov
outsl
xlat
sbb
ds
call
and
fldlg2
cmpb
mov
or
mov
mov
xor
dec
cmp
test
cltd
jne
les
xchg
out
test
and
adcl
xchg
jo
jg
pop
notb
lret
mov
fildll
mov
push
inc
mov
lcall
imul
dec
push
jge
inc
mov
andb
sbb
mov
mov
daa
jg
or
je
nop
stos
je
daa
lods
insl
dec
xchg
push
adc
fisubl
jecxz
aam
loope
xchg
faddl
stc
mov
push
addb
xor
test
jo
fsubs
call
inc
push
jg
inc
adc
sbb
loope
pop
cmpsb
inc
pop
mov
and
nop
hlt
and
jp
and
dec
lret
pop
shlb
mov
xor
pop
xchg
int
add
jl
imul
xorb
call
xchg
mov
adc
ret
xchg
idivb
sbb
je
cmp
push
fwait
pop
jmp
push
push
jmp
jo
jne
push
mov
push
fsubrp
rcl
stc
pusha
mov
sub
mov
cmpsl
outsb
xor
lret
mov
ja
imul
mov
mov
cli
mov
sbb
inc
sbb
sub
fldenv
mov
cs
int3
mov
add
iret
ficoms
cmp
or
movsb
sub
scas
jle
add
decl
mov
popf
popa
out
sub
cmp
fs
push
cmpsb
out
xor
sbb
add
dec
or
mov
jp
int3
sbb
adc
fcomip
fcompl
add
scas
in
mov
cmpsb
adc
xor
in
daa
in
popw
je
xchg
or
xchg
push
xchg
add
stos
pusha
sbb
dec
cmp
pushf
xchg
icebp
mov
sub
vzeroall
mov
dec
movsb
mov
lods
mov
lret
mov
push
popw
inc
test
std
cmp
in
add
pop
in
pop
fdivrp
adc
and
cs
ret
lret
dec
push
xchg
out
orb
lahf
imul
or
jb
ja
inc
xor
xchg
fistl
inc
ret
jns
mov
dec
out
push
add
lret
sti
neg
mov
add
push
mov
stos
mov
dec
ja
decl
jae
cmp
cli
xchg
dec
inc
mov
cmp
and
inc
pop
rsm
jo
shlb
fldt
push
cwtl
pusha
insl
xchg
or
and
mov
adc
enter
iret
mov
aaa
fdivl
test
and
cmp
xorb
adc
push
mov
jecxz
das
sub
mov
lret
mov
bound
fwait
pop
sarl
pop
decb
fs
sbbb
xor
jns
mov
ret
adc
xchg
js
inc
mov
es
xchg
jne
arpl
and
bound
adc
cltd
cmp
adc
pop
imul
push
sub
test
shlb
pop
cmpb
mov
cmc
jge
adc
xchg
fstpl
push
push
test
stos
dec
mov
jmp
dec
int
movsb
inc
xor
push
push
scas
mov
outsb
xchg
fistpl
sbb
cmpsb
mov
xor
data16
mov
inc
jb
cmpsl
fldl
xchg
add
dec
call
sahf
out
jge
xchg
mov
ret
clc
xchg
sarb
iret
fldcw
ljmp
xchg
stos
inc
loop
push
pop
xchg
cmp
inc
movl
adc
cwtl
bnd
jecxz
mov
pop
sub
pop
dec
lret
mov
fisttpl
jb
xorb
pop
jbe
fwait
ja
mov
test
movsl
loope
shl
call
xor
fs
mov
pop
insb
sbb
mov
xchg
aam
jo
clc
pop
test
stc
mov
lea
int
cmpsl
dec
mov
xor
and
lahf
add
mov
lods
psubusb
cwtl
sub
shlb
movsb
xchg
xchg
push
dec
push
loop
mov
stos
pop
or
inc
mov
out
lods
sbb
insb
and
insl
dec
xchg
and
mov
leave
test
and
in
cs
jge
sub
mov
arpl
adc
or
fbstp
loopne
arpl
dec
push
push
sub
inc
mov
dec
fildl
mov
shll
andl
lods
sbb
pop
mov
jnp
mov
xor
movsl
insb
push
cs
sub
add
sbb
and
pop
sub
cmp
mov
fs
ret
inc
leave
xchg
pop
jbe
jge
mov
xchg
and
pop
daa
neg
sub
negb
sbb
xor
imul
cmp
dec
mov
repz
and
xchg
xor
addr16
adc
mov
xor
jbe
push
fwait
movsb
jnp
icebp
jns
add
cmpl
jbe
mov
popa
cmpsb
pop
pop
js
imul
stos
adc
jecxz
aad
iret
or
mov
shr
cld
imul
ficoml
call
pop
shlb
dec
test
data16
js
notb
add
imul
xor
xchg
mov
icebp
sub
mov
pusha
dec
adc
mov
jge
xchg
popa
imul
xorl
add
stos
sbb
xchg
mov
mov
push
bound
fmul
rcl
push
pop
sub
jg
data16
out
mov
sub
push
push
fadds
cltd
scas
and
push
xchg
sub
decb
dec
push
cld
adcb
push
lds
and
jl
shll
out
or
call
hlt
jne
gs
xor
repnz
adc
fs
std
repz
inc
lret
mov
test
cmp
repz
mov
xchg
mov
cli
lods
jmp
scas
fdivs
or
push
or
call
jno
mov
mov
ds
cld
cli
aam
push
inc
adc
xor
and
mov
int
push
fsts
inc
mov
jge
movl
mov
mov
xor
add
xchg
push
mov
pop
aad
cmp
jge
sub
adc
repnz
and
xchg
lea
mov
push
sub
dec
push
mov
push
xorb
cmpsl
push
lahf
ret
repnz
add
cmpl
out
pop
daa
lods
cmp
popa
movsl
rorl
cmpsb
sbb
sub
cmp
imul
insl
imul
mov
sub
iret
lds
jmp
aaa
pop
cmp
in
jnp
mov
int
push
xor
in
adc
dec
dec
arpl
xor
xchg
subl
xchg
in
cmp
or
adc
sahf
ret
adc
bound
add
pusha
out
fs
hlt
out
lds
xor
dec
push
xchg
cmpsb
xor
or
ret
and
in
mov
and
int
xor
push
mov
stos
push
mov
lods
fidivl
lcall
fwait
iret
lea
xor
add
pop
mov
pushf
cli
aad
mov
xlat
mov
xchg
out
pop
adc
scas
sub
jle
pusha
cmp
push
sbb
and
pop
mov
test
repz
lds
mov
pop
xor
pop
aad
adcb
dec
fidivrl
mov
iret
inc
je
cmp
and
jo
outsl
sub
cmc
loopne
inc
sti
sbb
push
in
jp
mov
mov
jp
cmp
add
dec
jnp
cmp
lcall
mov
daa
testb
xchg
add
pushf
sub
arpl
mov
fiaddl
sbb
shlb
test
aad
xlat
xchg
add
sahf
stos
aas
push
mov
pop
int
cmp
out
jp
add
pop
xchg
lret
dec
push
outsb
cmpsl
xlat
arpl
fistpll
fadds
dec
mov
xchg
inc
test
and
in
pushf
lods
icebp
jnp
pop
xchg
mov
mov
call
dec
jecxz
repnz
xor
mov
mov
arpl
aaa
adc
bound
aas
mov
fcmovne
xchg
xchg
xchg
pop
scas
mov
cmp
adc
cmp
call
push
jnp
lea
mov
fcoms
mov
mov
ror
mov
mov
add
lods
mov
ja
adc
sub
dec
xchg
arpl
xchg
out
dec
cltd
fdivrl
sub
notb
fs
mov
cmc
mov
mov
scas
sub
lahf
xchg
jo
mov
jecxz
jmp
push
pop
xchg
cltd
mov
repnz
pop
add
sbb
std
aaa
cmp
movsb
pop
negl
aaa
push
push
dec
xchg
mov
addl
rcll
jle
es
mov
fcoms
mov
sbb
xchg
lods
packssdw
mov
push
jne
lret
sbb
sbb
jp
sub
rolb
adc
hlt
adc
mov
test
subb
cmpsb
jge
adc
andb
rorb
jp
pop
clc
cs
or
pop
and
sub
and
out
out
xchg
lret
inc
inc
mov
iret
lret
inc
jl
push
movsb
fs
jl
call
or
lahf
aaa
or
arpl
adc
jle
rcl
and
lret
repz
jge
or
aad
mov
je
imul
loop
stos
aaa
jns
add
cmp
xor
xorl
pop
int3
or
mov
cli
jb
movsb
loop
popa
cltd
xchg
rorb
xchg
mov
and
pop
jnp
data16
adc
jl
push
aas
xor
rcrb
mov
cmpsb
insb
iret
mov
shl
mov
and
lods
orl
sub
pop
pop
decb
fistpl
inc
push
movsb
movsl
inc
jns
clc
fisubs
aaa
mov
xor
pop
mov
fnstenv
hlt
xchg
jg
es
sti
iret
or
pop
daa
mov
fwait
push
jno
or
stos
and
or
mov
cmp
xchg
movsl
or
int
pop
sti
jmp
out
mov
mov
imulb
mov
add
inc
mov
mov
xlat
cmpsb
push
int
and
xor
jbe
scas
inc
mov
push
mov
addr16
pop
mov
aam
psubusw
ret
leave
lret
cmpsb
mov
fsubr
scas
lods
aad
stc
push
xchg
popf
mov
iret
loopne
mov
xor
repnz
test
shlb
sbb
daa
sbb
add
mov
movsb
clc
or
mov
pop
jns
jne
int
jo
daa
mov
lret
popa
idivb
push
and
xor
xchg
out
adc
add
scas
stc
imul
and
push
scas
add
sub
sbb
inc
inc
cltd
andl
jmp
push
xchg
mov
cmp
dec
cmpsl
and
and
jl
mov
pop
hlt
orb
xchg
aas
pop
xlat
loope
sub
mov
dec
cmp
mov
repz
xchg
push
mov
xchg
xchg
pop
lods
jbe
sbb
dec
xlat
xor
frstor
sahf
pop
lret
popa
sbb
sbb
outsb
loope
push
lods
add
add
push
push
gs
xor
adc
push
mov
jbe
mov
imul
sbb
mov
xor
hlt
inc
jbe
sbbl
pop
fimull
or
adc
adc
inc
adcl
pop
adc
add
pop
mov
dec
clc
xor
ss
mov
add
cwtl
shrl
shrl
addr16
jo
adc
mov
adc
pop
adc
sbb
pop
andb
xor
xchg
mov
pop
jb
fidivl
mov
pushf
stos
pop
sub
jge
and
lcall
pusha
mov
icebp
jo
pushf
test
repnz
cmc
pushf
incl
inc
jns
xchg
sti
sbb
mov
pop
stos
scas
xchg
popa
sbb
aas
jmp
push
ror
mov
test
data16
and
lret
cmp
std
std
add
sbbl
and
dec
lret
xchg
and
mov
or
push
inc
aam
push
jmp
aaa
fs
rorl
aaa
out
xchg
mov
repz
fildll
mov
js
jge
xor
push
test
and
or
sub
pop
mov
mov
mov
mov
xor
fidivrl
rcll
mov
mov
leave
push
sarl
or
jg
add
and
in
xlat
arpl
cmp
daa
mov
sub
ret
jno
aas
in
lods
test
mov
aaa
add
out
stc
pop
outsb
stc
xchg
fdivr
xchg
xor
test
add
repz
lock
add
xor
ljmp
and
inc
inc
aaa
minps
inc
out
add
add
inc
push
mov
jg
dec
adc
or
or
or
loope
mov
adc
adc
inc
or
std
popf
scas
lcall
shlb
push
addr16
sbb
fmuls
or
pop
dec
push
mov
xor
movsb
daa
clc
push
pushf
push
cmpl
dec
and
xor
imul
jl
bound
arpl
cwtl
movsb
movsb
fcompl
pop
and
mov
mov
and
loope
xchg
addl
imul
nop
enter
mov
mov
mov
sub
add
enter
mov
repz
sub
sub
inc
sarb
mov
push
mov
mov
cmc
aaa
cmp
cmc
and
fs
dec
mulb
inc
test
push
mov
jbe
incb
xor
push
sti
inc
sub
jg
cmpsl
lock
out
mov
je
enter
sbb
xor
stc
push
ja
call
iret
cli
xchg
lock
test
sbb
sub
ret
jecxz
pop
xor
outsb
cmp
pop
addr16
jbe
and
jl
jns
pop
push
add
sub
cmpsl
clc
xchg
cmp
jg
iret
push
ret
je
push
inc
in
test
das
inc
addr16
jp
mov
cs
iret
fs
cltd
outsl
cmp
in
lods
ljmpw
xor
xor
push
inc
insl
and
mov
dec
jl
sub
xchg
sbb
outsb
lods
add
cwtl
or
scas
test
add
pop
dec
stos
pop
add
jnp
mov
mov
xchg
sub
sbb
xchg
ljmp
scas
aas
sarl
cld
xor
jmp
jbe
test
imul
loope,pn
iret
mov
lret
mov
push
sub
cltd
adcl
mov
roll
jnp
xchg
cmpb
int
cmp
or
scas
and
sbb
jecxz
call
fldt
xor
dec
jo
jno
and
push
xchg
stc
or
std
pusha
jmp
pop
daa
add
js
push
inc
bound
repz
dec
mov
outsl
mov
fisubl
pop
xchg
jae
cld
xchg
sbb
aad
mov
and
test
cltd
add
jmp
mov
lahf
xchg
out
jmp
aam
cmp
or
push
mov
in
int3
and
pop
lds
fcoml
sbb
aaa
sti
lock
cltd
mov
ret
mov
lea
xchg
or
mov
in
lret
popa
sub
or
popa
lret
push
push
xchg
sti
sbbl
inc
inc
pushl
push
jp
inc
aas
jae
icebp
gs
gs
cmpsl
push
jbe
jg
addr16
and
sub
dec
es
sub
jb
mov
rcrl
xchg
mov
lret
or
shll
dec
arpl
push
xchg
cli
testb
inc
testb
jge
dec
pop
cwtl
or
jo
stos
fninit
movsb
js
adc
jle
xor
popf
aas
notb
xchg
shll
out
mov
ljmp
push
int3
stos
push
sub
cwtl
mov
pop
mov
sbbl
cmpsb
call
push
lret
sbb
enter
push
clc
xchg
test
pop
sahf
popf
aaa
sub
or
lret
gs
mov
mov
cli
pop
mov
out
mov
sub
jl
jmp
es
fucomip
in
in
mov
inc
jge
xorb
jmp
push
jae
mov
dec
cmp
cmp
jb
pop
or
bound
clc
adc
test
push
sub
das
push
cmp
outsb
jae
aaa
and
pop
ja
mov
dec
jle
cli
repz
mov
push
mov
jecxz
jl
in
mov
mov
jle
data16
mov
pop
xchg
leave
jmp
inc
repz
adc
rcrl
cmp
xor
clc
rolb
stos
mov
dec
lahf
xor
js
imul
xchg
imul
out
mov
adc
adc
aas
lret
lods
insb
push
jle
inc
out
cmp
xor
in
xchg
push
rcll
sarb
bound
mov
outsl
js
cmp
aaa
cmp
mov
mov
test
mov
pop
fildl
les
mov
adc
cmpsl
mov
push
dec
jbe
and
jne
rcl
jmp
sahf
lods
xchg
dec
stos
or
pusha
add
je
adc
adc
dec
sub
sub
adc
out
or
sbb
hlt
and
sub
addb
add
icebp
mov
mov
std
xor
jecxz
sbb
rcl
adc
adc
pop
push
jecxz
add
gs
adc
cmp
and
pushaw
pop
add
mov
mov
inc
jae
fs
fstl
mov
stos
ret
loopne
and
les
push
or
pop
push
adc
sbb
imul
mov
mov
ss
or
je
xor
lea
xor
sub
mov
xchg
dec
stc
xor
jnp
cmp
lcall
push
pop
sbbb
dec
fistpll
and
sub
pop
xchg
dec
inc
std
jae
mov
enter
lods
ljmp
out
cmpsb
xchg
rcl
mov
enter
push
and
or
dec
sub
stos
xchg
xor
pop
pop
rorb
sbb
push
dec
clc
frstor
xchg
movsb
push
mov
add
int
shr
push
lret
or
pop
cwtl
jns
nop
mov
test
dec
push
jge
fsubl
push
push
jg
jae
and
adc
mov
test
insl
adc
or
pop
xchg
into
xor
push
add
loop
sub
mov
inc
mov
xchg
mov
cmp
dec
push
divb
and
mov
sbb
ret
add
pop
pop
test
ja
and
mov
ss
dec
cmpsb
lods
call
add
ret
mov
out
mov
popf
pop
nop
xor
repz
je
and
mov
adc
lock
sub
cwtl
sbb
dec
orb
jg
xor
outsb
and
loopne
push
ljmp
and
cmpsl
mov
xor
dec
pop
nop
jae
push
adc
bound
scas
mov
jmp
fwait
xor
icebp
cs
jns
inc
jg
es
into
dec
dec
sbb
mov
fdivs
pop
and
test
ret
sub
stc
mov
add
add
mov
rcll
fists
dec
arpl
jge
inc
xchg
add
mov
inc
mov
bound
sahf
fdivrs
ds
hlt
rclb
jp
mov
and
sbb
subb
mov
sbb
inc
cmp
sub
sbb
pop
xor
lret
and
push
inc
cltd
pop
inc
int3
cli
dec
mov
shlb
mov
jg
test
or
test
mulb
pushf
jmp
add
adc
add
and
xchg
fcmovnb
stc
incb
addr16
sbb
mov
and
outsl
out
inc
out
mov
sub
dec
movsb
call
icebp
leave
cmpsb
orb
or
jae
test
lea
xchg
pop
fnstsw
in
out
xchg
imul
outsl
stc
push
dec
jns
sar
pop
lcall
pop
dec
daa
sub
push
xchg
out
shl
jb
lret
in
push
dec
andl
iret
fimull
push
in
out
add
scas
xor
fstps
sbb
repnz
jne
push
adc
jmp
pop
mov
scas
sbb
imul
mov
add
decl
data16
mov
fdivrs
paddw
sub
pop
scas
mov
push
hlt
pop
in
cwtl
imul
jno
pop
push
pop
sti
movsb
sbb
push
loope
rcrl
push
stos
sarb
or
dec
movsb
xchg
je
sahf
and
mov
pop
mov
fisubs
push
cmp
add
xchg
loope
loop
cmp
das
sbb
mov
leave
test
and
roll
test
jnp
add
dec
outsb
out
icebp
pop
fdiv
jge
cmc
push
fimull
mov
mov
ret
movsl
mov
popf
mov
or
pusha
push
cmp
mov
mov
sub
dec
xchg
push
pop
xchg
popa
test
rol
jecxz
insl
dec
push
inc
jb
out
add
and
scas
aad
xchg
cmpsb
and
pop
xor
mov
cld
cwtl
push
mov
icebp
push
adcb
in
ds
lods
lahf
fmul
mov
enter
sbb
ret
cmp
pop
add
nop
sti
xchg
lods
jg
call
and
jno
decb
nop
sti
sbb
loop
fcmovu
pop
push
fsubrs
nop
jg
cli
adc
inc
mov
jne
jne
adc
pop
and
lcall
xor
lret
xor
test
inc
mov
je
imul
pop
ljmp
pop
iret
jne
loopne
dec
stos
mov
push
gs
dec
cmpsl
sti
sub
sbb
outsl
add
jp
xor
or
sub
ret
incl
cmp
gs
cmp
dec
out
push
adc
inc
sahf
inc
push
cwtl
cwtl
repnz
cmc
mov
mov
add
int3
fnsave
and
and
sub
ljmp
mov
imul
out
push
sbbb
xor
data16
push
decl
add
add
fidivl
or
insl
bound
and
mov
mov
dec
pop
jmp
inc
test
push
push
fucomip
adc
out
int3
mov
xchg
aas
mov
xchg
fisubs
mov
xor
xlat
mov
sarb
mov
js
loopne
je
xchg
lds
ficoml
push
lock
push
dec
add
fs
prefetch
gs
daa
fscale
mov
scas
adc
sub
les
rorb
hlt
lcall
leave
daa
jo
fwait
in
and
cld
stos
mov
jbe
scas
add
mov
sub
lds
int
jle
lea
test
xor
jb
fimuls
outsl
dec
mov
mov
and
dec
mov
scas
hlt
lods
hlt
aad
dec
data16
insl
mov
jecxz
jmp
xor
dec
adc
loope
pop
scas
mov
inc
rclb
shrb
mov
xchg
outsb
or
mov
mov
sub
push
cmp
cmp
xchg
jmp
dec
jbe
push
hlt
mov
lret
and
or
sub
ds
xchg
xor
lret
jl
jae
inc
add
fwait
cmp
push
lahf
lods
xchg
jmp
push
aam
dec
xchg
dec
dec
addl
and
and
mov
xchg
inc
or
or
jae
lods
xor
adc
loop
jne
sbb
mov
cli
adcl
mov
inc
movsl
cmp
mov
sbb
cmp
jle
call
sbb
aam
push
xchg
sub
shrl
fldl
fdivrl
int
add
repnz
clc
out
insb
pop
push
repnz
fiadds
movsl
inc
mov
adc
mov
xor
jbe
jecxz
clc
jecxz
scas
xchg
xor
xchg
cli
movsl
out
cld
fidivl
add
rolb
cmp
cmp
cwtl
call
sbb
test
cld
adc
insl
sub
ja
sti
xor
jbe
add
enter
nop
jl
lret
push
add
movsl
gs
pop
jno
jl
push
stos
clc
int3
loopne
ds
mov
cltd
sbb
xor
adc
xchg
dec
inc
dec
clc
push
sbb
lret
je
imul
xchg
xchg
hlt
mov
dec
jl
ds
cmp
mov
cmp
outsb
testl
mov
fs
xor
fs
stos
lahf
pop
cmc
in
addb
push
scas
les
nop
pop
mov
jg
add
add
popa
mov
lods
mov
mov
sahf
jnp
xchg
adc
flds
pop
fildl
adc
ret
ret
mov
insl
div
jno
and
dec
xor
dec
add
xor
cmp
insb
rcr
add
movl
push
cmp
in
or
jns
pop
int
ret
sbb
sti
or
icebp
mov
dec
fs
or
and
aaa
or
cwtl
in
push
inc
push
subb
or
pop
clc
out
jp
rolb
subb
inc
insb
push
loopne
dec
insl
dec
or
sub
out
inc
xor
sahf
in
dec
cltd
cltd
sub
les
mov
loope
sahf
fs
hlt
lahf
cmpsl
arpl
jb
xchg
les
int3
test
loopne
punpckldq
loop
pop
xchg
pop
into
mov
test
aam
enter
add
fstl
aad
jns
out
sub
stc
jns
aam
hlt
mov
mov
and
mov
and
iret
repz
in
les
hlt
in
js
dec
push
pop
les
cwtl
dec
fisttps
js
and
fwait
mov
daa
sbb
movsl
sub
mov
test
jne
sbb
cmp
popa
rcr
ds
pop
movsl
or
xor
or
sbb
in
ss
adc
fisubs
add
mov
mov
mov
bound
test
add
xlat
ss
mov
add
ds
xchg
mov
loope
sbb
int3
jge
std
cwtl
imul
push
mov
mov
xchg
add
and
pop
adc
lods
jo
jp
aas
imul
fildll
repnz
sub
mov
add
pop
lcall
lods
iret
clc
inc
jb
cmp
jns
aam
ljmp
ret
out
adc
call
mov
iret
ljmp
pusha
xchg
and
sub
dec
inc
lea
jecxz,pn
popf
sbb
jp
pop
mov
scas
rcrb
int3
orb
mov
rorb
dec
xor
mov
xor
js
and
pop
or
sub
add
sbb
add
sbb
jle
xor
hlt
fdivs
dec
inc
dec
jnp
je
push
jo
jmp
adc
popa
push
ljmp
xor
mov
mov
mov
adc
aaa
mul
xchg
aas
and
jns
push
scas
clc
cltd
repz
push
push
mov
mov
nop
fildl
les
in
push
jl
test
pop
mov
mov
aas
add
xchg
stc
js
or
imul
mov
lcall
add
inc
outsw
xchg
pop
mov
mov
xchg
data16
and
xlat
jno
inc
rorb
mov
sub
mov
inc
jmp
test
adcb
add
mov
jb
in
jae
sbb
dec
ret
cmp
cmp
sbb
cmova
cwtl
lcall
call
enter
test
movsl
jne
push
fstps
add
cld
xlat
andl
lret
pop
xor
mov
ljmp
outsl
pop
dec
push
daa
out
stos
xchg
in
xchg
sar
jae
addps
ret
push
das
mov
jecxz
pop
sub
out
dec
dec
outsl
xchg
mov
outsl
adc
movsb
and
push
sub
dec
push
rolb
adc
pop
ja
cld
pop
dec
cmc
or
daa
popa
cmp
push
ret
stc
cmpsb
movsb
out
and
in
sbb
adc
add
arpl
in
dec
fcmove
xchg
or
mov
jp
push
outsb
add
dec
add
xor
cmp
repnz
jno
mov
push
fnstsw
out
mov
adc
sbb
add
xchg
jns
cmp
scas
inc
cmpsb
cltd
cmpb
movsl
cmc
and
push
mov
mov
fdivrl
pop
aaa
inc
pusha
rcrl
js
test
cld
test
icebp
adc
push
roll
insb
adc
mov
rcll
ljmp
adc
hlt
mov
adcb
cmpsb
negb
mov
cli
fwait
mov
pop
arpl
push
cmpl
pop
cmpl
pushf
mov
pop
cmc
mov
mov
sbb
sub
dec
fwait
cmp
int3
mov
xchg
ret
cmp
movsl
std
cwtl
and
sbb
pop
test
lock
aam
mov
or
sub
int
jns
dec
mov
cmp
mov
pop
dec
xor
in
nop
subps
xchg
add
mov
call
inc
popa
mov
add
mov
xchg
clc
sub
jl
arpl
push
push
movsl
inc
dec
xor
inc
mov
xlat
les
fs
push
jecxz
dec
jo
hlt
movsb
data16
lds
sub
fwait
hlt
mov
jns
shrb
insb
data16
push
or
mov
cmp
add
iret
or
adc
inc
loop
dec
xor
or
nop
ljmp
lods
or
mov
aaa
lret
fdivr
out
gs
les
pop
push
clc
icebp
je
sub
xor
inc
sub
lahf
lds
popf
mov
and
inc
jg
pop
push
xchg
test
add
cmp
inc
cmp
cmp
adc
sub
rcll
adc
data16
push
lods
mov
pop
mov
rol
mov
pushf
jnp
sub
pusha
mov
mov
and
push
fdivrl
or
push
sub
cmp
jmp
and
pop
and
jns
or
jecxz
mov
jle
or
in
iret
sbb
jg
add
sbb
sub
int
imul
cltd
xchg
xchg
sub
mov
jnp
adc
rcrl
adc
cmp
aad
jnp
add
je
sbb
cltd
sbb
pop
jl
push
add
mov
jmp
mov
sub
dec
lds
loopne
shrb
push
cmp
inc
sar
orl
dec
push
test
mov
pop
sar
push
inc
dec
sbb
sarb
cmp
jge
cs
xor
jb
jae
mov
outsl
inc
inc
cli
int3
xor
pusha
push
imul
mov
and
fldl
fwait
mov
fs
sbb
cmc
xchg
or
sbb
add
xlat
push
std
sbb
push
fs
cmpsb
ja
add
aam
in
sti
repnz
mov
sbb
ds
hlt
dec
xor
mov
fwait
clc
pop
sub
loope
lcall
pop
sbb
adc
mov
sarb
shrl
into
fs
xor
stc
stos
sub
int3
jbe,pn
rorb
rcrl
shlb
dec
pop
lock
ret
sub
mov
jl
xor
sahf
inc
sbb
cmpsb
sbb
movsb
jbe
sub
pushf
sbb
mov
and
int3
lret
add
lock
jl
or
test
jo
or
xor
pop
jne
cmp
jnp
sti
lret
fldl
mov
fcmovnu
clc
jmp
jbe
pop
lock
jg
sti
push
mov
xchg
dec
incl
push
arpl
xchg
filds
repz
xchg
out
pop
ja
xor
iret
xchg
mov
sub
movsb
fwait
shll
fistpll
sbb
test
push
int3
lcall
shlb
pop
mov
lea
inc
jmp
loope
sub
jecxz
mov
pop
mov
cmpsl
mov
or
adc
mov
shlb
es
mov
sbb
jno
fbld
or
pop
xchg
fistpl
repnz
icebp
jle
xchg
nop
lods
jo
fsubrl
jle
mov
adc
fcomp
insb
insl
stc
xor
cmp
imul
push
push
cmc
in
and
test
push
push
push
nop
shl
ret
inc
repnz
fs
mov
movsl
bound
stos
mov
mov
stos
xlat
push
or
lret
jg
mov
mov
std
popa
push
shl
mov
push
and
lods
push
aad
lea
pop
movsb
int3
orl
or
mov
dec
inc
repnz
xlat
loope
lods
fstpl
sub
adc
cmpsl
ja
ficompl
fldcw
push
and
in
inc
fadds
pop
pop
sbb
jge
push
ja
adc
fcomps
sarl
fcmovnu
lret
hlt
xor
pop
and
int3
and
xchg
jo
repz
jno
jne
pop
xor
push
imul
jge
jle
mov
mov
xor
push
loopne
and
cmpsb
mov
stc
dec
andl
mov
push
or
adc
pop
ret
and
push
je
sub
out
aam
dec
cmp
mov
iret
fidivrl
add
push
push
pushf
lahf
mov
in
sub
adc
and
inc
cltd
pop
xorl
jne
mov
insb
mov
lcall
mov
mov
shrl
mov
scas
sbb
aam
sub
add
sti
inc
clc
lcall
cmp
shlb
adc
nopl
or
jmp
outsl
jns
cmc
icebp
mov
xchg
jl
pop
repnz
adc
js
inc
sbb
cld
push
cs
cmp
xor
inc
lret
lret
lcall
sbb
clc
aaa
inc
jne
js
hlt
in
xchg
outsl
test
in
aaa
cmc
arpl
and
hlt
push
pop
subb
pusha
es
les
xchg
mov
xchg
fcmovnu
mov
shlb
outsb
mov
lods
movsl
mov
xchg
fnstcw
pop
out
fsubs
mov
and
aas
or
int3
rcl
call
adc
mov
fdivrp
aam
dec
fcompl
mov
call
std
out
shll
mov
xchg
in
popa
int
pop
lods
push
mov
outsb
inc
jecxz
jae
pop
ss
pop
aaa
mov
or
lock
out
pop
ds
pop
fcom
std
sub
test
or
xor
bnd
jmp
xchg
jne
inc
dec
jb
fs
int
jo
aad
mov
cmc
mov
out
dec
inc
popa
jecxz
cmp
enter
cmp
cmpl
mov
mov
je
popf
or
test
add
loope
les
mov
das
lock
xchg
bnd
pop
cmp
out
adc
pop
out
ljmp
add
cmpl
fidivrl
int3
sbb
inc
stc
push
in
aam
add
outsb
sub
mov
repnz
pop
outsl
fnstsw
xor
pop
aaa
outsb
movzwl
dec
lret
call
fists
nop
xchg
sbb
repnz
inc
add
xchg
xchg
or
push
stc
mov
sbb
outsb
add
jge
lret
inc
sub
sahf
jo
lock
addr16
jno
dec
fisubrs
testb
mov
mov
sahf
xor
sub
aaa
add
inc
and
out
ljmp
push
jmp
mov
ror
mov
std
shll
movsl
jns
inc
add
cmc
cmpsb
xor
outsl
cli
xchg
mov
and
lret
xlat
stc
cmc
inc
enter
xchg
xor
sbb
add
inc
mov
and
pand
insb
pop
mov
mov
imul
cmp
inc
dec
rcll
mov
xor
cmp
fcoml
push
inc
outsb
pop
xor
mov
lock
scas
into
ss
in
push
mov
int
xchg
es
icebp
cmp
mov
and
btc
pop
in
cmpsb
or
jmp
sub
pop
mov
mov
push
push
repz
jl
adc
cli
mov
add
push
jg
cli
cmpsb
sti
fbstp
and
adc
xor
pop
movb
mov
inc
xor
stos
cmp
pop
or
mov
out
ficompl
mov
and
daa
loopne
add
repz
nopl
push
in
stos
decl
push
inc
addr16
jge
push
adc
mov
push
push
cli
mov
and
sub
or
push
rclb
sub
mov
mov
jmp
jle
pop
fs
mov
mov
sbb
fs
or
or
test
std
inc
sbb
lret
cmp
dec
sub
and
jae
push
xchg
pop
cwtl
shll
rcll
lods
xchg
fistpl
imul
mov
xchg
push
sbb
jmp
push
push
fsts
mov
and
sub
cmc
xor
jle
icebp
aad
sub
lcall
ss
enter
sbb
popf
sbb
mov
add
dec
mov
gs
cwtl
mov
sub
add
ljmp
fsubrl
and
mov
push
mov
dec
cwtl
sub
add
test
ficoml
sbb
insl
xor
and
or
jecxz
mov
push
dec
aaa
fsubr
cmpsb
xchg
inc
and
adc
add
pop
push
scas
push
cs
push
inc
in
jno
jb
dec
in
mov
stos
cmp
mov
outsb
cmp
addr16
cmp
out
add
pusha
inc
out
add
pop
cmpsl
adcb
jns,pn
mov
pop
rorb
das
jne
xchg
cmp
fdivrp
shl
sbb
push
dec
push
or
and
bnd
scas
xor
outsb
test
lods
push
hlt
dec
fstps
pop
push
mov
jnp
divb
mov
pop
push
sbb
daa
fwait
loope
mov
sarl
pop
push
push
arpl
dec
js
shlb
loop
adc
pop
pop
cmpsl
cmp
jnp
sbbl
lret
das
sub
sub
dec
int
fwait
push
adc
aad
add
rolb
cmpsl
xchg
ret
dec
clc
nop
inc
clc
mov
into
fldl
or
sar
roll
out
cmp
cmc
adc
inc
sbb
xchg
xchg
cli
cli
mov
sbb
lahf
dec
dec
test
pop
dec
push
std
sar
mov
lahf
gs
jle
xchg
jecxz
push
cmp
out
iret
repz
movsb
fdivl
imul
mov
aad
andl
mov
out
stos
loopne
es
aas
lods
lret
jb
cmp
dec
popa
stos
popa
pop
insl
sbb
std
cmp
lcall
jp
lods
es
or
add
mov
mov
jmp
cwtl
in
pop
pop
lds
sub
mul
stc
mov
out
dec
div
dec
mov
ss
test
loop
in
mov
aad
lahf
cmp
fdivrs
cli
mov
nop
inc
imul
adc
xor
or
mov
insl
stc
iret
out
add
fwait
inc
mov
cmp
inc
subb
stc
or
cmpsb
push
mov
pop
xchg
dec
dec
cld
pushf
pop
pop
and
jle
jmp
add
out
aaa
sub
outsb
movsb
rol
in
jo
lcall
adc
adc
fs
push
inc
pop
fidivs
pop
and
fsubrs
or
xchg
pop
xchg
testl
xchg
stos
pop
shrb
inc
jbe
mov
and
pop
add
js
jae
mov
jne
xchg
ds
xchg
in
ss
dec
pop
cmc
sbb
out
ret
ds
mov
test
push
or
push
mov
movsb
adc
movb
sbb
es
imulb
sbb
mov
lods
decl
sbb
xchg
sub
inc
push
push
test
out
jne
mov
add
inc
aaa
sbb
xchg
mov
insb
fildl
gs
or
dec
jge
notb
out
lds
xchg
pushf
iret
clc
cmpsl
pop
clc
cmc
jb
xlat
dec
repnz
dec
gs
jne
xchg
daa
sub
inc
mov
ja
gs
or
mov
ds
pop
push
movsl
adc
pop
outsb
imul
out
jge
mov
mov
pop
pop
xor
lcall
nop
pop
mov
add
addr16
inc
mov
bound
cwtl
jo
jmp
decl
ljmp
imul
push
or
mov
dec
clc
enter
pop
mov
test
pop
loope
xchg
push
rorb
sbb
mov
aad
jo
pop
mov
test
lock
outsb
xlat
popa
add
cmp
dec
xchg
addl
dec
pop
pop
loop
xchg
push
xor
out
add
popf
cmp
and
pop
js
dec
xchg
aas
fstl
add
xor
dec
pop
loope
mov
int3
inc
mov
inc
xor
imul
test
pop
rcll
sub
adc
les
adcb
lret
andb
push
cltd
nop
faddl
je
dec
int3
fwait
iret
xor
in
insl
int3
cmpsb
inc
fcoms
and
jae
push
xor
inc
shlb
dec
mov
sub
iret
outsb
stos
sub
enter
push
repnz
loope
jae
mov
jg
or
pop
fidivrl
mov
add
fst
cmp
stos
insl
ljmp
push
cs
hlt
cmc
cmc
in
outsb
js
adc
clc
shrb
xor
into
mov
sbb
jg
pop
movsl
mov
cmpsb
mov
xor
mov
pop
mov
fbld
mov
or
push
cmp
xor
jo
mov
fwait
cld
jo
jo
int
cwtl
icebp
gs
xor
addr16
sbbb
inc
mov
sub
out
xchg
inc
and
enter
mov
jae
loop
scas
enter
iret
shll
push
mov
cltd
xor
cmp
push
imul
arpl
divb
loope
or
cmc
out
out
movsb
jbe
or
clc
fidivl
movsl
push
int3
lods
inc
push
jne
sub
hlt
mov
popf
or
mov
mov
test
push
dec
lock
mov
xchg
sbb
int
orb
movsb
loop
jb
mov
jnp
adc
sarb
mov
push
std
add
jge
mov
cmp
in
dec
ror
pop
xlat
lret
mov
rcrb
loop
hlt
push
ret
cmp
ret
dec
mov
std
xor
stos
add
adc
xchg
mov
and
inc
xchg
xchg
xchg
clc
cmp
jge
ds
insl
mov
out
mov
mov
in
outsb
pop
mov
jl
and
insb
or
int3
scas
pop
hlt
stos
lods
push
enter
cld
stos
or
inc
push
cld
aas
and
hlt
jbe
insl
push
pushf
or
lret
cmp
iret
popa
jo
stc
int
mov
in
lret
divl
es
cld
xchg
clc
into
cmp
in
dec
dec
sub
pop
test
mov
add
mov
incl
cmpsb
fs
js
addl
pop
cmp
int3
or
cs
aam
mov
sbb
insb
inc
pop
iret
movsl
mov
or
jnp
mov
mov
mov
push
insb
xchg
xlat
out
and
fidivrs
xchg
fnsave
and
push
mov
push
push
andps
jmp
or
and
inc
pop
mov
fistpll
mov
adc
push
jl
mov
or
aam
inc
out
sbb
xchg
pop
mov
orl
loopne
xor
mov
cmp
testl
xchg
dec
cmp
sbb
out
movsl
xor
and
add
and
call
sub
sub
aad
rorl
sbb
add
inc
leave
sti
scas
dec
xor
scas
mov
std
lcall
cld
pop
or
jnp
mov
xchg
test
inc
and
cmp
jecxz
mov
cmp
insl
outsl
pop
pushf
push
and
enter
dec
mov
pop
gs
pop
pop
dec
sub
mov
jno
and
jne
ja
scas
out
xchg
orb
push
popa
movsb
addl
test
daa
in
test
jp
lock
fwait
mov
std
mov
push
rorb
sbbb
cmpsl
lret
arpl
idivl
cmp
cmpsl
sbb
mov
rclb
insl
repnz
sub
mov
gs
repz
mov
xor
fmuls
movsb
inc
mov
pushf
inc
sub
cld
ret
in
insl
cmpsb
negl
push
dec
stc
sub
dec
icebp
ja
adcl
out
push
loopne
sub
and
and
lds
mov
pop
push
mov
push
sbb
out
scas
pop
imul
cmp
fnstenv
jp
mov
mov
cmp
stos
ja
ret
xchg
imul
xor
or
jne
xchg
jns
pop
call
adc
pop
setle
sbb
test
pop
outsl
add
sbb
ds
cmp
pop
mov
cmpsb
cbtw
or
jo
daa
xor
dec
lods
mov
jae
lcall
xchg
les
push
call
xchg
adc
subl
mov
mov
pop
ja
mov
outsl
lahf
xor
mov
jge
je
xor
add
push
cmp
out
cmp
idivl
sahf
jg
iret
inc
jg
sub
dec
push
test
je
mov
js
daa
fdivrs
add
jecxz
fwait
pop
lods
xorb
in
jo
cmpsb
sbb
xchg
mov
test
jns
push
addr16
lea
test
loop
bound
je
mov
retw
flds
leave
lret
mov
xor
cld
mulb
andl
mov
xor
jnp
ficompl
adc
push
cld
cmp
add
in
jb
adc
adc
ror
xor
pop
loop
call
ret
insl
cwtl
jge
jo
addr16
pusha
pop
mov
push
int3
rolb
mov
and
push
lods
test
rorl
adc
aas
xorl
aaa
rolb
sbb
or
scas
fs
gs
cmpsb
mov
mov
push
jae
sub
jno
enter
js
cmp
adc
xor
std
jle
andb
cltd
jmp
ret
fwait
dec
sarl
push
jmp
mov
dec
mov
orl
sbbl
sar
out
fmull
inc
es
xchg
add
out
nop
push
dec
sbb
lret
lret
sbb
cltd
jo
add
xchg
aad
call
fldenv
icebp
cmp
imul
mov
mov
xchg
out
and
xlat
cmp
pop
jne
out
in
in
insl
sbb
shrl
fidivs
fcmovu
sub
sbb
std
and
jo,pn
xor
lods
dec
mov
pop
iret
imulb
lcall
rclb
in
mov
test
popf
cli
mov
mov
aaa
jge
repnz
xchg
inc
aam
shll
add
dec
cmpsb
mov
call
sbb
cmp
mov
push
cmp
xor
jae
pop
je
lock
xor
test
out
or
call
lret
sub
outsl
lcall
lods
sub
sbb
fsin
insb
jne
and
mov
mov
repnz
mov
push
mov
add
jp
pusha
mov
adc
movsb
dec
mov
add
je
test
mov
test
dec
mov
push
xor
sbb
iret
push
mov
in
add
add
and
int3
or
pop
dec
in
cs
jg
sub
xlat
push
fcomps
dec
pop
cmc
cwtl
sbb
fwait
and
lods
fisubl
adc
inc
lahf
enter
xorb
icebp
mov
and
jb
fsubs
jecxz
outsl
jae
mov
sbb
lea
lahf
frstor
test
jecxz
xchg
out
jecxz
xchg
push
and
inc
aad
push
jl
jne
mov
mov
sub
jns
repz
or
mov
add
hlt
lds
in
add
aam
add
add
push
sbb
pop
loopne
mov
mov
sub
push
cmp
adc
leave
movsb
jmp
shll
xor
mov
pop
lahf
xchg
aaa
dec
xchg
ja
inc
add
or
fsubrs
leave
push
xor
fistl
mov
ja
fisubl
lret
inc
nop
roll
push
push
adc
adc
je
scas
jg
mov
and
pushf
mov
mov
jns
cmpsb
divl
aaa
push
inc
fmull
bound
testb
imul
js
xchg
sbb
scas
imull
and
or
jns
mov
mov
pop
aad
arpl
mov
enter
mov
jg
add
mov
outsl
inc
jecxz
inc
scas
adc
pop
imul
mov
negb
mov
out
push
inc
add
cs
mov
clc
inc
jns
ret
in
cmp
das
test
inc
or
dec
or
add
mov
inc
test
lret
add
cli
lahf
mov
adc
stos
inc
xchg
pop
in
test
shlb
sti
push
in
lahf
in
jae
insl
jl
add
xchg
push
pop
xchg
lea
jle
sbb
vpminuw
push
mov
sbb
in
pop
loopne
test
stc
fisubl
lds
cmp
lock
push
xchg
xchg
xor
lret
outsl
stos
insl
push
hlt
rorl
jle
fistl
sahf
fstps
in
test
fcompl
and
xchg
add
andl
jge
orl
ds
and
addr16
xchg
and
jl
repnz
ss
cmp
inc
in
fs
adc
aam
mov
ret
sbb
cld
sbb
push
test
adc
popf
test
aad
ds
imul
jge
ss
in
fisubl
dec
adc
fwait
cld
mov
fcmovnb
xor
ja
movsl
xchg
sbb
add
inc
cmp
xor
fnsave
fildl
mov
cmp
nop
mov
bound
aad
ficompl
sbb
test
cli
pop
or
adc
fisubrs
pop
jmp
fisttps
stc
rcll
jg
push
sbbl
aad
mov
or
adc
sahf
enter
inc
and
dec
xor
cmpsl
cmp
push
jecxz
adc
jmp
sbb
mov
xchg
push
cld
in
sets
or
and
push
xchg
shll
xchg
and
les
cmp
cltd
loope
stos
lahf
movsl
xlat
push
push
mov
lods
pushf
scas
int3
xor
data16
sahf
add
sub
push
mov
cltd
sbb
ljmp
mov
inc
add
movsb
arpl
add
push
in
sbb
out
cmp
mov
cmpl
mov
gs
pop
push
pop
aad
lret
pop
fstps
hlt
movsl
mov
int
das
imul
data16
hlt
mov
inc
lret
test
mov
gs
xor
das
popf
cli
call
cmp
mov
les
stos
or
ljmp
fwait
incb
outsl
mov
jbe
lds
fs
add
lods
dec
or
les
pop
in
scas
or
call
inc
ds
out
call
jnp
cltd
loopne
fistl
and
xchg
or
xchg
das
cwtd
popa
dec
pusha
push
push
cmc
xor
popa
pop
mov
mov
dec
jl
adc
addr16
fisubrs
mov
imul
mov
or
jmp
ficomps
xorb
xchg
popl
stos
and
cmp
cli
mov
es
push
scas
in
pop
inc
pop
cltd
cwtl
or
stc
dec
sub
aas
push
sahf
mov
fnsave
mov
mull
popf
in
data16
add
gs
in
scas
sbb
sbb
cmc
mov
pop
rclb
mov
iret
ds
js
cmpsb
out
mov
loopne
xchg
ret
xor
daa
ds
or
es
insb
repz
xlat
ja
lock
fcompl
xchg
jl
mov
fcomi
jbe
xchg
nop
arpl
ljmp
mov
jnp
imul
scas
or
data16
and
ss
sub
dec
in
inc
mov
dec
mov
pop
data16
xchg
mov
mov
inc
insb
das
mulb
and
push
bound
push
pop
sub
or
fadds
xlat
cs
out
popf
pop
jno
mov
enter
icebp
icebp
add
scas
dec
sub
or
jae
aaa
sbb
sbb
cld
push
mov
add
sbb
mov
mov
clc
jle
ljmp
sub
add
insb
pop
call
cmp
mov
pop
addl
flds
push
stc
scas
ds
pop
imul
jae
add
lods
or
push
mov
cmpsb
stos
and
sbb
std
jle
pmaxub
test
ret
int3
gs
adc
mov
mulb
repz
ret
mov
mov
dec
push
call
daa
xor
mov
inc
cmpsb
cwtl
mov
pop
lds
rol
cmp
xchg
add
xchg
jp
dec
jno
push
dec
jns
mov
stos
sub
pop
cmpsl
sbbl
xor
push
mov
mov
inc
daa
sub
jb
lods
inc
in
aad
pop
into
int
xor
adc
cmp
or
xchg
mov
das
data16
add
lcall
sbb
pop
gs
mov
push
mov
cmp
enter
mulb
ret
test
pop
cmc
push
pop
test
test
push
shl
adc
movsl
push
inc
lcall
shll
rcll
add
ret
es
mov
cltd
sbb
les
sbb
push
sahf
adc
std
movsl
pop
inc
dec
jg
pop
shr
sub
inc
xchg
pop
mov
andb
adc
add
cmpsl
test
dec
loope
aam
sub
push
mov
dec
dec
sub
mov
jo
pop
xchg
fistl
lock
dec
rclb
dec
outsb
nop
adc
je
jg
dec
pushw
inc
mov
fs
push
pusha
mov
dec
adc
les
push
pop
lret
hlt
jge
sbb
cmp
jbe
pop
nop
outsl
scas
cmp
xchg
test
imul
mov
aas
repz
mov
sub
call
jno
and
or
iret
or
aas
xchg
mov
fsubrp
or
mov
mov
out
mov
roll
inc
clc
in
pushf
and
push
test
cmc
fsts
daa
mov
cmp
popa
aas
sbb
mov
scas
dec
lretw
xor
cmp
lock
mov
adc
jo
cltd
cmp
fildl
std
inc
adc
cmpsb
jmp
adc
cs
mov
out
fdivs
outsl
lea
mov
mov
xchg
sbb
cwtl
imul
cli
lret
sbb
xchg
push
sub
dec
imul
aas
push
ja
push
mov
adc
aam
lahf
dec
add
pop
int
popa
sbb
mov
lds
cmp
adc
pop
mov
loope
mov
pop
push
bound
lock
push
cmpxchg
jle
movsb
int3
mov
fcmovnbe
fisubrs
lock
inc
push
fisttpll
pop
mov
iret
and
out
mov
push
out
cmpsb
in
sub
push
shlb
jle
mov
pop
aam
pop
cwtl
cli
lods
pusha
push
xchg
je
dec
shl
ljmp
negb
addr16
stc
mov
cmp
fisubrl
aaa
lret
jmp
in
mov
mov
sbb
dec
dec
cmp
lock
stos
daa
xor
add
mov
lahf
std
xor
fistpll
test
inc
xlat
pop
cli
mov
test
movsl
cs
push
test
xor
test
mov
sbb
xor
mov
fndisi(8087
and
scas
mov
inc
push
cmp
sbb
pop
xor
pop
imulb
shlb
aaa
arpl
cwtl
repz
lock
mov
into
mov
repz
arpl
je
xor
adcb
mov
push
int
pop
das
xchg
push
fwait
mov
mov
les
push
out
push
test
out
jg
mov
xchg
lret
inc
hlt
lods
xor
add
pop
aaa
xor
fisubl
fnsave
bound
inc
mov
mov
or
xchg
push
das
nop
insl
les
mov
add
notl
pop
subb
cmp
enter
sbbl
sbb
add
fadd
and
mov
fisttpll
push
inc
nop
lcall
imul
adc
xchg
cmp
mov
pop
inc
hlt
dec
daa
std
xchg
mov
push
imul
jbe
or
cld
les
out
xor
mov
iret
push
add
push
pop
sbb
xchg
pop
mov
add
loope
and
lods
cmpsl
stos
mov
cmp
push
btr
shll
pop
stos
inc
dec
scas
lea
lods
pop
pusha
movsl
mov
mov
sbb
and
inc
xchg
push
mov
div
adc
inc
in
loope
cmpsb
imul
or
and
int
fs
inc
and
test
stos
lods
push
fdivr
xor
mov
xor
and
and
add
popa
iret
sub
sbb
ljmp
xchg
es
jae
mul
dec
repz
dec
xchg
mov
jne
idivl
push
pushl
popl
mov
inc
jg
cmp
inc
test
mov
sbb
xchg
sarl
dec
or
pop
fisubrs
push
ja
cmp
adc
fsub
lock
dec
insb
stc
pop
adc
mov
imul
cmp
frstor
pusha
movsb
loopne
adc
out
jae
in
sbb
std
int
pop
scas
jg
mov
hlt
mov
out
inc
fs
notl
imul
outsl
jae
in
mov
xchg
push
fsubl
loopne
sbb
xchg
sub
popf
sbb
and
add
xor
and
dec
mov
jbe
dec
inc
notb
add
pop
and
es
mov
ja
cs
repz
imul
adc
push
mov
and
xor
in
sbb
out
mov
jno
rclb
scas
shl
adcb
test
imul
rclb
sub
testb
adc
je
and
jno
or
mov
fisttps
fs
mov
pop
xchg
xchg
js
jne
pop
cmp
es
fistpl
cmpsb
cmpsl
mov
jg
popa
in
cmp
pop
lret
test
in
cmp
cltd
pop
jp
adc
and
dec
sbb
ss
and
jns
cmp
outsl
jnp
mov
push
xchg
sbb
sbb
jns
jnp
mov
mov
jp
jmp
cld
jne
jno
and
sarb
cld
jmp
test
adc
aas
inc
mov
lock
or
pop
and
or
xchg
ljmp
mov
inc
pop
pop
cmp
mov
in
repz
punpcklwd
jecxz
fistpll
mov
xchg
enter
inc
jp
int
pop
jae
andl
sbb
clc
mov
cmc
or
popf
cmp
dec
jae
repnz
das
pushf
jo
sub
or
dec
dec
ljmp
aad
mov
bound
mov
data16
mulb
or
and
insl
xchg
mov
jle
cmpsl
movsb
ds
nop
aam
dec
push
adc
imul
arpl
add
insl
jbe
or
add
gs
aad
mov
leave
fs
pusha
dec
xor
push
lock
mov
inc
pop
mov
dec
adc
insl
xor
fidivrl
pop
jbe
inc
jge
push
inc
cs
ret
daa
push
sbb
fiaddl
adc
push
mov
cmp
in
std
mov
jmp
mov
js
lret
jns
test
mov
pop
in
inc
fildl
fstps
dec
push
pop
xchg
loopne
scas
add
gs
or
sub
jl
cmp
jg
xor
daa
push
fwait
sarb
cli
xchg
fmull
push
icebp
fisubrs
mov
or
ficoml
in
sbb
fidivl
xchg
inc
scas
mov
pop
ljmp
or
enter
bound
or
sub
mov
jp
in
outsb
and
inc
ficomps
fisttpl
mov
test
and
adc
add
sub
dec
mov
jl
in
lret
lcall
fucomi
push
cmp
cmpl
cltd
sub
mov
sbb
in
test
outsl
sbb
enter
loopne
int3
cmp
inc
mov
shlb
pop
insb
add
stos
call
inc
adc
gs
xor
pop
jg
mov
into
jmp
pop
popf
cmpsl
dec
bound
xchg
test
cmp
adc
shlb
adc
inc
mov
mov
xor
mov
push
ljmp
or
pushf
std
fsubs
mov
xchg
xchg
sub
rclb
xchg
sub
pop
sti
leave
pop
mov
dec
push
insl
cld
and
xchg
adc
outsl
or
xchg
cwtl
outsb
pop
vmovaps
pop
rcll
xchg
push
jl
jb
jnp
sahf
xor
sub
ss
outsb
or
adc
cmp
repnz
leave
mov
and
or
jmp
push
fnsave
or
movsb
adc
leave
cmpsb
imul
jno
int3
outsl
leave
push
ss
rcrl
inc
adc
scas
mov
or
test
loopne
jo
mov
jnp
lret
adc
aas
sub
push
pop
add
mov
cmp
or
mov
add
xchg
inc
push
shrb
add
insl
fsts
out
dec
jg
lcall
repnz
js
or
xor
inc
pop
test
and
xchg
push
cld
sahf
test
mov
ja
adc
and
addr16
jns
fnstenv
gs
xchg
xchg
pop
adc
cmp
in
mov
cmp
ret
mov
xchg
sarb
fwait
or
sbb
pop
xor
iret
cld
les
fnsave
lods
inc
ds
push
cld
sub
adc
mov
mov
pop
mov
pop
jge
insb
sub
outsl
adc
xchg
push
aaa
mov
or
insl
mov
xchg
mov
and
mov
shlb
push
in
loopne
sbb
inc
scas
jnp
shrl
cwtl
dec
stos
jmp
js
enter
mov
popa
mov
shrb
jle
int3
xor
ret
push
out
cmpsl
orb
xchg
aam
mov
rcl
aaa
or
or
sarl
sti
lret
inc
inc
fisttpl
lahf
adc
adcb
adc
loop
setae
hlt
in
mov
test
xchg
mov
fcoml
stc
scas
sub
or
push
imull
and
mov
add
inc
mov
mov
xchg
scas
imul
cwtl
cltd
push
cmp
sbb
aaa
cwtl
jns
ret
jbe
add
into
jecxz
clc
loope
jbe
dec
outsl
push
fistpll
in
repnz
sbbl
xchg
xor
lret
leave
add
adc
mov
int3
ret
movsl
enter
ror
mov
lock
dec
xor
adc
mov
andb
rcrl
insl
test
in
mov
add
mov
or
jmp
outsl
popf
mov
jle
lcall
ljmp
mov
or
je
cwtl
lahf
in
sarb
into
pop
test
std
loope
mov
dec
repz
je
insl
mov
in
mov
fsubrl
outsb
pop
icebp
mov
movsb
mov
xor
inc
add
lret
popa
inc
fildl
inc
arpl
xchg
xchg
aam
or
add
mov
add
out
or
je
pop
jg
dec
dec
sub
clc
xchg
xor
mov
push
sub
loopne
movsb
jmp
jmp
push
and
lods
test
xchg
jb
mov
addr16
sbb
int3
dec
mov
loope
cmpsl
stos
or
xchg
pop
fildl
repnz
stc
scas
pop
out
aas
jno
dec
push
std
movsl
punpckldq
leave
test
adc
cwtl
cmp
adc
out
popa
pop
xor
sub
mov
cli
hlt
mov
add
or
and
movsb
sti
cmpsb
jne
cmp
negb
jnp
popa
dec
out
cmp
popa
repz
mull
scas
rcl
mov
lods
or
pop
sub
mov
mov
or
imul
xchg
lret
adc
test
cmp
pop
out
adc
push
dec
push
mov
cli
insl
mov
nop
or
or
or
push
adc
inc
xchg
jl
out
lretw
xor
mov
jns
push
sub
pusha
cmp
cli
add
adc
cmp
pusha
mov
add
fistl
hlt
jp
sub
repnz
or
push
test
inc
shl
es
icebp
push
adc
movsb
addl
mov
cli
xorb
dec
and
pop
mov
cmpsb
ret
jb
and
addr16
push
xchg
popa
arpl
cmc
and
in
cmpsl
outsb
xchg
mov
stc
or
inc
iret
sub
jge
mov
js
add
xchg
fistps
movsl
adc
out
mov
xor
adc
js
stos
mov
xchg
and
ret
or
int
pusha
lock
xchg
mov
jge
pop
xchg
push
fwait
xlat
in
pop
adc
mov
cmc
add
cmp
clc
call
mov
mulb
mov
inc
fstps
and
ficoms
mov
lahf
cld
xor
push
push
clc
adc
adc
daa
xor
mov
sbb
ljmp
sub
pop
movsl
sbb
inc
pop
ret
int3
into
and
mov
scas
out
xchg
push
imul
adc
orl
bound
movsb
and
movsb
jl
gs
addr16
dec
cmc
fdivrs
and
hlt
loop
rol
lds
sbb
jl
imul
repz
inc
pop
leave
add
daa
sarb
push
scas
fists
xor
stos
sahf
jno
jb
pop
mov
fldl
adc
cmc
push
xchg
push
jge
and
dec
movsl
pop
push
push
and
add
inc
and
mov
pop
cmp
or
pop
sub
repz
push
adc
dec
jne
xchg
push
rcrb
ret
cli
add
stos
sub
push
add
xchg
jp
cmpsl
cmp
and
test
jmp
lods
pop
enter
enter
repnz
pushf
push
mov
inc
cltd
enter
rcr
fs
loop
or
mov
mov
mov
test
sub
push
pusha
mov
shl
push
mov
mov
repnz
mov
cmc
mov
scas
das
ret
outsl
xchg
mov
insl
out
jns,pn
shlb
icebp
je
ret
or
insb
fdivrs
pop
or
fisttpl
aad
mov
adc
xor
std
cwtl
cmpsl
xor
lds
push
int3
push
test
cwtl
xchg
dec
jmp
lret
decb
jnp
rclb
mov
inc
pop
xor
mov
dec
pop
adc
rol
dec
jb
mov
mov
lahf
pop
in
push
xchg
mov
cmp
inc
pop
bsr
pop
cs
orb
add
fwait
les
in
dec
filds
sub
sbb
daa
imul
sbb
jmp
or
pushf
outsl
repz
clc
fstpl
push
mov
mov
or
dec
lds
loope
pop
mov
push
fsubr
sbb
mov
sti
inc
xor
push
aad
xor
fistpll
call
xchg
sbb
xchg
and
pop
scas
mul
fsub
sub
ret
pop
movsb
add
mov
in
mov
hlt
sub
ss
or
mov
mov
cltd
dec
and
lcall
inc
add
xchg
pop
sub
or
inc
dec
or
inc
punpcklwd
pop
mov
mov
push
ja
popa
insl
jbe
cmp
xchg
pop
adc
push
mov
jecxz
xor
repnz
pop
inc
sub
jbe
push
rcrb
sub
in
push
fimuls
aas
cmc
je
mov
push
cmp
fwait
jne
xor
repnz
sbb
xlat
insb
sbb
leave
add
xchg
mov
shr
sub
repnz
dec
and
push
fbld
pop
jge
pop
pop
fidivrl
dec
sbb
ret
popf
cmp
pop
data16
in
jge
push
mov
test
cwtl
jl
sub
leave
mov
nop
mov
push
mov
add
mov
xorb
mov
mov
inc
push
jno
sbb
push
mov
xor
ret
gs
cmc
dec
pushf
cmp
iret
jns
mov
add
out
ss
pop
xchg
inc
xchg
mov
test
inc
jnp
adc
ja
xchg
out
add
stos
fcmovnb
sarl
pop
mov
adc
jecxz
cmp
mov
jge
cwtl
or
push
ret
out
dec
fs
lret
sbbb
dec
mov
out
xlat
or
mov
mov
lock
arpl
les
cmp
enter
inc
out
test
adc
icebp
fcoml
jmp
jg
sub
jmp
lea
sub
mov
pop
test
sbbl
lahf
xorb
xlat
rorl
jne
gs
int3
icebp
lock
outsl
int3
test
jb
out
ja
in
dec
dec
nop
cmp
dec
lret
pop
add
xchg
or
xchg
test
push
or
sbb
jg
mov
pop
sub
icebp
clc
xchg
cmp
mov
into
dec
jmp
cmp
push
xor
aam
dec
dec
add
cmp
jmp
cld
aaa
lret
fimuls
mov
sbb
push
push
add
fisubl
loop
imul
out
loopne
push
cmc
jp
call
pushf
popa
es
shll
imul
jge
xchg
sub
push
cmp
repnz
daa
cmp
jb
lret
fs
aad
add
push
dec
jmp
mov
adc
jae
mov
mov
push
push
dec
imul
jmp
lods
or
cmp
jmp
clc
jge
sbb
ds
cwtl
and
cmp
repnz
xchg
add
sbb
loop
adc
fwait
inc
jno
inc
sbb
aam
cmovg
fwait
add
xor
jl
es
in
pop
and
idivb
icebp
bound
adc
pusha
in
mov
mov
repz
dec
mov
pop
cltd
pop
sahf
mov
fmuls
lret
xchg
scas
push
test
push
add
dec
jns
ss
data16
in
ljmp
je
push
jns
icebp
imul
imul
in
xlat
bound
cltd
movsl
inc
xor
sub
into
pop
add
adc
cmp
cmp
into
lahf
jbe
fsubl
xor
push
jl
mov
fsubrl
xor
mov
or
into
ljmp
mov
popa
xlat
inc
and
adc
out
mov
jno
ret
mov
push
push
xchg
mov
dec
insl
xor
mov
popf
scas
mov
inc
add
sahf
adcl
xlat
negl
sub
mov
inc
je
dec
ret
xor
leave
es
cmp
pop
jge
cmp
mov
stos
sub
sbb
fisubrl
and
cmpsb
fucomip
int
jo
sbb
mov
sarl
shll
ljmp
sub
inc
push
jmp
and
fidivs
dec
test
sub
in
and
mov
fidivrl
jg
xchg
sub
dec
lds
inc
mov
aad
jne
inc
icebp
lcall
cmp
fsubrl
addl
mov
loope
add
loopne
mul
pusha
mov
je
rclb
sub
push
dec
sbb
xchg
sahf
jo
jl
imul
rcrb
jae
loop
in
movsl
or
and
xchg
outsb
jecxz
es
jge
aaa
out
loopne
mov
loop
sbb
push
sbb
fnstenv
jle
rcl
mov
bound
mov
daa
aas
mov
push
sbb
bound
mov
adc
outsb
test
mov
arpl
enter
pop
andb
and
call
pop
rep
or
sub
aam
sub
es
inc
aam
enter
add
mov
xchg
sub
rep
jle
inc
pop
lds
gs
daa
inc
in
xchg
aaa
test
add
pop
rcll
ret
mov
imul
movsl
add
jno
jae
data16
call
aas
clc
cmp
lods
out
jae
mov
stos
cwtl
mov
push
xchg
jle
imul
into
fxam
mov
dec
adc
cmp
data16
push
pop
out
vpackuswb
shrl
pop
lret
or
testb
loope
mov
adc
jg
test
sti
jmp
cmp
dec
or
out
or
xchg
jmp
scas
jmp
mov
push
mov
fsubl
mov
mov
mov
inc
and
add
cmp
mov
mov
cmp
xchg
xor
xlat
ljmp
adc
push
popf
int
push
xchg
roll
xchg
loope
movsb
data16
jae
push
test
jbe
sub
mov
cmpsl
dec
sbb
dec
bound
cmc
sti
arpl
fmull
rcr
xchg
lock
add
push
lcall
shl
repz
push
iret
jmp
xchg
sbb
mov
push
xchg
ss
and
mov
sub
push
mov
ret
jae
mov
adcl
arpl
adc
pop
sbbl
jp
imul
imul
mov
das
fidivrl
inc
xor
mov
popa
mov
lret
jns
mov
jae
notb
sti
repnz
js
xchg
pop
popf
loop
movsl
sub
cmp
mov
test
ss
adc
cs
dec
sbb
in
lods
popa
iret
push
cwtl
sahf
lods
lcall
nop
shl
test
loop
push
addr16
std
sub
data16
jns
test
es
fnstcw
test
pop
and
jmp
sub
mov
add
aaa
dec
push
repnz
xchg
in
mov
rcrl
lahf
xchg
add
stos
lods
fcoms
and
xor
dec
std
cmp
dec
je
xlat
jb
aad
lods
sbb
xor
icebp
scas
and
xchg
adc
aad
add
pushf
imul
es
enter
pop
lea
imul
jl
rolb
jno
gs
movsl
lret
adc
lret
aaa
push
lahf
out
movsl
std
nop
es
pop
jg
lcall
mov
ljmp
push
dec
cmp
jbe
shrl
outsl
movsb
inc
and
pusha
sub
jo
pushf
mov
clc
jl
jmp
out
int3
dec
sbb
jle
dec
jne
cwtl
ss
rcl
adc
int
mov
and
pusha
sub
ds
jns
popa
inc
and
rorl
pop
xor
lock
sub
rcrb
push
mov
scas
jnp
js
sti
mov
in
loopne
dec
add
ret
inc
xchg
pop
dec
imul
fldcw
lahf
inc
inc
mov
test
xchg
jb
mull
jno
and
test
jne
xchg
pop
fiadds
mov
mov
loopne
xchg
stc
push
pop
cmpb
sbb
sbb
mov
add
inc
cltd
cmp
or
dec
adc
push
popf
shrb
mov
push
out
ds
dec
and
mov
mov
sbbl
sbb
lret
lods
sti
lret
pop
xor
movsl
test
or
mov
mov
int
adc
js
xor
add
fwait
cwtl
dec
out
add
pop
cmp
push
jl
or
adcl
lcall
dec
sub
jmp
inc
inc
scas
xchg
out
sbb
fidivrs
into
sbb
daa
js
jp
stos
enter
xor
test
sub
stos
sub
xorl
inc
pop
inc
or
outsl
mov
ja
adc
push
inc
inc
je
cmc
ss
push
hlt
outsl
fildll
push
cmp
mov
subl
jecxz
mov
lods
insb
lds
xchg
jo
outsb
xchg
loop
sbb
mov
sub
ror
hlt
ror
outsl
add
repnz
sar
xchg
adc
sahf
push
or
lea
mov
lock
xchg
lods
sbb
test
mov
lretw
add
mov
xchg
repz
fcomps
lods
test
stos
cs
push
inc
outsb
cmpsb
outsl
xlat
movsb
loopne
mov
test
fidivl
mov
popf
in
mov
pop
cmp
mov
movsl
sahf
fsubl
in
cld
dec
inc
lret
add
mov
not
lret
push
out
int
ja
fnstenv
mov
xor
jno
adc
pushf
int
mov
pop
cmpl
cmp
dec
cld
or
sub
and
mov
add
mov
dec
or
xchg
mov
insl
pop
push
dec
xchg
jae
sbb
mov
mov
mov
fsub
pop
pushf
jno
xchg
test
dec
pushl
jl
sbb
xor
xor
and
pop
push
push
fmul
lods
lds
loopne
fxch
push
cltd
in
stc
cmp
loopne
insl
dec
pop
mov
dec
movsl
ret
mov
lret
fs
gs
mov
ljmp
dec
jge
inc
pop
mov
push
dec
xchg
adcb
cmp
out
pop
xor
iret
shrb
add
cmp
iret
jmp
fcompl
jecxz
mov
pop
push
push
mov
and
dec
push
test
pop
imul
out
or
cmpsl
sbb
mov
lret
mov
mov
mov
aas
and
xor
pusha
fs
xor
fildll
adc
dec
cmp
adc
jb
mov
cli
push
pusha
xchg
cmp
dec
loope
jnp
mov
push
das
adc
addr16
push
fcoms
movsb
test
aam
cmc
or
hlt
jo
es
xor
cmp
inc
push
call
mov
cli
xor
cmpb
and
cwtl
loopne
mov
mov
push
insb
push
pop
in
adc
jmp
sti
sbb
cs
jmp
xor
push
mov
repz
subb
sub
mov
stos
aas
sbb
shrl
jns
pop
dec
pusha
loopne
xchg
leave
cltd
je
jl
lock
outsl
xor
shrb
push
insl
int3
xor
jns
xor
loope
loop
mov
std
fwait
sbb
rolb
loopne
mov
enter
shlb
push
in
mov
loope
xchg
lahf
mov
xchg
or
pop
push
push
adc
inc
jns
pop
push
mov
pusha
sub
cwtl
cmp
pop
push
push
sub
movsb
mov
lahf
jmp
and
pop
xor
mov
sub
mov
mov
jnp
stc
mov
mov
bound
stos
out
mov
adc
mov
int
jp
ret
adc
jbe
testl
lds
rcl
jge
lahf
cmp
mov
lds
cmp
das
xchg
add
cmpsb
and
inc
push
movsb
xchg
pop
sahf
xor
icebp
mov
fiaddl
or
rol
jge
lar
push
mov
fcompl
fld
outsb
push
je
xor
cs
jmp
das
sti
jg
jns
inc
inc
pop
pop
inc
mov
inc
popf
and
sbb
inc
ljmp
addr16
dec
xchg
in
mov
stc
push
ja
adc
pop
imul
dec
inc
mov
ficoms
push
daa
fldt
arpl
in
orl
and
enter
xor
pop
push
and
scas
enter
xor
hlt
mov
out
jmp
add
shlb
cwtl
add
addr16
fmull
lock
dec
shlb
in
sub
repz
xor
fisubrl
push
icebp
mov
jg
lret
sub
and
dec
mov
aam
arpl
mov
adc
aam
adc
rorl
sbb
push
push
add
pop
add
adc
xchg
and
sub
sub
dec
fstpl
lea
sahf
nop
test
or
xor
in
lret
xchg
pop
add
divb
mov
gs
xor
rep
xchg
fcompl
ss
imul
mov
mov
jle
out
dec
aam
and
mov
icebp
outsl
sub
stos
xchg
nop
sbb
cmp
test
in
inc
inc
xchg
inc
push
mov
fdiv
add
xchg
push
popf
xor
aad
outsb
es
pusha
jle
sub
pop
adc
cmp
aaa
cmp
outsb
fisttpl
test
jmp
mov
jno
xor
jb
sub
ss
sbb
pop
mov
jae
lret
insl
inc
cs
or
and
subb
sbb
cli
jmp
movsb
pop
pop
dec
cmp
lret
je
and
gs
lods
adc
adc
mov
rcrb
add
jge
sbb
push
outsb
out
stos
sub
test
sbb
inc
mov
mov
lds
adc
mov
test
outsl
xor
sarl
sahf
inc
jg
mov
mov
inc
pop
stos
out
movsl
sbb
call
adc
dec
js
xlat
sbb
shl
xlat
sbb
mov
in
jmp
sbb
lds
outsb
ljmp
adc
sbb
sub
xchg
aam
jmp
or
jb
gs
adc
xor
jns
mov
jo
jge
push
lods
adcb
push
sbb
test
pop
aas
pop
repnz
aam
ret
lods
stos
inc
pop
inc
jle
jo
cld
fcmovb
mov
dec
jns
mov
loopne
insb
and
loope
imul
ficoml
jg
mov
sbb
cmp
jl
mov
dec
jl
and
adc
inc
jo
arpl
aas
iret
arpl
inc
and
adc
iret
repz
xor
movsb
out
call
sbb
xor
rorb
jnp
mov
aaa
popf
and
dec
push
jecxz
dec
mov
sbb
test
fisubs
fstpt
push
push
js
leave
jo
movsb
push
out
and
jns
aas
add
sub
enter
je
sti
jbe
cli
aas
xor
inc
lret
scas
enter
sub
xchg
push
pop
jbe
mov
inc
rorb
shrb
insl
pop
sbb
lcall
mul
fldl
or
lock
mov
lret
movsb
xor
xchg
pop
dec
cmp
dec
aas
dec
movsl
sub
inc
pusha
mull
mov
gs
shrb
and
jno
dec
jo
push
and
enter
movsl
lcall
push
ja
es
sbb
movzwl
mov
inc
out
inc
adc
cs
adc
je
daa
push
pop
and
pop
xchg
out
pop
cmp
push
cltd
mov
push
jge
and
iret
push
mov
aaa
cmp
inc
mov
int3
inc
sbb
pushf
xor
rcrb
mov
and
add
shlb
mov
ret
lahf
repz
jp
xlat
or
xor
sub
xchg
mov
cltd
loopne
subl
xchg
icebp
enter
in
fistl
ja
and
and
cs
xchg
or
and
roll
add
mov
push
lods
push
cs
lea
cmp
add
icebp
ret
push
frndint
in
add
inc
lret
sub
dec
lret
dec
out
xor
jmp
jge
insl
xlat
jnp
mov
dec
jle
cmpsb
js
add
pop
jmp
mov
cmc
mov
mov
in
jnp
rorl
xchg
scas
or
into
mov
mov
dec
lods
jno
dec
cmp
xor
jl
out
bound
cmp
pusha
push
mov
mov
mov
sbb
popa
js
loope
push
push
gs
jp
cmp
test
insb
fcomi
push
nop
push
dec
addr16
fmull
es
loope
add
fbstp
jg
test
push
and
in
stos
ja
cmp
cmpsl
or
dec
stc
xchg
pop
les
xlat
jle
sbb
jecxz
loopne
mov
pop
aam
cmp
fnstsw
movsl
push
xor
aaa
in
inc
mov
out
cmc
sbb
cmp
mov
fiadds
xchg
ret
fidivl
mov
pop
imul
jae
shrl
icebp
dec
cwtl
outsl
lret
into
push
mov
cmp
xor
decl
push
sub
push
shr
sbb
data16
jnp
inc
or
add
push
es
push
cmp
add
xchg
shrb
cmpsl
ret
mov
mov
ficompl
and
dec
fs
push
or
mov
ja
sub
addw
cmpsl
cld
je
xchg
pop
and
adc
in
sahf
sub
daa
into
test
mov
andl
pusha
ss
ja
mov
sub
and
sbb
or
xchg
mov
and
fdivrp
and
mov
jle
mov
rcll
rolb
mov
repnz
icebp
inc
int
shr
mov
call
pop
mov
test
sar
decb
xchg
push
mov
push
pop
movsl
cmpsb
mov
iret
sbb
jp
or
xchg
pop
cwtl
into
fs
lcall
rcr
popf
out
mov
movsb
lahf
popf
jl
sbb
and
enter
dec
or
mov
push
lahf
dec
inc
std
outsb
adc
pop
shrl
adc
push
fiaddl
or
push
hlt
lds
leave
push
xor
mov
test
or
enter
sbbl
mov
in
cmp
mov
daa
lahf
adc
int
mov
insb
adc
mov
xchg
adc
mov
addb
pop
xchg
and
daa
test
rol
and
je
sbb
add
andl
ljmp
repnz
adc
ret
out
lods
pop
arpl
add
and
fwait
xlat
ror
pop
xchg
pop
adc
cmp
mov
adc
and
scas
or
fldenv
mov
rcrl
mov
and
xchg
adc
rclb
out
aas
in
into
inc
adc
movsb
add
and
and
addb
xchg
in
push
jnp
rcll
stc
lods
sub
cwtl
sahf
fidivl
cld
jmp
adc
shll
sub
pop
test
cs
inc
scas
test
bswap
loop
fstps
and
clc
xor
pop
test
pop
inc
jg
div
inc
dec
mov
and
and
pop
inc
movsl
push
fcompl
daa
jb
xchg
mov
aad
or
or
data16
mov
and
jae
lods
add
mov
pushf
into
lret
xchg
jne
js
xor
gs
xor
push
jo
dec
mov
sub
jo
mov
or
inc
xchg
cmpsl
mov
dec
cmp
mov
sbb
fbstp
aas
icebp
lea
in
dec
sub
mov
mov
ret
jne
lds
test
arpl
or
add
scas
fsubrs
mov
mov
mov
jb
dec
movsl
icebp
cmpsb
in
call
or
ja
loop
xlat
arpl
push
dec
addl
add
jge,pn
or
inc
mov
sbb
push
mov
mov
ds
mov
mov
pushf
leave
inc
movsb
sti
lea
lds
inc
xchg
xor
ss
jecxz
sbb
les
push
jecxz
jnp
bound
jecxz
pop
mov
fs
and
sbb
push
push
pop
popf
dec
rclb
insl
mov
cmpsl
icebp
pop
inc
in
fstps
rcr
push
fld
push
push
push
xor
mov
ret
jp
dec
out
mov
stc
ret
sub
mov
out
das
mov
aaa
adc
jp
add
imul
adc
fwait
in
mov
clc
adc
push
add
cmp
fwait
or
pop
repz
fs
or
sbb
xchg
les
xlat
outsl
repz
enter
mov
mov
mov
sbb
fs
je
pop
mov
repz
ret
sbb
jle
and
lds
mov
pop
sahf
xchg
xlat
ljmp
iret
lea
sbb
sub
out
dec
mov
mov
add
lods
popf
popf
fstps
cmp
insb
rorl
leave
iret
add
pop
mov
inc
or
jp,pt
jo
jle
xchg
push
lods
pop
mov
mov
add
pop
add
ret
add
insl
mov
mov
ljmp
xchg
aad
sbb
dec
push
mov
dec
test
ficoms
dec
inc
lock
mov
sbb
mov
das
mov
cmpsl
aas
adc
repz
sub
push
push
adc
fldcw
sbb
leave
movsl
bound
ja
in
pop
shll
movsb
add
imul
dec
pop
xlat
rclb
dec
xchg
dec
push
pop
mov
jmp
pop
pop
das
jg
push
mov
gs
int
insb
mov
sub
movsb
xchg
jae
or
and
je
paddsw
or
dec
sub
inc
jle
fsubrs
inc
gs
in
mov
xor
stos
fadds
mov
sbb
cmp
test
inc
iret
xor
stc
mov
je
mov
adc
ja
call
xchg
fidivrl
adc
clc
pavgb
subb
test
mov
push
mov
mov
add
int3
adcl
sbb
lcall
mov
nop
aad
in
stos
lods
sbb
mov
mov
push
jg
pop
cld
lahf
mov
jp
push
mov
mov
stc
dec
arpl
fldt
in
aas
inc
hlt
call
cwtl
mov
out
stos
out
std
cmp
pop
mov
gs
inc
jb
mov
stos
in
insl
les
inc
pushf
idiv
cmp
pop
gs
mov
loop
stos
testl
push
ljmp
inc
imul
fwait
or
data16
or
outsb
mov
mov
int
dec
sub
repz
shlb
sbb
xchg
int
and
outsl
push
leave
inc
mov
push
add
sbb
xchg
jb
cltd
adc
arpl
shrb
call
xor
je
jg
sub
pop
mov
scas
cs
dec
push
jo
jp
mov
arpl
mov
mov
sbb
jcxz
es
bound
inc
ret
add
adc
fldcw
cmp
inc
pop
sahf
lret
pop
xchg
stos
mov
jg
addb
mov
cmc
xchg
inc
pop
cmpsb
andb
mov
cli
cmp
jno
jnp
sbb
fbstp
push
and
jno
popf
movsb
vmovshdup
ja
jle
lea
add
scas
or
fadds
or
in
test
cs
loope
xor
fisttpll
pop
mov
sub
and
clc
insl
leave
pop
sbb
dec
cmpsb
xchg
rcll
adc
dec
hlt
sub
inc
enter
dec
sub
ret
lock
daa
lods
xorb
push
pop
mov
test
mov
and
sarl
mov
out
test
pop
sbb
std
call
loop
cwtl
and
sarl
mov
xlat
lea
or
lret
std
cli
jno
ret
adc
and
pop
sahf
xlat
adc
aaa
and
xchg
outsb
lods
lret
push
mov
mov
loop
dec
mov
xchg
jne
pop
xlat
in
jge,pt
mov
shrb
mov
or
stos
gs
ret
inc
pop
out
cmpsl
ljmp
mov
sahf
loopne
mov
imul
or
mov
sbb
insl
jp
pop
cmp
gs
aam
insb
int
dec
pusha
daa
lds
mov
enter
imul
jecxz
or
xor
cmp
add
scas
mov
pushf
and
jge
fs
adc
out
mov
cmpsl
xor
call
nop
pop
mov
icebp
sub
xor
shll
movb
repnz
rcll
bound
jnp
cmpsb
sub
cli
faddl
inc
or
push
push
mov
push
popa
jns
cld
mov
add
fwait
xor
xchg
fs
jo
cmp
aam
add
pop
in
out
adc
or
xchg
dec
fstl
outsl
flds
or
jmp
fiaddl
popl
inc
push
movsb
test
mov
cmp
cmp
aad
push
or
dec
ljmp
cmp
xor
or
mull
jb
loop
scas
mov
loopne
mov
sbb
sbb
inc
aad
popa
enter
bound
or
jbe
inc
jecxz
xor
cmp
lock
imul
cltd
sahf
in
leave
xchg
xor
xchg
xchg
mov
xorl
jne
pop
jnp
xor
mov
das
cmp
push
or
lret
rcl
dec
push
cmpsl
imulb
and
push
mov
lods
jmp
cmp
in
inc
push
inc
dec
lret
mov
pop
xchg
mov
call
fs
mov
out
jne
push
pop
xchg
add
scas
cmp
and
dec
nop
mov
dec
mov
aad
test
ds
sahf
and
xchg
dec
jge
insl
mov
test
jmp
faddl
repz
ds
xlat
xchg
pop
sub
gs
outsb
insb
cmpsl
xor
xlat
push
xchg
inc
pusha
cmp
push
mov
fcmovnu
rcr
xchg
add
push
psubw
cmp
out
bound
in
in
jbe
jnp
lret
sbb
mov
push
idivb
sbb
movsl
xchg
sbbb
or
je
js
xchg
ret
out
int3
hlt
or
mov
mov
loope
dec
decl
adc
adcb
sub
aam
cmp
pop
arpl
fildl
daa
aaa
cmovs
ret
mov
or
mov
ljmp
lcall
cwtl
jle
out
repz
mov
dec
or
push
bound
pushw
das
add
mov
and
mov
push
xchg
mov
sub
test
cmp
lock
insl
fwait
std
pusha
add
ret
out
mov
cmp
mov
fwait
xchg
sbb
xchg
aam
sbb
insb
popa
fdivrl
sub
adc
xchg
outsl
mov
push
mov
pop
jp
rcrl
ds
pop
out
ds
mov
and
cwtl
pop
dec
xchg
call
out
test
hlt
mov
sub
les
hlt
inc
bound
decl
in
bound
mov
fucom
js
xchg
shlb
inc
and
add
mov
enter
fs
xchg
mov
adc
push
gs
cmp
shll
rclb
mov
lds
jp
push
pop
pop
jae
sahf
add
fildl
dec
loopne
add
push
shll
loope
pop
sarl
lret
addl
push
inc
cmp
jg
cltd
popa
enter
cmp
cli
push
ret
xchg
xor
cld
xorl
push
cmp
mov
in
cmpsl
mov
iret
fiadds
add
cmp
jp
cs
fwait
adc
push
pusha
jge
inc
lcall
cmpsl
out
ret
add
mov
bound
or
pop
mov
xor
push
test
gs
lret
decb
mov
in
ret
cli
jl
mov
jb
sbb
lret
cmp
outsb
adc
xor
mov
fdiv
aam
lcall
jmp
push
add
arpl
dec
sub
fdivrl
push
sub
data16
jae
or
mov
scas
jae
push
xor
cmp
int3
inc
sub
xor
icebp
out
sub
add
sub
cltd
sbb
ja
inc
add
add
std
mov
mov
jno
fldcw
shll
ret
mov
xchg
lds
inc
scas
fs
pop
shlb
cmpsl
push
shr
jno
lds
lret
arpl
push
mov
xchg
mov
icebp
call
inc
call
es
out
inc
scas
mov
jecxz
mov
jb
orb
sbb
xor
xor
pop
mov
inc
cmp
and
cmp
jge
dec
dec
ja
mov
sti
jne
lock
ljmp
daa
cld
repz
pop
mov
dec
sbb
cwtl
mov
sbb
mov
inc
jns
xor
ret
jecxz
cmc
mov
lret
xchg
add
inc
or
stc
jne
mov
lcall
add
loop
xor
push
js
push
test
xlat
mov
test
jae
ret
sbb
ss
jo
in
fwait
clc
mov
stos
jns,pn
mov
ja
aaa
out
xor
mov
and
inc
mov
mov
int
jns
cs
dec
jecxz
dec
lret
scas
adc
clc
mov
mov
xor
fdivrl
jle
mov
inc
push
add
aaa
push
jmp
cmp
aad
or
push
fcomi
mov
sub
fdivs
cld
push
or
xchg
mov
mov
push
push
ds
cmpsb
cld
inc
xchg
mov
scas
cmp
jae
or
popa
sarb
cmp
or
jmp
pop
push
dec
mov
mov
or
leave
out
ds
dec
push
scas
int
out
fdivrl
out
xor
fbld
in
stc
dec
xor
les
xchg
imul
mov
mov
in
inc
std
ja
sti
and
pop
test
mov
inc
pop
xor
shlb
xchg
lret
add
xor
in
push
icebp
and
lods
insb
cmp
aas
mov
cli
lret
push
sub
xchg
mov
scas
jbe
imul
add
and
cli
clc
cli
dec
or
out
imul
inc
push
lock
lahf
repnz
mov
push
xchg
int3
sub
andb
test
bound
mov
repz
push
and
ja
adc
movb
lret
out
jecxz
inc
fildl
add
add
cmc
cmp
and
icebp
outsb
inc
and
or
inc
pop
idiv
pop
jne
xchg
pop
leave
into
in
mov
and
mov
loope
and
in
sbb
jae
pop
jno
or
push
mov
jp
outsl
pushf
shll
sbb
popf
inc
xor
test
jecxz
dec
push
or
divl
mov
push
rcl
mov
cmp
mov
mov
in
stos
pop
or
mov
xor
cmp
sbb
mov
adc
add
cmpsb
mov
and
cmovno
dec
insb
stos
mov
add
or
lahf
loopne
xor
out
mov
shll
and
mov
sub
push
inc
or
mov
dec
mov
lcall
das
push
lcall
xchg
xlat
enter
ret
out
or
sbb
pop
mov
xchg
loope
scas
pop
das
lods
insl
fdivs
mov
xrelease
push
add
loope
adc
pop
mov
and
enter
popf
cmpsl
out
jge
loop
lahf
add
insb
in
adc
mov
ljmp
ret
or
icebp
ljmp
call
repz
pop
push
outsl
repnz
cli
inc
push
sbb
daa
mov
not
push
negl
jg
movsb
jns
pop
cmp
stos
mov
int
mov
fnclex
lret
repz
dec
dec
shrl
leave
fsubr
leave
push
add
mov
gs
cmp
movsl
add
jl
inc
mov
push
subb
lock
fs
xchg
es
xor
mov
or
jge
mov
imul
mov
jno
in
mov
jle
and
fnstenv
mov
inc
sub
rcrb
call
mov
push
lods
mov
inc
jl
mov
daa
hlt
pop
xchg
hlt
sahf
js
sub
sub
and
lret
jns
add
cli
jp
ljmp
icebp
push
jno
repz
fxtract
idivl
out
ret
shrb
sub
cmp
cmovne
xor
outsl
lods
stc
or
adc
enter
cmp
cmp
adc
cmp
setg
dec
adc
imul
call
stos
ja
fnstsw
add
jno
sarl
sub
in
cmpsl
stos
mov
imul
pop
sar
notb
movsl
mov
outsl
adc
mov
aam
pop
ljmp
sub
mov
bound
fadds
xor
sbb
das
loopne
xor
dec
sbbl
dec
test
xchg
add
add
hlt
out
mov
push
xor
int
push
leave
and
popa
and
stc
push
test
mov
call
mov
jnp
loope
mov
popf
pushf
push
fbld
fs
std
push
mov
lcall
sbb
mov
sub
push
mov
stos
jge
dec
or
jle
movsb
mov
add
dec
push
add
cmp
leave
sub
inc
out
push
idivb
or
mov
mov
mov
enter
enter
xorl
fsubp
cld
inc
sub
xorb
xchg
and
cmp
aad
jae
mov
adc
jl
jae
adc
es
sarb
test
and
aad
jo
inc
cmp
sub
jno
xchg
rolb
sub
out
rorl
mov
pop
fnstenv
mov
imul
mov
xor
cmp
inc
pushl
jno
test
stc
sbb
sub
xor
fsubp
xchg
test
add
in
int
aaa
rorl
fs
mov
movsl
xchg
cmp
and
adc
pop
sbb
or
cmp
dec
jmp
scas
add
pop
test
pop
std
rolb
sub
dec
push
dec
cmp
mov
mov
addr16
stos
inc
mov
inc
cmc
inc
mov
fiaddl
cmp
mov
ljmp
lods
movsl
dec
push
dec
fidivs
add
imul
outsb
stos
out
js
repz
inc
stc
lret
shlb
lret
repnz
mov
scas
cwtl
mov
dec
mov
inc
ljmp
into
cmc
push
les
iret
fimull
hlt
mov
push
mov
addb
jns
mov
or
fimull
pop
aad
in
mov
rorl
incb
mov
repz
lret
aad
mov
call
lret
into
push
jle
pop
cmpsb
ss
leave
pop
add
ja
ja
mov
clc
insb
mov
shlb
sub
jb
or
cmp
or
dec
es
sbb
js
test
sbb
push
test
aad
add
pop
mov
push
cmpsl
xchg
loopne
bound
addb
adc
scas
inc
and
mov
shr
and
outsl
xchg
ret
sub
inc
gs
mov
xor
loop
pop
imul
sbb
in
imul
add
ljmp
lret
in
sub
out
xor
std
pop
insl
js,pn
or
daa
faddl
cltd
pop
and
int
xchg
div
movsl
dec
jmp
cmpsw
adc
lock
call
adc
int
aaa
pop
movsb
sarl
jecxz
xor
xlat
mov
aam
add
sahf
cmp
fnsave
ds
jmp
mov
sub
push
out
add
inc
inc
jmp
mov
pop
mov
push
clc
out
cltd
aas
xor
rcrb
cmp
cmp
je
inc
test
xor
and
movsb
xor
sbb
fdiv
scas
cmpsl
ja
xchg
mov
mov
xchg
popa
jp
movsb
adc
adc
pop
rep
pop
ss
inc
call
xor
dec
dec
stc
xor
sbb
jg
std
movsl
faddl
ss
adcb
arpl
ror
mov
scas
out
les
popa
aad
ja
sub
das
and
fs
pop
pop
dec
sbb
mov
or
pop
pop
sbb
pop
xchg
adc
data16
mov
push
pusha
dec
iret
pop
test
scas
rcr
sbb
jecxz
jecxz
xor
dec
mov
lds
jo
cmp
dec
jmp
sub
data16
aam
fsubrl
imul
xchg
or
fldpi
inc
mov
pop
push
loope
mov
sub
mov
mov
push
push
ficoml
hlt
pop
xor
xor
lods
mov
sub
mov
xlat
lock
cmc
push
push
pop
pop
outsb
fcmovb
or
sbb
filds
sub
dec
adc
adc
inc
sub
leave
mov
mov
les
movsl
cwtl
pop
and
into
xchg
scas
mov
xor
test
mov
and
fldl
pop
sub
or
sub
cmp
addr16
inc
add
jle
popa
jmp
dec
rorb
pop
push
mov
out
jo
mov
inc
mov
sub
xor
sub
push
lods
dec
cmp
idivw
aaa
and
sbb
iret
je
or
sub
and
pop
aam
aas
aad
fsubr
sub
stc
pop
adc
aas
orb
repnz
out
xor
shrl
subl
sub
dec
cmp
push
pop
in
lods
jns
ljmp
cmp
cmc
out
cmp
push
movsl
mov
cwtl
loopne
pop
jbe,pn
push
dec
xchg
fiaddl
push
ret
js
mov
mov
int
outsb
outsb
hlt
and
or
inc
sbbb
sbb
out
xchg
jb
repz
mov
jmp
jg
mov
in
sbb
sub
imul
leave
jg
adc
into
add
and
sahf
lock
mov
pop
jno
scas
push
push
sub
daa
aad
inc
sahf
sub
or
mov
dec
in
outsl
sub
or
int
cmp
inc
xor
mov
dec
mov
test
out
test
jnp
rolb
xor
cmp
in
lcall
ret
pop
pusha
aas
lahf
negb
or
lods
xchg
pop
mov
push
gs
in
clc
lock
out
dec
loopne
fisubs
or
icebp
dec
pop
lcall
lods
outsb
cltd
or
or
mov
xchg
and
aam
xor
pop
jp
push
pop
fisubl
mov
into
xchg
addl
sub
out
mov
test
add
cmp
pop
scas
outsb
cmp
scas
cmp
adc
std
push
sbb
xchg
imul
xor
or
test
push
xchg
push
pop
add
out
sar
aam
inc
sub
sbb
pop
cwtl
pop
inc
xorl
xchg
jl
test
stc
sbb
jmp
insl
mov
xor
std
dec
fcmovu
add
mov
push
fisttpl
bound
cs
xor
dec
mov
sub
lret
lods
gs
in
jo
cmp
in
inc
ljmp
or
cltd
jge
pop
and
jne
aas
and
cltd
xor
cwtl
aaa
jns
or
sub
mov
test
adc
mov
inc
daa
dec
cmp
mov
aaa
inc
cli
xor
push
sbb
cmpsb
mov
cmp
cmp
jg
adc
outsw
sahf
mov
outsl
cmp
inc
insl
xchg
mov
into
imul
out
insb
jno
and
scas
sbb
inc
sub
dec
inc
adc
mov
cld
cld
ret
sbb
call
add
adc
adc
lods
push
cmp
sbb
mov
test
cltd
jno
dec
outsb
push
or
imul
xor
dec
cmpsb
xchg
jae
cld
adc
idivl
mov
outsl
jb
add
pushf
and
popa
lock
loopne
in
bound
inc
add
xor
adc
sbb
out
lret
in
shrb
das
push
ret
mov
in
mov
test
sbb
in
inc
xchg
jecxz
popa
jbe
mov
adc
dec
xor
mov
cmpsb
xchg
and
jne
lret
aas
add
inc
mov
in
dec
pop
mov
lock
fmuls
adc
pop
pop
cli
pop
mov
sub
add
in
or
inc
sti
sbb
mov
aaa
fwait
scas
dec
jmp
xchg
nop
js
fs
push
rorb
mov
lods
cmp
push
xchg
scas
sub
in
push
mov
mov
add
stos
lock
cmp
iret
and
push
outsb
push
ret
mov
inc
pop
pop
mov
add
testb
adc
mov
push
cmp
je
sub
ljmp
sbbb
xchg
lds
fstpt
repnz
dec
sub
or
xor
mov
mov
push
in
pop
push
xchg
ret
sbb
daa
movsl
addb
sarl
adc
nop
sahf
cmp
lods
sbb
mov
and
dec
push
adc
stos
add
aas
push
dec
shrl
mov
aaa
add
outsb
adc
addr16
cmp
push
lea
call
cmp
push
ds
fsubr
mov
xor
cmp
lds
cmpsb
repnz
or
push
mov
mov
and
nop
subb
lds
outsb
fcomps
mov
and
shl
aas
xchg
int3
xor
xor
das
ffreep
push
xlat
cmp
stc
add
xor
jecxz
dec
ss
cmpsl
push
sbb
xor
hlt
mov
sbb
lcall
rcl
mov
pop
push
clc
leave
outsl
movsl
jns
push
pop
cltd
jge
dec
sbb
dec
imul
sbbb
push
mov
nop
mov
jne
xchg
mov
jecxz
jnp
mov
cs
mov
jecxz
xorps
dec
fs
xor
cmc
cmp
test
push
out
mov
aad
cmp
test
push
sub
dec
cmp
push
push
mov
sbb
mov
out
xchg
out
lcall
jae
push
js
test
xor
or
vmovaps
fnstsw
jmp
in
outsl
sbb
int3
filds
enter
ljmp
xchg
lods
and
or
xor
out
add
jo
adc
lods
add
cs
mov
cmp
lods
add
fistl
push
stos
lcall
popf
imul
dec
mov
pop
wbinvd
mov
jp
arpl
call
pop
rcrb
pop
pop
stos
mov
jge
enter
std
mov
adc
mov
mov
sub
scas
incb
rclb
dec
mov
imul
in
push
add
fimuls
jmp
or
rol
daa
into
xchg
sbb
pushf
cwtl
push
push
imul
xchg
aaa
je
sub
pop
push
add
pop
pop
loope
xchg
inc
jae
aam
sbb
inc
push
or
and
xchg
arpl
mov
pop
int
addb
aam
xor
js
jl
mov
ret
outsb
jge
outsb
arpl
aad
jo,pt
out
push
fdivs
push
mov
cmp
dec
in
push
js
xchg
fimull
ljmp
push
lock
mov
loope
add
cmp
aad
add
hlt
js
mov
jecxz
xchg
inc
movsb
and
sub
out
pop
test
jns
hlt
andl
push
enter
or
nop
ds
dec
movsl
inc
outsl
gs
data16
jno
enter
mov
inc
xlat
push
jno
or
cmc
pop
jmp
sub
pop
fdivrs
pop
or
ja
lods
dec
sub
ljmp
addl
cmp
and
push
bound
cmc
ss
xor
mov
mov
js
add
mov
xchg
popa
push
xor
inc
mov
cmp
call
mov
shlb
out
lret
fcmovnb
stos
in
jne
and
mov
jp
ret
jge
int
aam
cmpsb
push
dec
shll
pop
sub
adc
pop
rcrb
aad
cmpsb
and
lcall
pop
es
inc
mov
xor
insl
fcom
cmp
lds
addr16
arpl
and
lock
aad
clc
add
xlat
pop
sub
mov
sub
add
add
sbb
inc
addr16
pusha
stos
call
int3
divb
les
bound
das
jb
dec
inc
test
arpl
add
sti
cs
push
ljmp
jae
lret
xchg
jge
arpl
fdivl
lret
adc
sbb
fnstcw
call
iret
push
out
sub
pop
stos
int3
inc
xchg
cmp
dec
xor
mov
mov
aas
xor
mov
sbbl
xchg
jnp
insb
int3
std
and
adc
or
xchg
and
out
ljmp
scas
sbb
int3
shlb
ss
adc
js
hlt
xor
pushf
mov
cmp
inc
ret
rolb
adc
xchg
es
mov
or
xchg
into
into
les
mov
leave
or
cmpsb
pop
sub
jb
call
mov
pop
int3
dec
dec
push
inc
out
inc
mov
adc
or
cmp
int3
lds
and
test
insl
mov
test
mov
rcrb
adc
movsb
cmpl
pop
adc
mov
daa
fistps
push
pop
imul
jns
cli
adc
repnz
mov
out
pop
stc
add
cmp
imul
hlt
insb
mov
xchg
out
loopne
xlat
in
stc
sbb
add
jge
pop
movsl
push
add
push
cmp
xorps
adc
aas
pop
inc
mov
lods
les
push
js
pop
mov
add
cmp
in
es
adc
adc
fldcw
and
push
jns
in
testl
sbbl
in
clc
or
aam
pop
sbb
adc
negb
sar
push
adc
lods
xor
je
test
out
add
inc
push
push
pop
or
dec
add
push
std
mov
shl
scas
aam
mov
cs
pop
loope
cmp
pop
mov
frstor
shlw
dec
add
stos
popf
push
sub
scas
mov
cltd
cs
pop
or
jbe,pt
push
mov
add
out
and
ja
icebp
xchg
pop
pop
das
mov
dec
insl
dec
xchg
jle
sbb
or
sbb
enter
cmp
aaa
add
pusha
jge
mov
push
rcl
lahf
mov
inc
inc
add
int3
outsb
dec
and
mov
lcall
jb
dec
inc
cs
cmp
cwtl
cltd
insl
nop
xchg
mov
mov
arpl
test
fdivs
or
pop
shlb
xor
xchg
js
das
or
pop
clc
or
ljmp
sbb
fimuls
fs
mov
out
fbld
sbb
dec
mov
fidivl
roll
out
mov
pop
stos
jb
stc
cmp
pop
or
xchg
or
jae
or
cmpsl
xor
and
add
sbb
leave
mov
roll
fstl
fisubrs
mov
sub
fs
mov
cmp
insl
lds
jecxz
sbb
xchg
cmp
addb
mov
aad
fdivr
fldl
fcoml
je
shlb
sbb
add
stos
data16
fnstsw
cs
push
xchg
xor
cmp
inc
and
test
nop
ret
pop
sbb
inc
cmp
sti
pop
xchg
push
mov
sbb
out
lret
bound
pop
sbb
add
lahf
into
cltd
clc
inc
xor
loop
inc
sbbb
inc
cmp
pop
imul
aam
adc
mov
cmp
out
ljmp
into
add
arpl
xor
cmpl
icebp
call
and
int
sti
cltd
jno
jns
out
stc
fnstsw
mov
lret
inc
aam
repnz
and
stos
push
sahf
push
push
push
or
sbb
jmp
mov
fadds
jp
mov
bound
nop
adc
rol
xchg
ret
jmp
shr
fs
sbb
push
mov
repnz
sbb
testb
add
xor
sbb
aam
sub
push
idivb
pop
jmp
shr
cmc
imul
aaa
push
dec
fnsave
jne
bound
jb
mov
mov
fsts
mov
inc
push
lcall
sti
mov
jg
or
or
mov
out
in
test
or
push
leave
andb
and
into
xchg
cld
cs
mov
test
lea
mov
in
xor
movsb
xlat
jl
dec
js
jae
lods
cmp
mov
xlat
stos
cmc
int
in
js
movsb
hlt
add
jle
lods
fadd
cmpsb
getsec
and
jb
fst
fnstsw
cmp
lods
push
push
movsl
je
jecxz
and
out
stc
pop
testl
mov
inc
arpl
test
cmp
xchg
sbb
dec
dec
pushf
mov
xor
adcb
fwait
or
add
cmpsl
push
sub
arpl
jns
mov
push
jge
ja
ja
out
xlat
cs
loop
cmp
push
stc
mov
push
cmp
dec
pop
xor
data16
out
xchg
or
sub
lret
mov
pusha
insl
or
stos
outsl
sahf
jge
or
add
cmp
jb
dec
mov
andnps
cmp
gs
fisubs
add
neg
xchg
ret
pop
andb
adc
cltd
icebp
fimuls
adcl
mov
xchg
shl
xorb
lods
adc
add
push
divb
or
push
fst
cmp
push
cmp
roll
mov
xor
mov
add
js
aas
negl
enter
jns
dec
add
movsl
mov
fwait
cmp
inc
inc
pop
and
andl
cli
sbb
xchg
frstor
push
std
or
add
fmull
out
push
push
stos
mov
jo
fildl
push
outsl
cmp
cmpsl
or
sahf
rclb
lods
adc
or
xchg
jle
rorb
lods
icebp
mov
cmpsb
push
add
mov
mov
sub
sub
adc
pop
cmp
push
outsb
pop
pop
add
aad
xor
or
mov
ret
fdivrl
cwtl
aas
stos
shlb
in
call
aas
sarb
lods
outsl
leave
pop
xor
pop
ljmp
bound
in
fcoml
lea
xlat
mov
xchg
popl
cmp
pushf
bound
sbb
push
adc
and
xchg
jge
insl
jmp
shll
mov
inc
mov
jo
in
lock
sti
jno
jnp
jno
lods
cltd
sbb
out
sub
rclb
mov
xchg
mov
xor
enter
adc
shll
lea
jl
imul
sub
mov
inc
test
ret
int
jp
imul
notl
subb
aaa
xorb
lahf
aad
xchg
lods
daa
jl
push
cmpsl
sub
cs
mov
jnp
pop
mov
sub
push
mov
aas
lahf
inc
pop
gs
sub
push
fimuls
push
clc
and
mov
and
loope
jns
out
adc
roll
add
loopne
dec
dec
std
mov
pop
bnd
std
push
jb
xchg
cwtl
add
pop
xchg
inc
data16
cli
icebp
out
std
sbb
sar
es
ljmp
shl
xchg
lea
pop
mov
rcl
mov
in
jae
xchg
addr16
xor
xorb
push
and
push
cmp
sti
and
adc
je
in
lock
imul
inc
and
pushf
test
lcall
in
inc
mov
imul
negl
jp
cs
ret
repz
push
les
mov
fmull
leave
daa
sarl
push
aaa
xor
fstps
in
add
jne
cwtl
or
aas
mov
cmpsl
and
repz
js
sub
mov
xlat
sub
aaa
and
test
mov
mov
push
jp
mov
fisubl
xor
fwait
push
or
and
push
aam
or
bound
cmp
pop
jnp
lret
mov
dec
rol
cmp
decb
bound
mov
stos
lcall
fimull
test
repz
adc
or
aam
test
and
aas
outsl
insb
jns
pushf
shll
xchg
mov
int3
int3
outsb
jecxz
and
aad
mov
cmp
shll
call
sbb
xor
les
jo
das
jo
push
mov
lods
mov
je
sub
jns
mov
adc
imul
fstpt
pop
push
inc
cltd
push
push
adc
sub
rcr
shr
mov
jecxz
ja
cld
cmc
sub
leave
mov
loop
mov
mov
enter
xor
xor
pop
testb
mov
add
aam
and
pusha
inc
xor
inc
sub
cmp
loopne
repz
outsl
sbb
mov
and
lret
add
jo
jmp
add
sub
cmp
addr16
pop
std
inc
rcr
adc
jg
icebp
cmc
adc
sub
fs
int3
popf
xchg
lcall
mov
mov
or
xor
cmp
xchg
mov
push
jmp
mov
lahf
mov
cmp
outsl
insl
dec
test
aas
mov
mov
sub
fbstp
aaa
fdivl
xchg
push
dec
fldt
lcall
loopne
push
in
in
je
lahf
jl
jl
ss
std
cmp
test
cmp
fsts
imul
les
arpl
push
adc
dec
aas
shrb
jno
jnp
iret
pop
sub
sub
mov
call
or
xchg
cltd
scas
pop
mov
ja
leave
xchg
jg
imull
jmp
cli
popf
lods
adc
fldt
fsubrl
mov
jle
xor
sbbl
pop
addr16
xor
scas
cli
fwait
mov
sub
mov
fnstenv
popa
sub
loop
loope
out
clc
and
push
push
jmp
xchg
insl
hlt
lret
sbb
adc
hlt
das
or
adc
ds
outsl
cmpsl
add
add
icebp
icebp
mov
mov
mov
jmp
popaw
sbb
inc
test
rorl
sbb
dec
xor
inc
decb
das
push
mov
dec
inc
movsb
xchg
in
adc
push
les
adc
ret
mov
je
adcb
mov
and
or
scas
push
enter
lcall
out
adc
dec
clc
xchg
ds
fdivrp
repz
int
loopne
sbb
js
add
xor
mov
cmp
icebp
pop
dec
push
xchg
out
faddl
push
out
mov
inc
add
push
adcb
out
insl
cmc
aas
mov
push
xchg
mov
jae
jg
add
in
mov
andl
arpl
aad
ds
ret
cli
inc
cwtl
shll
xchg
jbe
push
sub
cmp
lcall
aad
mov
cmp
iret
loope
cwtl
mov
pop
add
xor
les
add
fldenv
in
leave
scas
xor
mov
ljmp
push
out
movsl
xchg
ret
scas
in
inc
and
xchg
pop
xchg
fstp
mov
out
dec
mov
push
jae
adc
inc
xchg
in
adc
xchg
scas
mov
stos
mov
fistps
pop
inc
pop
stos
inc
out
sahf
fdivrl
and
push
lds
rolb
gs
lock
in
cmp
movsb
xchg
inc
aam
jnp
lea
mov
rorb
test
in
roll
push
or
and
ja
jmp
sub
mov
cld
xchg
call
shl
mov
test
mov
lahf
pop
insb
addr16
mov
pop
popa
adc
or
sahf
mov
jge
repnz
inc
out
xchg
test
sub
xor
mov
imul
mov
adcl
sub
xchg
sub
cmpsb
sbb
lcall
add
les
fadds
rclb
mov
ds
jne
cwtl
or
inc
inc
push
cmc
in
sbbb
stc
imul
jmp
adc
scas
lea
rcrb
gs
jp
mov
push
daa
outsb
cmp
subb
xchg
sub
jb
es
inc
cmc
xchg
pop
nop
pop
iret
jbe
rorb
xchg
mov
push
or
and
inc
iret
lock
sbb
mov
jmp
cmp
sbb
lods
std
repz
aaa
aam
imul
out
ret
cli
add
dec
jnp
xor
sub
inc
sbb
push
cmpl
andb
int3
cmp
xchg
lods
jbe
out
sbb
dec
insb
mov
std
mov
lcall
mov
add
es
movsl
mov
pop
or
push
push
das
sbb
mov
vcvtpd2psx
dec
inc
cmp
push
in
insb
add
dec
and
mov
ret
sahf
in
int3
xor
and
in
pop
js
add
adc
mov
jb
mov
dec
stc
and
mov
mov
and
jo
fs
push
push
cmp
inc
aad
call
fs
push
je
cmc
inc
shrl
xchg
jns
imul
jnp
jle
enter
push
mov
sub
lods
cmc
mov
cmp
imul
sub
notb
sub
adc
addl
loope
fsubl
xchg
shrb
pushf
cwtl
adcl
scas
fld
adc
mov
loope
push
cmp
lahf
jno
add
mov
sbb
mov
fidivrl
cmp
test
mov
sbb
mov
mov
cmpsl
insl
dec
punpckhbw
xchg
xor
clc
cmpsb
mov
les
call
int
pop
ljmp
xor
push
fiadds
pop
aas
lahf
mov
rcrl
or
sbb
iret
test
xor
dec
nop
sub
cmp
dec
mov
inc
mov
add
fs
dec
sub
jle
fildl
cmp
or
inc
out
jmp
mov
pop
mov
loop
das
sbb
js
and
fnstsw
and
fnsave
dec
lret
aad
push
imul
push
int3
fisubrs
push
xor
pcmpeqd
mov
enter
mov
jl
test
add
es
sarl
add
shrb
ret
fistps
xor
push
js
pop
mov
dec
sub
shr
mov
hlt
sti
aad
bound
cmp
pop
std
xchg
pop
jnp
inc
xor
and
fidivs
movsl
outsb
mov
pop
lcall
and
cld
out
push
inc
adc
out
lret
cmp
ja
imull
xchg
dec
addr16
xchg
and
fstps
push
pop
dec
mov
push
int
pop
dec
jae
aad
out
addl
jb
push
or
mov
addr16
loop
jmp
fsubl
ja
int3
shll
imul
dec
fisttpll
ret
add
pop
and
dec
outsl
test
adc
jno
addr16
popa
cmp
mov
mov
les
jno
loop
arpl
loope
ja
or
add
inc
shrl
fdivl
xor
stc
mov
shlb
cmp
repnz
popf
subl
sbb
loop
gs
cmp
cmp
popf
and
xchg
xor
sbb
inc
dec
stc
rcr
cmp
sub
xchg
pop
repz
sub
imul
aam
sbb
fcmovu
divl
mov
mov
pop
mov
sub
shlb
push
outsb
dec
test
dec
dec
pop
cltd
movsb
xor
dec
push
adc
mov
daa
test
push
loopne
add
xchg
mov
add
push
arpl
fxtract
stos
mov
mov
mov
adc
sbb
pushf
pop
test
lea
or
mov
or
pop
clc
psubw
xchg
pop
jne
test
lahf
mov
or
stos
loope
test
push
loope
mov
test
jnp
fs
pop
scas
adc
or
loop
xchg
xor
mov
addr16
scas
pushf
jp
out
mov
movsl
push
aad
in
mov
addr16
dec
divl
or
fstpl
cmpsb
cmp
mov
jl
mov
in
push
cmp
loope
sub
add
jae
mov
fldz
rcrb
faddl
call
jecxz
pop
movl
in
pop
ja
dec
jecxz
mov
cmpsb
dec
adc
fmuls
sahf
loope
sbb
cltd
scas
insb
test
sub
xchg
in
daa
xorl
repz
mov
sbb
sbb
xchg
and
aam
mov
cs
add
dec
cs
testb
cwtl
mov
mov
push
push
stos
cmpsl
adc
scas
test
jge
or
popf
aad
xchg
sub
lds
out
xor
mov
shr
inc
sbb
in
push
lds
aaa
sbb
sti
mov
jnp
sbbl
pop
nop
mov
cmp
xor
bound
pop
leave
call
cwtl
fadd
or
mov
push
mov
sub
xor
and
mov
dec
xchg
mov
pop
cmp
dec
mov
mov
sub
sub
pmaddwd
mov
inc
call
mov
jle
imul
gs
repz
add
and
add
inc
adc
insb
hlt
mov
sbb
pusha
nop
jl
dec
les
cmpsb
cmpsl
pop
sub
add
movl
clc
mov
cli
xchg
mov
inc
fcomi
fidivrl
data16
inc
pop
push
out
fcompl
shrl
or
in
mov
outsl
int
popl
pop
jbe
cmpsb
mov
push
add
cmp
add
out
mov
pop
dec
push
cwtl
lahf
in
movsl
in
mov
adc
and
add
lods
ljmp
mov
push
fadds
fcompl
push
adc
fwait
mov
fstl
pop
mov
mov
jmp
xor
xlat
jae
sbbb
xor
jmp
sub
sarl
mov
pop
mov
mov
hlt
dec
jl
test
inc
loopne
jg
push
xor
gs
sub
mov
jl
inc
lahf
jp
lcall
test
jg
xor
jp
ret
or
sub
cmp
sub
and
sub
or
xor
jno
sub
sbb
bndldx
lods
lea
cmc
clc
into
pop
sbb
lea
sbb
cmp
ds
jae
inc
in
cmpsl
mov
lock
adc
jmp
adcb
xchg
out
popf
dec
and
in
dec
lods
rolb
add
adc
imul
test
cmp
cmpsl
popa
sub
bound
mov
dec
fldenv
ss
js
testb
ret
dec
movsb
outsb
jb
jb
adc
imul
jp
dec
repnz
stos
jno
xchg
lock
cmpsb
fs
jmp
roll
push
dec
stos
xor
mov
xchg
sub
mov
mov
aam
arpl
in
jno
xchg
add
jecxz
or
adc
test
jae
lret
leave
cld
out
in
inc
adc
xchg
les
xchg
fists
inc
nop
into
ret
mov
mov
xchg
ret
jae
mov
leave
stos
fs
mov
pop
mov
adc
adc
rolb
mov
adc
ja
mov
xchg
fwait
cmp
inc
sub
sub
es
rorb
add
cmp
sbb
jl
mov
mov
push
push
outsb
cwtl
lds
call
js
push
sub
xchg
inc
push
xor
aad
xor
ja
push
insl
mov
rcrb
mov
xchg
ja
xchg
addb
pop
sahf
and
cmp
mov
xor
pushl
pop
arpl
or
pop
gs
xor
mov
xor
pop
test
xchg
shlw
addr16
fnstsw
shl
stc
mov
aam
jae
mov
mov
dec
jle
xchg
cwtl
shll
mov
dec
das
add
pop
pop
repz
mov
leave
aas
popa
jno
pushf
mov
push
sub
push
in
xor
or
addl
repz
xchg
imul
push
xchg
in
or
xchg
loopne
cs
mov
and
pop
push
shll
or
lods
stc
punpckhbw
mov
xchg
paddd
adc
xorb
icebp
and
mov
pushl
lahf
jnp
mov
sarb
mov
jb
and
cld
push
mov
or
mov
in
rcll
aaa
daa
fadds
sbb
add
daa
jmp
xor
adc
mov
add
xchg
mov
loopne
sbb
mulb
hlt
loop
je
test
test
fistl
push
bound
jns
cs
mov
pop
gs
ret
cld
xchg
xor
pop
push
xor
mov
aad
add
xor
in
pusha
bound
or
testl
dec
or
ss
inc
xor
andl
outsl
movb
arpl
adc
sti
mov
add
sti
xchg
inc
mov
lods
mov
mov
jl
fisubs
into
push
cmpsb
inc
xchg
inc
jecxz
int3
xlat
cmpsb
mov
or
dec
leave
or
in
leave
push
cmp
daa
jnp
aas
test
js
xchg
repz
dec
add
sbb
inc
push
lock
or
in
cmp
scas
jmp
inc
mov
sahf
imul
mov
dec
stos
outsb
mov
xchg
gs
xchg
mov
in
add
out
add
mov
add
mov
aaa
je
lahf
stc
cltd
fs
push
mov
pop
mov
ds
outsb
cs
es
mov
sbb
popa
inc
push
push
add
enter
add
cmp
cld
xor
loop
nop
roll
mov
inc
or
pop
sub
jo
out
in
iret
push
hlt
call
jo
inc
sbb
dec
sbb
sub
xor
pop
sbb
fwait
lret
stos
je
fisttpll
push
lods
cmp
mov
adc
inc
add
fwait
dec
xchg
cltd
pop
outsb
adc
scas
dec
dec
push
dec
lcall
pop
or
jecxz
rolb
sbbb
pop
lea
mov
bound
jg
movsb
mov
in
inc
inc
push
insb
loopne
movl
daa
ja
adc
inc
nop
add
imul
aas
ljmp
xchg
lods
inc
js
push
sbb
pop
addb
sub
mov
or
pop
mov
jne
ja
mov
cmc
movsl
mov
out
addb
cmp
xchg
mov
nop
xor
xchg
jp
mov
and
dec
xchg
jae
dec
iret
sub
and
add
mov
dec
and
outsb
add
outsl
pop
aaa
cli
test
daa
sbb
add
mov
dec
pop
movsb
cmp
mov
push
test
inc
pusha
fwait
rolb
out
popf
add
sub
jns
mov
push
xor
insb
pop
or
fimull
sti
aaa
mov
fidivrs
or
sub
rol
nop
mov
cmp
jge
shrb
push
cmpsl
shlb
sub
push
mov
add
arpl
add
dec
mov
neg
imul
pusha
out
icebp
add
cmp
pop
xchg
inc
and
pop
sbb
lock
lret
sub
std
andl
pop
rcl
inc
mov
pop
int
cmp
lods
insb
jmp
inc
nop
inc
add
dec
sbb
jnp
xor
add
ds
jns
std
mov
shll
aam
mov
in
lret
imul
addr16
or
movsl
leave
rcll
pop
hlt
mov
fwait
jo
das
mov
leave
sbb
xor
shrb
pop
leave
xor
dec
popa
cwtl
push
aad
aam
jl
push
adc
enter
inc
xchg
sbb
lahf
push
insb
fiaddl
push
inc
or
subb
sbb
cmp
fdivrl
add
mov
sbb
mov
outsl
jno
mov
icebp
pop
dec
add
lahf
movsb
add
out
test
daa
out
sub
repnz
add
ja
outsl
adc
xor
cmpsb
or
test
test
test
sti
stos
lods
jo
add
cmpsl
jb
pop
push
adcb
nop
push
in
popf
sub
pusha
cmp
mov
mov
je
cmp
push
jns
mov
std
frstor
sysret
daa
scas
bound
push
imul
fsubrs
pop
ret
jne
dec
mov
pop
pop
xor
push
add
lret
add
push
xor
popa
test
jg
xor
data16
mov
inc
addr16
test
push
pushf
mov
inc
cmp
add
push
fnstsw
into
in
inc
sarb
jne
std
push
jb
jl
aad
add
gs
xor
cmpsb
jecxz
inc
cmc
jbe
dec
dec
fwait
pop
sbb
fimull
and
xor
push
ljmp
adc
xchg
rclb
in
lock
or
int
or
sti
into
divb
leave
xchg
ss
mov
data16
ror
call
and
arpl
push
test
inc
and
pop
int3
ja
shlb
sti
inc
repnz
xchg
js
fsubrs
sbb
divl
in
hlt
mov
mov
sub
jne
mov
sub
mov
shlb
push
jae
lods
cmpsb
jnp
pop
je
pop
dec
ljmp
ds
dec
repnz
sbb
cmp
cwtl
add
jo
adc
xlat
or
add
int
out
imul
sbb
out
pop
push
movsb
data16
add
add
faddl
xor
inc
es
add
inc
push
mov
lret
pop
or
fcoms
mov
clc
cmc
in
scas
cmp
add
sbb
daa
rcrl
loopne
mov
and
inc
mov
push
mov
faddl
stos
bound
xchg
push
pop
int
add
shl
fisubs
fbld
stc
inc
fldt
loopne
jmp
push
shr
fiaddl
mov
mov
call
ss
pop
mov
jnp
enter
jp
cwtl
enter
dec
lahf
hlt
cmpsl
mov
test
push
mov
ret
pop
jge
xchg
paddd
aam
adc
xchg
adc
jge
mov
arpl
xlat
cmp
loop
push
pop
jge
mov
pop
or
iret
push
ss
test
jo
aam
cmpsb
ds
sub
test
cltd
sub
outsl
xchg
jno
fwait
adc
ljmp
jno
test
fnstsw
mov
jl
adc
or
mov
cmp
std
mov
mov
push
pop
lahf
jnp
push
daa
or
xlat
inc
inc
popf
subb
in
pop
add
add
push
mov
int3
fs
test
sbb
sub
int3
cld
mov
inc
and
mov
jg
inc
pop
jnp
imul
pop
data16
ss
add
cld
pop
outsl
pop
push
mov
int
insb
and
pushf
sub
push
rclb
cmp
jae
mov
jge,pt
into
cmp
cs
sbb
aam
subb
xor
or
or
aad
push
imul
or
cltd
jl
mov
mov
das
mov
ja
icebp
cltd
xlat
out
or
ss
dec
pop
movq
cmp
push
test
cmp
sbb
and
ret
movsb
dec
scas
addr16
mov
loope
int3
inc
mov
sbb
mov
xchg
icebp
xlat
mov
shrd
cwtl
in
or
cmp
push
int
add
push
pop
mov
clc
es
add
in
mov
xor
jns
cmpsw
cmp
ret
adc
pop
mov
fists
dec
and
inc
pop
push
lret
pop
ljmp
addb
inc
xor
push
repz
outsb
setl
lret
mov
adc
cs
sub
and
mov
clc
adc
movsl
cmp
jno
push
pop
push
lret
in
mov
sbb
test
push
inc
sbb
daa
pop
and
mov
mov
sahf
xor
in
xchg
or
ficoms
jnp
movsb
rorb
cs
pop
lods
push
bound
je
sbb
or
scas
mov
test
ja
and
adc
xchg
mov
dec
into
insb
cltd
and
pop
sub
fsubrl
lret
enter
aas
movsl
lea
es
jg
cld
sbb
sbb
repz
ja
and
mov
mov
jmp
popf
xorl
dec
lods
fnstenv
mov
dec
std
sbb
add
clc
pop
jl
jl
push
insl
int3
jmp
adc
test
push
sbb
adc
push
icebp
dec
pop
mov
xchg
clc
add
jo
fwait
mov
sub
dec
lcall
pop
insb
and
dec
mov
add
insl
xor
mov
mov
fsts
icebp
adc
dec
lret
mov
cltd
adc
xchg
mov
ret
fsubs
mov
push
push
jecxz
add
imul
loop
xor
and
add
inc
imul
insl
les
or
out
test
pop
icebp
js
sbb
les
jecxz
daa
scas
dec
aad
stc
repz
fcmovbe
mov
inc
dec
pop
mov
cmp
lret
stos
xchg
mov
pop
stos
into
es
jge
pop
xor
rorl
xchg
andl
out
out
popf
mov
loope
mov
mov
stos
mov
jo
mov
inc
sbb
add
mov
pushf
add
out
jne
out
aam
aaa
enter
adc
mov
jle
push
movl
xchg
push
js
movsl
std
push
sbb
sbb
mov
jle
fcoml
rolb
and
dec
loopne
xor
ret
adcb
push
call
addr16
dec
mov
repz
test
mov
mov
jg
or
aad
sub
fsubr
lea
ljmp
add
out
gs
fildl
adc
dec
dec
adc
sub
imul
pusha
stos
adc
adc
mov
adc
xlat
test
mov
push
pop
rclb
into
outsl
out
jno
pop
sbb
push
scas
push
jae
pop
inc
enter
jo
mov
push
dec
int
dec
shr
jne
push
xchg
sar
test
add
out
adc
add
mov
shr
std
movsb
lret
outsl
int3
xor
mov
nop
sub
stc
fdivl
adc
frstor
adc
push
rolb
add
out
dec
ljmp
leave
mov
sti
jno
mov
dec
mov
xchg
mov
and
jge
popf
push
sub
leave
cmc
pop
add
in
dec
xor
sbbl
lret
int
jl
adc
mov
jne
lret
mov
cld
inc
inc
dec
mov
shl
lret
xrelease
cmp
sbb
mov
sub
into
xchg
jge
cmp
orl
lods
mov
pop
jmp
insl
or
test
jno
jb
push
out
outsl
cmc
mov
inc
push
mov
jnp
pop
dec
pop
ja
mov
mov
loope
jle
sbb
test
scas
out
adc
dec
adc
pop
mov
pop
inc
add
enter
mov
hlt
add
imul
cld
inc
mov
addb
icebp
xchg
dec
or
movsb
push
pop
sub
xor
test
loopne
out
push
shr
sbb
jl
mov
dec
mov
pop
and
addl
pop
pop
ds
jae
pop
mov
inc
mov
xor
mov
dec
mov
adcl
in
push
sbb
mov
insl
pushf
cmc
into
ja
out
in
enter
fwait
pop
pop
pop
lock
call
fildl
loopne
int
xlat
jg
cmp
add
pop
popa
xor
xlat
mov
loope
or
pop
xchg
and
mov
mov
cmp
sbb
push
inc
push
jbe
daa
sbb
mov
mov
mov
pop
xchg
push
cld
enter
inc
mov
std
xor
js
mov
scas
xor
ds
dec
xor
xor
jno
adcl
in
mov
add
pop
das
scas
xchg
mov
in
or
bound
ss
or
popa
dec
mov
pop
lret
dec
hlt
xor
loop
lahf
jne
aam
lods
call
mov
cmpsb
jle
jo
cmpsb
jl
jge
lods
in
sti
dec
mov
pop
xor
push
fsubrl
cld
sti
and
cmpsb
mov
jge
jbe
mov
mov
cmpsl
fst
lods
addr16
mov
jmp
jnp,pt
or
and
cmpb
mov
xor
fistpll
fs
dec
xchg
int3
add
xchg
imul
mov
ret
aas
inc
push
lret
mov
pop
push
xor
or
leave
pop
lret
pop
and
dec
pop
dec
mov
mov
dec
jns
ds
xchg
sbb
lcall
mov
xor
addr16
fisubs
lods
sbb
lahf
lcall
aam
sbb
call
shrl
gs
xchg
xchg
sahf
mov
pop
insl
mov
int
lods
add
xchg
jle
mov
sti
aas
lret
icebp
pop
frstor
xchg
fstps
call
inc
sub
fistpl
pop
mov
in
cmp
inc
cmp
mov
ds
sub
push
cmp
mov
lret
imul
fdivs
ja
and
fcomps
mov
lcall
or
addr16
ret
pushf
int
mov
mov
nop
cmpsb
movsb
shrb
add
cmpsl
cltd
dec
jge
imul
ja
dec
adc
in
ret
add
jge
and
cwtl
mov
loopne
mov
add
jo
leave
add
jns
sub
and
mov
outsl
cmpb
inc
dec
loopne
test
lcall
loope
mov
pusha
sub
lret
adc
xchg
sarb
pop
mov
stc
sub
mov
cmpsb
inc
xor
mov
sub
dec
lcall
stos
imul
cmpl
popa
lods
push
inc
aam
arpl
popa
idivb
sbb
xchg
xchg
xor
ret
mov
les
pop
outsl
lods
rolb
fiaddl
dec
adc
bound
mov
scas
lds
xchg
lahf
pop
sbb
adc
fwait
fwait
gs
mov
xchg
mov
jb
bound
add
ja
decl
imul
push
insl
pop
xor
cmpsl
in
je
add
js
sub
hlt
imul
or
repnz
lret
fwait
arpl
divb
test
mov
jl
sub
mov
aaa
icebp
mov
ffreep
sub
scas
icebp
jle
lcall
shlb
jmp
pop
mov
push
dec
jmp
push
ret
inc
xor
xlat
sbb
in
push
sarl
push
pop
jae
pop
loope
mov
cltd
adc
hlt
sub
jge
cmp
xor
xchg
push
and
scas
out
repz
dec
icebp
sbb
push
mov
aad
test
mov
cmpb
xchg
jmp
mov
pop
test
cmp
es
insb
push
sbbl
cmp
sub
cli
push
movsl
shrb
xchg
lods
adc
negl
lret
cmp
in
cmp
push
jmp
outsb
loopne
xlat
js
test
push
mov
push
popa
inc
fs
sub
adc
incb
das
testl
or
cmc
outsb
or
in
mov
dec
push
out
sbb
inc
inc
mov
mov
add
or
and
notl
fmuls
fwait
or
mov
cwtl
or
add
int3
stc
in
dec
mov
mov
subb
xchg
filds
loop
push
sbb
ret
adc
movsl
lret
int3
pop
jge
adc
imul
mov
sub
push
sbb
xor
mov
pop
ds
imul
pop
or
sbb
and
and
cmc
bound
push
xchg
sti
dec
inc
xor
nop
xchg
jae
out
sub
or
andb
jg
xchg
pop
sub
pop
xchg
add
subl
push
xchg
stos
insb
sub
jo
xchg
out
and
xchg
jp
xchg
or
push
pop
and
xor
int
ficompl
cmp
fsubrl
rcr
xlat
or
xor
addr16
cmp
cld
pop
and
lret
loope
cmpsb
xchg
xor
xor
popf
push
inc
fcos
cmp
cmc
insb
and
inc
jg
repnz
jb
cmc
inc
cmpb
sti
mov
add
aad
in
gs
and
lahf
dec
fstpl
push
pop
xchg
mov
cmpsb
dec
add
hlt
rcrb
out
push
lahf
fcompl
add
jno
loope
pop
lcall
dec
popf
pushf
push
xor
mov
stos
ror
push
jp
scas
mov
xchg
mov
push
stc
sbb
push
pop
and
loop
cli
or
sbb
push
gs
dec
ja
inc
push
dec
dec
sbb
inc
jb
inc
test
fistpll
dec
bound
fcmovbe
ret
xchg
icebp
movsl
loopne
push
cmp
xor
add
dec
sahf
dec
add
ret
lds
pop
pop
add
xchg
add
jb
cs
push
loopne
sbb
cmp
adc
and
xor
insb
jo
push
lret
test
ljmp
or
lods
repz
mov
jmp
in
dec
xchg
inc
ficoml
mov
jbe
xorl
xchg
clc
dec
hlt
xchg
out
cltd
into
mov
or
std
cli
insb
xchg
adc
inc
repz
or
dec
dec
inc
fsubrl
dec
dec
das
pop
mov
pusha
gs
ret
push
mov
loop
dec
push
ja
push
pop
lahf
cwtl
cmp
xor
daa
fwait
insb
dec
pop
jns
adc
test
std
add
enter
nop
out
daa
mov
leave
sarl
ret
addb
cmpsl
negb
and
fisubrl
shlb
inc
cmp
ss
cmpsb
push
sbbb
pop
mov
fcmove
push
idiv
xchg
dec
or
pop
jg
cmp
pop
cld
dec
outsb
and
fwait
pop
repz
rcl
adc
dec
pop
fildll
cli
inc
pop
gs
ss
data16
pop
jecxz
pop
or
nop
xchg
repnz
dec
jle
sbb
popf
mov
setl
xor
sahf
and
std
aas
pop
mov
lea
ljmp
sub
inc
bound
cmpsl
adc
flds
jmp
ljmp
add
sbb
and
addr16
sub
adc
xor
mov
frstor
iret
outsb
pop
inc
lret
jmp
inc
cmp
and
jecxz
xchg
jp
daa
jno
mov
into
orl
mov
or
les
out
xchg
push
mov
cwtl
lahf
cmp
xchg
cmc
add
dec
xchg
xchg
movsb
mov
mov
int
xchg
std
sub
cmpsl
out
cs
into
inc
fisttpll
movsl
shlb
jg
into
and
or
sbb
cld
mov
mov
fs
xchg
xor
rcrl
shr
dec
into
or
push
inc
xor
aaa
lds
addr16
pusha
inc
mov
push
jno
lea
dec
cmp
inc
mov
xlat
xchg
mov
sbb
movsb
aaa
sbb
cltd
daa
rorb
incb
dec
and
addr16
pop
imul
mov
ret
mov
std
or
in
lret
mov
sahf
mov
mov
imul
xchg
int
xchg
mov
sbb
sbb
lods
jg
test
mov
mov
pusha
and
lret
rcrb
rorl
cmp
inc
out
hlt
out
dec
popa
sbb
imul
scas
rol
pop
faddl
mov
std
ret
loop
clc
mov
in
leave
jge
iret
mov
jge
jp
arpl
push
adc
icebp
cmpl
add
shll
inc
jmp
pop
push
mov
enter
loopne
push
mov
inc
shll
imull
pop
aas
mov
test
in
icebp
insl
push
sbb
lods
dec
cs
jo
mov
jg
loop
imul
push
mov
mov
mov
jne
pop
mov
xor
or
push
lds
sbb
add
inc
bound
orb
jb
jecxz
xorl
leave
lcall
mov
sub
pop
and
dec
xchg
aaa
das
lret
in
subl
or
adc
push
push
leave
push
ljmp
sbb
push
imul
or
xor
out
daa
sbb
push
sbbb
js
sahf
sub
loope
xchg
or
movsb
daa
adc
mov
xlat
test
rcll
cmp
cs
arpl
dec
subb
scas
negl
lahf
xor
cld
jbe
in
std
popa
lcall
icebp
jne
mov
movsl
jle
sbb
rclb
decb
push
repz
shll
pop
push
shrl
lcall
sub
jns,pt
dec
dec
mov
rolb
lods
jmp
test
add
inc
and
sahf
test
pusha
negb
daa
xor
cmp
push
rcll
cmp
pop
dec
or
xor
lock
jmp
subl
dec
shrb
shl
sub
push
mov
jmp
push
cltd
loop
mov
arpl
adc
adc
jo
jns
loopne
push
push
out
pop
inc
dec
mov
pop
pmuludq
jne
xchg
rolb
rolb
lcall
stc
mov
inc
push
push
mov
xchg
xchg
movl
mov
cmpb
dec
cmpl
push
push
inc
outsb
pop
insb
in
cltd
movsl
ret
add
outsb
in
movsl
or
paddusw
lods
and
mov
pop
mov
push
addr16
fidivs
and
mov
mov
jo
inc
shr
jle
mov
js
into
jg
call
out
lock
adc
shlb
push
cmpsb
ffreep
jnp
mov
add
lock
and
jmp
push
jp
lods
add
push
jo
and
sahf
rorl
mov
popa
fsubrs
jmp
xchg
sub
cmp
jae
pop
stos
sbb
ret
insl
das
mov
jp
xchg
sub
scas
xchg
cmpsl
mov
xchg
xchg
jecxz
fnstcw
outsl
es
xor
xchg
pushf
data16
push
add
ds
and
data16
pop
push
cmp
adc
pop
adc
adcb
fistpl
neg
mov
dec
mov
xorb
inc
out
outsb
sahf
inc
ret
xor
repnz
fisubrl
lea
push
jg
dec
adc
sub
pop
subl
push
sbb
mov
xor
push
enter
sbb
out
cmovb
or
mov
ss
cld
mov
pop
inc
jae
dec
mov
add
xchg
aam
pop
int3
fwait
pop
inc
cs
push
out
in
mov
adc
push
lods
jno
push
push
push
mov
sldt
call
push
pop
jne
xchg
stc
inc
adc
sarb
jbe
cli
test
inc
ss
xchg
out
popf
icebp
fsubrs
dec
jbe
mov
mov
mov
std
outsl
rclb
mov
xchg
lret
sub
mov
fbld
imul
ds
sahf
lods
test
push
test
dec
test
insb
xchg
pop
add
jne
adc
addr16
push
stc
or
mov
adc
loop
add
adc
cmp
lcall
mov
movsb
in
pushf
push
cmp
xor
sbb
shl
popf
call
mov
negb
scas
nop
sub
in
int
pop
in
repz
pop
aam
mov
xor
push
push
imul
aad
xor
enter
adc
xchg
bnd
push
out
cltd
jle
adc
ret
clc
or
movsl
xor
xchg
lods
dec
mov
sub
xor
out
inc
aam
xor
mov
and
xor
inc
test
mov
or
pop
push
into
jne
mov
loopne
pop
mov
add
and
icebp
pushf
sahf
stos
add
pavgb
mov
out
pop
cmpsl
inc
push
aad
xor
xchg
sub
xor
sarl
aad
jle
and
shlb
jle
fwait
data16
ja
lcall
jns
dec
jbe
adc
repnz
addr16
in
cmpsb
shll
or
pusha
insb
outsl
lret
shlb
xchg
roll
lret
cld
mov
test
pop
testl
dec
inc
mov
test
sti
push
stos
rol
cmpsb
loope
mov
ja
mov
add
ds
mov
call
adc
movsb
into
jne
sti
dec
imul
jp
fsubs
inc
add
jo
aaa
or
sti
int
mov
mov
push
add
inc
movsb
jb
and
rolb
test
jno
dec
shrb
out
xor
lahf
mov
mov
or
icebp
xor
lahf
movsb
test
dec
adc
mov
addr16
xchg
test
and
push
and
mov
dec
sub
loop
fldl
pop
out
lods
loop
mov
mov
sbb
sub
lret
fmulp
push
xor
pushf
pop
jg
or
popf
cmp
jae
jae
push
push
inc
sub
mov
pop
mov
cmp
jmp
inc
nop
or
mov
sbb
xor
and
mov
lock
mov
add
xor
push
fistl
in
int
sbb
ss
pop
mov
movsb
fwait
mov
mov
in
and
mov
sub
loop
sub
push
adc
add
pop
imul
ret
enter
fdivrs
in
cmp
xchg
hlt
out
inc
call
lcall
xchg
aam
cmp
int3
mov
inc
fists
pop
push
hlt
jns
mov
mov
movsb
dec
mov
xchg
lods
adc
cmpsl
fstp
pop
xchg
out
outsb
jl
pop
jb
stc
sti
or
or
xor
ss
pop
pop
lahf
shll
js
mov
test
jns
les
stos
pushf
es
aam
sbbl
lcall
push
add
clc
aaa
dec
popa
data16
xchg
stos
jbe
adc
leave
xorl
mov
sbb
ror
daa
push
rolb
jmp
push
jge
mov
ljmp
inc
dec
adc
pop
outsl
movsb
js
fdivrs
adc
insb
leave
mov
sub
lcall
xchg
jmp
cmp
sti
jne
pop
lret
xchg
lods
insl
int3
adc
dec
sbbl
fs
mov
fbstp
sbb
out
xlat
out
test
ss
xchg
inc
dec
cmp
sarb
mov
or
push
xchg
push
jnp,pn
test
fstpt
aam
aam
cmp
das
insl
imul
addr16
xchg
lds
outsl
shll
ss
mov
cmp
or
xor
into
hlt
inc
dec
leave
sbb
loope
lret
add
mov
dec
adc
pop
sub
and
xor
mov
adc
jo
aas
sbb
push
sbb
pop
pop
inc
adc
mov
adc
xchg
es
mov
sahf
push
ja
das
notb
dec
out
notl
mov
js
mov
add
cmc
out
or
mov
cmc
inc
test
data16
lcall
dec
out
dec
in
fwait
jbe
jmp
adc
rolb
push
int3
das
stos
cld
lcall
add
mov
jae
pop
adc
mov
sub
or
jb
sti
lods
add
xchg
sahf
mov
sub
pop
push
pop
clc
int
mov
repz
pop
inc
aas
and
cltd
mov
lret
push
fwait
cltd
gs
ds
inc
jg
add
dec
or
das
sbb
pop
mov
fldenv
or
mov
push
push
es
add
push
sub
dec
mov
mov
mov
push
fcoms
andb
out
loop
cmp
push
or
iret
insl
cli
jne
mov
and
sarl
push
sbb
lods
jno
and
int3
adc
inc
ret
dec
or
jbe
stc
dec
jle
mov
sub
xchg
mov
mov
sbb
lock
xor
leave
adc
icebp
mov
mov
jns
xlat
addl
daa
scas
pop
sarl
test
out
jb
test
add
xor
fimuls
pop
push
push
loopne
je
jno
jne
jne
shlb
inc
in
call
jb
test
insb
xchg
xchg
add
push
shlb
int
nop
es
insb
xchg
and
rcr
fsubs
xor
cmpsb
and
sbb
push
jge
push
sbb
test
xorb
scas
or
mov
pop
xor
sbb
xchg
fcoms
jb
fistl
rclb
or
pusha
imul
jnp
je
mov
nop
outsb
push
subb
movsl
pop
mov
insb
popa
push
jne
arpl
cli
inc
jne
out
ljmp
out
or
inc
mov
in
loop
dec
cmpsl
xchg
adc
sahf
jmp
cmp
xlat
pop
cmpsl
mov
orl
daa
lock
mov
pop
sub
sahf
cs
pop
pushf
jl
adc
cmpsl
loop
sub
aas
mov
test
ja
dec
cmc
xor
sbb
and
and
cld
out
movsl
ret
jmp
orb
test
lock
loop
mov
dec
call
ja
subb
xchg
addr16
jg
pop
or
sub
pusha
xchg
inc
stos
rol
ficoml
adc
jbe
push
pop
push
stos
and
jle
pop
pop
adc
sbb
stc
mov
xchg
and
inc
inc
leave
lret
cmp
cltd
pop
cmp
inc
lcall
mov
mov
and
pop
mov
iret
inc
nop
mov
ja
insl
outsb
std
std
xchg
cltd
inc
jno
xchg
cmp
xchg
es
dec
int3
ljmp
pusha
push
fists
push
and
test
repz
ja
cs
dec
subl
gs
xor
pop
lea
jae,pn
sbb
and
push
jae
ds
xor
je
mov
loope
inc
aam
enter
cwtl
clc
cmp
std
pop
and
dec
dec
dec
add
ds
aas
mov
mov
inc
sbb
jecxz
and
inc
test
mov
inc
mov
adc
pop
sbb
nop
out
pop
rclb
xor
aas
mov
std
pop
jno
jge
shl
pop
dec
daa
push
out
push
fimuls
mov
pop
mov
nop
mov
clc
test
pop
pop
push
rcrb
push
and
inc
xchg
xchg
cmp
add
or
addl
cmp
bound
adc
dec
popf
xor
mov
data16
jl
sbbl
aam
shrl
mov
sbb
or
mov
lods
push
xor
lahf
dec
push
loope
mov
add
in
jno
mov
in
cs
jo
out
mov
add
fimull
sbb
stos
pop
cmp
dec
mov
mov
jge
add
jnp
or
sbb
mov
cmp
pop
push
popf
fimuls
push
mov
dec
xchg
cli
scas
or
push
add
mov
inc
jb
aam
mov
inc
jb
and
dec
push
int
push
imul
or
jl
jmp
xlat
xchg
imul
sbbb
dec
outsb
imul
add
and
lret
mov
loopne
add
jno
inc
mov
lods
inc
pop
aad
mov
sbb
mov
and
add
std
push
test
and
cmp
add
pushl
mov
or
jae
jns
es
insb
stos
arpl
lcall
std
adc
mov
jbe
lods
mov
pushf
outsl
rcll
and
sahf
cmpsb
stos
mov
inc
das
xor
sub
xchg
mov
xchg
dec
add
in
dec
stos
loope
movsl
sti
add
hlt
sub
sbb
xor
popa
push
push
adc
mov
sub
xor
test
das
push
jp
mov
xchg
xchg
popa
inc
lahf
cmp
xor
pop
inc
ljmp
jg
push
mov
mov
test
loop
dec
cmpsl
dec
push
in
jae
xchg
and
repz
fidivs
mov
sub
adc
lea
sub
dec
inc
aad
xchg
data16
ret
dec
dec
fs
das
mov
ret
sahf
into
sbb
imul
push
adc
gs
dec
aam
jg
mov
cmp
aas
sub
call
xlat
stc
cli
mov
or
iret
ret
mov
pusha
adc
jne
mov
pop
addr16
cmpsb
adc
dec
or
sar
sbb
incb
filds
hlt
mov
int3
mov
ss
push
jmp
sbb
ljmp
rcll
stc
lret
xor
dec
cli
nop
xchg
rcll
js
cmp
outsl
inc
pusha
shlb
dec
jmp
ret
dec
jp
sub
ret
lahf
adc
sub
fldt
enter
scas
mov
lds
les
insb
aas
cmp
mov
and
add
in
xchg
mov
or
mov
and
cwtl
inc
jns
xchg
std
jl
test
jne
xchg
adc
xor
or
pusha
mov
call
aad
sti
mov
mov
nop
cmp
sbb
cwtl
jae
xchg
iret
push
enter
sbb
mov
shr
lods
dec
mov
std
sub
test
add
xchg
vshufps
and
inc
push
insl
and
adc
outsb
cmp
mov
push
cmp
and
mov
and
in
inc
cmp
fstpl
cld
jecxz
mov
cmp
negb
add
fcomip
sbb
xchg
sub
addr16
fildll
lret
and
in
inc
push
movsl
aam
cmpb
imul
xor
pushf
and
mov
dec
mov
cli
mov
jne
addr16
imul
nop
jne
cmp
movsb
pushf
xor
mov
sub
cmp
mov
xor
xor
push
fnstsw
aad
rorb
jmp
sub
inc
in
shll
and
add
jb
std
inc
rolb
mov
mov
mov
push
test
cmpsl
cmpsb
mov
sbb
fildl
fsub
xchg
inc
cmp
mov
adc
iret
lods
popa
jbe
inc
push
icebp
data16
js
rcrb
pop
imul
sbb
fldenv
and
lds
mov
sbb
mov
popa
stc
xor
cs
lret
scas
cltd
mov
mov
insl
jge
scas
pop
push
leave
add
shll
push
out
inc
add
inc
adc
sub
xor
pop
sbbb
push
push
fistps
pop
sbb
movsb
stc
xlat
data16
push
adc
jo
movsl
push
fnstenv
add
xor
push
icebp
or
divb
dec
or
aaa
stos
shll
xor
scas
mov
xchg
cmp
icebp
andb
cmp
arpl
xlat
icebp
lea
mov
test
inc
enter
sbb
sbb
mov
add
js
sti
jbe
mov
jns
mov
test
mov
xor
loope
cmp
inc
or
or
aad
jge
inc
pop
mov
pop
jne
sarb
hlt
and
repnz
idivb
out
inc
in
call
cmp
popf
add
mov
fdivs
mov
gs
cmp
leave
lea
sbbb
mov
pushf
xor
fcoms
cwtl
push
hlt
add
shlb
daa
xchg
out
mov
and
dec
inc
pop
jmp
std
fisubs
out
cmp
pushf
mov
add
fs
lret
js
xor
testb
sub
jnp
xor
scas
adc
dec
mov
add
movsl
fcoml
leave
pop
xor
fbstp
mov
sbb
inc
jnp
mov
js
stos
mov
iret
push
loop
mov
sbb
xchg
sub
shl
cmp
fdivrs
mov
jae
mov
lcall
and
sbb
cwtl
movsb
popf
loopne
and
pop
test
adc
inc
or
xor
add
lods
rep
popa
fisubrs
jbe
jp
jle
pushf
aas
add
pusha
hlt
adc
outsb
and
adc
xor
fsubp
cmp
and
cmpb
dec
lods
into
in
pop
add
pop
cltd
add
fs
popf
loope
icebp
call
dec
sti
adc
and
js
stc
and
cmpsb
pop
push
movl
or
in
mov
shr
js
inc
pop
in
fs
aas
jae
sub
stos
arpl
xchg
imul
adc
push
mov
sahf
xchg
scas
aam
mov
aas
es
je
notl
movsb
rcl
dec
sbb
int
gs
xchg
enter
insb
popf
push
mov
bound
sbb
cmp
cmpsl
fwait
divl
mov
add
jne
mov
scas
popa
or
and
testb
fwait
arpl
jmp
ret
ljmp
jmp
push
jmp
pop
xlat
in
add
jb
jno
mov
imul
xchg
jle
mov
dec
add
les
inc
jmp
xor
hlt
movsl
and
jb
push
and
mov
adc
and
repz
andb
push
dec
outsb
in
cmp
addr16
shrd
push
push
arpl
mov
mov
push
jmp
in
rcrb
fucomip
or
lahf
dec
pop
daa
popf
lods
ss
mov
sbb
mov
test
fcomi
jne
and
lahf
cli
adc
pushf
pop
xor
ret
test
cmp
outsb
fmuls
rcll
jae
sub
lcall
fs
inc
dec
mov
fldt
lock
cmp
out
les
rcr
or
enter
adc
add
nop
add
push
popa
xchg
loopne
xchg
adc
cmp
add
dec
scas
scas
fsts
addl
bound
stos
js
gs
sbb
std
js
in
dec
out
orl
sub
sti
into
movsl
ja
aad
mov
test
repz
sub
mov
xor
or
popa
inc
mov
fadd
sub
test
xchg
xchg
inc
subb
add
cmp
popa
mov
aam
in
cmp
mov
inc
test
arpl
lret
sub
out
cmpsl
dec
movsb
jle
icebp
std
loop
push
aam
sbb
lret
inc
or
iret
sti
jg
rorb
cli
ficompl
mov
popf
push
mov
dec
cmp
jo,pt
pop
dec
sbbb
jno
add
add
xchg
mov
je
cltd
ret
push
xchg
add
jb
xor
loop
fildll
pop
repz
mov
push
cmovno
nop
cmpsl
dec
out
mov
xor
pop
xchg
or
pushf
jb
pop
lods
sahf
mov
mov
lcall
mov
nop
fnstenv
sbb
fcmove
fsts
clc
dec
pop
lret
rep
and
iret
push
sar
cld
cmp
sub
cwtl
dec
test
sbb
mov
xor
bswap
jge
das
mov
xorb
mov
xchg
sbb
ss
clc
or
cmp
pop
xorl
popf
test
pop
bound
add
xchg
inc
push
dec
popl
adcl
std
xor
sbb
outsb
push
mov
or
ss
mov
jne
sub
mov
sub
in
imul
inc
shll
or
es
jmp
adc
lods
push
mov
xor
or
and
jo
pop
pop
cmp
pop
or
adc
mov
fwait
add
inc
add
loopne
or
stos
xor
out
jl
cli
jmp
xchg
jp
lods
jp
inc
out
cwtl
ja
add
cli
cmp
dec
adc
fisubrl
sub
lret
inc
adc
stc
mov
arpl
jns
jne
sbb
inc
push
adc
icebp
movsl
out
jle
idiv
push
lret
mov
or
mov
adc
jns
mov
int
sar
aad
insl
sub
inc
mov
mov
fcomip
ss
jmp
jge
orb
testl
dec
cld
or
inc
fldpi
and
and
lds
lea
jo
ja
fwait
adc
data16
cmc
cmp
mov
push
cli
cmp
xchg
cmpb
pop
and
outsb
andl
mov
data16
or
adc
repnz
jmp
sbb
lods
cmc
mov
movsl
xchg
xchg
lret
or
out
sbb
pop
inc
push
jne
movsl
mov
orl
push
cmp
push
fwait
out
lea
lock
mov
je
add
xchg
std
in
cld
lods
xchg
cmpsb
icebp
mov
xor
cmovge
js
out
enter
pop
add
inc
mov
cmp
maskmovq
daa
out
mov
jbe
dec
jecxz
insb
jg
cwtl
xchg
or
aaa
push
popf
aas
iret
fdivrl
xor
jns
loope
inc
nop
scas
cmp
in
jl
pusha
pop
add
insl
divl
cmp
call
sub
fs
push
mov
mov
fucom
sbb
pop
jae
push
cmp
inc
jg
pop
mov
pushf
rcll
call
sub
dec
xchg
out
test
fbld
pop
add
and
jb
inc
fsubrl
outsl
lcall
pushf
lods
popa
int
mov
in
scas
xchg
xor
pushf
test
imull
push
mov
push
or
ficompl
sub
pushf
test
pop
dec
aam
mov
and
ret
std
xor
in
sub
inc
test
cltd
add
lock
mov
push
jmp
out
cmc
push
movsl
scas
pop
nop
sbbb
or
clc
out
mov
cwtl
sbb
into
xchg
cmc
into
lret
and
inc
lds
inc
adc
pop
and
sbb
jns
mov
daa
inc
jbe
fisubs
sub
movsl
mov
pushf
adc
stc
add
adc
loopne
out
xor
insb
fs
leave
mov
aaa
add
lods
mov
or
fsts
push
jl
add
sbb
xchg
jnp
call
popa
cmp
psrld
push
ss
sbb
out
int3
sbb
daa
sti
in
jae
dec
insl
call
adc
push
mov
fs
stos
ja
movsb
push
push
rolb
xchg
mov
ss
inc
cwtl
or
es
dec
orl
mov
xor
sbb
mov
inc
add
adc
sub
jne
lods
lods
and
dec
mov
inc
push
and
nop
pop
popl
inc
sbb
xchg
jb
stc
mov
mov
fdivl
inc
add
fwait
repz
pop
xor
cmpsl
loop
test
and
adc
in
je
add
xchg
jl
lret
sub
imul
inc
dec
xchg
test
repz
mulb
sbb
rorb
pop
sub
loop
inc
ss
rcrb
popa
dec
aaa
mov
nop
test
insb
sub
ljmp
mov
fsubr
in
pushf
mov
adc
sti
mov
push
mov
stos
mov
je
out
inc
adc
xchg
adc
mov
jb
xchg
jecxz
jmp
xchg
pop
sbb
jo
mov
mov
push
enter
jp
add
adc
mov
push
pop
sbb
jbe
sbb
imul
data16
loopne
xchg
repz
jno
inc
mov
inc
loop
stc
mov
jmp
movsb
call
movl
xchg
push
out
push
jle
jno
mov
dec
mov
out
lea
ss
ja
out
mov
mov
xchg
js
ss
xchg
xor
and
nop
mov
arpl
pop
pop
dec
jp
int3
rorl
jecxz
inc
stos
cmp
mov
ja
int3
in
mov
fdivrs
sub
or
bound
pop
push
outsb
das
pop
sbb
call
sub
add
dec
sbb
push
out
push
out
imul
mov
jle
cmc
test
mov
movsb
inc
in
xor
shlb
mov
push
and
sbb
jg
faddl
push
inc
sahf
mov
out
mov
sarl
mov
dec
push
jl
xor
sub
xchg
cmp
fwait
test
out
stos
push
cli
sbb
mov
push
cmp
adc
adc
test
mov
pop
sbb
inc
xchg
and
adc
xor
ret
mov
ss
mov
xor
push
mov
adc
or
sbb
pusha
push
xchg
pop
xor
xlat
jecxz
sbb
dec
cmp
in
imul
lret
aam
rorl
mov
lods
dec
outsl
adc
test
in
test
lock
lods
negl
sti
hlt
sub
es
inc
iret
mov
xchg
xchg
sbb
push
adc
push
jg
cmc
or
fldl
and
sbb
loope
push
push
gs
in
lock
or
loope
pop
push
pop
and
inc
bound
pop
aam
in
subb
and
scas
pop
add
xlat
cmp
sbb
xor
mov
sahf
les
mov
mov
mov
in
inc
cwtl
lahf
andl
add
enter
cmovge
mov
jle
adc
lahf
or
scas
sub
mov
or
add
xor
add
test
xchg
dec
stos
jbe
fcompl
pop
add
push
xchg
les
adc
jnp
and
fildl
and
cltd
push
icebp
call
rcll
jg
or
cli
mov
sub
lods
addl
add
outsl
stos
in
sbb
fistps
iret
enter
inc
pop
stos
sub
xor
push
nop
out
mov
dec
xchg
int
and
jae
in
movntq
aad
xchg
pop
call
ja
mov
adc
loope
mov
mov
hlt
push
outsb
adc
std
xchg
rorb
mov
push
mov
insb
lock
push
cmpsl
xchg
xacquire
iret
mov
js
pusha
test
cmp
dec
dec
fbstp
testl
imul
imul
push
lahf
cmc
push
inc
push
mov
iret
orl
mov
xor
cmp
fmuls
cmp
sbb
ret
xchg
lea
daa
dec
in
add
pop
push
jmp
mov
in
cmp
movsb
mov
shll
and
inc
addr16
int3
and
fnstsw
sbb
push
jne
cmpb
je
push
mov
cld
decb
push
scas
jecxz
mov
dec
and
loopew
mov
daa
lcall
insb
dec
xlat
ficomps
lret
mov
adc
sbb
test
clc
or
mov
add
lret
loope
jg
mov
nop
inc
test
inc
add
andl
sbb
mov
xlat
jae
xchg
out
pop
test
ja
mov
push
xchg
mull
enter
nop
jo
jnp
inc
mov
adc
or
aam
jmp
stc
or
es
or
or
arpl
pop
mov
xchg
mov
lret
xor
xchg
outsl
or
sub
imulb
push
sbb
inc
popf
pop
in
or
testl
pop
push
shlb
xor
cmc
and
paddd
hlt
pop
cmp
dec
mov
pop
pusha
add
or
sbb
inc
jb
xchg
sub
test
in
xchg
test
mov
sbb
xchg
cmp
and
xchg
sbb
jecxz
pop
pop
jo
sub
sbb
sbb
mov
sti
cmc
adc
lods
cmp
or
pop
add
jge
lock
cmc
mov
mov
mov
xchg
jbe
add
sbb
je
std
mov
ret
adc
dec
test
call
test
aad
adcl
push
ljmp
int
sbb
dec
inc
ja
hlt
mov
jnp
inc
dec
cmp
xchg
les
add
sbb
xchg
or
mov
mov
xchg
sar
sbb
xor
out
jg
ss
push
in
mov
mov
loop
add
es
loopne
xchg
cld
pop
adc
je
lret
jb
jnp
je
pop
jp
mov
fldpi
shrb
fdivl
popf
add
in
cvttps2pi
jae
les
sub
lods
xchg
aas
leave
xor
cmc
xchg
sub
roll
adc
jp
call
movsl
cmp
cmc
push
jl
mov
mov
fwait
xlat
shll
jae
sbb
sarl
mov
rcll
mov
pushf
in
xchg
ret
out
inc
jb
dec
mov
iret
hlt
lahf
jg
mov
dec
push
push
xchg
mov
mov
lahf
dec
mov
call
negl
das
mov
pop
lds
inc
sahf
fstl
in
mov
sahf
xchg
cld
jmp
orb
loope
push
adc
adc
push
cmp
mov
jge
lret
push
cmp
add
xchg
sbbb
adc
sub
mov
and
mov
decb
or
or
jge
stos
scas
fbstp
test
shr
mov
mov
lret
or
cmp
push
mov
mov
mov
cmpsl
hlt
fnstcw
mov
jle
in
lock
insb
fidivrs
pop
dec
scas
es
mov
clc
fiadds
jmp
iret
cmp
mov
aam
rcl
lods
outsl
xchg
mov
lock
fidivl
test
sub
jb
adc
xchg
pop
add
sarl
push
out
add
inc
jno
mov
cmp
popa
ds
addb
inc
jbe
dec
cli
cmpsl
int3
add
pushf
rorl
inc
daa
ja
sahf
lds
pop
je
pop
lret
fstpl
stc
movb
sub
and
shlb
add
sub
das
test
mov
fmulp
add
int
mov
sbb
in
add
and
add
xor
add
cmp
sahf
lods
int
test
xor
out
xchg
lea
jns
or
into
pop
mov
jnp
sub
dec
jae
js
enter
jle
jns
push
es
xchg
add
sub
cmpsb
outsb
pop
in
cwtl
jl
ss
mov
inc
xlat
gs
fcomps
scas
iret
mov
sbb
inc
sarb
loope
sbb
lds
popl
rcrb
inc
nop
out
lods
mov
jmp
inc
mov
jp
mov
pop
jne
mov
ljmp
cmp
int
aad
je
stc
xchg
lds
repnz
sbb
sbb
adc
negb
cld
fldl
push
enter
inc
nop
cmp
outsl
inc
xor
push
ficomps
out
je
sti
fadds
shr
movsl
mov
int3
jl
xor
cmp
je
pusha
repnz
mov
dec
outsb
jns
out
or
and
fnstenv
xor
jo
sti
les
imul
popa
jne
jnp
push
add
lcall
cmp
scas
mov
repz
mov
ret
mov
jne
pop
pop
inc
xchg
and
popa
pop
mov
and
ret
lret
pushf
mov
mov
ljmp
stc
push
add
xlat
inc
and
xchg
cltd
mov
gs
adc
lret
mov
jne
xlat
test
jecxz
pmaxub
jae
push
insb
or
mov
and
inc
mov
push
adc
sahf
notb
jl
cwtl
jg
cwtl
rcl
iret
call
pusha
sbb
insb
dec
aaa
mov
shll
or
movsb
insl
stc
aaa
pop
mov
int
cld
and
jno
sbb
xor
inc
mov
inc
adcl
dec
xor
lcall
aas
enter
pop
pop
or
icebp
insb
sbb
or
jge
adc
nop
add
cld
mov
lea
mov
rcll
icebp
mov
loopne
popf
movsb
pusha
aas
sub
shll
sbb
push
and
xor
sti
repnz
insb
jl
stc
inc
push
sub
aam
sbb
andb
xor
xchg
std
and
movsl
jmp
cld
lret
enter
add
loope
xor
aad
add
data16
repnz
cmpsb
shrl
aam
xor
mov
xlat
add
inc
leave
insl
mov
mov
sub
rcll
push
jge
pop
subl
inc
dec
outsb
test
cwtl
daa
jb
lods
add
sti
int3
sbb
les
push
cmp
stos
sbb
and
mov
jae
enter
push
and
and
add
add
lret
adc
lret
sbb
mov
stos
lcall
inc
addr16
push
rol
test
out
or
add
dec
mov
and
xchg
cmp
insb
jge
jns
mov
test
int
inc
arpl
adcl
ret
leave
pop
jne
pop
pusha
fiadds
mov
cmp
into
mov
loop
cld
pop
sub
addb
lea
inc
mov
leave
pop
xchg
insb
lcall
aad
pop
sub
cld
cmpsb
aam
sbb
mov
adc
sti
mov
loopne
adcb
and
ret
stc
std
mov
repnz
xor
mov
arpl
and
sbb
fsubs
lret
and
adc
iret
and
stos
lock
fiaddl
xor
xchg
xchg
mov
lret
or
jno
ret
in
xchg
insb
aam
mov
xchg
in
jbe
sbb
scas
imul
decb
xor
sub
js
mov
xchg
xchg
mov
mov
xlat
addl
mov
rolb
adc
sub
pop
inc
sahf
in
in
sub
jmp
test
mov
movsb
dec
arpl
mov
ficoml
xor
lock
xchg
lods
movsb
jecxz
jl
mov
push
mov
pop
or
mov
iret
fcmovnb
repnz
dec
daa
pop
test
dec
jp
sub
push
pop
xor
cmp
jne
sub
jg
out
cmp
jmp
negb
mov
pop
scas
popw
dec
lea
push
sub
stc
mov
es
sbb
dec
push
and
lods
sbb
push
scas
cmp
pop
push
fcompl
aaa
cmp
xchg
lahf
popl
int
xchg
stos
movsl
fstpt
mov
push
popa
or
leave
outsl
imul
imul
stos
xchg
pop
lods
jno
mov
mov
jmp
aad
scas
xchg
adc
ret
and
mov
ljmp
test
and
roll
daa
shrb
inc
movsl
ljmp
xor
mov
dec
inc
stos
pop
outsl
fucomip
jno
dec
mov
adc
xchg
mov
adc
subb
push
pop
jbe
out
adc
inc
and
jb
mov
or
mov
enter
cwtl
sbb
inc
jl
stc
lea
lds
clc
mov
imul
lods
scas
or
fldt
test
jb
ja
cmp
je
adc
subb
test
pop
lcall
mov
push
out
cmp
punpckhbw
or
aam
sbb
push
adc
jg
sbb
add
mov
xor
pop
testl
xor
pop
mov
sbb
adc
jno
sbb
out
outsl
scas
ljmp
cmpsb
loop
cli
pop
out
mov
sbb
lret
lret
lcall
mov
xchg
cmp
mov
in
push
push
popa
fucomp
or
icebp
mov
jmp
frstor
jle
inc
imul
mov
sti
in
ret
ret
or
daa
pop
dec
aas
daa
mov
inc
negl
rcrl
scas
pop
ror
fildll
flds
cs
outsl
shlb
cmp
push
sar
adc
lea
dec
sub
push
sbb
mov
push
lcall
push
mov
mov
mov
xor
mov
or
inc
jmp
jl
pop
cmc
xor
cmp
leave
jbe
cli
test
xchg
les
ret
lods
lcall
pop
filds
add
lock
xchg
jns
iret
xchg
mov
nop
xor
cmc
inc
leave
cs
push
dec
push
cltd
ss
push
test
pop
jg
xor
sahf
xor
dec
rcr
jns
adc
mov
pop
cmc
mov
cmp
mov
dec
mov
or
sahf
jge
cmp
xchg
popf
mov
and
mov
call
jb
outsl
andb
mov
sbb
test
scas
faddp
mov
stc
insl
xchg
sub
xor
inc
mov
inc
cmp
dec
jns
flds
inc
call
or
adc
nop
xor
es
and
inc
mov
inc
outsl
mov
or
push
dec
scas
faddl
out
mov
push
std
loop
jmp
or
or
lods
sbb
test
stc
popa
mov
xchg
or
outsl
jg
xor
lcall
cld
movsb
je
popf
loope
xor
or
andb
dec
ret
shlb
rcr
fucomi
mov
movsl
jae
cmc
shll
cld
xlat
mov
or
std
xlat
jae
idiv
add
push
jns
mov
in
xchg
lret
bound
in
add
or
out
ret
mov
fcom
lret
sbb
mov
ret
pusha
xlat
mov
ret
adc
mov
fdivrl
int
int3
mov
push
mov
inc
sub
add
lods
rcrl
mov
mov
mov
mov
mov
and
stc
test
and
cmp
mov
adc
xor
or
stos
pop
dec
xchg
sbb
and
enter
lods
xchg
jmp
repz
push
add
push
scas
not
hlt
pop
push
and
or
addr16
cmp
lret
push
or
mov
add
cld
lahf
sub
out
xor
pop
cmp
or
adc
ss
shrb
push
cmp
ret
jno
bound
pop
fldcw
mov
jmp
xchg
push
or
xor
shrd
cmp
dec
sbbb
ret
jo
fisubrl
xor
std
pop
std
or
cwtl
shr
ds
cmp
fwait
push
cmp
inc
pop
mov
mov
jb
jecxz
ss
loopne
xchg
mov
lods
rol
mov
daa
pop
xlat
push
mov
je
xchg
ret
or
sbb
es
push
stos
data16
cmpsb
jg
mov
xor
ljmp
aad
add
mov
xchg
loope
dec
cmp
jb
fxch
jl
lods
add
jns
ret
insb
int
popl
sub
and
ss
mov
into
into
stc
in
dec
mov
ljmp
sub
add
dec
cmpb
adc
mov
push
adc
addr16
sub
xlat
add
into
inc
cmpsl
out
xchg
push
insb
adc
or
lods
inc
popa
ja
adc
adc
pop
adc
pop
adc
xor
shlb
cs
adc
out
mov
out
xchg
mov
jno
insb
cmc
sbb
shrl
into
scas
repnz
cwtl
outsb
lods
jecxz
lea
xchg
int3
into
dec
gs
faddp
push
push
das
mov
data16
fcoml
shr
loop
xchg
sub
and
xchg
sbb
cmpsb
xor
lock
push
rcrl
ja
dec
outsl
outsb
shl
xchg
dec
pusha
cli
or
movsl
push
xor
subl
addr16
xchg
addps
xchg
mov
add
das
ds
cmp
mov
inc
idiv
push
int3
icebp
push
enter
repnz
jmp
inc
imul
xchg
jmp
test
adc
or
and
mov
mov
cmp
rcl
bound
movsb
jp
and
std
xchg
faddl
shl
in
sti
adc
mov
shl
cmp
mov
push
mov
cwtl
sub
and
lret
outsl
lcall
in
sti
arpl
add
mov
sbb
leave
je
mov
add
sub
jns
sub
add
or
pop
frstor
sbb
fidivl
mov
pop
sub
popa
adc
push
mov
mov
lahf
dec
xor
dec
dec
sub
dec
scas
into
jnp
fists
adc
lcall
sbb
sbb
add
and
adc
push
push
jl
mov
addb
sbb
xor
addr16
ret
ret
ja
inc
and
xchg
sbb
out
push
shrl
mov
into
iret
into
daa
jb
loopne
mov
sbb
and
cmp
xchg
outsl
dec
push
push
push
arpl
jge
xor
jmp
xchg
xchg
clc
push
ds
mov
enter
jbe
lea
add
mov
imul
sub
cmpl
pop
or
dec
mov
roll
scas
loopne
sub
adc
in
std
sub
pop
loop
cmp
rorb
in
adc
lret
mov
push
push
stos
fwait
dec
sbb
mov
jne
cmp
shrb
pop
mov
mov
and
in
sub
dec
imul
test
sub
add
mov
shrl
and
mov
jo
push
mov
inc
cmp
popa
cmp
aaa
push
mov
xor
push
cltd
repnz
imul
les
out
xor
into
arpl
sbb
mov
popa
int
push
out
inc
cmpl
or
ljmp
xchg
inc
sub
mov
mov
ficomps
ljmp
mov
ja
and
mov
imul
jns
flds
inc
push
aas
pop
inc
mov
pop
inc
fs
mov
clc
dec
pop
fldl
add
add
outsl
imul
inc
ljmp
jmp
loope
mov
add
push
pop
jae
sbb
sbb
adc
frndint
fcmovnu
mov
in
mov
mov
loop
insl
cmpsb
hlt
lahf
jp
and
rcr
inc
xchg
add
fsubl
cmp
xchg
and
xchg
mov
clc
repz
and
pusha
ds
jae
test
aaa
bound
sub
adc
push
loop
aam
dec
jl
fistl
loopne
lret
mov
cwtl
sbb
pop
fisttpll
jp
pushf
arpl
adc
push
pop
cmp
lret
xchg
ret
pop
pop
xchg
into
jg
out
loopne
sub
and
inc
mov
rcrl
mov
cmc
dec
cli
jg
xor
inc
ret
add
xchg
fistpl
cmp
sti
add
cltd
pop
dec
popf
test
xor
cld
dec
stos
inc
xor
mov
bound
xchg
mull
mov
xor
nop
imul
or
inc
mov
popa
pop
and
scas
fists
pop
outsl
push
mov
stos
xor
push
jge
mov
insb
sarl
fiadds
imul
inc
lea
adc
xor
add
les
xorb
cmpsb
stc
mov
mov
or
cmp
test
dec
pop
adc
xchg
jecxz
fists
mov
es
popf
cmp
fstps
and
cld
faddl
xor
ret
mov
xor
sbb
inc
adc
xchg
mov
jecxz
lret
movsl
dec
or
in
add
jp
jne
lods
sub
xor
dec
in
cld
aas
aam
imul
add
add
cwtl
sbb
push
daa
mov
jecxz
cld
dec
fs
push
fs
lock
sbb
in
mov
and
dec
push
flds
das
push
sbb
imul
mov
mov
lret
jl
les
xor
das
les
cmpsb
adc
push
sbb
push
add
jne
dec
xchg
movsb
or
popa
add
out
xchg
mov
lods
sub
lea
lods
pop
add
xor
cmp
mov
pop
test
ficomps
es
mov
ja
roll
shll
test
xor
jae
mov
scas
jmp
dec
enter
jnp
or
scas
hlt
cs
mov
push
mov
adc
add
jb
mov
mov
lods
pop
jbe
sbb
mov
movsb
xchg
cmp
scas
xor
ljmp
scas
lahf
mov
mov
jge
inc
xlat
xchg
jnp
mov
xor
or
je
or
jge
sti
cmc
repz
hlt
pop
jno
ror
cmc
push
xchg
repz
hlt
dec
cld
sbb
aaa
pop
rcrb
ljmp
jge
jnp
mov
add
cld
mov
fnstenv
sbb
or
gs
xor
add
je
fdivrl
xlat
stos
insl
call
jg
hlt
subl
fisttpl
and
xor
add
fsubr
cmp
mov
repz
mov
loopne
jmp
rcr
repnz
jg
pusha
cmp
fs
repz
xchg
push
mov
imul
mov
fwait
mov
xchg
adc
cmp
sahf
mov
sub
mov
mov
xchg
and
ds
in
ficoml
scas
xor
ret
or
lea
test
lahf
dec
jb
and
cmp
dec
mov
xor
rcll
das
inc
arpl
mov
dec
push
lods
xor
jns
test
pushf
sbb
addr16
gs
int
out
jbe
incb
lods
out
jne
push
stos
inc
jg
int3
shll
mov
out
dec
mov
mov
inc
push
stc
mov
repnz
les
adc
lahf
xlat
pop
inc
jmp
fstpt
cli
push
sbb
add
sbb
dec
or
repz
and
aam
or
sbb
and
mov
pop
xlat
mov
std
or
push
data16
dec
mov
push
xor
cmp
pushf
cmp
orb
mov
mov
je
mov
fildll
daa
pop
sahf
inc
jge
and
pop
mov
sbb
cmp
stc
int3
sbb
test
rcrl
out
js
imul
cs
comiss
ljmp
fisubrs
insl
push
push
into
movsl
xchg
mov
insb
sub
roll
push
test
or
xor
fildll
pop
and
mov
popa
mov
adc
or
lcall
in
hlt
pop
loope
aad
adc
push
mov
add
cmc
jp
mov
prefetch
ds
cld
mov
adc
test
sub
dec
cmp
xlat
movb
or
popa
pop
adc
insb
cmp
dec
imul
mov
mov
fisubs
hlt
or
cmp
jle
gs
adc
loope
subb
out
dec
cmp
popa
adc
push
hlt
scas
pop
jp
outsb
rorb
xchg
mov
jmp
xchg
mov
cmc
lods
mov
push
lock
stc
fcom
sti
jge
movsb
hlt
cmpsb
rol
mov
dec
sub
dec
cmpsl
dec
cld
out
push
pop
jb
xchg
xor
es
into
sbb
dec
inc
adc
xor
lea
adc
adc
or
inc
fsubrl
cmp
push
lods
stos
in
nop
adc
jecxz
pop
sbb
sub
jns
lret
in
jb
push
shlb
xchg
or
ror
movsb
push
je
dec
push
rorl
cmp
cmp
rcl
add
ficoms
setae
pop
fnstcw
pop
push
aad
fisttps
cmp
mov
subb
dec
cli
cmp
clc
xor
cltd
adc
out
call
out
sbb
shrb
mov
and
shll
inc
push
pop
jns
pop
cmp
add
dec
jmp
add
fbld
repnz
repnz
pop
jbe
das
dec
sub
and
cltd
cmp
fwait
sub
fdivrl
imul
inc
scas
rorb
dec
or
sbbl
inc
std
pop
loopne
push
test
bound
dec
repnz
fmull
mov
dec
add
add
lds
cli
into
fiaddl
inc
jg
pop
pop
pop
cmpsl
mov
nop
in
pop
push
xor
jle
fisubrl
mov
leave
aad
xchg
push
cmp
mov
orb
or
xchg
les
icebp
mov
test
xchg
leave
outsb
ja
jg
push
xor
jb
inc
mov
sbb
cli
aas
shr
lock
push
cld
jb
jno
pop
add
lds
adc
pop
lahf
arpl
filds
jno
ja
rclb
add
rorl
ss
fisttpll
dec
scas
inc
insb
js
out
mov
and
sahf
xlat
sbb
mov
pop
movsl
sbb
out
jmp
cmp
add
cmp
cmpl
lods
mov
iret
int
or
popa
outsb
out
mov
loope
std
shll
aam
repnz
out
push
mull
dec
dec
jb
jge
out
out
jo
cmp
out
add
aad
xchg
mov
pop
loope
xchg
inc
addr16
inc
aaa
sbb
cmpl
jae
int3
xor
mov
cmpsb
mov
or
xchg
fadd
ret
jecxz
je
xchg
push
repz
dec
mov
mov
jmp
fldz
mov
xor
out
loope
sub
xchg
jl
out
insb
hlt
jle
hlt
or
lahf
xchg
mov
add
push
pop
push
int
pop
test
test
push
dec
pop
mov
xor
enter
scas
xchg
mov
stos
push
dec
pop
add
cmp
lods
dec
orl
jp
push
pop
cmp
std
mov
and
push
test
sub
add
pop
das
jl
popf
ret
lret
stc
ljmp
add
addr16
lods
scas
mov
dec
repnz
pop
push
and
adc
push
test
lods
fildll
pop
and
jnp
mov
imul
ljmp
jl
adc
dec
sahf
add
ljmp
out
push
sbb
add
fadds
pusha
incb
and
and
pop
psubusb
dec
mov
inc
data16
icebp
es
xchg
jns
jb
and
pop
scas
daa
xor
fisttpll
stc
andl
cmp
adc
xchg
adc
les
in
pop
xchg
add
mov
rep
mov
or
push
dec
push
cmp
into
pushf
fadds
mov
out
sbb
fidivs
mov
mov
pop
icebp
sar
in
mov
fcomip
sbb
sar
out
inc
jo
mov
xchg
fldl
pop
pop
addb
lods
dec
add
data16
cli
inc
repz
add
lods
cwtl
cmc
sti
jg
push
dec
and
andl
cmp
sbbb
je
lcall
iret
sub
add
icebp
adc
or
mov
mov
das
ret
mov
xor
shlb
lods
sbb
push
fcoml
or
gs
shlb
cmp
insb
cmp
mov
addl
mov
jg
sub
js
mov
shr
call
bound
outsb
aam
pop
sti
fldl2e
pop
jecxz
jmp
stc
ss
xchg
popf
rclb
frstor
xor
or
sbb
fucomi
sub
pop
lea
add
mov
testb
lret
fchs
cmp
xor
fadd
cmp
dec
mov
pop
push
or
xchg
add
fwait
adc
dec
xor
jb
jp
scas
fistpl
roll
popa
jb
push
xor
jl
or
jno
mov
and
add
in
inc
stos
outsb
movsb
mov
sti
add
xor
adc
ds
pop
cmc
inc
cmp
inc
jge
sbb
testl
xlat
sbb
cmp
sub
stc
je
mov
jg
xchg
cs
xchg
outsb
js
jg
int
dec
pusha
sub
hlt
or
mov
mov
sub
sub
mov
in
in
sub
lds
in
sbb
sbbl
cmp
jp
fnstenv
hlt
dec
sahf
hlt
out
je
lret
pop
xchg
adc
andl
out
das
fsubrs
jbe
mov
jmp
stos
mov
mov
data16
jns
mov
jns
adc
pop
dec
cs
sub
movsb
fnstcw
inc
test
adc
mov
into
sbb
clc
mov
subl
xchg
or
pusha
in
scas
lahf
or
cmpsb
and
xor
aam
outsb
popa
scas
out
xchg
out
add
repz
test
or
sti
or
adcb
orl
push
push
and
sbb
jp
leave
xchg
cmp
cmp
pop
decl
xchg
mov
daa
hlt
les
mov
repz
jbe
mov
sub
outsb
mov
subb
imul
or
add
xchg
ret
testb
jb
lret
mov
je
sbb
shll
fidivrl
push
lret
pop
jg
dec
jecxz
in
add
repnz
movsb
lods
in
xchg
add
into
sub
je
jo
inc
nop
movsb
jo
jp
cmp
or
fnstcw
rcll
mov
mov
dec
loopne
movb
iret
rcrl
cmpsl
pushf
std
add
stos
iret
xchg
setb
push
pop
dec
fidivrs
ja
dec
fwait
xchg
in
or
inc
mov
push
lret
cmp
clc
cmp
pop
cs
push
lcall
xchg
xor
or
push
aaa
ljmp
out
mov
mov
nop
sub
jb
inc
push
inc
arpl
jbe
pop
push
iret
add
cmpsb
xchg
idivb
mov
push
pop
daa
add
ds
lods
add
sbb
jne
jge
test
insl
stc
sahf
pop
mov
push
or
dec
mov
repz
add
rcrb
cmpsl
pop
xchg
or
sbb
and
int
cwtl
dec
adc
or
leave
jnp
mov
inc
in
adc
in
addr16
in
dec
xchg
or
inc
andl
sbb
mov
xorb
popw
lcall
pop
mov
lret
mov
push
sub
ljmp
mov
cltd
lahf
and
pop
gs
and
in
dec
and
iret
in
inc
in
jo
mov
lock
sub
dec
aam
jbe
sub
jnp
rep
das
xchg
jmp
xor
xchg
push
push
mov
addr16
idivl
outsl
adcl
push
pop
inc
jne
sbb
add
sti
lret
pop
hlt
fwait
push
inc
mov
das
test
cmp
mov
imul
mov
aam
and
test
jne
loopne
lods
in
fisttps
mov
dec
fists
mov
in
mov
push
cmp
int3
sbb
cwtl
in
leave
imul
scas
ja
jno
out
or
lods
cmp
sbb
sbb
adc
mov
add
cltd
push
add
inc
inc
push
xchg
jne
sbb
aaa
jmp
dec
andb
push
lcall
in
adc
mov
lock
xchg
or
cld
test
adc
aas
xchg
sbb
imulb
loopne
lds
scas
pop
outsl
sub
scas
mov
and
inc
and
pop
lcall
xor
push
in
cwtl
lahf
cmp
mov
pop
loopne
js
mov
imul
xchg
dec
push
out
lock
mov
mov
xchg
cs
cld
mov
mov
fsubs
push
mov
arpl
fistps
dec
dec
xor
incb
lahf
inc
cltd
pop
dec
cld
sbb
xor
mov
iret
aaa
pop
in
leave
in
or
pop
in
mov
shl
daa
push
andl
orl
scas
stos
mov
mov
pop
and
xor
sbb
add
mov
out
cmp
sbb
pop
movsl
pop
movsl
lahf
stos
push
or
pop
insb
adc
and
test
test
rcr
scas
xchg
mov
or
pop
test
movsb
pop
je
bound
ja
outsl
cmp
lcall
stos
or
shl
mov
dec
sbb
enter
hlt
xchg
fs
pop
sti
leave
ret
data16
in
hlt
mov
mov
frstor
mov
bnd
insb
pushfw
test
push
decl
inc
in
inc
mov
xor
and
popa
jge
inc
push
or
xchg
aaa
mov
ljmp
or
sbb
push
popf
mov
add
mov
roll
sbb
xchg
insb
out
sbb
xchg
xchg
jmp
or
cmp
mov
push
stc
call
adcl
mov
loope
fnstcw
enter
lahf
pop
sub
add
mov
lods
mul
and
je
cmp
jge
mov
jmp
das
lds
mov
pop
leave
mov
and
in
dec
loope
cmp
jae
xor
lds
pop
popa
lea
inc
shll
loopne
lret
insb
out
adc
cwtl
xor
popf
mull
mov
sbb
push
lea
mov
cli
inc
and
imul
jnp
or
cmp
inc
les
push
dec
addr16
cmp
and
push
mov
packuswb
inc
popf
cmp
fwait
or
mov
out
xlat
into
push
imul
popa
ret
ja
mov
adc
push
ret
mov
add
cli
jecxz
or
sub
fwait
mov
lods
js
sbb
xchg
sbb
mov
xchg
orl
mov
sub
jns
inc
xor
daa
gs
adc
lahf
dec
ljmp
pop
push
xor
push
rcrb
mov
pop
pusha
pop
xor
xchg
xchg
sbb
pop
shrb
jne
stos
sbb
das
sbb
mov
stos
cmc
cmp
push
xor
mov
mov
sub
inc
and
add
push
sahf
cmpl
xchg
push
lock
mov
ja
jecxz
cwtl
dec
cs
mov
testl
fnstsw
in
je
or
loopne
sbb
in
push
inc
mov
outsl
add
sbb
subl
fs
inc
mov
add
inc
mov
jmp
in
lds
sbb
push
imul
leave
mov
imul
movl
xchg
pushl
test
loop
xor
jmp
adc
call
jmp
mov
dec
inc
sub
mov
shlb
stos
inc
mov
mov
push
stos
lret
jmp
aam
outsb
mov
adc
add
outsb
popa
fidivrl
pop
cmpsl
pop
cmp
xchg
test
push
gs
in
mov
nop
jae
insb
sti
ss
scas
aad
addb
jecxz
pushf
aas
test
in
aas
fsubrs
mov
dec
cmp
addl
in
push
insb
pop
ds
das
out
mov
add
aas
test
add
sub
push
mov
ljmp
or
and
cli
jl
out
push
pop
and
stc
in
fiadds
mov
add
ret
popf
cmp
inc
adc
mov
test
pop
jnp
ss
jp
sbb
aam
nop
xchg
shll
cli
je
lods
das
ret
loope
jle
cltd
pop
fmuls
jmp
fldt
outsl
jae
rcll
push
mov
notb
xchg
je
fst
lods
je
sbb
ss
inc
or
and
jbe
shl
mov
ljmp
imul
sub
pop
pop
into
inc
mov
mov
inc
stos
and
aad
dec
mov
aad
test
mov
test
cmc
movaps
pop
fistpl
insb
mov
sti
adc
in
out
mov
push
aam
cmpsb
repz
mov
jae
fs
lds
add
xor
xchg
cwtl
cmp
stos
int
cmpsl
mov
push
add
repz
aaa
divl
and
out
lret
sti
mov
mov
fldcw
inc
mov
ja
out
and
jecxz
repz
cwtl
lea
adc
xchg
jmp
pop
stos
scas
xchg
adc
add
push
sbb
sub
mov
mov
jne
enter
rorl
decb
cltd
pop
push
xor
pop
insb
loopne
das
push
leave
movsl
or
loopne
in
inc
cmp
mov
test
movsb
ret
sub
add
sub
subb
and
leave
cwtd
lds
testb
pushf
insb
mov
call
mov
in
imul
movsl
aad
lret
les
popf
push
dec
mov
filds
js
cmp
aaa
movsl
sub
adc
lds
mov
loopne
sub
test
fldenv
mov
mov
jb
inc
scas
add
aaa
push
push
sbb
rcr
mov
jmp
inc
or
mov
insb
arpl
and
fldt
xchg
ljmp
imul
imul
hlt
pop
arpl
add
jmp
add
push
xor
sub
dec
xor
mov
push
lret
mov
sbb
sbb
lods
mov
loope
sahf
lea
mov
push
cmp
loopne
fldcw
enter
xorb
jp
into
lods
stos
hlt
test
jge
nop
or
push
movb
aam
test
rcrl
insb
mov
cmp
jae
cmpsb
mov
adc
push
mov
movl
mov
mov
stc
aad
mov
or
lods
loop
mov
andl
inc
cmpsl
adc
dec
repnz
mov
insl
pop
and
or
and
push
movl
sub
hlt
rclb
or
cli
adc
mov
ss
jl
push
mov
mov
test
and
add
ret
fisttps
lahf
xor
icebp
fldcw
lods
dec
add
add
je
cltd
insb
js
mov
cmp
test
ret
sbb
mov
icebp
rorb
add
imul
shll
jle
scas
test
lret
inc
inc
in
sub
lock
xchg
nop
push
lret
test
xor
data16
jge
arpl
out
mov
adc
cs
sbb
push
pop
jnp
push
adc
test
lret
xchg
fwait
push
fwait
cmpsb
test
mov
add
jmp
inc
lret
xchg
dec
out
xor
jl
js
mov
inc
jno
pop
pop
fwait
cmp
mov
and
dec
mov
int3
addr16
scas
pusha
hlt
dec
sbb
add
xchg
mov
mov
mov
cmp
gs
xor
je
movsb
out
fsubrs
repz
xchg
fimuls
jp
loop
jmp
push
nop
enter
cmp
push
sub
add
inc
add
popa
mov
movsl
das
pop
fsub
repnz
fiaddl
add
subl
xor
shll
mov
xor
inc
jg
xor
pop
sub
jae
pop
inc
imul
ss
inc
gs
jns
push
pop
jmp
jmp
sbb
jecxz
gs
jl
push
cwtl
in
cmpsb
std
insb
cmp
cmp
arpl
daa
sbb
mov
leave
scas
into
loopne
lcall
dec
fs
out
push
mov
mov
cs
jb
mov
add
xchg
xchg
leave
mov
xchg
xchg
int3
dec
jmp
and
adc
les
dec
loopne
dec
shrb
adc
fisubrs
outsb
hlt
jp
in
scas
outsb
lds
stos
mov
cmc
movsb
cmp
mov
fst
lock
insb
cmp
sub
scas
mov
popf
rep
icebp
lcall
xor
jp
test
in
lods
cltd
inc
rcrb
xchg
ss
pop
jge
or
cmp
out
fbld
adc
or
xor
in
popf
js
mov
mov
mov
cmp
sbb
push
dec
sbb
fs
popf
das
and
sbb
scas
inc
xchg
sub
and
sbb
jg
addr16
aas
stc
adc
ja
push
pop
movsb
cmpsl
icebp
mov
mov
sbb
push
cmp
push
push
cmp
pop
cmp
loop
pop
daa
mov
mov
clc
in
dec
and
test
cmp
jo
xchg
jp
jno
xchg
dec
iret
notl
push
xchg
mov
iret
lea
pop
stc
sbb
pop
test
popf
mov
xchg
push
orl
and
push
mov
sti
fnsave
pop
clc
in
inc
and
dec
push
adc
imul
mov
jmp
mov
push
mov
mov
aam
imul
mov
test
ja
push
mov
xchg
cltd
push
or
adc
push
sbb
mov
sub
int
push
mov
inc
inc
pushf
adc
enter
mov
pop
inc
adc
add
int3
and
adc
divl
in
mov
testl
cmpsl
fistpll
das
mov
adc
inc
data16
stos
subl
jmp
cmpsl
mov
aam
dec
lds
xchg
cmp
push
mov
out
sti
jns
pusha
xchg
sub
mov
popa
sbb
sbb
push
stc
mov
es
movsb
xlat
add
aaa
mov
loope
pop
push
fcomps
pusha
fisttpll
jae
loop
sidtl
dec
xor
lds
cmpsb
mov
lcall
dec
shrb
lea
orl
or
aaa
dec
inc
aas
jp
and
push
pop
cmp
pop
les
ss
mov
push
cmpsb
cmpsl
ss
inc
dec
inc
ja
mov
hlt
jle
pop
mov
xor
adc
push
leave
add
mov
mov
lcall
fsts
jge
cwtl
push
sahf
xchg
lret
iret
inc
jge
out
dec
adc
mov
and
imul
aas
imul
js
jle
cltd
pop
rorb
in
jno
addr16
cmp
push
outsl
clc
je
pop
inc
jb
lods
in
inc
pop
data16
and
push
imul
add
mov
pop
mov
push
mov
push
mov
fistps
push
and
push
jae
out
out
shrl
cmpb
push
imull
cmpsb
stos
mov
or
insl
pop
mov
push
pop
push
fsubs
pusha
dec
sub
test
sbb
jle
fcmovnbe
cmp
push
mov
sub
mov
jle
sbb
fs
xor
jmp
vandnps
dec
sbb
jnp
xchg
mov
dec
shlb
and
jnp
repz
add
xorl
je
cli
shll
jg
push
lret
dec
mov
jae
mov
inc
jbe
lea
in
arpl
jmp
cmp
dec
xor
cmp
xor
inc
iret
mov
in
loop
xor
cmc
or
jno
and
xchg
loope
repnz
test
mov
jae
mov
cmpsl
in
aaa
and
cwtl
pop
or
testb
mov
or
push
add
movsb
hlt
jbe
popa
jb
mov
es
push
jmp
cmp
mov
fnstenv
sbb
jl
xchg
pusha
and
incb
mov
push
js
aas
popf
push
jge
cmpl
pop
daa
stos
lret
adc
mov
sub
pushf
cmc
sub
aad
cmp
cmp
mov
pop
lods
popf
pop
adc
ret
lea
jg
cmp
inc
push
mov
std
popf
rcll
inc
jns
stos
jno
and
sub
jne
ja
push
mov
jne
mov
sub
inc
mov
push
out
mov
jns
inc
lods
cltd
jg
repz
ds
arpl
fs
adc
nop
and
in
cltd
cld
pop
addr16
es
dec
stos
pop
mov
mov
or
push
loopne
push
insl
lret
mov
jnp
shlb
xorl
mov
mov
jbe
or
adc
xlat
inc
dec
xchg
repz
xchg
aas
ss
das
cli
jae
fsubrl
testl
jne
imul
int
lods
mov
arpl
adc
pop
sub
repnz
cmp
or
pop
repnz
in
adc
gs
jl
push
mov
mov
inc
subl
xchg
mov
xor
pop
xorl
shll
imul
mov
sub
jmp
leave
test
and
lcall
jo
in
sahf
pusha
fmull
stos
and
add
jbe
adc
xor
mov
adc
shrb
jns
push
mov
mov
bound
cmp
rol
cmp
push
dec
xchg
xchg
fsubrl
jl
in
jp
daa
and
lcall
icebp
mov
mov
test
pop
inc
pusha
pusha
in
inc
std
dec
rclb
xor
sbb
fwait
cs
mov
adc
cwtl
js
add
movsl
xchg
push
jecxz
push
negb
rcll
scas
pop
movsb
adc
cmp
or
ret
add
pop
xor
cli
pop
in
fistl
push
sub
dec
outsl
inc
mov
out
int3
test
push
mov
pop
pop
ja
fs
test
sub
mov
loopne
mov
inc
daa
rol
cmp
jecxz
clc
popf
in
rclb
or
stc
pusha
outsl
das
or
mov
dec
jg
xor
push
aad
mov
add
daa
pop
mov
gs
pop
lret
mov
push
push
pop
push
add
cmp
mov
scas
outsl
xor
jne
sub
lock
mov
mov
add
adc
rolb
adc
aam
sbb
pop
movsl
jae
push
mov
lahf
out
testl
dec
xchg
mov
fcompl
sbb
xchg
outsl
clc
cmc
popl
mov
cli
mov
scas
mov
adc
leave
push
sub
or
in
in
cmp
pop
mov
mov
and
adc
dec
or
inc
inc
sbbb
fs
clc
add
popa
in
inc
xchg
ds
mov
pop
fimuls
dec
inc
pop
or
rol
xorl
movsl
add
scas
fwait
pop
or
push
dec
dec
mov
add
mov
mov
push
pop
or
mov
jno
push
dec
pusha
sub
fmull
jns
cwtl
fimuls
jno
mov
out
xchg
xchg
adc
pop
and
sbb
jge
lahf
stc
cld
mov
inc
andl
adc
pushf
fwait
mov
add
insl
dec
inc
sbbb
mov
imul
and
pop
imul
shrl
lods
xor
ja
pop
push
ret
and
cmp
lods
push
mov
lods
xor
xor
mov
push
out
mov
ss
cwtl
aad
pop
lret
fwait
inc
sar
out
inc
pusha
pop
andl
xlat
stc
shlb
dec
xor
adc
aad
jns
lods
and
int3
gs
pusha
push
rcll
add
out
incb
inc
stos
xor
push
call
fildl
lret
lock
adc
daa
jmp
inc
mov
jle
cmpsl
sbb
out
pop
popa
shll
pop
aaa
xchg
push
or
js
out
test
cmp
mov
cli
inc
jg
ret
dec
pop
popa
inc
cmpsl
int
mov
adc
shrl
sahf
sarb
lds
das
fcmovbe
call
xor
or
mov
lret
inc
mov
lahf
ss
xor
push
nop
pusha
je
adc
jnp
mov
sub
inc
jno
clc
sbb
jmp
push
and
xchg
jo
mov
inc
dec
add
loopne
popf
jge
xchg
lods
and
xor
sbb
int3
xchg
idiv
pop
mov
inc
arpl
add
mov
xchg
ss
dec
jno
or
arpl
jl
cmpl
xchg
out
jb
and
loope
aaa
lock
and
aaa
mov
mov
aad
cltd
xchg
or
and
push
and
sub
call
mov
mov
mov
std
adc
push
xchg
push
mov
data16
lcall
mov
and
push
sbb
dec
jl,pn
xchg
or
lahf
lea
dec
mov
adc
shlb
fs
insl
add
sub
addb
jg
mov
ljmp
in
mov
jb,pt
mov
lods
loop
dec
dec
pop
fists
arpl
mov
xor
push
into
repz
push
or
jmp
in
shld
mov
cmpsl
push
adc
mov
out
mov
dec
mov
or
ss
stos
mov
mov
mov
mov
hlt
jmp
xor
sbb
jae
outsb
xor
dec
jns
xlat
or
stc
sub
aam
cmp
mov
or
mov
popa
out
adc
cmp
jne
or
aam
lcall
insl
mov
sbb
mov
lods
test
insb
cmpsl
call
out
jae
push
test
and
jp
and
jp
cwtl
call
cmp
out
jl
jp
push
iret
jl
test
hlt
daa
test
pop
sub
xor
ficomps
and
mov
push
js
pop
jl
mov
fisubrs
jecxz
subl
add
push
fbld
jae
movl
pop
inc
lds
pop
dec
aas
xchg
xchg
sub
icebp
outsl
fldlg2
lods
xor
xor
push
adc
adc
fnstcw
adc
loope
and
idivl
sub
jmp
jne
shll
mul
imul
push
push
pusha
xchg
push
sbb
rcrb
stos
test
mov
lods
sbb
cld
xlat
mov
inc
cmpsl
or
jae
insb
xchg
mov
add
dec
scas
add
adc
mov
or
popa
and
cwtl
les
cld
cmp
cwtl
outsb
mov
aaa
mov
popa
sbb
test
sub
and
fistl
inc
ret
insb
dec
lock
sti
in
addl
jnp
rep
aas
xor
push
fldt
mov
xor
das
loop
push
add
mov
jb
jo
xor
rorl
add
push
xor
add
fistpl
cmp
sub
inc
dec
push
test
fcoms
mov
rolb
lea
xor
outsb
in
call
mov
sbbb
dec
fidivl
jge
or
xor
mov
int
add
leave
mov
xchg
and
jg
pop
out
fadd
or
fnstsw
repz
ret
add
pop
adc
and
fnstenv
push
fbld
push
jle
mov
adc
lret
loop
jle
iret
out
or
std
add
aas
fdivr
sub
fists
rorl
pop
mov
subl
enter
add
add
cmp
sti
dec
xor
add
adc
push
out
les
jmp
jmp
sub
shll
jge
sbb
adc
mov
jae
dec
mov
repnz
dec
cmpsl
add
scas
mov
fcmovnu
in
push
cltd
xor
fildl
std
xor
and
push
and
inc
cwtl
xchg
lock
add
fisttps
aam
ja
out
mov
add
xor
adc
js
insl
ja
jl
fwait
mov
push
fidivrs
add
add
cmpsb
or
xchg
imul
dec
sub
mov
xchg
adc
jns
push
hlt
sbb
stos
outsb
jae
lea
mov
dec
xchg
cwtl
fstl
mov
jne
rorb
in
inc
sti
movsb
in
nop
insb
cmpsb
pop
scas
cltd
cmc
push
leave
and
lock
or
sbb
or
inc
sub
mov
addb
insl
mov
lea
lods
and
xor
rcl
adc
adcl
cmp
stos
test
stos
adc
cli
sbb
ret
push
dec
mov
mulb
xchg
repnz
stos
dec
hlt
cs
sbb
bound
mov
add
push
sub
lcall
add
xchg
dec
sub
ds
mov
push
rol
mov
xchg
jno
cltd
fdivrl
fs
adcb
das
popa
iret
cmp
jg
enter
mov
adc
mov
fwait
pop
or
in
jl
popa
mov
arpl
mov
aad
into
jb
int3
adc
inc
fwait
movsb
mov
pop
lock
sub
and
into
and
les
jmp
pusha
inc
or
ja
mov
imul
jge
jecxz
test
xchg
jmp
out
pop
sbb
repz
inc
dec
mov
jbe
das
mulb
cltd
lahf
push
in
out
fdivs
das
mov
adc
or
addb
xchg
pop
sbb
cmpl
and
test
and
pop
jne
jg
jb
fimull
xchg
dec
ret
lods
mov
inc
sub
ja
jmp
cli
cwtl
pop
add
ds
mov
imul
fisubrl
adc
gs
add
inc
aad
push
leave
test
dec
adc
jns
jl
sub
pop
mov
sub
or
push
or
cmp
sub
fldl
sub
pop
sti
dec
aad
mov
inc
mov
jbe
cmp
xchg
inc
out
enter
leave
popf
js
cli
mov
int
fwait
es
adc
daa
add
pop
loope
xchg
cmp
xchg
inc
or
test
call
jmp
mov
add
mov
shlb
and
pop
stos
mov
xchg
loop
hlt
sub
xchg
addr16
test
test
pop
fidivs
push
test
push
dec
int
pop
xchg
push
mov
mov
and
mov
mov
mov
aaa
call
les
pop
arpl
add
and
sbb
cld
daa
sbb
dec
pop
pop
fildl
jl
jge
mov
loopne
push
mov
sahf
jne
ret
xchg
sub
sbb
lcall
xor
aas
add
inc
popf
fdivrl
xor
mov
insl
jecxz
jp
mov
stc
and
adc
cmp
adc
nop
sbb
jo
adc
pop
push
fiaddl
mov
xchg
fs
jae
jg
mov
inc
sub
add
and
std
dec
pop
mov
xchg
outsl
xchg
lahf
pop
fs
scas
fidivrl
mov
les
shrl
mov
subl
push
imul
pop
mov
and
repnz
rcrl
sbb
ds
inc
inc
mov
sub
lods
cmp
pop
xchg
call
xor
inc
dec
jno
pop
pop
push
mov
scas
inc
test
xchg
jb
add
in
or
mov
dec
fisubl
inc
loop
inc
inc
mov
test
add
push
shr
mov
adc
or
pop
icebp
jbe
addr16
rcll
xor
and
or
loop
pop
mov
sbb
add
xlat
inc
dec
movsl
call
push
dec
or
es
mov
inc
dec
sbbb
ss
xor
or
push
xor
sbb
pop
fwait
cmpsb
cmc
js
sbb
mov
bound
imul
pop
aas
in
icebp
inc
imul
add
inc
sbb
dec
hlt
or
arpl
adc
in
clc
rcll
je
add
sti
sub
rcr
inc
repnz
cmp
xorl
mov
daa
pushf
add
clc
dec
outsb
mov
jae
dec
testl
ret
pushf
xor
inc
inc
dec
add
lock
inc
xchg
mov
imulb
xlat
jbe
and
pop
dec
mov
pop
icebp
adc
adc
xchg
push
xchg
and
pop
out
test
jmp
cli
add
jbe
jno
test
mov
mov
nop
jb
xor
jnp
clc
rsm
push
xchg
mov
in
ret
mov
out
jp
dec
arpl
popa
loope
mov
inc
pop
subl
bound
int
xlat
push
push
xchg
test
jp
xlat
iret
inc
popf
mov
mov
sub
mov
je
leave
and
jbe
sbb
fstps
ret
in
mov
stos
pusha
mov
sub
fwait
movsl
and
lret
scas
call
pop
and
add
pop
out
xchg
repnz
in
lock
pop
popa
mov
addb
push
sub
xchg
dec
xor
loop
jnp,pt
cmc
mov
ret
lcall
mov
and
into
lret
cmpsl
in
and
pop
dec
inc
add
popa
xchg
jmp
push
call
jg
inc
jno
call
lcall
pop
xchg
jmp
and
repz
mov
arpl
cmp
sub
inc
in
scas
stos
add
mov
adc
mov
cli
xchg
mov
lods
inc
lret
sar
add
insb
mov
dec
dec
dec
dec
or
dec
or
xor
and
sti
lret
std
js
pop
dec
cs
sbb
xchg
cmp
lea
adc
mov
sub
xchg
mov
mov
sbb
xchg
dec
int3
xor
add
pop
push
mov
jb
sbb
in
sbb
or
xchg
mov
mov
add
fimull
mov
icebp
dec
jo
adc
and
outsl
out
sub
pusha
jle
jmp
imul
push
mov
or
xchg
faddl
stos
or
push
shlb
insb
add
mov
jp
cmpsb
push
out
cmp
mov
and
ud2
add
push
sbb
push
mov
inc
add
cs
mov
sti
cmpsb
push
sti
icebp
mov
add
aam
mov
jle
hlt
fdivs
cmp
pop
mov
and
adc
adcb
dec
sub
imul
xchg
push
fidivrs
fbstp
xor
das
lods
shll
push
test
rcrb
pusha
xorl
xchg
add
hlt
cmpl
jns
or
sti
in
movsl
test
lds
popa
xchg
into
mov
inc
xchg
adc
inc
lods
je
cwtl
xorl
stos
outsb
or
mov
or
test
aam
inc
es
aas
repnz
pop
push
adc
loopne
cld
scas
ds
inc
xchg
xchg
adc
adc
jl
outsb
lcall
xchg
subl
mov
push
movsb
popf
xchg
pop
leave
add
jo
inc
sbb
out
mov
dec
cli
rcrl
mov
xchg
mov
xor
scas
mov
xchg
push
mov
push
mov
sub
dec
daa
cwtl
lods
xchg
or
repnz
sbb
lods
out
repz
sbb
lds
lret
dec
loope
test
xor
andb
lret
mov
dec
push
jo
loop
xchg
lods
lea
addr16
pushf
lahf
in
xchg
cli
dec
es
cmc
enter
aas
mov
jecxz
mov
mov
and
js
in
iret
fsts
sub
bound
sub
inc
cmp
mov
into
call
xlat
mov
rolb
aam
inc
jle
ja
shrl
test
and
pop
pop
out
mov
cwtl
test
loope
xor
push
repz
jp
test
jne
sbb
cmp
hlt
dec
clc
out
pushf
rolb
pop
pop
push
adc
fsub
rolb
mov
sub
inc
mov
cmpsl
push
dec
or
movb
enter
mov
cs
cmp
sbb
das
dec
push
mov
leave
dec
mov
pop
adc
cmpsb
sbb
andl
or
hlt
int3
xchg
or
add
fcom
sub
nop
popa
aad
lods
xor
push
dec
cmp
cld
push
lods
outsb
pop
add
mov
loop,pt
sub
sbb
lea
pop
dec
call
mov
fsub
movsb
dec
adc
cs
dec
cmp
pop
sbb
mov
push
xchg
pop
jg
jl
movsb
ret
pop
inc
daa
adc
mov
hlt
repz
push
inc
ss
xchg
out
or
jmp
stc
push
add
insl
cmc
cltd
scas
add
xor
adc
pop
mov
inc
pop
cli
inc
pop
shll
mov
add
cwtl
adc
xlat
mov
lock
cmpsl
ja
popa
dec
test
mov
stos
std
lods
sub
dec
pop
jmp
sub
sbb
xor
or
dec
or
je
mov
dec
pop
loope
jle
repz
inc
call
mov
outsl
aas
in
dec
repz
xor
pop
divb
xor
and
add
mov
mov
aaa
lods
lds
or
or
add
inc
ja
push
ret
jle
pop
rclb
sbb
pop
xor
adc
data16
push
push
out
imul
insl
or
js
cmp
and
xchg
lods
mov
sbb
or
inc
pusha
addb
jb
inc
add
add
mov
test
sub
mov
mov
mov
mull
inc
das
data16
and
xor
clc
sub
fs
sub
data16
adc
in
jle
adc
fsts
adc
loope
sar
stos
rcrl
push
jae
xchg
push
adc
xchg
sbb
lcall
lods
sarb
jno
or
mov
xorb
inc
adc
lea
xchg
loope
push
dec
nop
jbe
fdivr
adc
das
enter
int3
mov
aad
ds
or
push
or
enter
push
in
xor
test
add
out
les
sbb
push
and
jae
lock
ljmp
stos
jo
push
mov
cmp
fs
stos
jo
jbe
stos
push
aaa
ret
sub
or
ja
call
call
sub
imul
cwtl
lds
inc
xlat
test
xorl
xor
shlb
fisttpl
cs
sub
inc
xchg
out
scas
rcr
cmpsl
in
ds
xor
jmp
cmp
dec
fistps
in
adcl
inc
jg
xor
test
daa
push
movsl
enter
sbb
or
dec
int
add
pop
xchg
out
enter
mov
adc
orl
int3
sub
xchg
out
ficompl
dec
leave
cmpsb
sbb
movsb
sub
sbb
cmpl
pop
lea
movsb
inc
add
je
push
inc
imul
add
mov
pop
jb
leave
mov
push
or
bound
movsl
dec
and
add
enter
push
aaa
xor
je
ss
lods
or
add
add
mov
lock
mov
push
notb
pop
test
mov
sbb
imul
sbb
bound
fsubr
and
shll
cmp
dec
ret
jge
ret
dec
cmc
icebp
push
lahf
jb
out
and
sbb
cmpsl
mov
testl
xor
cmpb
fmul
lret
stos
or
out
lea
fs
jno
ja
mov
insl
cs
stos
mov
leave
push
pop
pop
test
jl
xor
lcall
sbb
js
test
jmp
ret
adc
cltd
test
and
inc
mov
dec
sub
xor
cmp
testl
or
insl
filds
gs
arpl
adc
sub
arpl
push
sub
jnp
cmpb
cmp
into
mov
jo
repnz
inc
test
bound
cmc
shrb
je
and
stos
mov
cld
sub
xor
lock
mov
es
jo
mov
out
jg
jo
or
das
add
sahf
ljmp
data16
add
and
jno
push
bnd
lret
or
xor
lcall
mov
in
add
jno
pop
lds
es
pusha
push
or
mov
ss
std
mov
xchg
daa
inc
aas
inc
popa
or
sbb
mov
mov
push
push
adc
push
pop
xchg
add
xchg
dec
repz
sbb
xchg
push
mov
rcr
bound
ret
adc
outsl
hlt
sbb
xchg
jb
dec
lahf
aaa
jp
movsb
mov
and
jp
movsb
test
mov
ljmp
push
mov
xchg
mov
les
ja
push
dec
outsb
push
lea
jb
lods
mov
fldcw
ja
loop
jbe
arpl
gs
sub
cli
ja
or
adc
shrl
mov
fwait
or
std
inc
mov
dec
push
filds
or
pushl
int3
jp
outsl
sub
loop
jnp
jl
ret
popf
xlat
add
or
imul
fnsave
in
jbe
pushf
test
pop
xchg
add
mov
sbb
js
fldcw
adc
int
mov
sbb
loopne
fwait
mov
push
inc
adc
imul
cmpsb
lret
and
or
lods
arpl
xor
add
or
js
rcll
xchg
push
sub
cmp
cmc
cli
arpl
int
cmp
outsl
and
inc
arpl
mov
or
push
test
and
idivb
pop
mov
loope
jmp
xor
push
inc
js
adc
imul
mov
inc
fildl
pusha
jl
lret
pushf
xor
cld
mov
add
pushw
mov
push
xchg
shr
lahf
cmp
insl
xor
mov
push
faddl
pop
pop
xchg
lcall
sub
mov
aad
and
pop
imull
lcall
dec
fsubl
pop
loop
push
or
cmc
xorb
out
fs
addr16
pop
int3
out
cltd
cmc
xchg
shrl
jb
mov
lods
pop
cwtl
int
xor
or
add
xchg
mov
sbb
adc
mov
fsts
cmpsb
xchg
xchg
decb
fs
inc
xchg
sahf
xlat
cmpsl
ds
adc
inc
and
mov
in
popa
sub
lds
es
push
shlb
adc
test
xchg
fcomps
or
add
sub
mov
scas
lret
repz
xor
mov
and
mov
pop
pop
sub
ja
xor
add
jo,pn
sub
mov
fildll
aas
jnp
cli
std
mov
push
stos
rcrb
lea
sbb
mov
or
mov
nop
pop
jge
arpl
add
and
pushl
xchg
repz
sub
mov
add
xchg
lret
xlat
xchg
add
sub
or
pop
sub
scas
into
jne
ret
lahf
out
in
aam
sub
cmp
mov
sub
imul
scas
fisubl
out
cmp
and
fcmovbe
push
in
or
imul
aad
sbb
nop
data16
fcmovu
ret
mov
mov
cwtl
rcll
adc
and
lds
cmc
jns
xchg
shll
dec
push
jbe
movsl
mov
pop
lahf
push
adc
ret
std
cld
imul
std
ds
push
divb
xor
and
fbld
movsb
xchg
int3
mov
xor
pop
jecxz
jnp
test
stc
dec
mov
or
dec
dec
dec
jne
fs
ljmp
into
scas
push
popf
test
or
dec
pop
jbe
fs
xor
rol
out
subl
xchg
mov
pop
or
int3
hlt
loop
mov
rorl
xchg
test
xorb
loop
jns
dec
js
imul
scas
jl
out
rcrl
mov
fidivrs
jmp
mov
xchg
mov
jae
mov
out
icebp
mov
icebp
push
daa
fstpl
sbb
jo
mov
inc
aas
jnp
movsb
fidivrl
dec
outsl
jno
pop
popf
jb
inc
test
sbb
enter
inc
dec
cmp
sti
cld
add
jbe
js
sbb
xchg
inc
mov
out
out
in
cmpsb
push
adc
jp
mov
out
fcom
mov
pop
cmp
in
mov
les
out
and
mull
cltd
pop
jmp
jbe
xchg
or
inc
add
jl
mov
aas
fidivrl
mov
daa
imul
leave
cld
add
or
daa
push
pop
bound
je
jne
and
call
outsb
lock
cmp
sub
bnd
pop
ljmp
or
in
mov
scas
and
add
inc
sub
loop
add
orb
pop
xor
std
or
enter
shrl
lods
lahf
icebp
repnz
mov
repnz
dec
sub
xor
stc
mov
pop
mov
push
out
aaa
mov
rcr
scas
fstps
mov
dec
mov
notl
mov
pop
into
in
dec
ds
loope
pop
push
imul
xchg
lds
add
movsl
jl
stos
sbb
pop
testl
and
mov
sbb
jno
push
pop
and
cmpsb
sub
pop
pop
fildll
je
or
mov
sbb
mov
sbb
imul
dec
ret
xor
add
mov
xchg
jnp
cmovo
daa
ret
pop
stos
dec
xor
aaa
sbb
repz
or
cmpb
jns,pt
mov
push
sub
and
xor
xorb
jo
cmp
stos
cmp
test
jbe
fisubs
sub
adc
jl
cmp
push
inc
pop
adc
daa
ja
push
jl
mov
or
dec
mov
mov
sub
je
pop
or
push
sar
fsubrs
dec
lcall
mov
repz
mov
cmc
adc
lds
es
add
shl
inc
outsb
push
jns
call
fsqrt
repnz
mov
sahf
imul
jb
aas
add
fidivrs
or
sub
mov
dec
xchg
test
jne
jne
lock
push
dec
loop
or
test
adc
outsl
out
mov
movsl
mov
sub
pop
sub
add
mulb
jmp
xor
pop
xor
adc
int
pushl
daa
or
xor
or
ljmp
mov
mov
and
mov
out
scas
test
mov
mov
aam
dec
or
mov
jno
push
and
imul
cli
jbe
imul
pop
or
or
in
or
pop
cli
or
add
fstps
mov
je
jns
jl
call
xchg
jbe
inc
fwait
inc
sub
push
int3
pop
jecxz
sbb
test
jp
add
ror
cli
jb
jns
ds
lret
mov
xchg
jno
add
mov
adc
rcl
cmp
test
popa
cmp
subb
sub
icebp
leave
sub
jo
dec
xchg
fstps
push
push
dec
int
jecxz
mov
daa
or
notb
mov
fistps
pop
sub
repz
aam
call
or
lahf
push
daa
inc
xchg
cmpsb
and
mov
mov
sub
cmp
fmuls
jl
pusha
mov
sub
aad
lds
leave
pop
xchg
jmp
scas
mov
sahf
add
imul
in
fadds
ds
loop
gs
movsl
jg
inc
xchg
dec
jp
mov
push
cmp
mov
mov
out
aas
sub
ret
pop
idivl
push
and
in
fnstcw
fucomip
lahf
insb
add
jge
fistpl
push
mov
lea
add
jg
push
orb
mov
aad
push
and
imul
das
cmc
dec
xchg
notb
mov
insb
mov
js
ret
add
adc
call
or
push
cld
fcoml
dec
scas
imul
gs
jbe
jae
pop
cmp
pop
jl
aad
push
mov
and
repz
jb
sbb
imul
xor
sbb
pop
stc
movsl
cli
in
jmp
sbb
imulb
sub
cltd
test
cmp
mov
sbb
lods
movsb
mov
rcrl
adc
out
popa
jecxz
inc
cmp
jmp
cmp
mov
cld
int3
push
adcb
pop
add
inc
movsl
add
or
adc
pop
adc
push
xor
cld
sar
xchg
sub
repz
mov
mov
mov
xchg
ret
xor
cmp
mov
push
not
in
je
mov
out
daa
xor
add
jmp
negb
mov
ljmp
pop
sbb
push
inc
mov
lock
mov
cmp
ficoms
xchg
aam
fdivl
lret
xlat
adc
mov
cmc
call
xchg
pop
inc
movsl
movsl
pushf
addb
ss
stos
out
ss
jp
out
xor
push
xor
outsb
inc
adc
sbb
inc
fs
out
cmp
cmp
sbb
mov
icebp
dec
jle
cmpb
push
dec
and
add
xchg
mov
imul
stc
push
xchg
inc
or
jae
xor
pop
cmp
cld
pop
xchg
xor
mov
inc
fdivrl
xchg
cli
mov
push
leave
dec
out
dec
mov
subl
sub
push
je
cmp
lock
inc
mov
adc
loope
xor
loope
inc
scas
xchg
pop
xor
mov
cltd
jecxz
lods
and
dec
add
push
pop
imul
push
out
loop,pt
jns
rcrl
mov
daa
subl
mov
mov
in
inc
sbb
cmpsl
ljmp
insb
pop
xor
sub
mov
jnp
mov
movsb
sti
push
push
sub
sti
rcll
cld
nop
outsb
xor
mov
push
fdivs
nop
outsl
daa
andl
dec
fdiv
or
test
inc
inc
push
inc
leave
cmp
xchg
flds
cltd
mov
les
in
inc
adc
inc
dec
pop
test
loope
mov
mov
scas
je
imul
xchg
outsb
mov
cwtl
in
je
outsl
in
add
insb
ret
or
push
jge
das
addr16
loopne
pusha
imul
pop
fnstenv
arpl
sub
aas
hlt
push
pop
mov
mov
push
pause
ret
and
xchg
pop
jecxz
lods
mov
std
pop
lock
shl
out
imul
addb
adc
stc
loope
movsb
fldt
mov
xor
testb
jne
clc
aaa
jnp
push
adc
idivb
xor
pop
sub
push
xor
xchg
jg
sub
pop
xchg
and
punpckhwd
int
cmp
dec
inc
mov
mov
stos
and
es
aas
outsl
cmp
in
in
ret
pop
sub
pushf
adc
pop
loop
sbb
jg
fsubl
test
arpl
rcrl
lock
icebp
lret
sub
mov
icebp
arpl
or
push
daa
pop
push
test
cli
pop
pop
mov
stos
sahf
loopne
enter
notb
aaa
neg
dec
rolb
mov
jle
pop
iret
not
mov
hlt
lcall
aaa
insb
loopne
out
ja
repz
shr
pop
mov
ljmp
pop
adc
mov
pusha
mov
cmp
dec
jns
nop
popa
incb
je
cmp
sub
sbb
nop
cwtl
adc
dec
xor
mov
jae
sub
mov
in
xlat
enter
hlt
insl
icebp
xor
mov
pop
dec
frstor
fmuls
pusha
jno
cli
pusha
test
xchg
fdivr
jb
adc
aad
cmp
addr16
test
lock
aaa
or
jecxz
xchg
jmp
sbb
std
lahf
loope
in
cmp
xchg
sarl
aad
cmp
add
loop
xor
test
cltd
out
cmp
mov
iret
fsubl
sbb
push
mov
mov
mov
bound
decb
mov
movq
pop
jmp
xor
stos
adc
or
cmp
js
jne
loopne
in
sbb
pop
xor
dec
sbb
jno
lock
pop
arpl
sub
push
mov
das
mov
pop
les
dec
aaa
sbb
xor
push
aaa
xchg
clc
sub
in
mov
xchg
or
fmuls
dec
or
rcl
add
jbe
aaa
inc
in
sarb
pop
outsl
jmp
mov
rorl
scas
dec
leave
inc
cmp
inc
in
inc
cwtl
ss
mov
dec
xor
lea
pop
ds
cld
mov
js
jle
xlat
call
lds
xchg
lds
rcrb
push
jmp
inc
bound
push
mov
push
in
aad
push
sbb
testb
mov
mov
dec
icebp
and
pop
stos
pop
dec
jne
adc
inc
movl
or
push
scas
push
das
xchg
push
lahf
push
mov
mov
push
cmp
das
push
cld
or
jecxz
mov
mov
sarb
add
xor
dec
mov
mov
push
outsb
jns,pt
cmp
and
divl
out
add
and
roll
and
dec
add
lret
addb
xchg
mov
mov
notb
lds
xor
ja
scas
inc
and
clc
stc
fwait
scas
fiaddl
es
add
ss
pminub
adc
outsb
jbe
out
cs
popa
pop
movsb
fs
dec
xchg
jle
dec
mov
xchg
add
lods
pop
mov
scas
add
mov
inc
in
cmpsl
jnp
lcall
ss
xor
or
mov
lret
data16
jge
sti
mov
shlb
div
flds
push
in
in
mov
cmc
gs
lcall
sub
notl
pop
push
sahf
mov
mov
pop
mov
add
xchg
jle,pt
in
add
iret
jbe
pushf
outsl
fnstsw
cmp
loopne
mov
sbb
push
je
stos
jbe
pushf
aaa
mov
shrb
enter
add
dec
sbb
aam
jge
nop
dec
pop
xchg
test
loopne
ret
testb
addl
xchg
clc
xor
jb
jns
cmp
inc
adc
outsl
aas
and
addl
dec
nop
mov
sbb
jg
pop
jle
hlt
push
enter
jge
int3
shl
xchg
jb
shl
test
outsb
xor
adcl
leave
xchg
dec
or
aam
das
push
call
jg
xor
ljmp
stos
xchg
sbb
jno
mov
sub
jge
and
xor
dec
and
ja
mov
cmc
push
mov
stos
nop
ja
mov
andb
test
jno
inc
fdivrl
xor
xor
lods
adcb
xchg
cld
push
mov
sbb
jae
xchg
lahf
cwtl
addb
outsl
sbb
xlat
or
repz
dec
pop
das
inc
scas
adc
push
sbb
stos
jle
mov
cmp
xchg
add
sub
xor
dec
cli
dec
push
out
mov
test
xchg
into
dec
xchg
adc
ds
dec
aam
cwtl
cmp
mov
xor
pop
pop
mov
std
push
leave
aas
cmp
xor
ja
mov
cltd
push
mov
pop
dec
push
cmp
fcomps
cmpsb
mov
aad
push
xchg
sarl
mov
inc
nop
loope
dec
ret
fbld
push
mov
cmp
push
cs
cmp
sarb
jle
mov
push
outsl
sub
stos
addb
mov
mov
and
dec
out
xchg
stc
cmp
out
es
repnz
lods
adc
stc
pop
add
pushf
mov
imul
add
push
push
js
mov
imul
imul
nop
mov
test
mov
push
out
or
mov
pop
inc
pop
xchg
jb
push
and
xchg
in
jae
and
shlb
and
shlb
lcall
loopne
outsb
cwtl
scas
pop
adc
imul
ret
xchg
sbb
jns
sub
test
mov
out
outsl
icebp
cld
ds
aas
inc
adc
add
les
mov
nop
or
cmp
insl
sub
int
sbb
into
inc
mov
pop
in
daa
in
popa
push
or
mov
lret
mov
inc
add
jmp
daa
js
test
xor
xchg
adc
and
test
movsl
lret
mov
gs
scas
out
xchg
dec
or
fs
out
xor
mov
dec
dec
push
hlt
sar
mov
xchg
mov
ret
or
in
push
mov
cld
rclb
jge
add
mov
aas
cmp
scas
scas
sbb
sub
dec
adc
add
and
dec
in
ficoms
lods
push
sbb
movsl
test
xor
lahf
mov
sub
jge
mov
stos
inc
add
inc
iret
ss
ss
adc
notb
or
xchg
int
adc
inc
push
fistps
stos
push
pop
cmp
or
xchg
sbb
jmp
in
dec
mov
nop
mov
ja
js
dec
sahf
adc
sti
sub
repnz
dec
outsl
rcll
dec
mov
adc
sub
xchg
fsubr
pushf
pop
push
push
mov
xor
cltd
and
jae
sti
inc
mov
fdivl
insl
cmp
pop
xchg
xchg
and
in
cmpsl
in
dec
xchg
jge
add
or
enter
xchg
lods
mov
or
cmp
in
sbb
xor
push
inc
lret
fistpll
sub
mov
xor
hlt
add
xor
hlt
scas
adc
and
dec
in
outsl
pop
cld
fldcw
xor
push
fstpt
out
dec
popa
push
aas
fs
push
sub
xchg
pop
xchg
fistps
les
dec
hlt
adc
les
loop
outsb
in
ljmp
iret
arpl
dec
jnp
fistps
int
test
and
push
lea
test
add
jg
adc
test
add
dec
xor
sti
and
mov
icebp
and
cld
loope
mov
push
in
adc
xor
fildll
push
out
fs
xchg
cmp
or
lods
push
dec
into
ficoml
rcrb
and
subl
push
in
ret
xchg
sahf
loopne
push
and
mov
push
mov
dec
pop
popa
testb
ret
movl
and
clc
push
or
fcmove
leave
fs
dec
jae
sub
in
push
ja
dec
adc
fcoms
hlt
mov
dec
jo
jp
rcl
mov
rcl
outsb
cmp
addps
ds
mov
fwait
xor
cmp
pop
xor
and
sbb
cmp
mov
shl
lea
mov
out
dec
xchg
cmc
aad
shrb
cmpb
es
cltd
aad
aad
jo
iret
lea
jae
push
inc
int3
sub
or
pop
jbe
and
mov
inc
xchg
adc
mov
cs
jg
add
movsb
push
and
xchg
cld
jae
inc
sub
adcl
imul
ja
mov
bound
icebp
inc
pop
ds
clc
int
mov
cmp
mov
popf
mov
sbb
push
fidivs
xor
cmc
mov
fucom
ljmp
imul
push
shlb
mov
ss
outsb
fsubrl
aam
jnp
cli
daa
ljmp
mov
arpl
mov
inc
mov
sbb
xorb
fists
lcall
mov
add
lret
jae
rolb
fldenv
je
sub
aam
sub
jbe
inc
in
subb
es
mov
add
dec
jne
loop
popf
jl
mov
fdivl
dec
filds
push
mov
in
movsb
mov
xchg
jp
outsl
xchg
test
jle
mov
rolb
ficomps
inc
xor
out
push
cli
retw
sahf
hlt
test
push
sub
repnz
test
and
adc
sti
sub
insl
lods
cmp
aad
hlt
add
sub
xor
xor
into
sbb
sub
mulb
int
mov
fnstcw
mov
push
xchg
or
daa
nop
daa
test
andl
mov
out
in
and
mov
stc
ja
call
cs
pop
fstl
cmp
adc
jae
xor
mov
scas
mov
pop
inc
add
cmpsb
inc
adc
je
push
inc
inc
int3
ds
loopne
jno
sbb
jl
movsl
push
into
out
mov
aam
jae
jbe
mov
jmp
pop
inc
sti
jle
insb
cmp
cld
dec
mov
mov
mov
mov
xchg
lods
or
mov
and
sub
jp
roll
adc
cmp
push
sbb
inc
sbb
push
inc
push
mov
xchg
xlat
cli
ret
ds
pop
aad
jmp
and
mov
cmc
jl
ljmp
dec
fcmovne
test
dec
std
push
idivl
mov
pop
cld
cmc
fs
out
adc
cmp
dec
push
pop
jg,pn
out
push
ret
pop
gs
jns
add
dec
clc
mov
pop
sbb
pop
dec
mov
xchg
pop
ret
mov
dec
insb
jl
dec
js
jecxz
sub
aad
in
jns
ss
adc
jae
cmp
sub
repz
xlat
das
push
lock
test
push
sbb
in
vpand
adc
cltd
add
jno
inc
lock
sbbb
jl
test
sub
lods
lcall
ljmp
mov
lock
lea
mov
repnz
nop
jecxz
cmpl
outsl
leave
jo
imul
cmp
mov
hlt
sub
call
std
sahf
call
jb
xchg
cmp
dec
lods
scas
pop
test
sahf
divl
adc
cld
roll
aam
cmp
movsb
cmpsb
xchg
cmp
xchg
mov
inc
jmp
pushf
sbbl
adc
adc
ja
sub
fs
and
mov
inc
xor
js
mov
jns
imul
add
cs
push
sub
mov
stc
ljmp
in
inc
adc
enter
xor
pop
adc
movsl
jl
sub
mov
repz
lret
pop
mov
pop
into
xor
fadd
jecxz
push
cwtl
sti
add
addr16
xchg
lcall
int3
and
adc
mov
pop
movsb
sub
mov
cmpsb
lcall
or
mov
popf
addr16
sbb
faddl
popa
cmpsl
nop
aaa
ljmp
movsl
xlat
adc
sar
cmpsl
xlat
mov
sbb
add
mov
outsb
fistps
sti
pop
ds
adc
ljmp
sub
sbb
push
jle
pop
add
mov
pop
push
push
add
mov
adc
push
sbb
mov
mov
das
mov
xlat
adc
das
fcomp
stos
push
lea
push
or
hlt
jmp
movsl
or
out
push
pushf
sub
fisubs
subb
sbb
xchg
icebp
cltd
nop
push
outsl
inc
mov
lods
out
stos
mov
pop
cs
sub
mov
not
cmp
in
pop
add
lods
scas
mov
je
out
mov
movsb
dec
std
push
mov
xchg
js
stos
or
adc
into
pusha
rcr
rep
push
in
rcrb
std
and
sbb
add
inc
sbb
lcall
hlt
nop
idivb
call
mov
sti
jb
popa
jae
jns
lret
sub
push
inc
sbb
out
sbb
or
inc
sub
add
fdivl
lock
cmpsb
test
sbb
inc
js
out
lock
mov
mov
pushf
adc
jnp
xchg
xchg
mov
lahf
pop
fwait
std
jge
xchg
jecxz
mov
push
adc
xor
imul
mov
in
mov
mov
mov
cmp
lods
dec
mov
mov
stos
cltd
imul
dec
jmp
shrb
test
call
dec
or
sarb
movsb
or
lods
sbb
adc
push
push
loop
sti
sub
loope
adc
jo
icebp
int
and
inc
jmp
pop
pop
sbb
rcll
jno
push
xchg
xor
mov
inc
ret
shl
xchg
jmp
lods
push
push
mov
or
pop
mov
xor
dec
xor
inc
aaa
orl
adc
mov
out
sub
push
out
sahf
mov
push
test
mov
and
test
dec
or
int3
outsb
adc
aaa
lds
xchg
inc
fisubl
cs
dec
mov
shll
out
xor
fbld
sbb
int
stc
imul
push
jmp
andb
adc
mov
cmpsl
int3
daa
dec
xlat
fcomps
dec
into
inc
mov
loopne
scas
jecxz
pop
sbb
fmull
inc
add
outsb
lock
or
fs
ds
mov
roll
outsb
xor
aaa
push
xchg
pop
adc
out
or
fists
bound
add
dec
jge
inc
pop
push
dec
pop
sbb
adc
ret
jb
or
pop
add
add
bound
mov
out
push
adc
pop
bound
xchg
mov
or
and
and
faddl
mov
jge
sbb
jno
mov
adc
cmp
aam
push
add
js
and
cltd
sbb
inc
scas
xlat
in
imul
ljmp
hlt
dec
xchg
repz
and
test
mov
cmp
sub
sub
call
push
aam
xlat
fadds
pop
ret
sbb
nop
push
lret
mov
mov
cmp
mov
inc
sbb
jmp
in
js
jo,pn
add
push
cmp
mov
ja
test
xlat
jo
stos
mov
movsl
sub
jns
popf
push
mov
add
aaa
sub
pop
es
mov
fs
fisubrl
mov
xlat
and
stos
sti
xor
fdivl
hlt
cltd
scas
or
fbstp
mov
pop
push
stos
add
jne
jp
jp
mov
sub
pop
and
cmp
sbb
mov
testl
add
xchg
aam
jmp
cltd
xchg
sub
jo
and
call
inc
jmp
push
into
adc
xchg
xchg
jle
fwait
rclb
cli
sbbb
pop
jae
inc
mov
outsl
gs
or
scas
adc
shlb
adc
cmp
mov
repnz
adc
loopne
push
xor
fsubrs
jb
je
adc
jmp
scas
xor
or
into
jb
das
xor
xchg
jg
xchg
add
loopne
push
sub
xchg
cmp
inc
daa
mov
sbb
sti
ds
jae
fs
and
push
pop
inc
enter
fadd
jg
arpl
xchg
mov
sbb
pop
test
in
movsl
dec
cli
adc
test
xchg
mov
pop
sub
jg
mov
aad
repz
mov
mov
lods
sub
pusha
xchg
or
lahf
sub
iret
out
xchg
mov
in
xlat
dec
ficompl
int
push
and
pop
notb
add
mov
xchg
jnp
inc
xchg
pop
std
pop
xor
fsubrs
mov
sub
cmpsb
aas
aam
mov
cmp
xchg
mov
insl
pop
pop
outsl
sub
mov
adc
outsb
jnp
jg
mov
push
call
lret
scas
mov
lahf
mov
ret
test
push
xor
popa
in
out
fs
rcrl
inc
enter
mov
icebp
ficoml
mov
pop
mov
pop
fistpl
repz
test
test
xor
sub
bound
mov
xchg
lea
shll
pop
lret
push
clc
jmp
pop
or
sbb
dec
loopne
mov
mov
jno
mov
sbb
in
add
xchg
inc
repz
and
sbb
pop
inc
push
mov
fcoms
jmp
insb
adc
call
inc
insb
test
sbb
aam
xchg
pushf
cmpsb
jle
mov
imul
imul
xor
scas
adc
xchg
lcall
add
insl
jge
mov
inc
enter
in
outsl
pop
xor
subb
fstpt
out
lret
fmulp
jge
in
add
jmp
push
cmp
lret
xchg
arpl
sbb
arpl
ret
dec
mov
adc
fdiv
pop
in
mov
jge
sub
add
push
rcr
sarl
cltd
fabs
and
mov
jne
cmpsb
cltd
out
xor
and
test
mov
inc
jg
mov
dec
das
ja
cs
fldl
loopew
cmp
adc
mov
sti
lea
mov
and
mov
xchg
sbb
into
cld
push
dec
stc
xchg
fs
ja
fidivs
sub
xor
mov
in
test
test
cmp
cmpl
sub
mov
or
jns
mov
aas
stos
mov
push
call
dec
pop
xor
div
mov
add
mov
lahf
mov
enter
stc
das
fucom
in
in
mov
cmp
incb
lods
mov
lods
xor
inc
sbb
insl
mov
in
iret
jne
mov
pop
pushf
filds
mov
mov
sub
add
cltd
add
mov
in
push
or
and
or
shlb
push
testl
add
pop
mov
mov
sbb
in
xchg
and
or
or
or
mov
xchg
lahf
xor
or
stos
inc
lcall
ljmp
jge
push
push
in
jae
imul
fwait
push
ret
pop
cmp
fisubrl
cmpsb
test
push
mov
sub
sarb
or
adcb
cli
add
je
dec
or
rol
lahf
cmp
aam
push
push
xchg
dec
mov
dec
imul
popa
jne
cs
in
ret
out
sbb
push
xchg
sbb
or
insl
xor
leave
mov
ja
scas
lods
xor
es
dec
fdivr
je
xchg
sub
insl
lock
xlat
pop
and
int
scas
add
pushf
mov
mov
insb
fstps
push
add
xchg
sbb
push
mov
std
or
add
pop
sub
mov
mov
add
fisttps
stos
inc
cmc
fstpt
pop
or
stos
adc
fistps
lcall
filds
mov
fs
cmpsl
insb
imul
fld
cmp
out
push
jmp
test
scas
pop
call
mov
fcomp
xor
dec
mov
stos
inc
lock
mov
push
test
dec
outsl
call
dec
andb
xor
iret
pop
pop
dec
aam
jbe
inc
cmp
outsb
xor
push
mov
mov
pop
and
arpl
push
pop
push
sub
je
jmp
fcmove
notl
lods
or
cmp
int3
cmpsb
xlat
xor
lock
test
push
es
xchg
xchg
ljmp
dec
mov
mov
mov
inc
popf
cmpsl
mov
lods
adc
mov
leave
and
pop
clc
pushf
mov
jge
xor
add
scas
test
aaa
out
les
or
push
aaa
out
inc
rcrb
out
jne
ljmp
and
shl
sub
data16
mov
xor
sub
leave
pop
push
push
lret
addb
fildl
lea
loop
sub
mov
adc
add
outsb
jbe
and
int
push
in
push
lcall
cmpsl
sbb
idivl
and
push
pusha
push
sub
sub
xchg
int
fiaddl
cs
imul
dec
pop
xchg
inc
cmpsl
ds
mov
mov
cmp
cmp
in
fildl
xor
jno
xchg
data16
mov
xor
mov
mov
iret
jae
incl
adc
pusha
in
scas
lea
ret
call
mov
fcomps
xchg
mov
leave
test
jecxz
jecxz
jge
pop
push
xor
gs
fwait
iret
mov
inc
mov
mov
push
jmp
sub
mov
stc
or
aas
in
push
aad
or
jle
dec
sbb
mov
outsl
repz
mov
shll
cmc
lock
pop
pop
xchg
std
adc
cld
enter
pop
cmp
jg
sbb
xor
negl
gs
inc
push
data16
sbb
push
cmp
scas
mov
or
mov
sbb
jnp
sbb
int
sub
mov
push
sub
scas
loopne
pop
pushf
insl
mov
ljmp
ljmp
inc
pop
lea
and
pop
mov
enter
test
sbb
cmp
push
mov
mov
cld
cmc
dec
inc
ljmp
test
push
stc
sub
filds
push
inc
stos
xchg
mov
jl
insl
dec
xlat
btl
sub
mov
push
jno
xchg
call
cwtl
or
push
jnp
sbb
fistpl
sbb
icebp
inc
int3
out
sub
jno
or
add
test
adc
pusha
mov
add
fcom
daa
fcompl
jne
mov
mov
push
dec
leave
and
out
push
mov
cmp
out
mov
orb
xor
hlt
cld
insb
xchg
orl
dec
outsl
xchg
fsubrl
xchg
cmp
aad
aam
xchg
fsubs
out
leave
xchg
push
call
into
jmp
jmp
and
add
push
cmp
fdivrs
push
fimuls
mov
pop
out
ret
lret
cmp
ja
clc
pop
cltd
orl
lcall
and
push
and
mov
and
inc
mov
dec
mov
sbb
dec
dec
pop
shll
lea
ljmp
sub
insl
femms
jle
imulb
dec
mov
or
sub
push
or
dec
data16
dec
jecxz
aam
insl
lea
jmp
adc
pop
mov
fsubl
pop
dec
cmpsb
mov
and
and
mov
repnz
lods
lods
and
inc
adc
leave
push
je
mov
ret
insl
in
call
lcall
jge
mov
mov
mov
xor
or
push
push
inc
cmp
mov
jp
cmp
outsb
incl
out
mov
add
or
aad
sub
push
ja
dec
cli
imul
mov
xlat
mov
mov
xor
add
imul
call
fdivs
xor
lahf
pop
ljmp
pop
dec
cmpsl
inc
cmpsb
rcrb
xor
xor
shl
lods
xchg
insb
mov
out
add
dec
lods
andl
cmp
ret
loop
inc
aam
sbb
sarl
mov
cmp
push
leave
or
dec
cltd
xor
movsl
xchg
sarb
add
or
lds
test
mov
xor
aaa
adc
lock
cmp
and
inc
mov
jle
mov
add
push
iret
fsubs
and
loop
lds
and
pop
fldenv
cwtl
leave
movsl
mov
dec
xlat
fwait
pop
nop
shll
xchg
into
dec
jle
test
pop
inc
add
in
sub
cld
shlb
out
repnz
icebp
imul
ficomps
mov
stos
mov
pop
out
sub
mov
outsb
sub
fs
lods
sbb
or
outsl
ljmp
xor
sahf
pop
cmp
cs
insl
dec
stos
ljmp
push
repnz
bound
loop
int3
push
clc
sti
repz
js
pop
inc
pop
cltd
cs
outsb
or
xchg
pop
repz
ss
adc
jg
mov
stc
mov
mov
imul
sub
mov
test
ljmp
inc
insb
or
jb,pt
jb
in
xor
jge
mov
imul
pop
jo
dec
inc
push
xchg
cmp
sub
cld
add
je
mov
xchg
packssdw
sub
ror
pop
loope
sub
pop
lock
js
xor
out
jns
fucomi
pushf
sub
insl
movsb
stos
xchg
lods
ret
push
lods
sarl
out
cmp
cmp
stos
mov
pop
daa
cmpsb
mov
push
in
xor
lret
add
pop
dec
or
dec
mov
push
aas
add
test
and
pop
stos
xor
rol
daa
jmp
ds
dec
lret
test
imul
and
fprem
add
in
dec
push
push
test
loopne
and
or
cltd
sarl
push
adc
push
mov
les
mov
xorl
xchg
jmp
loopne
add
sarb
mov
and
test
sbb
das
cs
addr16
mov
fwait
mov
cmp
stos
jecxz
push
pop
and
shll
or
popa
inc
add
fwait
sub
xchg
pop
imul
loope
sbb
or
sarl
pop
xchg
idivl
dec
fadds
cmpsl
inc
inc
adcb
pop
ja
mov
lock
clc
sbb
dec
in
jl
mov
adc
sbb
sbb
add
push
xor
fnstenv
test
sub
jne
aaa
out
adc
notl
sub
push
into
mov
iret
in
fcoms
add
out
adc
scas
inc
test
into
add
adc
dec
sbb
mov
jne
mov
cmp
mov
adc
lret
dec
in
and
outsb
push
dec
sarb
stos
fldl
inc
inc
test
adc
xchg
lahf
xor
ja
stc
mov
sbb
mov
cs
dec
jnp
push
xrelease
pusha
or
add
imul
ja
je
jmp
cmp
pop
cmp
sub
and
pop
xchg
jne
movl
loopne
mov
cmc
dec
xchg
fistpl
push
mov
mov
stos
add
push
dec
dec
cwtl
cmc
xor
pop
jns
sbb
jns
lods
cmp
mov
add
inc
mov
rcll
and
lock
shlb
mov
or
dec
sub
das
pop
jl
sbb
xchg
push
adc
add
dec
hlt
mov
pop
and
pop
arpl
out
stos
xorl
sbb
in
aad
mov
rcrl
jmp
sahf
pop
mul
out
xor
push
fisubrs
leave
jno
pusha
sub
xor
test
loop
jns
xlat
xchg
lock
mov
sub
sbb
insb
outsl
loope
iret
or
jns
in
scas
cmp
xchg
gs
jge
insb
jl
ret
nop
hlt
push
inc
les
or
mov
popa
pop
adc
xor
fwait
pop
adc
mov
adc
movsb
fwait
xor
jo
xor
pushf
jle
lret
xor
add
lock
lahf
ficomps
in
lea
std
outsb
orb
fdiv
xchg
out
or
push
stc
fsub
jmp
outsl
jmp
das
mov
xlat
sbb
push
add
mov
ret
shll
fcmovnu
aas
cmp
mov
and
loop
ret
movsl
and
push
push
outsl
js
jbe
stos
mov
sub
in
orb
push
test
pusha
and
fcmovnbe
test
lods
enter
sar
and
test
je
mov
pop
adc
je
dec
imulb
out
sub
xchg
outsb
inc
daa
xor
xor
pop
xor
daa
mov
outsl
sti
jae
adc
aaa
negl
inc
push
repnz
jmp
popf
test
cmp
scas
add
inc
jmp
jno
js
sub
and
hlt
sub
aaa
popa
das
stc
cmp
aad
cmp
jns
jbe
and
pop
cmp
fwait
rcl
push
das
cld
and
lret
loop
pushf
add
dec
adc
pop
add
lea
and
jmp
xor
mov
scas
out
jno
add
call
jecxz
lods
rcll
xor
jge
inc
lods
repz
adc
mov
adc
mov
lret
jo
rorl
dec
pop
ret
fidivrl
fs
push
stos
adc
jp
cs
sub
pop
icebp
pusha
loop
and
decl
or
pop
and
loopne
xchg
and
cmpb
fstpt
dec
jo
popf
test
cmc
jns
into
sub
push
jb
push
inc
insb
pop
dec
lcall
mov
and
lea
or
leave
xchg
cmp
ret
add
xlat
fxch
or
pusha
in
pusha
pop
loopne
push
lret
inc
in
sub
xchg
loopne
sbb
scas
ret
mov
inc
cld
cmp
pushf
cwtl
scas
push
outsl
jno
rorl
popa
pop
andb
rolb
push
iret
lret
mov
xor
and
cmc
enter
jae
inc
dec
outsl
jg
inc
aam
dec
sub
xor
aad
shll
sbbl
insb
insl
outsl
jno
loop
shlb
xchg
xlat
sbb
mov
add
xchg
xchg
fdivs
jae
imul
sahf
adc
sbb
adc
sbb
cmp
mov
sbb
mov
stc
pop
sbb
mov
push
aad
in
mov
fcomps
xchg
cld
mov
push
clc
cli
not
loop
inc
dec
mov
testb
cmp
sbb
adc
dec
jg
add
jmp
mov
or
popa
add
test
icebp
icebp
adc
bsr
je
xor
mov
inc
jp
xchg
mov
pop
faddp
je
rolb
loop
and
ja
ljmp
sbb
xchg
inc
push
loop
xor
gs
inc
div
sub
imul
shll
mov
lods
ss
jle
enter
test
and
mov
mov
lds
inc
sbb
cmp
sub
mov
cmpsb
jle
inc
inc
sbb
mov
jns
mov
test
test
or
bound
out
cmp
or
cs
mov
scas
orl
aad
ret
aad
adc
mov
add
and
sub
setnp
push
enter
into
ja
sbb
push
test
push
ljmp
mov
mov
xorl
xor
mov
cmp
xchg
clc
test
mov
pushf
mov
sarb
mov
jmp
sbb
and
mov
pusha
vpmulhw
add
jo
mov
mov
fldl
xor
jo
xor
test
inc
jmp
loop
hlt
cmpsl
repnz
shlb
aad
mov
sbb
jbe
fiaddl
insb
fistl
int3
or
xchg
lahf
adc
outsl
das
lds
popf
xor
xchg
mov
pop
inc
jne
xor
mov
sub
cmp
xor
leave
movsb
xor
push
cmpsb
test
outsl
push
idivb
icebp
ss
daa
inc
inc
dec
and
cltd
lods
xor
cmpsb
mov
sti
xchg
push
into
sub
inc
hlt
sbb
push
mov
outsl
push
sub
mov
movl
xor
insl
jbe
sbbl
mov
xor
fiaddl
lret
ds
push
gs
enter
insl
xor
jbe
fadds
stos
fdivs
mov
into
push
into
mov
sub
cmp
jno
lds
jl
add
daa
sbb
rcrl
xchg
dec
dec
cwtl
imul
ja
lcall
ret
xor
adc
add
push
aas
dec
cmpsb
mov
les
push
mov
sahf
in
xor
int
and
cmp
xor
andb
mov
push
es
sbb
lret
inc
add
cwtl
mov
cmp
int
out
loopnew
mov
into
les
xorb
in
inc
ja
xlat
jbe
ljmp
mov
pop
inc
xor
mov
jg
adc
push
adc
adc
jo
fwait
jge
xchg
imul
cmpsl
dec
pop
inc
or
xchg
pop
xor
outsb
mov
dec
rcr
inc
dec
subb
lcall
xchg
daa
mov
push
dec
and
jge
pop
pop
jb
push
data16
in
mov
xor
xchg
and
cmp
push
xor
repz
mov
cld
push
cmp
lret
clc
inc
adcl
nop
inc
dec
jmp
add
mov
or
call
sub
dec
push
sarl
jmp
gs
or
pushf
adc
push
adc
fidivl
in
add
mov
sub
clc
outsb
cmp
mov
cmp
push
jl
jno
sub
cmp
aam
inc
mov
fadds
in
clc
and
inc
mov
and
dec
repnz
outsb
lret
cmc
jp
lcall
call
scas
add
push
pusha
push
imul
test
insl
push
xor
lea
ret
pop
dec
imul
or
addr16
mov
cmp
scas
loop
loope
push
mov
or
push
or
fucomi
test
hlt
addr16
dec
and
jmp
push
push
jae
dec
lahf
fsubp
call
xor
clc
dec
lret
lahf
mov
fdivrl
push
mov
push
sbb
mov
adc
dec
and
inc
inc
sbb
loope
in
mov
xchg
push
in
sub
sbb
xchg
nop
cmp
mov
not
sahf
xchg
jb
or
lret
push
inc
pop
and
push
mov
sbb
es
outsb
inc
add
jle
in
or
sub
lcall
mov
add
and
jmp
jp
mov
loopne
lcall
and
aad
pop
xor
and
push
hlt
and
iret
mov
inc
pop
aaa
std
test
ret
mov
push
and
xor
ret
sbb
andb
dec
stc
fdivrp
bound
enter
inc
fistl
aas
jno
ret
xlat
jg
mov
adc
gs
xor
sub
flds
sub
and
xor
je
lret
jns
gs
mov
cmp
mov
int
or
cmp
jno
ret
stos
addr16
push
mov
push
inc
push
inc
adc
ja
fstps
movsl
or
test
and
and
aaa
push
add
outsl
push
inc
mov
xor
out
mov
push
jle
dec
xchg
add
int3
loopne
sub
insb
pop
dec
iret
pusha
pop
jmp
cwtl
push
stc
xchg
cwtl
mov
xchg
out
xor
xchg
dec
sbb
stos
jg
or
lret
scas
cmc
xor
sahf
aas
ljmp
icebp
stos
push
sub
addr16
sbb
lea
xor
mov
dec
adc
imul
jne
or
add
xor
dec
cmp
fidivl
scas
lret
push
pop
push
iret
dec
lods
aad
cmpsb
inc
pop
jo
jbe
shll
jge
pop
fsub
sbb
mov
ss
pop
imul
mov
loopne
cltd
or
pushf
cmp
cltd
cmp
cmp
aaa
lcall
add
dec
push
xor
aas
fsts
pop
jg
jmp
inc
adc
repnz
jne
mov
and
lcall
and
nop
mov
push
mov
mov
jb
dec
fisubl
adc
cmp
test
mov
push
push
roll
aam
jg
pop
test
xchg
or
ds
fbstp
test
mov
ljmp
fwait
pop
fcmovne
sbb
loop
lds
sbb
aas
sub
call
xchg
je
add
mov
dec
pushl
pushf
out
mov
jbe
jmp
sub
repz
push
push
sti
xchg
stos
inc
fwait
into
jmp
and
jo
pop
scas
data16
and
xorl
xchg
popf
fwait
jge
cmp
push
mov
std
cld
das
xchg
add
aaa
jecxz
movsl
adc
or
and
nop
ds
xchg
xor
sti
les
inc
mov
aad
dec
push
test
adc
mov
out
stos
add
notb
mov
push
imul
push
inc
push
negl
jecxz
iret
inc
jg
scas
and
xor
fistpl
test
adc
pop
fdivrs
jge
dec
and
lods
aaa
adc
roll
imul
inc
inc
push
xchg
outsb
mov
push
lcall
xor
addb
adc
aam
sti
pop
out
into
pop
cmpsl
rcrb
pusha
mov
lret
jno
div
pop
sbb
adc
outsb
pusha
xchg
lods
cmpl
aaa
cwtl
mov
mov
pop
jp
imul
and
lret
in
push
imulb
fwait
push
gs
icebp
cmp
lods
lret
rol
imul
cmpsb
dec
pop
mov
paddsb
iret
mov
add
rol
adc
push
mov
inc
fwait
pop
pop
push
add
sub
cmp
mov
adc
ds
lcall
mov
push
je
dec
repnz
popf
mov
aas
pcmpgtw
jno
add
push
cmpsb
aad
fiadds
icebp
mov
dec
push
pop
jg
std
out
push
mov
sub
dec
sub
dec
fisubrs
pop
mov
mov
adc
ljmp
fdivrs
mov
mov
xchg
pop
xchg
hlt
aad
in
fsubs
push
cmp
leave
addr16
fdivrs
jecxz
imull
xchg
cmp
inc
pop
outsl
jge
pop
fsts
aad
into
out
lcall
shll
inc
mov
scas
xor
int3
shrl
fcoml
sbbl
jbe
loope
add
add
inc
cmp
pop
sarb
mov
scas
fprem
lock
xor
or
sbb
sbb
mov
test
xchg
sahf
adc
dec
inc
pop
sub
pushf
and
scas
leave
in
or
inc
xchg
aaa
or
mov
adc
les
inc
and
inc
out
push
aaa
xor
cmp
leave
push
push
rcrl
out
rorb
in
in
mov
or
mov
je
inc
les
je
pushf
test
adc
jp
push
test
jle
cmpsb
cmc
cmp
mov
shll
add
mov
or
push
jae
or
sbbl
or
jmp
ret
lcall
stc
xchg
pop
jmp
popf
imul
xchg
mov
and
mov
imull
scas
cmp
js
les
and
lret
cwtl
icebp
and
lods
mov
lret
cmp
cwtl
fidivl
jb
mov
or
dec
fdivp
ja
xlat
test
leave
int3
xlat
clc
call
or
int3
lods
fimuls
jb
and
test
push
push
in
mov
lds
enter
push
add
xchg
pushf
sbb
repz
and
xchg
shlb
add
push
loope
mov
aam
movsl
in
dec
cld
loope
or
out
mov
sbb
loop
jb
fcompl
cmp
sar
loope
sub
pusha
mov
sbb
mov
pop
sub
push
adc
mov
repz
or
bound
iret
rep
inc
inc
cmp
mov
xchg
lcall
cmp
cltd
pop
dec
dec
in
mov
jb
xchg
inc
das
pop
in
jne
dec
in
clc
sbb
ja
xchg
shll
cld
pushf
je
dec
or
imul
js
roll
dec
fists
ret
fcompl
lahf
push
insb
out
iret
cmpsb
mov
lods
xchg
push
mov
es
and
test
outsl
xor
vpsubb
push
dec
dec
adc
roll
push
or
add
mov
mov
mov
test
mov
test
pop
adc
xchg
sar
cmc
and
jns
fdiv
enter
mov
xchg
dec
mov
movsb
hlt
cs
pusha
mov
fnstsw
lahf
xlat
pop
add
add
jle
lea
nop
pusha
xchg
push
push
xchg
popa
test
sti
dec
push
push
jg
mov
cs
loopne
fwait
mov
push
mov
scas
popf
rcl
and
mov
xlat
cmp
lahf
cli
cmp
xor
leave
adc
stc
adc
iret
mov
sub
in
mov
pop
sub
push
mov
call
outsl
scas
icebp
pop
out
xchg
adc
cli
add
push
sub
test
mov
iret
lock
xadd
jge
movsl
xchg
out
sub
loope
mov
xor
xchg
xor
push
andl
int3
sub
push
aaa
test
jl
cltd
jle
fwait
adc
mov
dec
loopne
dec
mov
fs
ja
mov
pop
ljmp
addr16
fstps
in
inc
les
xchg
subl
lods
mov
clc
pop
clc
jp
ljmp
inc
xlat
addr16
test
lods
leave
jl
push
out
shl
xchg
jo
loope
movsb
adc
enter
adc
and
stos
gs
add
or
in
shlb
cwtl
pop
scas
mov
pop
lea
cmp
mov
mov
sbb
stos
dec
sbb
lahf
jecxz
lock
nop
xor
adc
into
cmc
and
icebp
nop
mov
inc
adc
out
loope
push
stos
in
js
pop
test
dec
out
mov
jne
dec
push
mov
ds
push
and
xchg
push
pop
jl
in
push
mov
add
pushf
cmpsl
push
add
ficoml
xchg
mov
jo
mov
lea
enter
nop
add
js
pop
mov
adc
fiaddl
data16
insb
cwtl
sbb
call
cmpsb
mov
icebp
je
jb
jmp
subl
or
push
in
jns
scas
cmpsl
fmull
roll
pop
fldt
jbe
rcrl
and
jns
call
pop
fidivs
sub
das
inc
icebp
dec
xor
call
and
movsb
xchg
inc
test
mov
movsl
inc
data16
push
fsubl
call
pop
pushf
andb
mov
imul
push
int
add
lcall
pop
jns
repz
mov
insb
cmc
xchg
mov
push
das
push
mov
cmpsl
sarb
xchg
addr16
add
in
or
sub
cwtl
scas
cwtl
test
das
mov
sub
sub
dec
loope
insl
subb
fadds
pusha
mov
mov
pop
xchg
pop
inc
push
jl
xchg
xor
addb
xchg
sub
mov
inc
sub
and
out
cmp
stc
lods
push
mov
adc
sbb
mov
inc
insl
dec
pop
xchg
cmp
pop
aad
add
scas
icebp
test
cwtl
mov
scas
jp
cmc
xchg
sub
pop
testb
loopne
add
out
js
popl
test
sub
pop
adc
dec
xor
add
mov
pop
mov
xor
repz
push
stc
in
dec
fdivs
jns
pusha
xchg
push
lcall
pop
jo
sub
pop
movsb
and
pop
cltd
dec
push
inc
std
xor
jno
int
hlt
jecxz
xchg
sbb
cmp
imul
xor
scas
testb
mov
or
jecxz
push
cmp
mov
gs
adc
adc
scas
pop
jmp
rol
mov
cmpsb
jbe
cmp
fidivs
imul
test
sub
sahf
stc
adc
cmp
filds
add
or
push
aad
mov
xor
xlat
loope
mov
mov
push
lret
int
sub
das
cs
int
mov
xchg
call
clc
jbe
mov
lea
jg
adcb
jae
adc
jne
dec
ja
es
movsb
fidivl
shll
adc
adc
scas
in
sti
or
add
and
jbe
lock
negb
movsl
out
stos
jo
es
rorl
mov
movsl
push
cmp
add
js
xchg
lock
pop
lret
lods
sub
add
repnz
in
std
mov
pop
fimull
aas
cmp
dec
in
sub
movsl
add
jb
add
lretw
sub
jg
inc
cmpsl
add
xlat
sub
mov
loope
cmp
jge
mov
aas
sub
ret
xacquire
xor
call
jle
mov
cmp
xchg
fmul
pop
mov
push
pop
jecxz
dec
sbb
imul
insl
jo
out
clc
xchg
xor
ret
ljmp
mov
mov
mov
gs
int3
ljmp
xchg
rorl
fisubrs
movsb
add
sub
add
mov
inc
cs
sbb
push
in
fwait
push
xchg
mov
sbb
dec
outsb
iret
sub
sub
xchg
xor
push
das
mov
xlat
push
adc
mov
mov
test
outsl
lcall
pop
pop
dec
xor
jecxz
mov
sbb
in
lea
mov
xchg
bound
lock
out
cmp
hlt
xchg
lret
hlt
lods
adc
mov
jns
xchg
cmp
sub
lret
sti
cmp
ret
int3
xchg
es
pop
imul
and
out
pop
lock
push
pop
inc
jne
and
loope
iret
iret
pop
cwtl
idivb
cmp
jmp
mov
xchg
loop
loopne
pusha
or
inc
repnz
or
gs
fcoms
push
or
in
loopne
lea
or
add
jno
notb
icebp
gs
cwtl
ja
and
mov
out
fwait
scas
repnz
shr
mov
jmp
ficompl
mov
add
push
inc
loop
mov
mov
gs
and
lea
inc
mov
sbb
insb
adc
addr16
cmp
and
xchg
js
sub
sbb
out
xchg
loopne
mov
movsb
movsl
jecxz
mov
mov
jge
lea
lahf
dec
decb
outsl
mov
sub
data16
cmp
fisttpl
lret
xor
adc
imul
test
dec
dec
xchg
push
or
sbb
clc
pop
std
outsl
pop
push
dec
std
lcall
lds
orb
adc
xor
lds
std
out
push
cwtl
mov
enter
fidivl
mov
shlb
xchg
orb
into
cmpsb
aam
xchg
shlb
push
and
xchg
sub
cmp
out
add
add
cs
cmpsb
subl
sub
stos
addb
xchg
test
sbb
les
test
mov
and
nop
pop
push
shlb
jb
into
inc
push
hlt
pop
jmp
jecxz
cmpsl
mov
mov
stc
test
stos
lods
and
ljmp
sbb
push
fwait
pushf
and
into
sub
sbb
imul
mov
and
cs
dec
mov
dec
lahf
jle
or
enter
lods
dec
mov
adc
mov
iret
enter
int
mov
cmp
jmp
stc
lock
in
sarl
inc
xchg
cmp
or
jp
adc
sub
push
cmpsl
sub
jno
dec
xor
jae
shr
xchg
pop
in
mov
mov
sub
shl
mov
push
pop
fs
xchg
lret
setns
in
xor
mov
pop
stos
clc
mov
outsb
push
rol
mov
sub
rorb
fisubrl
inc
push
cmpsb
repz
das
and
movsl
repz
mov
ljmp
xchg
fstl
iret
test
push
popa
adc
rcll
jno
inc
jnp
shll
pusha
mov
push
iret
sbb
cld
mov
dec
mov
subb
dec
jle
lods
mov
jns
mov
push
push
xor
fwait
jb
ficompl
mov
cmc
out
xor
stc
cmp
aam
lock
iret
jmp
dec
push
or
aaa
lret
dec
mov
mov
enter
jb
lret
xor
out
shlb
lods
frstor
pusha
shlb
testl
cltd
in
cmpsb
stos
lahf
jge
ss
pop
fs
xchg
jg
jo
or
sbb
cmp
cmp
icebp
push
out
sbb
jo
subb
mov
push
pop
divl
lahf
mov
in
cld
pop
inc
aaa
rcl
cmp
push
adc
fstpl
testb
mov
mov
addr16
inc
lea
repz
pop
pop
imul
rcll
fs
mov
mov
mov
mov
es
inc
sarl
stc
sbb
mov
xchg
or
into
xor
push
stos
jge
in
pop
cmp
mov
sub
std
les
jle
aas
in
loop
cltd
fidivl
icebp
cli
fcoml
jp
in
inc
jnp
jae
add
enter
jne
push
ret
mov
clc
or
arpl
sbb
call
std
sub
mov
bound
push
cmpsl
sub
sarl
movsl
jb
stos
aam
adc
aad
jl
leave
sti
dec
shlb
mov
lods
adc
jg
push
jg
test
xor
add
ret
call
cli
adc
mov
jmp
and
add
jle
outsb
mov
cmp
mov
in
out
or
inc
sti
adc
cld
shll
push
int3
cld
in
nop
adc
dec
add
pushf
sub
or
int3
je
mov
int3
jno
xchg
or
aaa
add
mov
mov
push
xchg
fs
pop
adc
push
ds
mov
fcoml
mov
mov
sti
cwtl
inc
lods
pop
jno
fidivs
inc
shlb
hlt
mov
pop
cmpsb
pop
imul
in
addr16
adc
and
movsb
je
iret
xchg
sbb
js
lret
xor
ja
lahf
lahf
inc
push
add
inc
xchg
add
frstor
int
leave
add
jecxz
or
int
pop
inc
xor
loope
scas
add
xchg
shl
adc
jno
push
mov
jae
mov
xchg
inc
pop
repnz
repnz
xchg
adc
std
add
xchg
dec
fdivrs
insb
adc
fsubr
int3
fstl
lods
and
clc
mov
cwtl
cmp
insl
fsubr
xchg
ja
xor
pop
jge
mov
inc
jle
int
scas
push
jp
call
and
and
ds
jno
cld
aas
fistpl
mov
push
xor
mov
adc
mov
in
insb
pop
mov
aaa
clc
pop
jb
adc
in
shl
jmp
shrb
add
pop
push
xor
cmp
push
or
outsl
jmp
mov
push
sbb
mov
jb
pop
lea
loop
xchg
icebp
in
insl
or
aad
jo
movsb
das
and
aam
cs
sub
push
push
inc
mov
and
inc
jb
mov
nop
inc
pop
movsl
add
push
pop
fcomip
iret
dec
mov
or
mov
cli
xchg
int3
xor
lock
cmp
jmp
jle
stc
stos
jge
lahf
shr
sub
int
dec
adc
lea
gs
out
jno
xchg
dec
push
shrl
push
lret
shlb
dec
cmpsl
adc
ret
in
cmc
loope
out
popf
xchg
movsb
mov
test
jge
cmp
pop
dec
pop
adc
or
int3
das
and
sbb
push
int
push
neg
push
mov
jmp
sbb
fldcw
xor
dec
divb
pop
es
sbb
pop
cmp
fisttps
mov
add
in
push
cmp
es
testb
adc
and
jp
loop
push
push
lret
adc
hlt
sbb
cmc
dec
push
sbb
cmp
dec
jno
fisttpll
jne
inc
rcr
lea
jnp
xlat
sub
jae
aaa
mov
je
cwtl
ficoms
insb
cmp
das
pop
dec
or
cmp
cld
into
add
inc
push
sti
lret
cwtl
push
xlat
add
pop
xor
fbstp
subl
popf
int
pop
loop
dec
daa
sub
sbb
jl
dec
jbe
push
xor
lods
push
iret
xchg
iret
sbb
sub
cltd
hlt
mov
mov
shll
inc
mov
add
jbe
xchg
jmp
adc
cmp
mov
dec
jecxz
outsb
xchg
push
fcomi
aam
cmpsl
sbb
xor
and
aam
xchg
insb
imul
lods
xlat
cmc
sbb
mov
and
xchg
cld
pop
xchg
mov
cmp
xchg
fbstp
sbb
test
mov
jbe
daa
leave
pop
test
outsb
ret
ror
pop
aad
negb
jbe
cs
mov
pop
push
adc
jl
mov
out
dec
in
adc
mov
sub
fsubrs
fidivl
cld
mov
or
xorl
add
add
mov
outsl
stos
and
push
or
push
enter
repnz
adc
pusha
fdivrl
xchg
lret
daa
or
cmc
loop
mov
mov
lret
cmp
and
aad
lret
sub
ss
test
cmpsl
aas
std
cmp
inc
fwait
add
hlt
in
mov
test
ret
adc
shlb
lea
sub
xor
mov
scas
adc
ret
scas
adc
jns
adc
loope
rol
sbb
jns
jb
and
pusha
imul
jle
xchg
xchg
jns
cmp
jge
shlb
cmp
jle
sbb
sub
adc
add
shlb
and
movsl
insb
adc
roll
push
pop
sti
mov
out
sqrtps
mov
movsb
into
add
repz
mov
out
mov
mov
push
js
adc
out
inc
xorb
leave
scas
adc
les
xor
xor
mov
icebp
imull
fsubp
pop
adc
xor
dec
jecxz
mov
fdivrl
lret
adc
jmp
test
insl
fcoml
jb
imul
bound
idivl
mov
insl
xchg
mov
push
jge
add
dec
mov
sbb
or
outsl
jg
sysexit
xchg
ss
pop
xlat
xchg
cli
loop
pop
in
loopne
scas
push
cmp
jmp
sbb
push
fidivl
cmpsl
jge
aas
and
in
shll
xor
leave
xor
jp
shr
dec
test
adc
inc
aad
pop
sub
dec
jg
sbb
mov
insl
bound
xchg
loop
cld
xchg
cmovl
out
fnstcw
scas
sub
lret
mov
std
aaa
add
outsl
shlb
push
jge
add
test
sbb
pop
lea
push
mov
mov
push
add
dec
pop
and
mov
and
leave
hlt
lods
adc
sbb
arpl
or
daa
inc
fistl
ljmp
cld
aaa
add
cmp
shll
mov
lcall
jo
in
cmp
mov
loopne
pop
rol
mov
lds
jae
pop
movsb
mov
hlt
cmpsb
sbb
jnp
inc
enter
and
mov
into
and
adc
dec
adc
dec
ret
out
mov
popf
push
cmc
jp
sub
adcl
fdivrs
add
repz
sub
daa
mov
sbb
popf
roll
imul
jmp
scas
stos
js
push
in
loopne
xchg
shl
add
xor
in
push
lret
dec
xchg
jae
ficomps
push
fldcw
inc
push
out
adc
mov
out
sbb
adc
repz
lcall
lods
jmp
jno
rclb
mov
jbe
mov
adc
jle
or
aam
lahf
out
jge
mov
xor
ljmp
outsl
mov
call
gs
sbb
dec
adc
gs
or
movb
adc
movsl
cs
scas
test
loop
int3
movsb
sub
jbe
mov
or
jne
cmp
jo
test
mov
xor
mov
cld
je
sbb
dec
cli
lahf
mov
pushf
mov
andb
sbb
pop
add
les
jbe
dec
and
add
sub
mov
inc
jmp
or
inc
cmp
arpl
push
push
cmp
push
lea
popf
or
sub
outsb
push
cld
dec
adcb
shlb
jge
push
fdivl
push
cmovo
xor
or
sbb
mov
popa
es
cmp
sbb
sbb
lea
xchg
add
loopne
xchg
pop
mov
inc
adc
adc
cmp
loop
inc
cmp
pop
lret
call
pop
fcmove
repz
add
loopne
fwait
orb
pushf
aas
dec
repnz
aam
fisttps
out
clc
stos
scas
dec
add
jp
cmp
notb
in
pop
loop
loop
cs
pushf
dec
jno
mov
cmp
add
dec
fiadds
mov
mov
push
fwait
jbe
or
adc
pop
xchg
add
pop
adc
mov
and
rcr
adc
xor
cmp
sbb
pop
aam
sub
inc
jp
xchg
dec
ffreep
movsl
inc
in
push
arpl
movaps
jecxz
inc
dec
jo
aaa
fsubrs
xchg
and
push
fstps
iret
repnz
inc
in
mov
or
and
lret
jg
scas
sub
fidivl
fidivl
xor
pop
repnz
push
push
mov
ljmp
shrb
icebp
sarb
sub
or
das
and
mov
lahf
jge
js
add
cmpsb
add
pop
pop
sbbl
lods
ljmp
dec
and
fcomps
cmp
sbbb
dec
adc
sbb
ret
adc
pop
imul
xor
sbb
mov
mov
xor
xor
xor
xchg
test
lods
pop
bound
jecxz
jno
push
pop
test
add
mov
jge
fcomps
rol
outsl
dec
jno
into
add
mov
jb
popf
loop
pop
cs
cltd
clc
bts
pop
dec
fiadds
and
icebp
inc
sahf
outsb
mov
lods
arpl
xor
dec
sbb
repz
pop
repz
lcall
fsubs
adcl
arpl
movsb
mov
aas
lcall
int
pop
pop
ds
adcl
pop
aad
mov
es
stc
int
out
outsb
sarb
cmpsb
mov
or
jecxz
push
mov
test
mov
cli
or
pop
push
or
jns
sbb
lds
rcrb
cltd
dec
orb
push
xchg
push
pop
repz
push
subb
mov
in
xchg
mov
xor
loope,pn
loope
mov
xchg
mov
pop
clc
xchg
pop
lods
daa
mov
add
test
dec
mov
repnz
stc
dec
push
leave
mov
mov
or
cmp
ret
sbb
pop
xor
jmp
fcompl
pop
sub
sbb
test
push
cmp
jns
lods
daa
sbb
sub
cs
xor
sbb
cmp
xchg
add
mov
cs
dec
mov
inc
icebp
cmp
cmc
xor
xor
outsb
negb
xor
push
push
xor
lret
loopne
les
sbbb
dec
aas
sbb
outsb
jo
fwait
int
xor
and
dec
out
inc
cmp
repz
adc
mov
jnp
push
jae
divl
fstpt
push
pop
dec
out
pop
pop
or
xor
testl
out
out
daa
fucom
les
clc
pop
pushf
lcall
or
dec
rorb
lock
sti
ljmp
adc
push
xchg
inc
dec
and
sub
and
xlat
fs
mov
mov
mov
pusha
movswl
rcr
mov
pushf
xor
in
push
inc
outsb
jno
adc
es
loop
mov
sbb
mov
pop
fbld
mov
shrl
dec
cs
inc
clc
xor
and
dec
xchg
add
shlb
movsb
adcl
lods
fcomi
sbb
push
mov
pop
bnd
loop
insb
les
pop
push
pop
or
mov
mov
mov
push
mov
lahf
insl
inc
xor
xor
xchg
ds
xor
testb
test
imul
xchg
pop
pop
pop
stos
out
mov
mov
push
sarl
add
or
and
roll
xchg
lahf
sub
xchg
dec
mov
cmc
jmp
fsubl
negl
loope
pop
inc
sbb
in
jno
mov
dec
testl
sahf
inc
mov
add
das
insl
fists
push
push
int
push
xor
pop
loope
dec
inc
inc
out
mov
sub
mov
or
push
ja
cmp
lahf
es
and
add
lea
add
out
pop
stos
incb
repnz
cmp
mov
xlat
or
shr
push
iret
in
rclb
lods
inc
mov
clc
icebp
ret
jle
shlb
cs
inc
test
inc
in
xchg
test
jge
outsb
mov
add
mov
shr
mov
stos
cmp
and
adc
mov
loopne
sbb
lock
xchg
add
jnp
call
fbstp
dec
and
mov
fstpt
nop
adc
fucom
inc
adc
rcl
inc
sbb
iret
scas
outsb
cwtl
mov
or
mov
xchg
aaa
insl
mov
aas
xchg
outsl
add
rcrl
lods
jb
mov
push
mov
or
add
add
mov
and
dec
repnz
int
aam
mov
mov
subl
jb
icebp
ja
inc
imul
xchg
inc
fstps
ja
mov
call
push
mov
ljmp
fstp
and
mov
mov
xor
outsl
push
jecxz
mov
add
lock
sarb
cmpsl
dec
repnz
lds
cmp
insl
imul
int
mov
or
aas
mov
clc
jb
pop
xor
or
push
ret
xchg
sbb
mov
fstpt
pop
push
xchg
dec
jl
gs
jae
sbb
mov
or
cmp
and
imul
mov
mov
xchg
sbb
jmp
fwait
pop
pop
imul
xor
add
fisttps
add
pop
outsl
dec
and
addr16
mov
jno
aad
ja
imul
add
sbb
cmpsl
aad
inc
loop
enter
push
hlt
xor
xchg
mov
mov
add
xchg
mov
push
out
xor
xor
mov
cmpsl
adc
cmc
mov
xor
mov
dec
scas
test
addr16
dec
dec
sub
jnp
push
inc
rcll
loop
lea
mov
jne
jo
xor
pusha
cli
jecxz
stc
push
popf
sahf
add
xchg
in
cltd
loop
pop
loop
inc
cs
testl
mov
fldcw
sti
adc
add
jecxz
out
pushf
add
ficoms
push
mov
pop
subl
mov
cmp
mov
or
xchg
pop
int
movsb
and
xor
stos
xchg
fcmovnbe
add
filds
je
pop
push
inc
shrd
je
shlb
sbb
adcl
insb
in
xor
xchg
push
mov
aas
hlt
movsl
and
jecxz
hlt
jl
scas
jmp
xor
mov
out
test
fistpll
sub
js
mov
or
push
and
pop
pop
stc
push
psraw
jmp
movq
imul
xchg
ret
and
jl
cmp
push
xor
xchg
test
enter
or
jmp
je
in
cwtl
add
test
out
fs
mov
and
cmp
out
jle
test
jo
jge
sub
lahf
outsl
stos
mov
lahf
incb
lret
lods
jg
xor
lahf
dec
insb
push
jmp
push
xor
cmp
pop
ret
push
sub
test
xchg
mov
sub
loop
out
mov
lahf
pop
cmp
inc
mov
cli
sti
sub
push
pop
leave
ret
sbb
stos
push
cmp
fbld
cmpsb
jne
gs
scas
xor
fwait
xor
mov
aaa
or
jmp
andl
insl
lock
jbe
cmp
xchg
mov
dec
cmpsl
pop
pop
sbb
adc
movsb
loopne
imull
lret
xchg
dec
xchg
es
and
inc
push
and
iret
es
inc
mov
add
shrl
scas
rcrw
dec
push
adc
adc
pop
xchg
icebp
ljmp
mov
mov
iret
cmp
dec
test
pop
adc
xchg
dec
stc
les
xor
les
clc
sub
push
in
es
leave
andb
push
enter
add
sub
fcmovb
pause
lds
rcl
mov
cwtl
addb
add
lret
mov
inc
out
nop
and
loop
divb
and
jno
jo
and
push
dec
aaa
inc
cltd
dec
sbbb
mov
xorl
mov
out
out
mov
dec
dec
int3
stos
in
ret
movsb
fwait
cmp
loope
pop
aam
hlt
outsb
shll
mov
or
movsb
repz
jbe
cmp
loop
mov
dec
mov
faddl
cmpsb
out
mov
xchg
jns
scas
int
ljmp
xchg
sub
and
lock
popa
dec
daa
dec
sahf
sti
lahf
lods
and
and
cmc
push
ret
lahf
inc
and
mov
les
iret
and
out
dec
jle
stos
jecxz
mov
sti
add
mov
xor
pop
ja
pop
jne
addr16
inc
out
andb
dec
fwait
pop
mov
inc
pop
in
les
fcoml
mov
cli
cmp
xor
in
adc
inc
sbb
rcrb
mov
adc
sub
xchg
fcoml
cwtl
cmp
push
mov
jae
adc
inc
cmc
mov
iret
nop
add
push
jg
push
loope
fists
cmp
iret
call
test
cmpsb
mov
imul
push
lods
dec
push
adc
dec
push
fiadds
push
mov
fcos
mov
in
sub
jle
mov
sub
mov
cwtl
sub
fstpt
push
ret
stos
js
xor
add
sahf
adc
loopne
cli
mov
or
adc
movsl
mov
clc
pop
js
outsl
jns
xchg
bound
jnp
mov
sub
pushf
pop
mov
xchg
dec
test
xor
lea
push
dec
hlt
jnp
sahf
lods
cmpsb
mov
lods
pop
jae
pop
push
mov
sub
mov
sarl
ja
lret
or
dec
outsb
push
outsb
scas
cmp
cmp
and
sub
jnp
repnz
jno
xchg
std
dec
jns
in
push
dec
in
in
aad
js
inc
inc
scas
sbb
adc
dec
push
cmpsb
push
sub
sbb
sub
stos
je
jbe
test
shll
iret
mov
xor
mov
icebp
sub
subb
push
loop
jge
fisubrl
jmp
shrl
addl
jne
xor
movsb
jge
push
cmp
pusha
or
sub
mov
inc
sahf
add
pop
inc
mov
and
mov
arpl
or
rcrl
push
mov
stos
mov
push
loope
add
stos
pmaxsw
and
clc
pop
mov
in
inc
lock
cmpsb
adc
pusha
or
insb
arpl
add
push
pop
push
xchg
mov
pop
xchg
shll
mov
pop
jmp
jo
xchg
movsb
and
xchg
sbb
arpl
push
mov
dec
cmp
add
mov
mov
adc
sahf
push
inc
inc
add
outsl
jnp
pop
into
aaa
mov
inc
movsb
push
fsubr
call
out
add
data16
repz
inc
cld
push
jb
mov
jge
mov
mov
loop
fs
sub
mov
xchg
jecxz
lcall
pop
aaa
jno
movsl
insl
lods
lahf
inc
xor
mov
je
xor
inc
lahf
or
or
andb
cwtl
mov
adc
nop
insb
xchg
cmp
push
inc
test
insb
jo
mov
test
outsl
add
pop
xchg
inc
mov
fs
mov
dec
aad
mov
mov
push
jge
mov
pop
and
add
and
inc
inc
or
mov
enter
pop
mov
mov
out
jno
insb
dec
inc
or
daa
and
cltd
fsubrs
adc
push
xchg
dec
popa
std
test
fld1
stc
dec
lea
push
fidivs
jae
mov
push
lods
cmp
mov
push
stos
fwait
hlt
icebp
mov
mov
andps
push
fcoms
inc
jmp
leave
std
pop
fs
push
cmc
outsl
push
mov
out
mov
jge
jno
iret
sbb
hlt
and
in
int
cmp
stos
jbe
and
mov
loop
cmp
sbb
xchg
and
or
lods
lcall
mov
cli
shll
pop
rcl
mov
inc
sub
mov
aaa
sbb
es
push
push
push
out
imul
movsl
arpl
or
in
adc
outsl
daa
rcrl
add
jns
and
pop
fnstenv
ss
dec
xchg
sbb
or
scas
jnp
pop
les
mov
and
inc
scas
adc
lock
test
jo
rolb
in
mov
lcall
jmp
gs
stc
ljmp
pop
lods
jne
pop
dec
lretw
loop
add
rcll
stos
loop
inc
pop
daa
inc
adc
lea
lret
dec
lahf
imul
les
sbb
imul
faddl
inc
dec
sbb
adc
movsl
lds
push
ljmp
push
mov
pop
imul
xor
add
fmul
insb
jp
sti
mov
movsb
rcr
lret
cmp
jbe
mov
cmc
jo
out
aas
push
outsb
mov
mov
scas
inc
mov
stos
jo
dec
test
mov
add
mov
insl
and
test
mov
or
wbinvd
not
lds
and
inc
rcr
outsb
lds
pop
inc
sti
pop
or
insl
ja
inc
adc
cmp
sub
sub
inc
xchg
fidivrl
xor
dec
pop
adc
and
lods
insb
fstpt
sbb
iret
xchg
lcall
or
add
pop
inc
fcompl
cmp
stos
add
sahf
jb
scas
mov
out
insl
daa
inc
idivl
xor
es
ljmp
or
je
jg
sub
jns
test
mov
test
popa
out
roll
sbb
adc
sbb
and
or
pop
mov
inc
movsl
mov
push
orl
int3
xor
out
cmc
psrld
xchg
adc
addr16
adc
je
enter
adc
xor
dec
pop
adc
enter
nop
dec
jo,pn
mov
xor
xchg
fldt
movsb
push
fldcw
mov
cwtl
mov
loopne
adc
jns
fidivl
cmp
mov
ror
enter
mov
xchg
lret
in
lods
mov
dec
xor
dec
lods
mov
or
lret
add
sti
aam
xchg
xlat
jns
jns
rorl
cs
push
sub
cmpsl
out
fs
lods
and
ljmp
inc
jg
push
add
addb
pushf
popf
ljmp
xlat
jne
sbb
push
push
or
adc
adc
adc
jmp
dec
inc
in
aas
and
sti
xchg
mov
xor
mov
push
pop
aas
pop
inc
rorb
test
dec
inc
scas
ljmp
lock
or
imul
fbstp
add
rcll
pop
test
mov
push
sbb
xlat
xor
xor
pop
ss
mov
push
xor
cmp
sub
mov
rolb
sbb
xor
push
push
push
jmp
xor
adc
add
mov
mov
xlat
mov
pop
adc
pusha
arpl
ret
pop
test
or
add
sbb
xor
rcrl
adc
and
hlt
sub
ljmp
jle
aam
sub
insb
cli
xchg
mov
divl
dec
into
xchg
jb
sub
aam
out
mov
out
adc
cld
push
sbb
cs
orl
dec
pushf
test
push
xchg
and
jmp
inc
inc
pop
ja
js
bound
frstor
sti
mov
rolb
imul
mov
rdmsr
push
push
outsl
es
inc
cmp
and
pop
or
mov
fbld
ja
call
mov
andb
into
sbb
fidivrs
sub
lock
das
mov
repnz
test
negb
into
or
bound
lds
jbe
cli
xor
xchg
test
push
cwtl
cs
inc
loop
stc
repz
test
repnz
aaa
sub
repnz
push
rcrl
and
and
enter
out
out
daa
cmc
push
xchg
inc
cmp
addr16
sbb
pop
sbb
lea
sbb
jp
pop
jae
push
ds
test
dec
sbb
sbb
loop
pusha
sbb
dec
push
loopne
mov
loop
push
add
mov
lea
test
add
xchg
pop
cmp
cmpsl
out
into
mov
cld
xor
jmp
lahf
lahf
cmp
jge
sahf
lods
pop
xor
es
in
pop
loopne
pop
neg
dec
lods
mov
test
cs
mov
jnp
and
lods
hlt
sbb
mov
adc
aaa
inc
add
push
mov
jecxz
adcl
aaa
inc
xchg
test
popf
fs
enter
mov
imul
adc
push
fs
mov
imul
sbb
int
int3
aad
int3
rolb
xchg
sti
aam
sub
icebp
arpl
addb
and
mov
mov
out
repnz
dec
pop
outsb
lret
pop
stos
mov
sti
pushl
mov
mov
sbb
or
xor
data16
dec
scas
or
sbb
movsb
or
testb
and
lods
mov
shl
xor
mov
push
add
popa
adc
dec
cmp
inc
xchg
shlb
scas
add
adc
xchg
sbb
mov
xor
inc
mov
mov
pop
adc
pop
lcall
xor
sub
stc
int
ljmp
jmp
ljmp
xchg
adc
loopne
idivb
cltd
popf
scas
dec
fsubrs
xchg
imul
out
shlb
mov
xchg
push
xchg
push
outsl
sub
jne
cmp
ja
loope
add
mov
imul
ds
jbe
mov
popa
sbb
bound
mov
scas
daa
lods
mov
jb
scas
mov
sub
nop
mov
mov
inc
lret
bound
jl
cmp
cld
and
nop
push
test
movsb
sbb
out
stos
aam
jmp
inc
mov
mov
sbb
ret
xchg
jmp
mov
jae
and
add
negb
dec
rorl
stos
mov
out
jns
dec
xchg
sub
addr16
test
lock
int3
stos
imul
adc
inc
out
fucom
xchg
stos
dec
cmp
lea
dec
jnp
mov
sub
out
popa
jo
adc
cld
or
out
roll
cmpsl
xor
lods
sahf
inc
cmpsl
pop
cs
mov
cmc
rcll
push
shr
in
in
out
pop
ficomps
bound
mov
adc
cmpsl
out
xchg
inc
std
data16
or
jl
mov
mov
mov
aaa
push
sbb
pop
sbb
out
xor
and
test
add
cmp
push
imul
ret
mov
mov
cmp
ret
sub
outsb
dec
dec
add
push
fadds
xchg
add
jmp
fstl
mov
ret
add
outsl
ljmp
pop
mov
xor
rcrl
cmpsb
xor
or
inc
and
hlt
cmpsl
jo
jno
or
stos
mov
jae
sbb
push
cwtl
dec
push
rcrb
pushf
jnp
sbb
jl
lea
sub
xor
xchg
mov
inc
cs
cmp
fwait
mov
inc
inc
mov
jns
sub
add
add
jge
daa
mov
out
or
scas
cmp
shrb
mov
imul
cmp
push
pop
btrl
jp
or
mov
lcall
lds
sbb
mov
jmp
dec
js
outsb
test
mov
mov
sbb
push
sbb
push
shrl
push
mov
cmp
inc
repnz
dec
std
pop
aam
sub
lahf
cmp
pushf
mov
mov
pop
jnp
cmp
dec
cwtl
arpl
jb
mov
popf
mov
enter
call
push
sbb
stos
mov
mov
sub
push
or
mov
cltd
pop
or
push
inc
lret
inc
cltd
fsubl
push
or
jo
xchg
dec
gs
push
mov
push
pop
ja
xor
fidivs
jmp
and
jo
call
adc
inc
pop
repnz
and
int
shlb
test
push
mov
and
push
loopne
cmpsl
push
adc
xor
push
inc
outsb
xchg
cmpsl
sub
enter
daa
cmp
and
sarb
jle
push
mov
dec
push
movsl
loope
daa
jno
loopne
mov
sub
movsl
cmp
jecxz
jecxz
push
push
das
xchg
loopne
fwait
repnz
dec
lock
jns
jge
bound
mov
xchg
push
jmp
add
pusha
iret
jmp
cmp
movsb
loope
mov
stc
test
and
fwait
dec
fadd
adc
adc
test
aam
sti
hlt
cmp
cmpsb
adc
cmp
jle
out
sahf
insw
and
stc
sbb
outsb
add
icebp
lahf
gs
movsb
mov
jecxz
push
fmull
add
adc
add
add
andl
adc
ficompl
pop
ret
inc
cmc
sbb
in
inc
cmp
xor
push
enter
fcompl
scas
cltd
dec
repnz
lods
mov
lds
jbe
push
js,pn
je
and
insb
sbb
fdivl
pop
xchg
fldenv
bound
pmaddwd
pop
mov
inc
sub
imul
ljmp
mov
lods
jge
pop
dec
push
call
insb
push
arpl
jp
mov
jmp
adc
push
ss
pushl
scas
pop
mov
xchg
loop
xor
insl
divl
mov
mov
pop
ja
or
dec
andb
shl
fdiv
pop
stc
fmul
pop
lods
push
rolb
cli
movsl
sub
test
cs
cltd
and
aam
push
std
jo
shrb
cs
icebp
inc
dec
js
pop
imul
or
push
aam
sbb
push
dec
dec
loop
sub
imul
iret
inc
add
pop
adcl
fcompl
lods
jmp
sbb
lods
dec
ret
pop
mov
movsb
fs
sar
test
pop
iret
fadds
dec
jno
testb
mov
or
mov
jp
loop
nop
ret
jle
stc
and
std
rcrb
dec
xor
cmp
dec
sub
cmp
sub
fdivl
negl
in
xlat
call
jns
jecxz
aad
inc
mov
fs
sub
pop
sub
mov
inc
pushf
add
sbb
rclb
and
xor
or
xchg
je
loop
add
popw
pop
xorb
cwtl
and
add
push
movsl
les
gs
out
mov
add
lea
js
repz
popa
mov
adc
dec
outsb
add
mov
leave
cld
push
idivb
jbe
sub
lahf
rolb
adc
inc
clc
popa
dec
mov
jo
pusha
lods
jne
pop
add
mov
shrb
dec
hlt
rorl
pop
aad
sbb
mov
out
in
loop
shll
push
ja
mov
and
orb
ret
rol
inc
hlt
movsl
test
popa
out
dec
xchg
jns
ret
and
movsl
loope
mov
cmp
pop
dec
mov
out
adc
cmpsl
leave
roll
dec
jnp
dec
inc
mov
ret
dec
sarb
lret
iret
cmp
or
fists
mov
daa
sub
mov
mov
out
adc
and
clc
je
add
leave
pop
dec
add
sahf
adc
pop
test
hlt
pop
les
subl
cmpl
mov
pop
xchg
ret
push
xchg
enter
cmc
adcl
push
mov
jecxz
mov
mov
sub
xor
mov
lods
movb
adc
or
lret
sub
mov
scas
pop
sub
cld
das
jno
adc
jge
pop
cs
or
jb
sar
repz
imul
push
add
je
jns
loope
add
fbstp
inc
insb
mov
or
test
xorb
xchg
jo
std
jne
or
insb
inc
in
addr16
jo
mov
mov
mov
data16
cld
push
jg
mov
imul
jge
cltd
lods
std
push
pop
aaa
lret
scas
das
xor
push
lcall
iret
in
dec
mov
push
lret
gs
pusha
mov
mov
mov
push
push
jg
pop
in
pop
dec
sti
add
push
bound
sbb
repz
test
mov
adc
jg
mov
ds
pop
jo
test
inc
fstps
or
pop
movsb
mov
pop
in
icebp
lds
sarb
repnz
test
pop
mov
sarb
aam
loopne
jae
call
subps
fstpl
cmp
sub
in
and
popf
out
mov
aaa
leave
add
and
push
scas
add
ja
or
xchg
loope
jno
add
lret
sbb
pop
je
gs
scas
dec
mov
jb
cmp
iret
pop
push
sub
inc
mov
mov
push
scas
stc
push
cmp
sub
iret
mov
pop
push
daa
mov
jae
jmp
loope
jne
aaa
jg
test
adc
add
xor
lret
popa
jecxz
xor
dec
sbb
sahf
fdivp
test
fisubrl
repnz
data16
sbb
mov
in
cmp
xchg
and
or
jno
fsubrs
mov
sbb
dec
iret
fmul
mov
xorb
xor
cmp
imul
lods
xor
mov
mov
pop
mov
fildll
popa
jp
pushl
loopne
adc
stos
push
adc
ss
sbbl
adc
jae
xchg
fs
imul
and
sti
cmpsb
and
jb
in
fincstp
ficoms
cmp
push
cli
pop
and
daa
movsl
push
jno
popf
inc
lods
sahf
cli
push
adc
add
int
push
mov
arpl
scas
dec
in
icebp
jle
lret
cmp
add
lret
movsb
push
jmp
out
imul
cmp
fisubrl
int
mov
mov
iret
loop
ja
sub
cmp
or
inc
or
or
scas
arpl
jp
scas
and
daa
mov
sbb
or
fisttpll
in
push
sub
outsl
jl
mov
fidivrs
repz
daa
mov
aaa
jne
clc
mov
rcll
ds
mov
lea
out
sbb
pop
clc
inc
push
nop
dec
enter
call
jl
cltd
xchg
add
inc
xor
test
popa
xchg
std
jp
mov
xchg
lret
pusha
pop
sbb
lret
cmpsb
cltd
fsubrs
dec
add
pop
addr16
enter
add
inc
and
iret
pop
mov
push
movzwl
js
in
push
aad
xlat
mov
addl
adc
dec
mov
popa
and
ret
push
sbb
dec
sbb
jmp
pop
sbbb
pop
movsl
outsb
std
and
lods
xchg
jle
ljmp
inc
adc
add
cmpsb
mov
and
lods
sbb
lds
loope
inc
test
loope
mov
rcrb
test
add
popa
leave
icebp
in
xchg
xor
in
popf
test
mov
lods
jl
clc
cmp
stos
or
mov
add
insb
adc
adc
inc
neg
mov
outsb
clc
pop
lds
pop
cwtl
mov
or
aas
ret
int3
push
divl
mov
test
dec
out
jmp
mov
lret
outsb
lcall
lcall
mov
push
push
push
mov
aas
aam
dec
jb
inc
xor
scas
loopne
push
out
fldl
ljmp
aad
dec
data16
lds
sbb
pop
dec
dec
inc
fs
vunpcklps
jge
mov
sti
stc
add
dec
stos
adc
das
jge
inc
sub
fidivrs
push
lock
lahf
jecxz
lcall
arpl
mov
stos
or
sbb
fdivs
push
mov
jbe
rorb
jno
and
push
icebp
ss
sbb
rorl
popa
stos
adc
sbb
dec
mov
ret
insl
jne
repz
xor
mov
mov
jmp
mov
pop
xor
add
adc
adc
mov
mov
jae
int
jmp
jg
ss
push
pop
xlat
sub
adc
mov
mov
dec
sbb
cmp
fcmovne
ret
ja
ficoms
insb
mov
pop
pop
loop
xor
or
xor
in
test
sbb
movzbl
sysret
mov
jle
xchg
mov
inc
cwtd
rcrb
mov
or
mov
aam
add
and
aas
js
dec
int3
ljmp
stos
xorl
sbb
rol
es
jecxz
mov
mov
ljmp
xor
hlt
mov
call
jnp
rcl
jmp
insb
pop
push
xchg
aad
aas
dec
fsubrs
movsb
scas
push
ss
sti
in
nop
fildll
mov
xor
out
lcall
push
insb
subb
sbb
rorb
loopne
adc
sub
ret
int3
adcl
test
js
jge
data16
in
inc
mov
adc
jns
jle
xor
mov
sub
movsl
mov
fisttpll
dec
inc
add
or
xchg
and
call
mov
cmp
sbb
in
push
ficomps
je
push
mov
outsl
out
jle
xchg
icebp
rorl
sbb
xor
adc
cmpsb
outsb
imul
stc
add
test
xchg
jbe
test
cmp
jge
icebp
out
xlat
out
dec
aaa
mov
neg
dec
sbb
xchg
xchg
dec
ja
sbb
xlat
hlt
pop
push
push
xlat
xor
add
mov
mov
dec
sub
rorb
ja
in
inc
pop
mov
rorb
adc
jnp
add
lock
cmp
mov
stos
or
psrlq
xor
jp
mov
ret
test
cltd
jecxz
ret
icebp
nop
ltr
test
pop
cld
inc
adcl
sub
pusha
hlt
sbb
ret
pop
loope
or
or
cmp
or
jmp
cmp
loope
das
incb
pop
add
dec
mov
jns
shrb
add
xchg
adc
jl
dec
or
clc
ds
mov
insl
jmp
test
cmp
mov
arpl
push
jo
dec
xor
adc
mov
mov
inc
fsubrs
mov
push
pop
sub
push
in
xchg
aas
or
rolb
adc
lcall
adc
mov
push
arpl
add
xor
sbbl
mov
sbb
lods
jecxz
inc
aad
cmp
ret
push
mov
xchg
add
iret
cmp
int
packuswb
xor
or
jnp
ja
out
loope
lods
mov
jmp
lock
push
data16
movsl
jp
adc
daa
push
xchg
sti
mov
loopne
outsb
sbb
mov
jg
cmpsb
rol
and
adc
cli
mov
sbb
in
sub
out
cmp
test
xor
mov
jecxz
clc
cwtl
xor
ret
inc
dec
or
out
pop
movl
imul
aaa
js
mov
add
jl
cmpb
push
xchg
sti
push
xor
jmp
mov
pop
ljmp
add
pushf
jb
mov
test
or
mov
dec
push
add
jmp
out
mov
dec
mov
dec
sub
xchg
loopne
fnstcw
add
inc
shr
xchg
lods
cs
jbe
add
push
lcall
pop
jnp
mov
and
mov
xchg
call
sti
push
and
scas
and
faddl
push
cld
lret
repnz
jbe
cmpsl
dec
push
push
js
mull
fidivrl
add
add
ss
outsl
outsb
pop
xor
movsb
sub
sahf
repnz
or
adc
daa
dec
cltd
call
insb
std
adc
or
shrl
sahf
in
xchg
inc
fs
xchg
les
dec
mov
mov
repnz
ds
test
and
mov
xor
test
add
sbb
xlat
mov
jb
dec
mov
sub
pop
insl
pushf
jne
add
cmp
shrl
xchg
loopne
neg
popa
bound
test
jl
shll
repnz
daa
clc
popa
bound
cmp
sub
or
cmp
shll
mov
rclb
enter
cmp
mov
outsl
push
mov
mov
push
sub
ss
arpl
dec
pop
xchg
imul
inc
cmpsb
add
push
jmp
pop
das
lret
pop
push
dec
rcll
lock
lds
cmp
fcmovb
notb
shlb
repnz
sub
push
push
cltd
dec
jne
inc
or
ljmp
cmpb
movsl
or
inc
gs
addr16
shl
mov
or
aad
pop
addr16
push
adc
adc
loopne
push
shrl
push
sbb
push
mov
cmp
fistpl
subb
ss
lds
jno
xchg
jnp
cmpsb
in
outsl
dec
pop
mov
sbb
xchg
in
jnp
fcomi
xabort
xchg
mov
out
sub
push
hlt
xor
lret
test
and
dec
push
xchg
lds
mov
adc
add
sti
pop
mov
xor
das
shrl
pop
adc
jnp
imull
stos
cmp
inc
test
ret
inc
mull
jmp
xchg
arpl
bound
xchg
pop
lock
sarb
fstps
push
leave
out
popf
push
ss
xor
dec
lock
xchg
jno
mov
call
aaa
neg
cltd
push
testb
jb
subl
incb
xchg
loop
imul
xor
pop
sub
xchg
or
sbb
andb
mov
sub
outsb
cmc
test
mov
data16
add
aaa
stc
popf
mov
push
comiss
out
in
ds
pushf
fildl
push
mov
mov
and
sti
int
shll
mov
lea
in
rorb
jns
lret
pop
xchg
push
fneni(8087
mov
hlt
pop
fdivrl
or
insb
lods
ret
mov
js
jecxz
lds
mov
ret
mov
xor
push
jle
leave
add
and
cmp
push
xchg
imul
xlat
push
fmuls
out
mov
xor
andb
push
cld
add
jmp
jl
inc
dec
jmp
adc
int3
adc
aam
adc
cmpsb
or
aad
sub
in
sbb
push
sub
pop
push
inc
mov
and
movb
cmc
andl
cmp
mov
pop
mov
cld
stc
out
js
xchg
cmpsb
and
inc
or
cmp
xchg
adc
out
ljmp
and
loope
sbb
andb
jno
cmp
inc
shrl
sub
and
lret
add
mov
inc
mov
in
iret
out
sub
int3
les
fldl
pushl
xor
mov
or
and
cmpsb
test
mov
outsb
adcl
mov
sub
out
sub
jbe
push
jmp
xchg
rcpps
ret
xchg
inc
add
inc
mulb
inc
adc
jnp
xlat
hlt
pop
repz
jge
repz
fsqrt
mov
jae
inc
mov
push
push
cmp
enter
je
test
lods
pusha
push
cwtl
cli
jo
mov
lcall
out
push
ret
cwtl
or
add
mov
or
and
loope
and
cs
mov
or
sub
out
mov
lret
cwtl
adc
mov
repz
test
insb
lahf
or
jecxz
ret
movsl
lods
lds
add
mov
mov
rcr
inc
fs
stc
outsl
ret
mov
push
mov
push
mov
sub
test
pop
clc
ljmp
arpl
aam
mov
sub
test
mov
pop
mov
pop
jg
ds
sbb
ja
js
adc
adc
loop
test
xchg
xor
push
sub
xlat
inc
adc
jbe
dec
ljmp
inc
add
mov
outsb
pop
sub
loope
aam
adc
dec
cmpsb
jle
ret
out
je
dec
cmp
push
dec
in
mov
push
pop
outsb
test
inc
cmp
mov
ja
sarl
lret
popf
dec
pop
xor
fwait
iret
sbb
lcall
call
push
push
inc
xchg
mov
mov
cmp
jl
mov
andb
push
les
insb
sbb
sub
sub
adc
mov
cmp
xor
push
shll
repz
std
mov
add
jns
pop
int
mov
mov
out
movsl
xchg
xchg
add
xor
ret
jno
inc
mov
lods
imul
in
ret
mov
stos
mov
imul
inc
mov
xchg
push
xorl
xchg
dec
sbb
jne
movsl
xchg
pop
pop
lea
jb
pop
outsl
jns
shrl
push
popl
push
notl
fyl2x
jp
mov
push
dec
inc
outsb
push
insb
inc
divl
pop
inc
inc
subb
mov
sub
or
xchg
jmp
mov
dec
js
pop
pop
sbb
and
sahf
loopne
std
mov
aas
jle
cmpsb
pushf
cltd
arpl
jb
push
out
cltd
push
sub
inc
jbe
xor
xorl
out
cmp
mov
test
icebp
lods
and
hlt
ljmp
mov
xor
insb
add
xchg
out
dec
xchg
mov
or
or
xchg
leave
jae
mov
dec
lret
enter
mov
jmp
push
aas
jp
pop
popa
pop
lcall
adc
rcrl
movsb
test
mov
xchg
sbb
xchg
sbb
pusha
aas
loope
shlb
cltd
pop
cmp
nop
mov
jp
stos
dec
fcmovnb
test
aad
dec
cmp
int
filds
mov
cmp
std
or
icebp
adc
jae
sub
cmp
push
sub
test
enter
aas
xor
inc
pop
repnz
cmc
clc
xor
in
mul
test
jle
movsl
mov
aam
push
popa
cmc
insb
push
adc
fnstcw
sbb
add
jne
or
movsl
in
fists
pop
insb
sti
in
js
and
rclb
stos
or
pop
sbb
jmp
mov
mov
xlat
das
jb,pn
mov
sub
xor
lret
push
add
pop
jecxz
ret
xchg
pop
je
shll
imul
cltd
hlt
sahf
jae
or
push
mov
xor
jmp
mov
lods
jle
iret
in
inc
mov
data16
cwtl
test
lret
sbb
fimuls
mov
inc
fwait
push
pop
adc
add
sahf
add
xor
push
dec
out
mov
inc
lds
aas
add
mov
inc
mov
outsb
mov
and
out
std
push
inc
popa
sbb
into
ljmp
bnd
test
adc
arpl
mov
pop
lods
rcrl
jnp
jl
lds
and
mov
ljmp
cmp
mov
mov
fldcw
cmpsb
outsb
int3
enter
dec
jge
push
push
inc
or
add
jmp
push
movsl
test
or
jle
imul
hlt
les
lods
add
add
cmp
add
push
cmc
add
sub
or
mov
adc
and
pusha
adc
outsl
out
dec
loopne
mov
mov
or
sub
lods
ret
incb
sti
orb
pushf
jmp
and
fs
iret
addr16
pop
mov
sbb
pusha
jmp
mov
or
mov
subl
adcb
int
push
fimull
push
stc
es
mov
je
dec
jae
and
addr16
shll
mov
gs
mov
dec
sar
loopne
pusha
lock
push
xchg
ljmp
jno
xor
jne
xor
pop
and
int
cmp
and
lods
ror
pop
shrb
pop
xchg
mov
push
and
mov
dec
aas
inc
xor
imul
sbb
in
bound
cmp
sti
mov
pop
lcall
pop
and
and
push
cmpsb
mov
xchg
daa
xchg
and
inc
jp
testl
sbb
and
jns
ret
push
fistps
jo
out
mov
sti
and
mov
aas
jb
mov
adc
repz
cld
push
test
out
mov
rolb
jp
stos
dec
inc
pop
lods
xor
in
dec
ja
push
push
aam
inc
stos
xchg
dec
insb
cmc
ss
dec
sub
popa
pop
aaa
xchg
bound
lcall
ja
nop
jmp
mov
mov
fwait
aam
mov
mov
out
addl
js
out
outsb
call
dec
fcompl
hlt
sbb
jb
push
push
sti
inc
js
inc
pop
lods
pushf
daa
fdivrl
test
sbb
lock
or
xlat
data16
dec
cli
mov
mov
popf
mov
jno
xor
pop
stos
test
pushf
adc
add
mov
movsb
adc
push
aad
shll
sbb
inc
adc
xor
sbb
sbb
push
jno
adc
or
daa
inc
push
push
in
outsb
push
ljmp
out
sub
xchg
push
mov
inc
jecxz
mov
subl
jne
pushl
xchg
pop
mov
jnp
cli
cld
jbe
xor
cmp
cmp
cmp
loope
adc
shrl
rcrl
inc
je
ret
in
fisubl
sub
lret
cli
push
cmp
pop
test
ret
out
scas
xchg
arpl
fsubrs
arpl
mov
add
dec
out
mov
or
sbb
addb
repnz
enter
xchg
sbb
dec
push
and
fdivrp
xchg
pop
push
fadds
sub
scas
ja
fsubrs
and
cmpsb
gs
adc
xor
test
in
pop
dec
jg
subl
mov
stos
push
cltd
sbb
inc
cltd
sarl
push
out
push
fisubl
dec
inc
cmp
dec
push
and
into
dec
sbb
pop
adc
mov
bound
aas
sbb
int3
addr16
dec
and
cmp
xchg
xor
or
lret
cmc
or
jl
or
cmp
divb
rorl
and
jmp
or
out
xor
push
jbe
mov
shll
or
adc
push
xchg
jecxz
pop
das
nop
xchg
std
inc
fisttpl
inc
jecxz
sbb
inc
cltd
sbb
je
dec
nop
push
aas
dec
add
sub
or
adc
add
shl
mov
xchg
fcomi
add
ds
sub
mov
movsb
or
mov
add
push
dec
sub
das
jl,pt
nop
mov
int
mov
sub
lret
mov
mov
rorl
add
insb
push
btc
mov
sub
es
fldenv
out
mov
mov
test
and
sbb
nop
or
out
cmp
lods
xchg
dec
idiv
sbb
es
repnz
push
stos
dec
mov
pushf
lods
mov
sub
movsl
lods
sub
scas
dec
in
sti
push
pop
addl
pop
rcrl
test
aas
ss
aas
inc
push
dec
test
mov
xor
mov
add
addl
xor
clc
adc
scas
ret
enter
xor
stc
push
pop
adc
cmp
cs
lods
lret
in
xchg
jne
jb
xchg
lods
mov
push
lock
fcoml
push
pop
adc
and
movsl
sti
adc
pop
popa
loope
inc
cmp
lock
out
iret
test
pop
or
cmpsb
dec
push
shlb
and
mov
push
lods
stos
cs
sbb
pop
fcmovnu
mov
jns
loope
cmpsl
ret
add
sbb
inc
cmp
cmp
mov
ja
inc
mov
mov
xor
xor
dec
cmpsb
xchg
jle
cltd
and
mov
icebp
lahf
mov
adc
rclb
in
xchg
dec
ja
add
sbb
lock
popf
mov
inc
xchg
test
dec
loopne
jno
test
repnz
and
jg
xor
rcrl
and
mov
bound
notl
lock
mov
nop
lock
dec
add
xchg
jmp
test
pop
mov
dec
adc
mov
fwait
mov
or
scas
pop
mov
or
cmp
sbb
rcrb
push
in
into
imul
popa
decl
fidivrl
shr
les
xchg
pop
bound
sbb
cli
mov
movsb
jmp
cmp
insl
pushf
xchg
xor
lea
mov
sbb
add
addr16
scas
loope
mov
sahf
mov
push
daa
out
ficoms
movsl
repnz
lea
call
cmc
adc
mov
and
mov
dec
das
and
push
repnz
dec
pusha
test
cmpsb
dec
cld
dec
lret
push
mov
mov
xchg
add
xlat
dec
in
mov
adc
pop
add
rolb
mov
data16
pop
mov
mov
nop
push
add
sub
mov
add
mov
pop
jecxz
mov
dec
mov
popf
in
mov
iret
mov
xchg
xchg
cmp
jl
dec
dec
scas
lods
dec
push
ss
inc
add
aad
orl
mov
xchg
xchg
test
cmpsl
std
ljmp
mov
mov
xor
mov
cli
out
subb
or
sar
xor
fldl
fwait
icebp
dec
mov
jecxz
xlat
sub
aam
dec
inc
addr16
cmp
dec
repz
ds
sbb
leave
jo
fldl
imul
lcall
cmp
shl
aaa
jnp
sub
es
mov
mov
in
cmp
ret
and
out
sbb
imul
mov
nop
test
cli
adc
test
ds
add
rcrl
jno
sub
fisttpll
dec
mov
cmp
ret
ja
add
ljmp
or
sbb
inc
repnz
daa
jnp
sub
xchg
scas
movsb
or
jne
mov
lods
pop
int
es
dec
imul
xchg
mov
xor
shll
call
cmpsl
push
or
les
cmp
cwtl
jne
mov
push
cmp
lret
roll
push
test
push
stos
pop
mov
jns
mov
mov
ficoml
adc
pushf
enter
xchg
mov
int
aas
and
xor
push
adc
data16
mov
or
ss
jnp
mov
loop
cmpsb
les
or
lods
push
fdivr
mov
pop
leave
sub
and
stc
es
aaa
mov
movsl
mov
sbb
enter
inc
or
xchg
shll
xor
dec
mov
mov
inc
in
lds
out
std
cmp
pop
sub
xor
cwtl
movl
js
cmpsb
cli
xchg
xor
dec
jle
out
rcll
mov
add
or
aas
repz
cli
inc
sbb
out
pop
dec
cli
jbe
and
jmp
sbb
ds
vprotd
push
jo
rcrb
mov
mov
inc
mov
outsl
mov
sub
pop
sub
push
ds
sub
or
xchg
and
jge
dec
dec
inc
sub
cli
out
cwtl
xchg
cmc
imul
movsb
sbb
xchg
mov
mov
faddl
adcb
dec
insl
ud0
loop
out
mov
std
arpl
loopne
pop
repnz
push
add
add
movsl
xor
cltd
push
or
mov
add
not
sub
mov
adc
cmp
pop
push
adc
jp
sub
jno
xorb
inc
pop
daa
inc
push
jae
sbb
jns
jo
fistpll
ret
dec
jns
loopne
sub
mov
jnp
mov
jo
adc
jb
and
xchg
xchg
xchg
mov
adc
fcomp
push
sub
mov
fmuls
pop
repnz
and
aam
repz
enter
sbb
ret
inc
popf
popa
fwait
adc
cmpsl
sarb
jnp
ret
lret
xchg
pop
mov
clc
mov
dec
and
dec
rorl
xor
xchg
daa
scas
pop
dec
ljmp
popf
test
xchg
jno
and
sahf
mov
stos
mov
sub
xor
xor
int3
mov
jne
xor
das
xchg
push
push
aam
inc
cli
cmpsl
movsl
inc
andl
xchg
or
and
ljmp
das
xchg
push
icebp
mov
pop
and
xor
push
dec
aad
adc
xchg
sbb
mov
add
out
dec
cli
clc
fcomp
sbb
cmpsb
enter
and
jle
sub
sbb
dec
adc
lods
lahf
dec
and
sub
jbe
push
mov
test
fwait
and
and
lods
jo
add
dec
push
clc
dec
cmp
div
push
xchg
sub
std
jp
or
mov
jo
add
fcompl
push
or
cltd
vxorpd
jge
movsb
mov
jle
ja
movsb
dec
mov
daa
dec
or
pop
call
xorl
adc
push
xlat
addl
dec
push
cmp
push
mov
repnz
xor
fidivs
add
das
mov
test
jbe
fidivrs
mov
ret
or
pop
pusha
xchg
mov
sub
mov
xchg
jecxz
push
mov
fistps
fwait
stos
rcl
icebp
orl
push
mov
xchg
jmp
adc
lds
fs
add
adc
sahf
xchg
sbb
pop
lods
mov
out
out
inc
adc
ds
dec
cmp
mov
outsb
push
adc
xchg
sub
jno
in
rclb
shrb
or
dec
xchg
clc
jecxz
enter
and
imul
jle
ja
xor
push
decl
pop
or
insb
es
sbb
out
mov
js
xchg
sahf
out
sbbb
inc
inc
cli
hlt
mov
mov
cld
hlt
lret
cmp
sbb
shl
daa
into
scas
sub
xchg
jp
mov
bound
xchg
adc
lock
in
lds
mov
adc
enter
iret
pop
aam
imul
cmpsl
dec
cltd
insb
jb
outsb
and
dec
mov
rcll
int
sbb
enter
ret
jg
xchg
push
inc
push
mov
jecxz
daa
push
jmp
divl
mov
lahf
in
dec
pop
call
xchg
cltd
mov
inc
pop
addr16
cmp
and
sti
stos
add
xchg
rorb
push
lret
dec
fldenv
inc
daa
gs
jp
pop
aad
fs
mov
jl
bound
adc
pushf
xchg
jae
jno
pop
sbbb
pop
rclb
xchg
cli
cmp
rcll
aas
cmpsl
cmp
jno
rolb
xor
mov
imul
int
ljmp
clc
dec
scas
adc
lcall
mov
mov
sbb
inc
mov
mov
ret
loope
ds
push
mov
inc
hlt
xchg
es
jnp
cltd
add
pusha
pop
inc
push
and
xchg
stos
stc
or
dec
jae
mov
test
xchg
pop
inc
sub
mov
movsl
xor
adc
jns
mov
cmpsb
aam
ljmp
mov
aaa
stos
jmp
ss
mov
cmp
rcrb
aas
sub
movsl
fsts
ja
std
aam
movsl
mov
jae
int
cltd
xchg
xchg
or
sub
cmp
aaa
fadds
cld
jne
pusha
leave
pop
lcall
mov
push
dec
hlt
and
rcrl
rolb
inc
adc
xchg
xchg
fnsave
pop
and
enter
and
sub
jo
insb
pop
dec
mov
scas
insb
dec
lahf
xor
sub
pop
xchg
jp
and
sbb
in
dec
pop
dec
or
fisubrl
mov
xor
inc
in
adc
xlat
je
cmp
shll
pop
xchg
scas
in
add
popa
aaa
repz
pusha
aaa
f2xm1
push
mov
add
sbb
mov
test
scas
je
xor
add
push
mov
and
mov
add
loopne
hlt
fwait
jb
lahf
xchg
mov
pop
repnz
xor
jg
xchg
sbb
lcall
rcrl
lcall
sti
dec
ja
test
sbb
xchg
cmp
sub
pop
sahf
out
inc
jne
ficoml
repnz
xchg
clc
pop
push
jnp
jne
iret
out
pop
popf
xor
or
mov
icebp
push
and
pop
imul
mov
ljmp
inc
xchg
out
inc
push
add
and
ret
in
cmp
scas
lcall
xorl
rol
setg
add
mov
or
mov
je
adc
push
test
cmp
sub
ja
mov
and
inc
ficomps
push
addr16
hlt
aad
xchg
aam
mov
add
cmp
and
out
aas
dec
cmp
push
mov
cmp
mov
jnp
sub
mov
sub
stos
lahf
mov
int3
xchg
sub
jo
stos
push
std
add
stc
into
ret
add
sbb
pop
jae
scas
mov
test
mov
test
or
pushf
lcall
adc
dec
mov
shrb
ss
out
or
jb
lahf
sbb
xchg
add
jg
shl
add
arpl
aaa
sar
in
ds
cmp
xchg
mov
sub
fwait
ja
test
adc
xorl
and
fidivs
adc
jbe
faddl
pop
bound
inc
rcr
or
sarl
es
sub
clc
mov
jno
out
push
jle
adc
sbb
sub
adc
cmp
sub
lock
adc
loop
or
mov
inc
push
stc
fimuls
push
mulb
sbb
mov
in
xchg
dec
pop
jecxz
sub
xchg
xchg
push
fistl
jle
push
jge
andb
out
addr16
or
cmp
outsl
dec
mov
push
push
push
aad
in
imul
ljmp
pop
in
mov
int
shl
imul
cwtl
lret
sti
data16
mov
pop
ret
outsl
out
enter
pop
cltd
sbbl
xchg
imul
ljmp
mov
mov
scas
test
pop
std
ret
lahf
lods
or
sub
cwtl
xor
sub
inc
push
jmp
daa
mov
movsl
jno
lea
pop
rorb
mov
inc
pop
add
pop
mov
loopne
rcrb
out
cmp
push
vmovsd
test
mov
jmp
push
mov
add
jmp
mov
stos
sbb
in
jg
xchg
cmp
cld
arpl
push
orl
stos
mov
loopne
mov
mov
mov
mov
lret
or
add
pop
push
lret
jnp
loopne
xor
sbb
cmp
mov
insl
sbb
pop
psrld
sbb
push
mov
and
scas
sbb
cmp
or
test
pop
pop
bound
add
mov
adc
pop
xor
adc
sbb
scas
int
adc
out
fldl2t
jg
cmp
test
outsb
fs
repz
imul
xor
mov
ficompl
stos
adc
push
das
out
cmc
aam
push
int3
fmuls
cmpb
xchg
movsl
jmp
mov
or
mov
mov
filds
outsb
mov
pop
mov
aas
lcall
dec
addr16
addr16
enter
xchg
ret
out
mov
mov
or
daa
sbb
scas
pushl
jp
and
mov
dec
sub
mov
mov
mov
in
cltd
gs
pop
pop
call
je
jno
loope
fadds
push
xchg
jge
add
call
or
cmpsl
cmp
pusha
and
in
or
sub
test
jo
int
jae
lea
mov
push
outsl
add
insl
dec
push
or
test
fidivrs
fs
push
fs
imul
rolb
lds
or
or
inc
jnp
lret
aad
gs
and
pusha
insl
stc
insb
xor
cmp
imull
or
faddl
shl
pop
outsb
sub
mov
in
sub
int3
mov
inc
xor
daa
mov
fs
adc
das
lods
xlat
orl
mov
inc
sub
mov
push
or
or
xlat
icebp
mov
fxch
jge,pt
gs
adc
imul
mov
jns
cmp
out
xchg
faddl
bound
aas
loop
mov
add
push
lahf
aas
dec
and
dec
ds
jle
inc
hlt
xchg
stos
rol
popa
sti
sub
pop
mov
in
popa
jb
xor
dec
jb
mov
mov
add
jne
incl
ror
push
fsubrs
add
jo
pop
mov
lret
fcomip
clc
and
xor
mov
mov
movsl
sbb
sbb
fisubrl
fildll
es
and
fwait
mov
lahf
imul
lea
into
jecxz
xchg
adc
cs
inc
pop
addr16
shrl
fnstcw
mov
cmpsb
push
jo
mov
or
or
or
add
or
push
in
lods
mov
push
and
pop
adc
scas
mov
leave
cmp
std
xor
push
xor
mov
subb
cmp
xchg
pop
lahf
sbb
pop
mov
nop
jne
mov
pop
cli
jb
cld
mov
cs
or
jecxz
hlt
or
push
jl
push
jle
push
fidivrs
iret
jge
rorl
gs
push
dec
add
outsl
pop
and
popa
stc
push
fldl
pushw
fisubrl
fnstenv
add
sbb
push
jns
es
pop
mov
push
cld
mov
nop
xor
or
int
subl
into
into
mov
pushl
push
and
adc
imulb
insl
pop
xchg
cmp
jno
xchg
in
adc
push
incl
les
stos
hlt
pop
xor
pop
frstor
inc
leave
dec
or
into
push
jg
pop
int
jge
inc
cmpsl
inc
push
xor
shrl
ss
orl
loopne
or
inc
jmp
ja
andl
mov
inc
imul
pop
ja
dec
pop
sbb
rclb
hlt
sar
xchg
loope
push
add
cli
add
jl
js
mov
dec
cwtl
add
dec
inc
lret
fisttpl
out
mov
and
mov
pand
test
mov
sbb
or
cmp
inc
ljmp
lods
jo
cmc
sub
cwtl
push
div
sbb
xchg
mov
sub
icebp
popf
adc
andl
outsb
xlat
mull
cld
xor
jmp
clc
dec
add
push
pop
xor
mov
lea
shlb
adc
popf
mov
inc
scas
out
in
dec
mov
lea
jle
or
cs
mov
aam
add
inc
sub
ljmp
imul
lods
push
into
fadds
lds
jne
adc
mov
sarb
scas
jb
xchg
cmp
inc
std
sub
and
in
enter
insb
ret
xchg
in
push
jmp
mov
sub
pop
enter
scas
mov
and
sub
pusha
lcall
push
out
ljmp
cmpsl
inc
pushf
jmp
push
popf
adc
fs
lret
out
mov
or
add
sbb
pop
xchg
sub
or
mov
sbb
ret
mov
lock
ss
outsb
pop
insl
xchg
sub
dec
and
stos
or
jle
xchg
incb
add
pop
lcall
jl
fwait
or
inc
sar
dec
clc
dec
rclb
mov
dec
aaa
popf
ret
rcr
cmp
or
les
pop
jb
mov
sbb
test
rcll
xchg
or
movsl
aam
int
sbb
jmp
pop
es
or
lea
into
rcrl
stc
mov
cmp
pop
jp
push
cmp
mov
fsubp
jmp
lret
add
aad
adc
mov
pop
push
insb
in
mov
mov
adc
mov
jb
mov
xchg
aam
cmpsb
sub
dec
out
or
push
sbb
mov
shlb
cmp
lods
cmp
lahf
add
jp
xor
cmp
cmp
adc
pop
mov
mov
adc
subb
sub
fadds
xchg
xchg
repnz
out
push
mov
loope
andl
jl
in
lea
arpl
imul
pop
mov
aad
xor
push
and
push
xchg
movsl
inc
ret
pushf
addb
jns
xchg
jmp
or
pop
cld
cmp
or
jge
int
push
cli
pop
xor
sbb
test
sub
ja
push
std
dec
xlat
nop
add
out
call
addb
pusha
push
sti
mov
jo
fcoms
imul
fnstsw
and
xor
mov
ficomps
cmp
aaa
pop
imul
fdivrl
iret
lods
icebp
js
xchg
cmp
or
mov
or
jge
or
loopne
sub
sub
sub
mov
iret
ret
jo
imul
jp
add
cwtl
pushf
adc
lock
nop
jbe
iret
dec
mov
push
ljmp
ljmp
into
lds
repz
dec
fstpt
in
push
rclb
aas
xchg
lods
arpl
sub
and
inc
xchg
and
xlat
cmp
dec
ud0
push
les
in
cltd
sub
test
lods
loop
hlt
fmul
push
cmpsl
adc
adc
add
jae
push
lods
sub
adc
in
and
mov
repz
nop
push
loop
mov
xor
adc
sub
cmp
sbb
jae
xchg
test
insb
cltd
loopne
push
dec
mov
jl
jns
xlat
push
rcll
cmp
imul
add
sbb
and
mov
xchg
dec
iret
xor
sbb
sub
push
mov
stos
sbb
push
cwtl
sti
pop
lret
sub
dec
scas
test
imul
movsl
int3
pop
insl
cld
push
push
mul
or
xchg
dec
test
pop
out
dec
inc
jno
mov
insl
mov
jae
fcompl
and
in
push
push
or
mov
les
jp
mov
adc
subb
insl
out
xlat
icebp
movsl
adc
ret
loopne
dec
ss
in
std
mov
push
rcr
clc
mov
and
mov
scas
sbbb
mov
push
adc
sbb
pushf
sbb
jo
push
mov
fsubs
jo
or
push
mov
call
cmp
stos
pusha
sub
dec
dec
pushf
push
pop
pop
lods
and
push
cmp
inc
clc
add
cmp
dec
xchg
cmp
push
mov
les
mov
call
inc
and
mov
ret
push
js
jae
add
imul
insl
jmp
mov
xchg
mov
sbb
jno
inc
stos
movsl
xchg
mov
pop
mov
pop
and
rorb
xor
rol
sbb
and
add
xchg
cmp
icebp
shlb
out
mull
inc
inc
shr
mov
mov
imul
aad
pop
and
mov
movl
pusha
xlat
xchg
call
adc
es
cmpsb
add
loop
flds
xchg
das
push
sbbl
lahf
push
xchg
and
xor
or
cld
test
mov
test
mov
lcall
inc
dec
push
and
adc
mov
mov
jp
jg
movsl
imul
mov
xchg
lret
dec
push
rclb
inc
stc
push
ss
sub
xor
sub
jmp
sahf
xlat
cmp
mov
push
rol
loopne
pop
xchg
adc
movsl
int3
cmp
push
adc
xor
sub
test
fildl
jecxz
fisubrs
fnstcw
sub
mov
mov
fbstp
push
imul
imul
inc
lock
inc
push
adc
add
mov
and
notl
fnstsw
repz
dec
cmpsl
push
mov
lret
jno
pop
xchg
cmp
add
movl
aad
inc
sbb
and
cmp
mov
and
leave
das
jg
inc
sahf
dec
mov
lock
xor
jo
jmp
mov
outsl
rorl
mov
sti
jle
jmp
js
adc
lret
ss
lret
gs
sahf
les
fwait
adc
lcall
shl
jle
xchg
cli
lds
ret
es
or
xchg
imul
adc
sbb
adc
fstpl
push
mov
sbb
or
loopne
fldz
jl
fsubs
adc
in
pop
dec
in
in
lods
or
pusha
and
insl
pop
jle
es
imul
mov
mov
test
mov
lods
daa
xor
outsb
cmc
in
adc
xchg
cmc
int3
divl
xchg
pop
into
jbe
add
inc
inc
ret
inc
in
outsb
or
inc
jno
xchg
cmpsl
lcall
mov
cmp
jl
mov
out
xor
jle
fidivrl
inc
xchg
fisubrl
mov
push
fs
mov
xor
xor
jb
jge
test
shrb
fisttpll
inc
inc
adc
mov
mov
mov
cmpsl
xchg
fwait
pop
out
rcrl
jb
pusha
xchg
cmp
pop
jb
inc
mov
arpl
in
popa
or
sub
rolb
loope
aam
pop
adc
lahf
loopne
inc
test
cwtl
lahf
add
imul
sub
sub
dec
add
je
push
out
lock
cltd
sub
imul
loopne
push
inc
jl
mov
xor
daa
push
movsl
inc
popf
mov
jge
mov
mov
andl
test
mov
dec
dec
cmp
xchg
lahf
pop
adc
gs
jmp
dec
mov
sub
int
in
outsl
aaa
test
cmpsb
andb
mov
inc
xor
pop
sub
push
mov
or
dec
sti
out
cmpsb
inc
bound
xchg
cmpsb
int
jle
mov
pop
imul
adc
repz
cmp
lods
cld
cmc
xchg
shll
and
mov
mov
mov
or
out
lods
cli
fwait
inc
in
lahf
dec
adcl
or
mov
jnp
xor
les
leave
imul
and
out
addr16
pop
test
adc
adc
cmc
adc
out
fdivrl
or
test
mov
inc
lahf
aaa
loopne
cmpsb
lods
sub
ja
jne
sahf
ds
xchg
push
jno
mov
inc
std
mov
jne
mov
int
add
push
and
pushf
or
cmp
repz
dec
popa
insl
mov
xor
adc
add
test
imul
push
notb
or
inc
push
xor
icebp
lds
push
mov
push
sbb
and
js
or
add
outsl
or
arpl
daa
xor
rclb
shlb
lret
andl
cmp
ficomps
outsl
dec
sbb
sbb
aaa
lds
or
std
insl
push
ljmp
loope
lret
mov
pusha
and
push
dec
push
ret
aam
cld
cmp
or
jbe
inc
push
push
cmp
fiaddl
adc
cmp
and
jne
shrl
sbb
mov
sahf
in
pop
lahf
mov
pop
mov
in
mov
sbb
bound
das
int3
daa
rclb
mov
jns
mov
sub
aaa
in
loopne
ficompl
sbbl
loop
fidivrs
ds
ss
sti
hlt
rclb
popa
mov
movsl
int3
cmpb
push
jbe
repz
dec
lcall
fimull
xchg
push
and
movsl
mov
sbb
add
xchg
mov
jmp
aas
or
push
jmp
bound
pop
scas
sarl
fiadds
pop
pop
cli
lret
mov
das
arpl
cmovp
push
fwait
dec
insl
cmp
cli
dec
dec
xchg
in
es
andb
adc
pop
shr
mov
pop
fadd
pop
scas
push
adc
add
ret
jmp
out
or
dec
jo
lcall
xor
cld
pop
adc
mov
cmp
fmuls
loopne
pop
cmpsb
pop
lret
in
clc
sbb
push
outsl
je
das
mov
loop
bound
sub
test
or
mov
cwtl
xchg
sti
or
scas
addr16
js
orb
jg
cmp
xor
xchg
fwait
divb
lock
xor
dec
xchg
jmp
insb
mov
test
mov
mov
jg
ljmp
test
xchg
test
andb
adc
rclb
sub
cmpl
xchg
sti
and
mov
les
std
rol
inc
dec
pop
scas
dec
inc
mov
adc
xor
cmp
int3
and
mov
and
cmp
mov
cmp
scas
inc
loop
push
jmp
push
call
imul
cmp
jae
inc
sti
mov
push
lret
sub
adc
fdivl
pop
sbb
aad
sub
test
int
jecxz
mov
mov
orl
sub
and
ds
clc
mov
and
mov
sub
stc
cmp
jae
ljmp
adcb
test
pusha
stos
lret
mov
mov
hlt
dec
insl
mov
je
mov
cmp
pop
sbb
int
shl
addr16
repz
xchg
xor
pop
cli
mov
jl
sub
fstps
push
test
daa
and
fmul
push
test
mov
fistl
adc
xor
and
mov
test
push
pop
daa
mov
xchg
lret
outsl
shll
hlt
push
push
inc
push
stos
call
mov
pop
mov
addr16
loope
fwait
sbb
sub
shrb
sub
add
inc
mov
mov
jo
stc
jb
int
fcomip
pop
lret
rcl
iret
data16
loop
and
addr16
sbb
and
sub
es
push
mov
mov
loop
ficompl
fs
jae
xlat
adcb
cmp
movsb
pop
push
ja
cmpsb
cwtl
rcl
cs
xorl
out
iret
lret
jmp
adc
jmp
les
lods
and
add
mov
mov
mov
icebp
pop
addr16
aas
mov
in
fstl
xchg
data16
aas
cmp
sbb
sti
in
push
adc
das
sti
or
lret
mov
orb
movsl
lea
pop
dec
mov
add
and
xor
shlb
cld
and
lds
and
call
fwait
outsl
loop
cltd
repnz
add
mov
stc
push
push
test
js
nop
jo
loope
add
xor
mov
lea
in
fistpll
push
inc
add
clc
xorb
mov
lods
or
ja
imul
out
imul
cmpsb
and
loope
int3
pushf
loopne
mov
mov
sub
push
das
pushf
in
mov
or
outsb
pop
mov
and
iret
adc
scas
or
jle
xor
xor
iret
add
dec
negb
mov
loope
mov
addr16
jb
repnz
loop
sub
in
arpl
repnz
mov
das
or
push
pop
leave
ss
sbb
jae
cmpsl
movsl
xor
pop
aam
movsl
and
lock
jmp
loopne
jle
movsb
push
iret
inc
cs
idivl
cmc
adc
pop
pop
sbb
pop
xchg
dec
mov
push
jl
scas
mov
icebp
jbe
push
adc
xor
mov
ret
mov
jo
sbb
sub
jg
cli
pop
int3
xchg
pop
in
jns
mov
imul
add
rcrl
sbb
mov
imull
shrl
sarb
mov
mov
xchg
test
xchg
cmp
mov
lret
cmp
filds
pop
push
clc
or
daa
daa
cli
inc
pop
jb
cmp
loopne
cli
jmp
mov
les
push
adc
fnstsw
cmp
dec
out
jle
adc
sarl
inc
push
rorl
jae
dec
outsb
daa
adc
out
enter
and
icebp
shrl
iret
pushf
sbbl
out
fwait
mov
push
fiaddl
std
xor
pop
or
inc
out
adc
xchg
nop
mov
inc
and
mov
outsl
in
mov
lock
sbb
sub
cmp
out
jnp
sub
push
cmp
push
subl
sti
cmpsb
in
dec
nop
out
ret
iret
enter
mov
pushf
test
mov
daa
or
inc
bound
push
bound
xlat
push
cmp
ds
jb
mov
jl
cmpsl
clc
push
pop
inc
and
cltd
mov
jmp
push
xor
lret
imul
dec
daa
push
fldl
push
imul
mov
cld
lods
int
add
lahf
dec
add
add
adc
jno
cld
div
lock
push
xchg
loopne
xchg
dec
jp
cmc
xor
inc
fidivrl
stos
in
scas
imul
mov
pop
xchg
push
dec
shll
scas
lcall
lds
cs
cmpsl
cmp
scas
xchg
add
push
push
sar
rcll
dec
stos
mov
jl
aad
inc
xchg
mov
aas
fsubl
sub
clc
sbb
mov
mov
fneni(8087
xlat
sti
sub
and
and
push
sti
mov
rorb
f2xm1
xor
cmp
mov
fcom
movsl
mov
push
sub
jo
stos
pop
mov
xchg
orb
mov
popa
or
cmc
repnz
pop
insb
inc
add
jg
loope
pop
or
test
xchg
nop
xchg
and
lods
dec
adc
mov
imul
imul
es
or
pop
or
push
dec
in
push
and
sbb
jae
pop
jl
out
fsub
mov
pop
lock
hlt
inc
std
mov
cmp
out
fisubrs
mov
daa
mov
call
mov
or
xor
imul
fs
addr16
or
stos
pusha
int3
inc
inc
outsl
jae
out
mov
lahf
cmpb
neg
scas
and
or
orl
pop
aad
cmp
repz
pop
sbb
mov
mov
jae
in
fmull
xor
popa
jmp
cmpsl
pop
int
arpl
sbb
jg
pop
mov
xor
gs
or
loop
pop
nop
xchg
cmpsb
cmpsl
sub
mov
dec
sarb
scas
dec
mov
mov
cmp
lods
ficoms
clc
sbb
jecxz
bnd
fsubl
lret
cmpsb
inc
xor
jnp
iret
fwait
aas
loope
sub
outsl
sbb
and
lret
divb
sbb
fsubrl
insl
lret
adc
out
add
push
pop
or
repz
rcrb
leave
dec
mov
jns
scas
test
shrl
cli
popa
sti
sti
lock
and
mov
out
ja
pushf
add
adc
adc
out
mov
outsb
xor
dec
in
cld
xor
push
sub
inc
fcomps
pop
clc
pop
sub
jecxz
lea
push
xchg
outsl
and
mov
mov
or
iret
sbb
cltd
fnstsw
rcrb
cmp
sbb
aaa
arpl
movsl
testb
scas
out
pop
insl
bnd
sti
nop
add
rcll
sub
xor
lods
pop
mov
out
test
pop
mov
push
sti
outsl
aaa
xchg
cmp
xchg
bnd
mov
add
ret
test
ds
jns
inc
test
pop
sub
pop
inc
pushl
mov
mov
cli
jno
pop
ficoml
mov
insb
and
sub
jae
adc
ret
lods
popf
popf
fldcw
pop
loopne
mov
stos
cmp
shrb
push
aas
dec
mov
test
adc
loop
adc
jbe
lahf
sarb
repnz
movsb
test
mov
xchg
out
cmp
jns
mov
repnz
mov
pop
xor
or
push
outsb
test
rcrb
nop
pusha
mov
lods
inc
add
jp
xchg
cmpsb
pop
jo
push
and
jg
jp
insl
lcall
sub
push
mov
mov
push
mov
sbb
sub
fnsave
or
jne
mov
int3
out
aaa
inc
pop
xchg
xlat
arpl
xor
inc
mov
shrb
or
pop
cs
push
sbb
out
test
ret
adc
mov
xor
push
ljmp
sti
cmp
add
push
decb
bound
fwait
clc
dec
xor
sbb
mov
push
push
jne
int
and
and
das
loop
repz
loope
negb
push
ljmp
push
cmp
jge
pop
cltd
jnp
adc
mov
aaa
mov
inc
and
lahf
cmpsl
push
pop
or
mov
pop
sbb
adc
dec
loop
enter
jmp
incb
ret
pop
loope
mov
or
movsl
stc
adc
ljmp
inc
inc
and
or
dec
js
jae
ja
jmp
addr16
sbb
lahf
hlt
adc
lock
mov
pop
pop
inc
inc
lahf
xchg
dec
add
mov
loop
xorb
pushf
pop
pop
fiadds
fistps
out
jae
mov
inc
add
adc
push
in
pusha
out
mov
mov
lcall
sbb
adc
out
jae
mov
add
imul
push
cs
rorb
in
xchg
gs
push
sar
andb
cs
aaa
stos
jo
loop
mov
pop
xchg
jb
ljmp
int
dec
shll
dec
xlat
xor
cwtl
pop
test
clc
add
ret
jge
sub
adc
cmp
mov
or
jmp
rcrb
cmp
push
cmp
or
pop
adc
jl
lahf
scas
push
push
aas
imul
data16
sarb
push
pop
inc
cwtl
inc
add
and
lds
mov
xor
push
arpl
test
dec
mov
mov
shr
mov
das
mov
mov
jo
sub
int
shll
cmpl
iret
stc
add
or
repnz
mov
out
push
movsl
add
fistl
xor
lods
iret
ljmp
xchg
test
aad
jae
push
bound
mov
aaa
pop
xlat
and
repnz
dec
add
or
jmp
popa
sbb
inc
sti
jl
mov
jno
aam
sar
or
or
cltd
lcall
das
add
sub
movsb
pop
push
jns
pop
outsl
lret
fbld
inc
or
cwtl
loop
clc
jae
shr
dec
mov
sahf
and
push
test
fmuls
ror
loop
cmp
fisubrl
stc
in
dec
inc
and
in
mov
lods
cmp
add
icebp
insb
bound
inc
call
add
stc
in
lret
in
movsb
sub
jb
daa
jb
or
mov
test
mov
push
adc
js
dec
jmp
das
lods
outsb
pop
push
mov
bound
ljmp
xor
call
repnz
sub
jecxz
test
and
jnp
hlt
mov
rclb
addr16
jae
fwait
adc
inc
pop
jo
push
lods
dec
aam
out
addr16
xchg
dec
mov
pusha
xchg
mov
movsl
add
fimuls
dec
fs
jp
fldcw
inc
sbb
and
pop
xlat
or
sete
int
xor
movsb
mov
imul
int
js
jns
ss
jae
cmpsb
inc
pop
cmp
adc
cmc
xor
movsl
jg
push
pusha
cmp
js
in
adc
fistl
sbb
int3
cmp
flds
scas
pop
loope
cld
push
inc
sbb
push
ja,pt
adc
inc
jnp
les
rcrl
clc
inc
mov
pand
dec
ds
or
xchg
iret
cmpsl
test
jo
mov
or
in
inc
movsl
jecxz
jns
aam
xchg
pop
cmc
sub
xlat
push
shll
lret
xchg
ds
and
inc
outsl
out
xchg
dec
das
fnstsw
lcall
testb
add
lcall
mov
sub
push
sarb
mov
lock
add
repz
in
or
inc
mov
gs
or
push
cmp
add
inc
xor
and
mov
adc
addr16
sahf
mov
mov
mov
cmp
adc
pop
adcl
cli
lods
dec
jae
loop
add
push
cmp
cld
add
push
stos
cmpsl
lahf
jb
xchg
jge
add
pop
push
inc
dec
arpl
cmp
sub
dec
sbb
sub
mov
mov
test
xchg
lods
stos
inc
sti
mov
in
dec
push
cmp
loop
gs
sub
lods
dec
jecxz
ffree
xchg
add
int
xchg
cld
movsl
push
pop
jmp
mov
mov
jl
mov
jo
adc
mov
iret
pop
push
outsb
popf
addr16
pop
mov
mov
jmp
cmp
and
inc
rolb
add
out
xchg
fdivrs
sbb
add
loopne
in
mov
adc
loop
imul
rclb
inc
xlat
pop
sbb
shll
inc
adc
or
cmpsb
orb
test
fbstp
scas
pop
pop
dec
jbe
push
push
cmpsl
mov
sub
pop
pop
xchg
dec
push
inc
mov
xchg
stos
sbb
popf
and
or
aam
sti
jns
lahf
and
aam
mov
push
inc
or
je
jmp
pop
jo
inc
rol
int3
lcall
sarl
adc
and
movsl
xchg
xor
mov
push
sub
loopne
cmp
inc
fisttpl
mov
add
inc
xchg
aam
mov
cmp
sub
sbb
clc
int3
js
sub
test
arpl
xor
loopne
and
mov
lcall
mov
pop
scas
mov
lahf
cmc
xchg
cmp
sahf
lcall
jno
lret
fildl
repz
loope
mov
rolb
fwait
dec
ret
ret
inc
and
sub
outsb
arpl
jl
adc
rorl
mov
xor
xorb
adc
cmp
inc
pop
adc
add
negl
mov
dec
mov
add
mov
add
pop
dec
popa
mov
xchg
dec
push
push
xchg
fldenv
popf
sub
enter
sbb
ret
ret
mov
adc
xor
adc
jo
out
iret
cmp
sub
mov
cmpsl
mov
loop
sahf
out
xor
fcmovnbe
sub
repnz
inc
lods
ljmp
insb
jl
jo
pop
call
push
fldcw
lret
or
pusha
xchg
lret
ja
rcrb
xor
fwait
and
adcl
rorb
jb
cmp
or
testl
ljmp
jmp
adc
fs
imul
js
xor
jns
mov
xchg
std
stos
mov
or
insb
mov
add
add
push
cmp
mov
and
pop
jp
pop
mov
pop
inc
and
mov
mov
jns
add
cmp
ret
xchg
xlat
xor
fwait
or
lods
pop
mov
dec
mov
add
or
sbb
push
xor
test
sbb
scas
mov
push
insb
enter
movsl
adc
aad
cld
dec
mov
lret
stc
push
jbe
iret
sub
xor
data16
mov
jecxz
shl
xchg
fld
and
or
pop
mov
mov
adc
les
call
out
shrl
imul
push
call
or
sbb
xchg
dec
lods
cmpsl
mov
bound
daa
xor
sub
js
aas
js
push
jmp
and
mov
in
fnsave
dec
xchg
rclb
jmp
enter
sahf
insl
cmp
mov
add
mov
xchg
sbb
bnd
daa
cmp
sahf
leave
and
cmp
icebp
lret
adc
add
rorb
push
or
inc
sbb
fisttpl
inc
push
ljmp
and
shrl
lods
mov
sbb
push
sbb
xor
dec
mov
sub
inc
add
shrl
cmp
mov
mov
sbb
cmpsl
pushf
or
dec
dec
iret
and
add
repnz
push
mov
adc
xor
scas
and
xor
imul
ret
mull
xchg
jmp
dec
jne
ret
pushf
adc
imul
scas
bound
fists
sub
xlat
ss
das
fistpll
into
outsl
jl
or
push
out
sbb
mov
inc
scas
inc
or
xchg
out
inc
sub
jg
jg
sahf
xor
ret
pop
jge
mov
add
jp
push
rorl
xchg
inc
sbb
mul
xor
jecxz
jl
adc
sub
push
mov
out
icebp
shll
dec
mov
test
fcompl
jb
dec
xor
mov
or
bound
addr16
jns
sbb
xchg
scas
xchg
test
adc
xor
or
aaa
jae
std
sub
sub
pslld
push
adc
aad
cmp
dec
pop
xor
push
test
inc
outsb
stc
imull
mov
adc
dec
lcall
jnp
push
das
cmc
jl
mov
jbe
push
mov
and
adc
aam
jnp
leave
xchg
pop
cltd
mov
dec
sbb
cmpsb
pop
mov
mov
outsb
mov
aad
je
insl
data16
push
xor
negl
ret
fnsave
cmp
and
xchg
bound
jo
xchg
stos
aaa
test
xcrypt-ctr
cmpsl
fdiv
sbb
bound
xor
call
jns
daa
dec
int
std
loope
push
sbb
xchg
das
adcl
push
fwait
jecxz
push
call
sub
outsb
in
imul
mov
pop
lea
push
mov
jae
jne
mov
jb
add
adc
stos
mull
loop
cmp
decb
add
mov
clc
cld
push
sbb
ret
fnstenv
mov
mov
push
inc
and
movsb
mov
mov
cmp
cwtl
xchg
mov
xor
xchg
xchg
insb
pop
mov
les
lea
xor
fs
sub
and
fimuls
jbe
xlat
sub
push
rclb
pusha
lds
shl
outsb
dec
xchg
jecxz
cmp
mov
add
or
mov
stc
scas
mov
cli
mov
pop
push
stos
add
adc
pop
and
push
xor
or
push
repnz
fnstsw
inc
iret
test
inc
loopne
test
adc
adc
lods
nop
lock
jl
ror
jns
mov
pop
hlt
verr
push
std
xchg
or
loopne
push
mov
xchg
sbb
push
int
stc
push
jp
inc
and
or
incb
or
aad
adc
inc
fs
sbb
lcall
cli
iret
imul
cmpsl
or
sbb
adc
mov
incl
xchg
ret
sbb
mov
push
mov
ficomps
cmp
jmp
arpl
pop
lret
push
push
cmp
add
lods
fwait
pop
xor
movsl
mov
enter
xor
sub
pop
adc
cmp
aam
roll
mov
mov
mov
dec
pop
movsl
or
sub
sbb
cld
mov
cmpsb
or
jo
stc
pop
inc
xor
xchg
adc
cmp
clc
inc
lods
push
in
mov
insl
lods
fs
or
pushf
mov
xor
out
jbe
push
rorl
push
popa
pop
jbe
and
sarl
sarb
nop
pushf
mov
fildll
clc
xor
scas
push
sti
push
ljmp
lret
and
sub
fcoml
inc
xchg
pop
gs
gs
imul
aad
mov
popf
push
fistpll
or
adc
mov
mov
inc
cld
and
js
inc
add
mov
inc
cltd
and
add
out
mov
mov
add
push
int
mov
inc
xchg
pop
lcall
cltd
push
popl
mov
xor
subb
in
fcomi
ljmp
aaa
inc
push
push
das
pop
sub
and
test
leave
ret
xor
pop
xor
in
jo
das
pop
loopne
mov
cwtl
out
dec
es
lret
cmp
push
imul
dec
sub
jl
dec
das
sub
or
mov
mov
or
sahf
mov
pushf
dec
mov
test
push
cmpsl
sub
lretw
aam
push
je
sbb
mov
fisubs
loopne
dec
push
push
scas
xchg
mov
add
les
fs
add
call
pop
sahf
into
sub
insl
int3
push
das
pop
aad
mov
mov
mov
cmc
loop
test
jns
faddl
push
lahf
fisttps
cmp
sub
inc
inc
aas
xor
pop
int3
fwait
adc
inc
mov
cli
fs
sahf
pop
cmp
in
loope
xor
adc
push
jge
outsb
jae
sti
pop
push
push
inc
adc
and
ds
arpl
ficompl
out
testl
imul
stc
jle
jp
into
negl
dec
lcall
lods
testb
sub
lds
stos
dec
hlt
shll
js
stos
lods
push
ret
mov
adc
mov
and
inc
icebp
mov
cmovl
add
pop
add
push
fnstenv
add
sub
dec
cld
and
into
scas
mov
je
cltd
lahf
out
movsl
cmp
and
jae
adc
sbb
nop
mov
sub
jmp
repnz
cltd
andl
mov
or
jl
pop
cmp
xchg
arpl
mov
cmp
ret
stc
sbbl
in
jecxz
push
mov
or
push
aaa
push
loop
imull
ret
ljmp
push
mov
mov
cmp
pop
add
sub
push
xor
andl
mov
jle
mov
jp
or
je
in
xor
xor
pop
stos
pusha
es
or
int3
jns
cld
dec
js
inc
andb
imul
std
pop
psrlq
inc
icebp
push
shrb
sbb
loopne
mov
cmp
jg
in
or
push
and
aam
cmc
add
mov
add
daa
push
inc
icebp
cmc
cltd
cmp
sbb
cli
out
and
mov
pop
test
and
jb
jp
in
push
and
push
or
xchg
push
and
fs
in
aaa
out
gs
jmp
imul
add
leave
insl
ret
aad
testb
jmp
lret
insl
mov
adc
mov
bound
sbb
scas
iret
pop
mov
xor
xchg
mov
sti
hlt
jns
ret
subps
nop
shll
cld
cmp
dec
or
xchg
mov
sti
loopne
ret
notb
jb
rorb
cli
sub
outsl
push
pavgb
jb
insl
aad
mov
int3
xor
inc
hlt
arpl
test
lods
mov
jp
fs
jo
and
mov
dec
or
xchg
cltd
int3
movsb
sahf
stos
mov
es
cltd
stos
jle
cmc
cld
push
xchg
incl
in
sub
lock
mov
fisttpll
push
mov
popf
mov
scas
in
iret
mov
mov
fidivrl
push
je
rcl
xchg
and
lret
mov
pop
or
xor
push
and
xor
mov
pop
leave
es
repnz
inc
sbb
mov
out
mov
jbe
pop
in
cmp
pop
lcall
inc
sbb
jg
shll
mov
mov
adc
rorb
into
ja
or
mov
adc
arpl
xor
and
out
add
jp
fninit
stos
mov
fbld
cmp
xlat
mov
int
shlb
sbb
jno
and
insl
or
adc
xchg
xchg
mov
mov
xchg
sbb
lahf
sbb
loopne
sub
fcoms
arpl
xchg
xor
out
mov
dec
insb
inc
popa
xor
or
push
jp
push
inc
jmp
xorl
sar
xchg
mov
testb
jp
out
xor
icebp
cld
inc
bnd
sbb
dec
sub
cmp
mov
adcl
push
lcall
xchg
mov
hlt
frstor
hlt
aam
stc
jb
jns
iret
dec
imul
and
inc
xchg
dec
daa
sub
out
cltd
xchg
mov
andl
pop
lock
data16
jp
arpl
les
xor
xor
jle
orl
push
push
pop
inc
xchg
mov
jge
outsl
sub
fcompl
mov
lahf
xchg
pop
loop
xor
cmpb
jge
push
xor
xchg
int
inc
cs
xchg
adcb
mov
inc
stos
inc
cld
pop
pop
popf
or
scas
inc
pop
push
sub
adc
and
popa
sub
popf
sbb
mov
fsub
inc
sub
sbb
jmp
fnstenv
shl
inc
cmp
jecxz
push
arpl
mov
cmpsb
jae
jle
mov
dec
mov
mov
xor
iret
mov
sub
cmc
lods
dec
xchg
push
or
inc
sti
xchg
das
imul
mov
mov
cltd
inc
cmp
jae
dec
fs
adc
sub
push
jge
pop
pop
repnz
rcrl
adc
push
sbb
dec
push
xchg
pop
push
daa
mov
pop
fwait
inc
leave
fucompp
dec
jnp
add
sub
faddp
outsb
cmc
push
dec
imul
dec
push
mov
call
jnp
fstl
popa
add
sub
scas
mov
cmp
in
stc
insl
mov
xorl
pushf
scas
mov
aaa
mov
push
xor
adc
cmp
push
scas
or
mov
shrb
jb
or
jae
arpl
add
mov
xchg
les
xchg
daa
clc
or
push
mov
clc
dec
sbb
jle
sbbb
fistl
nop
push
repz
xor
dec
xor
mov
pop
jne
imul
in
mov
cmpsb
movsl
adc
lret
lock
dec
or
subl
rcll
std
pop
pop
or
stc
mov
push
cli
pop
lock
in
pusha
fmul
ds
les
mov
add
rorl
in
rclb
dec
pop
mov
adc
and
cmc
cmp
sub
outsl
shl
pop
dec
neg
lods
into
stc
mov
add
inc
xor
jmp
pop
and
jge
add
std
inc
dec
dec
mov
stos
stc
mov
mov
and
adc
and
loopne
xor
negb
movsb
mov
out
mov
inc
xor
notb
outsl
inc
jecxz
mov
cli
out
in
lret
pop
jo
test
and
and
pop
in
enter
cmpsl
ss
mov
mov
fisubrs
push
das
sbb
xorl
mov
mov
push
and
add
xchg
js
insb
jae
sbb
daa
ljmp
push
push
dec
mov
sub
push
ds
test
push
jnp
dec
and
add
jp
jle
push
into
nop
shlb
dec
jae
in
nop
sub
test
pop
out
xorb
dec
ja
xchg
xor
and
pusha
divb
mov
xlat
call
jmp
cmpsl
cli
stos
mov
jno
adc
xchg
sbb
movsb
stc
mov
dec
pop
sar
add
mov
int3
mov
sub
shl
stos
lods
dec
dec
inc
aad
cmp
pop
pop
idivl
ret
cmpsl
mov
lret
cmp
lret
cli
sub
or
fs
xor
mov
and
mov
mov
enter
or
jnp
insb
js
sub
mov
adc
or
adc
cs
xchg
imul
and
mov
jl
dec
or
pusha
xchg
jnp
and
add
jge
cmpsb
mov
imul
shll
jge
jmp
adcb
add
adc
pop
lock
xchg
add
movsl
push
xchg
fadd
in
pop
fimuls
mov
scas
lret
scas
and
mov
cli
mov
loop
cmp
pop
pusha
mov
and
mov
jmp
pop
pop
cmpsl
mov
dec
out
push
int
movsl
push
push
adc
mov
adc
test
mov
add
inc
fbld
jp
add
xchg
sahf
mov
adc
aam
icebp
mull
inc
cmp
fdivs
sub
je
cli
dec
nop
xchg
sub
mov
push
fnstsw
push
mov
push
movsl
outsb
sti
adc
jecxz
cmpl
repz
add
and
sub
xchg
jmp
cmp
dec
jg
scas
push
and
pop
push
repnz
jb
movsl
or
xor
mov
jmp
xor
dec
push
subps
test
data16
cmp
and
cmpl
loope
test
xor
dec
mov
mov
lahf
pop
dec
fisttpll
lods
enter
ljmp
std
jb
stos
inc
hlt
mov
jb
pushl
pop
mov
scas
cmp
or
or
ja
jmp
aam
lods
fsubr
notl
iret
push
es
iret
outsl
add
xlat
jno
or
sbb
jns
xor
xchg
mov
sahf
fcmovu
jge
add
gs
xor
dec
into
mov
or
xorl
xchg
push
mov
xor
sbb
mov
xchg
mov
roll
xor
jns
mov
pushf
xorl
inc
loope
mov
gs
popf
mov
jecxz
sbb
add
sti
pop
mov
pop
lret
xchg
inc
dec
test
jp
cmp
lea
xlat
aad
inc
add
scas
adc
fdivrp
ss
inc
shrl
jp
mov
xchg
sub
sub
ret
daa
data16
mov
mov
je
inc
xor
and
mov
test
jne
das
xchg
push
rcll
adc
fldcw
push
rorl
lods
or
sbb
scas
cmp
sub
inc
adc
mov
shll
or
cmp
push
push
inc
xor
or
cmp
adc
xlat
fdivs
addr16
xlat
and
rolb
xchg
mov
jl
jbe
xchg
pop
mov
sub
fstpl
repnz
lcall
inc
sbb
add
popl
dec
jbe
test
in
loop
arpl
adc
int
adc
scas
into
mov
addr16
mov
jbe
pushf
cltd
mov
frstor
mov
jl
sub
in
push
lods
cli
ss
cld
shll
xor
repz
add
into
sarl
fimuls
sub
push
test
jae
shr
fcomps
mov
inc
xor
and
sub
push
or
and
stc
fwait
mov
cmc
mov
mov
pop
push
xchg
adc
mov
es
sbbl
ds
call
mov
ret
imul
lods
adc
xchg
test
out
jne
xchg
xor
ret
outsb
in
jbe
jae
or
out
add
dec
out
dec
movsl
int
dec
mov
push
pop
js
xor
ds
ss
fwait
test
dec
sub
je
ffree
in
test
mov
dec
xchg
mov
adc
es
mov
mov
dec
mov
jmp
in
movsl
lret
jo
sahf
and
shlb
jo
insl
push
cs
pop
dec
pop
add
scas
jb
jl
cmp
xor
inc
lods
or
shlb
xchg
mov
in
sbb
dec
dec
fistpll
inc
push
orl
sbb
fwait
daa
stos
in
loopne
cmp
mov
xor
jno
daa
jp
push
fisubrs
mov
fstpt
or
sti
jle
repnz
ret
pop
jl
sub
jmp
outsb
inc
call
cmc
push
sbb
xchg
and
repz
stc
jmp
dec
ret
pop
mov
lods
mov
dec
mov
idivl
cmpsl
fsubrl
xchg
jp
cmp
push
push
ds
cmpsl
leave
mov
std
nopl
mov
mov
sub
pusha
jg
jae
dec
subb
insb
into
jne
in
xor
dec
in
movsl
or
sub
mov
ja
pop
scas
pop
sbb
outsb
int3
stos
mov
or
addb
cmpsl
sbb
sti
jnp
add
out
mov
inc
mov
xor
push
loopne
out
notl
xchg
and
loop
adc
repz
test
pop
add
adc
and
cmp
in
ljmp
aaa
jns
inc
push
ljmp
loopne
cmp
ss
push
jae
dec
jp
gs
sub
outsl
jmp
gs
push
out
xchg
outsb
je
fs
pusha
int
xchg
fdivl
loop
xor
and
inc
shrd
jnp
loopne
mov
sbb
les
sub
daa
arpl
int3
ds
mov
mov
xchg
mov
mov
dec
shll
arpl
pop
adc
xorb
sbb
es
jmp
xor
xlat
mov
add
cmp
cmpsl
sbb
jae
push
in
iret
cld
fwait
sbb
pushf
adc
add
std
repz
and
jmp
push
xlat
and
adc
or
pop
or
cmp
test
stc
fnclex
sbb
dec
rcrb
mov
clc
lcall
add
sbb
cs
imul
ficoml
dec
sahf
fldl2t
adc
lret
pusha
push
and
test
hlt
cmpsb
sbbl
ja
je
jo
sub
shr
adc
and
lods
or
iret
sbb
mov
inc
sbb
lock
mov
lods
inc
popf
xor
dec
insl
popa
inc
out
mov
xchg
jo
or
push
and
scas
xchg
outsb
stos
arpl
mov
push
scas
push
cs
jo
icebp
clc
fsubs
pop
adc
sbb
inc
es
mov
out
movl
jg
push
dec
adc
js
sub
xor
sub
out
xchg
arpl
ret
lret
js
imul
out
call
inc
add
pop
movntps
mov
push
cmpsl
imul
xchg
les
dec
and
cld
mov
fcoms
sbb
stc
inc
js
mov
cmp
push
or
je
sub
inc
insl
into
outsl
lea
or
mov
or
ror
lret
fs
mov
lret
pop
lea
xor
bound
les
cmpsl
mov
sub
data16
nop
shlb
shlb
inc
pop
aas
popf
cld
and
xchg
fstl
jnp
mov
iret
sub
cmpsl
inc
cld
sahf
inc
mov
adc
mov
add
lods
negl
xorl
arpl
or
std
out
pop
sbb
data16
ss
lret
or
out
repnz
cmp
cli
adc
in
sahf
arpl
movsl
cmp
sti
mov
cs
arpl
pop
aam
sbb
pop
ss
in
jecxz
xchg
xor
dec
lret
test
dec
xor
stos
push
xlat
sub
fs
mov
inc
push
xor
inc
and
xchg
outsb
or
pop
into
es
loop
mov
add
mov
and
aam
stos
sarb
mov
daa
test
push
mov
mov
xor
jns
dec
aas
aad
clc
xchg
loop
into
xchg
cmpsl
mov
push
cwtl
push
jl
cmp
dec
push
inc
or
cld
inc
mov
gs
int3
je
ljmp
ja
je
movsb
jge
out
js
inc
mov
xor
sti
jp
roll
inc
mov
jnp
test
mov
add
popa
sub
cs
aas
cmp
mov
add
inc
and
mov
icebp
fisubrl
and
cmp
popf
or
out
xchg
dec
decb
and
push
outsb
imul
adc
push
testl
call
jb
lcall
sbbl
cmp
cmp
fsubrs
stos
ljmp
hlt
xchg
xchg
adc
lods
cmpsb
dec
es
addl
stc
jae
jo
shlb
pusha
adc
mov
insl
xor
rol
int
mov
jo
fistps
sbb
dec
scas
int3
insb
or
jns
sbb
into
or
nop
mov
leave
or
xchg
sbb
dec
dec
pop
sub
xchg
or
dec
mov
lods
shl
clc
daa
adc
outsl
aad
push
sbb
dec
mov
out
jle
lahf
rcl
fldenv
addl
es
fwait
cmp
ret
sbb
aad
out
xchg
aas
lea
add
test
mov
fdivrl
adcl
les
or
outsb
inc
movsb
nop
adc
popl
jns
mov
sarb
outsb
arpl
das
jecxz
or
fildl
jno
dec
ss
and
popa
jb
call
ss
sub
inc
and
mov
ja
and
pusha
rol
sbb
sub
or
jbe
out
nop
in
jmp
stc
adc
ljmp
in
call
ljmp
idivb
push
dec
push
pop
in
leave
inc
add
hlt
ja
mov
and
and
mull
test
dec
mov
int3
ss
jno
mov
test
jae
adc
testl
repnz
stos
adc
push
cltd
arpl
mov
out
jmp
mov
fcmovnbe
cmp
xchg
fimull
jp
cld
or
xchg
add
mov
push
loop
cmp
xchg
pop
cmp
inc
add
xchg
jnp
push
hlt
lods
ds
das
mov
or
ja
push
xor
aam
popa
xor
loop
adc
inc
rclb
push
repz
sbb
mov
je
cmc
pusha
and
add
enter
xchg
adc
fcmovbe
jecxz
cmpsb
xor
andb
sti
push
jmp
xchg
mov
adc
cltd
imul
out
and
mov
mov
dec
xlat
jge
sub
xchg
lret
loope
je
jo
fdivs
lea
add
ffreep
xchg
xchg
lods
jns
gs
sub
lods
bound
sbb
pop
aad
mov
movsb
push
scas
mov
push
xchg
scas
xchg
xchg
sub
sti
in
xlat
jb
int3
into
inc
inc
test
push
imul
jbe
daa
shlb
test
enter
push
or
xchg
fwait
pop
in
scas
out
push
push
sahf
lods
fdiv
push
pop
jae
outsl
enter
gs
mov
jno
adc
jbe
jmp
inc
or
add
inc
push
xchg
xor
mov
xchg
pop
add
stos
dec
std
xor
pop
add
push
xor
xor
push
cmp
out
addr16
jmp
movsb
pop
jnp
repnz
cli
aad
cmp
jle
fstpt
cmpsl
dec
aam
xor
pop
pop
inc
sbb
sbb
sbb
imul
inc
push
jp
jae
fcoms
and
lods
jp
sub
fwait
push
out
mov
sbb
jae
daa
mov
push
adc
loopne
cmpsb
pop
xlat
dec
mov
cwtl
and
xchg
or
adc
sub
jae
rcr
adc
xor
push
jg
and
shl
stos
cmpsl
mov
lods
test
das
xchg
pop
xchg
xor
icebp
imul
shl
xor
mov
add
sub
out
sahf
repnz
mov
das
testl
shlb
lcall
loop
aam
add
jecxz
ret
push
das
lds
pop
mov
sbb
jb
push
or
jge
hlt
movsb
push
fstps
xchg
pop
add
sub
sub
mov
int3
sbb
cmpsl
int3
cli
mov
sub
repz
xchg
test
mov
push
pop
adc
lcall
out
ja
jge
fdivs
lahf
fcmovnu
es
sti
pop
clc
outsl
or
mov
jp
add
jmp
arpl
in
aas
jnp
out
fdivrp
jnp
aad
testl
rcll
data16
or
xchg
cmpsb
out
stc
gs
jb
or
jnp
and
add
adc
dec
sbbl
jg
lcall
filds
cli
fimuls
push
adc
in
inc
mov
dec
or
incb
and
mov
std
xor
movsb
aas
mov
xchg
mov
aaa
cmp
jae
push
movsb
sub
mov
cmp
mov
adc
mov
and
mov
cmp
xor
leave
lahf
les
fs
jge
pop
scas
mov
aam
iret
and
or
mov
inc
adc
or
das
inc
femms
nop
inc
xor
adc
test
cltd
pushw
imul
jnp
mov
aaa
pop
pop
js
adc
movl
xchg
push
adc
inc
jecxz
dec
cmp
jl
mov
dec
add
jmp
mov
adc
dec
xchg
stc
in
jl
mov
enter
jp
or
dec
and
cltd
mull
lea
fs
mov
cmp
data16
adc
in
int3
loope
imull
mov
mov
push
lret
in
xchg
jbe
xchg
xlat
xchg
shrl
out
add
shll
xchg
lret
jle
pop
nop
jns
daa
pop
mov
jno
mov
das
or
mov
or
push
mov
sub
addr16
jmp
lret
or
int3
add
int3
jbe
arpl
leave
sahf
lcall
push
inc
rcrb
in
add
jle
into
insb
movl
mov
sbb
pop
insl
int3
ja
jge
dec
es
or
add
shrl
pop
mov
xor
fiadds
icebp
mov
test
xor
mov
pop
cmpsl
mov
inc
lock
and
lea
das
ficompl
pop
and
or
or
loopne
pop
adc
ror
clc
mov
mov
ja
or
movsl
sbb
xchg
push
sti
and
es
jne
mov
or
cmp
push
imulb
mov
fistpll
cmc
outsl
cs
mov
inc
test
push
adc
scas
fisttpl
imul
mov
adc
test
aam
adc
aas
push
test
inc
negb
jnp
push
enter
cld
push
lahf
movsl
mov
cmp
std
int3
dec
scas
xor
insl
pushf
insl
cmp
cwtl
xorl
cmp
test
push
pop
inc
mov
loope
mov
jg
stos
sub
mov
mov
push
sub
sbb
xor
into
into
mov
inc
mov
dec
ror
and
test
pop
dec
cmp
cld
inc
xchg
mov
in
push
jo
jge
mov
dec
mov
std
fs
lret
pop
xchg
pop
cmp
add
xor
or
pop
mov
add
lods
xlat
sahf
xchg
jno
clc
mov
sbb
xchg
int3
xchg
push
xchg
mov
insb
mov
mov
or
add
mov
or
jno
sahf
sub
or
out
nop
frstor
popf
push
push
out
mov
in
sub
push
inc
pop
xlat
dec
dec
dec
mov
insl
bound
inc
dec
out
loope
pop
popa
mov
out
jbe
push
bound
cmp
jno
icebp
imul
outsl
cmp
icebp
pop
loop
sbb
xchg
jle
inc
mov
cltd
and
jmp
pop
pop
and
in
mov
insl
lods
addr16
popa
mov
test
shlb
inc
adc
les
shrl
gs
fistpl
xor
pop
sub
xchg
push
or
andb
xchg
xchg
aas
sub
sbbl
dec
call
mov
ss
ss
stc
icebp
cmp
in
fisttps
out
adc
pop
dec
sub
int3
mov
mov
push
sub
pusha
inc
rcr
add
jmp
cmc
imul
dec
sahf
es
pop
xchg
sub
dec
pop
ds
test
jno
mov
dec
or
out
stc
sbb
gs
mov
lahf
aas
outsb
test
fcomps
sub
push
mov
xchg
and
out
pop
cmp
rolb
ja
popa
ljmp
xorl
mov
lea
pop
int
in
das
aam
jno,pt
out
inc
sub
mov
in
adc
jbe
sbb
je
cltd
mov
push
loope
cmp
or
adc
xor
mov
jb
or
adc
mov
sti
push
hlt
mov
int3
xlat
add
dec
mov
jo
push
stos
lahf
jne
mov
xchg
mov
jmp
jnp
xchg
mov
or
sbb
xor
nop
pop
bnd
pop
int
movsb
stos
inc
mov
shl
call
cli
movsb
pushf
cli
ror
dec
or
jp
iret
cmp
push
lret
lods
mov
nop
mov
out
imull
arpl
lds
xchg
cmp
pushf
mov
lock
push
bswap
and
adcl
xchg
pop
ret
add
xchg
push
sub
mov
lods
lret
movsb
and
stos
loope
push
jb
push
mov
cmpsl
mov
aaa
popf
leave
push
jg
cmpsb
sub
xchg
xchg
scas
cmp
nop
jge
sbb
fucomi
cmp
insb
orl
test
bound
and
iret
pop
sbb
movsb
shll
pop
cmp
insl
and
enter
repnz
mov
mov
scas
sbbl
and
je
loope
sbb
cmc
jecxz
sahf
sub
dec
jmp
out
mov
rcrl
xchg
aam
ss
or
mov
push
out
mov
xchg
popf
mov
sub
cmc
xchg
shrb
out
pop
inc
je
sub
add
inc
cmp
mov
outsl
jg
push
fucomip
xor
je
cmp
push
in
pop
push
loopne
mov
loope
int3
inc
jecxz
icebp
adc
rcrl
sbb
scas
aad
push
inc
pop
inc
xchg
ret
imul
add
call
mov
push
pop
mov
sub
rolb
shlb
lahf
mov
mov
addb
pop
jo
shll
sbb
or
lea
je
leave
rorl
fisubrl
fiaddl
dec
jae
mov
mov
lea
add
fs
insb
sub
sub
cmp
adc
push
insl
je
sarl
sub
add
jb
jecxz
enter
jno
push
sub
pop
fimull
imul
mov
ljmp
je
xchg
js
jo
xlat
adc
xor
sub
mov
lock
mov
push
pusha
imul
js
push
stc
xchg
je
xchg
cli
movsl
jns
lock
mov
out
mov
xor
stos
pop
sti
mov
andw
data16
iret
sub
push
imul
popa
inc
sahf
jne
mov
pop
es
aaa
xchg
bound
sub
mov
mov
jbe
and
adc
scas
aaa
cltd
repz
push
and
sahf
iret
pop
mov
jbe
outsl
lcall
addr16
int
jno
js
pop
add
jae
push
mov
pop
xor
push
xor
addr16
or
ss
insb
sbb
les
ljmp
mov
lods
inc
xlat
loop
imul
lds
pop
test
in
movsl
inc
das
cmp
ljmp
xchg
inc
pop
push
pop
jnp
mov
cmp
mov
dec
inc
leave
lds
gs
add
add
and
data16
rorl
sbb
xor
xchg
nop
addl
mov
in
sbb
inc
mov
sbb
xchg
cmpb
cltd
push
push
add
ds
movsb
iret
popa
mov
mov
mov
mov
out
gs
inc
out
jo
push
xorl
xchg
add
or
pop
and
enter
ljmp
mov
fwait
and
sub
out
shl
sub
lret
cmp
lock
mov
adc
movsb
push
stos
mov
pop
pop
pushf
testb
mov
mov
jmp
inc
shr
add
cmpsb
dec
inc
adc
loop
fs
cmpsb
cmpsl
leave
sub
sbb
scas
xor
ja
call
mov
xchg
aaa
imul
inc
imul
adc
sub
push
cmc
pushf
jp
adc
stos
jne
sub
jae
std
jb
ficoms
mov
mov
add
aaa
sub
fistl
repnz
inc
inc
add
xorl
bound
or
cmp
cltd
imul
push
aam
xchg
xchg
loop
sub
inc
scas
cmpsb
cmp
decl
jg
filds
push
push
mov
fidivl
lds
cwtl
xor
loopne
sub
push
lock
sub
push
lret
lea
sub
pop
imul
pop
in
push
dec
popl
push
fnstsw
xor
aas
xor
aaa
jae
sub
mov
js
leave
pushf
jecxz
lcall
push
mov
lock
adc
jmp
xor
in
mov
inc
test
lds
fcoml
mov
cld
push
mov
rorl
jg
fldt
popf
es
xchg
aaa
sbbl
and
inc
into
push
sarb
mov
pop
xor
xor
sbb
jns
jne
mov
mov
cwtl
insb
pop
shll
fisttps
mov
ficompl
mov
aas
lods
addr16
adc
inc
aam
or
cmc
out
or
insl
mov
or
lea
push
mov
ss
es
dec
cld
add
sub
adc
ss
test
ds
test
adc
std
or
idivl
sbb
ss
fadd
inc
or
loop
dec
movsb
push
or
lods
gs
loopne
call
out
fsts
sub
out
add
pop
jnp
mov
addb
lods
dec
jo
jecxz
xor
mov
pop
sbb
sbb
js
sub
int3
les
xchg
mov
out
iret
mov
test
sbb
push
ret
sbb
push
and
int
xor
mov
jl
das
fstps
out
pusha
and
mov
cmp
repz
mov
dec
inc
jl
add
mov
fcoml
xchg
push
int
push
leave
inc
inc
ficoml
jl
lret
mov
scas
out
jb
cmpsb
push
add
stos
pop
push
fdiv
jl
jb
dec
mov
loope
or
mov
mov
pmaxub
pushf
lock
aam
insl
mov
push
arpl
rolb
and
ficompl
dec
sbb
subb
xor
lock
xor
cmpb
jns
hlt
mov
and
mov
push
cli
cmp
cmpsb
fcomps
cmc
lret
test
in
or
clc
aad
shrl
test
data16
inc
pop
lcall
clc
aaa
sbb
jge
iret
and
mov
cltd
insb
lcall
push
sbb
popa
lret
lods
outsl
jne
xlat
popf
int
mov
loopne
push
ror
jnp
inc
jns
data16
pop
movsl
push
xchg
shlb
mov
sbbl
cmp
test
shl
jbe
lods
or
movsl
dec
movsl
subl
sub
xchg
pop
push
or
aaa
adc
aam
push
mov
and
push
xor
and
lretw
or
lods
jg
pop
sar
pop
rclb
imul
jns
les
pop
aas
xchg
pop
or
repnz
test
call
jl
iret
pop
jbe
leave
xchg
xchg
ja
push
pushf
dec
cmp
scas
fwait
add
jae
mov
pusha
cmovo
adc
adc
pop
xchg
call
cmp
and
mov
sti
les
test
shr
add
test
and
push
mov
imul
cltd
or
cmp
jno
mov
xor
sub
stos
sub
dec
shl
js
mov
cltd
xchg
cs
hlt
adc
out
mov
jmp
lds
ljmp
jp
into
pop
testl
inc
into
popa
stc
inc
andb
fists
mov
cmp
push
gs
cmp
lret
xor
das
pop
add
push
mov
sbb
add
imulb
jecxz
loop
mov
lods
cwtl
add
movsl
ds
and
inc
xor
jp
xor
mov
xor
ja
jae
mov
mull
mov
test
fisubs
fisttpl
mov
test
xchg
rorl
push
push
ds
jl
js
and
or
sbb
and
sbb
push
pop
repnz
jl
push
pusha
rol
mov
test
mov
cmp
test
in
sbb
lcall
loopne
and
mov
or
out
outsb
inc
rorl
lods
ret
mov
out
out
stc
cmp
pop
adc
xchg
popa
sub
and
mov
xor
adc
cmp
pushf
inc
js
xchg
cmp
movsl
lods
or
mov
inc
push
mov
xor
mov
sbb
lcall
addr16
jge
arpl
loop
inc
xor
jl
push
out
dec
mov
aas
push
fsts
mov
xchg
push
ret
add
push
aam
fsubl
mov
lods
or
push
mov
js
xchg
xor
movd
lahf
adc
into
test
jecxz
jne
and
in
cltd
and
push
cwtl
icebp
pop
cmc
dec
mov
daa
sbb
and
leave
iret
dec
out
adc
sbb
jae
push
bnd
outsl
repnz
dec
ja
roll
jecxz
mov
int3
movsb
xchg
cmc
jne
xchg
mov
repz
idivb
mov
sbb
dec
bound
and
movsb
imul
push
stos
jo
movsb
imul
shrl
ret
mov
fisubl
jge
jae
or
nop
dec
addb
lret
test
das
lea
test
test
shll
imul
ret
mov
aas
mov
nop
aam
movsb
loop
fsubp
sbb
or
adc
jns
push
xchg
mov
hlt
inc
adc
xchg
shl
mov
xchg
or
cmc
shlb
and
dec
ss
jg
dec
xchg
sahf
jge,pt
push
cmpsl
loopne
mov
sbb
mov
cld
jle
push
repz
out
jbe
lods
ss
cli
rol
lret
pop
add
bound
and
mov
push
and
add
out
nop
and
or
das
in
jl
data16
dec
stos
arpl
ret
arpl
popa
cmp
jmp
cs
rorl
pop
inc
ret
repz
pop
add
idivb
ja
xchg
push
test
jg
mov
xorl
sub
test
test
push
subb
pushf
push
loop
inc
loop
lret
pop
xor
or
or
cmp
inc
dec
test
sub
insb
out
jno
stc
inc
in
loop
push
xchg
popa
lock
xor
fwait
ret
adcl
cli
sbb
roll
insb
dec
je
jl
in
pop
scas
xchg
adc
jmp
frstpm(287
mov
in
cli
fstp
loopne
outsl
mov
lahf
xchg
dec
push
cmp
cmc
cmp
jae
xor
xchg
inc
lcall
or
test
decl
filds
fucomp
or
clc
mov
cmp
nop
cmp
mov
das
mul
sub
mov
cmpsl
and
loopne
add
fnsave
mov
stos
roll
sub
cmp
xchg
pop
add
imul
push
dec
inc
decb
inc
or
arpl
test
outsb
xor
sub
lcall
repnz
scas
and
aas
xchg
movb
mov
icebp
jbe
fdivr
push
mov
mov
push
or
jnp
lret
cmp
xchg
cmp
adc
inc
cmp
popf
adc
mov
push
sub
pop
subl
cli
xchg
push
mov
hlt
jae
subl
lods
repz
sub
lds
inc
adc
or
pop
repz
pushf
loop
jmp
outsb
das
pop
repz
pop
xor
adc
cmpsb
imul
push
ja
dec
loop
stos
ficompl
insl
fs
pushf
adcb
adc
aam
jecxz
pop
xchg
jne
shr
cmp
lret
mov
and
pusha
insl
fimuls
pop
stos
xchg
gs
pusha
ror
push
mov
inc
iret
addr16
aad
jbe
sbb
mov
pop
loope
mov
enter
in
push
pop
cmp
sbb
cld
push
rclb
xchg
adc
mov
pop
xor
push
inc
lock
call
int3
pop
stc
test
xchg
sub
xorb
push
xchg
ds
adc
xchg
pop
mov
ljmp
cli
inc
fistpll
int
pusha
push
jl
push
inc
movsl
pop
push
mov
inc
xchg
jg
fdivs
sbbb
xchg
mov
mov
sbb
loope
popa
mov
into
sbbl
div
fadds
ret
pxor
pop
dec
mull
cmpsb
pop
add
ret
jbe
sbb
sbbb
mov
lods
scas
inc
into
adc
lret
daa
ret
icebp
jo
iret
sti
pop
popa
fs
stos
lds
scas
push
inc
movsl
and
imul
xchg
mov
pop
addl
mov
jecxz
sti
dec
data16
lea
out
mulb
test
loop
adc
inc
subl
neg
jg
insb
cld
push
ret
call
movsl
rol
decl
mov
jno
movlps
dec
sub
pushf
push
push
cmp
gs
and
jnp
out
jp
or
test
addr16
push
sub
dec
outsl
jl
or
lret
testl
push
popf
jo
insb
or
clc
js
inc
outsb
out
dec
push
pop
dec
iret
inc
sbb
in
jbe
jle
jae
inc
mov
xor
mov
movb
mov
pop
popf
call
mov
adc
lock
faddl
xchg
dec
push
out
cwtl
out
movsl
movsl
aam
ja
mov
idivb
mov
cld
adc
push
push
rorl
dec
cli
bound
xlat
mov
cli
pop
mov
sbb
lds
fisubrl
jecxz
cmpsb
std
jno
and
lock
decb
jg
add
mov
add
test
into
lret
test
mov
test
cmp
outsl
fmull
adc
cmp
sub
sub
rcl
cwtl
sbb
mov
mov
imul
shlb
cwtl
jp
movsb
push
mov
pop
jns
test
mov
dec
pop
adc
outsb
sub
inc
es
mov
loope
stos
jns
mov
fisttpl
adcb
jne
adc
sbb
and
jns
ds
loope
aam
push
mov
and
test
or
add
xor
scas
in
lds
xchg
sbb
loopne
fs
pushf
push
popa
push
sbb
std
stc
pop
sbb
pop
jo
add
cmp
dec
je
and
add
mov
and
add
push
shll
cmp
loopne
imul
pusha
push
cmpsb
add
in
dec
cld
mov
xlat
push
mov
in
sub
out
push
gs
les
mov
sub
popa
lcall
sub
out
js
dec
in
pop
adc
add
jl
lret
sub
xchg
mov
jnp
or
or
clc
in
push
xchg
pop
xor
xchg
daa
pop
mov
mov
jmp
pushf
mov
in
fwait
in
pop
lcall
std
cs
movsb
or
insb
and
xchg
mov
push
inc
dec
cmp
mov
cmpsb
in
jae
sbb
jge
ret
xchg
aaa
clc
dec
rorl
fisttps
fisttpl
xor
dec
fstps
repnz
leave
sbb
ds
lods
cmp
jl
ss
loopne
inc
or
into
adc
in
data16
jno
and
sub
mov
mov
cmp
cmp
jne
data16
pop
xchg
andl
lock
inc
rcll
pop
xor
rorb
lahf
sub
repnz
mov
sub
or
rcrb
mul
shll
xchg
or
mov
adc
sub
jecxz
mov
outsb
add
es
nop
add
mov
ret
adc
stc
sbb
fildll
rcll
and
sbb
pop
mov
add
ljmp
lret
xor
mov
sub
pop
xchg
add
insb
out
mov
fwait
aaa
mov
and
jns
lahf
add
add
in
inc
out
rclb
ss
cmp
nop
fld
mov
es
addl
cmp
xor
cmp
xchg
mov
filds
js
dec
mov
jnp
out
jne
mov
cwtl
imul
sub
pop
in
xchg
jle
leave
cmp
mov
enter
fidivl
movsb
mov
fnstcw
inc
jb
aaa
test
mov
inc
cmp
pop
adc
cmp
pop
pop
mov
cld
jmp
in
imul
adc
lret
sub
mov
fsts
mov
std
enter
ds
jns
jbe
addr16
fstps
mov
cmp
sub
movsb
rorb
bound
push
scas
test
mov
shlb
inc
lock
hlt
mov
movsb
pop
add
jl
mov
jle
jo
jns
jmp
scas
xchg
xchg
ja
sbb
cmc
push
inc
push
repnz
pop
sub
cwtl
xor
mov
dec
push
and
mov
gs
xor
xor
sbb
xlat
aad
sub
jl
pop
push
lret
pushf
loop
jnp
adc
pop
mov
sub
sub
hlt
pusha
test
push
sbbb
es
leave
sub
insl
pop
jae
mov
aam
test
pop
dec
sub
stos
add
mov
rcr
jle
sbb
or
adc
icebp
mov
loope
ss
push
dec
dec
test
rol
cltd
aam
cmp
add
pop
inc
test
pop
fsub
pusha
ret
leave
cmp
aaa
push
xchg
jns
scas
sub
testl
sub
sahf
js
and
loopne
push
nop
or
xchg
xchg
imulb
or
jo
pusha
rcrl
jle
or
mov
movsb
dec
sbb
lods
les
xor
fs
xchg
cmp
iret
mov
lea
add
shrb
enter
push
loop
filds
in
xorb
stos
inc
and
aam
mov
lods
dec
add
and
mov
shl
test
xchg
ja
sbb
les
add
or
data16
add
clc
add
inc
mov
sub
push
ss
adc
test
jl
sbb
add
push
pushf
xchg
sbb
adc
adc
shll
push
rclb
mov
push
pop
movsl
js
jo
cltd
mov
outsb
mov
adc
fwait
mov
sahf
push
inc
mov
jne
add
mov
mov
or
mov
adc
sub
cmp
out
sbb
mov
sti
out
out
jno
call
sbb
fbstp
push
push
push
mov
je
mov
push
jl
fisubrl
mov
adc
xchg
aaa
mov
movsl
pop
mov
cmp
pusha
push
in
jecxz
xor
addb
daa
adc
sub
popf
jno
push
mov
sbb
notb
inc
pop
loop,pn
out
cltd
inc
pop
nop
stos
cmc
loopne
adc
outsl
call
jo
jg
stos
repnz
call
add
jnp
in
in
sub
and
sbb
nop
mov
mov
mov
lods
pop
xchg
mov
dec
fwait
call
inc
pop
shlb
push
pop
pop
fsubrl
push
jecxz
mov
jl
inc
xor
xchg
shll
pop
cmp
shlb
add
xor
int
xchg
dec
inc
adc
xchg
or
adc
pop
out
sub
scas
mov
sbb
jge
pop
in
insb
and
jmp
lods
sub
sbb
repnz
sub
sbb
lahf
imul
pop
or
aam
rclb
xor
xchg
pop
inc
idivb
xor
jo
pop
mov
xchg
jb
scas
mov
iret
cli
repz
icebp
pop
jb
inc
outsb
out
in
adc
mov
aas
jno
movsb
sbb
or
mov
sub
jbe
inc
stos
pop
outsl
adc
jbe
dec
inc
dec
ror
enterw
test
shrb
in
sub
sbb
cli
push
aas
inc
sub
fs
lcall
cld
dec
fbld
pop
mov
and
fildll
xor
sub
ja
mov
insl
js
aas
pusha
insl
cltd
ljmp
cmpsl
rorl
or
icebp
mov
lds
xor
add
mov
sub
push
jo
jbe
mov
push
test
andl
push
mov
insl
mov
jo
jns
adc
out
fldenv
stc
xchg
pushf
sub
pop
mov
jns
call
mov
push
fstps
popf
inc
call
clc
or
aaa
stc
cmpsl
les
mov
add
loopne
hlt
mov
sub
push
fxrstor
xchg
imul
fildl
lock
push
mov
jnp
ret
push
inc
stos
lock
popa
loop
lods
inc
lret
dec
dec
cmp
xchg
push
add
cmp
pop
mov
js
int
or
aas
xchg
icebp
push
push
xchg
pop
mov
aad
repnz
xchg
test
push
xor
mov
mov
test
mov
xor
xchg
lea
mov
in
or
add
rolb
in
jnp
int3
xor
loop
stos
shll
dec
jmp
mov
xchg
scas
and
ds
daa
xchg
movl
pushf
push
ret
into
xchg
cmp
jne
xchg
mov
test
dec
jns
lods
add
or
mov
xorl
mov
push
and
jnp
adcb
push
mov
add
sbb
mov
push
mov
mov
ja
or
mov
jge
jne
nop
sbb
cmpsl
adc
mov
negb
cld
fildll
sti
and
loopne
jp
pushl
xchg
dec
jnp
andl
push
repnz
xchg
test
ret
fwait
repnz
jl
out
push
push
jecxz
mov
jg
loope
std
add
add
inc
xor
push
mov
sti
mov
inc
mov
movsb
mov
mov
adc
out
inc
pop
xchg
imull
punpckldq
sub
push
cs
xchg
fldl
push
jp
orb
out
dec
cmp
sarb
ret
mov
lods
cmc
adc
mov
stos
jg
xchg
ja
dec
clc
les
sub
fs
or
xchg
add
add
pushf
insb
js
lahf
lret
xchg
cmp
repnz
add
cmp
push
mov
xchg
jb
stos
into
or
aad
xor
sti
adcb
cmc
and
fsubr
mov
rcll
sub
mov
popa
repnz
mov
lds
cmp
mov
add
jno
xor
repnz
sub
cmp
in
es
in
mov
inc
or
cltd
xchg
daa
jmp
mov
mov
enter
aaa
inc
and
adc
sbb
mov
cli
nop
insb
xor
mov
jl
or
sub
sti
rol
leave
pop
xchg
sbb
xor
mov
push
or
adc
inc
scas
dec
mov
lahf
out
inc
add
fwait
cmp
pop
cwtl
xchg
cmpsb
push
repnz
mov
sub
jl
or
dec
cmp
mov
rcrb
xchg
int
mov
xchg
cmpsl
mov
add
add
mov
pop
dec
nop
cmc
jbe
aam
fiaddl
mov
pop
cmp
stos
cltd
das
mov
fcomp
cmpl
sub
insb
add
or
cltd
mov
fstpl
mov
fwait
ljmp
sti
mov
inc
xor
mov
arpl
out
in
or
test
pop
push
loopne
mov
push
adc
lret
adc
psllw
ljmp
je
add
push
das
insl
mov
lods
pop
in
adc
pop
sbb
push
sahf
out
sbb
cli
cmpsb
push
sbb
mov
aad
stos
dec
jno
ds
aas
push
sub
push
imul
pusha
sbb
mov
addr16
enter
or
rcrl
rcrb
sub
int
push
les
lock
test
mov
and
out
and
dec
mov
fld
add
jp
xor
cmp
mov
add
add
mov
arpl
aaa
jle
aaa
pop
cltd
inc
mov
jnp
push
lods
push
cld
pop
jmp
sub
outsb
jp
jl
mov
repnz
fsubrs
std
outsl
pop
inc
sbb
into
pushf
or
imul
ja
data16
pusha
fwait
dec
ss
lods
dec
mov
push
inc
into
stc
aas
popa
pushf
xchg
in
inc
pop
adc
adc
sahf
xchg
adc
xor
lcall
repz
pop
loop
divl
xchg
sub
sarb
insb
int3
and
or
decl
test
sbb
insb
jae
inc
adc
jl
mov
sub
hlt
loope
adc
cld
insl
scas
fsubrl
xor
push
adc
int
loope
push
cltd
fisubl
pop
mov
dec
add
stos
pop
inc
adc
mov
jnp
mov
push
or
shll
popa
mov
jns
mov
cmpsl
pop
mov
pop
insb
or
mov
sub
jb
jge
std
adc
stc
jne
lock
rorl
shr
rcrb
fmull
or
aam
pop
dec
mov
js
inc
imul
and
sub
xor
scas
mov
out
adc
mov
xchg
pushf
mov
push
imul
aas
scas
cmp
pop
mov
and
shl
push
cmp
cmp
popa
jmp
cmp
movups
xchg
pop
aam
cld
xor
in
push
hlt
lods
jne
hlt
lods
pop
lret
into
mov
arpl
xchg
pop
shlb
aad
mov
leave
adcb
fstpt
mov
xchg
gs
cmpsb
cmpsb
std
stos
enter
mov
sbb
shl
dec
dec
jb
mov
into
hlt
add
and
xlat
iret
pop
mov
pusha
cmp
sarb
mov
jle
add
inc
fs
arpl
cmp
pop
out
mov
pusha
push
push
xlat
mov
insb
push
insb
int3
sub
push
ficoml
mov
sub
out
mov
push
stos
mov
add
js
lds
adc
loop
mov
add
sub
js
std
mov
xor
lcall
inc
cmpsb
sbb
xor
mov
push
pop
in
mov
or
push
imulb
faddl
mov
fwait
jnp
push
fwait
outsb
loop
mov
subl
xor
sbb
inc
fwait
push
mov
pop
mov
xchg
push
in
das
cmp
push
cmp
xchg
mov
or
sbb
inc
lret
and
repnz
pushf
sub
outsl
outsl
sahf
cmp
jo
add
mov
jno
dec
fs
pop
jmp
je
jbe
orb
aas
xchg
test
popf
pop
mov
mov
pushf
in
mov
outsb
jp
jo
jb
call
pop
cmp
cmpsl
or
push
pusha
pop
mov
adc
jo
addl
xlat
fmuls
popa
test
xchg
repnz
mov
fwait
ret
and
add
icebp
in
xchg
or
fcmovnb
push
xchg
xchg
fscale
imul
mov
mov
fimull
stc
add
outsl
lret
add
dec
push
aam
fcomp
cli
into
fstps
xchg
in
jp
iret
xor
jl
xor
inc
sbb
mov
lea
xor
ret
cli
xor
outsl
in
add
inc
inc
insl
adcb
dec
cmp
dec
and
jge
test
int
lea
and
fwait
xchg
jmp
add
call
dec
pushf
cmp
jno
ret
in
pop
je
out
and
aad
push
push
pop
xor
rorb
or
mov
dec
and
xor
push
jmp
xchg
mov
jno
jne
mov
fbld
fs
fldcw
add
push
call
sti
fs
ret
sub
aam
les
rcrb
repnz
insl
lcall
test
add
and
xchg
bound
pop
scas
js
add
jp
aad
dec
popf
and
cmp
mov
inc
pop
sahf
pop
lock
shl
xchg
xchg
and
push
mov
sbb
jg
shlb
xor
xchg
sahf
test
pop
dec
mov
and
sub
cmp
xchg
push
xlat
sbb
xchg
xorb
fnstsw
jns
ljmp
jg
addl
add
adc
sbb
xchg
adc
mov
stos
mov
jge
and
inc
cmpsb
in
and
loop
mov
add
ss
sbb
sbb
and
add
lock
add
daa
and
sub
mulb
loopne
xchg
cmp
dec
shrl
lret
mov
aam
mov
cs
xor
jge
sbb
clc
xchg
pop
out
jle
mov
cltd
sbb
jo
add
stc
sub
movsb
rcr
stos
inc
cmpsl
rdmsr
push
push
adc
out
xchg
jl
push
mov
arpl
and
push
popa
sub
dec
or
mov
mov
mov
push
mov
pop
mov
mov
or
test
pop
mov
sub
dec
addl
jmp
jb
add
or
dec
mulb
out
pop
cmp
mov
xor
or
add
std
outsb
and
enter
cmpl
mov
pextrw
mov
or
or
int
cli
stos
adc
mov
icebp
and
pop
fdivr
push
lods
dec
rcl
in
xchg
sbb
fs
fcomps
rcrl
icebp
xchg
andl
stos
mov
sbb
pop
xlat
adc
cli
pusha
pop
rcr
sub
sub
js
inc
pop
arpl
daa
addr16
call
insl
push
fsubl
outsl
lcall
push
cmp
dec
inc
sub
mov
inc
add
stos
inc
xlat
dec
daa
outsb
inc
aam
jmp
push
add
jg
testl
xchg
jne
mov
mov
jge
cmpsb
xor
hlt
or
xor
test
in
xor
xchg
lahf
jb
testb
add
shll
jg
jmp
adc
cwtl
lock
xor
nop
adc
mov
fimull
in
or
icebp
shll
into
add
jecxz
cmp
add
xor
out
jmp
fwait
movl
jmp
mov
out
mov
xchg
int
inc
scas
and
push
in
stos
arpl
add
or
popf
fwait
and
xor
sub
add
pop
push
test
mov
and
scas
push
jecxz
mov
cli
not
decb
pushf
roll
push
jb
movsl
aaa
gs
mov
lea
insl
divb
fwait
nop
mov
jmp
cmp
into
sti
mov
sbb
sub
and
pop
unpcklps
std
xchg
mov
repz
cmp
sub
out
add
int
insl
jl
imul
adcl
jns
adc
or
nop
cld
fcoml
fs
stc
fimull
add
push
mov
or
cmp
cmp
push
fsubs
adc
outsb
decl
push
pop
pop
lcall
push
xchg
sub
pop
fs
mov
into
push
or
dec
and
add
jno
pushf
jg
insb
jp
pop
adc
mov
cmpsl
stos
in
dec
mov
mov
xor
cwtl
mov
jl
xchg
call
pop
xorb
mov
test
loopne
xchg
xor
ljmp
outsb
imul
lahf
leave
and
cmp
icebp
je
leave
enter
and
out
daa
out
ret
push
clc
dec
movsb
mov
push
into
adc
jl
addb
inc
shlb
outsl
adc
inc
pop
mov
jmp
cltd
xor
ret
shrl
jp
sub
mov
jnp
inc
ds
pop
push
sbb
popf
adc
xor
jne
test
es
int
hlt
sbb
mov
and
mov
adc
fsubrs
or
ja
jnp
mov
push
push
fmull
mov
mov
cmpsb
cmp
popf
out
mov
les
cmp
loop
sub
pushf
or
loop
xor
and
push
shrb
pop
mov
jmp
cli
xor
iret
xchg
scas
pop
mov
cmp
rep
aam
sbb
repnz
sub
leave
sbb
repz
aad
pushf
rcrl
lock
dec
test
cmp
push
sbbl
sub
sahf
ret
pusha
fdivr
adc
lret
mov
call
pop
push
adc
movsl
add
fsubl
lret
push
shlb
data16
mov
pop
pop
stos
dec
sub
mov
xorl
sub
jl
xchg
imul
addr16
cs
not
das
inc
sbb
sbbl
adc
pop
cmp
repz
fcompl
jmp
xorl
mov
jbe
fidivrs
movsl
mov
lret
mov
cmc
mov
pop
sbb
popf
out
xchg
mov
aad
stos
pop
ss
jno
pop
mov
rcr
rolb
xchg
xlat
mov
push
mov
mov
ret
mov
fadds
and
lock
int3
imul
pop
xchg
lcall
cmp
push
mov
jne
dec
mov
push
xor
fstpl
mov
xor
mov
das
cli
out
pop
jno
mov
iret
call
dec
stos
std
jns
xchg
ds
rcl
mov
sahf
mov
push
push
xor
xchg
push
div
jecxz
sti
leave
ret
inc
pop
jge
jb
sbb
pusha
sahf
insb
addr16
hlt
dec
and
add
adcb
add
inc
push
icebp
sbb
aam
std
cmp
aad
out
lahf
in
aad
xchg
test
mov
rclb
push
sahf
icebp
arpl
mov
fisttps
dec
imul
xchg
iret
icebp
std
cmp
and
or
inc
sub
out
cmpsl
ja
gs
pop
movsl
add
push
cli
inc
add
add
inc
mov
add
xchg
outsl
cmp
mov
xlat
insl
ss
mov
int
add
inc
cmp
xchg
sub
shl
dec
mov
mov
outsb
dec
outsb
dec
jecxz
inc
pop
ja
and
add
mov
repz
xchg
bound
cmpsl
mov
jae
test
mov
xchg
das
sub
aas
aad
jle
mov
inc
or
pop
in
bound
mov
pop
mov
cmc
test
cwtl
stos
push
mov
shll
mov
cmp
xor
pushf
mov
sbb
add
mov
fsts
loope
xchg
lret
lret
xor
out
test
inc
imul
push
push
dec
cli
fmul
push
sbb
add
movsb
inc
lahf
ret
xor
iret
sbb
out
push
adc
jge
cmc
or
pop
xchg
mov
sbbb
call
repnz
pop
and
popf
jecxz
and
jns
dec
jl
out
loop
push
cmp
sub
addr16
add
popf
jle
cmp
cmpsb
jecxz
cltd
push
js
aas
mov
cmp
lds
cmp
xlat
jne
inc
pusha
andl
add
add
loopne
mov
or
subl
adc
lahf
in
fnstsw
inc
push
sub
jmp
mov
push
lods
addr16
or
jns
fwait
mov
sahf
pusha
mov
test
fsubp
mov
and
test
jg
rolb
mov
add
fstpl
mov
inc
insb
adc
push
fwait
gs
je
mov
pushf
int
aaa
pop
mov
jo
add
movsb
lahf
ror
mov
insl
int
jge
mov
lcall
and
std
je
es
push
and
lret
jno
shlb
adc
jp
in
cmc
pusha
jg
scas
enter
lret
mov
mov
pushf
pop
mov
insl
fidivrs
mov
inc
cmp
xchg
adc
jae
cld
mov
push
adc
out
shrb
xchg
jp
xchg
mov
jno
and
lcall
inc
push
scas
in
outsb
iret
or
dec
or
pusha
aaa
fs
jl
out
cmp
sbb
cmp
popa
sti
fs
add
push
std
fiaddl
pop
mov
push
inc
sub
inc
jbe
mov
pop
outsb
adc
ret
xor
loope
pop
xchg
rclb
mov
popa
jo
roll
mov
fisubrl
inc
adcb
sbbb
sbb
jp
xchg
in
xor
jmp
sarl
pop
mov
insb
sbb
je
sub
and
imul
push
inc
add
mov
push
jbe
test
imul
dec
pop
fsubrl
mov
in
loopne
push
and
mov
dec
test
cmpsb
cmc
xchg
sbb
into
mov
cmp
sahf
inc
push
sub
orl
repz
out
js
inc
stos
or
aaa
push
iret
jb
sbb
aas
pop
dec
pop
mov
shlb
or
ss
mov
and
out
mov
addr16
imul
sub
mov
clc
push
and
movsb
sarl
and
sti
loope
imul
push
xchg
cmp
mov
cld
push
scas
cmp
das
std
inc
rorb
cltd
push
sub
mov
orl
repnz
mov
addb
rcrl
xchg
outsb
xor
imul
jl
mov
cmpsl
iret
push
mov
scas
ss
imul
rcll
lret
js
pop
jno
sbb
xchg
xchg
jb
and
sub
xor
add
sbb
mov
std
andb
cwtl
cmp
add
pop
mov
mov
in
into
lret
xor
jnp
ljmp
fdivrl
sub
mov
aas
sub
lea
add
inc
outsb
xchg
push
mov
leave
lods
xor
in
fnsave
fidivl
movq
in
dec
and
inc
clc
test
out
lcall
mulb
mov
call
add
dec
pusha
fcmovb
pop
xchg
jg
mov
int
addr16
aas
and
mov
push
push
mov
cmc
negb
je
shlb
pop
repz
imul
loop
add
adc
fcmovnu
aas
mov
cmp
xchg
cmpsb
and
loop
or
mov
ljmp
aam
mov
mov
in
jle
shll
push
ret
aam
xor
js
imul
push
sbb
mov
sub
mov
sbb
xchg
mov
test
mov
pusha
mov
push
cmc
xchg
ds
enter
sbbb
js
jecxz
inc
add
jecxz
mov
js
mov
push
xchg
jmp
mov
imul
imul
pusha
push
lea
mov
arpl
sahf
stos
movsb
jl
aas
cmp
mov
cmpsl
adc
lods
sbb
add
fldcw
xchg
jns
pop
js
lea
orb
xchg
inc
mov
inc
ljmp
adc
and
dec
out
gs
lcall
clc
sbb
fsubrl
lret
insl
sahf
cmp
cmp
mov
gs
push
push
xor
ror
cld
push
insb
and
mov
outsl
cld
jg
ljmp
outsb
dec
pushf
iret
outsb
adc
lods
jns
repnz
mov
std
dec
mov
cwtl
sub
ret
out
xor
scas
in
subb
enter
mov
jl
pop
testb
inc
inc
inc
push
add
in
xor
test
pop
sub
dec
test
lcall
sbb
enter
add
bound
movsb
jae
xchg
xorl
ja
sti
and
and
xlat
jecxz
out
dec
cwtl
rorl
fmuls
sub
in
test
and
arpl
lods
sbb
ja
lcall
enter
pop
pop
sub
test
adc
les
inc
jmp
and
aad
test
dec
gs
fst
pop
dec
ret
dec
jnp
jmp
sbb
adc
out
imul
mov
pop
test
xchg
jns
das
es
in
mov
or
jp
or
mov
dec
sub
or
int
fstp
rcrl
fsubl
dec
jae
xor
scas
clc
ret
rcrl
push
mov
dec
orb
mov
ja
stos
insb
mov
ret
xchg
mov
xchg
icebp
cwtl
push
test
push
adc
aad
sbb
cmp
test
xor
lods
pop
test
inc
frstor
out
inc
jns
leave
push
shll
push
pop
and
inc
dec
cmp
pop
jl
movsl
repnz
sub
movsl
les
pusha
rcrl
lds
pop
cmp
shlb
jmp
cmp
loopne
or
push
jnp
in
mov
xchg
mul
mov
mov
pop
outsb
pusha
xor
out
inc
sub
cmpb
out
cmp
pusha
xchg
cmp
fildl
fs
add
lret
adc
push
std
lcall
inc
adc
inc
aaa
cld
int
or
xor
or
fimuls
outsl
decl
mov
xchg
fiaddl
xchg
mov
push
mov
mov
arpl
cmpsb
jl
mov
shll
aas
inc
add
mov
jge
lret
adc
push
iret
sub
mov
push
scas
inc
mov
lods
pop
xlat
or
jg
or
cltd
jl
push
mov
lods
sbb
stos
dec
in
imul
inc
movsb
es
mov
sahf
pop
lock
scas
adc
fdiv
into
sarl
jp
xchg
push
fdiv
pop
mov
sub
imul
jae
hlt
adc
test
dec
jmp
movsl
sub
stos
lock
sar
clc
mov
push
int
ret
cli
push
push
mov
ljmp
sub
and
adc
es
jle
es
int3
ds
inc
push
scas
jnp
xchg
sub
mov
pusha
cmpl
lds
mov
cmpsl
jo
lret
mov
iret
inc
fucomp
out
mov
mov
and
mov
cwtl
loopne
push
or
fcomps
data16
cvtpi2ps
iret
inc
xor
clc
dec
lods
sub
xchg
loope
cmp
xchg
les
sbb
out
sbb
xchg
or
mov
pop
jg
adc
mov
push
ds
mov
stc
lahf
push
push
ret
pop
les
jne
mov
ds
pop
ja
mov
lock
cmp
stos
or
dec
push
and
push
pop
insl
dec
test
ja
mov
xor
mov
scas
mov
notb
inc
mov
add
sbb
insl
dec
into
adc
sbb
bnd
mov
jae
bound
pop
scas
mov
fwait
push
aaa
mov
mov
or
pop
mov
jp
repz
inc
or
lds
mov
cmp
cmp
in
outsb
adcb
js
popa
loope
jno
test
xor
in
repnz
fwait
imul
sbb
mov
rcrb
or
dec
and
leave
cltd
jo
pop
aas
cmpsl
mov
xchg
push
xorl
push
hlt
or
push
aam
std
test
stc
dec
in
cmovbe
xchg
xor
jmp
je
dec
adc
insl
cmpsb
jge
cld
cmpsl
repnz
push
xor
xorb
and
sbb
xor
icebp
lcall
aas
popa
jmp
jo
inc
cmpl
add
inc
jb
sub
adc
xor
mov
pop
rcr
mov
pop
div
sbb
sub
mov
push
xor
mov
adc
xorb
aam
in
or
jp
sbb
test
xchg
mov
test
lret
pop
aam
ja
ret
dec
xchg
and
jge
pop
mov
xor
mov
stc
lea
pop
repz
addl
shl
pop
push
movsl
jno
addr16
loope
fs
adc
clc
push
add
test
jbe
xor
scas
xor
xorb
into
rcll
test
outsl
jecxz
lret
aaa
aas
pop
imul
out
scas
pusha
cs
outsl
ljmp
jne
jne
cs
mov
mov
cmc
leave
test
sub
orl
xchg
popl
mov
loop
jno
cpuid
es
and
pop
mov
sbb
clc
or
jbe
mov
inc
cmp
in
cltd
jecxz
fwait
and
pop
dec
xchg
loop,pt
jg
shrb
lret
testb
dec
mov
fdivs
xchg
or
sbb
fwait
test
xchg
lcall
aas
bnd
test
push
sub
dec
cmc
fucom
repnz
mov
insb
je
inc
dec
mov
ss
push
inc
push
decb
xchg
data16
push
push
push
sbb
orl
mov
addl
inc
mov
cmp
sub
icebp
div
xorb
cmp
jnp
repnz
cmpb
test
cli
aam
in
std
in
scas
test
nop
or
cmp
jbe
add
lret
dec
xor
in
cmp
push
int3
data16
push
add
xor
cmpsl
fcmovnb
dec
dec
nop
dec
xor
push
je
jae
xchg
or
sbb
clc
xor
jle,pn
loop
fsts
inc
or
lret
test
adcb
test
repz
lods
enter
push
push
push
dec
push
jae
inc
push
sub
sub
mov
dec
clc
dec
push
mov
jb
rcrb
xor
adc
aaa
cltd
mov
testb
lods
lods
cmp
ficoml
fwait
sbb
mov
neg
dec
inc
sub
pushf
mov
push
push
out
or
inc
out
int
and
test
test
xor
xor
int3
push
xchg
xor
mov
push
or
push
repnz
and
inc
sbb
cmpsb
jno
test
ror
push
mov
xchg
xor
loopne
out
sarb
aam
jne
mov
shr
xchg
les
mov
xchg
xchg
scas
shlb
or
inc
aam
and
hlt
addl
pop
cmp
das
pop
dec
cmp
pop
xor
pop
add
adc
gs
repz
fnstsw
call
lds
dec
inc
mov
aam
pop
notb
mov
scas
in
mov
das
mov
xchg
aas
jnp
dec
dec
es
filds
push
movsl
pop
aad
push
xlat
mov
les
adc
cld
call
push
jp
mov
fdivr
xlat
jp
out
lods
add
pop
pop
push
lds
in
inc
fxam
mov
adc
xor
movsb
cmp
cmp
xchg
sub
lret
dec
insb
xchg
xchg
add
push
mov
sbb
std
jg
mov
sbb
ljmp
pop
pop
lock
cmp
inc
dec
push
in
xor
mov
popf
or
gs
je
shr
sub
adc
xchg
iret
jns
in
movsb
and
repnz
add
dec
es
sbb
in
mov
out
xchg
jo
jge
mov
and
inc
cmp
inc
pop
add
mov
ja
mov
pop
cli
jno
adc
imul
xchg
mov
xorl
and
out
add
push
sti
loope
jo
xchg
rolb
scas
fmuls
stos
jns
gs
sub
loop
mov
and
je
or
push
push
pop
cmpsb
clc
cmp
inc
jl
cmp
negb
pusha
inc
dec
inc
loop
push
add
fstpt
ret
jp
call
mov
xor
icebp
sbb
xchg
loopne
ss
out
mov
aas
lock
pop
sub
xchg
int3
mov
imul
or
addr16
jmp
insb
mov
movsl
gs
xchg
push
mov
lods
rsm
mov
je
push
push
les
testb
mov
mov
fs
les
push
fsubrs
xlat
dec
mov
adc
mov
nop
mov
or
ljmp
xchg
mov
pop
mov
inc
and
ret
fmull
shrl
andb
mov
xlat
scas
fmul
call
cs
mov
sahf
nop
enter
test
outsb
out
in
orl
xchg
jno
jecxz
dec
scas
shlb
cli
mov
adc
xchg
dec
add
sbb
sub
xchg
jb
sub
xchg
inc
das
xor
xchg
or
or
xlat
jle
mov
push
lods
xchg
dec
mov
dec
insl
inc
push
roll
in
jns
repz
pop
or
or
and
mov
fiadds
stos
push
xlat
andl
dec
pop
das
aaa
dec
jno
divl
cwtl
fldl
mov
jmp
xchg
push
in
fs
jno,pn
call
sbb
jbe
xchg
fwait
mov
sub
test
or
popa
frstor
stc
mov
subl
leave
pushf
mov
dec
popf
and
push
insb
mov
lds
cmp
mov
fcompp
push
leave
xor
mov
cmp
adcl
add
daa
dec
inc
lds
inc
out
ljmp
mov
jnp
gs
add
xor
stos
movb
xor
addr16
mov
out
into
orb
push
push
pop
movsb
or
and
adc
jmp
popa
mov
pop
scas
mov
xchg
repnz
fst
mov
sbb
das
add
xchg
mov
leave
lahf
cmp
in
daa
dec
jp
jmp
lock
addr16
jecxz
mov
xor
lea
aam
sub
push
das
ret
rorb
adc
xchg
sub
in
dec
jp
addr16
or
jmp
and
add
jo
andb
xor
sbb
add
lret
xor
pop
test
pop
add
sbb
arpl
push
sbb
cwtl
rcrb
aaa
out
stc
push
in
icebp
inc
inc
cmpsb
xor
sbb
or
push
mov
add
jle
nop
rorl
xchg
jne
pop
cld
pop
es
pusha
or
movsl
mov
jle
roll
cmp
mov
xchg
or
int
inc
std
inc
adc
jl
mov
mov
adc
or
xor
pop
shlb
aaa
push
popa
sub
orl
mov
cmp
xchg
notl
shrb
dec
inc
add
aaa
std
imul
cmc
sub
pop
fcoms
loope
mov
stc
sub
push
cmc
scas
daa
adc
inc
mov
sahf
inc
popa
or
xchg
inc
outsl
xchg
idivl
imul
pop
sbb
mov
test
mov
cwtl
mov
sub
je
test
sub
jne
xor
movsl
push
lret
pop
adc
loopw
jle
pop
in
pop
stos
mov
test
jnp
push
mov
push
xchg
fdiv
mov
aam
inc
mov
arpl
adc
pop
mov
inc
adc
hlt
cmp
gs
sbb
and
es
andb
pop
sbb
sub
sub
leave
xor
ficompl
lcall
scas
jmp
or
cmp
out
jb
adc
fsubrp
shrl
or
int
mov
ficompl
xor
outsb
add
pop
inc
lahf
adc
icebp
shrb
sti
inc
mov
mov
dec
cltd
add
mov
push
test
sub
cmp
lret
add
adc
roll
jno
pop
sarl
fisubrs
lret
icebp
cmp
push
das
aaa
xchg
aad
in
xchg
sub
cmc
lock
xchg
inc
pushf
les
repnz
jecxz
mov
mov
mov
adc
jge
sub
pop
or
int3
push
pop
data16
mov
push
ljmp
je
jo
push
scas
mov
imul
fadd
in
sub
cwtl
pop
ljmp
inc
pop
push
in
scas
cwtl
divb
add
adc
out
jmp
mov
sub
fs
xchg
cmc
in
push
out
mov
les
pop
push
in
xlat
or
cmc
sbb
mov
cld
sub
adc
xor
adc
adc
outsb
out
fdivs
pop
push
xchg
mov
lret
lcall
scas
mov
aaa
push
push
sahf
push
stos
orl
xor
mov
scas
repz
jne
fistpll
pop
dec
leave
out
adc
ja
pop
ret
mov
pop
shlb
mov
sub
subb
push
outsb
inc
insb
mov
jecxz
dec
les
cltd
pop
insl
jg
xor
ret
inc
lea
cwtl
xchg
and
and
push
xchg
mov
inc
or
jle
aam
mov
mov
xchg
lock
cmp
xor
fbstp
dec
test
mov
cmp
push
aam
jle
lahf
mov
mov
mov
push
out
inc
in
mov
push
adc
pop
xchg
jno
addr16
jno,pn
cmp
jnp
fst
push
cmpl
sbb
inc
imul
mov
ret
lods
xchg
push
jbe
or
nopl
mov
out
xlat
xor
mov
sub
cld
mov
data16
sub
movsb
xchg
pop
inc
cmp
shll
pop
popa
push
pop
jg
push
movntps
xor
adc
dec
and
cwtl
sbb
and
add
ja
mov
lcall
adc
cltd
and
cs
js
call
pop
jle
sti
sbb
add
and
push
insb
movsb
or
push
inc
xchg
ret
mull
add
je
sbb
test
jne
imul
mov
pop
movsb
push
mov
loopne
mov
mov
je
imul
dec
dec
mov
mov
imul
cltd
ljmp
arpl
push
subb
jecxz
or
inc
std
cmpsb
daa
xchg
imul
and
pop
sub
sub
lods
jb
test
stos
test
repnz
dec
inc
add
pusha
push
xchg
sbb
pusha
push
xor
lods
sub
push
lret
jmp
out
imul
dec
leave
filds
leave
inc
xchg
pop
repz
jp
dec
arpl
cmp
out
add
mov
jg
icebp
jo
aas
je
inc
add
shll
mov
mov
lods
add
mov
aas
mov
cmp
ret
enter
in
sbb
loope
push
lret
cmc
add
fidivs
sub
or
lret
sti
jns
gs
xchg
je
mov
cli
cmp
jbe
into
les
xchg
inc
popf
jo
enter
adc
cmp
shlb
es
mov
ja
ret
repz
xor
xor
cmpsl
fcmovnu
cmp
mov
adc
repnz
test
pop
cmpb
call
xchg
cmp
js
dec
xchg
mov
mov
rclb
insl
pop
test
xchg
hlt
sub
leave
cmp
cli
push
mov
inc
in
popf
and
adc
insl
insb
push
inc
clc
test
fcmovne
inc
pop
mov
pop
stos
and
mov
movsb
push
outsl
mov
mov
push
negb
pmaddwd
sbb
das
ja
mov
int
mov
fstp
pop
scas
sub
pushf
outsb
fs
add
js
stos
filds
sbb
out
lahf
inc
leave
insb
mov
mov
loop
cmp
repnz
xlat
jge
je
popf
addr16
iret
cmp
jecxz
movl
js
into
mov
sub
or
out
inc
sbb
lds
fsubs
pushf
sbb
lret
pop
mov
jo
ret
sub
sbb
or
inc
sbb
mov
lods
notl
and
es
imul
add
add
xchg
clc
mov
mov
or
push
aad
cmc
fwait
popa
sbb
mov
lods
push
lods
mov
outsl
icebp
dec
outsl
cli
pop
cmp
andb
inc
insl
in
shlb
and
cmp
push
jb
outsl
adc
push
ja
push
aad
push
test
fs
add
inc
pushf
add
adc
inc
fildl
or
dec
in
pusha
inc
shl
pop
iret
adc
js
arpl
cmpb
mov
stos
dec
clc
arpl
sbb
and
stos
and
and
push
mov
aas
dec
push
cmp
adc
jle
es
xor
fdiv
mov
adc
arpl
out
js
mov
sub
cmpl
pushf
sub
xlat
adc
stc
xchg
inc
sbb
sub
push
fnstenv
push
dec
sub
cmp
inc
sub
push
frstor
mov
or
or
push
lods
outsb
add
jle
cmc
adc
mov
jo
bound
test
cmp
clc
cmp
or
fistpl
repz
icebp
adc
or
or
and
lds
push
pop
in
adc
loopne
test
ja
pop
out
pop
cmp
sbb
jmp
fstpl
adc
dec
pop
and
outsb
lret
ds
sti
por
xchg
xor
shrl
sbb
ret
fwait
ja
aas
or
adc
and
xchg
lea
and
fcmovnbe
repnz
and
mov
fiadds
push
inc
cmp
sti
lret
adc
test
cwtl
sub
mov
and
lahf
into
cli
mov
xchg
or
popf
sti
pop
and
inc
sub
sub
repz
add
arpl
xchg
cmpb
sarb
lea
mov
mov
fisubs
jo
push
lea
add
popa
xchg
arpl
inc
mov
bound
xchg
dec
sub
lcall
fsts
or
sbb
pop
xor
cli
sbb
xchg
add
lods
call
sbb
ljmp
scas
in
ret
stos
pop
pop
push
cmc
mov
aaa
pop
adc
dec
mov
fisttpll
sar
repz
jp
pop
adc
sub
sbb
rcrb
test
mov
fwait
sbb
fwait
ret
shll
leave
in
test
stos
adc
cltd
insb
mov
push
mov
sub
adc
mov
mov
fs
movsb
xchg
mov
inc
and
sub
xor
aas
popa
push
enter
xor
sbb
jno
daa
push
mov
cmpsl
addr16
imul
dec
addr16
sub
mull
ds
and
cmpsl
nop
mov
out
in
std
pop
movsb
jne
jbe
ljmp
lock
dec
cmp
jo
out
mov
pop
mov
cli
pop
in
pop
testl
lcall
mov
scas
pushf
adc
or
push
imulb
sahf
mov
jns
loope
cmp
lret
movsl
fists
lcall
pop
lods
dec
out
mov
incb
cmp
shlb
movsl
add
popa
popa
cmp
xor
addr16
aad
xor
and
jl
loope
mov
xor
push
lods
pop
and
push
xchg
mov
jl
in
std
inc
sub
mov
and
jp
mov
sub
es
xchg
mov
or
or
mov
mov
mov
and
dec
test
xchg
jne
punpckhwd
rcr
sub
ja
mov
mov
sbb
cmp
roll
out
aad
xor
cld
bound
inc
sti
push
cmp
sub
inc
jo
adc
add
shlb
imul
inc
push
cmpsl
jmp
inc
test
lods
fcoms
fisttpll
out
ds
push
mov
fsubl
pusha
mov
xor
pop
cmpsl
inc
mov
test
cs
cmpsl
cmp
jbe
or
outsb
fsubs
mov
loop
jl
add
int
call
fisttpl
loop
scas
mov
stos
fisubl
js
pop
nop
dec
mov
lods
xchg
jnp
add
mov
inc
sub
js
or
fcomi
test
add
fdivrs
dec
xchg
test
loope
aaa
std
test
adc
mov
mov
push
jmp
jmp
icebp
sahf
push
cmp
nop
scas
dec
dec
test
push
fcmovnu
sub
cwtl
je
mov
sub
inc
xor
mov
adc
out
rorl
sub
push
push
out
xor
cmc
inc
ret
ds
test
xor
lea
les
pop
push
pop
push
dec
dec
outsb
pop
cmp
nop
std
jg
mov
loopne
push
xor
outsl
mov
mov
push
add
xor
dec
daa
test
mov
mov
ret
out
mov
popf
das
loop
in
push
mov
xchg
imul
cmpl
push
scas
aaa
inc
or
ja
sbb
add
psadbw
mov
xor
cmpsb
lret
xor
stos
adc
dec
jg
jmp
or
and
in
out
btr
lds
jo
mov
negb
iret
push
push
or
jmp
lods
rcrb
ljmp
inc
xlat
push
lret
mov
sbbb
or
out
ss
sub
stos
push
cmpsb
lcall
arpl
repnz
or
mov
adc
test
xor
inc
call
repnz
scas
fstps
dec
or
and
adc
xchg
lds
pop
gs
jo
cmp
jmp
fmull
lret
mov
pop
dec
and
sub
test
call
fs
mov
or
push
xor
xchg
jl
lds
xchg
mov
scas
jbe
and
push
and
int
inc
cmp
cli
repz
mov
pop
jp
jmp
sti
xor
cli
sarl
mov
push
jmp
out
cld
sar
sub
outsl
add
add
push
adc
sub
in
shll
cmpsb
test
loop
adc
insl
and
shlb
in
jbe
sbb
xchg
sarl
xchg
push
lds
mov
jle
pop
in
adc
jno
push
push
push
cmp
xor
mov
stc
adc
outsl
jns
xchg
inc
xor
xchg
fisubl
lods
shll
mov
mov
shrl
sti
mov
daa
mov
in
dec
dec
je
sbb
sub
nop
fbld
jae
xchg
mov
adc
loope
mov
pushf
cmp
sbb
lret
mov
or
add
xlat
and
adc
adc
mov
int3
dec
in
xor
in
pop
xor
inc
sbbb
insb
je
xlat
push
shl
outsb
push
les
cli
or
xchg
push
lods
andl
cld
sub
xor
lock
aad
mov
test
add
push
incl
cmp
mov
mov
lds
lahf
test
push
stos
sub
dec
loop
jae
pop
out
xrelease
sub
mov
and
ds
pushaw
xchg
les
shl
and
dec
mov
js
lahf
daa
sub
mov
clc
cli
mov
and
popf
jo
push
imul
lds
sbb
fstps
sbb
fildl
test
fucomip
mov
push
mov
adc
mov
dec
shrb
mov
lret
and
gs
mov
xor
test
shrb
fwait
aaa
pop
mov
mov
adc
or
clc
mov
lods
pop
sub
stc
sbb
mov
fldl
push
sub
faddl
sahf
mov
outsb
push
xlat
fxam
out
lea
inc
xchg
mov
adc
mov
mov
or
add
ret
inc
and
push
and
sbb
inc
xlat
push
outsb
pop
jb
mov
scas
cmp
scas
mov
ret
daa
test
cmp
daa
fsts
data16
es
fs
rolb
bound
shr
mov
mov
into
aad
lods
jle
cmovne
pop
es
insb
pushf
bound
sbb
fisttpl
std
sbb
aas
mul
mov
inc
add
stc
fistpll
popf
cmpsb
aad
sub
mov
andb
push
inc
rcll
in
rcll
cmp
loop
lahf
popf
hlt
xchg
jo
out
push
pop
pushf
cs
mov
push
mov
inc
mov
popa
mov
lret
rorl
dec
mov
mov
bound
cld
add
jecxz
xchg
cmp
out
out
xchg
xor
mov
loop
jno
and
xor
pop
ret
out
addr16
enter
lods
sub
or
xor
dec
mov
dec
xor
std
inc
mov
cmp
jecxz
jbe
jne
shll
push
popa
aad
adc
test
mov
cmp
fisttps
mov
fxch
aaa
inc
sbb
loopne
xlat
add
clc
jns
xchg
xchg
imul
pop
jno
scas
jne
push
mov
cmpsb
adc
mov
out
mov
loope
sub
xchg
mov
jmp
ja
add
pop
jo
jnp
aad
sub
sub
shrl
data16
jg
adc
insl
push
jle
jae
mov
clc
mov
or
imul
mov
movl
cmovle
push
pop
jns
mov
and
lret
xchg
out
inc
insb
imull
mov
rcll
pop
add
xor
sahf
ret
cli
jp
int
mov
aaa
ficoml
jle
mov
sbb
mov
add
dec
jns
out
jne
insl
mov
mov
into
push
ljmp
lock
cmp
lock
xor
les
mov
adc
inc
cmp
hlt
inc
aam
stos
int3
rorb
dec
mov
xchg
push
push
xchg
in
lea
adc
jp
ret
lea
cmpsb
call
cmp
and
pop
push
int
mov
imul
insb
push
or
push
xor
mov
cltd
push
ds
pop
push
cld
mov
lds
loope
push
decb
pushl
or
test
cmp
data16
jbe
dec
sbb
sbb
or
xchg
stc
mov
add
fists
adc
add
pop
int3
out
or
pop
jb
jns
fcmovbe
mov
xor
js
sbb
es
aam
into
jne
call
sbb
ljmp
xchg
in
pop
pop
mov
xchg
adc
adcl
xor
mov
in
inc
jb
imul
test
push
sbb
fcompl
testb
add
in
imul
dec
ss
fdivs
stc
xor
xchg
scas
lods
hlt
cmp
iret
jb
mov
fstl
loope
add
movsb
test
das
xor
or
jno
insb
dec
je
add
iret
hlt
mov
pushf
add
dec
das
popf
jmp
pop
push
pop
adc
shrl
mov
lock
add
sbb
inc
adc
jne
push
mov
sbb
lock
pop
push
cli
pop
std
sub
pop
pop
and
add
sbb
je
sub
push
sub
stc
sbb
pusha
arpl
stc
std
add
xchg
sbb
push
add
int3
lods
or
adc
loopne
jbe
fidivrs
ljmp
scas
and
enter
mov
pop
scas
sahf
push
scas
jne
inc
daa
sbb
in
adc
mov
jge
push
cmp
sahf
add
jecxz
push
cli
insl
bound
mov
jp
push
sub
out
loop
lret
js
imul
mov
sbb
mov
fistl
xor
mov
mov
or
pop
ficoms
cmpsl
add
mov
scas
ja
mov
pop
ret
cmp
push
clc
xchg
rol
popa
add
jl
pop
pop
imul
in
lahf
jae
roll
out
mov
loop
fs
mov
pop
daa
sub
stos
shlb
and
add
xchg
fcoml
outsw
push
ds
andl
adc
xchg
or
addr16
push
insb
mov
sbb
data16
fildll
nop
and
into
sub
mov
cwtl
test
movsl
popf
pop
and
cli
lea
mov
icebp
aaa
inc
xor
xchg
sub
pop
lods
adc
cmpsb
jecxz
mov
sub
ja
fsubrs
lret
sbb
ret
mov
in
pop
in
sub
int
adc
sti
loopne
mov
sbb
cld
inc
push
fisubs
fcoms
xchg
arpl
mov
sub
fsubrl
add
popa
dec
stc
xor
dec
int3
pop
or
out
addr16
repz
xor
repz
ds
popl
jbe
and
scas
arpl
imul
pop
mov
loopne
stos
pushf
and
fs
ds
mov
mov
cli
cmp
inc
int
jmp
inc
rolb
js
sbb
dec
sub
mov
mov
sub
or
inc
cltd
shll
lret
cmp
jnp
dec
jmp
into
jb
and
sub
dec
sti
lds
xchg
adc
mov
in
dec
mov
sbb
in
cmp
ret
repnz
push
fs
cmp
mov
testb
ja
inc
xchg
add
ret
inc
cld
jno
cmp
cmc
data16
xchg
add
cli
add
xchg
lods
enter
cmp
test
pop
pushf
shll
or
cmp
cmp
xchg
sub
and
in
add
or
iret
jno
mov
push
sub
mov
dec
lods
or
cmp
xchg
shl
push
mov
ret
dec
shll
mov
subl
and
add
loopne
mov
push
jno
cmc
and
dec
in
in
xlat
shrl
ret
dec
cmp
pusha
xchg
pop
loop
shlb
sahf
adc
dec
sahf
mov
in
hlt
add
clc
and
ja
push
ja
sbb
out
lcall
fstpl
xlat
and
pop
iret
outsl
int
cmp
lods
dec
mov
push
cmc
and
cmpsb
out
out
ds
lea
inc
jmp
ret
xchg
mov
xlat
inc
push
ljmp
pmulhuw
test
and
addr16
mov
xor
add
dec
outsl
lret
lret
lods
orb
mov
mov
push
fadds
xchg
cmpsl
xor
push
aaa
popf
xchg
or
push
int
hlt
xchg
inc
sarb
dec
cmp
mov
jo
cwtl
push
sbb
inc
sub
lods
pop
sbb
fisubrl
cli
xor
test
mov
mov
orl
mov
out
push
mov
outsl
stc
ret
pushf
adcb
dec
mov
scas
inc
fsubrp
mov
pop
pop
leave
dec
lahf
mov
push
and
arpl
repnz
xor
adc
sbb
andb
xchg
dec
dec
repz
mov
frstor
rol
imul
adc
movsl
pop
data16
stos
hlt
or
xchg
lret
xchg
or
jg
lret
inc
inc
cli
les
jl
cmc
xor
sarl
cli
cmc
pop
sti
pop
xchg
push
add
push
dec
xor
add
scas
xchg
popf
in
add
mov
sbb
and
out
jle
das
inc
pop
ds
fmuls
push
dec
push
add
insb
xor
or
mov
stos
mov
xor
nop
cmp
pop
mov
in
icebp
pop
inc
add
aad
inc
loopne
sbbl
mov
adc
int
sbb
imul
push
xor
cmp
pop
and
mov
or
xor
adc
push
mov
jecxz
lcall
andl
xor
push
mov
out
cmpb
sub
xor
aas
pop
xor
cmpsl
test
into
jnp
dec
pop
mov
fdivrs
mov
jecxz
ret
mov
clc
adc
jnp
int
dec
push
pop
push
aad
xor
inc
push
sbb
add
dec
mov
insb
jl
mov
inc
or
cmp
lds
xchg
push
les
xor
sar
inc
push
mov
daa
xchg
pushf
fadds
ss
and
push
xchg
xor
out
add
mov
iret
cwtl
inc
cmp
sub
add
cmpsl
int
cmpb
or
lret
inc
add
into
adc
arpl
repnz
fwait
mov
pushf
and
gs
adc
push
xchg
movsb
mov
jae
inc
jge
or
scas
and
jl
xor
repz
mov
int3
aas
mov
xor
pop
repz
fistps
dec
jecxz
add
add
lock
fsubr
push
mov
jns
cmpsl
xor
xor
push
sahf
icebp
cmp
xlat
in
ret
dec
jg
inc
test
jp
sbb
mov
push
lahf
jne
icebp
decb
insb
loopne
stos
or
dec
mov
sub
pop
loop
inc
add
stos
data16
dec
dec
cmp
enter
sub
mov
std
and
shufps
pop
mov
mov
push
test
adc
push
mov
aas
rcr
lret
inc
fimull
ds
dec
popa
aas
incl
pop
xchg
sub
sbb
inc
ret
lea
adc
sbb
jns
cmp
fcoml
xchg
in
rcrb
mov
push
int3
lret
rorl
loop
cwtl
cmc
xlat
cmp
fistpl
jge
pop
push
push
jns
inc
repnz
or
fsubp
sbb
mov
icebp
enter
and
addb
iret
enter
mov
sti
repz
bound
movmskps
mov
fwait
dec
outsb
cmp
leave
pop
outsb
test
pop
jmp
sub
pop
out
mov
mov
pop
jno
inc
mov
and
pop
push
mov
loope
hlt
jo
or
cltd
ljmp
popf
mov
add
mov
jecxz
mov
jecxz
lods
stos
sbb
aam
pop
fnstsw
cmp
cmp
out
loope
popf
iret
sbb
iret
dec
outsb
test
and
or
or
bound
div
je
adc
cmc
mov
dec
push
aam
jl
sub
sub
dec
lods
sbb
mov
ss
cmpl
inc
lock
xor
jge
mov
adcb
jle
inc
fcompl
push
sbb
lcall
test
jae
stos
lock
mov
and
pop
fst
xchg
test
mov
or
mov
mov
inc
mov
aam
mov
loopne
mov
mov
or
and
scas
ljmp
nop
mov
loope
pop
cmp
xchg
push
xchg
mov
test
xlat
mov
sub
lock
sahf
push
inc
add
in
cmc
add
cltd
cmpsl
mov
scas
push
cwtl
sbb
int
or
mov
add
in
mov
jg
push
repnz
jo
push
sbb
push
mov
mov
aam
popf
push
jl
xchg
mov
pop
push
push
bound
sub
pusha
insb
and
mov
aas
inc
rcrl
adc
adc
jae
add
sti
push
es
mov
sub
inc
push
call
inc
and
dec
movb
mov
insb
inc
sub
mov
inc
test
xchg
and
icebp
popa
lock
mov
mov
adc
and
pop
in
icebp
cs
mov
lcall
mov
pop
xor
scas
outsl
js
andb
lods
rcrb
stos
sahf
fwait
mov
div
out
lea
mov
mov
cltd
push
xor
and
xlat
lods
add
addl
cmp
add
fnsave
xor
and
lds
dec
and
inc
out
loopne
mov
mov
cmp
add
mov
push
and
xor
sbb
pop
rolb
popf
adc
push
ss
cmpsb
inc
mov
or
push
fcompl
add
xor
in
shrb
test
lcall
mov
btr
mov
push
hlt
or
shlb
inc
aaa
pop
mov
adc
mov
pop
mov
jle
dec
push
test
ss
inc
fidivrs
test
xor
push
mov
dec
outsl
movsl
in
scas
push
pop
fdivrs
pop
mov
and
pop
push
dec
jmp
out
loop
rorl
push
sbb
xchg
mov
int
sahf
or
jno
mov
push
cmp
jns
push
mov
cmp
mov
mov
sbb
and
inc
jle
xchg
es
add
cmpsl
and
ret
pop
mov
or
std
adcl
and
xchg
and
jmp
in
stos
psubsb
rcrl
lahf
sub
push
call
push
jl
movsl
out
mov
add
shlb
pushf
dec
sbb
and
mov
xchg
dec
fmuls
sub
es
or
in
jmp
lahf
lock
mov
clc
and
repz
into
xchg
sti
sarl
mov
adc
jle
add
imul
and
fs
xor
fwait
cwtl
sahf
cmpsl
cmp
push
sahf
andl
cmp
cmp
movsb
movsb
mov
test
xchg
push
stc
movsb
dec
mov
gs
cmp
loope
outsb
stos
jl
and
addr16
mov
dec
std
popa
bound
fimull
movsb
scas
nop
outsb
xlat
test
jl
leave
stos
push
cs
push
jge
rcll
test
lock
in
inc
mov
and
aas
cmp
shrb
stos
fldcw
lret
cmp
cmpsb
cmp
jp
test
loopne
xchg
xchg
sub
sub
xor
rcll
jl
inc
push
scas
dec
cli
addb
push
mov
xor
or
inc
cs
dec
xorb
mov
fidivs
cmpsb
dec
pop
scas
mov
cmp
and
in
lods
adc
js
pusha
mov
add
pop
aad
jmp
sbbl
pop
mov
or
push
push
and
out
call
mov
and
lock
clc
incl
sbb
pusha
mov
mov
mov
loope
dec
sbb
mov
dec
in
scas
mov
push
insl
or
sub
gs
xor
into
cmp
mov
rcr
into
sbb
xor
push
loope
scas
leave
hlt
jae
iret
cmpsb
movsb
loop
cmp
pusha
jge
pop
lods
xor
fists
rcll
xchg
lods
mov
ss
test
mov
mov
lret
cmp
mov
push
movsb
and
dec
mov
sbbb
adc
repz
cld
dec
pop
imul
cmpsl
or
ljmp
xchg
bound
shl
add
popa
xor
xlat
add
sahf
xor
mov
push
or
ja
addr16
insl
out
dec
insl
inc
sub
dec
and
xlat
xchg
cltd
jmp
shlb
push
mull
xor
xor
pop
or
push
lds
jmp
out
shrl
add
inc
cmp
inc
mov
iret
lret
adc
mov
imul
data16
lahf
jmp
push
mov
mov
in
pop
jle
sub
pop
mov
push
dec
fwait
push
int3
push
in
xchg
out
popf
ljmp
lret
mov
pop
inc
inc
push
mov
dec
ljmp
adc
xchg
es
mov
and
mov
bound
mov
imul
add
mov
call
les
js
nop
fs
push
into
pop
xor
mov
push
testb
mov
xchg
mov
inc
iret
jmp
cmpl
pushl
lahf
push
sbb
xor
add
mov
daa
pop
xor
fsubrs
dec
fistpl
cwtl
inc
sub
data16
insb
mov
js
pusha
lret
mov
push
jne
ret
sahf
aad
lods
outsb
and
nop
push
xorb
inc
fs
cmp
and
fldl
pusha
es
les
push
xchg
sub
cmpsb
jno
fistl
mov
mov
inc
adc
nop
xorb
jg
fwait
push
adc
sbb
cltd
inc
and
shrb
test
and
xlat
loopne
insl
xor
pop
lods
xor
outsl
sbb
testb
fmuls
iret
add
cmp
jmp
fsub
roll
int3
shlb
adc
arpl
and
dec
scas
les
push
daa
inc
and
test
das
js
mov
imul
mov
jb
ret
dec
ljmp
push
fs
int
xchg
sub
adc
iret
repnz
sahf
hlt
hlt
add
insl
shll
stos
cmp
idivl
test
and
lret
mov
sub
push
jno
jp
push
insb
sbb
push
ds
jno
ret
and
xchg
stos
jno
imul
xor
es
icebp
or
and
mov
sub
les
repnz
fwait
jle
test
pop
orl
dec
push
push
xor
sti
addb
push
dec
stos
into
inc
mov
pop
outsl
xchg
mov
sub
mov
imulb
add
and
or
pop
int3
aad
xor
testl
xchg
cltd
push
fisubrl
or
cwtl
cli
dec
and
sbb
aad
fdivl
ljmp
sbb
mov
cmpb
pop
pop
out
sahf
mov
jnp
and
mov
sub
rolb
dec
and
popf
inc
inc
jae
aaa
push
xchg
xlat
or
adc
xor
loopne
add
dec
mov
sbb
imul
icebp
lret
push
imul
mov
or
push
fistps
arpl
sub
inc
loop
inc
iret
cmp
mov
push
mov
jge
inc
mov
mov
es
ja
mov
mov
xor
inc
mov
inc
fwait
push
shlb
je
je
lcall
stos
iret
mov
mov
add
sti
adc
mov
adc
lea
mov
push
aaa
lods
jne
pop
pop
fs
push
push
jb
xchg
out
arpl
xor
cmp
jo
xor
loope
rcll
adc
mov
push
ficompl
mov
out
test
lahf
aaa
das
adc
je
das
sahf
adc
in
push
mov
sbb
lock
std
xchg
jp
push
mov
out
push
dec
lret
cltd
xchg
pop
rcll
scas
test
loopnew
mov
add
inc
movsb
add
jbe
and
mov
mov
insl
repz
push
pop
mov
cltd
stos
stos
push
mov
xchg
sub
mov
cwtl
push
push
or
data16
in
shr
jg
imull
mov
rorl
xchg
mov
into
fwait
push
cmpsb
adc
jne
outsb
mov
div
popa
sbb
iret
and
pop
jno
repnz
xor
repz
scas
push
out
cmp
or
int
mov
fisubrs
xchg
mov
inc
xor
dec
sbb
xor
jo
jl
imul
sbb
ret
lea
push
fsubrp
jmp
lock
test
inc
sar
sub
inc
sbb
imul
aad
out
mov
push
jne
sbb
sbb
sahf
jae
push
sub
in
in
out
cld
lods
add
and
popa
rol
and
jmp
shld
cmp
inc
cmp
and
in
cmp
push
cmpsb
jo
hlt
lods
fdivr
sbb
test
jae
test
mov
in
rcpps
inc
cmp
fdivs
aam
mov
mov
add
outsb
scas
mov
sbb
xchg
cs
add
mov
xor
adc
push
add
jl
andb
mov
les
test
mov
pop
sbb
and
popf
add
xor
or
movsb
mov
aad
jb
jle
loope
mov
push
call
jne
repnz
jns
xchg
sahf
mov
mov
xchg
mov
adc
push
or
fsubrs
xor
xor
jg,pt
add
sub
mov
dec
addr16
into
jno
call
adc
shll
xor
pop
xor
add
dec
or
push
icebp
mov
lret
inc
fdivr
inc
cli
inc
jb
ljmp
xchg
ffree
xor
mov
aad
idiv
mov
xchg
les
clc
jbe
push
mov
and
movsl
xor
dec
add
or
lret
mov
pop
or
mov
repz
enter
pop
mov
bound
pop
xor
and
add
sbb
xchg
ds
adc
push
dec
rcl
test
js
adc
les
lds
neg
adc
adc
inc
pushf
stos
pusha
mov
mov
data16
shll
adc
aad
push
inc
fwait
mov
xor
in
insb
adc
mov
and
cs
mov
in
pushf
pop
xchg
test
les
repnz
mov
cld
rolb
pop
adc
xor
lret
xchg
inc
idivb
cmp
mov
ja
js
xchg
inc
lods
pop
imul
jb
add
leave
sbb
add
test
sahf
in
inc
xor
iret
movsl
mov
add
bound
jbe
jo
xor
or
iret
call
mov
jmp
mov
les
add
sti
mov
jns
push
sbb
orb
jo
add
out
push
xchg
dec
add
jns
xchg
pushf
clc
mov
pop
outsb
push
push
mov
out
ljmp
sub
xor
jo
or
mov
push
pop
mov
mov
jnp
fisubs
adc
cmc
mov
sub
cld
mov
pop
sbb
ret
mov
xor
xchg
mov
arpl
cwtl
cmp
sbb
adc
addr16
cmpsl
mov
jbe
sarl
adc
lods
add
mov
pop
dec
mov
ret
test
stos
sti
mov
sub
imul
sbb
inc
stc
sbb
arpl
jno
lret
lock
lds
sbb
adc
cmp
addr16
xor
psadbw
flds
nop
stos
mov
push
jno
arpl
movsl
cmp
sahf
testl
rolb
stos
mov
dec
insl
or
adc
addr16
sbb
icebp
xchg
loopne
cwtl
xorl
std
pusha
shrb
sbb
add
sub
fisubrl
push
add
push
loop
mov
lret
loop
pop
mov
and
mov
jnp
sub
stos
adc
push
fcomp
inc
scas
jmp
sti
cmpl
out
inc
es
std
dec
mov
negl
xchg
or
lret
xchg
fs
repz
cmp
rcl
aam
sub
popf
and
cld
insb
push
stc
xor
jp
outsl
mov
jne,pn
ds
fidivl
out
xor
popf
test
les
cmpsl
and
jmp
andb
sbb
daa
daa
movsl
fldl
xchg
outsl
fwait
cmp
push
mov
lret
dec
pop
xchg
and
xor
mov
jge
movsl
adc
add
or
fistps
xor
jae
outsl
push
cwtl
test
insb
scas
fiaddl
rcrb
fsincos
mov
je
mov
lea
pop
dec
sub
cwtl
stos
orl
xchg
push
loope
jae
and
mov
sbb
push
mov
xchg
or
jae
ja
pop
in
mov
icebp
or
fsubrl
andl
lcall
mov
mov
std
inc
rclb
push
cmpsb
pop
scas
nop
mov
jne
dec
ljmp
pop
sbb
inc
push
jecxz
xchg
roll
movsl
in
mov
mov
cs
popa
adc
adc
rcr
aas
lods
add
xchg
cs
test
mov
inc
cwtl
and
mov
or
nop
sbbb
fimull
inc
xchg
mov
or
lcall
or
and
out
add
lods
data16
in
pop
shll
xor
sbb
xchg
xchg
mov
cmp
iret
jle
imul
jno
sarb
jae
test
sbbl
mov
mov
push
mov
pop
xor
aas
gs
inc
jno
rcrb
dec
cmp
sti
shll
sbb
daa
cmp
data16
fdivl
cld
push
and
fdivrl
insl
cs
jno
shrb
andb
pusha
inc
push
add
dec
int
mov
sahf
rcrl
fwait
lods
mov
sub
push
mov
loopne
xor
jmp
inc
inc
into
jnp
icebp
lret
dec
cmp
jns,pt
and
sti
pop
arpl
shrl
add
in
in
cmc
inc
cmp
sub
push
jo
fstpt
sub
push
ret
mov
cmpsl
jb
dec
nop
aas
mov
push
xor
jae
rclb
adc
sbb
repnz
cmp
mov
test
add
dec
push
or
shrl
or
xchg
int
in
mov
call
stc
out
push
push
and
push
sbb
or
inc
subl
and
xchg
cmpl
mov
js
iret
cmp
addb
xchg
add
xchg
cwtl
jle
adc
aam
cltd
inc
sbb
fnstcw
loopne
sahf
dec
mov
js
call
xor
std
xchg
mov
test
push
pop
adcb
stos
mov
xor
divl
cmp
repz
sbb
inc
mov
dec
ja
stos
inc
movsb
push
cmp
mov
adc
scas
dec
imul
movsb
rorb
and
fisubs
dec
adc
inc
jecxz
or
aas
je
orl
inc
xor
jl
jmp
xchg
mov
cmp
dec
push
ret
je
mov
inc
lret
pop
lret
and
shlb
and
add
sarb
arpl
pop
inc
and
xchg
hlt
lret
lret
or
in
inc
das
fildl
mov
pop
rcrl
push
out
movsl
call
mov
rcll
pop
fistl
mov
sbb
fstpt
and
jo
inc
stos
mov
xor
test
lods
adc
adc
mov
mov
into
addb
inc
stos
adc
sub
xchg
mov
aad
jecxz
mov
adc
stos
andb
jl
push
or
or
add
xchg
ss
sub
mov
cmp
je
jecxz
loope
pop
repz
inc
stos
dec
cmp
cmp
lea
jle
and
cmp
push
adc
pop
lret
jns
xor
das
fists
or
sub
popf
inc
neg
pushf
das
push
dec
loop
lret
sbb
in
pushf
cmpsb
lods
adc
lock
push
mov
pusha
cmp
fnstenv
xchg
xchg
imul
fists
mov
jg
adc
test
mov
push
or
icebp
out
clc
fsubrs
fscale
lcall
adc
sub
or
test
sub
mov
mov
int
movsl
dec
add
stos
jnp
in
and
xchg
dec
das
repz
jmp
test
faddl
or
or
je
cmpsl
adc
ja
les
insl
fcomi
cwtl
pop
jg
mov
mov
push
cli
pop
rcr
sub
rolb
jns
inc
cmpsl
xchg
jb
jge
xor
xchg
cmp
test
inc
into
dec
push
or
movswl
psrlw
push
sti
jp
cwtl
mov
sbb
aas
cmp
mov
jecxz
inc
xchg
fcomps
jge
sub
add
xor
xchg
jecxz,pn
dec
js
out
or
sbb
mov
jb
rorl
mov
inc
push
sbb
xor
outsl
test
mov
lea
mov
add
mov
shlb
xor
sub
in
mov
adc
xor
andb
mov
push
repz
pop
subb
jmp
mov
mov
mov
fs
pop
jb
cltd
pop
jmp
add
mov
xor
je
adc
inc
sub
xchg
aad
lods
inc
pop
lods
fsubrl
incl
decl
jp
cmc
xchg
mov
xchg
inc
sub
xor
adc
cmp
out
fwait
repz
xchg
aaa
rorb
mov
mov
das
iret
repz
pushf
scas
sub
int3
lods
sbb
jnp
ljmp
jns
adc
idivb
lods
mov
inc
push
inc
jns
pusha
test
push
xchg
cmp
cmpsb
cltd
movsl
inc
lods
pop
in
loope
jle
inc
pop
push
movsl
mov
mov
jnp
push
roll
mov
jno
dec
pop
fcoms
insl
cmp
cmpsb
fadd
outsb
cmpsl
test
inc
mov
es
scas
shrb
int
push
mov
adc
or
call
stos
sbb
or
mov
or
cmp
enter
jmp
je
mov
into
jnp
clc
mov
icebp
mov
int
scas
rcl
or
in
xlat
sbb
shlb
rep
sti
inc
mov
insl
inc
add
lds
mov
mov
and
arpl
ja
cltd
inc
cmp
sub
or
mov
movsl
jge
addr16
nopl
sub
adcl
mov
mov
pushf
bound
mov
js
test
jb
int3
and
mov
push
inc
sub
or
jge
gs
add
test
jge
leave
and
xor
or
jge
jmp
push
decl
mov
xor
and
or
dec
push
std
cmp
cld
cwtl
mov
dec
popf
mov
jo
xor
lahf
jle
sub
jp
ret
stc
push
arpl
push
lahf
ja
orb
iret
mov
daa
sub
inc
cmpsb
or
inc
test
dec
push
dec
adc
sarb
in
push
aas
or
or
bnd
cmp
cmp
mov
hlt
inc
xchg
jecxz
sarl
push
jl
iret
xchg
xchg
orl
lods
mov
call
das
lahf
push
rclb
mov
and
addr16
xchg
aad
sub
ja
lahf
sbb
adc
xor
fists
push
pop
pop
aaa
repz
sbb
pop
jecxz,pt
in
in
pop
popa
shl
mov
sahf
xor
mov
icebp
fidivrs
nop
add
shr
popa
dec
and
mov
into
push
xchg
test
add
ror
out
adc
repnz
divl
dec
xor
ficompl
jns
fcmovb
aas
sub
sub
mov
out
lods
aam
test
add
sbb
flds
sbbl
xor
mov
lock
pop
int
xchg
xchg
pop
dec
add
cmc
mov
push
xchg
movl
iret
pop
lods
pop
fstpt
jmp
cmc
mov
ret
jb
sub
imul
repz
sahf
mov
fbstp
stos
mov
int
add
mov
int
lcall
test
cwtl
mov
adc
mov
cld
hlt
xor
jno
imul
adcb
fisttpll
pop
xchg
scas
xor
rorb
inc
mov
fldt
mov
cmpsl
jnp
shrb
dec
fmull
dec
pushf
or
pop
mov
cmpl
jne
inc
or
aam
inc
loop
lock
shlb
in
es
sbb
inc
sbb
js
sub
aam
xchg
jmp
ret
call
les
dec
sub
mov
sbb
pop
add
cmp
outsb
mov
out
popf
fucomp
mov
mov
enter
cmpb
jo
and
scas
into
or
in
lock
std
pop
stos
mov
testb
or
and
or
inc
shrb
xchg
jns
mov
jae
dec
inc
call
aaa
loopne
push
cld
test
fdivrs
gs
repz
cmpsl
add
movsl
or
jg
popa
sub
out
ja
jae
push
stos
icebp
or
xchg
fidivrs
mov
dec
je
mov
int3
mov
hlt
push
jmp
es
xchg
jl
ja
vpandn
push
mov
int
and
sarl
ret
or
xchg
add
scas
cli
jo
jne
fs
ret
daa
iret
mov
sbb
enter
and
push
jle
hlt
mov
sub
sub
sub
in
cmp
mov
loope
int
outsl
mov
hlt
les
push
ret
in
movsb
push
jle
xor
test
clc
sub
adc
adc
lods
aam
loopne
xor
out
lret
in
mov
pop
loopne
mov
add
sbb
mov
sti
call
sbb
leave
jmp
jno
cmp
std
hlt
pop
pop
dec
xor
jle
mov
rclb
std
outsb
adc
out
ffree
push
cmp
xchg
cmp
aas
dec
ja
cltd
je
pop
pop
int
sub
cmp
outsl
lods
scas
aad
pop
sub
add
jnp
pushf
pop
mov
das
add
push
aad
das
mov
test
and
pop
ljmp
test
out
jns
pop
jbe
iret
popa
jge
adc
mov
fs
jmp
rclb
mov
pop
out
and
xor
mov
sbb
rcrl
movsl
dec
bound
xchg
lret
mov
clc
dec
push
sbb
and
je
lret
test
mov
push
test
aad
ds
stos
xchg
lret
push
jecxz
mov
or
jo
pop
push
in
ret
add
ss
loope
adc
scas
test
xlat
loopne
scas
mov
js
adc
push
in
xor
out
add
mov
test
xor
cli
add
xchg
fnstsw
std
shufps
hlt
cmp
inc
mov
push
inc
cmp
dec
lock
loop
push
mov
mov
pop
dec
dec
jg
push
jno
mov
in
idivb
xlat
ror
aam
cmp
jecxz
ret
cmp
jae
cmp
xor
jns
mov
lret
in
mov
dec
lret
pop
nop
xchg
push
push
mov
sbb
lods
xchg
pop
mov
jecxz
cmp
repnz
mov
xlat
add
aaa
popf
sbb
sub
js
cmp
mov
mov
sbb
push
pop
cmpsb
push
cmp
sub
out
movsl
add
mov
enter
push
xlat
adc
or
js
and
inc
cmp
mov
cmp
jns
dec
cmpb
mov
in
and
adc
mov
aam
pop
xchg
or
inc
call
aaa
mov
xchg
mov
mov
repz
sti
cmpsb
popf
or
dec
in
imulb
xchg
jb
fs
arpl
fcmovnb
fidivs
test
inc
daa
cwtl
das
add
inc
and
int
adc
cmp
fidivl
cld
rcrb
outsb
inc
mov
mov
lea
les
adc
or
sbb
cwtl
enter
or
push
mov
and
mov
das
jecxz
mov
loopne
andl
cwtl
add
sub
loop
pop
shr
loope
push
and
xor
adc
jno
or
jae
dec
pop
xor
pop
add
insl
fidivs
rclb
lcall
cmpsl
dec
insl
outsl
inc
mov
mov
push
sbb
sub
mov
mov
xchg
test
stos
hlt
xchg
and
adc
push
adc
push
xchg
lahf
enter
bound
pop
cmpsl
xlat
fisubs
das
clc
pop
lahf
imul
test
inc
lods
pop
popf
push
inc
and
leave
movsb
jno
add
jbe
mov
mov
lcall
outsl
cli
pusha
add
mov
lods
icebp
adcb
stos
dec
ret
jno
push
cmp
pop
ja
xor
mov
aaa
jb
inc
std
dec
loopne
icebp
cmp
loope
jae
ljmp
jbe
xlat
addr16
enter
shlb
iret
sbb
or
cwtl
push
cmp
sbb
sti
sub
shll
mov
cld
jo
icebp
lret
es
xor
pop
add
sub
xorb
outsl
mov
jae
mov
xor
dec
les
dec
dec
add
dec
repz
ret
xchg
nop
dec
mov
mov
pop
pop
out
in
xchg
fcoms
adc
aad
lds
dec
bound
xor
dec
outsb
push
add
repnz
mov
bnd
push
xor
jge
jno
pop
sahf
cli
adc
jno
xchg
and
or
ljmp
in
scas
mov
fs
andb
add
sub
xchg
dec
push
aam
fdiv
ljmp
mov
in
imul
insb
dec
cmp
xlat
and
jnp
push
xchg
inc
test
and
mov
sub
repnz
cld
loop
mov
push
add
shlb
out
mov
adc
mov
cwtl
scas
push
push
aaa
cwtl
jb
in
inc
cmpsl
cmp
jecxz
rcrl
fs
mov
xlat
dec
pop
pop
fldt
lret
lcall
mov
movsl
sbb
push
adc
shl
push
mov
dec
test
jns
loopne
or
dec
add
imul
mov
cmp
dec
xchg
and
je
ret
andb
push
shlb
jbe
mov
jns
scas
test
push
sbb
sbb
or
aad
fldt
mov
push
adc
pop
pop
xor
cmp
mov
leave
fiadds
lods
hlt
cmp
cmp
movsb
sbb
out
popa
sbb
pop
jge
cmpsb
das
divl
repnz
pop
outsl
push
popf
fcompl
inc
ds
or
ljmp
mov
movsl
push
in
adc
mov
bound
jge
sbb
or
pop
mov
push
bound
leave
aam
jecxz
push
sbb
xor
cmp
jbe
out
in
jecxz
sarl
xor
out
es
scas
out
cltd
data16
cld
icebp
pop
sbb
or
lahf
in
push
loopne
adc
dec
jb
out
icebp
shr
cmpsb
pop
pop
or
shrl
xchg
jns
loopne
test
and
mov
add
pop
shl
movsb
fldt
pop
movsl
stc
lret
add
jmp
cmp
inc
in
inc
cmp
idiv
inc
jbe
pop
push
adc
xor
pop
jmp
add
jle
jle
cmc
push
out
xchg
fucomp
cmp
mov
test
lret
out
nop
sarl
push
push
or
mov
xchg
adc
daa
mov
and
jl
cld
mov
mov
xchg
xor
std
mov
adc
xchg
stc
pusha
push
push
add
into
inc
xlat
test
or
mov
inc
scas
int3
mov
je
jl
mov
jge
cmpsb
dec
xor
inc
out
movsl
cmp
out
shl
fs
jecxz
outsl
xchg
roll
cs
stos
inc
ja
insb
fbstp
jecxz
push
add
into
clc
xchg
out
incb
nop
or
and
repz
pushf
cmpsl
movsb
stc
xchg
fwait
insl
xor
adc
inc
inc
pushf
stos
mov
mov
or
popa
adc
dec
imul
std
mov
out
mov
divb
insl
das
rcl
xchg
and
jnp
cmp
cmp
aaa
cmc
pop
mov
xchg
jmp
and
dec
jmp
inc
pushf
dec
popa
fstl
and
scas
push
adc
sub
dec
fwait
aas
inc
cli
out
test
push
sti
jnp
push
sbb
imul
or
outsb
fildl
or
pushf
xchg
mov
dec
test
stos
xor
ret
or
push
mov
clc
mov
xchg
inc
jle
mov
test
cwtl
push
gs
cmp
int
sbb
ds
shrd
xor
pop
inc
fcoml
mov
inc
or
cmp
sti
mov
repz
dec
ljmp
outsb
xor
ljmp
add
dec
mov
cmp
add
cmpl
jnp
mov
pusha
sub
pop
cmpsl
int3
test
in
push
pusha
jl
jecxz
test
xor
mov
or
dec
mov
inc
adc
pop
and
xor
mov
jp
into
adc
xchg
and
scas
ljmp
sbbb
pop
test
scas
xlat
lock
dec
jbe
cmc
inc
and
push
lret
mov
xchg
jp
lods
and
ror
pop
push
mov
mov
xchg
dec
test
pop
aaa
sub
sub
xor
xchg
and
cmp
fs
jmp
int3
inc
dec
repz
xchg
push
bound
loope
jmp
mov
adc
adc
js
std
jmp
ljmp
decl
out
mov
ds
fwait
xor
stc
lods
cmp
push
cmp
cmp
test
dec
inc
sbb
int3
mov
fld
inc
pop
gs
leave
lds
or
je
cli
xchg
inc
movsl
push
loope
xchg
cmp
push
fadds
jg
or
inc
and
xor
dec
and
inc
and
sub
mov
jne
clc
jg
je
and
mov
pop
and
shll
add
mov
and
mov
in
mov
xor
cmp
jnp
incb
dec
mov
push
or
or
sub
pop
mov
pop
out
pop
jp
inc
mov
and
imul
rclb
jbe
xchg
push
repz
mov
jne
stos
cs
stc
mov
add
pop
inc
add
jmp
andb
inc
cld
imul
fistl
xlat
fmul
jae
inc
mov
inc
je
jg
iret
pop
mov
mov
push
lds
or
mov
pop
mov
dec
into
and
frndint
inc
inc
dec
repnz
out
ljmp
outsb
testb
je
rorb
add
mov
loope
pusha
jne
push
pop
test
bnd
jecxz
and
mov
mov
stos
out
lcall
jae
xor
mov
vpcmpeqb
push
xor
decb
ss
pop
andl
loop
das
fwait
outsl
aas
push
in
lock
in
stos
dec
xchg
adc
inc
cmpsl
fidivl
stos
jno
fisubrl
mov
inc
push
jg
mov
push
outsb
ret
stos
push
sub
cmp
mov
xor
jmp
gs
adc
sbb
push
sub
lods
fwait
push
xor
inc
jp
ret
loopne
pop
out
popf
pop
mov
add
xchg
imul
xor
cli
xor
sbb
pop
push
cmp
aad
and
stos
dec
xchg
jge
out
pop
repz
xchg
sbb
push
xchg
mov
sbb
xchg
imul
clc
dec
aaa
movsl
adcl
insb
popf
mov
push
pop
dec
jl
adc
dec
scas
pop
faddl
xchg
cmc
aas
ret
cmpsl
insl
xchg
jb
adc
js
and
daa
push
dec
sub
mov
iret
jne
pop
push
cs
xor
imul
add
ficoms
pop
and
cmp
jns
pop
jns
ja
mov
mov
dec
test
mov
sbb
adc
cld
push
jb
and
and
adc
sub
in
push
sbb
clc
and
mov
aad
cltd
xor
push
push
js
push
into
lahf
jb
bound
dec
aas
es
sbb
jo
pop
add
popf
jo
inc
rcl
mov
add
out
adc
sub
call
ficoms
inc
fldln2
aad
addr16
cs
pop
ret
adc
add
lcall
push
sub
loop
push
lea
loop
pop
add
in
or
adc
insb
mov
aam
movsl
fimull
int
sub
insb
cmp
ljmp
mov
and
dec
or
call
pop
ret
and
xor
imul
or
inc
test
inc
jno
xor
and
sbb
fldt
out
xchg
pusha
mov
mov
cmpsl
andb
dec
jmp
cmc
lahf
lret
cs
lahf
jnp
push
mov
adc
sub
pop
iret
cmpsl
ficoms
mov
adc
aam
in
or
insl
dec
jne
dec
adc
adcl
mov
adc
xchg
fcomps
jae
lds
xchg
xchg
mov
push
icebp
push
nop
aaa
mov
lret
jns
into
mov
or
push
ja
sbb
and
loopne
imul
pop
jns
setae
loopnew
sub
pusha
jp
fs
cltd
gs
test
adc
insl
loop
mov
sbb
push
mov
jno
mov
cmc
jp
add
mov
loope
push
scas
fisttpl
insb
xchg
jne
mov
mov
out
or
pop
push
adc
scas
fcmovbe
es
pop
shlb
shlb
lods
sub
cwtl
aad
mov
sbbl
gs
fnstsw
sarb
sbb
inc
pop
push
add
mov
mov
lods
push
aaa
jle
test
push
ds
or
sub
jb
xchg
jo
inc
sub
push
dec
ljmp
cmp
and
xchg
lcall
sti
inc
add
cwtl
jbe
or
mov
daa
mov
or
popf
roll
pop
insl
sub
dec
int3
mov
fs
lock
gs
lea
repz
sub
ds
test
cld
mov
nop
jp
int3
pop
pop
lods
add
je
xor
cmp
cmp
add
add
jnp
sbb
mov
outsb
sbb
scas
lahf
aam
and
int3
into
out
push
mov
mov
dec
mov
xor
stc
xchg
test
inc
xor
stc
mov
in
xor
mov
repz
fwait
sahf
popf
push
mulps
sub
jp
in
mov
in
in
ds
lret
xchg
mov
clc
gs
or
loope
cmc
inc
movsb
jbe
inc
stos
cmp
adc
cmpsl
cmp
dec
loope
adc
in
push
ficompl
or
xor
jne
in
xor
repnz
pop
movsl
xchg
test
cmpsb
orl
pop
sub
aas
or
xchg
stos
repnz
cmp
and
shlb
ret
jne
es
add
pop
xchg
inc
mov
ret
push
mov
lahf
or
imul
fildl
dec
dec
out
xchg
mov
push
sub
ret
cmp
cmp
lds
pop
or
mov
arpl
icebp
outsb
int
lcall
cmp
push
test
push
cmpl
lods
inc
imul
ja
sbbl
idivl
roll
mov
mov
jle
pusha
out
cld
in
fidivrl
pop
push
sti
out
stos
repz
dec
nop
hlt
mov
lahf
int
cmp
lock
hlt
imul
repz
mov
sub
dec
xor
shrl
jo
sub
insl
cmp
je
sbbl
subb
lods
add
fnstenv
jecxz
or
loop
in
rcrl
out
push
cld
sbb
cmp
andl
cmc
loop
xchg
xchg
jle
cli
lds
int
or
popf
or
sub
pop
xor
inc
xchg
enter
push
aad
dec
push
push
add
inc
rcll
mov
test
cmp
cmp
mul
add
repz
or
xor
sbb
out
xor
sarb
and
cmp
cmc
stc
popa
aaa
and
andnps
jbe
add
mov
xchg
stos
jno
add
mov
cwtl
sub
mov
fildll
imul
xchg
ret
mov
push
dec
sbb
daa
push
addr16
pop
sbb
jno
jl
cld
sbb
loope
int3
xor
lods
pop
lods
iret
clc
fidivs
mov
aas
in
in
rorl
or
and
filds
jl
loopne
mov
lret
mov
outsl
popa
mov
mov
adc
fisttps
sbb
adc
sbb
add
ret
mov
inc
in
cld
mov
jmp
push
add
inc
in
dec
outsb
rclb
push
arpl
cmp
pushl
sbb
adc
scas
and
or
pop
lods
xlat
fsubrs
mov
pop
xchg
popa
jcxz
loop
inc
cwtl
add
inc
in
movsb
ror
xor
xchg
stc
sub
ret
pop
or
mov
mov
adc
movsl
cmp
add
push
int
shlb
lcall
jp
lea
dec
inc
push
sbb
sahf
lret
movsb
mov
cmp
mov
adc
jg
xchg
std
fwait
clc
xchg
sbb
inc
push
jae
adc
in
add
imul
sarl
inc
out
clc
lds
insl
ss
jmp
dec
or
dec
xor
xchg
pop
movsb
sbb
lods
push
adc
pushw
iret
out
push
aaa
jae
sbb
lods
loopne
mov
mov
inc
xlat
jne
in
stos
into
push
sub
mov
add
enter
mov
sahf
mov
cmp
xlat
arpl
mov
and
mov
mov
push
dec
stos
inc
jg
inc
stc
lods
xchg
jb
leave
into
push
enter
cli
bound
mov
xchg
inc
cmp
adcl
popf
mov
pop
aas
mov
sbb
pop
or
gs
or
xchg
jecxz
lret
dec
aam
addr16
arpl
call
pusha
inc
stos
sub
lock
xchg
cmc
push
loope
jp
mov
or
icebp
push
sbb
imul
flds
rcrb
enter
lods
mov
testb
outsb
jle
outsl
aam
sbb
inc
jns
in
xchg
cmpsb
cmp
cmp
es
jp
adc
stos
inc
dec
int
outsl
sub
jl,pn
fldt
mov
outsl
lret
xchg
lret
push
mov
adc
popf
scas
sbb
jo
pop
inc
orb
das
jmp
fldenv
orl
addr16
shrl
jmp
mov
int
pop
pop
jo
movsl
cmp
out
mov
mov
push
and
xchg
nopl
stos
pushf
insb
into
mov
add
movsb
push
push
movsb
jg
pop
aad
and
pushw
mov
adc
mov
pop
int
push
jo
jmp
cmp
loopne
mov
and
sbb
xor
mov
push
inc
ds
scas
adc
cli
in
repnz
xor
xor
inc
outsl
cmpsb
bound
pop
add
in
pcmpgtd
mov
sub
sbb
in
test
outsl
dec
dec
rcl
ljmp
xchg
mov
or
sti
mov
cmp
xchg
lock
and
in
sbb
xor
mov
adc
adc
mov
insb
mov
xchg
mov
sti
scas
scas
xchg
mov
jbe
sub
insl
cmpsl
faddl
push
mov
filds
subl
mov
rcpps
ret
fwait
push
jg
mov
pop
in
insb
insb
enter
mov
shll
cltd
mov
lea
and
add
xor
inc
lret
xchg
aam
scas
dec
rorl
aad
lret
mov
hlt
inc
mov
xchg
addr16
adc
les
mov
in
pop
leave
pop
push
push
movsb
and
shll
mov
imul
mov
jno
mov
sbb
out
jge
movsb
pop
pop
mov
popa
out
cmp
add
test
push
cli
and
sub
cmp
jle
cmpsb
int
inc
cmp
outsl
nop
lock
filds
sub
aam
into
fsts
sar
in
or
fucomip
lods
mov
repnz
inc
ret
loop
int
add
imull
shlb
dec
inc
cmp
fs
dec
jg
inc
out
add
sub
rclb
ds
ds
sub
out
mov
data16
sbbl
hlt
mov
pushf
and
testb
cmpsb
sahf
add
mov
aas
sbb
inc
mull
aaa
in
pop
adc
and
addr16
mov
sbb
stc
add
aas
mov
inc
fildl
xor
inc
inc
mov
add
inc
pop
xlat
pop
rolb
or
int3
aam
nop
fcomps
mov
adc
xor
sub
maskmovq
idivl
mov
sbb
adc
popa
adc
add
fsubs
lahf
xchg
or
nop
out
cmp
rolb
push
adc
movzbl
lcall
das
mov
rcll
sub
and
adc
cmp
jmp
ss
loope
cmp
adcb
mov
je
icebp
mov
call
and
cmp
inc
inc
mov
sub
decl
and
inc
cwtl
in
mov
stc
into
into
xchg
popf
jnp
jge
mov
push
xor
cmp
mov
nop
mov
dec
dec
dec
test
push
jge
jo
xchg
testb
cmpsb
inc
jge
lds
lock
negl
and
movsb
mov
test
sbb
inc
pop
insl
adc
xchg
add
jge
test
cmpsb
sub
cmc
push
cmp
shll
push
xchg
pop
dec
pop
bndldx
mov
pop
fwait
push
sub
mov
out
sub
push
mov
mov
xor
shrl
sbbl
testl
inc
mov
cli
icebp
sahf
mov
mov
mov
lret
andl
dec
xor
idivl
aad
clc
mov
sub
pop
push
mov
outsb
or
cld
mov
pop
cmp
xchg
push
imul
repnz
lds
sbb
cltd
movsb
outsl
pop
lahf
es
loop
or
inc
adc
adc
mov
jo
mov
loop
inc
push
cs
fbld
mov
push
dec
jo
jle
lods
sub
xchg
inc
out
add
loope
xchg
orl
push
js
sahf
nop
icebp
cwtl
cld
repnz
jo
call
repnz
or
insl
sbb
adc
lds
addl
push
in
rolb
push
cmovbe
test
fistl
mov
lret
inc
int3
test
les
lea
mov
rcll
and
sahf
ret
mov
mov
shl
jo
stc
incl
sub
fildl
mov
jl
or
adc
test
pop
mov
inc
clc
adc
insl
insl
ja
test
into
sahf
movb
addb
or
jle
arpl
jne
sbb
cmp
or
cmpsl
xchg
mov
in
sti
mov
mov
icebp
and
xlat
in
loop
lea
fnstenv
jo
fisubrs
pop
sbb
arpl
test
repnz
or
sarb
xchg
jl
scas
xor
and
imul
sub
jns
js
insb
ds
push
loope
push
jns
xchg
dec
push
sub
popa
sbb
sbb
jne
dec
inc
mov
push
xor
mov
sbb
loope
cmp
push
out
js
add
jno
jge
push
mov
pop
in
push
jg
inc
scas
mov
lcall
adc
cmp
ljmp
fsubrs
mov
clc
shrl
xchg
in
lcall
jns
jno
sbb
cwtl
adc
les
insl
mov
jns
push
cli
xchg
std
xchg
idivb
add
mov
aad
vmwrite
ret
push
push
in
aad
sub
push
andps
js
rcll
cltd
ja
jae
mov
cmpsl
adc
push
addb
sbb
test
mov
pop
sti
dec
inc
adc
inc
jbe
pop
push
mov
std
dec
and
rol
xor
and
pop
cmpsb
daa
add
jge
repz
adc
pop
adc
inc
jecxz
int3
jns
push
cmc
bound
or
inc
je
ss
test
xchg
icebp
lock
sbb
cmp
dec
imul
loop
add
adc
sti
out
aam
jns
sar
inc
adc
mov
les
sbb
and
xor
lock
add
mov
jne
inc
call
pop
jns
mov
pop
das
mov
fcoms
pop
rcl
xor
xor
push
lcall
rcr
and
inc
adc
gs
mov
push
xchg
pop
push
pusha
xchg
pop
icebp
dec
imul
pop
pusha
jno
mov
in
mov
inc
sub
add
out
adc
jp
sbb
inc
adc
dec
fisttps
pop
xchg
ret
dec
xchg
out
cld
in
loop
mov
sahf
pop
divl
fisubs
lea
shrb
add
hlt
scas
mov
in
outsb
mov
sarl
xlat
mov
lock
mov
in
sub
add
sbb
mov
pop
jne
xor
or
and
out
mov
je
sbb
and
pop
xchg
in
inc
pop
jl
lods
lea
pop
add
sub
cli
inc
ficompl
jb
sahf
adc
adc
xchg
arpl
loopne
and
mov
in
inc
push
xchg
and
sti
shrb
fisttpl
dec
in
xchg
cmpxchg
mov
and
xchg
pop
cmpsb
stc
cltd
pusha
adc
roll
cltd
mov
adc
dec
push
adc
pop
out
xchg
sahf
nop
insb
mov
test
test
sub
dec
adc
lock
add
stos
mov
jae
cmc
cli
jge
jmp
cmp
sub
into
fldcw
fisubl
lret
xor
mov
xchg
das
jge
fstl
out
imul
jno
or
pop
add
push
cmp
push
xlat
jb
sub
rolb
pushf
or
and
arpl
jns
stc
aaa
or
out
adc
cltd
xor
pop
xor
aas
dec
or
mov
push
add
jecxz
pop
and
fdivl
iret
mov
and
mov
xchg
jne
fisttpl
jl
sbbl
mov
jmp
addl
adc
xchg
xchg
cmc
orb
movsl
sub
icebp
mov
ret
testb
jb
jnp
fsubrs
fnstcw
jnp
push
shlb
mov
outsl
xchg
out
call
inc
subl
jae
mov
mov
out
inc
add
pop
mov
xor
mov
jae
cli
add
lcall
loop
cmpsl
lds
ficomps
or
stos
fldt
xorb
data16
adc
ss
xchg
loope
pop
or
jo
sub
jno
jnp
mov
shl
jmp
int3
repz
popa
insb
out
mov
repnz
pop
dec
pop
ljmp
adc
cmc
out
addr16
pusha
ss
aad
or
aad
xlat
pop
add
inc
xor
adc
sub
dec
mov
dec
lcall
inc
bound
ja
loop
shlb
dec
stc
mov
imulb
xchg
ljmp
orl
sbb
loope
mov
push
in
cmc
mov
add
addr16
jo
fs
pop
roll
dec
adc
inc
pop
adc
add
imul
mov
adc
sub
fiadds
mov
inc
and
scas
mov
push
inc
mov
or
mov
xchg
sub
adcb
dec
inc
dec
xlat
cmp
add
lea
pop
sub
pop
push
ss
jge
mov
jge
cli
out
imul
fnstcw
les
mov
mov
and
ljmp
inc
test
cmp
daa
ret
jmp
shrb
sbb
popa
lret
lods
fsubr
scas
das
out
inc
push
xor
push
add
in
pop
and
jns
lret
sbb
cmpl
push
shrb
sub
mov
data16
jmp
push
cwtl
loope
scas
test
orl
outsb
imul
je
pushf
std
adc
mov
aad
leave
cmpsb
dec
loopne
jbe
repnz
push
test
push
bound
dec
inc
sub
stos
push
push
jb
sbb
inc
fadds
inc
lahf
mov
pusha
adc
adc
and
cmp
mov
fsubs
test
test
mov
add
sbbb
out
xchg
xor
lret
aad
or
les
cmp
mov
negb
xor
das
lcall
sbb
out
out
xor
sbb
and
stc
mov
and
sahf
shrl
out
outsb
push
out
add
fidivrl
and
mov
fldcw
xor
xor
pushf
pop
mov
or
inc
add
loop
jnp
jp
lds
cmpl
out
or
mov
les
lcall
pop
shlb
jmp
subl
andl
cmpb
xor
frstor
pop
imul
repnz
xor
daa
in
pop
vprotd
stos
mov
jmp
jae
adc
mov
xlat
adc
lock
into
mov
pop
adc
jecxz
mov
inc
sub
shrb
fdivs
jo
iret
hlt
movsl
lret
adc
loopne
aas
fmuls
data16
movntps
fisubs
mov
xor
ja
inc
insb
cmpsb
popa
cmp
mov
aas
or
and
mov
mov
cmc
les
test
jl
mov
outsb
mov
mov
and
push
jns
inc
lock
mov
fldt
or
cld
addb
mov
inc
add
scas
loop
xlat
xlat
add
cmpsl
mov
and
xor
and
jge
mov
jmp
cmp
jne
jg
hlt
xchg
jle
scas
cmp
int3
mov
fildll
rcrb
imul
js
and
and
sub
pop
or
adc
maskmovq
idivl
mov
and
cmp
xchg
dec
cmp
mov
stos
add
mov
ljmp
hlt
xchg
jbe
xor
lahf
sbb
ficompl
mov
xor
fldt
and
cmp
data16
dec
addr16
clc
cmp
inc
push
addr16
int3
imul
xlat
out
in
cmp
mov
cld
or
lret
pop
pop
les
in
cld
add
stos
stos
mov
mov
shlb
out
xor
mov
arpl
xchg
pop
mov
inc
aam
sub
hlt
and
popa
lods
push
in
cltd
pop
loope
add
cld
inc
sub
pop
cwtl
adc
jne
mov
mov
jno
test
xchg
cmp
test
fidivs
pop
je
jnp
out
roll
imul
je
adcb
fcompl
leave
xchg
fiaddl
mov
lock
xchg
add
or
inc
pop
lods
sub
pop
or
imul
mov
loopne
aam
xchg
and
shld
das
push
push
lods
sbb
fbstp
outsl
ljmp
adc
lahf
adc
cmpsb
or
sbb
test
cmpsb
sub
pop
sbbb
dec
inc
and
mov
into
js
out
movsb
out
mov
add
xchg
lret
or
cmp
std
aaa
push
cli
in
das
cmp
jmp
lret
ficoms
cmpsl
pop
cmp
pusha
mov
xrelease
std
mov
aad
push
push
loopne
mov
fs
cltd
push
out
or
out
lods
ljmp
xchg
mov
std
daa
repz
adc
andl
mov
mov
ror
jns
cmpsb
daa
roll
ds
nop
aam
mov
pop
push
jp
adc
lcall
jo
mov
loop
add
jo
mov
dec
mov
or
insl
mov
mov
mov
lea
test
rep
pop
mov
pop
dec
add
pop
jge
iret
fdivrp
movsl
cli
and
fistpl
ss
sub
jge
imul
dec
xor
pop
out
push
mov
movsl
bound
je
xchg
jmp
or
or
pop
pextrw
lods
inc
nop
push
jnp
aad
cmp
out
sbb
aas
mov
aad
int3
popf
xchg
mov
push
xchg
imull
test
ds
lea
and
jo
loopne
hlt
test
mov
adc
clc
out
sub
xor
aad
addr16
leave
sbb
mov
iret
jecxz
sub
push
arpl
mov
mov
push
ficomps
add
xchg
sarl
loopne
roll
jl
hlt
cmpsl
in
stos
jecxz
push
out
cs
mov
mov
ss
push
jmp
push
sub
shr
fmuls
jmp
das
bswap
or
xor
out
daa
mov
test
shrb
andb
jo
pop
int3
jp
xor
loopne
push
adc
daa
lcall
jne
ja
cs
xchg
mov
lcall
inc
lahf
sub
mov
mov
cltd
imul
mov
addr16
pop
add
push
push
dec
xor
jl
dec
push
loopne
inc
fsubs
push
add
fsubr
sub
sbb
movsb
and
pop
mov
sti
and
dec
dec
call
jo
or
inc
jge
mov
mov
cmp
fs
scas
imul
inc
pusha
pop
mov
shrl
stos
dec
mov
xchg
pop
mov
pop
xchg
pusha
stos
int3
repz
popa
push
and
imul
test
cli
cmp
pop
nop
rcll
mov
call
lods
push
sub
fbld
icebp
or
cld
dec
sbb
movsl
fldt
and
pop
jl
in
mov
pop
shl
pushf
clc
or
roll
int
cmp
push
sbb
popa
or
call
cli
dec
aam
out
stos
add
adc
insl
xchg
test
cld
jmp
xchg
cwtl
int3
xor
out
add
addr16
cld
xchg
or
or
xor
cmp
or
nop
out
push
lods
lahf
int
sbb
les
data16
repnz
cmpsb
pop
lea
mov
cmp
xchg
push
adc
lret
lods
xor
jmp
fstl
popa
shr
sub
sbb
jmp
popa
outsb
icebp
aas
test
xchg
das
dec
and
stos
inc
aad
lret
and
hlt
jb
test
sbbb
mov
sbb
mov
out
and
in
imul
sbb
cs
pushf
mov
inc
or
imul
xor
cld
adc
xor
ljmp
push
xchg
sbb
loope
sub
hlt
lods
sub
xchg
out
data16
loopne
cmp
rol
sub
notb
pop
or
mov
dec
and
push
je
sub
mov
push
pop
cld
test
sbb
sub
mov
dec
jecxz
les
mov
leave
sub
pop
or
mov
cltd
cmp
cmc
out
aad
ljmp
fistl
jle
js
lods
leave
fisubl
test
fcom
sub
xchg
imul
jo
fnsave
pop
xor
out
shrl
jne
ja
adc
sti
and
mov
sbb
ja
loop
xor
mov
sub
push
and
push
cmp
daa
inc
mov
fimuls
outsb
in
out
xchg
bound
lea
push
stc
or
loope
lret
and
sbb
sub
inc
lea
sub
in
imul
push
test
mov
scas
in
inc
xor
inc
inc
mov
add
pop
loop
mov
push
push
das
into
sub
hlt
mov
bound
xor
in
inc
mov
mov
sub
sbbl
push
push
sub
out
or
or
sbb
cmp
mov
dec
adc
push
les
push
cmp
gs
xorl
das
sbb
aaa
mov
repnz
dec
jae
sub
sbb
inc
xor
jns
call
xor
cmc
mov
and
inc
leave
repz
cmpsb
dec
push
pop
cmpsl
repz
ss
ds
pop
int3
pop
stc
arpl
and
mov
sub
xchg
mov
lock
out
mov
xor
cmp
mov
test
mov
jle
adc
xor
add
dec
lock
data16
mov
sub
cmpsl
cmpsb
jno
mov
out
ret
test
xchg
mov
ftst
pushf
inc
out
jb
test
lcall
add
xchg
sub
retw
bswap
mov
and
dec
ljmp
jnp
notb
fsub
addr16
cli
jb
scas
inc
pop
sub
pop
mov
pop
inc
mov
imul
xor
xorl
and
lcall
into
scas
cmpsb
loop
jae
leave
inc
push
xor
sub
movsl
sarl
push
popf
mov
mov
adc
stc
scas
dec
loope
jl
xor
sub
and
xor
xor
lret
mov
bound
ret
fildll
insl
adc
and
adc
test
dec
cmpsl
mov
push
mov
or
jne
sub
inc
je
aaa
push
ret
in
stos
xchg
push
cli
rol
out
or
jbe
repnz
mov
rclb
dec
aad
mov
mov
pushf
push
mov
insl
or
sbb
xchg
pusha
pop
repz
cld
insb
pop
aas
cmp
xor
jb
out
jae
data16
loopne
pop
add
shr
xchg
lock
inc
pop
mov
stos
in
or
enter
shl
int
push
jmp
aam
out
mov
iret
mov
aaa
psraw
sbb
out
xchg
adc
dec
pop
faddl
gs
shlb
dec
or
sbb
data16
ds
fistpl
dec
xchg
cmp
pop
and
icebp
iret
fcmovb
pushf
jecxz
stos
mov
xchg
push
push
xor
lods
sub
jmp
mov
mov
nop
mov
cmp
mov
pop
movsb
rcrb
pop
xor
test
sub
xor
mov
call
mov
aas
test
imul
sbb
push
inc
nop
or
enter
xchg
or
and
xchg
dec
push
int
mov
sbb
adc
jmp
into
jmp
fstl
movsb
call
dec
in
lock
aas
lock
and
test
adc
mov
add
pop
fucomip
xor
xor
mov
call
movsb
inc
aas
add
inc
lods
shlb
lret
shl
scas
cmp
notl
or
push
push
js
aaa
mov
add
ficoms
or
push
xor
push
pop
imul
add
int
pop
xchg
add
lahf
dec
sbb
push
ja
rorb
fwait
sub
fsubrl
nop
xlat
xchg
cmp
insl
and
xchg
sub
sbb
mov
mov
push
pop
mov
push
out
xchg
mov
or
cltd
xor
and
roll
adc
add
dec
sub
push
enter
mov
dec
pop
stc
push
jbe
and
ja
xchg
out
test
sbb
or
add
pop
sub
movsb
mov
mov
aas
insb
daa
sahf
dec
push
sti
imulb
ds
movl
add
mov
add
sahf
dec
jge
sbb
inc
jns
ss
adc
add
cli
arpl
sbb
sub
add
mov
stc
adc
add
in
mov
cmp
mov
lods
or
int3
dec
xor
faddl
add
dec
cwtl
daa
jl
pop
mov
cmpsb
imul
cld
and
mov
push
xchg
or
test
in
mulb
andl
dec
lods
xlat
pop
daa
jecxz
stos
pusha
scas
pop
jp
xor
mov
and
add
adc
cld
mov
add
fcmovbe
sub
dec
iret
sbb
mov
shrb
out
loope
test
push
dec
das
outsb
lret
inc
shll
sti
lcall
leave
int3
inc
js
sarl
rcll
pop
shrl
lcall
mov
shrl
out
loope
mov
sub
aas
inc
xchg
jmp
pop
ljmp
andl
pop
sub
push
sbb
test
pop
mov
aad
inc
nop
mov
jbe
dec
popf
pop
xchg
xchg
dec
cmpl
xchg
outsb
xchg
pop
sub
leave
pop
add
imul
ss
inc
fdivr
or
jne
inc
or
mov
popa
fsubrp
add
icebp
test
jecxz,pn
xor
call
enter
fstl
add
shlb
jecxz
sbb
push
aas
repnz
sbb
dec
xchg
and
divl
rol
push
out
sub
add
lods
shrl
loope
mov
into
lret
in
scas
cltd
push
dec
pushf
repz
cli
ficoms
stos
and
jmp
test
jg
imul
pop
fwait
mov
lret
xor
in
mov
roll
cmp
mov
jb
mov
jp
adc
adc
cmp
jecxz
hlt
jns
call
into
je
sub
sbb
loopne
test
in
insb
lds
jg
and
push
jns
daa
push
in
jns
aas
mov
xor
pop
js
testb
lahf
jp
and
in
rorl
cltd
stos
lods
sub
sbb
cli
mov
fbld
mov
mov
pop
inc
add
lock
gs
xchg
cmc
addr16
lds
inc
mov
insb
fiaddl
or
outsb
pop
push
xor
fs
jg
les
push
adc
mov
xor
jo
in
xchg
shlb
repnz
test
sub
enter
dec
lods
std
push
push
push
push
jge
push
pusha
mov
xchg
enter
jmp
das
jge
fiaddl
push
pop
and
outsb
or
jl
imul
popf
setl
cltd
rorl
jp
and
aam
and
mov
xchg
mov
aam
test
idivl
push
pop
push
stos
or
mov
jecxz
lock
push
mov
and
push
push
ljmp
sub
dec
je
scas
idivb
std
les
loopne
idivl
or
adc
push
movsb
sahf
rcll
das
xor
mov
lea
xchg
adc
push
gs
sub
push
ljmp
and
stos
pop
enter
test
jbe
out
call
aaa
fxch
pop
mov
lods
sbb
stc
popl
mov
das
jl
fcmovnbe
fs
icebp
test
pushf
or
lret
or
inc
repnz
rcrl
mov
cmp
jle
bound
sahf
push
dec
cmpsb
scas
add
cs
loop
into
leave
xor
push
in
lods
lret
mov
push
jecxz
cli
mov
imul
notb
stos
out
or
xor
pop
mov
imul
addr16
xor
adc
sbb
xor
out
xlat
outsl
loop
idivl
jl
cmpsl
das
mov
or
mov
dec
icebp
fnstsw
repnz
sbb
popa
loope
dec
cmc
aaa
mov
ja
sub
xor
mov
inc
lds
clc
dec
daa
rorl
outsb
xchg
not
insl
dec
out
push
addb
sbbl
gs
inc
shll
xchg
or
movsb
push
das
in
stos
insl
mov
push
addb
cmp
ret
jae
adc
int3
arpl
test
xor
enter
outsb
lds
stos
xor
rcll
movb
insb
jne
xchg
cli
popf
fdivs
fsin
adc
shrb
pop
and
dec
add
mov
inc
data16
icebp
ja
sub
jle
fnstenv
sbb
jle
aas
and
cmp
jo
adc
test
ljmp
xchg
hlt
mov
add
adc
movsb
adc
out
and
mov
decl
add
mov
jle
cmp
js
mov
mov
and
xchg
jae
popa
jg
cmp
mov
jae
lcall
scas
in
mov
adc
sbb
cmp
xchg
mov
lahf
adc
test
mov
mov
lret
cmp
mov
push
pop
jl
clc
sti
jp
xchg
mov
pop
inc
dec
inc
subl
fstpt
fmulp
das
movsb
cmp
jecxz
jge
and
sub
call
add
or
xchg
cli
mov
mov
mov
push
ss
int
push
mov
or
out
test
or
call
push
call
sbb
dec
xchg
push
inc
cmpsl
push
jecxz
es
or
addr16
in
std
cwtl
pop
mov
aam
rorl
jns
xchg
lods
jae
adc
mov
stc
dec
pop
inc
lcall
sbb
mov
add
jle
aam
inc
pop
mov
sub
icebp
adc
push
pushf
xchg
daa
out
popf
mov
int
roll
and
movsl
cmp
add
sbb
push
sbb
jnp
xor
in
mov
aam
pop
out
ss
repz
lea
cmp
mov
adc
lahf
fisubs
push
js
xchg
jnp
adc
xchg
int3
add
jns
dec
out
sbb
inc
sahf
and
and
jmp
or
jnp
push
es
mov
stc
subb
pop
lock
sub
imull
push
add
repnz
mov
cmpsb
dec
dec
jp
inc
scas
rclb
cmp
or
xchg
test
add
cmp
cmpsl
pop
cmp
les
int
xchg
and
repnz
cmp
mov
add
sbb
shl
xor
or
in
shrb
mov
mov
fmuls
out
xor
fwait
repnz
xor
notb
mov
push
es
dec
xchg
inc
pop
mov
and
popa
cwtl
lahf
out
orb
and
sahf
xchg
decl
je
ljmp
aad
mov
addr16
aad
add
nop
pop
push
jae
pusha
pusha
leave
pop
jno
test
mov
outsb
imul
orb
mov
fucom
icebp
fldenv
and
jne
mov
jnp
sub
scas
ja
lea
and
test
ror
shll
pop
pop
aas
imul
xchg
jno
sub
stc
adc
xchg
pop
inc
sbb
xchg
sbb
ror
and
loope
or
and
cmp
out
insb
sti
sahf
jno
out
or
cs
pop
daa
imul
jl
inc
and
pop
fcompl
lods
xor
mov
xchg
mov
sub
adc
dec
push
shl
ljmp
mov
or
sub
jl
popa
inc
clc
mov
pop
out
jp
int
add
test
push
inc
popa
add
out
sbb
xchg
aam
xchg
xchg
cmp
dec
aas
test
jbe
ficomps
scas
std
jb
dec
and
orb
gs
and
pusha
xchg
and
aam
cs
decl
loop
sub
push
das
leave
test
test
repz
push
movsb
pop
cmpsl
mov
mov
add
mull
sbb
lods
scas
inc
jp
rcrl
pop
xor
or
hlt
lret
mov
lret
inc
mov
or
scas
add
es
mov
inc
lahf
mov
loopne
test
adc
mov
adc
das
call
mov
push
cmpsb
xor
clc
mov
call
xchg
cli
lea
jle
and
inc
add
shll
es
sarl
mov
into
push
jae
cmpsl
addr16
push
fcmovu
ja
mov
icebp
popa
sub
repnz
iret
repz
add
mov
enter
arpl
push
jmp
out
jo
ret
push
hlt
mov
inc
xor
hlt
push
bound
xchg
and
add
xchg
jle
mov
cld
xchg
push
lcall
cmpsb
mov
aas
and
jg
cmp
lret
sub
int
xchg
inc
enter
leave
xchg
cld
pop
rol
test
sbb
data16
out
sbb
leave
pop
scas
dec
mov
pop
fidivs
pop
sbb
jl
adcl
cli
jbe
or
push
notb
test
lret
aas
xchg
aam
stos
dec
loop
adc
push
mov
adc
sub
jns
fisubs
fildl
pop
ret
jp
outsl
xchg
in
gs
ljmp
int
mov
ljmp
fildll
mov
xchg
jge
pop
jl
sbb
jnp
ja
push
adc
call
cmp
shll
or
add
js
mov
repz
arpl
shll
mov
shll
repz
push
adc
sahf
test
inc
dec
mull
rolb
and
xlat
mov
jmp
xchg
sbb
clc
mov
and
sub
jmp
in
push
or
mov
fidivrs
test
iret
push
jle
rorb
lret
jbe
std
xchg
outsl
xchg
mov
mov
sti
pusha
cmp
pop
mov
pop
shrb
ffree
das
or
int
push
mov
mov
jb
jle
out
sbb
rcrl
pop
inc
cmpsl
std
bound
repz
or
in
mov
push
sub
cmp
jns
ljmp
xchg
imul
imul
int
sbb
mov
dec
sbb
mov
cmpsb
cmp
jno
push
push
loop
rcr
fldt
pop
mull
fxch
shl
in
sti
push
add
jnp
fdivs
dec
cli
cli
jno
push
add
mov
and
in
xlat
outsl
roll
pushf
jns
cltd
cli
scas
dec
add
das
and
cltd
lods
sub
pop
lcall
mov
popf
shlb
iret
pop
fsts
dec
aaa
ljmp
push
icebp
loopne
les
mov
cmp
push
cltd
push
push
nop
fldlg2
jbe
lret
inc
pop
loop
mov
sub
dec
xchg
loope
push
imul
pop
and
add
pop
or
xor
repnz
hlt
lea
js
pop
mov
or
add
pop
out
mov
push
or
adc
pop
xchg
push
and
or
fsubl
movsl
int
outsl
out
adc
out
and
int3
mov
aas
lock
subb
test
xor
aas
test
ret
in
imul
int3
out
or
push
lock
fidivs
push
or
or
mov
pop
add
and
lds
xchg
stc
pushf
push
mov
lds
or
sub
repz
int3
jle
jl
loope
jp
pop
mov
push
mov
jne
leave
test
xorb
mov
cmp
dec
sub
insl
xchg
adc
cltd
dec
pop
push
mov
mov
sbb
call
jno
mov
adc
lahf
in
fs
out
pop
cld
mov
lcall
lahf
out
test
pop
aad
pop
iret
dec
push
decb
pop
pop
lea
sbb
jo
inc
or
jecxz
sarb
and
adc
pop
negb
movsl
mov
sbbl
mov
lret
pop
mov
add
repnz
out
mov
dec
xor
jp
mov
lahf
mov
cld
sbb
adc
das
out
aad
nop
jno
mov
into
cld
mov
cmp
lock
cmc
mov
lea
fidivs
cld
stos
jae
mov
sbb
stos
lret
push
das
and
imul
xor
pop
add
popl
mov
sbb
insb
shlb
sbb
xorl
rorl
stos
test
test
clts
loope
adc
imul
inc
nop
mov
push
pop
lock
hlt
out
jmp
cmpsl
jbe
lods
xchg
es
add
cmp
shr
pushw
jo
movsl
cltd
movb
ss
sti
loope
icebp
add
pop
stos
lret
mov
jno
outsb
dec
leave
adc
jg
mov
fsubl
imul
loop
dec
xchg
fs
iret
in
popf
mov
sub
xchg
lret
jb
jp
leave
rorb
or
pop
push
lahf
fs
mov
or
in
lcall
fnstenv
mov
in
cmp
stos
sub
mov
xor
jb
sub
xor
jg
bound
cmp
jmp
mov
mov
js
sti
xchg
jno
cmc
gs
sbb
stos
xchg
testl
into
fstps
rclb
inc
and
xchg
stc
pop
stos
or
hlt
push
out
inc
movsl
push
cld
insb
mov
jmp
fcoml
ss
pop
cmp
test
mov
lahf
test
lcall
lds
sti
pop
xchg
and
outsl
js
movsl
jp
nop
int3
mov
rclb
cmpsl
sub
in
lods
inc
jo
adcb
adc
stc
sbb
fnsave
jp
fwait
inc
pop
pop
popa
jnp
sub
xlat
push
insb
lret
lret
lret
jb
cld
in
pusha
out
repz
pop
jmp
add
cmp
out
fsubs
imul
pusha
xor
loopne
cmp
cwtl
dec
gs
idivl
insb
popf
xor
pop
jmp
lea
out
mov
pop
mov
mov
xor
negl
aas
loopne
out
cmp
xchg
ret
xchg
out
repz
jnp
jne
stos
sub
or
xchg
stc
mov
rcr
stc
mov
out
in
cmpsl
sarl
sub
pop
cmp
es
sub
dec
repnz
and
cwtl
adc
add
xor
aaa
xchg
push
pop
pop
pop
xchg
test
inc
jns
jne
lods
lods
leave
jbe
in
and
or
rep
fs
sbb
xchg
push
pop
daa
mov
jb
sub
scas
jns
and
mov
sbb
icebp
xchg
push
sbb
int
inc
mov
mov
aad
clc
xchg
insb
lods
movsl
shll
outsb
repnz
jae
jmp
in
aas
das
and
out
lods
inc
addr16
test
lock
cmpl
iret
repnz
repnz
rolb
nop
fsubs
and
pushf
gs
test
xchg
fwait
pop
lods
or
dec
movsb
or
mov
add
lcall
ret
repz
xor
cmp
iret
sub
shll
subl
push
sub
lds
inc
jecxz
pop
insb
or
dec
inc
mov
cld
pop
pushf
lret
andb
rcll
rol
cs
mov
pusha
pop
push
jns
cmp
lea
xor
xchg
pusha
in
sub
mov
out
sbb
hlt
ss
outsl
iret
jb
fcomip
dec
dec
fs
pop
mov
icebp
sub
popa
sub
xchg
imul
push
icebp
pop
insb
cmp
mov
sbb
inc
sahf
rcll
fisubl
test
verw
mov
dec
xchg
insb
sahf
and
mov
int
scas
dec
dec
imul
dec
aas
jp
jae
xchg
dec
cmp
push
xchg
je
xchg
cld
inc
mov
test
sbb
cltd
rcl
jnp
mov
fsubr
hlt
cltd
mov
addl
sbb
cmp
mov
xchg
leave
int
jb
in
clc
and
aam
sbb
jecxz
add
dec
mov
bound
add
dec
call
sbb
ret
sub
mov
lea
loope
out
nop
mov
shll
mov
lods
aam
mov
nop
mul
sbb
or
out
xchg
call
push
loop
int3
sbb
pop
and
loope
insl
xchg
movsb
ds
std
sbbl
lods
shl
notb
fisttps
test
cmp
in
sbb
stc
jmp
push
jno
jge
and
dec
jp
xchg
cmc
xor
jnp
or
out
or
mov
movups
stos
arpl
pop
xchg
std
jmp
lods
sbb
insl
jb
outsl
xchg
inc
push
lret
enter
inc
jmp
stos
or
cwtl
stc
rcll
dec
cmpl
sbb
jmp
ret
out
lods
or
out
out
orl
icebp
mov
jns
test
sub
rcll
lcall
stos
lods
or
es
add
cli
scas
dec
int
mov
outsb
xor
rcrb
inc
mov
pop
repz
mov
dec
icebp
jbe
lods
in
push
and
pop
adc
mov
adc
leave
shl
cmp
cld
test
adc
xchg
div
mov
mov
es
shll
in
clc
outsb
mov
lods
adc
loop
jno
adc
rcrl
xor
pop
stos
cmp
aaa
test
mov
jge
into
add
push
imul
imul
sub
shr
int
iret
or
pop
adc
fstp
ja
imul
out
sbb
mov
mov
test
pop
roll
or
cwtl
enter
stos
cmp
xchg
and
pushf
popf
jo
mov
insl
movsl
das
test
xchg
sbb
sti
mov
rcll
and
dec
out
out
popa
or
mov
jle
dec
push
fldl
or
repnz
sbb
into
out
push
push
repnz
push
adc
incl
pop
xor
stc
pop
hlt
les
cmp
jg
inc
js
mov
xchg
nop
push
test
das
lods
mov
inc
sbb
jp
mov
aam
rclb
ficoms
mov
adc
out
icebp
pusha
jno
sbb
inc
ja
fcompl
lahf
inc
loope
push
das
test
mov
mov
out
js
inc
lock
mov
mov
xor
sbb
or
or
lahf
mov
cs
inc
enter
popf
sub
sahf
push
and
leave
repz
xchg
insb
dec
sub
in
cmpsb
add
lock
ss
inc
in
mov
inc
filds
aad
popa
xchg
add
clc
es
push
das
sar
xchg
rcrl
sbb
dec
xor
add
mov
imul
jns
in
mov
addr16
rol
push
std
pop
xchg
jne
arpl
jo
mov
cmpsb
movsl
xchg
fnstcw
and
push
jo
push
inc
inc
mov
mov
call
outsb
out
cmp
les
lock
rcrl
lahf
pop
cmpsb
cmp
and
mov
adc
lahf
shl
xor
sbb
xchg
jns
jbe
mov
scas
push
and
es
cwtl
pop
dec
movsb
xlat
mov
sub
enter
mov
push
cmp
or
pop
cmc
inc
mov
cmpsb
xchg
clc
rorb
pop
lods
mov
repnz
pop
and
cmpsl
dec
adc
andl
lock
mov
clc
cwtl
ss
mov
jnp
das
data16
xchg
xchg
xchg
xor
adc
std
jbe
out
mov
mov
iret
push
inc
mov
mov
add
mov
xchg
call
pop
lcall
cmp
xchg
jp
loop
pop
xor
cmp
outsl
insl
clc
mov
mov
mov
lret
jmp
outsb
addr16
icebp
pusha
test
test
cmp
ret
jb
jmp
scas
lcallw
mov
pop
aam
or
jp
push
add
cwtl
push
mov
push
dec
adcb
in
mov
imul
sbb
dec
sbb
or
push
adc
iret
and
fidivrl
lods
mov
hlt
cmpsb
outsb
adc
clc
stos
add
subb
xor
cmpsl
pop
and
dec
inc
mov
sub
mov
lods
adc
lahf
adc
aam
ja
pop
std
shlb
lea
sub
loope
fsubrs
sub
cmp
and
jae
xor
outsl
xor
subl
arpl
das
jg
push
push
or
js
mov
out
sbb
add
and
sub
sbb
cmp
ss
xor
add
inc
sahf
test
mov
gs
jae
sbb
jb
mov
in
mov
pushf
test
and
icebp
push
sahf
and
dec
test
lcall
in
mov
add
push
movsl
sub
jl
push
add
testb
mov
inc
sbb
je
dec
mov
out
sub
mov
mov
jge
movb
call
jne
stos
shll
pop
cmp
and
out
xchg
pop
imul
dec
or
lcall
int
inc
lret
xor
lcall
push
push
sbb
push
push
sbb
pop
cs
sub
cmp
lret
add
xchg
mov
add
cwtl
imul
fwait
mov
cli
ds
outsb
push
add
decl
push
cmp
xor
add
das
cmp
inc
jnp
jecxz
loopne
das
push
nop
push
xor
movb
addb
jb
add
rclb
ss
add
sbb
adc
pop
cltd
mov
push
xor
jecxz
cmp
bound
bound
das
popa
xchg
divb
loopne
sbb
mul
in
adc
cmpsl
push
aas
addr16
pop
pushf
addb
mov
push
cs
xchg
xlat
aad
pushf
inc
out
inc
xor
test
je
pop
adcb
xchg
addr16
mov
ret
pop
and
and
or
inc
mov
mov
stos
rclb
dec
inc
fwait
cmp
mov
sub
lds
jbe
jbe
out
sbbb
and
cmp
push
loop
loop
cmp
test
sbb
sub
repz
sbb
fisubrs
imul
mov
dec
sti
xor
push
push
dec
push
popa
test
inc
xchg
xor
pop
jns
adc
shlb
jge
and
xor
pop
inc
cmp
lods
add
dec
rcrl
imul
icebp
and
pop
std
xchg
inc
outsb
push
out
or
jmp
stos
jp
loope
adc
ret
jmp
sbb
call
enter
ss
jnp
iret
outsl
or
sub
popf
scas
jns
aam
push
sti
cwtl
xchg
into
movsl
mov
je
add
add
imul
les
lahf
pop
ja
xor
jl
and
fldt
int3
cld
lret
push
iret
pop
cld
in
insl
push
outsl
push
jno
pop
pop
lds
cmpb
sbb
out
and
pop
int
gs
inc
push
daa
popa
sub
bound
inc
cmpsl
outsl
mov
nop
sbb
nop
jbe
lds
sbb
or
mov
push
rol
mov
push
leave
sub
mov
roll
push
loop
mov
xor
inc
jbe
ds
cmp
push
ret
stos
or
aad
lods
mov
jmp
mov
pop
in
pop
push
pop
mov
add
xor
call
add
ret
xchg
jne
and
mov
adc
add
out
dec
cli
dec
push
iret
mov
mov
jno
sbb
push
dec
fwait
movsl
out
fstpt
ret
add
in
mov
addb
mov
les
std
jb
out
xchg
mov
arpl
and
sbb
pop
push
into
pop
cs
xor
push
push
and
cs
in
xor
mov
int3
cs
xchg
adc
mov
cmp
mov
mov
outsb
insl
pop
aam
mov
lret
aaa
pop
in
inc
inc
cmpsb
int
popa
sbb
lods
xor
mov
mov
mov
cmpsl
xchg
imul
addr16
xchg
fs
mov
das
pop
cmp
jl
mov
push
cmp
ds
sub
mov
sub
mov
and
std
cwtl
fildll
dec
pop
mov
cmpsb
mov
xchg
xchg
xchg
add
mov
add
outsl
mov
sub
gs
rcrb
mov
repz
sub
fdivrl
and
xor
mov
push
sbb
jmp
mov
lods
cmpb
cmp
gs
xor
xchg
insb
sub
test
mov
hlt
cmp
fisubs
xchg
shrl
out
xorl
mov
jle
in
xor
shlb
dec
push
mov
mulb
js
shlb
pop
aaa
fsubs
mov
mov
mov
popf
insl
insb
sbb
mov
xlat
add
sti
pop
jl
adc
adc
inc
inc
and
fbstp
cmp
scas
into
pop
int
or
ja
out
or
lahf
sarb
adc
lock
add
mov
lods
lods
das
enter
daa
jae
jns
insl
pop
lods
push
repnz
push
add
pop
sub
jo,pt
mov
xchg
or
push
cmpl
sub
ja
ss
pop
sbb
cmp
xchg
inc
push
xor
and
mov
push
cli
xlat
sub
push
test
or
pop
cmp
loope
out
sahf
into
sti
and
cmpsl
insb
out
jg
scas
std
jns
mov
sub
sub
add
ror
dec
leave
cmp
push
xor
jl
pushf
cltd
push
fsubrl
pop
ret
lret
xor
lods
push
dec
movsb
push
mov
jno
add
xchg
mov
ret
imul
clc
dec
test
jg
test
outsl
xchg
sti
test
sub
mov
mov
fs
outsb
loopne
bound
mov
adc
sub
std
rolb
jmp
jmp
mov
js
adcb
jbe
dec
push
daa
mov
push
push
stos
sbb
sbb
xchg
aas
cltd
iret
xchg
mov
jp
scas
fisttpl
sbb
out
pop
jb
xor
push
out
dec
mov
dec
add
jge
andb
test
rcrb
dec
lahf
popa
cmp
je
push
jmp
cmpsb
inc
cmc
imul
push
stos
sbb
jb
push
cmp
dec
xchg
icebp
xor
test
jmp
test
mov
adc
jno
adc
movsb
ret
das
mov
and
repz
jmp
xchg
sahf
aad
or
into
and
ret
mov
cs
popa
inc
push
jnp
shlb
imul
lds
mov
popl
pop
push
fiaddl
dec
add
jp
imull
fidivrl
cmpsl
mov
movsl
jp
xor
cmp
loope
in
call
stos
mov
cs
cmp
incl
mov
mov
adc
ret
sub
mulb
popf
sbb
dec
push
cld
aas
push
fadd
lds
aad
pusha
test
fidivl
push
rep
pop
popf
jbe
jmp
sahf
in
jl
jge
or
xchg
xor
daa
pop
nop
cld
inc
jle
xor
test
jmp
insl
add
enter
fcmovnb
dec
push
cmp
ds
mov
fisttpl
xor
and
xor
and
insb
pop
mov
enter
hlt
jnp
mov
or
int
std
pop
push
pop
jo
xor
scas
pop
cmpsl
dec
cmc
jb
jae
out
push
sub
in
pop
iret
xchg
sahf
or
xor
fimull
pop
mov
mov
test
inc
in
mov
rorb
testb
shl
xchg
outsb
pop
jp
imul
icebp
xor
fmull
js
sets
fstl
fimull
ret
loop
mov
add
xor
push
lock
add
repz
mov
mov
mov
inc
lods
aaa
and
or
fcompl
js
mov
stos
popf
dec
mov
fsubrp
push
js
lcall
sbb
mov
pop
jmp
dec
test
shlb
xor
imul
test
aad
mov
cwtl
push
sub
lahf
enter
push
popa
mov
cmp
fld
ja
arpl
popa
mov
stos
es
push
rcr
xchg
ret
jge
js
push
push
cmpb
in
push
scas
sbb
jle
or
mov
push
mov
inc
sub
jg
adc
dec
mov
dec
pop
repz
outsb
jp
cmp
xchg
adc
sbb
repnz
into
xorl
imul
dec
loope
push
xor
inc
test
mov
popa
stos
cmp
dec
or
inc
pop
fstl
jmp
sub
inc
lret
testl
cmp
mov
jg
adc
jecxz
in
inc
ds
and
xchg
pop
es
and
pusha
fsub
pop
mov
rorl
fcmovnbe
inc
pop
jnp
sbb
dec
imul
adc
jmp
sahf
js
test
and
inc
adc
xchg
add
lds
and
jle
mov
cltd
movsb
movaps
or
daa
pop
cmp
add
push
cmc
icebp
jo
inc
add
inc
imul
mov
push
push
int3
outsb
and
or
mull
pop
out
cltd
or
ds
incl
lods
push
ja
ret
bswap
sub
cli
or
or
inc
and
pop
mov
lret
mov
sbb
push
add
jb
xor
push
scas
push
push
out
cli
incl
inc
cmp
jae
lret
outsl
mov
aas
xchg
cmp
fwait
stos
dec
loopne
repnz
les
add
pusha
lock
clc
push
push
int3
incb
sbb
add
inc
out
xor
inc
mov
push
mov
pushf
mov
or
add
sub
in
loop
sbb
xor
fwait
pop
sbb
sbb
call
test
push
add
sub
mov
data16
dec
pop
sbb
cli
lret
adc
loop
cmp
xchg
test
add
int3
dec
adc
into
iret
test
or
mov
out
xor
std
mov
jns
call
jge
data16
inc
out
push
xor
cltd
dec
sub
iret
inc
data16
push
fsubs
aaa
push
mov
sbb
jle
lret
sub
mov
loop
inc
mov
std
movsl
jae
ds
mov
add
scas
popa
sbb
lds
adc
push
mov
fsubs
dec
jno
mov
testb
cli
dec
scas
cli
inc
xlat
inc
les
inc
and
adc
stc
sbbl
insb
dec
jp
movsb
adc
enter
mov
pop
xchg
lahf
mov
dec
aam
iret
inc
outsb
cld
xor
fcoms
mov
dec
or
or
and
movsb
mov
fs
sub
test
shr
movsb
cmp
inc
cld
cmpsl
mov
mulb
xchg
push
cli
cmp
aaa
addr16
jo
sub
jg
sahf
mov
mov
mov
mov
add
aam
mov
or
adc
mov
sahf
fcoms
test
xor
mov
lods
clc
jae
xchg
jae
out
cli
mov
negb
cmp
dec
add
dec
nop
in
pop
or
jno
push
jg
popa
jae
incl
insb
and
jp
test
imul
mov
lret
movsl
mov
in
lret
push
mov
minps
xor
pop
add
repnz
stos
mov
fdivp
cmpsb
mov
xlat
repnz
adc
js
in
movsb
mov
add
pop
adc
dec
dec
popa
pop
push
mov
fucom
xor
push
jb
dec
into
in
and
repz
lock
jmp
adc
and
xchg
js
add
lods
jb
lock
xchg
insb
cmp
cmp
mov
xor
xchg
mov
outsl
fstpt
and
std
dec
adc
add
pusha
and
daa
xchg
push
adc
outsb
fwait
cwtl
push
dec
jmp
gs
sbbb
ds
in
stos
in
mov
hlt
and
cltd
rcr
daa
rorb
insb
cmp
or
xor
xor
test
mov
adc
add
int3
rcll
fstpt
mov
loop
ss
test
jge
mov
aam
push
cld
inc
dec
xor
adc
adc
jecxz
je
and
and
jb
sub
cmp
jge
xorl
outsb
pop
add
dec
add
es
push
or
pop
sub
rcrb
imul
out
in
lds
lods
testl
out
dec
push
dec
push
dec
rep
or
movsl
fdivr
rorb
mov
dec
fwait
push
add
loope
bnd
adc
xor
sbb
pop
sar
sub
dec
hlt
gs
pop
dec
in
jge
xor
nop
out
loop
push
in
xor
fcmovbe
mov
mov
aas
add
push
xchg
call
sti
pop
pop
xor
jecxz,pn
fnstenv
xlat
sbbl
mov
push
mov
iret
dec
test
loopne
lcall
testb
fsubl
fld1
sbb
dec
inc
mov
xor
pop
mov
xor
sbb
jo
push
popa
adc
jnp
aam
sbb
sub
mov
cmp
sbb
sub
inc
cmp
cli
pop
lods
clc
sbb
and
cmp
mov
dec
test
ja
cmp
scas
psrlw
sub
sarl
fcomps
adc
cld
leave
je
add
fildl
aas
inc
push
jmp
stos
cmpsl
adc
loopne
xor
jge
dec
dec
jge
out
cmp
dec
ret
fwait
sbb
add
mov
mov
sbb
mov
out
scas
in
mov
cli
or
bound
or
lds
in
ficoms
sub
sysret
mov
lret
cltd
sub
adc
xor
popa
lahf
and
ret
dec
push
xchg
rol
xor
scas
loopne
popa
iret
sub
outsl
or
or
repz
inc
rcll
pop
aad
loop
mov
push
jecxz
adc
jge
ljmp
in
and
pop
push
mov
xchg
popf
das
cmc
arpl
xchg
jno
mov
sbb
adcl
pop
lods
mov
xchg
mov
sbb
pop
roll
and
arpl
ss
mov
push
add
and
sbb
loop
and
mov
test
ss
pop
inc
pushf
mov
dec
imul
lds
data16
iret
or
and
jmp
ret
fcompl
add
clc
ret
xchg
lcall
push
pop
lret
pusha
adc
add
mov
inc
dec
adc
out
imull
dec
std
pop
pop
inc
jno
int
dec
jl
pusha
mov
popa
icebp
xchg
or
xor
test
insl
xchg
arpl
out
into
rolb
mov
and
stc
lds
push
push
inc
test
jg
out
adc
imul
sub
jg
mov
inc
rol
fwait
pop
xchg
rolb
ja
rcll
xchg
push
rcrl
inc
push
inc
rcl
lds
sbb
pop
test
test
mov
push
mov
xlat
nop
hlt
jbe
dec
rcrl
lock
xor
sbb
push
bound
cwtl
mov
adc
mov
mov
mov
mulb
push
std
fsubrp
pop
iret
inc
mov
loopne
sub
addr16
enter
in
mov
jns
dec
lret
inc
xchg
mov
sbb
sbb
movswl
out
push
fcoms
les
add
test
scas
orb
sti
jg
aaa
adc
sbb
add
mov
sub
shrl
out
mov
and
ret
push
test
rorb
inc
xchg
lods
pop
and
add
mov
cmp
xchg
in
pop
cmpxchg
cs
lcall
js
pop
push
inc
cmpb
sahf
mov
or
je
aas
adc
dec
iret
inc
adcb
out
fcompl
jb
int3
push
and
jb
xchg
jb
jne
sub
or
jne
es
std
push
rclb
std
jecxz
sub
lods
rclb
lds
mov
mov
inc
jae
sbb
fcmovnb
sbb
nop
js
int3
and
das
and
xchg
push
inc
mov
and
int3
mov
push
out
push
or
lods
add
push
xor
shrl
push
call
sbb
ja
push
adc
sub
add
dec
pusha
and
push
cmp
je
test
mov
push
fs
nop
fimuls
nop
sbb
decl
out
sbb
das
ds
test
test
jecxz
add
in
pop
fsubrs
cmp
in
ja
repz
icebp
push
insb
xor
cltd
sub
and
iret
mov
inc
arpl
das
dec
js
fimull
mov
push
int3
movsl
mov
sahf
ja
inc
mov
pop
xor
filds
inc
xor
or
pop
push
xchg
inc
sub
pop
inc
test
mov
push
xlat
clc
subl
adc
jb
sahf
pop
dec
fldcw
xchg
ret
dec
dec
and
jecxz
xchg
or
mov
pusha
ljmp
movsl
repz
jbe
lcall
pop
dec
pop
mov
repnz
call
lret
mov
adc
and
pop
jmp
push
enter
cmpsb
dec
loop
cmpsl
xchg
lret
dec
or
inc
push
and
and
sub
jmp
rcrb
pop
add
xchg
mov
jno
ja
sbb
pop
push
insb
cld
insb
fmull
in
push
push
incb
cwtl
push
sarl
push
cmpsl
xchg
hlt
inc
neg
pop
outsl
mov
fldl
decl
xchg
inc
inc
pop
xchg
insb
fistl
jp
jo,pt
xchg
sahf
sbb
mov
mov
cmpsl
das
pop
icebp
mov
inc
cmpsl
xor
test
ds
xlat
add
stos
lods
in
jb
ja
ja
in
outsb
and
push
inc
xchg
aad
xor
shl
adc
into
sub
cmp
sbb
shll
mov
data16
outsl
sub
and
call
add
xchg
sub
xor
lahf
pop
cmp
cmpl
rcll
mov
sbb
and
jbe
xchg
jae
mov
sub
cmp
xlat
daa
cli
mov
mov
and
mov
fldl
xor
stc
and
jle
and
lcall
add
inc
outsb
aam
or
push
ret
mov
and
cmp
push
cmp
outsb
sub
jo
mov
xchg
push
ret
fcmovnbe
xchg
xor
or
add
adc
out
imul
sub
std
test
sub
cmpsb
insb
pop
pop
fcompl
repz
js
adc
or
or
lods
pop
hlt
les
mov
mov
cmp
cld
mov
jnp
mov
jl
js
int
inc
je
aam
nop
sub
add
push
inc
and
xor
mov
cmp
mov
loopne
cmp
add
dec
je
fcomip
mov
sub
xchg
insl
imul
inc
mov
outsb
inc
ljmp
and
mov
insb
imull
jmp
rcrl
mov
and
cmpsl
lret
xor
jns
out
inc
sub
lcall
ficoms
repnz
inc
movsb
or
pop
jns
cmp
icebp
pop
mov
inc
push
insb
int3
call
sub
loopne
add
jae
insl
mov
adc
inc
repz
jne
call
jmp
les
fucomi
addr16
cmpsl
jmp
mov
inc
inc
push
and
mov
lock
les
mov
les
out
aad
and
lods
adc
cmpsb
mov
add
fwait
pop
test
inc
das
loop
push
iret
pop
aaa
dec
nop
cmp
mov
mov
outsl
adc
or
or
cmpsl
je
adc
push
hlt
and
sahf
ss
daa
out
int
xchg
test
and
test
add
scas
or
in
arpl
mov
test
lcall
pop
leave
sbb
idivl
xchg
cmc
fs
mov
jb
push
insb
push
mov
lods
adc
test
shl
inc
int3
mov
mov
pop
add
and
sub
out
out
cmp
adc
xor
push
or
xlat
sbb
shlb
mov
pop
repz
xchg
arpl
out
in
arpl
push
bndstx
mov
add
nop
cmpsl
ss
mov
insb
push
rolb
xchg
ljmp
lcall
data16
cli
sub
mov
push
jno
scas
ret
push
iret
and
pop
fbld
pop
cmp
icebp
or
aas
scas
sahf
inc
negl
xchg
mov
jmp
jnp
push
imulb
mov
movsl
or
xchg
dec
nop
add
into
mov
sbb
jle
adc
inc
pop
fsubr
mov
lock
dec
sbb
mov
ret
insl
call
aam
call
adc
push
xchg
fldl2t
mov
movsb
and
jbe
mov
inc
stos
out
rcrb
xchg
call
cmp
cmp
mov
inc
fmulp
push
ficoml
dec
mov
arpl
cmp
mov
rclb
flds
mov
divl
pop
ja
inc
lock
out
cmp
movsb
insl
enter
mov
arpl
cmp
addr16
shl
popa
mov
pop
sub
mov
pop
int
clc
mul
jnp
pop
push
clc
jl
pop
sub
mov
xchg
cmp
int3
aaa
and
lahf
rorl
test
stc
jne
in
adc
push
insb
sbb
shll
xchg
out
sub
sbb
xchg
xor
add
push
jo
cmp
jmp
mov
or
leave
imul
jecxz
or
enter
aam
fnop
stos
sar
into
jo
mov
test
lds
add
imul
push
jmp
jb
test
jecxz
inc
jl
xchg
cli
push
pop
es
loop
inc
aas
push
or
test
fadds
fisubl
and
xchg
fstpl
pop
out
xor
sub
inc
adc
sbb
fwait
clc
shrb
ljmp
aaa
mov
rcr
in
repz
repz
mov
shlb
mov
jl
mov
push
fdivs
scas
fstpl
mov
inc
mov
in
stc
fwait
jbe
fsubrl
jb
hlt
lea
ret
popa
jnp
xor
dec
sti
or
ret
loope
adc
push
cmc
lea
cld
mov
add
mov
xchg
test
das
mov
ds
int3
aaa
call
mov
xchg
insb
push
jg
sub
adc
jo
in
scas
pop
leave
or
movsl
add
pop
stos
adc
lds
ss
jbe
imull
int3
popf
mov
add
inc
in
or
dec
into
add
and
push
add
dec
movsb
mov
sbb
jnp
sbb
into
xor
sub
fnstsw
and
out
mov
subl
pop
adc
push
jl
fldt
lret
jmp
push
js
outsl
shll
imul
jne
scas
lret
jecxz
in
xor
xchg
lret
push
imul
lds
push
into
jno
shll
inc
int
enter
or
sbb
xchg
cmpl
mov
rcll
adc
out
or
std
sub
jecxz
push
movsb
std
daa
push
mov
add
dec
movsb
or
mov
stos
mov
shr
pop
mov
movsl
in
fistl
xchg
inc
cs
das
es
std
ficoms
lock
jne
iret
repnz
adc
mov
stos
pop
mov
cmp
scas
mov
add
ljmp
sub
sti
movb
jmp
mov
jns
clc
rolb
cmp
adc
cmpb
push
insb
adc
test
lds
mov
or
jge
push
xor
pop
mov
or
and
int3
loope
pop
mov
mov
or
or
cld
outsl
cmp
fs
mov
cwtl
push
add
loop
xchg
mov
test
clc
mov
arpl
or
repnz
jo
jmp
lock
jecxz
mov
lock
fcomps
mov
cmpsl
movsb
rcll
jp
and
loop
sbbl
hlt
pusha
add
pop
mov
dec
adc
jbe
lods
mov
mov
insb
cs
cmp
test
imul
inc
mov
outsb
mov
pop
mov
js
jg
insb
adc
jns
pop
scas
mov
std
cmp
jle
clc
fs
jbe
xchg
insl
dec
push
test
lods
adc
mov
sub
adc
mov
scas
sbb
adc
aad
mov
push
sub
es
pop
cmp
ljmp
cmpsb
sets
mov
jecxz
push
mov
shlb
pop
cmc
popa
pop
or
shl
rol
xorl
mov
cli
inc
push
test
mov
jne
insl
add
repnz
imul
pop
xor
or
nop
loop
lret
data16
jb
data16
cwtl
push
push
xchg
push
jo
repz
or
push
xchg
test
xchg
mov
cmp
insl
jb
ds
add
into
test
out
pushf
jmp
enter
imul
in
or
pop
sbb
mov
stc
popa
pop
jbe
inc
mov
movsb
jo
adc
loope
clc
and
mov
fmul
jne
or
or
sbb
ljmp
sub
je
mov
push
fbstp
jmp
call
pop
in
sti
lods
shrb
aas
mov
jle
inc
imul
add
mov
jp
test
push
mov
daa
iret
loope
mov
in
jb
sub
pop
xor
xchg
pop
lret
sti
enter
jb
outsb
cmp
mov
loopne
outsb
mov
push
movsl
mov
cmp
jmp
out
ja
fdivr
cmpsl
out
in
leave
out
jle
jle
pop
mov
cmp
cld
mov
xchg
xchg
jge
jns
imul
jno
inc
jecxz
jmp
in
jge
adc
repnz
mov
int3
and
addr16
push
mov
cmp
xchg
cmp
sbb
int3
std
sub
jo
adcl
dec
add
xchg
push
inc
mov
repz
lret
jl
or
push
sub
add
iret
sub
adc
daa
mov
add
divb
aaa
mov
leave
mov
lds
outsb
jle
cmp
push
pop
adc
xchg
ja
repnz
push
shrl
daa
pushf
push
add
dec
push
inc
fistpll
dec
test
or
aaa
out
in
ds
imul
loop
repz
imul
sbb
outsl
xchg
push
paddb
fwait
sub
std
call
cmp
xchg
sti
aam
cs
mov
sub
mov
imul
jg
subb
shrb
pop
sarl
imul
js
dec
call
cmpsb
inc
popf
adcl
ficomps
ret
mov
loope
leave
int
sub
jge
jbe
inc
jmp
mov
aam
out
dec
and
push
sub
inc
dec
mov
into
mov
clc
xchg
mov
sbb
enter
mov
mov
xchg
sub
ds
push
mov
adc
pop
and
xor
sbb
insb
adc
mov
ficomps
and
hlt
cmp
xor
test
push
fwait
pop
and
fiadds
jle
adc
dec
call
sbb
cmp
lea
jnp
adc
xor
xchg
cmp
add
repnz
cmp
popf
bound
aam
and
mov
outsl
stos
ret
imul
jo
fisubs
or
mov
jns
hlt
aas
xchg
shlb
jp
lock
cmp
stos
push
add
xchg
cli
insl
fsubl
stc
xchg
sti
xlat
scas
scas
pop
inc
sti
inc
jo
lcall
fisubs
mov
outsb
icebp
push
push
ret
and
lods
pushf
push
dec
fsubs
jne
cmc
jb
jmp
imul
cmp
pusha
outsb
pop
dec
dec
ret
lcall
cmc
xchg
jns
in
out
mov
add
jmp
rcr
dec
mov
loopne
mov
cld
rcll
les
sub
nop
test
clc
loopne
push
and
jl
hlt
outsl
pop
lods
add
sbbl
aaa
dec
loope
xchg
lcall
push
push
pop
mov
cmpps
shlb
movsl
div
xor
insb
jne
xor
gs
inc
xorl
push
mov
lock
cmp
vprotd
xor
adc
pusha
bound
daa
insl
dec
mov
fs
mov
outsb
loop
aaa
leave
jns
jns
jl
sub
sub
pop
xor
rorb
mov
sub
mov
mov
test
jne
adc
pop
push
mov
jne
rorb
and
sub
movsl
xor
stos
mov
notl
sub
inc
mov
and
sub
ret
stos
nop
push
gs
cs
and
les
test
inc
sbb
repnz
shll
jl
fs
or
andl
insb
in
inc
clc
repnz
fs
mov
xor
sub
mov
ret
and
jecxz
push
dec
add
dec
mov
lcall
shrl
jg
aam
shl
mov
add
fdivrs
push
add
nop
mov
jno
mov
cmp
lock
jle
clc
sbb
xchg
add
leave
data16
rcll
das
aaa
cmp
mov
icebp
or
out
fistl
fwait
fwait
add
inc
jmp
xor
outsl
adc
push
imul
add
sbb
in
xchg
cmp
pop
jl
pop
add
add
js
adc
sub
sbb
adc
jmp
out
hlt
pop
xor
and
jne
out
fisubl
in
pop
sbb
into
rorl
dec
mov
leave
push
arpl
push
scas
and
ror
arpl
pop
in
sbb
outsl
sub
push
pop
ja
sbbb
sub
mov
inc
test
arpl
outsb
fiaddl
ljmp
movsb
xlat
add
sbb
nop
xchg
dec
xchg
fists
out
outsb
fdivrs
adc
mov
jbe
pop
pop
lock
pushf
aad
adc
xchg
cltd
faddl
fildll
fdivrl
fcmovnb
les
stos
std
stc
dec
enter
add
lcall
stc
jnp
inc
mov
or
jns
sbb
xor
sbb
jmp
rdpmc
or
sbb
ljmp
xchg
lea
inc
test
in
je
mov
dec
mov
out
mov
add
fdivrl
mov
add
add
fs
fildl
mov
shl
xor
outsb
or
insl
and
and
push
scas
cmpsl
mov
xchg
je
sbb
push
leave
push
sub
adcb
aad
test
insb
pop
push
stos
push
push
movsl
negb
push
pop
mov
xor
or
mov
outsl
adcl
sbb
cmpsl
push
aam
jnp
aam
xchg
mov
add
test
jo
push
test
aad
int
bound
jae
jne
fstpl
cltd
out
cli
stos
out
xor
mov
dec
in
xlat
xor
push
and
pop
mov
in
push
test
cmp
stc
push
addb
rorb
mov
inc
jge
arpl
fwait
mov
cmpsl
popa
jno
out
in
insl
and
push
lock
sti
test
xchg
fsubl
adc
mov
iret
stos
and
cmpsb
jge
fs
pop
lcall
sbb
add
xchg
jne
pop
add
loopne
pop
and
int3
lcall
mov
adc
lock
xor
adc
aas
xchg
fnstenv
and
popf
call
test
popl
aad
adc
loop
imull
outsb
and
loopne,pn
push
mov
xchg
int3
js
js
insl
shlb
cmp
pusha
stos
cmp
fdivrl
inc
ja
mov
es
call
call
je
fwait
jge
lcall
fisttpl
jmp
js
xchg
add
call
test
insb
addr16
addl
xlat
xlat
js
push
fisubrl
daa
hlt
nop
jle
out
inc
subl
dec
dec
or
and
fnstcw
clc
push
sub
repz
cmp
insb
pop
push
neg
test
push
mov
lcall
shr
push
or
lock
or
daa
xchg
sub
mov
das
loope
scas
adc
push
inc
mov
in
pop
sbb
jno
sbb
pop
lret
aam
test
mov
out
cmpsl
bts
add
mov
add
iret
test
repz
popf
dec
enter
fsubrl
std
push
inc
push
outsl
int
jne
add
xchg
xchg
cs
and
aas
aam
inc
int3
fldl
pop
test
sub
imul
jns
cli
mov
adc
das
lds
add
dec
pusha
push
gs
insb
leave
push
scas
ja
je
lods
jmp
jecxz
cmp
jg
push
inc
imul
sbb
lods
adc
loope
rclb
mov
jnp
scas
push
adc
push
sahf
inc
repz
adc
ror
jbe
push
pop
divl
adc
in
jno
push
adc
mov
mov
push
call
mov
int3
outsl
lea
inc
lea
leave
sbb
push
out
insl
push
xchg
adc
test
std
add
pop
ret
mov
rcll
shll
inc
add
and
xchg
push
xchg
in
out
mov
jbe
xchg
cmp
nop
and
sub
pop
out
insl
sub
dec
lret
mov
popa
outsb
pop
inc
pop
push
push
andl
mov
into
sub
cli
in
out
push
add
push
and
dec
movsl
stc
hlt
mov
jo
push
imul
cmp
adc
enter
push
xchg
rcrl
test
and
insb
sbb
testb
mov
arpl
mov
dec
ftst
mov
int
xlat
xor
aam
leave
fsubrs
inc
cld
shlb
addr16
test
sti
sub
adc
stos
movsl
das
or
iret
loope
and
jle
mov
xlat
repz
sub
es
mov
mov
js
jbe
push
push
or
out
mov
js
sti
xchg
stc
cmpsb
test
adc
add
mov
mov
daa
jb
xor
add
loopne
out
idivl
xchg
test
push
inc
inc
pop
imul
movsb
pop
jnp
sub
jg
inc
fisttpl
iret
mov
lcall
push
sub
inc
mov
xlat
mov
negl
rcl
push
out
pop
cmc
pop
push
inc
sbb
inc
shlb
lret
dec
faddl
adc
insb
xchg
sbb
xor
adcb
mov
dec
jns
pushf
push
xor
jae
mov
mov
in
icebp
push
cwtl
inc
dec
push
cmp
or
outsb
mov
movsl
insb
test
pop
dec
sbb
ljmp
fists
and
gs
mov
lcall
push
clc
xlat
sub
das
mov
and
dec
dec
adc
push
sub
cmp
sbb
mov
sub
or
lods
mov
inc
popa
adc
dec
nop
cwtl
xchg
xchg
and
mov
cmpsb
aad
add
arpl
das
pop
repnz
aam
mov
imul
lea
dec
das
jle
dec
ljmp
icebp
cmpsl
fdivrs
xor
out
stc
sbb
or
or
cmp
jns
jns
aas
imul
call
addr16
mov
fidivrl
mov
movsb
call
les
je
pushf
out
arpl
cmc
mov
mov
into
jbe
cmp
jg
mov
sar
int3
out
xor
xchg
cmp
rol
out
sbb
sbb
rcrl
xchg
mov
xchg
push
xlat
cmc
push
pop
dec
aad
mov
inc
fsubr
or
adc
or
xor
in
mov
insl
add
xchg
push
or
cmp
shrl
ds
out
xor
sub
pop
and
out
push
mov
push
inc
scas
icebp
inc
jge
fsubrl
mov
test
repz
lods
or
jg
or
and
out
sbb
ss
mov
mov
and
pop
jno
mov
jae
inc
pop
jg
cmp
sbb
and
and
popf
mov
pop
sti
mov
add
dec
test
add
jmp
rcl
in
jl
inc
test
xchg
popa
xor
cmpsb
std
inc
sub
out
or
sbbb
xchg
cmpsl
addb
pop
cmp
pop
fnsave
movb
in
fstl
xlat
scas
adc
xchg
push
pushf
addb
add
out
jo
test
test
fsubr
add
aam
jl
add
mov
out
shrl
arpl
sbb
daa
repnz
jns
shrb
testb
movsb
cmp
stos
lret
scas
cmp
pop
cmp
cld
and
xchg
rorb
mov
xlat
xchg
in
scas
ds
lods
sahf
ret
jl
mov
adc
xchg
xchg
sahf
test
xor
jnp
testl
into
out
add
pushf
dec
addr16
jno
cld
cmp
int3
cmp
nop
mov
xchg
fadds
or
xchg
rolb
sub
mov
mov
jns
mov
cli
xchg
insb
ljmp
or
mov
jp
jg
cmp
imul
and
dec
jge
push
mov
cltd
lret
jecxz
dec
outsl
inc
movsb
xorl
out
push
dec
orb
shrb
clc
or
dec
aas
jl
sub
js
aam
rcrb
test
lds
cmp
adc
cmpb
inc
jae
sbb
pushw
jmp
orb
fldenv
movsl
mov
pop
adc
mov
sub
cs
xlat
xchg
sbb
dec
jle
add
clc
adc
loopne
push
test
loopne
cmp
cmpsl
xchg
rorl
xor
lods
fldcw
add
ret
aas
push
int3
push
je
and
cmp
jne
xchg
test
xchg
lret
jb
add
cmp
gs
or
jb
cltd
dec
mov
add
sub
addb
shrb
scas
dec
jns
cmpl
inc
and
lret
rcll
inc
xchg
or
mov
cmp
imul
rcll
insb
xor
icebp
ficoml
js
lahf
imul
outsb
mov
cs
xor
pushf
subb
mov
fisubrs
test
insb
mov
cltd
push
leave
and
insb
mulb
xor
lret
inc
lea
loope
movsl
fcompl
xchg
mov
push
dec
divl
int3
hlt
call
pop
cmp
sub
ja
mov
and
sub
cltd
stc
lret
dec
mov
pushf
testl
lret
cmp
xor
cmp
cmc
in
jb
mov
cs
mov
mov
scas
xchg
add
mov
int
out
push
loop
pusha
add
mov
push
fbstp
aas
comiss
pop
or
inc
mov
sti
jae
jno,pn
fmulp
pushf
mov
jecxz
lcall
mov
jmp
add
hlt
xchg
sbbb
out
es
add
add
das
xor
push
xor
clc
repz
pop
sarb
std
into
add
jp
dec
ret
enter
cwtl
repz
mov
or
jbe
inc
dec
icebp
xchg
ret
jmp
scas
cwtl
jne
lds
xchg
inc
out
ljmp
outsl
je
and
push
int3
mov
shr
push
loop
sti
mov
dec
rcrb
push
out
xchg
xrelease
mov
xor
mov
movsl
std
add
mov
ret
std
out
repz
push
lahf
lods
test
into
or
mov
out
pop
fsts
xlat
push
xchg
push
leave
jb
add
dec
jecxz
ret
lds
lds
enter
test
stos
das
inc
mov
pop
into
shll
adc
aam
outsb
jle
ljmp
shll
lahf
jb
jb
std
push
jns
add
dec
cmp
gs
pusha
push
cmpl
mov
dec
xlat
xchg
popa
popf
mov
jb
iret
cmp
out
setle
xor
rcr
sahf
mov
popa
lret
cmpl
add
aad
xchg
movsl
into
inc
repz
dec
test
dec
dec
or
test
mov
movsb
aas
sub
aam
jg
pushf
jnp
push
fnstcw
xorb
mov
iret
mov
mov
or
jecxz
loop
xchg
inc
lods
sahf
fisubrl
xor
das
imul
bound
cld
mov
outsl
aam
jno
xchg
or
out
ljmp
stc
ret
loopne
mov
aaa
sub
pusha
repz
cmp
add
das
xlat
loopne
ffree
mov
loopne
mov
jb
adc
nop
mov
mov
stc
lods
mov
cmp
jmp
inc
xchg
xchg
ljmp
fdivr
into
mov
aam
cwtl
mov
cli
arpl
arpl
bound
jl
sbb
xchg
in
sub
xor
push
imul
mov
into
popf
jl
push
dec
lahf
push
in
mov
fnstcw
jl
movsl
inc
inc
sbb
and
mov
pop
test
fiaddl
aas
jbe
dec
les
pop
jne
cltd
les
adc
mov
xor
aad
adc
pop
lock
repz
cwtl
stos
xchg
lahf
mov
jno
xchg
jl
push
aaa
gs
push
jle
pop
mov
and
rcr
dec
loope
fsubl
and
mov
mov
sub
mov
adc
in
push
jp
sbb
loope
jne
into
popl
sbb
push
jge
adc
mov
std
sbb
push
and
mov
insl
fwait
out
loop
cltd
jns
sbb
mov
repnz
sbb
insb
imul
mov
scas
dec
push
outsl
pop
sub
mov
xchg
jp
popa
insl
sti
clc
pop
push
movsb
ret
or
pop
mov
mov
scas
mov
mov
push
add
xchg
leave
mov
dec
enter
fcmovnb
mov
mov
in
dec
mov
fsts
ret
sub
loope
and
sbb
mov
xchg
cmp
push
dec
mov
or
mov
xor
into
sti
cmpsb
push
dec
loope
dec
xor
ljmp
jp
ss
mov
pushl
movsl
leave
xchg
mov
out
data16
loopne
jne
out
imul
dec
ja
out
adc
shrl
bound
and
bound
test
cltd
mov
dec
jns
mov
lret
sbb
xor
loop
in
cld
aaa
adc
xor
call
or
repz
mov
or
pusha
in
cmp
daa
jecxz
pop
out
roll
rcrb
icebp
sbb
jg
sbb
fs
xchg
dec
and
mov
and
push
lret
mov
or
aas
sti
mov
mov
jno
jg
pop
je
pop
outsb
fwait
js
jl,pn
fnstcw
cmpb
xchg
pop
lds
pusha
mov
repnz
jge
push
inc
cld
fs
loopne
lcall
test
loop
clc
mov
jecxz
imul
adc
fldl
fdivrl
shrb
adc
jb
shll
mov
push
push
clc
push
test
out
xchg
das
int3
add
test
xchg
data16
imul
out
inc
jno
pop
test
xchg
lock
ret
adc
ja
cmp
xor
or
pop
adc
sbb
xor
nop
push
or
or
addl
and
cmpsb
emms
and
fcomi
mov
mov
or
adc
xchg
push
les
push
and
imul
fs
sub
fwait
inc
lret
sarb
adc
dec
repnz
jmp
shrl
ja
lret
leave
xchg
adc
mov
pop
call
sbb
shl
push
xchg
test
inc
cmc
mov
xlat
push
ret
jae
cld
sbb
xchg
mov
sub
xor
lret
xchg
xor
xchg
aad
ret
pop
or
sub
jl
adc
test
lret
arpl
sub
mov
imul
jg
jb
ljmp
mov
pop
enter
sahf
cmpsl
addr16
je
inc
ret
mov
scas
or
lcall
add
pop
repz
cwtl
jnp
mov
mov
push
cmpw
fstps
mov
arpl
xchg
and
test
and
mov
hlt
add
jecxz
inc
ficoms
ret
lods
es
mov
loop
add
in
bnd
xor
mov
cmc
sbb
adc
movsl
das
popf
negb
negb
stos
xchg
insl
notl
xchg
adc
mov
xor
sub
cmc
cmpl
push
jg
or
inc
jbe
iret
inc
aaa
ret
add
cmp
int
stos
loope
stos
pop
pop
xchg
hlt
fsubl
rorb
ljmp
adc
mov
and
adc
push
bound
jae
outsb
fcmovne
or
push
push
sbb
push
sahf
mov
lock
fwait
call
mov
xchg
fwait
xchg
int3
mov
fsts
das
cwtl
je
cmp
push
movsl
pop
ds
jb
dec
shrl
add
sbb
shlb
ljmp
push
push
and
xlat
mov
dec
and
lahf
and
dec
add
ror
int3
inc
mov
imul
je
add
dec
lods
dec
cmp
pop
sub
adc
and
hlt
push
pop
xchg
lcall
fisubs
and
pop
mov
xchg
test
mov
lock
xor
inc
test
in
mov
or
in
jb
push
dec
sbb
cmc
jnp
inc
xor
lods
cmp
xchg
cmpsb
cli
leave
mov
push
ljmp
mull
jno
orl
ljmp
loop
lock
jge
aam
inc
fadds
pushl
inc
inc
xchg
in
dec
pop
push
nop
loope
push
fs
xchg
sub
scas
mov
xor
cwtl
push
jl
fstpt
les
call
mov
pushf
push
lds
lcall
call
pop
add
das
lret
or
aad
lock
inc
nop
incb
dec
and
mov
jmp
out
lock
into
scas
movsb
in
stos
and
cmp
aaa
loopne
xlat
jmp
pop
adc
insb
inc
aaa
push
adcl
xor
loope
mov
and
push
mov
jnp
and
test
es
push
push
xlat
sbb
fdivrs
xchg
pop
add
subb
xchg
pusha
or
push
xor
lret
loop
jmp
xchg
mov
mov
stos
cltd
mov
rol
push
negl
push
inc
or
inc
or
test
ffreep
imul
push
cmp
add
insb
dec
scas
jns
dec
cltd
mov
out
jbe
jae
pop
xchg
fidivrl
in
in
jae
sbb
in
ljmp
pushf
xor
aam
mov
xchg
cmp
outsl
add
test
rorb
sbb
in
daa
cmp
lret
or
push
mov
stos
arpl
mov
sub
test
pop
cmp
sub
ss
gs
push
es
sub
popf
jp
pop
and
in
cmp
pop
add
push
mov
and
sbb
aam
xchg
mov
popf
adc
cld
arpl
xchg
rolb
or
les
jg
pop
inc
or
sbb
lds
icebp
jns
mov
add
ja
push
std
and
int
add
insb
push
add
mov
mov
fdivr
fldcw
push
sarl
push
lods
push
cs
addr16
sub
pop
sbb
movsl
dec
loope
rcrb
push
jnp
in
mov
fimull
push
bound
sbb
add
xchg
sarl
pop
push
mov
in
mov
xchg
dec
sub
popf
test
mov
inc
mov
xorl
lret
xor
andb
in
mov
jb
ss
jl
push
fdivrl
daa
inc
xchg
xchg
push
ljmp
jle
loop
lret
sub
mov
push
inc
xorl
aas
cmp
pushf
add
and
rcl
sub
push
push
sbb
divb
xchg
cli
xor
mov
out
test
inc
sub
sbb
aad
or
sahf
push
pushf
xorl
in
lds
in
lods
inc
mov
pop
mov
sub
daa
fcoms
sbbb
add
in
cmp
fnstenv
insb
in
andl
sbb
aad
mov
ljmp
daa
fld
cmp
mov
adc
in
and
push
popf
lods
mov
push
lock
cmp
addl
out
push
outsb
dec
cmpsl
outsb
xor
adc
cli
xor
mov
add
cmp
adc
xchg
and
push
jg
xor
cmpsl
pusha
test
lods
out
mov
sub
xchg
fwait
jp
xchg
negb
cmp
sub
push
mov
pusha
or
jl
ss
add
jp
pop
mov
cmp
in
add
push
lahf
out
push
mov
out
out
adc
adc
sub
bound
inc
xchg
xchg
movsb
mov
push
xchg
shl
push
shrw
addb
ljmp
ror
enter
jecxz
ds
loope
mov
and
cwtl
mov
mov
push
mov
adc
adc
push
orb
popf
jb
inc
push
jns
andps
arpl
xlat
andb
subl
cmc
adc
cmp
or
cmpsb
ljmp
mov
lret
call
jp
faddl
addb
aad
pop
leave
push
cli
stc
jae
cs
push
mov
and
jno
adc
sub
bound
imul
sbb
std
push
imul
in
insl
mov
jg
xlat
hlt
pop
mov
cmp
aad
sbb
sbb
lods
mov
insl
outsl
fcoms
fisttps
lock
movsl
or
sub
and
push
popa
mov
sub
inc
ja
pop
jae
imul
xchg
xchg
pop
mov
fwait
inc
fcom
mov
jl
inc
cmp
ret
into
rorb
xchg
je
and
jmp
mov
shll
lods
loopne
in
and
mov
xor
sbbb
testb
sub
and
mov
adc
sbbb
lea
out
insl
pop
addr16
orps
in
aam
push
movsl
push
movsl
adc
inc
decl
stos
std
test
jge
mov
jle
sub
cmc
mov
xor
cmp
inc
sub
pushf
and
dec
pop
gs
xchg
or
rorb
mov
cmp
add
fxtract
push
out
loopne
test
test
jbe
sti
imul
incl
test
jmp
out
test
inc
shl
loope
inc
cmpl
mov
lea
and
sub
or
sbb
adc
bound
ja
add
mov
mov
inc
dec
imul
cli
fs
testl
or
daa
and
lret
ret
inc
and
sub
mov
mov
and
jns
inc
mov
dec
subb
mov
push
mov
hlt
add
lock
mov
rcrl
inc
or
lret
and
mov
cld
sbb
stc
inc
imul
mov
or
and
mov
stc
adc
jmp
push
out
int
loope
je
aad
rcrl
ds
inc
lods
cmp
roll
or
push
xchg
xchg
lahf
inc
mov
and
mov
jo
mov
mov
or
js
sahf
out
xor
int3
push
fnsave
xor
nop
rol
sub
pop
add
inc
ja
cmp
dec
inc
sub
inc
icebp
sub
cltd
mov
or
imul
fiadds
nop
add
data16
cmpsb
std
loopne
mov
jl
imulb
and
pusha
stc
sbb
ja
and
mov
fs
bound
or
xor
lods
jmp
pop
lret
adc
xchg
sar
xlat
mov
mov
out
mov
sbb
lock
mov
imull
xchg
jno
add
add
int3
pop
inc
inc
sbb
je
movsb
mov
mov
cs
je
or
enter
fdivl
adc
xchg
cmp
sbb
jmp
je
or
stc
dec
test
xchg
testl
bound
sti
loopne
jge
and
pop
jg
out
mov
push
xor
push
adc
xchg
inc
jbe
test
test
xchg
jle
addr16
adc
js
stos
int
cmpsl
sbb
sub
mov
mov
mov
mov
push
lds
mov
test
cmpsl
loope
in
ror
mov
aas
shl
mov
push
aaa
sub
icebp
lods
popa
rorb
in
or
rolb
and
sti
loopne
add
lock
test
mov
shrl
dec
pop
push
xchg
jbe
push
cmp
push
loope
and
pop
mov
inc
xorl
rorb
jecxz
test
cmp
mov
adc
test
add
xchg
jmp
dec
je
pop
or
into
sub
xor
push
sti
in
mov
cltd
push
adc
jmp
das
cwtl
in
xchg
lahf
or
aam
mov
add
idivl
lock
ficomps
nop
ficompl
ja
push
cmp
in
les
mov
sub
or
mov
repnz
imul
pop
xor
xor
rcrb
sub
xor
push
sti
xor
inc
xor
mov
scas
icebp
xchg
loop
mov
scas
fadds
mov
and
idivb
lret
xorl
mov
nop
mov
int
cmp
sub
xlat
mov
cmp
lock
adc
inc
pusha
lock
sbb
fwait
test
mov
clc
jb
and
mov
lea
pop
xchg
push
jns
push
xor
push
jle
in
dec
out
scas
jge
jnp
jbe
cmp
pop
loop
dec
stc
int3
das
stc
sub
adc
imul
ljmp
loopne
outsl
pop
leave
jns
mov
or
iret
testb
jb
jle
mov
or
fwait
les
fs
cmp
out
dec
mov
ds
push
cmp
mov
out
mov
sub
pop
mov
jne
push
jp
sahf
sbbl
mov
add
sahf
mov
xchg
fprem
fmull
lods
sub
pop
adc
jg
jno
dec
testl
lods
leave
push
jecxz
movsl
add
jb
push
xor
loop
and
out
das
orb
in
sub
jmp
pop
aaa
cmpsb
cwtl
mov
dec
pop
shll
clc
mov
int3
sbb
lods
int3
dec
fistpl
fwait
out
gs
lcall
mov
fs
insl
loopne
mov
sub
lret
insb
es
scas
lret
jge
shr
into
out
test
in
notb
push
fs
pushl
aaa
rcrl
repz
bnd
arpl
mov
mov
pop
aaa
jmp
test
jb
adc
movb
ja
mov
js
mov
cli
or
adc
std
sti
and
add
les
pop
dec
xor
xlat
jb
mov
mov
sbb
fnstsw
dec
cmp
in
jmp
cmp
ret
mov
pop
ljmp
push
clc
push
dec
imul
xchg
pop
jg
fistpl
outsb
sub
pop
fidivrs
sti
lods
js
cmc
das
sahf
lret
int3
pop
push
push
sbb
testl
jge
jns
popf
ss
inc
jae
sahf
dec
sbb
nop
in
pop
ffreep
in
or
daa
jo
jno
jg
or
insl
jb
jle
dec
fisubs
jnp
pop
pop
std
inc
push
outsb
pop
mov
mov
out
lods
mov
xor
and
dec
fwait
es
inc
cmp
jle
push
or
ljmp
jbe
out
out
es
lcall
sub
jmp
out
js
sti
mov
nop
fldl
ljmp
cmp
andb
imul
popf
xor
adc
adc
jne
push
fisubrs
lret
cmpsl
mov
inc
aad
imul
test
mov
leave
adc
dec
or
rcrl
pusha
imul
rorl
lret
stos
mov
pop
pop
dec
sub
sarl
mov
mov
in
outsl
pop
ficoml
adc
loope
sub
scas
mov
cmp
sub
nop
jno
pop
xorb
movb
push
scas
mov
xchg
mov
jb
test
pop
in
leave
mov
std
cmp
dec
or
repnz
or
rorl
xorb
fs
xchg
hlt
xor
cmp
and
addr16
shlb
scas
ds
cmc
loopne
rorl
test
pop
dec
pop
movsl
inc
pop
mov
aam
adc
xchg
popa
xchg
jno
xchg
dec
adcb
cs
sbb
andl
add
dec
push
stos
cli
push
sti
leave
std
bound
jge
and
xchg
and
cmp
mul
jne
repnz
adc
adc
jl
cmp
cmpsl
les
aaa
and
push
adc
in
out
mov
jae
fdivl
mov
add
inc
push
mov
pop
icebp
insb
cmpsb
aas
pop
and
loopne
mov
or
idivl
lods
in
ret
scas
pcmpgtb
shrl
and
fcmove
mov
sub
sbb
clc
addb
lods
cld
lock
mov
pop
pusha
xor
lds
xlat
xchg
xchg
jae
inc
jne
sub
fiadds
imul
xorb
and
bswap
sub
into
hlt
inc
jae
ds
mov
shrl
xchg
mov
icebp
jno
in
std
dec
dec
pop
fildl
pop
rol
sbb
jae
imul
int3
cld
test
jae
sub
or
and
je
cmp
pop
test
out
fistl
aas
push
lea
mov
add
adc
lcall
insl
xchg
push
loope
mov
loopne
cmp
pushf
mov
add
and
lods
cmpl
mov
jmp
sub
cli
test
push
xchg
fisubl
roll
bound
mov
push
pushf
lods
sti
jo
push
pop
pop
jns
imul
daa
mov
gs
pop
cmc
sahf
push
testl
xchg
pop
sub
inc
xchg
lret
in
or
sub
in
mov
insb
ret
add
sbb
jecxz
arpl
enter
ss
pop
sbb
pop
jecxz
dec
and
adcb
push
cmp
pop
mov
ficompl
fldcw
test
lret
daa
test
rcrb
xchg
mov
pushl
out
dec
adc
pop
stc
dec
mov
cmp
leave
int
jbe
lcall
imul
sub
xchg
xor
test
rorb
orb
xchg
or
call
mov
inc
sbbl
in
add
lods
push
mov
cmp
cwtl
pop
cltd
lods
insl
jns
repz
dec
js
push
rorb
loopne
mov
scas
imul
push
sarl
test
dec
sub
adc
in
jl
lret
mov
pop
shrl
rolb
mov
sbb
aad
shlb
dec
cltd
sub
inc
cmp
inc
mov
test
orl
cwtl
mov
cmpl
outsl
mov
bound
enter
mov
and
sbb
dec
dec
inc
insb
bound
jmp
inc
out
xchg
fcmovnb
cwtl
sahf
mov
cmpb
iret
dec
jl
dec
mov
mov
add
fldenv
fsubl
iret
sub
cld
mov
adc
and
cwtl
mov
in
lds
sbb
mov
je
addb
mov
inc
adc
pop
std
ss
out
or
push
sub
mov
adc
clc
push
mov
mov
gs
fwait
aad
test
xchg
scas
iret
cmp
xor
nop
cmpl
push
out
out
or
and
js
and
popa
cld
aad
lock
ffree
aaa
pop
push
addr16
add
xor
push
cwtl
out
sbb
in
imul
dec
sti
sti
xor
xchg
mov
ja
mov
push
xor
arpl
pop
movsb
and
out
cltd
or
push
mov
mov
xor
aad
or
inc
aam
ret
sbb
jp
or
dec
inc
mov
xlat
inc
pop
scas
push
cmp
sub
and
loopne
mov
clc
xchg
mov
lret
add
sub
scas
xchg
fbstp
xor
cs
push
fsubrp
pop
addr16
fistps
jbe
shlb
cmp
xchg
mov
pop
enter
int3
es
jg
push
lods
movsl
xchg
cmpsb
mov
or
imul
sbb
in
add
test
push
adc
add
push
xlat
push
xor
rcrb
pop
hlt
mov
mov
mov
aad
add
mov
or
into
jecxz
pusha
mov
pop
sub
cli
clc
pushf
fwait
sub
aaa
mov
popa
jl
and
aad
cs
adc
or
inc
cmpsb
push
mov
inc
scas
dec
and
pop
out
rorl
lods
sbb
clc
mov
xor
mov
or
popf
add
lahf
mov
sbb
inc
sub
js
jnp
lret
mov
test
cmp
ss
stos
sbb
lods
pop
icebp
rcrb
loope
lret
xchg
out
cltd
out
nop
pop
rclb
rclb
pop
cld
push
daa
push
test
stos
cmp
xor
push
mov
dec
mov
add
lds
lret
cmc
pop
inc
and
push
xor
pushw
inc
mov
fidivrs
into
cmp
xor
sbb
in
push
mov
js
inc
cmpl
movsl
cmc
out
mov
sbb
mov
xchg
push
and
xchg
insl
ljmp
pop
add
aas
sub
jb
and
js
mov
mov
push
mov
and
popa
push
cmpb
fs
arpl
or
jmp
mov
dec
mov
or
shr
sti
jg
fbstp
xchg
nop
push
inc
xor
mov
call
mov
cmpsb
dec
enter
mov
mov
sub
lods
andl
jl
add
ds
or
push
and
add
push
pop
jmp
push
mov
call
shrl
loope
mov
mov
addl
jbe
jle
lea
xchg
pushf
xor
mov
mov
xchg
out
pop
pop
sahf
pop
lods
xor
or
push
adc
in
cmc
mov
mov
lahf
cwtl
insb
lods
aad
outsl
mov
mov
daa
mov
or
inc
mov
mov
addr16
xor
push
inc
orb
xor
sti
fucomp
movsl
ds
sub
js
push
lods
cld
fdivs
mov
movsl
pop
xchg
ret
or
jns
js
gs
mov
repz
test
sub
popa
jae
insb
in
arpl
out
mov
cmc
pop
fs
nop
popf
test
inc
lret
or
mov
shl
cmpb
leave
outsb
ss
insl
or
pop
jb
fmulp
mov
jne
rorl
neg
arpl
mov
jg
divb
push
adc
rcrl
lock
movsb
ret
dec
xor
icebp
add
daa
enter
jne
jnp
jae
rolb
outsb
test
xchg
inc
movsb
jbe
call
lahf
imul
jge
inc
pop
ja
lods
push
xor
out
stos
aam
pop
or
xrelease
push
or
lea
test
fnstenv
add
jnp
ret
cmpsl
push
add
jbe
add
int
jbe
and
shll
sub
add
mov
mov
xor
inc
inc
mov
jmp
or
adc
mov
sbb
divb
js
inc
sahf
add
shl
jmp
dec
mov
jmp
xchg
test
pusha
bound
mov
ljmp
test
xor
inc
stc
scas
ja
inc
adc
inc
rorb
xor
push
testl
sub
pop
das
adc
push
jne
pop
jae
mov
xor
lcall
sti
jbe
mov
push
repnz
sti
testl
mov
xchg
mov
adc
lods
lcall
or
aas
pop
cmpsl
xchg
es
pusha
add
inc
mov
aam
cld
rolb
dec
push
mov
sbb
xchg
mov
mov
pop
gs
mov
add
std
jae
xor
gs
movsl
and
pop
xchg
inc
hlt
loopne
adc
adc
nop
push
stos
cmp
xorl
pusha
into
fistpl
xor
clc
xchg
mov
test
sbb
loope
mov
mov
les
pop
rol
cmpsl
inc
shll
mov
cmpsb
ffreep
pop
loop
xor
ljmp
push
pop
loope
mov
adc
loopne
xchg
bnd
repnz
mov
push
pop
imul
ficoml
inc
ss
push
push
into
mov
jbe
mov
cmp
add
jge
or
das
inc
pop
jmp
xor
fsts
mov
enter
jbe
int3
mov
pusha
cli
sahf
pop
xchg
dec
push
out
mov
je
xchg
repnz
or
sub
imul
gs
xchg
xchg
lods
mov
test
aad
jge
mov
icebp
ja
lods
dec
fs
dec
push
in
sub
subb
sbb
cmpsl
dec
subb
mov
in
rcll
pop
and
imul
in
jno
rcl
das
dec
mov
xchg
mov
sbb
pop
insb
pop
jmp
fcompl
mov
xor
ds
dec
aam
jg
aas
in
push
lds
adc
xor
out
pop
and
mov
wbinvd
push
pusha
cli
dec
mov
xchg
push
lcall
popa
pushf
cmp
mov
sub
cmpsl
aaa
xchg
mov
insl
jmp
sbb
pop
ror
rolb
je
adc
sbb
add
push
pop
lock
xor
sbb
adc
inc
mov
loope,pn
gs
pop
repz
jb
js
ljmp
das
xchg
fwait
shl
shlb
mov
push
xlat
push
or
subl
mov
mov
sub
xchg
or
cmp
cmp
aad
sub
and
js
jns
testl
dec
fldcw
ljmp
sar
rcr
mov
and
jg
push
pop
inc
pop
in
scas
sbb
ss
sbb
jno
jnp
ds
hlt
rcrl
xchg
sub
xchg
out
xchg
cli
pop
pop
push
sahf
mov
scas
ljmp
fisttps
xchg
gs
inc
movl
in
mov
and
test
mov
fdivs
aad
jmp
insb
lcall
xlat
jmp
arpl
push
inc
dec
leave
insl
fwait
push
pop
bound
or
pushf
and
mov
or
and
pop
es
sbb
int
dec
and
adc
out
aas
cltd
cmpsl
mov
cmovns
xchg
fidivs
test
pop
inc
cltd
sbb
push
mov
loope
add
nop
shl
jg
inc
push
and
int3
leave
pop
mov
test
nop
test
and
in
push
xchg
enter
pop
mov
inc
sub
pop
sub
in
dec
lret
lods
inc
aas
gs
jne
ja
inc
push
push
rorb
bound
aam
in
rcrb
jg
xchg
js
imul
jg
push
push
scas
cwtl
test
mov
inc
test
jle
daa
lret
sti
mov
sbb
cmp
cmp
imul
call
aad
nop
in
hlt
pop
sbb
mov
je
sub
call
mov
in
aaa
pop
cmp
dec
dec
cs
clc
rcrb
insl
mov
das
clc
shrb
xchg
pop
mov
mov
add
mov
rcll
mov
movsb
jae
jmp
jle
xor
arpl
dec
xlat
jnp
inc
lcall
adc
mov
xchg
lods
sti
and
xchg
scas
rorl
pop
push
jp
jae
cmp
dec
inc
jge
push
jns
xchg
nop
lea
adc
sub
mov
or
stc
xor
daa
xchg
scas
xchg
mov
dec
or
push
adc
push
cmpsb
pusha
xor
test
lods
push
xchg
mov
js
sti
imul
add
in
lea
out
inc
sar
sbb
cmp
cmpsl
popf
mov
sub
insl
adc
sahf
fs
push
cwtl
int
out
lds
outsb
cmc
mov
repnz
in
and
push
repz
push
test
pop
dec
pushf
cli
shrl
inc
popa
xchg
xor
divb
jp
mov
mov
mov
mov
mov
mov
insb
faddl
inc
push
and
int3
cmp
and
xor
or
mov
jo
xchg
inc
xchg
test
pop
mov
dec
ja
lds
adc
push
scas
jge
lret
mov
roll
sbb
fbstp
ret
inc
jge
push
dec
push
jbe
adc
daa
pop
and
sub
push
rep
out
cli
dec
jns
mov
add
adc
pop
cmp
popa
push
test
sti
mov
cmpsb
mov
dec
dec
cld
add
adc
outsb
mov
jb
push
hlt
cld
into
test
test
sbb
movsl
loop
cmp
pop
fs
dec
jecxz
adc
insb
fisubrl
mov
in
xlat
mov
push
jo
les
sbb
mov
xor
outsl
pop
sbb
sub
ds
xchg
test
fcomps
cltd
sub
cmp
push
pop
pop
xor
xchg
ljmp
xchg
fwait
jb
jl
mov
adc
in
push
sub
mov
inc
inc
adcl
dec
dec
in
movl
inc
jmp
add
jb
rolb
xchg
inc
mov
hlt
lds
sub
or
or
shrl
repz
bound
xor
lret
pushf
xchg
out
icebp
cwtl
xlat
jl
jecxz
jp
lret
int
sub
std
add
xor
jbe
add
std
fsubl
xor
lcall
jp
out
mov
jb
adcl
lahf
pop
cmp
out
cs
and
mov
in
xlat
push
sbb
pop
mov
dec
push
sbb
icebp
mov
cmp
pusha
iret
sbbb
xchg
cs
jp
cmp
cwtl
sbb
cmp
add
out
sub
mov
pushf
mov
jge
cs
mov
dec
mov
pop
std
popf
adc
push
sbb
pop
xchg
scas
into
or
pop
xor
cmpsl
das
out
mov
insl
jns
mov
mov
xchg
cmp
mov
pop
mov
mov
nop
mov
repnz
inc
push
pop
push
ret
out
subl
jge
aad
xchg
add
das
sub
mov
out
jns
adc
cmpsl
pmaxub
imul
mov
adc
call
jnp
sbb
cmpsl
push
or
sbb
stos
pop
pop
shrb
stos
rol
aad
and
js
daa
inc
lret
pop
pop
push
mov
lods
leave
scas
dec
cmp
xor
ljmp
jl
mov
fisttpll
shl
movsb
inc
mov
fs
fsubl
lret
stc
jecxz
lahf
icebp
cmp
xor
popa
cmp
mov
lahf
mov
in
insb
adc
dec
add
jge
popa
push
std
pop
push
out
mov
fistpl
push
push
mov
or
lods
cli
xchg
iret
mov
fs
inc
mov
push
idivl
mov
test
pop
and
pushf
jecxz
jno
xor
iret
mov
xchg
add
mov
cmp
xor
idiv
jae
mov
adcb
dec
adc
sbb
dec
push
ficoml
fldcw
pop
bound
push
xchg
cmc
inc
sub
mov
sbb
test
push
jmp
sub
cmc
dec
cmp
shrb
in
nop
sub
cmp
mov
hlt
nop
cmp
add
out
cmp
fstpt
jecxz
lods
ljmp
and
out
fucomip
mov
or
stos
lahf
pop
dec
push
loope
ret
xchg
ret
mov
mov
jmp
movsb
xor
mov
or
add
xor
loope
jl
cmpl
fs
stc
xchg
fcompl
shrl
pusha
insl
mov
fs
dec
push
pop
bound
mov
and
jg
js
lods
and
xor
mov
lock
cmpb
imul
shl
add
mov
pushf
cmpsb
cmp
mov
cmp
pop
or
cmpsb
push
or
cmc
sub
sub
jg
xchg
popf
dec
sbb
cmp
pop
and
xchg
push
outsb
cwtl
or
cmpsl
js
rep
adc
mov
jo
sbb
cmp
sbbl
cld
mov
dec
out
adc
pop
incb
test
xchg
shll
imulb
xchg
fmuls
lods
lret
cmp
ds
sub
out
inc
cli
lcall
inc
jno
xor
add
sbb
mov
dec
pop
sti
inc
or
or
mov
xor
lods
jmp
push
jmp
inc
daa
dec
loop
add
jbe
mov
clc
cmp
loope
in
cwtl
mov
das
push
or
ret
inc
cwtl
cmp
std
mov
sbb
ljmp
jmp
xor
or
in
popf
jnp
subl
xchg
lock
sbb
mov
shr
sub
lret
fwait
mov
dec
cmc
jp
xchg
xorl
daa
inc
stc
or
clc
lahf
popa
and
cmp
add
in
jnp
test
lds
loopne
mov
dec
dec
mov
push
subb
pushf
ja
or
push
fs
lods
test
push
in
imul
fidivl
lods
ret
pop
inc
cmc
ret
inc
test
mov
mov
insl
mov
dec
mov
fstpl
jbe
es
imul
popf
add
insb
add
nop
jge
imulb
mov
bound
lret
cwtl
aad
xor
test
mov
movsl
inc
nop
cmp
sub
xchg
jl
push
int3
or
icebp
mov
aam
out
stc
scas
rclb
roll
mov
scas
adc
push
add
dec
pop
jmp
insb
mov
cld
je
mov
or
scas
pop
sub
sarb
mov
fists
and
dec
pop
ljmp
cwtl
or
insl
mov
lcall
mov
loop
in
xchg
sbb
popa
repz
cmp
cli
ret
push
lods
pop
push
in
std
xchg
int
aaa
fwait
xchg
xor
jmp
aad
sub
mull
and
mov
in
test
xchg
popf
gs
dec
cld
dec
fucom
mov
int
lock
es
xchg
loope
add
push
push
lods
cs
jnp
fs
mov
ret
and
jp
xor
repnz
jmp
fbld
fstpt
mov
mov
lret
pushf
inc
std
cmpsb
push
scas
bound
mov
and
hlt
jmp
add
imul
adc
jo,pt
jge
mov
pop
add
jbe
lods
push
roll
test
xchg
dec
xor
lock
add
and
xlat
jno
inc
mov
jnp
inc
rcrb
push
add
pop
bnd
jp
xchg
sbb
outsb
test
jb
jl
lds
scas
cmp
cmp
or
std
js
pop
push
je
std
sub
les
mov
cmp
cwtl
push
fldl2t
sbb
loopne
lods
enter
fs
xchg
cmp
lods
and
sahf
addr16
mov
push
mov
out
pop
lds
jge
add
sbbb
cli
jb
pop
jo
mov
scas
push
flds
sbb
pop
push
into
iret
rol
pop
test
into
cmpsb
shrl
sbb
mov
fnstenv
test
pop
xor
mov
iret
ret
out
dec
sub
inc
jp
insb
dec
scas
sbb
inc
pop
ret
inc
jno
pop
sub
xchg
popa
push
lcall
aam
cmp
cmp
dec
sbb
les
fmul
adc
hlt
es
and
popf
inc
in
or
jno
sub
orl
ret
cmp
mov
add
xchg
or
enter
jg
xlat
in
cmp
push
push
cmp
mov
adc
cmp
out
cmp
cmp
cmp
xorl
or
mov
pop
hlt
xlat
pop
push
fwait
inc
rcl
dec
push
insb
or
push
mov
jmp
push
or
sbb
cmp
shll
push
pop
mov
shrb
and
and
push
push
push
dec
sub
push
sbbl
data16
push
add
push
push
pop
std
loop
movsb
outsb
test
adc
push
lods
int3
pop
or
cltd
push
popa
xchg
sbb
clc
dec
pop
inc
adc
sub
jmp
adcb
outsl
inc
shlb
xchg
inc
hlt
push
dec
xchg
mov
cmp
xchg
sbb
sbb
inc
cmpsl
push
addl
sbb
lcall
pop
iret
or
mov
dec
and
inc
in
insl
sbb
fldt
fcompl
je
mov
je
or
sub
push
js
icebp
push
lret
neg
pop
fidivs
xchg
stos
movsl
push
xor
imul
movsb
addl
sbb
ss
ss
add
push
in
rcrb
mov
jmp
mov
nop
xor
daa
roll
cmpsl
fists
add
pop
lods
inc
pop
add
jbe
or
sub
ret
cmp
fnstenv
lcall
scas
out
inc
xor
test
dec
mov
aad
loop
loope
inc
or
mov
cmc
cmp
iret
and
mov
xchg
dec
scas
xchg
mov
pop
jmp
jge
xchg
lret
jp
sub
aas
insb
lret
fisubrl
in
mov
daa
jae
mov
fs
and
jge
jecxz
rclb
das
aaa
out
fidivrl
dec
sub
fmull
mov
mov
mov
stos
adc
mov
sahf
mov
out
fmuls
rorl
pop
sbb
bound
mov
daa
and
popa
xor
push
in
pop
int3
sbb
or
push
mov
insb
hlt
push
xchg
popl
and
mov
cli
pop
sbb
mov
jle
mov
push
dec
push
les
out
ja
dec
or
shlb
call
xor
and
mov
cld
sbb
loop
dec
add
dec
test
dec
jo
inc
pop
cmp
js
shll
out
std
xor
jmp
testb
dec
insl
outsl
inc
mov
xor
pop
pop
and
push
xor
push
sbb
or
sub
mov
lock
or
xlat
xor
push
ss
push
shlb
push
cmc
ret
jge
cmp
popa
adc
imul
dec
dec
sbb
xor
out
or
push
fldt
ucomiss
mov
or
and
cld
cmp
dec
clc
push
xchg
sbb
or
shll
sbb
int3
pushf
pushf
xchg
inc
or
and
sub
jp
push
shl
dec
add
fmull
inc
mov
dec
dec
dec
xor
ret
testl
and
loop
lods
adc
inc
or
ss
fsubr
mov
mov
push
mov
ffree
gs
fsubrl
jp
int
or
mov
cmpsb
sbb
mov
jno
shrb
jp
cmpsl
andl
jg
adc
ds
sub
cmpsb
stos
lret
pusha
fcoml
fmull
test
test
pushf
mov
into
fistpll
pop
pop
mov
popf
dec
in
shlb
cmp
bound
fstps
inc
sbb
call
adc
sbb
jbe
add
inc
adc
mov
xor
out
jnp
mov
gs
movsb
xchg
xor
push
pusha
push
cmp
movsb
fwait
scas
and
or
pop
xor
sbb
and
daa
imul
dec
imul
enter
outsl
and
mulb
rcrb
xchg
test
mov
fldl
mov
push
call
mov
sub
lcall
jl
out
mov
jo
mov
mov
jno
mov
ljmp
ds
adc
jp
mov
jmp
jnp
adc
imul
sbb
lds
decl
out
sti
rcl
add
sarb
jne
adcb
and
scas
test
je
mov
sub
test
dec
flds
push
mov
xchg
mov
js
or
outsb
test
divl
dec
shll
outsb
pop
les
movsl
aas
inc
mov
sub
fildl
jp
idiv
je
mov
lret
sub
mov
test
out
or
inc
daa
jb
lock
insl
pop
mov
jo
jb
testl
and
outsb
icebp
jle
or
cltd
mov
lds
xchg
xor
jbe
dec
dec
jno
in
jl
add
sbbl
lret
dec
ret
shl
sub
arpl
scas
std
mov
jae
inc
jb
push
lahf
and
or
xchg
sbb
fs
mov
in
mov
sti
cmpsl
cmp
jmp
es
cmpsl
xor
adc
mov
test
popa
xchg
push
gs
inc
pop
push
lock
and
sbb
jb
adc
les
xor
push
divl
pop
add
icebp
jne
adc
cli
dec
jp
xchg
inc
call
addb
lods
or
dec
dec
imul
pop
mov
repnz
adc
aaa
mov
mov
mov
xchg
xor
xor
in
les
jge
lods
xor
pop
shl
push
and
pop
cmpsb
negl
mov
mov
fsubr
fwait
jg
std
les
add
cmpsb
ljmp
pop
jae
add
ds
rcrb
pop
xchg
push
cs
psubusw
dec
pop
push
xchg
popa
lret
iret
fimuls
dec
xchg
jae
je
xor
sbb
adc
xchg
or
test
pusha
and
cld
or
sub
xor
dec
and
iret
je
lds
or
inc
and
out
cmp
or
fsts
sub
ret
test
shlb
cmc
lock
cmp
fisubl
push
xchg
push
pop
cmovb
cmp
xchg
imul
mov
mov
testb
or
dec
movsl
jae
cmp
jl
mov
cmp
hlt
inc
xchg
fsub
mov
cmp
lret
daa
xchg
push
pop
jno
gs
jno
scas
loop
jp
xor
mov
mov
jne
fisubs
repnz
mov
loope
addl
or
mov
mov
sarb
cs
pusha
pop
rcll
shrb
push
adc
jno
push
icebp
pushaw
loope
xor
mov
pop
das
loope
pop
xchg
in
mov
aaa
pusha
jmp
jnp
stos
popf
push
out
jl
adc
fs
ret
dec
xchg
mov
lods
xor
mov
cltd
neg
pushf
xor
inc
ret
icebp
xor
ljmp
push
mov
outsl
xchg
mov
fsub
aam
jmp
scas
and
outsl
cmpsl
lods
sub
xor
pop
sub
insl
fnstenv
out
scas
lretw
popf
push
adc
daa
mov
rcr
fistpl
mov
hlt
and
or
gs
push
or
jbe
stc
call
jmp
addr16
call
clc
outsb
xchg
in
unpcklps
dec
sahf
mov
lret
jbe
daa
js
lods
sub
loopne
pushf
jnp
inc
out
mov
pop
push
popf
or
dec
repz
mov
push
flds
jo
insb
xchg
lods
mov
cmp
adc
dec
cmc
dec
add
dec
push
mov
xor
xor
lret
jg
enter
xor
icebp
mov
mov
shrl
shrb
sbb
sbb
hlt
cmp
cmp
iret
test
cltd
xor
movsl
xorb
inc
adc
mov
xchg
sub
xchg
ss
push
sti
ss
lret
jle
std
push
and
inc
xchg
shl
pop
and
add
pop
jle
cs
loop
es
aad
nop
push
push
lahf
stc
or
sbb
mov
xlat
jp
pop
fstpl
add
loopne
dec
sub
sbb
mov
cmpsb
cwtl
notrack
fnstcw
or
mov
pop
push
push
lcall
mov
and
adc
les
lea
popa
cwtl
fwait
je
sbb
scas
addl
xorb
cwtl
icebp
sub
inc
xchg
cmp
and
or
jg
aam
loopne
subb
pop
xlat
cmpsb
lock
cmpsl
dec
vpsllw
pop
and
jo
aas
sub
imul
xchg
out
pop
mov
and
cmp
or
arpl
jnp
mov
jp
push
pop
xchg
add
fmul
sub
inc
pop
xor
cmpsb
lods
and
lret
sub
inc
jle
pop
notl
lahf
test
xor
sbb
jg
xlat
fldenv
mov
cltd
xchg
mov
jl
hlt
inc
sbb
or
fsubs
lcall
push
mov
push
add
aas
aad
int3
pop
push
mov
mov
or
test
jmp
pop
inc
test
add
xor
xor
movsb
xchg
arpl
iret
inc
cmpsb
xchg
sti
cli
fisubrl
push
dec
jnp
jae
in
push
lahf
sahf
adc
xor
mov
fimull
pop
push
mov
cmp
mov
fistpl
out
cld
lock
iret
mov
or
incb
dec
jb
loope
push
mov
test
fdivl
cld
jle
sbb
xor
test
lea
idiv
jg
into
xor
adc
addl
mov
pop
test
mov
and
inc
ljmp
or
cmpsb
daa
movsb
dec
push
cmpsb
notb
inc
push
and
add
sub
std
movsl
iret
cmpsb
lods
jns
adc
jb
orl
js
add
inc
push
jns
push
lret
adcl
xchg
adc
or
lea
mov
pop
sub
jb
ret
or
int3
in
dec
mov
outsb
data16
mov
jae
jnp
pop
iret
fnstcw
push
pop
push
mov
test
jns
pop
or
add
stos
dec
in
stos
push
dec
or
jne
fistpl
nop
mov
test
js
into
and
and
lock
mov
jb
movb
and
insl
lcall
sar
add
cmpb
cmp
sbb
cli
and
dec
fwait
xlat
aaa
syscall
les
rcl
outsb
arpl
fstpl
xor
jbe
push
mov
and
ljmp
push
mov
dec
cmp
add
pop
subl
gs
add
in
push
and
xchg
out
dec
xor
sbb
jb
incl
xchg
and
fmul
divb
enter
loopne
pop
pop
mov
and
xor
into
mov
inc
mov
movsl
mov
outsb
xor
jmp
mov
inc
out
xchg
fmuls
std
mov
dec
les
dec
subl
movsl
lret
insb
push
sbbb
js
or
push
mov
xlat
pop
ret
dec
enter
cmpps
sub
pop
mov
loope
pop
push
dec
leave
or
jnp
sub
repz
mov
or
mov
jge
cmp
popa
hlt
js
orl
test
sbb
mov
stos
cmp
int3
pop
sub
jge
push
fiadds
xor
lods
pop
jmp
cs
or
lock
enter
fidivrl
jae
or
nop
lea
mov
pop
adc
push
call
sub
fs
dec
xchg
and
inc
add
js
je
dec
xor
add
or
imul
mov
jmp
push
jmp
push
jg
pop
mov
jmp
mov
ss
mov
xor
mov
add
or
xor
jecxz
sbb
out
pop
cs
adc
outsb
push
and
cli
mov
and
dec
inc
mov
add
loopne,pt
ror
or
add
je
mov
xor
jo
pop
cmc
add
ret
mov
push
repz
sub
rclb
and
arpl
and
dec
pop
push
movsb
movaps
movsb
sub
out
testl
inc
dec
mov
ds
cmp
mov
mov
push
mov
shll
mov
add
inc
int
insl
pop
and
add
cmp
xchg
push
clc
adc
xchg
add
insl
ss
push
inc
xchg
pop
stc
adc
aam
and
push
pop
push
inc
subb
cmp
cmc
int
addl
adc
add
push
cltd
imul
fdivs
mov
inc
or
jge
test
lock
and
dec
xor
ds
and
adcb
mov
test
dec
sub
push
cmp
jge
mov
pslld
mov
mov
dec
jmp
aam
aas
fcomp
xchg
push
xlat
xor
ljmp
popf
sbb
xor
lds
repnz
xchg
jmp
and
or
aas
lret
ja
arpl
pop
testl
mov
or
sti
cmp
xchg
aas
lods
je
mov
jmp
into
mov
sbb
lret
add
mov
das
push
inc
lods
xor
sbb
xchg
sti
sarb
mov
or
adc
repnz
inc
adc
add
ret
xor
xor
orb
andb
jg
xor
mov
mov
cmp
aas
sbbb
mov
dec
mov
push
xor
mov
pop
and
cmp
sbb
and
adcb
cwtl
sub
mov
aam
mov
iret
scas
and
hlt
jns
mov
mov
mov
cmpb
jmp
lods
les
js
iret
lods
mov
xor
xchg
lods
pop
fnstsw
fs
xor
mov
cmpsl
repnz
add
ja
sbb
adc
add
or
inc
mov
push
push
imul
and
jno
mov
or
pushf
and
xor
mov
push
in
out
data16
xchg
sbb
mov
les
pop
xchg
lds
loope
sub
jae
cmpsl
sub
nop
iret
pop
aam
xor
lcall
push
in
ss
or
pop
mov
in
inc
adc
sahf
pop
jle
push
aam
jo
jne
push
ds
xor
dec
xor
mov
outsb
cltd
pop
test
fnstcw
dec
mov
data16
xor
test
cmp
cmp
mov
cld
sub
mov
jge
mov
jo
pop
cmp
lods
mov
fimull
cmc
sbb
das
aam
push
gs
add
shrb
jmp
inc
sbb
add
jno
out
sbb
sarl
dec
push
jle
int3
cltd
mov
dec
mov
mov
imul
mov
xor
out
mov
pop
in
sub
notl
filds
fwait
lcall
out
jne
mov
push
mov
jecxz
leave
mov
movsl
cmp
mov
dec
mov
test
dec
popf
sbb
and
fsubs
dec
and
lahf
pushf
and
es
in
sub
gs
or
iret
mov
dec
sub
adc
out
mov
in
sti
push
add
and
pop
inc
pusha
dec
dec
ljmp
movsb
sub
xchg
les
cli
sub
lret
js
mov
lahf
fs
pop
sub
and
push
xchg
fcoml
cmc
int3
push
xchg
jne
es
imulb
clc
push
inc
xlat
inc
mov
out
pop
pop
jnp
cmpsl
xchg
arpl
pop
bound
in
jno
aam
rcrb
jg
pop
dec
cld
jae
iret
mov
xlat
mov
mov
fwait
xchg
mov
push
sub
add
movsb
or
push
aaa
xchg
lret
xor
add
out
stos
call
adc
icebp
cmp
nop
movsl
or
ficomps
adc
hlt
decb
xor
fcomps
mov
mov
mov
mov
push
lock
cmc
lods
push
xchg
xor
orb
cmp
lods
stos
cmp
mov
ret
and
in
ja
imul
pop
in
out
and
mov
and
in
mov
jb
mov
pop
jbe
xor
and
sub
popf
sub
adc
mov
or
pusha
pop
mov
iret
ljmp
in
inc
fstpt
clc
cmp
rcrl
jns
pop
pop
mov
cmp
cmp
je
bnd
idivl
xor
mov
inc
jg
inc
adc
cmp
stos
sub
inc
xor
loopne
addr16
iret
ja
fcmovnu
movsb
jl
pop
and
dec
and
dec
xchg
nop
jmp
stos
iret
adc
dec
cmc
outsb
out
xchg
stos
push
pop
push
push
test
shll
mov
fsubrl
out
cmp
jecxz
jl
mov
cmp
stos
stc
js
enter
icebp
rcrb
inc
dec
and
and
sub
xor
cmp
pop
and
mov
push
incl
pop
push
cmp
adc
pop
add
inc
mov
outsl
lret
call
shlb
jns
xor
test
jae
and
test
jne
fistl
jae
dec
dec
js
mov
lea
xor
arpl
jnp
xchg
shrb
scas
mov
loop
sbb
insl
lret
lds
in
mov
xor
dec
xor
bound
inc
js
push
stc
and
pop
cmpl
lcall
loopne
sub
shl
xor
lods
lahf
fiaddl
andl
ret
push
test
outsl
adc
int3
jne
scas
aam
adc
sub
sbb
aaa
icebp
mov
mov
mov
inc
adc
aaa
in
aam
jp
push
pop
fnstsw
shll
lahf
jle
into
push
or
and
push
and
xor
or
inc
pop
mov
aas
fcompl
sub
bound
or
call
mov
fnstcw
xchg
inc
add
sbb
xor
int3
movsl
jbe
pop
inc
notl
cmp
or
mov
xrelease
jne
pop
les
xchg
jmp
push
test
stos
and
pop
dec
push
jecxz
add
sbb
imul
push
or
and
xchg
ljmp
mov
test
stos
and
fisubrl
push
and
ret
inc
xor
les
xchg
jb
stos
and
test
push
dec
daa
jmp
and
cmpsb
stos
and
jbe
pop
fucomip
cli
icebp
in
out
in
add
fs
adc
xchg
lret
daa
nop
cli
adc
outsb
xlat
mov
mov
into
jbe
mov
sbb
mov
and
pop
insb
loope
inc
das
ficoms
jbe
dec
or
outsl
shlb
rcll
enter
fistps
jl
outsb
sar
fstl
in
loopne
pop
mov
adc
mov
xchg
mov
gs
mov
pop
jmp
cmc
rcrl
sbb
add
in
out
jne
daa
adc
stos
scas
hlt
arpl
lock
test
movsb
dec
jnp
adc
test
ja
ds
mov
addr16
mov
incb
rcrl
lea
push
xor
inc
mov
repz
sbb
pop
cmp
and
lret
or
and
lea
or
mov
pop
xlat
cli
ljmp
roll
lock
mov
enter
in
jmp
scas
add
fsub
aam
adc
adc
mov
fnstenv
push
ds
add
xchg
mov
ds
aad
or
leave
cmc
push
mov
clc
mov
out
insb
mov
sub
repz
xchg
and
pop
cli
test
jnp
or
sbb
xchg
mov
or
mov
cmp
push
js
int
loopne
dec
out
sub
sahf
leave
leave
push
push
add
pop
psubusb
mov
inc
pop
scas
pop
in
and
mov
push
mov
cld
inc
cmp
jno
divb
sarb
or
test
push
mov
xchg
add
test
fistpll
inc
pop
mov
cmpsb
aaa
lahf
xor
mov
loope
and
or
and
dec
repz
addr16
idivl
nop
repnz
mov
jns
adc
nop
lcall
adc
test
sbb
dec
push
ds
lcall
pop
mov
fisttpl
mov
scas
adc
jno
push
and
sahf
cmp
dec
pusha
xor
imul
das
ljmp
mov
sub
out
adc
call
scas
fimull
sbb
mov
stc
daa
adc
jle
mov
fcoms
mov
sub
pop
data16
dec
dec
fistps
add
cmpsb
subb
xor
repz
data16
outsb
lahf
push
das
iret
jmp
js
bound
jno
xchg
enter
push
xor
mov
int
or
sub
and
xor
push
jle
mov
xchg
dec
mov
stos
data16
insl
das
scas
jb
push
mov
daa
mov
notl
inc
push
push
pushf
sub
das
hlt
add
repz
sub
std
lods
adc
mov
jo
call
mov
push
xchg
cld
pop
mov
std
in
or
pushl
adc
idivl
ljmp
and
push
clc
push
or
fxch
jns
push
push
pop
test
xor
pop
or
pop
insl
std
in
and
shl
dec
cltd
jae
data16
xchg
sbb
push
jns
test
adc
test
dec
cmp
sahf
lahf
rclb
xchg
jg
nop
add
std
mov
jnp
pusha
fidivs
hlt
mov
test
sbb
out
dec
pushf
int3
mov
pop
mov
daa
mov
icebp
add
scas
sahf
jbe
push
push
mov
xor
fwait
sahf
out
add
mov
sbb
inc
adc
mov
daa
push
js
orl
add
adc
jge
mov
xchg
xchg
pop
sbb
movsl
inc
fmuls
push
push
sub
push
mov
pop
cli
in
movl
rorb
xor
or
repz
insl
jae
jne
lcall
test
testb
mov
popf
lods
pop
push
push
push
add
cmp
int
loope
ds
pop
lret
or
mov
push
lods
push
cmc
sti
mov
lcall
jmp
add
xorb
xchg
sub
adc
negl
out
dec
scas
and
subl
jmp
subl
lcall
mov
insl
inc
inc
call
jns
adc
pushf
leave
pop
mov
test
dec
inc
cmp
pushf
dec
mov
xchg
pop
mov
jne
mov
mov
dec
dec
jge
sbb
out
cltd
sbb
fisubs
mov
jg
mov
cs
mov
sbb
pusha
xor
push
sub
sub
pop
inc
sbb
loop
ret
jbe
testl
sbb
jns
xchg
jecxz
xchg
add
jb
enter
cmp
mov
idivl
fstpt
push
popa
or
jnp
cli
lret
add
mov
mov
outsb
inc
sbb
inc
cmpsb
into
cmpsl
fldt
adc
push
dec
call
pushf
dec
addr16
xor
mov
clc
shrl
or
dec
mov
jns
dec
lcall
arpl
and
push
iret
cld
sbb
inc
xchg
mov
cmp
test
push
insl
mov
shll
mov
mov
nop
int
xlat
cmpsl
adc
div
and
outsb
bound
icebp
jae
push
cmp
call
inc
xchg
stos
dec
pop
sub
dec
pop
jecxz
or
iret
mov
lcall
stc
add
icebp
push
sub
cmp
mov
into
mov
insb
pusha
push
loope
xor
pusha
add
jb
xchg
lds
stos
xlat
fsubs
ss
sar
mov
fcmovu
jmp
sub
cmp
adc
or
insl
and
fs
push
jne
sbb
sbb
shrl
push
loop
mov
xchg
pushf
inc
cwtl
fwait
sub
and
sbb
xchg
add
mov
lods
lret
mov
mov
cs
fisubrl
stos
adc
pop
clc
mov
bound
or
sub
fnstenv
mov
cmp
mov
pop
mov
pop
pop
scas
fisubrs
sbb
push
cmpsb
xchg
shlb
leave
and
dec
and
jno
mov
shrl
inc
sub
xchg
clc
loope
lds
lret
cs
loope
push
insb
outsl
jg
in
shlb
rolb
decb
scas
xchg
or
adc
inc
sti
mov
lock
aas
add
and
mov
fsubrl
xchg
test
std
pop
pop
adc
jg
xchg
inc
je
daa
cmp
pop
mov
ds
js
mov
aaa
push
and
sub
jne
xchg
jns
addb
repz
mov
mov
rorl
xchg
adc
insb
cwtl
ss
test
mov
mov
pop
fidivrl
je
mov
imul
mov
std
or
xor
cmp
push
jnp
mov
mov
adc
test
mov
sbb
jmp
cmpsl
push
cmp
es
test
mov
xor
popl
adc
sub
and
fwait
mov
ss
jnp
cmp
mov
jbe
jp
mov
push
test
xchg
stos
movsb
sarl
stos
dec
int3
xchg
or
dec
push
add
cmpl
mov
mov
pop
imul
or
pop
test
or
sub
mov
jns
hlt
pop
and
push
bound
std
mov
add
ret
test
inc
sub
add
jle
mov
addl
lahf
xor
sbb
xchg
insb
push
pop
leave
das
xchg
jp
mov
mov
inc
xor
mov
and
mov
inc
sahf
mov
sarb
pop
std
call
push
es
mov
loope
inc
pop
ja
and
imul
pop
mov
loope
mov
cmpb
shlb
xchg
fcmovnb
movsl
or
cmpsb
fs
repz
pop
out
cmp
or
pop
lds
pop
mov
mov
cmc
fwait
stc
xchg
dec
inc
cmpsb
out
add
pop
pop
rcr
mov
fwait
pop
push
xlat
popf
sub
stc
jp
insl
xchg
call
mov
mov
mov
dec
loopne
repnz
and
push
std
repz
cmp
out
enter
jecxz
icebp
test
fsts
mov
pop
enter
mov
xchg
scas
push
xchg
dec
mov
rorb
cmpsb
cmp
loope
daa
aam
movsl
push
jecxz
push
mov
jle
mov
enter
or
jmp
dec
pop
mov
sub
dec
es
lahf
inc
fbstp
arpl
xchg
xchg
push
call
rcrl
mov
clc
sarl
xor
cwtl
sub
xor
inc
loop
pop
cmp
aas
dec
dec
mov
lret
in
cltd
mov
and
adc
movsb
add
mov
jp
daa
inc
mov
in
mov
jb
stos
xchg
out
repnz
adc
sub
inc
pop
mov
fstl
mov
xchg
adc
cltd
and
ss
add
out
dec
sbb
lods
arpl
call
xchg
jg
shl
pop
addl
and
rolb
xchg
cmp
daa
fidivrl
out
fidivrs
jl
outsl
sub
adc
mov
loope
xchg
cmpsl
mov
mov
fcompl
mov
push
in
movl
xchg
xchg
fs
hlt
sub
push
mov
js
and
push
cmp
push
fdivs
dec
lock
sbbb
jecxz
mov
pop
leave
add
mov
sbb
adc
prefetcht1
cltd
push
dec
adc
xor
aas
fisttpll
xor
or
fdivrs
adc
test
fidivs
lcall
or
push
mov
icebp
mov
xchg
hlt
std
add
xor
cltd
sub
je
inc
mov
pop
lea
xchg
and
sub
leave
ds
and
cmpsl
adc
movsl
aad
xchg
cld
xchg
mov
xlat
cmp
mov
add
lds
jl
xchg
adc
inc
bound
ljmp
jne
jg
arpl
in
push
adc
into
fsubrs
sub
adc
mov
cli
mov
rcl
push
sub
repnz
sbb
jle
cs
mov
jne
xor
mov
pop
jl
iret
jmp
add
jno
cmp
in
repz
cmp
jbe
or
paddusb
movsl
xchg
jns
and
pop
cmc
into
sub
out
jg
sarb
pop
dec
call
jno
jmp
rcl
loopne,pn
std
dec
mov
lods
rcr
outsb
das
in
jl
sbb
sub
in
imul
sahf
mov
dec
sub
sbb
aaa
push
or
or
mov
adc
int
pop
cmp
xchg
out
mov
sub
addr16
mov
or
test
cmp
mov
dec
repnz
xchg
cwtl
notb
jmp
fstpl
add
and
clc
mov
jne
mov
xchg
jecxz
add
xchg
cmp
adc
xor
xchg
mov
xor
setle
in
inc
dec
mov
lods
mov
xlat
push
inc
mov
push
cs
rcl
push
dec
fisubs
lahf
sbb
gs
call
mov
rorb
fs
movsl
int3
push
xchg
push
jmp
dec
and
jo
lret
and
in
and
rcr
push
movsl
add
ss
jge
or
in
mov
leave
lret
into
dec
test
push
jl
mov
xchg
ss
and
jl
xchg
mov
divl
das
enter
xor
rorl
adc
mov
push
or
mov
or
andl
les
inc
push
orl
jg
aas
and
mov
je
sub
test
cmp
cmp
pop
in
shll
cmp
or
push
addr16
sbb
adc
std
shlb
popa
sbb
outsl
adc
xlat
mov
fsts
or
pop
and
add
pop
outsl
outsl
mov
outsl
sarl
mov
mov
call
stc
mov
test
or
and
add
pop
push
mov
sub
je
jae
add
and
out
push
pop
cmp
push
aas
cmp
mov
mov
sbb
sti
jne
testb
lret
sahf
in
es
jmp
fiadds
xor
data16
lds
mov
ficoml
cmp
ja
int3
adc
pop
or
or
notl
daa
leave
data16
xlat
jo
gs
and
mov
inc
mov
outsl
arpl
xor
or
inc
sti
scas
xchg
jecxz
lods
out
packuswb
mov
out
imul
mov
jecxz
divl
jl
pop
mov
add
mov
sbbl
xchg
stos
enter
icebp
jge
add
arpl
dec
fdivrs
pop
mov
jb
push
jmp
mov
add
add
cmp
jo
in
mov
mov
fs
cs
lcall
jno
xor
dec
hlt
int
xor
aad
test
dec
mov
popf
cli
loopne
xor
mov
mov
lods
pop
out
push
push
sbb
mov
clc
fimuls
mov
cltd
mov
imul
sti
clc
push
data16
imul
jmp
xor
icebp
inc
mov
loop
scas
sbb
ja
xchg
lret
mov
stc
scas
mov
hlt
gs
push
mov
mov
or
mov
cmpsl
sub
sbb
pop
lock
xor
test
xchg
popw
cmp
or
push
or
gs
cmp
add
lcall
rcll
int
inc
add
sub
mov
aad
xor
push
xor
mov
jnp
mov
pop
popa
sub
leave
mov
dec
sub
je
xchg
mov
mov
sbb
xchg
dec
add
adc
hlt
rclb
dec
addr16
adc
iret
fwait
sbb
iret
sub
xor
mov
xor
mov
push
sbb
jg
shlb
es
call
add
test
sbb
mov
add
aaa
outsl
popa
loope
inc
sub
std
jno
jge
adc
push
mov
ds
adc
dec
sbb
xchg
mov
adc
and
imulb
ffreep
imulb
in
push
and
lcall
jp
lods
pop
jbe
inc
in
add
push
clc
add
push
cltd
sbb
dec
xchg
mov
ja
push
mov
push
cmp
stos
sub
add
xchg
pusha
sbb
pop
mov
mov
andb
sbb
mov
shrl
lock
adc
iret
icebp
dec
cmc
pop
and
push
mov
and
jl
div
fld
jmp
imul
shll
sbb
jmp
cld
pusha
ja
sahf
pop
lods
mov
or
imul
sbb
gs
xorl
outsb
sbb
sub
inc
mov
or
jae
dec
scas
cmp
aas
test
mov
xor
pop
xchg
in
test
inc
push
push
mov
lods
mov
enter
mov
mov
lcall
scas
pop
cwtl
add
scas
mov
inc
arpl
inc
nop
jbe
pop
sub
test
and
test
xchg
adc
jle
shll
adc
ss
icebp
int3
shlb
cmpsb
mov
jns
pop
pop
test
push
bound
inc
in
lret
dec
adc
sub
sbb
pop
push
ret
mov
mov
int
adc
push
jp
jge
clc
sub
push
pop
and
iret
lcall
ss
popa
jle
pop
adc
sub
or
cmc
jecxz
mov
xchg
sub
iret
or
jns
dec
fcomi
cwtl
leave
nop
imul
pushf
and
jmp
cmp
lock
adc
jno
xlat
loope
add
push
rclb
jbe
cli
lods
adcl
and
mov
sbb
push
adc
xchg
cmp
lea
fwait
mov
repnz
test
inc
cmp
jp
mov
jnp
pop
test
nop
imul
inc
jne
testb
mov
xor
lds
out
in
mov
jmp
sbb
jnp
inc
dec
aaa
and
clc
jge
push
dec
jbe
mov
adc
fbstp
jge
sbb
sbb
cmp
inc
xchg
das
out
jo
lea
pop
shrl
and
sbb
hlt
in
inc
xchg
jle
lahf
cmpsl
lds
test
outsl
add
pusha
jbe
pop
subb
sbb
mov
out
pop
pushf
cmp
dec
adc
out
inc
adc
jns
popa
dec
mov
sub
aas
cmpsb
push
dec
and
push
pop
clc
loopne
mov
lds
mov
movsb
push
ds
sahf
ret
jmp
aas
jecxz
add
add
or
sarb
fadds
dec
mov
jge
push
iret
in
push
out
sbb
loop
dec
sbb
notl
or
sbb
mov
jl
ss
xor
loop
jns
mov
add
dec
and
subb
loopne
cld
add
enter
push
push
mov
pop
paddusw
aaa
cmp
adc
mov
or
mov
call
in
cmpsb
xchg
pop
adcl
sbb
pop
cmpsl
pop
xorl
je
adcb
adc
xchg
addb
mov
fcoms
mov
ss
aaa
repnz
push
xor
add
popf
sahf
sbb
imul
dec
push
dec
lret
fdivl
lods
jle
lret
repnz
mov
adcb
cmc
push
rol
outsl
adc
insb
add
sub
xor
push
adcl
pop
mov
pop
jns
mov
cwtl
outsl
xchg
pop
mov
ror
xchg
sbbb
adc
sbb
mov
mov
sub
rolb
mov
xor
push
stos
lret
cld
leave
popa
push
mov
lea
div
push
incl
fists
ja
movsl
sub
dec
lahf
and
and
sbb
out
cmpsb
push
fdiv
pop
jno
mov
pop
scas
jp
mov
pop
popa
clc
push
jo
fs
xchg
mov
jns
cli
adc
mov
fidivrl
push
cli
loop
shlb
cmp
rcll
jns
cmp
mov
xor
mov
xchg
push
jo
stos
pop
cltd
sahf
adc
ficoms
leave
push
addl
xchg
add
mov
popa
cwtl
mov
mov
popa
stc
arpl
sub
cmp
sub
xor
cmp
pop
add
in
xor
jns
mov
sbb
or
js
adc
das
mov
mov
scas
inc
and
pop
add
xchg
add
test
dec
adc
and
scas
mov
pushf
lea
dec
fnstsw
and
cmp
or
jp
xchg
int
jno
mov
pop
icebp
mov
out
nop
add
popf
andl
iret
ja
inc
subl
sbb
or
add
lds
stos
sti
pushf
pop
lret
addl
add
fnstenv
in
nop
cmpsb
adc
addl
clc
decl
mov
pop
shll
incl
dec
test
stc
and
fwait
dec
add
push
ds
mov
fwait
or
mov
ret
inc
insb
pop
sub
pop
push
orb
cmpsw
pop
ja
testb
dec
add
and
scas
ljmp
lahf
dec
stc
mov
in
mov
adc
push
jmp
xor
mov
xor
pop
es
cmc
mov
shr
pop
sub
daa
push
dec
in
int
mov
std
ja
or
push
mov
test
in
and
add
mov
add
inc
inc
sbb
jmp
xor
scas
lods
in
mov
inc
sub
mov
into
mov
fisubrs
fisubrl
cmp
jg
pop
sbb
pop
shlb
aad
jecxz
add
or
xchg
and
pushl
sbb
fcmovbe
push
mov
or
xor
arpl
int3
in
xlat
aad
jg
or
sub
mov
iret
icebp
out
mov
or
and
ljmp
leave
and
add
inc
add
dec
pop
and
fldenv
int3
mov
sub
mov
dec
xchg
imul
inc
jbe
mov
into
cmpsl
popa
pushf
icebp
add
outsl
mov
fxch
pop
lods
ret
popa
adc
out
out
bound
ss
cmp
jae
push
push
loope
jecxz
insl
ret
aas
dec
shrl
out
inc
xlat
pop
mov
fistpl
mov
mov
cltd
iret
mov
push
pop
shlb
fidivrl
ja
nop
fnstcw
insl
mov
jbe
mov
adcb
repz
lods
icebp
xchg
ljmp
dec
or
push
xorb
stc
cltd
mov
push
dec
push
dec
and
std
das
imul
rcrl
fs
fcomps
xor
stos
mov
mov
mov
data16
add
inc
push
movsl
fdivr
cmpsl
pushf
ret
lock
sub
dec
pop
cmpsl
xor
fdivrs
mov
lods
cmp
mov
push
inc
sbb
faddl
push
push
lods
ficomps
in
cmc
idivb
test
inc
enter
int3
enter
fidivrs
add
cmp
mov
ja
stos
pop
sub
getsec
ds
or
xor
outsb
xor
dec
aad
add
jl
pop
sub
int3
push
data16
sarl
js
or
mov
mov
lcall
divb
insb
fcomi
out
mov
jno
lods
lods
adc
pop
sub
pop
xchg
insb
fstpl
push
je
push
rcr
movsl
sbb
cmp
hlt
jge
cmc
xor
mov
adc
adc
pop
arpl
jae
mov
fisubrs
arpl
cmpl
push
add
inc
push
sbb
shll
stos
pmulhw
lcall
xor
pop
and
mov
inc
dec
adc
xchg
or
pop
sbb
mov
push
push
clc
fmuls
pop
xchg
push
sahf
ss
pop
sbb
inc
jmp
jle
pop
push
repnz
mov
mov
xchg
mov
loop
inc
negl
lods
stos
je
inc
inc
imul
jo
push
fimull
mov
xchg
subl
mov
jge
aad
pushf
shrd
test
lahf
jecxz
aas
pop
icebp
add
jns
lock
cld
inc
xchg
in
pop
jbe
sbb
hlt
xchg
mov
imul
and
mov
xor
xchg
xchg
decb
pop
push
lods
cmpl
iret
lret
cmpl
arpl
jle
mov
loop
push
fwait
outsb
popf
xchg
inc
rcrl
dec
stc
addb
je
ror
add
xor
xchg
lcall
cmp
int3
jp
xorl
cmovae
push
mov
xchg
das
fwait
imull
xchg
jmp
testb
dec
add
js
pushaw
xor
inc
out
dec
outsl
out
leave
mov
jno
bound
push
popf
sub
cmp
ljmp
mov
cmc
clc
lock
adc
inc
ds
xchg
cwtl
jmp
jge
sti
sbb
pop
pushf
inc
ds
fwait
in
mov
repz
in
adc
inc
or
mov
jle
dec
enter
shrb
jle
xorb
dec
xor
fidivl
dec
das
mov
call
hlt
jno
pop
loop
jp
popa
cmpl
fisubl
fisttpl
adc
mov
jne
mov
push
push
pop
push
push
gs
leave
stos
gs
mov
mov
mov
sub
movsl
iret
or
outsb
inc
fsubs
sbb
push
sub
push
mov
movb
aaa
gs
push
or
xchg
mov
loope
lods
adc
cmpsl
rclb
stos
push
insb
roll
push
push
aam
int3
jmp
fstps
lods
pushf
int
cmp
stc
fbld
jle
rcrl
add
dec
pop
push
cltd
movsl
fs
test
mov
outsb
xchg
int
shrl
daa
lods
mov
aaa
insl
mov
addb
es
xor
add
pop
cwtl
in
push
jecxz
in
inc
scas
adc
aad
sub
test
xlat
inc
and
daa
lods
xor
pop
sbb
call
dec
pop
jecxz
sti
data16
in
push
out
lret
push
adc
out
pop
je
ret
pop
and
imul
pop
cmp
cmc
jge
enter
in
pop
xor
test
pop
mov
daa
femms
out
punpcklbw
xor
lret
pop
pop
int3
repnz
repz
adcl
lret
xor
dec
sub
pop
repz
push
mov
mov
icebp
mov
or
aam
pop
adc
orl
test
lret
xlat
sarb
jecxz
jns
sahf
outsl
bound
stos
xor
add
std
loope
pop
fadds
inc
aad
sbb
jle
jmp
popf
mov
in
and
outsb
add
or
push
js
add
and
jo
call
fcmove
addl
sbb
pop
cmc
push
adc
inc
cltd
sbb
scas
cmp
sahf
andb
movsb
fcomi
mul
push
inc
cmc
sub
push
imull
ja
jle
js
inc
dec
imull
ficoms
add
lods
mov
and
mov
mov
add
mov
sub
or
arpl
inc
fisttps
leave
pop
push
or
push
sldt
lcall
mov
push
adc
jmp
jg
xchg
mov
fistps
dec
or
push
push
hlt
pop
mov
inc
out
mull
cs
lods
sbb
lret
jp
add
in
movsb
adc
mov
stc
jno
cmp
or
scas
test
add
fwait
std
flds
outsb
and
dec
stos
push
or
lcall
lret
jge
lcall
push
jno
cmpsl
pushf
mov
call
adc
lods
fadd
dec
push
inc
dec
cltd
out
xchg
shlb
dec
pop
ljmp
fiadds
in
mov
mov
push
inc
or
and
mov
xor
push
mov
lret
popa
add
in
pop
aaa
clc
push
idivl
and
pop
sbb
pop
imul
pop
aam
ja
xchg
add
xchg
jl
cmc
push
mov
out
scas
inc
insb
ret
popf
shrl
out
push
add
ljmp
dec
outsb
bound
xchg
mov
mov
xor
and
sub
push
lcall
jl
push
sbb
popf
in
xor
pop
push
pop
jnp
push
ds
cmp
out
pop
sbb
dec
add
loop
dec
mov
std
adc
repz
push
cmp
fwait
loop
push
lds
lret
jae
inc
xchg
jg
lods
clc
iret
mov
pop
dec
repz
add
rorb
cmp
mov
mov
mov
movb
clc
sub
outsb
xchg
ss
in
push
movsl
mov
mov
or
jns
stos
mov
mov
fisubl
mov
xor
adc
cmp
sbb
movsl
jg
outsb
inc
mov
adc
leave
jbe
cmp
out
adc
inc
loopne
mov
jne
dec
aas
ret
xchg
pop
sbb
out
adc
add
dec
loopne
sti
xchg
cmc
cs
popf
xlat
cltd
rcll
add
loopne
popw
xlat
mov
xor
pusha
and
or
mov
xchg
outsb
fsub
cmovne
jns
push
lret
imul
scas
sbb
adc
jae
mov
cwtl
xchg
aaa
adc
mov
adc
in
lods
jg
lods
mov
icebp
add
dec
push
into
sub
sbb
xor
popf
xchg
push
push
addr16
loope
fildll
dec
sub
xchg
jae
adc
push
xor
add
movsl
jno
add
inc
dec
inc
xchg
jne
cmp
jmp
pop
mov
cli
jbe
cmc
adc
movsb
sub
bswap
cs
jl
or
insl
test
inc
ret
in
push
pop
mov
dec
sbbb
push
jne
int3
inc
stc
aas
ffree
cmp
xor
pop
push
sbb
xchg
outsl
incb
jmp
mov
xchg
out
addr16
mov
sbb
pop
cltd
movsl
ss
sarl
cmp
ss
adc
test
call
mov
mov
aas
into
xchg
jns
cli
dec
sarl
jmp
jae
gs
pop
popa
add
pusha
fs
setns
popf
xor
iret
dec
sub
fisubs
pop
ffreep
jl
iret
shll
rcrl
and
test
ss
mov
in
cmpsl
xlat
gs
xor
cs
addr16
jp
int3
inc
xchg
das
jmp
jbe
cmp
xchg
test
stos
fwait
test
std
incb
pushfw
pop
lods
fdivrs
insl
mov
xchg
inc
subl
ds
sub
clc
cmp
test
sbb
dec
sub
bound
dec
jbe
cmp
or
cmc
cld
mov
inc
ja
mov
sbb
xchg
shrb
cmpsl
jmp
sub
add
xorb
sbb
sub
mov
and
pushf
lods
insb
into
mov
mov
and
dec
js
fcomp
inc
call
fldl
cmp
ficomps
mov
xor
adc
push
or
jl
mov
das
in
js
leave
aad
daa
adc
pop
clc
xchg
inc
cmpsl
leave
mov
jbe
not
sahf
push
insb
pop
mov
je
mov
out
js
lret
pop
mov
push
scas
fmuls
rclb
sbb
data16
push
cmovo
push
popa
pop
add
mov
test
imul
out
and
mov
jo
in
xor
mov
adc
lods
push
jp
add
dec
neg
lret
sub
push
xlat
pop
sub
and
and
das
xchg
lahf
jb
cmp
lods
aas
xor
and
loopne
lret
enter
or
or
adc
push
js
nop
sub
pop
mov
pop
int
test
mov
mov
jb
xchg
pop
shlb
sahf
loopne
cmpsb
pop
imul
adc
test
into
sub
outsl
mov
rorb
cmpsl
leave
imull
push
jbe
std
ret
xchg
loopne
fildl
adc
mov
stc
into
mov
das
int3
push
dec
int3
lcall
pop
and
push
sbb
call
push
lcall
push
mov
add
loopne
sbb
lret
ffree
push
icebp
adc
rolb
loope
js
cld
lock
hlt
addl
test
mov
fucomp
xor
imul
cs
mov
jns
flds
ss
ret
jnp
shl
inc
mov
or
cmp
push
int
mov
mov
ljmp
in
sub
pop
jl
rolb
popa
fisubl
sub
sub
adc
cmpsl
in
cmp
jno
push
jne
push
jne
pop
out
sub
dec
faddl
mov
hlt
mov
pushl
adc
push
sahf
and
dec
fmul
imul
dec
add
sub
push
sbb
aaa
out
aad
xchg
xchg
cmp
sbb
lods
lret
lods
rclb
pop
dec
dec
dec
out
stos
loop
cmp
mov
ds
addb
pusha
cltd
mov
push
mov
repz
jp
lock
mov
xchg
testl
outsl
inc
add
test
add
or
sbb
inc
push
xchg
cwtl
lods
sbb
mov
rol
pop
lock
pop
mov
mov
movsb
rcrb
mov
std
add
in
add
inc
adc
popa
movsb
mov
or
loopne
aas
mov
cmp
arpl
loope
sar
pop
add
jge
outsl
test
lahf
into
dec
enter
dec
jne
sub
cld
lahf
or
cmp
add
add
arpl
xchg
and
push
push
and
sarb
daa
push
add
dec
sub
dec
lret
aaa
into
add
mov
pop
scas
lods
xchg
lock
push
xor
ret
out
sub
sub
in
and
scas
mov
arpl
js
and
jo
mov
psllw
aaa
or
dec
xor
stos
inc
push
cwtl
adc
xor
std
sbb
into
fcmovne
cld
add
mov
ret
sub
sbb
in
xlat
imul
sbb
add
pop
jmp
inc
pop
addr16
push
xlat
fnsave
jns
scas
jle
sbb
orl
and
add
flds
add
hlt
test
insb
ss
mov
iret
inc
adc
std
ss
xchg
dec
adc
in
lret
cmpsl
cwtl
clc
add
mov
pop
xchg
sub
js
imul
ret
lock
pusha
or
ret
aaa
enter
data16
scas
repz
roll
ljmp
inc
mov
xchg
mov
pop
mov
stc
jge
dec
xchg
xlat
pop
out
das
les
pusha
pop
lock
dec
cmc
mov
push
cmpsl
dec
jnp
hlt
lock
push
loopne
in
inc
jb
xchg
cwtl
mov
sub
popl
leave
sti
and
fwait
stos
bound
inc
mov
pop
es
mov
add
xor
mov
stos
inc
sub
negb
hlt
aaa
lcall
shll
dec
std
adc
cmc
inc
sub
incb
bound
dec
dec
popa
inc
inc
dec
loop
mov
sbb
cmp
inc
sub
adc
imul
xchg
shlb
adc
xor
push
sahf
aaa
clc
rcrl
jle
bound
xor
jmp
dec
lea
out
out
rol
addr16
fsubr
icebp
jp
clc
inc
xor
cmpsl
or
mov
aam
lret
lock
mov
scas
call
mov
test
int
mov
mov
inc
push
in
mov
push
xor
xor
fnstenv
pop
mov
punpckhdq
mov
push
sub
fmulp
movsb
jbe
test
clc
cmp
mov
push
ret
or
cmp
mov
mov
xlat
int
mov
add
aas
push
das
dec
add
jge
push
xchg
and
les
push
outsl
or
rcrb
cs
sub
jp
pusha
xor
cmpsl
mov
sub
xchg
and
stos
push
mov
and
mov
cmp
push
pushf
arpl
sbb
les
add
test
clc
mov
xchg
jmp
in
dec
out
jne
nop
xor
out
lret
data16
mov
and
mov
and
dec
and
push
test
push
or
or
aam
pop
sub
sbbb
hlt
lds
ret
inc
fcoml
jle
mov
push
leave
sbb
in
daa
xchg
mov
rol
cmp
dec
fistps
sbb
sahf
adc
inc
data16
cmpb
ds
loopne
pop
int
xor
lahf
lahf
jno
mov
push
out
xor
mov
push
mov
bnd
mov
icebp
jbe
ljmp
aaa
add
rolb
cmp
les
pusha
mov
ds
stc
pop
push
or
incl
mov
adc
xchg
mov
mov
add
push
out
pop
lock
shlb
stc
divl
add
xchg
outsb
mov
cmc
and
or
in
stos
std
out
aam
xchg
inc
adc
lea
jne
sbb
cli
shrl
cmc
sub
pop
xchg
bound
sub
adc
and
jmp
jp
jg
pop
dec
imul
cs
cmpsl
xlat
dec
jns
cmc
jp
pushl
jmp
mov
iret
fsubl
sahf
pop
cmp
enter
mov
or
add
pop
push
out
push
mov
add
mov
mov
mov
pop
test
rcl
scas
or
push
mov
sub
jo
mov
add
mov
repnz
cs
cltd
jno
mov
inc
pop
xchg
dec
in
or
popf
test
jg
cmp
les
clc
dec
dec
je
das
sti
fadds
and
sub
mov
jp
push
pushl
sti
xchg
std
cli
pop
mov
xchg
test
pop
push
adc
jnp
ret
cmp
mov
xchg
mov
push
aam
cmc
or
gs
ds
jae
addr16
cmp
jo
pop
in
dec
fdivrp
mov
jge
inc
lret
or
jl
jae
mov
ljmp
adc
fidivl
push
insl
insl
jg
xor
xchg
push
clc
fsub
sub
sbb
sbb
mov
insb
fisubl
fidivrs
or
popa
lea
or
jg
cli
cmp
xchg
insb
leave
adcb
enter
jmp
pop
dec
jmp
bound
cld
cltd
repz
mov
push
mov
adc
lahf
inc
xchg
xchg
daa
push
push
sub
cmpsl
std
pop
shlb
sub
sub
push
notl
in
loope
sub
out
push
push
pop
das
outsb
sub
push
push
dec
add
dec
push
push
mov
jle
adc
push
sbb
dec
mov
sbb
add
test
dec
mov
hlt
pop
popw
nop
and
imul
fcomi
jae
in
xchg
push
mov
sub
mov
out
loope
pop
or
pop
sub
icebp
sub
pop
lods
addr16
das
movd
clc
pop
sbb
out
lcall
ds
push
out
xor
movsl
add
xchg
dec
mov
mov
rcll
dec
mov
add
out
cmp
mov
and
or
cmp
mov
or
sti
cld
adc
mov
insb
jo
incb
repnz
aam
scas
negb
xchg
xchg
xchg
scas
cwtl
cmp
or
and
lret
loope
dec
push
js
jecxz
lods
xor
bnd
test
ljmp
mov
loope
arpl
xchg
cld
mov
sbb
jne
inc
xchg
pusha
add
cmp
mov
push
ljmp
jno
sub
in
mov
add
adc
ficomps
mov
bnd
jb
pushf
sbb
lahf
lea
repz
imul
sarl
lock
dec
adc
stos
es
mov
std
rorb
add
mov
clc
mov
dec
aaa
pop
cmp
jge
sbb
mov
jg
mov
out
pop
out
mov
sbb
bound
punpcklbw
xchg
sbb
lods
ljmp
push
call
rcr
pcmpeqw
push
push
loopne
mov
mov
mov
insl
jl
stc
fs
sbb
or
mov
iret
and
std
inc
test
push
mov
and
dec
jno
and
aad
mov
sarl
pop
mov
in
arpl
ljmp
xor
aam
mov
mov
dec
push
push
and
repnz
dec
jnp
cmc
imul
xor
cmp
ss
mov
lock
pand
aaa
xchg
inc
in
pop
decl
dec
testl
in
push
scas
mov
in
cmp
cmp
push
lock
cwtl
cmp
fnsave
cmp
xchg
cmpsb
push
jns
pushf
mov
or
dec
scas
jne
pop
fnstsw
nop
xchg
and
add
add
mov
push
dec
scas
or
mov
or
mov
or
fimull
push
mov
dec
fwait
shl
out
loopne
mov
mov
cmp
xor
and
jl
jmp
mov
mov
dec
or
lock
xchg
dec
imul
fisubrl
cwtl
stos
add
xchg
mov
sbb
jg
fimull
cmp
in
loop
pop
mov
mov
add
xchg
out
icebp
pop
mov
hlt
ja
jp
xchg
push
push
in
outsl
xchg
mov
pop
ja
sbb
imulb
insl
in
cltd
push
push
dec
lds
mov
arpl
shlb
lret
push
adc
popa
fprem1
add
and
push
in
push
push
out
sbb
cmc
pushf
cwtl
cwtl
in
popf
push
inc
bound
dec
cmpsl
fnstsw
sub
xchg
push
movsl
aaa
ret
jl
data16
ss
hlt
mov
out
jo
aad
xchg
inc
popf
movsl
divl
xor
jecxz
daa
cmp
stos
mov
dec
stc
adc
enter
mov
mov
arpl
or
repz
sbb
int
push
push
outsl
arpl
test
lahf
inc
movl
test
or
in
push
jl
outsb
pop
add
lea
cltd
int
sbb
mov
jb
inc
fildll
lods
ror
add
jb
fdecstp
pusha
xor
sbb
std
mov
pop
and
mov
mov
cmp
lds
and
in
in
rorb
inc
inc
and
imul
out
jl
clc
pop
test
les
xchg
mov
push
dec
iret
dec
cmpsb
push
test
xchg
mov
movsl
scas
add
js
mov
int
test
gs
js
mov
xchg
add
dec
loopne
jb
ret
lods
and
pop
sbb
mov
repnz
push
adc
xor
pop
inc
jbe
add
clc
adc
add
and
cmp
mov
xlat
mov
mov
adc
lock
pop
sub
or
rorl
dec
cmc
sub
dec
pushf
aad
js
inc
repnz
repz
sub
mov
out
pushf
ret
popa
test
lds
mov
dec
shrb
pusha
sbb
lcall
test
lods
mov
jp
cmp
inc
adc
in
dec
inc
enter
pop
xor
fcmovnbe
xchg
push
sub
dec
arpl
jns
insl
and
jb
jb
filds
std
lret
test
imulb
les
adc
jnp
push
aas
hlt
mov
daa
cmpsb
mov
inc
mov
outsl
pop
push
jae
ret
dec
jecxz
mov
push
jle
aas
arpl
je
imul
enter
repnz
push
jmp
ja
push
push
out
lret
xchg
push
enter
nop
xor
cli
dec
imulb
mov
hlt
push
pop
mov
mov
inc
shll
ja
aaa
xchg
jne
jbe
cld
stos
sub
mov
pop
scas
add
popa
push
dec
jl
dec
mov
lds
push
cmp
lea
mov
test
xchg
test
mov
add
sub
add
jns
mov
outsb
aaa
in
bound
cmp
add
icebp
scas
mov
push
xor
inc
xor
aad
sbb
or
divb
loop
xchg
call
aad
inc
shlb
aaa
aas
arpl
push
in
sbb
or
rclb
mov
fucomip
test
cmc
stc
dec
push
pxor
xor
imul
mov
test
je
int3
out
insb
inc
wbinvd
mov
or
dec
push
mov
les
movsl
mov
ljmp
in
fiaddl
or
mov
outsb
xchg
xchg
or
or
mov
push
fnstcw
mov
inc
aaa
ret
dec
dec
and
push
mov
lods
adc
rcll
in
loopne
jecxz
pop
rcl
jo
lea
repz
test
es
sbb
inc
xchg
jb
push
or
in
cmp
xor
push
rclb
jns
insb
fisttpl
jle
ds
sbb
jno
data16
inc
outsl
test
push
and
sahf
xor
pop
and
inc
sub
push
rcrl
insl
fbld
push
mov
nop
add
cwtl
fimuls
jp
or
mov
aas
sbb
jne
arpl
inc
xor
mov
push
dec
repnz
xor
xchg
jl
mov
xlat
jne
scas
fmull
inc
push
rorb
and
xor
mov
xchg
fcompl
pop
mov
aam
and
xor
cmp
shl
push
clc
sahf
cs
cmp
push
adc
add
test
and
sbb
cmp
xor
sbb
lret
mov
movsl
push
jge
mov
and
dec
shrl
pusha
add
pop
add
xchg
pop
clc
sub
lcall
lods
dec
inc
add
aas
mov
add
loop
mull
out
nop
and
movb
jg
ret
adc
inc
push
loop
rcrb
or
cmp
push
adc
pop
icebp
xchg
subl
sub
sti
adc
xchg
xorl
mov
xchg
std
cmp
add
outsb
test
div
test
inc
dec
scas
sub
das
inc
sti
cwtl
xor
lret
loope
and
or
pop
clc
imull
xchg
nop
test
sarl
sbb
fisubl
lahf
cwtl
sbb
mov
div
stc
pushf
jle
or
mov
dec
stos
and
sub
pop
push
cmc
jns
loope
mov
clc
mov
xor
in
and
add
mov
outsl
mov
subl
cld
int
dec
inc
add
repz
push
inc
push
sbb
add
xchg
ds
outsb
inc
mov
mov
sbb
jno
pop
les
clc
mov
adc
cmpsb
mov
in
jl
cmpsb
and
mov
dec
aas
imulb
repnz
nop
adcl
rcrl
les
and
fcmovnu
or
loop
dec
sbb
imul
repnz
dec
std
stos
push
lock
dec
xchg
xor
adc
orl
mov
xchg
push
xorl
out
jl
inc
adc
outsb
or
xor
movsl
loope
or
xor
xor
or
inc
mov
adc
dec
dec
inc
sub
repz
inc
sub
cmpsb
jbe
push
push
xchg
loopne
aam
mov
sub
inc
outsb
push
jae
cmp
mov
mov
mov
rcrl
or
xor
dec
fisttpl
xor
or
pop
cmp
inc
fstl
neg
jge
mov
inc
mov
out
movsb
loopne
jne
mov
cmp
sbb
iret
add
xor
dec
int
test
jg
ljmp
popf
daa
or
repnz
out
stos
addr16
dec
movl
or
gs
xor
cmc
sahf
pavgb
in
pop
inc
mov
sub
dec
mov
test
js
or
ds
sbb
sub
push
rorl
push
into
jp
adc
pop
xorb
mov
shll
addr16
int
pop
inc
fs
dec
inc
mov
pop
mov
incl
lock
adc
lods
mov
mov
inc
mov
mov
in
mov
jne
cmp
xchg
dec
pop
test
lret
pop
imul
mov
pop
in
clc
loopne
ja
fldt
arpl
mov
mov
imul
mov
dec
out
mov
pop
mov
pop
rolb
fdecstp
or
dec
iret
arpl
das
dec
pop
sub
jno
pop
jmp
stos
mov
lret
cmpsl
xchg
sbb
mov
or
cmc
ljmp
mov
pusha
and
inc
add
mov
cmpsb
jns
cmc
lret
data16
outsb
push
or
or
test
sbb
cmp
fs
mov
jge
dec
fsubrp
dec
xor
bound
test
cmp
test
mov
xor
call
push
out
dec
push
lods
sub
xlat
mov
or
mov
jg
mov
mov
cmp
pop
repnz
inc
sti
sub
scas
fdivp
or
pop
lods
insb
jnp
loopne
movsb
fldcw
ds
lds
jl
rcrb
test
adc
movsb
outsb
loop
push
mov
mov
test
stos
push
sarb
mov
into
ljmp
cltd
xchg
mov
cld
cld
mov
fdivl
mov
sbb
mull
aad
lcall
xlat
add
jp
jge
adc
dec
pop
and
xchg
stos
inc
loopne
jge
mov
push
cmpsb
test
aaa
xchg
inc
mov
shll
pushf
push
sbbl
outsb
orb
jne
int3
arpl
mov
jbe
sub
jb
push
jl
push
xor
sahf
lret
notb
cwtl
dec
mov
push
pushf
cmp
mov
cs
repz
dec
mov
push
lds
jl
into
fists
in
and
lock
xor
pop
and
jmp
in
sbbl
cmp
sbb
pop
test
fxch
jb
dec
xor
push
jmp
out
ret
add
in
or
mov
sbb
push
jne
daa
or
ret
ss
jae
push
jbe
popa
push
enter
popa
xchg
out
iret
movsl
mov
pop
pop
insl
in
inc
bound
cmpsl
sub
push
adcl
add
inc
outsb
adc
dec
mov
jns
movl
clc
push
bound
out
jne
enter
scas
mov
adc
cmp
ds
mov
push
xor
dec
pop
xchg
cltd
adc
and
adc
mov
cmp
movsb
bound
inc
pop
jb
add
sbb
cmp
cmp
adc
ss
mov
pop
jno
ss
mov
sub
rorl
rorl
adcl
mov
popl
fbstp
dec
or
imulb
add
lret
lret
mov
leave
cs
sub
mov
pop
cwtl
mov
cs
inc
cwtl
jmp
add
jle
lret
cmp
mov
mov
pop
sti
cmp
push
insl
adc
adc
jno
iret
xchg
mov
ficompl
cmp
pop
cmpsl
int3
add
cmpsl
adc
out
iret
outsb
scas
or
sbb
inc
jae
in
inc
mov
mov
mov
aas
add
inc
orb
sbb
data16
jle
push
pop
mov
rcll
leave
push
mov
mov
add
jp
mov
mov
lods
out
add
push
push
clc
jecxz
je
mov
inc
loopne
lock
push
fwait
jmp
arpl
push
ja
mov
hlt
push
ljmp
or
sbb
push
sbb
or
lcall
popa
and
imul
insl
xor
cwtl
imul
jg
decb
jp
pop
jg
ret
cmp
adc
or
out
push
into
mov
sbb
pop
jnp
subb
fwait
xor
jno
mov
push
adc
mov
orl
xchg
push
loop
cwtl
shll
lret
xor
ror
fnsave
add
sbb
push
cmc
lret
lret
lea
mov
lds
jae
clc
pop
iret
aam
test
mov
popl
and
popf
ljmp
jmp
insl
mul
push
mov
pop
mov
xor
cmp
mov
cmp
lcall
cmpsl
xchg
cmc
imul
mov
inc
add
addb
sahf
pop
aam
cmp
into
mov
hlt
sbb
insl
aad
int3
fwait
mov
fldenv
xlat
pushf
mov
pop
out
add
fnstenv
xor
dec
xor
dec
pop
mov
adc
ss
cmp
adc
cli
test
push
dec
mov
lcall
sub
adc
adc
sub
ret
add
fsts
mov
and
test
xchg
ret
mov
call
cmpsb
pop
je
sahf
cwtl
nop
dec
movsb
ss
mov
inc
insb
sti
movsl
pop
xor
fs
mov
negl
and
je
pushf
mov
roll
cmp
or
popf
and
sbb
pop
nop
aaa
loope
pushf
dec
les
test
stos
mov
cmp
mov
dec
push
dec
sub
lock
cmp
adc
std
xchg
mov
pushl
dec
in
cwtl
lcall
mov
jmp
push
sbb
cli
pusha
aaa
test
push
cmp
sub
mov
sbb
inc
sbb
std
cmp
scas
sub
icebp
pop
pop
orb
addr16
xchg
cmpsl
mulb
pop
sub
je
fbld
sub
lcall
or
and
pop
and
jmp
cmp
mov
mov
mov
push
in
loopne
fidivl
aad
fs
or
lods
cltd
add
lods
push
lcall
jecxz
and
jne
pushf
adc
call
stos
inc
xchg
mov
out
xchg
je
fadds
xchg
jbe
repnz
lock
push
in
jecxz
adc
pop
dec
pop
fsubrs
das
fcomi
adc
dec
jl
push
xchg
cmpsb
rcl
cmp
push
imul
add
pop
pop
sbb
insb
mov
or
sti
movsb
push
jp,pn
lcall
xor
dec
adc
ja
pop
inc
cmp
lock
imull
stos
enter
out
mov
es
in
mov
inc
or
push
adc
fists
adc
pushf
movsl
xchg
push
stc
xlat
test
adc
test
ret
in
pop
daa
mov
jno
dec
orb
fimuls
adc
outsb
leave
rcl
and
adc
sbb
dec
arpl
les
xor
imul
sti
pop
loopne
in
sbb
popa
xchg
imul
shrl
mov
push
push
xchg
lock
sub
pop
hlt
ret
aam
jle
push
nop
idivb
mov
inc
int3
cs
mov
negl
and
test
inc
lret
sbb
mov
scas
cmp
push
push
adc
incb
ss
pop
out
out
fsubrs
dec
testl
fimull
fisubrs
add
cmp
test
cmp
add
pop
xlat
push
adc
jnp
iret
repnz
mov
fs
mov
ret
xchg
xchg
sbb
add
jmp
mov
sub
jbe
das
mov
insl
daa
add
jo
aad
inc
xlat
mov
sub
push
movsb
pop
daa
scas
outsl
cltd
cmp
sbbb
out
jge
mov
dec
sub
push
loop
jge
adc
js
pushf
push
nop
cmc
clc
cli
inc
xorl
movsb
sbb
int
pop
mov
test
pop
scas
and
add
std
clc
cmp
push
dec
stc
add
push
mov
test
add
sahf
jb
adc
mov
cmp
push
aas
cmc
insb
xchg
test
fsubs
in
loop
sar
mov
push
inc
inc
pop
test
repz
push
jbe
jno
aad
mov
repz
rol
jnp
lahf
mov
movl
or
xor
divl
sbb
add
or
outsb
push
or
dec
loop
cmp
inc
repz
adc
add
cli
fsubs
aam
mov
cmc
add
aaa
jmp
scas
stc
add
xor
lods
leave
fidivrs
xor
jnp
bound
jne
sbb
push
jmp
inc
pusha
test
imulb
mov
dec
dec
icebp
jg
ja
push
shll
push
adc
sub
xchg
fdivs
pop
xor
fcomps
scas
subl
dec
inc
loopne
ds
mov
in
fstps
dec
xchg
xchg
icebp
je
lcall
mov
ss
out
mov
ret
dec
dec
dec
cmp
aas
frstor
das
out
clc
hlt
pop
data16
loopne
mov
das
addr16
aaa
xchg
xchg
push
adc
popa
mov
inc
xorl
mov
inc
add
inc
int3
adc
leave
or
pop
cmp
mov
jge
push
or
gs
sub
mov
cmpsb
inc
adc
enter
sbb
xor
mov
mov
or
cmp
pop
push
push
push
mov
dec
and
cli
in
jp
or
int3
mov
pop
ficoms
lahf
inc
pop
jo
jg
jp
jne
cmc
xor
pop
dec
jb
daa
push
xchg
mov
movsl
add
and
mov
pop
ds
add
mov
inc
imul
mov
mov
sti
in
fiadds
jmp
mov
mov
dec
mov
fistpll
ret
enter
orb
jno
adc
mov
ret
fildll
int3
push
imul
ljmp
pop
out
or
xlat
rclb
out
sbb
into
out
xchg
popf
mov
popa
mov
add
fcmovbe
mov
pop
dec
sbb
dec
addl
aas
enter
xor
fmull
test
mov
sub
dec
mov
inc
or
testl
scas
es
addr16
xor
mov
loopne
loop
mov
movsb
jae
cmpsb
inc
mov
cltd
fs
enter
movsb
sub
dec
jb
inc
push
out
sbb
xchg
imul
dec
or
push
ljmp
push
jne
jmp
aas
mov
ret
fisttpl
sub
inc
mov
pop
xchg
xor
nop
adc
mov
data16
and
add
inc
cmpsb
int
addl
rsm
dec
cmp
cmpsb
rol
xor
pop
test
inc
ss
pop
loopne
and
inc
mov
add
adc
sub
jmp
jmp
into
add
jno
mov
scas
icebp
xor
mov
ds
es
aaa
cmp
in
std
xchg
mov
mov
aam
cmp
mov
insl
xor
jmp
imul
test
push
arpl
mov
mov
jb
xor
shrl
aas
aas
jbe
mov
iret
in
and
cmpl
mov
jmp
js
cmp
notl
or
mov
and
push
push
dec
lds
in
out
xchg
xlat
aaa
mov
ja
add
andb
mov
rcl
lock
xor
mov
mov
pop
ret
dec
xchg
jle
cmp
sti
or
addb
xorl
mov
push
dec
xchg
insb
aam
cmp
cmp
sbb
push
idivl
xchg
aam
add
icebp
aad
or
hlt
mov
mov
lcall
jecxz
test
jb
sahf
push
or
cltd
inc
lods
ss
idivl
jmp
adc
mov
outsl
fstpt
fildll
adc
cmp
pop
ljmp
sub
mov
xchg
inc
shll
outsl
pusha
lds
jg
pushf
std
jnp
lods
cli
pop
adc
sub
rol
push
fisubs
fmull
ds
ljmp
xchg
xor
add
fs
lret
sbb
inc
xor
roll
jmp
andb
pop
pop
sbb
iret
or
cmp
lret
sahf
rcl
inc
nop
out
mov
push
xor
add
mov
fdivp
subb
mov
inc
and
xor
push
test
cmc
es
jmp
jnp
ret
adc
add
cwtl
jns
mov
lret
add
or
jg
mov
jns
and
push
push
insl
cld
mov
int3
jg
pop
pusha
ds
mov
mov
call
inc
jnp
push
sub
mov
jecxz
idivl
dec
ret
out
adc
xchg
in
pop
jge
mov
ss
pop
cmp
sub
sub
push
stc
jl
push
jge
imul
mov
out
adc
popf
mov
jmp
loope
int
cmc
mov
scas
push
test
cmp
movntq
out
insl
add
pop
imul
push
cli
or
push
out
dec
mov
pushf
es
sbb
mov
nop
push
pop
xchg
xchg
mov
daa
pop
adc
cmp
arpl
or
sub
mov
sub
mov
cmp
ja
push
mov
testb
cs
sub
or
jo
dec
mov
divb
add
dec
adc
aad
jle
pop
pop
mov
out
mov
nop
aam
insl
les
xor
add
cmp
mov
and
popa
adc
pushf
mov
ds
scas
or
mov
aam
lret
stos
xchg
or
shrb
cld
or
fnstenv
push
lods
mov
xchg
adc
jp
adc
push
orl
xor
adc
fisttpll
sub
add
lret
test
repz
pop
shl
roll
inc
mov
insb
ds
ret
movsb
inc
insb
push
jp
in
leave
push
popf
fadd
ret
repnz
ret
nop
ss
xchg
dec
cmpsl
jns
aaa
push
js
bound
das
mov
jne
loope
sbb
sub
add
and
xchg
xor
lcall
add
mov
lcall
insl
pop
adc
mov
jmp
push
and
adc
pushf
iret
mov
pop
rorl
pop
dec
and
jbe
adc
pop
lret
andl
push
pop
rcrb
add
pop
sub
pushf
add
sub
iret
lret
lods
loopne
sbb
cwtl
loopne
xchg
push
popf
data16
std
sub
push
daa
adc
shlb
stos
push
testb
mov
int
testl
test
mov
and
pop
adcl
or
lret
mov
outsb
jp
mov
rcl
xlat
add
sbb
call
movhps
sbb
adcl
mov
adc
fidivs
mov
bnd
xchg
sub
fwait
sti
pop
mov
rorb
ja
pop
inc
adc
and
pop
cwtl
bound
das
xor
add
call
mov
fldcw
inc
into
imul
lret
icebp
sahf
inc
scas
test
pop
pop
add
jno
jnp
movsl
les
int3
pop
mov
ss
xor
push
outsl
mov
mov
mov
mov
in
fwait
repz
aas
fsubl
jo
mov
les
push
or
or
jb
mov
out
mov
xchg
sub
mov
sbb
pop
mov
lds
icebp
ss
sarb
in
clc
testb
in
cltd
xchg
and
pushf
cmpsl
dec
and
fwait
mov
imul
xor
test
sbb
pop
jbe
sbb
adc
jb
incl
push
jo
or
xchg
lods
pcmpgtw
inc
pop
popa
cmpsb
push
mov
orl
and
push
cmovne
call
lahf
dec
adc
in
shl
shl
pop
mov
sub
push
mov
mov
or
test
std
je
sar
ljmp
stos
fs
pop
ljmp
jnp
dec
cmp
outsb
incl
xorb
icebp
lret
mov
lahf
sbb
fwait
add
notl
jl
rolb
test
jecxz
ss
cwtl
lea
sbb
rcl
sub
adc
and
pushf
pop
or
repz
mov
dec
test
mov
inc
xor
movsb
movl
sbb
ficoms
dec
sbb
jle
aad
jecxz
cmpsl
imul
dec
mov
imul
push
and
jbe
repnz
in
imul
inc
sub
cmc
je
jo
je
or
sub
popf
das
mov
sbb
xlat
and
and
sti
mov
adc
scas
rcr
pushf
fwait
mov
fidivs
popf
test
addr16
call
xor
lahf
jle
pop
or
or
xchg
dec
rorl
mov
mov
mov
xchg
cmp
ljmp
aaa
out
add
or
adc
test
mov
insb
xor
add
hlt
cmp
pushf
testl
rcl
push
push
push
rorb
push
mov
pop
inc
imul
cmpsb
inc
xchg
sub
and
loop
call
pop
mov
push
sub
cld
pop
int
mov
sbb
fiadds
inc
mov
fwait
movsb
ljmp
cmp
aas
mov
rcll
mov
fwait
mov
outsl
push
push
pop
ficoms
pushf
pop
jb
jecxz
lahf
mov
rolb
jne
sbb
mov
xchg
xchg
jp
adc
add
xchg
sahf
fstps
int3
pushf
cmc
pop
fwait
cmp
or
repnz
and
mov
cmp
ret
mov
lret
icebp
mov
sub
inc
outsb
mov
and
les
jg
push
add
dec
aas
mov
ljmp
scas
jge
xchg
sarb
out
sbbl
sahf
das
fsubs
pusha
js
mov
or
cmp
push
sti
ret
lods
xor
cwtl
fsub
jbe
pop
mov
or
adc
fistl
inc
pop
push
cmp
imul
aam
adc
mov
lds
sbb
mov
lret
push
mov
dec
ret
das
mov
xchg
lahf
cld
adc
mov
movsl
sub
repnz
ret
movsb
mov
jns
pusha
jae
mov
scas
xor
outsb
mov
and
subl
or
mov
in
icebp
lds
stos
loope
adc
mull
fistpll
mov
cmpsl
xchg
stc
dec
ja
cmpsb
push
sbb
fldt
lock
sbbl
loop
and
pusha
iret
faddl
outsb
cmp
jbe
sbb
xchg
jg
in
mov
icebp
xchg
push
add
inc
das
insb
leave
cmp
jl
pop
pop
ja
adc
shrb
test
pop
and
testb
fimull
xchg
xchg
or
push
xchg
sahf
sti
shl
fisttps
adc
mov
insb
clc
mov
cmp
and
push
and
in
aaa
mov
das
aad
push
xor
adc
sbb
and
cltd
xchg
mov
xchg
jmp
cwtl
rorl
add
xchg
cs
mov
mov
call
repnz
int
sub
pop
cmpsl
shll
aaa
mov
arpl
scas
shrl
popa
out
test
mov
test
add
pop
sti
xchg
mov
add
out
fbld
mov
mov
mov
leave
inc
xor
out
int3
lret
dec
jno
jge
or
nop
insb
loop
stc
daa
nop
adc
mov
ds
sub
repz
sbb
cmpsl
test
ljmp
inc
repz
in
xchg
jmp
fdivl
xor
jp
popf
push
mov
mov
imul
shll
lret
mov
popa
jle
mov
mov
roll
test
rclb
or
data16
xor
mov
adc
mov
gs
lcall
out
add
flds
push
xchg
scas
imull
mov
int3
pushf
andb
movl
jne
int
jne
pop
daa
mov
fs
inc
mov
cwtl
mov
mov
sub
fldenv
pop
cmpsb
mov
insl
xchg
sbb
sub
idiv
ds
mov
push
test
lock
inc
xlat
xor
enter
adc
xchg
xchg
in
dec
mov
sbb
rorl
xchg
mov
cmp
in
pushf
inc
stc
push
add
inc
les
or
mov
inc
adc
inc
mov
ljmp
xlat
enter
rcll
les
sub
imul
inc
sti
sti
mov
mov
imul
insb
push
jmp
jae
pop
pop
add
sbb
sbb
mov
jne
andb
xchg
mov
outsl
nop
adc
les
mov
flds
pop
xor
or
add
mov
inc
mov
adc
pop
sti
xor
je
sar
mov
out
mov
scas
iret
sti
movsl
inc
sub
xor
dec
loope
jo
or
xchg
iret
xchg
adc
and
outsl
cmp
push
outsl
mov
fs
xor
enter
rorl
inc
push
adc
push
mov
pop
fadd
xchg
dec
sbb
bound
add
jne
push
cmp
push
or
test
sub
cmp
mov
jp
push
inc
aad
jne
clc
in
sbb
adc
dec
aaa
or
inc
jle
fwait
or
and
dec
bound
mov
in
in
call
lret
fildl
gs
fisubl
pusha
dec
add
popa
jle
mov
rorl
test
js
adc
inc
add
jg
loopne
scas
cmp
sbb
mov
xlat
ret
xlat
aam
add
push
pop
adc
inc
or
lock
dec
pusha
fwait
je
pusha
ror
push
push
xchg
dec
stos
lcall
jbe
cli
gs
jp
out
jae
ficomps
mov
loop
imul
dec
fwait
sbb
cmp
sbb
lock
mov
in
jg
out
ffreep
adc
in
inc
add
xlat
lret
out
cwtl
in
cmp
mov
inc
sbb
jmp
lret
scas
pop
dec
fdivrl
int
sub
cmc
adc
loopne
arpl
aad
push
es
dec
jg
in
sub
and
xor
xchg
or
xchg
or
fld1
sbb
adc
dec
adc
cld
setg
and
push
or
outsb
dec
xlat
jns
dec
addr16
jmp
sbb
icebp
jbe
jg
push
push
dec
mov
js
fiaddl
fstpt
imul
xchg
cmc
decl
push
ret
cmp
andb
push
inc
lret
push
test
addl
test
mov
stc
test
mov
incl
pop
out
push
jl
sbbl
fisubl
push
xchg
inc
sbb
mov
ret
repz
mov
fsubrs
mov
nop
cli
add
add
mov
fsubrl
push
data16
push
daa
mov
xor
mov
xchg
xchg
sti
or
push
loop
dec
lcall
mov
lret
pop
imul
sub
fldt
xchg
filds
mov
mov
pusha
mov
pop
loopne
add
neg
sub
sub
sbb
popf
jnp
mov
pop
lds
push
out
pop
jmp
repz
repnz
stos
notb
jb
push
xor
popf
jecxz
andb
into
imul
in
repz
jle
jbe
and
push
fwait
jb
lret
lcall
sub
mov
ljmp
rcrl
lret
dec
mov
jmp
lcall
rcrl
lret
loope
pop
mov
push
cltd
adc
or
out
sub
aas
mov
xor
sbbb
enter
pop
shlb
sti
and
nop
and
imul
icebp
pop
mov
ret
js
pop
int
push
push
push
sarb
ds
inc
test
ficompl
xchg
mov
aad
jns
pop
jp
mov
sti
push
push
arpl
jmp
sub
mov
mov
xchg
aaa
dec
mov
push
bound
std
stc
movsl
lds
dec
xorb
sbb
nop
adc
add
shlb
in
lret
mov
pop
or
jno
lahf
repnz
pop
loop
fisttpll
add
scas
cmpsl
sub
lcall
stos
cmp
jmp
dec
push
push
ficoml
dec
push
push
pop
out
adc
cltd
popa
add
into
mov
or
lods
insl
sar
fstl
js
cmp
or
std
into
pop
push
inc
jp
into
rorl
xor
in
xchg
dec
adc
nop
adc
ret
mov
add
fadds
fwait
aas
add
stos
lods
sub
loope
hlt
into
add
jl
negb
jnp
sub
outsl
das
nop
pop
cli
xor
push
dec
pop
sti
and
jb
cltd
push
push
adc
jmp
fadd
sub
dec
lds
or
xor
cltd
pop
roll
adc
dec
pop
sub
arpl
call
add
movsb
imul
imul
js
mov
sub
ret
les
adc
push
subl
jne
pop
gs
jecxz
mov
cltd
sahf
sub
loop
mov
test
cmpsb
mov
icebp
in
lock
push
fistpll
bnd
js
incl
fnstenv
push
inc
mov
fdivrl
cmp
lcall
mov
xor
aaa
ljmp
mov
sbb
and
jno
jae
pop
loopne
or
sarl
enter
mov
mov
insb
jl
xchg
loope
add
std
cmc
jmp
mov
inc
pop
xor
inc
cmc
sbbb
enter
and
push
mov
push
cltd
cmpl
mov
ret
aad
fstpl
dec
pop
jmp
mov
mov
ljmp
and
dec
enter
test
mov
add
or
arpl
dec
lcall
push
push
lret
inc
sbb
sub
xor
lcall
test
sbb
test
cltd
andl
iret
jbe
jecxz
dec
xchg
gs
pop
lcall
lahf
cld
in
push
fdivrl
dec
repnz
inc
lock
popf
mov
push
test
sub
cmpb
insl
in
cmp
mov
orl
push
jecxz
sub
out
scas
mov
call
addb
aam
imul
mov
push
cmp
jbe
ret
mov
mov
jo
sti
jne
inc
addr16
out
mov
xchg
pusha
fwait
xor
adc
pop
push
jle,pt
sub
cltd
xchg
add
jmp
jg
popf
lcall
and
sub
cmp
repnz
add
inc
rol
or
mov
loope
xor
or
adc
jo
lret
daa
mov
mov
enter
mov
jge
data16
xchg
arpl
pusha
cmp
andb
out
inc
adc
push
imul
pop
shll
mov
xor
or
lret
or
int
adc
jo
add
adc
cltd
aaa
out
push
inc
dec
adc
xchg
cmp
loopne
ss
test
mov
mov
xor
shrb
xchg
xchg
fsubs
lret
adc
xor
hlt
and
dec
and
push
xchg
fsubrl
jle
call
mov
jb
dec
fwait
sbb
ss
sub
jle
jnp
xlat
call
or
fadds
or
jle
xchg
inc
pop
pop
insb
push
jae
loope
pop
dec
jmp
pop
xor
rcll
es
test
push
test
inc
test
jne
push
insb
sbb
sub
mov
testb
push
add
sahf
or
pop
repz
mov
adc
sbb
mov
xchg
inc
add
cmpsb
mov
dec
pop
fdiv
xchg
repz
fsubrl
push
jne
mov
xor
in
dec
push
cmp
call
jae
rclb
fcos
sub
out
mov
xchg
jg
or
pop
mov
add
or
mov
cmp
enter
cli
popf
mov
decb
or
mov
mov
movl
nop
popa
mov
cltd
sbbb
cmpsl
mov
push
loopne
iret
sbb
mov
pop
scas
ret
ror
jg
xlat
fnstcw
cmp
leave
push
lahf
mov
xor
insb
jns
or
jno
adc
jg
ret
imul
adc
popf
mov
dec
out
adc
int
mov
enter
sub
xchg
push
repz
sbb
mov
nop
js
mov
jg
mov
mov
xchg
cmp
cld
idivb
xchg
and
outsl
mov
ja
xchg
popf
xchg
mov
xchg
mov
inc
popf
cmp
dec
cmc
xor
aas
xchg
leave
fadd
fsts
bound
push
cmp
add
lret
mov
add
call
cmc
ljmp
ficomps
addr16
adc
mov
out
stos
addb
xlat
div
xchg
ds
cltd
xchg
lret
outsb
in
fiaddl
loop
push
sarb
sub
and
xchg
mov
push
cltd
je
add
and
ret
adc
xchg
pop
inc
mov
sub
iret
cmp
xor
mov
xor
xchg
out
mov
push
sbbb
enter
cmp
lea
fbstp
mov
cmp
jae
push
mov
adcb
into
lcall
gs
lock
rolb
cld
js
dec
int
jge
sub
enter
fdivrp
jl
insb
jae
outsl
sarb
aaa
lret
mov
dec
fisttpl
popf
lock
jae
pop
jp
xchg
repnz
jp
lahf
andb
enter
push
mov
in
jae
in
jecxz
out
jo
movl
rolb
lock
dec
sbb
cmpsb
pop
jl
movsb
cmpsb
pop
inc
sarl
mov
hlt
sbb
call
adc
int3
push
scas
leave
sarl
insl
icebp
testl
bnd
jnp
sbb
sbb
cltd
jecxz
bound
bnd
push
adc
pop
push
add
test
pop
fstps
scas
dec
cltd
mov
sub
imul
jno
in
pusha
cmpsb
mov
negl
ja
lahf
daa
enter
imul
insl
aaa
int
cltd
xchg
xchg
out
jo
test
int
jp
xlat
ja
mov
lret
jne
push
jbe
sbb
fs
xor
adc
lret
cld
int
inc
mov
fadd
adc
mov
inc
dec
mov
jl
xchg
dec
iret
push
xchg
dec
mov
popa
arpl
ljmp
add
adc
test
insl
xor
emms
xorb
add
or
mov
pop
std
and
inc
and
daa
sbb
out
std
frstor
adc
dec
int
jno
pusha
cmc
pop
mov
mov
js
jge
adc
insb
inc
fildl
jp
int3
jno
stos
scas
sbb
cmp
dec
out
inc
enter
inc
movsl
pop
add
aas
mov
xor
inc
sub
pop
imul
push
lret
pop
xlat
insb
adc
mov
shl
loope
mov
cmp
xor
ds
jbe
test
or
bnd
sub
or
ja
inc
pop
push
nop
xchg
sub
and
mov
or
mov
sbb
mov
add
push
jno
mov
inc
data16
in
call
xor
xor
cmpps
jo
mov
sbb
mov
iret
and
cmp
mov
pusha
and
daa
jmp
ljmp
lcall
xchg
ja
mov
in
scas
clc
sub
mov
cli
out
sbb
int3
pop
sbb
add
xchg
fiadds
mov
jge
in
sub
jge
mov
cld
enter
rclb
rcl
sbb
hlt
mov
loop
scas
xchg
sbb
loopne
out
sbb
mov
addl
loope
push
loopne
xchg
or
insb
das
hlt
mov
xchg
das
pop
push
push
xlat
leave
sbb
cmp
cmp
adc
std
je
ss
or
add
hlt
mov
into
movsl
xchg
push
fdivs
movsl
dec
gs
stos
cltd
leave
sti
sub
or
jp
mov
pop
jb
call
icebp
fistpll
mov
call
pop
jl
sub
and
iret
xor
outsl
std
scas
and
push
movsl
mov
cmp
inc
push
or
stos
inc
dec
mov
pop
testb
mov
inc
cwtl
shl
adc
insl
jb
pop
or
movsb
in
fst
push
and
test
ss
cmp
scas
mov
sbb
sub
cmp
and
mov
cmp
xor
pop
mov
adc
pop
jle
into
mov
jge
push
into
mov
dec
shll
cmp
jns
sbb
inc
scas
and
sub
out
push
les
and
jns
push
sbb
jmp
lahf
jmp
lret
stc
cmp
outsl
aas
imul
add
iret
xchg
in
loope
mov
jecxz
xlat
cmp
or
imul
mov
das
sbb
loope
aam
pop
pop
fldlg2
xchg
and
sub
outsb
dec
aaa
fdivrs
lock
or
fwait
xchg
imul
push
cmpsl
test
pop
inc
arpl
lods
and
clc
das
mov
addr16
shl
inc
pop
dec
imul
sbb
gs
scas
mov
mov
push
sbb
and
repz
ja
sub
movl
adc
jnp
add
adc
mov
shrl
mov
pop
pop
jne
loopne
jp
xchg
daa
mov
leave
cld
popa
adc
sbb
jo
inc
pop
repz
rcrl
lods
push
cltd
jmp
lcall
cltd
jo
sub
cltd
sbb
and
lcall
jnp
xchg
repz
push
adcl
test
dec
iret
mov
push
mov
sub
jnp
inc
and
jle
ret
mov
mov
ficoml
outsb
push
pop
xor
mov
out
xor
fadds
jae
ss
xchg
push
cmp
les
pop
test
imul
jno
cmp
push
mov
or
pop
cmpsb
out
int
and
inc
jne
xchg
sub
pusha
lods
lods
repnz
mov
cltd
movsb
shlb
jo
inc
iret
dec
inc
clc
pop
movsl
jae
xchg
jo
xchg
cmp
orb
xchg
stos
xor
jmp
fcoml
test
dec
std
push
hlt
repz
js
xchg
jmp
lods
cwtl
mov
mov
out
shlb
mov
mov
hlt
add
jae
movsb
dec
cmp
movsl
sub
jecxz
test
ljmp
roll
jo
jle
pop
lods
mov
gs
adc
ds
pop
sti
push
mov
xchg
fsubs
shlb
mov
das
xchg
inc
cmp
iret
call
shll
push
jmp
jle
lcall
int3
shll
adc
adc
out
stos
mov
cmp
call
mov
dec
dec
cmp
outsb
cmp
cmp
mov
and
lret
movsl
xor
or
in
out
mov
jb
cmp
sti
loope
pop
repnz
or
jl
nop
test
insl
rcrl
jecxz
sub
test
je
sti
adc
xchg
jnp
inc
fdivl
xchg
mov
adc
test
out
sub
xchg
and
loop
ffree
pop
jae
pushf
fnstenv
arpl
jecxz
test
adc
add
mov
cli
push
popf
mov
xchg
push
dec
negl
inc
or
push
inc
leave
xchg
movsl
and
test
add
and
sub
ja
push
xor
orb
adc
rcrl
stos
test
xchg
mov
fmul
int
mov
sub
mov
add
push
scas
mov
mov
cld
jno
in
test
shlb
dec
lsl
jae
mov
divl
add
sub
dec
xlat
out
in
vhsubps
nop
jbe
mov
cmp
and
lea
mov
fstpl
jnp
pop
sub
inc
mov
xchg
rcrl
cmp
sbb
subl
sub
xor
and
mov
xchg
fnstcw
jns
dec
scas
push
adc
jo
jmp
jo
shr
addr16
iret
ja
lahf
sahf
loop
sub
rorb
cmpsb
arpl
cmpsb
call
cltd
ja
ja
add
ret
adc
bound
sbb
scas
loope
inc
mov
mov
cmp
dec
sahf
ret
ja
repz
add
push
int3
pop
and
test
jbe
xchg
ss
outsb
jbe
dec
cmp
mov
adc
test
cmp
mov
mov
xchg
or
jg
mov
push
cs
jne
nop
add
incb
out
lret
jp
lock
add
inc
push
repnz
lock
fisubrl
jne
sub
shl
and
scas
outsl
xchg
add
push
or
faddl
test
adcb
notl
movsl
jbe
fisttpl
or
push
pop
popa
sub
sbb
mov
pop
jecxz
push
xchg
adc
rol
gs
js
jge
mov
gs
mov
pop
dec
cmpsl
push
cmp
in
jmp
jo
xchg
xchg
std
fstps
fsubl
or
popf
les
xchg
push
xchg
rclb
mov
mov
cmpsl
inc
xor
push
or
or
xchg
daa
mov
hlt
or
imul
inc
clc
in
jmp
jbe
sub
dec
outsl
neg
shlb
mov
push
xlat
and
push
mov
ss
lea
lahf
jne
dec
and
scas
mov
xchg
push
into
das
sub
mov
push
jle
adcl
push
cmp
rorb
jg
iret
and
cmp
pop
mov
std
xlat
mov
mov
xchg
sti
push
ffreep
fildl
ss
adc
les
mov
hlt
outsb
xchg
mov
or
sub
xchg
scas
mov
outsb
or
pop
les
mov
add
rorl
pop
push
mov
iret
pop
or
xchg
cmp
jb
mov
arpl
or
mov
xor
adc
adc
iret
lret
mov
xchg
pop
outsl
sbb
push
mov
xchg
push
xchg
pop
and
and
pushf
cwtl
pop
std
cmp
int
andb
adc
xchg
cltd
mov
sub
sbb
insl
sbb
stc
out
fsub
roll
push
jl
sbb
adc
xchg
or
scas
mov
stos
popa
mov
mov
mov
mov
mov
mov
ret
mov
xor
sbbb
push
jae
insb
push
inc
push
stos
adc
call
xor
jbe
add
jle
insb
cmp
out
push
sub
cs
vpcmpgtb
mov
jnp
sub
dec
and
imul
loopne
jns
mov
cmp
push
jge
dec
mov
sub
in
xchg
loope
data16
and
cmp
aad
add
mov
bound
inc
out
ja
pcmpgtd
dec
sub
xlat
roll
loopne
rorl
jg
movsb
bound
xor
inc
xchg
pop
push
in
test
in
in
push
push
push
out
cltd
jge
scas
data16
enter
xor
into
gs
loopne
movsb
out
push
add
push
xchg
fsubl
pop
push
push
jae
inc
mov
and
mov
xchg
mov
jl
arpl
cmp
mov
push
mov
and
lcall
push
xchg
scas
inc
jo
cmc
jb
push
add
aaa
inc
adc
inc
jae
loopne
mov
das
dec
lods
jmp
pop
insl
and
pushf
decl
in
fidivrl
cmp
xchg
jae
fistl
pop
mov
lods
test
sub
and
sub
push
cmpsb
inc
fisubrl
scas
push
xor
into
rorl
movsl
loope
cmpb
in
fcoml
xor
hlt
les
pop
sub
xchg
es
outsb
in
iret
scas
sub
adc
push
or
mov
cmp
clc
sub
xorb
mov
fcompl
int
xchg
fwait
repz
mov
mov
inc
mov
sbb
popa
ret
out
xchg
arpl
pop
inc
jbe
das
pop
inc
xor
pop
lahf
adc
scas
repnz
and
cwtl
mov
outsl
mov
xchg
in
mov
inc
sbb
fdivrp
scas
cmpsb
addr16
sbb
leave
icebp
out
ret
popa
and
cmp
fldenv
mov
adc
sbb
imul
pusha
push
inc
jle
mov
clc
sahf
lods
mov
or
xchg
jae
sbb
sbb
mov
roll
mov
push
add
xor
sbb
aam
aad
xchg
push
cmpsb
clc
xchg
sbb
popa
xor
ja
popf
adc
cmpxchg
call
shll
sub
int3
test
adc
dec
jno
push
fmull
shl
mov
jmp
or
push
movsl
adcl
and
cmp
and
daa
and
je
pextrw
xchg
pop
adc
push
fcom
cwtl
fs
adc
shlb
xchg
in
sti
mov
insb
sbb
pop
xorl
sbb
mov
mov
cli
rorb
jle
sbb
sub
mov
aad
add
pop
push
ret
out
inc
mov
pop
jo
shlb
push
jno
enter
frstor
sti
test
and
push
lcall
scas
jne
lret
aaa
push
sti
out
jmp
add
iret
mov
inc
cmp
cmp
sub
or
sbb
mov
leave
xchg
loope
mov
ret
push
int3
mov
jmp
sbb
in
jae
dec
sub
xchg
mov
mov
xchg
sbb
idivb
pop
jo
addr16
inc
enter
adc
push
pop
add
jne
adc
sub
inc
inc
aam
jl
mov
clc
pusha
scas
bound
adc
xlat
jmp
inc
arpl
roll
sbb
xorb
mov
jl
rcr
xor
dec
add
cmpsb
test
imul
arpl
into
loope
insl
movsb
xor
int
jo
mov
outsb
or
and
popa
outsb
int
pop
push
mov
outsb
pop
ja
loop
mov
les
mov
scas
mov
shld
enter
pop
xor
inc
lret
inc
dec
in
rolb
mov
add
xor
mov
xor
outsl
or
and
push
xor
fwait
hlt
cli
ret
sub
xchg
mov
pop
push
push
mov
xor
mov
xchg
push
jmp
hlt
pop
movsl
push
dec
xor
xor
sbbl
sti
rcl
adc
lods
mov
loope
sub
push
mov
push
mov
fmull
add
out
js
dec
addr16
pop
seto
jo
out
pop
adcl
in
ss
mov
out
push
shlb
xchg
push
jle
cltd
sti
xchg
push
inc
adc
mov
sub
ret
dec
into
xor
xor
adc
or
sarl
mov
xor
std
enter
ljmp
fbld
in
mov
jmp
sbb
aam
xchg
xor
ror
lcall
xchg
iret
jno
aas
mov
jp
jns
adc
je
into
fistl
push
cli
dec
rcrb
adc
pop
mov
pop
add
insl
mov
jbe
push
jno
mov
and
mov
sbb
ds
cmpsl
mov
mov
stos
lahf
xchg
jmp
stos
jle
fimuls
jecxz
pop
mov
xor
inc
fsubrp
loopne
pushf
cmpsb
xchg
out
sbb
cmp
lock
pop
subb
push
pop
sub
shrl
pop
push
adc
inc
insb
inc
and
dec
inc
cmp
je
mov
lock
mov
out
and
dec
test
pop
lock
cmpsl
fisttps
xchg
dec
xchg
inc
sbb
push
mov
adc
mov
mov
pop
dec
push
je
jmp
stc
or
fdivr
or
int3
fs
mov
stos
cmp
adc
lock
xlat
movsl
sub
icebp
daa
icebp
out
lock
imul
shlb
mov
stos
adc
add
mov
mov
mov
dec
mov
in
add
out
test
leave
lar
fnstsw
orl
push
data16
fimuls
mov
push
sub
test
xchg
int3
cmp
sbb
xchg
xchg
push
push
dec
jp
stos
in
mov
xlat
push
sar
xchg
push
inc
sub
dec
xchg
mov
enter
adc
outsb
imul
mov
arpl
xchg
cwtl
in
outsb
cmp
xchg
cmp
and
mov
cmp
lods
dec
mov
sbb
pop
or
int
hlt
sbb
das
dec
stos
mov
and
push
out
sbb
mov
push
int3
and
insb
mov
pop
adc
arpl
mov
bound
sar
mov
xchg
clc
adc
je
or
aas
cmp
testb
out
mov
jg
in
add
into
xchg
inc
imul
pop
dec
sub
mov
out
out
int
incl
movsl
dec
push
lods
pop
sub
or
call
xchg
loop
xchg
negl
inc
or
add
clc
cs
add
ljmp
int
add
mov
inc
jge
xor
inc
cmpsb
movsl
shlb
pop
int3
rorb
loopne
jno
push
movsl
sub
and
fisttps
dec
inc
lahf
addl
mov
or
hlt
jb
mov
jne
inc
fcom
adc
dec
adc
lods
mov
daa
ds
call
mov
xchg
int3
int
cmp
jns
and
sub
rcr
lea
pop
jb
icebp
jo
sbb
fistpl
mov
sbb
test
mov
mov
fcoml
int3
push
outsb
jge
add
int
jbe
aaa
adc
mov
dec
jp
daa
hlt
gs
scas
pusha
lret
aas
test
scas
fistpll
sub
mov
dec
mov
mov
cwtl
movsb
movsb
mov
ds
pop
pop
sti
sub
jecxz
cltd
imul
mov
jp
push
call
push
mov
lods
mov
test
daa
adc
push
sbb
and
outsb
xchg
add
sti
cs
inc
lahf
and
inc
dec
fnstenv
sub
movsl
sbb
in
add
or
push
mov
add
fidivrs
fsubrp
mov
push
push
icebp
movsl
cwtl
jmp
and
and
ficomps
daa
insb
jle
aas
loop
mov
add
lods
dec
into
lds
fisttpl
outsl
loop
in
adc
cmp
push
sarb
test
fisubrs
sub
addr16
fldl
lret
inc
roll
shrl
ss
mov
inc
lea
jle
sbb
cmpsb
ljmp
or
test
outsl
cmp
lods
dec
pop
shrl
adc
pop
sub
push
xchg
mov
lock
loop
jecxz
daa
sbb
and
or
clc
jl
lds
push
mov
arpl
mov
popf
pop
not
scas
mov
imul
pushf
fimull
mov
int3
mov
sti
aad
jmp
aaa
jl
add
add
fcoms
pop
dec
inc
rcl
mov
push
mov
fucomip
cmc
movb
popa
inc
aas
ss
aas
stos
cmpsb
popf
sbb
daa
ret
mov
sahf
pop
iret
add
and
jo
std
inc
fstl
mov
jbe
icebp
mov
push
pop
mov
scas
mov
lcall
adc
loope
pop
out
test
xchg
or
shlb
aam
sbb
sub
sub
or
aam
jmp
pop
rclb
adc
xor
mov
jnp
mov
shl
sub
xor
mov
aas
inc
mov
jns
fildll
xlat
mov
add
popa
and
pop
sbb
or
lods
test
imul
xchg
out
lea
dec
insb
insl
mov
dec
sbb
cmp
pop
fcmovne
or
repnz
mov
jecxz
jmp
fsubrl
test
sbbl
lods
popa
aaa
pop
imul
fbstp
mov
leave
repnz
fldl
xchg
mov
out
pop
daa
mov
fcoml
jo
xchg
mov
sub
test
cmp
lcall
jmp
ret
lods
push
shrb
and
pop
push
cmp
lea
shlb
clc
dec
push
aam
mov
ja
hlt
sbb
jmp
add
add
mov
jecxz
fistpl
adc
xchg
adc
sahf
aaa
movsb
jg
mov
xchg
xchg
mov
int
mov
mov
sub
insl
pop
pop
lds
or
inc
insb
cmp
mov
dec
decb
xchg
inc
push
push
in
insb
jl
inc
test
xchg
pushw
inc
push
fwait
or
xlat
xchg
sub
mov
pop
subb
dec
and
add
rorl
cmpl
scas
xor
jae
xor
test
xchg
es
fstp
dec
xor
sub
mov
fldenv
mov
inc
add
adc
jo
xchg
adc
mov
insl
movsl
data16
lret
xor
sbb
rolb
je
gs
imul
mov
je
pop
push
mov
test
shl
lahf
fcmovu
cmpsl
push
sub
xchg
enter
std
mov
fdivs
cmp
or
adc
jae
xchg
or
ds
or
add
dec
push
mov
aad
shlb
jp
or
lahf
dec
inc
sub
or
mov
adc
pushf
mov
push
cmpsb
fsub
ret
cltd
mov
ss
ds
stos
negb
idivl
cmpsl
pop
mov
cmc
js
decl
andl
mov
in
sub
mov
fisubl
sub
js
cmp
jge
xchg
cmp
jne
pop
lea
ja
adc
inc
dec
push
sbb
pop
int3
add
sahf
shr
out
test
scas
cmp
mov
cld
mov
pop
xchg
inc
lods
cmpsl
fsub
das
ret
hlt
adc
or
sub
jae
push
insl
push
push
aaa
sub
mov
jns
add
adc
stos
lahf
push
sbb
cmp
jae
dec
push
lea
mov
dec
pop
outsl
repnz
mov
div
push
cs
inc
mov
mov
or
fsubrl
xchg
add
adc
out
hlt
adc
mov
in
fwait
in
or
sub
roll
or
repnz
cltd
xor
xchg
xor
out
lods
push
or
mov
pop
jbe
loop
fistl
mov
mov
xchg
shlb
adc
in
inc
ret
fldcw
int3
sbb
js
shrb
mov
adcl
out
out
mov
lret
lahf
inc
inc
push
lods
bound
mov
push
xorl
pop
sbb
or
test
jecxz
dec
mov
push
push
out
jge
js
or
adc
inc
add
jno
xor
or
loopne
imul
rcr
enter
cli
out
out
xchg
ret
pop
sub
mov
bound
stos
test
push
ret
jg
xchg
cmp
xorb
xchg
push
jbe
and
imul
mov
sub
sti
lret
pop
insb
call
jmp
adc
mov
xorb
dec
int
outsb
js
fnsave
lret
addr16
xchg
daa
cmpl
decb
add
ret
jb
mov
sub
mov
arpl
aad
leave
cs
popf
mov
sub
mov
or
add
lods
rcrl
adc
push
sbb
push
lret
xorb
subb
enter
mov
fwait
lcall
dec
cli
sbb
cmp
mov
lds
stos
push
sbb
inc
xchg
cmpsb
sbb
cmp
pop
imul
mov
test
adc
out
sbb
push
hlt
cmc
lret
lods
test
jecxz
mov
sub
push
mov
jecxz
popa
std
add
out
sub
dec
lods
aam
dec
cmp
add
xor
ret
cld
mull
fadd
rcrb
xor
rcrl
add
mov
enter
xor
ss
sysexit
dec
lcall
in
xor
mov
das
test
ret
in
cmp
jle
push
adc
jge
psadbw
movsb
dec
cmp
sbb
cmc
ja
inc
fs
dec
mov
stos
mov
xchg
mov
adc
call
push
ret
daa
jmp
lret
aam
cmpl
inc
mov
mulb
stc
cmp
cmc
jne
cmp
mov
cmc
sbb
xacquire
icebp
inc
push
sbb
xor
mov
popa
jnp
cs
xchg
mov
dec
sbb
dec
sbb
loopne
xor
mov
popa
lods
flds
adc
outsl
into
sbb
dec
ffree
push
push
std
xchg
xlat
jmp
ss
inc
lcall
jmp
enter
rcrb
fists
mov
xchg
aad
cwtl
xchg
test
and
outsl
jb
divl
mov
rcrl
adc
cs
adc
aaa
push
jl
test
or
add
outsl
sub
pushf
outsb
mov
sti
dec
das
jl
call
mov
sbbl
in
push
push
mov
nop
out
inc
and
ds
pop
aad
sub
inc
sub
in
test
sub
outsb
ljmp
mov
shrl
jg
push
jle
xchg
jl
inc
andl
adc
int
clc
in
imul
lods
pop
push
hlt
in
xchg
add
cld
push
jno
notl
sub
inc
push
lret
cmp
mov
mov
sbbl
fdivrl
cmp
push
pop
dec
andl
pop
je
popa
adc
mov
dec
movsb
lcall
fcoml
push
mov
mov
xlat
out
push
dec
dec
mov
inc
adc
imul
lahf
divl
pop
inc
or
into
or
clc
shr
stos
popa
cli
jp
sarb
bound
push
pop
mov
addb
ret
push
add
cs
xchg
stos
xchg
push
fistps
xchg
scas
xchg
lods
std
xor
shll
pusha
mov
push
and
lock
mov
sbb
clc
jb
mov
push
stc
add
inc
sti
push
mov
inc
adc
push
mov
jg
xchg
pop
movsb
out
dec
iret
cmp
hlt
mov
inc
frstor
leave
mov
pop
pop
rcl
je
mov
jo
xchg
add
imul
xor
or
xor
xor
add
rorb
int3
xchg
mov
xchg
fs
jae
inc
push
mov
mov
xor
inc
out
cmpsb
rorb
imul
aaa
fnstenv
add
call
je
arpl
xor
mov
push
lea
sbb
push
adc
outsl
add
cmp
ficomps
cwtl
insl
and
test
mov
xchg
and
dec
inc
xor
lds
movsl
jno
ja
or
push
loop
lea
mov
movsb
iret
jmp
test
xchg
jecxz
repz
jns
into
test
roll
ret
fwait
mov
pop
cwtl
mov
dec
jge
sbb
pop
sub
mov
cmp
fs
outsb
dec
clc
fucomp
cmpsl
dec
xor
cmc
cltd
jo
out
setge
add
rcrb
lret
mov
aas
lods
testb
push
loopne
rcr
dec
jns
test
adc
fwait
adc
jl
js
cmpsl
push
adc
sub
rol
adc
mov
mov
cmp
xchg
xor
add
test
cmpsl
xchg
push
scas
into
push
cmp
pushf
cs
cmpb
lock
les
in
ds
insb
sbb
xchg
pop
push
mov
jp
clc
jnp
lods
fstps
mov
jp
mov
loopne
loop
rorl
jnp
mov
push
xchg
ret
mov
repnz
ret
push
xchg
push
hlt
adc
lock
leave
jb
mov
loopne
bound
mov
idivb
sbb
mov
jl
add
insl
add
xor
js
outsb
mov
ja
inc
stos
je
leave
cld
call
fdivs
pop
iret
xchg
ds
push
dec
push
sahf
pop
or
lahf
int
hlt
mov
add
aaa
sti
lods
test
mov
lcall
out
ja
lods
mov
push
je
adc
and
inc
add
out
mov
and
dec
mov
mov
cs
mov
lcall
sub
dec
mov
ret
pop
scas
xor
cld
sub
push
ja
xchg
in
inc
push
jl
push
or
adc
imul
clc
jmp
mov
mov
fldenv
xchg
ret
ja
js
pop
sbb
push
scas
add
iret
fsts
repnz
cmpsb
push
mov
inc
mov
dec
or
push
dec
jle
imul
and
insb
clc
jno
cmc
add
xchg
mov
mov
mov
js
push
push
add
in
lcall
aas
sti
loopne
iret
or
pop
cltd
xchg
push
cld
mov
fcoml
mov
movsl
push
loop
and
jae
sub
sub
out
and
xchg
jb
cmp
or
insl
popf
outsl
push
pusha
lock
mulb
mov
push
addr16
pop
scas
mov
push
cmc
stc
cmpsl
inc
rcr
dec
xchg
sbb
cltd
pop
xor
imul
adc
clc
aad
mov
incl
loope
cmc
out
adc
insl
xchg
and
xchg
stos
and
loopne
icebp
dec
std
jg
pushf
fcoml
es
pop
iret
add
sbb
xor
test
mov
mov
sbb
rclb
pop
push
inc
add
jb
xchg
xchg
pop
cmp
negl
lret
pop
xchg
sbb
and
and
mov
andl
mov
je
or
stc
shlb
and
push
mov
mov
inc
popa
xor
add
cltd
daa
jl
cmpsb
leave
cmp
xchg
lret
ret
mov
or
mov
ror
push
lret
jae
scas
add
addr16
push
dec
xor
aad
pop
cs
clc
add
mov
mov
mov
rcl
fsub
xchg
mov
fwait
out
mov
and
push
sub
jmp
push
lahf
clc
test
icebp
adc
repnz
sub
nop
fs
xor
pusha
cmc
pushf
lahf
out
dec
stos
in
sbb
scas
insl
cmp
in
jo
mov
pusha
loope
push
loop
push
out
mov
mov
mov
xchg
xchg
xchg
clc
imul
sbb
pop
cmp
pop
jae
mov
sub
mov
popf
dec
or
push
xor
or
ret
scas
shlb
or
and
mov
pop
cltd
inc
lea
test
dec
push
mov
idivl
inc
movsb
pop
outsl
or
dec
sbb
out
pop
push
jp
stc
in
clc
push
popa
and
popa
cmc
sahf
mov
bound
mov
fnstsw
sbb
cwtl
in
fsubr
out
int3
and
xchg
popf
fidivs
mov
enter
decl
or
icebp
jmp
adc
pop
aam
mull
fidivl
packssdw
pop
sahf
sti
outsb
xor
cmp
xchg
jb
cmp
fwait
jl
movsl
adc
call
subb
and
add
rep
and
mov
xor
movb
ficoms
js
int
bound
mov
addl
movsb
sub
xor
loopne
inc
lret
pop
mov
sbb
or
cwtl
xlat
jnp
push
aaa
lds
mov
xorb
test
sub
push
jne
nop
mov
ss
out
jp
sarb
imul
and
loopne
cs
inc
mov
ljmp
jno
divb
roll
dec
dec
mov
arpl
push
inc
out
andb
jo
mov
mov
pop
sbb
or
sahf
rcl
push
lods
insl
inc
fadd
sub
aas
mov
imul
jp
fmull
das
stos
dec
insb
or
cmp
cmp
add
or
dec
adcb
test
push
fcmovnb
pop
shlb
ret
cld
jno
icebp
mov
int3
mov
aas
dec
dec
nop
adc
imul
push
es
xchg
dec
xor
xchg
std
or
out
insb
push
jp
add
adcb
xchg
cmpsl
test
jp
sub
xchg
jecxz
or
adc
cmp
stos
call
jg
cmpsl
inc
push
stc
xor
sbb
cmp
add
mov
push
fisubl
je
pop
sbb
add
jg
inc
insb
jge
xlat
xor
cld
pop
aam
ret
mov
iret
adc
pushf
je
xor
leave
pop
mov
into
push
outsb
xchg
fcomip
les
sub
mov
ss
xchg
int3
sarl
sbb
dec
push
fs
push
call
xchg
inc
loope
jo
add
sub
pop
cmovae
jl
out
xchg
ja
cmpsl
call
in
out
iret
inc
jb
repz
jo
jmp
in
daa
pop
pop
outsb
rcl
imul
aaa
pushf
add
loope
add
mov
push
mov
mov
pop
insb
push
jge
xlat
mov
push
popa
mov
subb
mov
and
ret
adc
jg
dec
jecxz
loopne
aas
sbb
fdivrp
pop
out
adc
loopne
call
jg
mov
subl
cmp
scas
xchg
lods
testb
fsubrl
shlb
xor
in
or
pusha
xor
push
scas
mov
inc
add
jg
add
lret
in
mov
rolb
mov
fdivl
lods
aad
add
xchg
inc
or
inc
adc
int
mov
inc
add
cmp
push
mov
pop
mov
inc
imul
jmp
mov
mov
out
xchg
ret
jecxz
leave
jmp
lret
sub
lods
mov
dec
dec
sti
daa
pop
xchg
sub
pusha
and
xchg
adc
jecxz
test
mov
sub
mov
xor
adc
xor
int
ja
mov
aaa
lea
repz
fmuls
xchg
lock
int3
adc
outsl
xor
addr16
pop
lods
std
xchg
daa
cli
pop
movsl
sub
xchg
nop
pop
bnd
sub
xor
hlt
cmp
pushw
lret
mov
lods
jb
pop
mov
int
fsub
xor
mov
sarl
fldl
or
or
mov
and
and
popa
scas
xchg
in
cld
push
ljmp
fcompl
pop
dec
pop
jmp
fildl
inc
xor
loop
add
stos
mov
mov
int
ss
jge
dec
imul
test
cmp
cmp
and
fcoml
and
fisttps
cmpsl
in
cmpsb
jae
cmpsb
xchg
ret
fistl
into
push
pop
ds
sub
jl
mov
loopne
inc
dec
pusha
sub
lret
push
ss
inc
jns
mov
int3
sahf
fst
mov
xchg
jmp
nop
dec
sub
sub
aad
ds
gs
add
adc
mov
cmc
or
out
ljmp
or
mov
jecxz
call
int
ja
addr16
pop
rorb
lock
pop
into
inc
or
add
mov
test
xorb
fisubs
adc
into
test
out
das
stos
je
jb
pop
add
jge
lcall
into
stos
imul
insb
enter
inc
jg
jge
xor
jb
in
pop
add
push
mov
mov
fnstcw
cmp
inc
ljmp
mov
pop
sbb
sbb
mov
push
inc
in
push
cmp
xor
mov
fsts
lea
xchg
cmp
jbe
ljmp
ret
leave
loope
mov
xchg
mov
call
mov
cmp
cs
jno
sub
movsb
fistpll
filds
inc
hlt
mov
sub
push
xchg
fiadds
jb
ds
lea
test
in
and
or
outsl
pop
roll
pop
fwait
insb
mov
xchg
cld
fstp
dec
push
shll
cmpsb
sbb
adc
mov
ljmp
lret
sub
jae
arpl
lret
lcall
ljmp
fildl
mov
pop
lock
jl
mov
cmp
imul
movsb
popa
pushf
insb
mov
mov
loop
leave
test
lar
gs
and
mov
jmp
out
loope
dec
mov
out
mov
push
jne
mov
dec
icebp
pop
push
sub
jno
or
sahf
hlt
pop
mov
cmpb
ja
dec
gs
pop
inc
or
inc
push
cld
jno
test
sub
jmp
adc
jle
pop
rorl
dec
roll
pop
push
aaa
sbb
adc
xor
jecxz
mov
lahf
fnsave
cmpsb
test
sub
push
xchg
dec
fcomp
mov
pop
iret
cmp
sbb
fadd
xchg
mov
push
scas
adc
fcoms
jg
ds
je
rcll
mov
xorb
mov
sub
sub
add
loopne
enter
mov
scas
shrl
in
into
cmp
insl
push
or
iret
rcll
mov
mov
lea
fistps
xor
cwtl
pop
jmp
or
push
ret
jl
rolb
jns
or
push
outsb
mov
jbe
dec
jp
jb
jg
aas
std
pop
imul
imul
mov
xlat
pop
call
nop
xchg
pop
jl
fistpl
pop
or
xor
aad
cmp
aaa
mov
aaa
insl
fidivrs
loope
cli
in
dec
push
lret
dec
push
mov
in
fwait
and
inc
fimull
inc
stc
dec
dec
orb
stos
outsb
outsl
push
into
imul
mov
daa
lcall
xchg
sub
and
outsb
xchg
sub
sahf
and
int3
aam
and
leave
stos
mov
xchg
or
dec
mov
imul
cmpl
sti
pusha
fisubrl
push
jb
int3
xchg
les
mov
lea
rcrl
mov
mov
dec
cmp
inc
inc
and
xchg
lods
icebp
arpl
push
mov
movsl
inc
cmpsl
dec
fcomi
in
jg
jno
icebp
aad
cmpsb
into
push
shll
push
daa
fdivs
cltd
push
nop
xor
andb
jg
rorb
push
mov
inc
xor
sub
jmp
icebp
popf
inc
xchg
lds
iret
outsl
ljmp
fbld
stos
pop
shr
jp
push
lods
mov
add
sbb
shll
test
mov
cs
inc
fs
jge
int
cltd
mov
test
jnp
pushf
nop
mov
sub
mov
sub
mov
inc
cs
cmp
inc
mov
sub
hlt
xlat
jnp
jne
ljmp
fs
or
lret
in
or
xor
dec
jnp
push
in
fimull
std
fs
mov
adc
jo
push
push
cltd
lock
and
xor
sub
or
stos
je
jbe
inc
mov
lds
xchg
mov
js
fs
xchg
pop
mov
mov
negb
and
push
dec
sub
lock
loope
in
adc
sub
data16
push
xor
inc
sub
sbb
insb
loopne
pop
mov
movsl
aas
subl
bound
scas
xchg
push
mov
aas
xor
and
pushl
repz
or
shrb
xchg
mov
mov
sbb
cmp
enter
dec
std
cs
add
cmp
pop
clc
loopne
push
dec
xor
lret
test
out
pop
dec
imul
xchg
add
xor
mov
imul
sub
mov
arpl
icebp
add
arpl
shrb
push
cld
sbb
xor
pop
inc
pop
inc
mov
ret
int3
ss
bswap
xchg
cmpsl
testl
movsl
mov
out
push
pushf
out
popf
push
cmpsl
lahf
xchg
add
fimull
cmp
and
loope
push
push
pop
lret
sti
push
out
cmc
mov
enter
inc
pop
fucomip
inc
push
leave
rclb
arpl
cmpb
sbb
enter
xor
clc
jecxz
fdivrs
pop
jbe
dec
dec
shlb
lock
inc
jne
sub
nop
std
xor
scas
jnp
dec
cmp
fsubl
fsubs
jmp
dec
bound
xor
or
repnz
icebp
xor
jge
dec
test
sti
pop
fistps
xor
jmp
in
gs
cmpsb
xor
testb
fildl
sbb
cltd
lahf
jmp
repz
mov
and
loope
cmp
cmp
int
aaa
nop
fs
aad
sub
xlat
jno
pop
pop
inc
call
pop
iret
mov
push
lock
jne
lret
push
push
iret
test
lea
int
sub
lds
adc
pop
push
andb
cltd
scas
inc
gs
or
jae
push
les
jmp
lock
lret
test
mul
push
cld
mov
and
cmp
or
mov
out
dec
popf
int3
je
test
adc
pushf
out
mov
in
and
jmp
aam
sar
add
mov
pop
arpl
sbb
jne
cli
cmp
sahf
and
cs
pop
dec
push
pop
orb
aam
or
in
adc
cmp
xchg
adcl
nop
sbb
mov
and
cld
pop
adc
sti
and
cmp
sbb
xchg
test
lods
fdivr
je
xor
mov
scas
in
popa
dec
inc
loopne
gs
jae
inc
cli
pusha
mov
fiaddl
jmp
faddl
nop
or
and
jnp
dec
fsubrs
movsb
jbe
fidivl
jp
ss
lret
cwtl
xor
mov
int3
sub
add
sarl
das
ret
ja
lret
and
ret
xor
jae
aad
pop
jo
outsb
daa
or
xor
mov
jo
fbstp
mov
lea
aam
cmp
icebp
call
mov
es
fmul
inc
in
fsubl
outsl
xchg
in
dec
in
clc
cmp
sbb
dec
pop
push
idivl
popf
inc
test
aas
movzbl
sub
js
mov
xchg
dec
out
fwait
cmp
mov
jecxz
insl
ljmp
fisttps
mov
test
fnstsw
test
mov
push
mov
xor
inc
xor
jp
mov
lret
jge
pop
sbb
xchg
sbb
mov
inc
in
loopne
sahf
or
lds
xchg
cmp
mov
int
les
xchg
sub
jg,pn
jmp
cmp
popf
test
comiss
stos
jns
decl
push
mov
mov
out
lahf
loope
add
int3
inc
mov
jne
jae
jp
sub
movsb
call
int3
scas
cmpsb
rcll
out
out
es
add
scas
popa
out
sbbb
stc
add
cli
imull
sbb
xchg
xor
lret
jmp
pop
xchg
xchg
jmp
cwtl
fstl
movb
cwtl
push
enter
cmp
lods
call
sub
enter
cwtl
dec
mov
in
adc
test
fisttps
gs
push
and
inc
clc
in
shll
fstps
addb
or
pop
push
pop
xchg
dec
cmp
mov
or
or
jge
enter
hlt
dec
mov
jne
mov
jp
or
lret
scas
test
jne
cltd
mov
push
dec
xchg
mov
xchg
mov
mov
cli
jbe
mov
andb
or
std
mov
dec
scas
mov
pop
pop
jns
and
scas
mov
or
loope
pop
push
sbb
fldcw
js
pop
pop
cmpsb
or
mov
ss
dec
sbb
push
test
je
mov
inc
pushf
xchg
into
rcll
pop
pop
jl
xchg
or
aam
or
ret
sbb
pop
or
ds
or
sub
dec
adc
loop
dec
jne
test
mov
mov
daa
mov
jne
adc
jae
repnz
or
inc
int3
fimull
and
sbb
aas
add
jge
lcall
mov
dec
aaa
popa
or
lea
xor
shrb
push
mov
xchg
push
mov
roll
xchg
or
hlt
lcall
cmpsl
test
mov
scas
pop
sub
jae
push
adc
mov
add
cmp
pop
inc
cmpsl
loopne
std
lcall
push
outsl
jb
add
mov
out
mov
push
sbb
lret
in
push
xchg
xor
xchg
inc
ja
enter
sub
loopne
sti
adc
push
outsl
leave
popf
dec
ret
sub
push
inc
add
repnz
push
stc
xor
out
rolb
js
dec
sbbl
subb
add
mov
clc
aam
add
pushf
pop
mov
pop
insl
jbe
xchg
sbb
mov
mov
mov
cld
ret
sbb
sub
xchg
mov
mov
mov
xchg
jo
pop
cs
iret
shll
jnp
add
cmp
arpl
mov
mov
rcrl
mov
fucomi
lds
push
and
jmp
outsb
ss
mov
push
and
in
inc
ljmp
cmpl
lds
jbe
mov
push
xor
inc
mov
fcomp
in
mov
mov
sub
cli
jge
lea
popf
mov
scas
mov
push
ret
cltd
dec
aaa
hlt
shrb
rcr
fstpl
dec
das
xor
in
xchg
sub
mov
sbb
cmc
int
enter
stos
lret
repz
and
pop
ror
fldenv
das
ficomps
xor
xor
lds
out
push
add
fsubl
push
cld
roll
or
dec
fyl2x
adc
loopne
je
mov
mov
xor
inc
mov
dec
int
sub
xchg
lds
add
scas
sub
sbb
filds
sbb
dec
repz
enter
mov
or
test
jmp
lahf
subl
es
in
outsb
cmp
inc
fistpll
loop
inc
mov
push
in
push
jl
pop
mov
push
mov
sub
mov
mov
pusha
cmc
mov
aas
sbb
adc
enter
add
push
push
rcl
push
or
sub
jo
xor
pop
ds
xor
or
hlt
fmuls
dec
dec
mov
mov
push
xchg
push
adc
insb
in
sub
push
push
or
pop
sbb
or
xlat
dec
subb
into
jne
enter
mov
sarl
mov
xor
xor
jle
mov
imul
subl
fs
add
out
inc
xchg
mov
cltd
dec
lret
jp
push
subps
loopne
arpl
dec
cwtl
pop
stos
push
cs
std
mov
cs
fsubrl
pop
mov
js
out
inc
pop
mov
xor
gs
hlt
adc
jge
pop
shlb
pop
fistl
fdivrl
inc
adc
mov
jg
mov
test
bound
call
std
fiaddl
loope
xchg
push
pop
inc
sbb
xlat
push
sbbl
sub
loope
jl
loope
add
test
jecxz
inc
or
pusha
fst
mov
mov
jbe
cmp
imul
mov
jne
cmc
aad
adc
das
adc
dec
xor
femms
mov
std
lcall
push
mov
lods
cmpsb
in
cmc
out
jmp
push
jns
mov
pop
xchg
rcrl
ja
jo
lret
cmp
popf
int
das
pusha
cmpsl
cmc
xchg
cwtl
xchg
loop
push
jnp
sti
stc
lahf
dec
movsb
test
ret
and
shlb
mov
cmpsb
dec
mov
jb
and
sbb
out
les
jp
andl
jmp
ja
cmp
jo
lcall
dec
jle
ja
jb
jp
stos
mov
lahf
ja
fdiv
loopne
pop
dec
in
fadds
inc
jp
stc
lcall
mov
pushl
test
pushf
bound
fdiv
iret
fcoml
dec
rcl
and
cmc
adc
adc
insb
cmpb
iret
mull
adc
jbe
lock
popf
pop
imul
push
or
mov
inc
lock
cmp
leave
out
and
out
aaa
ret
add
pusha
loope
push
ss
mov
mov
cmpsl
popa
sub
mov
sti
dec
shrl
mov
ss
cmp
pushf
dec
mov
sub
testb
into
pusha
test
xchg
das
inc
inc
sub
repz
xchg
mov
or
sbb
xchg
aas
mov
xor
xchg
dec
push
or
mov
out
int3
jbe
add
out
pop
out
jns
jmp
add
in
and
adc
xor
imul
xchg
xchg
ds
gs
pop
inc
movsb
js
lds
dec
sbb
jg
push
dec
pop
mov
lcall
inc
and
js
xchg
fstl
fisubrs
mov
cmp
xchg
mov
je
out
into
cltd
pop
fnstcw
int3
jp
fwait
or
inc
sbb
mov
cmp
scas
aaa
out
sub
jg
int
add
lcall
out
mov
lock
jb
lock
sbb
inc
adc
mov
das
mov
inc
outsl
fsubrs
xlat
fs
xor
inc
sbb
enter
imul
sub
mov
in
inc
xor
sub
aaa
push
les
cmp
fst
or
cmp
xchg
testb
or
fsubs
out
aad
push
in
add
sar
scas
fidivs
and
jbe
or
imul
xor
lods
add
pushf
adc
sbb
icebp
and
mov
repz
dec
data16
add
das
es
bound
imul
jg
inc
push
mov
push
sub
fcompl
lock
in
pop
mov
xor
and
jae
scas
sub
pop
add
pop
cmp
addr16
jnp
mov
mov
and
out
jmp
jns
inc
jae
sbb
mov
inc
ja
movsl
stc
testl
sahf
push
testl
fwait
push
pusha
xor
les
mov
mov
jne
call
fcomps
cmpsb
lcall
mov
clc
dec
cmc
cmp
mov
or
xor
or
ficoms
pop
jnp
aad
dec
orb
mov
jp
aaa
sbb
movsb
sar
dec
in
or
xchg
sbb
clc
pop
std
mov
shll
xor
add
push
mov
add
pop
push
outsb
fcoms
fimull
xor
jbe
adc
ljmp
cld
xchg
and
pop
out
push
in
ss
and
inc
push
loopne
add
mov
mov
mov
mov
ret
fs
or
bnd
arpl
mov
or
or
xlat
push
adc
xor
insl
arpl
adc
and
mov
xlat
ljmp
dec
test
stos
lea
xor
iret
pop
repz
cmpsl
lret
mov
dec
idivb
rcrb
scas
adc
jne
div
test
jl
push
dec
add
out
mov
mov
cmp
inc
leave
sbb
sub
sub
arpl
out
ljmp
mov
das
pop
rcll
xchg
dec
mov
scas
inc
cs
fwait
sub
mov
mov
xchg
inc
mov
lret
in
xchg
aad
mov
pop
ja
jecxz
pop
or
mov
loop
jecxz
dec
sbb
mov
stos
mov
jb
xor
sbb
lahf
add
fiadds
push
sbb
pop
adc
sub
jae
out
hlt
push
xor
out
mov
push
mov
repnz
jb
std
pushf
out
pop
pop
jo
popa
pop
std
imulb
push
insl
cmp
aam
aam
and
xchg
or
xorl
and
mov
pop
push
outsb
stos
push
addl
mov
push
mov
add
xor
adcl
out
into
fcomi
stos
or
or
clc
push
mov
push
lret
xlat
xchg
arpl
xor
inc
xor
movsb
mov
sarb
add
push
lahf
fsubrs
sub
nop
jge
mov
or
je
inc
mov
mov
aaa
cli
test
mov
adc
lcall
inc
orl
sbb
jne
mov
imul
inc
and
mov
cmp
jno
adc
adc
push
jmp
popl
push
roll
sub
dec
pop
fstps
lret
fistpll
and
xlat
arpl
dec
pop
jb,pt
jp
shll
xchg
filds
jle
push
into
push
adc
mov
arpl
daa
and
xchg
and
fstpt
mov
fadd
sub
add
mov
pusha
and
data16
pop
jg
jne
dec
in
sbbl
sub
jge
std
add
enter
dec
std
xchg
stc
mov
xlat
cmp
mov
bound
ljmp
add
pop
sarl
sbb
in
jns
adc
xor
out
mov
pop
stos
gs
mov
scas
fsts
outsl
mov
repz
lea
mov
popa
jnp
sbbb
fdivrp
xchg
sub
dec
cmp
sbbl
push
add
xchg
jecxz
lcall
cwtl
jae
imul
mov
hlt
scas
xor
imul
push
arpl
sub
fadd
mov
out
mov
push
pop
fisubs
dec
pop
mov
mov
loop
mov
push
mov
jge
sbb
iret
sar
popf
ds
in
fdivl
clc
pop
mov
add
pop
push
lods
in
sub
negb
jnp
cltd
add
clc
rol
fldcw
jle
push
and
lea
push
xchg
dec
add
inc
dec
loop
aad
pop
mov
sarl
lock
or
and
ret
xor
mov
out
movsb
push
push
sub
ss
fisubrs
mov
sub
aad
cmp
push
jle
push
dec
aaa
xor
popa
lahf
in
xor
mov
test
adcb
cmp
stos
pop
jo
lcall
add
movsb
xor
jbe
cmc
cmp
outsb
rol
mov
out
xor
in
fdivrs
dec
jbe
mov
push
lret
and
xchg
lret
inc
pop
jb
int
jno
cs
jb
fidivl
adc
loop
ljmp
inc
stos
or
cld
or
pop
loop
inc
or
sub
lods
mov
lock
mov
bts
mov
cmpsl
xor
and
into
jne
dec
and
imul
mov
or
int3
das
fistpll
loope
mov
cmp
clc
inc
dec
cmp
lahf
fxtract
fwait
xor
xchg
gs
mov
inc
shrb
gs
lods
addr16
pop
out
xor
pop
mov
addl
inc
jge
mov
test
mov
cmp
sahf
fimull
cmp
adc
adc
jl
cli
lcall
stos
cmpsb
cmp
sbb
sbb
jne
jge
out
mov
cltd
push
out
int
test
xor
rcrl
aad
jo
andl
mov
xor
mov
lret
iret
push
sbb
fidivl
pop
mov
sub
out
jns
test
pop
jmp
sahf
push
sarl
jmp
adc
mov
xchg
mov
rcrb
xchg
mov
cltd
out
lods
inc
rorl
push
jb
mov
sbb
loopne
addr16
mov
test
push
inc
clc
pop
sahf
sti
push
xor
add
cltd
int3
sbbl
je
rcl
dec
outsl
pop
popa
push
ds
outsb
dec
aas
aad
xchg
movsb
idivl
add
cmp
bound
cld
test
cltd
std
rclb
pop
jne
lock
lods
xorl
pop
jle
lret
arpl
int
cs
jo
out
inc
and
and
daa
fnstcw
loope
mov
sbb
inc
insb
mov
call
pop
mov
sub
dec
js
ljmp
inc
jo
cmp
mov
lods
lret
xchg
dec
push
mov
mov
cli
sbb
or
cmp
repnz
icebp
subl
outsl
jo
dec
push
movsb
inc
fnstcw
xchg
sub
mov
add
sub
jge
xchg
jecxz
jmp
das
jbe
push
inc
mov
ret
cmp
mov
mov
sbb
ja
fsubrl
loop
xchg
dec
loop
cs
int3
sarl
xchg
xor
movsb
movsl
sbb
inc
cwtl
fisttpl
dec
mov
outsb
daa
cltd
and
xor
inc
ljmp
gs
orb
dec
pop
sbb
jg
aad
push
into
ja
mov
pushf
cld
cli
pop
addr16
pop
jmp
mov
mov
mov
jns
xchg
mov
pop
xchg
sub
jae
fsubr
sar
outsb
mov
jae
fs
and
and
daa
sub
xor
cltd
dec
inc
jecxz
bnd
cltd
xor
insb
shll
bound
into
call
inc
sbb
or
call
fwait
push
adc
iret
sub
gs
fst
idivb
sbb
data16
leave
xchg
mov
cwtl
push
pop
scas
aam
dec
or
ds
repnz
mov
and
inc
sbb
pop
lods
imul
jle
out
mov
loope
pop
mov
insl
push
jo
loopne
mov
outsl
test
xor
rcrb
loop
mov
stos
jl
mov
popa
push
dec
or
sti
jo
jmp
jns
push
inc
mov
jbe
outsl
shlb
insb
push
xor
mov
pop
scas
push
mov
mov
addr16
xor
mov
test
jae
popf
push
mov
cmpsb
push
outsl
mov
add
outsb
lret
cwtl
dec
insl
imul
push
scas
cmp
and
mov
mov
and
fs
mov
sub
jnp
filds
dec
jmp
lcall
mov
mov
inc
cmp
ds
cs
adc
dec
sbb
sub
xlat
imul
and
out
inc
jp
mov
mov
js
pop
repz
sahf
in
inc
xor
xor
loopne
test
dec
push
arpl
dec
ss
cmp
dec
xchg
jo
cmp
jl
xor
insb
jecxz
ret
pop
dec
loope
sub
pop
lret
stos
les
mov
pushf
ss
iret
xchg
sbb
aaa
xchg
shl
mov
repz
inc
hlt
ret
dec
pop
push
rcrl
and
mov
popa
push
in
in
sbb
adc
je
adc
and
test
ds
pop
jo
inc
scas
sarl
fbstp
jmp
mov
push
jb
rolb
cmp
add
test
test
push
mov
fiadds
int3
pop
stos
in
and
mov
rcll
jns
or
inc
je
inc
ret
jp
imul
or
out
aaa
repz
adc
push
lret
out
fisubs
sbb
inc
sbb
mov
mov
scas
jle
ds
jne
xchg
test
imul
jge
or
pusha
jne
shrb
push
inc
ss
or
push
test
dec
nop
leave
mov
rolb
and
pop
xor
push
fiadds
jnp
cmpsb
push
adc
push
and
pop
jae
imul
outsb
xor
loopne
push
mov
int
ret
cld
aad
sbb
pop
push
cmpsl
cmp
sub
fwait
add
fistps
add
add
popl
mov
andb
loope
jmp
push
sub
stc
push
mov
and
cmc
and
les
mov
fidivrs
mulb
je
add
enter
inc
rcl
mov
mov
das
ja
sbb
xchg
aas
mov
repnz
dec
scas
sbb
pop
dec
mov
cmp
mov
or
les
mov
mov
jge
jnp
aam
cmp
addb
push
push
mov
xor
lcall
popf
pop
sbb
nop
mov
jnp
imul
fbstp
and
add
dec
js
stos
sbb
xor
fdivrs
xchg
cwtl
mov
int
fcoms
dec
push
jecxz
or
lret
jecxz
movsl
pushf
test
fcomps
adcb
pusha
or
stos
int3
mov
mov
lahf
clc
orl
and
cmp
and
subl
push
scas
and
sti
scas
add
pop
fiaddl
in
mov
jp
pop
leave
subb
movsb
int3
fists
inc
and
xchg
cmp
adc
lods
add
cmp
mov
cmp
sub
xchg
mov
push
jmp
sbbl
add
mov
shlb
xor
mov
icebp
cmc
xor
aas
imul
mov
mov
sub
mov
jl
add
adc
xchg
test
js
subl
cli
incl
test
leave
push
and
mov
fs
imul
int3
xor
out
lret
mov
fidivrl
mov
dec
jae
sbbl
or
adc
rolb
fimuls
cld
adc
jmp
dec
fcmovnb
lret
je
roll
or
mov
subb
lcall
icebp
pop
sbbl
shrb
rcrl
cmp
jecxz
jnp
jp
daa
scas
dec
inc
lods
add
lcall
add
cs
dec
fdivp
ror
addps
mov
inc
aad
cltd
cmp
lea
ss
dec
sub
or
pop
cwtl
jecxz
loope
dec
ja
outsl
xor
rcl
push
xlat
jle
idivb
in
xor
ja
sub
push
cmpl
inc
cmp
loopne
lahf
jns
adc
xor
test
sub
mov
xor
or
jnp
adc
sbb
pushf
es
add
iret
jmp
push
bound
cmpsl
xor
shlb
dec
inc
pop
stc
push
sti
shll
push
sbb
inc
in
push
and
or
jmp
adc
loopne
push
push
xor
enter
lret
cs
push
mov
and
xchg
xchg
push
pop
mov
out
outsb
mov
arpl
xorl
cmp
adc
imul
outsl
fwait
outsl
in
mov
cltd
loope
xor
aas
pop
push
test
inc
cld
sbb
hlt
js
adc
testl
cmp
cmp
xor
sub
adc
mov
xlat
int3
cmpsl
push
popf
ss
lea
scas
adc
aam
jo
pop
jecxz
xchg
jl
inc
mov
inc
push
ret
nop
adc
das
sahf
dec
daa
xor
pop
dec
sub
mov
sahf
add
sbb
repnz
loopne
mov
ret
push
xchg
rcrl
add
xchg
clc
jl
sub
mov
jecxz
repnz
lcall
xor
popw
pop
pop
xlat
adc
cmpsl
jmp
xor
ret
cmp
sbb
int
mov
or
mov
adc
sub
movsl
push
push
pop
fiadds
dec
dec
test
int3
xchg
int
enter
in
ret
mov
aam
sub
and
mov
scas
insb
aaa
clc
cmp
int3
jge
mulb
sbb
lock
cwtl
clc
push
mov
iret
add
icebp
test
ds
cwtl
or
es
test
cltd
jae
adc
cmpl
ja
int3
lahf
push
ss
mulb
sub
sti
and
das
fidivs
std
mov
jg
shrl
lock
jo
fs
cmp
outsl
cs
in
add
jno
adc
fldenv
hlt
cld
pop
and
iret
cmpb
inc
mov
mov
mov
out
call
stos
out
adc
sbb
adc
call
sub
xchg
test
bound
pop
and
test
dec
mov
xchg
fs
cmp
sarl
out
cltd
adc
pop
test
fsubrl
cltd
lret
icebp
lods
scas
stc
cmp
pusha
dec
fldl
push
mov
sbb
mov
bound
mov
pop
testl
cwtl
fildll
push
loopne
cld
cltd
cmp
mov
push
ds
add
call
cmpb
sub
and
jge
lret
push
lods
mov
push
or
repnz
repnz
sbb
sti
mov
mov
inc
sub
pop
ljmp
loop
dec
or
bound
andb
inc
mov
mov
aam
mov
pop
ljmp
stos
xorps
orb
aas
pop
outsl
mov
jl
xchg
out
pop
sbb
sahf
add
aas
mov
pop
int3
xor
loop
loope
mov
mov
dec
pushf
mov
xchg
xlat
ror
ss
in
shr
lock
fstpt
mov
cmp
js
lret
and
loopne
cmp
aad
js
push
inc
ret
push
and
popa
test
pop
push
push
orb
lods
inc
test
add
cli
xchg
jo
xchg
punpckldq
lea
ds
sbb
loop
fdivrs
mov
shlb
jge
out
pop
dec
imul
sbb
rcr
dec
mov
push
loopne
pusha
es
and
fldcw
frstor
xor
adc
add
dec
cmc
ja
pop
xor
xor
shll
jp
sub
fldcw
daa
fiaddl
pop
pop
lahf
in
or
mov
xchg
arpl
jns
mov
test
add
xchg
call
cli
cltd
ret
jbe
daa
or
sbb
in
mov
iret
cld
pop
mov
adcb
enter
cltd
fiaddl
popa
push
pop
jl
sub
es
push
and
cmp
call
fcoml
je
fwait
jmp
sub
xlat
aam
mul
lods
xorl
movsb
fcoml
into
pop
jae
sti
shr
push
popa
xor
push
sbb
div
add
mov
pop
add
aaa
int
cs
mov
xor
pop
mov
xchg
pop
xor
cs
in
clc
orb
lret
cmp
and
in
addl
jge
jbe
add
aaa
outsb
pop
xchg
xor
cli
or
aad
inc
gs
mov
push
psubb
sub
outsb
mov
xchg
iret
movl
cmpsb
or
aaa
aam
addl
sub
and
mov
adc
scas
ds
pop
lcall
imul
fsubrl
adc
addl
movsl
and
sub
dec
ja
push
stos
mov
out
das
ret
dec
push
mov
cmp
shrl
inc
ret
repnz
xor
inc
xor
or
int3
arpl
cmpsl
movsb
push
movb
mov
sbb
lods
mov
or
cmpl
push
xor
push
lock
jmp
leave
rcll
mov
cmp
adc
notb
and
shlb
xor
loopne
dec
loop
lods
push
pop
mov
testl
mov
mov
xchg
adc
add
sti
shr
inc
sti
shrl
std
sbb
add
xchg
popa
sub
outsl
in
pushw
push
repz
cli
je
xlat
and
sahf
xor
dec
push
lds
sub
xor
push
int
ja
mov
sub
imul
dec
mov
call
test
cmp
xchg
lock
daa
scas
push
cmp
ja
loopne
mov
fxtract
cmpl
push
add
dec
xchg
sbb
inc
xchg
pop
test
test
xchg
andl
adc
into
movb
pop
xchg
aam
mulb
mov
pop
and
cs
repz
leave
adc
insl
je
xchg
aam
jl
inc
scas
cli
pop
mov
std
loopne
pusha
cld
popa
adc
xchg
add
in
pop
sahf
mov
mov
cmp
or
insb
xchg
sbb
jmp
xchg
push
dec
fistpll
mov
mov
push
sub
and
and
cs
xchg
mov
sub
push
mov
rorl
dec
ret
mov
mov
push
loop
outsb
rcrb
sub
xor
jmp
sbb
pop
cmp
push
xlat
lods
in
test
hlt
xor
mov
sbb
pop
add
outsb
or
test
imul
sub
push
cmp
aaa
out
mov
xchg
inc
or
ss
test
pop
scas
inc
jne
js
pushf
sahf
mov
pop
fmull
mov
sbb
add
mov
dec
js
pop
cltd
int
mov
inc
test
jp
mov
pop
leave
vhaddps
add
nop
leave
and
mov
sbb
enter
mov
jno
push
mov
int3
mov
stc
xchg
test
nop
arpl
adc
push
add
fiaddl
jmp
add
daa
mov
lahf
xor
loopne
aaa
lods
mov
cwtl
in
push
xchg
add
jno
cltd
xchg
mov
js
add
pop
xchg
cmc
dec
cld
insb
xor
dec
bound
cmp
xor
outsl
insb
pop
xor
fs
cld
jne
fmull
dec
dec
mov
scas
repz
cmp
sub
out
pop
cmpl
insl
inc
orb
ds
inc
jge
mov
stos
sub
mov
cli
clc
mov
mov
fmull
jno
jl
jp
decb
sub
push
ja
sbb
adc
jmp
add
jecxz
mov
mov
pop
push
xchg
xchg
icebp
int
int3
testl
push
or
pushf
pop
aad
mov
insb
aaa
std
roll
mov
mov
push
into
pop
inc
popf
das
es
dec
xorb
insb
notb
mov
je
dec
pop
pop
mov
add
popa
add
adc
inc
ljmp
mov
adc
cmp
push
icebp
inc
push
data16
imul
idivl
aas
sub
mov
cmpsl
mov
pop
test
scas
cmp
push
pop
popa
ret
jmp
sbbb
mov
lods
and
mov
mov
mov
inc
js
mov
sbb
cmpsb
mov
outsl
rcr
jb
movsl
jb
cmp
in
lea
cmp
in
cmpsl
or
push
test
or
and
sub
adc
mov
sub
test
sub
xchg
fisubrl
sub
inc
pop
xchg
sub
leave
enter
push
adc
cld
jle
stos
mov
pop
jnp
sarb
dec
mov
push
inc
arpl
lock
mov
rcll
outsb
jl
and
adc
cli
orl
repz
jle
in
pop
jp
roll
push
cld
rcrb
arpl
push
scas
cmp
add
out
inc
cmp
push
cmc
cld
outsl
ror
pop
sub
push
icebp
jb
das
and
lock
cld
fcoml
outsl
sub
push
adc
das
pop
and
mov
jbe
sqrtps
and
sub
inc
cmp
pop
out
sahf
mov
push
mov
out
sbb
fs
call
popf
xor
mov
and
add
mov
cs
repz
pop
adc
je
out
jle
jl
movsb
mov
dec
push
lcall
stc
fistl
dec
aad
mov
clc
dec
fisttpl
fisubrs
mov
movsl
push
inc
mov
sbb
and
fisttps
pop
ljmp
fisttps
add
loop
add
in
rorl
pop
in
cmp
pop
shlb
cmc
sub
add
popa
pusha
add
or
sbb
cmpsl
cld
mov
aas
mov
movsl
test
icebp
inc
pop
inc
jl
orl
in
inc
sub
addr16
mov
push
add
mov
add
pop
movsl
push
cmp
ja
xchg
in
inc
adc
push
in
insb
adc
mov
inc
mov
push
cmpsb
xchg
das
pop
hlt
mov
ret
icebp
adc
outsl
push
enter
jno
push
push
inc
lock
mov
rcrl
pop
mov
xor
and
in
int
or
and
scas
dec
push
add
sbb
fs
mov
add
outsb
and
aas
pop
push
push
add
mov
inc
sti
fcoml
scas
imul
sbb
mov
stos
mov
cs
test
inc
adcb
xchg
out
stos
fs
aaa
adc
sub
sarl
xchg
orb
mov
dec
cmpps
push
outsl
add
jno
or
hlt
xor
mov
popa
jne
mov
sbb
dec
ja
fildll
out
jnp
insb
sub
in
mov
adc
fistpll
adcb
rorl
xchg
fs
push
add
xchg
fildl
xor
aam
lcall
mov
movsb
cmpsl
out
mov
test
add
or
xor
cmc
or
in
ds
dec
out
int
mov
or
push
and
mov
incb
pop
jmp
or
adc
or
xchg
adc
mov
rcrl
cmp
xchg
xchg
das
fistl
repz
push
pop
dec
or
stos
jae
stos
mov
sbb
xchg
loop
pop
outsl
push
js
mov
cmc
cmp
mov
jge,pt
shrb
sub
mov
sbb
jg
insl
add
mov
lret
das
aas
sbb
or
movsl
scas
insb
jmp
call
cmpb
out
pusha
scas
les
push
bound
cmp
dec
mov
jg
pop
jl
cmc
sahf
xor
inc
lds
fscale
xchg
sub
aas
sbb
push
cmp
mov
xchg
out
inc
jg
sub
punpcklwd
jo
bound
cltd
and
jge
pushf
out
mov
jecxz
popaw
push
xchg
xor
ljmp
or
popf
icebp
or
cltd
fwait
test
cmpsb
adc
mov
enter
dec
inc
lds
mov
push
rorl
cwtl
jne
dec
sub
jbe
inc
es
idivb
or
inc
sub
iret
mov
in
inc
mov
fidivrl
mov
fxch
mov
inc
jge
xor
movsl
stos
icebp
xor
dec
jbe
xor
mov
and
inc
lret
xchg
mov
lret
mov
lock
das
and
mul
js
call
mov
ljmp
fimull
mov
lods
push
ret
pop
imull
outsl
mov
cltd
lahf
push
xchg
and
push
negb
in
sbbb
sub
pop
mov
bound
call
push
test
cmp
jg
pop
push
pushf
das
repnz
orb
stos
out
or
mov
aas
cmp
xorl
negl
cld
or
bound
call
fnstsw
cli
dec
in
mov
in
pop
push
push
repz
popa
insb
push
dec
add
fbld
cli
xlat
mov
sbb
fcmove
stos
or
pop
ds
push
mov
sub
cmc
or
loopne
inc
ds
xchg
ja
and
das
call
loop
sti
mov
iret
out
xlat
repnz
xor
loop
push
mov
js
adc
xchg
jae
push
sahf
add
imul
ds
inc
repnz
jae
sbb
dec
and
imul
fcomp
sub
std
adc
out
mov
mov
ret
insl
in
mov
inc
inc
es
clc
push
lods
mov
sub
lret
jb
mov
xor
out
into
mov
mov
mov
mov
mov
pop
mov
stc
mov
mov
outsb
andb
mov
push
inc
cmp
popa
popf
daa
push
cmpsb
insb
sbb
fcom
xchg
dec
gs
fwait
sahf
loope
add
mov
adc
or
in
rcrb
aaa
push
loop
cmp
mov
test
call
mov
les
jns
xor
in
add
fwait
jle
addl
or
mov
jns
pop
inc
push
fwait
dec
frstor
cmp
mov
or
add
mov
xchg
xor
test
stc
push
jnp
pushf
pop
outsl
mov
test
mov
lret
push
jmp
test
sbb
scas
movsl
mov
loope
orl
ds
dec
mov
loop,pn
fcomps
pop
das
cmc
stc
and
es
fninit
sub
insb
adc
in
jnp
push
push
pop
sahf
and
and
lcall
ja,pt
push
stc
mov
sahf
add
cli
mov
outsl
and
mov
push
sbb
cmp
mov
lret
inc
fs
push
movsl
cli
push
mov
mov
pop
mov
test
or
xor
ds
jbe
mov
adcb
dec
and
ret
ss
and
cmc
into
inc
sub
adc
and
adc
push
ljmp
mov
sub
cmp
cmp
ja
sbb
pop
arpl
sub
aam
xor
scas
addr16
add
add
add
dec
or
out
or
mov
dec
outsb
pop
add
pusha
jl
cmp
jnp
ret
aam
push
jae
mov
scas
push
jge
jecxz
push
sbb
adc
adc
add
mov
test
add
pop
and
outsb
jne
xchg
pop
loopne
mov
inc
sbbl
jns
jns
xor
jmp
or
loop
mov
pop
dec
xchg
js
and
pop
pushf
sti
mov
clc
sub
ret
sbb
test
pop
pop
mov
jl
std
std
and
rcll
scas
ja
inc
adcl
mov
sbb
mov
and
loopne
pop
mov
lods
mov
out
or
cli
lods
loope
cmc
test
insb
push
cld
in
jg
orl
cmpsb
pop
pop
cmp
and
out
push
dec
out
stc
incb
test
das
dec
cmc
mov
inc
adc
dec
xchg
mov
pushf
bound
out
cmp
dec
rol
pop
add
xor
rorb
add
sbbb
and
lods
imul
xchg
xor
out
add
inc
sbb
adc
mov
push
pop
mov
mov
fwait
stos
mov
lret
dec
aad
in
je
insb
stos
mov
lea
sub
mov
repnz
test
jbe
lcall
sti
push
ljmp
dec
mov
adc
pop
jo
sti
ss
dec
jo
mov
sbb
xor
pop
lods
les
and
std
fnstsw
sbb
scas
mov
jp,pn
mov
dec
pop
imul
xchg
mov
sub
push
inc
pushf
push
xor
cli
ja
loope
testb
jmp
pop
dec
lret
inc
dec
lahf
xor
pop
mov
dec
insb
pop
adc
popf
or
push
stc
fucomp
clc
or
sbb
xor
mov
lret
push
mov
mov
xchg
xchg
adc
dec
push
adc
lahf
mov
inc
cmp
xor
lock
ret
shl
mov
add
dec
xchg
cmp
insb
add
adc
stos
push
mov
adc
loop
dec
ja
aaa
sub
pop
lret
daa
add
and
mov
pop
jecxz
mov
jae
fisttps
sti
ret
movsb
es
mov
sbb
push
fldl
rcl
jns
sarb
scas
mov
cmp
cmp
fdivp
ficoms
jae
sbb
pop
push
push
adc
xor
push
xor
pop
fsub
mov
push
popf
sub
fisubl
mov
rep
bound
pop
push
ja
cltd
xchg
idivl
sbb
inc
jl
cmp
outsb
stos
inc
inc
pop
xchg
inc
mov
imul
cmpsl
mov
je
jmp
xor
subl
fs
adc
adc
pop
add
stc
mov
loope
out
lcall
add
push
inc
xchg
mov
inc
icebp
lods
adc
cli
lret
nop
sbb
arpl
xor
mov
cli
cmp
fs
arpl
lcall
sbb
stc
jns
loopne
ljmp
fsts
cld
add
test
or
push
add
inc
in
jnp
push
fdivr
cmpsl
push
and
mov
adc
xchg
mov
adc
shlb
mov
push
lods
fld
push
mov
into
and
add
loop
int3
push
mov
mov
mov
fdiv
pop
mov
add
shlb
cmpsb
sub
or
jge
scas
sarl
mov
or
mov
test
pop
ret
pop
fadds
push
icebp
push
jg
sub
leave
xor
xor
out
add
pop
ret
jns
rorb
lods
inc
inc
inc
leave
jp
sbb
insb
cmp
gs
ljmp
inc
popa
inc
sti
faddp
jl
pop
shrb
cmp
jae
int
out
mov
ret
les
mov
mov
lcall
mov
pop
out
lods
lcall
sub
sub
add
adc
inc
cmp
sbb
and
mov
sub
dec
push
mov
pusha
push
mov
mov
sub
adc
loop
dec
push
fisttps
pushf
sbb
or
jge
push
push
adc
cltd
ds
sbb
mov
popa
in
ret
pusha
into
and
jns
jle
mov
mov
add
dec
mov
js
mov
inc
pushf
test
xor
sbb
movsl
cld
xchg
movsb
cli
daa
push
and
out
cmp
imul
pop
push
icebp
fsubp
adc
pop
lea
push
pop
pushf
dec
mov
imul
push
bound
es
inc
or
jl
adc
mov
sbb
sbb
loopne
and
popf
and
mov
jb
add
loope
addb
mov
xor
cli
movsl
lods
popa
dec
mov
mov
xchg
xor
xchg
cmp
inc
xlat
das
adc
inc
sarl
xchg
and
hlt
gs
mov
ds
das
test
sbb
cltd
jge
mov
xlat
sbb
cmc
and
pop
push
sti
into
cwtl
pop
repz
adc
test
cmp
push
sub
jl
dec
stc
mov
lods
in
enter
add
ss
cmp
inc
lock
mov
mov
jo
pop
cli
jmp
jle
xor
pop
adc
int3
mov
repnz
sbb
push
fnstenv
movsb
mov
stos
mov
cmp
mov
sub
push
pusha
popa
lahf
add
fcmovnb
les
dec
jne
jae
into
jge
mov
mov
lahf
dec
nop
aas
call
adc
pop
and
lods
xor
push
push
xor
pop
dec
adc
and
push
pextrw
xchg
and
adc
cmpsb
mov
pop
je
fwait
pusha
jle
or
ss
into
mov
adc
popf
adc
xor
push
lret
imul
jl
push
icebp
push
mov
pop
enter
mov
shl
loope
aaa
pop
data16
xor
loope
cmp
inc
pop
or
cmp
xchg
pop
sbb
sbb
lds
pop
dec
xchg
adc
mov
xchg
enter
xchg
xchg
addr16
mov
lahf
or
xor
pop
insb
xor
sub
jae
icebp
aaa
push
sub
js
and
les
test
adc
add
pop
aam
bnd
and
lds
pop
outsl
test
push
cmp
xchg
sbb
out
aas
mov
sbb
jl
mov
aas
jmp
movl
jae
pop
cmp
cmp
notb
int
es
pop
xchg
xchg
pop
and
jge
jb
xchg
les
lret
ret
lret
hlt
stc
fwait
addr16
inc
cmp
test
cwtl
jns
cltd
shll
adc
in
mov
out
sbb
jle
and
xchg
mov
bound
in
push
arpl
jb
ror
js
xor
push
out
mov
fucomip
outsb
pop
pusha
cli
jmp
scas
dec
movsl
insb
pop
pop
daa
and
or
pop
dec
jmp
lods
sub
jg
fmull
or
repz
cmp
je
or
add
or
mov
test
mov
cwtl
cltd
push
add
sbb
imul
das
sbb
outsb
loop
ja
xchg
jno
or
test
and
pop
jno
jns
or
jb
ljmp
lock
push
int
int3
aam
xchg
push
movsl
add
ja
mov
sbb
pop
test
and
cli
out
adc
ds
jae
rcl
cld
loopne
lods
dec
ret
mov
dec
ds
jno
jno
ja
sti
cmpsb
push
xor
testb
loope
ficoms
das
xchg
push
xchg
aaa
das
xchg
lahf
hlt
mov
push
iret
sysret
jb
das
adc
xor
xor
outsl
fnstcw
jge
add
pop
mull
popa
lods
lock
sub
loope
lock
or
hlt
addr16
sub
popa
je
roll
movsb
sub
mov
sub
push
sbb
push
stos
mov
add
daa
cli
cmpsb
and
or
xchg
mov
xchg
dec
lods
bswap
push
jmp
pop
and
aad
popf
aam
jmp
cld
fwait
addl
mov
inc
mov
fsts
lret
xchg
add
aad
dec
mov
repz
or
js
add
fsub
push
lea
enter
mov
fadds
test
mov
and
cltd
cld
ret
add
xchg
fsubl
les
xor
jmp
mov
jo
jmp
frstpm(287
jnp
sbb
pop
std
mov
jns
out
inc
mov
out
mov
pop
jg
loopne
mov
mov
hlt
aad
lock
es
jbe
pop
mov
dec
add
into
xor
mov
repnz
stc
lret
fs
sub
fstpt
mov
sbb
lds
mov
loopne
fdivr
dec
xchg
cmp
dec
push
inc
sbb
push
add
test
rcr
loop
or
push
shr
push
div
mov
or
fs
or
xor
mov
repnz
pop
test
ret
cmpsl
fisttpll
mov
jae
ja
out
addr16
xlat
test
mov
into
xchg
jl
mov
and
into
jle
push
jns
fldln2
fmul
inc
or
cmpsl
mov
hlt
mov
int
pop
jp
inc
imul
adc
call
xor
decb
je
nop
and
xlat
fnstsw
incb
scas
sbb
and
std
ss
test
rorl
ja
sbb
pop
aaa
in
sub
mov
shl
outsl
shr
and
inc
mov
fisttps
stos
hlt
das
fmuls
adc
xor
jnp
fcomp
fsubs
mov
movsb
or
xor
fwait
ds
pop
xor
das
adc
rorl
xlat
and
aaa
xor
test
in
adc
push
inc
push
sahf
test
cmpsb
xchg
xchg
and
xchg
xchg
pop
cmc
loop
inc
sub
inc
movsb
cmpsl
stos
cwtl
inc
faddl
addb
aaa
dec
js
pop
mov
adc
jno
mov
lret
inc
xchg
or
sub
test
pop
xchg
push
das
ret
xor
jnp
xchg
imul
mov
dec
pop
dec
enter
push
or
mov
xor
bound
cltd
adc
dec
adc
inc
add
scas
adc
fisubrs
mov
rol
sub
ffreep
jnp
test
lds
inc
cs
rcrb
add
cmc
jmp
lods
push
inc
fldcw
pop
les
jg
fldl
mov
dec
in
fisubrs
sub
push
push
rorb
xor
and
add
pop
addr16
mov
pop
cmpsb
and
pop
pop
sarl
mov
rcrb
and
pushf
xchg
xchg
cltd
arpl
aaa
cltd
push
in
in
andb
mov
ljmp
test
loop
addb
test
ljmp
imul
clc
push
adc
mov
cmc
and
in
push
xchg
sbb
cmp
cmp
cmp
rolb
cmpsl
sub
dec
mov
pop
fsubl
sbb
pusha
push
insb
xchg
push
push
sti
dec
scas
aaa
adc
jo
rcll
fiadds
gs
arpl
cwtl
lahf
xor
mov
and
cmc
dec
mov
aad
cltd
sub
mov
setge
sbb
hlt
pop
mov
push
and
loope
push
inc
cmp
and
adc
pop
push
hlt
inc
insb
cmp
ss
mov
rorl
xor
call
dec
scas
push
sub
iret
xor
push
push
ds
sub
lret
sti
lock
lock
lds
scas
pop
adc
push
lcall
rolb
outsl
mov
jno
and
xlat
sub
and
out
fistpll
cmp
mov
or
pop
insl
addr16
call
push
push
cmp
js
cmp
test
imul
lret
jae
or
daa
pop
jmp
xor
pop
xchg
movsl
ds
jecxz
in
mov
lret
sub
in
cmpsl
lds
mov
test
test
loop
push
fwait
pushf
outsb
mov
cli
mov
sub
iret
sbb
mov
std
ds
in
xchg
fcoms
scas
cmp
mov
out
test
lock
adc
dec
xchg
outsl
adc
dec
pop
inc
in
addb
add
mov
jns
and
xchg
jle
loopne
daa
inc
pop
sahf
fnstenv
adc
mov
xchg
decl
inc
fisttpll
aam
mov
into
mov
pop
jp
jne
addr16
dec
jae
es
jnp
sahf
xor
mov
pop
in
add
sbb
les
in
call
jmp
mov
test
arpl
xor
fst
mov
mov
sub
mov
subb
fdivl
inc
sbb
and
jne
pop
in
clc
mov
dec
scas
mov
cmp
shll
or
test
dec
sarl
sbb
aam
popa
stc
lcall
mov
sbb
push
inc
push
ficomps
jae
aaa
mov
mov
lods
cs
add
xor
sub
xchg
mov
inc
sbb
and
out
pop
fisttpll
pop
push
push
dec
ja
cmp
pop
mov
scas
push
aas
or
ss
aad
jnp
mov
dec
cmp
dec
and
mov
jb
aas
stc
movsb
sbb
push
mov
fldl
inc
lock
pop
decb
loope
sub
outsb
loop
ret
outsl
jecxz
and
mov
and
xor
push
cmp
int
fsts
inc
sub
dec
out
push
xchg
rcr
repz
lods
mov
mov
or
push
lahf
fisttps
sub
inc
iret
or
ret
scas
mov
or
outsb
mov
les
stos
or
cmpsl
lretw
popa
out
pop
ret
std
sub
push
cmc
jmp
cmp
fwait
sbb
sbb
add
mov
and
sub
popa
inc
sbb
out
mov
outsb
and
repnz
adc
mov
cmp
outsb
xchg
in
pop
xchg
cwtl
ret
hlt
pop
mov
out
lret
aad
dec
pop
out
cmc
btr
inc
js
xor
add
mov
mov
cli
mov
or
cmpsl
movsl
lods
sub
inc
cld
ja
les
cwtl
adc
add
inc
cwtl
cmpsl
aad
shlb
cli
int3
insb
mov
inc
in
jns
cmp
fadd
test
ds
stos
fldl
or
mov
pop
mov
in
sbb
xlat
ss
rorb
loopne
add
test
movsb
jae
nop/reserved
fimuls
lcall
stos
inc
adc
cmpsl
jge
adc
or
pop
cmpsb
cmp
jle
xor
mov
cld
iret
bound
test
into
sub
mov
cmc
lahf
mov
sbb
ljmp
imull
outsl
lret
mov
xor
xor
or
cwtl
fmuls
loope
sahf
pop
test
cmp
pop
or
fdivs
std
lods
mov
pop
add
hlt
std
sbb
mov
scas
mov
icebp
stc
or
jae
pop
mov
call
add
lret
imul
push
icebp
xchg
sbb
pusha
das
cmp
xor
mov
mov
js
dec
jge
jg
ds
in
rol
cli
mov
mov
aaa
pop
xor
or
pop
jbe
adc
icebp
mov
loope
dec
repnz
xor
rcrl
sbb
sbb
mov
ret
in
mov
imul
fsubrp
and
je
call
jle
in
imul
pusha
sbb
inc
enter
repz
inc
cmp
fdivrs
xor
push
or
jne
sbbb
push
loope
adc
dec
mov
daa
pop
lock
dec
jo
adc
and
icebp
test
rolb
jo
mov
rcll
or
cwtl
testl
lods
push
icebp
mov
ljmp
sbb
xchg
fldln2
push
sub
lcall
push
add
sub
cs
outsb
ja
push
jecxz
jae
mov
loope
stc
scas
out
arpl
call
mov
fwait
xchg
mov
aaa
dec
xchg
test
adc
xor
sub
aaa
iret
add
and
sub
xor
movsl
inc
rcll
cli
fiadds
mov
mov
inc
and
aas
jg
jp
cmp
xchg
push
lods
xchg
xchg
imull
mov
in
out
hlt
movsl
push
pop
cmp
mov
loope
mov
movsb
jge
pusha
pop
dec
add
sbb
xor
xchg
popa
aad
fwait
dec
test
cmp
inc
or
jo
sub
xchg
sti
sbb
fwait
adc
mov
mov
add
movsl
mov
or
pop
cmpl
das
jge
nop
sbb
test
shrl
pop
mov
fdiv
ds
sub
mov
add
andb
sbb
enter
fld
xchg
outsl
lcall
add
jne
imul
push
dec
cld
insb
jmp
dec
adcb
sbb
es
sahf
or
repnz
popf
mov
stc
enter
adc
jnp
cmpsb
fnstcw
cmpsl
xchg
ljmp
aaa
pop
sub
mov
daa
adc
and
lret
mov
iret
data16
jno
jg
sub
jl
std
push
adc
sbb
pop
aam
shl
fwait
adc
cmpsb
mov
fsubs
dec
and
sbb
dec
pop
and
mov
cmc
loope
mov
repz
js
fnstenv
xor
pop
push
mov
mov
and
and
adcl
mov
add
sub
xor
push
rcll
pop
lods
push
sub
sbb
push
xchg
mov
bound
in
jb
test
out
dec
pop
into
pop
inc
js
int
dec
jnp
mov
push
aas
lods
gs
mov
and
pushaw
inc
fs
stos
sarl
daa
adc
pushl
jp
push
jo
or
adc
sub
imul
stc
push
mov
push
cmp
test
lods
ret
mov
lds
bswap
jecxz
rclb
jl
ret
cmp
dec
sahf
xchg
adc
std
outsb
sbb
repz
test
adc
inc
mov
push
fcoml
pop
cmp
sub
jb
dec
fildl
push
std
jnp
jp
testb
add
lea
mov
das
add
dec
sub
pop
mov
inc
push
sub
roll
movsb
icebp
cli
fcmovnb
inc
aam
in
mov
mov
sub
sub
xor
cmp
cmpsl
push
jbe
subb
ficoms
addb
in
inc
mov
or
lea
scas
inc
ret
dec
pop
mov
lods
mov
push
push
sub
sarb
aas
jmp
movsb
in
mov
pop
sbb
imul
sub
dec
jl
jl
mov
in
loopne
stos
dec
sub
aaa
out
inc
pop
cmp
dec
sbb
mov
out
scas
or
sbb
add
or
xor
inc
push
stos
cmp
loop
pushf
mov
shll
test
popa
fwait
dec
push
sbb
shl
mov
sbb
movsb
pop
push
aam
push
lods
fstpt
aaa
jp
ljmp
sahf
outsl
sbb
lcall
dec
mov
jp
lods
pop
cs
inc
outsb
mov
xchg
dec
fsubr
xlat
aas
negb
and
pushf
xchg
out
cmp
fsubr
add
bnd
les
shll
pop
sub
inc
ret
sbb
gs
dec
push
mov
inc
test
icebp
aas
push
inc
and
cmp
mov
loopne
mov
sbb
jns
shll
and
add
xor
add
jge
shll
in
ds
jg
sub
lahf
fnstenv
add
sub
jmp
push
jmp
cmpsb
clc
ret
inc
shl
inc
or
ret
rcll
stc
pushf
jo
mov
push
inc
cli
in
icebp
cli
xchg
mov
and
sbb
ret
inc
pop
mov
mov
xlat
xchg
adc
adc
inc
xor
mov
jns
pop
mov
ret
xlat
jae
incb
or
and
inc
or
xchg
mov
sub
jge
or
pop
in
jp
jb
xor
gs
ret
inc
cwtl
push
dec
pop
mov
mov
push
ds
mov
adc
cmp
jnp
jbe
into
fadds
bound
stos
sar
aas
fs
sub
stc
sbb
jle
sahf
arpl
data16
int3
mov
xor
mov
stc
dec
lahf
push
test
adc
sbb
push
scas
dec
pop
jo
push
mov
fcmovnb
div
sbb
inc
out
addr16
sbb
add
inc
lock
cmp
or
scas
jbe
fnsave
pop
ljmp
daa
out
imul
xor
jl
mov
insb
sbb
imul
mov
cmpsl
xor
stc
sub
test
xchg
inc
gs
repz
out
xor
add
ss
test
or
fnstenv
jge
ret
sub
add
in
inc
push
add
cmp
jle
int3
mov
xor
stc
mov
mov
push
shlb
pop
add
and
fsts
in
sbb
mov
adc
mov
adc
cltd
ficomps
jnp
lcall
mov
push
sbb
push
popa
sub
imul
push
jae
mov
subb
cli
fdivrp
cmpsb
bnd
out
imul
movb
push
inc
xlat
mov
test
clc
adc
lea
daa
pop
pop
dec
sbb
std
ffree
ja
pop
lds
enter
in
aad
das
fwait
pusha
sbb
rol
cmpsl
jecxz
xor
fnstenv
and
jae
dec
loop
mov
sbb
jg
inc
rol
ds
push
bound
data16
pop
and
in
popa
hlt
cli
dec
cli
aaa
bound
xchg
pop
cmc
jnp
adcb
xor
cs
fdivs
pop
addl
dec
or
adc
cmp
mov
imul
loop
adc
aas
das
lds
test
xchg
push
xor
imul
hlt
xor
xchg
jno
mov
aad
cmpsb
test
jl
mov
fwait
push
push
cmp
and
roll
enter
or
ret
xlat
jb
sarl
dec
jo
aam
sub
add
xchg
stos
adc
fsubl
popf
les
xor
int
pop
fs
loop
fwait
je
mov
sbbl
out
out
sahf
xor
test
mov
ret
insl
lock
addr16
add
pop
add
jbe
popf
lret
imul
inc
out
inc
arpl
xchg
xchg
fs
cld
and
insb
iret
int
or
int
push
cmpl
test
es
scas
jg
inc
fs
hlt
dec
int
xorb
push
aam
pop
xor
outsl
das
mov
dec
mov
arpl
fdivrl
sahf
mov
icebp
jecxz
push
sub
inc
daa
outsl
mov
xlat
rcr
insl
pusha
in
insb
fs
stos
daa
sti
scas
shrb
iret
iret
lahf
mov
cli
mov
rorl
pusha
xchg
push
jnp
mov
movsl
push
xchg
test
and
mov
fadds
add
mov
imulb
sub
pop
bound
loop
jge
imul
xchg
jp
jne
jae
addr16
sbb
or
mov
xor
mov
fldl
jo
pop
test
lds
mov
ja
add
mov
mov
imul
and
dec
shll
inc
push
add
arpl
add
inc
or
lods
xor
loopne
lods
pusha
push
mov
fstl
xchg
mov
fcmovb
int3
nop
mov
or
fwait
add
dec
jp
pop
pop
push
cld
ret
outsb
addr16
cmp
mov
mov
adc
mov
addr16
andb
add
cmp
sahf
xchg
jg
stos
stos
in
mov
inc
leave
addr16
pop
movd
jb,pn
les
add
jne
into
insb
leave
shl
xchg
jne
add
aad
cmp
cmp
and
mov
sahf
je
das
and
lock
xchg
mov
push
cmp
call
add
in
add
sbb
push
pop
sub
cltd
jns
push
mov
cmp
and
mov
mov
cwtl
inc
push
cmp
push
inc
ljmp
lret
pop
test
pop
xor
mov
incl
pop
jne
hlt
mov
xchg
xor
ficomps
fistps
test
cltd
push
mov
dec
jo
jno
dec
xchg
xor
lods
cmpb
mov
jnp
in
loope
insb
or
xor
lea
repnz
les
in
adcb
sahf
mov
xlat
and
or
into
add
fs
sub
inc
sti
push
mov
call
ret
outsl
mov
int
xlat
dec
out
xchg
shlb
dec
xchg
xchg
fstl
xlat
sub
inc
or
jl
or
lcall
sti
jp
xchg
into
rolb
mov
mov
jbe
test
stc
cmpsb
xor
cltd
or
mov
sbb
push
dec
mov
xor
cmp
or
jnp
jne
fstpt
pop
test
scas
rorl
push
or
fiaddl
xor
jae
lods
xchg
or
movsb
fdivl
mov
lea
lret
pop
or
data16
or
sbb
cmp
movsl
gs
icebp
mov
xchg
mov
aad
dec
xor
sbb
sbb
and
inc
idivb
mov
push
mov
sub
cmc
movsb
iret
push
daa
push
cmp
cmp
cmpsb
dec
mov
gs
push
or
xorl
movsb
xor
pop
pop
xchg
fcmove
dec
ficomps
stos
packssdw
mov
sti
mov
ljmp
push
aam
test
fdivrl
ret
jp
xchg
sub
and
or
mov
stos
jmp
out
pop
mov
int3
pop
xor
push
cmp
mov
mov
push
mov
outsb
test
idivl
daa
add
das
dec
in
push
inc
cld
mov
repz
lods
pop
frndint
stc
shrb
subl
aad
test
mov
sqrtps
push
jb
test
fsubrp
loop
inc
jg
sub
scas
adc
aam
das
sub
pop
icebp
inc
cmpsb
movsl
sbb
or
data16
jmp
cli
cmp
andl
and
or
adc
mov
add
xchg
push
mov
sbb
jecxz
dec
pop
int
lods
ljmp
mov
or
cmp
test
aas
inc
jno
inc
push
mov
pop
jecxz
icebp
sbb
test
inc
sub
cmpsb
mov
js
data16
cmovno
push
push
fwait
test
xchg
mov
movsl
cld
fldenv
jae
lds
pop
push
push
cltd
cwtl
jl
lea
insl
xor
lret
loope
imul
jo
jle
mov
mov
lcall
sub
sti
inc
rclb
dec
sbb
mov
ret
enter
xor
dec
mov
jmp
je
inc
push
aaa
imul
popf
cmp
dec
inc
xchg
pop
cltd
xchg
mov
sbb
pop
test
sub
mov
fsubl
mov
jmp
cmpsl
xorb
sbb
lahf
arpl
aam
andb
stos
sub
cltd
dec
xchg
in
test
orl
jl
repnz
idivb
xor
in
ja
push
loop
xor
rcrb
clc
mov
roll
pop
jbe
mov
pop
inc
mov
inc
push
loope
int
adc
xlat
sub
xlat
cmp
aam
imul
or
stos
push
clc
aam
mov
sbb
cltd
cmp
jp
push
mov
mov
ret
xor
add
lea
dec
cmpsl
cmc
stos
mov
test
xchg
rolb
repnz
stos
push
mov
jl
sub
in
neg
xor
push
sar
loop
inc
mov
mov
or
xor
mov
cmpsb
leave
xor
notl
out
ror
cmp
inc
jmp
lret
testb
cld
xlat
cmp
inc
rcrb
mov
fbstp
pop
adc
jmp
xchg
call
lods
lds
mov
testb
or
jg
push
cmp
ds
lahf
push
push
sbb
sbb
mov
ljmp
mov
mov
inc
stos
shl
sarb
imul
lret
ja
repnz
cmp
cmp
pop
xchg
jnp
test
push
push
pop
in
inc
sub
dec
movsb
cmp
mov
rolb
dec
xlat
adcl
sbb
repz
push
mov
out
push
repz
lahf
fisttpl
adcb
sti
insl
sti
sub
imul
scas
imulb
jecxz
out
xchg
mov
push
stos
pop
and
and
stos
inc
pop
movb
bound
inc
mov
mov
sub
fwait
cmpsb
aad
maxps
inc
or
push
sahf
pop
fdiv
sahf
dec
sbb
mov
add
jno
jg
leave
push
cmpsl
scas
js
adc
loope
bound
xchg
flds
sahf
and
dec
xchg
leave
divl
add
pusha
push
jmp
dec
lea
cmp
jbe
or
dec
dec
jmp
sar
cmp
es
pop
test
sbb
out
xor
pop
inc
orb
sub
jl
inc
jl
inc
and
push
sbb
pop
jne
fistpll
jb
dec
aaa
push
pop
inc
test
in
add
cld
adc
arpl
mov
dec
push
jle
lahf
rcrl
fidivrs
inc
cmc
mov
sbb
in
pop
cmp
push
cmp
mov
inc
xor
das
and
fwait
js
mov
and
push
xchg
sub
push
cmp
pop
popf
push
out
mov
dec
mov
sbb
adc
jnp
fwait
sbb
scas
xor
add
popa
je
stc
inc
adc
xor
add
je
push
pop
push
clc
and
and
loope
cli
sbb
flds
insb
fsubs
push
arpl
inc
scas
lods
cmp
xchg
mov
call
mov
out
jne
ja
add
xlat
add
es
subb
mov
hlt
pop
mov
jmp
loop
jns
lcall
ljmp
add
shll
nop
adc
pop
mov
xlat
cli
xor
xchg
sub
adc
fistpl
icebp
mov
cwtl
mov
sub
mov
xchg
xor
pop
mov
test
insl
movsl
les
mov
movsb
fcomps
sbbb
lock
icebp
inc
jle
js
inc
add
sahf
popa
mov
push
mov
jo
push
fidivl
push
mov
pop
mov
jne
inc
push
and
jae
push
stos
aad
addr16
in
js
test
call
mov
pop
cmp
xchg
push
scas
lea
ret
mov
fsubl
test
push
inc
pop
cmp
mov
sbb
xchg
testb
out
mov
mov
cwtl
mov
push
and
pop
jnp
sub
sti
jmp
adc
inc
popa
les
and
dec
arpl
test
sahf
dec
mov
fdivrl
insl
and
cmp
in
push
outsl
lret
cmp
mov
int
add
lret
mov
add
clc
imul
cld
repz
fdivrs
xor
daa
outsl
inc
jb
aas
pop
push
mov
iret
mov
lahf
adc
push
stos
je
xor
std
out
je
mov
clc
mov
dec
fists
jbe
mov
pop
lahf
aam
jl
movsl
or
rcrl
sbb
mov
data16
dec
icebp
sbb
popa
lahf
sub
pop
push
test
xchg
ret
push
movsb
and
in
push
pusha
cmp
bound
mov
icebp
pop
push
jge
xchg
push
pop
mov
xchg
xchg
mov
movsb
test
addr16
cmp
pop
pop
mov
arpl
es
cltd
pop
test
leave
lea
and
das
add
fisttpl
or
sbb
lds
add
or
ja
and
sub
inc
pop
push
pop
stos
int3
push
sti
cmpsl
lahf
rclb
mov
into
xchg
sbb
add
sub
mov
or
mov
shll
push
sahf
ja
stos
xchg
xor
xchg
sub
test
adc
sbb
rolb
femms
test
enter
shl
xchg
xor
int3
out
xchg
gs
adc
nop
daa
jmp
dec
sti
movsb
loope
inc
frstor
fucomi
jle
pop
sbb
push
scas
adc
sub
in
inc
data16
ficompl
insl
flds
jb
fldenv
gs
cmp
xor
xor
mov
mov
das
jg
sub
sbb
dec
mov
into
or
clc
dec
loopne
sub
stc
nop
mov
loopne
xchg
xor
lret
pop
fcoms
push
jno
out
sbbl
loope
das
dec
arpl
jnp
mov
sub
sbb
mov
shll
add
lock
in
and
ds
scas
or
xorb
add
pusha
inc
dec
ret
add
sbb
xchg
daa
test
jmp
incl
sarb
dec
mov
xchg
std
cmc
jmp
and
or
lock
cmp
bnd
xchg
jns
pop
pop
push
mov
fidivrs
mov
adc
cs
dec
add
rol
subb
sub
jbe
mov
std
mov
xor
imul
mov
test
or
sbb
jle
jb
xsha1
cmpsb
mov
je
pop
ds
imul
mov
cmp
inc
mov
js
jb
cmc
mov
leave
push
jp
mov
xchg
loope
xchg
sarl
and
xchg
mov
sarl
outsl
aas
sub
sbb
lods
cwtl
pop
stos
mov
and
push
xchg
rcll
adc
mov
jae
bound
ds
add
mov
xor
mov
mov
aam
testl
loop
jmp
stos
jp
mov
jne
in
js
int3
mov
mov
test
call
ss
ljmp
int
mov
outsb
mov
ret
pop
or
in
stos
inc
dec
sbb
scas
addr16
inc
imul
jae
imul
jmp
dec
icebp
push
outsl
mov
or
push
pop
dec
xchg
pop
pop
ficoml
in
push
jnp
test
sahf
sub
mov
mulb
mov
mov
js
dec
out
xchg
outsb
mov
mov
inc
imul
sub
mov
inc
bound
jno
and
insl
inc
fdiv
aas
sub
pop
mov
lds
and
mov
jle
hlt
mov
daa
out
bndstx
dec
shrb
fs
mov
ret
shrb
into
push
mov
mov
inc
aaa
push
in
and
inc
dec
into
sbb
out
xchg
pop
insl
adc
jbe
sbb
xchg
and
jae
fdivl
cwtl
lds
pop
pop
shlb
test
xchg
popa
or
xor
int3
xor
rclb
fcompl
dec
mov
or
lods
popf
mov
loopne
and
add
fcoms
mov
cmpsl
jo
sub
push
aad
inc
rorb
ds
inc
push
sti
mov
fldcw
cmp
mov
push
push
mov
inc
sub
pop
push
xchg
lcall
out
dec
xchg
out
and
lcall
in
sub
stos
fists
stc
push
imul
push
jecxz
add
int
out
xor
pop
icebp
xor
cli
call
ret
scas
jle
sub
sarl
dec
cmp
and
test
xor
movsb
or
jge
mov
cltd
xchg
sub
mov
shlb
or
push
sub
xchg
pop
imul
das
jb
dec
xor
mov
loopne
jnp
imulb
mov
cmp
push
sbb
jl
sti
jl
dec
jg
cltd
mov
outsl
adc
jl
arpl
lods
pop
cwtl
mov
sbb
gs
add
push
pop
mov
adc
bound
popf
lds
test
cs
jle
mov
sbb
leave
cwtl
push
cmp
call
lea
outsl
push
cmp
fmul
cmp
int3
xchg
ret
xchg
outsb
pop
loopne
push
push
mov
jl
out
jb
push
inc
scas
jmp
fstps
cmp
imul
je
adcb
mov
cmp
lahf
and
mov
movsb
popa
aad
test
jo
jo
out
or
push
dec
iret
xlat
lcall
dec
push
ja
xchg
cltd
jmp
sbb
mov
and
sub
imul
cmc
std
ds
xchg
cmpsl
dec
mov
xchg
cmc
push
popf
and
lock
ds
cli
mov
xlat
test
push
test
or
ret
mov
into
insl
jle
das
push
sbbl
pusha
sbb
imul
mov
aad
lock
fisubrs
dec
inc
ja
orb
mov
test
or
mov
pop
fwait
dec
mov
push
and
xor
pop
stc
xchg
jo
mov
cmp
test
insb
scas
xchg
enter
pop
rorb
push
out
add
pop
cmp
les
jo
cltd
xchg
rclb
stos
mov
or
cltd
test
push
frstor
stos
fcmovbe
adc
xchg
mov
out
out
cld
pop
pushf
adc
daa
cmp
mov
push
aad
lcall
mov
inc
mov
adc
ljmp
xor
dec
std
mov
mov
fstps
nop
inc
add
popf
movsb
xchg
loope
jns
push
inc
and
inc
adc
movsl
mov
icebp
sarb
mov
divb
dec
scas
mov
xchg
mov
sti
dec
and
les
out
lods
or
jp
sub
mov
dec
mov
pop
xchg
cld
add
dec
shlb
cld
mov
shll
or
rolb
or
push
jno
adc
mov
or
setg
push
sub
inc
rol
mov
je
ja
add
jo
adc
ficompl
movsb
push
cltd
add
push
stos
mov
push
int
xchg
loop
pop
inc
sub
fdivrl
lahf
sub
and
movsl
adc
or
xor
mov
les
ret
dec
add
bound
mov
mov
orl
mov
popf
cmp
mov
sbb
cli
xor
outsl
mov
insb
or
xchg
mov
je
addr16
shrb
xlat
jne
xor
movsl
int
sub
cmc
or
xchg
and
leave
push
hlt
push
enter
lret
sbb
shrl
jb
and
or
iret
cmp
xor
in
mov
sub
push
into
or
es
mov
pop
in
push
mov
add
adc
push
mov
xchg
test
pop
cmpsl
cmp
and
ss
imul
push
fsubl
xchg
pop
add
lock
xor
stos
jecxz
insb
ja
lock
mov
shufps
xor
loop
cmp
dec
xor
bound
test
mov
sub
xchg
data16
push
jo
aas
jo
mov
les
pop
jge
jecxz
in
test
mov
push
mov
and
jae
and
popa
or
jnp
das
cmp
push
outsb
push
sub
mov
in
mov
cs
out
and
jbe
nop
test
jge
int
xchg
bound
pusha
sbb
test
out
es
mov
lea
filds
js
jne
fcoms
push
push
jg
pop
mov
mov
cli
mov
aaa
jae
xchg
dec
sub
mov
ror
mov
jmp
fcmovu
jg
jnp
or
loope
icebp
jo
xchg
ret
and
cmpb
arpl
jns
repz
add
rclb
mov
popf
out
xor
jb
mov
xlat
in
mov
sbb
xchg
loope
shrb
inc
or
add
cmp
mov
mov
dec
lahf
fsts
or
mov
and
shll
mov
xchg
push
imulb
roll
mov
test
imul
adc
cmp
fmull
jo
lcall
adc
sti
fldcw
xor
xchg
stos
das
sbb
xor
jbe
pop
cmp
add
gs
rcrl
ficomps
sub
js
test
and
xchg
mov
call
jle
out
and
fldt
loop
push
sbb
jl
cmc
out
loopne
mov
or
pusha
pusha
dec
adc
daa
xor
sub
das
jecxz
stos
loopne
sub
mov
push
xchg
daa
je
rclb
adc
popa
loopne
cmp
fnstenv
cmp
mov
pop
xchg
and
sbb
push
add
xor
call
xor
out
addr16
sbb
sub
adc
in
int
cmp
cmpsb
cltd
stc
hlt
outsb
pop
loop
push
out
test
mov
jg
cmc
cmpsl
xchg
sub
or
jp
add
jmp
sti
add
dec
add
frstor
adc
add
decb
scas
sbb
les
rclb
mov
lret
jnp
mov
xor
and
cmpsb
aam
cmp
adc
inc
inc
add
adc
xchg
ret
cmp
sbb
jne
xchg
test
pop
lods
stos
add
jne
and
scas
pop
add
jg
adc
and
xor
inc
dec
loop
xchg
shll
mov
jae
or
mov
xor
mov
xlat
mov
xor
jmp
fisttps
xchg
es
xchg
les
pop
or
test
arpl
fcomip
xchg
adc
loopne
aaa
cli
sub
mov
adc
sbb
sti
pop
mov
test
loop
xchg
inc
inc
call
sbb
xchg
xor
or
xchg
insl
lcall
dec
xor
push
es
jnp
mov
stos
clc
lret
sbb
cs
xor
sub
push
inc
cld
xor
mov
mov
pop
stos
mov
cmc
popa
cmp
adc
adc
cmp
scas
in
or
fdivl
js
push
ret
pusha
mov
imul
cld
cmp
sub
ja
and
mov
xor
mov
sarb
pop
stos
call
daa
sub
sub
sub
mov
fcoms
mov
jg
sbb
pushl
pushf
sahf
es
addr16
roll
sbb
test
loopne
jge
sub
mov
jg
mov
push
je
xchg
lods
clc
sbb
nop
xor
mov
stos
cmpsb
imul
xchg
dec
jl
push
and
shll
lcall
mov
icebp
cmp
sti
xchg
jnp
jmp
or
jle
cmpsb
dec
adc
invd
adc
mov
xchg
test
cmpb
push
pusha
loope
je
jg
pushf
lock
push
push
push
stc
test
mov
push
fcmove
sbb
cmp
dec
mov
lret
sub
aad
ret
xchg
addr16
jg
movsb
hlt
push
scas
arpl
rorb
and
jmp
test
cwtl
pop
imulb
push
int
sbb
cltd
push
dec
add
inc
xchg
mov
and
iret
or
xchg
inc
je
jmp
movsl
and
push
cmp
call
xchg
testb
dec
addr16
cli
insl
cltd
inc
shlb
ljmp
jnp
xor
lods
or
psubsb
cmp
or
push
or
push
pop
out
std
mov
dec
push
cli
ja
lret
jge
scas
ljmp
push
xchg
pop
jb
push
xchg
xor
mov
ficoms
ret
xchg
push
mov
bound
clc
stos
mov
cld
js
int3
xor
mov
mov
rclb
aas
clc
divl
jb
adc
addb
leave
enter
rorl
lods
test
sahf
lods
xchg
mov
hlt
lahf
sub
jbe
pop
jno
subb
adc
shll
and
rolb
lods
adc
adc
sbb
jne
xor
sbb
aad
mov
mov
mov
jno
jmp
inc
dec
jne
out
outsb
pusha
push
lret
sbb
and
in
xor
jl
sub
mov
sub
push
mov
xor
push
jns
dec
sub
add
push
mov
push
dec
insl
lds
mov
gs
int
loopne
jb
lods
add
ret
stos
inc
out
jg
fistps
add
and
pushf
jmp
mov
aam
stc
sub
mov
jnp
mov
fwait
adc
scas
inc
jmp
inc
push
fmull
fistl
or
push
movsl
push
call
jne
popa
into
orl
adc
cli
std
adc
and
pop
add
les
adc
lods
inc
repz
loop
ss
xchg
inc
out
lahf
adc
test
mov
fxch
mov
add
int
or
jecxz
adc
xor
and
cli
mov
mov
and
push
lods
jmp
es
lret
cmp
adc
sbb
pop
dec
jne,pt
dec
xchg
std
test
fcomps
jne
xchg
dec
fnsave
outsb
ljmp
sti
loopne
and
std
jno
xor
lret
dec
testl
test
push
push
mov
jae
mov
jecxz
leave
dec
push
sti
jbe
lcall
and
shr
push
cmpl
dec
add
or
cmp
adc
scas
shll
adc
dec
sub
add
shrd
mov
dec
stos
stos
sub
imul
sub
add
mov
or
ljmp
adc
dec
mov
in
sub
movsl
cli
mov
leave
push
int3
in
rolb
mov
dec
push
xor
mov
add
xchg
cmc
cmpsb
jg
xlat
clc
add
int3
pop
iret
and
jno
enter
into
lahf
adc
jns
je
xchg
jp
xchg
add
jne
div
aad
mov
and
paddsb
cltd
lahf
push
mov
fdivl
lods
xor
dec
mov
ret
push
shll
push
push
cs
popa
lea
sahf
and
std
cli
repnz
push
adc
mov
inc
in
mov
lds
fs
pop
sub
sbb
gs
mov
push
jnp
clc
mov
imul
adc
xor
outsb
dec
inc
pop
pop
stos
fdivrl
into
dec
fstpl
subl
leave
mov
call
sbb
fistpl
xor
out
cmp
cmp
jp
aad
mov
in
fwait
xor
rol
stos
repz
pop
lret
stc
sbb
movsl
cs
mov
push
pop
adc
fldcw
push
pop
push
popa
xchg
mov
pop
cmp
ret
ss
mov
lcall
lock
adc
jp
ss
cwtl
dec
aas
add
dec
sub
stos
inc
mov
loop
cmp
xor
mov
pop
or
shrl
xor
mov
lcall
push
ljmp
mov
sub
fcompl
in
cmp
test
ror
test
lods
cmp
scas
mov
in
jmp
arpl
cmp
mov
pusha
mov
andl
je
lret
or
decb
mov
test
sbb
push
dec
mov
dec
lcall
xor
adc
cmp
cli
dec
scas
lds
xor
push
ljmp
mov
popa
aam
inc
inc
sub
ss
push
push
in
jnp
pop
movsb
lds
add
in
cli
or
and
rcr
daa
out
sub
push
push
inc
sbb
mov
cld
and
inc
std
mov
pop
xlat
mov
xchg
mov
jecxz
push
pop
test
es
repz
inc
nop
mov
cmp
sbb
and
mov
stc
nop
xchg
add
jp
mov
clc
shrl
pop
fcompl
dec
pop
or
and
fs
ret
fwait
in
stos
aas
popa
inc
push
out
mov
inc
scas
mov
sbb
pop
shrl
and
jo
jns
aad
cmp
mov
into
sbb
or
shl
insl
jmp
ret
mov
push
fistpll
hlt
fxch
and
xor
addr16
mov
lcall
mov
jmp
pushf
insb
or
ret
or
xlat
stos
sbb
pop
jecxz
pop
push
adc
cmp
dec
mov
movsl
and
or
leave
mov
into
out
xor
mov
outsl
movsb
add
jae
sbb
lret
in
scas
in
sahf
roll
cs
adc
shrb
dec
subb
push
pop
insl
stc
iret
mov
push
mov
ss
sub
repz
add
xor
push
push
int
push
adcb
push
aad
fisttpl
cld
jb
jns
pop
mov
xchg
aam
cmp
and
out
daa
mov
xchg
mov
add
push
adc
in
adc
xchg
into
aam
lods
data16
push
mov
std
jmp
in
jle
hlt
jge
cmc
xchg
shll
in
mov
in
out
inc
mov
call
fildll
outsb
add
mov
pop
into
imul
push
mov
pop
fldt
out
les
pop
and
xchg
mull
xchg
xor
pusha
jg
mov
jecxz
pop
sahf
or
dec
lods
test
shl
stos
pop
in
jbe
push
test
and
mov
xchg
test
mov
mov
inc
adc
aas
loop
imul
or
dec
sub
ss
add
out
lret
aaa
je
cmp
mov
imul
xchg
fmuls
mov
int3
test
js
xchg
inc
movsb
loopne
test
outsb
xchg
out
mov
adc
push
push
std
shl
loop
adc
jo
call
inc
icebp
pop
test
lock
insl
pop
pop
adc
arpl
iret
mov
mov
jb
aaa
xchg
outsb
cmpsl
mov
sub
iret
push
outsl
mov
gs
and
ss
in
push
dec
sbb
xchg
push
push
std
imul
sbb
push
cmp
dec
lret
dec
pusha
out
add
into
loop
stos
aaa
loopne
mov
loope
adc
ljmp
out
pusha
hlt
pop
lea
sbb
adc
cli
or
push
scas
jbe
aas
cld
jne
and
movsb
cltd
cli
test
es
mov
fs
movsl
adc
addl
sbb
bswap
mov
clc
inc
and
pop
push
hlt
out
add
dec
mov
popf
idiv
adcb
std
and
sub
jmpw
add
jp
add
mov
push
jb
push
inc
adc
insb
adc
dec
leave
iret
fsts
adcb
or
arpl
pop
cwtl
sahf
add
lock
sarb
add
pop
jecxz
jl
pop
rorb
inc
or
lea
or
sub
mov
pop
pop
xor
mov
push
sub
cli
aaa
and
mov
xor
fbstp
sti
int
sti
mov
pop
stos
out
adc
add
loop
or
sbb
push
rclb
mull
xchg
mov
orb
mov
imul
mov
sub
mov
cld
pop
dec
jae
xchg
mov
icebp
sbb
hlt
pop
loopne
fwait
stos
into
lods
out
push
mov
dec
inc
mov
xchg
movsl
mov
loopne
xchg
fcmovne
mov
xchg
fstpl
inc
xor
fists
jnp
stc
sub
dec
add
add
push
xchg
mov
popa
ljmp
andl
mov
or
fnsave
rclb
mov
push
insb
int
fidivrs
push
push
add
lret
mov
xchg
daa
repz
popa
cmc
repnz
je
mov
cltd
test
xor
cmp
add
mov
loop
xchg
xchg
or
or
adc
ljmp
lret
addr16
inc
or
loope
inc
insb
icebp
xorb
cmp
enter
call
push
icebp
sub
test
test
test
lea
sub
insb
std
daa
cmpsb
pop
in
xor
and
fcmovbe
cli
iret
push
and
scas
adc
adc
mov
sbb
cmp
xor
das
fldt
ds
add
or
pop
into
push
or
insb
inc
and
and
inc
ret
pop
add
xor
popa
sub
sub
enter
xchg
sub
mov
addr16
ficoml
addb
xor
pop
lods
andb
inc
push
iret
mov
or
and
push
movsl
xor
fstl
sbbl
sub
mov
mov
xchg
jle
insb
or
mov
pop
pop
insl
sub
push
xchg
cmpb
inc
and
and
cmpb
out
xor
sahf
loop
sub
mov
iret
xlat
subb
inc
inc
mov
push
or
pop
ja
fpatan
cmp
and
mov
xchg
xchg
xor
shrl
adc
icebp
mov
je
mov
push
xchg
add
fadds
sbb
xor
and
stc
aam
inc
aad
adc
negl
xor
aaa
and
sarb
dec
push
ret
push
test
sbb
sub
add
clc
jnp
push
sub
sub
xchg
fiaddl
call
jmp
jno
dec
mov
mov
loop
cmp
inc
in
enter
xor
jecxz
out
jns
mov
bound
jne
jae
dec
pushf
shlb
sbb
jns
push
or
arpl
push
test
mov
aam
push
inc
pop
jb
outsl
pop
in
mov
xor
cmpsl
outsl
jge
mov
cmp
xchg
add
in
xchg
shr
mov
cli
dec
and
aam
in
and
xchg
scas
jge
jecxz
out
fsubr
in
fiadds
jmp
or
mov
adc
int
push
sbb
xlat
mov
idiv
sahf
negb
cmp
mov
mov
out
push
add
jne
ds
sbb
cmp
xchg
jbe,pn
pop
ss
in
in
adc
es
or
jl
fdivr
and
lock
sub
imul
jge
pushf
dec
into
or
fldenv
sbb
scas
loopne
mov
xor
loope
or
add
mov
out
or
ss
push
adc
sbb
push
push
add
inc
or
mov
add
in
sti
popa
imul
dec
jge
aas
and
xor
into
jmp
sbb
jmp
and
adc
sbb
jl
arpl
xchg
xchg
fabs
mov
outsb
add
xor
sub
fadds
push
mov
push
std
add
add
lods
mulb
mov
inc
and
mov
sub
adc
or
add
insb
mov
mov
sti
ret
jp
xchg
lcall
push
add
inc
shl
inc
mov
and
mov
or
aaa
aaa
sti
test
cli
ja
xor
test
add
fdivr
fmul
xchg
ror
fstpl
andl
movsb
or
cwtl
pop
mov
mov
push
daa
repnz
mov
aaa
sbb
jne
aas
or
lods
sub
xor
test
pusha
jns
xchg
dec
std
mov
adc
jns
out
pop
push
jb
cs
cmp
daa
mov
pop
rorb
and
push
jle
mull
ds
movsb
jns
sti
test
inc
cs
bound
andb
sub
iret
mov
and
out
push
cmpsb
jmp
mov
dec
ret
xchg
fstpl
push
bound
stc
mov
icebp
sub
push
fstpl
lcall
xor
push
addr16
dec
sahf
or
sub
sbb
popa
mov
lods
mov
aad
addl
cmpsb
push
nop
ret
pop
mov
outsl
int
adc
mov
push
xchg
and
movsl
scas
fucompp
in
sub
idivl
push
cmpsl
mov
push
add
pop
adc
shl
push
mov
sbb
mov
test
ja
jno
adc
dec
pushf
adc
cmpsb
jae
testl
add
leave
and
pop
inc
pop
inc
mov
insl
sbb
push
in
ret
jecxz
jl
icebp
jl
rolb
pusha
inc
fcoms
xor
aad
or
xchg
pop
iret
push
iret
pop
loop
out
ljmp
sbb
imul
hlt
cmpsb
xor
scas
mov
sbb
push
mov
sbb
pop
cmp
inc
filds
stos
loopne
mov
adc
outsb
nop
mov
dec
pop
xchg
imul
cmp
bound
fwait
pop
xor
out
jge
cmpsb
mov
cmp
into
repnz
subb
mov
xor
mov
pop
and
or
inc
insl
loope
mov
push
imul
jno
inc
pushf
mov
hlt
or
inc
sbb
xchg
mov
dec
and
pop
dec
notb
pop
push
jno
decb
mov
sti
mov
jns
mov
dec
loopne,pn
out
xor
fcomp
adc
addr16
jne
sub
adc
inc
mov
arpl
or
imul
xchg
xor
inc
and
je
in
and
add
jg
popl
inc
push
dec
jns
jecxz
jae
inc
mov
sbb
test
out
lret
jnp
gs
mov
inc
std
dec
rcl
and
mov
jo
push
das
inc
cmp
or
lods
xor
mov
mov
adc
push
cwtl
add
cmc
fistpll
dec
lods
ret
push
cs
jns
fimuls
pop
mov
lock
fld
mov
ds
adc
rcll
in
inc
xchg
cli
mov
or
and
jp
push
inc
cmpsl
or
pop
jp
sbb
outsl
cmp
test
xor
xlat
sub
inc
outsb
ljmp
adc
mov
mov
lret
sti
sub
icebp
sahf
jg
sbb
sbb
ret
pop
xchg
imull
and
mov
jb
xchg
fidivrl
test
cmp
dec
lar
fadds
lahf
popf
clc
jo
pusha
mov
fisttps
jmp
sti
mov
push
cmpsl
push
jb
mov
jl
lret
int3
ja
sbb
or
call
mov
arpl
jmp
sbb
xchg
sbb
xor
ret
stos
fisttpll
lret
pop
inc
jl
loop
sbb
lahf
imul
mov
icebp
xchg
xor
add
sub
jnp
rorb
sbb
icebp
enter
ss
mov
loopne
mov
push
sbb
mov
xchg
fwait
add
mov
ds
jb
push
mov
jo
frstor
mov
mov
mov
outsb
push
mov
fs
aas
pop
pop
cmp
mov
adc
sbb
sub
shld
jo
xor
stos
or
mov
and
movsb
mov
les
ja
add
sub
xchg
cmpb
sub
xor
movsl
xor
ficompl
test
xchg
jb
dec
or
pushf
fidivrs
out
sbb
cwtl
mov
test
lds
and
add
test
mov
cs
adc
aas
mov
call
or
jo
loopne
cmp
xor
inc
enter
xor
jg
jnp
sbb
leave
inc
inc
and
stos
sub
out
push
cmp
test
andl
out
loope
call
popa
nop
movsl
je
imul
fisubl
sbb
cmp
inc
or
shl
and
adc
fwait
call
xchg
sub
push
sbb
js
mov
ficoms
orl
test
pop
ret
cmp
inc
int3
ss
pushf
jecxz
pop
pop
inc
xchg
mov
add
data16
pop
pop
push
inc
lahf
gs
jge
in
popf
fildll
repnz
jns
sahf
ss
pop
mov
and
push
mov
loopne
stc
fwait
xor
push
jl
mov
or
pop
cmpsl
mov
xchg
loop
out
mov
or
es
sbb
test
mov
pop
js
hlt
pop
mov
mov
dec
cmpsl
outsl
es
leave
insb
mulb
or
fcomps
repz
xor
pop
rcll
test
out
ret
or
lret
dec
pusha
data16
ret
push
in
mov
mov
inc
insb
sbb
adc
xor
xchg
inc
xor
lret
in
aad
gs
and
lock
xor
in
icebp
push
jecxz
xchg
aaa
dec
movsb
jl
mov
push
cmpsb
pushf
jns
cmp
les
mov
cmp
dec
push
add
cld
jno
icebp
adc
int
mov
push
adc
adc
adc
call
sbb
mov
dec
pop
gs
adc
inc
rcl
xchg
or
stos
js
jge
jmp
cli
sub
push
xchg
jne
push
adc
xor
or
ljmp
lcall
nop
lods
popa
dec
or
mov
push
push
push
jmp
push
lock
test
test
mov
jae
mov
sbb
dec
push
int3
mov
gs
pop
add
inc
test
fisubrs
inc
popf
sbbb
mov
cmp
arpl
stos
adc
jae
jb
adc
addr16
dec
push
pop
inc
pop
out
sub
or
xchg
mov
aam
pop
and
mov
lret
xorl
mov
inc
fdivrl
jb
dec
mov
sbb
ror
ljmp
imul
ja
dec
test
fcompl
sbb
mov
popa
cmc
movb
je
insb
fiadds
xor
dec
inc
aad
sbb
push
xchg
cmpsb
jbe
mov
mov
leave
xor
sbbb
cmp
outsb
in
push
dec
inc
jae
pop
sti
in
mov
outsl
xor
or
jae
push
test
subb
and
es
hlt
cmc
add
inc
pop
jmp
fdivl
xlat
clc
stos
xchg
outsl
push
mov
push
insb
int
push
or
sub
popa
sub
dec
out
xor
jne
push
out
xchg
out
mov
outsb
add
pop
fwait
push
lret
add
outsb
in
fnstsw
sahf
test
jbe
xor
lea
std
cwtl
jg
cmp
lcall
fsubrs
and
pop
jne
adc
nop
sbb
aad
push
adc
ja
rcll
mov
scas
rol
xchg
js
leave
mov
lcall
fcomp
cmp
push
je
aaa
das
daa
hlt
sbbl
dec
scas
dec
pop
insb
les
pop
in
or
xchg
lcall
fistpl
push
cmpsb
clc
push
xchg
out
leave
mov
xchg
movsl
cli
pop
adc
daa
shl
lret
mov
imul
aam
sub
adc
or
scas
test
mov
inc
inc
mov
fwait
enter
inc
pop
sbb
sub
jno
mov
xor
pop
mov
cmp
lret
pop
adc
in
sub
imul
ja
sarl
int3
xchg
ljmp
sbb
clc
add
pop
jnp
stc
ror
in
mov
out
sub
add
fwait
sub
cmpsl
and
adc
out
aam
add
cmc
cmp
mov
test
daa
ret
mov
sub
scas
pop
in
xchg
mov
mov
fwait
add
imul
jle
mov
loope
aas
movsl
xchg
pop
adc
lods
loopne
cmc
int3
inc
push
les
cmp
outsb
dec
add
clc
out
cld
dec
fcomps
ficompl
push
loop
pop
adc
gs
push
outsb
cmpsb
jmp
decl
aad
lock
lods
testl
hlt
or
ret
push
mov
in
mov
rcrl
nop
mov
and
jnp
inc
mov
mov
jmp
pop
js
lret
insl
jl
dec
loop
movsl
or
rolb
pop
out
mov
mov
jmp
or
sbb
push
mov
adc
test
aaa
hlt
mov
movsl
xor
sbb
xor
xchg
cmp
les
sti
in
sbb
pop
mov
xor
mov
push
test
mov
cmp
xchg
enter
stos
imul
sub
int
mov
fnsave
add
dec
arpl
inc
repnz
js
sbb
mov
jle
stos
sbb
jmp
movsl
and
bound
insl
cmpsb
push
fisubl
divps
sbb
mov
add
xchg
pop
ret
popf
mov
outsl
outsl
adc
sbb
mov
lcall
jns
arpl
int
inc
pop
pop
sbb
in
mov
jo
in
adc
or
mov
sub
es
xchg
jno
and
add
jmp
mov
mov
mov
ret
inc
sbb
xchg
xor
imul
or
mov
jb
xchg
sub
outsl
cmpsl
xchg
inc
jmp
sbb
rcrl
cmp
ja
pop
mov
mov
push
jmp
ss
jecxz
xor
call
aad
cmpl
ja
std
pop
mov
dec
mov
fstl
repz
xchg
cmpsl
mov
xchg
push
fistl
add
lods
out
lahf
jb
and
sub
cltd
sbb
popf
or
rcl
mov
cmp
insb
loope
add
out
push
pop
or
xorb
popl
xor
je
xor
xlat
iret
dec
lds
or
add
push
scas
rolb
negb
cmp
icebp
fidivrl
xor
decb
imul
sti
jnp,pt
jmp
repz
push
push
add
loop
add
jge
insb
ret
xchg
lods
or
outsb
fsub
loope
outsl
pushaw
ljmp
gs
inc
insb
xor
jnp
mov
push
jle
orl
clc
loopne
mov
push
shll
subb
sub
push
addr16
jo
repz
xor
lret
stc
mov
sbb
xlat
cmp
push
adc
sub
mov
pop
or
in
inc
je
mov
adc
mov
psubd
fisttpl
sub
jp
jl
jo
ds
cltd
daa
sar
in
mulb
xchg
pop
frstpm(287
add
inc
inc
insb
sub
ret
adc
out
test
test
jo
xor
sbb
test
mov
jle
mov
scas
pop
popa
xchg
jecxz
ss
mov
mov
jns
popf
jg
test
push
lock
out
jge
pop
mov
or
addr16
jb
mov
xor
scas
dec
ja
sarl
ficoml
xor
popa
outsl
cmp
aaa
aam
add
scas
fs
lahf
add
gs
pop
pushf
xor
lods
xchg
add
jecxz,pt
sbb
sub
pusha
aad
popa
mov
out
xchg
sub
sbb
sub
adc
push
fs
xchg
test
xchg
push
fnstenv
mov
sub
jg
ljmp
pop
addb
sub
dec
mov
xchg
cmp
insb
test
inc
inc
dec
sbb
jge
xchg
aad
jge
loopne
cmc
loopne
inc
inc
mov
fidivrs
push
in
rorb
mov
in
fsubl
dec
cmp
sub
cmp
jae
pop
mov
jns
mov
xor
in
std
mov
rclb
dec
ror
xor
nop
sahf
test
mov
mov
push
add
loope
mov
enter
pop
push
roll
outsl
sbb
sub
xor
mov
subb
adc
cmpb
jecxz
or
insl
mov
and
dec
jb
pop
ret
data16
shll
sbb
int3
pop
xchg
insb
loopne
push
loope
jbe
or
movsl
or
cmc
push
incb
lahf
leave
or
cltd
aad
xor
int
mov
xor
filds
test
mov
mov
das
cmp
or
fcomip
mov
xchg
xor
push
push
in
push
push
andb
mov
xchg
and
xchg
mov
add
xor
dec
insb
cmp
sbb
xchg
adc
jle
daa
imul
pop
mov
jecxz
xchg
std
mov
push
fnstenv
dec
sbb
jle
mov
or
not
mov
jecxz
sub
jecxz
sbb
cltd
push
or
add
fs
mov
in
test
lods
dec
jns
rcll
add
addb
cmp
cmp
jmp
xor
hlt
stos
repnz
xchg
or
add
adc
jp
in
xchg
loope
gs
dec
jmp
jg
nop
and
stc
aas
xchg
repnz
mov
cld
arpl
adc
popf
cmpsl
gs
push
hlt
jecxz
sub
sarl
push
mov
push
jno
sbb
xor
cmpsl
dec
pop
ret
jmp
int3
ficoml
mov
pop
cwtl
dec
aad
dec
add
ss
incb
sbb
mov
push
ljmp
lea
stc
jns
ja
push
call
in
mov
cmpl
or
pop
xchg
jbe
stos
test
lds
mov
or
pushf
jo
dec
push
or
lret
and
lret
mov
imul
fs
gs
sub
jmp
xchg
jnp
lods
xchg
gs
push
jno
test
mov
jmp
adc
sub
adc
mov
ljmp
adc
aam
or
cs
push
aaa
sub
push
in
sti
ljmp
jp
mov
stos
or
or
fildll
mov
inc
dec
imul
cld
mov
add
xor
out
mov
jecxz
xchg
cmpsb
sbb
jo
jbe
data16
dec
xchg
fmuls
std
js
push
and
and
lods
jns
mov
push
insl
push
mov
dec
add
fcomi
jb
adc
lods
lock
outsb
outsl
sbb
or
and
jg
scas
stos
fnstenv
push
mov
pop
add
and
bound
imul
cld
test
sbb
outsl
das
loop
loope
ret
js
insb
lods
pop
out
jl
xlat
fs
in
lds
loop
mov
jo
or
pusha
daa
mulb
int
cmpsb
mov
sbb
sub
mov
xor
pop
sub
call
adc
xchg
dec
jae
pop
in
xor
test
in
push
sti
adc
loope
or
movsb
ljmp
hlt
sub
xchg
add
mov
fldl
push
mov
jecxz
imul
ljmp
push
rorb
gs
fwait
jp
fmuls
notb
jmp
iret
lea
sbbl
ljmp
jno
sub
pusha
pop
test
adc
sbb
pushf
sbb
adc
mov
jne
and
sub
lock
sub
aas
outsl
scas
mov
jns
inc
icebp
mov
adc
add
pop
mov
in
aad
add
pop
mov
adc
xchg
and
or
in
mov
sahf
cmpsl
mov
ret
sahf
out
gs
xor
mov
cli
xchg
dec
call
or
mov
pop
xlat
mov
test
rolb
ljmp
pop
mov
mov
sub
int3
xchg
mov
push
ja
mov
push
mov
data16
xor
dec
cmpb
jecxz
scas
sbb
xchg
jns
iret
jle
test
dec
pop
jl
jae
test
ljmp
into
or
add
sbb
add
xchg
nop
and
add
xchg
pop
push
pop
enter
xor
jg
stos
in
incb
mov
inc
xchg
inc
pop
push
out
mov
cmp
ljmp
stos
jp
pop
mov
adc
mov
mov
ficoml
fdivr
adc
rcll
lods
mov
dec
mov
mov
mov
mov
cmp
mov
movsl
adc
xchg
imull
mov
pop
xor
mov
pushf
pop
adc
insl
inc
jp
scas
je
shl
enter
adc
pop
neg
fisubs
out
mov
jecxz
std
and
iret
and
jge
push
ja
sbb
lret
inc
pop
inc
test
sub
ja
outsb
mov
clc
cli
cmc
xchg
cld
cmp
xchg
or
lahf
add
addr16
mov
je
mov
jmp
or
das
jne
stos
xchg
pop
add
jo
cmp
loope
pextrw
xchg
orl
adc
ljmp
or
or
mov
aad
jg
xchg
sbb
sbb
test
xor
das
add
dec
dec
fcmovb
pop
mov
orb
mov
leave
jmp
dec
fisttps
push
sub
xchg
sub
stos
fisubs
ljmp
pop
sub
in
je
gs
ss
inc
inc
mov
decb
sbb
ret
imul
insl
pop
mov
cmp
xchg
xchg
mov
mov
pop
and
adc
cld
rcrb
dec
sub
jne
stc
jg
and
inc
aam
mov
adc
movsb
ret
mov
stc
aaa
repz
loop
shlb
pop
icebp
mov
ss
mov
fidivrl
das
mov
popa
xchg
dec
jmp
sub
fwait
mov
fisttpll
adc
leave
repnz
pop
or
sub
repnz
bswap
lea
mov
xchg
dec
xor
jns
cmp
or
mov
das
push
test
push
lcall
jno
insl
mov
jg
cltd
outsb
mov
sub
idivl
ljmp
lret
js
or
cmp
or
gs
aam
mov
mov
and
in
lds
mov
mov
pop
and
add
loope
popf
fwait
lret
mov
pop
add
pop
lret
jo
push
adc
ret
mov
aad
in
inc
filds
dec
jne
sub
cmp
mov
fnstcw
dec
sub
mov
mov
repnz
xchg
and
shrb
push
fistl
sub
inc
pop
adc
jle
sub
dec
divb
cwtl
dec
dec
lock
adc
add
je
push
mov
jp
jno
je
mov
sub
cmpsb
add
push
leave
xor
jne
or
or
out
mov
fnstenv
pop
mov
and
ljmp
loope
push
scas
out
leave
adc
setae
push
loop
sbb
rclb
jae
aam
gs
mov
aas
mov
shl
cli
xchg
inc
jno
into
adc
cwtl
sahf
addl
jmp
jns
adc
iret
and
lds
mov
mov
cmpl
int3
mov
nop
xor
add
sub
pop
lea
sti
shll
sti
cmp
push
pop
notl
jmp
cwtl
add
mov
cld
test
push
ficoml
cmpsb
test
xchg
mov
loopne
nop
cmp
test
ud1
adc
jge
jecxz
inc
pop
testl
inc
movsb
or
add
push
jb
stc
add
lret
mov
xchg
test
dec
notl
inc
jl
cmp
jl
sahf
or
xchg
jo
in
loop
imul
enter
or
adcl
je
jnp
fsubrp
lcall
lret
push
cmp
xchg
imul
icebp
insb
out
int3
jnp
or
mov
jecxz
popf
mov
add
fwait
ljmp
dec
lea
into
add
mov
mov
pop
je
das
popf
dec
jno
orl
xchg
push
cmc
mov
mov
popl
movsb
loope
shrb
ss
mov
add
push
loopne
mov
js
popa
lret
fbstp
inc
sbb
cltd
shl
and
push
sbb
inc
inc
jp
xchg
out
push
mov
hlt
push
cmp
mov
lahf
lahf
jne
sub
push
subl
xchg
add
cld
pop
pop
fcomps
cmpsl
loope
outsl
stc
jno
test
jbe
pop
out
stc
mov
mov
mov
aad
push
xchg
mov
shl
in
adc
movsb
frstor
dec
stc
inc
test
jp
pushf
xor
xchg
adc
ja
sub
cmp
xor
inc
xor
inc
inc
jns
rcpps
adc
inc
adc
ret
lret
pop
dec
fs
mov
push
sub
dec
mov
push
or
mov
mov
fs
mov
loopne
xor
shrl
rcl
cli
inc
test
dec
cmpps
es
xchg
lock
jbe
out
testl
stos
gs
fwait
sbb
sbb
dec
mov
push
add
sbbb
push
jmp
mov
ja
pop
sti
sub
testl
jns
pop
shl
scas
xchg
cmp
fsubl
mov
cmc
adc
inc
std
jno
movsl
test
fadd
sbb
cmp
cli
nopl
jmp
fildl
xchg
adc
dec
aas
jns
mov
gs
jl
fadd
pop
mov
int
dec
orl
push
outsl
cmpsl
mov
int
fwait
outsl
or
or
push
bnd
and
push
add
enter
mov
inc
sbb
mov
cltd
jle
int
repnz
repz
mov
sbb
or
inc
sub
lahf
push
nop
imul
add
lahf
or
inc
ljmp
fcmovu
cs
lret
test
mov
cmpsb
arpl
aam
dec
cmp
sub
ljmp
sub
loop
mov
cwtl
stos
xor
pop
lods
pop
mov
cmpsl
das
stos
xor
nop
repnz
pop
sahf
aad
push
jg
cli
xor
popf
gs
xor
shrl
pop
fsubrl
push
or
lock
jp
pop
out
sti
paddsw
xor
lea
jo
cmc
xor
add
test
jmp
rolb
xor
lea
ja
mov
and
mov
pop
mov
sbb
fstpt
push
pushf
mov
or
dec
xchg
inc
loope
cltd
sbb
pop
push
daa
mov
sub
inc
xchg
je
and
arpl
dec
jae
sub
mov
mov
outsb
bound
xchg
sahf
sbb
mov
lcall
fcmovnbe
mov
leave
pop
mov
or
adc
stc
jge,pn
or
mov
shrb
daa
mov
push
cmc
cld
in
pop
lcall
icebp
stos
sahf
int
adc
inc
pop
stc
das
mov
clc
inc
loop
xlat
fiaddl
sub
add
xchg
push
xchg
adc
sbb
stc
in
push
mov
scas
cltd
dec
lcall
mov
std
xchg
dec
jnp
test
pop
shrd
mov
in
in
pop
out
cli
rclb
sbb
xchg
jp
mov
adc
xorl
lret
inc
fldt
mov
addr16
mov
cld
add
in
lds
int3
daa
pop
sbb
push
pop
cmp
cli
stos
test
inc
add
fwait
xchg
and
rcl
push
popf
adc
pop
sbb
stc
push
pop
push
pop
sub
mov
ljmp
push
orl
pusha
enter
out
fcmove
dec
mov
pop
imul
pop
flds
mov
pushf
cmp
mov
or
jo
lcall
loopne
test
mov
in
mov
dec
pusha
push
repz
mov
rclb
pop
aas
or
or
addr16
xchg
leave
or
add
jecxz
pop
adc
inc
and
popf
test
mov
push
jo
aam
ja
sub
dec
aas
loopne
mov
pop
push
and
push
out
push
mov
aam
dec
pop
bound
lret
mov
jo
idivb
sbb
jle
js
cmp
out
jmp
pop
pop
xor
pop
sub
enter
stos
fucomp
mov
jmp
sbb
jnp
add
mov
rolb
push
jne
xchg
jmp
stos
pop
dec
xchg
addl
jo
movsl
rclb
call
rorl
fidivl
add
push
pop
lock
lret
sub
push
or
fidivl
mov
sbb
jl
mov
popa
jnp
jbe
adc
inc
sbbb
in
push
xor
adc
cwtl
jmp
xchg
add
outsl
cmpsl
cmp
pop
movsl
outsb
or
lock
pop
inc
in
fsubl
xchg
jge
or
sub
ja
sub
mov
out
fnstcw
test
std
pop
adc
clc
in
cmp
imul
and
lods
mov
push
sahf
sarb
popf
inc
shl
jno
das
ljmp
std
push
in
dec
icebp
mov
loopne
scas
es
add
mov
insb
incl
enter
jle
cmpsb
cmpsl
gs
adc
in
test
adc
aaa
mov
add
into
cmp
insl
jecxz
in
and
adc
mov
les
pop
pop
sahf
stos
repz
adc
add
frstor
cld
push
sbb
xchg
imul
add
es
sar
mov
xor
xor
pop
popf
fstpt
pop
adc
aas
dec
iret
dec
punpckldq
inc
jl
int
test
subl
lea
scas
loope
call
cmp
sub
fwait
jae
inc
add
mov
or
cli
into
adc
push
push
cmp
ds
and
pop
sbb
add
jbe
cli
js
pop
jle
adc
push
in
push
sub
cmpsb
sub
push
cmp
sub
jp
icebp
sbb
cwtl
pop
pop
fsubp
dec
mov
inc
repz
and
cld
int3
xchg
repz
mov
cwtl
test
xor
or
dec
fstl
pop
adc
fdivrs
push
aad
in
xor
hlt
out
and
cmc
pushf
sbb
add
pop
icebp
push
cld
mov
std
pushf
sub
hlt
test
fsub
xstore-rng
cmpsl
add
mov
or
pop
test
cmpl
in
xchg
cmpb
icebp
sub
test
add
pop
add
scas
cs
pop
out
xlat
popf
mov
pop
aaa
lods
push
insb
lds
lods
or
sub
mov
ret
dec
or
int3
daa
jl,pt
inc
dec
stos
inc
cmc
and
scas
aad
ret
sub
test
test
cmp
sbb
sahf
bound
call
inc
fsubr
sahf
pop
dec
out
and
lea
cs
insb
pop
mov
xorl
sti
stos
in
and
mov
pop
mov
int3
mov
lods
push
mov
shl
into
jo
mov
daa
xchg
std
adc
aaa
mov
mov
fsubp
mov
push
lcall
cmp
and
es
adc
jp
fistl
loope
std
push
test
push
mov
push
sub
mov
test
enter
rorb
pushf
es
or
stc
hlt
fwait
test
mov
popf
test
pop
in
dec
jecxz
sub
xor
subl
sarl
xor
in
cwtl
les
mov
cmp
xchg
sbb
xor
iret
pushf
repnz
out
pop
mov
inc
xor
dec
inc
out
int3
dec
call
ds
sbb
test
cmpsl
idiv
push
fwait
jns
js
dec
dec
sub
mov
aaa
stos
cltd
leave
test
mov
cltd
push
jp
push
fwait
insl
aad
mov
jae
xchg
push
in
ja
lcall
xchg
or
mov
mov
test
pop
loope
jle
mov
add
outsl
shl
es
cli
leave
xlat
push
add
xchg
xlat
or
test
aam
pushf
pushf
dec
inc
push
xchg
mov
jl
mov
fsubr
popa
add
lcall
std
lret
das
sbbl
mov
dec
push
popf
sbb
xor
inc
sub
je
sbb
mov
xor
lock
fwait
inc
popa
frstor
dec
fsubr
std
imul
dec
and
mov
ds
cli
jo
bound
pop
fdivrs
aad
in
sub
nop
and
cmc
sub
ss
push
scas
scas
adcb
push
cs
loope
sbb
xor
mov
jle
sti
jae
add
std
pop
mov
out
rorb
jecxz
pop
jnp
jp
push
pop
ret
cmc
mov
loope
fdivs
das
movsb
std
mov
stos
push
and
add
and
sub
pop
push
cmp
in
mov
ficoml
iret
lcall
cmp
addr16
sbb
add
and
pusha
push
daa
cmp
mov
mov
xchg
mov
scas
jno
les
mov
int3
dec
jp
loop
testl
dec
cmp
sub
push
enter
in
test
in
xchg
xor
sub
cmp
xor
repz
or
sahf
in
inc
sub
scas
mov
ds
cmpsl
mov
rol
in
xchg
mov
scas
nop
lods
push
bound
lock
shrb
loop
ret
sub
mov
pushf
sbb
pop
lahf
mov
movsl
fsubrp
sbb
aas
ja
mov
mov
xor
inc
mov
mov
mov
xchg
fdiv
les
adc
in
and
mov
hlt
cmp
add
xor
inc
inc
pop
cmc
mov
add
pop
sarl
cltd
scas
mov
xchg
adc
je
lods
sub
arpl
jl
mov
push
or
test
push
xor
xchg
imul
mov
mov
insl
in
int
in
push
push
pop
les
inc
daa
dec
jne
xchg
popf
arpl
aad
pop
arpl
pushf
mov
test
int
push
sbb
addr16
jl
adc
js
adc
mov
jmp
inc
jns
jg
jae
xlat
push
rcll
cs
lods
sbb
test
jbe
addl
xchg
sub
add
lds
push
into
sbb
fwait
mov
and
mov
pop
cmp
vpmulhw
cwtl
mov
mov
std
out
jns
pop
sbb
cwtl
cwtl
cmpb
sub
nop
xchg
mov
stc
sti
clc
jo
mov
std
repnz
outsl
push
call
xchg
xchg
xchg
lock
jne
dec
out
mov
mov
aas
fsubl
or
push
in
jns
jg
std
push
sbb
cmc
fs
cmp
mov
xlat
ret
mov
cmp
inc
into
or
outsl
sub
hlt
pop
test
lods
lods
pop
push
push
pop
in
sbb
or
out
jns
adc
inc
push
dec
fdivrp
pop
push
mov
lahf
dec
mov
lret
je
mov
mov
jecxz
cmp
xor
or
icebp
sahf
push
jmp
stos
orl
mov
mov
stos
push
sahf
outsl
cmp
fucomi
test
rorb
leave
cmp
sahf
incb
mov
cs
jne
xchg
or
and
or
mov
cmp
or
bound
lret
jp
mov
lock
ljmp
mov
icebp
jb
cmp
aas
shlb
add
jmp
cmpsb
jmp
mov
cmp
push
iret
xor
push
les
push
mov
aad
hlt
add
sub
mov
repz
mov
pop
icebp
into
lret
arpl
or
pusha
fwait
mov
inc
cmp
jnp
scas
jle
jb
mov
adcl
and
into
fcoml
insl
mov
push
sbb
test
xor
stc
cmp
mov
cltd
mov
aad
sub
xchg
lods
xorl
lret
or
add
push
int3
fidivrs
mov
test
ret
jecxz
fs
push
pop
sub
cmp
jb
arpl
adc
pop
xor
daa
mov
mov
jg
mov
dec
repz
add
outsb
loop
and
cltd
outsb
mov
add
loop
push
or
stos
icebp
sub
mov
mov
js
in
sti
inc
inc
mov
jo
in
testl
push
jmp
mov
jb
mov
sbb
mov
dec
dec
dec
int
jecxz
testb
test
sti
sub
das
xor
in
int3
pusha
pop
cs
insl
out
test
xchg
stc
or
xorl
shlb
jg
cmp
popa
xor
daa
rcrb
mov
xchg
icebp
fcomps
cli
push
shll
lock
cmp
mov
mov
jo
xor
add
cmp
aas
clc
pop
pop
xchg
add
jne
imul
cmp
insb
test
cld
outsb
push
jnp
pop
aaa
mov
std
xor
cmp
pusha
cli
pop
pop
xchg
ret
mov
testb
cmp
sub
repz
mov
shl
fnstcw
mov
rcrb
shlb
fstl
xchg
ficomps
and
mov
add
or
mov
dec
dec
sub
or
push
adc
inc
jg
mov
adc
jae
sbb
push
xor
or
adc
add
addb
cmp
mov
or
insb
and
cmpsl
push
cmpsl
xorb
stc
add
jle
outsl
mov
or
gs
cld
dec
loop
shl
ds
lret
cs
lret
ret
and
inc
or
xchg
cltd
cmpsb
mov
mov
subb
xor
add
dec
pop
aas
icebp
adc
adc
mov
cmc
pop
sahf
sub
dec
ret
outsb
pop
adc
xor
jb
sub
fdivl
fimuls
out
cli
scas
mov
idivl
in
inc
push
and
push
leave
or
adc
lods
pop
imul
in
xchg
or
test
mov
out
sbb
shll
stos
lock
xor
ljmp
xchg
mov
add
stos
mov
push
test
lock
inc
bsr
mov
dec
mov
mov
sahf
mov
add
xchg
scas
jge
stos
int
sub
stos
inc
call
lahf
and
sbb
leave
dec
mov
loope
mov
cwtl
inc
add
repnz
fs
mov
jbe
cmp
cmpsb
and
mov
sub
fmull
jmp
nop
cmp
aaa
and
jge
outsl
inc
mov
sbb
mov
pop
and
int
cvtps2pi
call
or
in
into
jl
call
push
call
mov
mov
setbe
stc
or
sub
jg
push
push
dec
lea
xor
shl
cmc
pop
aas
dec
push
push
mov
push
push
xlat
mov
jmp
fwait
cld
cmp
lahf
enter
shrb
vmread
sbb
push
fwait
stos
fsubr
cmc
mov
aad
dec
testl
sti
jnp
ret
sbb
xchg
clc
sub
pop
lds
jno
jne
ljmp
cmpsb
into
sub
mov
clc
je
inc
mov
mov
lcall
lahf
add
fstpl
in
enter
push
pushf
aad
cmp
pop
or
jmp
mov
sbb
arpl
xchg
push
xor
dec
push
lea
push
ret
sbb
pop
sti
das
sbb
sar
stc
pop
mov
jle
adc
or
fildl
jb
movsl
or
je
dec
stc
das
cmpsb
adcb
jnp
out
dec
push
es
imul
faddl
bnd
aam
stos
cli
jno
or
and
mov
xor
inc
cmp
testl
out
mov
std
xchg
cli
data16
mov
dec
cltd
dec
mov
pop
pop
scas
and
outsl
out
jp
out
mov
sbb
lds
mov
ja
mulb
inc
xor
lods
mov
icebp
inc
jmp
add
and
ret
xchg
inc
ja
push
push
cmp
in
xchg
adc
cmp
mov
adc
push
pop
xchg
scas
xchg
xchg
push
outsl
ret
mov
cmp
inc
adc
jo
test
mov
outsl
fwait
testl
out
pop
popa
pop
mov
aam
bound
xor
add
xchg
pop
sbb
or
daa
in
stos
jns
mov
jle
or
xlat
shr
mov
mov
outsb
and
rol
gs
or
dec
rcl
jnp
ja
out
pop
loopne
mov
imul
sti
mov
aam
mov
inc
inc
leave
int3
mov
inc
adc
scas
sarl
dec
fwait
lcall
cmpsb
cmpl
mov
dec
sub
repnz
ds
xor
ret
mov
cmpps
or
hlt
inc
stos
imul
lea
inc
ret
popa
aad
sub
mov
push
lods
aam
loope
pop
sub
inc
push
adc
jns
pop
dec
xlat
push
jnp
mov
enter
pop
int3
lret
das
xchg
or
fcmovb
jl
imul
int
push
mov
fnstcw
jne
clc
test
gs
and
add
jmp
adc
fnstenv
mov
cmp
xchg
scas
xchg
and
loop
push
ret
push
or
scas
jecxz
push
push
mov
stc
xor
and
insb
in
in
pop
add
xchg
and
out
dec
sub
jecxz
insl
pushf
sbb
gs
push
and
pop
or
xchg
ljmp
xchg
dec
add
xor
jbe
loopew
into
in
fsts
mov
push
dec
jle
rclb
fdivl
ds
lret
shlb
cmp
sub
mov
ss
dec
loope
test
insl
xorl
int
std
movups
cs
cmp
adc
pop
aad
mov
sbb
sbb
mov
and
xorl
movb
mov
push
inc
xchg
jnp
adc
cli
aad
mov
jle
enter
cli
add
lret
sahf
or
gs
js
mov
cld
sbb
inc
repnz
jbe
adc
add
sahf
cmp
jp
dec
test
mov
add
push
aas
jno
gs
jl
jne
ficompl
out
mov
mov
int
mov
pop
stc
push
clc
loop
jmp
les
leave
daa
mov
cmpsb
xchg
push
adc
icebp
out
mov
repz
sar
fistl
lods
insb
add
dec
dec
jns
sbb
pop
test
idiv
cmp
mov
mov
cmp
call
div
in
sar
mov
clc
cmp
stos
jo
mov
aam
and
popa
cmc
or
or
cmp
out
xchg
pop
divl
lods
pop
push
sub
cmp
xchg
xor
cmp
lock
mov
or
sub
pop
test
pop
and
and
arpl
adcb
and
mov
cmp
out
cmp
push
mov
cwtl
dec
pusha
call
inc
mov
in
arpl
cli
ss
mov
fcmove
xorb
and
xchg
mov
sub
push
and
pop
jg
loopne
js
push
add
adc
add
sub
js
loopne
jge
mov
data16
scas
and
stos
fcmovb
pop
sarl
pop
test
xchg
jnp
cmp
in
pop
lods
std
add
sub
insb
adc
je
fcomi
outsb
jmp
aam
jmp
fsub
shlb
cli
cltd
bound
push
jae
push
pop
in
outsl
jp
cmpsl
ljmp
xor
jge
lret
mov
ljmp
cmp
stc
js
adc
lds
and
lcall
pop
mov
pusha
pop
adc
mov
jnp
gs
movsb
mov
xchg
xor
ja
jl
push
rorl
sahf
sbb
and
fcoml
insb
imul
cmp
xor
mov
test
in
lcall
ljmp
cmpsb
pop
cmpsb
nop
pop
leave
je
repnz
inc
mov
in
outsl
lods
sub
jle
mov
xchg
add
sahf
cmp
cmp
xchg
xor
jmp
repz
cld
adc
or
lock
jge
ret
rol
cli
mov
loop
mov
mov
mov
xor
add
pop
arpl
aaa
arpl
out
sub
scas
sbb
inc
lahf
dec
cmpsb
cli
xchg
xor
and
sti
adc
mov
into
cmc
cli
and
pop
loope
das
and
lcall
sub
mov
inc
jg
scas
inc
adc
gs
mov
xchg
movsb
out
popf
xor
inc
add
sbb
xchg
data16
add
xor
mov
inc
imul
int
jnp
out
nop
shl
insb
lods
inc
mov
sub
xor
cmp
pop
test
aas
cmc
clc
pop
mov
icebp
jecxz
in
dec
jecxz
out
pop
xchg
mov
lret
cs
nop
shll
pop
inc
sub
lret
inc
js
add
pusha
adc
inc
push
add
push
and
sarb
or
or
push
les
lret
or
fwait
ljmp
xlat
loopne
fists
pop
fldl
insl
sub
add
cli
rcrb
add
or
aam
pop
jb
das
sahf
add
push
sbb
sub
xchg
stos
mov
push
xchg
test
scas
xlat
xchg
cmp
xor
mov
out
mov
lcall
cmpsb
and
insl
andb
sbb
and
in
cmc
sbb
mov
jae
jmp
aam
jnp
push
cltd
xchg
xor
pop
pop
call
std
adc
push
jge
lods
jmp
add
mov
or
mov
pop
lcall
addr16
inc
mov
mov
ja
jg
fidivl
fistps
je
repz
pusha
mov
xor
xor
mov
test
ret
inc
lcall
pushf
adc
mov
jmp
cld
pop
push
xchg
push
in
ja
ret
iret
push
xchg
loopne
fucom
decl
xor
loopne
mov
cmp
push
mov
stc
lock
loopne
and
mov
dec
mov
xor
jb
and
push
jo
shr
push
loop
pop
insl
icebp
mov
arpl
lahf
mov
test
inc
lcall
sbb
mov
popf
je
sbb
mov
mov
aam
xor
add
fsts
je
adc
inc
jo
pop
push
mov
fwait
out
bound
into
mov
sbb
cld
sub
aam
cmp
addr16
outsb
jg,pt
aam
call
push
bound
mov
das
fsubrl
hlt
sbb
test
mov
jg
cmpsl
stc
aam
ror
sbb
or
xadd
inc
mov
rcr
and
pop
sarl
mov
data16
div
loop
shrb
lcall
cmp
xchg
push
inc
jo
pop
sub
or
rcll
movsb
inc
jmp
mov
movsb
add
sub
mov
push
push
clc
imul
icebp
outsb
shlb
xor
out
mov
mull
mov
jno
roll
je
or
push
lret
xchg
dec
push
test
inc
bound
jl
cmp
sbb
mov
or
cmp
popf
xchg
and
in
pop
sti
cwtl
pop
or
stos
jnp
lret
jmp
inc
mov
jle
std
dec
mov
sub
mov
int
push
sub
pop
push
jmp
xchg
roll
sbb
sbb
ffreep
stc
shl
or
icebp
rcrb
scas
lret
mov
jns
lods
sahf
mov
push
or
and
cli
cwtl
jae
ret
jns
icebp
data16
shll
inc
ficoml
push
mov
insb
fnsave
adc
nop
and
idivb
je
push
push
mov
push
mov
out
push
push
stc
and
mov
mov
aam
je
ja
xchg
js
repz
loop
mov
lret
xor
push
xchg
pop
fmull
inc
inc
aad
mov
pushf
add
cld
mov
enter
push
push
dec
out
jp
pushf
shlb
adc
sbbl
pop
insb
ret
xchg
dec
fidivrl
pushf
sbb
xchg
notl
pop
jno
push
mov
daa
out
lods
movsl
jae
sahf
cmp
add
push
fucomi
cli
popf
mov
xor
mov
xor
pop
lret
pop
or
or
or
in
and
loop
insb
mov
push
mov
sar
fsubrs
pop
xor
pop
and
aas
sahf
push
push
xor
jle
mov
mov
test
std
outsl
mov
pop
sub
and
inc
outsb
lock
fcomp
mov
jp
push
add
imul
pop
adc
push
notb
xchg
loop
push
icebp
inc
gs
jne
mov
jae
imul
shlb
pop
cld
or
negb
pop
scas
pop
adc
shr
sub
mov
lods
cmp
and
loop
lods
int
xchg
ret
mov
ffreep
lret
adc
dec
rcr
sub
add
sub
jg
push
clc
test
ds
xor
je
jne
inc
ja
fwait
push
movsl
fimuls
movsl
aad
jle
push
scas
sti
ds
jns
leave
and
inc
jecxz
daa
ss
xlat
or
pop
out
addr16
add
test
aaa
add
push
pop
xchg
hlt
cmp
pop
sbb
cmp
es
dec
or
and
stos
inc
xchg
scas
xor
sub
rcr
fwait
push
in
shlb
rolb
mov
lret
shlb
in
sar
ret
ss
lret
add
xor
int
xchg
test
leave
cmp
or
cmp
xchg
repz
push
xor
addr16
push
test
movsl
add
cltd
stc
push
fcmovnb
push
fnstcw
stos
arpl
iret
sub
mov
pop
scas
jbe
adc
jmp
cmp
adc
jno
lret
js
sub
popa
dec
xchg
cmp
jno
nop
call
out
fdivl
mull
test
mov
push
xor
lods
mov
dec
xor
int3
and
and
pop
dec
mov
fwait
js
mov
bound
rcrl
sub
pop
leave
dec
pop
notb
pop
add
sub
or
mov
jns
fstps
bound
inc
loope
add
cmp
xchg
adc
pushl
mov
cwtl
xor
sbb
es
add
sub
push
sbb
clc
sahf
rolb
or
sbb
and
flds
xor
les
addr16
or
sbb
dec
leave
mov
xor
inc
test
rclb
leave
aam
ljmp
adc
adc
jnp
xchg
shrl
and
xor
jle
pushf
and
mov
in
out
ja
and
and
jp
xor
mov
imul
int
cmp
out
mov
xchg
inc
inc
inc
xor
rorb
outsl
das
mov
xchg
or
add
ret
hlt
scas
repz
jmp
inc
scas
xchg
and
mov
xor
adc
dec
mov
iret
xor
jne
mov
and
insl
and
inc
cmpsl
pushf
icebp
xchg
push
lcall
cwtl
sub
push
addr16
xor
mov
icebp
notb
jge
ret
xchg
loopne
jp
xchg
push
rcl
imul
mov
cmp
xor
add
call
sbb
xchg
or
adc
mov
jecxz
nop
aam
jns
jnp
movsb
or
and
in
lods
pop
xor
mov
addb
repnz
out
addr16
dec
out
jmp
popa
xorb
js
cmpb
or
aas
es
lea
add
nop
add
scas
mov
push
or
cmc
out
ret
bound
mov
pop
pusha
pop
adc
lods
push
sub
xor
sbb
lods
mov
push
daa
jnp
mull
sub
test
out
or
in
clc
movsl
cmp
dec
add
subl
or
test
mov
xchg
push
mov
lods
addl
pop
data16
ret
ljmp
shll
xchg
xorb
adc
pop
sub
adc
decl
icebp
sub
aad
sbb
sub
cmpsl
lock
lea
dec
pop
movsl
aas
or
push
loope
and
test
roll
adc
shll
aam
in
bound
xor
outsl
jl
les
cmp
xor
rol
jne
hlt
leave
pushf
mov
jo
inc
prefetchw
xchg
ja
and
add
inc
push
mov
sbb
jmp
call
xchg
not
dec
jno
mov
idivb
adc
imul
jmp
mov
shlb
pop
gs
cmp
lods
xor
cld
sbb
fldt
loopne
je
and
mov
jnp
pop
iret
pop
andl
pop
imul
xchg
pop
addl
inc
xchg
js
xchg
mov
inc
adc
dec
outsb
lds
pop
int
xchg
xchg
mov
mov
or
int
xchg
pop
aam
and
scas
push
in
sbb
movsl
cmc
mov
movsl
lock
lock
sbb
in
lahf
dec
push
xorb
add
inc
xlat
cmp
jg
dec
sub
push
jbe
mov
inc
add
hlt
cmpsb
dec
and
ljmp
sahf
roll
push
aas
xor
cmp
add
idivb
adc
xor
insl
fmull
cmp
inc
pop
mov
mov
mov
dec
pusha
in
dec
pop
pop
addl
jp
push
fstl
in
push
and
cmp
pop
add
insb
setne
nop
pop
and
adc
dec
mov
dec
loope
adc
xor
cmp
lods
or
mov
sbb
mov
jge
push
cmpsb
push
adc
jb
rolb
sbb
push
adc
leave
jne
mov
pop
popa
inc
add
sbb
push
movsl
pop
mov
cwtl
mov
mov
jno
or
push
orl
loopne
xchg
outsb
movsl
pop
ret
jns
or
jmp
test
pusha
dec
sub
adc
pushf
fisubrs
pop
cmovl
mov
dec
sarl
pop
dec
loope
fbstp
jbe
lret
xchg
sbbl
scas
stos
pop
jbe
pop
cmpsl
aaa
dec
jne
aad
pop
cmpsb
loopne
jecxz
xor
subl
ds
mov
test
cmpsl
mov
or
iret
jmp
imul
pusha
or
sahf
call
fsub
xchg
push
mov
and
lret
enter
sub
ret
outsb
push
stos
mov
mov
push
mov
daa
xchg
xlat
sub
xchg
popa
fsubrs
pop
outsl
jno
das
cmpsl
xchg
js
fsubrs
push
aas
loope
loopne
dec
cmpb
mov
jae
push
mov
shlb
rcll
and
xchg
jge
sbb
dec
ficoms
and
xchg
icebp
inc
xlat
jae
sbb
and
aam
popa
pop
imul
aad
mov
sbb
pop
dec
or
fwait
jp,pn
ljmp
notb
cld
and
inc
mov
push
popa
pusha
out
pop
mov
mov
sbb
jns
out
inc
int3
or
in
fdivs
xchg
push
sub
inc
daa
xor
inc
sbb
sbb
inc
imul
jne
pop
add
mov
jge
addl
xlat
ret
xchg
pop
scas
pop
mov
xor
sbb
pop
leave
sahf
sub
cmp
jae
jnp
jb
lea
cmp
and
pop
adc
cmp
mov
mov
nop
out
fdivrs
scas
dec
push
and
jbe
push
imul
into
inc
je
mov
xor
imul
idiv
stos
dec
js
lock
lahf
add
adc
shl
aam
pop
pop
mov
flds
mov
clc
mov
add
nop
jge
test
add
testb
jae
nop
outsb
push
or
cmp
and
lahf
push
inc
mov
mov
out
adc
mov
std
test
jl
adc
add
ficoml
cs
add
push
dec
jp
push
into
rolb
mov
loop
pushl
sbb
ss
xchg
mov
aas
insb
inc
cli
in
xchg
addr16
fimull
dec
lcall
pop
push
stos
enter
rcll
inc
dec
add
adcb
mov
xchg
sbb
int3
dec
xchg
mov
mov
fidivl
addr16
test
cwtl
sub
ret
xchg
inc
fisttpl
or
xor
pusha
cmp
daa
jl
scas
and
shrb
push
adc
cld
sub
jns
add
mov
and
cmp
push
in
cmc
adc
xor
in
pop
shlb
jl
inc
repz
pop
sbb
push
scas
lcall
mov
daa
dec
les
enter
shlb
rorb
sbb
les
fcom
cmp
cmpsl
inc
or
adc
jle
push
inc
mov
and
lods
lea
xchg
mov
lret
mov
dec
cmp
jno
ja,pt
fwait
pop
adcl
or
add
xor
mov
xchg
fstps
dec
lock
inc
xor
jne
lret
push
ret
cmp
dec
inc
call
fwait
call
fs
ljmp
and
add
jo
pop
cmpsb
add
or
out
xor
jecxz
mov
sbb
jnp
jb
stos
add
sbb
xchg
sbb
int
into
jmp
xor
mov
xchg
fidivs
out
out
fbld
int
imul
xchg
je
adc
inc
mov
add
mov
mov
mov
cmp
dec
mov
adc
pop
mov
mov
or
add
inc
out
adc
pushf
sbbl
ljmp
imulb
popf
je
lods
insb
add
call
je
pop
jns
lcall
out
outsb
add
xchg
xor
mov
movsb
mov
stos
movsl
gs
popf
cmp
push
lods
mov
daa
push
fwait
sbb
js
mov
xor
cmc
mov
loop
cltd
aaa
bound
ficoml
adc
xchg
jg
pop
xor
push
dec
and
sub
notl
pop
ss
or
xchg
jecxz
adc
cmp
sbb
mov
jne
cmp
subb
or
xor
dec
mov
pop
xchg
lods
bound
add
lods
xlat
xchg
adc
subb
shll
push
add
and
pop
scas
mov
mov
test
mov
repz
pop
or
jmp
and
bound
dec
dec
ret
gs
xchg
or
xchg
scas
cvtdq2ps
cmp
xor
inc
jg
clc
dec
xlat
adcb
mov
adc
xchg
pop
jmp
add
xlat
xchg
mov
mov
mov
cmp
in
fidivrl
xorb
repnz
mov
xchg
inc
jecxz
push
xlat
pop
ja
pushf
in
xor
in
sbb
lods
insb
roll
jae
outsl
shll
pop
data16
xchg
in
sbb
lods
pop
push
stc
aad
les
idivl
jmp
lds
sub
sbb
jae
aas
mov
sbb
adc
fs
jecxz
fcompl
inc
mov
and
sbb
and
push
xchg
fsubr
loopne
lcall
xchg
mov
or
dec
mov
jg
xchg
fwait
and
inc
fiadds
push
popf
std
mov
jo
jge
iret
mov
aad
in
call
bound
xor
dec
mov
pop
loopne
frstor
lds
out
stos
pusha
inc
mov
mov
xchg
shll
fmuls
clc
mov
shl
jbe
sub
push
xor
sub
outsl
loopne
shrl
or
fwait
ret
in
int3
outsl
pop
cli
test
cmp
xchg
loopne
inc
lock
inc
outsl
mov
shlb
mov
sti
dec
dec
cmp
dec
in
mov
mov
arpl
xchg
cmpsl
xor
sarl
mov
dec
loope
inc
inc
mov
mov
mov
xlat
jnp
dec
loope
leave
and
mov
push
fiaddl
fmulp
add
ret
adc
jae
mov
and
cld
sub
dec
jne
shl
movsl
sbb
push
psraw
dec
fisttps
add
cmp
loope
icebp
jbe
sub
add
daa
inc
aam
js
cmpsb
dec
cmpsb
pop
loopne
sub
fcoml
aas
fisubs
pop
gs
insb
fisttpl
mov
fildl
dec
dec
les
dec
int
mov
mov
mov
ror
arpl
mov
push
xchg
shlb
popf
xor
scas
aad
mov
into
mov
ds
stc
les
adc
ds
orb
dec
adc
testl
inc
cmpsb
pushf
mov
jle
mov
mov
fisubrl
pop
in
mov
enter
pop
cmp
cwtl
cmp
cmpsb
pop
dec
into
int3
inc
cmpsb
mov
fstpl
xchg
std
ljmp
push
pop
js
jge
add
stos
mov
lea
nop
js
sbb
dec
in
adc
jae
stos
call
sub
fdivl
mov
lcall
shlb
orl
and
daa
jmp
mov
mov
sbb
push
fucomp
cmp
xchg
imul
arpl
test
loope
fsubrl
jl
mov
sub
sbb
in
cmp
mov
xchg
add
jl
jb
jbe
insb
movsl
aad
pop
leave
cwtl
mov
mov
jae
xlat
test
fmuls
bound
fnstsw
xchg
mov
dec
jo
adc
mov
push
pop
and
push
imul
pop
inc
loope
faddl
cmp
movaps
int
iret
xchg
mov
mov
inc
pop
cltd
cmpb
xchg
enter
sbb
mov
xor
jns
xchg
xchg
inc
fmul
sub
rcrb
xlat
cmp
mov
adc
negl
jo
lret
stc
cmc
cwtl
jns
cs
scas
xchg
dec
js
add
scas
test
imul
imul
out
std
pop
or
jb
addr16
jnp
adc
inc
test
inc
enter
sti
dec
xor
movsl
xor
cmp
jns
dec
bound
int
or
mov
cmc
lret
pop
mov
sub
pop
call
mov
jbe
test
cmp
or
sbb
std
cmp
call
push
popa
push
mov
loop
ja
jno
mov
jb
out
clc
in
in
es
arpl
and
repz
xchg
into
jns
cmp
mov
push
dec
push
pop
pop
nop
and
leave
pop
mov
mov
cmp
mov
jno
and
rorl
int3
jo
cld
iret
movsb
fistpl
loopne
cmpsl
and
imul
or
push
push
xor
es
rorl
scas
mov
fwait
loop
repz
ljmp
and
mov
inc
lahf
mov
test
mov
or
mov
stos
push
std
xchg
repnz
xchg
ficoml
mov
jbe
push
or
mov
out
or
cmp
sbb
xor
frstor
xlat
jmp
mov
idiv
int
jnp
jne
push
out
push
adc
mov
inc
mov
lods
inc
jmp
daa
rcll
inc
or
enter
pop
les
lret
outsl
outsl
dec
inc
inc
div
in
add
xor
sbb
data16
mov
xor
cld
sahf
in
dec
mov
mov
pop
out
mov
es
or
xor
test
arpl
pop
aam
mov
mov
leave
push
addr16
fistpl
nop
out
dec
mov
push
push
xchg
mov
imul
mov
fwait
stos
mov
xor
sbbl
js
test
stc
xchg
or
dec
jnp
or
jg
test
push
mov
sbb
mov
notl
mov
fwait
lea
loope
lods
icebp
daa
mov
dec
jo
xchg
or
xor
ficoms
xor
mov
test
mov
mov
pop
cs
int
rolb
sarl
and
pushl
cld
cmp
add
adc
negb
jb
inc
and
jge
adc
sub
sbb
mov
inc
int
imul
test
mov
pushf
mov
cwtl
xchg
mov
mov
lret
adc
inc
sbb
test
jnp
andl
shll
jne
jae
call
jo
push
stos
push
loope
js
das
in
out
or
mov
mov
xchg
movsb
push
jg
lret
sbb
or
sbb
int3
test
fadds
lds
sahf
or
iret
xchg
ds
cmp
push
lock
pop
add
shll
test
xor
shlb
xor
mov
xor
ret
push
mov
loope
hlt
and
rcll
scas
and
push
ja
or
or
out
test
clc
in
inc
mulb
sub
imul
test
and
stc
mull
jg
pop
sbb
inc
push
pop
call
xor
sbb
mov
mov
sbb
clc
mov
loopne
je
ficomps
sub
cwtl
push
push
cli
jge
data16
lret
sub
call
mov
and
std
or
lds
enter
jmp
push
loope
xchg
jnp
jns
mov
cmp
cmp
test
pushf
push
ja
iret
repnz
pop
mov
add
cmp
aas
lret
jge
push
xchg
inc
cs
clc
lock
cli
lahf
test
mov
xor
fs
xchg
and
pop
adc
les
sub
les
mov
lods
pop
ffreep
jge
sub
mov
sbb
rcrb
jp
fsubrs
pop
scas
idivb
cmc
mulb
adc
cmp
bound
mov
mov
pop
cmpsb
push
test
xor
stos
aaa
cli
cmp
mov
dec
mov
scas
jbe
aad
nop
shlb
daa
movsb
lea
fldl
pop
sub
xchg
cwtl
into
shrb
jl
out
inc
sub
adc
filds
mov
lcall
mov
push
cmp
in
add
in
push
jl
aas
sbb
push
push
sbb
mov
xor
test
ret
movsl
pop
lods
push
mov
or
cltd
out
push
xor
jecxz
jnp
lea
aas
loope
int
push
and
cmpsl
push
mov
inc
addr16
dec
pop
ror
pushf
push
sub
inc
dec
cmp
fucomp
enter
lret
and
inc
push
pop
sbb
cltd
hlt
mov
cwtl
cmpl
pop
push
mov
lea
dec
pop
and
mov
push
aam
mov
mov
insl
inc
push
jge
add
jo
cwtl
es
pop
mov
mov
jp
pop
loopne
adc
shll
cmp
divl
cmpsl
out
insb
pushf
movsb
jecxz
fistps
xor
pushf
add
sub
pushf
jno
mov
dec
arpl
xchg
das
ja
les
inc
or
mov
scas
sti
jl
and
adc
sub
xor
push
jne
stos
sahf
pop
mov
mov
fcomps
lret
push
mov
nop
push
cmp
out
sahf
lods
sbb
inc
jle
mov
jle
mov
cmp
sbb
andb
jle
movsb
imul
fistpl
rol
loope
iret
inc
jo
into
imul
lcall
add
cs
data16
mov
shl
cmc
daa
ljmp
cwtl
inc
xor
lods
shll
jbe
add
popa
push
adc
leave
loop
pop
lds
and
in
xchg
push
lods
rorb
xlat
cmp
fcomp
mov
negb
dec
leave
notb
scas
dec
int
les
fldenv
dec
mov
dec
mov
xor
iret
mov
call
fidivrl
inc
imul
andl
loopne
lahf
push
or
push
xchg
icebp
cli
out
mov
xor
inc
fs
jnp
pushf
xchg
mov
xchg
in
std
es
rclb
jecxz
add
iret
call
mov
inc
fucomi
pop
xor
xor
cmpb
ficoms
insl
cwtl
xor
negl
fnstcw
fwait
test
mov
sahf
pushf
sbb
dec
adc
ss
dec
stos
sub
mov
and
in
adc
xlat
lahf
frstors
hlt
lcall
lret
xor
jne
mov
clc
cli
xchg
das
inc
ja
sarb
mov
fwait
mov
push
mov
jl
outsl
sub
mov
mov
addr16
pop
lcall
js
mov
movsl
push
push
xchg
mov
cmc
jno
shld
mov
ret
xor
mov
outsb
arpl
addb
push
or
inc
xchg
sar
mov
dec
xchg
lods
adc
or
sub
or
jmp
roll
jecxz
clc
or
jle
fs
icebp
jl
idiv
mov
and
out
mov
xchg
jmp
jbe
and
movl
leave
mov
sarb
xor
popf
push
fnstsw
addr16
pop
xchg
in
incl
jge
adc
test
pop
icebp
into
clc
sets
push
fcoml
rcll
dec
lret
hlt
nop
adc
dec
mov
das
jecxz
add
pop
in
sarb
fdivs
xlat
mov
call
loop
mov
in
ja
pop
pushf
fwait
dec
leave
into
jae
jns
mov
es
mov
stc
lds
stos
mov
xor
jae
xchg
imul
out
sub
mov
sub
xor
vphaddwd
and
inc
test
rolb
flds
sbb
loope
cmp
push
pop
or
arpl
or
stc
sbb
sahf
pop
push
outsb
jns
ljmp
xchg
sbb
dec
xchg
push
loop
add
shl
test
out
inc
inc
dec
mov
adc
inc
jle
cwtl
cmp
and
push
add
push
pop
jle
xor
adc
orl
push
jge
cmpsb
mov
pop
adc
fnstcw
inc
in
pop
xchg
cmp
push
jnp
pop
jg
aad
pop
xchg
sub
fwait
add
sti
dec
dec
pushl
js
js
mov
mov
xor
js
inc
cli
das
jmp
fdivrl
push
jae
scas
mov
out
or
jo
mov
sub
or
out
fwait
dec
mov
dec
xor
sbb
stc
adc
mov
fs
test
es
dec
insb
pushf
cwtl
jg
pop
jbe
lock
or
daa
push
insb
sahf
dec
fucomp
jecxz
icebp
arpl
xlat
jle
inc
fcomps
imul
xor
mov
ret
inc
push
push
inc
cmp
dec
icebp
push
test
ud1
xchg
lret
mov
in
pop
movsb
outsb
mov
in
jo
inc
mov
mov
incl
push
xchg
sbb
push
flds
inc
sub
sti
repz
mov
fcmovb
sbb
shrl
mov
sub
rcr
fldl
out
and
cli
cmp
cld
sahf
lcall
cmp
lock
lods
xor
push
stc
pop
dec
add
cmp
sarl
test
pop
imul
insl
movsl
testb
std
stc
pop
push
pusha
xor
jmp
sti
push
jg
aas
or
ds
jl
stos
dec
mov
or
pop
fwait
cmp
call
push
lcall
inc
in
push
jmp
adc
lds
push
out
nop
push
mov
mov
pop
sti
adc
adc
adc
mov
xor
and
shrl
xor
lret
sarb
sbb
clc
xchg
sub
pushf
and
scas
in
jae
test
sbb
sbb
aaa
fcoml
adc
scas
cmpl
mov
jnp
stos
mov
mov
add
push
jp
push
into
fnstenv
lds
stc
and
mov
sbbb
cmpsl
mov
movsl
push
stos
gs
shr
int3
adc
in
jmp
shl
std
jae
in
fs
mov
test
and
mov
pop
inc
mov
test
in
inc
jg
cmp
daa
cltd
test
push
repz
add
jp
xchg
insl
movsl
xlat
test
pusha
dec
iret
push
clc
shrl
ftst
test
sbb
cmp
loope
popa
fmull
fwait
inc
aaa
cmp
push
xchg
rcrb
and
xlat
and
lds
pop
jnp
jle
stos
ljmp
sbb
jge
push
inc
in
arpl
sub
add
repnz
sbb
jmp
mov
sbbb
loop
jle
bound
inc
out
xor
repz
sbb
adc
shrb
sbb
sub
incl
dec
jg
out
inc
adc
adc
outsb
popf
ret
in
xlat
adc
push
cli
ss
sbb
icebp
adc
jno
rcr
cmc
repz
mov
fcomp
add
les
sti
push
insl
inc
popa
mov
push
sbb
adc
xlat
pop
lea
sahf
in
sti
mov
push
mov
and
test
mov
xor
or
push
push
stos
pop
in
inc
xor
jg
adc
or
in
adc
int
jo
inc
lea
lods
and
pop
inc
add
out
cmpsl
jge
sub
push
xor
cmp
cmp
imulb
repnz
fistl
mov
insb
enter
arpl
ljmp
or
and
and
out
test
cmp
sub
inc
pop
iret
dec
ss
and
lret
xchg
call
sbb
test
mov
or
xchg
ljmp
mov
push
jns
pop
inc
sahf
xor
or
xlat
scas
pop
rcrl
nop
inc
cmc
in
pop
sbb
rclb
add
sarb
pop
mov
lret
mov
loopne
cmp
rcl
fs
push
sub
jg
pop
sbb
cmp
jbe
jb
inc
or
gs
imul
in
test
hlt
push
stc
dec
jno
std
jecxz
leave
or
cmp
imul
rcr
insl
enter
or
pop
cld
shlb
jp
adc
add
lods
pop
ss
fisubl
nop
repz
call
and
cmpsl
shrl
stos
ds
movsb
add
and
repnz
mov
inc
jl
inc
insb
lret
push
xor
adc
jae
inc
iret
mov
jbe
mov
push
cs
adc
roll
shl
dec
jo
xchg
insb
shrb
stos
sarl
test
xchg
ja
sahf
insl
mov
cmpsb
fwait
sbb
daa
and
adc
lock
int3
rorl
test
pop
lahf
stos
testb
aas
out
ss
cld
sub
gs
fld
dec
lods
outsb
xorl
pop
push
xchg
jle
push
inc
adc
push
mov
repnz
cltd
loop
and
nop
push
jecxz
xchg
es
addl
aas
sti
push
dec
mov
jnp
adc
loopne
mov
out
mov
test
sahf
dec
pop
roll
mov
mov
mov
bound
call
mov
decb
add
idivl
inc
int3
repnz
and
test
nop
mov
mov
mov
mov
push
add
add
mov
or
ja
enter
mov
cmp
scas
mov
mov
dec
loope
add
mov
jns
cltd
xchg
adc
mov
stc
fisubs
fcompl
and
ja
mov
pop
cs
cmp
and
adcb
fsubrl
jl
sbb
fwait
ljmp
out
js
dec
jbe
imul
rorl
or
add
into
aad
xor
dec
push
repz
cwtl
xor
les
xchg
das
mov
mov
mov
das
fdiv
inc
lcall
dec
inc
jo
push
xchg
cmp
sbb
dec
rcll
jg
inc
out
push
push
test
jb
sub
add
aad
mov
push
lods
mov
mov
xchg
nop
dec
bound
ss
cmp
cltd
jae
movsb
iret
shrb
mov
inc
or
cltd
pop
push
iret
enter
or
cmp
and
sahf
sbb
das
or
bound
jo
mov
xchg
or
mov
ja
cmp
xchg
std
mov
out
cwtl
ficoml
push
jb
loope
xchg
mov
fisubrl
pop
jge
fs
daa
cmc
cmp
fnstcw
fadds
cli
mov
push
ret
pop
mov
lea
pusha
and
popf
cmp
fadds
cmp
xchg
jb
lcall
pop
sbb
call
xor
and
cmp
or
movsb
cmp
pusha
fisubs
jmp
loop
and
je
or
xchg
ds
fcmove
lods
ds
xchg
lcall
loope
xor
jae
xor
pop
sarl
sahf
lods
mov
sub
pop
xchg
movsl
ss
add
pop
out
xlat
pop
push
mov
nop
push
mov
pop
shlb
sbb
cmp
out
sub
jns
xchg
mov
rcr
push
movsb
and
addr16
stc
ja
test
fstpt
add
loopne
mov
jmp
ss
icebp
imul
xchg
in
and
lcall
mov
es
jne
xchg
and
cli
adc
dec
ret
loop
xchg
push
popf
jnp
in
fisttpll
xchg
movsl
xor
popf
lods
fcmovb
stc
xchg
iret
enter
and
into
repz
popf
mov
mov
je
and
sbb
dec
mov
add
add
daa
sub
and
and
inc
or
ljmp
fldcw
addr16
and
jo
cmc
icebp
xchg
ja
fdivs
sarb
loopne
popf
lods
ret
sub
adc
cmc
inc
ljmp
sub
push
shlb
js
sub
data16
cmp
mov
inc
mov
fnstsw
dec
hlt
scas
inc
push
insl
jle
cltd
les
and
nop
pop
push
sub
add
push
push
pop
cmc
or
sbb
jmp
arpl
sbb
inc
pop
jne
add
mov
pushf
in
fxch
iret
lods
add
mov
add
jne
sbb
dec
test
jbe
leave
and
mov
sub
ljmp
xchg
cmp
mov
stos
insl
fs
xchg
dec
movsb
sbb
js,pt
pop
mov
xchg
cmp
jnp
lahf
xchg
orb
lahf
or
xchg
iret
pop
lret
inc
fld1
sub
push
pop
icebp
aas
mov
shlb
jmp
adc
mov
pop
cmc
mov
mov
fcomps
jl
xchg
push
fdivl
xchg
je
bound
mov
fistpl
sub
dec
or
pop
repz
mov
insb
pop
push
ret
jmp
push
mov
test
pop
sbb
stc
vhaddpd
inc
add
sahf
or
mov
add
cmp
lods
int3
rclb
fucomi
mov
mov
push
mov
push
pop
mov
insb
cmp
xlat
fdivrs
adc
scas
loope
pop
lcall
mov
and
ja
or
push
mov
push
push
jb
xlat
jmp
movsb
nop
mov
fisubs
lods
outsl
cld
stc
out
sbb
pusha
fnstsw
xchg
mov
rcl
inc
rcr
or
jae
push
in
iret
sti
xchg
mov
insb
xor
inc
jmp
cs
cmp
jl
mov
fsts
mov
cli
aaa
call
cltd
lods
loop
ret
test
pop
cltd
jns
sub
int3
lret
in
or
in
inc
out
insl
mov
int3
jb
fdecstp
fstps
decb
out
repnz
push
sbb
outsl
xor
imul
pop
ds
bound
mov
mov
in
cmp
cltd
dec
mov
aas
into
scas
in
cmpb
cwtl
xor
popa
dec
lret
arpl
les
fucomi
jmp
sbb
adc
setle
pop
xor
rcl
jnp
push
movsb
iret
push
mov
movsl
ljmp
cmp
int3
jb
pusha
movsl
or
sbb
pop
mov
pop
jae
out
ja
mov
jmp
out
in
dec
mov
adc
faddl
jmp
and
test
pop
mov
mov
cmp
ret
add
pop
nop
adc
jo
lds
cmc
cmp
xchg
pop
xchg
lahf
clc
pop
xlat
mov
nop
std
icebp
dec
addr16
cmp
in
stc
jle
out
ret
sbb
dec
js
rol
bound
push
add
jmp
xlat
cmp
out
adc
mov
fs
sti
jbe
divb
add
mov
stos
mov
into
adc
xchg
int
int
nop
add
add
sub
cs
and
aas
pop
mov
movsb
dec
mov
repnz
sbb
xor
xchg
dec
xchg
or
out
test
xchg
sbb
xchg
aad
sbb
mov
insb
jno
nop
mov
push
lahf
and
loopne
jecxz
imul
fwait
adc
jle
push
roll
cmp
loope
movsb
arpl
sbb
inc
adc
xchg
icebp
lds
ljmp
in
lret
dec
out
xchg
loopne
cld
mov
adc
cmpsl
and
test
cmp
and
in
lea
rcrl
jle
dec
sti
add
arpl
push
stos
cltd
push
fcom
xchg
jp
ds
fcomi
jecxz
testb
xlat
jecxz
mov
fildll
cmpsl
mull
aam
ds
sub
sub
xchg
dec
push
and
push
insl
add
dec
mov
sub
pop
sbb
jno
lcall
xlat
cmpl
lcall
subl
sbb
xchg
inc
add
xchg
jbe
out
push
jae
pop
jle
daa
push
shll
cmp
push
loop
sub
test
xor
xchg
js
or
jl
cwtl
sub
js
sbb
test
lods
repnz
and
dec
lock
add
addr16
out
mov
push
sbb
and
cmpsl
adc
js
and
mov
std
in
jle
push
nop
cmp
and
out
inc
imul
adc
mov
or
cmp
fildll
dec
lock
mov
pop
or
mov
aam
and
bound
and
or
mov
jmp
or
xchg
hlt
add
mov
es
cli
std
mov
sbb
test
ljmp
rclb
stos
mov
push
cmp
xchg
lds
leave
pusha
add
in
cmp
push
ss
mov
push
inc
cmpsl
dec
cmpsb
or
jnp
arpl
lea
push
mull
ret
stos
cli
cmp
shl
int3
push
lcall
mov
add
int
fnstsw
aam
mov
mov
push
xchg
test
adc
push
scas
scas
mov
xchg
sbb
push
xchg
push
mov
shlb
adc
lret
shll
inc
fisttps
add
cmp
pop
fcmovb
cmp
repz
mov
mov
outsl
outsb
test
out
sub
sub
pop
pop
test
pop
xchg
mov
pop
push
orl
mov
scas
add
nop
repz
adc
jb
sub
cld
roll
enter
daa
das
outsl
push
sub
fistpl
sbb
and
add
and
sub
loope
lods
xor
ja
mov
test
cmpsb
ja
aas
add
jae
push
mov
adc
cmpb
in
jecxz
pop
lret
jb
mov
sub
add
xlat
ja
xor
sub
inc
divl
push
xor
xchg
inc
cmp
cmp
loope
inc
cli
mov
icebp
xlat
lds
mov
dec
xor
dec
xlat
cld
mov
cwtl
cld
imul
pop
dec
sub
jmp
adc
repz
testl
inc
ficompl
jle
test
ret
lea
jne
dec
data16
out
rcr
cmp
out
scas
fdivrp
mov
mov
inc
ror
mov
adc
sbb
push
jno
in
roll
add
push
mov
or
outsb
out
push
and
pop
fsubs
aam
adc
inc
mov
and
bound
xchg
shl
sub
nop
push
dec
movsb
sbb
sub
iret
inc
fs
scas
stc
mov
out
adc
dec
xchg
fidivrl
jecxz
and
inc
fcom
pop
hlt
pushf
fmulp
repz
push
push
lods
xchg
repz
xchg
addr16
cmpsl
mov
or
pop
inc
lock
in
out
leave
aad
xlat
sti
cmpb
into
mov
inc
cmp
add
mov
mov
shl
add
leave
out
outsl
adc
push
xchg
mov
and
test
lret
sbb
inc
ljmp
cmp
rcr
jecxz
data16
mov
xchg
dec
pop
in
sub
fisttpl
cltd
dec
jns
lret
push
fcmovnu
xchg
jae
pop
test
out
dec
add
lods
ljmp
sub
sub
cmc
sbbb
jbe
les
inc
les
fstp
test
nop
incl
inc
test
xchg
decl
mov
dec
mov
ret
add
cld
push
outsl
mov
dec
push
xchg
cmpsb
adc
pop
test
clc
and
jo
imul
pop
stos
mov
jbe
loop
mov
or
sti
dec
cwtl
dec
xchg
stc
out
fsts
push
lea
js
shrl
jge
ret
cmp
mov
out
loope
mov
into
fmuls
mov
stc
cs
in
int
adc
xor
mov
call
cmpl
mov
inc
mov
out
rcll
sti
or
fwait
les
stos
and
pop
lret
mov
daa
cmp
fiaddl
imul
ret
mov
push
add
int
mov
or
call
push
or
mov
fdivrl
rolb
lahf
ja
dec
sbb
sbb
push
or
or
jns
pop
sub
cmp
sbb
jae
mov
xor
cmc
idivb
add
in
std
ja
or
pop
sub
xchg
into
dec
jle
sahf
in
cs
cmpsb
insb
int3
pop
fnsave
xor
scas
pop
inc
jle
shl
sub
inc
xor
clc
sub
jae
jl
xchg
ret
sub
xor
inc
inc
xor
push
outsl
stos
mov
cmp
add
inc
shlb
xchg
push
dec
out
and
adc
stos
mov
movsl
mov
outsb
jns
nopl
dec
and
and
arpl
xor
dec
xchg
xor
adc
add
mov
mov
in
xor
cs
mov
nop
mov
lods
mov
aaa
clc
xchg
shrb
inc
test
outsl
push
ret
mov
mov
add
mov
inc
in
inc
jb
cmpsb
push
int3
pop
fwait
mov
sbb
inc
sub
std
sub
hlt
xor
mov
pop
test
popf
out
cltd
stc
xor
jp
rolb
cmpsb
dec
push
dec
sti
push
hlt
ds
xlat
inc
lcall
push
and
popa
adc
and
sub
dec
dec
adc
lock
dec
cmpsb
nop
das
and
pop
or
inc
dec
test
jns
andl
fdiv
and
les
stos
push
rol
fsubs
xchg
outsl
stos
mov
fstps
mov
jne
cmpsl
mov
ljmp
push
or
pop
jb
nop
mov
in
mov
pusha
mov
sub
xchg
mov
push
pop
enter
mov
add
xchg
sub
mov
iret
inc
hlt
call
movsb
mov
ds
cmp
dec
shll
ja
data16
es
push
aas
clc
push
pop
xchg
insb
lahf
aas
add
and
jne
aaa
fstl
stos
push
fidivs
jns
outsl
leave
dec
insb
jbe
es
cmc
sahf
cmc
mov
loopne
movsb
adc
dec
repnz
gs
adc
in
cmp
fisubrs
iret
dec
icebp
gs
xchg
mov
and
xor
pop
or
adc
and
sbb
fidivl
inc
dec
xchg
ss
fildll
fs
ret
fimuls
jge
pop
out
les
add
aas
mov
nop
mov
aam
lods
ja
push
cmp
mov
pop
loopne
sub
mov
movsb
cmc
inc
cli
aam
mov
or
pusha
jne
push
hlt
insl
mov
jns
dec
mov
push
cld
hlt
repz
cmc
stc
adc
mov
test
add
das
sub
xchg
mov
in
push
shl
mov
mov
aas
fldcw
xchg
mov
jmp
pusha
dec
mov
je
dec
loop
xchg
inc
jge
inc
jb
dec
data16
dec
mov
bound
or
shlb
pop
sub
fwait
fwait
mov
lock
idivb
dec
call
cwtl
loopne
inc
out
movsb
jge
mov
bound
jo
mov
mov
and
aam
dec
xor
add
pop
mov
shrl
out
and
out
push
mov
mov
out
outsl
cmp
clc
aad
jmp
out
jbe
mov
add
cltd
sbb
or
enter
mov
in
arpl
hlt
stos
sbb
xchg
test
enter
fdivrs
ffreep
mov
stos
iret
add
push
cld
mov
sub
mov
cmp
sub
mov
sbb
nop
xor
inc
push
xchg
adc
mov
pushf
pop
popf
xor
adc
pusha
push
inc
addr16
lods
add
xchg
lea
imul
mov
jg
repz
leave
lret
das
push
scas
sub
xchg
insl
jbe
fisttps
les
cltd
pop
es
addl
mov
mov
movsb
mov
or
movsb
dec
in
push
fidivrl
and
fnstsw
scas
inc
jl
lahf
push
cmpsl
mov
mov
nop
mov
movsl
movsl
int3
push
push
outsl
mov
pushf
out
sbbb
test
or
pop
push
ss
fsincos
lods
hlt
xor
lahf
cli
les
dec
stc
sub
stc
test
mov
xchg
incb
sub
data16
idiv
addr16
outsl
inc
mov
stos
enter
pop
fstpt
pusha
add
pusha
ja
mull
jl
adc
add
mov
ficompl
sbb
mov
xchg
pop
or
pusha
mov
ljmp
outsb
adc
fcoml
pop
add
in
cmpsb
insb
sub
loop
inc
mov
pushf
dec
adc
ret
pop
or
push
aam
fs
test
xchg
sub
xchg
jl
popf
jg
cmc
pushf
push
push
lea
je
scas
lret
dec
xchg
push
sbb
mov
cmpsl
fwait
dec
cmp
sbb
push
inc
fdivrl
fs
sbb
adc
sbb
shll
hlt
aad
mov
push
sbb
xor
ss
inc
push
int
cmp
pop
adc
out
out
clc
and
jbe
pushf
arpl
stc
fstl
iret
leave
movsb
lea
js
gs
mov
xor
loopne
sbb
mov
xor
push
jmp
nop
mov
xor
push
add
sub
aas
movsb
and
iret
cmp
sub
mov
adc
jns
arpl
jb
psadbw
mov
call
ficompl
sub
push
pop
ljmp
dec
std
add
and
and
ficomps
daa
gs
jle
adc
xor
mov
je
inc
jecxz
mov
push
out
cmc
cmpsb
sbb
jb
arpl
xor
add
jno
repnz
sti
pop
pop
pop
fimull
mov
sbb
mov
jne
adc
out
loopne
cmp
mov
push
xor
xchg
scas
mov
mov
jns
adc
cmp
imul
flds
jp
out
out
daa
je
cmp
call
cmpsb
jecxz
pop
cmpsb
mov
enter
out
and
mov
fistl
add
imulb
ret
add
xchg
sub
imul
scas
andl
iret
clc
push
inc
add
xor
sub
jp
int
stos
xor
xchg
fsubl
sbb
in
sbb
stc
mov
insb
xor
adc
push
add
push
fcmovu
ret
add
push
aam
mov
mov
imul
shlb
shll
in
jns
lods
mov
ss
ljmp
sti
rcll
pop
mov
cmp
xchg
jne
iret
mov
adcb
lret
popa
cmp
imul
fisubrs
aad
xchg
cmpsl
xchg
sbb
cwtl
ficomps
std
fnstcw
in
mov
frndint
inc
pop
fucomip
jmp
mov
inc
scas
or
iret
and
xor
and
scas
aaa
dec
sub
stos
out
ja
and
sbb
sub
sbb
push
adc
cmc
mov
mov
add
add
cmc
and
je
pushf
in
xchg
movsl
hlt
pop
add
mov
sub
icebp
push
jmp
stos
pop
jg
mov
imul
push
shr
addl
push
call
andl
mov
aaa
pop
ja
popa
inc
aam
cwtl
mov
jecxz
or
push
push
fwait
jecxz
enter
es
mov
dec
pop
js
lods
repnz
push
mov
jle
lods
dec
jns
push
test
clc
inc
push
pop
xor
pop
shrl
outsb
in
lds
xor
inc
fbstp
jmp
fwait
lock
sahf
rolb
mov
mov
xor
jg
add
push
mov
lret
test
xchg
sub
int
test
or
sbb
fstp
cwtl
or
aam
sub
mov
fwait
lret
mov
in
add
adc
repz
repnz
inc
dec
cmc
stos
popf
mov
call
mov
insb
push
xchg
bound
and
pop
inc
insb
sbb
adc
push
pusha
jp
inc
jecxz
rolb
out
sub
mov
dec
xor
or
cmc
xchg
mov
jne
jne
adc
pop
cmp
dec
jmp
and
inc
imul
mov
jne
mov
imul
shl
ret
cmp
cmpsb
sub
repnz
sbb
and
enter
sbb
xchg
stos
sbb
adc
pop
mov
cmp
push
adc
and
and
adc
mov
jp
dec
ret
and
rcr
jl
hlt
movsl
std
mov
adc
push
adc
std
insl
dec
mov
inc
or
cli
xor
inc
cmp
dec
inc
call
xor
and
loope
jb
rcr
dec
mov
pop
mov
fs
leave
clc
inc
pop
pop
rclb
pop
ret
jmp
test
jmp
jg
aam
xchg
add
mov
test
outsb
jecxz
mov
adc
sbb
mov
lods
pop
mov
sbb
int
sub
mov
aad
xor
and
mov
xchg
fsub
dec
jo
adc
jnp
icebp
stos
enter
outsb
inc
sub
test
cmp
mov
dec
mov
pop
dec
sub
adc
int
or
insl
test
data16
fidivs
sahf
ljmp
fldl
cmpsb
dec
mov
imul
into
in
rcrl
push
test
cld
xor
lcall
leave
test
mov
xchg
xchg
add
adc
in
pop
mov
mov
stc
iret
test
xchg
or
int3
insl
rorl
mov
push
add
mov
or
pop
enter
int
xor
daa
dec
mov
mov
call
addr16
rcl
aaa
aam
iret
xor
mov
dec
fcomps
or
mov
addl
pop
jno
xchg
fbstp
jge
sbb
repnz
test
roll
inc
frstor
ret
lods
out
ds
sub
adc
ficoms
mov
add
mov
test
adc
xchg
stos
leave
dec
inc
stos
mov
cmp
in
adc
xlat
test
or
jo
imul
nop
jg
repz
sub
rcll
mov
jg
imul
js
xchg
ss
les
mov
push
cmc
mov
stc
fdivr
mov
dec
aas
inc
test
sbb
aad
xor
dec
xchg
leave
xchg
xor
dec
push
jmp
sub
test
mov
ds
pop
mov
cmpsl
mov
into
push
jecxz
mov
mov
pop
in
cmc
xor
jge
inc
iret
scas
or
cmp
fsubr
fwait
push
mov
movsl
fwait
dec
pop
js
idivl
add
das
jge
and
and
addr16
fcoml
fiadds
or
push
pushf
push
jle
adc
fists
inc
fnstenv
out
xor
pop
sbbb
sub
inc
std
pop
inc
pop
jno
subl
in
pop
cli
aam
call
jb
mov
divl
mov
dec
fists
jg
shlb
sbb
test
nop
add
cld
pop
adc
mov
xchg
mov
call
mov
repz
lahf
mov
test
push
in
pop
out
enter
test
scas
pop
push
inc
fdivrl
mov
notb
mov
lcall
cmp
dec
popf
add
out
cwtl
std
cld
decb
aad
imul
jbe
stos
pcmpgtd
daa
xchg
or
popa
cmp
mov
std
fcmovnb
cltd
in
aaa
push
cltd
xor
pop
cmp
gs
enter
int3
mov
cmp
in
xchg
int
cmp
dec
pop
scas
pop
add
sbb
mov
xchg
inc
xchg
or
cs
pop
sub
jmp
leave
pop
rcll
jno
les
mov
adc
push
loop
cltd
subl
clc
int3
xlat
outsl
inc
mov
pop
dec
stc
mov
push
xor
mov
imul
cli
aad
aam
aaa
jecxz
cs
sbb
js
xor
pop
jle
add
mov
scas
enter
xchg
imul
in
mov
mov
out
mov
jle
sub
test
xchg
sbb
out
fmull
mov
lret
mov
mov
push
test
popf
add
in
adc
inc
in
push
inc
and
jo
sub
and
mov
mov
adc
dec
leave
xlat
incl
inc
jecxz
mov
jbe
ret
lret
sub
daa
shl
shll
sbb
xchg
pushf
mov
push
pop
cwtl
ss
or
jne
inc
mov
adc
dec
dec
aad
out
loope
cwtl
jne
inc
pop
xor
sub
out
gs
nop
jecxz
push
sbb
out
daa
fs
into
jle
xchg
in
sbb
cmp
fxam
mov
jb
mov
jns
sub
dec
enter
or
mov
inc
add
dec
shl
ljmp
les
sbb
int3
mov
mov
and
ljmp
xchg
jle
cmp
jne
in
rcrb
decl
mov
fcmovu
out
mov
mov
rcrl
cltd
jne
enter
xchg
les
adc
iret
sub
inc
xor
jmp
loope
dec
popf
fiadds
dec
push
xchg
xlat
mov
arpl
inc
inc
sahf
pop
jno
das
pop
rolb
shll
pop
inc
pushf
sub
xchg
ror
int
push
cltd
inc
jb
mov
hlt
scas
test
xchg
popf
pop
out
adc
daa
xchg
sti
mov
xchg
das
xor
mov
lea
xchg
mov
mov
jbe
xchg
xchg
nop
jnp
mov
pop
xor
push
pop
xor
pushf
xchg
pop
ljmp
and
testl
cmp
les
fadd
fwait
jae
sbb
and
lcall
dec
sub
ret
enter
dec
pop
sbb
aam
aam
mov
mov
add
mov
outsl
sahf
xchg
inc
enter
mov
stos
and
pop
divb
in
mov
mov
jmp
mov
notl
out
inc
pop
mov
push
test
insb
jo
fsubrl
movsb
jl
and
add
sbb
das
popa
aam
or
cmc
push
movsb
insb
push
add
decl
repz
sub
divb
out
mov
ret
ljmp
fisttps
mov
outsb
aaa
enter
lret
sbb
gs
pop
pop
adc
adc
sub
lcall
rorb
ret
jmp
inc
shlb
fnstcw
fistpl
push
iret
pop
pop
cmp
out
rorl
popa
pop
jne
lahf
es
test
push
push
or
push
shll
and
mov
mov
dec
into
stc
adc
pop
scas
cli
and
xor
mov
jns
rorl
cmp
fstpl
rol
push
ret
xor
cmp
push
add
sub
fisttps
outsb
stos
pop
xchg
data16
icebp
cmp
fisttpl
sbb
rolb
in
jp
sbb
sub
add
pop
out
cmp
sub
insb
cmpsl
and
jae
cmp
std
icebp
aam
mov
xchg
test
mov
ljmp
mov
mov
inc
sub
shrb
add
xor
push
xor
jg
mov
ja
call
inc
call
rcr
or
fwait
adc
pop
sub
jg
enter
cmp
and
mov
adc
pop
das
push
lret
lret
inc
lcall
pop
sub
fptan
push
outsl
int
dec
lret
mov
inc
test
dec
jmp
push
xlat
sbb
ret
lret
cmpsl
aam
jp
bound
mov
mov
push
mov
scas
mov
jo,pt
dec
lahf
xchg
aam
push
imul
imul
test
or
push
xor
in
dec
inc
lret
xchg
test
add
xchg
test
stc
inc
daa
test
insl
cmpsb
inc
lods
icebp
movsl
clc
cmpsb
mov
loop,pn
xchg
scas
gs
push
adc
mov
sbb
cmp
xlat
aas
movsl
fucomp
push
jge
jge
cmpb
or
pop
ficoml
mov
int
in
nop
mov
mov
mov
outsb
or
xchg
mov
jg
jle
test
and
sbb
mov
cmp
cmp
push
ss
inc
jmp
mov
adc
xchg
mov
xchg
xchg
shrb
in
shlb
sub
movsl
adc
loopne
jne
mov
jg
repz
stos
lahf
inc
pushf
mov
sbb
xchg
or
test
call
mov
mov
test
dec
sbb
data16
cli
xor
mov
lret
in
out
out
stos
pop
sbb
or
sub
or
pop
leave
lea
in
out
mov
cmpsb
lock
fdivl
xchg
jb
test
aad
jno
mov
negl
pop
xchg
test
cmpsl
in
nop
sub
lret
jg
xor
cltd
subl
mov
cmp
ja
hlt
mov
cmp
fldcw
out
dec
mov
xchg
push
mov
jns
jnp
and
sahf
or
mov
cmp
rolb
cld
xchg
xchg
xor
xchg
push
cmp
fistps
repz
cli
and
or
mov
cs
jge
mov
popf
sbb
add
ffree
or
inc
adc
jg
ja
push
out
imul
add
mov
rclb
adc
ds
dec
nop
pop
aas
cmp
int
insb
into
add
and
xchg
jnp
jo
mov
inc
notb
xchg
hlt
int
adc
push
mov
pop
lahf
lock
sbb
ret
popa
pop
gs
ljmp
adc
inc
push
repnz
test
adcb
inc
mov
xor
mov
js
roll
outsb
cmp
jb
jbe
xchg
ja
cwtl
add
xchg
push
sbb
lret
cmp
mov
lods
inc
add
cmc
jno
stos
mov
cmpsl
nop
xchg
xchg
and
mov
repz
mov
xor
mov
movsb
sbb
lock
mov
andl
stos
jae
add
mov
and
inc
sbb
cmp
mov
pop
in
fiaddl
aad
rorl
jno
nop
jo
ficoms
jns
inc
sub
mov
stc
sarl
loop
mov
adcb
jbe
jge
dec
pop
cmc
cmpsl
movsl
loopne
mov
inc
mov
sub
jae
loop
cltd
inc
jns
sbbl
or
es
adc
fsubl
cmp
in
ja
fcoms
xor
mov
xchg
lcall
lahf
fwait
xlat
xchg
mov
xchg
jge
in
aam
add
cwtl
mov
push
mov
mov
loop
jnp
stc
mov
pop
pop
mov
and
fmuls
jge
xchg
arpl
xchg
sub
ja
jmp
mov
adc
fiadds
jo
lret
call
sbb
jp
data16
xlat
rorl
add
dec
ret
test
cld
push
movsl
subb
arpl
imul
in
jg
fldl
xlat
xchg
mov
sub
psubusb
fbld
or
sbb
jo
mov
sub
sub
loopew
xchg
jne
loopne
loop
xor
adc
cmp
inc
mov
fdivrl
sbb
mov
xchg
inc
in
push
xchg
pop
das
push
bound
add
lds
stc
leave
xor
ficomps
dec
inc
outsb
sbb
rclb
ret
repz
mov
xor
push
sbb
push
loop
jne
pop
movsb
xor
lock
ljmp
jmp
pushf
aad
sub
out
sbbb
pop
aam
jecxz
mov
push
sbb
jl
enter
rorl
in
dec
lock
jg
gs
dec
or
pop
mov
push
jecxz
loop
dec
mov
scas
pusha
jmp
shlb
cmp
pop
insl
in
sbb
sbb
push
addl
fistps
mov
sbb
mov
and
xor
xchg
imul
jg,pn
daa
cld
add
in
lret
les
mov
test
xchg
cwtl
shrl
add
fdivrl
es
aaa
movb
sub
les
mov
xchg
mov
jecxz
pusha
xor
jp
dec
pop
test
xchg
cltd
les
mov
test
jae
lret
inc
add
push
cmp
push
sti
scas
mov
in
sub
sbb
fs
movsl
pop
adc
or
sub
std
cmp
insl
out
sbb
xchg
mov
pop
arpl
test
sbb
ficoml
push
and
in
test
cmp
sbb
xchg
push
seta
cld
xchg
les
xor
xorl
inc
pop
cmp
repz
popl
lahf
push
or
ret
lret
cmp
sti
and
movl
movsb
push
aad
cld
push
sarl
add
fbld
fsubl
lret
xlat
loop
adc
mov
dec
call
je
pop
cmp
data16
adc
in
dec
xchg
dec
addr16
pop
inc
pop
iret
dec
adc
mov
mov
fisttpl
adc
fwait
movb
mov
scas
sbb
xor
push
mov
aad
jb
push
addr16
data16
or
test
fisttps
add
shlb
cmp
jp
xor
sbb
ret
fmulp
loopne
inc
ret
lahf
mov
mov
pop
into
and
sbb
out
and
es
add
jmp
xor
iret
lea
cli
daa
psllw
add
addr16
mov
mov
cmp
pusha
imul
lahf
inc
movsb
cmp
sbb
es
aaa
cli
push
popa
scas
and
lea
in
ret
dec
inc
rol
or
test
xchg
cli
jo
inc
adc
shlb
in
outsl
and
jmp
mov
movl
jg
out
sbb
mov
sbb
test
std
jb
pusha
cmp
imul
test
test
ret
ret
or
pop
lcall
jge
cmp
and
hlt
rol
mov
andl
shll
pop
popa
cli
push
into
pop
sub
push
out
rcrl
shl
or
enter
cmpl
inc
xor
decl
or
int3
out
xchg
daa
jmp
sub
jge
and
idivl
mov
and
or
jo
test
ljmp
and
stos
test
push
or
and
add
or
in
xchg
xchg
jle
pop
jne
cli
cld
sub
enter
add
andb
jbe
push
mov
adc
mov
lret
push
mov
xor
mov
repnz
add
rcr
push
pusha
and
xchg
sti
xchg
adcl
incb
jecxz
out
mov
jg
adc
sti
test
fmul
xchg
mov
shrb
mov
addr16
jae
jb
push
xchg
jo
fstpl
xchg
pushf
ja
pop
std
test
xchg
sarb
hlt
daa
loopne
pop
push
mov
aam
sub
jl
into
int
shlb
push
dec
insl
jae
cmp
std
iret
cltd
out
jb
pop
mov
add
repnz
sarl
push
mov
fcomps
adc
pop
lcall
lods
xchg
ficompl
sbb
inc
or
jle
jb
lcall
inc
add
push
xlat
push
loop
fcoms
aaa
xchg
xorb
xchg
inc
lds
clc
js
je
dec
stc
lds
add
cmp
cwtl
mov
stos
inc
icebp
lahf
mov
arpl
jmp
out
lods
sub
fs
xchg
ds
cmp
adc
cmp
jae
jns
je
jecxz
subb
push
jns
mov
out
outsb
test
xchg
dec
sub
mov
jno
popa
in
pushf
or
ss
fisttpl
rcll
in
imul
outsb
mov
cmp
aas
add
mov
cmp
sbb
mov
mov
xor
adc
jbe
sbb
test
cmp
in
in
fs
jns
cli
cmp
jle
repz
das
cmpsl
cld
loop
mov
jne
movsb
sbb
pushf
add
jne
pushl
cmpsl
push
sbb
imul
jle
sub
xor
test
dec
sub
in
cs
outsl
aad
add
in
outsb
and
frstor
inc
pop
xchg
or
iret
cmpsl
hlt
dec
xchg
jb
out
dec
mov
lea
pop
ja
push
push
lock
into
push
ss
xor
pop
test
shll
sub
mov
xchg
fdivrs
and
push
jg
add
adc
sahf
pop
aaa
sub
cmp
hlt
icebp
es
divl
icebp
iret
lods
ret
xor
push
scas
pop
fidivl
mov
xchg
lahf
std
inc
jbe
rcr
jp
sahf
hlt
sbb
test
add
cmp
mov
ret
sahf
in
insl
sub
mov
es
imul
pusha
rol
mov
arpl
push
mov
mov
mov
push
arpl
rorl
outsl
dec
or
fiaddl
dec
lret
fiadds
dec
add
pop
sbb
test
add
cmp
out
sahf
cmc
outsl
sbb
or
pop
jno
xchg
sbb
movl
cmp
arpl
in
sahf
call
jg
sub
fsts
pop
pushf
jl
sarb
addr16
or
cmp
mov
andb
xchg
adc
sbbb
scas
and
flds
pop
mov
cwtl
stos
jmp
ja
and
outsl
adc
shl
test
xor
pusha
sub
repz
xlat
jo
loop
call
adcl
cwtl
popa
add
jbe
andb
jle
jg
je
sti
inc
mov
test
out
cmpsb
cli
lods
add
inc
or
jl
add
push
loopne
or
aaa
ljmp
inc
rol
adc
or
jg
scas
dec
inc
daa
mov
add
int
mov
mov
and
andl
push
cmpsb
mov
pop
push
mov
jle
mov
pop
ds
jecxz
pusha
adc
xlat
setp
cltd
push
stos
outsb
dec
stos
lret
jns
and
mov
add
xor
jo
sbbb
inc
mov
orb
push
and
scas
inc
mov
sub
out
aas
add
pop
mov
pop
movsl
mov
add
jo
or
push
ds
mov
cmpsl
in
sub
jbe
outsb
dec
cwtl
stos
fsubs
pop
sbb
mov
add
pop
sbb
pmullw
push
clc
js
sarb
mov
bound
sub
pop
sbb
jp
xor
mov
test
lea
cli
dec
xchg
push
gs
xor
and
sub
and
jo
scas
lods
jns
mov
mov
lods
cs
or
adc
push
dec
add
add
stos
std
cli
sbb
pop
out
or
xchg
add
sbb
jnp
push
out
out
repnz
leave
sahf
hlt
orb
imul
cld
add
xor
shll
int3
out
cmpsl
or
add
inc
jns
fstps
clc
mov
aas
or
jae
xor
outsl
dec
ret
js
ret
and
in
stos
orl
adc
jno
and
sub
frstor
inc
jae
dec
or
les
push
movsl
lock
mov
add
xchg
inc
stos
inc
aas
es
and
sub
mov
push
mov
test
xchg
xchg
out
jnp
push
into
cmpb
add
push
or
jge
pop
ljmp
adc
mov
pop
mov
pop
mov
out
pop
mov
inc
dec
and
jae
xchg
fldcw
call
pusha
mov
xchg
mov
and
cmovbe
mov
in
xor
clc
add
push
fsubp
cmp
fdivrl
loop
push
pop
sbb
cmp
std
mov
mov
xor
xor
pcmpgtb
scas
bound
jo
int3
in
outsb
lahf
or
ja
sbbb
mov
aas
xor
xchg
ljmp
or
test
push
call
pop
scas
mov
mov
jbe
sub
addl
daa
aaa
ljmp
aad
and
pop
addr16
mov
fdiv
push
mov
mov
mov
mov
pand
pusha
lock
sahf
jo
mov
sub
or
sahf
in
xor
out
push
es
rcll
movsb
aaa
sbb
add
jl
addb
jnp
sbb
xchg
inc
clc
or
sbb
rolb
repnz
mov
lods
pusha
ss
or
or
rcr
sub
dec
into
jmp
xchg
stc
cmp
cli
sub
or
lcall
rorb
bound
je
stos
lcall
jl
adc
scas
mov
push
xchg
test
jp
xchg
in
cltd
js
mov
fmuls
ret
mov
pop
scas
xor
addr16
mov
xchg
xchg
xor
pop
add
fsubrp
jne
inc
add
cmc
cltd
jmp
pxor
add
in
repz
pusha
test
sahf
and
mov
icebp
sbb
push
in
pop
cmpsl
pop
and
clc
icebp
shlb
lods
call
movsb
outsl
cwtl
mov
sbb
xchg
js
cli
add
int
and
adc
cwtl
out
mov
mov
in
and
dec
cmp
pushf
push
adc
lcall
data16
inc
addr16
push
fmul
cwtl
int3
jbe
fs
ss
add
xchg
stos
lds
xchg
push
das
pop
dec
pushf
add
xlat
roll
or
cld
adc
shlb
xor
mov
add
in
rcrl
test
icebp
sub
fisubs
into
dec
lcall
enter
jae
add
xchg
mov
or
icebp
rolb
out
push
cmpsb
outsb
inc
cld
inc
aad
xor
cmp
adc
in
ret
or
les
ljmp
arpl
jge
pusha
stos
jo
push
scas
dec
xchg
repnz
bound
test
add
shrl
pop
mov
inc
dec
popf
lea
sbbb
xchg
ficomps
outsb
call
xlat
pop
sti
mov
notl
cs
xlat
add
addr16
mov
les
add
test
jns
iret
sbb
dec
fadds
ret
xchg
lods
sbb
out
inc
jnp
out
push
outsb
inc
clc
roll
or
daa
movsb
dec
pop
xor
stos
outsb
rcrb
and
dec
jmp
push
popa
mov
cltd
mov
imul
es
xor
imul
inc
push
daa
mov
mov
and
scas
popf
enter
enter
movsb
pop
xchg
scas
cmp
scas
popa
adc
pop
aad
jnp
outsl
dec
ljmp
ror
mov
fistpl
xchg
notl
leave
outsb
addr16
or
inc
jle
das
lcall
fwait
pushf
and
mov
adc
mov
xchg
leave
gs
fwait
dec
popf
divb
push
pop
or
push
in
mov
xlat
cmpsl
stos
rolb
shl
jl
mov
inc
mov
pushl
push
xor
mov
cmp
mov
cld
mov
pop
pop
ss
jae
fisttpll
popa
cmp
daa
jne
adc
cmp
jmp
insl
sbb
mov
lods
cs
test
pop
enter
cmc
shll
into
mov
fldt
jae
xchg
scas
movsb
in
xorb
mov
incl
mov
mov
popa
sbb
mov
lds
mov
mov
stos
pop
push
and
xchg
cli
dec
mov
in
sbb
and
and
mov
mov
lods
bound
add
or
mov
inc
lock
fistl
fsubp
mov
in
nop
add
addb
lahf
lds
and
rorb
inc
cs
cmpsb
dec
sbb
pusha
dec
sbb
loop
mov
jbe
lret
lahf
mov
addb
lock
pop
fisubrl
ds
adc
cmp
jnp
std
pop
stc
imul
mov
aaa
lods
mov
add
sbb
jg
dec
push
jo
pop
sbb
addr16
lcall
addr16
mov
jo
cltd
cmp
dec
insb
mov
add
jno
lcall
jmp
out
adc
push
loopne
pop
arpl
fbstp
repz
xor
pop
ret
rol
enter
cmp
fcoml
push
mov
pop
or
call
mov
mov
push
and
cmpb
jecxz,pn
cwtl
lret
jno
pop
aad
int3
gs
test
shrb
movl
push
out
xor
andb
hlt
pop
loopne
lret
into
es
daa
jno
mov
pop
fistl
mov
inc
mov
insl
jns
mov
jp
lock
aaa
test
cwtl
mov
hlt
and
fisubrl
in
ret
enter
add
push
imulb
mov
cmp
sbb
adc
mov
fiaddl
jg
icebp
mov
jge
scas
jl
fs
and
imul
scas
lods
jno
fisubrs
adcl
fildll
xor
and
add
pusha
mov
rcrb
mov
mov
loope
xlat
dec
call
je,pn
stos
lds
fimuls
mov
lods
sbb
ret
loope
dec
dec
rolb
xchg
in
xchg
popa
dec
push
mov
inc
bound
ss
ret
xlat
addb
and
xchg
pop
in
mov
add
xor
mov
inc
mov
into
rcrl
mov
out
fdivr
arpl
mov
pop
xchg
lods
mov
inc
push
scas
lds
and
push
mov
dec
les
imul
popa
aad
cwtl
test
insb
pextrw
test
jne
mov
push
outsl
fldenv
inc
repz
iret
sbb
adc
cmp
mov
arpl
sub
into
ss
mov
je
dec
arpl
xchg
scas
iret
jo
jo
fs
test
mov
dec
mov
xchg
gs
test
add
adc
jg
jle
cmp
into
mov
push
sub
cmp
mov
jle
and
cmp
inc
loopne
sub
in
pushf
pop
mov
jne
add
inc
or
out
fwait
arpl
and
ja
repnz
cli
pop
mov
inc
push
call
xchg
int3
push
dec
jno
sbb
xlat
shrl
mov
leave
clc
sub
int3
inc
xchg
stc
lret
pop
pushf
rcl
mov
cwtl
pop
andl
stc
adc
pop
mov
enter
movsl
roll
xor
add
pop
pop
das
xchg
mov
xchg
add
mov
sbb
pop
fdivl
sub
add
test
xor
xor
add
gs
les
or
loop
subl
push
mov
push
cmc
jl
mov
fcmovnbe
jl
loop
lea
pusha
rol
insb
add
scas
out
loope
mov
mov
inc
jle
or
xlat
jae
repz
xlat
or
and
js
hlt
add
sub
scas
inc
inc
mov
fnstsw
xchg
push
xor
adc
xchg
fwait
popl
stos
lea
fcomi
adc
cmpl
mov
adc
lret
dec
stos
in
arpl
mov
jns
jp
or
dec
cmp
inc
arpl
push
popa
xchg
xchg
call
addr16
jl
lods
sub
fimull
or
loope
sub
dec
adc
push
jne
les
inc
jno
pop
pusha
mov
push
sub
sbb
sub
inc
mov
add
push
xchg
dec
xchg
add
shl
dec
in
push
xor
jno
bound
mov
rorl
pop
add
xchg
inc
xor
xchg
cmp
or
ljmp
xor
jno
mov
inc
testl
mov
fldz
sub
xorb
in
pop
out
mov
mov
mov
xchg
sub
adc
sub
xchg
ds
and
sbbl
mov
mov
dec
out
mov
call
loop
inc
push
mov
add
and
cmc
and
push
jb
hlt
push
call
fdivs
stos
loope
std
scas
xor
dec
sbb
popa
test
cmp
cwtl
mov
out
bound
pop
inc
xchg
mov
mov
scas
int
out
push
cmp
lret
in
fldl
adc
xlat
sub
mov
xchg
insb
mov
push
adc
mov
cmpsl
not
adc
mov
outsb
sbb
and
cmpsb
aad
xchg
cmpsl
popf
setge
lahf
jne
fs
xchg
push
test
jbe
sub
out
sbb
push
mov
ficompl
push
inc
outsl
outsl
add
xor
pusha
mov
push
dec
jb
out
xchg
adc
fistl
fbld
add
add
jmp
xor
jge
push
jmp
sti
cmpsb
fs
lahf
popa
xchg
add
outsl
and
sbb
cmpsb
cmp
or
xchg
jp
flds
mov
call
ss
xor
int
or
sbb
add
pop
adc
lds
in
inc
mov
push
bsf
ret
and
pushl
pop
es
push
mov
xor
sar
pushf
das
fidivrs
mov
test
out
push
push
jno
imul
push
cmc
hlt
mov
hlt
add
lock
adc
ljmp
call
cmpb
scas
sahf
das
or
fisttpll
jl
add
mov
fidivs
js
sub
jae
mov
or
or
inc
add
outsl
mov
or
repz
adc
loopne
rclb
adc
mov
push
cltd
lods
mov
jb
repnz
jo
and
dec
gs
mov
lahf
ret
xlat
inc
add
outsl
push
mov
mov
mov
sub
sbb
repz
cmc
mov
mov
cltd
outsb
cmp
inc
adc
daa
jbe
add
vprotb
cld
and
popa
adcb
xor
mov
sahf
ret
dec
dec
scas
cli
sbbb
rorb
dec
xchg
sbb
push
mov
fs
ret
cs
mov
push
pop
call
jne
test
adc
aad
lods
int
sub
mov
jmp
sbb
or
inc
inc
pop
jg
mov
pop
cmp
loope
out
sub
lods
adc
rcrl
shr
inc
jo
in
sbb
xorl
cli
mov
daa
mov
push
cs
push
int3
inc
xchg
ds
repnz
push
pop
cmp
in
in
enter
jns
jae
dec
pop
cwtl
xor
xor
lods
pusha
cwtl
cltd
cwtl
in
mov
inc
add
daa
cwtl
dec
inc
test
fdivl
sbb
mov
dec
xor
out
stos
adc
or
lahf
ljmp
lods
xchg
ret
lods
jb
mov
jl
data16
xchg
or
jg
shlb
cld
pop
or
mov
xor
ret
push
ss
aam
or
dec
mov
mov
add
divb
lock
das
xchg
lret
arpl
lret
repz
inc
pop
mov
aas
icebp
push
mov
call
pop
pop
shrl
iret
dec
jb
sbb
cmp
pop
sbb
mov
popf
sub
les
imul
mov
arpl
daa
lds
add
xchg
ret
mov
mov
and
rorb
mov
push
push
ret
scas
std
mov
or
icebp
movsl
dec
cmc
sub
lahf
and
shr
out
in
addl
int3
sub
lret
hlt
out
in
xchg
arpl
stc
out
inc
inc
pop
mov
dec
nop
mov
fs
push
adc
test
mov
push
cmp
into
jg
in
mov
pop
or
adc
cmp
cltd
dec
pusha
and
push
xchg
jl
xor
push
cwtl
mov
xchg
xlat
adc
jnp
lea
adc
mov
or
mov
dec
hlt
imul
ficoml
cwtl
or
dec
cmpsb
ret
fisubl
xchg
mov
or
adc
das
sahf
mov
fs
mov
mov
or
faddl
jmp
sbb
pop
pop
rorl
ss
shrb
xchg
dec
lret
mov
jmp
jno
jb
sub
dec
inc
lods
sub
add
xchg
es
mov
pop
inc
mov
into
imul
mov
cld
sbb
lret
pop
add
sub
mov
dec
mov
sbb
lcall
or
jmp
pushf
sub
add
sub
xbegin
faddp
fs
test
test
out
and
add
xchg
dec
jno
inc
out
mov
and
add
repnz
rorl
push
or
cmp
fcoms
clc
test
rclb
push
xchg
sti
addb
pop
xor
xor
mov
ds
popa
xor
jp
mov
add
xchg
push
fcoml
jns
std
push
pop
stos
jne
sarb
push
mov
mov
add
add
mov
rorl
scas
in
mov
pop
or
out
roll
add
aam
insb
mov
add
jp
xchg
push
sbb
sbb
push
adc
xor
lock
xchg
out
and
lock
mov
pop
jp
adc
aad
and
negl
add
xor
lock
mov
and
movsb
mov
or
std
js
lods
inc
pop
cmp
jecxz
mov
jg
mov
xlat
or
jnp
std
mov
add
sub
outsl
out
mov
jl
in
dec
push
adc
ljmp
call
pop
dec
cmpsb
repnz
sahf
jmp
mov
pop
lds
insl
mov
rcl
dec
lods
movsl
push
fsubs
daa
in
cmpb
jecxz
out
jbe
cli
pop
cmpsl
imul
sbb
in
test
pop
jecxz
or
test
mov
sbb
bound
sti
inc
push
std
int
mov
fcmovne
incl
insl
adc
cli
pop
cmpsb
cmc
je,pt
push
jno
cmp
bound
or
add
jge
jae
ret
repz
adc
addb
mov
mov
jo
jp
rcrl
dec
mov
clc
mov
test
jmp
arpl
das
cmpsb
mov
movsb
loope
clc
push
push
stos
ja
daa
add
or
mov
push
pop
sub
sbb
rorb
in
cltd
stos
jbe
gs
cmp
pop
cmc
adc
xchg
out
xchg
add
push
xchg
leave
pop
rcrb
int3
push
mov
ss
dec
inc
mov
dec
pusha
into
mov
jno
sub
pop
or
nop
imul
xor
xor
sub
fcmovu
pop
dec
das
or
out
jmp
scas
pop
dec
repnz
adc
jle
jecxz
sub
lods
daa
movsb
sub
mov
sbb
cs
test
andl
pop
xorl
sbb
fmuls
mov
jae
jge
pop
movsl
cltd
inc
fldl
test
xor
test
fwait
es
cmp
cmpsb
icebp
sahf
insb
hlt
mov
testb
into
in
cmpsl
scas
sbb
or
imul
fdiv
push
enter
dec
inc
cmp
sbb
roll
into
fnstenv
mov
add
mov
dec
insl
ljmp
sub
pop
jmp
mov
pusha
insl
pop
divb
mov
cwtl
push
mov
test
stos
jo
ret
lods
scas
lret
mov
repnz
test
jmp
in
shrb
les
jge
sahf
lods
and
shll
data16
xor
dec
dec
aas
jge
xchg
jmp
cmp
mov
test
pcmpeqd
dec
xor
mov
das
imul
pop
jnp
dec
dec
std
scas
lret
cltd
ljmp
mov
and
add
jmp
pop
arpl
cmpl
xchg
test
and
xlat
or
xor
std
orl
sbb
sub
fidivrs
sbb
es
mov
jg
insl
sbb
bound
leave
jecxz
inc
loop
out
push
lret
imul
fwait
mov
or
mov
adc
jo
pushf
or
ret
mov
out
sahf
dec
mov
loope
xrelease
pop
fcomps
mov
jns
into
xor
idivb
mov
cmp
rcll
jp
dec
clc
stos
mov
lds
sti
pop
js
cli
add
xor
xchg
fbld
xchg
add
add
adc
sti
push
and
cld
inc
or
sub
dec
out
daa
roll
out
in
mov
cmp
in
mov
xchg
adc
cltd
aas
mov
push
lods
push
outsb
lret
sbbb
scas
sarb
mov
mov
test
loop
mov
cmp
jnp
dec
enter
or
push
and
mov
sbb
pushf
mov
ljmp
or
sub
ja
test
insb
fstl
cwtl
xor
or
pop
test
test
mov
xchg
leave
mov
cs
out
cltd
push
jle
subb
enter
lods
xchg
mov
cwtl
je
loope
jo
jne
mov
xchg
and
rcrb
mov
dec
das
jns
out
adc
mov
loop
into
mov
push
bound
or
sbb
add
mov
or
arpl
pop
pusha
lock
test
out
inc
call
test
repnz
test
mov
decb
mov
dec
jle
cmp
out
aaa
sbb
hlt
add
out
fisubrl
sarl
add
add
push
mov
sbb
out
sbb
test
test
stc
hlt
cld
aaa
adc
inc
je
inc
shrl
jo
in
and
jae
pop
and
cmc
mov
outsl
in
lret
xor
or
xchg
lds
out
movsb
sahf
mov
aad
sbb
mov
xchg
shr
or
pop
arpl
cmp
adc
pusha
fimull
jns
inc
or
sti
and
enter
pop
push
sub
fchs
stos
mov
mov
and
push
push
push
popa
pop
out
rolb
mov
ret
mov
sub
popa
repz
mov
in
dec
int
filds
ret
cmp
out
negb
push
mov
cmp
mov
cmpsb
pop
movzwl
cmp
add
dec
int
jno
xor
push
sub
xchg
mov
sub
fistl
push
push
xor
call
push
addl
lret
and
repnz
aam
jle
sti
dec
int
stos
push
jp
test
hlt
stos
pop
mov
aam
xlat
insl
lds
imul
orb
loop
dec
js
imul
mov
mov
sbb
test
fisubrs
daa
ret
and
imul
loop
out
in
push
popf
add
push
mov
add
jae
xor
fwait
scas
push
lds
push
xchg
pop
int
jp
loopne
mov
out
testl
cwtl
jo
repz
nop
mov
add
in
or
rcrl
out
movsb
nop
xchg
popa
imul
mov
push
daa
fisubl
pop
add
push
cmp
rcr
loopne
mov
mov
addl
add
xchg
iret
xchg
cmp
and
int
jb
mov
jp
and
adc
mov
pop
stc
fdivl
icebp
pop
shr
dec
std
stos
stos
cld
insb
inc
and
fsubs
or
cmpsb
jmp
xchg
jae
xchg
std
sbbb
mov
xor
pop
cld
mov
subb
jmp
movsb
in
pushf
cmc
mov
jg
adc
ficomps
out
test
xchg
push
xchg
add
cltd
sub
push
sbb
adc
test
mov
leave
in
dec
or
sahf
push
xchg
popf
repz
lret
daa
lods
cmp
int3
ss
sti
aad
jle
lods
sbb
lds
inc
lods
out
insb
sti
mov
rol
sub
jl
mov
insb
ret
cwtd
jbe
sti
push
push
mov
outsb
inc
icebp
add
nop
cmp
popf
xchg
cld
xchg
fimull
sub
sbb
repnz
sbb
sbb
or
jl
add
loope
popa
xchg
jnp
ds
idiv
pop
rcr
lods
add
adc
add
jo
sub
pusha
repz
sbb
test
nop
adc
fsub
add
loop
aad
fsubrl
adc
pop
mov
mov
xor
sbb
ret
mov
jno
jg
sbb
repnz
and
cmp
mov
lret
pop
xchg
mov
pop
cmp
popf
or
mull
inc
ja
dec
lods
adc
inc
push
lahf
cmp
jge
and
add
jb
int3
push
arpl
pop
mov
cwtl
je
rcll
cmp
cmp
repnz
sub
adc
and
jns
push
lds
mov
mov
xchg
mov
mov
fwait
jmp
xchg
inc
xchg
mov
jae
test
outsl
jns
mov
cmp
shrl
outsl
pop
adc
ljmp
pop
lds
or
jge
js,pt
ja
mov
xor
les
scas
into
mov
int
ficomps
sub
movsb
loop
sti
xlat
mov
add
or
sub
stos
daa
mov
mov
out
xor
cmp
leave
ss
mov
fidivl
xlat
add
mov
sbb
insl
les
and
jne
lahf
mov
jg
mov
dec
movsl
xchg
push
jnp
mov
or
cltd
in
out
sahf
sub
negl
lods
jo
mov
fdivp
mov
insb
add
jge
fstl
out
insl
fimull
add
lcall
pushf
jne
es
push
mov
adc
lea
testl
es
out
mov
pop
fisubrs
aam
ds
lock
pusha
pop
pop
scas
int
and
lret
into
data16
sub
das
imul
inc
add
fsubl
imul
les
sbb
cld
adc
es
push
test
push
imul
dec
inc
pusha
inc
out
jbe
xor
adc
pop
sbb
xchg
and
sbb
pop
jge
je
out
or
mov
lret
mov
xor
add
int
push
sub
int3
mov
pop
incl
jecxz
addb
xor
rol
jb
adcl
mov
dec
daa
out
adc
or
arpl
into
cmp
repz
aas
inc
push
outsb
js
dec
movsb
inc
je
ss
push
push
lods
cmp
inc
stos
ja
mov
out
xlat
hlt
mov
test
or
js
addr16
cmpsl
and
mov
int
sub
cmp
pop
scas
aam
and
jb
mov
sahf
xor
dec
shlb
jp
inc
sub
or
and
pusha
ljmp
ss
fstpl
jecxz
mov
repz
aaa
ficoms
cmc
xchg
mov
outsl
cmp
inc
loop
adc
fadds
stos
stc
ret
mov
scas
mov
add
mov
push
cmp
or
mov
shlb
jmp
push
jp
xor
adc
jge
jl
call
dec
add
mov
pop
xchg
repnz
imul
in
movsl
xor
insb
push
je
push
loope
pop
bound
pop
lods
cmp
fsubrs
scas
ficompl
cs
mov
ss
or
jb
pushf
jo
fcompl
sbb
popf
or
sbb
idiv
push
dec
fdivrs
aam
cmp
jae
pushl
add
pop
inc
lods
jae
insl
mov
sub
frstor
xchg
iret
push
das
bound
and
lods
out
push
mov
add
push
pop
fisubs
inc
xchg
adc
adc
jp
incl
push
push
xchg
mov
fnstcw
cmp
int
push
lahf
fbld
movsb
pushf
mov
ja
shr
jb
mov
sti
xor
and
inc
cmp
xor
aas
adc
cltd
scas
inc
inc
mov
gs
stc
sbb
iret
jbe
popf
sub
movb
push
push
push
or
pop
js
xor
and
sbb
adc
sbb
std
fisubl
and
loop
pop
dec
mov
daa
dec
add
mov
add
nop
nop
sub
pop
add
lea
cmp
lcall
clc
leave
and
xchg
aas
cmp
add
push
ljmp
cmp
mov
sub
insb
ds
icebp
jns
aas
mov
shll
stos
inc
int
sbb
xlat
pop
pop
loopne
daa
adc
ficomps
push
loop
sbb
or
xchg
xor
cmp
add
idivl
fnstcw
cmp
pushf
dec
pop
in
mov
testb
push
call
add
cmpsl
scas
push
jmp
push
aaa
jp
sahf
mov
pop
sbbb
dec
push
dec
dec
scas
roll
movsb
lods
shl
fiadds
jb
std
push
insb
ds
fimull
loopne
pop
into
cmp
subl
imul
and
outsb
inc
test
aas
cmp
jb
sarl
cmp
cmp
fucomp
or
fists
rorl
add
movsb
sbbb
dec
ds
out
out
dec
cmc
push
lret
or
ja
bound
pop
lahf
cmpsl
outsb
add
pop
xor
js
mov
jne
dec
sbb
mov
loope
inc
out
mov
subl
sbb
dec
mov
in
leave
pop
xor
loopne
aas
or
lret
mov
lret
xor
int3
sbb
adc
popf
scas
daa
adc
icebp
je
ds
cmp
ja
cltd
ficompl
in
mov
dec
xor
or
scas
nop
jp
mov
push
popa
inc
add
scas
test
inc
shlb
lods
or
outsl
xor
mov
sbbb
pop
roll
and
jle
mov
jmp
lds
mov
and
insb
xor
push
cld
and
ret
enter
adc
jmp
and
inc
mov
sbb
pop
inc
push
subl
mov
mov
pop
sub
push
ljmp
inc
addb
mov
les
or
mov
scas
xchg
or
es
pop
stos
xorb
cli
sub
in
nop
outsb
jg
adc
loopne
cs
jp
int
test
add
xchg
cmpsl
mull
push
or
int
jecxz
shrb
test
mov
hlt
push
push
int3
add
push
push
call
sub
mov
mov
push
insb
xchg
movb
movsl
out
and
loope
sub
pop
repz
mov
jp
cld
dec
fimuls
xor
sub
push
sub
jp
xchg
sub
aaa
adc
js
xchg
nop
leave
incl
dec
xchg
stc
int3
and
jno
adc
cld
fdiv
ss
imul
mov
lret
mov
inc
mov
xor
and
dec
pop
popf
mov
jl
sub
dec
inc
es
xor
cmp
mov
xchg
dec
push
mov
pop
dec
mov
syscall
push
pushf
lods
jge
cltd
pop
stos
add
push
push
sbb
jmp
test
loopne
or
popf
lahf
inc
addl
jmp
insb
out
lock
add
inc
or
or
mov
jecxz
sub
mov
lea
cmpsb
call
pop
jmp
mov
test
sub
addr16
xchg
insl
adc
mov
test
insl
les
ja
cmpsb
mov
mov
sahf
add
adc
sub
push
ret
dec
push
imulb
cmp
nop
pmaddwd
sbb
shll
mov
mov
or
mov
lods
lret
test
pop
enter
mov
xlat
or
add
ds
arpl
add
sbb
push
cmpsl
dec
je
adc
in
jo
cmp
repz
push
dec
xchg
dec
lcall
add
mov
inc
push
mov
popf
pop
mov
xchg
mov
sbb
xlat
adc
sub
xchg
xor
negb
ret
adc
loope
xor
push
sub
xchg
in
sub
cli
std
inc
and
addps
rorl
or
lock
rcr
out
loopne
jb
pop
aad
xor
ljmp
push
in
mov
xor
and
cmp
les
scas
dec
in
negl
jnp
movsb
ud1
int
jnp
xchg
ds
ljmp
shlb
or
ja
rorl
adc
data16
shll
fdiv
fnstcw
pop
sbb
fistl
sbb
outsl
mov
mov
pop
add
xchg
sti
inc
test
sub
dec
stos
into
xchg
mov
ret
popf
rorb
lea
jbe
xchg
je
insl
test
jno
sti
pop
mov
fucom
sahf
cs
les
mov
negb
cld
in
cmp
lods
repz
jnp
and
push
dec
jp
push
xor
out
inc
cwtl
cs
mov
divl
mov
out
pop
lods
addl
mov
stc
icebp
add
adc
jns
mov
push
jecxz
inc
pusha
icebp
ljmp
mov
xchg
fmull
scas
negl
in
jecxz
pop
outsb
test
cmpsl
lds
in
test
lcall
push
inc
pusha
jmp
fldt
inc
xchg
mov
lods
xchg
lret
pop
add
movsb
jl
icebp
xor
imul
sahf
mov
jae
jp
push
sub
xchg
mov
jns
jnp
xchg
pop
push
sub
or
cmp
and
jecxz
in
cmpb
add
push
repz
cs
shll
mov
fsubs
cld
outsl
and
xchg
mov
aad
jmp
inc
aaa
pop
lret
clc
mov
popf
loop
push
icebp
mov
mov
das
fisubl
out
pusha
hlt
xchg
cmp
repz
mov
push
cmpsb
insb
addr16
daa
and
jns
test
rorb
mov
mov
and
and
jne
jo
addr16
outsb
sbb
aas
aad
lods
mov
lret
cwtl
or
mov
in
inc
inc
std
adc
mov
sub
fsubl
mov
loopne
rcll
mov
rcrl
not
test
push
into
xchg
add
sarl
movsl
cmpsl
jne
jo
addl
inc
add
orl
cmp
pop
dec
inc
cli
xor
sahf
or
imul
lds
cmc
fisttpl
into
sbb
push
fnstsw
fnsave
cmp
dec
call
dec
popa
movsb
xchg
nop
cmp
push
and
lahf
cmp
mov
cmc
dec
testb
lcall
out
sub
fildl
mov
dec
cmpsb
clc
dec
pop
or
movlps
sahf
in
lock
xor
xchg
jns
jne
pop
jne
mov
dec
imul
out
jbe
lret
nop
mov
and
cmp
sahf
inc
add
cld
and
pop
cli
enter
lods
add
xchg
cmc
cmp
mov
mov
cs
data16
pop
stos
jb
addr16
xchg
leave
cwtl
fwait
dec
mov
jl
xchg
xchg
mov
mov
fcmovu
sub
cld
pop
in
sub
jne
bound
movsb
std
sbb
mov
fiadds
enter
sbb
mov
mov
in
sub
jmp
jecxz
nop
sbb
jle
add
das
xchg
sub
xor
sarl
mov
and
cmpsl
pop
ret
aam
pop
stc
fstl
gs
repz
pop
push
mov
mov
dec
daa
mov
and
sbb
cmp
hlt
rcr
pop
adc
loopne
pop
lds
pop
sub
out
lods
lret
add
jno
stos
outsl
mov
sub
mov
call
xor
add
ljmp
roll
icebp
lret
mov
mov
pop
in
daa
xchg
pop
add
mov
dec
ja
pop
cld
test
lret
xor
mov
push
jnp
arpl
out
fcoms
xchg
clc
mov
dec
xor
or
loop
shl
repz
ja
rolb
mov
repz
fisubrs
xor
ret
notb
mov
jbe
sub
stc
or
sbb
adc
inc
and
sub
jb
popl
push
jp
xchg
enter
jp
or
jb
xor
mov
mov
jecxz
pop
es
in
loopne
inc
adc
mov
into
pop
pop
repnz
stos
push
mov
popa
std
xchg
dec
dec
add
xor
mov
aas
fidivrl
jecxz
pop
imul
fdivrs
mov
mov
rcrb
inc
je
in
and
popa
loope
adc
mov
cmp
int
push
mov
pop
mov
sbb
push
and
hlt
lahf
stos
inc
es
and
lcall
push
xor
sbb
mov
stos
std
sbb
lds
cmp
xor
aam
aam
adc
or
fistl
xor
imul
je
pop
sbb
repz
jbe
jge
cwtl
dec
pop
and
loop
lds
js
mov
das
test
cltd
lret
pop
sub
popa
cmp
paddb
mov
aam
mov
inc
cmpsb
push
pop
cli
aas
inc
repz
js
lret
out
in
mov
push
sub
mov
inc
mov
sub
and
and
jl
lahf
pop
aam
push
cmpsl
fwait
hlt
and
push
pop
cld
leave
dec
hlt
xchg
mov
cmp
mov
outsl
repz
mov
sbb
jecxz
sub
arpl
inc
cli
repz
js
lods
dec
fidivrs
dec
xor
leave
insb
ljmp
jp
rorb
mov
push
mov
stos
adc
arpl
mov
bound
dec
adc
test
leave
int3
shrb
mov
loope
adc
orb
dec
sti
imul
mov
cmp
in
cmp
lret
outsb
cmp
das
dec
pop
xchg
mov
push
mov
inc
push
cld
movups
jae
xchg
inc
fisttps
cs
mov
xor
xchg
out
mov
dec
xchg
movb
insb
out
fbld
pop
jne
insl
xchg
insb
lock
cmp
mov
xor
or
mov
je
in
mov
shlb
loopne
and
jnp
xchg
push
pusha
mov
pop
adc
jb
test
mov
cmpsb
and
enter
iret
inc
ja
mov
divl
movsb
out
xchg
add
imul
jo
sbb
inc
jnp
add
jb
outsb
pop
outsb
lock
mov
sar
add
add
test
rorl
jecxz
xor
imul
testb
mov
mov
jb
xor
fidivs
xchg
jne
in
and
loop
jg
insw
es
shlb
adc
adc
scas
mov
sbb
push
xor
push
adc
out
movsl
in
into
enter
xor
cmp
and
out
fwait
movsb
jl
iret
shrb
mov
in
lods
hlt
mov
test
aaa
dec
cmpsl
mov
adcb
xor
add
out
gs
aam
gs
shrl
addl
pop
jae
jo
or
jo
cmc
jmp
fldcw
lahf
shll
mov
js
and
ljmp
sub
mov
mov
js
dec
xor
push
lret
push
mov
xor
repnz
stc
xchg
flds
xor
and
jecxz
cltd
sbb
push
push
mov
shlb
lahf
cmpb
out
adc
sbb
mov
jmp
cli
or
in
iret
enter
xor
lahf
out
mov
test
push
inc
clc
int
test
iret
popa
addr16
jecxz
lcall
sbbl
adc
lahf
test
adcb
mov
mov
fstpt
inc
mov
inc
push
sub
fdivrp
mov
add
cmp
cwtl
jp
inc
out
pop
pop
or
mov
adc
nop
add
sub
shll
and
cmp
rorl
data16
fisubl
orl
mov
jle
and
cmp
adc
shl
mov
cmpsl
or
sub
push
bswap
adc
je
xchg
es
xchg
lods
fwait
or
mov
lea
js
mov
es
fmull
pop
xchg
orb
add
cmp
or
or
ds
jno
or
movlps
loopne
jle
lea
int
cmp
sbb
rcrb
sub
pop
push
or
dec
adc
xor
push
das
outsb
out
inc
dec
out
inc
sbb
sub
xor
xchg
pop
iret
jg
lds
sub
xchg
popf
ja
fnstenv
cmp
imul
pop
cmp
adc
push
scas
in
xor
mov
imul
xchg
daa
test
fwait
daa
rcrb
mov
daa
mov
in
push
out
jmp
jmp
out
iret
cwtl
popf
push
loop
push
inc
adc
inc
add
cmp
pop
xchg
mov
arpl
pop
mov
cmp
out
mov
mov
enter
cmpsl
jae
leave
bnd
mov
adc
mov
sbb
adc
jne
dec
idivl
popf
cmpsl
xchg
rcll
je
sbb
daa
mov
sub
leave
mov
pop
sbb
jle
add
or
lret
das
notb
icebp
fstps
cmp
cmpsb
sbb
addr16
add
mov
jnp
or
jno
or
xor
inc
xor
mov
inc
sbb
je
dec
cmc
sbbb
cltd
and
sbb
rcrl
iret
fisttpl
int3
cmp
iret
inc
enter
into
mov
fistl
lea
shl
dec
xchg
add
mov
inc
sbb
add
pop
scas
rol
imul
leave
aaa
adc
sub
bound
jbe
mov
sbb
popa
test
dec
fnstenv
fists
mov
xor
push
sti
sahf
push
hlt
rcrl
sahf
or
adc
sti
mov
out
cmpsb
stos
aad
add
xor
repz
in
sbb
lahf
pop
sub
mov
imul
adc
ret
xchg
adc
out
lods
mov
push
sbb
mov
xor
mov
push
xchg
loop
sbb
nop
adc
sbb
inc
mov
xor
push
pop
jg
lods
mov
cmpb
movb
fistpl
and
subb
lret
cmpsl
jge
and
cmpsb
cmp
pop
inc
in
or
int
push
daa
inc
xchg
scas
jge
pop
push
mov
xchg
or
sahf
add
mov
movl
xlat
shll
es
shl
xlat
and
cmpsb
xchg
out
sbb
std
lret
js
cli
cmp
sbb
xor
pushf
movsb
xlat
lea
inc
mov
adc
push
in
mov
pop
shrl
mov
lods
inc
inc
inc
iret
dec
fisttpll
mov
mov
lahf
sbb
orl
data16
fcoms
xlat
adc
inc
jo
inc
xor
stos
xchg
outsb
dec
aaa
cmc
lret
imul
lret
into
add
mov
andl
sahf
pop
and
repnz
push
mov
mov
add
xchg
mov
sbb
or
mov
aam
xchg
cmp
addr16
add
pop
or
pop
sub
mov
pop
movsb
dec
mov
je
dec
mov
movb
lcall
icebp
stos
push
mov
pop
push
lods
adc
jae
cli
add
jnp
ud2
xchg
mov
mov
andb
xor
add
pop
imul
notb
inc
mov
ljmp
and
dec
xchg
ss
or
sbb
stos
sub
mov
ficomps
jmp
jne
sub
jbe
add
sub
or
jne
repnz
bound
mov
dec
inc
xor
pop
lret
mov
fstp
adc
jmp
inc
fsubrl
push
jbe
das
mov
sbb
mov
xor
and
ljmp
sub
mov
xor
fdivrs
jp
xor
sbb
pop
loop
sbb
jg
cmp
add
push
adc
xchg
fwait
push
push
mov
lea
pusha
jne
pop
add
inc
push
jecxz
adc
add
xor
jle
push
mov
mov
mov
push
into
std
jl
xchg
jne
or
ljmp
shl
dec
push
mov
mov
mov
div
sti
out
and
jg
outsb
sarb
mov
xlat
inc
inc
shlb
xchg
xor
dec
ljmp
lods
mov
push
fwait
test
repnz
jns
push
mov
xchg
jmp
push
lds
call
mov
ljmp
cmp
wbinvd
jmp
add
mov
inc
je
sbb
testb
aam
jno
push
jl
xor
adc
imul
xchg
call
xchg
push
cmpsl
add
fwait
push
xchg
adc
sarb
mov
nop
into
bound
sbb
xchg
mov
pop
cmp
add
mov
or
stos
xor
pop
or
xor
ss
push
mov
xchg
push
stos
shrl
shll
sub
mov
ljmp
pop
adc
lret
loop
push
jl
xor
inc
xchg
adc
inc
fwait
cld
or
push
loopne
cmp
mov
shl
push
fsubr
cld
out
add
inc
clc
das
or
jle
push
pop
and
pop
xor
dec
shlb
cli
or
shl
inc
in
cwtl
ret
rorl
jbe
adc
xchg
aam
data16
mov
sti
pop
sbb
enter
hlt
push
dec
pop
push
mov
iret
or
push
xchg
pusha
or
lods
adc
dec
xchg
lahf
and
jl
es
stc
mov
mov
adc
sahf
jmp
idiv
mov
negl
aam
dec
or
and
xchg
push
rcrl
stos
subb
cmpsl
imul
or
mov
mov
xchg
out
push
sarb
je
dec
push
pop
xor
lods
add
adc
lods
out
fwait
out
xchg
orl
cmc
mov
jo
push
js
out
hlt
mov
cmpb
stos
mov
pop
add
idivb
mov
ss
cmpsl
jmp
fisubs
pop
arpl
mov
arpl
punpckldq
fisubrl
addr16
add
ds
js
and
mov
addr16
and
mov
adc
mov
jne
shl
dec
rolb
dec
xchg
pop
mov
mov
xor
aam
test
pushf
push
sbb
xchg
test
inc
mov
xchg
dec
sub
inc
mov
out
mov
fcmovne
lret
pop
push
inc
xchg
push
xchg
das
push
push
rorb
pusha
adc
push
sub
adc
cmp
mov
std
mov
ret
imul
cld
jge
pop
jg
jbe
add
cmp
push
mov
aad
dec
xchg
cmc
stc
xchg
aam
imul
loope
push
lock
aam
mov
sbb
in
out
mov
mov
mov
mov
addl
int3
dec
inc
out
cmc
inc
cmp
xor
push
in
mov
inc
into
mov
mov
mov
cmpsb
cs
hlt
int3
mov
adc
test
pushf
add
icebp
fisubrs
inc
adc
push
add
lret
pop
mov
add
aam
int3
jne
ds
xor
adc
mov
dec
imul
cltd
pop
ja
xchg
popa
jmp
add
out
push
jb
pop
popa
mov
fdivl
mov
les
stos
mov
mov
imul
and
adc
ret
inc
sti
adc
dec
insb
popa
cwtl
shrb
dec
popa
out
daa
scas
daa
lcall
into
and
inc
xchg
jo
mov
pop
in
addl
jno
sub
mov
fistpl
icebp
cltd
xor
lods
jns
pusha
scas
cmpsl
pop
ja
jns
mov
jns
popf
lods
and
test
pop
andps
shrl
nop
lods
cs
xchg
out
stos
jnp
mov
dec
mov
add
cld
imul
sub
add
push
pop
dec
pop
mov
mov
jae
mov
adc
pop
rolb
xor
cmp
and
insb
pop
fcomp
push
or
leave
adc
xchg
push
pop
mov
cmp
into
xchg
mov
mov
push
mov
jo
pop
addr16
aam
push
outsb
add
inc
jg
cs
xlat
insb
in
or
bound
adc
and
fldenv
sbb
push
push
push
jmp
xor
jne
sbb
sub
mov
fiadds
jge
or
push
xor
inc
imul
out
or
or
push
arpl
ds
and
pop
cmp
jmp
and
aad
sbb
and
xor
pop
mov
push
aad
dec
into
jno
mov
push
cld
in
imul
xchg
or
paddsb
sbb
jno
dec
lds
mov
aaa
rcrl
xchg
sbb
test
outsl
cmpsl
mov
dec
movsb
cmp
and
mov
rcll
sub
mov
adc
pop
cmp
jae
xlat
ljmp
add
adcb
mov
add
iret
cmpsl
or
and
cmp
xor
mov
jne
jecxz
call
les
cmp
ljmp
adcb
ret
ss
roll
fdivs
aam
cmp
inc
cli
cli
add
xchg
aad
jmp
pop
stos
mov
push
aas
cmp
aad
push
push
mov
lods
mov
adc
sbb
jno
jp
or
mov
pop
std
or
lret
shl
ja
out
adc
cwtl
fisubs
addr16
pop
lret
add
fmul
sub
xor
adc
adc
push
rorl
fwait
arpl
test
bound
pusha
jb
push
sub
pop
or
pop
mov
stos
sbb
xchg
xchg
and
sahf
add
adc
call
outsl
les
mov
lods
pop
loope
ret
sbb
int3
test
fstps
jle
sahf
inc
fwait
insl
sbb
sti
pop
and
push
mov
fnstenv
xor
and
add
js
sti
cmp
push
rclb
sbb
and
sub
pop
mov
mov
int3
and
insl
inc
sub
add
push
xchg
xor
gs
push
or
xchg
cmp
movsb
jge
daa
jmp
rol
add
loop
and
jge
mov
mov
dec
or
dec
or
mov
dec
enter
xor
mov
mov
mov
repz
jp
imul
pop
push
mov
ja
fisttpl
addr16
mov
sar
pop
sbb
sbb
pop
sbbb
sbb
cmp
mov
dec
lahf
cli
fmulp
cmpsb
lea
xchg
out
or
addb
mov
cmp
xchg
xor
xor
jae
mov
rorb
or
loope
push
lahf
lods
in
in
adc
sbb
popa
testl
mov
lret
loope
push
adc
cltd
out
enter
jle
cld
inc
sub
fidivrl
or
aaa
mov
inc
addr16
fcmove
dec
adc
pop
inc
lcall
push
in
sbb
jge
adc
sbb
shlb
sti
in
insl
scas
push
pusha
jle
fisubrl
mov
mov
cmp
stos
jge
push
jg
loop
push
sbb
pop
lods
sbb
sbb
cli
sbb
clc
and
pop
sbb
je
scas
xor
mov
or
lds
mov
cwtl
subl
in
mov
dec
or
ror
mov
dec
daa
sarb
in
add
pop
je
mov
add
dec
push
and
mov
sub
mov
dec
xchg
add
or
popa
fs
and
js
imul
sti
cs
push
sub
into
push
in
daa
mov
jp
and
sub
js
sub
or
fnstenv
subb
outsb
stc
mov
stc
or
add
jae
jnp
sbb
inc
pop
mov
mov
sub
imul
dec
inc
mov
xor
adc
pop
fsubrs
mov
xor
int
push
in
fcomps
or
rcrw
sahf
push
lods
pop
jl
testb
in
adc
xchg
push
out
cs
pop
sbb
pop
addb
movsl
pop
xor
pop
adc
push
dec
mov
sahf
xor
cs
lret
fincstp
out
mov
mov
mov
lods
cmp
and
stc
fmul
jl
imul
addr16
jo
jg
xchg
loope
movsb
int
pop
clc
insl
adc
ud2
mov
jnp
xor
push
sbb
cld
jp
mov
loope
in
cltd
push
adc
mov
jno
jp
push
mov
inc
aaa
dec
or
dec
lock
jns
mov
cmp
test
dec
pop
jnp
iret
mov
xchg
jne
sbb
add
xor
mov
mov
and
xchg
mov
rolb
jmp
mov
adc
or
ret
push
sbb
sbb
in
into
mov
mov
xor
jae
jg
sahf
xor
out
lea
add
xchg
in
in
and
pop
call
inc
and
fdivs
les
call
pop
jno
jb
mov
arpl
aam
and
push
pop
adc
mov
xorl
stos
or
push
push
test
lods
mov
sub
mov
sbb
gs
push
mov
push
push
stc
jbe
rclb
out
fdivrs
lds
xchg
lods
pushf
fisttpll
int3
sbb
xchg
stos
jne
stos
jno
popf
add
pushf
sbb
ret
testb
pop
sbb
or
int3
icebp
push
dec
test
jle
incl
add
nop
xor
repz
adc
pop
sbb
loop
adc
mov
cli
push
data16
push
arpl
fs
rol
mov
pop
xchg
mov
repnz
in
cmp
sbb
mov
lock
dec
sbb
sub
rcrb
rclb
test
repnz
cld
fistpl
and
bound
push
nop
rorl
adc
out
incb
fldt
test
dec
xor
cmpsb
pop
not
sbb
pop
rcrb
rcrb
add
loope
loop
xchg
add
cmp
xchg
push
push
ljmp
repnz
orb
dec
leave
mov
insb
out
lods
mov
add
incl
or
fisttpl
pop
sbb
sub
jmp
orb
push
push
in
push
xchg
sub
jns
xor
insb
xor
or
fcmovne
xor
and
movsl
mov
stc
mov
and
call
xchg
cmpb
jae
into
sub
gs
xchg
mov
mov
dec
sar
out
lods
xorb
sti
xor
add
xlat
adc
or
leave
add
insl
push
xchg
mov
dec
dec
punpckhwd
call
sbb
fst
into
sbb
push
ret
pusha
mov
cmp
mov
jb
xor
addr16
mov
xor
andps
xchg
repz
jbe
test
sti
iret
inc
and
xor
xchg
xchg
xchg
bound
adc
sahf
cs
xchg
push
mov
dec
pop
and
mov
mov
shl
xchg
and
call
jae
stc
jns
scas
faddl
and
sub
sbb
in
jmp
or
cld
jnp
outsl
mov
dec
cmp
movsb
movsl
ja
testl
std
push
inc
jns
loope
call
jno
jne
scas
scas
mov
sbb
gs
cmpsl
push
xor
call
push
aam
xchg
addr16
ret
ffreep
cmc
fistpl
icebp
call
or
jle
push
clc
cld
sbbb
and
fiaddl
mov
sub
in
roll
mull
enter
nop
add
push
dec
push
and
or
push
leave
fmuls
cmp
test
insb
dec
mov
sti
inc
lret
pop
js
mov
inc
push
inc
fidivs
mov
jp
xchg
xchg
push
fsts
cltd
jae
pop
jp
mov
xchg
add
mov
shlb
jmp
arpl
jmp
jmp
insb
xor
repnz
mov
xor
xor
jo
push
mov
loopne
pop
mov
mov
dec
mov
and
push
iret
inc
or
cmpsb
inc
icebp
clc
inc
jge
jl
jne
vorpd
arpl
jl
sbb
enter
adc
pop
aas
sub
mov
les
push
ja
jo
adcl
fildll
inc
int3
loope
lahf
das
inc
dec
scas
addr16
and
cmp
je
sbb
xchg
pop
xchg
inc
mov
adc
ffreep
mov
sub
jg
insb
stc
rorb
jecxz
mov
mov
and
dec
add
jnp
xchg
push
aad
dec
xor
sub
add
pop
mov
movsl
popa
cltd
jns
xorl
ss
pop
pop
or
push
push
and
xchg
mov
insb
rclb
test
xchg
cmp
push
xchg
mov
and
ja
and
or
popl
cmp
adc
imul
es
mov
out
fsubrl
pop
icebp
pop
dec
cmpsl
es
in
sbb
in
lcall
mov
mov
sub
sub
cmp
aas
xorb
jmp
or
and
sarl
cmp
in
rorb
xchg
scas
inc
or
in
push
jecxz
jecxz
lea
sub
pop
mov
jge
shll
repz
push
push
ljmp
mov
sbb
xchg
bnd
ret
mov
push
adc
pop
fcmovnb
or
push
dec
mov
mov
mov
shrb
cmp
loop
push
mov
add
test
aam
pop
inc
jbe
pushf
jno
scas
fnstenv
jno
cmpb
das
fdiv
cmp
fimuls
fidivrl
sbb
int
mov
dec
mov
add
adc
or
inc
mov
sub
jmp
movl
pop
lret
ret
ficoml
jnp
sub
jl
andb
push
shl
test
loopne
cmpsl
std
push
stos
int3
and
mov
push
sbb
dec
push
pop
cltd
adc
cmp
pushf
popf
push
pop
cmp
stos
and
sub
adc
xor
mov
cmc
stos
roll
mov
inc
push
nop
add
adc
inc
lock
or
lret
js
jl
hlt
xchg
jns
aas
shl
cmp
add
aad
and
enter
pop
subl
and
lods
lods
jae
bound
fs
sbb
es
pushf
pop
jnp
ljmp
fwait
pop
scas
inc
rcrb
push
addr16
mov
daa
cmp
inc
inc
repnz
mov
imul
scas
stos
insb
mov
fidivrl
fldenv
aas
pop
sahf
sbb
cmpsb
push
icebp
insb
mull
in
stos
mov
xor
adc
ret
and
cmp
andl
mov
and
sbb
fsts
mov
xchg
test
cmp
pop
lret
stos
mov
jle
mov
stc
in
sub
fdiv
stos
adc
xchg
leavew
inc
iret
subb
add
add
sahf
adcb
add
sbb
out
leave
push
mov
or
stc
mov
jmp
das
add
or
sahf
ds
push
fwait
in
jb
sbb
ret
je
dec
jmp
out
push
pop
sar
push
lds
popa
sbb
gs
enter
in
cmp
loopne
aam
inc
fists
call
cmp
popf
repz
into
dec
sti
mov
ret
pop
loop,pt
test
push
fildl
rolb
fcomi
mov
sbb
pop
lods
out
xchg
mov
sbb
add
shlb
dec
xor
flds
jo
fwait
in
add
cmp
push
popf
fimuls
cmpsl
push
bound
movsl
inc
outsb
frstor
ss
push
data16
cmc
into
inc
add
xor
cmp
loope
xor
shl
in
mov
xchg
imul
fidivrs
test
xchg
sti
inc
out
mov
aaa
movsb
add
cmp
out
mov
hlt
mov
sbb
push
inc
subl
pusha
out
insb
cmp
adcb
or
push
lods
sahf
jecxz
movsl
mov
inc
cmp
inc
dec
lret
mov
daa
mov
inc
jecxz
jl
in
xorl
xchg
push
push
cltd
sar
insl
in
jae
test
inc
xchg
mov
hlt
sti
xlat
jns
add
inc
lahf
fbstp
popa
lods
gs
xor
lods
nop
push
mov
jl
movsl
sarb
scas
jmp
pop
push
rclb
pop
cmp
hlt
inc
lret
shrl
jae
cltd
cltd
xchg
shlb
ja
mov
movsl
xor
jae
jne
xlat
test
in
jmp
pop
push
add
idiv
mov
and
xchg
xchg
xchg
xchg
adc
cmp
lock
shl
jmp
stc
inc
jne
mov
inc
cli
cld
adc
xchg
mov
rcll
insb
lods
mov
sarb
test
sbb
out
pushl
cli
push
xor
sahf
aas
mov
push
andb
jnp
lds
pop
sbb
adc
mov
add
jno
repz
jae
jmp
into
in
cli
and
test
fwait
sub
cmp
push
mov
jne
icebp
fdivp
call
xor
cwtl
pusha
popa
ljmp
sbb
sahf
push
pop
fdiv
pop
xchg
orl
mov
loope
nop
arpl
pop
dec
inc
mov
adc
cmc
fcomi
cmp
mov
scas
jno
cltd
push
jne
enter
mov
jo
lcall
nop
inc
or
ret
mov
sti
and
mov
mov
push
sub
rcl
arpl
int3
xchg
enter
push
movsb
sub
int3
cld
or
push
push
adc
mov
mov
cmp
fwait
xchg
sti
lods
xor
fidivrl
xchg
add
cli
es
negl
push
pop
mov
dec
mov
scas
test
daa
dec
jne
out
int
orb
xor
mov
stc
mov
rcr
shlb
loop
nop
cmp
insw
fbld
add
es
pusha
scas
or
push
movsl
inc
push
mov
nop
or
sub
outsl
pusha
clc
xchg
fmull
dec
jecxz
sbb
hlt
pop
in
pop
mov
lods
cs
dec
inc
xor
data16
iret
dec
jne
or
mov
iret
push
cli
sub
xor
push
adc
and
cmp
cmp
in
sub
jecxz
xlat
pushf
xor
push
shll
cmpsb
repz
flds
cmp
mov
jne
loop
negl
xor
xor
aam
pop
sub
jge
leave
mov
push
xchg
mov
shl
repz
lods
enter
cltd
jns
in
loop
dec
repz
pop
scas
xchg
lahf
inc
sub
lcall
dec
sub
es
pop
mov
in
inc
jno
mov
das
mov
mov
std
cmpsb
icebp
sub
sbb
pop
mov
or
lret
test
int3
sbb
inc
xchg
cmp
out
dec
outsl
ret
sbb
rcl
clc
inc
pop
movsb
push
ja
iret
jno
adc
jns
inc
stos
imul
cmp
mov
xchg
pop
incb
xor
pop
cmc
jmp
sarl
dec
mov
sub
test
dec
loope
test
aam
xor
shll
mov
inc
cmp
and
imul
mov
mov
ds
dec
jno
das
mov
fstpt
xchg
pop
and
loop
cmc
testl
mov
mov
inc
xor
mov
add
or
sbb
lret
loopne
aaa
sbb
push
mov
subb
icebp
dec
loope
jae
cmc
popf
test
nop
dec
sub
pop
pop
add
data16
in
pop
and
clc
xchg
out
mov
lock
outsb
movb
adc
mov
cld
fsubs
cli
sbb
mov
dec
xchg
push
leave
les
mov
int
pop
dec
adc
mov
adc
sub
push
push
add
out
xchg
inc
filds
mov
in
xor
jmp
bound
dec
jne
adc
or
out
adc
rcrb
popa
push
mov
movsb
xchg
ja
out
ljmp
jno
adcl
jne
lods
adc
xchg
imul
sahf
xchg
mov
add
pushf
leave
mov
lds
movsl
or
xchg
call
ds
jl
stos
mov
jno
and
fmull
sbb
mov
push
fs
inc
mov
out
pop
movsb
lret
inc
jge
jne
pop
xor
sub
mov
dec
push
popf
and
mov
out
inc
lds
add
push
shlb
enter
or
push
jne
sub
mov
xor
call
jg
pop
mov
int3
mov
repnz
movsl
pop
popf
pminsw
add
xchg
shlb
sti
adc
xchg
pop
mov
nop
mov
mov
loopne
addr16
jnp
cmp
xorl
mov
pushf
nop
std
icebp
lahf
in
ret
dec
xchg
pop
test
cmp
push
loopne
cmp
mov
mov
in
mov
jb
cmp
adc
cmp
pop
lock
or
fadds
add
cmp
jo
stc
outsl
xor
sbb
and
xor
mov
lcall
out
mov
sahf
mov
fwait
rol
roll
js
int3
add
jo
sub
cmpsl
cmpsb
clc
in
inc
nop
pop
and
mov
popl
fdivl
ficompl
pop
push
or
sbb
xchg
ficoml
and
and
add
out
sub
push
ljmp
js
and
add
shll
sub
out
xchg
sub
imul
mov
aad
nop
into
fstpl
push
xor
push
test
int
cmpsl
bound
gs
push
inc
and
mov
pop
push
stos
cli
or
xchg
mov
mov
mov
pushf
or
cmp
popf
repnz
push
inc
pop
mov
je
push
popl
jns
arpl
loope
cs
jge
aad
fwait
movsl
and
inc
jne
into
aam
push
cwtl
add
push
loopne
sbb
lods
out
fildl
xorb
mov
jle
and
push
pop
dec
sbb
jne
ds
mov
pop
push
std
gs
or
inc
pop
mov
pop
outsb
dec
inc
xorb
inc
es
push
sahf
mov
data16
xchg
pop
mov
mov
cmpsb
jp
es
test
xor
mov
pop
ret
mov
push
adc
dec
sar
or
dec
arpl
rclb
add
out
hlt
jp
ljmp
cmpsb
add
sbb
adc
jle
ss
scas
pop
mov
dec
popa
dec
mov
xor
ret
leave
jp
roll
or
sbb
xchg
jmp
mov
je
xchg
je
arpl
push
fwait
testl
iret
out
outsl
arpl
xor
jae
and
inc
stos
or
mov
int
aam
push
pop
mov
push
ror
xlat
pop
bound
xor
mov
clc
cmp
inc
pop
sbb
lods
or
fidivrl
sti
gs
sbb
pop
test
cli
xlat
cltd
dec
pop
iret
xor
sbb
dec
pop
jecxz
bound
jle
jns
cmp
mov
inc
jp
loop
test
clc
das
imul
stc
lods
loop
pop
jmp
pop
dec
dec
or
fcmove
mov
dec
rorb
fmull
arpl
mov
pop
mov
mov
push
std
xor
shrb
sbb
pop
jecxz
or
jp
push
das
sub
das
mulb
aad
mov
jmp
pop
cmpsl
dec
xor
and
inc
push
sahf
pusha
pop
std
mov
xchg
jb
push
ret
xor
repz
mov
test
xor
add
mov
mov
add
xor
ret
mov
sbb
les
pslld
dec
stos
call
mov
pop
stc
xchg
jecxz
sub
jno
sbb
or
sub
lds
cmpsl
in
bound
jne
xor
sub
in
pop
int
xchg
enter
ja
mov
sub
popl
jmp
push
lahf
jo
fchs
mov
andb
in
push
adc
mov
clc
dec
pop
clc
mov
iret
xchg
and
adc
js
out
cltd
hlt
ficoml
das
fwait
loop
inc
cld
pop
mov
mov
jg
lock
xchg
lock
cmp
jp,pt
in
orb
sub
dec
push
testb
fsubl
mov
push
jno
das
test
and
rorb
sbb
and
outsb
movsl
inc
push
stc
fadds
movsl
inc
std
sar
push
pop
xor
scas
out
sbb
xor
lret
mov
sarl
add
xchg
inc
pop
add
push
incb
notb
mov
push
push
aaa
fldenv
addr16
jle
xchg
xor
adc
pushf
sub
int
jmp
repnz
dec
mov
or
pop
dec
jge
inc
xor
xchg
pop
cmp
addr16
loop
and
imul
mov
popf
jl
out
adc
pushf
mov
push
xor
aaa
jge
jo
movd
dec
add
cmp
bound
sbb
roll
mov
mov
jg
xchg
add
sub
jno
inc
inc
xor
inc
cltd
ljmp
push
adc
mov
in
popf
out
test
mov
lcall
cmp
std
mov
push
xchg
push
sti
es
mov
mov
clc
sub
jnp
fiadds
mov
jg
fsub
mov
lds
xor
fs
push
insb
fldt
insl
mov
ja
pop
pop
mov
or
fstpt
cwtl
inc
aas
les
jg
mov
sbb
negl
mov
or
nop
pushf
icebp
sbb
ljmp
into
push
pop
arpl
fisttps
xor
cs
dec
xlat
shrb
int
es
xor
push
mov
pusha
dec
dec
stos
in
movsb
adc
sub
mov
mov
mov
dec
sbbb
jo
mov
sub
xchg
xor
loop
gs
shrb
test
shlb
rol
sub
jne
es
dec
inc
imul
cmpsb
push
rclb
mov
mov
mov
in
xchg
mov
outsb
js
mov
test
outsb
xchg
dec
adc
sub
les
int
sub
pop
dec
popf
inc
mov
pop
aam
or
lret
sbb
scas
push
test
lahf
dec
cmp
xchg
popw
mov
shrb
and
ret
outsl
out
and
mov
push
out
cmc
dec
mov
int
xchg
lahf
mov
mov
or
push
xchg
lods
cmpsb
xorb
cltd
and
jecxz
or
jle
movsl
xchg
les
pop
sub
jecxz
mov
jbe
jp
xchg
push
push
stos
or
mov
pop
pop
mov
jo
cs
fsubrl
out
pop
mov
jle
mov
mov
sarl
jb
insl
mov
repnz
fsubr
cmp
nop
jo
js
ret
loope
into
in
shrb
andb
and
cmp
cwtl
pop
insb
ljmp
dec
outsl
cmc
xor
fiaddl
lret
dec
cli
mov
scas
jecxz
mov
shll
in
xor
sti
dec
dec
es
insb
pop
add
and
push
insb
push
sti
mov
sbb
pop
xor
into
adc
cmp
cmp
sub
xchg
fisttps
repnz
cmpsb
lret
in
push
dec
or
xchg
cld
cli
pop
test
imul
pop
add
push
mov
push
push
mov
fisttps
cmp
call
jl
pop
lock
repz
sbb
pop
out
loop
xor
insl
out
inc
or
in
mov
push
xchg
rolb
sub
push
fs
scas
inc
sub
push
inc
inc
mov
push
xor
sahf
sbb
and
dec
cmp
cmc
cmp
mov
dec
xchg
inc
and
jmp
jg
jns
out
adc
add
jecxz
lods
insb
and
les
ret
cld
lret
jl
test
jno
shl
mov
ja
push
daa
add
push
mov
in
js
lcall
dec
cmp
outsb
adc
add
jb
sbb
cltd
push
stos
daa
aad
cmp
add
push
xchg
mov
mov
out
xor
mov
adc
jp
and
sbb
sbb
mov
popf
aam
add
fwait
add
mov
jne
push
xchg
xor
or
xor
mov
mov
mov
push
test
imul
int
mov
sub
mov
fstps
mov
pop
pop
enter
and
adc
push
adc
hlt
inc
mov
pop
inc
sbb
test
jb
push
mov
sbb
jecxz
flds
test
jno
call
rcr
and
lcall
push
ds
cmc
leave
stos
push
mov
mov
pop
add
rcr
pop
sub
lods
ss
sub
push
push
rolb
mov
vmwrite
pusha
shl
pop
out
dec
inc
and
sbb
outsl
in
out
aad
mov
ljmp
and
pop
jp
in
addr16
jl
enter
out
es
mov
rolb
pop
cmp
jo
pop
std
dec
andl
adc
lret
pop
je
jno
movsb
arpl
test
and
iret
mov
bound
push
ret
shrb
ds
inc
mov
in
mov
in
in
out
inc
ficoml
cmp
push
xor
sbb
dec
mov
stc
mov
ret
fcompl
jmp
adc
stos
andl
imul
data16
es
adc
add
sbb
or
ret
stc
mov
cltd
rclb
pop
out
push
or
dec
push
jnp
dec
sub
dec
imul
push
aam
add
inc
pop
sbb
adc
jno
push
inc
les
imul
sub
insb
pop
jnp
lahf
mov
cmpsb
stc
hlt
mov
mov
aad
mov
nop
cmp
xchg
pcmpeqw
mov
fcmovne
mov
cwtl
movsb
sub
mov
imul
adc
bound
scas
stc
jg
sub
mov
aad
or
iret
cmp
lcall
int3
cmpsl
push
sub
mov
imulb
rcrl
push
push
jmp
push
push
icebp
loope
gs
dec
fidivrl
nop
stos
or
mov
pop
movsb
ret
mov
sbb
scas
mov
push
mov
fiadds
cmpsb
lret
xchg
das
xor
adc
leave
and
fwait
je
fldt
sub
inc
cltd
push
mov
jnp
sub
adc
xchg
hlt
inc
std
inc
xchg
xor
aam
popf
test
fldt
pop
adc
fwait
xor
xchg
or
hlt
fcoms
dec
xor
push
mov
je
sbb
xchg
mov
and
inc
pop
cmp
fwait
jle
mov
push
les
dec
and
or
cltd
in
mov
pop
scas
je
fwait
cltd
es
adc
ljmp
sbbb
fldenv
inc
push
cmpsb
scas
mov
sbb
loope
mov
xor
in
outsb
pusha
xchg
sub
ds
daa
xchg
push
cltd
mov
in
push
dec
js
mov
test
out
jnp
outsb
icebp
xchg
jae
or
es
pushw
jnp
mov
insl
movsl
stc
cmpsl
cmp
jne
xchg
rol
andb
push
add
pusha
loop
or
mov
cwtl
in
jge
inc
out
ret
mov
aam
inc
roll
daa
adc
cmc
sub
ja
xchg
popf
xchg
pop
lods
cmp
rcrb
push
enter
mov
xor
test
add
mov
int
add
xlat
sub
das
aam
jge
dec
push
inc
rcr
mov
or
pop
div
mov
decl
adcl
je
push
or
sbb
lret
pop
enter
not
jmp
add
mov
rcrb
jno
cmp
xor
adc
xor
cltd
push
outsb
movnti
sbbl
sbb
dec
mov
xchg
cmpsb
mov
pop
icebp
pop
mov
fdivl
fstps
mov
inc
mov
xor
mov
outsb
ficoml
cmp
adc
jne
xchg
jnp
sarl
pop
mov
mov
stos
sub
jmp
mov
jae
cmp
cld
mov
xchg
shll
repz
out
sbb
jb
xchg
push
dec
out
mov
mov
cmpsl
and
arpl
es
lods
dec
sub
xlat
out
sbb
leave
lret
jmp
cmpsb
xchg
inc
popf
gs
sbb
mov
mov
xor
and
pop
xor
or
push
cmp
arpl
es
dec
arpl
mov
cs
cmp
stc
bswap
movsb
inc
or
mov
sub
jg
xor
lret
push
mov
lods
pop
pop
dec
insl
xchg
push
jb
cmp
std
sbbb
outsb
test
mov
jecxz
jns
loop
adc
rcrb
jmp
loope
inc
mov
sub
imul
leave
fwait
jae
popf
ja
dec
jl
in
cmc
pop
xchg
loope
or
insb
inc
cmp
inc
adc
jl
inc
in
andl
nop
fucomi
and
jecxz
dec
push
sub
ds
lods
xor
lea
jg
cmp
jne
pop
mov
jo
icebp
jp
cwtl
sarb
je
inc
in
daa
mov
popf
cmp
pop
xor
popa
sbb
imul
or
in
xchg
jg
push
sub
ja
std
mov
pop
xchg
or
cmpsl
mov
push
dec
lods
mov
jno
or
or
sbb
sbb
jne
faddl
adc
inc
jns
xchg
pop
pop
dec
xchg
outsb
insb
xor
push
push
rorb
xchg
mov
repz
add
mov
mov
in
sbb
mov
fwait
nop
push
and
arpl
pop
sub
aas
mov
sbb
in
xchg
outsb
adc
test
push
test
add
xor
or
lods
loope
aad
dec
jno
or
push
push
sahf
insl
clc
mov
std
mov
jns
mov
inc
xcrypt-ofb
cmpsl
lods
jns
test
inc
jp
xchg
aam
inc
or
je
mov
inc
mov
pop
jp
out
or
xchg
mov
lods
adc
or
xlat
inc
xchg
jo
dec
pop
pop
push
dec
lea
push
xor
cmp
leave
sahf
and
sbb
icebp
arpl
mov
sub
mov
stos
daa
mov
rcl
mov
cmp
push
sub
repz
test
les
jo
xorl
fistps
xor
mov
jp
aaa
or
mov
adc
push
rclb
fdivrs
add
iret
inc
dec
add
imul
mov
loop
loopne
mov
rorl
jo
shll
scas
loopne
rcll
movsl
mov
in
cli
fsubrl
push
sub
push
sub
inc
roll
repz
adc
int3
paddsw
xchg
lods
or
sbb
scas
fisubrl
and
and
cwtl
repnz
in
loop
jge
sbb
mov
inc
jne
mov
aaa
mov
test
sub
xchg
mov
cmp
adc
sub
popf
jp
mov
push
push
push
cwtl
je
xchg
cmp
std
std
shrl
sub
sbb
lcall
subl
fisubl
and
push
lea
mov
mov
jmp
push
add
dec
fld
add
das
xlat
xchg
pop
xor
ja
pop
mov
xlat
lahf
pop
mov
aas
inc
xor
add
enter
cld
mov
jecxz
mov
mov
mov
insb
notl
shll
mov
pop
mov
rolb
out
pop
rcl
xchg
sahf
mov
dec
or
mov
sbb
scas
adc
sbb
call
lods
sub
or
dec
ja
in
ds
pop
sahf
add
into
mov
xchg
dec
aad
test
mov
popa
jl
xchg
sbb
jl
push
push
push
or
mov
jae
fcoms
and
or
sub
fs
or
adc
or
leave
das
cmp
push
inc
mov
rcrl
pushf
mov
or
sub
xchg
add
les
cmp
imul
adc
inc
ret
aas
xor
xchg
jno
insb
aam
dec
out
xor
sarb
xchg
mov
enter
dec
sub
outsb
aad
fwait
cmp
popa
dec
xchg
lods
cld
jae
aas
adc
je
pop
jns
mov
add
adc
lods
jge
pop
lock
or
outsb
and
mov
pop
push
xchg
push
xor
inc
lcall
imul
push
pop
lcall
out
testb
mov
rorl
lret
inc
push
neg
gs
dec
lret
dec
mov
xlat
insb
dec
xchg
scas
into
add
and
mov
pop
push
cmp
les
xchg
repnz
in
ds
sub
sbb
imul
out
fxtract
cwtl
cmp
adc
aad
fisubs
push
clc
in
mov
adc
lcall
sub
jbe
pop
setae
inc
jo
repz
das
fldenv
add
stos
out
dec
pop
cmc
mov
add
push
loopne
push
dec
mov
jno
and
orl
scas
dec
inc
and
mov
fdivrs
sub
dec
dec
leave
fwait
lods
mov
or
dec
mov
mov
xorl
pop
xor
and
cmpsb
cmpsb
push
idivl
and
pop
mull
dec
imul
sbb
aam
xchg
fldt
out
jae
mov
sti
int
inc
adc
cld
mov
test
mov
orb
jnp
xchg
fistpll
das
sub
into
cmpsl
sub
jbe
mov
mov
repnz
rorb
jo
sahf
popa
pop
or
loope
push
orb
or
in
mov
test
xchg
sbb
sub
push
push
cmpsb
jae
xlat
xor
scas
pop
pop
sub
push
mov
jle
pushf
xchg
add
add
lea
imul
aaa
cwtl
addr16
rcl
movsb
mov
mov
aaa
cmp
pop
cmp
xchg
ljmp
roll
inc
scas
loop
mov
add
mov
cli
jmp
xchg
push
lahf
lret
lods
and
adc
xor
pop
mov
enter
sbb
bound
shll
test
imul
enter
mov
xor
pop
xor
int
test
jne
cs
pop
fwait
and
adc
add
ja
inc
cmc
test
fildl
fisttps
mov
aas
sti
repnz
or
lods
je
jno
in
loopne
mov
test
clc
xor
xchg
and
mov
mov
sbb
mov
cmp
jae
lcall
add
das
sbb
and
and
loope
jl
js
dec
rcrl
call
dec
inc
mov
clc
es
dec
pop
ret
cmp
fcomip
inc
mov
cltd
push
jnp
gs
or
ds
cmc
or
jns
mov
stos
stos
inc
jcxz
push
pop
push
cs
jmp
rcrb
xor
lret
enter
flds
jno
in
into
lcall
xor
ljmp
inc
lret
mov
sbb
cmp
outsb
cmp
dec
mov
or
mov
outsl
cmp
or
repnz
pop
push
inc
icebp
in
pop
das
push
jl
ljmp
xor
push
sbb
in
sub
dec
into
fldcw
and
jecxz
dec
mov
lds
mov
mov
or
iret
mov
fs
aaa
shl
aam
aam
pop
xchg
push
push
in
push
cwtl
mov
xchg
push
xor
jns
add
push
push
lret
stc
leave
add
push
rclb
adc
inc
int
push
xchg
fmuls
aas
cmp
into
add
jo
shr
xchg
repz
inc
cmp
cmpsb
jae
roll
fstl
stc
repnz
push
add
mov
mov
or
xchg
xor
call
insb
xchg
cmp
lods
xor
sbb
fidivs
pop
adc
ficoml
sar
xchg
mov
jmp
nop
test
ss
outsl
adc
add
pop
lds
cltd
cmpsl
es
dec
movsl
test
outsb
stos
dec
push
inc
rolb
std
outsl
subl
mov
and
add
or
idiv
fsubl
mov
andl
ficoms
mov
inc
gs
jle
push
dec
push
jne
xlat
mov
testl
adc
cmp
mov
mov
adcb
movsl
xor
add
lods
adc
outsl
cmp
inc
ret
popw
mov
mov
mov
xor
inc
and
insl
lods
adc
jb
movsb
mov
out
insb
fstpl
adcb
cmp
in
push
lods
ficompl
or
xchg
cmp
cltd
test
jle
adc
insb
mov
es
mov
adc
rcrb
lods
inc
xor
popa
sbb
sub
push
pop
test
cmpl
or
sbb
ljmp
out
xlat
imul
mov
clc
push
add
popf
enter
xchg
xor
mov
dec
push
fs
mov
jp
jb
das
push
fwait
and
pusha
imul
loope
push
je
movsb
xor
push
arpl
out
out
ds
scas
mov
insl
fst
fcoms
daa
cmp
add
mov
mov
arpl
pop
sbb
cmpsl
test
mov
mov
inc
mov
xchg
lock
lahf
mov
jl
stos
push
xchg
popf
xor
fsubrs
sahf
xchg
pop
push
push
sbb
xor
and
or
bound
add
stc
es
popw
add
inc
mov
sbb
push
adc
mov
stc
fnstenv
inc
xor
or
jge
sub
add
jne
in
in
and
jl
sub
fimuls
insl
popf
cmp
cli
cmp
into
push
pop
popa
andl
dec
data16
std
imul
js
mov
into
push
loop
cmpb
ret
jp
into
xor
out
sub
in
in
or
gs
xor
rclb
mov
mov
int3
push
adc
adc
inc
arpl
mov
dec
out
leave
push
pop
mov
ret
sbb
lods
in
mov
jmp
dec
roll
rclb
mov
inc
or
mov
inc
jge
cmp
pop
inc
jp
mov
jo
movsl
xchg
ds
pop
xchg
mov
repnz
jno
lret
mov
pop
push
les
inc
xchg
ss
sbb
xor
int
ret
xchg
into
out
das
add
xchg
sub
push
xchg
push
es
jno
push
sub
add
test
push
inc
lret
xchg
outsb
mov
inc
outsb
gs
das
xor
dec
das
pop
cld
rclb
jp
jecxz
jg
xor
sbb
ljmp
push
cwtl
adc
pop
addr16
cmp
sti
mov
push
jnp
jge
ja
or
lahf
aad
pop
or
mov
pop
movsb
xchg
mov
pop
jne
in
rcl
mov
adc
das
jecxz
mov
inc
lock
push
jnp
sbb
daa
popa
jo
mov
mov
daa
push
iret
push
pop
pop
pop
ljmp
sub
aaa
sarb
stos
adc
mov
push
push
or
div
dec
pusha
mov
mov
lock
push
mov
push
inc
xor
enter
movsl
dec
negl
mov
push
xor
xor
mov
repz
adc
and
fwait
icebp
iret
pop
xchg
xor
dec
jmp
jmp
std
xor
pop
cmpsl
sbb
xchg
push
pop
sbb
fstpt
mov
daa
stc
adc
pop
mov
stos
or
sbb
or
mov
test
add
pop
lock
cmp
test
and
out
pop
mov
mov
mov
push
mov
loopne
pop
mov
inc
sub
add
xor
jnp
cld
sbb
pushf
dec
fdiv
movsb
sub
psubusb
dec
rcl
push
mov
dec
test
push
sub
adc
jecxz
jp
negb
in
mov
enter
mov
push
add
pop
xor
inc
scas
imul
adc
in
jb
int
cli
pop
mov
stos
stc
cltd
sub
stos
sbb
dec
sub
sbb
cli
and
test
int
enter
mov
push
xchg
sub
scas
js
int3
outsl
add
filds
lcall
adc
push
nop
pop
cwtl
or
mov
rclb
dec
test
clc
add
in
mov
push
cmp
push
ss
decb
pusha
imul
mov
pop
mov
mov
jmp
xchg
pop
pop
lcall
cmpsl
mov
out
cmpsl
sub
xor
shr
xlat
movsl
mov
xor
and
aaa
outsb
pop
aas
jno
jns
nop
repz
sub
call
cmp
and
in
dec
dec
cmp
lods
enter
lods
cmp
jle
mov
imul
test
sub
aad
or
shrb
out
dec
std
inc
add
lahf
incb
push
mov
nop
add
cmp
pop
fbld
xchg
pop
fs
outsl
xchg
inc
and
filds
push
in
lds
es
fcmovnb
push
out
jecxz
ja
nop
daa
in
lods
mov
mov
jne
sub
xor
jnp
fisubrl
arpl
stos
test
pop
bnd
clc
sbb
in
jl
ficoml
movsl
fbstp
scas
stos
pop
xchg
cmp
cmp
add
xor
stc
addr16
cmp
adc
je
xor
sbb
cli
and
ret
jle
and
sbb
lods
and
sub
pop
sub
inc
ret
dec
mov
lea
or
bnd
inc
inc
dec
pop
arpl
lods
inc
lods
cmpsl
jno
popf
outsl
call
add
scas
fs
mov
mov
sbb
leave
bnd
lahf
inc
inc
cli
arpl
inc
mov
jle
adc
sub
loope
sub
stos
pop
testl
aam
pop
fcomi
mov
push
lcall
mov
daa
xor
adc
xor
imul
push
add
dec
dec
pop
ljmp
shrl
scas
mulb
shr
inc
loope
dec
test
sub
out
sbb
movsl
aas
int3
dec
pop
sub
jo
jne
rcll
push
sahf
mov
push
loope
mov
repnz
cmc
sub
mov
or
sub
imul
aam
pop
add
out
ret
jg
test
stos
mov
shlb
pop
push
pusha
push
loop
fwait
loope
mov
pop
hlt
loop
lods
push
mov
cld
mov
sbb
mulb
push
daa
mov
mov
mov
and
divb
and
xchg
push
jns
pop
add
cmpl
lret
lods
xlat
pop
mov
xchg
out
lcall
cmp
test
inc
adc
jmp
scas
dec
jg
mov
iret
sahf
jb
inc
int
xor
mov
insb
cmc
jbe
popa
jecxz
in
mov
xor
jecxz
loopne
rcrb
mov
sub
mov
add
lea
mov
aad
sbb
or
out
xchg
pop
movsl
pusha
lahf
push
into
mov
mov
xchg
adc
adc
mov
mov
sti
jno
ljmp
lahf
arpl
lcall
mov
test
xor
mov
notb
mov
inc
push
sub
call
mov
movhps
lea
and
movsl
out
loope
inc
mov
js
dec
xchg
pushf
test
sarl
and
sub
fmul
push
sbb
test
aas
xchg
xorb
ds
pop
add
adc
pop
imul
repz
imul
xor
sbb
popa
push
test
xor
lahf
jnp
dec
fwait
pop
mov
push
lds
add
mov
shr
rclb
dec
and
mov
fs
clc
sahf
cmpsl
movsb
dec
mov
testl
in
xchg
jb
mov
xor
gs
push
sub
mov
adc
into
gs
xorb
xchg
es
cmp
aam
xor
or
ss
sub
mov
movsl
adc
arpl
and
pop
outsl
xchg
fstl
mov
ret
push
sub
mov
dec
addl
push
lock
movl
scas
sub
ds
ss
jo
out
inc
cmp
and
cmpsb
movsb
fucom
shll
or
jo
aaa
outsl
jns
mov
push
xor
aaa
divl
das
cmp
lahf
mov
cmp
xor
imul
movsl
sbb
sbb
repz
and
ljmp
pop
inc
dec
imul
mov
es
aad
or
dec
xchg
push
in
push
inc
inc
xchg
and
lcall
cwtl
scas
xor
into
or
jne
or
adc
ss
movsb
testl
adc
enter
xchg
mov
mov
sbb
pop
repz
or
popl
cmovs
daa
test
adc
ret
mov
movsl
rorl
movsl
scas
sub
cmp
mov
xchg
icebp
repz
mov
pop
inc
jo
lahf
xchg
loop
mov
sub
pop
movb
sbb
repz
push
pushf
cmpsb
sar
add
daa
int3
stos
pushf
mov
mov
fmuls
cmpb
in
test
jmp
adc
aam
js
sbb
pop
lret
into
sub
push
cmp
push
add
out
sbbl
jle
cld
fbstp
stc
cmp
int3
shlb
add
test
sbb
xchg
clc
lcall
jne
sti
mov
jo
mov
lahf
push
insb
mov
or
pop
mov
clc
enter
and
jmp
cmp
add
jb
in
ret
push
mov
cmp
and
mov
jo
pop
and
jl
pop
ror
mov
and
push
xchg
mov
loope
sub
mov
jnp
push
popf
xchg
push
lcall
jle
push
push
out
das
cli
dec
call
mov
push
testb
mov
push
dec
call
pop
push
mov
sub
add
mov
out
shll
or
push
dec
mov
xchg
inc
out
xchg
test
jne
outsl
sbb
add
jle
mov
adc
es
xor
xor
rolb
fcomp
dec
fmuls
dec
adc
fstps
xor
push
outsl
mov
ret
jle
jmp
mov
orl
and
mov
pop
pop
loop
das
push
dec
popf
jl
sub
cltd
xor
ljmp
pusha
loope
cmp
cmp
cltd
and
cmp
push
xor
xor
cltd
cmp
out
adc
int3
dec
sub
mov
nop
jmp
mov
ret
jb
inc
dec
jb
jge
inc
lret
push
mov
sbbl
jo
sbb
jmp
sub
test
xchg
sbb
imul
sub
add
jmp
int
mov
aad
stos
rol
sbb
pop
sbb
inc
out
mov
and
test
dec
xchg
adc
andl
out
xor
cmp
lods
lret
out
cmc
aaa
aad
flds
mov
xlat
leave
call
mov
mov
dec
jbe
mov
push
pop
repnz
mov
loope
daa
pop
test
sbb
or
xchg
out
aaa
dec
neg
push
mov
hlt
mov
lahf
mov
loope
call
mov
and
mov
test
inc
xor
aaa
pop
loope
mov
sbb
cmp
and
xlat
nop
ds
sbb
mov
cld
cmc
fisttps
loopne
xchg
inc
mov
push
jg
lret
mov
add
cmp
pop
jno
out
mov
lea
jbe
lods
shlb
ljmp
imul
in
mov
or
es
enter
pop
xchg
xchg
sub
pop
jp
sar
pop
ret
loopne
push
sub
xor
add
int3
repz
aam
imul
sbb
inc
insb
or
clc
cmp
sbb
push
adc
test
mov
jmp
jns
lds
mov
shrl
sbb
push
fstps
sbb
jg
xchg
xchg
mov
rcll
aaa
out
insl
push
mov
leave
test
jbe
pop
cmp
pop
mov
xor
mov
xchg
shlb
sbb
fistps
fadds
loop
xchg
inc
sub
dec
and
rolb
ret
inc
xchg
lahf
sub
jmp
lcall
push
and
push
jmp
xchg
jbe
pop
mov
and
and
repz
mov
push
jl
mov
inc
inc
insl
stc
cmp
cwtl
bnd
jp
call
mov
test
pop
lods
out
inc
dec
and
in
add
dec
jb
das
aad
add
xchg
cmpsb
mov
imul
mov
popa
mov
sub
lret
pop
sbb
lret
mov
pop
jg
icebp
mov
push
mov
jg
jb
sbb
lods
cltd
fisubl
push
and
mov
adc
in
popf
sahf
iret
fisttpl
sub
jmp
adc
je
cmp
idivl
mov
js
mov
shld
ret
push
and
gs
or
test
lahf
inc
filds
in
hlt
clc
mov
movsb
sarb
push
add
jle
insb
pop
daa
adc
jle
aad
imul
dec
sbb
rcrl
xchg
sbbl
xor
lods
push
xchg
jp
and
int
std
mov
out
mov
mov
pop
adc
cmp
sbb
lds
stc
pop
jmp
fwait
inc
and
popf
adcl
adc
xchg
outsb
mov
cltd
sub
adc
test
jae
mov
add
sahf
mov
in
cmp
out
adc
loop,pn
cmp
cltd
mov
xchg
cmp
shl
sub
adc
mov
repz
imul
mov
jb
sub
repz
pop
xchg
mov
in
ljmp
lret
and
dec
inc
scas
ja
aas
add
jnp
in
xor
gs
inc
rclb
mov
push
std
aam
jb
push
fwait
jb
pop
cmp
out
push
xor
insl
rorl
mov
mov
lcall
push
test
pop
loopne
mov
test
pop
adc
pop
sbb
push
je
inc
leave
and
push
test
sub
add
shlb
push
mov
xchg
pushf
adc
or
lcall
mov
xlat
cmpsb
add
lret
push
jle
jp
stos
adc
pop
cmpsl
je
mov
aam
and
loop
mov
sahf
jnp
pop
aam
sub
pop
inc
stc
xchg
sbb
dec
inc
lret
jne
psrld
sub
cmp
jecxz
int3
mov
in
call
adc
clc
adc
imull
xor
mov
cmp
push
test
aad
data16
fmull
xor
mov
cltd
and
dec
aas
mov
stos
fpatan
mov
add
sub
mov
cmp
test
fldpi
add
push
mov
sar
loop
push
hlt
subl
mov
fs
mov
xchg
std
fwait
out
daa
xor
gs
dec
stos
aaa
lcall
pushf
mov
fcomps
loope
std
mov
addl
out
mov
fs
sbbb
scas
or
inc
push
in
mov
mov
jg
imul
mov
jmp
faddl
insl
mov
movsb
call
jmp
dec
push
jmp
shl
dec
jno
cmp
cmp
add
jae
fnstsw
jno
fldl2e
into
sub
mull
cmc
int3
lar
sub
mov
pop
sbb
icebp
cmp
ret
fwait
lahf
lahf
daa
pop
pusha
cmp
pop
sbb
mov
loopne
pop
js
mov
xchg
push
inc
gs
sub
je
cmc
data16
xor
cmp
pavgw
jns
pop
cwtl
ljmp
into
pop
jmp
push
imul
jl
jbe
mov
push
fstps
andl
shll
push
cmp
cli
lods
ds
pusha
mov
outsb
lahf
and
cltd
push
jbe
push
fimull
jg
inc
jbe
ret
fs
rcrb
test
arpl
test
repz
pop
rolb
out
push
pop
xor
daa
pop
pop
fsubrs
clc
cmc
adc
test
mov
mov
aam
repz
and
popf
xchg
inc
xchg
arpl
adc
les
inc
jecxz,pt
jp
sub
mov
js
pop
jg
in
stc
cmpsl
mov
fldl
xor
daa
fnsave
fistl
ljmp
icebp
add
loop
dec
sub
test
lods
push
jno
mov
repz
push
ret
sbb
in
ljmp
lods
smsw
mov
movsb
cs
inc
fcmovnu
sbb
pop
adc
inc
add
jge
sub
mov
add
aaa
jp
sbb
addl
push
enter
dec
adc
popa
xchg
or
push
leave
xchg
pop
add
dec
dec
mov
mov
test
pop
jge
adc
mov
push
cmp
pop
out
mov
aad
data16
sub
test
push
add
fcoms
repnz
jg
push
out
pop
push
fwait
test
sbb
adc
xchg
es
jb
jne
popf
mov
adc
or
lds
call
mov
xor
lds
nop
push
out
adc
and
mov
and
hlt
jo
mov
movsl
lret
fnstenv
xor
js
jne
or
jo
fmul
lret
arpl
dec
xchg
cs
fidivrl
xor
movsb
push
cs
call
adc
ss
repnz
mov
mov
dec
testb
aam
adc
roll
push
insl
int3
sbb
push
and
xor
fwait
repz
out
sub
pop
aad
pop
xchg
mov
out
fstpl
cmpsl
mov
imul
push
repnz
mov
xor
push
shlb
adc
pop
cmc
push
rcrl
add
jno
jb
pop
outsl
push
cmp
push
lahf
push
cmp
rcrb
scas
js
cmp
jl
or
insl
mov
loopne
pop
inc
cmp
hlt
rorb
and
aaa
and
lret
or
inc
push
inc
mov
and
cli
sbb
loope
pop
cmp
mov
mov
push
adc
stc
cpuid
icebp
dec
push
mov
imul
mov
lock
mov
imull
sbb
iret
insb
mov
pop
xchg
mov
and
arpl
sub
mov
fsubrl
addr16
cmp
iret
jo
cmp
mov
cmpsl
push
push
cmp
sarb
into
cli
mov
dec
insl
ffree
cmp
pop
sti
mov
pop
xchg
xor
iret
xchg
popa
fmuls
ss
pop
xor
int
mov
movsl
sub
divb
add
sub
test
push
in
js
adcl
gs
jne
pusha
cmpsb
dec
test
sub
xlat
ret
insb
pop
xchg
ss
or
leave
daa
pop
or
mov
push
movsl
pop
jge
iretw
cmpsl
fadd
aad
lcall
imul
inc
icebp
insl
push
dec
add
frstor
shll
push
ja
dec
mov
mov
popf
popa
sbb
mov
jns
cmp
je
sub
mov
mov
ret
in
aas
into
ljmp
scas
push
shr
lds
outsl
sbb
out
cmpsl
cmp
pop
cmp
addr16
out
jp
enter
push
dec
dec
and
push
test
pushf
scas
bound
xchg
int3
call
cmp
xchg
mov
and
jge
xchg
scas
mov
movsb
mov
push
jecxz
repz
push
test
out
das
or
cs
fisubrl
je
xchg
cmp
or
ja
negb
xchg
in
cld
xchg
sub
xlat
or
adc
call
test
loop
xor
mov
mov
cs
filds
xor
push
xchg
in
pop
mov
sub
push
xlat
lahf
icebp
add
sbb
shlb
push
lahf
cmpsb
dec
nop
fisubrs
hlt
mov
cmp
js
mov
repz
ret
shrl
mov
push
push
je
pop
xchg
test
jmp
push
int
add
adc
ljmp
loop
xchg
mov
daa
jb
or
cmp
cmpsb
sbb
and
aaa
daa
shl
repnz
add
add
and
ss
mov
jecxz
mov
stos
adc
sub
pusha
ret
xchg
cli
rorb
push
lret
or
sub
clc
cmp
call
inc
daa
push
jle
bswap
pop
jg
int3
test
rorb
incl
sub
clc
jbe
pop
inc
les
sub
ret
pop
test
xchg
jns
mov
xchg
dec
je
and
sbb
sub
testl
jb
stc
push
shrb
lahf
jnp
inc
and
dec
adc
dec
inc
xor
mov
mov
push
inc
aas
mov
pusha
sbb
pop
cmc
dec
fidivrs
bound
out
fucomi
pop
push
shll
or
ficoms
js
aaa
dec
popf
cmp
mov
inc
fcoml
lcall
sub
xorb
test
repz
cld
dec
sub
push
xor
scas
push
lds
inc
addr16
hlt
push
fildll
xor
pop
xchg
mov
adc
and
aaa
sbb
in
fstpt
mov
cmp
add
sarl
int
loop
lret
mov
adc
stos
sti
xlat
pusha
test
adc
pop
popa
scas
xlat
popa
stos
xchg
push
sti
repz
xor
jbe
inc
dec
push
movsb
rcll
push
jae
dec
cs
push
push
sub
jecxz
add
aad
sub
aam
repz
or
inc
in
dec
xor
sbbb
icebp
fildl
sub
cmpsl
hlt
cli
push
cmp
pop
xor
out
jg
arpl
popf
andb
inc
inc
mov
sahf
sahf
leave
push
cmc
jg
mov
mov
movl
mov
adc
fildl
out
xchg
push
or
inc
in
popf
jg
jecxz,pt
push
xor
jge
cmpsl
loopne
sti
stos
mull
mov
stc
adc
xchg
es
scas
gs
mov
bound
leavew
outsb
cmc
leave
clc
xor
and
loopne
cmp
adc
cld
xor
pop
sub
bound
inc
xchg
or
int3
jg
rcr
xor
out
mov
iret
repnz
adc
jb
xchg
imull
psubq
movl
lret
add
and
or
sbb
adc
outsl
add
or
mov
pop
fldenv
adc
dec
fildl
mov
mov
push
fsubrl
lahf
or
arpl
xchg
shrb
mov
mov
stos
jg
pop
shll
jbe
pushf
cs
std
mov
jb
push
cmp
mov
mov
sbb
jbe
out
jo
adc
fidivrl
push
dec
in
scas
mov
rolb
jo
jl
push
fxtract
push
iret
hlt
ja
loopne
jns
pop
cmpsl
adc
or
xchg
mov
jge
mov
pop
andl
sbb
in
mov
mov
enter
xor
ljmp
mov
mov
lock
pop
packssdw
mov
sbb
sub
pushf
xchg
or
sub
lcall
cmc
fnstcw
mov
mov
ja
ljmp
movsl
or
in
sbb
test
dec
xchg
cmp
lds
inc
addb
sti
test
xchg
sub
jb
fisttps
sbb
adc
and
shl
and
imul
mov
clc
fistps
push
mov
xor
pop
xor
cs
xchg
insb
cli
gs
imul
cwtl
pop
fcoms
cli
pop
js
jne
jmp
adc
test
int3
sub
arpl
pop
push
pop
shrl
fnstenv
clc
xchg
mov
out
repnz
adc
jae
cmpsb
sbb
jmp
jnp
adc
popf
dec
sbb
lcall
cmp
lret
mov
out
out
inc
push
mov
pop
sbb
or
cmc
xchg
xor
mov
inc
xchg
int
xchg
inc
xchg
pop
sub
push
sbb
add
add
lea
sub
mov
aas
imul
loop
jg
pop
ret
xor
pushf
xchg
outsb
cmpsb
leave
int
test
mov
push
leave
jno
nop
mov
fs
sti
test
roll
aas
xlat
jl
and
inc
inc
adc
jns
cmp
cmp
mov
incl
push
rcrb
out
insb
xchg
mov
cmpsb
mov
hlt
icebp
aad
mov
jbe
ja
mov
jno
push
je
xchg
xor
lahf
add
aam
xor
adc
mov
inc
inc
mov
pop
mov
in
push
pop
bound
out
notl
aas
or
imulb
jmp
fs
inc
adc
or
rorb
dec
adc
cwtl
adc
mov
push
repz
xchg
fdivl
mov
mov
cmpsb
mov
xor
xor
sbb
mov
aam
daa
jle
into
mov
imul
movsl
mov
jecxz
sbb
pop
cmpsb
clc
and
and
fsts
lds
fs
in
jae
mov
xor
xor
lods
adc
aam
ffree
mov
push
fcomps
add
fwait
cmp
pushf
jg
push
enter
fistpll
xor
push
cmc
lds
addr16
out
inc
rolb
data16
inc
mov
pop
sub
mov
in
mov
push
add
out
pop
ret
pop
jnp
sbb
shll
mov
loope
shll
jns
inc
addb
cld
cld
arpl
mov
outsl
adc
inc
xchg
lcall
xchg
les
cld
push
xor
jno
test
ficomps
jo
addr16
sub
inc
stos
or
and
or
das
and
fisttps
mov
lahf
in
aaa
shlb
lds
xchg
das
dec
loopne
lret
push
es
aas
mov
and
jmp
lds
xlat
clc
je
mov
push
popa
mov
ljmp
pop
jns
dec
xor
dec
ss
lods
adc
std
popf
bound
mov
push
testl
cmp
into
out
and
nop
mov
popf
ja
push
add
icebp
push
cmpsb
push
jle
cmp
adc
dec
je
bound
movsl
inc
fdivrl
stc
lcall
jae
xchg
vsubpd
cmp
pusha
mov
int3
jge
add
add
ficoml
mov
cmp
dec
cmc
les
dec
call
dec
push
and
adc
loopne
pop
test
mov
fimuls
and
jbe
lahf
mov
aad
jbe
orl
fldcw
cmpsb
add
aam
xchg
pop
rcll
sbb
int3
outsb
jl
mov
mov
xorl
mov
and
in
sub
imul
outsl
jne
into
sbb
xchg
and
loope
int3
cmp
mov
lea
pushf
loop
fisubl
mov
mov
sub
into
int3
sbbl
aam
out
aaa
pop
adcb
rcl
sbb
rol
xchg
lret
fbld
jae
and
pop
orb
outsb
add
pop
das
xchg
aam
aam
add
inc
dec
dec
or
jge
and
xor
jle
leave
mov
push
and
add
rcll
sti
jp
xchg
cmp
mov
push
sbb
mov
ss
test
push
adc
jo
xchg
clc
insl
xchg
dec
push
lock
xchg
lock
out
nop
adc
cli
dec
lcall
mov
add
inc
mulb
rol
and
adc
xor
xchg
jnp
lcall
or
leave
cmpsl
mov
lret
mov
icebp
adc
popf
push
pusha
int
iret
and
sbb
dec
push
shlb
jae
jb
ja
inc
aaa
pop
in
fiaddl
push
mov
jne
cmp
fs
jb
arpl
sbb
jp
push
cwtl
mov
mov
xchg
cld
mov
and
stos
mov
outsl
sub
dec
jae
pop
cmp
push
and
xchg
inc
rcrb
and
xchg
mov
push
mov
mov
jle
xchg
adc
mov
push
scas
dec
mov
jmp
cmp
push
ret
stos
add
jb
dec
into
sub
ljmp
mov
scas
test
xchg
repnz
ja
insl
shll
inc
in
cmp
mov
sub
push
pop
rcrl
push
mov
shrl
jmp
inc
jl
mov
shlb
into
popf
repnz
mov
xchg
jns
addr16
adc
xchg
pop
adc
or
loop
xchg
fimull
daa
jne
and
in
mov
dec
addl
icebp
xor
jnp
fs
daa
and
mov
pop
inc
lods
push
jg
mov
jnp
cmpsl
and
mov
out
xlat
scas
dec
jnp
sbb
fidivl
and
ficoml
mov
sub
xor
mov
adc
repnz
xchg
cli
mov
inc
bound
sub
push
mov
leave
mov
ljmp
lods
ror
mov
inc
and
adc
inc
push
lret
ja
jge
adc
cmp
gs
mov
faddl
or
or
imul
fs
sbb
insb
fs
add
add
xchg
cmp
jae
leave
cltd
hlt
cmp
scas
arpl
mov
dec
push
std
mov
loop
jnp
lahf
mov
popl
fisubl
stos
jne
xchg
sbb
mov
add
dec
call
rclb
inc
popa
cwtl
xchg
pop
fmul
clc
xlat
add
repz
jecxz
and
cmp
repnz
into
cmp
sti
les
cmpsl
jbe
out
mov
les
pop
mov
xor
dec
fwait
pop
or
and
adc
mov
fcompp
xorb
mov
lcall
in
mov
push
xchg
cmpsb
inc
call
mov
sbb
xor
int3
fs
or
and
movsb
addr16
popa
cld
in
jp
mov
and
add
arpl
movsl
mov
mov
xor
stos
pop
call
xchg
inc
mov
inc
fstpt
lock
mov
call
icebp
xlat
insl
jg
pusha
xor
int3
stc
pop
rorl
mov
and
push
sti
xchg
xchg
addr16
lcall
inc
push
dec
mulb
mov
vmovups
and
call
pop
out
inc
jge
lea
pop
aam
aam
jmp
lods
xor
sbb
test
mov
cmpsb
sahf
aas
dec
adc
rcr
loope
pushf
or
dec
je
icebp
jg
jbe
sbb
or
addr16
push
loop
js
and
ret
test
mov
les
mov
test
mov
imul
jecxz
add
jno
push
dec
xchg
cmc
adcb
aaa
cltd
jmp
and
mov
jmp
xchg
xchg
or
insl
and
push
jecxz
subl
aam
and
inc
lods
xchg
mov
push
add
nop
ljmp
jp
aas
or
inc
sub
xorl
pop
ljmp
mov
or
repnz
xor
insb
mov
and
cli
test
xor
ror
fcmovnbe
dec
add
gs
push
mov
test
sub
std
dec
sarb
xorb
cmpsl
xchg
inc
xchg
dec
ss
push
sbb
xchg
pusha
push
adc
mov
mov
lcall
lretw
movsb
and
setbe
sbb
lds
mov
stc
pusha
cmp
stos
dec
push
add
xchg
rcll
or
inc
ljmp
lods
xchg
push
mov
cmpsl
imul
xor
xchg
sub
pop
and
cmp
mov
jnp
mov
in
nop
mov
inc
adc
jecxz
aad
and
add
xor
push
push
and
push
aaa
imul
pop
mov
or
mov
jg
mull
movsb
imul
fldt
pop
mov
jb
mov
push
push
mov
ficompl
sbb
stc
frstor
push
mov
cmp
inc
and
jl
cmp
or
scas
cmpsb
sbb
notb
xor
test
shr
mov
push
push
xchg
mov
ja
or
arpl
jnp
test
mov
sbb
jb
sub
xor
mov
shr
mull
test
lds
arpl
xlat
push
fs
repnz
fmuls
add
sub
aad
ss
lcall
ja
mov
add
mov
sarl
testb
and
xchg
mov
mov
cmp
push
mov
testl
out
pop
pop
lahf
repz
aaa
stc
add
mov
pop
xchg
es
xorb
xchg
ret
ss
subb
pop
sbb
or
add
rcll
loope
pop
loop
pop
xlat
dec
inc
xor
push
out
cmpsl
out
ret
mov
movl
sbbb
jmp
cltd
scas
lods
mov
xor
into
fsubrl
lret
xor
push
imul
sub
xor
mov
add
push
sub
xchg
push
imul
or
or
xchg
in
addr16
js
loope
movsb
pop
jno
je
xchg
and
ret
pop
cmp
pop
movsl
and
nop
jbe
xchg
fwait
incb
test
stc
dec
sub
sti
mov
xchg
testl
inc
test
jb
xchg
lcall
loope
loop
sti
jb
jo
inc
mov
insl
push
cmp
sbb
jbe
add
sub
jmp
xchg
addl
jo
push
sub
js
mov
sub
mov
jo
orb
insb
adc
push
mov
inc
xchg
mov
mov
cwtl
mov
xor
mov
enter
add
in
jg
push
faddp
divb
push
enter
lcall
sbb
sarl
mov
mov
dec
push
xchg
addr16
lret
dec
aad
add
pop
faddl
sub
ljmp
sbb
mov
jmp
mull
in
int3
cs
sahf
xor
mov
pop
add
ficomps
xor
add
sbb
or
sub
mov
out
jmp
push
std
shl
push
sbb
fstps
mov
repz
mov
mov
dec
xor
jns
std
sbb
aad
dec
cli
in
dec
xchg
cs
xchg
and
scas
jmp
nop
in
ljmp
push
sbb
hlt
mov
rolb
filds
test
lcall
lret
pop
or
pushf
or
in
mov
mov
mov
inc
jl
clc
mov
insb
or
sub
ret
outsb
loopne
dec
jo
dec
pop
add
pop
xchg
sbbb
test
and
or
pop
hlt
lret
subb
jbe
fsubrs
aaa
mov
dec
xchg
inc
pop
std
fnstenv
dec
add
imul
pop
push
leave
and
lods
scas
xor
xor
sub
pop
adc
nop
dec
hlt
mov
lds
out
bound
add
shr
and
test
pop
divl
jl
pop
pusha
pop
sbb
or
xchg
shrb
mov
mov
fwait
xlat
push
aas
shlb
sbb
or
sbb
mov
xor
fsub
jg
adc
dec
into
xchg
lods
xlat
xchg
fs
xchg
push
test
pop
out
dec
popa
mov
imul
dec
xor
inc
mov
insl
shrl
fucomp
push
adc
jo
xchg
movsl
inc
es
js
aaa
push
or
dec
adc
jp
or
mov
insl
test
call
rcl
push
and
movsb
xchg
int3
outsb
filds
jbe
bound
push
iret
jg
jge
movsb
xchg
fiaddl
push
repnz
xchg
clc
mov
mov
insb
fimull
mov
movsl
push
sbb
fbstp
pop
mov
pop
data16
mov
lahf
mov
mov
cmpsb
jg
sbb
cmp
mov
sub
inc
scas
mov
inc
lcall
xchg
xchg
push
push
ss
aad
jl
das
jl
cwtl
xchg
jl
and
mov
fs
stos
out
xchg
jg
push
sub
mov
adc
push
les
in
xor
aam
mov
add
mov
or
ljmp
scas
stos
mov
mov
adc
in
mov
sub
sub
xchg
push
mov
cmp
mov
mulb
pop
add
andb
ja
mov
mov
xchg
push
jbe
add
insl
mov
dec
mov
sbbb
mov
scas
rcrb
pop
add
add
enter
outsl
cmp
pop
jge
mov
gs
lahf
sub
adc
out
roll
nop
ljmp
jp
jno
xchg
inc
pop
js
pop
fwait
sub
cmc
aaa
jae
testb
pop
dec
mov
jecxz
add
movsl
nop
cmpsl
cmp
xor
mov
pop
iret
call
cwtl
push
insb
dec
outsl
cltd
out
push
or
xor
jge
stc
xchg
scas
imul
cmpsb
nop
cli
xor
inc
sub
orl
sub
adc
jecxz
cli
imul
xchg
dec
jp
out
test
test
mov
shlb
lds
in
push
scas
cld
rorl
pop
inc
push
int3
or
and
sbb
and
add
mov
sahf
push
pop
loop
jno
inc
fmulp
lea
pop
inc
popa
push
inc
xor
xchg
mov
lods
adc
sub
xor
jecxz,pn
out
es
shrb
movsl
adc
das
pop
push
js
popf
iret
out
push
push
or
pushl
push
xor
mov
xor
lret
add
addr16
fdivl
das
dec
pop
mov
pop
insb
cmp
lret
testb
jo
loope
cmc
or
xchg
mov
in
and
lret
mov
sub
push
or
push
mov
movsb
mov
in
shll
mov
mov
movsl
stos
add
mov
cmp
xchg
mov
jns
xchg
push
sub
adc
mov
mov
call
push
inc
imul
dec
push
and
cmovle
out
mov
push
adc
es
pusha
xchg
cmp
pusha
mov
pop
mov
push
xchg
mov
ffree
xor
cmp
xchg
add
enter
xorl
mov
inc
mov
or
inc
fdivrl
out
je
xchg
adc
loopne
xchg
ret
outsl
mov
push
outsb
push
mov
mov
popf
push
insb
loop
sub
cmp
cli
test
inc
fldt
cmp
mov
push
and
sbb
insb
mov
inc
pop
dec
dec
adc
sub
sbb
pop
mov
arpl
out
inc
stc
jecxz
adc
outsb
stc
xor
xchg
pop
xor
pop
sbb
je
jge
inc
push
fisttpll
add
es
xchg
mov
lock
xchg
sti
mov
xlat
add
push
sbb
ret
inc
mov
mov
pop
mov
enter
jle
adcb
dec
add
mov
mov
cmpl
mov
mov
jge
pop
cmp
dec
jle
fdivrs
fistps
sub
jne
mov
negl
mov
in
mov
pop
insl
sarb
loop
out
out
in
fstl
sub
mov
jl
xor
jle
stc
rorb
adc
push
sbb
dec
jo
mov
push
shlb
inc
push
gs
loop
inc
in
insl
ror
cs
out
sar
mov
stos
iret
push
push
sbb
je
push
sub
outsb
or
pop
sahf
inc
fildl
iret
out
jecxz
push
data16
xchg
pop
lods
aam
inc
add
and
jl
and
push
dec
movsb
mov
xor
stc
adc
xor
out
ljmp
ss
sti
xor
dec
and
cs
movsb
pop
sub
mov
scas
mov
sub
arpl
call
sub
loope
mov
aam
daa
mov
jno
add
adc
outsl
scas
int
push
lock
sub
icebp
jg
sub
inc
push
sub
pusha
imul
fwait
into
mov
sbb
inc
jmp
hlt
pop
jnp
dec
lcall
nop
int
pushf
xor
pop
movsb
mov
add
mov
arpl
int3
sub
push
adc
push
lods
push
shlb
xor
imulb
lret
stos
lcall
sbb
mov
jl
sahf
cmpsb
cmp
xlat
jecxz
add
mov
aas
loopne
mov
sub
imul
sub
cmpsl
dec
shlb
ss
push
ret
int
ret
adc
loopne
iret
xlat
sub
pop
ret
sub
pop
icebp
and
add
mov
addr16
shll
cmp
bound
movsl
out
mov
ret
jp
cmp
adc
mov
and
adc
popf
cld
jno
add
xchg
test
hlt
mov
sbb
xchg
lret
and
rorl
ss
cmpsl
into
aam
and
cwtl
inc
mov
popf
mov
jno
ja
dec
rcrl
sbb
fldl
stos
in
push
out
push
push
cmpsb
pop
inc
xor
clc
lods
fists
adc
cmp
ljmp
sti
mov
dec
mov
ja
das
stc
test
rorl
xor
jns
dec
lock
jl
filds
xchg
or
js
xchg
add
xor
sub
lret
bound
push
lcall
sbb
jge
shrb
mov
xchg
jno
dec
in
icebp
jne
arpl
pusha
jp
popa
aas
pusha
pop
jge
lcall
push
cmp
add
mov
scas
cmp
pop
cmp
mov
decl
aas
push
dec
lret
fldcw
and
mov
shlb
cwtl
lret
call
pop
lcall
lds
inc
dec
or
sbb
rclb
les
adc
ja
sub
lcall
xchg
xchg
into
pop
xchg
mov
shrb
add
in
or
xchg
push
sbb
lahf
mov
adc
cmp
and
jge
sbb
sbbl
sbb
sub
test
rcll
fldl
pop
lret
push
inc
mov
sar
aas
pop
inc
cs
dec
filds
popf
xchg
mov
xor
jmp
int
test
iret
ret
aad
stos
add
out
mov
sbb
aam
cli
push
push
add
adc
ds
jmp
lock
gs
movsb
notl
push
jecxz
repz
lds
out
mov
push
outsb
pop
xchg
mov
or
dec
cwtl
jne,pt
inc
xchg
sub
movsl
pop
push
in
dec
cs
cmp
mov
add
test
inc
stos
push
inc
mov
scas
inc
mov
mov
or
xorb
sub
cs
aaa
les
fidivl
daa
mov
jne
mov
mov
repnz
xor
fldt
push
out
xchg
adc
push
gs
shrl
mov
and
cmpsb
lret
addl
insb
add
enter
add
sub
ret
fcomps
sub
aas
add
or
jmp
sti
sbb
cmp
adc
clc
into
ret
mov
xor
pop
ss
cmp
xchg
pop
push
flds
lods
data16
and
aad
call
inc
and
loop
stos
loop
mov
xchg
or
pop
lret
jp
xchg
test
out
lods
ja
mov
push
fucomi
inc
mov
dec
testl
inc
inc
data16
stc
ds
mov
lods
call
stc
jbe
jge
inc
xorb
jb
sub
xlat
lds
adc
mov
inc
mov
pop
adc
mov
sbb
push
mov
jb
imul
inc
popf
out
int
dec
scas
scas
mov
jp
jmp
pop
sarb
ret
dec
jp
inc
rclb
pop
sti
movsb
sahf
dec
cltd
aas
push
les
cmp
or
in
adc
xor
mov
xor
xor
push
notl
inc
sbb
mov
aaa
popa
mov
fadds
xor
pop
inc
push
mov
or
fiadds
xchg
xchg
pusha
pop
or
sbb
add
lods
aam
mov
pop
jae
stos
fcompl
gs
dec
adc
enter
jne
jo
cmpsb
out
xchg
lea
push
jp
jl
adc
daa
and
push
pushf
sub
movsb
lds
xor
and
shl
pop
aad
out
push
daa
stc
mov
test
jmp
loopne
out
mov
jecxz
cwtl
out
lods
inc
mov
outsl
ret
xchg
fbld
repz
les
fildll
cmpps
add
lock
add
in
mov
xchg
sti
mov
ds
or
sbb
mov
ret
jae
movl
aaa
pop
fldt
or
movsl
jmp
ror
jg
jge
ret
cmp
mov
out
in
addb
adc
in
lcall
mov
andl
cmpsb
and
loop
mov
push
test
outsb
fcmovne
push
mov
mov
call
push
lret
push
dec
dec
pop
xor
or
pop
sahf
mov
pop
arpl
rolb
outsb
call
push
mov
pop
mov
out
mov
cmpl
outsb
fwait
mov
into
adc
mov
in
mov
int3
enter
mov
lea
sub
test
ljmp
add
jmp
mov
out
ljmp
daa
adc
add
outsl
lahf
shlb
jne
imul
rcrl
xchg
mov
out
clc
jmp
and
cmpsb
sar
imul
pop
cmpsl
sub
mov
and
lods
js
shlb
dec
in
outsb
fimuls
mov
inc
fmul
xor
inc
pop
push
addb
rclb
mov
decl
pop
insb
aam
cmp
or
xor
add
adc
fucomi
or
fists
adc
and
pop
cmc
lods
mov
inc
cmpsl
cmpsb
xor
out
mov
cwtl
add
ja
out
lea
int
inc
adc
mov
inc
in
xor
inc
mov
pop
sub
repz
std
mov
jo
movsb
push
dec
repnz
xchg
pop
cmp
mov
jb
das
dec
test
mov
mov
xchg
outsl
or
cmp
xor
pop
rorb
xchg
call
jne
rcll
call
mov
sub
nop
jnp
lret
xchg
mov
pop
dec
sti
inc
in
mov
lret
mov
cmpb
xchg
push
xchg
cmc
xor
inc
sub
pop
pop
andl
dec
mov
or
movsb
fcoml
sbb
imul
aas
or
xor
mov
shll
fistps
fsubrl
pop
add
inc
test
cltd
loop
jb
dec
aam
adc
idivb
dec
cmp
mov
stc
jae
int3
fsub
ss
jp
jl
jmp
jae
xchg
cmp
enter
jne
inc
arpl
or
sub
push
jge
adc
sbb
cld
pop
hlt
sub
add
loopne
movsl
and
ret
sub
clc
ja
sarl
inc
fimull
push
sahf
mov
imul
sbb
dec
xchg
and
movsl
sub
pushf
loope
stos
push
je
adc
sbb
jno
in
dec
les
cmp
jo
and
xor
repz
fcoml
aas
scas
insb
pop
inc
lods
rcr
rolb
dec
cli
mov
fsubr
and
orl
fadd
add
sub
pop
jge
cwtl
stos
and
daa
xchg
lods
sbb
movsb
xor
aas
push
xor
sbb
jle
mov
adc
pop
inc
test
lret
pop
cltd
push
in
bound
push
pop
lods
mov
jnp,pt
clc
jecxz
test
jae
nop
std
xor
pop
add
sbb
xchg
clc
shl
or
mov
je
sbb
sbb
xchg
inc
dec
sahf
repnz
or
fwait
out
pop
pop
and
dec
out
fadds
cmpsb
xchg
xor
fsub
dec
daa
inc
int
pusha
cwtl
fdiv
and
cmp
mov
xchg
ficoml
inc
cmp
mov
jo
aaa
test
daa
inc
cwtl
cmp
pushf
jns
int3
test
cli
testb
lret
sub
push
mov
daa
in
iret
shlb
movsl
leave
jns
inc
ret
dec
pop
jns
dec
mov
mov
xchg
xlat
sub
or
in
popa
clc
sbb
outsl
ror
cmpsl
or
movsb
icebp
lret
in
mov
xor
scas
jmp
push
out
xor
sti
add
out
scas
or
dec
sub
js
imul
idivl
sbb
test
inc
rolb
aam
hlt
xlat
idivl
into
mov
cmpsb
std
xor
inc
arpl
rclb
out
xor
jge
xchg
push
add
pop
movsb
push
lret
in
mov
push
sbb
jne
inc
sub
sbb
movsl
mov
test
test
or
cli
repz
hlt
mov
imul
adc
mov
cmp
add
in
sbb
test
and
mov
pop
jg
add
sub
and
cmpsl
push
loope
jo
and
cltd
movd
cmc
ja
outsl
cmp
rcrb
mov
addr16
ss
in
and
jge
popa
xor
sbb
xchg
dec
sbb
xor
js
mov
sbb
cmc
mov
add
nop
sbb
mov
mov
xor
mov
test
outsb
push
popf
test
clc
cmpb
cli
or
mov
movsb
mov
sub
inc
lahf
fisttpl
ret
in
inc
xor
out
icebp
jmp
fsqrt
jg
into
insl
or
add
push
cmp
pop
mov
test
arpl
cmp
fisttpll
call
pushf
stos
lods
cmpsb
jae
jmp
enter
fbld
pop
and
sti
adc
ds
stc
dec
cld
adc
out
in
cmp
outsb
aaa
pop
vpaddw
lret
mov
jae
xchg
enter
loopne
int3
add
loope
or
ret
mov
stc
and
and
pushf
outsl
sub
sbb
mov
jae
enter
rorl
ja
cmpsb
rcrb
mov
pushl
xchg
stos
or
lcall
sahf
cmp
or
daa
xchg
icebp
mov
xor
cmpsb
and
mov
movsl
or
test
pushf
stos
mov
and
aam
xlat
push
je
sub
jmp
movsb
inc
xchg
pushf
add
shrb
xor
xor
aad
int3
loop
orb
fcmovnb
dec
ja
mov
ror
call
mov
imul
sub
mov
ljmp
aad
dec
mov
mov
adc
clc
add
mov
lret
call
scas
test
push
scas
neg
or
cmp
xchg
push
leave
xchg
inc
in
cmc
push
adc
dec
aaa
mov
and
ror
push
sub
std
xchg
pop
push
jns
gs
nop
jns
fnsave
fsubrl
outsl
pop
or
repnz
sub
stos
pushf
add
test
inc
js
xor
ds
rorl
pop
adc
push
mov
mov
lock
call
push
nop
ret
push
cmp
stos
cltd
je
daa
jno
lahf
loopne
push
mov
mov
outsl
sub
cli
fxch
clc
mov
jno
adc
sbb
push
jle
mov
jb
xchg
pop
fldenv
in
arpl
lret
push
jecxz
sbb
adc
shll
xchg
mov
pusha
cld
es
arpl
pop
fwait
dec
and
jns
lahf
push
addr16
mov
and
fsubrp
pusha
cltd
movsl
add
ret
push
fists
jp
mov
add
mov
push
bound
pop
mov
inc
fwait
out
mov
into
fsubl
es
scas
test
das
jne
pushf
inc
dec
jae
test
addr16
dec
arpl
mov
imull
push
mov
stc
andl
subl
arpl
loop
xchg
popa
and
xchg
xchg
xor
clc
jns
adc
jb
lea
shr
push
fstpl
fmuls
pusha
mov
sub
hlt
jle
push
and
cld
add
ja
and
mov
jmp
cltd
idivb
pop
inc
sbb
inc
pop
add
sbb
mov
dec
cmp
add
xchg
movsl
stos
lds
mov
std
pop
push
das
pushf
adc
or
add
lock
ss
push
rorl
add
mov
mov
mulb
mov
clc
jns
andb
add
out
mov
or
jge
imul
dec
jo
jb
push
or
xchg
jo
icebp
xchg
lds
and
in
icebp
xchg
lret
sub
pop
mov
daa
pushf
mov
orl
mov
and
loope
into
xlat
xchg
bound
mov
cmp
divb
and
jne
push
lea
inc
xor
sbb
mov
jle
lods
das
loope
or
xchg
jp
sbb
jnp
imull
and
jmp
lret
aas
in
sti
xor
inc
icebp
nop
loope
popa
sbb
cmp
out
mov
lahf
mov
mov
and
mov
out
pop
inc
and
js
xorb
xlat
inc
add
pop
dec
out
xor
das
es
lahf
push
jae
aad
mov
mov
push
ljmp
dec
neg
push
mov
hlt
inc
mov
imul
mov
mov
insl
and
mov
inc
je
mov
enter
lods
jecxz
jne
aas
mov
mov
int3
shrb
add
aam
aaa
mov
mov
sub
out
out
lods
or
xor
arpl
xorl
mov
mov
mov
adc
scas
jp
clc
ret
push
stos
jb
negb
push
mov
dec
enter
sub
popf
loopne
movsb
rclb
outsb
xor
sbb
xor
xchg
xchg
dec
mov
adc
cwtl
dec
insl
shlb
mov
inc
xor
mov
orl
cli
mov
pop
pop
loope
mov
cli
cmp
fdivs
daa
pop
jno
sbb
sbb
popf
fbld
pop
out
pop
jge
mov
iret
hlt
nop
hlt
sbb
xchg
jae
shrb
and
sarl
rclb
mov
mov
pop
cmp
pop
hlt
mov
jnp
cmp
pop
int
inc
imul
pop
cmp
and
pop
fidivs
fldcw
xlat
loopne
jno
jl
push
rorl
lods
outsb
jg
mov
mov
pop
add
and
jae
int
add
dec
add
test
lret
ja
inc
jae
inc
std
inc
stc
repnz
rorl
dec
or
mov
loopne
add
hlt
ret
cmpsl
das
jbe
xor
out
call
mov
jne
test
shl
insl
mov
sub
scas
sbb
inc
out
xor
inc
bound
out
xor
cmp
das
inc
cwtl
loop
mov
rolb
push
cs
jns
xchg
xlat
xor
call
ja
lods
mov
daa
cmc
jge
ljmp
lahf
rorb
sub
lahf
mov
inc
adc
jmp
mov
ret
dec
mov
pop
scas
testl
addb
imul
ficompl
test
jle
test
push
pop
xor
loope
adc
test
flds
adc
lahf
mov
aam
inc
or
addr16
or
sbb
rorl
pop
fldt
add
bound
insl
dec
fdivrl
les
adcl
pushf
sub
xchg
lcall
cmp
loop
xor
xlat
sbb
push
cmp
arpl
pop
roll
pop
push
mov
fildll
cmp
pusha
shll
mov
adc
jb
js
xchg
push
add
jg
in
mov
int
or
aad
repnz
sub
mov
xchg
dec
push
sub
popf
sarb
cwtl
sahf
add
mov
or
fiaddl
cmp
js
js
addl
int3
cltd
ljmp
int3
clc
and
int
inc
stc
cmc
xor
inc
and
lock
js
movsb
aad
add
lds
mov
mov
clc
or
in
jle
jge
flds
test
mov
sbb
aaa
das
push
sub
cld
and
nop
xchg
and
xlat
gs
push
xchg
nop
stc
es
loop
ficomps
jns
or
cmp
dec
adc
or
pusha
sub
push
out
scas
aam
mov
inc
imul
push
push
or
mov
add
sbb
cli
stos
sti
jl
pop
out
mov
aam
push
pop
repz
js
and
adc
testl
cmp
mov
jp
xchg
bound
popf
xchg
fmuls
jns
in
jg
push
insb
or
cmpsl
pop
aad
fidivrl
cmp
dec
jecxz
xchg
pop
jmp
dec
mov
int
push
mov
mov
sub
in
push
clc
inc
jno
sub
scas
cmpsb
sub
xchg
add
xchg
lret
pop
nop
dec
jae
out
lods
xchg
cltd
jecxz
call
shrb
test
dec
or
or
ret
mov
mov
pop
mov
repz
cmc
loope
xor
jno
cs
enter
popl
aaa
pop
sub
mov
mov
mov
iret
adc
cwtl
rep
adc
and
sub
sbb
not
stos
mov
outsb
mov
adc
adc
sbb
jo
push
jle
push
sbb
sub
lods
sbb
mov
mov
ja
mov
cmpb
pop
shll
jle
inc
sub
into
aas
push
mov
push
scas
xchg
pop
loopne
jecxz
in
shl
lret
fs
mov
pop
aas
pop
sti
push
push
adc
sub
jle
inc
sbb
jne
add
xchg
sbb
sub
fprem
out
es
push
sbb
xor
arpl
shrb
sbbb
dec
xchg
or
cld
add
and
ljmp
sti
popf
fistpl
jmp
inc
cmp
mov
and
lret
sub
das
xlat
dec
out
sahf
jae
jns
push
nop
sub
push
push
mov
stos
pop
movb
out
sbb
sub
adc
xchg
xchg
stos
jae
repz
shlb
xor
jne
out
cmp
mov
push
add
jl
mov
mull
icebp
mov
or
lods
adc
sub
xchg
sbb
adc
push
stc
sub
push
adc
or
xor
sbb
and
pop
pop
leave
cmc
into
test
pop
xor
sbb
pusha
je
in
aam
clc
bndstx
jbe
xor
and
mov
pop
loop
mov
imul
mov
insb
mov
jmp
or
int
mov
add
sub
into
pop
test
add
mov
cmp
or
stos
adc
call
dec
ss
inc
hlt
push
sbb
pusha
adc
cmp
dec
add
leave
addb
loop
or
enter
inc
movsl
push
insb
dec
push
or
lods
pop
mov
jbe
out
xchg
push
sarl
out
jmp
or
in
mov
and
adc
push
or
scas
pop
sbb
pop
ja
xor
mov
cmp
add
in
add
add
jb
cmpsb
add
push
das
sub
push
dec
dec
pop
test
rclb
aad
pop
mov
pop
sub
call
iret
iret
arpl
ret
bound
lock
mov
int3
adc
inc
pop
xorb
lahf
repnz
movsb
rorb
enter
or
jae
cmpsl
mov
cltd
and
pop
or
xchg
jmp
aas
xchg
mov
dec
jl
dec
aaa
jbe
xor
movsb
or
cmc
xlat
loopne
cmp
shrb
push
shll
fmull
pop
lock
xlat
loopne
sub
jp
rorb
icebp
xor
repz
dec
andl
adc
lods
loope
pop
and
mov
adc
int
pop
lret
adc
shlb
in
and
push
mov
rcll
xchg
pushf
mov
or
les
pop
xchg
ds
cmp
push
loop
pop
mov
fcmovne
dec
aas
jg
xchg
divb
aaa
xor
dec
jno
aaa
aaa
lds
scas
enter
cmp
jae
mov
mov
mov
pop
jnp
out
mov
sub
cmpsl
lret
shrl
push
cltd
idivl
pushf
orl
sub
mov
rolb
mov
sbb
ror
fsubr
fisubrl
and
pushf
mov
mulb
jge
mov
xchg
sbb
dec
adc
scas
movl
mov
jae
pusha
inc
dec
push
ljmp
inc
sub
sub
lds
add
jne
mov
add
or
fwait
outsl
in
rol
adc
sub
push
les
add
scas
daa
aas
das
push
dec
xchg
notb
into
out
sbb
cltd
mov
inc
pop
insl
add
push
dec
pop
insb
inc
shl
fistps
pop
adc
push
fsub
push
fldcw
xchg
mov
jns
repz
push
scas
jns
stos
and
add
loop
lds
les
or
push
pushw
lock
stos
xchg
xchg
scas
jle
sahf
sbb
int3
jp
dec
rclb
stos
fldl
add
push
xchg
das
add
xor
sti
fwait
test
nop
into
mov
ret
int
push
jmp
movsb
imul
insb
sarl
pop
jne
mov
xchg
xor
cwtl
test
mov
push
jnp
add
js
adc
dec
std
pushf
mov
sbb
fcoms
int3
sub
divl
push
loopne
test
movups
pop
test
shl
shrb
mov
mov
fcomi
push
cmp
add
insl
mov
mov
push
arpl
nop
adc
add
clc
mov
stos
add
push
out
and
xlat
scas
xor
xor
ja
push
xchg
bound
iret
fcomps
inc
int
add
add
pop
jae
iret
xor
sbb
push
leave
lcall
add
sbb
js
xchg
les
xor
int3
mov
loopne
dec
pushf
mov
into
mov
cmp
push
cmp
insb
dec
pop
iret
and
movsb
sub
test
mov
lret
int3
js
sub
push
mov
fists
inc
inc
inc
daa
mov
ds
shlb
call
push
jle
lods
call
rclb
xchg
inc
fdivrp
movsl
cs
fs
xor
mov
mov
and
std
js
mov
push
jecxz
pushf
repz
negl
mov
inc
das
jl
add
jecxz
aas
adc
repz
insl
jg
icebp
adc
push
cmp
rcrl
dec
xchg
or
lock
mov
push
out
in
mov
or
dec
pop
notb
dec
mov
xchg
dec
cmc
xor
daa
jl
pop
stos
pop
repnz
adc
enter
and
dec
arpl
ror
flds
cmpsl
das
mov
out
loop
js
adc
dec
sub
xlat
jnp
dec
push
clc
scas
cmp
xor
push
lahf
leave
push
outsl
sub
iret
xchg
cmp
mov
cmp
int3
dec
popf
cmp
imul
push
cmp
add
shr
jecxz
xchg
or
sbb
push
fs
clc
fsts
mov
push
jae
mov
test
es
mov
cmpb
scas
xchg
into
data16
daa
enter
mov
or
jecxz
loop
jns
and
arpl
es
jecxz
sahf
in
daa
jmp
or
adc
gs
adc
in
dec
cmpl
xchg
int3
mov
adcb
or
rcrl
ret
inc
cmp
inc
push
mov
mov
and
mov
cli
scas
push
rclb
adc
stc
sbb
xrelease
adc
outsl
js
in
leave
pop
iret
xor
outsl
das
or
mov
imul
dec
inc
xorb
fisubs
sub
push
fimuls
inc
cmpsl
hlt
ret
fisttpl
mov
dec
push
stc
pop
loop
mov
fistl
push
imul
inc
sub
mov
sarl
push
aad
bound
divl
mov
push
mov
icebp
mov
mov
mov
mov
dec
stos
xchg
lea
inc
inc
popf
mov
mov
sbb
jns
insb
out
jle
cmp
jmp
leave
dec
aaa
insl
test
rcrl
mov
imul
pop
sbb
pop
out
adc
or
daa
jns
imul
xor
outsb
or
push
mov
mov
add
rcll
xor
jecxz
sub
mov
clc
add
test
jno
in
sarl
pop
push
pop
adc
pop
aaa
testb
adc
sub
pop
mov
sbb
gs
popf
arpl
scas
imul
cmpsl
add
push
dec
mov
stc
cltd
push
mov
imul
inc
dec
in
lods
fimull
out
sub
xchg
les
movsl
popa
sub
mov
mov
sub
dec
sbb
xor
jae
lock
jnp
pop
add
fsubrl
push
rclb
xchg
or
pop
pop
rolb
bound
dec
sbb
sub
and
add
jbe
pop
add
cmp
inc
test
pop
ret
jmp
and
out
and
cmpsb
fsubrs
sbb
and
lods
sub
jle
lret
add
xchg
push
sub
jl
push
je
cmp
sbb
and
daa
push
add
into
pop
adc
loope
pop
fsubrs
add
inc
mov
leave
rorl
in
stc
xor
mov
sbb
mov
dec
push
jbe
push
jmp
negb
add
stc
dec
lcall
out
dec
add
jge
dec
ds
adc
ja
sub
shlb
xchg
pushf
inc
out
sar
or
lcall
pop
sbb
pop
call
jnp
fcmovu
push
cmpsl
mov
or
adc
xchg
and
or
cmp
inc
cmp
enter
imul
pop
add
adc
mov
sbb
inc
sahf
push
push
cmp
xchg
mov
repnz
sub
notb
cmpsb
leave
ret
mov
sub
popl
je
or
cld
dec
pop
lods
cmp
and
popf
imul
pop
push
adc
fistpll
aam
mov
psubw
fiaddl
cmovno
mov
xor
inc
jbe
mov
cmp
xor
mov
in
xor
xlat
ret
push
lahf
mov
mov
and
loopne
mov
stc
call
dec
jle
out
jnp
or
fldl
jnp
pop
fs
fdivl
sub
adc
imul
rorl
scas
push
push
jp
mov
adc
mov
mov
nop
inc
dec
pop
jecxz
fisubs
sub
scas
push
mov
cltd
adc
es
jno
movb
icebp
add
out
repnz
mov
dec
inc
and
mov
mov
cmpb
and
adc
pop
jge
out
lods
xchg
jle
addr16
sub
jge
dec
push
test
insl
mov
xchg
add
xchg
ror
pusha
ja
or
sbb
jns
insb
and
jae
or
js
cmpsb
or
pop
test
jle
jns
or
pop
imul
sti
and
scas
mov
nop
gs
sarb
pushf
xchg
mov
insb
inc
xor
int
xchg
fdivs
push
repnz
inc
repz
add
push
test
out
rorl
loopne
aad
lods
add
add
push
push
jmp
mov
mov
in
les
andl
jns
iret
mov
fwait
jno
movsl
and
lods
lret
mov
jne
mov
enter
adc
xchg
sbb
push
sub
push
pop
addr16
cwtl
xchg
xchg
leave
leave
dec
pusha
xchg
xlat
mov
pop
add
rcrl
jg
adc
and
xor
aas
jb
call
and
push
inc
xchg
sti
out
adc
rclb
jb
cmp
loope
rep
pop
mov
ficompl
sbb
stc
xchg
out
pop
adc
push
adc
ss
popa
jae
push
stos
xlat
sub
test
adc
inc
sbb
add
daa
xor
cmp
lahf
rcl
popa
ljmp
push
jbe
or
je
cltd
and
js
mov
movsl
xchg
jae
pop
ja
es
test
or
cli
mov
inc
aaa
dec
jge
dec
sub
fnstsw
mov
loope
insl
stos
cmp
pusha
and
cli
mov
insl
xchg
cltd
dec
iret
lds
rcrb
xchg
into
test
fistps
sbb
mov
jp
testl
push
mov
loope
jb
stos
jg
outsb
jmp
xchg
cmp
mov
in
add
jecxz
in
and
dec
fldenv
add
pop
mov
movhps
orl
sub
insl
mov
shlb
inc
inc
sahf
cld
cs
sub
arpl
pop
add
jge
ds
call
ret
pop
loope
lock
push
daa
mov
fistpl
dec
pushl
stc
orb
dec
cmp
cmc
out
xchg
mov
xchg
cmc
mov
imul
fs
xchg
cmp
xor
rep
mov
fsubp
inc
inc
inc
adc
cmpl
mov
mov
daa
call
daa
sahf
xchg
rorb
cmp
xchg
clc
and
inc
inc
cmc
xchg
mov
lea
movsb
xchg
xchg
xchg
sub
inc
popa
and
pop
ror
dec
xor
add
jg
add
pop
and
mov
sbb
sub
xor
sti
xchg
movsb
cmp
lods
sub
sbb
ja
xchg
jne
inc
add
ja
jmp
lods
dec
jmp
mov
cmp
sbb
mov
pop
push
sahf
shr
jecxz
sub
dec
jnp
cmp
fldcw
icebp
xor
lret
loop
das
or
or
cmp
lock
xor
push
jl
nop
ss
gs
push
jbe
incb
push
mov
add
mov
enter
lret
xor
mov
push
mov
imulb
out
cmp
inc
inc
cmp
adc
outsl
pop
rorb
ss
pusha
pop
dec
insl
lahf
sub
xchg
dec
iret
or
mov
lods
fdivs
dec
or
sbb
jl
push
adc
xchg
sar
sub
pop
dec
faddl
nop
add
js
arpl
pop
pop
jb
rorb
push
sub
repnz
dec
adc
fistpll
pusha
pop
inc
cwtl
fcomp
and
cmp
test
pop
add
das
and
sbb
mov
cmp
mov
outsl
rorl
and
cmpsb
cmp
xchg
sub
dec
adc
shr
mov
xor
stos
scas
cmp
les
dec
ret
loope
ss
jns
out
sub
cli
in
add
ret
add
jbe
add
jns
add
loopne
mov
sub
in
mov
mov
sbb
out
mov
add
pop
dec
insl
dec
insl
cltd
sbb
inc
xchg
fcomp
dec
dec
out
ror
jp
gs
cmpl
adc
in
add
repz
mov
test
fsubrs
repz
cmp
jmp
in
jmp
mov
fisttpl
push
push
sahf
jns
aad
sub
lds
mov
inc
cmpsb
mov
or
xchg
add
aaa
jmp
adc
scas
push
mov
cwtl
sub
jo
lods
push
pop
xor
into
rclb
flds
cmp
jmp
cmp
jmp
sbb
lret
movsb
pop
orb
and
sbb
ljmp
mov
in
test
mov
hlt
loop
and
in
and
or
or
hlt
mov
int3
fidivrs
leave
xor
rcll
or
jo
cmp
sbb
and
push
push
out
sub
addr16
sbb
cmp
mov
mov
sarl
adc
jmp
test
arpl
aas
push
push
enter
mov
dec
aad
insl
stos
mov
out
int
ds
mov
bound
in
pop
and
push
scas
jle
jmp
jns
mov
adcb
int3
sbb
or
cld
add
imul
mov
call
or
ljmp
cmpsl
or
imul
sub
insl
mov
fcmovu
aad
or
ds
xchg
into
cmp
or
int3
jg
lcall
mov
movsb
fwait
and
jge
sbb
mov
lcall
rolb
mov
sbb
idivb
pop
scas
xchg
outsb
add
rclb
or
decl
xchg
add
repnz
dec
lods
addr16
sub
add
mov
xchg
iret
cmp
xor
dec
xor
rol
push
xchg
cmp
out
jae
and
jg
xor
cmp
test
jns
xor
mov
das
lahf
push
xor
or
cli
imul
inc
lds
push
pop
sub
push
out
cmp
mov
nop
arpl
fcomp
aad
ljmp
cmpsl
movb
jle
and
sub
cmp
into
aas
mov
aad
ja
push
outsl
jns
sbbb
aaa
adc
fidivl
adc
lds
or
mov
sti
mov
jo
sub
fmul
in
dec
jg
movsl
mov
push
cmc
jno
stos
icebp
imul
mov
add
mov
push
cmpsl
cmp
jnp
lock
les
das
jb
xchg
dec
mov
les
mov
dec
cmp
bswap
pop
in
mov
inc
cmpsl
fcompl
cli
mov
ror
push
and
addb
xchg
pop
mov
aas
pushf
jbe
mov
or
pushf
xchg
cmp
pop
or
jle
adc
sbb
out
xchg
out
and
cs
movsb
es
or
divl
xor
push
mov
fimull
and
jno
mov
test
push
mov
mov
gs
jo
jbe
mov
cmc
or
jl
mov
cltd
or
ret
cmp
mov
test
pop
rclb
pop
jae
cwtl
add
xchg
jbe
aad
mov
inc
fmuls
dec
mov
or
rolb
sbb
sbb
sbb
mov
mov
stos
out
push
jecxz
pop
mov
adc
fwait
jmp
inc
in
jo
js
jg
fimuls
pop
xorb
cmpsb
and
test
js
fistl
mov
xor
aad
mov
mov
sarb
jp
mov
orl
aas
inc
rorl
lea
mov
in
ret
sbb
adc
and
imul
and
shll
sub
push
shlb
ljmp
fwait
xchg
inc
jp
fwait
push
fcomps
jne
repz
lds
pop
push
je
out
mov
loop
mov
jmp
push
das
pop
icebp
dec
dec
dec
sub
cmp
mov
loope
add
jecxz
push
or
fcmovu
cmp
sub
inc
cmp
repz
lea
cmp
pop
jg
bound
mov
test
popf
movsl
cmpsb
mov
jb
pop
arpl
cmp
xor
sub
orl
and
cwtl
mov
adcb
lea
or
inc
push
pop
repz
iret
xor
fmull
sbb
sbb
push
jbe
xor
loopne
inc
jnp
cmp
cmpsb
sub
xor
jecxz
jmp
pushf
pushf
jae
mov
xchg
xchg
xchg
jne
xor
lret
pop
jmp
lds
jb
sbb
cmp
clc
lea
dec
ljmp
mov
dec
cmp
push
es
cmp
in
icebp
movsl
mov
add
mov
mov
and
or
pop
add
jecxz
and
rolb
sbb
push
pusha
cld
ret
loop
sti
insl
cmp
sub
mov
icebp
push
outsb
xchg
test
mov
inc
sub
inc
test
loope
or
sub
and
repz
loope
aam
push
mov
xchg
or
jmp
cmp
lret
aad
dec
popf
stos
out
and
pop
sub
fcoms
mov
std
fsub
pushf
mov
insl
push
or
add
mov
mov
pushl
loop
push
jmp
movsb
daa
push
adc
mov
cmp
or
aad
jg
lea
sub
fcomps
or
and
push
aaa
mov
pushl
lock
mov
andb
dec
adc
push
push
adc
adc
jns
iret
dec
mov
xchg
sbb
push
push
mov
test
mov
test
mov
in
mov
push
ja
mov
loop
mov
pop
lahf
add
inc
hlt
data16
popa
ja
addr16
lods
adc
loope
jecxz
ficoml
jp
stc
fwait
add
jno
mov
and
adc
loop
mov
lcall
fisubrl
lds
out
or
aam
xchg
or
popa
pop
mov
and
adc
lcall
test
sbb
cwtl
imull
sbb
jle
and
test
cmc
loope
xor
sbb
test
mov
add
pop
jbe
scas
inc
and
test
push
push
jo
clc
addl
aad
xchg
xor
sbb
and
push
dec
jle
jl
mov
daa
ret
and
dec
add
sub
cmpb
pop
popa
outsl
mov
arpl
inc
arpl
imul
out
loope
loop
pop
cwtl
xlat
fidivl
leave
jg
xchg
push
aad
mov
sub
outsb
loopne
aaa
pop
cmp
and
aam
aam
push
push
push
imul
sub
push
cmpsl
fadds
mov
jp
insb
sbb
fcmovne
dec
dec
xor
adc
mov
inc
sbb
sti
push
xchg
repz
sti
and
xchg
cwtl
hlt
fsubp
and
mov
push
sub
and
sbb
outsl
jne
pop
push
add
ljmp
popa
pop
shrb
js
xchg
in
cmp
mov
dec
xchg
sub
test
out
sti
lock
dec
push
xchg
out
xchg
mov
stc
mov
dec
cmp
test
inc
xlat
jb
mov
xorb
in
dec
fcmovnb
push
xor
xor
xor
daa
incl
xor
stc
mull
or
hlt
jne
inc
cld
shl
stos
sbb
insb
addr16
inc
adc
mov
insl
insl
mov
and
cltd
insl
cmp
push
bound
fstpt
and
mov
sahf
call
push
hlt
pop
fisubl
jbe
sub
andl
xchg
aas
inc
test
xchg
ret
xor
pop
outsl
push
nop
insb
jno
jmp
in
adc
lret
mov
fisttps
lods
ja
fnstenv
cs
ljmp
or
movsb
sbbb
push
xor
mov
fidivs
faddp
in
sbb
int
inc
mov
lcall
in
cli
xor
sbb
or
stc
xor
mov
fdivl
clc
cmpsb
insl
jle
ret
mov
jo
dec
xor
pusha
inc
push
outsl
aad
mov
loope
mov
lock
adc
mov
dec
mov
comiss
fistpll
cmp
lods
mov
das
xchg
dec
jb
ret
sub
push
inc
loop
pop
and
and
lock
jns
cwtl
pop
gs
push
dec
jl
jo
popa
mov
cltd
into
ljmp
sub
jbe
jns
int3
sahf
pop
ret
mov
jnp
mov
jnp
mov
movb
mov
outsl
xchg
xchg
js
fs
iret
ret
dec
cmp
sti
pop
imul
sub
fcompl
push
or
push
xchg
lret
sbb
ficomps
rorb
sub
cli
out
insl
inc
cmp
ljmp
or
js
xor
mov
lahf
aam
push
dec
pop
fwait
lock
or
cmpsl
fnstcw
ficompl
mov
adc
fcoml
ss
push
sub
mov
and
insl
xchg
adc
aad
sti
scas
bound
jo
adcl
push
test
push
xlat
ds
xchg
cli
adc
pop
je
aas
mov
les
mov
dec
ss
xchg
cld
scas
outsb
cmp
xchg
mov
mov
inc
inc
sub
data16
cmp
adc
leave
sub
mov
jbe
pop
sbbl
lea
xchg
mov
xchg
and
cmc
pusha
js
pop
bound
jecxz
mov
das
lods
insl
hlt
adc
imul
das
sbb
out
dec
nop
sahf
loopne
mov
and
pop
out
popf
jmp
lret
std
mov
fiaddl
add
push
sarl
arpl
lret
lret
pop
adc
decb
cmp
sub
fucomp
nop
lock
loopne
sahf
loopne
mov
out
or
dec
mov
push
and
inc
lock
addl
sbb
cmc
pop
and
or
push
add
push
sarb
pop
cltd
xchg
stc
enter
xchg
rcrb
aad
pop
inc
jl
and
aam
cld
mov
cmp
push
sbb
add
cld
sbb
xor
mov
inc
and
jb
data16
mov
pop
shll
aaa
stos
cmp
add
pop
xchg
imull
lcall
icebp
into
mov
mov
loopne
and
xor
int
dec
lret
cmp
mov
and
push
insb
nop
icebp
inc
xchg
int
cltd
test
insb
ja
fbld
adc
dec
testl
out
ja
inc
mov
add
enter
dec
cmpsl
dec
fistpl
add
jns
jne
pop
movsl
out
loop
fsubs
fstps
or
mov
loop
jl
in
or
out
scas
mov
push
rol
adc
cwtl
fstpt
repnz
xor
cld
flds
pushf
fs
in
stos
xchg
popf
xlat
push
and
fcompp
out
sbb
cli
push
mov
pop
mov
mov
jno
ja
popa
jae
jo
or
imul
rol
inc
in
aas
jno
dec
lods
shl
xor
pushf
daa
xor
imul
xchg
mov
push
int3
jbe
sub
js
jb
sub
mov
add
and
out
enter
cmpsl
push
addr16
clc
scas
mov
mov
push
rcrl
sbb
in
sbb
xchg
cmp
mov
sbb
punpckhwd
ds
adc
xchg
scas
xchg
add
stos
ja
sub
les
sub
cmc
hlt
cmpsl
repz
mov
pop
or
hlt
sahf
test
mov
cs
xor
fisubs
cmpsl
test
mov
pop
iret
cs
insb
pop
scas
jmp
sbb
ret
daa
scas
cltd
sbb
pop
movsb
xor
std
in
aam
and
shrl
jno
inc
jno
cmp
sbb
test
loopne
lds
pop
insb
int
out
pusha
cmp
negb
inc
out
jge
adc
and
hlt
xor
inc
inc
push
mov
ss
xor
bswap
loopne
pop
repnz
sarl
mov
inc
mov
mov
inc
insb
cmp
jl
imul
in
mov
sbb
sarb
jnp
pop
xor
mov
add
insl
mov
and
jo
dec
insb
fidivs
and
mov
lock
add
xor
dec
rorl
cwtl
cmpsb
movsb
leave
xor
xchg
outsl
jl
xchg
add
sbb
xchg
les
xchg
movsl
push
cwtl
push
roll
mul
fnstenv
ja
xor
or
jecxz
push
daa
mov
push
cmpsb
imul
xor
inc
and
stc
dec
jmp
je
notl
cmpl
jo
std
inc
mov
jmp
push
xor
xor
out
or
ljmp
sbb
lret
pop
pop
inc
fcompl
das
mov
and
data16
jbe
push
and
dec
cmpsl
fwait
sub
xor
or
inc
enter
fistpl
nop
xor
and
outsb
cwtl
cmc
ljmp
out
cltd
icebp
addr16
cmpl
xchg
pop
clc
push
xor
inc
jae
sub
mov
jg
in
jmp
adc
dec
xor
or
movsb
push
jge
mov
mov
mov
lods
push
lret
jae
stos
lock
insl
add
xchg
sub
gs
jle
xor
xchg
lahf
xchg
out
pop
adc
fcoml
es
out
cld
inc
add
sbb
js
push
in
adc
out
cmp
dec
das
pop
scas
loopne
or
inc
aas
mov
pop
sub
adc
es
adc
lahf
je
cmc
repnz
int
cld
xchg
lcall
mov
xor
out
mov
jle
lret
or
rcl
inc
xor
fldt
sbb
xchg
addr16
and
mov
jno
ds
ljmp
fwait
and
sub
dec
pop
push
lds
adc
inc
scas
add
mov
loopne
inc
push
push
dec
push
shlb
sahf
iret
in
cli
jno
and
incl
dec
hlt
in
shll
inc
aas
incb
dec
jmp
xor
jno
aad
scas
pop
stc
xchg
jns
pop
pusha
sub
sbb
cmc
adc
jecxz
out
xor
repnz
and
fs
xchg
add
ficomps
aam
out
cwtl
push
jl
jbe
cwtl
sbb
cmp
rcrl
iret
cmp
clc
ss
mov
cmp
ret
or
fdivrl
xor
adc
mov
scas
cmpsl
dec
call
loopne
jg
stos
out
inc
dec
shl
hlt
mov
pop
add
pop
add
lea
or
int
mov
add
push
cli
mov
lahf
ljmp
repnz
imul
or
mov
dec
lods
frstor
pop
cmp
test
push
loopne
mov
dec
repnz
mov
push
adc
es
mov
rclb
jp
pop
hlt
or
cs
pop
lahf
in
dec
out
es
ljmp
xchg
pop
out
outsl
cmpsb
jl
in
call
and
mov
fisubl
mov
je
gs
hlt
fidivrs
jnp
cltd
shll
pop
push
sub
adc
lea
pop
test
lcall
pop
mov
or
add
addr16
lods
cmpsl
jle
idivb
lea
sarb
mov
cs
add
mov
jnp
mov
test
jbe
outsl
pop
mov
mov
cld
cmpsl
add
xchg
lds
insl
cmpsl
enter
stos
imul
mov
aaa
inc
push
jbe
inc
sub
pop
jbe
push
sub
dec
cmp
xchg
fiadds
push
lods
test
out
adc
xchg
sbb
xchg
push
fdivr
xacquire
sbbb
jne
or
ja
leave
xchg
add
ss
jmp
sub
loope
ljmp
adc
add
stc
pop
sti
mov
push
shll
js
cmp
cmp
inc
xor
push
fidivrs
sub
push
mov
or
enter
rcrl
notl
push
gs
fidivs
pusha
or
mov
adc
pop
xor
ja
jbe
dec
mov
mov
rcrl
loope
addr16
mov
pop
ret
repnz
push
lahf
inc
sub
inc
pop
dec
inc
movsl
mull
sub
lea
sub
mov
add
icebp
fldenv
sbb
jecxz
lahf
scas
imul
pusha
dec
xchg
shrb
adc
xchg
fcmovb
jmp
sbb
shlb
stos
lahf
aas
pop
adc
dec
sbb
inc
stc
ja
cld
sub
or
pop
sbb
or
jo
lret
mov
cltd
sub
adc
or
lret
lods
test
mov
addr16
adcb
add
push
jns
add
int
loop
lock
cmp
dec
dec
mov
sarl
add
fiadds
mov
enter
cmpsb
lret
mov
jge
lds
lea
mov
insl
pop
je
jb
out
or
ficomps
fs
jbe
rcrl
mov
mov
mov
ja
call
fsubrl
pop
repnz
mov
fsubl
clc
ja
scas
push
dec
loop
stos
add
sub
cmp
lock
xchg
dec
mov
sbb
add
jnp
pop
lahf
insl
lret
hlt
ret
scas
dec
fdivs
jns
cli
jae
jecxz
ds
inc
shlb
sub
mov
push
adc
out
dec
scas
jge
mov
rcll
inc
xor
and
sahf
fwait
lret
sbb
pop
inc
xchg
jle
cli
lret
test
jecxz
push
cmp
dec
lret
push
test
or
sub
sbb
je
test
mov
arpl
stos
gs
pop
adc
ret
or
pop
push
push
notb
aas
pop
inc
mov
rcrl
adc
xchg
loop
es
sbb
xchg
les
or
mov
aas
mov
inc
inc
cmp
sub
lods
clc
aaa
lahf
push
mov
pop
jo
leave
mov
jo
inc
push
and
add
divl
adc
mov
inc
mov
mov
mov
rolb
or
jns
clc
jo
ss
lods
mov
add
aaa
jb
mov
inc
mov
test
jecxz
cmp
cltd
adc
mov
add
adc
jmp
scas
push
push
std
mov
xchg
lock
mov
xchg
imul
outsb
dec
add
rolb
push
mov
loop
stc
pusha
mov
fcmovnb
clc
add
xor
pop
sbbl
jne
je
sub
mov
mov
or
outsl
push
or
add
adc
or
js
out
cs
sti
lcall
stc
lea
or
inc
push
movsl
or
loop
in
mov
gs
lds
shrl
mov
pop
mov
xor
ret
cmc
cs
mov
and
xor
ljmp
sub
repnz
push
sbb
lret
insb
sti
in
loop
mov
jge
push
push
sub
loop
jae
adc
cmp
and
sub
mov
push
bound
test
sbb
mov
shlb
pop
pop
or
ss
aam
arpl
pop
ret
dec
push
addr16
orl
jnp
repz
xor
xor
jmp
ja
push
add
daa
xchg
xlat
lods
testb
mov
stc
xor
sbb
dec
xchg
or
nop
clc
cld
scas
push
jge
cltd
stos
add
mov
jo
jnp
les
or
sub
aas
bound
mov
insb
lods
jmp
or
inc
or
popf
cmpsl
lcall
xchg
repnz
push
inc
daa
dec
push
dec
mov
movsl
popa
or
lret
cmp
jo
cmpsb
pop
jp
arpl
jmp
xchg
adc
dec
jno
ret
or
aam
pop
xchg
call
cli
push
sub
cmovbe
or
sub
mov
test
push
xchg
fsubs
pusha
inc
les
lods
jp
out
addr16
or
jo
xchg
lods
sub
xor
mov
test
push
add
es
cmc
mov
repnz
or
or
rcll
mov
xchg
push
scas
push
mov
sbb
mov
mov
aas
rolb
nop
pusha
ret
jl
xchg
mov
iret
popf
mov
mov
out
push
test
dec
lahf
mov
and
mov
daa
in
sbb
push
dec
fimull
int3
out
test
pusha
test
push
sub
hlt
lods
xchg
fcomps
inc
dec
jle
xor
les
push
inc
jecxz
xchg
aaa
xor
xor
test
scas
loope
mov
xchg
push
stos
cld
mov
jae
hlt
pop
add
and
xorb
mov
rorl
sbb
sub
outsl
fcomi
push
fadd
ret
out
loope
push
push
sbb
sub
adc
movsb
gs
mov
cld
cmp
sbb
fwait
ret
popa
mov
cmpsb
subl
mov
repz
test
jno
mov
into
std
jmp
daa
cmp
and
rcr
cmpsb
sub
out
jp
jle
addr16
ljmp
sbb
call
testl
cld
xchg
cli
mov
scas
inc
scas
add
fistpll
mov
icebp
pop
or
push
push
test
imull
jb
add
mov
loope
cltd
push
ficoml
and
cli
jne
fsubs
sub
jns
lea
mov
shll
std
ret
cmp
pushf
ja
outsb
jbe
jo
iret
xor
stos
out
test
nop
imul
push
clc
clc
shrb
loopne
in
addr16
sbb
pop
pop
add
popf
cmp
jl
mov
cltd
lods
dec
adc
mov
jecxz
or
cs
cltd
push
mov
jle
imul
cld
jmp
mov
pop
outsb
adc
or
pushf
rorb
or
popa
dec
push
das
sbb
out
lcall
sub
std
daa
mov
cmp
not
out
push
jp
mov
inc
aas
mov
push
pushw
inc
mov
fiaddl
or
dec
push
arpl
and
mov
dec
testb
ficomps
push
movsb
sub
testl
xchg
test
mov
add
cmp
dec
add
pop
and
lock
adc
mov
imul
shrb
mov
add
loop
inc
cmc
xlat
cltd
jge
and
push
divb
aaa
out
sbb
xor
push
leave
fs
add
mov
popl
jno
stc
icebp
mov
pop
push
cmpsb
mov
ss
mov
inc
fstps
pop
subl
mov
movsb
add
pushl
pop
mov
or
test
imul
pop
push
lret
iret
dec
xchg
insl
call
or
jae
pop
sbb
dec
push
xor
cmp
push
fucomp
mov
test
dec
xchg
stos
mov
lock
movsl
push
outsb
pusha
push
inc
rorl
test
cmp
mov
mov
push
fnstcw
mov
imul
dec
jg
push
cmp
mov
pop
xor
add
sub
repnz
pushf
dec
cmp
mov
sub
fidivrl
adc
insb
and
fdivr
push
pop
mov
cmp
xchg
mov
cmp
test
dec
addb
pop
hlt
lods
sar
into
jge
mov
sbbb
test
sbb
cmpsl
and
xchg
ficomps
xchg
and
jmp
mov
scas
int3
push
xlat
mov
push
in
and
adc
js
lret
decl
sbb
dec
mov
iret
jle
test
in
popa
xor
dec
sbb
inc
mov
xchg
movsb
sti
outsb
xchg
jne
jmp
cmp
in
mov
roll
push
dec
enter
inc
fsubp
rcll
aaa
rcrb
jl
lods
inc
stos
mov
mov
outsl
call
push
inc
push
loopne
and
mov
test
dec
pusha
rclb
xchg
dec
out
jb
ss
cmp
add
xchg
xor
or
mov
out
pop
add
push
je
adc
sahf
xchg
test
sbb
jmp
les
cmp
sbb
inc
sbb
xor
xor
pop
xor
leave
insl
shl
xchg
mov
idivl
lret
xchg
ja
cwtl
arpl
loope
daa
imul
inc
cmp
and
mov
add
pop
pusha
and
dec
rcll
push
cwtl
push
dec
xadd
inc
mov
jo
cmp
pop
jns
addl
ret
xchg
test
outsb
popf
jmp
shl
popa
sub
scas
cltd
jno
shll
and
adc
cmc
push
cli
cmp
lea
push
aaa
fmuls
or
out
insb
mov
sbb
das
rorl
out
stos
shll
pushf
mov
in
mov
mov
shlb
das
add
and
gs
jnp
test
mov
jg
mov
in
dec
pusha
cmp
push
mov
popf
inc
pop
loop
xchg
shll
cmp
leave
movsb
icebp
sub
sub
and
std
testl
aaa
push
int3
mov
bound
ret
jl
movsl
stos
in
push
fdiv
cmp
pop
ljmp
adc
loope
adc
mov
sbb
or
sub
sub
aam
mov
nop
pusha
xchg
mov
add
filds
push
ret
cmc
mov
jae
pop
jmp
adc
test
mov
pop
xchg
push
sub
and
sub
jecxz
fmulp
push
pop
cmc
xor
xor
addr16
push
jmp
js
test
loope
iret
xchg
iret
into
dec
call
adcb
imul
setno
or
mov
pusha
add
sbb
push
int3
movsl
mov
cld
lcall
cmp
pusha
testl
out
mov
int
punpckhbw
sub
stos
add
data16
loope
jl
xchg
jecxz
cmp
mov
int3
xor
ficoml
mov
clc
je
add
mov
mov
lret
pop
mov
or
push
outsb
push
arpl
jne
sub
jbe
addr16
lret
fsubr
movsb
sbb
xor
pop
es
lcall
dec
fcomps
rcrl
add
dec
jne
push
jmp
add
dec
push
mov
inc
push
inc
stos
dec
aad
jb
add
cs
pop
pop
xor
sub
xchg
mov
cmp
jge
jb
inc
jmp
or
push
xor
loop
jno
aam
jp
jno
ret
and
ds
int
pop
mov
jp
and
xchg
and
into
cmp
xorb
daa
mov
sub
and
popl
aas
fldt
pop
and
add
test
pop
test
in
mov
sub
mov
pushf
clc
lahf
popl
es
sub
mov
pushf
or
in
sub
jnp
aam
sbb
sarb
sti
jl
push
push
mov
mov
inc
push
mov
inc
push
mov
fdivrp
fucomi
jb
repnz
sub
cmp
icebp
jno
mov
adc
push
mov
lret
mov
stc
test
inc
inc
cltd
cmc
xor
cs
sbb
push
decb
sub
push
aas
mov
scas
sahf
vsubss
std
push
fbld
daa
pop
rolb
xlat
jmp
inc
in
jns
dec
ds
add
sub
push
jge
inc
decl
push
fisttps
cmpsb
xor
js
shrb
jecxz
ss
pop
or
jp
sub
cmpsb
and
push
gs
xchg
popf
xor
jl
and
cmpb
xor
cmpsb
mov
neg
xchg
cmpsb
les
orb
les
lahf
mov
icebp
scas
push
enter
sub
or
cmp
and
jmp
xor
push
fisubrs
sbb
push
pop
cmp
jmp
test
mov
mov
lahf
mov
iret
add
xchg
or
pop
or
or
push
adc
xchg
in
xchg
and
out
push
jl
out
and
lods
push
and
pop
rcrl
dec
aaa
adc
insb
mov
lret
cmp
jne
fwait
mov
mov
add
dec
stos
xchg
or
test
or
outsb
insb
fwait
cmp
sahf
xchg
mov
dec
sub
inc
mov
pop
push
sub
xor
mov
jae
call
pop
pop
xchg
je
mov
pop
push
mov
loope
xor
test
and
repz
cmc
test
add
fiadds
jbe
cmc
pop
jns
mov
or
lret
sbb
sahf
loopne
loope
stos
sub
and
lret
xchg
push
mov
adc
cmp
sub
sbb
inc
scas
dec
mov
mov
pop
or
loope
cmpsb
or
push
cltd
pushf
leave
pop
pop
and
add
sub
mov
push
dec
cmpsl
into
adc
ljmp
pop
mov
jno
mov
xor
sub
push
xchg
fdivs
pop
sub
lahf
lock
mov
mov
mov
jo
hlt
sbb
xchg
or
xchg
cltd
movsl
shlb
push
call
je
mov
jno
lods
out
insb
scas
in
sub
sub
int3
ds
fidivrs
xlat
int
sahf
dec
ljmp
mov
dec
pop
popa
cmp
lods
fwait
xchg
pushl
push
jp
pmaxub
sbb
push
lea
jecxz
xchg
loope
inc
sbb
out
lcall
add
dec
shrl
xchg
pusha
fsub
xchg
mov
aad
add
sbb
jg
scas
xor
and
mov
xor
sti
ljmp
cwtl
pop
loope
scas
mov
xor
ret
not
adc
mov
pushf
ss
jecxz
xor
sahf
sti
fxch
fistps
insl
adc
and
sub
xchg
aaa
popa
push
imul
cli
scas
movsl
mov
das
push
sbb
lock
lcall
sbb
pop
xor
cmp
mov
xchg
jb
mov
add
adc
pusha
sbb
shlb
pop
jle
mov
and
aad
aad
mov
popf
jecxz
popa
arpl
pop
lret
lret
imul
add
sub
sbb
add
mov
sbb
sub
xchg
std
out
cmc
and
jb
push
jecxz
lods
or
nopl
jne
jle
stc
fsts
cmp
or
pop
sbb
sahf
jbe
fwait
sbb
pop
sbb
sbb
cmc
xor
iret
sub
dec
xor
call
dec
sarl
dec
jae
sub
and
cld
imul
lds
push
xchg
je
ss
nop
test
adc
icebp
and
xchg
jno
dec
push
inc
imul
aaa
pusha
and
cmpsl
mov
fcmovu
sub
mov
scas
test
ret
sbb
push
dec
push
leave
daa
test
xchg
mov
loope
and
insl
add
dec
sbb
lods
jge
jne
jno
add
pop
pop
inc
xchg
pop
add
xor
add
popa
hlt
fidivrl
or
aam
lret
stos
insb
xchg
iret
imul
out
sbb
add
test
mov
popa
jns
mov
pop
ret
push
push
sbb
or
and
imul
adcb
cmp
test
inc
dec
das
icebp
jp
imul
push
popa
adc
mov
inc
jno
mov
lock
fildl
pop
fwait
fs
adc
xor
insb
cmp
push
dec
popf
xorb
inc
das
sub
or
add
inc
cmpsl
sarb
mov
xlat
xor
xchg
jbe
add
pop
stos
and
sbb
mov
lcall
add
jnp
push
gs
pop
lahf
ljmp
int
test
lock
in
packssdw
adc
repnz
mov
andl
or
mov
stos
mov
ret
inc
scas
xorb
in
out
xchg
sub
cmpsl
mov
into
cwtl
or
std
movb
mov
stc
cmp
fwait
das
inc
imul
repnz
imul
or
or
sub
fiaddl
sbb
adc
jl
push
fcoml
pop
decl
loopne
pop
shl
mov
push
fidivs
stos
fsubrs
loope
es
insb
mov
lods
shll
sti
arpl
dec
jbe
dec
lcall
iret
dec
sbb
outsl
rcll
fwait
mov
pop
ret
mov
or
push
adc
mov
fdivrs
xchg
ja
dec
in
dec
mov
push
mov
int3
mov
or
inc
daa
inc
sbb
pop
insb
mov
rolb
aad
jbe
cli
das
movsb
cmp
pop
dec
imul
mov
fwait
dec
cltd
stc
stc
mov
repz
mov
dec
lea
cli
inc
enter
out
sub
pop
into
pop
adc
add
and
push
xchg
testb
scas
das
pop
pop
xor
fldenv
call
mov
pop
or
jp
cmp
sbb
jp
fsubrs
xor
nop
inc
ljmp
xor
dec
sub
in
jmp
sbb
or
inc
pop
out
jl
lret
mov
xor
and
dec
arpl
add
addr16
ljmp
test
mov
shlb
cltd
dec
mov
repz
dec
ja
push
mov
nop
loope
pop
jge
sbb
sub
pop
add
hlt
mov
adc
iret
or
xorb
in
repz
push
arpl
testb
test
sbb
mov
shlb
pop
lds
xchg
sub
scas
xor
cld
xchg
and
fsubrp
sub
adc
pop
xor
mov
cwtl
mov
mov
mov
push
add
aaa
push
inc
jns
sbb
adc
in
fsub
ss
stos
cmp
jl
int3
push
jno
pushf
insl
mov
loope
arpl
lret
subb
and
test
mov
fsub
dec
imul
lds
lcall
push
ds
testb
les
mov
xchg
repnz
stos
outsb
mov
lcall
mov
cmp
out
xchg
adc
movsb
daa
pushf
stos
jnp
aas
mov
mov
jmp
jp
and
and
movsl
movsl
lahf
fidivs
testb
jle
mov
add
inc
xchg
ja
xchg
cmpb
xchg
cmp
out
sbb
mov
imul
dec
cmp
mov
addl
or
push
testb
pop
mov
mov
xchg
out
inc
andb
in
mov
xor
faddl
mov
jge
icebp
lea
and
aaa
sbb
scas
pop
sarb
iret
and
adc
test
xchg
jo
or
and
dec
dec
mov
add
dec
inc
loope
into
popa
data16
cmc
mov
cwtl
pop
shrl
pop
inc
ficoms
das
orl
cmp
sub
pop
movsl
jmp
ret
lods
sahf
xlat
lods
call
mov
xchg
orl
daa
outsl
xchg
add
adc
lahf
mov
jno
jns
test
or
rorl
dec
dec
sbb
add
ljmp
push
add
pop
mov
popf
test
int
into
xchg
pop
das
dec
lock
adc
subb
shll
mov
pop
imul
pop
xor
mov
jle
outsb
je
inc
push
dec
orl
pop
pop
xor
pushf
mov
das
std
mov
inc
mov
loope
xchg
adc
lods
leave
xchg
mov
dec
mov
pop
in
test
lea
jno
lret
jle
sti
mov
movw
xchg
faddp
adc
mov
dec
stos
cmp
je
dec
sub
cs
pop
sbbl
adc
cld
rcrb
sbb
push
xchg
xor
scas
fistl
rclb
in
movsb
mov
jne
repz
out
or
jb
mov
mov
mov
jno
aas
mov
and
pop
dec
inc
xor
ret
roll
ficomps
xchg
dec
add
enter
mov
add
jno
sbb
mov
cli
dec
adc
pusha
mov
test
mov
jl
mov
add
sbb
testl
add
in
in
ja
sub
and
pop
xchg
inc
and
out
push
cmpsl
subb
sbb
cmp
fcomi
add
add
adc
xchg
xchg
mov
lret
pop
mov
push
mov
in
jo
xchg
arpl
cli
pop
cmpsl
sbb
pop
sbb
stos
inc
gs
sub
xchg
je
data16
fs
popf
ret
int
insl
notb
les
pop
adc
testl
dec
pop
sbb
inc
jl
insl
fnstsw
scas
aam
mov
lods
dec
je
ja
dec
push
test
lock
mov
push
aam
add
mov
in
fwait
jg
cmpsl
or
scas
xor
fcomi
mov
das
pop
addr16
mov
int
scas
adcl
mov
xchg
insb
push
adc
add
mov
lea
or
xchg
jns
xchg
mov
loopne
jnp
mov
nop
int3
mov
xchg
fwait
jae,pn
xchg
loope
add
lea
outsb
mov
sub
cmp
je
inc
lods
add
pop
mov
sbb
jg
adc
xchg
pop
subl
sarb
cmpl
or
shll
xchg
imul
hlt
sbb
add
out
pop
pop
xor
adc
outsl
xorl
insb
sub
rorb
cmp
sahf
jne
mov
and
nop
popa
adc
data16
iret
ss
jle
dec
mov
stos
stos
in
repnz
lret
jp
mov
or
add
aas
mov
aam
pop
mov
lods
jo
orb
fdivl
lret
in
mov
jp
imul
sub
push
xchg
es
fwait
sahf
jge
pop
aam
scas
xorl
xor
and
adc
ret
jecxz
and
mov
popa
mov
xchg
pop
mov
xchg
popa
sub
pop
addr16
push
push
out
push
or
add
inc
sub
xor
shrl
in
jb
repz
pop
jle
out
xchg
stos
xor
loopne
fidivrl
mov
cmp
in
aas
lds
std
add
or
mov
mov
cmp
loope
or
jecxz
mov
inc
cltd
pop
pop
mov
and
popf
push
fwait
aam
adc
push
push
jg
sbb
mov
sbb
addr16
fstl
xchg
cwtl
int3
mov
mov
add
mov
dec
xchg
out
scas
popa
jb
cmpsl
mov
les
xor
in
and
and
out
ret
xchg
cmp
pop
into
gs
ret
dec
mov
push
add
jno
in
sahf
nop
pop
out
cmp
das
movsb
xchg
jb
test
cmp
cwtl
pusha
fs
sub
inc
sbbl
out
add
imul
mov
inc
sbb
inc
jo
ljmp
test
popl
add
dec
test
pop
jge
mov
jb
cmc
lea
outsl
ficoms
xchg
leave
mov
mov
xchg
sbb
fwait
lock
mov
leave
fldenv
jp
sbb
popa
push
mov
push
bound
xchg
xchg
aas
xor
xchg
divb
mov
popl
je
js
or
data16
test
and
pushf
mov
or
test
sar
sub
cld
mov
out
add
iret
leave
arpl
sub
fucomi
rorl
lret
rclb
adc
testb
cmp
cmpsb
scas
mov
cmpxchg
xchg
rol
je
mov
loope
stos
addr16
icebp
cmp
xchg
xchg
adc
lods
cmpl
jne
dec
xchg
jns
adc
pop
cmp
scas
add
sub
mov
mov
setbe
mov
out
mov
pop
dec
mov
jns
pop
insb
cwtl
xchg
shlb
push
push
int3
mov
lea
dec
and
adc
inc
ret
sbb
sbb
jecxz
das
dec
jne
cmp
jnp
cs
mov
clc
rcrb
mov
leave
addl
popf
mov
aad
mov
and
push
sub
push
inc
aam
ljmp
lcall
cmp
and
ljmpw
mov
cmp
mov
xor
popa
repnz
push
mov
inc
xlat
into
scas
lea
sbb
add
popa
xchg
jecxz,pn
dec
int3
xchg
inc
out
cmpb
mov
jge
test
jne
fcmovu
and
insb
cmc
xor
push
xor
add
loopne
adc
notb
ficoml
dec
lock
movsb
mov
in
inc
mov
mov
enter
xchg
xchg
push
add
and
loopne
cltd
or
cmpsl
outsl
inc
cmp
icebp
or
je
xchg
lods
mov
cmp
pop
and
insl
push
into
push
and
jae
or
jle
jp
cmp
jo
fdivrs
addr16
enter
insl
pop
pop
xchg
and
pusha
xchg
cltd
adc
pop
jnp
andl
insb
fnstcw
sbb
cmpsb
inc
clc
pop
dec
dec
xchg
ljmp
pusha
adc
inc
xor
std
lcall
popf
fcmovbe
jle
and
leave
mov
cmpsb
pop
jae,pt
xlat
pop
cmp
out
xor
fwait
pop
fdivrs
ljmp
xor
adc
and
push
hlt
push
leave
ja
insl
jbe
mov
jge
cmp
inc
mov
je
imul
xor
out
insl
mov
mov
aad
lods
out
mov
mov
push
dec
test
pop
or
and
lods
shll
cwtl
cmp
mov
push
lock
bound
push
ljmp
mov
stos
enter
paddusw
lret
mov
addb
dec
in
dec
ja
dec
pop
in
or
repz
jl
xchg
imul
jmp
mov
xchg
sub
test
pop
mov
jbe
jg
jne
cmovp
loope
pop
and
cmp
xchg
add
and
aas
xchg
rcrl
add
imull
cmc
xchg
int
or
in
jo
xor
fwait
lods
popa
or
ljmp
rep
or
ret
fdivl
inc
cmp
jae
jecxz
jnp
cwtl
xchg
xchg
jne
mov
and
pop
test
and
das
push
jno
inc
sub
xchg
xor
stc
outsl
mov
cmp
mov
xchg
mov
imul
push
dec
xchg
sahf
pushf
xor
gs
psrlw
xlat
adc
jne
mov
dec
outsb
sub
jl
jg
cltd
out
das
leave
sbb
xor
jbe
cmpsl
inc
sbb
leave
pop
mov
sub
ror
das
sub
fisttpl
xchg
add
jp
mov
jns
jno
leave
dec
and
xchg
sub
xchg
mov
les
and
lock
call
cmpsl
inc
push
lret
lret
inc
jp
and
ljmp
push
sarb
ds
lea
mov
push
ret
sub
pop
adc
cmc
out
or
inc
and
pop
xchg
cmp
cmpl
add
add
and
mov
outsb
and
sbb
sub
movb
dec
sahf
xchg
les
pop
imul
pop
cmp
loopne
in
outsl
push
scas
in
fsubrs
ds
test
jo
add
out
in
iret
test
xchg
test
xor
mov
call
shr
mov
mov
loope
adc
mov
mov
mov
cmpsb
push
dec
call
test
pop
imul
pop
add
shlb
mov
mov
sbb
add
shll
add
rcrb
jo
shlb
fwait
in
cmc
cmc
push
das
jae
cmpsl
mov
cmpsl
enter
daa
xchg
movsb
aas
xchg
xor
or
push
sbbl
push
sbb
adc
cmp
test
lahf
or
js
movsb
cltd
mov
pop
xchg
fs
lea
ret
mov
inc
loop
sbb
lret
lcall
into
xchg
ds
adc
xlat
and
jl
scas
aas
outsb
mov
hlt
je
xchg
cmp
loopne
ficompl
cmp
mov
sahf
push
jo
pop
jmp
mov
ret
lcall
rolb
shl
test
lds
jg
fimuls
jp
dec
inc
imul
sbb
pop
int
in
stos
aad
jge
les
shl
scas
pop
or
out
xor
fbstp
arpl
out
movsl
rolb
jl
jmp
lret
test
xchg
mov
cli
mov
sbb
jb
in
ss
mov
movl
mov
jp
data16
mov
mov
imul
push
lods
lcall
ja
pop
dec
sarl
inc
adc
fwait
xlat
lahf
inc
jne
repnz
bound
jae
jno
add
out
bound
movsb
xor
out
inc
sbb
jbe
add
cmp
stc
in
in
xor
and
lock
andl
movsb
popa
push
or
subb
in
pop
or
or
add
cmp
xor
pop
sub
movsl
stc
lahf
cli
fisubl
test
arpl
mov
lods
mov
sbb
fwait
ss
pop
sbb
cli
aad
movsb
paddw
push
jmp
push
adc
mov
fildll
mov
fsubs
cmp
mov
aam
mov
pop
xchg
gs
test
test
pop
inc
push
rolb
cs
pop
pop
sbb
push
js
in
xchg
mov
rcr
icebp
mov
aas
and
test
hlt
mov
inc
test
inc
ret
mov
cmp
xchg
in
xchg
mov
cltd
sahf
cmpsb
lods
mov
pop
hlt
xchg
inc
test
mov
int3
jns
adc
jo
pop
insb
pop
and
rcll
scas
sarl
inc
dec
fcoms
sub
sbb
inc
jnp
outsb
add
dec
sbb
aad
mov
xchg
test
fwait
or
xor
popf
in
cmpsl
fldenv
pop
in
neg
loop,pn
gs
pop
jmp
arpl
sub
and
rolb
or
push
das
jno
subl
jno
mov
and
test
push
into
mov
push
mov
fwait
sbb
inc
cmpsl
icebp
mov
push
xchg
push
adc
inc
xchg
cmp
scas
cli
stos
rorb
in
cwtl
cli
js
fstps
out
fdivs
es
cmc
fildl
cltd
sub
sub
out
test
xchg
aas
stos
ret
dec
ror
aam
les
adc
je
or
jl
popa
sbb
add
pop
test
push
ja
push
xor
lods
dec
inc
and
lret
es
lahf
je
stc
in
dec
dec
dec
jns
jp
xchg
les
andb
sbb
mov
cmc
mov
shll
nop
jae
or
fidivl
cmp
push
leave
or
cld
inc
and
mov
inc
shl
cli
scas
mov
mul
scas
ja
jle
xchg
jl
in
jnp
lds
lcall
or
fwait
orl
int3
movsl
aad
movsl
sub
and
ja
popf
fwait
lret
and
mov
jge
add
push
lods
fadds
lahf
hlt
repz
test
je
test
or
adc
or
lcall
stos
dec
fmul
stc
out
gs
and
roll
aam
pop
cmp
pop
xor
mov
out
pop
jb
mov
mov
adc
mov
sub
mov
cmpsb
add
pop
outsb
ljmp
movsb
sub
mov
dec
roll
repz
and
leave
pop
jae
push
gs
mov
mov
mov
test
enter
in
sbb
popf
inc
xchg
add
and
dec
es
mov
mov
fsubs
push
jbe
es
adc
or
dec
push
in
jo
pop
in
mov
xor
xor
cmp
xor
rorb
in
inc
sbb
inc
test
jge
mov
jno
sbb
bound
sar
aam
xor
dec
inc
jno
daa
mov
push
and
out
and
out
jo
cmc
and
pop
mov
movsb
and
loop
scas
add
movsb
imul
stc
push
mov
int
es
fisttps
popf
mov
shll
fs
jg
mov
sub
mov
imul
lea
adcb
or
and
push
es
mov
or
in
int
push
out
xchg
mov
xchg
push
or
dec
cmp
push
dec
jmp
lret
imul
repz
mov
mov
mov
call
mov
mov
mov
cld
xor
mov
enter
push
jle
in
mov
fstps
loop
mov
loopne,pt
call
enter
xchg
mov
mov
xchg
mov
ss
mov
lahf
xor
mov
sahf
inc
mov
and
and
stc
cmc
mov
out
mov
iret
jno
lahf
stos
fiadds
adc
inc
repnz
stc
and
dec
dec
stos
jb
rorl
ja
push
xchg
xor
pop
insl
cli
xor
repnz
aas
jb
ret
fadd
cmp
mov
jae
mov
je
fs
xor
sub
stos
lods
jp
jg
js
adc
ret
imul
call
jb
inc
ljmp
lds
js
enter
pop
enter
xor
aas
xor
add
sub
bound
mov
clc
nop
cmp
add
movb
out
mov
inc
mov
popa
or
pusha
xchg
int3
into
xchg
popa
push
cmpsb
aas
push
addr16
xor
lea
lahf
mov
or
pushf
notb
into
into
adc
nop
mov
scas
rcll
test
enter
sbb
add
in
push
inc
mov
aas
rcll
mov
je
mov
sbb
xchg
out
pop
add
out
outsl
call
add
outsl
enter
xor
ds
aas
jmp
cmpsl
sub
cwtl
clc
lret
std
stos
rcrl
push
icebp
inc
inc
movsl
mov
iret
test
sahf
xor
dec
sub
int
pusha
fcoml
jmp
aad
xlat
xor
mov
sahf
or
cmpsl
lahf
inc
xchg
test
mov
sbb
imul
mov
dec
cmp
pusha
push
xorb
movsl
cltd
cmp
cmc
orb
sahf
jno
popf
pusha
pop
xchg
dec
decb
sub
adc
xor
jmp
cli
xchg
mov
push
pop
lret
mov
pop
push
mov
shrl
imul
adc
mov
xchg
sbb
xchg
idivl
adc
lods
or
add
xor
ss
loop
cmp
popl
and
jp
fldcw
popf
mov
inc
das
fwait
and
mov
jns
pop
es
mov
adc
add
xchg
or
xchg
fldcw
add
and
popf
inc
cmpsl
sti
mov
das
out
movsb
cld
ds
loope
fs
xchg
xlat
mov
jmp
fimull
adc
pop
xchg
cmp
orl
stos
fcompl
mov
push
leave
pop
mov
push
stos
movsb
fildl
dec
sub
xor
je
and
add
pusha
out
jge
xchg
jge
stc
pop
mov
mov
cmp
add
pop
jecxz
xchg
inc
aaa
scas
inc
daa
mov
jae
icebp
outsl
adc
jnp
outsb
and
mov
push
rcrb
fwait
scas
and
push
fisubrl
sbb
es
push
mov
es
mov
adc
and
jns
aad
cmp
adc
pop
shll
mov
fwait
je
rol
sbb
aam
pusha
mov
and
xor
fidivl
test
or
vpor
cmp
mov
pushw
inc
push
xchg
push
ds
es
mov
ljmp
adc
jne
xchg
lds
dec
or
js
outsl
stos
out
aad
mov
and
mov
insb
cld
inc
ss
push
and
arpl
add
or
inc
jo
dec
gs
in
movsb
pushf
inc
imul
mov
outsb
inc
inc
dec
jnp
mov
mov
ljmp
push
mov
mov
cmp
adc
rcll
inc
xchg
jb
lods
test
shl
dec
jecxz
fsubrl
aam
and
cs
nop
test
add
int
in
sub
add
pop
std
pop
and
imul
cmp
insb
out
nop
and
cmp
push
mov
xor
mov
out
sbb
jmp
cltd
pusha
iret
push
out
arpl
leave
push
xchg
in
add
sbb
sub
and
popf
fldl2e
cmp
std
fadds
sarl
fisttpll
jg
lock
ficoms
mov
test
clc
aam
xchg
inc
dec
lock
cmp
adc
dec
sub
into
call
repnz
jns
mov
aam
dec
addb
clc
pop
jbe
testb
pop
fidivs
adc
negl
and
jg
jg
das
mov
mov
daa
cmc
es
mov
mov
push
scas
adcl
orl
xchg
sbb
push
aas
aaa
cmp
or
lret
into
stc
icebp
bnd
popa
cmp
jp
cmpsl
dec
xor
outsl
repnz
bswap
jge
dec
cmp
dec
mov
jo
adcb
push
fildl
fcomip
mov
xchg
cmp
js
mov
push
outsb
mov
mov
aam
dec
mov
loope
inc
or
add
pop
fdivs
sub
and
enter
pop
jecxz
test
aaa
jp
pop
mov
push
cmp
adc
xchg
add
lods
cmp
jno
jnp
enter
das
adc
insb
cwtl
cwtl
in
mov
jmp
add
inc
cmp
lea
push
xlat
imul
pop
outsb
jle
test
sbb
sbb
mov
stc
std
lret
adc
mov
idiv
or
sbb
inc
sub
std
enter
dec
movsl
push
sbb
scas
mov
dec
push
cmp
inc
mov
outsb
subl
icebp
das
rcll
je
jl
shr
adc
in
add
bound
sub
cwtl
sbb
add
mov
mov
sub
inc
jg
jge
orl
sbb
clc
and
mov
sbbb
jne
mov
xor
mov
xchg
xor
add
adc
das
clc
sbb
arpl
and
outsb
push
std
xchg
cld
push
in
rcrl
mov
fcomps
xor
dec
xchg
mov
es
popf
in
cmpsb
shlb
push
inc
mov
fisubrl
out
cld
into
dec
loop
pushf
mov
push
sbb
sbb
testl
aad
mov
jmp
enter
jne
xchg
movhps
loopne
ds
sbb
test
outsl
call
mov
fucomp
out
xchg
xchg
jg
sub
xor
or
push
push
cmpsb
xor
fcomi
testl
rcrl
xchg
push
out
stc
add
mov
dec
sti
lret
data16
jae
sub
mov
jl
mov
jge
icebp
das
add
enter
fisttpll
int
mov
inc
or
inc
pop
mov
test
cmp
sti
and
inc
and
mov
lea
nop
lahf
adc
add
inc
insb
push
aad
xor
mov
call
sub
ret
cmp
or
xor
into
dec
fisubrs
insl
or
push
sbb
mov
or
xchg
lods
xchg
ljmp
adc
mov
das
stos
sbb
test
and
gs
lret
fisubrl
jmp
lahf
enter
out
stos
add
xchg
mov
dec
fstps
cld
fstps
xchg
insl
mov
cmp
aad
mov
jle
xor
mov
bound
mov
nop
iret
dec
insb
add
insb
rcll
mov
cmp
cmp
lods
and
dec
into
sbbl
or
jnp
cmp
mov
repnz
lods
push
inc
pop
stos
mov
add
mov
fmul
ret
loopne
idivb
xchg
and
loop
into
add
sub
roll
pop
popf
repnz
jae
pusha
mov
leave
inc
adc
ret
pop
popa
adc
aam
adc
fiadds
sbb
in
repz
out
xchg
xor
jecxz
or
rolb
dec
adc
jp
xor
cmpsb
imul
dec
pop
cmpsb
xchg
inc
faddp
imul
push
test
ret
dec
clc
out
push
iret
xchg
cmpsl
inc
insl
adc
cmp
inc
cld
adc
lahf
fcompl
ss
xchg
xor
int
mov
add
add
adc
push
add
mov
leave
mov
lods
daa
clc
and
push
sub
insb
ret
outsb
sub
shl
mov
cmp
out
ljmp
xor
imul
rcr
pop
fistl
lret
inc
cmp
mov
cmpsl
sti
push
add
xchg
sti
mov
cs
lods
inc
push
xor
jbe
cld
cmpsl
lahf
push
sti
jns
in
cmc
xor
cmp
add
cld
stc
mov
lret
leave
rcr
pop
pop
pop
sahf
pop
cli
pop
inc
dec
mov
add
inc
jmp
mov
add
mov
lock
sub
aaa
scas
fsubp
adc
cs
jbe
int3
mov
fdivs
xor
pop
addr16
mov
std
mov
sbb
pusha
leave
fstl
adc
movsb
or
jne
mov
gs
push
into
testl
insb
cmp
push
and
mov
fcoml
inc
lods
xchg
movb
ret
int
mov
stc
inc
out
adc
sbb
pop
jecxz
call
pusha
mov
out
and
ja
ljmp
lcall
mov
repnz
xor
adc
fnsave
push
xor
daa
jbe
and
push
sub
cmpsb
mov
movsb
inc
sbb
sbb
les
adc
pop
stc
push
leave
jnp
popa
jp
iret
xchg
or
jecxz
repz
jg
loop
jbe
imul
jle
adc
shlb
lret
sub
mov
fcom
inc
cmp
hlt
imul
adc
notl
add
xor
adc
pop
jg
aad
loope
pop
xor
in
sbb
cmpsb
insl
aas
mov
push
mov
lret
push
mov
jb
mov
loop
fwait
push
mov
xchg
dec
adc
repnz
or
lea
scas
call
xchg
mov
pop
lods
out
fistpl
in
mov
xchg
sub
sub
pushf
jns
dec
nop
loopne
jecxz
sbb
out
push
sub
mov
dec
dec
xor
jns
push
mov
imul
ficoms
inc
dec
cmp
or
cmp
sub
or
pop
jp
lods
lahf
sbb
rolb
loope
popa
rcrb
sub
imul
jns
push
stos
movsl
pushf
fs
mov
imulb
dec
pop
leave
int
aad
cs
loop
repz
jb
xor
inc
std
or
lea
shl
lea
ret
adc
xchg
jno
dec
popa
fwait
jns
jmp
mov
aad
jbe
shr
in
mov
inc
dec
pop
mov
fisubrl
mov
push
in
fbstp
inc
sub
mov
sub
dec
cmp
jg
cmp
sbb
lret
jmp
mov
jle
mov
rcll
sbb
mov
pop
enter
xlat
loope
fimuls
dec
inc
fdivrs
jl
arpl
or
movsl
inc
lock
mov
dec
push
inc
xor
adc
and
sub
dec
jmp
sbb
fs
cmpsl
fdiv
add
and
movsl
dec
cld
mov
fwait
adc
es
pop
sbb
iret
repz
pop
pop
fistps
ret
and
inc
inc
adc
mov
dec
xchg
nop
movsb
and
or
jns
insl
leave
aas
movsl
sahf
sahf
push
mov
jecxz
xlat
inc
popf
stc
divb
les
arpl
sbb
jns
subl
in
insl
jno
pop
cmpsb
mov
jp
xor
cmp
sahf
int
es
arpl
test
aaa
pop
sub
dec
mov
adc
push
ret
pop
mov
mov
test
mov
pop
mov
fidivrl
mov
inc
nop
xor
sub
test
mov
shl
xchg
xchg
cmc
add
jno
sbb
jmp
xor
pop
loop
ficompl
pop
xchg
iret
mov
push
xchg
xor
insb
jb
dec
out
leave
pop
clc
adc
rcrb
nop
int
into
pop
push
push
stos
pop
andb
mov
mov
xchg
push
or
mov
ret
iret
adc
and
push
pop
test
int
adc
mull
sub
in
sub
aam
movsl
repnz
pop
push
cmp
repz
mov
mov
or
pop
aad
mov
aad
cli
push
nop
add
cli
add
and
test
mov
cld
mov
xchg
xchg
fwait
daa
ja
ret
xlat
loope
nopl
xlat
mov
jno
pushf
ds
in
js
pop
mov
mov
movsl
fistpl
mov
xor
inc
dec
jbe
push
pop
sbb
pop
test
push
int
add
jmp
pop
lock
lahf
pop
roll
repz
xchg
mov
inc
rcrl
fwait
outsl
cmc
sbb
xor
stc
popa
xor
pop
out
popl
popf
in
xchg
jp
pop
adc
subb
outsl
adc
out
sub
jecxz
ja
jbe
je
cltd
les
push
out
ret
lods
mov
adc
into
jae
icebp
data16
das
mov
stos
movsb
mov
xor
mov
popa
les
lcall
mov
mov
inc
addr16
push
pop
pop
ret
and
push
ljmp
jmp
mov
jbe
test
jle
cmp
lcall
lcall
xor
negl
and
push
ja
cmp
leave
push
adc
repz
cmp
pushf
lds
ret
mov
sub
aas
xchg
jno
imul
subb
dec
jge
popf
xor
cmp
lods
jmp
cmp
lods
xor
jecxz
rol
adc
int
lods
mov
xchg
movsl
cmp
xor
mov
jg
leave
inc
fldenv
addr16
sub
leave
cli
xlat
fistpll
pop
lds
movsl
push
adc
imul
mov
lock
push
add
movsb
push
sbb
xor
or
jl
jmp
dec
and
sbb
mov
repz
or
push
cmp
adcl
jecxz
ja
stc
daa
push
sbb
rol
pop
push
sbb
adc
push
rcrb
sbb
fidivl
push
aam
mov
sti
popa
addb
int3
jecxz
mov
sbb
leave
push
lods
inc
xchg
test
repz
stc
inc
mov
pop
dec
push
cli
fcmovu
daa
mov
jnp
jbe
std
sub
jp
lret
data16
push
orl
in
cmp
addr16
xor
aam
xlat
adc
test
out
bound
and
sbb
in
mov
pop
inc
xchg
bound
xor
add
adc
inc
dec
and
sarl
subl
mov
inc
or
popf
sbb
leave
stc
jb
std
repnz
bound
mov
enter
inc
popl
pop
movsl
adc
pop
inc
pop
movd
jp
fimull
inc
push
pop
sbb
stos
or
gs
test
xchg
lahf
push
dec
ret
sub
mov
push
inc
push
shrl
lret
and
out
and
outsb
outsb
mov
sbb
test
pop
mov
inc
cmp
and
bound
xchg
mov
pop
repnz
ss
pushf
cmp
repz
bound
stos
out
sub
popf
pop
mov
movsl
or
mov
push
ds
je
and
adcb
push
xchg
dec
inc
push
inc
push
enter
pop
mov
ljmp
jle
mov
imul
jl
or
and
xor
movsb
pop
jne
data16
jbe
inc
enter
cmp
xchg
test
sbb
cli
rolb
cmp
pop
les
sbb
inc
ret
stc
cmp
ljmp
adc
adc
mov
in
lcall
out
inc
cwtl
dec
pop
push
pop
pop
jae
push
dec
mov
jp
aaa
in
jns
aam
mov
fsubr
mov
push
loopne
mov
into
sbb
fwait
xor
lods
dec
scas
mov
xor
xor
rclb
or
inc
fsubrl
fistpll
lods
sub
jno
mov
mov
jae
jg
xor
jbe
xchg
fwait
mov
inc
sbbb
shlb
enter
xchg
inc
in
fists
dec
call
test
sub
out
cmpsl
adc
lcall
les
or
mov
pop
es
xor
jmp
mov
or
push
int3
pushf
mov
sbb
mov
cld
fadds
xchg
enter
pop
fs
lret
jmp
test
or
xchg
out
cmp
pop
jmp
xor
ret
lret
jb
xor
movsb
and
cmp
push
addr16
xor
icebp
movsb
testb
jns
cltd
in
ljmp
movsl
adc
inc
pusha
jp
pop
sub
fimull
and
or
pop
fs
xchg
push
xchg
fcmovb
mov
cmp
mov
cmp
movhps
loop
idiv
or
pop
pop
mov
pop
stos
push
adc
rcrb
xor
or
cld
adc
daa
add
movsl
not
fnsave
scas
icebp
pop
fisubs
or
iret
mov
sub
jne
fldenv
sbb
leave
into
popf
mov
stos
outsb
jl
mov
push
test
sbb
xchg
ret
adc
rcrl
imul
shrb
lret
inc
pop
mov
arpl
push
xchg
or
or
sub
push
dec
icebp
mov
push
dec
or
push
scas
adc
mov
mov
xchg
pop
xor
mov
mov
mov
movsl
fs
ja
dec
push
mov
lock
dec
iret
mov
in
inc
call
push
hlt
aaa
shl
incb
push
scas
xchg
jge
cmpsl
std
subl
xor
gs
xchg
push
jp
shrl
lret
xor
or
pop
lret
or
insl
fstl
in
cld
mov
fcmovne
add
or
add
cmc
dec
cmc
jg
cwtl
xlat
add
sahf
inc
and
pop
in
test
mov
scas
fsubs
and
lahf
sbb
xchg
aam
in
aaa
stos
arpl
ret
push
lock
pop
push
and
loop
mov
xlat
xor
add
test
fneni(8087
movsl
push
ds
xchg
rep
xchg
fildl
mov
mov
mov
jle
stc
stos
cmpsb
push
and
mov
sub
mov
int3
mov
and
adc
xchg
pop
cwtl
ljmp
mov
hlt
cltd
xchg
pushf
mov
int3
jge
cmpsb
mov
test
jg
dec
pop
rcll
cmpsb
es
mov
mov
pop
cmp
jge
ret
xchg
jg
and
mov
dec
jae
jne
adc
inc
push
int3
leave
push
enter
fnsave
mov
fidivrs
pop
es
insl
jne
lret
mov
cmp
insb
mov
push
sub
cwtl
jp
lahf
mov
ret
cmpsb
jae
xor
jmp
sti
or
pop
imul
push
xor
loopne
cwtl
ja
mov
or
fdivl
movsb
cli
mov
xor
dec
push
scas
aaa
shr
and
or
mov
cs
push
movsl
sbb
cmp
and
movsl
mov
jg
xor
mov
pop
inc
xchg
arpl
mov
pop
mov
icebp
mov
pop
je
inc
inc
stc
mov
sub
ficoms
sbb
popa
lods
mov
inc
imul
push
xchg
jnp
scas
cli
jmp
loope
xchg
sbb
in
lods
out
mov
cmpsl
in
push
lret
shll
les
data16
fsts
std
xchg
push
in
push
lahf
test
push
popa
xchg
test
popl
xchg
pop
stos
mull
movsb
stos
push
loope
mov
push
ret
dec
jg
jae
pop
or
adc
xor
gs
xor
xchg
je
inc
shl
mov
mov
xor
ss
dec
orb
inc
add
xchg
mov
lods
pusha
inc
es
out
test
into
xchg
pop
lds
pop
push
movsl
mov
out
or
scas
cltd
sub
in
add
rclb
jns
pop
sti
in
movsl
mov
loop
movsb
leave
mov
mov
cmpsb
loope
adc
adc
sbb
in
dec
mov
jmp
mov
push
jp
mov
ret
and
negl
push
clc
xor
pop
aaa
sbb
mov
cli
test
cltd
cltd
add
cmp
or
in
ror
mov
adc
enter
lcall
repnz
inc
rcll
dec
pop
xor
push
or
lret
les
jmp
push
inc
ds
and
and
out
lods
inc
mov
mov
mov
xor
cmpsb
push
ljmp
jnp
sub
xchg
jns
je
pop
hlt
adc
mov
adc
push
lret
mov
loop
cli
int3
int
mov
mov
adc
add
jp
xchg
and
rcll
push
js
mov
pop
pop
jb
inc
jl
xchg
sub
xchg
xlat
shlb
cli
mov
rcl
inc
lret
jnp
insl
lret
cmpsl
xlat
addr16
data16
pop
ret
enter
pop
std
or
fwait
das
jo
pop
lea
jl
std
xlat
sub
push
mov
out
fwait
and
pop
add
shrl
add
push
into
minps
push
push
fisttpll
pop
icebp
leave
outsb
cmpsl
dec
cmp
jecxz
xchg
ret
cmpsb
dec
arpl
or
bound
ret
scas
pop
and
int
cli
ret
insl
sbb
sar
pushw
clc
fcomps
pop
popf
mov
incb
outsb
cmp
sbb
out
or
dec
jo,pt
cmp
pop
sbb
cmp
mov
jg
or
or
mov
jae
pop
lret
cmp
std
nop
xchg
hlt
dec
push
push
mov
pop
sbb
sub
out
jns
rclb
jne
arpl
xor
lahf
sub
xchg
lea
jmp
cs
sbb
repz
fcoml
fildl
mov
pop
dec
sub
sub
or
popf
cmpl
pop
ss
sub
pop
jl
push
inc
mov
adc
insl
xor
sbb
mov
sub
sub
dec
push
cmp
mov
nop
push
out
sub
fcoms
pusha
movsl
sub
cmp
and
mov
mov
push
mov
xor
sub
jns
mov
ds
pop
sub
pop
cmp
sbb
jmp
cmp
jbe
outsb
push
sub
stos
into
or
adc
and
xchg
inc
ficompl
cs
xchg
push
arpl
loopne
mov
fstpt
rcr
lods
enter
push
xchg
mov
jmp
jp
adc
or
nop
filds
arpl
movsl
mov
xchg
xchg
leave
jge
movsl
aad
adc
xor
out
add
dec
sub
sub
pop
cmp
testl
iret
lods
mov
jbe
lahf
mov
insb
icebp
inc
les
push
adc
mov
add
je
out
jp
in
xchg
dec
aad
inc
xor
aas
test
and
test
dec
or
dec
cmp
nop
clc
xchg
fdivl
inc
pop
in
pop
call
test
out
stc
mov
je
inc
test
xor
fstpl
inc
or
icebp
mov
adc
arpl
negb
and
inc
stos
pop
int
out
scas
jmp
pusha
push
out
cli
and
mov
jo
xchg
cs
adc
cmp
xchg
xchg
mov
imul
xchg
scas
xchg
inc
cmp
lahf
jl
xlat
out
repnz
loopne
xor
add
sbb
cs
jecxz
sbb
int3
xchg
add
and
popa
pop
mov
mov
jb
fwait
imul
dec
xchg
mov
inc
jle
mov
pop
cli
xchg
cmpsb
xor
jmp
adc
div
sti
subl
repz
jnp
sub
dec
mov
mov
jle
inc
imul
and
jle
xlat
in
mov
inc
addr16
movsl
adc
imul
mov
test
in
jl
inc
in
int3
sub
insb
int3
cmpsl
ret
rcl
popa
enter
ffree
ljmp
cmp
aaa
jne
into
les
xchg
jo
push
outsb
movsb
fcmovnbe
stos
push
push
les
dec
fwait
clc
jbe
jbe
xor
adc
push
mov
popa
add
push
jns
xchg
mov
mov
jmp
jp
mov
adcl
repz
nop
roll
mov
dec
xchg
pop
out
shlb
sbb
nop
into
leave
rolb
out
pop
dec
xor
xor
jge
clc
icebp
dec
adc
jb
lods
mov
push
jge
mov
cli
and
incl
fsubs
cmp
ds
shlb
jns
and
sahf
jno
xor
and
push
inc
repnz
data16
nop
mov
or
outsb
or
movsb
xlat
cmp
or
rclb
hlt
repz
inc
mov
or
mov
cmpsl
fldcw
fimuls
jg
adc
in
xchg
lahf
mov
cmp
xchg
add
les
push
mul
filds
xchg
iret
inc
mov
xor
inc
pop
stc
loop
pushf
xchg
pop
inc
loopne
jg
inc
ljmp
adc
nop
cmpsl
sti
push
repnz
ss
pop
and
or
imul
jns
das
cltd
aaa
out
out
adc
fs
sub
mov
dec
dec
sbb
cltd
sbb
std
jle
bound
mov
popf
jmp
adc
xor
outsl
or
push
jmp
in
jg
negl
xchg
bound
adc
test
xor
xor
fmul
rcr
inc
xchg
lods
sub
adc
mov
dec
sbb
call
arpl
push
add
push
loop
xchg
test
mov
icebp
test
clc
rcll
sbb
and
push
push
xchg
cmp
arpl
je
sbb
add
dec
xchg
nop
pop
outsb
sub
outsb
jl
or
add
aaa
pop
lock
ret
imull
add
xlat
jbe
or
push
pop
cmpsb
push
or
mov
xchg
repz
mov
add
mov
insb
or
jecxz
aas
mov
imulb
test
stos
push
push
scas
mov
push
out
loopne
dec
in
jb
add
ds
cmp
popa
loope
sbbl
inc
jp
inc
aam
cmp
loope
cmp
inc
push
stos
test
adc
or
pop
add
sti
dec
bound
movsb
fcoml
cltd
in
cli
mov
add
mov
jp
insl
nop
xchg
add
in
or
jns
mov
cmpsb
push
mov
cmp
imul
or
cmp
popa
ror
add
arpl
xchg
add
sub
mov
mov
jecxz
xchg
inc
ljmp
je
add
cmp
jle
sub
or
addr16
insl
pop
sbb
and
stc
ret
mov
rolb
lock
sti
mov
inc
clc
mov
cs
lret
push
mov
push
fbld
pop
inc
adc
popa
into
call
data16
mov
adc
scas
xor
mov
aaa
outsl
adc
push
mov
sbb
nop
sti
jecxz
inc
jg
jne
and
dec
imul
pop
call
lock
addl
jb
xchg
push
shl
daa
sub
in
adc
icebp
outsb
outsb
lds
loope
ret
and
sbb
lret
in
jmp
cmp
lock
push
aam
mov
out
incl
cwtl
add
outsl
jl
sbb
rorb
cld
or
shr
mov
or
mov
repnz
push
mov
mov
pop
outsl
sub
or
push
mov
push
cmp
mov
add
pop
popa
mull
shll
shlb
xchg
add
jle
cltd
mov
outsl
add
sbb
clc
inc
scas
popf
sbb
pop
push
cs
dec
xor
lret
popf
pusha
mov
pop
xchg
mov
jo
mov
insl
inc
ret
loopne
jmp
lea
loope
jg
test
mov
ljmp
mov
in
lcall
mov
bound
sub
addr16
mov
xchg
jmp
sbb
mov
cmp
mov
sub
inc
inc
inc
jne
push
fwait
xchg
pop
sub
cmp
scas
inc
out
pop
call
sbb
add
mov
cli
outsb
adc
decl
inc
dec
notb
pusha
insl
inc
loopne
lcall
xchg
out
sbb
xchg
aaa
lods
pop
lea
or
dec
iret
mov
js
leave
sub
out
loop
push
std
hlt
xchg
hlt
push
clc
pop
ficoml
sbb
cmp
inc
fbld
sti
push
inc
xchg
xchg
movsb
ljmp
cmp
ds
fsincos
outsl
scas
aaa
test
andb
popf
loopne
push
mov
xchg
das
sub
inc
cld
sbb
aaa
and
jmp
cmc
add
mov
inc
xchg
cmp
aas
inc
test
sub
pop
push
sub
mov
into
aam
cmpsl
and
mov
mov
js
push
pop
xchg
loope
inc
lods
out
jp
or
stos
xor
negl
cmpsb
inc
orl
out
push
mov
aaa
js
fdivr
lret
mov
mov
sti
nop
rol
cltd
les
cld
xchg
lea
pop
frstor
pushf
mov
icebp
ds
mov
xor
jmp
adc
out
sbb
jno
push
adc
jns
mov
dec
addr16
sahf
movl
ret
test
stos
imul
add
xor
push
out
jp
dec
loope
adcl
pop
add
xor
jecxz
lods
sub
enter
or
xchg
cmp
icebp
gs
leave
sarb
pop
ficoms
aaa
mov
mov
cmpsl
loope
jae
xchg
sub
shlb
mov
adc
mov
out
xlat
test
hlt
jge
jnp
add
jns
cmpb
mov
mov
mov
push
jb
and
adc
inc
cli
add
pop
cs
sti
mov
mov
push
movsl
aad
orl
stos
rclb
aaa
mov
mov
movhlps
fcoml
mov
mov
push
mov
cmp
sub
adcb
imul
in
pop
jo
xchg
out
xchg
sbb
mov
or
dec
sub
out
aad
loop
adc
and
cmp
xor
in
addr16
xchg
add
cmpsb
test
movsl
nopl
adcl
fyl2x
sbbb
out
or
sbb
subb
push
loope
xchg
jae
inc
mov
xlat
ds
ficomps
call
mov
stc
andl
iret
lahf
xor
mov
sti
cmc
sbb
out
flds
mov
pop
sub
lods
stos
hlt
lret
test
scas
mov
imull
movsl
mov
lret
adc
mov
sbb
mov
xchg
decb
pop
xlat
mov
scas
push
push
jbe
in
popf
push
out
mov
fadd
les
bound
sbb
nop
xchg
or
or
mov
xor
lcall
fwait
add
pop
inc
mov
mov
ljmp
jle
rcrb
ljmp
scas
xchg
fwait
mov
lock
outsb
lds
xor
ljmp
mov
sbb
sub
dec
movsl
fbstp
mov
movsl
fisubl
pop
push
pop
ja
pop
fcmovbe
add
xchg
or
sub
xchg
loop
mov
mov
jnp
xor
jb
add
negl
and
xor
faddp
and
cmp
or
jp
pop
push
jg
xor
rorb
mov
loope
or
mov
ret
and
lret
aad
or
mov
jb
adc
insb
mov
sub
loope
fldl
push
sub
andb
int
lcall
daa
push
mov
xor
data16
adc
inc
jns
repnz
sbb
sub
cld
or
and
dec
or
mov
jl
xchg
repz
enter
testb
movsl
mov
aas
dec
mov
fbstp
shrb
dec
and
mov
div
dec
mov
mov
inc
scas
movsb
mov
js
sbb
test
lret
pop
jg
lcall
pop
jbe
mov
lcall
daa
add
add
in
sti
pusha
hlt
dec
les
enter
or
adc
mov
adc
sub
and
push
inc
cmp
rcrl
mov
xchg
and
daa
rorb
sub
insb
insb
insb
test
mov
shll
cmp
mov
pushw
addr16
push
rolb
filds
lcall
sub
or
xor
mov
movsl
xor
inc
test
data16
mov
mov
or
cs
pusha
push
aad
mov
scas
inc
out
cs
sub
push
in
notb
sub
scas
sbbb
in
jge
push
in
imul
xor
inc
fwait
in
adc
stos
cmp
dec
lods
mov
fsts
add
popa
loope
and
pop
sbb
cmp
jl
jl
add
test
xchg
mov
mov
mov
data16
lock
pop
lcall
test
jo
das
sub
mov
mov
add
pop
mov
sbb
cmc
jbe
insb
pop
or
out
add
imul
or
cmp
mov
lea
xlat
pushl
jne
imul
scas
inc
mov
xorl
nop
aad
nop/reserved
lret
push
add
push
out
cmp
popf
inc
mov
mov
leave
int3
lods
test
das
gs
xchg
popf
xchg
mov
adc
imul
xor
and
sub
inc
sbb
mov
fisttpl
out
jecxz
fsqrt
xorl
int
cli
sbb
fldt
jle
dec
add
add
sub
sub
dec
dec
xor
adc
popf
push
or
push
cmp
call
daa
inc
std
push
in
addr16
aam
mov
inc
adc
sub
xchg
loope
add
pop
pop
pushf
inc
mov
movsb
adc
fdivl
jns
pop
and
pop
and
or
jb
sub
out
cmc
sti
adc
push
stos
or
dec
outsl
jno
or
mov
outsl
sub
lcall
movl
negl
push
xor
repz
add
cmp
insl
stc
out
mov
movsb
jmp
pop
sbb
adc
mov
mov
push
or
lods
jl
push
push
call
inc
mov
test
lret
mov
inc
inc
jp
sbb
bound
push
test
ss
ja
mov
test
inc
add
aam
jae
cmp
fisttps
fisubrs
and
sub
or
stos
iret
je
movsb
lahf
lea
lods
adc
push
mov
into
push
iret
xor
pop
push
adc
mov
es
mov
sti
sub
fbstp
cmp
mov
adc
cli
fstpl
push
clc
jbe
jb
out
push
and
out
mov
inc
in
and
fisubs
outsl
lcall
inc
or
mov
in
pushf
inc
test
shl
mov
and
pop
cmpsb
dec
pop
cmp
pop
mov
sub
aad
in
aam
jo
ja
fadds
jecxz
sub
jmp
jb
xchg
aas
adc
dec
scas
xor
sahf
and
mov
jp
pop
mov
aaa
add
outsb
xlat
out
mov
sbb
je
push
mov
lea
fbstp
xor
repz
aam
add
add
mov
imul
popa
or
bound
push
cmc
data16
add
mov
inc
mov
je
mov
adc
xor
mov
xor
out
xor
xchg
jno
cmpsl
dec
or
rcr
xchg
sbb
and
inc
jne
lea
mov
mov
adc
enter
xchg
test
and
adc
clc
test
test
adc
imul
out
mov
outsl
pop
ss
sahf
xchg
cwtl
loop
out
add
insl
test
lock
in
mov
cwtl
out
pushf
and
sbb
mov
cs
sub
andl
subb
add
outsl
mov
sbb
xor
add
jmp
and
int3
rcrb
movsl
cmpsb
pop
jnp
vpsubq
hlt
es
push
shr
mov
pop
out
jnp
pop
inc
popf
les
adc
xchg
out
repnz
lcall
out
repnz
daa
in
adc
or
sbb
push
ror
inc
je
scas
adc
pop
xchg
add
jae
pop
xor
push
cmpsb
popa
lcall
inc
loopne
repnz
or
add
movsb
outsl
mov
rorw
in
test
pop
push
dec
jns
fcompl
sub
fmul
xor
push
pop
ret
inc
insl
or
add
inc
and
popa
bound
lret
sbb
xchg
cwtl
add
xchg
out
mov
add
decl
test
mulb
out
inc
dec
mov
push
adc
xor
and
in
iret
cli
adc
subl
aas
out
jge
push
sub
stos
aas
jnp
pop
std
imul
sbb
sub
xor
push
push
pcmpeqd
lods
mov
lcall
push
pop
rcrb
shlb
out
mov
es
mov
bound
in
jmp
aaa
int
shr
mov
fucom
sbb
int3
xchg
pop
fildl
mov
lahf
pop
pop
mov
cmp
pop
or
xchg
fisubs
jge
test
sbb
push
mov
push
lcall
negl
insb
jbe
idiv
jp
dec
js
rcrb
mov
cmp
andb
rolb
repnz
imul
les
adc
dec
cmpsb
mov
sub
sub
or
add
cmpsb
sub
rcl
mov
out
subl
pusha
pop
ss
not
dec
mov
lret
rolb
cmp
movsb
daa
sbb
mov
mov
adc
adc
in
fwait
push
daa
mov
cwtl
rcrb
add
repz
add
pop
aaa
stos
pushf
dec
inc
add
call
fwait
push
xchg
push
cs
outsb
movsb
and
xor
jge
arpl
add
sub
sti
loopne
push
fsubl
dec
addr16
lahf
rorl
jo
test
cmpsl
fsubrs
push
and
daa
xchg
push
fbstp
sub
sbb
cmp
fcomps
cmp
sub
add
addl
je
lcall
xorl
movsl
scas
and
sti
pop
mov
inc
out
inc
insl
push
pop
jne
pop
fistl
xchg
arpl
test
in
pusha
pop
fistpl
fldcw
jmp
cmp
jecxz
leave
dec
mov
xor
ljmp
and
jmp
mov
aas
mov
mov
push
shll
aam
and
sbb
test
mov
cld
cs
incl
add
adc
jbe
shrl
mov
and
outsl
ret
mov
int
jae
pop
dec
icebp
mov
daa
jp
sbb
fldt
sub
mov
lahf
dec
jno
into
in
push
in
or
push
pop
add
stos
add
mov
out
xchg
imul
xchg
orl
xor
mov
xor
pop
movsl
leave
jmp
jne
in
dec
xchg
mov
popa
and
lret
lret
xorb
dec
add
lods
fildl
mov
jmp
js
imul
push
popa
jae
or
ret
jb
bound
xchg
and
push
aas
ds
xchg
inc
stc
fwait
mov
xor
aam
jge
xor
jne
mov
std
push
push
ds
dec
in
out
mov
sahf
lret
loop
sub
sub
shld
mov
imul
or
int
push
hlt
pop
out
sbb
cltd
outsb
mov
sub
out
rclb
inc
xchg
out
xchg
insl
sub
add
or
mov
xor
sbbb
addr16
and
adc
daa
sbb
ds
outsb
neg
popf
fwait
mov
inc
cmp
push
xor
loop
push
mov
popa
test
cmpsl
pushf
mov
jmp
cld
pusha
inc
inc
shrl
xor
mov
inc
push
jmp
insl
and
aas
mov
ret
mov
cmp
clc
cmpsl
mov
mov
mov
testl
notb
push
and
pop
dec
ljmp
in
std
and
jns
call
cmpsb
outsb
leave
sbb
or
cmc
popa
scas
test
dec
mov
push
inc
out
mov
or
pop
xchg
sub
push
xchg
dec
cmp
fldcw
xchg
jo
repnz
jb
add
frstor
adc
ss
sbbl
jno
dec
xchg
adc
lea
je
enter
lret
call
mov
mov
std
call
arpl
mov
sbb
aam
aam
cwtl
mov
test
je
pop
jns
cwtl
scas
popa
or
push
pushf
inc
jns
sahf
mov
xchg
movsl
mov
mov
stos
or
pusha
mov
pop
adc
test
into
icebp
loope
adc
sbbl
pop
push
aaa
mov
jle
into
movsb
inc
ret
push
fstpl
xor
mov
bound
pop
mov
lock
fcompl
inc
jp
mov
roll
or
loopne
mov
jle
inc
inc
movsb
jns
push
cld
xchg
cmp
ss
in
or
push
xorl
xor
inc
push
int3
add
daa
adc
adc
ds
hlt
sbb
shll
fwait
cmp
xchg
pop
mov
jecxz
mov
leave
rcrb
pop
sbbb
in
jge
xorl
pop
cmc
cmp
push
dec
leave
shlb
sub
in
xor
mov
xlat
sbb
insl
inc
add
out
seta
add
adc
test
lahf
ds
jnp
pop
xor
adc
ja
xor
fdivr
aad
push
fiaddl
or
loopne
add
jae
xor
mov
dec
lock
sbb
xchg
inc
stos
rorl
aaa
fwait
data16
mov
push
call
daa
xchg
inc
aaa
cs
out
jbe
inc
lods
adc
bound
aaa
pop
jmp
fisubl
jmp
push
bound
in
mov
out
cli
std
xchg
jge
mov
in
imul
lahf
inc
ds
mov
sub
add
rclb
dec
adc
lds
push
adc
mov
jge
cmp
les
outsb
mov
mov
jnp
pop
fnsave
mov
dec
int
pop
xlat
loope
push
pop
js
xchg
enter
jge
fidivl
xor
outsl
or
mov
dec
add
int
call
xlat
cmpsl
cwtl
loopne
lea
sub
or
outsb
xchg
add
inc
sub
hlt
ret
push
push
mov
xor
pushf
call
push
add
xchg
stc
dec
pushf
mov
cmp
sbb
jmp
inc
in
in
lds
lahf
add
rolb
jae
adc
push
cmpsl
xchg
push
or
fistl
cmp
out
out
call
mov
stos
mov
inc
dec
iret
mov
clc
outsb
mov
inc
test
leave
xchg
aaa
insl
mov
bnd
jns
dec
mov
sbb
scas
xor
fiadds
sub
imul
and
sbb
ja
jg
xchg
adc
rcrl
inc
inc
inc
adc
sub
or
ret
inc
test
mov
jb
sbb
das
insl
aad
and
dec
pop
and
aaa
add
in
sbb
lcall
ficoms
lea
test
insl
gs
bound
popf
xor
add
cmp
cmp
movsl
lcall
stc
xlat
push
pop
shrb
cltd
loop
pop
mov
pop
cmp
jno
ffreep
xchg
sbb
inc
gs
add
mov
xchg
sbb
mov
out
icebp
cmpsb
or
xchg
int
mov
xchg
cmp
or
imul
in
in
mov
cmc
pop
jl
inc
out
jle
xlat
lret
fmull
or
insl
lods
hlt
xor
push
jmp
cmp
sbb
sub
xchg
jge
out
dec
inc
xlat
scas
loope
lods
xchg
test
cmc
add
adc
cmp
pushf
leave
gs
flds
movsb
sub
scas
pop
jg
xor
div
popa
orl
adc
xor
fidivs
dec
test
imul
lds
imul
fadd
aas
mov
cmpsl
adc
jnp
sbbb
xor
notl
push
nop
sub
cmp
cmp
insb
scas
cltd
cmpsl
and
adc
sbb
cmp
movsb
push
lods
incb
xchg
gs
lea
es
mov
cld
loop
jb
clc
mov
dec
in
mov
pop
jne
add
or
aam
rcll
xchg
push
xchg
imull
cmp
dec
fldl
mov
cltd
mov
mov
adc
pop
adc
das
ret
sub
enter
fcompl
cmp
jmp
sub
int3
in
test
sti
or
arpl
lret
pop
lret
ss
imulb
xchg
add
mov
inc
mov
sbb
in
outsl
cmp
rorb
aad
aad
in
test
mov
add
das
mov
sbb
and
jmp
ret
cmp
enter
push
stc
jl
jl
icebp
in
push
shlb
nop
pop
sub
icebp
outsl
sbb
sbb
dec
fnsave
push
push
xchg
popf
push
jmp
push
jp
pop
rorb
cli
push
pop
leave
adc
mov
pushf
inc
stc
inc
push
ret
bound
mov
into
mov
and
dec
inc
jp
outsl
lods
sub
jl
sub
sub
sahf
cmp
xor
pop
sub
push
lods
or
adcb
push
shll
es
movsl
movsl
outsl
fisubl
sbb
fcmove
mov
stc
inc
xor
jmp
in
mov
xchg
fs
sbb
je
pusha
pop
lret
push
adc
adc
mov
push
fadds
dec
je
rcl
mov
mov
or
xor
mov
insb
outsb
popf
pushl
mov
pushf
stos
les
hlt
pop
xchg
cmp
scas
push
in
xlat
inc
std
arpl
sub
xor
add
sub
in
jbe
and
push
ret
adc
cs
int3
rcl
insl
cli
sbb
or
ret
inc
pop
inc
pop
pusha
mov
jbe
cmp
lds
in
pop
dec
inc
repz
rclb
fisubl
adc
dec
fistpll
sub
adc
into
inc
mov
stos
neg
pop
repnz
out
sbb
cmp
pop
stos
ja
in
ljmp
dec
sub
mov
dec
cld
mov
mov
ret
pop
mov
sub
mov
arpl
fwait
sbb
mov
push
inc
adc
add
pop
stc
push
inc
xor
lcall
mov
mov
out
mov
add
push
adc
mov
mov
aas
pop
roll
enter
lahf
stc
fildll
dec
push
add
cmp
mov
bound
pop
jg
xchg
xchg
adc
xor
in
int3
xchg
push
test
daa
loope
push
jne
test
daa
add
inc
lds
ret
and
lret
jno
push
lds
sbb
das
aam
lods
aam
ja
shll
cmpsl
and
jl
lods
mov
dec
ljmp
add
cmp
cmp
nop
pusha
sbb
xor
and
push
sbb
xchg
ret
std
test
mov
je
orb
jbe
out
mov
xor
pop
scas
pop
mov
mov
mov
pop
insl
ljmp
jg
xor
mov
lods
sti
dec
aaa
sbb
inc
push
aaa
test
sarb
push
ds
mov
rcl
loop
or
jge
mov
jb
fmull
cmp
or
pop
jnp
push
lahf
cmpsb
xchg
addr16
lods
sbb
fisttps
sbb
ljmp
les
lret
adc
imul
mov
movsl
adc
aad
lods
repnz
cmpsl
fisttpll
mov
addr16
push
push
lret
jno
or
pop
xchg
sbb
push
stos
fwait
xchg
inc
xchg
or
sbb
mov
mov
dec
outsb
ret
cmc
push
and
sbbb
dec
sti
adc
int3
mov
lcall
loop
mov
ds
in
daa
aad
push
lahf
repnz
call
into
and
inc
jmp
nop
adc
int
mov
xor
dec
fmuls
xor
jp
pop
inc
addr16
push
imul
mov
fstpt
test
outsl
adc
jmp
mov
inc
or
mov
inc
mov
lcall
push
dec
dec
outsl
inc
mov
add
out
jae
paddsb
incb
add
inc
icebp
enter
mov
add
roll
cmp
sbb
adc
movsl
xchg
std
mov
loope
int
mov
or
sub
in
lea
mov
xchg
mov
push
cmp
xchg
push
add
dec
imul
nop
pop
xor
add
test
stc
popf
sub
cmc
leave
mov
aas
adcl
aad
rcl
jbe
aam
adc
enter
es
cltd
hlt
sahf
xchg
loope
loopne
dec
and
inc
add
lods
out
leave
call
cwtl
sar
xchg
sahf
icebp
enter
cmp
sbb
dec
adc
mov
push
pop
mov
in
mov
mov
shrl
cmp
jmp
add
cmp
sbb
out
fdivl
repz
sub
inc
lret
jnp
mov
dec
pop
pop
mov
push
jbe
add
add
jge
mov
ja
xchg
imul
int3
imul
jg
xorb
sahf
xchg
fbld
mov
js
loopne
sbbb
xchg
xlat
pop
call
inc
mov
and
bound
shl
fcoms
mov
imul
les
pushf
mov
in
inc
mov
or
rcr
sub
xchg
adc
aaa
sub
in
adc
inc
fiadds
scas
stos
pop
in
or
pop
imul
add
les
dec
lret
cmpsl
xor
adc
mov
and
mov
shrl
jo
enter
lret
adc
inc
lods
adc
and
jmp
xchg
pushf
xor
in
sub
test
clc
icebp
aas
daa
xchg
testb
sbb
jl
dec
sub
pop
cltd
inc
add
call
push
adc
cmpsb
dec
movsl
xor
and
outsb
pop
lds
lods
rolb
dec
scas
jge
push
cmp
pusha
icebp
test
mov
aas
ret
stos
xchg
cmpsl
xchg
addb
and
cmp
lahf
cltd
enter
imul
jmp
mov
enter
ljmp
pop
mov
popa
imul
jae
dec
inc
push
push
pop
shlb
sbb
inc
push
es
pop
rcrl
inc
test
pop
cmpsl
mov
mov
in
scas
lret
mov
test
repnz
aam
pop
scas
ja
inc
adc
xchg
sub
cmp
fxch
lock
test
int3
cmc
cmp
cmpsb
mov
js
adc
inc
or
lods
jge
ret
orb
mov
stos
cmp
mov
adc
addr16
xlat
loop
jg
shl
scas
dec
sbb
std
pop
push
int
mov
and
lahf
sbb
lods
sbb
lcall
out
or
inc
sbb
push
dec
fwait
sub
xchg
or
js
fcoms
mov
pop
shl
mov
jbe
adc
push
add
icebp
xchg
shr
cmpsl
adc
xor
mov
xchg
push
sbb
movsl
fwait
daa
sbb
xchg
jne
mov
into
loop
cmp
out
lret
adc
dec
jecxz
push
dec
aam
inc
and
call
jbe
loopne
dec
inc
lcall
jg
xorl
mov
add
sub
icebp
or
mov
inc
pop
inc
rcrl
pop
in
sbb
popf
int3
aam
ret
inc
mov
push
test
inc
pop
jno
xchg
enter
xchg
and
inc
mov
and
aam
out
xchg
inc
fstpt
pusha
inc
lods
aam
sarb
insl
mov
js
mov
call
jnp
out
add
sarl
xchg
loop
dec
ret
adcb
cmc
sbb
mull
fcomp
or
push
push
inc
hlt
cltd
dec
jo
cld
sti
insb
xchg
ss
sbb
jae
xor
loop
xchg
adc
mov
dec
cmp
clc
cmp
xchg
popf
fadds
rcl
lret
int3
sub
pop
jo
push
add
pop
mov
bound
in
sbb
hlt
xlat
cmc
gs
pop
in
inc
push
cmc
fistps
pop
xchg
lea
jb
scas
insb
loopne
ret
fcomps
jno
test
push
mov
js
push
or
popa
out
jo
hlt
imul
xchg
sbb
and
sub
subb
push
mov
mov
js
mov
ljmp
push
fdivrl
jp
xor
das
adc
scas
adc
mov
mov
shll
int
jnp
pusha
push
insb
mulb
mov
mov
daa
xor
out
nop
hlt
dec
imul
notl
stos
xlat
ljmp
pop
mov
sub
test
fnstcw
lcall
or
add
lods
das
xchg
fidivs
sub
hlt
sbb
bnd
and
sbb
frstor
icebp
push
cmp
jo
call
pop
jecxz
mov
les
xchg
cltd
inc
lods
mov
je
inc
and
xor
sub
int3
int3
ds
mov
dec
or
sub
bound
add
or
addr16
jno
dec
xlat
lahf
mov
jns
cli
ss
fidivrs
mov
cmp
je
lods
adc
adc
or
loop
add
leave
sub
or
mov
shrb
jp
aad
insl
insb
shll
pop
pop
mov
jmp
fwait
aaa
bound
cmp
fsubp
or
mov
es
and
cwtl
repnz
or
repnz
pop
xor
cld
aad
mov
mov
lds
xchg
and
repnz
xchg
sub
mov
jg
cmpb
or
sub
sub
in
ret
and
mov
dec
cmpsb
mov
add
out
je
insb
or
sub
addl
or
mov
jl
ljmp
and
sbb
xchg
sub
mov
aad
add
cli
fstpt
jle
xchg
adc
aaa
add
xor
and
inc
xlat
mov
cmp
cmp
notl
das
clc
xchg
mov
inc
sub
mov
or
fwait
push
sub
out
lahf
test
mov
adc
ss
leave
or
syscall
lds
hlt
sbb
sbb
adc
aad
inc
orl
ret
js
es
adc
and
push
push
notl
scas
orl
in
lret
push
test
stos
and
sub
xchg
out
jle
int3
inc
inc
pop
in
mov
adc
das
lock
adc
cltd
sbb
add
xchg
lds
in
enter
adc
inc
jecxz
adc
jge
ja
jge
pop
insl
inc
lds
dec
scas
jbe
pushf
mov
arpl
mov
mov
jmp
cmc
fadds
sbbl
cli
aaa
pop
pop
stc
xchg
add
mov
push
popa
mov
mov
repz
sti
inc
inc
add
inc
mov
push
push
in
sub
sbbb
sub
out
mov
loope
aas
dec
pop
push
sahf
pop
fistps
cmp
lret
loopne
sub
lock
mov
sub
dec
push
stos
arpl
push
loop
enter
cld
negb
xor
mov
inc
jmp
or
push
fldt
lcall
stos
sub
lret
pop
jns
scas
cwtl
lea
fwait
into
sub
cmpsl
pop
fs
mov
jbe
shlb
and
pop
inc
subl
ss
sbb
push
jecxz
leave
inc
mov
cmp
imul
mov
dec
lock
repz
mov
push
out
xchg
addl
and
jnp
inc
inc
dec
or
shll
cmpsb
sti
cmp
fs
movsb
fdivrs
ljmp
lret
jo
test
adc
mov
adc
cmp
bound
cmp
shlb
jecxz
sbb
mov
pushl
not
fcoms
fisubl
cmp
ljmp
push
and
push
je
nop
imul
cmp
pop
or
das
test
sub
sti
fldenv
lds
ds
xchg
fldcw
push
sahf
sbb
int3
push
stos
xor
adc
sbb
mov
adc
pushf
mov
add
int
lcall
xchg
test
sbb
dec
inc
and
sbb
or
sub
adcl
movsl
bound
and
ja
in
jmp
jle
push
push
xor
dec
test
sub
fisttps
adc
or
aam
add
inc
cmpb
into
jbe
xor
popa
int
movl
aam
sbb
nop
mov
movsl
jae
push
push
xchg
fnop
pushf
pop
push
jle
xor
push
dec
jno
in
popf
lock
jne
out
in
or
push
pop
adc
test
xchg
and
ds
adc
addr16
outsb
jecxz
fdivs
mov
cmp
shll
or
dec
sbb
jg
lcall
popa
mov
jl
push
sub
push
shl
sub
cmp
add
test
adc
lods
in
dec
lods
and
fadds
cmp
xchg
test
je
dec
int3
call
testb
decb
ficomps
dec
cmp
mov
int
pop
mov
bound
sbb
xchg
data16
push
dec
pusha
fbstp
rcrb
bound
push
cwtl
sub
ret
test
jp
and
push
js
fcoml
cltd
inc
in
xchg
cltd
mov
mov
xchg
mov
jg
inc
jecxz
push
adc
dec
xchg
pop
push
dec
mov
lcall
xchg
pop
xchg
ljmp
cwtl
notb
xor
push
nop
sub
cmc
pop
cmp
outsb
fwait
mov
imul
lret
hlt
fisttpll
mov
pop
cmp
jge
and
mov
scas
pusha
sbb
inc
sub
jl
or
pop
test
aam
out
pop
shl
jp
mov
mov
hlt
mov
sbb
push
xor
cmp
outsb
or
scas
aas
push
inc
pushf
std
ret
clc
pop
push
mov
pop
pop
fmuls
inc
out
xlat
rorl
jmp
push
loop
mov
push
lahf
jp
mov
add
or
jae
jl
push
mov
add
lahf
popa
sbb
decb
inc
je
notl
cmp
ja
icebp
nop
les
sbb
add
popfw
inc
fistps
mov
es
aas
sub
add
push
add
push
push
mov
fisttpll
stos
xchg
add
mov
sbb
xchg
add
out
es
iret
mov
or
push
je
cmp
sbb
cmp
js
ljmp
hlt
inc
sahf
enter
lahf
xchg
push
lret
bsf
add
fsubl
mov
popa
jmp
lret
loop
mov
jp
lds
sub
pop
xchg
std
pop
xor
out
xchg
cwtl
mov
jmp
leave
les
pop
rorl
pop
sub
roll
stos
int
pop
sbb
cmc
insb
scas
gs
icebp
xor
in
mov
inc
test
jnp
mov
pop
push
pop
cmp
pop
out
and
mov
ljmp
cli
insl
mov
sub
shll
dec
mov
lock
pusha
xor
adc
cld
test
les
mov
jbe
in
mov
test
add
mov
daa
out
dec
icebp
inc
mov
add
sub
pop
add
add
xor
adc
addr16
testl
out
jecxz
cmp
mov
shll
aad
dec
cwtl
dec
sti
lret
cld
mov
ss
mov
jnp
mov
fisubs
cmp
adc
andb
sahf
ss
xchg
lds
call
scas
xor
ror
loopne
test
jmp
cltd
mov
ds
and
out
pop
rorl
mov
sub
xor
and
repz
or
sbb
xlat
testl
pop
popa
fisttpll
icebp
loope
push
inc
or
std
pop
test
scas
fstpl
push
scas
sub
lods
cmp
jp
dec
push
js
addl
dec
jnp
mov
call
mov
rcrl
in
jae
mov
lods
push
pop
xchg
movsb
mov
jno
inc
fdivrs
jmp
outsl
ja
or
and
cs
sbb
dec
jnp
aaa
or
int3
scas
inc
xchg
fdivs
xor
xor
shll
rcll
or
sub
mov
mov
ficomps
mov
daa
std
sbb
cmc
icebp
and
fsubp
filds
push
dec
mov
movsl
outsl
inc
das
fisubrs
add
dec
mov
mov
push
ds
mov
xlat
int3
cmp
push
xchg
sbb
mov
pop
and
stos
icebp
add
or
and
test
jmp
fists
test
adc
dec
mov
mov
daa
inc
sub
call
les
jecxz
mov
mov
xchg
mov
stos
in
out
lea
fisubs
jp
or
xchg
sbb
and
and
ds
jno
mov
rcll
sbb
js
les
out
add
ret
push
fs
cmp
add
jecxz
push
aaa
fiaddl
pop
lcall
ret
loopne
fnsave
jl
iret
add
popa
cmpsb
inc
jecxz
jo
es
mov
outsb
mov
popf
mov
int
xchg
repz
push
test
cwtl
pop
aad
fs
pop
cli
dec
ficoms
dec
mov
push
jbe
add
andl
or
xchg
test
and
out
pop
push
jo
mov
cmc
popa
ljmp
lea
push
inc
out
add
mov
xlat
leave
ja
out
jle
xor
cmp
or
scas
sub
aad
imul
xchg
pop
stc
xlat
xchg
xchg
je
cmp
js
jle
cmpsb
mov
roll
jbe
xchg
dec
dec
pop
int
or
pop
scas
aas
xchg
xchg
fs
push
stos
sbb
jns
adc
mov
pushl
mov
inc
pop
cld
jns
push
jmp
mov
jg
mov
mov
cmp
add
lods
fcompl
fs
cltd
dec
add
loope
out
dec
adc
and
dec
xchg
call
adc
scas
xchg
decl
je
pusha
aaa
cmp
test
jmp
ljmp
mov
popf
pusha
pop
jo
inc
jbe
add
cltd
cld
dec
in
test
dec
adc
ja
les
fdivrs
js
adc
push
gs
mov
loope
cwtl
pop
lret
data16
sbb
hlt
pop
xchg
fs
imul
mov
dec
cmc
pop
push
bound
inc
test
fiadds
add
add
fdivrs
cwtl
inc
dec
dec
sti
aam
pusha
xchg
aam
jno
cwtl
xor
and
imul
dec
arpl
test
inc
inc
add
pushf
das
lods
mov
cltd
mov
popa
add
into
xor
and
aaa
movsl
div
cwtl
adc
sbb
dec
inc
push
ja
lods
dec
xchg
push
add
clc
dec
pushf
and
add
mov
sub
push
add
sbb
pop
mov
es
pop
stos
pop
jle
adc
out
nop
cmp
sti
xchg
mov
xor
mov
pop
ret
testl
sub
loopne
loopne
inc
jl
xchg
lcall
adc
bound
inc
inc
lahf
rcl
clc
lret
mov
in
jp
or
jl
cmp
mov
in
push
mov
mov
lea
mov
cltd
and
and
jmp
inc
in
push
cmpsl
inc
call
xchg
or
xor
xchg
scas
jbe
jns
inc
cwtl
dec
xchg
int
add
dec
sahf
fucomi
pop
nop
es
and
jle
or
call
inc
mov
ljmp
add
popa
test
sub
dec
jnp
loope
lahf
addl
shr
push
sbb
fstpt
push
popf
jmp
fcmovne
imul
fimull
mov
sub
jmp
cmc
adc
mov
mov
outsl
out
cmp
aam
sahf
jmp
mov
adc
clc
adc
mov
xchg
inc
mov
rcrl
aam
arpl
pop
dec
loop
hlt
cli
lds
shrl
daa
push
cvtps2pi
js
cmp
stc
and
ja
popf
outsb
fcomps
or
fsubl
ret
arpl
adc
pop
xchg
xor
sbb
jmp
cs
mov
aaa
push
adc
hlt
push
rcrb
shl
loopne
pusha
dec
shrb
aad
jne
dec
js
movsl
jne
inc
pop
lcall
xchg
loope
xchg
mov
sub
and
push
mov
push
and
lahf
jbe
and
xor
gs
ja
cmpsl
js
xor
jbe
and
insl
mov
xchg
xchg
pop
pop
mov
adc
inc
mov
xchg
fdivrs
enter
cmc
adc
sub
inc
push
push
and
or
adc
add
sbb
push
jecxz
insb
pop
pop
andl
and
pushf
mov
pop
dec
nop
jo
jl
sub
inc
pop
ljmp
xchg
iret
ret
mov
insb
test
xchg
pop
jae
jo
popa
dec
or
xchg
pop
mov
rcll
sahf
and
rcrl
mov
inc
mov
inc
mov
push
cs
mov
nop
sbb
loope
idivl
jge
jno
mov
test
xchg
xorb
insl
lcall
lcall
sub
sub
popa
push
rep
xchg
push
or
pop
mov
sbb
sbb
cld
gs
adc
mov
aaa
call
add
and
addb
pop
sub
lods
int3
inc
int3
mov
pop
stc
stos
pop
mov
dec
mov
pop
dec
cmpsl
xchg
pop
stos
add
pop
mov
add
sarl
int3
fisubl
std
or
pop
push
mov
fnstcw
pop
stc
test
push
data16
lret
or
add
sub
fadds
sbb
out
test
int
aam
aad
fsts
fcomp
dec
sub
in
ljmp
cs
clc
out
pop
cmc
out
lods
push
add
add
paddq
arpl
dec
xor
in
in
loop
test
lods
les
and
sbb
stos
into
push
add
and
pop
mov
sbb
rep
dec
rorb
and
arpl
pushf
lods
jmp
pusha
sbb
mov
and
mov
loope
or
int
pop
xchg
xchg
xadd
sub
movl
js
pop
push
mov
jbe
lods
loop
dec
loopne
mov
movsb
pop
mov
inc
jp
in
pop
dec
mov
test
dec
push
xchg
sarb
in
inc
jmp
mov
and
lock
jns
call
push
insb
dec
pop
xor
sbb
test
jl
pop
stc
clc
lea
inc
loope
int
fdivrp
mov
sub
and
add
ljmp
push
jle
cmpsb
mov
or
std
dec
out
out
dec
add
mov
rolb
and
xchg
and
gs
sub
adc
movsb
jbe
ds
push
in
dec
lea
push
lods
xchg
pop
xor
and
pop
imul
pop
popf
jo
adc
jmp
pop
imul
xchg
jmp
dec
pop
add
xlat
stos
icebp
sub
fiaddl
push
lea
or
popa
clc
stos
insl
icebp
pop
push
or
xor
outsb
lcall
xor
pop
insl
stos
or
insl
das
mov
push
test
mov
cmc
or
shrb
lret
xor
roll
mov
icebp
sbb
xchg
push
mov
sub
mov
test
dec
ss
cmp
inc
loopne
xor
xchg
xor
cmp
pop
incb
rclb
sti
jle
or
jle
adc
shll
lods
orb
push
ficoms
cmp
mov
add
scas
ja
or
inc
pop
mov
mov
std
add
pop
jecxz
jae
push
out
sub
adc
shl
mov
xor
xchg
xchg
es
cmp
mov
pop
mov
gs
cmp
push
stos
neg
fcmovb
call
or
lret
or
daa
or
mov
jl
mov
nop
jbe
insl
fcoml
dec
pop
and
aad
mov
mov
ja
insb
lret
movsl
cmp
sbb
xchg
scas
sub
ficoml
dec
pusha
xorb
push
jb
insl
jle
dec
fwait
xchg
sub
mov
cmpsl
jns
pop
jl
clc
cmp
pop
mov
je
lock
stc
in
enter
and
mov
jb
mov
loope
mov
icebp
mov
adc
pop
xchg
ss
add
add
rcl
mov
ficoml
mov
cmpsb
test
fwait
lcall
xchg
fwait
push
fnstsw
push
mov
xchg
xor
lret
mov
cmpsb
or
je
pop
dec
push
cmp
cltd
lret
pop
xchg
rclb
int
repnz
lods
pusha
sti
mov
or
dec
fstpt
mov
fidivrl
lret
cwtl
or
lcall
shrl
in
pop
out
push
add
mov
fidivs
mov
push
add
ret
test
sbb
das
pushf
xor
push
cmp
inc
sarl
pop
aaa
pop
mov
outsl
cmpsb
ret
jae
add
add
subb
xchg
dec
loopne
test
push
or
or
pop
xchg
sub
cmp
adc
test
arpl
adc
inc
add
test
pop
nop
test
in
iret
add
into
call
mov
sbb
dec
adc
mov
push
adc
or
push
cwtl
mov
adc
insb
daa
aam
adc
sbb
popa
jno
xchg
imul
aam
or
and
xor
stc
ja
test
pop
fincstp
cld
adc
xor
inc
mov
pop
leave
pop
pop
xor
inc
xchg
push
out
pop
decb
popa
cwtl
sub
push
popa
lret
xchg
jge
xchg
and
xor
loop
mov
adc
mov
sbb
add
xchg
mov
fucomi
cmp
inc
ficompl
mov
mov
shlb
aad
gs
add
loop
jnp
in
fistl
fisttpl
dec
xchg
or
into
out
rcll
outsb
dec
fmulp
ljmp
fildl
pop
xchg
pop
sub
mov
pushf
shlb
mov
je
shl
mov
xor
arpl
sahf
mov
inc
push
idivl
outsb
nop
mov
subb
pop
pop
inc
sbb
gs
cmpsb
popf
pop
add
lret
mov
xchg
in
mov
fisttps
mov
aas
push
and
dec
rorb
ljmp
clc
jge
stos
mov
into
cs
inc
jl
pop
add
mov
sub
push
imul
pop
cltd
pusha
nop
lods
xchg
dec
fcomi
mov
hlt
mov
sbb
gs
mov
dec
test
loop
hlt
jb
inc
loop
mov
int3
popl
lds
fucomi
insb
push
imull
cltd
jge
das
aas
cmovnp
push
adc
out
pop
adc
popa
or
push
out
les
pop
fdivl
xchg
dec
or
hlt
xor
dec
add
add
dec
push
sbb
push
sti
mov
lret
cmc
fadds
mov
mov
js
into
xchg
push
inc
jno
arpl
cmpb
insl
xor
test
in
jmp
insl
dec
fwait
inc
mov
js
pcmpgtd
jle
dec
nop
pop
jne
cmp
neg
jo
negl
inc
push
inc
lods
fldl
aad
scas
daa
xchg
filds
adc
adc
xchg
fmull
mov
jne
repz
das
jge
shrl
push
lcall
popf
data16
ja
sub
push
sarl
cmp
sahf
js
mov
pop
jecxz
mov
push
push
add
clc
or
std
lahf
enter
dec
adc
cmp
xor
dec
mov
inc
inc
es
jmp
push
sub
cwtl
repz
cmpsb
jo
jge
cmp
mov
mov
mov
and
inc
dec
jl
roll
stos
arpl
cmp
mov
sub
arpl
dec
pusha
jo
inc
xchg
cwtl
jle
iret
jle
cwtl
loopne
mov
aas
mov
int
imul
scas
test
fldt
mov
test
rcrb
outsl
add
movsl
sub
pop
pushf
and
pop
aad
inc
dec
nop
sahf
and
clc
mov
sahf
hlt
jge
mov
clc
push
lods
arpl
in
pop
pop
mov
test
test
ja
sbb
rsm
push
jp
push
inc
lods
mov
xchg
orb
je
or
xchg
or
dec
subb
push
fisubs
mov
notb
out
push
push
scas
cmp
cmpsb
je
jmp
lds
vpunpcklwd
sbb
sbb
inc
jae
cltd
sahf
stc
xchg
lcall
xchg
pusha
divb
ret
add
jecxz
or
test
arpl
xor
cmp
xchg
cmp
and
mov
lods
jb
fs
sar
pop
rcrl
push
sub
ss
cmp
imul
adc
int3
sbb
pop
adc
aam
mov
jmp
cltd
popf
cmc
xlat
adc
outsl
jo
sbb
es
out
clc
mov
shll
mov
addr16
jne
loop
mov
sbb
cli
lret
ficoms
xchg
or
pshufw
inc
pop
lret
jnp
sub
imul
xorl
pusha
xor
push
dec
mov
dec
jge
les
or
and
fistpll
and
inc
inc
imul
xor
sub
arpl
pop
pop
popa
bound
out
mov
das
jl
inc
dec
pop
push
jp
fiaddl
pop
out
mov
dec
jo
dec
aad
das
adc
add
add
dec
test
sbb
jae
inc
mov
movsl
lcall
mov
lea
sub
inc
jns
icebp
std
add
sub
jne
sbb
push
mov
mov
sub
jge
aas
xor
outsl
xchg
sahf
cmp
fildll
out
mov
pop
mov
andb
loopne
xor
mov
arpl
inc
leave
dec
and
push
scas
dec
adc
or
cwtl
in
mov
inc
push
repnz
fnstsw
loope
xor
pop
jecxz
pop
mov
mov
cmp
jg
cmpsl
mov
push
sub
ror
mov
scas
leave
pusha
mov
outsb
mov
inc
mov
sbb
into
push
mov
xor
sbbl
int3
pop
push
ja
mov
push
cld
outsl
mov
sbb
and
dec
and
enter
jmp
jb
push
scas
adc
jl
out
test
add
push
lcall
pop
into
inc
push
sbb
lea
push
or
add
push
mov
inc
loop
mov
add
das
xorb
mov
jnp
stos
jle
mov
mov
sub
das
ret
mov
or
fcompl
push
lds
pop
push
les
ljmp
sbb
push
mov
test
push
add
inc
fcomp
scas
lods
into
stos
mov
or
out
mov
pop
mov
inc
xlat
mov
push
jecxz
aaa
rorl
das
add
jmp
sbb
call
push
adc
addl
sub
mov
push
enter
dec
popa
daa
xchg
and
insb
cmp
jge
in
jge
popf
insl
dec
xor
mov
jmp
inc
mov
rorb
popf
add
scas
gs
sub
cwtl
in
inc
out
and
ja
xchg
sbb
inc
dec
movsl
dec
cmp
push
jmp
aas
push
lea
jne
add
xchg
ffreep
dec
lods
push
mov
add
mov
dec
jl
jno
aas
adc
js
cwtl
js
mov
dec
movsb
pop
enter
cmp
std
sbb
mov
or
or
stc
cwtl
int
shl
xchg
into
cltd
mov
mov
mov
dec
push
cs
stc
das
xor
ret
bound
xor
push
and
pushf
je
lods
jnp
inc
repz
push
imul
or
jae
xlat
xor
push
or
repnz
jne
mov
cmpsb
jp
icebp
dec
leave
in
in
dec
stos
in
faddl
add
fwait
pop
dec
adc
shrl
ret
repz
call
push
pop
lods
mov
sbb
test
pop
inc
xlat
and
and
lret
movsl
loop
push
mov
mov
not
leave
int
sbb
mov
jns
repnz
push
orps
pop
int
movb
push
cmp
test
cmp
mov
sub
xor
mov
pushf
dec
imul
pop
mulb
mov
dec
add
push
push
push
in
inc
sbb
jl
fistps
mov
out
inc
xchg
dec
lock
mov
or
jmp
adc
push
icebp
cmp
and
fidivrl
cltd
sbb
mov
adc
adc
mov
jno
not
test
shll
test
mov
xor
xor
pop
loop,pt
lds
mov
imul
test
adc
mov
sub
jns
jbe
sub
sti
add
out
sub
scas
sbb
jbe
sub
lret
xchg
je
cmp
mov
push
adc
cmp
push
lea
push
or
jno
nop
arpl
xlat
pop
sbb
sbb
icebp
or
clc
test
sbbb
push
fnstenv
xor
pop
cmp
sub
pop
cltd
lea
bound
sub
addr16
outsl
outsl
pop
pushf
cmc
sarl
dec
mov
jne
push
mov
xchg
popa
push
xchg
lods
jbe
push
lods
rolb
call
or
rcl
jle
pop
daa
jo
adc
test
adc
in
sti
inc
std
inc
adc
rol
lock
fistl
and
cwtl
gs
fistpll
jmp
dec
cmpl
inc
jp
xchg
mov
rcrb
in
fcomip
imul
divb
adc
cmp
cmp
sbb
mov
icebp
mov
and
cltd
loopne
sub
add
dec
push
dec
push
xor
and
mov
sbb
lret
mov
and
dec
loop
iret
jle,pt
push
xchg
scas
xor
dec
iret
mov
mul
iret
sbb
movsl
or
push
fwait
pop
jno
push
push
jo
outsb
jno
xchg
rol
stos
mov
test
jl
in
xor
add
or
adc
imul
and
jg
in
sub
mov
pop
and
push
subb
mov
fnsave
jmp
dec
pop
push
test
adc
sarl
push
mov
cmc
lods
sbb
and
loopne
pop
jp
jl
ret
xor
ds
iret
insl
mov
and
pushf
sahf
aas
mov
jno
mov
clc
adc
cli
rcrl
xorb
and
mov
add
cltd
cmp
in
mov
cmp
jne
lock
add
inc
xchg
mov
rol
cmpsl
jge
cmp
test
push
fisubs
fcoms
hlt
jno
inc
test
cmp
gs
push
lods
icebp
or
pop
test
jl
and
pop
xor
movsb
addr16
callw
mov
add
movsb
cmp
mov
sub
leave
jmp
testb
dec
repnz
mov
repnz
mov
push
jo
in
lea
enter
call
xor
and
testl
sub
inc
pushf
imul
dec
or
ss
fsubr
dec
out
repnz
sub
test
lret
lret
mov
insb
adc
add
dec
aad
dec
and
sahf
cld
movsb
outsl
loope
pushf
and
pushf
or
mov
mov
cwtl
mov
pop
lcall
jo
vpsraw
scas
add
add
in
js
pop
loope
pop
test
test
adc
pop
fsubl
scas
outsb
loope
xchg
fidivrs
cmp
cmpsl
into
mov
push
dec
pop
sub
ret
imul
jnp
inc
xchg
call
mov
mov
scas
shlb
xorl
or
mov
cmpsb
sub
shl
or
fwait
mov
cmpsb
or
dec
std
jne
cwtl
adc
in
push
pop
test
or
push
ret
add
pusha
jne
lock
adcl
inc
lcall
adc
or
or
iret
push
hlt
jmp
shlb
pop
lret
jle
das
ljmp
jg
frstor
in
xchg
scas
out
pop
dec
subb
xor
add
out
mov
in
inc
repz
sbb
cmp
loopne
sbb
or
pop
gs
test
mov
jne
aaa
adc
leave
sbb
pop
cmp
test
mov
mov
and
lea
jo
xchg
jge
out
fsubr
push
ret
sbb
nop
jecxz
jno
or
das
jb
mov
push
mov
enter
loop
int3
mov
inc
sahf
int
in
out
aam
push
mov
lock
hlt
leave
fnsave
cltd
xlat
sub
icebp
clc
mov
shr
and
xchg
data16
lea
cltd
mov
dec
stos
es
enter
adc
mov
or
mull
test
dec
and
fstp
fxch
jge
mov
xor
dec
push
test
push
sahf
or
cmp
and
mov
in
xchg
pop
stos
push
imul
subl
adc
dec
decb
sub
mov
test
inc
mov
lock
sbb
pop
fsubs
mov
dec
jle
lret
add
xor
sub
mov
mov
mov
ds
jmp
sbb
shl
xor
add
push
shlb
push
cmp
int3
push
dec
xor
xchg
and
scas
inc
xor
fs
js
push
adc
add
int3
jb
ja
pop
pop
inc
call
stos
adc
popf
xlat
loope
mov
pop
std
inc
sahf
jle
ret
push
and
xchg
aam
mov
push
inc
push
test
popf
enter
adc
xor
jle
je
shll
shl
adc
xchg
pop
call
cmpsb
adc
int3
mov
pop
pop
xor
icebp
mov
dec
or
scas
lods
sbb
adc
jecxz
add
add
cltd
sub
insb
fists
test
add
dec
push
sahf
fiaddl
faddp
push
cmp
xchg
cwtl
push
mov
test
jbe
cmp
rcl
cmpsb
add
cmp
push
leave
fisubl
fs
stos
mov
nop
xchg
test
mov
std
inc
rol
ss
les
les
or
sub
imul
into
out
sub
js
stos
fdivl
imul
mov
fidivs
or
jecxz
das
loop
adc
inc
adc
jnp
sub
repz
inc
push
mov
mov
jg
jg
aad
shrb
sub
cld
push
orb
or
sub
mov
ficoml
scas
jae
adc
ret
cmp
push
int
es
inc
das
pop
pop
lahf
and
jl
xor
setae
add
lahf
or
adc
adc
ljmp
cld
ret
jmp
push
mov
push
scas
notl
sbbb
lcall
xchg
or
xchg
fiaddl
test
lods
pop
xlat
push
cwtl
inc
push
cmp
or
fists
imul
push
cmc
imul
imul
push
lods
test
xchg
inc
dec
out
std
int3
int
or
push
mov
pop
fcmovu
repz
stc
popa
and
shll
sarl
daa
xor
pop
jmp
mov
sbb
out
sub
lods
sbb
inc
shlb
mov
and
imul
add
rcrl
xchg
pop
aam
push
and
pop
xor
scas
mov
cmp
pop
movsl
xchg
mov
clc
pop
inc
adc
lahf
hlt
fxch
xor
xchg
inc
sub
or
std
iret
push
pop
or
push
out
xchg
rcrl
mov
pop
in
out
aad
pushf
pop
push
pop
repz
jne
mov
or
in
bound
and
mov
hlt
out
std
xor
loope
mov
sti
mov
jb
rcrl
int3
cmp
out
lock
data16
pop
xor
fmuls
cmp
or
inc
mov
outsl
sahf
or
repnz
pop
fnstenv
mov
fld
pusha
jnp
dec
or
or
xchg
pop
push
add
test
add
dec
adc
jmp
int
popf
add
jle
mov
insl
dec
ret
aam
fsubs
rorb
jmp
jp
bound
dec
sub
pop
or
das
cmc
sti
out
mov
scas
push
icebp
test
cmp
stos
jno
ja
loop
push
into
jns
add
nop
popa
pop
xchg
or
jo
dec
daa
call
test
out
inc
aaa
sbb
pop
jmp
popf
and
add
enter
cs
aas
xor
jge
movsb
mov
jecxz
ret
pop
sub
sub
out
scas
in
mov
in
gs
fcoms
inc
pop
push
push
or
mov
xchg
mov
lds
lea
push
push
push
out
in
aam
push
cmp
add
lds
cli
or
push
xor
sbb
inc
dec
aam
ja
int
mov
mov
lret
jns
and
call
cmpsb
mov
mov
popf
shlb
jns
loop
lock
fisubrl
sub
int
out
imul
inc
test
lods
shr
dec
inc
jecxz
das
adc
dec
sarb
push
jmp
and
pop
loope
int3
sbb
cwtl
das
loopne
xchg
pop
cmp
xchg
outsl
xchg
addr16
jnp
jmp
mov
sbb
mov
xor
lret
nop
xchg
xor
xchg
loope
xor
stc
iret
sti
fistpl
cli
cs
mov
ret
push
jne
push
add
lcall
adc
insl
or
inc
and
dec
jecxz
push
ja
iret
scas
xor
dec
push
stos
and
adc
xchg
mov
cld
or
fwait
sbb
xlat
ds
shlb
cli
cwtl
pop
leave
add
xchg
jbe
jo
cmp
inc
dec
inc
sarl
add
dec
ficoms
inc
cwtl
push
lds
sub
fmull
pushl
jmp
or
iret
ja
dec
push
push
dec
and
xchg
push
outsb
sbb
in
pusha
ljmp
sub
ljmp
stos
fsubrp
or
sub
or
loop
push
movsb
push
insl
test
dec
hlt
nop
xor
jmp
push
add
out
sub
addb
pop
and
pop
dec
sub
mov
outsb
mov
aad
xor
sbb
dec
or
ficoml
add
pop
cmp
stc
xchg
out
repz
imul
xchg
xlat
lods
cmp
rcrl
mov
push
push
xor
in
jmp
pop
daa
icebp
ret
jmp
dec
or
add
sub
testb
ficoml
loope
lds
or
mov
popa
movsb
sub
jb
mov
or
jns
mov
pop
xlat
das
xchg
mov
cmpsb
call
lock
xor
into
add
mov
sbb
pop
jb
xor
or
aas
xchg
add
addr16
sub
inc
les
xor
test
lods
and
xor
addb
inc
jp
sbb
test
push
repnz
adc
sbb
adcb
xor
stc
hlt
xchg
xchg
mov
lock
in
mov
cmpsl
xor
sub
dec
jp
lcall
xchg
arpl
lret
stos
jns
sub
push
and
push
in
push
add
dec
mov
loop
add
test
mov
loop
add
or
fimull
xchg
test
ss
or
lods
ficoms
pop
mov
jmp
out
aas
movsl
mov
mov
mov
mov
pop
inc
imul
sub
jg
outsb
mov
adc
scas
sub
cmp
inc
push
dec
push
mov
cmp
cld
pop
xchg
iret
out
ss
pusha
add
insb
in
out
push
outsb
mov
hlt
dec
push
cmp
insb
xor
mov
aas
push
mov
mov
and
out
sub
hlt
icebp
pushf
push
mov
lea
movsb
mov
cmp
push
cltd
sbb
fistps
push
cmp
lods
daa
xchg
or
imul
dec
jns
xor
add
inc
test
inc
stos
adc
test
cmpsb
cmpsl
cmp
dec
sub
xlat
xor
insb
push
inc
sbb
shl
adc
in
es
das
jb
lcall
mov
inc
je
mov
xchg
rcrl
gs
addr16
mov
push
jmp
js
jb
inc
push
fistl
add
jl
jnp
out
test
aad
test
push
or
sbb
cwtl
call
mov
mov
hlt
movsb
mov
add
add
pop
dec
mov
insb
cld
xchg
inc
sub
or
mov
test
aaa
xchg
in
into
cli
mov
mov
inc
sbb
pop
repz
sub
inc
push
sub
loop
mov
pop
test
sub
and
adc
sar
cmp
repz
sbb
push
or
jmp
cmp
push
mov
out
outsb
xor
xchg
and
mov
mov
add
xlat
daa
addr16
cmp
clc
and
ficoml
and
vandnpd
testl
scas
in
cld
stos
imul
and
mov
enter
jge
ret
lods
ljmp
pop
popf
frstor
and
aaa
inc
jmp
dec
inc
jl
xor
push
lret
mov
movsb
jo
jmp
add
xchg
pop
cmp
and
mov
cli
mov
cmp
dec
stos
mov
pop
xlat
popf
sub
jmp
jae
aaa
mov
mov
or
inc
je
sbb
test
rolb
xor
ds
lahf
loope
and
push
int3
jmp
les
js
sti
push
push
dec
mov
adc
pop
pop
fidivl
jno
orl
and
mov
enter
stos
jb
add
das
fstpl
or
rclb
dec
cs
lcall
pop
lods
test
ja
lods
mov
in
mov
sbb
jne
add
aam
shlb
xchg
cmp
sub
dec
int3
orl
cld
mov
loopne
jg
jmp
push
sub
lods
xor
out
into
add
and
push
int
fldt
je
inc
std
xchg
add
cltd
imul
mov
into
pop
mov
mov
movsl
jnp
pop
lea
aam
sub
pop
xor
repz
adcb
pop
mov
mov
xor
adc
xor
imul
push
sub
cmp
xchg
add
inc
push
jnp
scas
iret
fsubrs
rcll
dec
outsl
lahf
lret
xchg
or
in
arpl
mov
adc
xchg
sub
pop
stc
dec
mov
mov
pop
add
inc
aaa
aam
das
xchg
loop
iret
jno
imul
xor
or
daa
adc
popa
jl
xchg
mov
lahf
enter
push
inc
mov
mov
cmp
in
jmp
fimull
loopne
xor
ja
push
cmp
xchg
push
in
out
fidivrl
sub
pop
sbbl
fnsave
xchg
in
xorb
stos
movsl
dec
adc
mov
out
sbb
cmp
pop
cmpsb
xchg
cmp
scas
jl
pop
mov
lcall
adc
add
cltd
sbb
cmp
jmp
adc
int
jno
arpl
mov
icebp
dec
sbb
jge
lock
mov
gs
pushf
pop
outsl
mov
mov
xchg
jmp
push
mov
inc
pop
adc
push
xchg
adc
xchg
cmp
les
jno
mov
jno
inc
test
movsb
imul
mov
decb
xchg
daa
mov
xchg
insl
mov
fs
out
add
mov
xlat
test
jno
xchg
ret
enter
mov
repnz
pop
sbb
jl
cmpsb
rclb
add
aaa
cmc
neg
mov
xor
cmp
xchg
enter
sahf
movsl
insl
cmp
mov
jbe
rcr
testl
popa
popa
mov
or
pop
cmp
rolw
and
jle
pop
lcall
and
sbb
fldl
leave
out
mov
fdivrs
pop
mov
cmp
jne
adc
sub
pop
cmp
out
adcb
jmp
int
mov
xor
pop
movsb
int3
xchg
fwait
dec
in
mov
ret
jmp
push
xchg
stos
sets
pop
inc
xor
inc
shlb
mov
jb
pop
test
xchg
stos
mov
pusha
mov
mov
adc
sahf
xchg
clc
jecxz
ss
pop
imul
dec
popf
jmp
jo
adc
aas
xor
push
jl
push
dec
imul
bnd
cmc
push
lahf
mov
xor
push
outsl
add
pop
pop
cmp
xchg
pop
aaa
xchg
mov
cmpsl
inc
mov
mov
std
lret
jmp
std
push
xor
insl
mov
loopw
fbld
jp
jg
aaa
roll
xor
and
cmpl
jl
outsl
sub
and
fildl
sbb
adc
in
aas
mov
iret
roll
xor
popf
lea
frstor
push
cmp
xchg
out
xor
call
fs
data16
push
mov
mov
jge
dec
loopne
mov
jmp
mov
imul
out
out
ss
xor
jb
pop
pop
ficoms
psraw
mov
lods
les
mov
sub
push
mov
loope
dec
cmp
mov
fwait
adc
jl
test
sbb
or
cld
add
sbbl
inc
add
jecxz
out
xor
ljmp
test
sbb
xor
push
sarl
icebp
push
mov
ljmp
mov
enter
dec
test
cmp
in
movsl
pop
jl
adc
xchg
jecxz
jge
mov
int3
loop
or
sarb
lds
jle
movsb
push
xor
or
pusha
addl
daa
cmp
adc
push
xchg
aas
ret
dec
sub
je
add
sbb
fstl
dec
pop
xor
lret
dec
push
nop
scas
add
lahf
cmp
add
xor
mov
shrl
jecxz
mov
out
pop
insb
lods
jecxz
das
gs
mov
in
outsl
pop
sbb
je
xor
pop
lods
adc
xlat
mov
adc
push
cmp
shll
or
pop
xchg
xor
mov
in
or
xchg
cmpsb
adc
xstore-rng
cmpsl
add
pop
xchg
cmp
test
in
push
ja
or
pop
js
push
outsl
adc
mov
fisubrl
mov
mov
mov
dec
je
fsts
sbb
sbb
mov
sub
pop
enter
ds
jmp
stos
push
mov
mov
add
push
adc
push
push
pop
xor
mov
sub
pop
add
dec
mov
dec
mov
and
icebp
cmpl
icebp
pop
or
fnstenv
fsubrs
rcll
dec
push
pop
ja
ja
fcomp
or
es
push
in
daa
mov
dec
mov
rolb
cmc
mull
and
xchg
inc
push
mov
fcmovu
adc
sub
movsb
movsb
adc
mov
xor
sti
arpl
pushf
movsb
stc
adc
sub
cmc
add
mov
cld
shlb
shrl
test
mov
insb
pop
fdivl
movsb
cs
dec
scas
xor
neg
mov
sub
jecxz
push
xchg
pop
pusha
dec
add
mov
fisubrs
cmp
mov
ja
jae
outsb
movsb
fmul
stc
add
addr16
mov
aam
ss
add
pop
into
xchg
leave
push
js
fldcw
pop
scas
dec
add
shlb
mov
mov
ret
inc
cld
call
daa
dec
lcall
xor
mov
inc
sbb
adc
addb
xchg
insl
xchg
dec
jge
sbb
sbb
dec
mov
dec
mov
or
outsl
icebp
jle
inc
xor
mov
or
lods
sti
fbld
mov
std
xor
call
add
aas
pop
push
scas
loopne
xchg
pop
outsb
rcl
mov
movsb
gs
out
pop
mov
jmp
add
scas
pop
out
adc
fisubrl
inc
pop
iret
ja
jge
mov
adc
add
jmp
cmp
imul
xor
cmp
adc
movsl
jns
xor
lcall
sub
pushf
rorb
stos
sbb
hlt
test
dec
jo
test
daa
sub
es
vmread
std
push
scas
jno
loop
sbb
cmp
dec
fsubs
pop
or
lock
insl
sbb
push
sahf
jle
and
loop
jl
in
mov
adc
imul
shll
in
push
shlb
push
add
ja
outsb
pop
lcall
lcall
sbb
xor
sbb
mull
mov
push
mov
mov
cmp
int
xchg
je
in
or
lret
inc
lahf
je
inc
adc
lock
push
test
mov
stc
aas
xchg
pop
mov
sub
sbb
clc
cmpl
bound
add
out
inc
stos
arpl
sub
add
stos
hlt
icebp
aam
scas
mov
sub
pop
js
sbb
jle
dec
sbb
sahf
mov
push
adc
clc
rcr
xlat
arpl
add
push
fwait
mov
lahf
stc
addr16
xchg
stc
dec
gs
jle,pt
in
popa
xchg
inc
xlat
mov
sahf
loop
mov
loopne
popa
hlt
je
pop
adc
xchg
sahf
ret
sub
js
xlat
dec
fwait
ljmp
in
fwait
xor
enter
aam
and
out
add
mov
mov
arpl
enter
nop
jo
movsb
imul
jae
mov
mov
inc
xor
jae
mov
mov
jbe
mov
xchg
xchg
ja
out
sbb
int3
insb
sub
xchg
cmp
out
dec
ja
jp
sub
lock
xchg
iret
ljmp
mov
aaa
jo
inc
push
mov
xchg
adc
pop
adc
push
es
xchg
cmp
cmp
das
test
in
pop
ja
adc
mov
xchg
repz
mov
dec
xor
mov
test
or
repnz
jb
pop
sbb
mov
and
cmpsb
sub
jp
inc
mov
fsts
neg
push
lds
or
mov
jns
gs
cmpsb
or
shll
mov
mov
pop
fidivrl
daa
pop
cmp
jnp
jns
xchg
ja
orl
loopne
lods
mov
in
sbb
mov
je
mov
in
jno
lock
sarb
mov
loop
inc
rcr
shlb
xor
popf
das
add
mov
inc
das
test
test
jge
lds
dec
int
and
lods
mov
mov
push
and
mov
into
sbb
jmp
inc
cmp
jae
push
outsb
push
xchg
orl
ja
pop
xchg
lds
push
loope
xchg
lock
cmp
lea
push
pop
loope
fwait
mov
test
in
pushf
insb
jmp
inc
adc
xchg
jb
mov
cmpsl
or
fdivs
jl
in
cmp
ja
sub
pusha
push
out
imul
outsb
sub
add
cld
imul
addl
jne
or
dec
pop
mov
das
rep
mov
push
ljmp
sub
in
test
fsubrl
push
sbb
aad
pop
sbb
push
xchg
call
call
fnstsw
dec
or
mov
xlat
pop
sbb
mov
lcall
push
ret
cmp
imul
push
xor
sbb
dec
mov
pop
xor
fcompl
dec
cmp
das
lods
pusha
movsl
inc
pusha
or
inc
fisttps
jecxz
add
test
gs
push
decb
push
push
nop
hlt
and
cltd
push
fistl
push
adc
lcall
dec
jae
nop
adc
cmpsb
into
mov
aam
jae
jne
iret
adc
mov
pop
aam
mov
sbb
incb
shll
fsubrp
push
lods
xor
mov
or
fnsave
rcrl
xchg
insl
lret
adc
lcall
add
rorl
enter
dec
popa
sbb
enter
push
icebp
inc
xchg
fs
mov
stc
out
mov
mov
ja
sbb
jbe
pop
mov
sub
dec
adc
cs
or
cmp
pushf
push
nop
mov
jge
das
imul
lret
sub
add
xlat
inc
std
dec
jl
pusha
push
mov
out
mov
pop
cs
inc
fisubl
int3
sub
adc
int
stc
jns
mov
aam
xlat
daa
sub
ret
cmp
push
push
js
stc
lahf
into
das
sbb
push
fstpl
add
cld
inc
mov
sbb
leave
movsl
in
push
out
call
ud1
lahf
sbb
incb
out
ljmp
xchg
dec
inc
cs
cld
cmp
imul
add
mov
popa
xor
inc
sar
sahf
push
call
loope
cmp
jle
adc
fwait
stc
or
in
sahf
in
gs
stos
push
flds
outsl
inc
push
adc
shll
jae
sub
ret
adcb
lret
loopne
imul
adc
in
adc
mov
adc
mov
test
clc
adc
out
mov
insl
ficoml
add
cltd
and
and
mov
sub
lcall
sbb
sarb
notb
cli
mov
arpl
xor
std
lods
popf
mov
loop
xor
dec
iret
or
in
ss
movsl
popa
jmp
or
lcall
cmp
push
pop
dec
lret
and
xchg
xor
mov
cwtl
test
test
jno
adc
jbe
scas
pop
sbb
movsb
xor
imul
jmp
add
mov
in
sbb
in
int
mul
inc
int
filds
cld
mov
or
or
push
xchg
cld
jp
imul
inc
ret
push
pop
pop
lret
bound
pop
ret
js
mov
and
leave
add
insl
inc
les
ret
xchg
arpl
push
and
dec
push
push
xchg
adc
daa
mov
test
lds
inc
iret
jae
sbb
and
sub
jecxz
add
xchg
arpl
dec
inc
out
push
or
inc
and
add
cltd
mov
lods
out
test
shll
pop
pop
sub
lahf
sub
adc
sti
mov
xchg
enter
cltd
jl
les
sbb
stos
pop
jg
rcrb
sub
fadd
out
adc
push
mov
add
fwait
lds
pop
loop
arpl
push
push
xchg
add
sub
imul
test
out
mov
xchg
and
in
pop
jae
dec
into
xchg
jno
and
idivb
sub
int3
popa
push
jns
mov
sub
push
leave
mov
sub
and
aas
adc
xor
pop
mov
pop
lods
cmpsl
cltd
ror
cmp
push
iret
mov
xor
hlt
nop
xchg
push
xchg
fs
cmp
cld
mov
enter
cmpsl
push
test
mov
leave
sbb
iret
scas
jecxz
mov
and
or
and
lret
mov
mov
or
inc
push
loope
test
add
and
jb
and
sbb
and
cmc
addr16
popw
out
ljmp
and
ficoms
cmpb
xchg
sbb
stc
test
mov
pop
and
jmp
mov
nop
pop
push
mov
xor
ss
sub
sbb
js
jecxz
ret
jg
jmp
xchg
mov
xor
ret
mov
cmpl
in
ret
out
lds
hlt
movsb
sub
xchg
xlat
cmc
xor
pop
and
push
ljmp
pop
mov
sub
fwait
addr16
mov
das
test
in
fs
lds
hlt
cmp
test
add
push
pop
icebp
aam
iret
mov
cli
sub
xchg
gs
cmp
fsubrs
enter
test
mov
xchg
xchg
stc
lahf
push
mov
repz
daa
mov
adc
pop
shrb
dec
hlt
cmpsb
int
dec
push
arpl
pop
mov
pop
insl
lahf
in
xchg
aaa
or
in
sbb
and
pop
lcall
adc
inc
arpl
xor
ljmp
fcmovnbe
xchg
lods
aad
lock
imul
mov
add
mov
cmp
add
pop
sub
or
je
fsubs
jae
je,pn
aas
out
dec
mov
clc
inc
mov
add
push
sub
insb
xchg
loop
inc
adc
neg
jle
popa
fnstenv
je
popa
mov
icebp
sarb
cmp
mov
or
lret
test
pop
xchg
xor
bnd
push
insl
cmp
or
into
sub
mov
jp
xchg
and
pop
scas
ds
sti
mov
cli
rcl
shl
outsl
fcoms
pushf
sar
inc
imul
bound
lea
jne
nop
fmull
aam
mov
in
not
orl
mov
jmp
cmp
movsl
enter
adc
mov
testb
pushf
jbe
cld
scas
sub
jo
mov
sub
les
jae
sbb
stc
mov
mov
fnstsw
addr16
testl
aaa
sub
repnz
jp
fldcw
mov
loop
add
inc
orb
and
or
mov
lret
lods
pop
sub
not
sub
lret
cmp
sbb
jno
push
gs
in
push
sub
jbe
push
ret
mov
jle
test
jle
gs
loope
cmp
push
cpuid
cmpsb
xor
arpl
les
mov
arpl
push
add
mov
rcll
out
inc
stc
xchg
jp
cmp
mov
pop
mov
sbb
push
scas
sarb
out
push
jg
pop
push
stos
mov
lods
add
stos
jae
mov
dec
sbb
adc
mov
cltd
jo
cmpsb
lods
xchg
test
addl
jb
loop
xorl
inc
push
xchg
fs
ret
mov
aam
rcrl
lods
sbb
jns
fdivp
dec
xrelease
cmpsb
sahf
dec
pushf
push
add
pushf
and
faddl
and
stc
divb
mov
adcb
rorl
popa
and
ret
ret
sub
mov
mov
sbb
inc
jge
notl
je
out
sbb
inc
xor
movsl
lcall
lods
pop
and
xchg
popa
ret
pop
ss
rol
adc
mov
push
jae
sub
mov
mov
inc
xor
repnz
les
sub
and
xor
push
inc
xlat
mov
dec
rorb
leave
fldl
add
ret
push
fs
je
rcrb
dec
jnp
ficoms
rcr
push
in
daa
out
fcomi
push
pop
ss
xchg
xor
cmp
fsubs
mov
fnstcw
pop
aad
dec
cmpsb
subl
xchg
aam
std
jmp
cltd
stos
dec
loope
xor
aas
push
xchg
cmp
in
fisubrs
add
mov
cmpsl
xchg
dec
mov
lea
cwtl
jp
inc
mov
xchg
xchg
adc
rcrb
mov
loop
dec
add
fsubrl
pop
in
add
push
jge
aas
adcl
loope
cmp
je
call
setne
ret
jae
aam
movsb
dec
push
int3
cmp
xchg
je
mov
movsl
hlt
ss
jae
in
xchg
inc
cli
mov
lods
jae
aaa
insb
andb
jmp
sti
add
sbb
dec
xor
imul
fs
push
xchg
inc
xchg
pop
xchg
mov
mov
xchg
xchg
xchg
imul
xchg
ret
fldl
test
and
clc
cmp
aas
pop
in
outsb
jo
jg
cmp
ret
sub
xchg
cmp
cmpsl
cmp
cmpsb
mov
dec
dec
sbb
stos
cmp
mov
xor
mov
cmpsb
mov
adc
out
mov
xchg
loop
cmpb
cli
pop
xchg
notb
addr16
repz
add
inc
adc
popa
mov
pop
aaa
xchg
fnsave
into
pop
icebp
incb
pop
lret
mov
xchg
out
pop
sarb
std
lds
mov
pusha
je
lea
mov
out
loope
adc
outsb
arpl
sbb
xor
dec
lcall
mov
jb
inc
mov
xlat
cli
jl
outsb
inc
fwait
pop
pop
lahf
lods
mov
sbb
mov
inc
cmp
ret
xchg
ds
fistps
mov
int3
lock
pop
test
inc
pushf
pushf
leave
imul
mov
cmpb
jbe
push
fs
imull
pop
lods
gs
push
in
add
out
testw
out
lcall
sbbb
mov
call
negb
mov
mov
adc
jmp
setae
add
dec
sbbl
xor
pop
loope
jp
stos
sar
jg
or
pop
clc
loope
add
pop
inc
movsb
es
out
and
xor
sub
pop
scas
test
add
cwtl
sbb
mov
and
jo
jno
jmp
inc
mov
pushw
or
repnz
jae
inc
mov
inc
or
push
out
pop
mov
mov
mov
or
cmp
inc
pop
sbb
xchg
xchg
and
and
hlt
mov
ret
sahf
popa
call
daa
jbe
shll
adc
stc
shrl
xchg
loope
or
stc
adc
push
xorl
in
inc
shl
add
cmp
cli
push
das
or
dec
adc
xchg
xor
mov
pop
ds
aad
jge
push
mov
cmp
fistpll
imul
insb
call
dec
adc
push
sbb
sub
add
inc
cmp
insl
shrb
mov
adc
mov
mov
sbb
call
ficomps
inc
mov
enter
out
out
cmc
call
mov
mov
loope
xor
sbb
xchg
mov
mov
mov
adc
enter
dec
jmp
mov
sub
insb
mov
sub
sub
sub
std
push
in
lcall
insb
std
cmp
out
rcl
and
shll
cwtl
pop
pushf
xchg
inc
xchg
cwtl
xor
push
lods
iret
mov
and
fidivl
cld
fdivr
dec
push
aas
inc
xchg
pushf
dec
pushf
in
mov
loope
shlb
bound
xlat
sarl
sub
inc
xchg
push
aad
mov
loope
js
sbb
dec
mov
cld
cmpsl
rorl
push
clc
sbb
jecxz
in
test
stos
in
sti
mov
fwait
rclb
lcall
xor
sub
gs
pop
movsb
lret
push
push
bound
dec
mov
cmc
and
call
out
notl
lahf
sbb
xchg
inc
adc
fimuls
cmp
push
jbe
push
inc
jns
fisubl
sbbl
pop
jmp
dec
mov
sub
icebp
cmpsl
add
mov
add
push
jns
arpl
inc
push
pop
adc
cmc
mov
push
out
dec
stc
xor
cltd
mov
adc
cmp
jmp
mov
pop
inc
jge
popf
push
xchg
xchg
pop
outsb
mov
aad
adc
cmp
cmp
cmp
sahf
push
mov
sub
mov
int
cli
cmpsl
xor
sbb
xchg
sub
sbb
push
leave
rorb
inc
jg
jb
nop
push
loop
mov
rcrl
push
xchg
int
mov
jo
ficoms
in
mov
out
aam
add
pop
stc
or
push
xlat
inc
inc
or
test
stc
pop
out
or
loop
cmpsb
pop
cmp
outsb
int
ljmp
xchg
outsb
int3
decb
out
mov
ret
jnp
xchg
jg
repz
fldcw
sub
hlt
test
aas
int
lret
out
in
pop
add
mov
icebp
mov
decb
int3
mov
push
ret
lods
enter
push
repnz
sub
addr16
jnp
cltd
shl
fnsave
out
ja
lret
sub
sbb
pop
jbe
and
cmpb
mov
add
shlb
inc
xchg
leave
jae
jo
sarl
lcall
fldcw
dec
es
sub
mov
cmp
lcall
lret
xor
dec
gs
rolb
pop
aaa
add
jae
mov
ucomiss
faddl
sahf
xchg
in
gs
idivb
test
mov
cmp
mov
xlat
jne
or
xor
sub
add
mov
ret
les
lahf
push
idiv
loope
cmova
cmp
cs
push
int
jns
sbb
loop
push
pop
out
and
xchg
adc
mov
or
and
pop
ret
cmp
mov
fs
shrb
sub
cmp
lret
fmull
and
xchg
sbb
push
cwtl
add
cmp
xor
outsl
cld
jl
mov
and
loope
sub
shrl
adc
subb
sahf
pop
dec
loope
and
inc
inc
lea
pop
cmp
ficompl
push
mov
add
cmp
cmp
cli
pop
sub
mov
repz
jl
je
testl
mov
sahf
sub
ja
pushf
mov
and
ss
into
add
rcrl
loop
cmpl
pop
popf
and
lret
arpl
pop
push
jg
push
es
fisubrs
lret
push
pushf
mov
addb
push
jg
imul
adc
cmpsb
lods
aaa
sarb
ds
addr16
or
sub
popa
lods
sar
inc
outsl
jmp
mov
insl
sti
rolb
sub
in
push
adc
movsb
pop
enter
jno
aaa
cmp
clc
xchg
push
pop
cmp
jbe
lds
loop
xor
cmp
dec
scas
and
sti
pop
sub
mov
mov
std
mov
sbb
mov
jmp
sbb
adc
fiadds
loop
dec
aaa
xchg
call
sbb
inc
pop
add
imul
push
fs
jmp
mov
cmc
jbe
push
lret
les
bound
fisubs
jnp
cmp
jne
sub
xor
mov
pop
push
cli
nop
inc
jl
dec
inc
push
sub
arpl
imul
and
call
or
xlat
or
sub
jnp
fwait
adc
enter
rcll
xlat
les
push
test
jecxz
push
orb
jae
cltd
and
xor
adc
jnp
lret
push
lock
mov
lods
repnz
push
loopne
in
jecxz
mov
daa
mov
mov
pop
cli
pop
or
imul
ds
mov
je
loop
push
add
sub
sbb
test
mov
and
push
mov
addr16
xor
cmc
cmp
lods
mov
xor
les
mov
dec
dec
add
pop
mov
aad
jnp
shlb
sub
popf
leave
sahf
xor
cltd
inc
std
shlb
imul
inc
inc
or
pop
in
or
or
sbb
mov
iretw
adc
lret
adc
testb
shll
lret
popf
pop
mov
and
push
inc
jnp
inc
cmpsb
testb
xor
or
ffreep
or
sbb
mov
subb
pop
lret
or
xchg
scas
shrb
mov
inc
iret
inc
xchg
jb
or
add
mov
icebp
cmpsl
push
add
mov
xor
ja
xor
jbe
les
jbe,pt
js
add
or
and
cli
hlt
data16
inc
cmp
lds
sti
fnstcw
mov
dec
pop
mov
mov
cmp
out
mov
xor
sbb
xchg
in
adc
leave
sarb
ljmp
sub
sbb
lock
or
insl
scas
mov
dec
inc
sbb
lods
or
das
stos
pop
repnz
sbbb
and
clc
push
fisubs
sbb
inc
xor
arpl
sub
jns
js
adc
or
cmp
bound
pop
jle
mov
out
dec
pushf
outsl
movsb
outsb
mov
stc
into
repnz
daa
push
lret
sbb
xchg
outsb
sbb
pop
mov
fstps
outsb
fs
mov
push
stos
sub
addl
cmp
lahf
inc
lret
testl
and
pop
ret
inc
sbb
stc
addr16
daa
sbb
lret
aaa
xor
fldenv
lret
into
xlat
cmp
xchg
movsl
loopne
outsb
scas
shrd
push
frstor
out
js
enter
jnp
lret
sarl
nop
test
inc
nop
ja
xchg
pop
lret
cmpsl
in
sub
cmpsb
call
movsb
dec
out
test
stos
and
pop
hlt
mov
xor
in
mov
push
push
push
imul
xchg
das
lret
sarl
adc
int
push
data16
cmp
fsubrl
movsb
je
mov
cmc
inc
adc
add
pop
dec
pop
sbb
cld
jnp
xchg
add
shll
mov
mov
sub
cmp
dec
inc
jmp
pop
inc
adc
mov
push
repz
lds
xor
test
sub
xor
adc
xor
call
xchg
movsb
jb
sub
pop
popa
sbb
gs
add
and
adc
add
dec
rolb
push
mov
js
push
lcall
mov
movsb
movsb
lods
push
or
pop
xchg
xchg
jnp
js
cmc
and
stos
mov
push
addr16
cmpsb
fnsave
mov
inc
adc
and
push
jmp
xlat
leave
add
rorl
add
sbb
cmpsl
jge
inc
inc
nop
les
inc
push
jp
rcll
jge
xchg
fmull
jmp
cld
cmp
xchg
inc
mov
notl
mov
mov
jo
jo
dec
shrl
pop
inc
sahf
inc
shl
push
les
sub
cmp
in
gs
jns
inc
popl
push
incl
aad
mov
rol
dec
stos
dec
aaa
test
les
and
hlt
test
push
inc
adc
inc
inc
popl
out
jp
ret
mov
and
call
xchg
push
sub
ss
and
sahf
or
pushf
aad
pop
pop
jns
ret
leave
mov
fidivs
mov
addr16
xchg
inc
dec
or
jg
or
inc
jae
pop
pop
fs
add
xchg
jle
aam
icebp
adc
sti
fwait
pop
push
imul
call
loop
addr16
out
out
jb
ss
dec
push
xchg
and
mov
imul
cmpsb
pop
sub
movsl
mov
add
jns
nop
nop
jmp
xchg
cmc
sti
stos
ljmp
pop
cmc
and
pop
loop
cmpsl
lock
sti
push
mov
sbb
movsl
shlb
hlt
std
std
add
imul
call
out
add
mov
jg
dec
add
shlb
mov
dec
lods
loope
pop
mov
or
add
xor
and
dec
ret
add
mov
adc
cmc
jb
xlat
js
adc
pop
pushf
cwtl
clc
xor
outsb
shrl
repnz
fs
test
adc
xor
dec
int
add
fwait
pop
xchg
cmp
loope
adc
pushf
cli
dec
inc
repz
outsl
mull
inc
add
aam
pop
jbe
cmp
push
fwait
xchg
push
mov
iret
jno
scas
pop
mov
sbb
test
fdivl
mov
cmp
rcrb
jb
add
or
lret
lods
loop
std
dec
and
inc
xchg
cmp
lret
subl
cmp
mov
add
rcrl
in
dec
fwait
push
in
not
mov
sbb
jmp
sub
scas
dec
adc
mov
and
dec
lret
xor
jnp
cld
mov
pop
mov
and
sub
sbb
insl
xor
repz
enter
repz
jp
inc
mov
mov
push
and
popa
jns
fiadds
dec
out
fisttpl
test
push
inc
cs
mov
aas
dec
adc
ja
dec
or
inc
in
fwait
push
lods
mov
jb
adc
in
xor
pop
pop
rep
fcoml
inc
cmpsl
inc
out
mov
xor
sahf
pop
pop
out
call
idivl
test
lahf
xor
pop
add
or
cmc
inc
inc
xchg
shl
jl
leave
adc
jle
cmpsl
std
cmp
mov
jbe
push
clc
push
push
inc
jo
pop
mov
xchg
int
fidivrs
daa
cmp
and
fiaddl
test
adc
iret
mov
dec
mov
cmc
into
test
lea
add
xchg
sub
arpl
mov
jle
sbbl
cmpsb
push
je
xchg
mov
stos
pop
in
shlb
scas
dec
inc
pop
clc
pop
mov
pushf
cmpsb
jae
sbb
jmp
xor
cltd
jge
pop
fcomps
xor
mov
add
fisubrs
shrb
nop
adc
es
into
dec
jl
xchg
cmp
mov
push
aas
popf
subl
dec
mov
push
aaa
push
mov
jnp
hlt
test
dec
in
cmpxchg
imul
out
xor
loop
dec
notl
xor
addr16
lret
lret
add
cmpsl
mov
cmp
jl
lret
sbb
dec
sbb
mov
adc
int
imul
repz
xchg
call
pop
inc
sub
inc
push
std
push
xor
fistl
nop
mov
inc
add
in
xchg
scas
dec
ljmp
je
xchg
or
pop
adc
fisubl
insb
mov
mov
jle
add
jo
dec
inc
aam
sub
jge
into
or
add
aas
negb
shll
cmp
mov
push
pop
jnp
xor
mov
ljmp
mov
stc
sbb
pushf
ficoms
mov
and
dec
pop
add
test
pop
cmp
inc
addr16
cmp
cmp
add
cmp
dec
jno
mov
mov
cmpsb
or
into
mov
inc
mov
mov
xchg
xor
shl
aad
xchg
jl
dec
mov
push
sar
mov
sbb
sbb
add
push
mov
fucomi
jno
xchg
push
fcmovb
fcomip
add
sub
lods
mov
sarb
flds
aas
pusha
in
mov
jle
pop
inc
fidivs
mov
jg
xchg
test
sub
cmp
sbb
mov
xorl
cmpsl
dec
loope
inc
inc
pop
out
roll
fidivrs
loop
jp
pushf
arpl
movsb
es
xchg
pushf
xor
out
lds
cmp
pop
out
scas
add
pusha
sbbl
mov
dec
adc
rol
push
mov
popa
out
ljmp
mov
rorl
cmp
jb
lret
repnz
mov
cmp
mov
pop
imul
mov
scas
imul
jbe
jmp
pop
mov
sahf
std
sbb
add
cmp
jne
cs
icebp
mov
lods
daa
aam
xchg
in
loope
dec
aam
lea
fisubrl
adc
dec
lcall
mov
movsl
in
out
leave
lods
pop
jo
ljmp
shrb
iret
shlb
pop
test
inc
pop
jp
loopne
test
pusha
inc
lds
sub
std
test
mov
cmp
lods
fwait
sub
out
sti
inc
test
cmp
mov
lock
xor
push
out
jno
in
out
das
sahf
or
xor
push
js
sub
out
pop
sub
movsl
sbbb
les
cmp
pop
test
lahf
xor
daa
adc
in
addl
xchg
mov
adc
and
mov
shll
fs
inc
scas
mov
cmpsb
outsl
push
sub
jne
mov
scas
inc
loop
push
rcll
loope
jns
fs
test
sbbb
das
loop
adc
movsb
iret
fildl
jmp
push
fbld
adc
loopne
xchg
or
sub
ss
mov
cmp
jmp
lock
xlat
cmp
jg
dec
shrl
mov
loopne
fwait
cld
ret
pop
pop
int
iret
push
push
adc
adcb
lcall
jecxz
and
cmpsb
sti
jmp
xchg
and
pop
and
scas
mov
xlat
mov
xchg
push
add
xchg
push
daa
mov
sbbl
cmp
mov
in
sbb
mov
fsubr
xchg
cli
and
jle
movsb
or
mov
ja
sbb
inc
jae
pop
jno
and
popa
xchg
insb
andb
jl
dec
dec
ja
data16
jle
or
dec
cmpsl
fcompl
aas
jl
push
int
sub
adc
scas
mov
or
in
sbb
enter
out
popa
mov
rcll
add
inc
insb
add
xlat
dec
or
push
mov
or
sbb
push
sbb
mov
fwait
lret
daa
mov
and
es
ret
enter
mov
inc
movsb
stos
sub
xorl
jne
mov
lret
rclb
pop
push
roll
fsts
and
stc
push
lods
gs
dec
dec
into
pusha
mov
adc
cmp
mov
or
xchg
mov
mov
rol
pusha
outsl
loopne
stos
ja
jnp
xor
test
pop
lods
icebp
out
xchg
mov
into
jl
push
pop
aam
mov
inc
jl
notb
and
out
sbb
push
sbb
or
test
mov
pop
cs
mov
aam
inc
jb
mov
or
insb
and
jno
loopne
dec
mov
lock
sub
cmp
xadd
sub
repz
mov
xchg
loopne
xchg
sti
stos
test
jecxz
mov
and
mov
bound
scas
pop
cmp
xor
inc
push
popf
or
fstl
sub
jns
jo
std
cmc
cwtl
jmp
dec
enter
lahf
ss
lret
push
adcl
sub
push
sbb
pop
xlat
icebp
xlat
mov
sub
sub
xor
int3
test
push
fwait
cmpsl
xor
sbb
pushf
call
in
in
hlt
scas
cltd
add
pushf
and
cmpsb
mov
push
test
push
out
xor
push
lds
mov
pop
rcrb
setns
fistpll
sbb
rclb
mov
and
xlat
xor
sahf
je
insb
or
jmp
xchg
and
sbb
xchg
scas
insb
lcall
jae
shlb
xor
lock
loopne
aam
je
lods
lahf
call
mov
les
sub
notl
aas
out
cmp
iret
lds
js
test
arpl
jecxz
jecxz
dec
mov
js
das
fwait
mov
adc
call
xlat
scas
aas
mov
xchg
jp
lock
test
xchg
les
and
mov
mov
out
test
iret
push
outsl
nop
mov
in
fs
pusha
push
imul
inc
sbb
push
and
fldenv
adc
sub
cmp
mov
mov
jmp
in
and
pop
dec
shll
loopne
cmp
mov
subl
push
sbb
stos
push
ljmp
inc
ds
pop
adc
adc
mov
lods
pop
cs
imul
cmp
mov
mov
mov
rcrb
or
cmp
push
xor
sub
sbb
push
mov
sbb
xor
add
pop
xchg
lds
stos
gs
popa
sbb
xlat
pop
lock
pusha
sub
filds
push
sbb
mov
inc
stc
aaa
fcmove
push
lret
mov
xlat
fs
mov
repnz
mov
push
int3
popl
loopne
insl
push
jle
adc
in
fs
lret
dec
inc
add
and
or
ret
add
jbe
xorl
rcl
mov
test
call
in
inc
aam
out
mov
push
mov
daa
cmp
adc
and
std
or
call
lods
and
fcomip
testl
ret
push
popa
adc
push
jb
decb
pusha
or
imul
subb
outsb
aas
mov
jne
je
fnstenv
pop
mov
loop
cmp
sub
push
icebp
enter
xchg
out
xchg
push
insb
xor
popl
pusha
into
sub
dec
mov
dec
jae
mov
stos
test
xchg
mov
pop
cld
jnp
fucom
cmp
cmp
push
xchg
mov
mov
insl
sar
daa
jo
xchg
pop
std
les
sub
mov
jb
pushf
ror
das
test
insl
jnp
and
mov
jle
cmp
pop
xor
mov
stos
in
lods
mov
inc
jo
cmpsl
mov
fs
je
imull
push
push
movsl
inc
aam
imul
popa
call
repnz
rorb
hlt
pop
ret
fldt
adc
imul
xlat
arpl
pop
ror
jno
jb
push
cli
mov
lock
pushf
jmp
stc
in
out
dec
imul
les
push
inc
mov
mov
xchg
add
mov
adc
push
mov
xor
mov
adc
sub
lds
icebp
mov
in
pop
and
add
icebp
jle
test
scas
or
pop
scas
mov
jns
frstor
jmp
or
popa
mov
cmpsl
aaa
add
sub
add
in
jg
cld
lock
inc
cmp
in
and
inc
movsb
ja
sub
pop
sbb
and
cmp
dec
ljmp
lcall
pusha
test
pop
les
fdivr
pop
loopne
int3
cmp
mov
jb
jg
call
inc
es
xor
push
lret
pusha
notl
idiv
pushw
jbe
pop
or
repz
aad
ljmp
ja
faddp
std
add
pop
jbe
movsl
cmp
inc
fsubrp
clc
or
inc
sbb
pop
adc
sub
and
or
and
or
cmp
mov
lds
sub
cmp
lods
lret
xchg
das
in
bound
push
push
push
sahf
mov
sti
in
sbb
ret
xchg
cmc
add
sub
outsl
mov
inc
aas
push
adc
repz
call
add
test
xchg
xor
mov
leave
xchg
jbe
xchg
lock
push
dec
orb
lret
mov
in
outsl
enter
mov
imul
xor
sbb
inc
xchg
jge
xor
sti
stc
into
js
out
add
sbb
cld
lahf
pop
push
andps
xchg
lods
sbb
jl
and
aam
adc
mov
shlb
sbbl
and
jne
jl
mov
mov
negl
enter
cmpsb
testl
rolb
mov
into
or
cwtl
ja
mov
pop
ss
pushf
sbb
mov
sbb
mov
nop
lcall
mov
scas
inc
sbb
out
jle
cmp
add
and
add
cmp
mov
loop
mov
sub
mov
jns
mov
out
pop
and
xlat
cmp
xor
mov
cmp
mov
sub
inc
sub
cmp
xor
pop
imul
push
bnd
dec
mov
rcl
std
jae
cmpsb
arpl
xchg
scas
pop
pop
xchg
data16
popf
pop
lods
iret
and
inc
loopne
arpl
xlat
and
mov
std
sbb
pop
addr16
div
xorl
lea
repnz
icebp
sub
lock
iret
test
das
std
xchg
shl
icebp
inc
dec
sub
loopne
mov
adc
fisttpll
lea
add
pop
popf
lock
in
add
mov
je
push
lahf
ds
mov
fwait
xor
lds
inc
adc
test
repz
cmp
sub
iret
jae
out
into
xor
andb
pop
stos
pop
dec
push
icebp
jb
inc
mov
mov
sbb
sbb
jg
popf
push
sub
sub
xchg
out
iret
clc
jo
add
push
popa
mov
push
mov
xor
repnz
cmp
stos
shlb
dec
push
stos
movsl
cmp
add
xchg
inc
lods
ret
sti
push
lock
inc
xchg
xor
outsl
inc
push
hlt
in
outsl
std
fdivp
jecxz
jecxz
bound
and
test
addr16
fcomps
jecxz
jo
and
adcb
sbb
movsl
lcall
xchg
test
lods
rol
sbb
pop
arpl
mov
adc
lcall
roll
sarb
lret
dec
and
inc
or
adc
mov
stos
mov
push
lea
data16
xorl
pop
add
mov
testb
push
enter
mov
jp
sub
rcrl
mov
lret
movsl
xor
and
mov
add
sbb
call
sub
loopne
xor
inc
cwtl
mov
add
sbb
pop
mov
lcall
rcrb
push
out
push
out
cmp
jp
sub
push
nop
xchg
and
mov
pop
loope
push
stc
and
imul
push
out
pop
daa
fstp
aam
xlat
sub
lcall
arpl
xchg
add
aam
mov
loope
rorb
push
stc
push
xor
push
mov
je
xchg
xor
pop
mov
mov
xchg
cmp
aad
mov
mov
mov
dec
mov
mov
sahf
add
lock
jmp
or
les
pushf
mov
stos
push
sbb
popf
addb
push
call
shlb
sub
jmp
sbb
jle
mov
ja
pop
lds
insb
das
cmp
sarb
dec
push
jne
inc
mov
ljmp
sub
mov
insb
xor
sbb
clc
sub
daa
or
push
xchg
int3
mov
sub
mov
lret
pop
jge
pop
inc
cmp
mov
cwtl
ficompl
dec
divl
add
mov
outsb
xchg
inc
ljmp
leave
pushf
xchg
pushf
lcall
jns
aad
divb
and
push
xchg
inc
adc
out
les
icebp
test
dec
ds
jno
lret
outsl
xor
mov
lret
push
xchg
add
stos
int
iret
pop
mov
sub
or
push
mov
pop
mov
call
add
into
fsubrs
scas
setl
pop
mov
xchg
into
dec
pop
jge
mov
jmp
subl
pop
push
call
jle
addr16
jecxz
leave
out
lret
fnstcw
xchg
icebp
pop
pop
mov
jmp
movsl
push
or
rcl
dec
mov
pop
rol
scas
mov
ret
adc
pop
adcl
xor
push
and
push
xchg
cltd
mov
out
mov
shll
cltd
and
jb
gs
inc
lds
xchg
xor
xchg
inc
jbe
mov
xlat
cmp
sahf
fildl
mov
xor
movsl
mov
daa
push
and
ss
sub
and
add
lret
out
in
cmpsl
ret
iret
mov
insl
ret
inc
js
ljmp
dec
jmp
ja
daa
dec
inc
cs
dec
fstpl
cmc
mov
mov
xchg
pop
ret
lea
push
add
adcl
fmuls
pop
aam
imul
pop
push
stos
lret
int
addl
mov
ret
mov
repnz
test
inc
pushf
jb
lcall
pop
push
sbbl
out
shll
cltd
leave
push
jmp
xor
jp
sbb
xlat
js
jae
popa
mov
push
cli
mov
mov
mov
shl
jge
push
mov
jb
and
lock
sbb
cmp
mov
or
pop
jl
aas
lock
sahf
cmp
scas
jl
add
scas
cmpb
leavew
outsl
push
stc
mov
adc
sbb
or
imul
fs
cmc
xor
dec
ret
gs
inc
push
mov
jg
andl
mov
ja
jecxz
dec
and
jmp
call
adc
add
push
cmp
lock
nop
mov
pop
loopne
lds
pop
movsl
cmpsl
in
push
mov
iret
fildll
xor
cmp
jae
and
std
mov
cld
jbe
in
aaa
in
dec
movsb
pushf
ds
andb
push
mov
in
stos
in
lahf
add
mov
jns
scas
sbb
or
outsb
ljmp
xchg
popf
aad
daa
repnz
jge
out
jg
mov
mov
iret
call
lock
or
rcll
inc
mov
in
mov
fisttpll
pop
inc
xchg
scas
cmc
xchg
cwtl
shll
push
or
and
pusha
adc
es
test
inc
jmp
inc
ljmp
jne
mull
mov
xchg
in
xchg
test
inc
das
adc
fstps
cmpsb
lret
jge
cld
out
movsl
inc
push
aas
fstl
loopne
fstl
cmp
ds
push
cmp
inc
xchg
js
loop
sub
popa
xor
xor
push
push
jne
leave
fists
push
insb
enter
test
jle
jmp
dec
fnsave
enter
push
pop
loope
insl
and
inc
lret
pop
stc
cmpb
mov
fwait
in
mov
xor
mov
addb
cmp
orb
xor
jbe
adc
out
aaa
popl
xor
out
lods
cmp
dec
pop
enter
popa
push
mov
hlt
mov
push
mov
clc
frstor
xchg
xchg
mov
pop
xor
data16
mov
cmc
inc
lea
mov
aam
inc
shlb
jns
sbb
stos
push
or
and
lds
lds
or
and
fwait
jge
xor
or
daa
and
mov
dec
push
mov
mov
test
lahf
mov
outsb
and
sbb
int
pop
jecxz
and
cmp
push
sub
mov
loop
shlb
inc
mov
imul
and
int
inc
jg
mov
dec
test
jmp
mov
sbb
add
mov
and
insl
sub
outsb
mov
mov
push
inc
adc
jo
bound
repnz
or
mov
push
add
fucom
cmp
mov
mov
push
xor
or
sbb
or
repz
inc
dec
test
mov
sub
into
add
movsl
jl
into
sbbb
xchg
mov
js
std
cmpsb
mov
test
push
push
or
cmp
ficoms
rorl
mov
mov
jno
xor
mov
jle
mov
out
mov
in
push
xchg
push
bound
rcl
push
cmp
aaa
bound
cmp
cmp
sbb
fsubrl
mov
sub
jg
movsb
lcall
test
aam
mov
cld
sbb
out
clc
lcall
fs
xchg
add
dec
cmpsl
out
mov
jno
sbbl
push
mov
call
or
mov
sub
fldenv
shll
shlb
adc
in
xchg
add
notl
adcb
popf
shlb
test
sbb
mov
arpl
adcb
popf
mov
xor
cmc
sti
jle
out
sbb
jns
adc
jecxz
cmp
loopne
shrb
movaps
out
xlat
ror
jo
call
push
test
mov
dec
sub
xchg
mov
pusha
xlat
movsb
aad
mov
arpl
jecxz
aad
xchg
fdivl
and
push
adc
mov
jge
adc
in
sbb
stos
negb
fsubrl
cmp
dec
jbe
dec
ljmp
mov
clc
add
out
int
loop
out
jmp
or
fisttpl
popf
pop
fcoms
dec
rcr
pop
fldenv
test
cli
pop
fdivrl
and
leave
xor
gs
shrb
out
mov
call
dec
adc
cmp
sbb
inc
add
rcrb
fmull
call
nop
shlb
xchg
pop
add
shlb
xor
push
imul
nop
jae
test
aam
mov
adc
inc
pop
ret
jle
sub
adc
int
jge
dec
outsl
inc
push
and
and
mov
xchg
repz
adc
pop
cmp
jbe
mov
arpl
mov
dec
pop
mov
jb
push
in
icebp
outsl
pop
dec
insb
pop
sti
daa
mov
scas
lds
loopne
fwait
jae
je
test
pop
sub
insl
outsl
mov
lcall
aaa
or
daa
test
shll
pop
mov
sub
aas
dec
das
ljmp
or
push
cmp
add
sbb
test
icebp
stos
shlb
and
cmp
sbb
pop
out
test
and
emms
les
fcomp
mov
mov
divb
sti
stos
aam
fdiv
movsl
dec
std
sub
into
cli
push
shlb
pop
pop
loopne
loopne
push
xchg
jge
xor
lods
mov
pop
add
cltd
mov
loopne
push
shll
shll
cs
jle
push
in
jmp
inc
jb
mov
das
pusha
adcl
cmp
pop
fbstp
pop
mov
cs
push
mov
stos
repz
lods
clc
mov
adc
xlat
lods
or
push
xchg
mov
mov
mov
movswl
fcomp
mov
push
je
aaa
pop
stos
out
icebp
xchg
pop
push
dec
std
xor
shlb
push
add
and
stos
mov
lds
test
xchg
sub
push
repz
in
cmp
call
add
popa
xchg
xor
xor
out
or
into
lret
out
mov
xor
mov
dec
mov
xor
mov
inc
and
and
xor
mull
data16
aas
aas
popl
hlt
mov
or
ljmp
cmp
hlt
inc
mov
into
fidivrs
ret
rcl
xchg
inc
sbb
je
xor
mov
inc
or
test
and
movsl
xchg
ljmp
orb
rol
jge
pop
dec
mov
daa
xchg
or
loope
and
cmp
clc
jae
hlt
ljmp
lret
fadd
cmp
ja
xor
nop
dec
sbb
lock
push
cmpsb
nop
lods
mov
ss
repz
push
call
adc
fnstenv
or
dec
cmp
jle
shrl
fdivl
and
mov
push
insb
call
push
and
xor
mov
jg
sbb
sbbb
push
call
jne
insl
mov
cmc
mov
sub
xchg
push
add
adc
jns
pop
push
rcr
pop
stc
inc
pop
push
mov
dec
test
cmp
push
jl
roll
in
push
inc
xor
sahf
loop
pop
inc
adc
inc
daa
mov
shrl
pop
repz
mov
fistpll
sti
cmpsb
cmp
js
insl
cmp
cmpsb
loopne
xchg
out
loop
mov
pushf
popf
pop
push
pop
aad
cmp
push
pop
mov
scas
mov
mov
pop
fnstcw
ficoms
jecxz
mov
stc
lret
not
popa
mov
enter
mov
arpl
out
stos
arpl
js
inc
xlat
iret
jecxz
inc
cmp
mov
sbbb
loope
cmpsb
outsl
cmp
in
push
pop
fmul
dec
test
and
sbb
leave
aad
cmp
xchg
mov
je
test
ljmp
push
xchg
cmp
ss
clc
cmp
push
arpl
mov
iret
xchg
jg
xlat
ss
fisubs
mov
xchg
push
jb
xchg
shrb
add
icebp
jnp
popa
stc
jge
int
xchg
pop
add
add
out
mov
sub
insl
inc
mov
movsb
xor
xor
xlat
nop
ja
jae
dec
mov
and
rcrb
add
and
pop
mov
cmp
jo
push
push
sub
andb
adc
ss
dec
hlt
js
loope
pop
testl
cs
int3
cwtl
mov
rorb
js
jns
lret
insl
imul
loopne
push
call
sub
and
sbb
lds
cmp
into
jmp
jle
hlt
mov
sub
pop
push
pop
cmp
test
mov
arpl
enter
ja
push
movsl
loope
daa
movsb
pop
fs
xor
sub
je
stos
push
push
dec
data16
xchg
jg
outsl
push
cmp
dec
in
cmp
ss
mov
sub
repnz
mov
push
rcl
lock
cmpsb
add
mov
push
push
in
inc
xor
inc
out
repz
xchg
in
push
sarl
inc
lods
les
insl
cmp
pop
movsl
dec
mov
jg
and
stos
es
aaa
adc
scas
mov
inc
jb
dec
cmc
jbe
movsl
adc
jae
ret
lods
aam
cmp
mov
pop
ret
les
jns
or
mov
jo
out
into
jno
testb
and
outsb
push
loope
in
pop
push
rep
adc
insl
inc
dec
mov
loope
push
leave
add
xor
sbb
sbb
add
cli
mov
mov
sub
int
ret
pop
fbld
scas
push
xchg
rorb
movsl
dec
loop
ja
jns
or
fnstenv
xor
push
lods
repnz
inc
sbb
xor
in
cli
outsl
out
aam
aam
pop
mov
add
ja
clc
mov
adc
aam
xor
inc
int
xchg
xchg
or
pop
ss
es
mov
xchg
sub
insb
sub
pushf
or
sahf
or
xchg
into
into
xchg
inc
or
and
sub
mov
insl
loope
sub
lods
xlat
cmp
cmpl
mov
fisubs
sti
outsb
pop
cmp
sti
scas
sub
push
push
xor
fsubrl
leave
into
inc
cmp
sub
and
test
popa
xchg
es
aas
cmp
jo
daa
outsl
push
push
stos
and
idiv
movsb
loope
out
loopne
fucomp
jo
mov
push
or
pushf
sbb
je
mov
in
sbb
leavew
add
data16
xor
inc
or
pop
out
ja
dec
mov
jbe
fisubs
xorl
mov
pop
pop
sbb
lret
xchg
sub
sub
jmp
mov
mov
jnp
stc
sub
lds
adc
rcr
jge
test
mov
xchg
or
add
jecxz
pushl
int
ficomps
pop
out
or
stos
mov
aas
mov
ret
cmp
aam
ret
mov
in
rcrb
xchg
fdivrl
pop
mov
pop
xor
adc
xchg
xchg
outsb
outsl
nop
daa
ds
sub
popf
push
std
xor
dec
loop
xlat
xor
pop
loopne
cmpl
insl
mov
xor
test
or
dec
sti
mov
and
shlb
clc
lcall
inc
out
pusha
mov
clc
arpl
jns
es
mov
outsb
mov
iret
out
and
jnp
fxch
dec
cmpsb
dec
pop
fisttps
insb
add
scas
xor
insl
and
shlb
inc
add
lret
aaa
out
addb
push
inc
xchg
mov
fldl
pop
cli
pop
push
pushf
jl
leave
test
call
repnz
mov
sbb
mov
xor
aaa
push
jno
scas
mov
pop
rolb
dec
add
cltd
or
roll
out
and
orb
in
mov
in
mov
mov
into
xchg
imul
adc
cld
sbb
cmpsl
mov
inc
pop
xlat
jae
xor
pop
mov
cmpsb
lods
pop
in
lods
xchg
std
pop
testb
jbe
cmp
fsubl
leave
or
xchg
sarl
mov
sti
in
mov
pusha
jns
add
xchg
cmp
dec
insl
fmull
leave
daa
adc
imul
in
lock
xchg
ror
aas
sub
xor
dec
sub
aam
stc
add
lods
aam
dec
ds
in
sbb
pop
xchg
mov
adc
sarb
insl
add
sbb
sub
mov
stos
cmp
or
loope
mov
jbe
sbb
inc
rcrl
std
dec
push
xchg
out
and
sub
rclb
mov
jmp
bound
fdivrl
test
jb
aaa
imul
sbb
add
fimull
loope
orl
rcrl
xchg
mov
xchg
test
in
cmpl
or
jmp
popf
in
mov
std
loop
sub
jnp
cmp
fucomip
jge
mov
mov
lods
jmp
cmp
rorl
mov
rclb
sti
cmp
xchg
shll
inc
push
pushf
pop
andb
mov
inc
mov
jno
repz
lods
adc
cwtl
testb
cwtl
mov
jle
addr16
add
pusha
mov
sub
push
push
mov
inc
mov
mov
jp
mov
jecxz
cmp
mov
std
mov
loope
pop
adc
push
or
in
nop
cmp
loope,pt
mov
dec
pop
push
cld
xor
mov
pop
out
cmpb
add
arpl
mov
repnz
or
cmp
sub
loopne
sub
cld
sahf
xrelease
xlat
inc
sbb
movb
sub
dec
xor
jmp
sub
jb
cmp
add
mov
sbb
sub
ror
jmp
sbb
stos
add
adc
mov
aas
push
or
and
push
stc
mov
roll
insl
jge
dec
call
fwait
cmp
fcoml
fwait
dec
sub
pop
insb
xlat
in
aas
outsl
outsl
mov
xchg
int3
push
jg
shll
inc
add
mov
insb
ja
test
jns
int
cmp
movsl
int3
push
ret
mov
xchg
adc
inc
clc
fimuls
inc
shrl
in
outsb
or
jge
out
or
mov
addr16
test
add
into
adc
sub
xchg
pop
test
sbb
hlt
pop
sbb
push
add
lcall
fs
xchg
mov
in
dec
std
sub
jge
mov
clc
fxch
and
or
pop
mov
sahf
adc
cmpsl
call
push
lret
dec
mov
jle
es
mov
mov
out
and
cli
jb
mov
lods
xor
adc
loope
or
std
cld
sbb
push
mov
sbb
jg
mov
push
xor
adc
mov
mov
stc
pop
push
ret
fistpll
inc
dec
sbb
jmp
add
out
mov
ds
fsub
shll
cli
push
test
ret
mov
out
outsb
sti
test
push
addr16
loop
arpl
cmp
ss
aam
ss
icebp
adc
inc
sub
ret
rclb
dec
push
cmp
pop
sub
pop
sbb
call
mov
lods
into
sti
lock
pop
add
cmpsb
ficoms
fstps
mov
in
notb
ljmp
jmp
ds
mov
xchg
push
ss
subl
mov
cmp
pop
iret
jae
push
jno
mov
repnz
jmp
das
push
fnstsw
cmp
shl
imul
sbb
adc
add
scas
mov
xor
fwait
cmp
pop
sub
mov
xor
popf
packuswb
adc
inc
pmulhw
jbe
popa
insb
movb
mov
pop
push
push
gs
mov
mov
icebp
in
movsl
xchg
in
xor
mov
xchg
in
jb
or
clc
sub
outsl
loopne
jo
lds
xlat
out
std
cwtl
jl
xor
push
std
loopne
inc
push
inc
popa
fmuls
mov
jbe
popf
das
mov
test
stos
lret
jge
lds
test
jmp
jae
cmp
add
and
add
scas
xor
imul
mov
dec
fiadds
xchg
or
push
aam
in
mov
dec
push
fsts
test
mov
inc
div
lea
xchg
push
nop
aad
jae
or
adc
mov
inc
out
addr16
mov
xchg
dec
popf
andl
or
inc
imul
sbb
adc
loop
fnsave
loope
and
push
mov
scas
js
cmp
fldl
shr
xchg
imul
outsl
fdivp
dec
mov
test
popa
push
lret
inc
xchg
pop
jg
orl
jle
stos
gs
cmp
xlat
mov
hlt
ja
push
inc
inc
push
add
test
loope
mov
mov
mov
je
pop
mov
sbb
ljmp
jne
and
shl
fs
sub
inc
xchg
lods
jle
data16
and
in
cmp
fsubl
in
xor
sbb
mov
scas
mov
inc
leave
addr16
cmp
adc
inc
mov
rcrl
ret
clc
scas
in
stos
popa
dec
cmc
arpl
fimuls
pop
or
imul
lods
xchg
and
push
xlat
mov
or
pop
fldl
push
push
rorl
mov
lret
dec
pop
mov
cmp
inc
ja
imul
adc
sbb
push
mov
fxch
cs
dec
xchg
sbb
test
xorb
sbb
shrl
mov
sub
jp
cld
inc
push
jecxz
data16
repz
mov
xchg
loope
iret
xor
lods
imul
orl
push
adc
pusha
push
and
mov
mov
xchg
test
das
outsl
into
push
jp
enter
dec
in
shrl
pusha
loopne
in
pop
pop
add
mov
sub
lret
lcall
mov
mov
push
add
lcall
test
sub
sub
xchg
dec
cmp
addr16
vpmulhw
push
into
push
scas
mov
dec
pusha
dec
dec
loop
incb
inc
sar
test
fnstsw
add
and
sbbl
ja
jle
ds
mov
sbb
xor
xchg
int
mov
mov
cmp
fsubrl
xchg
frstor
subb
shll
sub
adc
jmp
sbb
test
into
mov
cli
mov
bound
add
scas
in
mov
sahf
mov
cs
mov
add
and
sub
inc
cwtl
cmp
frstor
pop
dec
cmp
stos
xchg
ficoml
lea
cltd
les
bound
cmp
or
jmp
inc
out
xor
lret
adc
mov
pop
mov
and
jae
and
and
xchg
fldenv
loopne
dec
test
pop
je
and
lods
adc
jnp
test
and
pop
jmp
inc
aam
js
pushf
pop
pusha
xchg
shrd
xchg
flds
sub
jbe
mov
dec
dec
mov
inc
cs
pop
lea
mov
cs
adc
ret
mov
xchg
lods
mov
bound
sahf
out
xor
jl
sub
and
test
xchg
scas
cmp
mov
xor
push
pop
inc
lret
push
mov
sahf
nop
push
out
or
jb
xor
lds
iret
call
jne
push
addr16
loop
lahf
jnp
in
je
dec
inc
fsubrl
fimull
outsl
loop
jns
hlt
xor
popa
js
add
xchg
rol
xor
je,pn
into
cwtl
add
fldenv
gs
arpl
add
push
aaa
outsb
xchg
popf
jle
lcall
mov
inc
sbb
sub
mov
ja
lea
insl
jb
sub
les
push
test
dec
dec
aam
lods
imul
sub
pop
mov
test
nop
aad
stos
test
mov
rep
pusha
pusha
por
nop
push
sahf
cmp
imul
jo
jp
mov
mov
cmc
inc
inc
stos
repz
pop
adc
popf
pop
iret
loop
loope
icebp
jbe
inc
or
xor
jno
pop
jae
and
gs
sbb
cmp
adc
je
ljmp
jbe
mov
sahf
mov
push
nop
sbbl
rcr
mov
jp
test
lret
xchg
fistpl
mov
jo
aaa
scas
das
rol
pop
fmuls
cli
outsl
or
push
or
enter
loop
loope
mov
aad
cltd
repz
lret
xchg
dec
iret
gs
ret
inc
xor
sub
in
or
pop
clc
inc
out
andb
test
int
es
sub
ret
or
push
ja
pop
sbb
dec
neg
mov
fidivs
rorl
sti
sub
or
pop
fdivs
cli
pop
and
lods
shll
push
and
push
pop
popf
dec
pop
xchg
addr16
clc
popa
jecxz
jae
xlat
pusha
mov
imul
pop
ret
fwait
dec
dec
sub
pop
mov
mov
cmp
add
push
add
xor
lods
jns
int
mov
sub
in
call
mov
aad
mov
inc
pop
push
mov
fcomip
mov
or
xor
mov
rcl
mov
xchg
mov
in
mov
add
jbe
aam
add
mov
frstor
xor
das
pop
pop
repnz
mov
pop
sbb
xchg
popa
mov
sub
enter
shrb
inc
adc
pop
pushf
fwait
cmp
and
inc
movsl
movnti
inc
sub
mov
idivl
jge
push
pop
jno
xor
sbb
out
sbb
add
mov
inc
adc
std
clc
jmp
push
add
shlb
pop
adc
or
mov
xchg
test
cmpsb
rclb
and
push
mov
pop
adc
std
out
jo
xchg
mov
adc
gs
mov
mov
test
imul
mov
add
sti
mov
sub
into
imul
fidivrl
xchg
add
in
cmpsl
mov
ficomps
adc
lcall
adc
aas
add
loopne
push
mov
xor
insb
insl
adcb
sub
sub
and
call
add
int3
lds
or
ljmp
jmp
mov
data16
mov
sbb
push
push
icebp
jnp
loopne
jmp
mov
aad
push
pop
mov
call
scas
ja
adc
or
es
sub
pop
push
ljmp
sti
sub
mov
jns
sbb
test
das
push
cmpsb
cld
enter
or
mov
pop
fwait
mov
push
mov
and
jecxz
xor
xor
fistpl
and
std
jle
movsl
mov
and
push
push
jecxz
xchg
push
dec
xlat
les
outsl
inc
enter
sub
gs
mov
arpl
lea
inc
mov
sub
cs
ja
ljmp
loop
repz
mov
clc
addr16
into
pusha
add
imul
push
cld
fimuls
movsb
ja
xchg
repz
dec
js
mov
pop
push
jl
mov
mov
xor
xchg
push
cmpxchg
call
inc
xchg
sub
inc
je
or
test
fucompp
jno
xchg
pop
push
mov
sub
mov
cmpsb
dec
dec
loopne
sub
pop
int3
or
psadbw
neg
sahf
xor
push
repnz
clc
sbb
notl
adc
xor
enter
out
and
cli
mulb
loopne
inc
rcpps
bound
cli
dec
sbb
inc
mov
inc
push
cmp
cmp
test
in
fld1
cltd
push
mov
push
xchg
mulb
xchg
movsb
shrl
sub
or
pop
pop
pop
xchg
mov
test
dec
mov
sub
stos
adc
or
xchg
mov
mov
push
inc
vsqrtpd
gs
dec
test
fcmovbe
sbb
add
jne,pt
js
mov
cmp
in
fisubrs
popf
cmpsb
pop
fidivrl
ret
xor
inc
pop
sub
cmpsl
outsl
cmovnp
pusha
dec
or
dec
mov
aas
shl
adc
push
dec
in
orb
push
mov
in
mov
cmp
ss
pushf
adc
sti
mov
lods
gs
xchg
outsb
push
add
dec
in
lock
imul
sub
add
pop
insb
mov
outsb
or
mov
lods
pop
popa
flds
ficoml
in
divb
vprotw
adc
call
stos
dec
xor
inc
pop
movsl
leave
jl
ret
or
lret
sbb
out
push
or
inc
scas
jmp
movsl
insl
out
stos
call
enter
lret
outsb
addl
mov
jecxz
mov
inc
pop
mov
sub
mov
test
loop
jo
cmp
int3
dec
es
stos
mov
dec
pushl
call
sub
sar
lods
lea
mov
fidivs
psrad
dec
movsl
movsb
loopne
outsl
mov
stc
lret
add
mov
xchg
jmp
inc
imul
and
cmp
jne
cwtl
iret
cmp
xchg
and
subb
adc
push
or
data16
addl
fistpll
scas
dec
fwait
out
xchg
xor
add
aaa
mov
pop
mov
and
sbb
cwtl
int
lds
lods
lret
rcll
sbb
mov
mov
test
in
arpl
int
cwtl
and
movsl
cmp
scas
push
dec
into
lcall
fprem
pop
loop
in
dec
add
daa
xor
pop
mov
dec
cltd
scas
dec
sub
rcrb
jns
pop
incl
pop
sub
shlb
and
orl
cltd
in
add
cs
sbb
dec
add
jg
jns
shll
xor
cli
push
or
cwtl
fwait
adc
mov
in
mov
mov
cld
sahf
push
dec
div
in
mov
cmp
sbb
jno
je,pt
push
cmp
mov
sbb
loope
pusha
push
push
jbe
mov
add
inc
adc
xor
outsb
mov
lret
push
xchg
push
add
nop
shrl
sbb
test
xchg
sub
mov
mov
push
loop
sbb
mov
hlt
or
pop
addr16
xor
jb
inc
outsb
leave
jnp
mov
xor
movsb
jae
add
jmp
jnp
std
mov
test
pushf
push
add
cwtl
in
or
cltd
dec
push
xor
mov
push
xchg
imul
loop
movl
shll
bound
orb
enter
ficomps
push
ficoml
push
pop
mov
mov
popa
js
push
fnstcw
aad
ficoml
xor
daa
adc
mov
imul
lea
stc
loopew
push
es
dec
adc
pop
mov
jmp
jle
cmc
pop
test
adc
cs
add
int3
hlt
dec
mov
loop
fists
fsts
mov
jecxz
test
or
cmpsb
aas
aaa
lcall
inc
cmc
jae
in
movsl
fwait
jno
aaa
dec
or
pop
mov
cmp
sub
mov
sti
jbe
mov
jno
jg
rcll
mov
cwtl
mov
mov
mov
jo
mov
call
mul
aam
fs
aas
cmp
aad
xor
pop
mov
loop
imul
jecxz
lret
push
mov
rcrl
cmpsb
fistps
or
pop
test
out
add
in
imul
in
cs
xor
ja
std
push
push
cld
int3
icebp
push
fdivl
lahf
cmp
xorl
dec
xchg
cmpsl
mov
push
fnstenv
cmp
pop
and
test
dec
insl
add
xchg
ja
inc
xchg
test
shll
leave
cmp
mov
lret
push
cmp
xchg
ss
cmpsb
inc
fsubrl
movsl
mov
add
das
push
fs
lcall
adc
test
sub
stc
in
sub
jl
pop
mov
xchg
inc
and
add
jns
mov
pop
jae
add
push
stc
dec
jmp
push
jns
rorb
xor
mov
sbb
fistpl
cmpsl
push
jnp
pop
lods
sbb
loope
push
flds
lock
xchg
roll
in
and
int
lods
arpl
jbe
faddp
mov
movsb
dec
sti
test
jae
pop
stos
lods
mov
jns
ror
test
stc
popa
cmp
mov
dec
inc
lret
movsl
dec
fs
jle
stos
push
jmp
lahf
and
push
sub
rorl
aad
js
std
xchg
jl
cwtl
mov
add
push
notl
ljmp
sub
jmp
jg
rcl
fimuls
mov
mov
and
test
aas
and
lcall
xchg
out
inc
lock
outsb
lods
inc
lods
xchg
jno
pop
and
sti
adc
dec
adc
lock
add
lea
pop
mov
pop
push
add
enter
cmp
notl
imul
repz
arpl
nop
xchg
push
clc
mov
int
daa
insb
popa
popa
out
fistps
push
pop
lea
aad
add
outsl
popf
ret
out
arpl
sarb
andb
dec
dec
dec
sti
xchg
fsubrs
dec
dec
test
jne
test
es
push
cmp
es
jae
test
fs
lods
pushf
xchg
dec
xchg
lods
cltd
fxch
out
sub
jge
sub
jnp
aam
loopew
ds
dec
test
movhps
sbb
imul
bound
stos
in
movsl
addr16
sub
or
stc
movsb
aad
xor
cmp
sbb
inc
xchg
aaa
sti
lcall
mov
mov
shll
xchg
mov
xchg
inc
sbb
test
data16
ficomps
sbb
mov
cmp
push
lret
sbb
dec
jns
and
dec
mov
mov
dec
ret
aaa
pop
and
xor
data16
lahf
hlt
aam
pop
mov
fsubrl
inc
cltd
jge
jle
jae
repz
pushl
lds
or
pushf
loope
or
cmp
imul
push
rolb
dec
sti
mov
sub
inc
stos
leave
xchg
lret
xor
dec
lods
mov
xor
mov
cs
or
add
and
orb
cmp
lret
lret
shlb
scas
dec
into
fiadds
cmp
mov
jg
xchg
shll
fistps
xor
test
inc
jo
pushf
pop
jmp
and
push
sarb
cmp
imul
and
aas
test
dec
cli
addr16
inc
sbb
cmp
popa
fisttpll
inc
out
cmp
cmp
xorl
cmp
or
lods
dec
nop
mov
inc
mov
pop
mov
imul
mov
adc
push
push
mov
push
into
int3
cmpsb
sub
cmpsl
imul
fwait
insb
xchg
mov
dec
push
lea
jg
dec
mov
in
add
xchg
dec
in
or
inc
cmp
add
sbb
xlat
adc
sbb
das
xchg
mov
adc
xchg
sti
jmp
xchg
data16
push
xchg
mov
jnp
loop
add
jnp
xor
xor
js
pop
ja
or
mov
sahf
outsb
mov
dec
mov
pop
lret
push
je
cmp
mov
pop
into
jp
mov
inc
sbb
lds
or
dec
dec
or
xor
popf
mov
pushf
gs
lds
jmp
xchg
outsl
dec
test
orb
push
sub
das
test
imulb
sbb
push
out
test
rorb
or
pop
mov
push
sbb
je
hlt
cltd
roll
sub
or
mov
out
ljmp
arpl
imul
scas
scas
adc
int
dec
adc
xchg
movsb
adcb
inc
mov
dec
sbb
xchg
imul
test
inc
sbb
ds
adc
jns
inc
lods
mov
movsb
push
inc
iret
cmp
cltd
xor
rorb
shll
pop
cmpl
imul
or
inc
hlt
int
sbb
data16
xor
xor
lcall
popa
outsb
dec
outsl
cwtl
cli
xchg
inc
loope
pop
insb
and
mov
cld
mov
add
outsb
inc
repz
cltd
pusha
and
sbb
movsl
sub
pop
xor
add
rcrb
icebp
xchg
mov
sub
cmp
mov
or
in
jg
sahf
sub
clc
inc
rclb
jp
mov
test
xor
pushf
mov
into
jmp
dec
and
je
mov
cmp
pop
out
js
ss
int
jl
add
adc
cmc
insb
fsubl
add
das
lods
cmp
bnd
lahf
xchg
mov
push
push
lret
sti
push
dec
xor
aaa
cs
ret
or
xlat
dec
fidivl
xchg
cmc
or
sbb
call
daa
or
stos
sbb
xchg
scas
lods
or
imul
hlt
or
out
inc
sahf
and
fnstsw
int
test
sub
out
sub
loop
jmp
cmpsl
rorb
scas
mov
fmuls
pop
cmp
outsb
mov
inc
scas
mov
pop
inc
out
out
and
jbe
mov
shll
cmp
decb
lods
sub
es
pop
sbb
pushf
lock
dec
data16
insl
or
mov
popa
ljmp
iret
xchg
in
pop
sti
and
add
push
or
lods
adc
outsl
mov
daa
sbb
push
cli
cli
pop
lret
lds
and
div
jae
and
out
fdivr
shl
xor
test
gs
xchg
dec
dec
out
or
xchg
lahf
mov
xchg
push
pop
push
fwait
inc
sub
jno
sub
insl
gs
lods
sub
stos
xchg
cmp
in
dec
xor
adcb
jg
pop
loop
cltd
mov
sbb
loopne
dec
icebp
hlt
test
cld
inc
xchg
shll
pop
daa
inc
mov
push
mov
mov
adc
xchg
mov
push
scas
add
xchg
aas
loope
cwtl
xchg
add
mov
pop
dec
aaa
lahf
cmp
pop
cs
xchg
mov
or
and
pushf
arpl
cli
rcrb
jl
aam
pop
out
mov
xor
pop
popa
out
xchg
in
lds
loop
dec
cmp
and
xlat
and
bound
aad
mov
out
push
adc
and
and
mov
xchg
js
cmpsl
mov
mov
xor
and
fists
rol
testb
test
or
dec
nop
mov
pop
inc
add
mulb
pop
sbb
mov
lock
fdivrs
test
out
outsb
jle
or
mov
sbb
out
inc
jno
push
and
and
cmp
dec
and
repz
add
bnd
and
daa
pop
outsb
loope,pn
jp
inc
movsl
ror
xor
test
repz
xor
sub
jmp
daa
lahf
mov
mov
mov
test
and
xchg
dec
outsl
inc
stos
inc
jge
stc
sbb
into
adc
push
aas
repnz
mov
lods
scas
cltd
mov
fistps
daa
shll
out
xlat
rcrl
test
push
mov
xor
loop
jg
push
fistl
sbb
push
mov
add
pop
lock
push
jb
push
adc
or
out
sbb
clc
movsl
cmp
inc
scas
stos
popf
shll
out
jmp
sub
pop
lret
cmp
add
push
inc
sarb
jb
nop
clc
adc
dec
inc
in
xlat
dec
or
adc
xchg
ret
shll
push
mov
adc
in
sub
adc
ss
pop
push
xchg
andl
sub
mov
cmova
dec
movl
mov
lahf
dec
mov
mov
bound
xchg
nop
popf
xrelease
int
rorb
rclb
in
stc
pop
test
lret
je
push
loop
inc
fs
cmp
cld
ret
mov
jge
xchg
pop
xchg
jp
rclb
mov
xor
sti
jecxz
rol
lea
inc
adcb
mov
cmc
aad
inc
test
sub
sub
dec
ds
js
cmp
pop
mov
stos
aas
mov
out
jge
push
call
push
push
jle
and
leave
pushf
adc
sub
loop
outsb
mov
mov
push
xor
rcll
jne
loopne
and
xchg
loop
aaa
sbb
jns
mov
les
lds
scas
out
dec
inc
xchg
jmp
je
dec
mov
nop
and
imul
inc
add
scas
mov
cmp
loope
inc
sbb
jle
and
neg
pop
fisttpl
lcall
scas
leave
dec
jmp
stos
sbb
mov
jl
aam
or
ss
dec
and
pop
push
cli
movsb
aas
outsb
notl
mov
fimull
mov
popa
testl
iret
xor
jle
cmc
js
pop
js
xchg
mov
in
add
jo
sub
out
mov
mov
pop
sbb
cmp
sbb
inc
insl
xlat
inc
sbb
xchg
mov
jae
repnz
negb
ljmp
sub
test
mov
mov
xchg
xchg
pop
sbb
xchg
xor
movsb
cltd
test
outsl
shrb
cmp
and
dec
das
in
mov
arpl
repnz
jns
js
jg
loope
scas
push
cld
xchg
mov
push
mov
push
out
lock
jae
cmp
and
mov
xchg
aad
in
scas
push
inc
mov
xlat
test
push
movsl
and
mov
dec
dec
lret
and
cmp
imul
pop
movsl
movl
mov
sub
or
outsb
in
sarb
jecxz
or
fwait
push
xor
or
add
pop
xchg
aas
push
sub
dec
inc
inc
je
pop
shll
and
in
stos
mov
pushf
xchg
stos
insb
push
cltd
sub
test
dec
ljmp
lret
hlt
mov
ret
mov
nop
xchg
inc
popf
lods
cld
jg
rcrl
jmp
clc
fcomip
adc
mov
outsl
imulb
ret
in
fiadds
mov
shll
pop
push
popa
mov
xchg
and
sub
aad
and
test
adc
fucom
into
pop
and
stos
iret
xchg
fiadds
pop
repnz
loopne
add
ja
ret
iret
push
int
mov
dec
mov
sahf
jle
push
and
and
pop
xlat
lock
and
sub
inc
mov
pusha
pop
or
subb
incl
sbb
cmpsl
faddl
mov
pushf
roll
or
inc
stos
mov
cmp
dec
pusha
fidivrl
dec
sahf
xchg
xor
mov
jb
or
push
and
xor
sub
popf
enter
insl
mov
fldt
inc
pop
adc
add
loope
or
test
cmp
aaa
push
jb
xlat
leave
clc
jge
fsubs
imul
push
mov
xchg
jnp
jp
popf
sub
jae
dec
cld
sbb
out
shlb
shll
sub
xor
insb
aad
add
push
lahf
push
adc
inc
pop
inc
jle
jge
or
daa
and
fistps
add
and
adc
add
pop
shlb
inc
fistps
bound
xchg
lcall
mov
leave
add
inc
xor
leave
mov
jne
mov
cltd
and
mov
out
ds
inc
xor
scas
outsb
sbb
rol
xchg
inc
xor
mov
mov
fdivl
icebp
sar
pop
pop
jb
jae
pop
enter
or
adc
and
mov
adc
movsl
pop
push
loop
lods
sub
xchg
inc
inc
push
dec
add
dec
push
mov
pop
mov
inc
cmp
loop
dec
ds
mov
fsubl
xchg
addr16
xor
pop
mov
ret
fdivrs
add
push
jns
imull
lahf
xchg
ljmp
cli
inc
fdivs
loope
or
lahf
outsl
push
mov
push
mov
in
ljmp
jae
fcmovbe
std
cli
dec
and
lock
push
push
pop
pop
sub
lods
sub
add
in
jns
out
or
mov
xchg
sub
mov
pop
mov
movsb
outsl
or
or
fistpll
mov
sbb
xlat
aas
shlb
popl
inc
or
cwtl
cmp
jge
jg
mov
push
xlat
mov
jge
cmpsb
push
cli
jne
pop
inc
aaa
push
imul
pop
cmpsl
lods
inc
add
xor
and
pop
in
cs
std
pusha
out
jne
push
sahf
and
cli
xor
sub
ss
xor
inc
add
cli
pop
js
jbe
outsl
mov
mov
cli
adc
push
sub
imul
lcall
pop
xor
xchg
jp
jp
mov
jle
int
popa
int
sti
cmpsl
cs
fcmovu
mov
cmpb
push
call
imul
push
mov
mov
inc
rclb
data16
cld
pop
xor
shlb
xchg
ror
fwait
sub
lret
scas
cwtl
cmp
test
aam
xchg
and
cmpsl
call
jnp
cs
daa
imul
ds
and
xchg
in
test
imul
xchg
pop
incl
iret
xchg
xor
xchg
mov
cmp
inc
push
test
adc
mov
jb
aaa
xchg
imul
xchg
jnp
mov
jne
mov
push
xor
cmpsl
addr16
inc
addr16
scas
jae
mov
push
lea
adc
fs
mov
or
inc
jecxz
sbb
dec
cmp
sub
mov
popa
adc
lahf
mov
nop
rcll
imul
out
add
cmp
pop
jnp
lock
pop
pop
addr16
jno
push
int
jne
pop
aam
xor
xor
sbb
push
inc
rorl
jl
pop
lea
mov
push
pop
bound
outsl
mov
test
add
mov
mov
sbb
mov
add
mov
leave
repnz
pop
data16
cmp
add
hlt
hlt
mov
jns
cmpsl
mov
add
cli
mov
pop
xchg
ja
cmpsl
adc
das
je
out
mov
notl
push
mov
popf
inc
push
lret
and
jecxz
repz
push
gs
push
push
mov
cmc
add
jecxz
xor
mov
sbb
pop
cmp
mov
cmpsb
ds
xchg
aam
inc
ja
es
loop
push
pop
mov
hlt
and
loope
inc
jmp
mov
xor
insb
jo
ja
frstor
pop
lcall
fcomip
orb
loop
cwtl
cmc
rcrb
test
into
xchg
xchg
xchg
xchg
std
sti
repnz
mov
js
pop
push
mov
andl
sahf
and
add
inc
or
push
leave
mov
notl
fidivrs
inc
xchg
hlt
and
sahf
bound
std
mov
out
push
out
push
fisttpl
push
sub
mov
mov
mov
mov
arpl
mov
sbb
pop
jmp
sbb
cmp
adc
mov
lahf
xchg
rorl
icebp
das
mov
mov
lods
es
subb
cli
fisubrs
scas
jns
mov
movl
fdivrs
push
and
lds
dec
arpl
mov
arpl
cmp
xor
inc
sub
sub
mov
nop
ss
pop
icebp
cmp
or
popa
cwtl
adc
mov
lods
movsl
cmpsl
pop
mov
shrb
hlt
mov
inc
repnz
mov
or
aaa
fsub
sbb
jne
sbb
pop
nop
push
jecxz
push
inc
cmp
mov
out
sbb
inc
xchg
pushf
adc
adcl
mov
inc
mov
dec
or
lods
and
push
daa
mov
cltd
lcall
mov
xchg
lea
jb
popf
aad
jl
xchg
sbb
cmc
xchg
cld
sahf
aas
jne
dec
push
call
cs
loop
in
or
xor
pushf
arpl
add
lcall
cmc
jbe
clc
ficoms
ljmp
rcrl
mov
mov
cmp
sub
ss
sahf
popl
data16
add
call
inc
std
mov
sub
pop
cmpsb
out
pushl
cmp
in
cmp
arpl
into
ljmp
lods
fisttpl
jge
mov
xor
jecxz
or
outsb
rolb
xchg
dec
sti
xor
mov
jge
addr16
fldt
mov
and
sti
and
test
pop
mov
push
sbb
inc
push
pop
dec
shl
cmpb
dec
push
jns
cltd
inc
pop
xlat
lods
adc
pop
call
xlat
push
and
cmp
sub
out
adc
adc
fwait
cmp
hlt
dec
int3
cld
jno
lea
push
into
cmpsb
jne
cmc
cltd
mov
xchg
stos
pop
ss
in
loope
cmp
and
xor
imul
loop
iret
popf
movsl
jle
add
sub
cmp
ret
add
cmc
jne
xor
mov
and
jge
sub
pop
cltd
push
addb
mov
add
dec
pop
xchg
aaa
and
xor
xlat
lcall
sbb
stos
xlat
push
cmp
and
inc
movsl
arpl
mov
add
sbb
adc
mov
pop
test
cmp
in
inc
jbe
adc
pop
ja
scas
cmp
mov
mov
mov
sbb
dec
loop
ret
out
pop
jne
and
ds
sbb
cmp
inc
int
pop
iret
pop
push
cmp
sarb
into
lods
loop
push
insl
shrl
sub
jg
je
sbb
mov
aaa
mov
pop
cmp
out
les
out
fsubrs
or
ds
jnp
idiv
push
jecxz
icebp
aas
lods
mov
movsl
loop
mov
lods
aam
aaa
mov
push
mov
mov
pop
inc
leave
mov
leave
out
rolb
xor
lret
scas
insl
in
jnp
out
fists
lock
dec
or
std
test
pop
dec
mov
fcoml
inc
or
push
and
inc
or
cmp
ljmp
xor
fs
imul
int3
into
leave
xor
jle
inc
pushf
inc
jg
lods
mov
dec
repnz
aam
std
xchg
outsl
sub
mov
pop
rolb
das
fs
mov
movsl
imul
sbb
ss
scas
push
xchg
cli
pushf
and
outsl
mov
insl
adc
orb
lcall
popf
pusha
or
cmp
inc
adc
push
inc
fisttps
or
movsl
js
popa
outsl
xchg
sbb
mov
sarb
jmp
cmp
call
pop
dec
xchg
out
or
mov
icebp
cmp
in
sbb
push
fs
shrb
ret
cltd
mov
rcrb
adc
flds
arpl
xchg
push
pop
icebp
out
int3
aas
add
mov
mov
or
fstps
add
mov
lds
push
aam
adc
dec
sahf
sbb
jge
orb
fistps
das
inc
out
add
or
lds
cltd
orl
jbe
sbb
cmp
pop
jle,pn
and
push
dec
xor
mov
pop
add
movsl
aam
fdivs
stos
adc
or
mov
gs
mov
jg
loope
xor
mov
dec
enter
mov
scas
daa
mov
enter
jae
add
pop
inc
inc
bnd
dec
pushf
fsubs
mov
outsl
mov
movsb
push
ffree
outsl
and
xor
cwtl
add
or
or
pop
fcmovnb
mov
push
mov
fwait
xchg
shrl
xchg
cmp
movlps
mov
inc
xor
out
pushf
pop
pop
idivb
pop
pop
js
mov
xor
pop
mov
mov
std
xchg
lcall
xlat
sub
repz
xor
repz
mov
lea
cmp
js
mov
ja
inc
xchg
pushf
negb
in
sbb
mov
pop
test
push
mov
mov
xor
dec
push
mov
sbb
inc
or
rolb
xor
addl
xchg
jmp
push
push
xorl
dec
rol
sti
or
fs
fs
mov
hlt
ds
jg
pop
xchg
sub
int3
inc
inc
scas
and
push
mov
rorl
or
xor
test
fisttps
loope
cmp
lret
int
lods
pushf
popa
fldt
pop
pusha
clc
xor
xor
cmpsb
mov
bound
cld
mov
push
pop
pop
or
mov
enter
inc
mov
pop
in
mov
cmpsl
test
sar
int3
dec
lret
sub
mov
jne
and
add
in
adc
push
push
and
js
mov
push
and
out
lods
inc
arpl
aam
mov
xor
adc
jecxz
stos
cld
mov
push
mov
pop
jo
add
into
dec
shll
loopne
mov
xchg
mov
and
push
sbb
das
leave
lret
ret
outsb
sbbb
mov
dec
push
xor
jp
test
addl
mov
lahf
call
dec
test
or
mov
das
in
incb
add
fldl
or
mov
cmp
lods
xchg
inc
les
mov
cmp
shlb
adc
popf
rorb
add
stos
pop
cmc
sbb
xchg
rcrb
mov
out
stc
clc
lock
or
dec
fs
jg
mov
mov
outsl
xor
scas
adc
out
sbb
jns
in
xchg
lcall
mov
push
fimull
lods
mov
mov
or
adc
cmp
jmp
add
cld
leave
adc
test
in
cmc
sbb
xchg
testb
push
arpl
hlt
xchg
lods
mov
xchg
loop
ficompl
nop
jb
push
push
sbb
cltd
out
lret
data16
roll
icebp
fucom
xchg
shll
push
fildl
pop
repnz
imul
inc
int
dec
add
fidivrs
add
jecxz
push
es
inc
dec
imul
fwait
and
xor
xor
adc
and
repnz
pop
or
mov
mov
arpl
mov
andl
mov
jge
fs
in
jnp
outsb
data16
loopne
mov
dec
push
adc
fwait
push
or
xor
jno
dec
mov
jbe
sbb
mov
xor
test
enter
pop
pop
pushf
mov
ss
mov
mov
mov
loopne
sub
add
xor
sbb
insb
pop
push
ficomps
push
mov
xor
cmc
and
inc
rorl
jae
repz
mov
jmp
and
test
mov
dec
in
dec
jmp
inc
sbb
xchg
inc
or
and
and
cmpsb
pop
add
decb
leave
ss
aam
inc
in
xlat
push
sub
hlt
mov
pop
repnz
loop
sub
dec
pop
popf
and
inc
sbb
xor
push
pushl
jo
cmpsl
aaa
fnstcw
add
add
sbb
imul
jno
pop
out
out
test
and
cmp
xor
aas
sbb
in
std
cli
pop
cmpsb
or
push
xchg
dec
bound
iret
jbe
mov
dec
xor
cmp
push
call
cmp
mov
decl
adc
in
gs
adc
ja
jmp
fnsave
call
sti
scas
ret
mov
call
dec
scas
inc
cmp
ljmp
mov
inc
scas
mov
fidivs
dec
xor
xchg
shrb
jb
cmpsb
mov
push
add
movsl
jns
pop
rolb
xor
xchg
xor
imul
inc
es
xchg
jmp
mov
sub
ds
mov
adc
jge
mov
dec
or
mov
adc
sarb
mov
ss
hlt
lods
lret
xchg
fcomi
xchg
adc
gs
outsb
test
adc
sbb
ds
jl
xor
fstpl
adcb
mov
xchg
mov
or
jno
jb
ss
cmp
xchg
scas
test
and
cmp
push
and
mov
cmp
mov
popf
mov
mov
arpl
dec
pushf
sti
xchg
test
fsubrs
add
dec
lret
dec
cmp
cmp
cmpl
mov
add
mov
loop
sbb
mov
mov
popf
fsubs
mov
fimull
ljmp
popf
mov
push
scas
bnd
stos
pusha
pop
arpl
mov
mov
daa
bound
dec
xor
pusha
fstpl
test
nop
stc
xchg
mov
mov
cmp
mov
cmp
jl
dec
xor
lret
ret
xor
mov
mov
out
daa
loopne
cmp
rorl
mulb
push
mov
sub
jle
mov
xlat
gs
push
cmp
repz
mov
inc
js
jge
mov
mov
xchg
mov
test
jge
adc
aam
arpl
push
cltd
mov
dec
xchg
push
ficoml
inc
adc
dec
out
mov
add
xor
inc
push
jo
mov
fiadds
mov
or
mov
adc
cs
not
cli
lods
adc
push
leave
test
fs
xorb
in
rolb
xchg
pushf
add
xor
idivb
push
in
rcl
mov
cmp
pop
idivb
sbb
and
inc
jbe
fidivrl
jo
jle
jp
cmc
dec
ss
xchg
jge
add
inc
lret
fldcw
push
pop
pop
scas
mov
cmp
sti
push
shll
sbb
loop
mov
imul
sub
test
iret
ljmp
jae
jbe
icebp
add
shrl
sbb
jnp
sti
fstpt
push
mov
das
rolb
insb
dec
push
mov
iret
xor
call
aam
mov
mov
jmp
push
or
xchg
pop
xchg
jp
fcom
or
je
iret
jl
call
loope
stos
outsl
xchg
out
stos
dec
pop
pusha
xlat
cmp
shrl
sbb
jb
xor
sbb
popa
inc
mov
jge
out
mov
mov
xor
mov
inc
xchg
mov
dec
pop
in
hlt
inc
lea
mov
inc
add
pop
fists
int
add
orl
hlt
pop
icebp
je
jne
lds
fnstsw
imul
cmp
sbb
test
movsb
mov
icebp
or
fs
icebp
mov
jecxz
pop
pop
out
sub
and
popa
sub
and
pop
lods
divb
mov
shll
into
sbb
push
nop
or
adc
mov
fs
arpl
push
mov
mov
repnz
sbb
stos
sbb
sub
dec
test
in
mov
or
mov
push
inc
aad
xchg
dec
cwtl
jmp
xchg
cmpsl
pop
xor
mov
adc
hlt
adc
out
fsubrl
or
mov
test
jne
cmpsl
sub
cmpsb
lea
psrad
in
add
sbb
loope
movsl
addl
adc
test
popa
les
iret
pop
loopne
or
icebp
sbb
jge
icebp
jp
cltd
out
sti
or
fs
leave
mov
das
push
test
sbb
pushf
mov
je
mov
lock
fisubl
mov
out
adc
ficompl
lcall
add
sub
decb
es
es
push
push
mov
shlb
xor
push
xchg
sub
jns
jmp
in
mov
mov
test
fdecstp
push
das
and
mov
mov
dec
data16
mov
fisubs
sbb
int
aas
and
push
das
sbb
cs
loop
loopne
in
mov
and
lods
ficompl
jns
xchg
adc
out
js
pop
int3
bound
mov
mov
mov
adc
outsl
cmp
loopne
outsb
mov
sub
ja
push
dec
leave
shr
add
mov
daa
lahf
pop
xchg
adc
mov
fists
testl
sub
jo
stos
iret
adc
jp
or
cmc
and
cmp
or
divl
sub
dec
xchg
or
xchg
xlat
fmul
mov
jecxz
pop
push
bound
jno
pop
and
mov
inc
cmp
ret
shrd
int
sub
mov
pop
push
jnp
and
subb
pop
mov
jae
cli
jmp
push
in
jmp
test
cmp
push
inc
push
and
imul
out
addr16
sbb
dec
jnp
dec
sbb
test
mov
ret
jle
fisubs
addl
fidivs
xchg
fwait
jo
cmpsl
std
gs
jns
xor
xchg
cmpsl
xor
cmp
outsl
xchg
jne
xor
ss
mov
pusha
mov
fisubl
fcmovnb
xchg
mov
push
jb
fldt
loope
xchg
xor
orb
out
sub
sub
cs
or
xor
pop
xchg
cmp
mov
out
adcl
outsb
add
xchg
test
sbb
jl
sub
xchg
lea
xchg
fildl
sbb
mov
in
add
adcl
xor
je
mov
push
push
dec
js
xchg
inc
or
lahf
fs
daa
in
cmp
ss
or
mov
arpl
lret
adc
or
inc
fdivp
lock
dec
leave
cmpsb
cmp
inc
leave
or
cmp
xchg
push
andb
dec
jecxz
and
es
popa
js
inc
rcll
out
repz
loop
and
fs
or
jmp
mov
mov
push
dec
mov
nop
fadd
dec
mov
sbb
mov
mov
sahf
clc
aas
and
pop
sub
mov
fnstsw
mov
or
and
and
fnstenv
mov
vpinsrw
xchg
cld
out
pop
addb
and
cmp
pop
add
fisttpl
xlat
push
out
lret
push
xchg
lahf
lahf
sbb
jne
push
xchg
push
ret
push
lods
das
cwtl
rcll
test
aas
or
jns
fldt
pop
xlat
adc
mov
out
iret
inc
popa
inc
test
and
cmp
mov
and
or
mov
test
nop
or
js
cwtl
out
das
fsts
pop
shrl
xor
pop
into
xchg
xchg
jns
dec
pop
push
mov
nop
mov
popa
cs
loop
or
inc
sbb
in
sbb
rolb
rcrl
mov
and
xchg
and
xchg
add
xchg
fsubrs
pop
push
mov
cltd
stos
dec
pop
lods
pop
mov
inc
cmp
in
pop
stos
orb
sbb
repnz
cmp
xor
outsl
xlat
repz
and
insl
int3
filds
cs
adc
aas
lods
fcoms
and
xchg
mov
js
test
call
int3
mov
movsb
jmp
xor
cld
outsb
aam
sub
sub
cld
sub
xor
or
dec
call
arpl
xor
clc
daa
pop
leave
mov
mov
icebp
mov
mov
mov
xchg
mov
mov
inc
pop
das
and
shrb
sbb
pop
push
dec
sub
cli
xor
add
cmpsl
xor
test
ret
sbb
mov
pushf
dec
out
ljmp
mov
xchg
jbe
sub
fwait
out
xor
cmp
ds
inc
add
push
out
jo
or
push
jge
and
les
xor
push
pop
inc
nop
test
xchg
adc
mov
dec
push
push
pop
jns
dec
push
adc
or
xor
repnz
cwtl
sub
sbb
mov
scas
adc
or
add
mov
push
jb
push
mov
sbb
or
push
out
ja
and
fiadds
shll
sub
mov
stos
lods
or
mov
xchg
insb
imul
push
lods
ret
out
in
pusha
add
and
fdivs
inc
pop
mov
not
nop
pushf
daa
pop
ror
sbb
les
pop
dec
push
xor
pop
insl
fisubl
lods
mov
add
inc
test
sub
sub
int3
ret
sub
push
push
imul
pop
mov
in
xchg
push
mov
lea
outsl
cltd
movsl
push
jne
sub
mov
rcrb
push
lock
mov
add
stc
sti
xchg
dec
jmp
repz
jecxz
decl
into
fs
sbb
sbb
jle
mov
inc
inc
cltd
xor
imul
sbb
jns
mov
addr16
sbb
mov
lds
pop
mov
call
in
orl
cmpsl
loopne
addb
dec
jnp
and
cmpsl
lret
lds
call
cmp
pop
inc
cmp
and
scas
sbb
mov
mov
mov
fadds
daa
pop
jo
and
sub
xchg
int
xor
mov
negb
add
jns
gs
test
inc
jo
push
or
inc
pop
clc
jno
and
jns
cmc
jno
sahf
push
sub
push
daa
or
sbb
adc
lods
fcoms
mov
andl
in
pop
jb
sbb
shlb
ret
ljmp
xor
fdivrl
dec
repz
call
test
cmp
sbb
pop
xchg
outsl
sahf
pusha
insl
xor
dec
push
fdivr
jmp
mov
adcb
push
lahf
add
inc
mov
pop
shlb
mov
loope
fcoml
mov
mov
mov
movsl
dec
add
adc
imul
pop
adc
mov
outsb
rolb
icebp
jg
outsl
cltd
and
out
aas
das
cli
mov
rep
adc
xchg
cmp
jl
mull
dec
addl
cld
add
and
das
mov
mov
xchg
into
sbb
mov
sub
stc
imul
jae
or
addr16
loope
sub
xorl
pusha
push
adc
lret
ja
mov
push
and
aad
pop
mov
incb
or
loop
add
je
push
add
mov
sub
test
leave
cmpsl
adc
lcall
std
movsb
xchg
loopne
out
xchg
cmp
push
or
aam
inc
inc
sahf
test
xor
adcb
xchg
and
cmp
bound
and
add
mov
mov
in
xor
ljmp
jecxz
ret
mov
xlat
clc
pop
movsl
mov
jl
rcr
adc
xchg
push
sbb
pop
test
or
cltd
cmp
adc
mulb
xorb
or
lret
jbe
pop
je
das
and
mov
cmp
rcrl
int3
inc
and
pop
xchg
ja
xlat
cwtl
mov
xchg
orl
cmc
jno
and
jl
push
xchg
addr16
lods
pushf
mov
sbb
test
into
dec
scas
ficoms
inc
add
mov
movsl
stc
push
fdivrl
cmp
jbe
and
test
leave
aam
lcall
mov
ret
sub
sub
mov
xor
cmp
rorl
sbb
add
xor
pop
sub
mov
mov
stc
mov
pusha
aaa
pop
mov
sbb
sub
movsb
sti
sbb
xchg
cmp
sub
adc
test
jecxz
gs
push
dec
and
aaa
mov
sub
lahf
sar
insl
nop
sub
pop
add
ret
and
or
xchg
lea
into
push
jmp
jge
dec
imul
es
addl
sar
and
das
pop
out
and
or
push
pop
out
pop
fld
cmp
xchg
insb
xor
cmp
mov
adc
les
pushf
js
pop
sahf
icebp
mov
std
xor
pop
push
subl
aad
xchg
fsubrs
sub
add
mov
xchg
and
xor
out
xchg
cwtl
pop
pop
or
mov
jns
mov
sub
call
mov
jg
repz
jo
call
ja
fstpt
cmpb
cmc
pusha
sbb
sub
lods
mov
incb
lret
xor
pop
mov
call
adc
cmp
or
lock
inc
inc
leave
sbb
hlt
fisttps
pop
or
aaa
jae
pusha
xchg
or
jl
mov
call
lea
cmp
fnsave
lahf
test
pop
and
inc
dec
aam
jb
pop
out
mov
outsb
notl
cmp
pushf
insb
and
sbb
and
xchg
pop
add
mov
popa
push
out
fsub
adc
stos
mov
mov
orps
push
hlt
sti
cmp
dec
jne
lret
mov
jp
cltd
out
sysret
scas
iret
ret
inc
jp
negb
mov
push
aaa
mov
test
mov
mov
push
mov
and
mov
dec
pop
fwait
addb
rol
insl
lods
les
scas
mov
mov
jbe
ret
mov
xchg
mov
pop
mov
dec
shlb
jno
push
std
movsl
add
icebp
push
jg
pop
push
pop
fisttps
ljmp
xchg
add
add
mov
cmp
push
fsubr
dec
cmpb
xchg
dec
stos
outsl
lods
stos
push
in
movsl
iret
jae
adc
dec
push
pop
out
mov
std
push
push
and
and
fbstp
leave
fwait
int
cmp
xor
jb
cmpsb
mov
push
sub
mov
or
cwtl
fistpl
mov
mov
cli
fistl
out
pop
cmpsb
inc
xchg
ficoms
gs
sbb
sbb
lock
in
leave
es
int
in
mov
xor
test
add
push
shll
inc
inc
xor
cmp
mov
dec
sbb
adc
add
std
fdivrl
add
pop
adc
cwtl
insl
in
push
cmpl
test
ljmp
xor
cli
pop
cmp
mov
sub
jp
mov
in
movsl
and
popa
in
sbb
sahf
pop
adc
pop
inc
pop
loopne
loopne
aad
inc
aas
shll
and
fcoms
xor
pop
xchg
cs
push
loopne
or
push
rcr
sub
es
or
pop
popa
sahf
data16
movsl
and
cmp
stc
imul
adc
stos
jp
mov
xor
addr16
cmp
inc
pop
lahf
jb
sbb
mov
xchg
xchg
inc
stos
and
inc
test
xchg
fdiv
cmp
add
imul
insb
sbb
cmc
aam
xor
pop
mov
lret
push
push
fdivrl
jbe
adc
xor
cmp
sbb
out
xchg
xchg
or
jbe
es
sarl
dec
es
in
mov
mov
sub
fstl
stos
or
jmp
or
out
ret
pop
mov
adc
rcrl
fwait
jle
sub
repnz
out
loope
mov
add
add
lds
mov
dec
lret
ljmp
cmp
jo
sbb
pop
ljmp
arpl
jg
popa
pop
or
into
sbb
iret
cmp
fldt
in
xchg
rclb
ficomps
rol
xor
jnp
roll
push
cmp
xchg
mov
lods
inc
out
hlt
pop
cwtl
out
in
repnz
push
xchg
pop
aam
mov
dec
fistpl
sub
in
and
cmp
mov
inc
inc
inc
decl
pop
sub
or
cmp
add
test
test
add
cmpsl
pop
pop
dec
cmp
out
lds
popa
cwtl
or
leave
inc
pop
or
inc
icebp
insb
sub
cmp
push
mov
mov
xlat
jmp
ficompl
cmpsl
push
lea
mov
ljmp
loopne
jo
mov
out
xor
stc
fimull
std
mulb
pop
sbb
sbb
divb
outsb
in
mov
jp
push
inc
outsb
cld
cmp
jnp
popf
pop
mov
cmp
dec
cwtl
jae
pop
jno
pop
sbb
jnp
cltd
sbb
dec
xchg
in
out
out
adc
shlb
insl
dec
pop
mov
cs
lock
adc
shrl
in
iret
dec
pop
shlb
sti
pop
ret
outsl
jg
iret
test
stos
pop
add
ss
mov
xor
lcall
mov
call
add
imul
xor
movsl
neg
inc
jae
or
bound
jnp
xor
aaa
sbb
mov
inc
pop
bound
hlt
dec
xchg
cli
cmpsl
cmpsl
add
or
cmp
xor
adc
cwtl
adc
loope
dec
sbb
fstpt
movsl
mov
xchg
lcall
data16
push
push
lret
test
push
xor
inc
icebp
push
and
clc
push
push
inc
add
imul
sbb
aam
pop
leave
cltd
cmpsl
cmpsl
xor
jle
adc
test
out
iret
xchg
dec
jb
mov
frndint
and
xchg
cwtl
cmpsb
mov
cmp
mov
in
or
mov
xchg
or
jg
xor
cmp
xorb
ljmp
push
jb
pop
subl
sbb
push
shrl
loopne
ss
lcall
and
push
pop
fldt
and
push
cld
das
test
sbb
pop
movsl
push
lret
xchg
add
cmp
je
sub
add
adc
xchg
call
leave
cmp
in
mov
cmp
fisubs
xor
mov
fwait
and
push
xor
fmuls
xchg
ljmp
divl
outsl
mov
adc
mov
xchg
mov
ret
lds
pusha
or
loope
mov
testl
push
sub
push
nopl
stc
inc
mov
std
repnz
out
gs
mov
jg
imul
loopne
mov
daa
adc
sahf
leave
shlb
imul
jle
mov
int
xor
lahf
xor
jmp
xor
cmp
dec
rcr
scas
xor
pop
mov
add
insl
sbb
bound
and
add
pmaxub
xor
xchg
jne
test
xchg
sub
out
ss
xlat
jl
fnstsw
aas
jmp
and
pop
mov
sbb
jb
mov
cwtl
insb
mov
rcl
fcomip
mov
shll
movsb
jnp
mov
lcall
add
xchg
sbb
insl
insb
push
outsb
es
sbb
push
xor
mov
and
fcomps
popf
mov
mov
jge
ljmp
shll
sahf
in
cmp
push
insl
pmaddwd
mov
int3
je
inc
jnp
inc
outsb
ss
sbb
lods
mov
idivl
xlat
movsb
rcl
pop
jle
adc
push
shr
f2xm1
mov
push
jmp
into
mov
xor
dec
fimull
pop
cmp
in
stos
popf
es
and
jecxz
mov
or
jp
xor
sbb
sbb
orps
xchg
lds
pop
in
lods
outsb
xchg
popa
call
cli
sbb
pop
push
jbe
pop
adc
push
jmp
mov
pop
xchg
outsl
xchg
adc
into
sbb
xchg
scas
mov
loop
dec
lds
jl
inc
dec
pop
mov
bound
std
rcr
xchg
mov
adc
xor
ds
adc
mov
lea
sarl
lods
fistps
jb
in
mov
push
jne
cmp
push
mov
ret
shrb
fs
into
xchg
jb
adc
push
adc
aaa
mov
cmp
test
push
popa
push
addr16
rcrl
lret
jg
cmp
xchg
mov
sbb
ret
mov
hlt
pop
xchg
push
sub
cli
scas
jns
int
fs
xor
jne
or
in
mov
cmp
jmp
cld
jp
test
pop
xor
xor
sbb
popa
add
mov
lahf
mov
push
pop
adc
fwait
cmp
or
jae
addr16
mov
xchg
inc
cmc
jmp
and
mov
scas
jno
push
insl
lds
nop
mov
mov
mov
push
data16
jg
hlt
daa
shlb
dec
out
stc
test
rcll
adc
xor
pop
push
dec
xchg
dec
push
jmp
je
xchg
push
jno
push
mov
sbb
xor
rolb
pusha
cmp
aam
cmp
arpl
out
enter
int
push
into
push
mov
call
adc
stos
push
aad
js
imul
push
add
add
or
pop
mov
fcmovnu
push
xor
pop
push
repz
push
je
data16
bound
sahf
orl
aam
out
mov
les
insl
jge
sti
sar
into
or
shlb
cltd
outsb
mov
inc
pushf
das
dec
sub
adc
cli
adc
mov
cwtl
dec
adc
mov
sbb
mov
mov
sub
add
and
sbb
or
maxps
push
mov
cmp
dec
lret
cmc
rol
push
add
pusha
jge
jle
jbe,pn
popa
sub
push
jecxz
mov
sub
sbb
sub
lds
out
add
js
pop
mov
jg
imul
leave
cld
das
pop
push
mov
adc
sbb
mov
mov
jmp
xchg
and
jne
xor
dec
cli
sar
add
cmp
mull
jge
jo
stc
add
idivl
mov
das
dec
mov
loop
aam
mov
mov
mov
js
fstpl
out
cmpsb
aad
mov
pshufw
inc
ds
insb
std
mov
push
mov
mov
xchg
gs
ds
cmp
repz
xor
orb
lahf
xor
and
insl
add
pop
mov
fistpll
movsl
arpl
pop
into
cmp
stc
lock
inc
je
cmp
pop
push
or
dec
out
scas
inc
stc
ss
and
enter
shl
mov
inc
or
push
sub
test
mov
addl
lods
jne
cmp
mov
mov
fs
mov
jb
mov
xchg
inc
insb
out
sub
stos
push
mov
gs
push
cmc
cs
popf
les
xchg
jp
les
test
jno
mov
mov
inc
je
out
jg
mov
ss
lret
xchg
and
ror
jl
adc
imul
rorb
out
sbb
movsl
xor
insb
adc
rcl
pushf
sahf
roll
inc
xor
xor
lahf
bound
xchg
sub
push
daa
mov
aam
jmp
sbb
xchg
pop
mov
stos
sub
stos
mov
out
push
aaa
jo
mov
dec
in
pop
mov
cmc
mov
and
push
and
xchg
pop
xchg
pop
stos
cltd
arpl
push
jne
cmovg
push
or
push
nop
fsubrs
test
out
pop
dec
pop
lods
scas
and
or
mov
xchg
leave
subb
popf
and
mov
add
dec
mov
movsb
aas
mov
pop
loop
xchg
pop
push
imul
scas
dec
pop
or
loopne
cmp
mov
pop
test
xchg
xchg
mov
sbb
fdivs
push
roll
mov
pop
jo
subl
bound
jbe
inc
xchg
sub
fdivrs
mov
jge
xor
inc
aas
outsl
in
cmp
fisttpl
notl
mov
fnstsw
sahf
int
fs
es
cmpsl
incl
int
cmpsb
mov
ficoms
xchg
xor
adc
inc
dec
jp
insl
push
mov
out
cli
ljmp
outsb
and
push
loope
or
rorl
mov
pop
gs
test
mov
xor
adc
cmp
mov
xchg
cmp
jne
dec
mov
test
and
lods
out
adc
pop
push
add
imul
inc
int3
inc
xor
mov
push
push
xor
jbe
mov
jp
int3
fcomps
lock
cmpl
or
movhlps
pop
dec
push
jb
or
loopne
adc
dec
out
loope
jb
stos
and
rcr
imul
adc
cmp
dec
lods
add
daa
rol
mov
pop
push
pop
mov
scas
into
lods
aas
popf
add
inc
ja
sbb
jbe
ret
xchg
repz
mov
repz
pop
adc
js
jp
jecxz
leave
or
mov
pop
jnp
lcall
sbb
adc
xchg
insl
pop
mov
jnp
rcrb
std
out
loope
cld
cmp
loop
mov
clc
cmp
sbb
dec
ret
cmp
insl
or
pop
in
push
in
or
roll
cmp
jnp
add
into
ds
outsb
and
jns
xor
in
ret
mov
test
out
dec
nop
sbb
ja
lahf
jecxz
in
and
ljmp
mov
outsb
repz
or
dec
push
in
pop
sub
mov
mov
and
daa
dec
dec
jmp
pop
xchg
xchg
sub
push
push
jno
lds
inc
repnz
jnp
arpl
lcall
push
cltd
mov
push
fmull
les
je
stos
mov
sub
pop
sbb
popa
stos
inc
test
clc
push
and
imul
xchg
hlt
add
xor
fidivrs
movsl
mov
pop
mov
arpl
mov
inc
lods
inc
shll
in
jp
push
fnstsw
xchg
in
addr16
pop
les
fsubs
iret
es
les
cwtl
insl
jg
cmc
cmp
shrl
test
repz
and
xor
movsl
lret
testb
popf
cmpsb
sub
call
fwait
cmp
add
mov
js
mov
mov
repz
dec
jne
arpl
stos
mov
push
ds
pop
cmp
pop
or
cmp
and
xorb
pop
fdivs
lods
push
shr
mov
mov
add
jae
movsb
dec
mov
fadds
out
and
mov
clc
leave
lock
jp
push
jnp
jge
leave
push
test
pop
inc
sub
movsb
pushf
fs
stc
mov
mov
or
cltd
fidivrl
jno
mov
push
push
in
popa
out
fwait
rcrb
lds
std
and
pop
inc
movb
outsl
call
pop
or
in
or
pushf
insl
imulb
lret
stos
mov
cmc
cmp
repnz
sbb
pop
pop
xchg
inc
add
pop
add
movsb
js
bound
sub
or
sarb
mov
add
into
inc
add
xchg
jle
testb
lahf
sbb
ds
sub
andl
and
popf
lret
pop
and
push
jns
mov
outsb
adc
mov
inc
and
neg
lret
in
dec
std
adc
cmpl
inc
adc
arpl
sub
sub
test
arpl
jae
adc
push
repnz
aaa
insl
std
repnz
mov
xchg
push
or
lock
mov
adc
jmp
push
outsl
cmpsl
cli
ss
and
add
push
lock
pop
ja
repz
jo
inc
into
dec
aaa
fsts
mov
popa
cmp
adc
or
adc
xor
jecxz
imul
jge
sub
jmp
or
lock
pop
push
test
shl
pushl
jg
imul
icebp
divb
sub
sbb
xorb
or
shrl
loope
mov
push
xor
adc
cmc
insl
leave
pop
test
out
aad
sub
mov
mov
sub
jbe
ret
out
aad
sbb
mov
or
bound
xor
xchg
push
aam
ret
popf
inc
mov
sbb
pop
loop
adc
sbb
mov
out
fwait
sbb
repnz
jbe
hlt
out
and
fs
push
jle
std
je
mov
call
repnz
inc
mov
push
test
jae
imul
jbe
icebp
les
sbb
andb
mov
xchg
inc
test
mov
or
xor
sbbl
icebp
dec
xor
mov
fbld
inc
iret
push
xor
pusha
jg
mov
lcall
sti
out
je
repz
push
test
outsl
hlt
fstpt
xor
mov
je
roll
cs
aad
mov
shr
mov
pop
push
jp
ret
jo
sub
jg
or
ror
jl
es
ja
mov
push
cli
mov
ret
jp
pop
frstor
mov
mov
shufps
add
push
adc
mov
sub
mov
mov
add
push
faddl
mov
dec
add
out
std
testb
or
cmp
gs
jns
xchg
mov
and
aas
sbb
aad
repz
movsl
dec
push
iret
push
ss
mov
call
fnop
movb
cs
dec
das
das
mov
pop
repz
fs
xchg
inc
out
adc
cmp
sub
imull
out
mov
aam
dec
mov
pop
jo
jno
fisubrs
sarl
pop
inc
push
mov
sahf
sbb
adc
std
xlat
rol
push
inc
inc
ja
gs
cmp
jecxz
jg
lea
and
movsb
mov
rorb
mov
adc
sti
jb
xlat
inc
stc
pop
push
xor
and
push
or
rolb
es
push
fidivl
mov
in
lahf
into
sbb
cmp
push
sbb
push
mov
sti
lahf
push
add
jl
cmc
mov
pusha
mov
xor
adc
inc
cltd
aad
je
pop
bound
fimuls
data16
outsl
loop
cmp
xchg
jecxz
pop
adc
mov
sbb
outsl
mov
jns
sbb
push
int
sub
add
pop
cmovp
mov
int
pop
inc
dec
iret
mov
dec
icebp
les
push
xchg
ret
cmpsb
fildll
cmc
test
mov
daa
cmc
aad
mov
outsb
mov
adc
push
xor
int
stos
sbb
popf
aad
mov
mov
imul
clc
aaa
fldz
jecxz
lret
out
imull
test
das
fldt
cmp
rorb
outsb
jno
test
dec
shrl
push
dec
mov
dec
push
fsubrl
or
cwtl
pop
pop
hlt
dec
hlt
cmp
sbb
and
int3
movsl
push
jg
pop
popa
out
cltd
hlt
mov
push
mov
jp
sbb
pop
xor
jle
psubw
mov
mov
push
in
inc
jmp
out
dec
jno
int3
stc
pop
subb
outsl
push
mov
clc
cmp
int
insb
popf
mov
jg
adc
lods
push
aas
enter
loope
fidivl
cmpsb
mull
inc
push
addr16
jmp
sbb
xchg
pop
out
daa
test
jmp
aad
aam
or
cmpsb
mov
sub
push
or
das
mov
xchg
inc
dec
rcr
scas
fstpl
scas
push
fisttpll
sub
add
icebp
movsl
incl
xchg
bnd
mov
add
xor
mov
ds
add
pop
mov
out
loop
inc
data16
adc
lret
pop
jbe
or
lret
mov
mov
inc
mov
push
sub
lret
and
je
divb
xor
bound
insl
mov
dec
xor
xor
test
sbb
in
sbb
stc
andl
jbe
jg
cltd
lret
sub
mov
adc
clc
jmp
adc
inc
add
inc
mov
idivl
enter
popf
inc
fstl
push
notb
push
xchg
sbb
call
dec
push
and
mov
in
scas
mov
popl
fwait
push
mov
inc
mov
xchg
test
and
rcr
fs
je
pop
add
lods
fucomip
jp
push
stc
dec
aad
dec
xor
lret
stos
lret
cli
mov
hlt
stos
and
adc
iret
daa
lods
int
repnz
lret
mov
pop
push
pop
jo
dec
cwtl
add
pop
outsb
or
jno
fistps
popa
data16
mov
movsb
and
loope
ret
sarl
cmpsb
pop
out
inc
or
loop
cld
push
or
pop
xchg
nop
testb
mov
mov
aad
add
addb
cmc
addb
test
aam
gs
adc
imull
insl
js
mov
mov
xchg
or
adc
inc
imul
mov
jmp
fsubs
call
xchg
iret
mov
enter
popa
lret
hlt
and
mov
sbb
leave
popf
test
cmp
push
dec
loop
pop
mov
mov
sbb
pop
mov
fidivrs
adc
mov
pushf
push
cli
push
mov
add
movsl
icebp
insl
into
add
stos
imul
jg
push
adc
sub
pop
lods
shll
and
jge
or
es
fidivs
jecxz
xchg
dec
jg
pop
outsb
lock
test
xor
mov
test
cld
push
jnp
pop
sub
imul
xchg
cmp
nop
jne
jg
push
lahf
out
leave
outsl
mov
ficompl
fnstsw
and
xor
mov
xor
mov
call
lods
adc
adc
mov
inc
dec
lahf
or
mov
mov
and
cmp
icebp
inc
inc
popf
xchg
cmp
cmc
stos
push
loopne
jg
sbb
inc
mov
fildl
enter
mov
mov
sub
lret
or
sub
shrb
das
jns
cmp
inc
mov
test
loopne
and
push
test
pop
call
add
int
mov
cmc
repz
pop
cltd
push
ljmp
add
jl
mov
repz
add
lret
push
pop
loopne
lds
ds
cmpsl
push
cmp
stc
pop
or
adc
dec
xchg
loope
gs
mov
lds
xchg
filds
jmp
nop
xor
cmpsb
aad
xchg
dec
pushf
add
clc
adcb
adc
jecxz
stos
daa
leave
cmpsl
mov
repnz
cld
sbb
popa
mov
lcall
popa
push
xchg
jb
movswl
in
aam
xor
aad
int
xchg
movsb
pop
pushf
xor
cs
lcall
xchg
add
inc
add
jbe
leave
pusha
inc
and
shll
call
ret
nop
mov
mov
loope
or
std
mov
mov
loope
mov
ret
and
xchg
jbe
je
stos
xor
stc
mov
mov
xor
jg
outsb
rcr
xor
andb
add
mov
inc
xor
scas
jb
mov
pop
xchg
sub
jnp
jg
add
das
push
aad
lret
sahf
in
iret
icebp
adc
js
add
aaa
bound
sub
adc
dec
scas
pop
push
das
xor
push
mov
outsl
jnp
adc
sbb
lahf
xor
push
add
sbb
aas
icebp
scas
gs
xor
out
add
sbb
and
or
xchg
mov
mov
pop
push
sahf
cmpsl
cmpsb
jp
imul
jmp
fildll
cmp
repnz
or
ret
or
jo
lock
mov
test
into
shll
xchg
fwait
mov
lret
mov
xor
add
mov
outsb
test
cli
inc
lret
das
jb
pop
jmp
and
sub
clc
adc
subb
pusha
cmpsl
jb
sahf
ret
ljmp
fwait
or
push
ljmp
jns
adc
fldcw
fisttps
adcl
push
add
in
test
and
or
push
lea
pusha
out
aas
cmc
xor
cmp
inc
or
pop
fwait
out
movsb
inc
dec
dec
cld
inc
lods
addl
subb
inc
jl
jmp
ficoms
sbb
test
mov
mov
int
hlt
adc
mov
int3
mov
cmc
lahf
fs
mov
ret
outsb
xchg
cmp
pushf
and
test
test
xchg
mov
addr16
mov
and
sbbl
lret
cwtl
jnp
xchg
imul
std
mov
xlat
push
call
cmc
mov
or
xchg
frstor
subb
ficomps
daa
div
sbb
or
test
adc
fcoms
out
mov
sarb
pop
loopne
mov
shl
adc
xorb
push
push
adc
rorl
mov
filds
shll
in
jo
xchg
movzwl
xchg
mov
mov
dec
mov
rcr
out
ja
mov
push
sahf
test
pop
xchg
sbb
call
push
push
mov
movsl
repnz
jecxz
sbb
in
jp
adc
adc
cld
loop
cmc
fdivl
mov
mov
cmp
jno
mov
xlat
out
mov
jno
add
dec
sbb
mov
mov
insl
ret
jmp
cmp
sbb
mov
push
pop
dec
sbb
mov
int
push
repz
push
insb
div
sahf
clc
or
jge
ljmp
pop
popa
mov
mov
testb
push
and
in
lods
sub
jl
mov
lds
sti
test
xchg
ss
aad
pop
mov
cld
mov
push
shll
repnz
add
stos
xchg
or
dec
aam
mov
std
ret
in
mov
add
ljmp
xor
loop
repz
lret
xor
call
xor
push
xchg
iret
jno
cli
pop
movsb
sarb
dec
rcl
pop
jmp
xor
jnp
cmpsb
ret
push
loope
sbb
nop
sbb
in
pop
jge
jg
add
jno
iret
inc
negb
pushf
add
fcmovu
shrl
pop
cmp
adc
mov
ja
sti
adc
inc
push
mov
mov
sub
mov
pop
and
jmp
pop
dec
rclb
ds
movsl
push
push
inc
xor
jo
xchg
je
push
je
push
lds
inc
xchg
jo
cmpb
out
or
loope
jmp
add
imull
lods
xor
inc
mov
jmp
cmc
push
leave
sbb
jbe
outsb
mov
repnz
inc
in
aam
pop
xlat
lods
orb
jle
xor
dec
in
sbb
sahf
cltd
xchg
cltd
stc
sbb
cmp
mov
pusha
push
cmp
mov
push
xlat
xor
movsl
adc
mov
add
jae
or
sbb
shlb
xchg
xor
sbb
sti
imul
or
sbb
mov
fwait
pop
frstor
bound
mov
or
adc
push
or
push
in
cs
addb
aas
cmp
mov
adc
pop
jbe
add
mov
and
push
jl
pusha
sub
jns
in
shlb
movsb
xor
or
mov
add
or
pushf
call
pop
mov
xor
push
xlat
dec
andb
xchg
outsb
xor
je
add
add
add
incl
add
add
add
dec
add
or
data16
outsl
add
jb
add
add
add
or
addb
cmp
out
sbb
leave
andl
lea
pop
outsl
gs
push
inc
shll
jecxz
icebp
outsl
movsl
push
xor
xor
addb
xchg
mov
jb
mov
inc
or
roll
push
sahf
int3
fwait
call
jbe
fxch
dec
fmul
xor
les
and
aas
ljmp
adcb
sbb
cmp
jl
leave
clc
xor
lcall
or
mov
inc
mov
insl
or
add
adc
fstpl
lods
pop
push
call
stc
sbb
jmp
fcomps
mov
insl
out
and
push
mov
mov
test
jl
std
push
cmpsl
pop
adc
and
pop
fdivp
lcall
lret
xor
orl
out
add
insb
adc
mov
mov
fs
leave
lds
push
xor
je
in
into
push
dec
cmp
pop
pop
mov
dec
xchg
fisttpll
cmp
mov
stc
jo
pop
push
mov
loopne
push
std
ffreep
sub
cld
loopne
test
fs
push
dec
add
iret
icebp
push
sub
and
xchg
out
push
xchg
or
or
mov
pushf
mov
mov
paddusw
mov
in
popa
or
hlt
jb
add
test
cmp
fmull
insl
jmp
pusha
cmpsb
sub
sbb
inc
in
mov
cmpl
xor
sub
aad
inc
cld
imul
cmc
xchg
je
movsl
rcrb
pusha
pop
xchg
push
out
sub
pop
cmp
mov
sbb
test
xchg
jo
inc
scas
fdivl
pop
repnz
add
icebp
add
std
xchg
movsl
imul
add
sub
lahf
adc
pop
pop
adc
div
cmp
jg
lds
xlat
adc
push
sbb
jecxz
gs
int
orb
sub
adc
xchg
sbb
outsb
ficompl
xor
rolb
xchg
shl
movsl
mov
pushf
and
imul
push
cltd
push
sbb
lods
pop
add
mov
int3
pusha
cmc
xor
outsb
idivl
jp
fsubl
loopne
and
pop
push
jbe
jne
xchg
loopne
shrb
lcall
aas
cli
iret
fadds
add
inc
fs
mov
into
add
add
aam
pop
xchg
mov
cld
movsl
hlt
mov
icebp
sub
in
jns
fstl
fildl
xchg
fcmovnu
dec
pusha
sbb
test
jb
xchg
aad
mov
xchg
mov
dec
sbbb
inc
cmp
shl
sub
sbb
xor
mov
test
int
cs
mov
xchg
dec
mov
ss
and
enter
mov
xor
test
fsub
push
sub
sbb
sbb
fisttpll
inc
ficompl
xchg
fdivs
notl
rolb
je
in
cli
mov
pusha
push
xchg
pop
insl
clc
lret
ss
mov
lret
sub
mov
and
mov
cs
jns
pop
jmp
enter
jmp
scas
outsl
lods
sbb
in
add
push
movsl
je
cmp
xchg
aam
dec
div
jge
inc
and
in
push
mov
fcoms
xor
push
shl
movl
iret
sahf
ret
cmp
or
aas
loop
cltd
sbb
xchg
jl
sbb
jmp
and
nop
inc
aaa
int3
aaa
push
les
mov
stos
sbb
fcomi
lods
jne
in
in
call
adc
pop
mov
inc
cmp
xchg
popf
pusha
sub
sarl
pop
jg
cmpsl
sub
inc
mov
add
scas
sar
mov
xchg
lret
ss
jg
cltd
sbb
inc
rcll
adc
int3
xchg
outsl
lahf
fcmovbe
outsl
cmp
ret
nop
mov
mov
mov
xor
and
mov
leave
mov
cmc
movsb
xor
or
push
loop
cld
jp
cmpl
pusha
jae
mov
das
add
push
xor
in
ret
cld
int
rcl
es
mov
cld
add
add
dec
imul
mov
div
sahf
fidivrl
lods
jle
push
or
xchg
movsl
jmp
jno
test
jbe
inc
sub
cmp
inc
xchg
pop
inc
adc
lahf
enter
mov
add
sar
outsb
and
xor
pop
xchg
sbb
sahf
fld
rol
aad
fisubs
ficomps
loope
cmpsl
clc
test
push
sbb
test
int3
daa
push
aaa
sub
andl
cwtl
inc
or
out
adc
test
cmpsb
test
cltd
cmp
or
and
shrl
adc
or
add
imul
sub
repz
cmp
les
nop
sarl
scas
shlb
xor
pop
lods
sub
mov
dec
mov
jb
in
cli
test
mov
jp
in
cld
pop
cmp
xchg
aad
adc
adc
xor
hlt
sarl
inc
arpl
leave
push
or
add
xor
jns
ficoms
adc
mov
pop
nop
xor
push
movsl
mov
inc
icebp
rcll
jmp
flds
mov
int
outsb
cmp
dec
push
jmp
decl
fxam
popa
mov
mov
negb
inc
fwait
mov
push
addl
frstor
inc
test
mov
cmp
pop
and
adc
cmp
ret
fwait
cmp
and
push
dec
shrl
xchg
fsubl
out
dec
arpl
orb
jl
stc
movsl
mov
das
adc
aad
rcll
xchg
and
push
out
adc
iret
and
aad
pusha
mov
iret
call
iret
mov
es
pop
aaa
pop
out
pop
fidivrs
or
mov
enter
test
mov
mov
std
jnp
psubsw
sti
mov
sub
sub
dec
adc
sbb
es
pop
aaa
int3
hlt
fildl
cmp
insl
outsb
lods
push
mov
test
push
or
jge
inc
or
cmp
and
ror
sbb
int
push
js
pop
lds
or
andb
lret
ss
in
rol
dec
jge
into
notl
popa
aad
outsb
pop
push
pop
hlt
sub
cltd
aad
int
xchg
adc
cmp
pop
add
and
mov
mov
mov
fmuls
mov
das
adc
jl
dec
cmp
movsl
loop
sti
cmpsb
push
adc
inc
mov
mov
pop
ja
mov
rclb
pop
jg
inc
mov
lds
stc
in
xchg
icebp
lahf
adc
orb
add
jne
ret
hlt
inc
and
push
or
mov
lods
xchg
movsl
xlat
cs
mul
fs
xchg
int
mov
lods
jne
sub
in
pushf
push
xor
xchg
aas
das
mov
notl
sbb
std
mov
int3
and
pop
mov
mov
int3
repnz
aad
std
xlat
or
jecxz
jno
leave
cmp
or
jg
adc
or
jno
std
fistpl
push
stc
add
test
fwait
ja
into
and
out
cmc
sbb
mov
sub
enter
pop
aaa
aam
scas
or
icebp
cmp
pop
xor
mov
fcmove
jns
fildll
xchg
ja
je
or
adc
mov
in
scas
add
pop
imul
out
sub
cltd
in
or
dec
daa
rcl
jns
dec
xchg
test
subl
lods
add
in
insl
inc
add
mov
jl
mov
lea
pop
addr16
mov
pop
in
xchg
inc
emms
cmpsb
cmpsb
push
adc
xchg
shl
pop
adc
movsb
mov
push
out
mov
movsl
pop
inc
add
lock
out
pop
and
idivb
in
mov
dec
jb
in
xlat
inc
and
inc
mov
and
mov
adcb
outsl
mov
mov
jno
lret
mov
fistpll
pop
dec
sub
hlt
ret
mov
push
shlb
imul
mov
lods
nop
mov
xor
and
add
int3
pop
insl
ja
inc
out
inc
mov
mov
add
rcl
mov
and
push
imul
push
test
aas
test
mov
dec
fs
pop
adc
je
jl
loopne
push
mov
pop
gs
das
pop
mov
push
rorb
lock
rclb
test
jecxz
sbb
ss
out
or
movsl
adc
test
sar
testl
or
sbb
jno
add
push
outsl
mov
jne
rorb
and
leave
dec
popf
stc
mov
loope
xchg
dec
movsb
push
outsb
sbb
add
jecxz
adc
jo
push
cmp
pop
push
mov
repnz
fidivl
ja
inc
push
imul
pop
into
fstl
pop
fnstsw
outsb
dec
outsb
pop
and
mov
xor
or
lds
loopne
js
or
xlat
sbb
cli
add
or
jo
dec
test
xor
or
stos
jbe
scas
mov
addr16
inc
add
addr16
cmp
cmp
repz
add
fsubrs
inc
out
cld
and
fildll
mov
stos
dec
jle
dec
cmpb
mov
sub
xlat
cmpsb
jp
mov
loop
pushf
sbb
adc
popf
shl
mov
aas
cmpsb
sti
enter
mov
stos
push
cmp
in
pusha
je
sub
gs
int3
adc
test
mov
mul
nop
mov
mov
inc
add
xchg
ret
int3
xrelease
mov
rcrb
cmp
ljmp
add
mov
fcoms
and
mov
mov
arpl
xchg
out
adc
push
cli
ljmp
inc
sub
mov
mov
mov
add
sahf
mov
lret
sarl
add
push
cmp
lods
mov
ret
scas
adc
insl
mov
sbbb
mov
cmp
icebp
cmp
js
cmc
enter
insb
xorb
pop
xchg
xchg
add
pusha
inc
movsb
scas
lea
inc
data16
mov
dec
add
insb
ret
xchg
cmpsl
jno
stos
sub
sbb
insl
add
in
cmp
ss
mov
jle
push
dec
insb
jmp
push
sub
addl
fbld
call
mov
sahf
pop
and
dec
pop
or
in
rcll
mov
ja
and
adc
pop
cmp
jae
sahf
sbb
scas
cmp
fistpl
sti
aad
or
aad
stc
and
int
scas
lock
rcrl
nop
mov
push
mov
gs
lret
cmp
or
mov
or
je
movsb
mov
push
xlat
or
mov
push
cmp
xchg
cmp
js
pop
arpl
jno
lds
enter
mov
aam
jl
push
sbb
shll
jo
dec
cld
cmp
xchg
xor
or
ja
lret
add
iret
mov
bound
add
pusha
cmp
lret
test
dec
sbb
mov
lds
mov
test
imul
sti
out
addr16
jg
push
jnp
sub
push
add
ret
in
scas
push
jne
sub
add
test
adc
xchg
dec
data16
loop
lahf
mov
inc
xchg
sub
jmp
popf
mov
enter
in
cli
mov
jge
je
stc
lea
xor
or
das
xchg
push
ljmp
stos
sahf
jecxz
adc
adc
outsb
xchg
and
addr16
sub
push
pop
cmp
in
dec
ss
ljmp
mov
out
lods
sbb
hlt
mov
dec
std
sub
cli
adc
jmp
mov
daa
fdivrl
jae
cmc
mov
push
pop
xchg
sarl
pop
into
fisubrl
mov
or
pushf
sbb
jbe
andb
stc
ret
mov
xchg
cmp
inc
ret
nop
sti
sub
jg
inc
lret
inc
xchg
and
add
clc
rcll
sbb
int3
into
loopne
dec
imul
pusha
mov
dec
aad
adc
imul
movsb
cli
lds
jmp
sbb
jl
jnp
clc
loopne
mov
inc
or
cltd
aad
push
fwait
sti
mov
orb
sbb
push
std
pop
lea
rorl
mov
mov
fstl
fwait
add
add
cld
push
add
stos
mov
std
insb
fwait
shll
mov
divb
cmc
jo
push
cld
xor
xlat
insl
aad
mov
cltd
xchg
mov
fildl
pop
aaa
xor
add
imul
ljmp
push
outsb
jg
jge
mov
popf
lock
mov
pop
jg
mov
pop
sub
out
or
movsb
xor
dec
push
mov
fidivrs
xchg
fdivr
mov
sar
mov
movb
push
rorl
out
jp
inc
loope
adc
rol
mov
movsb
pop
imul
mov
out
xchg
mov
dec
jae
sarl
leave
cs
jle
push
sahf
shrb
adcb
daa
push
insl
fisubrl
sub
lret
add
or
and
cmpsb
or
mov
inc
or
mov
rclb
out
stos
flds
jne
stos
inc
shrb
mov
enter
shll
xchg
popa
xchg
cwtl
mul
add
sbb
inc
fmul
cmp
movsl
pushl
inc
data16
roll
push
lds
inc
lods
xor
and
ficoml
fstp
mov
add
in
or
in
add
imul
test
sbb
pop
xchg
jl
pop
xchg
xchg
fstl
sub
inc
add
sbb
add
push
xor
lea
push
popf
and
xchg
mov
mov
cmp
cmp
xchg
fstl
mov
cmp
jecxz
sti
jno
pop
xchg
into
mov
mov
adc
test
cs
xchg
test
test
inc
shl
pop
mov
ret
dec
outsb
push
jp
sub
mov
inc
lahf
adc
ja
jae
sub
popa
rcr
jle
in
jl
adc
repnz
lret
pop
lret
jecxz
imul
je
icebp
cs
cmp
jge
rorb
push
mov
subl
shr
xchg
cli
addl
loop
sbbl
loope
mov
mov
mov
insl
mov
sbb
pop
xor
loope
xor
mov
inc
adc
dec
lods
int3
out
adc
jle
jae
inc
ljmp
pop
test
cltd
in
inc
aad
jae
mov
mov
fcmovnu
rclb
lea
xor
mov
sbb
faddl
adc
sub
add
gs
dec
adc
mov
loope
rolb
clc
adc
sbb
mov
lds
and
shll
xchg
scas
push
out
sub
push
jp
jne
jae
cmc
out
pushf
imul
xor
dec
push
scas
push
mov
sbb
rolb
sub
cmc
aas
pop
mov
and
dec
xchg
fidivl
mov
dec
cmp
insl
mov
sbb
rcl
popf
out
pop
xchg
push
inc
ret
mov
xor
divl
and
ud0
dec
lods
push
pop
xor
jne
inc
adc
jnp
daa
in
xchg
clc
mov
outsb
test
add
arpl
testb
push
add
adc
dec
push
or
icebp
jmp
fdivr
mov
out
lahf
rclb
dec
dec
clc
lret
mov
sub
pop
push
and
scas
pop
inc
push
jg
lcall
mov
sbb
jns
sbb
or
dec
call
push
mov
add
aad
sahf
or
xor
mov
xor
jg
pop
stos
mov
sbb
sti
inc
out
outsb
out
mov
daa
inc
repz
mov
fidivrs
dec
jbe
in
inc
movsb
mov
or
inc
test
jmp
fnsave
das
imul
out
adc
xor
jl
adc
fiadds
push
cmp
lods
xor
test
lds
jp
inc
sahf
iret
cwtl
cmp
add
jae
std
xchg
or
test
pop
push
mov
roll
in
insb
push
cmp
aad
cmp
cwtl
aam
ds
lods
arpl
movsb
flds
cmc
popf
ficoms
stc
lock
inc
push
xor
pop
add
jl
pop
repz
repnz
xor
stos
setb
fs
leave
out
jg
inc
bnd
jl
mov
mov
lods
out
lret
pop
int
dec
jbe
mov
sbb
xchg
movsb
xchg
push
adc
mov
mov
or
and
pop
iret
insl
mov
jecxz
js
sbb
push
outsl
pop
dec
aas
xchg
out
scas
ret
push
mov
inc
jbe
mov
les
mov
dec
mov
stc
mov
pushl
and
pop
mov
mov
or
pusha
and
mov
adc
add
movsl
lcall
sub
sbb
ljmp
mov
dec
iret
inc
out
push
sub
mov
in
cmp
int3
cld
packuswb
pop
xchg
jle
lret
cmp
adcb
pop
loope
mov
out
or
iret
or
add
hlt
fistps
jne
movsl
mov
jns
xor
lea
mov
loopne
test
or
repz
inc
xchg
icebp
jl
adc
dec
addb
inc
out
lea
js
sti
je
dec
xchg
iret
aam
dec
sub
push
and
test
repnz
rcrb
dec
scas
int
test
shlb
cld
aas
fldt
les
cltd
stos
cmp
jl
add
into
mov
pop
lods
jle
inc
mov
cmp
pusha
outsl
mov
jb
clc
cld
pop
rcrl
xchg
fidivrs
insl
pop
lcall
cmp
subb
ljmp
lahf
mov
pop
jb
xlat
sbb
pusha
sbb
fidivs
mov
loope
push
mov
movb
xor
iret
push
ret
xchg
inc
xchg
rolb
pusha
mov
mov
aaa
sar
pop
ror
rorl
in
push
subb
mov
repnz
mov
sub
sub
jbe
mov
pop
adc
pop
add
shll
int
fmuls
loop
push
inc
fsts
and
inc
push
sub
sti
xchg
mov
neg
push
pop
lods
or
ljmp
xchg
shl
push
jp
imul
and
je
movsb
cmpsb
fucom
push
inc
imul
imul
dec
add
adc
jnp
push
stc
push
xchg
ficomps
or
pop
scas
inc
inc
in
lea
jmp
mov
mov
lods
inc
and
pop
mov
cmc
push
sub
pop
sub
push
push
std
loope
inc
cmc
aad
pop
xchg
or
cmp
jmp
lcall
adc
or
dec
jmp
dec
movsb
lcall
in
adcb
nop
push
lods
adc
addr16
lcall
out
sub
leave
jb
dec
add
add
into
mov
xchg
jb
mov
mov
sub
pop
push
lcall
sarl
repnz
add
sti
int
mov
fnsave
lret
mov
push
xlat
dec
sbb
push
jo
push
dec
movsb
shr
lret
ret
mov
ds
inc
es
or
push
aaa
or
popa
mov
pop
lds
xchg
sarb
test
cld
rcrb
push
sub
xchg
pop
lds
push
loop
mov
xchg
mov
clc
cli
fsts
bound
adc
pinsrw
jle
jge
jns
pushf
fidivs
movsb
xor
push
dec
inc
mov
into
mov
shl
pop
lea
cwtl
xchg
and
into
mov
adcb
mov
jno
outsb
jbe
xlat
stos
jno
push
xchg
sti
mov
sbb
push
fcomp
sbb
cwtl
push
pop
push
mov
movsb
pop
push
scas
add
lods
xchg
and
push
sub
xchg
dec
popa
nop
jle
push
scas
push
pop
in
xor
popa
adc
jbe
scas
fcoms
pusha
cmp
cmp
xor
mov
add
gs
fldcw
cmp
jbe
xchg
or
out
insl
mov
push
jg
cmp
loopne
pop
fidivs
push
mov
xor
stos
xlat
or
xchg
rorl
lret
mov
ret
fimull
push
sub
hlt
aaa
cld
adc
loopne
add
sub
mov
push
xor
add
mov
push
add
ss
pusha
jns
dec
syscall
push
jae
outsl
or
lret
addr16
jle
mov
test
lret
jo
pop
or
xchg
fisttpll
mov
outsb
push
dec
jns
push
ss
cmpl
pop
and
mov
lahf
sub
out
imul
cltd
mov
jb
int3
pushf
or
lret
inc
call
mov
fcoms
xor
push
test
xor
push
mov
nop
mov
cwtl
mov
icebp
imul
test
outsl
xchg
pop
loope
loopne
or
jmp
std
inc
shl
or
pop
sbb
sub
jb
sub
mov
outsl
mov
inc
add
xor
mov
inc
sub
or
arpl
jne
outsl
add
jmp
loop
xorb
sub
or
cli
or
sub
es
les
jns
les
push
mov
mov
and
xor
push
out
or
loope
std
sahf
or
mov
decb
pop
jne
cmpsl
mov
pop
mov
daa
fwait
cwtl
loope
into
cmp
sahf
repz
dec
pop
dec
sbbb
outsl
pop
lods
daa
jbe
adc
jle
insb
mov
push
loop
pop
test
orb
subl
push
outsb
jae
mov
adc
xchg
lock
or
mov
xchg
leave
mov
call
aas
daa
mov
rorb
push
add
out
cmp
pop
jbe
mov
mov
dec
fadd
lahf
cmc
inc
mov
lods
mov
adc
sub
cmp
and
and
xchg
lea
dec
aad
scas
sbb
add
enter
cs
loope
cmp
pop
jno
stos
pushf
xchg
add
xor
sbbb
adc
add
mov
cld
aam
xor
mov
cmp
or
dec
ret
ret
into
lret
enter
push
fldcw
or
cmp
push
push
lret
lock
shr
mov
cmp
xchg
jae
or
add
jnp
push
call
adc
cwtl
inc
xchg
and
xor
fists
pop
jno
dec
or
es
icebp
xor
popa
popa
jp
iret
jmp
cwtl
movsl
push
pop
mov
sub
enter
and
pop
into
lods
mov
fists
xchg
pop
dec
push
mov
ret
jl
jnp
xor
nop
test
mov
sbbb
mov
dec
call
loop
pop
in
mov
push
mov
jg
out
mov
dec
push
arpl
aaa
mov
in
ret
mov
and
outsl
clc
out
push
call
inc
aas
loope
mov
outsb
stc
xor
push
incb
repz
sbb
in
xchg
out
rcrl
jae
xor
dec
xlat
or
icebp
outsb
in
in
xchg
stc
mov
mov
mov
pop
outsb
pop
push
decb
idivl
sti
push
or
stos
mov
pop
jbe
sub
pop
shll
mov
adc
imul
mov
nop
insb
xchg
loopne
pusha
or
xor
and
mov
insb
cmp
or
jae
jmp
add
leave
xchg
dec
adcb
dec
int3
fsub
sbb
inc
aad
pop
roll
mov
jp
push
dec
xchg
add
or
inc
jg
xchg
sbb
or
cmc
mov
adc
call
sbb
or
xchg
adc
add
and
fmull
inc
lret
jns
std
push
adc
mov
cmp
inc
or
pop
pop
sub
mov
cwtl
in
stc
sti
lods
je
mov
xor
push
pop
nop
or
shlb
out
pop
adc
add
dec
repz
test
xor
sbb
arpl
fwait
arpl
test
testb
xor
cmp
and
pop
or
stc
push
sbb
pop
daa
sbb
leave
xlat
or
aas
and
push
cmp
sub
fsubs
cltd
jne
ljmp
ret
xor
or
call
mov
sub
movsl
les
ds
adc
cli
add
lret
or
cltd
adc
mov
mov
push
fsubs
xor
idivb
test
dec
jbe
jg
bound
sbb
xor
sbb
or
cld
mov
jne
nop
inc
ds
or
pop
mov
fsubrs
pop
sub
mov
in
loopne
sub
jns
ds
push
daa
sub
push
imul
adc
and
xchg
jmp
ss
xchg
mov
mov
cmp
xorl
andb
mov
cld
sub
cmpsl
sar
stos
clc
stc
fdivp
loope
cld
push
cli
xlat
test
shlb
jne
inc
loopne
jo
pop
fidivl
xor
cmpb
adc
sub
push
bswap
push
mov
cmpsl
xchg
ret
push
addr16
push
pop
and
gs
popa
imul
scas
in
push
fcoml
add
into
xchg
out
popa
or
aam
cmp
inc
out
xor
cltd
pop
inc
jbe
pop
or
jle
mov
xchg
inc
fmul
ja
cmpsl
jecxz
lds
scas
push
call
repz
cmc
xchg
shll
mov
test
out
pop
xor
sbbl
in
push
popf
in
push
adc
popf
mov
pop
cmpsb
stos
or
cmp
cli
lret
out
inc
pop
or
aam
scas
mov
sbb
xchg
pop
fisubrs
xlat
inc
pop
lods
ret
xor
loop
or
push
mov
or
mov
sub
pop
fildl
ja
int3
test
push
push
pop
ret
cli
scas
add
mov
push
xor
enter
jmp
xchg
dec
std
xchg
popf
je
push
les
pop
jecxz
add
mov
gs
pop
jbe
xor
dec
test
add
rcrb
std
inc
ljmp
push
mov
cmp
cmp
xchg
jne
jmp
shrb
sbbl
pop
add
mov
push
rclb
test
sub
in
pop
xlat
sub
mov
xor
adc
or
ds
es
push
in
out
xlat
pop
pushf
sub
loop
pop
sahf
out
stos
push
xchg
dec
sub
mov
int3
inc
les
jg
lcall
xor
mov
stos
adc
cmpsl
push
sbb
xchg
or
enter
dec
or
popa
xchg
in
sahf
inc
cli
mov
mov
inc
push
push
mov
enter
pop
push
movsl
movsb
adc
iret
cli
clc
pushf
adc
popa
insl
sbb
and
push
jg
xchg
insl
xchg
inc
call
adc
lock
andl
addb
nop
out
leave
cltd
jmp
push
mov
cmp
test
notb
popa
cmp
push
cmc
rcll
shll
aad
scas
pushf
dec
adc
jno
and
dec
nop
hlt
fmull
outsl
call
lods
jmp
leave
iret
sub
test
imul
das
jmp
data16
jmp
jno
fimuls
jmp
adc
xor
dec
loopne
pop
push
mov
je
dec
pusha
xor
xor
es
inc
xor
mov
cmc
sub
push
ja
mov
pop
pop
addr16
fmull
ret
or
ja
stc
iret
stc
ljmp
stos
mov
jns
dec
fisubl
mov
int
jno
add
orl
loop
cmpl
arpl
sti
ds
icebp
call
push
xor
cmp
xchg
out
clc
mov
movsl
ds
jb
mov
outsb
mov
ja
fwait
fwait
es
in
icebp
insb
rolb
cld
mov
add
mov
push
out
sub
mov
sub
jmp
in
adc
in
jp
test
testb
fadd
rorb
mov
add
dec
add
out
push
mov
mov
mov
cmp
cmp
jle
or
mov
push
imul
cmpsl
popa
adc
movsl
stos
mov
or
out
fsubr
out
aad
sub
loop
in
hlt
mov
or
out
test
loope
addr16
ja
lods
mov
jp
xchg
mov
ljmp
and
xchg
adcb
lcall
negl
std
cs
ret
mov
addr16
or
outsb
out
pop
cmp
nop
push
xor
or
lods
into
cs
jl
scas
sub
ret
js
mov
sub
jge
nop
bound
push
sbbl
ds
dec
mov
fldt
jne
out
mov
jg
xchg
into
icebp
jo
cmpsb
mov
xlat
xor
push
dec
into
push
and
or
fwait
xlat
mov
xchg
add
fidivrs
mov
jp
fcmovnbe
pop
out
adc
int
scas
add
lods
les
sub
cmp
lea
add
leave
int3
iret
lret
inc
sbb
dec
adc
xchg
sbb
daa
xchg
popf
orb
aas
lcall
jle
and
dec
mov
fiadds
xchg
pop
aam
sub
imul
fwait
sub
lods
sbb
aad
lods
pop
push
cmp
rolb
and
and
mov
mov
pop
into
and
lret
and
in
mov
mov
sbb
test
aaa
pop
out
mov
xchg
jae
cli
es
inc
into
xchg
in
popa
les
sbb
push
pushf
xchg
int3
push
xor
lcall
pop
mov
sti
outsl
mov
aam
sbbl
xchg
sbb
rcrb
cs
jge
mov
hlt
xor
cmpsb
push
pop
into
jmp
sarb
std
scas
mov
fs
and
mov
dec
cmpsb
aad
enter
aam
push
dec
lret
cltd
mov
mov
mov
icebp
aam
mov
lds
lock
push
add
test
pop
adc
in
mov
add
in
mov
push
or
and
je
shll
or
aad
enter
xchg
out
add
xchg
arpl
xchg
jmp
and
mov
dec
sub
xchg
dec
adc
xor
out
into
mov
hlt
sahf
mov
aam
xor
sbb
or
xorl
in
dec
sub
std
pop
xchg
mov
sbb
aaa
lea
repz
jp
nop
push
mov
idivl
pop
outsb
push
lcall
pop
outsl
imul
and
mov
and
dec
lret
outsl
lock
adc
push
xchg
adc
jo
inc
inc
popf
mov
mov
mov
jge
gs
add
mov
mov
sub
test
sbb
call
push
jbe
push
jmp
sub
sahf
jo
add
popa
loopne
mov
sub
cmp
stos
pop
sbbl
and
xlat
push
mov
and
adc
mov
clc
in
popf
and
and
sbb
sarb
in
or
push
push
lcall
push
arpl
test
jp
cmp
jnp
in
and
mov
mov
push
push
sub
or
mov
jbe
cld
mov
push
ficomps
pop
gs
inc
push
enter
cmp
test
enter
aad
jae
daa
dec
mov
test
or
rcrb
movsb
push
fstpl
adc
xor
daa
add
outsb
addr16
push
dec
jmp
into
jge
jae
iret
inc
xchg
test
lahf
out
sub
and
xor
or
icebp
pop
mov
add
or
pushf
sarl
jne
mov
adcb
cmp
movl
push
adc
or
fcoms
je
cmp
mov
stos
push
add
mov
pop
jp
pop
jnp
pop
andl
stc
push
mov
sti
dec
push
mov
mov
mov
and
ret
hlt
clc
push
rcrb
lret
pop
fdivs
adc
sbb
and
dec
add
cmc
mov
xor
dec
pop
pop
mov
fwait
rorb
shl
xor
int3
mov
outsb
fstpl
cli
fstpt
push
xchg
dec
sbb
fimull
or
lahf
push
shrl
int
cvtpi2ps
jmp
jno
cwtl
icebp
ja
or
aad
inc
jecxz
shrb
cmp
loope
pop
adc
pop
movsl
shrl
jmp
jb
in
lock
mov
repnz
jmp
adc
gs
cmp
xor
mov
and
fsub
or
xor
adc
xor
lret
or
lret
mov
mov
xchg
dec
cmp
or
jl
mov
adc
push
adc
test
adc
mov
mov
jle
call
mov
push
push
ret
movsl
mov
sub
cmp
loop
sub
sbb
push
imul
ficomps
lock
add
sbb
inc
mov
push
movsb
xchg
lds
inc
or
mov
sbbl
mov
bound
jns
or
rolb
lea
bound
xor
xor
mov
fiaddl
xor
addr16
sub
mov
out
xor
xchg
and
movsb
jb
rolb
rorb
scas
sbb
pop
rcll
xchg
pop
mov
cmpb
sbb
adc
pop
lock
sub
mov
testb
lret
dec
jmp
jp
out
xor
pop
ret
push
scas
push
dec
dec
mov
mov
jns
inc
push
pop
jne
daa
arpl
sbb
sbb
lret
pop
and
shlb
test
in
add
das
inc
lcall
xchg
add
add
lock
mov
dec
movsl
mov
xchg
stos
push
jle
inc
je
add
xchg
cmp
push
or
loopne
cmp
orl
fidivrl
jge
lret
inc
bound
mov
mov
sbb
lret
lret
pop
fbld
jnp
aam
xor
adc
call
decl
or
shlb
push
xchg
inc
push
cmp
test
jo
push
mov
call
jne
push
add
arpl
ret
sub
cmc
mov
mov
out
push
cli
into
or
bound
sub
dec
cli
dec
cmp
push
imul
mov
mov
lods
popf
addr16
fbld
test
adc
filds
mov
pop
inc
mov
mov
adc
bound
ja
insb
inc
sbb
in
data16
lret
xor
push
addl
xchg
sbb
mov
lea
rolb
inc
pop
push
dec
fdivrs
cs
sub
xlat
loop
jmp
mov
jmp
loopne
cmp
mov
sub
loop
pop
bnd
inc
cli
xor
out
je
mov
loop
dec
test
inc
adc
das
add
push
js
mov
pop
mov
push
test
cmc
xchg
out
in
jae
inc
in
push
xlat
push
cmp
xor
sbb
adc
in
pop
dec
ljmp
sbb
jns
into
push
enter
dec
push
in
mov
jae
cltd
ds
fcomp
loop
imul
sub
js
add
cs
and
add
pop
icebp
in
out
in
jbe
ss
push
jne
jae
add
js
inc
cltd
adc
mov
xchg
dec
push
shrb
fwait
add
inc
add
out
je
pop
scas
aas
faddl
jns
dec
jle
mov
lahf
push
adc
test
hlt
rclb
jle
lods
mov
inc
test
push
addr16
push
pusha
popf
fdiv
lret
mov
fcmovne
repnz
jmp
jle
mov
xor
in
pop
jno
fwait
stc
or
cs
xor
test
jecxz
push
stc
or
cld
call
adc
mov
imul
push
sub
push
rorb
stos
jb
mov
into
je
sub
dec
loope
push
add
jp
mov
cltd
insl
stc
jae
inc
dec
jl
out
outsb
add
je
and
jne
jp
jae
xchg
xchg
adc
dec
mov
xchg
scas
lret
cwtl
scas
push
outsb
int
or
push
jno
ret
inc
jo
call
aad
adc
lret
movsl
jp
enter
aas
push
xchg
repz
pop
hlt
adc
xor
add
mov
test
push
ret
dec
nop
mov
loope
mov
popf
test
ss
adc
xchg
daa
lock
fwait
push
pushf
dec
cmp
fcoms
inc
add
hlt
jge
jo
cs
cs
jno
ljmp
adc
orb
pop
fs
xor
cmpb
dec
jge
in
pop
mov
cwtl
fstps
push
ror
movsl
mov
and
fbstp
ret
add
iret
scas
in
lods
std
xchg
jbe
jge
ss
fwait
mov
mov
ret
jnp
sub
js
or
pop
sub
sub
push
testl
ja
push
ja
test
and
sub
pop
and
xchg
in
jp
mov
repz
nop
inc
dec
or
mov
mov
aas
sti
xchg
mov
loop
dec
std
les
and
xchg
movsl
mov
nop
jmp
daa
inc
outsl
nop
cmp
dec
mov
pop
int
xor
sub
push
daa
and
sub
adc
add
or
xchg
sti
insl
scas
into
add
sub
mov
push
inc
mov
xor
roll
out
sub
push
stos
ja
rcl
sub
pop
ficomps
inc
popf
xor
adc
and
push
jb
pop
movsl
push
mov
mov
add
dec
push
cs
inc
jp
sbb
test
xor
mov
cmp
fdivs
and
mov
in
and
loopne
mov
fcmovu
aad
push
add
mov
inc
arpl
inc
add
shrb
lea
mov
jno
or
fwait
cltd
add
idivb
inc
popf
pop
mov
rep
adc
sarb
repz
fdivrl
in
aad
sub
aaa
stos
insb
fimuls
sub
bound
loop
and
xor
stc
mov
pusha
or
ja
cmp
xchg
sub
xor
scas
int3
inc
mov
mov
sbb
pop
jne
pop
sub
push
dec
daa
fstl
sub
jge
xchg
loopne
test
fwait
or
stos
adc
inc
daa
std
mov
cmp
outsl
xchg
rcrl
arpl
rcrl
and
pop
movsb
arpl
add
push
mov
insb
jge
inc
adc
jns
dec
adc
movsl
and
push
bswap
sbb
mov
lret
jl
repz
ror
testb
dec
in
andl
jecxz
sbb
sub
enter
cmp
fmulp
dec
push
push
pop
stos
stc
xor
inc
xchg
add
mov
sahf
fld
mov
adc
push
imul
xchg
xchg
push
jl,pt
cmp
sub
sbb
sti
mov
dec
imul
jle
dec
mov
movups
mov
jp
scas
es
subl
in
insl
imull
std
mov
pop
adc
adc
jge
lretw
cmp
cmp
jp
inc
rorb
or
sub
andb
inc
jp
push
popf
dec
pop
outsb
pop
pusha
imul
xchg
test
jl
jbe
dec
dec
add
mov
pop
cmp
ficompl
clc
test
add
adc
loopne
shrl
addr16
or
push
xchg
hlt
stos
popf
add
push
sub
out
into
cli
dec
cmpsb
add
imul
cs
repz
xor
roll
cli
dec
rolb
adc
jae
sub
mov
shlb
dec
mov
mov
icebp
cs
and
inc
sbb
mov
stc
in
test
sbb
lret
dec
stos
push
pop
inc
sbb
das
rcrl
mov
int
lahf
mov
pop
sbb
insb
xor
aas
jne
dec
xor
push
scas
lods
mov
gs
sar
dec
stc
movq
xor
aaa
cmp
or
inc
jne
xor
sub
mov
add
jecxz
adc
and
out
dec
cltd
into
mov
pop
es
pop
and
mov
push
mov
sbbb
xchg
xchg
lret
xor
dec
dec
loope
xor
dec
and
push
jmp
sti
add
ljmp
sbb
push
push
sub
cltd
sbbb
lock
jle
aaa
rolb
sbb
out
gs
ja
into
pop
jo
ret
xchg
xchg
cbtw
scas
stos
xor
roll
jno
xchg
mov
dec
sub
or
cld
jp,pt
push
ret
ret
stc
aaa
and
insl
sub
repz
sbb
adc
mov
sub
cmpsb
jge
lods
inc
pop
cmpsl
pushf
sbb
lret
push
adc
mov
sbb
sbb
mov
sub
sbb
jl
jge
movsl
and
mov
push
jnp
cmp
ljmp
rcrb
inc
jb
icebp
mov
adc
test
push
xchg
sbb
xchg
pop
nop
clc
int
or
lds
push
xchg
mov
outsb
mov
dec
pop
mov
xchg
mov
sbb
mov
cmpsl
lock
mov
adc
hlt
push
call
insb
jno
rcr
or
mov
les
mov
or
lea
andb
jbe
xor
in
mov
mov
sbb
mov
push
roll
pop
adc
lret
or
popf
ljmp
shlb
lods
fnsave
push
das
inc
cli
out
loopne
inc
mulb
xor
cmp
mov
mov
fsubrs
mov
adc
lret
stos
sbb
push
fisttpll
adc
jb
pop
dec
mov
adc
push
fsqrt
add
aas
add
fsubrl
jbe
or
and
mov
mov
ja
cmpsl
stc
repnz
call
inc
mov
fs
push
push
insl
sar
or
cmp
cwtl
jae
sub
xchg
cs
mov
int
mov
adc
mov
imul
rol
mov
lea
jmp
sbb
sub
les
ja
fcmovbe
mov
xlat
sahf
ss
test
mov
mov
aas
pushf
call
jbe
xchg
jno
in
cmp
test
jg
lea
xchg
xlat
pop
out
add
dec
inc
push
clc
mov
xchg
mov
jp
fildl
or
ds
lods
push
lds
imul
adc
add
fidivl
movsbl
enter
push
push
and
pop
add
dec
test
aas
or
push
mov
test
imul
push
inc
jb
mov
shrb
pop
lahf
mov
test
pop
movq
enter
mov
cmp
add
loop
mov
mov
outsl
push
enter
test
aad
cli
sbb
sub
cmp
inc
ret
rcr
xchg
xor
xor
xchg
loop
in
les
test
push
jae
xor
mov
cmp
stos
pop
fmuls
xchg
in
dec
aad
jne
xor
jp
ds
bound
sub
into
pop
push
mov
inc
fldenv
fcompl
jp
gs
push
int
mov
inc
sbb
add
popa
jle
pushw
mov
sbb
xorb
cmpsb
daa
fsubr
xchg
mov
push
enter
pop
out
mov
pop
lcall
mov
inc
adc
insl
icebp
mov
sbb
test
push
mov
xchg
loope
clc
stos
arpl
adc
movsb
emms
jno
xor
push
aaa
shll
mov
cltd
rolb
push
push
push
mov
pop
cli
mov
into
push
sub
imul
sub
mov
sbb
insl
jns
adc
or
aas
in
cwtl
and
mov
je
dec
enter
stos
nop
pop
pop
lret
mov
lock
jae
addr16
sub
lds
lods
jns
push
sub
sar
into
sbb
in
fsubrs
sbb
mov
insl
push
jbe
test
and
push
psrlq
lcall
fs
stos
sbb
xchg
lock
xor
lret
icebp
cmp
std
or
mov
adc
lods
xor
add
fdivr
xor
dec
mov
in
or
int3
mov
jo
pop
inc
mov
push
mov
in
adc
adc
add
dec
pop
lods
adcl
cmp
imul
ret
gs
insb
pop
fwait
jp
push
repnz
xchg
rcrb
std
inc
fmul
fstpl
and
decl
fidivrs
add
mov
pop
jg
xor
mov
inc
ret
aam
push
jge
cmp
dec
in
or
ret
adc
repnz
bound
loop
shll
push
mov
mov
xchg
cld
dec
and
inc
imul
sbb
jge
fs
cmpsl
daa
and
xlat
mov
cwtl
or
fisubs
aad
sbb
fstl
sub
jo
jns
movsl
pop
les
lods
pop
mov
and
aaa
cld
das
cmc
popf
sub
mov
lods
fwait
jecxz
and
mov
out
jmp
scas
imul
outsb
dec
in
push
and
pop
mov
and
dec
xor
cmpsb
repnz
pusha
jmp
movsl
cmp
aas
sub
jo
imul
sbb
pop
jge
mov
loopne
xchg
rclb
stos
nop
cmp
jae
ljmp
jae
pop
push
ret
imul
adc
lret
lods
fldcw
xchg
lods
lock
sbb
jnp
or
add
nop
jne
xor
lods
in
xchg
daa
adc
into
mov
jb
lret
mov
adc
and
insl
cmp
iret
cltd
arpl
xor
loopne
push
out
or
cmp
pushf
cltd
adc
mov
sarl
sbb
sub
sti
mov
pop
mov
in
or
out
mov
lahf
popa
add
dec
or
xchg
out
icebp
xor
adc
aas
xchg
enter
cli
clc
es
sbb
add
or
push
xchg
mov
mov
rcrl
jae
jp
mov
je
mov
push
sub
mov
dec
mov
mov
add
xchg
test
ss
ficoms
cld
out
cmp
subb
mov
aam
jbe
mov
pop
sbb
sbb
lea
sete
icebp
pop
arpl
fisttpl
pop
filds
daa
mov
aad
mov
xchg
insb
mov
pop
add
mov
or
int
adcb
adc
daa
in
jo
dec
stos
push
sub
sub
sar
lods
fistps
xchg
sbb
aam
aaa
mov
aaa
loopne
in
call
movsb
mov
jmp
sub
mov
daa
imul
cmp
mov
adc
inc
loope
sub
imul
pop
jecxz
add
les
iret
inc
inc
popf
mov
mov
jno
add
adc
jb
out
aas
jmp
dec
insl
loopne
sub
fsubp
and
push
fcomps
lods
pop
mov
cmp
icebp
add
xor
pop
or
outsl
dec
std
push
jno
outsb
cwtl
imul
pcmpgtw
jne
aas
nop
mov
jno
mov
fisttpl
mulb
mov
and
out
fsubrs
push
flds
outsl
cmp
jnp
cmp
mov
aas
lea
in
and
nop
lahf
and
addr16
cs
aam
mov
and
nop
xor
adc
popa
mov
jbe
jno
popa
and
cld
mov
out
mov
popf
xchg
push
xchg
fsubs
mov
sbb
add
ljmp
cli
fucomp
jle
iret
xor
sarb
sbb
and
out
mov
dec
mov
xchg
xchg
sub
mov
in
pop
adc
add
push
mov
orb
data16
cli
cmc
mov
dec
xchg
aam
test
push
and
pop
lret
jbe
fnsave
sub
nop
pop
rcrb
push
add
dec
loopne
addr16
and
popf
inc
fwait
sbb
std
xor
pop
and
pop
mov
pop
add
push
push
push
xor
rcrb
aas
imul
test
pop
repz
xchg
out
sbb
ret
ss
lds
mov
rol
mov
push
mov
jbe
dec
xchg
enter
scas
insl
pop
sbb
lretw
add
adc
jecxz
loop
or
clc
rcrb
jmp
faddl
test
dec
subl
sbb
popf
lods
out
cld
nop
cltd
fxch
int
mov
jbe
xchg
inc
dec
data16
lahf
jg
jbe
repz
dec
leave
inc
test
mov
hlt
lock
or
or
mov
dec
mov
inc
subl
sbb
rcrb
out
rolb
push
adc
pop
mov
iret
mov
aaa
lods
bound
data16
add
xor
imul
xlat
in
mov
push
or
push
add
xchg
xchg
adc
orl
cmp
xchg
out
dec
xchg
cli
inc
sub
jg
pop
mov
outsl
test
mov
ret
jmp
pop
icebp
push
sub
mov
pop
inc
bound
xchg
inc
test
or
or
dec
sub
fsubrl
cld
add
lcall
cmp
loop
sub
popf
call
nop
mov
cmp
insb
mov
mov
sub
cli
roll
pop
pop
dec
mov
cmp
enter
lods
pop
out
push
add
xchg
jb
sub
dec
pop
ret
in
push
gs
xchg
int
dec
push
mov
sbb
mov
or
gs
fcompl
pop
std
cmp
pop
scas
cwtl
test
test
movsb
scas
clc
mov
sub
sub
xor
in
sbbb
sahf
dec
dec
addr16
or
js
xchg
ja
dec
mov
lods
inc
negb
mov
sub
sub
sub
test
dec
jno
or
lea
test
xchg
pop
scas
pop
and
fwait
popf
jecxz
cwtl
push
mov
sub
push
push
dec
jbe
int
mov
in
sub
mov
out
sbb
lret
inc
add
sub
add
add
cs
nop
mov
pop
push
mov
hlt
sahf
lods
lods
inc
jmp
movsl
daa
pop
les
push
incl
in
rolb
mov
push
call
ret
jno
into
pop
into
sarb
sahf
cwtl
inc
pusha
orb
lahf
jnp
imul
insb
dec
jbe
stc
jle
loope
sarl
daa
aas
hlt
mov
repnz
xchg
clc
cmp
stos
lahf
mov
scas
jge
or
out
stos
bound
int3
jecxz
rcr
imul
rep
xchg
dec
inc
popf
cli
inc
pop
lds
add
add
pop
jle
into
data16
push
fs
jmp
dec
in
cmc
out
test
push
mov
and
stc
mov
xor
loop
fucomi
sub
and
and
push
lods
pop
lods
jmp
dec
imul
subb
mov
or
mov
pop
mov
and
or
sbb
xchg
push
sub
xchg
sub
cltd
xchg
cmp
xchg
cmpsl
sub
cmpb
sub
lret
out
sbb
je
and
in
cmp
in
or
fiaddl
xor
ljmpw
and
sbb
mov
jnp
into
push
xchg
rcrl
scas
jle
mov
ja
fisttpl
rcrb
scas
icebp
bound
or
pop
scas
dec
mov
xchg
shll
scas
adc
test
mov
mov
pop
push
std
insb
sub
inc
insb
xchg
stos
stc
clc
mov
mov
movsb
int3
add
mov
push
jge
stos
lods
popa
int
xor
outsb
push
jecxz
sbb
xchg
sub
pop
insl
lea
outsb
pop
dec
sti
sbb
out
mov
pop
outsb
int3
movsb
fimuls
sbb
xor
out
out
andl
mov
xor
shll
xlat
mov
cwtl
fmuls
pop
push
in
xchg
inc
sbb
inc
aas
cmp
jb
sahf
pusha
dec
push
sbb
lods
movsb
pop
insl
push
lcall
in
adc
xchg
popf
shl
adc
mov
les
mov
sub
fildll
push
mov
mov
inc
xlat
mov
sbb
dec
aas
enter
mov
test
ds
nop
loope
movsl
adc
sbb
ss
mov
stos
inc
and
imul
bnd
leave
sbb
dec
jmp
test
lret
pop
and
scas
fildll
and
aad
test
pop
std
pop
cwtl
jp
inc
rorb
mov
xchg
test
and
jne
and
mov
repnz
and
and
push
je
push
ss
fidivrl
xchg
fucomip
mov
push
or
pusha
lods
mov
jno
mov
cmp
or
stc
adc
test
int3
cwtl
ja
out
shll
out
mov
rolb
adc
jae
dec
jno
testb
popa
mov
divb
mov
movsl
adc
adc
dec
jae
int3
arpl
mov
ret
add
push
scas
xor
scas
inc
nop
movsb
cmpsb
rcrl
cmpsl
test
push
sub
sti
cwtl
call
and
inc
shll
adcl
imul
stos
xlat
shll
xlat
dec
imul
cmp
xor
jo
int
xchg
repnz
lret
push
bound
es
in
pop
pop
jmp
xchg
orb
sub
imul
loopne
shrb
shl
sbb
cmp
in
imul
sahf
in
dec
orl
adcb
push
mov
mov
sub
dec
and
ret
pop
push
mov
enter
pop
mov
sub
xchg
ss
idivl
outsb
ficomps
jae
insb
adc
hlt
cli
dec
es
std
mov
sub
adc
and
les
fidivl
pop
mov
cmpsl
test
sub
ja
dec
test
enter
sbb
mov
and
leave
push
lret
rclw
xchg
or
gs
add
push
inc
xor
and
ret
cmc
ficoml
lock
push
dec
arpl
xorl
dec
lods
ss
push
mov
es
imul
div
xchg
arpl
jecxz
mov
enter
xchg
mov
jae
aas
dec
mov
inc
cs
adc
mov
adc
mov
xchg
loop
mov
dec
in
adc
popf
call
data16
imul
lods
sub
in
push
adc
cmpsl
xorb
fcomps
mov
lods
clc
loop
push
mov
jns
das
or
adc
jge
fistps
lahf
sbb
enter
xor
jl
pop
jmp
stc
roll
outsb
cmc
aam
lahf
ret
sahf
jge
cmp
call
inc
mov
lock
sbb
jae
outsb
inc
push
adc
mov
arpl
into
fistpl
sbb
and
sbb
stos
maskmovq
xchg
fimuls
xor
push
rcrb
xchg
loopne
jno
mov
test
imul
push
mov
adc
pop
in
fcompl
adc
xchg
popa
out
pusha
xchg
roll
sub
sahf
and
mov
pop
adc
cmp
lret
add
out
fs
jne
adc
ret
out
lea
pushf
sbb
adcb
loope
dec
imul
push
mov
xchg
mov
pop
and
jp
pop
mov
pop
pusha
jmp
mov
inc
mov
jo
bound
xor
jbe
testb
jmp
or
mov
mov
lds
dec
xchg
lret
inc
movb
add
mov
mov
xchg
xchg
cmp
roll
popf
stos
pop
ss
sar
pop
and
loopne
push
out
push
mov
fwait
mov
mov
rcl
shlb
or
das
mov
push
loopne
mov
sahf
dec
xchg
test
push
mov
aad
out
add
mov
test
outsl
lcall
loop
daa
xchg
out
push
cmc
jl
icebp
jbe
test
fstpl
push
adc
cmp
cmp
sbb
pop
cmpsl
sbb
jmp
jg
cwtl
xchg
cmp
pop
jmp
stos
into
add
inc
cmc
jbe
xchg
fwait
shll
xor
jo
or
dec
popl
call
std
jle
les
cmp
dec
cmpsb
pop
push
loopne
test
rcrb
pop
mov
in
mov
inc
jle
pop
loopne
test
push
lahf
popa
mov
ret
add
add
push
add
mov
mov
sbb
mov
dec
mov
mov
ret
mov
mov
mov
stos
or
lret
imul
xchg
xchg
jo
ret
dec
sub
and
cmp
data16
iret
lret
xor
mov
shrl
inc
xchg
push
inc
inc
sarl
rorl
ss
insb
xchg
in
ret
fs
filds
xchg
loope
sahf
mov
ret
ja
popf
mov
out
cmp
xor
int
in
shll
pop
int
sbb
mov
or
jae
dec
xor
cmp
cmpsb
mov
or
int
outsl
dec
push
push
jae
or
xlat
and
in
pop
mov
sbb
and
inc
pop
cwtl
movsb
cmpsb
sub
ja
or
push
and
lods
scas
cmpsl
cwtl
dec
repz
popf
lahf
orl
sti
in
cli
and
xchg
or
rorb
mov
and
pushf
jl
cmp
push
mov
xchg
stos
fstl
and
push
dec
mov
sub
orl
jmp
mov
lahf
lea
sub
inc
and
jb
orb
js
dec
pop
cmp
cwtl
or
test
mov
roll
fs
pusha
jmp
ss
aad
mov
js
add
adc
xor
and
xchg
sub
lcall
inc
mov
dec
cmp
fisubrs
mov
mov
ljmp
pop
sub
inc
out
jb
push
fidivl
aas
test
es
jmp
ljmp
dec
mov
or
mov
std
push
add
repz
xchg
stos
pop
xor
push
sti
jmp
push
adc
out
shll
lock
jns
ret
not
dec
xor
out
in
mov
out
xlat
jge
daa
push
jne
cmc
jge
test
mov
inc
sub
pop
mov
scas
icebp
cmp
add
stos
lcall
cmp
mov
jne
jle
leave
jb
test
mov
mov
movsb
adc
lods
sub
adc
or
jmp
mov
xor
adc
dec
das
lret
jbe
adc
lahf
loope
dec
xor
cmpsl
cmpsl
inc
ds
dec
inc
pop
inc
or
cmp
mov
out
hlt
inc
cs
in
loop
add
in
lahf
aam
mov
adc
mov
pop
fidivrs
mov
push
fiaddl
adc
fld
std
push
in
popf
push
andb
jne
or
push
push
jl
loop,pn
pusha
inc
or
andl
inc
out
dec
jp
xchg
sub
test
xchg
and
pop
clc
lcall
push
cltd
dec
adc
inc
pop
jge
add
mov
mov
mov
lods
pop
movsl
pop
push
rclb
test
clc
inc
mov
cs
sahf
repz
push
pop
loop
ds
pop
in
je
inc
ljmp
in
xor
xchg
ret
xchg
push
jne
cld
fwait
jbe
cs
inc
jb
js
xor
loope
js
in
test
add
cmc
mov
or
incb
mov
mov
xor
mov
xor
inc
mov
fs
sub
aas
and
fisubl
mov
fs
popf
out
movb
xchg
push
addb
xchg
sti
inc
cltd
movsb
mov
pusha
mov
sub
insb
aad
cmp
fisubrl
mov
mov
or
pusha
mov
xchg
dec
lahf
mov
loopne
rcrb
pop
gs
sub
xor
mov
in
repz
fimull
or
loopne
dec
fcomip
adc
stos
fidivrs
push
pop
ja
and
in
orl
cmpsl
icebp
sub
pop
jb
cwtl
cld
add
sub
aad
sub
movsl
inc
xor
sahf
jno
dec
lcall
and
xchg
sahf
stc
lcall
std
add
fs
dec
or
loope
inc
les
addr16
and
cmp
mov
js
or
add
es
jnp
lret
rcl
xchg
mov
sub
and
negl
cmp
push
or
pop
xchg
mov
mov
ds
mov
sbb
pop
xchg
fldt
push
pop
mov
push
lock
add
pop
jne
lock
add
fwait
push
mov
mov
test
and
daa
push
loope
and
or
lock
add
pop
or
mov
dec
div
dec
xchg
push
add
mov
push
jmp
xor
fisubs
add
and
cmpsb
or
dec
rcrb
outsb
push
mov
xchg
sahf
pushf
xlat
cmp
add
cmp
sbb
jae
mov
push
mov
popf
mov
lcall
scas
jp
or
mov
jl
notb
imul
jae
jns
mov
stos
scas
bnd
fwait
pop
inc
mov
notl
mov
jbe
pop
jo
cmpb
imul
aam
loopne
sbb
and
je
ret
sahf
adc
mov
xchg
push
fisttpl
jle
imul
inc
inc
test
inc
pop
push
mov
dec
clc
add
sbb
stc
sbb
sbb
add
pop
pop
adc
push
fwait
call
cmp
shrb
sbb
movsb
adc
in
adc
add
xor
or
adcl
nop
mov
jge
sub
out
mov
ret
jecxz
xor
push
test
lods
call
test
addl
lcall
pop
add
frstor
xor
out
cmp
mov
and
inc
inc
fsubp
fwait
std
arpl
sarl
jecxz
fists
adc
mov
aad
xor
push
xor
es
xchg
xor
cmp
fisubl
xor
cld
fdivl
and
dec
jg
scas
les
and
cmpsb
fwait
jge
sbb
bound
dec
cmp
mov
cltd
cmpsl
loope
add
cli
mov
jge
adc
pop
hlt
adc
sbb
add
mov
iret
aad
mov
mov
movl
lret
and
fidivs
insb
popa
cmp
sub
adc
mov
lcall
test
sub
pop
mov
mov
cld
cmp
dec
dec
fcomi
sarb
loope
jno
fiaddl
lods
pushf
and
and
lret
xor
out
mov
pop
in
test
adc
adc
inc
icebp
repz
xor
out
enter
pop
enter
xor
push
gs
xchg
push
movsl
sub
sbb
outsl
shl
in
and
cmpsl
dec
cwtl
gs
fbstp
jp
rolb
dec
inc
fisttps
imul
orl
mov
and
loopne
cmpsl
sub
jg
leave
xchg
pusha
pop
pop
add
jno
jbe
mov
inc
pop
fmul
ss
or
xor
cmp
shlb
xor
inc
movsb
shlb
sbb
xchg
xor
mov
inc
xchg
sbb
adc
stos
jmp
mov
popf
ljmp
xor
lret
out
movsl
int3
popf
movsl
ja
mov
and
ficompl
je
jge
outsl
sbb
bswap
dec
jmp
push
int
jecxz
les
add
out
inc
mov
or
in
mov
lods
adc
addr16
and
movsl
ror
fcoml
ret
movsb
test
aad
shrb
jl
inc
or
mov
sub
sbb
jle
fs
cmp
pop
mov
xchg
pop
sbb
icebp
arpl
lea
jl
test
mov
mov
rcr
incb
add
cmc
hlt
add
in
aas
clc
inc
pusha
push
cmp
jecxz
ds
add
add
cld
cmp
lahf
jle
fwait
push
push
xlat
sti
or
mov
jecxz
test
dec
aaa
in
mov
add
xchg
adc
test
sub
aas
jmp
je
hlt
mov
gs
mov
cld
jp
addb
add
jmp
fildll
push
shll
shlb
jo
shl
jg
mov
sub
xchg
lods
pop
xor
fistps
out
pop
ljmp
les
std
fbstp
push
loope
das
stos
xlat
mov
xchg
pop
sub
mov
mov
call
aad
adc
xchg
xor
ljmp
popfw
daa
es
cmp
pusha
or
pop
mov
inc
movsl
sahf
mov
cli
add
pop
loope
pop
icebp
jg
repnz
movsl
push
or
push
insb
inc
cmp
cltd
sar
int3
mov
mov
jnp
negb
test
xor
mov
pop
xchg
push
or
push
sub
scas
hlt
jns
sbb
pop
sahf
hlt
ja
mov
mov
rorb
insb
and
in
mov
sbb
mov
stos
sub
add
outsl
aad
stos
pop
inc
sbb
test
les
cmp
push
ja
sahf
lret
scas
out
sbb
push
jg
js
ja
fmuls
mov
pop
xor
mov
jb
adc
enter
xchg
xchg
sbbb
sub
xlat
cltd
xor
jmp
daa
je
adc
cmpsb
cld
scas
mov
fdivr
cmpsb
out
fadds
arpl
stos
faddl
ds
add
neg
xor
jo
shlb
fdivrs
or
xchg
aas
add
fmul
or
out
lock
jbe
addb
data16
pop
imul
imul
cmp
dec
sbb
cli
jmp
pop
push
and
cmp
mov
pop
sbb
cld
and
push
xor
scas
cmp
imul
imul
nop
mov
js
fbld
fmuls
enter
xchg
rolb
aaa
jmp
jl
lods
rorl
cmp
jns
add
mov
fdivs
mov
ss
xlat
div
icebp
push
jns
out
cmp
xchg
loop
push
mov
sub
jns
adc
adc
int3
scas
clc
adc
sub
jo
mov
pop
scas
loop
aaa
std
ja
por
pop
xlat
aad
mov
push
mov
cs
sahf
dec
cmpsl
cs
pushf
pop
push
add
jno
cmp
mov
fidivrl
inc
arpl
dec
mov
cwtl
ja
mov
addr16
in
and
aaa
push
xor
inc
lret
add
notb
jecxz
and
cmp
jnp
pop
popa
pop
sub
fisubs
lods
mov
mov
fs
mov
jnp
jno
jbe
test
pop
push
dec
jmp
bound
sbb
movb
je
dec
sti
out
pop
cmpsl
fsubrs
dec
out
jns
fisttps
pop
dec
sbbl
mov
adc
or
shlb
stc
pop
lods
xchg
jp
outsb
xor
pop
loopne
xor
cmp
xchg
in
lods
sbb
inc
adc
sbb
lods
jae
lcall
xchg
aaa
pop
mov
dec
xorb
mov
inc
inc
dec
push
int
bsf
xor
mov
mov
mov
into
pop
jns
sub
fucom
push
cli
inc
and
pop
sub
ret
fsts
push
xchg
or
lock
mov
push
pop
enter
stc
jg
movsb
inc
ret
cli
std
sub
mov
mov
insb
lods
std
dec
pop
jns
ljmp
jae
pop
mov
test
jle
lahf
outsb
mov
sahf
aaa
mov
sub
in
pusha
push
mov
mov
int3
loope
loopne
mov
fdivrl
cmpsb
jecxz
inc
mov
pop
fistps
insb
xchg
or
in
dec
and
jmp
push
and
mov
mov
pusha
std
lods
roll
insl
jge
push
repnz
sbb
or
call
in
jae
dec
inc
cmp
sbb
jnp
sbb
aam
mov
jno
add
mov
pop
push
xor
and
sub
sub
xchg
push
push
inc
in
push
lret
decb
popa
int
pop
in
cmp
nop
fcmovnbe
mov
pop
ret
rcl
push
jge
cld
cmp
int
jo
jo
jne
mov
pop
dec
mov
loopne
jae
mov
insl
clc
sub
xchg
mov
mov
rclb
mov
dec
pop
jbe
imul
or
mov
lods
inc
sahf
aam
iret
outsb
insl
push
frstor
scas
fsubs
xchg
jmp
bound
lock
jecxz
in
fbld
sbb
loop
adc
push
movsb
and
outsl
fildl
out
pop
adc
mov
scas
mov
inc
shlb
repnz
stos
lds
mov
cmp
stc
pushf
test
push
addr16
insb
jno
outsl
dec
dec
gs
call
jb
pop
mov
loopne
push
add
repz
cwtl
cmpb
inc
or
inc
mov
adc
dec
and
pop
inc
jge
movsl
scas
ret
jb
xor
push
fisubrs
icebp
pushl
jno
sub
hlt
push
sub
jg
nop
shrl
xchg
pop
loopne
jge
xorb
or
loopne
jae
pushf
mov
add
imul
rorb
ja
dec
fmul
fdiv
xor
loope
cld
ret
das
dec
jns
xor
lret
adc
insb
in
inc
ss
sysret
aas
sub
aaa
scas
data16
jmp
ret
xchg
inc
pop
insl
iret
subl
push
daa
add
shrl
jne
cs
mov
mov
or
or
jne
js
adc
popa
sbbl
mov
aam
lds
sbb
cli
jg
repz
std
out
fistpll
push
aaa
mov
add
dec
lods
mov
and
test
push
mov
or
sbb
scas
pop
ss
sti
jno
mov
push
fldt
add
add
in
push
jbe
nop
es
jbe
adc
cmp
push
call
xchg
sbb
xor
jnp
stos
out
inc
pop
cli
decb
mov
sahf
loopne
aas
or
mov
inc
pop
shll
jo
jno
fcomps
aam
addb
mov
sub
jnp
push
sahf
subl
sbb
xchg
push
add
mov
arpl
xlat
mov
adc
xchg
mov
xchg
jp
mov
shrb
ret
lds
inc
pushf
icebp
push
aaa
and
adc
shrl
insl
mov
mov
lret
iret
sbb
int3
mov
cltd
mov
xor
pop
fcmovnu
leave
mov
icebp
icebp
push
dec
insl
andl
jno
adc
popf
xchg
pop
pop
lods
pop
ret
iret
loope
add
fisubl
cli
incl
arpl
jmp
mov
out
jmp
inc
hlt
imul
push
jno
xchg
std
js
icebp
stos
jne
ss
jmp
inc
jns
cmpsb
pop
push
xchg
aam
test
xor
mov
mov
ret
jne
cmp
dec
pop
std
adc
push
mov
repz
mov
jmp
mov
mov
gs
mov
sub
insl
call
ss
cmp
icebp
ret
xchg
cmpsl
les
dec
mov
push
cs
inc
xchg
dec
pop
cmp
cmp
cmp
ret
jl
and
inc
xchg
adc
movsb
inc
mov
jmp
push
xchg
push
lahf
adcb
jl
push
cwtl
pushf
jge
imul
rclb
inc
stc
popa
rol
pop
out
sbb
adcl
fwait
and
mov
and
lahf
add
and
dec
mov
sti
lods
pop
add
rol
cli
mov
jbe
fdivrp
insl
jmp
scas
mov
pushf
or
in
pop
ja
or
call
not
pop
out
pop
mov
into
test
mov
sti
add
and
jp
loopne
mov
mov
pusha
dec
add
jb
ds
cli
sysret
pop
sbb
xor
dec
daa
push
ret
leave
notl
pop
jl
popa
sub
fstpl
call
cld
jne
mov
shlb
fidivrl
and
nop
cmp
pop
testl
mov
aad
daa
xchg
cmpb
int
mov
cmp
jbe
pushf
jmp
faddl
mov
pop
adc
aaa
sub
pop
xor
dec
inc
pop
les
xor
mov
cmpsb
std
mov
cmpsl
push
jb
jmp
lea
and
stc
imul
jnp
lock
fisttpl
dec
rorl
call
jl
inc
xchg
xchg
xchg
xor
add
outsl
lock
addb
mov
mov
repnz
lret
jmp
and
mov
sbb
add
sub
repnz
bound
xchg
test
mov
scas
dec
repz
out
jbe
or
sub
loope
ljmp
add
fisubrl
jb
inc
mov
lock
xor
out
leave
scas
or
das
push
add
pop
fdivs
or
insb
mov
push
sarl
mov
inc
or
adc
mov
mov
pop
adc
push
cmp
cmp
in
jp
and
shrl
jno
and
mov
push
adc
cmp
sbb
or
jnp
cwtl
xor
jg
adc
cwtl
mov
into
push
imul
sbb
add
add
ljmp
sub
mov
add
jp
pop
xor
repnz
pushf
cmp
inc
js
cmpsb
in
enter
push
sub
jmp
and
fcomps
adc
push
cwtl
sub
push
xchg
lea
imul
fs
call
dec
mov
daa
icebp
cmp
fiaddl
out
cld
jbe
push
cmp
lods
fsin
mov
mov
sbb
push
sbb
movsl
and
mov
cmp
imul
decl
add
lds
jmp
les
sbb
adcb
rcr
ja
jns
and
sbb
jo
imul
mov
insl
jecxz
xor
xchg
inc
sub
pop
mov
scas
or
mov
jno
sahf
pop
mov
push
pop
cmpl
out
movsb
sub
pop
ja
sub
enter
pop
xchg
and
pop
andb
mov
cmp
stc
dec
mov
cwtd
cwtl
cmp
insb
in
pop
fwait
or
es
in
sub
cmc
mov
xor
lods
cmp
dec
sub
jne
das
or
mov
or
inc
idivl
mov
sti
adc
loope
lcall
mov
fcoml
pop
aaa
mov
push
shrb
mov
adcb
ja
sahf
test
sub
lods
push
jp
and
rcl
addl
xchg
mov
orb
push
fwait
mov
and
loopne
das
add
xor
adc
andl
std
orb
pushf
pop
mov
push
mov
sbb
push
and
lea
xchg
mov
rolb
pusha
lea
mov
out
ja
test
std
inc
push
popf
imul
cmp
mov
mov
outsb
xor
rclb
icebp
ljmp
sarl
pop
pop
jmp
std
cmp
icebp
jge
or
cld
daa
sub
pop
das
enter
and
xchg
mov
aaa
ljmp
mov
jg
adc
repnz
dec
lods
mov
fprem1
xlat
or
pop
data16
mov
imulb
push
pop
add
mov
adc
sub
cwtl
out
sub
movb
pusha
ret
test
mov
pop
scas
or
dec
fnsave
jmp
xor
mov
sarl
inc
or
cmp
mov
enter
insb
call
sbb
outsl
dec
sub
mov
enter
lea
test
add
rclb
sbb
sub
xor
mov
inc
xchg
jg
addr16
out
mov
cmp
push
mov
dec
iret
in
mov
xchg
out
les
adc
sbb
lock
push
jo
test
call
out
aaa
dec
pop
xchg
insl
imulb
jg
pusha
cltd
frstor
cmp
rclb
insb
xchg
cmpsb
jg
arpl
ds
cmp
ss
inc
clc
cmp
inc
ds
mov
stos
and
cmp
dec
xor
cld
xchg
xchg
cmp
cmp
lcall
pop
dec
cli
push
loope
loop
int3
arpl
inc
stos
dec
and
fists
imul
push
call
xor
jno
xlat
xchg
xchg
sbb
leave
jmp
stos
das
xor
movsl
aad
sub
test
and
dec
mov
leave
adc
insl
movsl
and
xchg
daa
aad
jbe
imul
xor
sbb
leave
mov
aam
adc
add
fsubrs
lods
sbb
out
mov
pop
fadds
dec
lods
mov
sbbl
push
test
shll
jp
xorl
sti
dec
pushf
mov
mov
out
js
or
inc
cmp
subb
xchg
daa
push
mov
in
add
cmp
jg
out
outsl
out
es
sti
adc
cli
dec
xor
cli
scas
cmpsb
xor
mov
or
push
push
jp
jne
lret
pop
lock
xchg
or
movsb
std
imulb
sbb
jmp
adcl
xchg
data16
xor
dec
pop
jmp
cltd
mov
imul
mov
mov
pop
pop
rcrb
add
mov
adcl
repz
xor
loope
mov
pop
sub
test
out
cmp
test
repz
pop
or
pop
mov
enter
lds
dec
dec
xchg
and
lea
outsl
and
xor
iret
sub
int
adc
int3
popa
dec
xchg
daa
sbb
jge
mov
fidivl
mov
mov
cs
fsts
in
insl
mov
mov
mov
cmp
subb
pop
xchg
sub
scas
and
fcompl
jge
inc
sarb
sbb
add
out
pop
dec
push
pop
call
je
ljmp
mov
sahf
cmp
mov
inc
bound
mov
xchg
hlt
pusha
add
subl
mov
cmc
and
je
xchg
cltd
or
pop
jb
addr16
iret
xor
hlt
and
test
test
ljmp
fdivl
sub
mov
cmp
mov
cmpsb
push
dec
jnp
not
std
es
repnz
push
mov
pop
mov
xchg
or
inc
mov
inc
rorb
xor
mov
fstl
adc
cmp
sub
lahf
mov
mov
in
popa
and
int3
in
pusha
and
mov
pop
lods
mov
test
outsl
dec
shll
cmpsb
sbb
sub
outsb
mov
push
dec
mov
jo
gs
push
nop
sub
sarl
xor
push
les
nop
in
mov
cmp
cmp
adc
mov
pop
jmp
xchg
push
jno
lahf
test
shlb
dec
or
cmp
mov
imul
push
dec
cmpsl
inc
jecxz
mov
or
dec
and
jb
das
xor
jnp
cld
inc
in
lret
clc
push
cld
inc
insb
dec
cmpsl
mov
xor
jo
lock
loop
in
test
icebp
xchg
arpl
js
inc
sbbl
in
lock
and
mov
decb
push
push
xor
pop
push
adc
sub
mov
xor
pop
sarl
inc
xchg
xchg
cmp
arpl
clc
pop
inc
out
jg
jmp
out
adc
gs
std
or
push
loopne
jae
pop
lea
inc
fadds
pop
mov
inc
sub
lds
lock
mov
dec
imul
mov
jae
inc
dec
lret
adc
push
fs
pop
mov
aas
pop
test
xor
sahf
add
xchg
push
dec
lea
ja
mov
outsb
cmp
mov
ret
jno
pop
mov
adc
ret
stos
push
xchg
sub
add
mov
cmc
sbb
xor
and
xchg
or
jg
cmp
popa
xlat
and
mov
call
dec
push
push
imul
stc
idivl
xor
in
jecxz
sub
or
cmp
sub
push
cmp
mov
push
js
lea
xlat
lahf
mov
sbb
sub
test
lahf
mov
test
and
xor
and
mov
mov
orl
mov
xchg
es
mov
mov
push
arpl
sub
in
subb
cmp
std
in
scas
dec
repnz
adc
adc
lcall
mov
cmp
call
popf
addr16
cmp
in
outsb
sarb
push
imulb
daa
cmp
enter
shl
jnp
sbb
pop
and
sarl
dec
daa
push
cmp
add
cwtl
lret
outsb
das
cmp
pop
ja
push
jp
mov
adc
sbb
outsb
daa
out
cmp
movsl
xchg
mov
xor
scas
orb
negl
jmp
dec
xor
pop
pop
cmc
xor
mov
fneni(8087
test
out
int
popa
mov
das
xor
mov
stc
cmp
ljmp
adc
jge
add
push
inc
nop
loope
mov
scas
mov
adc
or
popa
dec
xorb
sbb
cli
mov
mov
in
xor
add
das
jl
and
dec
insl
cmp
cli
gs
cmpsb
test
frstor
pop
rcrl
jb,pt
mov
imul
mov
jbe
inc
pop
fstpt
cltd
loop
negb
jle
push
jnp
push
cli
lds
xlat
test
jmp
add
xor
pusha
and
out
in
jge
jl
movaps
popf
cltd
sub
mov
test
leave
sbb
ret
add
fsts
mov
outsl
popf
imul
iret
jno
fs
pop
in
outsb
shr
jae
lods
push
test
insl
jl
lret
adc
push
pop
add
add
cwtl
subb
mov
pop
push
pop
hlt
into
pop
xchg
fstl
add
cmp
mov
sbb
add
dec
and
fiaddl
repnz
or
cmp
push
fcoms
jbe
jns
clc
mov
or
and
sar
adc
mov
in
aaa
xor
nop
dec
add
out
js
mov
ja
aad
mov
dec
mov
pop
push
xor
mov
push
xchg
mov
lds
cmc
lock
dec
jbe
and
or
outsl
out
sbb
xchg
jmp
lods
inc
mov
fdiv
adc
mul
jns
inc
sbb
dec
lret
inc
xor
cmp
sub
popf
or
sbb
mov
call
repz
mov
std
fldenv
scas
mov
das
imul
fcomi
pop
sbb
repz
and
xlat
psadbw
aaa
adc
nop
inc
mov
nop
and
andb
mov
xlat
orl
push
xlat
dec
cmpb
xlat
pusha
sbb
mov
repz
scas
rcrl
mov
push
xchg
out
fistpll
out
or
in
dec
orb
cli
push
jecxz,pn
add
cltd
std
sub
jge
test
jbe
push
fdivrl
push
sbb
in
pop
repz
jnp
cltd
outsl
outsb
mov
daa
or
out
pop
inc
stc
xor
and
into
add
cmpsl
stos
adc
mov
cmp
pop
jne
sub
dec
mov
xchg
jnp
stos
js
outsb
movsb
sbb
push
rorl
pop
add
adc
mov
xchg
test
or
push
inc
addl
and
inc
lcall
mov
cs
mov
inc
iret
ret
or
fmull
xchg
sub
cmp
add
outsl
push
or
leave
sbb
fisubrs
pop
mov
hlt
xchg
les
push
and
jp
imul
or
into
or
jge
push
outsb
fimuls
aam
test
add
sysret
jmp
mov
ds
in
add
pop
sbb
pop
aaa
insl
mov
inc
aaa
xor
mov
inc
jb
and
push
or
pop
outsb
pop
jp
xlat
in
fdivr
pop
push
mov
pop
adc
jecxz
lcall
sub
mov
fistl
or
sub
xor
xchg
dec
xchg
or
sub
sub
add
shlb
jp
jae
cmpsl
ret
cmp
stc
push
and
jb
push
cs
cmpsl
adc
cmp
or
pop
jbe
call
push
xchg
psrad
adc
sbb
or
mov
leave
sbb
cmp
jne
adc
inc
xchg
jae
loope
dec
mov
div
push
sbb
xchg
shr
or
jmp
push
lea
test
xchg
mov
cli
jle
out
rcr
or
icebp
sub
cli
xchg
stc
inc
sahf
testl
mov
sbb
roll
movsl
loope
dec
repnz
jle
aam
test
cmp
loop
lret
cs
popa
inc
movsl
push
push
adc
push
lock
stos
add
shll
dec
xchg
adc
or
sbb
jmp
fcmovne
test
inc
push
and
adc
cmp
faddl
xor
jl
scas
push
inc
cmpsb
pop
idivb
loopne
xchg
hlt
jae
jbe
out
orb
and
aad
sbb
int3
ja
sub
out
and
dec
cmp
mov
sti
mov
mov
mov
cmp
xor
addr16
dec
mov
clc
and
push
or
rorb
xchg
into
dec
cmpsb
fimuls
mov
add
in
jnp
iret
adc
shr
dec
cmp
daa
pop
or
out
cmc
test
addl
lock
ret
xor
ret
xor
jl
das
jecxz
push
add
push
xor
in
loopne
cmpsl
sbb
mov
adc
lret
inc
pop
adc
adcb
adc
mov
adc
pop
add
and
xor
into
gs
mov
in
in
push
push
outsb
ljmp
lock
push
hlt
aaa
arpl
mov
jle
inc
mov
lods
xchg
pop
jg
sub
or
stos
mov
cmc
push
pop
call
repnz
dec
inc
es
or
sbb
fcompl
cmp
enter
scas
out
je
sahf
jae
adc
inc
mov
fbld
xchg
rcrb
inc
push
rdtsc
jnp
movsb
xor
inc
test
push
out
les
mov
push
inc
mov
insl
hlt
dec
fidivl
add
jmpw
mov
test
das
mov
or
cmpsb
jae
test
negb
je
repz
push
imul
std
mov
lds
add
jb
cmp
popa
jmp
mov
cmpsb
fxch
mov
or
push
test
fadd
sub
or
stc
mov
icebp
xor
add
sbb
push
repz
lea
icebp
stc
sub
je
sub
xor
aad
sub
mov
out
push
jbe
scas
cmp
mov
cmp
sbb
push
shll
add
adc
daa
test
xchg
sbb
stos
icebp
bound
mov
fwait
movsb
push
rcl
js
orb
jge
fisubs
loopne
and
mov
pop
xor
mov
cli
and
mov
dec
idiv
div
icebp
outsb
xchg
shlb
bound
jb
cmp
movsl
xchg
and
inc
int3
adcb
mov
out
ds
imull
and
dec
shll
subl
or
xor
sbb
pop
mov
jnp
outsl
fwait
add
pop
sarl
int3
dec
mov
jae
inc
fcoms
fcoms
inc
out
push
aad
push
adc
xchg
push
push
imul
insl
jg
repz
inc
daa
insb
cmp
sti
add
aaa
aaa
and
lcall
and
js
inc
lds
in
fimull
je
outsb
sbb
xor
lock
cmpsl
adc
jle
xor
sub
sahf
sbb
movsl
lret
enter
pop
fs
insb
push
sbb
enter
adc
xchg
mull
pop
aam
xor
add
cltd
test
pop
fstpl
clc
xchg
int
xor
out
mov
test
fwait
sub
call
mov
arpl
das
addr16
lret
jmp
ljmp
sbb
sub
sbb
jb
enter
sahf
sbb
or
pop
pop
dec
cwtl
data16
xchg
mov
lcall
int
mov
fdivrl
cmpsb
cmc
dec
adc
or
push
mov
push
movsl
rcll
psraw
dec
addb
xor
out
movsl
bound
adc
cli
loope
xchg
jmp
repz
lret
mov
add
jmp
push
int3
pop
xchg
mov
ret
pop
jno
lods
imul
mov
mov
dec
pop
xor
enter
jle
add
scas
xor
aam
movsl
pop
dec
loope
or
mov
scas
mov
lcall
loop
ret
sbb
sti
push
push
subl
sbb
leave
jmp
sbb
pop
insl
fisubl
test
mov
and
icebp
and
pop
push
test
aad
cmpsb
mov
rol
mov
add
mov
inc
pop
and
adcl
jge
icebp
and
inc
outsb
push
mov
stc
ljmp
repz
imul
jecxz
sub
arpl
stos
adc
push
mov
xor
int
or
push
mov
push
imul
sbb
mov
scas
ret
test
aas
rcll
cmp
fwait
adc
cmc
jecxz
rorb
and
mov
push
js
jnp
mov
adc
pop
dec
dec
and
mov
data16
xorb
subb
stos
push
movsl
stos
inc
lret
mov
sar
mov
dec
in
lods
dec
icebp
aas
mov
addb
fwait
test
cmp
ljmp
test
or
xchg
cmpsb
lods
movsl
mov
aad
popf
cmp
pop
sti
rorb
xlat
mov
loope
pushf
sub
in
outsb
jne
loope
jle
repnz
testl
jno
hlt
andb
sub
pop
sbb
fldenv
call
mov
fcomip
pop
mov
mov
decb
sub
repz
xchg
fwait
push
sbb
pushfw
sahf
nop
mov
cs
das
xor
lahf
mov
mov
leave
push
shll
dec
cwtl
popf
push
xor
dec
mov
sub
cmp
and
js
ja
lss
shlb
fbstp
das
js
testb
pop
sbb
pop
add
inc
out
jmp
shll
pop
jnp
xchg
andb
movsl
cld
in
cmp
inc
jle
jmp
repz
push
and
xor
enter
sub
ss
scas
sub
inc
xor
adc
imul
repnz
add
out
shr
or
add
das
pop
push
into
add
imulb
je
imul
mov
xchg
test
int3
mov
adc
sub
xor
mov
pop
pop
aaa
and
leave
mov
push
add
sub
mov
add
xor
push
push
sbb
test
ret
imul
mov
in
sbb
mov
mov
jb
fs
dec
orl
fiaddl
cmp
cmpsb
cmp
pop
js
popf
nop
dec
call
mov
push
sub
cld
in
xor
jl
cltd
int
into
mov
leave
lods
xchg
add
movsb
shlb
mov
cmpsb
mov
adc
lock
stos
cmp
and
stc
mov
es
pop
rorl
inc
mov
and
or
mov
jecxz
mov
test
cld
jnp
lcall
mov
in
popa
cmp
inc
lret
push
sbb
pop
out
stos
mov
inc
xor
jecxz
pop
xor
and
outsb
lods
test
decl
adc
or
mov
cli
push
push
sbb
pop
movl
xor
imul
cmp
test
mov
xchg
mov
ss
xor
add
jecxz
cltd
leave
mov
mov
mov
cld
push
popa
cmpsb
data16
mov
insb
inc
ficoml
jmp
pop
dec
adc
jb
push
enter
adc
cmp
push
mov
push
popa
test
mov
les
jmp
call
fmull
mov
or
movsl
or
mov
mov
mov
push
inc
add
add
aas
add
sub
dec
popa
xchg
inc
and
in
xchg
push
in
pop
push
ret
ret
outsb
incl
sbb
add
ficompl
add
xchg
push
iret
jo
and
fisttps
enter
movsb
into
xchg
and
mov
jmp
call
arpl
mov
inc
js
add
sub
push
cld
ret
fdivp
push
and
xor
push
inc
ljmp
xchg
sti
sub
aad
jnp
data16
outsb
xchg
cmp
ret
push
cmp
sub
mov
mov
ficoml
xor
stos
add
mov
mov
or
loope
xor
lcall
mov
push
xor
push
cmpsb
stos
pop
inc
stos
cmp
imul
jnp
pop
dec
divb
outsl
fsubp
xchg
andl
jne
or
xchg
pop
pusha
jmp
mov
jno
bound
icebp
xchg
into
cld
icebp
add
sbb
fsubrs
out
iret
sbb
push
ds
sub
add
popa
inc
outsb
imull
loop
mov
add
add
mov
lds
outsl
or
inc
fisttpl
addr16
push
fucomip
mov
hlt
lock
mov
fisubl
das
pop
mov
dec
jecxz
outsb
push
dec
adc
lea
pop
sub
jo
sub
and
pop
sub
pop
mov
test
mov
and
pop
int
push
fnsave
cld
bound
add
subl
lods
into
pusha
mov
or
inc
out
xchg
aam
test
outsb
outsl
cs
loope
jl
sbb
jecxz
fidivrs
nop
test
add
outsb
and
roll
cmp
inc
popa
call
popf
inc
jecxz
pop
push
mov
jns
mov
sbb
test
outsl
fcomps
flds
mov
pop
mov
fs
pop
addr16
mov
sbb
mov
jmp
call
lods
aad
shlb
scas
pop
xchg
dec
sub
and
mov
adc
mov
into
ljmp
pop
mov
mov
insl
pop
cmp
lfs
ffreep
adc
sub
ja
jmp
clc
cmp
jl
lcall
push
mov
call
add
in
or
bound
sub
or
iret
repz
xchg
imul
mov
mov
decb
jp
fidivl
mull
add
out
mov
xor
mov
add
mov
lret
ficoml
cmc
xchg
mov
clc
and
jno
cmp
out
inc
pop
or
pop
imul
cmpsb
adc
jmp
addr16
mov
fs
mov
mov
cmpsl
lret
xor
add
push
jne
rcll
sub
fisubl
cli
fidivrl
jle
mov
loop
cmc
fsub
mov
testl
adcb
stos
test
mov
ja
xor
lock
arpl
ficoms
shll
inc
add
cmp
mov
inc
hlt
std
bound
insl
mov
inc
stc
rolb
lret
daa
pop
xchg
dec
add
mov
sub
cmpsl
adc
inc
in
xor
cmp
xor
ret
mov
lret
cmp
dec
jmp
fiadds
pop
or
fbstp
inc
push
pop
stos
fmulp
adc
xor
cmp
push
jge
aaa
pop
out
daa
inc
sub
fidivl
and
sbb
dec
test
jmp
xchg
pop
xchg
jg
xor
push
repnz
sti
scas
lods
cmp
and
fwait
adc
in
jae
imul
fwait
pop
lahf
fnsave
sbb
mov
fs
js
xchg
neg
ljmp
sarb
or
xchg
mov
or
cli
sbbl
adc
push
movb
mov
jl
ljmp
add
int
mov
sbbl
sbb
xorb
dec
adc
in
pop
lods
bnd
pop
pop
xchg
pop
js
push
add
xchg
xchg
cmp
sbb
ret
sub
pusha
xorl
inc
sub
call
cmp
fiadds
and
adc
popa
test
inc
sahf
adc
xchg
jl
lahf
sub
adc
push
insl
mov
inc
pop
imul
into
test
mov
xor
outsb
mov
dec
cli
xchg
jns
pop
adcl
gs
rcrb
or
loop
and
mov
xchg
pop
and
pop
fs
push
inc
mov
gs
mov
shlb
jg
cmp
nop
sbb
push
dec
fldcw
fcompl
mov
jl
int
test
push
add
mov
cmpsl
lahf
jbe
xchg
cld
cmp
cmc
out
mov
mov
dec
mov
loope
shll
sbb
mov
outsb
bound
mov
leave
movsl
xchg
mov
cld
pop
push
fnstsw
push
or
xorb
push
adc
inc
xor
cmpl
push
out
and
xor
dec
pop
stos
arpl
pusha
fists
andb
stos
xor
mov
xchg
pop
movsb
jo
pop
out
and
movsl
bound
inc
xor
inc
push
xlat
pop
cltd
out
inc
enter
lods
es
push
sti
or
in
xchg
aam
adc
out
fwait
add
and
cmpsb
mov
inc
sbb
sbbl
xor
mov
and
insb
dec
cli
mov
pop
in
icebp
push
inc
adc
idiv
mov
mov
ss
lret
and
xor
cs
call
push
stos
dec
andl
fwait
mov
mov
fisubs
and
mov
jmp
inc
push
mov
testb
test
lods
sbb
jo
pop
leave
ret
and
pop
js
dec
insl
shrw
or
outsb
pop
mov
stc
fmul
inc
jl
lret
push
or
jne
and
push
inc
shll
cmp
repz
iret
cmp
dec
push
out
fdivr
lods
mul
outsl
outsb
add
mov
mov
xorl
scas
addl
cmp
decl
add
lahf
and
jnp
hlt
and
xchg
mov
cvtps2pi
mov
lods
jecxz
lret
sbbb
dec
fists
jle,pt
sub
adc
jle
sub
lahf
mov
jl
iret
jne
fwait
sbb
pop
lcall
push
pusha
sbb
dec
test
add
mov
lret
adc
adc
inc
and
mov
mov
inc
iret
cli
inc
shlb
enter
push
push
pop
aas
pop
add
addl
fisubrs
push
push
pop
cmpsl
sbb
push
es
cmp
mov
add
cmpsl
adcb
pop
add
jno
jne
dec
jl
stos
pop
jnp
jb
in
cmp
lods
mov
mov
mov
mov
enter
je
rclb
cmp
lcall
cmp
icebp
inc
add
hlt
adc
shll
push
cmp
push
push
push
imul
inc
popf
xchg
fnstenv
nop
mov
jle
sahf
in
sub
sub
enter
call
adc
mov
mov
add
imul
test
xlat
repnz
iret
push
inc
push
sbb
hlt
inc
shll
inc
mov
inc
pushf
jbe
mov
xchg
cmpsl
adc
lret
test
in
arpl
test
sti
leave
pop
gs
movsb
scas
sbbb
cmp
and
andl
adc
adc
jmp
dec
sti
jbe
cmp
mov
push
out
mov
push
dec
stc
cmp
xchg
sbb
andb
leave
and
fisubrs
frstor
mov
and
inc
xchg
das
fdivrl
inc
inc
lahf
test
cmp
sti
pop
push
mov
imul
or
jp
int
outsl
ss
xor
insb
push
jo
mov
mov
insb
cmpsl
dec
sti
inc
jno
insl
bnd
push
add
lea
das
xor
or
jle
stos
test
gs
movsb
lods
sbb
mov
and
cmc
movb
and
leave
dec
adc
push
fistps
cmc
sub
in
or
and
push
cmp
ror
adc
mov
je
or
pop
xchg
stos
cmpsb
lcall
test
imul
mov
mul
pop
adc
popf
fmuls
scas
adc
jp
call
repnz
pop
mov
sbb
lcall
cltd
into
out
lea
syscall
test
gs
js
fisubrl
jo
notb
and
jae
jo
pushl
jno
enter
push
and
push
out
push
shlb
adc
mul
idivl
xchg
xchg
xchg
push
sub
add
mov
out
sub
sahf
lret
inc
rcrl
pop
fstpt
dec
jg
fldt
and
mov
and
rolb
or
loope
jnp
inc
mov
dec
test
add
jmp
sbb
test
in
lea
call
mov
test
sahf
jns
cmp
rcrl
mov
mov
scas
inc
test
xchg
test
or
sub
xchg
cmc
jb
xor
ss
sbb
jle
in
fisubrs
xchg
add
or
mov
or
add
jl
and
mov
popa
lret
add
pop
jp
lods
nop
jo
inc
push
sub
imul
js
inc
nop
loope
imul
sub
mov
mov
movsb
jl
mov
sbb
movsl
test
mul
or
cmp
aaa
arpl
mov
or
sarl
push
or
out
es
adc
and
mov
mov
xchg
xchg
mov
mov
add
sbb
shl
popa
pop
or
fidivrl
mov
push
fadds
aas
das
leave
insl
pop
imul
es
ljmp
andb
frstor
push
frstor
sub
fwait
lret
mov
sbb
jle
inc
mov
sti
mov
nop
mov
or
mov
push
xor
sar
sbb
das
int3
or
add
fwait
inc
sbb
aad
mov
enter
pop
jbe
jno
outsb
mov
xor
in
pop
and
mov
leave
pop
push
cmc
fmulp
sbb
test
movsl
mov
popa
test
lock
std
push
pop
add
out
adc
orl
lahf
pop
jno
popf
movsb
xchg
test
std
xor
sbb
jmp
mov
cmc
mov
lea
cmp
mov
or
xor
mov
xchg
push
bound
in
daa
mov
cmp
mov
sub
xchg
jmp
adc
fistl
pop
jae
fildl
inc
sbb
int3
xchg
push
adc
and
xchg
jg
rcrl
sahf
scas
dec
push
inc
testl
int3
xor
mov
pop
icebp
mov
das
out
jae
insl
mov
add
nop
dec
dec
rol
adc
test
jae
or
xlat
insl
ret
push
xor
mov
mov
in
mov
shl
mov
in
adc
test
pop
out
add
inc
lock
dec
dec
rorl
sbb
mov
cmp
sub
hlt
dec
add
test
dec
jmp
loope
outsl
push
adc
push
scas
decb
iret
or
ja
imul
or
adc
leave
icebp
mov
call
inc
mov
xchg
lds
pop
push
jnp
in
xor
dec
shl
xchg
jnp
dec
lret
xchg
or
adc
popf
fwait
mov
incl
xor
push
sub
jae
daa
sub
jbe
aas
and
sar
cli
mov
add
jg
mov
mov
mov
les
clc
leave
notb
call
ret
pop
adc
inc
push
mov
sub
pusha
pushf
movb
lret
or
jnp
xor
jge
iret
aaa
push
mov
mov
jb
pop
js
cli
fcompl
add
sub
jl
xor
dec
bound
push
incb
sub
loop
mov
into
sub
cmp
fildl
cli
jmp
inc
mov
inc
add
jg
pop
pop
cld
adc
adc
xchg
fsubl
mov
mov
je
pushf
cmp
mov
xor
icebp
pop
aam
dec
cmp
mov
mov
pusha
and
decl
clc
hlt
pop
cli
sub
jg
inc
cmpsb
leave
fstl
sub
push
iret
pop
jp
pusha
movsl
daa
movsb
fistpl
inc
jnp
push
imul
xchg
add
push
bound
imul
inc
fucomp
mov
cmp
add
ret
lods
cs
jl
scas
mov
leave
jp
out
cmp
cmp
mov
cmpsb
pop
pop
push
repnz
int
and
cs
dec
test
subb
mov
add
inc
jle
add
push
mov
mov
aad
dec
popf
jg
push
dec
pop
int3
sub
push
pushf
mov
cmpl
std
xchg
jb
jne
xchg
out
xchg
loopne
imul
mov
rorl
test
jne
mov
or
aad
push
push
rcrb
rorb
in
stos
lds
jge
cli
cltd
insb
pop
mov
std
push
jg
xor
mov
sub
jl
inc
dec
imul
repnz
pop
cmpsb
ret
data16
fs
rcll
stc
outsb
fnstsw
xlat
adc
mov
fadds
sbbl
jne
lret
pusha
shll
cmc
loope
cmpsb
negb
and
inc
test
je
or
add
adc
pushf
inc
or
test
push
in
movb
movlps
sbb
push
cmp
mov
mov
mov
jae
movsl
push
push
test
lret
insb
lcall
stc
pop
add
outsb
fucomip
push
xor
cmp
push
test
inc
mov
ror
cmc
dec
push
cli
mov
or
pop
stos
lahf
adcl
xchg
loop
pop
push
lahf
pop
mov
leave
loop
adc
jmp
pop
add
gs
xchg
stos
clc
dec
repz
inc
out
xchg
mov
pop
add
cwtl
adc
inc
decb
lods
sbb
sbb
gs
pop
jb
mov
popf
dec
sub
cmc
inc
sub
jns
xor
adc
xor
mov
mov
jp
or
inc
pusha
bnd
cmp
pop
adc
outsl
pop
fwait
mov
or
jbe
je
data16
test
daa
jno
cmp
out
dec
mov
dec
arpl
add
mov
pop
cli
arpl
lods
xorb
and
loope
xor
xor
bnd
sbb
mov
mov
rcrb
inc
iret
sub
call
and
jbe
adc
shrl
out
push
dec
outsl
fcoml
mov
push
xchg
xchg
jb
in
enter
jge
push
ss
mov
test
jns
popf
sbb
mov
popf
inc
roll
sti
mov
mov
lret
adc
fldcw
shrb
pop
sbb
jne
push
jae
lcall
mov
aam
mov
and
out
mull
inc
mov
jb
mov
xchg
jl
icebp
rcll
xchg
addl
rolb
fs
out
ror
or
mov
sub
andl
lds
fmul
sub
sbb
imul
ret
sub
andl
cmp
test
pop
in
fucomip
test
push
fistps
sub
xchg
push
xor
pop
loop
or
stos
pop
jecxz
cmp
sbb
test
sub
jl
imul
mov
fcmovnbe
or
lods
mov
cmp
sbb
fdivrp
shl
pop
fsubrl
imul
or
push
int3
xbegin
xchg
popf
rorb
sbb
add
push
jo
add
xchg
stc
fldcw
pop
cmp
out
addr16
test
dec
daa
movsl
pop
mov
cwtl
es
lret
lea
cmp
fisubrl
jecxz
xchg
jmp
or
push
aaa
push
out
loope
lods
and
loope
orb
sahf
into
mov
dec
cmpb
imul
adc
xchg
xchg
arpl
lahf
push
mov
mull
jb
jl
dec
lcall
lock
roll
cmp
movsl
out
mov
imul
xchg
lock
negb
xor
jae
jmp
stos
lahf
adc
rorl
dec
cmpl
push
jl
es
int
xlat
addr16
popl
dec
mov
out
je
loope
paddsb
lret
pop
mov
xchg
adc
sbb
and
lods
pop
mov
lds
and
neg
call
fdivl
sub
mov
stc
into
dec
mov
push
popf
inc
xchg
repnz
dec
insl
clc
mov
pop
inc
andb
sub
shlb
test
je
pop
xor
cmp
push
inc
adc
sub
fisubrl
test
shrl
jmp
repnz
test
mov
andb
insl
adc
pusha
outsb
imul
cmpsl
shll
cmp
arpl
adc
add
xor
faddl
mov
shll
push
repnz
lods
shll
jns
in
sbb
xchg
ljmp
xlat
aam
rorl
mov
loop
ficomps
nop
ret
jae
sub
xor
stos
pop
clc
enterw
jo
mov
push
in
sub
out
lahf
xchg
repz
aas
xchg
iret
fidivs
arpl
nop
es
dec
leave
mov
fisubrs
jge
shrb
aaa
jecxz
xor
push
push
push
lods
mov
test
insl
fsubrs
pop
mov
scas
dec
hlt
loope
lret
mov
jno
fwait
pusha
and
mov
cmp
lea
inc
or
push
aas
fsubrp
mov
inc
cmp
or
rcll
push
xchg
fildl
dec
notb
sbb
mov
push
repz
mov
xlat
cli
lods
je
idivb
mov
jbe
add
push
loopne
icebp
sti
ret
fs
push
movsl
push
stc
xor
xchg
mov
imulb
out
adc
je
ret
xchg
add
in
shrl
andb
mov
xchg
fldenv
sbb
je
iret
and
les
dec
pop
aad
cmp
or
dec
cs
outsl
adcl
int
lods
sub
test
cmp
xor
xchg
loope
jnp
rolb
inc
push
shr
aaa
sub
inc
inc
xchg
fdivrs
pop
jnp
daa
frstor
dec
inc
movsb
push
les
jp
inc
mov
fistpll
cmp
cmpsl
add
in
test
cwtl
xchg
mov
pop
mov
jnp
call
inc
add
cltd
add
or
les
bnd
jbe
xor
aam
aas
and
and
sub
or
sti
adc
fidivrs
adc
xchg
mov
xlat
xchg
loop
xor
test
das
in
adc
inc
stos
mov
push
testb
xchg
outsl
lds
stos
in
loope
xorl
inc
inc
inc
xchg
cmp
add
mov
cltd
sub
ret
pop
pop
and
jnp
cmpsl
jae
mov
iret
xor
aaa
mov
sbb
sub
mov
fidivrl
repnz
mov
and
pop
jb
repnz
xchg
loopne
dec
xchg
inc
ss
pop
adc
inc
lret
pop
adc
jg,pt
cwtl
sub
and
pop
lds
inc
add
hlt
iret
add
lods
lcall
cwtl
jle
mov
lock
sbb
dec
cs
int
dec
iret
ret
mov
inc
loop
or
lods
in
fwait
jae
xorl
ss
iret
aad
push
dec
sub
push
repnz
and
dec
xchg
andl
hlt
adc
pushf
jg
jo
push
jecxz
cmp
push
mov
loop
les
cmp
xor
jmp
sarb
hlt
push
clc
test
sbb
mov
xchg
mov
adcb
outsb
jae
pop
mov
jecxz
add
cs
fisubrl
popa
popa
jb
lret
aas
stos
add
into
scas
jmp
xchg
daa
aad
outsb
ds
aam
cmpsb
incl
sahf
dec
pop
repnz
push
mov
xchg
mov
fwait
or
cmp
or
or
jp
or
cmp
xor
xchg
add
add
pop
jl
sub
xor
inc
imul
add
adc
xchg
xorb
imul
cmp
dec
mov
cmc
inc
jb
push
or
jbe
into
scas
ljmp
int3
shl
jne
fstl
rorb
mov
cmp
insl
loopne
les
pop
popa
in
frstor
lods
xchg
and
dec
fnsave
sti
push
adc
std
push
clc
cmp
popf
lret
jmp
mov
add
push
fldcw
aam
fbstp
cmp
lock
lea
stc
mov
push
sbb
jb
rcl
jb
cli
popf
mov
dec
fimuls
mov
cli
hlt
jne
ficomps
std
mov
stos
adc
int
pop
adc
in
add
ljmp
clc
jmp
cmp
mov
jge
inc
mov
in
lods
cli
shrl
in
jle
add
add
push
mov
or
mov
loopne
pop
and
repnz
and
scas
xchg
out
adc
sub
arpl
add
mov
cwtl
fs
andb
rcll
sbbb
mov
cmc
mov
maxps
call
scas
push
push
jne
fsubrs
xor
fwait
cmp
out
dec
add
fstps
inc
or
mov
mov
ljmp
fdivl
rorl
push
mov
call
pop
imul
outsb
pop
dec
iret
test
fnsave
pop
loopne
mov
dec
adc
enter
push
pop
and
out
in
pop
add
outsb
sti
or
pop
into
mov
shr
push
xchg
cmp
imul
out
cs
push
cli
int
scas
adc
outsl
inc
rcrb
or
sbb
fidivl
outsl
pop
or
loope
popa
xchg
call
xchg
sarl
repnz
aad
jns
outsb
pop
mov
xor
xor
mov
in
insl
add
sub
into
clc
add
in
aad
lods
adc
movsl
out
push
pop
in
popa
xor
out
leave
ja
pop
xor
into
cltd
cmpl
popf
push
fsubrl
xchg
cld
xchg
xchg
dec
fidivs
and
ret
xor
xor
cmpb
jno
ret
sbbb
mov
hlt
scas
cmp
std
push
jecxz
inc
cli
sbb
sbb
jg
cmpsl
push
xorb
push
fnsave
or
mov
fdivs
enter
popf
mov
sub
repz
cmpsl
xor
rclb
cmpsb
lds
adc
nop
or
jno
aaa
aad
mov
movsl
test
repz
testb
fs
pop
aas
lds
cmp
stc
mov
out
push
scas
std
dec
mov
pop
fdivrl
push
bnd
rcll
xchg
pop
scas
sub
leave
cli
arpl
push
or
and
mov
jle
xchg
pop
pop
or
pop
xor
clc
jl
dec
cmp
incl
clc
sbb
pop
inc
mov
mov
lea
and
lahf
inc
cmpsb
inc
rcrl
jbe
mov
ret
sub
js
pushf
pop
pop
push
mov
repz
std
jg
pop
mov
in
mov
dec
xor
mov
inc
hlt
testl
pop
pop
cmp
mov
ja
mov
enter
add
xchg
popa
int3
cmpsl
loop
sbb
fmulp
outsb
scas
jae
sar
or
clc
sbb
push
shll
outsb
iret
rcl
mov
mov
sub
ljmp
sbb
inc
in
inc
mov
add
jecxz
push
sbb
sbb
dec
pop
add
or
push
ret
icebp
cwtl
dec
stos
jp
jg
in
add
sub
sub
xor
rorl
sbb
jl
pop
jg
mov
mov
das
sub
xchg
jno
sti
fstpt
out
ds
jge
push
je
push
lds
cld
mov
or
push
cltd
pop
iret
push
fidivl
adc
loop
fiadds
push
mov
cmp
outsb
pop
sbb
add
mov
inc
loopne
xor
rclb
mov
daa
outsb
fwait
test
imul
fnstcw
mov
sub
mov
das
or
sbb
adc
sbb
xchg
push
inc
idivl
cmp
jne
stc
dec
cltd
and
or
pop
push
insl
adc
pop
jmp
xchg
sahf
sub
add
pop
push
out
add
loop
lea
imul
sub
jl
sub
outsl
js
insl
out
rcrb
xor
adc
leave
xchg
sub
pop
scas
decb
std
jp
je
popa
insb
cmp
or
and
ret
mov
bound
xchg
cmp
mulb
fcmove
dec
aas
es
divl
sbb
adc
xchg
inc
pop
mov
xchg
movsl
test
mov
fadd
ljmp
adcl
das
jb
aaa
jns
mov
fsubs
scas
inc
push
push
xchg
sti
enter
mov
mov
mov
jno
roll
cmc
fdivrl
popa
adc
or
push
pushf
rolb
xchg
inc
and
cmp
cmp
subl
mov
insb
fdiv
mov
ss
repnz
lahf
daa
sahf
adc
xchg
adc
mov
sbb
push
insl
xlat
push
push
jmp
pop
shrl
or
mov
or
jle
sbb
jp
test
testb
in
and
mov
adc
adc
popf
into
ss
cltd
cmp
lcall
or
push
sti
mov
jns
es
dec
movsb
sbb
xchg
mov
daa
xchg
mov
stos
mov
std
pop
stc
xchg
std
inc
jp
out
ror
xchg
sub
in
and
pop
xchg
lret
or
fcomps
xor
adc
aas
mov
mov
cmpsb
test
fnstenv
mov
mov
lret
aam
and
push
stos
rcrb
mov
adc
or
in
sarb
aaa
and
loop
xor
cmpb
cs
cmc
xchg
xor
mov
pop
pop
std
inc
test
adc
mov
mov
push
bound
int3
dec
xor
jne,pn
cmp
pop
jle
mov
inc
sbb
je
popf
and
mov
imul
jae
sbb
xor
or
popl
jae
fisttps
das
imulb
test
inc
fs
fisubrs
xchg
je
shll
sbb
push
mov
test
lahf
add
mov
lea
cli
stc
push
mov
in
movsb
xor
dec
addl
iret
inc
stos
pushf
addb
lock
lcall
test
mov
add
mov
ret
mov
push
or
sahf
xchg
jmp
sbb
ret
shlb
pushf
int
hlt
mov
adc
lock
xchg
cmp
stos
inc
out
aas
shrl
mov
or
cmc
idiv
or
adc
or
pusha
sbb
loopne
aam
jb
aas
mov
add
cmc
mov
pop
mov
add
fdiv
jle
mov
or
rcr
outsl
mov
mov
jns
mov
xchg
les
rolb
dec
out
test
subb
pop
push
push
mov
fst
bound
repz
pop
movsb
sbb
leave
mov
sub
jae
imulb
xor
iret
nop
jg
int3
orl
xchg
out
xchg
and
int
enter
out
out
inc
push
popa
fistpll
mov
sbb
je
testb
dec
mov
popa
mov
daa
inc
mov
jp
aad
das
push
push
loopne
shrb
scas
sub
and
sbb
outsl
cld
jecxz
aaa
stc
in
sub
pushf
inc
sbb
sti
jbe
xor
in
sbb
shrl
ficompl
add
push
add
mov
call
gs
lret
das
xchg
cmp
outsl
jle
and
inc
lret
xchg
inc
roll
push
and
or
push
inc
cmpsb
xchg
mov
pop
mov
jle
mov
lea
dec
imul
scas
loop,pn
add
mov
sub
mov
stos
xchg
sbb
inc
sub
xchg
jb
insb
cld
cwtl
movsl
inc
push
or
dec
sub
mov
shrl
call
mov
sub
jae
rorl
ja
sti
push
add
mov
pop
push
cli
dec
dec
lds
pop
mov
divb
push
xchg
dec
mov
scas
test
xor
pop
adc
scas
lods
into
mov
movsb
push
cmp
addr16
stos
stc
push
pop
pminsw
jns
mov
fisttpll
push
jp
fcompl
dec
mov
enter
lea
scas
cmc
sub
scas
sub
xchg
cmp
cmp
dec
add
push
mov
cld
mov
inc
pop
mov
mov
loopne
int3
cs
ret
iret
push
cs
and
ljmp
loope
nop
iret
sbb
cmp
mov
jg
push
std
mov
add
push
add
mov
jno
cmp
out
push
std
fsubr
pop
addr16
xchg
orb
test
jb
jb
in
cmp
and
movsb
jg
fs
lods
sub
rcll
mov
adc
pop
loop
iret
sub
xor
dec
mov
hlt
test
inc
cld
mov
movsl
mov
mov
pop
mov
enter
lds
sub
lret
daa
fldenv
out
adc
and
jmp
or
mov
add
mov
cld
imul
sbb
cs
add
shlb
xor
dec
enter
bound
dec
xchg
add
mulb
pop
add
nop
pop
idivb
pop
mov
push
xchg
mov
lods
daa
mov
mov
adc
ret
cmp
sbb
addr16
push
mov
es
mov
insl
ss
xchg
push
cmp
add
jp
jge
dec
xchg
arpl
or
mov
ljmp
mov
cmp
in
sahf
stc
inc
ss
dec
inc
test
mov
xor
cmp
pop
imull
gs
add
jmp
faddp
xor
mov
mov
xor
and
ficoms
push
mov
inc
add
sub
pop
mov
jne
xor
cld
xchg
popa
mov
shlb
loopne
or
add
cmp
ss
clc
push
cmpsb
out
test
int3
bound
pop
and
pop
cmp
sub
pop
adc
sahf
sub
xor
inc
pusha
xlat
add
and
movsl
enter
cld
push
jg
sub
sub
fldenv
fidivs
pop
mov
mov
mov
add
iret
xchg
into
outsb
push
mov
stos
sbb
jmp
in
mov
fs
lea
cmp
movsl
or
leave
shlb
dec
popf
popa
xor
push
push
push
arpl
push
lret
shl
fiaddl
icebp
jb
and
sub
push
popa
fdivrl
mov
test
and
xorb
stc
cmc
iret
and
call
mov
inc
pusha
cs
mov
pop
test
push
xor
scas
notb
lods
int
mov
mov
test
sub
repnz
js
pusha
push
stc
xchg
mov
adc
les
fcompl
daa
gs
pop
xor
dec
fcmovnbe
adc
sub
xchg
adcb
xorb
pop
push
ret
fiadds
adc
ret
mov
mov
cmc
mov
jge
dec
dec
mov
negl
push
aam
inc
xor
pop
pop
sub
jg
mov
ss
inc
ljmp
jle
aaa
push
xchg
xor
cmp
mov
cltd
or
aam
push
mov
push
movsb
negb
fnsave
cmp
and
adc
movsl
js
cmp
jl
and
push
inc
lea
mov
or
adc
outsl
jnp
shrb
add
xor
out
mov
adc
lods
push
adc
flds
aaa
jp
jnp
pop
push
clc
lahf
xchg
mull
sbb
sub
jae
jnp
jns
xlat
repz
xchg
dec
pop
xchg
cli
push
insb
mov
loopne
xchg
mov
sbb
aas
subps
pop
test
jo
data16
outsb
lahf
add
inc
add
pop
daa
aaa
lock
cld
push
enter
add
inc
movsl
pop
xlat
stos
xor
out
pusha
stos
sub
into
push
pop
mov
pop
cmp
fisubrl
cmp
outsb
std
rolb
cmp
cwtl
fsubs
adc
fcmovbe
add
rcrl
jge
jle
mov
add
hlt
test
xchg
jle
rolb
and
push
out
jecxz
xchg
jp
rorb
jnp
jno
mov
mov
in
inc
aad
push
movsl
sbb
test
dec
pop
mov
leave
mov
jge
addl
std
cmp
test
lods
jp
popa
sti
xor
jnp
push
xchg
dec
dec
inc
mov
xor
inc
mov
sub
ret
xchg
or
adc
mov
dec
sbb
loope
jmp
cmp
sub
mov
mov
mov
loopne
xor
mov
push
stc
in
out
ficoms
mov
mov
cmp
push
push
scas
aam
scas
lock
sub
cwtl
imul
test
test
aam
testb
mov
pop
scas
dec
xchg
subl
ret
out
mov
pop
out
dec
mov
xchg
jnp
pop
pop
sub
loopne
push
mov
mov
sub
insl
xchg
test
in
sub
repz
xor
fcmovnbe
mov
xchg
push
leave
call
pop
ret
push
leave
pushf
in
insb
sar
sahf
pop
xchg
jmp
out
sti
jmp
loope
es
cmp
mov
dec
inc
jno
add
dec
push
fmuls
or
mov
aad
sti
out
cmpsl
loope
mov
lcall
xchg
cmpsl
call
or
jl
inc
popf
mov
and
mov
push
push
rorl
in
addr16
shlb
jg
jnp
rolb
jno
push
test
stc
scas
dec
mov
mov
xchg
movsl
sti
insb
nop
nop
rolb
mov
sti
jbe
cmpsl
or
add
ljmp
dec
lock
movsl
mov
das
xchg
sub
jge
xchg
out
lret
es
xchg
cmc
pusha
mov
dec
cld
fisubrs
das
lret
and
pminsw
leave
lods
popf
jbe
cmc
push
xchg
mov
sbb
or
push
dec
jmp
fwait
mov
addl
push
or
dec
dec
inc
jne
sub
addr16
mov
dec
mov
mov
mov
fucomi
vpmovmskb
mov
push
jp
mov
cwtl
cmp
jmp
add
ret
fildll
push
mov
adc
clc
fwait
mov
scas
lcall
mov
push
mov
mov
add
pop
jecxz
jp
mov
push
clc
enter
mov
push
loopne
jno
and
mov
bound
pop
jne
mov
and
fstpl
add
sahf
cmp
mov
shll
je
xor
pushf
out
leave
fnsave
pop
clc
sub
push
xchg
xchg
fcompl
push
cwtl
push
aas
call
sahf
in
mov
leave
jbe
pop
out
adc
daa
das
cld
jo
add
cld
jmp
xchg
and
add
or
push
or
insb
adc
pop
iret
add
mov
xchg
sub
mov
aam
cs
outsb
mov
and
imul
stos
push
call
and
dec
xlat
push
lock
mov
xor
and
aam
insl
mov
cld
mov
leave
inc
cld
adc
mov
adc
xor
push
sub
icebp
sub
cld
ret
mov
sub
mov
lods
lea
jb
int3
stos
mov
cmp
lods
xlat
sub
xchg
adc
rolb
test
mov
cmp
daa
sbb
adc
mov
lret
mov
mov
fidivrs
popa
push
jge
add
rcll
pop
test
sahf
leave
dec
add
aad
movsb
ror
pushf
fldt
lods
loopne
add
mov
add
stc
xchg
mov
lds
sti
lret
flds
mov
jns
test
ficompl
lds
mov
pop
jno
test
or
dec
inc
sub
pop
and
dec
loope
or
xlat
and
outsl
pop
pop
iret
enter
jp
int
jecxz
lahf
cmp
fistpl
lcall
xchg
inc
xor
popa
jns
pusha
loopne
inc
mull
push
dec
xchg
mov
lcall
push
dec
in
rep
jne
xor
aaa
outsl
insb
cmpsb
icebp
and
dec
xchg
add
fiadds
ret
or
iret
or
out
push
mov
gs
cld
mov
or
inc
test
mov
popf
xor
notl
cli
and
mov
xor
mov
arpl
popf
cmp
setl
popa
jnp
dec
out
in
out
mov
or
fwait
and
adc
push
fs
cmpsl
sub
adc
mov
cltd
ljmp
test
stos
andl
fsubr
cli
movsl
mov
icebp
in
jge
push
subps
bnd
or
cmp
or
ss
fisttps
shlb
inc
loop
test
adc
call
arpl
aas
out
loop
sub
pop
inc
mov
fwait
inc
xchg
xchg
inc
fcoml
decl
pop
and
pop
sub
pop
mov
xchg
aad
in
push
jo
in
test
sbb
lds
xchg
icebp
and
xor
push
inc
fs
xchg
fsubl
std
adc
aam
inc
nop
outsl
sar
jmp
mov
or
pop
scas
leave
push
mov
inc
addb
cmp
sti
inc
mov
pop
cmp
out
mov
dec
outsb
insl
loop
out
ss
filds
lcall
subb
shlb
push
mov
mov
inc
outsb
sbb
in
dec
inc
jp
aaa
mov
and
testl
fstl
dec
out
adc
mov
cmpl
sub
ljmp
mov
xchg
or
sbb
inc
pop
imul
hlt
cmp
into
cmp
sub
mov
mov
ficoms
xchg
dec
cli
mov
inc
aam
cli
xor
sbb
jle
or
cmpsl
lock
mov
push
add
jle
xchg
and
aas
int
test
icebp
jns
addb
mov
cmpsl
call
cmp
fidivl
mov
fdivrs
mov
fwait
or
leave
pop
add
fidivl
mov
dec
sar
add
sahf
mov
test
cld
cmovb
ret
pop
pop
cwtl
int
clc
pop
push
sbb
push
xor
add
inc
mov
pop
push
and
mov
dec
cmc
inc
add
jle
push
or
mov
pop
or
lock
loope
mov
gs
push
std
sub
jno
dec
pushf
cmpsb
lds
lret
push
cmp
push
jo
or
ret
setle
or
sub
inc
mov
cmpsl
adc
call
add
jo
add
iret
jae
imul
inc
pop
ficoml
rclb
sub
iret
inc
inc
push
xchg
push
xlat
mov
aam
adc
test
dec
cwtl
movsl
xor
sub
add
aad
mov
movsl
cwtl
lret
std
adc
jne
jge
nopl
or
in
dec
imul
imul
inc
dec
sbb
and
idivb
in
leave
jge
aaa
xchg
adc
sbb
and
sbb
sbb
or
jg
jmp
push
jecxz
in
inc
mov
mov
add
push
iret
fldl
jnp
roll
test
mov
imul
mov
pop
mov
fcmovu
in
and
lret
inc
cmp
sub
mov
inc
xlat
aad
add
mov
pop
push
push
add
rolb
inc
call
xor
cmpb
push
inc
iret
inc
sbb
pop
sbb
fstpt
movsl
inc
jmp
sub
and
mov
dec
fdivs
testb
xchg
xlat
scas
lods
or
scas
fidivrl
in
xor
fstl
loop
mov
repz
xchg
inc
mov
test
int3
pop
call
adc
loope
mov
add
ja
lret
add
dec
jnp
push
sbb
pop
repnz
notb
repz
push
imul
lods
movsl
xor
mov
xchg
adc
push
flds
fcmovu
fdivs
inc
push
arpl
jno
stc
in
in
mov
or
lods
cs
lods
jp
or
cmp
or
andl
rorb
and
xchg
je
jle
ret
sub
jg
pop
mov
inc
adc
sub
and
or
out
das
pop
jbe
cmp
mov
cld
inc
inc
dec
insl
mov
add
push
adc
mov
cmc
bound
popa
dec
decl
out
test
sti
pop
cld
pushl
xor
or
out
scas
imul
in
and
jg
xlat
cld
mov
mov
scas
lods
xor
sub
mov
les
push
sbb
xor
sbb
adc
int
jle
in
clc
negb
lods
mov
sahf
std
pop
jnp
cli
js
cli
movsb
lret
test
loope
adc
or
popf
mov
xchg
iret
ficoms
ljmp
jg
push
dec
push
xor
sub
inc
jbe
dec
cwtl
jle
movsb
andb
fimuls
clc
addr16
xorb
test
mov
xor
gs
mov
mov
adc
pop
cmp
adc
and
xchg
subb
insl
mov
adc
dec
mov
jmp
inc
sbb
adc
rolb
sbb
test
movsl
outsb
or
mov
xchg
or
rol
pop
jle
and
aam
push
out
or
aas
mov
mov
dec
sti
mov
outsb
jae
sbb
inc
sbb
cmpl
rorl
ret
adc
addr16
cmp
pop
and
out
sub
and
test
repz
jle
lahf
nop
adc
inc
lods
jno
ja
lods
and
fcoms
inc
push
scas
and
je
outsl
fsubr
cmp
cmpsb
arpl
mov
push
fnstsw
jl
daa
stos
mov
jno
icebp
arpl
stc
test
cs
pop
xorps
loop
xchg
fmul
dec
inc
push
ljmp
mov
jecxz
addr16
cmp
mov
pop
xchg
mov
push
repz
leave
or
cmp
push
cmc
divl
push
ret
push
fldl
fmuls
mov
jl
ficomps
lea
xchg
rorl
outsl
enter
dec
aam
add
inc
test
int3
inc
rclb
pop
icebp
mov
fwait
xor
leave
add
fimuls
movsb
mov
aad
and
sti
pop
test
aad
inc
xor
je
sbb
mov
call
sub
jp
sub
jne
or
in
sahf
icebp
mov
push
rcr
imul
or
stos
inc
call
dec
mov
xchg
xchg
ss
in
push
cmp
in
shlb
dec
incb
mov
pop
cmpb
dec
dec
outsl
sbb
adc
bound
xchg
xor
xchg
pop
dec
rcll
xor
insl
mov
or
int3
pop
xchg
out
jae
lods
int3
ror
jno
fadds
cmp
mov
inc
das
decl
adc
push
dec
sbb
insl
adc
pop
push
jo
sbb
add
pop
mov
mov
rol
dec
das
mov
es
cmp
es
push
and
popa
jle
sbb
jp
leave
das
add
mov
sub
push
push
ret
clc
stos
arpl
add
xor
cs
push
mov
incl
mov
and
es
or
jnp
loope
cmp
outsb
sbb
jle
int
push
in
pop
imul
push
test
aas
jae
mov
sub
daa
clc
push
sbb
mov
adc
mov
nop
insb
or
shl
loope
js
push
cli
adc
pusha
xchg
xor
mov
xor
testl
in
iret
dec
add
dec
scas
insb
test
mov
fdivrl
sub
daa
mov
movsb
mulb
cltd
xchg
repnz
daa
add
aaa
out
cmpsb
decl
aas
push
incl
movsl
cmc
pop
push
ret
mov
fistl
xchg
jg
mov
sbb
scas
mov
ds
xor
sub
mov
out
add
xchg
lods
insl
adc
popa
adc
into
scas
mov
pop
lock
ja
fs
ret
and
loopne
sbb
vdivpd
cmovle
push
sub
pop
adcl
add
sbb
movsb
loop
pop
in
push
ret
leave
fcompl
or
dec
aad
xchg
jle
pop
xchg
pop
lds
mov
scas
insb
push
sahf
in
jmp
imul
in
cmc
pop
fmulp
mov
mov
sub
fstpt
js
add
xor
mov
iret
test
aam
jne
out
addr16
cmc
inc
mov
inc
loope
es
xchg
insl
inc
xchg
subb
dec
pop
aad
lock
inc
dec
push
xchg
and
mov
aas
push
je
dec
filds
xchg
js
dec
and
mov
rol
mov
pusha
and
das
jns
xor
pop
mov
insb
pop
adc
fs
ljmp
lds
inc
mov
xchg
les
mov
xchg
mov
pop
xor
jge
dec
fcmovne
fsubl
or
stc
adc
jmp
add
xchg
leave
xor
mov
fdivl
sub
xchg
cwtl
push
mov
out
add
sbb
sbb
xchg
jo
cmc
loopne
add
cmpsl
stc
std
pop
mov
das
out
xchg
push
xchg
out
lret
fcoml
dec
fldl
mov
das
jno
setne
incb
ret
adc
fisubl
mov
jbe
jae
sbb
cs
lock
cmp
fnstsw
mov
sub
mov
fwait
and
or
aas
aam
mov
mov
jno
push
arpl
jmp
inc
imul
scas
pop
pop
sub
or
bound
call
scas
mov
pop
xchg
stos
fcoml
jnp
xchg
jmp
pop
addr16
xchg
xchg
push
into
mov
ds
subl
test
dec
imul
jo
daa
xor
lret
sub
imul
mov
std
into
rcr
jmp
mov
dec
insb
push
ds
sub
jmp
jbe
and
les
jo
popf
fistps
cmpb
jbe
mov
mov
fdivr
sbb
or
or
mov
vpshuflw
shlb
mov
fisttps
dec
push
add
sbb
sub
xor
rcr
into
push
xor
int
sbb
mov
data16
and
xchg
cmpsb
pop
outsl
scas
add
nop
jecxz
scas
cmp
fstl
and
out
outsl
iret
gs
adc
out
cmc
cli
cs
mov
cltd
add
mov
inc
pop
sub
inc
shl
dec
pop
or
jne
ret
push
sub
stos
inc
xor
jns
xchg
push
lret
sar
jecxz
fldenv
cmpsb
lods
jecxz
push
subb
push
xchg
fcompl
movsl
adc
xchg
aad
imul
icebp
mov
mov
sub
icebp
pop
mov
mov
loope
jne
adc
mov
js
xor
inc
sub
mul
mov
sub
aad
cmp
adc
movsl
into
loop
jo
add
mov
in
xchg
outsl
iret
pop
add
addr16
sbb
jmp
test
pop
stos
fsubrs
pop
add
pop
jle
mov
mov
pop
test
aas
in
scas
pop
pop
js
notb
ffree
icebp
stc
scas
xor
sbb
int
mov
jmp
daa
rcrl
ret
add
aas
out
mov
fcmovb
pop
mov
add
sbb
inc
and
ljmp
aad
jl
fcoml
divl
xor
xor
setge
xchg
insb
cmp
fildll
jp
push
add
pop
mov
aad
sahf
sbb
andl
orb
mov
and
ja
in
jno
in
in
sub
jmp
jno
or
pop
mov
jnp
inc
lret
xchg
stc
std
pop
add
repz
add
jne
rcr
cli
mov
stc
cmp
test
fs
mov
xchg
clc
cltd
xchg
xor
filds
sbb
popf
dec
dec
ljmp
dec
jmp
adc
xor
xor
jae
xchg
gs
aas
cld
mov
aad
pushf
mov
arpl
repz
movsl
dec
cmp
xchg
pop
mov
cs
insl
jae
gs
cmpsl
stos
add
or
fdivl
out
sub
aas
shlb
xchg
adc
insl
insb
ljmp
lcall
xchg
mov
sbb
mov
dec
push
push
mov
dec
repz
xchg
mov
mov
fwait
cmp
fisubs
pop
xchg
ja
ret
mov
lock
out
imul
add
add
jle
fcompl
push
sbb
dec
cmp
into
mulb
and
xchg
xchg
add
loopne
das
fcoms
shr
insb
fidivl
leave
fstpl
push
pop
adc
adc
mov
sti
rcll
ljmp
enter
loopne
mov
into
inc
movsl
xor
lods
dec
call
addl
mull
add
out
pop
mov
out
push
dec
mov
add
add
xchg
sub
xor
push
orb
xor
fists
stos
adc
add
xchg
lret
ret
sti
xchg
sub
sub
mov
repz
je
xor
add
jbe
sub
and
cwtl
jno
or
ffreep
inc
jmp
ljmp
rcr
stos
loopne
sub
lock
imul
xor
mov
shl
mov
shrb
add
mov
adc
push
sub
test
test
jecxz
stc
repnz
or
ret
jg
inc
push
das
addb
mov
arpl
idivb
hlt
scas
cltd
gs
ja
add
es
test
fnstenv
sub
rorl
ret
xor
pushf
shlb
mov
and
mov
mov
mov
jecxz
clc
test
jle
cli
sub
dec
call
mov
sub
in
lods
out
xor
imul
push
and
pop
xchg
add
jb
push
sub
sub
sub
dec
cwtl
ds
mov
xchg
enter
adc
ret
nop
test
mov
xor
lock
test
or
jecxz
and
fistps
adc
aaa
fadds
cmpsb
sbbb
jge
push
add
mov
scas
pop
sbb
xor
jge
mov
push
movsl
xor
and
fcoms
ja
mov
mov
in
loope
pop
aaa
jle
call
iret
outsl
cmpsl
shll
subb
seto
mov
call
inc
push
fsubr
arpl
clc
enter
es
push
lods
gs
pop
cmpl
push
mov
jge
sub
lods
jbe
cmp
xor
bound
jae
outsl
sbb
sub
mov
fldl
adc
subl
xchg
push
xchg
adc
mov
pop
cltd
adc
pop
int
icebp
or
fnsave
pusha
test
push
xchg
or
pusha
inc
lret
pop
xchg
pop
rcl
adc
mov
sub
faddl
pop
mov
pushf
test
or
lock
inc
mov
xchg
adc
xchg
push
xchg
std
out
test
inc
add
ret
cld
pop
gs
ficompl
repnz
stos
pop
mov
sbb
mov
mov
fwait
ret
ds
shrb
mov
std
inc
push
in
lahf
sub
dec
ss
ret
sub
bound
aaa
loop
clc
cs
push
int
push
adc
push
rcrl
pop
sub
arpl
inc
sub
inc
lea
scas
loopne
leave
out
das
jno
push
jae
call
pop
jmp
jbe
jo
inc
shll
mov
fcompl
pop
add
vpcmpeqw
xlat
shl
addl
ret
lret
dec
js
push
adc
add
xchg
and
pmulhuw
lds
fisubl
jne
sahf
sbb
popa
fmull
outsb
or
ss
in
mov
aad
movsl
mov
imul
mov
fidivs
or
mov
mov
test
loope
xchg
push
cs
mov
cwtl
inc
loopne
xchg
dec
cld
pop
lock
imul
inc
pop
mov
roll
das
and
or
lret
adc
sbb
push
aad
insb
arpl
addb
gs
sbb
dec
mov
insl
cwtl
xchg
pop
pop
sbbl
or
clc
pop
mov
push
mov
aam
aam
dec
stos
adc
pusha
sar
mov
fdiv
stos
out
daa
insl
clc
in
rcr
jbe
dec
stc
insb
loop
cmp
xor
js
mov
fsubrl
lahf
cmp
movsb
inc
add
cwtl
push
pop
mov
leave
pop
push
in
clc
lods
push
clc
sub
loope
dec
or
ja
sbb
cs
mov
rolb
jo
mov
dec
mov
cmp
loopne
sti
aad
dec
in
lret
mov
stos
pop
dec
and
sbb
shrb
jge
in
mov
jns
lds
dec
jo
in
jle
jg
leave
xor
adc
aas
daa
mov
push
jae
fwait
push
fildl
ret
test
sbb
loop
or
mov
push
xlat
pusha
notb
mov
jnp
es
dec
dec
jle
xor
cltd
daa
insb
pop
sub
bound
sub
xchg
pop
and
test
in
ret
inc
les
stos
movsb
icebp
xchg
push
inc
lcall
adc
xor
pop
mov
mov
push
addl
push
xor
adc
fisubl
ficoml
push
jns
xchg
push
jp
test
test
xor
xor
push
ja
inc
lretw
scas
clc
loopne
mov
xchg
hlt
adc
shrb
pop
mov
dec
iret
cmc
cmp
jmp
push
inc
sbb
dec
mov
stos
xchg
pop
push
cld
mov
add
jno
inc
mov
leave
sarb
push
fistps
cwtl
shlb
loope
int
mov
xchg
cmp
xchg
por
mov
lret
and
hlt
mov
mov
and
jns
sbb
sub
jmp
mov
sahf
fs
inc
add
dec
or
mov
outsl
xorb
xchg
jbe
mov
cli
lods
lret
int
data16
jmp
inc
in
mov
sub
notl
call
jle
repz
int3
xchg
push
cmc
cmp
mov
loop
dec
lret
or
out
mov
xchg
imul
mov
xlat
xor
jl
mov
mov
or
out
add
mov
sub
mov
sub
outsb
lcall
dec
fmuls
pop
jb
pop
pop
jne
hlt
jg
cmp
xchg
jne
mov
repz
and
dec
aad
sub
lea
cmpb
js
jmp
out
pop
and
push
mov
jecxz
lcall
cltd
mov
stc
sub
movl
fs
pop
add
cmp
loope
jmp
rol
mov
lock
and
inc
test
jg
aam
and
xchg
sbb
sub
rcll
mov
test
pop
daa
cmp
jnp
das
cmc
xchg
scas
pop
xor
ss
push
adc
enter
sti
daa
inc
xchg
mov
imul
jl
lds
inc
les
add
or
xor
movsl
jmp
sbb
lret
xor
mov
add
inc
dec
adc
sbb
or
out
in
les
es
sbb
aas
mov
sub
inc
or
ds
fldcw
shrb
rcll
pop
push
push
inc
sub
int
jb
fimuls
sbbb
mov
xchg
in
jbe
pop
push
inc
jge
push
fidivs
push
rcrl
inc
int3
leave
ja
xor
sbb
and
ja
dec
les
ja
and
add
pushf
nop
inc
or
mov
dec
xor
out
int
cmpsl
push
xor
push
push
outsb
repz
sub
test
xchg
xor
dec
scas
test
test
lahf
aaa
xor
mov
sbb
xchg
and
xor
pop
aas
adc
in
loope
jmp
ficoml
rcrb
pop
and
inc
jle
cmp
pop
nop
setnp
jo
shl
in
pop
add
add
cmpl
xor
push
dec
or
add
mov
lods
cmp
popa
int
xchg
out
clc
jne
adc
in
lds
cmpsl
ljmp
pop
shl
fwait
test
icebp
mov
cmp
xrelease
sti
incl
mov
sub
sbb
cmp
addr16
adc
mov
stos
outsl
sub
idivb
pop
cld
int
insl
sbb
in
imul
cmpsb
mov
mov
add
and
pop
push
das
inc
fxch
std
and
mov
test
xchg
mov
jmp
mov
inc
aam
sti
or
scas
xor
pop
sub
pop
jmp
adc
insb
ds
subl
jmp
jne
gs
mov
jno
push
and
daa
adc
mov
mov
repnz
jbe
call
fmuls
stc
fisubs
xchg
imul
addl
or
sbbl
mov
ficompl
cmp
lea
mov
add
repnz
outsl
fsubr
or
jne
outsl
pop
test
push
lret
pop
xchg
mov
idivl
cmp
push
std
aad
sbb
adc
mov
lret
lea
movsb
int
xor
sub
xchg
adc
movsl
imul
push
arpl
mov
pop
cmp
ficompl
xor
mov
aad
adc
jbe
or
cmp
mov
shll
add
xchg
or
lods
icebp
xchg
and
call
adc
pop
cmp
pop
rcll
adc
int
sbb
xchg
aam
es
mov
fnsave
inc
mov
faddp
ljmp
popa
push
lods
ret
pop
inc
cltd
divb
xchg
in
xor
cltd
and
movsb
icebp
jecxz
ret
pop
xchg
and
jbe
sub
cmp
test
mov
mov
xor
sub
xor
xchg
imul
fs
insl
shrb
lret
add
jne
pop
into
push
adc
shrb
lret
clc
xor
movsl
dec
mov
mov
jbe
add
je
out
out
stos
mov
ret
fnstcw
mov
pop
mov
test
xchg
daa
rorb
push
cmpsb
push
out
and
pushf
orb
adcb
push
ret
cmp
xor
pop
jnp
jmp
dec
sbb
aad
xor
scas
aaa
repz
adc
iret
es
dec
push
into
mov
sub
jecxz
js
ret
dec
scas
mov
stos
add
out
inc
push
bound
and
fistpl
xlat
stc
dec
adc
jmp
sbb
repz
dec
mov
mov
push
fnstcw
pop
sbb
lcall
testl
out
lock
pop
xor
adc
sub
mov
cmp
mov
pop
out
mov
push
cli
add
scas
push
out
test
cwtl
jnp
insl
cmp
ficompl
stos
mov
gs
add
shrl
dec
jne
mov
adc
dec
inc
pop
pusha
stc
sub
or
jle
add
lea
xchg
out
xor
es
pop
jo
add
lds
pop
jbe
mov
sbb
sbb
test
out
xchg
movsb
rcr
lret
in
push
xchg
movl
inc
pop
mov
mov
cmpsb
sbb
sub
add
outsb
repnz
push
aad
cmp
lcall
out
pop
inc
xor
and
xor
inc
jmp
push
add
lcall
movl
mov
lret
scas
add
outsb
dec
mov
test
loopne
sbb
xchg
ficomps
insb
test
dec
jg
adc
fcmovnbe
stos
outsb
fisttpl
mov
mov
jnp
or
jnp
nop
push
dec
pop
aaa
pop
pop
mov
les
xchg
cmc
mulb
mov
push
addr16
in
jne
mov
cwtl
dec
and
imul
mov
arpl
lock
inc
aad
sbb
bound
sbb
imul
lods
lret
dec
mov
sub
mov
sti
mov
shrb
sahf
test
add
test
dec
mov
daa
cmp
stos
push
adc
sbb
dec
lret
pop
inc
daa
popa
inc
sub
push
xchg
and
jns
sarb
cmc
push
ds
xor
sbb
push
mov
sbb
dec
sub
in
add
cmc
outsb
dec
testl
outsb
cmp
data16
sbb
push
push
call
pop
pusha
inc
push
add
sub
xchg
aad
lods
inc
shr
rcll
jo
push
inc
and
pusha
clc
cmpsb
mov
int
pop
into
out
nop
imul
ss
jno
push
adc
mov
out
xchg
fcomps
sub
mov
mov
lds
insl
rol
les
jb
sub
fiadds
in
inc
push
test
jnp
jg
add
mov
in
dec
pop
dec
pop
or
mov
mov
repnz
mov
mov
cmp
dec
lea
sarl
pop
sahf
stos
fwait
mov
mov
sbbb
es
test
dec
lock
adcl
cmp
popl
incb
js
js
popf
sub
addr16
cmp
ret
data16
xchg
cmp
test
lcall
pop
inc
mov
mov
fistl
inc
nop
insl
jle
fwait
sub
popa
inc
gs
aad
jbe
lods
add
mov
dec
out
cmc
mov
pop
jno
cs
sti
out
xchg
inc
sbb
push
cmp
stc
jo
add
mov
sub
sahf
xchg
xlat
mov
roll
ja
aaa
fldenv
jecxz
jg
insl
aam
loopne
adc
sbb
pusha
adc
mov
stc
adc
push
cmp
xchg
jnp
fs
push
stos
jle
add
mov
mov
call
cs
repz
or
push
mov
mov
popa
bound
jmp
rol
shrb
push
adc
mov
and
mov
ds
push
imul
xchg
push
cmp
mov
cltd
shll
fwait
xchg
mov
or
adc
shlb
mov
sub
ss
push
add
lods
icebp
call
inc
jmp
pop
pop
jl
addl
pop
popf
sahf
mov
push
movsb
adc
cmpsb
or
fnstcw
aam
add
cld
scas
xchg
out
sub
dec
pushf
loope
mov
sub
mov
dec
mov
adc
mov
arpl
push
or
add
sub
xchg
cmp
setne
lcall
clc
in
test
sbb
or
mov
clc
fnstsw
xchg
cmp
outsb
sub
xor
pop
sub
daa
test
pop
jle
jl
jl
pusha
stos
sbb
push
ss
push
nop
push
call
mov
sub
xchg
stos
cmp
or
test
mov
push
test
andb
clc
sldt
gs
xor
or
mov
jb
mov
mov
and
cltd
mov
pop
sbb
enter
test
dec
ffreep
dec
faddl
push
xchg
ficoms
leave
pop
push
ret
dec
sahf
pop
adc
xor
mov
or
cmp
or
mov
sub
cs
cwtl
pop
fmuls
adc
cmp
sti
aas
out
add
and
jl
adc
xlat
jns
mov
fisubrl
into
jp
fmul
sti
daa
lock
sub
jp
rolb
and
pop
push
lret
mov
jnp
pop
adc
enter
push
push
add
and
inc
push
decl
dec
lret
xchg
pusha
dec
imul
cmc
ret
or
mov
mov
mov
pop
push
in
in
xlat
xchg
cmp
daa
cmp
mov
xchg
cmp
xchg
adc
mov
movsl
mov
mov
addl
xor
xchg
dec
mov
outsb
jb
sub
xchg
loop
in
loope
jo
and
or
in
shl
fimull
dec
sbb
and
rolb
mov
scas
dec
dec
adc
fcoml
pusha
cmpsl
pop
sbb
and
les
add
and
jns
mov
inc
add
aaa
lods
loop
out
ja
jg
push
rcl
or
or
int3
test
mov
testb
pushf
push
cmp
push
out
push
pop
cwtl
es
inc
pop
lods
pop
mov
adc
ljmp
xor
out
cwtl
fsub
gs
pop
inc
inc
cltd
inc
mov
mov
jmp
cmpsb
inc
outsl
cmp
xor
addr16
and
in
dec
xchg
lret
shlb
xor
cmp
xor
mov
push
js
or
cmp
loopew
and
daa
adc
iret
jnp
test
and
add
jnp
mov
ljmp
mov
xchg
popa
sub
dec
mov
hlt
nop
ja
insb
adc
xchg
rorl
xchg
cwtl
psrlw
sbb
lret
mov
les
pop
xor
jnp
inc
cmc
or
setne
push
inc
pop
pop
dec
repz
sarb
inc
mov
testb
addb
dec
lret
shll
xchg
nop
adc
and
adc
jmp
inc
js
pop
test
out
push
sub
lret
push
sti
mov
in
jmp
push
cmp
inc
test
inc
sbb
scas
cmp
out
shrl
lahf
repz
inc
push
dec
ret
mov
push
aam
mov
xor
mov
stc
stos
and
xor
xor
stc
ja
cmpsl
lret
loop
mov
sbb
mov
lods
inc
lret
jo
push
push
icebp
lds
and
fnsave
sbb
dec
ret
sbb
int
xor
jecxz
xor
jge
pop
add
push
out
adc
xor
pushf
mov
daa
bound
scas
and
mov
aaa
lods
push
adc
sub
bnd
out
test
inc
xchg
adc
fwait
outsb
jmp
lret
push
fisubrl
andb
ja
mov
mov
test
repnz
xor
and
dec
inc
mulb
and
adc
in
inc
xlat
shrb
shlb
dec
fsubp
sbb
sub
xchg
adc
sbbl
sub
out
clc
push
push
mov
mov
pop
jno
mov
adc
sub
pop
jbe
icebp
out
fwait
cmp
jp
mov
xlat
stos
mov
pushf
xchg
xor
mov
cmpsb
pop
test
mov
or
pop
dec
ss
mov
push
dec
or
insb
pop
pusha
lods
aad
xchg
pop
out
test
jle
sbb
in
sbbl
mov
dec
fistl
je
fcmove
cld
dec
dec
jns
lcall
pand
add
int3
cli
fldt
lods
jecxz
jg
out
pop
in
cmpb
aad
icebp
mov
pop
lods
je
dec
in
inc
push
dec
ljmp
mov
xor
lret
lret
dec
fwait
aas
xlat
mov
inc
sbb
mov
mov
pop
jge
inc
hlt
ret
cmp
xchg
xor
inc
push
inc
and
cmp
cwtl
cmp
fwait
rcr
gs
jno
arpl
cmp
dec
sbb
xchg
mov
fldcw
cs
gs
jae
testb
shlb
or
bound
jge
test
xchg
sbb
jo
hlt
pop
xor
cmpsl
mov
sub
sub
lock
fwait
dec
fsubrl
std
test
sbb
push
repz
insb
popf
push
inc
shll
repnz
cmpsb
aas
jne
pushf
dec
imul
or
push
add
and
out
lret
mov
repnz
pushl
leave
outsl
xor
loope
jmp
call
adc
cmp
push
pop
push
or
rcrl
add
popa
jp
sbb
aaa
cmpsl
mov
jne
addl
fildl
inc
push
notb
pop
and
jge
adc
fwait
mov
or
dec
adc
js
mov
pop
mov
cwtl
jl
jo
out
inc
cmp
mov
jmp
cmp
imul
xchg
fildll
adc
hlt
mov
aaa
lods
daa
add
mov
in
jo
xlat
dec
scas
and
fnsave
scas
push
lods
das
arpl
xchg
frndint
loopne
out
cs
lcall
jb
cmpl
inc
sahf
loop
fistpll
icebp
dec
cmp
imul
or
xlat
aaa
int3
popf
int
int
scas
push
jno
cmp
xorb
and
cmp
pop
fwait
cld
sbb
pop
pop
mov
xchg
jmpw
push
bound
adc
add
cmp
fistps
test
mov
popf
lock
pop
fs
xlat
aam
pusha
cmp
cmp
mov
or
jl
outsl
mov
xchg
loop
mov
jo
shll
push
push
loope
jmp
test
addb
addr16
jge
xor
addl
sbb
stc
adc
cmp
iret
out
rcrl
in
adc
mov
je
xorl
pop
xchg
test
mov
es
sub
jns
loope
lret
push
add
xchg
mov
lea
shrb
ret
insl
pushf
push
push
lds
cld
fwait
or
sbb
dec
mov
xor
xchg
sbb
push
push
ljmp
shl
push
add
sub
inc
jnp
xor
fbld
rclb
cmpl
mov
adc
outsl
loopne
out
dec
cwtl
and
jp
and
cmp
pop
iret
ljmp
clc
adc
adc
xchg
fs
cld
insl
or
add
push
nop
fnstcw
loop
clc
sbb
test
jae
int3
or
sbb
repnz
icebp
js
jle
sbb
mov
sbbl
dec
movl
rcll
xchg
aam
jmp
shlb
lret
repnz
push
das
xor
mov
inc
cmpsl
fcomps
pop
add
negb
pop
shrb
jae
xor
cmp
add
push
fadd
add
dec
adc
jne
pop
adc
leave
and
frstor
aad
or
dec
xchg
mov
stos
pusha
sbb
data16
jnp
xchg
mov
cmp
shlb
push
and
loop
ret
mov
mov
mov
movsb
notl
mov
jle
scas
adc
mov
lods
cmp
pop
sbb
inc
push
std
xchg
stc
cwtl
hlt
scas
aas
and
dec
out
in
aaa
fcompl
jo
push
les
loopne
mov
sbb
dec
jne
pop
mov
xchg
push
loope
and
jmp
dec
int
fdivs
fcom
loop
test
test
dec
jg
xchg
dec
pop
mov
std
ljmp
cwtl
mov
popf
cmp
and
lcall
add
inc
pusha
mov
or
push
ds
jns
sub
push
jmp
inc
pop
repz
mov
outsl
rcr
loop
insl
fidivrl
add
jge
cwtl
push
and
insl
sti
pop
inc
stos
iret
adc
adc
or
out
loopne
pop
cmp
xor
div
sub
cmpsb
repnz
cmp
push
hlt
int3
and
lods
enter
push
mov
ret
mov
or
adc
lahf
cmp
ja,pt
push
jle,pn
outsb
insl
sti
test
addl
fsubs
fistps
out
cmp
push
lcall
gs
adc
xchg
inc
or
shrb
out
lods
lret
xchg
inc
add
mov
jo
fcomp
movd
mov
add
mov
bound
jmp
cmc
std
stc
pusha
pop
mov
add
bound
aaa
sub
sbb
in
inc
xor
movsl
pop
cmp
aaa
fcom
ja
push
cmp
lds
fisubrl
out
push
test
je
xor
xor
mov
xchg
fcmovbe
xchg
jo
adc
roll
jns
mov
jb
ljmp
xchg
push
xchg
add
sbb
incl
out
or
movsb
lcall
test
movsb
gs
sahf
dec
sub
leave
leave
insl
mov
mov
je
and
and
in
jne
in
and
aas
shlb
jg
or
and
test
push
mov
outsb
or
into
test
cmp
in
inc
out
push
xchg
fwait
aaa
sbb
std
push
xchg
mov
jns
test
mov
fmuls
adc
jno
cwtl
loope
jp
mov
and
incb
xchg
sub
jno
out
pusha
inc
lret
push
mov
int3
iret
mov
aam
cmp
inc
mov
mov
iret
sub
fiaddl
test
pusha
sub
mov
mov
xchg
fdivrs
inc
ret
outsb
aas
mov
xor
shlb
and
sbb
sbb
sbb
cs
shrb
adc
jns
cmp
mov
leave
jg
cmpb
sub
push
gs
lahf
dec
mov
fisttpl
jns
pop
lret
sbb
sbb
push
fwait
xor
xor
inc
xchg
call
mov
push
lods
sub
lock
jno
fs
test
xchg
lret
loope
push
jle
cmp
roll
mov
fcoms
pop
jo
subl
das
sbb
iret
cld
xchg
dec
mov
adc
add
subl
add
dec
and
push
jb
daa
or
mov
fimull
jno
bnd
stos
add
shr
out
push
repnz
pop
cmp
dec
call
cmpsl
dec
les
sahf
std
ja
or
nop
shll
mov
fdivrl
sti
push
inc
movsl
cmp
divb
aas
sub
test
mov
flds
stos
lcall
outsb
imul
mov
movsb
mov
outsb
mov
pushf
es
jmp
dec
jb
cmp
pop
adc
pop
or
shlb
fdivs
pop
and
or
mov
or
mov
or
add
sub
movsb
cmpsl
push
sub
adc
xor
jbe
pop
and
out
pop
lea
mov
inc
out
addr16
fs
adc
xor
sbb
fsts
shll
add
out
mov
cmpsl
ds
inc
or
adc
jmp
xchg
inc
and
mov
push
sahf
sbb
cmp
inc
add
scas
sbb
mov
pop
icebp
adc
out
xchg
inc
push
repz
jg
dec
daa
sub
mov
aaa
shlb
inc
data16
popa
xchg
sub
out
ss
mov
jbe
les
repz
lret
pop
add
pop
add
sbb
out
inc
enter
fsubs
repz
enter
jp
add
xchg
add
in
lds
lret
mov
xorl
mov
adc
mov
loop
scas
push
xor
cmpsb
mov
push
cmpl
sbb
loop
shr
sub
mov
mov
dec
inc
jp
and
int
xchg
cmp
inc
jecxz
adc
pop
cli
jle
push
cmc
call
ss
nop
push
pop
movsb
stos
or
insl
cmp
xchg
outsl
insb
mov
pop
mov
and
inc
int
aaa
jns
add
inc
sub
enter
hlt
lret
pop
xchg
and
bound
dec
outsb
mov
mov
out
out
mov
pop
pop
scas
mov
outsl
icebp
inc
xorl
mov
sahf
xchg
mov
dec
nop
ja
xchg
xor
sti
push
rorl
mov
sub
fsubl
pop
push
ja
fxch
addl
aad
cli
out
inc
gs
int
shl
adc
outsl
sbb
out
movsl
mov
in
ret
imul
int3
inc
and
jb
rclb
jnp,pn
lret
int
in
aam
mov
jmp
jg
aam
sbb
out
in
je
lret
push
fidivrl
mov
stc
pushf
or
add
stos
mov
les
ret
test
ret
pop
mov
jne
or
sti
sbb
xchg
cmp
enter
mov
dec
push
test
and
fiadds
sub
sub
es
sbb
movsb
inc
addr16
mov
iret
xor
push
jb
pop
cld
jecxz
pop
lea
dec
insl
xor
test
inc
nop
cmp
shrl
ja
push
adc
ret
movsl
inc
mov
mov
cmp
pop
sub
je
adc
dec
sub
arpl
lahf
fst
mov
cmp
aad
les
push
fwait
pop
cmp
adc
out
jb
pop
test
push
sahf
stos
push
pop
repz
dec
inc
sbb
and
add
nop
daa
das
mov
mov
cmp
shrl
inc
sbb
ljmp
xchg
lret
ja
mov
pushf
mov
loope
test
add
jecxz
stos
cmp
movsl
mov
in
mov
jl
jmp
jmp
inc
inc
pop
ds
hlt
jbe
enter
jns
sbb
addl
mov
lret
insb
jns
jecxz
push
cmpsb
cs
add
sbb
cli
stos
bound
sarb
ror
mov
add
cmp
mov
fildll
jbe
fucomi
jp
iret
incl
inc
lods
sbb
ja
or
aas
xor
test
push
insb
sub
aaa
jl
sub
push
fdivl
mov
mov
daa
cmp
mov
dec
repz
pop
cs
mov
lcall
mov
inc
movsl
fiaddl
or
jbe
add
je
ds
mov
cmpsl
adc
pop
cmp
push
sbb
aad
imul
outsl
push
pushf
pop
or
dec
mov
xchg
das
xor
das
jbe
lret
pop
shl
loopne
xchg
out
lock
cld
sbb
pop
and
mov
test
addr16
aas
push
mov
pushf
sahf
cmc
insl
push
ret
push
xor
and
enter
cmpsb
push
imul
pop
shr
mov
adc
sbb
or
test
out
sbb
cmc
leave
mov
sbb
test
pop
xchg
daa
fsubrs
addr16
fnsave
and
dec
mov
push
sahf
inc
adcb
incb
mov
fadds
fwait
mov
call
gs
mov
enter
dec
bsf
lahf
jl
enter
inc
sbb
sbb
and
mov
loopne
pop
call
test
cmp
mov
add
sub
fs
mov
cwtl
dec
jno
shl
imul
inc
inc
mov
cmp
add
clc
aaa
arpl
mov
cs
dec
mov
orl
or
push
sti
cmp
xor
jne
jg
bound
daa
push
and
cmc
in
loope
mov
cmp
aaa
mov
xchg
mov
outsb
mov
push
fimull
cwtl
std
sub
std
imul
jg
scas
arpl
mov
sub
out
loopne
and
xchg
push
cmp
sub
lret
imul
fstps
test
rcr
dec
mov
fmulp
aad
in
and
cmp
movl
inc
cmpsl
or
pop
outsb
sub
cmp
rorb
mov
pop
std
pop
fsubp
popf
xor
pop
sub
aas
adc
xor
movsl
dec
dec
mov
pop
push
mov
lea
mov
sub
lret
adc
push
lods
pusha
push
push
adc
pop
out
loop
push
cmc
dec
inc
mov
xchg
repz
jae
mov
xchg
mov
int
ret
lcall
rorb
push
mov
jg
jmp
mov
movsb
jp
xor
mov
sysenter
pop
jo
fs
cs
cmc
mov
fcmovbe
icebp
xchg
cmp
adc
xchg
xchg
fs
mov
clc
stc
sub
jge
fsubrl
popa
in
fisttpl
inc
cmpsl
call
mov
sub
imul
add
gs
cmpsb
ret
stos
fdivs
repz
xor
fisubl
out
loope
in
mov
dec
adc
cltd
imul
pop
dec
mov
into
je
inc
push
jge
lret
mov
xchg
mov
outsl
pop
jp
int
push
dec
leave
outsl
inc
dec
sbb
out
hlt
jae
adc
data16
repnz
stc
outsl
loop
pop
mov
sbb
mov
mov
mov
loope
jbe
cmpl
mov
lret
into
cmp
je
bound
xchg
jp
movsl
js
loop
jnp
and
daa
jle
lds
subb
test
aam
clc
out
xor
mov
push
in
inc
mov
mov
inc
subl
jb
leave
xchg
adc
add
subb
lock
loop
dec
add
xorb
push
rcrl
fwait
and
sbb
ss
je
jmp
cs
out
jne
popf
fidivl
rcll
mov
jmp
lds
xchg
idivb
jge
add
sub
xchg
cld
fdivl
add
and
cmp
and
lahf
pop
and
test
out
pop
arpl
ret
cs
cmp
arpl
sub
push
cmp
test
sbb
mov
arpl
test
js
sub
int
outsl
add
out
pop
push
inc
fstpt
fdivrs
mov
fstl
dec
cs
sti
mov
sbb
xor
je
ja
in
orl
jecxz
xor
xchg
mov
test
imul
sub
sarl
mov
xchg
add
mov
sbb
sub
in
cwtl
push
pop
inc
or
cs
jp
mov
sbb
sub
loop
dec
in
add
dec
sarb
popl
adcl
mov
mov
jmp
xor
dec
dec
or
mov
xchg
push
or
mov
and
mov
hlt
arpl
pop
pop
test
xchg
mov
test
cmp
insl
mov
sbb
popf
arpl
xor
in
jg
es
or
add
cmp
jg
test
mov
jge
aad
mov
std
cs
mov
or
mov
xor
movl
pop
push
jb
lods
sub
sub
adc
sarb
fists
and
cwtl
mov
and
xor
popa
cmp
jecxz
push
or
cmp
adc
pusha
jb
jmp
jno
xchg
sub
scas
adcb
movsb
movsb
enter
mov
xor
adc
enter
jae
loop
aad
nop
in
and
jb
adc
inc
loope
adc
push
pop
clc
int
push
xlat
ss
pop
sbb
dec
inc
lods
bound
dec
cmc
cmp
inc
test
inc
shlb
sahf
lods
popf
jle
inc
jg
jb
lods
push
std
sub
in
xor
popa
mov
incb
cld
sub
aad
ror
pop
clc
popf
add
mov
adc
push
lea
daa
inc
sbbb
sub
inc
add
mov
and
pop
fwait
pop
stos
insb
jo
dec
insl
into
or
xchg
xor
std
outsl
inc
mov
leave
cmp
push
push
add
xchg
dec
add
or
push
pushf
sub
aaa
es
inc
or
pop
pop
rorl
and
out
mov
data16
xchg
jo
cmc
gs
loope
xchg
push
jbe
pusha
dec
xchg
cltd
sarl
lcall
outsl
cmp
inc
popa
lds
rcrb
mov
ret
mov
and
shll
mov
mov
outsb
add
clc
adc
or
fs
jge
add
lcall
bound
adc
dec
rcl
ror
cwtl
xchg
sbb
xor
mov
lcall
test
pop
into
adc
lret
sbb
jo
aaa
les
lret
rclb
test
inc
mov
push
cmp
mov
cmpsb
testb
int
lds
xchg
adc
and
adc
in
loopne
inc
xchg
shll
mov
push
jmp
jb
add
std
xchg
ret
sbbl
mov
aaa
jnp
mov
mov
pop
and
jae
jmp
adc
mov
insb
and
imul
xor
incb
sub
or
and
add
mov
stc
mov
enter
jbe
es
int3
and
mov
push
pop
add
add
sub
das
pop
xlat
pushf
mov
outsb
cmc
push
adc
push
push
loope
pop
fadd
adc
mov
ljmp
in
pop
sbb
push
fcompl
xchg
fistps
inc
jle
ret
cmp
mov
add
pop
mov
jmp
cltd
pop
or
scas
testl
adc
les
push
add
loope
mov
loopne
pop
or
xchg
or
adc
adc
sub
and
orb
lods
pop
int
or
movsl
add
xor
or
aaa
jle
mov
rorl
jnp
out
cld
aam
loop
mov
outsb
ret
cmpsl
pop
inc
pop
daa
add
push
orl
push
andb
lods
scas
inc
hlt
ds
pop
movsl
repz
scas
arpl
out
xchg
mov
xchg
outsw
mov
push
mov
xor
out
xor
int3
mov
or
xchg
sarb
dec
or
jno
lret
popf
mov
test
add
call
pushf
jle
punpckldq
fistps
dec
mov
pop
add
loop
scas
mov
mov
frstor
and
cmpsb
lret
sarl
insl
sarl
jl
addr16
pop
sub
rcr
imul
xor
cmp
fildl
jg
imul
dec
adc
lea
cld
push
inc
fcomi
cmpsl
sub
fisubrs
out
lret
les
cmc
cltd
xor
pop
sahf
test
test
outsb
xchg
dec
inc
loope
or
lret
mov
jmp
test
aad
ljmp
jecxz
into
sahf
add
test
test
cmp
das
js
add
add
ja
pop
dec
adc
fisttpl
xor
flds
cwtd
xchg
jmp
cmp
roll
pusha
pop
add
inc
push
jmp
sub
and
adc
sub
jbe
out
gs
loopne
lcall
mov
sbb
sbb
mov
jmp
popf
dec
ror
dec
cmp
scas
and
imul
push
xchg
push
sbb
aam
push
push
dec
leave
mov
icebp
jb
rcr
jl
mov
inc
jl
ficomps
pop
jae
sahf
jecxz
push
cwtl
lret
hlt
icebp
jns
scas
roll
aad
arpl
test
call
in
call
add
cmp
je
mov
jecxz
push
jns
ret
ror
dec
mov
push
xchg
or
pop
xor
int
cld
jns
push
loopne,pn
and
inc
push
jbe
jg
push
ss
insb
cmpsl
push
mov
shrl
and
jmp
xor
clc
inc
mov
adc
popa
xor
scas
out
adc
sbb
sbb
lds
add
or
pop
jg
xchg
add
rol
mov
cmp
inc
test
jae
add
xchg
ljmp
pop
fisubl
hlt
jle
mov
shl
je
clc
or
sahf
sarb
mov
xor
or
jle
mov
push
add
into
jle
xchg
mov
sub
jmp
push
mov
sbb
add
out
stos
xchg
in
scas
dec
scas
mov
fists
int
xchg
inc
mov
aas
in
xchg
mov
lods
fcomps
stos
pop
adc
ja
adc
scas
cmp
scas
aaa
test
mov
sub
outsl
movsb
ret
outsl
and
lods
inc
jnp
dec
or
cmpsb
loopne
add
clc
xchg
lea
mov
push
data16
push
std
push
jo
imull
lcall
aas
jmp
ljmp
pop
ljmp
sbb
int3
or
stc
xchg
push
fisubl
jno
sbb
dec
cmc
inc
enter
icebp
jno
rolb
jecxz
pop
sbb
inc
clc
pop
mov
sub
fcompl
scas
xchg
adc
jmp
lret
mov
add
call
or
aas
cltd
fstpl
xchg
popa
and
pop
idivb
in
jg
cmp
adc
adc
jge
fstcw
jns
xchg
daa
lcall
jecxz
dec
xlat
js
push
or
out
cmp
jo
imul
or
test
addb
lods
jno
incl
push
stc
scas
inc
lahf
addl
daa
lahf
sub
dec
out
int3
xlat
xor
mov
push
cmpsl
je
mov
jecxz
ret
xchg
mov
pop
in
nop
cli
in
dec
pop
sub
sbb
push
shrb
test
ds
sub
mov
pop
xchg
pushf
mov
and
bound
ret
xchg
mov
sbb
xor
sar
daa
pand
shrb
rcr
xor
xor
aaa
push
mov
outsl
popa
in
and
pop
call
mov
dec
inc
adc
dec
mov
pop
cmp
inc
movl
mov
jno
pop
mov
xchg
push
jle
repnz
inc
popf
fiadds
inc
bound
inc
pop
test
xchg
clc
repz
fisttps
outsl
out
adc
jo
icebp
in
mov
or
aas
into
xlat
repz
fists
mov
cmp
and
mov
mov
in
xor
pop
xor
mov
jno
ljmp
push
dec
or
adc
cmp
sub
xor
push
jle
data16
pop
ss
rcrl
mov
push
mov
pop
out
pop
mov
mov
push
jno
fldenv
movsl
pushf
sti
mov
lods
dec
movsl
cmp
push
sub
xor
xchg
clc
or
and
xchg
jns
and
jo
jl
sahf
popa
movsl
mov
inc
mov
xchg
sbb
loope
dec
and
jae
jae
ret
je
cltd
or
dec
add
mov
jg
insb
dec
ret
dec
mov
in
insb
fisubrl
lds
fs
xchg
dec
insl
enter
jl
sbb
and
mov
adc
fimuls
fs
cmp
sarb
cli
inc
shrl
bound
dec
add
and
aad
test
pop
inc
pop
ljmp
jg
cmp
daa
mov
cs
ljmp
dec
push
cmpsl
rcl
push
ss
cwtl
jmp
ja
or
sti
mov
fsubrs
int
bound
inc
mov
lret
push
pop
outsb
push
and
push
stos
shlb
lods
inc
mov
push
enter
repnz
lods
xchg
out
xchg
xor
adc
inc
push
insb
leave
hlt
fwait
adc
dec
ret
or
in
daa
mov
ja
rorb
rcll
cmp
cmp
mov
es
jb
es
jae
enter
inc
cmpsl
push
addr16
mov
call
mov
adc
nop
push
push
popf
mov
int
lret
dec
inc
repz
loope
ret
or
stc
xchg
faddl
aad
mov
sti
mov
clc
jmp
sti
test
addr16
add
push
aas
aad
mov
adc
xchg
dec
lret
or
roll
ja
jmp
out
fcoml
push
add
or
xchg
push
icebp
jnp
pop
repz
and
data16
roll
fstpl
adc
add
outsb
xor
dec
cmp
dec
loope
add
adc
out
lahf
insb
in
stc
shrl
jne
mov
sti
cmp
cmpb
push
dec
xor
lds
jae
mov
or
mov
leave
sahf
stc
jecxz
gs
push
lods
rclb
inc
xorl
inc
stc
lahf
sub
lea
rclb
mov
inc
push
bound
faddl
pop
sub
pop
pusha
mov
push
xchg
mul
clc
repz
mov
cmp
outsb
fidivl
pop
idivb
mov
xor
pop
cwtl
rcll
sub
inc
mov
loope
repz
push
sbb
or
sub
xchg
test
fs
dec
sbb
pop
mov
adc
aaa
jbe
enter
push
cs
mov
out
push
mov
inc
xchg
and
push
gs
repz
cli
test
loope
je
add
sub
repnz
mov
mov
in
sub
sub
aas
cld
out
bound
xchg
mov
jnp
jl
push
jae
leave
and
out
push
lret
inc
push
jae
pop
jmp
retw
pop
popa
xchg
roll
decb
lods
cli
mov
cmpl
lods
sbb
out
je
cmc
fcoms
js
aam
mov
sbb
xor
adc
push
dec
es
dec
popl
adc
xchg
mov
xor
aam
jne
mov
jmp
addr16
dec
arpl
xchg
adc
rcll
mov
stos
inc
sub
mov
sbb
pop
mov
lahf
test
fdivr
ljmp
imul
jo
mov
mov
out
and
dec
popf
mov
cmp
lcall
negb
icebp
pop
mov
imul
int
adc
rclb
aaa
xchg
mov
xorl
popf
mov
lcall
xor
data16
and
roll
push
jb
out
lret
dec
pusha
pop
adc
pop
xchg
sti
xor
and
cmp
stc
adc
stos
xor
or
test
xor
push
div
sub
fdivs
jg
daa
add
mov
jmp
sbb
mov
popf
out
mov
push
adc
cmp
int
sbb
push
adc
jnp
sub
divl
popa
sti
mov
call
push
daa
xor
pop
add
mov
pop
mov
lret
clc
xlat
into
push
daa
add
sbbl
jb
xchg
xchg
mov
test
popf
sub
cmpsl
mov
xor
or
js
mov
fs
push
cs
data16
in
adc
jno
rcll
cmp
out
or
push
fnstenv
out
in
mov
stos
repz
shlb
movsb
mov
and
jecxz
test
sub
imul
mov
mov
cmp
ss
fldl
xchg
xchg
cli
push
mov
mov
fcmovnb
cmp
aaa
lock
arpl
and
jbe
filds
aas
aam
inc
adc
xor
xchg
int
dec
sbb
cs
jl
dec
in
cmp
dec
dec
and
sahf
mov
jg
jl
cmc
and
mov
ja
mov
cmp
and
cld
jg
leave
ds
cltd
cmp
gs
ds
outsb
pavgw
sbb
push
jge
mov
stos
mov
mov
and
cmp
push
sbb
aas
add
jnp
js
ret
int
push
sbb
or
aad
push
or
in
in
hlt
mov
cmp
xchg
add
sub
test
je
mov
loopne
add
sbb
call
pop
xor
scas
je
int3
mov
shrb
jno
xchg
pop
dec
mov
aaa
movsb
lcall
mov
jmp
insl
sbb
movl
dec
sub
or
inc
fucomp
and
or
xchg
subb
enter
int
inc
jge
inc
adc
hlt
in
push
dec
movsb
adcb
int
scas
sbb
push
inc
xchg
testl
scas
into
jae
cld
mov
push
aam
fs
jb
out
sub
mov
sub
iret
andb
lcall
mov
mov
mov
add
stc
sarb
jmp
jne
add
pop
fcompl
mov
lods
stos
cmp
sub
loop
jecxz
lods
je
jl
pop
mov
pop
or
xchg
sub
push
mov
cmp
daa
jno
negl
lcall
dec
adc
sbb
inc
repz
push
outsl
mov
aad
jecxz
xor
xor
cmp
ret
dec
or
pop
and
rcrb
ret
int
ja
inc
push
jns
xor
pop
sti
dec
pop
adc
gs
sbb
adcl
daa
mov
int3
clc
xlat
in
ret
dec
sub
das
outsl
repnz
lods
dec
cmp
pusha
xchg
xor
lahf
mov
push
mov
gs
gs
out
mov
ficomps
inc
or
div
cmp
test
out
xor
lcall
dec
in
add
fiaddl
xor
adc
bound
pop
in
or
cmpsb
sbb
and
mov
or
and
pop
and
in
mov
mov
sti
movsl
test
sarb
clc
dec
test
dec
or
dec
push
inc
stos
cmp
std
jmp
nop
inc
loope
js
adc
mov
xchg
xor
pusha
xchg
xorb
loopne
pop
cmc
repz
push
dec
inc
fs
push
cmp
and
rclb
cmp
arpl
popf
xchg
sub
pusha
inc
lahf
mov
loop
adc
pop
addr16
stc
cmc
jbe
out
xchg
dec
in
cmp
xchg
mov
push
sbb
cmp
push
in
jecxz
adc
shl
push
out
aad
je
bound
push
jne
pop
and
pop
push
fidivrs
jmp
xchg
test
nop
daa
jge
scas
int
test
dec
xchg
mov
test
ret
lods
imul
dec
test
movsb
adc
xor
cmp
mov
pop
mov
hlt
lret
inc
sbb
push
cmp
and
stos
shrl
arpl
rorl
xchg
or
dec
pushf
jg
lea
inc
xor
sbb
test
dec
fs
or
dec
lret
xor
fdivl
fwait
inc
and
cmp
xchg
jns
lret
ret
fxch
das
enter
mov
jb
lcall
jb
push
data16
outsl
pushaw
lret
aad
mov
push
cmpsl
jbe
push
pushf
lods
test
cltd
push
fdivrs
mov
or
cmc
xchg
call
add
add
jl
add
mov
rorl
fwait
xor
ret
jnp
popf
adc
lock
ja
mov
imul
mov
push
fwait
sbb
adc
cli
lcall
pop
imul
jno
out
das
cltd
dec
lds
popa
and
pop
xchg
icebp
mov
testl
mov
int
dec
das
aam
repnz
mov
sub
fwait
cmp
enter
adc
call
les
sbb
aas
out
adc
adc
popf
adc
jbe
jge
adc
inc
test
psubb
test
inc
inc
lret
popa
jnp
xchg
rorl
dec
mulb
adc
mov
ss
cmp
jg
sbb
mov
lret
cmp
fistpll
xor
xor
outsb
mov
fldl
mov
xor
or
inc
or
mov
gs
mov
inc
loop
jns
add
and
cmp
xchg
nop
es
sarl
push
xlat
mov
and
fucomip
lret
fistpll
fcomps
std
jnp
imul
fiadds
push
dec
cwtl
xor
decl
fistpl
cmpsl
inc
mov
pop
inc
pop
mov
xchg
mov
aas
fs
sbb
mov
adc
mov
cltd
inc
loope
xor
jp
ds
imul
es
jmp
es
mov
ret
stos
je
xchg
mov
jmp
xor
push
lds
out
sub
xor
sub
addr16
sarb
inc
xor
je
pop
dec
dec
sahf
lods
sbb
adc
pushf
push
data16
cmp
test
sbb
scas
fst
cs
shrl
dec
inc
pop
insl
sbb
push
xor
lret
stos
aad
push
sarb
rclb
pop
ret
ljmp
aad
cwtl
sbb
cs
sahf
ret
outsb
jns
test
inc
test
jae
adc
and
fisubrl
pop
add
dec
in
pop
out
push
dec
mov
inc
sbb
lcall
mov
jg
lahf
fucomp
test
mov
mov
sub
idivb
testl
add
xchg
fdiv
popl
mov
daa
scas
dec
pop
js
mov
push
ljmp
cmpsl
lcall
xchg
jne
mov
mov
xor
scas
dec
jne
js
pop
icebp
sub
xlat
pop
mov
movl
or
mov
std
dec
push
cmpsb
lahf
hlt
xor
enter
pop
add
cld
pmulhuw
rclb
das
sub
lods
or
sub
lret
mov
cmp
enter
or
sub
pop
or
mov
imul
int
pop
add
adc
imulb
adc
sbbb
mov
push
or
sbb
sahf
sbb
mov
jae
mov
mov
jne
lods
leave
sbb
adcb
rorb
xchg
mov
stos
add
jbe
dec
ret
insb
xchg
add
dec
inc
cmp
mov
xchg
pop
and
sbb
mov
cltd
test
xor
xchg
int
mov
scas
pop
jmp
and
out
and
ficoml
jle
mull
lock
cs
sub
sub
and
push
fwait
or
clc
sub
xchg
aam
sub
fistpll
push
add
lods
mov
std
lret
shll
mov
lret
sbb
stc
push
ror
lret
sbb
into
fcomp
mov
into
fbld
aad
inc
scas
or
popf
pop
push
jbe
lret
xor
rorl
into
daa
fstl
mov
scas
cmp
ret
jp
jecxz
adc
xchg
test
add
icebp
push
mov
push
rcrl
repnz
sub
sub
decl
or
and
sub
mov
xor
call
sahf
subb
cmp
insb
lods
aam
imul
push
adc
arpl
jne
arpl
mov
int3
push
sbb
popf
dec
mov
lea
or
and
sub
sarl
iret
sbb
test
add
jecxz
das
add
mov
push
test
and
xchg
mov
out
lret
icebp
push
mov
jns
sarl
jbe
adc
ds
sbb
cmpsb
cli
imul
pushw
or
xlat
mov
cmp
push
mov
jg
lods
fwait
iret
mov
dec
nop
mov
lret
or
aad
jb
xor
shlb
pushf
aad
lahf
outsl
dec
into
outsb
jp
adc
int3
or
mov
out
fstps
loopne
jno
lods
or
cmp
jl,pn
push
lea
daa
in
inc
pusha
sbb
popl
sub
adc
fisubrl
mov
jp
insl
add
pop
xor
push
or
push
outsl
dec
inc
mov
dec
pop
andb
sub
or
cltd
js
movsl
add
je
hlt
xor
mov
mov
rcll
call
out
dec
icebp
mov
jae
lods
mov
loopne
repz
daa
jle
jns
sbb
cmp
das
insl
mov
sbb
dec
unpckhps
cwtl
mov
fsts
cld
insl
sub
iret
sub
jb
cmp
fmuls
cli
and
cmp
cmp
je
aad
lea
or
dec
or
mov
pop
mov
xchg
clc
cmp
push
jbe
jb
aas
mov
cmp
outsw
mov
sbb
fiaddl
mov
movsb
or
pushf
cmp
push
rorl
jl
shl
jnp
decl
xor
push
push
add
imul
pusha
icebp
adc
cmc
push
and
fnstsw
popa
sbb
dec
jbe
pop
mov
cmp
test
cli
cltd
in
es
loopne
push
fsubrs
cmpl
xchg
mov
dec
popa
or
sbb
mov
cmc
adc
xlat
inc
push
sarl
test
hlt
stos
adcb
into
int
test
add
stc
sbb
ror
movsb
or
sub
out
cltd
lret
dec
add
xchg
adc
sbb
pop
mov
hlt
sbb
adc
into
pushl
jo
mov
lea
dec
mov
sub
inc
adc
pop
sub
imul
push
pop
in
and
cwtl
rolb
leave
push
ja
xchg
cmp
mov
fwait
jge
mov
lret
dec
adc
nop
adc
mov
imul
movsl
xchg
sbb
scas
jmp
ljmp
fsubr
mov
std
lcall
clc
data16
cmp
xor
mov
fwait
popa
stos
xor
fistpll
sub
sbb
std
outsl
jg
sub
pop
in
and
and
stos
push
mov
mov
push
mov
mov
inc
neg
and
scas
and
fs
roll
adc
mov
xchg
or
cmpsb
lahf
cltd
hlt
cs
mov
or
nop
bound
setne
lods
cmpsb
mov
adc
cmp
add
inc
mov
test
sbb
mov
jmp
xor
repnz
cli
xchg
jns
stc
mulb
mov
insb
bound
repz
mov
xor
mov
out
dec
lret
fsubrl
or
jp
pop
cmp
sahf
xchg
mov
fldenv
inc
pop
sub
pop
lea
inc
pop
test
test
pop
xor
add
movsl
stos
out
addl
in
mov
test
lods
adc
lret
pop
xor
stc
hlt
adc
mov
cld
sahf
inc
fsubr
hlt
mov
push
mov
out
movsb
inc
dec
inc
sub
mov
xor
mov
xchg
mov
sub
fldt
sbb
jno
push
push
mov
imul
in
data16
dec
nop
xor
sbb
sbb
notb
dec
mov
mov
repz
fs
lret
adc
stos
cs
addr16
aad
mov
mov
cmc
pop
mov
enter
sarb
mov
call
fsubl
fldcw
push
outsl
pop
xchg
lock
pop
jmp
mov
xlat
mov
imul
stos
iret
and
or
add
xchg
inc
mov
mov
and
push
dec
mov
xchg
jl
and
insl
je
add
sub
mov
daa
in
and
xchg
lret
imul
int3
lret
push
jecxz
into
xor
jo
mov
insb
subl
clc
xor
int3
xor
std
add
pop
ret
lahf
or
pop
sbb
mov
out
jmp
out
mov
in
ss
mov
push
ds
and
push
lds
out
jp
popa
sarb
jge
mov
pop
fimull
add
dec
fisttpl
inc
inc
cmpsl
xor
mov
inc
sbb
pop
pusha
cmpsb
or
imul
scas
popa
and
movsb
adc
cltd
push
aas
cmp
adc
rcl
lcall
scas
loopne
mov
pusha
pop
or
pop
ss
and
outsb
add
cltd
cli
jl
fstpt
and
ja
pushf
and
in
cmpb
adc
ret
sbb
push
lods
mov
cmp
mov
xchg
add
hlt
mov
xchg
push
sbb
mov
add
sub
movsb
inc
clc
sbb
dec
xor
fisttps
xor
jnp
cltd
mov
mov
pop
pushl
and
lods
aas
adc
shl
add
lock
add
adc
mov
adc
pop
data16
fwait
and
out
int3
sub
mov
ret
push
enter
mov
addb
xor
dec
popa
fsubrl
sbb
fidivs
nop
inc
adc
das
outsb
adc
mov
loop
arpl
ss
dec
mov
xchg
not
leave
addb
mov
sbb
pop
aad
dec
addr16
xlat
sbb
rcrl
aaa
sahf
mov
jmp
mov
pop
xchg
push
int
aaa
pop
in
jb
fdivrl
add
xchg
aad
imul
mov
adc
mov
out
cmp
cli
mov
add
dec
adc
add
fsts
add
xor
and
jno
push
dec
lea
insb
repz
push
cmp
and
adc
sbb
outsl
in
icebp
dec
lock
adc
iret
push
cwtl
cli
popf
in
xlat
loopne
fdivrs
repnz
cmp
sbb
cmp
sub
cmc
or
add
inc
jns
rclb
stos
push
insb
mov
sahf
fldcw
mov
cld
gs
ret
cmpl
out
xchg
ds
pop
push
mov
fcmovu
aas
imul
jnp
push
aad
adc
sub
mov
mov
push
movsl
or
pushf
sti
mov
and
mov
xor
pushf
add
xor
out
fbld
mov
add
mov
pop
test
pushf
jmp
or
cmp
dec
push
cmpsb
inc
imul
scas
fs
mov
jno
xor
jmp
movsl
mov
xor
mov
in
cli
daa
cld
sarb
push
and
xchg
mov
xchg
sbb
add
clc
addr16
adc
jnp
sbb
enter
not
inc
add
mov
and
repz
jbe
cmpsl
dec
cmp
mov
xchg
jp
mov
fstl
iret
inc
test
pop
lock
es
loop
mov
mov
outsl
js
jecxz
mov
cmp
iret
jae
in
movsb
adc
add
sub
add
pop
subb
mov
dec
test
stc
jnp
cmpl
inc
xchg
dec
push
jbe
fs
arpl
pop
mov
push
or
xor
push
mov
inc
cmp
jmp
mov
push
xor
int
je
into
shll
cmp
push
pop
outsl
shr
push
mov
stc
dec
mov
mov
jnp
or
jns
push
dec
pusha
es
repz
inc
das
jae
and
inc
lret
xor
mov
inc
stc
inc
or
xchg
iret
in
mov
pop
lret
inc
mov
xchg
sbb
pop
mov
add
jle
and
and
lods
les
scas
mov
ds
ds
adc
pop
das
icebp
add
and
mov
pusha
out
sbb
jecxz
lahf
dec
in
loop
pop
push
or
sbb
mov
inc
cwtl
lret
mov
adc
dec
cltd
negb
mov
cli
orl
push
aad
ret
push
jmp
xchg
mov
and
data16
adc
sub
xchg
or
loopne
add
jge
or
push
test
mov
imul
or
hlt
rcpps
jo
stos
in
inc
lret
sbb
imulb
push
into
mov
xor
lods
or
hlt
mov
rcll
imul
imul
hlt
cli
or
or
decb
out
nop
mov
sbb
lods
pop
inc
mov
xchg
dec
inc
adc
in
dec
rol
iret
dec
dec
lods
mov
lret
fldenv
dec
jb
stos
scas
pop
push
xor
pop
imul
test
test
fwait
sbb
inc
out
ss
stos
ja
addr16
testb
clc
nop
jge
push
cmp
inc
inc
sub
xor
pop
in
cwtl
out
mov
sub
es
add
sub
cmp
jmp
je
loopne
inc
jo
push
jno
flds
dec
insb
pusha
adc
pop
cmp
cmp
inc
or
lahf
lods
xor
mov
movsb
aas
and
test
and
add
ja
je
pusha
and
decl
aas
mov
jmp
or
test
movsb
inc
nop
imul
sbb
cmp
push
sahf
or
mov
sbb
pushl
push
mov
sbb
shl
xchg
icebp
sbb
push
xchg
mov
push
call
loope
popl
add
sahf
lcall
push
xor
sbb
stos
inc
add
std
ret
dec
xor
dec
mov
dec
dec
je
dec
sbb
cmp
sbb
jbe
or
mov
out
ror
sbb
pop
mov
dec
pusha
pop
and
xor
dec
aas
jbe
inc
mov
rclb
adc
orb
xchg
push
xor
pusha
add
into
lret
push
les
xchg
sbb
dec
addr16
sub
sbb
ss
sarb
mov
std
movsb
rcrb
sti
addl
pop
mov
xchg
and
fimull
xlat
jns
sbb
fbstp
fwait
mov
lds
xor
lret
pop
dec
fistl
pusha
inc
repnz
or
and
jg
icebp
iret
adc
aam
inc
out
sbb
lods
dec
mov
test
jge
mov
popf
xor
add
adc
mov
mov
sti
xchg
fldcw
push
sub
dec
push
xor
adc
inc
xchg
mov
sub
or
xor
cltd
xchg
aad
dec
jae
push
pop
stos
hlt
pop
pop
arpl
dec
lret
mov
cmpsb
fidivrl
jmp
clc
sub
add
mov
xor
jp
dec
test
pop
call
push
add
jp
and
shrl
jecxz
and
gs
xor
mov
pushf
jmp
icebp
cmp
sub
sub
pop
pop
mov
inc
popa
lahf
repz
out
lock
dec
push
aam
xlat
sar
enter
xchg
push
cmp
stos
int
sub
int
jns
cmpsl
shrl
dec
cmp
ja
scas
out
sub
push
sub
mov
fs
mov
mov
dec
push
test
cmp
scas
and
inc
addb
js
rclb
out
pop
and
xor
movsb
daa
xchg
push
cmp
inc
in
aad
in
lods
inc
fcompl
adcl
mov
pop
mov
int3
cltd
incb
divps
scas
sarb
loop
jne
int3
pop
stc
ret
fs
sbb
mov
pop
or
sub
sbb
ror
inc
pop
add
or
orl
imul
movsl
sub
xor
fidivrl
inc
insl
lods
mov
sub
push
cmp
sbb
test
mov
in
sub
inc
inc
ds
jae
jge
xor
imul
faddp
push
in
daa
fdivl
sbb
ljmp
incb
mov
mov
mov
xchg
mov
scas
rorb
subps
stc
mov
mov
add
push
jecxz
mov
or
fisubl
xor
mov
add
mov
call
int3
rolb
xor
sub
pop
sbb
push
mov
outsl
jnp
or
stos
in
fsts
xor
loop
std
cmp
jo
lea
push
fists
test
and
xor
cwtl
lds
gs
push
leave
call
xchg
out
and
sahf
lahf
sbb
loopne
popf
push
xchg
sub
rclb
xor
cmpl
inc
pop
dec
outsl
jmp
push
sub
or
dec
test
out
sti
inc
xchg
les
jp
mov
mov
movsl
mov
or
ss
fmull
popa
xchg
out
addr16
loop
repz
push
push
mov
xlat
aaa
adc
shll
std
ljmp
mov
jnp
push
pop
or
icebp
jmp
jge
daa
xor
sub
loop
mov
xchg
cs
shrb
mov
incb
mov
adc
sbb
mov
or
inc
loop
orl
add
cmpsb
add
out
lret
xchg
imul
lea
psraw
adc
out
push
shl
dec
mov
sub
mov
lret
mov
jecxz
xchg
xchg
sbb
mov
adc
mov
rcrb
jp
and
and
cli
lahf
cmp
dec
lahf
adc
nop
jge
leave
pushf
rcrb
sarb
xchg
bound
int
mov
mov
push
ret
cmpsl
pop
insl
pop
pop
or
test
pop
push
mov
push
add
add
pop
jbe
or
jnp
cmp
add
test
das
mov
stc
cmp
mov
lcall
pop
sub
out
fadds
repz
pop
jne
es
add
out
add
jle
mov
mov
jmp
or
es
lcall
mov
and
sti
inc
xchg
and
push
ljmp
rorl
adc
popf
adc
jae
and
inc
mov
pop
incb
outsb
out
add
adc
jg
xchg
outsl
add
pop
fcompl
outsb
outsl
push
dec
inc
rcl
test
cmp
cwtl
lods
popf
push
mov
mov
into
xor
jg
fmull
xchg
push
xor
push
xor
shll
js
cmp
or
movsl
add
add
push
mov
sbb
and
xor
sar
dec
in
mov
and
js
testl
or
fildl
sub
sahf
test
push
adc
pop
sub
insb
cli
dec
sub
inc
ret
add
mov
imul
mov
jb
int
in
mov
inc
adc
mov
jl
mov
jae
xchg
sub
or
sbb
or
dec
jge
dec
cmp
mov
push
and
adc
jo
clc
cmp
out
xor
adc
push
pop
cmp
in
or
or
adc
rorb
xchg
popa
out
adc
add
add
enter
repz
add
mov
cmp
jae
mov
insb
pusha
outsl
mov
xchg
dec
mov
hlt
insl
mov
lock
inc
cltd
iret
out
inc
mov
mov
mov
popa
jle
dec
in
lods
pop
lcall
shlb
dec
loopne
cmpsl
fidivl
jo
xor
sub
sti
mov
test
add
imul
inc
sbb
cli
in
ds
fsubs
rcrb
jae
mov
mov
ljmp
pop
rolb
dec
push
push
call
into
packsswb
or
xor
or
mov
add
das
mov
push
lret
or
mov
mov
add
jbe
sbb
xchg
bound
cld
and
jno
lock
jmp
sub
inc
sbb
mov
mov
loope
test
add
ds
outsb
jne
push
scas
pop
std
add
pop
inc
adc
test
stc
adc
dec
dec
pop
push
clc
test
and
and
xor
and
push
in
xor
jo
out
jle
pop
pop
dec
inc
jo
xor
cmp
outsl
mov
shrl
push
test
fucomi
fs
xchg
push
es
fcomp
lock
movsb
bound
int
js
rcrl
imul
pop
jmp
ret
mov
lret
icebp
fbstp
push
and
jae
adc
movsl
add
adc
and
xchg
orb
out
add
adc
stos
dec
addr16
test
sub
sub
sbb
xor
and
adc
add
scas
fxch
fsubl
jnp
dec
dec
inc
xor
fadds
ret
push
sub
lods
insb
loopne
stos
add
fsub
cmp
push
sbb
outsl
popf
push
and
cmp
and
cltd
sub
xchg
cmp
data16
ds
pusha
sbb
cli
les
mov
cmpsl
jl
into
dec
mov
and
imul
idiv
fidivrl
loopne
sub
xor
das
or
dec
ljmp
push
cwtl
push
jl
xor
data16
xchg
outsb
in
cmp
lea
mov
sar
mov
and
sbb
loope
popf
lea
xchg
bswap
les
xor
adc
pop
jp
rclb
dec
mov
adc
test
scas
in
mov
lods
out
xor
mov
mov
pushl
aaa
xor
and
bnd
aad
js
xchg
mov
aas
and
xchg
sbb
addl
cld
add
stos
mov
loope
movsb
adc
pushf
outsb
jns
dec
aad
fidivrs
popf
sbb
lock
mov
outsl
loopne
and
fs
mov
outsl
mov
sbb
ror
xor
iret
rorl
test
mov
dec
cmp
retw
inc
cmp
mov
mov
push
sub
sarb
push
pop
jnp
jmp
jle
int
loopne
jo
pushf
sub
sqrtps
add
andl
jmp
cmp
fmull
inc
cwtl
test
lahf
inc
mov
bound
push
shl
push
jl
lds
fwait
inc
mov
bound
fisubl
inc
pop
icebp
xchg
add
rorl
lcall
xchg
insl
pop
int3
mov
mov
enter
cltd
cmpsl
iret
cli
mov
mov
xchg
jno
movsb
jl
push
mov
xchg
pop
dec
lock
shr
xchg
inc
adc
mov
sahf
repz
xchg
adc
loop
call
mov
push
inc
jmp
jecxz
mov
daa
fdivl
inc
jae
loope
loope
nop
lahf
daa
pop
inc
hlt
sbb
leave
xchg
fwait
lret
cmpsb
out
ljmp
dec
ret
fdiv
lods
std
mov
jecxz
lods
aam
xchg
add
add
dec
xor
repnz
jl
ss
dec
xchg
mov
mov
mov
dec
loop
gs
mov
loopne
insb
push
adc
cwtl
icebp
fstp
lret
dec
ret
test
mov
sbb
leave
mov
icebp
pop
ds
mov
clc
roll
mov
jnp
sub
out
jecxz
xlat
sub
mov
xor
adc
pop
bound
mov
jp
cmp
xchg
movq
test
or
push
or
cmpsl
adc
adc
imul
push
mov
lock
dec
push
int
lahf
cmpsl
inc
mov
cmpsb
adc
mov
push
out
jbe
cmp
int
dec
test
mov
ficoml
mov
sbb
icebp
es
and
out
push
mov
lods
iret
jbe
adc
add
jb
stc
daa
pop
enter
or
loopne
dec
mov
cmc
push
adc
aas
lcallw
subb
lcall
paddsb
test
xchg
leave
cmp
shr
js
insb
xchg
pop
inc
outsb
nop
nop
cmp
push
sub
lahf
cmc
lcall
das
js
sub
and
test
push
jnp
add
clc
cs
inc
dec
jle
push
jge
push
sbb
insb
mov
pop
daa
insl
sbb
xchg
shll
jmp
xchg
push
lret
or
or
xchg
sub
push
clc
inc
sub
pop
mov
ss
addr16
xor
jge
out
outsl
dec
pop
cli
cmp
mov
mov
clc
nop
cmc
test
add
or
aaa
mov
sbb
push
mov
cwtl
pop
mov
into
and
inc
shlb
adc
shlb
imul
cmp
roll
lds
mov
mov
test
in
jle
ja
scas
jg
sub
in
cld
sahf
dec
into
or
std
jl
and
mov
jl
nop
sub
mov
mov
sbb
sub
ljmp
lods
push
fsubrl
jb
cmp
loope
mov
loope
lret
xor
adc
in
xor
dec
sub
leave
push
sbb
cwtl
imul
scas
pusha
push
push
jbe
dec
rolb
outsb
mov
gs
imul
dec
mov
dec
xchg
mov
mov
inc
fnstcw
dec
xlat
add
adc
mov
cmp
mov
dec
daa
sub
lds
push
or
fisttps
outsb
mov
mov
jmp
dec
fst
mov
and
pop
inc
push
sub
push
fnop
or
lds
iret
push
scas
cmp
cli
ja
pop
dec
cs
dec
shll
push
push
into
or
int3
mov
dec
jle
cmp
popf
lods
and
inc
add
xlat
pop
jecxz
cmpsb
inc
sahf
fisubrl
mov
pop
cmp
pop
mov
ljmp
inc
push
cmp
mov
sbb
mov
test
or
jnp
add
mov
sbb
jnp
cmp
sbb
cmpsb
xor
sub
cwtl
das
mov
je
or
mov
add
cmp
aam
sbb
test
nop
dec
pop
movsl
lods
push
outsb
je
xor
jbe
push
add
pop
fmull
mov
repnz
mov
jmp
inc
aam
in
sub
ljmp
notl
aam
xorb
inc
xlat
insl
cmp
adc
jp
mov
inc
or
daa
aam
mov
sub
in
cld
push
add
jl
pop
movsb
dec
mov
xchg
lahf
push
ret
pop
pushf
notb
in
sub
jae
lea
sbb
mov
add
xlat
mov
rcrb
cmpsl
jo
roll
fnstenv
out
sbb
rorl
dec
fs
scas
sbb
push
imul
mov
mov
sub
jbe
and
mov
mov
pop
movsl
pop
das
data16
or
hlt
addb
mov
cmc
xchg
out
fidivs
hlt
adc
cmpsb
fisubrl
stos
adc
ja
jle
sbb
outsl
stos
xchg
int
xlat
repnz
mov
aad
aaa
nop
jns
repnz
or
add
xor
lret
cmpb
mov
inc
cmp
pop
add
fwait
jb
mov
add
push
and
std
add
pop
dec
repnz
mov
enter
scas
adc
stc
clc
add
mov
pop
or
adc
and
icebp
adc
mov
jp
bound
mov
sbb
loopne
inc
xchg
sub
jl
jb
in
nop
mov
loopne
pop
jl
out
in
loope
out
push
dec
add
push
pop
sbb
fidivs
jge
jmp
int3
into
outsl
out
scas
cwtl
rcrl
jg
push
addr16
outsb
jno
test
or
arpl
mov
das
fiadds
jbe
addb
sub
or
mov
int3
sbbb
jg
sbb
mov
adc
ret
adc
rcrl
jmp
push
fsubr
int
sbb
aaa
sbb
dec
negl
into
inc
sahf
mov
loopne
jo
arpl
push
dec
inc
push
movsl
dec
or
mov
sub
dec
dec
dec
jge
das
loopne
add
xlat
addr16
out
or
inc
push
lods
pop
inc
mov
lahf
lock
sub
iret
inc
jae
cmp
add
cmc
imul
pop
xor
ss
pop
pop
cld
data16
testb
sbb
and
cmovae
xchg
bswap
cmp
xor
inc
adc
xchg
cmpsb
lods
test
cltd
rcrl
mov
mov
cmpsl
jb
adc
popa
push
or
jp
inc
scas
inc
push
or
xor
dec
cmp
roll
lcall
jmp
leave
push
pop
rcr
xor
adc
cltd
inc
fldenv
ret
jp
push
jge
dec
or
andb
out
sub
aaa
loop
mov
or
popf
jmp
je
cmp
sub
add
and
adc
add
loope
mov
cmp
enter
push
outsl
testl
test
xor
into
and
or
and
stc
dec
ds
popa
dec
sbb
fnstsw
in
enter
mov
sub
mov
push
in
loop
dec
mov
jnp
out
jnp
xchg
aaa
inc
lret
xor
and
in
jmp
jno
add
inc
cmp
cmpsb
bound
jne
add
movsl
inc
dec
into
sbb
dec
pop
flds
xchg
sub
repz
hlt
or
or
pop
pusha
imul
lahf
mov
inc
add
inc
aad
mov
fildl
and
cmpl
jns
jp
int3
inc
jge
ss
xchg
in
xor
popl
push
jg
test
and
pop
lret
ficompl
jno
popf
cmc
pop
or
lods
pop
xchg
mov
mov
push
in
sahf
mov
pop
aas
push
cwtl
shrl
mov
jg
call
pop
inc
inc
cmc
mov
dec
push
pop
nop
dec
in
mov
xor
loope
mov
in
sub
fwait
aad
lret
inc
add
xor
pop
sbb
incl
or
xchg
stc
cmp
mov
mov
notl
jg
cwtl
push
push
loopne
out
and
shr
sti
or
sub
cmp
lret
ficompl
add
std
lods
sbb
sub
addr16
out
frstor
lock
mov
xchg
mov
pop
push
add
ja
out
in
lds
jae
es
loope
cld
sub
sbb
mov
fsubs
scas
and
fxch
ret
in
out
cli
jge
add
rclb
mov
dec
dec
out
enter
mov
shlb
stos
movsl
mov
in
ret
out
pushf
cwtl
push
push
adc
lods
mov
out
and
cmp
mov
sub
je
leave
fwait
cmp
xor
inc
ljmp
fstpt
mov
movsb
stos
stc
stos
xor
shlb
sub
and
stc
test
add
jb
mov
int3
flds
adc
ffree
js
rolb
clc
jbe
out
mov
sbb
pop
out
rorb
xchg
ja
and
andb
jle
cs
add
mov
scas
jbe
cmp
xchg
insb
jg
fstl
mov
xchg
shrb
pop
seta
or
dec
mov
les
cld
add
jae
pop
dec
call
addr16
and
loope
adc
mov
out
dec
adcb
jmp
push
pop
cmpsl
sbb
dec
insb
add
mov
shl
ja
test
cmp
outsl
push
push
in
ja
push
xor
jb
shll
arpl
clc
std
push
loop
das
mov
cwtl
rcl
sbb
sub
cmp
pop
xlat
push
int3
jne
dec
xor
and
pop
push
mov
sub
push
in
or
call
sbb
fwait
cmc
adc
pop
xchg
dec
and
call
inc
jnp
xchg
int
sbb
cs
add
ja
cbtw
in
and
mov
push
xor
cmp
popa
push
lock
sub
shlb
xchg
mov
cld
lret
add
mov
mov
push
movsl
std
add
push
pop
imul
pop
pop
fcomi
jg
sbb
mov
dec
call
in
adc
icebp
ret
int3
divl
dec
fstpt
sbb
sbb
insb
mov
cmp
movsl
dec
rorb
jo
test
lods
ret
insb
cmp
and
mov
mov
icebp
fwait
or
call
aaa
add
in
inc
stc
push
and
in
iret
repnz
pop
lods
idivl
pusha
ret
hlt
int3
out
js
fidivrl
mov
outsl
pop
jge
xchg
mov
cmp
pusha
leave
loope
call
cld
adc
mov
pusha
sbb
xchg
xchg
mov
push
cmp
push
sub
jb
push
dec
or
arpl
dec
or
shlb
dec
jb
or
mov
stos
int3
leave
sub
jl
aad
jmp
or
or
popf
adc
ss
mov
clc
aaa
jmp
jp
xchg
mov
jae
jns
sbb
jmp
push
je
popa
lods
js
call
mov
je
mov
mov
lods
inc
fldcw
pop
fwait
jmp
add
scas
xor
icebp
clc
push
out
jl
scas
xor
mov
int
pop
subl
xchg
push
test
pushf
aaa
sub
pop
loope
dec
inc
int3
std
ficomps
dec
cs
insb
add
test
loop
mov
xor
jge
mov
in
popa
fs
push
outsl
jnp
ja
aam
ja
push
lret
cld
mov
lock
enter
icebp
out
outsl
or
inc
lret
jne
sub
push
out
in
push
das
inc
scas
jns
rolb
sahf
jne
in
xor
shll
dec
mov
out
test
dec
and
dec
stc
jne
mov
mov
sbb
push
movsb
sub
stos
shlb
arpl
out
push
jne
push
nop
lock
jne
jnp
test
jl
jecxz
lods
push
pop
xchg
scas
pop
nop
ja
movsl
pop
xchg
test
xchg
and
clc
pop
jno
mov
mov
sub
push
cmpsl
adc
loop
insl
not
daa
cmp
sub
xchg
jmp
lcall
mov
pop
dec
cwtl
shld
icebp
jns
mov
push
shr
xor
mov
ljmp
jns
add
add
mov
sti
adc
loope
nop
xor
jns
mov
frstor
push
fimuls
lods
div
pop
and
or
pusha
js
push
aad
lods
int3
lret
inc
add
inc
sbbl
lock
mov
jecxz
cmp
mov
push
inc
mov
icebp
jmp
clc
add
and
sub
mov
enter
jbe
dec
inc
dec
es
inc
test
sahf
fwait
xchg
movsb
xchg
lcall
jp
inc
add
and
push
orb
cmp
and
loopne
lcall
fwait
cwtl
xor
push
mov
jno
or
popf
dec
jne
pop
fcmovb
stos
hlt
stos
lret
loopne
out
jnp
sub
hlt
inc
push
out
push
adc
ss
adc
popa
fildll
cmp
pop
loopne
push
dec
daa
mov
addl
adcb
xor
or
push
call
bound
mov
push
ja
jno
jae
mov
inc
and
mov
lret
mov
sub
xchg
mov
mov
and
mov
stos
icebp
mov
mov
sti
inc
xchg
fstpt
cli
jae
cs
lods
mov
nop
inc
xor
aam
xor
xchg
sbb
jne
and
fstpl
xor
je
cmpsl
or
das
mov
mov
mov
mov
sub
xchg
lahf
and
jnp
gs
and
jmp
cmpsb
xchg
push
cmp
dec
dec
ror
ss
in
int3
les
mov
lret
push
mov
stc
repnz
inc
fidivs
adc
scas
ljmp
loop
cld
cld
mov
sbb
jmp
je
mov
fdivrl
or
xor
sbb
ficoml
shl
jbe
sub
idivb
pop
test
sub
sub
pop
mov
push
aam
outsb
roll
dec
loopne
sub
sbb
dec
pop
daa
push
stos
incl
push
test
cs
lahf
test
mull
inc
sahf
stos
jnp
or
out
push
movsb
xor
sarl
mov
dec
arpl
loop
popa
mov
xchg
ret
repnz
jmp
es
scas
iret
dec
xchg
sbb
sbb
lock
jl
test
scas
into
cmp
cmp
mov
push
pushf
inc
movsl
aad
sub
jno
cmp
aad
adc
in
aaa
test
enter
clc
dec
mov
mov
call
cmp
adc
lods
add
in
xor
ss
cmp
test
mov
loop
ret
sub
hlt
std
scas
loopne
xor
pop
jne
or
gs
jp
add
dec
mov
incl
jl
repnz
push
adc
test
lret
push
jg
fnstsw
loop
adc
shl
mov
insl
xchg
leave
js
push
in
out
fldt
dec
inc
aaa
clc
jb
push
jmp
inc
inc
push
mov
inc
cmp
fnsave
push
in
test
and
mov
fimull
ret
mov
iret
addr16
imul
cmp
mov
mov
pop
ljmp
push
pop
sahf
add
inc
rcr
into
and
lock
jecxz
movsl
insb
fidivrl
lret
hlt
shlb
movsl
movsl
cmp
shll
pop
out
xchg
jns
cld
jmp
stos
cli
xlat
xchg
fists
lret
imul
xchg
push
popf
mov
adc
xorb
mov
lods
or
add
and
or
add
xchg
sbb
add
xor
mov
dec
in
mov
mov
popf
adc
pop
and
cmc
pushf
loope
xor
cmp
das
jp
in
adc
sarl
xor
xor
or
aaa
into
jp
imul
ljmp
and
or
mov
out
sub
js
incl
sbbl
mov
cmp
jnp
pop
jno
add
mov
mov
xchg
xchg
test
fadds
lock
xor
ret
lahf
pop
jp
lret
cmp
aam
lcall
adc
sub
mov
sub
dec
pop
jnp
sub
ds
jmp
jl
cwtl
xchg
sub
jl
mov
fwait
and
cmp
xor
cmp
mov
popf
lcall
sbb
push
jecxz
inc
push
lea
cmp
sub
inc
or
or
sbb
dec
ret
js
imul
movsl
ds
out
cwtl
xchg
and
inc
ds
adc
cmp
ss
sti
sbb
test
fisubrl
mov
sub
pushw
mov
mov
ds
mov
daa
shlb
dec
mov
insb
push
movsl
arpl
stc
es
xor
sahf
nop
sbb
mov
xchg
xchg
mov
std
repnz
sbb
mov
jle
jge
or
dec
dec
sub
adc
int3
mov
js
pop
dec
ljmp
cmc
jne
inc
jmp
sub
fldt
or
push
push
mov
jle
adc
mov
sbb
out
inc
data16
xchg
loope
xchg
push
sub
jne
or
sbb
adc
inc
insl
lods
push
mov
cltd
ret
cmp
call
sarl
push
sub
xor
std
cmp
pushf
test
inc
cld
push
pop
pop
push
movsb
loop
lcall
push
sbb
xorb
mov
mov
push
or
pop
xchg
dec
xor
push
inc
popa
test
cwtl
outsl
xor
xchg
out
adc
inc
popa
cmp
icebp
repz
ja
push
jge
std
fstpl
orb
fcoml
inc
mov
xchg
xchg
mov
pop
daa
test
jmp
lods
and
movsl
fistl
aad
fidivs
stos
xchg
mov
sarl
lock
mov
test
dec
pop
dec
sti
dec
jo
or
rcrb
cmp
mov
push
dec
xlat
mov
mov
out
mov
pop
loop
repz
jmp
sahf
ror
lahf
dec
pop
dec
inc
adc
lcall
pop
dec
arpl
loope
incl
adc
fbld
addb
fstpt
mov
lahf
arpl
mov
and
mov
mov
adc
lret
add
scas
add
scas
mov
leave
push
jle
mov
loop
sbb
pop
vsqrtpd
fucomip
jnp
or
addb
and
and
je
fisttpll
js
int3
or
lods
dec
push
xor
inc
into
xor
mov
hlt
adc
std
mov
test
push
xchg
pop
lods
ljmp
mov
jno
outsl
mov
cltd
pop
fdiv
sub
iret
dec
lea
loope
xchg
out
popf
mov
or
mov
mov
lea
lds
dec
pushf
cmpsl
dec
shll
mov
push
into
mov
sub
adc
popa
push
mov
outsl
mov
cmp
ret
sub
les
mov
cmpsb
ljmp
xchg
rcrl
add
shl
orb
insb
es
and
sub
out
jns
mov
push
xor
aam
in
repnz
mov
outsb
inc
or
and
inc
sub
jnp
lcall
and
sub
pop
push
mov
inc
sbbb
cld
cld
aad
pop
push
ret
data16
cmp
aam
sti
jmp
into
or
adc
or
jge
lcall
add
mov
cs
pop
lods
out
enter
or
push
std
popf
or
scas
cmpsl
xchg
sbb
fcomip
mov
ret
or
mov
loop
cmpsl
lods
push
cmp
aad
insl
adc
movsb
in
daa
insl
mov
xchg
jne
mov
push
call
shlb
ror
ss
xchg
dec
addps
ror
or
cmp
test
jle
lret
xchg
rcrl
push
repnz
jb
int
js
stos
ljmp
jmp
push
add
xlat
or
movl
dec
imul
xor
sbb
fsubp
and
adc
shlb
es
mov
xor
mov
xor
orl
inc
insl
mov
enter
mov
and
add
xor
dec
jp
xchg
inc
or
and
mov
sbb
mov
dec
sub
mov
mov
mov
jns
xchg
push
leave
out
xchg
jp
mov
cs
dec
imul
fs
mov
hlt
fnstsw
push
xlat
mov
jmp
mov
fdivs
jb
cwtl
int3
and
dec
loopne
cmp
or
dec
cmp
add
jne
jnp
cs
rclb
mov
adc
pop
sbb
mov
push
insb
push
lcall
mov
icebp
or
rorb
cmp
pop
mov
sahf
ljmp
xchg
mov
fldt
cmp
aam
and
out
sub
jle
loopne
je
rorb
insb
orl
add
lods
jb
int
cwtl
lds
sbbl
mov
mov
sbb
lahf
scas
and
push
fmull
mov
fwait
dec
mov
xchg
push
jns,pn
test
cli
or
mov
inc
mov
xchg
inc
mov
pop
out
jae
push
call
fistps
push
mov
loopne
aam
fisubrs
cmp
mov
sub
pop
lds
pop
xor
fwait
xchg
jp
test
mov
push
dec
insl
aas
or
inc
add
pushf
popf
pop
subl
xchg
in
jns
adc
or
sub
lea
aas
xchg
push
pushf
dec
push
pop
bound
fsts
sti
push
negl
ret
fsub
daa
or
int
push
ja
repz
cmpsl
mov
fwait
xchg
loop
clc
push
lcall
mov
or
in
xor
stos
mov
fdivs
and
and
mov
mov
repnz
pop
mov
jb
xlat
mov
repz
jo
jmp
push
movsl
movb
push
and
sahf
shll
dec
push
adc
adc
test
divb
jmp
mov
movsl
jb
fucomi
and
mov
sbb
add
push
mov
mov
adc
sbb
pop
push
mov
sbb
push
cmp
xchg
aad
lds
sti
shrb
or
loopne
or
jg
iret
xchg
addr16
xrelease
scas
shrl
xchg
sub
add
fnsave
push
xchg
adc
and
mov
in
sarb
sbb
push
or
dec
xchg
out
aas
into
test
sbb
movsl
aad
scas
cmp
fs
push
leave
cmp
adc
pop
pushf
idivl
cmp
jmp
sbb
ret
sbb
jmp
xchg
sbb
or
pop
cmp
cmpl
xchg
ljmp
nop
mov
pushf
add
jle
push
dec
mov
loopne
je
es
stc
jo
dec
push
imul
out
roll
pop
adc
mov
push
pushf
jl
out
push
xchg
xorb
test
outsl
mov
mov
aas
dec
jnp
push
lret
aad
push
pop
pop
les
jns
cmp
add
adc
mov
push
add
push
inc
sti
inc
fs
adc
mov
cmc
repnz
cmp
sub
divb
insb
add
movsb
mov
xor
ds
stc
sub
ret
arpl
jle
jmp
loope
pushf
ljmp
inc
inc
fcoms
mov
test
pop
lea
or
sahf
and
ror
fists
mov
fs
arpl
pop
or
jecxz
sbb
mov
shl
sub
out
stc
gs
fwait
add
sbb
shlb
add
mov
lods
enter
pop
pop
mov
orl
fcmove
cmp
ret
push
xchg
rorl
pop
mov
add
insl
inc
testl
cmp
repnz
add
cmp
stos
pop
push
stos
shl
fimull
xchg
in
push
daa
add
push
sub
aas
mov
dec
jg
sub
out
pop
test
xor
xor
clc
nop
dec
add
sti
adc
aaa
sbb
or
pop
mov
sbb
mov
lcall
mov
or
and
push
jne
sub
dec
call
loop
jo
movsb
addl
imul
push
sbb
sbbl
outsb
jne
pushf
lret
add
out
cli
mov
dec
push
inc
inc
scas
testl
push
adc
xchg
cmc
jecxz
mov
xor
test
loopne
in
ljmp
add
push
std
or
sub
dec
mov
xchg
fldcw
shll
xchg
sub
sub
repz
dec
cli
fldt
lret
or
cmp
cmc
xor
stc
cmp
enter
mov
stos
mov
jl
pop
xorb
push
jl
add
or
jbe
jg
cmpsl
inc
xchg
push
mov
jmp
rcrl
pop
jg
mov
lods
outsb
xorb
jle
push
iret
adcb
movsl
iret
rcl
inc
repz
rol
mov
scas
fbld
pop
shl
push
stos
loopne
shrl
stos
mov
jg
adc
cmp
inc
fldenv
xchg
jp
sahf
dec
shrb
push
imul
movsl
repz
movsl
sub
clc
jne
fwait
loope
lahf
xor
add
xchg
popf
adc
test
es
arpl
cld
cmp
cld
iret
test
in
pop
fdivrl
ds
js
bound
and
shll
xchg
aad
add
lea
out
dec
mov
xchg
ja
push
dec
sub
cmp
in
data16
clc
push
dec
pushf
jnp
xor
xchg
fwait
mov
xchg
xchg
cwtl
mov
std
bound
sub
inc
fldt
jb
pop
cs
adc
clc
xchg
lcall
movsb
pop
mov
gs
or
js
sbb
mov
sub
inc
jle
es
addl
je
out
movsb
iret
fnstsw
mov
mov
mov
out
daa
sbb
jp
adc
lahf
jg
test
mov
xor
jmp
aas
daa
mov
sbb
or
add
test
ret
mov
addr16
mov
leave
mov
testb
pusha
test
mov
inc
and
adc
and
arpl
jle
mov
in
cli
pop
xchg
xorl
and
sahf
hlt
sbb
leave
inc
mov
in
dec
inc
jb
std
outsb
cmp
pop
cmp
repz
sarl
cld
jecxz
repz
push
cmc
push
rorl
and
and
adcl
imul
adcl
pop
faddp
mov
pop
sub
insb
stos
or
stos
or
in
data16
pusha
je
cli
mov
in
cwtl
out
sub
outsl
inc
gs
movsl
or
shrl
lret
cmp
ljmp
jo
out
pop
mov
xchg
fidivrs
data16
sub
test
das
mov
add
sbbl
lcall
dec
lea
testl
data16
das
lcall
jl
or
mov
insb
cmp
and
sub
cmp
addr16
mov
out
nop
cmp
pop
inc
adc
mov
jge
lret
cwtl
and
or
adc
ljmp
dec
popf
sub
aas
adc
daa
xchg
sub
sub
sti
movsb
addr16
pop
outsl
and
push
pop
pop
jle
push
test
shll
adc
fadds
int3
pop
cmp
ret
xchg
notl
imul
add
push
mov
add
fnstenv
int
sti
and
in
repnz
testl
mov
loope
adc
or
mov
dec
dec
or
sub
inc
mov
mov
mov
dec
outsb
xchg
repz
lock
je
bound
ret
sub
scas
cmp
push
mov
and
xchg
lds
lods
jae
std
test
addr16
dec
rolb
or
jo
and
adc
jp
stc
mov
es
pop
jl
fwait
sub
inc
cltd
into
sbb
test
jg
in
add
xchg
std
inc
jns
movsl
pop
add
test
xchg
cmp
adc
and
inc
imul
and
lods
and
push
xor
scas
sti
and
dec
adc
bound
ja
cmp
adc
cmp
add
xchg
lret
nop
mov
enter
xor
push
fwait
popf
sbbl
data16
rcll
jnp
cltd
add
xor
sbb
mov
repnz
repz
jle
dec
jmp
shlb
adc
lcall
je
jl
jl
into
mov
jns
adc
push
aas
add
dec
jge
xchg
int
cld
scas
lods
xorl
or
inc
gs
mov
mov
xor
jmp
mov
mov
cld
xor
dec
cmp
test
cltd
ds
repz
pop
inc
lock
adc
ljmp
imul
push
lahf
push
outsb
stos
popl
jo
gs
dec
mov
sub
jne
fldenv
lea
lcall
jl
or
aam
pop
inc
mov
jle
fwait
pop
dec
jg
and
aaa
jno
sti
mov
pmaxub
sbb
xchg
mov
icebp
or
arpl
mov
addr16
cmc
bound
stos
dec
nop
xor
xchg
outsb
repz
test
ret
xchg
push
xor
dec
rorb
pushf
xchg
into
dec
jae
loope
cmp
fisubs
test
aam
xchg
outsl
and
leave
test
sub
and
add
jl
jl
popa
aaa
xchg
and
dec
jo
jb
sbb
int3
inc
sub
ds
push
pop
or
movsb
mov
push
jmp
out
ror
push
inc
xor
std
fwait
xor
xchg
testb
jns
xchg
mov
es
mov
jo
je
inc
mov
lret
clc
jg
shll
pop
unpcklps
mov
into
mov
dec
pop
pop
mov
lret
addr16
jmp
add
jmp
fistl
pop
xor
inc
sahf
push
int
mov
mov
xchg
mov
adc
jg
inc
ljmp
and
or
movsb
stos
or
in
sub
push
fsubrs
gs
pop
or
xchg
out
pusha
lret
adc
rorl
mov
ds
xor
scas
xchg
push
or
in
test
adc
or
push
inc
add
add
pusha
iret
mov
cli
scas
pop
fsubp
aas
pop
mov
mov
outsl
push
cmp
int3
test
aas
int3
mov
incb
or
negb
dec
scas
arpl
stos
push
shrb
sub
mov
jl
dec
mov
adc
and
test
dec
test
mov
mov
xor
xchg
push
or
adc
jecxz
stos
nop
rcrl
repz
lock
and
cmpl
pop
mov
cli
mov
orl
mov
pop
outsl
xlat
lods
test
inc
add
sub
mov
outsl
fdivrs
shrb
scas
dec
scas
stc
inc
and
push
mov
mov
or
sub
fs
xor
stos
jno
loope
lret
mov
and
adc
add
rcr
ljmp
stos
mov
inc
mov
cli
out
dec
lret
jno
cmp
push
mov
aaa
jmp
cmpsl
les
lods
sar
sbb
inc
leave
push
inc
or
pop
add
clc
mov
cmp
add
and
xchg
pop
sahf
rcrl
xlat
test
call
sarb
sub
pop
lahf
dec
lret
mov
mov
inc
arpl
sub
pop
and
sti
adc
insb
test
mov
xchg
sub
sbbb
fisttps
cmp
sbb
jp
out
cld
pop
or
adc
push
mov
rcrb
xchg
push
cmpsl
mov
lahf
cld
sub
cld
jmp
mov
dec
xchg
inc
push
jne
aaa
repz
lret
in
icebp
daa
test
jbe
push
xchg
in
mov
fsubp
dec
mov
cmp
sub
insl
sbb
pushf
jp
add
rclb
aaa
and
test
cwtl
out
out
push
into
fs
mov
add
test
push
and
mov
push
mov
mov
jmp
popa
pop
test
sbb
repnz
shll
jl
lcall
fnstcw
dec
mov
paddb
xchg
and
addr16
jg
xor
cmp
mov
pop
iret
sarl
lcall
fidivl
stos
incb
push
adc
push
sub
mov
jp
sub
or
pop
stc
mov
or
and
aas
aaa
movsl
leave
shlb
mov
inc
icebp
jnp
testl
in
movsb
or
lds
lock
mov
divb
mov
pop
or
mov
mov
mov
sub
fldenv
insl
dec
ss
mov
or
push
ljmp
sub
mov
mov
cmp
pop
sub
or
and
sbb
jae,pt
cltd
jno
ret
mov
sti
jp
imul
pop
out
mov
mov
hlt
lods
mov
lods
fwait
adc
fstpl
jmp
adc
pop
int3
mov
mov
rcrl
mov
outsl
push
test
push
es
xor
shlb
das
out
add
test
xchg
loope
jg
rolb
jecxz
fcoml
mov
cs
sarl
int
or
adcl
idivb
cmc
test
enter
mov
fstpt
pop
jae
cmpsb
push
fistpl
ja
loopne
hlt
dec
xchg
mov
jo
fsubr
lea
repz
daa
sti
icebp
push
das
jnp
push
push
fs
fwait
xor
pop
or
xchg
dec
fwait
mov
add
icebp
or
fnstenv
inc
js
mov
call
add
xor
xchg
inc
lock
push
jno
sbb
sub
psrld
add
loope
sub
les
jno
sbb
gs
loop
jae
jl
stos
cwtl
into
xchg
sbb
push
xchg
dec
or
stc
cmpb
cli
movsb
ja
xchg
and
cmpsb
jbe
pop
mov
out
push
mov
aad
fstl
and
jge
aas
mov
lea
lret
and
adc
adc
inc
mov
jle
cmc
sub
add
pop
cli
ds
jecxz
outsb
or
adc
jge
sub
xor
jns
xchg
movb
cmp
cmp
pop
movsl
jne
sbbl
mov
popf
jmp
jbe
jo
fadd
jmp
cmp
jp
inc
add
stos
mov
mov
xor
mov
dec
mov
mov
sbb
dec
cmp
popf
cwtl
ja
icebp
mov
inc
loop
cli
jp
add
xchg
xchg
ljmp
sub
lea
test
pop
sub
mov
sbb
or
or
sbb
repz
out
push
pushf
mov
aas
push
aaa
xchg
push
jecxz
mov
add
jne
iret
and
mov
mov
in
inc
xchg
int3
xor
mov
pop
ss
push
pop
jno
and
call
mov
mov
ja
xlat
and
mov
mov
sub
subl
jecxz
adc
mov
int3
sbb
dec
outsl
ret
daa
imul
roll
xor
jo
sub
ja
popf
pop
mov
cmpsl
insb
cmpsb
pop
inc
mov
sbb
sbb
jae
cli
dec
cmp
mov
sub
push
cmpb
add
dec
mov
or
in
cmp
insl
pop
dec
stos
sbb
mov
testb
shr
cmpl
xchg
int
sahf
and
aas
orl
and
das
movsl
enter
nop
mov
push
mov
xor
jmp
in
sbb
mov
aaa
cmpsl
sub
add
xor
mov
int
hlt
rorb
decl
movzbl
cmpsl
pop
daa
pop
int
js
pushf
jo
cmp
mov
mov
adc
add
cltd
cmp
mov
clc
adc
daa
data16
xor
sbb
aam
repnz
mov
dec
stos
inc
jbe
adc
jb
xor
cmpsl
cs
push
mov
cld
cmpsl
and
fstps
loop
jge
add
pop
mov
xchg
pop
mov
push
mov
adc
jne
rcrb
pop
jns
xchg
callw
add
cli
lret
mov
fbld
and
clc
sarb
sbb
shrd
ja
xchg
mov
cwtl
xchg
int3
jge
mov
sub
jg
scas
jbe
and
jne
das
or
mov
add
imul
mov
ss
ffreep
mov
pop
fisubrs
cmp
ret
call
mov
imul
xchg
mov
aad
fldl
mov
insb
sub
xlat
je
dec
mov
scas
mov
and
arpl
or
shlb
push
jnp
jle
outsl
push
xchg
or
ljmp
mov
stc
xor
cmp
fwait
popa
ret
lcall
push
mov
jl
cld
sub
stos
mov
fwait
jnp
fs
inc
mov
leave
push
add
cltd
int
mov
xchg
push
xchg
enter
mov
pop
push
hlt
cmp
repz
mov
mov
adc
mov
or
cs
mov
jbe
movsl
xor
sbb
adc
mov
in
pop
std
movsl
sbb
popa
popf
ds
sub
aas
mov
mov
repnz
loope
push
int
sub
pushf
mov
pop
mov
jle
clc
insl
aam
adc
adc
imul
or
js
add
xor
cltd
push
mov
aaa
cmp
pushf
mov
jl
add
out
lock
jae
imul
loope
test
mov
mov
and
jo
cli
or
dec
and
inc
mov
mov
iret
pop
and
dec
mov
fstl
adc
push
fs
shrl
popf
repnz
mov
xchg
and
pop
jp
dec
rorl
js
or
jge
fnsave
pmullw
movsl
shrl
pop
das
shl
js
push
xor
sbb
rcr
mov
or
mov
jb
test
push
orb
cli
call
push
out
je
test
inc
leave
xor
cmpsl
push
cmp
rcl
fs
insb
stos
cs
movsl
pop
and
jnp
test
push
mov
add
mov
mov
cld
sar
sub
insl
stc
loope
push
pop
fdivrs
adc
mov
jg
xor
jo
cmp
xor
bnd
xor
out
dec
mov
sbb
fwait
add
sarl
repz
or
dec
add
cs
cmp
loop
out
enter
xchg
aas
sub
and
jb
sbbl
cmpsl
adc
mov
lcall
arpl
inc
cmp
push
aam
mov
push
push
fcoml
mov
push
movl
push
push
lock
out
pusha
inc
sub
push
cmp
adc
decb
xor
cmp
xchg
outsl
adc
adc
inc
mov
fisttpll
xchg
cs
push
movsb
popf
leave
lods
xchg
sub
xor
shll
push
sub
cli
scas
fidivrs
mov
xchg
mov
mov
sub
jp
inc
mov
or
mov
dec
jne
ds
jae
pop
in
test
fucomp
je
pcmpgtb
add
ljmp
mov
cmp
call
out
arpl
cld
mov
xchg
hlt
cmpsl
or
loope
add
cld
rolb
jge
int3
int
dec
stc
xchg
mov
sbb
orl
hlt
repnz
or
pop
sub
fisttpll
scas
dec
fadd
ret
sub
add
and
pusha
mov
xor
bound
or
sub
push
adc
movsl
mov
inc
mov
ds
mov
cmp
push
push
rclb
out
mov
mov
adc
cltd
int3
mov
fdivrl
dec
or
lret
mov
in
out
xchg
add
ja
sahf
jae
inc
inc
adc
pusha
inc
dec
fldt
mov
bound
cld
popf
inc
xor
lds
jp
mov
add
insb
out
push
mov
pop
jnp
out
cmp
mov
xor
data16
adc
pop
stos
lcall
xchg
scas
pop
or
pop
push
pop
or
jmp
push
cmp
cmp
out
pusha
or
jp
add
inc
add
int3
push
roll
fwait
mov
movsl
lret
ljmp
xchg
das
addr16
mov
push
jae
hlt
xchg
stos
iret
add
js
out
lock
and
test
pop
mov
add
push
mov
adc
or
jl
jo
jbe
inc
pop
into
lret
shrl
in
mov
cmp
fcoml
je
xchg
dec
xchg
push
nop
notl
test
or
sti
mov
dec
inc
push
lret
jbe
mov
fistl
rcr
jmp
inc
push
fadds
or
inc
push
cld
cmp
outsl
xchg
mov
sbb
add
add
movsl
sarl
jae
cltd
and
and
test
lods
jo
into
dec
inc
cmp
jp
pop
push
xor
andb
subl
and
jge
ds
scas
xchg
sti
sarb
pop
dec
addr16
pop
lahf
push
sbb
fs
aam
mov
mov
adc
and
js
pushf
xchg
andb
dec
push
decl
push
push
pop
mov
int
bound
xchg
cmpsl
pop
loop
fwait
mov
sahf
and
repnz
fisubrl
fwait
es
mov
pop
sbb
jmp
stc
xchg
je
pop
inc
testl
xchg
mov
mov
or
ss
int3
mov
sbb
xchg
pusha
push
out
adc
rorl
cmpb
cs
jecxz
pop
in
dec
mov
dec
add
test
xchg
and
jmp
or
aas
push
mov
push
and
shlb
xchg
inc
jbe
add
lock
jb
cmp
push
jno
test
xchg
push
addb
in
mov
sbb
icebp
jnp
repz
mov
test
mov
mov
stc
popa
test
push
xchg
mov
or
lcall
xchg
mov
mov
imul
fdivrs
out
hlt
sub
movsl
test
fisubrl
fdivrl
ficoms
dec
jbe
leave
add
sbb
or
mov
sub
movsb
jge
repz
add
repnz
xchg
ljmp
iret
xor
daa
pop
pop
test
jge
add
idivb
lret
xor
aad
inc
enter
in
insl
mov
ret
cmp
icebp
inc
cmp
sti
lds
arpl
and
pop
sbb
jno
stos
scas
mov
xor
xor
lods
pop
mov
dec
or
outsl
mov
lods
das
inc
push
dec
dec
push
loop
lahf
popf
mov
xorb
and
xor
addr16
repnz
mov
mov
xchg
mov
lds
jmp
dec
nop
test
mov
jge
inc
fldenv
in
enter
outsb
out
pop
xor
sbb
call
cltd
mov
aam
out
icebp
mov
push
dec
cmp
xor
push
mov
xchg
cmp
iret
movsl
arpl
int3
push
ret
ret
js
outsb
sub
std
into
scas
sbb
push
aas
lcall
ljmp
lret
int
js
vrsqrtps
xchg
push
cmp
add
push
lret
das
adc
notl
sarb
add
jmp
imul
enter
mov
xor
mov
or
ja
int3
lcall
std
xchg
ret
sub
sbb
out
push
and
stc
mov
sarl
shll
das
daa
rolb
mov
ret
repnz
or
xchg
jne
les
les
hlt
cwtl
loop
push
sbb
sbb
aad
pop
test
inc
faddl
push
xchg
push
mov
fstl
ja
inc
cmp
cmc
mov
sub
jns
lea
popl
push
sub
push
xor
outsb
popf
aas
pop
mov
imul
repz
gs
loopne
cmp
js
cld
jnp
je
scas
jle
fnsave
leave
pop
fiadds
pusha
dec
sbb
mov
cltd
jg,pn
cmp
xchg
dec
dec
and
decb
mov
push
jo
push
inc
and
xor
pop
enter
push
or
mov
or
nop
into
scas
ss
push
insl
mov
cltd
mov
pusha
in
addr16
nop
idivb
nop
test
pusha
mov
sub
jb
cmp
adc
sti
inc
adc
sahf
cld
or
jmp
and
mov
loop
cli
mov
pop
sub
xorl
adc
cmpsl
stc
loope
jmp
in
sbb
xchg
rol
ja
adc
out
iret
xlat
data16
cmp
stc
sub
mov
or
outsl
push
jnp
xchg
cmpsb
in
sub
repnz
mov
cmp
addr16
mov
movsb
xor
ja
sub
gs
xchg
pop
cmp
insl
in
rclb
je
cwtl
aas
int3
ret
movsb
jecxz
dec
push
dec
loope
mov
sbb
cmp
lcall
insl
outsl
cmp
imul
push
sub
sbbb
sub
pusha
repnz
les
or
pop
jno
int
cmpsb
testl
mov
cmp
negl
add
jo
sar
xor
cmp
cmp
add
mov
jbe
xchg
pusha
dec
or
imul
mov
dec
jge
jb
sub
das
stos
mov
xchg
in
sub
test
ljmp
or
mov
mov
mov
adc
mov
dec
add
pop
sti
adc
or
fdiv
push
mov
movsb
inc
jmp
push
add
jge
addl
dec
aaa
xor
call
fsubs
test
pop
mov
jle
jae
fstpt
lret
sti
inc
je
outsb
call
push
adcb
inc
or
outsl
ljmp
sub
sub
and
pop
mov
xchg
pop
andl
mov
lahf
adc
xor
ret
nop
mov
cmpsb
xchg
das
xchg
inc
aam
inc
inc
aas
inc
pop
sub
std
jp
stc
ljmp
fbstp
sbb
lea
inc
or
xchg
mov
cmp
push
xchg
mov
cltd
pop
sbb
pop
cmp
lods
dec
jo
push
inc
cmp
xchg
mov
dec
sti
shrb
adc
sahf
idivb
out
xchg
add
out
imul
jbe
ds
xor
mov
push
xor
pop
mov
std
push
adc
pop
push
and
push
fwait
push
xchg
cmp
leave
cmp
out
sbb
and
test
mul
testl
sub
xchg
mov
add
mov
dec
arpl
pop
sbb
test
pop
push
subb
nop
xor
jecxz
xchg
out
or
outsl
lds
xchg
pop
jns
mov
xchg
sub
push
imul
idiv
mov
xchg
test
jmp
or
int
pop
cmp
test
xor
adc
lret
push
mov
push
xchg
test
out
jecxz
inc
and
jle
dec
add
push
jg
bound
mov
pop
dec
inc
adc
cli
cmp
lds
fbld
jge
dec
mov
jnp
and
add
vmovdqa
lret
inc
repnz
pushf
pop
cmpsb
jo
shrl
or
shll
enter
lahf
inc
mov
mov
xor
and
xchg
lret
inc
push
sub
leave
sbb
out
add
dec
std
test
mov
mov
or
mov
aaa
cmpsl
push
idivl
pusha
xchg
mov
jno
ficoml
lahf
daa
push
xor
xor
lret
push
or
pop
lahf
les
pop
jbe
iret
add
int
insb
adc
lcall
and
push
adc
sub
mov
mov
mov
and
int
adc
pop
iret
dec
adc
nop
ljmp
insl
gs
lret
mov
emms
out
adc
ss
inc
dec
fs
mov
inc
ret
cwtl
iret
es
xchg
es
out
out
sub
aad
mov
aaa
outsb
adc
adc
mov
dec
add
rorb
call
das
fxam
insl
nop
sub
or
scas
in
mov
jl
roll
pusha
fsubs
popf
in
and
clc
jb
pop
jb
repz
inc
cmp
fwait
jne
push
aad
sub
cmpsb
push
push
xchg
mov
dec
repnz
movsb
push
push
cwtl
fadd
xchg
cltd
xor
test
popf
mov
xchg
xchg
adc
pop
out
push
sub
mov
insb
mov
jns
scas
rcll
imul
fwait
outsb
popl
mov
lcall
add
inc
das
inc
inc
lret
les
into
push
jmp
pushf
xor
mov
inc
int3
sahf
dec
mov
xchg
jg
push
loopne
data16
jg
imulb
clc
pop
insb
sbb
movsl
aad
adc
xchg
dec
adc
neg
and
xchg
xchg
mov
imul
in
and
stos
fdivrp
adc
fildll
loope
mov
stc
pop
enter
leave
dec
imulb
test
xor
mov
in
mov
inc
dec
loopne
test
jle
add
aad
int3
cmp
stc
mov
cmp
imul
cs
add
pop
xchg
pop
roll
mov
xorl
mov
js
push
and
mov
aam
cmpsb
xor
shll
mov
in
sub
add
cmp
jmp
or
xchg
imul
sub
or
sahf
mov
dec
repnz
pop
les
sub
or
lods
test
mov
cwtl
xor
jbe
sub
test
cwtl
leave
pop
sub
inc
ss
sbb
cwtl
fiaddl
repnz
cmc
loop
mov
in
mov
imul
adc
cmp
xchg
in
fsubrs
sub
scas
aaa
inc
mov
sub
inc
sarb
add
jg
push
mov
mov
xchg
cmp
leave
cmp
pop
push
jge
dec
ret
icebp
mov
aad
or
orl
idivb
idivl
shlb
push
mov
or
inc
insl
push
jns
nop
cmp
es
test
cmpl
nop
jp
div
je
cwtl
pop
lods
mov
ret
adc
into
aad
cmp
pusha
js
inc
inc
rcrb
mov
pop
mov
mov
jns
test
in
data16
pop
cmp
fiaddl
test
out
adc
ljmp
insl
adc
jb
and
stos
enter
ja
mov
div
mov
movsl
jbe
inc
ss
xchg
daa
jp
mov
out
push
or
sbb
add
and
test
nop
in
mov
in
loope
popa
fistpl
out
ret
jl
rorl
dec
lret
xchg
jmp
adc
push
and
dec
sbb
movsb
xor
inc
add
pushf
fisttps
call
dec
repz
mulb
outsl
outsl
clc
ficompl
and
mov
stos
pop
jle
insb
in
pop
sub
rorb
add
pop
add
insb
in
add
xchg
js
push
lahf
in
popa
or
mov
lret
or
cmp
and
ja
and
lahf
jno
das
mov
shl
das
jns
push
ret
pop
imul
sbb
and
daa
xchg
adc
mov
cmpsl
mov
or
push
fldcw
daa
or
mov
mov
jnp
jo
jns
xchg
jecxz
jle
mov
jge
adc
fmul
aas
pop
pop
dec
aas
mov
roll
push
popl
jge
xchg
or
xor
sbb
jb
fwait
fs
push
xor
insl
shlb
mov
leave
mov
push
push
les
repz
mov
pop
arpl
mov
insl
push
xchg
outsl
dec
mov
push
pusha
sbb
mov
xchg
orb
or
cwtl
or
and
lods
out
jne
jge
insl
mov
pop
push
adc
mov
xor
fisttpl
cmp
jbe
dec
adc
insb
jg
mov
aam
sub
jmp
lahf
inc
enter
xlat
ljmp
push
test
aas
lods
popf
jmp
adc
aam
or
xchg
hlt
cli
inc
aaa
call
sub
mov
cmp
mov
ljmp
aas
aam
mov
sub
mov
fcomp
lahf
out
adc
jge
jl
stos
push
push
xchg
or
and
inc
push
insl
out
pop
in
cli
fldt
es
nop
sub
sbb
push
add
mov
pop
je
dec
adc
lcall
aad
hlt
sbb
rorl
outsb
jecxz
jb
movsb
push
dec
sbb
bound
mov
cmp
mov
sub
sub
lret
js
cmpsl
pop
jmp
icebp
sar
sahf
jl
aas
nop
sbb
repz
mov
test
xchg
adc
pushf
adc
fs
into
repnz
mov
cmp
sub
jecxz
out
jns
jnp
fmulp
test
mov
mov
push
dec
cli
cli
adc
aaa
imul
inc
mov
mov
dec
rolb
inc
data16
inc
cwtl
xchg
test
ret
pop
loop
lcall
call
mov
in
add
sub
inc
lcall
loope
pushf
lods
xchg
movsb
xchg
cmp
pushf
dec
addr16
es
sub
mov
sbb
int
sbb
jmp
sti
inc
push
mov
or
push
jle
enter
sbb
xchg
outsb
sbb
jmp
push
xchg
imul
pop
jmp
jbe
jo
push
add
aam
adcb
loop
es
fs
mov
mov
sbb
nop
cmp
ljmp
push
and
push
mov
mov
push
add
add
add
notb
test
mov
mov
enter
adc
mov
ja
cmpsl
leave
or
mov
mov
pop
cli
push
dec
icebp
in
call
int
jns
cmp
cmp
out
inc
mov
fidivs
dec
lcall
jg
xlat
add
add
mov
pmuludq
loop
cli
test
push
xchg
inc
sub
push
pop
sbb
loopne
add
mov
sub
and
inc
out
sub
sub
jecxz
mov
mov
stc
rcrb
jbe
stos
shlb
cltd
pop
fsubrs
jne
into
cmp
test
enter
push
hlt
adc
mov
lea
sbb
mov
jae
adc
dec
sbb
or
lcall
xlat
in
fstpl
mov
push
add
pushf
and
mov
inc
pop
or
das
insb
mov
mov
add
push
mov
dec
lahf
adc
nop
push
mov
sbb
cli
stos
test
mov
lahf
ret
xor
jo
mov
adc
ret
xchg
test
mov
dec
cmp
jbe
cmp
shrl
jne
pop
or
xchg
lods
inc
mov
jnp
fwait
jg
push
inc
outsl
mov
rcrb
int
idivl
and
push
xchg
jae
mov
jo
lods
mov
pop
scas
inc
mov
cmp
movsb
arpl
dec
pop
jbe
pop
and
dec
pop
std
lahf
in
and
andb
out
dec
and
mov
mull
gs
dec
out
idiv
sub
fldt
rcrl
mov
inc
xchg
jge
test
pop
fisubrl
pop
mov
inc
loope
xor
int
push
sbb
xor
enter
or
arpl
push
ret
or
pop
inc
dec
add
inc
xlat
enter
jecxz
lcall
mov
jno
lahf
enter
sbb
dec
inc
lret
stc
pop
test
adc
or
push
or
fisubs
add
push
pop
sub
ret
scas
nop
adc
sub
mov
mov
mov
mov
lcall
pop
addb
push
jmp
outsl
jns
push
jle
jmp
bound
mov
mov
or
dec
pop
fidivrs
pop
xchg
loope
adc
mov
push
push
addr16
in
data16
fsts
pop
out
cmp
fadd
lret
addr16
pushf
shll
push
jbe
fldl
nop
dec
and
mov
xor
enter
or
jne
mov
repz
fnstcw
dec
pop
fnstcw
or
and
or
popa
mov
outsl
and
add
sub
mov
cmp
xchg
shr
dec
mov
fisubrl
decl
fcom
mov
les
arpl
xchg
xor
mov
jp
jmp
pop
sahf
jb
fnstenv
sbb
cmc
pop
repz
xchg
mov
nop
jmpw
and
fsts
cs
xor
iret
inc
idivb
subb
mov
adc
iret
cmp
inc
dec
jg
nop
iret
jnp
sbb
jmp
stos
and
jle
addl
inc
push
cmc
inc
xchg
enter
jo
mov
mov
lods
pop
jg
xchg
or
insl
cltd
cmp
or
sahf
call
fcmovb
adc
push
pop
jae,pn
loop
mov
scas
popa
mov
push
lock
or
inc
xchg
icebp
pop
cmp
clc
sub
jo
cltd
cmp
sarl
push
dec
movsl
jmp
xchg
xor
repz
push
rcl
jmp
stc
push
sahf
inc
cltd
and
pop
jge
push
out
call
dec
xor
fadds
mov
push
mov
mov
dec
lret
pop
cmp
pop
insl
fmull
ja
inc
inc
xor
in
sub
test
sub
sub
mov
imul
push
orb
xor
and
clc
mov
push
orb
inc
fsubrl
pop
int3
pop
pusha
scas
bound
out
mov
mov
loope
or
stc
adc
push
mov
mov
sub
mov
xlat
in
and
in
pop
pop
mov
jo
inc
cltd
call
push
stc
repz
inc
adc
ljmp
mov
lock
scas
xor
sbb
xchg
out
push
xor
mov
outsb
xor
mov
adc
mov
and
insl
int3
add
icebp
lret
xchg
test
sar
xlat
outsl
push
sbb
test
cmp
cmpsl
push
lea
gs
arpl
loope
push
pop
nop
adc
mov
mov
cmp
lcall
pusha
rcrl
lods
cs
mov
fsubs
jg
jne
outsb
rcrb
sub
addr16
int
mov
mov
repnz
fucomip
fucomp
xchg
xor
das
xchg
sbb
sub
cmpsb
adc
test
dec
dec
clc
and
mov
pusha
dec
test
call
rcrb
sarl
iret
mov
add
xlat
add
out
in
sbb
mov
stos
shl
mov
lret
fdivrl
test
push
insb
mov
mov
inc
stos
mov
pmullw
push
outsl
and
outsl
mov
cmp
lock
xchg
xor
into
nop
or
mov
test
mov
inc
mov
stc
add
dec
pushf
cmp
icebp
pop
popl
test
stos
iret
push
pop
push
push
cmp
mov
add
xchg
inc
rclb
test
shlb
dec
aaa
xchg
into
sbb
mov
cmpsl
mov
xchg
ljmpw
inc
dec
in
test
call
mov
rol
pop
mov
lock
js
xchg
rorl
sub
fisttps
xor
mov
jo
test
hlt
imul
xor
mov
std
insl
aam
mov
pusha
add
sbb
push
cs
leave
insl
dec
mov
mov
sbb
xchg
cmp
dec
add
fwait
xor
and
pop
xchg
cmpsb
int3
stc
lcall
inc
add
or
fdivr
or
adc
push
call
jg
addr16
and
push
ret
dec
rorl
in
cltd
xlat
ror
call
push
sub
popa
popa
daa
mov
insb
jne
jge
pushf
adc
push
sub
mov
int
mov
ret
push
xor
jl
adc
adc
sub
iret
xor
xor
into
mov
xchg
out
lea
sbb
push
jp
dec
stos
mov
xchg
sub
cld
decb
or
sti
jmp
insl
mov
xor
nop
dec
pop
sub
arpl
call
pop
fbld
fildl
aad
pusha
movsb
push
out
inc
fwait
sub
sub
inc
insl
jbe
push
ret
femms
xlat
jae
scas
xchg
out
bound
xchg
xchg
shlb
dec
push
scas
iret
pushf
pop
int
xor
and
add
fistpl
lahf
push
rcll
test
mov
cmp
mov
pop
xchg
imul
xor
pop
push
es
in
xor
aam
adc
inc
and
sub
xlat
lahf
sbb
jno
pop
andl
lods
jae
movsl
int3
add
mov
ja
xchg
int
mov
mov
lret
xor
push
ss
pop
jnp
stos
in
mov
push
xor
pushf
or
in
arpl
stos
mov
repnz
adc
xchg
push
mov
mov
and
ret
leave
and
add
inc
sbb
shlb
dec
daa
mov
xchg
sti
stc
enter
pop
or
jne
adc
mov
push
daa
pop
daa
inc
sbb
xchg
sub
popa
cmp
arpl
pop
nop
pop
pop
mov
imul
jmp
pop
fbld
in
pop
push
cmc
xor
pushf
ljmp
fsts
orl
pop
int3
inc
fs
adcb
test
sbb
cmp
out
push
lret
mov
les
cs
lea
jbe
aam
rcl
xor
mov
popf
shlb
jbe
dec
nop
xor
mov
or
or
aad
push
movsb
in
pushf
lods
data16
sub
jge
xchg
scas
xchg
mov
ja
cmpsb
imul
sbb
adc
scas
js
addr16
mov
push
or
and
insl
push
mov
pop
push
and
pop
dec
mov
fidivs
jl
jbe
notl
call
jae
add
mov
push
enter
dec
out
jnp
push
popa
add
addb
ss
jb
je
sub
mov
xor
jbe
xchg
icebp
enter
aam
fcomps
loop
dec
xchg
mov
loope
adc
cmp
jnp
pop
popa
fstpt
test
or
cmpsb
aam
aas
scas
mov
pop
pop
ficoml
xlat
aad
lret
and
fidivl
lcall
mov
fwait
rcr
lahf
xchg
jmp
les
fnstenv
cs
cmp
in
mov
fnstenv
shlb
push
out
inc
lcall
sbb
std
pop
xor
pushf
jae
mov
or
sub
neg
jno
add
pop
loopne
sbb
fildl
lock
lret
push
xlat
add
in
lods
scas
incb
aaa
ret
or
push
inc
dec
xchg
xchg
push
shrb
iret
pop
mov
ljmp
pop
fmull
hlt
imul
insl
subb
cwtl
imul
sbb
push
ret
pop
mov
andl
int3
dec
aaa
pop
xor
xor
mov
out
push
lods
cltd
aaa
leave
leave
movntq
out
test
int3
sub
nop
mov
fsubs
jle
mov
sbb
pop
std
cmpsb
fsts
out
xor
xchg
mov
inc
loopne
dec
and
add
repnz
lods
out
mov
scas
fwait
xor
push
dec
scas
mov
repz
lret
mov
cmpsl
and
fisubrs
push
mov
add
ljmp
mov
xchg
nop
inc
add
cli
push
nop
iret
lds
into
ss
icebp
mov
mov
mov
xor
inc
fldenv
adc
fs
in
popf
pop
mov
movsb
sub
pop
lcall
pop
popl
fidivrl
sbb
stos
leave
lds
je
lahf
jl
lcall
addb
xchg
and
jmp
mov
or
int
iret
pop
data16
cld
andb
sbb
add
mov
mov
pop
and
notb
jno
fcompl
filds
stos
lret
dec
pop
repz
bound
jge
dec
adc
mov
popf
jle
mov
mov
jo
mov
pop
xchg
add
ljmp
sbb
sub
popa
mov
or
stos
jmp
add
push
nop
mov
dec
push
call
cmp
mov
inc
xchg
cld
mov
addb
mov
cmpsb
insl
movsb
dec
call
leave
cld
xchg
cmp
out
les
lds
les
mov
mov
cli
lds
dec
outsb
adc
out
ljmp
imul
dec
repz
inc
dec
push
fnstcw
rep
out
inc
inc
arpl
mov
pusha
in
sti
sbb
push
xchg
leave
repz
or
icebp
lods
and
adc
int
das
aas
jge
aaa
push
idivl
xchg
clc
cmp
cs
mov
lret
push
stos
imulb
lock
in
inc
mov
ret
mov
lods
xor
push
push
lods
out
int
jmp
push
aaa
push
mov
pop
pop
jp
and
dec
out
cmp
imul
dec
aas
jl
dec
or
frstor
inc
mov
cmpsb
and
mov
sub
sbb
dec
inc
mov
into
push
and
cmp
sub
cmpsw
fidivs
test
movsb
push
in
scas
sti
mov
add
arpl
add
lods
mov
in
mov
popa
loope
push
mov
jp
cmp
mov
and
inc
pusha
imul
data16
pop
xor
lock
inc
jns
mov
jne
popf
orb
push
shlb
xchg
adc
inc
mov
jmp
mov
cmc
test
add
xchg
pop
xchg
pusha
pop
flds
mov
cmp
jne
daa
cmp
xchg
aaa
outsb
pop
fildll
cmpsl
icebp
dec
mov
mov
stos
xor
inc
aad
sarl
jo
pop
out
imul
push
int3
jmp
cli
cmp
cltd
gs
mov
pushf
fsubs
sbb
or
adc
sbb
adc
andl
jg
decl
jne
cld
mov
jbe
mov
pop
xor
addr16
push
out
pusha
add
ret
out
idivb
cmp
lock
flds
outsb
cmp
addb
repz
xor
in
jns
out
mov
xchg
pop
push
insb
popf
pusha
fwait
out
xchg
insl
jno
add
ds
in
mov
inc
sub
outsl
sbb
adc
lret
test
das
mov
lock
xchg
cmovne
jne
or
add
add
xchg
cmp
loop
sbb
sbb
dec
out
aad
dec
mov
mull
loop
movsl
dec
adc
cmpl
add
stos
mov
mov
scas
sarb
xor
jbe
push
or
and
test
mov
ja
xchg
mov
jecxz
imul
push
mov
xlat
mov
ret
jle
push
sub
xor
cmp
int3
or
std
in
push
sahf
hlt
insb
int3
outsb
pushf
sub
fucom
pusha
aaa
lret
push
mov
jbe
push
fcoms
mov
bound
pop
rcr
ss
in
lock
jl
pop
xchg
jno
adc
imul
push
mov
push
pusha
mov
xchg
inc
mov
lcall
dec
lret
aas
iret
sbb
xor
xchg
and
fiaddl
cmpsb
dec
roll
movsb
pushf
sbb
enter
cmp
in
push
xchg
add
icebp
jge
mov
aaa
in
movsb
mov
adc
loopne
jle
enter
ds
cmp
fnsave
arpl
sub
adc
mov
sub
mov
inc
adc
dec
mov
cmp
bound
adc
adc
bound
cmp
xchg
test
xchg
fildll
inc
mov
add
dec
int
orl
out
pop
pop
and
inc
in
daa
and
cmc
subb
dec
push
sbb
in
push
pop
leave
jp
add
inc
mov
mov
rcr
cld
rcrb
mov
inc
or
pop
in
sub
pusha
in
out
xchg
test
xchg
adc
push
or
incl
popf
imul
stos
stc
ds
jp
cmp
hlt
and
pusha
jne
not
mov
push
popf
outsl
in
push
lret
jnp
lahf
das
stos
call
mov
ret
jg
or
call
mov
jl
inc
popa
cmp
adc
hlt
or
and
int3
imul
xchg
mov
pop
mov
xor
cli
les
mov
stc
push
inc
xor
frstor
lret
dec
sub
dec
lods
cmp
orb
push
add
push
ss
lods
int3
aaa
dec
popa
pusha
jg
sub
mov
xor
and
leave
pop
lcall
cmc
and
pop
gs
sbb
pusha
push
insl
fiadds
lock
loop
push
out
outsb
sub
out
test
mov
mov
and
icebp
lret
xor
adc
mov
pop
cmp
mov
sbb
imul
jnp
pop
sbb
jne
daa
test
sub
inc
jg
xchg
and
mov
add
jno
das
sub
shlb
push
pop
inc
mov
mov
pop
movsb
mov
push
dec
cs
lods
ret
add
repnz
xchg
sbb
fstl
mov
ss
sbb
scas
xchg
jmpw
movsb
xchg
push
add
mov
xor
shlb
adc
cwtl
jae
or
ret
xor
std
push
lcall
cmp
xchg
nop
adc
mov
mov
lret
adc
and
and
loopne
aam
adc
repnz
rcll
in
lret
loopne
inc
pop
mov
arpl
pop
outsl
pop
jl
jne
and
adc
cmc
adc
xor
das
test
mov
nop
fnsave
sub
mov
popf
sbb
int
lcall
sti
inc
add
xchg
jbe
xor
out
aam
inc
into
xlat
xchg
shrb
pop
test
push
xor
inc
sub
mov
pop
mov
fs
cmpsb
cld
addr16
cld
notb
aas
out
stos
adc
scas
xchg
shrb
stc
xor
mov
cwtl
adcb
push
push
pop
mov
fcoms
ljmp
xchg
cmp
fcoml
outsb
mov
cmp
adc
mov
mov
ficompl
inc
fildl
aaa
xchg
lret
cmp
xor
cwtl
jno
pop
je
pop
mov
js
pusha
jle
add
cld
repnz
dec
outsb
dec
xor
aam
popf
jo
cmc
pop
xchg
scas
adc
dec
out
dec
addr16
mov
aas
stos
cmp
lea
inc
in
fnstcw
jmp
fdivrl
stos
pop
jo
adc
int
xchg
cmp
mov
xorb
fwait
dec
fisttps
stc
mov
cmp
pop
cwtl
add
sbb
mov
mov
test
pop
sub
loopne
stos
leave
int3
add
and
xor
cmp
and
and
jecxz
jg
inc
inc
mov
mov
cmp
dec
cmpsl
jle
daa
cmp
sub
arpl
mov
pop
ja
jmp
mov
xchg
sub
cwtl
or
mov
push
notl
push
dec
dec
outsb
dec
das
aam
xlat
sbb
int3
xor
movsl
je
adc
xor
mov
jp
add
sbb
loopne
add
mov
adc
xchg
stc
sti
inc
idivb
push
jecxz
xchg
out
mov
in
xchg
dec
sahf
mov
mov
movsb
sbb
mov
arpl
ljmp
popf
into
ds
cmp
and
adc
push
ss
inc
push
xchg
loope
testb
jno
xchg
mov
push
mov
inc
outsl
dec
outsl
push
divb
es
xor
cmp
cmpsl
pop
aaa
je
or
jae
hlt
push
rorl
pop
bound
sub
pop
xchg
cli
ja
cmp
adc
fs
sarb
sub
in
std
inc
rcll
dec
xchg
enter
mov
pop
pop
gs
pushf
orb
cmp
cmpsb
mov
mov
jg
sbb
adc
xchg
enter
mov
sub
mov
pushf
ss
loopne
add
sbb
xor
cmp
xchg
cmp
int3
pop
movsb
cmpsb
adc
aam
data16
sbb
add
xchg
mov
aas
in
sub
pop
cmp
mov
sub
outsl
ret
fistpl
sbb
gs
dec
push
dec
pop
sub
jmp
push
pop
pop
jl
xor
loop
xchg
add
jnp
sbb
push
icebp
ds
add
push
inc
cmpl
mov
mov
rcrl
lods
jmp
clc
aam
xor
sbb
inc
pop
ret
movsb
insb
or
adc
xor
iret
cwtl
aaa
roll
shlb
push
dec
pop
fstp
push
gs
mov
dec
mov
mov
xor
push
cli
ds
dec
jnp
jb
jne
fadd
decb
push
sar
pusha
xchg
mov
mov
call
pop
fldt
aaa
mov
pop
cmp
aad
and
jecxz
sub
pop
adc
adc
ss
jle
sub
xchg
jae
cmpb
lret
fisubs
inc
lahf
adc
loop
mov
icebp
lret
mov
test
pop
lcall
imul
jge
push
jb
mov
ljmp
pop
cli
shrb
jae
xor
and
std
push
mov
fisubl
loopne
mov
sub
ror
xorl
idivb
das
in
lods
push
divl
cmp
das
clc
push
cmp
testb
push
mov
pop
movsb
xchg
movsb
inc
fwait
mov
clc
mov
dec
jb
push
or
add
ficomps
jo
stos
fbld
ret
insl
xchg
pop
leave
xchg
xchg
lahf
pop
aaa
xor
fisubl
xchg
push
daa
mov
inc
push
cli
clc
sub
scas
insb
xlat
mov
dec
mov
add
add
jo
stos
notl
lret
jmp
mov
xchg
lods
push
movsb
dec
arpl
loopne
dec
fs
jno
mov
fsub
dec
fstl
xchg
adc
inc
in
jg
cmp
cmp
push
leave
push
push
or
pop
in
arpl
aaa
movsb
jbe
pop
push
ds
lods
movlps
gs
cmpsl
mov
cltd
mov
xchg
aad
mov
stos
dec
movsb
xchg
jbe
sbb
aad
dec
int
dec
jl
ret
jb
push
sub
in
sub
lret
sbb
adc
testl
push
dec
popf
insb
xchg
and
xlat
mov
xchg
es
test
incb
fnstsw
cltd
mov
adc
push
hlt
jecxz
cmpsb
test
cmp
sti
movsb
inc
adc
xchg
xchg
mov
mov
sbb
sbb
jecxz
sti
inc
jecxz
lods
mov
loop
adc
push
cld
and
cmp
xchg
lret
sbb
outsb
and
shl
pop
adc
das
mov
scas
sub
icebp
or
shlb
cli
cmpsb
push
sbb
stos
lock
inc
jbe
les
lds
xchg
mov
ret
or
fdivrp
fldl
push
int
add
xchg
push
cmp
add
lcall
pushf
pop
fsubl
xchg
out
sub
lds
pop
insl
in
pop
pop
daa
adc
and
mov
dec
add
lds
movsl
hlt
pop
jmp
loopne
es
push
out
test
adc
xchg
ficomps
sub
push
loope
xor
addr16
pop
jbe
mov
stos
shrl
sti
test
jne
cmp
in
xlat
aas
leave
or
cmp
inc
loop
psadbw
jmp
or
cld
lret
lahf
pop
repz
es
add
mov
mov
jmp
jno
repz
push
or
mov
sbb
fcoms
inc
xchg
in
push
inc
aas
loopne
mov
aam
inc
call
add
lock
xchg
cwtl
call
clc
clc
push
push
mov
mov
fcomi
fwait
jb
or
adc
pop
imul
movl
add
xchg
mov
xchg
pushf
sub
cmp
movsb
mov
jge
and
pop
mov
mov
push
out
add
cmp
jl
repz
ds
aaa
stc
jne
dec
or
ret
movsb
testb
out
fstps
cmpsl
movsb
movsb
out
pop
sar
or
xchg
xchg
mov
mov
bound
xlat
int
movsl
mov
push
pop
je
int
mov
sbb
mov
mov
jae
pop
sub
mov
dec
outsb
xchg
mov
sbb
stos
bound
jbe
xchg
popw
lahf
test
dec
mov
cltd
out
rcr
mov
inc
stos
data16
jl
push
inc
xor
inc
pusha
sbb
inc
sbb
xchg
sub
sahf
mov
mov
xor
call
xor
sti
xchg
popf
mov
jne
adc
xchg
icebp
jnp
mov
lea
popa
test
adc
xchg
cmp
cmp
xchg
enter
pop
pop
pop
push
popf
add
mov
imulb
push
imul
inc
aam
sub
fisubrl
sbb
sub
fmull
gs
or
xchg
mov
dec
jns
and
fcomps
int
jge
in
cli
adcb
fildll
sub
jb
push
mov
jno
loope
stos
test
insl
mov
jmp
sbbl
fsub
add
cli
sub
mov
fwait
loopne
lea
and
mov
std
push
jp
leave
data16
out
dec
lret
test
mov
mov
dec
sahf
and
and
filds
pop
xor
rcrl
adc
pop
mov
sbb
pop
adc
cvtps2pd
sbbl
jecxz
jl
xchg
leave
scas
mov
loope
cmp
cwtl
mov
iret
ret
out
mov
insb
iret
mov
pop
shlb
jbe
sbb
pushf
nop
xlat
adc
andb
jbe
movl
insb
je
scas
out
add
and
lret
xor
into
dec
imul
cwtl
lahf
leave
jecxz
pop
push
in
mov
jl
mov
pushf
mov
scas
jo
mov
popa
fildll
sbb
mov
jno
fistpll
nop
jg
je
sbbb
jp
cmc
dec
test
cli
cmc
sub
fsubl
stc
hlt
inc
clc
cmp
fwait
scas
push
mov
rcrl
pop
lea
cmpsb
xchg
or
adc
hlt
push
and
shll
dec
rorl
push
cmp
inc
push
test
add
je
lret
imul
mov
dec
add
mov
mov
pop
adc
cltd
test
fsub
sub
jbe
sub
stos
mov
cmp
idivb
jbe
data16
add
push
pop
lahf
xlat
pop
xor
sarb
xchg
rol
lods
dec
test
out
fwait
daa
dec
imul
cmp
push
cmove
nop
inc
xchg
fstpt
jp
jle
inc
push
jmp
mulb
sbb
mov
call
jge
jmp
and
fdivs
mov
stos
repz
xchg
sti
clc
xchg
inc
stos
out
jle
xor
adc
sbb
mov
push
into
push
popa
dec
daa
int
lds
sub
xor
test
popf
pop
pop
ss
repnz
ljmp
sbb
xchg
mov
sbb
sub
test
cmp
dec
pop
outsb
fcoms
lods
and
pop
scas
scas
add
lods
sbb
test
int
mov
aas
aaa
sbb
xlat
cmp
popf
rcrb
sub
shll
mov
jns
xor
or
loope
sbb
mov
push
sbb
aas
pop
rorl
pop
mov
sub
xchg
pop
fs
adc
prefetch
or
js
imul
int
cmp
mov
fmull
fwait
push
pushf
or
pop
enter
dec
jg
data16
add
cmp
hlt
je
adcl
mov
addb
cltd
sbb
pop
pop
sub
insl
dec
in
std
sub
ja
inc
push
mull
xchg
imul
ror
leave
insl
adc
gs
cmp
leave
fwait
dec
xchg
jle
add
addr16
push
enter
or
stc
js
inc
iret
inc
mov
popa
fldl
fimuls
sahf
push
xchg
inc
ret
gs
aas
xchg
xlat
gs
bound
dec
outsl
pushf
adc
pop
xor
in
inc
hlt
ljmp
mov
lcall
xchg
dec
js
out
mov
lret
inc
xor
rcpps
decl
lcall
jmp
jecxz
xchg
popa
cmp
push
data16
hlt
out
mov
out
dec
and
aas
or
mov
or
test
ret
dec
aad
int
js
hlt
lret
mov
mov
pushf
mov
in
ret
icebp
or
ljmp
insb
fstpt
adc
sub
xor
jmp
dec
sbb
xchg
cmp
push
pop
aas
ret
fxch
adcl
mov
jmp
cmp
inc
sub
pusha
bound
imul
xchg
xor
inc
pop
or
fcompl
xor
or
jl
cli
ds
mov
pop
add
es
inc
ljmp
call
andl
cwtl
jmp
mov
fdivrs
xbegin
jns
data16
push
and
adc
fistpll
lret
add
lods
push
int
lods
lods
cmp
lock
sbb
hlt
inc
test
mov
cmp
fiaddl
xor
lcall
fisubl
xor
jnp
insl
cld
int3
out
aam
fldenv
pusha
mov
jp
sbb
imul
lds
dec
fwait
cmp
sbb
test
fs
sbb
fs
outsb
cmp
and
xchg
mov
dec
cmp
xchg
add
daa
cmc
out
lahf
mov
xchg
cmp
push
repz
jbe,pn
cwtl
and
insl
xor
jnp
in
sbb
mov
rolb
mov
jno
fisttpll
inc
sbbb
and
fstpl
pop
clc
adc
push
xchg
and
push
or
mov
xor
jne
push
ret
mov
mov
cmpl
sbb
loop
and
and
das
jns
lret
push
sub
push
sub
frstor
mov
cld
mov
mov
or
loopne
cmp
movsb
test
mov
xchg
mov
mov
dec
pop
push
test
and
jb
cmp
ror
shlb
mov
sbb
pushf
cmp
mov
mov
mov
sub
bound
sahf
mov
mov
mov
aad
dec
xor
dec
jno
shlb
pop
adc
in
enter
lods
xchg
jno
and
daa
push
mov
mov
and
subl
and
cwtl
outsb
pop
or
lds
ret
or
pop
fchs
mov
dec
ffree
inc
mov
pop
call
push
int3
stos
pop
out
push
push
kmovb
sbb
xchg
arpl
mov
iret
mov
shll
lret
int3
mov
ljmp
inc
inc
rep
pushf
xlat
push
pop
pop
cmp
cmp
xor
fistps
sub
pop
add
cltd
mov
int3
mov
fidivl
xor
test
xchg
mov
push
sbb
mov
imul
or
push
mov
mulb
sbb
nop
push
mov
push
mov
xor
sti
addl
inc
push
jmp
xor
add
lcall
stos
jl
dec
fdivrl
cmp
xor
add
adc
inc
lahf
std
ljmp
imul
jno
lret
mov
enter
cmp
lock
pop
or
orb
mov
sti
stos
test
push
stos
and
and
insl
mov
adc
push
add
std
scas
add
adc
fcomps
lahf
sbb
int3
dec
xor
dec
sub
rclb
lret
pop
aas
jb
dec
inc
test
sub
fwait
pop
roll
mov
or
insb
mov
stos
pushf
or
imul
ja
push
lods
xlat
dec
test
stos
negl
and
imul
dec
push
push
xchg
mov
bound
mov
icebp
and
dec
push
xor
repnz
cmp
xchg
push
in
test
arpl
push
push
out
mov
or
repz
dec
push
fbstp
or
push
or
mov
inc
cs
xor
inc
outsl
test
in
lret
jecxz
cmp
adc
mov
pop
dec
lret
xor
aas
nop
xchg
fmul
fimuls
jbe
pop
or
adc
push
and
ja
call
mov
fs
or
mov
xchg
fidivl
sub
jle
cmpsb
xchg
lret
push
loope
call
inc
jae
dec
add
std
cmp
lret
lea
inc
inc
or
and
das
test
cmp
fisubrs
lock
out
rclb
aas
dec
loopne
sarb
scas
gs
sarl
test
xchg
dec
ret
fadds
pusha
rsm
mov
scas
enter
and
xchg
lds
mov
mov
js
ror
data16
mov
es
mov
mov
jb
jo
loop
or
xlat
inc
nop
xor
mov
scas
sub
add
dec
hlt
imul
sub
test
mov
scas
xlat
mov
lock
ljmp
cmp
orb
lcall
pop
popf
sub
imulb
subb
xchg
xchg
fiaddl
pop
icebp
hlt
or
xchg
adc
cmpsl
xor
mov
insl
je
call
std
xchg
fs
dec
rcrb
push
jnp
aad
imul
roll
lds
ds
push
cltd
xabort
repnz
push
das
ss
dec
lea
ja
pop
or
sub
lds
sub
fst
pop
xor
rcll
cmc
hlt
or
js
jo
inc
sbb
cmp
or
pop
fstpl
ret
addl
insl
sub
push
enter
mov
lods
dec
sub
mov
neg
pop
loope
shl
push
movlps
inc
mov
or
mov
adc
inc
fisttpll
cmpsb
fs
fcmovu
pusha
rorl
cs
pop
lcall
mov
inc
pop
lods
lock
iret
rclb
outsl
pushf
mov
xchg
aas
push
clc
mov
and
imul
xchg
xor
rorl
loop
push
shll
sub
into
jne
lods
sbb
mov
inc
sbb
shl
enter
mov
sbb
sbb
js
jno
lds
pop
xchg
pop
xchg
xchg
fsub
cmpsb
and
jle
xlat
sub
sub
push
xchg
add
out
lea
inc
mov
jge
cli
adc
cmp
imul
jl
pop
in
imul
sbb
loopne
xchg
arpl
aaa
imul
daa
mov
add
cmc
imul
inc
push
imul
mov
movsb
int3
pop
add
or
nop
orb
ficomps
lods
adcb
pop
ljmp
mov
adc
cmovge
rorb
call
jne
arpl
cmp
testl
lcall
stos
dec
and
popf
mov
xchg
cmp
jle
js
movsl
pop
arpl
push
adc
in
xchg
xor
adc
xor
ss
in
out
lret
into
gs
pop
dec
ja
sub
pop
and
dec
pop
pop
jg
cltd
lea
xor
add
dec
mov
cmpsb
xorb
scas
or
setns
ret
adc
pop
mov
and
or
push
push
push
sbb
cli
test
cmpsl
pusha
jns
js
or
out
stos
mov
sti
pop
ss
push
add
xor
pop
fcomps
mov
or
mov
aaa
jle
loop
jge
xchg
imul
push
dec
cld
shrl
ja
sub
lods
adc
jae
orl
rclb
jmp
loop
or
push
pop
hlt
dec
and
mov
mov
jb
out
shll
push
test
inc
shll
xchg
pop
mov
ret
jbe
cmpsl
insb
arpl
sbb
pop
push
jbe
xchg
dec
push
push
fcmovu
inc
mov
push
or
movsb
dec
jbe
stos
and
jmp
or
mov
ja
sub
sete
stos
pusha
xchg
pop
pop
insb
popa
or
jg
jne
dec
jmp
mov
and
fisubrl
rcrl
dec
and
cmp
shll
sub
aas
mov
fmulp
enter
adc
fcoml
insb
inc
mov
out
stos
les
scas
mov
sar
fists
repnz
aad
iret
dec
mov
add
scas
jae
mov
pop
aad
mov
mov
dec
inc
test
jp
sar
jle
mov
mov
aas
mov
int3
clc
adc
cmpsb
inc
adc
and
inc
aam
mov
xchg
add
jnp
ds
outsb
jbe
lods
xor
mov
ds
loope
rorl
js
or
and
push
outsb
loop
loop
fistps
push
in
sbb
orb
enter
js
int
inc
pop
push
shl
mov
mov
dec
fnstenv
scas
pop
push
js
sbb
clc
sbb
cmp
in
je
sbb
aam
and
out
sbb
mov
sarb
xor
loope
cmp
fistps
mov
pushf
dec
pop
loope
mov
cmp
je
dec
insb
push
cmp
stc
clc
cmpsb
iret
sub
inc
pop
lods
mov
lret
sahf
push
int
inc
push
mov
add
out
clc
call
out
out
nop
and
xchg
mov
or
jb
inc
dec
dec
sbb
in
sti
fmuls
mov
cmp
mov
pop
mov
fistl
clc
fimull
loopne
ret
das
or
push
sbb
xrelease
dec
movsl
fidivrl
or
sub
pop
js
sbb
rorb
jmp
mov
inc
iret
decl
mov
inc
mov
jns
add
adc
test
add
test
out
loope
ret
cs
jge
test
add
je
mov
jg
outsl
dec
hlt
repz
cmp
data16
jge
cld
or
mov
and
adc
movsl
lea
inc
pusha
mov
jo
add
push
cmc
lea
loope
sub
les
push
push
sub
mulb
pop
pop
cmp
repz
pushf
orb
inc
test
mov
fmuls
sbb
fsubr
je
xchg
inc
and
pusha
negb
mov
lret
dec
insl
aad
add
popf
cmp
dec
out
out
push
rcl
lds
aaa
movsb
ja
inc
out
sbb
xchg
mov
iret
je
mul
out
mov
mov
aaa
btc
push
xchg
mov
repnz
mov
xor
jl
out
je
xor
jp
pop
aam
dec
scas
in
jmp
adc
out
aaa
jge
xor
xchg
imul
sub
popa
push
jle
mov
mov
test
cmp
mov
pushf
dec
jmp
gs
jno
inc
cmp
mov
push
daa
fs
je
or
add
adc
jl
leave
jno
pop
cwtl
push
push
in
xorb
shr
fcmovnu
clc
vmread
pop
stos
xchg
bound
or
mov
shl
sahf
shlb
sbb
in
loope
clc
mov
addb
jmp
or
std
loopne
or
insl
sbb
adc
jbe
cli
prefetchnta
repz
cmovg
insb
in
popf
dec
lret
int3
sbb
inc
adc
cs
xor
jo
xchg
push
fcomps
scas
ja
idivl
add
loope
push
std
cmpsb
not
xor
lret
xchg
test
and
push
xor
push
lahf
test
mov
cli
mov
popa
cmp
aad
xchg
xchg
out
aas
in
pusha
xchg
icebp
fistl
iret
stos
dec
shrl
pusha
or
out
inc
lods
and
in
roll
mov
repnz
pop
or
sarl
xor
lea
xchg
xchg
insb
les
fimuls
aaa
imul
dec
mov
mov
mov
leave
mov
mov
dec
or
das
xor
lods
dec
repnz
fisubl
repz
jbe
dec
pop
jo
cwtl
insl
repnz
push
leave
inc
and
push
cs
jecxz
cmp
mov
push
mov
cmp
fstl
ja
pop
in
xchg
in
enter
enter
cltd
test
adc
sbb
mov
cmp
adc
rolb
pop
cmp
xchg
and
call
add
or
mov
add
stos
lock
dec
jo
xchg
mov
ret
call
xchg
sbb
ljmp
repnz
fmulp
bound
shrb
jns
xchg
stos
idiv
or
jb
push
mov
jno
dec
dec
fstps
cs
adc
in
mov
mov
or
pop
ljmp
ret
and
add
cld
shr
out
jmp
psrlw
pop
loopne
out
push
dec
mov
pop
lret
or
dec
insb
pop
pusha
or
lds
pushf
in
inc
push
add
add
pop
sub
sahf
push
rcl
add
int3
shll
inc
mov
push
mov
cmc
clc
inc
rorb
sub
adc
or
test
or
push
push
fcmovnbe
or
add
jle
repnz
rorb
jb
add
sub
mov
mov
lods
mov
mov
inc
xchg
jecxz
cltd
or
mov
sub
fsub
loope
loope
fstpt
lods
pop
fadd
xchg
inc
jae
add
mov
push
adc
xchg
jmp
in
hlt
push
cli
das
mov
sahf
push
pop
mov
add
xchg
xchg
push
jge
test
inc
out
or
mov
jo
sbb
add
cmp
sbb
xor
or
jbe
enter
adc
scas
arpl
lret
cmp
adc
cli
mov
ret
add
jmp
mov
imul
mov
inc
mov
ret
jne
inc
inc
ficoml
int
xchg
push
mov
test
mov
mov
lcall
jae
hlt
cmp
and
mov
push
loop
aas
fimuls
stos
in
dec
nop
lahf
xchg
fsubrs
dec
imul
ljmp
sub
imul
dec
outsb
cmc
lcall
les
pop
lcall
add
push
test
xchg
call
mov
pop
movb
jl
inc
lret
hlt
lods
add
mov
mov
xchg
inc
sbb
push
scas
hlt
sbb
adc
xchg
xor
xchg
adc
stos
in
cmp
adc
rorb
repz
mov
enter
data16
je
lock
ljmp
int3
inc
cli
test
jge
out
mov
sti
lret
sbb
jns
cmp
add
push
push
adc
pusha
or
fs
dec
enter
orb
xor
mov
sahf
sub
jle
mov
sub
dec
cwtl
xchg
cmpsl
sbb
push
stos
test
sub
std
mov
fstl
lahf
andb
rolb
mov
loope
fs
loopne
jno
mov
push
addl
inc
in
and
mov
sub
lret
cmp
adc
sub
xor
dec
call
cld
icebp
push
lea
mov
mov
iret
sbb
es
sbb
pop
je
push
dec
in
pop
and
sbb
jae
lods
ss
lea
lea
fldcw
cmp
mov
pushf
or
pop
nop
scas
dec
bswap
ficoms
imul
stc
aam
movsb
inc
in
xor
nop
pop
das
outsl
jg
pop
lret
test
sub
pop
mov
mov
cmp
sti
rclb
or
jae
jg
loopne
movsb
xor
inc
sub
dec
es
sbb
dec
ja
push
adc
jecxz
jl
rol
and
fsub
popf
aam
push
fwait
mov
cltd
jae
xchg
pop
orb
and
pop
pushf
adc
or
out
xchg
ret
sbb
xor
packuswb
pusha
icebp
sbb
scas
dec
ficompl
sbb
sbb
test
orb
adc
jmp
pop
dec
out
dec
and
addr16
out
xchg
jge
cli
sbb
jne
lock
lret
push
push
and
fmul
dec
push
mov
pushf
jae
sub
fidivrl
ret
dec
push
adc
fnstcw
lods
cltd
xor
sbb
or
add
aas
or
stos
pusha
or
mov
mov
jo
clc
mov
je
lods
sub
adc
pop
lret
lea
jno
dec
out
pop
sbbl
pop
mov
mov
and
pop
aam
lea
jae
rcrl
aaa
mov
inc
loop
imul
dec
notl
mov
xchg
cmp
in
jns
dec
shlb
sub
mov
popf
jb
fcompp
jne
fwait
jmp
mov
sbb
bound
pop
push
jbe
mov
movsb
outsl
clc
daa
jg
adc
or
and
xchg
dec
or
pop
sbbb
into
jmp
jo,pn
cmc
xchg
adc
ret
shll
jge
fwait
in
fsts
mov
inc
xorl
ljmp
pop
dec
jno
push
and
rcrl
add
call
or
lret
ficompl
cmp
push
push
and
insl
scas
mov
inc
push
lcall
mov
mov
vcmpordsd
shll
fmuls
movsl
add
and
lahf
mov
cwtl
mov
sbb
xchg
pop
xchg
and
loopne
and
inc
cli
scas
xor
movsb
lds
pop
lret
pop
pop
mov
add
flds
add
or
aad
out
popf
in
test
mov
ficomps
inc
dec
cmp
fsubs
ret
pop
push
paddsb
sbbb
xor
add
mov
jp
jecxz
scas
mov
push
pop
lock
divb
adc
or
pushf
repz
add
adc
int
inc
or
and
pop
popa
in
jns
div
push
enter
mov
add
and
xor
test
jbe
and
adc
sarl
clc
fcmovbe
xor
mov
sbb
mov
lahf
jg
adc
je
or
pushf
mov
inc
ret
fdivrs
mov
in
lahf
int
scas
push
test
or
call
and
adc
imul
rol
out
mov
popf
daa
adc
cmpsl
rcrl
aas
mov
xchg
jno
or
int3
jae
cs
lret
mov
jo
pop
mov
int
jmp
movsl
daa
xor
adc
jae
mov
xchg
insb
in
mov
xor
lcall
adc
test
mov
mov
in
inc
xor
sub
or
jmp
fcmovnbe
fdivl
cltd
rorb
fldt
test
in
jle
mov
movsl
gs
jae
fwait
mov
dec
sub
clc
sbb
insl
push
jmp
fwait
ljmp
mov
imul
pop
ja
dec
bound
in
mov
or
int3
iret
xchg
mov
fnop
jp
adc
sbb
lcall
out
loopne
xchg
out
push
inc
fidivs
movsl
add
aam
jae
cmp
invlpg
arpl
jno
adc
adc
movsl
arpl
int
outsl
or
test
idivl
sarb
adc
mov
inc
inc
fistl
sbb
rorb
dec
sbb
or
mov
aaa
repz
cmp
pop
mov
xchg
mov
fs
push
rolb
call
rcrl
add
pushf
shl
mov
jge
add
xchg
invd
outsb
in
out
repz
dec
mov
sbb
rclb
hlt
dec
mov
shrb
scas
inc
sub
mov
jo
dec
inc
pop
adc
push
mov
repnz
pop
fs
add
mov
in
mov
pop
mov
sarl
cltd
in
fwait
jmp
fbld
jns
loop
sub
into
push
in
xor
dec
and
cmp
or
rcl
ret
push
cmp
sti
ja
loop
push
pop
pushf
stos
fisttpll
xorb
js
add
mov
add
lock
dec
pop
mov
inc
fwait
cmc
jo
xchg
sub
mov
mov
loop
xchg
mov
pop
inc
add
roll
pop
add
and
cmp
loopne
mov
aaa
dec
pop
out
sub
int
fldenv
mov
jecxz
fcmove
fs
xchg
repnz
dec
out
push
mov
inc
testb
adc
in
fisubl
test
movq
lock
mov
rol
xchg
imul
inc
in
mov
push
sub
pop
cltd
jo
push
sub
xchg
cli
addr16
ljmp
mov
sbb
pop
mov
mov
inc
ss
icebp
push
popa
iret
sub
dec
mov
ds
xchg
movsl
sub
sbb
or
dec
loope
in
adc
rcl
xchg
adc
lea
xchg
pop
and
and
push
sub
sahf
and
sub
pop
inc
test
and
scas
jnp
pop
adc
or
lret
das
or
fldt
mov
int3
les
outsb
jno
out
jp
orl
nop
es
jnp
ds
arpl
popa
mov
mov
push
arpl
cld
adc
inc
pop
jns
push
cmp
mov
icebp
lock
mov
or
xor
push
stc
out
aaa
push
mov
leave
pushf
lcall
popa
mov
adc
cwtl
add
sbb
insb
and
xchg
into
sub
out
mov
rclb
call
ljmp
pop
inc
faddl
pushl
stos
jnp
gs
andb
mov
popf
rolb
or
sbb
movsl
test
or
popa
movsl
addr16
mov
inc
test
add
jnp
or
icebp
inc
xchg
fnstenv
mov
js
sub
lods
mov
cmpb
inc
push
addl
cmpsb
lea
xchg
movsl
jns
jo
mov
adc
push
test
jmp
gs
clc
pop
and
rorl
cmp
hlt
mov
in
or
jb
dec
adc
jne
inc
loope
mov
mov
mov
decb
mov
inc
adc
ds
xchg
push
mov
jno
daa
call
lea
pop
out
test
fistl
xchg
pop
fildl
pop
shr
es
sub
push
jmp
daa
pop
pop
aas
inc
lds
mov
pop
stos
loopne
bound
movsl
nop
and
add
dec
out
pop
mov
mov
xor
imul
or
int3
and
aad
mov
sbbb
pop
mov
sbb
mov
mov
mov
flds
or
mov
rcrb
jmp
cld
flds
lock
mov
pop
pop
jl
sbb
and
imul
stos
imul
sti
dec
jmp
sahf
jb
aam
out
pop
mov
movsb
or
jo
pop
push
add
adc
imul
subb
inc
out
out
xor
mov
pop
test
pop
sbb
int3
cmp
fmull
aas
fimull
iret
je
xchg
mov
mov
fiadds
js
fwait
jo
dec
pushf
movsl
sbb
sub
rcrb
aam
push
xchg
outsb
call
push
xchg
sbb
imulb
jns
jl
loop
es
test
adc
xchg
ja
pop
movl
hlt
insl
pop
push
mov
xchg
pusha
stc
mov
ds
mov
andl
xor
xchg
mov
arpl
cmp
mov
sbb
jne
daa
xchg
xchg
aam
mov
outsb
cmp
mov
push
sub
sahf
mulb
fstl
aam
jne
adc
adc
jb
adc
xlat
test
push
cltd
stc
add
push
xchg
add
mov
fwait
adc
in
hlt
in
sub
mov
shr
and
mov
das
data16
test
outsb
sbb
jnp,pt
int
push
cli
cmp
arpl
aam
ret
sbb
mov
je
mov
mov
sub
mov
xchg
cmc
pop
add
or
push
jg
adcl
gs
mov
inc
or
sub
imul
xor
push
outsb
mov
mov
xchg
add
imul
push
jnp
jns
test
orl
icebp
pop
lcall
ret
push
imul
add
mov
rcl
or
outsb
jns
cmp
lock
xchg
insl
das
out
dec
cmp
lea
cmc
out
cmp
sub
sbb
arpl
and
sub
mov
xchg
jb
imul
scas
xchg
jge
mov
lods
test
lods
pop
jl
repnz
xlat
and
sbb
add
test
jmp
cld
or
adc
aaa
setns
xchg
bound
cmp
icebp
or
push
adc
xor
push
int
push
sbb
aam
inc
movsl
adc
psubb
adc
dec
cmp
cli
add
jne
nop
xchg
jo
jne
imul
push
inc
add
mov
and
dec
sarl
adc
mov
icebp
insl
xor
sbb
inc
sub
xor
ret
test
inc
pop
cmp
mov
stos
dec
roll
push
push
and
stos
xchg
jle
lea
sub
xlat
out
fimull
test
xlat
enter
xor
int3
mov
lds
sti
insb
pop
xor
hlt
adc
out
or
es
loop
aas
add
scas
inc
imul
sbb
pop
sub
dec
xor
push
gs
cmp
xor
nop
test
inc
and
xor
sub
lds
mov
jnp
stos
rorb
mov
aas
mov
jbe
inc
mov
iret
xorb
xchg
inc
and
das
cmpsb
inc
imul
subl
xchg
xchg
test
out
jg
ret
hlt
mov
lahf
fisubrl
mov
int
add
rcrb
xchg
pop
jo
insl
mul
jbe
jne
enter
aas
push
shrl
movaps
js
in
ret
aaa
jmp
popa
stos
inc
jmp
imul
fcmovne
insb
out
cmp
mov
stos
sbb
mov
loopne
jge
rorb
jg
into
mov
dec
push
cli
jp
imul
cmp
out
aaa
jo
sbb
push
std
xor
stos
xor
mov
sub
mov
stc
sbb
pop
insb
bound
or
lret
cmp
adc
push
mov
mov
negl
nop
jle
dec
mov
jb
or
loop
repnz
mov
pop
iret
or
nop
or
xor
subl
pop
ljmp
pop
adc
xchg
lret
outsl
out
ret
add
ss
ret
rclb
jns
cmp
xchg
lret
xchg
mov
cmpsb
push
jne
xlat
pop
gs
dec
sbb
popf
daa
xchg
daa
xchg
inc
push
xchg
and
std
sub
mov
js
shll
and
or
jno
sbb
popf
inc
fistps
fdivl
ficompl
adc
sti
jg
ret
sbb
icebp
sub
mov
bound
popa
sub
jb
xor
push
pop
add
stos
addb
cmc
push
inc
mov
mov
popa
dec
movsl
inc
xchg
mov
out
lret
cmp
pop
sbb
rcll
push
stc
and
sbb
lret
inc
scas
rol
mov
iret
cs
adcl
lret
in
lea
push
xchg
ret
lret
xchg
or
lea
jne
and
fidivl
mov
lcall
jbe
daa
mov
clc
adc
inc
xchg
pop
dec
ljmp
lcall
pop
cmp
mov
iret
addr16
lds
jno
jmp
iret
jbe
jge
repz
push
outsl
pop
pusha
push
je
sahf
das
sbb
or
push
adc
mov
dec
cmpsb
lahf
daa
adc
ret
add
or
mov
outsb
cmpsb
jno
adc
sbb
cmp
sub
test
dec
push
popa
shrb
inc
mov
lahf
cltd
dec
decl
stc
pop
fidivs
loope
dec
or
xchg
cmovg
cmpsl
mov
push
add
sbb
call
aad
in
and
in
push
insb
add
movsl
out
sub
mov
fidivrs
shrd
pop
pop
ret
xchg
fadds
shrl
pop
cmpsl
adc
xchg
push
dec
fwait
xchg
mov
xchg
mov
sub
jns
ffreep
call
sub
dec
ljmp
dec
stos
add
mov
pop
in
int3
or
fidivrs
repz
push
ljmp
aad
cmp
push
add
bound
dec
nop
pusha
dec
push
out
fistps
imul
imul
lahf
fdivp
inc
test
fwait
in
inc
cmpsl
dec
stos
je
inc
or
roll
clc
xor
pushf
mov
movsl
fistpl
push
vunpcklps
cmc
jne,pn
lahf
jmp
lea
dec
cli
and
inc
add
sub
cli
adc
push
sbb
and
pop
sub
aad
pop
jne
mov
mov
ss
mov
es
imul
inc
mov
nop
lock
sbbl
dec
dec
out
fs
push
ficompl
int3
and
push
pusha
loop
aaa
jp
nop
stc
ret
jns
mov
leave
dec
dec
lahf
push
aam
add
inc
mov
sub
leave
inc
aam
inc
adc
dec
mov
mov
movsb
imul
inc
stos
lock
imul
cltd
movsl
ret
xchg
fwait
leave
fstl
divl
stos
out
mov
scas
stos
dec
lcall
outsl
adc
cmp
sti
mov
int3
sub
jle
into
jbe
sahf
clc
xchg
arpl
sbb
adc
pusha
clc
mov
fiadds
xchg
jg
sbb
pop
xchg
aad
fcos
add
sbb
cmp
xchg
fs
in
leave
int3
loopne
jbe
adc
addl
pop
mov
push
aaa
sbb
mov
mov
lcall
pop
lods
and
xlat
add
mov
inc
and
std
and
cli
lret
mov
xchg
cmp
xorl
adc
jae
or
movsb
scas
xchg
adc
test
movsb
into
pop
pop
dec
sahf
pop
or
das
xchg
mov
mov
dec
push
aas
xor
fs
cmp
jo
int
les
mov
ja
sbb
pop
adc
sbb
jo
imul
sbb
jmp
sahf
jp
jge
and
dec
enter
pop
xchg
mov
packsswb
es
daa
lea
push
stos
inc
out
mov
pop
and
fucomp
test
sbb
push
fisubrs
stos
and
test
imul
fistpll
inc
mov
cmp
add
or
push
pop
or
scas
xchg
mov
and
mov
push
loopne
cld
call
cmp
enter
shl
in
insb
sub
icebp
and
dec
and
push
push
movsl
cltd
dec
imul
or
cs
negl
adc
sub
push
cld
xchg
lea
out
sbbl
xchg
or
mov
fdivrl
mov
js
pop
inc
mov
pop
push
outsl
popa
mov
xchg
adc
push
mov
adc
sub
cmp
add
mov
fcmovu
shll
mov
mov
jecxz
add
mov
out
push
cmp
icebp
pavgb
mov
pop
pusha
sub
fstl
cli
ds
fimull
cltd
fdivr
xor
ret
and
aam
or
bnd
movsb
in
xchg
les
insb
cmp
mov
mov
loop
inc
dec
adc
mov
out
fstps
jno
inc
sbb
push
fstpt
out
decb
pop
stc
inc
xchg
lret
jae
mov
push
movsl
mov
dec
xchg
adc
shlb
pop
jg
call
cltd
adc
adc
inc
or
into
lock
mov
cmp
cmp
mov
jge
test
iret
fcom
in
cmp
cmc
addl
mov
imul
fisttpl
inc
mov
rcll
iret
mov
jns
sub
lock
dec
addr16
imul
pop
mov
scas
mov
notb
lock
ljmp
and
inc
mul
sbb
push
push
shlb
adc
jle
popa
cli
fildll
out
jae
jbe
mov
pop
rorl
jecxz
fildll
imul
mov
pop
fbld
jge
in
jg
push
and
jo
jbe
or
cmpsl
les
mov
mov
sbb
shll
outsb
js
les
sub
push
or
mov
xorl
xchg
xchg
add
sarl
mov
push
and
xchg
in
mov
push
pop
sbb
cmpl
jg
imul
insb
outsl
add
add
jne
pop
in
mov
sbb
mov
push
insb
xlat
sub
cmpsl
pop
mull
push
pop
in
push
js
inc
jae
push
fbld
loop
pusha
adc
cltd
scas
loope
loop
jge
loope
pusha
mov
inc
pop
pop
mov
cmp
push
jmp
out
jne
cmp
shl
std
ljmp
adc
mov
xchg
stc
push
sbb
mov
push
cmp
xchg
mov
push
push
pop
daa
add
xchg
mov
cld
fs
icebp
subb
xor
adc
lods
cmpl
jbe
inc
xor
pop
inc
push
fistps
in
jno
sarl
push
loopne
sti
mov
adcl
fmulp
push
fildll
pop
sbb
jmp
js
aaa
add
test
lret
inc
add
and
mov
jge
mov
stc
pop
aad
xor
push
aaa
sbbb
mov
push
and
dec
rorb
popa
mov
mov
adc
and
mov
pop
push
mov
adc
ret
mov
and
xor
adcl
into
clc
int3
out
xorl
pop
mov
pop
adc
pop
mov
dec
cmp
inc
push
out
out
iret
out
jecxz
push
jecxz
jmp
rol
movaps
aaa
ficoml
repnz
notl
jns
sbb
dec
mov
push
xor
lds
les
cltd
sbb
inc
cmpsl
jmp
lods
jmp
jl
popa
mov
pop
std
inc
jmp
in
repz
stc
dec
xorl
imul
sbb
sti
adc
jge
pop
sub
jg
lods
andl
push
ret
fwait
int
outsl
pop
sbb
ret
push
cmp
leave
cltd
sub
cld
xchg
fdivl
nop
adc
inc
sarl
cmp
sbb
push
and
loope
and
jnp
out
jns
pop
es
and
or
ret
jo
daa
mov
push
lock
test
inc
sbb
mov
mov
adc
and
lea
fldt
in
sub
fstps
dec
out
mulb
jne
jno
pop
imul
daa
or
cmp
or
mov
push
movsb
sbb
mov
mov
push
xor
jmp
adc
and
jle
lcall
add
mov
stos
pusha
and
add
or
out
add
cli
loope
fcoms
rcll
push
push
add
shufps
adc
or
jnp
sbb
jp
jb
mov
fwait
nop
ficomps
fisttpl
sub
or
xor
jo
push
es
dec
add
or
inc
add
mov
lea
xor
xor
adc
gs
je
je
in
or
dec
fwait
xchg
imul
in
movsl
mov
mov
cltd
sub
mov
fidivs
cmp
sub
clc
inc
xchg
sbb
imul
jns
jg
lea
stos
or
test
cmp
fists
xchg
add
inc
out
inc
jp
into
push
cwtl
adc
into
add
or
mov
pusha
into
iret
push
stc
lods
add
push
pop
pop
and
push
pop
pop
inc
adc
repz
jae
test
test
in
test
xchg
mov
xchg
and
cmp
out
daa
push
pop
es
mov
fisubs
divl
xchg
xchg
mov
enter
cmpsl
insb
cmp
lcall
push
into
test
test
inc
out
adc
jecxz
repz
sub
or
in
roll
aam
xchg
push
loopne
pop
icebp
adc
jbe
adc
test
jb
jmp
mov
mov
mov
lods
mov
loopne
cmp
mov
ja
lcall
push
mov
cmp
pop
and
out
pop
lret
popa
sub
mov
add
fprem
cltd
out
movsb
lock
dec
iret
lods
cwtl
dec
or
cltd
scas
and
mov
and
test
inc
sub
addb
push
aad
lcall
inc
lret
adc
or
loopne,pn
ja
insb
rolb
test
mov
ret
xchg
je
push
and
addb
mov
xchg
dec
adc
mov
mov
xor
iret
cmp
insl
xchg
leave
shlb
pop
mov
ret
repz
mov
inc
dec
push
je
out
testb
negl
repz
mov
int3
incl
sbb
mov
dec
bound
and
inc
add
out
faddl
or
and
dec
add
pop
popa
xchg
aaa
mov
add
dec
rorl
ja
les
aaa
push
mov
xchg
pop
fistps
xchg
xorb
lods
dec
mov
les
test
in
mov
mov
sub
out
inc
insb
popa
jne
dec
sub
sbb
outsl
dec
decb
mov
loopne
cmp
addb
mov
sbb
or
and
pop
mov
sbb
jns
arpl
std
adc
cwtl
outsl
lock
ret
dec
cmp
and
pushf
loopne
cmpsb
adc
out
popf
loop
mov
xorl
loop
daa
mov
test
dec
jno
fwait
dec
push
sbb
mov
std
mov
lods
mov
lret
lds
mov
sbb
sub
mov
xchg
js
shrb
mov
xor
push
hlt
sbb
cli
xor
sub
jmp
cs
mov
loope
dec
mov
jo
lcall
bound
dec
mov
shll
mov
push
cmpsl
ret
sub
mov
pop
sti
dec
pop
push
adc
xor
clc
xchg
enter
mov
xor
in
es
and
sarb
mov
mov
or
mov
mov
xor
jae
jg
stos
jmp
test
xchg
rcrb
lock
push
ja
lods
xor
aad
std
dec
lea
ja
clc
outsl
mov
in
fdivs
add
hlt
bound
test
arpl
jb,pt
pushf
bound
xchg
test
je
das
jno
mov
pop
sbb
push
ljmp
lock
fldl
cwtl
xchg
das
mov
mov
daa
repnz
dec
cmc
dec
daa
repnz
adc
adc
push
je
dec
cmp
gs
mov
es
inc
jne
cmp
scas
dec
dec
inc
mov
test
call
fstl
mov
lret
sub
push
mov
test
jns
bound
mov
rorl
add
mov
mul
and
jbe
imul
mov
push
lret
adc
outsl
push
out
in
daa
mov
xchg
pop
jg
push
push
xchg
mov
add
test
pusha
jle
pop
xorb
pop
mov
inc
cmpl
lahf
pusha
movsb
into
dec
sub
sub
xor
mov
movsb
arpl
cmc
push
mov
dec
out
mov
lcall
jl
fwait
add
push
sub
and
jne
lock
xchg
lock
shrb
test
je
jecxz
popl
mov
cmp
fcomps
clc
leave
jb
fldcw
xor
dec
mov
aaa
cmp
test
xchg
pop
incl
mov
xor
loope
jns
test
xchg
xor
sbb
cld
dec
mov
jmp
mov
dec
sub
mov
std
dec
out
adc
ljmp
push
lock
sahf
loop
cmp
or
sbb
dec
cmp
and
push
mov
pop
aam
fsubl
rol
cmpsb
stc
push
scas
fisubl
jns
push
stc
and
xchg
fcmovu
xchg
shr
inc
testb
lods
adc
popf
xchg
push
lahf
lock
ret
divl
fucomp
aam
lret
inc
ficomps
mov
mov
pop
leave
cmp
das
jl
and
pop
mov
lret
es
aam
jmp
mov
fwait
add
jp
cmp
xchg
and
aas
sbb
rcr
shrb
push
stc
push
je
add
das
adc
xchg
cmpsb
lock
pop
mov
testb
lahf
xchg
cs
push
ss
jo
mov
ret
jbe
int
arpl
dec
and
jnp
inc
es
inc
scas
xlat
fprem1
mov
pop
jecxz
popa
in
mov
dec
mov
and
aam
push
jo
outsl
xor
jbe
xchg
mov
inc
repz
scas
mov
push
sub
add
movsl
loop
stos
cmp
cmp
mov
cmp
mov
fwait
ljmp
mov
adc
mov
shll
dec
jnp
fisttpll
bt
xchg
loop
scas
imul
dec
mov
ljmp
shlb
fcmovu
jmp
mov
icebp
jne
fwait
jne
push
fnstcw
push
testl
push
pop
jne
mov
mov
jmp
push
pop
sbb
jle
ror
ret
pusha
dec
icebp
cmpl
addr16
or
fnstsw
push
push
add
mov
mov
push
out
test
cmp
imul
lcall
addr16
rcr
cmp
dec
rcll
cmp
mov
xlat
and
xlat
jbe
int3
xchg
dec
dec
cmpsb
sarb
jmp
mov
add
in
in
dec
cmp
mov
cmp
sbb
pop
push
in
jns,pt
sub
push
inc
rcll
sub
cmp
idivb
mov
int3
out
cmp
inc
sbb
pop
cmp
scas
sbbb
fistpl
repz
or
adc
sbb
or
mov
rorb
int
xchg
test
ror
xor
fs
or
lock
mov
mov
xor
dec
loopne
scas
mov
mov
lcall
cmp
jnp
ret
leave
test
add
test
scas
push
pushf
mov
jae
fstpt
push
loopne
test
fs
neg
scas
out
jecxz
mov
sbb
insb
imul
cmpsl
push
js
jb
ja
repz
inc
fistps
pop
sahf
stos
jb
push
loopne
repz
aaa
cwtl
mov
dec
inc
in
push
jp
dec
push
or
gs
insb
test
out
jecxz
dec
xor
insb
orl
add
rcl
mov
sbb
testb
xchg
ja
js
add
sub
xchg
mov
push
rcpps
or
jp
dec
push
xchg
and
cwtl
enter
out
dec
xchg
enter
pusha
or
sbb
insb
sbb
jecxz
ret
sub
xchg
xchg
xor
int
mov
into
xchg
add
cwtl
std
pop
adc
pop
dec
inc
pop
mov
sub
loope
cmp
jne
iret
mov
sub
out
dec
mov
sbb
dec
jle
aaa
in
xchg
jmp
ljmp
jmp
cmp
scas
mov
xchg
xor
or
shll
fwait
lcall
pop
inc
in
mov
sbb
mov
shrb
test
test
lret
popf
mov
dec
and
stos
inc
shll
fistps
fcomps
mov
push
loop
cmp
addr16
cli
sub
roll
push
sti
scas
sub
loop
adc
js
cmp
dec
ret
pop
dec
mov
dec
imul
sarb
aam
imul
sub
jne
not
movsl
andl
xor
dec
dec
and
fnstcw
cmp
outsl
aam
pop
and
mov
dec
orb
jge
inc
lock
insb
jno
arpl
xchg
dec
lahf
pop
stc
addl
aad
fadds
cmp
pop
jnp
std
and
loop
and
sub
lcall
imul
sbb
xchg
adc
sbb
addps
xor
fwait
inc
cmp
aam
repnz
xchg
xchg
aam
cmp
push
addr16
push
movsb
arpl
stc
ss
dec
push
mov
add
lahf
test
adc
aad
movb
scas
imul
fs
fildll
cmp
loop
scas
add
push
push
jnp
push
iret
sub
inc
loop
sub
mov
sub
push
mov
cmp
xchg
cmp
sub
jp
pop
push
es
fcoms
lret
or
lods
xchg
inc
pop
cltd
mov
imul
jmp
push
push
enter
ja
enter
fucomi
inc
xor
push
shlb
xor
mov
mov
fdivp
insb
mov
sub
add
pop
jmp
and
dec
push
add
sub
adc
sbb
and
cmp
gs
mov
jp
mov
sbbb
push
cmpsl
or
push
lret
xor
dec
pop
xchg
stos
test
sbb
xchg
dec
add
cltd
out
in
mov
xor
pop
fstl
mov
rcll
dec
mov
inc
dec
aas
xchg
sbb
xor
sbb
js
sbb
jge
adc
scas
pop
sar
and
sub
in
cmpl
inc
mov
xor
iret
sbb
sti
push
sub
xchg
sahf
pop
in
or
js
add
aas
adc
mov
cmp
out
ret
mov
dec
sar
bt
out
loope
inc
repnz
push
cmpl
in
out
rcll
outsb
movsb
jno
imulb
insl
pop
cld
jge
dec
add
insl
add
cmc
jle
push
stos
add
mov
scas
orl
push
cld
ss
cmpsl
or
cmpsb
adc
push
cmp
outsl
hlt
mov
ja
loope
dec
inc
iret
cmp
repz
shll
leave
imul
xor
and
scas
jne
data16
pusha
xchg
mov
sti
cli
dec
in
sbb
call
xchg
push
rorl
xor
enter
xorps
shr
xchg
jno
hlt
or
pop
jae
sub
adc
pop
adc
and
mov
sbb
pop
push
in
xchg
jns
mov
xor
add
cs
pop
sbb
or
cmp
mov
negb
pop
sub
sub
sahf
add
xchg
int3
push
cmp
jbe
or
pusha
jl
loope
stos
and
inc
inc
movsl
mov
out
shrl
into
pop
jnp
std
mov
sub
ja
lea
dec
push
sub
dec
sbb
fisubs
cmp
notl
testb
cmp
into
lahf
pop
sub
xor
inc
or
jo
repz
arpl
movsb
mov
mov
and
cmpsl
adc
or
push
jno
jnp
mov
lods
cmp
dec
data16
daa
push
xchg
les
mov
sahf
daa
loop
xlat
stc
mov
mov
rcl
cwtl
movsl
sub
add
and
loopne
jnp
xchg
jge
enter
cmc
lret
in
movl
shlb
mov
mov
lods
fadd
mov
ret
pop
xor
cld
cli
sbb
cmpsb
or
fwait
push
out
pop
imul
or
int3
icebp
push
dec
fistl
test
shrl
push
imul
push
leave
mov
lods
rcll
std
inc
scas
fiaddl
push
stos
add
adc
push
inc
repnz
push
inc
and
leave
test
mov
cmpsl
push
xchg
outsb
mov
cmp
les
dec
mov
in
adc
loop
push
lret
jecxz
sub
out
add
aam
mov
arpl
cmpsb
aaa
push
popf
sub
push
icebp
mov
xchg
jae
fstps
adc
or
push
repz
lds
loopne
add
je
inc
xchg
into
sbb
lock
jecxz
pop
and
push
cmp
movsl
gs
jae
ret
adc
pop
hlt
xchg
rcr
and
ret
rcrb
dec
mov
mov
adc
and
xor
scas
rcll
push
mov
jno
adc
adc
inc
xchg
shlb
fcomps
bound
sbb
ds
mov
mov
ret
adc
test
call
pushf
outsl
rclb
xchg
xchg
mov
xchg
sub
das
int3
out
fidivrs
sub
out
ror
add
or
add
jbe
scas
subb
xor
ja
mov
push
pop
popa
jno
jmp
bound
xchg
outsb
mov
pop
mov
jge
orb
cs
hlt
xor
notl
inc
je
pop
push
push
pop
pop
test
push
sub
ds
and
fimuls
dec
or
sub
adc
push
xchg
xchg
jno
fs
mov
fadd
xchg
lcall
repz
nop
mov
xchg
push
mov
lock
push
adc
push
pop
and
mov
mov
mov
out
xor
dec
mov
jns
pop
add
mov
insb
rcll
adc
xchg
cltd
jle
jns
aam
xor
mov
fsubl
add
aam
clc
or
inc
push
cltd
xchg
inc
inc
popf
xorl
leave
lahf
sub
dec
outsb
adc
mov
jnp
idivl
mov
push
dec
xchg
fwait
add
call
pop
ds
pop
push
dec
add
push
push
jno
or
sti
clc
jae
rolb
cmp
cld
in
or
mov
inc
mov
mov
ljmp
pop
jp
dec
arpl
cwtl
and
dec
loope
cwtl
roll
movsl
cmpsl
mov
popa
shll
mov
pop
cmpsl
push
push
sub
loop
pop
sahf
xor
cmp
adc
push
sbb
jbe
dec
imul
test
ja
repnz
out
out
sub
fs
cld
lret
imul
cmc
add
push
inc
or
mov
pusha
sbb
ret
lret
dec
jge
cmc
dec
sarb
add
add
xor
sub
test
adc
lds
in
xchg
js
ljmp
cld
jle
jecxz
cli
mov
fisttpl
popf
cld
dec
adc
lock
jge
push
ret
out
iret
enter
xor
mov
lods
imul
cmpsb
dec
sti
test
dec
mov
shrl
insb
pop
pop
xor
cld
push
mov
jmp
adc
in
cmpsl
hlt
mov
loopne
das
fdivr
mov
cmc
dec
outsb
mov
lods
mov
test
mov
inc
adc
pop
mov
mov
in
aas
popa
jmp
scas
mov
cld
sbb
dec
pop
mov
cmp
test
dec
mov
scas
jecxz
dec
in
aaa
pop
lret
adcb
mov
jecxz
ds
and
and
push
outsl
imul
pusha
cmp
pop
push
xor
mov
cld
js
push
lods
dec
pop
mov
xor
add
dec
mov
jne
mov
in
jo
ljmp
or
push
std
int3
and
insl
ret
xchg
in
call
into
clc
inc
xchg
arpl
dec
popf
lds
data16
gs
cmp
mov
add
hlt
and
pop
jns
pop
repz
popf
mov
out
pop
into
cmpsb
push
push
rcrb
insl
cmp
daa
mov
xchg
and
push
divb
shll
sub
jge
sbb
mov
mov
adc
cmp
aaa
insb
test
inc
ljmp
ficoml
or
cld
mov
lahf
or
cmp
addl
xchg
sti
rcl
inc
xor
mov
and
jp
lods
adc
jns
lret
or
call
bound
ret
or
pop
push
lods
dec
cmp
sbb
mov
jg
and
mov
mov
jecxz
sbb
adc
out
mov
js
leave
pop
push
out
push
inc
jno
cli
lods
ja
adc
jae
and
dec
fs
and
mov
xlat
push
insb
fadds
dec
in
xorps
movsb
dec
mov
call
mov
adcb
out
shrb
fld
test
push
aas
lock
xchg
addr16
push
sbb
leave
mov
and
cmpsl
jecxz
stos
mov
adc
adc
pusha
mov
mov
inc
imul
dec
sub
je
mov
dec
push
ja
and
jl
sbb
xor
loop
pop
push
aad
ja
gs
mov
clc
insl
jns
jge
mov
adc
xor
add
data16
cmp
es
in
aas
sbb
pop
sub
push
pop
cmp
cmp
dec
push
or
jge
aam
push
lds
test
inc
cmp
outsb
cltd
lcall
jg
pop
jecxz
add
lcall
inc
cmpsl
fldl
pop
inc
pop
pop
in
test
sbb
mov
mov
aas
int
mov
dec
ret
sub
cli
mov
cmpsb
push
ret
mov
sbb
cmp
sbb
loope
xchg
sbb
pop
pushf
dec
dec
ret
push
pop
cs
out
sub
addr16
jmp
jns
jecxz
inc
xchg
inc
andb
pop
add
add
mov
sbb
xchg
sub
push
lods
jb
pop
jne
push
std
inc
inc
jge
adc
and
add
icebp
cmp
cmp
jecxz
jle
add
pop
xchg
iret
imul
adc
cmp
jmp
xor
sbb
xchg
push
out
push
xchg
shrl
inc
push
inc
sbbb
mov
pusha
push
fstpl
outsb
lods
pop
mov
jae
adc
mov
xlat
adc
mov
cmp
js
and
adc
adc
pop
in
dec
xor
mov
cmpsb
cli
mov
mov
xor
cmp
movsl
cmp
aad
dec
adc
shrl
fs
imul
cmc
nop
aas
xchg
mov
leave
adc
mov
and
popf
jo
mov
rcrl
push
enter
mov
dec
sbb
hlt
cmp
mov
lahf
aaa
jns
imul
inc
push
xor
sub
add
lcall
add
ret
outsl
mov
dec
test
fs
addr16
inc
pusha
mov
iret
pop
in
loop
mov
dec
cs
mov
lahf
mov
popf
mov
pop
xchg
outsb
push
adc
mov
repz
dec
std
adc
add
nop
cmp
push
shr
push
mov
dec
movsl
push
mov
or
sbb
mov
push
daa
imul
dec
fwait
dec
cs
dec
lds
mov
imul
add
xchg
xor
imul
cmp
fdivl
or
dec
mov
push
out
pop
and
pop
mov
scas
hlt
inc
dec
idivl
mov
pop
sbb
idivl
int3
movsb
mov
out
adc
add
sarl
cmp
jne
in
fldt
mov
jb
jle
dec
and
aad
xchg
mov
xor
push
push
int
jno
and
xchg
jp
xlat
jl
jns
testl
xchg
xchg
xor
inc
fmulp
sub
in
int3
out
jb
mov
and
fstpl
dec
stos
fwait
push
ffree
in
ret
bound
je
popf
cmpsb
aam
add
int3
sbb
or
pop
jns
cmpsl
cwtl
cmp
xchg
cmpl
fsubrl
jge
aam
es
mov
sbb
add
enter
cld
out
mov
cmp
loope
push
xchg
aam
cld
lock
cmp
sahf
daa
aaa
add
and
jge
cmpl
xchg
sub
cmp
in
stos
call
es
lcall
outsb
ret
ja
ljmp
xchg
es
mov
out
les
test
and
mov
fisubrs
mov
repz
mov
xchg
fwait
or
xchg
js
cltd
mov
lock
jo
into
mov
rol
add
and
mov
adc
les
add
jb
inc
pop
lods
dec
xlat
mov
aam
outsb
testl
mov
and
sbb
push
fbld
mov
mov
mov
mov
fsubrl
js
mov
xor
btr
mov
icebp
bound
test
mov
and
fiadds
push
push
xor
fwait
mov
sbb
xchg
lahf
jae
enter
pushl
inc
push
push
daa
fcomps
fnsetpm(287
std
gs
imul
sbb
add
dec
in
sbb
xor
jae
push
mov
adc
xchg
push
jle
inc
push
pop
scas
pop
cmpsl
imul
divl
cli
popf
sti
add
rcll
cpuid
mov
rclb
mov
and
pop
sbb
mov
subl
mov
pop
add
sub
jb
mov
and
mov
xlat
das
outsb
inc
mov
jge
testb
adc
sub
jg
ret
sub
mov
ss
cld
pop
and
pop
nopl
inc
out
shlb
arpl
cmp
and
jecxz
or
push
jge
adc
pop
scas
mov
mov
pop
stos
mov
es
outsl
sbb
repz
clc
js
mov
pop
pop
out
dec
pushf
jl
inc
iret
aas
add
stos
fsubs
pop
push
rcrl
cltd
sbb
cmpsl
mov
push
mov
mov
rol
mov
mov
adc
mov
rorb
dec
xor
test
lods
rcl
addl
pop
paddusw
pop
sbb
mov
orl
cmp
add
shll
jb
sbb
in
push
into
jle
mov
fbstp
popa
aad
pop
adc
es
adc
sbb
fbld
mov
stos
arpl
mov
sbb
mov
inc
mov
cmc
mov
xchg
aaa
xor
aaa
mov
adc
imul
lahf
sub
idivl
cltd
dec
fdivs
lds
test
add
cmp
sub
inc
push
xchg
sbb
pop
sub
ret
test
pushf
sub
or
pop
push
lock
inc
stos
cmc
dec
mov
mov
sub
mov
cmp
add
sub
add
pop
mov
cmp
fnstenv
je
or
incb
xor
imul
notb
and
in
jle
inc
lahf
sub
push
cmp
in
nop
mov
inc
dec
cs
pushf
decl
shl
jmp
jl
ds
adc
push
nop
add
jnp
aaa
xchg
mov
push
pop
lahf
cmp
cmp
and
subl
nop
arpl
or
or
cmpsl
pushw
fisubrl
test
mov
aam
aas
cltd
add
jb
push
xlat
popf
xchg
adc
ret
and
dec
xor
pushf
jne
imul
repnz
mov
mov
div
es
imul
xor
jmp
mov
lea
pop
xor
sbbb
roll
adc
pop
xorb
iret
nop
xor
jbe
clc
jecxz
shr
cli
cmpsl
and
int3
test
sbb
mov
std
push
cmp
movsl
mov
pmuludq
mov
mov
iret
orb
outsb
hlt
shll
shlb
add
aaa
xor
arpl
pop
cltd
add
adc
out
mov
or
xchg
pusha
mov
sub
lock
mov
xor
mov
mov
stc
jl
and
movsb
inc
jp
je
sbb
xor
push
push
cmp
sbb
dec
mov
repnz
movsb
mov
or
dec
jb
jo
sbb
pusha
shl
ret
push
lods
mov
ret
xor
or
scas
int
inc
icebp
repz
pop
aad
mov
dec
daa
pop
das
shr
adc
loopne
mov
aas
insb
lret
sub
jmp
call
mov
mov
cmpsl
fsubp
pop
xchg
scas
dec
mov
test
mov
jo
cs
out
sub
add
and
xor
sbb
mov
inc
xchg
cmp
mov
push
daa
mov
push
dec
dec
jg
repnz
test
add
inc
pop
cmpsl
test
int3
xor
ret
icebp
mov
jl
and
sbb
pop
shll
roll
add
or
shlb
frstor
cwtl
cmp
push
mov
icebp
cmp
add
jle
cwtl
dec
scas
push
add
sahf
iret
inc
mov
lock
jecxz
dec
mov
xlat
repnz
ret
xchg
lea
inc
lahf
add
ja
sub
in
outsb
in
enter
dec
jmp
mov
and
dec
xchg
adc
and
fs
add
pop
sti
cmpsb
xor
and
jecxz
xchg
ljmp
xlat
fiadds
lret
lret
in
stos
sar
adc
lock
xchg
lret
pop
ficoms
add
movsl
enter
int3
test
lods
xor
mov
xor
loop
cli
lods
or
sti
repnz
int3
out
iret
cmp
push
mov
insb
mov
stos
int
icebp
fcmovbe
add
sbb
add
dec
hlt
adc
push
add
aas
cmp
ret
arpl
mov
mov
lds
cmc
jge
xor
in
jnp
mov
dec
divl
fnstenv
int
lret
aad
jae
push
jae
int
test
cmp
or
xchg
in
inc
mov
mov
xchg
sub
xor
outsb
pop
outsb
cmpsb
xor
pop
pop
lahf
jbe
cs
fs
sub
jb
hlt
inc
pop
cmc
pop
cmp
pop
fcomip
inc
lock
shrb
and
and
jae
dec
and
inc
inc
xchg
push
scas
mov
or
mov
jae
mov
pusha
lea
dec
test
mov
adc
or
fs
dec
pop
mov
and
outsl
push
dec
scas
dec
jmp
dec
inc
cld
sub
bound
push
ficoms
and
jge
iret
cltd
xor
mov
jb
mov
ss
adc
nop
mov
lcall
and
mov
das
loopne
mov
popf
test
inc
movsb
mov
mov
subl
sar
and
loop
dec
xlat
push
or
sbb
lea
and
mov
scas
sbb
mov
popf
nop
call
adc
call
push
cltd
sbb
das
mov
xor
insb
cmpsb
pusha
pop
dec
sub
or
nop
popa
enter
sbb
lret
push
pop
aam
fidivl
ljmp
pop
lcall
lods
sub
pop
out
inc
inc
sub
mov
stos
xorb
adc
sub
je
add
sbb
shrl
mov
mov
rolb
jmp
cmp
xchg
test
call
mov
div
mov
pop
push
xor
jmp
xchg
lock
pop
fcomip
sbb
inc
pop
push
inc
and
js
scas
into
or
loopne
ss
mov
or
jmp
inc
fidivrl
lods
loopne
mov
mov
sub
jp
in
daa
jl
aaa
jg
imul
lea
in
mov
add
jg
cs
pop
cmp
mov
sub
leave
xchg
xchg
shl
add
jns
xchg
ret
stos
dec
mov
inc
sbb
pop
mov
dec
loopne
push
dec
mov
sub
mov
in
mov
fcomps
pop
shrb
repnz
and
sahf
lea
int
mov
enter
xchg
dec
mov
fisttpll
push
sub
movsl
mov
xor
add
add
push
jbe
bound
imul
mov
xor
adc
iret
and
inc
adc
es
or
mov
pop
xchg
popf
sub
pop
scas
and
mov
jp
push
add
xor
or
mov
jmp
sub
js
cltd
lret
lea
lret
mov
mov
dec
cmp
add
push
test
cmp
mov
dec
mov
pop
mov
mov
mov
lcall
jae
stos
stos
pop
adc
and
mov
push
std
jnp
subps
xchg
pop
sar
cmp
nop
negb
add
imul
shrb
lret
mov
xlat
dec
movsb
cmp
cltd
stos
mov
test
pop
pop
call
xchg
fsubl
clc
cmp
sub
pop
dec
ss
out
cld
jecxz
enter
aas
inc
insb
ss
mov
aas
insl
fimuls
call
dec
adc
pop
mov
std
lods
pop
imul
mov
into
push
loope
sti
xchg
addr16
les
stos
in
or
sbb
mov
xchg
int3
mov
ljmp
out
scas
mov
in
pop
jge
sub
jmp
shlb
mov
mov
gs
add
stos
or
imul
lahf
add
fistps
cltd
fcoml
fiadds
ja
push
and
fnsave
xchg
and
subb
fmulp
lcall
lret
push
xchg
std
inc
sbb
popf
jns
xchg
into
fcmove
jmp
fbstp
xchg
mov
mov
iret
push
or
sub
mov
dec
dec
inc
push
adc
xor
fstpt
fisubrl
mov
cli
iret
cmp
loope
sbb
fldt
mov
lret
or
dec
fistps
mov
cld
jecxz
push
fdivl
test
iret
or
xchg
loop
test
loop
test
test
lea
fwait
sbb
xor
not
dec
adc
out
js
sti
sub
mov
xchg
pusha
je
test
rcrb
and
mov
xor
insb
leave
xorl
je
iret
mov
mov
pushf
or
or
gs
fnstcw
cmp
movsb
pop
aas
stc
outsb
and
lds
mov
out
fstpt
lret
jne
sbb
cs
xor
adc
imul
cli
mov
popf
inc
sbb
test
inc
les
mov
outsl
jne
cmp
jns
add
lret
push
xor
test
adc
fnsave
mov
aas
test
or
repz
fstpt
inc
xor
arpl
ljmp
mov
loop
lock
push
push
push
pushl
pusha
orl
cltd
lahf
jnp
xchg
adc
mov
mov
rcll
sbb
or
pop
std
or
or
sar
inc
fidivs
cmc
adc
cld
add
les
aad
mov
xlat
int
into
icebp
and
adc
pop
mov
shrb
push
jb
jno
inc
push
aad
ja
adc
call
cltd
dec
dec
inc
icebp
mov
lret
and
jnp
inc
in
jo
cmp
fistpl
mov
dec
and
js
cli
mov
xchg
xlat
mov
mov
dec
data16
xchg
dec
cmp
mov
push
xchg
and
or
xor
in
add
jno
ret
cmp
mov
mov
mov
pop
icebp
in
lds
sbb
cltd
mov
ret
sub
pop
dec
adc
mov
inc
sahf
insl
xchg
dec
insb
ret
pop
fucomip
fs
mov
pop
icebp
rolb
test
mov
in
movsl
dec
pop
sub
out
insb
jae
xor
ficomps
cmc
lods
push
jecxz
or
lcall
pop
sub
cltd
xchg
out
mov
push
pop
cltd
out
push
scas
pushf
sub
insl
fisttps
mov
inc
test
push
je
dec
ss
mov
or
or
test
imul
pop
xchg
add
fstl
or
push
lods
cmp
xor
adc
add
cmp
mov
in
sub
xor
rclb
jle
imul
dec
and
xor
sub
jp
mov
shlb
stos
rorb
es
cmp
ss
jp
fisttpl
mov
idivl
add
xchg
or
jecxz
es
jg
rclb
xlat
insl
jbe
pop
cmp
data16
test
sub
ret
into
jbe
add
add
push
sbb
bound
adc
mov
fs
mov
mov
push
dec
fnsave
adc
dec
lahf
inc
adc
stc
and
lea
negb
stos
loopne
and
and
sbb
xchg
imulb
jmp
icebp
push
arpl
out
divb
add
fistps
xchg
sub
cmpsl
mov
int3
mov
cmpsl
add
pop
es
mov
fldt
mov
sbbl
sahf
negb
fs
cmp
out
and
movsl
dec
scas
and
add
mov
push
mov
insb
inc
mov
ret
adc
stos
lret
jg
adc
inc
inc
xor
mov
iret
frstor
adc
xchg
jge
mov
sub
pop
insb
out
dec
ret
into
enter
pusha
lret
dec
ja
pop
mov
and
dec
pop
mov
mov
cmc
inc
jle
outsl
int3
aaa
cmpsb
pop
sub
cmp
sbb
xor
iret
push
mov
mov
xchg
cmc
cmp
jge
sub
lods
dec
popa
lods
inc
gs
scas
popa
and
cld
fisubrl
dec
sub
xor
fisubrl
xchg
mov
jae
jg
inc
jl
into
mov
xchg
push
fdivl
in
pop
movsl
jmp
push
pop
and
insb
xor
mov
jp
in
xchg
mov
mov
inc
xchg
push
or
and
lods
pusha
jae
cmpl
mov
out
inc
jo,pt
in
xor
dec
pop
mov
mov
cmp
cwtl
fsubl
push
xor
bound
adc
mov
in
flds
sub
xchg
pushf
adc
aaa
pop
scas
sbb
popa
add
xor
xchg
add
dec
push
mov
loope
loope
stos
pusha
cmp
jmp
out
and
or
add
cld
push
pop
aaa
rclb
inc
push
int
int
fldenv
cmp
int
mov
js
sbb
ret
xchg
bound
jno
cmp
push
sbb
stos
mov
xchg
ret
stos
jmp
loop
shl
pop
aad
sub
popf
dec
mov
inc
imul
add
cmpsl
rorb
rep
xor
das
push
adc
mov
mov
mov
jmp
mov
hlt
icebp
push
fs
rcpps
jp
sahf
fstpl
xchg
fistl
xchg
adc
aad
push
mov
pop
pop
pushf
fildl
imul
mov
mov
cli
cwtl
xor
sti
sub
inc
cmpsl
push
add
and
sub
inc
loopne
hlt
or
test
cmp
pop
and
aaa
jp
leave
lods
inc
sti
xor
dec
mov
gs
or
pop
jae
je
jae
mov
mov
imul
mov
test
mov
fmuls
mov
das
xchg
pop
push
cmpsl
mov
mov
xor
adc
sub
adc
rcl
cmp
lds
xchg
lds
sahf
sub
sub
pop
xor
testb
add
shl
mov
test
cs
ret
xchg
dec
pop
push
pop
and
mov
sub
mov
pop
cmp
sbb
leave
or
les
xor
cmp
push
cmpsb
adc
mov
cmpb
add
fnsave
sub
xchg
movd
pause
adc
subl
xor
mov
push
or
push
sub
xor
pop
pop
mov
pop
push
mov
sbb
gs
imul
in
dec
inc
xchg
cmp
inc
out
lret
pusha
xchg
aas
je
xlat
lods
int3
pop
or
mov
mov
pop
add
jecxz
addb
inc
xchg
lock
outsl
pop
pop
loop
lcall
cmpsl
push
idivb
mov
sub
das
mov
ret
mov
xchg
push
mov
pushf
scas
cmpb
adc
jnp
mov
negb
int
push
and
test
fwait
push
sahf
call
outsl
mov
bound
and
lahf
push
shrb
lahf
sub
ss
jno
out
test
int
mov
and
test
mov
test
es
jg
loop
negb
test
out
cmp
loop
aad
pop
push
jecxz
add
fcoms
shlb
sarb
xor
fildl
jns
arpl
aas
cmp
add
xchg
sub
xor
mov
inc
adc
push
fsubr
repnz
xor
jge
lret
xor
out
mov
add
xlat
mov
jb
push
std
adc
in
xchg
xchg
and
inc
fldt
jmp
cmp
cwtl
sti
inc
or
and
or
lods
fmull
fwait
outsl
jmp
sahf
cmp
out
pop
dec
out
in
and
push
mov
mov
sbb
mov
adc
sti
mov
jnp
fbstp
int3
push
sub
ficoml
cmp
mov
pop
orb
cli
out
mov
cmp
out
cltd
leave
add
insl
ret
testl
lcall
or
jbe
jp
out
or
lods
shlb
fisubl
pop
jns
sub
sbbb
pop
or
mov
sbb
je
add
aad
adc
jbe
mov
out
add
ljmp
psubd
jbe
xor
aas
pop
push
cltd
rcrb
xchg
or
fwait
inc
ds
sbb
mov
fcoml
push
adc
jb
xchg
mov
mov
clc
out
repnz
pop
dec
icebp
subb
mov
je
mov
shll
sarb
sti
out
cmp
lods
repz
stos
sbb
gs
leave
inc
sbb
cs
cmpsb
fisubrl
aad
jle
mov
int3
dec
fisubrs
loopne
mov
jp
pop
out
aad
xor
aaa
xchg
mov
mov
mov
fisubrs
and
dec
addr16
sbb
cmpsb
mov
sub
xchg
mov
aaa
ffree
andb
and
pop
and
cwtl
inc
andl
cmp
xchg
leave
daa
ss
repz
inc
mov
inc
std
xchg
int
pop
test
sub
xchg
mov
push
fiadds
call
lods
andb
in
roll
mov
dec
dec
push
sbb
shll
in
iret
mov
cmp
adc
jnp
pop
cmc
cmp
scas
sub
fbld
jne
stos
out
xorl
je
test
subl
add
das
fs
inc
lcall
pop
lret
inc
push
or
clc
adc
ja
sti
out
jle
xchg
lds
add
inc
jl
jae
dec
lret
mov
mov
pushf
cmp
push
gs
int
imul
out
push
int3
int3
lock
adc
mov
cmp
mov
mov
push
pushf
sub
push
mov
push
fnsave
dec
adc
or
clc
push
ds
imul
sub
test
or
lods
jp
adc
push
es
push
xchg
lcall
jp
fstps
scas
xor
xchg
out
movsb
add
pop
lods
loopne
sub
in
or
scas
mov
in
push
add
sbb
and
orb
sub
daa
or
fs
lods
xchg
push
pop
jle
mov
icebp
push
into
out
xchg
jle
mull
sbbl
mov
in
ret
and
lret
scas
push
ret
or
dec
xorl
mov
inc
push
pop
out
push
aam
xlat
mov
jne
add
mov
loop
leave
aas
sub
xchg
sbb
and
stos
mov
ds
mov
xchg
out
mov
sub
or
xchg
int3
adcb
pop
xchg
pop
cmp
fists
inc
lods
cmpsb
mov
and
imul
mov
ret
dec
ret
inc
jl
mov
xlat
mov
adc
shlb
sbb
arpl
mov
ficomps
aam
dec
aas
in
ss
dec
pushf
sub
add
cltd
ror
into
and
sub
int3
xor
push
sbb
add
mov
shrl
test
push
adc
fstpt
daa
outsb
mov
mov
inc
push
cmpsb
leave
scas
daa
lea
js
sbb
or
cld
scas
push
dec
mov
orb
repnz
push
jb
mulb
loop
insb
mov
cmpsb
cmp
jge
loope
dec
outsb
mov
lea
mov
push
in
pop
inc
mov
xchg
add
push
mov
jmp
mov
mov
push
jb
mov
add
mov
int
aas
mov
rolb
jbe
xor
fists
sub
and
xor
and
movsl
xor
lahf
xchg
ds
out
fildl
pop
clc
xchg
push
aam
lock
test
cmp
dec
test
pop
lods
xor
fmuls
add
cltd
testl
xchg
pusha
jbe
lret
dec
popf
xor
dec
jg
ds
hlt
sub
adc
dec
pop
mov
pop
test
jp
int
jne
dec
sbb
repnz
stc
push
jno
jns
xor
adc
bound
pop
or
cmp
mov
fistpll
js
cmp
xlat
push
dec
sti
popl
mov
test
jae
test
pusha
in
setb
shll
aad
lret
lods
mov
sbb
test
aad
add
call
jno
jb
ja
push
jmp
jne
mov
into
rcrl
lahf
jge
movsb
idiv
pop
shll
mov
bound
pop
xor
es
decl
jp
bound
cltd
test
mov
out
je
decb
mov
mov
cltd
fstps
sbbl
lret
inc
test
test
out
test
cli
mov
dec
lahf
mov
cmp
sarl
dec
lock
into
pop
bound
or
sub
cs
inc
std
pop
fxam
fnstsw
xor
xchg
push
adc
inc
iret
jl
push
fwait
xor
xlat
xor
pop
add
push
xchg
lcall
inc
int
xor
and
and
outsb
mov
dec
adc
xchg
xchg
je
sbb
inc
rcrl
jne
test
sub
add
dec
ret
into
popa
adc
pop
lds
cs
dec
inc
in
add
inc
bound
xor
addl
adc
test
stos
push
inc
jge
mov
frstor
jp
push
insb
and
enter
in
std
xchg
imul
cli
sbb
mov
push
or
scas
cli
pop
roll
sub
fcomps
ret
adc
stos
inc
sbb
jmp
push
xchg
sub
ds
jbe
pop
jb
bound
daa
inc
mov
xor
int3
stc
mov
out
inc
push
leave
mov
leave
popf
xor
hlt
lahf
lea
sub
call
jo
xorb
js
push
and
sub
sbb
int
add
and
push
pop
hlt
mov
jmp
ja
adc
lret
int
in
fs
add
daa
push
mov
cmp
xor
xchg
adc
rcll
adc
jbe
ret
pusha
subl
in
dec
nopl
push
adc
cli
repz
mov
jecxz
nop
push
mov
sahf
xchg
hlt
scas
or
into
push
add
popa
test
sub
ds
adc
mov
test
cmpsl
jl
cmc
aam
xor
ret
sub
inc
mov
mov
sbb
neg
orl
xor
aam
in
fs
aas
xchg
fldl
ljmp
repnz
sbb
fucom
cmpsb
lret
mov
out
fstps
pop
repnz
push
test
loop
sbb
es
fsts
insl
cmpsl
cld
jnp
mov
ret
mov
lock
out
add
scas
lret
xchg
push
psllq
jp
inc
mov
cmp
test
in
cmp
mov
fidivl
lret
stos
xor
decl
dec
xor
cmp
and
sbb
xor
dec
pop
lods
add
aad
cmp
pop
jo
fldl
sub
mov
pop
inc
fcomip
dec
add
mov
xlat
mov
popf
mov
incb
and
inc
and
pop
sub
sub
mov
pop
mov
cmp
fs
sahf
in
inc
jle
push
xorb
in
and
sbb
rcrl
xor
pop
sbb
les
pusha
xor
les
mov
jmp
scas
call
sahf
xor
jne
inc
movsb
push
daa
in
sub
aas
notb
imul
int3
xchg
jo
hlt
dec
sub
pop
or
xchg
fistpll
and
cmp
in
mov
sub
pop
lret
ficoms
push
cmc
mov
inc
xchg
cmp
or
repz
mov
mov
or
movsl
test
adc
xor
hlt
push
pop
dec
loope
push
loope
and
push
inc
jno
jge
pop
sub
xchg
jge
lods
lods
shll
pop
jp
les
or
imull
enter
pop
shl
mov
push
test
inc
orl
hlt
jnp
fs
sub
bnd
rclb
or
jne
xor
dec
mov
lods
pushf
fstpl
mov
dec
xchg
mov
les
jl
push
in
psubsb
loop
das
push
movsl
pop
and
dec
push
test
pop
cs
scas
sbb
lods
ja
popf
cmp
sub
iret
mov
sbbb
rep
fs
xor
stos
int
sbb
pop
push
pusha
sahf
std
out
xchg
sub
push
pop
out
jl
fisttps
frstor
mov
lcall
fwait
out
stos
jnp
ljmp
hlt
mov
loopne
mov
mov
test
enter
mov
fcmovne
mov
aam
jb
or
mov
bound
int
outsl
sarb
test
cmp
test
xor
test
das
testl
fisubrs
push
push
jns
jns
jl
mov
lods
scas
sete
mov
popa
fdivs
into
mov
add
cwtl
pop
xchg
lds
pop
sbbl
data16
jb,pn
lahf
sbb
or
test
add
xchg
call
and
mov
outsl
or
pop
loop
dec
pop
loop
rcl
add
sub
into
and
mov
add
fsubl
mov
or
lock
int
out
and
cmpsl
jg
dec
push
adc
bound
ret
adcb
adc
mov
xor
aas
or
movsl
rorl
push
ret
sub
fsubr
in
loopne
mov
pop
lods
sub
add
pop
xchg
pop
cmp
cli
dec
insl
fcompl
mov
fsubp
pop
mov
stos
iret
ret
fsubrp
mov
mov
jle
push
addr16
cmp
adc
xchg
mov
jae
movsb
in
inc
pop
out
xchg
push
in
out
loope
sbbb
and
js
je
loope
pop
lea
inc
adc
pop
push
clc
enter
movsl
movntq
cmpsb
scas
pop
or
xor
movsb
pop
add
mov
mov
push
icebp
inc
push
jge
arpl
outsb
lcall
icebp
mov
mov
in
push
cli
pop
stc
in
leave
fbstp
test
fsubl
mov
enter
imul
imul
out
or
sub
lods
xlat
rolb
jbe
pop
sbbl
add
cld
add
push
test
lods
jns
cmp
push
repnz
and
xchg
push
test
add
push
stos
or
sar
ret
js
adcb
lret
mov
fs
idiv
shl
inc
mov
adc
ljmp
and
dec
adc
or
ljmp
sub
lods
or
inc
or
ret
stos
mov
xlat
mov
ja
mov
or
test
fisubl
pop
adc
push
mov
ss
leave
ja
xchg
outsb
nop
shrb
pop
ror
xor
xchg
push
int
sbb
inc
mov
mov
lret
xlat
and
sbbb
aas
das
lahf
mov
into
es
ret
add
xor
pop
sub
xor
mov
xorb
add
ljmp
add
sarb
cwtl
fisttpl
mov
stos
ret
fmull
xchg
push
push
add
mov
arpl
adc
cld
pop
push
subl
lds
xor
inc
inc
test
lods
jae
iret
dec
es
sbb
in
scas
and
mull
adc
push
jb
sub
fwait
mov
rorl
sarl
frstor
mov
push
sti
in
call
mov
sub
inc
lcall
jecxz
lea
push
popa
cmp
out
in
xor
jno
aaa
xchg
insl
add
mov
pop
fwait
clc
std
dec
cltd
jae
rcrl
test
dec
push
dec
out
ret
fs
mov
out
lock
aad
add
fwait
inc
mov
mov
addr16
dec
cmp
out
lea
inc
repz
jl
and
sbb
pop
mov
inc
lds
jge
insb
fiaddl
mov
xor
test
int3
andb
push
adc
repz
scas
pusha
dec
lret
sub
cmpsl
jmp
push
shrb
and
mov
sub
mov
popf
cmp
xlat
push
test
std
test
daa
aas
lods
pop
push
xor
jmp
aad
dec
lret
add
gs
jbe
and
add
mov
jb
sub
cmp
mov
and
pop
mov
push
sti
adc
xchg
aaa
sahf
push
mov
mov
mov
lcall
sub
or
ja
push
jo
cmp
jns
shl
push
cmp
xchg
iret
ss
add
push
dec
movsl
and
jno
xor
ds
lret
aad
test
add
cmc
add
inc
ja
dec
insl
aam
mov
lds
push
bnd
dec
push
sub
cmpl
out
or
mov
push
scas
mov
lcall
sbb
push
dec
xor
add
mov
dec
int3
lea
dec
ljmp
jmp
mov
into
xchg
add
bound
fiaddl
stc
sbb
adcb
adc
jo
cmp
xlat
pop
fiaddl
aam
inc
mov
decb
aas
notl
push
sbb
mov
lcall
lods
loop
or
sti
mov
mov
outsb
iret
pop
cmp
push
inc
jmp
out
into
addr16
loop
popf
test
std
xchg
jne
xor
fisttpll
rcrb
mov
loop
cwtl
in
pop
jo
add
xlat
mov
push
pop
mov
jne
dec
mov
orl
or
stos
cmpsb
int3
aad
sbb
cmpsl
pop
sub
mov
shl
sub
js
pushf
push
dec
lret
jge
xor
lahf
in
scas
popa
push
jno
sub
dec
imul
into
mov
xor
mov
hlt
sbb
adc
int3
js
xchg
cmpsl
fidivrs
inc
push
adc
loope
test
std
cld
movsb
add
xor
ja
cmp
pop
mov
sbb
ffreep
sbb
loop
push
inc
push
int
gs
sub
and
mov
dec
repnz
das
in
cld
fmuls
dec
pop
mov
mov
in
or
cltd
jno
rcll
fsubs
rcrb
clc
xor
xor
cld
outsb
cmp
mov
fidivs
cli
test
cmp
movsl
pop
and
mov
pusha
outsb
fiadds
imul
mov
sbb
std
mov
out
or
jg
movsb
push
mov
sub
pushf
pop
push
mov
pop
or
push
jecxz
mov
mov
fstpt
and
rcl
sbb
jmp
mov
es
lahf
and
or
mov
fcomps
cmpsb
fsubrs
push
mov
pop
push
pop
add
or
in
xchg
add
data16
xchg
or
add
adc
in
adc
mov
call
out
pop
cmp
adc
dec
test
movsb
inc
mov
divl
xor
mov
and
pushf
jl
hlt
mov
bound
inc
pop
fadd
std
mov
push
int
and
daa
jge
push
sti
push
dec
push
arpl
pop
adc
xor
push
or
jne
pop
push
add
or
nop
pushf
or
inc
jo
inc
dec
cmp
push
mov
cmp
push
jg
xor
mov
xorl
in
push
pushf
inc
or
aad
xchg
outsl
sub
rcrb
incl
outsb
arpl
js
fdivrl
mov
icebp
pop
push
add
lret
push
pop
and
pop
jge
or
adc
sahf
fs
push
stc
mov
or
data16
cli
and
lock
inc
sub
loopne
sarl
add
mov
mov
sub
in
jno
cld
mov
sbb
rorl
sbb
out
ret
and
push
push
pop
xchg
pop
pushf
aam
call
and
imul
pop
push
xchg
orl
mov
mov
xor
out
and
adc
test
js
cmpsl
mov
mov
lcall
mov
and
jb
fcomps
aas
xor
decl
push
pusha
int
cmp
mov
inc
inc
mov
lahf
mov
int3
push
mov
xchg
dec
fwait
leave
inc
enter
pusha
mov
jg
adc
cltd
push
jg
sti
sub
mov
add
pop
adc
xchg
in
call
jge
test
dec
cmpsb
cmp
sbb
dec
iret
int
pop
sub
stos
rcll
sbb
pop
push
xor
das
sbb
cmp
popa
sub
mov
sub
xchg
sub
cmp
pop
lock
leave
out
or
scas
inc
mov
inc
jnp
push
mov
sbb
call
rolb
int3
divb
enter
pop
jns
lods
dec
mov
add
pop
adc
movsb
out
mov
sbb
jno
je
mov
jp
adc
push
imul
out
and
fimuls
stos
rorl
jmp
xchg
test
jnp
xchg
adc
stos
and
dec
scas
mov
and
fidivs
xchg
push
data16
push
insl
push
adc
adc
ret
push
cltd
lea
fisubl
push
les
lahf
imul
xor
fwait
adc
out
pop
ja
or
lods
push
push
pop
mov
mov
ret
pop
aas
call
gs
push
inc
xlat
shr
inc
stos
fcmovbe
movsl
push
stos
or
test
es
push
adc
jo
lock
mov
mov
cmp
and
xchg
adcl
lock
xchg
ficoms
test
es
loopne
mov
mov
scas
dec
insb
ljmp
inc
adc
adc
push
loop
int
adc
cmp
jno
dec
aas
movsb
jmp
jge
popf
into
ja
and
xlat
dec
cmp
movsl
push
mov
out
rcll
test
push
mov
fwait
in
fisubrl
push
lahf
addr16
xorl
xchg
push
sbb
push
mov
xor
or
and
inc
cmp
popf
test
lock
mov
aam
sbb
xchg
sahf
sub
xor
pop
and
adc
jmp
xor
nop
inc
or
sub
cld
cmp
nop
mov
xchg
pusha
out
jl
or
dec
mov
fcoms
xchg
lret
inc
stos
scas
mov
xorl
roll
sub
imul
in
ds
fwait
test
aam
xor
push
enter
fstpt
mov
xchg
inc
jno
jno
and
adc
and
int
add
fidivrl
mov
cmpsl
int
jb
mov
loope
mov
xor
or
cltd
and
call
imul
fsts
or
jnp
inc
xor
aad
sub
in
sahf
sub
popf
daa
jne
cmc
es
into
push
testb
sti
xchg
jne
and
loop
push
insl
jp
sbb
pop
in
jnp
cmp
xchg
jae
cmpsb
xor
fdivrs
insl
cmc
aaa
inc
xchg
mov
outsb
cmc
dec
out
pop
lahf
fwait
and
test
cmpsl
jne
pop
arpl
pop
xor
dec
lcall
insb
insl
fists
daa
iret
test
imul
je
addr16
gs
cs
jle
ds
add
out
mov
rorb
sbb
leave
push
xor
enter
lret
scas
movsb
jl
test
mov
bound
rol
mov
pop
push
push
and
sub
insl
push
push
lret
ja
repz
std
sarl
rclb
push
or
dec
lds
xor
cltd
or
sub
lods
fbstp
decl
fldenv
mov
push
inc
pop
aas
jp
les
pusha
xor
dec
cmp
cltd
pop
pop
jnp
mov
sub
push
sahf
call
adc
sub
imul
loopne
fsubs
in
xchg
test
imul
cmpsl
inc
add
inc
dec
or
and
pop
imulb
dec
fcmovu
pop
and
cmp
rcl
outsb
out
xchg
sub
sbb
and
sub
aam
dec
push
lds
xor
cmp
iret
pop
pop
fcomps
ljmp
mov
daa
nop
or
cmp
xor
mov
push
scas
adc
xchg
mov
ss
lcall
dec
bound
aas
sbb
pop
lods
bound
into
jb
inc
pop
test
mov
adc
insb
lahf
shll
xlat
mov
std
sbb
pop
and
mov
jge
adc
out
cmp
sub
adc
icebp
mov
adc
or
lret
aaa
cli
out
dec
jnp
dec
jle
scas
into
adc
bound
icebp
xchg
mov
cmc
mov
or
ret
daa
aam
jb
lea
lret
stc
adc
mov
xlat
int
sahf
dec
sub
popf
out
mov
cwtl
rorb
movsl
das
imul
lea
xchg
sbb
cld
hlt
adc
out
fcompl
mov
xlat
es
inc
inc
das
pop
test
cmc
sub
push
adc
mov
or
jno
je
pop
inc
inc
sub
nop
cltd
adc
xor
and
mov
ss
mov
loopne
and
sbb
js
or
push
lods
repnz
pop
push
mov
std
xchg
jbe
cmp
inc
outsb
xchg
lods
sti
cmp
test
hlt
call
dec
mov
test
dec
imul
shll
leave
repz
mov
jge,pt
add
int3
mov
pop
inc
jnp
push
iret
and
mov
and
rorl
or
stc
xor
shl
or
or
add
xchg
add
out
xchg
pop
ss
cmpsl
lahf
stos
pop
mov
and
int3
add
jge
inc
mov
cld
int3
adc
push
push
lret
jp
in
les
jb
pop
mov
test
movsb
adc
into
add
insl
adc
adc
cwtl
pop
jp
test
cmp
aas
addr16
adc
mov
js
das
popf
andl
add
add
neg
and
pusha
sbb
push
rcrl
aaa
inc
lds
lds
adc
shrl
nop
movsl
sub
or
in
pop
je
mov
ljmp
mov
mov
xor
cwtl
insb
cmp
sahf
rcrb
pop
dec
sbb
gs
enter
fwait
adc
out
jno
cmp
mov
in
jmp
lds
popa
mov
fwait
mov
lahf
rcrl
pop
cwtl
xlat
loopne
rol
jne
sbb
test
mov
ljmp
repz
movsb
fmuls
mov
mov
lcall
inc
add
or
aaa
sbb
and
jp
daa
fcoml
mov
add
sub
insb
sub
sbb
jnp
pop
add
idivb
adc
cmc
std
call
xor
sbb
inc
sub
mov
add
lcall
jo
test
jg
sub
mov
subb
xor
push
enter
imul
lret
scas
adc
mov
xchg
in
push
jb
dec
popa
jae
cld
jnp
dec
xchg
movsl
lock
push
enter
dec
cmp
xchg
xchg
lods
stos
mov
cwtl
enter
nop
and
jle
jl
jecxz
lds
test
mov
jle
insl
jno
fs
imul
mov
jmp
out
aas
outsl
pop
inc
vmread
and
xor
andps
orl
lret
daa
xchg
jle
shll
dec
dec
stc
mov
sahf
fldenv
ds
js
cmp
fiaddl
mov
mov
mov
dec
jns
push
iret
hlt
or
jnp
pop
dec
or
mov
jae
jp
mov
jg
adc
jge
mov
rcll
adcb
cs
push
or
data16
mov
lret
adc
pop
mulb
stos
iret
int3
jns
dec
or
sti
xchg
cmp
add
push
ljmp
xchg
mov
add
sub
jne
leave
push
shll
pushf
pop
push
inc
sbb
movsb
loop
mov
jl
add
ja
insl
jo
nop
xor
daa
insb
jno
mov
push
movsb
inc
inc
or
jp
sbb
xor
inc
in
and
pop
jg
aas
negb
sub
test
pop
jl
ret
cltd
fs
xchg
sbb
xor
loopne
or
pop
sub
je
mov
mov
sbb
inc
clc
dec
pop
jne
nop
ljmp
mov
incb
aas
iret
ss
bnd
clc
and
adc
add
jbe
bound
inc
mov
jecxz
cmp
outsb
cld
repz
popa
inc
jbe
ret
sbb
mov
cmp
push
adc
rcll
jb
popf
lcall
or
mov
mov
inc
or
add
ret
adc
push
mov
and
dec
or
push
pop
ss
pop
xor
outsb
insl
aaa
xor
jne
xchg
jp
push
repnz
sti
leave
js
clc
sar
dec
mov
add
sbb
dec
call
sbb
fbstp
mov
lcall
cwtl
xchg
pop
push
fwait
mov
xchg
sub
ss
jae
imul
cmp
icebp
test
pop
mov
cmc
leave
pusha
fildll
adc
mov
xchg
sbb
imul
push
cli
jne
cmp
sub
lds
lahf
fadds
in
push
mov
popf
rcll
icebp
mov
push
ret
jp
les
mov
idivb
mov
push
pushf
sub
shrl
jb
sub
insl
adc
outsb
mov
ret
or
dec
shr
dec
push
inc
fs
dec
ljmp
adc
xor
xchg
test
mov
and
jbe
xor
sbb
jp
jnp
pop
cmp
mov
adc
xor
cld
iret
jno
xchg
pop
popf
int3
jg
popa
mov
push
lea
mov
lea
xchg
mov
jns
sbb
jmp
pop
pop
out
sub
inc
fstl
cmc
jne
mov
cmp
ss
dec
std
cmp
mov
aad
popf
in
fs
testl
adc
aas
jle,pn
scas
adc
imul
push
aad
sub
decb
std
cmpsw
das
dec
xchg
inc
ds
xor
movsl
out
inc
add
jge
add
leave
xor
jo
add
into
cmp
push
sub
icebp
ss
xchg
cmc
dec
cwtl
cmp
add
or
push
ljmp
ror
mov
es
cmp
mov
sub
dec
dec
push
les
imulb
push
pop
out
inc
test
dec
test
pop
lods
or
sbb
rcrl
adc
scas
jp
dec
cmp
lcall
cmp
pushf
pusha
divb
lahf
fs
repnz
xchg
pusha
scas
out
insb
rolb
test
divl
pop
sub
hlt
xchg
mov
inc
cmp
sbb
test
stc
adc
jo
jbe
push
js
mov
mov
idivb
jno
imul
xor
sbb
fbstp
sbb
cwtl
jae
pusha
xchg
mov
pushf
cltd
scas
jle
pop
jle
mov
jp
cmp
mov
mov
sbb
ficompl
jg
int
inc
inc
mov
push
mov
cmp
pop
push
mov
xlat
adc
jp
push
cmpsb
mov
jle
or
out
cmp
fnstcw
mov
lods
roll
imul
repnz
lods
in
jnp
and
lods
adc
sbb
lea
xchg
pop
lea
xor
push
xchg
jle
pop
xor
or
jp
mov
les
xor
push
ret
xor
lret
or
sub
lcall
push
push
jne
scas
push
lret
sahf
out
mov
imulb
sbb
push
inc
aam
icebp
inc
mov
in
ja
xor
pop
inc
dec
inc
xchg
mulb
repnz
xchg
std
pop
imul
iret
sbb
jge
aaa
mov
das
add
xchg
and
add
adc
mov
out
and
stc
push
ljmp
mov
stc
jae
inc
ljmp
jns
cmp
enter
xchg
add
mov
push
mov
or
pop
and
aas
dec
dec
mov
or
jnp
xor
pop
xorl
xchg
pop
sub
sub
jbe
movswl
out
bound
test
shrl
les
push
sti
les
pusha
xchg
or
dec
add
mov
test
lock
lock
test
fbstp
movsl
jp
gs
jbe
pusha
pop
push
pop
fmull
lret
add
test
into
loop
call
nop
jecxz
pop
or
popf
xor
sarb
pop
out
xor
outsl
mov
fucom
cmpsb
insb
pop
clc
cmpsb
sbb
jmp
stos
inc
fsubrs
dec
add
les
sub
push
xor
cmp
js
movsb
push
lods
cmp
mov
add
inc
sub
inc
cmp
sub
fidivrs
adc
pushf
pop
aas
aaa
repnz
or
pop
lahf
inc
add
fnstsw
mov
and
mov
fnstsw
adc
pop
mov
arpl
and
sbb
sub
jns
rcl
add
idivb
clc
fmull
pop
testb
repnz
mov
lods
dec
mov
and
movsl
sbb
xchg
fwait
pop
sub
hlt
mov
sub
push
fldenv
push
aad
rclb
mov
jne
push
lret
fidivrl
mov
push
sahf
jg
outsl
xor
shl
cld
je
aas
test
sbb
push
scas
sbb
fcom
bound
add
adc
aad
test
movsl
out
inc
es
out
xchg
ds
test
push
pop
or
les
fst
inc
aas
in
incb
sbb
mov
add
sti
cmp
lods
cli
xchg
sbb
mov
lahf
add
sbb
shrl
out
or
mov
add
iret
lea
shrb
jne
add
push
and
pop
in
or
jmp
mov
outsb
fmul
out
fwait
jmp
enter
loopne
js
in
push
es
arpl
push
fwait
inc
mov
xor
cli
test
nop
data16
adc
push
lret
enter
lds
cmpsl
hlt
js
insl
mov
pop
inc
or
repz
icebp
or
push
or
cmpsl
jg
ss
into
int3
pushw
lret
jns
aad
mov
inc
adc
ljmp
pop
sarb
adc
ds
adc
xor
ja
cmc
and
adc
lahf
int
loopne
lock
jg
push
push
jae
adcl
lret
lret
loopne
das
lret
cwtl
jmp
mov
push
xchg
pop
sbb
push
repnz
add
jle
add
scas
sbb
inc
jle
push
push
test
xlat
mov
push
jo
nop
adc
aam
mov
fnstcw
std
cmp
mov
add
inc
movb
inc
and
mov
cmp
xchg
mov
in
sbb
or
scas
fimuls
and
je
and
data16
xadd
add
mov
sbb
pusha
push
jmp
aas
repz
mov
fisttps
frstor
pop
jmp
cltd
add
rorl
adc
es
sbbb
adc
pop
neg
xchg
and
les
adc
jb
push
pushf
add
add
mov
ljmp
push
dec
jo
les
cli
and
jae
inc
gs
jmp
ret
sbb
xchg
add
in
pop
rolb
sar
fwait
mov
lea
inc
pop
adc
pusha
sbb
mov
xor
or
sbb
and
jne
mov
pop
mov
int3
hlt
mov
mov
fmull
xor
inc
test
pop
push
jns
and
inc
mov
into
or
inc
into
cwtl
enter
sbb
out
std
in
js
mov
movsb
stos
call
cld
and
call
lahf
es
adc
rcrb
out
jle
and
xchg
push
cmpsb
jle
pop
adc
test
dec
aad
fs
lret
mov
xor
mov
xchg
pusha
xchg
js
loopne
nop
push
sbb
xchg
out
mov
and
or
loop
mov
loopne
iret
movb
lcall
loope
outsb
xchg
xor
loopne
mov
cmpsb
ja
orl
mov
jne
nop
mov
sar
sbb
in
nop
popa
inc
lods
roll
je
sub
shll
push
pushl
das
mov
fucomi
xchg
in
jnp
or
jmp
or
jle
data16
mov
add
jns
not
jno
imul
sbb
add
mov
add
mov
mov
and
popa
or
push
xor
mov
cs
out
or
icebp
jecxz
aas
sti
push
inc
aam
mov
ret
or
mov
ret
lock
outsl
push
add
in
shlb
jo
repnz
add
inc
fcoml
fiadds
lds
adc
xchg
fsubl
pop
lret
aam
push
out
std
jle
mov
shl
loopne
dec
sbb
mov
ljmp
icebp
mov
repz
xor
push
pop
loope
push
cmpsb
jge
scas
mov
cmp
jg
xchg
in
insl
out
sahf
dec
pushf
imul
adc
xchg
fadds
int
rcl
add
adc
jo
xor
adc
pop
mov
mov
xor
cmp
aaa
mov
jae
cmpsl
jl
sub
add
scas
scas
ss
xchg
scas
mov
sbb
pop
mov
xor
mov
std
jns
dec
mov
mov
xor
cmp
or
ret
jbe
leave
add
xchg
jne
cmp
outsl
xchg
sub
int3
jns
scas
decb
xchg
insl
or
dec
sbb
and
adc
mov
enter
cmp
mov
inc
xchg
xlat
hlt
repnz
loop
clc
or
sub
int3
cmpsl
sub
sbbb
rcrl
enter
in
dec
arpl
int3
imul
sbb
gs
jno
and
les
xchg
rcll
pop
dec
add
fstp
mulb
xchg
dec
les
test
insb
sub
pop
fsubs
fs
sbb
cltd
fsubr
push
or
cs
sub
ret
push
fstpt
iret
outsl
adc
out
jle
ss
sbb
stos
pop
xorb
push
inc
inc
aaa
cmc
or
js
jp
test
insl
jl
xorb
jecxz
xchg
fsubrl
lds
pop
adc
adc
push
mov
dec
dec
mov
sbb
mov
cmp
mov
daa
inc
inc
jbe
mov
or
ret
shrb
mov
cmp
int
mov
into
test
cmp
gs
ds
fwait
and
popf
or
loop
inc
adcb
out
sbb
or
mov
mov
jns
pop
popa
pushf
inc
mov
data16
loop
mov
sbb
push
fisubs
pop
jbe
out
push
cmc
pusha
popf
in
adc
jecxz
ds
dec
cmp
and
mov
mov
add
clc
mov
or
jb
push
stos
mov
lock
dec
jns
enter
sbb
mov
dec
jmp
mov
inc
adc
leave
inc
jb
pop
dec
stos
imul
cld
addb
push
ljmp
shrl
rolb
cmc
pop
adc
mov
adc
push
into
mov
sbb
pop
pop
movsl
cli
fisttps
xchg
lahf
iret
ret
dec
or
mov
ja
mov
mov
xchg
jl
jp
daa
addr16
xor
jns
push
neg
push
negb
push
out
inc
mov
push
nop
dec
sub
hlt
in
les
push
mov
cld
fcoml
test
xchg
icebp
mov
in
lcall
cmc
and
lret
sub
sbb
jb
xor
jae
fiadds
movl
xchg
push
dec
shlb
xor
jb
mov
pop
pop
push
fbstp
iret
mov
xchg
sub
or
in
pop
dec
mov
jo
push
mov
jge
scas
fisubrs
cltd
mov
xchg
adc
jae
mov
push
in
fnsave
sbb
psllw
lds
daa
repnz
push
adc
xor
push
data16
lock
add
fists
stos
inc
jo
mov
icebp
sbb
sti
pop
lock
push
arpl
xor
adc
insl
jmp
and
int
jae
jle
insl
xor
add
adc
std
sub
jb
ja
dec
insl
cmp
xor
and
and
stos
xchg
and
shlb
add
push
sub
pop
loope
sbb
xor
or
cmpsb
ljmp
sbb
cmpb
mov
repnz
dec
sahf
aad
or
cwtl
test
test
adc
movsl
pop
xchg
jmp
bound
push
add
xor
pusha
inc
inc
or
cmp
mov
ret
imull
in
jg
dec
and
test
pop
out
add
pushf
int
mov
sahf
dec
lods
push
push
repnz
imul
adc
scas
inc
and
lret
fdivrl
fldl
sub
sub
out
pop
jno
xchg
inc
iret
cld
ja
cmpb
lods
mov
cmpb
push
out
sahf
jno
pop
ss
hlt
insl
cli
or
xchg
mov
push
cmp
sub
and
jl
out
jb
loop
aad
arpl
jb
dec
xor
mov
sbb
ss
sahf
sbb
push
xchg
icebp
xlat
std
add
gs
adc
stc
fmul
repz
pop
clc
sub
or
out
mov
jns
hlt
cwtl
stos
fmul
sbb
jl
push
jle
add
cmp
dec
loopne
test
push
lds
ljmp
and
scas
mov
and
jmp
aad
inc
add
out
fisttpl
dec
inc
push
in
sahf
sub
movsl
popa
xor
jno
adc
sbb
ret
movsb
call
xor
mov
inc
push
dec
cli
cmp
xor
pop
or
jecxz
xchg
xchg
or
cmp
dec
arpl
xchg
adc
ret
mov
ficompl
addr16
fwait
pusha
xchg
dec
lret
cltd
sbb
subl
push
out
rorb
nop
xchg
xchg
xor
enter
mov
mov
loop
bndstx
cltd
imul
push
adc
push
jnp
jmp
test
test
push
mov
aaa
stc
jge
adc
inc
cli
mov
jmp
or
rcrb
dec
lret
insl
mov
test
jo
iret
mov
inc
or
cmpsl
dec
loop
nop
or
sbb
jb
pop
loopne
and
push
clc
mov
es
pop
mov
out
or
test
sub
arpl
push
ret
push
jecxz
imul
out
and
jmp
mov
jno
push
movsb
push
push
jl
cmp
cmp
cmp
in
fldt
decb
pop
push
jge
jo
je
push
pop
xor
cmpsl
mov
xor
lcall
ljmp
test
roll
xchg
push
sahf
insl
ret
and
movsb
cmp
idivl
out
mov
shlb
push
pop
sbb
mov
je
push
icebp
mov
and
pop
and
sahf
adc
mov
cmpsl
xchg
gs
mov
stos
push
and
fdiv
je
addr16
lcall
mov
lods
cmp
jnp
lds
mov
ds
jo
xchg
xchg
fidivl
mov
dec
mov
mov
xchg
or
adc
sub
jnp
aam
jb
leave
cltd
mov
mov
popa
or
pushf
shrl
cmp
inc
adc
stos
cli
inc
adc
mov
lahf
dec
sar
dec
cmp
pop
jne
xor
xorl
je
jle
add
add
pop
cmpsl
jecxz
mov
or
int
aaa
cld
adc
jnp
leave
dec
nop
rolb
in
in
stos
xchg
inc
ret
cwtl
adc
fcoml
repnz
or
push
ds
adc
xor
ljmp
lahf
jbe
dec
xchg
jb
add
fisttpl
hlt
xor
xchg
mov
mov
ss
daa
test
mov
cmp
push
mov
mov
pusha
out
push
test
mov
adc
or
fidivrl
cmp
stc
add
sbb
or
push
or
sti
push
repz
outsb
push
das
or
push
and
mov
adc
add
leave
inc
cs
and
mov
enter
mov
dec
roll
lods
and
and
pushf
fldcw
dec
push
adc
xchg
push
mov
sub
push
add
jbe
jno
test
stos
psllw
jmp
cmp
cltd
repnz
daa
add
das
mov
sbb
leave
jl
in
inc
xor
imul
push
sub
push
add
insl
push
mov
clc
ficomps
test
mov
jg
ja
or
cmc
and
decb
mov
and
out
sbb
cltd
aaa
mov
lret
xchg
inc
aam
nop
jmp
loopne
sti
jb
or
repz
js
pop
in
mov
fists
jecxz
insl
out
fcmovnu
pop
xor
adc
inc
outsb
mov
or
jle
inc
fdivr
ja
lcall
inc
mov
mov
mov
cmp
loop
jmp
int
ret
subps
arpl
jecxz
sbb
call
fs
or
mov
inc
leave
jno
fadds
cmp
push
jbe
jne
lret
dec
xchg
daa
mov
ret
pusha
fwait
mov
stos
and
mov
xchg
sbb
mov
les
test
lods
sahf
imul
in
push
sbb
push
jnp
sbb
xchg
inc
push
dec
inc
adc
lret
ss
sbb
subl
stos
pop
rol
rcl
dec
imul
loop
adc
leave
addl
or
xor
iret
ljmp
or
mov
lea
les
add
shrb
jmp
cmp
inc
add
rcrb
dec
mov
push
cwtl
or
js
cwtl
jge
and
shlb
lds
out
loop
es
ret
ficomps
push
pushf
fldt
std
xchg
mov
sbb
mov
fmuls
xor
ljmp
lret
cmp
stos
sbb
sub
lret
movsb
gs
lcall
test
cmp
pop
jne
and
mov
imul
push
cmp
cwtl
daa
xlat
pop
jmp
xlat
in
dec
mov
sbb
scas
shl
push
imull
das
mov
dec
popf
sti
stc
push
test
xchg
inc
imul
adc
xchg
fisubrs
inc
inc
out
clc
jae
mov
incl
outsb
and
lods
xor
and
dec
cs
outsl
xchg
gs
xlat
sub
hlt
push
cmp
movsl
out
lea
push
ficompl
js
ret
outsb
or
int
ret
or
jns
xchg
addr16
jbe
int3
sbb
sbb
cmpsl
ja
mov
pop
repz
pop
es
icebp
imul
mov
fcomps
xchg
mov
outsb
xor
sub
adc
popf
sbb
push
sbb
sarb
bound
aad
xchg
test
int
mov
aam
jp
sub
cs
fnstsw
test
ja
sbb
vaddss
and
fcomps
jno
sti
xor
xor
into
into
scas
fs
scas
fcmovbe
test
subb
jno,pt
clc
jne
popf
sub
cmp
rclb
icebp
loopne
lods
cmp
mov
sub
or
shlb
sti
insb
fidivrs
push
mov
inc
daa
daa
repz
xor
inc
enter
addr16
loope
addr16
cwtl
mov
daa
cli
or
or
int3
push
popa
cmp
push
xchg
mov
out
pop
fsubrl
xchg
int
xor
jge
and
aas
in
test
adc
add
incl
sbb
lret
int
add
mov
lret
out
pop
popf
jmp
test
xor
fs
sbb
leave
sbb
fdivrl
hlt
jmp
mov
popa
or
adc
sahf
xchg
push
pop
jb
adc
inc
mov
mov
movsb
pop
fcoms
inc
lret
inc
xor
sahf
fsubl
jl
sbb
popf
test
mov
push
call
mov
clc
nop
frstor
adc
push
hlt
cmc
cltd
push
xchg
jp
hlt
pop
clc
jnp
test
fstpl
adc
imul
insb
dec
mov
das
outsl
jno
ds
stos
pop
mov
arpl
loope
pop
inc
roll
mov
fisubrs
into
pop
push
jecxz
mov
fiadds
negl
pop
cmp
cmp
popl
push
sarl
sub
inc
dec
adc
jne,pn
shrb
xchg
jecxz
jl
nop
aam
push
xchg
xchg
push
jg
std
mov
and
xor
loopne
mov
dec
or
jl
loop
jae
clc
sub
stos
iret
inc
jge
cli
cmpsb
push
scas
xor
sub
bound
data16
pop
es
loop
repnz
insb
stos
xorb
loope
pop
jle
imul
ret
or
stos
jp
es
cs
lea
scas
jl
icebp
xchg
outsl
lock
xorl
sarb
mov
mov
cmpb
dec
and
loop
fmull
xor
jmp
add
fsubrl
sbb
mov
bnd
pop
fwait
jbe
std
fcoml
lods
test
ja
mov
sbb
pushf
fdivrp
xor
cmp
pop
lret
xchg
inc
ja
stos
pop
xorl
or
js
push
addr16
lock
outsb
stos
dec
xchg
inc
mov
hlt
inc
lret
xchg
test
jecxz
leave
pop
pushf
pop
into
adc
mov
sub
repz
call
pushf
loop
pop
push
outsl
push
mov
out
mov
fistpl
push
mov
out
sub
in
mov
dec
popf
mov
fldenv
aad
out
movsl
jge
cmpsb
int3
jp
inc
push
cwtl
popl
clc
call
adc
stos
dec
ret
jb,pt
sub
xrelease
fwait
xor
les
adc
jl
add
popf
and
andl
mov
sbb
mov
ds
shr
lcall
mov
lock
or
mov
dec
or
xchg
je
mov
in
hlt
cmp
sub
xor
sbb
rclb
cmpsb
iret
mov
sbb
push
jg
xchg
loope
jl
das
dec
push
and
in
cmp
bound
dec
push
daa
xor
xor
jbe
ljmp
xor
nop
cmc
xchg
pushf
or
pop
in
push
push
xchg
cmp
pop
pop
push
int3
in
stos
inc
sbb
cmc
std
pop
test
mov
xchg
and
add
mov
mov
xor
jo
dec
mov
inc
xlat
mov
addl
lcall
daa
pushf
aaa
jg,pn
jb
pop
sbb
pop
loop
mov
stos
daa
jo
hlt
popa
imul
pop
add
imul
mov
cmp
rolb
adc
das
adc
jo
cltd
jmp
ds
les
xor
mov
fwait
in
ds
pop
das
mov
movsl
add
jae
lret
outsb
fwait
pop
sbb
mov
sbb
jnp
dec
flds
shrb
divb
fwait
ljmp
fcmovb
sti
shrl
nop
xor
pop
mov
push
jl
jmp
cmpsl
sbb
outsl
xchg
rcr
cli
test
sarl
pop
and
cmp
dec
out
xchg
xchg
adc
into
mov
sbb
ss
fsts
shl
sub
mov
add
gs
mov
loop
imul
in
mov
pop
mov
mov
cld
sbb
testl
les
scas
ja
fidivrl
adc
mov
stos
pushf
cltd
test
mov
mov
std
cmpsb
lea
add
dec
fnsave
hlt
add
adc
lahf
and
sbb
imul
leave
push
sbb
jg
jbe
xor
xchg
or
inc
and
jmp
add
jnp
aam
and
aas
ss
sbb
cmp
pop
loope
inc
movsl
ret
int3
sub
fcomi
fstpt
mov
mov
fsts
jge
leave
addr16
repnz
sbb
sbb
push
stos
jmp
enter
dec
push
pop
mov
push
sbb
adc
dec
test
js
lret
push
push
and
xor
scas
ljmp
mov
mov
sub
cli
mov
sub
out
in
fmuls
orl
mull
xchg
ss
jbe
aam
mov
fadds
add
sub
sbb
push
push
push
mov
jo
bound
daa
inc
mov
or
mov
fmuls
out
mov
call
dec
andb
lds
pop
sbb
lcall
into
mov
mov
fwait
xchg
add
stc
adc
ljmp
mov
addr16
setnp
fisttpll
sub
loope
fwait
or
cmpsb
orb
sahf
mov
insl
stc
lock
mov
mov
adc
pop
dec
ja
push
in
pop
lret
and
pop
xchg
int3
push
push
mov
iret
push
push
mov
or
and
loop
subb
or
aaa
pop
add
xor
mov
or
addr16
jo
dec
mov
mov
fstpt
sbb
and
cmp
add
aaa
je
sbb
pop
outsl
mov
push
aad
or
mov
jg
cmp
cmp
test
js
adc
inc
daa
loope
xor
test
pop
rcrb
in
in
pop
fadds
mov
shr
jbe
mov
push
cmp
pushf
out
imul
sarb
in
loopne
jnp
es
and
jp
sarl
inc
adc
xchg
lods
sub
int
nop
mov
lea
or
aam
sbb
pop
and
inc
add
fcmovbe
mov
lret
dec
daa
lahf
fisubs
call
dec
lock
sar
int3
and
sbb
xor
repnz
adc
gs
repnz
add
popf
enter
cmp
xchg
xchg
sub
push
cmpsl
out
scas
cmp
adc
inc
lds
xor
data16
and
or
test
xchg
push
mov
jle
mov
mov
scas
xchg
xchg
and
nop
cmpsl
push
jge
test
int
call
loop
test
out
xchg
lcall
add
pop
jp
push
adc
sbb
adc
sub
bound
pop
arpl
inc
sub
pop
inc
xchg
pop
out
mov
mov
sub
sbb
adc
dec
sub
lcall
sahf
sbb
cmc
ss
pop
popa
popf
repnz
jge
outsb
addr16
test
cmp
fwait
dec
mov
sub
repnz
inc
push
sbb
push
push
lea
iret
outsl
out
push
pop
xchg
cmp
push
dec
movsb
mov
or
xchg
pop
sarl
outsb
hlt
add
ljmp
ljmp
sbb
les
cmp
xchg
dec
add
push
jmp
mov
lods
outsl
xchg
filds
sti
or
push
dec
sarl
push
mov
xchg
jno
push
xchg
push
and
or
bsr
pushf
mov
ret
test
shrl
mov
iret
pop
aas
mov
stos
or
push
inc
je
fcompl
dec
sub
inc
lock
inc
ljmp
cmp
xchg
lcall
in
or
das
pop
push
aam
cmp
jno
ljmp
fxch
lret
jg
call
shl
jno
ljmp
movsl
into
and
adc
xor
pop
or
cmp
js
outsb
dec
inc
in
adc
stc
lds
mov
mov
fwait
xor
mov
out
adc
aam
push
aam
push
sub
or
popa
sub
cld
lods
flds
sti
pop
ret
out
mov
sahf
push
mov
enter
rol
cmp
mov
or
push
jno
jae
pop
mov
scas
sub
scas
inc
adc
lea
fidivl
push
sub
or
push
sbb
pop
cmp
push
jo
add
sub
and
icebp
mov
add
dec
jge
mov
mov
pause
movsb
and
mov
xor
mov
das
dec
ret
aaa
cmp
sbb
or
data16
shll
bound
jle
test
push
cmp
inc
fmull
cmp
aaa
sub
fwait
in
outsb
ret
scas
stc
addr16
sbb
shlb
jmp
cld
jg
adcl
mov
sbb
pop
addr16
and
mov
mov
cmpl
gs
jge
or
push
pop
pop
clc
ljmp
ljmp
xlat
push
and
in
and
fsts
mov
pop
pop
push
add
pop
stc
int
movsl
shlb
out
flds
push
cwtl
pop
mov
or
rorl
jmp
lcall
mov
push
cmpsl
dec
mov
xor
pop
dec
add
jge
shrb
shlb
lcall
mov
aam
pop
nop
sarl
dec
mov
fadds
cmp
data16
jmp
addr16
mov
js
xchg
cmp
cwtl
add
fcoms
xchg
mov
mov
aam
out
aas
sbb
jmp
fidivrl
testb
add
out
test
xor
dec
shl
mov
push
add
inc
jbe
fstps
mov
test
dec
add
pop
adc
mov
pop
dec
lock
testb
imul
aad
inc
xchg
ret
js
shr
cmp
jle
mov
add
sbb
pop
jle
or
sub
add
mov
dec
aas
into
popf
cld
sub
mov
mov
jl
les
fists
mov
mov
pop
xor
xchg
dec
xor
or
cs
cmp
jns
movl
xchg
cli
mov
clc
pop
mov
in
or
int3
orl
adc
jmp
adc
fwait
xlat
mov
push
int3
in
lcall
ss
mov
push
mov
or
int3
and
cmc
cmpb
sahf
jb
ss
fwait
adcl
ljmp
sbb
jl
jg
adc
push
jbe
pop
ror
int3
inc
dec
pop
mov
jle
jae
sbb
leave
push
enter
ss
xchg
fstp
test
incl
dec
daa
inc
bound
in
subl
scas
das
push
cmp
dec
pusha
sub
int
repz
mov
pop
mov
jp
mov
cmova
jmp
mov
pop
adc
out
jp
int
and
enter
inc
jb
jno
bound
leave
push
cli
mov
aas
pushf
leave
cmp
mov
popf
mov
sbb
jmp
jne
sbb
out
les
mov
fs
xorl
fidivs
lds
jns
pushf
inc
stos
pop
insb
cmc
fiaddl
std
test
bts
ds
mov
inc
sarb
test
or
pop
push
or
mov
fcmovnbe
sub
jns
addr16
into
lods
popl
jno
loop
jnp
arpl
xchg
or
pop
inc
das
inc
inc
roll
push
lds
pop
test
cmpsb
mov
mov
cmp
jno
into
xchg
and
xchg
out
or
cmp
cmp
test
xchg
pop
fisubl
call
xchg
je
adc
inc
xchg
cli
fisttpll
xchg
adc
jbe
test
lcall
sahf
aad
test
lea
xor
fwait
mov
sbb
pusha
sbb
adc
fidivl
test
jo
push
sub
call
push
pop
jns
lods
xor
movsb
mov
inc
test
mov
add
nop
adc
roll
pusha
das
test
cmp
push
jne
inc
loop
mov
int3
cmpsb
mov
lret
out
push
mov
add
seta
lret
out
dec
jle
mov
int
gs
aaa
hlt
sbb
out
js
leave
fstps
shr
outsl
or
rorb
mov
cmp
test
add
fstp
test
fucom
cltd
add
xchg
add
pop
mov
repnz
jge
jo
ja
sbb
loopne
sbb
subl
jl
orb
and
loop
and
loope
cmp
mov
jb
push
das
cmpsb
push
hlt
push
jg
add
xchg
cmp
lahf
xor
xor
dec
mov
push
stos
jmp
adc
shll
jae
into
sbb
imul
test
push
or
lret
xor
dec
mov
adc
orb
mov
push
arpl
mov
mov
divb
stos
outsl
int3
mov
sbb
and
pop
shrb
test
arpl
mov
sbb
outsb
sbb
je
les
xchg
mov
adcl
test
popf
gs
dec
and
sti
test
adc
jmp
outsl
adc
jo
dec
or
push
add
jae
aad
into
sti
push
and
inc
mov
rcrl
les
jmp
test
lods
push
divb
jge
xlat
mov
jg
scas
call
adc
cmpsl
hlt
mov
scas
add
xchg
sahf
int
add
movsb
pop
mov
insl
inc
stc
ljmp
pop
mov
push
jge
les
push
adc
insl
je
shrb
pop
add
push
xchg
ficoml
ljmp
push
pusha
cwtl
into
dec
lcall
shlb
xor
iret
scas
mov
xor
test
js
sub
pop
xor
sbb
pop
imull
inc
cli
lret
push
in
adc
inc
adc
insl
inc
cwtl
fimuls
xor
xacquire
sbb
stos
jne
in
sub
xor
sub
push
leave
test
enter
enter
xchg
in
insb
dec
jecxz
pop
int
inc
push
sub
pop
fsubl
add
fld1
mov
sub
loop
inc
inc
inc
js
sbb
cmp
xor
cli
and
std
in
mov
mov
ljmp
add
mov
aas
inc
out
ret
and
mulb
aad
imul
dec
leave
xchg
ljmp
mov
mov
push
pop
mov
mov
or
pop
push
mov
sub
imul
mov
insl
push
lret
jl
rcrl
cmp
in
insb
add
push
jne
dec
imul
mov
jmp
lds
mov
pop
outsb
sbb
int3
lret
and
pop
insb
es
push
add
icebp
sbb
les
sub
stos
dec
scas
mov
loop
or
cwtl
mov
cmpsb
mov
fldenv
hlt
inc
lcall
sti
fwait
mov
pop
mov
mov
xchg
xchg
jnp
xor
cmc
and
push
mov
dec
pop
pop
ljmp
out
sar
pop
jecxz
les
cli
movb
and
xor
or
jl
daa
movsb
inc
mov
fcmovnb
out
inc
jecxz
insl
sbb
inc
fistl
push
int
xchg
mov
test
loop
xor
mov
sbb
and
push
or
insb
fwait
repnz
adc
or
cmp
add
cwtl
fs
popa
push
hlt
sbb
jae
pop
sbb
or
jl
loope
dec
ficoml
ljmp
sbb
and
dec
hlt
sub
addr16
sbb
push
adc
cmc
mov
out
insl
cmp
dec
mov
fs
aas
adc
repz
ret
or
out
cmpsl
lock
test
dec
or
xorl
sub
dec
dec
out
xor
mov
inc
adc
jbe
sti
nop
rorl
insb
in
jl
pusha
add
xor
push
jo
test
in
pop
lds
aad
jmp
xor
inc
test
jne
jae
mov
and
xchg
pop
lret
idivl
fstpt
xor
mov
shrl
ret
fs
test
sarl
repz
lods
pushf
push
jnp
jp
cmpsl
xor
out
push
repz
iret
and
imul
incb
adc
loopnew
mov
fsubrp
test
cmp
aaa
push
shll
xor
fldenv
rcrl
ret
in
aad
repz
adc
mov
cmp
mov
push
sbb
sti
cmp
inc
cmc
mov
aam
cltd
enter
pop
in
cmp
test
adc
insl
cmpsb
mov
or
xor
cli
mov
mov
sahf
mov
sub
inc
lock
mov
aaa
xchg
mov
sub
incb
mulb
sub
int3
cwtl
sti
call
lret
sub
or
je
jns
out
icebp
repnz
incl
out
adc
pushf
cli
cli
and
iret
adcb
xor
icebp
push
pop
pop
fwait
sbb
cmpsb
aad
lock
shlb
movsb
in
sub
lret
sub
xchg
dec
loop
dec
add
sbb
rcr
fisttpl
mov
cltd
roll
lret
pop
int3
push
movsb
aam
jbe
lods
ljmp
push
push
sub
xchg
das
inc
sub
and
lret
fwait
sbbb
cmpsb
test
jbe
stc
loop
jecxz
arpl
iret
jnp
lahf
mov
jnp
or
or
mov
inc
xor
in
jae
jecxz
fisubs
jb
cmp
mov
out
cli
enter
mov
cmpsl
dec
xor
dec
pop
neg
pop
xchg
push
popa
xor
xchg
mov
mov
repnz
inc
add
xchg
insl
inc
xchg
mov
mov
int
dec
push
aad
jbe
mov
mov
push
jo
xchg
mov
sbb
into
imull
jle
pop
cmp
jo
cltd
push
or
push
shll
dec
imul
call
mov
add
cs
xchg
sbb
mov
jl
mov
sbb
cmp
mov
fs
sbb
iret
negb
ja
and
mov
add
mov
cmp
je
fimuls
daa
in
out
dec
addr16
out
mov
in
aaa
out
int3
arpl
test
mov
out
cmc
fucomi
imul
cld
enter
addr16
adc
mov
cmc
aas
push
push
inc
popa
outsb
repnz
rorb
in
push
push
inc
dec
int
bound
adc
ja
cvtpi2ps
inc
ficoms
cmpsb
cli
push
in
adc
lret
dec
sahf
xchg
mov
int
mov
icebp
movsl
lock
fildl
cmp
pop
in
lret
ja
xor
mov
fisttpll
add
test
enter
or
test
cmp
xchg
popl
add
movb
roll
insb
jnp
and
push
je
hlt
xor
sti
lods
jp
jo
xchg
push
icebp
mov
lods
xchg
sub
dec
testb
repnz
outsl
pop
jb
sbb
xor
call
mov
out
fwait
les
pop
cmpsb
inc
mov
imul
push
mov
mov
and
sub
jg
xor
faddp
mov
dec
pusha
mov
pop
lods
mov
movsl
call
jl
js,pt
adc
test
jmp
fcomip
mov
jp
pop
push
shlb
test
out
loope
aam
iret
pop
roll
cmpsl
add
outsl
mov
es
pusha
mov
cmc
lock
repnz
jno,pn
push
sbb
cli
push
callw
stos
adc
insl
push
xchg
sub
cmpsb
cld
jle
mov
rol
rol
jl
cmp
jp
sbb
mov
push
xorb
repnz
mov
fcmovnbe
mov
into
push
inc
out
cltd
jnp
fnsave
ljmp
inc
add
sub
add
int
fdivs
sbb
add
shrl
or
repz
out
cmp
jns
dec
std
dec
jp
push
adc
lret
dec
mov
stos
push
cmpb
mov
or
lea
data16
mov
or
xor
aas
cmp
lret
mov
scas
xchg
fimuls
push
mov
fsubrl
sbb
xchg
xchg
movsb
js
cmp
cmp
mov
xchg
add
jmp
pop
outsl
pop
sar
mov
ret
sub
lods
add
outsl
out
or
mov
pop
int3
loop
mov
jae
cmp
jecxz
add
cli
and
fwait
outsl
imul
bound
gs
pop
int3
shlb
inc
hlt
jge
enter
adc
add
das
xchg
sub
sub
adc
dec
cmp
jae
out
or
jg
or
test
aad
and
insl
repz
mull
adc
shr
xor
mov
pop
xchg
xor
lret
ds
js
outsb
pop
pop
xor
icebp
shr
mov
mov
ficoml
and
fcomi
mov
clc
push
repnz
and
cld
xchg
daa
push
add
xchg
cltd
aam
ret
lods
push
xchg
jnp
pop
pop
ds
mov
mov
inc
daa
mov
xchg
lret
cmp
inc
pop
pusha
inc
push
rcll
adcb
in
ss
and
dec
jno
rcll
aas
mov
outsb
imul
outsb
test
mov
fldl
roll
scas
repnz
inc
or
arpl
dec
jl
add
stc
fldenv
data16
pop
mov
mov
xlat
je
xor
cltd
push
push
add
jmp
fcoms
dec
jl
mov
push
and
push
decl
xor
inc
push
lods
sbb
js
pop
adc
mov
ja
ds
dec
and
pop
shrb
lods
jp
popf
inc
loope
leave
lock
push
mov
mov
lods
xor
xchg
lret
mov
jl
ficompl
stc
mov
data16
test
pushl
adc
jo
pop
fsts
mov
cmp
add
pushf
jl
cmp
aam
loop
xchg
loope
and
and
pop
cli
jl
fwait
rorl
xchg
cmp
mov
and
lcall
inc
roll
outsb
enter
mov
mov
imul
jno
push
lahf
sbb
lods
push
jbe
jle
lret
sbb
loope
lods
ss
fdivr
push
pusha
call
in
mov
dec
sub
sub
test
movsb
out
lods
pop
fsubl
push
inc
fisubrl
pop
pop
out
sbb
add
addr16
add
and
mov
mov
adc
mov
pop
push
in
xchg
pop
xor
adc
into
movsb
ljmp
pop
or
jecxz
hlt
add
clc
movsb
dec
mov
push
mov
lret
inc
push
das
push
loope
dec
fadd
xchg
fadds
loope
pop
sub
sub
je
ja
mov
scas
mov
push
push
rclb
jg
ss
mov
mov
sbb
fnstsw
xor
lods
lcall
and
jae
push
mov
shlb
loope
pop
xchg
test
loop
aaa
jo
jg
inc
clc
cmpsb
adc
call
dec
addr16
xchg
divl
fsubr
adc
dec
or
xor
sbb
inc
outsl
mov
sbb
sub
inc
popf
loop
sahf
pop
xor
mov
jo
sbb
or
sub
jnp
mov
daa
cmp
adc
cmp
sbb
lea
add
lret
xchg
sub
cmc
push
jl
or
mov
pusha
pop
mov
mov
xor
fsubrs
cli
mov
xchg
mov
mov
sub
aaa
jg
xor
cmp
ljmp
cmpsl
inc
icebp
dec
jbe
push
lcall
push
pop
push
jp
in
lods
sbb
jle
push
ret
repz
sahf
dec
out
pop
xchg
sbb
call
mov
out
out
pop
add
or
sbb
shl
dec
or
loope
mov
inc
pop
cmp
push
mov
xchg
je
push
pushf
mov
ss
stos
es
push
std
jecxz
loop
sub
in
xor
mov
dec
adc
sbb
pop
lcall
negb
negb
dec
je
pop
pop
je
push
fwait
orl
cltd
push
inc
push
push
mov
sub
daa
lods
mov
ja
int3
out
xchg
bound
ss
sub
int3
cmp
sbb
pop
mov
popf
or
inc
and
outsb
mov
mov
lock
jb
lret
bound
mov
dec
cmpsl
xchg
insl
or
sbb
scas
add
xchg
inc
pop
sub
stos
movsl
or
sub
out
dec
add
pop
sub
xor
push
cmpsl
mov
movsb
fmuls
add
push
adc
ja
into
xor
sub
mov
xchg
or
and
sub
shrl
push
sbb
mov
dec
mull
dec
push
test
stc
loopne
outsb
movsb
nop
sub
lea
push
jns
mov
negl
xor
push
adc
sarb
mov
jmp
loop
fnstcw
nop
lods
rcll
enter
les
repnz
cmc
mov
sub
pop
dec
iret
test
and
leave
mov
pop
pop
mov
add
aad
ja
imul
xchg
out
push
ds
loop
fdivr
test
ss
fdivrp
jo
inc
xor
lock
or
leave
xor
pop
fnstcw
add
cmpsb
mov
mov
push
aas
addr16
sbb
and
test
lea
ret
add
push
fidivrs
mov
subb
in
xor
ja
pop
xchg
adc
mov
aad
sub
jbe
lods
movsl
sbb
pmaddwd
mov
dec
dec
lcall
dec
xor
dec
xor
imul
sub
pop
xchg
cmp
mull
push
mov
testb
jno
mov
jb
push
sti
mov
add
daa
stos
dec
test
push
jnp,pt
jg
fs
sub
aad
jb
js
mov
pusha
popa
adc
rcll
dec
clc
testb
rorb
jo
jbe
xchg
daa
sbb
jae
jnp
test
lcall
add
fcmovnb
gs
lahf
movsl
inc
jp
outsb
pop
sbb
xchg
stc
enter
and
mov
xor
mov
icebp
inc
arpl
mov
sbb
pop
sbb
cli
scas
fldl
pop
shrl
jb
jle
sbb
call
stos
iret
dec
jnp
adc
cld
jo
and
in
inc
insl
mov
lds
cmp
lea
adc
in
nop
push
aad
aad
jno
negl
or
or
pop
scas
xor
mov
jb,pt
mov
or
or
dec
outsl
js,pt
icebp
mov
mov
nop
fwait
add
fdivrs
fists
scas
cltd
add
inc
dec
cld
add
mov
lds
lahf
mov
inc
sarb
jg
sbb
in
cmpsl
icebp
cmp
orl
xorl
inc
mov
dec
repz
sub
push
push
cmc
in
out
xor
cmp
std
mov
movsl
movsb
loope
xchg
push
sub
dec
jmp
jle
fwait
sahf
xchg
aaa
push
movsl
cmp
cmp
shlb
popf
scas
ss
mov
push
in
xor
or
addr16
enter
push
inc
bound
and
int
pop
outsl
popa
or
sub
push
shlb
adc
fwait
sub
xor
call
jmp
mov
fdivrp
sub
stc
out
push
xor
push
mov
stos
lret
and
scas
push
mov
jb
cmp
pop
ds
aas
aam
cmp
jne
test
mov
in
stos
mov
sub
or
movl
in
lods
icebp
testb
lods
or
pop
rorl
imul
sbb
push
jns
or
and
sarl
add
lahf
mov
xchg
mov
pushf
inc
imul
or
insb
sbb
or
lods
inc
sub
out
fistpll
xchg
repz
fwait
mov
bound
loop
sub
repnz
shll
mov
pop
dec
nop
push
jmp
pop
push
aaa
cwtl
in
cmc
iret
shlb
cltd
mov
mov
clc
mov
in
push
jl
cmp
jl
pushf
std
scas
leave
out
in
inc
mov
inc
lret
pushf
cltd
loopne
dec
enter
or
or
jnp,pn
scas
aas
push
add
icebp
or
mov
test
addr16
mov
sub
clc
xchg
xor
sub
xchg
loop
into
shll
adc
xor
ret
sahf
pop
jl
add
enter
lds
adc
iret
in
push
lret
add
push
and
jge
mov
scas
push
jle
out
scas
and
or
or
cmp
sbb
repnz
cmp
cwtl
inc
sbb
inc
xchg
xchg
add
in
out
xchg
xor
cmc
jo
jb
adc
fadds
call
jle
hlt
xor
pop
xchg
and
cs
or
dec
and
ret
icebp
cli
mov
add
or
aaa
lret
jno
ja
pop
inc
lods
fnsave
xor
sbb
xchg
sbb
and
mov
fistl
xchg
jb
xchg
pop
pop
out
jle
inc
sub
test
iret
jge
std
mov
in
and
xchg
mov
push
mov
xchg
int3
test
add
or
mov
lret
rorl
xor
insb
xor
mov
pop
hlt
jne
mov
adc
cmpsl
and
xchg
push
mov
inc
in
push
fcmovu
push
into
out
push
repz
xchg
push
mov
in
adc
popf
mov
inc
je
add
inc
and
dec
sti
jp
mov
das
add
rcrl
push
insb
les
scas
popf
pop
rcrb
push
jl
rolb
idiv
fbld
jne
test
pop
aaa
mov
xor
add
scas
pop
mov
jp
and
lahf
inc
jne
test
dec
imul
pushf
pop
pop
pop
ficompl
push
popf
movsb
mov
popa
mov
enter
add
and
ret
push
cmp
cli
ficompl
sar
es
outsl
in
fldcw
pop
aam
imul
push
es
jns
jmp
and
in
nop
call
mov
js
dec
mov
push
movsl
mov
mov
pop
sbb
popf
adc
gs
adc
nop
out
sbb
pop
addr16
rclb
inc
pushf
jp
pushf
fldl
adc
add
cwtl
mov
out
sbb
pop
ljmp
test
xchg
cmp
push
xchg
scas
xor
lret
cmpsl
push
cmpsb
movsb
adc
flds
out
std
nop
push
enter
mov
les
je
clc
xor
call
test
out
outsl
mov
aaa
iret
jge
ja
movsb
add
mov
hlt
loop
in
lahf
pop
add
les
mov
cmpsl
push
jecxz
pop
sub
push
mov
fmulp
add
dec
outsb
insb
gs
mov
fdivl
inc
fcoml
movsl
or
in
lahf
stos
xchg
mov
cmp
cmp
or
insl
loop
jp
pop
sbb
push
inc
inc
or
testl
pusha
dec
lahf
lds
frstor
jmp
jge
js
mov
mov
sbb
data16
push
inc
mov
scas
ret
andl
jbe
aas
dec
xchg
mov
lret
dec
push
out
loopne
cmp
repnz
push
out
inc
push
adc
xor
rorl
and
fcomp
cmpb
mov
and
xor
sahf
and
pop
jnp
aam
add
shr
pop
test
ds
sbbl
scas
cld
xor
aam
pop
out
decb
mov
sbb
adc
mov
cltd
mov
out
or
gs
loope
shl
cmp
es
inc
dec
pop
mov
xlat
adc
hlt
pusha
test
mov
lock
jno
adc
leave
mov
andb
xor
mov
pop
adc
xchg
faddl
bound
in
xchg
mov
sub
inc
dec
pop
jne
xchg
push
jmp
sbb
lods
call
pop
int
imul
mov
mov
mov
mov
mov
sub
shr
mov
pusha
pop
lods
sbb
lret
inc
pop
or
pop
lret
inc
aam
jo
je
mov
jbe
test
xchg
inc
dec
jl
int
mov
inc
fcmovnu
xor
int
adc
pushf
fsts
lret
inc
shrb
fidivrs
mov
xor
or
loope
rep
ljmp
imul
adc
xchg
mov
js
add
outsb
pop
jl
dec
lahf
dec
pop
xchg
mov
mov
jecxz
sub
shl
repnz
loopne
out
int
shll
and
repz
xchg
or
pop
xchg
jo
lea
nop
jae
testb
jns
or
adc
push
mov
sub
push
repnz
bound
mov
mov
push
jg
bound
mov
xor
adc
mov
repnz
fiadds
fnstcw
loopne
mov
xlat
outsb
mov
xor
adc
fst
shlb
sub
xchg
out
or
ja
cmp
arpl
and
xor
cmp
or
inc
pop
loope
aam
rorl
in
add
fmul
fistps
inc
push
ss
fucomp
rcll
lock
inc
insl
loopne
push
mov
pop
iret
xchg
and
bound
les
test
sub
adc
clc
fs
cwtl
mov
or
ja
pop
push
pop
xor
fcmovnbe
das
aam
jle
stc
popf
mov
cld
or
imul
dec
out
lock
je
out
fwait
inc
dec
pop
es
ss
add
jmp
imul
cltd
jl
push
repnz
shlb
pop
pop
dec
int3
push
int
pop
mov
les
push
jecxz
mull
push
pop
pop
mov
in
lret
dec
xchg
cmpsl
fwait
in
xchg
or
xor
push
jns
adc
mov
fs
dec
push
in
icebp
dec
cmc
nop
orb
je
xchg
push
sahf
add
mov
mov
or
lret
jb
lret
aad
mov
lds
dec
cmpl
xchg
mov
or
pop
push
pop
sbb
lods
xor
or
mov
sbb
popf
outsb
sbb
loop
cmovs
xor
mov
mov
or
xchg
xor
jmp
xchg
fwait
out
dec
pop
push
data16
mov
fmul
fldl2t
jmp
pop
inc
dec
in
mov
push
or
mov
mov
push
pusha
leave
mov
outsl
mov
das
gs
bound
dec
lahf
add
lods
inc
out
loope
inc
inc
jbe
mov
and
xor
insb
and
inc
daa
js,pt
push
les
cmp
mov
in
pop
jbe
jb
jp
cmp
in
push
fisttpll
imul
ret
cmpsl
rolb
jl
mov
je
ds
jmp
cmpl
mov
popa
mov
add
push
xchg
xchg
mov
test
dec
mov
imul
sub
xchg
or
mov
icebp
sub
pop
mov
dec
inc
xchg
mov
or
lock
xchg
pop
mulb
lds
subb
push
and
call
mov
fcomip
fistpll
sbb
sbb
sbb
cltd
aas
mov
push
scas
test
jns
or
xchg
lds
adc
pop
add
xchg
mov
lods
xor
sbb
or
jne
pop
push
pop
dec
sbb
inc
and
call
clc
mov
xchg
sar
dec
pop
cwtl
xchg
and
fistl
jp
mov
lahf
inc
shl
mov
fst
dec
arpl
dec
iret
in
dec
in
sub
pop
mov
adc
push
mov
jle
sub
cmpsl
add
hlt
hlt
stos
or
mov
or
call
lcall
dec
xor
mov
inc
out
mov
sahf
fcom
inc
clc
mov
mov
push
leave
aaa
lcall
inc
xchg
sbb
xchg
mov
xlat
and
in
aas
lret
stos
mov
inc
inc
fs
xor
aaa
jle
popa
or
les
jmp
pushf
mov
jb
les
xchg
pop
sub
jne
test
mov
xchg
dec
sbb
push
in
sub
dec
xlat
sbb
pop
lcall
out
sahf
xchg
daa
mov
jle
idiv
test
adc
mov
mov
shll
mov
movsb
xor
test
and
loopne
shrl
or
testl
xlat
getsec
push
push
mov
pusha
cmpsl
mov
std
mov
mov
xchg
mov
pop
pushf
in
in
nop
incb
push
aam
cmp
cmp
movq
hlt
pop
outsb
fs
mov
fwait
pop
mov
adc
add
dec
ss
push
repz
out
flds
mov
stos
arpl
fidivl
cwtl
pop
cld
pop
negl
push
cmp
rcrb
add
sbb
cltd
sbb
add
sbb
aaa
mov
int3
push
movsl
xor
nop
loopne
test
dec
lret
or
inc
inc
popf
hlt
ljmp
xor
cltd
sbb
push
cwtl
inc
cwtl
sbb
lret
shr
or
inc
fsubrs
mov
jge
jo
dec
cli
xchg
daa
insb
jno
popf
mov
in
or
insl
xchg
and
push
subb
sbb
or
xor
out
arpl
sub
aaa
lods
inc
mov
aam
xor
int3
adc
pop
push
xor
push
insl
xor
cmp
and
pop
pop
daa
cltd
out
ja
out
dec
les
fisttps
subb
mov
sub
mov
fldt
imul
adc
jb
in
dec
daa
popa
push
push
cmpsl
xchg
fwait
bound
repnz
inc
xor
les
loop
orl
cltd
call
sub
inc
mov
add
ss
mov
inc
jg
mov
xor
jp
mov
mov
sub
inc
or
push
cmp
pop
leave
mov
loope
sub
flds
fsubrs
add
pop
lret
sub
pop
icebp
mov
fisttpl
cmp
movsl
sar
jle
aam
movsb
enter
repnz
push
stos
fst
mov
scas
xchg
inc
jae
lock
push
bound
insl
in
adcl
aam
iret
cmc
dec
mov
dec
xchg
xchg
mov
loop
cmp
sarl
xor
mov
shll
adc
fstpt
lret
jp
cli
push
cmp
adc
add
cmpsb
jo
fisubs
push
mov
mov
or
mov
ffree
int
sub
push
icebp
daa
pop
lea
std
inc
adc
mov
aad
xlat
push
lcall
push
jge
aaa
stos
cmp
leave
jae
sahf
les
and
xchg
or
cmp
notl
mov
mov
jns
add
sub
js
fbstp
jno
insl
mov
js
arpl
in
adc
push
call
mov
sub
sbb
jecxz
outsb
call
pop
xchg
sbb
movsl
pop
outsb
add
test
adc
or
in
mov
mov
leave
mov
cmp
push
pushaw
and
nop
roll
pop
into
mov
ja
sbb
and
sbb
lar
aad
and
sub
mov
inc
nop
inc
dec
push
mov
mov
push
push
pop
iret
or
es
add
mov
dec
sbb
call
xorl
aas
lret
lahf
ret
jecxz
jbe
jb
push
les
mov
sbb
cltd
fwait
adc
pop
stc
xchg
add
mov
xchg
lea
test
xor
adc
cmpl
and
std
loop
in
dec
dec
outsb
mov
jnp
loope
sbb
and
iret
mov
cs
popa
clc
mov
push
xchg
xchg
pop
pop
mov
out
mov
mov
lock
inc
mov
test
pop
jo
fsubl
push
in
out
aas
pop
mov
mov
insl
in
daa
or
lahf
dec
inc
sbb
adc
mov
jecxz
dec
mov
ss
loopne
sub
iret
inc
push
pop
mov
dec
pop
sbb
adc
fimull
popa
insl
or
lock
lcall
and
jmp
dec
fucomp
in
jg
scas
dec
add
vxorps
adc
movsb
lea
ljmp
inc
mov
data16
mov
mulb
aaa
pop
aas
cld
enter
dec
xor
push
fnstcw
add
or
jne
mov
push
inc
bound
push
xchg
add
lods
clc
out
out
jecxz
or
or
int3
adc
in
inc
mov
pusha
inc
daa
mov
pop
std
dec
fsubrl
xchg
xchg
mov
ja
dec
or
sub
je
es
leave
ljmp
test
mov
int3
cmp
ds
push
xor
addr16
out
sub
mov
inc
push
xchg
push
jmp
xchg
into
cvtps2pi
mov
mov
aaa
xchg
pop
fidivl
into
lahf
fnstsw
push
in
out
pusha
lea
push
pop
mov
in
xchg
test
cmpsl
mov
xchg
sub
testl
lds
and
lcall
scas
add
add
rclb
xlat
push
ljmp
lret
out
and
and
fists
das
popa
repnz
xor
pop
push
pushf
repz
imul
inc
jmp
push
lea
sahf
inc
call
xor
cmp
std
in
lds
xchg
mov
sbb
dec
cltd
aad
fcmovnbe
call
insl
xor
dec
push
mov
sub
out
int
inc
kmovw
jp
shl
and
das
aaa
mov
mov
push
sub
or
int
jnp
mov
das
dec
int
outsb
adc
pop
dec
into
test
jl
jae
into
out
sbb
jb
sub
adc
xchg
dec
cltd
test
and
addr16
xchg
push
xor
or
ret
lods
mov
pop
and
inc
sahf
sub
lods
push
addl
pop
idivl
je
jecxz
out
arpl
xor
xchg
cmp
repz
out
mov
dec
sbb
sub
repz
dec
lcall
adc
pushf
dec
imul
mov
repnz
pop
mov
out
rclb
fwait
aad
mov
xchg
lret
dec
mov
call
mov
popf
cld
sbb
xor
mov
xor
xchg
les
loope
xchg
fbld
inc
cmpsb
loopne
in
xchg
sbb
dec
pop
mov
xlat
jg
roll
and
cld
aam
int
inc
cmp
std
mov
xchg
push
xor
das
dec
adc
sub
jb
dec
arpl
xchg
add
cwtl
sub
and
or
bound
outsb
pop
add
xor
repz
pushf
stos
jmp
ffreep
adc
popf
pop
cs
enter
sahf
sbb
fnstsw
imul
cmp
and
and
outsl
pop
add
mov
ret
pop
pop
xor
dec
push
add
insl
ds
je
out
in
push
in
or
or
xor
push
push
add
ja
clc
adc
jmp
jno
inc
int3
stc
ficomps
or
test
dec
and
rcll
adc
gs
cmc
jle
inc
pop
sub
std
fdivl
sbb
popf
push
cmp
mov
dec
divb
jmp
mov
mov
and
cltd
sub
mov
mov
mov
xchg
jmp
and
adc
xlat
pushf
in
je
out
dec
cmp
imulb
pop
inc
and
icebp
pop
cmp
int3
jns
pop
fldt
add
mov
sbb
or
in
cmp
lea
mov
inc
mov
xor
sbb
adc
jmp
pop
cmc
sub
in
sub
or
fldt
mov
negl
test
fcoml
or
test
fisubrl
and
insl
push
or
sub
imull
pop
jb
enter
sbb
cwtl
out
adc
jge
lock
pusha
aas
jnp
mov
shlb
add
leave
add
aad
push
ljmp
lret
sub
inc
fildl
adc
mov
sub
mov
xchg
shrb
push
fmull
sub
cmp
inc
cmc
sbb
xchg
mov
sahf
imul
jge
cltd
outsl
testb
adc
or
mov
insl
inc
push
pop
pop
int3
cld
mov
lret
dec
arpl
pusha
or
jge
mov
js
mull
jl
push
sub
inc
sti
sbb
and
push
push
xor
or
xchg
sub
sbbl
in
fidivl
or
pop
pushf
xchg
ds
mov
pop
out
xlat
cmpsl
adcb
inc
sti
add
adc
testb
in
pushw
in
dec
mov
stc
sbb
cmp
mov
mov
rclb
repnz
aaa
adc
std
lahf
pop
xor
push
xchg
jge
dec
cmp
cmpsl
sahf
jno
pop
xchg
and
pop
cmp
sbb
repnz
mov
jmp
jecxz
push
mov
inc
rcrb
addb
push
int3
and
das
dec
sti
xor
pop
sbb
add
cmpl
push
jl
dec
jg
xchg
or
mov
lods
xor
xor
push
icebp
inc
or
ja
adc
push
outsl
cmpsl
loopne
and
bound
adc
pop
pop
sbb
sarl
or
add
mov
mov
cwtl
cmp
adc
clc
lret
aas
out
inc
jle
pop
push
or
adc
mov
jl
xor
mov
sub
pop
shll
aam
adcl
jle
pop
adc
setge
cmp
inc
xchg
mov
dec
sbb
and
and
push
xchg
test
lods
scas
hlt
mov
push
push
es
in
data16
push
adc
pop
cmp
call
adc
popa
scas
inc
ljmp
sti
ret
es
sarl
aas
add
out
out
cmp
push
lea
subb
mov
and
scas
and
inc
push
mov
sbb
fstpt
sbb
sbb
fldcw
cwtl
adc
pop
pop
xchg
cmp
cmp
bound
lret
lret
cmpsl
xlat
jl
dec
lcall
adc
ljmp
mov
repz
adc
dec
xchg
in
popa
test
icebp
dec
stos
push
and
mov
push
ds
pop
mov
fldl
or
in
lea
and
icebp
outsl
pop
dec
push
adc
adc
icebp
mov
push
pop
sbb
sbb
fisubl
mov
cltd
xor
pop
sub
lds
push
sub
aad
dec
sar
mov
repz
cmp
adc
mov
lahf
push
fiadds
stos
or
sbb
in
jmp
not
push
andl
sub
fisubl
leave
add
mov
fidivrl
jae
xor
aad
xor
xor
jp
shrb
cmp
leave
je
sub
je
loopne
in
cs
sbb
adc
sbb
mov
inc
dec
cmc
mov
in
cmpsb
getsec
inc
into
aaa
cmc
inc
inc
add
into
mov
test
adc
jno
sub
hlt
mov
dec
lock
sub
xchg
jo
loopne
jp
pop
enter
sbb
les
flds
xchg
push
fnstcw
push
scas
divb
jg
push
sbb
js
cmpsb
scas
cmp
negb
pop
inc
mov
pushf
imul
jge
mov
mov
jg
mov
lods
add
out
push
push
popf
or
push
std
pop
and
out
sbb
stos
orl
lret
adc
jle
mov
insb
pop
gs
call
lods
cmp
pop
es
mov
and
lods
mov
dec
mov
sub
sub
xchg
dec
pop
repz
mov
rorb
out
inc
adc
mov
cmp
stc
inc
jg
aad
insl
leave
ljmp
or
add
imul
mov
out
xor
mov
aas
mov
or
loopne
mov
mov
xor
aam
xchg
fistl
pop
push
mov
fmull
or
cltd
das
push
repz
leave
sub
fadd
daa
cwtl
test
stc
mov
pop
sub
mov
add
jle
inc
push
dec
jb
add
pop
out
iret
mov
jge
dec
sub
jne
inc
dec
stc
imul
loopne
mov
lcall
popf
xchg
mov
adcb
int
test
mov
test
jmp
aam
orl
pusha
sbb
mov
data16
push
js
lret
shll
sub
lret
mov
push
decb
dec
scas
lods
dec
push
cmp
mov
fdivs
xchg
cltd
push
pop
data16
mov
fistpl
mov
rorb
lock
xorl
or
xorb
dec
push
pop
pop
shll
jmp
mov
adc
pop
pop
imulb
sub
and
mov
std
jg
outsb
dec
cmc
aam
paddusb
xchg
dec
mov
pop
out
jbe
enter
loop
pop
mov
divl
shlb
lret
jnp
and
inc
clc
or
icebp
in
sbb
pop
mov
mov
push
add
fnstcw
stos
pop
fdivl
inc
aad
add
loop
inc
repnz
jbe
lret
lea
imul
pop
cmpsl
andb
fprem1
insb
mov
js
jns
popf
addl
push
lret
stc
test
stos
pop
movsb
dec
xor
fisubs
pop
mov
sub
ret
clc
mov
jmp
test
aad
cmp
cs
pop
xor
popf
jbe
sbb
add
mov
xchg
push
pop
or
fs
shlb
inc
dec
jmp
outsb
std
mov
icebp
rorl
dec
xor
hlt
iret
sbb
in
lahf
jns
mov
popa
sbb
std
stc
insb
mov
jns
xchg
jo
lock
lea
fwait
xlat
dec
mull
xor
jnp
es
xchg
and
sahf
dec
ss
out
add
imul
fcmove
in
popf
popf
jno
sbb
ret
push
push
mov
mov
or
cmp
jbe
mov
push
dec
das
inc
ljmp
mov
mov
icebp
jle
adc
and
push
fcmove
cwtl
mov
adc
or
jecxz
inc
xchg
pop
ret
pop
and
add
out
cld
jg
pop
test
push
ds
cmpsl
xor
repnz
pop
xchg
outsb
sbb
dec
in
clc
loope
cmc
sub
sbb
add
cli
stc
fs
mov
mov
sbb
sbb
inc
add
addb
dec
push
sbb
adc
fiadds
mov
lcall
std
test
push
stos
pushf
push
iret
jbe
mov
adcl
sub
stos
hlt
push
jge
sarl
pop
ret
push
add
jns
push
add
lock
pop
imul
pop
stos
iret
jb
gs
and
loopne
xor
stos
lock
aad
loope
ds
stc
or
sub
js
shr
lcall
mov
mov
test
sub
in
divb
gs
icebp
sub
in
jns
mov
aas
and
pop
fidivrl
or
push
rcll
dec
sub
fninit
mov
ljmp
push
test
cs
leave
rcrl
fildll
iret
cmp
cmp
and
pop
stos
xchg
xor
insb
sbb
and
adc
out
mov
in
adc
cld
sbbl
lret
jae
cmp
push
pop
and
shlb
push
add
fwait
in
and
xchg
iret
pop
dec
icebp
xor
adc
fsub
xchg
cli
jmp
mov
jle
mov
stos
pop
or
pop
or
and
xchg
icebp
mov
mov
jge
ret
push
rcr
cmpsl
sub
clc
fwait
scas
mov
pop
push
int
ss
mov
inc
sbbb
cwtl
pop
aam
lahf
popf
fcomi
and
lds
dec
xor
lds
xchg
sub
fwait
hlt
inc
iret
lahf
mov
dec
pop
add
xchg
rcr
addr16
jb
inc
xchg
sbb
bswap
jnp
cmp
fs
mov
mov
lcall
lods
stos
fadds
pop
in
push
daa
sahf
stc
mov
cmpsb
sbb
mov
xchg
push
xchg
mov
icebp
inc
cmp
mov
xor
sub
push
push
jns
ds
ret
imul
idiv
into
es
push
sbb
cmc
mov
pop
loop,pn
arpl
aam
pop
xchg
xchg
jb
and
cmc
xchg
inc
inc
enter
lods
test
add
repz
mov
mov
scas
outsl
pop
sub
imul
cs
jbe
sti
adc
sbb
test
mov
inc
das
lds
push
fs
std
add
dec
xchg
shlb
ss
jecxz
mov
xchg
stos
xchg
inc
repz
repnz
push
mov
dec
in
or
mov
adc
inc
or
push
lods
cmp
pop
push
jne
mov
addr16
jns
mov
daa
mov
mov
mov
out
adc
fs
cltd
aas
pop
pop
inc
dec
pusha
aas
cmp
rcrb
loopne
in
mov
addr16
mov
fidivrs
sub
jecxz
out
adc
lock
push
xchg
mov
adc
pop
fdivs
ret
fldenv
mov
shrl
jae
sub
aas
movsb
or
cld
or
or
cmp
jns
adc
stc
mov
push
xchg
mov
rolb
cld
or
push
ja
nop
jno
movsb
mov
sbb
enter
int3
push
xchg
daa
sahf
adc
mov
hlt
addr16
ss
das
sbb
dec
push
incb
dec
jo
in
inc
mov
inc
push
xor
or
adc
inc
loopne
or
pop
aas
les
pop
mov
or
push
adc
and
lods
pop
jnp
mov
mov
cld
andl
cwtl
dec
daa
push
lds
jg
pop
mov
rcrl
rorb
push
xchg
movb
cld
and
mov
jl
dec
inc
xor
shll
push
ficompl
fidivs
je
push
jno
jns
adc
les
mov
adc
mov
inc
sub
lds
mov
cmp
pushf
mov
mov
xchg
lret
mov
sbb
test
sub
in
lcall
push
sbb
sbb
int
test
mov
lock
sub
loop
in
add
stos
data16
xchg
cmp
sub
loope
rcl
jnp
adc
adc
addl
ret
mov
xor
pop
adc
xchg
ret
hlt
fcomip
xchg
int3
xchg
stos
inc
sub
jne
mov
mov
enter
ss
xchg
pop
sbb
mov
fildl
sbb
inc
insl
jb
xchg
push
jno
loop
cmc
sbb
xor
in
aad
fs
push
xor
lock
or
pop
cwtl
mov
aaa
leave
cmp
ljmp
or
stc
mov
xchg
cmp
dec
mov
and
fbstp
and
cli
popa
or
jo
or
xor
xor
shrb
scas
push
push
gs
cs
add
mov
aas
jle
in
or
adc
repz
test
adc
gs
aas
cmp
imul
fisttpl
inc
jns
xor
cmpsb
bound
stos
cltd
lret
sbb
mov
in
and
push
ds
fmull
gs
xor
mov
jle
cmp
decb
lock
push
xchg
js
add
mov
scas
or
mov
cmp
clc
and
sub
data16
inc
aaa
adc
and
adc
arpl
ja
es
push
push
xchg
test
ja
mov
mov
inc
into
lods
das
mov
pop
ret
mov
lcall
xor
jmp
add
cwtl
incl
test
inc
sbb
addl
xor
pop
enter
cmp
xchg
adc
cmp
insb
imul
sub
cmp
xchg
cmpsb
sbb
mov
lahf
out
clc
cmp
sub
ljmp
in
push
mov
pop
gs
ficoml
adc
ret
lret
clc
add
cltd
daa
enter
mov
xchg
mov
lods
aaa
mov
inc
adc
inc
icebp
xchg
mov
fsubl
rcrl
xorl
fiaddl
mov
add
pop
adc
orb
dec
pop
mov
jae
add
xchg
pop
lahf
lds
aad
movsb
test
fucom
cli
sub
jne
xchg
mov
mov
test
repnz
lods
vsqrtsd
mov
js
movsb
loop
cmp
dec
lret
inc
mov
das
jns
shr
mov
sbb
int
test
mov
mov
movups
cmp
lods
insl
test
jae
int3
xlat
jl
ss
cli
dec
cmp
int3
sahf
lods
nop
cmpsb
adc
xchg
repnz
dec
inc
into
int
adc
pop
orb
stc
and
lock
dec
cmp
mov
cmpsl
ss
mov
rcll
test
xlat
fucomp
movsl
xchg
sub
test
pusha
sub
daa
mov
jno
xchg
lods
pop
arpl
testl
add
jo
push
sub
cltd
loop
sbb
adc
pop
jge
xchg
je
call
sbb
mov
jns
add
pop
push
jo
cmp
aam
sub
inc
sub
jnp
dec
sub
jp
lcall
and
mov
in
mov
out
dec
fdivrs
dec
hlt
sahf
lods
or
push
test
test
jno
popa
shlb
dec
stos
add
testl
shlb
aam
xchg
or
add
fcomps
add
shrb
in
pop
lock
xchg
and
repnz
adc
cli
imulb
push
loope
clc
in
xchg
cmp
jg
and
dec
out
pop
test
sahf
cmpl
jne
scas
insb
sbb
enter
pushf
mov
jle
popf
sub
jnp
adc
ljmp
push
out
nop
ja
lea
cmp
xor
into
mov
ret
pop
mov
jno
pop
inc
fabs
mov
sbb
xchg
std
shlb
cltd
mov
jmp
icebp
out
out
clc
or
adc
push
enter
ja
in
xor
sbb
ss
sahf
sub
ja
pop
sbb
sub
leave
push
fsubrs
add
jle
push
cmc
push
imul
ds
jg
mov
in
test
fmuls
dec
out
int3
jg
pop
aad
lea
in
jne
or
pop
cmovge
and
test
test
popl
xchg
mov
inc
cld
pop
ret
add
fisttps
dec
aad
push
fisubrs
mov
mov
lock
and
jb
popf
out
lret
inc
sub
int
and
fisubrs
sub
inc
lahf
out
test
inc
jnp
scas
out
les
xor
adc
sub
mov
aas
leave
push
jo
ljmp
gs
aaa
mov
mov
jl
push
jl
fs
out
incb
mov
bound
sti
je
push
mov
xchg
fisubrs
jne
stos
xchg
push
int3
dec
inc
or
or
bound
push
and
adcl
scas
rorb
pop
pop
xchg
ret
rcll
subl
or
bound
popf
or
xor
mov
data16
sbb
sti
mov
ror
test
pop
jp
xchg
js
insb
mov
addr16
int
gs
dec
or
call
or
push
mov
mov
lret
shll
mov
rep
dec
jae
pop
sbb
fwait
cmc
xchg
lcall
mov
sbb
jl
testb
xlat
dec
push
inc
es
jle
push
lods
pop
dec
sub
xlat
in
mov
mov
jecxz
adc
or
mov
out
insb
nop
fiaddl
loope
pop
ljmp
pop
jne
mov
pop
pusha
dec
insb
pop
or
repnz
rorb
mov
ficoms
cmpsb
insb
mov
mov
jg
pop
sub
mov
cltd
pop
cmpsl
mov
dec
test
xlat
scas
xchg
xchg
mov
mov
mov
xor
push
call
pop
push
add
sbb
or
add
or
mov
jp
mov
sub
fxch
mov
fwait
mov
enter
sbb
sbb
fisubs
mov
pop
addr16
push
mov
push
repnz
jmp
leave
loop
xor
xor
mov
orl
xchg
out
or
cmc
popa
pop
das
inc
pop
cmp
jno
in
into
push
sub
sbb
fcoml
stos
je
mov
mov
add
cmp
pop
hlt
or
cmp
es
dec
sub
loopne
shlb
icebp
das
gs
fwait
cwtl
loop
leave
push
fwait
cmp
jecxz
mov
daa
mov
push
pop
lahf
cld
xor
adc
lret
or
jmp
fld
mov
inc
lods
jne
rorb
push
or
scas
add
and
aam
daa
call
pop
ss
or
cmp
cmp
ret
rorl
push
sub
dec
stos
sbbl
clc
sub
sub
xchg
call
adc
add
aas
dec
fldenv
jb
inc
or
in
rcll
into
add
cs
add
pop
push
mov
push
popf
ljmp
imul
loop
push
lret
xlat
push
xor
sub
fidivrs
lcall
push
sub
mov
outsb
testl
pop
mov
jno
adc
cld
mov
lea
dec
fldenv
push
cmp
in
pop
outsb
add
daa
insb
mov
xlat
out
lods
sbb
adc
push
mov
inc
push
lds
pop
int
cmp
jp
cmp
cs
cmp
xor
hlt
gs
pusha
jns
mov
cmpb
in
mov
or
mov
sti
push
notl
sti
cmc
pop
dec
stos
push
es
dec
add
mov
es
and
dec
sbb
sahf
call
or
dec
dec
adc
mov
inc
xchg
fsts
add
lods
enter
pushl
sbbb
aam
rclb
ret
adc
aaa
ret
popf
and
lods
mov
js
cltd
hlt
fwait
fwait
ret
fs
add
add
sbb
test
mov
data16
roll
adc
or
scas
testb
jg
mov
imul
mov
mov
xchg
push
pop
pop
roll
jb
ror
idivl
adc
stos
mov
push
push
addb
mov
add
sbb
dec
adc
fcoml
mov
popf
xchg
xchg
sbb
movsb
lcall
das
inc
xchg
scas
jge
sub
test
cltd
ja
jl
cmpsl
push
lret
movaps
in
fs
repz
shlb
push
lret
add
fldl
sbb
xor
aam
push
inc
fildll
leave
mov
fcmovne
ret
stos
xchg
int3
add
pop
in
fadds
arpl
int3
cmpsb
outsb
pop
push
mov
lret
roll
test
cmpsl
lds
mov
xor
pop
add
clc
enter
dec
pop
test
sbb
out
ss
in
and
mov
loope
push
loope
jecxz
js
and
xchg
add
je
sbb
mov
insl
inc
cmp
xchg
stc
fwait
xchg
push
ret
push
lret
xor
clc
add
rolb
lahf
pop
pop
out
lods
ret
scas
cmp
sub
scas
lret
xchg
loopne
xchg
sahf
into
popa
in
cmc
mov
repz
fldl
or
mov
xchg
or
outsl
inc
pop
xchg
or
jg
lahf
cli
xorb
das
dec
mov
ljmp
add
or
adc
dec
mov
outsb
xchg
lods
or
adc
outsl
and
xchg
js
in
pop
jge
jno
xor
dec
push
in
mov
push
fwait
dec
aam
outsb
jge
xchg
ret
jb
and
push
arpl
nop
push
sbb
mov
ret
push
iret
movsl
cwtl
lret
push
test
cld
nop
cs
xlat
out
sbb
jg
inc
mov
mov
cmpsl
inc
nop
mov
cld
loopne
add
cwtl
aam
jmp
in
xchg
dec
jne
ja
add
dec
leave
sarb
mov
pop
and
add
inc
mov
sub
popf
in
imul
pop
xchg
pop
pop
mov
cltd
pushf
outsb
addl
inc
enter
and
mov
insb
shr
inc
scas
mov
cltd
in
add
push
mov
mov
inc
and
jl
cmpsl
cmpsl
fisttpll
aam
enter
or
out
enter
pop
dec
ficomps
pop
insb
rep
mov
cmpsl
xor
push
sub
stos
pop
sbb
or
icebp
iret
insb
mov
and
fwait
cwtl
mov
pop
loope
test
popa
inc
dec
mov
push
arpl
decl
cwtl
cli
inc
das
xlat
mov
iret
mov
mull
or
add
outsl
and
mov
mov
cmp
cli
adc
mov
sti
push
fcoml
mov
scas
fisubrl
sbb
sub
int
xchg
adcl
push
les
data16
sbb
xchg
mov
sub
inc
cs
data16
loope
es
fnstenv
or
stos
sti
test
lret
movsl
orl
hlt
inc
inc
mov
test
ja
mov
add
cmpsl
xchg
pusha
jge
lahf
cmp
and
addl
xchg
push
loop
mov
mov
xor
movsl
lock
dec
out
ja
test
scas
fnstcw
xchg
outsb
nop
out
mov
outsb
fnsave
push
imul
cs
cmp
lahf
ds
inc
adc
dec
jno
jg
inc
arpl
and
mov
or
into
ljmpw
leave
popf
jle
mov
pop
int3
inc
push
mov
shlb
scas
pop
sub
loopne
xchg
mov
loopne
push
pusha
or
pop
mov
es
fcoml
insb
add
or
iret
iret
out
sti
and
cmp
bound
addl
mov
popf
ret
or
rcrb
mov
in
sbb
or
mov
inc
test
adc
lahf
and
adc
test
push
inc
popf
ljmp
mov
iret
jns
dec
daa
pop
fmull
sbb
xchg
mov
jle
mov
pop
cmc
testl
mov
sbb
xchg
out
outsb
inc
mov
sub
insb
sub
and
mov
rorl
jecxz
xchg
xor
outsb
imul
idivl
shrb
push
sbb
std
xor
xchg
in
lods
loopne
xchg
leave
adc
outsb
addr16
inc
lahf
and
jnp
jne
mov
push
sub
fdivrs
pop
movsl
loope
sbb
repnz
xchg
mov
mov
shr
xor
mov
mov
les
sbb
movsb
jnp
pop
fisttpl
fninit
sub
popf
cmp
cltd
fsubrs
pop
das
jl
pop
mov
push
in
xchg
inc
cs
sub
sub
xor
out
stc
sarb
nop
adc
mov
or
jl
ret
pop
lcall
popf
jle
loop
mov
jle
lret
in
or
mov
mov
add
je
jbe
cmpl
sub
js
sbb
mov
cmp
add
mov
data16
fst
add
mov
fldl
mov
lret
jae
imul
idivl
mov
fildll
mov
pusha
rcrb
adc
and
add
and
lea
jns
xor
jp
cmp
or
loopne
cmc
mov
or
mov
fstpt
push
bnd
push
ss
add
ljmp
mov
scas
push
push
or
xchg
push
sti
bound
cmp
in
push
pop
adc
and
mov
pop
mov
mov
or
jnp
repz
or
int3
into
aam
lahf
xchg
les
call
repnz
fwait
stos
jmp
pop
dec
sahf
loop
js
or
cmp
movsb
push
pop
movsb
jbe
aas
cmc
sub
push
pop
mov
adc
mov
bound
pop
push
scas
out
leave
xor
enter
ret
sub
dec
sub
js
cltd
sub
int
or
cmp
pop
mov
jle
dec
sbb
cli
fstpl
shll
mov
cli
pop
push
xor
daa
js
mov
push
adc
jecxz
cli
mov
repnz
mov
and
int
lret
imul
or
sub
mov
ret
into
aas
or
xor
in
mov
test
clc
adc
mov
dec
push
dec
cmp
shrl
mov
adc
enter
fnstsw
sub
out
jl
mov
sbb
in
in
inc
adc
lret
in
lcall
addr16
mov
int3
repnz
fstl
movb
xor
xor
ret
jle
mov
lea
mov
addr16
jmp
ljmp
std
mov
xor
in
mov
idivl
out
test
into
sbb
and
cmp
mov
xor
stc
bound
hlt
jno
insb
and
je
and
sbb
loope
outsl
adc
lret
cwtl
sahf
adc
inc
out
dec
or
ret
sub
jmp
adc
mov
in
inc
mov
and
hlt
and
rorb
jl
clc
adc
push
push
jmp
cs
movsl
xor
mov
jmp
mov
aaa
adc
add
and
jge
ret
inc
fildl
mov
cmpsl
sub
adc
pop
cmpsb
je
in
sbb
or
ja
jae
add
movsb
int
sub
xlat
dec
mov
inc
clc
pop
sbb
add
inc
in
andl
push
insl
aad
push
imul
and
ds
xor
or
sbb
scas
nop
aas
aam
and
loop
dec
adc
pop
daa
ja
scas
jmp
std
out
pop
stos
in
mov
push
add
rdtsc
or
dec
nop
dec
sbb
and
or
ds
mov
divb
cmp
inc
ljmp
inc
xor
mov
inc
gs
int3
xor
roll
pop
sub
loopne
and
or
data16
in
xchg
jl
inc
adc
or
test
sub
out
out
mov
inc
cmp
arpl
push
pop
pop
icebp
and
and
js
lods
pop
add
addw
daa
mov
dec
add
add
dec
xchg
rorb
dec
in
xorl
adc
shr
stos
outsl
outsl
xlat
or
stos
in
insb
mov
jns
mov
mov
cmp
dec
jmp
pop
sub
lds
sub
fnstenv
cmp
sbb
ljmp
pop
mov
jecxz
mov
stos
mov
push
mov
sub
mov
popa
sub
in
add
ja
inc
iret
and
pop
outsb
cmp
or
js
into
aam
bound
gs
movsl
stc
popf
out
into
cwtl
daa
push
into
pop
cmp
mov
rep
addr16
stos
or
lock
inc
pop
push
mov
movsb
test
in
test
idivb
cmpsl
nop
sub
rorl
jecxz
pop
loop
xor
pop
scas
das
in
jno
dec
shl
xchg
push
adc
mov
mov
insl
rclb
insl
cmp
movsl
addl
dec
lahf
cs
mov
ljmp
xor
sub
lock
mov
jp
cmpsb
xor
xchg
xorl
mov
addl
add
imul
pop
jmp
lret
lret
out
pop
mov
mov
loope
xchg
dec
mov
mov
xor
ja
jg
push
push
in
aad
add
jb
stc
ss
lock
xor
ljmp
int
xchg
jecxz
and
and
mov
pushf
inc
pop
and
lods
mov
insl
iret
dec
xchg
adc
lods
jl
pop
lods
push
dec
movsl
fs
pop
clc
cltd
aas
cmc
lret
push
jmp
sub
std
jnp
lds
subb
negl
pop
pop
mov
mov
push
out
push
mov
bound
xlat
xchg
xchg
inc
aad
mov
shll
nop
pop
inc
movsl
inc
cmp
pop
xchg
jge
fmull
imul
lahf
fisubs
xor
jne
inc
push
fcompl
mov
mov
push
dec
fs
fdivrl
inc
in
loopne
xor
mov
sub
xor
cmp
fdivrl
scas
and
mov
ret
sub
mov
cs
xor
stos
repz
iret
leave
mov
or
mov
xor
add
push
mov
hlt
add
jns
clc
icebp
lahf
test
mov
ds
dec
imul
cli
lods
dec
cs
sub
sbb
jecxz
mov
cmc
test
sbb
cmp
divl
pushl
sti
dec
sbb
aas
test
inc
inc
fwait
addr16
cmp
out
repz
adc
scas
adc
pop
mov
add
add
data16
orb
fidivrl
inc
mov
lock
addr16
mov
mov
mov
xchg
jns
js
adc
shrb
sbb
or
mov
faddl
xchg
sub
clc
cmpsb
inc
inc
arpl
rclb
out
or
add
call
out
and
test
cmpl
shll
leave
dec
lds
scas
sub
jl
fisubl
das
mov
loope
fwait
add
xlat
sti
imul
nop
adc
cmpsl
jnp
mov
sub
pop
nop
push
dec
dec
and
xchg
rcl
xchg
xchg
push
insl
adc
sbbb
jne
mov
adc
jns
and
out
adc
lcall
mov
jecxz
mov
xchg
test
cmpsl
mov
imul
xchg
enter
jnp
and
fs
sub
or
push
inc
or
mov
bound
or
inc
add
pop
sbb
inc
xchg
negb
push
popf
or
or
push
les
or
movsl
cmp
mov
loopne
aas
push
add
ljmp
xchg
cmpsl
lret
pop
sbb
push
xor
arpl
pop
repz
push
fwait
mov
out
std
push
addr16
jae
lods
push
cmp
stos
sahf
shll
addr16
adc
ljmp
rol
imul
out
rcl
paddw
in
mov
inc
inc
dec
cmc
jle
notl
adc
jb
xchg
fs
iret
xchg
xor
hlt
test
aam
mov
jb
add
loope
fildl
xchg
cmc
lock
clc
gs
or
add
cmpsl
inc
inc
jns
sarb
dec
adc
sbb
mov
aad
pop
rolb
inc
push
es
adc
mov
inc
cltd
jmp
mov
enter
scas
ljmp
push
loope
adc
xchg
dec
iret
mov
aaa
into
or
mov
clc
imul
push
push
lahf
push
mov
sbb
mov
add
out
mov
call
iret
jae
out
push
pusha
cmpsb
pop
mov
jb
push
lcall
fcomps
mov
mov
fcompl
xchg
ja
mov
movsb
add
fsts
adc
mov
fcoms
pop
xchg
leave
outsl
jge
sti
mov
inc
shlb
ljmp
push
mov
pop
imul
cs
dec
inc
pop
jg
mov
dec
adc
push
dec
loop
and
xchg
pop
idivb
rclb
xor
adc
pushf
fildll
aam
adc
int
mov
jmp
je
dec
push
xlat
jmp
push
adc
stc
loope
ss
xchg
ss
sub
mov
clc
cltd
mov
jns
leave
dec
push
pop
mov
mov
xchg
cmpsb
mov
cli
dec
repnz
int
mov
mov
sub
insl
mov
xor
shll
inc
xor
int
movsb
mov
inc
ljmp
fwait
push
mov
repz
mov
stos
hlt
mov
xor
fcmovnu
sbbl
sbb
pop
test
and
cltd
test
mov
pop
jae
lds
inc
jle
push
mov
hlt
or
in
jg
lcall
jne
xchg
pop
adc
and
mov
stos
push
sub
fidivrs
xor
sub
or
shrl
pusha
lahf
and
pop
xchg
cmp
adc
push
mov
sub
add
and
insl
dec
popa
test
mov
addb
adc
sub
add
scas
or
js
imul
and
ret
loopne
lahf
pop
mov
pop
jnp
imul
mov
stos
and
lea
test
push
jns
mov
pop
xor
or
mov
stos
clc
xor
mov
pop
ds
sbbl
jecxz
movsb
inc
dec
jae
mov
loopne
mov
aas
idiv
popa
movsb
mov
inc
pop
out
xorb
in
std
xchg
out
mov
outsb
mov
xor
fidivs
vsubsd
mov
and
adc
std
lds
mov
imul
aas
iret
test
jb
and
push
lcall
inc
jmp
adc
jno
lea
dec
pop
aam
insl
xchg
cmp
xchg
and
inc
xchg
sub
out
gs
push
push
in
mov
pop
jl
dec
and
rcl
test
in
push
cli
push
aaa
push
insb
stos
lock
add
sbb
cmp
movsb
push
les
dec
lret
stos
shll
pop
vandnps
add
xchg
stc
pop
popa
subl
sbb
test
xchg
push
jae
inc
arpl
fldt
insb
pop
mov
dec
scas
andb
push
fistpll
mov
xchg
xchg
ljmp
xor
test
hlt
inc
cli
jb
outsl
jl
xchg
pop
sub
push
mov
fucomp
inc
iret
daa
cmp
stc
sbbl
or
stos
and
pop
lds
or
lcall
inc
pop
mov
mov
mov
sbb
lods
sub
dec
jle
jb
test
adc
push
nop
repnz
mov
aad
xchg
scas
mov
pushf
dec
xchg
jmp
pop
pop
or
lock
movsl
jle
js
lret
pop
ljmp
mov
dec
fwait
mov
fistps
lret
push
adc
ss
enter
ret
mov
cmp
mov
inc
ret
into
lods
clc
inc
sub
jo
mov
mov
test
fcompl
mov
aaa
das
fnstenv
popf
cwtl
inc
scas
add
jmp
jne
push
cwtl
dec
or
cmc
stos
cmc
aas
jmp
imul
sahf
jmp
test
stos
mov
dec
shlb
adc
inc
fildl
mov
dec
bound
lret
imul
and
sbb
out
cwtl
pop
daa
call
inc
stos
repz
or
inc
xor
ljmp
or
mov
jb
pushf
sti
ja
dec
stc
or
jo
push
xchg
jb
scas
imul
adc
push
mov
sarb
pop
mov
sahf
sbb
shl
std
daa
lret
stos
mov
ljmp
shlb
pop
jmp
fimuls
xlat
std
mov
sbb
pusha
mov
xchg
sbb
xor
enter
dec
sbbb
cmp
push
aaa
lret
add
in
insb
push
mov
dec
xchg
imul
stos
in
scas
pop
inc
mov
js
pop
cmp
push
or
sti
inc
dec
ffree
cltd
or
push
arpl
jl
lahf
and
cmp
std
xchg
lret
xchg
lds
adc
dec
mov
cmpsb
aas
xchg
dec
and
adc
adc
dec
ret
cmp
out
cltd
mov
jle
push
or
mov
pop
cmpb
rorl
mov
xor
or
testl
in
mov
pop
rorl
mov
in
lock
divb
lods
sub
jmp
jno
push
movsb
outsl
jae
das
mov
or
jle
rorl
xor
into
inc
test
scas
sub
dec
push
dec
xchg
pop
adc
shll
xlat
fnstcw
jb
add
insb
cmp
mov
mov
fidivs
pop
mov
adc
xor
pop
jle
pop
cmp
mov
mov
sti
ja
mov
mov
push
dec
int3
fisubl
adc
lret
cmp
imul
call
not
adc
insl
jl
std
popa
pop
jl
es
xor
mov
arpl
mov
lret
lcall
jnp
int3
adc
add
push
pop
jl
mov
bound
push
xor
sahf
je
test
aaa
scas
jle
mov
sub
push
pop
mov
inc
add
sar
lret
fidivrl
push
fcmovnu
and
or
pop
mov
or
adc
popa
test
pop
les
pop
xchg
loop
xor
xchg
enter
or
out
shll
std
fsub
ds
test
std
ds
add
in
jns
or
lss
push
push
xlat
or
ljmp
js
rorl
sub
fstpl
fs
dec
mov
iret
inc
addr16
jge
push
jno
in
xchg
cmp
imul
pop
addb
push
mov
in
pusha
dec
xchg
and
xor
je
outsl
rolb
scas
mov
ds
pop
cmp
dec
mov
movups
sbb
outsb
mov
rcl
sahf
sub
jbe
ret
dec
push
sbb
popl
jnp
sbb
shl
sub
ret
cmp
push
sahf
adcb
out
fistps
enter
stos
je
call
cmp
inc
jmp
sbb
aad
call
mov
ljmp
mov
push
dec
insl
ret
out
sbb
mov
ss
sti
dec
inc
insl
sub
mov
rorb
pop
pop
or
pop
cwtl
xchg
cmpsb
ja
int3
pusha
pop
push
cltd
cwtl
clc
push
mov
test
xchg
sub
xor
mov
xor
push
xorb
adc
cmp
lods
imul
aam
insb
push
mov
jnp
lret
pop
adc
jg
iret
push
into
out
test
xchg
cmpb
lret
adc
or
mov
movsb
or
xlat
sbb
fdivrl
or
fdivrl
pushl
jne
out
stos
test
aas
xchg
pop
ljmp
and
jno
int
int
xor
jb
cmp
into
cmp
adc
add
pop
fsubs
mulb
xchg
cs
xlat
insw
pusha
hlt
iret
xchg
sbb
and
mov
mov
inc
dec
bound
jns
sahf
cltd
push
les
hlt
in
adc
pop
iretw
imull
xlat
jbe
and
lock
xchg
testb
add
cmp
or
fisttps
mov
dec
ds
or
push
adc
and
ret
push
xchg
and
lea
fistpll
sahf
cmp
mov
cmc
loopne
fcoms
add
out
cltd
mov
xchg
mov
mov
cmp
xor
add
out
mov
or
and
xchg
repz
pop
pusha
aaa
data16
and
stos
xor
pop
fbstp
sbb
cld
jp
dec
push
jg
push
and
scas
cmpb
jmp
sbb
lret
mov
or
cmpsb
cs
add
jle
cmp
mov
sbb
pop
data16
flds
out
adc
pop
add
jne
xor
aaa
and
inc
mov
sub
adc
jbe
or
fildl
enter
enter
bound
adc
movsb
loope
pushf
adc
fcomps
fsubr
sub
jbe
push
dec
jp
mov
jo
movsl
xchg
stc
cltd
mov
fstl
sahf
testb
inc
ja
xchg
movsl
insb
inc
inc
mov
jp
in
fimull
gs
mov
outsb
xor
mov
pop
fdivl
xor
pop
add
mov
jo
out
dec
rclb
sahf
xchg
pop
or
lods
cltd
xchg
add
sbbl
aaa
dec
jnp
outsl
dec
xchg
insb
gs
xchg
stos
cld
jl
cmpsb
push
mov
jp
rcll
popa
mov
pop
test
mov
bound
mov
insl
jno
addr16
repnz
insb
js
test
adc
pop
outsl
icebp
icebp
insl
push
push
out
dec
mov
inc
bswap
adc
rcrl
aaa
aaa
pop
imulb
push
imul
jnp
ret
sbb
cltd
cld
sti
xchg
pushf
xchg
aad
fisubrs
loop
cmp
push
push
mov
out
mov
subb
push
xchg
and
dec
push
xchg
inc
dec
mov
mov
outsb
outsb
lock
mov
mov
pop
in
ljmp
shll
adc
arpl
sub
lret
loope
repnz
les
cmc
mov
jns
dec
xor
add
inc
in
xor
mov
mov
scas
mov
lcall
xor
xlat
aaa
jno
loopne
adc
lret
cmp
out
fs
clc
leave
adc
pop
push
imul
mov
cld
adcl
sbb
or
xorb
stc
enter
adc
adc
std
ss
out
sbbb
xchg
repz
lock
xor
cwtl
jp
orl
lret
ljmp
loop
pop
xchg
icebp
in
clts
inc
roll
push
pusha
rcrb
jo
and
cmp
mov
leave
fcoms
cmpsb
or
or
cmpsb
jne
dec
fwait
cmp
and
lods
xor
adc
addr16
mov
neg
imul
pop
shr
int
dec
andl
daa
mov
in
test
xor
outsb
mov
andl
test
js
mov
mov
imul
xchg
outsb
xchg
sbb
cmpb
mov
cmp
mov
inc
test
or
lret
pop
add
sub
cmp
jmp
adc
sub
dec
xchg
pusha
inc
push
mov
mov
stc
subb
xor
imul
mov
jns
clc
sub
daa
sub
sbb
out
sbb
mov
pusha
orl
push
andl
push
cmp
insl
stos
aaa
inc
cmpsl
js
mov
and
test
cmc
push
fistpll
xor
xor
mov
outsl
mov
xchg
inc
mov
rclb
jge
fs
dec
outsl
popf
subl
and
jge
js
pop
dec
jmp
iret
lahf
and
call
pushf
push
stos
arpl
sbb
xor
in
inc
pop
arpl
mov
fistl
push
sbb
cmp
adc
cwtl
cld
xchg
cli
jle
push
adc
push
adc
out
ds
sub
push
aas
xchg
call
xchg
push
insb
jb
fwait
push
pop
and
or
add
popl
fisubrs
in
mov
sub
call
sbb
out
mov
xchg
iret
pop
push
mov
add
shll
mov
dec
jle
push
fwait
and
fsub
insl
add
xchg
mov
in
test
jmp
pop
inc
or
in
sub
mov
xor
cltd
add
jmp
pop
movsb
insb
and
out
pusha
fiadds
push
xor
cmp
mov
cmpsl
fisubrl
add
push
jl
mov
cli
push
loope
aas
cmpsb
mov
int
jl
mov
push
test
push
xlat
lret
insl
sub
aaa
mov
mov
or
xchg
loopne
pop
cmp
ss
sub
fstps
lods
sti
and
pusha
and
lods
mov
lods
inc
repz
push
js
xchg
xlat
dec
mov
cli
sbb
xchg
js
jge
call
shlb
movsl
das
lds
pop
adc
repz
dec
addl
lret
dec
fadd
int3
mov
notb
and
push
lcall
bnd
fcom
ja
arpl
lahf
mov
inc
fidivs
lahf
dec
cmpsb
sbb
call
ljmp
imul
ljmp
inc
lret
test
pop
addr16
cmpsl
sub
dec
mov
shlb
out
sub
sahf
mov
lcall
fisubl
shlb
sub
dec
fbstp
in
add
cltd
int3
fistps
mov
mov
mov
shrl
sub
pop
pop
rorl
jge
cmpsl
xlat
xchg
adc
insb
or
shr
adc
out
cmp
mov
imull
cli
cmp
push
jl,pt
cli
addl
mov
mov
inc
test
pop
mov
std
add
adc
xchg
xchg
subl
popa
or
dec
xchg
and
pop
pop
jg
shlb
insb
add
cmp
xor
and
jne
or
pop
xor
mov
sub
mov
nop
incl
push
pop
dec
inc
mov
lcall
aaa
jbe
xchg
cmp
std
cmp
fwait
mov
jb
fisttpl
mov
notb
ret
push
in
popf
mov
aam
mov
in
xchg
jmp
and
enter
jae
rcl
mov
addr16
add
cwtl
or
fdivl
xchg
fst
and
stos
cmp
call
in
fimuls
pop
cmc
stos
sub
cmc
enter
mov
out
mov
sub
and
push
vpmacsdql
mov
lods
gs
pop
sbb
sbb
fs
dec
add
pop
add
adc
pop
out
pushf
test
insb
imulb
jb
cmp
enter
icebp
adc
mov
push
cmp
mov
fcomip
inc
les
mov
mov
ja
jmp
jb
jnp
jae
cmp
les
xchg
pop
dec
lahf
nop
shlb
inc
push
jmp
and
imulb
stos
sti
mov
hlt
shll
imul
jo
std
add
pcmpgtd
sub
xor
mov
je
mov
lret
xchg
leave
std
pop
or
imul
cmp
jecxz
stc
mov
fimuls
pop
loop
dec
loope
mov
add
mov
jnp
es
jmp
sbb
in
out
dec
sbb
sub
inc
mov
ja
and
shl
xchg
mov
jp
add
pop
outsl
sbb
cmpl
clc
lds
cld
pop
roll
mov
jmp
sub
test
call
xor
cmp
imul
out
test
lahf
js
and
and
push
imul
and
pop
repz
xor
jb
fisubrl
or
out
sub
repz
mov
and
fmuls
mov
push
pop
das
pop
sbb
stos
push
mov
lds
in
jb
aaa
dec
cmpb
fists
push
les
das
leave
dec
and
imul
fwait
add
jnp
mov
fsubrs
sub
lea
and
enter
ret
push
pop
push
and
mov
dec
jno
out
testb
lods
lahf
jecxz
jae
mov
sbb
in
outsl
outsb
add
fisttpll
insb
mov
fnsave
mov
or
mov
into
in
push
push
mov
xchg
loopne
shll
lock
sti
movsl
stc
inc
stos
mov
clc
cmpsb
mov
pusha
popf
jle
dec
and
push
cli
mov
mov
rcrl
pop
cltd
push
push
lock
imul
dec
decl
dec
or
or
pop
mov
xchg
xor
repz
rcrb
cmp
sbb
cli
aaa
ljmp
aas
pusha
cmp
and
or
cwtl
mov
jo
test
dec
movsl
into
je
ja
and
je
sub
nop
push
out
negb
cmp
cmp
jne
imul
sbb
jb
xchg
jnp
es
add
idivl
fs
or
aaa
jg
je
add
outsb
outsl
das
mov
dec
xchg
ret
mov
dec
in
into
adc
and
jns
push
push
test
mov
cli
int
cmpsb
nop
dec
sbb
scas
nopl
lret
mov
mov
pop
cmpb
mov
xchg
leave
ficomps
or
mov
push
and
fnstenv
loopne
shr
xor
xchg
outsl
sub
pop
loope
or
inc
cmp
hlt
roll
mov
test
movsl
jns
push
inc
add
ljmp
aas
xchg
pop
adc
cmp
xor
jmp
cs
or
add
mov
shlb
jno
mov
and
jmp
movsb
cld
mov
mov
adc
mov
or
adc
jbe
cli
in
cmp
leave
pop
mov
cmp
lahf
test
js
jmp
jge
pop
scas
mov
popf
add
add
add
push
les
mov
pop
popa
test
je
sub
mov
inc
stos
bound
cmc
inc
loope
mov
popf
jmp
sahf
jo
fnstsw
scas
mov
and
cmpsl
inc
inc
mov
cmc
dec
mov
mov
mov
jecxz
fsts
inc
sbb
inc
out
dec
pop
push
mov
jo
xchg
pusha
shrb
pop
movsb
mov
sarb
shlb
subl
xchg
xchg
jmp
sarl
sbb
insl
fwait
dec
mov
inc
xchg
xor
jl
divb
xchg
mov
mov
cmp
js
fdivrp
sbb
lcall
lea
call
loope
mov
pop
std
mov
xchg
loop
aam
aam
shr
push
add
or
mov
gs
cmp
inc
sahf
out
imul
shll
fsubs
fisttps
xor
sub
movsb
mov
in
push
in
and
iret
lods
sbb
adc
xor
cmp
pop
jg
adc
outsl
into
je
stc
imul
fs
cltd
pop
cmp
pop
cmp
jb
xlat
lret
frstor
cld
xchg
push
scas
mov
clc
pushf
push
lahf
mov
mov
lcall
mov
jmp
pop
pop
cmp
insl
cmpsl
jno
mov
sub
outsb
adc
mov
and
lcall
cmp
sub
xchg
pop
jns
cltd
pop
inc
adc
ss
loop
add
and
pop
daa
movsl
and
in
ret
dec
cs
xorb
jno
sub
inc
popf
dec
pop
shll
adc
mov
inc
add
and
sub
loope
cld
pop
adc
add
test
jns
popa
test
iret
pop
cmp
les
cwtl
repz
add
xor
data16
sbb
add
adc
and
das
lahf
mov
test
cmp
pop
adc
mov
jne
or
push
xchg
push
jle
sbb
xor
shlb
icebp
sets
jb
inc
out
fs
pop
lods
adc
mov
ja
test
ljmp
leave
test
jb
mov
cmovl
push
insb
dec
push
rcll
lret
jl
push
test
rcr
mov
outsl
in
pushf
nop
sbb
push
xor
cmp
int3
pop
repnz
xor
imul
and
jnp
loopne
insl
clc
arpl
pop
pop
pushf
add
insl
loop
cltd
sub
sub
out
movsl
scas
in
mov
or
xchg
jo
mov
inc
fwait
dec
fnstsw
jmp
push
pop
sbb
out
dec
cmpsl
dec
es
div
dec
outsl
xchg
and
rorb
jbe
inc
sbb
shlb
inc
add
mov
pop
js
aas
ret
loope
fsubrs
sbb
int3
fbld
and
outsb
jecxz
sbb
lods
xlat
dec
mov
push
rcrl
notb
mov
fidivrl
inc
adc
das
or
mov
loop
lea
jle
pop
pop
outsl
cs
mov
cmp
adcl
pop
push
nop
xor
mov
addr16
lea
mov
js
xor
jle
or
inc
cwtl
idiv
xlat
jmp
mov
ds
fidivrs
sbb
flds
outsl
insb
and
jns
ljmp
adc
or
xchg
jecxz
clc
pop
add
in
pop
cmp
mov
add
ror
mov
shrl
ret
cmp
pop
ds
hlt
adc
mov
jg
inc
lahf
jl
stc
cmpsb
xlat
cmp
dec
jb
sub
push
flds
sbb
shll
or
lock
mov
cmp
sub
pop
and
cmp
test
and
not
cld
add
ret
inc
and
adc
add
mov
icebp
xchg
pop
lds
push
mov
or
lcall
mov
mov
mov
sub
push
test
jnp
adcl
and
mov
mov
subl
mov
sti
jmp
into
xchg
cmpsb
push
mov
cmpsl
idivb
mov
inc
cmp
sub
sbb
xor
sub
jns
inc
in
leave
mov
sti
daa
push
cmp
ja
xchg
lods
nop
negl
mov
sub
in
xor
mov
and
cmp
mov
or
ret
mov
mov
std
imul
add
cwtl
loop
inc
jae
xor
mov
aam
add
inc
out
les
sbb
nop
enter
mov
sub
mov
das
push
fmull
mov
fisubrl
movsl
sub
cmp
orb
lods
or
dec
jge
sub
enter
inc
fdivr
stc
jl
je
ja
test
sub
jge
push
stos
xlat
mov
into
jg
xor
pushf
ss
adc
mov
pushf
mov
enter
push
pop
cld
cmp
cltd
data16
das
outsb
xor
pop
xchg
loop
mov
fnstsw
mov
iret
or
incl
je
or
mov
insl
test
xchg
sub
aaa
and
and
or
or
lahf
out
jmp
add
jg
cmp
lods
mov
sarl
push
arpl
stos
cmpsl
mov
sub
or
push
add
in
int3
or
std
or
xorb
cs
rcrl
add
or
push
sub
icebp
push
xchg
sub
sbb
mov
xchg
push
stos
push
cmp
mov
ds
pop
test
add
jmp
inc
aaa
sbb
out
jp
into
mov
js
push
xchg
jbe
dec
in
xorl
mull
jno
cmp
daa
xor
inc
mov
les
jne
jp
push
fbstp
dec
ja
push
jne
ret
xchg
mov
jne
mov
xchg
gs
inc
in
into
xorb
add
push
scas
into
xchg
pop
inc
push
mov
fldcw
pop
icebp
xchg
adc
cmpsl
ret
cmp
imul
and
cmp
aas
xor
in
sbb
xor
insb
inc
movsb
push
push
pop
cmpsl
inc
out
adc
mov
sub
loop
mov
ret
test
push
dec
adc
pop
xchg
dec
clc
test
xchg
clc
lret
xchg
test
ficoms
ja
pop
aam
or
jl
mov
lret
and
push
sbb
aaa
adc
cmpsb
and
popa
or
stos
lret
insl
sbb
inc
aaa
dec
notb
cmc
xchg
fildl
dec
leave
push
mov
inc
fwait
mov
ss
outsb
cmc
push
rcll
jne
push
mov
dec
outsl
push
hlt
andl
mov
sub
test
pop
xor
push
lret
mov
mov
lods
or
into
pop
aaa
sti
imul
pop
sub
rorb
in
ret
aaa
shl
mov
jge
cmpsl
and
int
clc
aas
mov
cmp
cmpsl
sub
jnp
mov
and
pushf
imul
xchg
enter
mov
xchg
dec
sti
bound
sbb
inc
jp
testl
ret
imul
inc
jbe
mov
shll
daa
popa
xchg
nop
jae
sub
add
cmp
scas
mov
xchg
pop
ja
pushf
and
out
pusha
gs
sub
mov
inc
rcl
aas
xor
pusha
sub
data16
insb
fimuls
adc
jmp
add
push
shlb
jnp
inc
shr
jo
xor
jg
sahf
dec
push
xchg
push
je
push
jp
xchg
sbb
aam
lret
lods
aas
int
les
in
sti
sub
and
pop
pop
popa
adc
inc
mov
push
sbb
mov
push
sti
adc
out
xchg
stos
clc
loopne
push
sbb
mov
repz
nop
rcll
out
pop
pop
push
aas
cmpsb
lods
outsb
lea
movsb
dec
fildll
cmp
inc
sbb
sub
out
outsl
pop
inc
add
inc
test
sub
sbb
mov
pop
cmpsl
cmpsl
jnp
outsb
inc
xlat
in
je
mov
hlt
and
ja
js
ret
cmp
inc
push
xchg
ret
popa
jo
mov
loope
sbb
mov
add
fmuls
cmp
dec
xor
pop
inc
fisubrs
pop
aam
cltd
lock
mov
lea
shrb
xchg
mov
xchg
xchg
addr16
out
dec
add
jns
add
adc
sarl
and
out
insb
inc
shll
xchg
outsl
bound
pop
fists
mov
sbb
mov
and
xor
test
jb
jmp
xor
sub
sub
xchg
daa
std
and
or
sub
outsb
insb
fists
sbb
mov
fld
push
cmp
jo
cmp
jne
mov
mov
or
out
mov
popa
inc
movsb
push
or
adc
cmp
jb
or
add
lea
sarl
addr16
cmpsl
mov
mov
push
xchg
sub
xchg
mov
add
sub
jbe
mov
cltd
scas
test
stc
ja
and
out
lcall
in
pop
push
shrl
xchg
jmp
push
inc
jp
cmp
es
cmp
adc
popf
fxch
lcall
and
mov
insb
fistpl
stos
das
cmp
out
mov
push
fwait
fistpll
pop
enter
repz
jmp
push
sub
or
aaa
out
cwtl
lret
lods
cld
fsubrs
mov
adc
dec
ror
test
filds
jne
adc
xchg
inc
test
sarb
mov
and
movsb
dec
adc
fwait
cmp
fs
dec
popa
dec
cs
cmp
shrl
ja
add
shrl
or
pop
dec
aaa
xchg
shll
test
xor
cmp
fbld
js
push
and
shll
dec
test
inc
lods
loope
add
out
push
sbb
out
add
fs
movb
xor
into
lods
sub
push
pop
jmp
test
test
dec
nop
sub
xchg
leave
lret
jnp
cmp
ds
daa
scas
xchg
and
dec
stos
out
cmp
dec
out
outsb
xchg
jbe
in
or
jbe
gs
jno
xlat
addb
xor
popa
add
loop
mov
xorb
cmp
fwait
cmc
or
mov
xchg
cmp
lods
pop
lods
lods
dec
inc
sbb
sub
shll
shrl
adc
adc
xor
int3
ret
pop
lea
addr16
shll
push
and
or
adc
int
or
loopne
dec
mov
pop
in
xor
cmp
xorw
dec
lods
std
push
movsl
js
bound
mov
and
out
fidivrl
xor
mov
test
mov
sbb
or
std
in
xchg
mov
lret
dec
pop
sub
xchg
ficoms
mov
push
push
or
imul
jnp
jmp
cmpsb
sbb
sub
scas
mov
in
enter
hlt
test
out
mov
jp
sbb
pop
dec
cmp
mov
leave
mov
sarb
fs
add
jb
and
pushf
inc
adc
mov
mov
js
cltd
fsubl
scas
shlb
scas
lds
cmp
push
outsb
in
and
mov
sbb
pop
mov
mov
add
xchg
and
test
pop
mov
inc
xor
add
loope
sub
push
xor
sub
xchg
nop
sbb
inc
loopne
stc
push
in
call
lea
cmc
adc
fcompl
ficoms
pusha
les
andb
nop
lea
mov
fwait
cmp
pop
lods
movsl
sub
dec
jmp
mov
je
testb
xchg
repz
jo
jmp
push
cld
aad
cmp
shrl
dec
inc
or
rcrb
in
sub
ror
sub
sbb
dec
mov
std
jae
daa
push
test
into
loope
std
shr
jecxz
ss
lahf
mov
hlt
add
dec
mov
cwtl
push
or
mov
test
lret
lods
jle
pop
and
cwtl
and
xchg
mov
cmp
int3
daa
jo
cmp
adc
lret
cmp
ds
test
mov
xchg
and
mov
pushl
call
jbe
mov
repz
lret
dec
lcall
sbb
sbb
mov
and
xchg
xor
outsl
scas
hlt
nop
or
int
leave
mov
int
mov
fldl
fldt
lret
xor
sub
imul
sti
js
cmpsl
in
jnp
repnz
int3
mov
xchg
xlat
loopne
mov
push
shll
inc
ljmp
dec
dec
into
fisubs
sbb
aad
lcall
aas
sti
jnp
pop
stc
adc
scas
sub
sbb
and
lret
lahf
stos
add
xchg
test
test
and
mov
pop
loopne
xchg
mov
fwait
jecxz
xchg
fisubs
addr16
dec
loop
push
cltd
addl
cmp
adc
jmp
add
std
pop
lcall
subb
sti
and
pop
data16
int3
jne
jecxz
fildll
dec
sub
pop
or
cmp
xor
cmp
push
cmp
lods
hlt
sub
sbb
mov
mov
dec
jp
push
push
pop
mov
xor
cmc
movb
inc
mov
inc
stos
cmp
pop
outsb
daa
mov
pop
lret
pop
test
mov
mov
pop
das
add
cmp
push
sbb
ret
jno
outsl
sbb
adc
das
inc
sbbl
xor
fwait
hlt
inc
call
ret
stos
add
fs
aas
sub
lock
call
sub
push
shlb
dec
lock
mov
les
xor
inc
add
enter
stos
lods
mov
xor
nop
pushf
fsincos
xor
sbb
stos
pop
rcr
int
sub
jno
jecxz
pop
les
cmp
orl
and
rcrb
pop
fsubrs
imul
mov
int
ret
xor
cmpl
stc
sub
insl
dec
or
insb
add
stc
add
iret
or
aad
or
inc
cltd
cmp
mov
stc
inc
insb
scas
call
adc
rcrb
das
scas
dec
call
out
mov
ljmp
sub
mov
jno
scas
inc
aaa
add
sbb
pushf
cmp
arpl
mulb
dec
rcl
ficoms
imul
test
mov
stos
dec
dec
xor
push
jnp
fldcw
cmp
call
stos
movsl
adc
xchg
fsubr
testl
loop
xchg
sbb
fwait
mov
and
ds
lods
sbb
fdivl
cltd
jl
jp
pushf
push
adc
ds
fstps
cmp
dec
mov
bound
mov
mov
in
push
push
inc
fists
fs
or
imul
lcall
rclb
mov
mov
fs
jne
sub
pop
push
insl
push
cmpsl
inc
dec
or
sub
sbb
jne
push
add
leave
mov
cltd
xchg
das
adc
fidivrs
xchg
mov
cmpsl
cmpsl
enter
mov
adc
mov
hlt
cmp
xor
repz
mov
cld
aam
add
iret
xor
xchg
scas
jge
out
dec
call
xchg
outsl
inc
xchg
push
adc
push
inc
sub
call
sbb
pop
outsl
sbb
leave
pop
scas
xlat
das
pop
pop
push
test
imul
sarb
push
test
xor
mov
pop
pop
and
sbb
pop
adc
cmp
dec
adc
es
roll
ret
lods
cmpsl
sub
inc
push
cmp
xor
adc
xchg
clc
pop
xchg
push
jb
aaa
xchg
inc
adc
cwtl
adc
cmc
cmp
xchg
adc
xchg
and
loopne
push
aas
push
sbb
sub
test
xchg
or
js
idivb
sub
or
xchg
jbe
das
cmp
jbe
add
pop
shll
aam
mov
mov
nop
ljmp
popf
mov
into
aaa
outsb
andb
sub
dec
adc
add
scas
into
push
loopne
js
pop
push
pushf
pop
jecxz
xlat
jno
test
lret
jmp
pop
or
dec
xor
mov
jg
xor
push
pop
push
pandn
fisubs
adc
ror
push
dec
clc
mov
imul
jne
orb
iret
pushf
jg
jge
rcrl
adc
push
mov
mov
jge
imul
leave
xchg
pushl
mov
cmpsl
dec
xchg
adc
fyl2x
xor
cmp
mov
cs
lret
dec
push
sbb
jo
push
enter
pop
cmp
inc
dec
jmp
cli
out
std
push
dec
popf
mov
pop
xchg
xor
cmpsl
ror
hlt
flds
lret
and
mov
je
stos
xchg
cmp
movsb
pop
mov
sbb
dec
fs
and
in
adc
test
or
js
cmp
jge
dec
jbe
daa
ja
insl
repz
and
dec
fs
pop
jl
insl
mov
add
out
lcall
adcl
push
pop
mov
insb
lcall
movsb
lods
xchg
out
dec
pop
jbe
mov
outsl
pop
adc
add
xchg
push
add
adc
xchg
fnstcw
pop
std
or
out
mov
popl
push
xlat
mov
push
test
mov
call
xor
stc
lock
jae
ja,pt
xor
pushf
add
xlat
sub
push
mov
mov
stos
sbb
stos
movsb
adc
and
dec
xchg
movsb
jns
std
pop
enter
xchg
jnp
and
lods
jae
jp
mov
add
and
jp
lods
mov
daa
sarb
xorl
fiaddl
outsl
shlb
andl
movsl
pop
cli
lods
pop
xlat
les
sub
jb
lcall
in
inc
popa
push
mov
daa
cmpl
xlat
dec
mov
sub
dec
rol
cli
outsl
cld
addr16
sub
sbb
stos
xchg
insb
mov
mov
cmp
out
js
jnp
cmp
jg
aam
or
or
pop
out
mov
push
sarl
ja
mov
jmp
loopne
fists
cmpxchg
adcb
fimull
stos
movsb
test
pop
jbe
mov
inc
sbb
mov
mov
es
std
push
sbb
adc
push
shlb
pop
dec
js
data16
pop
jl
xor
mov
in
test
mov
adc
xchg
mov
sub
adc
mov
cli
popl
fmull
pop
jnp
mov
pop
add
sub
mov
push
arpl
in
push
loop
les
push
gs
mov
stos
xor
test
shl
jo
inc
repz
call
and
mov
cmp
aas
xchg
out
xchg
or
popa
ljmp
push
mov
in
inc
push
enter
in
nop
xchg
jl
loope
ret
sub
popf
loope
insl
push
loope
aaa
lea
data16
lods
in
dec
xor
stos
mov
stos
jno
repnz
iret
imul
jecxz
add
sub
daa
add
loopne
mov
jb
aaa
jno
push
movaps
out
aas
jge
not
out
cmpl
jnp
out
xor
xchg
jae
sub
leave
inc
mov
lds
mov
ds
mov
and
lock
popf
imul
mov
jae
stos
mov
adc
push
out
or
scas
dec
int3
ficoml
bound
mov
adc
or
add
pop
scas
cmp
mov
push
ret
push
test
xor
or
lods
adc
pop
sbb
js
xchg
xor
test
lcall
jb
mov
lods
inc
inc
lcall
pushl
add
mov
pop
add
out
cmpl
or
and
cmpsb
dec
xchg
or
jnp
ret
dec
repz
jae
aad
push
int
loopne
sahf
jle
inc
sahf
flds
into
gs
in
mov
enter
jb
jb
jns
xchg
cmpsb
bound
dec
mov
mov
arpl
sbb
cmp
sub
cli
xchg
sub
imul
sbb
shrb
dec
push
push
inc
adc
push
cmp
cmp
pushf
aad
push
aaa
mov
xchg
mov
or
pop
lods
inc
mov
mov
test
repz
cmp
pop
push
xchg
lahf
mov
xchg
repz
shll
cwtl
lds
jmp
mov
push
les
or
scas
or
movsb
push
data16
aas
add
sbb
fcoms
pusha
mov
push
mov
pop
jg
pop
daa
lock
in
mov
pop
jo
and
pop
lahf
xor
jo
divl
test
jnp
and
outsl
fisubl
les
sahf
popa
push
and
out
imul
dec
xchg
lock
repnz
pushf
insb
icebp
mov
icebp
ret
shlb
xchg
mov
rcrl
jo
push
jo
and
add
mov
cwtl
fwait
daa
xor
lock
jo
jo
sub
addr16
xchg
dec
hlt
lods
mov
movsb
mov
pop
xchg
mov
push
xor
cmp
negl
push
mov
jno
dec
subl
inc
jns
fnsave
pusha
sub
popf
std
lods
add
in
cmpsl
pop
jne
lret
jne
aam
insb
lret
xor
xchg
inc
push
sub
cmpsb
pop
outsl
mov
cmc
prefetch
or
push
fsubl
push
loopne
mov
out
dec
mov
pusha
xlat
mov
pop
call
dec
dec
jmp
push
push
inc
add
cmp
lds
jg
jecxz
pop
in
movsl
and
sbb
dec
dec
test
nop
test
jle
xchg
faddl
fbstp
out
jle
inc
or
hlt
test
in
xor
shl
pop
jl
mov
cmc
ds
pop
sbb
jne
nop
ss
pop
je
add
jo
add
or
cmc
mov
mov
pusha
aad
push
jp
mov
cwtl
dec
jb
mul
clc
add
out
mov
sti
jp
jns
scas
scas
sub
cli
xor
xlat
adc
in
lahf
dec
jp
daa
inc
pop
pop
pop
shl
leave
mov
mov
mov
mov
cld
xchg
lahf
xchg
fimuls
cwtl
orb
xor
sub
pushf
mov
dec
loopne
cld
loope
or
xor
push
jecxz
xor
xchg
mov
aad
mov
pushf
xchg
ficoml
or
das
movsl
add
fnstcw
stos
push
out
pop
mov
ss
jb
test
rcrl
add
xchg
xchg
mov
popf
jmp
jl
repz
mov
lcall
xchg
in
jno
sub
lret
adcl
mov
aad
xchg
mov
jns
lret
data16
add
jns
fmuls
daa
aas
ds
push
sbb
jg
mov
mov
xchg
jecxz
loopne
js
or
xor
mov
jno
cmp
cmpsl
aam
fisttps
pushf
lods
add
mov
mov
inc
add
pusha
daa
mov
cmp
cs
enter
andb
jo
add
test
jge
cld
or
mov
cmp
dec
insl
push
xchg
mov
popa
shrb
add
add
sarb
xorl
sbb
xchg
fsts
test
add
cld
jns
jecxz
ljmp
cmp
test
dec
or
adc
repz
jmp
inc
mov
cmp
pop
div
outsl
inc
add
inc
and
test
incl
sbb
jnp
clc
bound
pop
inc
adc
arpl
jb
imul
xchg
cmpsl
jno
add
mov
push
mov
push
cs
pusha
pop
push
sbb
jge
jle
xchg
in
dec
sbb
xor
fstl
pop
and
fs
nop
iret
out
jge
xor
and
sbb
in
jmp
daa
out
dec
fadds
imul
mov
leave
mov
aaa
push
push
and
mov
ds
mov
repnz
push
inc
insl
addr16
popf
aas
or
dec
mov
out
fwait
repz
xchg
pop
xor
mov
jp
imul
mov
cli
inc
jle
call
rorb
push
or
push
out
dec
std
adc
adc
pop
cltd
rorb
std
movsl
ja
mov
push
mov
shl
add
cwtl
lret
cs
cmp
and
lock
mov
xchg
xchg
iret
adc
enter
out
dec
mov
imul
mov
mov
inc
test
stc
xor
adc
xchg
ds
xor
and
loope
pusha
xchg
cmp
fcompl
mov
sbb
arpl
out
jge
add
in
cmp
ror
lods
xchg
mov
xor
inc
dec
mov
shll
pop
xor
shlb
leave
jmp
add
iret
loop
add
push
adc
push
ret
and
and
ret
and
mov
jb
popf
cmp
imul
mov
xor
repnz
push
pushf
cld
fs
mov
cmpsl
out
add
adc
and
cmp
push
jnp
lret
popa
add
cld
int
adc
gs
inc
add
cwtl
negb
push
push
xchg
repnz
cmp
mov
inc
std
aad
mov
clc
or
lods
mov
scas
sti
test
bound
stc
mov
repz
in
call
repnz
test
pop
xor
lret
lds
jg
mov
dec
xor
and
ret
pop
enter
jo
or
jae
mov
mov
flds
pop
and
push
xchg
mov
add
mov
mov
push
cld
mov
inc
push
push
xor
shrl
cmp
repnz
xchg
dec
mov
fbstp
dec
mov
dec
lock
and
lock
popf
jae
lahf
insb
xchg
cmp
js
push
jmp
pop
mov
sub
and
push
bound
push
fs
xor
add
xor
out
push
pushf
push
push
and
sub
pop
push
inc
sub
vmwrite
in
adc
addr16
jg
mov
cli
jg
xchg
fisttpll
mov
mov
push
cmp
aad
lods
loopne
jno
mov
sbb
mov
sbb
mov
pusha
dec
popf
jp
dec
add
jno
loopne
inc
inc
jmp
mov
push
push
push
push
outsl
movsb
cs
jae
pop
push
in
mov
and
add
lea
pushf
lcall
pop
jns
add
shll
in
or
ljmp
lds
ficoml
adc
subl
call
stc
add
ret
dec
mov
push
pop
cmpsl
mov
das
inc
push
cmp
out
repnz
repnz
addr16
mov
push
sub
in
lods
and
popf
xchg
jecxz
jge
push
dec
scas
lret
mov
jmp
jecxz
push
xor
xchg
jg
inc
pop
xor
xchg
ret
dec
pop
in
mov
fstpl
jmp
inc
jg
stos
int
outsl
sub
or
mov
adc
jp
jg
dec
mov
cmp
add
pop
sbb
sub
cltd
popa
cwtl
int
xor
lahf
in
test
adc
inc
mov
clc
adc
in
xorb
jnp
nop
and
jnp
imul
push
inc
xlat
ret
jle
ret
xlat
inc
dec
mov
mov
xchg
movsl
mulb
mulb
adc
cmp
xor
repz
addb
mov
pop
sub
dec
cmpsl
mov
push
adc
aad
js
push
ficompl
sub
or
test
dec
sahf
cs
lods
jmp
adc
inc
push
xchg
int3
adc
jb
jnp
clc
push
in
test
jns
pushf
push
scas
dec
pop
sub
enter
pop
adc
lret
jecxz
ret
imul
enter
lcall
add
adc
adc
negl
mov
mov
loop
mov
dec
mov
or
rcll
movsb
lock
mov
dec
adc
js
insl
sub
mov
sub
daa
push
pop
sub
inc
jle
xor
into
xchg
jnp
bound
mov
xchg
fstl
mov
xor
jg
push
cmpsl
bound
out
fnstenv
std
push
xchg
jbe
aad
sbb
jno
jae
and
ret
dec
lods
pop
out
adc
inc
cli
xchg
mov
stos
cltd
adc
and
add
or
dec
rcll
rolb
test
inc
pop
movsl
mov
inc
xchg
and
mov
pushf
fwait
jnp
imul
xchg
or
outsl
cmpl
enter
jecxz
test
pop
push
pop
fldt
or
repz
dec
loopne
push
xor
test
mov
mov
mov
sub
lcall
jbe
sub
sbb
jbe
adc
mov
cld
sbb
sti
cs
xchg
outsb
cmc
rcrb
call
cmp
das
je
sarb
adc
ljmp
loope
sbb
test
fcomip
icebp
frstor
outsb
sahf
mov
lods
and
adc
cmp
pop
fwait
and
test
add
sarl
das
push
sub
idivb
and
dec
mov
movsb
jecxz
push
mov
adc
aad
add
dec
push
xchg
js
ss
dec
dec
push
and
xchg
addr16
call
dec
imul
dec
cmp
jns
aas
xor
inc
inc
add
adc
int3
inc
loop
jl
mov
inc
fidivrl
mov
dec
aas
std
dec
pop
bswap
sub
mov
cmp
mov
into
decl
inc
mov
inc
call
cmp
push
stos
adc
inc
fimuls
lods
leave
pop
mov
lods
jecxz
fidivl
pusha
jecxz
add
pop
adc
sbb
sbb
adc
and
test
add
jo
jmp
pop
cli
je
ja
or
bound
pop
adc
aad
push
out
ret
xor
addr16
jge
iret
ds
std
pushf
jbe
jno
mov
push
pop
outsl
test
scas
pop
or
push
out
or
aam
xor
test
hlt
rcrl
ja
dec
xchg
jmp
jg
enter
nop
mov
scas
movsb
or
data16
mov
dec
lock
imul
mov
fsubl
cli
push
das
mov
mov
mov
push
aas
call
sub
repz
arpl
leave
xor
adc
mov
pop
cmp
xchg
mov
pop
inc
subb
cmpsl
jp
addl
test
jo
fnsave
aam
cmpsb
push
dec
fldenv
mov
pop
mov
sbb
sbb
pop
in
push
iret
popa
mov
adc
mov
mov
sbb
jno
mov
inc
xchg
inc
xor
mov
mov
emms
loop
mov
enter
push
lea
adc
pop
dec
inc
sahf
xchg
jae
es
out
push
pop
xchg
dec
adc
mov
imul
cltd
sub
lods
cmp
scas
or
fldl
mov
pop
je
push
mov
mov
and
adc
xor
call
out
mov
sub
xor
sub
movsl
cwtl
insl
cmp
xor
xor
shlb
outsb
stos
jmp
outsl
cmpsl
fnstsw
jge
xchg
repnz
mov
repnz
cwtl
mov
lahf
mov
in
mov
mov
or
mov
ss
xchg
aaa
sub
je
cmp
xchg
loopne
mov
mov
sub
sub
repnz
cmpsl
ljmp
adc
data16
lock
fidivs
arpl
push
and
aam
test
les
xchg
or
jecxz
mov
loop
or
jne
aam
pushf
mov
dec
pusha
sbb
and
jmp
mov
pop
dec
out
cmc
xchg
add
in
sbb
ficoms
pop
and
cmp
ljmp
cwtl
leave
inc
dec
xchg
cmp
leave
pop
popa
in
pop
nop
mov
pushf
fcomp
and
cld
push
movsb
xor
es
insb
dec
sarb
adc
bound
inc
mov
mov
das
or
sub
fwait
rcr
and
mull
imul
dec
hlt
or
orb
movsl
sbb
decl
mov
push
mov
add
mov
cmpsb
popa
icebp
sbbl
inc
mov
rorb
ret
sbb
cmp
pop
cmpsb
in
pop
dec
dec
nop
cs
in
out
inc
mov
int
mov
bound
push
push
outsl
xor
lcall
push
push
bound
push
dec
xchg
pop
pop
xorb
inc
loope
popf
inc
es
adc
outsl
icebp
je
stc
lcall
or
ret
scas
popa
mov
mov
or
dec
inc
cwtl
je
test
rorl
xchg
lods
arpl
cli
out
daa
stos
push
mov
mov
int
outsl
aam
mov
mov
push
in
test
adc
adc
fstp
inc
xchg
push
int3
xor
aas
push
decb
adc
test
jecxz
lock
mov
test
lods
push
xchg
fcompl
test
or
mov
jmp
push
imul
in
and
cli
ds
fwait
xchg
push
shll
loopne
daa
xchg
aas
cmp
lds
in
icebp
pop
jbe
repnz
sti
aaa
jae
adc
in
out
adc
and
es
int3
dec
scas
inc
adc
stos
loope
or
xor
adc
cmp
movb
push
inc
cmp
mov
outsl
add
ret
dec
adc
jl
jecxz
dec
out
aam
idiv
test
es
fidivrl
cmpsb
xchg
mov
popa
into
inc
sub
mov
jl
outsb
repz
das
movsl
inc
sahf
mov
mov
inc
movlps
scas
mov
and
repz
outsb
out
dec
inc
cmp
mov
sbb
mov
fsubl
cmc
into
cli
sbb
jecxz
popa
dec
xchg
aad
rorl
js
add
or
sub
pop
fwait
xchg
xor
jmp
test
sub
add
out
aam
or
adc
push
push
gs
or
add
mov
scas
sub
inc
fdivrl
sahf
sub
adc
pop
imul
cld
xchg
cmpsl
xchg
sub
lret
push
lcall
cmp
repz
cs
jbe
sbb
imul
xchg
mov
nop
sub
int3
sbb
sbb
repz
popa
mov
sub
sbb
xor
pop
or
mov
or
negl
out
or
sub
iret
aas
jge
jo
mov
adc
int
push
xor
mov
mov
mov
aam
push
xor
xchg
in
push
add
jb
fs
mov
mov
add
xor
adc
incb
loop
mov
adc
fstpl
jno
test
cmp
andl
jbe
in
jmp
jmp
sub
xchg
and
jmp
test
pop
and
jmp
adc
cli
test
push
arpl
shrl
mov
outsl
je
dec
imul
fimuls
stc
sbb
stos
jae
lret
pop
stos
aad
lahf
imul
aaa
repz
fdivs
std
push
xor
cmpsl
repz
pop
xor
outsb
inc
cmp
sbb
sub
dec
jnp
mov
push
push
or
out
ja
mov
push
out
jbe
mov
movsl
mov
lock
sub
pop
arpl
aas
aaa
sarl
mov
jae
cmp
ljmp
push
or
out
mov
movsl
gs
jmp
ss
iret
pop
lds
sub
xor
mov
adcb
mov
testb
fisubrl
dec
xchg
in
iret
push
mov
hlt
or
sub
fs
xor
mov
lret
dec
mov
in
cmpb
jbe
ss
adc
adc
aam
fistpl
into
push
out
outsl
pop
add
cmp
rolb
fs
jb
sub
xchg
fs
jp
scas
pop
in
outsb
addr16
mov
cmc
mov
movsl
xor
add
jbe
add
cmp
outsb
sbb
push
in
pop
inc
mov
sub
inc
mov
rorl
sub
pop
mov
dec
leave
arpl
fstpl
sarl
clc
data16
adc
out
adc
adc
movq
icebp
call
push
out
mov
inc
insb
es
mov
int
dec
outsl
push
adc
jne
mov
pop
jl
dec
mov
mov
add
cmp
push
sti
adc
sub
jl
jo
aad
and
push
out
xor
sbb
push
fs
shlb
xor
les
push
mov
push
jg
jl
jno
in
in
push
push
mov
mov
ret
cld
stos
xchg
xor
push
out
jne
call
cmp
addr16
xor
jbe
add
daa
fdivr
into
mov
out
or
fisttpl
movsb
mov
jmp
addb
pop
xor
and
add
sub
test
outsl
dec
cmp
fildl
inc
lcall
cmc
xchg
and
push
sahf
ljmp
test
xchg
js
push
add
lcall
and
inc
aam
mov
out
mov
in
outsl
adc
jecxz
stc
ljmp
dec
inc
xchg
jge
push
xchg
daa
out
or
or
lahf
imul
andl
dec
dec
sbb
xchg
dec
dec
pushf
out
or
imul
movsb
sub
or
dec
lcall
xchg
pop
xchg
and
ss
clc
push
mov
fucomi
test
pop
sbb
repz
cld
pop
xchg
int
nop
mov
xchg
dec
jns
pop
adc
in
jl
daa
mov
ret
test
outsl
shr
aad
cmp
negb
hlt
daa
dec
cs
mov
gs
inc
sub
sbb
pop
xchg
push
loopne
dec
cmp
pop
jle
adc
mul
in
inc
mov
jl
int
jge
push
mov
cmp
cmp
push
and
push
jp
fcompl
jnp
sahf
enter
hlt
and
es
mov
loopne
jbe
outsb
inc
jbe
mov
fisubrl
dec
mov
les
out
mov
jbe
sbb
mov
mov
adc
inc
mov
cmp
cmp
pop
push
js
or
sub
aaa
shll
fstpt
jne
fildll
les
cld
push
jl
adcl
loop
call
aam
das
pop
mov
push
pop
inc
loope
std
mov
pop
xchg
cli
inc
pop
mov
mov
or
les
and
and
cmp
sub
ljmp
std
jle
sub
int
cmp
and
pop
ret
dec
call
lcall
mov
mov
insl
imull
ret
popf
adc
cwtl
sbb
ljmp
push
jg
cmpsl
outsl
movl
int3
js
mov
adc
or
mov
pusha
fs
push
jns
scas
mov
fdivrs
aas
insb
cmp
mov
ficoms
and
aad
lock
cmp
insb
aam
inc
jp
mov
out
jb
outsb
divb
addb
xchg
std
dec
mov
cmpsb
sbb
jle
add
mov
mov
jle
jg
psubq
das
or
mov
sbb
mov
xchg
pop
push
out
insl
mulb
out
nop
sahf
xor
adc
test
xor
outsb
add
hlt
orl
icebp
shlb
ds
int3
test
test
mov
inc
mov
sub
ret
clc
cwtl
ficompl
push
in
fisttpl
jo
into
mov
out
into
popf
subb
jg
cmpsb
ret
or
mov
fcomps
insb
ret
iret
rorb
ja
arpl
aad
jecxz
xchg
or
insl
mov
lods
iret
jae
hlt
test
fidivl
aaa
mov
into
cld
dec
mov
pushf
popf
cmc
xchg
mov
nop
int
dec
cli
mov
imul
nop
mov
sbb
arpl
por
cmp
mov
mov
xchg
loope
push
je
les
leave
adc
cmpsb
rorl
gs
dec
dec
inc
xchg
insl
add
stc
push
cltd
test
nop
test
scas
ljmp
jb
shr
pop
sub
pop
and
jno
jns
jecxz
call
call
mov
xor
out
xor
mov
je
dec
call
dec
popa
lds
scas
out
adc
push
inc
fdivrl
decb
lahf
push
fwait
dec
fbstp
imul
jno
cmp
pop
ret
inc
lret
cld
pop
lock
movsl
mov
movsb
adc
pop
in
mov
out
clc
loope
push
xchg
popf
das
out
mov
mov
mov
inc
mov
adcb
fidivs
iret
pop
mov
xchg
and
sub
outsl
call
cmp
inc
lcall
mov
mov
mov
mov
mov
test
pop
mov
pop
int
jae
lock
fwait
out
and
xchg
push
out
push
rorb
dec
pop
test
mov
inc
fucomi
lods
push
fsubrl
push
adc
add
hlt
fmulp
iret
lahf
inc
jb
mov
sbb
xchg
aam
jbe
add
mov
fistl
cmp
jb
jo
les
insb
lret
sarl
sbb
cld
mov
loop
cmp
out
adc
and
ds
fnstcw
dec
mov
push
or
int
xor
loope
dec
imul
xor
push
inc
in
iret
iret
xchg
push
ja
push
pop
push
mov
dec
xor
scas
xchg
std
jnp
shll
sub
sbb
dec
inc
cmpl
mov
js
rorl
stos
pop
mov
push
ret
shll
dec
stos
repnz
lods
cmc
adc
andl
iret
mov
sbb
cmp
jp
cltd
dec
jo
scas
pop
push
mov
adc
lahf
add
clc
pop
pop
adc
mov
and
pop
adc
push
fld
inc
sar
mov
cmp
idivl
fisubl
rep
shll
ret
or
lods
stos
sub
stc
inc
inc
jb
mov
popf
les
call
inc
cmp
mov
sub
jae
pop
inc
push
lods
bnd
ret
imul
ret
je
jb
mov
mov
jl
sub
jg
int3
cmc
mov
test
adc
push
in
out
sub
lds
mov
adc
inc
mov
mov
push
xlat
sub
sbb
xchg
adc
stos
insb
in
push
mov
mov
stos
add
out
rorl
mov
stc
call
jge
in
incl
stos
xor
adc
aam
cmp
jne
cmpsb
push
fsubl
sbb
mov
je
clc
orb
adc
inc
loop
adc
jno
andb
je
push
sbb
dec
into
sbb
or
cmpsb
aas
and
into
mov
adcb
rclb
aam
fbld
stos
jle
cmpsl
jl
clc
lods
stos
jo
bound
jbe
popf
mov
mov
lock
movsl
cmpsl
inc
and
in
loop
dec
mov
leave
std
lcall
in
aas
rcrb
into
or
enter
jns,pt
pop
daa
inc
out
dec
cwtl
cmp
and
stos
lret
add
dec
pop
and
pop
inc
pop
call
jge
outsl
mov
inc
es
push
int
dec
mov
add
lods
test
arpl
pop
xlat
jae
imul
into
mov
sub
add
dec
xchg
jns
bound
and
imull
mov
lea
iret
in
stc
add
xchg
xchg
xchg
jmp
clc
in
aam
xchg
mov
push
push
push
push
mov
xchg
stos
aas
int3
dec
pop
or
sub
imulb
ss
xchg
dec
inc
mov
out
mov
scas
adc
inc
add
inc
add
mov
jge
aad
movsl
cmpsb
jbe
jge
arpl
cmpl
mov
push
dec
jae
push
outsb
push
cwtl
imul
jp
inc
xor
xchg
test
sub
addr16
mov
push
mov
cmpl
add
int
pop
mov
lea
std
sub
xchg
xor
or
dec
lahf
jo
insl
popa
xchg
jae
into
les
push
xor
dec
mov
jmp
adc
push
cmp
inc
iret
sub
rolb
push
dec
push
pop
popf
mov
push
lock
add
insb
mov
push
add
lods
and
icebp
jo
adc
outsb
sub
xlat
stos
jb
std
inc
add
jb
ficoms
ljmp
pop
jo
sub
fldcw
mov
cmp
pusha
sub
mov
mov
into
repz
mov
lahf
push
in
pushf
shll
xor
jo
fldcw
mov
jge
push
inc
fistl
lds
movsl
jbe
fistps
push
ds
pop
xor
xchg
call
lods
mov
or
imul
loope
jb
add
fs
push
pop
mov
mov
sub
xlat
mov
dec
xchg
in
mov
jbe
jmp
cmp
xor
in
into
push
arpl
leave
aaa
popf
lds
sub
cs
mov
and
sbb
inc
test
add
pop
jecxz
and
dec
add
fucomip
add
mov
mov
inc
mov
mov
jge
js
mov
mov
mov
icebp
sub
push
sbb
cmp
outsl
sub
mov
jae
cmp
jb
movsl
les
xchg
mov
jnp
push
ficomps
insl
sub
std
movsl
jae
inc
cld
loop
mov
mov
pop
addr16
pop
es
stos
shlb
jae
test
pop
mov
mov
pop
cmp
sarb
jmp
mov
daa
hlt
adc
inc
mov
setl
incl
and
inc
add
repz
mov
nop
shlb
push
inc
enter
and
mov
imul
jl
dec
pop
in
jae
mov
add
sub
pop
call
hlt
xor
das
cmpsl
pusha
mov
xor
and
xchg
or
lock
cwtl
jl
dec
rcrl
xchg
aas
in
test
push
xchg
push
add
rclb
enter
pop
scas
loope
mov
mov
test
lods
cli
inc
pusha
subl
sbbl
inc
movsb
and
mov
mov
daa
in
xor
jge
cmc
pop
lahf
sub
or
in
hlt
and
popa
mov
rcr
jnp
jp
push
shrl
popf
mov
aad
rcll
inc
xchg
cmp
mov
movsb
das
xchg
addr16
mov
out
jns
call
xlat
jge
jno
aam
loop
inc
push
call
ret
mov
pop
outsl
sbb
push
sub
add
adc
repnz
pop
test
adcl
fwait
out
xor
enter
lahf
add
divl
fwait
xor
and
jg
clc
pop
addb
cmp
sub
ljmp
add
clc
or
imul
mov
repz
nop
jmp
out
sar
push
mov
cltd
enter
xchg
mov
in
fcoms
popf
popf
push
mov
pop
mov
xchg
stos
mov
fbld
pop
add
adc
stc
xchg
xor
push
test
sub
adc
icebp
outsl
xchg
leave
mov
cmp
add
aam
cwtl
push
or
sub
dec
imul
mov
jno
sub
cwtl
add
add
cmpsb
xlat
repz
call
xlat
test
js
adc
inc
test
test
cmp
mov
and
fnstcw
loop
pop
jecxz
lahf
sbb
mov
data16
jge
cmpsl
jb
add
add
adc
pop
sahf
hlt
mov
inc
jbe,pt
inc
push
pop
das
mov
fdivp
insl
jae
push
dec
mov
subl
mov
mov
out
cs
rcl
test
pop
xor
xchg
loope
xor
dec
inc
pusha
xchg
xorl
inc
dec
inc
and
adc
fcmovb
sbb
insl
dec
movsl
lret
enter
nop
loop
ret
xor
ljmp
or
inc
lea
sarl
ret
scas
or
dec
mov
setnp
jmp
pop
mov
ljmp
cld
cmpsb
sub
clc
in
arpl
lret
xor
incb
fcmove
aaa
cltd
in
out
push
in
test
push
push
pop
xor
sbb
mov
mov
stos
sbb
pop
adc
push
ljmp
xor
xor
pushf
and
push
cmp
and
jmp
insb
xor
adcb
mul
fwait
mov
xchg
dec
add
insb
shrl
add
aaa
mov
addr16
mov
insl
outsb
adc
mov
sti
fwait
sbbl
push
fmulp
cmp
and
adc
js
push
mov
das
in
fwait
sar
loope
or
or
or
ja
test
aaa
dec
cli
push
sbb
lahf
fwait
xchg
and
cmp
call
xor
out
in
movsl
ja
xor
fdivl
out
outsb
mov
scas
sahf
popf
fldenv
mov
shld
adc
mov
orl
mov
shll
pop
dec
js
fs
daa
lods
lods
imul
or
out
loope
push
xor
inc
pusha
pop
ljmp
mov
pop
sahf
fwait
imul
std
fsts
pop
addl
and
and
dec
test
rcll
lock
mov
or
xchg
int
repnz
sub
ret
bound
sahf
dec
fdivs
jb
mov
lcall
xchg
ret
decb
repz
inc
push
push
int3
jge
xchg
mov
cmc
cmc
sub
sub
push
std
cmp
mov
cmp
dec
adc
mov
lret
gs
mov
pop
lock
xchg
ljmp
cltd
cmpl
mov
loope
mov
adc
in
adc
dec
and
fildl
je
fisttps
movb
and
pop
dec
stc
in
out
aas
lea
int
pop
inc
pop
pop
and
and
adc
cmp
scas
jg
ret
adc
xchg
or
mov
lret
outsb
jg
xchg
dec
jle
in
pop
adc
adc
stos
xor
mov
or
pop
out
mov
xchg
cmpsb
insb
mov
dec
mov
xchg
and
jno
adc
in
lds
pop
add
int
inc
aaa
inc
jle
adc
pop
jg
sub
dec
xchg
jp
mov
jecxz
cmp
std
or
dec
dec
dec
mov
mov
lea
xchg
lcall
ljmp
or
xchg
jne
bound
dec
xchg
dec
in
cmpsb
and
jb
or
adc
movb
aas
lods
movsl
add
mov
fwait
jns
xchg
lar
jecxz
daa
cmp
pop
adc
push
jb
popa
test
fucomp
insb
mov
xchg
adcb
jne
divl
dec
xchg
outsl
lock
mov
mov
loope
cmc
and
push
and
into
cmp
add
push
mov
outsb
inc
lret
xor
in
sarb
cmp
mov
jb
rolb
pop
rcll
sub
orl
insl
jo
mov
aaa
inc
jmp
cmp
inc
vmwrite
ret
mov
jmp
push
pop
mov
pop
push
test
cmp
cmp
mov
dec
enter
xchg
ret
scas
mov
idivl
xor
iret
rcrb
aas
imul
in
pop
xchg
cmp
xor
imul
inc
stos
cmp
leave
mov
into
es
daa
and
adc
movb
popa
dec
cmp
mov
mov
mov
pushf
pop
enter
push
rcll
leave
sub
add
and
sub
out
jmp
int
pop
push
hlt
jecxz
push
xchg
mov
dec
in
adc
adc
out
adc
mov
dec
mov
mov
mov
movsl
je
push
enter
sub
push
arpl
sub
stc
inc
clc
mov
jae
outsb
mov
xor
lret
data16
mov
imul
scas
lea
int3
xchg
repnz
cs
adc
scas
dec
std
jne
mov
jbe
shlb
add
in
jle
data16
shrb
fcompl
add
mov
mov
movsl
lcall
and
jbe
cmp
adc
jg
mov
icebp
cmp
andl
shll
jge
adc
int3
out
outsl
dec
insb
popa
and
xchg
into
pop
add
xchg
daa
fimull
outsb
xor
jbe
mov
jne
arpl
lahf
leave
out
pop
bound
jbe
sti
int
lock
xorl
dec
jae
sbb
or
mov
jg
sbb
mov
push
add
inc
add
pop
dec
and
xor
out
clc
fbstp
xor
push
ja
clc
sub
movsl
fstpl
lods
rolb
lds
mov
dec
mov
xchg
pop
insb
test
leave
dec
mov
test
mov
pop
cmp
inc
call
shlb
inc
lds
xchg
sbb
bnd
jp
shlb
int
pop
imul
cmp
ficoms
int3
clc
add
loopne
jb
or
je
scas
sarl
cmp
sub
pushf
pop
stos
inc
pop
and
insl
shll
pusha
pushf
mov
ret
mov
inc
push
sbbb
lcall
call
scas
xchg
cmc
iret
sahf
lods
adc
and
xchg
push
cmc
inc
pop
ds
pop
adc
sub
cmp
mov
mov
mov
enter
pop
in
mov
loopne
lcall
mov
xchg
out
repnz
sub
sub
orb
sbb
inc
mov
popa
cmpsb
mov
jecxz
test
lock
mov
mov
mov
push
fisttpl
icebp
or
outsl
les
push
jb
cli
adc
test
lods
addr16
jle
sbb
minps
mov
outsl
inc
in
movsl
push
jnp
jns
dec
adc
adc
lret
into
fcompl
into
in
mov
sbb
xor
inc
cmp
hlt
aaa
jo
aas
xchg
lds
push
push
imul
lret
xchg
cmc
mov
imul
in
or
lock
shll
jo
mov
xor
mov
ret
mov
lods
cmc
jo
add
jl
decl
in
shl
and
mov
dec
dec
in
xor
jns
popf
daa
sub
mov
add
sbb
cmp
sahf
ret
fdivrl
dec
std
add
pusha
addr16
aad
andnps
dec
mov
xor
sbb
add
les
fidivrl
pop
cmp
ja
add
lea
aas
mov
test
mov
pop
sbb
pusha
sub
jmp
push
pop
add
sbb
ret
and
lcall
fstps
inc
sbb
mov
sub
pop
mov
push
test
in
push
mov
pop
xor
ret
sbb
dec
outsb
movsb
test
lock
in
imul
push
sbb
adc
fcoml
mov
push
add
fnsave
sbb
pop
xor
mov
jno
jp
mov
pop
dec
outsl
arpl
sub
int
leave
test
or
mov
nop
bound
mov
mov
jo
adc
cmp
into
mov
pop
sbb
lock
push
and
sbb
in
mov
and
loope
push
popf
and
jp
fildll
test
jg
mov
xor
loopne
mov
adc
xchg
in
xor
or
in
mov
pop
scas
movsl
sub
mov
jg
adc
repnz
out
pop
pusha
lahf
mov
jnp
mov
stos
insl
pop
sbb
pop
push
insb
jp
lret
nop
popa
push
xchg
jae
mov
mov
or
imul
and
mov
dec
repnz
shll
and
imul
cmpsb
xchg
xchg
lods
aas
test
hlt
add
iret
mov
dec
lds
iret
push
jns
push
js
mov
xchg
call
and
arpl
call
pop
fidivl
inc
sbb
fistpll
mov
or
push
xlat
mov
imul
fs
add
add
stos
mov
lods
adc
adc
push
cwtl
lcall
arpl
gs
sbb
mov
inc
ja
mov
cmp
andb
cmc
adc
adcl
outsl
adcl
xlat
jmp
or
ja
es
jae
js
push
out
jnp
jecxz
and
push
popa
jnp
arpl
pusha
pop
fisttpll
or
sub
or
cltd
je
pop
int3
adc
pop
xor
or
das
loop
rorb
mov
call
jecxz
mov
int3
testb
inc
aam
dec
cmpl
popl
enter
mov
sub
js
test
lods
ret
mov
or
fscale
cmp
adc
lock
fsts
in
jl
inc
mov
sub
cmpsb
xchg
scas
cmp
loop
cmp
mov
cli
mov
sub
repnz
lahf
dec
xchg
mov
mov
lds
adcb
jg
cmp
int
aaa
or
pop
inc
xchg
cmp
push
pushf
in
mov
call
mov
shrl
cmpsb
cmpsb
repnz
jle
sbb
pop
or
push
mov
pop
xchg
or
sbb
ret
in
sti
dec
mov
mov
push
mov
insb
push
test
test
enter
cli
imull
incb
or
fadds
scas
fwait
and
bswap
in
bound
sub
adc
cmp
fstpt
push
test
ret
sbb
dec
mov
sub
cmp
sahf
adc
js
xor
icebp
xchg
stc
xchg
xchg
in
js
or
aaa
xor
iret
testb
cmp
out
push
rorl
xchg
stos
daa
or
or
cmp
xor
cmp
and
lods
pop
enter
inc
adc
sbb
cmp
test
push
mov
lods
subb
jmp
add
mov
in
frstor
xchg
addr16
xchg
and
xor
adc
sub
in
xchg
dec
pop
or
add
xchg
jno
fcomp
icebp
cmp
push
pop
mov
mov
cmp
js
cmp
adc
frstor
dec
xchg
test
add
in
ja
dec
pusha
inc
fwait
lret
aaa
insl
xchg
js
imul
mov
mov
xchg
add
pop
jnp
sbb
lock
sub
xor
or
xchg
push
sub
idivb
sahf
adc
stc
xor
mov
pop
ljmp
inc
jecxz
fbld
sbb
pop
xor
dec
add
pop
aam
xlat
push
pushf
popf
cmc
std
test
adc
leave
add
inc
lods
jmp
aaa
or
add
out
fistpl
out
into
arpl
sarl
push
push
ja
test
cmpsl
add
stos
mov
cli
mov
dec
nop
das
cmp
inc
les
dec
mov
mov
xor
jl,pt
lahf
gs
cmp
mulb
inc
xor
sub
add
jmp
push
xchg
rorb
in
aam
and
jmp
into
mov
mov
insb
ret
xor
stos
mov
jno
mov
jb
adc
scas
lea
adc
aad
fwait
adcl
rcrl
sbb
inc
mov
pushf
stc
jnp
int3
mov
lahf
pusha
jne
ficoms
push
fcomip
mov
dec
icebp
push
adc
decb
mov
popf
sbb
or
fcomps
test
push
pop
dec
leave
mov
sub
mov
mov
cltd
sub
cmp
in
and
cltd
mov
cmpsl
xor
mov
out
negl
fnstsw
cmpsl
test
push
ret
sbb
cmpsl
jne
inc
sub
sbb
outsl
cwtl
cmp
cmpsl
out
cmpsl
mov
lods
lahf
enter
lods
icebp
icebp
aad
jnp
push
ds
push
pop
xchg
mov
push
pop
out
sbb
pop
mov
inc
xor
out
push
outsl
test
sti
outsb
mov
dec
std
sbb
loopne
test
aaa
cltd
push
lret
xor
aad
jle
fcomp
xor
addl
jo
mov
shrb
pop
fisubrs
int3
in
or
and
push
lock
and
jb
lock
jge
dec
or
push
mov
cmp
inc
or
or
cltd
mov
cmp
pusha
fs
cmpb
fs
push
out
cmp
inc
jg
imul
fwait
xchg
mov
fiaddl
xchg
xor
cli
lock
fimuls
mov
movl
mov
or
or
mov
xlat
jmp
rcl
daa
mull
aaa
mov
pop
jg
adc
stos
repz
mov
sub
sbb
movsl
mov
jae
dec
roll
mov
orb
daa
cmp
faddp
adc
data16
dec
jle
imul
mov
mov
out
shr
push
ret
push
add
inc
push
scas
popa
jno
insb
push
lcall
subw
aam
insl
pop
pop
outsl
aaa
add
pop
mov
lahf
jmp
arpl
add
cwtl
xchg
fsubrl
pusha
sub
push
xlat
shl
scas
mov
push
lret
xlat
and
into
xchg
mov
dec
stos
mov
out
mov
mov
stc
mov
mov
cs
fisubl
out
mov
in
and
loop
rorl
call
pop
imull
orl
insl
sub
pop
insb
jmp
pop
cmp
xchg
and
mov
loop
rclb
and
push
mov
aad
mov
das
call
or
cmp
sub
pop
lock
push
dec
sbb
sbb
add
hlt
sub
jl
mov
sti
jb
faddl
aam
push
aad
sub
ds
pop
push
aas
pop
popf
jae
or
mov
pop
shrl
fisubrs
sub
cwtl
fistpl
jle
adc
nop
cmc
xor
push
pop
inc
adc
push
dec
mov
adc
insb
jo
add
add
hlt
movsl
es
jo
fmulp
out
aad
test
repnz
jp
stc
adc
sbb
ja
push
inc
cld
pop
and
fisttpl
pop
repnz
sub
into
movsl
or
mov
loop
movsl
pop
cmp
sub
sub
mov
lods
xor
pop
outsl
add
mov
push
cmp
jnp
scas
mov
push
xchg
dec
sbb
out
mov
icebp
and
sbb
inc
and
insb
push
ljmp
aad
push
das
pop
jg
leave
adc
fcomps
sbb
int
ficoms
xchg
in
xchg
movsb
fisubrs
mov
outsb
or
push
dec
ret
jge
pop
loopne
pop
xchg
jecxz
dec
out
adc
mov
out
and
pop
ja
popa
mov
cmpsl
cld
sbb
adc
or
and
mov
sub
add
pushf
mov
ret
adc
mov
mov
xor
fisttpll
cmp
leave
cmpsl
jge
xor
imul
lret
daa
scas
pop
imul
pop
dec
mov
dec
sub
das
jle
jmp
push
cmpsb
mov
pop
test
aaa
sahf
sbb
lods
sub
cmpsw
pop
jbe
clc
stc
call
xor
imul
mov
dec
jmp
insl
pop
scas
adc
xchg
push
sahf
mov
xor
pop
pop
jo
add
sub
cmpl
int3
out
daa
clc
shlb
mov
das
sub
xchg
fsubl
mov
cmp
fisubs
ret
mov
in
xchg
inc
out
in
ret
aaa
std
push
or
lret
or
rcrl
mov
xlat
lods
lcall
add
fstpl
orl
outsb
popa
test
adc
inc
inc
sbb
outsl
lods
sub
dec
cmp
rcrb
out
sub
enter
hlt
ss
adc
shll
int3
popf
sbbl
data16
sub
test
das
inc
icebp
mov
sbbb
xor
movsl
adc
jbe
mov
cmp
mov
movsb
sbb
int3
int
mov
dec
aas
in
in
out
leave
cmpsl
leave
inc
rolb
loop
and
roll
jbe
jb
ljmp
test
pop
ja
jb
rcrl
jmp
push
rol
adcl
lcall
loope
test
xchg
pop
jbe
movsb
cmp
cmc
in
insl
loopne
push
sbb
aad
pop
add
mov
lods
cmp
dec
in
and
fmul
push
or
std
mov
dec
shl
push
cwtl
push
jle
jecxz
cmp
fs
cmp
iret
dec
icebp
adc
cs
mov
jecxz
enter
pop
notl
outsl
cwtl
pop
repz
insb
xor
cld
pop
imul
inc
and
adc
sarl
adc
in
rorb
lds
fidivs
and
xor
inc
mov
popl
stc
jnp
test
fcomps
mov
cmp
dec
mov
pop
mov
dec
aad
xlat
jbe
orb
xchg
stos
inc
inc
bound
xchg
push
add
int3
inc
mov
rcrl
xchg
nop
cmpl
inc
sbb
push
adc
add
add
mul
adc
xor
movsb
dec
data16
rolb
leave
pusha
inc
pop
cmpl
aam
negl
arpl
repz
jmp
push
imul
xor
push
push
and
or
fists
cs
cmpsl
iret
xchg
or
jge
sbb
push
or
add
lahf
pop
cmc
cmpsl
lret
jmp
jge
adc
aaa
add
mov
fildll
jne
push
scas
pushf
or
ljmp
int
mov
mov
inc
xchg
push
dec
push
inc
and
sbb
jns
xchg
cmpsb
cld
sbb
js
jo
mov
je
loop
xchg
jo
lds
push
int
xchg
xchg
pop
fwait
inc
dec
pop
aad
mov
jmp
pop
cmpl
xchg
jae
sub
xchg
jnp
lods
or
jno
push
subps
or
push
or
jmp
push
jmp
pop
leave
es
inc
hlt
mov
adc
mov
into
inc
push
cmpsb
xchg
lret
push
mov
dec
xor
dec
push
aas
sub
cmp
cmp
test
iret
fistps
pop
cs
push
xor
and
pop
in
data16
xor
push
cmpsl
inc
rclb
cmpsl
dec
dec
aad
rolb
cmp
mov
or
mov
or
ficomps
pop
add
adc
iret
sbb
dec
lret
push
add
sti
je
jg
pushl
sbb
add
sub
sbb
inc
mov
mov
pop
xchg
out
fs
push
outsl
dec
jnp
lret
pop
jmp
jne
mov
aad
xchg
and
adc
mov
jp
gs
stos
mov
imul
xor
pop
pop
inc
cmp
cs
into
mov
mov
pop
lret
inc
lret
aaa
pop
inc
or
ror
mov
mov
fdivl
pop
aad
xchg
sbb
push
andb
sub
push
lods
ds
add
jnp
test
pop
sub
mov
pop
cli
ja
sub
popl
xor
inc
aam
scas
shl
adc
adc
sub
pop
gs
adc
dec
arpl
sbb
ljmp
xchg
lahf
mov
xchg
jnp
sbb
and
mov
jmp
inc
and
push
or
mov
sti
frstor
or
jae
bound
mov
push
addr16
jnp
push
sarl
lret
xchg
outsl
testb
and
mov
mov
mov
je
or
lds
outsb
lock
cs
inc
fcom
imul
inc
mov
dec
out
push
jl
aad
or
lds
xchg
xchg
mov
loopne
adc
mov
xlat
mov
mov
push
push
stc
mov
mov
sti
and
daa
push
mov
and
sete
sub
imul
sarb
mov
loop
stc
call
pop
mov
pop
and
std
out
mov
cltd
insb
scas
cmp
adcb
push
xlat
shrl
or
sbb
ds
and
jmp
mov
cmp
adc
ret
jl
jne
aaa
iret
sbb
mov
xlat
leave
sub
xor
fcoms
mov
dec
aaa
push
jp
cmp
and
in
idiv
lahf
add
xchg
push
sub
adc
jbe
sub
pop
in
xor
jno
dec
lret
mov
sub
mov
inc
movsb
add
pop
mov
div
sub
jae
or
add
jb
es
adc
push
push
js
in
ds
cli
cmp
je
jmp
sbb
xor
stos
push
or
pusha
push
aaa
add
dec
pop
in
cmp
push
pop
iret
adc
sbb
ds
push
sub
lods
pop
or
out
push
xchg
ret
add
fidivrl
push
pop
stos
cld
adc
sbb
push
adc
pop
adc
lret
xchg
mov
or
in
jle
test
popf
in
lods
popf
fmuls
mov
out
jnp
cmp
movl
sub
xor
xchg
adc
aam
pop
pop
sub
jb
aad
test
mov
pop
mov
jno
leave
sti
cs
ds
cmp
xchg
mov
stos
sub
ljmp
jbe
aas
mov
mov
or
jge
xorb
push
inc
adc
adc
inc
fcmovu
pop
add
lds
jge
cs
jb
xchg
daa
icebp
pop
pop
cld
sbb
add
mov
or
ljmp
pop
add
cli
pop
push
inc
rcrb
andl
lock
into
iret
in
loopne
mov
addr16
repnz
mov
fldl
out
mov
es
lahf
ret
mov
or
and
nop
jp
cltd
jmp
jnp
out
mov
cli
loope
imul
push
mov
xor
lea
cmp
cmpsb
push
imul
addb
scas
sub
and
aam
fldln2
or
push
nop
xor
mov
shlb
loop
call
xchg
jmp
cmp
adc
mov
pop
enter
pop
jne
inc
push
lahf
lcall
jle
push
mov
jae
push
call
adc
jae
fsubrs
inc
test
or
xor
inc
mov
push
jmp
es
outsb
push
bound
jae
hlt
xchg
dec
cld
scas
out
iret
mov
inc
jmp
cwtl
addr16
data16
cmp
fisubrl
andl
sub
frstors
icebp
in
sub
icebp
adcl
jmp
mov
mov
jnp
inc
mov
mov
add
push
push
mov
lea
lcall
push
pop
and
inc
xor
push
xor
mov
loop
inc
lea
js
jne
rclb
repz
sbb
test
mov
xchg
xor
mov
lret
jns
add
testb
mov
xchg
and
sub
mov
cmpb
pop
cmpsb
sub
xchg
mov
cmp
add
cmp
mov
adc
xchg
addr16
mov
xor
mov
enter
add
add
mov
pop
mov
cmpsl
flds
xchg
xor
enter
fstpt
out
fwait
cmp
pop
pavgb
arpl
push
sahf
fcmovne
sahf
out
and
add
roll
hlt
mov
stos
mov
lret
out
jnp
mov
adc
loope
push
mov
stos
nop
fistl
jecxz
lds
fsubl
or
inc
and
or
sub
adc
jb
popa
sbb
je
mov
cmp
imul
movsl
pop
cmp
gs
loop
xchg
sub
lcall
cmp
sbb
cltd
xchg
cmp
ds
cmp
lcall
leave
pusha
inc
push
enter
mov
adc
pop
test
aam
insl
sti
dec
cmp
add
mov
addr16
lods
incb
and
xchg
push
push
adc
mov
cld
sti
imul
push
leave
orl
mov
sbb
in
mov
shlb
and
sub
or
adc
cmpb
adc
jmp
mulb
mov
xchg
or
sub
sti
and
lods
jmp
int
cmp
scas
cwtl
leave
lahf
fcom
aas
pop
fistps
shr
stos
jle
add
inc
ss
xlat
mov
sub
sbb
or
jle,pn
scas
mov
inc
jnp
mov
je
scas
loop
mov
mov
push
loopne
and
mov
jo
sahf
outsb
push
jge
cmp
leave
out
rclb
fxch
mov
test
cmpsb
hlt
xor
mov
pop
inc
dec
lods
or
push
sub
mov
ljmp
mov
jmp
cmp
jne
or
jnp
adc
pop
xor
shll
ror
inc
pushf
dec
or
adc
popf
loopne
mov
aaa
shlb
mov
pop
shll
enter
adc
pop
fdiv
test
test
dec
aas
fisttps
test
jo
aad
mov
mov
pop
ror
mov
test
insb
lcall
lock
std
nop
icebp
dec
xchg
cmp
push
out
mov
lods
jb
xchg
mov
and
adc
pop
sti
jge
lods
insl
shlb
push
pop
es
mov
jecxz
mov
fisttpll
in
jmp
loop,pn
adc
in
xor
jle
xchg
movsb
add
add
jmp
push
inc
mov
jbe
mov
int
repz
popa
and
neg
pop
lods
shrb
xchg
test
popf
xor
mov
fcomps
imul
adc
pusha
or
fwait
mov
add
push
mov
insb
jp
xor
push
fstl
jge
pop
jl
stos
push
jecxz
movsl
and
pop
push
jmp
ss
sahf
push
push
jl
add
out
cmp
cld
xchg
or
cmpsb
jmp
les
push
push
arpl
add
mov
or
insl
adc
sti
and
imull
jb
fwait
jo
sub
mov
mov
xor
addr16
adc
or
mov
pop
dec
out
pushf
cmp
scas
and
push
lcall
adc
aam
mov
iret
fmul
mov
rep
lret
sub
sbb
xor
mov
dec
test
cltd
fcoml
jecxz
das
and
mov
data16
int3
and
xchg
or
es
pop
int3
mov
in
shlb
xchg
fidivl
shl
int
push
inc
pmaxub
rcrb
rorb
mov
xor
mov
push
inc
push
mov
xchg
dec
mov
pop
out
into
popa
insb
pop
inc
scas
outsb
pop
shll
icebp
clc
xor
jns
or
xor
imul
cmpsb
dec
cmpsb
dec
repnz
or
mov
pop
pop
scas
pop
cld
mov
subb
pop
in
outsl
out
ror
and
mov
and
xchg
fs
ds
xchg
mov
mov
or
aad
loope
pop
sub
dec
xor
in
pop
imul
pushf
ss
insl
mov
fists
pop
clc
sbb
pop
add
cmc
cwtl
imul
mov
mov
sbb
inc
or
cltd
or
mov
imulb
jo
in
repnz
divl
fisttpll
mov
and
daa
dec
imul
jne
fwait
orb
inc
inc
push
mov
shlb
out
scas
int3
into
cmp
dec
loopne
and
pop
dec
mov
in
push
cmp
adc
adc
or
dec
icebp
sti
mov
dec
dec
popl
inc
jl
mov
jle
in
sub
call
mov
out
jno
insl
cli
mov
jg
int
or
out
ljmp
sub
push
int
mov
test
loopne
test
ficoms
sub
sub
or
mov
inc
fwait
jo
pop
outsb
push
fwait
jae
jb
jge
lahf
inc
cmpb
jb
cmc
pop
sub
stc
jns
cwtl
inc
xor
scas
xor
xchg
dec
xchg
loopne
inc
pusha
push
dec
je
outsl
outsl
mov
mov
mov
xchg
out
push
lahf
cmp
scas
and
cmp
jnp
ret
cmp
pop
add
mov
cltd
push
xor
test
jp
loope
inc
mov
ja
clc
fistps
dec
add
dec
sbb
icebp
mov
cmpb
fdiv
in
jb
dec
stos
and
pushf
jge
iret
in
sub
push
pop
iret
ja
fsubl
jns
or
mul
mov
cmp
addr16
loopne
loop
sub
std
repz
and
pop
cmpsb
test
add
cmp
xchg
xchg
bound
xchg
in
cltd
push
aad
aad
sahf
xor
inc
pop
mov
arpl
rcrb
daa
nop
in
adc
and
pop
pushf
in
xchg
and
leave
popa
xor
mov
pop
pop
jo
push
test
jnp
in
adc
out
xchg
cli
pushf
adc
dec
mov
es
jmp
and
or
loope
cmc
pop
adc
push
data16
insb
ljmp
push
jo
pusha
mov
pop
push
jae
lahf
xor
ja
aad
cmc
mov
lods
sbb
fcompl
xchg
addb
adc
into
in
cmp
movsb
leave
sbb
sbb
hlt
inc
imul
sub
shll
dec
es
int
sub
mov
shlb
ror
ror
test
sub
sub
push
pop
sbb
inc
add
sarl
dec
fsubl
lods
add
fstps
js
pop
jbe
gs
xchg
sub
in
sbb
nop
out
pop
in
sbb
icebp
inc
xchg
or
popf
ret
jnp
sub
into
imul
or
add
mov
mov
sbb
sub
in
or
mov
pop
adc
cld
adc
nop
outsl
ljmp
add
and
pop
mov
jp
add
repz
sti
outsl
cmp
xchg
xchg
mov
xor
xchg
push
push
in
ja
repnz
add
rorl
mov
iret
dec
pop
push
scas
orl
fnsave
xchg
call
xor
insl
mov
imul
adc
js
int
jnp
add
jle
mov
aaa
dec
stc
data16
daa
adc
mov
push
pop
mov
ret
dec
lea
xchg
negl
in
xchg
fisubrs
fisttpl
cs
push
data16
xor
push
test
dec
lcall
or
sub
divl
lahf
xchg
push
xor
mov
les
je
inc
ret
push
push
xchg
inc
repnz
ds
xchg
jbe
adc
ds
jbe
insb
push
jo
mov
lock
dec
mov
into
and
mov
stos
mov
stos
ss
aad
mov
insl
icebp
hlt
outsb
push
fs
dec
mov
and
divb
cmp
cs
inc
lea
xchg
or
mov
nop
mov
lcall
lods
out
inc
imul
adc
sahf
movsl
inc
cld
bts
jae
cmpb
ss
pop
push
mov
sti
inc
arpl
jmp
popf
push
pop
adcb
xchg
push
xchg
nop
fnstsw
scas
pop
sub
and
in
or
or
data16
fwait
push
mov
mov
lods
and
or
fsubr
mov
add
inc
inc
sub
addr16
mov
fsubs
sub
adc
mov
mov
cmp
add
adc
jne
pop
imull
lods
jp
xor
mov
xor
in
and
lahf
sub
adc
int
ds
cld
orb
mov
push
jl
std
test
loope
in
je
outsb
icebp
hlt
jbe
mov
shlb
mov
add
cmp
cli
ljmp
les
scas
xchg
pushf
frstor
sarl
aad
push
mov
ss
ds
shlb
std
cmp
or
lods
pop
jae
push
or
into
mov
and
clc
xchg
sub
test
or
xor
pop
out
mov
add
fisttpll
sbbb
pcmpgtw
jb
ds
subl
flds
xchg
xchg
xchg
sub
add
cmpsb
hlt
add
pusha
int
filds
fwait
in
imul
add
pop
outsb
or
subl
mov
inc
sbb
rcrl
and
out
mov
push
inc
pop
push
loope
cmp
jg
xorl
cltd
xchg
push
pop
insb
inc
mov
loope
mov
push
lods
aas
lret
cmp
fcomi
push
adcb
cmpb
enter
xchg
mov
push
xchg
arpl
shlb
dec
sarl
imulb
out
adc
add
mov
mov
lock
mov
inc
add
mov
addr16
movsb
add
insb
pop
jae
cmp
xor
fisubrs
test
insb
stc
dec
movsb
movsl
pusha
xor
mov
loop
cltd
mov
data16
out
pop
sub
mov
dec
iret
push
lods
test
dec
rorl
xor
cmc
rcrl
xor
pop
mov
jge
cltd
pop
lods
sbb
and
add
add
mov
dec
jnp
xor
and
cmp
mov
inc
aad
leave
subl
nop
cltd
mov
adc
lret
mov
and
or
xchg
inc
pop
lods
push
xchg
clc
fstl
mov
pop
aad
int3
inc
inc
daa
push
sub
and
xor
sub
lock
xchg
repnz
fildl
xchg
push
inc
sbb
repz
xchg
inc
sbb
stos
xchg
sbb
cli
aas
inc
test
cmp
ret
push
rclb
sub
out
pop
out
push
pop
add
ljmp
push
fisubrl
bound
negb
jns
or
popf
push
xor
xor
mov
incl
cmp
test
inc
push
inc
movl
and
or
pop
push
xchg
repnz
in
fisubrs
xchg
shrb
and
lea
jns
aam
mov
mov
cmpl
testb
lret
push
sub
fisttpll
jmp
addl
aaa
sbb
cltd
les
in
mov
dec
sub
mov
int3
fidivs
cmovs
jns
out
jb
aam
das
repz
fs
test
aam
dec
push
add
fimull
mov
pop
aas
icebp
call
int
arpl
cmc
pop
cmp
xlat
and
pop
sbb
and
lds
mov
inc
js
jp
xor
xchg
push
sub
fbstp
jl
sub
shlb
in
and
cmpsb
mov
jle
mov
and
sub
adc
push
mov
xor
je
inc
fwait
jmp
and
dec
sahf
mov
xor
insl
je
lods
gs
jns
xor
aaa
dec
mov
sarb
mov
stos
insb
enter
out
jnp
xor
out
test
push
ds
push
lds
xorl
bt
jl
out
enter
lods
or
adc
lods
pop
lret
clc
rol
test
out
out
xchg
xchg
push
cmpsb
adc
push
mov
int
ljmp
inc
das
sbb
rcrb
rcll
adc
mov
adc
mov
cltd
fimull
fldcw
out
mov
clc
push
sbb
lret
push
ret
or
xrelease
mov
push
repnz
dec
out
stos
pop
je
insb
sbb
dec
xor
xlat
and
fdivs
je
js
pop
bound
cmpsl
mov
rorb
cs
xor
popf
mov
mov
popf
push
cld
out
imul
mov
ja
jno
pop
push
inc
mov
jnp
jo
mov
rcrl
orl
lret
loop
sbb
fisttps
xlat
mov
loop
add
cmp
inc
arpl
dec
mov
mov
adc
decl
mov
sti
and
push
insb
mov
dec
rorb
dec
mov
sbb
aaa
aas
icebp
xor
adc
cld
xor
cmp
loopne
das
adc
dec
arpl
ret
pop
cmp
or
mov
jnp
ljmp
cmpsb
aas
ror
loope
mov
das
xor
shrl
ja
or
push
ret
cmc
push
adc
gs
std
mov
outsb
in
mov
fdivr
jo
das
jg
clc
xor
adc
gs
or
arpl
test
ret
mov
lock
mov
or
pop
sbb
hlt
jmp
es
mov
stc
xor
pop
push
pop
add
scas
aas
enter
out
jmp
jmp
jo
repnz
dec
add
out
mov
int
sbb
sbb
inc
sbb
out
sub
xchg
clc
sahf
ja
push
inc
mov
stos
or
jmp
push
sub
cld
xor
rorb
cmp
adc
push
mov
jmp
adc
xchg
scas
and
or
outsb
or
repz
aas
shrb
jl
push
mov
sbb
ficoms
aam
adc
jp
int3
gs
dec
cmc
fimuls
xor
fnsave
mov
popf
push
and
mulb
xchg
cwtl
lods
mov
sub
ds
shlb
dec
scas
mov
jae
rcl
mov
nop
xchg
mov
ret
in
dec
es
xorb
ror
and
dec
fcmove
mov
inc
push
sbb
cmp
xor
in
repnz
mov
iret
jae
bound
add
rclb
push
insl
movsbl
call
adc
jge
add
push
push
ss
jno
stc
insl
ljmp
lock
add
or
jae
pop
test
stc
pop
or
mov
add
pusha
gs
stc
adc
cmc
mov
mov
mov
push
lret
aad
sbb
arpl
pop
sbb
dec
cmc
in
jb
mov
lods
repnz
jle
jge
lcall
xchg
sbb
inc
push
jl
inc
icebp
ret
xchg
lcall
mov
orb
aas
fs
pop
push
gs
inc
pusha
out
xchg
rclb
arpl
enter
cmp
add
sbb
lret
lock
test
jno
mov
xchg
adc
xor
push
in
push
adc
mov
jns
movsl
add
jle
jb
mov
cwtl
mov
and
nop
inc
div
cmpsl
xor
xchg
jae
pop
invd
sub
hlt
test
rorb
jno
dec
frstor
or
mov
std
out
arpl
dec
push
pop
popf
or
test
cs
out
inc
mov
rol
xchg
data16
push
sub
out
push
lahf
addr16
mov
sub
movsb
sar
xor
xchg
jg
clc
mov
dec
xchg
xchg
notb
pop
xchg
testl
inc
xor
ds
pop
daa
mov
pop
jnp
sub
dec
cwtl
push
xlat
push
sbb
xchg
mov
outsb
mov
out
arpl
push
add
jno
cmp
jmp
push
inc
xchg
xchg
rcrb
dec
push
mov
adc
add
enter
mov
jbe
sub
call
dec
dec
push
dec
mov
lea
cmp
outsb
ffree
add
xchg
pop
cmp
sub
mov
in
pop
jns
and
into
test
and
fisubl
iret
jo
bound
jbe
sarl
or
not
mov
popa
xchg
mov
loope
push
add
xor
outsb
jbe
shlb
ljmp
lret
into
xor
int3
enter
je
xchg
push
sub
dec
xor
pop
mov
mov
jge
or
sbb
mov
xchg
sub
js
outsb
push
pop
lods
mov
daa
cmp
pop
inc
jno
cmp
sahf
lods
mov
pusha
sbb
cld
dec
scas
scas
fldenv
loope
and
aas
fiaddl
mov
mov
outsb
mov
pop
lods
std
mov
inc
push
popf
ss
bound
jae
test
shr
pop
lret
sub
arpl
fbld
mov
dec
adc
inc
fistpll
nop
cmpsb
mov
insb
dec
lret
pop
outsb
and
mov
adc
dec
pop
push
rcll
popf
decb
test
out
dec
push
xor
mov
movsl
out
insb
notb
lret
ret
xchg
mov
inc
insl
cmc
mov
fildl
fimull
push
cmpsl
icebp
negl
and
ds
jno
dec
xchg
fs
cmp
cli
xchg
iret
cmp
test
adc
inc
shl
xchg
stc
ss
cmp
mov
outsb
dec
mov
repz
insb
daa
popa
xor
loope
daa
imul
cmpsb
cmc
jnp
roll
jnp
xor
inc
dec
inc
xchg
rcrb
shl
stc
jl
xchg
leave
and
in
sub
jle
insb
les
pop
aas
sbb
insb
pop
xchg
sub
cmp
xchg
jnp
sbb
inc
or
mov
xlat
lret
decl
popa
or
sub
loop
mov
add
adc
sub
mov
push
ret
lods
push
fisubrl
jae
mov
cmp
mov
cwtl
rolb
stos
je
sbb
pop
pop
xor
add
xchg
and
leave
lahf
aad
pop
jno
out
rcll
scas
add
ret
jl,pn
pop
cmp
mov
jbe
push
dec
sub
clc
xchg
push
shll
lds
push
cmp
xor
enter
inc
nop
mov
imul
mov
mov
ds
jge
nop
stos
mov
outsl
fdivl
clc
push
mov
ret
leave
std
cmp
out
sub
test
movl
or
inc
push
repz
clc
xchg
test
popa
jne
ljmp
mov
cltd
jge
xor
xor
enter
pop
pop
lcall
mov
mov
data16
sub
xchg
shl
insb
lods
je
and
xorl
fcomps
xchg
int
and
cmpsl
mov
cwtl
rorl
mov
loop
pop
lcall
iret
lret
lea
test
lret
mulb
sub
imul
pop
xchg
mov
mov
leave
jbe
stos
sub
cmp
outsb
outsb
ret
fsub
xchg
ret
imul
push
ss
outsb
or
mov
das
into
sbb
inc
mov
fmull
gs
test
xchg
push
cltd
mov
sahf
call
and
inc
lret
mov
dec
in
sbb
in
rcrb
les
sub
mov
insb
aam
cmp
cli
flds
sahf
dec
push
fnsave
ds
div
push
lret
fsubl
mov
in
or
add
jmp
out
outsb
and
push
and
loop
cld
adc
sbb
fnstsw
push
mov
icebp
mov
push
leave
sub
pop
inc
ja
mov
aad
jne
addr16
aas
cmp
push
stos
or
pop
dec
notl
fwait
sbb
mov
inc
mov
stc
rcr
inc
movsl
cli
xchg
out
add
repz
int
adc
or
fcmove
pusha
xor
daa
push
jo
iret
inc
testl
adc
adc
ss
cmp
mov
or
xchg
inc
icebp
and
sub
lock
add
repnz
add
decl
outsl
mov
cmpsl
inc
pop
xor
push
and
lcall
lcall
cltd
inc
or
mov
mov
ret
sti
ljmp
mov
and
movsl
adc
das
call
fstpl
pop
fsubrp
and
cli
orb
aaa
ret
mov
daa
cltd
fs
stos
adc
jb
sti
or
pop
lahf
sbb
es
add
inc
push
movsl
xor
jae
mov
mov
xor
mov
sbb
add
pop
dec
inc
dec
or
push
push
push
cmpsb
mov
xchg
shlb
cld
dec
sub
int
jno
pop
jl
fmull
cmpl
test
ret
cmc
imul
out
out
jp
out
clc
mov
iret
or
jmp
mov
loopne
andl
pusha
add
dec
stos
enter
lods
roll
xchg
jecxz
cli
fdivs
stos
xchg
mov
pushf
dec
add
cmp
lds
or
lods
push
out
adc
sub
clc
inc
ret
jge
cmp
test
sahf
jne
sti
rolb
jle
out
mov
adc
jne
js
stos
dec
repnz
add
cld
jae
xchg
adc
push
mov
js
pop
pop
xchg
jp
gs
into
repz
cmp
ss
push
sbb
pop
sti
leave
and
inc
in
popf
in
sub
mov
mov
push
xlat
mov
add
push
enter
stc
dec
sub
ljmp
mov
mov
xor
add
in
adc
cmpl
ja
mov
inc
mov
stos
pop
add
scas
pusha
fistpll
out
sbb
imul
mov
imul
push
fstpt
mov
jo
loope
std
sub
fcoml
insl
jge
or
pushf
jge
pop
push
jecxz
jne
in
sub
pop
leave
or
xor
fs
stos
lret
call
lds
out
sub
mov
pusha
inc
mov
das
call
insl
jl
jmp
xlat
js
js
lret
mov
jnp
jmp
xchg
jbe
movsb
sbb
add
insb
sub
or
and
lret
andb
push
stc
insl
mov
xchg
jge
fucomi
mov
inc
jp
xor
inc
sbb
ds
js
insl
sub
es
in
test
pop
push
jle
cmp
subb
ror
fsubl
add
mov
or
sbb
rol
scas
xchg
xchg
and
daa
mov
push
lcall
daa
fisttpl
mov
iret
test
push
rolb
jae
sbb
dec
cmp
clc
fwait
adc
leave
mov
movsb
lods
in
xchg
xor
cmp
push
sub
pop
inc
daa
sbb
stos
pop
xchg
lret
inc
mov
insl
pop
divb
mov
push
mov
xchg
aad
xchg
xchg
test
cmp
xlat
jmp
fistl
int3
loope
fwait
js
and
push
lcall
in
mov
aaa
cmp
cmpsl
sub
inc
enterw
xchg
add
fadds
sbb
jb
dec
scas
fmul
movsl
mov
nop
adc
fs
js
dec
pop
cltd
adcl
mulb
out
notb
insl
lcall
mov
cmpsl
cmp
jg
push
das
push
repnz
add
sub
es
adc
psubusb
jge
es
aaa
sti
loope
idiv
mov
inc
cmp
loope
aas
and
or
rorb
enter
push
add
bound
je
int3
nop
jp
mov
xchg
enter
mov
mov
popf
cmp
pop
in
sarl
sbb
inc
test
adc
cmc
jmp
mov
test
cmp
cmp
mov
pop
sahf
cmpsb
and
gs
popa
sbb
or
out
push
es
mov
scas
push
sub
xchg
cmpsl
loop
out
mov
sbb
mov
or
sti
nop
cld
in
add
test
and
sub
cmp
mov
enter
mov
cmp
ret
mov
xor
ds
leave
lea
or
inc
cmp
leave
daa
add
jne
cltd
je
sahf
adcb
and
dec
stos
scas
inc
fisttps
pushf
loope
xchg
int
pop
mov
movsb
insb
and
filds
repz
jns
rolb
ja
daa
mov
in
aam
int
in
iret
sub
clc
mov
sbb
scas
push
xchg
sub
stos
jle
or
loop
xor
popa
sub
int3
cmpsl
add
jno
adc
movsb
iret
sub
xchg
cmc
jns
call
int3
shlb
sbb
and
fdivr
jno
xor
shr
xor
mov
lfs
clc
adc
adc
lret
sub
andb
loope
out
bound
aas
hlt
js
in
mov
xchg
sbb
iret
mov
imul
push
aaa
cld
and
dec
pop
push
adc
xchg
or
or
jecxz
jecxz
mov
mov
xchg
xchg
jle
xor
jns
mov
xorl
mov
test
or
sbb
divb
and
sub
inc
jo
mov
adc
loop
or
xchg
mov
ret
out
xchg
sarb
aam
ret
sub
sub
or
mov
cmp
out
add
or
pop
int3
int3
push
sub
inc
lds
dec
inc
dec
mov
pop
sti
idivb
jp
jne
jg
jns
jb
jne
inc
cmp
cmp
push
out
jge
mov
idivb
xor
jle
push
out
adc
aas
xchg
push
sbb
jno
loope
imul
xor
ret
push
imul
mov
jnp
jecxz
mov
into
adc
push
aas
cmpsb
je
jbe
fistps
imul
rcl
or
outsl
out
rolb
xor
cmp
mov
or
ss
mov
lcall
mov
aad
sahf
dec
jb
incl
dec
pop
sbb
stc
cmpsl
repz
xchg
xor
enter
sub
and
mov
xchg
mov
cmp
addb
sti
sub
leave
push
xor
pusha
and
inc
outsb
sbb
adc
rclb
in
pusha
repnz
add
mov
sbb
jo
dec
shr
mov
loope
clc
call
jae
stc
sbb
pusha
in
push
insl
pop
and
inc
in
sub
pusha
sbbl
push
cmp
arpl
jo
cmp
out
and
xor
or
test
out
lock
jae
mov
fcomi
xlat
xchg
jno
dec
imul
dec
push
sub
pop
leave
dec
fldcw
repz
push
and
std
pushf
and
nop
or
jbe
xchg
js
les
cltd
outsb
or
mov
out
jae
push
add
mov
dec
pop
pusha
mov
cmp
sti
les
sub
pushf
adc
jg
cmp
aaa
sahf
push
lods
push
xor
iretw
sub
insb
inc
dec
outsb
insb
lods
mov
loopne
jno
push
jle
cmp
adc
pop
dec
dec
call
adc
cmc
test
mov
dec
je
imul
ja
je
out
hlt
shll
adc
xchg
loopne
jne
dec
push
icebp
jl
dec
movsl
ss
mov
dec
and
sub
stc
outsb
jg
mov
addb
xchg
pop
dec
sub
nop
icebp
push
dec
sub
data16
push
sbb
xchg
iret
inc
repz
movsb
enter
iret
loopne
sub
or
or
jmp
testl
xchg
mov
xchg
fwait
hlt
xchg
add
ret
jmp
imul
dec
in
lret
dec
mov
loop
test
add
test
roll
rolb
imull
outsl
in
mov
mov
inc
push
popf
dec
andl
pop
push
call
lret
mov
sti
add
loop
jmp
mov
mov
roll
popf
ret
pop
out
out
xor
int
out
or
pop
inc
mov
add
or
ja
xor
ja
cmp
mov
fdivrp
mov
insb
xchg
jg
mov
pushf
mov
and
mov
lods
imul
mov
adc
xchg
xlat
xchg
push
fcoml
orl
mov
mov
fidivrl
add
lock
jle
pop
js
sarl
cmpb
and
jg
sbb
inc
icebp
jge
test
call
jle
adc
mov
pop
dec
pop
mov
or
sti
jle
xchg
dec
cwtl
mov
pop
xchg
call
call
inc
lret
lret
mov
fsubrp
cmp
dec
lods
sbb
imul
imul
mov
imul
dec
sub
test
dec
jg
mov
sbb
test
cmp
and
add
aas
pop
xor
fldl
jb
sahf
pop
jbe
adc
xchg
xor
inc
xchg
mov
int3
pop
xor
mov
and
jnp
cli
jae
lea
daa
das
outsb
sbb
in
imul
loope
jno
dec
clc
scas
sub
popf
mov
pusha
mov
leave
mov
xchg
inc
arpl
sub
mov
ud1
add
mov
sub
std
jp
roll
dec
adc
pop
mov
sub
sbb
ret
xlat
or
pop
cmp
mov
mov
arpl
and
xchg
adc
jnp
sbb
adc
subb
add
adc
lret
pushf
andl
sahf
int
or
sub
cmc
into
jae
lret
fstpl
into
sbb
into
js
movsl
sbb
daa
mov
outsb
sub
out
mov
inc
xlat
push
jno
pushf
ret
mov
dec
movsb
or
add
in
or
flds
dec
rcrl
aaa
mov
in
stc
sub
or
cmpsl
jno
scas
dec
jne
cmp
sahf
scas
add
imul
arpl
cmp
or
or
cmc
int3
repz
sub
mov
int3
jecxz
aas
sbb
mov
ret
mov
dec
lock
pop
mov
out
hlt
inc
repz
loop
imul
fmuls
and
fildl
sub
adc
pop
shll
pop
mov
add
mov
lock
adc
inc
lods
iret
xor
mov
adc
data16
xchg
test
scas
inc
enter
mov
stos
cmp
daa
cmp
mov
out
lods
ds
aam
call
gs
jl
add
test
addl
jl
fdivrs
add
lret
mov
je
or
sbb
push
xchg
subl
in
lcall
jae
sbb
daa
sahf
mov
add
sahf
test
daa
cmp
mov
mov
cwtl
inc
sub
jp
pop
enter
or
rolb
outsb
ds
dec
mov
call
nop
into
sub
ficoms
bound
int3
nop
jg
js
mov
mov
cmp
xor
in
xchg
in
pop
cmp
add
add
pop
ds
xchg
call
nop
test
inc
imul
addl
xor
daa
int
sub
mov
ja
sbb
in
shll
cmpsl
mov
int
inc
sti
icebp
aad
cld
dec
les
rcrl
jne
mov
rcl
jno
rol
mov
inc
mov
push
scas
cmp
adc
out
xchg
les
dec
mov
inc
sub
pusha
fwait
jle
xchg
leave
js
dec
lret
mov
inc
outsb
xor
jecxz
sbb
adc
push
pop
int
sbb
inc
jns
pusha
push
ss
add
fmull
add
pop
stos
pop
and
dec
mov
fucomip
pop
mov
leave
add
mov
ds
cmp
inc
pop
push
adc
je
adc
sub
push
pop
out
out
mov
int
loop
jmp
xchg
lret
je
out
arpl
and
push
sbb
sti
cmp
cmpsb
dec
cmc
sub
xchg
in
mov
mov
sbb
mov
sbb
shrl
push
fnstsw
fwait
xlat
mov
ficoml
fwait
fwait
in
scas
addr16
popf
push
mov
xchg
movsb
aam
sub
aaa
test
ret
or
idivb
test
mov
sbb
and
mov
cmc
mov
popa
int
clc
int
out
pop
push
repz
stos
push
mov
or
cmpsb
or
mov
cmp
in
inc
add
stos
inc
mull
push
out
or
aam
pop
daa
mov
mov
in
test
dec
adc
cmc
cmpsb
int
out
les
xchg
outsl
fbstp
call
fisttps
les
jo
testb
cmp
fcoms
jecxz
cmp
repnz
push
fwait
and
movsb
jns
out
daa
lea
pop
cltd
xchg
push
add
and
jl
mov
push
movsb
add
sub
int3
inc
ss
daa
push
mov
insl
lods
lcall
xor
subb
or
inc
add
ss
lret
jo
hlt
push
mov
stc
shl
mov
xor
jge
shlb
es
sbb
aad
shrl
dec
shl
lahf
shl
repz
jbe
sbbb
mov
cltd
mov
fnsave
dec
cmp
mov
ret
das
push
add
or
dec
jle
rorl
out
fisubrs
xor
scas
orb
std
push
xor
cld
add
xor
lds
and
into
xchg
inc
lods
pop
movl
pop
sbb
stos
insb
imul
mov
nop
jbe
pop
jmp
mov
adc
push
test
loope
cli
imul
inc
fimuls
mov
enter
sbb
dec
pushf
cmp
dec
sbb
dec
inc
and
rolb
adc
mov
push
nop
fldln2
dec
jmp
dec
test
out
ss
sub
imul
js
mov
xor
xor
lods
push
xor
lods
lcall
test
sahf
xchg
inc
daa
add
into
jno
cmp
aaa
arpl
insb
test
shlb
cmpsl
nop
or
dec
jno
popf
push
inc
xchg
lea
or
jmp
and
sbb
test
mov
lret
lret
imul
mov
in
cmp
xor
xchg
cmp
lds
inc
js
push
push
pushf
lret
das
fwait
rclb
xchg
add
xchg
fstl
cmpl
data16
inc
cmp
pop
std
jg
ficomps
jo
imul
mov
icebp
inc
rep
je
out
movsb
int
repnz
inc
add
xor
rcrb
inc
push
push
jns
les
xor
jle
mov
jnp
es
cltd
xchg
cmp
idivb
cmp
push
dec
test
adc
jle
jl
push
movsl
out
daa
fisubl
mov
mul
or
test
or
sbb
aas
cmp
inc
outsb
fcomip
mov
jmp
cmp
add
xchg
add
test
in
scas
stos
adc
andb
push
int
ss
dec
fcmovbe
out
mov
pop
aad
leave
lods
cmc
cmp
add
pushf
xor
xor
inc
mov
stos
jne
jbe
jne
dec
cs
push
scas
or
mov
jp
rorl
or
arpl
or
xchg
adc
sbb
and
fisubrl
xlat
mov
push
mov
pushf
mov
gs
adc
popa
mov
icebp
cld
repz
and
jp
ret
inc
test
mov
push
jb
loopne
cmpl
cmp
outsb
in
jmp
mov
test
xchg
incl
faddl
clc
and
call
lea
xor
sarl
mov
jg
and
inc
pusha
sbb
test
add
mov
into
push
bound
mov
push
inc
enter
push
es
cmpsb
sub
push
jno
push
roll
sbb
movsb
push
bound
push
jg
gs
lahf
scas
pop
int3
pop
xchg
fildll
das
mov
jl
call
or
cld
std
fidivs
sbb
stc
pop
inc
xchg
stos
mov
ret
stos
push
sub
xchg
rclb
icebp
lcall
push
push
cmp
out
xor
fstpt
push
fdivrl
adc
pop
inc
lock
dec
xchg
das
int3
push
lahf
dec
push
inc
mov
dec
dec
xchg
inc
aam
jmp
cmp
xchg
sbb
mov
int3
fdivrl
cmp
sarl
adc
loopne
add
jecxz
lcall
sub
jp
mov
cmp
cmp
xchg
daa
insb
or
mov
je
or
test
enter
cmp
push
test
jp
mov
and
test
fiaddl
or
sub
pop
push
inc
add
jb
dec
movsb
stos
sub
cmpsb
and
sbb
shll
iret
jb
push
imul
push
inc
jge
mov
push
push
pop
or
out
mov
mov
jne
repnz
cmp
xchg
les
div
decb
inc
cmpsl
mov
mov
xchg
orl
outsl
out
pop
popa
add
or
in
mov
mov
je
insb
outsb
bound
insl
mov
cltd
dec
jns
xchg
insl
arpl
test
add
leave
cmp
rol
mov
and
jmp
neg
sub
mov
test
iret
ficoml
add
adc
xor
adc
stc
mov
adc
mov
addr16
xor
fdivl
cld
cmpsl
mov
in
nop
mov
je
sub
leave
clc
data16
cmp
sti
pushl
div
lcall
pop
mov
in
cs
pop
nop
inc
push
pop
mov
fs
call
je
cmp
cmp
ss
push
xchg
stos
mov
fs
shlb
les
es
jne
sbb
mov
out
cwtl
pop
lds
cmp
mov
popa
push
pop
xor
mov
push
pushf
lods
jle
scas
mov
jmp
add
xchg
mov
ror
mov
movsb
loopne
mov
add
xor
xor
fsubrs
push
daa
push
ret
xchg
or
jne
mov
or
movsl
jmp
sarb
lret
xor
pop
pop
add
sbb
into
cmp
inc
mov
les
inc
push
test
pop
cmp
imul
mov
out
or
aaa
xor
jns
cmp
push
les
mov
in
adc
sti
pushf
inc
mov
cmp
fs
jmp
push
imul
mov
call
popa
pop
mov
xor
dec
dec
push
gs
das
xor
out
pop
push
jnp
fldcw
inc
popf
negb
or
xchg
or
adc
addr16
push
cltd
sar
lods
imul
lock
xchg
imul
and
into
jle
dec
sahf
out
mov
xchg
push
enter
mov
adc
pop
clc
inc
scas
mov
subb
adc
lds
lods
test
and
sub
pushf
mov
push
mov
fsubs
js
or
pop
imul
pop
jae
out
add
jb
sub
lea
fistl
xchg
pusha
insb
cmp
loop
push
cli
xor
repz
bound
mov
ljmp
in
test
hlt
mov
dec
and
popa
movsl
fimull
arpl
inc
inc
jle
dec
in
push
or
into
ffreep
jnp
mov
cmp
subl
insl
push
cli
lds
imul
adcl
cmp
push
nop
testl
push
je
test
test
sahf
cmp
push
and
mov
fwait
int
xchg
or
stos
xchg
out
aam
cltd
xchg
sahf
cmpb
dec
hlt
mov
or
std
push
test
xchg
mov
push
cld
jb
sbb
inc
popa
mov
cmpsb
add
mov
hlt
adc
cmp
sub
out
push
scas
out
vpunpcklwd
bound
sbb
test
dec
cmpsb
or
es
ds
mov
cwtl
jae
imul
mul
jge
jne
or
cltd
daa
pop
sbb
test
mov
insl
insl
dec
sbbl
shlb
or
cli
sub
pushf
or
shl
stos
sarb
lahf
adcb
lods
pop
jl
stos
xchg
cmpsb
in
mov
add
in
bound
mov
lea
jne
and
lods
adc
jns
pop
cmp
mov
and
and
lock
nop
imul
testl
subb
into
es
cmp
pop
mov
popf
call
cmp
push
loope
xchg
mov
mov
movsb
das
jecxz
cmp
mov
mov
mov
or
cmp
lea
ror
add
shll
test
out
push
mov
mov
xchg
notb
jg
out
scas
sbb
out
inc
sbb
mov
add
test
popa
sbb
insl
jno
or
dec
je
int
sbb
fists
push
pop
push
cmpsb
xchg
pop
iret
sbb
cmp
inc
dec
push
xchg
mov
cli
loope
push
loope
outsl
scas
cli
loop
and
ficompl
jno
xchg
or
loop
push
rcrb
jp
leave
test
sub
cmp
aas
rorb
shrb
jb
jo
loope
call
pop
add
sbb
inc
sbb
jbe
adc
xchg
lock
nopl
pop
xchg
sub
mov
mov
add
jbe
clc
sub
sub
xor
call
push
mov
popf
mov
flds
js
jo
jno
mov
pop
stos
push
sbb
mov
adc
in
test
lret
push
popf
filds
insb
cmpsl
sbb
subl
push
mov
cmp
mov
mov
mov
repz
mov
mov
add
insb
cltd
daa
dec
lock
push
xchg
dec
fimuls
cmp
sbb
jo
push
notb
mov
inc
fwait
sti
imul
jno
jae
hlt
xchg
repnz
add
jae
push
gs
btr
mov
mov
adc
mov
and
aas
push
sbb
jo
das
jbe
xor
push
cld
xchg
mov
mov
and
mull
add
addr16
mov
sub
adc
cmpsl
push
pop
or
data16
decl
testb
leave
hlt
test
dec
push
xor
into
pop
jno
std
dec
stc
stos
adc
push
push
sbb
fnstsw
ja
sub
cmp
pop
mov
das
test
add
outsl
jae
nop
add
and
testb
or
xchg
or
jge
xchg
pop
inc
test
pop
dec
loopne
loope
sbbb
xorb
jns
ror
scas
or
ss
js
xchg
and
jno
dec
pop
adc
cmp
and
mov
xchg
jge
imulb
outsl
addr16
mov
dec
dec
or
arpl
outsl
sub
sub
jmp
fisubrs
fcomps
mov
push
mov
addr16
call
fistl
push
and
push
cmpsb
fstl
inc
jmp
ss
vpsrlw
xchg
iret
test
xchg
cmp
push
mov
cmp
mov
movsl
xor
mov
call
andl
sbb
in
fdivrs
jb
add
bound
sbb
lea
leave
and
mov
pop
rorl
push
mov
or
lods
ljmp
stos
push
add
mov
pop
filds
repz
and
lds
adc
add
cmp
inc
lahf
repz
lret
arpl
or
ret
mov
cmpsb
lds
clc
and
sub
test
insl
sub
popl
into
push
leave
clc
les
pop
daa
xchg
and
sbb
bound
xchg
mov
push
dec
sbb
pop
out
test
fsubp
aas
hlt
out
adc
mov
leave
mov
leave
arpl
out
ljmp
aad
out
and
lods
add
imul
jb
out
adc
dec
rorl
movsl
xor
add
gs
pop
insl
sbb
push
xchg
loopne
jmp
imul
popa
mov
lock
leave
xchg
cmp
jp
std
xchg
loope
sahf
add
imulb
add
in
outsl
call
push
cmc
std
inc
mov
and
pusha
cmpl
xchg
xor
jmp
dec
pop
fcmovnb
bound
sbb
xchg
and
aad
jno
and
adc
insl
ljmp
popf
scas
mov
inc
jbe
pushl
add
dec
movsl
pop
adc
cmpsl
mov
subb
mov
dec
sarb
ljmp
push
and
popl
cltd
pop
bound
nop
jnp
jmp
or
dec
adc
aas
pop
sbb
xchg
jb
lcall
dec
mov
jno
popf
push
sahf
test
sbb
push
daa
ret
ja
in
cs
cli
jns
pop
mov
call
fcomi
leave
ljmp
jne
aaa
sbb
sbb
mov
dec
push
jns
inc
out
adc
pop
pop
pop
xchg
dec
andl
enter
jbe
inc
mov
divb
in
jbe
push
jbe
sti
es
iret
xchg
lock
dec
ret
ss
xchg
xchg
cmp
cmc
add
add
call
pop
jmp
sbb
mov
fmulp
cmpsl
mov
in
dec
or
addr16
mov
adc
rcll
add
cmovo
add
mov
stc
cmp
shlb
std
jns
mov
pop
sub
push
pop
push
add
aaa
cmp
inc
daa
idivl
or
push
add
cmpsb
jae
imul
aam
insb
ljmp
pop
loopne
cwtl
mov
out
shll
dec
andb
test
sbb
or
xchg
ss
push
decl
mov
mov
sbb
dec
loop
loopne
xchg
mov
mov
add
adc
lahf
outsl
arpl
fnstenv
pop
xor
sub
fs
mov
lcall
cmp
mov
lret
jmp
mov
mov
cmpsb
pop
jae
nop
pop
je
dec
jmp
les
xor
dec
andb
add
std
add
adc
ja
sbb
bound
mov
cwtl
and
xchg
iret
mov
nop
mov
pop
rorl
imul
mov
lcall
adc
or
lock
repz
jmp
repnz
clc
aad
sub
out
jae,pn
mov
rclb
mov
lods
cld
mov
pop
jo
fistps
or
mov
xchg
xchg
mov
or
fs
xchg
and
lods
cmp
sbb
inc
aad
add
lods
mov
ret
stos
aaa
sub
aaa
cmpsb
sub
mov
jne
jmp
mov
xchg
cmp
push
out
jno
add
movsb
roll
ret
or
add
xchg
lret
xor
mov
mov
inc
insl
test
dec
movsb
loopne
or
pushf
cs
les
sub
dec
flds
movsl
sarl
and
fimuls
jns
pcmpgtb
dec
push
popf
ljmp
out
lahf
fdivrs
or
xchg
sbb
or
push
or
adcl
cli
xor
jne
daa
fcoms
in
into
leave
cld
push
in
popf
add
xor
dec
imul
in
and
andl
inc
or
xor
daa
xchg
add
in
pop
mov
repnz
push
test
subb
jbe
sbb
lock
inc
adc
ja
jno
fnsave
adc
outsl
adc
popa
mov
addb
dec
pop
dec
xchg
inc
ljmp
push
movaps
pop
lret
mov
xchg
addr16
inc
mov
and
adc
xchg
ret
push
sbbl
shlb
cli
dec
imul
xchg
xchg
test
jp
pop
clc
mov
sub
jnp
and
mov
lds
in
shl
jp
jecxz
or
int
lods
lea
pop
xor
jnp
jl
movsb
push
or
addr16
bound
iret
aas
loop
add
pop
fidivs
xchg
dec
mov
movsb
xchg
adc
rcrb
sub
push
scas
or
in
subb
lea
xor
add
cmp
aad
lret
inc
jae
or
push
mov
mov
mov
lods
sub
xchg
dec
adc
add
imul
mov
sbb
jmp
ret
jp
je
cmp
add
or
jge
cltd
fcomps
mov
in
xchg
in
and
mov
jno
es
cmpsl
add
push
jae
push
dec
cmpsb
fdiv
xchg
lret
loopne
mov
call
mov
cmpsb
cli
fucom
xor
faddl
cmpsb
lods
cltd
gs
cmp
inc
stos
mov
xor
xchg
dec
mov
int3
add
jb
jbe
mov
lock
inc
ds
pop
push
pop
sub
nop
hlt
adc
mov
sub
lret
mov
mov
es
push
hlt
sbb
incl
pop
and
mov
jge
fisttpll
inc
xchg
mov
enter
movsb
sbb
es
cmp
je
cmpsl
mov
dec
mov
call
in
mov
and
pop
stos
cmp
in
push
in
add
jmp
out
rorb
stc
stos
push
xchg
call
lea
mov
int
sbb
dec
sti
aam
jb
pop
push
test
sbb
push
jne
xor
cmp
test
hlt
cld
clc
xchg
inc
aam
pop
inc
dec
lret
test
cmc
add
adc
lods
test
xor
bound
cs
arpl
sahf
out
xchg
dec
inc
xlat
arpl
push
ret
scas
clc
ja
hlt
stos
mov
popf
push
push
fists
lret
popa
or
popa
pushf
test
xchg
popa
out
pop
data16
inc
inc
test
mov
mov
or
cwtl
rcl
and
icebp
fisttpll
pop
or
jg
xor
pop
sub
int
pop
je
jmp
scas
cltd
mov
jb
rclb
mov
in
dec
movb
jnp
mov
ds
out
aas
or
sub
xchg
pop
jb
pop
add
jns
scas
mov
loop
pop
xor
pop
jp
push
pusha
imul
mov
imul
dec
mov
arpl
call
cmp
sti
test
sbb
adc
mov
mov
xchg
pop
les
mov
scas
inc
lret
mov
ljmp
rcrl
jmp
sub
inc
pop
loope
xchg
add
push
jg
jl
mov
and
fiadds
push
call
pop
movsb
iret
sub
push
in
sub
xlat
jmp
loope
mov
fnstcw
mov
lds
mov
fs
and
adc
clc
ja
rcr
xchg
addr16
daa
push
mov
mov
imul
out
xlat
mov
shlb
shrb
pop
addr16
cli
push
aas
add
push
pop
test
in
sub
push
lea
leave
push
leave
mov
shlb
mov
mov
lret
or
pop
cmpsl
push
ss
jno
jg
aas
sub
cld
stc
or
xor
push
xchg
pop
std
mov
outsb
push
std
inc
inc
push
jae
and
sbb
sti
push
inc
xor
add
mov
dec
iret
cmp
js
frstor
fdivs
fbld
pop
into
ljmp
push
roll
cmpb
popf
std
mov
cmp
pop
out
sbb
sti
mov
sub
dec
mov
pusha
dec
movsl
lods
push
std
inc
stos
in
cmc
or
lods
test
pusha
mov
inc
stos
xor
ror
or
sbb
or
fsubrs
inc
add
inc
mov
jmp
xchg
movsl
pop
lds
mov
sbb
pop
push
pop
orl
xchg
lahf
data16
aad
pushf
mov
pop
mov
aam
xor
fisubrl
push
or
jbe
aad
lods
mov
daa
in
adc
push
rorl
out
not
arpl
clc
push
jnp
imul
pushf
cmp
aad
mov
cmc
inc
sbb
mov
fsubr
cwtl
xchg
insl
adc
xor
mov
and
add
mov
add
ja
push
call
lods
xchg
push
or
loop
pop
rep
cld
pop
xchg
aas
mov
pop
call
int3
divl
scas
mov
xor
ret
xor
or
mov
dec
daa
push
sar
jns
pavgb
sub
scas
lcall
enter
js
sahf
cmc
dec
mov
rclb
lea
test
leave
sbb
or
xchg
jns
lea
rorb
pop
mov
in
leave
daa
shrb
aam
push
fs
aas
add
popa
mov
test
loopne
das
sub
inc
xchg
jge
inc
fildll
xor
bound
sub
xor
repnz
scas
inc
lds
fildll
sbb
or
jb
rcr
test
mov
shll
idiv
fnstsw
inc
outsb
push
dec
xor
jmp
icebp
testl
nop
cs
lods
adc
fbstp
push
pmuludq
in
lods
mov
sub
xchg
inc
insb
jbe
xchg
imul
nop
mov
xchg
clc
mov
in
lea
cmp
fcom
in
in
sub
es
cmp
or
imul
sub
scas
shlb
adc
arpl
push
leave
xchg
mov
mov
loopne
mov
sbb
sbbl
pop
lahf
add
cmc
lret
or
pop
loopne
sub
loope
getsec
and
arpl
pop
pop
lods
enter
mov
testl
jns
lock
roll
daa
int3
and
xchg
es
daa
or
hlt
mov
mov
fcoms
dec
les
int
sbb
ja
push
xor
push
xchg
sti
mov
mov
leave
nop
mov
aam
addl
addr16
int
or
xchg
jl
pop
movsb
and
cmp
jnp
adc
rol
gs
xchg
push
jle
jb
lahf
faddl
inc
cmp
lcall
sbb
or
pop
mov
mov
out
mov
jbe
cmpsb
fiaddl
cmp
mov
je
cmc
jl
pop
int
cmp
fimull
sub
es
cld
jle
clc
icebp
stc
call
stos
adc
mov
repnz
push
in
jb
movsb
jmp
adc
push
fdivrp
inc
dec
pop
xor
jb
nop
mov
lds
lret
push
sub
bound
pop
cld
mov
rclb
adc
scas
loope
xchg
or
or
fisubl
push
add
out
or
xchg
negl
popa
rclb
mov
in
xor
pop
inc
cli
ja
mov
in
loope
and
cmc
jmp
mov
ss
xlat
inc
js
pusha
sahf
jne
fcompl
xor
stos
leave
jb
cmc
outsl
notb
xchg
sbb
sbb
inc
jae
icebp
pop
data16
jle
jl
test
sbb
jecxz
pop
mov
mov
pop
jno
mov
in
mov
push
mov
pushf
jbe
lcall
pop
cmp
imul
mov
ljmp
nop
cmp
add
xor
jno
test
mov
or
add
mov
inc
ret
fisttpll
rcrl
add
jge
jle
lods
jmp
stos
std
sbb
fs
pushf
xchg
fs
fisttpll
xor
push
les
sbb
push
notl
push
sub
adcb
xor
movsb
test
data16
push
lcall
cwtl
cwtl
cwtl
sahf
jge
adcl
pop
jecxz
test
mov
pop
mov
lods
sbb
sarb
xchg
and
pop
sbb
subl
out
lret
ss
mov
dec
fs
cmp
or
in
inc
mov
dec
test
xor
ret
int3
mov
cmpsb
push
pop
cltd
je
push
mov
pop
mov
xchg
jno
cwtl
dec
fsubl
stos
iret
call
mov
mov
aas
jle
fiadds
inc
sbb
sahf
movsb
adc
dec
andl
aad
mov
mov
fadd
jle
lahf
hlt
and
inc
adc
ret
andl
jnp
stc
adc
xchg
xchg
cltd
xor
xchg
add
push
and
mov
insb
mov
push
sub
mov
push
repz
adc
fisttpl
push
aas
sub
insl
jne
dec
pusha
les
mov
fdivrl
xchg
xchg
pop
mov
cmc
push
clc
and
lods
ja
cwtl
imul
popa
loopne
jae
add
push
mov
int
test
fwait
add
push
and
xchg
pop
hlt
lods
ja
bound
insb
pop
stos
gs
cmp
dec
pop
popf
dec
mov
cmp
mov
adc
andl
xlat
jne
push
push
push
aam
xor
and
sbb
mov
cmp
scas
adc
out
push
lods
push
call
rolb
pusha
pop
lds
push
int
dec
outsl
pop
mov
mov
xor
jl
rclb
lret
mov
fiaddl
push
pop
daa
adc
lahf
mov
jbe
jl
mov
cli
mov
js
mov
icebp
mov
mov
adc
aaa
orb
cmpsl
sbb
adc
out
add
mov
int
sub
xchg
outsb
scas
pop
shlb
mov
popa
xor
adc
fisubrs
pop
jo
sub
dec
xor
addr16
lret
adcl
jge
lahf
in
fcomp
push
out
je
mov
dec
insb
sbbb
sbb
pop
or
cmp
shrl
hlt
fistps
gs
imul
divl
insb
loopne
lret
xchg
test
insl
mov
int3
push
add
addl
out
sub
outsb
add
int3
cmp
ret
in
repnz
fnsave
push
push
aad
scas
nop
sbb
sti
nop
popa
test
into
push
outsl
leave
or
inc
out
mov
adc
mov
js
iret
cli
or
movsl
aam
pushf
add
cmp
adc
int
sbb
loope
mov
fildll
dec
or
aaa
sbb
dec
repnz
xchg
fsub
stc
ret
bound
jmp
sbb
pop
ret
sub
cmp
ret
adc
lods
inc
lds
pushf
adc
mov
sahf
inc
ja
loopne
fcoms
addr16
cli
sbb
sub
xchg
mov
imul
mov
ss
aas
das
mov
movsw
dec
cmc
dec
decb
mov
int
loopne
xor
sbb
fimull
xor
mov
adc
mov
adc
repnz
jmp
dec
xchg
stos
nop
out
mov
and
mov
leave
and
jg
pop
int
push
pop
fmull
loope
xor
pop
dec
mov
jne
sub
mov
aaa
fsubs
lret
test
daa
or
jp
pop
loope
rol
sub
sub
mov
pop
mov
es
arpl
pusha
cmc
insb
pop
push
lods
push
cli
rcrb
jo
mov
jg
mov
sahf
cmp
mov
lret
jns
lret
inc
xchg
icebp
in
out
adc
sub
dec
lea
dec
jle
iret
fisubrl
std
int
mov
mov
mov
sbb
std
movsb
xchg
sbb
andb
xchg
fistpll
test
push
fs
cld
cld
mov
lahf
in
and
loopne
mov
or
rorb
and
es
cmc
rolb
lods
cli
data16
dec
pop
int
movsl
jg
fwait
enter
fstpl
jae
and
stos
cmpsb
repnz
mov
repz
fmull
push
popf
imul
imul
mov
xchg
mov
push
clc
cmp
mov
mov
sarl
or
call
stos
int3
inc
push
pop
bound
mov
enter
pop
sbb
jbe
push
icebp
cmp
push
pop
and
test
cmp
push
xchg
xor
lods
scas
paddb
mov
es
push
push
inc
add
in
popf
jo
and
xchg
cld
xchg
xor
out
repz
cmpsb
cmp
cwtl
inc
inc
in
icebp
mov
insb
or
and
mov
test
icebp
loop
call
add
push
mov
pop
aas
stos
aaa
jp
xor
inc
cmp
lods
out
pop
cmc
add
mov
fists
std
and
sbb
data16
push
push
ljmp
mov
rol
movsb
xor
cmp
es
sbb
inc
test
and
aas
xlat
out
lret
sete
lcall
push
or
ss
cmpsb
push
xor
inc
sti
dec
stos
or
gs
xchg
fidivrl
pop
imul
fcomps
scas
inc
mov
inc
cmp
inc
jbe
xor
sbb
mov
sub
cmp
addb
js
ljmp
es
dec
aas
sub
jbe
xchg
das
popf
or
insl
fisttpl
hlt
and
aaa
jge
sbb
and
jbe
or
movsl
dec
inc
stos
daa
test
mov
inc
test
xor
pop
xchg
mulb
fwait
mov
xchg
mov
lcall
jg
hlt
adc
inc
shlb
sub
out
dec
push
mov
add
add
repnz
and
adc
shll
mov
and
repnz
mov
repz
pop
dec
jns
call
or
and
adc
shll
fsubrl
push
sti
add
arpl
sbb
outsl
and
ds
sbb
mov
out
fbstp
lock
jecxz
je
xor
ret
pop
ret
aas
add
xchg
into
lret
repnz
nop
mov
mov
xor
mov
rcrl
xor
icebp
sbb
cmpsb
loop
frstor
pop
arpl
sti
fisttpll
jbe
dec
decb
ss
daa
push
mov
push
or
enter
fildll
cmp
add
xchg
and
out
sbb
add
pop
dec
cmp
lahf
jbe
push
xchg
les
popf
shll
fsubs
negb
xchg
divb
lret
fwait
adc
hlt
dec
mov
mov
lcall
xor
sub
setne
mov
cmp
adc
std
adc
inc
lea
in
or
xchg
aad
push
mov
lea
daa
setp
jecxz
fldl
jmp
push
push
push
adc
push
fiaddl
cmpsl
sub
int
jecxz
xor
loope
clc
mov
xchg
mov
add
inc
insb
enter
xchg
lret
push
pop
push
cwtl
pop
jnp
shl
mov
mov
pop
mov
ficoml
pop
loop
and
add
in
inc
cmc
mov
mov
negb
mov
jno
cli
out
test
jmp
cmp
imul
xlat
lods
inc
inc
out
dec
pushf
imul
int3
arpl
loop
add
pop
push
ret
scas
push
ljmp
pop
sarl
cmp
cmpsl
popa
dec
push
in
iret
les
add
mov
out
ret
repnz
cmp
pop
cmp
or
stos
addr16
std
adc
fstps
lahf
cmp
ss
jle
popf
hlt
pop
mov
and
mov
and
xchg
stc
imul
std
or
dec
sbb
xchg
dec
or
in
xor
aam
lods
xchg
fwait
in
pop
in
insl
es
pop
lock
jle
gs
fcoms
jae
jo
jp
adc
int
jb
ret
inc
sbb
cs
push
fildll
mov
ds
stos
xchg
cmp
testb
cltd
mov
pop
rclb
dec
mov
push
push
out
jb
dec
inc
cmp
adc
movsb
mov
and
jb
add
push
repz
aas
aam
orl
xor
or
xchg
pop
das
aas
cmp
gs
push
iret
mov
pop
fidivrs
jp
pop
or
pop
jae
push
arpl
xor
mov
jns
jg
inc
insl
jg
add
jp
add
push
lcall
xor
hlt
dec
stos
dec
out
cwtl
sub
movsl
in
fidivrs
or
and
dec
shlb
cltd
jo
movsb
ret
sbb
mov
jbe
adc
push
mov
call
imulb
mov
cltd
insb
arpl
aad
xor
ljmp
fsts
ljmp
mov
adc
xchg
pushf
xchg
idivb
adc
shlb
out
fdivs
ror
adc
push
mov
mov
push
adc
jbe
or
ja
mov
cmpsb
xor
negb
nop
xor
mov
adc
out
loopne
dec
add
push
adc
mov
pop
lods
xlat
pop
test
sahf
cmpb
xchg
iret
iret
repnz
mov
enter
or
jl
mov
mov
pop
pop
addl
mov
out
sub
mov
sub
adc
jb
xor
push
jge
sti
mov
mov
lea
and
fwait
push
testb
inc
xor
fldcw
xchg
aam
push
sar
imul
pop
add
bound
dec
mov
mov
add
adc
sub
mov
fistpl
jl
data16
push
loope
inc
xchg
push
xchg
pop
fbstp
xlat
sbb
add
dec
adc
fxch
insb
jle,pn
leave
lods
lods
jb
aaa
pop
push
xlat
sub
ljmp
outsl
lcall
incl
data16
iret
ret
into
jp
fwait
lock
push
cmp
out
into
bound
jp
aam
leave
xlat
iret
in
sub
pusha
test
fxch
cmp
jg
hlt
dec
and
sub
xor
push
fwait
add
popl
lods
es
inc
loope
mov
out
push
repnz
aaa
or
xor
out
mov
jbe
sbb
mov
iret
loope
out
push
enter
or
pop
les
bound
popa
popa
fisttps
pop
shll
out
or
pushw
mov
mov
and
and
fld1
subb
xor
xor
sub
mov
ljmp
ja
adcb
and
popa
stos
xchg
and
aaa
fisubrl
cltd
sbb
jo
sub
add
lret
lret
orl
push
test
lods
sub
rcrb
jne
iret
out
or
ud0
int
jbe
imul
pushf
lds
jg
pop
pop
mull
sub
ja
or
mov
mull
or
ret
xchg
and
cltd
or
cli
lds
xchg
jge
jg
jecxz
inc
push
xor
insl
cmpsb
jnp
mov
xor
aam
lret
nop
cmpsb
por
in
and
in
xor
jg
frndint
and
lret
xchg
jge
loope
push
out
out
in
cmpsb
sub
mull
mov
dec
jne
aaa
xor
jl
icebp
jb
icebp
cmp
sbb
test
cmp
sbb
jb
rcrl
lahf
rcrl
inc
out
rorb
std
inc
mov
jmp
mov
mov
les
insl
mov
mov
jb
pushf
jmp
and
sub
lcall
les
pop
add
mov
add
daa
or
dec
mov
push
sbb
mov
bound
fidivrl
add
pop
ljmp
out
orl
mov
fcomps
dec
inc
xlat
dec
adc
push
fcmove
jg
fildll
adc
mov
mov
int
testl
loope
in
stc
cmp
inc
jbe
push
ds
out
das
fdivrp
js
jns
loop
push
mov
xchg
nop
mov
jnp
or
lret
and
xor
gs
xor
fcomps
mov
xchg
stos
jae
push
push
hlt
and
and
daa
cmp
jne
aas
adc
pop
xchg
dec
jmp
hlt
popf
inc
imul
sarl
je
ret
sbb
shrl
push
addr16
push
lahf
loopne
cmp
pop
test
xchg
cmp
push
stos
ds
stos
rcrb
push
adc
push
or
mov
xchg
sub
fs
push
dec
xchg
fwait
aaa
push
mov
jmp
jle
cmp
inc
adc
sub
push
notb
mov
icebp
push
xor
cltd
cs
sub
mov
ss
das
std
mov
pop
out
jmp
shrb
ficomps
lret
sbb
in
add
mov
push
decb
lahf
shrb
or
adc
xor
fcoml
lock
das
mov
and
sub
loope
bound
add
test
pop
mov
mov
ret
jecxz
cmp
lret
imul
cmp
out
in
stos
jae
outsl
cmp
sti
lods
mov
outsl
das
lock
or
subl
mov
sbb
call
fsubs
daa
dec
test
rcrb
mov
test
jnp
pop
inc
rcll
int3
mov
idivl
pop
push
fwait
push
cmp
leave
cmc
mov
stos
ret
cltd
xchg
bnd
cmp
movsl
dec
inc
cmp
or
or
sbb
pop
xchg
mov
push
push
stos
imul
sbb
mov
lahf
js
pop
xchg
stc
xor
ss
xchg
int
dec
js
ds
or
rcrb
inc
imul
mov
clc
jo
sbbb
in
insl
pop
jg
mov
mov
outsl
insl
mov
cpuid
pop
adc
adc
xchg
mov
cmpsl
push
xor
lahf
repz
mov
in
add
or
stos
jge
xchg
in
sub
dec
sahf
and
stc
mov
mov
outsb
imul
in
lret
std
lret
pusha
sub
addr16
clc
imul
xchg
mov
mov
pop
jb
mov
jp
ja
sbb
cmp
cld
adc
arpl
outsl
dec
dec
jle
ret
clc
shll
jg
jb
in
pop
mov
jbe
lahf
inc
pop
lret
fs
imul
jbe
push
in
add
and
mov
adc
lea
loopne
rolb
push
fcmovne
pop
cwtl
aam
cmpsl
inc
jnp
cmp
dec
pop
or
xchg
mov
jg
jnp
repz
or
scas
push
jl
jo
fscale
jae
int
cmp
iret
adc
cmpsb
lret
test
and
lods
dec
pop
mov
cli
sbb
xchg
add
clc
jmp
and
mov
add
popf
mov
outsl
pop
idiv
mov
in
leave
cld
inc
pop
pop
int3
sub
js
popa
pushf
mov
arpl
inc
sub
and
sbb
push
mov
out
aam
mov
mov
cltd
mov
addl
iret
push
sub
cld
insl
pop
or
cvtpi2ps
push
jns
push
jae
pminsw
dec
ds
sub
add
repz
adcb
into
mov
sahf
movsb
add
xchg
mov
and
imul
js
aad
mov
push
lahf
jbe,pt
mov
out
xchg
das
sahf
pop
mov
into
scas
add
xchg
bound
es
xchg
sub
sti
aas
imul
rcl
mov
pop
sub
add
cmovg
pushf
pushf
fmuls
scas
mov
std
xchg
scas
idivl
imul
aas
dec
loope
mov
inc
jno
push
rcll
push
popa
arpl
fidivs
scas
add
out
lcall
adc
mov
pusha
ja
xchg
jecxz
mov
lock
ds
mov
inc
ja
rorl
sbb
mov
push
iret
fcomps
lds
push
loope
aaa
lea
fs
inc
or
daa
cmp
mov
insb
inc
add
rcr
xor
sub
dec
push
or
sbb
inc
xor
cmc
subl
pop
test
insl
mov
lds
adc
fcmovb
xor
jnp
aas
adc
hlt
and
jge
push
cmp
clc
shrb
sub
add
out
in
scas
mov
out
fs
sub
es
dec
xchg
rcll
push
out
mov
stos
ret
js
sti
daa
hlt
stc
add
ret
xorl
scas
cli
lods
test
dec
pop
dec
xchg
es
sub
in
push
jecxz
inc
in
in
ret
xlat
loop
jns
mov
sub
outsb
xor
adc
pop
xor
dec
xchg
mov
bound
leave
sahf
inc
inc
lret
mov
sarl
outsl
mov
cltd
icebp
mov
push
mov
mov
loope
pusha
out
cmpsl
in
xchg
test
arpl
cmp
dec
mov
cmp
pop
jne
jg
imul
imul
cs
shlb
ds
adc
mov
mov
xchg
repz
adc
inc
add
lcall
sbb
hlt
scas
out
mov
insl
out
lret
inc
pop
mov
xchg
jmp
xorl
jmp
xchg
dec
out
xlat
xor
lods
and
cltd
dec
lods
insl
mov
or
aad
mov
or
jg
mov
jnp
cs
pop
xchg
fwait
sub
les
cmpsl
loop
inc
roll
lret
push
sbb
adc
xchg
cmp
mov
movsl
lds
jne
sub
test
push
mov
mov
xor
popf
xchg
ja
sahf
xchg
xlat
adc
push
jb
popf
rcrl
mov
xor
enter
arpl
push
and
push
cwtl
jmp
add
xchg
add
push
xor
cli
testl
mov
or
into
push
nop
stos
loop
mov
push
adc
jecxz
fnstcw
cltd
sbb
add
cld
hlt
push
cmpl
push
les
rcl
popf
mov
ds
pop
rcr
or
sti
pop
inc
sbb
push
push
and
inc
mov
cmc
cld
sti
inc
sbb
movsl
inc
fcom
mov
push
inc
clc
cmpsb
ss
inc
cld
xchg
cli
arpl
sbb
cmp
aaa
sub
add
pushw
jp
dec
or
sbb
or
mov
dec
lods
xchg
popf
stos
por
sti
sbb
xlat
loopne
cmp
mov
mov
dec
hlt
mov
shlb
or
mov
push
add
das
fnstcw
dec
notl
dec
or
push
mov
je
cmp
shlb
push
cltd
adc
insb
push
inc
mov
and
jbe
or
add
or
sti
mov
adc
in
and
enter
outsb
cmpsb
mov
mov
or
subb
sti
jmp
cmp
push
or
mov
xchg
js
inc
into
dec
call
icebp
lods
fwait
subl
and
repz
jge
sub
adc
xchg
jae
push
add
pop
sub
or
mov
mov
mov
add
fistl
subb
mov
dec
fisubl
push
xchg
push
inc
les
cmc
leave
pop
fcoml
cmp
daa
pop
lcall
insl
mov
stos
mulb
pop
les
lret
xchg
push
mov
fdivp
sub
iret
gs
outsl
adc
loopne
pop
adc
hlt
adc
push
lret
fstps
in
sub
pop
popa
ljmp
std
add
std
sub
add
idivl
aas
mov
test
dec
jg
and
jecxz
xchg
sub
fnstcw
and
ja
lock
fstl
popf
out
adc
mov
mov
jp
adc
fwait
dec
jo
add
fcompl
in
clc
dec
stc
or
call
dec
jbe
jno
xchg
dec
lds
out
mov
popa
test
jl
test
cltd
xchg
ljmp
and
sub
ss
pop
repz
dec
inc
cmp
add
test
pop
enter
nop
and
call
and
or
dec
adc
adc
gs
dec
call
mov
mov
shrl
add
jp
push
std
add
hlt
insb
sub
pop
je
mov
push
mov
jo
xor
imul
mov
cmp
out
pop
push
cmp
shlb
js
add
and
adc
loop
dec
push
and
fisttpll
or
xor
adc
stc
or
loopne
sbb
and
fucomip
jb
rorl
inc
or
and
cs
jno
mov
cmp
jne
repz
jae
jne
or
in
loopne
inc
sbb
mov
mov
testb
mov
rcll
test
mov
inc
pop
dec
dec
inc
add
xchg
test
int
mov
push
inc
mov
pop
jmp
and
jbe
fwait
mov
add
or
pop
cli
sub
and
pop
jbe
xchg
push
aam
sarb
sbb
cmpsl
stos
sub
fcmovnb
loop
mov
popl
or
shrl
lret
insb
sarl
adc
stos
imul
loopne
insl
test
rorb
pop
add
and
repz
addl
stc
fisttpl
or
enter
sbb
daa
in
jns
jbe
add
jecxz
popa
bnd
gs
js
pop
mov
or
push
inc
out
fcomps
mov
cmp
ret
mov
int
lea
cwtl
aaa
mov
jecxz
push
fwait
adcb
fs
cli
stos
fildl
mov
jecxz
jb
xchg
adcb
mov
jg
sbb
imul
out
fistpll
and
aaa
and
dec
rcr
inc
cmp
and
mov
out
mov
movsb
inc
xchg
jmp
imul
mov
inc
dec
int
mov
fcomps
pop
and
jp
push
pop
daa
mov
insb
pop
add
inc
scas
inc
jge
icebp
sbb
cmp
adc
pop
imul
outsb
and
popf
xchg
sbb
adc
sahf
cmp
fdivrs
push
add
push
jecxz
or
out
mov
xorl
push
add
inc
insb
sbb
hlt
xor
jb
sbb
mov
leave
jmp
adc
movsl
jge
fxtract
or
xlat
stc
pop
add
cmp
js
leave
push
in
push
adc
xor
int3
stc
negb
fcmove
jg
lahf
out
repz
inc
xchg
test
jg
add
dec
aad
cmp
out
xchg
test
nop
sbb
cwtl
call
lock
cli
call
or
mov
int
movl
faddp
shl
cmpsl
xchg
insl
pusha
adc
stc
mov
push
sbb
and
sub
xchg
jns
add
or
pusha
cmp
add
dec
xor
sahf
cli
testb
jbe
lea
push
pop
lods
add
sahf
sub
outsb
pop
movsb
int
in
sbb
test
sbb
shrb
pop
adcl
loope
adc
adc
push
test
or
or
lock
jg
mov
aaa
cltd
xchg
sub
icebp
dec
cmp
cld
sub
test
mov
xor
icebp
xchg
jp
fstps
sbb
lds
pop
les
sti
out
mov
xchg
push
ret
popf
add
lods
pushf
xor
ljmp
sbb
pop
test
sti
imul
cmp
test
xor
jge
cwtl
push
or
jno
mov
cli
popf
jecxz
test
xchg
push
mov
mov
repnz
es
lea
lcall
xchg
or
loope
js
imull
hlt
inc
jle
test
sti
movb
pop
pop
inc
xchg
inc
jl
pushf
in
cmp
jge,pt
pop
mov
dec
mov
and
or
or
icebp
pop
insl
push
mov
ret
lods
xor
push
inc
int
mov
inc
add
xor
inc
shrl
ret
push
and
addr16
mov
fs
pop
rorb
mov
sbb
fs
mov
fidivs
pop
inc
lahf
sahf
mov
push
mov
xor
add
fwait
inc
sbb
aad
jp
jae,pn
inc
rcrw
pop
rorb
xchg
aam
pushf
cmc
inc
stos
cmc
and
xor
sti
sahf
add
push
jno
cwtl
int
push
add
test
cmp
cmpsl
aas
hlt
dec
and
pop
sbb
mov
sub
fucom
shl
dec
jb
sub
xor
imul
cld
cld
int
pushf
push
mov
clc
movsl
lcall
sub
and
inc
add
sub
hlt
cmpsl
rcll
push
ret
mov
dec
fdivrs
fsubrp
in
mov
xchg
lcall
jae
mov
xor
xor
mov
mov
inc
jmp
sbb
cwtl
xchg
imul
mov
xorl
call
and
mov
sbb
leave
daa
cmp
mov
dec
mov
adc
lock
int
xchg
xor
adc
mov
lock
aad
add
cltd
add
adc
cmpsb
stos
scas
mov
push
pop
mov
inc
insl
outsl
notl
neg
cmp
int
movsb
xchg
cmp
sarl
mov
or
push
cmp
fsubrl
mov
mov
dec
aam
dec
les
enter
fidivrs
pop
mov
loopne
xchg
sbbl
int
lds
mov
sahf
sbb
xchg
stc
jne
lcall
xlat
cmp
inc
test
gs
xlat
add
adc
dec
mov
out
sbb
xchg
inc
sub
xchg
test
leave
xchg
or
pop
mov
sbb
sarb
aas
imul
sub
out
xchg
fwait
std
add
filds
movlps
adc
test
fists
inc
mov
mov
cmp
cmpsb
fs
xchg
mov
ljmp
sti
stc
sti
bound
pop
cld
mov
cwtl
sub
inc
xchg
fs
pop
lcall
mov
das
add
test
shrb
pop
or
xchg
ds
mov
jae
sub
jge
out
sbb
imul
sti
and
out
jg
rcl
aad
imul
dec
mov
sahf
and
inc
and
ss
daa
mov
xchg
jl
out
lret
lods
add
test
pop
in
call
xchg
ds
xchg
mov
ja
scas
imul
orl
or
xchg
xor
es
mov
cmc
mov
push
inc
push
cmp
insl
dec
shrl
fcmovb
and
out
and
xchg
push
pop
mov
push
in
pop
shlb
mov
xchg
pop
and
xor
arpl
subb
lods
mov
hlt
daa
cltd
insl
stc
pop
xchg
xchg
adc
ss
jecxz
outsb
jb
fwait
jne
fs
lds
cmp
daa
xchg
jmp
jp
scas
and
mov
push
gs
and
xchg
lods
fsubrp
jnp
imul
sbb
xchg
mov
mov
dec
out
dec
inc
out
push
test
adc
outsl
sub
add
fsubl
xor
mov
cmpsl
aaa
cmp
les
rcrl
mov
or
loop
lahf
push
notl
xchg
jp
sub
addr16
lods
inc
jmp
sbb
out
adc
fmull
dec
inc
or
lret
test
pop
int3
cmpsb
aad
movsb
xor
jno
fstl
jp
ljmp
sbb
movsl
cwtl
bnd
aas
outsb
push
dec
fsubl
mov
sub
popf
adc
shl
jo
jecxz
rclb
sahf
scas
pop
pop
dec
nop
fsubl
fstpl
xchg
inc
addl
insl
lods
cmpsb
mov
inc
lea
fldl
push
test
pushf
mov
xor
call
lods
lret
jmp
cmp
clc
or
mov
popa
and
pop
cmpsb
into
cmp
inc
jne
std
pusha
testl
add
in
jmp
jle
ja
enter
xchg
mov
and
pushf
outsb
or
fcmovne
inc
jo
inc
mov
push
cwtl
xor
dec
push
test
jl
push
call
xor
and
mov
push
pop
arpl
mov
dec
and
mov
arpl
rol
xchg
out
decb
pop
push
leave
ljmp
mov
out
dec
mov
movsb
inc
xchg
testb
and
repz
mov
je
fidivrs
push
into
scas
ds
cld
aad
push
jne
ljmp
jecxz
sub
orl
xor
leave
int3
cmp
jle
lret
icebp
jl
jno
gs
in
aaa
int3
jns
jae
in
test
repz
mov
or
es
ficoml
rclb
daa
fmull
shl
adc
xor
popf
cmpsb
mov
adc
inc
out
fs
ss
lret
insl
leave
sbb
daa
dec
aam
add
sbb
jns
xchg
fucomi
fisttpl
adc
xchg
mov
leave
shll
out
je
les
andl
cmp
int3
xorl
mov
test
and
addr16
pop
aas
xorb
insl
sbb
sbb
and
jnp
mov
pop
ds
fwait
hlt
fcompl
push
pop
adc
das
icebp
mov
ja
sbb
imul
mov
addl
out
push
jb
pop
or
xor
clc
push
mov
sti
daa
fsubrs
fisubl
cltd
push
xor
mov
in
adc
add
sbb
out
outsb
sub
xor
das
leave
pop
push
push
mov
mov
xchg
cmpsl
or
add
dec
je
mov
sub
aas
loopne
or
jmp
fcmovbe
fimuls
iret
and
fldt
insb
fcoml
push
adc
outsb
cld
and
jmp
dec
xchg
notb
dec
sbb
mov
inc
stc
sbb
scas
sbb
dec
mov
push
xchg
orb
or
ja
and
inc
add
hlt
pop
xor
int3
imul
lahf
js
sub
test
jge
adc
jmp
std
dec
out
or
xchg
aas
sub
pop
dec
imulb
lods
addb
inc
xlat
stos
repz
ds
int
mov
mov
into
das
jl
roll
xchg
loop
sub
iret
and
sbb
cmpsb
and
adc
imul
inc
arpl
imul
push
jle
push
gs
cli
add
out
push
out
fwait
sbb
repz
fisubs
sub
sbb
sub
ljmp
jge
rolb
loopne
mov
xchg
clc
xchg
mov
pop
sbb
insl
or
xor
add
cmp
mov
add
sbb
dec
or
jo
sub
pop
mov
pop
addb
and
mov
or
or
cmp
js
push
sub
aaa
and
stos
push
lock
mov
jp
outsl
add
in
js
push
pop
movsb
dec
mov
xor
ret
aas
test
rcrl
push
shll
shlb
loop
in
xor
push
test
mov
or
mov
cmp
inc
les
aaa
rcl
adc
popf
addr16
xor
push
add
sbb
mov
insl
mov
mov
cmpl
dec
xor
cmp
mov
test
and
aaa
pop
mov
ret
fmull
xchg
insb
enter
lods
decl
dec
xorb
xor
adc
js
loope
mov
mov
xor
xchg
xchg
punpckhbw
iret
loop
add
dec
and
adc
aaa
gs
jge
push
int3
pop
or
shlb
inc
mov
sbb
stc
clc
out
sbbl
jge
fs
jo
cld
fsubrl
mov
call
aaa
push
push
imulb
pushf
xchg
sub
lods
pop
in
pop
repnz
addb
stc
push
mov
out
stos
sbb
movsb
test
xor
cltd
xchg
fwait
mov
push
popf
xchg
repnz
add
jl
push
mov
stos
repnz
or
pop
or
ss
cmp
fildll
fsts
scas
call
into
cmp
stos
jb
sbb
ljmp
mov
aam
fldenv
cmp
inc
push
popf
aas
lcall
sar
add
rcrb
in
lock
dec
adc
stos
push
cs
dec
aam
loopne
or
clc
fstpt
int3
stos
das
daa
xor
gs
adc
push
adc
mov
inc
push
ljmp
roll
nop
cmc
int
jno
pop
orl
fdivrs
adc
aad
jg
imul
mov
in
loopne
push
gs
inc
rclb
mov
sub
cmp
cmpsb
jg
push
loop
cmp
jecxz
xchg
test
cmp
lret
adc
or
lcall
cmovne
push
fdivl
sbb
xchg
cmp
dec
iret
loope
cmp
stos
pushf
cwtl
addb
repz
dec
out
adc
jl
fstl
pop
push
shld
fldcw
and
mov
inc
mov
and
push
ret
lret
add
iret
in
push
adc
test
mov
insl
scas
or
clc
fdiv
stos
clc
shlb
pop
fsubl
mov
orps
push
insl
les
dec
lcall
add
sbb
in
push
mov
mov
les
xchg
ficoms
mov
mov
loop
repnz
and
pop
adc
popf
push
aam
in
out
mov
and
cmpsb
and
pop
push
mov
inc
das
mov
bound
adc
sbb
mov
faddl
pop
or
fstpl
inc
jle
ja
xchg
lock
loop
inc
rolb
sub
mov
out
or
loop
xorl
pop
scas
test
jecxz
mov
and
xchg
cmp
daa
imull
jae
pushf
mov
es
or
xchg
test
mov
mov
fcmovnbe
cltd
sarb
or
mov
and
and
mov
pop
and
fiadds
bound
in
dec
mov
and
adc
lret
cmp
scas
movsb
sahf
test
add
dec
cmpb
pop
push
cs
int
cli
xor
jecxz
push
xlat
mov
add
pop
cmp
xor
inc
cs
xor
inc
inc
cld
loope
pop
xor
iret
xchg
test
out
mov
rcrb
incl
inc
jge
inc
or
sub
adc
mov
dec
adc
push
xchg
xchg
push
pushf
ds
ljmp
xchg
jg
gs
jmp
mov
xchg
pop
clc
pop
pop
add
and
lock
inc
add
and
mov
or
int
movsl
js
cmp
out
jo
in
scas
cmpsb
negb
jg
fwait
lcall
test
dec
pop
loope
test
enter
fwait
add
push
jne
mov
pusha
dec
pushf
mov
lds
xchg
dec
fbld
and
sbb
mov
addl
fsts
adc
pop
movsl
aas
push
mov
faddl
sub
imul
ror
test
fmull
push
sub
mov
adc
cs
push
pop
sub
push
leave
xor
jmp
and
and
mov
stos
dec
es
dec
xor
sbb
pop
lcall
pop
fs
pop
mov
cmp
jnp
lds
adc
jb
and
lahf
xchg
int
imul
imul
rcll
adc
out
xor
dec
push
bswap
mov
mov
pop
movsb
push
pop
loopne
xchg
loopne
mov
sub
std
mov
cmp
jecxz
dec
dec
cs
inc
stos
mov
jo
ds
jle
aas
sub
xchg
fcoml
adc
cmc
lret
mov
dec
pop
push
lods
add
cmp
push
orb
cs
sub
inc
mov
cwtl
cmc
adc
cwtl
icebp
test
mov
jmp
outsl
xchg
icebp
dec
xchg
mov
lahf
xchg
cmc
inc
jbe
daa
cmp
add
adc
xor
or
mov
sub
test
xlat
mov
movsb
adc
ss
mov
lods
xor
mov
push
sub
enter
mov
pop
cs
aad
xor
loope
xchg
mov
fisubrs
int
es
pop
sahf
push
das
js
dec
mov
and
adc
js
or
dec
scas
or
adc
outsb
push
xchg
cmp
cltd
ljmp
inc
and
xor
push
inc
ret
fstpl
rol
cld
jb
jb
adc
jno
sarb
rorl
jp
jns
clc
adcb
imul
pop
jbe
or
xchg
imulb
pop
call
cmp
dec
adc
call
stos
cmpsl
mov
jns
xorl
dec
inc
enter
jae
loopne
xchg
loop
aas
jecxz
ss
sbb
inc
rcrb
clc
leave
js
lods
push
mov
sbb
fildl
insb
dec
xchg
pop
jecxz
rolb
mov
xchg
enter
ror
fdivr
sub
xchg
test
mov
mov
cmp
out
mov
cld
jae
out
fnstsw
repnz
adc
call
stos
push
in
mov
sub
inc
cwtl
ss
push
test
pop
jge
sub
repnz
inc
jns
or
sub
mov
cs
data16
xchg
popa
and
leave
add
sbb
test
outsl
add
ret
and
sbb
pop
push
xchg
and
inc
shrl
lcall
imul
lods
push
insl
or
ljmp
imul
fsts
lods
mov
bound
sbb
icebp
push
out
push
lahf
mov
repnz
in
je
repz
bound
int3
and
cmp
or
js
lret
push
adc
inc
lahf
pop
ret
cmpsb
or
mov
fiadds
pop
xchg
aaa
adcl
fs
inc
cltd
scas
sbb
cmp
and
loopne
daa
push
xor
inc
sbb
cmp
pop
clc
outsl
mov
jge
sarl
adc
inc
aam
inc
pop
lods
dec
imul
test
pop
xchg
in
sbb
fbstp
adc
faddl
sbb
inc
mov
ficomps
mov
fists
sub
xchg
loop
mov
xor
push
js
loope
xlat
leave
jno
adc
push
pop
mov
shl
fsubrs
in
inc
jecxz
jno
pop
jo
mov
gs
shll
out
aam
jecxz
cmp
or
pop
cmp
cwtl
cmovs
dec
push
add
mov
xor
test
lahf
loopne
gs
or
adc
xchg
stos
pop
sub
fcomp
imul
ja
xchg
fwait
inc
fcoml
pop
dec
sti
xor
xor
dec
out
pop
jge
mov
test
jge
bound
rcrl
rolb
cmpsl
sahf
add
sti
pop
bound
insl
in
and
call
jns
test
fildll
mov
daa
mov
push
mov
aaa
inc
lret
jl
cmp
adc
mov
push
mov
insl
push
outsb
push
lcall
mov
sbbl
cmpsb
int3
lock
filds
clc
xchg
adc
push
testb
jp
iret
xchg
jl
push
cli
into
dec
lahf
fsubrp
dec
dec
mov
lahf
in
call
pop
insl
inc
xor
decb
xor
nop
outsb
mov
sub
sbb
jnp
pop
lcall
or
call
sub
test
out
rcll
or
or
mov
popf
mov
clc
out
push
pop
mov
bswap
movsb
mov
in
lock
mov
mov
or
adc
lds
adcb
sbb
fsubrs
mov
sub
scas
mov
hlt
push
xor
mov
iret
lret
pop
in
dec
xchg
add
inc
xlat
sub
loope
and
mov
les
inc
popf
sbb
pop
push
and
adc
cmp
mov
inc
push
ret
daa
pop
fucomp
xchg
dec
dec
and
popa
mov
add
dec
mov
xlat
fnstsw
add
gs
je
pop
jl
popf
js
adc
les
in
xchg
std
ss
jge
jl
icebp
insb
sub
push
scas
cmpsb
sub
mov
cld
inc
out
cmp
imul
or
pusha
or
sahf
arpl
fnstenv
outsl
add
sub
dec
lods
mov
cmc
adc
push
cmp
add
ds
cld
cmpb
pop
sub
dec
dec
mov
push
insl
cmp
frstor
jmp
push
sahf
pusha
adc
dec
out
es
movb
leave
xchg
loope
adc
arpl
add
ja
cs
sub
lret
leave
filds
inc
pop
icebp
clc
push
cmp
add
imul
cmp
out
dec
rorl
outsb
sbb
dec
int3
push
popa
outsl
cmp
popf
rcrl
xchg
lret
dec
pop
pushf
or
push
mov
mov
mov
jg
adc
out
xor
lods
insb
adc
xchg
pop
push
xchg
mov
sbb
push
cmp
and
shll
sbb
popa
stos
ds
cltd
or
pop
pcmpgtw
add
pop
pop
loop
xorl
pop
push
in
cmp
cmc
xlat
and
xchg
mov
es
lods
sbb
adc
out
rcrl
sub
insl
rorb
pushf
aad
jne
mov
fcmovb
xchg
fisttpll
inc
pop
cwtl
leave
mov
call
ret
outsl
dec
cmp
mul
addb
xor
jno
jns
xchg
lret
mov
or
lret
aad
into
outsl
and
loop
sbb
faddl
in
push
idiv
shl
mov
ss
mov
not
and
in
mov
out
movsl
jg
sub
lahf
addl
sbb
add
insl
jge
or
jmp
xor
lods
ret
xlat
inc
mov
jge
shll
sbb
sbb
sbb
pop
fucomip
fbstp
popa
outsb
or
mov
inc
popa
or
stos
popa
adc
jge
xchg
fiaddl
push
pop
fimuls
xchg
jb
dec
scas
shrb
sbb
pop
mov
out
xor
out
aas
push
push
push
mov
movsl
rorl
adc
push
push
xchg
mov
mov
popf
mov
pop
mov
mov
dec
pushf
jo
pop
cld
lret
lcall
lea
cli
mov
loopne
fildll
or
loop
ds
add
pop
or
aad
repnz
adc
cwtl
mov
into
lods
mov
out
lcall
adc
lock
das
in
cld
sub
xor
sub
out
rcll
int
sub
add
inc
sarl
ds
es
dec
loope
outsb
cmpl
pusha
cmp
repnz
fsubrs
shr
clc
in
jbe
jle
xor
pop
fcmovnb
int3
cld
or
mov
mov
hlt
es
int3
fbld
cmpsl
add
xor
xor
icebp
les
addr16
lods
mov
adc
adc
pop
jns
jae
or
cli
inc
sbb
loop
das
lret
dec
xchg
lods
pop
push
or
stc
add
faddl
dec
xchg
into
mov
jecxz
stc
pusha
insl
adc
mov
push
ja
pop
mov
adc
rclb
xor
cmp
xchg
sub
cmp
fbstp
pop
test
dec
xor
pop
leave
push
ss
loopne
pop
push
mov
xchg
push
inc
xchg
sarl
out
dec
or
adc
adc
aam
dec
ja
out
push
and
mov
icebp
clc
loope
mov
dec
repnz
es
jecxz
xlat
jne
or
cld
lea
jnp
ljmp
in
sbb
popf
mov
cmp
or
std
insb
push
inc
aam
mov
cmovg
cmp
call
jl
xchg
jns
int3
das
jge
ss
xchg
loopne
daa
mov
add
add
xor
mov
pop
mov
mov
test
loopne
test
inc
mov
or
scas
xor
xchg
in
and
pop
pop
leave
mov
push
lcall
push
arpl
cmpsb
push
cwtl
add
cmp
ljmp
mov
ds
xchg
andl
fdivl
inc
ret
sti
arpl
jle
or
ret
les
mov
pop
test
dec
sub
pop
repz
cmp
bsf
jns
int
stos
push
mov
shrb
lods
xchg
test
sbb
and
loopne
push
dec
aad
in
test
ljmp
and
pop
ficoms
mov
je
push
loop
roll
mov
cld
cmp
sbb
call
adc
shlb
mov
cmp
popf
mov
shll
shl
push
in
ror
sbb
iret
jae
sti
pop
xchg
fists
push
xchg
pop
mov
sub
xchg
pushf
aad
mov
cmp
popf
cmp
mov
in
stos
fisttpll
test
sbb
cmp
cmpsb
in
fsts
dec
lret
ret
popf
mov
cmp
cmp
jb
xchg
and
test
les
int
addl
sub
inc
scas
mov
push
loopne
fists
jb
ja
int
loope
call
jne
push
imulb
push
fs
push
popf
push
in
push
loop
lcall
test
jge
dec
icebp
ret
jne
mov
jb
stos
mov
lcall
lock
or
shlb
push
sub
sbb
push
pop
xlat
push
int3
sub
jno
adc
insl
out
dec
sbb
and
loop
xchg
test
fwait
jae
add
xor
sbbb
mov
pop
lods
lret
push
std
sbb
pop
dec
addl
cmp
imul
insl
add
fcompl
imul
push
jb
xchg
popa
mov
jp
icebp
mov
out
xchg
ret
dec
inc
iret
int
mov
pop
out
mov
sub
shl
adc
outsb
cmpsl
dec
out
or
mov
js
cld
shlb
mov
pop
enter
xchg
jge
mov
insb
test
mov
test
mov
jg
mov
loop
mov
inc
lods
repz
jecxz
mov
in
add
das
dec
popa
and
add
test
mov
das
jle
sbb
and
cmpb
and
into
cltd
adc
pop
push
sub
pop
inc
fsubs
bound
call
call
mov
cwtl
push
lret
mov
jmp
test
cmpb
or
outsb
jge
cmp
shrb
push
add
push
es
or
push
js
jge
or
fnstsw
jle
hlt
bound
loop
inc
roll
sub
ret
sbb
xor
push
in
cmp
movsb
orl
roll
jne
jbe
sbb
sub
js
lret
fldenv
lods
loope
push
test
push
orb
hlt
clc
and
xor
in
mov
std
in
add
mov
mov
inc
and
dec
xchg
out
test
pop
mov
sub
sbb
icebp
pop
pop
or
testl
dec
fdivl
sbb
jno
push
inc
sbb
dec
and
cs
cmp
mov
mov
icebp
adc
clc
adc
leave
lret
aaa
add
xchg
sbb
movsl
xor
jmp
xchg
lret
and
xchg
lds
sarb
pop
xor
ds
mov
adc
ja
xchg
and
jg
popf
jp
ret
xor
push
mov
lods
test
sub
cmpsb
and
imul
or
data16
adc
lods
push
icebp
stos
icebp
cmp
mov
jl
testl
or
jnp
mov
imul
xor
dec
fistpll
clc
pop
insb
out
or
je
and
test
pop
xchg
add
ja
fs
mov
cmc
mov
or
add
mov
lods
das
adc
add
jmp
roll
bound
mov
jp
daa
leave
sbb
outsb
sub
repz
popf
xchg
loope
outsb
adc
hlt
pop
cmp
outsl
pop
scas
push
and
sbbb
pop
in
mov
mov
rcr
jmp
add
jbe
ret
xchg
jmp
imul
add
movsl
pop
mov
fs
orb
sbb
mov
test
push
dec
lret
sbb
mov
arpl
mov
dec
repnz
pop
push
push
push
and
jo
cmc
lahf
push
imul
adc
or
pop
lds
mov
arpl
insb
scas
mov
into
movl
imul
mov
inc
ds
mov
pop
jmp
int
in
sti
adc
lods
mov
or
lahf
jmp
pop
sbb
lods
ds
cmc
adc
cld
negl
or
lcall
repz
add
mov
and
cltd
jle
inc
push
cmp
stc
push
in
cltd
stc
pusha
adc
out
ds
fnsave
ret
push
bound
push
xor
insb
outsl
push
sub
cs
jl
pop
pushf
test
xchg
mov
scas
xor
cmp
sub
ss
cli
add
or
faddp
fstpl
mov
adc
jle
mov
test
mov
pop
mov
jae
pop
rcl
movsb
pushf
and
jae
cwtl
or
imul
mov
jne
scas
sub
sbb
popa
repz
jo
sub
xor
cli
or
negl
movups
enter
loop
mov
or
push
std
xlat
out
ljmp
gs
mov
pop
in
jecxz
push
push
and
clc
mov
pop
sbb
mov
jmp
mov
cmp
mov
jmp
test
or
test
imul
aam
xor
xlat
sbb
xor
es
inc
cld
pop
and
sbb
mov
loope
push
loopne
push
xchg
ljmp
dec
xor
jne
repz
or
xchg
hlt
jmp
iret
mov
les
shr
and
mov
aad
cmp
push
es
shrl
mov
xor
mov
nop
push
cmp
mov
cmpsl
inc
mov
cmp
ss
fisubrl
adc
add
in
clc
mov
push
pop
cltd
inc
sbb
out
xchg
bound
add
dec
add
adc
sahf
mov
nopl
pop
inc
jmp
xor
enter
sub
jmp
not
and
jmp
sbb
cld
rcrb
xorb
xchg
int
lsl
pop
push
rol
xchg
add
data16
pop
mov
fnsave
das
movsb
out
pop
xchg
jbe
aad
inc
fs
xor
mulb
xor
cltd
mov
cmp
jmp
lds
cwtl
ljmp
jb
mov
aas
and
dec
or
gs
add
xor
jnp
dec
mov
xchg
lea
sbb
divl
inc
pop
and
jbe
and
ds
sbb
jae
jle
jns
cmp
divb
cmp
xor
lods
or
je
mov
pop
test
mov
cmp
std
pushf
movsl
xchg
inc
je
push
mov
xor
stos
sbb
test
int3
jae
mov
dec
xchg
ret
mov
xchg
fisubl
mov
out
push
lret
push
out
rorl
pop
stos
scas
repz
xor
xchg
mov
sub
lahf
push
mov
mov
mov
bound
jle
push
aam
xor
clc
addr16
mov
mov
adc
hlt
hlt
scas
js
jmp
movsb
cmp
mov
insb
mov
pop
sti
cmpsb
ficoml
inc
xchg
xchg
out
xorl
and
cmc
repz
andl
and
add
inc
cmp
mov
rclb
ja
stos
inc
mov
shl
mov
int
inc
pop
loope
in
push
lcall
scas
cwtl
and
mov
adc
dec
jo
mov
push
sub
ret
mov
push
stc
adcb
mov
mov
outsl
outsl
pop
leave
mov
lods
lret
mov
imul
aas
xorl
lods
pop
mov
xchg
aam
scas
and
icebp
cmp
shll
cli
pop
aaa
sti
xor
lods
inc
push
insb
xlat
jmp
dec
mov
rcr
fdivrs
mov
out
push
repnz
adc
aam
inc
adc
fcmovu
imul
lret
push
xor
lods
inc
or
xchg
lock
rclb
loope
mov
xor
cmp
pop
push
mov
adc
and
sub
push
cmpsb
loopne
pop
neg
push
xchg
adc
sar
dec
pusha
cmp
test
dec
lret
lret
adc
fs
xchg
test
in
loop
into
adc
test
mov
lret
adc
testb
inc
call
push
add
mov
lcall
sub
lock
xchg
fnsave
ret
insl
inc
jb
dec
aad
mov
hlt
rcrl
inc
cmp
pop
lret
add
jp
inc
mov
nop
lret
xchg
out
mov
daa
das
lods
push
sbb
aaa
aam
mov
es
in
mov
stos
pop
cltd
loopne
or
add
ljmp
xchg
enter
mov
jle
dec
sbb
mov
dec
jb
ret
jmp
stos
sbb
bound
add
adc
pop
mov
fs
pop
push
pop
out
les
in
inc
xchg
lahf
in
add
lea
imul
cmp
xorb
pop
inc
pop
enter
pop
xchg
inc
bound
mov
add
neg
lods
aad
call
popf
mov
les
aas
imul
mov
mov
sub
or
jmp
mov
stc
pop
js
adc
jg
outsb
in
std
sbb
lock
sbb
ljmp
sbb
insl
dec
dec
mov
pop
movsl
and
inc
pop
mov
jge
or
shll
dec
int3
insl
jecxz
adc
lcall
adc
add
je
mov
xchg
add
jecxz
sahf
jle
push
mov
hlt
lock
mov
mov
cmp
lret
sbb
xchg
adc
in
test
jno
les
das
mov
sbb
imul
mov
call
sbbl
and
mov
push
adc
pushf
push
dec
inc
ljmp
mov
insl
cmp
insl
daa
movsb
xchg
bound
xlat
mov
cli
mov
adc
mov
mov
iret
cmp
je
test
into
pop
xorb
inc
sbb
pop
mov
inc
mov
and
repnz
jmp
xor
cltd
push
add
lea
std
push
mull
mov
inc
sbb
and
js
std
and
dec
insl
dec
repnz
popa
int
ret
insb
stos
idivl
push
xor
lcall
jb
int
leave
push
jle
inc
scas
xor
add
or
adc
jl
dec
fisubrs
negl
iret
js
add
lods
push
xor
sub
add
into
lds
adc
add
sub
mov
adc
insb
push
mov
mov
add
xchg
rcrb
pop
pop
test
jecxz
dec
ficoms
cmpsl
inc
test
pop
loopne
aad
int3
repz
cmp
nopl
mov
xchg
jl
enter
adc
jmp
xlat
ljmp
shlb
mov
mov
mov
pop
sub
and
sub
ret
rcr
mov
and
lahf
cmpsb
loopne
xlat
pop
jnp
inc
xor
xbegin
pusha
addb
jge
pop
pop
sub
push
cmp
cmc
cmc
mov
sub
test
inc
call
dec
sub
xor
and
fnsave
rcl
dec
mov
fsubrs
mov
jb
or
sbb
sbb
pop
jns
add
dec
and
rcll
sbb
fs
dec
or
in
lods
outsl
pop
fdivrs
adc
pop
ss
stc
ss
inc
mov
addb
imul
pop
rolb
in
outsl
or
mov
inc
ret
cltd
or
loopne
cld
mov
inc
sub
or
int
dec
pushf
in
jo
scas
pop
push
addb
mov
sbb
and
std
mov
test
xchg
mov
ds
or
and
sarl
lock
add
data16
add
jne
dec
fimull
cltd
cmp
inc
jae
lods
sbb
movsl
shlb
cmp
jge
sbb
sti
sti
jns
scas
cmp
loop
adc
jne
sbb
add
das
ficompl
pop
imul
adc
pop
aaa
jg
dec
or
sbb
dec
and
push
add
pop
test
mov
test
scas
lret
in
or
push
mov
outsb
out
or
xchg
or
fldenv
jmp
and
leave
and
imul
inc
inc
lahf
adc
rdpmc
dec
adc
xchg
std
iret
daa
ret
push
loopne
aaa
xchg
dec
sbbl
pop
nop
mul
dec
mov
pusha
jno
aaa
int3
dec
push
lock
std
aad
pop
outsb
jnp
repnz
jbe
mov
mov
pop
fs
popf
sub
xor
bound
pop
sbb
inc
testl
mov
jbe
divl
je
add
sub
or
fstpt
insb
fsubrl
pop
data16
pop
cltd
push
jmp
popf
or
pop
jae
in
inc
out
dec
xor
mov
adc
pop
repz
lret
push
lret
pop
cmp
inc
fcoms
xchg
mov
adc
mov
fmuls
mov
add
sub
jae
out
nop
jp
push
add
lret
pop
push
frstor
imul
aas
hlt
fimull
mov
aas
sub
rclb
fs
and
sub
xchg
or
add
addl
xchg
movsl
imul
jg
fs
cs
and
cwtl
iret
ljmp
movb
cmpb
mov
and
insb
jae
push
xchg
jbe
dec
mov
out
in
xchg
lods
fsubp
rcll
das
pop
aam
ficoms
inc
add
aaa
mov
mov
or
insb
mulb
mov
into
xor
pop
pop
lret
mov
lds
xor
loop
mov
ficoml
mov
aas
xor
std
jno
inc
aaa
pop
imul
aam
xchg
push
ljmp
sub
cld
sub
push
lret
test
iret
mov
imul
popf
cld
sti
xor
and
orb
adc
sub
cmpsl
dec
push
lcall
mov
xchg
out
imul
rclb
stc
das
cltd
iret
add
lods
in
adc
xchg
jae
rcrb
push
mov
outsb
dec
jne
or
sbb
cwtl
or
dec
mov
lds
idivl
in
mov
xchg
pusha
out
xor
icebp
int3
pusha
fdivrl
call
add
jle
pop
jg
xchg
fwait
mov
mov
cmp
lods
adcl
pop
add
dec
popf
sbb
bound
cmpsb
lcall
adc
fisubrl
icebp
out
xchg
sbb
or
fwait
inc
jns
rcrl
jne
fiadds
cltd
rorl
xor
and
dec
inc
xor
sub
pop
cli
xchg
adc
cmp
cmp
inc
mov
cld
cmpsb
clc
test
mov
inc
cs
cmpsl
jmp
out
pop
fs
xor
mov
xchg
xchg
in
xor
testb
adc
mov
push
pop
mov
or
sbb
outsb
je
sbb
flds
push
or
in
mov
and
hlt
scas
pop
dec
xor
fldenv
insb
sbb
lret
jge
es
in
or
push
icebp
xchg
enter
adc
addr16
inc
sbb
jecxz
mov
cmp
and
and
sbb
mov
stos
or
ficoms
js
das
push
scas
xchg
mov
adc
jecxz
push
dec
into
aaa
pop
sbb
inc
cmp
repnz
cmp
test
fldt
call
mov
xor
mov
mov
add
add
stc
pop
insl
cmp
jmp
dec
dec
pop
insb
cmpsb
scas
cltd
mov
inc
pop
mov
xchg
add
or
jmp
push
mov
lods
pop
dec
xor
mov
int3
mov
mov
add
cmpsl
std
pop
scas
sub
lock
in
lds
mov
push
jnp
cld
cmp
in
inc
orps
xchg
xor
push
popa
mov
adc
pop
fiaddl
mov
add
dec
std
pop
inc
test
and
imul
loopne
sbb
inc
sbb
push
in
lret
add
jecxz
cltd
out
mov
mov
pop
std
push
aaa
or
cmp
neg
dec
stos
ljmp
out
push
sbb
arpl
mov
mov
pop
mov
pop
notb
aam
mov
fdivl
mov
dec
pop
xchg
test
lret
pop
or
into
cmovbe
out
and
rol
cld
shlb
cltd
and
pop
jns
loope
int3
mov
sbb
inc
loopne
inc
cltd
jae
in
adc
push
arpl
rcrl
addr16
jns
aam
frstor
sub
fisubrs
dec
jo
add
lret
xor
movsl
or
inc
idivl
in
or
pop
cmp
ljmp
mov
movsb
outsb
cli
mov
scas
pop
sahf
mov
andl
xchg
sbb
adc
sub
sub
cmp
xor
loopne
mov
into
inc
sti
dec
aad
add
int
lock
mov
ret
mov
xchg
test
jno
fwait
mov
add
inc
push
fsubp
or
add
jne
and
test
xor
arpl
scas
sbb
inc
xor
dec
pop
push
les
or
cmpsb
add
je
dec
inc
mov
icebp
loop
pop
movsb
in
dec
push
add
test
pop
shll
sti
inc
or
dec
or
mov
insl
leave
xor
add
lods
mov
out
orb
dec
popf
int
cmpsl
in
roll
insl
sub
xchg
shlb
jns
shlb
dec
cld
stc
mov
add
or
popa
ja
mov
lret
aaa
shll
outsb
add
insl
mov
aad
sbb
out
mov
test
dec
sahf
inc
test
pop
sqrtps
jbe
int
repz
add
jae
mov
gs
fimull
dec
fcomps
or
add
xlat
scas
pop
or
enter
ja
xchg
cmpl
pusha
pop
sub
xchg
cmpsl
shlb
test
incl
std
sti
lock
jle
or
insl
push
xor
fmull
ljmp
sbb
pop
ljmp
push
inc
aam
icebp
jmp
or
or
pusha
orb
ljmp
push
dec
aas
xlat
jp
sbb
into
adc
cwtl
push
sub
ret
jae
std
push
pop
stos
cmp
scas
dec
test
jno
inc
jns
mov
outsl
into
mov
in
pusha
adc
jbe
cld
loopne
pop
out
fisubl
rcr
iret
cltd
jo
data16
jo
jge
shr
xor
jae
xor
dec
pop
leave
push
xor
gs
add
dec
pusha
movsb
push
and
out
aam
out
push
or
movsl
sahf
and
cltd
mov
push
mov
jb
roll
push
test
je
repz
movsl
test
xchg
rolb
mov
ret
lret
add
mov
loope
mov
in
les
xchg
add
inc
insb
mov
das
test
push
mov
out
and
sub
scas
mov
rcll
and
pop
add
jle
aaa
ja
repnz
insb
out
cmp
out
and
dec
jecxz
pop
inc
cmp
in
mov
shl
aaa
push
push
jmp
icebp
sbb
jne
xchg
rcr
out
mov
gs
jno
int3
xchg
outsl
cmp
jnp
dec
jbe
loope
inc
repz
gs
imul
sbb
or
or
stos
xor
sbb
out
push
out
xor
adc
mov
push
jae
test
adc
aas
imul
movsb
clc
jne
sahf
cwtl
into
in
and
mov
push
enter
pusha
test
xor
test
push
jns
aad
add
in
in
leave
fs
sub
sub
andl
in
int3
rorl
bound
push
ror
popf
mov
cmc
mov
in
lods
sub
inc
lods
out
fwait
mov
ja
push
jb
inc
sub
addr16
push
push
jnp
pop
out
pop
jp
ficomps
inc
cmpsb
cmp
adc
xchg
test
add
mov
fcompl
inc
sarl
xlat
adc
inc
cld
fsub
std
dec
aam
movsl
neg
cltd
rcll
and
lods
and
popa
pop
fmul
imul
pop
faddl
adc
add
icebp
into
cmpb
cmp
orb
push
aas
sub
add
daa
xchg
push
push
decl
daa
mov
popa
jnp
push
les
insl
inc
add
add
hlt
mov
je
mov
adc
push
mov
inc
out
cmp
push
inc
cmp
pop
out
pop
cwtl
fdivrs
mov
dec
ds
dec
cmp
lods
mov
mov
insl
pop
fs
fs
mov
mov
fcmovne
iret
ret
dec
iret
jnp
xor
mov
fisttps
fiaddl
sub
mov
sub
repnz
fwait
mov
js
fst
test
or
imul
repnz
cmp
push
movsl
popf
sub
or
adc
mov
ja
lods
jg
sbb
adc
movsb
push
mov
jb
xlat
mov
shlb
mov
dec
sub
ret
hlt
add
sbb
fimuls
inc
inc
push
sub
sub
lea
sbb
cld
fdivrp
mov
inc
sbb
pop
cli
jo
mov
ret
fs
pop
test
jnp
mov
jne
pop
test
rcrb
add
cmp
fbld
jnp
xor
push
mov
dec
jmp
popf
jmp
out
sbb
daa
mov
mov
push
in
orl
in
sub
incb
dec
jge
cmpb
pop
das
adc
test
test
adc
scas
outsb
clc
or
or
pop
pop
hlt
dec
addb
sub
shlb
ds
pop
sub
xor
dec
cmpsb
cld
adc
push
add
les
js
push
andb
fs
pop
lcall
xchg
pop
xchg
add
push
insb
inc
push
aad
push
jb
xchg
mov
test
shll
mov
inc
out
cld
pop
mov
pop
adc
jb
lahf
arpl
ja
pop
mov
pushf
cltd
dec
ss
jmp
cltd
add
test
int3
or
int3
in
sbb
jo
inc
xchg
movsb
cmp
mov
jne
and
dec
xor
jnp
je
pop
into
jp
inc
dec
jo
pop
push
or
mov
idivl
mov
inc
out
cmp
cmc
fsubr
dec
dec
pop
inc
arpl
sbb
out
and
inc
sub
dec
cmp
mov
ffreep
fdivr
sbb
lcall
jae
jp
mov
push
mov
lahf
or
dec
cmp
xchg
dec
aad
mov
xchg
cld
jno
insl
outsb
and
fidivl
inc
mov
and
popa
std
mov
xchg
gs
add
test
aam
mov
jle
pop
push
rcll
loopne
out
jb
lcall
jne
dec
xchg
aam
pop
sbb
mov
repnz
mov
fcmovnb
test
inc
test
loope
stos
test
out
ret
rcrb
ja
mov
iret
outsl
adc
fucomp
mov
and
shl
scas
add
out
lds
sarl
pop
lods
adc
jbe
mov
jbe
clc
mov
ds
movsb
xor
dec
jge
test
popa
lahf
adc
stos
add
sbb
jb
fisubl
mov
and
jl
das
pushf
mov
je
add
push
mov
lcall
xor
add
into
pop
imul
xchg
cmp
repz
xchg
adc
jns
pop
or
fimull
out
or
pop
sbb
or
pop
xchg
loope
sub
cs
jne
push
sub
jg
xchg
ret
cs
sbb
dec
sub
int
aam
repz
jmp
dec
lret
test
repz
inc
popa
lock
mov
hlt
hlt
lret
lock
mov
in
mov
and
add
int3
mov
or
lods
add
mov
inc
insl
out
icebp
jmp
mov
mov
jae
clc
cmp
cmpsl
jae
xor
subb
and
pop
mov
repz
pop
ret
out
add
je
or
cmc
jne
cs
pushf
repnz
or
sahf
pop
fisubs
dec
clc
mov
sbb
push
scas
rcll
push
std
mov
or
mov
in
repnz
sbb
pop
sti
jnp
add
push
jge
adc
adc
lds
dec
adc
dec
loopne
daa
stos
and
bnd
jne
fnstcw
jge
lret
loopne
iret
loop
lahf
cli
adc
js
das
or
lods
into
inc
sbb
xor
jg
loopne
outsl
xchg
mov
nop
mov
mov
sbb
cs
jg
imull
aas
jnp
stc
pop
mov
cwtl
in
test
and
add
std
int3
push
imul
mov
fwait
popa
adc
sbb
jae
push
stos
sub
sbb
xor
mov
push
dec
or
aam
lahf
stc
mov
cmc
mov
mov
mov
testl
dec
lds
arpl
arpl
sub
test
adc
in
mov
data16
cmp
mov
scas
enter
pushf
mov
mov
and
push
mov
mov
lock
pusha
add
out
mov
popf
dec
ss
rcr
xchg
adc
or
mov
aad
dec
aas
xor
cld
mov
jmp
pop
rcrb
cli
xlat
xorb
push
pop
pusha
loop
or
xor
xchg
lods
ds
adc
lock
outsb
xchg
or
sar
xor
stos
xcrypt-cbc
test
insb
cmp
sbb
mov
mov
sub
in
jne
add
aad
jecxz
jle
insl
repnz
add
jle
mov
jno
jbe
dec
clc
rclb
jo
xorb
mov
dec
dec
clc
cld
xchg
push
jne
orl
aam
pop
mov
and
xlat
xchg
and
and
mov
outsl
jns
cs
sbb
pushf
lods
pop
sub
push
test
and
fwait
imul
sub
or
out
stos
xor
inc
cmp
sub
push
cmp
in
xchg
ret
insb
inc
imul
push
mov
repnz
xchg
shr
dec
xchg
pop
fisttps
dec
jmp
mov
jbe
icebp
push
pop
repnz
cmp
out
into
xchg
nop
call
dec
pop
xor
fidivs
outsl
sbb
popf
cmpl
jo
test
movmskps
add
xchg
in
fs
cltd
nop
jmp
add
mov
imul
mov
filds
adc
enter
push
mov
mov
cmp
xchg
adc
and
lock
inc
jmp
mov
bound
loope
loope
xchg
repz
imul
cli
call
adc
inc
ds
fidivrs
mov
pop
das
mov
fistps
mov
out
xchg
lods
leave
mov
add
cmp
scas
dec
stc
sub
mov
sub
mov
fsubrl
sbb
jns
sbb
bound
mov
jecxz
fsubs
repz
ret
ja
into
lds
push
cmpsb
sub
push
mov
sarl
ret
les
pusha
jmp
out
push
ja
jmp
mov
xor
repnz
jbe
push
out
cmpsb
aam
dec
lret
repz
push
aad
inc
mov
mov
mov
jecxz
sahf
mov
sar
mov
out
sub
ret
out
testb
sub
fadds
adc
sub
je
xchg
xchg
flds
adc
inc
jae
repz
pop
rcrl
icebp
mov
fs
cmpsl
pop
jp
subb
stos
lock
sti
fs
inc
pop
enter
jae
push
and
arpl
mov
movsb
sub
push
and
stc
pop
cmp
fildl
adc
shll
in
mov
gs
mov
aam
cmp
sbb
fisubl
or
add
xchg
sbb
in
lcall
fwait
xor
js
xor
movsl
into
scas
mov
push
movsb
stc
pop
ret
jp
mov
ret
xchg
idivb
adc
stos
adc
pop
cmpsb
pop
mov
repz
mov
xor
cmpsl
mov
mov
out
pushf
test
testl
sbb
sub
push
fisttpll
cmp
ss
lcall
xor
movsb
jp
lcall
jge
xchg
leave
in
jecxz
fimuls
popa
insb
add
and
mov
js
daa
mov
mov
mov
stos
rcll
pushl
add
pop
xor
xor
and
inc
fwait
inc
mov
in
out
icebp
xlat
sub
insb
jl
lret
repnz
stos
pop
movsl
jp
das
mov
pop
mov
xor
xor
push
sub
cmpsl
fs
ljmp
xor
mov
ret
push
cmp
shrb
mov
fistps
in
add
daa
int
jmp
js
push
imul
movsl
scas
push
jl
in
insl
into
add
xor
xor
test
loopne
fcompl
fs
sbb
xor
jmp
pop
sbb
shr
adc
mov
mov
fldt
lahf
daa
fidivrs
pop
cmp
jmp
jb
mov
sub
in
mov
dec
icebp
xlat
jl
ljmp
sbb
dec
lahf
insl
lahf
rcrl
mov
xchg
stc
sbb
fnsave
lods
xor
ret
into
int3
mov
sbb
popa
xor
vmovaps
outsb
popa
pushf
call
mov
loopne
cltd
sub
imul
aaa
cmp
mov
push
or
insl
aaa
loop
sti
lea
std
xchg
cmp
mov
pop
pop
fwait
adcl
inc
scas
mov
out
mov
xchg
mov
lock
test
adc
pop
jcxz
mov
test
movb
and
ljmp
push
imul
sub
sbb
idivb
jae
popa
push
mov
std
sbb
push
mov
xor
movsb
or
sub
inc
ror
aam
pushf
xchg
pop
icebp
inc
push
mov
mov
mov
rcr
add
pop
inc
fs
mov
pop
jl
shlb
xchg
outsb
repz
je
push
sbbl
mov
jb
ss
xchg
clc
lods
ret
add
sbb
sarl
mov
mov
jo
nop
xlat
fsts
subl
jne
sub
ljmp
cmp
pushf
mov
hlt
mov
movsl
xor
xorl
pop
ljmp
pop
mov
pop
jno
adc
ja
pusha
cmp
test
ret
roll
pushf
punpcklwd
push
cmp
cmpsl
test
ret
sub
je
movsl
mov
pop
jg
insb
testl
push
loopne
cmp
lret
dec
mov
pop
push
repz
in
push
out
pop
stc
cmpsb
inc
mov
gs
mov
mov
jecxz
add
in
sbb
loop
clc
push
xchg
mov
movaps
sub
ret
sahf
inc
aas
cmp
and
scas
jmp
pop
pusha
jbe
ret
fidivl
vpsubb
shr
out
mov
popf
iret
or
mov
ljmp
leave
fucomi
loop
mov
dec
pop
insb
and
mov
lods
mov
cmp
add
cmpsl
mov
inc
shll
jle
rorb
hlt
vmulpd
pop
in
aas
mov
xchg
pop
xchg
dec
movsl
aaa
sbb
jns
dec
xchg
push
notb
loope
or
test
pop
jns
fucom
loop
icebp
add
xchg
roll
jg
jno
and
imull
test
ss
hlt
inc
push
jno
mov
jg
ljmp
popl
push
pop
test
sbbb
xor
jns
pop
or
dec
jle
xlat
mov
lcall
in
jg
mov
lahf
adc
test
call
divl
xlat
sbb
lock
xchg
imul
iret
mov
xchg
mov
inc
push
aam
mov
fmuls
adc
cmp
xchg
dec
dec
jne
movl
popa
inc
inc
jne
mov
in
gs
mov
frstor
int
adc
dec
mov
cmp
fildl
pop
fsubrs
xor
fisttps
ficomps
mov
arpl
out
jmp
lods
xor
rolb
dec
fistpll
mov
push
add
jle
mov
rorb
jbe
es
aad
push
jp
push
loopne
and
jae
clc
out
cmpb
test
mov
push
test
dec
dec
mov
sbb
add
mov
push
mov
mov
cmp
dec
jg
aaa
out
ss
imul
sbb
mov
sub
leave
cmp
jle
or
scas
xor
xchg
adc
mov
in
rcrl
jmp
test
sub
or
mov
inc
std
ss
stc
into
dec
cmp
and
test
or
dec
shll
cmp
and
xor
add
dec
xchg
inc
xchg
xchg
in
pop
xor
inc
mov
mov
test
xor
movsl
cmp
xor
xlat
xor
fisubs
sbb
cmp
jecxz
addb
jo
ja
xor
or
es
add
cld
add
ret
mov
cmp
popl
mov
mov
add
clc
mov
ror
mov
ret
out
cwtl
pop
cmp
stos
or
int
lods
aaa
pop
add
or
sbb
mov
lcall
mov
mov
cwtl
rcll
inc
and
lods
fcmovne
pusha
jnp
imull
sahf
xchg
out
push
inc
and
adc
inc
cli
xchg
out
jle
pop
mov
fisttpll
in
sub
xor
jo
pop
mov
inc
fmull
out
sbbb
mov
lret
hlt
dec
mov
ljmp
xlat
pop
inc
and
sbb
insl
lock
cli
sub
push
outsb
js
fmul
ret
flds
push
mov
mov
xor
fs
jle
add
loope
sti
bswap
mov
inc
cmp
dec
scas
mov
or
adc
jmp
and
cmpsb
insl
pop
insb
aam
cld
fiadds
popf
dec
or
ja
sub
ret
xchg
jp
outsb
mov
in
filds
xchg
mov
ss
jne
dec
divb
and
fisttpll
add
push
push
pop
xlat
inc
pushf
mov
jmp
mov
lea
movsb
insl
pusha
jmp
push
leave
fwait
cmp
in
and
ljmp
lock
andb
add
rcrb
cmp
jp
dec
xchg
push
push
adcl
push
push
fwait
xchg
jmp
rorl
pop
cmp
cmp
lods
add
or
fs
jle
inc
push
sub
call
sub
lock
xchg
ret
cmc
jle
adc
pop
test
sbb
push
addb
or
adc
imul
push
pop
mov
mov
es
mov
nop
dec
add
add
in
sub
and
or
xor
dec
cmp
popf
stos
dec
imul
mov
aam
and
pop
cmp
adc
jae
add
mov
fs
test
fisubrs
mov
or
pop
cmpsl
mov
xchg
inc
sahf
adc
stos
ljmp
in
cmpsl
adc
sub
sbb
negl
push
repnz
shlb
inc
xor
cmp
xchg
clc
mov
jb
mov
push
pop
add
enter
ret
aaa
mov
or
xor
fstpl
stos
into
push
mov
cld
andl
in
arpl
sbb
jns
loopne
adc
jo
setb
enter
push
outsl
jbe
ret
pop
hlt
pop
je
stc
sub
cltd
icebp
dec
and
mov
nop
scas
inc
lods
lds
imul
sbb
jbe
cmp
pop
clc
add
dec
mov
out
cmp
int3
jge
stos
dec
cmpsl
imul
xchg
push
enter
pop
inc
test
or
mulb
dec
dec
adc
pop
mov
pop
jp
pushf
dec
fistps
or
inc
mov
aas
push
jge
dec
outsb
fwait
movsb
mov
sti
faddl
push
fidivl
mov
subl
sub
fisubs
dec
mov
js
sbb
inc
ss
pop
lods
dec
div
pop
fs
push
push
dec
sbb
jb
adc
sahf
lods
stc
push
and
pop
lea
mov
test
sub
pushf
and
mov
mov
xchg
cld
jl
les
jb
outsb
je
mov
or
lret
xchg
add
inc
add
jmp
aaa
inc
inc
imul
into
ret
or
jecxz
or
xchg
rolb
and
push
in
push
and
push
push
dec
jae
mov
push
mov
andb
popa
lea
xor
ja
add
dec
jmp
cmovo
inc
cs
lret
dec
mov
sbb
negl
push
or
jne
aas
or
lods
mov
movsb
popf
cmp
popa
xchg
dec
inc
in
sbb
orb
xchg
in
cmpl
or
mov
cmpsl
adc
andl
dec
cmpsb
fbld
shl
sub
inc
call
dec
jne
out
lods
sub
div
lahf
dec
xlat
push
test
sarb
xchg
xchg
js
lods
rolb
dec
add
into
insl
pop
test
loope
xlat
mov
aam
ds
adc
mov
adc
mov
inc
mov
dec
daa
cmp
sbb
xor
dec
jae
xor
in
xchg
fwait
or
neg
push
dec
rorl
or
push
xchg
in
fimuls
arpl
stos
push
pop
hlt
push
test
cmp
sti
cld
imul
jecxz
xchg
scas
push
push
adcb
cmp
icebp
jbe
push
push
push
rol
mov
clc
movsl
pop
inc
fisubl
jp
sahf
mov
imul
ds
ljmp
daa
mov
scas
loopne
test
rcrb
int3
loop
adc
cmc
mov
push
int
lods
jge
xchg
rolb
cmp
movsb
addl
and
inc
ja
fidivrl
mov
mov
push
dec
mov
popa
mov
xchg
push
popf
insb
pop
push
in
push
push
xor
or
push
mov
out
and
sahf
js
notb
arpl
mul
cmp
leave
sti
out
loope
cmpsl
mov
mov
adc
inc
xchg
insl
enter
xorl
xchg
stos
sub
out
les
push
aam
aam
pop
and
mov
cmp
xlat
pop
bound
push
jg
das
dec
insb
or
sbb
subl
jne
les
mov
sub
xor
adc
insb
ljmp
adc
rcll
dec
adc
shrb
clc
sub
je
gs
and
mov
mov
jae
inc
fisubl
negl
addr16
repnz
fsubrl
repz
daa
lcall
xchg
repz
xchg
push
cli
dec
or
xchg
pop
or
es
adc
int3
or
dec
inc
dec
sbb
xchg
mov
add
in
inc
xchg
testl
int
xor
push
mov
imul
call
arpl
sbb
lds
mov
jnp
insl
cmp
fst
xchg
stos
pusha
mov
push
movsb
lret
call
faddp
jmp
jno
mov
mov
inc
and
mov
push
sbb
outsb
sti
fnstsw
negb
and
mov
xor
inc
dec
repnz
test
pop
shll
out
popa
cmp
xchg
scas
leave
push
decb
sti
pop
repnz
mov
sub
mov
in
dec
aam
adc
push
or
imul
sub
mov
rorl
jne
mov
push
push
fisubl
aad
jecxz
leave
mov
je
out
sub
iret
aam
stos
call
mov
int
fwait
jne
xchg
cmp
xchg
rclb
jp
sbb
jae
roll
sarb
repnz
mov
mov
fwait
ljmp
inc
add
cwtl
int
in
std
sbb
jb
and
sub
pop
cmp
pop
sar
insb
imul
and
pop
fsubp
and
push
adc
jnp
sbb
es
mov
ljmp
sahf
ss
aaa
dec
pop
es
jns
jns
js
fstpt
sub
leave
sub
pop
add
push
sub
in
ret
mov
pushf
pop
and
stos
cmp
mov
add
nop
push
push
je
jecxz
stos
and
les
popa
jbe
fcomps
inc
xor
sub
scas
in
in
andl
xlat
mov
add
stc
xor
scas
jecxz
add
sbb
pop
push
test
jns
aaa
add
out
js
or
or
call
xchg
mov
jno
mov
adcl
imul
mov
mov
jmp
cli
ret
push
loop
fistl
js
ret
adc
mov
xor
dec
adc
pop
cltd
in
inc
pop
jge
ja
mov
adc
xchg
mov
fimull
flds
pop
push
mov
scas
daa
out
cmpsl
lret
jecxz
push
jmp
mov
mov
adc
iret
mov
outsl
inc
cmp
repnz
add
mov
sub
inc
fwait
scas
lcall
and
sahf
repz
ret
lret
or
mov
jecxz
mov
movsl
cmp
lahf
insl
or
add
popf
repz
dec
js
add
mov
mov
jbe
xor
add
adc
jno
jno
mov
inc
loope
push
mov
add
adcb
in
sbb
mov
push
addr16
mov
das
xchg
rcll
cmpsl
jmp
mov
or
sbb
xchg
rorl
adc
xchg
mov
aaa
push
xchg
mov
aad
or
sub
mov
stc
xchg
test
in
mov
testb
outsb
push
bsf
xor
incl
sbb
push
xchg
imul
rorl
xor
jg
lcall
jecxz
push
iret
sub
sub
inc
cmp
movl
cli
pop
scas
push
push
addr16
fmull
xchg
fsubs
mov
das
push
andl
dec
into
outsb
sub
mov
pushl
data16
cltd
test
push
or
call
or
adc
out
jmp
test
insb
aam
aad
xor
inc
dec
mull
iret
xor
test
pop
and
jl
xor
fimuls
dec
sbb
xchg
inc
jecxz
mov
xlat
call
pop
push
mov
or
adc
aad
adc
addr16
je
mov
popf
fidivrs
mov
pop
ret
and
jno
int3
sub
addr16
mov
or
aas
fidivrs
sti
push
jmp
jne
sbb
push
mov
scas
mov
out
clc
shlb
rcrl
mov
testl
jne
xor
cmp
push
test
mov
mov
pop
cmp
in
xchg
lcall
mov
push
adc
push
enter
aad
lret
cli
clc
lods
xor
xor
out
pop
shll
add
fldt
dec
and
pop
adc
adc
xchg
or
dec
mov
mov
aas
and
iret
das
loop
pushl
shr
mov
fdivrs
into
sbb
cmp
pop
and
xchg
lret
outsb
cmc
mov
push
jmp
je
leave
mov
enter
xchg
dec
cmp
push
loop
add
repz
jae
cwtl
repnz
in
lods
push
sti
inc
aas
ds
xchg
fsubrs
and
ds
pusha
ret
xchg
adc
movb
loopne
sbb
cli
lret
pop
inc
mov
mov
xor
jmp
mov
adc
push
mov
push
push
bswap
lods
fidivl
ss
pusha
std
out
mov
enter
lret
cltd
icebp
lods
test
je
fcomip
sub
aaa
adc
ljmp
ljmp
loope
mov
jbe
xchg
mov
or
cld
mov
inc
in
pop
jle
push
pop
cmpb
repnz
test
or
flds
mov
stc
mov
pop
imul
sub
mov
inc
fadd
and
cwtl
data16
mov
ret
jge
fisubs
inc
popf
lahf
and
push
sub
sub
and
les
imul
inc
jecxz
jae
and
clc
dec
or
sarb
in
xchg
add
and
int
pop
and
sub
push
pop
jae
mov
lock
stos
push
sahf
add
inc
push
sbb
xor
aas
pop
add
push
leave
sub
sbb
pop
test
imul
dec
test
addl
push
ds
sbb
mov
std
fwait
enter
xchg
xchg
xor
repz
das
adc
in
mov
adc
fldenv
sbb
in
clc
dec
fldln2
data16
mov
inc
jno
push
xor
jl
push
cs
rcrl
inc
aas
ret
mov
and
cmp
mov
insl
mov
push
sub
sub
movsb
dec
pushf
in
dec
insb
dec
aas
pop
pop
inc
add
xchg
pop
ja
lret
push
pop
shlb
stos
mov
mov
addr16
mov
ret
daa
shrl
lock
xor
pop
pop
add
xor
gs
dec
cs
jb
dec
cmpb
mov
mov
jnp
mov
test
mov
movsb
sbb
inc
ret
scas
push
xchg
inc
cmpsl
mov
pop
pop
pop
jmp
push
add
pop
adc
nop
mov
push
ss
data16
in
jle
test
xchg
ret
out
or
sahf
add
scas
pop
xor
xchg
cmc
inc
mov
cmp
mov
lcall
jle
ds
jmp
in
daa
or
js,pt
inc
dec
ret
out
rclb
push
in
jg
sbb
inc
hlt
jge
stos
push
idiv
rcrl
rcl
jns
js
jp
cld
rcr
scas
jne
mov
push
int
inc
outsl
mov
call
lods
sbb
cmp
push
int
add
xchg
fistps
dec
sub
cwtl
and
cmpsl
orl
xor
test
pop
sub
in
insb
push
out
adc
jp
inc
xchg
mov
jl
scas
inc
je
cs
push
jne
mov
sbb
ret
mov
repz
pop
scas
dec
rcrb
mov
sub
xor
push
fsubp
ds
repz
test
xor
inc
pop
daa
movsb
test
mov
test
in
mov
lods
mov
mov
adc
inc
cmp
ret
pop
push
insl
sbb
adc
xchg
out
inc
fldcw
and
mov
int
jno
mov
add
fsubrp
cltd
xchg
mov
dec
lods
dec
jg
fisttps
inc
xor
andb
push
cs
lds
sub
mov
sbbl
aam
cli
jno
insb
add
push
mov
clc
and
cmp
test
xor
in
js
cmp
fildl
sbbb
xor
sub
fmull
sbb
sbb
repnz
int3
add
lcall
push
mov
jmp
add
cmp
pop
cmpsb
push
insl
pop
push
mov
jno
mov
cmc
or
repz
pusha
xchg
outsl
dec
adc
dec
out
ldmxcsr
or
or
mov
scas
inc
dec
out
dec
insb
pop
xchg
out
cmp
or
lods
mov
shl
jmp
push
jns
fmul
test
jb
mov
jnp
sahf
add
xor
xchg
das
mov
subb
xor
cmp
jbe
dec
adc
mov
pushf
inc
jnp
shld
add
cmpsb
movl
test
jno
adc
mov
xor
test
aad
mov
mov
stc
rcrl
xor
xchg
out
test
aas
xchg
popf
push
adc
inc
and
and
out
mov
xor
adc
mov
out
out
jecxz
leave
jno
in
sahf
testb
or
mov
add
xchg
pop
pop
mov
cmp
pop
xchg
cmpxchg
out
jno
cwtl
inc
lahf
push
outsb
je
mov
call
cmc
decb
addr16
test
jecxz
ds
xchg
mov
fcoms
dec
mov
pop
lcall
pop
and
pop
inc
cmpsb
jbe
xchg
mov
std
dec
inc
cmpb
sbb
iret
inc
lahf
clc
pop
lret
shr
xchg
dec
int3
fsubr
movsl
sub
bound
mov
movsl
shl
movsb
rclb
lods
cld
xchg
loop
mov
aad
ljmp
mov
outsl
fcoms
jp
daa
mov
das
xchg
inc
in
nop
lods
clc
stc
mov
sub
and
outsb
imul
pop
sbb
xor
scas
fcmovnbe
outsl
push
fsubr
adc
push
hlt
int
xchg
popa
repnz
jmp
jl
bound
dec
ljmp
mov
sub
pushf
loope
adc
xchg
pop
fdivrp
ja
out
pop
lods
je
fidivrs
add
and
adc
xor
ljmp
mov
in
icebp
mov
xchg
pop
dec
rol
xlat
sahf
xchg
pop
xor
push
int3
lea
leave
fsubrl
jecxz
shr
push
xchg
popa
jl
jb
jg
jg
push
cmp
dec
xrelease
cmp
pop
mul
inc
lret
inc
dec
int
rcll
popa
xor
in
xor
push
inc
adc
and
sub
jg
add
jmp
adc
or
cltd
sbb
imul
xchg
inc
and
mov
inc
scas
cmp
aaa
ret
or
das
js
enter
add
scas
adcb
insb
sub
sub
pop
jb
loopne
movsl
pop
lret
arpl
rcll
xchg
inc
cli
jg
mov
jae
enter
push
test
jmp
xor
mov
int
xor
or
inc
cmp
pop
adc
fwait
lea
mov
roll
gs
sub
push
and
inc
fstpl
inc
mov
mov
test
dec
out
xor
jge
push
pop
insb
aas
sub
fildll
mov
daa
lods
adc
les
jne
scas
and
push
cs
xor
inc
nopl
aas
xchg
add
lods
mov
mov
sub
fildl
sbb
ret
gs
je
mov
xchg
lret
pop
cmp
xchg
aaa
xor
add
outsl
into
out
xor
xlat
int3
jecxz
leave
repnz
dec
push
es
lret
fstps
dec
dec
bound
clc
shll
cmp
lret
xor
dec
ds
sbbb
push
loop
xchg
push
push
xchg
out
mov
clc
mov
scas
adc
adc
jne,pt
mov
xor
push
cltd
outsb
add
sahf
int
movl
dec
mov
mov
dec
sahf
cmpsw
cltd
mov
gs
popa
cwtl
insb
mov
mov
icebp
lcall
sbb
stos
or
call
xor
or
das
lock
ret
ficomps
scas
int
js
xorb
addb
xor
insb
bound
sbb
arpl
ja
mov
dec
lret
xchg
cwtl
jp
ds
scas
out
lds
mov
lret
mov
lret
lds
das
aad
aaa
cmp
stc
dec
and
fs
mov
xchg
ret
idiv
out
cltd
and
dec
inc
jo
testl
pop
push
sarl
push
aas
pop
sarl
xchg
xchg
mov
xor
fdivs
inc
dec
call
jg
inc
pusha
test
dec
xor
ret
mov
fwait
xadd
gs
inc
add
inc
out
mov
in
mov
leave
sub
enter
cmp
pop
mov
push
lahf
cmpsl
push
sbb
xor
adc
mov
fcoml
fwait
mov
jge
je
add
stos
jns
fnstsw
je
lret
ljmp
xchg
sbbl
add
cmp
adc
fistl
adc
mov
push
pop
mov
in
test
in
lret
and
sbb
mov
fisttps
loop
jmp
stos
lret
xor
ret
mov
sub
adc
push
jb
icebp
popl
andl
test
stos
push
aad
xor
xchg
add
lcall
pop
ret
add
cltd
clc
push
leave
fs
sbb
cld
cltd
inc
test
xor
daa
cwtl
imul
test
mov
dec
or
out
popf
in
pop
push
dec
rorb
fsubrs
or
mov
pop
and
jmp
mov
mov
jmp
push
xchg
or
mov
mov
sbb
movb
inc
imul
out
sbb
jns
add
ja
mov
xchg
scas
dec
dec
cli
add
aad
test
daa
jge
rolb
out
adc
or
ja
inc
add
fisubs
shl
pop
bound
rcr
adc
jp
pop
enter
dec
and
xchg
sahf
btc
out
xchg
pusha
xlat
aaa
imul
insl
push
mov
adc
js
jge
test
cmpl
cmpsl
xchg
mov
push
lds
addr16
push
mov
clc
sbb
psubw
xor
test
and
jne
jb
jp
pop
push
cmp
scas
aaa
loope
xor
movsb
xor
mov
mov
aaa
mov
popf
mov
and
mov
add
adc
push
fcompl
out
inc
loope
cmp
in
jecxz
imul
sub
push
push
cmp
nop
push
lret
popa
or
jle
pop
inc
les
popf
and
imul
js
out
push
mull
and
jl
ret
fwait
or
shrb
and
out
adc
fiaddl
inc
in
lds
xchg
lahf
pop
or
aad
lea
scas
inc
shll
mov
addr16
or
xchg
dec
sbb
pop
cmc
mov
in
xchg
adc
jb
mov
cmpsb
lea
adc
ret
mov
mov
dec
jb
into
cmp
dec
clc
fwait
sub
jp
faddl
jne
pop
mov
dec
loop
sub
movsb
xor
sub
int3
mov
mov
pop
cld
push
xlat
divl
mov
imul
sub
popf
call
leave
inc
adc
adc
xor
aam
inc
in
shlb
jae
enter
sub
or
nop
das
jbe
je
lahf
inc
inc
js
pop
jge
xchg
adcb
je
mov
dec
fwait
pop
mov
mov
push
push
inc
in
cltd
mov
call
and
dec
adcb
movsl
rorl
adc
or
test
inc
mov
filds
add
cmp
pop
add
pop
mov
call
xlat
add
cwtl
or
cmc
outsb
push
add
inc
cmp
cli
lret
dec
mov
jmp
fldcw
mov
icebp
inc
sbb
inc
fnstenv
loope
cmc
rclb
das
mov
sbb
sub
jb
xchg
fld
stos
xlat
je
cld
push
lea
xor
add
push
mov
pop
je
mov
cli
roll
aam
icebp
sub
push
inc
sbbb
fbstp
pop
shl
clc
sub
stos
roll
test
pop
lds
inc
stos
mov
test
ljmp
mov
ret
xchg
icebp
out
inc
imul
mov
ds
call
xchg
adc
inc
adc
push
and
adc
and
or
or
dec
stc
jp
sbb
scas
jg
inc
or
mov
mov
jb
pop
aaa
push
ret
cli
fsubrl
cwtl
ret
or
outsl
mov
int
int3
jb
add
sub
call
mov
movsl
xchg
xlat
mov
mov
popf
int
sub
in
repz
push
in
and
sbb
int
popf
jmp
stos
in
or
cwtl
imul
lahf
bound
mov
add
out
and
jecxz
push
stos
push
adc
mov
pop
cmpsb
clc
imul
add
lds
push
xchg
mov
or
imul
out
imull
xor
les
std
mov
dec
icebp
pop
lea
pop
xor
mov
jmp
loope
adc
pop
cmpsb
incl
notl
jle
jo
aaa
mov
and
jg
pushf
lahf
aas
mov
fsubrs
test
sbb
in
das
lea
outsb
lret
and
stc
cmp
inc
outsb
or
dec
leave
arpl
aad
scas
dec
lock
loopne
push
fs
push
mov
es
mov
rcrb
pop
or
fdivs
jg
jp
psubsw
and
testl
ss
and
dec
aas
mov
adc
cmp
inc
sub
sbb
mov
addr16
outsl
pandn
adc
mov
jbe
dec
enter
call
cwtl
ret
int
xor
adc
popa
xchg
add
xor
insb
add
pushf
pop
ss
inc
arpl
xchg
fnstsw
aas
cmp
ret
mov
lret
data16
mov
sub
ljmp
cs
dec
jo
mov
jmp
and
nop
fisubrs
adcl
push
jmp
cmp
jno
fsubl
push
pop
xlat
dec
mov
insb
push
pop
subl
mov
repnz
pop
or
lret
std
mov
fucom
loope
rcrb
lods
add
rcll
or
push
xchg
push
xchg
lea
add
das
mov
jno
imulb
dec
inc
mov
pop
outsb
inc
scas
insb
cmp
pop
ret
push
aad
lcall
and
jae
shll
mov
fisubrl
cmc
mov
scas
lods
mov
lcall
cmpl
jmp
mov
out
mov
sub
xlat
or
mov
jecxz
ljmp
xchg
mov
jle
push
outsb
dec
adc
or
icebp
push
es
push
push
jp
rclb
inc
add
mov
jmp
mov
test
lods
jne
xchg
xchg
std
insb
or
push
jecxz
or
adc
lcall
jae
filds
es
rorl
jnp
dec
jb
mov
add
add
adc
testb
sbb
mov
lds
sub
es
pop
push
inc
loopne
jae
jbe
pop
subb
movsb
and
jle
mov
lods
jecxz
ss
sub
es
lods
lahf
and
in
add
jp
fnstenv
hlt
and
shrl
sarl
adc
popf
ss
ljmp
shl
pop
adcb
jb
jbe
jg
mov
sub
adc
in
aaa
cmp
cmp
pusha
mov
xor
or
lret
nop
aaa
pop
mov
xchg
and
aas
and
pop
out
fs
xchg
cmp
lcall
movsb
imull
cli
ret
fwait
adc
cltd
push
push
adc
mov
mov
fmuls
mov
icebp
popa
loope
bound
pusha
mov
cmp
dec
pop
mov
pop
and
xor
out
push
mov
int
popf
cmp
loopne
inc
mov
push
or
push
mov
push
xor
xchg
adc
or
jno
and
jp
dec
sbb
das
or
xchg
into
dec
add
sub
sub
dec
add
jecxz
cld
mull
jmp
jbe
mov
or
fcmovnbe
je
jecxz
inc
lock
idivb
add
rcrb
das
jbe
xchg
xchg
fs
pop
cmp
in
ret
jmp
leave
xchg
lods
les
loopne
popf
xchg
insb
out
pop
fldt
sahf
dec
scas
mov
mov
pop
es
xchg
dec
pop
jo,pt
jno
xchg
int
mov
sbb
or
dec
xor
xlat
repnz
jbe
mov
mov
push
loope
ret
pop
jbe
push
and
aam
stc
rolb
add
sub
or
fcomps
push
ds
xor
shll
sub
sbb
mov
adc
fidivrs
stc
jno
loopne
jne
push
or
pusha
jno
xchg
push
push
mov
dec
pop
xchg
jmp
aaa
ficoml
insl
mov
test
pop
je
pop
arpl
push
and
test
mov
cmp
or
shll
add
popa
fucomp
movsb
xchg
pop
jae
and
jl
fwait
pop
enter
out
out
fimull
jbe
pushl
and
bound
test
dec
imul
ljmp
dec
aam
fisttps
addr16
call
dec
loope
cmpsl
cld
ss
jp
add
xlat
pop
lret
push
xchg
je
fimull
ja
in
jno
aas
mov
test
data16
loope
pushf
sbb
movsb
xchg
jge
gs
insl
lock
sbb
movsl
fidivs
inc
mov
lea
and
orl
repnz
loope
imul
push
fldl
bound
sub
shll
sbb
into
or
in
jae
inc
mov
movsl
jne,pn
mov
pop
sarb
pop
addl
daa
ds
loope
adc
or
lret
sub
sub
pop
cltd
mov
mov
js
out
mov
lret
lahf
and
or
cmpsb
pop
jp
mov
sub
xor
jno
add
pop
or
gs
repnz
lret
jge
push
aad
imul
xchg
mov
icebp
mov
inc
and
jo
mov
mov
in
pop
shlb
repz
and
adc
call
adc
gs
inc
mov
pop
lds
test
ja
mov
iret
jmp
iret
pop
inc
pop
inc
xchg
inc
or
test
jecxz
cwtl
xchg
add
jecxz
pushf
pop
ficoms
add
call
in
push
jb
stc
dec
shll
sbb
dec
outsl
out
inc
jae
dec
mov
jecxz
inc
lods
int
pop
cmp
xchg
call
lock
push
and
sub
dec
or
insb
push
jg
test
jmp
enter
fisubs
ss
pushw
ja
cs
lds
hlt
inc
mov
cmp
jle
mov
xchg
pop
xchg
loopne
scas
inc
lods
adc
lret
mov
data16
pop
andl
shll
ja
pusha
xchg
popf
aam
mov
cmpl
xchg
cltd
cmc
jmp
mov
cmpsl
dec
adc
cmp
ret
je
jecxz
das
dec
or
pop
int
loopne
je
popf
pop
mov
loope
mov
out
ljmp
sbb
mov
aas
loopne
cltd
mov
outsb
arpl
dec
loope
dec
les
or
test
xor
stc
cmp
jnp
lahf
xor
movsl
ja
mov
sbb
scas
into
sbb
rcl
imul
aaa
int3
add
sub
xchg
out
arpl
dec
int3
xor
mov
push
notb
add
fsubrs
dec
cld
lcall
repz
pop
adc
ljmp
pop
dec
jmp
fs
push
aas
cwtl
add
inc
nop
pop
rcll
pop
movsl
mov
inc
jecxz
into
sbb
xor
decb
cmc
push
shll
xor
stos
imul
xchg
imul
inc
movb
out
jae
adc
insb
xchg
pop
and
push
xlat
jno
dec
xlat
mov
mov
push
loop
stos
pop
xchg
push
jle
pop
ss
mov
xchg
adc
inc
push
or
fadds
and
pop
mov
insb
push
movsb
adc
pushf
xchg
pop
pop
or
scas
aas
pop
adc
and
shrl
or
icebp
dec
rorb
aam
xor
fildll
mov
lcall
fimuls
cld
pop
cmp
inc
shl
jb
push
push
mov
adc
cmp
in
or
popf
push
imul
jbe
cmpsb
jge
inc
lock
sbb
aad
cmpsb
sbb
sub
push
fisubrl
insb
outsl
mov
fcomip
aas
es
pop
clc
fisubrl
sarb
mov
sub
negb
push
popf
ja
adc
icebp
rcrl
jg
loope
jb
push
scas
add
std
int3
add
andb
dec
jmp
push
lods
ja
shlb
jle
push
imul
xor
xor
or
pop
cmp
mov
fmull
dec
lcall
bound
mov
jl
pop
scas
movsl
lret
jbe
ds
adcl
or
repnz
push
mov
sub
js
mov
repz
sub
dec
dec
mov
mov
push
sub
adc
add
add
ret
outsb
xchg
int
sub
mov
div
inc
mov
mov
mov
add
loope
inc
pop
and
jbe
es
adc
in
lds
add
call
pop
jno
xchg
ja
add
scas
fistl
pop
sub
push
ljmp
inc
and
sub
sbb
xor
movsb
mov
cld
mov
lock
push
roll
push
jl
bound
jl
sahf
enter
add
rep
mov
or
std
add
push
mov
jge
cmp
push
fmull
out
add
fisttpl
fisubrs
std
shlb
idiv
call
pop
inc
dec
lcall
dec
push
jmp
lret
xor
fcoms
xchg
inc
das
adc
or
lret
or
jbe
pop
js
push
movsbl
adc
jp
jb
xchg
inc
xor
lret
add
lods
out
add
ja
stc
add
in
popa
mov
pop
mov
push
imul
mov
lods
nop
push
gs
ds
icebp
dec
cmpsl
cwtl
cmpsb
enter
sub
mov
mov
mov
cli
ret
jge
ret
pop
xchg
ret
xchg
or
xchg
adc
or
cmp
mov
mov
xor
dec
push
xchg
dec
clc
pop
dec
inc
push
and
pop
or
lcall
jae
push
xor
xchg
mov
adcl
and
gs
jmp
inc
ds
adc
clc
sbb
inc
mov
or
pop
xchg
imul
icebp
xchg
in
sub
bound
out
inc
push
pop
movsl
push
add
dec
or
imul
das
add
push
fmul
or
fwait
lahf
and
xchg
add
test
push
push
sti
or
aas
and
cltd
movsl
push
aad
imul
test
dec
adcb
add
out
cmpsb
cmc
xor
sub
cmpsb
jecxz
cltd
inc
pushf
ret
scas
push
cmpsl
add
bound
outsb
repz
mov
jbe
mov
sbb
mov
addr16
mov
lds
xor
lock
bound
bound
and
fadd
or
xor
mov
nop
jae
in
inc
pop
cmp
jmp
or
imul
dec
mov
fs
pop
cmp
mov
sbb
enter
and
test
scas
sti
es
insb
sub
aas
push
pop
sub
dec
xor
or
fs
insb
scas
mov
out
jb
mov
ret
dec
scas
mov
cmc
pop
js
nop
cli
push
fiaddl
mov
ss
aad
lods
shl
push
inc
inc
dec
icebp
inc
adc
jmp
lcall
mov
or
xchg
lcall
repnz
mov
sub
inc
flds
rclb
ret
aaa
nop
pop
rorl
xor
jmp
xchg
leave
lea
dec
sahf
stos
outsl
jne
insb
repz
lahf
mov
pop
or
notrack
jle
fsubrl
mov
out
xchg
movsl
icebp
mov
cmp
inc
dec
jle
xor
insb
leave
and
cmp
imul
sub
add
in
mov
test
das
das
insb
pop
mov
adc
dec
leave
xchg
rcrb
sbbl
pop
and
imul
mov
or
insb
push
stos
imul
xchg
nop
cmp
add
and
mov
jecxz
dec
adc
or
add
jecxz
dec
fcmovbe
mov
test
lret
inc
dec
xor
test
packsswb
dec
adc
dec
mov
cmpsl
shl
push
popl
test
stos
push
mov
and
sbb
and
jbe
adc
loope
aaa
aam
jne
je
xor
xor
mov
std
and
xor
call
jl
jge
pop
jno
imul
xorl
sbb
out
or
sub
fdiv
rcll
sbb
inc
pop
pop
and
sti
loop
sbb
fs
icebp
call
pop
inc
inc
cli
sarb
into
call
sbb
cmp
out
popf
stos
in
scas
adc
addb
stos
or
in
sahf
lods
or
mov
sahf
loope
adc
iret
mov
xor
lods
dec
mov
in
xor
dec
pop
push
or
mov
pop
mov
out
adc
lret
jmp
lods
movsl
aad
xor
push
jg
dec
sbb
es
das
sti
mov
and
popa
mov
fs
pop
out
int
sbb
icebp
data16
or
sbb
cmpsl
arpl
aaa
sbb
or
xchg
mov
leave
enter
loop
movsb
cmp
xor
push
push
xor
repnz
sbbb
inc
clc
ficompl
mov
xlat
js
mov
pop
cmpsb
push
outsl
ljmp
mov
fiadds
jns
inc
mov
iret
insb
out
stos
pop
mov
lods
and
lds
movsb
mul
stc
adc
sub
addr16
inc
sbb
rorl
add
test
gs
xchg
bound
jno
repz
aas
mov
in
repnz
sarl
jge
sub
out
mov
mov
testl
mov
rolb
xchg
mov
jecxz
xchg
fiaddl
pop
push
xchg
sub
xor
pusha
jbe
lock
loopne
js
shrb
lods
adc
lret
xor
call
and
xacquire
enter
rcll
mov
gs
sub
aas
aad
push
cmp
hlt
pop
jbe
sub
je
jl
or
ret
into
dec
and
jno
rcrb
xor
fisubl
rep
iret
push
leave
cmp
call
sub
out
pop
cmp
mov
push
pop
lds
icebp
loopne
inc
adc
and
lods
stos
push
ret
sub
sub
les
or
xchg
outsl
inc
jnp
dec
into
popf
sahf
in
aam
dec
jbe
mov
jg
iret
andl
stos
in
pushl
scas
lcall
pop
push
push
push
fistps
and
dec
xor
sbb
sarl
mov
dec
push
and
call
add
and
rorb
push
lods
ss
stc
add
popf
or
lcall
loop
inc
mov
mov
aam
movsl
cmpb
addr16
lcall
push
or
adc
sbb
and
shrb
mov
dec
push
mov
lea
jne
inc
xlat
scas
inc
fcompl
or
iret
cs
shrl
movsl
shll
aas
jge
jnp
jo
mov
arpl
cltd
mov
add
pop
xorl
mov
bound
jecxz
std
push
popf
lret
psadbw
ljmp
inc
mov
in
jne
pop
lea
xchg
fstpl
or
sbb
push
xor
lods
jmp
js
sub
icebp
push
out
aad
adc
inc
mov
fnstsw
dec
mov
dec
mov
and
jmp
mov
mov
or
int
add
mov
dec
popf
mov
fdivl
arpl
pop
or
or
xor
adc
mov
or
lock
notl
jmp
pop
aas
jp
lcall
fldl
push
or
sar
jno
push
jmp
adc
or
push
add
test
mov
inc
sub
pop
jnp
sarb
sbb
push
ret
jns
jno
mov
loopne
insb
rorl
push
lahf
or
add
fwait
and
loope
js
or
or
sbbb
and
adc
sub
dec
push
sahf
jne
add
mov
jo
mov
sti
test
mov
subb
cmpsl
stc
jle
imul
rcl
add
movsl
mov
pop
and
add
jl
mov
cmp
sbb
rcrb
mov
dec
xchg
xchg
in
je
out
cmpb
jge
push
nop
inc
and
js
test
or
adc
xchg
add
stc
test
lea
push
pop
sub
movsb
xchg
dec
mov
push
mov
cmp
std
jnp
and
lods
divb
stc
ljmp
xor
push
movsb
scas
xchg
push
xor
dec
and
mov
mov
adc
mov
sti
inc
sub
testb
das
push
inc
mov
cmp
pop
ret
push
out
test
sub
push
mov
sti
jmp
adcb
pop
cmc
inc
xlat
fnstenv
leave
leave
gs
jg
push
mov
cmp
ror
lret
repnz
mov
mov
loopne
lods
cmc
es
jo
int
and
or
dec
popa
and
int3
cmpsl
inc
push
sub
in
adc
sbb
fmuls
outsb
addr16
mov
dec
lods
add
mov
cmpsl
sbb
fwait
imul
sub
add
arpl
mov
arpl
test
lcall
mov
add
lcall
cli
xchg
sub
imul
es
cltd
shlb
mov
rcrb
cmpsb
push
xchg
jns
ljmp
and
test
push
sbb
mov
and
cmp
aas
mov
mov
sbb
loopne
inc
sub
add
inc
andb
bound
mov
fxch
loopne
inc
leave
push
mov
and
push
jp
and
cmp
mov
mov
mov
nop
int
imul
call
mov
imul
arpl
adc
inc
pop
std
mov
push
push
dec
inc
popa
fsubl
aas
or
and
les
dec
xor
xor
das
ret
ja
cmp
fcmovnu
and
xchg
insl
ljmp
std
fs
fucomip
and
sub
scas
mov
int3
stc
pop
push
cwtl
jns
aad
shrl
push
push
jbe
test
lods
dec
and
mulps
fmull
jmp
mov
push
dec
sub
pop
cmpsl
insb
cwtl
out
mov
into
push
add
pop
loopne
cmp
cmp
mov
data16
arpl
cld
mov
mov
sub
xor
xchg
shrb
je
cld
inc
std
movsb
or
cmpsb
pop
push
xor
call
sahf
clc
popa
mov
out
jne
or
dec
jne
mov
xor
sarb
xor
ja
ljmp
push
pop
mov
jmp
inc
jns
aas
repnz
in
or
stos
add
out
addr16
inc
cli
ret
and
repnz
addl
bound
inc
push
stos
jae
cli
testb
inc
push
jnp
jne
push
push
stc
dec
mov
loop
mov
push
ja
jo
orl
add
jb
cli
in
xor
bound
xchg
ds
inc
sti
or
stos
adc
xchg
mov
inc
mov
and
mov
xchg
enter
lahf
xor
lea
mov
out
cmc
movsl
dec
repnz
adc
inc
pushf
sbb
mov
jg
add
lahf
inc
jge
jnp
int3
or
and
test
inc
xor
dec
push
inc
insb
cld
push
mov
outsb
das
cmp
rolb
or
shll
test
jns
and
movsb
sahf
sub
add
mov
jl
or
xchg
cltd
sub
cli
mov
push
or
sub
mov
pusha
movsl
ret
jl
shlb
jge
call
add
jb
outsl
cmpsl
lock
shll
mov
mov
cmpsb
pop
repnz
in
add
xchg
or
push
call
jbe
pop
cli
fcmovne
mov
jmp
adc
ret
xorb
out
pop
xor
test
daa
sub
push
popf
jae
cld
mov
scas
popa
test
out
iret
pop
dec
xor
scas
mov
test
mov
imul
dec
jge
adc
adc
pop
push
jo
inc
fnstsw
insb
push
xchg
inc
inc
mov
inc
orl
push
dec
lret
jmp
jl
icebp
jl
loope
dec
stc
jb
out
test
iret
add
insl
outsb
data16
int3
mov
movsl
mov
mov
sbb
out
iret
enter
test
int3
mov
iret
mov
xchg
lods
dec
sub
mov
push
rclb
enter
repz
xchg
push
xchg
out
adc
movl
lea
mov
xor
roll
mov
add
stos
enter
insb
dec
ud1
or
ss
ja
push
bswap
cli
jne
out
add
dec
sub
dec
stc
mov
mov
adcb
es
ss
fadds
aas
scas
sub
sub
ror
and
clc
pop
sub
fstpl
clc
fcomi
push
add
mov
cmp
adc
mov
scas
lret
ret
aaa
mov
xor
and
inc
scas
pop
pop
int
out
cltd
in
rcrl
repnz
sub
clc
jle
adcb
movsl
or
icebp
lcall
pop
mov
inc
push
inc
xchg
and
add
sahf
xlat
xorl
lods
hlt
jbe
mov
inc
cmp
push
adc
cmp
imul
adc
sub
sbbl
sbb
stc
out
jmp
repz
mov
mov
ficoml
mov
test
sub
lahf
mov
jle
cmp
or
popa
push
testl
pop
lods
pop
sbb
lods
movsb
mov
outsl
jnp
xchg
pop
cli
push
cld
test
push
dec
scas
mov
jp
popf
push
xlat
sub
adc
divb
scas
xchg
imul
jmp
sbb
add
inc
sbbl
mov
adc
mov
in
call
jb
imul
loopne
mov
xor
jb
imul
xor
test
out
movsl
cli
push
cmp
sub
repnz
in
nop
in
xchg
insb
out
in
lods
cld
sbb
int
xor
sbb
mov
outsl
mov
cmp
pushf
shlb
and
or
iret
data16
push
lret
lds
clc
jae
pop
cmp
loope
sbb
inc
inc
mov
xchg
mov
sub
call
push
cmc
pop
cmp
push
inc
hlt
in
jle
pop
ss
push
dec
inc
inc
adc
jne
sub
xor
or
and
cmp
fldl
cmp
mov
mov
in
or
popa
fcomi
mov
cli
cmp
scas
ds
loop
leave
mov
lds
cmp
adc
sub
lods
sbb
mov
fnstenv
dec
adc
pushf
lret
sti
jo
pop
and
cltd
mov
aaa
movsb
test
add
stc
ja
cmp
adc
enter
scas
ljmp
jge
adc
mov
out
adc
pop
data16
call
xorb
loopne
filds
push
add
mov
outsb
imul
in
jnp
pop
frstpm(287
fnsave
xchg
movsb
lcall
mov
pop
in
xor
mov
cltd
insl
xchg
xchg
imul
mov
sub
jnp
lret
cs
in
insl
nop
push
pop
cmp
mov
sub
push
leave
enter
dec
stc
xchg
cmc
mov
clc
mov
mov
add
adc
jae
cltd
inc
cmp
test
nop
dec
inc
xchg
das
loope
xchg
mull
loopne
xchg
xlat
nop
cmp
xor
mov
push
pop
push
iret
adc
inc
sub
dec
xchg
jbe
cmpl
push
fstpt
dec
rorl
fistl
call
push
and
cwtl
popf
mov
dec
dec
dec
add
in
cmp
mov
xchg
jb
test
dec
repnz
mov
mov
icebp
mov
mov
jge
ds
pop
fidivs
and
cli
es
sub
jb
clc
pop
push
adc
jne
cmp
bound
insl
or
add
pop
mov
cli
mov
les
dec
xor
dec
mov
jbe
lret
imull
shlb
das
int3
mov
leave
push
loopne
sbb
data16
xchg
cmpb
lret
dec
adc
mov
adc
xlat
mov
movsl
xorb
rclb
daa
movsl
std
mov
ja
pop
mov
test
cs
mov
sub
pop
rcl
cmpsl
icebp
sbb
dec
jecxz
inc
pop
lret
inc
roll
xor
xchg
push
cmp
sub
cli
into
leave
xor
pop
loopne
adc
sbb
xor
adc
mov
or
push
mul
xor
push
das
cmp
insb
pop
jbe
je
fnstcw
push
dec
sub
in
iret
jmp
inc
inc
lret
cmp
xchg
adc
andl
out
cmp
mov
lea
adc
mov
call
dec
or
inc
push
adc
in
cmc
popa
outsb
mov
add
fsts
sarb
inc
sti
pop
pop
mov
sbb
add
inc
jge
jge
jb
jmp
jp
ret
cmpsl
push
lods
test
popa
add
fidivrs
mov
notl
push
adc
sbb
imul
jnp
adc
pop
cwtl
push
movsl
add
push
and
cmp
pop
sbb
mov
xchg
pop
xchg
xchg
mov
or
or
movsl
jne
into
push
in
ret
mov
stos
imul
lock
push
fs
fs
pusha
mov
push
ret
in
lock
repz
pop
insb
push
sti
jb
repnz
dec
scas
mov
insl
addb
cmp
sbbl
loop
scas
inc
lods
xchg
rcrb
stos
test
dec
mov
pusha
jecxz
ss
adc
pushf
jmp
lahf
and
cmpsb
sub
sti
cmp
dec
enter
test
push
out
jb
mov
jnp
mov
bound
mov
loope
xor
xchg
out
stos
stc
test
scas
dec
sub
and
mov
fsubl
cmp
idivb
fsubs
ja
jmp
or
bound
imul
aas
mov
inc
sti
jmp
fsubr
xchg
pushf
pop
loopne
or
push
adc
pusha
pop
cmpsb
add
fisttps
inc
jl
dec
leave
in
repz
cltd
imull
inc
cwtl
jb
out
mov
mov
xlat
adc
jmp
clc
pusha
int
je
dec
scas
add
mov
jbe
inc
arpl
imul
inc
mov
cmpsb
mov
dec
stos
js
vandpd
jle
jg
pop
lret
pop
mov
and
mov
sub
cmp
xchg
outsb
adc
jmp
lds
dec
lods
or
in
or
sub
pop
mov
sub
mov
xor
add
call
mov
mov
aaa
shll
fs
repz
adc
cmp
cmc
xchg
fld
ficomps
in
xor
push
cmp
mov
sub
xchg
mov
pusha
out
cmp
push
xor
inc
xor
mov
repnz
push
pop
pop
lahf
dec
pop
xchg
xor
int3
jmp
in
and
fmuls
test
add
subb
cmc
popf
lcall
aam
push
or
int
roll
fdivr
das
ficoml
leave
je
daa
inc
ljmp
inc
mov
lahf
roll
mov
or
cmc
sahf
mov
and
xor
jmp
push
fcmovbe
cs
shl
sub
inc
clc
jne
in
mov
arpl
cmp
adc
fwait
mov
add
pop
inc
ja
imul
mov
fstl
rcr
and
sahf
mov
std
mov
cwtl
pop
arpl
lret
pop
addl
call
cwtl
test
out
clc
mov
sbb
mov
insb
xchg
popa
mov
jno
adc
int3
std
xor
mov
cmc
sbbb
bound
jge
jns
cwtl
and
push
jns
gs
or
xchg
and
cmp
js
das
inc
lea
dec
cmpsb
fdivl
xor
push
and
cs
roll
mov
pop
aaa
xchg
pop
inc
outsl
push
xchg
pop
cwtl
jg
or
jle
xchg
je
jmp
negb
push
repz
mov
repnz
adc
ficoms
xlat
arpl
xchg
push
fdivr
jecxz
repz
sub
ret
sbb
fcmovb
pushf
xor
addr16
cmp
insb
push
sbb
add
sbb
xchg
mov
inc
add
lods
imul
repz
lret
ret
adc
stc
mov
jns
movsl
or
adc
je
mov
movsb
sarl
cmp
sti
jl
xor
rcrb
xor
add
dec
ss
aas
sbb
xor
dec
or
in
inc
mov
jp
out
ret
test
jb
jecxz
mov
js
adc
jo
enter
cwtl
add
lock
adc
sbb
mov
lret
cmp
leave
xchg
js
daa
push
mov
popf
ja
or
sahf
xor
pop
je
sbb
in
je
push
jecxz
iret
add
lret
lahf
movsb
xor
mov
stc
clc
inc
ja
sub
mov
les
in
dec
movsb
cs
mov
int
imul
add
fsts
sahf
lds
mov
stc
push
in
into
mov
repz
mov
imul
mov
outsl
les
das
and
or
movsl
repz
mov
mov
dec
lret
lret
dec
bswap
movsb
gs
leave
iret
sub
out
loop
fwait
jl
mov
aas
xchg
mov
sub
jo
xchg
lods
leave
cwtl
xor
sbb
out
ljmp
jle
dec
push
lea
push
mov
cmc
pop
pop
fdivr
lods
cli
push
icebp
fiadds
mov
sar
es
iret
jmp
pop
inc
mov
cwtl
mov
jmp
lret
sbb
lods
gs
rorb
xchg
jle
and
push
loope
mov
stc
sub
add
or
mov
add
jp
mov
test
sbb
adc
and
imul
jno
insl
scas
std
jb
fldcw
gs
sub
clc
pop
and
int
daa
sbb
inc
in
sub
repnz
pusha
adc
mov
ds
lock
mov
jmp
and
dec
bound
sub
fwait
dec
xor
adc
sbb
mull
pop
std
mov
push
cwtl
dec
xor
add
dec
sub
xchg
in
mov
or
pop
bound
test
loop
rclb
sbb
sub
mov
jmp
mov
xor
insb
sub
fadds
mov
jb
scas
sbb
pop
jl
xchg
clc
insb
mov
icebp
push
loop
pop
out
lcall
lock
sub
call
push
int
jp
inc
cmp
add
mov
mov
cmp
fstl
rol
sarb
or
adc
xchg
out
push
js
loop
pop
sti
iret
push
loop
stos
rcll
nop
sbb
clc
ss
add
cmpsb
scas
jnp
pusha
popa
inc
outsl
aas
cmc
xchg
pop
mov
sub
cmc
rcll
mov
sbbl
lds
lcall
xchg
xor
int3
movd
push
lret
lret
sub
sbb
and
adc
push
ss
cs
inc
mov
out
pop
mov
popa
insl
pop
inc
jp
clc
xchg
test
add
out
aas
inc
call
aaa
dec
shr
rcll
mov
test
inc
inc
mov
pop
mov
inc
bound
sbb
sub
cmpsb
jg
shlb
push
xchg
push
xchg
out
addr16
in
enter
out
iret
lret
cmp
loopne
scas
mov
cmc
push
add
movsl
cmpsl
sbb
adc
cmc
mov
mov
or
add
das
jecxz
add
push
pushf
cmp
aas
int3
sbb
dec
jnp
cmp
inc
cli
dec
or
loopne
cmp
dec
inc
aaa
push
push
out
or
xchg
lock
pop
popf
and
pop
xchg
adc
test
das
dec
jb
lea
xor
stos
or
out
add
cmp
out
sbb
test
push
jb
iret
repz
ljmp
stc
dec
cmp
cmp
lods
shrb
add
in
out
cmp
aas
test
das
push
pop
fwait
sarl
mov
mov
pop
push
enter
flds
imul
xor
cltd
dec
mov
cld
int
sbb
shl
out
stos
xlat
stos
lahf
cld
add
and
ljmp
or
mov
out
ds
sahf
xchg
or
cmpsb
lcall
add
jecxz
jnp
xorl
xchg
ss
mov
xor
cld
mov
shl
jmp
nop
data16
dec
push
or
loopne
mov
xchg
pop
xlat
xchg
mov
sbb
adc
cwtl
cmp
push
out
inc
and
push
into
movq
push
bound
mov
ret
sbb
jg
aam
insl
add
xor
outsl
fmull
shll
jmp
or
jb
fcomps
fwait
outsl
mov
insl
push
out
or
pop
dec
sub
iret
test
jns
test
inc
cld
mov
cmp
enter
pop
mov
outsb
fmull
inc
push
and
xchg
popf
lods
lahf
aaa
adc
arpl
scas
xor
add
add
jb
xor
ds
jmp
aas
add
shufps
call
dec
add
cmp
testb
sti
sahf
idivb
std
lcall
loopne
hlt
mov
dec
call
outsb
fidivrl
jns
pop
adc
xchg
outsl
xchg
int
hlt
lcall
nop
or
or
jbe
push
mov
mov
hlt
lahf
xchg
loop
inc
mov
mov
icebp
das
cltd
aaa
pop
xor
jne
mov
popa
jp
insw
pusha
fldenv
js
or
jle
clc
in
flds
call
int3
xchg
inc
xor
test
or
popa
ja
or
mov
sbb
jle
mov
push
or
jp
shl
pop
stos
int3
jl
scas
in
push
add
push
cltd
xor
bound
cmp
ss
loop
stos
dec
rolb
scas
mov
lock
sbb
mov
mov
shrl
or
test
dec
xlat
mov
cmp
pop
ja
test
mov
cmp
ficomps
cwtl
test
sub
iret
mov
xchg
and
sub
cltd
push
ljmp
test
cmpsl
fiaddl
mov
insl
adc
xchg
andb
sahf
jmp
and
add
sub
lcall
lahf
fcomip
sub
test
add
popf
ret
test
outsb
test
aaa
pusha
out
mov
in
rcl
sub
inc
xchg
lods
xor
cmpsl
aaa
stos
out
ret
dec
notb
js
jle
mov
add
push
inc
mov
pop
cld
jmp
dec
or
aam
jb
inc
fbld
xor
cmp
xchg
sub
fisttps
push
out
test
mov
shll
jns
jp
jp
mov
ljmp
inc
std
sarl
xor
insb
push
aam
pop
add
adc
pop
mov
mov
ss
dec
loope
xor
inc
push
push
call
pusha
xorl
into
mov
adc
loop
mov
or
sbb
mov
cmc
stos
push
movsb
lock
imul
jne
in
test
push
cltd
mov
stos
adc
dec
mov
loope
push
cmpb
scas
mov
mov
dec
push
repnz
mov
insl
lret
movsb
jecxz
mov
mov
stos
mov
pop
jmp
adc
mov
inc
mov
lock
mov
ja
inc
insb
push
pop
aad
test
in
rorl
cmp
mov
je
repnz
divl
call
sbb
sbb
inc
jo
ret
mov
push
insb
repnz
jge
dec
pop
leave
lret
add
inc
cs
pop
sbb
add
int
sbb
ror
jg
dec
stc
mov
rolb
pop
pop
push
add
mov
cmc
jnp
data16
jp
repnz
int3
pop
xchg
push
ja
roll
jmp
es
add
shr
pop
inc
int
sub
lret
aad
inc
aam
clc
rclb
xchg
add
loopne
sahf
sbb
shrl
xlat
fs
stc
pop
jmp
loop,pt
dec
adc
jnp
bswap
sub
xchg
mov
lret
cmpsl
fucom
dec
ja
cmpl
enter
mov
std
imul
mov
inc
mov
jle
or
xor
dec
scas
sub
and
xchg
inc
inc
or
cltd
fsts
cmp
jl
lods
push
add
insl
jno
popa
mov
mov
scas
mov
sbb
aam
xchg
aas
pop
popa
mov
pop
push
mov
test
loope
pop
ds
mov
insb
stos
xor
mov
imul
dec
lret
outsl
les
jecxz
adc
mov
inc
aaa
in
jle
dec
xchg
jbe
cmp
mov
xlat
pop
lcall
pop
xchg
insl
ljmp
xchg
xor
inc
stos
mov
aaa
cmp
int3
out
mov
mov
push
out
add
sub
sbb
sub
out
and
lods
call
mov
mov
mov
xchg
dec
inc
xchg
into
jge
scas
enter
mov
sti
fdivrl
sbb
jmp
and
insl
xchg
jo
sbb
sbb
mov
aam
xor
inc
push
cmp
sub
lods
pop
adc
subb
push
or
into
mov
lret
fldcw
push
mov
cmpsb
int
call
insl
xchg
fcoml
push
xchg
shrb
xor
fwait
push
cmc
jp
pop
or
adc
pusha
lods
sarl
std
adc
mov
mov
imul
adc
push
int
sbb
adc
int
jg
xchg
or
mov
iret
inc
inc
aaa
sbb
fisttpll
insb
pop
sub
mov
mov
test
mov
jmp
push
faddl
jecxz
jae
cs
inc
jmp
fdivrs
stc
mov
and
cmp
int3
jl
xchg
das
cmp
jbe
les
icebp
push
add
ret
jecxz
test
cltd
lret
pop
ficomps
cmpsl
in
mov
sub
shll
loope
push
rorb
adc
lret
xor
inc
pand
fistpl
popa
xchg
loope
jbe
push
jge
lahf
idivb
mov
fdivl
pop
inc
sti
cmp
in
fwait
andnps
xlat
or
jp
xchg
push
push
adc
or
cmpsb
inc
shlb
cmp
pusha
ds
leave
test
clc
pop
adcl
pop
in
push
loop
test
pop
clc
sbb
inc
xchg
lds
sbb
in
stos
cwtl
jmp
into
rcrl
out
ret
xor
or
jmp
push
inc
inc
call
lret
pop
xlat
aam
push
nop
fcomip
ficoml
push
cmc
sub
and
adc
fwait
sbb
and
aaa
jge
dec
cmpsb
push
mov
fmull
mov
dec
ljmp
ljmp
or
int3
lret
rsm
mov
mov
test
jl
rcll
loope
mov
sahf
or
adc
push
pop
xor
push
xchg
sbb
gs
or
push
push
and
xchg
mov
imul
divl
xchg
cmc
imul
sbbl
xchg
mov
add
jge
shl
out
shl
fcmovnb
push
cmpsl
pop
fwait
jo
enter
ds
pop
push
push
stos
pop
push
fmuls
sub
sahf
jne
and
inc
nop
je
arpl
in
fisttpll
cmp
pop
repz
dec
push
test
dec
fmulp
xchg
mov
or
xor
mov
or
pcmpgtd
jae
xor
mov
jae
mov
jo
pushf
mov
adc
shl
sti
dec
dec
jbe
sbb
out
lock
imul
push
ret
jp
rolb
inc
mov
fildll
xor
mov
push
sbb
xchg
xchg
dec
sub
lods
in
arpl
dec
sub
fdivl
adc
mov
and
cli
movsl
movsb
sbb
leave
rorb
inc
cs
popa
aad
jno
push
and
mov
pop
xor
insb
movsb
dec
lahf
add
stos
dec
or
jbe
adc
out
cld
push
outsl
push
inc
push
pop
in
imul
addr16
call
fcompl
jge
adc
das
inc
push
iret
xor
jae
push
push
imul
jb
xchg
cs
iret
insl
stc
aas
xor
push
add
dec
or
les
mov
jmp
add
movsb
fistl
stc
adc
inc
cli
xchg
push
fildll
es
stos
shll
or
vmovsd
pusha
mov
push
enter
xor
out
fmull
rcrb
in
hlt
mov
rolb
ja
roll
xor
inc
add
pop
sub
inc
or
aad
xor
hlt
mov
pop
xor
lds
ret
xchg
cmp
jp
jle
lods
inc
dec
stos
int
pop
mov
add
adc
and
mov
sub
jne
mov
xchg
mov
lea
cmp
push
pop
mov
and
xchg
xor
fsubp
fwait
es
aad
push
dec
xlat
fstpt
jle
ret
push
pop
jge
stc
push
push
mov
movsl
add
cmpsl
out
fsubrs
inc
jne
repz
lahf
hlt
pop
push
push
cmp
ss
icebp
or
adc
pop
push
cmp
xor
jns
jno
lods
xchg
mov
clc
inc
or
lcall
jge
in
push
and
mov
pop
push
jb
fldenv
sbb
pop
dec
push
mov
es
lcall
cmpsl
jns
adc
sbb
in
jge
sti
or
into
fdivrs
push
sub
dec
cld
ret
out
fildll
pushf
push
cmp
stos
imul
loop
push
ficomps
addr16
or
fnstenv
int3
cmp
in
ljmp
mov
rcrb
faddl
ficoml
push
test
sbbl
aam
subb
and
fsincos
rcrb
jp
in
fsts
mov
mov
jnp
jmp
sbb
out
adc
xor
cmp
repnz
sahf
gs
adc
mov
pushf
sub
cltd
mov
dec
xchg
and
jbe
int3
adc
pop
dec
mov
loope
push
pop
dec
iret
lahf
mov
les
xor
lods
stos
push
push
je
jnp
insl
or
inc
or
lret
pop
xchg
jmp
xchg
mov
lock
mov
sti
push
and
in
push
adc
xchg
icebp
in
test
inc
in
jne
seta
sbb
xchg
jg
push
cmc
push
mov
mov
push
pushf
inc
push
sub
fsubl
pusha
fiaddl
add
ds
inc
arpl
cmp
cmc
and
cmpsl
mov
inc
jle
mov
sbb
xchg
xchg
pop
daa
rolb
xor
das
xchg
test
aad
push
into
shr
jae
test
mov
daa
xor
les
or
loopne
in
lret
into
stos
jmp
xor
mov
dec
mov
or
sbb
xor
std
pop
mov
xor
mov
push
inc
enter
mov
push
dec
popf
cmp
icebp
nop
and
sbb
addl
cmp
lahf
rorl
dec
mov
jns
mov
adc
arpl
aad
data16
rcll
sbb
cltd
or
adcb
loope
push
xchg
sub
scas
dec
sahf
stc
sbb
setbe
push
and
mov
repz
cmp
outsl
aas
lds
pop
arpl
pop
lret
inc
add
loopne
cld
cmp
mov
shrl
push
scas
mov
push
jno
mov
ret
mov
ljmp
fcmovne
fdivr
jecxz
lret
cmpsb
sbb
push
and
jl
or
insl
outsb
icebp
mov
xchg
stos
mov
add
out
mov
adc
push
push
orl
lods
or
xor
pop
ljmp
ret
jl
in
dec
clc
xchg
and
ss
push
aaa
lods
scas
in
insl
fnstcw
lea
cmp
push
int
push
push
dec
mov
ljmp
xchg
lods
arpl
subl
push
sub
insl
mov
jmp
out
or
aam
inc
xchg
test
repnz
mov
sbb
in
xchg
sbb
stc
sbb
pop
lcall
pop
push
std
or
call
dec
inc
cs
test
mov
in
repz
jmp
mov
xor
aas
stos
rclb
movsb
pop
ljmp
cmp
iret
xchg
or
cmp
jecxz
mov
stos
es
cmp
leave
mov
sahf
adc
xchg
push
fdiv
push
and
xchg
addb
pop
hlt
xlat
out
dec
mov
fsubl
leave
pop
sahf
pop
and
sarl
mov
shld
xor
pop
cli
hlt
cmpsl
add
mov
pop
push
pop
mov
mov
aaa
incb
inc
int
iret
daa
je
imul
cs
arpl
push
cltd
or
jnp
movsb
sahf
fadds
int3
mov
not
dec
mov
xor
xor
cmpsb
test
xor
sbb
pop
mov
pushf
pop
mov
shll
add
lret
cmp
pop
or
lcall
jbe
add
jmp
les
dec
and
inc
cltd
mov
jns
aaa
shl
sahf
or
cmpxchg
push
jns
inc
jp
mov
inc
imul
add
sti
std
pop
sub
fmull
aaa
mov
add
add
jbe
out
cltd
stos
sahf
scas
dec
pop
hlt
pop
xchg
fs
mov
xchg
daa
mov
mov
pop
je
loope
loop
mov
cmp
cltd
and
es
ljmp
and
pop
lahf
in
sub
int3
das
jbe
push
sbb
lret
push
je
fs
mov
sbb
ss
mov
fs
mov
add
push
inc
adc
shll
mov
push
xor
jl
int3
mov
push
into
push
pop
pop
push
push
dec
push
out
jo
mov
adc
int
adc
cs
addr16
adc
out
inc
scas
fstpt
dec
arpl
and
test
jp
jg
lahf
sub
orl
ja
int3
jno
mov
mov
mov
xchg
outsb
clc
pop
cmpsl
fistpl
xor
test
mov
mov
mov
pusha
repnz
divl
movsl
ss
out
je
bswap
dec
xchg
jl
lods
les
or
dec
fldl
inc
lock
adc
inc
lods
jle
mov
xchg
sub
lcall
jno
rol
xchg
enter
and
in
mov
ja
jnp,pt
or
stos
xor
pop
int
nop
mov
and
push
and
cmp
add
fwait
pop
dec
insl
out
push
scas
push
inc
call
movaps
jecxz
mov
js
and
xorl
inc
jmp
jns
push
gs
sbb
in
into
mov
mov
pushf
lock
add
scas
aad
pop
or
push
sbb
pop
sub
mov
nop
les
imul
push
mov
or
sarb
rcll
cli
ret
test
in
dec
stc
mov
je
inc
mov
sarl
adc
mov
jmp
ret
push
test
jae
mov
std
sbb
pop
leave
mov
insl
mov
and
cli
cld
test
incl
sub
push
int3
add
lea
scas
inc
lea
aam
fsubl
movsb
sahf
push
mov
call
mov
xor
loopne
pop
jb
movl
mov
jae
mov
sbb
or
sbb
mov
cld
add
nop
insb
add
movsb
push
shrl
push
jg
sbb
adc
add
adc
out
pop
xchg
push
sbbl
fwait
push
jnp
lret
xor
xchg
cltd
out
mov
frstor
add
ljmp
xor
push
mov
pop
xchg
addr16
insb
nop
jae
sbb
mov
mov
pop
push
xor
dec
xchg
pop
xor
mov
or
dec
ljmp
push
fwait
adc
mov
pop
ss
mull
add
jb
jae
sbbl
jbe
mov
rcrl
cli
and
iret
xor
call
scas
loopne
dec
cmp
cmp
pop
out
and
es
inc
jge
dec
inc
jno
std
jae
rorb
push
leave
push
jle
jno
lds
scas
jnp
les
insb
lods
xchg
or
pop
jecxz
lret
mov
repz
dec
das
mov
pushl
push
jbe
mov
pop
xchg
aam
adc
xor
sti
stos
pop
inc
in
push
lret
sbb
out
cwtl
mov
fstpl
mov
movsb
lods
dec
cld
ss
and
shll
cmpsl
xchg
push
jl
mov
sbb
add
and
insl
stos
pop
mov
aam
cld
inc
fidivl
int3
sbb
add
pop
pop
add
inc
dec
jg
cmpsb
xchg
pop
and
dec
sbb
stos
pinsrw
sbb
pop
in
fs
outsl
aam
clc
mov
inc
pop
movsb
sahf
xlat
mov
pop
sbb
inc
and
imul
sbb
cmp
out
sub
popf
dec
mov
push
popf
imul
dec
stos
mov
jmp
pop
add
fcos
cs
ja
ret
jle
inc
rep
inc
call
lods
pop
int
adc
add
lahf
add
nop
push
cmpsb
mov
hlt
sbb
pop
mov
loope
lods
adc
cmpsl
sbb
cli
imul
incl
movsl
or
ret
test
jge
pop
dec
andb
dec
aad
add
hlt
outsl
cld
dec
xor
ficoml
fisubrl
ficompl
cmp
sub
xchg
mov
mov
test
int
scas
cmp
fisttps
mov
daa
scas
hlt
aad
push
xchg
std
push
js
fwait
leave
xchg
ret
mov
daa
repnz
xorb
loope
aaa
mov
pop
ss
push
mov
scas
addr16
ds
lods
call
gs
mov
sub
je
adc
add
mov
and
cmp
es
lock
mov
and
mov
add
or
push
jle
mov
xor
lods
outsb
mov
divb
or
pop
mov
ja
dec
pop
test
sti
aad
add
mov
push
out
add
int
inc
mov
or
lods
test
jbe,pt
cmp
mov
cmpsl
mov
movsb
fcompl
leave
mov
repnz
inc
scas
rcll
mov
jp
ret
fisubl
sahf
xchg
out
imul
neg
in
pop
cmp
ljmp
pop
inc
and
pusha
cltd
adc
inc
pop
sbb
mov
lcall
lods
data16
jne
jle
outsb
inc
mov
add
xor
sub
or
pop
push
test
fwait
jns
cli
hlt
dec
out
xor
jl
out
in
inc
idivb
clc
inc
mov
push
lahf
xchg
cmc
xchg
push
pop
aam
jo
pop
fdivp
stos
sbb
cld
shlw
mov
push
push
and
sbb
sbb
xchg
sahf
xchg
imul
idiv
and
and
xchg
dec
sub
je
bound
test
les
pop
mov
sub
sub
addr16
test
adc
pop
call
pop
dec
push
imul
inc
pop
adc
js
jbe
shll
mov
adc
or
sti
sbb
out
push
fwait
test
imulb
xor
loop,pt
push
ss
insb
adc
pop
mov
cmp
iret
push
dec
or
stos
push
lret
test
imul
add
shll
subb
arpl
dec
fbstp
and
sbb
adc
pusha
and
jae
cwtl
icebp
jno
mul
ja
fisttpll
push
mov
mov
lahf
insb
outsl
loope
test
es
iret
je
mov
jno
jmp
cmc
iret
mov
add
jae
adc
int3
mov
push
fldcw
testb
cli
add
popf
fiadds
add
pop
add
inc
cmp
push
sbb
sub
ret
mov
ds
add
out
push
insb
cli
and
xchg
fnstsw
lret
cmp
cmp
sbb
add
mov
sbb
jecxz
mov
pop
adc
fadds
and
lret
outsl
imul
xor
pop
pop
push
dec
lods
or
cmp
gs
lahf
or
mov
or
add
mov
fwait
shl
jg
jne
stc
mov
xor
lds
xorb
lret
fidivl
sub
and
mov
cmpb
push
push
inc
cmp
out
lock
imul
fbld
fstps
and
fstpl
mov
addb
aas
arpl
lock
dec
loop
mov
test
aas
xchg
inc
aaa
jp
ds
dec
inc
mov
fcomps
ss
test
clc
mov
rcll
sti
xor
pop
or
push
adc
cld
rolb
jl
push
rcll
cmpsl
add
jmp
jmp
cmp
inc
in
mov
mov
ljmp
mov
cmp
pop
rclb
divb
inc
ljmp
stos
push
icebp
jno
popf
xchg
xor
loope
or
cli
push
clc
xor
inc
divb
ljmp
mov
sbb
popf
loope
pop
or
mov
es
loop
std
cmpb
mov
hlt
dec
cwtl
test
mov
jecxz
rcll
jmp
add
sti
std
es
in
les
in
mov
xchg
add
mov
daa
popf
sub
pop
ja
out
push
cli
and
adc
xchg
mov
iret
or
cmp
jo
ja
mov
cmp
pop
dec
cmp
fnsave
and
and
das
or
sub
mov
pop
xchg
popa
lock
add
or
outsl
push
ss
mov
push
iret
je
inc
push
fldl
inc
inc
lcall
movl
push
add
inc
cmpsb
outsl
ret
dec
mov
inc
jecxz
mov
leave
fcompl
leave
mov
test
or
stos
sbb
in
lahf
xchg
es
insl
test
pop
pop
mov
je
insl
in
scas
shrb
fsubs
mov
bound
and
cld
mov
fcmovb
lcall
cmp
cmp
cmp
cli
icebp
adc
outsb
std
lock
imul
ljmp
xor
in
sub
pusha
sbb
aas
and
call
push
dec
mov
push
mov
hlt
inc
mov
call
dec
sahf
cltd
cmp
dec
shl
mov
incb
xchg
test
jl
inc
and
sbb
and
or
fdivrs
sbb
inc
mov
xor
and
movsl
xchg
mov
mov
or
stc
pusha
outsb
push
add
xlat
sub
das
pop
shrb
hlt
sbb
push
xor
in
aad
xchg
vphsubdq
insb
mov
mov
add
jne
cmpsl
adc
adc
dec
and
pop
fs
push
enter
push
call
das
xlat
lea
in
scas
lret
in
xor
aad
mov
fwait
jle
out
test
or
xlat
sbbl
sub
fisubrs
pop
or
cmc
or
or
mov
dec
mov
cltd
mov
rcrl
mov
adc
mov
pop
out
test
cmpsl
imul
out
add
stos
adc
lods
mov
dec
xor
inc
pop
mov
dec
out
add
and
sub
dec
mov
jne
push
imul
stos
xchg
lea
and
das
fxch
push
jb
nop
or
bound
testb
sar
ret
shll
lea
out
mov
shrl
sub
fdivl
insb
rorl
mov
mov
jbe
mov
inc
imulb
dec
xor
out
stos
xor
call
aam
and
in
je
sub
dec
pop
mov
lock
outsl
sbb
add
aas
jne
stc
xchg
add
fcoms
in
mov
stos
xchg
sarl
mov
jne
jne
jmp
mov
and
aas
xor
test
mov
add
jne
and
lret
add
xchg
sbb
incl
aas
call
aaa
adc
iret
and
sbb
jbe
cmc
aad
jno
jecxz
cmpsl
pop
xlat
cs
cld
ss
mov
mov
js
push
mov
adc
and
xchg
sti
push
xchg
rcll
adc
or
fdivl
popa
and
add
sbb
fs
mov
insl
iret
ret
rcr
and
loope
dec
das
arpl
jl
xchg
fisubs
leave
xchg
fcomps
lds
xor
icebp
popf
sbb
sub
lods
lcall
mov
int
dec
clc
dec
test
into
ljmp
push
lret
sti
mov
das
xor
inc
outsl
dec
mov
arpl
loop
lock
push
adc
pop
test
outsb
les
sub
cld
lret
and
inc
sbb
mov
jmp
jb
in
dec
sub
repz
mov
add
sti
jmp
pop
pop
dec
loope
inc
sbb
inc
adc
cltd
push
cmp
enter
js
cs
or
sub
xchg
xlat
cmp
icebp
testb
pop
les
dec
lods
fnsave
adc
cs
cmp
fldenv
or
mov
mov
xchg
fsubl
out
ljmp
sbb
xchg
aas
enter
inc
mov
dec
push
lods
push
leave
push
add
fstl
cmp
aam
push
mov
inc
jnp
int3
repnz
stos
gs
fs
into
or
leave
test
in
xor
and
gs
bsr
cltd
mov
icebp
jnp
sbb
inc
adc
aam
jne
mov
aas
pop
pusha
imul
xor
cmp
roll
pop
test
arpl
out
adc
mov
ret
cltd
or
mov
jns
js
mov
jne,pn
mov
dec
out
sti
adc
call
cmp
lahf
cmp
aaa
rclb
mov
insl
fists
outsl
aaa
ror
mov
je
inc
ret
sub
and
insb
xor
xlat
test
pop
xor
fsubr
int3
push
xchg
aaa
sbb
push
out
test
and
inc
arpl
fstps
jg
mov
sbb
lds
iret
out
fs
bound
jecxz
mov
mov
lods
ficoms
jle
mov
clc
shrb
jg
mov
mov
scas
fs
sub
sbb
jmp
or
in
cltd
pushf
xchg
fstl
imulb
mov
mov
fcomi
push
test
inc
ljmp
or
cmp
pop
inc
pop
jg
inc
dec
jle
aad
xchg
test
insb
xchg
ss
sub
sbb
mov
inc
adc
cs
mov
fstps
dec
imull
sub
imul
nop
sbb
into
loope
loop
imul
test
subl
in
ss
inc
test
stc
xchg
adc
cs
sub
jl
incl
cltd
mov
lods
xorl
ds
and
pop
jmp
or
filds
add
mov
mov
sub
inc
jo,pn
in
testb
jno
pop
mov
add
cmp
push
mov
cmpsb
in
clts
test
cmpsb
jl
push
xor
leave
mov
push
popw
sub
into
test
pop
test
mov
lret
mov
push
lods
scas
sarb
ds
jb
jo
pop
out
pop
div
cld
pop
add
nop
cmp
jo
sub
sti
or
mov
mov
sbb
shrl
fisubrs
loope
push
insb
jl
adc
scas
jmp
adc
out
pop
jne
hlt
addr16
lcall
push
in
or
cwtl
mov
sub
or
aas
sbb
repnz
js
repnz
xchg
sti
test
loopne
xor
or
fsts
add
mov
pop
push
es
sub
xor
sarb
bound
mov
add
js
mov
scas
push
mov
pop
sbb
jae
jecxz
es
insb
rclb
or
outsb
fdivp
jmp
arpl
call
xor
shrb
or
and
popa
fs
xchg
stos
mov
scas
ret
or
aad
adc
iret
int3
cmpsb
mov
xchg
push
jns
push
fisttpll
js
movsb
fptan
addr16
fisubl
aas
std
push
push
sarb
bound
dec
mov
and
or
andb
mov
popa
jb
dec
mov
push
mov
mov
mov
fldenv
test
mov
shll
int
pop
scas
jmp
xor
int
jae
jnp
sarl
lret
dec
cltd
cmp
test
bound
rcrb
pop
xchg
loop
and
or
sti
out
popa
test
mov
data16
push
jge
xlat
movsl
adc
jno
aaa
fiadds
repnz
imulb
push
scas
addr16
mov
pop
push
xlat
jp
test
mov
dec
mov
cmp
clc
inc
shrl
nop
push
add
xchg
popf
push
aam
ret
and
xor
cmp
xor
jne
in
outsb
and
cmc
repz
push
xchg
and
and
dec
fadds
push
stos
fwait
and
inc
adc
xchg
and
mov
sub
sub
insl
xchg
xchg
int3
inc
cmp
ficoms
and
jg
js
dec
mov
lds
test
in
lret
fstps
sti
push
xchg
mov
adcl
xchg
mov
push
cmpsb
iret
add
sub
add
push
mov
out
call
mov
cmp
sbb
mov
loop
lea
xchg
mov
xor
nop
negb
and
aas
imul
in
in
mov
xor
mov
inc
ret
push
jns
mov
pop
ret
sbb
rorl
nop
shll
sub
leave
or
scas
test
jge
insl
add
add
add
push
dec
test
ret
lret
int3
and
pop
xor
sub
jo
std
pop
rcl
jbe
add
stos
stos
mov
lea
dec
out
push
pusha
imul
cltd
stos
gs
fwait
jo
xor
sub
lret
loopne
and
ljmp
out
stc
dec
add
cmp
adc
std
cli
lea
pop
into
outsb
pop
pop
add
cmpsb
fstpt
dec
pushf
lds
cmp
aaa
dec
or
test
inc
int3
pop
mov
pusha
out
lcall
adc
xor
out
and
rclb
xchg
js
lea
loopne
adc
mov
inc
fstl
mov
repz
sbb
inc
cmp
push
out
push
sbb
add
pop
test
ljmp
xorb
push
inc
xor
pusha
jecxz
or
lea
jns
mov
mov
pop
or
pop
xor
cmp
iret
in
inc
fsub
data16
movsl
mov
subb
or
bound
out
outsb
fbstp
mov
pop
lret
pop
jb
repz
xor
cwtl
popa
cmc
cmpsl
aaa
add
adc
ret
aaa
jno
mov
jnp
out
leave
add
shrl
out
mov
je
jo
insb
cmp
adc
cwtl
fcompl
sub
fstpl
pop
sub
pop
push
rolb
jbe
mov
faddl
jae
into
inc
xor
xchg
scas
shrl
mov
cmp
pop
sub
cmp
imul
or
shlb
dec
push
jmp
sbb
dec
push
mov
loope
icebp
fildl
aaa
fiaddl
jo
hlt
fisubl
adc
test
call
aad
adc
cmp
and
pop
in
xor
jo
push
outsl
ljmp
lcall
dec
mov
xchg
jne
imulb
ljmp
hlt
imul
icebp
and
fdivs
daa
shrb
add
sbb
sahf
xlat
or
dec
sbb
insl
push
stc
mov
xchg
in
jb
mov
subb
pop
ss
adc
dec
dec
pop
xlat
pop
lods
cmp
xlat
sbb
jle
outsb
jae
fistpll
mov
subb
sub
out
push
stc
stos
sbb
jbe,pn
sub
jno
push
and
loop
test
aas
bound
cltd
jno
aad
mov
mov
sbb
into
pop
sub
movsb
fistl
jae
xor
data16
not
push
xchg
popa
cmp
sbb
push
loop
and
sub
jecxz
inc
push
pop
jo
sar
mov
test
cmpsb
imul
pusha
or
xchg
sti
out
or
add
ror
push
pop
inc
pushf
push
sub
mov
and
jge
repnz
insl
cmp
fldpi
mov
add
lock
lret
scas
data16
jge
lock
movsb
inc
decl
dec
mov
sbb
add
scas
cmpsb
and
icebp
jno
or
outsl
mov
popf
popa
insl
jae
rorl
inc
cltd
mov
iret
out
and
mov
inc
mov
mov
cmp
addr16
cli
add
push
xchg
les
jmp
adc
test
adc
pusha
xorb
and
je
cmpsl
jo
adc
push
cmp
add
shlb
mov
jmp
sub
lret
sbb
test
test
push
int3
mov
mov
out
cmp
fs
or
lock
pop
dec
jo
xchg
jae
adc
loopne
loop
add
lds
loop
js
jno
push
repnz
and
stos
cs
insl
push
push
arpl
push
inc
and
mov
addb
or
sbb
fidivs
stos
les
lahf
cltd
adc
insb
insb
dec
xor
mov
inc
inc
imul
inc
outsb
mov
movsl
mov
or
fildll
out
xor
cmp
divb
pop
adc
or
dec
fstl
mov
jo
out
test
rorl
shrb
insb
pop
pop
lahf
stos
fcoms
repz
fstpt
jp
jae
jbe
pop
jmp
add
xchg
aad
je
adcl
std
addr16
cwtl
mov
pushf
cmp
cmp
std
in
adc
push
cmp
dec
or
mov
mov
sub
push
pop
repz
jl
jg
mov
xor
out
jmp
xchg
lret
or
sub
mov
inc
sbb
loopne
and
mov
sub
addr16
faddl
dec
int3
and
pusha
sub
adc
enter
push
rcll
dec
lret
mov
aas
mov
cmp
sbb
jge
ret
les
pop
and
mov
jnp
inc
or
inc
into
jo
std
adcl
roll
in
shl
test
mov
adc
and
sbb
push
jmp
jns
xchg
movsl
xchg
fsub
pop
insl
push
fsub
sbb
cmpsl
ret
xor
movsb
and
outsb
popa
scas
adc
jnp
jnp
leave
out
jne
aaa
mov
sbb
and
push
sbb
test
xor
mov
dec
aas
mov
in
mov
imul
scas
ret
sub
mov
loop
hlt
ds
jecxz
cmc
loop
xchg
inc
and
jbe
call
xor
adc
ucomiss
add
into
aad
sub
shlb
scas
stos
leave
movb
fstl
mov
mov
cmp
or
inc
adc
test
rcrl
nop
sbb
lock
jecxz
imul
int
or
or
ret
lods
and
and
adc
mov
adc
cs
les
xchg
movsb
ja
aaa
jb
jmp
ficoms
dec
shl
xor
push
ret
cmp
ss
and
xchg
and
mov
xchg
pop
pop
test
jg
test
jg
and
neg
fisttpll
inc
clc
outsb
sbb
xor
lods
jge
aad
cmp
rorb
lods
stos
mov
and
fwait
jo
imul
into
add
les
hlt
clc
arpl
mov
cltd
push
aas
andl
lds
data16
pop
add
fcomps
pop
jle
ja
es
negb
cltd
xchg
lods
xor
ss
sub
push
popa
cmpsl
inc
hlt
sbb
lcall
dec
xchg
cld
pop
push
adc
fcoms
and
jge
in
ror
adc
pushf
mov
jo
sub
push
sbb
mov
sbb
dec
cmp
or
insl
push
mov
outsb
sbb
aas
jno
icebp
jp
fs
aam
shrb
loope
pop
and
and
mov
xchg
outsb
xchg
std
pop
pop
xchg
jo
pushf
ret
jmp
cltd
mov
ss
add
sub
mov
ja
fadds
add
movl
out
mov
repnz
push
jno
jb
test
shr
xchg
or
jns
hlt
push
lods
dec
ret
xorb
les
push
mov
mov
arpl
push
imul
in
xorl
sub
imul
cs
les
mov
dec
dec
dec
xchg
movl
cmc
fcoms
popa
fs
leave
mov
stos
scas
nop
loop
into
ja
rorb
xor
dec
daa
data16
outsb
loope,pt
mov
insl
pop
inc
push
cli
in
cli
push
jmp
call
or
insb
lret
stos
insb
sbb
jnp
or
cmp
jns
sub
das
daa
push
xchg
cmc
in
clc
or
lahf
fistpll
popf
in
fnsave
xchg
and
cmpsl
icebp
lods
sbb
in
push
stos
push
sub
out
jp
xor
mov
ret
out
sbb
repnz
sub
inc
jnp
jle
adc
std
dec
dec
and
scas
mov
arpl
jp
pusha
dec
add
jnp
mov
stos
daa
and
mov
sub
cltd
fistps
ret
loope
out
or
push
xchg
jae
pop
push
addr16
adc
fsubs
movsb
adc
cwtl
daa
test
and
daa
mov
xchg
cwtl
sbb
fucomp
and
out
inc
arpl
xorb
movsl
inc
jg
jb
adc
dec
and
rorb
pop
out
fcmovu
adc
ficoms
xor
or
add
push
sbb
inc
push
call
cmp
push
stos
int
cmc
or
out
daa
pop
pushf
push
push
cmp
addr16
mov
insl
int
rorb
add
scas
nop
stc
inc
fstpl
cmpsb
push
adc
pop
mov
cmp
or
xlat
inc
scas
add
cmp
jg
sbb
sbb
mov
sbb
out
xchg
dec
sbb
push
cmp
xor
cmp
pop
popf
mov
stos
xor
repnz
xchg
or
and
jbe
add
leave
inc
cwtl
pop
mov
sbb
pop
jecxz
push
push
xadd
dec
cmpsl
nop
aam
imul
shrl
lock
lret
push
movntps
sub
xor
mov
les
icebp
test
add
test
jb
scas
lds
adc
cmp
scas
mov
sbb
daa
mov
lcall
adc
pushl
and
xor
outsb
sub
pop
fs
icebp
add
adc
das
dec
or
mov
movsl
push
xchg
inc
mov
push
xchg
stc
pop
pop
or
adc
pop
mov
inc
sti
cld
js,pt
xchg
jl
xchg
icebp
mov
dec
jns
or
xor
je
mov
dec
pop
push
xchg
or
or
gs
cmpsl
adc
loopne
mov
stc
cmp
sub
or
into
loope
lret
xor
or
in
and
xchg
data16
loop
mov
push
inc
push
rol
or
sarb
js
mov
and
xchg
movsb
xchg
shrl
loop
sti
sbbb
repnz
dec
test
cld
and
push
xor
call
inc
rorb
mov
lods
pop
gs
dec
mov
arpl
and
or
jne
fstpt
das
mov
lods
lock
int3
pop
cmp
mov
jecxz,pt
icebp
test
ss
std
pop
arpl
jae
and
lods
sub
mov
dec
out
mov
scas
inc
sub
push
jge
in
cmc
mov
lcall
add
sahf
or
or
mov
mov
pop
aam
and
mov
sub
nop
loopne
or
movsl
mov
dec
js
mov
pop
cmpsb
and
and
scas
lret
popf
test
movsl
inc
mov
jno
mov
xor
cwtl
mov
mov
mov
sub
pop
inc
mov
dec
xchg
cmp
dec
imul
pushf
andl
addr16
in
mov
sbb
jne
outsl
adc
hlt
sub
xor
sub
push
sbb
in
push
lods
jge
ret
dec
sbb
sbb
push
add
jo
cmp
imul
sub
repz
aas
jb
xchg
cli
aaa
bound
mov
mov
jmp
jne
lods
outsl
sbb
mov
leave
add
cwtl
cmpsb
aas
pop
std
leave
popf
js
pop
jecxz
jo
xchg
inc
rorl
sub
mov
sbb
inc
mov
bound
rorl
mov
repnz
dec
sbb
jge
das
sub
xchg
sub
movsb
in
mov
xchg
mov
call
aas
popa
rcrl
xchg
subl
loop
xor
xchg
adc
sub
lahf
dec
hlt
in
js
int3
cmp
test
mov
stc
push
in
sbb
sub
add
repz
call
dec
xchg
inc
jnp
or
flds
pop
rcrb
stos
cli
cmp
mov
mov
pop
mov
lret
inc
inc
mov
outsl
mov
pop
mov
cltd
nop
inc
icebp
inc
push
in
icebp
adc
add
add
orl
dec
int3
cmpsb
lods
fsubrl
push
lret
divl
mov
out
or
jns
mov
js
pop
push
std
in
cmpsl
lods
lahf
pop
stc
out
cmp
imul
lahf
mov
jl
mov
ds
mov
or
sbbl
mov
mov
xor
sub
mov
xchg
insl
pop
pop
das
mov
mov
movsl
into
mov
xchg
lahf
mov
pop
lods
daa
add
xor
jl
xorl
mov
movsl
xchg
mov
xchg
movsb
or
bound
stc
mov
pop
mov
push
pop
addr16
repnz
popf
jl
popf
jno
fwait
out
dec
pop
in
in
stos
fiaddl
daa
sahf
insl
cmc
adc
dec
mov
hlt
hlt
adc
mov
mov
push
inc
xchg
adc
dec
pop
mov
xchg
in
or
and
cmp
cmp
aad
xchg
and
dec
nop
in
or
adc
mov
fwait
sub
sti
jp
sti
lea
movsl
jmp
inc
pushl
xchg
jbe
pop
push
adc
dec
cltd
mov
in
test
lcall
and
lods
mov
xchg
pop
sbb
or
push
sub
aam
fcoml
sub
sahf
xor
and
adc
test
cmp
shlb
adc
jl
inc
mov
sub
dec
mov
jp
popf
inc
sub
ror
xchg
fwait
adc
adc
shrb
xchg
or
out
sahf
mov
mov
gs
cmp
sub
mov
sub
cmp
mov
jno
mov
fsts
cmpsb
test
or
push
mov
pop
sub
scas
cmpl
cwtl
int3
mov
fcomi
mov
lahf
push
add
xor
mov
or
lock
push
push
inc
dec
aad
xor
sti
mov
ljmp
rcrb
dec
iret
cli
jnp
add
scas
jge
bound
push
xor
xor
pop
mov
call
sbb
loop
jp
push
test
add
push
sub
pop
cwtl
scas
xor
inc
mov
sub
in
in
mov
stos
xlat
inc
aad
xchg
sbb
jp
sbb
mov
out
imul
pop
cmp
fildl
das
fstps
add
stos
stc
insl
pop
mov
push
and
push
jo
jne
xchg
orl
push
jno
add
je
inc
test
outsb
cwtl
lock
out
dec
jmp
sti
loope
clc
jb
xor
gs
xchg
sub
pop
mov
movd
lds
insb
add
mov
adcb
sbb
je
out
xor
ds
lret
ss
mov
mull
sbb
lock
shrb
flds
sar
mov
xor
mov
leave
aas
push
xor
xor
fcomi
addl
push
sub
js
cmp
cmp
fwait
icebp
push
cmp
pop
cwtl
sahf
mov
inc
adcb
pop
stc
mov
cmp
es
jne
mov
cs
mov
aas
mov
xchg
xchg
cmp
push
and
add
xchg
mov
imul
int
roll
ret
ret
jl
stos
push
and
add
pop
mov
cmp
sbb
popf
in
pusha
dec
in
mov
int
push
stc
pop
sub
xchg
dec
and
hlt
sbb
dec
xor
pop
loope
pop
xchg
jo
insb
pop
jmp
addr16
sub
cmpsl
sbb
int
adc
repnz
insl
mov
pop
aad
outsb
gs
lea
jecxz
xor
rcrb
ja
ja
lds
outsl
sbbb
and
shlb
aaa
decl
or
push
out
mov
pusha
dec
test
sub
xor
sbb
push
cmpsb
mov
or
mov
sbb
loopne
push
mov
sbbl
fstl
adc
xchg
inc
movsl
in
sub
dec
lea
pop
mov
loop
jge
sbb
adc
outsl
sub
sbb
sbb
mov
test
cs
outsl
in
mov
in
cmp
rorl
and
push
push
dec
add
push
fwait
dec
sub
mov
cmp
mov
test
stos
push
push
pushf
aad
lea
data16
cs
pop
dec
cli
xchg
cmp
movb
push
push
repz
shr
sti
shr
jo
test
popa
and
aaa
add
iret
adc
sti
jbe
stos
ds
sbb
xorl
mov
and
dec
daa
cs
bound
lret
ljmp
fiaddl
lds
aaa
in
arpl
std
inc
rolb
add
nop
lret
daa
cld
insb
xchg
ljmp
loope
mov
and
xor
test
test
nop
arpl
pop
fadds
add
test
test
jne
icebp
push
add
fldt
es
or
mov
adc
arpl
les
add
mov
push
jne
lahf
es
imul
fwait
int3
mov
cltd
xlat
cmp
pop
jo
mov
xchg
adc
jns
and
pop
subl
xchg
or
cmp
cmp
dec
shl
cmpsb
aam
add
hlt
cmpsl
movsl
out
cmp
dec
jno
pop
stos
ljmp
cmc
sub
add
sbb
dec
sub
mov
inc
cmp
leave
sarl
into
mov
sub
sbb
push
enter
xor
mov
shl
inc
push
push
add
jne
out
cltd
fidivrl
mov
scas
cmpsl
mov
mov
dec
in
int
cltd
lods
pop
test
fstpt
cmp
add
dec
sbb
stc
xchg
cmc
gs
mov
inc
or
jle
dec
cmp
pop
xlat
xchg
cwtl
mov
push
outsb
cli
repnz
and
lea
mov
out
sub
pop
dec
shrb
lds
aas
call
mov
push
lret
stos
xlat
pop
push
xor
in
sti
xchg
mov
pop
adc
add
jno
lea
jno
insb
test
shl
jae
in
cltd
cmp
and
push
mov
icebp
rorl
loopne
jmp
xchg
cmp
or
scas
sub
into
xlat
insb
mov
jmp
jnp
shlb
cmpsb
sbb
sti
jge
loope
aad
and
jle
clc
push
add
pusha
jle
pop
aaa
and
push
sbb
cmovbe
pop
mov
lahf
imul
sub
sub
cld
in
aas
push
decb
sbb
mov
lds
or
clc
push
mov
jns
sub
adcl
push
jae
imul
or
mov
sub
out
add
pushf
and
xchg
sub
mov
insl
push
inc
enter
shr
sub
add
cltd
sbb
cli
push
cmp
jge
sbb
adc
xchg
adc
arpl
xor
pop
insl
mul
ljmp
or
mov
push
les
cltd
ret
mov
test
into
dec
and
jge
push
and
mov
enter
cmp
add
mov
in
pop
pusha
out
jb
int
jbe
inc
call
inc
pop
jbe
add
getsec
stos
adc
mov
test
sub
inc
inc
cmp
push
pop
fistps
xchg
out
movddup
sbb
push
out
pop
filds
sahf
out
pop
inc
lock
push
loop
xor
loope
cwtl
lods
aam
or
arpl
jns
dec
jbe
sub
lds
iret
pop
ds
mov
inc
and
push
aad
iret
pop
imul
pop
pop
ljmp
outsb
xchg
movsb
adc
arpl
insl
loop
jp
dec
mov
push
and
adc
inc
push
dec
push
and
pop
nop
out
daa
dec
inc
out
xchg
outsb
out
fiadds
push
jge
clc
divl
jae
push
push
decl
jge
jne
scas
es
mov
ds
leave
leave
and
push
cmpsl
in
es
fwait
into
push
mov
push
shrl
cmp
into
sub
stc
push
lret
imul
movsl
push
cmp
cmp
and
outsb
imul
jb
push
and
enter
xchg
sbb
jo
add
movsb
xlat
dec
jae
movsb
xor
inc
mov
lahf
lds
out
mov
out
dec
into
mov
insb
sub
in
divl
sbb
hlt
or
pop
clc
sbb
fidivrl
cmpsl
jg
into
js
push
jns
lods
popa
pop
mov
inc
ss
mov
push
jb
aaa
nop
inc
and
dec
mov
enter
sti
lret
jle
ds
sub
in
xor
adc
test
cmp
adc
xchg
clc
add
jle
fldl2t
sbb
dec
pop
jnp
pop
jecxz
pop
das
inc
test
or
cmp
cmp
jbe
pusha
xchg
add
fcompl
roll
mov
and
mov
call
ds
xchg
jns
mov
xlat
sub
aaa
fstl
arpl
push
jbe
pop
imul
mov
mov
sbb
jecxz
inc
jns
and
and
inc
mov
ret
addb
inc
lock
mov
sahf
jae
jae
or
jmp
inc
dec
or
xchg
sub
shlb
xchg
test
test
imul
or
mov
adc
xchg
ficompl
enter
mov
sbb
pop
test
sbb
cmp
icebp
cmp
lahf
jb
sbb
cs
inc
ds
cs
push
dec
rcll
addl
pop
rorb
add
lods
mov
call
nop
ss
xchg
push
je
jae
lock
and
add
add
inc
adcb
pop
or
and
and
pop
mov
aam
xor
das
insb
xor
lods
add
jge
int
push
mov
add
insl
into
cmp
xchg
orb
jecxz
push
cltd
insl
lock
dec
mov
stos
add
push
sbb
push
push
jp
js
or
cmpb
jge
and
addr16
icebp
xorb
pop
mov
or
enter
test
loopne
jnp
sbb
sub
push
jbe
pop
orb
shlb
xorl
popa
cwtl
sub
mov
add
popf
data16
rorb
and
rcrl
mov
pop
into
aaa
lods
xchg
stos
es
inc
inc
stos
cmp
dec
push
add
and
mov
mov
or
repnz
add
sub
lds
fistps
mov
fbstp
cmpsb
fwait
repnz
cmp
mov
add
push
jl,pn
dec
repnz
lret
stos
xchg
inc
iret
mov
js
mov
mov
push
cmp
movsl
xchg
sbb
adc
mov
ljmp
jbe
mov
mov
outsb
repnz
shlb
cmp
in
shr
or
scas
pop
je
ds
adc
jne
lret
push
mov
loope
pop
std
add
mov
sub
adc
push
mov
in
jo
sbb
enter
fisubrl
scas
cmp
jbe
pop
sub
mov
fistpl
int3
iret
pop
mov
sbb
mov
mov
xor
sub
popa
icebp
dec
out
into
xchg
mov
mov
testb
mov
and
dec
cmc
jne
jbe
popa
lcall
push
filds
push
jbe
sub
les
sub
std
inc
lret
mov
xor
fldt
cwtl
dec
pop
mov
and
ja
or
jno
jns
loope
insb
or
dec
mov
cmp
push
fwait
out
pop
inc
and
cmc
mov
cli
dec
ds
or
sbb
cmp
push
loope
jge
ds
pop
push
xchg
ret
jns
add
add
inc
adc
mov
sub
xchg
sarl
lcall
std
adc
jno
fs
ljmp
dec
fs
sbb
mov
cmp
rcl
or
xchg
shrl
add
adc
idiv
ror
nop
xor
addb
pop
mov
imul
mov
pop
mov
xchg
xor
iret
mov
xchg
sbb
xor
cmp
test
lcall
add
jle
inc
adc
popa
pop
push
mov
std
inc
mov
scas
ret
stc
pop
cmp
xchg
and
sbb
out
sbb
add
scas
push
out
ret
inc
dec
daa
jg
sub
aad
test
aas
int
jp
lds
fistps
mov
cld
mov
stos
jnp
subb
jmp
leave
iret
std
hlt
adc
mov
lea
dec
or
sub
inc
jae
enter
rorb
aaa
fldenv
hlt
mov
test
mov
mov
outsl
mov
sub
les
rorl
xchg
lea
cmc
xchg
fistl
sti
add
xlat
cmc
insl
cmp
dec
leave
repnz
add
adc
jae
jl
clc
jmp
mov
xor
stc
mov
pop
fwait
push
arpl
and
adc
lods
jmp
nop
cmp
mov
mov
jne
aad
out
icebp
jae
push
mov
and
scas
inc
push
sbb
push
jl
pop
adc
push
jbe
fistl
cmp
roll
test
es
into
push
cmpsb
xchg
mov
js
arpl
out
scas
dec
lods
push
lret
mov
out
and
rcrl
push
sbb
aas
shlb
ret
xadd
mov
fdivs
jl
add
jbe
cmp
loop
rcll
mov
mov
daa
jl
leave
pushf
fdivrl
inc
icebp
sub
je
sbb
sub
mov
test
pop
xchg
xchg
jle
adc
push
or
pop
adc
addr16
aas
mov
xchg
jno
jo
jb
mov
pop
and
push
push
cli
pop
push
adc
insl
adc
mov
pusha
push
pop
adcl
inc
out
sbb
nop
loop
mov
sbb
xor
sub
sbb
mov
das
inc
sti
mov
lock
addl
shll
stc
lods
movsb
into
mov
xchg
nop
stos
jle
xchg
outsb
mov
xor
stc
sub
outsl
cmp
xchg
push
and
std
push
adcl
outsl
xchg
adc
dec
mov
mov
sub
cmpsb
cmp
cmp
push
jge
aam
dec
jne
xchg
popf
lcall
insl
imul
cwtl
cmpsb
stos
ds
inc
dec
sub
aaa
mov
and
xchg
cmp
inc
and
or
sarb
pop
or
les
scas
fisttps
fists
jae
xchg
into
pop
fwait
dec
aaa
xor
sub
dec
stos
enter
and
rcrl
aas
jecxz
dec
jg
fs
push
xchg
fidivrl
jle
out
in
sub
test
test
ljmp
mov
outsl
add
out
cli
sarl
insb
add
push
inc
sub
xchg
dec
push
enter
popa
movsb
sub
inc
mov
dec
push
pop
jle
inc
push
or
mov
xor
addr16
mov
in
adc
and
mov
test
mov
aaa
jg
std
xor
mov
jecxz
aam
and
insl
insl
ficompl
push
shrl
roll
mov
mov
sub
add
stos
jnp
ja
sbb
cmp
adc
inc
rol
cmpsl
scas
dec
add
insb
or
cmp
add
and
dec
and
pop
jecxz
je
mov
jl
incb
mov
cmp
pop
das
cltd
nop
pusha
add
jbe
xchg
sub
cmp
lahf
sbb
xchg
sbb
xor
adc
push
lods
cmp
add
repz
iret
repnz
pop
sbb
bound
mov
jl
pop
mov
xchg
xchg
call
pop
mov
dec
pop
int3
and
enter
sahf
incl
xchg
push
rcr
pop
int
daa
in
adc
dec
inc
adc
daa
std
pusha
inc
sbb
and
shrl
test
cmp
les
mov
xchg
sbb
push
sbb
mov
or
out
push
aas
cld
sub
es
inc
mov
adc
ljmp
or
adc
out
inc
rolb
outsl
and
sbb
adc
cwtl
mov
repnz
jo
test
xor
cmpsl
test
push
push
out
and
jg
adc
inc
adc
jge
sbb
mov
fmuls
cs
or
ffreep
sub
or
iret
adc
mov
push
cltd
push
sbb
in
mov
inc
push
adc
sbb
ficompl
and
or
dec
jg
xchg
fistpl
cmp
dec
add
pop
into
push
cmc
call
je
adc
outsb
loope
mov
or
cltd
xor
mov
mov
sub
push
dec
dec
jno
mov
lahf
lcall
jns
popa
pop
push
insl
outsb
ret
mov
test
mov
cmpsb
ficomps
add
sahf
jno
out
xorb
or
clc
test
add
mov
mov
mov
or
loop
rclb
mov
pop
enter
pop
fmuls
add
inc
mov
or
bound
fucomip
dec
test
jge
push
xor
lods
jae
push
xor
fistpll
push
shl
shll
rorb
repz
inc
divb
mov
xchg
lods
outsl
cmpsb
mov
mov
sub
cmc
pop
ret
movsb
xchg
xchg
lret
movups
into
int3
jb
mov
push
fwait
mov
add
frstor
mull
jp
inc
adc
lahf
icebp
inc
jle
sbb
lea
push
mov
add
imul
xor
pop
negb
ljmp
rolb
adc
out
inc
mov
push
sbbb
movsb
cmc
inc
roll
ret
push
lock
fs
mov
movsb
mov
scas
xor
sub
push
fdivs
call
pop
push
lret
test
push
ds
mov
rol
enter
dec
ficomps
sti
sub
mov
movsb
in
aas
pop
scas
xor
lret
or
mov
sub
mov
lret
lcall
dec
pop
cmc
xor
sbb
sbb
dec
dec
fisubrl
or
mov
cmc
inc
jg
push
jb
lahf
pop
imul
push
shll
out
repnz
jg
mov
push
mov
pop
mov
negb
jle
nop
sbb
mov
mov
in
mov
mov
movsb
jmp
popa
xchg
push
sbb
push
pop
mov
mov
dec
popa
je
sbb
stos
pop
add
jl
lea
ficoms
xor
lcall
xor
in
xor
jge
sbb
push
aaa
dec
lods
pop
sub
adc
std
repz
das
mov
jle
mov
cmpsl
add
xchg
subl
pop
aad
inc
xorl
push
cmp
insl
pusha
xchg
sbb
pop
stos
cmp
or
pop
inc
push
mov
rolb
mov
xchg
push
jg
cltd
out
movsl
data16
mov
pop
insl
push
sbbb
dec
out
mov
aad
xor
dec
fdiv
sbb
add
rcl
push
sbb
rclb
mov
incl
arpl
mov
cmpsl
lcall
dec
out
je
inc
push
hlt
jno
pop
ficoml
sub
loopne
sub
imul
sbb
inc
add
shlb
jno
pop
std
movsb
lock
xchg
fnstenv
push
jmp
sub
into
and
lahf
pushf
icebp
add
or
loope
xlat
pop
into
lock
add
mov
push
ss
outsb
push
movsl
jge
mov
or
aam
mov
fidivs
mov
adc
push
and
nop
jbe
jae
fnstenv
in
dec
mov
adc
lds
or
mov
sub
lahf
sbb
jl
push
jnp
andl
add
adc
cmp
push
xor
shrl
cwtl
loop
inc
push
lods
xor
sub
clc
inc
mov
out
jecxz
lahf
aad
maxps
push
loope
popa
sbb
into
or
nop
add
lahf
test
shl
xchg
movsb
rclb
insb
into
lcall
inc
sub
int
daa
enter
push
pop
jp
sbb
aas
mov
lcall
jmp
ja
dec
cmp
ljmp
dec
scas
test
xchg
push
data16
inc
das
adc
or
or
sarl
sub
xor
imul
sti
jle
aad
test
lds
ja
xor
dec
idiv
dec
jmp
jle
and
push
jo
cmp
and
pop
fcompl
sub
push
jg
mov
fdivp
mov
xchg
or
leave
mov
adc
adc
pop
xor
fldenv
lods
xchg
or
mov
push
xor
xor
add
fidivl
in
push
mov
xchg
fstpt
push
sbb
insb
addl
aad
call
add
daa
cmpb
outsb
or
xor
outsb
cmpsb
in
rcrb
lahf
fdivrl
mov
adc
das
sbb
stos
pop
sarl
pop
lret
mov
ret
inc
adc
adc
jl
cli
pop
ret
movb
insl
popf
mov
adc
movsl
jle
repnz
push
aaa
dec
push
dec
lea
ss
fstpt
inc
lret
movsl
sub
pop
or
push
into
xchg
push
jl
add
mov
mov
rcrl
sub
add
and
push
and
adc
popa
dec
fisubl
add
dec
mov
or
aaa
out
jl
rcrl
pop
aam
jno
sbb
jl
push
dec
dec
cmpsb
xchg
in
push
std
xchg
push
and
xor
xor
lcall
daa
fs
lea
mov
mov
xchg
jne
or
inc
jle
loopne
loopne
xchg
loopne
push
or
cmp
xchg
cmp
test
insl
pop
jmp
pop
sub
mov
jo
ss
jno
sarl
adc
or
in
mov
int
bound
aas
dec
jbe
cmp
or
mov
xchg
xchg
pushf
push
rcll
outsb
pop
mov
or
mov
push
push
leave
dec
add
mov
pop
cld
sbb
pusha
stos
lahf
mov
mov
push
push
dec
jno
rolb
insb
addr16
idivb
imul
mov
shlb
mov
add
push
push
sbb
xchg
int3
shlb
scas
shrl
cld
xchg
sbb
pop
in
xlat
addr16
add
loope
mov
and
add
pusha
cmc
in
incl
pop
or
xchg
aad
xchg
testl
or
out
hlt
push
lods
int
lods
xor
push
lcall
scas
inc
fcoms
lret
iret
jge
aaa
cmp
mov
repz
xor
jg
dec
cli
rcll
lcall
mov
cwtl
rorl
das
jne
mov
sub
push
mov
pop
stos
add
fsubrp
fiaddl
xor
or
inc
ss
je
sub
cli
test
sub
inc
push
cmpsb
popf
and
cmp
inc
mov
sub
arpl
ja
add
push
dec
dec
xchg
mov
es
jge
and
iret
inc
dec
nop
sbb
je
mov
cmp
or
pusha
pop
mov
fmul
push
dec
jge
pop
fs
inc
test
js
or
xor
scas
sti
shr
nop
xchg
mov
jo
lds
scas
ljmp
sbb
jmp
or
push
andl
adc
repnz
std
jno
into
icebp
ja
sti
sbb
outsb
rep
mov
daa
jb
push
dec
in
outsb
xchg
jl
ds
and
jmp
test
pop
sub
lea
leave
sub
jmp
movsb
shll
sub
test
lds
shrb
mov
jbe
mov
and
lahf
jmp
ret
test
wrmsr
into
cld
lods
mov
mov
jno
gs
into
inc
testl
and
fimull
call
mov
lock
or
aas
sbb
jns
pop
out
fsubs
in
cmc
jae
inc
dec
call
or
pop
movsb
mov
sub
add
pusha
in
mov
les
std
in
xlat
and
or
mov
shrl
mov
pop
outsl
jmp
sti
mov
push
pop
pop
and
sub
mov
mov
mov
fstpl
insb
or
cltd
dec
jns
mov
daa
or
sbb
inc
fbstp
sbb
jmp
sbb
mov
pop
mov
mov
sbb
xor
cmpsl
xchg
push
lods
cmp
sti
arpl
fdivs
daa
cmp
std
inc
cwtl
dec
cltd
dec
insl
mov
insb
jns
and
fidivrl
mov
pop
jns
shll
dec
lds
shll
ja
int
iret
lods
cld
cmp
pop
cmpsb
out
and
add
lret
mov
ss
jp
pop
les
lahf
cmp
mov
jns
loopne
push
daa
push
lods
dec
fdivp
repz
sti
add
gs
cmp
mov
push
fldl
test
add
lds
push
arpl
inc
call
rol
inc
push
sub
imul
mov
cmc
leave
inc
cmp
mov
pop
inc
cmp
outsb
xchg
in
dec
stos
inc
sbb
leave
cmp
mov
mov
ficoml
scas
or
sbb
pop
xchg
insb
xchg
pop
sub
clc
jno
insb
pusha
mov
or
addr16
sbb
xor
out
sti
shll
insb
xchg
jo
adc
cmp
add
inc
std
addr16
fsubrs
fs
add
mov
test
testb
xor
loope
sbb
mov
test
cltd
dec
shll
outsl
inc
adc
or
push
insb
lret
outsb
xor
and
aaa
mov
lds
pop
loop
mov
icebp
jg
mov
ss
testl
mov
mov
pop
xor
sub
jb
cmc
into
out
cmp
movsb
dec
pusha
cmc
cmp
xchg
push
test
dec
add
in
movsl
nop
int
adc
cmpxchg
pop
push
out
sub
sbb
addr16
and
out
add
insb
adc
repnz
es
jge
and
mov
mov
sti
xchg
lret
int
mov
scas
cmp
push
add
sbb
mov
adc
test
jmp
std
pop
out
xor
scas
stos
sbbb
loope
or
gs
dec
add
dec
ret
mov
push
int
sbb
int3
iret
test
pusha
pop
mov
inc
stc
test
xchg
jmp
ss
push
out
push
mov
mov
push
jge
inc
aam
mov
sub
sub
push
xchg
jle
test
vpcmpeqd
xor
cld
rorl
insb
into
cmc
fs
jb
pop
jl
or
scas
push
jl
xchg
sub
ds
or
pop
dec
cmp
retw
stos
pop
jecxz
imul
lds
mov
mov
js
cmpl
fsubrs
mov
inc
jno
push
adc
xor
test
mov
sti
in
and
repz
add
and
and
testb
fucom
rcrl
xchg
fidivrl
mov
cld
lods
mov
xchg
or
imul
and
xor
imul
lock
lahf
decl
push
inc
jmp
ss
add
iret
jge
cs
lods
push
outsl
cmp
pop
mov
jne
shr
out
shrl
jge
loopne
mov
push
push
sbb
sti
sbb
mov
fidivrs
inc
bound
or
imul
sbb
sarb
in
mov
inc
inc
fldenv
pop
fwait
pusha
test
xchg
inc
push
xor
add
adc
jae
dec
xchg
dec
arpl
out
outsb
rorb
movsl
push
and
mov
mov
cmp
inc
inc
and
imul
push
and
negl
dec
hlt
fs
mov
inc
cmp
push
mov
mov
pop
mov
inc
jle
push
jae
fldl
dec
in
xor
jne
jmp
fwait
xor
sbb
push
into
xor
fwait
cmp
mov
ret
outsb
mov
inc
push
lods
int3
xor
xchg
jo
xor
enter
fldl
loope
insb
int3
mov
cs
sbb
pop
imulb
fdivp
sbbl
gs
jmp
adc
add
xchg
icebp
testb
mov
mov
xor
pop
test
je
push
dec
adc
sub
mov
adc
fmuls
cmp
out
sbb
pop
add
int
clc
ds
pop
lahf
mov
cmp
jno
sub
push
dec
pusha
out
mov
push
out
push
sbb
adc
cmpsb
cli
pushf
mov
in
ret
xchg
pop
cmp
mov
or
fs
lea
jo
icebp
addb
inc
cmpsl
out
mov
xor
jo
outsl
sbb
fmulp
and
andl
lods
pop
mov
mov
dec
adc
scas
repz
jl
out
xchg
pop
mov
mov
sub
es
out
aas
sub
ret
sti
jl
das
sbb
push
pushf
jbe
xor
cmpl
fwait
mov
rcrb
imul
repnz
jmp
pop
jp
inc
cmp
fmuls
in
add
ret
and
fiaddl
dec
or
cmp
cmp
shll
test
ss
mov
repnz
repz
movsl
je
xor
mov
sbb
mov
push
enter
jle
jmp
xchg
ret
cmp
sub
cmc
ja
ja
mov
aas
and
sub
sub
cwtl
cmp
mov
xchg
psrlq
push
fsubs
scas
out
aad
and
test
push
sub
xlat
js
add
dec
push
jae
xchg
adc
out
mov
and
jb
mov
and
dec
adc
xor
xor
dec
pop
icebp
orl
jl
test
outsl
les
mov
mov
jp
cmp
into
inc
mov
dec
sbb
push
mov
mov
mov
je
ret
pop
ja
cmp
cmpsb
inc
add
cmp
xchg
or
adc
movsl
sub
fldenv
pushf
xlat
adc
add
pop
fisubrs
mov
pop
or
outsl
add
sub
sbb
inc
cld
test
xchg
movsl
and
ja
lret
fisubs
jl
xor
inc
mov
aaa
shrb
xchg
jns
mull
xchg
aad
mov
mov
and
jge
cmp
mov
push
ljmp
cmp
ljmp
and
pop
inc
mov
pushf
mov
jns
stc
push
adcb
xor
mov
pop
pop
sub
imul
xchg
sti
out
adc
lcall
sub
cmp
or
movsb
add
test
push
inc
add
cs
loop
ss
cli
repz
xchg
lcall
lods
mov
mov
call
js
add
loop
mov
fs
divl
aaa
ss
clc
filds
lods
cmp
xchg
cld
sub
movsl
fs
jmp
mov
jp
test
xchg
pop
xchg
cmp
cmp
pop
out
fcmovbe
mov
mov
adcl
les
inc
rorl
jle
dec
pop
sub
mov
inc
sbb
cmp
adc
jecxz
push
jmp
arpl
mov
mov
pop
cmpsl
cwtl
dec
sub
aad
xorb
adc
mov
aaa
or
and
jle
repz
cmp
imul
lcall
loop
xchg
repz
and
push
xlat
xchg
mov
mov
jg
pop
xor
fcom
sub
enter
mov
js
sahf
daa
inc
jne
shl
inc
mov
pop
sbb
lret
push
outsl
out
sub
jg
jecxz
xor
jns
gs
add
clc
cltd
pop
inc
mov
sub
sbb
fst
fcom
dec
and
jl
movsb
loopne
popa
shl
add
rcrb
and
sbb
sbb
lods
scas
arpl
repz
shrl
sbb
pop
or
and
xor
dec
sub
xchg
cmp
cmp
dec
lcall
pop
leave
fs
pop
mov
jb
and
inc
fdivrl
sub
out
sbb
ljmp
std
push
out
lds
imul
sbb
jns
or
sbb
repnz
push
xchg
adc
scas
cmp
fs
in
gs
push
jnp
clc
adc
shrb
push
push
pop
insb
rcrb
jae
push
aas
mov
pop
stc
out
sbb
aad
or
gs
add
cltd
and
mov
bound
jp
and
hlt
jae
sbb
pop
mov
stc
scas
dec
inc
lcall
fidivrl
push
ret
aad
push
fildll
ret
jno
mov
push
imul
mov
adc
in
sub
std
lret
maxps
mov
or
or
mov
add
push
aam
incl
fstl
repnz
lea
or
fiadds
adc
hlt
mov
sahf
push
imul
dec
into
shll
dec
or
cmp
bound
push
mov
jno
mov
inc
add
ss
aaa
into
rcr
sbb
cmp
test
jbe
bsf
or
movsb
cld
pop
or
bnd
ljmp
sub
add
mov
das
andl
push
dec
ret
sub
sub
and
int
add
xchg
push
enter
xchg
test
and
lods
imul
xchg
ret
and
adc
cmc
mov
xchg
and
fs
cmc
mov
dec
enterw
xchg
in
mov
scas
mov
aas
stc
xchg
xor
ds
pop
and
jno
js
and
mov
inc
fimull
fwait
fwait
shll
scas
xchg
lock
push
in
and
sahf
push
ficompl
xlat
cmp
push
xor
adc
add
sbbb
test
mov
xor
mov
mov
pop
scas
fwait
xor
ret
rcr
xchg
inc
fcomps
inc
cmpsb
sub
xlat
imul
jo
mov
mov
mov
pop
dec
mov
mov
add
data16
sub
sbb
shl
fst
mov
mov
xor
xchg
lea
add
adc
stos
fisttpl
into
daa
xchg
jno
scas
jl
push
aaa
loopne
dec
push
in
in
or
push
lock
sub
sub
rol
jbe
xor
popa
xchg
pop
xor
fimuls
lcall
loop
xchg
leave
lock
jae
arpl
xchg
cmp
fisubl
loop
adc
out
lcall
mov
test
xchg
and
in
fwait
sar
in
sbb
xchg
sbb
or
and
pusha
mov
or
xor
mov
test
inc
and
test
dec
adc
mov
das
imul
xchg
xor
mov
sbb
leave
hlt
push
cmp
call
ja
pusha
mov
into
sbb
aaa
aad
sub
and
adc
push
loopne
cwtl
xchg
insl
cltd
mov
stos
push
ror
adcb
clc
or
jno
fs
sub
xchg
mov
testl
inc
jg
push
cmpsb
jmp
movsb
jl
repnz
xor
add
popa
jnp
mov
push
dec
notb
cwtl
cmp
push
mov
nop
mov
inc
icebp
add
outsb
cmpb
mov
pop
sbb
cmp
inc
adc
fistpl
xor
fsubrp
ret
or
jmp
loop
xor
test
dec
sub
ret
xor
sahf
leave
nop
dec
popf
mov
xor
pop
fstpt
pushf
out
dec
xchg
andl
push
cs
imul
nop
jae
push
inc
adc
movsl
jne
out
rorb
push
xor
fsts
outsb
scas
mov
xchg
jb
inc
ret
dec
pushf
xor
dec
ret
loop
inc
int3
sub
sbb
es
sub
mov
jo
mov
sub
jmp
push
inc
add
test
notl
dec
push
nop
leave
inc
dec
outsl
aad
inc
jne
cmpsl
test
popf
sbb
enter
std
stos
fistl
sbb
push
jg
aam
cmc
add
jnp
in
jns
inc
mov
sbb
scas
es
pop
xchg
stc
frstor
mov
inc
in
aaa
push
cltd
mov
jge
and
xchg
shll
push
stos
jbe
inc
and
add
mov
sub
xchg
adc
aaa
jns
mov
leave
aaa
popa
xchg
iret
pop
adc
jg
push
sbb
test
cmc
in
push
mov
xchg
add
xor
int
xlat
and
push
gs
arpl
cmpsb
arpl
mov
in
gs
xor
xor
adc
and
cmp
leave
clc
int3
cmpsl
call
mov
loope
sbb
cmc
inc
ja
and
cmp
stos
dec
cmp
fnstenv
fbld
fldt
in
cmc
push
in
in
lock
insl
sub
inc
cli
add
loopne
fcoms
inc
mov
mov
mov
loope
and
insl
in
ret
dec
and
fiaddl
dec
loopne
jl
into
fucom
lock
cmpsl
push
insl
hlt
loopne
loope
inc
inc
mov
push
int3
and
or
in
dec
xor
add
inc
or
jmp
inc
jae
test
dec
jbe
in
xor
mov
xor
or
nop
sahf
mov
pop
xchg
int3
fs
mov
stos
xchg
bound
push
or
subb
sbb
test
push
pop
andl
cmp
and
ret
rcll
mov
ds
bt
xor
sbb
and
xchg
inc
dec
mov
adc
lret
pop
push
sbb
mov
fstps
cli
and
or
in
incb
adc
rcl
shrb
lods
pop
shlb
dec
sub
ljmp
pop
xchg
dec
push
add
mov
std
outsb
cli
mov
inc
les
ss
scas
jb
inc
xor
test
lea
mov
and
movsb
fcompl
sahf
enter
jae
cmc
mov
mov
jmp
add
mov
in
lcall
add
push
jle
mov
imul
cs
jns
loopne
shrl
pop
pop
stos
sbb
sub
jmp
call
roll
mov
repnz
clc
arpl
nop
test
xor
addr16
test
jl
lea
addl
jecxz
add
pushf
xchg
notb
lahf
push
popf
adc
jb
insl
insb
xor
mov
adc
sub
or
je
push
nop
mov
notb
mov
lock
inc
push
test
xchg
add
mov
in
push
cs
cwtl
jns
hlt
test
sub
push
pop
scas
sub
push
fxtract
outsl
ljmp
insl
bound
dec
arpl
adc
loop
add
or
jae
sbb
lods
lds
hlt
xchg
lods
outsl
mov
out
xchg
es
cmpsl
mov
push
jns
cmp
xor
aam
shrl
mov
movsl
shr
fstpt
jns
cmp
in
and
sahf
lods
sbb
lds
jne
call
btc
mov
or
inc
sbb
push
lock
mov
lds
addb
jg
cltd
insl
daa
jae
dec
out
mov
repz
mov
dec
ficompl
cmpsb
sub
sub
mov
xlat
or
mov
lret
mov
dec
pop
in
mov
push
dec
sub
mov
or
cmp
push
nop
movlps
push
imul
inc
int3
lods
push
rcr
push
dec
ss
stc
xor
clc
out
out
mov
mov
fistl
popa
int
sub
jmp
andb
or
scas
sbb
cld
xor
ja
fstl
and
lcall
jmp
sahf
sbb
pop
pop
or
ss
sub
je
shrl
dec
mov
cmpsb
dec
pop
jbe
loop
cwtl
ret
mov
test
test
iret
test
lods
lcall
mov
xchg
ret
lods
dec
out
out
add
rolb
ja
mov
xchg
mov
outsl
lret
or
fwait
mov
js
decl
mov
pop
mov
inc
adc
inc
daa
data16
push
push
push
in
dec
cltd
orb
mov
xchg
out
xor
adc
cli
pop
jno
outsl
mov
mov
inc
pusha
jl
adc
icebp
aam
sub
cmp
cmp
cmpsl
and
in
push
fs
jns
aas
cmp
or
sub
cmpb
aaa
lret
lea
mov
push
jg
fs
sbb
lds
fimuls
or
push
aas
mov
adc
and
dec
cwtl
inc
sbb
lcall
inc
jbe
clc
sbb
sub
fldl
sbb
pushf
mov
cmp
cmp
pop
mov
ja
jp
outsl
lcall
sbb
rcll
mov
mov
out
push
mov
insl
mov
mov
mov
adc
sbb
push
ljmp
cmp
hlt
cwtl
mov
std
subb
loop
icebp
mov
add
loopne
push
daa
mov
push
movsb
outsb
xor
or
popf
loopne
into
lock
inc
mov
sbb
jnp
test
cmpsb
xchg
xor
out
inc
into
les
sti
or
jns
sub
stos
fldt
push
push
sbb
jae
mov
faddl
lock
imul
stc
or
sub
push
and
mov
jae
mov
in
fdivrl
inc
push
mov
xchg
sbb
lods
ljmp
and
mov
lret
push
lock
inc
test
push
imul
jle
in
scas
lcall
push
aas
popa
sbb
inc
dec
clc
popf
mov
lret
shrl
gs
add
push
cmp
sbb
or
sbb
jg
sub
xchg
fildll
fnop
cmp
inc
stc
imul
lahf
outsl
lahf
shrb
lahf
test
cltd
sbb
jbe
xchg
pop
dec
sbb
in
add
sub
mov
call
inc
ja
inc
cmpsl
pop
mov
rol
mov
lock
dec
repnz
dec
push
cmp
movswl
jae
scas
hlt
lret
fstps
sub
subb
int
pop
int
mov
inc
outsb
cmp
lods
es
popa
jae
enter
adc
stc
fcomps
mov
test
add
xchg
xor
imul
pop
inc
popa
xchg
mov
sub
dec
xchg
aaa
rclb
das
cmp
pop
or
mov
and
mov
into
rorb
xor
cmp
imul
imul
sbb
scas
icebp
andb
xor
stos
imul
aaa
and
jge
or
push
jg
jp
test
outsl
push
int
push
das
xor
stos
add
test
or
out
pop
adc
out
jae
dec
jnp
or
jno
xchg
cmp
adc
pusha
lods
cmc
mov
push
out
inc
aaa
jle
call
sub
adc
mov
inc
jmp
fcmovbe
fmuls
arpl
insl
je
push
inc
lods
ds
out
dec
dec
outsb
sub
mov
std
das
subb
jae
cmovbe
xchg
add
in
mov
stc
inc
adc
push
cmp
popf
scas
test
xor
ret
pop
pop
fcomps
inc
xchg
jmp
add
sbb
adc
push
lea
data16
enter
int3
ret
subl
cmp
xor
enter
push
add
fsts
lods
jo
mov
add
cmp
das
loopne
xor
push
cmp
xor
in
ss
aas
sbb
stc
sti
or
push
adc
popf
push
inc
xchg
jae
jl
test
lret
dec
xchg
sbbb
hlt
adc
pop
roll
xchg
movsb
mov
ret
mov
fisubrl
pop
lods
test
stc
in
sbb
imul
cli
jmp
daa
push
mov
aaa
loop
outsl
push
jp
mov
push
ficoms
push
xchg
add
push
push
cmp
jb
cmp
aad
or
jecxz
sahf
faddp
mov
jge
mov
adcb
dec
push
xchg
sub
mov
pop
cltd
das
pop
out
push
lock
lcall
int3
clc
add
cld
mov
sahf
jae
cmp
scas
imul
aad
dec
mov
push
pop
ds
sbb
mov
pop
popa
sbb
mov
icebp
out
push
xchg
repnz
push
fwait
sahf
push
pop
or
scas
jnp
popf
lret
cmc
call
lahf
mov
sahf
jmp
sub
std
xchg
push
ljmp
inc
sti
inc
lea
stc
mov
in
loop
fldenv
pushl
dec
jb
mov
add
xchg
fstps
dec
dec
test
popa
inc
in
rorl
inc
mov
jae
sub
mov
jno
sub
push
or
and
xor
jmp
push
and
push
lahf
mov
inc
subb
out
inc
wbinvd
ret
notb
cmp
test
clc
pop
jl
dec
mov
ret
in
adc
jnp
cmp
imul
mov
fsubr
mov
mov
dec
out
out
or
mov
push
loope
bound
insb
mov
or
pop
out
mov
or
retw
jge
cmp
sbb
pop
ret
jge
and
xor
hlt
cmp
push
lea
add
loop
mov
xchg
adc
fcom
repz
test
pushf
sub
mov
bsf
cmp
inc
xchg
ret
movsl
mov
pushf
insl
loope
ja
rclb
sahf
cmp
xor
out
fsubrs
jmp
dec
js
or
lcall
mov
fbld
sub
fwait
icebp
jmp
dec
or
out
xlat
icebp
in
sahf
iret
nop
dec
jne
push
lret
jne
popf
pusha
imul
mull
loope
aas
js
addr16
iret
shrb
mov
push
ds
xor
jo
subb
or
clc
sub
or
arpl
cmp
push
mov
hlt
jge
xor
scas
std
and
lds
clc
xchg
xor
loope
xchg
fcomi
cmpsb
iret
test
push
aaa
mov
mov
lret
push
sbb
push
xor
fcoms
fwait
in
push
ret
aaa
mov
cmpb
and
xchg
pop
xor
fisttps
xor
aaa
aam
push
inc
mov
shrb
mov
lret
mov
add
outsl
js
and
push
xchg
lret
add
lods
scas
inc
pop
and
int3
loopne
outsl
out
popa
jns
jecxz
aas
cmpb
sarb
out
in
pop
stos
mov
mov
fimull
in
fs
push
dec
enter
mov
jno
push
xchg
lods
pop
adcb
mov
enter
fldenv
jecxz
jno
cmpsl
sbb
stos
lahf
test
into
test
push
jo
dec
clc
insl
dec
icebp
or
jge
xchg
cmp
or
xor
sarb
aad
mov
xlat
or
clc
std
mov
js
test
mov
add
repnz
xor
mov
adc
dec
pop
xchg
inc
sub
enter
mov
outsb
jbe
or
pop
dec
and
ret
movsb
mov
sub
push
jmp
mov
jl
fimull
inc
andl
pusha
sub
outsl
xchg
insb
inc
sub
fnstcw
fwait
ret
inc
pop
push
aad
push
pop
inc
mov
jne
test
jecxz
leave
sub
js
xlat
mov
cmpsb
add
les
sbb
pop
in
cmpsl
lcall
jge
mov
pushf
xchg
rcll
push
jb
enter
icebp
lret
inc
ret
shl
sbb
mov
sub
and
call
push
out
add
lret
repz
fsubs
dec
ret
gs
in
push
loopne
xor
mov
adc
push
testl
mov
mov
ret
pop
and
iret
sahf
lea
xor
xor
mov
pop
stos
xor
imul
and
imul
cmp
test
pop
mov
mov
in
test
add
lds
xchg
jae
popf
mov
push
rcr
jge
inc
leave
mov
popa
in
lds
inc
std
loope
rcll
fsubl
and
mov
fistpl
pop
push
sub
popa
inc
or
cld
imul
mov
jns
out
in
sub
inc
decb
negl
jne
popa
inc
mov
and
js
mov
xchg
icebp
je
adc
adc
cli
mov
stc
imul
test
cwtl
scas
fcoms
sbb
inc
dec
mov
or
cmp
cwtl
push
cmc
mov
jo
sbb
or
lahf
loope
push
lret
sbb
dec
lds
push
cli
push
inc
cwtl
push
and
mov
xorb
xchg
pop
fcomip
adc
sbb
clts
jne
adc
push
fcmove
sub
dec
push
vpminsw
mov
orb
xor
in
sbb
outsb
inc
push
aam
mov
inc
mov
test
ds
and
adc
and
or
or
movsl
loop
pusha
xchg
daa
sub
or
movsb
pop
dec
mov
ret
or
jns
push
push
mov
jae
or
test
loope
movsb
sbb
out
xchg
iret
adc
and
pop
and
xchg
pop
sbb
mov
stc
push
add
jge
ret
jmp
sub
aam
xor
insl
xchg
repnz
addl
aad
scas
jl
sbb
fsubs
inc
mov
arpl
cmpsl
stc
adc
cmpsl
xchg
in
rclb
stos
pop
pop
cmpsl
mov
xor
clc
inc
jns
push
in
inc
std
loope
jmp
or
fcompl
mov
inc
lahf
adc
mov
mov
je
push
sbb
sbbb
jbe
mov
jns
lahf
mov
lcall
jl
sub
jbe
mov
outsb
cmp
sub
inc
lock
in
inc
push
mov
lcall
xchg
rolb
jmp
inc
sub
das
aas
jae
testb
aas
push
cmp
imul
aas
push
push
sbb
push
sub
or
daa
sub
or
shlb
pop
add
cmp
sbb
insl
popa
sub
xor
incb
lret
movnti
mov
dec
popf
xchg
pop
xor
fnstcw
dec
scas
hlt
mov
popf
sti
adc
xchg
adc
xchg
jmp
inc
mov
cmpsb
arpl
mov
daa
xchg
jg
add
mov
cld
ret
inc
shlb
mov
adc
aam
addr16
lock
xchg
loopne
clc
icebp
aaa
daa
mov
bound
pop
pop
je
inc
imul
icebp
mov
jne
lcall
aam
push
sbb
adc
cltd
ret
fs
sub
repnz
xchg
xchg
dec
mov
mov
inc
or
ljmpw
pop
pusha
push
das
stc
pop
fmul
enter
adc
scas
dec
rclb
jmp
xchg
fisubs
popa
sub
inc
adc
jecxz
test
push
cmpl
loope
out
std
cwtl
mov
mov
push
pop
mov
in
bound
dec
inc
pushf
mov
adc
cmpsl
out
rcll
rclb
mov
cmp
add
sub
dec
or
sbb
cmp
repnz
mov
imul
loop
out
outsb
lahf
stos
pop
mov
pop
mov
and
gs
and
not
ret
cmp
neg
out
sub
push
sub
xor
int3
aam
fs
pop
fidivs
scas
sub
jecxz
les
mov
lea
pop
in
addl
jge
lcall
les
mov
cmp
push
mov
jae
lcall
xor
lock
dec
jge,pn
sbb
inc
inc
and
popf
jnp
shll
loope
int
dec
xchg
mov
mov
dec
addr16
xchg
mov
rol
jns
cmp
push
insb
dec
ret
lods
or
addb
popa
mov
mov
jo
out
mov
adc
out
in
mov
les
inc
fstps
ljmp
dec
nop
addr16
cmp
inc
adc
sub
xchg
adc
pop
inc
enter
imul
xor
sub
out
outsl
movsl
imul
daa
jle
jae,pt
fldcw
mov
hlt
sbb
aad
push
mov
js
out
push
mov
jl
pop
cmp
movsb
pop
scas
in
roll
pop
daa
pop
and
jmp
add
xchg
syscall
mov
aas
adc
gs
push
lock
fisubrs
inc
repz
push
inc
dec
dec
pop
xchg
mov
xlat
lods
call
lcall
pop
fstl
ds
pop
cmp
imul
enter
popa
outsb
sub
adc
andl
cld
shll
popa
dec
fsts
xchg
and
enter
aaa
push
fwait
sub
mov
imul
out
xor
jns
and
jb
pop
adc
mov
fstpl
xchg
dec
xchg
mov
stos
mov
adc
cmpsb
arpl
mov
mov
dec
rdmsr
lds
idivb
inc
sub
iret
xchg
xor
fimull
and
outsb
and
je
popf
outsl
jecxz
out
movsb
jl
jecxz
pop
rcl
xchg
or
push
inc
loope,pn
pop
mov
ret
clc
icebp
sbb
mov
insl
jge
fiaddl
gs
push
test
ficoml
icebp
xchg
cmp
mov
imul
mov
mov
out
push
ds
dec
xor
int
sub
push
sub
add
add
add
cmc
jb
xchg
or
lds
cli
sbb
lock
pop
data16
shrb
jp
or
nop
shlb
and
cmp
rorb
push
pop
mov
leave
iret
dec
pushf
sub
pop
adc
in
out
cmc
fadds
ret
sub
xchg
push
mov
cmp
ja
inc
ljmp
mov
popf
jecxz
xchg
in
in
pop
mov
sub
xchg
sub
test
repnz
pop
nop
pop
and
pop
inc
pop
aaa
mov
les
orl
cmp
call
insl
leave
jne
jge
add
aam
cld
cmpsl
enter
hlt
mov
mov
dec
dec
loope
inc
inc
shll
es
fcomps
jae
fwait
xor
rcr
cwtl
cmc
imul
push
std
outsb
xchg
push
xor
sub
pop
sbb
or
filds
test
push
adc
jae
xchg
and
jecxz
sti
jl
cld
push
rolb
out
and
cmc
jl
mov
out
loop
out
imul
xor
cmp
insl
movsb
loopne
cmp
sub
jge
scas
pop
fistpl
shlb
mov
jmp
pop
adcb
test
pusha
mov
inc
jp
in
cs
pop
inc
mov
adc
ja
inc
sbb
cmc
mov
bound
call
out
iret
call
sti
ss
aam
add
pop
lret
bound
mov
aad
xchg
ficoml
add
dec
or
arpl
mov
dec
rclb
incl
cmpsb
data16
cmpsb
hlt
push
fnstcw
mov
pop
or
adc
dec
dec
jmp
jp
cmp
popf
shl
subb
inc
hlt
push
xchg
loope
aam
popa
lret
push
add
aam
jae
in
inc
into
cmpsl
jno
xchg
ror
adc
add
xor
aas
repnz
mov
out
push
add
mov
test
xchg
jbe
xchg
xchg
or
cmp
cld
push
and
rorl
sub
inc
int3
add
sti
jecxz
mov
addr16
add
or
mov
inc
push
fcoml
mov
dec
loope
aaa
push
inc
icebp
int
inc
mov
push
insl
jnp
lods
roll
cmc
test
mov
dec
les
add
sub
pop
fisubrl
cmpsb
mov
and
int3
stos
jp
jne
jbe
test
addr16
cwtl
push
cmpsb
lcall
fsubl
sub
sbb
ret
sub
rolb
data16
in
and
xor
sbb
pop
repnz
outsl
or
fsubr
cld
and
fidivs
mov
inc
lcall
in
cmpsl
sbb
xchg
add
or
mov
inc
cmpsb
fisttps
xchg
ret
rorb
add
inc
icebp
pop
jns
insb
mov
nop
and
lods
imul
pop
sbb
es
inc
sub
mov
jecxz
lcall
inc
sbb
arpl
outsb
mov
data16
mov
sarb
repnz
out
jne
push
xchg
adc
shrl
loopne
sub
inc
dec
jb
sbb
xchg
pop
addr16
xchg
call
inc
and
or
sbb
push
push
andl
lea
add
cmp
pop
lcall
jge
xchg
pop
jo
xor
jmp
sub
push
sub
insl
ss
pop
repnz
into
dec
push
dec
mov
mov
inc
xchg
divb
inc
out
mov
pop
out
dec
jne
dec
or
mov
stc
mov
leave
call
lcall
fdiv
iret
mov
mov
icebp
jl
std
mov
movsl
push
sub
sbb
loopne
mov
mov
xor
outsb
decb
xchg
xor
sahf
push
lock
inc
outsb
mov
push
sbb
aam
je
jg
popf
pop
insb
inc
mov
xchg
test
mov
popa
iret
mov
sub
enter
orb
xchg
icebp
add
xor
pop
enter
fwait
mov
inc
repz
aaa
inc
and
jnp
xchg
clc
sbb
adc
push
dec
in
loopne
js
mov
push
inc
outsb
jmp
pusha
sti
fs
pop
leave
cmp
push
bnd
sbb
and
ljmp
inc
jl
push
sub
adc
rol
and
xchg
inc
mov
pop
mov
in
out
push
mov
jg
pop
scas
lea
or
and
ret
ss
sarl
in
mov
fimull
arpl
hlt
dec
outsb
inc
sti
ftst
stos
cli
push
rclb
popf
xchg
subl
shrb
xor
add
and
mov
out
pop
in
stos
sub
orl
data16
jae
out
mov
jb
pop
jno
xor
push
inc
cmp
sbb
mov
jp
hlt
sub
mov
pop
pop
mov
xchg
lock
insb
fsubrl
data16
outsl
xor
xchg
adc
hlt
dec
push
xlat
loop
mov
cmpsl
ljmp
push
sbb
int
inc
jns
mov
movl
xor
or
pop
test
rclb
call
flds
setb
xor
pop
outsb
and
mov
sbbb
cmc
fbld
pop
mov
xchg
scas
imul
into
pop
loop
pop
fwait
lock
dec
movsb
jl
inc
arpl
aaa
imul
fs
adc
fsubrs
mov
sub
fabs
adc
push
outsb
or
leave
ficomps
xchg
ljmp
aam
sbb
mov
and
pop
pop
inc
sbb
stos
loopne
lods
dec
pop
ret
lock
shr
std
inc
or
or
popa
or
dec
nop
mov
push
fwait
sub
mov
movsb
out
icebp
insb
sbb
jnp
mov
pop
aaa
incl
dec
and
xchg
mov
rorb
sti
insb
or
mov
jp
gs
testb
test
sti
test
cmp
mov
into
and
pop
cwtl
jl
push
inc
iret
int3
mov
jg
and
mov
das
fmuls
and
mov
in
cmp
fidivl
push
in
cmp
adc
adc
xchg
jno
cmpsl
xor
xchg
pop
jne
adc
adc
insl
xchg
and
shl
ficomps
ljmp
push
pop
dec
or
pop
mov
in
or
xchg
push
rcr
in
pop
movsl
xchg
int3
push
lahf
dec
xor
out
and
test
comiss
mov
mov
stos
daa
addr16
jmp
push
lods
sub
js
pop
jp
sub
dec
andl
iret
ds
leave
sbb
sbb
xchg
rcr
hlt
lahf
push
adc
jae
ret
aaa
bound
mov
div
and
das
xor
ret
xor
sub
or
paddq
imulb
mov
mov
dec
imul
outsb
xchg
mov
jns
mov
mov
lret
js
mov
sbb
xchg
xor
sbb
fs
das
and
lahf
pop
pusha
leave
mov
rcr
xor
mov
sub
outsb
xchg
adc
sub
bound
sub
or
mov
jne
or
sbb
rolb
push
cli
sub
cmpsb
mov
and
pop
and
xchg
jo
sub
push
cs
stc
lds
loopne
mov
psadbw
call
lahf
dec
add
or
add
adc
ds
mov
leave
add
jp
add
sub
jnp
mov
sti
inc
cmp
loop
clc
push
adc
mov
imul
aad
sub
ret
loope
mov
push
ret
cmp
into
popa
push
mov
sub
push
jge
cld
leave
inc
or
push
insl
ret
add
stc
fisubs
dec
mov
stc
clc
std
and
rorb
jle
inc
cmp
fisubl
and
loope
pop
popf
sbb
sti
sub
das
dec
mov
fcoml
enter
pop
pop
push
fisubrl
push
dec
fimuls
call
push
cmpsb
inc
lahf
imul
jecxz
jbe
push
rolb
repz
push
sub
mov
xchg
shrl
int3
jne
push
pop
insb
add
mov
dec
adc
loope
dec
xchg
shrl
cmpl
aas
xor
test
sti
cmpsb
sti
xor
es
push
jp
aad
adc
jmp
mov
lock
mov
iret
fiadds
mov
into
imul
pushf
test
mov
in
stc
je
jge
pusha
rolb
xor
mov
jle
xchg
xchg
lds
sbb
xor
lahf
sub
sbb
pop
and
out
sbbb
mov
leave
push
add
jae
mov
sahf
das
jns
jecxz
sbb
fsubrl
sahf
xor
add
pop
xchg
mov
jae
or
sub
repz
movaps
xor
rorb
loop
jno
adc
or
mov
in
arpl
lcall
inc
loop
ret
mov
ret
shl
jbe
adc
or
inc
pop
pop
push
lret
cmpsb
push
add
inc
cmp
xchg
ret
mov
jno
test
jmp
push
sbb
in
out
or
add
sub
lret
loop
mov
cmp
cld
mov
pop
sub
pushf
sbb
jno
mov
cmp
sarl
adc
lret
xchg
pop
daa
push
sbb
jle
js
lcall
push
jmp
mov
pop
out
sub
sub
cmp
mov
dec
enter
sub
stc
in
ret
and
xchg
pop
cwtl
and
adc
shl
dec
lret
jnp
or
push
cwtl
add
mov
fstl
stos
mov
lret
pop
sarb
and
stc
sub
lods
fnsave
dec
cmp
mov
jp
pusha
cmp
push
hlt
stos
inc
push
add
aas
sti
push
mov
or
mov
sub
or
mov
xchg
jbe
cmc
mov
push
gs
jmp
sub
dec
and
out
jge
int
ret
fdivr
aaa
add
xor
mov
adc
fstl
lods
out
pop
ljmp
mov
clc
add
stos
dec
lcall
mov
and
les
push
sub
mov
mov
dec
jo
test
stos
ljmp
scas
and
lahf
jle
or
arpl
test
stc
jae
cs
xchg
ret
xchg
outsl
pusha
dec
xchg
sub
stos
mov
aaa
push
mov
rorl
jo
pushf
int3
jbe
jge,pn
out
inc
std
pop
push
jmp
lock
out
loopne
sub
outsl
fsubrs
fmul
mov
mov
cli
jl
test
dec
jbe
data16
fdivrl
xor
punpckldq
or
test
icebp
sbbl
ljmp
fs
cmc
stos
push
cmp
xchg
inc
insb
andl
cmpsl
stos
mov
xor
or
es
cmp
or
mov
sub
push
mov
xchg
or
ss
fmull
js
sub
jne
repnz
jne
xor
or
inc
ret
and
push
push
add
push
and
mov
into
xlat
lea
sub
loope
dec
leave
inc
push
jo
pop
jg
int
mov
and
mov
popf
roll
sti
mov
orl
sahf
xlat
ret
jge
add
popa
inc
mov
xor
mov
out
data16
das
scas
adc
fimuls
mov
scas
adc
arpl
inc
mov
mov
inc
or
push
push
pop
mov
aas
stos
lock
dec
pop
lret
in
dec
data16
push
fnsave
movsl
lods
jo
adc
loop
add
fwait
xor
cmp
hlt
xchg
pusha
lret
or
jg
jno
adc
cs
dec
mov
mov
bound
xlat
xchg
push
xor
lret
insb
mov
in
push
ret
jp
out
add
inc
mov
lret
pop
popf
push
scas
shll
je
xchg
lods
xlat
movsb
mov
jae
stc
and
mov
bound
in
jne
mov
sub
jno
adcb
adcl
fldl
sbb
adc
ret
push
or
xchg
jmp
and
pop
sub
dec
stc
adc
jl
arpl
gs
sarb
loope
cmp
jl
js
mov
lods
and
mov
jg
fwait
bound
xchg
loop
xchg
sarb
movsb
push
dec
outsl
lcall
mov
add
lods
sbb
out
sub
inc
push
outsb
negl
pop
jnp
std
fwait
push
push
jl
xlat
test
sahf
fmull
clc
daa
add
out
xor
bnd
lret
or
nop
gs
insb
mov
cmp
outsl
cld
inc
rorb
repnz
fmuls
fbstp
xor
aam
fidivrs
adc
sbb
cmp
fptan
outsb
push
sbb
push
xor
add
xchg
and
mov
jae
orb
jmp
mov
or
mov
cmpsl
mov
outsl
xchg
notl
mov
iret
test
ljmp
test
imul
cmp
test
cmpsl
mov
aaa
stos
jb
xchg
sub
push
jb
scas
jb
out
fwait
sbb
bound
or
jl
pop
xor
cwtl
pop
aam
popa
add
lret
or
imul
cmp
mov
xrelease
stc
mov
loop
gs
fwait
lahf
mov
mov
pop
xor
add
pop
cmp
xchg
cmp
mov
sub
mov
data16
les
push
and
add
jl
push
add
pop
add
call
loopne
es
push
imul
fiaddl
or
push
push
out
lcall
mov
adc
cmp
negb
pop
jmp
fnstenv
adc
mov
daa
push
inc
les
sub
bound
xor
mov
mov
in
push
stos
mov
ja
jmp
pop
add
push
mov
push
hlt
jmp
mov
popf
movsl
xor
cmp
int
fidivrs
add
mov
mov
push
int
jge
test
jge
aaa
dec
rcl
outsl
divb
leave
iret
mov
mov
pusha
jg
or
xchg
or
mov
loopne
add
or
xchg
add
jae
sub
in
hlt
mov
mov
jns
lds
add
in
mov
adc
inc
addb
lret
mov
mov
scas
adc
mov
out
add
pop
mov
hlt
jae
negl
aam
lods
fnsave
in
sub
out
loop
shlb
pop
loope
add
inc
mov
aam
iret
push
out
add
pop
fisubrs
xlat
and
loop
mov
rcrb
fcmovb
dec
and
cmp
int3
mov
ljmp
xchg
in
lods
in
mov
mov
and
xchg
enter
stc
sti
ss
mov
fsub
test
xchg
sti
lahf
xor
fdivs
loope
shll
test
sti
ret
add
and
cmpsl
loopne
fcoms
fdiv
push
test
test
dec
push
incb
mov
std
jle
pop
xchg
in
movsb
into
mov
lods
fstpl
mov
push
shrb
mov
pusha
lds
fs
pop
out
jl
fdivrs
or
or
insl
in
jecxz
out
repz
jae
sbb
bound
pop
not
fwait
xor
jo
xchg
mov
or
es
cmp
sbb
add
testl
js
and
cmp
mov
xchg
xchg
jge
cmp
and
jmp
fiaddl
mov
rcrb
mov
xor
stos
xchg
pop
jle
cmpsb
xor
pushf
xchg
popa
push
clc
mov
aad
jp
xchg
aaa
repnz
daa
loopne
ds
or
mov
lret
sti
mov
jmp
test
and
dec
dec
pop
jl
xor
push
add
mov
lcall
cmp
xor
sub
sbb
pop
mov
cmp
in
xchg
in
push
data16
hlt
pop
xor
sarb
jbe
xor
mov
sub
aad
inc
xchg
jle
movsl
test
rcrb
das
sbb
adcb
ja
sbb
or
and
push
xchg
and
test
or
or
lahf
fwait
cmp
mov
sahf
xchg
sub
or
les
sub
bound
jge
les
mov
pusha
jne
mov
xor
jns
push
aas
inc
jle
xchg
hlt
aad
xchg
popf
fs
push
adcb
and
cmp
insl
mov
xchg
daa
xchg
mov
mov
fimull
xor
jae
movsb
xchg
sub
jae
sub
testl
shll
gs
mov
aaa
into
adc
mov
popa
shl
mov
dec
lds
pop
push
scas
cmp
lods
cmp
jp
sbb
es
inc
and
inc
mov
mov
mov
mov
popa
lret
xchg
mov
or
or
ret
outsl
mov
push
mov
pop
popf
lock
dec
insl
jae
jo
push
push
adc
pop
stos
sub
inc
movsb
pop
mov
push
jp,pn
xchg
sub
lock
dec
std
xor
ljmp
inc
test
mov
les
and
mov
and
xchg
mov
add
cwtl
xchg
cmp
and
insl
and
rol
jo
push
hlt
cmp
jp
xor
sub
ljmp
lahf
jl
xor
xchg
inc
cld
push
inc
mov
or
ret
cmp
cmp
xor
xchg
sbb
push
xor
or
enter
stos
fildl
mov
ja
outsl
jbe
nop
inc
pop
mov
pop
mov
outsb
push
pop
push
or
jl
mov
xor
mov
sub
adc
std
je
imul
pop
arpl
arpl
and
cmp
lds
adc
inc
lods
pushf
popf
push
clc
jbe
mov
xchg
mov
stos
cmp
push
rcll
loopne
aas
mov
fisubrl
mov
xor
jmp
jb
inc
shrl
pop
push
add
pop
nop
sbb
mov
pop
out
aas
shrb
in
pop
sbb
leave
push
pop
cmp
icebp
cmp
loope
pusha
loop
jo
pop
aas
xchg
fwait
jno
std
xchg
jno
popf
pop
add
fcoms
cmpsl
xchg
or
adc
fisttpl
das
test
enter
imul
mov
pop
xchg
inc
add
outsl
pop
dec
mov
dec
out
mov
mov
xchg
jns
mov
fstpt
mov
lcall
mov
call
adc
adcl
loopne
mov
into
loop
fsts
insb
into
lods
popf
jae
pop
js
std
cmp
daa
or
and
dec
aas
ret
push
hlt
mov
cmc
in
aam
adc
stos
fsubs
in
pop
cltd
addb
xchg
jl
shlb
sti
sbb
je
cmp
out
sbb
and
sub
mov
iret
outsb
pop
adc
mov
pop
adc
outsb
rcrb
xchg
inc
repnz
aam
mov
scas
mov
neg
cmp
sbb
stos
imul
in
in
clc
out
int
mov
mov
push
pop
dec
negb
push
mov
aad
and
sub
fmuls
jno
or
pop
incl
sbb
xchg
pop
or
fldl
or
mov
sub
cmc
psrlw
rdpmc
push
add
sub
pop
lahf
inc
imulb
xor
jb
xlat
enter
scas
stos
jle
mov
mov
lahf
lcall
divb
jmp
es
mov
hlt
int
mov
mov
or
cmp
mov
mov
pop
cs
pop
dec
rcr
fidivl
scas
add
iret
dec
in
inc
add
lcall
nop
pmulhw
gs
push
jg
loope
or
lods
jecxz
in
hlt
add
dec
or
bound
rorl
dec
stos
pushf
dec
aas
dec
push
int3
repz
add
imull
lds
sub
push
leave
adc
imul
sub
fwait
cmpb
xor
iret
adc
aas
jl
add
stos
add
subl
push
xor
mov
mov
mov
shlb
mov
push
inc
push
not
shl
scas
jae
add
or
jo
xor
lret
pop
aas
call
xchg
rcll
pop
loop
cld
sbb
and
sbb
in
push
in
in
pusha
out
popa
cmp
sti
stos
les
and
mov
ds
add
jp
pop
inc
adc
punpckldq
aaa
loope
pop
adc
mov
daa
cmp
xchg
inc
mov
rcrb
ret
push
loope
inc
repz
and
ljmp
cli
cmp
out
sti
fldt
cmp
mov
bound
in
adc
pop
test
lret
mov
pop
xlat
mov
adc
lock
shlb
xchg
or
test
or
pop
dec
scas
ljmp
fisubs
sub
jg
jno
pop
inc
ss
sub
adc
testl
ds
insb
add
and
and
dec
sub
daa
mov
mov
into
js
shll
xor
or
mov
push
lds
sub
hlt
clc
loop
rcll
ret
sarb
leave
push
adc
xlat
insb
ffree
add
xchg
and
cmc
jo
lods
adc
scas
push
mov
bound
and
lea
cmp
cs
or
add
cmp
or
pop
add
dec
icebp
scas
das
pop
push
loopne
in
cmp
xlat
mov
iret
jb
daa
adc
sbb
sub
stos
inc
daa
mov
and
jbe
fucomp
mov
mov
or
fsubrl
xor
jle
lret
xor
sar
aas
pop
cli
or
lods
and
cmp
push
sbb
add
jae
dec
push
jae
push
mov
mov
dec
push
cwtl
push
daa
inc
push
paddw
popa
mov
xchg
inc
xor
in
arpl
test
addr16
mov
lods
ffreep
xor
data16
pop
mov
push
repz
pop
and
daa
xchg
fwait
xor
popa
std
in
pop
test
pop
xor
ds
mov
aam
je
dec
insb
and
mov
dec
push
loope
jbe
test
loopne
dec
mov
lds
pop
pop
sub
sbb
cmp
dec
xchg
xchg
inc
into
sub
mov
fsubs
daa
arpl
imul
push
mov
scas
les
cmpsw
lahf
fsubl
in
mov
fiaddl
fcomps
mov
jecxz
icebp
mov
in
cmp
fadd
out
call
test
xchg
pop
cmp
ret
jb
mov
push
leave
xchg
icebp
push
fidivs
jb
sti
inc
imul
or
mov
enter
test
arpl
mov
and
lahf
int
adc
mov
xor
adc
sbb
xchg
fwait
adc
add
fsts
ds
jo
jno
jle
stos
jle
enter
ss
mov
sub
fnstenv
das
fimuls
mov
mov
mov
mov
clc
pop
mov
xchg
popf
fadds
and
mov
roll
fwait
fwait
inc
mov
shlb
popa
addr16
xor
sub
jp
xchg
sarb
mov
aas
mov
pop
jecxz
add
mov
and
mov
enter
sub
cmp
mov
scas
in
sbb
loopne
stos
pop
cmp
inc
mov
dec
cwtl
mov
pushf
sub
mov
sti
iret
push
dec
iret
fstpt
cmpsl
mov
jmp
and
push
loope
je
flds
xchg
lcall
mov
aas
and
repnz
stos
shl
rcll
jl
sbb
sbb
addr16
push
outsb
shll
xorl
or
jge
jb
fmul
cmp
adc
insl
cmp
adc
and
dec
outsb
sahf
loop
int
jnp
mov
push
cmp
adc
xchg
sbb
push
in
aad
pop
sbb
or
cmp
enter
out
out
dec
subb
fsubp
lods
push
les
xchg
mov
std
pop
push
mov
pop
out
cmc
mov
stos
addl
xchg
push
movsl
mov
imul
enter
or
mov
cs
inc
idivb
cmp
aad
mov
jno
push
and
mov
dec
sub
in
fwait
data16
xchg
sub
sbb
aad
xor
adcb
cmpsb
push
js
xor
jl
pop
lret
mov
push
push
mov
out
and
stos
leave
popf
loop
ljmp
sub
ret
mov
repz
jb
pop
fsubrl
mov
in
lock
lods
inc
mov
iret
xchg
xor
mul
scas
roll
dec
xchg
fmuls
inc
test
push
scas
in
nop
fdivrl
addr16
xchg
pop
in
dec
movsb
lods
xchg
daa
jo
sub
cmpl
scas
jecxz
or
or
adc
mov
xchg
fldt
inc
fistps
bound
sbb
fsubrl
mov
jo
shufps
and
out
pop
xchg
xchg
jnp
or
scas
pushf
cmpb
add
pop
call
sbb
pop
clc
add
cmp
xchg
inc
ret
adc
push
pushf
push
xorl
lock
in
xor
aas
out
es
pushf
jnp
jbe
xchg
push
mov
fistpll
dec
mov
mov
or
mov
push
je
xchg
arpl
jae
mov
jg
add
dec
push
mov
repnz
dec
inc
xchg
bound
loopne
shrb
std
imul
xor
shll
jp
cmpsb
test
mov
jb
daa
fwait
pop
stos
xor
std
mov
test
dec
pop
jecxz
leave
leave
aas
out
xor
or
push
xor
into
les
out
ss
in
pop
jb
xor
test
xorb
test
jmp
jg
pop
cmp
dec
dec
clc
addr16
mov
pop
sti
shrb
out
addb
sub
lock
mov
xchg
je
loope
dec
ja
sub
xlat
mov
repnz
push
jns
adc
mov
cmpsl
push
out
shll
xchg
push
add
fmul
insb
pop
in
dec
scas
cli
jns
js
cmpsb
jg
mov
out
adc
push
inc
add
ja
out
aas
mov
pop
dec
jns
sub
dec
pop
xchg
mov
pop
push
jo
sbb
and
sbb
mov
loope
scas
dec
sarl
imul
movsl
xchg
adc
dec
xchg
fisubs
and
xorb
mov
xor
lret
add
rcr
lods
mov
mov
sub
jbe
ljmp
dec
jae
mov
inc
into
sti
cmpsl
imul
cmpsl
jb
mov
jg
and
lcall
mov
xchg
in
sub
out
mov
and
popa
notl
inc
cmp
jae
jecxz
pop
push
call
pop
push
movsl
into
mov
jge
pushf
cmpl
es
push
add
xor
out
fwait
imul
dec
jecxz
fcomps
cmp
test
fidivrl
movsb
rorl
test
adc
orl
movl
xchg
addl
std
dec
xchg
jne
inc
xchg
sub
nop
out
xchg
lcall
push
and
loopne
call
out
movsb
inc
xchg
aad
mov
jno
std
cmpsb
inc
stos
insl
add
dec
jae
mov
mov
imul
outsb
int3
dec
loope
daa
inc
fisubl
nop
or
xor
sub
pop
sar
loopne
or
mov
lods
cmp
jecxz
pop
pop
out
push
popa
fs
cld
xlat
in
adc
xchg
in
enter
cltd
lcall
xchg
dec
out
xor
scas
sbb
jnp,pn
push
pushf
cs
cmp
add
push
and
je
lods
inc
inc
push
into
add
int3
cld
stc
or
pop
ss
sub
scas
rorb
jne
adc
call
push
sbb
in
sub
cmp
insl
rorl
sub
or
lock
pop
mov
sbb
arpl
pop
pop
pop
add
inc
fildl
push
mov
mov
pop
jns
pusha
stc
sub
ss
pop
dec
jmp
push
cwtl
adc
add
pop
xchg
cmpb
jbe
in
xor
pop
fwait
mov
or
sahf
ret
dec
pop
and
dec
or
xchg
dec
add
push
pop
pop
jg
jmp
stos
aad
cmpsb
mov
add
xchg
shll
ljmp
fists
idivb
jns
mov
cld
push
lahf
push
mov
push
inc
and
dec
std
dec
xchg
xor
rclb
xchg
fimuls
lods
popf
mov
mov
mov
imul
cs
jle
jns
mov
push
mov
notl
data16
mov
fwait
mov
test
lahf
sbb
pop
ss
popa
int
pusha
jae
xchg
xor
pop
xor
add
mov
push
arpl
xchg
cli
add
test
lods
lcall
cmpsl
or
aam
cs
loopne
mov
lock
inc
fstpt
mov
cmp
scas
outsl
jnp
inc
lahf
sub
and
rcll
cmp
jg
dec
in
cmp
je
sub
fsubrl
and
loopne
lods
adc
and
dec
stos
jl
mov
dec
aas
jns
dec
or
sub
mov
jbe
dec
test
je
sahf
inc
rcrb
jg
mov
mov
imulb
scas
inc
push
test
mov
dec
lods
cmp
jmp
mov
inc
sarb
call
cmpsb
adc
mov
xorl
xor
pop
dec
push
push
lcall
adc
push
push
jmp
mov
imul
xchg
adc
imul
xlat
xchg
out
dec
addr16
daa
rcrb
push
xlat
inc
dec
push
jno
call
mov
pop
hlt
leave
cmc
mov
xchg
fdivrl
stc
pop
sbb
xchg
sbb
jp
push
mov
imul
repz
stc
bound
fnstenv
sub
xor
lret
cmc
xchg
lds
jns
pop
outsb
sub
dec
pop
in
out
add
in
scas
sbbb
sbb
adc
cltd
mov
xor
push
adc
push
rorl
cmpsl
add
test
dec
jo
xor
dec
sbb
jmp
movsl
out
sbb
out
dec
outsl
add
sub
cmp
lret
lods
jae
fsubrp
inc
inc
das
faddp
addb
repz
rorl
xor
push
adcl
add
push
inc
fsub
loopne
sarl
xchg
mov
repnz
jo
repnz
mov
push
bound
es
push
xor
sbb
cmpsl
fidivl
popf
imul
pop
adc
sub
imul
shrl
push
int
ret
mov
mov
inc
imul
jno
sbb
adc
in
jo
shlb
loopne
push
jo
jno
jne
dec
xor
push
xor
addr16
insl
dec
pop
xor
scas
loopne,pt
addb
dec
orl
sub
add
repnz
push
xchg
cmc
rol
lahf
in
xor
or
cmpsl
push
pop
enter
sbb
sbb
mov
mov
les
in
pop
push
inc
imul
dec
or
push
aad
fs
mov
enter
add
mov
xor
icebp
iret
xchg
fstps
xchg
mov
or
fsts
std
sbb
jnp
inc
fstps
add
xor
push
daa
ja
push
pop
in
or
imul
sti
adc
loope
jl
mov
or
shrl
push
lcall
inc
push
or
popf
fninit
imul
stos
dec
cmp
andb
scas
adc
sbb
lahf
aad
mov
in
xchg
pusha
pop
push
out
cmpsl
jno
repz
mov
cmp
imull
ljmp
xchg
das
popa
adc
bound
sbb
dec
mov
push
add
and
cwtl
and
mov
call
mov
jns
xchg
pop
cs
xor
les
and
sbbl
rcrl
aad
loop
xor
mov
int3
sub
cmp
in
in
push
in
mov
cmpsl
jne
or
cld
fs
push
ret
lods
lock
test
movsl
pop
sahf
arpl
pop
aaa
adc
pushf
fldcw
stos
sub
loop
and
xchg
sub
adc
mov
jle
insb
ds
adc
fwait
jnp
cmp
shll
ror
mov
lods
cmp
stos
insl
shl
icebp
inc
mov
addr16
push
cmp
xchg
mov
xchg
sbb
insl
pop
cmp
lret
bound
ret
sub
in
lret
xchg
lret
loope
xor
popa
sti
jge
cmp
in
adc
hlt
push
jmp
pop
pop
xchg
outsl
add
jbe
loopne
ljmp
jae
cwtl
jb
das
mov
xchg
or
movsb
insl
std
inc
pop
cwtl
mov
mov
test
push
cmp
dec
xor
mov
sbb
xchg
mov
call
mov
jmp
adc
cs
aam
adc
lahf
mov
scas
push
jb
mov
push
lods
xchg
out
js
fdecstp
popa
cli
icebp
es
pop
cmpsl
gs
adc
xchg
push
outsl
add
ja
xlat
dec
xchg
jmp
lods
sbb
or
xlat
fdivr
addr16
cmp
mov
mov
and
pop
out
inc
xor
adc
ret
cmp
iret
stos
lds
or
sub
in
xchg
popf
aam
enter
test
je
sub
or
adc
mov
xor
les
scas
aas
pop
mov
imul
adc
daa
std
pushf
mov
sahf
sbbb
jmp
inc
add
xcrypt-ctr
cmpsl
fsubr
lcall
or
mov
push
es
or
push
aam
sbb
mov
aaa
xchg
in
lock
mov
ja
mov
in
lods
mov
sti
sub
sbb
movsb
push
and
ja
shl
outsb
imul
daa
xlat
adc
mov
add
and
mov
dec
andb
fistl
or
xorb
push
xorl
shl
pop
sub
jnp
cs
jmp
lock
xchg
sbb
pop
or
stos
add
aad
xchg
test
les
jo
je
push
rcrb
mov
in
loope
in
aad
mov
add
mov
sub
gs
addr16
addr16
fdivp
or
js
adc
xlat
adc
repz
xchg
out
scas
ss
test
dec
mov
cmp
je
test
add
ja,pt
loop
shlb
sub
scas
enter
xchg
mov
or
test
rolb
cmp
pushf
sbb
pop
mov
jmp
lret
mov
into
inc
pop
loop
xchg
pushf
pop
xor
sub
push
ficoml
adc
mov
dec
loope
inc
sub
fldcw
pop
movsb
gs
lods
add
cmp
scas
sbb
xlat
out
inc
jo
and
mulb
or
xor
inc
mov
aam
add
arpl
ja
sub
je
sti
mov
ds
jle
out
lock
cmpsl
scas
dec
add
inc
pushf
mov
pushf
add
jae
fsubl
fimull
add
mov
adc
lret
mov
cltd
fldenv
loop
pushf
and
fmull
mov
jae
add
jg
xor
or
in
add
outsl
clc
mov
repnz
or
imul
aaa
cs
outsb
sub
and
arpl
adc
adc
push
in
outsb
jmp
sbb
or
mov
fs
add
jp
dec
into
mov
xchg
jmp
pop
mov
xchg
int3
mov
mov
xchg
jl
lods
lret
notb
lock
pop
mov
out
test
loopne
xor
jae
mov
dec
push
ja
ja
in
cld
fidivrs
sbb
nop
movsb
data16
mov
shlb
aad
inc
mov
inc
adc
fnstcw
mov
mov
cmp
lds
and
jmp
jae
fwait
mov
fs
and
cs
xor
mov
int
push
mov
ss
mov
pop
gs
mov
pop
roll
jecxz
add
jl
pop
rolb
jmp
nop
inc
stos
sahf
movsl
js
pop
lods
pop
inc
push
rorb
jbe
jge
cmp
xchg
dec
cmp
jae
subb
jne
jge
xor
xchg
popf
inc
pushf
mov
stc
push
test
mov
in
dec
leave
mov
xor
mov
or
mov
sub
jg
pop
sarb
cli
aam
jo
je
inc
ss
lds
sbb
lea
mov
scas
vunpckhps
stos
sub
imul
ficomps
cmp
out
lods
dec
mov
fsub
jnp
xlat
and
xchg
sub
cmp
leave
popa
mov
mov
adc
mov
movsb
mov
jg
inc
and
jne
lea
mov
or
iret
mov
inc
pusha
sahf
in
sbb
jecxz
pusha
pop
stos
cwtl
vpsubsw
and
pop
inc
sub
cltd
mov
sbb
push
push
xor
orl
ja
mov
sub
aas
mov
fimull
int3
mov
mov
mov
cli
iret
je
enter
inc
mov
mov
xor
call
pop
pop
sbb
andl
add
and
aad
jns
mov
int
xchg
les
sahf
sub
ficoml
loope
add
aam
arpl
add
cmc
ficoml
scas
push
popa
add
or
mov
jne
mov
out
lods
add
mov
push
mov
mov
aam
sti
scas
xor
nop
ficoml
push
aaa
xlat
dec
sub
push
inc
dec
rcrl
aas
fldl
mov
fcomps
adc
out
ret
and
roll
and
shrl
ret
xorb
sbb
xor
orl
lods
jb
pop
in
das
sbb
jge
dec
add
inc
push
adc
xchg
mov
stos
and
loop
jp
mov
in
lahf
sub
push
sarb
sar
mov
lcall
sbb
cmp
inc
or
inc
xor
sarb
xchg
add
ds
ja
or
or
cmp
and
lods
lea
test
xor
cwtl
pop
inc
mov
push
orb
push
test
and
addr16
lds
or
mov
mov
xchg
loop
sti
pop
clc
int
jns
xor
out
test
lds
and
mov
and
inc
popa
adcb
js
std
jge
aaa
mov
mov
mov
inc
inc
cmp
push
aas
jg
mov
clc
movsl
mov
pop
push
dec
ja
fadds
and
pop
sbb
out
mov
mov
fidivl
and
push
xor
outsb
push
xchg
mov
mov
enter
jmp
inc
push
jno
ret
pop
lods
xchg
add
popf
les
ljmp
dec
sub
jecxz
cmpsb
js
fs
inc
les
je
cld
in
rcl
mov
cltd
lea
notrack
popf
add
push
lahf
xor
fwait
cld
ret
mov
fisttpl
inc
mov
daa
das
sub
inc
jg
jle
xor
fistl
mov
mov
mov
mov
xchg
adc
lcall
sub
outsb
push
push
stos
xchg
rorl
lods
in
pop
xchg
lret
inc
rolb
pop
int
inc
pop
jge
sub
jb
mov
sbb
loopne
test
aas
push
xchg
in
add
or
add
aas
notb
ror
repz
imul
inc
xor
push
pop
movsl
int3
dec
movq
subb
shrl
push
jecxz
pop
sbb
pop
mov
sub
mov
roll
loopne
jmp
mov
xor
dec
adc
jns
cltd
shll
loopne
sbb
and
adc
test
sub
inc
or
mov
cld
xor
push
je
gs
jg
outsl
jl,pt
repz
adc
mov
pop
add
push
xchg
fstpt
cmp
inc
cmp
in
mov
inc
sbb
bound
jle
or
fwait
aad
test
cmp
out
mov
jne
pop
test
add
mov
push
imull
daa
sub
movsb
aad
popa
lea
mov
in
xchg
adcl
mov
fs
fnstcw
mov
xchg
test
xchg
mov
or
mov
andl
jnp
pop
add
or
daa
lahf
imul
lea
sub
sbb
pop
adc
and
push
popa
shl
std
fcomps
mov
or
mov
outsl
cmp
packssdw
adc
cld
sub
mov
mov
dec
stos
mov
push
loope
inc
stos
add
jecxz
inc
pop
and
mov
cwtl
clc
das
and
lret
mov
push
xchg
add
pop
leave
xchg
sbb
xor
into
ds
cmp
pop
mov
and
ret
jo
xlat
or
rolb
testl
jle
push
mov
jns
bound
fwait
mov
in
adc
mov
lock
jmp
push
mov
aam
hlt
cltd
xabort
cmp
call
cmp
incb
push
shlb
mov
ja
xchg
inc
inc
sub
add
xchg
inc
dec
jecxz
add
data16
mov
pop
je
pop
jne
dec
mov
aaa
js
fnsave
xchg
incl
push
ljmp
rolb
rcrb
movsl
jbe
mov
jo
add
in
cmp
loopne
std
fbstp
push
jns
das
das
scas
adc
push
pop
out
add
mov
mov
mov
ljmp
arpl
sbb
mov
mov
out
test
les
pop
test
sub
mov
mov
in
adc
repnz
pop
mov
dec
out
and
imul
add
shl
notl
sub
cs
add
and
jmp
jbe
cmp
mov
push
cltd
imul
adc
cs
mov
push
xchg
ss
shl
or
mov
int3
sub
stos
xchg
insb
leave
inc
xchg
clc
mov
aaa
jns
or
mov
cmp
hlt
push
lds
sub
xchg
jp
dec
insb
dec
test
lea
pusha
cmpsb
sbb
fildll
adc
push
arpl
int
mov
or
mov
out
es
and
dec
adc
neg
js
mov
loope
jmp
shlb
pop
lret
mov
daa
rcll
adc
clc
inc
sub
jb
pop
cli
jns
adc
dec
rcll
xor
push
call
push
mov
rcrb
aaa
mov
dec
rol
sub
push
mov
loope
pushf
xchg
test
sub
icebp
xor
nop
outsb
mov
and
xchg
inc
aam
push
add
lods
push
sbb
and
out
cmc
mov
xor
cmp
addb
adc
or
push
push
add
in
push
mov
add
pop
outsl
in
sti
pop
and
fildll
inc
xor
add
outsb
ror
inc
movsb
sbb
notl
loopne
stos
jo
ljmp
in
aam
std
cmovg
and
push
mov
mov
add
push
mov
mov
repnz
push
jb
out
jle
and
in
cmp
mov
cmpl
xor
das
scas
cmpsl
xor
pop
jnp
add
leave
mov
int3
out
lahf
stos
jg
cmp
sbb
repz
jl
enter
fs
sti
rorl
out
xor
xchg
les
imul
add
dec
aas
lods
sbbl
lahf
sub
xlat
mov
jecxz
call
mov
ds
jnp
sbb
int3
pusha
or
mov
subps
idivb
and
cmp
jno
insl
mov
or
fcompl
jp
inc
filds
repz
adc
test
dec
and
inc
cmc
mov
push
push
push
mov
test
xor
dec
cmpsl
imul
hlt
stos
jb
adc
gs
cmp
xchg
jne
lds
lcall
sbb
lds
daa
addb
movsb
sbb
push
inc
inc
xchg
xchg
test
out
sbb
push
ficoml
and
and
xchg
or
dec
adc
xchg
push
popa
inc
mov
test
dec
xchg
inc
frstpm(287
nop
mov
icebp
aad
and
and
cmpsl
push
pop
pmulhw
test
negl
push
jnp
push
roll
jl
adc
sbb
mov
xlat
xor
aaa
fistl
xor
repz
push
int3
and
xor
jge
sub
inc
add
sbb
shrb
cmp
push
jnp
testl
push
add
inc
pop
jl
pop
jne
repz
and
and
jmp
jo
dec
popf
sub
lods
outsb
test
push
test
test
add
stc
dec
jnp
sub
adc
jl
or
jp
cmp
loop
popa
mov
or
cmpsb
ljmp
push
out
mov
or
push
or
sbb
push
dec
mov
mov
hlt
out
mov
add
lds
push
push
xor
mov
fists
out
mov
cld
ficompl
adc
fstl
repz
xchg
push
movsb
rcrl
fimull
mov
inc
in
std
iret
movsl
mov
mov
pop
fsubr
fdivp
add
add
lahf
repz
shrb
adc
pusha
pusha
stc
int
adc
jecxz
imul
dec
adc
dec
mov
ret
jmp
xor
pusha
call
push
pop
dec
loop
mov
push
mov
jns
nop
dec
jge
or
xor
xchg
in
and
rcrb
test
mov
inc
cs
or
shrl
repz
ja
mov
rolb
push
test
sbb
jge
xchg
decl
mov
mov
lods
cmc
callw
sti
lea
lds
out
mov
and
or
lds
sbb
lods
add
mov
sbb
push
or
pop
xor
inc
pop
dec
xchg
insb
cld
movsb
mov
sbb
xchg
out
andl
or
xchg
inc
mov
outsb
stos
lret
js
cmp
fimuls
lods
mov
addr16
pop
jmp
dec
pop
mov
orl
nop
push
std
pop
movsb
pusha
fmull
mov
lahf
inc
fwait
inc
in
inc
ljmp
push
into
ss
sbb
sub
inc
or
iret
ror
sbb
push
rol
rcrl
outsb
pop
and
pop
in
inc
dec
push
pop
nop
pop
jo
nop
jg
popa
add
mov
rcrl
push
cltd
inc
lea
or
xorb
dec
popa
incb
xchg
push
mov
pop
test
mov
ja
xor
xor
clc
out
jg
data16
or
popf
push
aas
add
inc
pusha
jb
pop
mov
jmp
sarb
nop
adc
cmpsb
daa
adc
xchg
dec
xchg
in
fs
add
les
sbb
mov
push
fwait
idiv
stc
cmp
test
xchg
or
xchg
mov
sbb
push
adcb
fnstsw
push
gs
outsl
dec
ss
adc
push
xchg
cmp
mov
faddl
in
dec
les
sub
fdiv
push
xchg
leave
cltd
pop
ret
dec
jge
mov
jne
mov
push
jge
popa
sub
jno
mov
mov
lret
xchg
jl
jge
cmp
and
xor
pop
and
je
xor
fs
xchg
lahf
pop
dec
mov
lcall
xor
pop
test
jnp
pop
cs
lods
cmp
stc
js
cmp
shl
or
std
fdivrs
in
cmp
add
and
mov
ret
imull
call
dec
jno
jb
dec
fwait
push
movsb
addr16
mov
jo
int3
pop
xchg
jp
sti
adc
xor
mov
xor
xchg
mov
push
sbb
xlat
inc
fidivrs
out
push
mov
adc
in
jnp
and
mov
in
shl
subl
inc
es
xlat
push
mov
rcll
mov
cmc
cli
push
pop
add
sub
xchg
fucomp
jp
out
jp
je
pop
pop
rcrb
push
inc
pop
inc
clc
mov
cmp
fwait
push
cmpsl
pushf
cltd
aaa
dec
jg
daa
push
inc
flds
outsl
pop
lds
sarl
fbstp
ffreep
subl
je
or
jne
sahf
pop
loope
and
data16
or
cmp
arpl
lea
je
test
adc
popf
sar
sub
mov
xor
sub
rol
and
std
stc
add
js
mov
leave
test
dec
pop
cmc
loope
dec
int3
movsb
fdivr
ja
loop
dec
mov
int
ss
inc
cmpsb
mov
in
mov
push
shll
rclb
dec
dec
xlat
loopne
mov
inc
out
sub
mov
sbb
faddl
and
or
loopne
rcr
sub
mov
dec
jecxz
jge
sub
push
loope
sub
pop
repz
dec
dec
filds
sbbl
and
xchg
movsb
ret
mov
push
adc
adc
adc
xor
mov
data16
xor
or
adc
nop
mov
stos
lds
test
push
fnsave
xor
mov
push
push
xchg
decl
cmp
adc
mov
sub
mov
push
lret
xcrypt-ofb
cmpsl
sub
leave
cld
or
mov
sbb
push
loop
or
insl
mov
mov
movsl
adc
mov
frstpm(287
jno
shll
jle
xchg
shlb
cmc
push
lods
dec
clc
sar
sub
and
out
stc
fistpl
xor
dec
jae
arpl
adc
push
jb
lcall
mov
adc
or
repz
push
adcb
sub
jge
mov
xor
mov
and
stc
loopne
std
dec
sarb
shlb
out
daa
mov
dec
lods
nop
push
das
push
inc
lcall
cld
mov
sahf
push
aas
rcrl
fs
pushf
inc
arpl
jge
in
sbb
std
negb
adc
pop
or
cmp
stos
mov
mov
lods
jno
and
pop
pop
bound
ja
xchg
repnz
push
inc
outsb
pusha
push
dec
test
pop
inc
out
mov
loope
fstps
and
movsl
imulb
xor
aad
nop
dec
aam
xor
in
inc
aam
mov
imull
loop
sbb
pop
cld
mov
xlat
icebp
jge
push
jl
mov
push
push
push
xchg
mov
outsb
aam
dec
rorl
aad
or
pop
hlt
xchg
lahf
add
dec
into
dec
inc
adc
gs
icebp
jmp
repz
add
xor
ss
add
add
adc
xor
jne
dec
add
add
rorb
mov
inc
add
mov
add
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
dec
jmp
.byte
push
pop
dec
decl
xlat
imul
sbb
jmpw
inc
pushl
sbb
sbb
pop
pop
dec
jg
jg
add
shrb
ja
outsl
inc
ja
xor
add
pop
jle
test
arpl
ja
mov
push
add
pop
fisttps
xor
or
push
cmp
adc
xor
es
mov
xor
ss
ss
.byte
ss
.byte
