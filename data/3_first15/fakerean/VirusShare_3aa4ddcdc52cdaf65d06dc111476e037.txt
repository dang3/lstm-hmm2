sbb
add
mov
xchg
fdivrl
lea
outsb
inc
sbb
jle
jmp
fstps
ljmp
jno
pop
inc
pop
cmp
movsl
test
mov
mov
sarl
ficompl
xorl
xor
cmp
adc
xorl
in
es
shll
pop
dec
mov
aaa
or
pusha
aam
add
enter
dec
mov
icebp
aad
sbbb
loopne
insb
push
adc
add
fcmovu
faddl
das
jnp
cmc
and
sub
testl
faddp
pop
stc
cltd
xor
pop
andl
sbb
sbb
in
inc
mov
fisubrl
ss
out
lods
jne
pop
xchg
sar
dec
mov
or
int3
ljmp
repz
and
mov
in
adc
call
loope
push
adc
mov
cmpsl
mov
jnp
ret
and
cmpb
sbb
daa
jne
jo
outsl
imul
and
pop
rcr
out
lret
movsb
in
mov
clc
repz
inc
icebp
add
sbb
repnz
pop
and
xchg
cmp
sti
sbb
addb
jbe
mov
aaa
push
notb
cli
xor
enter
rol
in
mov
loopne
repnz
xchg
pushf
and
test
mov
cmp
enter
xchg
add
lods
out
mov
sbb
arpl
insl
push
dec
lods
add
in
sahf
adc
mov
pop
dec
mov
jg
mov
lret
neg
fwait
and
popf
dec
xchg
push
jnp
or
loopne
cwtl
fldcw
int3
jne
mov
or
sbb
dec
addr16
sub
xchg
cmp
mov
pusha
sub
inc
and
stos
mov
mov
or
and
test
popa
dec
and
mov
xchg
ret
sbb
sbb
jae
and
lds
push
sbb
push
and
mov
test
loop
push
push
add
pop
imul
mov
sub
mov
mov
fsubrs
aas
fsub
roll
clc
fisttpl
mov
movsb
jg
mov
pop
jmp
shlb
mov
sbb
call
enter
sti
xchg
fisttpll
inc
js
insb
les
xlat
and
fistpll
add
test
cmp
add
cmpsl
push
movsb
in
insl
fimuls
negb
lock
loopne
clc
rcr
out
add
mov
and
dec
inc
jmp
mov
mov
imul
test
jno
jg
test
mov
orb
xchg
es
push
arpl
inc
rclb
mov
movsl
cmp
or
popf
cli
outsl
adc
dec
mov
lret
sub
cmp
mov
int
lock
push
mov
cli
add
adc
ja
loop
cmp
mov
and
std
xchg
cmp
sbb
dec
jbe
out
pop
jnp
movaps
mov
xor
add
xchg
fidivl
ficoms
scas
dec
fiaddl
xchg
mov
sbbl
mov
add
mov
popa
cmp
aaa
addr16
les
add
int3
mov
mov
cmova
pop
sbb
sub
inc
fmul
cmp
dec
and
call
stc
sub
fldenv
and
cmc
flds
sub
jp
outsb
inc
lods
das
nop
or
jno
sub
test
pushf
push
movsl
sbb
repnz
call
arpl
mov
dec
sti
jae
aaa
shlb
cltd
ficompl
loopne
or
test
xorl
pop
inc
popa
mov
stc
std
clc
push
lock
out
jnp
bound
out
sahf
test
mov
sar
fiadds
jg
dec
add
fnstenv
and
push
fidivl
imul
cli
mov
mov
adc
lock
mov
inc
outsl
icebp
add
dec
sbb
inc
mov
fwait
gs
stos
jecxz
lcall
loopne
mov
sbb
arpl
push
mov
sbb
ljmp
add
adc
call
fstpl
inc
mov
dec
ret
add
kunpckwd
ror
push
rorb
sub
mov
imul
cld
and
icebp
mov
inc
sarb
imul
inc
out
xchg
cmpsw
mov
std
mov
faddp
fs
cmp
out
pop
cmp
iret
fldcw
push
pop
loop
sbb
neg
adc
add
jb
gs
mov
pop
jo
ret
ljmp
imul
mov
inc
sub
test
movsl
arpl
sub
daa
dec
cli
cmp
cltd
adc
xor
mov
add
push
pop
les
int
fbstp
mov
dec
cmp
imul
lods
das
arpl
je
ds
cwtl
xchg
movb
mov
jmp
push
iret
inc
daa
xchg
pop
pop
insb
pop
hlt
mov
aas
push
mov
pop
sbb
sbb
stos
dec
sub
mov
int3
pop
mov
jae
mov
sub
es
test
int
add
adcb
movsl
fnstenv
jno
sub
dec
mov
fcomi
arpl
movsb
jb
mov
inc
xchg
ret
xchg
dec
cmp
dec
add
out
cmpsb
inc
fs
xlat
pcmpgtd
fidivrl
and
inc
sub
adc
pop
lds
xor
push
out
push
sub
fwait
hlt
mov
and
mov
js
or
in
dec
mulb
mov
das
jae
hlt
insb
sbbb
add
lea
mov
xchg
out
cmp
hlt
outsl
mov
adc
aam
lock
ljmp
xchg
je
inc
pop
mov
les
out
pop
xchg
sub
mov
arpl
push
fadds
and
pop
mov
pop
mov
orb
scas
inc
push
mov
sti
mov
inc
popa
mov
adc
xor
mov
inc
clc
cmp
push
aas
rolb
jecxz
inc
and
mov
fwait
pop
daa
dec
das
clc
mov
inc
jg
out
lds
out
mov
lcall
mov
xorl
pushf
mov
mov
sahf
call
mov
mov
lea
mov
adc
insl
out
out
sbb
and
stos
pop
repz
xorb
dec
sbb
movsb
sub
mov
inc
enter
or
or
lea
into
divb
test
inc
lret
scas
or
cmp
fiaddl
xor
repz
sar
rorl
push
clc
jecxz
cmpsb
bound
inc
or
add
xor
sub
mov
pop
stc
sbb
xor
mov
jb
dec
pop
mov
adc
xor
clc
addr16
out
comiss
roll
sub
xchg
lea
fnsave
adc
push
pop
mov
cmp
sub
ret
inc
mov
lds
mov
or
gs
sub
mov
cmp
cmpsb
adc
pop
dec
mov
test
incl
out
push
and
ds
dec
daa
mov
mov
mov
jae
stos
xchg
sub
xchg
mov
scas
sarb
insl
dec
lods
add
inc
xchg
in
mov
dec
inc
inc
sub
in
popf
push
loopne
pop
stc
adcb
add
fwait
xor
push
bound
mov
popa
pushf
icebp
imul
inc
add
or
xchg
and
mov
mov
inc
cld
cmp
push
adc
push
int3
xchg
shll
push
std
xchg
in
sbb
in
arpl
in
add
dec
sarb
adc
inc
repz
out
out
adc
xchg
pop
js
mov
cmp
sub
lahf
mov
shl
aam
add
cli
int3
push
divl
dec
pop
pop
or
mov
mov
mov
cli
lret
iret
and
in
das
fchs
add
imul
push
shl
add
cmpsb
pop
fstpt
xchg
jmp
inc
mov
jle
cmp
fs
in
test
cmp
fmul
popa
pop
push
loopne
add
into
nop
inc
mov
and
jae
push
ret
xchg
inc
and
sbbb
cli
dec
fidivs
cmp
enter
mov
jb
lret
imul
out
xor
out
lret
ljmp
xchg
sbb
adc
data16
movsl
adc
pop
movsb
mov
pop
jp
outsb
mov
lods
xchg
lods
sub
sbb
lock
enter
outsb
mov
push
pop
clc
dec
test
jb
and
inc
hlt
test
orb
dec
or
xchg
cli
adc
movsb
mov
mov
lds
scas
test
pop
in
dec
repnz
add
shr
cmpsb
sbb
add
add
sub
and
in
popa
test
ret
loop
add
mov
outsl
xchg
cmpsl
std
dec
fmuls
adc
cmpsb
push
lahf
jmp
or
mov
xor
sub
mov
mov
pusha
cmc
xchg
cld
iret
xchg
outsl
and
aaa
xchg
mov
jl
cmp
leave
and
scas
sbb
mov
pop
out
push
or
cmpl
fwait
sbb
jne
inc
mov
pop
push
sub
fdivr
fucomi
xchg
pop
scas
jae
test
cmp
jle
test
lds
jo
lret
movsl
adc
sahf
dec
lock
shr
sub
punpckhwd
inc
jp
mov
cmpsb
adc
ss
nop
jnp
push
sub
pop
push
xor
or
sub
loopne
mulb
mov
mov
xlat
pop
rep
stc
outsb
and
stos
xchg
in
out
cmp
pop
jle
gs
insl
daa
adc
mov
outsl
addr16
add
popf
fisubrl
dec
mov
or
test
pop
mov
int3
cmpsb
mov
fmuls
inc
ret
test
pop
sbb
sub
and
sbb
cltd
or
push
test
cmpsb
mov
and
push
int3
imul
mov
jne
fwait
xchg
cmp
sti
pop
bnd
das
or
add
nop
sbb
stos
pop
iret
daa
adc
sub
inc
es
jo
push
lret
cmp
sbb
ret
sub
xlat
pop
dec
nop
es
outsb
xor
and
inc
pop
xchg
and
lock
cmp
int
jnp
xchg
outsl
mov
imul
push
xchg
lds
mov
push
sbb
mov
sbb
cltd
add
mov
sbb
notb
clc
sahf
and
jno
mov
outsl
inc
pop
cmc
popa
sbb
mov
cmp
sub
test
addb
fwait
add
jb
push
mov
addr16
inc
sbb
mov
mov
icebp
mov
pop
fdivs
jae
adc
ja
test
or
lds
mov
or
das
sbb
lds
cwtl
ja
pop
in
nop
add
push
scas
cmp
pushf
cs
enter
sbb
lock
cmp
add
out
sbbl
jmp
pop
pop
or
dec
aam
cmp
clc
xor
xchg
cmp
stc
nop
pop
mov
shll
std
sbb
insl
sbb
icebp
xchg
jp
outsl
or
cmc
or
dec
test
pop
rclb
mov
cmp
inc
pop
sub
daa
sub
stos
sarb
shr
push
call
mov
pop
lds
in
or
cmp
adc
hlt
mov
pop
gs
in
das
out
rcll
lahf
sub
dec
sbb
mov
into
cmp
mov
add
adc
sbb
loope
mov
add
out
pop
mov
and
jle
lcall
adc
fildll
outsb
and
jp
dec
hlt
fwait
jmp
jl
fmul
movsl
mov
xor
insb
dec
or
pushf
xchg
imul
cwtl
inc
cli
test
xchg
and
scas
int3
int
jae
mov
or
cltd
fiaddl
rclb
lret
mov
orb
cli
adc
jmp
dec
pop
pop
fnsave
pop
andb
aaa
fildll
add
inc
adc
dec
mov
jae
loopne
dec
cld
jb
movsb
push
mov
cmpsb
xchg
sahf
nop
cmp
fidivl
mov
mov
inc
fsub
aaa
sbb
and
jnp
jecxz
fisubl
cmp
cmp
or
pop
adc
mov
fisttps
adc
jb
lret
cmp
cmc
leave
push
bound
call
sbb
lea
rorb
shrl
bound
dec
or
outsb
mov
mov
clc
je
loop
hlt
xor
lds
jnp
cli
arpl
mov
and
xor
gs
daa
xchg
sub
xorl
clc
xor
mov
mov
jmp
add
repz
repnz
mov
ficoml
out
stos
inc
adc
rcll
shlb
push
scas
mov
cltd
push
mov
and
bound
mov
add
lahf
and
ss
or
cmp
mov
loop
neg
int3
mov
push
add
in
pop
test
mov
cmp
push
lahf
and
sahf
mov
popa
mov
fs
pusha
push
repnz
loope
arpl
push
jae
int
ret
leave
pop
push
adc
andb
lods
pop
scas
fldenv
not
shrb
adc
cmp
inc
mov
jg
inc
subl
pushf
push
lcall
std
push
out
xchg
xchg
cwtl
mov
ljmp
fs
es
mov
das
inc
cmc
jo
sbb
and
xchg
or
xor
stos
aad
push
clc
loope
test
iret
int
popf
aaa
cmpsb
ret
sub
xor
into
test
push
adc
out
xor
mov
sti
cmp
push
sbb
adc
fcomp
and
jge
sub
inc
sub
inc
pop
push
movsl
pushf
sbb
jmp
test
push
nop
mov
shlb
add
pop
mov
jb
add
shll
int3
int3
popa
lret
cli
jno
stos
stc
cmp
mov
mov
sbb
mov
sub
das
cld
xor
sbb
cmpsl
sbb
push
pushl
icebp
repnz
in
fs
mov
js
fs
std
jge
push
add
gs
jne
jg
int3
sbb
cmp
or
lahf
and
cld
fimull
mov
push
shrb
pextrw
sub
por
inc
mov
leave
hlt
and
call
mov
mov
scas
inc
lret
stos
sub
jmp
push
sbb
jl
loop
sub
mov
mov
in
push
sub
mov
cltd
jb
mov
repnz
jne
fwait
cmp
cmc
cmp
insb
pop
test
dec
negb
into
outsb
cmp
cmpsl
mov
clc
push
sti
and
scas
imul
push
movsb
mov
stc
test
into
mov
push
push
jl
pushf
stc
push
or
inc
jb
push
jo
movsb
call
cmpsb
mov
movsl
sub
sub
ljmp
push
paddd
xchg
inc
add
or
mov
mov
dec
ret
dec
fisttpll
xchg
stos
fwait
add
cmc
pop
add
lds
test
jae
adc
or
lods
popf
sub
in
cmp
int3
push
or
bound
jb
pusha
insb
andb
leave
popf
and
mov
aaa
cltd
sahf
stos
shl
dec
movsl
iret
mov
mov
insl
arpl
pop
jb
aas
sub
inc
repnz
lret
jl
add
dec
fwait
ret
movsl
dec
push
dec
xchg
xor
daa
test
cmp
mov
xchg
and
ja
adc
rcr
mov
popa
pop
scas
mov
in
stos
ja
or
sbb
nop
and
jb
scas
or
jl
popa
shl
hlt
sub
cmpl
sbb
jbe
push
test
in
inc
mov
push
cmp
inc
inc
insl
mul
out
jg
mov
test
push
insb
jle
dec
sti
les
adc
or
imul
imul
shl
push
fimull
push
jo
loop
mov
daa
cmp
dec
mov
and
push
sub
sti
shrl
push
testb
mov
push
adc
inc
std
popa
cmp
sub
adc
psllw
ret
adc
jecxz
dec
cmp
stos
ret
pusha
push
cs
daa
and
leave
stc
and
xchg
lret
cli
add
aaa
aad
cmp
xchg
mov
inc
xchg
repz
mov
push
adc
stc
icebp
mov
xchg
add
sarb
mov
leave
mov
inc
out
mov
in
sti
enter
jmp
fldenv
test
in
mov
imul
ja
and
ljmp
cmp
sbb
push
pop
mov
sbb
in
cmp
clc
lods
les
or
jae
inc
inc
bound
sbb
hlt
push
in
add
stos
push
gs
sub
lret
sbb
das
mov
sbb
mov
out
and
xor
aad
iret
jmp
aaa
jo
lods
stos
cmp
out
inc
fs
push
pusha
imul
paddw
and
lods
loopne
cwtl
mov
mov
test
dec
jmp
push
call
inc
xchg
mov
daa
rcll
sub
push
sbb
mov
iret
arpl
adc
dec
pop
and
jb
dec
inc
cmp
pop
or
insl
mov
popf
dec
jl
xchg
test
out
stos
insl
pop
dec
xor
fiaddl
outsl
les
aad
in
xchg
call
imul
lret
hlt
sti
call
scas
in
cli
mov
mov
sbb
pop
inc
pop
daa
xor
cmp
enter
mov
push
hlt
or
sbb
in
and
mov
stc
mov
iret
stc
mov
jo
and
add
fisttpl
in
and
mov
rclb
in
cmp
mov
pop
cs
and
aam
imul
sbb
sbb
xchg
cmc
sub
gs
dec
or
imul
xchg
pop
sbb
outsb
jb
inc
jae
add
cmp
lods
jnp
es
iret
adc
and
jle
or
cmp
aaa
lcall
xchg
iret
mov
aas
ljmp
test
dec
inc
fcomps
pop
jmp
or
sub
test
mov
mov
mov
sub
aad
jno
inc
lcall
sbb
mov
jns
popa
adc
pop
push
out
in
fcmovnb
jb
repz
xchg
jle
shlb
lea
ljmp
mov
fs
ljmp
mov
sahf
jmp
dec
pop
icebp
mov
js
sahf
inc
insb
sub
aad
mov
sub
popf
aaa
jnp
sub
repz
fadds
inc
stos
xor
insl
loop
jmp
iret
inc
sub
add
xorb
push
mov
dec
negl
add
jge
icebp
ficoml
fisttpll
cmp
inc
fs
je
pop
fldenv
in
xchg
adc
mov
and
xor
cmp
jge
sbb
xor
mov
aad
in
mov
push
fidivl
xchg
out
cs
lds
push
adc
sub
jae
mov
jge
mov
add
inc
push
xor
stos
shrl
jo
jp
mov
ret
repz
jmp
sbb
mov
pop
adc
test
adc
push
jl
dec
mov
cmp
jnp
cwtl
cmp
into
pusha
xchg
popf
movsl
ds
mov
out
xlat
sub
mulb
pop
mov
mov
and
into
scas
mov
int3
dec
loopne
cmp
mov
jne
ss
jbe
int3
ljmp
pop
jle
fcom
jns
test
inc
push
sbb
push
test
test
jbe
mov
stc
adc
push
lcall
aam
mov
jp
pushf
andl
repnz
push
inc
test
or
and
xchg
jae
mov
xor
mov
inc
xchg
push
jnp
mov
jmp
mov
fidivrs
xchg
xor
inc
ret
jmp
subl
cltd
fmuls
insl
jp
xorb
mov
in
mov
cmp
push
lcall
jl
insb
add
out
decl
xchg
or
fistps
repnz
cmpsl
xchg
xor
pop
inc
pop
add
stos
add
fdivrl
adc
mov
xor
sahf
shll
inc
jecxz
mov
fs
push
das
gs
mov
push
sbb
mov
dec
hlt
or
inc
mov
movl
int
ret
test
and
sti
fildl
or
cmpsl
inc
sub
mov
xor
fwait
lahf
into
rolb
adc
pop
or
enter
fisubl
addr16
mov
xchg
bound
icebp
dec
sbb
in
add
pop
outsb
aad
inc
imulb
stos
xor
imul
ljmp
das
mov
and
sbb
jg
das
fldcw
out
sub
dec
enter
mov
pop
mov
aad
dec
ljmp
je
shrb
xor
mov
insb
aaa
adc
jg
xchg
add
out
mov
mov
cmpsl
sub
fdivl
psubusb
pop
and
mov
je
les
or
repnz
cmp
lret
flds
stc
mov
mov
pusha
pop
popa
jmp
add
sbb
repz
cmpsl
and
gs
aam
clc
mov
pop
add
xchg
inc
aas
push
add
jge
call
jecxz
adc
mov
popa
mov
icebp
clc
rcll
incl
xchg
mov
imul
add
or
ljmp
adc
lock
lret
fnsave
popf
in
in
in
adc
jae
jno
pop
sbb
in
fdivr
and
incb
jp
imul
data16
into
sbb
mov
imulb
cmpsl
mov
ja
stos
idiv
sahf
hlt
outsb
mov
test
sbb
aad
sbb
inc
pop
mov
cli
aaa
repz
arpl
push
int
push
ss
mov
adc
mov
sahf
cmp
notl
dec
ret
fs
xor
adc
pusha
cs
lea
les
lock
add
sbb
out
ja
jle
mov
sbb
push
xchg
insl
add
xchg
in
cmp
and
sbb
xchg
dec
pushf
push
mov
jbe
outsb
mov
loopne
pop
iret
fs
mov
test
fcoml
lret
cltd
lahf
mov
out
adc
sbb
test
out
in
mov
pop
mov
and
stos
jb
pop
leave
cld
jo
xor
lahf
out
dec
and
push
out
inc
or
adc
pop
add
inc
loop
dec
dec
mov
testl
pop
adcb
xchg
out
pop
sarl
addr16
lea
out
lea
adc
dec
inc
ds
lahf
push
or
cmp
leave
data16
cli
pop
add
dec
push
out
push
fcomps
and
imul
orb
test
sbb
push
add
scas
pushf
aam
hlt
sbb
mov
add
in
jmp
es
fstpl
idivl
sub
adc
or
lcall
orl
sbb
jp
adc
push
ret
int
or
dec
aad
repz
xor
mov
mov
nop
push
clc
insb
jg
dec
cmp
sbb
seto
add
out
jg
and
cmc
adc
int3
repz
adc
ds
out
jg
xor
in
add
fadd
test
outsb
mov
stc
mov
les
pushf
mov
test
insl
sub
cwtl
push
cmc
dec
sbb
imul
lahf
add
outsl
mov
repnz
imul
mov
fs
dec
inc
jg
test
outsb
jp
outsb
sub
xchg
pop
out
mov
mov
loope
bound
lahf
movsl
lea
rcrb
imulb
sbb
out
leave
loop
test
mov
and
shll
lock
add
addr16
inc
stos
mov
aam
push
push
or
stos
imul
lods
jp
icebp
push
into
movsb
leave
and
fistl
stc
jmp
sbb
xchg
mov
xchg
cmp
xorb
mov
push
out
leave
xor
data16
or
iret
jne
sarb
insl
pop
out
std
fidivl
adc
repz
cmpsb
std
call
or
lret
dec
dec
and
dec
pop
inc
mov
cmpsl
sahf
notb
mov
xchg
clc
loop
and
xchg
aas
fisubs
jp
mov
test
mov
pop
inc
adc
inc
mov
fsubl
data16
pop
xchg
imul
cs
ljmp
xlat
and
cmp
mov
fimuls
cltd
roll
je
pop
xor
inc
idivl
and
repnz
mov
enter
daa
xor
dec
jae
aad
xchg
out
jbe
cmp
dec
sbb
icebp
in
cmp
notl
test
xor
out
lea
in
sub
mov
cwtl
cmp
imul
loop
and
out
lea
popa
int
jg
mov
inc
add
jae
or
mov
xchg
call
add
out
mov
jo
aas
scas
adc
nop
rcl
cltd
and
stos
lahf
es
ret
mov
xchg
xchg
faddp
push
jl
fstl
xchg
push
ds
shll
add
in
jp
out
xchg
jp
push
movsb
mov
dec
daa
push
jecxz
or
sub
outsl
data16
enter
into
insb
movsb
lock
notb
mov
ss
icebp
mov
ljmp
in
mov
repnz
cltd
cli
aaa
sub
hlt
xchg
or
xchg
xor
add
imul
mov
fidivs
lock
adc
xchg
imul
std
dec
sar
sbb
xor
popf
jne
mull
out
push
sarb
mov
mov
lock
xchg
mov
sarb
loop
mov
jno
cmp
fsubr
nop
mov
loopne
sahf
ret
and
inc
popf
inc
sbb
std
mov
jmp
push
and
aam
hlt
sbb
pop
add
scas
lret
aam
xor
mov
add
push
rcl
shlb
mov
test
das
fbld
into
in
xor
xor
jae
adc
sub
sbb
push
divb
fwait
dec
cmp
stos
icebp
out
movsl
adcl
mov
aaa
imul
shl
jmp
mov
xor
lahf
pop
dec
mov
out
sub
sti
stos
add
push
leave
ret
mov
push
xchg
fdivr
out
rcl
pop
es
out
push
ja
fldcw
scas
test
fstps
mov
fadds
loope
and
mov
mov
xor
inc
dec
dec
sub
push
test
and
std
mov
sub
repnz
scas
out
pop
pop
loope
and
in
push
pop
jbe
lret
add
nop
lock
inc
setb
inc
lahf
hlt
shr
adc
data16
repz
lock
pop
sarl
xchg
popa
out
mov
xchg
jbe
jbe
mov
clc
shrb
sbb
mov
jmp
jae
xchg
mov
enter
fs
sub
sarb
adc
orb
add
mov
dec
inc
es
mov
jne
inc
lods
cld
mov
add
cmc
push
sub
imul
divb
push
xchg
or
xchg
in
leave
arpl
pop
cmp
hlt
cmp
mov
shlb
dec
mov
popf
loopne
popa
cmpsb
pop
mov
mov
es
push
pop
add
imul
xchg
shl
fildll
stos
cmpsl
push
xor
mov
ret
cmpsb
xchg
loop
pop
lds
fsubr
popf
or
gs
pop
and
sahf
or
pop
mov
sbb
adc
xchg
and
mov
test
and
xchg
les
dec
cmc
mov
and
data16
or
shrl
sarl
and
push
lcall
jne
fists
sbb
les
adc
xor
je
inc
inc
adc
rcrb
movsl
movsb
jae
xchg
sahf
lret
dec
cmpl
test
mov
and
int
xchg
dec
fwait
cmp
inc
dec
ljmp
jne
mov
xchg
out
or
scas
adc
das
es
adcb
cmp
sbb
adc
fistpll
pxor
sub
adc
mov
aam
push
sbb
mov
inc
push
mov
mov
out
in
jge
push
jge
push
xchg
xor
inc
mov
mov
aaa
fisubl
daa
lret
mov
outsl
shlb
jb
cmp
mov
aas
xchg
lds
das
inc
sbb
mov
push
xor
mov
cld
dec
mov
aas
fisttps
call
xchg
dec
and
sub
adc
fs
mov
push
cwtl
rcrb
scas
xor
mov
jns
mov
mov
push
addr16
jecxz
mov
push
mov
and
mov
cmp
dec
cmp
mov
enter
test
hlt
push
mov
js
dec
or
inc
mov
push
addr16
pop
outsb
xchg
loopne
xchg
iret
jb
adc
xchg
pslld
lods
sub
jnp
or
xor
jb,pn
push
testl
loopne
je
xchg
idivb
add
inc
xchg
mov
in
xor
jge
add
fmul
lea
int3
fstpt
pop
xor
dec
xchg
dec
sti
inc
jp
lcall
sub
rorb
sub
add
push
movsb
pushf
cmp
bound
or
push
mov
insl
fdivrp
and
lret
jb
std
add
sbb
dec
push
adc
pop
jno
aaa
aaa
out
repz
push
mov
outsb
shr
pop
cs
mov
jb
enter
imul
or
jl
xor
push
cmp
xor
inc
xor
pop
fwait
add
sub
out
xor
cmp
xchg
shrb
loope
push
pop
ss
icebp
fsts
jo
jb
mov
xchg
xchg
jae
pop
sbb
enter
mov
imul
jl
sub
and
sti
fiadds
xchg
ss
add
add
and
push
rorl
lock
negl
aas
and
cwtl
bound
cmpsb
xor
inc
mov
jl
lods
in
cld
fmulp
idivb
lods
push
into
push
mulb
dec
push
loopne
mov
insl
push
and
push
cmp
pushl
sbb
push
cli
repz
std
js
xlat
in
and
mov
cmp
sbb
jo
lods
lret
xchg
ds
mov
leave
jl,pt
mov
out
imul
jmp
negl
add
add
jnp
jle
insl
out
xchg
inc
mov
jge
pop
decl
scas
mov
nop
cmp
das
adc
mov
jb
xchg
mov
add
popf
sbb
dec
repnz
testl
decl
inc
insb
push
push
iret
gs
sbb
lock
in
not
sub
and
in
movsl
iret
sbb
dec
adc
lcall
xchg
cmc
fwait
sbb
dec
ss
mov
xchg
xor
mov
in
push
out
scas
jmp
mov
mov
or
pop
mov
sbb
arpl
sbb
in
sti
mov
popf
popf
fidivs
jo
repnz
sub
cld
aam
adc
pop
ja
mov
sub
push
push
je
orb
subl
sub
push
adc
jno
out
idivl
loop
scas
testb
gs
dec
or
xor
mov
push
mov
mov
cmp
push
rorl
out
call
mov
mov
inc
mov
dec
je
cwtl
iret
add
pop
gs
scas
jno
stos
scas
in
into
scas
jmp
add
push
pop
outsb
shl
loop
popf
sub
push
icebp
push
faddl
mov
jecxz
ret
or
fdivrl
push
cltd
sbb
sub
scas
cmc
out
push
dec
mov
imul
out
pop
es
rcll
sub
bound
jns
pop
test
sbb
enter
cld
xor
sahf
cs
dec
aas
xlat
sub
pop
stc
leave
sbb
daa
sub
mov
pop
repnz
mov
dec
aas
repnz
or
mov
push
push
jp
sbb
cltd
and
cmp
adc
pop
inc
test
mov
pusha
rorb
mov
out
dec
or
das
xor
out
or
push
stos
or
jecxz
xchg
jle
adc
cs
pop
insb
scas
mov
rclb
lock
push
hlt
add
cmpsl
mov
lret
cs
popa
sti
shll
lods
stc
data16
xor
int
mov
stc
dec
shrb
xor
cmp
ficoml
adc
and
push
jecxz
fs
push
hlt
mov
enter
push
mov
pop
ss
mov
aad
fwait
sbb
insl
fsubr
rcll
jg
and
mov
push
dec
cwtl
inc
stc
icebp
repz
pusha
xchg
push
sbb
xchg
jnp
sbb
in
pusha
xchg
test
scas
mov
das
mov
push
gs
sbb
movsb
in
repz
jecxz
pop
popa
ffree
push
or
aaa
xor
leave
ret
ds
sarb
aas
icebp
inc
ljmp
outsl
sub
push
cmp
scas
xor
lret
mov
sbb
je
out
es
inc
fs
inc
or
rcll
fists
sub
dec
out
stos
sti
fcoml
sbb
imul
scas
cltd
adc
add
cmc
dec
jge
ror
jl
arpl
adc
das
repz
pop
cmp
roll
stos
repnz
xchg
pop
xchg
ret
mov
and
jmp
or
stc
inc
xor
mov
cs
push
or
mov
mov
mov
inc
sbb
jmp
in
sbb
push
in
mov
jno
push
scas
mov
mov
dec
mov
addl
sbb
xor
into
push
sti
cmpsb
or
cmp
push
test
shl
mov
loopne
pop
sub
pop
mov
pop
sbb
divb
sbb
dec
lea
adc
mov
dec
jp
push
adc
inc
in
sub
jne
cmp
dec
mov
jge
fdivrs
repnz
int3
scas
mov
sub
fsubs
imul
push
jno
cmpsl
mov
das
pop
sub
negb
subl
stos
jl
sub
fsubrs
enter
in
cmpsl
push
mov
cmp
int3
inc
xor
insl
leave
popa
out
add
mov
adc
fistl
dec
add
mov
loope
jge
jne
mov
xor
pop
and
and
lods
adc
and
xchg
and
ret
cmp
test
or
lods
xor
insl
pushf
imul
mov
add
jbe
mov
or
test
rcrl
pop
xor
cmp
shrb
jg
es
jb
int
adc
imul
jne
jne
scas
dec
test
popa
mov
xchg
movsl
sbb
dec
loopne
inc
fcmovu
dec
push
jne
push
mov
pop
movsb
out
sub
add
movsb
test
mov
mov
mov
loop
sbb
mov
lock
jne
mov
fs
sbb
test
jb
rcrl
xchg
xchg
sbb
xchg
popa
or
push
mov
hlt
sbb
add
sbb
mov
xchg
sub
lds
ret
mov
roll
jge
test
test
cmp
movsb
inc
sub
in
fs
testl
push
push
lcall
loop
inc
push
testb
adc
sbb
sarl
in
int
fisubrs
call
movsl
in
sbb
clc
mov
xor
mov
push
hlt
inc
xchg
int
pop
xor
and
cmp
sbb
inc
repz
test
lahf
jb
std
jnp
fnstcw
in
mov
mov
pop
out
mov
cltd
or
mov
cltd
xlat
cld
xchg
add
mov
pop
sub
test
test
xor
stos
jbe
bound
call
jbe
enter
pop
cmpsl
in
cld
xchg
shll
ficomps
jo
pop
push
movsl
mov
fistpll
nop
xor
pop
sarb
or
xchg
outsb
andl
negl
jo
das
lcall
into
cmp
mov
xlat
inc
xchg
push
xchg
pop
iret
cmpsl
xor
inc
mov
arpl
js
pop
repz
int3
ja
addl
sbb
cmp
insb
xchg
dec
lods
add
push
cmp
pop
fs
cmc
sub
push
outsl
lahf
lock
xor
fldl
fsubl
pop
jo
sub
notb
jg
addr16
adc
jle
loopne
pop
add
ss
cmp
stos
std
das
sub
daa
pop
cmp
stc
inc
cli
jge
scas
in
inc
inc
adc
testb
lock
push
lea
jae
or
loopne
aam
les
jecxz
inc
in
inc
pop
xchg
jmp
add
std
je
jnp
dec
cltd
icebp
lcall
jo
clc
hlt
mov
xlat
in
and
leave
arpl
push
jb
pusha
divl
incl
rorl
cmp
sub
fisubl
data16
jl
lock
push
stos
cmp
inc
in
in
rol
cmp
ret
xchg
bound
in
and
stos
sub
push
rolb
pop
aam
mov
lea
shrl
imulb
push
dec
out
loopne
out
cltd
push
dec
lds
lea
fwait
pop
cli
mov
aam
dec
pop
jb
ja
jecxz
fs
in
and
sbb
mov
rclb
imulb
inc
fsincos
mov
dec
outsl
lds
repz
and
sarl
addr16
lods
lods
dec
jge
sbb
dec
out
enter
pop
mov
cld
add
mov
jg
hlt
testb
push
ret
sub
xor
daa
iret
pushf
rorb
xlat
inc
pop
inc
cld
cmp
scas
add
mov
scas
adc
adc
lds
movsb
into
int
push
inc
int3
call
xchg
roll
rol
jmp
sbb
stos
jno
cli
push
ja
mov
lods
movsl
iret
xor
gs
mov
loop
ret
testl
roll
sub
and
lods
mov
mov
dec
ds
cmp
ret
push
push
jmp
sub
mov
dec
and
sti
bound
or
andl
outsl
push
jnp
sarl
imul
mov
in
dec
xchg
sbb
rol
popa
in
lea
xchg
lret
in
ss
test
lcall
je
or
sbb
cmp
es
pop
mov
jge
cli
mov
mov
mov
or
xchg
sbb
loope
mov
movsb
arpl
add
shrd
pop
sub
mov
cmp
sbbl
jne
xchg
mov
fs
and
xor
xchg
push
mov
lret
cmc
jg
js
in
imul
pop
lcall
xor
xchg
std
repz
xchg
adc
arpl
test
sbbl
cmpsb
pop
sub
sbb
out
bound
test
aaa
push
mov
lea
lret
dec
dec
sub
fstp
inc
out
cmp
adcb
jl
leave
push
std
call
sti
clc
push
out
mov
and
mov
in
push
stc
jno
xor
loopne
or
pop
or
icebp
or
popf
dec
or
dec
cmpsb
mov
jecxz
push
xchg
and
mov
mov
mov
cmp
mov
das
rep
add
dec
sub
fidivs
push
lcall
mov
outsb
xchg
xchg
mov
cmp
mov
sub
adc
testl
adc
js
jmp
sbb
and
sti
jecxz
lsl
movsb
push
into
in
lahf
push
loopne
rclb
inc
sub
sarl
outsl
dec
into
icebp
dec
jno
dec
stos
push
hlt
xchg
jecxz
xor
adc
int3
mov
mov
pop
ret
addr16
divl
lcall
in
pusha
popa
lods
stos
mov
stos
sbb
movsb
dec
jo
xor
jecxz
lret
lahf
sbb
popa
push
add
repz
sub
xchg
sub
cmpsl
das
test
frstor
rclb
sbb
cmc
pusha
mov
pop
sbb
packsswb
out
movsl
inc
insl
imul
mov
pusha
or
das
fstps
lcall
shll
jbe
sbb
dec
sbb
push
mov
mov
mov
mov
xor
int3
mov
adc
les
testb
cmp
jge
insl
pop
aad
or
mov
call
push
mov
sbb
jmp
subl
arpl
mov
inc
cld
std
scas
loope
xchg
scas
cmp
and
in
into
roll
sub
scas
add
sbb
push
or
das
shrl
lret
loopne
sarb
mov
mov
test
sbbl
pop
mov
insb
xchg
dec
push
aam
in
fisttpll
addr16
push
xchg
enter
insb
loop
add
add
jns
insb
cmpsl
add
mov
jle
enter
pop
lea
mov
mov
cmc
lock
sahf
add
nop
jnp
mov
icebp
mov
mov
dec
shlb
inc
enter
pop
dec
div
cli
lret
xchg
rcrw
add
xchg
icebp
add
mov
add
and
rcll
repnz
cltd
mov
leave
sbb
ficoml
or
xor
ja
std
cmp
xor
mov
inc
lcall
sti
test
dec
rcl
pop
cmp
cltd
sahf
xor
inc
rorl
cmp
push
xor
jnp
jmp
xor
jge
out
ja
test
sbb
dec
dec
ss
xlat
inc
inc
jne
das
push
jp
gs
lret
or
fldt
xor
dec
int3
xchg
ds
add
and
js
pop
ror
jns
popl
sbb
sbb
mov
test
aas
cli
sub
adc
pop
inc
ja
sub
cltd
sub
mov
sarb
jmp
lods
jae
sti
pop
push
xchg
sbb
mov
sti
cmpsl
mov
addr16
push
sbb
stos
jb
mov
ljmp
pop
add
push
int3
pop
iret
std
push
jecxz
fimull
into
pop
das
cmp
lret
and
add
cs
pop
js
sub
lahf
mov
xor
and
adc
idivl
mov
push
mov
loope,pn
pop
je
inc
ret
or
jp
inc
lcall
xchg
jle
imul
xchg
mov
cmp
mov
adc
pushf
cmpsl
shlb
mov
aam
fsubs
jmp
cmc
cmpsb
inc
pop
pop
push
mov
nop
ja
loopne
aad
sub
insb
jmp
xor
subb
jl
jle
xchg
cmp
mov
xor
add
xor
lsl
enter
mulb
addr16
mov
fwait
xchg
lea
jns
mov
and
xchg
test
out
fmuls
or
repnz
frstor
pop
lds
push
aaa
arpl
ret
lea
push
enter
insb
pop
lds
cmp
or
mov
lret
xlat
jmp
mov
inc
clc
dec
out
push
mov
andb
push
lods
xchg
insl
push
mull
mov
pushf
cld
push
ss
loop
repnz
mov
test
jmp
pop
jp
mov
jge
or
mov
out
adc
lcall
push
cld
xlat
lock
sti
inc
sbb
or
inc
xor
sbb
mov
sub
ror
stos
push
add
pusha
fucomi
arpl
popa
cli
out
mov
cmp
out
test
or
ds
inc
mov
movsl
jmp
movsl
outsl
push
es
mov
cld
mov
dec
lods
repz
push
outsb
inc
cmp
test
lods
cmp
lea
mov
add
insl
jno
pop
ret
inc
adc
mov
jge
adc
add
cmpsl
sbb
mov
cmp
pop
push
jne
jge
sbb
mov
mov
xchg
adc
xchg
lods
push
icebp
loope
fldl
xor
lods
dec
arpl
xchg
cli
aad
test
fildll
mov
les
jne
out
scas
repnz
jns
popa
jle
jno
daa
imul
addr16
pcmpgtd
in
lsl
subb
cmp
sarl
scas
or
popa
dec
mov
cmp
jmp
jle
stos
sbb
leave
bound
leave
scas
cmp
andb
aaa
addr16
xchg
jns
lock
inc
and
cmp
mov
setge
inc
sbb
test
int3
add
mov
or
scas
sub
dec
or
pop
xlat
jmp
insb
and
pop
sub
pop
xchg
jmp
cmp
inc
cmpsl
stos
add
or
pop
stos
rcl
and
shr
or
insb
inc
sub
mov
push
fs
ret
inc
jp
movsb
sbb
fbstp
adc
popa
in
fldl
jae
mov
in
lcall
mov
repz
nop
movsb
lret
dec
dec
and
ja
cld
orl
pop
hlt
call
das
lcall
jmp
mov
aas
mov
dec
lret
pop
adc
notl
and
or
in
xor
jle
xlat
push
adc
mov
sbb
lcall
mov
add
out
and
jg
pusha
mov
cmp
mov
push
push
lret
in
add
inc
sub
cmpsl
pop
xor
dec
les
jmp
imul
mov
mov
add
addb
loop
in
sbb
aas
push
aad
adc
repz
dec
mov
adc
push
pop
jp
aad
ficoms
lcall
push
or
popa
shr
xchg
mov
popa
xor
adc
mov
mov
sarb
pop
or
in
and
pop
data16
subb
xchg
data16
adc
shlb
movsl
cltd
mov
lock
sbb
ret
shll
aad
lret
leave
pop
fldt
movsb
pop
inc
add
jns
pushf
mov
cs
add
sbb
iret
repnz
xlat
out
mov
jmp
mov
cmpsb
xor
les
sbb
dec
pushf
cltd
cmp
dec
ljmp
xor
jb
jns
mov
xlat
pop
scas
push
repnz
mov
ret
pop
aad
insl
push
push
mov
sbb
or
adc
cmp
iret
dec
adc
push
std
iret
pop
xchg
push
cmpsl
xchg
add
sub
negl
es
push
push
cs
jg
test
popf
les
xor
out
mov
int
and
icebp
ja
push
call
or
pop
xchg
dec
adc
mov
ss
mov
push
inc
mov
jl
push
pop
ljmp
loope
inc
das
mov
sbb
jecxz
mov
mov
fs
mov
jae
sub
mov
enter
push
xor
shr
push
cltd
mov
push
cs
aaa
jo
jge
mov
lcall
stc
imul
mov
cld
sbb
in
bound
and
fsubr
mov
xlat
jg
fcmovb
out
jg
int3
jge
sbbb
push
jne
jl
adcb
cmp
cmp
sbb
cmp
insb
or
popf
adc
lret
push
pop
mov
pop
push
dec
inc
loopne
cmp
stos
inc
inc
popf
mov
pop
dec
int
loopne
ljmp
dec
sti
mov
addl
xchg
add
ljmp
mov
das
mov
popf
movsl
xchg
mov
fstpt
xchg
stos
pusha
mov
mov
dec
inc
mov
mov
test
outsb
push
nop
pushf
out
and
and
stc
xor
push
out
imul
dec
jecxz
lcall
jnp
adc
gs
sbb
pop
and
and
mov
dec
rol
or
dec
adc
push
jl
leave
sub
push
jp
and
dec
test
pushf
and
test
xlat
push
add
icebp
outsl
and
mov
icebp
mov
mov
add
data16
in
push
test
test
push
stc
insb
outsb
push
and
je
fdivrs
add
loopne
xor
cli
fwait
movsb
jmp
pop
ss
xchg
pop
jo
sbb
sub
jmp
imul
xchg
fcmovu
adc
in
ret
sub
xchg
xor
enter
movsb
xlat
push
jns
loop
jae
push
pop
add
xchg
inc
push
dec
xchg
rcll
mov
push
test
sbb
test
je
inc
ret
rolb
and
mov
iret
pop
je
icebp
or
out
leave
lret
ret
mov
cmp
stc
sbb
inc
insb
add
sub
les
nop
loope
mov
cltd
adcl
push
xlat
push
dec
fldt
mov
jne
fistl
and
stc
mov
lret
xchg
xor
fsub
xchg
fcomps
sub
or
pop
add
rcrb
xor
pop
mov
out
xchg
jb
gs
call
xor
cmp
cmc
int
pop
in
sub
mov
inc
test
test
fisubrs
adc
xor
push
dec
or
add
adc
inc
outsl
inc
jmp
fwait
repz
ss
pop
push
mov
xorb
sbb
sub
out
arpl
push
iret
popf
pop
in
cmp
icebp
or
test
adc
push
xchg
pop
mov
shll
xlat
pop
mov
movsb
xchg
pop
lods
nop
push
outsl
sub
ds
into
push
jg
mov
mov
aad
push
sbb
and
xchg
ljmp
arpl
push
mov
xchg
out
test
imul
mov
ss
subb
into
fcmovbe
push
movsl
ss
mov
xchg
and
pop
push
punpcklwd
es
mov
enter
cmpsl
into
fdivrl
mov
jns
sbb
push
call
sbb
xor
sub
jne
pop
and
and
and
xchg
jns
repnz
xor
mov
push
xor
pop
mov
js
mov
push
sub
mov
pusha
mov
xor
push
xchg
pop
cmp
popf
cmp
mov
scas
xchg
lret
dec
mov
lods
lds
arpl
sub
fidivl
add
jg
in
xchg
add
jl
sub
add
shl
or
fadds
inc
lahf
push
nop
add
push
xchg
jp
sub
xchg
xchg
aas
cmp
pushf
and
inc
push
dec
cwtl
and
or
test
cmp
insb
mov
jno
popa
dec
pop
orb
mov
fisubrl
sub
setno
cmpsb
mov
jnp
cld
jne
nop
imul
leave
fsubl
ja
xchg
icebp
mov
add
cmp
inc
ja
inc
cs
not
test
scas
pinsrw
dec
sub
sbb
add
aas
pop
xor
aas
or
sbb
jg
imul
mov
pop
cmpl
nop
popf
stos
shl
inc
sbb
or
stos
addr16
lds
xchg
std
mov
in
fimull
cmp
test
xor
xchg
sub
aad
sub
and
and
sbb
aaa
fstpt
xchg
sub
sub
aaa
fdivrl
scas
into
xchg
pop
test
nop
bound
and
xor
fcmovbe
cli
pop
in
pop
pusha
xor
mov
push
mov
add
jno
sbb
dec
xor
and
cli
mov
popa
xchg
pushl
icebp
pushl
mov
idivb
pop
lahf
aas
pusha
xlat
dec
rcpps
lds
dec
and
xchg
sahf
mov
mov
adc
popf
rolb
mov
jle
test
push
cmp
stos
xchg
call
inc
xlat
scas
dec
testl
gs
mov
pusha
adc
jg
shl
mov
cld
xchg
mov
filds
ljmp
add
jne
push
sub
mov
push
lods
fs
xchg
mov
or
mov
jmp
sarl
lea
shrb
jge
out
and
inc
outsl
adc
inc
fiaddl
mov
fwait
push
negb
cmc
mov
jecxz
lock
jae
imul
ja
ss
jnp
mov
mov
in
enter
test
aas
and
xchg
jmp
rcll
jl
movsl
pop
mov
xlat
xchg
in
inc
pop
add
int3
addr16
xchg
ja
and
scas
daa
cmpsb
jnp
lods
xor
jne
fwait
and
jl
cli
pop
jle
cmp
enter
mov
arpl
adc
xlat
xchg
push
out
mov
ret
push
jnp
std
sub
insl
lock
in
ret
mov
insl
push
das
cmp
data16
stos
sbb
adc
movsb
and
jmp
outsb
mov
cmp
outsb
cmpsl
pop
jecxz
mov
shrb
inc
fucomip
pop
push
scas
cmp
out
movsl
mov
dec
or
fmulp
jge
jp
scas
ja
sub
sbb
mov
mov
bound
xchg
sub
inc
into
inc
cmp
cmpsl
mov
out
std
stos
js
jg
int
sub
sti
xor
dec
das
icebp
jecxz
pop
jle
pop
pop
jns
cmp
pop
cmp
xchg
mov
push
ss
nop
pop
cmp
mov
ja
loopne
pop
push
inc
mov
imul
add
es
cli
fnstcw
push
dec
hlt
in
push
xchg
dec
iret
mov
decl
ss
jge
repz
movsb
xlat
js
lcall
mov
cmpsb
loope
loopne
adc
leave
cmp
shrb
fnstcw
fidivrl
inc
jns
rcl
popf
bound
xchg
inc
mov
fbstp
lea
mov
mov
mov
pop
ficomps
or
mov
jle
ret
fs
rcll
pop
sub
mov
or
jl
sbb
cmpsb
addl
and
xchg
push
mov
std
add
fcomps
add
out
push
xchg
inc
jge
dec
sub
jns
outsl
jmp
fsts
jb
sbb
adc
enter
mov
movsl
pop
jge,pt
pop
mov
mov
lock
push
into
or
push
test
outsl
fidivrl
es
dec
cwtl
out
fidivrl
push
sub
mov
fiadds
aam
icebp
pusha
dec
pushf
inc
out
cmp
pop
inc
dec
xor
shlb
outsb
dec
push
cmp
mov
jo
xor
mov
lcall
cmp
add
inc
jb
or
pop
jmp
push
bound
push
mov
pop
xlat
js
jae
mov
fldenv
test
je
jno
add
jmp
xor
in
xchg
imul
pop
fucomp
push
shr
push
lahf
pop
cmp
sbb
bound
int
sbb
sbb
int
or
add
scas
mov
es
stc
adc
xor
jns
fnstsw
movsl
inc
ja
out
or
mov
sub
daa
mov
inc
pop
mov
add
insb
inc
ljmp
sbb
pop
out
sarl
addr16
shl
iret
adcb
pop
cmp
sarb
arpl
jl
fbstp
dec
mov
iret
stos
jno
push
mov
and
out
test
pop
out
test
cmp
mov
push
and
test
add
repz
mov
jnp
jle
rorl
mov
shll
jno
cmp
cmpsl
push
mov
add
pop
push
dec
mov
lret
xor
icebp
push
stos
pop
cmp
or
dec
imul
mov
in
outsl
dec
aaa
inc
push
pop
cmp
pop
xor
ja
sbb
in
cmp
push
push
mov
inc
mov
inc
add
add
mov
call
lcall
hlt
fistps
andl
add
pop
out
mov
adc
push
mov
cmp
das
add
adc
bound
lods
loope
repz
inc
loopne
or
sub
into
and
mov
sbb
dec
push
pop
inc
pop
pop
dec
pop
or
stos
mov
sub
loopne
mov
add
dec
sti
imull
into
sti
mov
sub
jp
inc
push
xor
pop
test
jp
sbb
sbb
push
mov
addl
inc
in
mov
cld
add
jne
mov
xor
ljmp
clc
push
jge
sahf
cmp
cmc
rcrb
sub
aaa
pop
jecxz
daa
idivb
mov
push
jge
mov
mov
pop
sub
sbb
xor
fcomp
cltd
adc
xor
cmp
xor
cmp
addl
stos
adc
pop
mov
and
mov
jge
shrl
mov
xlat
add
fcomps
out
sub
dec
icebp
mov
mov
aam
jge
push
test
stos
hlt
loope
insl
inc
fwait
xor
sbb
ret
xchg
cwtl
fimuls
or
push
xlat
je
fsubl
push
pop
push
pop
imul
imul
sbb
and
adc
ret
push
jbe
pop
sbb
stos
sub
inc
xchg
dec
loope
icebp
pop
xchg
sbb
xlat
push
sub
push
outsl
inc
xor
sbb
add
ret
sbb
jle
out
dec
out
jb
cmp
mov
jg
jo
shrb
sbb
add
mov
cltd
icebp
cmc
int
enter
cmp
lret
dec
sub
xor
sub
push
pop
xor
inc
mov
pusha
mov
scas
jp
cmpsb
cltd
addl
xlat
dec
fs
push
out
cld
sub
fs
xchg
sbb
scas
mov
xchg
faddl
adc
xchg
loopne
negb
fdivrs
xchg
mov
adc
insl
dec
and
adc
rcr
inc
sub
fcmovnbe
xchg
or
lcall
out
repz
sti
xor
xor
lcall
shll
sub
mov
outsl
push
fcompl
cli
xchg
mov
ss
lahf
outsl
inc
hlt
mov
jp
test
stc
dec
xchg
xor
xor
lea
pop
xchg
xchg
or
out
pop
mov
fs
data16
stos
sbbb
mov
mov
jnp
pushf
test
push
dec
xor
xchg
ss
imul
imul
xchg
outsb
and
dec
sub
inc
adc
dec
xchg
xor
sbb
test
adc
cwtl
pop
cli
adc
dec
jns
adc
push
cwtl
xor
jne
fs
aaa
fbstp
cmp
mov
fwait
mov
sub
adc
bound
movsl
lea
jae
xchg
add
inc
imul
data16
mov
outsl
mov
and
out
mov
cli
aam
xchg
and
xchg
fs
inc
xchg
test
cwtl
rcl
popf
xchg
pop
leave
cmp
movsb
push
subl
jns
dec
ss
pusha
negl
inc
push
sbb
jns
ret
dec
ja
inc
or
mov
cli
pop
sub
inc
fiadds
icebp
mov
lock
ret
fldt
push
and
xchg
mov
add
or
push
aas
repz
cmp
je
gs
mov
stos
and
arpl
in
jmp
mov
cmpsl
arpl
add
and
push
mov
jnp
movl
pop
jmp
test
int3
xchg
sub
pushw
repnz
dec
pop
jl
mov
mov
stc
jne
and
add
ss
jle
mov
lods
mov
cltd
push
or
push
pushf
adc
mov
mov
push
hlt
jnp
cmp
adc
add
dec
mov
push
movsl
les
jbe
sub
div
mov
aaa
pop
push
into
call
fimuls
mov
or
sarl
inc
dec
jo
das
ja
pop
xchg
adc
sarl
mov
sbb
rcrl
xchg
leave
out
sbb
lods
jg
loop
jne
xchg
xor
stc
imul
std
lret
inc
cmpsb
pushf
cli
dec
aaa
fldl
xor
rol
cltd
push
imul
adc
cmpsl
xchg
gs
cmp
dec
xchg
or
movsb
mov
or
int3
sbbb
pop
call
push
aam
cli
dec
mov
xor
sbb
pop
mov
push
out
jne
arpl
scas
ja
and
sbb
sbb
or
adc
pushf
clc
adc
inc
xorl
mulb
and
in
sarl
jns
mov
jge
pop
jp
push
push
pop
in
or
test
mov
cmp
daa
addb
sub
mov
cmp
mov
in
xchg
lret
cmpsb
sbb
roll
sti
je
daa
shr
mov
mov
enter
jecxz
movsb
sahf
pop
inc
mov
push
add
das
add
add
dec
mov
add
adc
inc
in
or
inc
fs
mov
mov
push
fnstenv
mov
cmp
jb
cmpsl
xor
cmp
sub
mov
push
xchg
xor
imul
mov
xchg
jl
inc
ret
adc
pusha
testl
adc
sti
rorl
in
mov
and
xchg
inc
stos
mov
or
rorl
ficomps
rcll
inc
adc
and
shrb
xchg
add
adc
test
pop
push
pop
out
fwait
push
iret
pusha
mov
insl
cmp
std
sub
ret
mov
or
xchg
dec
fidivrs
cmpsb
dec
in
jp
jge
pop
fists
or
iret
xchg
ror
xor
jb
cmc
sub
xchg
xor
icebp
addr16
insb
lret
scas
sbb
inc
dec
cmc
mov
lods
inc
mov
hlt
les
fcoml
jmp
aam
pop
popf
lods
loope
into
fcompl
lods
xchg
or
xor
cld
lods
or
pop
jp
lds
shrl
cmp
aam
adc
leave
cltd
pop
mov
lock
or
lahf
sarl
fidivs
xchg
and
mov
stos
mov
push
icebp
nop
hlt
dec
mov
push
lcall
lods
xor
xor
in
push
jne
imul
test
xchg
repz
pop
push
xor
sbb
and
jecxz
xor
and
jno
shll
mov
rcll
jl
fcomip
xchg
pop
mov
insl
pop
out
xchg
xor
sbb
roll
add
add
push
dec
dec
sub
ret
fmulp
pop
fisttps
push
shlw
subl
cld
mov
fdivl
sarb
jp
xlat
push
decl
mov
cmpsb
outsb
jb
loop
into
in
xor
push
mov
xor
pop
shll
icebp
sub
jg
aaa
or
jnp
xor
mov
and
sub
je
fsub
test
out
into
ret
loopne
xchg
cld
daa
lock
mov
aam
add
dec
repz
adc
rcrb
insl
adc
sub
arpl
pop
cmpsb
push
gs
imul
pop
pop
rcl
cmp
cmp
sub
popa
push
adcl
cwtl
call
push
mov
pop
scas
xor
movzbl
std
and
push
xchg
aad
pushf
mov
cld
adc
push
gs
push
dec
push
mov
sbb
push
push
nop
mov
mov
call
out
xchg
mov
push
jp
push
sbb
imul
adc
shl
jl
sbb
imul
push
and
and
jb
inc
add
shr
aas
ret
mov
stc
push
pop
cmp
mov
rclb
xlat
lock
cmp
stc
testb
xor
jp
sub
cmp
push
test
clc
add
cltd
mov
sub
ds
stos
dec
ss
mov
lea
adc
xor
hlt
ljmp
add
dec
into
mov
aad
mov
les
fsubl
imul
pushf
insb
xchg
mov
pop
jae
test
mov
adc
sbbb
pop
inc
jecxz
ljmp
xlat
dec
daa
daa
lea
sub
inc
repnz
shlb
push
jge
scas
shlb
outsl
flds
loope
imul
sbb
fsubrl
xchg
test
mov
enter
aam
jecxz
add
mov
out
loope
jae
stos
ljmp
add
mul
xchg
inc
fadds
arpl
mov
adc
js
ss
out
sti
dec
dec
aam
mov
repnz
gs
iret
sti
hlt
dec
lea
test
mov
addl
scas
in
sbb
aam
fsubl
imul
icebp
xor
push
lret
fs
and
es
sbbb
test
es
mov
iret
cltd
and
cmp
add
xchg
daa
aad
movsb
dec
add
negl
push
pop
inc
out
std
popf
arpl
push
cmpsb
dec
xor
add
stc
mov
mov
sbb
adc
xchg
in
fdivrl
rclb
sub
dec
jl
jnp
fmul
in
cld
jne
aas
mov
rcrb
xor
mov
mov
add
mov
push
lock
xchg
cli
cmp
aam
shlb
pop
aaa
leave
sub
sar
popa
iret
test
dec
ficoml
je
sub
adc
aam
and
dec
mov
mov
pop
mov
sub
lahf
or
mov
repnz
lds
inc
mov
cmc
sbb
insb
cmpl
mulb
or
imul
sahf
sarl
arpl
es
inc
mov
outsb
mov
test
pop
pop
fs
pop
fdivr
xor
inc
or
xor
loop
cmp
inc
es
and
push
test
lds
dec
pop
js
xchg
mov
stc
rolb
fucom
movsb
inc
adc
pop
xor
aaa
lret
dec
add
ds
aad
push
lds
pusha
stos
mov
imul
loop
insb
lretw
push
cmp
add
mov
push
xor
clc
movl
pop
lret
pop
mov
ja
pushf
sub
mov
jmp
mov
hlt
jge
loope
and
lahf
stos
cmc
push
jns
pop
cmpsb
xorl
loope
mov
jo
add
mov
xchg
sub
insb
jle
stc
fdivrl
gs
ret
ss
jle
cmp
pop
jno
into
pop
sbb
fcmovnbe
fwait
jge
imul
arpl
and
jl
mov
mov
xor
add
call
xchg
pop
cltd
bound
mov
test
or
xchg
add
out
addl
sbb
mov
mov
sub
scas
fbstp
outsb
dec
repnz
xor
mov
stc
sbb
xchg
xorl
pop
insl
mov
loope
lods
repz
out
shl
jbe
dec
popa
das
sbb
or
adc
sub
mov
jp
lock
jo
out
jns
ja
mov
cmp
in
stc
movsl
mov
jns
push
xchg
aaa
jns
xchg
cmp
sbbb
sub
test
adc
jbe
or
dec
push
dec
shrl
jno
mov
sbb
aaa
iret
xchg
outsb
inc
xchg
fbstp
loopne
mov
push
cmp
ds
js
and
test
sti
pushf
leave
aad
inc
stc
push
fisubrs
and
inc
testb
outsb
rolb
fs
push
jmp
cwtl
fisubrs
arpl
mov
clc
jmp
out
push
stos
adc
fimuls
sub
movsb
or
lds
jo
aaa
ficompl
cmp
cmp
xchg
mov
enter
ror
push
addr16
adc
jmp
mov
pop
mov
jmp
inc
pusha
imul
popa
pop
or
fisttpll
fdivs
adc
addl
adc
outsb
aam
cmp
test
ret
pop
imul
into
icebp
sahf
jb
jle
inc
cmp
cmpsl
add
jmp
xchg
stos
call
popa
in
push
xor
cli
sub
in
int3
push
xchg
popa
divl
sub
pop
add
pusha
enter
hlt
add
jb
les
add
mov
mov
sahf
mov
and
mov
inc
xchg
repnz
fadds
mov
ljmp
mov
and
iret
push
mov
inc
popa
sub
mov
sahf
roll
shll
fildl
adc
jmp
fwait
loope
arpl
fxch
mov
bound
imul
sbb
sub
cmp
test
aaa
jbe
sbb
daa
push
dec
xchg
lea
aam
cmp
mov
sub
stos
pop
add
inc
push
cli
cmpsl
cltd
adc
xchg
push
sub
lds
sti
cmp
xor
inc
xor
jp
mov
shlb
mov
push
xchg
mov
xchg
int3
mov
jp
xchg
adc
cmpsl
lods
out
push
push
ret
inc
fs
push
adc
rcr
fwait
and
fs
dec
jns
adc
dec
adc
imul
mov
xor
xor
lods
jno
mov
not
xor
mov
sbb
mov
cmc
and
inc
rclb
adc
out
icebp
mov
sbb
inc
das
sti
hlt
xor
ret
dec
xchg
rorb
dec
push
fs
icebp
xchg
and
add
andl
test
and
cmp
inc
sbb
pop
out
mov
jae
adc
addr16
push
test
xchg
fxch
jmp
gs
rcll
xor
add
popf
test
cmp
jmp
mov
fucomp
or
push
pop
ret
push
outsl
bound
add
inc
xor
ficompl
xor
fbstp
enter
jg
adc
mov
cmp
int
test
into
fstpl
xchg
ret
mov
movsb
movsl
mov
adc
dec
xlat
test
inc
out
bndstx
sub
sub
test
movsb
inc
in
jne
mov
jnp
push
das
les
mov
jge
out
daa
mov
ds
lret
cmp
dec
sbb
arpl
mov
adc
xchg
xor
xchg
es
imul
push
xchg
daa
xchg
ja
cmp
mov
sub
mov
dec
add
clc
test
mov
push
jno
xor
cwtl
sub
ret
jnp
rclb
and
mov
ret
addr16
movsb
mov
lods
mov
pop
leave
cmovb
shlb
mov
loope
cmp
mov
adc
or
ljmp
jns
loop
jnp
jge
stos
data16
lds
and
test
pop
inc
adc
mov
dec
mov
lods
pusha
adc
cs
cwtl
roll
test
loope
fbstp
mov
arpl
js
mov
jg
xor
mov
into
inc
loop
popf
aaa
inc
in
dec
and
jnp
xor
cltd
into
ljmp
icebp
out
mov
add
pushf
fisttpl
imul
in
sub
std
mov
add
std
loopne
popa
push
insb
mov
xor
pop
xchg
in
jbe
jmp
add
mov
dec
cmp
std
scas
enter
adcl
fsubp
and
bound
push
or
jo
pop
push
jns
dec
lds
xchg
add
aaa
sbb
popa
mov
out
cmp
mov
es
and
test
cmpsl
xchg
add
inc
xor
xor
mov
fisttpll
mov
mov
xchg
aam
jp
test
mov
dec
inc
pop
inc
push
enter
mov
sub
fdivrs
add
or
ja
bound
jne
inc
jecxz
sbb
mov
loop
mov
mov
ret
mov
dec
dec
shl
mov
in
insb
call
xchg
shlb
and
and
cld
popa
clc
enter
out
push
mov
sub
loop
outsl
jmp
dec
imul
jae
jge
inc
sub
and
popf
repz
mov
dec
sti
enter
jae,pt
dec
fdiv
fsubl
fldlg2
aaa
push
pop
int
popf
pop
mov
andb
push
das
add
sbb
in
inc
je
in
scas
hlt
in
push
mov
and
jmp
mov
mov
sbb
aaa
int3
ror
xlat
sbb
stos
in
cmp
or
pop
mov
add
test
jmp
xchg
jl
xchg
mov
hlt
or
adcl
out
aaa
in
and
ficomps
dec
mov
xchg
cwtl
xchg
add
dec
xchg
and
cmpsl
fwait
push
sub
mov
popf
xchg
xchg
mov
mov
inc
repnz
cmpb
add
xor
mov
mov
jns
xor
jns
mov
push
cltd
std
cltd
data16
cmp
sbb
sar
mov
add
out
push
loopne
arpl
dec
inc
jl
xor
push
add
scas
mov
sub
rcll
add
fs
push
lcall
mov
int
cmp
sub
mov
je
adc
mov
pop
and
mov
cmpsb
das
jp
enter
xlat
rcrb
xchg
dec
inc
in
stos
and
and
js
inc
jne
cmp
xor
lret
lahf
jp
lds
rcl
call
mov
inc
in
mov
scas
dec
fsubl
pushf
leave
xchg
pusha
rorl
mov
xor
add
into
rol
sub
mov
ja
sbb
out
fwait
xor
rcl
xor
push
jp
idivb
cmpsl
stc
rcrb
add
cld
xor
in
cmp
inc
xchg
mov
fs
and
sbb
clc
aas
outsl
stos
jbe
inc
enter
inc
cmp
xchg
xchg
in
out
out
dec
push
dec
int
rcll
inc
jns,pt
jae
adc
js
xchg
mov
mov
movsb
rcpps
lds
mov
inc
lods
adcl
pushf
xor
mov
push
jmp
rcll
add
push
pop
sbb
push
mov
cmp
cmp
out
in
mov
and
repz
mov
test
xor
imul
add
mov
xchg
loopne
xchg
inc
stos
sbb
sbb
pop
mov
lds
adc
out
jne
loope
mov
int3
movsl
jmp
xchg
aas
inc
cli
fisubs
sub
cltd
test
mov
adc
aam
repz
int3
sub
ss
sub
dec
adcw
inc
lret
fidivrs
sbb
push
xchg
cmpsl
cmp
insb
xchg
insl
hlt
push
mov
inc
cmp
lds
sbb
or
or
gs
xor
out
push
xchg
mov
dec
push
call
sbb
mov
jne
jb
adc
jecxz
in
popa
pop
mov
push
aas
mov
pop
inc
out
push
push
mov
fisubl
mov
fidivrs
sbb
inc
xor
pop
jge
push
jo
mov
lock
std
sahf
push
leave
jno
sbb
dec
cmp
aam
insl
ds
lcall
aas
push
andb
sbb
sarb
cld
sbb
or
add
in
dec
fwait
sbb
push
inc
inc
push
or
mov
lods
sar
inc
mov
mov
adc
xchg
xchg
push
fsubr
and
out
test
lea
iret
aam
xor
roll
pop
xor
ds
xchg
cmpsb
lahf
ljmp
fwait
int3
lret
sub
jge
jg
insb
ljmp
or
mov
cmp
pop
pop
xchg
push
icebp
xchg
push
daa
sub
out
bound
jmp
sarl
psraw
xchg
cld
or
daa
dec
cmp
cltd
aaa
inc
dec
push
cmpl
leave
cmpsb
mov
int
pop
add
adc
es
mulb
pushf
add
fdivrs
add
push
lock
xchg
scas
xor
mov
int3
cmp
xchg
out
mulb
mov
mov
int3
push
shlb
push
pop
sbb
in
inc
jnp
mov
or
push
pop
insb
mul
push
sahf
dec
stos
xchg
mov
push
test
bound
and
add
pushf
push
out
sub
aaa
push
nop
das
lock
add
sbbb
in
push
xor
mov
add
iret
jg
add
mov
cmp
sbbw
dec
push
popa
cwtl
loopne
dec
sub
mov
add
popf
ror
xor
shlb
mov
lods
loope
not
es
cld
mov
pop
mov
adc
add
pop
dec
sub
fwait
push
push
mov
xor
iret
lret
or
jmp
mov
bound
inc
xchg
sarl
mov
andl
test
lds
iret
in
imul
sub
int3
jp
test
add
push
mov
jns
push
mov
mov
imul
popf
in
inc
mov
repz
adc
pop
cmc
and
pop
cld
je
outsl
sub
cmpsb
es
lcall
jl
dec
fcoml
cmp
les
dec
cmp
and
out
sbb
push
mov
icebp
pop
jb
or
inc
lret
push
dec
shl
push
outsl
xor
in
frstor
aas
ds
repz
cli
int
jmp
fs
rorl
jp
mov
lret
fisttpll
push
mov
jl
inc
sbb
sub
arpl
aad
xor
cli
mov
pop
lret
pusha
push
lret
add
rorl
repnz
sub
icebp
shl
aad
cltd
pop
sub
das
dec
mov
lcall
and
mov
aad
mov
pop
sub
pop
sub
jo
cmp
mov
movsb
lret
mov
xchg
movsl
lret
xchg
inc
scas
fdivl
icebp
or
aas
mov
mov
adc
pop
loopne
mov
jae
into
jecxz
adc
xor
mov
out
xor
add
lahf
fiadds
push
and
inc
sub
lods
adcl
fmul
in
rol
mov
scas
roll
pop
sub
fbstp
shll
jge
adc
rcll
jae
cli
jle
divl
in
cmp
xor
in
leavew
nop
inc
and
and
sbb
lds
cltd
enter
mov
int
outsb
mov
add
das
stc
data16
ficoml
jge
mov
test
mov
mov
and
ss
in
imul
mov
mov
outsb
jmp
jmp
inc
popf
xor
repnz
outsb
cmpsb
push
std
add
mov
mov
in
pop
mov
mov
xchg
cmc
adc
into
ss
les
sub
cs
xor
gs
popf
xor
std
xor
mov
shl
xchg
std
mov
jnp
fadd
enter
scas
je
out
dec
mov
lds
sbb
mov
gs
push
ficoml
xchg
ret
fcomp
push
std
or
test
and
or
imul
popf
pop
and
sbb
fwait
sbb
pop
sub
in
inc
in
outsb
rcl
or
lcall
sbb
cmp
xor
adc
popf
jo
je
jl
sbb
xchg
test
testl
mov
dec
loopne
sbb
stos
mov
fdivl
fmull
cwtl
daa
push
repnz
sub
rcrl
xlat
pusha
and
notb
ret
inc
sbb
jl
rcrl
xchg
sbb
xor
cs
cmovns
mov
addr16
jb
mov
nop
stc
pcmpeqb
cld
and
sub
stos
ret
mov
cmp
pusha
out
cwtl
adc
sub
sbb
add
hlt
sub
arpl
js
mov
xchg
mov
jg
jo
pop
cmp
jge
push
add
icebp
hlt
fisubl
push
es
pop
ds
inc
adc
push
and
cmp
push
add
addb
and
inc
call
test
testb
xor
enter
popa
mov
or
in
or
cs
mov
les
inc
fimuls
dec
or
insb
jne
push
inc
int3
std
dec
pop
popa
xor
inc
movsb
cmp
enter
mov
mov
bound
push
js
sbb
pop
xlat
repnz
je
add
adc
sub
lcall
inc
mov
mov
mov
xchg
nop
sub
push
or
mov
cltd
add
out
xchg
repz
ja
mov
aad
mov
sub
call
dec
push
inc
cmpb
dec
xchg
arpl
pop
es
dec
mov
rorb
pushf
stos
imul
sbb
dec
ds
push
mov
les
sub
sbb
xchg
xchg
fmuls
push
es
jmp
ss
cs
xor
xchg
fdivrl
scas
push
fidivrs
pop
pop
add
push
je
rorb
and
in
sub
mov
out
test
rorl
jl
push
scas
lahf
mov
adc
mov
outsl
adc
mov
or
repnz
push
mov
ror
jno
or
leave
loop
dec
add
cld
mov
dec
cwtl
fsubr
jo
pop
fwait
pop
rol
into
dec
pop
adc
not
lock
pop
mov
dec
sbbb
and
out
test
out
out
lahf
inc
xchg
mov
sub
push
shll
inc
xor
xchg
repnz
cmc
xorl
xchg
jge
test
push
mov
dec
push
aaa
fcomps
js
outsl
mov
ss
sub
cmpsl
leave
cs
lds
cmc
or
adc
fs
dec
iret
or
jo
stos
fmuls
leave
dec
add
xor
mov
or
push
push
leave
fisubrl
sub
in
xchg
jmp
mov
jmp
js
outsl
mov
sub
lret
sets
shlb
ret
adc
fcoml
cli
inc
in
mov
push
std
dec
xor
aaa
subl
push
jecxz
and
fldenv
or
enter
inc
jbe
adc
rolb
push
mov
gs
popf
lret
mov
inc
mov
dec
push
cmp
sub
ljmp
inc
adc
push
cmp
jle
fistpl
test
call
or
stos
outsb
jbe
adc
add
scas
jno
xor
adc
out
fnstsw
ja
loop
jne
xor
hlt
mov
rcr
stos
and
je
mov
daa
cwtl
fstpl
xor
clc
or
icebp
inc
fidivl
cmpsl
cltd
mov
add
mov
js
fcoml
pop
movsb
cmp
push
int
jl
sub
addb
mov
cmp
mov
mov
inc
int
test
lock
movl
aam
jno
sbb
xchg
or
mov
les
fsubs
test
popf
into
push
dec
sub
mov
ja
pop
js
mov
dec
insl
mov
xor
inc
movsb
fnstsw
int3
mov
call
xchg
stos
ret
jnp
pop
pop
ret
pop
and
imul
push
or
cld
mov
xchg
xor
jge
add
in
mov
xor
insl
out
mov
mov
call
push
jmpw
or
scas
sbb
fsubl
and
mov
xchg
cltd
in
test
addr16
arpl
enter
test
and
push
cltd
mov
sub
cli
pop
or
enter
adc
bnd
mov
push
mov
or
mov
cld
xchg
rclb
lea
push
lcall
adc
dec
inc
insb
push
fwait
jmp
jp
mull
adc
xchg
icebp
inc
movsl
popa
lea
stos
xor
cmc
lea
cmpsl
xor
and
and
xchg
fstps
cmpsb
mov
cmp
pop
add
fdivl
pop
shlb
dec
or
sbb
mov
xchg
pop
xchg
cmp
pop
pop
lcall
xchg
inc
push
in
or
jmp
inc
outsl
jae
mov
sub
sub
bound
enter
push
fs
jae
sahf
andl
add
addr16
push
jmp
lcall
rorl
jmp
aad
lahf
in
imul
mov
cwtl
xchg
lods
sbb
adc
lds
mov
jg
dec
ret
imull
sahf
out
or
hlt
out
push
test
out
dec
pop
or
test
hlt
mov
sub
rol
push
cmp
aam
jl
mov
or
popf
repnz
icebp
das
out
mov
pop
adc
fsubp
xchg
sti
and
sbb
push
popf
adc
xchg
jnp
out
sahf
push
sbb
inc
mov
test
ss
xchg
je
cld
nop
fiadds
jbe,pt
mov
cmpsb
mov
push
inc
pop
xlat
pop
int
mov
mov
push
test
mov
mov
mov
jecxz
ljmp
and
test
mov
xchg
mul
rolb
adc
pop
outsl
popf
shll
cmpsl
insb
je
push
mov
sbb
dec
cld
add
jne
subl
les
fidivrl
jmp
jbe
xchg
cmpsl
test
std
imul
aas
repz
pop
xchg
lds
sarl
adc
cmc
ljmp
aad
mov
int3
and
repz
jae
out
mov
out
jl
cmp
and
shl
adc
out
scas
shlb
xchg
xor
jg
sub
aad
push
sarl
pusha
fucomip
and
jns
bound
inc
aas
mov
push
rcr
jg
pop
lahf
xchg
jno
sub
sbb
test
stc
push
daa
pop
sub
addr16
mov
inc
icebp
or
cmp
mov
and
mov
push
xchg
mov
outsb
popf
scas
jmp
xor
imul
fcmovb
mov
mov
pop
jecxz
adc
or
cltd
je
loope
sub
jnp
or
inc
jae
and
repz
pop
dec
rcl
leave
aad
into
mov
addr16
mov
xchg
jno
pushl
sub
cmp
cwtl
fsubs
sti
ja
ljmp
bound
dec
inc
sub
sbbb
hlt
dec
cmp
rcrb
sti
xor
in
push
xchg
sbb
pop
mov
and
aaa
aad
mov
xchg
fistpll
cmpsl
push
adc
add
cld
push
aas
xchg
jne
xchg
lds
shlb
add
adc
sbb
mov
mov
in
push
ficompl
pusha
cmc
dec
mov
pop
add
xor
aaa
fistl
pushf
jo
out
mov
movsl
adc
or
outsb
cwtl
cwtl
cmp
aas
mov
xchg
sahf
mov
inc
mov
mov
sub
mov
mov
shrl
inc
xor
xchg
push
lods
pop
and
into
sub
je
lret
add
pop
xor
add
adc
xor
lahf
xchg
pop
mov
test
sbb
popf
sbb
sub
mov
sbb
insl
repz
inc
fldl2t
xor
js
sbb
push
add
jno
push
pushf
pop
mov
dec
lahf
sbb
mov
aam
xorl
cmp
mov
lods
sub
andl
pusha
cmc
push
iret
or
int
clc
xor
cmc
outsb
lcall
imul
add
int3
adc
sub
mov
mov
idivl
cmpl
stc
testb
popf
sub
jl
mov
aam
mov
sub
mov
shlb
xor
ljmp
pop
pop
and
or
aam
int
add
fwait
pop
cs
inc
push
gs
push
std
fimuls
or
imul
mov
inc
xchg
adc
sub
add
mov
in
lea
jb
sbb
xchg
out
movsl
int3
shlb
out
pop
fistpll
cwtl
sbb
or
movsb
cmp
int3
xor
aam
stc
cld
arpl
mov
inc
cld
mov
data16
js
mov
loope
mov
int3
sarl
mov
or
lock
jp
gs
aas
xor
and
adc
xor
and
xchg
add
inc
js
lock
insb
ds
lret
movsl
mov
icebp
stos
popf
add
cli
cmp
mov
ficoms
cmp
jge
xor
cmp
lods
vshufpd
lret
and
mov
lods
stc
call
lcall
pop
je
lret
pop
das
cmp
iret
mov
in
push
add
lret
in
fidivrl
lods
int3
sub
aaa
inc
insl
mov
pop
arpl
sub
pop
lods
psrlq
insb
repnz
outsl
xor
xor
jno
pop
cltd
dec
jnp
iret
and
jbe
pop
xchg
mov
inc
dec
cmpsb
daa
out
sub
inc
out
mov
mov
jge
jp
inc
jl
add
std
jnp
cmp
cmpl
pop
mov
mov
sub
cmp
jg
add
jl
loopne
popf
xor
dec
mov
fsubrl
repz
out
fisubrl
mov
mov
scas
dec
fisubs
add
sub
shll
mov
xor
ret
addb
mov
lcall
pushf
cmpsb
jge
cmp
xor
mov
pop
stos
jl
paddsb
dec
push
xor
cmp
cmp
std
into
icebp
xor
and
push
and
imul
pop
xchg
sub
push
push
clc
jns
jmp
inc
mov
pop
mov
ret
jl
xchg
jne
lret
push
inc
mov
xor
dec
lock
fidivl
xor
gs
mov
jb
rcrl
pusha
push
xchg
mov
test
cmpsl
push
jmp
jp
or
or
rol
dec
add
into
bound
bound
shrd
iret
cli
aad
cwtl
and
add
push
pop
jns
aas
mov
sub
sbb
stc
mov
xor
or
cmp
jbe
xchg
repnz
popf
or
mov
push
loopne
out
cli
fidivrl
and
das
out
clc
push
pusha
xchg
pop
lea
subb
jnp
sub
sub
and
and
mov
push
in
lods
outsl
mov
icebp
int
mov
pop
inc
fcomi
dec
cwtl
fcmovbe
mov
push
testb
jp
aaa
daa
aam
push
dec
push
in
ficoms
stos
frstor
mov
fs
lea
js
aam
lret
loopne
push
xchg
mov
rorl
add
mov
inc
xchg
test
push
fwait
inc
inc
add
or
dec
xlat
jae
mov
int3
mov
fimull
ja
jae
mov
adc
fiaddl
not
jnp
lcall
xor
mov
std
aad
sbbb
push
pop
mov
cmp
ja
sti
sub
push
inc
push
pop
jge
or
outsb
pop
lds
pop
lock
enter
faddl
cmp
fldl
adc
ds
mov
jae
jns
aad
mov
shrl
dec
icebp
inc
jne
push
sub
sub
push
into
cltd
mov
mov
xlat
jo
and
aam
inc
push
and
sbb
adc
stos
loop
pop
push
fnsave
subb
xchg
ret
loope
test
xchg
cmp
jmp
mov
or
xchg
popa
jmp
push
mov
gs
das
inc
jmp
aas
mov
loope
pop
fwait
inc
xchg
ds
pop
add
inc
cwtl
mov
mov
pop
loope
shrd
shll
jbe
fisubs
dec
push
mov
clc
sahf
xor
lret
or
out
sub
jb
or
das
or
sbb
leave
jle
cmp
cli
dec
aas
mov
lea
mov
add
and
sbb
sbb
lods
int3
imul
loop
push
mov
and
loop
scas
dec
rolb
add
aas
stc
int3
movsb
mov
shll
outsl
sbb
and
in
adc
xor
imul
out
loop
mov
sub
out
int
sbb
jns
inc
movsb
int
daa
dec
jge
dec
jno
sarb
or
dec
adcb
imul
fiaddl
or
pop
jg
idivl
or
into
sub
lar
rolb
add
movsl
jecxz
out
out
cld
ret
push
mov
mov
cmp
adc
aam
addr16
pop
inc
stos
inc
in
dec
and
in
sbb
xchg
mov
mov
movsb
pop
orb
mov
xlat
cld
test
or
cld
rcr
iret
xchg
insb
adc
fstl
fcoml
push
mov
push
or
and
mov
add
or
xor
mov
ret
push
pop
fldenv
popa
push
jmp
iret
mov
jb
inc
xchg
push
mov
enter
iret
cmp
movb
insl
je
dec
icebp
xchg
lods
pop
jge
mov
mov
cmp
icebp
lcall
addl
pusha
inc
lods
and
aas
rcll
jl
push
fwait
jp
fnstsw
ficoml
and
add
add
mov
or
pop
adc
fidivrs
sbb
mov
in
jmp
jns
xchg
popa
js
and
add
jns
aad
int
or
popf
pop
cmp
inc
push
outsb
das
jno
push
sti
push
xchg
inc
lahf
cli
mov
sub
xorb
dec
rclb
rolb
hlt
jl
rorb
jecxz
mov
in
adc
mov
xor
jnp
mov
iret
test
mov
xlat
loope
add
mov
pop
bound
mov
push
mov
pop
mov
movsl
ret
sbb
and
stc
mov
mov
int
jl
push
sbb
sti
cmc
mov
jmp
sbb
and
dec
push
xchg
cmp
sahf
movsb
das
in
xor
cli
jns
in
pop
xchg
lret
xor
sub
arpl
pushf
ret
add
and
dec
sub
lret
cli
xor
addr16
fdivrs
xchg
mov
mov
mov
and
test
sbbb
sbb
incb
imul
sub
cld
add
cmpsl
dec
stos
push
dec
xor
in
jge
scas
iret
test
push
mov
mov
icebp
lock
mov
xor
mov
mov
bound
mov
insl
and
or
lock
push
repnz
pop
push
stos
xor
jmp
jne
out
mov
and
jno
ret
and
in
sbb
daa
push
lret
testl
arpl
adc
mov
fwait
fisttpl
jmp
outsb
jge
mov
inc
das
cltd
test
xchg
dec
and
in
cltd
fsubs
lcall
hlt
dec
jmp
cmp
mov
jo
rcr
dec
adc
hlt
loop
mov
pop
adc
jecxz
dec
mov
mov
and
mov
in
dec
add
clc
das
pop
lock
imul
add
sbb
push
iret
mov
cmp
bound
push
daa
jnp
data16
cmp
xchg
dec
mov
pop
ljmp
or
stos
dec
cmp
rolb
lds
mov
dec
repnz
cmc
cltd
push
adc
jae
or
xor
mov
push
roll
add
into
push
paddsb
in
ljmp
add
loopne
sbb
bound
outsb
pop
fiadds
int3
add
aas
ds
mov
mov
mov
push
ljmp
lret
xor
sbb
enter
daa
sub
cmpsl
dec
or
outsb
mov
cmp
xor
stc
mov
stos
mov
mov
lds
cmpsb
adc
mov
and
stos
fidivl
pop
mov
jge
cld
jo
cs
xchg
inc
dec
stos
in
gs
mov
pop
insb
incb
or
jo
mov
lahf
xchg
mov
jns
outsb
xchg
sbb
pop
dec
sub
dec
adc
test
outsb
call
aam
pop
repnz
mov
lret
mov
jb
sbb
fstpt
cmp
das
aam
mov
shrb
fcoms
imul
dec
jb
inc
into
dec
cmp
xchg
pop
pop
cmp
insb
popl
mov
gs
lea
and
sbbl
sbb
ljmp
cwtl
jp
adc
int
cmp
jns
push
js
hlt
and
movsl
add
cmpsb
int
pop
mov
pop
mov
aam
mov
orl
loop
das
das
cmp
in
ja
cmp
sub
xorl
dec
imull
scas
or
mov
adc
xchg
shr
dec
into
jb
bound
sub
or
ret
jmp
dec
inc
cmp
or
or
imul
sahf
dec
lods
add
mov
es
loop
fiaddl
cmp
xchg
lods
jp
xor
inc
xchg
fs
clc
fisttpl
sbbb
mov
sub
lret
cmp
sub
jl
push
cmpb
es
xchg
bound
inc
sub
std
add
xchg
out
adc
adc
jo
loopne
pop
pop
das
test
cmp
mov
mov
adc
std
cmp
dec
push
mov
push
ljmp
cmp
xchg
or
aam
ds
xor
cwtl
jmp
aam
call
xlat
inc
inc
sbb
ljmp
cltd
test
mov
add
cmpsl
jo
inc
mov
ds
add
pop
out
pop
pop
push
ror
mov
cmp
mov
rcll
add
pop
test
fs
adc
jmp
ja
out
sahf
sub
and
inc
jge
push
pushf
jle
inc
enter
icebp
xchg
push
or
sarl
inc
jle
popa
push
scas
loop
xor
push
pop
inc
adc
push
sbb
push
cwtl
sbb
sbb
out
stc
pop
and
stos
sub
test
mov
and
jle
out
fs
jbe
incb
jl
cmp
cwtl
and
fdiv
jne
repz
mov
ja
sti
and
cmc
mov
dec
jp
sbb
loope
pushf
adc
sub
fstps
jo
aas
add
mov
inc
dec
pop
mov
jge
inc
mov
insl
sbb
add
mov
stos
cmc
in
xchg
movsl
pop
add
and
aad
add
roll
add
rcll
jl
pop
lea
movsb
insb
cli
adc
add
mov
aam
out
mov
mov
mov
push
xchg
mov
sub
push
out
dec
imul
pop
pusha
fsub
dec
jne
adc
mov
adc
loopne
pop
loopne
lea
pushl
sbb
test
shrl
andl
mul
push
sub
fldl
jecxz
adc
xor
ret
cltd
inc
pop
dec
pop
jno
fs
les
push
imul
xchg
xlat
dec
inc
aad
inc
and
int
push
cwtl
sub
loopne
cli
inc
into
pop
in
cmc
jmp
shrb
les
imul
bound
jne
repnz
xor
dec
sbb
add
cli
push
lods
and
movsl
clc
jmp
inc
dec
sbb
jl
push
clc
fmull
cmp
xchg
outsb
pusha
lods
add
and
adcb
stos
lds
fsubs
adc
insl
lock
out
cld
cmc
subl
jmp
cmp
adc
inc
in
mov
jb
stc
jns
push
test
jle
fimuls
insb
adc
mov
sbb
mov
cli
sti
das
pop
xchg
xchg
cwtl
loope
aad
dec
mov
or
movsb
jb
lods
sub
aaa
push
mov
and
pop
aad
xor
or
mov
push
jmp
aam
adc
cld
mov
xchg
data16
add
pop
xlat
add
mov
aas
hlt
rcrl
loope
jno
jno
out
sbb
sti
lds
roll
sub
test
mov
pop
inc
es
pop
xchg
adc
cmpsb
test
xchg
cwtl
jl
mov
andl
and
mov
subb
xchg
cltd
jge
sbb
xchg
fs
or
mov
test
fmulp
mov
enter
mov
inc
pusha
dec
xchg
lods
push
fwait
ds
cmc
rcrb
pop
mov
jle
mov
and
in
addb
insl
cmp
scas
cmc
outsb
imul
loopne
inc
popf
int
lods
mov
xchg
adc
dec
or
ret
imul
dec
jnp
jbe
push
sahf
jp
repz
xchg
lea
adcl
and
rcll
mov
xchg
adc
xchg
mov
out
mov
fwait
adc
je
mov
and
cmp
add
xchg
sbb
push
push
and
mov
dec
repnz
fwait
cltd
inc
mov
sub
push
daa
xchg
rorl
pop
push
push
stos
test
cli
ds
push
fidivl
repnz
mov
fldenv
jnp
sbb
pop
ffree
or
add
adc
lcall
insl
sub
mov
adc
sbb
jno
je
mov
and
inc
insb
push
jns
rclb
sbb
jmp
idiv
dec
scas
push
mov
add
add
inc
cwtl
mov
pop
inc
aam
push
pusha
xor
sbb
dec
or
sub
mov
mov
in
outsl
xor
test
xchg
ds
mov
test
or
mov
push
or
lods
adc
loopne
movsl
or
scas
push
outsl
sbb
push
push
popa
adc
push
jge
rcrl
clc
sbb
in
orw
add
and
insl
push
roll
movsb
js
fldcw
pop
call
aad
outsb
hlt
bound
imul
mulb
add
jo
stos
enter
aam
xchg
jno
outsb
dec
add
and
push
cmp
push
aas
loope
lret
aad
dec
clc
testb
hlt
fisubrl
scas
loopne
adcl
aaa
int
in
xor
xchg
adc
lock
pop
aaa
push
in
enter
addr16
pop
lods
add
in
cmpsb
xor
push
push
push
pop
push
mov
mov
xor
push
lods
jbe,pt
push
stos
jecxz
enter
scas
mov
add
dec
lea
adc
cltd
push
sub
rolb
roll
movsb
dec
inc
in
ret
mov
rclb
dec
inc
xchg
stc
jge
cltd
and
pop
out
mov
addr16
fiaddl
add
jmp
jno
gs
sbb
dec
int
shll
aad
mov
xor
pushf
roll
testb
iret
insl
insb
aaa
add
fdivs
jp
es
mov
sbb
imul
and
jle
lods
xchg
mov
loope
fisttpl
mov
movb
dec
shr
daa
jb
sbb
imul
or
push
inc
bound
mov
push
or
fisttpl
outsb
clc
lods
lea
xor
jmp
addr16
xor
adcb
fs
xor
xor
in
and
popa
mov
aas
xchg
adc
clc
pop
imul
movb
mov
or
pop
or
insb
jo
lods
inc
sbb
push
push
js
sub
cmpl
adc
ret
mov
jne
and
into
test
xor
mov
mov
sti
jle
push
pop
and
push
scas
test
aas
xchg
orb
sub
je
orb
clc
inc
dec
pop
jns
out
cmp
xorb
sub
mov
mov
decl
lock
pop
ret
mov
add
leave
fwait
outsl
adc
sbb
ficoml
inc
mov
cli
rcrl
rcll
ds
leave
ljmp
idivb
test
stc
inc
xchg
pushf
mov
test
inc
cmp
or
lahf
fistl
lds
or
in
outsl
inc
pop
mov
cmp
xor
std
lea
mov
in
out
popf
lea
mov
cmpb
xchg
data16
loope
adc
cld
mov
mov
xchg
jge
test
xor
adcl
push
outsl
dec
scas
enter
inc
psubw
adc
gs
cs
fucompp
jl
ja
enter
xchg
and
push
pop
jg
aam
scas
push
aas
xor
loope
jno
mov
daa
mov
sti
pusha
xor
js
stos
cmp
lret
insb
pop
and
stc
jg
pop
popa
shll
inc
ja
fmuls
cwtl
je
lods
sub
push
ret
and
stos
mov
lret
xchg
ficoml
xor
push
ss
or
mov
fdiv
fmuls
mov
inc
xor
insb
push
sub
mov
add
mov
fisubrl
cmp
movsl
hlt
push
andb
fadd
ljmp
or
jmp
sbb
or
insb
dec
jge
push
xchg
out
sti
sti
xor
adc
and
insb
clc
pusha
fcoml
pop
push
in
dec
and
mov
pause
divl
mov
xlat
mov
test
jp
fisubl
xor
mov
in
outsb
push
das
mov
adc
lods
xchg
pusha
movsl
cmpsl
jecxz
push
push
and
mov
or
sub
test
in
das
pop
sub
sti
sbb
xchg
mov
rorb
rorl
or
ss
xorb
xor
mull
stos
daa
pop
jae
mov
mov
sbb
inc
sarb
mov
mov
mov
loope
or
pop
icebp
mov
insl
xchg
testb
lcall
js
inc
mov
shll
imul
sbb
xchg
cltd
pushf
insl
pop
or
dec
push
dec
xor
lcall
push
mov
mov
or
mov
mov
sbb
and
or
mov
mov
xchg
mov
mov
adc
scas
shll
lret
jnp
aaa
imul
sub
subl
dec
xchg
adc
add
call
or
xchg
rorb
in
loope
lcall
sub
pop
jecxz
hlt
sbb
inc
incl
pop
mov
or
rcrl
xor
and
adc
adcb
fidivl
sub
sbb
adc
push
push
mov
call
jne
pop
sub
gs
mov
mov
cld
insb
add
hlt
in
adc
mov
sub
and
or
dec
xchg
test
outsl
mov
sarl
sti
jo
mov
or
call
cmp
xchg
sub
cli
pop
inc
pushf
sub
jl
or
push
mov
mov
pushf
stos
xchg
jne
insb
insb
xor
mov
dec
int3
jp
shll
and
imul
cs
mov
lret
iret
fwait
and
xchg
mov
imul
cmp
inc
lods
lret
dec
mov
dec
jnp
cmp
in
repz
movsl
lret
lods
hlt
rcrl
aam
subb
loop
mov
add
mov
push
cmp
mov
imul
leave
mov
dec
lods
loope
lret
push
fwait
push
sbb
add
mov
pop
fistps
jp
cmp
test
push
es
stc
mov
int3
lds
pop
ljmp
hlt
sub
mov
out
jne
mov
fstp
push
jge
sub
aam
test
ret
adc
jbe
aad
fidivrl
adc
and
in
subl
call
adc
lret
push
jmp
sbb
int3
test
loopne
out
jmp
mov
xlat
cmp
jecxz
add
imulb
inc
flds
pcmpgtd
sub
mov
dec
add
daa
or
adc
sbb
mov
mov
mov
cmpsl
mov
adc
pop
in
aam
out
and
mov
fildl
cltd
mov
lret
mov
sbb
pop
mov
cmpsl
lds
pusha
lds
dec
cmpsb
popf
imul
dec
test
and
bound
inc
mov
mov
int
inc
fisttps
mov
fnstsw
test
fisttpl
mulb
add
aas
js
and
sbb
lods
in
push
arpl
sub
mov
and
ljmp
sbb
out
rclb
jae
or
or
inc
mov
out
inc
push
xlat
movsb
push
negl
pusha
cli
sti
fwait
in
pop
mov
or
add
xlat
lock
or
cmp
dec
addr16
mov
outsl
inc
cs
xor
lock
inc
incb
dec
mov
pusha
in
dec
call
popf
mov
jge
xchg
adc
cs
sbb
push
sub
test
int3
inc
sbb
cmp
leave
cmpsb
sbb
das
add
push
mov
enter
cli
jae
sub
dec
jge
jne
and
dec
xor
or
jmp
inc
js
aad
add
imul
jno
xchg
sbb
aas
test
fcom
or
outsl
inc
inc
testb
scas
mov
rclb
inc
push
cmc
outsb
mov
jmp
ljmp
orb
xor
popf
daa
test
ss
das
inc
xchg
jbe
out
xorl
xchg
enter
data16
inc
mov
sub
aaa
unpckhps
sub
inc
mov
inc
add
mov
stos
sub
xor
inc
arpl
and
or
mov
dec
movl
mov
cltd
je
mov
pop
jp
push
add
dec
pop
enter
and
xchg
xlat
add
xor
jns
pop
cmp
add
cmp
bound
movl
jg
mov
mov
jb
jbe
icebp
in
add
jge
shrl
mov
ljmp
mov
sub
bound
xchg
inc
pop
inc
aaa
add
movsl
cli
sti
push
out
leave
addl
notl
int3
sbb
imulb
das
mov
sbb
in
addl
push
sbb
pushw
xorb
pop
add
xchg
add
lds
test
ss
mov
add
pop
movsl
iret
lcall
fdiv
or
dec
inc
les
inc
jg
push
jbe
outsb
popf
push
and
mov
jge
lods
lcall
pop
sbb
gs
jne
inc
fisubs
jbe
jg
mov
outsl
scas
mov
mov
imul
test
pop
cmp
data16
in
mov
mov
adc
hlt
cmp
sti
mov
pusha
pop
aad
stos
jnp
lret
mov
xor
jb
add
dec
xchg
shlb
stos
test
sti
push
into
sti
push
cli
adc
shll
xor
aas
jnp
xchg
jb
jne
xor
ret
cs
mov
xchg
pop
sbb
aaa
inc
add
push
push
sarl
sub
cmc
jns
lret
imul
sub
fsubrp
std
jge
shr
adc
push
jmp
xor
cmp
mov
fsubr
xor
scas
push
ja
cmp
pop
jbe
or
shl
sbb
and
mov
out
and
int3
mov
fstpt
and
movsl
loopne
jmp
mov
cmp
data16
ja
sarl
mov
pop
stc
or
call
insl
pop
loop
fldt
adc
cmp
pop
and
xorl
xchg
push
jmp
mov
adc
sub
jne
stos
fsub
push
das
into
xchg
sahf
pop
mov
fisubrs
mov
pop
xor
daa
cmp
mov
inc
sub
hlt
mov
call
stos
sub
repnz
js
sti
mov
popf
stc
xor
bound
or
pop
inc
and
adc
mov
loop,pt
fadd
pop
ficompl
and
testl
lods
loopne
pushl
fcmovbe
out
xor
mov
cmpsb
mov
xor
push
xor
in
insl
push
insl
movsl
xchg
loop
add
mov
cmp
mov
or
inc
shrl
int
cmp
stos
movsb
xlat
mov
and
add
xor
or
ret
lods
das
test
test
sbb
push
adc
fcoml
pop
xchg
mov
sbb
mov
sbb
ja
sub
pop
std
sti
imul
lret
out
outsl
icebp
fistpl
or
pop
jb
adc
mov
or
out
jl
mov
pop
push
adc
pop
loopne
xor
mov
ja
sarl
mov
je
rcr
or
sbb
sbb
jmp
subb
pushf
popf
jbe
push
es
outsl
xchg
sbb
push
xor
test
pop
lcall
xchg
movsb
mov
cmp
outsl
cmp
arpl
loopne
lcall
jp
out
push
popf
std
lahf
sbb
popf
add
icebp
cli
pop
dec
sub
lds
sbb
sub
push
cmp
insb
and
fwait
sbb
ret
out
inc
daa
jp
je
mov
insl
jns
mov
lahf
push
adc
adc
scas
call
and
jae
xchg
aad
scas
xchg
inc
icebp
movsl
ss
lahf
movsl
xor
in
orb
lret
jecxz
std
inc
sub
imul
je
pop
fisubl
nop
sbbl
jbe
in
inc
mulb
mov
cmp
les
inc
and
imul
pop
push
pop
xor
mov
lods
loope
sahf
fwait
xchg
xor
lds
daa
inc
pop
stos
std
xchg
mov
jno
fidivrl
and
pop
repz
add
addr16
daa
inc
xchg
insb
dec
add
sar
jle
pop
decb
stc
and
mov
ds
imul
dec
adc
jb
rolb
xor
mov
cmp
sub
push
decl
negb
cmc
movsb
inc
xchg
xchg
scas
out
inc
mov
cmpsl
je
leave
push
add
jmp
stos
shl
notb
movsl
in
pop
loop
jmp
cmp
addr16
pop
mov
xchg
inc
andl
dec
mov
repz
out
pop
jl
lahf
pop
pushf
das
adc
loopne
jg
std
add
mov
inc
sbb
aaa
pusha
shll
dec
pop
pop
sti
inc
and
pushf
pop
inc
pop
je
cli
pop
add
pop
lds
std
mov
bound
inc
insb
mov
fistl
add
adc
mov
lret
dec
inc
aad
testl
jecxz
and
je
dec
stc
ja
jbe
xchg
or
jl
mov
mov
mov
pusha
and
popf
nop
ret
add
cmp
cltd
test
mov
xchg
jnp
mov
xchg
push
test
xor
mov
inc
aaa
scas
cmp
mov
push
stc
mov
inc
shl
xchg
sub
jae
stos
ror
push
sub
lret
mov
imul
aas
in
jmp
cwtl
mov
in
test
loop
sub
cwtl
jg
mov
xchg
setbe
enter
inc
and
lock
outsl
loope
repnz
adc
or
test
inc
sub
movsb
sbb
xchg
push
es
mov
lods
fsubp
and
dec
adcb
lret
ja
outsb
or
inc
push
cli
andb
repz
test
fwait
aam
dec
xchg
xor
rcl
icebp
aad
fs
and
sbb
add
mov
hlt
jmp
sub
das
xchg
and
mov
out
inc
in
mov
lcall
sbb
bnd
mov
sbb
cmpsl
rclb
cmp
stc
cmp
dec
jbe
addr16
cmp
fisttpl
push
mov
pop
xor
imul
lods
mov
push
imul
and
xorl
xchg
push
jge
out
xlat
loopne
fildl
cmp
xchg
mov
mov
cmc
pop
lahf
xchg
stos
mov
lods
sub
dec
fildl
and
int3
cmpsl
mov
cmp
cmp
cmc
pop
pop
iret
mov
xchg
mov
sbb
mulb
jnp
mov
mov
pushf
push
int3
loope
push
push
sub
sub
pop
aas
mov
and
sbb
and
ja
mov
pop
mov
mov
xlat
jae
popl
adc
adc
bound
mov
imull
jl
and
leave
push
push
mov
jge
or
and
or
outsb
xor
sub
cli
lods
sbb
and
pop
lock
jae
mov
push
sbb
leave
pusha
out
fwait
mov
cmp
mov
loop
xchg
orb
sub
push
andb
inc
cmp
or
or
ss
pop
or
outsb
push
imul
xchg
les
sub
lock
pop
test
sub
ljmp
jno
gs
ds
and
aaa
lahf
push
sub
and
push
and
popa
add
in
je
out
daa
or
jge
mov
arpl
cmp
addb
in
addr16
push
add
fdecstp
jmp
xchg
inc
js
stos
mov
mov
pop
xchg
jbe
jb
imul
shrb
mov
mov
cli
mov
mov
insl
push
ficoml
sbb
mov
jecxz
sub
xchg
js
inc
movsl
jmp
mov
inc
mov
clc
enter
imul
mov
rcrl
sub
movsb
lret
jnp
mov
pop
xchg
jno
ljmp
add
loop
int
mov
or
pop
push
sub
test
inc
sub
insl
sbb
or
mulb
daa
popa
mov
rorl
mov
lds
stc
dec
mov
int
dec
adc
adc
out
add
jmp
sub
decl
sub
pop
xor
dec
mov
pop
lahf
xchg
cmp
sarb
daa
rep
inc
outsl
cli
out
les
sub
xchg
loopne
jno
test
rorb
jecxz
scas
mov
out
sahf
jo
dec
test
cltd
dec
push
cwtl
mov
mov
ret
push
sub
xlat
lret
sub
xchg
fs
loop
cmp
or
es
mov
into
push
shrl
dec
push
mov
lret
xor
ja
data16
clc
ret
xchg
push
pop
jns
fistpl
call
clc
sbb
or
mov
xchg
push
jg
in
sub
cmp
rcll
cs
les
test
addb
arpl
sub
mov
xor
sbbb
inc
jmp
mov
imul
aaa
movsb
inc
sbb
push
out
lret
insb
fbstp
test
inc
mov
mov
mov
adcl
repnz
cmc
mov
icebp
aam
out
dec
lds
push
jb,pt
daa
pop
arpl
pause
pop
cmc
fiadds
ret
pop
mov
imul
cld
sbb
outsl
jae
adc
fildll
movsw
es
sbb
les
add
pop
jmp
xor
add
jl
cmp
std
fidivrl
aaa
push
testb
mov
inc
xor
bound
push
lret
or
test
shll
cs
xchg
jae
mov
gs
cmp
aaa
xchg
fldl
cltd
xlat
or
jecxz
push
pusha
ret
add
int3
stos
dec
repz
mov
and
inc
cmpl
dec
or
loop
and
cmpsl
mov
inc
mov
movsl
outsb
mov
xchg
add
pop
rcll
push
in
mov
je
les
push
pop
push
mov
push
fs
in
lock
int3
gs
iretw
mov
jmp
divb
xchg
cmpsb
lahf
stos
pop
fldt
dec
pop
lea
mov
pop
adc
jno
inc
push
loope
push
inc
push
inc
push
jb
sub
mov
jge
mov
fcompl
jp
std
insl
or
in
or
sbb
pushf
adcl
xchg
out
test
push
adc
pop
push
pop
jge
mov
test
int3
adc
fnstcw
imul
jo
scas
sbb
add
lods
push
inc
jge
popl
push
dec
cmp
decl
adc
dec
mov
push
adc
out
or
scas
cli
cmp
fmulp
jno
leave
aas
jo
add
and
clc
push
lods
jbe
push
inc
push
push
push
cmp
lock
cld
add
cmpsl
divl
adc
dec
mov
inc
mov
inc
ret
xchg
imul
loope
ret
jle
sub
pop
fsts
jp
mov
enter
mov
push
scas
or
and
pop
adc
cmc
roll
outsb
mov
mov
arpl
loopne
inc
imul
mov
icebp
xchg
xor
jg
or
jle
andb
lods
imul
add
pop
out
jmp
lahf
outsb
cmp
push
lods
xor
lods
into
add
rcrb
add
orl
inc
pusha
add
add
or
stos
dec
fwait
push
in
lock
out
xchg
pop
mov
addr16
stos
loop
lret
sub
lahf
dec
fstl
scas
cmp
mov
dec
les
in
rcrl
xor
stos
das
call
movsb
outsl
sbb
pop
add
sub
je
ds
push
mov
jns
repnz
cmc
push
jnp
mov
push
mov
movsb
xchg
loop
shl
dec
jmp
jne
mov
test
add
adc
pop
sahf
cmpsb
in
cld
negl
das
xlat
sbb
fwait
add
fistpl
jmp
out
lea
ja
les
sub
cltd
sbb
fistl
mov
cmpsb
lods
mov
cmp
mov
xor
xchg
sti
pop
xchg
bound
xor
jo
inc
movsl
and
mov
add
dec
jnp
jmp
lret
addb
jbe
mov
jo
or
fidivl
les
fst
in
adc
ljmp
movaps
push
add
out
lret
cwtl
shll
jbe
negb
cmp
adc
add
jl
adc
testl
iret
mov
xor
or
push
jge
cmp
sub
popa
fs
sbb
mov
out
jnp
lahf
sub
and
xchg
enter
cmc
inc
mov
ret
pop
mov
push
subl
scas
ret
out
loopne
mov
nop
loopne
lods
adc
or
xor
mov
add
mov
dec
sbb
mov
inc
jae
push
adc
jae
dec
jmp
outsl
fnstcw
outsb
jmp
cmp
lds
dec
in
xor
outsl
xlat
test
jbe
das
insb
loop
psrlq
data16
add
push
in
xchg
lods
jg
in
mov
loopne
push
test
sti
mov
jo
ja
shrl
sub
cmp
aam
sub
movsb
loopne
mov
mov
add
fisubrl
mov
test
xlat
movsb
cmpsl
jecxz
add
and
dec
stos
sarb
pop
xchg
and
iret
insl
add
mov
cli
mov
inc
jo
jne
cmp
mov
lea
test
movzwl
pop
push
or
xchg
inc
lret
jecxz
push
in
xor
lods
pusha
ja
in
mov
sub
cmpsb
push
mov
pop
xchg
xor
gs
loop
imul
jle
pop
push
cli
imul
mov
leave
push
dec
mov
xor
pushf
es
scas
pop
shlb
test
jne
mov
fildll
pushf
cld
fdiv
imul
adc
cmpl
push
int3
dec
inc
ret
lods
mov
scas
push
mov
insb
stc
mov
inc
mov
clc
shll
in
mov
daa
inc
in
pop
testb
mov
sub
cmp
add
ret
or
inc
push
das
xor
dec
cmp
loope
xlat
ds
cmp
orl
add
iret
mov
scas
sar
cmp
cmp
fs
sbb
mov
or
add
dec
pop
sub
dec
imul
xchg
pusha
repz
fsubrs
ljmp
push
xchg
mov
dec
jg
int
adc
and
loopne
aam
lret
les
ds
mov
push
jl
dec
movsl
mov
std
and
cld
push
mov
pop
sub
aaa
adc
mov
inc
push
enter
mul
pop
repnz
mov
hlt
jnp
adc
mov
xchg
xor
fdivrs
dec
pop
push
jbe
lds
sbb
sbb
mov
xor
mov
pop
xchg
in
cltd
mov
in
rolb
repz
inc
fisttpll
mov
mov
add
ret
aaa
in
push
xor
jecxz
cmpsb
stos
jae
hlt
es
cmp
cmp
xchg
mov
fistl
cwtl
ljmp
and
cmpsb
dec
and
in
pop
leave
sahf
push
rcrl
sub
mov
test
bound
ja
lret
rolb
push
shlb
cmp
or
mov
push
mov
movsb
fidivrl
ret
pop
sub
shll
ret
dec
fwait
push
inc
sbb
dec
out
cmp
outsl
xchg
cmpsl
push
sysenter
inc
mov
push
jbe
loope
mov
xchg
or
das
fisubrs
push
into
sbb
pop
add
les
mov
push
pop
loop
mov
ds
dec
ret
and
dec
add
fcoml
cld
call
mov
dec
test
sbb
lods
mov
gs
adc
sbb
fwait
xorl
inc
aam
fcmovu
mov
in
mov
cmp
je
sub
pop
popf
mov
jl
cmp
pop
roll
jno
test
pusha
sbb
insl
cmp
test
arpl
xchg
lret
fisubs
mov
dec
sti
mov
fwait
stos
mov
and
cmpsl
sti
sbb
in
xor
xchg
mov
push
lea
nop
pop
inc
pushf
jbe
cmpsb
imul
mov
pop
adcl
pop
pusha
lods
test
int3
xlat
ja
add
stos
popf
push
mov
out
xchg
lret
sub
fistpl
std
lods
push
push
stos
out
movsb
lcall
adc
dec
push
fdivrl
cmp
std
call
sub
jl
shl
push
pop
lahf
popa
sbb
mov
fldl
mov
imul
push
shrl
add
jg
test
stos
mov
xchg
mov
js
inc
lret
lret
sub
out
mov
in
xchg
mov
hlt
dec
pushf
out
inc
aad
push
fistl
pop
sub
cli
call
and
cmp
fstpt
in
mov
ss
fnsave
lock
sub
adc
stc
adc
pop
test
enter
or
sti
vmovhps
dec
aaa
xchg
out
das
inc
loop
or
mov
addr16
mov
xlat
push
pop
dec
mov
popa
xor
iret
adcb
push
push
jle
scas
cmp
rol
lods
bound
dec
cmp
mov
div
loop
addr16
in
aam
jmp
xor
jg
into
cwtl
les
sbb
les
test
xor
es
clc
mov
sahf
sub
lods
mov
orb
jb
and
std
and
addr16
or
mov
mov
push
mov
xor
rcl
or
inc
repz
mov
mov
xchg
cmc
and
push
pop
mov
popa
jg
shll
enter
sbb
jle
or
rcll
xchg
fcmovbe
movsl
jo
bound
mov
push
andl
in
test
inc
dec
and
out
jmp
movb
sbb
outsb
cld
xchg
mov
xlat
lret
jbe
pop
jno
and
arpl
adc
addr16
push
cmpsb
lds
scas
sahf
popa
and
icebp
test
and
or
xchg
in
pop
dec
in
cmp
and
jnp
test
enter
xlat
jge
es
add
test
xchg
stos
stos
dec
and
fcomp
jecxz
push
cli
fsubs
lods
push
std
sbb
ret
xor
outsl
ret
push
jge
or
fdivrs
mov
lret
popa
imul
mov
push
scas
mov
push
scas
add
mov
mov
sub
and
xchg
rcll
mov
movsb
dec
inc
pusha
loop
pop
in
fisubl
dec
jno
mov
mov
adc
jae
ret
push
cmp
mov
mov
gs
inc
pusha
sbb
mov
movsl
adc
adc
or
mov
adc
stos
xchg
imul
std
and
mov
mov
jmp
jns
jae
push
mov
push
or
imul
jmp
dec
daa
cmp
dec
rcrl
pop
dec
jb
and
xor
adc
mov
jno
mov
js
sbb
imul
jns
xor
and
fsubs
pop
sub
mov
pop
pop
loopne
nop
cmp
pop
movsl
stos
inc
pop
inc
cmpsb
pushf
mov
lcall
xor
enter
fisubrl
push
and
and
cli
aaa
cld
cld
or
mov
adc
fistl
mov
dec
sbb
mov
pop
shlb
mov
es
popf
inc
dec
cmp
enter
cmp
push
das
cli
out
and
dec
mov
pusha
leave
xchg
push
mov
xchg
cmpl
das
sti
push
mov
jmp
mov
jbe
out
pushf
outsb
data16
pop
subl
xchg
xchg
push
jnp
lods
imul
ficoms
movsb
mov
lods
mov
test
push
inc
xchg
into
in
int
cmp
dec
loop
push
int
or
xor
xchg
pusha
dec
pop
xchg
sbb
add
mov
add
sub
and
aas
and
jno
repz
add
insl
mov
lock
lods
in
add
lds
std
sbb
add
adc
stc
mov
pop
pop
cmp
add
jae
push
fsts
cmpsl
adc
hlt
push
aaa
inc
dec
or
in
dec
sbb
mov
ja
mov
cld
jmp
mov
jmp
clc
mov
cwtl
fidivrs
inc
lcall
push
and
loope
xor
stos
aam
movsb
icebp
push
mov
fcoms
cmp
cmp
in
ss
push
movsb
push
negl
cmpsl
push
clc
ret
or
xchg
es
cs
aaa
jno
mov
lahf
push
xchg
das
mov
pop
or
sbb
mov
lock
lahf
cmp
pop
xor
repnz
pop
dec
fs
and
out
adcb
or
dec
fcmovnb
or
mov
push
pop
fwait
inc
mov
cmp
sbb
push
inc
in
ss
bnd
cmp
stos
and
cmp
and
push
jnp
mov
std
outsl
push
repz
sti
lods
cmp
scas
xchg
and
and
push
movsl
inc
iret
mov
fsubl
bound
add
mov
dec
es
push
sbb
sub
push
add
enter
sbb
jo
in
or
inc
ret
cmp
mov
mov
jno
into
mov
lret
adc
pushf
adc
sub
pushf
aas
testl
inc
iret
fs
dec
mov
inc
rcll
dec
cmp
insb
mov
aas
cld
jne
out
jb
lock
pop
jmp
push
sahf
and
pushf
sbb
int
stos
sbb
je
movb
loope
movsb
lds
pushf
js
xchg
cmp
pop
or
mov
mov
or
pop
loope
jmp
xchg
out
lods
xchg
mov
into
jle
push
xor
pop
xor
test
adc
or
pusha
add
in
rolb
stos
out
ja
mov
xlat
fistps
xchg
xchg
or
jno
pop
mov
stos
rcl
pop
ss
xchg
out
les
insl
loop
mov
jae
and
and
lods
cmp
pop
sub
imul
xchg
insl
je
lods
pop
dec
lock
fildll
jl
out
insl
cwtl
xor
addr16
dec
xchg
and
xor
mov
ss
mov
movsl
adc
and
sub
rcrl
xchg
inc
push
neg
cmp
mov
scas
xchg
adc
mov
sub
cs
into
inc
lcall
push
push
jecxz
or
rcrl
pop
je
aam
int
int3
arpl
ja
cwtl
xchg
aas
in
idivb
repz
movsb
in
out
cmpsb
mov
mov
inc
jge
in
fildll
in
pop
loopne
xchg
movsb
mov
cmp
mov
repz
call
xchg
add
mov
mov
sti
xchg
icebp
dec
ja
mov
test
push
popf
lock
in
es
jg
testb
icebp
idivb
sti
fadds
hlt
add
addr16
fs
xchg
jg
test
inc
lods
icebp
ror
mov
jp
push
mov
sar
jns
add
pusha
repnz
jmp
jb
and
test
mov
clc
mov
sub
fimull
fndisi(8087
js
xchg
mov
sbb
sbb
cmpsl
pop
test
imul
ss
mov
lcall
pop
inc
cmp
rclb
dec
test
adcl
cltd
push
jns
orl
pushf
sbb
js
data16
fsub
test
and
addb
arpl
je
and
mov
shl
fwait
mov
sub
or
shll
addr16
jg
pop
sub
and
inc
in
or
cmp
push
test
fistpl
lods
mov
out
push
js
push
fisubrl
rclb
cld
cmp
xor
or
clc
cld
insl
mov
out
bound
in
popf
ss
sub
mov
and
dec
xchg
push
push
push
cmp
ret
outsl
xchg
stos
mov
pop
imul
add
add
mov
jns
adc
arpl
push
sub
push
add
cmp
push
mov
xor
das
and
mov
mov
jecxz
scas
sub
and
add
lret
into
or
mov
and
addr16
fisubs
jb
jo
mov
ja
cld
in
in
push
ljmp
inc
filds
ljmp
xchg
jno
sbb
jae
mov
mov
sbbb
cs
xchg
adc
es
or
sub
into
pop
ss
add
jle
and
xor
dec
xor
insl
sahf
outsb
add
stc
pop
xchg
gs
dec
xchg
dec
fidivrl
mov
pop
lds
and
in
sbb
fwait
pop
cmp
xorb
pushf
push
inc
punpcklwd
lods
fadds
jns
push
lea
dec
mov
inc
lea
cli
insl
divl
jmp
inc
and
sbb
push
cmp
loop
and
mov
in
add
sti
xchg
pop
lds
or
stos
cmp
shll
loop
mov
imul
xchg
in
ja
push
outsb
mov
xchg
add
inc
adc
mov
sahf
and
pop
fwait
mov
pop
mov
fcomps
fsub
js
and
insl
sub
or
push
inc
sbb
fstl
dec
xor
cld
sahf
shll
and
orl
sub
cmpsl
mov
outsb
cmp
pop
fnstcw
jmp
inc
cwtl
adc
mov
mov
or
data16
cwtl
es
test
mov
push
mov
ud1
mov
push
mov
mov
mov
lock
jmp
ss
arpl
inc
cltd
mov
jge
xchg
or
pusha
aas
lds
push
adc
insl
xchg
insb
repz
int
loope
shll
mov
imul
push
ret
inc
in
nop
ficompl
xchg
mov
pop
jg
cmpsl
loop
out
mov
test
jl
loop
xchg
lods
xor
cmp
sub
cmp
and
arpl
popf
stc
sub
flds
test
sub
fcomps
fs
xchg
xor
mov
sbb
adc
arpl
push
sbb
lock
sub
stos
mov
pusha
pop
push
dec
xor
das
adc
jl
fld
xchg
scas
or
jg
mov
mov
dec
sub
adc
addr16
call
ss
dec
sub
mov
loop
pop
mov
jmp
push
in
stc
dec
xor
js
cld
pop
filds
jge
and
out
cwtl
sbb
jp
ja
fisttpll
aaa
rcrl
leave
pop
mov
push
mov
sub
lea
les
pop
and
lds
push
pop
cmc
sub
jbe
lods
and
test
sub
test
loopne
je
sub
test
or
push
and
pop
jae
ja
es
jp
jb
test
and
loopne
daa
aas
pop
jl
and
add
jp
dec
jge
andb
jl
das
lret
das
dec
adc
inc
mov
fdivrs
out
bnd
aaa
mov
mov
fdivrs
in
sti
fwait
movsl
fwait
arpl
mov
sahf
sub
fnsave
pop
cld
jae
mov
and
out
lret
mov
dec
loop
into
mov
cmp
or
cmc
fiadds
test
in
pop
stos
sub
or
sub
imul
mov
leave
adc
mov
mov
out
and
lcall
mov
imul
jecxz
adc
sbb
xor
inc
xchg
std
sbb
pop
sub
push
test
jp
sub
in
mov
adc
movsl
push
cwtl
arpl
mov
mov
sub
jecxz
dec
or
add
jmp
lods
xchg
stos
fldenv
dec
lcall
arpl
fnstsw
loop
xor
call
ror
pop
mov
lahf
inc
cltd
xlat
add
in
xor
out
das
mov
aam
cmc
jge
push
push
insb
pop
in
inc
xor
lods
dec
call
pop
int3
ljmp
sbb
cli
hlt
mov
stos
int3
lock
cwtl
sbb
imull
out
fdivrs
sarl
aad
data16
adc
orb
popf
xchg
adc
sbb
pop
sub
sub
push
test
cmp
jl
xor
push
mov
push
mov
xchg
jae
addr16
cwtl
in
rcr
add
cmc
xchg
ficompl
fs
sbb
jp
mov
pop
xchg
xor
sbb
xchg
and
mov
push
scas
daa
add
and
push
addr16
inc
dec
rol
mov
int3
add
add
shl
jp
add
dec
inc
stos
mov
xchg
cmp
fnstenv
push
xlat
lods
adc
gs
pcmpgtd
sbb
mov
test
out
in
adc
pop
rcr
popf
sbb
jg
mov
popa
mov
ds
mov
lcall
int
sbb
jae
je
fcmovbe
cmpsl
shll
xchg
inc
popa
frstor
movsb
ja
cmp
or
loope
sbb
pushl
push
dec
dec
lcall
dec
pop
rolb
cmp
xchg
ss
mov
mov
scas
out
pop
or
jne
mov
or
pop
imul
fidivs
outsb
jo
pop
fidivrs
jg
xor
sub
int3
sti
inc
inc
cmp
adc
cli
dec
cwtl
or
cmp
adc
xor
ljmp
jg
decb
sub
mov
je
out
add
xor
jle
add
add
mov
repnz
push
jns
xchg
aad
add
mov
or
hlt
jl
dec
sub
sbb
and
xor
ljmp
cld
xchg
pop
sar
das
mov
cmp
add
sub
fidivrl
lahf
sbb
sbbb
cld
out
push
xchg
sarb
inc
das
ret
xor
test
inc
das
adcl
push
or
add
mov
scas
pop
jp
dec
push
fsubrl
icebp
push
mov
pop
inc
lahf
fbstp
rcrl
lahf
xlat
or
dec
xchg
jg
jnp
jne
cld
shl
mov
pop
mov
xor
and
imul
sub
iret
cmp
add
cmc
or
pop
rep
adc
aam
push
cmp
jp
into
aas
mov
in
cmc
and
pop
rcrb
ss
fisubrs
dec
cmp
jns
jmp
loop
mov
int
push
and
inc
ja
cmp
scas
mov
adc
lods
xor
xchg
mov
jbe
add
outsb
mov
add
je
js
cmpsb
jle
jae
decb
xlat
push
cmp
mov
loop
mov
push
push
popf
loopne
mov
aad
xor
iret
daa
mov
xchg
sbb
cmp
pop
pop
pop
adc
xchg
jns
or
sub
push
dec
mov
sbb
pushf
lock
movsl
int3
lahf
sbb
addr16
popf
jo
or
push
push
in
shlb
int
push
pop
xchg
imul
nop
pop
and
mov
and
insb
jmp
adc
add
test
dec
add
sub
or
adc
inc
inc
loope
push
cltd
sub
out
loope
aad
push
call
mov
cmc
cmp
push
ds
lahf
scas
push
and
add
sub
adc
mov
sub
sti
cmpsl
loop
cmpsl
in
push
test
dec
lret
jle
or
add
xchg
sbb
negb
subl
in
data16
cmp
sti
jns
or
mov
fs
loope
mov
inc
into
add
std
xchg
test
lret
sub
lds
hlt
dec
test
mov
mov
jmp
in
pop
mov
cwtl
into
mov
push
mov
out
sbb
imulb
add
mov
mov
sub
lret
dec
data16
adc
ffreep
hlt
push
inc
or
out
lea
lret
push
add
dec
mov
xchg
fisubl
pop
ja
in
push
rorb
stc
ds
push
icebp
mov
jmp
xchg
cmc
out
inc
filds
lea
test
pushf
inc
jns
fsubrl
inc
adc
sbb
test
mov
xor
pop
push
mov
loopne
cmp
sti
adc
mov
push
mov
dec
mov
mov
movsl
int3
and
aaa
lcall
stc
pop
xchg
cwtl
or
popf
mov
ljmp
ret
mov
push
int
mov
dec
dec
xor
pop
icebp
fcmovb
push
inc
mov
jmp
in
scas
pop
jmp
in
imul
cmp
and
movsb
cli
outsl
xor
adc
mov
out
cmp
sbb
and
sub
mov
xchg
fsubl
mov
xchg
out
lds
mov
clc
lahf
lcall
fs
sbb
iret
ds
subl
rcll
add
mov
in
mov
lcall
mov
xor
and
pop
minps
ss
out
and
cs
dec
insl
bound
mov
mov
popf
out
jecxz
hlt
nop
fnstenv
sbb
sti
or
and
fdiv
pop
jbe
push
lds
outsl
or
xor
notl
jne
jg
sbb
xlat
arpl
xchg
in
lcall
rol
mov
xchg
data16
or
ljmp
jmp
js
hlt
dec
shl
push
les
inc
dec
dec
and
cmp
movsl
cmc
nop
lock
sti
or
test
xor
inc
rol
jl
inc
sub
and
xor
repz
sbb
imulb
loopne
cltd
shll
add
add
pop
lea
cwtl
ret
inc
lods
cmp
fucompp
lods
dec
cmp
testb
xchg
loope
bound
jle
dec
dec
imul
stos
das
mov
push
adc
mov
mov
aam
pop
sti
arpl
in
inc
aam
lret
into
fbld
inc
loop
loop
lea
mov
push
mov
movsb
movsb
cmpsl
dec
rorb
iret
lcall
mov
or
lods
cmp
push
cmp
aas
adc
xchg
adc
xchg
imul
test
mov
cmp
xlat
arpl
jb
mov
cmc
fcoml
rclb
adc
sub
mov
inc
shrb
adc
out
sahf
dec
jg
xor
push
push
adc
or
sub
fs
jecxz
sub
insl
jb
je
push
loop
repnz
xchg
sbb
cmp
lcall
dec
add
sti
sub
pop
mov
cli
fdivr
push
push
test
push
or
mov
push
xchg
ret
shll
shl
lock
dec
icebp
jecxz
out
mov
imul
and
adc
leave
sub
mov
bound
pusha
repnz
pop
mov
add
sbb
addl
fdivs
in
jp
add
aam
fsubrl
jns
std
mov
pop
add
test
in
and
xor
in
mov
bnd
insl
lea
mov
push
xchg
pop
sub
aam
scas
push
adc
mov
or
xor
sbb
ret
jbe
push
xor
cmc
inc
cmp
or
in
xor
mov
imul
int3
nop
pop
jge
xor
sub
fistl
outsb
in
sub
push
roll
pop
insl
jmp
fisttpl
rcrl
pop
fdivs
push
mov
jl
sub
adc
fnstsw
pop
decb
cmp
and
mov
gs
enter
arpl
push
push
push
clc
and
push
cld
vminss
add
and
jmp
adc
pop
dec
inc
leave
xchg
aad
test
xor
aad
mov
clc
xor
jl
xchg
jl
lea
xor
outsl
xlat
mov
pusha
mov
lock
testb
shrb
jg
xor
call
pop
call
pop
push
addr16
mov
pop
repz
sbb
in
and
icebp
jae
orl
cmpsb
inc
jl
negb
mov
fstpl
sti
movsl
arpl
mov
mov
test
lret
xor
lods
ds
hlt
pushf
sub
ja
jo
lret
mov
jecxz
sbbb
in
mov
jl
and
xchg
or
lods
movsl
add
mov
xor
push
sub
xchg
aad
es
ret
and
in
pushf
sub
mov
das
push
and
inc
inc
call
stc
cltd
add
test
inc
cli
fdivrp
pop
in
lret
ret
mov
test
stc
aad
add
mov
fbld
inc
das
inc
fsubl
lods
mov
pop
outsb
xor
mov
inc
loope
rolb
mov
inc
cmp
inc
inc
mov
lcall
dec
test
testb
aaa
loope
cwtl
mov
scas
hlt
xor
iret
adc
fwait
xchg
imul
test
mov
pop
and
sahf
sub
xchg
adc
out
add
xchg
or
and
loope
xor
daa
inc
addb
or
inc
jnp
divb
mov
sub
hlt
movsl
xor
xor
repz
cmc
mov
adc
xchg
stos
lea
pop
mov
push
jmp
adc
out
cltd
inc
cltd
adc
add
pop
xor
sub
lods
jg
mov
mov
inc
aam
imul
dec
sbb
in
sahf
dec
lods
outsb
pop
adc
add
pop
fmull
xchg
sub
and
movlps
xor
or
lahf
icebp
fdivrl
sti
insb
test
imul
add
das
jg
push
mov
lds
mov
push
mov
and
arpl
cltd
imul
arpl
xor
sbb
jae
mov
xchg
cmp
inc
insl
xchg
mov
loope
cmp
mov
add
int3
pop
push
pop
adc
pushf
add
mov
cmpsl
xchg
cmpb
xchg
or
xor
fisttpl
adc
pop
and
inc
js
stos
sub
push
cmc
inc
ss
fsubr
fs
xlat
das
test
lds
mov
adc
mov
fs
jns
sbb
loop
mov
mov
or
repz
ffree
inc
adc
fs
push
dec
cmc
add
pusha
rcrb
xor
mov
into
ret
sub
xchg
data16
mov
fadds
jne,pt
js
ret
mov
push
roll
pop
scas
inc
cli
out
inc
fstpt
andl
repnz
sbb
aaa
inc
adc
mov
push
mov
ds
dec
mov
and
xchg
es
jne
mov
mov
dec
sbb
in
sub
dec
dec
out
xor
sbb
sub
fistl
cs
ss
aad
sti
sti
and
adc
movsl
lock
mov
mov
sub
mov
icebp
ja
ljmp
pusha
dec
push
cli
or
pop
add
mov
sbb
cli
das
insl
xchg
push
xor
push
adc
fs
mov
dec
sub
xchg
jo
push
ja
mov
cltd
push
fdiv
jno
xchg
sbb
xor
jmp
scas
xor
outsb
ret
mov
add
jno
cmp
mov
ljmp
lcall
mov
ljmp
pop
loopne
out
xchg
insb
pop
mov
out
pop
ss
clc
push
movsl
pop
stos
and
dec
scas
sbb
ds
mov
jae
sarb
pand
outsl
mov
into
rolb
adc
adc
ljmp
add
inc
ret
push
mov
shrb
pop
mov
mov
and
inc
mov
mov
test
dec
push
cmp
fs
add
push
jnp
test
lahf
push
stc
xchg
push
loope
xchg
push
cwtl
mov
out
inc
or
jne
ljmp
xor
cmp
sub
je
adc
js
jmp
jge
inc
rcr
iret
inc
and
mov
popa
imul
gs
cs
jge
jno
jnp
into
inc
and
xor
data16
jo
and
jg
jle
xchg
jl
iret
pop
dec
and
rorl
clc
pop
or
sub
aam
es
lods
jecxz
xchg
sahf
popf
lock
adc
pop
pop
inc
cpuid
fcoms
test
pop
mov
or
insb
loop
push
rorl
scas
jno
xchg
aad
push
movsl
aaa
mov
mov
cld
pop
popa
cmc
into
rcrl
mov
mov
popf
dec
jae
mov
out
mov
fidivrl
lea
cld
mov
mov
nop
dec
cmp
xor
in
cltd
sahf
sbb
sbb
frstor
inc
sbb
jmp
xchg
fildl
mov
inc
loopne
mov
addl
rolb
stc
xchg
sub
lcall
mov
in
in
in
sub
lods
mov
add
pop
nop
loopne
xchg
mov
mov
stos
mov
rolb
dec
xlat
dec
in
in
jle
aad
pop
outsb
jnp
jp
popf
repnz
out
or
sbb
adc
dec
mov
inc
leave
ljmp
mov
mov
orl
mul
mov
mov
fwait
pop
dec
mov
xchg
push
ljmp
push
xor
jecxz
jbe
cs
lock
or
ret
mov
insl
scas
arpl
in
fisubrs
xchg
mov
or
iret
pop
fsubrs
popf
cltd
movsl
and
popf
and
inc
mov
add
sbb
dec
pop
pop
lock
decl
sub
cmp
dec
aam
and
sahf
inc
les
pop
lcall
mov
sbb
sahf
add
decl
sbb
imul
enter
xchg
cli
or
pop
jne
dec
cs
adc
enter
push
adc
scas
mov
push
repnz
ss
subb
cwtl
gs
lret
jl
inc
loopne
mov
pop
mov
cwtl
movsl
data16
out
cmp
bound
out
icebp
cmp
jg
pushf
out
fucom
add
dec
add
loopne
mov
in
es
and
test
dec
sbb
and
sbb
fildl
xor
and
movsl
cmp
cmp
lds
jae
inc
mov
out
mov
push
jns
pop
aam
xchg
fildll
daa
stos
xchg
sub
imul
jbe
inc
les
and
adc
cmc
jne
or
xchg
and
test
repz
jmp
lret
daa
sub
mov
and
imul
mov
in
dec
inc
dec
jl
repz
inc
mov
push
loopne
fwait
xor
sub
pop
jmp
std
test
xchg
xchg
mov
rolb
mov
adc
lret
jp
roll
pushf
ja
enter
xlat
mov
hlt
out
fistl
mov
outsb
scas
cld
push
xchg
popf
sub
xchg
xor
xchg
dec
dec
pop
or
jmp
xchg
push
sbb
test
sahf
leave
nop
xchg
jbe
jmp
insl
sub
xor
mov
mov
push
and
xchg
sbb
mov
or
mov
xchg
inc
out
mov
inc
mov
add
mov
int
lock
repnz
inc
mov
push
ds
movsl
paddw
lret
int3
jno
xor
shrl
pop
rcrb
rorl
scas
push
cmp
inc
cld
ret
ds
adc
fwait
and
inc
cmp
test
testb
mov
and
mov
mov
nop
push
and
push
enter
idiv
lea
or
sbb
test
mov
enter
and
bt
les
in
enter
jne
mov
xor
pop
push
stc
mov
xchg
shll
push
jp
pop
jno
out
ret
shl
add
shl
jle
mov
std
sbb
pushf
mov
dec
scas
icebp
ficompl
dec
cmc
push
jns
pop
in
out
cmp
mov
hlt
andl
pop
xchg
js
inc
inc
jge
jge
arpl
pop
mov
gs
cmp
dec
cld
iret
jecxz
aaa
out
cld
out
add
cmc
and
jp
hlt
mov
mov
dec
test
sbb
js
sti
clc
in
pusha
ret
cmp
divb
add
adc
jl
inc
inc
lret
aam
out
stos
loop
or
aas
fsts
mov
cltd
in
ret
lcall
xor
cli
arpl
mov
mov
mov
enter
cmp
mov
push
hlt
daa
ljmp
mov
xor
ret
out
xor
push
into
sub
ficompl
fstl
dec
nop
rolb
lret
lods
mov
fldt
cmp
pop
sbb
pop
dec
arpl
fists
fdivrl
ljmp
push
stc
out
jnp
fsts
ss
xchg
inc
movsb
add
mov
aaa
sbb
clc
pop
int
pop
stos
jp
loop
arpl
fwait
enter
movsl
and
inc
jb
incl
inc
addl
push
inc
andl
pop
push
add
in
lret
popa
xchg
add
jl
or
inc
sub
mov
insb
scas
imul
aaa
xchg
adc
mov
inc
push
push
xchg
out
mov
cmp
or
cld
pop
fnstsw
lea
out
outsl
fisttps
xchg
add
cs
inc
ret
pop
adc
jl
sbb
sbb
or
xchg
in
mov
int
ss
pushf
es
mov
add
cmpsb
mov
daa
pop
fdivrl
mov
out
lret
pop
mov
sbbl
test
push
mov
stc
add
sti
cmp
lahf
sti
add
inc
fsubrp
mov
in
pusha
fildl
addb
inc
and
ret
push
aas
fisubrl
inc
mov
xor
push
sbb
inc
dec
xor
leave
cmp
repnz
shll
xlat
or
push
gs
sub
pop
icebp
in
test
cmp
dec
cmp
or
decl
ds
jecxz
orl
addr16
inc
lcall
mov
push
rorw
inc
mov
stos
mov
fidivrl
gs
jno
inc
mov
movsl
xchg
jmp
xchg
rolb
jo
sub
sbb
fisubs
mov
dec
dec
lea
or
sub
lods
in
fidivrs
sbb
mov
insb
imul
push
les
cmp
push
mov
roll
pusha
aad
push
xchg
mov
jne
xchg
mov
push
out
cmp
jno
les
sub
mov
out
add
lods
push
fists
pop
xor
xchg
mov
aas
push
dec
aaa
xchg
inc
loopne
mov
arpl
mov
jecxz
ret
inc
and
cmp
jo
dec
jg
cld
lock
stc
call
push
dec
ja
daa
adc
pop
rol
movsb
sbb
cs
out
add
or
iret
xor
jno
push
notb
add
cmp
pop
ja
mov
insl
xor
pop
mov
popf
jg
xor
jl
sbb
fwait
dec
pusha
push
adc
xchg
scas
xchg
iret
push
pop
pop
adc
clc
mov
inc
sub
mov
xor
fistl
loop
lods
imul
push
pop
popl
addb
or
pushl
movsl
lea
add
add
or
mov
bound
jg
mov
rolb
and
lcall
ja
rcrl
lahf
or
inc
mov
mov
stos
pushf
xor
and
inc
loope
jbe
rcrl
out
nop
leave
in
push
stc
sahf
loopne
hlt
add
push
mov
repz
lret
inc
mov
movsl
adc
lea
or
pusha
roll
lea
lds
adc
dec
mov
push
outsb
ja
adc
ds
mov
lahf
lods
bound
iret
fs
pop
cmp
insb
in
ja,pn
push
push
leave
mov
or
mov
ja
ret
push
cmp
imul
fwait
add
pop
pop
outsb
xor
jge
testb
aaa
aaa
mov
outsl
and
addr16
sub
idivl
or
dec
addr16
mov
pop
jmp
push
and
mov
imul
int3
pop
jl
sub
lods
mov
sub
lret
loope
pop
xchg
push
or
and
mov
jne
add
xor
lock
fidivl
sub
pop
mov
add
mov
or
xchg
enter
out
shlb
int3
xchg
fwait
xchg
xchg
xlat
xor
stos
aad
pop
sub
push
adc
or
lods
add
cmp
and
mov
rorl
call
mov
daa
push
push
repnz
aam
sbb
rep
in
test
insb
add
sub
js
and
stos
adc
imul
mov
push
movsl
xor
pusha
inc
cwtl
cmc
dec
sub
lcall
mov
mov
sub
sub
out
mov
fstl
shrb
xchg
cmp
cmpl
popa
in
mov
stos
fs
das
and
xchg
push
pop
adc
in
daa
inc
popf
xchg
divl
daa
sub
adc
dec
mov
sub
aad
jle
div
inc
sbb
fdivr
imul
aaa
jl
mov
mov
jmp
inc
mov
pop
fidivrl
xchg
rcrb
sub
gs
jb
mov
in
or
dec
inc
sahf
inc
mov
adc
sbb
adc
dec
arpl
add
sub
icebp
xchg
mov
stc
fwait
adc
mov
insl
xor
pop
fists
push
ds
jne
jo
enter
jbe
nop
lock
jno
loop
hlt
adc
repnz
jbe
sub
rep
push
lods
cltd
or
filds
inc
popf
pop
daa
adcb
jne
scas
addl
imul
xchg
test
mov
push
dec
aad
push
dec
xor
jnp
pop
sbb
incb
iret
inc
test
jle
inc
fsub
and
inc
and
push
pop
inc
out
pusha
adc
or
in
leave
movsb
mov
in
or
jecxz
mov
es
int
ds
xor
pusha
sti
mov
xor
and
push
arpl
sbb
mov
lds
insl
or
lret
scas
lds
scas
sbb
data16
fwait
jnp
adc
mov
out
cmp
or
hlt
into
hlt
lds
sbb
rorl
sbb
std
imul
sub
xchg
and
rcrb
scas
inc
jnp
pop
inc
xor
fsubrs
imul
lods
xor
sti
test
mov
pop
jns
lret
cltd
in
stc
rcrb
sbb
xor
fsubl
loop
pop
clc
int
stc
rcll
mov
mov
addb
jle
jo
scas
xchg
and
lock
jo
loop
enter
or
cmp
inc
pop
and
imul
xadd
pop
adc
mov
xor
sti
cmp
inc
add
adcl
inc
push
mov
pop
adc
sbb
std
sub
xchg
add
flds
mov
mov
pop
in
sbb
dec
mov
xor
mov
fwait
pop
rorb
jg
fdiv
sub
aas
scas
cmp
pop
mov
or
mov
inc
xor
push
rcrb
icebp
push
ljmp
in
mov
adc
adc
aas
sbb
xlat
cli
xchg
and
jnp
test
xor
mulb
jne
jp
mov
in
daa
sub
add
fucomip
sbb
rorb
xchg
mov
dec
decl
loopne
jp
hlt
decl
xchg
loop
loope
add
decb
and
std
inc
jne
addps
mov
mov
xchg
dec
jecxz
gs
call
xor
or
dec
inc
das
push
imul
dec
in
fisttpl
test
lds
fldl
or
mov
pop
ljmp
push
push
or
leave
mov
push
jg
push
xchg
roll
and
out
mov
jno
xchg
call
ss
cli
add
test
je
dec
cs
mov
ret
fdivrl
shlb
or
and
jns
out
jg
xchg
xor
xchg
in
mov
sub
jge
add
add
rorb
dec
stos
jg
sub
shlb
xlat
pop
jmp
iret
mov
stos
test
pushf
adc
and
outsb
push
xlat
lahf
inc
idivl
dec
negb
incl
bound
mov
dec
and
leave
pusha
sbb
int3
insb
or
mov
sbb
dec
sub
insl
mov
cmp
mov
cmp
sub
outsl
sub
pop
jbe
push
jp
mov
pop
fadds
push
test
mov
or
in
push
fisubrs
dec
fs
add
and
in
cwtl
xor
push
loope
mov
mov
aad
push
imul
mov
sub
pop
xchg
jns
lea
repz
sub
jne
mov
xchg
mov
add
stos
add
mov
dec
jne
mov
mov
popa
pop
test
stos
test
inc
ror
cmp
pop
jle
mov
jo
cmp
lahf
sub
add
mov
xor
sbb
sbb
dec
and
andb
rcr
cmp
sub
data16
push
cmp
jmp
test
dec
mov
ljmp
mov
cmp
movsl
or
orl
mov
mov
scas
sub
mov
push
push
int3
popf
dec
jmp
insl
lahf
cmp
dec
sar
push
mov
mov
pop
cmc
hlt
insb
cmp
and
push
mov
pop
insb
or
cmc
sub
xchg
dec
mov
outsb
adc
std
pop
jge
jp
mov
mov
psubsb
ja
lahf
or
xchg
sti
mov
mov
test
push
mov
mov
pop
nop
jle
fwait
xor
jle
dec
dec
adc
pop
sub
pop
fdivrl
xor
add
add
insl
dec
incb
insb
inc
add
pop
push
sub
enter
mov
mov
add
or
dec
add
in
mov
sbb
rcr
call
lahf
pop
inc
clc
into
stos
fidivrs
mov
out
sbb
mov
and
js
inc
ret
push
cmpl
bound
test
mov
jne
inc
push
lock
mov
sub
jbe
or
sub
xchg
add
add
out
cwtl
sub
sbb
rorb
movsl
pop
ret
adc
mov
pop
xchg
fldt
xchg
sti
lret
fistpll
shl
test
add
push
je
dec
dec
xlat
lcall
jg
scas
mov
test
inc
lcall
pop
cmp
test
sbb
into
sub
bound
push
rol
and
sub
add
or
mov
test
fstl
bound
sbb
jp
lret
clc
fiadds
and
inc
inc
hlt
pop
out
repnz
jge
add
pusha
popf
jecxz
shlb
xlat
mov
xlat
leave
push
lret
stos
pushf
adc
ret
and
push
xchg
imull
jae
out
xchg
mov
xchg
fucomip
adc
xchg
mov
movsl
repnz
dec
xor
or
pushf
push
inc
or
fiadds
loop
ja
or
ffreep
fdivl
mov
int3
mov
dec
add
shlb
jae
pop
jp
ljmp
into
test
or
cmp
movsb
or
aas
jmp
cmpb
lods
jnp
int
gs
in
dec
test
movsb
add
pushf
inc
lret
imul
sti
pop
mov
cmpsl
outsb
adc
je
in
nop
fimuls
shll
push
imul
add
cmp
ja
cwtl
mov
std
mov
in
add
bound
aas
push
pusha
adcl
mov
dec
mov
pop
xchg
xor
outsb
es
sub
mov
adc
ret
mov
adc
mov
pop
cltd
js
pop
adc
mov
enter
cmpb
lcall
dec
test
jo
shll
xchg
dec
mov
fcompl
adc
add
movsb
lea
out
out
ljmp
inc
and
into
lods
frstor
lret
loope
mov
fisttpll
pop
scas
addr16
jp
hlt
jmp
stos
push
insl
jecxz
xor
mov
dec
xor
jae
repnz
sub
and
push
int3
add
dec
sbb
xchg
loop
cmp
inc
outsb
clc
mov
arpl
mov
mov
clc
mov
dec
aas
movnti
add
mov
out
cmpsl
das
std
pop
cmp
repz
in
push
jge
or
mov
fxch
mov
ret
push
cmp
jbe
adc
jns
icebp
cltd
fcomip
push
stc
hlt
inc
popl
jmp
daa
pop
outsl
sub
cmpsl
adc
jbe
jmp
loopne
cmp
lods
jno
icebp
mov
dec
mov
movnti
xlat
pop
pop
mov
sbb
icebp
call
push
pushf
mov
pop
xchg
push
or
push
fwait
adc
xor
pop
mov
mov
cmp
lcall
mov
mov
cwtl
mov
loopne
and
jecxz
mov
cmpsb
fldl2e
rolb
mov
rcr
xchg
test
les
cli
js
cmp
fcompl
and
cmp
das
add
cmp
dec
pop
pop
mov
loope
lock
xchg
add
sbbb
and
push
push
mov
insl
cwtl
cmp
fwait
das
dec
sarl
repnz
cmpsb
mov
cmp
push
fcomp
loope
data16
mov
aaa
shll
push
mov
mov
fistpll
pushf
cmp
mov
mov
cld
mov
in
push
push
int3
nop
push
loopne
jo
les
inc
cmp
lods
add
mov
ret
fcoms
cmp
and
lret
es
in
mov
cld
cltd
stc
out
push
inc
and
data16
adc
mov
sbb
icebp
enter
stos
ljmp
inc
aaa
lahf
mov
and
test
insb
xchg
push
or
pop
fwait
adc
out
push
dec
loope
mov
add
adc
add
out
test
in
incb
clc
push
mov
call
les
mov
inc
mov
jbe
push
out
and
xchg
lods
scas
int3
sub
inc
in
scas
arpl
les
sbb
jae
sahf
pop
bound
gs
test
xchg
imul
test
pop
icebp
mov
lods
xchg
or
clc
bound
add
rcrl
sarl
mov
aas
sbb
push
push
loope
addr16
mov
sbb
out
daa
pop
jle
or
cli
aad
cmp
jae
testb
loopne
mov
and
and
sbb
add
fldl
icebp
lock
in
popf
lret
repz
push
fnstcw
pop
test
sbb
notl
popf
gs
dec
mov
add
dec
addr16
add
fwait
popf
xchg
aas
xchg
test
pushf
inc
jbe
or
shll
pop
clc
std
dec
sbb
in
bound
sub
pusha
mov
sbb
add
add
movsl
out
cmpsb
jg
sbb
call
xor
or
movsl
dec
pop
and
jb
imul
push
mov
xor
jae
xor
fidivrl
adc
jmp
mov
add
jns
mov
and
scas
js
leave
out
ret
jecxz
push
lret
dec
jae
repz
into
lods
add
mov
aam
rol
dec
or
sub
pop
pop
std
push
clc
ret
cli
repnz
mov
in
imul
subl
es
sub
faddp
inc
stos
aas
pop
adc
xchg
pop
nop
lret
mov
xchg
das
sbb
fs
xchg
mov
imul
enter
fldt
out
pop
ja
data16
cmp
mov
loope
lret
rep
adc
adc
cmp
int3
into
push
inc
mov
inc
call
in
dec
push
push
push
aad
jg
and
loope
insb
in
into
out
out
jl
pop
mov
or
sarb
negl
lcall
push
xchg
ret
jbe
frstor
bound
fisubl
dec
mov
in
bound
es
add
jae
fildll
ss
inc
pop
rorl
inc
jne
rorl
mov
adc
jmp
fidivrl
and
cli
mov
aad
xchg
jp
pop
loopne
and
sub
cli
dec
jb
sbb
dec
pushf
mov
test
jnp
mov
pop
mov
gs
fcoml
mov
or
data16
dec
aaa
dec
mov
cmc
adcb
xchg
cmp
push
mov
es
stos
out
shlb
sub
mov
cltd
xor
test
dec
addl
pop
xorl
aaa
stc
cmpsb
loopne
cmpsl
fs
rep
xor
fadd
lea
or
inc
adc
inc
sub
enter
gs
orb
pop
lret
add
sub
rcrl
hlt
sub
out
dec
nop
lods
insl
fbld
lock
xor
cmpsb
pop
inc
jnp
adc
adc
mov
jne
push
in
pop
gs
mov
in
rclb
pop
cwtl
sbb
mov
les
into
add
stc
popa
in
and
and
data16
sbb
arpl
sub
pop
and
xchg
mov
in
cmc
hlt
jmp
aaa
mov
xor
mov
mov
subb
pop
and
lea
jno
inc
aas
xchg
inc
rorl
xchg
sbb
push
or
nop
stos
cltd
hlt
xchg
xor
push
push
pop
mov
lret
push
jmp
pop
les
push
pop
popf
cmp
xchg
loope
sub
jmp
bound
push
xor
ret
ret
mov
inc
rclb
imul
rclb
sub
sub
adc
ror
sti
mov
fwait
testl
pop
enter
insb
cmp
dec
mov
into
movsl
bound
mov
fisttps
sti
pushf
lods
mov
mov
cmp
or
shl
sbb
test
add
pop
fidivs
add
fcoms
mulb
arpl
cmc
icebp
out
dec
xchg
pop
dec
sbb
mov
pop
stc
jl
aad
or
push
les
add
es
pop
rolb
and
aas
mov
push
int3
imul
in
mov
jl
inc
repz
dec
outsb
jle
jmp
aas
insl
xchg
jg
sub
movsb
xrelease
int3
adc
jle
dec
sub
stos
leave
test
das
frstor
out
and
sub
mov
sti
stos
enter
xchg
rcr
popf
lret
cwtl
shl
aam
xchg
mov
xchg
sar
stos
movsl
cld
lret
jae
testb
stc
daa
pop
rorl
mov
mov
fstl
adcl
mov
or
pop
imulb
pop
in
test
mov
pop
outsl
fisttpl
adc
jecxz
sarl
std
enter
pop
and
jb
inc
int
and
stc
inc
mov
dec
outsl
into
push
add
insl
xor
les
loope
repz
pop
push
rcrb
jns
sar
inc
cmc
lock
sub
cmp
or
fcmovne
stos
aad
inc
mov
push
call
fisttps
cltd
lret
aad
cld
sar
inc
loop
lods
ja
jl
and
push
dec
mov
xlat
movntps
mov
mov
ds
repz
out
out
pusha
outsb
loop
xor
iret
std
idiv
inc
xchg
add
aas
push
xor
mov
or
popa
outsl
jno
jne
sbb
js
mov
lret
push
int3
or
ret
cmp
pusha
lods
push
test
fs
leave
xchg
mov
outsb
xchg
add
jecxz
bound
inc
mov
pop
xchg
or
mov
jmp
int
enter
and
add
and
xchg
ds
adc
jns
xchg
outsl
call
shlb
inc
adc
mov
vpunpckhbw
cltd
aam
hlt
fnstsw
mov
imul
sar
cmp
jae
xchg
insb
ja
adcb
inc
out
icebp
jp
push
aas
jne
les
jae
push
mov
fmuls
out
mov
clc
xor
jo
mov
xchg
in
in
pop
mov
movl
addr16
or
mov
in
and
aaa
aam
lods
push
or
mov
sub
out
push
shl
adc
scas
popa
add
xchg
sbb
fadds
inc
jns
adc
aad
mov
jl
sbb
or
mov
xchg
inc
mov
shl
call
mov
cld
mov
inc
xchg
dec
sbb
jo
xor
xchg
pop
push
and
and
clc
ss
jl
ljmp
add
cmp
insb
add
push
out
cmp
and
cld
inc
repnz
xor
cmp
scas
add
inc
repnz
push
movsb
insl
clc
add
popa
sbb
mov
cmp
and
jle
cmpsb
lret
mov
mov
dec
xor
ja
sub
stos
add
dec
xchg
lcall
sub
dec
arpl
lods
dec
pop
xchg
dec
push
ret
arpl
jmp
mov
icebp
les
in
sub
call
pusha
mov
inc
push
mov
xchg
sub
aaa
xchg
int3
cld
mov
scas
xor
xchg
scas
lea
movl
add
xchg
ficompl
xor
lds
xor
in
xchg
dec
jmp
mov
lods
sbb
or
cld
out
xor
xchg
pop
push
pop
xchg
mov
inc
jns
pop
fisubs
push
cli
dec
popa
mov
insb
jp
inc
pop
out
scas
jp
xor
xchg
dec
pop
mov
ret
push
sti
push
sahf
jmp
lahf
dec
sub
sbb
cmp
sbb
mov
sub
into
xorl
dec
jp
sti
ret
lret
push
pmulhw
pop
inc
inc
gs
aam
divl
xchg
cli
pop
mov
or
es
mov
imul
cwtl
cmpb
push
sbb
clc
imul
inc
ss
or
adc
stos
sbb
adc
fnstcw
xor
insb
arpl
push
call
sub
mov
dec
xlat
jne
and
mov
je
cmp
sti
int3
insb
test
jmp
data16
arpl
sbbb
sub
mov
es
jne
rol
out
mov
pop
inc
mov
scas
out
mov
jnp
scas
jbe
testb
subl
fucomp
imul
popa
mov
outsb
cmp
inc
fcmovnb
pop
loope
pop
pop
pop
lds
imul
out
subl
add
outsb
sahf
scas
repz
mov
mov
pushw
lods
mov
push
ds
ja
pop
lds
frstor
push
fsubs
es
pop
mov
movups
push
nop
out
shlb
movsb
fucomi
mov
mov
jg
sbb
inc
adc
andl
dec
xlat
lret
repz
push
xorb
loop
mov
outsl
inc
hlt
inc
sbb
bound
test
je
hlt
mov
mov
rorb
mov
sar
jmp
mov
sbb
adc
enter
xor
push
sub
rorl
mov
lds
aam
jg
adc
enter
or
push
sti
divl
inc
xor
jge
orl
sbb
xor
dec
xchg
sbb
mov
push
pop
pop
and
push
jmp
into
insb
xchg
test
test
dec
jae
or
cmp
mov
xchg
mov
cwtl
std
push
leave
popa
push
in
outsb
dec
or
lcall
xor
es
nop
xor
mov
outsb
inc
mov
je
push
into
jge
aas
jns
out
fs
loopne
mov
lods
insb
cltd
add
or
lcall
inc
cmp
fs
inc
test
adc
fists
outsb
push
sub
repz
mov
jg
in
cmp
std
mov
aam
add
inc
or
mov
or
std
insl
in
cli
imul
or
pop
xor
test
sbb
pop
ja
lret
pop
jge
fs
add
mov
xchg
pushf
jl
out
int3
idivl
sahf
or
xor
adc
jle
xlat
shll
mov
data16
insb
and
push
fdivl
add
cmpsl
pop
rol
jne
leave
cli
cmpsb
jne
ja
ret
cmpsl
push
cmp
dec
sbb
mov
fcmovb
out
cmp
ds
ss
pop
dec
mov
ss
push
into
ret
rorb
leave
jnp
hlt
call
cmp
fidivl
js
cwtl
push
mov
inc
dec
mov
mov
daa
mov
push
adc
hlt
mov
dec
scas
mov
cmpsb
sub
cmp
dec
xor
sub
pop
out
pop
aaa
xchg
add
js
and
mov
test
xchg
mov
rcrb
inc
mov
mov
hlt
jl
imul
mov
xor
and
mov
mov
in
loop
mov
mov
xor
je
popa
call
cwtl
insb
sub
aad
inc
out
mov
mov
xchg
cmp
cmp
dec
jnp
xchg
icebp
dec
insb
stc
addr16
gs
or
divb
cmp
inc
gs
pop
dec
fmuls
push
xchg
rclb
movsl
xchg
add
push
pop
mov
mov
dec
mov
popf
and
sti
mov
lds
xor
lcall
scas
adc
sahf
mov
ss
scas
mov
in
adcl
cmp
mov
mov
test
cli
push
mov
cmp
cmpsl
pop
inc
push
leave
adc
cmp
xorl
sbb
negb
fmuls
inc
rorb
push
insb
xchg
pushf
lcall
sbb
mov
mov
push
inc
mov
out
mov
flds
adc
adc
mov
xor
sbb
sbb
mov
xlat
es
sbb
test
loope
pop
das
adc
inc
mov
pop
inc
ljmp
adc
and
in
inc
mov
ds
into
movsl
pop
addr16
mov
mov
add
mov
mov
out
ret
popf
sbb
fidivl
cmpsb
and
lret
mul
xchg
in
fucomp
jno
int3
stc
and
outsl
sub
xchg
cltd
iret
push
cmp
fistpl
jns
and
cli
xchg
mov
int3
test
and
in
shlb
cmp
xchg
adc
inc
mov
fiadds
jp
lods
jmp
stos
pusha
es
cmc
dec
stc
mov
repnz
inc
in
rol
xchg
aad
pop
sar
ss
mov
icebp
or
jno
popf
push
inc
mov
add
int
jmp
lods
xchg
pusha
sub
jbe
adc
lds
dec
fs
sub
xchg
push
or
aaa
ja
aas
adc
stc
mov
call
lock
jg
das
push
inc
daa
insb
dec
in
xchg
dec
mov
sub
imul
int
fistpll
sub
and
push
xor
loopne
and
and
push
adc
testl
hlt
push
cmp
sub
push
das
fsubrs
sahf
mov
out
repz
lret
xchg
xor
clc
hlt
pop
push
mov
js
fwait
add
add
xchg
lock
data16
aad
pop
mov
sub
xchg
mov
jb
rcrb
mov
push
lea
cmp
ds
and
mov
push
xor
mov
outsl
mov
pusha
pop
mov
lcall
xor
mov
je
fwait
lret
mov
or
push
add
xchg
mov
inc
mov
pop
decl
xchg
sub
aaa
cmp
mov
daa
lock
mov
fsubp
pavgw
sub
mov
ljmp
cmpsl
jmp
rorl
loop
jbe
mov
and
inc
or
jge
push
arpl
pop
cmp
xor
dec
comiss
inc
repnz
xchg
adc
jb
ror
push
push
enter
or
mov
shll
inc
icebp
jle
xchg
fdivl
mov
mov
mov
mov
jb
shlb
ficoml
push
inc
aam
cmp
rol
and
outsl
cmp
add
xchg
into
adc
jmp
push
mov
jo
imul
push
jle
add
sub
dec
xchg
or
jno
fs
aas
daa
loopne
sbb
decl
inc
insl
bound
cs
movsl
dec
cmc
imul
scas
xchg
out
xor
jp
push
test
push
push
xor
ud1
sbb
dec
out
push
lds
add
and
mov
mov
cmc
nop
sub
push
or
negb
icebp
mov
mulb
xchg
out
mov
pop
inc
nop
dec
shll
mov
cmp
mov
xchg
outsl
scas
adc
xor
imul
lret
imul
xchg
mov
in
ret
lea
pop
ljmp
mov
jb
das
inc
nop
xor
call
push
adcb
mov
mov
mov
aad
js
pop
jae
fdivs
pop
jo
lods
lahf
mov
into
into
push
daa
jge
mov
and
iret
lods
pop
js
mov
popf
mov
jecxz
or
adc
imul
mov
push
rcrb
inc
icebp
cmp
mov
shrb
pop
movsb
mov
cmp
decl
out
sub
mov
lret
out
xchg
xchg
fstl
mov
fidivrs
adc
lahf
add
sbb
and
adc
hlt
mov
push
xchg
jae
mov
pop
bound
hlt
pop
aaa
mov
insb
push
popa
pop
clc
out
fdivrs
jge
mov
add
lea
xchg
or
fmul
push
inc
es
cmc
xor
mov
lods
ja
xchg
or
aad
and
pop
stc
or
or
and
mov
inc
subl
ficompl
data16
push
mov
add
ds
mov
aaa
cs
and
and
leavew
push
mov
cmpsb
mov
xchg
dec
lds
pop
js
mov
enter
addl
js
and
stos
addb
out
xor
mov
cmc
out
sahf
push
stos
push
xorb
xchg
mov
sarl
inc
out
fmul
jns
pop
rorb
jne
out
adc
jno
lcall
xchg
and
cmc
arpl
enter
popf
fisttps
insl
sub
stc
xor
fsub
cmc
adc
ss
push
sub
and
jbe
xchg
mov
ret
test
jno
rcrl
movsb
mov
and
test
push
xor
xchg
jle
xchg
push
int
jg
jnp
fwait
push
lret
jle
call
mov
dec
aaa
outsl
ret
fildl
aaa
pop
movsl
cmp
inc
push
mov
icebp
push
push
addr16
lret
jnp
in
ret
or
rcr
filds
mov
popf
mov
lahf
mov
jb
enter
cli
mov
xchg
dec
hlt
std
push
sarl
hlt
push
orps
or
adc
fldl
xor
mov
popa
dec
cmpsl
add
pop
fwait
sbb
insb
or
insl
fwait
imul
push
dec
stc
and
insb
push
adc
test
push
lret
mov
and
xchg
sbb
lods
inc
and
fisttpll
cmpsl
pop
sub
ret
loop
dec
jb
mov
and
lods
imul
inc
inc
xchg
push
fsubl
jns
mov
sub
inc
push
mov
jnp
xor
sub
mov
insl
xchg
rolb
add
repnz
fbstp
adc
es
mov
std
inc
xchg
shl
stos
xor
cmp
clc
push
test
in
sub
mov
and
vpaddb
pusha
fcoms
enter
ljmp
xchg
mov
sub
loop
and
cmp
mov
aas
add
scas
and
adc
div
mov
cmp
out
outsl
cltd
mov
or
ljmp
imul
out
add
sahf
outsl
xchg
lea
mov
sub
jl
negl
aad
cwtl
dec
lea
xchg
out
inc
push
lret
cmpsb
jae,pt
movsb
xchg
adc
fadds
add
sbbb
mov
subl
cmpsl
ja
negb
shll
addr16
test
sbb
and
xor
fs
mov
jl
push
iret
sarb
or
call
add
cmp
sbb
add
subb
rorl
dec
xchg
jg
loop
rorb
ret
ds
and
push
dec
in
stos
push
ja
adc
orl
add
xor
mov
jle
push
pushf
push
xor
imul
in
lret
jne
pop
lock
and
and
shll
sub
lret
out
jecxz
out
jg
fimull
leave
int3
dec
jne
pop
in
iret
testl
mull
push
fucomp
test
test
fisttps
lahf
or
pushf
daa
mov
or
and
cmp
mov
add
ja
dec
jle
jae
xchg
xchg
popf
andb
jo
jne
cmp
xchg
xlat
mov
imul
add
pop
sub
mov
outsl
jmp
imul
shl
pop
lods
pop
push
les
in
cltd
pop
mov
cmpsb
push
imul
or
jg
mov
xor
pop
sahf
aas
sbb
pop
cmp
ja
push
js
adc
out
repz
repz
subb
cmc
jae
jecxz
fsubs
pop
mov
in
jnp
pop
cwtl
mov
add
adc
mov
scas
sti
add
imul
in
hlt
in
cmp
push
aad
dec
sbb
movsl
sbb
add
jo
xchg
sahf
movsl
clc
in
movsb
dec
out
mov
int
push
cld
mov
adc
mov
repnz
add
fstpl
inc
sub
xchg
jg
in
mov
in
aam
roll
je
pop
insb
jecxz
out
mov
mov
or
xchg
dec
mov
ss
popa
inc
and
ljmp
imul
ffreep
dec
push
add
mov
xchg
test
testb
test
sbb
std
jecxz
mov
add
mov
push
mov
mov
jp
sbb
push
pushf
push
xchg
mov
pop
or
or
push
dec
xor
inc
sarb
fisubl
std
mov
addr16
fsub
icebp
pop
push
sbb
iret
arpl
ss
pop
push
xor
das
push
test
ret
ret
or
dec
xor
daa
or
out
sbb
aam
sub
loopne
ror
fdivr
sub
pop
dec
dec
lret
mov
aad
lahf
dec
test
out
pop
or
add
adc
out
push
mov
into
rcl
das
push
ja
sbb
and
inc
jb
shl
mov
push
cmc
lahf
arpl
mov
xor
addb
xchg
stos
in
pop
lods
sbb
mov
mov
jb
je
fs
js
lds
sbb
sahf
cmp
add
and
clc
sub
fldcw
push
movsb
jns
pop
aas
les
mov
ljmp
rcr
jne
push
mov
inc
dec
jns
in
clc
ss
mov
inc
call
sti
mov
sub
add
aaa
shr
outsb
sbb
mov
test
repz
nop
push
fsubrs
sub
lds
jae
iret
sbb
mov
repnz
mov
in
adc
inc
clc
imul
push
cmp
jae
test
jo
inc
xlat
cwtl
dec
cmp
loopne
xor
and
sarl
sti
inc
clc
xor
dec
hlt
pop
or
push
jmp
xor
cltd
push
jle
lea
jecxz
mov
xlat
cmp
ficoms
or
ret
dec
jne
jae
pop
pusha
cmp
addb
adc
inc
push
or
push
in
pop
leave
jp
push
inc
std
std
imul
sub
mov
int3
cmpsb
sbb
movsb
dec
aad
xlat
loope
inc
sti
or
jmp
add
inc
push
call
dec
loop
andl
jecxz
or
cmpps
add
movsl
push
leave
mov
cld
leave
movsl
push
or
dec
popf
cli
jae
cltd
dec
xchg
dec
cmc
push
cs
xor
and
xchg
push
hlt
and
pop
scas
cmpsl
icebp
sub
and
addr16
ret
imul
or
cwtl
insb
jmp
adc
aam
pop
jns
pop
outsb
mov
xor
and
mov
xor
movsb
adc
push
lock
adc
dec
jmp
mov
hlt
repz
adc
and
lcall
xchg
mov
jmp
pop
rorb
xchg
mov
out
and
dec
adc
push
mov
cmpsl
xor
add
call
xchg
xor
xchg
sbb
imul
dec
fstpl
sub
shl
xchg
sarl
testl
ss
sbb
aaa
fdivrs
sahf
and
sahf
xor
aaa
mov
lret
jns
inc
stos
sahf
dec
into
leave
fisttpll
mov
aad
sub
fsts
mov
jbe
sbb
and
mov
lret
rclb
fidivl
iret
and
push
adc
adc
in
arpl
xchg
adc
insb
lret
mov
xchg
inc
dec
ret
dec
xor
mov
and
divl
aad
lret
dec
aaa
repz
sub
test
mov
jp
mov
inc
out
addb
jg
fwait
icebp
mov
cwtl
jp
mov
jo
push
xchg
inc
iret
pop
mov
push
mov
mov
pop
cmp
or
imul
aad
mov
int3
inc
jb
push
pop
adc
xchg
subl
push
push
ja
jg
std
test
adc
hlt
in
adcl
lret
jo
xor
jg
cld
ljmp
gs
imull
out
arpl
xor
insl
jno
insl
ret
leave
int
xor
xchg
cmp
mov
mov
pop
in
lret
mov
testb
addb
testl
lcall
loope
push
and
mov
dec
and
stos
stc
ss
in
jl
outsl
sbb
mov
pop
xchg
pop
inc
sbb
sarl
lret
xchg
fcomps
mov
andl
add
cmp
daa
stos
sbb
and
inc
dec
scas
push
dec
pushf
mov
xchg
aas
dec
lret
adc
in
movsb
jp
insl
inc
inc
imul
aam
dec
mov
add
mov
dec
int3
jne
sti
loop
jno
test
sub
pop
inc
jecxz
and
inc
clc
aad
cli
enter
fldl
jbe
in
rcrl
pusha
lahf
loope
cmpsb
add
hlt
adc
je
inc
jnp
adc
adc
mul
sbb
es
and
repz
cmp
push
xor
mov
iret
inc
sbb
dec
mov
lds
std
fldl
sbb
cld
movsb
push
arpl
jg
pop
mov
stos
sahf
out
pop
add
jnp
xor
mov
push
nop
or
push
mov
sbb
lock
lret
test
cmpsl
dec
mov
cmc
test
or
add
insb
sbb
outsb
dec
fisttps
pop
push
jge
in
movsb
pop
adc
inc
mov
fiaddl
cmp
lods
jmp
jno
fnstcw
lods
testl
imul
fadds
lods
repz
adc
mov
outsb
pusha
mov
popf
nop
inc
fdivs
jno
cmp
dec
inc
mov
ljmp
daa
sbb
sub
adc
xlat
int3
sti
shlb
mov
or
sbb
out
and
add
xchg
scas
or
js
push
sahf
dec
loop
dec
loopne
les
sbb
mov
mov
cmpsl
jne
out
or
push
ss
js
insl
add
pusha
adc
push
fbld
bound
in
movl
lds
outsl
filds
loop
push
mov
dec
sbb
sbb
inc
outsl
dec
mov
inc
shrd
mov
dec
add
nop
inc
pop
leave
jae
jne
mov
cli
sahf
cmp
sbb
stc
in
add
push
push
xchg
icebp
out
mov
loopne
mov
xchg
pop
jl
loop
push
jl
add
xor
mov
adc
loopne
idivl
jno
jnp
add
fdivr
pop
rorb
sub
add
add
ja
mov
jno
mov
jecxz
mov
cmp
mov
adc
or
fidivl
pop
and
sbb
mov
movsb
jle
test
xlat
mov
cmp
ret
mov
mov
in
ret
dec
addr16
cmp
xor
sbb
jl
pop
sbb
popa
ret
cmc
adc
pushf
in
sub
inc
adc
aad
daa
pop
fldcw
les
ret
stc
mov
aas
push
mov
jbe
push
scas
cmp
lret
sub
xchg
lahf
and
push
dec
repnz
xor
dec
test
mov
pop
add
sbb
in
mov
and
dec
push
sbb
stos
jl
dec
clc
add
fwait
push
jae
loop,pt
inc
or
repnz
sti
lds
or
xchg
pushf
in
jno
push
xchg
nop
push
fistps
test
jl
out
push
rcr
push
rcr
sub
push
pop
scas
lock
nop
cmpsb
adc
out
icebp
or
adc
push
sub
xchg
jo
inc
dec
subb
mov
daa
push
test
push
int
aam
pop
aaa
push
dec
sbb
sub
cld
dec
rcll
and
scas
xlat
mov
call
push
sti
iret
mov
mov
cmpsb
scas
pusha
jecxz
pop
pop
or
dec
mov
pop
adc
mov
insb
inc
push
cmpsl
inc
and
lds
ds
push
data16
and
stc
mov
mov
sub
add
insb
das
jns
scas
cld
pop
and
pop
cltd
jg
movsl
inc
testl
xor
das
cltd
pop
mov
mov
mov
mov
in
frstor
loope
aad
test
es
sbb
sub
cltd
pushf
insb
aas
vpshlw
aas
fisubs
push
inc
in
in
leave
dec
sub
cmpsb
loope
jne
fiaddl
push
ja
aaa
call
inc
into
roll
push
xor
nop
imul
hlt
sub
lock
fimull
je
inc
mov
mov
aad
or
jb
jne
mov
mov
outsb
sbb
in
outsl
mov
aaa
es
in
imul
js
and
xor
mov
mov
inc
dec
rcrl
sbb
js
sbb
push
rolb
mov
lcall
mov
in
xlat
mov
shlb
xchg
subl
std
and
and
xor
mov
fidivl
pop
fsubs
or
movsb
test
or
adc
jne
test
xchg
scas
shlb
push
leave
cmpsb
sub
jge
jge
mov
mov
lahf
movsl
fisubl
jmp
mov
cmp
sti
sub
cmc
jmp
sbb
loope
sub
sbb
aad
sbb
pusha
ret
cmpl
cli
das
and
xchg
stos
and
es
clc
dec
ja
xchg
push
std
xchg
lods
mov
push
nop
mov
test
clc
lods
dec
data16
mov
ret
popa
inc
movsl
add
jle
aaa
xlat
in
adc
sbb
arpl
andb
nop
mov
out
dec
mov
jl
mov
lea
and
mov
dec
jo
movsb
inc
push
cmp
cmp
lcall
adc
xor
push
adc
sbb
rorb
push
xchg
pop
mov
in
ror
dec
fisubrs
or
or
shr
and
loope
sbb
stos
mov
mov
or
out
adcl
xor
jno
push
popf
dec
pop
loope
into
add
stos
mov
imul
mov
je
push
xchg
jmp
push
pop
inc
test
adc
stc
int
in
mov
ror
cltd
rorb
mov
xor
sbb
test
cmc
pop
neg
sbb
lahf
lret
insb
sub
rol
gs
mov
ret
je
jp
js
andb
fstpl
nop
orl
xchg
stos
in
rcl
pop
loop
adc
fstpt
pop
fcmovnb
mov
cmpsl
mov
cs
mov
addr16
dec
jl
and
mov
cmpsb
sbb
dec
pop
cmp
mov
pop
nop
js
mov
add
xor
bound
push
arpl
xor
mov
add
notl
xchg
adc
cmp
repnz
xchg
inc
mov
pop
fdivrp
stos
mov
in
cwtl
popl
cs
xchg
clc
in
sub
adc
dec
loopne
xor
adcl
imulb
lcall
dec
xor
push
pop
sbb
loope
fcompl
inc
out
pop
je
fucomip
inc
add
lret
and
inc
xchg
shll
mov
mov
insl
ficoms
ret
lods
push
ds
je
sbb
sbb
iret
insl
xor
popf
push
rol
adc
pop
outsl
jbe
mov
xchg
iret
mov
mov
stos
xor
shrl
in
test
fst
stos
inc
in
add
push
scas
fdivl
jl
cmpsl
movsb
pop
mov
clc
add
push
jl
mov
cli
sbb
xchg
aam
pop
das
inc
popa
mov
or
mov
xchg
repnz
js
push
add
insb
sbb
adc
mov
ret
pusha
sbbb
fstl
jns
mov
outsl
pop
pop
loopne
jg
leave
test
and
xor
push
call
jno
cmp
mov
insl
nop
loop
cmp
jge
jecxz
xchg
popf
out
add
lea
pop
neg
inc
out
push
cmp
lock
std
data16
and
mov
xchg
dec
push
cmp
xor
push
and
in
stos
ljmp
mov
or
xchg
add
xchg
jb
fs
push
or
std
mov
out
daa
enter
in
inc
mov
shl
popa
sub
push
push
push
mov
cmp
ret
cs
aaa
lcall
add
sbb
addb
pop
rorl
test
stos
insb
dec
arpl
pusha
and
add
adc
or
std
push
push
loop
std
mov
mov
cwtl
dec
icebp
xlat
pusha
xchg
dec
cmp
stos
inc
add
add
rol
out
repnz
mov
inc
and
and
insb
in
pusha
lcall
xor
cmc
push
jnp
inc
or
sbb
arpl
addr16
loop
xchg
lods
ja
in
add
loopne
iret
loope
jle
add
imulb
ds
leave
cs
pushf
dec
cwtl
jb
fcmovbe
cwtl
pop
fstl
sub
in
and
xor
lcall
das
cli
adc
push
mov
loopne
jmp
xchg
je
pop
push
jecxz
pop
sub
cmp
roll
das
orl
ja
inc
ret
loopne
popf
mov
bound
nop
dec
test
loop
sub
sbb
sbb
lods
pop
nop
data16
jge
scas
subb
xor
add
cmpsb
push
xor
pop
cmp
loope
out
mov
jp
mov
fs
mov
and
sahf
xchg
jmp
dec
pop
mov
loope
push
arpl
scas
jbe
add
jle
push
cli
das
jle
and
or
cs
fmull
pop
and
mov
gs
sub
jg
cwtl
out
out
js
cmp
lret
mov
push
push
mov
mov
shrb
cmp
stos
aas
cmc
ret
fildll
rcpps
pop
sub
sub
cmpsb
cwtl
in
pop
and
mov
lcall
out
jl
jge
pop
fisubl
es
and
lahf
leave
xlat
dec
sbb
push
xchg
pop
pop
lret
mov
sarb
loop
cs
mov
mov
xor
or
or
testl
lcall
inc
lods
inc
sbb
pop
fwait
push
insl
jne
adc
cmpsl
aaa
sarb
mov
sbb
mov
punpckldq
jge
xor
test
xchg
mov
inc
stos
and
lahf
push
into
sbb
mov
testb
cmp
leave
jp
cld
push
testb
xchg
jnp
pop
ljmp
loopne
push
rcrb
fiaddl
movl
nop
xor
je
mov
xchg
rorl
and
fistl
add
int3
push
std
jo
andb
xlat
mov
xchg
inc
jns
std
or
pop
sbb
pop
cmp
pop
mov
cltd
sahf
push
popf
inc
or
push
fdivrs
fistl
sahf
pusha
cmp
cmp
test
clc
mov
mov
xchg
int
sub
sub
sub
fwait
mov
cmp
jmp
sbb
xor
int3
sbb
cmpsl
pop
addr16
in
shrl
mov
fstl
mov
mov
jg
in
mov
cmc
movsl
rorb
aad
fwait
loopne
sbb
mov
icebp
mov
push
aad
inc
inc
push
xor
xor
xchg
das
fnstsw
stos
jle
std
inc
dec
iret
mov
xor
insl
cmp
mov
enter
push
lea
notl
dec
jns
dec
hlt
xchg
andl
jno
xchg
in
dec
dec
out
inc
dec
into
insl
imul
fmull
orl
test
cmpsl
pop
jbe
je
iret
jecxz
out
rol
insb
push
stc
cmp
push
jbe
out
xor
nop
sub
and
pop
cmp
stos
sbb
mov
repnz
mov
push
lret
xchg
enter
addb
push
pop
in
clc
and
loop
cmpsl
jle
popf
or
cmp
and
and
addl
leave
mov
lds
mov
xchg
push
test
pop
lahf
js
sbb
fnstsw
xor
iret
js
repnz
xor
or
pushf
out
int3
loop
add
xchg
aas
sub
jbe
shufps
mov
mov
xchg
fdivl
movsl
pop
mov
test
dec
shrl
jns
outsb
flds
push
cmpsl
pushf
jecxz
add
xor
cmpsb
sarl
and
xchg
add
ss
mov
cmovb
ljmp
ret
outsb
push
cmpsl
bound
adc
outsl
mov
gs
in
rcr
outsl
das
test
je
lret
scas
adc
push
mov
fcomip
jno
das
and
inc
jne
cltd
in
mov
enter
jnp
inc
iret
mov
push
mov
fistl
test
movsl
insl
lods
imull
jmp
or
in
lock
ret
daa
out
movsl
je
cmp
out
enter
or
pop
add
push
jno
pop
push
sti
aad
cld
inc
pop
xchg
test
loop
filds
add
xchg
mov
shr
xchg
aam
xchg
ret
mov
adc
add
std
push
mov
mov
pusha
add
arpl
test
add
int3
push
bound
mov
lcall
and
movsb
cmc
xor
popa
mov
dec
clc
adc
xchg
mov
scas
imul
add
inc
xchg
or
inc
xor
subb
cmpsb
jno
or
xor
cwtl
pop
mov
mov
push
sub
add
pop
rorb
pop
shlb
enter
or
mov
sbb
cmp
and
into
adc
ss
mov
sub
inc
xor
out
sub
mov
mov
xorb
mov
xor
or
adc
fisubs
xchg
mov
sbb
xor
loopne
mov
jns
mul
nop
add
mov
jbe
jecxz
mov
or
push
imul
pop
ljmp
mov
test
cmpsl
lods
lods
pushf
xchg
dec
dec
pop
cwtl
popf
gs
lds
leave
jecxz
sahf
fsubl
pop
sub
sahf
jne
int
sbb
push
ret
sub
clc
cmpsl
repz
imul
stc
or
push
xchg
dec
daa
out
cmp
xor
mov
nop
xor
leave
mov
jns
jle
scas
and
and
mov
xchg
pushf
and
adc
xchg
in
sti
mov
enter
cltd
xor
aam
in
leave
pop
fcoms
scas
das
leave
cmpsl
das
jmp
jae
div
sti
jbe
push
mov
sbb
sbb
sbb
in
daa
or
stos
outsl
inc
sub
sub
push
push
mov
in
sub
stos
cmc
pop
out
mov
cmp
cs
inc
mov
xchg
mov
pop
fmuls
lea
lods
loop
in
push
sub
addr16
insb
ret
out
call
lods
int3
add
inc
mov
inc
insb
adc
jb
scas
mov
outsl
in
movsl
roll
in
or
and
sbb
pop
test
addr16
aas
or
jbe
or
mov
add
xor
xchg
inc
shrl
push
or
inc
out
ljmp
pop
or
dec
mov
pop
sub
imulb
mov
je
mov
lcall
movsb
sbb
add
inc
ds
adc
push
decb
shl
pop
mov
bound
stos
dec
pop
or
mov
js
in
lret
addl
sub
pop
lahf
fwait
adc
jae
mov
sub
jno
lahf
dec
add
ret
hlt
pop
push
dec
movsb
clc
jge
pop
dec
hlt
hlt
addb
call
js
jbe
pop
mov
xchg
mov
or
aad
int
lods
jnp
js
jp
or
fcompl
dec
fdivr
inc
in
xchg
sbb
rol
inc
mov
push
pop
gs
cmpsl
pop
jae
cmp
pop
xchg
inc
pop
push
mov
cmp
mov
mov
stos
repz
test
push
xchg
fcmove
jle
out
sbb
adc
rol
ljmp
cmp
mov
lds
int
cwtl
cltd
mov
rcrl
dec
adc
xchg
mov
orb
cli
or
cld
add
dec
movsb
push
insb
mov
loopne
out
jno
aas
mov
adc
out
inc
or
shl
mov
adc
mov
cli
cmpsl
sbb
mov
xor
push
add
mov
pushf
inc
inc
mov
enter
je
bndldx
call
ret
xor
mov
sub
push
push
lods
ljmp
stc
dec
push
sub
imul
pop
pop
mov
mov
aad
sub
aad
sbb
adc
fmulp
jmp
call
sti
pusha
dec
mov
sub
mov
mov
dec
sub
repz
adc
ljmp
pop
test
sub
pop
adc
mov
sub
cld
lea
pop
ljmp
mov
cmp
cmpsl
lea
cmp
loop
movsb
ret
mov
inc
clc
push
jb
insl
sbb
mov
call
dec
jmp
add
push
ds
cld
notl
sub
enter
pop
iret
add
bnd
sbb
or
adc
sub
js
dec
jbe
push
pop
inc
das
lcall
jne
mov
mov
addl
sub
dec
sub
sti
sar
outsb
add
cmp
ret
adc
rcrb
pop
adc
jne
push
jmp
cmc
ret
mov
push
cmpsl
inc
mov
cwtl
xor
cs
jo
hlt
cmpsb
mov
int
movb
inc
xlat
insl
movd
insb
scas
pop
int
mov
stos
pop
jbe
or
cmp
adc
cmp
xchg
in
push
cmpsl
cmp
es
decl
imul
in
mov
mov
mov
js
jmp
insl
pop
jbe
push
adc
xor
mov
jne
cmp
sti
lods
imul
pop
mov
data16
inc
into
dec
jl
and
mov
pop
nop
cwtl
cmp
adc
push
cld
cmpsl
test
mov
push
jmp
cmpsb
sub
inc
dec
lock
mov
push
test
and
sbb
mov
testl
add
xor
xrstors
lcall
clc
hlt
xchg
adc
fisubs
mov
inc
in
rcrb
adc
xor
addr16
dec
pop
xor
dec
mov
sbb
imul
inc
jmp
xor
jle
scas
movsl
roll
adc
lret
aas
repnz
mov
mov
pop
enter
imul
dec
ss
call
nop
int3
inc
cltd
jg
dec
add
add
jbe
or
pusha
push
dec
lock
rcll
mov
push
jb
push
stos
iret
lret
push
sub
fmul
sbb
decl
push
gs
and
cmp
icebp
outsb
aas
shrb
cmpl
hlt
shr
cli
xor
dec
or
lret
in
dec
sub
leave
sub
sbb
mov
out
inc
test
add
call
es
jne
lods
mov
mov
cwtl
aaa
rclb
push
sbb
into
sub
loopne
add
inc
out
mov
mov
insb
adc
push
pop
or
repz
mov
jo
imul
push
je
adc
jae
cmpsb
cmp
test
mov
inc
mov
or
jecxz
scas
mov
mov
in
mov
ljmp
jecxz
cs
jg
or
jp
or
cltd
cwtl
hlt
fcoms
dec
sar
mov
cld
push
pushf
imul
addr16
cld
mov
mov
push
shlb
and
hlt
lret
fs
inc
lock
jmp
vbroadcastf64x4
ret
sbb
mov
push
fstps
aam
xor
sbb
fimuls
pop
and
ss
mov
mov
cmp
add
mov
mov
add
insb
mov
push
or
mov
or
adc
ljmp
adc
sbb
xor
sahf
call
fwait
pop
dec
into
lea
push
xchg
xor
loopne,pt
dec
sub
sub
inc
sub
orl
scas
icebp
ljmp
xor
sbb
popf
mov
lds
xchg
ficoms
cmp
push
pop
and
jle
push
popf
and
sub
dec
lds
lods
push
scas
pop
adc
lock
fdivl
pop
out
jge
in
push
mov
lret
dec
jp
sub
lock
xor
mov
sbb
out
loope
sbb
stos
pop
mov
adc
or
and
dec
imulb
add
cld
adc
imul
idivb
pop
and
add
cmpsb
cmpsb
out
jle
lea
arpl
mov
inc
fisubrl
mov
repnz
push
dec
fnstcw
jns
pop
stos
sub
dec
scas
push
jl
push
mov
pushl
xor
xor
test
popl
lret
xor
mov
aad
loop
sbb
xchg
int3
scas
mov
je
movsb
add
scas
cmp
ficoml
dec
or
push
xchg
out
cltd
mov
shlb
dec
popa
vmptrst
pop
loop
sarb
adc
xorl
lcall
xor
mov
push
lds
loope
bound
lods
mov
cmpb
cmpl
imul
stos
mov
ficompl
fbld
arpl
shrb
out
xchg
dec
in
stos
imul
jg
frstor
popa
inc
push
jae
sbb
cmc
mov
adc
arpl
xchg
test
pop
insl
sub
jmp
cmc
enter
mov
sub
dec
pop
mov
add
mov
dec
xor
daa
scas
movsl
jle
xor
pop
jle
or
lds
cmp
cli
pop
mov
out
mov
or
leave
jae
xchg
or
push
jecxz
sub
out
cmp
mov
les
xor
mov
xchg
sub
or
mul
rcrb
sub
mov
cmp
fmulp
inc
dec
jmp
sbb
jbe
fxch
dec
lret
pop
or
dec
pop
xlat
mov
fcmovu
xchg
xchg
outsl
addb
scas
rcrl
leave
hlt
in
cmp
mov
sarl
mov
sub
sbb
lahf
push
xchg
dec
mov
andb
aas
mov
xchg
mov
es
mov
js
push
add
jo
loopne
and
xor
jl
and
dec
sub
mov
jg
outsl
or
and
mov
xlat
xchg
push
inc
imul
leave
inc
imul
shlb
mov
int
dec
fldl
sub
int
dec
fldcw
sarl
sub
in
out
gs
add
cmp
or
in
int3
pusha
les
jns
sub
mov
xor
lock
jo
push
imul
cs
in
jns
iret
sbb
mov
mov
stc
in
shlb
mov
xor
hlt
rolb
aas
pop
mov
iret
jno
stos
pop
pop
shll
in
aam
and
arpl
imul
imul
sbb
inc
and
in
icebp
jge
movsb
xchg
loope
roll
loopne
stos
imulb
stos
inc
mov
es
dec
xor
es
mov
aaa
mov
hlt
pop
lock
icebp
jo
xor
pushf
fs
fldcw
fcmove
std
test
insb
cmp
jge
mov
pop
rcll
push
xchg
test
add
fwait
mov
cmc
iret
sub
mov
dec
fwait
mov
out
ret
xchg
inc
xchg
mov
hlt
or
push
jne
sub
inc
imul
js
or
sbb
sub
loopne
outsl
dec
repz
sub
inc
xlat
insb
imul
mov
pop
lcall
inc
cmpl
popa
sarl
leave
lcall
jg
testb
fs
rcrb
sub
cmp
mov
out
ja
stos
mov
sub
stos
call
ja
imul
mov
sti
fs
pop
or
xchg
movsw
scas
iret
pushf
add
data16
dec
push
stos
enter
push
inc
pop
push
mov
and
rcll
dec
inc
lods
orb
mov
fstl
je
scas
pop
in
ret
mulb
pop
sub
mov
xchg
mov
cli
pop
pop
mov
shrb
ds
sti
push
pop
pop
es
mov
pop
pop
cmp
dec
loop
jnp
xor
sahf
add
jl
adc
and
mov
inc
and
leave
cs
dec
rcrb
jg
push
shrb
mov
add
mov
inc
call
cs
in
test
cmp
dec
and
or
sub
ss
adc
fadds
adc
dec
ss
popa
fcmovnbe
sbb
popf
daa
enter
push
pop
imul
jns
pop
fs
pop
inc
daa
jns
sbb
je
outsb
and
aam
movsb
mov
mov
mov
cmp
pop
aad
jnp
ja
jmp
jl
xchg
int3
lods
sub
cld
mov
mov
loop
mov
lret
out
into
and
and
test
outsl
mov
pop
movsl
mov
jg
popw
ss
ss
dec
mov
jae
pop
out
divl
adc
pop
push
or
scas
arpl
adc
loop
sarb
mov
out
dec
aad
dec
xor
mov
lcall
fsubrp
loop
jo
iret
xchg
leave
jns
ret
out
jo
dec
shrb
mov
leave
test
faddl
mov
addr16
ficompl
test
fdivr
mov
mov
xchg
xor
popa
rcrl
sub
mov
sbb
sub
lahf
lretw
cld
cmpsl
sbb
mov
aas
fs
cmpsl
inc
xchg
pushf
adc
mov
push
aam
outsb
mov
in
fidivl
push
int3
sub
out
pop
jae
xor
xchg
sub
cmp
pminub
pop
and
stos
or
jge
jo
inc
jg
push
xchg
lea
lods
insl
pusha
fxch
addr16
test
xor
cmp
push
mov
repnz
jl
cmpsl
dec
mov
clc
out
push
jbe
rcrb
xchg
and
cmp
in
fsubrs
sbb
mov
mov
mov
std
add
cmpsl
mov
inc
daa
int
mov
dec
outsb
push
cli
aad
out
ficomps
ret
lds
jbe
outsl
dec
in
int
pusha
lock
push
ret
int
fs
cmp
lret
inc
lahf
pop
xchg
cmp
jnp
adc
fimull
rolb
mov
imul
cs
aad
lret
fbld
sub
scas
cmpsl
lds
sub
jb
sub
es
jbe
gs
data16
sbb
inc
or
adc
jp
pushf
add
dec
ljmp
jle
jb
or
xor
iret
bound
pop
ficompl
in
mov
cmc
int3
rolb
pop
inc
shrl
jbe
das
push
xchg
jp
int
jle
push
ret
inc
in
call
xor
cmp
xor
and
jge
xchg
ret
adc
shl
test
pop
inc
movsb
insl
cmc
cmp
jnp
cmp
loopne
cmp
cmp
ret
xor
push
push
adc
cmp
push
push
cltd
mov
xlat
jecxz
ljmp
shrb
mov
mov
clc
jne
fdivrs
jno
int3
fs
das
fstpt
mov
stos
cs
mov
fs
sub
dec
aaa
bound
and
roll
inc
inc
and
push
es
and
into
clc
mov
aam
inc
jmp
add
xchg
jne
sti
jecxz
push
mov
mov
cmc
pop
adc
xchg
xchg
dec
add
inc
pop
in
ss
add
xchg
or
pop
js
push
mov
data16
push
xor
cmp
xor
pusha
icebp
jno
cld
cmpsl
cltd
jmp
loope
movsl
ja
sbb
insb
sarl
sub
arpl
cltd
and
push
pop
cltd
and
xor
insb
jge
xor
jno
or
into
cmpsb
pop
cmp
ficoml
and
add
stos
inc
in
rorb
je
addr16
mov
int3
pop
inc
lcall
loop
xor
mov
scas
jle
mov
pop
out
sbb
xor
mov
out
fildll
pop
lds
stc
imul
sub
xor
add
add
xorb
push
movsb
push
inc
iret
subb
cli
sbb
movsl
adc
nop
lds
pop
mov
xchg
pop
lret
sub
pop
xchg
dec
movsb
mov
iret
out
ds
cs
sub
and
movsl
imul
jle
mov
sub
scas
pop
sarl
inc
mov
sub
bound
cmp
cwtl
or
ljmp
and
pop
rorl
push
rcrl
dec
push
cmc
cmp
les
enter
ds
and
inc
lods
jecxz
divl
jbe
jecxz
sbb
lods
cli
xchg
sbb
inc
out
push
sub
adc
inc
out
aas
fidivs
lock
adc
push
inc
scas
pusha
jo
inc
push
push
fsubp
aaa
xor
mov
out
jecxz
or
inc
das
pop
lret
pushf
lods
fistpll
adc
xchg
cmp
rorb
orl
fdivl
push
mov
inc
adc
int3
leave
inc
pop
ljmp
adcb
cmp
lret
inc
shlb
out
mov
call
lods
call
mov
xor
sub
enter
dec
fdivs
jnp
arpl
xchg
cmpsb
xlat
mov
or
xlat
sahf
mov
xor
and
lret
or
push
scas
xorb
dec
xchg
sbb
add
fcmovnu
imul
mov
inc
jo
in
movsl
xor
out
out
cs
shrl
into
test
xor
mov
push
xor
pop
movb
inc
adc
xor
rcr
sti
dec
mov
sahf
pop
inc
adc
insb
jbe
iret
dec
mov
shl
loopne
ffree
mov
fnstsw
pushf
mov
mov
in
xor
adc
pop
loopne
or
or
inc
fs
movsl
hlt
scas
pop
cmpsl
jp
iret
adc
loopne
inc
je
add
or
daa
push
lock
notb
pop
je
cmpsl
push
mov
movsb
sbb
sub
or
sub
js
aad
stc
adc
das
std
mov
call
in
xchg
push
push
loop
pusha
cmp
sbb
mov
pop
cmp
adc
mov
mov
insb
jg
mov
bnd
out
sub
gs
cltd
int
or
sub
pop
xor
inc
jne
adcl
inc
iret
xchg
pop
adc
clc
pop
call
in
lahf
stos
inc
push
push
pop
dec
dec
icebp
repz
push
gs
jne
xlat
filds
ljmp
push
sbb
mov
mov
mov
int3
dec
fs
loopne
push
sub
xor
add
lret
xchg
jg
sbbb
and
sbb
sbb
into
push
lods
mov
sbb
push
repnz
stos
mov
popw
adc
scas
mov
pushf
push
adc
sbb
jae
cmp
jno
push
cmp
bound
dec
aad
into
in
sub
push
adc
movsb
daa
mov
mov
out
cli
pop
subl
mov
and
pushf
leave
push
push
mov
arpl
cmp
cs
pop
xor
lahf
cmpsl
mov
popf
aam
sahf
mov
lahf
rorl
and
add
scas
sub
and
pop
or
push
sbb
ljmp
movsb
loop
push
lds
inc
rcrb
orl
stos
into
shlb
xor
xchg
mov
jge
mov
mov
push
add
add
mov
sub
bound
movsl
mov
and
sti
je
lea
fwait
notl
push
jns
or
ja
jmp
mov
push
test
mov
lret
mov
mov
test
ljmp
xchg
mull
xchg
mov
pusha
jp
mov
jo
jmp
cmp
push
pop
in
mov
dec
adcb
dec
enter
push
sub
jp
fisttps
ja
pop
std
inc
mov
dec
push
mov
sbb
out
adc
jbe
insl
push
or
out
lret
jle
jp
mov
test
jecxz
test
popa
ds
es
or
nop
pop
inc
push
or
jnp
fcomps
xchg
jl
pop
imul
dec
push
inc
dec
jecxz
inc
jle
jge
dec
iret
in
pop
sbb
call
sub
mov
add
adc
mov
roll
xlat
stos
mov
movsb
xchg
inc
push
subl
addr16
das
dec
sbb
sbbl
mov
dec
inc
jno
cmp
jo
fstl
push
iret
mov
xlat
pop
fcomps
nop
fcmovb
stos
pop
mov
fldl
das
xchg
push
sti
or
jne
xor
jecxz
in
mul
insl
sub
add
std
xor
lcall
das
adc
data16
outsl
cld
xor
mov
rcrb
loope
xchg
mov
jne
js
mov
hlt
aaa
adcb
push
mov
fists
cmpsl
out
jae
jb
movsl
add
dec
mov
movsb
and
sub
ss
in
in
rcll
dec
pop
lea
xor
mov
fistps
push
pop
xchg
clc
cmp
ret
pcmpeqd
sbb
out
mov
push
pop
mov
movsb
iret
stos
xchg
pop
xor
push
cmp
mov
adc
dec
jl
int
leave
in
xchg
mull
xor
cmp
jg
in
pop
nop
lret
sub
out
adc
out
mov
fidivl
in
lret
das
dec
dec
jo
arpl
jbe
mov
loopne
mov
sub
pusha
lods
xchg
daa
cmp
loopne
adc
add
xorl
cmp
xchg
sbb
sub
mov
xchg
or
pop
scas
mov
inc
mov
inc
sahf
sti
out
sar
inc
mov
inc
sbb
ret
mov
pop
out
xchg
rclb
cmpsl
and
sbb
rdmsr
imul
jnp
std
mov
arpl
and
pushf
mov
leave
pop
nop
xor
jmp
dec
push
add
call
push
jne
mov
mov
out
mov
xor
aaa
movsl
xchg
lods
imul
mov
xor
ljmp
shrb
dec
dec
adc
daa
cmp
push
movsl
leave
or
fdiv
sub
gs
fistpll
test
fcoms
xor
gs
dec
cwtl
dec
outsl
inc
sbb
gs
sar
pop
xchg
imul
cmpl
adc
dec
sub
pop
and
cli
outsb
mov
inc
pushw
fnstcw
cmpsb
mov
push
out
xor
mov
mov
loop
add
mov
xchg
outsl
je
add
jns
push
arpl
xor
adc
mov
rorl
in
xor
daa
or
pop
jecxz
mov
aas
xor
popa
or
ja
cmp
jb
int
lret
cmc
pop
mov
rcl
jecxz
lea
xlat
add
dec
push
bound
out
bound
add
add
rclb
loop
aad
stc
jg
cmp
std
xchg
cmp
pop
push
ss
rolb
jb
push
ja
ja
test
adc
cld
push
sub
cmp
pop
add
mov
repz
lret
rorb
or
xchg
adc
dec
xor
mov
sub
daa
aas
sbb
iret
mov
dec
inc
mov
sbb
aas
and
xchg
mov
sbb
in
add
sbb
rcll
outsl
fcomps
jge
cltd
ja
inc
lods
inc
cmp
xchg
inc
clc
dec
lret
pop
ds
inc
mov
movsl
jne
mov
lods
shlb
mov
mov
or
and
insl
repz
lods
cmp
pop
inc
cs
sahf
mov
mov
dec
shlb
jb
jo
mov
mov
xor
imul
rcrb
shl
fiadds
mov
add
ds
push
int
fistpl
cli
mov
ficompl
sbb
mov
hlt
xchg
out
rorl
push
stos
aam
cltd
cli
out
cwtl
shr
pop
push
and
adc
loopne
mov
dec
sarb
mov
xor
mov
dec
shrl
push
xor
pop
xor
push
xchg
or
popf
and
cmpsl
sahf
mov
xor
mov
xor
pusha
inc
repnz
aas
sbb
cwtl
mov
test
in
mov
lods
vfrczps
or
xchg
mov
mov
pop
add
int
push
clc
jge
pusha
mov
test
pop
shlb
fisubrl
dec
cmp
cmpb
pop
and
fildll
xchg
leave
loop
insb
xor
mov
scas
or
cmpl
popa
sub
into
sub
scas
pop
data16
aad
push
scas
fidivl
jno
mov
icebp
les
dec
cmpsl
in
inc
movsl
jno
jns
mov
dec
and
in
and
mov
cld
inc
inc
push
xor
mov
xchg
mov
test
outsb
mov
leave
xlat
jl
pushf
enter
sub
arpl
mov
sbb
inc
daa
pop
fisttps
in
inc
movsb
je
insb
jecxz
addl
xor
mov
jo
dec
inc
repnz
sub
pop
sets
push
fistpll
pop
cli
jae
adc
inc
icebp
push
cmp
outsl
mov
and
les
xchg
jp
adc
call
jne
sbb
jge
xor
mov
int3
adc
fldenv
push
push
nop
mov
mov
jo
cmc
sub
mov
loope
fisubl
adc
push
push
xor
movsb
mov
sarl
or
negl
dec
pop
add
arpl
sbb
dec
imul
popa
push
movsl
popa
pop
dec
mov
dec
inc
mov
into
into
mov
in
call
pusha
xor
adc
or
out
push
jb
scas
mov
lds
pop
xchg
daa
add
sub
cmp
cs
cmpsl
inc
add
xchg
in
in
and
xor
inc
dec
movsb
adc
cmpsb
ret
test
xorl
pop
test
and
loop
hlt
inc
fistps
adc
add
enter
loope
mov
xlat
stos
icebp
push
std
jg
xchg
loop
insb
jmp
mov
jns
push
in
mov
sub
data16
stc
loop
out
shl
sar
loopne
xor
in
mov
mov
jge
ret
repz
loop
jecxz
fs
leave
fisubrs
xchg
in
cmp
test
jbe
sbb
push
jmp
movsl
add
cmp
add
mov
pop
and
dec
add
int3
imul
pop
aas
dec
jp
adc
push
mov
subb
pop
and
xchg
pop
adc
adc
dec
les
pusha
clc
fldcw
leave
sub
loopne
aas
imul
cmp
mov
sbbb
jg
test
lahf
rcr
xor
das
pop
inc
xor
mov
inc
pop
lcall
ds
stc
xor
or
std
repnz
negl
inc
inc
add
out
mov
arpl
loopne
push
pop
pushf
pop
mov
xchg
and
xchg
cs
fnsave
mov
add
adc
pop
lcall
xchg
xchg
add
jge
pop
sub
mov
jo
pop
inc
cs
sub
and
inc
ss
mov
icebp
pop
push
iret
out
pop
or
leave
mov
push
mov
jo
outsb
inc
jle
in
mov
mov
sub
lahf
push
jnp
mov
push
xchg
clc
push
mov
push
push
outsl
add
inc
sbb
push
jecxz
mov
in
out
test
push
fwait
jge
add
mov
mov
or
test
cmpsl
adc
push
xlat
xchg
inc
sbb
pop
pushf
icebp
jg
sbb
cli
ljmp
movsb
lret
pop
sti
hlt
cs
cld
pop
and
pop
add
sbb
sub
lods
push
hlt
pop
call
sbb
fiaddl
inc
push
xchg
dec
mov
xchg
xchg
xchg
mov
popf
xchg
fildl
in
clc
add
stos
lds
loop
pop
adc
or
push
call
cmp
in
decb
xor
or
mov
jnp
and
dec
mov
sbbb
out
jno
mov
add
inc
xchg
xchg
jl
pop
or
mov
aas
mov
mov
fwait
cmp
in
sub
fbld
dec
popf
sahf
and
inc
rcrb
inc
mov
mov
jbe
fildll
roll
imul
in
mov
into
dec
or
jmp
nop
mov
popa
or
mov
jnp
sti
add
imul
scas
pop
jge
fcompl
ficompl
adc
xchg
dec
leave
ljmp
jge
clc
xchg
shrb
inc
push
sahf
out
lea
pop
lcall
and
xor
push
cmp
xchg
outsl
popf
in
negb
aam
lret
pop
inc
push
dec
adc
xchg
jmp
push
sub
bound
adcb
pop
sub
rolb
ret
movsb
inc
paddusb
jl
lahf
push
jecxz
jg
insl
add
mov
pop
push
mov
jl
cmpsl
aas
pop
jp
push
add
mov
sub
out
sbb
pop
or
icebp
mov
push
test
ret
adc
mov
lods
idiv
mov
fs
lret
inc
push
push
fisubrs
rcrl
and
test
xchg
out
test
shrb
jbe
mov
daa
clc
sub
cwtl
adc
xchg
push
sbb
out
out
sahf
das
pop
cli
xchg
mov
dec
fwait
mov
or
jns
dec
mov
out
mov
call
mov
adc
andl
andps
shl
jns
mov
add
loope
push
xor
fadd
and
mov
dec
push
iret
xor
or
adc
sub
sbb
les
and
mov
adc
adc
pop
scas
popf
xchg
push
add
push
mov
jp
xorb
into
inc
jb
or
nop
lds
push
lret
out
pop
sub
sbb
add
lods
lea
inc
jge
sbb
shrb
pop
mov
jbe
or
aas
loopne
imul
adc
orb
dec
cmp
shrl
into
pop
fistl
mov
mov
jae
mov
mov
enter
sbb
mov
and
sub
pop
pushf
jg
dec
mov
xchg
out
adcb
jno
movsb
mov
mov
lea
xchg
or
jne
mov
fsubrl
rolb
pop
ficoml
xor
push
cmp
xchg
cwtl
sbb
dec
jp
scas
add
sbbb
test
pop
inc
jecxz
sub
xchg
mov
cmp
in
cwtl
xor
imul
test
shrb
cmp
add
sti
cmp
sbb
sub
add
pop
inc
pushl
in
sub
addl
xor
daa
sbb
lods
mov
repnz
add
cmp
sar
lds
testl
cwtl
mov
cmp
rolb
icebp
lds
mov
popa
pop
pop
cli
push
jb
xchg
dec
and
cltd
fisubs
xchg
outsl
mov
xchg
clc
rolb
fs
shll
fsubl
movsl
dec
test
inc
push
outsb
jle
fcomi
pop
ret
push
aad
push
aaa
sbb
imul
sbb
add
popf
iret
orb
lcall
mov
sbb
std
jne
dec
lret
cmp
sub
in
jmp
imul
fnstenv
aaa
fdivl
push
mov
jns
orb
data16
cs
stos
or
xchg
mov
and
test
xor
insl
sub
std
push
cld
inc
outsl
cmp
pop
fisubl
push
notb
loopne
mov
jae
push
push
dec
mov
hlt
outsb
test
mov
or
out
xorb
js
insl
push
addr16
and
inc
mov
inc
inc
pop
adc
cmp
or
push
int
stc
cltd
pop
mov
or
movsl
scas
call
jmp
ljmp
test
cmpsl
push
sbb
and
mov
loope
cld
push
and
add
add
inc
ljmp
ss
cltd
sub
push
pop
push
or
push
inc
out
pop
mov
cmp
adc
or
test
mov
std
cmc
xchg
add
xor
sub
or
inc
xchg
sbbl
push
roll
lock
adc
xor
pop
mov
adc
or
mov
gs
sub
jno
cltd
test
fwait
mov
jno
mov
inc
iret
jnp
movb
mov
jns
cmp
in
aaa
out
cmp
adc
out
jno
sahf
cmp
ja
xchg
inc
lahf
ds
pop
add
jg
rcrl
push
ljmp
in
ret
punpckhdq
or
xchg
stc
xor
scas
pop
mov
mov
or
push
push
sbb
adc
lock
pop
in
lods
imul
add
mov
pop
enter
out
jmp
aas
push
lds
hlt
cld
jg
xor
mov
pushf
fwait
dec
inc
jne
push
inc
in
inc
cvtps2pd
sub
mov
inc
mov
ficomps
fdivrs
cmpsl
mov
imulb
mov
in
out
jns
cmp
pop
lahf
xor
cwtl
icebp
xor
xor
adc
repnz
xor
outsl
cmp
dec
mov
mov
xchg
call
call
in
fnstsw
push
aas
leave
pop
pop
lahf
sti
mov
or
xchg
ret
mov
scas
xorb
out
adc
add
mov
push
pusha
sbb
in
and
sbb
and
mov
sub
test
in
ret
sahf
test
jno
mov
pushf
dec
je
dec
or
cmpl
cmp
outsb
add
push
pop
pop
and
mov
cmp
mov
addb
aad
xchg
pop
fists
daa
push
sub
and
lds
and
sbb
mov
mov
adc
inc
add
pop
in
mov
aad
xorb
popf
rolb
and
lock
inc
mov
roll
jnp
fldt
inc
xchg
add
push
pop
sbb
lds
inc
inc
popf
mov
pop
ficoms
pop
mov
mov
stos
mov
sbb
jo
clc
movsl
jo
das
out
sbb
mov
jae
add
ret
outsl
fistps
int
push
adc
cmp
ss
jmp
sbb
lahf
mov
cs
adcl
icebp
jg
pusha
sar
pop
add
pop
pop
cmpsl
rorl
xchg
xor
ror
cmp
cmc
xor
addb
push
clc
inc
mov
xor
ljmp
sub
cmp
and
mov
hlt
stos
popa
negl
frstor
testb
mov
movsl
jecxz
push
ja
sub
ss
jne
cmc
pop
xor
pop
hlt
jle
and
lahf
pop
or
push
sbb
outsl
sbb
jae
sub
push
jl
inc
rolb
clc
inc
or
loop
pusha
jg
ds
out
dec
xchg
mulb
jo
mov
insl
fadds
daa
mov
push
lret
test
nop
into
icebp
cmp
xchg
repz
lahf
sarl
outsl
mov
fstl
inc
cmp
mov
cmc
xchg
lahf
push
ljmpw
rcll
outsb
cmp
and
dec
insb
mov
push
or
jmp
stos
ret
loopne
outsl
jne
mov
js
pmulhw
add
sub
cmp
shlb
aam
jl
mov
ud1
push
movsl
and
cmpsb
out
or
jmp
push
push
pop
iret
inc
inc
xlat
sub
mov
shlb
sar
test
cmovbe
push
fistpll
push
lahf
pushf
push
fimull
mov
pop
out
decl
mov
inc
push
lods
ret
dec
aaa
xor
jecxz
dec
rcll
ss
mov
xchg
add
mov
in
movsl
inc
int3
jge
mov
jecxz
pop
push
pop
jp
sub
ljmp
insb
out
jb
lods
jne
data16
mov
mov
pop
dec
sahf
ret
sbb
fisubl
daa
repz
pop
xchg
lahf
and
popa
cmp
xchg
and
mov
je
or
dec
add
insl
arpl
xor
aam
insb
mov
cmpsb
mov
mov
jecxz
test
fs
mov
ds
or
cmp
sub
test
mov
xlat
sub
xchg
lret
loop
and
mov
pop
adc
mov
call
enter
jb
cmp
jg
repnz
mov
imul
cltd
test
and
cmp
icebp
pushf
aad
add
xorl
push
push
xor
mov
sub
fistpl
mov
rcr
test
scas
jnp
xchg
jge
push
sahf
cwtl
lock
mov
add
sbb
sbb
outsb
and
xchg
ret
stc
cwtl
ret
xor
int3
pop
add
push
stc
inc
fstpl
insl
dec
subl
xor
stc
scas
and
adc
movsl
and
inc
sub
xlat
sbb
and
test
mov
dec
faddl
sub
jl
inc
int
or
xlat
sbb
jbe
pop
mov
mov
add
sbb
pop
mov
push
mov
hlt
test
mov
movsl
cmpsl
dec
jmp
cli
stos
addr16
push
xchg
stos
dec
sub
cmc
lock
in
jecxz
adc
scas
lds
dec
ds
bound
and
add
push
adc
imul
mov
clc
das
cs
es
out
bound
mov
scas
cmp
sarb
lock
test
mov
push
mov
lret
pop
sahf
inc
pop
mov
ljmp
mov
jg
xchg
pop
jmp
imul
pop
dec
pop
daa
inc
loop
scas
pop
sbb
inc
test
gs
test
mov
into
sti
in
cmc
push
lret
pop
int3
testb
notb
imul
push
xor
popf
outsb
or
sahf
sbb
icebp
or
popf
push
cli
jae
cmpsl
cmc
in
adcl
popa
cmp
pop
dec
cltd
fists
gs
aaa
or
sub
jl
dec
sti
fisubrs
ds
sbb
sub
push
mov
jae
inc
lock
push
jns
pop
xor
push
std
cmp
out
mov
xchg
mov
ds
mov
mov
out
lret
loopne
out
push
or
iret
in
mov
jne
adc
data16
int3
inc
dec
inc
mov
or
inc
adc
incl
sbb
loopne
cmpb
xchg
cmpsl
mov
mov
push
shl
or
ret
adc
adcl
add
add
ds
xor
test
nop
xorb
pop
dec
repnz
xor
adc
and
cmp
leave
gs
inc
movsb
test
dec
dec
xchg
or
jp
jle
in
idivb
cmpb
cwtl
data16
aam
fnsave
mov
push
rcll
pop
add
inc
inc
sbb
fnstenv
pop
in
mov
cmpsl
xchg
in
inc
mov
or
pop
mov
and
xchg
gs
dec
push
push
or
je
out
outsb
data16
aaa
rol
orl
mov
mov
nop
mov
fadds
test
jns
or
adc
popf
sub
cld
inc
into
pushf
ss
pushf
sti
mov
mov
xorb
jle
adc
mov
hlt
scas
in
mov
out
jb
aaa
jmp
cmpsb
std
sbb
jle
bound
mov
mov
xchg
das
int
push
mov
add
xor
faddl
lret
mov
shl
popa
sahf
push
inc
push
mov
xchg
imul
cmpsl
dec
inc
call
ds
test
sub
rolb
mov
cli
lods
inc
divl
out
mov
push
fldl
inc
push
aaa
push
push
out
push
data16
leave
int
pop
jl
adc
sbb
sub
outsl
xchg
or
or
lods
or
inc
xlat
push
cwtl
xchg
cltd
fcomps
mov
fstps
dec
xchg
into
std
sbb
mov
ljmp
enter
mov
out
jle
mov
jo
adc
adc
xchg
fcoms
stos
icebp
or
mov
stos
and
movsb
xchg
and
aas
mov
ss
stc
pop
movsl
movsl
push
pop
shrb
or
mov
sahf
icebp
in
jl
in
mov
xchg
icebp
fbstp
push
aad
cmpsb
mov
roll
in
cmc
mov
cmc
push
int
pop
xchg
mov
add
adc
push
lods
aam
inc
pushf
dec
imul
adc
and
clc
and
xchg
xchg
jo
jmp
pusha
shr
mov
dec
inc
xchg
mov
sub
aas
mov
sub
jp
push
daa
or
xor
in
add
xchg
mov
sub
ffree
sub
fstl
xor
or
jne
aam
loope
jp
push
inc
inc
xchg
imul
cmpsb
cwtl
enter
loopne
mov
stos
and
lret
and
fwait
aas
and
test
ficoms
ja
jmp
fcmovnbe
lret
pop
jb
cmpsb
and
sbb
popa
or
leave
lcall
movsb
loope
out
enter
test
push
xchg
xor
test
add
mov
scas
and
jp
fisttpll
push
sarl
sbb
icebp
inc
push
repz
push
jne
hlt
aas
xor
xor
and
jmp
sub
lret
jb
pusha
sub
cmp
sarl
popa
out
ljmp
adc
cli
xor
and
scas
cmp
jl
fcom
push
push
shr
shrl
pop
pop
jmp
pop
pop
add
out
mov
sub
mov
sbb
leave
xchg
and
js
push
dec
sahf
jb
shrb
mov
out
outsl
xchg
repnz
mov
jnp
lahf
fisttpll
mov
fcomps
movsb
arpl
insl
loope
adc
and
addr16
cmp
cld
cltd
adc
out
mov
les
xor
adc
fdivrs
mov
fldl
mov
das
dec
out
loope
bound
das
test
pop
mov
pop
js
adc
and
xchg
push
inc
fsubrl
stos
mov
sahf
sub
mov
lods
sbb
in
loopne
arpl
out
dec
push
ljmp
mov
inc
shlb
pushw
pop
scas
sub
negb
es
loope
cmpsl
fsubrs
sti
repnz
xchg
dec
ss
fists
ret
or
mov
jns
xchg
xor
mul
jge
pop
inc
xchg
or
mov
xor
fcomps
sti
clc
loope
lds
push
mov
adc
sbb
test
das
sub
into
sarl
ss
add
push
aas
les
cmpsl
cs
jb
test
dec
movl
in
xchg
pop
nop
xchg
cmpsl
int
sbb
dec
in
or
ss
leave
pop
pop
je
fsub
add
test
pop
in
inc
leave
mov
jl
sub
mov
jo,pn
cld
out
sbb
sahf
mov
fimuls
mov
jns
pop
adc
pop
pop
mov
sub
jno
cmpsl
xchg
in
enter
push
push
push
fwait
repz
push
cmp
pop
cmp
movsl
push
jge
xchg
sub
fwait
add
jns
fstl
mov
scas
add
clc
or
and
roll
inc
cs
dec
mov
pop
adc
add
and
cld
xchg
cmp
xor
add
out
jne
scas
decl
into
popf
inc
sbb
sbb
xchg
jae
sub
shl
pop
cs
sub
or
jle
sub
nop
and
or
mov
lcall
stc
data16
xchg
mov
lock
adc
mov
sbb
in
cmp
sub
xchg
push
sbb
cmc
cmp
and
jmp
adc
push
popf
stos
or
sub
pusha
mov
mov
aas
sbbb
cmp
outsb
std
js
xchg
ja
mov
mov
mov
xchg
test
inc
lds
adc
int
dec
sub
or
lret
in
cmp
xor
fmulp
dec
jne
mov
mov
adc
mov
cli
lcall
add
lcall
mov
shrl
and
cltd
jne
sbb
sahf
xchg
ja
imul
push
cmp
dec
xchg
imul
mov
dec
shrb
pop
cli
inc
pushf
pop
cmp
mov
shlb
movsb
or
js
imull
aam
into
dec
orb
mov
imul
fcmovne
enter
inc
int
stos
loopne
sub
int
out
mov
shlb
repz
pop
sub
mov
lea
sub
jmp
mov
das
orl
push
test
mov
out
das
push
inc
xor
daa
pop
cvtpi2ps
int3
add
jg
add
test
ja
cmp
aad
xchg
test
push
mov
xor
xor
int
data16
hlt
cmpsb
daa
push
dec
pop
lret
lods
push
stc
addl
lods
rcll
loopne
imul
mov
and
jns
lcall
int3
pop
mov
fwait
pop
push
mov
pop
clc
js
adc
sti
xor
or
cmp
pop
arpl
outsb
out
scas
scas
and
xchg
fwait
pop
push
in
dec
cmp
or
push
or
push
ret
jno
mov
cli
jmp
mov
inc
in
lock
push
mov
out
cmp
shrl
fadd
mov
rcr
out
xchg
mov
xchg
mov
mov
mov
mov
dec
inc
mov
out
incb
gs
dec
xor
xor
jnp
sbb
xchg
push
aad
push
pop
pop
loope
push
aas
loopne
lds
mov
test
push
fldl2e
bound
shll
jb
mov
inc
loope
sub
xor
xor
xchg
rcll
leave
je
add
ja
mov
in
or
add
ljmp
andb
xor
and
add
sub
fwait
out
adc
cmp
dec
bound
add
xor
sti
aad
pushf
bnd
sarl
pop
sub
in
call
jl
jle
pop
fdivrl
je
xor
jg
stc
shrb
cwtl
mov
adc
pop
jns
out
jne
xchg
out
xor
sub
push
adc
into
or
jle
dec
scas
roll
mov
sub
and
or
mov
fbld
lcall
int
dec
dec
sbb
into
outsb
popf
mov
test
arpl
mov
jmp
mov
mov
clc
jb
xor
lret
push
mov
mov
ret
cmp
cld
bound
sbb
cmp
add
clc
xchg
subl
or
scas
and
mov
mov
in
and
rcll
and
lret
test
dec
mov
mov
pop
dec
push
mov
inc
lahf
out
push
sbb
xchg
xchg
aas
adc
in
stos
add
movsl
ljmp
and
inc
sbb
xchg
mov
hlt
aas
jle
out
cltd
cltd
sub
in
dec
mov
xchg
jno
dec
nop
lret
cwtl
cmp
lds
xor
or
das
jp
sbb
mov
cmp
mov
xlat
pop
lods
push
inc
cmpb
mov
imul
adc
test
pop
ds
sbb
xchg
addr16
xchg
data16
sbb
mov
xor
inc
cmp
js
push
jnp
into
ret
lcall
dec
jno
hlt
movsl
notl
push
es
jns
movsl
push
ret
add
out
mov
andb
mov
arpl
out
pop
dec
cltd
insb
or
cli
sbb
lds
xchg
es
mov
mov
pop
add
xchg
aas
jmp
leave
ljmp
int
add
xchg
mov
jecxz
lea
enter
jb
jecxz
jmp
pusha
sub
inc
sbbb
adc
popf
or
leave
mov
sub
inc
iret
aam
jae
lret
sarb
xchg
xor
and
and
pop
jns
in
inc
cmpsb
mov
jns
leave
jbe
dec
iret
sub
jle
popf
test
mov
mov
sub
cmp
cmpsl
shrl
sahf
rcrb
lds
aaa
adc
jg
xor
ds
orl
or
push
lret
mov
adc
mov
mov
lods
dec
in
pop
aam
cmovae
add
add
jne
les
sub
rorl
mov
jbe
inc
roll
inc
adc
and
sbb
mov
jle
jo
push
jno
in
cmp
and
xchg
test
dec
inc
pop
xor
cli
mov
push
cmp
int3
dec
fnstenv
mov
mov
aas
xchg
cwtl
lret
pop
sub
push
mov
mov
push
jbe
repz
and
jecxz
and
fucomip
pop
jmp
enter
pop
mov
cmpsl
cld
adc
fs
pop
in
dec
ss
mov
cmp
lods
pop
sbb
dec
stos
les
cmpsl
add
sub
into
xchg
sbb
cmpsb
icebp
dec
movsl
add
sub
mov
imul
iret
mov
rcrl
mov
mov
push
movswl
enter
push
rcr
add
mov
aam
adc
iret
inc
xor
out
test
ret
push
and
adc
adc
mov
cli
ret
xchg
ljmp
iret
pop
xor
pop
stos
out
xor
add
sub
idiv
pop
xor
imull
mov
test
ficompl
outsb
push
inc
sbb
push
pop
mov
sub
outsb
dec
test
pop
push
shll
push
adc
shlb
jbe
sbb
add
data16
int
andl
inc
add
inc
es
fcmove
jge
xchg
loop
jmp
jnp
das
popf
push
movsb
push
jp
push
xor
fstpl
add
data16
cmc
outsl
and
mov
inc
xchg
pop
sub
test
sahf
push
repz
iret
sbb
popa
and
repnz
out
mov
mov
cltd
sub
test
jg
xchg
mov
mov
lret
aas
test
std
in
fstpt
cmpsl
stos
dec
pop
fwait
cmpl
aam
xor
jmp
pop
int
enter
jmp
push
dec
mov
add
clc
sub
fadd
fldenv
lcall
mov
js
cs
sub
add
fsubrs
sub
xor
mov
in
sub
mov
and
jg
mov
push
mov
push
mov
pop
mov
add
pop
xor
iret
mov
mov
pop
cwtl
push
dec
jmp
xchg
xchg
inc
popa
and
divl
insb
lea
clc
in
mov
sbb
aad
orl
push
das
test
mov
cmp
shll
iret
xor
ljmp
mov
mov
and
pusha
out
sahf
or
mov
testl
pushl
sub
cld
rcrl
push
jp
pop
inc
test
dec
je
pop
or
movsb
movsl
fdivrs
cwtl
cmp
sub
xchg
fs
mov
sub
inc
sbb
ss
xor
mov
push
icebp
mov
add
add
ljmp
push
popf
imul
ficoms
mov
or
or
mov
jg
pop
xor
mov
pop
stc
sub
imull
mov
into
dec
dec
sti
nop
and
jne
cld
inc
call
mov
mov
hlt
push
mov
outsb
mov
daa
cmpl
ja
repz
push
into
cmpsl
out
jge
icebp
pop
cmp
mov
lock
divps
sbb
test
cmp
lock
mov
in
in
mov
lods
outsb
xor
cli
sbb
call
aas
lds
or
lret
in
mov
out
in
sahf
sub
ret
push
mov
pusha
movsb
lods
sbb
xor
arpl
mov
std
push
js
mov
gs
data16
dec
ss
jbe
pushf
inc
ljmp
xchg
sub
call
and
imul
flds
fisttpl
xchg
mov
adc
or
ret
dec
sbb
mov
pop
mov
cmp
jnp
dec
pop
aad
mov
or
mov
inc
xchg
inc
cs
inc
insb
ds
test
test
mov
adc
inc
mov
inc
inc
clc
sub
mov
sub
push
into
cwtl
ret
dec
jne
and
mov
inc
mov
adc
mov
mov
adc
dec
mov
arpl
mov
pop
fimuls
js
movsl
add
dec
popf
sub
jns
out
xor
sbb
or
pop
out
pop
adc
ja
cmpsl
jge
enter
pop
sbb
mov
dec
outsb
into
mov
jmp
xlat
mov
adc
pop
and
lret
loope
xor
incb
insl
lcall
icebp
pop
push
jp
in
dec
cwtl
out
subb
or
push
lock
jg
pop
addr16
adc
lcall
and
sbbl
mov
cltd
nop
add
cmp
loopne
cmp
dec
cltd
jle
xchg
jns
jecxz
push
cmc
in
sub
stos
inc
shrl
decb
pop
sbb
jbe
jae
mov
pop
jbe
clc
decb
mov
inc
test
cwtl
xlat
daa
xchg
std
movsb
movsb
mov
mov
out
mov
aas
fstpl
in
jae
push
pusha
sarl
or
dec
aaa
pop
xchg
sahf
shll
sub
fidivs
jecxz
add
sub
xor
push
adc
xchg
cmp
mov
jns
cld
call
push
clc
adc
or
sub
xchg
sub
sub
inc
pop
pushf
mov
mov
ret
dec
push
pop
cmc
pop
addr16
push
sub
cmp
sub
lea
pop
sub
imul
pop
mov
xchg
mov
cltd
push
jnp
pop
sub
xchg
movntq
add
ljmp
jns
xlat
stos
sar
cmp
cwtl
std
add
sub
scas
add
clc
sub
mov
insl
or
or
shll
mov
es
sub
addr16
mov
loope,pn
nop
repz
xchg
ljmp
cwtl
stos
pop
push
fnstcw
sti
in
lods
sbb
and
mov
jle
jo
ss
dec
cmp
xchg
cmpl
mov
fisubl
pop
scas
aam
fisubrs
xchg
ret
jne
xor
adc
cwtl
or
sub
stc
mov
scas
das
xrelease
cs
je
sahf
xor
std
xchg
lcall
mov
cld
jmp
sub
sub
sbb
insb
cltd
cmp
test
mov
fstps
add
stos
sub
in
sbb
inc
mov
sub
mov
jmp
loopne
inc
jbe
fwait
pop
mov
xchg
rclb
clc
loope
mov
xchg
xor
dec
into
lock
dec
and
xorb
mov
cld
es
stos
shr
js
push
sbb
mov
and
cmp
rolb
aam
out
addr16
mov
mov
je
mov
sti
mov
and
loop
aam
jne
xor
rcrb
movsb
and
mov
mov
inc
mov
inc
cli
inc
xchg
mov
lret
cmpsb
repnz
dec
test
or
stos
fwait
inc
movsl
in
mov
enter
add
cmp
popa
adc
fcomi
mov
or
sub
loope
cmp
mov
mov
mov
push
jo
mov
add
dec
add
test
je
popa
pop
inc
cmp
mov
icebp
mov
xchg
outsb
jp
rcrl
xchg
orb
repnz
mov
lods
cmpsl
push
in
mov
sub
nop
insb
rcrb
xorl
jg
push
dec
xchg
in
xor
jle
pop
loop
adc
shlb
lds
xor
add
mov
add
movsb
imul
sub
cld
pushf
adc
scas
shlb
inc
pusha
faddl
inc
sbb
jae
rol
push
ja
int
ds
xor
notl
jle
jnp
les
push
shll
cwtl
or
jo
mov
out
xorl
pop
mov
fstpt
repnz
std
ja
push
daa
rcrl
in
cli
add
push
jo
cs
lea
clc
adc
push
push
icebp
xchg
into
ror
xchg
fbld
cmpsb
test
ss
mov
xlat
insb
sbb
jmp
in
orb
jge
jne
in
sbb
shl
push
jg
jmp
call
pop
jle
les
push
mov
or
adc
add
inc
jecxz
sub
add
aam
inc
jne
stos
out
jo
xchg
loope
and
cmpsl
pop
shlb
leave
jnp
add
je
js
in
outsb
repz
inc
push
sbb
imul
jo
enter
fcom
cs
dec
lds
jno
xchg
xchg
ja
popl
pop
inc
inc
pusha
push
addb
mov
inc
fcompl
adc
enter
aas
sar
mov
out
mov
ret
frstor
jmp
das
outsb
dec
int
sbbl
mov
or
xchg
loop
mov
stos
add
inc
mov
into
outsl
and
test
insl
jns
clc
outsl
sbb
scas
push
das
out
sbb
flds
jp
cs
movsb
mov
inc
or
inc
add
orb
les
incb
out
add
dec
push
call
hlt
add
jb
cmpsl
xor
push
pop
sar
cmp
or
dec
jno
pop
mov
xor
shlb
adc
aad
ret
fwait
dec
sub
xchg
imul
sti
mov
adc
dec
inc
mov
lahf
jp
out
inc
call
add
sbb
fisubs
test
pop
repnz
mul
shlb
pop
sub
and
lock
mov
or
jle
pop
and
jmp
push
mov
xor
mov
xor
add
imul
enter
sub
test
movsb
cmp
mov
sub
fisttpl
shrb
pop
adc
iret
add
out
xchg
mov
mov
cmp
xchg
arpl
dec
roll
scas
push
iret
std
popa
xchg
dec
pop
and
loope
movsl
jno
movsb
push
pop
or
mov
insb
imul
xchg
dec
lahf
lods
mov
inc
and
mov
jns
or
mov
arpl
es
mov
mov
dec
dec
loope
lods
fiaddl
das
xchg
xchg
in
test
mov
stc
inc
pop
loopne
or
rorl
sub
popf
sub
inc
lcall
std
mov
in
mov
rorb
sbb
rolb
test
xchg
mov
sub
inc
jge
adc
push
loope
daa
in
insb
lods
pop
cmpsb
outsl
xor
mov
std
mov
cmc
icebp
dec
push
adc
xor
lcall
xor
inc
or
lock
cmpsb
mov
xchg
and
push
mov
mov
aaa
fstpt
inc
out
adc
pop
repz
mov
lret
popf
loope
push
aas
fldl
fs
loope
fwait
scas
cmp
add
mov
xchg
jne
cmp
xor
movsl
mov
in
cmpsb
lods
sub
jo
bnd
sub
jae
xchg
push
in
pop
adc
sbb
in
xchg
or
clc
mov
jmp
push
jbe
add
sahf
dec
sbb
add
sbb
ret
aad
push
aaa
mov
pushf
pop
cmc
scas
or
add
out
pop
shlb
gs
sar
jbe
addr16
les
jne
mov
push
aas
aad
pop
std
jle
jmp
repz
aam
pop
imul
iret
mov
push
test
call
mov
incb
movsl
or
push
xor
and
scas
test
mov
test
pop
xchg
insb
sbb
cmp
sub
call
cmpl
sbbb
dec
out
mov
mov
inc
add
fisttps
dec
scas
or
out
sti
push
lods
sti
insl
inc
xor
add
inc
dec
cld
lock
int3
scas
test
addr16
jae
or
xchg
and
mov
jns
imul
cmc
cli
fdivrp
and
outsl
shlb
lret
fcompl
mov
cltd
jnp
das
je
pop
cwtl
and
push
shl
xchg
cmp
in
iret
jp
fs
jmp
pop
mov
daa
ljmp
nop
mov
pushf
jg
dec
fucomi
popl
daa
and
testb
push
loop
or
sub
sub
jbe
xor
rorb
das
cmp
or
lds
ss
or
inc
mov
add
orl
xchg
push
lea
push
add
push
sbb
icebp
sbb
ficompl
or
mov
das
lret
sahf
cmp
mov
mov
pop
add
add
adc
push
mov
int
add
and
sbb
outsl
js
sub
test
push
das
popf
or
adc
push
test
outsb
inc
push
sub
pop
add
jns
repz
sahf
xor
inc
outsb
mov
sbb
lret
gs
dec
cltd
pop
mov
fstl
xor
mov
cltd
add
or
pushf
dec
sarl
sbb
bound
pushf
jae
sbb
in
add
sub
fsubrl
ss
adc
mov
xor
int3
push
scas
dec
into
cmp
mov
sbb
dec
movsb
out
jg
in
pop
and
add
fwait
mov
testl
push
sub
or
sbb
shll
cltd
pushf
outsl
xchg
clc
jecxz
jb
add
push
repnz
xor
enter
pop
push
mov
add
mov
add
xchg
pop
rorb
aas
js
jae
push
and
mov
mov
pop
or
pop
test
xchg
sahf
or
adc
and
int
imul
dec
fs
jg
push
push
aam
scas
ss
ficoml
cmp
xchg
std
xor
out
pop
test
xlat
mov
call
mov
stos
in
adc
fsubl
gs
push
idivb
jecxz
ret
sub
mov
sahf
add
xchg
pop
sahf
mov
daa
sbb
mov
mov
jb
xor
loope
cld
popa
adc
mov
hlt
push
data16
jle
rcrl
sub
out
imul
dec
gs
pop
mov
and
jb
lods
cwtl
sbbb
cmc
xchg
lods
loope
aaa
mov
sbb
mov
pop
and
iret
jg
push
mov
pop
pop
xor
ret
mov
inc
push
push
xchg
or
cmc
ljmp
mov
outsb
cmp
fldcw
das
dec
mov
inc
xchg
out
push
xor
out
into
loopne
aam
cs
arpl
out
jae
jne
mov
sub
idivl
mov
cmpsb
das
jmp
stos
insl
xor
dec
pop
jb
rcr
or
mov
movl
lods
mov
sbbb
ds
pop
jg
in
leave
sub
data16
comiss
imull
jbe
je
mov
xchg
jo
add
jno
mov
imul
shrl
adc
cwtl
aas
cmpsb
jne
add
ljmp
inc
push
fucomip
push
push
ljmp
pop
adc
test
adc
dec
or
in
ret
sub
hlt
pop
push
ret
jno
mov
int
mov
sub
fisubrs
and
ret
fcmovnb
jne
mov
movb
xchg
xchg
adcl
scas
push
nop
mov
adc
test
inc
imul
loope
dec
sbbb
ret
pop
mov
mov
rcrl
sahf
ja
mov
aad
sahf
adc
xchg
or
jecxz
xchg
es
mov
je
mov
cld
hlt
dec
xchg
jle
fwait
nop
subl
sub
data16
cwtl
xchg
pop
test
stc
ja
jns
xchg
add
xchg
cmpl
std
shlb
inc
aad
aad
mov
ud0
sahf
das
aam
ja
stc
lds
mov
sub
in
in
cmp
outsl
and
fiaddl
fadds
sbb
rolb
movsl
outsb
sahf
adc
jae
scas
mov
into
imul
push
cmp
repz
mov
arpl
dec
outsl
cmpsl
call
shl
xor
xchg
adc
popf
pop
push
adc
sbb
ret
out
mov
imul
movsl
xchg
shrl
lds
in
movsb
mov
outsl
mov
jo
in
outsb
cmp
aaa
addl
scas
ficomps
add
lods
mov
cmp
rorl
fwait
aas
and
fisttpll
jne
pop
sub
cmc
xchg
xchg
xchg
movsl
push
xchg
arpl
ror
xor
jmp
mov
push
fldcw
leave
out
pop
leave
jno
addr16
and
arpl
add
repnz
mov
imulb
mov
in
fnstcw
jmp
dec
test
fimuls
push
fisubs
xchg
xchg
mov
cmp
dec
outsb
sub
add
bound
mov
inc
or
aaa
mov
inc
aad
lods
stos
jge
push
push
nop
in
int
mov
outsb
dec
shlb
rclb
xor
int3
call
ds
push
das
lds
fs
push
ljmp
inc
dec
or
dec
mov
notl
into
fists
mov
xchg
or
jae
shlb
in
dec
mov
xchg
arpl
inc
xchg
inc
cltd
fstps
cmp
inc
sbbb
add
mov
sbb
fsubp
sarb
cmc
in
xchg
xchg
pop
mov
xchg
mov
mov
js
lods
int
rorb
enter
mov
stos
jg
lret
sbb
sub
or
push
in
fisubrl
jge
setbe
sub
adc
or
ret
loope
scas
xor
lods
mov
push
leave
in
cmp
ds
out
xchg
sbb
movsl
dec
fs
ret
in
pop
push
or
sbb
push
sub
sub
popa
mov
fsubp
sahf
call
xor
mov
xchg
test
loop
fsub
cmpsl
pop
push
jbe
aam
push
scas
jg
ja
adc
or
jmp
dec
shlb
ret
in
pop
cmp
or
sub
lret
sub
mov
and
ljmp
lock
sub
mov
jp
push
data16
pop
aam
imul
ljmp
mov
testb
leave
ja
fidivrs
pop
or
cwtl
sub
push
push
dec
out
add
inc
cmpsb
sub
mov
popa
test
mov
jl
adc
cli
add
in
and
mov
test
sbb
cmp
call
lret
test
gs
sub
es
cmp
cmp
loop
in
icebp
dec
cwtl
mov
xchg
int3
out
xchg
jnp
test
push
lret
adc
fcmovne
push
fists
jb
pop
xchg
jle
inc
jno
pop
mov
inc
and
enter
xor
xor
pop
xor
into
test
mov
int3
loope
daa
cs
push
cmc
lods
add
mov
rcl
les
push
xchg
out
jae
inc
test
outsl
insb
imul
test
js
push
enter
stos
sahf
xor
dec
mov
xor
xchg
dec
fdivp
sub
jo
into
loope
pop
xor
test
cmpsb
sub
push
jb
dec
pusha
mov
in
int
imul
ds
icebp
inc
mov
pop
jge
cmpsl
or
adc
pop
outsl
push
push
sti
or
repz
adc
hlt
jmp
mov
and
xor
push
adc
les
adc
inc
sbb
fsubs
loopne
xchg
xor
push
xchg
stos
loopne
push
pop
insb
add
lock
jmp
lock
jnp
pop
inc
insb
nop
cmp
cmp
stos
test
and
jne
cmpsl
ljmp
dec
aaa
cwtl
stos
lret
jnp
lea
add
adc
pop
and
imul
in
cmp
push
pop
pop
jne
pop
mov
stc
stc
popl
mov
es
and
cmpl
pop
inc
push
int3
cmp
xchg
jmp
and
add
roll
or
add
mov
mov
adc
jg
and
movl
cmp
gs
sub
sub
test
mov
xlat
stos
mov
jg
pop
icebp
aaa
nop
loop
inc
hlt
cld
cmpsl
pop
aad
bound
inc
jecxz
fildl
lret
push
or
push
mov
test
aaa
sbb
lret
pop
adc
scas
jnp
loopne
sbb
in
push
inc
dec
subb
pop
pop
addr16
xchg
lret
cmpsb
xchg
mov
loopne
outsb
fwait
or
sbb
xchg
imul
mov
daa
sub
lret
or
rcr
enter
lods
in
call
dec
ja
shr
inc
daa
lods
sarl
shl
js
or
rclb
jbe
adc
lods
icebp
scas
insb
mov
sub
pop
fsts
adcl
push
xchg
sbb
bound
dec
dec
hlt
lods
inc
inc
shl
xchg
loop
ret
mov
jns
or
dec
popf
inc
push
scas
out
movsb
sub
das
test
mov
leave
cmp
xor
outsl
inc
aas
mov
dec
mov
push
cmp
insb
imul
outsl
js
jge
fs
notb
mov
jns
sub
jge
scas
xor
push
cmp
notb
mov
jp
mov
add
mov
insb
sub
sbb
sbb
jns
jns
xchg
cmp
arpl
mov
in
pop
push
nop
popa
jnp
rcrl
xor
cmpsb
add
mov
cmp
mov
xor
mov
leave
push
les
arpl
fidivrs
scas
push
jno
pop
loop
mov
test
dec
iret
in
insb
rcr
loop
fsubr
ss
add
mov
push
lds
add
int3
jmp
gs
mov
scas
stos
push
xchg
les
or
and
cs
popf
mov
test
pop
fisubs
mov
mov
bound
mov
fisubrl
mov
mov
adc
js
int
cmpsb
movsl
movsl
aad
and
popf
out
hlt
dec
fwait
cmp
pop
jp
cmc
push
imul
fisubl
negb
xor
pop
popa
pop
aas
jnp
iret
adc
or
addr16
xlat
out
push
pop
imul
jp
cwtl
lods
xor
icebp
mov
rcr
lret
lock
mov
sub
aad
pusha
data16
push
mov
dec
frstor
shll
or
xchg
push
cmpsb
and
or
daa
cmp
and
jb
js
pop
cwtl
xor
xchg
push
stos
jge
dec
lds
and
mov
xor
mov
imul
inc
inc
into
jo
add
jp
out
pop
shlb
test
and
xor
testl
cltd
inc
jb
das
leave
push
mull
mov
rorb
push
fcomps
out
or
fsubs
pop
push
sub
cmp
and
push
leave
mov
sub
mov
or
mov
jmp
add
mov
call
fcomi
and
push
sbb
int3
in
test
xor
push
adc
inc
push
loope
les
jo
xchg
push
pop
cmp
mov
fcoms
sub
sub
bound
add
enter
fisubl
ficoml
push
arpl
push
add
cmp
adc
or
decl
outsl
mov
sahf
in
and
test
test
sub
push
lods
pop
mov
lea
shlb
in
ret
jmp
jge
xlat
daa
mov
cltd
nop
in
pushf
mov
xchg
iret
ret
mov
and
ficomps
ficompl
cmp
add
xor
jno
jl
mov
mov
out
add
dec
add
stos
mov
xor
sbb
jae
sbb
std
cli
dec
loopne
popa
adc
and
into
nop
inc
mov
push
mov
movsl
popf
pop
push
lds
pushf
adc
imul
cmpsl
jmp
hlt
push
aam
mov
sbb
jae
je
addl
les
dec
fimuls
outsb
mov
loopne
scas
pop
cmpsl
movsl
ss
inc
repz
andl
fucom
or
fldenv
movsl
mov
jo
jnp
sbb
push
repz
dec
inc
mov
ljmp
lcall
fisubs
sbb
dec
or
mov
ds
push
jmp
sub
xchg
sbb
mov
pop
dec
lods
xlat
into
mov
test
fnsave
sub
dec
jno
xchg
sub
mov
or
pusha
repnz
cmp
ror
xchg
push
stos
push
movd
jmp
in
sbb
into
dec
pop
push
insl
add
js
dec
out
mov
push
inc
mov
pusha
mov
imul
or
push
push
push
jmp
pop
push
jle
inc
lcall
inc
lods
sbbb
xor
sahf
loope
aam
mov
pop
cld
shl
dec
add
xor
dec
xchg
mov
pop
add
loop
dec
and
cltd
push
xchg
clc
mov
pushf
adc
add
fldenv
ja
push
test
xchg
enter
xorb
gs
ret
mov
lahf
push
and
orb
push
jo
das
and
std
outsb
gs
pop
lahf
mov
fidivrs
fcom
fs
hlt
mov
jge
subl
push
das
push
or
daa
in
inc
add
call
rcl
repnz
and
and
mov
shr
cmpsl
jno
dec
xchg
es
test
cmp
jmp
cltd
stc
sub
mov
cmp
pop
dec
xchg
out
xchg
adc
mov
mov
fwait
sub
or
insb
mov
cwtl
mov
sar
in
movsl
cli
jg
scas
adc
add
jp
dec
push
dec
inc
lods
or
xchg
aam
push
out
ret
mov
aaa
or
adc
xor
adcl
or
hlt
push
cwtl
mov
les
test
pop
adc
cmp
test
das
cmp
loop
mov
sub
xor
push
inc
or
or
fildll
les
jne
sbb
dec
movsb
adc
and
lahf
test
or
rclb
push
fisttpl
jl
xchg
fwait
cltd
icebp
leave
push
adc
fiadds
pop
leave
scas
loop
add
out
test
shl
rolb
outsl
sbb
xlat
filds
adc
pop
mov
xor
imul
in
les
push
add
repz
cmpsb
mov
adc
mov
push
sub
test
sub
scas
scas
push
clc
xor
push
mov
ds
mov
push
pop
mov
imul
xor
fcoml
ja
xchg
sarl
or
lods
pop
sub
push
or
repz
mov
stos
push
sar
sub
fwait
adc
push
pop
test
test
in
test
or
sahf
sub
mov
mov
adcb
and
je
jbe
out
xor
adc
jae
pop
sbb
sub
lods
dec
adc
into
test
sub
in
mov
pop
addr16
add
addr16
scas
icebp
das
push
nop
ret
loope
mov
mov
dec
xchg
sub
outsl
or
outsl
adc
push
and
sub
gs
jne
arpl
xchg
pusha
arpl
lods
dec
mov
in
popf
shlb
test
stos
lahf
jbe
inc
dec
fcoms
jae
jle
push
ss
pop
sbbl
push
pusha
idivl
loopne
xchg
adc
push
clc
or
xchg
lds
scas
je
bound
jmp
jns
adc
jp
fmuls
iret
mov
xchg
jnp
and
fnstenv
jae
into
repnz
cld
test
rcr
push
sahf
cwtl
pop
mov
mov
fwait
cmp
pop
mov
nop
sahf
cmp
frstors
repnz
jns
dec
adc
jp
out
push
inc
movsb
mov
jae
and
rcrl
pop
movsl
inc
pop
test
cs
icebp
icebp
pop
xchg
push
int3
cmp
push
rcrb
lods
arpl
arpl
pop
and
mov
push
cmc
scas
paddusb
xchg
jno
sarb
out
jg
out
jmp
mov
xchg
mov
mov
xchg
or
inc
xchg
sbb
dec
mov
outsl
sbb
cmp
std
stc
popa
div
jno
lods
jae
addb
jg
incl
jg
es
ret
xchg
stc
ljmp
xchg
out
add
inc
cmp
xchg
or
pop
jbe
xchg
sbb
out
call
addr16
mov
outsb
xchg
mov
push
sub
sub
and
dec
aas
clc
aas
test
rcll
adc
push
shll
or
cs
lret
das
dec
sub
lcall
fistpll
es
xchg
ret
mov
andb
pop
lret
les
movsb
dec
rcrb
shrb
push
sti
dec
adc
dec
push
mov
and
jmp
pop
lahf
dec
out
rclb
dec
mov
sar
test
mov
aas
or
inc
push
mov
cltd
pop
mov
dec
cmp
mov
pop
mov
jp
icebp
pushf
dec
clc
sub
xlat
aam
test
clc
jecxz
stc
outsb
push
in
test
jb
mov
add
cwtl
xor
mov
sti
sub
mov
xor
adc
insb
lahf
lret
dec
lods
jmp
sbb
pop
mov
shlb
ret
cmpsb
jecxz
push
mulb
adc
inc
xor
and
and
cwtl
icebp
inc
cmpsb
js
les
je
push
push
aaa
incb
and
xor
xor
lahf
xor
cmc
add
mov
pop
popf
shll
xor
sub
repz
adc
imul
sbb
sarb
out
lret
add
push
in
ljmp
sbb
movsl
insl
cmc
xor
push
pop
mov
xchg
aad
cmp
push
jle
repz
mov
ficomps
cmp
inc
or
mov
sbb
xorl
aam
shll
iret
fisttpll
sbb
mov
pushf
lcall
adc
out
cmp
ds
outsl
sub
dec
in
mov
or
xor
cmc
mov
pop
and
cmpsl
dec
and
stc
rol
jbe
jecxz
or
jp
pop
pop
std
pushf
movsl
dec
rcll
clc
push
dec
outsl
adc
es
mov
inc
or
sbb
fisubl
jge
mov
push
test
aas
mov
shrb
stos
test
sub
xor
mov
mov
aaa
movsb
xor
cs
cmp
adc
aas
call
sbb
and
scas
push
xchg
jns
adc
jg
arpl
out
cli
jno
aaa
pop
xchg
sti
lock
lahf
and
mov
pop
sbb
rolb
jl
xor
pop
mov
or
in
adc
testl
sub
sti
push
pop
enter
cli
lods
repz
popf
mov
mov
cmpsl
adc
and
cs
mov
mov
insl
jecxz
jae
outsb
std
and
or
cmp
es
scas
in
inc
clc
jge
sti
sub
and
lea
pushf
mov
inc
cltd
push
repz
btc
jmp
pushf
jmp
sti
mov
jecxz
dec
jbe
lahf
js
xchg
es
imul
orb
icebp
test
pop
push
lds
js
sub
ja
fidivrs
andl
adc
inc
dec
mov
bound
adc
cltd
xchg
cli
push
jno
mov
ret
repz
sahf
xchg
xchg
lods
cmp
pop
call
dec
bound
outsb
in
jnp
xlat
adc
aad
sub
sbb
sbb
flds
xor
sub
in
sbb
lods
mov
cmc
scas
mov
xchg
xor
dec
mov
iret
sbb
rclb
xchg
adc
movsb
dec
arpl
sub
neg
sbb
repnz
shl
push
popf
test
enter
lret
or
mov
data16
and
cltd
lret
leave
outsb
xor
and
loopne
mov
sbb
mov
add
xchg
bound
or
mov
xor
int3
mov
mov
sub
repz
dec
addb
dec
mov
ret
xor
lock
popa
mov
or
es
insl
in
mov
xchg
test
and
rolb
adc
pop
gs
cmp
jmp
test
into
in
fwait
sub
inc
mov
pop
add
push
stos
mov
and
jle
or
sub
int3
and
inc
inc
jnp
ljmp
aad
inc
ja
insb
cmpsl
and
inc
mov
sub
adcb
sub
xchg
call
lock
out
or
push
inc
add
sbb
dec
test
decb
jmp
pop
jb
aam
in
movsb
out
jo
dec
lods
cmpsb
enter
and
cmp
jl
mov
dec
ret
add
jmp
ss
repz
ret
xchg
lret
inc
mov
shrb
scas
mov
call
mov
out
push
pop
pusha
jl
bound
iret
mov
fcmovnbe
lret
dec
lahf
mov
pop
xor
cs
dec
out
mov
jne
lcall
inc
xchg
dec
pop
fidivrs
adc
test
rorl
imul
or
imul
cmp
ds
pusha
cmp
aam
lea
cmp
in
and
lcall
les
repz
add
cwtl
sub
fisubl
mov
mov
push
push
sbb
and
insb
jo
iret
xorl
imul
sbb
and
cld
jne
daa
sub
add
fiadds
icebp
push
rcll
sarb
mov
movsb
in
mov
mov
mov
push
xor
aam
insl
cltd
xlat
xchg
fadd
pop
add
add
and
jbe
sbb
cmp
push
mov
test
mov
test
lea
loopne
mov
cwtl
mov
fwait
jge
inc
mov
hlt
dec
stos
or
loopne
inc
jmp
insl
loop
mov
lds
fwait
mov
adc
jae
popa
add
push
cwtl
dec
cmp
xor
push
popa
fwait
mov
and
rcrb
call
sub
dec
pop
js
mov
inc
shr
and
rol
dec
mov
enter
mov
push
inc
rclb
pop
stos
scas
pop
lret
mov
cmp
sub
xchg
or
push
hlt
aad
nop
or
sub
movsb
inc
adc
jns
sbb
xchg
mov
cltd
fstpt
int3
xor
fistpl
mul
xchg
push
lcall
je
mov
mov
std
lods
pop
negl
mov
adc
add
and
test
adc
divl
sub
mov
mov
adc
cmp
shl
movsb
sub
or
jl
xchg
bound
adc
pushf
or
mov
out
xlat
cltd
add
cmpsl
xchg
pusha
stc
addl
mov
cmpl
jae
push
pop
or
dec
sub
inc
ret
int
or
push
xor
dec
xchg
ljmp
or
imul
iret
jge
dec
mov
lods
lret
add
pushf
adc
ss
or
cli
sub
pop
pop
mov
mov
lds
in
out
mul
and
mov
and
outsl
loop
leave
rolb
bound
mov
testl
popa
dec
pop
jo
pop
jnp
test
shlw
cld
fcmovnb
inc
mov
or
dec
test
mov
and
mov
and
pop
adc
ja
sahf
and
sbbl
mov
shl
mov
lods
sub
popf
out
dec
int
lods
dec
push
fwait
lcall
mov
cld
pop
inc
negl
inc
dec
insb
push
aaa
rcrl
lcall
insb
movsl
cld
test
mov
cmp
or
sarb
sub
xchg
adc
fucomp
inc
mov
repz
iret
jp
cli
xchg
and
cli
cld
gs
xor
adc
jle
aam
cmp
pusha
inc
pop
cmc
xchg
loop
int
mov
or
lret
dec
dec
push
inc
jne
rolb
addr16
mov
mov
icebp
jnp
add
shrl
pop
mov
das
adcb
push
pop
mov
jg
das
xchg
loope
icebp
into
pushf
mov
jb
add
cmp
fcompl
dec
jp
sub
sarl
or
jnp
push
aaa
cmp
pop
in
in
ja
cmp
jns
jl
stos
ret
add
mov
out
push
dec
test
lods
mov
mov
mov
and
ret
int
or
iret
imul
cmpsl
cwtl
and
ja
push
mov
mov
inc
jmp
xchg
xor
repz
inc
mov
and
and
xor
insl
sub
sub
inc
rorb
jge
push
lret
mov
loop
pop
das
mov
sub
rolb
xlat
cmp
inc
ffreep
cmpsb
mov
mov
jo
in
push
sbbl
adc
sahf
lcall
je
or
mov
lcall
push
je
mov
scas
pop
add
xor
mov
gs
loopne
jmp
roll
out
xchg
fwait
mov
jp
xlat
pop
pop
lret
jl
xor
or
add
cmc
inc
lds
jl
test
add
arpl
adc
mov
lcall
mov
std
movsb
std
inc
outsl
xor
pop
cmpsb
jmp
cmp
dec
pop
sahf
cmpsb
and
dec
sub
leave
mov
mov
std
xchg
add
xor
push
subl
popf
test
and
jo
mov
mov
or
or
sub
sarb
lret
fnsave
cld
in
sub
jbe
pop
pop
mov
imul
jae
jp
arpl
add
jge
push
pusha
scas
adc
sbb
fwait
pop
into
xor
and
push
jno
push
dec
pop
pushf
cmc
xor
in
icebp
push
movsl
mov
adc
stc
cmp
out
rolb
sbb
push
push
imul
sub
scas
dec
mov
arpl
rcrb
and
cmc
dec
pop
repz
push
jne
fbld
mov
cmc
jge
dec
sub
jge
jnp
jp
ret
insl
subb
cmp
cltd
test
jp
jl
xor
mov
jle
and
mov
lret
dec
fiaddl
push
adc
adc
lea
inc
xchg
sbb
cld
pop
mov
xchg
rcll
stos
ficomps
sbb
sub
jmp
push
cwtl
icebp
jecxz
lcall
mov
je
mov
test
std
mov
jb
into
test
popa
test
pop
repz
test
jmp
mov
daa
or
lret
pop
lods
and
xchg
mov
sbb
mov
fidivs
test
pop
jnp
stos
fstps
repz
jnp
or
repnz
aas
rclb
adc
jnp
mov
int3
mov
into
cmp
cmpsb
testb
xor
repz
call
jge
nop
movsl
dec
shl
inc
adcb
aaa
arpl
xchg
xor
add
jne
imul
and
fdivr
mov
inc
in
or
sub
mov
data16
xchg
adc
mov
mov
int3
and
test
sahf
stos
fxch
shlb
sbb
popf
pop
dec
insb
jle
xorb
fists
jbe
ret
outsl
imul
and
mov
add
xor
outsb
sub
cmpsb
jge
pushf
xor
and
loopne
icebp
xlat
pop
jnp
sub
inc
aas
dec
out
cmpsb
fs
add
adc
sbb
roll
sub
int
dec
mov
fdiv
movsl
repz
adc
pop
mov
pop
push
fidivrl
loope
shll
pop
loope
mov
fsubl
adc
jns
pop
sbb
mov
xor
mov
and
rcrb
mov
gs
insb
push
xchg
ret
and
cmp
test
insb
sub
add
lea
pop
push
rolb
dec
mov
mov
addr16
sahf
inc
mov
sbb
aaa
sbb
lret
dec
and
arpl
insb
dec
xchg
sbb
ret
mov
out
shll
pop
out
arpl
adcl
xlat
cmp
inc
das
sub
cmp
bound
jge
sbb
inc
jge
xchg
adcl
mov
popf
cmp
sbb
out
xor
pusha
out
cmpsl
out
jmp
pusha
mov
dec
mov
in
gs
pop
cmp
xchg
sub
push
arpl
mov
sbb
push
mov
iret
movb
insb
xchg
push
cs
inc
cmp
jns
bound
lahf
xor
push
fistpll
lret
jl
cmpl
mov
cmpsb
insl
mov
shrb
std
jecxz
mov
fsubl
clc
mov
fildll
aam
adc
cwtl
fcmovnb
cmp
aas
or
shlb
les
and
jne
mov
fistl
pop
push
push
mov
mov
movsb
data16
mov
test
xor
lahf
push
or
loope
jp
add
mov
nop
data16
push
and
dec
pop
sub
jle
pop
push
lcall
in
fdivrs
adc
pop
pop
js
mov
mov
popa
mov
mov
xchg
jecxz
add
xchg
leave
cmp
hlt
xor
rcrl
mov
cwtl
loope
mov
hlt
inc
ror
jnp
addr16
sub
inc
mov
ljmp
ss
mov
sub
mov
das
mov
push
cmc
cmp
addr16
push
inc
mov
arpl
and
mov
sbb
dec
loope
push
push
mov
mov
addr16
mov
pop
jb
test
lock
insb
cmpsb
into
pop
adc
and
call
iret
inc
push
adc
push
xor
jnp
mov
ret
ret
cwtl
cmp
jecxz
add
sbb
aaa
pop
jp
rcl
gs
iret
mov
mov
or
mov
adc
jg,pn
out
out
cmpsl
xchg
pop
adc
and
cmp
test
or
sbb
sti
out
mov
push
push
hlt
ljmp
push
inc
movsb
jnp
divl
xor
das
in
loopne
lods
mov
into
loopne
push
aaa
loopne
mov
inc
pop
es
fsubrs
pop
xchg
xchg
or
sub
dec
sbb
lcall
in
jnp
push
insl
mov
add
int3
mov
fbstp
jle
insl
fildl
mov
jl
nop
xchg
clc
nop
sub
and
add
loope
xchg
xchg
mov
jp
mov
insl
mov
sub
xchg
idivb
push
and
add
in
rcrb
scas
call
adc
jecxz
outsb
push
gs
jl
cltd
mov
xor
inc
jmp
cld
push
add
pop
fiadds
fdivrl
xchg
jp
xor
and
inc
scas
sbb
int3
inc
rcll
or
push
adc
fsubrs
cmc
fidivl
jp
movsb
cmpl
inc
inc
dec
xchg
sbb
test
add
int
inc
xchg
fldl
lahf
cld
icebp
xchg
inc
sbb
add
mov
or
cmp
adc
or
inc
cmp
arpl
movsl
dec
sbb
lcall
sub
mov
push
sbb
and
cld
sbb
mov
fcom
sahf
adc
and
outsl
push
or
test
stc
and
sub
test
test
fmul
or
hlt
aaa
mov
adc
arpl
shlb
fsubl
loop
adc
mov
and
sub
in
and
test
aas
mov
dec
push
ror
sahf
push
mov
jg
ret
ja
xchg
test
xchg
cmp
mov
insb
or
fbld
aad
xchg
push
cli
pop
add
enter
int3
add
cmp
pop
movsl
fsub
inc
imul
or
sbb
mov
fsts
jo
inc
mov
test
adc
xchg
mov
push
rcrl
push
pushf
sti
ret
shll
inc
xor
mov
test
and
mov
inc
lds
sbb
mov
jg
imul
xchg
js
xchg
pop
mov
in
in
aad
mul
dec
dec
stos
rorb
xchg
sub
ljmp
sbb
inc
and
popa
outsl
mov
lods
lcall
lret
adc
cmp
lods
test
or
lods
and
cmp
xchg
jno
mov
pushf
jg
fcomip
sbb
in
mov
adc
xor
ss
mov
in
ljmp
out
addb
cmpsb
xlat
xor
lcall
sbb
clc
add
mov
mov
xor
or
out
xchg
ffree
mov
data16
bound
xchg
and
inc
dec
fs
sbb
fbld
fisubl
outsl
hlt
clc
cmpsl
xor
icebp
and
mov
pop
inc
mov
stos
lods
gs
pop
push
andl
inc
cmpsb
ret
aaa
mov
hlt
sahf
dec
aaa
ds
imul
pop
dec
xchg
loope
and
ror
stos
sub
aaa
rcrb
subl
mov
sbb
jb,pt
pop
rorb
mov
push
or
xor
pusha
outsl
mov
shrl
insl
fldl
cmpsb
pop
mov
sub
rcl
aas
jmp
stos
xchg
mov
mov
sbb
mov
mov
mov
add
into
or
repz
mov
clc
mov
insb
jmp
negb
push
push
jl
repz
lret
pop
into
pop
jl
jp
dec
pop
jbe
mov
dec
add
pop
or
out
pop
jl
jns
out
repnz
test
imul
rolb
sbb
push
std
es
leave
and
adc
xchg
mov
sub
sbb
and
jo
push
aas
cld
dec
idiv
pop
sahf
in
call
cmp
and
pop
call
push
lds
arpl
and
scas
fwait
fstpt
jns
fmull
das
sarl
dec
sub
sub
mov
pop
repnz
rcr
lahf
cmpsl
ja
cmp
aas
or
mov
jnp
sarl
and
subb
rorb
out
add
dec
xchg
mov
jle
clc
addl
fisubrs
pop
aad
and
add
imull
fidivrs
outsl
nop
aas
or
xor
dec
sbb
inc
push
aaa
sbb
in
or
xchg
out
enter
xchg
jl
fdiv
xor
sti
pushfw
dec
cmp
fistps
sbb
lret
and
sub
sbb
cmp
adc
dec
xlat
mov
rcl
jmp
mov
ret
pop
stos
mov
xchg
pop
loope
in
movsb
das
sbb
aam
lods
and
and
mov
jnp
mov
dec
rclb
push
pop
mov
cli
inc
rclb
inc
aad
gs
sbb
xor
mov
rcrl
test
push
into
add
pop
arpl
in
adc
dec
sbb
rolb
nop
push
inc
inc
inc
mov
sub
imul
rorb
dec
pop
ret
lret
es
add
imul
xor
mov
pusha
sbb
xchg
mov
jg
adc
mov
and
and
lcall
cmp
dec
xchg
mov
or
nop
xchg
mov
push
popf
stos
inc
lea
arpl
ss
leave
xor
jae
nop
sarb
sbb
mov
push
movsb
sbb
mov
in
mov
inc
and
or
loope
mov
and
in
movsb
cmp
adc
lcall
bound
sub
aam
aam
sbb
cwtl
std
pushf
cwtl
movsl
lock
lea
cld
and
mov
adc
idivb
imul
adc
or
mov
stos
aaa
xlat
sub
loopne
ss
cmpb
inc
inc
inc
pop
mov
jne
sbb
sbb
xchg
and
lods
mov
pop
pop
sbb
xchg
adc
xchg
in
mov
fwait
ds
cltd
insl
aam
add
jl
sbb
negb
les
dec
bound
jle
ss
lret
jns
sub
add
fmull
cmp
xor
in
arpl
inc
add
inc
shlb
lea
lea
jl
cltd
out
add
cmc
out
in
xor
cmp
pop
push
xor
fsubrl
in
and
loop
lods
or
pop
shlb
das
out
add
insl
das
cmp
lods
and
stc
or
xor
fmull
jo
lods
in
mov
scas
xchg
pushf
arpl
sbb
xchg
pop
jge
push
mov
and
xchg
pop
sbb
in
mov
xchg
mov
add
scas
int
mov
mov
sti
insb
jns
mov
jle
mov
fistpl
stc
push
fwait
in
mov
cld
out
mov
imull
lahf
mov
stos
and
loopne
lcall
adc
push
push
pusha
fadd
cmc
in
pop
mov
fsubrs
pop
mov
mov
pop
push
xor
pop
addr16
sub
test
inc
cmpsl
xchg
popf
or
les
sub
out
stc
sub
test
cmp
loopne
out
mov
out
sbb
das
adc
jne
mov
stos
in
insb
cmc
push
inc
in
pop
cld
notl
sbb
inc
cld
mov
xchg
into
fsts
inc
inc
cwtl
adc
mov
jne
daa
hlt
add
ds
shrb
cmpb
mov
scas
call
movsb
jge
pop
inc
out
pop
push
xchg
jmp
arpl
out
addr16
mov
cmp
and
dec
aam
adc
movsb
fnsave
sarb
cmpb
dec
leave
test
hlt
dec
cmp
xor
jge
repnz
in
or
add
movsb
sub
decl
scas
add
push
lahf
mov
mov
out
popa
sbb
xchg
push
xchg
push
xor
cmpsl
pop
fcmovu
mov
push
clc
stc
rcr
sti
mov
and
push
xchg
mov
xchg
mov
orl
jbe
rcrb
loope
rorl
jo
adc
lcall
sub
aas
pop
btc
pop
cwtl
add
addr16
lock
and
jl
jb
adc
xor
imul
fidivl
scas
jmp
inc
les
jmp
mov
fnsave
pop
stc
adc
enter
push
popa
jns
mov
aas
int
xchg
fs
repnz
ret
adc
add
dec
cmpsb
and
les
xchg
gs
mov
xchg
jecxz
dec
jb,pn
dec
testb
pop
imul
jle
dec
outsl
ret
repz
and
loop
mov
dec
push
jbe
aam
cwtl
icebp
mov
xchg
in
test
pop
iret
cmp
pop
sub
mov
jne
mov
subb
sub
aad
rcr
and
sbb
mov
ss
int
mov
xorb
roll
stos
outsb
mov
negl
test
add
lods
fs
test
jecxz
cmp
xor
push
es
int3
mov
sbbl
jno
mov
cld
fimull
mov
roll
dec
jmp
push
fld
fmuls
aaa
test
adc
insb
cmp
or
cmpsb
fdiv
push
xchg
or
dec
cli
jbe
pop
push
stos
fs
xor
xchg
aaa
mov
stos
adc
nop
mov
pusha
push
mov
mov
fldcw
andl
mov
rolb
adc
dec
test
ret
mov
mov
shll
mov
call
icebp
mov
loopne
mov
andl
push
movsl
scas
push
out
mov
test
dec
mov
movsl
dec
and
repnz
pop
iret
xchg
jl
xor
adc
cs
stos
inc
pop
jmp
lret
notl
lods
mov
bound
inc
mov
and
push
clc
or
pop
sub
mov
pop
mov
xor
in
add
push
mov
dec
mov
pop
cli
sbb
in
jns
inc
insl
xor
dec
pop
dec
rol
fistl
aaa
shrl
cltd
nop
sub
insb
jmp
cmp
outsb
stc
mov
cli
sub
repnz
pop
arpl
xchg
sbb
pusha
faddp
pop
gs
cmp
movsb
and
pop
pusha
faddl
adc
sub
pop
ds
and
call
stc
mov
sahf
jmp
mov
mov
loopne
inc
outsl
fsubp
pop
jmp
add
shll
dec
xor
add
pop
inc
cmpsb
scas
jg
mov
test
mov
imulb
das
mov
ret
leave
mov
jmp
sbb
xor
mov
lock
fwait
mov
adcl
fs
dec
jno
je
sub
imul
mov
or
mov
test
test
shll
sbb
mov
in
movsl
jae
arpl
loopne
nop
mov
pop
out
pop
or
adc
movsl
pushf
push
or
insb
lock
aam
in
add
or
inc
mov
lea
pop
jno
aam
xchg
jge
sarb
loope
adc
pop
adc
jecxz
mov
arpl
shlb
jecxz
cmp
inc
dec
in
xchg
dec
xor
or
sub
dec
or
daa
xlat
stos
lock
sbb
jae
jnp
cmp
xchg
cmpb
movsl
pop
ret
int3
repnz
movsl
mov
mov
int
push
ret
jae
clc
int3
xchg
cmpl
push
add
jne
movsl
jo
mov
cmp
loope
cmp
fimuls
fiaddl
lods
jne
jno
lods
andb
or
dec
sub
add
bound
mov
mov
lods
nop
push
shl
in
fsubs
fsubrp
sbb
fstps
je
jns
ror
and
push
add
pop
xchg
pop
add
mov
push
lahf
sar
mov
ret
testb
adc
pop
sbb
mov
test
push
repz
outsl
fcompl
mov
sbb
mov
lcall
int3
mov
sub
add
test
dec
mov
mov
push
jecxz
outsl
call
pop
sub
push
lahf
nop
aad
adc
pop
mov
mov
xchg
sub
inc
cmp
xor
das
mov
arpl
mov
and
sub
pop
in
or
in
testb
dec
cmp
leave
out
jo
jle
repnz
push
movsl
clc
ss
xor
movntps
div
pop
jb
push
lret
or
lods
push
into
inc
jg
and
mov
mov
aad
xchg
lea
ret
clc
jbe
ret
push
lods
ret
imul
cwtl
bound
outsl
aam
dec
pop
outsl
mov
jbe
loop
jns
xor
out
clc
inc
push
sbb
mov
fisttpll
daa
mov
arpl
sarl
xchg
test
imul
into
add
repz
mov
jno
jnp
adc
cltd
or
mov
nop
sbb
and
loop
mov
lret
dec
insb
or
stos
sub
je
test
pushf
pop
ficoms
inc
jb
fldl
pop
daa
jbe
and
add
jle
and
insl
pushf
lcall
cld
push
and
adc
fucomp
jns
clc
cmpl
mov
lcall
shll
in
or
std
test
out
rolb
leave
pusha
mov
xor
push
mov
mov
fidivrl
inc
nop
jo
daa
lods
pop
mov
xor
xchg
mov
scas
daa
daa
in
popf
sbb
sub
scas
inc
insl
mov
sub
mov
movsb
les
xor
mov
add
lods
pop
jno
jbe
push
sbb
into
jb
mov
stc
push
sbb
bound
aam
in
aas
mov
int
sbb
aas
nop
ret
loop
cmp
out
pop
cmp
mov
mov
lods
mov
aam
jmp
mov
xlat
or
mov
scas
sbb
adc
movsb
cmp
mov
lcall
xchg
sbb
adc
pop
mov
or
icebp
mov
cltd
mov
mov
jle
in
mov
sub
mov
mov
adc
insb
sbb
and
shl
out
push
mov
stos
aas
addl
in
xchg
stc
xchg
mov
movsb
pop
push
pop
add
push
push
lock
inc
enter
push
pop
rcr
mov
push
or
test
loopne
popa
les
cmp
inc
popa
mov
cmp
and
loope
ja
push
cmp
mov
clc
shl
mov
add
lahf
imul
out
xor
test
pushf
cmp
je
js
testb
xor
shll
fsubrl
test
sar
or
ds
out
sbb
mov
shr
xchg
mov
inc
int
test
sub
out
leave
jae
es
push
sbb
arpl
and
sub
sbbb
inc
jge
dec
fildl
outsb
jnp
adc
lret
paddsw
pop
add
les
jmp
iret
pop
xchg
into
pop
xor
es
xchg
arpl
sbb
lods
out
lock
jge
cmp
shll
mov
dec
mov
mov
sti
adc
cmpsl
mov
fists
sub
insb
xor
cmp
jno
shl
outsl
cmp
push
fcomps
cmp
into
mov
adc
cwtl
xchg
movl
cltd
test
std
mov
pop
loope
lcall
mov
imul
mov
dec
ss
rcr
sbb
pop
stos
std
sub
inc
dec
scas
dec
push
insl
jae
aad
add
ss
movhps
popa
mov
pop
adc
in
cmpl
sbb
ret
jno
dec
das
xchg
sti
lret
add
push
jmp
pop
pop
div
jg
aam
push
ret
cmpsb
mov
add
push
mov
dec
fs
bound
les
and
fisubrl
cmp
xchg
out
or
pop
addr16
es
fcoms
lea
xchg
leave
cltd
pop
push
test
fimull
ret
mov
mov
iret
std
jns
daa
es
repz
ss
xor
ja
and
shrl
sbb
jno
insl
std
loope
jns
mov
xchg
out
xchg
sbb
xor
ja
out
pop
and
adc
nop
mov
into
pop
fcomp
adc
cmp
repnz
and
jb
mov
lea
sahf
bound
test
jo
pop
mov
out
popf
int3
cmp
scas
and
jmp
sub
ds
lret
sbbb
adcl
adc
inc
mov
leave
and
loope
pop
mulb
data16
loope
ret
fadd
testl
mov
je
rcrl
dec
mov
add
xchg
push
loopne
daa
add
push
sub
daa
pop
icebp
xor
xchg
or
in
mov
iret
sbb
inc
lahf
jb
stos
stos
push
sbb
lods
jne
shll
cmp
adc
push
in
or
jae
int
xchg
mov
cmc
dec
mov
fidivrs
mov
sub
mov
mov
pushf
push
bound
stc
cmpsb
inc
bound
cmp
mov
and
xchg
jb
lahf
dec
inc
adc
mov
iret
xor
mov
popf
ss
adc
sub
mov
inc
in
cli
lock
out
xchg
mov
or
jno
inc
popa
jmp
sub
mov
xchg
add
push
push
mov
data16
cltd
pushf
xor
leave
movsl
inc
inc
test
adc
fs
and
je
das
rorb
dec
and
repnz
adc
adc
and
fcmovnb
xchg
lods
sbb
mov
push
test
movsb
sub
rolb
jecxz
stc
mov
xchg
xchg
cmp
push
sbb
pop
adc
add
inc
mov
sub
jl
movsl
fldl
cmpsb
in
xchg
mov
lcall
pusha
mov
sbbl
movsb
mov
lea
dec
lcall
iret
rorl
fists
push
addr16
in
mov
cmc
pop
pop
test
popa
stos
mov
add
clc
aas
inc
movsb
dec
push
sub
or
pop
out
out
les
sub
mov
lock
bound
gs
sub
mov
adc
roll
add
popf
xchg
xchg
cli
lds
loop
nop
movsb
or
sbb
mov
lahf
movsl
xchg
aam
int
mov
and
adc
xor
aad
push
aam
jo
xchg
loope
hlt
lahf
hlt
jbe
ret
nop
mov
and
jne
sbb
xchg
jbe
leave
or
pop
push
cmpsb
out
iret
scas
mov
mov
icebp
stos
add
rclb
or
jp
mov
icebp
into
pop
hlt
sbb
mov
push
fwait
adc
add
sbb
sbb
lock
loope
pusha
jmp
sbb
xchg
mov
jge
imul
push
dec
mov
out
bound
pop
inc
mov
cmp
arpl
pop
in
stc
jns
out
daa
pop
jbe
mov
mov
ret
lods
xor
es
je
enter
enter
adc
lret
adc
in
movb
pop
jmp
cmpsl
shlb
scas
mov
push
out
and
mov
mov
popl
cs
lcall
and
or
add
ja
adc
lahf
xor
push
push
push
iret
popf
or
jge
cmp
push
mov
add
in
ds
cs
add
xchg
or
xorl
jno
hlt
and
fnstenv
rclb
xchg
pop
cmp
push
outsb
mov
adc
cmp
mov
lods
mov
call
adc
pop
stos
outsl
push
je
mov
syscall
add
jo
mov
mov
ljmp
popa
les
cld
arpl
cmp
outsb
sub
and
push
jecxz
aam
loope
push
sub
shlb
lcall
nop
repz
test
or
scas
inc
les
cmp
iret
inc
jno
jl
outsl
js
mov
or
inc
jle
callw
jb
cmp
sbb
dec
cmpl
leave
sbb
adc
xlat
xchg
jle
cs
stc
cmpsb
orl
mov
rcr
mov
jl
push
xor
add
mov
test
inc
add
sub
cmpb
xchg
inc
int
push
or
sti
pop
fs
adc
daa
jne
repnz
popf
pop
mov
iret
push
sub
adcl
arpl
pop
cmpsb
xchg
lcall
ds
add
daa
jns
push
scas
jge
test
jmp
jo
sarb
push
cmp
mov
mulb
sti
mov
xor
mov
cmp
xchg
xor
mov
sahf
mov
cmp
jo
push
pop
lcall
adcl
out
sti
ljmp
int
out
fbstp
adc
test
sbb
lea
sub
xor
add
stos
add
adc
mov
and
cli
xor
adc
fnstcw
scas
les
fwait
mov
cmp
mov
mov
pop
call
fisttpll
in
mov
jp
sub
push
xor
xor
loopne
int
add
repz
or
sbb
cld
sub
or
pop
arpl
rclb
jns
mov
cmp
and
test
cs
pop
mov
shrb
push
dec
jne
xchg
push
rcrb
test
pop
jne
sbb
mov
mov
jle
mov
loopne,pn
in
mov
xor
in
dec
jnp
jns
sbb
cmp
mov
xor
ret
dec
sbb
mov
mov
jnp
imul
sub
sbb
std
stc
call
xor
arpl
jg
mov
and
or
adc
cmp
aas
xchg
adc
enter
mov
int
or
sarl
pushf
orl
or
jl
in
inc
inc
decb
jmp
daa
jns
push
xchg
sub
fstl
xchg
xchg
and
shrl
in
packuswb
or
int
jnp
or
dec
mov
dec
stos
mov
mov
test
out
pop
and
mov
mov
mov
clc
lret
mov
outsl
sbb
push
cld
insl
or
aaa
add
mov
mov
stc
test
nop
outsb
mov
mov
jns
hlt
adc
or
mov
xorb
or
inc
and
mov
xor
scas
fucomp
sbb
cmp
mov
test
repnz
subl
xor
addr16
xor
and
jmp
cld
pop
push
addr16
xchg
notl
xor
in
fs
movsl
jg
stos
dec
loopne
mov
and
imul
sbb
xchg
ja
sarb
sbb
push
and
mov
loopne
mov
cmp
stos
insb
stos
sub
sbb
stc
sti
cmpsb
xor
pop
or
aad
mov
mov
movsb
jns
lcall
jbe
sahf
scas
lods
lcall
shrb
xchg
mov
lret
int
xchg
xchg
in
cmp
pusha
enter
das
test
jns
and
leave
orl
push
addr16
sub
cltd
lahf
mov
mov
xchg
dec
dec
dec
mov
mov
ja
rorb
lock
outsl
leave
dec
or
push
dec
shl
popf
sete
jp
mov
jle
negb
dec
mov
adc
aaa
ljmp
jbe
xchg
push
dec
mov
or
lods
mov
xor
das
fs
dec
or
mov
jnp
push
add
mov
iret
push
ljmp
scas
sbb
cltd
mov
push
adc
pop
pusha
shl
ret
cwtl
sub
cmp
les
sub
mov
ret
sbb
pop
xchg
sbb
xor
cmpsl
leave
and
pop
fstps
xchg
fs
pushf
lret
push
mov
fmull
mov
add
sub
fisttps
push
inc
adc
jmp
jne
mov
ret
jp
outsl
sub
xor
scas
push
ffreep
dec
sub
mov
cmp
jb
jl
xchg
push
cli
fnstsw
imul
ljmp
repnz
rcll
testl
mov
add
lret
popa
cmp
pop
clc
test
in
xor
pop
add
mov
sahf
shll
dec
addr16
addl
testl
inc
pop
leave
int3
pop
cmpsb
sub
push
popf
pushf
mov
jae
imul
out
cmp
pop
add
jmp
mov
cmp
icebp
hlt
adc
daa
mov
dec
add
pop
shlb
pushf
xor
shlb
xor
out
jne
mov
imul
jg
popa
cmp
cmp
add
pop
xchg
inc
dec
jmp
lcall
je
test
pusha
ljmp
push
cs
decb
jbe
aaa
cmpsl
arpl
jo
or
test
jp
ret
and
and
mov
test
dec
jecxz
lods
sbb
sub
push
lea
lods
sub
mov
out
pop
and
inc
or
jmp
neg
addr16
pop
dec
mov
sub
lcall
std
insl
jp
mov
sbb
xor
cmc
sub
je
dec
mov
or
sbb
in
cmp
xor
pop
sub
enter
nop
fldenv
dec
or
leave
mov
shrl
pushf
xlat
mov
aam
test
inc
sbb
sub
sub
aad
pop
subb
ss
push
stc
mov
out
push
adc
das
adc
pop
aam
insl
mov
jecxz
rolb
jo
pop
pop
in
std
decl
leave
add
sub
pop
xor
sub
icebp
mov
push
loope
mov
push
cs
sub
sbb
cltd
jle
add
idiv
pop
jmp
pop
int3
addr16
or
push
out
and
xchg
in
insb
jb
pop
pop
sub
pop
mov
repnz
cmp
sbb
push
xor
or
loope
xchg
aas
repnz
mov
xor
in
dec
fsubrs
stos
jmp
hlt
daa
loope
xchg
shlb
jl
cli
mov
xlat
jmp
sub
and
ret
mov
ja
add
jb
vpshlq
in
ja
imul
dec
out
cltd
xor
adc
push
jle
rclb
jge
push
mov
mov
loope
dec
mov
pop
fidivrs
push
stc
pusha
add
ret
inc
add
add
add
mov
push
push
std
cmp
xorb
mov
mov
loope
scas
dec
aam
std
scas
jmp
mov
sbb
pusha
push
out
sub
inc
push
stos
xorb
sbb
lds
mov
push
xchg
push
adc
aas
mov
cwtl
cltd
icebp
sbb
push
movsb
pop
mov
je
xchg
aaa
shll
add
mov
ljmp
mov
xor
xchg
roll
sbb
aas
sub
cwtl
repz
xor
xor
sub
movsb
fisubrs
adc
movsb
add
sbb
mov
jg
pop
in
xchg
jge
cltd
fcompl
inc
dec
jbe
or
test
outsb
bound
mov
addr16
mov
adc
cmp
xchg
out
jno
cmpsl
mov
sti
sub
xchg
and
stc
in
repnz
popf
inc
ficoml
daa
in
cltd
mov
mov
int
push
iret
pushf
icebp
xchg
lcall
es
mov
mov
in
add
xor
rorl
xchg
fstl
push
xlat
lods
pop
xchg
or
nop
pop
adc
mov
rcrl
popl
scas
jns
or
mov
add
mov
xchg
mov
cmp
add
insb
pop
bound
push
mov
mov
or
cs
out
and
subb
and
fldcw
pushf
das
jp
lds
jge
in
mov
ret
dec
or
xchg
mov
jg
add
sahf
xorl
int3
pop
in
cli
int
mov
lahf
test
fs
jo
mov
or
call
aad
popf
mov
and
out
jecxz
mov
cmp
dec
outsb
and
in
cmp
cmpsb
xor
jl
jmp
jl
and
sbb
or
in
push
pushf
dec
xor
loop
push
push
xchg
and
inc
movsb
add
addr16
inc
dec
nop
and
pop
out
sbb
das
pause
push
insl
mov
aad
pop
inc
push
lret
jo
sub
mov
shll
in
loop
in
in
lock
pop
inc
lods
push
pop
pop
add
fnstsw
xor
out
jmp
andps
pop
fstps
stos
or
sub
cli
movsb
and
xchg
sub
fidivrl
adc
call
push
je
pop
dec
lret
xchg
je
fs
mov
test
pusha
jge
movsl
dec
push
pushf
hlt
sub
loopne
addr16
lahf
sti
stc
fildll
mov
cmc
popf
notb
lret
add
out
dec
icebp
fsubrl
adc
lods
and
inc
jnp
scas
mov
mov
inc
mov
pop
jmp
mov
fimuls
ljmp
adc
dec
jbe
pop
sub
aam
int3
imul
nop
fisubs
inc
icebp
fsubs
xchg
ret
out
test
or
push
cmc
cmpl
mov
xchg
mov
and
cwtl
push
repz
xchg
xlat
dec
xor
push
hlt
nop
shl
and
loop
add
es
addr16
ss
mov
lcall
dec
push
in
popa
mov
add
mov
ja
stc
push
cmp
cmc
loop
push
mov
ficomps
in
jo
sahf
movsl
or
sub
mov
push
leave
mov
scas
loope
jl
addr16
xchg
stos
mov
mov
fildl
cmp
sub
ret
fcomps
lock
xor
in
xchg
cwtl
lea
or
and
jecxz
jg
mov
push
fs
add
pop
sbb
in
mov
push
cmpb
stc
xor
daa
je
jp
xchg
movsb
scas
lret
jns
lcall
fisubl
jge
xchg
lcall
or
adc
mov
mov
ret
sbb
ror
dec
xor
repnz
popa
mov
adc
aam
mov
and
mov
xlat
std
mov
leave
dec
xor
adc
iret
push
ret
addr16
xchg
in
and
lock
xor
jmp
scas
mov
flds
adc
cmp
es
cmp
sbb
into
pusha
or
push
inc
and
cld
es
cmp
test
sub
xchg
imul
jg
ret
sub
add
pop
add
adc
add
push
js
test
mov
lock
mov
or
cld
int
and
jp
sub
sub
jge
inc
movsb
fisttps
sbb
dec
xor
int
adc
enter
aas
shl
pusha
fdivrl
int
inc
out
sbb
sub
inc
ret
ret
cld
repnz
scas
test
pusha
xor
std
push
cli
inc
mov
roll
fsubrs
mov
in
insl
mov
lahf
std
imul
outsl
and
adc
inc
arpl
mov
push
sti
stc
sarb
test
xor
dec
cmp
dec
jo
add
and
or
and
std
shlb
int
mov
cmp
clc
jmp
cli
mov
mov
dec
xchg
jecxz
dec
popf
rclb
sbb
xchg
leave
out
xor
aad
xchg
inc
jae
push
lret
sbb
and
gs
and
or
push
data16
xchg
cwtl
lcall
lods
xor
push
mov
xchg
sub
insl
loop
popa
mov
add
clc
dec
inc
sub
cmpb
ss
mov
icebp
imul
jbe
enter
inc
es
jnp
arpl
movsl
cmp
and
or
and
les
dec
popf
mov
adc
jbe
jle
mov
mov
mov
incb
out
push
sub
inc
add
mov
das
fstps
outsb
incl
push
test
lret
int3
pusha
jl
xor
adc
push
add
std
incl
arpl
mov
fwait
lods
xor
sub
sub
popf
rorb
adc
int3
jge
xor
cmpsl
bound
sbb
mov
lcall
inc
inc
sub
insl
or
nop
pop
mov
jmp
subb
stos
jp
xchg
out
dec
pushf
pop
in
push
adc
imulb
add
adc
es
fisubrl
pusha
fistpl
sbb
mov
sbb
xchg
fdivrl
sti
sahf
mov
cmc
dec
mov
loopne
xor
out
in
push
mov
fbstp
call
es
pusha
rcrl
pop
inc
mov
icebp
pop
mov
adc
sub
push
push
mov
pop
dec
pop
mov
movsb
ret
insl
xchg
fstp
jecxz
das
das
or
adc
ljmp
shll
out
enter
cmp
push
xchg
pop
test
pop
lods
cmp
inc
bnd
ficompl
add
adc
sbb
inc
pop
cwtl
sub
int3
dec
in
mov
lret
mov
jle
add
adcl
mov
mov
add
push
stos
pop
enter
aad
in
test
pop
es
sbb
xor
mov
add
lods
inc
jp
shlb
stos
xchg
lods
add
sub
xchg
jae
add
jno
and
js
sub
out
lcall
sub
xor
mov
jno
les
adc
sbb
xor
and
cltd
addr16
fdivl
imul
ret
pop
int
or
or
xor
ficompl
scas
out
xlat
ljmp
arpl
movsb
ret
lahf
mov
sbb
cmp
jl
loopne
out
in
pop
jbe
loopne
push
lds
pop
arpl
popf
loope
dec
dec
pop
les
push
xor
jbe
lods
adcb
or
sub
mov
pop
inc
cld
in
mov
cmc
adc
data16
mov
push
pop
mov
mov
inc
sub
sub
push
ficomps
int
fistpl
push
jp
push
loopne
add
scas
cltd
lods
cmpsb
cli
or
leave
dec
leave
cwtl
sbb
test
xor
inc
cltd
sarb
add
loope
and
xor
dec
imul
inc
push
int3
nop
pop
test
mov
sahf
lds
jg
sbb
jge
dec
das
push
shrb
mov
lahf
into
push
mov
xchg
movsl
das
mov
dec
outsl
pop
pop
mov
push
movl
pop
pop
add
out
aas
popf
cmp
stos
pop
lods
rcll
lock
in
add
inc
orl
out
loope
loopne
out
xor
cmp
cmp
loope
jb
mov
ficoms
pushf
jmp
outsl
out
jns
cmp
push
icebp
and
fcmovu
mov
mov
adc
xchg
lock
push
jmp
out
mov
sub
xor
jge
stos
inc
cld
sub
mov
aaa
leave
mov
jge
push
jmp
add
jno
adc
mov
sbbl
jne
cmp
and
pop
sbb
fucom
jb
std
push
xchg
imul
fucomi
dec
fldenv
fmull
xor
add
jecxz
sub
cmpsl
lock
cs
pop
adc
and
rcrb
dec
aad
jno
add
lcall
popa
xchg
mov
jo
lea
dec
push
sub
adc
inc
stos
cwtl
adc
cs
stos
scas
aas
clc
mov
dec
stos
iret
inc
aam
fdiv
lods
mov
jno
mov
xor
push
jmp
dec
lock
push
setbe
jbe
insb
mov
jb
mov
ret
aaa
add
dec
bound
ret
sti
xlat
mov
sbb
jnp
xlat
sbb
mov
mov
fsts
cltd
sub
xor
repnz
clc
ljmp
hlt
faddl
sbb
je
pop
shr
addr16
cld
sub
mulb
sbb
sub
or
push
scas
jmp
imul
dec
or
iret
fsubs
aad
lock
mov
lcall
hlt
es
lods
pop
sbb
pusha
ljmp
inc
xchg
fs
daa
add
rcl
pop
pop
insb
pop
pop
adc
jge
sub
jecxz
and
fucomi
sub
mov
rol
fs
xchg
out
leave
imul
mov
push
les
dec
leave
inc
add
push
mov
xlat
xor
adc
insb
or
jmp
es
or
and
mov
ds
jb
dec
cmc
ret
mov
ds
or
pop
pop
xchg
notl
popa
jae
add
push
inc
jnp
lock
mov
addl
fildl
les
xchg
mov
scas
mov
mov
lcall
adc
dec
push
sbbb
loop
cwtl
inc
fisttpll
mov
dec
xchg
inc
jno
stc
or
sarl
sbb
in
imulb
fsub
mov
push
sub
incb
mov
pop
pop
outsb
inc
roll
mov
ficompl
ja
and
mov
sub
arpl
sub
jecxz
inc
mov
sub
jge
xchg
hlt
pop
jmp
cmp
gs
mov
andps
xchg
in
sti
cmpsb
inc
aas
out
pop
xor
dec
and
fbstp
bound
add
mov
xor
call
xor
mov
dec
and
lea
mov
in
dec
jecxz
faddl
aad
mov
test
movsb
xchg
sub
lahf
mov
jae
push
cmpsb
sbb
jge
or
mov
add
outsb
sbb
push
lcall
loope
imul
mov
mov
out
adc
imul
xor
add
call
cld
insl
mov
insb
fdivrs
jle
sarb
xchg
stos
aad
lock
xchg
and
lock
mov
jge
push
hlt
fnsave
push
mov
fcmovnbe
in
das
and
pcmpgtb
aad
divb
lods
imul
jg
jne
clc
sahf
mov
jmp
cmpb
xchg
adc
or
sti
push
pusha
inc
xchg
add
ret
push
jno
push
xchg
mov
out
data16
ljmp
xchg
lcall
mov
sbb
je
mov
iret
decb
movntq
pop
adc
jg
xor
mov
add
imul
and
sub
sub
cmpsb
add
adc
or
clc
rcr
popf
sub
sbb
outsb
in
cli
mov
push
gs
ja
aas
addr16
or
push
and
rcrl
sti
sub
pusha
inc
and
fldl
push
lea
nop
and
push
or
shr
or
cmp
mov
push
sbb
xchg
incb
and
xor
and
fcompl
loope
sbb
cs
lret
movsl
out
cmpsb
xor
pop
xchg
jp
mov
jmp
data16
or
push
jnp
out
mov
std
add
and
dec
sub
mov
xor
clc
jge
cmp
cmp
dec
and
xchg
dec
cmp
pop
push
lods
or
sarb
int
or
sbbb
sub
adc
movsb
add
je,pn
mov
sti
test
xchg
xchg
les
push
sub
leave
in
bound
mov
shlb
inc
mov
or
ss
mov
xchg
and
movsl
fidivrs
addr16
rol
sub
mov
test
fcmovnu
add
lods
lds
aad
cmp
mov
pop
jne
ret
icebp
mov
mov
pop
in
push
shl
xchg
jge
sahf
dec
aam
cmp
mov
cs
pop
or
bound
jns
jmp
adc
pop
jp
pushf
or
xchg
adc
popf
mov
in
jge
jo
mov
aaa
xchg
xchg
aas
and
inc
ds
xor
lea
dec
stos
lret
adc
mov
lahf
push
loopne
inc
lods
sti
sahf
cwtl
fsubrs
sub
roll
jp
mov
test
inc
loope
sti
pop
lock
lret
xchg
gs
mov
arpl
adc
xchg
sahf
aam
jle
push
and
inc
jne
xchg
cmp
loop
adc
test
rcr
and
lret
inc
fistpl
in
lcall
fstpl
and
mov
aaa
sub
jns,pt
mov
int3
adc
lods
lret
fstpt
ret
fs
jg
cmp
adc
xchg
sbb
xor
pop
in
and
mov
movsb
adc
popa
sub
pop
or
pop
insb
pop
nop
push
test
adc
jbe
mov
sbb
cmpsl
push
repz
jb
stc
sub
sub
inc
xor
pop
or
xchg
aad
mov
ss
push
jb
sbb
jl
mov
jmp
popf
push
ds
es
fisubs
int
jle
mov
adc
pop
jbe
push
stos
jge
mov
adcl
lret
repnz
mov
dec
sub
rcrb
xchg
out
cmp
cmp
dec
fistpll
fimull
rol
xorb
xchg
lcall
dec
fadd
gs
mov
call
sub
cmc
mov
xchg
jb
or
pop
adc
lods
mov
sbb
jno
aam
int3
std
es
leave
cmp
dec
pop
push
push
cmp
lock
pop
xor
adc
adc
stos
add
sbb
jl
dec
lock
push
mov
clc
jle
js
pop
xchg
xor
movsb
repz
testb
movsb
imul
outsb
fsts
push
pushf
stos
repz
cmp
sub
ljmp
push
mov
iret
cmc
or
mov
xchg
cmp
es
fdivp
sbb
sti
sub
mov
add
sti
inc
loop
ja
cmp
add
arpl
out
inc
fistpll
push
jo
dec
xlat
pop
cmp
pushf
adc
jo
xchg
adc
test
lahf
add
inc
xchg
sbb
lds
into
mov
sbb
or
nop
test
inc
and
shll
pop
cmp
aad
pop
jecxz
inc
rcrb
mov
or
xchg
inc
aas
sbb
aaa
and
nop
hlt
jno
push
cltd
jne
or
jge
mov
dec
jl
insb
inc
push
xlat
pushf
insl
push
movntps
sarb
xchg
leave
rcr
fbld
pop
lods
push
jb
dec
mov
mov
mov
fimuls
test
daa
jg
inc
out
mov
xor
mov
adc
jbe,pt
cmp
dec
int
mov
fstpt
out
and
pop
or
cld
jp
sbbl
fidivs
test
imul
sahf
cmp
pop
cmpsb
inc
or
inc
mov
jns
mov
dec
push
mov
pop
ret
insb
push
adc
jo
and
push
loopne
adc
test
jo
and
jb
dec
insl
es
leave
out
aas
inc
xchg
push
out
lret
fxch
setbe
push
pop
lods
push
fdivr
sti
sub
jl
nop
loope
cmc
inc
mov
add
pop
push
outsl
into
cltd
xorl
and
jb
je
stc
or
das
sub
std
ret
and
clc
inc
mov
in
rcrb
std
pop
xor
and
add
and
mov
push
and
rol
jne
subl
mov
sub
mov
jnp
adc
add
mov
push
repz
mov
and
cmp
fbstp
addl
xor
xor
ss
pop
mov
in
pop
int
out
popf
mov
dec
fsubl
and
lret
aad
ds
dec
adc
cmp
adc
push
fcoms
mov
pop
pop
and
rcrl
mov
shr
push
mov
popf
xchg
jle
imul
sbb
filds
test
mov
cld
xor
scas
pop
dec
mov
add
mov
adc
cld
subl
aaa
data16
in
cmovl
cmpsl
fcomp
movsb
pop
cmp
mov
push
lock
dec
jne
and
sbb
jl
adc
cmc
vmovss
cmp
loopne
jo
jno
mov
jp
loopne
sub
jg
pop
xor
xchg
mov
movsl
inc
ficoms
cld
pop
unpckhps
dec
enter
adc
in
push
mov
ficoml
xchg
int
cld
scas
jmp
pop
sub
inc
lret
inc
cmp
mov
inc
cmp
mov
hlt
pop
das
inc
push
in
mov
mov
push
in
sub
lahf
jmp
sbb
push
cmc
ret
into
xchg
push
mov
jne
imul
cmpsl
stos
adc
test
push
daa
movsb
cwtl
jl
pop
dec
cld
pop
sti
stos
nop
js,pt
hlt
faddl
negl
repz
mov
dec
pusha
sbb
lret
in
in
mov
test
data16
arpl
ss
dec
or
inc
sbb
push
pop
xor
sub
xor
add
push
jnp
shl
inc
lret
jg
arpl
xchg
fimull
sbbl
stos
or
cmp
ss
rorb
dec
and
push
addr16
pop
insl
add
mov
ljmp
or
ret
xor
mov
inc
dec
and
outsb
cli
push
lahf
call
sbb
pop
push
repnz
repz
or
out
mov
rolb
sbb
aam
jae
pop
cmp
arpl
js
into
in
fdivl
xchg
outsl
adc
in
dec
adc
lds
les
mull
stos
scas
sbb
inc
lock
xor
aad
inc
sti
int3
cmc
or
stos
add
cmp
aam
mov
into
leave
pop
sub
cmp
scas
sbb
test
in
inc
rorb
add
xchg
popf
xor
lock
xor
out
sbb
int3
push
xor
insl
shufps
rclb
xchg
add
shrb
dec
jns
push
popf
mov
addr16
inc
xlat
pop
sub
icebp
sbb
cmp
dec
mov
fnsave
bound
daa
add
sbb
out
loopne
shr
push
xor
mov
sbb
sbb
pushf
outsl
lahf
and
insl
inc
dec
cmp
clc
push
imul
mov
cli
rcll
add
enter
mov
push
and
mov
xlat
inc
js
outsl
push
adc
into
push
mov
pop
add
cmp
pop
mov
push
mov
adc
ficoms
push
dec
pop
push
stc
ja
or
imul
dec
xor
push
call
cmp
sbb
and
sub
in
cld
xlat
sbb
call
js
cmp
das
out
rcrb
jg
in
sbb
lods
fiadds
add
xor
jle
mov
fnstcw
roll
bound
dec
mov
pop
flds
sub
fisubs
ficomps
orl
les
sub
push
xlat
sub
int3
lods
aaa
push
inc
es
ja
xchg
sbb
fidivs
adc
mov
scas
int
inc
xchg
xor
jnp
xchg
inc
mov
jmp
cs
pop
insl
or
mov
jo
dec
scas
add
fidivrs
aad
loope
fidivl
fcoml
sub
fidivrl
stos
negl
daa
pop
fidivs
sbb
loope
sub
push
mov
xor
jmp
cmpsl
jle
int
jmp
pop
es
sti
inc
dec
mov
mov
xorps
lahf
xchg
sub
pushf
test
sbb
mov
sbb
sub
push
negl
cwtl
scas
fbstp
test
fistpl
aam
in
mov
pop
ret
aas
mov
pop
mov
or
ret
sbbl
mov
push
fucomip
xor
mov
loope
ret
js
mov
rcll
std
push
mov
jno
in
sub
sbbl
mov
scas
into
xchg
pop
pop
cli
or
xchg
shrl
mov
sbb
adc
aam
mov
mov
mov
adc
mov
pusha
or
fistps
sub
push
jl
cmc
xchg
xor
xchg
sbb
int3
je
inc
lods
in
es
sbb
cmp
jns
mov
lds
xlat
xor
ja
and
in
mov
mov
movsl
roll
pop
lahf
cwtl
pop
cmp
pop
jae
std
scas
in
inc
jle
xchg
jl
div
sub
mov
bound
icebp
shlw
nop
out
dec
in
mov
cwtl
cwtl
rcl
sub
movsl
mov
movsb
cmp
es
out
xchg
xor
xchg
pop
adc
movb
shrl
imul
rorl
icebp
lcall
xchg
mov
adc
call
jne
dec
pop
fcoms
loopne
cmp
push
int
leave
dec
jmp
jge
subl
js
fisttps
clc
or
pop
xor
fiadds
add
jle
jl
and
divl
jno
cmp
gs
mov
xchg
andl
pop
insl
jbe
es
and
jnp
sbbb
push
addl
add
or
mov
imul
popf
xchg
sbb
xchg
ret
insb
mov
imul
xchg
sub
mov
and
std
cmp
mov
add
imul
jno,pn
add
inc
imul
push
pop
sbb
cwtl
adc
add
xor
orb
sub
insl
mov
jbe
mov
adc
jne
jle
inc
pop
and
mov
lcall
leave
dec
mov
mov
scas
ret
inc
sub
stos
inc
pop
cmc
pop
cmp
lret
mov
adc
pop
out
push
sbb
add
aaa
outsb
inc
inc
add
dec
js
ds
lret
ljmp
sub
xor
les
lods
jle
test
lods
jne
icebp
imul
in
out
fisubs
stos
push
inc
adc
mov
pop
insb
ljmp
cli
loope
ds
pusha
scas
lret
inc
xlat
push
pop
xchg
stos
push
test
cmp
je
in
and
in
inc
push
sub
in
out
push
rcll
sbb
enter
fst
rcll
inc
shll
adc
and
sbb
ret
or
sbb
mov
insl
cmp
pop
add
in
cltd
fmuls
out
test
inc
lcall
xor
outsl
adcl
enter
adc
fmul
lods
adc
dec
xchg
or
repz
mov
es
add
imul
push
cmp
cmpsb
notl
pop
mov
fildl
sbb
call
cltd
ret
or
xchg
lods
outsl
sbb
arpl
and
mov
test
std
xor
sbb
insl
xor
fidivs
mov
aad
lods
push
cmp
mov
fidivrs
inc
repz
add
cltd
js
sbb
jp
test
xchg
idiv
xchg
je
sbb
mov
sar
mov
aad
fucomi
fcmovu
xlat
mov
xchg
lock
mov
lret
repnz
inc
mov
dec
sub
das
sbb
mov
push
push
pop
xor
fcomip
cli
cld
xchg
ror
cmp
dec
sub
sub
jmp
ret
push
xor
lock
test
lds
stos
fcoms
sub
in
fidivrl
lds
sbb
fucomp
push
sbb
add
shrl
call
popf
call
js
in
jo
lcall
call
popf
aad
ret
and
inc
in
scas
sbb
loopne
fadds
loope
or
xchg
inc
and
mov
outsb
rdtsc
icebp
sbb
mov
sbbl
cmp
rol
imul
mov
or
ret
mov
push
cmp
add
mov
jg
or
sub
xchg
jnp
aas
hlt
jbe
les
adc
cmc
xchg
ret
imul
xlat
xchg
pushf
mov
mov
mov
xor
lcall
inc
sub
loope
scas
inc
ljmp
and
mov
pusha
push
pop
mov
mov
push
xor
cmp
fs
mov
dec
bound
adc
mov
test
popf
andb
cmp
mov
lock
fldcw
fidivl
fxch
cmpsl
nop
jo
or
or
js
mov
sbb
dec
adc
add
xor
mov
inc
push
fstpt
js
sub
fists
test
mov
fs
out
adc
mov
popa
clc
push
sub
aaa
lods
inc
ljmp
jb
je
or
xchg
movsb
add
insb
je
adcb
cmp
inc
in
movsb
in
add
outsl
xor
icebp
xor
xchg
das
and
mull
mov
iret
icebp
xchg
ss
imul
fbld
lods
lret
imul
dec
sub
push
lcall
std
adc
or
js
push
mov
repz
jbe
sbb
xor
xor
dec
mov
hlt
add
and
sbb
fnclex
jg
sub
fidivl
mov
cmp
repnz
xor
cmp
pop
ljmp
inc
icebp
push
mov
sub
cmp
pop
jecxz
pminsw
outsb
xor
adc
cmpl
jmp
decb
stos
clc
cmp
movsb
arpl
xor
sub
sub
xchg
xchg
ljmp
lods
jns
dec
out
inc
mov
fcoml
cmc
in
clc
scas
insl
stos
xor
mov
push
outsl
push
sti
cmpsl
lods
xor
sbb
enter
les
stos
pop
aas
into
inc
sbb
sub
or
filds
dec
sub
sub
dec
pop
lods
cltd
movsl
mov
add
dec
orl
lret
mov
jmp
insl
mov
fldenv
pop
mov
leave
add
push
dec
lods
sub
fs
xchg
repnz
sti
dec
push
inc
shr
mov
jbe
push
dec
lock
mov
call
xchg
mov
ljmpw
xorb
jp
xchg
in
and
out
out
cltd
xor
adc
add
sbb
leave
push
dec
arpl
les
inc
or
xor
imul
gs
ss
aas
pop
cmp
mov
dec
mov
mov
or
aaa
sub
pop
push
push
arpl
mov
mov
shlb
jne
outsl
mov
jle
xor
loop
add
dec
loope
or
mov
fisubl
or
iret
movsb
pop
jae
dec
in
lret
add
inc
pop
sub
pop
frstor
lds
push
xchg
sbb
or
dec
inc
jns
in
outsl
daa
add
imul
in
pop
scas
adc
cwtl
adc
popa
fwait
loop
test
mov
mov
mov
mov
adc
fsubl
jle
sub
cwtl
shrb
add
outsl
cmp
sub
pop
jnp
pop
pop
and
fisttps
test
jle
push
or
stos
cmp
add
in
mov
test
adc
pop
icebp
int
test
jns
imul
int
lock
jg
cld
mov
mov
push
dec
jns
mov
popf
es
inc
pop
sbb
cmp
push
cmpsl
cltd
rcr
pop
filds
cmp
daa
xlat
xor
out
inc
inc
sub
ret
aam
mov
mov
push
push
sbb
xchg
lahf
lock
in
bound
aaa
and
mov
ret
movsb
ret
ss
cltd
arpl
inc
add
mov
push
movsl
inc
fimuls
aad
xchg
xor
pop
std
jge
inc
movsl
push
inc
cmpsl
push
jp
jno
mov
fsincos
fs
dec
bound
sub
push
mov
add
repz
mov
xor
and
lcall
fistps
pop
or
adc
mov
filds
dec
outsb
jo
fmull
sub
test
jl
sub
test
insl
lahf
jo
mov
mov
sbb
adc
xor
shlb
in
adc
cwtl
push
cs
lahf
daa
xchg
dec
xor
enter
xor
ds
cs
clc
dec
adcb
fisubrl
popa
fst
pop
cmpb
sbbl
xor
test
mov
or
inc
sbb
dec
fstp
aam
jno
mov
mov
ror
and
adc
fistps
rorb
test
xchg
sahf
xchg
add
pop
push
ds
int3
push
fsubrl
cmp
fisttps
or
push
mov
insb
xorl
sub
xor
add
push
cmpb
push
add
cmp
loopne
addl
test
aaa
pop
roll
popa
sbb
cmp
out
gs
ss
jns
mov
dec
cmpsb
fs
shrl
out
xchg
movsl
mov
fisubrl
add
xor
pop
addr16
lahf
lcall
push
jb
outsl
loopne
jle
ficompl
es
xor
daa
pusha
es
xchg
insb
sbb
loopne
aaa
sbb
loop
pop
repnz
xor
adc
jl
js
adc
push
roll
lret
js
jnp
lret
jns
dec
jl
adc
cmp
ljmp
push
sbbl
mov
outsl
sbbl
scas
adc
aad
push
and
xchg
push
lock
out
lret
adc
movsb
mov
addb
mov
lret
add
ret
mov
pop
mov
cmp
sub
dec
xorl
mov
sub
inc
or
sub
lds
cmpsl
in
icebp
xchg
sbb
nop
movsl
pop
cmc
ljmp
ffree
sub
jne
ss
lret
sub
xor
mov
jl
lret
push
fwait
lock
movsl
in
testl
sbb
mov
adc
mov
mov
dec
jp
test
adc
scas
jb
or
pop
ror
nop
xchg
adc
or
pushf
ret
fcoml
sarl
inc
mov
mov
into
in
das
sub
inc
fdivrs
inc
test
xchg
popf
adc
jbe
pop
mov
add
jmp
jbe
lods
cmp
pop
movsl
xlat
jo
sbb
inc
ret
popf
std
sbb
sbb
dec
orb
adc
xor
push
jne
jae
add
popa
mov
and
sbb
loopne,pt
fnstcw
xchg
ret
dec
js
movsb
xchg
adc
out
into
or
lods
push
jb
fdivs
sahf
in
xor
add
nop
shll
cmp
dec
mov
sbb
mov
sahf
push
add
inc
xor
test
mov
andnps
jno
push
and
and
mov
inc
rcll
sti
pop
xor
int
push
fdivrs
call
gs
int3
movsl
cmpsb
or
repz
xchg
dec
mov
hlt
repz
pusha
jmp
jecxz
inc
xor
sbb
ret
lahf
jle
cmp
push
cmp
sub
inc
pop
pop
mov
rcrl
push
inc
repnz
cmpsl
sti
in
aaa
movsb
lods
push
adc
mov
hlt
jp
xchg
aam
xor
add
dec
stos
pop
loopne
jae
dec
sub
add
rcrb
cld
lds
cli
popl
div
sti
add
xchg
xchg
adc
inc
jnp
popa
mov
and
bnd
out
sub
xchg
nop
inc
in
in
notb
push
lcall
scas
das
mov
mov
imul
mov
repnz
outsb
lahf
out
int
mov
jae
fldenv
or
cli
sbb
lahf
xchg
jecxz
cli
enter
mov
call
xchg
fld
inc
adc
lcall
iret
adc
rorb
push
insl
push
jl
mov
mov
mov
dec
dec
jg
ds
call
mov
fisttpll
shrl
pop
mov
aad
mov
icebp
repz
call
adc
std
addr16
sub
inc
jno
xor
aam
cmp
les
lret
movsl
push
inc
lret
in
mov
sbb
dec
cli
rolb
jg
mov
and
psrlw
inc
or
and
xchg
jge
adc
cmp
pop
test
xchg
repz
stc
rorl
mov
adc
pop
adc
add
xchg
sub
lret
mov
adc
mov
mov
movsl
sub
stos
sti
dec
insb
pmullw
mov
sahf
mov
sbb
dec
sti
imul
push
mov
cmp
fidivrs
fs
inc
das
add
cmp
sahf
movsb
push
inc
push
in
faddp
sub
inc
sub
cmp
mov
cmp
and
inc
fmull
je
and
fistpl
nop
jne
adc
and
fsubs
mov
outsb
out
stos
or
lcall
push
jne
push
xlat
push
lea
push
cmc
mov
ss
mov
fs
xchg
push
bound
fdivl
rcrb
jns
lcall
mov
aad
adc
test
cmp
lea
scas
sbb
lea
jle
hlt
jne
jns
mov
jo
mov
hlt
or
sbb
scas
pop
mov
jbe
add
mov
cltd
out
and
lock
pop
add
jo
inc
movl
shlb
fdivl
jmp
and
popa
mov
dec
scas
fmul
add
arpl
adc
fbstp
mov
and
daa
leave
jno
test
lahf
popa
ret
out
lahf
push
mov
xor
mov
dec
push
and
test
push
mov
cmp
mov
mov
jnp
scas
les
xlat
push
enter
mull
sub
lcall
pushf
lret
adc
jmp
test
arpl
mov
cld
movsb
movsl
pop
xchg
subb
cmp
jno
mov
or
pop
lds
cmp
arpl
in
ja
bnd
or
and
lret
adc
inc
divl
jg
decb
movsb
pop
or
popf
and
push
push
fs
mov
mov
imul
jnp
mov
icebp
mov
lock
int
push
in
dec
scas
incb
mov
adc
outsl
nop
mov
xchg
xor
pusha
pop
cld
push
sub
push
loop
ficomps
inc
mov
pushl
cmc
sarb
movb
dec
ljmp
sub
xchg
in
cmp
movsb
jmp
sbb
ja
sahf
and
sub
jns
shl
cmc
push
inc
sbb
xchg
cmp
add
inc
xchg
sti
mov
push
cvtdq2ps
loope,pn
sarl
movsl
lret
stc
sti
sbb
mov
and
mov
push
int
xchg
lods
xchg
out
orb
and
pop
pop
pop
mov
pusha
mov
jo
pop
cmpb
push
ror
push
psllq
es
fcmovbe
cmpsb
sub
rcl
adc
mov
ds
inc
jle
cmc
mov
sbb
inc
cmpsl
sub
pop
ffree
andl
or
mov
stos
and
inc
sub
or
aas
inc
sbb
adc
dec
cmpsl
push
or
loope
mov
rorl
add
mov
sbb
xorl
sti
ljmp
lock
pop
lods
sub
adc
push
pop
insb
add
jns
fnstsw
and
xor
xchg
scas
lret
jnp
mov
mov
fidivl
dec
inc
test
gs
push
mov
push
sbb
xchg
adc
loopne
loopne
movsl
subb
sub
in
mov
out
fisttpll
movl
adc
cmp
mov
sbb
cmpl
push
push
mov
xor
fs
push
pop
jns
xor
cltd
loope
cmp
add
fiadds
test
cmp
and
std
add
push
sub
test
mov
push
mov
xchg
gs
dec
mov
push
ja
and
cli
outsb
and
mov
xchg
outsl
mov
sub
dec
mov
xor
cmp
mov
or
imul
int3
pop
fsubr
xchg
imul
into
xor
xchg
aas
gs
call
int
fnsave
sbb
orb
out
xchg
mov
xor
and
and
xchg
sbb
mov
in
int3
pop
pop
jnp
xor
sub
divb
sub
sbb
push
inc
and
xor
bound
aas
das
and
pop
mov
adcl
rcrb
fistpll
rorl
jae
movsl
repz
pusha
out
jecxz
jg
roll
repz
fstps
frstor
mov
inc
pop
in
xor
aam
aad
mov
insb
cmp
jns
leave
mov
or
add
xchg
pop
test
cmp
push
or
mov
sbb
leave
jg
mov
and
loopne
jno
dec
rorl
arpl
inc
dec
jne
sbb
mov
sub
cmp
inc
push
pop
sbb
xor
push
xchg
call
cmpsb
stc
aas
sahf
jbe
mov
xor
cmc
mov
adc
and
inc
sbb
mov
addr16
mov
lcall
dec
jbe
lds
nop
leave
jnp
adc
out
sbb
jmp
mov
dec
repz
mov
repz
cmp
inc
or
lret
xchg
mov
into
push
adc
imul
jmp
aas
inc
dec
mov
bound
mov
lahf
orl
jo
mov
and
ja
sbb
addl
jo
dec
test
out
cmp
das
bound
mov
sbbb
jmp
jge
das
jl
xor
mov
out
mov
in
rorl
sbb
mov
stos
loop
aaa
mov
data16
roll
pusha
add
cmpsl
cmp
orl
scas
and
push
xlat
lods
sbb
jmp
rorl
ja
add
out
push
lods
popa
std
outsl
jno
inc
push
sbb
pushf
pop
ss
push
pop
mov
mov
into
adc
mov
test
push
adc
inc
push
loop
add
outsl
mov
inc
xor
cwtl
insl
scas
or
bound
adc
hlt
mov
int3
mov
mov
imul
jns
mov
sbb
mov
cmp
sahf
or
lcall
in
jl
push
ss
inc
rclb
test
mov
frstor
push
das
mov
out
inc
add
outsl
or
jbe
pusha
pop
outsl
inc
test
int
gs
push
lret
jp
xchg
mov
mov
cltd
popf
rcrb
push
std
fiaddl
jbe
xchg
adcl
shl
adc
jecxz
add
xchg
das
xlat
pusha
or
adc
add
jg
ss
cli
mov
and
ret
adc
mov
out
js
fwait
mov
add
dec
leave
popl
jo
mov
pop
sub
call
and
mov
add
pop
test
movsb
xchg
adc
xor
and
ljmp
pop
ret
enter
cli
inc
add
adc
fildl
cld
push
or
stc
inc
addr16
xchg
mov
or
sub
jmp
jmp
jnp
push
and
bound
iret
stos
xor
in
call
lcall
int3
or
rorb
mov
or
cmp
pop
inc
jl
cmp
mov
imul
les
int3
int
imul
xchg
add
and
xor
adc
jl
iret
lea
sbb
jae
cmp
or
gs
or
nop
test
popf
push
pusha
lods
lods
cmc
pop
pop
fiadds
enter
mov
inc
fidivrs
push
xor
push
pusha
xchg
pop
mov
adc
mov
jp
dec
sub
ret
mov
mov
add
call
mov
pop
stos
lret
xchg
pop
pop
pop
cmp
shlb
int
aam
cld
stos
jl
pop
push
mov
lds
ret
fnsave
or
das
jno
push
jge
add
outsl
and
out
jmp
je
jge
sub
inc
dec
push
lahf
dec
out
in
mov
clc
mov
insl
cli
jg
mov
push
xor
jle
pop
lcall
push
lock
cltd
sarb
xor
insl
jbe
lcall
xchg
int3
xor
sub
in
jmp
test
mov
cmp
add
data16
bound
adc
sub
and
add
les
jns
adc
negb
sbb
dec
and
roll
mov
fsub
add
adc
popa
fcoms
cmp
sbb
cld
mov
xor
sbb
sbb
add
jb
out
sarl
jmp
inc
push
orb
xchg
lods
jbe
and
jmp
jne
lea
mov
sub
dec
sub
mov
cmp
aam
lahf
outsb
lods
cmpsb
pop
daa
mov
leave
sub
rolb
jl
pop
out
pop
iret
jge
xchg
xor
sarl
sub
lods
jecxz
sbb
leave
xchg
call
fiadds
cli
fisttpl
loopne
ds
sub
mov
pop
je
sbb
inc
cmp
dec
mov
mov
sub
push
dec
xor
mov
daa
add
sub
ss
aad
mov
push
out
and
dec
inc
pop
iret
mov
pop
ds
es
in
xor
shrl
je
add
nop
dec
inc
decl
push
scas
or
rclb
pop
lcall
pop
iret
mov
rcrl
sub
out
outsl
je
cmpsl
scas
imul
sbb
push
push
pop
lret
and
sbb
stos
mov
loope
data16
scas
and
mov
ja
xchg
pop
das
rcrb
cmp
shr
into
loope
shr
dec
push
sbb
ret
into
mov
mov
dec
cmp
sub
loop
sahf
ret
insl
push
orl
jne
insb
mov
cmpb
jge
jmp
xor
xchg
mov
hlt
jo
cwtl
and
aaa
cmc
add
aam
push
adc
cmpsl
and
in
dec
scas
clc
pushf
push
inc
inc
out
int3
pop
dec
and
and
push
mov
sbb
mov
test
mov
add
shl
imul
lret
ja
inc
jmp
add
mov
dec
cmp
int3
aad
xchg
adc
pop
and
insb
aaa
jp
jb
xchg
adc
push
cmp
and
lods
sub
push
sub
or
push
ss
inc
mov
pop
mov
outsl
adcb
xor
enter
fimull
push
jecxz
dec
jae
inc
mov
jnp
mov
shlb
loope
loopne
push
leave
xor
js
call
lret
popa
fnsave
jle
pop
and
jbe
lods
jnp
mov
outsl
das
cmc
and
inc
aaa
das
or
or
repz
cmp
mov
movsb
push
jno
push
and
cmc
lods
jge
mov
jnp
and
and
in
leave
mov
or
decl
jno
pushf
push
adc
or
add
or
movsb
cmp
imul
dec
push
sub
mov
push
xor
pop
je
rcll
inc
outsb
inc
fcomi
xchg
cwtl
lods
aam
pusha
data16
add
xor
mov
notl
ret
into
mov
ret
ja
dec
xor
inc
rol
pop
movsb
lret
jnp
mov
test
xchg
and
out
mov
mov
fptan
hlt
and
dec
jnp
or
push
in
lods
push
fs
iret
pop
repz
and
dec
cmpl
push
stos
mov
jne
jmp
scas
and
enter
callw
xchg
out
dec
jns
adc
pop
or
movsl
push
jp
mov
out
jns
test
lods
adc
pop
cltd
loope
add
and
shrb
leave
mov
pop
mov
dec
data16
cmpsl
pop
dec
sbb
jge
cmp
std
xchg
jg
cmc
add
push
push
test
xchg
jns
xchg
xchg
pop
cld
sub
mov
cmpsb
jmp
out
int
into
iret
notl
fimuls
ficompl
mov
insb
stos
xor
mov
inc
std
mov
xlat
out
jle
pop
popf
outsb
mov
fldt
jno
fstpl
adc
or
xor
xchg
hlt
xchg
in
jecxz
adc
mov
inc
mov
mov
repz
aaa
sub
mov
jmp
xor
ds
mov
adc
add
jb
aaa
das
in
cmp
and
mov
mov
add
into
push
jp
push
add
sbb
inc
mov
sbb
icebp
xchg
fstp
cmc
xor
adc
sbb
push
sub
jecxz
sbbl
sahf
scas
cmpsb
popf
sbbb
adc
sub
stc
addr16
xchg
push
cwtl
and
test
sti
icebp
mov
jae
adc
jmp
jp
mov
call
ret
xor
mov
push
iret
mov
int3
movsb
jne
ja
gs
jp
push
in
nop
lds
out
cmp
cmp
fidivs
pop
pop
or
adc
sahf
jb
and
cs
dec
out
mov
cmp
out
add
add
adcl
test
ja
clc
fidivrl
pusha
scas
movsl
in
xchg
hlt
pop
jle
ja
cwtl
aas
pop
aad
std
mov
lret
push
int
test
stc
imul
jge
stos
xlat
int3
xchg
sub
repz
lock
adc
xchg
xor
jp
add
cwtl
xchg
enter
and
mov
cmc
pop
rcrl
add
add
pop
dec
lret
jg
popa
mov
notl
loope
pop
pop
rcrl
lods
mov
sbb
pop
rorb
cmp
add
mov
add
sub
movsl
clc
xchg
sub
sub
mov
out
pop
pop
rorb
call
lahf
lods
popf
dec
mov
imul
sub
jnp
mov
dec
icebp
dec
sub
sub
cmp
adc
cmp
fwait
std
and
hlt
dec
add
cs
lea
ss
jae
stc
jbe
push
ret
aam
cmpsl
inc
cwtl
shlb
and
xchg
push
xchg
push
or
cmp
pop
cmp
stc
pusha
add
sbb
push
cli
jmp
ficoms
inc
test
inc
xchg
sub
pop
xor
lods
xor
fbld
lock
inc
push
arpl
mov
pavgw
lock
fsubrl
in
mov
or
mov
jge
lds
xor
mov
dec
iret
rcrb
cmp
mov
fcoms
jno
jno
xchg
mov
dec
and
sub
sti
dec
xor
inc
add
test
jmp
stos
cld
or
test
sbb
movsl
lods
mov
divb
les
mov
aam
in
push
insl
jns
cmp
call
xlat
jmp
adc
dec
and
in
jnp
jae
mov
cmp
cmc
cmp
mov
addr16
loope
gs
pop
test
std
cmp
xor
jns
shlb
or
mov
cmpsb
lcall
movsb
pop
cmp
cmp
cwtl
sbb
push
mov
call
adc
dec
pop
ret
add
ljmp
xchg
incb
iret
fiadds
in
cmp
dec
dec
dec
xor
add
scas
idivb
inc
inc
shl
addr16
add
ja
rolb
xchg
xchg
mov
add
movsl
push
sub
adc
cmp
stos
sbb
pop
adc
push
mov
sub
sarl
mov
mov
pop
arpl
mov
loop
std
dec
cmpsb
xor
push
fdivrs
in
hlt
mov
inc
jmp
fldl
lcall
pushf
outsb
dec
loopne
push
ss
out
cmp
and
or
cmpb
in
test
int
cmp
xchg
or
sub
rorb
aam
sub
imul
dec
mov
pop
data16
in
stc
mov
cwtl
cmpsb
adcb
pop
xor
testl
out
sbb
cltd
cmp
cmp
arpl
shlb
fwait
dec
xorl
lds
xchg
out
xchg
movsl
push
cmp
jnp
rclb
push
xchg
cs
lret
mov
add
sbb
xor
int
pop
inc
cvtdq2ps
xchg
mov
add
lea
xchg
cmp
mov
push
push
jo
adc
inc
cmpsl
fstps
add
sub
pusha
insb
aaa
add
adc
inc
bound
xor
push
idiv
nop
int3
mov
sub
fs
mov
fs
imul
inc
inc
push
mov
ds
xchg
iret
int3
mov
mov
cmp
push
or
leave
dec
xor
stos
xor
rcll
mov
sub
jp
jae
adc
xor
movsb
imul
mov
lret
cli
mov
cmc
inc
and
xlat
cwtl
push
out
inc
nop
pushf
dec
out
js
and
cmpsl
fistpll
jl
fmuls
add
inc
mov
data16
nop
fwait
cmp
shrl
and
in
arpl
sbb
mov
insb
xchg
shrl
push
js
movsl
mov
dec
insl
push
jo
loopne
into
inc
cmp
push
jbe
sbb
dec
and
jg
pop
mov
xchg
imul
mov
fdivs
add
dec
sub
out
or
cs
xchg
cltd
jb
loope
ret
push
mov
aaa
jg
and
and
dec
push
leave
hlt
xchg
mov
mov
mov
add
pop
and
pop
out
or
out
repnz
jno
dec
xlat
and
int
fmull
or
jo
cmc
xchg
imul
test
or
mov
repz
lock
dec
fsub
add
out
adc
add
mov
push
xchg
mov
imul
outsb
add
push
test
lea
cmp
lock
ret
xor
xor
add
mov
rolb
dec
sub
das
push
cmp
fsubl
mov
adc
shll
push
cmp
xor
ja
shl
push
sbb
in
adc
adc
stc
mov
jl
and
enter
aaa
movsl
xlat
ljmp
addr16
or
das
leave
jno
mov
lods
xchg
fucomip
aam
or
or
imul
adc
lock
add
imul
xor
pop
sbb
aad
out
pushf
pop
fidivrl
clc
rorl
scas
jno
loopne
idiv
cs
push
dec
mov
adc
repz
enter
pop
xor
pushf
rclb
adc
setbe
dec
mov
adc
or
pop
mov
outsl
jp
outsl
pop
sub
loop
or
pop
aad
sub
pop
shl
lock
pop
jnp
les
mov
fiaddl
cmp
pushf
xlat
enter
jb
aad
int
sbb
ret
scas
add
pushl
cmp
sahf
cmp
cmp
jbe
mov
insb
dec
je
lods
mov
cmpsl
dec
shlb
into
add
rol
test
test
push
or
in
outsb
std
lcall
mov
bound
mov
stc
xor
in
push
mov
mov
cmp
add
and
inc
or
push
or
int3
adc
aaa
push
xor
sbb
lds
lret
movsb
sub
xchg
cmc
mov
add
cmp
mov
imul
lock
cmp
ljmp
mull
dec
test
mov
xor
cmp
push
aam
shll
pop
ss
in
xchg
clc
or
inc
mov
mov
jnp
push
sahf
jle
push
pop
sbb
lret
sahf
sti
xor
inc
pop
in
xchg
loopne
and
mov
jg
aaa
sub
cwtl
or
cmpb
dec
out
add
jle
sub
lahf
add
jne
dec
pop
lcall
shrl
and
stos
push
ret
mov
add
sbb
int3
push
bound
repnz
outsb
adc
adc
pushf
mov
arpl
add
sahf
outsb
mov
push
out
cmc
js
popa
pop
daa
and
nop
push
jne
in
xlat
mov
inc
mov
imul
xor
xchg
mov
mov
ret
push
dec
xchg
arpl
mov
mov
pop
sbb
leave
cmp
or
cli
lods
ljmp
in
adc
outsb
out
inc
lock
out
adc
jge
lods
stc
cmp
imul
andl
push
out
pop
inc
in
adc
repnz
jp
mov
inc
pop
cmp
ret
dec
fdivrl
inc
lcall
xor
sub
push
test
lahf
and
movsb
cs
push
rol
rclb
jnp
std
inc
jb
in
imul
dec
jmp
jge
pusha
iret
push
mov
sub
mov
ficomps
movups
mov
jno
xchg
lea
enter
adc
clc
push
cmpsl
std
clc
sbb
sbb
ret
pop
aaa
insb
cmp
cltd
dec
jp
insb
pop
mov
rcll
push
int
in
test
lods
mov
adc
xchg
nop
outsl
or
cmp
cmpsb
pop
arpl
test
dec
and
mov
ret
add
jo
pop
imul
sti
adc
out
gs
dec
rcll
jge
push
jbe
add
mov
inc
or
adc
lods
pop
sti
and
adc
stc
xor
dec
cmp
add
mov
xchg
sub
ss
xchg
xor
movsb
add
add
pop
lret
ffreep
jnp
lret
sbb
lcall
push
fidivrl
mov
ja
push
pop
and
pop
adc
cltd
push
std
push
fdivrl
dec
jg
mov
adc
pushfw
rcll
aas
jl
dec
mov
add
je
pop
movsl
test
mov
ss
dec
sub
lock
fwait
in
push
call
inc
outsl
and
loope
jbe
mov
dec
leave
fadds
dec
mov
jecxz
mov
pushf
add
cwtl
pop
dec
xorl
add
cli
jae
arpl
ret
imul
cmp
pop
cmpsb
jb
lods
push
cmpsl
cmp
adc
cs
or
test
adc
jns
sub
xchg
push
jmp
lods
push
shlb
jbe
pop
insl
add
mov
insb
cmp
mov
cmpsl
rcll
sbb
push
add
fwait
pop
xor
sub
outsb
fiadds
das
ja
sbb
sub
in
dec
xchg
fwait
and
jno
inc
cmp
or
divl
rol
lods
jmp
mov
add
sub
test
push
int3
in
andb
out
out
xchg
or
cmpsb
cmp
hlt
out
lock
cmpsl
inc
fabs
push
imul
mov
mov
stos
es
mov
es
jmp
mov
ja
mov
sub
add
test
insl
add
mov
std
lret
mov
pop
inc
into
mov
or
xchg
cmp
out
repz
xchg
xor
pop
aad
arpl
shld
push
in
jmp
aam
lcall
cmp
mov
push
mov
mov
aas
jno
dec
xchg
cmp
in
ljmp
mov
insl
fs
repnz
cltd
lods
dec
xor
or
and
mov
cmc
inc
aad
cmp
mov
inc
mov
and
movsb
cmpsl
lcall
add
lods
clc
and
sbb
fisttpl
xchg
mov
pop
push
in
push
add
dec
std
or
pop
call
movsb
aam
mov
mov
push
icebp
mov
jl
push
mov
sub
lret
push
lds
mov
xchg
mov
into
sarb
mov
xorl
pusha
scas
mov
int3
lea
out
popf
pushf
fiadds
xlat
mov
test
stos
addl
mov
out
inc
add
pop
scas
aaa
iret
lock
subb
out
mov
fidivl
test
fcmovnb
dec
mov
cmc
push
into
jnp
inc
adc
fldcw
cmp
shll
test
and
in
and
cwtl
int
ljmp
shll
push
testl
and
cmc
pop
or
imul
mov
mov
and
loope
popf
in
jg
jno
mov
out
mov
sbb
stos
adc
jo
push
add
adc
addb
fistpl
add
jl
pop
adc
cmpb
push
shl
mov
and
adc
pop
and
push
push
push
sub
xchg
enter
mov
repnz
sub
jmp
dec
cmc
push
mov
into
test
daa
xchg
popa
shll
sbb
jb
dec
lea
sbb
or
push
out
out
sbb
pop
dec
mov
es
iret
out
das
jecxz
sahf
mov
test
push
test
out
push
scas
rcrb
insl
push
pop
xchg
add
lcall
push
push
add
push
nop
pop
test
jp
in
add
xchg
std
mov
mov
ljmp
inc
adc
xchg
sahf
mov
inc
mov
push
push
loope
daa
pop
shrb
les
cltd
dec
jns
jecxz
out
push
ljmp
pop
daa
insb
mov
push
and
loop
xor
fildl
xchg
ret
mov
loop
cli
and
or
in
push
sub
push
pusha
sub
mov
lods
les
xor
lds
call
mov
aaa
ret
mov
xor
arpl
adc
lods
sti
stos
mov
nop
fcoml
test
test
pop
jl
sbbb
sbbl
mov
cmpsb
dec
adc
adc
add
mov
clc
iret
xor
pop
adc
icebp
sub
in
xchg
dec
and
or
xchg
mov
cmpsb
cld
imul
stc
lea
xchg
sbb
sub
sub
cmpsb
mov
xor
mov
xchg
pushl
and
cltd
dec
mov
xchg
or
pop
lds
in
jg
sub
jl
sti
xchg
sub
test
gs
shl
lock
cmp
outsb
loope
std
dec
cli
push
ds
mov
mov
repz
jnp
imul
out
test
xor
sbb
loop
rcll
int3
into
pop
dec
rcll
add
insb
push
sub
cmp
mov
dec
imul
jb
les
int
jp
ss
pop
mov
shlb
fistps
cmp
sahf
ss
sub
jp
cmc
les
mov
cmp
push
adc
xor
jl
hlt
addl
mov
push
sub
jecxz
int
or
cmp
test
icebp
lea
out
pusha
mov
cmp
cmp
rolb
jns,pn
mov
sbb
idivl
daa
ljmp
mov
jb
imull
jbe
push
cmpsb
imul
mov
lahf
dec
add
pop
mov
push
xchg
adc
in
jecxz
out
mov
jge
fisubrl
mov
sub
pushf
sub
out
inc
or
xchg
mov
je
jne
mov
sub
push
jp
push
or
mov
xchg
adc
sbb
into
rep
sbb
dec
push
push
pop
xchg
xchg
fimuls
jns
push
xor
loop
cmp
xchg
jp
pop
xor
cmpb
je
push
push
dec
scas
loop
adc
mov
stos
test
push
push
or
jnp
lret
and
xlat
pop
xor
pop
inc
inc
ret
stos
mov
shrb
mov
mov
pop
scas
dec
xor
mov
push
cli
mov
cmp
mov
xchg
fldenv
sbb
fisubl
adc
daa
loop
in
in
jecxz
pushf
and
ljmp
loopne
int3
cmp
xchg
out
pop
arpl
mov
lods
jno
jp
mov
and
sub
mov
lret
cmc
dec
inc
sar
dec
jae
push
popf
jge
dec
push
add
popf
push
xor
mov
cmp
cmp
mov
in
jmp
sub
cs
fdiv
ss
push
sub
out
add
cltd
data16
out
inc
pop
or
std
sub
loop
lea
pop
cmp
mov
fdivrs
and
in
adc
push
add
dec
mov
cld
jl
dec
js
out
and
outsb
insl
cmp
out
cmp
es
pop
daa
and
int3
push
and
scas
mov
cmpsb
jecxz
jno
pusha
mov
rorl
or
aam
ja
fs
mov
dec
popf
cmc
in
insl
arpl
mov
xchg
mov
cmp
mov
fxch
mov
xchg
jle
andb
aam
mov
sub
in
sub
hlt
outsb
jno
hlt
mov
jbe
inc
xor
mov
push
cmp
daa
lea
mov
and
nop
push
sub
out
cmpsb
or
decl
mov
add
in
sbb
hlt
sub
repz
gs
jns
mov
andb
cld
cmp
cmp
mov
idivb
scas
cmp
rorl
repz
and
loope
xor
sub
sbb
les
mov
mov
dec
notl
ret
jae
ret
cmp
dec
cmpsb
sub
out
xchg
mov
shll
mov
mov
jb
add
and
js
push
adc
fistpll
xor
int
adc
test
das
jne
or
mov
rorl
lea
fsubrl
cltd
rep
sub
inc
test
add
pushf
sbb
cmpsl
cltd
xor
sahf
cmpsb
std
inc
ss
or
in
clc
mov
data16
or
addr16
lret
and
sub
adc
out
xor
fwait
or
cmc
and
add
lea
cmp
and
and
nop
add
mov
pusha
dec
xchg
mov
test
mov
imul
sub
pop
jge
lods
lahf
mov
mov
cmp
or
les
cld
push
xchg
xchg
jle
adc
repz
in
push
mov
cli
addr16
ja
lret
jo
sti
test
fs
pop
repz
pusha
adc
and
and
pop
xchg
adc
cli
mov
lea
ss
jne
xor
repnz
movl
or
pop
outsb
inc
or
push
aam
mov
mov
jb
add
out
nop
int
into
out
test
dec
or
sidtl
inc
lods
sub
lret
adc
pop
xor
jmp
icebp
push
mov
push
out
stos
mov
sub
xchg
push
lds
cmp
jb
adc
ret
movsl
adc
mov
xor
das
rclb
mov
xlat
pop
movb
lret
das
adc
xchg
sub
sub
xchg
cmp
cmp
jmpw
jne
jmp
int3
mov
add
call
aaa
adc
roll
xorb
jb
xchg
and
dec
stos
jns
jo
lret
cmpsb
outsl
adc
dec
mov
popf
cmp
lcall
repnz
inc
mov
ljmp
mov
xor
dec
xlat
dec
pop
push
pop
xor
add
movsb
cld
testl
pop
stos
jle
ds
add
xchg
cmc
lods
and
sbb
xor
dec
xchg
rcrl
cli
fldenv
mov
sub
xlat
inc
ljmp
in
mov
ss
das
mov
sub
xor
pop
jge
movsw
fnstcw
cld
xor
mov
xchg
out
arpl
sub
mov
loope
mov
addl
sub
or
mov
inc
fisubs
push
push
sbb
xor
cmpsb
jnp
pop
jns
sbb
cmp
insl
in
cmp
pop
dec
xor
or
add
or
sbb
mov
sbb
sbb
jo
sbb
and
popf
cltd
cmpsb
xor
xchg
inc
push
jns
subl
mov
push
adc
mov
pushw
scas
bound
cmc
mov
or
mov
out
iret
repz
arpl
dec
xchg
inc
adc
notl
xchg
int
out
movsl
jge
into
pushf
cmpsb
or
repnz
je
pop
cltd
sbb
icebp
push
push
xor
out
or
cmp
mov
daa
test
sub
add
rcll
lock
sub
addr16
inc
pop
jae
lahf
mov
jmp
into
cld
paddsb
dec
and
sbb
mov
xchg
and
push
sub
sbb
adc
push
mov
push
dec
jo
push
lods
bound
push
mov
jp
addr16
sbb
lock
clc
lock
js
adc
sbb
inc
sbb
xor
push
lahf
jno
mov
jg
daa
lret
push
loope
in
mov
inc
xchg
inc
es
push
andl
mov
push
xchg
out
pop
mov
iret
adc
into
push
inc
inc
sbb
inc
mov
arpl
int
jecxz
divb
dec
jae
xchg
mov
insb
pop
std
sbb
jmp
and
outsl
pop
arpl
mov
push
xor
das
inc
or
fdivl
test
imul
push
mov
nop
or
hlt
cmpsl
add
mov
lods
jmp
sbb
int
dec
testb
pop
jp
push
into
push
xchg
sti
arpl
add
mov
outsl
inc
ds
dec
loopne
inc
ljmp
or
js
xchg
movsl
push
jl
je
xor
add
or
sub
cs
std
adc
repnz
mov
aaa
adc
cld
xchg
imul
clc
push
pop
rorb
jno
cmpsb
nop
sub
pop
push
push
sbb
bsr
ss
scas
in
ret
popf
repnz
add
or
push
sti
aad
aas
fisubs
cld
pop
xchg
fimull
dec
icebp
lahf
fidivs
mov
int3
nop
cmp
cmp
scas
cli
jns
in
fdivrl
cmp
sbb
mov
cmpsl
pop
cmpsl
sbb
lret
push
xchg
iret
gs
add
cmp
pop
mov
mov
insl
shrl
cmp
push
jp
push
or
lods
addr16
jns
lods
imul
fildll
imull
flds
out
inc
and
dec
pop
push
and
loop
into
sbb
sbb
adcl
std
mov
pop
dec
stos
data16
push
mov
hlt
xchg
mov
mov
int3
adc
cmp
cmp
addb
jle
adc
mov
dec
fistps
or
scas
mov
les
rcl
dec
shll
add
and
mov
in
lret
popf
mov
inc
inc
xor
aas
adc
icebp
cmp
add
sahf
lea
jl
mov
add
stc
mov
bound
loopne
mov
inc
or
dec
mov
std
inc
adc
icebp
js
jle
pop
push
sbb
lcall
imul
jmp
inc
pop
mov
xchg
and
dec
push
push
popa
sar
adc
movsb
leave
andl
dec
adc
arpl
push
test
adc
mov
pop
mov
and
cmpsb
lods
xor
inc
clc
or
and
mov
pushf
fucomip
push
mov
sub
pop
shrb
pop
cmp
neg
lret
dec
and
jns
fsubp
test
or
imul
inc
call
pop
or
lods
lret
xchg
and
xor
mov
stc
xchg
jbe
push
push
cld
mov
xchg
jne
or
imul
push
pushf
cld
mov
ret
mov
gs
cmpsb
adc
out
out
imul
andl
int
inc
xor
mov
xlat
fisttpl
test
dec
mov
lock
test
push
mov
int
and
fmull
pop
inc
scas
int
cwtl
add
insb
fadds
mov
out
movsl
jo
sbb
dec
pop
lods
adc
lock
rcll
mov
sbb
ds
push
out
dec
mov
popa
adc
mov
roll
pusha
dec
test
rolb
test
mov
pop
ja
hlt
xchg
rcrl
scas
xchg
jbe
fildll
addb
data16
movsb
int
dec
shlb
mov
and
ror
add
ds
jae
enter
push
push
adc
jnp
xchg
pushl
out
jg
mov
inc
dec
add
insl
rcrl
sbb
cs
int
pop
cmp
mov
loope
dec
clc
aaa
jle
push
adc
pusha
sarl
xor
inc
cli
scas
jnp
jne
add
mov
jge
xor
push
jbe
xlat
jae
inc
and
rorl
int
imul
xchg
jo
xorl
dec
push
lcall
mov
inc
mov
insl
popf
sbb
js
test
in
pop
xor
shll
xor
js
adc
mov
int3
xlat
in
and
imul
or
cmc
in
or
mov
mov
xor
aas
cmpsl
sub
jle
iret
gs
and
shr
push
fstps
test
push
dec
cmp
rolb
cmp
mov
push
out
popf
push
add
gs
mov
test
mov
nopl
imul
inc
rclb
push
mov
mov
pushf
out
arpl
ja
les
cli
call
movsl
cmovb
repnz
xchg
imul
jbe
pop
or
inc
pop
jae
push
mov
cmpsb
fwait
adc
add
sarb
add
sbb
mov
sbb
sub
xchg
jl
call
das
ret
xchg
lret
inc
jnp
lock
sub
scas
pop
push
sarl
jp
sbb
add
and
mov
mov
jnp
jno
dec
jecxz
or
jmp
loope
dec
out
insl
test
dec
sarb
sarb
stos
push
ret
and
mov
adcb
cwtl
push
jo
fldcw
and
call
rorl
cld
push
adc
cs
xor
pop
push
scas
cmp
leave
pop
mov
ret
cmpsb
adc
mov
or
sarb
jg
jns
inc
out
daa
sarb
or
pop
fs
jbe,pt
xchg
nop
add
sub
mov
sbb
cwtl
int3
fldcw
push
test
mov
dec
mov
mov
popf
jmp
jg
mov
jp
adc
adc
push
pop
rcr
into
sbb
lods
arpl
in
mov
xor
push
and
test
out
lods
mov
rcrl
movsb
lock
dec
or
and
je
inc
push
into
mov
mov
jb
jl
repz
adc
mov
hlt
shl
sbbb
test
scas
adcb
push
mov
xor
pop
les
insl
sbb
jb
xchg
movsb
ja
mov
out
xor
clc
data16
xchg
lret
fs
add
incl
dec
add
nop
ret
jp
adc
jecxz
repz
inc
add
mov
std
xchg
cli
aas
and
jl
dec
xchg
pop
aas
push
adc
add
lea
fwait
and
ja
stc
jg
mov
cmp
faddl
jge
dec
mov
sub
shlb
pushf
xlat
scas
iret
mov
inc
sbb
lahf
xchg
scas
or
into
fcoms
call
loopne
ret
xchg
test
pop
outsb
push
in
mov
aas
pop
xor
outsl
mov
sbb
xlat
pushf
sub
lock
cmc
push
mov
int
mov
inc
idivl
ss
adc
xlat
dec
adc
inc
rcrb
mov
das
into
lock
xchg
push
jno
clc
sbb
jns
mov
xchg
icebp
repnz
pop
jne
aad
jns
mov
arpl
lods
pop
fs
js
inc
iret
in
add
add
or
lods
je
cmpsl
test
aam
pop
dec
mov
push
fwait
mov
outsl
push
jbe
sub
mov
push
sub
cwtl
in
fsts
rclb
xchg
insl
xchg
push
cltd
lahf
adc
insl
pop
adc
loop
lods
pop
xchg
je
jnp
push
cmpsl
testb
out
out
data16
scas
cmp
sub
jb
and
fists
push
dec
rolb
cmp
and
inc
pop
int
out
xchg
sbb
sub
daa
cmc
dec
jl
xchg
jns
lret
xor
mov
adc
adc
cmc
cmpsb
add
test
outsl
mov
mov
adc
push
mov
mov
mov
xchg
mov
int
cwtl
popa
jmp
inc
scas
loope
lahf
repnz
cmp
leave
lret
cmp
insl
mov
sbb
mov
xorl
insb
mov
push
daa
ja
add
xchg
icebp
add
mov
jle
lcall
add
jnp
stos
lret
pop
out
es
push
xor
push
jmp
popf
pop
dec
cli
mov
ss
sub
popa
cmpsl
push
ljmp
loope
xor
pop
cli
adc
scas
insl
pop
mov
jno
push
dec
mov
xchg
adc
fiaddl
dec
inc
lods
jne
pop
js
pop
lea
pop
pop
pop
lret
movsl
pop
push
sub
iret
in
popa
pushf
popa
aaa
push
or
rclb
inc
test
shll
movsl
lock
xor
add
sbb
out
adc
and
adc
xchg
and
cmp
push
pop
pusha
inc
jb
mov
pop
lcall
cwtl
xor
pop
fistps
and
lcall
popl
push
add
adc
xchg
jb
mov
jo
ljmp
xlat
sub
cmp
dec
repnz
xchg
stos
and
mulb
lcall
lret
cmpsb
fwait
or
pop
iret
int3
jl
xor
push
push
adc
push
add
movl
adc
lcall
ss
pop
movsl
mov
cwtl
inc
mov
mov
mov
out
popa
jecxz
and
xlat
subl
loopne
not
dec
push
out
inc
xor
push
xchg
sahf
cltd
pop
js
das
jbe
das
mov
cs
add
mov
or
rclb
out
mov
fcoml
stc
xchg
mov
je
ja
xor
mov
and
ljmp
repnz
shlb
or
jae
jns
sbb
mov
lds
adc
pop
cwtl
rorb
pop
dec
popa
push
dec
push
inc
and
lods
lods
cmp
aas
fs
and
inc
mov
loop
mov
aas
dec
jno
arpl
or
pop
ret
stos
mov
push
mov
mov
mov
mov
popa
shl
movsl
jae
jae
pushf
jns
and
adc
rcrl
mov
mov
inc
shrl
loop
cld
rcrb
dec
dec
scas
movsl
cmp
adc
mov
xchg
pop
stos
sub
xchg
popa
fnstenv
mov
adc
les
repnz
mov
out
sbb
in
xor
pop
in
cmp
sarb
mov
or
adc
inc
mull
icebp
add
lock
and
and
adc
mov
leave
mov
lret
push
cli
dec
adc
add
jp
add
scas
add
or
jmp
fnstcw
mov
in
sbb
mov
iret
in
xlat
rcll
aam
popf
daa
dec
push
icebp
lock
and
pop
bound
out
prefetcht0
or
je
push
mov
fwait
scas
inc
lods
inc
ficoml
jnp
stos
in
adc
fsubrs
jbe
cmp
int3
add
stos
pop
push
mov
scas
dec
sahf
fnstcw
addb
pop
dec
pop
fldcw
mov
or
call
sub
mov
inc
popf
insl
mov
insl
jecxz
ret
push
loope
fidivrs
adc
pop
fistl
std
scas
loopne
outsb
hlt
and
xchg
mov
lock
cli
sub
pop
sbb
or
repnz
pop
outsb
xor
push
fmuls
push
mov
mov
shl
pop
daa
adc
addr16
mov
iret
xchg
sbb
sub
mov
jnp
adc
push
sub
pop
push
pop
jl
add
data16
jle
repnz
mov
fucomi
jl
stos
add
mov
or
xor
cmp
mov
shrb
sub
xchg
xlat
push
jmp
out
xor
test
xor
add
mov
push
mov
rolb
jb
mulb
shrb
clc
pop
loop
cmc
jnp
mov
cli
jo
es
dec
cmp
sub
ds
ss
cmpsb
xchg
sbb
and
imul
scas
xor
popf
push
call
stos
loope
fiaddl
nop
xchg
and
lea
mov
and
out
dec
mov
jno
xchg
decb
sbb
hlt
fidivrl
sahf
xchg
popa
fwait
fwait
push
lea
push
sbb
xchg
loopne
fidivrl
popa
roll
bound
dec
adc
xlat
push
jmp
mov
adc
mov
mov
mov
je
adc
adc
aad
sti
inc
mov
lahf
and
or
pop
jno
sahf
adc
and
orb
enter
popf
aad
mov
pop
mov
push
orb
test
aam
cmp
popf
sub
imul
mov
das
sub
jno
sbb
cmpsb
pop
repnz
jecxz
mov
mov
sbb
cmpsb
dec
jae
je
push
pop
and
fdivr
ror
push
scas
push
sbb
xchg
cli
or
inc
mov
out
mov
imul
and
and
pushf
addr16
xchg
aaa
jecxz
cmp
and
adc
and
rcll
ja
in
or
std
cmp
aaa
js
dec
push
xchg
and
outsb
push
add
fdivr
lret
lcall
or
push
inc
dec
dec
testl
mov
dec
fs
cs
out
out
in
and
daa
es
mov
std
and
fcmovnu
mov
lock
out
jge
xchg
xor
add
sahf
inc
pop
pop
xchg
pop
push
xor
add
pop
jmp
mov
and
daa
jno
pop
dec
push
dec
pop
mov
sahf
inc
inc
enter
dec
add
sub
stos
mov
jmp
pop
dec
cmp
adc
js
xor
push
inc
xchg
ljmp
inc
cmpsb
hlt
or
and
ret
jae
fnsave
cmpsb
mov
or
movsl
push
adc
mov
mov
inc
sti
cmpsl
mov
xchg
out
jnp
popf
rcl
mov
sti
push
add
ret
fimull
xchg
xchg
andb
jne
add
mov
sbb
pop
arpl
push
xchg
sub
mov
movl
mov
mov
add
lcall
lock
sub
jbe
add
or
pop
sbb
inc
xor
xor
lds
nop
jle
dec
imul
mov
jp
mov
or
addl
jmp
jae
adc
sbb
int
out
imul
dec
or
sbb
out
lock
cli
and
xor
movb
imul
es
xchg
iret
jg
pop
xor
loope
push
fldl
out
dec
cmp
lcall
pop
cmc
jns
mov
cmc
mov
daa
pop
nop
or
pop
push
adc
pushf
or
pop
scas
dec
sub
lahf
cmp
add
push
aad
pusha
sbb
daa
xlat
mov
push
cmc
out
shrl
sub
pop
push
cmp
cmpb
mov
xchg
imul
repz
testl
fiaddl
popf
imul
das
inc
mov
sti
pushf
cmc
sub
mov
lods
test
fisubs
fnstenv
pop
aas
pop
iret
jecxz
les
pushf
sub
imul
and
pop
aaa
mov
imul
or
inc
cmpsb
cld
data16
xor
vmovhps
mov
call
jne
and
sbb
orl
cmp
pop
mov
insb
lods
dec
jno
in
adc
scas
inc
aam
cmp
push
xchg
or
jecxz
push
mov
outsl
repz
xchg
fbld
and
push
fisttps
jbe
insl
orl
push
mov
ficompl
fbstp
cmp
cmp
mov
sarl
ja
or
mov
addr16
into
shll
cmc
mov
cwtl
push
dec
mov
cmp
ljmp
lahf
subl
ret
idivl
dec
jge
mov
decb
es
or
mov
sub
pushl
or
cmp
adc
bound
in
into
cwtl
jne
push
loop
add
push
andb
stos
clc
jb
enter
mov
mov
test
in
stos
orl
push
pushf
jp
cmp
adc
or
push
mov
addr16
sub
mov
fisttps
cs
movsb
int
cmp
repnz
andl
pop
cltd
gs
repz
out
or
fmull
push
sub
pusha
into
push
faddl
decb
inc
pushf
js
ljmp
rorb
out
sub
les
push
pop
leave
lods
shrb
rorb
xorl
cmp
push
push
shr
cmp
gs
lret
addb
pop
ljmp
jl
stc
mov
mov
mov
into
sbb
mov
inc
lds
push
lret
test
mov
mov
jmp
nop
rclb
dec
shll
cmp
lods
xor
bound
loopne
sub
mov
or
jmp
or
aam
and
sbb
shlb
popf
push
adc
pop
pop
cs
sbb
incl
leave
xchg
xchg
jmp
clc
cmpsb
push
mov
push
lods
xlat
aad
xor
push
into
test
cwtl
mov
lcall
cmp
aad
mov
out
and
inc
movsl
jmp
gs
inc
jae
incb
add
insb
pop
fmuls
iret
popf
adc
mov
int3
xor
inc
xor
int3
int
or
movsb
add
mov
arpl
sub
jns
adc
hlt
lret
jle
adc
jae
rcl
push
dec
push
xorb
scas
scas
lret
push
pop
hlt
dec
dec
sbb
test
push
fdivp
dec
xchg
cmp
inc
and
ja
das
stc
sbb
inc
mov
test
inc
je
xchg
roll
sub
mov
icebp
jns
xor
data16
lret
fstps
bound
mov
xchg
cmp
mov
jbe
push
loop
stc
add
mov
xor
jo
add
fnstcw
adc
dec
fld
mov
loop
daa
sbb
push
or
out
mov
xchg
loop
loopne
push
in
push
push
mov
xchg
mov
in
sub
sarb
xchg
mov
test
cmpsl
mov
xor
inc
sti
outsb
mov
ror
insl
sar
scas
mov
lock
add
icebp
xor
imul
push
add
push
shl
cmp
xor
mov
cmp
cmp
pop
xchg
dec
xchg
mov
bound
sub
pop
xchg
lea
out
popf
loopne
jle
test
mov
mov
dec
mov
add
stc
sbb
int3
lcall
out
fistl
fwait
aas
pop
scas
xchg
pop
cwtl
orb
jo
dec
push
test
and
xchg
sarl
mov
mov
test
out
mov
and
hlt
xchg
sbb
mov
imul
adc
imul
mov
cmp
mov
pop
stc
imul
test
cmpl
stos
lret
mov
bound
pop
add
mov
rcr
lret
and
or
inc
xchg
fnsave
xor
pop
jb
sub
pop
sbb
dec
and
pop
sub
fs
fstpl
into
mov
sbb
fdivrs
ret
rorb
jns
xchg
in
jne
stc
ja
iret
in
roll
cmp
push
mov
mov
cmpsb
push
movsl
cmp
mov
adc
push
and
jae
mov
mov
push
pop
mov
xor
repnz
add
cmpsl
cltd
jmp
in
push
jbe,pn
addr16
push
orb
push
or
xchg
push
mov
sbb
sub
mov
je
test
and
cltd
sub
xor
fs
pusha
pop
orl
push
xor
std
aad
and
push
iret
or
or
mov
paddw
mov
leave
adcb
add
adc
scas
out
cmp
or
nop
into
shll
cmc
call
mov
dec
xchg
mov
mov
xchg
xor
daa
sbb
mov
dec
les
push
cmpsl
jge
sub
push
xor
mov
sub
dec
in
dec
addr16
loope
xchg
xchg
mov
adc
mov
dec
pop
sahf
xchg
jae
sbb
adc
push
xor
xor
in
lods
xchg
sbb
mov
dec
mov
jno
int
xlat
mov
icebp
pop
and
push
mov
sar
push
jecxz
jbe
nop
adc
push
mov
dec
stos
aaa
push
inc
stos
mov
cli
enter
jnp
jns
ffreep
pusha
cmc
fbld
ja
lret
mov
mov
inc
loop
and
mov
stos
sbb
add
aam
push
vucomiss
cmc
adc
sahf
sbb
xchg
mov
jno
cmp
cmp
sbb
orl
lods
jne
cmpsl
lcall
cmp
or
prefetcht2
lock
xchg
rcll
bound
or
push
loopne
inc
scas
push
jecxz
xor
les
mov
rcrl
imul
and
sub
mov
push
and
ds
dec
in
add
scas
pop
xchg
fs
pop
jmp
and
lock
les
adc
rcl
mov
inc
jge
stos
cmpsb
movsb
push
or
gs
imul
and
rol
fildll
inc
xchg
test
outsb
ds
and
pop
mov
fnsave
stos
jno
pop
and
fwait
int3
inc
mov
dec
std
data16
fs
inc
sbb
mov
ljmp
sub
adc
stos
dec
push
push
mov
pop
les
movb
mov
or
es
sbb
sub
mov
mov
mov
iret
xor
sbb
jmp
sub
mov
jnp
sbb
inc
pop
js
mov
mov
mov
adc
xlat
cmp
or
inc
dec
jnp
cld
sarl
out
pushf
xchg
mov
mov
mov
daa
lcall
std
nop
push
inc
scas
xchg
adc
sub
and
mov
sti
dec
or
push
fldcw
and
fisttps
popa
iret
mov
stc
cmp
shrb
mov
ret
dec
mov
into
adc
xchg
rclb
pop
dec
or
xor
and
cwtl
add
cmp
arpl
data16
stos
adc
pop
dec
sub
enter
movsb
daa
fcmovnb
sbb
add
cmp
lcall
push
adc
mov
inc
into
out
cwtl
into
push
leave
enter
adc
push
sub
int3
mov
mov
pop
in
cmpsl
sub
scas
inc
data16
mov
push
push
stos
or
mov
or
mov
repz
test
fsubl
adc
push
mov
sbb
jb
add
push
adc
popa
mov
jecxz
adc
inc
out
push
mov
jae
inc
enter
dec
stos
ds
push
xor
push
and
aad
hlt
jno
sbb
shl
jecxz
iret
xchg
cmc
pop
enter
inc
mov
pop
aam
js
les
or
sbb
push
xchg
xor
arpl
dec
cld
call
sbb
mov
out
push
xsaves
and
push
arpl
mov
pop
aad
iret
and
mov
lods
sbb
xor
jl
cmp
insl
pop
xor
push
xlat
add
or
adc
ljmp
daa
xlat
insl
xchg
inc
adc
pop
ja
mov
mov
sub
int3
adc
xchg
negb
cltd
sub
and
div
popa
repnz
les
int
loope
mov
mov
jp
sub
sarl
enter
sbb
mov
mov
push
fcmovu
loope
lea
push
xor
push
mov
scas
call
or
or
rorb
or
and
mov
dec
lcall
lcall
mov
leave
sub
xlat
and
popf
imul
pop
add
out
jae
xchg
sbb
int3
outsb
out
lcall
rcrl
push
hlt
cwtl
dec
mov
rorb
mov
mov
outsb
adc
bound
push
mov
add
pop
leave
insb
rcrb
adc
clc
sar
hlt
cmp
cmpsb
icebp
and
add
cmp
jl
or
adc
sbb
testb
and
test
jne
in
enter
push
mov
in
dec
mov
adcb
movsl
lret
add
jnp
inc
rclb
xchg
mov
jecxz
mov
pusha
jg
or
out
cmp
add
add
popa
adc
nop
pushf
orb
inc
or
lock
xor
jo
roll
xchg
les
scas
inc
dec
jo
sbb
ljmp
xor
and
add
pop
loopne
push
lea
xor
fstl
xcrypt-ofb
cmpsl
sub
xorb
add
out
mov
mov
addb
scas
xchg
cs
dec
add
sub
stos
cmp
jge
xchg
test
je
jp
and
dec
push
jp
roll
sbb
cmpsb
mov
mov
cmp
pop
mov
jno
rclb
dec
xchg
in
outsl
inc
dec
and
les
xchg
pop
ljmp
cmpsl
push
and
dec
mul
push
push
pop
or
xchg
nop
cmp
cmc
stc
mov
int3
sub
cld
call
sub
ja
lahf
in
cmp
andl
jno
jle
mov
jo
dec
pushf
leave
mov
pop
into
scas
imul
call
pop
sub
jns
test
fs
push
adc
adc
pop
insl
js
dec
rcrl
mov
mov
add
sub
and
xchg
push
mov
or
mov
in
fsubs
movsl
mov
popa
xorb
arpl
dec
iret
ja
and
stos
jae
add
mov
outsl
and
lea
and
les
aas
shrb
adc
js
rol
stc
stc
test
lea
inc
nop
aas
push
in
push
test
out
adc
pop
iret
scas
and
push
mov
mov
ds
dec
push
test
mov
xor
nop
inc
js
cmp
adc
or
pop
push
adc
xor
mov
xchg
mov
xor
stos
pop
pop
push
pop
sub
cmpsl
loopne
or
cmp
add
test
out
out
in
sarl
inc
lret
inc
dec
loop
pop
and
gs
mov
pop
jg
dec
xchg
cmp
inc
call
in
jp
pop
jne
mov
push
jmp
in
mov
xorb
add
ja
lock
push
mov
xor
je
lods
push
test
xchg
daa
or
push
pop
cmp
hlt
popf
pop
sbb
iret
sub
jmp
sbb
xchg
jl
dec
pusha
fidivrl
xchg
shrb
mov
test
pushf
fs
lret
lds
je
or
out
sub
and
mov
cs
pop
jbe
mov
leave
cmp
cltd
jg
dec
mov
push
fwait
call
xchg
jae
outsl
cmp
dec
pop
pop
je
cmp
std
dec
loopne
dec
sub
lcall
push
mov
mov
xor
dec
ja
jne
ret
mov
ljmp
pushf
bound
mov
and
pop
lea
pop
cmp
movb
lds
fsubs
fadds
fadd
dec
jb
pop
outsb
popa
sbb
hlt
hlt
rorb
repz
inc
enter
fldz
pop
push
jae
fildl
test
sbb
outsb
scas
cmpsb
or
push
jo
add
lcall
pop
and
outsl
in
aam
push
pop
jle
pop
push
push
out
mov
shr
dec
push
out
cmp
roll
pop
ret
jmp
cmc
add
sbb
iret
xchg
cld
adc
add
add
lret
rclb
jns
ljmp
adc
push
ss
cmp
enter
mov
adc
sbb
mul
cmp
jb
jb
lret
and
dec
pop
leave
iret
push
ret
mov
arpl
sub
and
movsb
push
xor
ret
mov
or
lahf
cwtl
push
pop
and
and
and
into
int
inc
ret
push
mov
call
add
push
data16
mov
mov
jp
xor
jns
fwait
imul
test
daa
popf
push
mov
inc
cmp
vucomiss
push
xchg
repnz
outsl
movl
add
je
push
pop
aaa
lea
pop
mov
cli
push
pop
push
ds
gs
jnp
push
pushf
insl
sub
cmpb
cmp
sub
or
out
lcall
push
in
addb
xchg
xor
repnz
lock
ss
pop
mov
int
pop
jmp
rolb
js
or
mov
lret
movsl
fs
fwait
cmp
mov
adc
out
or
jne
mov
pusha
mov
arpl
lret
sub
cs
xor
je
leave
cli
cmp
push
icebp
inc
jmp
mov
das
xor
repz
cmp
inc
lods
hlt
or
adc
mov
cmp
adc
rcrl
pop
lcall
xor
lods
lods
jg
push
inc
mov
pop
adc
sbb
pop
inc
lcall
jnp
mov
jecxz
in
xor
mov
inc
pop
xchg
mov
pop
xchg
addr16
cwtl
sbb
sub
and
rorl
jl
add
pop
insl
call
popa
popf
shl
test
sub
xor
loop
or
mov
and
movsl
mulb
xchg
into
mov
xchg
cmc
cwtl
mov
sub
sbb
fbld
cmp
push
xor
xor
fucompp
and
ror
push
or
mov
out
and
inc
inc
xor
movsb
sbb
out
shll
jl
mov
dec
fucom
dec
leave
arpl
js
cmp
adc
xlat
mov
lds
fdivr
push
ss
loope
lods
sbb
imul
fstpl
push
sbb
lods
movsl
outsb
enter
push
movsl
lret
roll
shl
push
jnp
outsl
mov
in
sub
movsb
xchg
jg
add
jl
aad
adc
or
mov
or
mov
push
ljmp
inc
push
int3
cmpsl
push
sub
cltd
ficoms
mov
xchg
mov
addr16
loop
mov
xor
iret
ljmp
dec
cmp
mov
outsl
mov
fwait
out
jb
xor
fs
adc
dec
dec
pop
repnz
cwtl
loop
and
inc
add
out
pop
dec
mov
pop
out
or
or
fsubrl
push
cmp
dec
iret
add
sub
adc
ds
add
aam
out
push
call
sub
mov
stos
andl
popf
outsl
out
icebp
inc
outsl
movsb
xchg
sbb
pop
mov
out
fisubl
in
imul
sub
adc
cmpsb
sbb
std
sbb
mov
daa
pop
notl
loope
mov
mov
mov
or
dec
sub
jo
test
sub
pop
mov
inc
inc
addr16
mov
loop
xchg
cmpsl
or
mov
pop
jnp
int
clc
add
push
hlt
daa
cmc
mov
fildll
lahf
das
out
xlat
icebp
push
sbb
push
stos
mov
das
out
adc
adc
mov
or
mov
xchg
mov
or
add
xchg
cmp
xchg
push
inc
fisubrl
adc
jne
ss
pop
shll
sub
xchg
sahf
xchg
jns
loopne
dec
lods
lea
and
cmp
mov
xor
sub
sahf
pop
pop
mov
mov
sbb
daa
mov
incl
or
xor
js
pop
cmp
sahf
and
push
sbb
pop
popf
into
push
ficompl
dec
sahf
jbe
inc
enter
nop
lods
popf
je
and
inc
cmpb
sub
or
aas
stc
cli
outsl
and
sbb
dec
adc
xchg
pop
cmpsb
cmp
mov
adc
out
add
sub
lret
pop
pop
lret
outsl
mov
dec
rcll
dec
test
jae
jbe
jg
mov
fildl
inc
cmp
inc
add
aam
roll
pop
mov
lods
cli
addr16
int
xor
ret
aaa
scas
and
mov
sbb
movb
jae
aas
push
pop
dec
cli
xchg
addr16
fwait
sbb
lea
xchg
dec
or
popf
jnp
cmovo
adc
cmp
jno
in
mov
clc
icebp
arpl
jl
in
out
test
push
adc
out
or
cld
js
push
pushf
mov
lods
aas
sub
lea
ret
clc
mov
cwtl
sbb
shll
rcrl
jecxz
call
inc
mov
pop
rcrl
inc
imul
sub
add
jns
arpl
pop
push
cmp
xor
stos
pop
and
loop
dec
ret
cld
popf
scas
mov
mov
inc
pop
mov
jb
out
inc
and
jp
loope
and
iret
call
inc
add
mov
enter
rclb
imul
test
imul
jmp
rol
mov
cld
and
cmp
js
sub
inc
pop
fstpt
in
popa
mulb
xchg
jne
xchg
xchg
mov
xor
and
dec
or
mov
mov
push
popf
xchg
add
les
or
shll
out
lea
pusha
dec
adc
fldenv
in
or
cmpsb
sahf
sbb
int3
fldt
mov
ror
test
pop
cmp
test
sub
push
popf
leave
out
jecxz
add
dec
fidivrl
test
pop
sbb
nop
xchg
in
mov
repz
dec
and
data16
movsl
push
inc
mov
imul
push
std
and
fs
dec
dec
ja
xchg
or
insb
int3
and
movsl
in
jne
sub
loop
dec
daa
out
push
jmp
ds
aas
aam
std
cmpsl
adc
mov
and
xorb
pop
push
pop
out
pop
ljmp
push
lret
jmp
inc
sbb
and
nop
das
movsl
xchg
iret
fidivrl
lods
xlat
push
push
enter
dec
mov
ret
test
pop
mov
hlt
xor
jg
dec
push
lds
cld
or
fdiv
push
pop
xchg
xor
in
mov
push
scas
outsl
into
ljmp
pop
outsl
fwait
or
inc
add
jne
rcrb
mov
data16
dec
mov
fistpll
add
or
mov
mov
mov
mov
cmc
ljmp
or
push
inc
mov
jns
fidivrs
leave
add
pop
sbb
sbb
ds
into
inc
jl
cld
push
fldt
jne
loop
cmpsl
iret
inc
fistpl
in
insb
add
xchg
popf
add
loopne
lret
insb
push
or
pop
cmp
into
imul
es
in
mov
mov
push
dec
mov
or
cmp
leave
mov
jp
inc
mov
cld
ljmp
or
andl
add
lret
std
and
rorl
lret
cli
and
mov
mov
popa
fs
bound
xchg
clc
sub
iret
sbb
mov
outsl
cld
push
push
push
lea
push
addb
push
aaa
lret
icebp
mov
enter
add
push
xchg
fmuls
lock
shll
ja
sbb
push
mov
fdivrs
adc
ficoms
mov
xchg
adc
adcb
and
popa
std
inc
and
es
xchg
push
ja
cmp
sub
add
cltd
pop
fisttps
cmp
mov
adcl
xchg
xchg
push
adc
pop
jge
inc
imul
pop
cmp
sub
jmp
loop
arpl
outsl
mov
push
or
movsl
adc
xor
loope
add
mov
dec
cwtl
push
mov
and
xor
test
jno
pusha
cmpsb
arpl
aas
add
mov
cld
push
and
iret
sbb
sub
hlt
lods
xchg
jmp
out
rcrb
out
sbb
fnstenv
adc
fucomip
mov
cltd
sahf
std
fxch
cmp
lds
sbb
push
xor
push
mov
mov
and
push
arpl
loopne
ret
cltd
sub
jno
jbe
ss
data16
push
mov
roll
loope
pop
mov
inc
add
scas
xor
xor
pop
mov
dec
add
mov
mov
bound
xor
flds
inc
lret
push
ret
leave
mov
fbld
int3
scas
mov
cmp
pop
dec
adc
in
mov
pushf
pusha
xchg
pusha
jmp
mov
sti
shll
mov
icebp
addr16
sub
shl
addr16
in
pop
inc
or
insl
aaa
xor
mov
in
mov
mov
cld
jne
add
or
mov
mov
pop
and
imul
cmpsb
mov
insb
sub
sbb
out
das
lcall
gs
push
mov
aas
mov
sub
adc
mov
xchg
cmp
xor
jecxz
int3
inc
xor
jne
xor
pop
hlt
push
push
les
pop
cmpsl
pop
shll
pop
and
loopne
int3
inc
data16
sbb
aas
jg
xor
adc
dec
shl
stos
xorl
sub
sarl
test
mov
leave
stos
jecxz
mov
cld
rorl
pop
sub
xor
mov
jp
jb
inc
inc
lret
je
jo
inc
std
icebp
sub
fs
jns
mov
jmp
mov
jmp
jge
jns
mov
iret
imul
mov
outsl
xor
fs
or
in
das
or
push
int3
fisubrs
test
xor
add
push
mov
ja
decb
aaa
ja
cli
loopne
adc
sub
out
inc
divl
pusha
aam
sub
ret
rcrb
popf
push
mov
cmp
inc
jno
mov
lret
mov
hlt
mov
les
adc
scas
ret
mov
jl
and
faddl
cmpsb
xor
shr
pop
mov
cmp
inc
pop
insb
cmp
and
nop
incb
daa
fstps
adcb
lret
in
inc
mov
gs
nop
movb
mov
cmp
pushf
out
popf
inc
addl
and
sub
cmc
ja
sbb
cmp
sbb
jmp
iret
lods
pop
and
cmp
pop
or
pop
push
mov
xchg
jo
mov
pop
xchg
test
xchg
insl
jb
sahf
dec
pusha
cmpsl
outsl
nop
mov
jle
xchg
popa
repnz
insb
leave
xchg
dec
and
call
int3
and
cwtl
aas
ja
ror
mov
bndstx
mulps
fwait
sub
mov
xchg
mov
add
leave
adc
inc
sub
mov
sbb
sbbl
addr16
shr
dec
jmp
sbb
and
sub
insb
ret
icebp
fbstp
ljmp
cmp
scas
aam
sub
jge
push
dec
jg
rolb
pop
ljmp
push
mov
push
xchg
adc
pop
out
xor
or
jle
cmp
es
push
out
pop
test
sbb
and
sub
fnstcw
adc
or
add
lods
insb
shl
cmp
cmpsl
aam
enter
sti
adc
pop
lret
stc
pop
not
push
pop
dec
mov
pusha
in
and
jbe
cmp
inc
in
ret
dec
pusha
or
jno
push
or
aam
adc
push
cli
lret
cmc
rorl
sbb
xchg
push
std
scas
insl
out
sbb
sub
cmp
clc
sub
fisubrl
dec
mov
push
mov
shl
clc
dec
out
pushf
out
insb
cmp
fadds
jne
push
xor
adc
sbb
add
mov
insb
jb
int3
lret
fiadds
mov
pop
out
sti
out
in
sbb
addr16
ret
xchg
dec
lahf
push
aad
icebp
push
iret
xchg
ret
xor
shll
jmp
test
or
outsl
pushf
adc
bswap
mov
pop
lcall
cmp
in
or
jb
insl
das
pop
sub
jecxz
rclb
xchg
cld
inc
xor
mov
sbb
fadd
mov
sub
js
mov
enter
jge
lea
sub
dec
xor
nop
dec
jge
lea
xor
jae
adc
cwtl
mov
sbb
push
xchg
and
repz
xchg
das
repz
out
xor
mov
pop
inc
push
lds
mov
pushf
xchg
cmp
cmp
std
dec
mov
mov
rclb
xor
sbb
dec
xor
shll
enter
pop
lods
xchg
or
sbb
pop
jmp
dec
push
push
aaa
cmove
inc
jne
mov
hlt
sub
mov
sub
pop
loopne
pop
je
adc
or
xchg
push
push
jle
mov
in
in
fildl
fcompl
mov
mov
movsl
adc
inc
xor
adc
jns
inc
push
jle
xor
ljmp
mov
repz
xchg
push
nop
fcmovb
int
mov
push
mov
adc
clc
push
test
scas
mov
jno
das
ja
test
dec
ret
pop
sub
push
adc
cmp
mov
movsb
mulb
aam
shlb
and
mov
stc
or
adc
cmpb
sub
xor
ljmp
stos
js
mov
adc
popf
cmp
inc
add
popf
push
mov
push
sbb
outsl
loope
or
cwtl
jmp
aaa
sub
pop
imul
mov
sti
out
das
or
sub
or
dec
mov
jecxz
ret
iret
fldl
notb
adc
inc
adc
std
pop
mov
stos
sbbl
imul
inc
or
movsl
in
push
aam
test
pop
mov
inc
xchg
mov
lahf
loop
cmpsl
adc
int
addl
std
push
xchg
repnz
or
dec
imul
adc
push
mov
aam
jg
scas
jg
or
jnp
cmp
sub
dec
sete
jbe
nop
and
mov
pushf
fwait
test
fwait
inc
mov
fwait
adcb
sbb
and
add
xchg
in
lods
mov
daa
call
rcrb
cltd
icebp
out
lret
push
inc
shr
int
push
jb
insb
push
jo
add
cmp
sahf
xchg
shlb
mov
or
rclb
fs
div
cmp
call
adc
sub
or
xlat
mov
sbb
mov
inc
pop
into
sub
mov
dec
pop
mov
sub
xlat
enter
fbstp
cld
pop
dec
adc
xor
inc
jl
mov
adc
mov
mov
out
addl
sbb
repnz
or
lahf
movsb
mov
int
inc
add
add
arpl
and
pop
shl
xchg
or
lret
jl
orl
scas
push
xlat
push
lds
adc
in
cmc
out
cmp
jle
push
push
pop
in
or
or
inc
sub
popf
pop
lods
inc
mov
repz
daa
jg
insb
cmc
mov
es
lock
iret
jecxz
sub
inc
call
out
jae
movsl
cli
cli
jne
rorl
test
jle
sub
mov
dec
hlt
sti
data16
sbb
call
pop
mov
inc
ret
push
mov
push
das
enter
and
xlat
lea
mov
push
mov
cld
testl
aam
adc
rclb
xchg
and
in
frstor
nop
ud0
loopne
int
dec
inc
and
pcmpeqd
scas
rcll
jp
xchg
lret
lea
or
imul
adc
sbb
mov
scas
cwtl
rcll
inc
repz
enter
add
mov
add
jecxz
add
aas
int
jae
sub
bound
test
scas
xchg
popa
mov
adc
adc
xor
adc
outsb
push
or
insl
int
add
pop
inc
int3
loope
es
sbb
jg
sub
add
aaa
cmpb
mov
jne
sub
or
and
insb
cmpsl
mov
lea
cmpsb
push
mov
xor
sbb
push
mov
stos
nop
lahf
fstpl
arpl
cld
and
stos
push
pop
and
push
fucomip
or
arpl
mov
movsb
xor
jge
in
jmp
and
jp
roll
nop
movsl
mov
mov
shl
shlb
hlt
mov
ljmp
in
insb
dec
fstpl
sub
adc
inc
daa
push
mov
push
push
mov
repnz
negb
sbb
sbb
jae
push
jb
cmc
add
js
push
int
and
sbb
sbb
rcl
jns
cmp
lret
lea
fmulp
xchg
out
ds
aam
std
movsl
cmp
cmpsl
adcb
in
clc
xchg
test
add
arpl
cli
add
pop
jg
data16
jge
imul
cs
or
loop
sahf
fnstenv
sub
xor
in
inc
add
aam
push
cwtl
jg
inc
push
push
sahf
lret
adc
mov
gs
setg
hlt
mov
adc
stos
dec
adc
in
xchg
cmc
and
or
add
xchg
sbb
lods
rclb
xor
add
xchg
ret
lret
loope
pop
imul
cmp
pop
mov
push
pushf
and
mov
xor
enter
push
popa
mov
jb
hlt
mov
bound
jnp
aaa
sbb
call
inc
imul
ret
shlb
pushf
cmc
out
and
clc
in
mov
inc
mov
mov
sub
sbb
test
out
adc
icebp
jo
cmc
lds
add
rolb
add
sahf
sub
jecxz
cld
xor
cmp
xchg
ret
and
stos
pop
cli
jnp
mov
xchg
inc
cs
jg
push
pop
test
lahf
xorb
test
pop
push
stos
stc
mov
adc
inc
mov
in
cmp
xchg
jnp
stos
push
xchg
mov
addr16
sti
inc
roll
scas
jmp
lea
shll
ret
lahf
xchg
inc
mov
out
fdivrl
or
push
mov
lods
jg
xchg
push
rorb
adc
call
jle
mov
mov
or
xchg
jb
cmp
dec
data16
inc
xchg
cmpsl
jecxz
divb
or
fcmovnu
pop
and
add
ljmp
outsl
fwait
scas
test
xor
shr
pmaddwd
test
add
sbb
stos
mov
test
cmp
stos
sbb
xor
int3
fcoml
inc
xor
dec
xor
jno
inc
out
sub
ss
jle
xchg
pop
fwait
dec
mov
mov
mov
call
shll
push
sub
or
repz
lods
sub
dec
inc
lock
arpl
hlt
loopne
fildl
inc
mov
inc
or
jo
mov
adc
negb
adc
xor
movsl
mov
mov
jge
in
sbb
adc
sub
inc
cmc
dec
sub
das
imul
mov
xor
cmp
addr16
adc
mov
enter
cmp
out
js
fdivrs
push
mov
ds
int
sahf
sub
cmp
and
movsb
inc
jmp
jmp
mov
sbbb
dec
sub
cmp
xchg
cmpsb
test
std
jp
lahf
jmp
movsb
and
cli
add
outsl
rolb
add
dec
add
insb
insl
mov
mov
lods
jge
fmulp
push
neg
mov
or
je
mov
dec
les
ret
fisttpll
int3
adc
pusha
sub
or
and
push
into
sahf
xchg
jae
mov
jmp
mov
jecxz
sahf
jge
in
xor
pop
fdivrp
mov
iret
fs
add
push
inc
hlt
stos
mov
enter
stc
icebp
iret
test
fwait
movsb
pop
push
loopne
cld
xchg
inc
dec
xlat
push
inc
lods
dec
sarl
ja
xor
not
or
insb
xor
sub
xchg
xchg
mov
add
add
add
pop
mov
or
mov
ds
xchg
popa
jecxz
data16
mov
xchg
mov
and
mov
mov
dec
or
outsl
inc
ds
push
cmp
xor
bound
xor
or
xchg
out
and
fdivrs
push
cmp
fucom
adc
mov
call
addr16
aas
daa
stos
in
pop
and
mov
mov
inc
xor
adc
adc
lods
clc
inc
xchg
push
outsl
xchg
arpl
xchg
mov
cwtl
mov
aam
rolb
nop
jae
jns
inc
xorb
in
pusha
mov
dec
lock
dec
in
out
push
fwait
scas
and
out
mov
inc
jl
adc
ss
lahf
int
sahf
jge
ret
mov
sub
or
das
shrl
adc
dec
mov
and
imull
xchg
jl
mov
fs
orl
sbb
and
stos
or
push
sti
mov
mov
sub
fs
push
adc
mov
xchg
xor
mov
jae
dec
mov
sbb
add
ljmp
cltd
dec
and
xchg
sbb
inc
lea
je
lret
insl
push
pop
sub
outsl
out
test
out
mov
int3
mov
notb
mov
adc
jbe
push
add
ficomps
pop
pop
lcall
xor
jae
aad
push
addr16
ror
jl
mov
pop
push
rclb
outsl
into
fs
roll
dec
fistpll
sub
mov
adc
sahf
xchg
hlt
jbe
cli
fisubl
aas
fstl
bound
lcall
push
pop
jge
push
js
out
imul
and
ja
lods
add
cmp
adc
filds
cwtl
inc
xchg
bound
sbb
cmp
cmp
push
pop
xchg
js
subl
mov
sarb
xor
aam
jo
stc
xchg
fsubrs
cmp
inc
iret
cmp
push
lcallw
jmp
and
mov
imul
subl
in
nop
mov
imul
sub
sbb
cmc
and
jae
xor
loop
dec
lret
inc
dec
mov
dec
jg
in
xor
jg
mov
and
into
call
fmul
dec
or
xchg
inc
aas
push
fistl
xor
jmp
adc
shlb
stc
jb
mov
mov
insb
les
in
lock
mov
jne
and
cmp
mov
fildll
and
add
dec
in
adc
xor
test
test
jno,pt
repz
clc
out
xchg
test
shlb
mov
enter
mov
sub
add
push
sbb
mov
cltd
and
addr16
and
clc
sbb
test
add
pusha
icebp
mov
movsb
cmp
inc
test
push
sbb
lods
jmp
adc
movsl
rep
leave
inc
mov
test
mov
aam
cld
fdivrl
dec
aam
xlat
push
addb
jmp
mov
mov
ja
mov
jae
in
popa
jae
movsb
lret
adc
cmpsb
mov
push
mov
lods
cwtl
cmc
fdivr
scas
mov
rcl
mov
dec
add
push
inc
dec
lods
stc
scas
xchg
into
cmp
add
push
pop
ret
sbb
xlat
flds
dec
cmp
repz
pop
inc
sub
cmp
cmp
cmp
pop
js
cmp
and
mov
cli
das
js
loop
jge
mov
inc
cmpsb
cwtl
arpl
mov
inc
mov
shl
or
cmp
aas
cmp
mov
dec
mov
and
test
cmpl
mov
mov
adc
stc
dec
ljmp
int3
pop
mov
int3
cmp
cmovle
jmp
mov
in
xchg
lret
sti
shll
add
dec
dec
outsb
mov
add
loop
mov
and
push
mov
repz
fidivl
adc
rcrb
popf
xlat
jg
mov
movsb
inc
in
inc
fs
cwtl
cs
inc
test
into
shrl
xor
sub
adc
insb
pop
insl
mov
lcall
add
and
cld
jp
xor
xchg
insl
int
movsl
mov
push
inc
mov
add
lods
pop
xor
lahf
cmc
pop
ret
add
mov
mov
mov
out
aaa
xor
xlat
pop
adc
in
mov
cmp
xor
add
push
mov
sbb
pop
call
push
je
in
ss
xchg
cli
int
and
xor
mov
add
add
and
pop
add
cli
scas
and
fildll
inc
cmp
in
es
sbbb
pop
aad
mull
push
in
jo
xchg
pop
sbb
push
sub
xchg
xor
pop
lea
icebp
movsl
bound
imul
sbb
int3
cmp
adc
or
jg
test
cmpb
cmpsl
push
shlb
xchg
jno
ds
fildll
push
icebp
push
jbe
jne
or
pop
je
xchg
and
push
and
fiadds
sti
es
jg
cltd
movsl
adc
pop
mov
sti
inc
stc
inc
in
cli
fmuls
daa
mov
cmp
jp
push
push
test
lock
std
mov
cmc
je
pop
mov
xchg
mov
mov
xchg
aaa
stos
insb
mov
shll
pusha
or
shll
in
mov
pop
int3
out
dec
mov
mov
inc
pushf
adc
leave
in
lret
xchg
jl
hlt
jl
jmp
loope
sub
xor
loope
cmp
aas
mov
or
popf
push
xchg
mov
andl
xor
and
dec
add
cld
adc
jecxz
xor
in
sub
cmpb
add
mov
shrb
pop
jbe
cmp
in
pop
sbb
jmp
enter
inc
or
mov
imul
dec
cli
mov
shlb
divb
inc
mov
pushl
cmpsb
test
mov
mov
loop
push
fisubl
cmc
ss
dec
lcall
ret
cmp
jp
adc
push
test
push
mov
cld
xchg
rolb
stos
and
sub
aas
and
pop
rclb
fisttps
sbb
jne
lret
sub
inc
imul
pop
cmpsl
stos
arpl
pushf
stos
gs
cmp
sub
in
and
loopne
in
ja
xor
jg
int
jle
cmp
add
xchg
sbb
jle
imul
enter
sub
jge
mov
into
xlat
scas
jno
popa
dec
push
lds
das
or
and
sub
pop
adc
xlat
cmpl
cmovnp
pop
add
ljmp
dec
les
movsb
rcr
repnz
data16
inc
jmp
ja
outsb
pop
pop
jo
loop
fucom
lds
les
movsb
jle
cmp
fisubl
hlt
andb
add
lds
jnp
sbb
ss
shrb
mov
shrl
jp
push
cli
ret
aaa
xchg
test
lods
cmc
inc
pop
stos
stos
jmp
mov
adc
icebp
sbb
mov
gs
repz
fsubrs
adc
out
icebp
mov
in
in
ss
sbb
loop
xchg
xchg
ljmp
cwtl
mov
mov
xor
fildll
xor
sti
add
sub
cwtl
dec
jp
inc
cltd
pop
and
sub
gs
mov
mov
into
or
push
mov
mov
sub
adc
and
in
cwtl
sub
inc
out
popa
lahf
rorl
dec
outsl
mov
mov
out
test
rcrl
adc
shll
jo
pop
inc
jmp
jmp
into
js
test
jp
pop
in
bound
cmpsb
adc
push
pop
mov
xor
ss
sub
fwait
xor
icebp
testb
or
jp
cmp
mov
dec
imul
dec
pop
pop
and
inc
sub
and
cmp
xchg
jle
push
ds
ja
cmpsb
dec
faddl
divl
cli
mov
sbb
sub
imul
push
notl
adc
aad
ret
call
mov
mov
leave
test
mov
mov
sub
xchg
jmp
into
pusha
cs
rcll
pushf
xor
push
pop
pusha
push
xor
out
in
test
push
ficompl
mov
xor
iret
mov
mov
mov
out
stos
and
mov
in
addr16
bound
sub
and
jle
mov
lret
test
lcall
cmp
push
hlt
fisttpll
mov
scas
mov
or
mov
sahf
loope
inc
repnz
xchg
shl
test
daa
arpl
push
ud1
mov
cmp
fwait
out
sub
jg
xor
fs
jo
rorl
nop
mov
nop
and
lods
or
cli
mov
popa
sub
outsb
mov
push
jecxz
mov
mov
outsl
mov
jp
les
push
cmp
and
sahf
addr16
outsl
jb
hlt
je
pop
jmp
cli
pop
push
imul
mov
pop
xor
mov
lahf
test
out
and
mov
imul
jg
adc
inc
or
inc
les
dec
inc
cmp
sbb
decl
mov
outsb
xchg
les
lock
sarl
add
push
int
dec
dec
pushf
fwait
shll
xorb
les
pop
in
iret
jo
sub
inc
sub
mov
sarb
jle
jmp
shr
adc
dec
shr
pop
jecxz
shrl
cmp
mov
dec
nop
ljmp
xor
sbbb
stos
std
xchg
outsl
addb
or
adc
lcall
shrl
dec
mov
sbbl
fistpl
test
test
xchg
es
repz
or
test
sub
loopne
push
xchg
mov
divb
daa
cmpsb
and
out
mov
mov
out
push
xor
out
adc
int
push
jne
inc
lret
jno
int3
sbb
outsl
popa
fdiv
loopne
test
adc
lcall
ds
scas
mov
cmp
in
adc
and
mov
enter
cmpsb
orl
cwtl
je
jnp
lret
sahf
in
xchg
fsubrp
iret
cs
pop
and
mov
adc
out
daa
outsl
or
mov
pusha
mov
pop
daa
mov
iret
imul
mov
lds
pop
loop
clc
and
cmp
dec
push
andb
mov
push
xor
into
or
fisubl
mov
and
out
cmp
iret
ud2
fwait
int
iret
jo
add
and
cmp
mov
inc
mov
sbb
cld
lods
pushf
lea
lahf
dec
dec
cmp
fcompl
ret
pop
mov
dec
insl
mov
xchg
inc
out
xchg
out
add
adcb
out
jmp
jbe
mov
ljmp
pop
cmpl
pop
push
lret
in
mov
test
arpl
push
fsubs
aad
push
xor
cltd
movsl
es
repz
out
sub
pop
lods
jg
xchg
repnz
or
or
cmp
lods
outsl
ret
sub
subl
rcll
dec
mov
in
mov
cltd
inc
or
jae
inc
repnz
scas
and
xchg
mov
insl
scas
push
nop
in
inc
or
push
or
imulb
lret
push
call
inc
mov
push
lret
aad
pop
push
jo
mov
jne
inc
in
and
or
dec
jbe
mov
out
hlt
stos
pusha
repz
call
fisttps
inc
jg
das
out
popf
adc
daa
fdivl
push
out
adcb
sbb
gs
gs
test
cs
test
push
mov
mov
cmp
jg
arpl
loope
je
add
sub
sbb
sbb
test
adcb
cld
jmp
xlat
cld
aas
push
jecxz
cmp
cli
mov
or
pusha
into
les
lcall
mov
xchg
subl
clc
in
stos
loope
inc
inc
inc
cmp
xchg
and
jp
insl
push
mov
outsl
jb
sbb
out
arpl
jbe
and
or
stos
adc
ss
add
shll
popf
divl
dec
mov
stc
or
inc
leave
pop
data16
in
sbb
fldl
xchg
xor
imul
shll
mov
sub
jnp
rol
pop
mov
and
xchg
adc
gs
lods
pop
inc
mov
jg
jg
pushf
jp
sub
mov
lock
lds
lds
in
inc
clc
mov
xchg
in
add
pop
test
out
mov
js
mov
xchg
add
adc
cmp
xor
sti
call
and
les
notb
jp
xor
mov
test
or
sub
mov
cltd
xchg
das
mov
mov
sysexit
xchg
adc
xchg
push
dec
ljmp
iret
loopne
clc
and
inc
mov
out
xchg
mov
jno
subb
aam
pop
pop
call
rorl
lcall
stos
cmp
clc
aaa
mov
dec
dec
jbe
insb
xor
int3
out
cs
ljmp
scas
xchg
test
mov
movsb
lcall
xlat
test
adc
ja
loope
rcrb
lods
hlt
int
xlat
adc
ljmp
scas
xchg
push
adc
xor
cmp
pop
and
mov
push
mov
jnp
popf
outsb
dec
push
jle
mov
das
addr16
pop
ret
fildll
gs
out
test
fcmovu
call
mov
dec
imul
push
clc
ds
pop
mov
mov
nop
outsl
shrl
mull
fnstcw
aaa
or
jge
push
fmuls
add
mov
imul
scas
sbbb
les
imull
inc
inc
roll
and
stos
mov
roll
stos
inc
add
push
dec
in
fisubrs
stc
pop
out
xchg
push
xor
shll
jmp
and
add
push
add
xchg
pop
imul
pusha
imul
lods
iret
jne
ja
loopne
cltd
sbb
in
xor
pop
inc
nop
repnz
mov
jne
orl
pop
iret
dec
pushf
bound
push
mov
xchg
jne
jns
adcb
sub
fldt
mov
fdivl
ss
enter
icebp
xchg
lock
shufps
ja
insl
popf
lock
popf
push
inc
jne
bound
rcrl
insl
cmp
aas
add
dec
call
cmpsb
cmp
pop
or
pop
repnz
orl
cmp
fisubrl
push
mov
enter
jp
pop
fs
leave
dec
or
icebp
add
inc
daa
adc
repnz
cmp
push
movsb
and
jmp
ret
and
mov
push
sbb
stc
cmp
jge
mov
nop
sbb
lock
cli
jmp
lahf
pop
out
mov
sti
hlt
xchg
cwtl
dec
fisttpl
insl
bound
mov
into
popl
rcrb
sbb
stc
mov
mov
fisubrs
mov
fsubl
sbb
mov
sub
pop
xchg
xor
lods
pop
fadds
pushf
push
aaa
push
ret
mov
ljmp
or
sub
nop
pop
shll
outsl
in
imul
ret
or
shll
mov
sti
mov
stc
loope
xor
lret
sub
imul
sub
lret
mov
pop
and
inc
mov
pop
mov
xlat
pop
lcall
push
decb
mov
int
sub
push
dec
jp
ljmp
or
adc
sarb
fiaddl
ret
sub
movsb
mov
dec
push
mov
lcall
imul
ret
or
xor
in
ficomps
inc
enter
sbb
mov
es
and
gs
scas
aaa
push
jl
ljmp
mov
sahf
mov
sbb
push
push
sbb
iret
in
call
and
inc
and
in
or
push
mov
adc
or
jg
xor
fdivs
pop
in
movsb
mov
popf
mov
sub
dec
mov
sti
jle
sbb
jle
lods
jns
push
mov
adc
mov
js
mov
cmpsb
data16
pop
int3
jle
inc
mov
pop
jns
out
pop
int
push
sbb
ret
push
push
repz
add
ret
sub
xor
das
test
sbb
pop
jo
fidivs
mov
imul
xor
lea
test
fdivl
in
pop
and
or
adcb
into
xchg
mov
mov
sub
push
adc
fxch
out
jo
js
and
or
jb
fcmovnb
pop
jo
cmp
mov
call
inc
int
mov
inc
jp
cmp
sahf
mov
push
int3
imul
out
mov
cltd
js
jnp
cmp
mov
cmovg
lcall
hlt
dec
and
adcb
test
in
xor
sbb
shrb
jns
push
jecxz
aas
mov
mov
adc
js
mov
jmp
cmp
jb
inc
mov
lcall
dec
cmpb
in
sub
and
mov
dec
xlat
cmpsl
jecxz
mov
sub
fldt
push
mov
nop
jne
pop
outsl
lds
mov
leave
or
push
insb
movsl
fwait
pop
ficomps
sbb
mov
dec
or
dec
xor
and
call
add
jl
xor
xchg
imul
in
dec
add
jne
and
push
rclb
cmp
lahf
fxch
loope
cmp
inc
add
in
div
pop
push
sub
cmc
dec
xchg
xor
andb
rclb
cwtl
test
cmpsb
jo
dec
mov
fistps
mov
pop
xor
mov
sti
test
nop
rorb
std
mov
mov
and
sbb
in
cmp
mov
outsl
pop
sbb
or
das
mov
jbe
lahf
enter
dec
adc
adc
mov
cmp
neg
pop
xor
pop
aas
insl
and
jmp
inc
xchg
sub
xchg
ret
xor
insb
add
gs
push
cmp
lret
sbb
cltd
mov
outsb
int
dec
pusha
mov
mov
xor
sub
sahf
enter
add
out
mov
jl
mov
ljmp
bndldx
ss
mov
push
pop
in
fsubrl
lret
push
xor
jns
pusha
stos
jp
push
xlat
mov
mov
and
mov
stos
mov
inc
scas
cmp
mov
add
mov
bound
in
add
sti
and
les
xchg
out
mov
dec
pop
xchg
push
cmp
mov
lret
dec
lea
js
dec
mov
lret
mov
lret
iret
jecxz
icebp
inc
gs
mov
popl
pop
icebp
loopne
add
das
mov
inc
mov
in
lds
fstps
test
or
mov
popa
mov
lds
jne
cltd
rcr
hlt
mov
enter
inc
xor
cmpsl
sub
cwtl
mov
addb
dec
shr
or
gs
addr16
pusha
icebp
mov
pop
repz
pop
mov
outsb
add
mov
xchg
adc
out
or
mulb
xchg
xchg
lods
fstpt
daa
cmp
test
xchg
lds
enter
cltd
cmp
outsb
jge
pusha
mov
jecxz
cmc
inc
inc
or
jb
cmpb
mov
cld
addr16
test
sbb
adc
jno
sarb
lds
pop
imul
or
cltd
xchg
not
inc
pop
lret
stos
insb
mov
jmp
lret
push
les
push
insl
out
mov
fstps
xchg
dec
mov
jl
mov
inc
addb
mov
or
push
xchg
je
fsubrp
outsl
mov
mov
or
gs
scas
ret
and
mov
out
out
stos
jp
add
bound
mov
mov
scas
sbb
push
mov
sub
enter
xchg
pop
fadd
inc
cld
shlb
movl
es
adc
and
xchg
dec
xor
push
jle
inc
inc
stos
mov
movsl
push
dec
adc
pop
jl
lret
fwait
and
adc
rcrl
and
into
cld
adc
push
rcll
jge
inc
mov
aam
arpl
les
popf
mov
or
and
aam
fldl
xor
inc
inc
mov
push
pop
shll
fsubr
adc
lcall
push
aad
push
neg
cmp
bound
or
pop
xchg
pushf
jle
out
mov
fcomps
cmp
or
push
data16
shlb
lods
dec
lretw
call
sti
inc
push
lock
pop
loop
ljmp
or
adc
gs
mov
fidivl
push
sub
dec
enter
and
pushf
dec
push
stos
aaa
std
arpl
nop
cmpsb
inc
and
fmuls
push
mov
push
mov
or
mov
adc
loopne
push
jge
test
cmc
and
lods
jl
or
in
push
lock
gs
aad
mov
or
add
aad
popa
push
adc
pop
dec
jge
and
bound
dec
pop
add
sahf
sbbl
mov
pop
dec
stos
or
push
inc
inc
nop
mov
cmp
insl
out
inc
dec
in
rcr
test
jecxz
and
bound
add
ds
mov
movsb
adc
inc
shll
mov
adc
xor
fisttps
jmp
stc
xlat
rorl
imul
pand
sub
lret
dec
cwtl
ja
ds
add
push
outsb
out
jb
jle
sbb
pop
cmp
mov
ficompl
arpl
push
std
and
imul
sub
lock
pop
jmp
pop
pop
xor
push
repz
scas
jecxz
aam
push
fildl
test
ret
cmp
adc
pusha
adcl
sub
or
rol
inc
xor
movsb
or
subl
pop
mov
push
out
pop
in
cld
or
mov
jmp
add
adc
mov
jle
xor
popa
stos
pop
or
arpl
nop
pop
test
cmp
js
scas
sahf
cmp
int3
or
add
pop
push
inc
cwtl
cs
mov
mov
cmp
jae
cmp
jle
int
movb
mov
mov
cwtl
cmp
xor
inc
cmpsb
sahf
dec
or
clc
sub
rclb
or
lahf
fstps
sbb
sbb
mov
cmpsb
or
push
movsb
inc
test
xchg
xchg
and
pop
mov
ja
call
out
fnstsw
fwait
sbb
out
ss
cmp
push
xor
lret
adc
js
outsl
mov
mov
cs
or
sub
lret
or
outsl
andl
lds
adc
inc
xor
mov
cmpsb
xor
adc
nop
ja
and
mov
aad
pop
cmc
sub
imul
dec
out
mov
add
fnstenv
cwtl
mov
dec
in
imul
pop
ret
fmuls
adc
lret
jp
outsl
adc
or
incl
jge
idiv
and
orb
out
inc
mov
or
lret
mov
aad
das
aad
sbb
sub
add
ficoms
imul
cwtl
out
cmpsl
cmpsl
sar
and
std
xchg
imul
jg
xor
fcomip
cmc
fistpll
dec
jp
fdivs
push
and
out
jns
add
xchg
pop
ljmp
lcall
cmp
aas
repnz
xor
inc
jmp
test
xorb
cmc
push
push
mov
adc
ds
aad
mov
jb
mov
aam
pop
fs
fadds
iret
pusha
mov
call
dec
add
ret
sub
xor
jne
jge
ja
push
dec
pop
mov
pushf
outsl
int3
enter
iret
xor
inc
icebp
or
out
xor
loopne
xlat
dec
inc
dec
xchg
xchg
adc
lods
mov
push
sub
repz
cltd
cli
xor
dec
dec
ja
outsb
mov
ror
sub
subl
mov
jno
dec
cmp
test
in
pusha
pop
jecxz
ja
add
ss
addb
sahf
jl
and
jns
mov
loope
outsb
mov
inc
mov
add
mov
cli
sbb
pop
mov
push
sbb
iret
lcall
lahf
pop
out
mov
mov
fmull
dec
roll
mov
xchg
rclb
push
pushf
xlat
push
je
pop
scas
adc
insb
jg
dec
jno,pn
bswap
add
and
add
pop
mov
and
je
mov
push
push
dec
push
add
and
inc
xlat
jne
jecxz
adc
pop
cmp
or
addl
out
xor
clc
cmc
mov
int
fldt
or
insl
pop
jg
cmp
das
inc
ja
pop
sbb
dec
jle
ljmp
jns
out
arpl
push
inc
push
fsubl
and
inc
cmp
xchg
adc
mov
cmp
adc
mov
and
mov
repz
stos
fistps
xor
cmp
test
enter
mov
aad
int3
clc
and
mov
mov
xchg
and
push
mov
das
out
outsb
or
mov
subb
jmp
cmp
je
sub
icebp
mov
mov
sub
xlat
fnstsw
pushf
fwait
add
je
push
out
orb
fdiv
inc
cmp
dec
leave
ds
daa
and
fnstsw
bound
cltd
mov
std
jns
pop
mov
daa
cmp
mov
bnd
testb
iret
cmp
xor
jo
cmp
lea
inc
fwait
jp
and
aad
pop
mov
mov
mov
and
xchg
ss
dec
cmp
psrad
or
fildl
push
xchg
sub
xlat
out
nop
mov
movsl
outsb
dec
dec
push
pop
fbld
jecxz
jbe
cmpsb
clc
or
int
mov
sub
lea
and
and
cmp
dec
inc
lret
xchg
or
shrb
insb
mov
mov
jge
xchg
iret
loope
cmpb
lahf
mov
loope
out
test
jnp
and
jge
sbb
ja
jg
add
aad
mov
and
sub
sahf
roll
xchg
xchg
push
jo
movsl
cmp
mov
sbb
xchg
push
sahf
sub
dec
cmpl
fwait
loopne
pop
sahf
push
aas
mov
jo
mov
and
stos
dec
push
cs
in
popa
daa
xchg
fs
lahf
mov
jle
mov
repz
popf
jp
subb
jmp
mov
cltd
insl
sub
cli
lret
push
clc
aam
idivl
pop
out
in
jb
cmp
mov
fisubrs
ss
sbbl
daa
sub
stos
xchg
mov
mov
movsl
andb
mov
pop
mov
cmp
dec
push
jnp
addb
push
in
cmpsb
pop
cli
repnz
insb
insl
xchg
pop
and
xor
repnz
je
dec
pop
out
push
or
sti
lahf
sbb
sahf
stos
add
mov
sbb
arpl
pusha
inc
cltd
lea
push
into
jbe
fisttpl
gs
sahf
lret
push
cmp
sub
jne
addb
sub
in
push
jae
xchg
outsl
push
adc
in
bound
sub
mov
fdivr
je
mov
cmp
imul
and
xlat
jb
scas
adc
cltd
pusha
xor
dec
and
in
cmp
and
mov
xchg
test
jo
push
jp
jmp
mov
push
xchg
ret
jnp
xchg
orb
lea
and
add
adc
nop
ret
mov
imulb
shl
push
pop
inc
andl
push
push
xchg
pop
xor
cmp
adc
pop
lock
inc
xchg
stos
lds
inc
in
pop
js
fstpt
out
in
sub
pop
sub
pop
push
outsl
cmp
es
out
cli
adc
push
jbe
and
xorl
xor
mov
cwtl
sub
mov
insb
rolb
jnp
jb
and
pop
and
mov
inc
sbb
jg
fwait
pop
fidivs
cmp
gs
push
xchg
adc
mov
mov
dec
fstl
or
sarb
lds
in
out
xor
push
addb
add
leave
add
pop
mov
and
xchg
push
gs
int3
stc
and
psubsb
mov
mov
mov
sub
insl
cwtl
ss
insl
stos
scas
cs
imul
pop
popa
push
jl
sub
push
pop
roll
aaa
mov
dec
xor
out
adc
js
jge
mov
lea
sub
sbb
push
jge
adc
and
mov
sbb
pop
loopne
out
sub
sbb
insl
xchg
xchg
data16
jne
push
mov
hlt
inc
fwait
scas
rclb
in
in
xor
mov
bound
add
jg
xlat
mov
mov
out
das
xor
push
inc
pop
imul
insl
jno
lahf
gs
inc
iret
movsl
cmpl
arpl
pop
push
subb
stos
mov
pop
cltd
mov
and
imul
jp
test
sub
xor
jge
pop
mov
imul
xor
icebp
jnp
movsl
shlb
mov
fdivrl
dec
adc
repz
or
xchg
fbld
ss
repz
pop
ret
shlb
in
inc
sbb
mov
int3
add
inc
pusha
outsl
add
scas
xchg
add
lods
scas
fs
aam
dec
and
add
dec
es
cwtl
sbbb
aaa
pop
mov
pop
insb
xor
mov
clc
adcb
cmp
ret
dec
push
mov
xor
mov
push
aas
stos
aam
shr
movsl
mov
sarl
add
xor
add
dec
adc
jno
inc
sbb
in
rcrl
arpl
aad
mov
cmp
dec
xlat
cmp
shll
dec
cmp
fisubrs
dec
push
andl
lret
mov
std
and
loopne
or
jl
and
shll
inc
std
adc
ss
mov
adc
add
iret
sbb
cmp
ljmp
mov
push
pusha
adc
jb
ss
jle
jge
mov
mov
data16
aas
jnp
sar
inc
xor
mov
sbb
leave
xchg
adc
push
loopne
inc
std
jmp
pop
test
mov
cs
call
stos
xor
push
xor
imul
hlt
sbb
xchg
addr16
mov
mov
sub
shlb
jnp
popa
mov
xor
inc
setb
or
cmc
jo
inc
mov
sub
rcrb
shll
cmpsb
aad
and
and
ret
adc
mov
mov
lock
lahf
incl
xchg
jmp
enter
lock
add
orl
jmp
ds
repz
push
sti
test
stc
jge
icebp
icebp
inc
pop
in
push
dec
shr
lods
dec
fwait
push
dec
stos
cli
push
push
jp
sbb
fsubr
insl
popf
inc
jb
sbbb
adc
hlt
inc
cmp
dec
xor
xchg
push
incl
cmpsl
adc
push
call
jno
mov
outsl
cli
aas
sbb
xor
mov
mov
notl
cmp
out
pusha
loop
cmpsb
dec
jns
cmp
xchg
jecxz
push
out
outsb
lea
std
mov
jnp
inc
lock
sahf
add
mov
ss
imul
or
iret
arpl
or
lahf
cmp
repz
mov
jg
lods
push
push
push
dec
lahf
test
out
and
sbb
jecxz
push
jbe
push
hlt
push
jb
inc
mov
sbb
test
adc
mov
dec
popa
push
jmp
inc
mov
sbb
fldenv
rcrl
mov
ljmp
fucomip
xor
ja
cmpsl
and
shlb
insl
jb
minps
sbb
dec
iret
jne
dec
pop
sbb
mov
pop
gs
adc
stos
mov
rorl
int3
iret
add
and
aad
es
popa
rcrb
mov
dec
sub
aad
push
mov
pop
cmp
push
into
sbb
addr16
push
rcrb
pop
inc
test
dec
cmp
sbb
xor
jmp
mov
sbb
loope
xor
pop
mov
pusha
sbb
hlt
out
add
in
aam
cmp
and
ljmp
and
callw
movsb
jp
cmc
aaa
addr16
lahf
out
adc
add
add
fwait
enter
es
or
cmp
sub
inc
mov
dec
aas
pop
stc
rclb
or
xor
pop
pop
pop
add
pop
pop
lret
and
adc
mov
imul
cmpsl
push
ljmp
and
lods
xchg
stc
xchg
dec
mov
in
stos
es
in
cwtl
or
jb
sub
je
cli
sti
loop
mov
cltd
lahf
mov
mov
xchg
fisttpl
mov
lret
sub
fucom
cmpsb
pop
pop
pop
add
and
add
std
loop
and
repz
in
jno
or
imul
inc
sub
stos
arpl
add
popa
pushl
or
xchg
push
xor
push
xor
mov
lods
cmp
xchg
int
add
inc
rolb
inc
inc
dec
xor
subb
fsts
jne
inc
xchg
or
addr16
call
push
adc
pop
ret
mov
pop
dec
mov
iret
cwtl
gs
rorb
jg
jecxz
push
push
push
add
dec
test
xchg
mov
js
sahf
outsb
inc
push
mov
sub
cwtl
fimull
cltd
xor
fisttpl
sbb
repnz
cmpsl
iret
fistpl
mov
jmp
dec
popa
sub
mov
and
xor
out
jl
inc
pop
mov
sahf
loopne
or
enter
test
outsl
cmp
and
dec
mov
mov
lock
mov
xchg
push
mov
sub
inc
push
jecxz
jnp
add
sub
test
xchg
push
add
add
ja
ret
lahf
xlat
jg
ret
mov
jae
mov
cmpb
aad
loope
fidivrl
sbb
loopne
push
mov
pop
jns
mov
cmp
sbb
pop
fsub
dec
or
movsb
sti
or
subb
stos
jmp
inc
or
sub
lods
cli
mov
fmull
xor
flds
or
jp
mov
sahf
out
fdivrs
rclb
not
mov
pop
cli
ljmp
pop
mov
jae
mov
test
sbb
sub
sbb
xor
inc
add
dec
adc
cmp
out
push
fsubrl
dec
cmp
mov
mov
sub
or
int3
das
ljmp
fistpll
xor
rol
insb
shr
pushf
xor
int
jle
mov
dec
mov
cltd
test
js
and
add
adc
addr16
sbb
pushf
ret
lods
mov
mov
xor
test
push
mov
pusha
mov
mov
sub
lock
sub
cmp
fwait
test
out
inc
and
lea
outsl
xor
jmp
mov
int3
xchg
sbb
in
cmpsb
mov
sbb
lock
mov
shl
push
xchg
or
and
push
adc
lea
fisttps
out
pop
adc
imul
flds
jp
add
test
jno
popa
push
jmp
push
stos
xor
jge
push
loopne
mov
std
cltd
jge
sbb
pop
mov
sahf
dec
add
lods
jb
lahf
add
lret
lea
xchg
jecxz
jle
andb
adc
and
repnz
jns
imul
dec
fists
repnz
sub
sub
dec
sub
mov
imul
stc
scas
pop
ss
hlt
loop
cmc
bound
adc
stos
and
je
negl
sahf
push
mov
shl
xchg
sbb
mov
inc
mov
das
and
and
or
jne
into
dec
mov
dec
loope
jecxz
push
ljmp
push
loop
ljmp
add
cmp
stos
jecxz
loopne
fisubrs
dec
jnp
cs
test
push
mov
cmpsb
cmp
dec
filds
daa
push
mov
jbe
sahf
push
push
sbb
sub
aaa
imulb
mov
sbb
jb
sub
popa
imul
outsb
mov
mov
inc
sbb
andl
mov
push
and
cwtl
mov
repnz
fwait
nop
inc
das
sub
pop
push
out
cmpsb
rcrb
sbb
mov
rcrb
stos
filds
mov
fidivrl
mov
popf
xchg
jmp
dec
stos
stos
sub
data16
mov
jns
cmp
lea
aaa
jg
push
dec
pop
mov
aad
sarb
loop
add
int
lret
adc
mov
jns
enter
and
movsl
aaa
and
mov
bound
insl
jb
cmp
jl
insl
enter
sbb
lret
inc
jno
dec
mov
add
leave
in
je
push
xchg
pop
and
imul
xchg
movsb
jmp
adc
inc
mov
loop
cs
mov
mov
subl
or
sarl
push
cmp
loopne
sti
ja
lcall
in
mov
sub
lcall
loop
fldl
pusha
ss
push
pop
sbb
fs
mov
mov
dec
fs
mov
movsb
call
mov
jns
je
add
inc
movsb
inc
loopne
fwait
scas
into
imul
pop
imul
jnp
cs
leave
mov
and
sbbl
jns
mov
or
iret
jns
loope
sbb
xor
add
pop
pop
lds
in
insb
mov
in
jge
sub
test
xor
push
fcomps
scas
mov
pop
xor
call
popa
loope
aad
stc
sub
mov
or
dec
cmp
rolb
sub
dec
dec
jns
lcall
mov
mov
subb
mov
add
pusha
adc
cltd
inc
aaa
outsl
fldt
stc
dec
jp
dec
loope
arpl
dec
mov
nop
icebp
cmpb
fildll
xchg
or
mov
je
divl
jns
lock
sti
mov
mov
mov
jo
lods
mov
xor
testb
stc
loop
pop
xorb
std
loopw
xorb
jmp
mov
mov
pushf
repz
pop
mov
sbb
and
xchg
xchg
leave
js
fidivl
notb
mov
lcall
adc
out
and
add
mov
cmp
push
pop
dec
and
movsb
lret
adc
pop
js
jbe
addb
inc
inc
mov
je
aam
fistpll
and
xchg
cmp
aas
pusha
out
lods
scas
lods
fucomip
test
jbe
mov
push
fcmove
sti
mov
or
push
shrb
jmp
add
xabort
xchg
and
addr16
cwtl
cmpsl
jbe
jno
xchg
fstl
adc
stos
dec
adc
or
rcll
pop
je
jae
std
hlt
xchg
jae
pop
xchg
notl
les
cmpsb
movsl
out
push
inc
sub
sahf
xlat
int
or
rclb
and
sbb
inc
scas
mov
ds
in
loope
test
mov
push
jns
stos
push
sti
and
rolb
mov
add
repz
inc
adc
push
outsb
add
in
xorl
loopne
add
inc
in
fiadds
adc
inc
and
mov
adc
add
xor
inc
dec
adc
jge
adc
lods
lret
cli
sbb
outsl
pop
test
cli
enter
imul
adc
pushf
mov
inc
pop
dec
mov
mov
mov
das
stos
mov
test
lea
nop
stos
sub
sbb
ficompl
daa
imul
mov
loop
jecxz
bound
lcall
punpcklwd
lcall
std
int3
xchg
mov
lahf
jnp
bound
mov
test
stos
mov
mov
mov
pop
outsl
adc
xor
bound
lds
out
cmp
test
or
jle
dec
mov
sbb
pop
packuswb
mov
repnz
js
sub
loop
sbb
sub
xorb
mov
pop
jecxz
es
jns
cmp
and
cmpb
mov
inc
dec
cmp
push
adc
sti
fst
call
mov
sub
ret
adc
xor
imulb
cmp
cmpsl
or
sahf
stc
in
mov
aas
insb
lcall
xor
aas
sahf
and
stos
sbb
cmp
dec
in
mov
and
and
clc
rclb
imull
iret
dec
adc
ljmp
aaa
mov
mov
or
test
inc
jmp
js
jne
xchg
ret
sbbl
push
pop
dec
std
testb
sub
aas
lret
out
or
add
pop
rcll
shrl
or
testb
scas
xor
adc
call
cltd
xchg
call
jge
in
data16
adc
cmp
mov
pop
xchg
inc
xchg
cli
les
dec
aam
sbb
stos
je
add
push
mov
ljmp
shrl
sbb
and
xchg
mov
idivb
sub
inc
cmc
sbb
xor
inc
mov
and
repnz
pop
or
cmp
mov
loope
xchg
push
gs
bound
out
ficoms
xlat
outsb
das
das
je
pop
cmp
or
or
enter
movsb
xor
mov
dec
sbb
push
movsl
setns
fisubs
enter
fidivl
in
hlt
mov
cmp
mov
sbb
imul
fisubrs
cmc
fisubrs
fwait
jnp
mov
xor
xor
pop
pop
int3
lods
adc
out
fs
rolb
mov
and
rcrl
test
pop
sub
jg
pop
gs
es
aad
shrb
adc
mov
cs
dec
mov
popa
lea
pop
loop
add
and
xchg
dec
mov
sbb
out
mulb
test
nop
je
nop
das
cmp
jns
sub
dec
bound
popf
movsl
xor
mov
mov
mov
repnz
mov
and
sbb
cwtl
cmp
push
sbb
jecxz
mov
rclb
mov
sbb
andl
imul
outsb
jge
out
outsl
mov
pop
mov
jp
cmpsl
sub
sbb
or
mov
faddp
mov
push
popf
addr16
sti
xor
cmp
mov
cli
shlb
outsb
mov
sti
cmp
and
xor
rcll
inc
push
rcrl
pop
iret
inc
hlt
xor
mov
cmp
push
hlt
mov
jge
pop
test
inc
ljmp
jae
out
sbb
cmpsl
stos
out
daa
cli
jno
jbe
inc
xchg
pop
cmp
jl
sbb
pushl
pop
fnstsw
push
pop
arpl
and
pop
out
popa
push
test
cltd
cmp
cmp
inc
lahf
mov
sbb
movsb
leave
popf
xchg
jae
fucom
ret
bound
stos
jg
ss
xchg
mov
xor
pop
dec
rclb
mov
std
inc
mov
and
stos
negb
sub
push
js
jecxz
dec
sub
imul
mov
cmp
mov
and
imul
jecxz
push
jl
loope
loopne
cmp
popa
lahf
lock
dec
das
pop
xchg
mov
movsl
orb
mov
sarb
es
mov
lahf
mov
and
outsl
sub
xchg
inc
xor
pop
lods
dec
cs
cmpl
sbb
sahf
adc
test
in
fnstenv
xor
sarl
lahf
or
movsl
cmpsl
and
mov
mov
jb
lods
dec
addr16
jmp
mov
or
jl
mov
sub
mov
leave
sub
adc
mov
fwait
xchg
imul
rolb
mov
pop
shll
aad
jmp
stos
dec
cltd
cmp
stos
arpl
popf
testb
into
in
and
and
lcall
cwtl
mov
rcrl
and
inc
movsl
xor
inc
add
cmp
shlb
mov
or
jnp
cmpsl
cmp
mov
mov
sti
dec
test
popf
cld
mov
add
fisubl
push
pop
rcrl
push
jg
cmp
dec
pop
xor
cmp
mov
stos
cli
leave
or
addr16
dec
mov
add
cmp
mov
loop
mov
mov
cs
clc
sbb
js
clc
sub
loop
adc
mov
dec
pop
xchg
orl
addr16
adc
iret
add
cmp
pop
push
dec
int3
mov
iret
movsl
movsb
mov
mov
xchg
das
or
pushf
mov
push
mov
fadds
push
jbe
xchg
add
xor
je
mov
mov
loop
or
int
gs
std
scas
jne
dec
call
xchg
and
mov
mov
mov
hlt
or
push
pop
mov
js
pop
arpl
and
loopne
xor
mov
or
dec
lock
sti
ds
add
scas
sub
vdivpd
lods
fimuls
stos
test
dec
jno
imul
xor
jmp
lret
inc
pushf
ret
dec
pop
mov
jle
pop
movsl
enter
stos
sti
mov
jo
jno
cltd
dec
in
rclb
insl
mov
pushf
mov
mov
mov
xchg
je
add
into
xor
sbbl
xor
mov
cld
mov
stos
sahf
lret
jmp
dec
sub
fldcw
mov
aaa
test
subl
or
mov
push
icebp
inc
xor
loop
sub
adc
push
into
icebp
fwait
not
ds
jmp
xor
mov
setae
mov
jge
dec
cmp
shll
push
or
and
leave
hlt
sbb
xlat
das
arpl
imul
push
call
or
xchg
adc
push
or
sub
sarl
add
dec
adc
xchg
jo
imul
ja
loop
or
fwait
loop
scas
inc
int
loop
in
ret
sbb
mov
mov
and
imul
pop
sub
jmp
cmp
jbe
adc
popf
inc
insl
inc
dec
lcall
in
lea
mov
dec
lahf
pop
adc
xlat
cs
fistpll
and
fcoml
xlat
inc
sbb
stos
push
mov
imul
mov
lcall
lretw
pop
ficoml
mov
jo
push
insl
push
cmpsl
iret
mov
inc
push
movsl
hlt
xchg
add
leave
sub
sub
test
xor
inc
mov
dec
mov
sub
js
mov
imul
cmp
cmpsl
test
es
and
mov
or
adc
cmp
cmpsl
inc
push
sub
push
adc
pop
repnz
aas
repz
in
mov
popf
std
fwait
dec
adc
shl
cmp
jp
mov
xlat
addl
aas
inc
in
lahf
cs
push
fwait
or
mov
stc
mov
xchg
mov
jae
jns,pn
cwtl
test
jge
and
call
dec
stos
fstpt
xchg
add
notb
enter
mov
arpl
into
notl
fwait
out
lods
jno
jmp
xor
mov
test
outsl
ret
xchg
xor
int
and
xchg
aas
xchg
mov
xchg
xor
outsb
jb
insb
push
test
mov
cs
test
pop
and
xchg
mov
mov
lcall
ss
fsubr
cmp
jecxz
movsl
jmp
or
xlat
jp
jb
mov
jns
adc
mov
and
push
pop
loop
add
jmp
cld
push
test
bound
cmpsl
loope
and
ret
bound
push
push
cli
jecxz
test
icebp
sub
scas
fildll
shr
cltd
loop
mov
pusha
adc
int3
add
push
jl
int
shll
xor
xor
or
cltd
aad
jns
xor
cmp
sbb
mov
mov
lds
inc
call
cmpl
pop
movsb
mov
scas
inc
sub
or
fcomps
movsl
das
adc
ficoml
push
bound
iret
aas
dec
xor
push
inc
pusha
dec
imul
pop
ljmp
xlat
ljmp
sbb
adc
fmuls
test
jl
jae
push
jge
scas
les
inc
xchg
ficomps
cmp
shlb
mov
incb
mov
addr16
loopne
adc
mov
mov
push
int
fcmovbe
inc
pop
sete
cmp
push
pop
inc
adcb
xor
sub
mov
pop
pop
push
test
addr16
clc
stos
imul
cli
rclb
inc
jp
or
enter
out
repz
movsl
cld
push
lock
dec
add
pop
jle
das
inc
cmp
mov
dec
mov
and
mov
aaa
jns
arpl
lock
or
sub
js
lods
cmp
pop
jmp
movsl
leave
aas
dec
mov
jnp
push
outsb
clc
imul
rclb
imul
pop
push
adc
push
insb
dec
dec
stos
insl
xor
push
push
mov
mov
jecxz
stc
adc
inc
xor
icebp
shlb
inc
pop
loopne
add
sub
sbb
daa
insb
pop
cmpsl
cmp
jl
test
ret
fldz
xor
mov
sub
arpl
push
push
pop
mov
mov
jno
mov
xorb
imul
xchg
adc
int3
fisubl
fadds
sarb
dec
jmp
or
jmp
mov
fmulp
and
daa
shlb
or
int
pop
gs
mov
mov
or
or
mov
pop
aam
js
sub
mov
sub
popf
hlt
dec
pop
movb
into
insl
pop
repnz
add
sub
push
inc
adc
rcl
js
adc
mov
int3
call
push
pop
mov
dec
shlb
adc
pushf
test
push
jecxz
push
lahf
lods
and
jae
stos
popf
or
cmp
loope
in
lret
icebp
pop
jno
jbe
push
daa
in
pop
stos
mov
test
fsubs
mov
push
arpl
mov
and
xor
ret
je
inc
repnz
sbb
hlt
icebp
lea
out
add
mov
pop
sub
mov
loop
out
mov
sbb
mov
jnp
pop
pop
andl
xor
jb
cld
mov
adc
lock
stc
nop
push
or
nop
loop
mov
xor
lods
loope
ss
add
mov
ret
sub
sub
cmp
filds
fidivs
cmp
or
movsl
pushf
std
aaa
or
pop
push
ds
hlt
into
mov
mov
fldt
bound
lcall
jge
in
or
mov
call
mov
fldt
pop
cmpsb
push
inc
jp
pop
lret
loope
jle
xor
push
clc
push
call
inc
pop
enter
push
test
imull
gs
out
ljmp
dec
and
jmp
sbb
iret
insl
ret
xchg
shlb
ljmp
mov
jecxz
lret
sbb
rcl
adc
xor
jle
push
inc
mov
ss
ret
add
gs
inc
es
pop
or
xchg
and
pop
imul
push
sbb
dec
or
fs
or
test
sub
jp
pushf
push
fisttps
cmp
mov
gs
jg
pop
cmp
stos
repz
or
xor
xchg
push
dec
popf
adc
pop
insl
xor
push
roll
cli
mov
push
cli
out
ja
test
ljmp
or
mov
mov
or
pusha
lock
cmp
push
lret
jle
xchg
sti
pushf
lret
mov
leave
fs
jne
push
xchg
push
and
mov
sub
adc
mov
pop
cld
xor
ljmp
ret
ljmp
mov
andb
fwait
test
imul
or
mov
out
mov
xchg
inc
movsb
jecxz
pop
icebp
aad
jns
cs
mov
push
lcall
fwait
in
or
and
push
push
addr16
divl
les
sbb
das
shlb
shlb
aaa
push
cmp
int3
fistpll
mov
fwait
push
or
xchg
es
jmp
sahf
inc
aas
adc
repnz
pop
ret
shrl
rcrb
std
jl
shl
stos
sbb
sub
mov
ficoms
shll
adc
or
xlat
mov
and
ret
xchg
and
fimull
out
push
xor
imul
pushf
addr16
mov
dec
in
mov
les
stos
hlt
sub
pop
or
loop
faddp
flds
cmp
xor
mov
rolb
lds
jae
mov
push
add
cmpsl
cmpsb
add
mov
ss
repnz
xchg
test
repnz
popa
movsl
mov
sub
arpl
bound
jg
xor
or
loope
in
dec
sbb
or
mov
jg
nop
frstor
jno
js
lods
add
or
xchg
repz
neg
dec
mov
jg
inc
cmp
pop
shr
scas
pop
lret
out
inc
mov
das
lea
sub
jne
das
cs
imull
and
movsl
push
dec
add
dec
cmpsb
jbe
leave
daa
fdivrl
mov
mov
or
subb
mov
test
insl
mov
mov
ljmp
ret
fiadds
sarl
mov
sbb
scas
sub
cld
dec
push
sub
ss
dec
in
cmpsb
pusha
cmp
mov
imul
in
cmp
sbb
test
sbb
movsb
data16
subb
sbb
ljmp
lds
jns
into
pop
rcll
test
mov
cs
addr16
aas
lods
outsl
prefetchwt1
or
decl
pusha
mull
xchg
lea
ja
mov
cmpb
subl
fldenv
push
sub
int3
adc
repz
imul
xor
cmp
pushf
mov
enter
or
or
in
mov
jmp
mov
loope
inc
enter
lods
js
sahf
lock
out
jb
addr16
int3
movsl
mov
aaa
aas
mov
iret
inc
xor
fiaddl
out
mov
mov
mov
pop
movb
push
add
adc
adc
jge
fsubp
mov
fisttpl
andb
ljmp
pop
fsubs
fdivrs
push
leave
lock
and
daa
stc
lock
cltd
xchg
fsubs
pop
cmp
loopne
sti
icebp
cmpsb
inc
push
addr16
je
push
cmp
cmp
mov
int3
and
mov
jne
push
lahf
push
jge
pushf
xor
cmpsb
xor
fsub
fcomi
mov
imul
loope
lock
imul
decl
loop
loope
inc
sbb
adc
push
dec
cmc
pusha
int
pop
loope
dec
or
or
mov
sub
or
jp
add
lret
sbb
cmp
xchg
idiv
xor
add
imul
inc
xchg
and
std
aas
cmpl
scas
aam
sarl
dec
loopne
mov
outsl
mov
adc
mov
scas
loopne
cmp
pop
dec
sub
nop
add
mov
daa
add
arpl
xor
stc
ja
enter
mov
outsl
xchg
cld
jns
push
jb
out
into
mov
ss
in
dec
test
xlat
cld
xlat
test
push
jge
jbe
sbb
xorb
jo
xor
push
add
data16
mov
inc
in
pop
or
mov
and
imul
test
push
jne
push
push
mov
imul
aas
ror
stos
movsl
mov
hlt
sub
mov
jns
mov
xor
xor
mov
push
adcb
cld
xchg
hlt
pusha
or
sti
push
mov
aaa
jp
mov
sbb
and
push
lods
fdivrs
aad
fstpl
xchg
push
lock
fs
pop
jle
sbb
scas
adc
leave
inc
cmpl
inc
xchg
repnz
pop
data16
dec
mov
jb
xor
jbe
inc
cld
cmp
pop
mov
mov
xchg
and
mov
aaa
pop
cwtl
jo
jle
pop
in
pop
mov
cmpsl
pop
movsb
adc
pushl
cmp
icebp
add
shll
push
or
scas
scas
and
pop
dec
mov
push
xor
daa
push
fldt
adc
mov
lahf
clts
add
sbb
adc
jb
stc
subb
xor
test
jb
pop
add
fdivl
movsl
add
push
es
test
mov
sub
gs
ja
mov
and
dec
nop
lret
shl
and
sbb
xchg
push
jne
sbb
pop
xchg
push
sub
xchg
xchg
sub
in
inc
jae
push
inc
push
dec
pop
mov
mov
shlb
imul
int3
aad
pop
stos
pushf
nop
jge
cmp
cmp
fsubl
imul
ret
rcrb
sar
aad
mov
notb
cmpsb
test
stos
hlt
bound
test
sbb
mov
pop
insl
add
dec
push
pop
pusha
xchg
lods
and
dec
xor
or
sahf
push
xchg
pop
mov
pop
push
testl
ret
or
fstpl
sarl
sbbb
inc
mov
jno
jae
mov
ljmp
cmp
inc
cmpl
jo
test
repz
or
xchg
pop
sub
repz
xchg
xor
mov
daa
addb
add
pop
iret
sub
mov
push
inc
in
pop
out
pop
adc
mov
xchg
jb
and
sahf
into
cmpsb
int3
jnp
cmp
adc
sbb
add
jne
hlt
out
sub
sub
stc
add
mov
mov
inc
pop
sarb
and
rcrl
pop
fucom
enter
xchg
cmp
pop
pop
fimuls
push
leave
sub
sub
testb
push
xchg
jns
lahf
add
mov
mov
or
dec
sub
cmp
push
push
jle
push
bound
mov
clc
lods
cltd
push
dec
mov
lahf
adc
cmp
cmpsb
jns
das
add
inc
mov
mov
push
pop
mov
xchg
and
adc
pop
gs
lods
xlat
cmp
aad
rcrl
lcall
or
cli
incl
fildl
and
mov
out
adc
inc
js
or
push
mov
dec
and
adc
pop
sbb
movl
jno
mov
loop
and
insb
add
test
sbb
add
xchg
adc
cmpsb
andl
test
push
aam
fistl
iret
inc
xchg
pop
inc
dec
inc
or
das
icebp
sub
lcall
xchg
cld
lea
pushf
imul
push
push
test
in
sahf
sub
int3
js
pop
xchg
sbb
leave
in
mov
xchg
sbb
pop
mov
dec
or
push
xchg
sbb
mov
push
je
pop
out
scas
stos
shrb
test
test
or
xor
xlat
cmp
shll
outsb
dec
and
xchg
adc
pop
pushf
or
popf
shl
insl
mov
mov
xor
cmp
enter
sub
jb
and
out
inc
push
inc
mov
data16
subl
leave
push
test
ja
scas
lret
xor
adc
movsb
clc
pop
and
in
xlat
push
stos
mov
fs
lahf
lock
xchg
xchg
cmc
stc
sub
dec
mov
jle
mov
xchg
inc
inc
out
xor
fnstcw
xchg
sbb
mov
loopne
xchg
cltd
addr16
insb
cwtl
in
xchg
data16
and
mov
sub
cmp
loope
sar
stos
mov
dec
jmp
mov
cmp
xor
shlb
add
pusha
mov
xadd
pop
push
aas
jl
divb
jbe
roll
mov
mov
stc
cmp
aad
scas
sbb
shlb
dec
pop
adc
mov
push
pusha
lret
loope
push
outsl
mov
lret
leave
bnd
movaps
push
or
enter
movsb
mov
sbb
jne
adc
xor
jle
sahf
fstpl
into
inc
mov
jl
push
and
fwait
xor
inc
gs
imull
mov
xchg
inc
push
sub
int
fs
insl
test
add
sbb
jns
add
inc
jmp
movsw
scas
pop
sti
xor
push
out
sbb
pop
ret
movsb
in
or
pop
add
and
pushl
mov
aas
dec
inc
mov
dec
xchg
jbe
and
add
cmpsl
push
lds
lods
rcrl
pop
pop
das
aas
jl
xor
insb
xchg
dec
aam
lgs
lret
sub
adc
inc
sub
push
cmp
outsb
mov
sub
sub
adcl
out
cmp
cmp
push
or
cs
mov
dec
jge
fld
add
pop
dec
mov
inc
push
mov
sti
pop
nop
cwtl
jp
xor
pop
dec
mov
cmc
loope
fucomp
adc
inc
fimull
aad
and
cmp
adc
shll
push
mov
ret
arpl
push
fwait
int3
cmp
or
push
in
loopne
inc
das
in
mov
clc
pop
sahf
push
daa
subl
rorb
in
addr16
in
test
mov
addr16
imul
insb
adc
push
in
aad
and
inc
dec
clc
loop
jnp
inc
nop
pop
push
and
daa
jnp
sahf
out
arpl
std
mov
ja
dec
test
in
pop
mov
daa
loope
lret
stos
jae
fwait
call
adc
stos
test
push
js
mov
or
icebp
hlt
in
popf
pop
sahf
shlb
or
lahf
jbe
adc
push
cmp
lret
lea
push
sahf
jecxz
rcr
push
insb
arpl
lea
xchg
in
or
mov
jg
out
daa
mov
sbb
push
mov
lahf
push
into
mov
icebp
xor
arpl
and
inc
pop
and
test
insb
inc
sub
enter
arpl
movsb
mov
out
push
add
sbb
lahf
add
pop
and
mov
sub
sti
or
cmp
xchg
movsl
jb
stc
and
inc
sub
out
inc
rep
dec
jg
roll
jmp
jmp
push
movsl
mov
xchg
sbbl
test
loop
repnz
sub
test
adc
dec
cmp
mov
outsb
das
shl
mov
mov
das
cli
cmp
mov
and
and
fimull
iret
mov
icebp
in
xor
push
test
testl
or
mov
xor
outsw
mov
add
lock
jae
test
sbb
loop
fisubrl
ret
cmp
bound
test
or
out
in
decb
push
pop
push
loop
test
mov
push
test
cltd
ljmp
xchg
adc
movsb
mov
push
and
cmp
test
push
pop
mov
cmc
and
mov
pushf
cmpsb
dec
lahf
insb
mov
iret
mov
scas
out
xchg
pop
jecxz
jl
mov
decb
lfs
mov
aad
mov
es
gs
fists
cli
jp
or
iret
subl
pop
cmp
sbb
dec
shrl
sub
cld
popf
pop
mov
out
loopne
in
mov
mov
ljmp
jne
outsb
into
sbb
jnp
inc
repz
mov
jmp
mov
mov
inc
mov
jae
into
lods
mov
push
mov
loop
jl
bnd
iret
mov
cli
pop
cmp
push
cmp
push
test
dec
mov
cs
and
jle
aad
repz
and
popa
stos
pop
jnp
lret
sbbl
sbb
jp
lret
jmp
sti
imul
out
and
add
iret
push
or
sti
mov
add
push
xchg
cmp
lahf
ljmp
sub
mov
popf
sbb
mov
xchg
stos
cmp
repz
es
inc
scas
jl
jecxz
dec
jns
jae
jnp
xchg
mov
and
or
mov
xlat
hlt
mov
add
jno
xchg
mov
xchg
mov
pop
lret
pop
int
mov
jecxz
fbstp
popa
xchg
fld
imul
adc
stc
movsb
push
stos
popf
hlt
in
dec
inc
daa
jbe
rcrb
fisttps
push
pop
inc
push
aam
jnp
es
inc
sub
sar
pop
mov
lds
mov
js
add
xor
test
or
aas
xor
int3
cmp
mov
aad
mov
jle
or
lods
dec
push
cmp
push
sbb
cmp
mov
xor
mov
fcmove
sbb
cmp
adc
repz
jae
sbb
lret
mov
lea
xchg
bound
aad
mov
mov
mov
in
shll
testb
jno
mov
pop
fs
dec
outsl
rcrb
ja
cmp
shlb
cmp
std
int
mov
push
lea
mov
mov
push
fidivrl
fisubs
cmp
sbb
add
rcrb
and
sbb
or
lcall
mov
jns
lret
sub
cli
ds
inc
inc
repz
pop
stos
mov
push
dec
push
lret
pusha
js
lahf
mov
push
or
in
mov
xlat
loop
fstpt
lods
ret
ss
lret
not
push
rcrb
sbb
ja
mov
inc
jmp
cmp
pop
mov
lock
orb
adc
out
loop
add
dec
mov
jg
stos
das
fdiv
mov
or
mov
incb
stos
mov
mov
xchg
leave
pop
faddl
and
jecxz
mov
pop
mov
stos
sub
inc
dec
and
mov
test
mov
mov
add
mov
dec
out
pop
push
pusha
jg
clc
sbb
xchg
lods
xchg
pop
out
cld
xor
aad
mov
fnsave
xchg
or
mov
and
gs
mov
adc
pop
pop
rorb
dec
out
xor
sub
mov
push
movsb
push
cmpl
mov
mov
aad
loop
icebp
movsb
and
scas
mov
adc
imul
daa
push
add
pop
je
shlb
pushf
xor
jne
test
sub
jne
xchg
dec
js
lea
jg
xor
enter
incb
push
pop
dec
push
bound
push
jecxz
xchg
ljmp
inc
mov
out
cmp
imul
mov
jnp
movsl
aaa
sti
and
jnp
inc
add
imul
frstor
xchg
pop
popa
popa
fidivs
std
mov
pushf
adc
dec
idivb
add
cmp
fldcw
cmpsl
dec
lahf
stos
jge
add
mov
xor
test
lahf
xchg
and
std
adc
xchg
adc
mov
aas
in
and
inc
test
mov
outsb
sbb
rcr
movsl
daa
pushf
or
and
add
mov
adc
sbb
sti
lods
daa
dec
daa
lret
jne
inc
imul
int
int3
bound
jbe
lahf
pusha
out
mov
in
or
inc
xor
test
lahf
aaa
sub
pop
xor
ret
jno
and
outsl
add
repnz
jnp
mov
adc
sbb
mov
and
adc
fcomps
lock
stc
imul
adc
mov
fistpl
sbb
in
lock
out
adc
ret
jne
mov
js
sbb
xor
xlat
enter
inc
int
enter
lret
xor
repz
add
pop
shlb
sbb
jne
cmp
push
shl
aaa
dec
test
cmp
mov
push
adc
mov
cmp
inc
inc
fisttpll
insl
push
push
jp
test
sbb
xchg
outsl
fidivrl
test
lahf
jg
icebp
dec
lock
mov
mov
test
mov
mov
dec
gs
inc
pop
es
sbb
ret
out
imul
push
and
ss
icebp
dec
sbb
push
add
xchg
xor
movsl
lods
jb
arpl
pop
lahf
xor
sub
dec
xor
es
addr16
jl
xchg
and
lds
xchg
movsb
inc
scas
ja
sub
jno
pop
scas
sub
xor
sbb
push
fimull
or
or
fcomps
sub
push
dec
outsl
mov
inc
and
aas
jecxz
stc
into
mov
sarl
jbe
xchg
push
mov
sub
hlt
iret
fidivrs
add
sub
test
scas
push
cmp
into
es
fbstp
add
and
mov
gs
ljmp
inc
dec
leave
adc
enter
push
adc
pop
jle
lock
popf
push
sub
shrl
mov
mov
pop
and
fistpl
ja
cmc
push
lods
jbe
add
jbe
pop
in
fcoms
jns
nop
mov
push
aad
mov
lea
mov
maxps
push
rorb
cmp
enter
mov
pop
mov
test
jg
fwait
mov
sti
in
mov
ljmp
lret
daa
jae
jne
rolb
cmc
and
cmp
push
fldcw
mov
xor
icebp
filds
std
mov
stc
xor
out
xchg
push
pop
push
fildl
sbb
fmuls
jae
mov
in
pushl
xor
jmp
adc
mov
test
sub
js
inc
pop
hlt
xchg
loope
fldenv
aas
pop
adc
mov
lds
push
and
icebp
and
mov
mov
out
jmp
mov
imul
cmp
sbb
cld
jge
in
push
cmp
cmp
mov
stos
lods
insb
pop
sbb
mov
aas
or
mov
imul
test
and
fwait
out
jb
movsb
dec
cmc
lods
add
mov
mov
iret
mov
fcom
aam
add
rcrb
inc
jmp
lcall
cmp
les
pop
push
popf
jnp
divl
outsb
push
mov
inc
movsb
call
push
daa
and
pop
pop
cmp
cmp
dec
movsb
jbe
cmp
mov
cwtl
movsb
cltd
ret
rcrb
enter
fisubrs
cmpsl
jae
data16
enter
in
lret
ror
add
outsb
jns
stos
js
add
mov
jl
add
inc
adc
movsl
pop
mov
bound
out
push
ljmp
add
jns
xor
cmp
sbb
mov
cmp
mov
in
xor
xchg
ret
add
push
incl
ljmp
add
fidivrs
stc
adc
stc
aam
popf
jne
xchg
lods
movsl
dec
rorl
leave
dec
mov
and
cmp
aaa
test
ret
mov
xor
or
pop
cmp
cmp
and
cwtl
adc
into
dec
dec
or
ds
dec
mov
mov
andl
fistps
xchg
lret
cli
push
xlat
adc
jae
push
push
repz
scas
xchg
inc
inc
sub
and
pop
cmp
cli
jl
pop
inc
dec
and
and
aad
lea
outsl
jno
pop
or
jns
add
mov
stos
xchg
or
inc
mov
mov
jp
sbb
mov
ret
inc
mov
mov
dec
ficompl
es
enter
out
xlat
mov
mov
rcrb
cltd
mov
jnp
sbb
negl
sti
push
ficompl
int
push
fists
mov
stos
pusha
les
and
add
mov
ja
jne
push
push
pop
out
xchg
sti
orb
push
cli
inc
icebp
xchg
pushf
sti
cltd
mov
cwtl
add
rolb
pop
sub
sub
filds
add
mov
mov
cwtl
mulb
outsb
cmp
pop
jae
push
and
mov
in
inc
aaa
stos
in
add
jmp
insb
and
fsubrl
sub
xchg
mov
mov
or
mov
imul
pop
push
xchg
fcoml
les
sbb
mov
loopne
lock
rcrb
iret
mov
call
or
or
mov
out
fsubl
jle
add
out
mov
pop
inc
pop
fs
xchg
js
scas
subb
imul
insl
cmc
je
rcll
mov
rolb
xchg
xor
sub
pusha
shrl
and
xchg
push
xchg
addl
push
dec
xchg
xchg
dec
mov
movsb
dec
cmpsl
pop
xor
pop
lret
mov
push
data16
cmp
mov
fwait
je
mov
cmp
lods
rorb
repz
stc
adc
int
repnz
pop
xor
mov
test
je
mov
cli
push
ss
sarb
dec
pop
dec
test
jg
mov
loope
in
popf
mov
clc
pusha
movsb
mov
mov
aam
adcb
mov
or
add
notb
lea
jecxz
pop
mov
js
sti
cmpsb
push
lcall
mov
and
or
pop
push
loopne
arpl
push
or
xchg
jecxz
dec
xlat
nop
lods
aam
iret
adc
lcall
fcmovnu
in
daa
sar
cmovbe
hlt
lret
cmpb
dec
mov
jbe
pop
cmp
push
and
jl
cmp
push
pop
fwait
movsl
cmp
fisubrs
ror
lods
push
mov
push
mov
out
outsl
out
jmp
cmpsb
mov
mov
int3
push
aad
adc
inc
push
mov
pushf
mov
dec
shl
pop
sti
nop
cmp
add
fistpll
ljmp
cmp
push
xchg
lret
jno
sbb
cmpsb
adcl
lock
fbld
jle
andl
sbb
sarb
or
sbb
xor
pop
addr16
sub
fs
lods
inc
add
cltd
xor
mov
pop
cltd
daa
in
test
movsl
inc
inc
jbe
add
dec
xchg
repnz
cld
jmp
outsb
iret
testl
loopne
out
mov
fcmovnu
lret
loopne
insb
and
xor
push
fcmovb
jle
incl
push
pushf
xchg
adc
push
xor
or
xor
repz
xor
push
cmp
std
inc
negl
stc
fstp
repnz
sub
movsl
in
out
clc
lret
or
je
mov
fbld
insl
mov
sbb
fs
pusha
pop
jl
mov
cltd
shll
mov
add
addr16
pop
js
xor
xor
lret
mov
and
sub
push
sub
stc
and
in
jb
xor
xor
mov
das
pop
add
fwait
xchg
out
push
push
push
push
jp
sub
push
cmp
inc
jae
adc
jne
mov
jne
add
daa
push
ljmp
lea
jno
rcrl
bound
pusha
fcom
stos
mov
inc
or
adc
loop
clc
rolb
and
sub
add
out
dec
sbb
shll
mov
jle
stos
jno
je
sub
insl
clc
adc
test
aam
ja
mov
adc
fcmovu
mov
out
sub
add
les
xchg
xor
ret
or
les
xchg
jb
clc
cld
xor
rcr
mov
xor
xchg
les
js
push
push
dec
or
cmp
add
xchg
mov
mov
mov
xor
mov
outsb
ss
jns
cmp
into
add
pop
daa
jle
sbb
lods
cmpsl
dec
push
cmp
mov
roll
out
dec
adc
lret
mov
xor
stos
mov
adc
mov
insb
cli
mov
push
aaa
pop
out
test
adc
add
push
ret
pop
mov
daa
imul
push
cmp
push
icebp
outsl
fisttpl
mov
scas
test
aas
sbb
fistl
not
js
xchg
xchg
movsl
mov
adc
iret
imul
add
ficoml
inc
push
mov
jae
pop
xchg
jmp
fwait
aas
inc
cmc
push
daa
ss
dec
xchg
and
add
pop
mov
inc
arpl
sub
mov
aaa
pushf
pushf
clc
xor
jmp
sbb
lahf
scas
out
pusha
sub
int
pop
xchg
int3
mov
stc
mov
jg
int3
and
cmpsl
pop
mov
mov
jns
mov
mov
gs
cli
lds
push
xchg
sub
in
fcmove
negl
jb
jg
movsb
fwait
push
pop
aas
in
ja
clc
test
dec
dec
xchg
movntq
mov
push
sub
out
es
loope
mov
fbstp
xchg
jnp
dec
add
les
sub
jmp
sbb
jne
addl
mov
jne
fwait
pop
dec
inc
lds
mov
in
or
sub
aaa
jg
mov
movsb
out
xor
adc
sbb
cs
gs
fists
mov
sbb
fs
pop
js
movsl
mov
fidivrl
enter
mull
push
addb
rolb
cwtl
push
xor
or
mov
cmp
adc
sub
or
jae
xor
aad
movsl
push
dec
pop
lods
mov
cmc
popf
mov
inc
ret
cltd
and
mov
dec
cmp
movsl
sbb
pop
ret
xchg
loopne
loope
scas
push
sub
outsb
lcall
out
test
lret
mov
sub
xchg
lret
hlt
scas
in
in
push
and
and
stos
mov
lret
mov
mov
call
dec
xor
lcall
mov
mov
jae
lcall
adc
add
ret
sbb
icebp
jne
or
xor
iret
imul
pop
sub
mov
pop
fimull
or
jge
pop
mov
fisubs
ds
sarl
das
pop
mov
ja
nop
lret
xchg
pop
dec
cmp
andb
jle
jp
dec
into
xor
cmp
inc
test
ljmp
cmp
loopne
add
cmp
or
jne
cli
test
bound
mov
and
add
mov
ljmp
das
dec
int
mov
pushf
std
xlat
xor
dec
adc
cld
and
pop
jno
pop
stc
arpl
mov
mov
sub
mov
or
nop
inc
inc
adc
cwtl
shrl
movb
add
mov
stos
lahf
fimuls
add
or
icebp
into
xchg
dec
test
xchg
inc
mov
inc
pushf
cmp
dec
jle
add
pop
cmp
xchg
insl
icebp
xchg
push
fs
mov
mull
rclb
retw
or
add
jns
pop
nop
inc
mov
mov
jbe
xor
push
xor
pop
aad
arpl
jb
and
sub
mov
adc
dec
out
pop
insl
ljmp
cwtl
xchg
xor
adc
xor
inc
iret
mov
aad
mov
test
xchg
lea
push
nopl
mov
sbb
addr16
mov
xchg
fucom
jnp
int3
dec
into
cmpsb
mov
dec
xchg
fwait
mov
pop
mov
shl
add
or
call
mov
call
push
mov
mov
insl
rcll
pop
or
adc
mov
mov
add
addr16
cmp
shlb
or
sub
mov
in
test
cmpsl
adc
iret
rcrl
call
ret
cmp
ret
pusha
rorl
add
insl
nop
lds
fldt
xor
push
out
frstor
push
sub
push
daa
stos
fstpl
or
pop
adc
fsubrl
leave
pop
jecxz
out
xor
cmpsl
inc
jp
icebp
mov
pop
aam
inc
testb
aaa
push
jmp
arpl
orl
pusha
ss
adc
shl
xor
add
sarl
push
int3
ret
dec
push
enter
jge
pop
lods
insl
in
test
orl
adc
push
scas
jmp
aad
mov
pop
push
addr16
mov
icebp
xchg
add
push
shrb
negb
sti
push
lods
ds
and
inc
popa
mov
es
icebp
int
scas
inc
test
out
inc
push
mov
ret
lcall
xchg
lds
das
inc
aaa
jbe
or
or
jmp
and
mov
mov
jecxz
out
and
xor
data16
lret
ficoms
and
adc
dec
jmp
daa
shlb
out
popf
lods
push
sub
and
in
lret
imul
fcmovne
fisubs
push
mov
or
retw
dec
shrb
mov
inc
fimuls
test
or
cld
or
inc
jg
imul
cmpsl
lods
dec
loopne
movsl
or
lret
xchg
sub
mov
lods
cltd
ret
cmp
jmp
inc
xchg
jno
xor
jne
sub
aas
adc
sar
cwtl
xchg
inc
scas
lods
jge
in
arpl
jne
inc
or
jo
jmp
xchg
push
xchg
cwtl
inc
jmp
fwait
mov
fs
dec
bound
add
idivl
or
and
sahf
iret
pop
aam
jge
sbb
stos
into
xor
cmpsl
outsl
fildl
cmpsb
repnz
sub
adc
dec
sub
inc
or
add
pop
fisttpl
cld
test
ret
lds
insb
dec
xchg
enter
testl
scas
xor
xlat
mov
les
sub
andl
in
push
outsl
cltd
fildl
jae
dec
adc
lcall
mov
mov
daa
inc
sbb
jle
loop
jbe
mov
cmp
in
aad
and
adc
jns
jle
mov
out
cmp
inc
jl
ret
ret
push
outsb
add
cmp
insl
xorb
add
adc
push
popf
cmpsb
sbbb
pushf
xchg
jnp
mov
cmp
sub
inc
dec
aaa
lahf
or
lods
cmp
adc
mov
push
jecxz
sub
dec
dec
mov
push
addr16
imul
xchg
or
mov
inc
in
push
jecxz
or
lods
je
lods
xchg
lock
xchg
rorl
and
push
pop
and
not
and
jb
lcall
jecxz
mov
leave
jne
sbb
andb
lcall
dec
sub
shr
nop
jno
pop
mov
lcall
push
in
cmp
repz
pop
sbb
dec
xlat
testb
out
cli
pusha
aam
lods
or
in
test
pop
iret
pop
aas
out
xchg
jp
mov
rcrb
cmp
cmp
out
jge
stos
into
push
outsl
insb
cmc
es
lcall
sbb
int
jo
mov
loop
push
aam
dec
pop
mov
or
in
rcl
sti
shlb
xor
movsl
in
orb
lock
push
xor
push
pop
and
in
cltd
cmp
fiaddl
adc
xchg
leave
imul
test
lock
leave
cmp
mov
and
cmp
jp
outsb
out
lret
xchg
mov
pusha
dec
add
mov
mov
mov
and
lea
movsb
sbb
or
push
sub
mov
xchg
cmp
arpl
xchg
test
std
xchg
jp
mov
pop
pop
mov
and
ror
mov
inc
adc
jg
divl
adc
and
test
dec
mov
icebp
fiadds
push
test
ret
jae
and
cmp
mov
cmp
test
aas
pmullw
inc
mov
icebp
sbb
sub
mov
and
pop
into
jnp
pmaddwd
shll
adc
daa
mov
dec
push
lods
sub
cmp
inc
and
pushf
dec
div
loop
ljmp
sub
sar
sbb
xor
xchg
dec
aam
ret
insl
mov
jge
adc
dec
scas
imul
in
dec
jle
mov
mov
push
loop
ret
iret
add
xchg
mov
mov
and
and
mov
mov
inc
cmpsl
jne
push
xor
loop
fiadds
fnstcw
push
sarl
stc
inc
cld
xor
adcl
sub
out
or
iret
mov
push
int3
enter
mov
dec
jo
stos
stos
sub
enter
cld
pushf
pop
stos
mov
mov
sub
pop
sbb
mov
and
pop
popf
sub
or
xchg
mull
aaa
int3
stos
fnstcw
addl
xor
fldcw
fildl
shl
fdivs
test
pop
and
mov
aad
mov
aas
pop
popa
ret
mov
test
cmpsb
aam
dec
and
mov
xor
sbb
inc
xchg
movsl
repnz
mov
mov
and
push
repnz
int3
mov
adc
lret
arpl
inc
mov
cmp
dec
jp
jmp
push
jmp
mov
sbb
or
push
push
and
popf
lods
xchg
pop
xor
mov
hlt
xlat
xor
adcb
in
mov
inc
dec
je
pop
jb
jne
insl
dec
cmp
and
call
pop
rorl
inc
call
ljmp
and
mov
stos
shll
mov
cmpsb
iret
xlat
jmp
cmp
jl
push
adc
shll
mov
cmp
lods
rcrl
in
stos
mov
inc
or
sti
movsl
and
cmp
addr16
add
jge
cmpsl
cwtl
addr16
mov
imul
pop
fs
pop
sub
mov
sub
push
pop
cmp
inc
and
dec
scas
xchg
jb
mov
adc
adc
lds
ret
stc
test
push
add
mov
xchg
cs
mov
pop
jo
adc
scas
imulb
loope
addr16
inc
sub
jnp
jge
popa
adc
rcll
out
cmp
mov
pop
or
idivl
lret
lea
leave
or
icebp
sar
je
out
jb
push
dec
mov
rcll
mov
insb
arpl
adc
lock
dec
add
dec
pop
adcb
into
mov
jnp
aad
aaa
sub
cmp
repnz
stos
xor
mov
and
pop
lahf
pusha
sbb
sti
cmp
fwait
add
xor
pusha
call
std
jae
mov
push
stos
aas
cs
lret
imul
push
loopne
mov
notl
jne
xor
subl
push
cmpsl
pop
mov
ds
mov
pop
mov
and
push
inc
add
jnp
movsb
jb
fs
sub
adc
mov
push
test
sbb
xor
rorb
dec
lock
ja
je
dec
xchg
lds
jno
aas
sbb
push
test
add
sti
cmp
push
cltd
add
ficomps
xchg
sub
fucomi
repz
mov
sub
popf
popa
mov
xchg
ret
ret
rclb
cmp
xor
clc
lods
neg
mov
cltd
inc
dec
cltd
add
out
or
dec
push
pop
mov
mov
in
sbb
daa
mov
inc
mov
ljmp
xchg
push
xlat
jno
scas
and
aad
scas
cmpsl
jno
xor
mov
dec
push
adc
rorl
mov
xchg
mov
dec
cmpsl
and
lcall
xchg
out
xor
jnp
sbb
or
or
cmc
test
dec
cltd
cmp
int
xchg
jle
pusha
cmp
add
cwtl
push
dec
push
rcrb
clc
cmc
cmpsl
cmp
lret
stc
adc
pusha
adc
xchg
sbb
pusha
bnd
and
jecxz
push
into
inc
mov
shrl
std
in
sub
scas
sbb
sbb
or
sub
enter
push
xor
ret
add
fbstp
xchg
test
jge
jmp
sbb
sub
les
sbb
xor
orb
inc
cmpsb
movsl
xorb
adc
cmpsb
into
mov
sbb
scas
dec
leave
or
insl
xchg
mov
push
cmp
cmpsb
nop
pop
mov
lret
mov
mov
clc
mov
mov
mov
test
clc
popf
dec
mov
mov
lods
pop
pusha
das
das
jg
cwtl
in
cmp
loop
mov
ffree
daa
lods
ljmp
leave
cmc
popa
mov
adc
push
mov
sub
lods
push
jb
mov
push
cmc
subb
push
xor
popf
pop
mov
or
and
loopne
test
xor
xchg
shlb
into
jl
lock
pushf
into
rolb
lea
inc
popf
mov
dec
jg
jmp
daa
ret
scas
add
cmp
ss
xchg
jnp
xor
push
xor
stc
fcompl
xchg
add
sub
cmp
int3
mov
aam
je
sub
xor
mov
jge
lods
xorl
mov
mov
or
add
cwtl
pop
and
out
shl
cmp
jl
fsts
dec
repnz
js
shrb
rorl
mul
rclb
dec
hlt
jecxz
sub
sbb
mov
or
es
jno
pushf
out
adc
mov
fsts
movsb
daa
or
mov
xor
jnp
inc
hlt
xchg
stos
rcr
arpl
cmp
inc
push
xor
repnz
inc
xor
pop
lahf
mov
jns
push
jnp
and
dec
inc
cli
sub
lods
add
xchg
pop
loopne
lea
scas
dec
push
or
mov
mov
dec
cmp
jne
cmovae
int
jp
add
sub
fstpt
xchg
lea
sbb
sti
and
push
enter
gs
arpl
cmp
mov
mov
test
jmp
fcmovne
fcomi
and
aad
mov
mov
pop
mov
cmp
lret
adc
pop
inc
outsl
adc
xchg
jg
cmp
xchg
xor
mov
frstor
or
ljmp
push
jecxz
inc
ret
sbb
pop
push
fcompl
arpl
pop
int3
push
or
mov
jge
adc
test
pop
cld
arpl
mov
or
fisubl
sbb
fisttpl
lret
lret
or
lods
icebp
cmpxchg
pop
mov
cmp
adc
lahf
sbb
out
mov
scas
add
enter
jbe
stos
lock
rcll
add
in
popa
aas
cmp
push
mov
jge
js
cmc
arpl
sarb
sbb
adc
push
call
pop
sbb
ds
push
push
inc
sub
adc
pop
mov
pusha
mov
stos
into
idiv
push
xor
xchg
pop
push
mov
daa
mov
jl
inc
push
iret
das
pop
xlat
enter
cld
push
mov
loope
mov
pushf
xchg
lods
xchg
mov
aam
cmpl
fistpl
les
shl
add
sbb
pop
and
sub
xchg
cmpb
call
sar
das
cmpl
insb
enter
stos
push
aam
shlb
jne
cmp
lods
arpl
mov
int3
dec
and
enter
int3
or
pop
cli
and
rorb
ds
mov
rcll
ficoms
cmp
dec
pop
bound
stos
fdivrs
mov
dec
insb
jno
xchg
jg
mov
mov
dec
push
xor
movsb
fnsave
shlb
cltd
cli
mov
mov
sbb
test
cmc
inc
popf
push
stos
jo
loope
rorl
incl
popf
xchg
cld
fisubrs
fld
mov
clc
loope
jno
add
cmp
je
lret
mov
mov
test
sti
sub
pop
rorb
in
inc
jns
movsb
xchg
std
adc
sti
addl
and
push
xor
pop
outsl
test
insl
imul
xor
ret
aaa
pop
pop
lock
adc
cmp
out
adc
test
mov
vdivsd
adc
andl
adcb
cmpb
sbb
or
dec
insl
push
sub
fdivr
jb
cmpsl
cmpsl
xor
sahf
loope
cmpsl
jno
out
xor
loop
jp
dec
test
and
and
cli
repz
push
es
test
add
pushf
inc
xlat
out
int
shrb
push
or
pop
ja
and
sbb
or
adc
pop
adc
cli
xchg
loopne
js,pn
jae
lock
hlt
ljmp
rcr
sarl
daa
push
fbstp
xchg
in
aaa
and
jmp
pop
mov
jmp
ret
and
mov
pop
mov
mov
cltd
sbb
aaa
push
rorb
test
dec
or
cwtl
sbb
inc
sub
popa
sub
adc
cld
push
stc
adc
add
sbb
pop
mov
and
lret
lea
fldln2
and
jne
mov
mov
jge
push
incb
insl
pop
test
int
inc
mov
scas
xor
push
scas
mov
inc
jge
jo
lods
out
inc
lahf
outsb
movsl
xchg
mov
mov
lock
mov
or
pop
pushf
sbb
scas
sub
call
jmp
dec
cs
loop
and
push
insl
push
ret
in
cltd
jns
arpl
and
dec
xor
ffree
jle
pushf
sarl
mov
add
dec
jne
leave
stc
fstps
dec
pop
cmp
pop
jbe
mov
js
jle
int3
mov
dec
jle
jns
cld
push
xor
or
cmp
fldcw
pop
cs
frstor
jg
xor
cltd
xor
mov
aas
int
leave
add
adc
lock
mov
cmpsb
mull
push
sbb
in
out
mov
shlb
push
lcall
sub
push
enter
lahf
mov
mov
fsubr
cld
pop
and
fsub
mov
stc
out
sub
cmc
adc
insb
mov
mov
fdiv
push
pop
pop
std
pop
adc
outsl
push
sub
sub
pop
shrl
and
int
push
jg
shll
push
mov
mov
cmc
or
fcompl
cmp
cmp
ret
addr16
dec
xor
std
add
mov
xor
pusha
jp
addr16
fimuls
sub
push
int
push
stos
add
and
cmp
mov
mov
fimuls
pop
pop
cli
into
popa
jge
dec
fcoms
repnz
cltd
add
sub
scas
add
pop
dec
pop
lock
push
loope
enter
stos
push
and
xor
movsl
out
mov
outsb
jmp
outsb
rcll
or
mov
xchg
jne
ss
push
inc
push
jbe
dec
icebp
movsb
pop
enter
mov
fstps
push
insb
call
add
stos
push
mov
popa
decb
dec
cld
sub
inc
xchg
aas
cmpsl
mov
out
push
xchg
repz
pop
push
mov
test
fdivr
sub
jbe
arpl
gs
in
and
mov
mov
in
test
shll
outsb
rorb
cs
hlt
mov
aas
push
ljmp
mov
dec
xor
mov
mov
dec
sub
cmpsb
xchg
sahf
jp
mov
jb
push
cwtl
fisubrs
mov
inc
add
xor
ret
into
xor
inc
pop
xchg
mov
test
inc
ficoml
jg
xor
in
xchg
stc
add
ss
adc
lcall
mov
loop
mov
push
mov
bound
in
insl
push
arpl
hlt
dec
or
jmp
fcmovne
inc
arpl
inc
ret
out
cli
mov
fdivrl
and
in
rcll
push
mov
cwtl
fmul
outsl
push
out
mov
and
lcall
add
dec
push
cmpsl
addr16
fidivrs
mov
dec
xor
mov
clc
repnz
mov
push
ds
ret
in
inc
dec
xor
repnz
cmc
in
pop
dec
ja
inc
jo
lret
cli
cmp
popf
sahf
mov
cmp
lods
fwait
out
daa
jecxz
imul
sub
ret
sub
enter
imul
cmp
in
dec
cld
or
push
jae
pop
sbb
push
arpl
push
jno
sbb
mov
mov
mov
pop
xor
mov
mov
sub
mov
cmp
xchg
lret
jnp
filds
hlt
sbb
pop
jb
add
inc
dec
sub
pop
or
inc
insb
testl
cmp
scas
gs
out
pop
sbb
movsb
imulb
or
sub
adc
dec
xchg
pop
push
sahf
cmp
mov
ficomps
cmpsl
cmp
pop
cmp
cwtl
xchg
jge
jae
insb
daa
adc
cmpsb
icebp
cmp
hlt
addl
lods
pop
mov
xchg
sub
cmp
adc
sbbl
les
dec
aad
pop
push
sarl
outsb
nop
sahf
pop
inc
mov
mov
fisttpl
xor
cs
shll
xchg
in
xor
cld
adc
imulb
fmul
ret
nop
icebp
out
pop
push
mov
rcll
and
divps
or
not
dec
gs
cmpsb
leave
mov
mov
aad
cwtl
mov
stc
hlt
aaa
out
pop
pop
ss
mov
data16
or
fisubs
lahf
or
xor
sti
mov
mov
pop
inc
aam
fldenv
enter
cmp
call
roll
shll
xchg
push
out
test
mov
add
mov
pushf
aam
lcall
into
mov
les
cmp
mov
and
fnstsw
hlt
adc
cmpsb
pushf
cmp
fidivrl
ret
adc
push
sbb
add
push
test
mov
sbb
sti
sbb
and
scas
lret
xor
dec
adc
shl
mov
push
data16
dec
fsubl
cmp
clc
push
mov
hlt
imul
and
adc
xchg
xor
sarl
pushf
jne
adc
ja
shll
shll
add
fwait
test
xchg
andb
mov
push
data16
test
add
mov
fsts
mov
movsl
push
sub
stos
lea
cmpsl
add
mov
pusha
or
stos
mov
into
sub
ljmp
out
pop
sub
add
sub
mov
cmp
insl
aaa
and
negb
mov
mov
dec
data16
xor
stos
jae
pop
lock
sub
repz
adc
enter
fistl
fcoms
int
push
mov
pop
dec
fdivrs
sub
imul
jo
sub
daa
sbb
adc
mov
add
push
idivb
push
rorl
fsubs
jnp
ret
insl
mov
push
rcrb
lcall
push
pop
aas
mov
cmp
sahf
xchg
daa
push
pop
inc
rorl
xor
addr16
pop
pop
push
and
cmp
mov
daa
jno
aas
rcll
scas
mov
add
and
adc
in
arpl
and
add
dec
lods
jge
sub
and
pop
leave
cmpsb
adc
pop
sub
ljmp
xor
mov
lods
int
jae
sbb
mov
adc
pop
subb
lea
and
adc
pop
jno
aad
xchg
sub
lret
aas
out
sbb
pop
hlt
mov
mov
insb
fidivrs
cmp
add
jns
mov
fistpll
pop
es
aad
xchg
xor
test
movsb
addl
push
rorb
and
hlt
bound
lods
dec
push
je
mov
dec
lea
sub
fwait
aas
imul
fs
repz
xchg
ds
outsb
xor
xchg
mov
mov
addb
fs
mov
jle
pop
and
cltd
fwait
push
jnp
xchg
add
fistl
push
fnsave
pop
push
lcall
je
divb
push
loopne
stos
std
sbb
es
mov
insl
fwait
lods
enter
adc
test
js
push
push
push
sahf
loope
aam
insl
js
lds
pop
cmp
rclb
xchg
xorb
cmp
sub
sub
mov
mov
xor
push
jo
stos
push
pop
outsl
xchg
cwtl
pop
and
decl
or
jecxz
mov
mov
push
mov
lret
lock
into
xor
and
xor
lods
mov
rcll
sbb
int3
inc
jecxz
jb
adc
xchg
das
cmpb
cmp
mov
sbb
xchg
jno
xor
and
mov
dec
sbb
test
repz
xor
jb
mov
push
mov
jle
xor
shrl
xchg
mov
outsb
jae
out
mov
mov
mov
pop
mov
jg
jb
mov
adc
pop
adc
rcr
cmp
mov
sti
push
incb
sahf
mov
loope
std
cltd
test
bound
sbb
dec
lods
or
movsl
pop
ljmp
or
push
push
or
sbb
jecxz
xor
fwait
jl
icebp
push
xorb
mov
notl
popa
imul
fwait
insl
mov
xchg
mov
pop
aaa
lods
inc
notl
push
lahf
mov
inc
pop
jecxz
mov
jecxz
sub
mov
fdivrs
loope
xchg
loope
stos
jns
sahf
mov
test
add
clc
pop
pushf
xchg
pop
sub
cmp
or
dec
nop
jnp
out
fbld
xchg
adcl
mov
rcrl
mov
push
jb
sub
shl
and
jg
xchg
fwait
cs
mov
adc
mov
jb
dec
movsb
inc
sbb
mov
cmp
push
hlt
sbb
arpl
mov
fstpt
mov
lds
push
sarb
push
or
inc
jne
and
cltd
pop
and
repz
push
subl
xchg
and
loopne
xchg
adc
and
mov
xor
ljmp
repnz
xlat
test
mov
cmp
lock
mov
and
mov
mov
add
cs
mov
xchg
decl
sbb
inc
cs
sar
cmpsb
add
sbb
or
or
sbb
std
mov
mov
aaa
cli
sub
ss
xor
aam
aas
fists
and
stos
push
xor
mov
sub
cmp
jnp
or
inc
mov
cmp
aaa
add
call
jmp
test
cmpsl
scas
xor
out
stos
repnz
cmc
dec
repnz
dec
sbb
xchg
jg
pop
xchg
add
mov
repnz
outsb
mov
xchg
fisttps
aad
out
pop
adc
daa
pop
xchg
push
sbb
mov
das
dec
shll
lods
cmp
out
es
dec
fidivs
or
hlt
stos
pop
pushf
mov
xchg
mov
sbb
rcll
or
push
push
adc
sub
cs
push
mov
fimuls
cli
sub
sub
insl
dec
aas
push
incl
or
rorb
cltd
add
mov
or
cmp
cwtl
dec
jl
jns
add
shlb
push
xchg
fimuls
in
filds
pop
jb
out
adc
push
xchg
sbb
test
pop
xor
sub
push
sbb
mov
addr16
fmull
fsub
sahf
jp
scas
mov
aaa
push
and
fwait
mov
data16
or
nop
dec
adc
dec
pop
pop
mov
add
fcomi
cwtl
rcrb
scas
mov
add
stos
ljmp
rcll
iret
loopne
dec
popa
fstps
xor
in
adc
mov
test
cli
adc
or
dec
mov
call
adc
pop
lods
sub
cmp
out
loop
mov
test
sbb
mov
fsubl
adc
andl
mov
or
repz
pop
cmpsl
or
insb
rorb
test
call
leave
call
pushf
pop
push
add
and
mul
in
std
push
jp
or
leave
icebp
add
dec
or
pop
dec
adc
xorb
mov
push
sub
aad
jge
jb
scas
in
stos
sub
int3
pop
sub
pop
out
js
in
pop
xor
inc
push
es
fucomi
fistpl
das
xor
xor
fldl
not
adc
jmp
mov
pop
cmp
jl
pop
jns
test
cmc
dec
lcall
pop
jl
pop
arpl
test
in
add
roll
pop
inc
mov
aam
lret
jmp
mov
lss
iret
cs
push
adc
xchg
mov
lcall
les
in
mov
lret
stos
sbb
aad
mov
stos
aas
adc
xchg
xchg
dec
xchg
adc
hlt
aas
add
adc
std
popf
es
fcomp
les
xor
and
fcompl
sub
add
std
test
dec
and
sbb
iret
mov
jg
or
and
repnz
movsl
pusha
dec
pop
aaa
push
ret
cmp
and
aam
rorl
and
rclb
sbb
dec
add
jb
sub
mov
push
rcrb
fdivl
xor
js
negb
jp
mov
xlat
lods
data16
decb
addr16
mov
int3
mov
sub
stc
sbb
repz
cld
mov
mov
mov
mov
xorl
xor
sub
rorb
subl
xor
gs
stos
mov
test
cmp
add
loope
popa
orl
test
sub
push
xorl
jbe
loopne
mov
jns
data16
notb
mov
repnz
sahf
in
mov
dec
gs
jb
stos
dec
pusha
push
mov
sbb
mov
mov
shl
out
in
pop
sbb
xor
pop
or
iret
movsl
xor
pop
loop
sub
pop
jne
int
aam
test
stc
or
pop
test
xchg
ds
xor
cli
test
test
xorl
xchg
fiadds
push
push
mull
mov
lret
mov
jg
add
or
scas
and
int3
pop
lret
sub
sahf
adc
xor
ja
or
cltd
test
bound
loop
push
mov
add
lock
lcall
jl
shll
les
fwait
sti
std
xchg
mov
mov
inc
jge
mov
and
arpl
cmpsl
in
push
mov
mov
add
sub
push
jno
jl
jecxz
pop
dec
dec
xchg
outsb
jb
xlat
pop
lahf
mov
sbbb
inc
mov
sbb
jno
inc
ja
iret
test
gs
cmp
xor
cmpsb
sbb
das
jle
popf
imul
push
test
in
mov
mov
dec
int3
sahf
cmp
clc
gs
sub
mov
jo
xchg
imull
add
fstp
lcall
and
mov
aad
fmuls
inc
push
push
aaa
leave
daa
dec
jmp
dec
sub
xor
rorl
mov
pop
mov
or
int3
xlat
push
repz
scas
mov
pop
insl
rorl
ja
fwait
das
pop
mov
mov
jmp
scas
sti
cmc
inc
sbb
shrb
frstor
push
aaa
push
bnd
lock
repz
stc
dec
and
and
outsl
std
aaa
fldl
pushf
pop
ret
xchg
jmp
pop
inc
insb
pop
inc
add
sahf
and
test
lcall
lret
dec
inc
mov
outsb
mov
out
xchg
inc
xor
mov
inc
cmp
test
pop
je
pop
sbb
stos
mov
fnstsw
dec
sbb
cltd
sbb
or
add
jbe
push
int
dec
mov
mov
outsb
add
push
repnz
inc
aas
imul
jmp
adc
mov
test
fsubrp
mov
jne
inc
pop
pop
mov
fnsave
ja
or
mov
and
dec
pop
xchg
sub
sbbl
mov
stos
dec
js
cmp
add
xlat
cmpl
flds
cli
xchg
sti
jb
popf
fistpl
loop
scas
cmp
dec
xor
fwait
xchg
add
push
sub
rcrl
cmpsb
mov
xchg
scas
push
test
sbb
jnp
insl
js
scas
mov
dec
scas
adc
inc
cmc
push
push
aaa
or
add
mov
lahf
lods
ja
gs
push
aas
out
imul
outsb
dec
out
add
push
and
iret
dec
mov
icebp
push
mull
sub
mov
dec
mov
bound
or
das
scas
jmp
movl
in
xor
shll
repnz
sti
cmp
jne
andl
loopne
test
lods
sbb
adc
inc
fisubl
testb
sbb
fcoms
mov
fwait
inc
in
or
mov
cmp
dec
jns
mov
fsub
jg
movb
jbe
std
js
lods
lods
inc
push
in
push
xchg
xchg
push
imul
test
shlb
scas
sbbl
sub
sahf
enter
cmpb
pop
imul
and
int
sbb
leave
inc
shlb
repz
out
mov
fmull
lods
xchg
pop
jne
mov
mov
paddd
lods
in
xor
fs
jg
xchg
xor
call
xor
mov
add
fwait
adc
aaa
add
and
cltd
inc
loope
in
sub
dec
adc
nop
jb
test
std
jmp
jns
orl
call
pop
ja
js
xchg
mov
out
or
rorl
lahf
sub
shl
add
mov
sub
pop
jbe
imul
pop
jbe
ja
mov
stos
jmp
sbb
sbb
aas
jb
shlb
xlat
cmp
ljmp
insl
loop
les
mov
jns
sbb
pop
insl
popa
xchg
pusha
sub
sub
xorb
mov
negb
push
jno
fsubp
unpckhps
iret
fldcw
repz
cld
mov
xor
sbb
andl
shrl
lea
movsl
icebp
adc
fsubrl
test
cmpsl
sbb
mov
pop
in
and
push
pop
push
or
xchg
cmp
sahf
mov
out
cmc
xor
inc
das
fucomip
ret
jno
gs
dec
stc
std
or
and
scas
mov
inc
jg
pop
test
xchg
xor
adc
les
ja
xchg
inc
mov
int3
mov
dec
mov
xor
cmp
adcb
rcl
dec
adc
loop
shll
xchg
cli
stos
mov
negb
fldcw
or
cmp
inc
das
add
int
or
fcmovnb
das
ficomps
cmp
pop
xor
push
sub
xor
sbb
shl
dec
dec
xchg
into
int
mov
mov
sub
cmpb
lods
sbb
cmp
mov
ljmp
cmpl
xchg
or
xlat
mov
ljmp
lds
mov
orb
sub
into
nop
aam
and
cmpsl
lods
addr16
jmp
pmullw
lds
mov
mov
sbb
mov
pop
imul
or
mov
dec
sbb
mov
std
aad
out
or
jae
mov
mov
dec
mov
cli
adc
lods
adc
rolb
or
push
repz
adc
fdivrl
rcl
xchg
sbb
popf
cli
inc
rcrb
roll
rorb
add
data16
mov
addl
pop
jmp
cmp
cmp
insb
or
lret
xchg
leave
push
xor
outsb
adc
pushf
and
out
ret
inc
pop
cmp
cli
or
aas
jecxz
pop
or
mull
xlat
cwtl
stos
repz
divb
mov
dec
into
lahf
fnsave
into
incb
addr16
jle
inc
dec
popa
sbb
enter
mov
int3
dec
pop
jmp
xchg
out
jp
in
jnp
mov
add
xor
imul
rcll
out
outsl
pop
fistpll
ret
out
stos
mov
iret
lcall
cmp
mov
std
and
mov
stos
jle
add
pop
sub
dec
dec
stos
popf
and
mov
hlt
xchg
jno
daa
cmpsl
addl
add
hlt
out
rcll
inc
loope
out
jnp
pop
and
or
sbb
sbb
sub
jle
fwait
pusha
mov
mov
push
rclb
mov
andb
cmpsl
negb
pushf
ljmp
out
daa
sbb
aad
shlb
xchg
insl
and
std
sub
dec
jbe
inc
dec
add
out
dec
fwait
xchg
bound
loop
es
or
into
fnsave
call
mov
cmp
js,pn
push
mov
xchg
cwtl
movsb
dec
iret
sub
dec
test
pushf
repnz
push
xor
dec
or
or
lods
sbb
scas
popa
scas
fldt
cwtl
nop
and
cmc
sub
nop/reserved
scas
lds
adc
pushf
pop
iret
mov
pushf
sti
enter
insl
notl
cmp
lret
mov
jae
into
lcall
popa
adc
das
fdivs
mov
sbb
jl
in
cmp
loopne
dec
stos
mov
cli
push
add
ljmp
mov
mov
dec
adc
aas
loope
js
pop
js
xlat
mov
sub
mov
stc
dec
mov
movlps
inc
pop
sbbb
sub
or
push
xor
test
lods
mov
xchg
lcall
dec
ficoms
scas
out
and
push
ret
cs
lock
sahf
xor
or
pop
paddsb
jmp
ja
and
cli
outsl
xchg
sbb
cmpb
adc
gs
xor
shll
addr16
repz
add
jmp
popa
outsl
pop
adc
push
pop
dec
xchg
lret
loope
mov
repz
addl
or
and
push
inc
pop
cmpsb
pop
test
int3
jns
popa
out
add
hlt
test
sbb
cmp
das
sbbb
lret
dec
pop
xor
scas
adc
std
lret
imul
lock
mov
cmp
sub
and
jae
cmpsl
rolb
add
popa
jg
mov
pusha
sbb
icebp
push
add
in
leave
mov
lea
rolb
fmuls
jnp
xor
push
loope
scas
ret
dec
movsl
cmp
mov
pop
jno
ss
jo
rorl
popa
push
les
loopne
pop
ret
dec
add
insl
adc
call
shll
sbb
aam
jg
or
js
pop
insb
int3
pop
sub
adc
loop
xor
sbb
adc
sub
cmp
jb
lret
out
fdivl
inc
dec
push
xor
shll
daa
repz
test
out
movsl
adc
jo
jnp
shl
mov
sahf
in
and
add
ljmp
in
out
inc
mov
and
mov
fldl
decb
in
mov
mov
inc
xor
lret
cmc
pop
outsb
and
call
mov
sbb
jge
dec
add
fmul
dec
sti
lods
mov
push
sub
xor
cmpsl
in
mov
xchg
mov
fwait
mov
jmp
aad
inc
xor
cs
cmpsb
xor
add
aad
fildl
repz
outsb
xchg
ja
pop
xor
cmc
push
cmpsl
xor
and
rol
xor
mov
cltd
in
mov
repz
mov
mov
sub
ds
test
popa
mov
xor
or
jbe
ret
mov
dec
xchg
loope
adc
sub
mull
inc
jno
shr
mov
fsubl
jb
std
mov
scas
add
adc
add
ret
ss
push
shll
mov
cmp
sbb
mov
arpl
dec
repnz
scas
jg
dec
sub
out
and
xor
xchg
xor
leave
inc
add
xor
daa
mov
daa
cltd
mov
mov
xchg
test
xlat
jb
and
pop
cmp
sub
stc
add
cmpsb
mov
and
cli
lds
insb
pusha
and
xor
or
lahf
xor
cltd
mov
frstor
xlat
test
mov
ljmp
aam
test
push
pop
sub
adc
in
out
add
fildll
dec
roll
mov
in
sub
sub
mov
push
aaa
jb
jnp
push
dec
mov
jno
sbb
not
test
ja
stos
push
inc
dec
rol
test
cld
inc
push
movsb
cmpsl
push
insl
lahf
iret
daa
and
pop
and
pop
mov
add
loopne
imul
es
pop
punpckhdq
push
and
ds
cmp
cli
xchg
test
and
subb
dec
sbb
add
aas
sarl
or
add
pop
dec
ljmp
sub
mov
fnstsw
push
outsb
orb
xchg
cmp
or
and
lds
jp
cltd
pop
mov
out
sbb
addb
mull
loop
cmp
pop
cltd
inc
fldl
xor
leave
sbb
xchg
aas
nop
push
ret
jo
loop
and
test
ret
into
xchg
popf
cmc
mov
jg
and
sbb
into
cld
xchg
add
in
ret
mov
js
xor
nop
mov
or
int
inc
jecxz
bound
jno
cmp
sub
shlb
out
mov
outsb
subb
or
out
aaa
jge
add
insb
dec
mov
mov
cmp
add
adc
inc
cwtl
jecxz
xchg
push
lock
imul
icebp
sbb
push
sbb
je
sub
pop
push
xchg
aaa
jae
lds
cltd
shl
inc
data16
in
add
ret
adc
pop
add
enter
ljmp
flds
fldt
or
or
test
mov
cmpsl
pusha
mov
cmpsl
adc
out
mov
mov
test
in
outsl
stos
xchg
fsubl
repnz
mov
lea
jmp
xor
sbb
fidivl
testb
gs
add
test
push
test
sahf
xchg
sub
mov
mov
cmp
cmp
add
inc
pop
jns
inc
add
mov
sbb
aad
cli
dec
push
xor
dec
pop
js
rclb
pop
dec
push
add
scas
aam
add
scas
xor
daa
sbb
add
or
and
mov
shr
inc
mov
call
mov
push
scas
sub
mov
jecxz
std
sub
test
and
popf
mov
sbb
out
mov
cwtl
fcoms
ss
imul
pop
popf
dec
or
adc
and
push
or
mov
adc
jae
mov
dec
add
cmp
or
ret
mov
sbb
mov
jbe
out
inc
inc
frstor
ss
add
push
xchg
out
jae
out
mov
sbb
mov
mov
pop
xchg
or
dec
stc
inc
sti
lcall
jecxz
mov
clc
fimull
outsb
sarb
lret
inc
pop
sbb
adc
nop
mov
mov
push
frstor
cmpsb
dec
cmp
pop
stos
nop
iret
pop
mov
xor
push
sbb
or
push
ret
mov
insb
stc
test
test
scas
leave
cld
outsl
lods
nop
stos
call
dec
data16
mov
sbbl
sub
lret
cmp
jae
add
sub
fldcw
xor
lock
mov
mov
xor
outsl
mov
mov
inc
inc
dec
inc
sub
mov
add
fst
fstp
xlat
dec
sbb
rorb
pushf
out
roll
pop
out
fwait
sti
repz
cmp
lods
pop
outsl
dec
test
in
sub
cwtl
lds
insl
inc
je
test
cmpb
mov
xchg
jo
jno
aam
scas
popw
dec
fwait
std
xchg
cmp
mov
addr16
into
jne
clc
dec
ss
pop
or
lahf
sbb
mov
jl
or
mov
push
shl
outsb
stos
xor
ss
out
adc
sbb
push
mov
cmp
mov
mov
jp
xchg
and
xchg
pop
sub
lock
incb
and
and
mov
adc
dec
xchg
fninit
sub
sub
lds
icebp
sahf
dec
dec
fs
jnp
pushl
mov
cmpsl
xchg
fidivl
inc
fwait
add
addb
popa
lret
push
gs
insl
add
notl
xor
inc
movsb
mov
adc
inc
repz
push
fwait
std
dec
test
and
fmuls
in
pop
adc
mov
inc
mov
pop
lods
or
push
rorl
mov
lods
xchg
daa
arpl
testb
fistl
mov
jg
add
xchg
outsl
or
mov
mov
out
lahf
mov
fiaddl
fisubl
mov
fsubs
inc
push
lds
cmpsl
mov
in
negl
mov
jae
jge
xor
inc
add
ja
and
inc
fldl2e
orb
mov
dec
sbb
adc
sbb
xor
stos
dec
icebp
mov
stos
xchg
vxorps
in
and
jbe
daa
repnz
shll
mov
push
pop
rcll
or
inc
push
mov
xor
adc
sti
push
inc
jge
pop
jne
fadd
pop
mov
push
pop
fwait
stos
stos
je
inc
ljmp
in
adc
hlt
pop
mov
daa
push
add
cmc
filds
jns
or
add
in
stos
int3
insl
daa
xchg
in
ret
push
xchg
sbb
sub
shrb
push
fsubrl
lea
xchg
cli
sub
insb
xor
hlt
std
mov
test
pop
int
jno
stc
cmp
insb
or
aad
xchg
or
pop
adc
repz
mov
pop
enter
stos
fldl
xor
leave
mov
loop
sbb
popf
pop
iret
mov
cs
dec
add
mov
xor
call
add
add
mov
lret
ret
cwtl
and
fisubrs
call
adc
iret
mov
das
dec
sub
xor
fs
lea
mov
add
sbb
icebp
ret
sub
push
aad
cmp
notl
mov
xchg
loop
mov
icebp
xchg
sahf
loop
push
outsb
loopne
into
or
push
hlt
popf
std
pop
cmovns
sub
jns
adc
roll
idivl
pop
test
pop
xchg
jecxz
repz
cmpsl
inc
in
dec
lahf
std
hlt
pop
int3
xchg
shll
stos
les
and
xchg
inc
ret
decb
xchg
push
int3
jne
imul
and
out
add
popa
int
fucom
or
cmpsb
xor
shl
fimuls
mov
sbb
or
fwait
aam
dec
or
and
jnp
rep
clc
repz
cmp
movsl
imul
mov
sub
pop
pusha
das
sbb
bound
adc
subb
leave
add
in
jne
fildll
popa
sub
clc
daa
inc
push
nop
adc
pop
mov
and
lret
test
xchg
sub
aad
std
sub
aas
mov
ja
fldenv
ja
push
mov
sbb
insl
mov
popa
clc
into
fcompp
pop
sub
ljmp
daa
adc
add
and
pop
jp
or
mov
addl
sub
sbb
push
insb
imul
fbld
jns
ljmp
inc
inc
out
cmpb
xchg
pop
scas
imul
xchg
add
inc
jle
lret
mov
push
and
cmpsb
or
pop
mov
lods
jb
mov
lret
mov
jle
push
xchg
inc
inc
xor
add
pop
dec
xor
pop
and
xchg
pop
lea
arpl
jp
pop
testb
cmp
mov
push
mov
arpl
jl
mov
mov
add
idivl
fidivrl
sbb
dec
call
js
pop
push
scas
jo
imul
ja
mov
popf
dec
pop
ret
sbb
mov
out
jl
inc
dec
cwtl
fldcw
xchg
popa
inc
push
dec
jnp
xchg
popf
mov
outsl
lahf
fists
pop
mov
inc
ds
push
iret
dec
sbb
sti
fldl
enter
or
cld
repz
or
scas
lret
cld
sub
sarb
aaa
repz
pop
jl
adc
sub
lea
sub
call
and
mov
xchg
out
in
loop
fisttpl
or
adc
pushf
adc
push
lds
orl
es
push
pushf
push
push
lea
sub
xor
add
xor
or
jne
cltd
jmp
lahf
fistpll
clc
loopne
xor
pop
sbb
ss
loop
cmp
popf
mov
and
mov
movsl
cmpsl
sbb
sbb
aad
jmp
stos
pop
push
cmp
rep
rclb
pop
out
dec
xchg
fucompp
pop
inc
sub
test
pop
orb
xor
dec
idivb
xor
mov
mov
repz
into
call
bnd
fdivrl
or
popf
lds
dec
cmp
and
lahf
jl
pop
or
jmp
je
mov
loop
pop
inc
fs
icebp
nop
xor
sub
pop
push
dec
stos
xor
and
add
ds
push
fcmovu
and
pop
and
push
lds
adc
iret
daa
les
test
call
out
add
leave
push
int3
movsl
negb
fimuls
pop
stc
add
mov
mov
aad
inc
pop
lret
add
xchg
jp
mov
sbb
orl
jecxz
out
movsb
lret
dec
cs
and
mov
xor
clc
popf
push
rcrl
pop
mov
jmp
xchg
scas
cltd
pop
xor
mov
addr16
pop
mov
add
pop
adc
jae
bound
mov
mov
dec
fistps
lods
out
orb
das
ds
fcompl
and
and
jecxz
loopne
js
jmp
cmpsl
lcall
sbbl
imul
sub
insl
inc
outsl
adc
cmp
inc
fcoml
and
fidivrs
icebp
cmc
cwtl
ret
ret
inc
ss
stc
sahf
ret
sub
jl
lds
in
ss
sbb
push
adc
push
pop
test
bound
inc
ds
clc
sub
pop
dec
sahf
aaa
movsb
inc
mov
mov
shll
insb
ljmp
lret
js
ljmp
xchg
cmp
xchg
pop
test
dec
cltd
adc
inc
cwtl
xor
xchg
pop
loop
lock
dec
jo
add
pop
cld
mov
push
test
movsl
popa
gs
dec
pop
pop
and
push
xchg
flds
add
sbb
fwait
mov
add
dec
mov
out
stos
sbb
arpl
popf
mov
test
jae
leave
ljmp
nop
mov
test
mov
fiadds
loop
rorb
add
sub
sub
add
fimuls
lods
lea
js
pop
push
sub
ret
push
xor
pop
pusha
out
je
dec
push
ffreep
xchg
sub
inc
cmp
test
ss
insb
pop
cmp
les
icebp
mov
xchg
aad
lcall
mov
lret
or
popf
mov
mov
jbe
mov
addr16
sti
fprem1
outsl
lods
and
push
stc
je
mov
cmp
cs
cmp
sub
jecxz
movl
cmp
pop
lods
mov
stos
jbe
add
xchg
jle
into
mov
pop
fcmovnb
lahf
popa
push
sub
lock
xchg
imul
movsl
xchg
stc
repz
insl
imul
outsb
push
aaa
xchg
and
lea
add
mov
and
sbb
repz
dec
jnp
mov
pop
das
das
sub
push
jecxz
mov
cli
sarl
cmpsl
ja
push
shl
les
scas
lcall
adc
xor
pop
in
and
xchg
mov
mov
mov
mov
into
ja
ret
aam
fildl
jg
stos
sti
cld
int
cmp
jg
std
push
in
fs
mov
sbbb
out
sbb
jp
out
inc
outsb
fs
addr16
mov
mov
cld
jecxz
out
test
sub
lods
jp
data16
aad
movsl
and
jp
xchg
push
notb
pop
adc
add
scas
fmull
hlt
and
or
xlat
cmpsl
jl
jno
divl
je
testb
dec
add
xchg
sbb
ret
les
movnti
cmpb
adc
cli
lret
fwait
sbb
add
sub
push
jnp
xorb
mov
shlb
xor
xchg
cmpsb
and
mov
xlat
jg
jl
pusha
mov
loope
sbb
xor
sti
sbb
stc
out
push
push
inc
mov
pop
mov
push
inc
sbb
lods
xchg
sbb
cs
inc
jo
push
pop
cmp
adc
cli
shr
or
popa
inc
sub
and
jecxz
xchg
call
aas
movsb
xchg
ds
les
add
out
dec
jns
sub
lock
pop
gs
pushf
idivl
in
sub
in
cmc
repz
mov
push
jl
push
dec
cmpb
aam
subl
shl
jne
mov
jne
push
ja
repnz
mov
inc
jbe
cmp
xchg
and
pop
jno
into
or
jo
loope
fmull
fcompl
stos
inc
cli
in
push
loop
test
fstp
jae
daa
in
cmp
mov
dec
fmull
stos
dec
add
pop
subl
pushf
push
pop
out
int
push
jae
clc
mov
out
mov
jns
push
inc
aaa
lret
mov
cmpsb
and
xlat
cmpsb
std
test
fs
cmpsb
cmp
dec
mov
and
mov
jo
out
or
xlat
cli
mov
or
add
test
in
sbbb
stc
jnp
aam
cmpsb
ss
fdivs
dec
js
sub
pop
pop
xchg
lret
cmp
fbstp
lcall
dec
stos
pop
in
dec
subl
add
nop
stc
push
push
ficoms
or
arpl
cli
mov
sub
jnp
xchg
add
int3
dec
mov
sbbb
std
inc
pop
or
shll
fmuls
cltd
sub
mov
xchg
aas
mov
leave
push
loope
mov
cli
sub
cmp
int
mov
lcall
xchg
push
aaa
jne
in
adc
pop
pusha
addr16
ret
cltd
inc
mov
stos
jb
mov
inc
adc
in
jns
ljmp
or
inc
mov
test
stos
test
daa
es
and
insl
bound
addr16
and
lahf
jmp
subl
fdivl
sub
imul
stc
rol
out
in
xchg
movsl
inc
push
loopne
ja
mov
loop
jg
sbb
lock
lock
lret
jle
ss
cmp
in
nop
mov
cwtl
loopne
mov
lret
adcb
out
daa
xor
cmc
lock
leave
movsl
test
xchg
std
push
bound
lods
push
insb
lcall
shlb
cmpsl
push
inc
xchg
mov
dec
cmp
lods
and
sub
test
loopne
dec
call
pop
sub
mov
cmpsl
jmp
sahf
mov
data16
push
pusha
addl
sub
iret
push
test
int
outsl
xchg
test
les
or
movsl
in
sub
or
xchg
adc
dec
push
mov
lret
xchg
mov
jle
adc
mov
outsl
shrb
call
mov
shrb
xor
mov
aad
mov
js
xor
adc
ja
repnz
fmul
xlat
xor
popf
add
lods
pop
mov
mov
fdivs
adcl
inc
mov
cmp
pop
jnp
pusha
jl
rcrl
xor
push
pop
addr16
jecxz
adc
cwtl
into
inc
stos
mov
mov
jl
cmc
aaa
scas
lret
stos
mov
inc
lods
sarb
sahf
jge
shl
xchg
push
iret
add
adc
xchg
jo
sub
inc
jecxz
test
xchg
pop
lods
daa
fwait
add
xchg
inc
call
call
jmp
cmp
and
divl
add
mov
in
test
xchg
push
movsl
push
mov
rclb
sub
jecxz
repz
rcrl
push
dec
int3
and
sub
and
push
adc
lods
outsl
sbb
sub
and
shrb
mov
cmp
xchg
xchg
dec
nop
hlt
fs
jge
push
aaa
add
fnstenv
pop
jae
adc
pop
mov
lcall
mov
loop
les
push
mov
push
jg
jb
pusha
cmp
insl
pop
flds
jbe
and
add
sahf
fnstenv
andnps
rep
lret
aad
adc
insb
xchg
xchg
or
add
test
inc
cmp
cmp
push
push
cltd
out
or
movsl
outsb
mov
int3
dec
push
int
movsb
sti
jae
fwait
cmp
lret
push
add
inc
or
enter
xchg
insb
or
push
idiv
sub
rol
movsb
imul
lret
mov
addr16
mov
cmc
insl
pop
push
loope
mov
nop
and
hlt
pop
add
add
push
xchg
sub
sbb
stos
addr16
or
nop
cli
push
jo
clc
orl
in
mov
ficompl
jg
push
pop
lods
inc
loope
push
mov
repnz
fstps
cmpsb
xchg
test
sub
cmp
ret
xor
fdivrp
mov
shlb
fmull
clc
mov
lods
sub
jg
test
fiadds
and
sti
or
out
dec
xchg
cli
push
jl
xchg
inc
mov
and
lods
lret
sbb
mov
clc
stc
mov
cmp
jb
jne
fdiv
dec
lret
leave
int
rcrl
jmp
aas
sbb
cld
jle
cmp
ja
shll
out
inc
inc
sbb
adc
mov
fcom
mov
out
in
jne
aas
add
mov
jmp
loopne
in
fcmovnb
out
push
movsb
popf
dec
ja
cmp
in
mov
inc
or
scas
inc
jle
add
inc
and
mov
daa
lcall
ret
ficomps
cmpsb
shr
or
dec
adc
pop
xchg
or
dec
das
out
pop
ja
aam
xor
shrd
gs
inc
lea
test
mov
push
test
popf
cld
xor
cmp
mov
shll
mov
push
scas
fdivrs
pushf
xchg
sbb
repz
cs
sahf
jl
lcall
imulb
jp
cmpsl
sti
push
inc
pop
jge
add
fnstenv
call
mov
popf
cmp
add
mov
or
div
imul
xchg
push
sub
push
jp
lods
mov
cmp
mov
orl
lret
cmp
imul
jne
aas
outsb
out
out
push
hlt
add
xchg
pushf
or
sub
cwtl
mov
pop
jns
decb
adc
arpl
dec
mov
std
cmp
jge
pop
cmpsl
pusha
stos
mov
sub
adc
mov
push
shrl
and
mov
or
xchg
dec
sbb
add
or
inc
xchg
cmp
loope
or
mov
mov
mov
jge
repnz
sti
int3
jns
jae
in
mov
jbe
xor
sbbb
mov
sub
iret
inc
xchg
rolb
aaa
xlat
push
lock
fisubrl
pop
lahf
icebp
mov
sub
leave
push
scas
pop
or
cmc
inc
roll
lea
fstpl
pop
loopne
jl
push
add
mov
mov
fstps
jb
fcoml
out
out
nop
cli
pop
jmp
mov
and
push
jecxz
xchg
shll
and
xor
lcall
push
sbb
inc
push
out
mov
lods
cmpl
pop
hlt
and
jmp
daa
out
fcomp
push
pop
gs
sub
clc
or
aad
mov
push
mov
out
xchg
fcoml
nop
inc
mov
aad
movsl
stc
push
cmp
sti
add
incb
sti
rclb
pop
jg
test
pop
out
pop
aam
repnz
mov
out
or
stos
pop
loop
jns
aaa
jnp
in
cmpl
jmp
in
outsb
decb
sub
test
jl
sbb
xchg
dec
rcrb
sbb
xchg
pop
rclb
inc
mov
add
xchg
sub
bound
in
mov
mov
cmp
push
in
imul
add
shlb
aam
xchg
inc
push
cmc
stos
in
mov
sbb
fs
xchg
lret
or
xor
sbb
inc
xchg
repz
stos
sub
mov
xor
and
or
rcll
movsb
inc
xorl
jl,pn
lss
xchg
or
mov
push
dec
pop
xlat
mov
inc
int
pop
or
mov
fildll
dec
mov
cld
mov
mov
xchg
rolb
jbe
in
cld
aam
mov
adc
arpl
xchg
outsl
fisttpl
popf
std
flds
aaa
jbe
jmp
push
fildll
lods
or
push
les
add
shll
push
je
decb
fiaddl
js
lcall
lods
shr
pop
daa
pop
mov
int3
jecxz
push
lcall
sbb
je
iret
sbb
sub
ds
xchg
jecxz
jle
das
cmp
popf
cwtl
push
out
iret
jns
mov
hlt
int3
push
scas
xchg
mov
push
lret
sbb
lret
xchg
ficoml
sub
cli
stos
bound
popa
push
pop
sub
popf
push
call
movb
lret
not
cmc
mov
push
cs
jae
loopne
or
pusha
psubw
pusha
scas
mov
outsb
jmp
or
add
sub
imul
out
out
dec
or
cmpsl
add
jnp
daa
enter
aas
mov
faddl
js
popl
repnz
xor
xor
mov
mov
sahf
push
pop
add
and
jo
inc
pushf
sbb
dec
call
out
xchg
shrb
jns
pushf
fistpl
mov
mov
mov
mov
out
mov
jno
nop
add
in
fistpl
fcmove
inc
mov
cmp
mov
stos
mov
pop
xchg
push
test
outsb
adc
mov
out
push
stos
xor
pusha
dec
pop
inc
jge
push
sbb
mov
insl
jmp
fisttpl
cmp
sbb
jg
mov
call
mov
imul
xor
mov
sbb
mov
ja
dec
notl
div
adc
adc
or
sub
insb
scas
inc
sti
icebp
nop
out
cmpsl
sahf
scas
sub
lods
pop
jo
in
push
jle
pop
cmp
mov
jo
test
dec
inc
jle
or
cmp
inc
das
fldz
je
mov
enter
xchg
idivl
cmp
lret
adc
cmpb
les
sub
xchg
push
out
push
ret
cmc
fldt
lahf
sub
or
testb
out
into
pushf
jno
sahf
adcb
in
les
jecxz
xchg
push
out
xor
push
leave
fcomip
mov
xor
sbb
in
mov
test
jp
inc
mov
push
pop
mov
dec
or
int
fwait
push
push
cmp
addl
jnp
mov
dec
jbe
dec
test
xchg
jne
dec
pop
adc
lret
xor
pop
pop
mov
insb
cmp
ret
jno
sbb
push
inc
cmp
xchg
adc
clc
add
inc
dec
xlat
xor
iret
sbb
bound
repz
rcrb
int3
xlat
adc
clc
sub
mov
rolb
mov
arpl
sbb
sarl
pop
into
movsl
mov
lret
lea
loopne
outsb
fsts
inc
in
jnp
ret
pop
cmp
test
test
cmpsb
or
jg
sub
imul
xor
xchg
add
scas
rcrl
repz
mov
jns
mov
outsb
or
ss
int
pop
push
repnz
aaa
aaa
inc
mov
fisubrs
and
jo
add
or
pop
cmc
out
push
pop
inc
dec
das
jnp
jg
fs
sbb
mulb
mov
int
mov
jecxz
ret
pop
pop
dec
pop
adc
push
mov
sbb
push
sbb
xor
or
inc
negl
dec
nop
and
xchg
push
lea
sarl
add
mov
cmc
fists
sub
int3
lret
repz
push
xchg
fwait
add
pop
fcomps
jl
mov
cmp
adcb
mov
and
ret
fs
hlt
mov
imul
in
add
les
rorb
js
cmpsl
mov
cmpsb
inc
aad
xchg
loopne
xchg
inc
lods
xchg
orb
mov
lods
pop
push
je
xchg
jno
jnp
xor
fnsave
orb
out
xchg
movsl
xor
lcall
inc
loop
jg
sub
sub
mov
enter
mov
push
pop
jne
call
repz
popf
mov
pop
in
test
icebp
jnp
or
clc
les
pop
ljmp
sbb
dec
faddl
mov
and
pop
ds
pop
mov
push
mov
enter
jo
hlt
xlat
add
iret
mov
out
lahf
mov
iret
jne
nop
fimull
lret
mov
in
loope
pop
out
cmp
test
push
pop
mov
divb
xor
popf
mov
jl
cmpb
pushf
jp
push
adc
or
mov
aaa
es
into
cltd
inc
fsubr
cltd
xchg
subb
xor
enter
sub
pop
pop
hlt
push
or
ja
cwtl
mov
cltd
stos
mov
jno
xchg
pusha
adcl
je
mov
adc
inc
xor
mov
das
aam
mov
push
cwtl
lret
pop
pop
jnp,pn
ss
std
jg
je
pop
orl
test
push
incl
sub
and
push
xlat
mov
out
test
mov
mov
fidivs
pop
rol
jne
faddl
mov
outsb
xchg
outsb
scas
loope
push
push
jb
cmc
je
pop
nop
leave
out
xor
push
inc
sbb
push
adc
xor
push
or
sub
add
pusha
into
out
jbe
mov
pop
addr16
and
int
push
cmc
sbb
stos
or
push
push
cmp
popa
in
inc
cld
subb
add
insl
xchg
push
xor
stc
mov
xchg
sub
or
xchg
test
ljmp
dec
sbb
lahf
pushf
test
jo
and
or
fstpl
push
push
mov
bound
hlt
out
lods
fbld
andb
idivl
inc
add
movsl
sbbb
sub
add
push
push
inc
outsl
lds
xor
repz
ss
out
in
fcoml
das
mov
xchg
push
andb
mov
inc
popa
sahf
jne
dec
adc
mov
int3
test
aas
cli
aad
xchg
aaa
fsubrs
push
repz
mov
pushf
push
cld
push
roll
aaa
fs
add
pop
xchg
lods
and
fisttpl
insl
push
mov
andl
stos
xor
jg
rol
pop
push
jp
mov
pop
test
cmp
dec
es
xchg
lods
push
bound
or
pop
jne
sahf
jo
and
cmpsb
orl
stos
and
xchg
les
pop
stos
xchg
out
pop
lods
and
aam
sti
xchg
outsl
shrl
inc
xor
lods
out
push
ret
aad
xor
arpl
into
xor
adc
sbb
fcoms
in
or
xor
fstpl
adc
mov
cmpsb
mov
rclb
inc
fnstenv
jecxz
and
outsl
jne
aas
enter
int
inc
lret
pop
out
hlt
inc
cmp
or
out
sub
rcll
push
loopne,pn
jmp
popf
iret
roll
fs
dec
int
ljmp
xchg
xchg
pop
push
test
xor
lret
sarl
in
lods
mov
imul
push
cmp
repnz
clc
xrelease
xor
loop
test
cltd
sbb
dec
mov
lock
sbb
push
adc
out
pop
mov
aad
jle
out
inc
pushf
jno
pop
shr
mov
mov
mov
loopne
aam
dec
daa
clc
loop
or
gs
push
loop
hlt
fcomip
jb
std
shlb
movsb
loope
cmpsl
insl
ss
dec
bound
shll
xchg
pop
hlt
es
movsb
test
rcr
pop
loop
sti
cmpsl
mov
jnp
idiv
fldcw
outsb
icebp
lds
popa
ret
ret
aas
mov
cli
pop
adc
pop
add
cmp
add
insb
and
shrl
pop
imul
aad
cmp
lahf
pop
fdiv
js
imul
sbb
sub
jge
mov
lds
lahf
and
insl
aam
mov
arpl
bound
mov
mov
lret
mov
push
sbb
mov
pop
jge
std
data16
mov
loope
add
js
dec
in
mov
xchg
test
cmp
ss
movsl
clc
jbe
es
push
mov
in
push
cmpb
mov
insb
inc
subl
repz
push
inc
adc
andl
fisttpl
add
cmc
jg
push
xchg
mov
pop
mov
cli
mov
arpl
jae
scas
pushf
or
icebp
push
dec
imul
push
sti
data16
push
mov
adc
imul
sbb
cli
aam
sub
insb
popf
aad
mov
out
push
pop
mov
sti
xchg
jp
test
sbb
ds
sar
imul
and
mov
or
test
pop
push
cwtl
rcrb
dec
mov
ficoms
inc
insb
add
sbb
hlt
mov
rorl
out
repz
or
ljmp
dec
ret
jno
sub
lock
xchg
adc
jmp
push
rcrb
adc
sbb
lock
mov
das
lret
sbb
pop
and
nop
push
cmp
jbe
mov
add
sbb
mov
push
dec
loope
iret
jnp
lea
aad
add
enter
mov
popa
sbb
jns
sti
iret
and
fldl
sbb
cmp
sarb
inc
testb
ja
rcl
call
adc
hlt
mov
push
mov
add
push
xor
dec
xchg
add
sarl
mov
ficomps
sar
xor
sahf
xor
aas
repz
jge
mov
aas
clc
in
mov
cltd
mov
in
je
sub
push
cmp
sbb
loop
cmp
sbb
aam
mov
in
xchg
inc
fimull
mov
inc
add
cltd
arpl
call
cmp
fwait
scas
fsubl
loope
xor
dec
movq
insb
decb
adc
out
jmp
push
lcall
imulb
xor
lcall
push
lret
lret
scas
sbb
scas
inc
xor
mov
mov
notb
push
adc
es
pop
pop
push
je
cli
cltd
lods
fs
ret
ljmp
and
ja
cmc
jbe
and
sbb
lret
sub
and
outsb
int3
leave
xchg
and
lea
dec
add
in
fld
jg
xchg
inc
leave
in
inc
push
add
not
sub
add
aad
mov
push
inc
jno
push
inc
push
call
sbb
and
push
outsb
int3
aad
int
cs
inc
clc
inc
push
ficoms
pop
push
lods
dec
push
insl
ds
hlt
out
and
adc
xchg
popf
mov
stos
mov
cmpsl
sub
mov
jl
flds
adc
repz
icebp
pop
dec
jge
xchg
imul
lret
push
cmovo
shrb
inc
das
xchg
fcmove
scas
notl
mov
in
cmp
pushf
mov
mov
pop
mov
fisttps
xlat
cwtl
fdiv
std
lods
js
cmp
adc
call
nop
or
jo
repnz
pop
mov
lret
mov
or
xchg
xchg
stc
into
mov
adc
es
xchg
loope
pop
or
rcll
leave
fsubs
in
in
xor
out
dec
mov
imul
cmpsl
xor
loopne
insb
shrb
outsl
insb
pop
sub
mov
shll
icebp
shr
enter
ljmp
loop
clc
call
call
out
pusha
pop
push
int3
pop
mov
mov
mov
sbb
cld
popf
outsl
dec
and
fdivl
leave
jns
inc
push
out
sahf
sub
sub
int3
jmp
xchg
pop
cmp
repnz
cmc
call
mov
cld
in
orb
fs
pop
daa
jp
push
clc
xchg
inc
les
push
in
test
sahf
mov
xchg
in
ds
dec
sbb
jne
xor
leave
xchg
insl
mov
ret
xlat
in
adc
insb
cmp
push
mov
adc
clc
int3
mov
push
subl
dec
scas
daa
lret
xor
dec
leave
push
mov
ljmp
or
jle
push
and
xor
pushf
or
cli
shlb
mov
dec
lock
or
scas
push
sub
out
std
in
or
in
jbe
xchg
mov
testb
scas
xor
popa
lock
xchg
sbb
pop
or
loope
jae
lods
and
xlat
pop
and
out
mov
jo
adc
je
jecxz
sub
cmpsl
push
mov
movb
mov
push
loopne
arpl
xchg
testb
loop
loop
push
push
cmp
cmpsb
jo
fcomps
xchg
push
mov
jmp
push
fstp
int
xlat
inc
xchg
aaa
sub
fdivs
fs
test
sub
shl
imul
sub
movsl
lods
jbe
int3
fs
sub
and
and
mov
pop
lret
mov
repz
xchg
popa
sahf
sbb
sub
xorl
rclb
scas
and
loopne
lods
fsubs
cmp
sbb
lods
pop
iret
push
pop
aaa
and
out
sbb
popa
jp
mov
repz
imul
xchg
xchg
xchg
nop
dec
ret
inc
aaa
stos
js
xor
out
cmpsl
imul
imul
out
in
outsb
fimuls
jae
in
jne
outsl
push
insb
shr
adc
fwait
dec
call
fdiv
jge
lret
jmp
add
mov
call
nop
pop
pop
test
jecxz
mov
dec
repz
aaa
add
sbb
call
jae
stos
daa
xchg
dec
pusha
xor
jno
test
mov
inc
out
mov
xchg
fs
je
addr16
xchg
push
or
fs
inc
mov
mov
js
sub
insb
in
pop
andl
pop
xchg
lods
icebp
cwtl
sbb
push
data16
fwait
je
cmp
push
mov
andnps
inc
mov
jg
out
jg
push
icebp
pop
sub
cmp
push
sti
enter
in
lret
in
clc
inc
push
push
movsb
add
mov
sub
loopne
pop
jnp
outsb
jns
aam
clc
sub
cmp
adc
xchg
lods
cmp
lret
in
testb
mov
in
sbb
sub
pop
mov
dec
cmpsl
cmp
and
pop
inc
adc
xor
xor
cli
daa
adcb
ljmp
loope
jne
sub
notb
fs
mov
add
mov
in
rcrl
and
loopne
jge
test
daa
rcrl
rcrl
nop
and
push
push
ss
call
jge
cltd
repnz
cld
lahf
push
inc
popf
mull
shll
lret
daa
pop
xor
jge
push
xor
cmp
cwtl
jp
pop
mov
and
and
sub
pop
push
adc
dec
xor
and
enterw
sub
popf
loope
add
test
lods
mov
pop
mov
out
out
sub
jge
and
loope
movsl
cmp
add
cwtl
aad
std
jb
addl
ss
xchg
notb
decb
mov
inc
in
sub
mov
cs
in
mov
insl
jl
mov
xchg
inc
js
push
mov
ljmp
push
xchg
xchg
fcomps
cld
or
daa
dec
mov
add
fistps
clc
iret
leave
sbb
ljmp
ficomps
mov
dec
sub
cmpsb
rcll
rol
pop
lods
sub
sub
loop
dec
loope
sub
and
xor
xor
mov
mov
mov
xchg
les
gs
jg
out
mov
dec
data16
js
mov
movsb
ficompl
hlt
add
mov
dec
mov
or
mov
pause
jno
mov
das
xor
mov
pushf
add
jmp
pushf
jnp
fstps
xchg
sub
dec
jl
adc
push
add
out
xchg
add
into
in
sbb
lret
push
cmpsb
mov
dec
push
xor
add
mov
sbb
addr16
pop
aam
xorb
mov
inc
outsl
dec
xchg
xchg
sub
adc
adc
mov
xchg
pop
dec
dec
cmp
add
stos
jae
out
mov
jae
daa
pop
fld
insl
xchg
jmp
push
mov
inc
or
fsts
les
repz
rcl
pop
adc
stos
or
cmpsl
push
rorb
mov
dec
ja
or
repnz
dec
mov
icebp
fidivs
ja
imul
jne
mov
sbb
stos
jae
adc
scas
leave
adc
cld
push
add
std
int
cli
inc
mov
insl
mov
loopne
movsl
inc
xor
inc
out
movsb
jbe
jae
inc
and
jnp
push
or
mov
imul
push
jge
cmp
dec
pop
shlb
and
ljmp
mov
sub
add
add
scas
xlat
or
mov
mov
jb
inc
jle
sbb
test
dec
out
and
add
inc
aad
adc
lock
cmp
leave
sbb
int
in
ds
shll
mov
pop
jge
pop
dec
sub
std
hlt
lock
les
cmc
sub
lahf
cwtl
sti
cltd
sbb
add
or
testl
cmp
insb
into
inc
xchg
in
aam
xchg
add
adc
out
jb
adc
scas
mov
push
movb
std
inc
mov
fwait
push
mov
in
dec
cmp
gs
shlb
sub
adc
cmove
push
std
sti
cli
jg
push
sub
push
out
xchg
dec
aas
mov
shll
int3
mov
adc
ja
sbb
hlt
scas
filds
sbb
hlt
rcrb
out
insb
popa
cmpb
adc
or
xchg
xor
fimull
jbe
mov
fwait
into
nop
sub
mov
fs
in
mov
lret
scas
loop
add
add
cwtl
pop
mov
clc
aaa
jecxz
loop
mov
les
cmp
fwait
ljmp
lds
movsl
inc
push
jbe
pop
test
adcl
pop
incb
xchg
xor
aam
popf
or
xchg
mov
push
shll
push
mov
cmp
or
popa
xchg
aad
shll
arpl
iret
pop
test
inc
loop
in
sbbb
sbb
sbb
imul
push
xchg
cmp
pop
test
cwtl
std
fiadds
movb
repnz
fnsave
fidivl
xor
cmp
pop
jl
mov
mov
stos
test
nop
inc
cli
cmp
mov
jo
and
cmp
sahf
jmp
fldenv
xchg
lret
mov
sbb
lret
sahf
aas
jg
hlt
xor
lcall
dec
or
dec
out
and
mov
xor
mov
arpl
pop
xchg
push
adc
cmp
inc
sbb
cmp
xchg
adc
push
pop
jp
adc
add
sub
inc
pop
mov
pop
pop
es
dec
dec
movsb
jg
add
mov
fsubrl
pusha
repz
js
imul
imul
mov
pop
pop
xchg
sub
mov
jnp
filds
jnp
xchg
inc
fiadds
orl
xor
loopne
mov
jecxz
aam
das
dec
mov
and
pop
adc
sub
call
loope
fnstcw
xchg
xchg
mov
adcb
movsb
leave
incb
lods
loop
and
sbb
rcr
and
mov
int
outsl
mov
pop
out
cmp
or
movsb
lret
out
push
and
pushf
sub
mov
jnp
jg
xchg
jl
inc
cmpsl
roll
mov
outsb
out
cmc
dec
stc
and
xlat
and
add
leave
cwtl
xchg
jnp
cmp
gs
sahf
cmp
inc
enter
mov
jo
mov
sub
iret
sbb
pop
adc
jecxz
iret
ss
lods
in
add
stc
and
jno
mov
mov
sahf
sbb
pop
sbb
ret
ret
push
scas
or
test
pop
sub
ja
arpl
sub
pop
push
lsl
jle
sub
push
in
std
push
cli
add
xchg
xor
mov
cli
mov
add
adc
loop
fildl
outsb
icebp
les
outsl
cltd
in
outsb
jno
pop
mov
andl
sub
enter
int3
sub
adc
loop
cs
sub
sbb
pushf
jmp
inc
xor
mov
lock
jae
or
ljmp
xchg
xor
sbb
cmp
cmp
adc
mov
xchg
mov
dec
fcmovnb
jecxz
stos
push
dec
dec
mov
sbb
int3
ljmp
add
notb
pop
inc
ficompl
and
loop
js
psubsb
lods
adc
push
movl
jbe
fwait
ret
jle
mov
cmp
mov
fmull
test
aas
out
add
decl
loope
pop
js
clc
sti
add
lock
inc
aam
adc
sbb
addl
fadd
adc
mov
rclb
test
sub
cmpsb
test
or
jnp
sahf
mov
inc
decl
dec
jne
outsb
lret
ja
mov
dec
mov
jae
jo
lret
jge
inc
inc
cli
cld
aam
push
fst
sub
sahf
add
mov
in
daa
jl
jno
xlat
scas
fisubs
aam
and
mulb
filds
pushf
xchg
stc
and
popf
mov
jl
add
aas
hlt
mov
inc
faddl
shlb
mov
jns
lds
pop
push
outsl
push
push
xchg
movsb
test
cmp
or
push
dec
mov
push
lock
test
jno
pop
dec
mov
pop
xchg
push
xchg
add
cmp
jne
js
dec
inc
mov
add
dec
push
ret
mov
aaa
mov
jp
jle
mov
gs
dec
add
rorl
out
jmp
xor
xor
sbb
lods
push
ljmp
das
pushf
and
sti
rolb
repz
inc
leave
add
into
push
dec
lea
jb
sbb
stos
mov
fstl
movsb
inc
imul
fstps
loop
div
out
pop
cmpsb
and
xorb
rcrl
repnz
xor
sbb
jnp
aad
es
repnz
mov
inc
cld
add
mov
push
push
pop
shl
aam
xchg
xlat
lods
ret
xchg
aaa
mov
jmp
int
push
add
xor
and
lock
std
outsl
or
mov
mov
fs
xchg
stos
push
sti
xchg
ljmp
pop
sbb
inc
in
adc
sti
cmc
cmp
push
push
sub
cmc
adc
lret
sbb
lret
push
jo
pop
xchg
sahf
adc
inc
stos
cmpsl
in
xchg
adc
xor
repz
push
rorb
cmp
cltd
ficompl
in
cmp
sub
int3
jge
jae
inc
cmc
adc
cmpsb
test
ret
push
sub
cmp
lods
adc
outsb
mov
jno
stc
out
xor
jo
sbb
xchg
out
jb
or
or
mov
xchg
xchg
sub
cmp
xchg
lret
dec
std
add
push
les
pop
insl
jbe
mov
xchg
push
es
mov
mov
jno
jns
jl
ljmp
mov
test
mov
add
mov
sbb
mov
stos
out
fsub
int
sub
mov
rclb
or
scas
ltr
push
jns
push
sub
sub
mov
es
and
std
add
gs
insl
loop
iret
and
push
jnp
int3
adc
jmp
jno
scas
out
test
mov
and
cmpsb
dec
sahf
sub
int
or
xchg
jmp
mov
sahf
ljmp
int
pop
adc
aam
xor
notb
mov
or
add
sarb
jg
loope
ss
pop
pusha
push
dec
fucomip
xor
pushf
jbe
push
adc
xchg
les
mov
mov
sub
pop
mov
sti
test
jecxz,pt
pop
xor
arpl
and
dec
and
cmp
enter
add
scas
stos
cld
mov
stos
xchg
out
pop
mov
movsl
je
movsl
stos
push
lret
xchg
hlt
jne
push
lds
lcall
push
rcr
pop
in
push
fisttpll
xchg
sub
in
cmpsb
outsl
dec
mov
imulb
cwtl
xorb
mov
fwait
xorl
aaa
adc
enter
mov
nop
adc
jge
mov
jl
sub
test
or
sbb
adc
in
jecxz
iret
das
jmp
das
imul
push
and
push
in
jne
cmpsb
mov
inc
cmpl
xor
add
xor
das
mov
inc
dec
lea
dec
jno
or
sbb
add
adc
arpl
cmpsl
test
clc
lret
mov
out
in
aaa
push
lcall
xchg
ret
push
outsb
inc
fists
pop
inc
adc
xchg
adc
xchg
ja
push
sub
mov
mov
mov
jo
pushf
fwait
popa
or
mov
ljmp
mov
flds
stos
cli
push
fiadds
lret
iret
push
add
scas
or
or
add
pop
pop
mov
mov
mov
lret
pop
out
fwait
and
mov
pop
xor
ret
loop
or
jae
mov
ss
xchg
xlat
sub
aad
std
out
push
in
pop
cmp
scas
or
pop
mov
ljmp
outsl
add
add
mov
cmp
out
inc
pop
add
orb
negl
sbb
and
push
adc
divb
aaa
add
pushl
test
arpl
lods
pop
cli
adc
imul
aaa
jge
bound
mov
imul
pop
mov
inc
lds
push
dec
in
mov
push
push
sub
mov
repnz
mov
sbb
push
push
mov
jne
sub
fsubrp
and
div
mov
add
movsl
outsb
pop
xlat
aas
mov
xor
inc
push
fldcw
outsl
inc
adcl
mov
leave
xor
pop
push
clc
int3
and
cmp
cmp
lock
and
insb
or
mov
add
add
dec
fsubrl
ficoml
pop
roll
iret
imul
out
mov
or
pop
mov
pop
mov
xlat
subb
jno
ljmp
fwait
shrb
rcr
jb
shll
mov
daa
movsb
and
adc
xor
pop
jle
sbb
lret
add
mov
ss
test
xlat
add
adc
pop
push
in
sahf
in
cmp
xor
and
dec
repz
cmp
fwait
jnp
inc
mov
sysenter
lret
jb
insb
outsb
cmc
or
and
mov
mov
shlb
and
addr16
sbb
xchg
mov
dec
jnp
int3
inc
inc
xor
int
or
adc
xor
push
stc
push
lcall
mov
dec
shl
xchg
lea
and
or
or
pop
imul
sahf
inc
jno
repnz
xlat
jne
bnd
push
add
mov
lcall
pop
jl
mov
push
lods
stos
lcall
or
scas
es
pop
mov
das
sti
lds
jle
lcall
push
dec
cmpsl
inc
mov
cli
cmp
add
jg
xor
jbe
scas
cld
mov
lock
and
and
loop
xor
pop
cmp
imul
gs
cmp
sbb
mov
psubusw
int
cwtl
and
mov
loop
sbb
inc
mov
testb
fidivrl
fsubrl
cmpsb
cmp
xchg
jg
lock
and
jp
outsl
cmpsl
ss
fidivrs
cltd
in
in
dec
call
adc
dec
andb
cmp
scas
cmp
push
jle
cmp
fidivrs
or
dec
je
inc
xchg
cmpsb
mov
inc
lret
insl
or
cld
ret
mov
int
adc
lret
enter
adc
mov
dec
repz
stc
shlb
inc
fiaddl
inc
movsb
xchg
xor
addb
dec
xchg
lods
stc
add
inc
add
fwait
movsb
pusha
stc
dec
mov
sub
xor
sarb
inc
mov
int
mov
pop
add
dec
mov
lcall
stos
mov
fmull
inc
add
je
xchg
subb
data16
dec
js
xchg
mov
push
hlt
lcall
sbb
pop
mov
xor
orl
mov
shl
adc
mov
repnz
add
fcompl
push
xor
xchg
inc
or
sub
fistl
pop
into
test
daa
fistps
jo
out
xorb
fiaddl
lcall
stos
lock
inc
cmp
jmp
js
ss
fs
lret
daa
clc
test
sub
dec
mov
scas
pusha
xchg
testb
and
sbb
pop
push
std
sub
adc
xor
mov
addb
mov
add
popf
out
mov
fdivr
lea
ret
clc
push
inc
mov
roll
clc
in
cs
mov
xchg
cli
xchg
in
fstpt
test
add
roll
test
jae
push
sti
mov
shll
ds
jno
xor
loope
pushf
dec
push
xchg
loope
cmp
pushf
es
fdivrl
add
dec
mov
in
xor
xor
fmuls
cwtl
stos
mov
pop
mov
sub
stos
mov
xchg
ja
and
sbb
xchg
scas
or
push
js
out
push
push
cmpsb
add
and
dec
test
adc
fs
jl
jmp
xchg
gs
divb
sbb
add
aad
popa
pop
aas
mov
or
cltd
push
bound
js
xchg
cmp
pop
sub
inc
fsub
mov
scas
and
mov
add
ficomps
ror
subb
push
sub
pop
cmp
lahf
fisubl
test
pushf
sbb
nop
jle
pop
cmpl
pop
cld
loope
test
pop
mov
or
fcomip
insl
imul
dec
imul
sbb
dec
pop
lcall
xor
push
outsb
xchg
mov
push
rorb
xchg
or
shlb
lcall
xlat
add
sub
cmpsb
or
cmpsl
pop
jb
push
loop
jp
repz
daa
lcall
cmp
push
mov
dec
bound
pop
test
dec
dec
adc
xchg
pushf
sub
stos
add
addr16
xchg
push
loopne
pop
dec
jb
sbb
aaa
cmp
test
ret
lcall
adc
stos
or
fbld
fwait
or
aaa
lock
jl
faddl
sbbb
push
insb
daa
lret
push
ret
std
sarl
cwtl
lock
pop
add
inc
into
into
ret
lcall
push
and
rolb
mov
or
nop
ds
std
daa
xchg
std
test
lcall
jno
sub
xlat
xchg
test
push
sbb
fisubl
adc
pop
xor
fdivl
mov
adcl
adc
in
add
mov
mov
popf
lods
push
popf
mov
mov
stos
fnstsw
or
or
jnp
mov
in
scas
mov
jmp
nop
repz
aas
hlt
repnz
mov
in
in
in
xlat
or
ret
adc
lcall
xor
add
lods
dec
sub
popa
dec
sahf
fimuls
fnstenv
ds
orb
movsb
das
cwtl
adc
loop
xor
adc
push
adc
mov
sbb
dec
in
jne
cli
inc
sub
cmp
dec
sbb
data16
nop
lret
pop
pop
mov
std
sub
icebp
sub
jno
das
arpl
dec
fimull
inc
jmp
cmp
mov
mov
jmp
mov
int
lea
pop
cwtl
mov
and
adc
aas
pop
pop
pop
int3
mov
xor
in
push
insl
cmp
adc
je
xlat
xchg
fistpl
lods
xchg
idivl
decl
pop
mov
pop
push
mov
addb
xchg
push
rcll
aad
and
sub
add
mov
stc
test
out
sub
pop
inc
adc
ja
cld
sbb
pop
out
stos
ret
and
xchg
out
dec
in
cmp
fucomip
test
jne
xchg
xor
enter
in
lcall
pop
push
mov
fnstcw
dec
sbb
arpl
or
call
or
or
ret
inc
push
mov
fisttpll
and
push
jg
popa
xchg
or
cmpsb
into
inc
jecxz
mov
aas
mov
shr
scas
test
imul
lods
lods
sarb
mov
orl
mov
mov
push
out
leave
loopne
jl
rorb
pop
add
arpl
es
push
push
inc
ja
data16
xchg
push
pop
adc
or
test
insb
in
ds
sbb
cmc
xchg
jp
add
lods
fdivs
add
and
ds
loop
push
ss
sbb
dec
dec
dec
ds
dec
test
mov
mov
pusha
fildl
add
repnz
dec
orb
lea
or
lret
push
pop
or
jmp
std
xchg
sbb
push
mov
and
js
cmc
es
jmp
orb
xor
loope
mov
or
push
jmp
and
or
push
in
pcmpeqb
jge
push
mov
mov
sbb
stos
shlb
cld
scas
inc
in
repnz
mov
inc
movsb
inc
adc
jae
push
jmp
or
add
shlb
insl
popa
pusha
xchg
jo
loop
insb
dec
inc
test
ljmp
jae
pop
lock
sbb
push
inc
mov
mov
sbb
cmp
push
in
popa
inc
add
loopne
lret
jne
xor
mov
cmp
outsb
out
pop
sahf
xchg
out
sub
pop
xchg
es
and
mov
ret
mov
jne
out
sar
sbb
das
dec
mov
movsb
xchg
jns
fldenv
pop
inc
cld
mov
loopne
mov
or
lods
adc
or
inc
jmp
cli
cltd
xchg
dec
fnstcw
aas
jecxz
mov
jbe
jge
lret
dec
jp
xchg
fiaddl
cmp
mov
adc
pop
and
pop
cmp
cs
movsl
mov
test
mov
lock
lock
test
and
std
sti
les
bound
insl
mov
add
or
sub
mov
inc
and
jno
pop
mov
addr16
sub
inc
ja
mov
mov
pop
jne
leave
pushf
jl
or
test
push
jl
jmp
je,pt
xlat
adc
sti
sbb
pop
inc
sbb
or
inc
ret
js
arpl
leave
mov
enter
jae
jae
mov
mov
into
bnd
rol
mov
pop
mov
out
jae
sub
das
mov
mov
scas
cmpsb
xor
mov
test
cli
add
mov
test
fsubrl
sbb
jecxz
addr16
mov
mov
lods
dec
mov
in
ja
xor
repz
addl
dec
rorb
push
inc
xor
std
mov
shrb
fbstp
cmp
inc
cmp
mov
adc
sub
mov
test
repnz
mov
es
ja
pop
adc
loopne
bound
daa
push
cmp
shrb
es
repnz
loop,pt
xchg
pop
outsb
fs
xchg
sbb
mov
mov
xor
scas
pop
adc
xor
loop
ret
adc
sti
ret
fwait
lods
sub
dec
insb
mov
or
push
push
push
sub
pop
mov
adc
xchg
jnp
mov
mov
xchg
fisubs
movsb
lret
fs
xlat
test
iret
hlt
fnstcw
outsb
cmpsl
jno
mov
inc
add
dec
or
and
pushf
cmp
shl
fmul
or
xchg
mov
sbb
fistpl
aad
shrl
out
ret
pop
iret
fidivl
inc
loop
fdivs
loopne
push
sub
lock
cmp
xchg
bound
outsb
cmpsl
sti
xchg
pop
cmc
pop
dec
sar
stos
dec
loopne
stos
test
loope
loopne
out
scas
cs
cmp
ja
mov
es
adc
lcall
xor
loopne
mov
idivl
bound
mov
stos
insl
pop
test
mov
mov
xchg
aas
and
add
mov
insb
inc
inc
mov
adc
xchg
sbb
out
mov
ret
inc
aas
mov
mov
cmp
mov
mov
dec
int3
negl
daa
popa
popa
and
shlb
fnstsw
cmp
xchg
pop
js
in
and
les
outsl
popf
push
mov
filds
mov
push
push
mov
add
orb
stos
pop
test
mov
sarb
cltd
push
shl
fs
mov
xchg
movsb
cltd
cwtl
aam
push
mov
pop
adc
sub
and
add
mov
mov
sub
cmpsl
sti
cs
sahf
mov
test
jne
and
leave
fnstenv
push
mov
jg
filds
or
out
cmp
adc
sahf
pop
pushf
cwtl
test
pop
pop
adc
lret
sub
mov
mov
leave
xchg
push
out
out
jecxz
push
ja
adc
decb
xchg
inc
pop
jmp
sub
xchg
push
push
xor
cmpb
sbb
inc
xor
int3
xchg
push
xor
out
mov
popf
daa
sbb
subl
dec
mov
sbb
xor
iret
pop
push
outsb
test
push
aaa
rclb
pusha
push
mov
fdiv
xlat
cld
call
xchg
mov
sbb
sub
add
incb
lcall
mov
mov
fwait
popf
enter
inc
sub
scas
test
jp
nop
daa
xchg
push
pop
clc
scas
test
or
inc
mov
jae
insl
lods
xor
jns
pop
jne
nop
and
mov
shlb
mov
inc
rorb
pop
dec
and
cli
mov
jle
outsl
sbb
cmp
cmpsl
int
and
lea
mov
inc
mov
scas
dec
xchg
sub
xor
es
jmp
mov
adc
dec
shll
in
pop
fwait
adcl
or
in
movsl
repz
xlat
repnz
pusha
push
popf
mov
inc
pop
ficoml
add
adc
mov
mov
xor
sbb
mov
and
subl
mov
cwtl
dec
xchg
ljmp
cwtl
lahf
inc
push
insl
mov
loopne
test
pop
fildll
scas
dec
cltd
adc
mov
mov
jg
lret
pop
push
mov
sbb
pop
mov
adc
xorb
jo
sbb
lcall
scas
xor
jl
push
or
and
fs
jb
push
mov
iret
ret
mov
fcoms
and
sub
hlt
mov
test
cmovnp
test
mov
adc
jmp
mov
fwait
pusha
dec
cli
xor
les
in
push
push
lahf
pop
jne
push
aad
sbb
es
cmp
add
dec
jg
outsb
cli
mov
mov
pop
cltd
lods
cltd
push
add
movsb
test
test
in
sbb
iret
out
fisttpl
pushf
cmpsl
inc
ret
xchg
in
cs
adc
lret
cld
pushaw
jmp
js
shll
pop
sub
sbb
gs
cmp
je
push
jb
jae
and
add
idivb
cmpsl
cwtl
js
adc
popf
push
jne
sbb
or
cmpl
cmp
push
shlb
sub
leave
push
adc
or
add
call
test
sbb
sub
loope
xor
iret
or
jl
es
in
xor
outsb
lods
or
sub
sti
inc
mov
pusha
xchg
ret
inc
outsl
jg
ret
xor
sahf
add
xchg
fcmovnb
inc
inc
aam
mov
jns
jbe
bound
fmulp
arpl
or
push
lods
cmp
mov
ss
fists
cmc
pop
js
add
cltd
push
mov
and
int3
insl
sbb
and
sbb
fcomps
insl
add
es
fwait
push
fs
mov
mov
movsl
push
je
cld
cmp
test
addr16
imul
dec
sbb
loopne
sub
cmpsb
or
bound
mov
lea
sbb
stos
enter
xlat
jbe
mov
ror
sbb
sbb
or
push
loop
iret
inc
ljmp
mov
fldt
mov
sahf
sub
jecxz
pusha
jle
test
cmp
gs
jmp
aas
addr16
mov
repnz
jle
lods
cmp
dec
push
push
or
adc
ret
in
and
add
jns
lahf
inc
push
xchg
mov
cmp
pop
lret
mov
out
lods
inc
gs
ret
inc
cwtl
cmp
sbb
pop
bnd
cmp
pop
pop
mov
xor
sbb
lcall
aad
aaa
fcmovnb
cmp
test
inc
xchg
mov
inc
push
mov
pop
xor
ds
xor
out
pop
bnd
subb
imul
push
sbb
stc
pop
dec
mov
cmc
push
jge
ljmp
jae
int3
mov
movsb
and
mov
daa
cmp
adc
test
lods
aaa
inc
pop
mov
loop
js
enter
sbb
push
fsubrs
cli
xchg
dec
gs
cmp
flds
add
sbb
mov
push
out
loope
test
nop
jne,pt
inc
push
xchg
xchg
fisubl
push
cmp
dec
out
ret
mov
repnz
ret
imulb
rol
mov
sub
out
pop
adc
xchg
push
loop
or
popa
mov
jge
addr16
push
loope
mov
and
scas
aas
sub
fwait
mov
idiv
lods
lahf
fwait
imull
xchg
sbb
lds
pop
dec
aad
in
cltd
cli
icebp
insl
dec
nop
sub
inc
stos
scas
mov
popa
nop
movsb
aad
cs
or
aam
in
push
cmp
push
sti
xor
push
or
jno
mov
cmp
test
xchg
ljmp
mov
push
fs
xchg
ret
mov
sbb
dec
inc
sub
adc
xchg
sub
sbb
popf
mov
dec
lods
xchg
adcl
xor
rcrl
cld
out
mov
vpmaxub
mov
push
clc
pop
jmp
and
or
je
orl
arpl
arpl
lods
xchg
xchg
fistl
xchg
int3
and
cmp
fbld
stos
xchg
ret
lret
mov
jnp
dec
push
sbb
adc
mov
xchg
or
add
and
and
data16
hlt
mov
negl
jbe
sbb
adc
fsubrl
mov
pop
lods
sub
jmp
fsubrs
dec
ret
hlt
outsb
test
sbb
and
adcl
aad
mov
dec
cmp
mov
sbb
push
push
pop
std
movlps
lahf
xor
aam
mov
lea
or
push
stos
sbb
repz
or
xchg
jp
sti
push
addr16
add
fmull
in
jmp
cmp
outsb
inc
add
inc
lock
and
inc
mov
xchg
test
dec
inc
mov
pop
jg
test
in
pop
adc
cmp
xchg
adc
mov
inc
xchg
bswap
adc
popa
lret
adc
arpl
push
lahf
sub
or
push
jo
mov
and
xor
inc
dec
ljmp
pop
xchg
fnstsw
lock
sbb
lods
and
adc
mov
das
loope
inc
aaa
fsts
test
inc
ljmp
lcall
dec
push
mov
cmp
jg
xchg
lock
mov
mov
cwtl
mov
inc
pop
jno
xchg
rep
movsb
adc
nop
cmpsl
add
sbb
lods
dec
xor
imul
cmp
or
psraw
shrb
cmpsl
repnz
pop
adc
sub
loop
jo
into
rcrb
dec
fs
jp
push
jb
jb
insb
inc
test
repnz
test
mov
pop
xchg
jge
movsl
test
mov
aad
in
push
fnstenv
std
fmuls
enter
inc
or
int
sbb
xchg
or
cli
add
lods
aaa
sub
rcrb
mov
mov
and
arpl
js
mov
or
pop
mov
pop
pop
test
sub
gs
sbb
stos
push
inc
cmp
aam
xor
in
and
enter
mov
scas
push
or
mov
push
xchg
mov
jle
push
in
jns
fstpl
adc
and
clc
call
push
xchg
adc
xchg
ret
xor
jbe
pop
inc
out
test
xchg
dec
jns
add
sub
js
fldenv
lahf
hlt
test
jg
or
sub
imul
cvtdq2ps
neg
pop
mov
and
rorl
dec
mov
jmp
add
mov
sbb
and
call
xchg
jo
push
and
into
or
out
into
repz
pop
lret
inc
sub
mov
mov
idivl
push
xor
xlat
inc
mov
jle
sbb
shll
mov
mov
lcall
pop
ljmp
sbb
in
adc
repnz
jne
leave
scas
inc
sub
ljmp
add
inc
jmp
xchg
pusha
lods
sub
fs
ret
or
aas
adc
mov
and
jg
out
fstl
es
adc
inc
les
and
fwait
jmp
addr16
xor
je
dec
sub
push
stos
jno
jb
add
xchg
mov
xchg
push
pop
push
rcl
enter
cltd
rcll
adc
dec
jp
mov
test
cs
inc
shlb
push
scas
cmp
frstor
xchg
mov
out
leave
mov
xchg
orb
pop
pop
test
hlt
ret
test
inc
cli
jbe
movsb
mov
add
sarb
test
sbb
push
add
and
nop
ret
xor
mov
push
adc
pop
pop
in
mov
dec
pop
inc
adc
dec
mov
add
add
pop
aaa
mov
outsl
mov
and
cmc
loope
shr
fcomps
pushf
scas
out
inc
push
in
or
mov
cld
nop
sub
aam
inc
movsb
and
mov
iret
in
sub
movsb
mov
dec
lcall
xchg
sbb
lds
cltd
jg
push
mov
jo
sbb
inc
add
cwtl
test
xor
shll
sahf
xchg
decb
or
xchg
imul
test
mov
fs
adc
fdivrl
pusha
loop
push
ror
pop
jb
in
inc
ljmp
imul
mov
cmp
jno
xor
cmp
inc
outsb
add
dec
add
cwtl
in
cmp
stos
xor
adc
push
lret
das
xchg
cmpsl
push
xor
int
push
out
mov
xlat
mov
add
inc
imul
push
push
daa
sub
mov
push
push
pop
add
sbb
jmp
inc
ror
jge
add
or
movsl
lods
std
pusha
mov
sarl
leave
inc
cli
or
sbb
mov
inc
roll
pop
mov
dec
sbb
cld
icebp
fwait
mov
jg
nop
mov
dec
das
jno
lea
scas
push
js
int
cmp
mov
in
dec
xor
scas
scas
lea
loop
repnz
fadds
or
gs
mov
lock
jle
out
pop
loopne
jp
adcb
adc
and
jno
loop
xchg
inc
lahf
xchg
mov
nop
push
sbb
mov
das
fadd
daa
jb
movsl
adc
fldt
cmp
inc
ret
ljmp
pop
inc
ds
fwait
cmp
shll
adcb
and
push
fisttpll
dec
mov
push
outsb
shll
jp
sti
and
dec
icebp
hlt
xor
xorb
lahf
js
sbb
pop
add
xor
dec
fsubrs
outsb
xor
and
dec
mov
sub
rcll
loopne
fdivrs
stos
push
arpl
out
mov
test
push
cld
lahf
or
into
dec
pop
mov
jae
jbe
jo
or
add
push
enter
cmp
sti
xor
sbb
xchg
adc
mov
int
push
push
dec
mov
js
or
dec
out
daa
dec
push
test
cmp
lock
out
jmp
pop
ja
mov
in
push
in
jmp
mov
lret
flds
insb
loopne
adc
add
ljmp
lcall
pop
ds
dec
lods
xchg
add
insl
int
lahf
sbb
mov
repnz
jo
mov
jecxz
sbb
int
lods
or
pop
test
or
aaa
pop
aam
sub
xor
dec
insb
jno
fnstsw
lcall
or
cmp
xlat
mov
inc
daa
ljmp
add
cmpsl
push
test
mov
pop
jg
jb
pop
inc
bnd
cmp
jmp
mov
mov
lea
leave
mov
rcl
xor
in
aas
scas
jg
ret
adc
jno
push
and
adc
das
pop
scas
bound
insb
data16
lret
jg
addl
jmp
xchg
add
addr16
subl
pop
add
shrb
cltd
icebp
inc
adcl
stc
and
pop
sub
ficoml
adcl
or
cli
ljmp
cmp
lock
fsts
cmpsb
pop
ret
ds
aas
andl
push
pushf
pmullw
push
xchg
jnp
jae
fwait
pusha
inc
push
test
cmpsb
pop
push
test
les
icebp
xchg
xchg
jl
xor
test
mov
insl
cmc
and
pop
pop
or
lret
sub
mov
out
cmc
inc
loopne
xor
push
pop
std
arpl
insl
jbe
imul
movsb
popf
pop
outsb
jb
mov
aas
mov
sbb
mov
push
iret
test
mov
rorb
cmp
mov
rolb
xor
xchg
push
int3
insb
ja
cwtl
push
ret
out
xchg
sub
outsl
sbb
inc
loopne
test
xor
inc
dec
jp
movsl
jge
xchg
jg
push
andb
loop
add
leave
inc
fists
mov
cs
lret
popf
push
push
data16
leave
mov
and
pop
or
and
push
ret
adc
jecxz
jb
mov
xchg
mov
cltd
in
adc
mov
sbb
loopne
scas
mov
cmp
pop
add
cltd
loop
ret
popa
jns
adc
pop
jbe
push
and
sbb
cld
inc
stos
mov
cli
jno
mov
pop
and
ljmp
pop
in
outsb
stos
jo
stos
test
cmp
inc
sbb
int
cwtl
into
inc
gs
sub
fcompl
xchg
into
repz
sti
pop
lods
rolb
mov
mov
jnp
add
in
adc
fimuls
repz
stos
loopne
push
rcr
out
shl
movsb
shll
jns
fidivrl
jle
stc
pop
inc
mov
gs
or
xor
xchg
pop
xor
sbb
sbb
das
enter
or
std
aad
mov
mov
and
dec
hlt
mov
mov
jmp
out
ret
mov
push
addr16
in
aaa
shrb
mov
or
pop
lods
es
lds
loopne
std
xchg
mov
gs
sub
movsb
insb
sbb
sub
lret
data16
insb
or
cwtl
loop
jl
popf
mov
dec
es
adc
inc
xor
sub
repz
or
jp
cmp
rclb
push
push
adc
enter
xor
insb
int
mov
movsl
mov
xor
and
and
mov
dec
adc
arpl
xchg
xchg
mov
stc
scas
xchg
adc
pop
sub
add
adc
aaa
movsl
xchg
inc
push
and
setne
insl
lea
xchg
dec
sbb
inc
or
inc
lahf
out
push
test
or
jnp
xchg
test
or
shrl
ret
pop
fwait
outsl
pop
lods
pop
jmp
mov
cmc
lret
scas
and
xchg
hlt
cli
jb
push
rcll
mov
shrl
adc
insl
cmp
inc
stos
add
gs
sub
mov
pop
test
jb
dec
in
lahf
outsb
push
std
sub
incb
inc
push
enter
dec
push
dec
testb
jecxz
scas
mov
fildl
cli
dec
jecxz
inc
mov
jnp
xor
mov
jne
lock
push
arpl
or
lea
mov
ljmp
fcompl
xchg
call
sbb
es
jge
popa
push
cmp
fiaddl
push
ficoml
pushf
jns
xchg
insl
pop
xchg
push
sbb
pop
lret
in
cmpsb
repnz
mov
jp
aas
ret
cmp
fdivp
cmp
adc
inc
in
xchg
inc
xor
sarl
jno
dec
add
aam
mov
and
cld
cld
adc
aaa
or
mov
cmp
mov
inc
pop
mov
leave
adc
fnstcw
fsub
mov
imul
cli
mov
cmp
or
popf
xchg
or
stc
pop
jbe
icebp
push
testl
shr
lret
pop
enter
daa
test
xchg
jbe
push
push
or
mov
movsb
outsl
or
lock
xor
pop
fsubr
pop
imul
andb
mov
in
das
pop
or
and
es
jns
push
pop
mov
mov
add
cmp
aaa
mov
sbb
incw
mov
mov
movsb
push
scas
dec
push
inc
mov
rcll
fwait
mov
dec
outsb
sub
mov
scas
sbb
cli
mov
pop
fs
aas
lods
scas
add
cmp
scas
adc
mov
subb
imulb
es
in
adc
push
cmpsb
repnz
sbb
sub
jae
pusha
sahf
adc
sbb
ds
ljmp
mov
cmp
subb
dec
ret
push
push
test
icebp
push
movsb
push
fs
mov
mov
mov
mov
insl
jg
out
add
ret
xchg
push
cmp
mov
mov
pop
imul
fists
adc
leave
sub
jb
mov
call
jnp
sub
push
sub
inc
jmp
in
icebp
out
xchg
dec
mov
int
mov
jb
fs
stos
fimull
jno
nop
shlb
sub
and
add
les
dec
arpl
lods
sub
leave
das
orb
mov
hlt
adcl
lds
mov
out
call
insb
pushf
mov
stos
pop
shlb
inc
scas
add
sub
scas
mov
iret
fisubs
ja
jns
shll
jnp
jmp
aas
xchg
and
pusha
dec
and
inc
jmp
fwait
inc
dec
outsb
stos
sbb
adc
add
mov
jge,pt
dec
and
sbb
mov
sbb
into
and
xchg
lods
orb
sub
shl
xor
xlat
cmp
dec
or
fbstp
arpl
ret
sub
add
dec
sub
pop
scas
mov
push
aam
lea
es
or
das
mov
pop
js
je
mov
cmpsl
mov
pop
das
pusha
arpl
jg
and
pusha
push
inc
cmp
cmp
mov
outsb
push
outsl
int3
ds
incb
lds
jmp
cmp
lret
and
inc
call
lea
fstpt
and
pop
and
and
inc
pusha
mov
jmp
test
adc
mov
pop
ss
repnz
or
std
mov
push
pop
dec
std
scas
push
xor
xorb
in
insb
and
adcl
pop
mov
pop
sahf
lods
add
xchg
or
xchg
and
iret
dec
nop
cmpsl
ffreep
sub
add
jl
mov
push
push
test
and
sub
imul
popf
pop
addb
sar
lock
into
xchg
dec
sub
xor
loope
xchg
lods
outsl
sub
call
xlat
gs
jle
movsb
lds
addl
xchg
mov
cmpb
mov
sbb
mov
mov
mov
adc
andl
push
scas
fistpll
das
push
sti
notb
aaa
cmp
mov
ja
pop
into
xor
mull
mov
cmpsl
sti
cmp
arpl
inc
add
lea
adc
mov
lds
xchg
rcll
mov
ds
cwtl
mov
sbb
sbb
mov
mov
sbb
sub
push
inc
sbb
xor
test
nop
int
or
aad
mov
push
push
mov
subb
xor
int
test
pusha
inc
cmpsl
inc
clc
sub
lds
mov
es
out
mov
push
mov
cld
loop
mov
jp
cmp
push
ret
adc
sub
pop
nop
push
rcr
in
pop
lock
jbe
jno
mov
push
cmp
mov
jae
testl
jl
mov
adc
jp
mov
jno
cld
test
jae
or
fwait
jmp
fwait
out
in
mov
jle
or
leave
loop
cld
add
cli
ficomps
jnp
scas
jp
cli
out
push
fmul
add
dec
jle
adc
fwait
sub
arpl
jns
pusha
subb
pop
movsl
and
in
jbe
les
lret
add
stc
pop
popf
adc
movsl
cltd
and
cmpsl
mov
inc
les
jmp
cmp
push
pop
jle
cltd
icebp
sbb
mov
movsl
fsubl
roll
movsb
roll
sub
jl
sbb
aam
pop
xchg
or
mov
mov
flds
push
cmp
clc
mov
inc
cmp
sar
hlt
ficoms
cmp
or
stos
test
pop
jecxz
into
xchg
jecxz
insl
and
icebp
rclb
ds
hlt
add
repz
xlat
push
push
insb
sub
sub
or
inc
paddq
mov
pusha
fimull
pop
inc
rcrl
les
in
inc
cmp
lret
xchg
mov
cmpsl
int
enter
or
pushf
pop
les
jnp
mov
push
lea
lods
loope
xchg
mov
fsubs
lahf
repz
cmpsb
test
mov
adc
adc
adc
rep
lret
push
push
lret
jp
push
mov
icebp
and
lea
insb
xchg
xor
xor
out
outsl
lods
and
lods
rclb
enter
mov
outsl
sub
mov
push
push
dec
cmp
jl
or
addps
into
aad
or
leave
lods
sub
insb
mov
lds
ficoml
clc
cmpsl
loopne
sbb
into
mov
adc
jp
lret
lret
leave
xchg
add
jmp
lods
inc
mov
and
sub
cmc
jb
repz
dec
xor
and
mov
mov
cmpsb
or
inc
cmc
psrld
ds
push
and
xchg
shr
sbb
sbb
fnstenv
push
iretw
ss
std
test
test
dec
sub
add
sbb
mov
xlat
sbb
daa
xlat
dec
mov
loope
pop
push
shrl
adcl
sbb
outsb
mov
loopne
es
rorb
insl
movsb
test
fdivp
fcoms
sbb
ja
lods
mov
loopne
mov
and
aad
lods
xor
aaa
mov
outsb
imul
pop
push
fs
into
stos
mull
shll
test
mov
sbb
iret
adc
inc
push
ljmp
stc
or
arpl
repz
push
xchg
sub
cmp
ret
xor
pop
pusha
pop
cs
cmpsl
xor
imul
mov
adc
mov
leave
inc
mov
icebp
lret
sub
into
rol
xor
push
stos
or
aas
in
fstpt
ja
cmp
xchg
shl
push
shl
mov
rcr
into
inc
mov
aaa
std
dec
dec
xchg
sbbl
mov
inc
std
sbb
mov
rcll
aam
inc
inc
ljmp
fisttps
js
insb
sub
push
aam
mov
and
add
out
sbb
push
movsl
inc
sbb
push
popf
out
xchg
adc
fs
cmc
je
push
push
rorl
out
dec
cmc
movsl
xchg
rclb
cli
dec
mov
int3
test
inc
jmp
aas
add
pop
movsl
outsl
lods
outsb
test
fmuls
ljmp
ds
movsb
xchg
adc
adc
mov
lock
insl
inc
xchg
push
stos
jne
dec
adc
jbe
xor
mov
pop
dec
jp
bsf
dec
pop
mov
push
gs
fdivl
lcall
sbb
pop
sbb
gs
jp
mov
add
and
inc
int3
sbb
cmp
or
cmp
mov
iret
popf
jae
add
or
popfw
popa
and
pop
mov
pushf
daa
adc
std
data16
test
sbb
fldt
dec
xchg
pop
mov
rcll
iret
mov
mov
jmp
adc
sbb
movsb
leave
pushf
mov
sbb
jmp
out
and
jbe
mov
sbbl
push
pop
push
cld
arpl
or
xchg
gs
movsl
inc
fisubrl
movsb
pusha
sbb
adcb
mov
int
sub
imul
shll
mov
mov
fmuls
jl
push
cmpsb
adc
mov
mov
sub
movsl
and
sahf
in
lret
test
sub
je
cmpl
sbb
fs
outsl
push
mov
ret
jle
jge
sub
and
lds
push
sbb
outsb
mov
mov
es
pop
cmc
out
and
mov
cmp
fs
sbb
jecxz
mov
cmp
xor
mov
pop
inc
je
add
mov
rcr
jmp
ret
test
and
mov
add
xchg
mov
repz
cwtl
mov
cmp
push
xchg
sbb
xchg
mov
test
jge
leave
mov
dec
cmp
pop
fcomi
pop
jmp
cvtps2pi
cmp
movsl
fwait
js
outsl
push
inc
pushf
lahf
mov
pop
sbb
inc
mov
sbb
xchg
cmpsl
dec
mov
dec
sbb
dec
addb
cmpsl
inc
dec
dec
mov
jns
push
inc
xor
xchg
and
js
pop
xchg
lret
mov
pushf
movsl
push
subl
xor
jb
mov
pop
mov
inc
inc
ljmp
outsl
push
mov
cmpsb
dec
and
repz
test
push
stos
js
rcr
pop
jle
inc
xchg
mov
xchg
sbb
enter
xlat
ja
cmp
mov
fisubrl
int
cmp
gs
lds
xchg
adc
bswap
dec
add
cmpsl
fcoms
xor
int
imul
and
lock
mov
push
xchg
mov
jbe
rorl
jmp
shrd
or
outsl
mov
inc
repnz
jl
jno
lret
subb
mov
fmull
out
imul
add
dec
jbe
fidivrs
pop
repz
cli
ljmp
fidivrl
ds
out
jl
jp
sbb
adc
pop
sub
idivl
pop
fisttps
adc
sbbb
adc
xchg
test
jmp
lret
sbb
and
jno
add
push
sbb
outsb
sub
imul
and
or
sub
pop
out
adc
cltd
int
or
lcall
or
clc
lret
test
in
fidivl
sub
ljmp
lea
dec
xor
push
cmp
and
adc
in
in
aam
sbb
popf
and
movsb
outsl
pop
in
push
inc
lock
lahf
inc
pop
pushf
cmpb
fcompl
out
sbbl
ret
push
xlat
out
outsb
es
les
or
jecxz
ss
sahf
sub
mov
push
popf
scas
roll
cmp
outsb
lods
inc
aam
addr16
xchg
add
je
outsl
int
cmp
jecxz
int3
or
mov
lea
fbld
add
jle
dec
pushw
sbb
jge
ja
shll
loope
dec
cmpsl
mov
lock
in
mov
cs
mov
iret
mov
dec
xchg
lret
jle
rcr
daa
inc
cli
pop
faddl
fildll
mov
cs
or
shrb
xchg
jbe
sbb
sbb
jno
cmp
push
inc
clc
adc
mov
add
aam
sub
dec
xchg
mov
push
lahf
in
inc
xor
inc
rcll
mov
cmpsb
mov
sbb
loope
ljmp
arpl
pop
out
lods
mov
ret
dec
push
mov
out
pop
xchg
add
xchg
mov
loope
mov
out
jbe
adc
fsubrl
mov
ja
es
test
jns
jg
ds
xchg
pop
sbb
rcl
jae
jo
cmp
stc
stc
pop
jmp
dec
in
cli
mov
ss
fcmovbe
fisubs
fwait
lret
or
test
insb
int
outsl
cmp
jl
in
mov
or
fnstsw
fisttpl
in
orb
adc
lahf
or
mov
inc
scas
inc
sbb
movsl
pop
sub
call
cmp
cmp
sbb
std
pop
in
daa
pushf
inc
loope
cmc
idivl
iret
imul
lret
jp
adc
pop
shl
scas
cli
jb
sbb
inc
push
int
ret
adc
cmp
mov
shlb
xchg
fiadds
and
sub
jge
jmp
jg
nop
or
xchg
or
push
incb
subb
mov
cmp
ret
aas
jbe
dec
cmp
int
dec
xlat
jbe
dec
cmp
mov
notl
push
sar
push
outsl
push
loope
xor
sub
pusha
dec
iret
movsb
adc
xor
div
adc
mov
jb
jl
dec
or
rolb
and
push
inc
cmp
lea
push
xor
adc
dec
adcb
adc
aas
data16
push
dec
mov
ljmp
sbb
fstps
cmp
mov
or
cmpsl
imul
stos
dec
push
sar
inc
mov
and
add
pop
lock
xor
imul
cmp
loopne
xor
jg
ss
in
test
mov
mov
push
cmp
sub
cmp
or
or
insb
call
lcall
lea
lock
mov
lds
xlat
out
icebp
fs
stc
lea
fisttpll
arpl
mov
sbb
and
aam
dec
cmpl
push
jbe
xlat
roll
add
sti
out
cmc
dec
mov
lcall
ret
fcmovnbe
mov
clc
jge
rol
aad
xor
fisubl
lds
xchg
les
dec
push
mov
pop
out
pop
sub
sub
icebp
dec
add
jb
inc
push
pop
inc
xlat
and
jb
mov
mov
or
xchg
dec
movsl
clc
jp
cli
inc
stc
xorb
iret
jle
mov
mov
in
xchg
rorl
jns
mov
cmp
cmp
daa
loopew
add
roll
fisttpl
testb
frstor
repz
div
lock
mov
mov
loop
jg
push
dec
shr
jl
inc
fcmovnu
and
gs
mov
iret
negb
sbb
pusha
outsl
leave
int3
ret
pop
imul
push
cmp
lods
add
sbb
jns
outsl
sub
mov
into
push
aad
push
jb
sub
cmp
fs
clc
lods
imul
fwait
mulb
pusha
lcall
iret
test
adc
hlt
repz
loop
xchg
mov
stos
sub
xor
popf
sub
mov
pop
mov
adc
lcall
insb
jno
dec
sbb
rcr
xor
sub
in
dec
test
mov
sarl
pop
inc
or
lret
push
mov
inc
pop
loop
mov
jae
mov
adc
call
dec
and
pop
cwtl
push
jb
cmp
push
jnp
jbe
leave
jl
xchg
or
push
or
inc
xor
xchg
out
xchg
test
add
dec
test
aas
cmp
pop
dec
inc
addr16
jbe
dec
scas
lods
in
mov
call
call
or
and
lods
sbb
lret
xchg
lds
dec
sbb
push
mov
leave
shlb
mov
testl
jb
into
pushf
popw
or
adc
pop
mov
mov
lock
cmpsb
loopne
popa
jbe
or
stc
into
xchg
daa
into
das
xchg
sbb
aas
clc
imul
and
enter
arpl
lock
icebp
rorb
shll
add
cmp
cmc
xchg
mov
cli
imul
sbb
loopne
outsl
rorb
and
rdmsr
add
je
jnp
test
sub
xchg
dec
cwtl
mov
xchg
pop
inc
lcall
mov
nop
or
jne
les
jp
in
ret
fidivl
lret
test
rol
es
cmpsb
cmpb
jge
loope
and
sbb
cld
imul
fildl
push
mov
and
dec
mov
mov
push
ss
xchg
shll
push
mov
and
jno
add
mov
and
xchg
fsubl
es
repz
inc
lods
add
adc
aaa
jae
jmp
mov
imulb
les
inc
sbb
les
sub
mov
dec
push
mov
andl
leave
sar
mov
push
jno
mov
mov
popf
inc
int
inc
jg
inc
push
jb
aas
dec
hlt
xor
cmpsb
cli
bt
scas
pop
js
xchg
das
dec
out
lods
xchg
mov
xlat
in
cli
mov
sub
mov
mov
or
mov
fcompl
xor
adc
mov
xchg
arpl
into
insb
mov
mov
mov
lcall
ror
dec
push
into
aad
or
inc
mov
imul
rcrb
add
fisubrs
ret
es
and
mov
jb
cmpsb
or
dec
lods
in
addr16
push
nop
dec
repz
add
jnp
cltd
and
ljmp
cmpsb
sbb
loopne
in
mov
out
mov
movb
xor
pop
pop
insb
jo
add
mov
sahf
sub
cmp
sbb
push
push
pushf
arpl
pop
cmc
pop
testb
mov
push
insl
enter
and
test
lret
and
dec
cmp
sub
sbb
sub
push
scas
sub
mov
enter
enter
jno
nop
mov
lock
cmpsl
mov
cmp
cmpb
faddl
pop
nop
aas
mov
dec
stos
push
sbb
icebp
mov
popf
jno
loope
cmc
pop
push
daa
cwtl
push
sub
push
mov
lock
mov
out
jp
push
sub
sti
and
repz
cli
mov
icebp
dec
xchg
sub
sahf
pop
repnz
aad
mov
rcl
aam
nop
mov
mov
adc
cmp
pop
sub
mov
pop
sub
aam
adc
dec
rol
test
fstpt
test
int3
and
push
addb
shrl
loope
sbb
or
lret
in
imul
mov
ljmp
xchg
mov
imul
repz
jns
faddp
mov
ds
mov
xchg
iret
pushf
jae
pop
cmpsw
inc
ss
bound
mov
int
mov
js
sbb
push
lcall
pop
js
test
fs
mov
push
arpl
pop
lret
pop
iret
or
mov
push
adc
fwait
xchg
dec
sbb
mov
sbb
test
sub
pop
ljmp
fimuls
jns
fs
pop
rorl
jp
and
insl
lret
and
pop
dec
jge
sbb
cmp
inc
dec
push
mov
sbb
xchg
push
pop
outsb
and
lds
sbb
fidivrs
sbb
out
outsb
jmp
sbb
sbb
or
cmpb
mov
xor
dec
das
cmpsl
sbb
data16
lods
mov
xchg
mov
stos
xchg
inc
push
js
divl
pop
repz
loope
shrb
test
scas
es
in
ljmp
out
out
inc
out
dec
andl
pop
lahf
rcll
xorl
sbb
jno
sar
sub
and
movsl
jecxz
rcrl
and
jp
inc
pusha
sbb
xor
in
sahf
out
shll
jmp
mov
add
and
mov
scas
popf
lcall
cmp
inc
shlb
pop
fsubl
outsb
jmp
xchg
push
mov
or
dec
xchg
and
popf
or
sahf
or
call
pop
test
sbb
aas
bound
fistl
repnz
cmpsb
js
mov
repz
dec
and
push
pop
xor
mov
pop
cmc
and
adc
mov
xor
cli
mov
xchg
mov
cmp
mov
jmp
cli
lahf
push
in
imull
xchg
imul
pop
aam
inc
mov
fcmovnu
in
mov
dec
push
jmp
pop
dec
xor
ljmp
or
fcoms
addl
or
out
testb
mov
pop
mov
in
push
inc
popa
ds
jle
loopne
fildl
inc
or
xor
cs
leave
cld
jbe
sahf
aas
mov
aaa
mov
xchg
hlt
and
jmp
sbbl
mov
mov
mov
ds
xchg
stos
pop
cld
aam
sbb
fnstsw
xor
sbb
lock
idivl
fsubs
mov
aas
fwait
jmp
add
test
cmp
stos
push
add
cmp
jl
ja
and
fdivrl
adc
lock
mov
push
insb
jnp
jbe
xchg
outsl
adc
adc
sarb
push
cmp
dec
lods
or
iret
inc
and
testl
adc
test
mov
sub
mov
pop
shl
popa
push
dec
insl
mov
jle
das
lahf
add
or
ljmp
or
loopne
xchg
mov
inc
jmp
insl
decl
cli
or
es
mov
cmpsb
fmuls
dec
and
mov
js
and
push
stos
pop
push
ffreep
xor
ret
lea
pop
xchg
or
icebp
sahf
xor
leave
pop
in
in
or
jb
enter
jne
std
adc
pop
jp
xor
inc
int
aam
fnstcw
mov
scas
mov
fwait
movsl
fistpll
cli
mov
xchg
sbb
jle
xchg
outsb
cmp
or
push
xor
xchg
xchg
les
test
pop
ret
cmp
lret
add
jmp
lea
sbb
add
sbb
xchg
test
nop
aaa
in
pop
fsubrl
pop
js
jae
sbb
add
cmpsb
mov
leave
xchg
xchg
into
andl
jp
sub
jp
arpl
fadd
repz
xor
xor
jmp
test
aaa
cmp
test
cld
cmpsl
cwtl
movsl
jno
mov
scas
xchg
daa
arpl
pushf
push
lea
movsb
stos
shrb
xchg
nop
insl
push
addl
xchg
jo
ss
repnz
fistpl
xchg
mov
inc
jbe
xor
sahf
repnz
jns
push
imul
or
jne
shl
inc
pop
cs
adc
add
sub
imul
lds
adc
sbb
mov
pop
jle
jecxz
and
sub
repz
fnstcw
push
vcmppd
loop
call
insb
rcrl
sub
mov
je
pusha
stos
and
push
ss
xchg
addr16
mov
mov
sarb
ljmp
cs
xor
jns
sbbb
rclb
repnz
push
mov
movsl
mov
xchg
xchg
leave
ja
push
add
in
int3
jg
dec
lea
jle
cmpl
push
icebp
repnz
xchg
adc
mov
pop
out
movsb
rcll
sbb
incb
mov
mov
scas
stc
fidivs
mov
dec
cli
fcoms
das
movsl
les
cmp
sbb
jl
dec
dec
scas
sbb
and
stc
iret
in
jo
pop
pushf
les
aad
imul
sub
dec
xchg
mov
ret
pop
sarb
adc
sub
jo
mov
imul
xor
mov
cmp
mov
adc
pop
mov
sarl
imul
fnstsw
jno
dec
in
sbb
imul
and
push
lods
jge
xor
adc
sub
pop
inc
enter
and
push
adc
xchg
or
sub
add
hlt
and
mov
jle
mov
push
fisubs
adc
lahf
push
leave
or
jnp
in
loope
xlat
aad
and
inc
or
data16
cmpsl
lcall
or
mov
mov
jbe
jle
and
ds
or
and
out
add
lret
cli
jle
in
aas
mov
pop
dec
dec
push
xchg
lds
xorb
aas
loopne
adc
dec
and
xor
fbld
mov
inc
in
dec
pop
int
cli
xor
sub
iret
sbb
fnstcw
fildll
test
sbb
pop
fcompl
mov
or
fmull
mov
outsl
and
cmp
fcos
mov
loopne
fnsave
roll
lods
push
push
jge
xchg
movsb
rorb
and
xorl
mov
and
sbb
add
mov
push
pusha
or
add
pop
aam
push
and
mov
mov
mov
mov
pop
inc
jge
pop
jge
pop
fisubrs
negb
jae
pop
out
xchg
mov
int3
add
pop
xor
add
push
bound
jo
cmc
and
mov
out
addr16
inc
enter
imul
lds
push
push
mov
cltd
cli
and
movsl
sti
cmp
ja
fwait
mov
dec
add
jae
popf
inc
out
jp
or
mov
and
cmp
inc
nop
mov
hlt
dec
add
mov
aad
or
adc
sahf
jecxz
hlt
sti
lcall
cmp
aam
mov
inc
jg
mov
sbb
in
sub
fistpll
add
sti
push
cs
int3
mov
mov
inc
or
and
rcrl
jns
mov
jp
sti
bound
int
les
ret
movsl
js
add
mov
jbe
imul
fsubl
add
pop
sub
test
xchg
mov
faddl
imul
movsb
add
stos
sbb
push
sub
jmp
gs
test
mov
rcll
sbb
cmp
and
shll
push
cmp
stos
sbb
mov
mov
mov
adc
lods
push
sbb
push
or
jno
xor
cmpl
mov
inc
push
imul
push
call
out
push
sbb
or
movsl
inc
dec
pop
mov
push
mov
and
sub
fstpl
cmp
call
xor
dec
pop
cmp
sbb
sbb
cmp
and
cmc
ret
pop
shlb
pop
imul
pop
in
sbb
mov
sarb
mov
push
or
aas
xchg
pop
mov
sbb
push
dec
lcall
sub
pop
data16
jle
movsb
adc
xchg
rcl
xor
xor
outsb
bound
xor
das
cmc
cwtl
lock
cmp
outsb
cli
mov
fisttps
inc
inc
fmulp
incb
sub
test
jmp
loope
mov
pop
pusha
and
mov
xchg
mov
cmpsl
dec
scas
and
rol
lahf
lret
divl
and
inc
mov
push
xchg
mov
out
bnd
xchg
xlat
jg
ret
fnstenv
mov
mov
and
inc
aam
pusha
fwait
xor
xchg
insl
dec
mov
out
xchg
inc
push
data16
test
scas
shlb
sub
lret
pop
mov
shrb
jg
mov
sbb
or
sbbb
int3
xor
push
cld
mov
stos
pop
mov
scas
inc
out
fdivrl
xor
mov
sub
xor
repz
into
hlt
test
je,pn
in
add
adc
push
push
jo
adc
jg
ja
sbb
mov
insl
jnp
xor
or
mov
mov
push
lcall
cmpsb
cs
pop
sbb
sub
push
loop
add
lahf
xor
sub
pop
jle
pop
rolb
loopne
pusha
testl
gs
dec
test
add
sub
dec
inc
stos
int3
insb
mov
mov
xchg
aad
data16
mov
das
test
xchg
pop
sbb
jne
and
mov
push
adc
add
adc
out
add
mov
push
or
adc
mov
xchg
incb
add
in
pop
dec
xchg
xorb
fbstp
lret
lds
push
cwtl
arpl
mov
repz
mov
or
cltd
icebp
pop
fistpll
xchg
jge
arpl
or
int3
std
test
stc
adc
mov
scas
cmp
mov
out
mov
cmp
fists
ljmp
push
inc
push
fwait
aaa
add
iret
xor
iret
clc
repz
repnz
inc
or
sbb
push
mov
inc
aam
cwtl
int
push
and
loope
in
test
icebp
in
and
into
popa
hlt
xchg
inc
mov
xchg
sub
js
fwait
lods
fcoml
mov
test
push
mov
dec
xchg
xor
aaa
pop
sarl
cmp
sub
cmp
push
pop
fcompl
and
popa
adc
fbld
loop
fldenv
push
cmc
hlt
insl
lods
dec
inc
repnz
inc
das
lret
nop
int3
inc
push
je
push
leave
sub
xchg
test
insl
xchg
and
add
pop
push
jg
test
repz
lret
inc
sub
testb
inc
add
add
das
jo
sbb
mov
and
or
outsb
jmp
stos
or
dec
mov
cli
loop
mov
movsl
mov
or
and
xchg
es
push
xor
lods
rorb
xor
xchg
mov
jnp
out
enter
rolb
aas
mov
mov
or
adc
mov
mov
jl
es
pusha
iret
mov
popf
shrb
out
or
mov
inc
sbb
ja
sub
mov
ret
mov
fidivs
into
mov
sub
jo
sahf
adc
dec
jne
insl
or
jmp
call
loopne
lods
lods
divb
in
or
cli
dec
cmp
cmp
push
sbb
cmc
arpl
dec
pushf
cltd
jae
mov
outsb
loop
add
loop
adc
jg
imul
stc
mov
sub
popa
movsl
adc
add
fs
pop
lret
daa
inc
lahf
fdivs
leave
mov
dec
push
fsubrl
rdtsc
jle
dec
cmpsl
sbb
cmp
scas
pop
xor
iret
bound
pop
sub
jnp
das
and
sub
mov
or
mov
test
sub
fisubs
or
ret
loope
cmp
mov
adc
out
xchg
cmc
push
hlt
jmp
mov
stc
pop
ss
sahf
into
pop
pop
jecxz
adc
ret
inc
outsl
mov
mov
inc
loope
insl
test
pop
or
imul
aaa
add
movsl
push
sub
jno
int
or
mov
xchg
pop
mov
das
sti
adc
mov
call
dec
jns
leave
fisttps
arpl
jbe
ljmp
jae
or
push
clc
loope
loope
push
mov
add
ret
jbe
loop
sbb
push
inc
push
and
jno
and
inc
xor
sbb
pop
jb
ret
cmp
and
push
push
jbe
ljmp
mov
stos
ds
in
mov
shll
push
dec
shll
pop
iret
not
xchg
mov
mov
subb
fsub
inc
aaa
xchg
mov
in
jb
mov
mulb
or
test
pop
xor
aad
es
jp
push
pop
pop
cmp
loopne
mov
movsl
sub
sbb
dec
sbb
sahf
mov
sub
cwtl
xor
mov
ss
xor
xor
cmp
xchg
jnp
scas
or
sbb
nop
enter
xor
aad
jp
push
pop
stos
inc
movsb
or
lock
adc
and
fstps
shll
out
fbstp
mov
add
mov
sub
fildl
sub
out
push
adc
sbb
roll
sbb
jmp
or
inc
mov
aam
jmp
js
jae
incl
mov
jno
mov
std
sbb
ret
dec
cmp
fiaddl
push
outsl
mov
lds
push
lret
test
aas
lods
jb
fldln2
loope
aad
add
xor
xor
jo
sbb
push
inc
out
fisubrl
xchg
and
pusha
movsb
aaa
push
or
pop
dec
out
mov
add
pop
lods
incb
bound
jns
mov
rol
push
enter
bound
mov
call
shl
das
shlb
or
pop
pop
mov
leave
test
jne
xchg
sub
aad
mov
sti
or
test
movsl
inc
mov
jbe
inc
cmp
mov
aaa
nop
out
pusha
inc
mov
insl
cmp
cmp
stos
push
insb
jo
sahf
cld
fucom
push
data16
ds
mov
gs
enter
adc
xchg
jle
je
cmp
paddsb
out
dec
arpl
mov
fs
mov
movsb
jns
pop
sub
mov
iret
xor
xor
xlat
sub
cld
dec
cmp
adc
in
add
xor
mov
pop
sbb
imul
sub
xor
ficompl
orb
call
jne
jae
in
fdivl
xor
ja
cmpsl
insl
inc
fiaddl
push
shlb
jbe
imul
pop
test
in
orl
leave
addr16
xorl
and
loop
imul
pop
or
xor
cmp
sub
push
lcall
inc
mov
dec
in
fwait
addr16
fcomip
pop
std
pop
in
mov
fistps
push
lcall
pop
add
or
push
xchg
imul
aas
sarl
mov
push
lret
dec
cmp
jl
sub
push
ljmp
jns
fisubrs
jb
hlt
push
pushf
divl
sti
or
pop
pop
mov
in
test
add
push
in
daa
enter
xor
inc
xlat
lea
flds
aam
test
and
xor
outsl
mov
jnp
dec
outsb
push
xchg
aaa
gs
and
test
lods
xchg
addr16
cltd
idiv
and
add
pop
xchg
pop
add
inc
stos
mov
mov
in
fdivs
jne
jno
add
pop
xchg
xor
jnp
mov
insl
sub
rcrl
mov
cmpsb
sub
jl
jp
int
xchg
pop
or
pop
andl
xchg
lods
xchg
jnp
cmpsb
adc
cmp
inc
std
shl
gs
push
jb
loop
cmp
xchg
pop
or
and
push
inc
xchg
jb
in
and
jl
lds
shlb
jno
fs
das
or
push
stc
test
rcr
sbb
xchg
jecxz
out
sar
je
jbe
jl
imul
cmpsl
mov
sub
and
add
insl
jae
pop
sub
adc
pop
out
jp
fiadds
ret
ret
lret
mov
xchg
jmp
roll
fwait
pop
jae
mov
push
sub
sbb
in
out
jbe
or
push
and
jp
mov
push
mov
gs
sahf
cmp
or
pop
loopne
leave
insb
fsubp
sub
jmp
or
adc
fnop
sbb
xlat
dec
jge
push
jg
je
dec
xchg
outsl
jb
scas
movsb
repnz
dec
dec
or
cmp
pop
sub
fildll
jns
aas
mov
lahf
jb
jae
or
push
cmp
sbb
xchg
into
dec
shll
movsb
sbb
pop
inc
mov
psllq
inc
push
cmpsl
iret
ljmp
cs
dec
js
mov
jge
aaa
jno
popa
mov
lahf
insl
sub
push
adc
push
mov
gs
dec
fbstp
in
sahf
sti
cmp
fisubrs
nop
xchg
jmp
out
inc
xchg
and
jne
fiaddl
nop
insl
loop
sbb
mov
scas
enter
ss
call
xor
pop
xchg
sbb
inc
enter
cmp
clc
xchg
into
enter
mov
lcall
xlat
push
add
or
dec
andb
rcr
xchg
cmpsl
mov
pusha
push
jle
jl
jle
inc
outsb
jbe
movsb
in
mov
push
sub
adc
inc
xchg
test
fldpi
push
ljmp
push
nop
fldl
xchg
mov
mov
ljmp
mov
scas
push
mov
xor
int
adc
aaa
fsubl
cltd
xor
cli
pop
jp
shll
add
das
sbbl
xchg
push
mov
fs
imul
dec
jns
cmc
mull
rcrl
lcall
lods
xchg
pop
mov
test
and
sub
add
leave
in
or
enter
imul
out
aam
into
sbb
inc
inc
loop
int3
pushf
inc
sub
adc
je
xchg
and
pop
insb
scas
add
xchg
xorl
push
mov
fs
mov
test
add
xlat
mov
mov
and
mov
imul
enter
pop
addr16
sti
in
inc
mov
push
push
inc
mov
add
ret
mov
xchg
aam
insb
dec
aam
push
mov
repnz
add
fadd
pushf
call
mov
es
fistl
cmp
xchg
xchg
insb
insb
inc
dec
std
jp
inc
push
dec
fisubrs
movsb
test
leave
jae
bound
xchg
insb
rcr
cmp
push
rorb
enter
cmp
ret
dec
add
xor
test
outsb
mov
jne
pusha
xor
adc
sbb
loope
insl
xor
gs
repnz
faddl
mov
stc
cmpb
ja
jl
int3
xor
stc
in
sbb
out
add
or
cltd
mov
adc
cs
ja
jae
pop
pop
adc
ficoms
xor
jl
jl
or
dec
mov
or
jl
sbb
fiaddl
mov
sub
jmp
dec
push
cmp
negl
lret
inc
in
push
hlt
out
add
push
addr16
cmc
dec
pushf
fildll
mov
popa
and
and
test
sbb
jl
mov
cmp
cs
mov
fdivs
mov
jp
popa
jns
jle
cmpsb
daa
and
scas
ljmp
push
dec
fsubp
movsb
add
mov
rol
jmp
addr16
mov
mov
aaa
std
mov
stos
shrl
pop
jmp
pop
pop
mov
xchg
jns
xchg
test
fwait
in
and
sub
into
mov
aas
cmpsl
mov
rorb
js
pop
adc
or
adc
and
into
adc
pop
sub
add
shrl
mov
add
mul
aad
and
or
add
imul
mov
stos
scas
inc
insl
cmp
xchg
out
popf
jb
sbb
call
pop
push
mov
rcrl
loopne
jl
repz
out
shrl
out
push
clc
out
xchg
jge
lcall
push
push
mov
mov
mov
hlt
push
xchg
inc
push
adc
or
xchg
lods
push
sbb
fstpt
outsl
cld
pop
or
imul
pop
sarl
test
lret
pop
aam
mov
bound
or
and
xor
mov
nop
mov
stos
lahf
and
idivl
clc
dec
out
std
adc
mov
mov
sbb
xchg
dec
sti
addr16
xchg
add
out
mov
cltd
rclb
pop
arpl
loope
sbbl
cwtl
das
rcrb
inc
inc
psrad
pop
add
mov
cmpsl
pop
jg
out
add
mov
inc
ret
jg
iret
call
xchg
sahf
push
jecxz
je
adc
jo
mov
imul
test
jbe
mov
and
sbb
iret
mov
int3
or
jnp
jns
lock
xchg
dec
push
sub
nop
ja
mov
es
jmp
inc
pop
mov
fwait
rcrl
xchg
mov
inc
adc
insl
enter
cmp
hlt
repnz
jns
ds
dec
lcall
mov
mov
fisttpll
fidivrl
xchg
xchg
xchg
mov
sbb
adc
cmp
arpl
dec
subl
adc
dec
dec
push
push
cwtl
jb
sub
mov
mov
jnp
push
inc
mov
push
fimull
push
rcrb
mov
popa
jmp
mov
mov
icebp
or
insl
push
pop
lds
test
stos
pusha
mov
ss
sbb
enter
shr
fs
aas
ss
adc
jns
fwait
xchg
iret
pop
jmp
mov
pop
xorb
cld
lods
add
pop
xor
pop
push
pop
pop
in
jns
scas
test
adc
xchg
push
out
pop
pop
xor
mov
cld
clc
mov
push
roll
pushf
in
mov
ljmp
clc
filds
sub
pop
loop
add
in
icebp
add
lock
addr16
adc
cmp
movsb
test
mov
out
xchg
pop
cmpl
lret
repnz
push
inc
sub
mov
cmp
and
jg
sbb
xchg
and
inc
jae
repz
cltd
pusha
jle
aaa
pop
cmp
rcrl
and
push
add
rorl
lods
out
fmull
aam
pop
sbb
lcall
cmp
ja
out
leave
test
xchg
pop
push
out
push
pop
test
dec
fwait
xor
dec
pushf
stos
pushw
jb
mov
adc
push
xchg
data16
cmp
nop
push
inc
aaa
fwait
and
mov
mov
cmpsb
shr
add
movb
fs
jge
inc
mov
inc
int
add
pop
mov
jle
xor
pop
mov
sbb
mov
sbb
inc
fldt
into
mov
mov
push
mov
jbe
add
jns
jle
iret
adc
pop
icebp
inc
and
cld
mov
fs
push
sub
push
mov
out
cmp
jnp
movsl
xchg
jb
es
xchg
ret
or
mov
scas
cs
movsl
js
and
imul
cmpsl
dec
or
jnp
adc
mov
loop
js
in
roll
mov
insb
dec
mov
cmp
outsb
mov
fistl
mov
ja
shll
push
jge
or
mov
mov
fidivrl
mov
mov
test
push
imul
cmp
inc
sub
cwtl
into
sbb
mov
cmc
std
adc
xchg
mov
orl
push
data16
in
out
push
xor
sbb
pushf
rcll
jno
lods
mov
ror
arpl
les
jecxz
out
xchg
jge
add
adc
repz
shll
push
aam
sub
inc
xchg
mov
rolb
cmpsb
jo
add
push
sbb
fildl
fwait
negb
add
mov
jnp
int3
enter
and
sub
jge
lods
cmp
pop
xchg
mov
sahf
mov
cld
call
push
test
test
nop
ljmp
xor
push
mov
mov
sub
push
imul
pop
xor
inc
xor
jo
jns
bound
jo
leave
inc
stos
imul
adc
adc
xchg
int
xor
shll
inc
and
inc
lds
xchg
inc
mov
popa
sbb
dec
cmpsb
imul
iret
inc
loop
mov
lods
aam
pop
rorl
inc
and
push
push
xchg
lret
push
jmp
xor
fwait
loop
scas
lret
add
mov
fdivrs
aam
cmp
sub
test
pop
popf
lret
push
in
pop
and
repz
mov
cmp
addl
aam
push
into
push
sub
scas
icebp
xchg
cmp
cld
push
xor
out
xor
daa
fimull
pushf
hlt
jp
mov
lahf
adc
jmp
int
jmp
jmp
lea
mov
ja
xchg
loope
cmpsl
lds
pop
shlb
xchg
sbb
xchg
test
add
das
popf
mov
test
adc
adc
loop
fsub
loop
mov
sbb
fiadds
inc
popf
pop
jnp
fisttpll
xchg
sbb
cmpsl
pushf
stos
mov
aaa
das
adc
leave
lods
push
dec
in
ds
push
cs
xor
in
mov
xchg
jmp
mov
add
or
lret
pop
es
lods
mov
cmp
xor
das
mov
dec
mov
and
pop
jne
stc
adc
jno
pop
jo
jnp
xchg
adc
inc
clc
adc
or
adc
into
cmp
pop
push
mov
iret
sub
jns
dec
mov
add
nop
fcoms
inc
test
xor
add
rolb
jp
sti
in
adc
frstor
push
clc
mov
jmp
fld
aas
sbb
xchg
das
iret
pcmpeqb
mov
lds
jp
mov
mov
imul
cli
sub
mov
and
or
insl
xlat
sub
test
jo
sub
jae
push
dec
push
push
lea
jl
fsts
jl
add
shll
int3
pop
aas
sbb
mov
adc
adc
movsl
adc
daa
inc
jl
cmp
pop
dec
mov
pop
scas
or
cmc
xchg
and
in
out
iret
sahf
pop
adc
or
inc
in
jecxz
int
mov
loope,pn
pop
ja
inc
mov
cltd
lock
lock
in
mov
jae
jl
mov
loopne
pop
pop
daa
flds
mov
adc
jg
adc
or
sbb
jns
es
aam
fs
or
repz
jge
ds
es
sbb
insb
pop
or
jno
test
or
divb
je
fistps
cld
dec
loope
shlb
nop
or
mov
and
jb
cmpsb
test
fistps
pop
cmpsl
mov
jae,pt
mov
das
aas
scas
mov
push
dec
ss
pop
test
movsl
test
popa
ficoml
ret
in
add
popa
add
cli
fst
and
div
cmpsl
mov
fstpt
insl
pop
mov
cld
adc
mov
xchg
mov
jecxz
mov
mov
jle
cmp
mov
mov
mov
loopne
ds
imul
notl
pop
jnp
cmpsl
enter
sarb
jbe
sub
outsl
out
push
addr16
or
push
bound
pop
or
sub
push
pop
mov
in
push
add
sbb
jp
mov
adc
enter
inc
arpl
std
je
mov
dec
enter
imul
nop
xchg
in
les
or
inc
jp
popa
roll
mov
rcrb
cltd
add
push
bound
lods
das
fildll
popf
jne
add
cmpsl
push
jnp
inc
cmc
jbe
add
popa
out
xorb
movsb
repz
test
shrb
fnstcw
xchg
les
stc
pop
aas
adc
inc
xor
out
dec
pop
pop
mov
push
faddl
inc
sub
sarb
or
int
cli
arpl
mov
std
aas
fldcw
lahf
out
cmp
jmp
jnp
adc
fistl
iret
out
mov
jne
das
insb
jge
adc
jb
dec
pusha
mov
add
push
es
rorb
pop
cmpl
jmp
sbb
adc
dec
inc
bnd
xor
dec
push
outsl
lock
sahf
fwait
push
pop
test
pop
hlt
mov
jo
dec
in
pop
dec
and
jmp
imul
jg
clc
fisubrl
or
sub
sbb
add
mov
aam
and
mov
pop
sub
sbb
jnp
push
cltd
in
xor
test
mov
cmp
ljmp
std
xor
or
mov
mov
pop
mov
mov
scas
or
xchg
and
dec
adc
nop
ss
imul
stc
xor
adc
xor
outsl
into
dec
dec
ja
test
lods
out
les
dec
sub
xchg
bound
dec
xchg
mov
inc
xor
xchg
dec
mov
pop
lret
aam
jp
dec
sub
out
push
insb
xor
push
pushl
and
cmp
clc
icebp
mov
aad
mov
pop
pop
sti
adcb
mov
scas
and
mov
xchg
cmp
mov
add
jge
push
scas
femms
mov
cmp
dec
imul
xor
xchg
ret
push
lahf
pusha
lods
scas
imul
fidivs
mov
cmp
ret
loope
aas
adc
mov
or
fidivrs
or
enter
out
andl
aad
imul
orl
pop
xchg
sti
mov
xchg
adc
fistl
mov
out
inc
cs
mov
xor
paddsw
mov
xor
data16
stos
sbb
fists
jnp
cmpsb
mov
bound
sbb
movsl
cmp
push
repz
inc
cmp
dec
loope
jle
pop
dec
cli
loope
shlb
test
push
cli
hlt
fbld
test
repnz
inc
xchg
and
cwtl
jmp
bound
or
pop
mov
lret
sbb
xchg
aad
and
pop
lcall
sbb
inc
and
jl
jbe
adc
jne
pop
adc
mov
mov
out
dec
je
and
dec
pop
and
sub
jns
jbe
jns
dec
hlt
pop
pop
aaa
je
enter
xchg
xchg
leave
lahf
pop
lock
ss
loope
pop
fsts
aad
lea
ret
jb
das
int3
call
jg
dec
mov
fisttpl
cmpsl
and
cmp
insb
inc
inc
inc
push
adcl
sub
les
fimuls
push
outsl
fsts
pop
pop
cwtl
in
pop
pop
or
movsl
pop
repnz
mov
ficompl
jcxz
in
add
repz
int3
xchg
je
in
sub
faddl
aaa
leave
ljmp
cmc
loop
and
adc
sub
aam
fdiv
out
leave
dec
fcomps
shll
mov
mov
jl
in
xchg
mov
icebp
fmull
jo
add
sbb
mov
or
call
mov
nop
push
and
inc
mov
pop
xor
adc
test
mov
stos
jmp
push
inc
push
loope
icebp
test
sub
div
loopne
lea
fsubl
jb
push
fwait
testb
cwtl
pextrw
cmp
xchg
fcomip
cmpsl
testl
push
sub
sub
movsb
xor
push
test
xchg
out
in
push
pop
mov
xchg
in
dec
push
mov
mov
or
ds
xchg
in
mov
sbb
call
cwtl
inc
les
push
fstpt
lods
cmp
stos
lret
mov
add
add
cmc
pop
out
sub
out
cmpsb
pop
fsubl
mov
lods
jle
pop
push
pop
dec
jmp
pop
push
pop
ljmp
into
xchg
mov
and
jno
shl
mov
hlt
push
inc
dec
aaa
fs
push
bound
pop
incl
sbb
mov
rcr
push
or
pop
sbb
add
adc
xchg
inc
and
ljmp
pusha
xchg
jecxz
xor
movsl
push
fsubrs
cmpl
insl
neg
or
adc
add
jne
mov
mov
push
mov
nop
repz
jae
mov
jge
jl
les
dec
xchg
mov
cltd
pop
mov
jbe
mov
push
sub
stos
inc
vmovapd
dec
jl
pop
jge
test
xchg
les
adc
jge
rorl
or
push
jge
or
aaa
mov
es
xchg
push
jne
sbb
cmpsl
lret
fwait
scas
in
xor
dec
dec
push
jne
pop
pushl
adc
inc
mov
stos
push
loop
xchg
imul
xchg
cmp
cli
push
xchg
in
sub
fs
divb
jl
ret
insl
pop
jg
imul
insl
jno
out
and
test
scas
inc
and
roll
data16
xor
lea
icebp
push
ret
ss
push
enter
cltd
adc
aas
call
or
push
sbb
movsb
pop
pop
jo
rcrb
aam
or
fcmovnb
push
mov
pushf
xor
sub
call
jge
xchg
jbe
push
mov
call
repnz
jne
hlt
adc
cmpsl
xchg
xchg
mov
sbb
fidivrl
test
mov
sbb
adc
adc
mov
xchg
fstpt
pop
mov
repz
xchg
or
xchg
push
popf
lret
dec
xchg
mov
mov
jp
imul
sbb
iret
lods
outsb
sbb
call
in
mov
sub
xor
jp
cmp
hlt
repnz
xor
mov
mov
sbbl
adc
es
xchg
jl
sub
lds
icebp
arpl
enter
leave
jg
xchg
xchg
pop
push
jge
cld
sti
sbb
push
push
pop
lods
mov
stc
shl
mov
inc
scas
cs
mov
push
les
scas
jecxz
cmp
mov
cmp
cmp
lock
add
sub
jle
sbb
enter
outsb
ror
into
inc
mov
xchg
movsl
scas
add
or
jp
bound
cmp
add
sbb
inc
test
mov
sbb
push
cmpsb
mov
xor
idivb
int3
lds
jno
adc
xchg
fidivs
movl
pop
sti
aam
sbb
clc
in
sbb
fs
pop
lcall
cmp
mov
or
jge
sbb
adc
subb
cmp
xchg
addb
jb
and
xor
cmp
movsb
pop
add
rcl
nop
push
jb
adc
das
ret
or
pop
je
test
adc
mov
insl
inc
mov
test
pusha
cmp
cmpsb
shll
jb
imull
pop
pop
cs
dec
fnstcw
sbb
dec
add
pop
push
cld
xchg
cmp
in
pusha
or
les
pop
jmp
and
or
cld
mov
orl
ja
or
cld
js
inc
jmp
push
xorl
sub
in
and
stos
inc
fcompl
sti
daa
or
fistps
ljmp
push
add
pop
in
jb
mov
clc
pop
add
es
sarb
icebp
fbld
mov
pusha
jecxz
fbld
sub
or
push
enter
xor
dec
adc
sar
test
mov
mov
jae
jge
nop
push
inc
mov
lods
push
xor
mov
push
add
and
mov
jge
in
sub
push
mov
jne
rcl
cmpsb
jns
int3
fsubp
add
xor
sti
lds
cmp
in
mov
outsb
ret
sbb
dec
movsb
sbb
mov
dec
mov
sar
sub
sahf
fs
xor
inc
push
cmp
add
fsubp
es
or
test
std
out
clc
mov
loop
clc
or
and
and
mov
aam
imul
unpckhps
jnp
hlt
clc
or
addb
and
sub
sub
mov
cltd
dec
add
paddusw
sarl
out
arpl
sub
inc
mov
aaa
stos
push
xor
shrl
inc
and
jb
movsb
push
fnstenv
and
call
insl
rcrb
sub
xchg
push
popf
ss
in
xor
mov
push
clc
test
and
in
jno
mov
dec
int3
ds
notb
jb
mov
mov
popf
mov
mov
movsb
je
and
divl
lcall
mov
das
inc
js
dec
sub
push
push
in
mov
mov
in
sti
idivb
push
cmpsb
scas
add
mov
les
push
dec
test
sub
add
xchg
movsl
xor
leave
ret
jno
mov
or
pop
gs
dec
or
stc
popl
push
in
cltd
and
adcw
push
inc
xchg
ret
daa
xorl
mov
adc
add
aad
mov
in
jle
ret
dec
push
push
loope
push
mov
lcall
clc
sub
xor
daa
xlat
icebp
std
fbld
out
mov
push
outsb
add
pop
add
loop
and
outsb
mov
jo
jmp
or
mov
xor
dec
imul
xlat
jl
mov
add
fldl
and
ja,pn
ja
dec
or
int3
cld
dec
mov
pusha
pop
or
daa
leave
xchg
int3
mov
jbe
sub
add
and
jmp
imul
inc
cmpsl
push
mov
or
addr16
lock
mov
lods
xor
mov
sar
sbb
call
int
stos
sbb
cmp
dec
adc
je
push
roll
sti
mov
iret
pop
shlb
xlat
inc
jbe
dec
xchg
movsb
push
adc
icebp
lcall
sbb
jo
sub
hlt
cmpl
xor
mov
and
cmp
jg
int
aad
int
es
nop
sub
in
lcall
push
push
pop
mov
fs
push
decl
inc
repnz
dec
test
xchg
cmpl
pop
sahf
shll
aam
les
adc
xlat
sbb
xor
pop
add
mov
shl
cltd
mov
adc
push
lret
out
adc
mov
out
loope
jb
out
in
cmp
into
xor
lods
js
addb
in
or
xor
mov
incl
sbb
ljmp
clc
and
add
lret
loopne
mov
repz
dec
imul
insl
pop
jno
sahf
mov
aam
jne
mov
shlb
int
movsb
or
mov
aam
mov
mov
xor
jl
loop
hlt
test
pop
hlt
scas
mov
cld
xchg
pop
add
aas
jns
cltd
lods
jmp
pushf
push
xchg
outsl
push
and
ret
pushf
repnz
dec
imul
inc
test
jo
adc
inc
xor
nop
sbb
fbld
mov
cltd
clc
aas
stc
loop
ds
adc
adc
pusha
dec
and
in
insl
fstpt
insb
js
pop
fcmovb
dec
push
rolb
cmp
push
psubsb
negb
cmp
mov
mov
push
pop
aad
jmp
dec
jno
push
cli
jge
xchg
testb
xor
sahf
mov
fnstcw
xchg
xchg
out
ret
push
int3
stc
cwtl
test
and
mov
sahf
inc
inc
repz
js
aas
push
insb
xchg
mov
jne
sbbl
and
std
scas
lock
js
xchg
jecxz
pop
mov
and
sub
leave
sbb
push
mov
test
pop
sbb
adc
outsl
inc
stos
rcr
inc
mov
fidivrs
lret
dec
mov
and
adc
scas
cmp
test
dec
mov
sbb
sbb
inc
xor
mov
jge
inc
cmpb
insl
lahf
mov
mov
repz
mov
push
push
ret
pop
pop
inc
jg
mov
stos
xchg
sub
and
repnz
adc
cwtl
jge
je
cmp
out
cmp
mov
jg
sub
in
in
aad
push
hlt
add
mov
pop
scas
push
les
jbe
out
ret
xor
xlat
test
push
mov
stos
push
mov
adc
repz
cmpsl
insb
mov
movsl
mov
and
add
cwtl
mov
fcoms
push
in
fldcw
fidivrs
cmp
out
aas
lret
push
dec
stos
popf
and
jns
pminsw
je
xor
inc
lss
cmp
jns
outsb
insb
jecxz
jecxz
mov
test
scas
pop
cs
out
fcmove
pop
sbb
push
js
adc
push
jne
je
pop
ret
adc
decl
fwait
aas
fwait
enter
xchg
push
daa
shlb
repz
mov
test
lret
pop
das
js
sbb
fsubs
adc
mov
popa
mov
sub
xor
cmp
pop
pop
ljmp
push
pushl
jne
adc
in
pop
mov
lcall
and
out
mov
pop
out
inc
insb
mov
and
jl
pop
enter
popf
or
inc
fnstcw
out
add
fdivr
imulb
loop
cmc
pop
add
in
xor
lods
cmc
mov
mov
rorb
lret
inc
insl
sbb
jg
inc
fwait
dec
mov
push
popf
and
pop
movsb
lret
out
and
xor
pop
cwtl
pop
or
mov
jecxz
cs
push
fisttps
shrd
jae
xlat
add
or
data16
loop
sarb
fcmovnb
je
xor
ss
sti
push
movsb
ficoms
xchg
pop
int3
xchg
sbb
push
add
jl
jne
shll
push
pop
cmp
lds
mov
dec
popa
push
or
and
pop
shrl
dec
mov
xchg
cmpb
pop
cmc
jnp
out
cld
leave
cmp
mov
fisttpll
pop
leave
test
mov
sub
mov
sti
lret
movsl
call
test
fwait
push
mov
lock
cmp
push
push
into
jge,pt
cmp
add
cmpsb
aam
adc
dec
jle
nop
gs
push
adc
jle
cmp
sub
cli
mov
movsl
mov
cwtl
mov
pop
sub
dec
sti
aad
ds
jecxz
jle
add
dec
pop
mov
xchg
pop
sbb
sub
pop
pop
ljmp
sbb
test
in
cmc
adc
jo
js
push
pushf
repz
rcrl
loop
imul
sbb
mov
xor
insb
negl
jnp
mov
pusha
sub
mov
popa
or
cmp
aad
stc
cwtl
fwait
rcl
in
jmp
dec
and
int
xorb
lods
add
xor
jbe
nop
lret
pop
and
mov
jmp
pop
xlat
push
sbb
xchg
sarb
lods
sub
adc
jl
xchg
pop
cmp
pushf
push
dec
in
xchg
jno
pop
call
aad
push
sbb
dec
lcall
inc
xchg
xor
and
pop
fbld
or
imul
xchg
inc
test
sbb
lods
shll
out
inc
and
mov
jmp
loop
push
or
mov
fldcw
pop
outsb
and
scas
mov
outsl
stos
push
mov
cmp
popf
sahf
push
arpl
into
pop
mov
add
ljmp
test
enter
and
jle
cld
add
mov
sub
and
mov
ja
mov
xor
sub
data16
push
in
sbb
jnp
jne
push
stc
into
lcall
and
and
cmp
movsb
xchg
mov
mov
cwtl
ja
inc
adc
push
loope
lcall
add
jl
dec
jp
cmp
push
sub
repz
cmc
inc
cmp
adc
and
mov
sub
jmp
dec
inc
enter
push
adc
mov
push
add
or
adc
dec
or
xor
aas
push
dec
xchg
cmp
dec
mov
clc
insl
movsl
repnz
sub
xchg
inc
mov
arpl
lcall
nop
inc
mov
add
jmp
sbb
pop
js
sbb
rorb
shl
out
push
jbe
movsl
mov
mov
mov
fsub
mov
cmp
dec
gs
inc
repnz
fwait
mov
inc
jbe
mov
push
inc
xlat
int3
xor
cli
mov
inc
ljmp
jge
push
out
pop
cpuid
adc
mov
xchg
sbb
xchg
mov
subb
shlb
add
jle
pop
dec
dec
jae
test
and
ds
in
cmp
jp
jmp
push
mov
jbe
push
add
jnp
and
aas
pop
push
cmc
pop
jmp
push
jno
push
lahf
jle
mov
pop
rcr
js
clc
lret
sub
negb
call
sub
pop
push
sbb
out
es
into
pusha
adc
cmp
add
jae
loop
mov
push
and
or
dec
xchg
or
loop
sub
aaa
inc
sub
mov
insl
ds
fistpl
dec
mov
ss
loopne
xchg
push
fsubrl
lcall
rcrl
imul
fistpl
arpl
mov
outsb
sub
cltd
sbb
rolb
loop
je
fwait
jae
scas
in
mov
aad
xchg
jle
xchg
mov
mov
icebp
jmp
inc
stos
aas
push
out
inc
inc
lods
lret
adc
testl
fbstp
sub
push
cmovg
mov
sbb
lret
shrb
pop
ret
xor
out
jne
xchg
fisubl
jle
out
dec
jno
pusha
inc
sar
pop
repnz
arpl
adc
push
pusha
mov
jmp
xchg
cmpsl
xchg
scas
mov
pop
leave
sbb
repz
and
lock
xchg
out
ljmp
mov
or
inc
repnz
ljmp
les
sub
and
lea
imul
or
xchg
ljmp
lret
or
rcr
cmc
lea
or
out
inc
inc
or
pop
dec
mov
sbb
xchg
inc
mov
adc
divb
dec
out
or
out
fidivrl
dec
sbb
mov
lods
mov
jb
and
cltd
pop
jb
sbb
push
pusha
aas
mov
cmpb
jb
sbb
or
adc
pop
xor
movsl
sbb
xchg
js
aas
cmpsb
sbb
jmp
mov
scas
mov
out
stos
jnp
sbb
lret
in
inc
pop
mov
jg
pop
xor
outsl
call
outsl
out
jnp
or
cmp
adc
inc
lret
jb
adc
in
pop
pop
sbb
mov
lods
insb
sbbl
push
add
sub
and
mov
daa
sbbb
cmp
cmp
cwtl
xchg
int3
fldenv
scas
orl
lds
fnstcw
lods
das
iret
js
mov
and
loop
mov
jp
dec
movsb
push
dec
xchg
add
and
movsl
xchg
sub
mov
sbb
ficompl
sbb
int
push
das
aad
fisttpll
test
aam
scas
dec
or
push
xchg
push
xor
test
aaa
push
mov
jecxz
dec
push
in
jle
rcll
sub
jae
mov
adc
sub
sbb
fwait
jae
mov
jb
call
movsb
cs
imull
xchg
jg
stos
xorb
shrb
mov
in
orl
pop
std
test
pushf
inc
shrb
sbbb
sahf
addl
xchg
push
mov
or
jo
enter
jmp
jae
clc
jmp
jle
sbb
aad
jg
xor
arpl
jnp
mov
jbe
fbld
insb
and
stos
cmp
and
sub
sarl
and
sub
and
cwtl
pop
pop
data16
out
es
je
xchg
das
sbb
xchg
xchg
add
xchg
jp
movsb
cli
std
and
pop
insb
in
dec
xchg
xchg
inc
out
or
or
lret
push
cmp
xchg
adc
xor
ss
cmp
mov
mov
ficompl
outsl
mov
cli
aad
xchg
mov
mov
mov
lea
inc
sti
fs
sbb
outsl
hlt
sub
adc
xor
jmp
rolb
or
push
cltd
pop
jbe
clc
sarb
mov
add
mov
imulb
xchg
push
mov
sbb
jmp
sub
in
aaa
mov
mov
dec
test
enter
mov
cli
imul
sub
aam
sbb
push
mov
xorl
pop
loope
inc
cld
xor
pop
or
adc
ret
fs
imul
adc
popa
jmp
and
sti
mov
mov
in
add
sbb
std
xor
mov
fwait
outsb
cmc
mov
sub
lcall
jb
negl
mov
dec
faddl
jge
movl
adc
aad
insl
out
out
insb
int3
jbe
and
rep
insb
inc
adc
fwait
addr16
test
push
and
pop
fbld
decb
xorb
std
or
and
xor
xlat
movsb
jle
dec
test
xchg
pop
push
ja
sub
mov
aas
gs
arpl
in
cvtpi2ps
jle
mov
mov
in
cs
fmul
rolb
adc
or
cmp
sbb
add
std
das
fsubr
inc
add
mov
mov
or
xor
cmp
sbb
divl
std
fisubl
jl
adc
pop
faddl
out
cmp
xchg
cmp
iret
fwait
inc
sub
gs
adc
sub
jmp
cwtl
xchg
test
jp
stos
xlat
je
xor
mov
fwait
arpl
dec
adc
pusha
or
stos
or
arpl
xchg
fdivl
and
cs
mov
fistps
pop
or
mov
pop
imul
xchg
fadds
clc
xchg
adc
jno
shll
push
je
insl
jo
dec
in
pop
mov
inc
push
and
negb
into
push
repnz
jecxz
mov
inc
lods
inc
inc
and
dec
and
xchg
pop
int
fwait
in
mov
cli
rolb
lcall
cs
imul
sub
int3
mov
repnz
test
das
mov
les
ljmp
pop
iret
pop
cmc
mov
push
fcoms
mov
sub
sub
and
cld
popa
loope
lahf
into
mov
inc
sub
mov
xor
ja
mov
push
insb
ret
cld
imull
lret
jbe
sbb
shrl
dec
scas
mov
xor
or
jb
push
xor
push
mov
lock
mov
sub
addr16
fs
adc
inc
jp
sub
out
sub
mov
std
inc
mov
fld
hlt
fildl
inc
movsb
leave
mov
mov
shll
adc
pop
adc
insl
cmpsl
mov
enter
push
mov
mov
push
repnz
arpl
arpl
mov
lds
lds
subl
fistpll
or
shrl
out
push
movsb
stos
scas
dec
sbb
fwait
mov
lods
cmp
andb
xchg
mov
js
gs
stos
inc
mov
mov
mov
lds
test
and
push
mov
orb
mov
je
and
sbb
sarl
es
mov
mov
cmp
mov
testl
jo
cmp
xchg
xchg
push
out
movsb
mov
aaa
inc
outsb
adcb
cs
xchg
xchg
out
mov
add
cmpsb
xor
push
pop
fisttpll
adcb
cld
push
mov
pop
mov
sub
movsl
mov
mov
std
jp
es
cmpb
outsl
out
pop
test
ja
push
adc
clc
scas
data16
ss
sbb
in
pop
popf
movb
mov
shll
scas
sub
dec
xor
xchg
sub
pop
cmp
shrb
test
pop
int
shlb
adcl
push
xlat
jae
jnp
hlt
mov
fwait
in
mov
fwait
jg
loopne
addr16
push
xchg
dec
cmp
xchg
call
dec
jmp
push
pop
add
mov
lea
rcrb
dec
push
nop
pop
call
clc
or
sub
xchg
adc
fs
pop
out
fisubrl
enter
cltd
push
push
cld
sub
or
mov
icebp
mov
cmp
jmp
test
pop
or
addl
mov
pop
xchg
aad
mov
xor
jno
pop
sub
loop
aaa
lea
push
hlt
and
or
fisttpll
stos
cmp
scas
jne
push
les
sub
aam
push
add
pop
stos
int3
mov
rolb
mov
add
cltd
inc
imul
cmp
cmp
jl
pop
pop
cs
cmp
mov
mov
fmulp
mov
cmc
notb
and
int
pop
mov
pop
jbe
or
sbb
cs
mov
fnsave
mov
mov
dec
push
xor
or
push
ret
int
fdivrs
add
mov
cmp
or
fs
scas
insl
loopne
sub
ja
out
inc
push
shrl
orb
or
push
scas
lret
cwtl
pop
insl
pop
sti
shll
inc
dec
push
jge
sub
xor
push
sub
pop
mov
movsl
cmp
sarb
jb
sti
xor
lds
xchg
or
push
fisttps
hlt
mov
or
hlt
and
jo
dec
scas
das
and
fwait
dec
or
dec
mov
pop
and
rorl
add
mov
adc
sbb
mov
or
xor
cmp
idivl
iret
in
ds
xchg
inc
xchg
in
or
das
sbb
jnp
loope
popa
push
sbbb
push
pop
out
dec
pop
push
lods
scas
mov
fcmovnbe
repz
ret
ficoml
roll
fmull
ljmp
leave
sub
push
pop
aas
es
xchg
adc
mov
cmp
sub
insl
jecxz
and
mov
loopne
sarl
sbb
popf
push
adc
inc
mov
xchg
mov
ljmp
mov
negb
xor
jb
ljmp
jg
bound
imul
xor
dec
das
push
das
jns
or
mov
iret
sti
rolb
dec
or
or
jnp
lods
lock
sti
add
loope
outsb
and
int
loopne
cmp
push
inc
lea
mov
jo
push
jmp
clc
add
or
mov
out
sub
pop
stos
mov
mov
icebp
repnz
push
mov
sub
sbb
pushf
mov
dec
xchg
or
lea
repnz
xlat
cli
push
in
test
loope
cmp
push
aaa
push
xchg
pop
add
mov
pushf
xor
ret
test
in
and
in
test
mov
call
dec
xchg
sbb
roll
call
test
and
mov
or
aad
pop
push
xchg
pop
sahf
inc
leave
adc
pop
aam
jle
pop
std
ja
roll
mov
xchg
adc
push
pop
or
jp
mov
movb
test
hlt
xor
in
fisttpl
out
fidivrl
cld
jnp
jp
jb
or
shlb
cmp
pusha
mov
inc
sub
mov
push
inc
neg
imul
adc
out
lock
sbb
cmc
adc
loop
insl
dec
mov
sbb
sbb
sub
inc
mov
aam
cltd
lret
jb
rclb
mov
pop
rcll
dec
adc
lods
shll
push
xlat
loop
or
cmpsl
xchg
mov
mov
cwtl
sub
loopne
inc
lahf
nop
xorl
in
xchg
sub
xor
pop
lahf
dec
xor
dec
xchg
cmp
int3
js
cltd
ret
out
jnp
jl
js
push
das
push
push
pushf
mov
fnstenv
cli
call
add
mov
jns
cmp
loop
push
loope
adcb
scas
fwait
icebp
or
sbbl
pop
or
ja
sti
xchg
xchg
arpl
xor
pushf
mov
push
roll
mov
sub
js
mov
nop
insb
test
js
or
loope
bound
in
pop
roll
iret
sub
cmc
lret
negl
add
aam
dec
int3
in
movsl
mov
stos
cmp
jbe
ja
cltd
sbb
inc
scas
int
jg
nop
cltd
cmpsb
pop
add
dec
scas
cmpsl
inc
lds
fdivr
mov
insl
iret
xor
lea
aas
movsb
rcl
repz
add
push
pushl
jbe
outsl
ds
jno
in
out
gs
mov
pop
sub
pop
or
fnstcw
push
test
ljmp
mov
mov
fistps
mov
shll
sub
decb
repz
lods
adc
xchg
or
inc
cs
cwtl
xlat
and
int3
sbb
add
test
pop
lret
in
jo
in
ss
popa
mov
dec
cmp
dec
pushf
sahf
lods
enter
xor
jl
pushf
dec
inc
lret
cmpl
cld
clc
fwait
loope
xor
les
sbb
mov
std
pop
xor
in
xchg
adc
and
ds
das
jmp
loopne
cmp
mov
loope
sbb
jmp
sub
inc
pusha
xchg
mov
mov
sub
pop
dec
mov
fisubs
js
mov
inc
mov
push
dec
xchg
pop
lds
data16
push
push
inc
jl
in
lret
jae
lods
add
xor
movsb
movsb
int
jo
ljmp
movsb
dec
dec
xor
in
lea
repz
mov
jmp
imul
aad
mov
and
lcall
sti
mov
in
pop
cli
push
mov
jo
mov
inc
lock
int
test
jb
add
addr16
hlt
fwait
fwait
lods
push
jno
int3
aaa
repnz
adc
add
dec
mov
mov
pop
pop
icebp
push
mov
adc
data16
or
sub
mov
inc
fstps
xchg
sbb
dec
loopne
and
js
mov
cmp
mov
cld
add
rolb
mov
push
adc
dec
mov
std
sbb
xor
stc
cmpsl
pop
dec
stc
jp
xchg
xchg
cmpsb
pop
ret
sub
xchg
incl
outsl
or
stos
mov
xor
jo
push
or
jecxz
mov
push
es
xor
xchg
ss
sahf
mov
out
jmp
popf
je
and
lret
mov
cmp
mov
fisttps
int
mov
mov
ljmp
push
es
mov
sub
ret
and
std
push
mov
movsl
data16
adc
fidivrl
out
pop
js
add
push
jl
js
dec
add
imul
imul
scas
inc
adc
daa
rorb
aas
adc
pop
push
aad
jne
inc
pop
sbbb
sti
daa
lcall
sbb
shlb
or
dec
ret
push
subl
loop
pop
mov
dec
push
out
notb
fbld
cmp
inc
pop
rol
lock
loop
lds
sub
or
xrelease
lea
out
push
shrb
jp
sub
push
jne
lret
loope
wrmsr
ficompl
inc
lods
movsb
movb
or
mov
add
fsubrs
mov
push
cmpsl
push
add
push
add
mov
or
sub
in
sbb
lahf
adc
xchg
shlb
lock
cmpsl
pop
mov
mov
and
or
mov
cld
push
cmp
inc
pop
in
data16
scas
daa
inc
adc
jmp
mov
lods
cmp
outsb
jbe
mov
or
jno
sbb
popf
mov
add
out
add
push
sub
lods
fldt
jge
and
and
ds
bound
lcall
cmpsb
and
push
xchg
leave
mov
xchg
lcall
call
out
inc
push
sbb
mov
addr16
imul
adc
popf
jae
inc
sbb
int3
xchg
fnsave
mov
mov
in
or
je
and
outsb
les
pop
in
mov
outsb
inc
pop
dec
jl
mov
or
int3
xor
arpl
aaa
mov
or
shlb
mov
repnz
test
adc
cmpl
dec
das
ror
xchg
fisttpl
mov
negb
xor
cltd
and
inc
mov
lahf
push
sub
push
cld
das
add
imul
clc
stos
adc
push
jg
fdiv
push
fiadds
sbb
loop
in
mov
jecxz
shll
cmp
pop
rclb
sub
fistpl
fisubrs
dec
sbb
test
lea
jle
clc
sbb
mov
xchg
aaa
push
mov
repnz
add
in
out
lret
xor
sbb
rclb
out
dec
cmp
loope
inc
jmp
mov
push
sub
dec
andb
dec
xor
push
lret
mov
push
out
out
sub
xlat
and
aaa
inc
pop
lcall
repnz
clc
sbb
lock
sub
bound
pop
mov
je
repnz
or
fmull
leave
imul
das
mov
cld
push
jno
sti
jo
add
hlt
mov
adc
sbb
mov
mov
push
out
loop
into
xchg
mov
dec
xchg
ljmp
jle
aam
sub
dec
gs
pop
stos
aaa
dec
sbb
sub
dec
std
outsb
pop
repnz
cli
sbb
or
loop
xlat
or
dec
pop
sahf
push
xor
inc
icebp
subl
rorl
testl
imul
mov
cs
repz
adc
or
stc
cmp
xchg
xchg
sbb
adc
test
lret
mov
push
jbe
lock
sbb
mov
pop
loop
test
movsl
sbb
ss
fnstsw
std
push
sub
in
fdivrs
jno
xchg
and
out
lret
xor
pop
jae
lea
popf
cmp
push
das
and
sub
ljmp
or
lret
cmpsl
jle
add
in
stos
mov
fcmovb
ret
outsl
jne
aaa
in
retw
das
inc
aad
loopne
mov
sub
lret
adc
aaa
shll
mov
add
mov
push
addr16
imul
pcmpgtw
xchg
imul
mov
and
lcall
push
mov
sbb
lds
mov
or
pushfw
gs
fnstsw
jne
dec
xchg
mov
add
int3
sar
adc
out
and
addr16
inc
loop
push
cmpsl
mov
inc
push
and
pop
xor
scas
push
sub
hlt
jp
xor
dec
fsts
adc
jmp
jecxz
popf
xchg
into
repnz
test
lds
into
sbb
mov
fisubrl
lods
dec
into
mov
jg
mov
pop
add
lret
gs
pusha
inc
or
xlat
out
ja
hlt
pop
fmull
loope
fsubrs
jb
inc
lods
sbb
mov
sbb
adc
xlat
pushf
aad
push
push
in
sub
aad
les
movsl
mov
sub
imul
cld
inc
inc
push
mov
mov
fprem
and
xchg
insb
idivl
fsts
adc
xchg
push
push
mov
hlt
xchg
cltd
cmc
in
repz
push
push
cmp
adc
pop
inc
outsb
iret
inc
das
dec
popf
inc
sbb
scas
out
xor
push
outsb
or
mov
push
lcall
sbb
rcll
jmp
iret
jne
shrb
push
sbb
jge
mov
or
jae
aas
loop
mov
jno
cmp
loop
sbb
or
jns
adcl
scas
mov
cwtl
inc
pop
push
lret
add
mov
insl
cmpsb
ds
cs
outsl
cmp
jbe
jmp
push
pop
push
pushf
push
jbe
jne
out
push
adc
jno
arpl
rcll
hlt
test
or
jl
xchg
je
xchg
pop
sbb
aas
repz
xor
jns
push
enter
into
testb
mov
lds
push
das
pop
aas
into
adc
cmp
ljmp
inc
inc
adc
scas
cld
test
cltd
push
scas
mov
jmp
data16
jl,pt
dec
movsb
cli
pushf
mov
cli
cwtl
push
cmp
dec
add
repz
jnp
scas
sbb
shufps
mov
arpl
in
pop
pop
scas
adc
enter
lcall
cmp
std
add
add
push
out
push
ja
movsl
adc
cmpsl
je
pop
inc
inc
ja
cmp
mov
adc
lret
mov
cmp
mov
dec
pop
mov
push
fisttpll
idivl
lea
jo
cmpsl
xor
pop
iret
add
aam
add
out
xor
insl
stos
or
xchg
sbb
js
push
or
mov
sub
out
jns
into
gs
or
inc
cmp
lods
xor
dec
insb
pop
mov
cmpsl
lds
lahf
sbb
mov
jne
push
xor
jp
push
test
dec
stos
into
mov
ret
in
mov
push
out
fnstenv
pop
pop
mov
pcmpgtd
out
popa
mov
push
int
sbb
cld
les
mov
cmp
pushf
popa
mov
dec
insl
fwait
cmpb
pop
adc
adc
mov
add
mov
jmp
mov
xor
xor
fcompl
sbb
fwait
mov
js
lret
notb
stc
fnstenv
ljmp
pop
lea
dec
test
sub
push
lods
cmp
test
orb
loope
push
fnstenv
ds
fs
or
or
add
imul
ds
aam
pop
sbb
adc
inc
mov
cwtl
pusha
xchg
loop
daa
jbe
jmp
xor
cli
jmp
loop
jae
jg
loope
cltd
push
dec
fs
negb
mov
int3
and
jp
and
sarb
imul
mov
sbb
cmp
sbb
jne
pop
je
loopne
shr
imul
cld
jae
adc
cmp
in
mov
fistpl
cmp
rclb
sbb
clc
dec
ret
popa
mov
cmp
add
repz
mov
jp
and
mov
jbe
pop
jg
rorb
mov
rcrl
rcl
sub
aas
fimull
jecxz
popa
stc
inc
insb
decb
xchg
lods
sub
jg
jb
out
fwait
mov
adc
popa
push
dec
push
out
mov
mov
jg
ret
pop
jno
push
cmp
cmp
xchg
jecxz
mov
test
push
push
inc
mov
lea
pop
cmp
mov
stos
cmp
daa
pop
lock
int
fisubrl
jle
mov
push
gs
das
into
push
sbb
dec
xchg
dec
xchg
cmp
jle
jmp
pop
pop
mov
push
movsl
or
push
out
push
and
xor
notb
hlt
clc
ja
jg
mov
or
xor
mov
pop
filds
enter
ja
cltd
jb
adc
add
cmp
xlat
andb
lock
fmulp
add
mov
insb
shlb
jnp
xchg
xor
cli
mov
insb
out
dec
mov
or
dec
mov
cltd
or
xchg
jbe
enter
jecxz
push
mov
hlt
mov
mov
ljmp
lret
test
mov
ljmp
mov
lock
jnp
xor
jmp
xor
out
mov
icebp
jbe
dec
xchg
das
mov
mov
dec
sahf
daa
or
imul
daa
add
jmp
sahf
lods
add
and
shrl
es
into
iret
jp
into
cmp
jmp
pop
mov
mov
ret
cmc
sbb
leave
add
mov
inc
movsb
pop
pop
jge
lahf
and
repz
or
pusha
pop
ret
inc
adcl
add
lcall
push
push
loope
mov
imul
subb
iret
adc
daa
cmp
xor
aaa
punpcklwd
mov
rep
inc
mov
iret
and
mov
rorb
or
imul
pushf
jge
lods
dec
mov
mov
sarb
fistpl
test
cmpsb
mov
leave
mov
mull
mov
fmul
ret
ret
push
ja
enter
sbb
pop
adc
seta
fwait
and
push
out
dec
adc
sahf
lock
gs
xchg
dec
stos
addr16
sub
mov
cwtl
xchg
add
mov
jl
cmpsb
lds
fidivl
mov
xchg
cltd
fsubl
mov
test
mov
inc
js
push
sub
shl
pop
lret
jge
stc
arpl
leave
dec
inc
aam
or
mov
mov
mov
xchg
imul
mov
dec
aam
pop
mov
shl
mov
xchg
mov
xchg
fisubs
cmp
imul
jno
sti
shlb
jecxz
fmuls
imul
scas
pop
jmp
sbb
fbld
pop
cld
aaa
sub
or
ficompl
add
dec
lods
sbb
sbb
sub
cmp
add
sar
add
sbbl
fstl
bts
andl
gs
mov
in
jns
sub
sbb
or
mov
in
insb
and
jbe
xchg
fs
adc
pop
cwtl
js
mov
jae
sbb
and
mov
mov
imul
ds
cli
int3
push
pop
pop
cltd
mov
mov
imul
test
fimuls
inc
lods
cld
mov
pop
mov
fidivrs
ficoml
sub
jle
push
push
xor
mov
push
andl
push
loopne
jnp
scas
pop
cmp
aaa
imul
sbb
mov
insb
dec
jle
fisttps
cmpsl
pop
lahf
mov
mov
lods
push
leave
test
sbb
aas
aaa
pushf
or
jae
xor
mov
shr
popl
jle
sbb
sbb
sahf
xchg
xor
push
fldt
pop
and
enter
movl
scas
push
pop
dec
dec
and
pop
mov
or
fs
rorb
jmp
xor
xchg
int3
dec
xor
jp
jg
arpl
pop
push
shrb
mov
dec
mov
loope
xor
mov
push
insb
lcall
outsb
shll
cmp
mov
adc
cltd
mov
push
jmp
jns
out
dec
jae
mov
mov
xchg
jno
mov
xor
and
jo
push
adc
sub
pop
lods
adc
jnp
jns
push
ss
outsl
leave
loop
sub
sbb
push
xchg
sbb
data16
jl
jnp
shlb
addr16
nop
subl
leave
stos
push
and
cmp
mov
jo
enter
les
loopne
unpcklps
scas
xchg
mov
je
sti
jb
cmp
inc
addb
inc
cmp
xchg
mov
ljmp
sbb
xor
xor
pop
ret
in
or
pop
cmp
mov
hlt
iret
in
movsl
jmp
sbb
pop
adc
rorl
inc
xchg
lret
movsl
popa
cmc
stos
jge
andl
roll
std
ret
jmp
loop
adc
adc
inc
adc
adc
js
inc
push
cmp
ds
xor
adc
fistpll
mov
pop
je
cwtl
jl
mov
mov
cmpl
sti
out
add
pop
push
sub
push
xchg
fisubl
jmp
notb
pop
mov
inc
mov
or
cmp
inc
adcl
dec
or
xor
push
sub
jp
sub
rcl
jmp
mov
xlat
dec
ficomps
jmp
sub
adc
mov
xor
testb
fdiv
sub
and
dec
in
or
sbb
fstps
cmp
inc
inc
push
adc
and
notb
pop
sahf
and
aas
pushf
out
pop
sahf
dec
cli
fisubrl
int3
dec
pop
sbb
dec
mov
inc
push
pop
movsb
mov
push
mov
mov
je
aad
pusha
lcall
add
adc
fwait
cmp
add
mov
jp
mov
ret
mov
aam
inc
loopne
mov
lahf
adc
ret
adc
lcall
out
jae
call
mov
sbb
mov
inc
hlt
test
movsb
jae
push
mov
sbb
xor
test
push
xchg
testl
push
sub
cmp
repz
pop
mov
xchg
cmp
data16
popa
mov
test
call
push
out
xchg
sbb
testb
adc
inc
ja
mov
pop
mov
mov
adc
dec
mov
hlt
pop
ss
dec
stos
push
dec
xchg
test
push
loope
mov
roll
mov
cld
cmc
pushw
push
fimull
inc
aam
out
fsubrl
popa
xchg
mov
jecxz
data16
cmp
mov
adc
pop
outsb
dec
dec
leave
mov
mov
mov
stos
cltd
cmc
ja
scas
leave
out
mov
or
jecxz
add
jge
push
mov
jne
dec
jecxz
adc
lock
out
pop
or
cltd
add
pop
clc
cwtl
mov
cmc
insb
mov
cmc
into
mov
ret
pop
cmpsl
push
mov
mov
fsubrs
push
push
xchg
dec
pop
lret
out
mov
xor
dec
push
mov
mov
out
jmp
mov
ja
mov
inc
xorb
cmp
jbe
and
gs
inc
outsb
and
jne
repnz
dec
addr16
sub
inc
pushl
sar
xor
adc
and
lea
jl
cmp
cwtl
rolb
adc
adc
repnz
icebp
into
sbb
sbb
or
or
dec
dec
lods
mov
mov
js
adc
imul
orb
inc
pop
and
xchg
pusha
rol
stc
insl
loop
call
xorb
mov
cli
jmp
mov
mov
into
testl
jne
fisttps
and
push
cltd
hlt
insl
pushf
adc
outsb
arpl
pop
add
and
pop
cltd
mov
inc
or
outsl
repnz
xchg
test
loopne
popf
cld
or
lea
sbb
mov
adc
adc
ds
mov
push
jnp
mov
pushf
pop
xchg
dec
adc
jne
ret
pop
sbb
jmp
mov
sub
lret
pop
aad
sbb
mov
add
ret
dec
push
sbb
leave
push
daa
lahf
xor
jno
inc
pop
movsb
pop
insl
xchg
inc
sbb
mov
imul
ds
or
outsl
ss
jge
sbb
pop
xchg
test
xlat
mov
out
push
aas
or
cmp
mov
inc
ds
outsl
das
dec
ret
add
jno
jecxz
cwtl
mov
roll
fwait
mov
cmp
mov
cmp
cmc
fwait
sub
sbb
mov
ret
adc
inc
push
push
mov
add
in
inc
add
push
scas
imul
fwait
out
pop
push
in
imul
cmc
pop
push
push
shl
fwait
mov
xor
int3
fs
xor
les
dec
mov
cmc
sbb
addr16
test
jle
pop
jb
xchg
jns
lock
push
and
push
test
mov
jle
fcoml
cwtl
and
sbbl
mov
fcoml
and
test
repz
cmp
sub
lcall
fsts
jg
repz
sub
icebp
imul
lea
push
clc
push
lahf
pusha
enter
or
sbb
popf
xchg
dec
inc
in
pop
aaa
or
push
cltd
mov
add
iret
std
mov
and
leave
lods
xor
xchg
xor
lea
aas
push
mov
add
out
mov
xchg
std
mov
pop
ret
popf
xor
xlat
mov
aas
shr
sub
call
loop
fdiv
aaa
push
cmpsb
pushf
addb
cwtl
pushf
pop
jae
ret
shrl
fisttps
stc
pop
xchg
call
lock
pushf
inc
lds
sbb
cmpsl
sub
sahf
imul
sbb
rorl
outsb
repz
ds
xchg
in
push
adc
repz
leave
jge
jecxz
arpl
stos
inc
inc
lret
pusha
pusha
lret
push
jnp
loope
mov
or
pop
mov
mov
xchg
stos
or
mov
repnz
and
sarl
mov
sub
popf
cltd
or
push
or
cmp
out
mov
out
add
addl
mov
push
xchg
adc
push
dec
lock
bound
out
outsl
push
push
add
and
ret
loopne
mov
pop
test
mov
push
ret
sbbb
sbb
dec
mov
mov
cmp
xchg
mov
subb
adc
sti
js
loope
xlat
cld
ja
dec
nop
mov
mov
rcrl
mov
call
mov
and
lret
scas
js
mov
add
lods
imul
sub
pop
test
stos
inc
fbstp
jge
pop
pop
sub
call
loopne
xchg
sahf
inc
aas
clc
lea
test
mov
lahf
bnd
mov
cmp
inc
mov
push
xchg
xor
sbb
pop
jp
jno
jns
mov
push
dec
xchg
sahf
sub
jns
inc
mov
dec
fcoml
notl
xor
mov
enter
sahf
cld
inc
mov
ljmp
push
sti
push
and
andb
fstpl
ja
mov
aaa
lods
mov
enter
push
mov
pop
dec
fsubrs
mov
inc
mov
popf
mov
mov
mov
loop
add
mov
jp
add
cltd
push
stos
daa
imul
into
std
hlt
lahf
jnp
xchg
mov
mov
clc
test
lret
stc
xchg
js
popa
leave
fcmove
sahf
daa
add
icebp
mov
in
fld
aaa
mov
sub
pop
or
or
lods
sbb
das
mov
push
out
mov
loopne
jo
or
mov
push
movsb
nop
filds
mov
aaa
aad
mov
fs
jae
mov
dec
mov
pop
and
mov
pushf
dec
mov
jl
lods
test
mov
mov
nop
dec
clc
rclb
mov
push
out
mov
insb
rcr
ret
push
incl
cmp
in
movsl
add
mov
leave
int
mov
push
mov
inc
ret
mov
pop
popl
lret
scas
mov
dec
cmpsl
shll
andb
xor
ret
out
xor
xchg
sbbb
and
stos
das
in
pop
loop
dec
or
jns
mov
xor
dec
push
inc
jno
add
sbb
shlb
call
pop
repz
loope
fistpl
movsb
and
pop
fiadds
jmp
xor
ss
adc
gs
repz
lret
xchg
mov
movsl
dec
push
insb
xchg
sbb
lock
mov
mov
mov
sbb
mov
repnz
addr16
mov
sub
pushf
dec
sbb
out
sub
scas
and
xor
push
dec
int3
and
pop
lea
scas
push
pop
and
outsb
aas
mov
pop
int3
mov
stos
in
adc
pop
repz
enter
cmp
sbb
aam
cmpsl
out
das
sub
push
inc
xchg
in
sbb
imul
push
es
or
gs
mov
hlt
or
add
adc
addb
push
sbb
adc
mov
movsl
and
add
repz
pop
out
mov
mov
cli
aad
adc
les
cmpsl
add
ret
ljmp
mov
popf
xor
pushf
lds
mov
or
or
pop
or
push
imul
inc
pop
xor
popf
repz
pop
mov
testb
xchg
push
adc
jo
push
mov
mov
popa
in
cmc
cwtl
jl
mov
push
test
mov
movsb
enter
xchg
imul
rorb
cmpl
mov
sbb
lods
cmp
loopne
shll
cli
int3
sbb
cmp
fadds
clc
testb
cmpsb
jae
movntq
mov
cli
sets
mov
incb
pop
xor
imull
sti
jbe
stos
clc
cmp
push
je
shr
add
xchg
ja
popf
or
sbb
sbb
mov
dec
sar
push
sbb
std
push
jmp
cmp
inc
cmp
xchg
jg
xchg
xor
push
test
sahf
inc
adc
fcomps
jb
push
inc
ret
sub
leave
add
lahf
cltd
shll
jp
cmp
mov
vpcmpeqw
dec
or
pop
shlb
jo
fcmovnu
inc
dec
les
repz
xor
aas
mov
cs
inc
aad
out
add
scas
dec
ret
lret
pop
push
dec
inc
sub
insl
mov
adc
or
xchg
pop
jge
imul
lret
jno
sarb
xchg
testb
fwait
sub
adc
mov
dec
cmp
sarl
push
xchg
mov
fsubrs
out
or
and
lret
add
orl
mov
orb
or
sbb
out
cmp
and
pop
jge
test
pusha
pusha
in
test
hlt
pop
inc
scas
pop
int3
movsl
jmp
js
shrl
stos
bound
loopne
stc
loop
mov
das
es
mov
mov
call
dec
rorl
mov
and
test
mov
add
inc
dec
push
mov
inc
int
adc
sbb
movsl
addr16
loope
push
outsb
out
pop
mov
jne
add
cmp
icebp
jnp
dec
dec
gs
pop
xor
fldcw
cmpb
mov
sub
sti
aad
or
sub
mov
pop
xor
cmpsb
shlb
add
pop
inc
fimuls
adc
hlt
cmp
cmp
stc
cmp
std
sub
into
adc
push
jb
xor
pop
lret
adc
addr16
inc
xchg
xchg
data16
mov
pop
dec
adc
ljmp
gs
ret
mov
inc
in
cli
gs
loop
aas
popf
adc
mov
lods
mov
push
inc
or
test
mov
imul
cmpsb
repnz
inc
xchg
jle
push
ds
je
popf
out
sub
mov
sub
xchg
adc
les
jo
jp
arpl
dec
jno
mov
push
pop
xor
jae
adc
mov
stc
loop
sub
shrb
cmpsb
push
test
add
popf
pop
cmpsl
loop
fmul
jns
repz
fstl
sarl
in
aas
mov
push
lods
mov
xchg
bound
mov
xchg
push
push
pop
popa
data16
xchg
mov
flds
sbb
mov
scas
push
bound
push
rclb
mov
xlat
sub
aaa
mov
jmp
xor
outsl
bsr
lea
enter
std
push
scas
mov
ret
push
adcb
test
or
inc
lcall
insb
clc
mov
sahf
in
jg
jmp
mov
out
mov
sbb
sahf
lcall
inc
sub
test
push
mov
in
aad
shrl
xor
and
scas
push
loop
pop
gs
imulb
sbb
insl
sub
imul
pusha
xchg
xchg
adc
xchg
loopne
ljmp
lock
or
addb
cmp
sbb
mov
mov
pusha
mov
nop
iret
sub
jp
mov
stos
testl
inc
dec
dec
sub
jp
in
push
push
or
ss
in
imul
sti
in
fcoml
clc
mov
sbb
hlt
cld
sbb
xchg
fldt
mov
iret
dec
jmp
movsb
xchg
xchg
push
sti
scas
pop
stos
jmp
pushf
outsb
fcmovnbe
pop
cmp
fisubl
inc
inc
out
inc
call
jns
jp
lcall
sti
int3
jb
bound
xor
or
mov
jb
ds
cli
mov
push
pop
dec
das
cltd
mov
imul
push
or
aas
inc
mov
jle
inc
or
rorb
test
loope
and
repz
mov
fistps
out
xorl
lea
nop
aas
aam
xor
mov
rol
pop
testb
jmp
dec
bound
adc
cmpsl
cld
out
inc
jl
add
lods
imul
lock
sbbl
sbb
jo
out
pop
pop
xchg
xlat
loop
dec
out
mov
mov
pushl
pop
insb
xchg
dec
push
cwtl
inc
pop
cmp
add
push
scas
cmc
fildl
outsb
mov
xor
xor
jmp
sbb
inc
fisubs
or
icebp
adc
xchg
xor
push
mov
mov
pop
les
in
lret
cmpsb
sbb
negb
movsb
jecxz
mov
push
and
push
test
scas
mov
cmp
mov
inc
inc
mov
lods
mov
dec
aam
adc
insb
xchg
adc
jae
ret
mov
jecxz
ds
cld
rcll
push
jmp
inc
call
loop
push
popa
jg
and
nop
sbb
mov
out
xor
inc
sub
div
sbb
add
cmp
movsb
leave
or
dec
adc
mov
pop
cli
sar
adc
filds
jo
mov
out
dec
test
xchg
cld
inc
jle
jmp
push
jmp
cmp
jp
or
dec
nop
das
push
sub
out
mov
bound
iret
mov
popf
outsl
arpl
aas
iret
out
daa
iret
push
lret
mov
pop
and
sub
push
pop
pop
sti
addr16
dec
je
dec
xlat
add
mov
push
mov
mov
js
lock
aam
push
enter
mov
mov
mov
inc
or
lds
sbb
sbb
mov
push
rcll
mov
sbb
dec
fwait
out
add
hlt
jmp
scas
xchg
pop
add
push
mov
or
dec
sahf
mov
push
lret
lret
inc
or
xor
loop
sbb
cmp
lods
in
test
lds
jmp
gs
push
mov
inc
sbb
jle
sbb
add
pop
call
dec
jnp
inc
fildl
cs
decb
push
in
cmpsl
filds
rcrl
popa
fidivs
xor
inc
icebp
inc
hlt
or
repnz
inc
sbb
push
cmp
jmp
jle
pop
jbe
mov
enter
cmp
js
cmpsl
mov
dec
cmp
xlat
ljmp
xchg
je
mov
out
dec
add
dec
mov
or
rorb
sbb
cmpsl
mov
push
scas
sbb
addr16
fisttps
adc
jb
pop
in
mov
jg
lcall
inc
cmpsl
xchg
out
mov
push
pop
cld
sahf
ljmp
fisttps
pop
cmp
sar
mov
test
iret
push
push
out
hlt
lock
test
adc
push
icebp
cs
dec
add
xchg
in
jl
push
ss
mov
imul
int
cmovge
clc
jp
stos
in
ficoms
add
iret
and
in
les
push
cmp
pop
shl
push
sbb
push
call
rcrb
ret
arpl
sub
xor
xchg
jge
insb
lds
dec
jl
cmpsb
rcrb
add
and
mov
cld
dec
outsl
mov
push
jbe
inc
dec
push
scas
sti
mov
and
fsubrs
push
add
movsl
adc
sbb
js
push
pop
ficomps
adcb
dec
adc
cltd
dec
jecxz
cmp
jno
orl
aad
sbb
mov
mov
pop
leave
stc
arpl
int
cmc
lds
pop
push
in
push
out
scas
aad
jno
push
or
int
cmp
arpl
xchg
loop
xchg
insb
cld
lds
popl
int3
dec
and
add
adc
push
fucom
sub
sub
stos
jp
iret
cltd
dec
mov
fiaddl
lret
and
divl
fildl
push
xchg
pop
dec
outsl
test
lds
imulb
mov
fdivl
jmp
std
aas
movsl
test
or
mov
xchg
ja
sbb
scas
test
lods
add
cmc
addl
add
pop
lret
mov
das
ret
pop
lret
arpl
lock
cmpsl
pop
cs
mov
xor
popa
mov
fmul
loopne
xchg
ror
outsb
jmp
mov
popf
mov
adc
mov
or
jns
mov
pop
into
mov
clc
xor
jno
mov
inc
xor
les
adc
test
xor
pushf
jne
push
ds
mov
mov
scas
add
fs
mov
mov
xor
dec
xchg
jns
mov
jg
nop
lock
add
jl
jecxz
push
pop
faddl
jle
scas
fistpl
xchg
insb
add
inc
shll
mov
movsl
addl
lods
addr16
inc
stos
dec
sbb
pop
sub
sbb
out
mov
xor
xchg
pop
push
adcb
add
addb
mov
addb
pop
jns
outsl
aas
fnstsw
ds
sub
fstps
arpl
mulb
in
movsl
jg
ret
inc
cmp
imul
ljmp
dec
adc
and
lods
push
sub
std
dec
fistpl
xor
popa
add
add
out
lods
sub
xchg
adc
cltd
inc
mov
adc
in
in
stos
ds
push
and
mov
and
dec
dec
cmpsb
ret
rcr
in
roll
add
fs
enter
dec
mov
pop
xchg
jle
pop
push
bound
mov
cld
xchg
andl
fwait
cwtl
std
pop
das
fcompl
lahf
adc
or
or
push
lods
fnsave
xchg
jo
push
movsb
xchg
xor
test
or
das
outsl
es
pop
sub
push
fcmovu
mov
pop
and
xchg
lcall
mov
aaa
adcb
mov
ret
jl
cmp
je
lea
mov
lret
aad
imul
mov
cld
adc
in
adc
mov
or
bound
pop
aas
sub
cmpsl
cmc
sbb
mov
and
loop
xor
xor
stc
jae
cmp
ljmp
add
inc
inc
dec
push
sbb
sbb
aas
rcrb
std
xor
or
jnp
xchg
push
and
push
sub
bound
inc
and
jae
adc
bound
lods
test
ja
repnz
sub
dec
test
add
dec
das
sbb
out
bound
les
mov
lea
sub
test
fcompl
lret
aas
cmp
adc
inc
inc
std
pop
icebp
inc
inc
xor
lcall
mov
xchg
rorb
mov
repnz
jns
data16
jmp
dec
rorl
mov
sub
insb
inc
stos
adc
pop
bnd
sbb
jle
or
iret
or
or
cmpsb
mov
rcll
pop
das
mov
lahf
daa
or
movsb
cmp
pop
jo
int
aad
lahf
xor
inc
aaa
pop
pop
loopne
cmp
pop
cwtl
das
das
loope
rorl
sub
lcall
pop
iret
add
arpl
push
sti
push
inc
xchg
ljmp
mov
outsb
loope
scas
fnstenv
in
jno
imul
xor
jg
pop
scas
mov
testl
xor
mov
mov
mov
dec
out
ja
ljmp
push
daa
cmpsb
cmp
scas
xlat
mov
test
pop
pop
ret
mov
dec
sub
cmp
lea
in
xchg
cwtl
fildl
outsb
push
push
xor
insl
jb
push
cld
lcall
fnstcw
xor
add
neg
fwait
push
sti
and
adc
les
int3
xchg
lea
mov
gs
shrb
ret
xchg
push
arpl
xchg
out
or
rolb
pusha
imul
push
sbb
xchg
loope
mov
xchg
bound
aam
dec
lods
and
int3
negl
mov
dec
cmp
sbbl
arpl
aam
sbb
xchg
xor
and
cwtl
test
pushf
out
and
pop
call
mov
dec
mov
pusha
xchg
mov
shll
sub
in
adc
push
xchg
test
push
ret
iret
jno
add
push
test
cmpsb
jmp
or
mov
mov
imul
jge
push
loop
jmp
pusha
cltd
mov
jmp
gs
lods
movsb
inc
sbb
lock
and
push
into
stos
push
sbb
add
add
jge
sub
or
xchg
in
imul
out
inc
xchg
movb
into
ja
addl
jb
int3
jge
ret
stos
mov
outsl
out
hlt
and
testb
mov
mov
pusha
std
mov
mov
and
sub
ss
mov
testl
pop
mov
adc
push
call
sub
scas
icebp
addb
or
mov
ret
cli
in
sbb
ja
or
and
xchg
sbb
cmpsl
stos
xchg
mov
aas
lret
cli
dec
cmpsb
dec
jo
cmp
dec
call
jecxz
inc
fwait
jge
cmp
and
mov
out
pop
xchg
cmpsb
mov
sti
pop
mov
lods
mov
or
insb
and
mov
mov
lods
mov
lock
pushf
cmc
jns
inc
adc
enter
xorl
out
loope
fidivrs
adc
xchg
mov
push
into
stos
leave
cmp
add
std
mov
push
ljmp
nop
movsb
js
or
fdivrs
push
pop
sub
das
cmp
mov
js
data16
pusha
mov
es
jge
jbe
jno
or
inc
xor
adc
aaa
in
outsb
cmp
push
add
push
loope
cmpsl
aaa
push
sbb
push
sub
mov
popa
jno
inc
call
ljmp
mov
std
inc
sbb
xor
mov
jecxz
daa
mov
aaa
stc
lahf
pushl
scas
lea
ja
testb
orl
xor
js
jge
mov
sbb
or
xchg
aaa
ret
dec
loopne
lds
sub
pop
jno
mov
int
int3
clc
push
pusha
sub
mov
cltd
pop
ja
adc
inc
mov
inc
xchg
xchg
repz
push
push
pop
pushf
mov
push
fimull
lock
mov
enter
pusha
in
add
subb
jb
jmp
test
and
pop
jecxz
adc
pop
or
adc
dec
movsb
cmp
ficompl
mov
mov
scas
pop
add
fidivs
inc
jns
mov
movswl
cmpsb
and
push
outsb
cmpsl
or
push
scas
cwtl
pop
movsb
loop
jne
arpl
loope
cmp
out
rcrl
addr16
sti
jnp
imul
leave
leave
pop
mov
jecxz
inc
rorb
scas
or
lds
jp
adc
mov
push
jno
pop
or
adc
lcall
sub
inc
jae
adc
jge
sbb
je
ja
aaa
pop
inc
push
outsb
pop
push
cli
js
out
faddl
nop
ljmp
loop
xchg
push
jg
cmp
lds
dec
loop
adc
jo
sub
push
mov
js
lret
ficompl
sahf
add
xchg
gs
mov
fiaddl
rol
cld
ljmp
mov
cwtl
insl
sbb
cmp
sub
in
hlt
out
inc
add
rcrb
cmp
shr
mov
sbb
sub
mov
sub
outsl
arpl
mov
mov
imul
mov
jecxz
std
lods
std
mov
call
sarb
enter
lods
inc
outsl
nop
pop
push
fs
cmpsl
push
and
push
pop
sub
dec
xchg
repnz
dec
shlb
aad
push
sub
push
or
pusha
lret
sub
and
enter
pop
jle
ret
or
leave
ret
cs
ss
xchg
jbe
dec
int
out
xor
iret
ss
push
and
pop
popf
das
notl
lahf
dec
inc
fnstcw
addb
and
mov
je
stc
jnp
dec
mov
scas
or
mov
call
mov
and
mov
pushf
aad
mov
and
sbb
cmp
stc
mov
pop
jmp
and
mov
mov
mov
pop
lock
in
rorl
lahf
cmp
mov
or
xor
xchg
sbb
stos
jmp
aam
inc
in
dec
dec
dec
pop
and
mov
pop
in
aad
into
mov
mov
inc
mov
icebp
enter
xchg
stos
cli
aad
add
mov
xor
sbb
xchg
mov
sbb
icebp
movsl
jno
cli
subl
mov
and
xchg
mov
sub
leave
push
xchg
mov
cmp
jl
lock
outsb
stos
lea
or
and
xchg
repz
es
jmp
out
dec
aad
cld
mov
pop
insl
and
sub
mov
shlb
push
int
jl
mov
pushf
aaa
cmp
pushf
ret
jno
pop
bound
cmp
aaa
adc
popa
ds
cwtl
lret
mov
fsubl
pop
mov
js
xchg
push
scas
push
mov
divl
imul
icebp
fisttpl
push
inc
cltd
xchg
maxps
xchg
sub
in
test
ss
mov
adc
sbb
cmpsl
pop
cli
dec
jmp
andl
jbe
pop
fstps
std
mov
hlt
cmp
pop
or
lret
movsb
push
insl
cmp
pop
data16
iret
push
xchg
adc
push
mov
out
sbb
in
or
imul
mov
adc
leave
pushf
and
fcmovne
pop
mov
loopne
jecxz
mov
sub
outsb
aas
sbb
pause
pop
cmc
pop
or
jne
xchg
pushf
adc
mov
mov
and
cmp
int
sub
scas
cmp
mov
mov
imul
xor
je
pop
and
dec
mov
daa
or
fstp
ljmp
inc
pop
pop
call
shll
dec
push
mov
lds
dec
push
leave
and
or
xlat
xchg
jns
jns
jecxz
push
and
out
int
mov
test
fcomps
lret
and
lea
mov
push
push
mov
loopne
popa
xor
insb
das
ljmp
add
fiadds
xchg
jmp
divl
movsl
or
scas
cs
xchg
aaa
lret
les
cli
ret
cmp
pop
jp
pop
outsl
dec
xor
ja
shll
jg
mov
inc
out
mov
out
sub
mov
xchg
into
jo
jmp
fidivrl
jge
outsb
and
and
das
daa
and
push
and
mov
dec
loope
push
imul
mov
push
pop
call
adc
mov
jnp
sbb
xchg
add
repnz
out
int3
jnp
sub
adc
jne
out
jle
push
adc
incl
mov
push
iret
out
sbb
icebp
xorb
xchg
sbb
pop
pusha
jns
pop
mov
add
xlat
xchg
scas
imul
aad
lcall
cs
inc
insb
xchg
repnz
jle
jmp
pop
ds
fidivrl
jno
pop
fstl
add
incl
out
stc
andl
add
ds
add
jnp
and
jbe
pop
dec
cmpsb
insl
je
addb
popa
adc
push
sbb
xor
leave
and
subl
cmpsl
lret
fisttpl
out
hlt
rcrl
int3
mov
xchg
pushf
fdivs
or
xchg
and
sbb
cmp
pop
adc
pop
outsl
jmp
ss
jl
mov
add
push
icebp
daa
insl
xlat
mov
pop
mulb
inc
xchg
pop
xchg
mov
loope
insb
dec
and
out
pop
call
loop
fldl
mov
mov
repnz
ja
cmp
ljmp
sub
pusha
lods
lret
jp
out
cmp
test
mov
push
enter
ficomps
or
in
mov
adc
shll
or
dec
hlt
nop
xchg
adc
jns
fwait
jo
xchg
mov
rcrl
xchg
mov
nop
lcall
push
inc
mov
xor
xorb
xchg
out
ljmp
aam
jg
push
popf
xor
mov
jnp
fwait
mov
add
adc
cmp
push
mov
in
sbb
arpl
aaa
jge
pop
and
add
pop
inc
ret
jp
adc
jle
pop
test
sbb
enter
xor
stc
push
sub
cld
nop
movsl
push
jmp
pop
jle
xor
mov
aaa
lods
out
or
fs
repz
dec
xchg
out
jge
and
ja
call
xchg
and
or
shll
cs
push
sbb
aas
test
mov
push
popa
add
pop
shrl
push
mov
push
popf
scas
mov
push
rcr
ret
les
jl
xchg
andb
xor
clc
mov
stc
lahf
pop
stos
jl
jb
inc
mov
mov
into
mov
or
or
push
mov
xchg
into
ficoml
test
jne
mov
aas
test
dec
or
call
jmp
lret
jb
xor
stos
and
rcrl
adc
hlt
mov
inc
pop
negl
push
insl
xchg
stos
xor
add
fsubr
or
cmpsl
fwait
push
push
inc
loope
jecxz
add
inc
movsl
out
repnz
xchg
add
loopne
adc
test
mov
mov
pop
xor
push
and
sbb
pushl
insb
aam
dec
or
jl
sub
pop
pop
cmpsl
lcall
incb
pop
je
sti
and
and
das
lods
inc
mov
outsl
std
push
testb
shll
shlb
bound
sarb
in
aam
pop
pop
sub
rorl
push
int
rcll
adc
fcompl
arpl
cli
cmp
cmp
sub
dec
mov
inc
push
push
push
add
hlt
icebp
xchg
push
ljmp
iret
jle
mov
ds
loope
sub
add
int3
rcr
adc
stc
into
in
jae
cld
imul
cli
adc
imul
and
or
popa
negb
stos
flds
ja
and
fbld
jge
repz
test
sbb
sbb
jg
fcoml
jns
push
neg
enter
lods
filds
sub
in
addr16
test
add
in
mov
mov
lahf
jg
fsubrs
jb
dec
dec
add
xchg
arpl
and
add
cltd
jmp
aam
lods
push
pop
rclb
out
in
in
stos
or
lds
dec
ljmp
xchg
xlat
pop
and
push
push
xchg
mov
xor
loope
loope
dec
sub
mov
ror
test
arpl
lret
inc
push
in
movd
lods
dec
cs
insb
xchg
cmpsb
mov
insb
jbe
jecxz
and
subl
mov
mov
inc
sahf
dec
cli
lcall
ret
mov
lret
cwtl
or
rorb
jl
jmp
out
subl
js
inc
lret
jne
mov
mov
stos
loope
in
sahf
lcall
imul
imul
pop
push
fnstenv
xchg
ja
lods
or
cmp
or
scas
bound
insb
inc
dec
lret
and
push
sub
mov
pop
loopne
or
iret
dec
ds
and
add
xor
loopne
ror
imul
stc
shll
mov
push
mov
in
ljmp
or
dec
cmp
daa
ficoms
rcl
and
xor
xchg
scas
pushf
pop
mov
sbb
xchg
cmc
inc
mov
xchg
aaa
mov
mov
jle
jns
pop
aad
popa
decb
cmp
or
ljmp
and
xchg
fwait
jae
sbb
or
pop
cli
fisubs
mov
xchg
jae
pushf
adc
je
and
fisttpll
fldl
push
ficoms
mov
fwait
dec
aas
jns
aas
in
stos
iret
mov
xchg
or
xor
xchg
push
adc
mov
aaa
add
inc
adc
stc
mov
lret
mov
aam
mov
xchg
mov
mov
movsl
cmp
xchg
rcll
xor
fldt
dec
jo
or
xor
jne
mull
es
in
in
jnp
pop
test
cltd
faddp
or
mov
dec
flds
inc
or
mov
loope
xchg
dec
clc
stos
sub
fs
rorb
inc
jmp
lods
sti
mov
out
push
adc
adc
pusha
add
test
mov
add
movsl
sahf
in
push
push
mov
repnz
negb
and
mov
repnz
pusha
pop
ret
inc
mov
xchg
adc
push
and
mov
rclb
movsb
addps
push
imul
xor
mov
adc
jne
lds
adc
sti
stos
ja
mov
loop
mov
pop
mov
ja
or
cmp
xor
jle
push
jae
lods
mov
mov
dec
loopne
stos
hlt
cwtl
or
fcomi
bound
mov
in
cs
roll
sahf
push
out
mov
sub
push
aas
loope
inc
adc
mov
jg
enter
or
insl
arpl
mov
pushf
shll
test
movsb
iret
sarl
ret
sub
sbb
inc
sar
insl
add
mov
rcll
adc
ret
adc
test
pusha
test
cmpsb
mov
cmp
outsb
stc
dec
mov
int
mov
ds
push
or
mov
lea
repnz
in
sub
pop
push
adc
mov
or
jl
cmp
push
iret
cltd
sub
xor
lahf
cld
mov
xchg
sub
mov
sub
mov
pop
pop
mov
mov
cltd
cs
in
aam
jp
aas
fwait
xchg
mov
mov
cmp
or
push
rcll
pushf
mov
icebp
enter
dec
xchg
mov
and
cmp
add
cmp
mov
push
jge
push
lea
repnz
push
xchg
mov
inc
jle
stc
mov
out
jae
and
sti
sub
inc
dec
ficoms
jge
jae
addps
lcall
fdivrs
xor
out
sub
mov
xor
fiadds
xor
lock
fyl2xp1
lea
test
sub
push
in
ret
test
cmp
pop
sub
adc
xchg
cmp
mov
pusha
repz
inc
test
mov
pop
xchg
fwait
pop
inc
adc
xchg
mov
jb
adc
out
popf
and
sub
pop
push
ljmp
push
jp
movsl
subb
fisttps
mov
cmpsb
jmp
cltd
cltd
inc
test
or
pop
test
and
add
push
cmpsb
dec
nop
in
jb
pop
stc
mov
adc
popa
sbb
loopne
adc
xchg
lea
xor
cwtl
cmp
fmul
and
movsb
sarb
mov
pusha
adc
jbe
adc
push
cmp
sar
ret
and
lret
imul
fwait
xor
xor
cltd
jnp
arpl
sbbl
ret
push
insl
dec
sub
nop
mov
cld
cmpsl
fmull
inc
test
movsb
pop
xor
jnp
jmp
adc
imul
or
loope
xchg
scas
adc
jmp
mov
sahf
xor
cmp
hlt
jo
and
insb
mov
sub
loop
fsub
or
cmp
lock
fst
cmpsb
inc
pop
inc
mov
pop
jmp
pop
testl
mov
cmpsb
ret
sub
push
adc
insl
sub
mov
pop
jae
outsb
jae
pop
call
cwtl
xchg
int
mov
out
int3
lahf
loopne
in
aas
outsl
pop
mov
mov
lret
fmulp
sarl
push
cwtl
add
lods
out
aam
icebp
fs
push
loopne
dec
jp
insb
inc
ljmp
lods
ss
in
sub
test
scas
jns
pop
ss
repnz
mov
cmpb
pop
imul
mov
test
inc
cmp
inc
int
fidivl
clc
frstor
pop
mov
xchg
sub
jno
xchg
adc
and
xlat
push
ficomps
shl
mov
pop
xor
adc
outsl
add
test
pushf
testl
fadd
mov
jl
sahf
add
or
fwait
rcrl
add
ret
scas
ljmp
xchg
push
fwait
jl
lahf
pop
in
mov
clts
pop
pop
dec
or
fnstsw
insb
dec
push
lods
movb
jmpw
jecxz
jecxz
pop
sub
jns
mov
lret
int
mov
lods
ficoml
fcmove
repnz
int3
cli
outsl
mov
loope
add
push
pop
insb
in
and
aaa
or
mov
cs
movsb
jge
fcoml
mov
outsl
push
insl
std
inc
outsl
push
mov
iret
xchg
xchg
xor
outsl
icebp
and
mov
stos
add
ficomps
rolb
pop
xchg
cmp
or
clc
test
push
aaa
add
mov
adc
fisttpl
inc
add
pop
dec
push
aas
ss
push
pop
mov
insl
and
ret
std
cltd
into
xor
and
adc
dec
sbb
xor
out
sub
pushf
inc
hlt
and
cli
cmc
pusha
push
mov
pop
sbb
bound
push
cmp
mov
xor
aas
into
cmpb
sub
cmpsl
lahf
mov
int
mov
xchg
and
call
xchg
add
outsl
xchg
mov
out
fisttpl
xchg
jp
scas
pushl
out
jmp
xchg
stc
sbb
fldenv
or
sahf
testb
mov
lods
sub
out
repnz
imul
insb
or
mov
lock
lret
sub
pop
insb
add
or
xchg
dec
adcl
clc
lds
jmp
and
addr16
sbb
dec
shl
out
push
scas
out
enter
mov
push
mov
inc
or
sub
inc
pop
cmp
lea
mov
popf
in
mov
or
out
out
push
jb
inc
int3
ds
mov
shll
test
inc
dec
int3
xlat
lret
fsubrs
cmp
enter
xor
hlt
fsubr
adc
add
stos
inc
push
push
mov
in
or
divl
push
inc
cld
dec
xchg
test
in
test
in
hlt
loopne
mov
addl
jb
add
jmp
bts
pop
sti
ljmp
cmp
pop
jge
dec
loope
sub
mov
ljmp
repnz
inc
enter
inc
es
sub
add
xchg
loope
ss
movsl
lcall
movsl
sub
scas
aaa
sub
stos
push
loopne
and
movsl
fildl
mov
icebp
or
jl
inc
jb
int3
jmp
into
nop
enter
psubq
loopne
scas
jns,pt
jno
or
xor
mov
add
mov
icebp
lret
xchg
pop
jmp
outsl
out
add
outsb
pop
cmp
sub
and
push
pop
in
hlt
shll
cmp
cmp
leave
lods
movsb
outsl
push
add
ficompl
mov
sub
insl
xchg
daa
pop
sub
push
daa
outsb
sub
add
sub
loopne
sbb
xchg
push
imul
push
adc
scas
pop
or
subl
jl
out
adc
lds
mov
add
bound
add
leave
mov
mov
sub
mov
out
xor
insl
xor
cmp
lock
std
xchg
int
sahf
mov
sbb
cli
mov
mov
data16
cmp
mov
sbb
cmp
jae
stos
lret
into
test
xor
nop
ja
test
scas
dec
out
push
lret
cmpsl
pusha
xchg
insb
test
dec
in
ja
ret
xchg
sahf
in
out
xchg
sub
insl
mov
outsl
das
pop
jg
adcl
jae
sbb
xchg
jmp
jns
popa
dec
or
lahf
jge
jp
mov
dec
sbb
push
aam
sbb
dec
xchg
dec
xor
inc
jl
mov
jns
and
pop
pusha
jmp
ss
addr16
pop
leave
cwtl
inc
push
stos
fisttpll
lahf
mov
jo
pop
in
cltd
js
aaa
sbb
ret
xrelease
xchg
xlat
fwait
sub
push
jecxz
adc
jae
outsb
pop
testb
push
daa
dec
add
frstor
sub
sub
shll
fcoml
sbbb
icebp
xchg
outsl
add
push
mov
outsl
out
and
scas
xor
out
lock
out
push
cld
out
ret
int
in
sbb
sub
jg
ficompl
ret
jmp
sub
inc
mov
imul
scas
push
std
clc
sub
mov
mov
mov
cmpsl
add
in
sub
and
cmpsb
pop
inc
icebp
xchg
out
push
xchg
add
push
xor
popf
sub
and
jb
inc
xchg
movsl
inc
into
andb
imul
insl
cmpsb
imul
sbb
sub
test
iret
fs
out
dec
mov
inc
jae
push
jae
test
fisubrl
scas
mov
lret
xor
stos
fsubrl
mov
cmp
insl
pop
pushf
mov
add
mov
hlt
mov
dec
mov
sub
and
dec
and
sti
jp
loope
scas
data16
dec
pop
icebp
ds
xchg
jmp
mov
push
mov
sub
inc
inc
or
scas
outsb
fnstsw
int3
xchg
lret
ficoml
out
lds
adc
lds
subb
mov
mov
jmp
fwait
xchg
or
aas
pop
ret
cmp
out
insl
popa
xor
cmc
aaa
jbe
push
mov
mov
ss
jne
push
mov
xor
rorl
jge
pandn
mov
push
sbb
and
ljmp
cmp
gs
std
inc
pop
cvtps2pd
enter
sbb
roll
lods
out
dec
subl
lock
bswap
add
pop
cltd
xor
int
ss
push
test
inc
repz
cs
fs
push
or
jle
adc
fcoms
in
add
dec
in
inc
sarl
push
mov
fsts
push
cmp
adc
xor
cld
loop
dec
ja
clc
cmp
test
scas
enter
mov
lock
mov
inc
lods
jo
mov
xor
fs
lahf
mov
popa
push
por
or
aas
push
pusha
cmp
lcall
popf
in
out
aad
cmpl
imull
ds
hlt
movsb
sahf
cltd
stc
adc
stos
fwait
jo
leave
out
ficoml
jecxz
jae
dec
stc
mov
jecxz
mov
pushf
ja
or
xchg
fidivl
add
sub
pop
push
adc
dec
jno
mov
inc
dec
push
jge
adc
cmp
ret
std
pop
xchg
pop
icebp
and
shr
es
cs
xor
js
or
nop
insb
ds
jecxz
dec
in
insb
fiaddl
dec
mov
cld
push
cmpsb
ljmp
mov
stos
xlat
mov
sub
inc
fmul
inc
jno
adc
insb
std
mov
jmp
pop
iret
shlb
sbb
pop
xchg
xchg
fildll
lret
jae
fidivs
push
popf
inc
sti
cmp
scas
push
fmull
and
enter
add
lods
dec
inc
or
and
or
inc
jmp
aad
mov
sbb
popf
jno
movsb
cmpsl
cltd
ds
mov
sti
ss
cld
sub
shl
insl
cmp
dec
xchg
sub
dec
mov
loope
add
pop
imul
iret
cmpsl
and
push
pop
ret
rcrl
scas
xlat
repz
jae
add
inc
sub
rcll
dec
mov
fcompl
shlb
popa
xor
stc
ss
mov
sub
popf
jge
and
dec
sbb
in
lcall
push
clc
mov
popa
jge
bound
movsl
dec
sbb
mov
test
xorb
fs
out
testb
dec
and
in
scas
mov
scas
dec
pop
push
cmpsl
jnp
sbb
or
xor
xchg
mov
js
negl
aaa
sbb
and
dec
std
mov
cmpsb
push
xchg
sbb
cltd
shrb
out
cmc
notb
inc
out
int3
jnp
ss
aaa
scas
ja
cwtl
pop
cli
inc
xchg
pop
xor
pop
aaa
dec
jo
or
sub
inc
imul
xor
push
mov
repnz
pop
js
out
sbb
repz
hlt
shrb
adc
rcll
push
jne
push
into
cld
adc
xchg
mov
mov
repnz
inc
mov
xchg
xchg
imul
jle
sbb
aas
lea
jns
cmpsl
sub
ret
push
aad
je
icebp
dec
enter
and
adc
fcomip
xchg
or
or
adc
sub
xor
imull
sbb
stc
lahf
out
cltd
xor
xchg
cmp
and
in
add
xor
mov
out
jg
aas
and
sahf
sub
mov
imul
gs
or
inc
adc
push
xlat
inc
ds
pushw
les
pushf
nop
push
cmp
int3
std
sbb
xchg
and
xchg
sbb
xor
cmc
fwait
sti
inc
pop
stos
xchg
lods
aaa
imul
add
popa
or
insb
sbb
cmpsb
sti
xchg
mov
jg
andb
int3
push
mov
mov
pop
or
daa
pusha
not
and
sbb
cmp
sbb
mov
sbb
adc
cltd
repz
je
cmp
inc
rolb
inc
inc
test
pushf
xor
test
shll
sub
mov
push
and
or
ljmp
inc
shlb
xor
sub
cmp
loope
mov
iret
enter
popf
icebp
shrb
mov
dec
in
xor
xchg
sbb
bound
mov
lods
add
cwtl
testb
adc
pop
popa
jmp
xor
inc
lea
out
cld
adc
push
mov
test
sbb
mov
pop
rolb
mov
jg
xlat
jecxz
icebp
aad
and
stc
in
push
jecxz
xor
addb
xchg
push
pop
mov
inc
cs
xor
fisubrs
jb
and
cmpsb
cmp
lock
clc
mov
out
add
mov
push
sub
test
add
mov
mov
sbb
xlat
jns
es
add
out
mov
xor
push
or
inc
xchg
ret
push
fbstp
lahf
sarb
push
mov
mov
jae
xchg
jo
inc
inc
clc
or
sub
test
call
das
femms
in
jge
mov
dec
xor
mov
out
outsb
push
and
inc
in
or
shrb
lea
xchg
popf
test
or
mov
repz
gs
mul
shrb
arpl
fxch
mov
dec
or
fildll
mov
rcl
test
stos
pop
inc
adc
imul
or
imul
jnp
cmc
aaa
mov
jle
sbb
jno
sub
ret
mov
sub
mov
mov
dec
jbe
or
add
adc
mov
or
in
jg
enter
add
xchg
fisttpll
lea
xchg
jne
in
cmp
andl
addr16
jmp
popa
gs
inc
iret
inc
dec
imul
outsb
andl
fcompl
and
mov
testb
dec
dec
clc
xchg
fs
pop
jne
sti
lock
test
inc
pop
loop
out
ljmp
inc
daa
add
sbb
gs
daa
inc
loope
push
daa
lret
jno
jmp
ja
je
test
pop
xor
pop
xchg
scas
outsl
pop
sarb
fstl
rorl
pusha
sub
xor
sub
shlb
sbb
mov
lds
cmp
mov
push
cmp
lcall
cmp
or
leave
adc
lahf
addr16
jle
out
cmp
mov
jg
xchg
push
insl
inc
repz
movsl
rolb
das
cmpsl
push
insl
sbb
adc
iret
mov
push
daa
jl
pop
out
outsl
mov
rclb
dec
and
and
out
outsb
les
lods
and
mov
push
sarl
in
inc
mov
and
int
ljmp
and
add
pop
adc
flds
push
fnstcw
mov
fwait
xchg
repnz
in
mov
fstl
cmp
pop
loopne
loopne
movsl
ljmp
popf
rorl
fstpt
or
jmp
xor
jl
inc
cwtl
adc
push
push
or
int3
testl
push
loop
mov
inc
sbbb
movsb
stos
or
pop
xor
out
sub
loopne
fisubrs
adc
push
in
sbb
lock
add
addr16
repnz
xor
fsubr
pushf
mov
cmp
add
or
add
xchg
mov
mov
call
add
stos
das
xor
call
nop
push
mov
aas
aad
lahf
jp
mov
cs
add
xor
es
or
test
push
insl
ja
repnz
pop
pop
mov
icebp
rolb
or
lahf
test
xchg
popf
repz
pushf
xor
pop
ja
jbe
xchg
sub
lock
sbb
adc
inc
dec
bound
adc
lods
xlat
ja
into
push
cmp
lret
xchg
jae
add
sub
out
lret
fildll
stc
gs
sbb
sbbb
nopl
xchg
jno
repnz
mov
testb
cmp
enter
cs
pop
push
ss
movb
ljmp
cmp
mov
push
scas
adc
adc
out
jp
test
cmpsb
push
gs
xor
jns
nop
add
mov
dec
or
cld
sbb
les
ja
fbld
cmp
cmc
outsb
dec
mov
and
dec
cmpsl
cwtl
ret
add
dec
mov
jno
mov
aas
sar
pop
mov
mov
cltd
sbb
movsb
add
mov
sbb
cmp
mul
mov
arpl
test
mov
test
lret
test
and
mov
loopne
pop
mov
pop
lcall
mov
test
iret
lods
inc
jge
lods
xchg
inc
hlt
xchg
test
stc
mov
divl
jge
or
je
aam
fnstcw
repz
cmp
add
or
popa
call
mov
jmp
divl
adc
xchg
sub
sbb
xlat
push
sbb
push
lock
sbb
or
mov
pop
jp
xchg
inc
pushf
jnp
sub
int3
scas
jb
loop
test
mov
sub
mov
sub
sti
repz
mov
push
lcall
inc
fwait
pop
test
mov
inc
ss
push
or
adc
xor
dec
stc
push
mov
xchg
out
inc
push
fistl
outsl
lods
pop
add
xor
test
repz
shl
jle
add
call
push
jecxz
mov
pop
aam
sub
dec
in
jl
daa
push
mov
sub
cmp
inc
jnp
lods
mov
dec
loopne
addr16
push
jg
and
sarb
mov
ds
cmp
addb
insb
loope
insl
out
mov
push
outsl
jmp
inc
nop
decb
push
sub
rclb
into
xchg
inc
dec
iret
inc
xchg
mov
ja
mov
repnz
adc
or
test
addr16
test
out
push
into
xor
add
mov
dec
dec
andb
mov
out
or
jnp
pop
scas
xchg
out
or
shll
cmp
fisttps
test
jg
outsb
imul
test
subb
pusha
aaa
push
push
das
call
add
mov
mov
fs
mov
in
push
aas
jnp
or
call
mov
add
icebp
and
cmp
out
rcrl
dec
popf
cmpsb
lahf
jecxz
mulb
repnz
mov
lret
jecxz
outsb
sbb
les
sub
and
sbb
gs
imulb
loop
sbb
cli
cmp
js
jl
and
inc
dec
stos
add
outsl
cmpsb
or
paddw
mov
xor
and
inc
push
dec
jmp
lock
fwait
cmp
call
and
or
inc
add
je
popa
aas
fnstcw
cld
testb
jp
pop
mov
int3
push
loop
xchg
inc
xor
imul
movb
sti
pushw
jb
aad
getsec
pmulhuw
cs
stos
jl
push
or
repz
push
xchg
inc
inc
mov
sub
inc
mulb
decb
adc
shrb
ja
in
sub
adc
jl
out
shr
mov
push
jge
das
ss
roll
movb
sub
fstpl
jo
mov
xor
divl
es
jo
sub
mov
cwtl
popf
imul
xchg
jb
sbbb
jmp
sarb
xor
addb
outsb
xchg
jge
leave
sahf
push
dec
mov
call
movsb
adc
add
int3
mov
fs
lret
aas
push
jge
pop
adc
rorl
and
push
mov
push
sbbb
stos
sbb
cli
in
data16
cmp
or
dec
jnp
cmp
dec
push
andb
jge
loop
dec
ss
push
pop
jecxz
and
add
lea
push
insb
lods
jge
xchg
lret
in
repnz
gs
push
jne
mov
xor
loop
out
cs
inc
bswap
mov
cmp
lods
mov
push
in
jne
xchg
pop
scas
fidivl
add
ret
leave
fbstp
and
cmovge
jl
jmp
dec
xchg
mov
push
cmp
movsb
leave
inc
cli
or
mov
add
mov
fcoms
pop
mov
mov
lret
mov
fwait
jle
hlt
sti
jno
jns
or
jo
dec
or
mov
pop
call
or
mov
test
fiaddl
loope
and
pop
push
stc
jae
mov
mov
out
mov
sbb
fsubs
or
hlt
sub
in
imul
push
cmp
in
jl
and
inc
and
and
outsb
or
repnz
mov
add
ret
lods
je
xchg
mov
in
cmc
repz
cmp
aas
mov
sub
cs
adc
mov
mov
mov
and
inc
fstps
in
jge
adc
add
fldl
pop
into
push
scas
push
ret
pop
cld
add
pop
loopne
mov
pop
stos
xchg
call
shrl
pop
pop
insl
rcl
dec
jo
and
gs
repz
jns
bound
cld
push
mov
scas
std
das
js
pop
bound
lahf
cmpsl
jg
sub
das
mov
mov
sbb
push
test
adc
mov
rclb
fs
mov
mov
add
sub
sbb
sbb
sbb
pusha
fsubp
jg
jecxz
loopne
je
jnp
loopne
cmp
sub
mov
ret
fadd
repz
add
push
xor
push
inc
push
in
test
mov
icebp
mov
adc
xchg
cli
pop
daa
out
aam
add
shl
jae
nop
in
pusha
in
cli
ret
or
lods
jo
mov
call
mov
xchg
mov
aam
pop
aas
and
daa
lcall
cmp
das
add
call
sahf
mov
xchg
xor
int3
lcall
sbb
andl
cmp
sbb
mov
cmp
dec
outsl
iret
pop
push
dec
rcl
cmp
xchg
push
inc
test
icebp
add
mov
fnstenv
pushf
sub
jne
mov
je
adc
dec
stc
pusha
test
arpl
loop
jg
inc
clc
es
fdiv
repnz
add
xlat
in
xchg
notb
icebp
stc
sub
push
aaa
and
jecxz
mov
push
out
mov
ljmp
fs
aaa
cmp
sub
nop
enter
pop
push
pushl
loopne
add
dec
xchg
subb
ret
lods
dec
pop
out
sbbb
lcall
rclb
sub
pushf
mov
fdivr
pushf
jp
sbb
push
cmpsb
jp
dec
cmp
out
mov
cmp
movsl
mov
mov
dec
and
jmp
dec
push
jmp
sbb
add
jno
dec
push
mov
cs
jns
rorl
xchg
pushf
fs
pop
es
sub
popa
test
sub
fldl
xchg
int
sbb
js
orb
lods
push
adc
repnz
push
mov
testl
int
cli
pop
xor
mov
xor
jmp
repz
out
enter
cmp
ja
subl
xchg
jmp
fldenv
lods
jle
xlat
pop
sbb
cmpsl
pop
adc
in
jae
lock
add
enter
jecxz
cmp
mov
movsb
lahf
pop
mov
push
aas
push
popa
dec
imul
push
sub
aam
sub
inc
das
std
jns
xor
jle
orb
adc
out
jmp
dec
push
dec
repz
push
fcmovnb
jl
push
jae
adc
outsl
add
daa
xor
loopne
mov
jecxz
and
or
mov
cmpsl
pop
mov
and
adc
ret
push
mov
add
mov
jo
nop
dec
or
in
inc
pop
xor
ret
jmp
cld
sbb
push
sub
dec
xchg
std
jae
sbb
pop
test
inc
mov
jecxz
addl
mov
dec
mov
cli
add
hlt
fbld
jl
mov
les
xchg
outsb
sbb
shl
push
sbb
clc
jecxz
loopne
fistpl
into
mov
and
fs
cmp
xchg
or
stos
sbb
imul
xchg
pusha
xchg
aaa
test
pop
sub
bound
mov
iret
cli
and
fidivl
push
pop
xchg
out
jns
lcall
mov
sbb
adc
divl
hlt
outsb
ffreep
dec
fsubrl
inc
mov
sti
sub
ja
xchg
lahf
into
jecxz
mov
xchg
mov
dec
sub
sub
mov
inc
cmpsb
pushf
hlt
jg
xor
int3
adc
inc
arpl
inc
xor
adc
pop
push
out
lret
mov
sub
lods
adc
mov
cmp
jp
enter
es
jb
data16
add
clc
cmp
sbb
pop
imulb
sub
lret
jae
outsb
sbb
add
es
or
mov
into
call
add
inc
inc
sub
test
jbe
cmp
int3
mov
inc
and
mov
push
insb
insb
sbb
and
cmp
out
cmc
mov
int
cmp
xor
jl
ss
dec
adc
test
ja
in
gs
mov
push
mov
cmpsb
sarl
and
jne
popf
pusha
cmp
mov
ja
adcl
push
push
or
js
jge
loopne
add
mov
sbb
stc
add
aaa
repz
add
cmp
pusha
in
dec
sti
into
pop
cwtl
adc
sahf
jmp
sbb
ss
cmp
fnstcw
aam
adcl
std
iret
mov
add
stos
xchg
out
enter
cli
xchg
repz
in
and
notb
aam
test
push
sbb
mov
xor
adc
das
lret
push
loop
mov
pop
lahf
jl
addr16
iret
jl
scas
push
sbb
fcompl
movsb
jo
sub
push
jg
fdivrs
mov
lods
loop
in
xor
fs
popf
andl
mov
or
es
inc
out
mov
mov
jno
add
mov
xchg
movsl
adc
cwtl
lods
mov
incb
mov
add
inc
andl
and
or
jns
fnstcw
stc
nop
dec
dec
in
lods
pop
mov
cli
xor
jb
insl
pop
lds
pop
inc
pop
dec
sub
and
push
cltd
movsl
add
cmc
sbb
pop
or
push
sub
mov
scas
sbb
outsb
cmp
dec
mov
enter
js
cmp
cmc
xor
in
loopne
jae
inc
xchg
cs
sbb
cltd
jl
ret
clc
cmp
pop
int3
mov
icebp
shll
cli
in
les
xchg
int
push
imul
aas
insl
pop
xchg
jge
nop
pop
mov
cmp
in
inc
addr16
lds
sub
inc
mov
mov
enter
les
jne
cmp
adc
sub
in
int3
rep
xchg
fsubp
and
fildl
subb
mov
arpl
cmp
sub
inc
dec
dec
mov
lret
aaa
sub
daa
xchg
adc
imul
sbb
test
pop
add
ret
mull
jmp
roll
bound
mov
push
test
pop
adc
out
or
pushf
push
mov
fs
sub
popf
push
dec
in
cld
cmpsb
add
jns
fs
jno
mov
sbb
dec
psubd
mov
test
adcl
pushf
mov
cli
fcomps
or
xor
iret
or
rorl
clc
imul
xchg
addr16
les
outsl
ret
cmp
in
incl
rcrb
shr
aas
cmp
in
pushw
mov
jbe
cmp
xor
pushf
mov
jge
xchg
idivb
adc
rolb
mov
fcoms
adc
lahf
lcall
mov
dec
mov
sbb
cmp
mov
movsl
loope
mov
addr16
sti
idivb
mov
xchg
pop
decl
push
push
sti
cltd
cmp
mov
into
in
lods
xor
mov
inc
mov
add
xlat
mov
in
hlt
inc
repz
adc
add
dec
enter
cmp
outsb
add
iret
mov
push
push
cli
push
jne
mov
xchg
stos
jle
dec
in
or
gs
loope
lahf
pop
mov
mov
bound
dec
dec
xor
xor
dec
loop
dec
das
dec
jl
cmp
daa
loope
pop
pop
mov
sti
sarb
pusha
inc
aaa
sar
popf
pop
gs
xchg
sub
insb
lock
out
fistps
aad
arpl
or
bswap
mov
xor
mov
mov
sub
sbb
sbb
push
test
and
fbstp
addr16
in
sbb
mov
out
xchg
into
mov
dec
pop
fwait
cmp
into
inc
mov
dec
mov
scas
jl
pop
movb
dec
adc
jnp
push
jp
xchg
xor
fimull
loopne
xor
addr16
push
sub
mov
mov
or
or
push
cli
jb
jns
into
jo
push
lret
or
stos
sbb
jbe
imul
movsb
mov
push
fsubrp
stos
mov
mov
inc
cld
outsl
int
dec
adc
cmp
ja
xlat
inc
or
cmp
js
mov
cmp
into
std
mov
mov
or
push
or
fwait
xchg
and
and
push
imul
push
sbb
clc
fs
imul
adcb
fisttpll
mov
push
sbb
cmp
mov
xchg
pop
dec
inc
dec
cs
push
pushf
mov
gs
lods
push
dec
fs
rcl
adc
fwait
push
xchg
lods
fwait
mov
and
lahf
jge
fstl
push
ljmp
lea
or
adc
jmp
aas
stc
jns
sbb
sub
push
ja
xchg
jo
idivl
inc
in
cmc
mulb
outsb
mov
imul
and
arpl
pop
loop
aam
mov
sti
and
dec
jae
sbb
mov
fwait
mov
pop
lea
mov
fwait
pusha
mov
jnp
outsl
scas
cld
xor
mov
in
pop
push
loopne
dec
ja
cmpsl
push
mov
xor
mov
loopne
dec
sbbb
lret
bound
jge
into
dec
pop
pop
xchg
pop
or
out
cwtl
imul
outsl
sub
mov
je
loope
test
fsts
cmc
cmp
fldcw
jl
fldenv
push
xorb
ret
cmp
ss
mov
push
cmp
inc
clc
dec
popa
in
leave
push
dec
adc
imul
lcall
dec
jmp
dec
jbe
or
and
scas
dec
push
cmp
lahf
cmc
movsl
and
jge
mov
fs
mov
cmc
sub
mov
loop
pop
push
mov
mov
out
xchg
pop
out
adcl
mov
or
mov
pop
movsl
nop
insb
xchg
bound
fsubl
adc
dec
test
mov
pop
divl
cmp
cli
mov
dec
fiadds
stc
sbb
xchg
aad
sbb
pop
in
xor
enter
xchg
jecxz
in
test
and
lret
jecxz
repnz
out
sub
mov
mov
sahf
enter
mov
testl
cmp
neg
imul
test
arpl
arpl
inc
data16
cs
push
pusha
mov
addb
cmp
pushf
repz
enter
fildl
fmul
dec
sub
lea
cmc
pop
imul
inc
shll
xchg
jnp
mov
add
push
jo
xchg
xor
xor
xor
out
jl
shl
decb
add
pop
mov
stos
sub
mov
outsl
ret
jno
outsl
mov
inc
xor
push
mov
insb
mov
sbb
je
xlat
jge
lret
mov
int3
fwait
mov
or
push
sar
xor
xor
jne
cmpsl
icebp
push
sub
jno
into
sahf
sbb
inc
cmp
or
outsb
xor
js
mov
out
xor
fcoml
sarl
test
and
mov
cwtl
pusha
sub
mov
rolb
push
out
loopne
xor
mov
ja
xchg
and
ret
adc
jo
or
adcl
mov
stos
fwait
mov
cmp
fbstp
enter
call
cmp
mov
push
and
stos
decl
xor
sarl
mov
xor
ret
loope
mov
shr
mov
xor
lea
ljmp
aas
cmp
test
sub
lret
adc
int3
inc
mov
mov
stos
cmp
mov
scas
js
repnz
mov
mov
add
adc
andl
bound
adc
mov
push
sub
lock
cltd
cmp
xchg
das
mulb
pop
dec
push
adc
nop
mov
push
adc
rolb
lods
test
mov
adc
fs
push
cli
push
insl
cmpsb
and
push
push
sbb
pushf
xor
pushl
adc
fistpl
icebp
cli
add
ja
lock
loopne
sub
push
dec
and
pop
xor
push
mov
ds
and
rcll
data16
clc
lds
cmpsb
dec
and
or
cmpl
test
mov
mov
mov
dec
enter
xor
ds
ljmp
sbb
jne
xlat
outsb
es
jb
addr16
nop
int3
xchg
mov
mov
adc
add
xor
mov
dec
lock
dec
xchg
dec
cmp
pop
fisubrl
jle
sti
sub
hlt
repz
pmaxub
dec
inc
push
or
or
jmp
cmc
cwtl
jecxz
stc
sub
mov
rcrl
mov
outsl
gs
pop
add
jo
xor
imul
outsb
mov
mov
add
iret
das
ficompl
fdivrs
pop
mov
xor
inc
or
mov
cld
push
sbb
outsl
mov
enter
pusha
dec
ljmp
in
lahf
inc
dec
pop
mov
push
loope
push
fwait
rcr
xchg
decb
cltd
or
jo
xchg
stos
setl
sbb
mov
jnp
mov
dec
xor
outsl
jmp
cmp
pop
leave
adc
jne
jmp
ss
mov
lods
mov
mov
xchg
into
repnz
cli
in
mov
popf
cmp
loopne
and
cmc
pop
mov
out
and
sti
xor
movsb
push
lods
lahf
enter
mov
or
and
dec
xorb
sbb
sub
ja
sbb
cs
pop
cmpsb
imul
ss
fbstp
roll
mov
pop
arpl
mov
jnp
scas
or
lods
pop
ss
xchg
lret
mov
or
pop
repz
pushf
data16
sub
jl
jb
cltd
aaa
xchg
movsb
rcrb
into
cltd
mov
insl
adc
and
adc
insb
arpl
jnp
outsl
loopne
cltd
mov
ret
jge
mov
je,pn
xchg
mov
add
and
xchg
xor
xor
aad
inc
jge
jo
cs
fdiv
cmp
ds
xchg
sbb
dec
pushf
xlat
std
jbe
jge
lcallw
rcrl
adc
xchg
push
xlat
xchg
in
sti
pushf
jmp
enter
imul
push
add
push
outsb
pop
cmc
cmpsb
mov
cmpsl
mov
pushf
xlat
call
sahf
leave
jge
jae
cmp
mov
sub
dec
std
jns
out
jno
add
mov
mov
add
les
xchg
mov
adc
call
es
insb
xor
movsl
cld
jbe
jl
jg
pop
jns
adc
mov
or
sbb
add
inc
add
mov
rolb
out
movsl
xchg
xchg
sub
add
mov
jnp
mov
cmc
stos
in
lds
insb
cmp
mov
out
inc
xor
xor
fwait
sbb
lods
repz
push
adc
dec
pop
sbb
push
pop
pop
mov
in
push
cmp
dec
add
aam
negl
adc
ret
jae
popf
pop
pop
cmp
enter
sbb
stc
clc
sahf
les
and
paddsw
fdivrl
lods
movsw
push
xchg
outsb
xchg
mov
call
adc
imul
cmp
cltd
cmp
pop
push
dec
mov
mov
adc
test
outsb
xchg
jbe
or
pushf
rcll
mov
popa
sbb
sahf
mov
jmp
imul
cmp
test
xchg
jnp
mov
mov
and
sub
ss
or
adc
cmc
jp
fs
test
in
cwtl
xor
mov
add
lahf
xchg
mov
ja
movsl
test
pop
enter
xchg
adc
push
out
movsb
sub
ret
ret
cmpsl
nop
gs
jecxz
ret
aas
push
std
pushf
cmp
xchg
push
andl
repnz
fisttpll
outsl
push
nop
sub
xchg
mov
out
popa
cmpsb
jne
add
fwait
dec
mov
aam
sbb
fs
out
fiadds
add
jge
xor
mov
ret
fwait
mov
stos
out
aaa
sub
jno
hlt
xor
mov
and
fs
dec
popf
data16
mov
out
xchg
inc
jg
mov
sub
adc
lret
adc
mov
lret
decl
je
sahf
aam
subl
testb
nop
lret
push
add
push
test
add
pop
push
jl
loopne
push
sub
dec
pop
je
and
lods
xchg
sub
out
in
push
jecxz
sbb
out
mov
xorb
lods
lret
and
ss
sbb
xchg
add
jmp
inc
out
xchg
or
add
mov
test
xor
ret
mov
mov
cmp
xchg
fistpl
push
mov
pop
lahf
imul
cmc
out
mov
or
lock
jns
jmp
popa
cmp
adc
xchg
stc
addr16
out
testl
inc
xlat
inc
fwait
insl
int
loop
loope
dec
mov
mov
xchg
cmc
rol
inc
ret
sbb
push
mov
xorl
jns
ror
sarb
adc
mov
pop
insl
sbb
mov
stos
pop
jo
insl
inc
stc
lret
xor
repnz
xorb
pop
mov
cld
xor
bound
scas
cmpsl
sahf
pop
out
jns
push
insl
jp
out
jne
push
subl
sbb
dec
mov
xchg
repnz
outsl
push
aaa
jmp
xchg
pop
xor
ficompl
ljmp
scas
push
sbb
lock
pop
inc
ret
dec
xchg
jno
movsb
mov
push
cmp
jno
mov
xor
adc
cmp
test
cs
shrl
push
call
ljmp
jb
aam
in
and
inc
icebp
rcr
pusha
sbb
push
xchg
or
mov
sbb
mov
fbld
mov
add
sub
pop
aam
shll
shlb
lea
inc
mov
outsl
cli
jbe
or
fcomps
dec
insl
in
leave
sti
stc
mov
call
mov
add
inc
inc
pop
fistpl
sub
mov
fmuls
mov
mov
sbb
loope
arpl
sbb
mov
int3
pop
push
add
inc
add
mov
into
pop
sbb
add
jecxz
fbstp
inc
pop
cmpsb
nop
pop
dec
ffreep
ret
jnp
sub
xchg
and
lret
dec
movsl
jl
jnp
add
cmp
int3
repz
gs
push
xor
cltd
jge
out
insb
mov
int
pop
in
adc
cmp
sub
loop
jp
xor
fisttpll
in
sub
push
pop
add
pop
jne
sub
ja
and
mov
xchg
xchg
inc
mov
stc
sub
rorb
lea
mov
cwtl
je
movsl
sbb
sarb
sub
std
pop
icebp
sahf
clc
movsl
jg
call
jmp
inc
pop
jo
sbb
jmp
popa
push
or
in
xor
cmp
dec
mov
popf
jae
and
jnp
mov
jg
das
loop
mov
subb
mov
cld
in
test
nop
stos
repnz
cmpsl
adc
mov
xchg
jg
leave
shll
adc
sub
popa
sub
push
aad
push
bnd
mov
outsl
cmpsb
js
nop
mov
scas
mov
lods
ror
push
push
pop
sbb
rcrl
sti
adc
pop
cmp
lods
inc
imul
or
mov
fdivrs
push
inc
xchg
pop
out
mov
das
hlt
mov
fisubrs
cmpsb
addr16
loop
sbb
adc
push
sbb
fwait
or
mov
mov
xlat
cltd
mov
xchg
jo
mov
xor
jmp
scas
push
pop
sub
ret
inc
movsl
dec
out
sbb
insl
dec
mov
inc
fwait
and
sbb
and
test
pop
pop
cs
pop
js
dec
imul
inc
and
and
mov
inc
xchg
sub
dec
cmpb
push
mov
cltd
clc
pop
push
xchg
jns
push
jp
jnp
in
fdivrl
adc
shl
xchg
inc
iret
jl
insb
sbb
xchg
bound
cmpsl
repnz
mov
out
push
cmp
rolb
push
mov
pop
push
dec
push
lods
jmp
aam
xchg
shll
add
sub
inc
and
push
mov
add
mov
push
repnz
aam
aas
sti
cmpsb
push
push
rcr
adc
or
shlb
add
int3
ljmp
xchg
sbb
jbe
cmp
mov
cmp
cmpsl
pop
mov
jge
push
push
push
pop
mov
fdivs
cmpsb
mov
jg
aaa
mul
jp
mov
jo
test
int
jmpw
adc
mov
jg
xlat
push
mov
std
xor
add
dec
es
xchg
ljmp
stc
cli
xlat
stos
mov
je
sbbl
inc
test
cmc
mov
and
or
or
pop
das
push
lahf
fbld
lret
jno
pop
lods
mov
mov
sub
addr16
insl
punpckldq
or
xor
mov
daa
mov
mov
mov
aam
push
cmp
lods
sub
nop
mov
xor
nop
ret
test
adc
push
xor
push
or
testl
testb
and
adc
cmp
out
dec
fnstenv
push
xchg
fwait
push
lds
pop
test
adc
xor
insl
cmp
repnz
ja
lcall
loopne
aam
hlt
cmc
jo
mov
shlb
adc
jg
inc
lods
test
fsts
pushf
loop
pusha
test
add
in
and
jl
shrb
js
movl
hlt
cmp
jmp
add
test
sub
jo,pt
sub
js
ljmp
pop
ret
mov
xor
rclb
push
enter
dec
jl
cmpsl
push
fucomp
test
pop
mov
xor
rcrb
dec
sub
sub
xor
xor
push
pop
sub
cmpsb
mov
mov
push
out
test
imul
rol
xchg
stc
sub
aad
add
scas
mov
mov
outsb
mov
faddl
ret
sbb
les
adc
repnz
xor
mull
or
or
mov
stc
ss
stc
mov
jg
add
dec
test
xchg
cmc
std
sub
mov
sbb
push
adc
push
sub
je
or
hlt
dec
aas
sbb
ret
push
mul
shr
jns
iret
jo
xor
inc
psubusb
rorb
lret
sarb
adc
mov
mov
pop
enter
fidivs
rol
sar
stos
pop
aas
jno
push
clc
sbb
out
imul
ss
repnz
pushf
mov
popa
in
mov
mov
add
stos
sub
jecxz
lret
lcall
nop
aas
or
add
inc
mov
ret
mov
push
xchg
cli
int3
adc
xor
rcrb
sub
int3
sbb
lahf
cs
sti
hlt
sarl
pushf
sahf
dec
sub
add
jnp
and
sub
push
push
mov
sub
jb
sbb
mov
idiv
add
mov
fists
jle
jno
jb
test
mov
adc
sti
push
pop
arpl
pop
add
iret
pop
insb
mov
xchg
mov
mov
fstpl
xchg
inc
iret
jo
neg
filds
lret
mov
mov
cmp
loope
loope
addr16
lock
jge
sub
cmpb
cmp
imul
mov
sub
sarb
mov
inc
sbb
js
jg
sbb
int3
imul
pop
jne
pop
mov
aas
ficoms
mull
push
adc
dec
dec
test
pop
cmp
sbb
cli
cltd
popl
movsb
xchg
jbe
ds
dec
push
push
mov
mov
dec
testb
jecxz
cmp
pop
and
xor
mov
xor
mov
call
jb
xor
mov
testb
or
jmp
sbb
mov
daa
leave
rep
add
sub
dec
mov
pop
js
xor
out
test
adc
push
fldln2
add
adc
or
cmp
sub
stos
mov
lock
inc
pop
shl
in
pop
insl
loope
outsb
dec
push
insl
gs
sarb
mov
cmp
mov
and
ljmp
outsl
lcall
insb
outsl
cwtl
fdivrl
mov
mov
adc
push
push
insl
xorb
negb
xlat
sti
xor
cmpsl
in
xor
adcb
sub
jmp
arpl
repz
inc
or
jl
inc
inc
js
cmp
dec
mov
jmp
shlb
lods
cwtl
aad
dec
inc
iret
bswap
xchg
cmp
stos
sbb
std
in
fistl
jae
incb
xor
push
mov
pop
daa
dec
shl
or
adc
mov
adc
cmp
ljmp
mov
test
std
pop
jo
fwait
sub
sbb
inc
mov
cmp
es
jp
popf
push
movsb
lods
or
mov
aas
fadd
test
push
ja
pop
sub
push
mov
and
call
or
lds
xchg
shl
sbb
mov
jbe
push
stc
cli
shrb
testl
lahf
pop
dec
ret
pop
cmp
push
dec
scas
stos
lods
jl
jne
scas
mov
out
mov
loop
jp
push
mov
jo
pop
in
inc
mov
xor
je
in
fwait
mov
out
pop
or
mov
mov
mov
fistl
mov
iret
mov
out
fildll
dec
call
adc
add
pop
mov
data16
movsl
divl
pushf
in
adc
mov
mov
mov
mov
sub
and
gs
push
cld
test
jb
cmc
add
call
adc
or
out
dec
dec
push
sbb
jle
push
fsub
pop
adc
and
hlt
inc
enter
int
xchg
dec
sub
cmp
leave
mov
cmp
dec
xor
popa
adc
test
cmp
mov
sbb
cmc
lahf
lock
popf
push
push
fstl
pop
test
ss
adc
addr16
in
ss
cmp
sbb
pop
and
push
jns
ret
xchg
cmp
cli
test
test
sub
pop
rep
xchg
out
pushf
fstl
negb
daa
jo
push
ja
dec
hlt
mov
or
push
in
add
test
and
mov
adc
jecxz
ss
add
data16
inc
movsl
lret
aaa
imul
imul
pop
mov
adc
inc
xchg
xlat
imul
imul
frstor
loop,pn
pop
out
or
mov
xor
mov
movsb
and
xor
stos
mov
and
pop
ret
negl
mov
test
repnz
hlt
jo
insl
sbb
dec
dec
cli
xchg
arpl
out
pop
cld
mov
jl
mov
xor
sbb
pop
and
loop
outsb
cmp
and
add
sar
adc
loopne
sub
jmp
ficoml
sbb
push
mov
mov
enter
in
or
sbb
pop
jne
lds
pusha
jecxz
sbb
fldcw
cmp
push
shrl
pop
shl
xchg
roll
push
xchg
mov
lahf
mov
push
sarb
jo
sub
pop
mov
push
mov
filds
fmuls
aas
inc
test
dec
pusha
call
jp
inc
add
ljmp
jae
mov
leave
inc
mov
jle
fstpl
sub
cli
and
or
adc
outsb
pop
sub
xchg
clc
mov
into
inc
sub
shrl
mov
shrl
pop
daa
repnz
mov
into
ss
test
mov
lock
jno
xchg
mulb
push
ds
sbb
jo
jns
sbb
test
adc
cmpsl
xor
push
enter
adc
aam
pop
mov
in
sub
dec
out
mov
movsl
mov
pop
shl
mov
ficoms
pop
call
mov
lea
pop
pop
outsl
adc
dec
hlt
sarb
shrb
dec
fldenv
les
sti
aam
insb
mov
mov
dec
inc
lods
sub
shl
add
jbe
dec
addr16
inc
mov
cmp
cltd
push
lods
push
or
xchg
mov
xor
jnp
fidivs
jmp
dec
sub
cmc
mov
push
lret
rcrb
push
popa
stc
add
and
popf
lods
mov
inc
stos
imul
push
shlb
lods
mov
repz
out
std
inc
push
push
push
sbb
ret
and
repz
pop
sti
clc
jns
inc
out
pop
jge
mov
or
je
std
mov
mov
xorl
jae
mov
and
cld
inc
inc
data16
push
orl
inc
xchg
fdivs
jge
bound
jno
cmpsb
ljmp
out
pushw
outsb
leave
jnp
add
add
sbb
lods
jae
fwait
mov
mov
scas
fdivr
mov
xor
lret
xchg
setns
pop
les
push
adc
xchg
mov
nop
test
into
mov
cmc
out
ficompl
push
dec
push
aad
repz
add
jns
push
jns
push
and
pop
imulb
es
jmp
pusha
xchg
jae,pt
inc
mov
mov
xchg
and
mov
mov
lcall
addb
cmp
fcmovne
rcll
test
mov
push
cltd
arpl
push
adcb
gs
sti
sbb
imul
pusha
rcrb
daa
mov
inc
or
jns
movsl
imul
pushf
jge
pop
ljmp
add
aaa
into
pop
jle
movsl
lods
outsl
or
pop
in
add
sbb
pop
xchg
cmp
stos
into
test
mov
push
add
or
mov
xchg
inc
hlt
fidivl
in
mov
sub
je
add
sbb
pop
dec
xor
mov
js
call
movsb
sub
js
mov
inc
mov
sti
in
pop
mov
xchg
or
push
mov
mov
ss
inc
fsub
jp
es
fisubrs
dec
mov
jbe
test
mov
icebp
push
sti
pop
mov
jecxz
imull
gs
add
dec
cltd
call
jns
jp
jg
xor
jo
pop
xchg
daa
jns
mov
popa
scas
jmp
or
mov
inc
adc
scas
mov
shlb
popf
fisttpl
and
mul
or
adc
test
push
daa
lahf
jp
aam
pusha
popf
push
mov
enter
xchg
or
ret
push
les
mov
leave
pop
mov
and
or
adc
xlat
das
sbb
fdivs
add
pop
jle
cld
and
jg
or
pop
jle
add
xor
push
cltd
adc
repz
pop
xor
add
pop
leave
sub
outsl
shl
mov
fists
frstor
mov
jns
mov
fucomp
imul
push
dec
je
mov
aad
cmp
loope
mov
jge
cmp
dec
mov
leave
cmp
stc
shrl
stos
and
rcrb
int
bound
shl
xchg
cs
sub
aas
sub
pop
or
push
mov
xchg
les
add
sub
nop
or
jnp
subb
imul
je
jmp
push
pop
fsubrs
jmp
mov
imul
push
add
lds
add
aad
call
negl
imul
pop
jns
sbb
rcl
shll
out
mov
pop
push
mov
int3
fdivp
rcrb
enter
flds
pusha
adc
sbb
mov
sbb
adc
pop
cltd
or
sub
daa
mov
or
xchg
inc
popf
jecxz
leave
mov
into
shlb
add
aas
das
add
mov
cmc
rcll
inc
in
mov
pop
clc
idivl
mov
nop
cmpsb
loope
pushf
rorb
hlt
out
imul
aam
push
jg
movsb
nop
and
cmp
ljmp
or
pop
ret
xlat
or
mov
pop
divb
cwtl
jge
gs
sbb
push
sbb
arpl
imulb
inc
into
mov
dec
push
outsl
pop
test
xchg
roll
cld
insb
sahf
rcl
ja
stc
sbb
jge
out
xor
jl
je
incb
pmaxub
test
aad
pop
xchg
xor
shrb
mov
shl
rclb
jnp
sti
dec
fbld
gs
cmpsb
xstore-rng
cmpsl
andb
cli
cltd
jl
jle
dec
dec
mov
addr16
sbb
inc
hlt
popa
dec
ret
jle
mov
iret
lret
inc
daa
rorl
sbb
cs
lock
les
in
push
push
popf
mov
or
sub
adc
lods
or
es
fwait
lcall
lret
mov
fwait
xor
fdivp
xchg
add
ret
jbe
jp
inc
and
das
add
xor
test
adc
ja
and
into
enter
xchg
inc
nop
hlt
data16
insb
mov
mov
sbb
sub
pop
cmp
mov
hlt
imul
outsb
xor
sub
xchg
bound
stos
add
nop
sub
cmc
cwtl
lods
cwtl
jnp
mov
cwtl
push
inc
imul
popf
dec
jmp
data16
out
mov
ret
mov
divb
ss
into
call
fld1
push
inc
push
scas
fisttps
mov
push
mov
jmp
mov
jp
pop
cmp
mov
dec
mov
adc
movsb
sti
and
loopne
int
push
adc
pop
dec
sbb
pop
jbe
scas
fwait
push
sub
xlat
test
jb
xchg
cwtl
std
insl
mov
or
mov
mov
dec
je
adc
xlat
push
cli
ret
aaa
fistl
push
adc
jl
ds
or
pop
jg
mov
push
and
pop
lahf
scas
xor
je
out
ss
mov
and
imul
adc
mov
dec
xor
xchg
push
repz
push
pop
jmp
adc
jle
or
sbb
mov
mov
push
lods
std
adc
cli
mov
fcomps
scas
inc
fs
xor
sbb
ljmp
fnstcw
cmp
cmp
pop
mov
mov
rclb
sahf
mov
js
sbb
cmp
xor
jno
or
lcall
dec
hlt
dec
in
add
sbb
inc
push
mov
jns
ljmp
and
cmp
outsl
push
mov
adc
es
add
adc
jmp
sbb
pushf
or
add
jbe
cs
inc
add
or
mov
idivb
mov
inc
mov
addr16
xor
enter
into
mov
ror
lcall
sti
call
xchg
rep
fdivrl
pop
and
inc
inc
ds
idivl
jg
daa
add
imul
test
insl
ret
dec
scas
dec
mov
adcl
leave
jg
pop
dec
sub
or
mov
icebp
mov
sarb
out
call
ss
cmp
mov
mov
pusha
out
pop
cld
outsl
pusha
or
in
jl
imul
add
popa
add
sub
sarl
cmp
out
jecxz
ficompl
push
pop
cmp
sub
scas
mov
pop
pop
lahf
je
loopne
cmp
popf
adc
cltd
loop
mov
mov
or
sbb
scas
sub
adc
jmp
mov
daa
jp
arpl
cmp
fistl
scas
or
jmp
mov
mov
push
dec
mov
or
jg
test
mov
shll
test
or
cmp
pop
aad
pop
sbb
mov
push
sbb
subl
pusha
or
sbb
aas
dec
in
neg
shll
lods
jecxz
test
cmpsl
xchg
inc
inc
shrb
hlt
xchg
rorl
jo
dec
dec
les
lock
iret
jo
push
cmp
mov
data16
cmp
mov
and
cmp
push
add
cmp
sbb
xchg
scas
out
xor
aam
and
xchg
jmp
push
and
loopne
add
sarb
movl
lods
pushl
jp
ret
sarb
pop
leave
popa
imul
bound
adc
mov
mov
sarl
mov
les
nop
mov
fldenv
push
inc
push
jl
jl
pop
or
adc
jo
or
pop
pop
out
cmp
xor
cmp
inc
fistpl
add
ret
fxch
xor
sub
mov
les
or
rcr
cmpb
fbld
xor
jne
nop
inc
lret
adc
out
mov
rolb
lock
or
jg
ret
inc
rcll
inc
add
pop
and
cli
ret
in
jle
stos
call
jno
fiaddl
sub
roll
loop
lea
pop
mov
sbb
jo
sti
add
jns
xor
adc
and
in
dec
mov
into
push
fmuls
in
ja
scas
mov
pusha
mov
mov
mov
out
inc
or
movsl
outsl
and
pop
popf
outsl
sbb
call
imul
xchg
sbb
arpl
test
add
pop
pop
xchg
lock
mov
cli
mov
pop
xchg
movsl
rorl
push
xor
inc
pushf
lods
sbb
add
inc
shll
cmp
loopne
mov
pop
cld
lcall
push
dec
outsl
ja
xchg
jbe
add
sbb
mov
cs
movsl
test
sahf
pop
or
and
cmp
push
xchg
mov
add
jae
and
lock
lods
shr
ss
lret
inc
sub
mov
outsl
xlat
aaa
test
in
jge
and
icebp
add
xor
daa
and
or
loopne
rcr
lods
rorb
pop
jge
jns
lcall
sub
int
popf
xchg
jns
mov
jmp
jecxz
cmp
jge
cld
dec
dec
bound
adc
dec
sub
out
and
push
testb
jl
add
js
sarl
hlt
sbb
mov
out
xor
or
cmc
pop
sbb
xchg
pop
out
mov
rorw
scas
mov
push
xchg
jmp
pop
dec
mov
and
aad
lret
mov
jno
and
xor
push
loopne
dec
lock
xor
fwait
dec
sub
xchg
inc
xchg
sbb
je
xchg
mov
lock
or
mov
leave
mov
add
xchg
aad
xor
int
inc
aam
js
mov
js
dec
aam
ja
mov
adc
test
in
dec
ret
dec
adc
cmp
push
or
adc
inc
xchg
push
xor
lret
cltd
add
lcall
mov
cmpsl
cmpsl
fnstcw
sub
mov
imull
test
mov
push
dec
cmp
and
dec
mov
inc
mov
rcl
add
jle
jecxz
pop
sahf
sub
inc
mov
push
call
fxch
inc
sbb
xchg
jbe
repz
xor
dec
adc
sbb
pop
or
sbb
mov
adc
gs
mov
sbb
cmp
xchg
inc
lret
inc
ja
fistpl
jae
ds
jne
push
je
loope
lret
divl
aam
xor
sbb
lods
or
lahf
sub
sbb
or
das
ds
xor
jmp
sbb
shll
inc
fwait
stc
sbb
retw
add
dec
ljmp
popf
cmovge
jno
repz
loop
xchg
iret
push
popa
rclb
push
or
mov
xchg
cwtl
inc
inc
jno
jmp
sub
adc
repz
pop
je
mov
xchg
pop
jo
insb
push
popf
cld
loope
mov
lods
jno
mov
lahf
cmp
divb
stos
mov
hlt
jno
pop
and
fwait
lcall
mov
jmp
push
clc
sarb
insb
or
imul
lret
mov
push
fsts
aad
push
cmp
jl
add
cmp
pop
mov
inc
mov
sub
pop
fidivrl
int
pop
out
dec
push
jo
add
pop
out
push
aad
adc
xor
mov
add
pop
data16
mov
jns
ret
fidivrl
sbb
jmp
xchg
loope
cwtl
icebp
imul
or
and
xchg
fnsave
add
add
imul
scas
repz
imul
pushf
inc
sbb
or
pop
out
dec
jnp
mov
sbb
nop
cmp
fucomp
inc
adc
not
dec
mov
sub
lahf
jle
jle
leave
lock
frstor
mov
cwtl
daa
addb
iret
xchg
fnstenv
test
adc
lret
push
jecxz
sbb
xor
mov
fcomp
test
adc
fstpt
gs
cli
mov
jbe
iret
push
sbb
xor
stos
inc
sbb
dec
icebp
jecxz
sti
mov
stc
xor
fcom
jl
hlt
mov
sub
mov
icebp
push
xchg
cmpsb
scas
xchg
push
and
add
adc
add
xchg
movsl
mov
add
xchg
sbb
cmp
aaa
jae
js
clc
test
setbe
pushf
push
sub
jge
int3
cmp
xchg
fldenv
sub
jae
pop
and
fnstsw
nop
xor
out
cmp
cmpsb
push
loopne
lds
hlt
mov
in
or
sahf
aad
aam
cmpsl
lcall
xor
mov
fisubrs
popa
nop
aad
mov
mov
test
shlb
cltd
call
cli
fists
xchg
push
sub
pop
push
mov
mov
pushl
cld
mov
loope
pop
insl
stos
sarb
xchg
dec
and
test
aad
gs
faddp
sbb
cmpsb
cltd
sub
pop
jns
jg
cmc
push
adc
test
mov
inc
jge
fcoml
xchg
inc
jae
push
adc
sbb
pop
mov
push
jmp
pop
adc
call
pop
inc
outsl
jne
xlat
mov
ljmp
in
xchg
repz
mov
scas
les
or
sub
xor
enter
push
inc
mov
or
dec
scas
cmpsl
inc
jg
and
sbb
stos
aad
mov
jle
sbb
les
jo
gs
lahf
xor
and
push
sbb
cmpsb
inc
mov
cmpsl
outsb
insl
xor
xchg
jp
iret
rcll
inc
push
jnp
xor
mov
sbb
repnz
mov
xchg
frstor
pop
xor
dec
pop
mov
es
xchg
and
and
xor
mov
inc
das
insb
popf
inc
and
pop
sti
aaa
and
repz
int
jo
sbb
jl
shrl
cld
cmc
push
add
shl
fdivrl
or
xor
jecxz
push
xchg
dec
out
aaa
mov
inc
add
adc
in
jno
dec
mov
mov
xor
je
push
dec
iret
mov
les
out
push
nop
adc
iret
fs
mov
pop
mov
jp
nop
sbbl
jle
lds
fwait
or
add
out
scas
into
std
add
lods
or
movsl
dec
sbb
cmp
fwait
fs
xchg
sub
mov
js
movsl
jp
pushf
mov
js
inc
shrl
fwait
jg
stos
dec
data16
sub
push
and
mov
les
into
sbb
mov
jo,pn
adc
cld
movsl
jno
pushf
push
dec
cmpsb
fmuls
mov
test
ds
das
test
xchg
sbb
add
enter
mov
popf
out
lcall
adc
sbb
mov
int
mov
pushf
ret
clc
jo
mov
jmp
cmp
add
popa
sti
ja
icebp
jns
cmpsb
pop
cmp
test
ss
test
mov
outsl
jecxz
testb
adc
shl
fs
inc
dec
lcall
cmp
mov
divb
mov
push
sbb
js
pop
inc
jnp
int3
ficomps
jae
cmp
push
scas
imul
jmp
sub
mov
mov
test
or
insl
dec
pop
push
push
pop
cltd
adc
push
fisttpll
push
mov
xchg
mov
inc
inc
mov
sbb
cld
jbe
or
push
add
fistl
mov
jae
ret
aam
test
push
mov
adc
xchg
mov
xor
pop
sbb
fs
pushf
fstps
ret
imul
push
es
mov
and
or
inc
cmc
push
jecxz
inc
inc
stc
mov
dec
test
mov
leave
push
bound
pop
cmpsl
mov
or
or
cld
jl
lock
jmp
dec
add
lods
xchg
daa
ret
push
fucomip
out
inc
cmpsl
jle
insl
inc
aaa
jl
add
out
int
call
dec
xor
xor
addr16
mov
sbb
dec
mov
ret
xor
mov
divb
mov
push
stos
sub
fcoml
fstl
aam
dec
add
adc
cld
sub
gs
jae
cmp
dec
push
xchg
mov
fisubrs
push
push
test
fmull
cmp
jae
loop
lock
scas
adc
mov
push
fs
nop
call
scas
lahf
cwtl
jno
mov
pop
aam
xorl
inc
insl
les
mov
movsw
push
hlt
xchg
pop
mov
rclb
mov
cmp
sbb
mov
dec
nop
xchg
rolb
pop
add
incb
jl
mov
jnp
insb
dec
push
je
add
or
xlat
rcll
jle
lods
push
push
repz
fnstenv
jmp
sbb
fstp
js
test
pop
sahf
std
and
orl
jmp
imul
pushf
dec
pop
fstps
sbb
sbb
jne
push
push
cmc
mov
lcall
cmp
pop
dec
pop
jb
xchg
or
insb
fwait
dec
cli
scas
and
cmp
loop
ljmp
decl
repz
push
mov
pop
into
jo
sbb
mov
adc
rorb
lahf
iret
cld
aaa
cmp
xor
adc
inc
pop
rclb
sub
mov
rorb
sarb
mov
mov
push
stos
lcall
ljmp
ficompl
pop
push
aad
outsl
roll
fcomip
pop
das
xchg
jge
and
cltd
xchg
mov
and
cs
sub
out
cmp
cmpsb
jge
or
mov
mov
sbb
mov
test
arpl
dec
dec
outsb
sbbb
das
shll
ljmp
xchg
inc
mov
in
std
sbb
popa
sahf
jne
dec
inc
pop
imul
push
jb
inc
add
pop
mov
mov
mov
sub
test
and
xchg
repnz
jbe
pop
int3
xorl
cs
test
push
loop
mov
inc
dec
lcall
aas
test
aad
push
in
jle
popf
iret
imul
sub
mov
sbb
pop
mov
add
jnp
out
mov
sbb
mov
outsb
cs
pop
or
loop
stos
data16
xchg
push
jo
lock
or
xchg
or
pop
scas
jmp
jo
lock
and
loope
stos
imul
xor
adc
mov
sub
pop
cli
xchg
outsb
xchg
pushl
sbb
cmp
cmp
pusha
aas
fs
gs
hlt
aaa
aad
xchg
aas
fdivrp
fcompl
push
ss
movb
jge
test
shrl
xchg
mov
xchg
insl
mov
shr
popl
fwait
sbb
out
sti
and
adc
psrlw
popf
sub
es
imul
and
inc
in
sbb
push
clc
pop
cs
popa
out
scas
pusha
nop
das
push
mov
aas
jnp
jae
push
shrb
sahf
neg
inc
aad
ljmp
mov
dec
adc
and
fimuls
fnstsw
mov
aam
push
imul
fdivrp
jne
xchg
push
sub
icebp
int3
push
out
jo
stos
stos
pop
mov
sbb
lcall
ds
imul
lfs
fcmovne
test
or
mov
push
xchg
idiv
mov
sbb
mov
arpl
lods
xor
push
ja
jle
fists
stos
dec
xlat
popl
gs
ss
pop
jne
xlat
mov
add
xor
nop
xor
ret
ja
les
incb
ret
fs
orl
push
daa
movsb
popf
rcrl
mov
cmp
xor
in
int
pop
icebp
lods
push
dec
adc
add
adc
das
mov
ficoms
dec
add
add
popf
xchg
xchg
xchg
outsb
adcb
stc
fstps
es
add
jbe
push
imul
cmpsl
pusha
fildl
xor
pop
cli
sub
add
dec
lds
cmpsb
sub
int3
xchg
pop
inc
add
inc
adc
fs
int
lods
fiaddl
pop
cmp
mov
out
xor
pop
in
jg
mov
sbb
nop
aad
and
je
inc
out
and
xchg
ret
mov
fidivrl
sar
mov
xorb
or
das
mov
xchg
je
xor
ja
cmp
add
insl
pushf
fs
inc
push
cmp
jle
mov
mov
movsl
sbbl
ja
lods
jae
sbb
sub
pop
addr16
pop
lods
or
mov
cmp
mov
xchg
int3
aad
aad
sbb
adc
lahf
push
pusha
push
mov
insl
cmp
jo
add
pop
or
push
jns
mov
pop
int
pop
cltd
adc
subb
sbb
leave
fsubrs
or
and
ja
or
int3
cmpb
sub
lret
cmp
int3
sub
ja
push
in
mov
adc
dec
pop
xchg
cmp
dec
test
aas
lfs
in
aas
out
cli
ljmp
or
ds
sub
adc
je
jmp
xchg
pop
not
mov
add
incl
mov
jae
stos
ss
lods
ja
fcmovne
inc
mov
or
in
push
lea
and
subl
jbe
cmp
inc
dec
push
ljmp
inc
and
jae
lret
mov
cwtl
aaa
adc
rorb
imul
mov
shrl
mov
cli
sar
xchg
imul
mov
jg
jmp
arpl
xor
call
aam
cmpb
add
push
lea
shll
clc
push
mov
clc
call
inc
or
outsl
adc
inc
mov
popf
add
push
jge
cltd
jns
pop
and
inc
cs
ret
jl
addr16
mov
jle
add
sbb
nop
lods
loop
inc
mov
test
rorl
dec
sahf
dec
dec
pop
xchg
adc
jg
cmp
cli
stos
push
int3
je
sbb
dec
aas
jp
push
scas
in
aam
loop
xchg
xchg
popf
mov
fidivrl
jmp
sub
jae
cwtl
add
push
popf
pop
repnz
or
test
out
mov
imul
out
insl
test
incb
mov
ja
jnp
push
mov
mov
shl
or
sub
lods
jle
jg
lock
int3
push
dec
aaa
push
fdivl
cli
shrb
pop
ljmp
jge
out
inc
cmpsb
xchg
jno
ja
jae
mov
rorb
inc
xor
sbb
and
ljmp
cwtl
jmp
je
pop
cmp
mov
shll
ss
test
aaa
pop
mov
mov
mov
adc
mov
xor
dec
push
fidivrl
mov
add
xchg
pop
xor
push
sti
jmp
fwait
jns
outsl
dec
leave
xor
sbb
les
adc
repz
imul
or
or
inc
inc
mov
jmp
adcb
insb
and
jno
xchg
mov
mov
xor
or
and
stos
insb
sbb
ljmp
cmpb
jle
pop
rolb
xor
mov
clc
push
scas
mov
leave
enter
clc
mov
popa
cmpsl
mov
add
cs
inc
andb
pop
inc
inc
mulb
push
cmp
pop
js
test
push
out
mov
add
push
add
jp
mov
bound
std
and
cld
stc
addb
pop
js
lods
ss
mov
addl
xor
outsl
and
daa
adc
adc
ret
andl
xchg
mov
push
call
push
test
ljmp
sub
cmc
push
decb
scas
sub
mov
mov
mov
lea
out
cmpsl
adc
adc
roll
cmc
pushf
pop
insl
adc
sub
in
ljmp
add
inc
pusha
lds
adc
inc
js
imul
inc
pop
mov
mov
ficomps
mov
fldl
jb
mov
cmpsb
adc
mov
dec
ret
mov
into
xchg
pop
dec
jnp
ss
xchg
aas
adc
ds
pop
adc
pop
pop
fnstcw
and
int
inc
dec
and
testb
ret
je
or
pop
sbb
arpl
test
dec
pop
imul
fndisi(8087
mov
nop
push
xchg
hlt
in
repnz
xlat
test
sub
pop
outsb
inc
punpckhbw
jecxz
mov
xor
pop
aaa
jo
lret
test
sbb
mov
insb
sbb
iret
fldt
sub
sub
xchg
movsb
mov
je
or
push
out
cmp
inc
lret
cmp
scas
mov
mov
enter
mov
les
jb
and
mov
jp
dec
outsl
aam
loop
in
xlat
or
cmpsb
fsubrl
cmp
fxch
xor
dec
fistps
cwtl
push
mov
sub
fnstenv
ret
add
je
adc
test
loopne
xchg
mov
es
or
sbb
fistpl
ret
sbb
jb
dec
pusha
sub
pop
dec
aad
mov
sub
jns
sbb
jbe
pusha
add
lcall
jo
scas
push
hlt
in
sub
inc
mov
mov
test
pop
fiadds
testb
call
in
and
in
rclb
jo
mov
xchg
add
in
ds
lods
stos
add
je
push
call
xchg
adc
cmpsl
adc
and
or
push
ror
addr16
sub
push
push
test
std
into
mov
dec
pop
sbb
or
faddp
dec
adc
out
push
adc
dec
mov
shrl
mov
xchg
mov
fistpll
and
rep
add
pop
lcall
and
aas
icebp
mov
in
add
imul
gs
xchg
cmp
push
movsl
cli
sub
inc
scas
adc
adcb
addb
test
cmp
adc
xchg
ljmp
sub
jbe
jmp
jbe
jns
js
sahf
idiv
mov
iret
test
hlt
mov
push
pop
and
stos
fwait
cmc
lahf
add
xchg
fs
cmp
std
inc
aam
push
lds
pop
push
fsubl
adc
out
sbb
fists
pop
mov
jns
sti
mov
mov
sbb
push
jo
popa
adc
sbb
pop
mov
dec
aas
push
repnz
out
xchg
cli
push
aas
push
jbe
lret
lods
js
out
or
ljmp
loop
das
imul
loop
mov
jg
jge
and
int3
sub
rcrb
xchg
mov
pop
sahf
shl
int3
in
iret
push
fisubrl
cmpsb
xor
pop
pop
mov
enter
loopne
sub
pop
mov
cmp
fs
fdivrl
jg
call
mov
cs
pop
rorl
ljmp
in
ret
mov
cs
mov
cmp
call
and
popa
bound
pusha
test
lahf
stc
mov
std
mov
scas
mov
add
add
xchg
stc
adc
das
cltd
jl
fcmovb
mov
cli
cs
cmc
sub
ja
xor
cmove
push
mov
stos
inc
mov
xor
push
shlb
jp
xchg
mov
mov
or
hlt
pop
hlt
cmp
xchg
fwait
or
jmp
outsl
mov
enter
push
sti
fldenv
scas
ret
js
push
xor
sahf
pushf
lahf
iret
pop
xchg
inc
dec
sub
push
jecxz
aam
mov
pop
popa
lods
dec
mov
test
cmp
adc
bound
jmp
mov
out
pop
fstl
rep
cmp
inc
jg
sub
jl
mov
mov
inc
pop
enter
out
jle
out
loop
call
xlat
lea
cmpsl
jns
daa
xchg
mov
ret
out
push
std
in
fildll
fisttps
pusha
push
sbb
pushf
sbb
push
push
aad
je
in
addb
push
iret
lods
sbb
xchg
sub
xchg
sarb
ret
inc
fmull
xor
xor
pop
cld
sahf
dec
mov
out
cmc
imul
test
out
xchg
push
iret
add
mov
jl
cs
loope
fidivrs
insl
dec
scas
jecxz
push
pop
repnz
add
sbb
popa
out
test
dec
push
out
sarb
jbe
sub
xchg
fwait
dec
imul
mov
inc
pusha
xchg
cmp
mov
popl
int
mov
addl
rcrl
nop
fmull
cmp
push
inc
sarl
fsubl
fstps
pop
rcrl
sbb
int3
jp
popa
jecxz
cmp
mov
shlb
push
xchg
sub
pop
cmp
pop
and
enter
jbe
add
inc
xchg
push
mov
pop
stos
xchg
sbb
jle
aaa
xor
mov
stos
mov
faddl
movsl
mov
fstpl
push
cli
lahf
fnstsw
fsubrs
inc
xor
sub
int
imul
enter
sub
fistl
out
xor
cli
pop
jnp
inc
cmpsl
xlat
jge
xor
data16
inc
inc
pop
popa
cmp
ret
test
jbe
aad
insl
push
dec
mov
adc
lds
inc
ljmp
add
cmp
pop
lods
or
adc
fs
mov
cltd
sahf
xchg
js
mov
jbe
inc
es
xchg
orl
fs
sahf
nop
je
and
mov
movsl
push
xchg
out
mov
fs
js
lea
or
out
mov
sahf
fnstenv
adc
insb
ja
sbb
fcoms
sbb
jl
cli
adcl
adc
test
scas
arpl
mov
xchg
cmp
mov
lret
mov
xchg
cmp
lahf
nop
out
mov
dec
shrb
mov
nop
iret
sub
sbb
add
sbb
dec
sbb
pop
sub
xchg
dec
push
add
cmp
enter
mov
in
outsl
sbb
andl
sub
pop
ja
je
dec
jle
cmp
clc
pop
out
dec
mov
cmc
xor
add
into
sbb
or
dec
inc
lock
leave
mov
call
jmp
inc
pusha
pop
sbb
mov
add
fsubrl
mov
lret
les
lds
mov
rcrb
xchg
jae
push
outsb
in
popf
rcl
imul
popa
xchg
call
out
daa
jnp
inc
dec
popa
aas
fwait
fs
push
int
aam
ja
and
outsb
xchg
dec
cld
movsl
xor
mul
mov
icebp
and
ret
and
xor
cmpsb
rdpmc
jmp
fldcw
mov
lods
test
push
aas
pop
in
jae
pushf
or
push
push
ds
inc
adc
xor
mov
fdivl
fdiv
call
fs
test
sub
outsl
jo
jns
sub
push
test
repz
fcompl
outsl
push
mov
or
int
mov
pushf
pop
addr16
movsl
shll
int
cmp
ss
add
sub
push
add
dec
push
out
stc
push
subl
push
shrb
mov
sub
out
mov
or
je
cmp
pop
addr16
adc
inc
sbb
repz
mov
add
push
sub
push
or
icebp
lret
jmp
jno
mov
je
cli
or
or
xchg
pop
lcall
imul
cmc
add
sub
insb
in
mov
and
lds
cmp
sub
into
push
mov
xor
lea
fdivs
cwtl
cwtl
push
dec
dec
sbb
iret
jmp
jl
add
push
and
dec
push
insb
jge
pop
inc
inc
daa
lret
inc
iret
lahf
lods
shll
repz
ja
xchg
sbb
mov
jne
rcl
push
pushf
dec
loopne
xchg
cmp
dec
jno
xchg
add
mov
pop
inc
pushf
inc
fists
push
das
lds
push
jmp
sub
sbbl
movsb
aad
lar
pop
adc
pop
int
mov
scas
mov
jbe
xor
call
mov
mov
int3
jmp
lcall
icebp
fisttpll
outsb
pushf
ljmp
push
mov
in
pop
xor
ret
sarl
mov
shlb
xchg
sbb
sub
dec
js
fdivrs
lods
jmp
cmp
cli
adc
and
mov
sub
pop
dec
mov
int3
sti
inc
sahf
mov
add
pop
rcr
cwtl
pop
inc
jl
sub
xorb
push
into
jmp
xor
lahf
jnp
mov
sbb
jns
fidivs
pop
cltd
or
push
inc
loope
xchg
xorb
cs
and
add
xor
sub
out
adc
inc
xchg
xchg
mov
mov
rcrl
fldl
jmp
test
enter
xor
lock
js
adcb
pushf
mov
sbb
fistps
fcmovbe
mov
pop
push
addr16
sbb
negl
mov
dec
pop
inc
out
fadd
push
movsb
gs
fcomp
pop
clc
inc
adc
or
mov
sub
cmp
xor
imul
xchg
mov
mov
in
cmp
movsb
popl
mov
dec
or
fstl
mov
or
in
lcall
sub
sbb
mov
mov
movsl
lret
mov
adc
test
lock
cmp
or
gs
mov
push
fmull
mov
sti
jle
adc
or
push
fists
imul
lret
push
pop
test
jo
in
mov
sarb
int
clc
mov
rol
and
dec
cmp
fadds
jo
fidivrs
mov
aam
iret
clc
sub
mov
mov
popf
test
xchg
push
pusha
mov
lock
add
imul
les
gs
cmp
pushf
xor
sbb
orb
negb
out
mov
movsl
xor
test
ret
sbb
inc
mov
outsb
mov
mov
jnp
popa
push
and
movsl
lret
pmaxub
out
sbb
lea
and
mov
xchg
ljmp
imul
and
cmp
lahf
std
rol
dec
cmpsb
jns
xor
dec
jb
xchg
xor
or
ljmp
mov
pop
or
and
les
sub
nop
inc
pop
push
mov
jns
jge
bound
xor
inc
xor
lock
cmp
aam
faddp
mov
neg
cld
popa
sub
jbe
test
fwait
mov
mov
push
xchg
ret
push
pushf
or
mov
popa
ficomps
mov
sbb
stc
popf
repz
out
leave
xchg
mov
inc
xchg
mov
or
jnp
xorb
pop
jp
sahf
scas
notb
jmp
sub
addb
lods
inc
pop
push
jge
addr16
addl
lds
aam
mov
cmpb
inc
aaa
inc
int3
lods
stc
sti
lea
mov
enter
jbe
push
testl
leave
lods
cld
test
inc
dec
jno
lods
xor
jb
sti
jbe
insb
jl
aaa
gs
scas
mov
cmp
jg
dec
shlb
jp
fs
inc
stos
dec
push
jnp
call
mov
fcoml
addr16
int3
sahf
les
mov
inc
inc
jo
outsl
mov
clc
ret
cld
fnstenv
push
das
mov
sbb
outsb
imul
xchg
dec
scas
adc
sbb
mov
jmp
in
into
outsb
int
sub
lods
stos
fidivs
aam
or
pop
jg
cmp
filds
jle
rorl
fmull
push
inc
aad
stos
out
cmp
ja
out
pop
xchg
out
lahf
out
idivb
push
mov
jle
pushf
push
mov
lock
fcomps
xor
xorl
mov
fs
outsl
ja
sahf
sub
or
subl
and
cmc
in
xchg
sub
xchg
push
jle
jl
inc
mov
pop
mov
loop
lds
xor
push
cli
leave
jge
rcll
bound
pop
or
cltd
in
push
insb
pushf
or
cmp
fiaddl
loope
pop
popf
fdivrp
mov
enter
int3
jecxz
cmpsl
cmp
insl
adc
fstps
pop
mov
mov
xor
jo
jae
daa
sarb
and
or
cmc
and
xor
movb
or
in
cmp
inc
in
jo
repnz
popa
subl
jg
adc
mov
addr16
pop
add
adcl
cmp
mov
jge
in
dec
jbe
jns
add
cld
sbb
mov
add
sbb
filds
pop
int3
notl
jmp
dec
mov
inc
cltd
pop
ficomps
push
popa
pop
imul
lock
pop
adc
ljmp
clc
or
scas
sahf
push
add
push
aas
mov
or
bnd
es
sti
sbb
pushf
xchg
and
das
xchg
nop
inc
mov
mov
out
push
sbb
hlt
or
imul
mov
mov
and
insb
hlt
mov
scas
jmp
jmp
pop
inc
gs
leave
cmp
repnz
jbe
cwtl
push
add
sbb
pop
cmp
dec
push
loopne
aaa
mov
push
call
push
jp
enter
cli
hlt
add
xchg
add
fdivs
lock
flds
cltd
add
cmpl
popa
aaa
mov
in
inc
lahf
sti
aaa
fbld
nop
xor
inc
mov
mov
aam
cmp
sub
or
inc
or
cwtl
mull
lcall
out
xchg
add
sarb
cwtl
sub
adc
xchg
jno
ljmp
push
add
icebp
in
or
mov
sahf
notl
insl
ret
pop
xor
push
sbb
pop
mov
loopne
stc
fadd
adc
clc
jb
test
arpl
jne
call
sub
cld
hlt
jmp
xor
jae
sbb
jae
lock
int
adcb
jo
add
pop
outsb
out
addr16
or
push
push
mov
adc
int3
xor
outsl
xor
test
popa
mov
lds
sbb
jbe
or
add
mov
repnz
xchg
inc
subb
jo,pn
shrl
xchg
xchg
pop
imul
ret
push
sbb
xor
and
mov
xchg
fdivrl
rcrb
aam
add
mov
pop
int
aam
jmp
pop
aad
pop
pushf
pushf
sub
fmul
pop
inc
imul
mov
xchg
test
pop
jmp
cmpsl
xchg
ret
jnp
xor
cmpl
cmpsl
sbb
add
andl
leave
scas
es
lock
call
std
daa
mov
test
mov
inc
push
mov
fisttps
in
dec
push
sbb
clc
mov
pop
in
dec
sbb
jle
rorb
es
fnstcw
cmpsb
xchg
andb
in
paddsb
shr
bound
adc
in
push
mov
dec
dec
mov
insb
dec
arpl
dec
sub
jecxz
dec
movl
pop
and
pop
stos
pop
dec
push
cmp
test
xchg
in
int3
pop
or
into
or
pop
sti
and
fldenv
pop
fstpt
cmovl
int
sbb
arpl
pop
shrl
int3
scas
inc
dec
movsl
sub
jl
std
xor
mov
sub
test
scas
cmpsl
mov
push
jbe
insb
cmp
inc
sub
dec
push
stos
fcmovne
int3
aas
push
in
jne
mov
jbe
repnz
popa
out
pop
mov
test
les
pop
gs
into
aad
mov
fs
xor
inc
iret
dec
es
xorl
pushf
je
xchg
mov
adc
int3
jmp
push
sti
mov
out
add
or
mov
out
mov
xchg
in
mov
addl
in
out
sbb
sub
outsb
lcall
cmp
sub
sbb
roll
daa
and
xchg
cltd
fisttpll
push
ret
adc
jno
jl
xor
stos
cwtl
push
pop
iret
sbb
cmp
lcall
add
rcrb
lds
mov
inc
je
dec
add
mov
lahf
cwtl
fmull
xor
pop
sub
push
push
dec
push
cltd
call
jne
push
inc
jmp
dec
mov
jl
arpl
insb
les
xor
roll
dec
mov
jne
in
pusha
push
or
popf
mov
adc
sti
testl
mov
jge
stc
je
sbb
ffree
mulb
mov
pushf
mov
and
pop
ss
push
or
nop
jo
ss
aaa
jae
mov
jl
je
lea
test
xor
shl
scas
lahf
outsb
mov
mov
pop
iret
je
lds
and
je
cs
lds
insb
rcr
fmull
dec
outsl
add
mov
test
fdivl
cmp
das
xchg
shlb
and
or
cli
mov
movsl
mov
filds
int3
pushf
pop
mov
xor
or
in
fld
xchg
or
sub
or
inc
bound
addr16
movsl
shll
mov
lods
mov
popl
clc
andl
gs
movb
push
addb
xchg
mov
mov
imul
rcrb
decb
push
negb
mov
and
aas
pop
xor
add
xlat
cltd
sub
mov
mov
stos
and
inc
call
sub
nop
xchg
push
or
fwait
mov
xchg
jl
push
or
fidivl
mov
cmpsb
mov
pop
adc
ficoms
arpl
insb
jns
outsb
andl
icebp
and
jmp
dec
les
sbb
push
xchg
inc
je
cmpsb
aad
mov
xchg
xchg
mov
lods
mov
js
rorb
add
jl
lods
imul
pop
movsb
orb
add
mov
adcb
fstpt
iret
stos
add
pop
xor
mov
and
aad
pop
aaa
call
mov
and
imul
popa
mov
mov
sbb
push
or
mov
std
inc
enter
sbb
pop
push
lea
sti
jge
push
xchg
adc
movl
test
sbb
enter
add
pop
addb
and
cmp
jmp
sub
cmp
inc
sub
lea
xchg
mov
std
or
pop
push
daa
lahf
clc
cmp
push
addr16
insl
mov
mov
sarb
pop
jecxz
inc
jge
xlat
mov
push
andl
repz
or
fdivr
cltd
sbb
pop
pushf
or
pop
int
or
ret
and
jo
sbb
loopne
mov
mov
inc
sbb
ja
repz
pop
sub
jmp
ret
dec
test
sub
jo
inc
bound
pop
xor
arpl
shrb
sbb
repnz
lahf
dec
xor
aam
xchg
sbb
pushf
push
stos
push
xor
mov
lahf
je
and
fildll
insb
and
xchg
test
jnp
push
shlb
adc
repnz
repz
xchg
lds
or
shlb
imul
cmp
into
or
xchg
pushf
das
int
loop
out
jne
sbb
jno
cmp
lret
in
ja
scas
insl
mov
push
or
sub
sbb
and
pop
iret
and
outsl
mov
stos
jmp
andl
xor
and
test
outsl
ret
jmp
sarb
and
xchg
or
push
and
arpl
pop
add
push
or
lcall
sbb
lret
mov
lods
push
cmp
mov
pop
mov
loope
scas
test
fwait
inc
adc
ret
pushf
xchg
cwtl
mov
fucomp
jnp
js
xor
cmovae
addr16
mov
or
xor
arpl
inc
jo
cs
lds
sbb
mov
mov
mov
lock
pop
repnz
inc
jo
ds
push
push
jno
sub
pop
mov
das
or
cmp
pop
sti
fwait
and
or
pusha
int3
mov
xchg
repnz
out
ret
xor
push
iret
push
aas
fidivrl
cmp
add
stos
mulb
cmp
push
ljmp
or
loope
sub
fistpl
cmc
cmp
cmp
xchg
fisubrl
je
subb
adc
imul
aam
lcall
push
xor
xchg
mov
pop
sbb
mov
cwtl
lock
in
outsb
fimull
pusha
pop
cmp
insl
lods
mov
mov
lods
push
outsl
imul
and
outsl
jnp
xchg
popf
pop
test
movsb
fs
outsb
out
aam
and
push
xor
or
adc
add
fldt
xchg
pop
xchg
cli
stc
inc
dec
imul
stos
negl
imul
xchg
lds
pop
mov
jnp
lods
adc
ficoms
xchg
xchg
mov
mov
addr16
xor
cmpb
ja
sti
sub
test
sbb
loope
cmp
popa
sub
jno
add
stos
mov
je
mov
push
loop
pushf
sbb
movsl
pop
xchg
test
out
adc
jmp
jb
gs
inc
cmp
and
cs
orb
add
xor
jg
jae
das
loopne
push
push
in
cwtl
js
negb
test
dec
push
jmp
dec
lcall
cs
aaa
push
gs
sub
sbb
insl
mov
push
xchg
dec
test
sti
sti
or
in
xor
into
hlt
popa
lret
ret
push
pusha
mov
lea
ljmp
rep
sub
fnsetpm(287
inc
mov
sub
movsl
sbb
in
arpl
dec
leave
lahf
in
and
mov
adc
add
outsb
cs
mov
and
movsb
outsb
cmpsl
cmp
jne
sub
cmpsl
js
call
push
xchg
mov
decb
pop
roll
lret
std
ficoml
out
js
push
cli
jbe
aaa
xchg
ja
sarl
test
inc
ja
mov
ss
movsl
adc
pusha
xlat
mov
pop
imul
xchg
sbb
insb
les
ss
xlat
jle
fs
scas
addb
pop
cmc
mov
xor
cmpsl
cs
mov
and
pusha
loop
pop
or
imul
fwait
mov
test
mov
xchg
leave
adc
sbb
loop
popf
les
lds
xor
jp
inc
push
push
push
test
and
aaa
dec
xchg
jp
pop
call
out
fldt
xchg
or
into
xchg
nop
dec
data16
ljmp
inc
mov
jno
sbb
xchg
jmp
add
sbb
stos
mov
lea
push
movsb
je
add
int3
rcr
test
sbb
aad
outsb
inc
mov
lahf
pushf
stos
movsl
aam
in
ret
jnp
adc
lret
cmpsb
nop
clc
fisubl
jb
lahf
cmc
stos
outsl
fwait
cmpsl
fdivr
adc
cmc
shl
xchg
sbb
pcmpeqb
add
mov
fs
mov
mov
pop
or
jns
in
pop
addr16
fildll
mov
in
sti
out
xchg
cmp
or
int3
mov
dec
jbe
test
mov
stos
pop
cld
push
inc
fistl
mov
lret
sbb
or
das
jns
jle
lahf
mov
stc
enter
daa
fcomip
sbb
jmp
fsubp
pop
xor
cld
mov
outsl
movsl
sbb
mov
jmp
aaa
mov
mov
push
dec
mov
add
mov
jge
push
mov
inc
hlt
mov
dec
mov
mov
xlat
add
fimuls
addl
arpl
dec
mov
adc
lahf
push
xor
mov
cmp
push
xor
mov
pop
mov
mov
cmc
jecxz
imul
jl
shlb
scas
ljmp
fbstp
lea
das
loopne
xor
mov
push
mov
and
scas
test
lds
add
adc
cwtl
imul
add
adc
inc
push
push
sub
sub
sub
sahf
clc
pop
test
dec
aam
push
sub
lcall
int3
nop
es
adc
sub
or
mov
stc
dec
xlat
fidivl
xchg
push
mov
and
call
mov
mov
nop
lods
xor
ret
popf
bound
jl
je
lock
std
bts
clc
mov
xor
enter
insb
aaa
push
popf
add
repnz
sub
sub
adc
ret
add
ret
adcl
xchg
adc
test
inc
loopne
inc
ret
xor
int
pop
sub
int3
mov
jne
popf
cmpsl
dec
dec
adc
rolb
dec
leave
out
aas
xchg
xchg
loop
dec
stc
arpl
test
push
and
add
outsl
call
sahf
nop
cmpsb
negb
lods
out
push
pop
push
xchg
mov
xor
cmp
in
out
adc
dec
mov
jecxz
mov
mov
divb
push
jbe
ljmp
xchg
scas
shlb
mov
stos
pop
xorb
lret
sub
jnp
pop
jp
adc
jns
ljmp
mov
ljmp
jle
sbb
out
add
mov
push
insb
xchg
mov
scas
in
shrl
pop
call
xor
das
pop
pop
and
jmp
sbb
inc
imul
pop
out
pop
push
movsl
fwait
xor
pop
in
sub
pop
xchg
jecxz,pt
push
xchg
xchg
jbe
leave
mov
popf
mov
add
jb
fs
clc
jp
sbb
aad
scas
mov
fldcw
jmp
pop
mov
lahf
sbb
mov
push
pcmpgtd
sar
push
mov
sbb
shrl
push
dec
in
jecxz
and
jp
filds
push
jp
adc
fildl
cmp
jl
clc
or
mov
mov
insb
mov
cmp
lret
inc
pop
jne
fwait
or
sub
mov
stos
insl
out
cwtl
sbb
incb
loopne
mov
movsl
xchg
divb
mov
mov
and
add
mov
pop
nop
push
ficomps
or
ret
inc
dec
bound
sar
inc
push
enter
adc
enter
sub
aas
sub
pop
and
push
jae
jne
sbb
dec
jl
dec
in
xchg
jnp
es
or
lret
jne,pt
jge
andb
xor
decb
inc
lret
ds
imul
cli
sub
dec
stc
inc
sti
pusha
mov
mov
push
add
mov
push
xchg
inc
mov
adc
adc
stos
xchg
fimull
pop
mov
clc
pop
push
push
mov
xor
push
push
fwait
jns
in
inc
arpl
loopne
push
jae
or
dec
rclb
inc
sub
rcrb
lds
cli
test
cli
pop
lock
mov
mov
cmc
fldenv
insb
jle
setl
cld
mov
rol
xchg
fisttpl
and
mov
std
clc
jns
mov
sub
outsl
jle
scas
cmpsb
sub
and
ss
inc
mov
push
jno
jmp
dec
mov
les
add
inc
mov
mov
jp
cld
lds
int
pop
pop
lret
insl
lahf
add
adc
lahf
mov
ljmp
test
dec
stos
and
fldcw
cld
rcr
push
adc
in
movsb
call
sub
or
jo
push
loope
ja
lcall
push
dec
xor
push
out
mov
divl
std
xor
fildl
push
out
cmp
mov
cmpsl
leave
cld
pushf
push
jg
out
inc
bound
mov
sub
rcll
movsl
imul
in
mov
pop
popf
pop
stos
pop
jg
inc
iret
in
adc
shl
jge
xchg
inc
mov
jl
push
mov
imul
and
stc
outsb
notl
xchg
mov
jge
popa
push
jae
pop
jecxz
cmp
xor
lds
fnstcw
inc
int3
cmp
mov
fldl
or
aaa
mov
cmp
mov
or
and
push
daa
shrb
mov
push
adc
incl
push
icebp
mov
push
mov
cli
ss
vpshab
add
and
into
scas
xor
mov
inc
fsubrl
mov
scas
pushf
xchg
daa
js
rorb
xor
mov
dec
cmp
mov
hlt
fildl
not
notb
and
cmp
scas
movsb
scas
push
push
mov
jl
mov
iret
add
inc
int
ljmp
add
xchg
mov
enter
outsb
iret
jge
inc
repnz
ret
and
ja
cmp
sbb
mov
adcb
xchg
es
add
xor
test
and
dec
cmp
xor
mov
mov
cmp
sti
jne
je
in
std
sbb
mov
sarb
lret
rcll
sti
xchg
pop
test
mov
fcomi
mov
add
insl
je
roll
jge
enter
add
test
sahf
mov
mov
test
sbb
mov
pop
and
pushaw
mov
push
inc
aaa
lods
sub
cmp
ret
or
in
sub
push
cmp
leave
adc
jnp
dec
aas
mov
xor
mov
aam
pusha
mov
in
jge
add
sbb
jp
test
ljmp
das
dec
daa
sbb
bnd
xchg
mov
xchg
pop
loopne
jns
test
nop
or
std
repz
in
mov
and
fstl
aas
xor
ja
xchg
add
rorb
inc
nop
out
push
or
add
incb
cmp
aam
sbb
test
test
imul
ret
out
push
mov
mov
into
or
cld
sub
addr16
popa
inc
fldenv
in
xchg
dec
into
incl
fldz
ret
or
sbb
push
stos
xor
pop
test
call
xchg
cmpsl
mov
dec
cld
dec
sub
pop
cwtl
rorl
mov
jb
cmpsl
adc
ffreep
push
xor
scas
test
stc
mov
mov
lret
std
xor
push
popf
negb
jmp
and
stc
adc
pop
fisubl
or
sub
mov
das
mov
popf
inc
cwtl
lds
sbbb
push
jl
mov
and
fisubl
add
outsl
sub
aaa
divb
cld
insb
pop
repnz
popa
repnz
mov
mov
inc
cmp
lahf
pop
mov
fstl
mov
adc
subb
push
inc
mov
and
dec
and
pop
pop
and
imul
jp
ja
rcll
add
in
push
iret
hlt
lret
into
ret
push
and
dec
out
fmul
jp
xchg
add
jmp
aam
sub
movsl
adc
mov
xchg
pushf
arpl
push
jmp
pop
call
scas
and
and
jae
mov
jmp
sub
mov
and
ds
sbb
rcpps
cmp
stos
mov
push
in
dec
xchg
and
addr16
outsb
pop
jp
add
es
add
jns
movsl
sub
inc
lret
adc
sbb
pop
dec
push
and
sbb
clc
enter
rcrb
pop
push
int3
cmp
sti
push
repnz
int
lods
dec
ljmp
lods
pop
mov
xor
dec
enter
mov
sub
out
adc
mov
fadds
dec
lea
push
add
adc
icebp
xchg
xchg
lahf
mov
stc
ret
mov
fs
aas
jmp
scas
outsb
lds
nop
into
insl
mov
inc
jo
sub
xorb
idivl
aas
cltd
mov
mov
flds
arpl
push
mov
in
addr16
pop
push
pop
scas
int
add
adc
jbe
xor
pop
outsl
outsl
ret
mov
mov
adc
pop
push
push
pop
dec
xor
ljmp
fisttps
xchg
inc
mov
or
adc
mov
pop
ljmp
insl
movsl
gs
insl
das
out
sub
cmpsb
mov
pop
adcb
push
andl
mov
adc
mov
mov
push
fwait
test
sub
dec
outsl
push
dec
fwait
sbb
test
dec
jle
pop
or
scas
mov
sbb
ljmp
ret
stc
out
ds
daa
mov
jb
jnp
dec
mov
test
repz
xchg
insl
int3
mov
and
cmp
pusha
scas
adc
cld
xlat
das
pop
scas
insb
mov
push
jns
xor
fists
jb
jmp
mov
pop
cmpsl
pop
test
jecxz
je
and
jmp
int3
dec
cli
jns
sbb
andb
pop
push
sbb
fwait
outsl
or
mov
nop
xor
mov
les
outsl
fsts
minps
fistpll
inc
jne
adc
repnz
mov
dec
cli
inc
mov
std
enter
outsl
push
pop
push
or
imul
pop
les
hlt
or
mov
daa
pop
fcoms
fwait
stos
xchg
inc
leave
xchg
daa
cwtl
jne
push
xor
dec
inc
add
std
iret
xor
leave
lret
jae
add
sub
fmulp
cs
int3
clc
mov
mov
cltd
xchg
push
fwait
out
cmpsb
jl
test
jg
movsl
and
sbb
and
repz
mov
mov
mov
sub
sbb
push
dec
pop
sbb
enter
push
imul
out
mov
mov
pop
dec
pop
xor
shll
outsb
fcompl
xlat
dec
push
jnp
subb
ret
popf
roll
fmul
push
sub
xchg
fwait
mov
inc
imul
les
jbe
push
pop
adc
mov
lret
xchg
in
lahf
mov
dec
sub
jmp
repnz
stos
pop
clc
mov
dec
fnstenv
pop
xchg
cmc
jmp
jns
jge
movsl
nop
jle
sbb
xchg
or
jge
fistps
mov
test
das
mov
ss
pop
mov
test
xchg
icebp
fwait
dec
sub
nop
mov
lret
push
iret
dec
insb
pushf
out
mov
es
fcompl
adc
adc
or
dec
inc
or
shlb
call
push
mov
pop
mov
jecxz
inc
std
mov
mov
cmp
loop
inc
std
sbb
lods
lock
sub
dec
int3
xchg
mov
mov
push
fisttps
jl
pop
jg
and
shlb
pop
mov
out
lods
in
inc
dec
lds
add
clc
faddl
mov
pop
stc
and
add
jmp
sbb
out
pusha
test
mov
sbb
mov
fstpt
push
data16
xor
outsl
adc
outsb
sub
pushf
inc
cmp
in
mov
dec
jp
test
mov
loope
sub
cmpsl
js
sbb
fistl
cmpsb
jle
sub
push
daa
adc
mov
fistpl
shrb
sbb
or
xor
clc
in
adc
fsubrl
xchg
lods
push
popf
sbb
out
hlt
push
push
aas
addl
jbe
mov
mov
movsb
js
xor
pop
ret
push
mov
mov
push
xor
or
mov
mov
aas
lods
icebp
aaa
push
xor
aas
mov
jb
pop
test
int3
inc
pop
jg
cmp
sarb
pusha
jbe
xchg
cmp
cmp
mov
mov
xor
dec
push
or
push
sahf
mov
adc
sbb
inc
xchg
orb
cwtl
loop
mov
mov
out
and
es
pop
pop
add
loopne
pop
sub
stc
imul
incb
xchg
test
jns
bound
and
data16
xor
pushf
orl
cmp
xchg
repnz
adc
ret
testb
inc
outsb
inc
sub
and
insl
jecxz
inc
fstpl
outsl
cli
pop
and
xchg
fisttpll
inc
push
push
sub
pop
jp
outsb
pop
lea
movsl
mov
lcall
cmpsl
popa
mov
dec
xchg
mov
movsl
scas
js
jns
jo
or
mov
icebp
aaa
mov
in
mov
xchg
stos
xor
je
in
daa
jge
mov
cwtl
outsl
ror
and
push
ljmp
sahf
pop
loopne
push
mov
or
and
test
into
enter
adc
cmp
nop
jne
inc
add
ljmp
in
outsb
lret
xchg
adcb
dec
movsb
lahf
mov
fmul
out
sbb
xchg
out
pushf
mov
jns
test
xchg
out
cli
xchg
jp
test
out
mov
gs
mov
adc
ret
or
bound
cmpb
mov
pop
xchg
pop
cld
mov
adcl
and
hlt
xchg
popf
add
cmpsb
fstps
cmpl
in
int3
inc
in
add
js
ret
xchg
dec
shlb
mov
add
ficoms
sub
dec
inc
mov
mov
push
cld
aam
insl
hlt
sbb
aaa
sbb
ja
xchg
jl
mov
and
or
mov
mov
jge
pop
lret
cmpsb
mov
fcmove
mov
adc
or
ja
negl
sbbl
mov
dec
dec
into
and
lock
add
push
mov
push
add
daa
pop
add
push
orb
pop
xchg
hlt
fs
push
cmp
shlb
enter
adc
sbb
push
or
adcl
mov
jl
rorb
mov
pop
jl
dec
int3
insl
jg
inc
in
lcall
loop
add
mov
mov
or
mov
lret
mov
mov
xchg
jg
mov
xchg
push
leave
push
and
lea
loope
jecxz
or
adc
ss
add
mov
sbb
xchg
stos
addr16
mov
imul
mov
mov
add
in
bound
mov
push
lods
jno
mov
gs
adc
hlt
into
roll
outsl
rcrb
add
insb
data16
leave
push
xchg
dec
loope
and
dec
decl
sbb
sbb
adc
jl
gs
xchg
sbb
test
sbb
pop
inc
ret
in
movsl
out
cmpsb
pop
out
cmpsl
call
aam
les
fsubl
lahf
fnstcw
lahf
out
inc
xchg
mov
jb
mov
mov
loope
mov
or
lock
push
jp
stc
outsb
mov
decb
jno
add
aad
pop
push
mov
enter
ljmp
ret
add
adc
dec
std
jg
test
push
lahf
sbb
into
or
scas
adc
jo
lcall
cmpsl
ret
and
dec
cli
outsb
dec
mov
bound
arpl
xchg
mov
iret
adc
push
push
or
add
jbe
mov
push
stos
or
std
shrl
fnstsw
mov
movsl
andl
movl
test
mov
lods
inc
or
and
lret
xchg
mov
or
popf
jb
and
sarb
mov
cli
pop
mov
jge
pop
push
dec
fimuls
inc
stos
pushf
jo
aam
cld
flds
mov
in
ljmp
je
lahf
icebp
shlb
push
jmp
mov
aam
or
in
jne
outsl
int
call
xor
sub
loop
xchg
sub
jecxz
and
jg
out
inc
pop
daa
fst
ja
and
or
add
sbb
pop
push
jb
dec
test
sbb
cmp
push
add
add
sbb
and
ret
push
cli
faddl
insb
out
js
xchg
and
fistps
icebp
out
pop
lcall
nop
ljmp
push
push
sbb
fwait
or
orb
ds
dec
adc
je
in
ja
mov
lret
and
inc
aaa
push
mov
pop
adc
mov
cmpsl
pop
jo
sub
push
jne
xchg
push
push
or
pop
loopne
mov
or
dec
imul
insb
in
inc
fimull
cmpsb
mov
subb
arpl
pop
add
inc
clc
inc
lret
aam
rorl
je
stc
xor
and
rep
sbb
xor
push
test
hlt
cmp
cmc
cltd
mov
and
cmp
and
lret
dec
push
imul
inc
or
mov
arpl
les
jnp
dec
add
jns
fadds
loope
add
adc
nop
aad
cmp
ss
jo
jg
add
push
les
movsl
pop
ret
cld
xor
adc
or
ret
fadds
pop
push
pop
sbb
jo
and
negb
dec
es
cmc
scas
push
jb
add
mov
xor
fidivs
mov
dec
out
jg
js
inc
lret
aad
sub
hlt
and
and
cmp
add
xchg
mov
xchg
jns
shlb
or
and
shlb
xor
mov
cltd
sub
and
jle
cmp
mov
shl
mov
jmp
jns
inc
adc
test
and
xchg
xor
sub
dec
das
sbb
insb
daa
pop
in
shrb
test
scas
fsubs
aaa
loop
pop
push
and
lret
mov
mov
push
ficompl
in
xlat
mov
push
ret
fimull
dec
pop
jg
nop
in
adc
lock
and
sub
pop
out
js
imul
push
sti
xor
push
out
daa
adc
scas
cwtl
add
rcrl
cmpsl
xchg
nop
add
or
cmc
sub
cmp
dec
xchg
xchg
repnz
or
adc
mov
jge
mov
test
aaa
mov
flds
popf
dec
rorb
subl
adc
stos
or
popf
adc
icebp
sub
push
fcoml
jae
fs
iret
jo
test
mov
imul
xchg
cs
out
sbb
pop
xor
or
hlt
cmc
dec
sbb
rolb
inc
dec
cmp
pop
shlb
les
and
mov
xor
dec
xor
out
fs
dec
mov
jle
xchg
jno
div
jno
mulb
mov
push
into
dec
fdivl
icebp
dec
cmp
jbe
push
shl
jae
nop
push
xlat
mov
mov
sar
mov
dec
pushf
fisubrs
adc
cmc
jle
cmp
xor
xor
cmp
mov
sub
nop
data16
adc
pop
fisubl
xor
cld
and
outsl
int
incb
inc
mov
dec
pop
pop
jo
loopne
or
stos
std
cmpsb
repnz
inc
mov
test
imul
fsts
ds
cmc
and
push
stc
and
icebp
retw
lods
dec
cld
mov
dec
pop
es
dec
popa
push
pop
fcomp
or
stos
test
ret
mov
rol
ret
push
pop
mov
pop
call
ljmp
push
jle
imul
lods
push
clc
bound
int
aas
xchg
pop
ss
mov
inc
jmp
dec
cmc
fldlg2
pop
daa
aaa
jmp
iret
jno
sbb
lds
jo
dec
lods
es
hlt
mov
jb
sub
xchg
ja
xchg
sbb
ds
subb
or
cltd
clc
xor
and
pop
adc
ret
push
xor
inc
ljmp
push
jmp
xchg
cmpsl
jp
dec
jo
jmp
sub
xchg
sbb
inc
jecxz
cli
sub
pop
push
or
mov
add
stc
ja
out
jmp
xor
clts
mov
pop
cmp
bts
orb
cwtl
fistpl
and
testl
jne
push
cmp
cli
sub
wbinvd
sub
cmpsb
mov
inc
notb
sub
lahf
out
aad
sbb
cld
aaa
divb
pushf
insl
fwait
jbe
std
adc
ret
std
cmp
mov
xchg
cmp
mov
cmp
sahf
ss
scas
ss
jle
inc
daa
and
and
xor
daa
sub
and
fld
pop
popa
clc
roll
idiv
xorl
mov
lods
push
push
and
in
mov
rorl
pop
leave
jmp
lods
mov
jnp
jg
pop
insb
icebp
stos
xchg
ret
add
cs
dec
shlb
dec
push
aaa
sub
imul
sub
cmp
xchg
pop
jno
sbb
cmc
popa
dec
and
jno
mov
push
and
sub
lock
jnp
pusha
out
insb
popf
test
push
sbb
adc
aad
adc
and
stos
mov
scas
pusha
cmp
sub
aaa
xor
ficomps
push
xor
inc
icebp
dec
lods
and
jae
jg
push
push
or
xor
hlt
xchg
mov
mov
adc
fwait
push
cwtl
jne
pop
sub
cmpsb
mov
imul
repz
xor
int
arpl
pusha
pop
sub
sbb
lret
ja
call
sub
xor
stos
mov
pop
mov
popa
aad
sub
xlat
or
mov
inc
icebp
cmpsl
jl
xor
xchg
mov
pushf
dec
mov
or
pop
push
pop
pop
mov
push
xchg
loopne
pop
lods
cmp
inc
and
xchg
adc
cltd
mov
mov
lock
ds
dec
or
ja
mov
dec
loope
stos
testb
leave
add
inc
adc
xchg
roll
test
loopne
adc
cmp
pushw
push
push
sub
push
and
sbb
inc
lcall
decl
mov
sahf
leave
jns
sbb
push
cld
or
push
clc
mov
cld
rclb
mov
xchg
daa
call
inc
cmpb
enter
cld
adc
xchg
xchg
cmp
add
xor
outsb
fld
das
jg
ljmp
push
in
inc
out
mov
lods
stos
ds
test
movsl
cmp
xor
lds
dec
mov
pop
out
xchg
cmp
cmpsl
xlat
stc
in
jns
aam
mov
lds
call
add
loopne
clc
jae
inc
in
pop
sbb
pop
int3
out
outsb
inc
xlat
inc
outsb
inc
leave
dec
push
mov
insl
in
outsl
add
test
or
fcoms
cmp
sub
mov
mov
mov
push
xchg
sahf
mov
dec
pop
adc
adc
push
xor
in
dec
fstp
test
cltd
rcrl
mov
dec
lea
lcall
cmp
ljmp
aaa
dec
xchg
bound
nop
mov
nop
sarb
pop
or
push
std
popf
sbb
test
cltd
ret
mov
jp
ljmp
add
adcb
lods
lods
xchg
inc
nop
sbb
imul
xchg
loopne
nop
push
xor
inc
jb
pop
inc
dec
cltd
into
mov
xchg
mov
ret
stos
mov
mov
mov
ret
je
imul
jno
or
loop
or
sbb
dec
fisubrl
xchg
and
imulb
sub
jns
int3
insb
or
add
int3
insl
sbb
shl
mov
add
movsl
out
push
push
jmp
scas
mov
xor
cmp
and
jle
xor
testb
sbb
sarl
ret
pop
mov
es
lahf
jg
push
lods
adc
jno
cmp
xchg
sbb
aaa
loope
xchg
push
jae
xor
xor
and
pop
cltd
cmp
sub
mov
data16
jae
pop
subb
fs
out
xchg
xor
pop
pop
mov
dec
inc
add
out
fmuls
int3
xchg
adc
inc
cmp
xchg
jp
in
jmp
sbb
sbb
jp
xchg
aam
imul
pusha
fsubl
mov
mov
mov
and
iret
and
ret
xor
pusha
ss
pop
add
sub
adc
insb
popa
mov
ss
loop
xor
xchg
add
dec
test
mov
adc
stos
adc
sbb
testb
pop
enter
and
mov
lcall
iret
xor
adc
dec
push
leave
mov
idiv
movaps
fsubrl
aas
cld
pop
sub
mov
sbb
ret
add
test
mov
sbb
rcll
add
push
outsb
add
cwtl
loope
mov
dec
dec
sub
jne
das
xor
jmp
aaa
inc
sahf
sbb
cli
jne
fsubs
pop
stc
outsl
lea
and
clc
fsts
es
adc
pop
scas
stos
outsb
push
xchg
fs
push
cmp
das
mov
test
cmp
out
dec
test
ret
sub
pop
loop
pushf
lods
cmp
inc
mov
inc
loope
mov
xor
jecxz
insl
push
movsl
xchg
stos
pusha
push
adc
outsb
in
xlat
pop
repnz
nop
cmp
stc
xchg
sbb
insl
test
mov
shl
in
adcb
dec
in
iret
mov
sbb
dec
test
adc
hlt
loop
inc
in
into
cmp
mov
fbld
cli
jp
xor
pop
mov
sbb
shl
shlb
dec
mov
sbb
mov
test
push
add
cmp
jbe
out
jnp
cmp
or
lret
jecxz
int
push
sbb
sbb
outsb
push
inc
and
in
mov
imul
jle
mulb
shll
out
xchg
icebp
xchg
pop
inc
adc
gs
push
pushl
cmp
mov
xor
push
xchg
lret
xchg
xchg
adc
pop
in
stos
xor
jg
dec
out
inc
fldt
incl
pop
data16
rcrb
jne
and
pop
sub
or
repnz
push
adc
loopne
in
out
stos
nop
push
jno
xchg
test
push
dec
cmp
mov
cmp
loopne
enter
les
jae
push
push
notb
pop
in
inc
test
mov
xchg
push
jmp
out
sub
pop
sub
mov
cmp
enter
inc
jbe
cmpsb
and
ret
addl
jno
push
movsb
add
xchg
xor
pop
fwait
xchg
cmpsb
lods
mov
dec
leave
pushf
and
fcomi
mov
in
sbb
sub
inc
fiaddl
cwtl
scas
rolb
adc
jb
insb
js
mov
sbb
pusha
jg
xor
fimuls
jg
inc
mov
or
call
xchg
enter
lods
or
push
test
jne
popa
jnp
mov
and
push
shrb
xchg
cmp
mov
cmp
int
xchg
test
lds
jge
adc
ss
ficoms
repz
or
dec
dec
mov
lahf
xchg
lea
jge
sbb
aaa
cwtl
out
push
loopne
outsb
cmp
notb
jne
fisttpll
or
gs
push
xlat
lock
mov
rolb
lds
mov
mov
pop
cwtl
rol
test
popa
xchg
mov
aas
jae
out
mov
pop
xchg
aam
add
mov
pop
popf
cmp
es
jbe
adc
loopne
sbb
cmp
je
sti
xchg
xor
adc
outsl
jo
xchg
movsl
adc
mov
test
sbb
or
adc
cmp
js
cmpsl
gs
andl
adc
into
or
jnp
popa
cltd
jb
push
out
fsubr
xor
bnd
lret
lahf
scas
pop
fnstcw
js
ret
or
sbb
shr
aaa
sbb
adc
subl
subl
sub
icebp
aam
dec
adc
mov
adc
xor
inc
inc
popa
test
cmp
icebp
loopne
stos
mov
testl
push
xchg
decb
jl
data16
aam
sarb
nop
inc
call
jecxz
sub
clc
adc
sub
rcrl
test
inc
incl
lods
add
pop
inc
ret
or
push
and
or
sub
fcoml
ret
mov
mov
inc
lea
scas
sub
cmp
subb
test
dec
icebp
out
arpl
fwait
push
fisttps
lcall
in
cmp
sub
out
arpl
sub
adc
and
popf
sbb
jl
jle
adc
in
sub
clc
enter
add
lock
out
and
cmpb
xchg
std
mov
jl
inc
pop
mov
pushf
pop
inc
inc
aas
es
inc
jg
mov
outsl
clc
rcrl
or
xor
sbb
add
hlt
imul
or
ficoms
cltd
fincstp
lods
xchg
push
repz
jg
mov
mov
cmp
mov
scas
cmp
shll
pushf
out
and
mov
shll
jae
lahf
movsl
ss
xchg
fdivl
cmp
aam
dec
push
movsb
add
leave
jnp
or
aam
lcall
sbb
cmp
cmpsl
push
call
pop
aad
xchg
and
imul
pop
fsubl
das
adc
mov
out
stos
dec
push
add
inc
loope
sbb
sub
push
sub
lcall
dec
pop
loope
idivl
pushf
mov
ret
jl
pop
and
xor
testl
aas
dec
fnstenv
lock
mov
push
call
or
xchg
cwtl
rol
jns
lods
stc
icebp
mov
pop
push
std
push
nop
add
sbb
aaa
insb
jl
jl
mov
fcmovu
pop
push
repz
fs
xor
cltd
inc
dec
rcr
out
xorl
cmpsl
push
adc
jo
pop
mov
jno
fdivrs
cld
add
repnz
and
add
sahf
scas
lea
pop
push
aad
push
lock
out
out
pop
jp
mov
aas
push
cwtl
inc
std
pushf
int
inc
dec
rcll
stc
sbb
int
insl
mov
cmp
out
loope
cmp
jb
out
cld
dec
aaa
xor
lea
movsl
mov
mov
mov
sub
into
fisubrl
sbb
pop
lcall
lds
dec
lods
shrl
lea
fstps
popa
jge
scas
mov
dec
inc
imul
gs
lcall
andl
and
shlb
push
add
xchg
clc
jae
xchg
sbb
xor
ret
movsb
xor
std
div
add
fcompl
pop
xor
jle
cmp
sub
push
nop
aam
jns
aam
mov
jne
je
ja
das
adc
cmp
dec
imul
and
sbb
jnp
sub
sarl
stos
sbb
in
adc
and
rorl
fsubs
dec
fdivl
push
mov
hlt
push
mov
mov
sbb
jl
mov
pop
testb
cmpsl
sti
es
aas
mov
js
gs
xor
ja
adc
into
stos
shrl
xchg
or
xchg
fucom
gs
pop
mov
ficoms
sub
cmc
or
stc
cmp
fidivs
notb
mov
shll
inc
cltd
or
cli
es
dec
std
adc
movsl
aad
lock
add
or
scas
mov
mov
mov
repz
and
jo
mov
fldt
adc
adc
imul
lret
inc
daa
stos
scas
or
sub
jle
add
mov
mov
hlt
xor
push
icebp
and
iret
jmp
cmc
push
mov
xor
out
jne
jl
push
jae
pushf
aaa
mov
lods
jmp
add
pop
movsb
repz
inc
daa
test
fs
lahf
cmp
rol
add
dec
push
cmp
outsb
sarl
adc
dec
adc
push
lahf
or
shrl
out
cli
pop
roll
dec
shll
push
ret
dec
ret
inc
mov
push
push
sub
or
cmp
push
mov
stos
ljmp
push
xchg
dec
cmc
popf
or
xchg
sub
rcrb
rcrb
icebp
push
ljmp
adc
xchg
inc
mov
loop
jns
pop
shlb
cmp
push
mov
out
pusha
pop
push
sub
dec
mov
cmp
pop
outsl
fists
in
lret
jle
mov
push
push
mov
xlat
imulb
mov
notl
sbb
push
sbb
lods
push
mov
into
mov
filds
std
fs
scas
adc
in
pop
lods
xchg
add
pop
and
push
xchg
mov
add
test
arpl
rolb
xor
push
jg
dec
movsb
lds
push
xchg
add
mov
stos
inc
stos
fisubrl
pop
ror
add
mov
inc
loop
loop
mov
add
sbbl
inc
loop
neg
pushf
cld
xchg
pop
jb
es
xor
ret
jl
adc
ss
fwait
into
sbb
ja
mov
out
lret
adc
mov
xchg
icebp
push
jle
mov
lds
fistpl
adc
jl
push
jl
jnp
cmp
and
jbe
pop
repnz
sbb
lahf
jno
dec
inc
adc
call
rcrb
sub
dec
jle
sub
dec
subl
pop
xchg
adc
and
imul
stos
sub
gs
movsb
xchg
loope
inc
aas
sahf
xor
shlb
adc
add
loope
mov
cld
fiadds
mov
cli
jecxz
pop
inc
mov
mul
sub
call
add
bnd
adc
cmpb
push
bound
push
pop
jl
shrb
outsl
xor
cmpsb
jno
sti
das
pop
push
sub
jne
lret
lcall
lods
push
lret
in
arpl
lret
pop
ss
xlat
ret
sbb
mov
int3
rcll
test
std
testb
sbb
adc
stos
push
inc
mov
and
sub
jp
pop
mov
mov
cmp
test
mov
or
xlat
mov
inc
nop
mov
aaa
or
cmp
mov
imull
out
cmp
fdivrs
testl
xchg
rcr
sub
or
push
ss
mov
mov
pop
or
sbb
int
jae
xchg
test
mov
insl
sbb
push
cld
pop
mov
lcall
mov
inc
cmpsl
push
into
pop
dec
mov
lock
mov
movsb
jo
dec
subb
enter
mov
jnp
stc
and
test
and
out
xchg
xchg
fsubr
sti
inc
jge
hlt
dec
lock
pop
xchg
jmp
add
push
mov
subb
push
fisttps
pop
sub
sbb
stc
lea
inc
inc
cli
sahf
pop
pop
fstpt
and
mov
adc
mov
xchg
mov
pushf
test
ret
sub
add
popf
stos
out
jp
mov
mov
sbbl
mov
loope
movsl
das
test
scas
mov
sbb
push
pop
pop
jmp
xchg
aaa
sbb
xor
mov
pop
xor
pop
and
shrl
cli
mov
mov
repnz
sbb
mov
or
lds
cmp
xchg
jge
loopne
data16
pop
xor
pop
imul
mov
push
fsubl
cmp
cld
adc
jmp
mov
sub
into
push
ds
mov
adc
mov
mov
mov
sbb
jg
and
ret
sbb
test
cld
xor
and
test
scas
push
mov
cmc
es
inc
sbb
arpl
xchg
clc
add
pop
sub
insb
mov
inc
sbb
mov
std
or
movsl
dec
shrl
inc
insl
popf
ja
mov
in
dec
jnp
enter
cmp
aaa
sbb
cwtl
clc
mov
fwait
or
jl
sbb
pop
fldt
lock
sbb
cmp
mov
test
shl
loope
cmp
xor
jb
inc
mov
jle
cmc
xchg
push
dec
out
fldl
insb
push
xchg
pusha
add
lods
adc
iret
insb
sarl
xor
mov
and
loopne
inc
add
sub
cmpsl
stos
popf
sub
incl
push
fwait
das
arpl
pop
outsb
out
add
rcr
xchg
mov
fmull
jnp
ljmp
repnz
call
sbb
ja
push
repz
pop
add
in
iret
sbb
scas
sbb
dec
fs
mov
aam
cmp
adcb
push
and
aad
mov
cltd
mov
lret
test
mov
fiaddl
xor
fcoms
movsl
push
inc
cmp
and
mov
pusha
subb
das
pop
cmp
inc
testl
loope
xor
cmp
hlt
pop
add
in
dec
xchg
orl
xlat
fistps
xor
dec
je
negb
cmc
iret
aad
push
lods
or
aaa
sub
das
cmp
adc
int
fnsave
inc
movsl
or
push
pop
lret
aaa
or
cmc
test
mov
mov
loop
inc
push
or
iret
or
daa
push
push
repnz
adc
repnz
loopne
dec
xor
mov
popf
les
test
lods
int3
addr16
push
ret
cmp
sahf
imul
call
sarb
mov
sub
inc
lcall
lds
ja
pop
mov
cmpsl
jmp
mov
aad
jmp
adc
push
mov
or
and
icebp
sub
or
aad
stc
xchg
call
add
pop
add
aad
das
into
imul
pushl
sbb
and
or
fisubrl
leave
clc
push
into
movsb
loopne
rcrl
push
add
mov
cmp
hlt
sub
mov
clc
jmp
xchg
or
sub
aaa
push
addb
icebp
popa
lcall
cld
push
jno
test
popf
push
lret
addr16
and
cmpsb
or
xor
xchg
pop
mov
xor
lds
rolb
add
aaa
enter
lock
mov
mov
jmp
mov
cmc
rorb
in
mov
sbb
pop
lret
stos
in
jle
scas
rcl
mov
push
mov
sarl
dec
cmp
push
add
pusha
ds
add
addr16
or
lret
lret
push
cmpsb
pop
int
outsl
shrb
popf
lods
stos
sub
sub
mov
push
outsl
mov
ret
pop
dec
nop
jl
jle
test
and
shl
repz
adc
pop
jno
cmp
pop
cwtl
pop
sarb
cmp
inc
adc
aas
out
xchg
ret
sti
cld
or
push
lret
aam
dec
out
cmp
lods
mov
pusha
ss
push
adc
inc
mov
mov
fisubrs
push
repz
outsl
xchg
sti
xor
adc
sub
jmp
hlt
push
scas
or
adc
adc
mov
adc
test
push
mov
das
sub
mov
mov
cmpsl
iret
gs
stos
inc
and
iret
lods
inc
pop
adc
mov
jp
arpl
mov
out
mov
or
sub
ljmp
adc
popf
jb
call
es
ds
fsubs
movsl
sarl
test
popf
outsb
test
outsl
sub
sub
sbb
add
push
je
xchg
faddl
add
and
jns
sub
hlt
pop
mov
adc
outsb
out
inc
hlt
clc
mov
dec
adc
shrl
mov
ret
mull
jb
jmp
sti
adc
or
shll
lods
adc
icebp
sub
mov
xchg
adc
jle
inc
xlat
popf
sbb
fcompl
sti
movsl
mov
mov
pop
pop
fisttps
jmp
insb
into
xchg
xchg
subb
mov
or
or
push
stos
fwait
xchg
inc
inc
loopne
andl
dec
or
cmp
push
pop
xchg
pusha
sbb
ss
jl
ljmp
mov
rclb
xchg
mov
push
mov
or
int3
or
in
push
lea
jne
sub
fmuls
loopne
add
pop
adc
jg
inc
jmp
icebp
loope
fimull
adc
clc
xlat
adc
cmp
rcll
orb
xchg
pop
jne
jo
popa
into
fstps
xchg
int3
cmpsl
mov
dec
cmp
xor
mov
xor
mov
sahf
mov
lahf
jae
arpl
jns
int
pusha
pop
loope
shll
adc
popa
mov
sbb
mov
cltd
mov
mov
lods
data16
mov
cmp
jns
clc
and
xchg
or
out
add
std
aam
mov
mov
xchg
fisubrs
mov
pop
into
lahf
loope
jo
rcr
mov
in
cmpsl
iret
leave
add
ret
jbe
sti
orl
jmp
outsw
pop
ret
out
xor
imul
xorl
icebp
sahf
daa
rol
insl
mov
rcrl
test
and
aam
mov
xor
push
je
popf
imul
pop
mov
xchg
mov
sub
mov
jno
pop
pop
mov
mov
lahf
pop
out
pcmpgtw
mov
test
inc
flds
inc
sbb
nop
sub
or
lods
int
lock
int3
pop
mov
cs
jbe
xchg
insl
test
pop
jo
movsbl
dec
mov
cs
sub
mov
or
mov
jno
adcl
outsb
xor
pop
mov
jge
inc
arpl
aas
stc
clc
pusha
loop
mov
jg
mov
ret
es
jle
add
sbb
or
cmp
insb
mov
pushf
dec
hlt
add
addb
xchg
inc
sbb
movsb
xchg
mov
sub
fnsetpm(287
xorb
mov
movsl
daa
mov
mov
dec
push
loope
mov
jb
mov
bound
aam
mov
dec
sub
cmpsb
clc
in
pushf
xchg
lods
push
cld
nop
in
jecxz
or
jae
ljmp
sti
je
into
lea
xor
stos
bound
sub
lret
jnp
inc
mov
and
lret
inc
and
mov
cld
mov
fs
test
sub
js
mov
in
push
mov
xchg
sub
nop
xchg
adc
mov
mov
and
pop
sub
jle
ljmp
mov
pop
into
lock
in
add
sub
fbld
add
push
out
fildll
mov
leave
out
rcrl
rcrl
pop
iret
pop
repz
sub
fwait
cmp
pop
mov
int3
out
push
or
mov
lods
nop
pop
lock
loop
mov
jl
jl
xor
pusha
inc
mov
testl
pop
xor
add
loopne
cld
adc
mov
lods
mov
xchg
mov
stos
mov
mov
jmp
sub
pop
cmpb
pop
fsubrl
popf
leave
add
or
fidivrl
sub
jnp
xor
sbb
mov
fs
push
sti
loope
pusha
rcrb
outsl
bound
jae
or
sti
mov
jecxz
xchg
shll
out
popa
test
adc
das
rolb
test
xchg
inc
nop
adc
sub
and
lock
adc
cmp
cmp
cs
ret
test
pop
out
fnstsw
pop
jnp
repz
xor
jo
cmp
push
xlat
dec
imul
pop
insl
pop
jg
xchg
push
adc
sbb
loopne
idivl
add
lods
mov
mov
aad
mov
imul
rep
add
hlt
clc
shrb
loopne
bound
mov
lahf
ret
mov
push
cs
fsubl
pop
bnd
mov
dec
sbb
sub
pop
fdivr
lcall
shr
fisubrs
mov
dec
gs
test
sub
test
mov
nop
out
sbb
outsl
pop
stc
cmpsb
jg
ret
popa
pop
sbb
or
pop
jo
fs
sub
jle
fldl
push
enter
std
dec
mov
sti
jecxz
and
loop
pusha
stos
out
addr16
ret
imulb
jbe
in
jbe
loope
int3
mov
xchg
push
pop
std
imul
sahf
dec
data16
cmp
add
mov
or
or
push
jno
add
mull
enter
repnz
adc
push
or
sub
sub
cltd
pop
inc
pop
mov
lds
xchg
inc
add
inc
lds
out
mov
lds
sbb
or
loopne
into
test
outsl
movsbl
aam
cli
cld
test
es
stc
xchg
and
and
test
mov
fwait
adc
and
mov
in
adc
dec
xor
dec
xchg
cpuid
xorl
adc
ds
out
push
mov
into
rclb
gs
data16
lods
in
lods
or
cmp
aaa
pop
ret
sbb
or
jmp
sub
cmp
mov
lahf
aaa
rolb
dec
bound
icebp
std
popf
pop
loopne
cmp
shlb
xchg
loopne
loope
ret
repz
scas
mov
lock
push
inc
sbb
dec
das
fprem1
pop
test
xor
test
adc
cwtl
xlat
aaa
add
lea
repz
mov
lea
jmp
mov
lea
pop
out
mov
sarl
addr16
sbb
adc
aam
ror
push
xchg
rclb
lfs
sbb
pop
fucomip
ficoml
pop
or
mov
jmp
jp
and
fisttpll
push
jo
flds
push
adc
jno
pop
push
aad
lods
mov
sub
int3
xlat
add
pop
dec
lahf
sub
push
movsb
or
mov
mov
push
inc
sahf
xor
jne
ret
notb
fsubl
jo
lcall
repnz
xor
pop
adc
and
jb
and
push
xor
or
fcmovnu
scas
call
lea
sbb
jbe
inc
mov
xor
in
push
or
insb
pusha
testl
movsl
jns
scas
insb
mov
mov
out
and
enter
fmuls
sub
dec
popa
jbe
nop
add
cli
adc
lds
add
dec
adc
mulb
xchg
sbb
test
jg
mov
pop
arpl
jae
ret
pushf
orl
sbb
jo
push
sbbl
mov
fs
push
cmpsl
xor
cmpsl
pushf
out
insb
loop
rorl
test
mov
mov
loopne
loope
fadds
enter
leave
insl
loop
mov
out
inc
jae
mov
pop
fnstcw
cli
or
xchg
mov
out
clc
mov
lock
ja
test
jno
stos
das
rcrl
dec
lret
pop
xor
movsl
sbb
cmpsl
xor
pop
push
cmc
sub
add
cltd
xchg
cmc
jge
cmp
call
je
xor
and
cld
or
aas
adc
wbinvd
lds
ss
adc
in
inc
pusha
mov
sti
lcall
lock
hlt
mov
or
loope
pop
dec
add
cmpsb
cmp
into
outsb
mov
mov
or
sub
add
cmp
sbb
stos
or
inc
push
lea
push
or
aas
adcb
inc
cmp
repnz
pop
sbb
cmp
imul
out
xchg
scas
xor
adc
xor
sub
test
add
scas
ljmp
out
das
add
and
pop
fisttpll
ljmp
adc
stc
jp
inc
or
movsb
pushf
sbb
inc
loopne
pop
dec
mov
dec
mov
out
jb
popl
ds
mov
cmp
dec
mov
mov
add
arpl
xchg
daa
pop
ret
cmpsb
jp
cmp
cmc
mov
sbb
test
call
test
mov
nop
and
or
addb
inc
mov
inc
jge
fstpt
jl
adc
loope
sbb
mov
out
push
les
inc
push
mov
adc
rolb
sub
and
pop
pop
out
mov
ret
movsl
jne
pusha
mov
inc
push
and
adc
cmp
xlat
out
fwait
stos
cmp
sub
push
fbstp
sarl
pushw
xor
mov
add
inc
dec
dec
std
movsb
jo
lods
pop
jp
aas
pop
imul
orl
sub
add
and
add
inc
jbe
dec
xor
mov
in
push
sub
daa
movsb
dec
mov
fldt
and
mov
movsl
iret
leave
pop
cs
bound
ret
insl
mov
std
pop
jg
or
orb
cmp
test
cmp
xchg
and
push
pop
sub
or
test
sub
stos
cmp
out
mulb
jnp
cld
dec
out
cmpsb
push
repz
jne
repnz
fprem
lods
push
dec
mov
int
arpl
and
test
loopne
imul
ss
sbb
ret
cld
push
iret
test
out
and
mov
add
int
inc
movsb
jle
adc
pushl
insl
inc
adc
mov
cmp
sub
sub
mov
dec
aam
cmp
pop
cmp
bound
call
outsl
dec
and
in
into
mov
in
dec
leave
sub
decl
lcall
and
push
and
hlt
shr
pop
cs
xchg
add
cli
fists
cli
mov
push
xchg
add
pop
rcrb
and
cmpsb
sub
gs
ja
push
cmp
xchg
stc
add
faddl
sbb
pop
dec
mov
dec
mov
adc
jmp
sub
dec
push
push
adc
add
xchg
adc
leave
int
pop
xchg
mov
sbb
mov
cmp
scas
fldt
dec
mov
cmc
stc
push
inc
gs
testl
test
push
xchg
ja
aaa
add
add
mov
pop
or
mov
xor
cmpsl
inc
mov
jmp
sbb
xor
push
pop
xlat
jmp
and
add
sarb
sbb
mov
setno
sti
sbb
jns
push
jae
ss
es
lods
es
fwait
cmp
sahf
push
lds
inc
inc
xchg
pop
pop
push
or
test
repz
mov
in
lds
popf
dec
add
add
jo
pop
or
xchg
js
xchg
shl
pop
pop
or
xchg
mov
pop
out
insb
aad
push
pushf
je
xor
cmc
dec
push
inc
xchg
cli
mov
int
mov
ljmp
mov
mov
inc
fs
dec
xorl
es
shl
sbb
inc
dec
sub
mov
imul
inc
xor
iret
lods
fnstsw
rcrb
xor
xlat
pop
add
xor
jnp
testb
rcll
sbb
icebp
mov
mov
cmpsb
jl
mov
aam
aaa
fwait
xchg
ja
mov
pusha
or
mov
lcall
jns
adc
xor
addb
push
mov
jo
insb
in
sbb
icebp
call
addb
xor
push
sarb
jle
stos
and
mov
push
ljmp
and
les
daa
call
icebp
fnstsw
pop
or
in
testb
pop
mov
arpl
xchg
loop
cmp
data16
pop
inc
push
das
icebp
enter
sub
fwait
rcrb
xor
loopne
shl
jno
and
in
mov
sub
or
loopne
sldt
sbb
dec
push
dec
pop
std
insl
cmp
and
and
insl
xlat
inc
ja
dec
push
clc
out
mov
inc
sbb
jmp
push
hlt
push
ftst
jb
test
sub
fbstp
add
fcomps
rorl
sahf
cmp
lock
loop
mov
imul
pop
out
adc
pop
inc
mov
jae
pop
sar
pushf
mov
testb
jecxz
repz
inc
fcmove
mov
pop
push
outsb
dec
subl
adc
adc
call
adc
push
ss
movsl
push
xor
fwait
add
rcll
push
pop
jns
mov
sbb
sbb
xor
test
repz
loope
bound
jnp
lahf
push
jo
push
cld
cwtl
enter
jg
push
aas
cld
adc
bound
dec
popf
lock
sub
or
insl
dec
mov
and
jp
push
mov
sbbb
pop
fistpl
in
leave
aaa
or
vmovapd
js
sti
clc
mov
inc
ret
adc
fimull
dec
lret
adc
stos
mov
sub
jg
gs
xchg
cmp
mov
shrb
push
push
scas
dec
mov
push
icebp
dec
repz
push
stos
repz
mov
jmp
mov
cwtl
mov
dec
int
das
std
mov
jl
call
and
pop
add
mov
lock
rolb
std
add
or
push
lods
mov
cmp
or
insb
or
nop
jb
cwtl
jecxz
push
mov
push
aam
ficomps
xlat
mov
or
push
movb
inc
jmp
cmp
push
stos
dec
cld
call
enter
nopl
pop
push
filds
sub
push
test
push
div
dec
ror
mov
mov
jne
sub
stos
es
lcall
in
clc
mov
mov
push
sti
enter
ficoms
push
shrb
dec
pushf
arpl
out
xor
iret
inc
sbb
jo
fsubp
lock
xorl
sub
inc
mov
push
fmul
scas
gs
xchg
jp
out
shll
mov
or
jecxz
insb
in
neg
or
data16
das
mov
cmp
scas
and
mov
fs
cmp
stc
cmp
int3
popf
cmpsl
xlat
and
in
outsl
push
cmp
mov
cmp
out
loope
add
push
aaa
fwait
push
mov
mov
hlt
or
repnz
adc
and
dec
pop
adc
popf
add
mov
xchg
or
jns
mov
adc
or
add
rorb
je,pt
inc
inc
sub
out
sub
lods
cmp
icebp
inc
pop
inc
mov
mov
lock
dec
and
enter
pop
fstps
jp
mov
push
push
push
cmpsl
sbb
movsl
jne
jo
ja
sbbl
movsb
and
ja
and
mov
ror
in
sti
mov
mov
cmpsl
add
sbb
fnstsw
xlat
fsubrl
fldt
mov
dec
and
or
pop
cmpsb
pop
lock
jle
push
aaa
push
in
sub
daa
pop
iret
dec
jne
ret
jno
pop
jne
imul
rcrl
mov
mov
xchg
sbb
sbb
cmp
cmp
sbb
inc
dec
and
sbb
mov
in
ljmp
cli
mov
mov
adc
ja
idivb
in
sub
and
mov
mov
or
inc
xchg
pop
xchg
pop
mov
adc
jge
dec
xchg
dec
jp
les
xor
pop
scas
mov
aaa
imul
or
cmp
cli
subl
and
push
leave
cwtl
faddl
pop
bound
pop
xor
stos
sbb
jnp
call
jns
cltd
mov
jae
gs
sbb
pop
sti
scas
push
mov
dec
mov
xchg
inc
into
push
push
mov
pand
fildl
shrb
and
fwait
sbb
int
je
data16
inc
cmpl
sbb
clc
add
mov
and
inc
mov
adc
clc
inc
cmp
ss
and
xchg
test
pop
jbe
dec
add
mov
ljmp
or
mov
xchg
xor
adc
popa
in
push
sub
and
andb
cmp
clc
and
ret
cmp
sbb
scas
js
lds
fst
lcall
and
jle
or
sub
repz
push
ds
iret
clc
mov
mul
adc
movb
fdivrl
mov
cld
cmpsb
mov
sub
cmp
stos
dec
mov
xlat
ficoml
jo
xor
or
fisttpll
hlt
ret
lcall
test
lret
loope
rep
mov
jmp
mov
sub
sbb
dec
inc
hlt
lea
aam
roll
icebp
inc
cmp
std
out
inc
sti
imul
mov
xchg
xchg
sarb
add
fwait
fwait
xchg
mov
sub
sbb
mov
fistl
xchg
cmc
loop
or
js
cmc
xchg
and
ret
push
fstps
sahf
stc
ret
cs
dec
pushf
cmpsl
jmp
inc
aas
lret
cmpl
gs
fsubrs
and
imul
int
fisubl
inc
mov
mov
loope
xchg
pop
mov
arpl
lds
insb
ret
inc
sbb
sahf
jg
ds
adc
adc
fadd
cltd
push
gs
push
das
mov
cli
cwtl
pushf
sti
dec
stc
in
push
sbb
cmpsl
sbb
mov
inc
mov
pushf
push
sbb
insb
cmp
xchg
sub
test
daa
mov
mov
xchg
cmp
xchg
rorl
pop
popa
mov
pop
ret
xlat
ret
rcl
fldenv
xchg
lds
pop
mov
lret
or
jp
mov
and
inc
push
mov
adc
popf
dec
inc
fildll
inc
sub
xchg
imul
pop
jne
std
inc
dec
cld
pop
aam
insl
js
mov
adc
sub
lods
add
push
scas
xor
jne
dec
idiv
call
push
clc
cmp
xchg
int3
int3
mov
lds
pushf
pop
sbb
mov
insb
out
movl
xor
inc
mov
add
dec
clc
or
xchg
jecxz
fistpll
movsl
loop
rcll
cwtl
xlat
inc
jo
data16
lods
sti
std
loopne
mov
pop
dec
aas
and
sub
xor
jg
push
cmp
push
mov
lcall
mov
mov
outsb
push
mov
mov
outsb
cwtl
inc
add
and
push
mov
sarb
mov
inc
loopne
mov
dec
mov
xor
stos
lret
fildll
shl
loope
mov
jp
add
push
xchg
xor
mov
loopne
mov
or
into
sbb
imul
rclb
outsl
push
sub
and
rcll
cltd
daa
test
mov
mov
in
mov
sbb
dec
cltd
lods
rclb
andb
mov
inc
dec
sub
jge
repz
add
mov
push
ds
push
notb
clc
lahf
dec
loop
aas
push
cmp
pop
mov
push
dec
and
in
das
mov
fwait
sub
test
sub
sbb
sbb
and
push
xchg
mov
mov
je
outsb
dec
inc
push
stc
xor
cmp
es
xchg
add
aas
cmp
mov
cmpb
lods
pop
in
xor
repz
clc
je
adc
xor
negb
fadd
adc
xor
outsl
cs
test
test
pop
dec
movl
pop
dec
jnp
and
cmp
stos
mov
xor
pushf
loope
ja
insl
xchg
lret
mov
xchg
jno,pn
aaa
inc
and
loop,pn
test
cld
stc
inc
iret
pop
insb
sldt
dec
cmp
push
push
mov
daa
ja
decb
mov
cltd
jmp
movsb
xchg
xlat
rcl
xchg
jmp
or
mov
sub
xchg
pop
jnp
xor
push
cmc
out
cltd
insb
mov
mov
mov
fldl
cltd
ret
or
cmp
jnp
pushf
cs
mov
sbb
mov
or
out
or
loop
lcall
pop
dec
repnz
sbb
lods
sub
mov
sbb
mov
ds
clc
or
shl
inc
int3
cmpb
movb
mov
jmp
dec
ret
andl
and
cltd
sub
lds
mov
pop
push
in
sub
cmc
cwtl
mov
pop
jp
shlb
cmpsb
ret
xor
daa
cmpl
mov
mov
mov
sar
sub
data16
adc
xor
pop
xchg
loop
and
pusha
es
cmpsl
cmpsl
cmpps
addr16
pop
lret
mov
mov
test
sub
xor
push
adc
cld
int
arpl
or
aas
push
xor
jle
pop
push
sbb
mov
outsb
inc
sti
cmp
mov
push
mov
ret
inc
or
xorl
xlat
daa
jge
cmp
sub
insb
jb
xor
jno
fmull
je
jo
jbe
mov
roll
xor
add
ljmp
and
pop
push
push
test
and
and
shlb
out
xor
mov
jle
mov
or
push
mov
popa
cmp
push
xchg
ja
mov
xchg
cmpsb
mov
outsb
or
rclb
jnp
test
je
int
mov
add
stos
and
mov
mov
nop
inc
push
sbb
je
or
jecxz
imul
mov
jb
dec
out
cmp
jbe
inc
test
xchg
int3
loopne
ja
ljmp
pop
xchg
lea
push
jecxz
inc
mov
rcrl
and
push
mov
inc
js
insl
xor
sarb
pop
mov
scas
sarl
mov
sbb
xlat
cmp
fldenv
jbe
jmp
pusha
mov
cmp
mov
jmp
outsl
mov
repz
or
adc
movsl
sbb
fidivrl
out
and
add
dec
add
decl
mov
mov
sti
push
dec
out
cld
dec
xchg
scas
pop
inc
int3
out
cld
mov
and
out
sub
push
ljmp
mov
mov
mov
push
mov
push
sbb
in
cmp
jmp
pop
fpatan
jl
xchg
push
out
mov
in
enter
inc
cmp
mov
cmp
scas
or
data16
inc
mov
movsb
mov
mov
push
les
sbb
xor
shrl
addl
fwait
stos
movsb
jp
dec
clc
xor
fchs
pop
adc
orl
dec
rol
add
popf
xor
push
sub
xchg
test
mov
daa
in
push
pushf
mov
ja
jge
ret
shl
pushf
cmp
test
jecxz
out
push
repz
mov
jecxz
mov
adc
jno
sub
mov
sbb
outsl
in
les
sbb
sbb
push
shl
ficoml
cmp
out
xchg
hlt
in
lcall
fs
pop
in
ja
push
push
insl
mov
stos
ja
jl
dec
nop
mov
les
shll
xor
dec
lahf
xchg
fidivs
xchg
hlt
jecxz
call
adc
fistpll
mov
jne
push
mov
push
adc
fisttps
test
mov
push
int
cmp
loop
fidivl
pop
outsl
mov
pop
jg
push
aaa
lods
ret
in
jle
cli
and
jecxz
and
ja
outsl
cmp
dec
sbb
add
mov
jge
cmc
sub
fwait
push
push
push
dec
dec
xchg
xor
xchg
data16
xor
movsl
ljmp
push
int3
outsl
pop
aas
insb
sub
into
mov
cmp
or
inc
pop
int3
dec
das
mov
cli
sbb
pop
add
pop
xchg
xchg
add
xchg
pop
icebp
dec
and
mov
lock
push
jne
loope
xchg
sahf
test
int
pop
cmp
and
pop
aas
outsl
push
outsl
mov
outsb
incb
notl
decl
loopne
lahf
sub
lret
addr16
lahf
cmc
test
mov
addr16
loopne
hlt
sahf
nop
push
pop
jno
push
pop
jae
adc
sbb
ret
lret
dec
adc
scas
loop
cmp
push
out
jg
syscall
xchg
pop
xlat
lcall
and
mov
out
jne
jne
je
add
int
jns
call
fisubrs
push
push
sbb
xor
xlat
xchg
divl
lcall
jno
arpl
mov
loope
push
push
xor
mov
add
out
push
sub
push
push
and
shld
or
pop
jno
jno
mov
sub
push
cmp
dec
test
in
adc
inc
mov
sbb
dec
out
test
adc
add
xor
cmp
shr
dec
cmpsb
ds
mov
cmc
or
pop
mov
iret
sbb
loopne
push
out
inc
popa
pop
in
push
outsb
cmp
popf
lcall
push
dec
and
test
mov
lcall
push
push
dec
inc
in
in
xchg
jne
mov
mov
cltd
lret
data16
aad
jns
and
xor
cld
sbb
lret
mov
icebp
test
popa
xorl
nop
ret
shll
jmp
popa
xor
fimull
mov
xor
add
push
add
xor
fcmovnbe
xchg
fiaddl
arpl
sti
push
shl
pop
mov
mov
jg
out
or
js
outsb
aam
jl
or
pusha
jl
xchg
pop
jl
pop
sarl
add
push
mov
inc
mov
jecxz
shlb
jge
push
pop
pop
cs
cmp
aam
ffreep
daa
sub
jl
xchg
mov
push
rolb
ja
cmpsb
fdivrs
clc
cmc
bound
jnp
add
ja
fcmovnu
and
pop
insl
ja
cli
pop
push
outsb
int
popl
jecxz
push
scas
pop
xor
jbe
cmpsl
test
sbb
hlt
ja
aas
mov
adc
sbb
push
mov
sbb
jg
aad
out
xor
loopne
negl
and
movsb
iret
sub
xchg
xor
mov
iret
adc
ljmp
sti
add
bound
cmp
movsl
outsb
and
adc
vunpcklps
cmovle
jno
aaa
into
test
in
xor
add
imul
push
cmpsb
stos
adc
push
icebp
mov
lret
sub
outsl
or
lahf
mov
insl
xchg
fwait
mov
loopne
pop
jg
pushf
addr16
sub
jbe
lahf
mov
add
xor
and
and
xchg
imul
dec
roll
aaa
mov
imul
ficompl
out
test
scas
movsl
imul
ljmp
aam
cmp
or
sahf
cs
adcl
and
pop
or
fldl2e
movl
or
adc
test
call
xor
sub
mov
nop
pop
and
add
sbb
in
rcll
leave
sub
cmc
lods
repz
lods
rolb
mov
xor
pop
mov
mov
popf
jle
inc
mov
or
add
into
enter
sbb
cmp
jge
and
add
aam
test
xor
or
pop
es
jns
dec
dec
or
test
dec
aaa
dec
push
insl
pop
and
into
pop
adc
aad
lods
adc
push
fidivrs
jae
sti
add
mov
xchg
or
pusha
daa
push
sub
inc
mov
das
dec
add
imul
mov
repz
xor
cs
jno
push
jle
inc
cld
dec
add
push
div
add
mov
pop
xor
cmp
data16
ficomps
cmpb
movsl
int3
inc
sub
aas
ret
ja
sbb
push
fwait
lret
loope
mov
cmp
xchg
and
cmp
sub
fmull
call
js
add
ds
adc
fwait
sub
cmpsb
ret
fsubrl
mov
out
je
fstps
lds
mov
push
inc
cmp
pop
xchg
dec
add
shl
push
sti
fsubr
dec
test
or
mov
imul
subb
imul
cli
inc
in
mulb
fwait
add
hlt
dec
fists
bound
mov
cltd
rorb
xor
dec
jnp
jbe
cli
add
shlb
jo
push
inc
in
hlt
jp
imul
daa
cmpsb
xlat
rcll
in
aas
enter
sub
xchg
push
fs
mov
xchg
sbb
xor
mov
push
mov
mov
lret
adc
idivl
in
mov
mov
jns
lods
icebp
orl
cmp
shll
push
jo
jae
or
mov
push
xor
pop
call
subb
xor
jo
xchg
test
mov
movsl
aas
mov
inc
stos
pop
jo
movsb
adc
dec
sub
sbb
pop
pusha
out
and
dec
in
push
mov
aad
flds
mov
mov
sub
test
dec
push
xchg
pop
or
jl
test
cmp
in
aas
mov
jmp
jge
fldenv
hlt
aam
fstps
xor
or
xor
xor
icebp
aad
stc
test
aam
ja
pop
ret
cwtl
lds
sub
mov
les
jecxz
lods
add
inc
addr16
cltd
cld
xor
xchg
lret
imul
adc
sub
lea
int
pop
jp
inc
sbb
in
mov
int
mov
test
cmp
xchg
mov
fwait
and
and
repnz
pop
mov
pop
pop
stos
add
mov
mov
xchg
scas
pop
cmpsl
push
lret
or
sarl
les
mov
cmpsl
lret
add
adc
jne
lea
fs
repz
rclb
stos
mov
std
fdivr
out
jl
test
movsl
iret
stc
mov
xor
fldenv
in
mov
in
jb
sbb
fnstcw
ret
dec
test
xchg
xor
and
jle
mov
pop
cmc
lods
jno
out
jg
or
xchg
movsb
mov
out
insl
ret
lock
xor
and
pop
jecxz
pop
stos
lcall
mov
aad
popa
cld
into
in
adc
outsl
aas
addr16
xchg
dec
xor
cld
inc
lods
xchg
stos
add
push
jg
adc
xchg
pusha
cmpb
cmp
fcompl
xchg
ja
jne
push
sbb
adc
pusha
outsl
test
stos
flds
pop
pop
fcompl
and
stos
movsb
fwait
pop
dec
je
sbb
dec
cmp
lahf
cmp
add
pop
sub
out
call
jecxz
in
mov
int3
imul
jae
mov
aad
push
sbb
loope
or
cmp
loopne
and
stos
mov
out
shlb
pusha
test
dec
jle
jbe
decl
daa
sub
int
loop
bound
mov
loopne
jecxz
pop
push
mov
xor
scas
jecxz
push
shll
mov
add
pusha
icebp
insl
ja
dec
fwait
pop
loopne
push
sbb
adc
call
mov
xor
divl
cmp
add
xchg
aad
stc
fwait
lahf
add
xor
inc
push
mov
xchg
mov
dec
out
fisubrl
iret
sbb
push
xchg
inc
and
dec
jle
mov
outsb
aam
lods
cmpsb
sub
mov
sbbl
test
sbb
testl
mov
rclb
pusha
js
and
cmp
mov
lods
arpl
add
iret
hlt
pop
mov
out
repz
stos
jae
sahf
lods
add
dec
inc
or
dec
push
sbb
pop
mov
andb
les
daa
fwait
jae
push
dec
inc
mov
pop
test
fsubrs
mov
int
push
push
and
adc
lcall
jmp
jmp
sbb
xchg
jecxz
push
or
mov
cli
mov
pop
lahf
shrb
xor
jg
cli
jl
leave
or
and
mov
test
insb
out
jo
push
xchg
xchg
es
pop
inc
jns
sub
lcall
iret
lock
or
aas
adc
mov
dec
outsl
js
add
jo
pop
jb
xor
fists
in
dec
sub
cmpsb
test
xchg
inc
mov
mov
jle
testb
and
or
jne
pushf
sub
std
add
shlb
or
mov
shl
mov
adc
jno
jmp
inc
dec
jae
pop
mov
pop
jl
and
sub
repnz
mov
mov
cmp
add
jecxz
jl
sbb
push
mov
test
inc
xchg
data16
add
inc
in
and
repz
sahf
imul
and
jp
or
ljmp
in
sbb
mul
mov
iret
mov
andl
fistps
mov
sbb
adc
into
je
andl
ja
bound
sbb
nop
mov
xchg
shll
int3
add
jnp
cmp
aad
repz
nop
dec
inc
outsl
mov
mov
pslld
jnp
mov
imul
dec
gs
sbb
hlt
mov
add
adc
xchg
xchg
and
xor
xor
adc
rcrl
cmc
and
xor
xor
xor
repnz
fs
stc
pop
cmp
xchg
mov
aad
pop
shll
cmpb
ja
orl
dec
cmp
sbb
rclb
aam
out
in
inc
call
add
sub
rcrb
sahf
pop
xchg
nop
xchg
jo
std
mov
mov
cmp
pop
and
fidivrl
hlt
or
popa
xchg
loop
lock
dec
mov
sub
cmp
in
jne
and
xor
and
xchg
pushl
into
mov
scas
add
xchg
lcall
es
ja
xchg
pop
inc
sbb
shll
in
lods
int
sarb
mov
jns
and
sbb
jg
push
xchg
adc
ljmp
pop
lcall
adc
loope
push
aad
call
push
mov
push
or
inc
mov
das
loopne
shlb
shll
fldcw
ror
cmpb
mov
dec
aam
xor
imul
mov
mov
inc
xchg
call
jne
add
sarb
ret
sub
rcrb
outsl
mov
scas
shl
mov
mov
incb
cmc
sbb
lret
rol
popa
jo
sbb
dec
inc
cmp
dec
mov
or
mov
fwait
mov
pop
adc
push
adc
jno
pushf
and
add
aas
lds
mov
orb
cmpsb
sarb
hlt
push
incl
sbb
mov
mov
loopw
cmp
bound
pop
mov
aad
aas
or
mov
icebp
cli
xorl
add
adc
scas
scas
jl
loop
iret
sub
xchg
and
out
cmp
sbb
js
stc
inc
inc
mov
pop
les
mov
lret
sbb
ljmp
fsubs
sbb
ret
xor
enter
and
test
mov
notl
add
xchg
sbb
pushf
pop
jo
stos
sarb
into
add
adc
mov
imul
pop
dec
jne
dec
add
fnsave
adc
mov
xor
stos
pop
nop
imul
and
arpl
adc
stos
jae
jnp
std
enter
seto
lret
or
into
cs
ss
addl
call
push
sbb
inc
xchg
or
inc
outsb
jmp
cmp
js
push
ret
jne
leave
jns
push
xor
dec
xor
outsb
xchg
xchg
mov
dec
jno
adc
insb
sbb
pop
pop
or
mov
test
jmp
dec
les
cmpsl
and
ljmp
pusha
test
xor
rclb
sub
sti
adc
pop
sub
dec
xchg
add
stc
push
inc
outsb
fmuls
repz
adc
push
xor
sar
negb
mov
jb
in
hlt
cmpsb
leave
sar
jge
inc
rcrl
sbb
mov
jmp
adc
repnz
bnd
popa
ret
outsb
lret
xor
leave
aam
cmc
je
jo
imul
fdivs
mov
dec
pop
adcb
jne
ret
movsl
mov
adc
gs
push
shr
and
and
loope
adc
push
pop
inc
rorl
imul
inc
mov
shrl
xchg
cmpsw
mov
mov
cmpsb
or
leave
sub
jnp
dec
enter
lock
cmp
test
iret
dec
lods
push
xor
pop
js
xchg
jo
aaa
sbb
or
sbb
enter
addr16
sahf
test
or
cmp
sbb
arpl
sahf
out
fistps
cli
mov
xchg
rcr
or
aaa
jg
pop
aam
jl
xor
jecxz
dec
sbbb
test
push
insl
adc
cltd
stc
add
dec
popf
iret
mov
mov
adc
ss
cmpsb
cld
or
test
push
stc
sub
pop
int3
mov
cwtl
hlt
pmaxsw
pop
pop
imul
jmp
jae
int
sarl
xchg
inc
pop
push
sahf
pop
xchg
xor
js
test
lods
mov
mov
jae
lret
mov
mov
lds
sub
xor
inc
xor
adc
push
insl
fwait
fwait
ret
cmpb
pushf
jo
fs
repnz
pushf
insl
xchg
pop
or
mov
daa
jo
sub
fisubrl
add
pop
sub
inc
xchg
xchg
test
xchg
std
bound
push
add
xchg
xor
sarl
jns
push
lock
xor
mov
sbb
ret
test
adc
rcll
mov
std
sub
pop
xlat
rcr
push
lods
roll
clc
push
cmp
sti
inc
xchg
loop
jp
mov
sub
lea
sar
cltd
les
pushf
inc
ljmp
jmp
imul
push
push
and
sub
jl
add
int3
mov
or
loop
xchg
mov
push
rclb
jae
push
sti
mov
orb
sub
aad
add
ss
int3
xor
loope
ljmp
pop
jge
out
inc
sbb
sub
imul
mov
gs
aas
cmp
hlt
sti
adc
pop
cs
leave
dec
loop
jae
xlat
jbe
mov
mov
jge
subb
xor
xor
jge
pushf
bound
and
mov
xor
add
lods
clc
jbe
or
ljmp
inc
jg
dec
cmp
iret
sub
test
fistl
addb
xchg
push
and
xorl
jae
xchg
and
push
es
mov
sbb
lahf
push
dec
or
insl
inc
mov
adc
inc
mov
and
lods
pop
mov
sub
lock
mov
loopne
cmpsl
add
sub
leave
pop
pop
je
stos
xchg
lods
mov
repz
dec
lcall
push
fadds
out
mov
adc
dec
movq
nop
and
sub
dec
push
andb
and
mov
add
pop
out
inc
cs
dec
jae
mov
into
test
popa
les
inc
mov
or
inc
cmpsl
fsubrs
add
push
cwtl
or
pop
or
or
idivl
mov
cmp
testb
dec
xchg
inc
cmpb
xchg
outsl
pop
fimuls
int3
push
xchg
sahf
loopne
movsl
push
pusha
mov
jmp
mov
into
popf
bound
jp
pop
sbb
insl
add
loope
ja
and
push
mull
lea
inc
insl
insl
cmc
scas
out
cmp
jae
stc
jno
scas
xor
out
gs
push
ljmp
lret
and
sahf
add
mov
add
adc
jg
inc
mov
rcll
in
int
sbb
divb
lea
stos
xchg
iret
add
mov
xchg
pop
loope
add
lret
filds
cmp
shr
lods
and
sub
mov
les
les
enter
add
sub
inc
daa
ret
lea
sub
cld
cmp
les
in
xlat
adc
mov
jns
dec
adc
cmpsl
push
jo
xchg
lret
add
outsl
out
mov
fdivs
push
mov
je
push
pop
inc
aas
inc
lods
mov
sarl
push
in
daa
test
mov
sub
mov
inc
int3
mov
rcrb
cli
fwait
mov
out
fdiv
leave
or
sub
call
push
hlt
xchg
mov
aam
out
xchg
test
imul
xor
ror
add
subb
or
inc
lds
pop
ja
out
sub
push
mov
or
inc
sbb
divps
sub
ja
mov
fwait
push
cli
scas
pushf
pop
imul
jb
rorl
cld
aas
sub
jb
xor
and
xchg
and
clc
outsb
sahf
popa
ds
ss
cltd
xor
jge
xor
sub
push
xor
mov
sub
scas
xchg
sbb
mov
imul
mov
loop
xor
dec
cs
out
xchg
ds
cs
mov
and
adc
pop
xchg
outsl
jp
out
inc
pop
fdivrl
subl
shufps
orb
push
push
into
in
jle
push
adc
sahf
inc
cmc
loope
mov
lea
push
repnz
mov
or
and
dec
xor
xor
push
stc
inc
rol
inc
lret
mov
fcmovu
jbe
mov
stc
daa
xor
jge
mov
cmpl
and
dec
jno
out
pop
xchg
les
int
jb
repz
jmp
dec
jne
mov
loopne
stos
dec
pop
out
pushf
cmp
adc
test
dec
adc
data16
mov
insb
test
cmp
and
mov
outsb
shrb
adc
xchg
dec
cli
xchg
ja
sub
pop
fnstenv
gs
sbb
imul
test
outsl
mov
dec
movsb
sub
dec
push
mov
call
mov
outsl
xchg
pop
flds
int
scas
push
push
stos
xor
mov
imul
test
ret
pusha
aad
inc
sbb
lcall
ret
sub
movsl
or
push
mov
sub
mov
jmp
dec
sub
loop
push
mov
popf
lahf
mov
pop
push
test
idivb
mov
repnz
xchg
loope
fsubrl
loopne
jecxz
mov
pop
shll
outsl
cmp
and
mov
push
pop
inc
mov
hlt
jo
pop
dec
cld
sbb
rclb
jg
mov
ljmp
cli
fcoml
sbb
pop
and
xchg
xchg
push
and
mov
cmp
pop
test
stc
xchg
dec
pop
cmp
popa
mov
loop
sbb
rcl
cmpsb
shl
adc
pop
fisttpl
jbe,pn
hlt
lock
jmp
imul
ljmp
and
mov
int3
jnp
into
add
insl
mov
jg
lock
xor
jecxz
int
lods
and
cli
mov
imul
out
mov
cmpb
mov
or
insb
xor
push
dec
dec
jmp
mov
cld
xchg
jle
dec
adc
mov
push
push
jns
cs
ljmp
mov
mov
add
mov
mov
sub
clc
cmp
ss
mov
aad
and
push
fstps
repz
push
adc
xor
test
xorl
and
mov
test
ds
dec
into
inc
pop
je
cmp
das
cltd
cmp
aam
inc
sbb
popf
mov
lods
sub
jg
mov
pop
add
add
lcall
dec
adc
adc
lret
fimuls
repz
inc
pusha
in
orb
adc
jae
repz
mov
mov
inc
sbb
inc
mov
hlt
sbb
cmpsl
push
sbb
push
xchg
lea
cmp
or
scas
out
popa
push
imul
dec
jae
push
pop
xchg
in
cmp
mov
stc
mov
add
call
and
mov
mov
sarl
or
jnp
out
adc
sub
lret
cs
jns
repnz
fbstp
xor
fsts
ret
fcmovu
pusha
mov
xor
jmp
sbb
ss
mov
aad
inc
jge
enter
xor
mov
mov
cli
xchg
sbb
fcomps
hlt
shrl
add
push
stc
sub
fnstenv
adc
xchg
aam
dec
fimuls
pop
std
lock
out
test
rcr
dec
fcmovu
cmp
or
gs
xchg
or
add
lcall
adc
inc
jb
shl
gs
and
aam
jg
stos
in
fwait
idivl
pop
dec
mov
movsb
or
xor
push
fdivrs
jl
pusha
sbb
loopne
mov
xor
or
dec
test
out
pushf
xor
adcb
sbb
out
sbb
icebp
and
sti
cmp
inc
lahf
cmp
stos
lods
mov
cld
sub
lea
cmp
and
jge
aam
aad
and
xchg
mov
and
adc
jns
es
inc
pop
sub
les
clc
mov
or
sub
inc
add
add
pop
in
lret
test
cmp
jbe
jge
sub
arpl
push
fsts
dec
mov
aas
sarl
cmp
sub
xor
sbb
ficomps
out
push
sbb
pop
les
xchg
mov
adcl
adc
imul
int
pop
sahf
stos
sti
ret
hlt
pop
data16
jo
pop
clc
fldl
sub
sti
dec
lret
int
xchg
shll
xchg
fbld
mov
mov
mov
lods
hlt
push
mov
aam
lods
jo
xchg
fidivs
lret
cmp
lret
jg
or
aad
jbe
mov
jg
adc
pop
popf
xchg
ret
js
xchg
insl
cwtl
inc
jmp
or
jge
xor
mov
mov
inc
sti
sbb
sbb
cmp
aam
dec
nop
push
jmp
out
mov
scas
bound
int3
dec
mov
pop
sbb
lret
inc
sub
rclb
lods
adc
popl
stos
mov
hlt
xchg
sarl
incb
icebp
jg
movb
je
fcomp
and
ljmp
loop
rorb
roll
subb
call
clc
add
pop
test
nop/reserved
jp
sub
pop
inc
test
inc
outsl
fdivp
mov
jae
sub
fwait
xor
adc
dec
jmp
push
mov
adc
es
dec
jno
insl
xchg
jg
cltd
and
inc
mov
or
sbb
adc
insl
xor
sahf
sub
lahf
mov
dec
lret
push
and
jno
imul
enter
add
ret
arpl
lods
push
mov
xlat
cmp
add
mov
test
aam
cmpsl
les
stos
and
mov
sti
mov
pop
aaa
cld
repnz
repnz
or
lea
movl
dec
sahf
fstpt
cs
pop
in
ret
aaa
cmpsl
cmpsl
mov
fdivrs
mov
adc
dec
push
sub
pop
stos
mov
mov
std
mov
cmp
in
cld
sbb
out
loopne
sub
sbb
scas
addl
out
orl
jns
into
in
fwait
rolb
mov
mov
dec
xchg
pop
jmp
pop
insb
pop
sub
out
ret
lock
mov
dec
imul
pop
push
test
cmp
add
divl
push
push
or
lret
push
push
clc
into
dec
add
pop
shl
add
or
push
mov
push
xor
test
adc
add
lret
xlat
aaa
adc
fmul
in
ljmp
rorl
xchg
xchg
movsb
sbb
ljmp
lcall
jmp
mull
xchg
add
cmp
hlt
cli
mov
fucomp
mov
in
pop
mov
jae
fistpl
ret
fisubrs
je
ret
inc
xchg
xchg
or
xor
jae
in
loope
jmp
ja
mov
jg
and
icebp
rcrl
push
pop
push
lret
icebp
scas
cld
pop
stos
andb
pop
push
loope
aaa
pop
fbstp
adc
jge
mov
pop
xchg
ret
mov
or
dec
mov
int3
adc
inc
bswap
cmpsl
stc
outsl
dec
inc
test
test
xlat
das
js
push
push
sbb
or
adc
mov
rcll
repz
shrl
xchg
push
xor
cltd
push
nop
sbb
lahf
pop
addr16
cmc
addr16
sub
outsl
sbb
out
xchg
fwait
jb
mov
je
pop
or
out
mov
loopne
lods
les
movsb
pop
lahf
sarl
nop
out
movsl
sub
jp
and
cmpsb
loope
or
add
xor
jg
sub
sub
jb
popf
mov
popl
scas
jo
dec
push
in
xlat
mov
in
mov
stos
push
outsb
rcrl
clc
sub
movl
ds
xchg
rcll
orb
lock
push
and
movntq
mov
les
fisttps
dec
adcb
aad
int
sub
mov
cmpl
stos
xor
pop
insl
out
push
and
outsl
sub
mov
ficoml
repz
loop
jno
dec
cmp
inc
hlt
and
cli
cmp
fistpl
push
imulb
mov
sub
out
dec
das
fidivs
outsb
stos
adc
or
sarb
test
out
fnstcw
xchg
jge
fstl
push
mov
dec
jg
mov
je
push
in
cli
dec
repnz
lret
outsb
mov
cs
inc
imull
jns
clc
mov
stos
stc
inc
rcll
xlat
xchg
fcomps
mov
add
jnp
inc
rcrl
cmp
jns
mov
adc
fnstsw
push
ljmp
rcll
mov
or
out
pop
ja
pop
out
lret
cmpsl
pop
cmovne
lret
add
fucomp
inc
push
sbb
lock
push
sub
jge
inc
mov
inc
pop
jge
clc
add
jns
loope
test
xor
iret
clc
jl
aam
vxorps
sub
cld
pop
je
mov
sub
xchg
xchg
cwtl
outsl
adc
fsub
add
bound
xchg
int3
je
xchg
les
es
sbb
jo
insb
sti
add
shlb
and
int3
incl
mov
ljmp
lret
xchg
and
xchg
inc
jmp
dec
pusha
shrl
push
mov
jle
ljmp
push
in
int
test
flds
jg
pop
mov
int3
aas
lods
lret
inc
mov
scas
inc
loopne
popf
jl
jne
mov
push
xor
add
mov
mov
inc
rclb
add
imul
es
or
cmpsb
jne
sub
cmp
in
mov
nop
shl
inc
add
int
xchg
jle
fisttpl
pop
sub
mov
lea
or
icebp
push
add
adc
sub
orl
fxch
sbb
mov
cltd
mov
push
inc
pop
das
sub
fidivrs
push
test
cmc
das
pusha
loop
mov
mov
add
mov
out
cmpsl
fnstsw
dec
insb
cmpsb
xchg
mov
mov
xor
data16
cmp
lahf
mov
insl
enter
mov
inc
movsl
inc
cli
fistps
sbb
lock
les
xor
add
push
push
cltd
dec
in
sub
mov
fsubrp
inc
jns
es
xchg
mov
mov
inc
shlb
popl
xchg
shrb
add
or
popa
and
xor
mov
cltd
in
sbb
hlt
movl
sbb
mov
mov
sbb
sub
pop
adc
rcl
xchg
daa
in
dec
sub
movsb
push
mov
and
pop
popa
fstl
insl
rorl
cmp
sti
int
loopne
int3
jno
push
inc
sub
dec
mov
inc
enter
lds
cmc
icebp
dec
and
das
shll
cmp
in
inc
adc
xchg
mov
mov
dec
lock
pop
push
pop
or
icebp
das
mov
movb
ja
sub
test
nop
pop
dec
je
adc
hlt
in
adc
jbe
xor
mov
xlat
insl
ljmp
mov
mov
adc
adc
xchg
push
cwtl
cltd
xchg
aad
in
ljmp
pop
imul
roll
dec
hlt
cltd
sbb
sbbb
and
xlat
sub
pop
pop
and
mov
lret
jo
jo
mov
scas
fucomp
dec
shlb
inc
cmpb
jb
js
data16
in
in
das
iret
cmp
std
stos
add
sbb
pop
xchg
ljmp
push
add
fldl
xchg
test
xchg
aad
sbb
mov
das
push
push
xchg
test
pop
out
lret
xorl
adc
aad
sbb
mov
and
andb
sbb
push
mov
in
lods
sbb
nop
int3
sub
cmp
add
ficomps
sbb
sbb
sbb
sub
nop
mov
jecxz
loopne
filds
add
call
xchg
mov
push
fs
inc
mov
stos
in
cmp
and
data16
fs
int
or
pop
push
jecxz
push
js
jp
mov
cmp
adc
in
xchg
push
xchg
jnp
ljmp
repnz
inc
lds
adc
xchg
inc
adc
fisubrs
arpl
add
repnz
sar
dec
data16
mov
pop
mov
ror
daa
mov
int
cld
pop
push
pop
add
nop
jbe
fwait
mov
push
lret
xor
ja
das
xor
mov
pop
movsl
adc
lea
adc
stos
sbb
fwait
loop
out
outsl
out
push
mov
lret
cmp
pop
fwait
bswap
lds
imul
xorl
pop
cli
lret
push
adcl
fiadds
push
xchg
and
lcall
add
imul
xchg
mov
stc
xchg
fldt
sbb
insl
cmpsb
push
mov
and
xchg
jecxz
sbb
movsl
pop
repnz
dec
xchg
sub
xor
cmp
enter
jp
sbb
fucomip
sbb
inc
outsl
rorl
sub
rolb
xchg
pop
lods
popl
pop
xor
sbbl
stc
sbb
push
and
pop
fstl
xchg
insb
testl
mov
xor
cwtl
test
xchg
sbb
and
sbb
pop
out
enter
xchg
xchg
jb
outsb
jo
cmpsl
xor
int3
jb
aad
lahf
rclw
dec
dec
mov
pop
scas
push
pop
int
in
iret
hlt
push
stos
and
dec
or
pop
xchg
or
dec
jle
pop
loopne
imul
sarl
std
add
ret
imul
xor
jbe
xor
jae
loopne
adc
lock
push
cmpl
or
mov
mov
mov
pop
sub
lahf
xor
fildll
enter
adc
lea
or
jno
xor
xchg
xchg
test
xor
xlat
push
dec
cwtl
inc
xchg
clc
add
pop
sbb
adc
scas
mov
shll
or
mov
test
jl
movsb
jo
clc
daa
sub
adc
xchg
lahf
sub
or
jmp
sahf
es
aam
jb
add
leave
and
adc
ljmp
sbb
pop
repnz
dec
ljmp
frstor
fistl
outsl
das
int
cwtl
arpl
test
cs
imul
xchg
or
sbb
inc
insb
jb
pop
in
mov
imul
inc
push
xchg
jecxz
enter
stos
sbb
push
cmpl
add
hlt
lret
dec
mov
mov
add
adc
mov
sbb
push
data16
dec
lcall
add
push
dec
push
add
xchg
add
jl
nop
test
js
adc
push
fnstenv
inc
xchg
dec
mov
push
mov
pop
out
xor
mov
mov
mov
dec
and
shl
jmp
push
mov
pop
mov
iret
nop
push
mov
mov
gs
test
cld
sub
leave
aam
dec
inc
mov
jmp
cmp
push
cs
sub
mov
inc
leave
add
jp
xchg
mov
inc
xchg
adc
xchg
fmul
sub
sbb
sbb
out
xor
cmc
jecxz
sub
data16
xor
lods
shll
push
jl
mov
cmp
mov
dec
subl
sbb
arpl
stos
mov
enter
sahf
popa
popa
imul
sahf
ljmp
aam
imul
dec
sub
fwait
sub
lock
push
enter
fstpt
mov
jo
sbb
cli
sub
jecxz
mov
mov
xchg
cmp
ret
loop
inc
add
ret
push
mov
stos
mov
jle
sub
xchg
rolb
push
sub
hlt
aad
add
aad
cmp
in
in
inc
mov
test
push
lock
xchg
push
or
sbb
mov
gs
cmpl
xor
jb
sbb
inc
pop
sahf
out
mov
not
insl
dec
cmc
cwtl
pop
and
mov
cltd
and
and
sbb
into
iret
adc
lds
xchg
or
or
repz
cmp
fldt
mov
sub
inc
push
adc
mov
arpl
enter
lret
ja
adc
mov
movb
enter
mov
pop
pop
jnp
adc
dec
sarb
lea
test
aaa
mov
adc
js
mov
pushf
cli
cmpsb
cld
push
loopne
outsl
adc
sub
adc
addr16
and
test
xor
andl
and
push
pop
mov
sbb
mov
xlat
and
movsl
movsl
stos
pop
out
imul
data16
push
jns
mov
sub
pop
std
sub
mov
and
bound
mov
and
pop
pop
sbb
out
ret
push
loopne
cmp
sbb
or
std
mov
cmp
shll
mov
xor
add
ds
inc
inc
mov
mov
or
adcb
or
pop
xchg
dec
xor
aas
movsl
outsl
mov
jle
sahf
dec
aas
mov
out
xchg
in
add
mov
loopne
loop
stos
orl
lret
jnp
cwtl
pop
jb
test
cmc
movhps
xor
xor
shl
hlt
xchg
pushf
adc
xchg
push
daa
lgdtl
cld
push
pop
lods
or
adcl
ljmp
jne
outsl
aad
aam
bound
stos
bound
or
and
inc
mov
or
cwtl
pop
out
sub
movsb
dec
sti
inc
or
jbe
mov
in
fs
lods
cmp
nop
cmpsl
lds
leave
pop
stos
rolb
or
adc
push
hlt
insl
jne
xchg
lods
scas
xlat
push
push
pop
imul
fs
mov
pushf
adc
in
sub
in
jmp
arpl
dec
lea
pop
xor
cmpsb
mov
pop
mov
iret
call
lock
repnz
xor
or
push
xor
mov
xchg
js
inc
repz
sahf
dec
mov
and
push
mov
push
or
adc
bound
push
push
cmpsl
ret
testl
adc
orl
xor
ja
ljmp
mov
xor
push
ljmp
call
cmp
movsb
cmpsb
lds
dec
imul
rcl
loopne
cmpb
in
push
mov
dec
pushw
push
add
dec
mov
icebp
lock
mov
jecxz
fmul
xlat
out
sahf
dec
xchg
jo
sbb
je
leave
dec
jmp
out
movsb
mov
ret
mov
push
inc
and
movsb
in
push
mov
adc
hlt
adcb
pop
aas
pop
sbb
popa
adcl
aas
into
mov
mov
rcll
xchg
xchg
std
mov
in
dec
or
jns
pusha
xchg
and
cmpb
mov
ljmp
lods
cmp
dec
in
xchg
mov
mov
xlat
stos
adc
sbb
mov
push
lods
cmpb
movsb
test
lcall
pop
pop
or
add
pusha
dec
aas
ja
not
das
mov
push
add
adc
in
mov
push
xchg
inc
es
dec
sbb
out
mov
stos
insl
add
pop
add
mov
xchg
sarb
adc
adc
rorl
add
push
outsb
in
dec
jecxz
popf
mov
pop
push
add
sti
or
jnp
fimull
xchg
mov
xchg
push
push
inc
stc
fisubs
dec
sbb
rorb
add
adc
push
jecxz
push
xchg
xchg
or
mov
xor
mov
test
pop
xor
sbb
ljmp
pop
and
and
out
pop
lods
das
repz
cltd
aad
aas
dec
int3
sub
aam
cmp
lea
dec
mov
jg
test
jb
mov
jecxz
pushf
fs
inc
jmp
cmpsb
dec
xlat
cli
push
push
lods
sarl
cli
sbb
sub
js
aas
push
mov
jb
scas
jno
or
adc
dec
jne
insb
mov
cmp
push
cltd
push
dec
fimuls
add
cs
fisubrs
pushf
sbb
dec
roll
mov
jg
movsl
inc
push
push
fwait
sub
or
lret
mov
mov
fsubrs
sbb
push
mov
inc
call
inc
dec
cmp
jno
fs
inc
xchg
std
sub
hlt
lods
xor
sarb
lret
aas
inc
mov
sub
orl
je
push
mov
and
push
mov
jbe
paddw
mov
in
sub
add
jb
insl
ret
test
ss
das
pop
enter
mov
adc
add
push
shll
mov
push
cmc
jnp
adc
lcall
inc
inc
xor
lret
dec
fcmovu
xor
lods
pop
push
lret
ja
scas
fbstp
push
xchg
add
lods
shlb
rcrl
shlb
mov
mulb
cwtl
mov
adc
das
pop
aaa
xor
movsb
int
sbb
push
popf
cld
cwtl
lret
mov
ret
adc
adc
outsl
fbstp
cmp
out
push
lods
pop
adc
xlat
push
loopne
mov
jmp
aad
mov
push
xchg
cmpsb
adc
xchg
dec
jl
xor
loope
inc
and
sub
hlt
adc
adc
dec
jno
fsubl
stc
pop
es
cmpsb
inc
cltd
xchg
jae
sub
test
mov
pop
push
call
dec
mov
jge
sahf
ja
les
inc
rol
lret
adc
and
mov
xlat
aad
loop
popa
clc
or
xor
push
aad
lods
inc
aam
xchg
xor
into
inc
pop
sub
fldt
and
mov
les
or
sbb
inc
push
clc
fsubrs
in
push
inc
lahf
add
out
pop
jae
les
jne
cmp
rcrb
addl
xlat
push
sti
xor
lret
add
shrl
sbb
sarb
ja
push
push
dec
ficompl
pop
mov
in
add
adc
add
js
fdiv
out
mov
outsl
jnp
push
pop
push
outsb
push
stc
es
lods
mov
sub
cmpb
fs
out
mov
shll
data16
add
mov
ret
sbbb
pop
xchg
push
sbb
test
lret
mov
pop
ficompl
xor
jmp
aam
into
fsubrs
ss
mov
dec
xchg
pushf
aas
pop
bnd
xor
rcr
cld
mov
adc
and
lret
adc
jne
jo
cmp
dec
test
shll
pop
cmp
sub
sbb
xchg
loopne
mov
jne
jae
loop
test
fadds
ljmp
lock
nop
rcr
repz
mov
cmp
pop
movsl
mov
in
dec
lock
stos
xchg
nop
xchg
lods
pop
cmpsl
dec
jbe
and
xchg
jno
aaa
loop
sbb
sbb
xlat
inc
inc
jnp
mov
cmc
push
jae
ret
les
fists
cmp
cwtl
enterw
lea
in
stos
mov
ds
es
pushl
fimull
dec
mov
cmp
mov
push
imul
icebp
rolb
mov
test
in
pop
push
xlat
mov
xchg
std
dec
das
sbb
lahf
lahf
adc
sahf
stos
aas
push
and
pop
push
push
loope
or
sbb
sbb
push
mov
pop
xchg
pop
repz
arpl
mov
lret
push
test
fldl
cmpsb
cmpsb
and
dec
divb
jl
sbb
sahf
test
dec
jns
fiadds
pop
cmpsb
dec
jnp
scas
bound
mov
icebp
cltd
js
mov
outsl
push
dec
push
stc
iret
pop
push
push
stc
xchg
or
ss
or
in
sbb
bound
dec
pop
iret
repnz
bound
xchg
xchg
sbb
dec
mov
fcmovu
jns
lcall
shlb
xchg
inc
cmp
jne
and
stc
popf
aam
cmp
nop
sar
jge
les
enter
addr16
fistl
push
jno
sbb
mov
push
xlat
add
mov
pushf
cld
sub
scas
jg
rcll
and
dec
insl
xchg
in
addl
pop
mov
mov
sahf
je
push
cltd
pop
push
lea
jae
xor
mov
fistpll
sub
arpl
push
call
pop
cwtl
aad
divb
sub
cltd
clc
lods
aad
daa
ds
out
sub
iret
sub
jp
stos
sub
sub
and
fidivl
xlat
leave
adc
dec
pop
ss
ficomps
test
cmp
adc
jne
xlat
and
testb
ss
sarl
lret
dec
cmovbe
xchg
ret
cmp
mov
inc
mov
fwait
adc
cltd
jae
lahf
push
xor
push
movsl
cs
cmp
sub
int3
dec
popf
loope
xchg
mov
daa
pop
or
jne
xor
shl
repnz
pushf
jnp
jo
fs
add
pop
pop
sub
dec
pop
hlt
xchg
out
out
pop
cmp
int3
sbb
xchg
sub
push
fldl
mov
mov
sub
inc
push
cmp
sbb
cmp
and
pop
jg
xor
or
cs
xchg
arpl
dec
inc
aad
std
push
lods
inc
sbb
ret
imul
cmp
inc
ss
cli
push
xchg
dec
xchg
jp
test
nop
inc
pushf
mov
outsb
push
sub
hlt
mov
push
rorb
push
repnz
xchg
jbe
add
test
repnz
daa
push
imul
test
dec
sub
icebp
mov
xchg
pop
adc
pusha
lods
jbe
xchg
push
enter
jecxz
in
mov
icebp
mov
pop
dec
mov
add
push
inc
sub
or
imul
jae
push
shrb
push
leave
cmpsl
subb
xor
test
and
jmp
add
testb
mov
fnsave
inc
clc
stos
adc
jns
jno
fsubl
aam
or
or
sbb
mov
mov
mov
daa
or
mov
push
cmp
outsb
mov
pop
xlat
pop
fistpll
mov
adc
sbb
lret
adc
push
pop
cmpsb
xor
repz
lcall
jecxz
jmp
call
push
daa
adc
dec
scas
lods
push
adcl
loopne
rcl
sbb
test
lret
inc
cmc
dec
sub
pop
cmpsb
mov
mov
adc
push
sbb
fimuls
int3
cmp
xor
movb
xchg
aas
xor
inc
popf
xchg
cmpsl
outsl
test
popf
imul
jb
stos
into
push
pop
mov
mov
inc
adc
imul
cli
jae
cmp
mov
out
fucomip
sbb
sub
push
xor
lret
into
fildll
pop
cmp
jg
push
jb
jge
xorb
inc
jl
repnz
int
push
pop
lcall
imul
mov
das
pop
inc
cs
lret
push
mov
xor
jb
add
int
mov
jae
cmp
lcall
add
ret
sbb
sbb
movsb
mov
and
lods
xchg
pushf
ss
sbb
addl
mov
xchg
add
in
xor
test
rolb
stc
sbb
fsubr
xchg
jne
std
push
mov
and
mov
ja
push
adc
daa
sub
test
divl
push
mov
jnp
leave
inc
mov
in
lds
adc
inc
mov
sub
xchg
push
imul
inc
pop
gs
rcll
scas
xor
hlt
or
adc
addr16
mov
ret
lret
inc
cld
cmp
ds
mov
cmp
imul
arpl
jmp
lret
call
testb
jnp
out
in
test
sbb
or
icebp
inc
mov
mov
sub
dec
popa
ficomps
shll
sub
mov
xor
enter
sbb
jle
cli
and
cmp
aaa
sub
sbb
jg
nop
mov
or
frstor
pop
scas
shll
jecxz
clc
call
push
mov
aas
dec
lea
mov
mov
test
dec
mov
jge
cmc
cli
mov
xlat
xor
adc
xor
test
repnz
adc
sbb
int
std
adc
push
mov
lock
rclb
jbe
loop
dec
pop
jmp
dec
mov
jp
mov
xor
rcll
sbbl
or
hlt
rorb
mov
xor
sub
aam
sub
xlat
int
adc
in
mov
je
mov
adc
outsb
mov
dec
jge
xchg
ficomps
push
add
xchg
fisttpl
cmp
xchg
lcall
or
jl
add
fcomps
lock
shll
popa
mov
inc
jb
fistps
pop
leave
add
scas
lret
adc
adc
push
add
inc
inc
int3
xchg
pop
rcr
into
fnstcw
xlat
push
ljmp
jmp
enter
pop
repz
pop
enter
mov
xlat
cmpsl
add
jne
les
js
xchg
cmp
shll
cmp
mov
xchg
incl
outsb
pop
fs
lock
sbb
sbb
cld
arpl
call
int3
dec
pushf
xor
fnstenv
les
or
movsl
popf
shr
dec
mov
fsubrs
and
mov
pop
into
int3
mov
cmp
jp
cmp
addr16
dec
dec
xlat
fdivrl
adc
lcall
jmp
jle
popf
out
jmp
mov
test
in
movsl
mov
mov
jmp
daa
int
sub
pusha
dec
sti
leave
and
pop
push
push
lret
testb
lods
outsl
lcall
lret
adc
mov
dec
xor
mov
aas
mov
cs
push
adc
sbb
jns
mov
adc
mov
dec
fmull
inc
bound
jecxz
cmp
mov
xchg
dec
xor
mov
outsl
xor
xchg
scas
push
cmp
test
fcomip
bound
inc
mov
sub
pop
aaa
pop
shll
sbb
popl
add
push
pop
es
and
lock
repz
dec
rorl
enter
ret
dec
pop
lock
cli
nop
jnp
dec
push
outsl
sub
cmpsl
xor
insl
add
aaa
pop
fdivl
lods
outsb
jbe
push
or
scas
inc
inc
push
jge
repz
mov
addr16
shl
ljmp
or
mov
dec
insb
xor
push
xchg
pop
xchg
fldt
xor
pop
fwait
out
xchg
cmc
mov
push
cmp
inc
scas
arpl
loopne
mov
stc
ljmp
nop
adc
push
in
rcll
cmp
mov
gs
call
scas
or
mov
notb
jl
mov
pop
sbb
xor
push
cwtl
push
shll
cli
sub
push
xor
bound
mov
test
mov
icebp
jmp
pop
xchg
mov
insb
xchg
js
xchg
sub
sub
jbe
insb
xor
leave
sti
push
aas
js
fwait
repnz
adc
sub
cmc
arpl
lret
xor
lods
jle
arpl
mov
sbb
xchg
mov
fwait
out
mov
bound
adc
cltd
rorl
lcall
push
call
daa
adcl
add
dec
call
lods
lods
movsl
ds
mov
pop
iret
jge
and
pop
push
and
push
jo
or
push
jmp
push
xchg
add
push
out
cmp
mov
into
and
leave
popl
out
add
mov
pop
dec
xchg
dec
int3
bound
shlb
test
mov
stc
cmp
aaa
mov
inc
add
imul
push
in
cmpsl
xchg
add
stos
push
mov
xchg
cmc
pop
add
lods
lods
add
in
fcompl
gs
in
cmpsl
inc
out
xchg
out
push
jecxz
mov
xchg
sarl
adcl
out
add
imul
cmp
std
xlat
aaa
xchg
outsb
in
adc
sub
rolb
push
cmovne
loope
pop
clc
add
jno
addr16
imul
push
gs
jo
repnz
cmc
xlat
lret
push
clc
aad
adcb
mov
mov
repz
and
mov
push
jge
pop
fldl
lods
push
pop
es
les
inc
aam
xor
sub
es
inc
sahf
sbb
xchg
inc
jno
test
jno
mov
cld
cwtl
rcrb
icebp
sbb
pop
addr16
js
push
jne
mov
pop
push
adc
dec
leave
adcl
icebp
mov
push
outsb
inc
sbb
mov
ret
pushf
mov
nop
addl
popa
imul
push
inc
cmc
fists
mov
sub
add
jne
dec
movsb
cmc
orb
cmp
push
dec
rcrl
clc
mov
cmp
outsb
outsl
cmp
lods
xor
enter
rcrl
lock
sub
lock
xchg
adcb
and
inc
xchg
cltd
fcmove
outsl
jae
jl
gs
xchg
stos
test
loop
ljmp
loopne
pusha
incl
lock
ljmp
or
mov
mov
js
bound
push
sbb
nop
stos
in
test
aam
stos
push
sub
std
dec
jnp
icebp
adc
xchg
jl
aam
mov
lock
pop
push
xor
aas
cmpsl
and
adc
adc
jno
sub
inc
dec
adc
pop
jbe
and
pop
mov
mov
mov
dec
push
popa
adc
and
imul
lods
jmp
push
cmp
inc
sbb
scas
lea
cmp
movsb
stos
cltd
pop
pop
jne
cmp
sbb
adc
lea
loope
leave
pop
and
mov
aaa
popa
cmpb
into
inc
push
push
stc
in
push
push
pop
jns
mov
out
mov
mov
adc
jmp
add
add
mov
outsb
jae
xor
cmpsl
jae
and
test
mov
out
idivb
adc
out
jmp
mov
mov
mov
or
fldcw
test
bound
hlt
jmp
test
adc
dec
inc
insl
push
fsubrs
out
sub
add
jg
xchg
out
inc
mov
sub
roll
dec
imulb
sub
cwtl
jno
xchg
rclb
xchg
and
xor
push
sub
ret
test
movsl
mov
mov
or
sahf
not
add
mov
jno
xor
rorl
das
xchg
in
jle
xlat
lret
outsb
rcrl
and
adc
xchg
test
add
scas
stc
dec
stos
les
pop
add
lods
out
dec
pop
jecxz
shll
inc
jb
push
mov
xchg
pop
mov
push
cmp
lahf
xchg
ss
mov
inc
shrb
push
jb
out
add
scas
roll
negl
sti
push
add
rolb
rcrl
and
fisubl
jl
adc
dec
loopne
xor
push
mov
push
mov
aas
mov
and
jl
dec
lret
dec
adc
add
cli
inc
repz
or
xorl
mov
loope
sbb
xchg
dec
das
push
iret
push
and
jae
adc
xor
dec
aaa
adcb
xor
movups
lds
clc
cmp
jnp
cltd
test
sarl
stos
push
dec
push
in
mov
pop
arpl
add
idivb
xor
popa
in
mov
aad
xor
int
sub
or
and
fprem1
push
mov
and
maxps
push
xchg
lods
pop
rorb
sbb
loope
inc
add
jmp
sub
sub
jnp
mov
push
fnsave
cli
bound
add
dec
jge
ds
sbb
cmp
jg
jae
or
xchg
fdivr
es
je
mov
std
or
xchg
cmp
sbb
imul
sbb
cmc
jge
jbe
mov
cmpsb
adc
outsb
xchg
dec
cmp
divl
jmp
ret
sbb
dec
cmp
push
cs
dec
data16
rcll
lret
movb
daa
mov
std
lods
jns
inc
mov
inc
or
repnz
mov
jmp
enter
or
jae
jnp
sti
out
ficoms
pop
mov
or
das
leave
clc
inc
dec
mov
ret
jp
xor
push
xchg
mov
or
xchg
ret
cmpsb
mov
push
mov
orl
leave
aas
lods
test
insb
mov
stos
ss
adc
scas
in
push
sbb
or
or
cmc
xor
push
and
inc
push
sub
mov
popa
cmp
inc
fwait
sahf
pop
mov
mov
xor
in
mov
ficomps
popf
pop
xchg
mov
cmp
push
lret
cmpb
cmc
jbe
mov
jne
es
shl
push
sub
jbe
pusha
addl
add
mov
pushf
push
pop
xor
decb
sub
jns
cmc
sbb
es
jnp
outsl
je
sbb
inc
ljmp
cmp
test
mov
or
shll
repz
inc
fs
sub
icebp
popf
stc
xor
dec
jb
in
add
push
clc
std
push
mov
rolb
mov
pop
xor
lods
test
pushf
or
stos
pusha
fdivrl
stos
fsubl
jp
dec
pop
leave
inc
repnz
add
mov
dec
xchg
andl
inc
adc
ja
xor
fimuls
cmpsb
adc
mov
lods
movsb
xor
jb
cld
mov
jmp
faddl
ret
dec
xchg
test
rclb
popf
bswap
sbb
testb
mov
inc
cmp
mov
inc
xchg
daa
jp
mov
repz
ret
mov
dec
pop
sub
mov
les
lods
lods
int3
iret
jmp
fisttpl
stc
xlat
sub
fwait
fwait
call
cmpsl
imul
pop
sub
imul
jp
mov
insb
ds
popl
cmpsb
mov
shlb
push
xlat
jmp
add
cmpb
push
inc
imull
add
lods
xlat
aam
cmp
jo
pop
fistpll
mull
jb
sub
sub
lcall
insl
jne
out
addr16
subl
out
iret
sbb
mov
jecxz
scas
jae
mov
cmp
xor
sub
aaa
xchg
inc
sub
cmp
sbb
jnp
popa
in
scas
idiv
movb
mov
lret
jo
add
push
mov
sahf
inc
mov
sbb
or
adc
mov
out
and
add
dec
mov
mov
and
div
jp
pop
cmp
cltd
xchg
xor
or
dec
fistl
in
ljmp
jl
mov
js
ds
cli
jecxz
bound
sbb
pop
push
jae
inc
leave
mov
xor
dec
cmp
adc
push
iret
jo
mov
ss
pop
aaa
outsl
sub
lret
and
mov
add
jge
daa
ss
out
xor
sbb
jmp
fdiv
out
mov
cwtl
out
call
inc
stos
sbb
mov
lret
insb
xor
and
mov
mov
ret
arpl
mov
and
cmc
aam
fmull
inc
lret
cmpsb
mov
addr16
nop
add
sar
lcall
loop
enter
mov
int3
dec
sub
shll
and
stos
mov
hlt
lea
cwtl
sub
stos
in
mov
aad
sahf
or
mov
iret
js
jl
mov
lods
sbb
enter
sub
xor
push
pop
fsubrs
je
sahf
mov
lds
or
rclb
fildll
out
xchg
clc
sub
cmp
adcb
lret
adc
cmp
pop
mov
xchg
add
loopne
out
xor
add
push
aas
or
mov
jl
adc
jmp
add
mov
jb
push
aaa
out
jnp
cwtl
adc
jne
jecxz
out
xor
sub
jge
xor
sahf
add
scas
rcrl
imul
stc
cmp
push
ficoml
lock
lret
sub
push
adc
and
faddp
xchg
ja
sbb
sbb
cs
xchg
lcall
xchg
mov
adcl
and
inc
push
in
and
mov
mov
jnp
std
rcrl
lahf
and
ljmp
xchg
jae
mov
inc
in
xchg
inc
movsl
std
and
je
enter
add
repz
daa
adc
pop
jecxz
cmp
call
cmp
xchg
xchg
cmp
jp
std
inc
mov
orb
and
inc
mov
and
out
xchg
jbe
push
jno
jge
pop
and
jo
push
mov
push
xchg
in
push
ss
mov
or
cltd
testb
scas
xor
movsl
jg
nop
imul
mov
ret
fwait
mov
sti
sub
lods
cmp
or
xchg
les
jle
or
lret
mov
push
pop
sbb
mov
aas
jl
mov
outsb
push
in
aaa
inc
cwtl
imul
inc
aaa
int3
jle
jnp
aas
and
mov
movsb
adc
sahf
jbe
pop
loope
movsl
ret
es
das
sar
ds
mov
dec
mov
adc
fwait
sub
pop
jg
mov
inc
cmpsl
xor
stos
or
aas
ja
inc
lods
mov
aaa
sbb
or
test
les
sbb
ds
xchg
mov
popa
popf
jne
loopne
jno,pn
mov
cmc
dec
lods
push
push
sbb
push
push
adc
stos
pop
mov
icebp
xchg
xchg
sbb
mov
cld
out
mov
call
and
inc
loop
arpl
add
jge
je
push
xchg
call
lds
insb
xchg
lcall
flds
push
sbb
je
adc
ljmp
mov
push
jb
mov
push
inc
xchg
mov
mov
mul
adc
add
aas
std
mov
mov
je
mov
fisubrs
idivb
cmp
popa
push
push
adc
test
sbb
sub
add
jle
cli
or
cmp
insl
cmpsl
pusha
mov
jp
lock
jg
push
cmp
repz
lahf
flds
je
test
push
movsl
xchg
cld
lock
jle
std
mov
or
call
sub
jno
add
ss
adc
cmc
pusha
mov
add
adc
lds
sbb
dec
repz
shrl
xor
xor
fs
add
insb
sbb
xchg
scas
test
xchg
ss
fsts
lea
mov
mov
aam
sahf
mov
xor
cwtl
sbb
adc
jecxz
push
or
xchg
test
js
push
nop
and
test
ljmp
add
addr16
cwtl
ja
in
dec
test
sbb
and
ficoml
mov
cs
mov
fnstcw
test
push
dec
loope
jno
push
xchg
scas
cltd
das
jl
mov
iret
push
jnp
out
stos
cmp
out
add
jmp
inc
sbb
xlat
and
push
cmp
inc
push
or
shrb
mov
jbe
pushf
mov
outsb
sbb
loopne
jo
ds
cli
mov
sbb
dec
lahf
adcb
pop
jns
clc
push
mov
mov
push
pop
jg
fistpll
fldcw
loope
fs
push
popa
and
xor
xor
mov
ss
fdivl
pusha
or
xchg
mov
lds
jecxz
mov
xchg
xlat
lahf
pop
scas
xchg
xchg
fcoml
daa
mov
data16
loop
xchg
loope
mov
movsl
add
pop
gs
arpl
xchg
adc
pop
es
into
arpl
sbb
test
bound
xchg
mov
out
aam
add
dec
fsubr
mul
stos
push
shrd
push
push
lret
icebp
shr
ss
inc
pop
sbbb
sub
adc
sbb
mov
bnd
and
pop
push
inc
pushf
jbe
fidivs
jbe
shrl
jmp
pop
mov
movsl
push
dec
jge
mov
sbb
lods
aam
das
cltd
jp
sub
cs
movsl
and
dec
inc
push
jecxz
xchg
mov
inc
imul
dec
add
cmp
sti
mov
popa
fcmovnb
cmp
cmc
mov
test
pushf
jg
inc
push
mov
jnp
and
jns
sub
imul
push
jb
leave
daa
jae
and
inc
mov
ss
scas
xchg
pop
stos
cld
push
or
or
js
pusha
or
ljmp
xchg
push
and
jnp
jnp
stos
and
and
ret
call
loop
sbb
dec
cmp
cli
mov
jg
addr16
mov
test
sbb
nop
xchg
xor
or
or
stos
test
lahf
push
jnp
and
xchg
sbb
inc
and
outsb
pop
ss
popf
imul
jno
bound
add
jg
and
adc
decl
pop
xor
jg
xchg
xchg
sbb
dec
rcll
cmpsl
sub
ljmp
hlt
int
mov
ret
push
dec
rorb
pop
sbbl
aam
jnp
outsb
mov
out
pusha
out
bound
mov
xchg
cmp
popa
jns
outsb
popf
sbb
int3
or
cld
cmp
test
mov
sahf
mov
jne
push
repz
cli
ror
ss
sbb
inc
leave
xchg
dec
ret
and
push
xor
pushf
add
mov
inc
aad
sub
fdivp
sub
scas
fstpt
icebp
iret
loope
fs
pop
push
push
int3
mov
jbe
sub
sub
js
mulb
mov
jmp
hlt
ret
popf
addl
negl
dec
pop
outsl
jo
adcl
mov
mov
push
in
addl
lret
imul
xchg
in
lret
fwait
cmp
inc
mov
cmp
and
and
push
and
lcall
in
lds
mov
xchg
fldt
or
add
jge
insl
outsl
and
sub
int
ret
lea
adc
ret
test
mov
not
sbbb
fimull
jb
imul
jecxz
jg
arpl
out
lret
jl
call
enter
stc
int3
sbb
sahf
push
dec
cmp
push
push
enter
test
hlt
shlb
mov
or
movsl
dec
sbb
add
and
sub
andb
or
aaa
and
repnz
popw
in
sub
fsub
ret
rclb
xchg
pushw
xor
push
mov
imul
aam
sti
mov
das
mov
push
imul
enter
les
cmp
xchg
mov
loopne
push
inc
roll
in
jecxz
cmp
inc
rcr
ror
out
push
jb
mov
dec
out
das
pushf
xor
mov
pop
jnp
movsb
xor
mov
jle
push
cmpsl
stos
pop
add
inc
mov
faddl
rcrb
jne
movsl
outsl
mov
inc
or
jbe
outsl
subb
xchg
pop
lret
mov
jg
cmp
cmpsl
rcll
xor
xchg
push
dec
dec
adc
test
in
fistl
out
push
ss
pop
mov
imul
dec
daa
loope
and
push
cmpsb
test
pop
cmpb
push
pop
and
dec
fisttps
or
xor
pop
jne
loope
inc
fwait
icebp
jecxz
or
jp
js
dec
and
cmp
adc
int
sti
sub
inc
fnstsw
scas
push
addl
subl
xlat
repnz
fcompl
cmp
fidivrs
mov
mov
sbb
or
and
stc
and
push
divl
sahf
mov
ss
adc
cwtl
adc
fchs
jp
repnz
add
fnsave
dec
xlat
adc
xor
pop
nop
pop
jecxz
out
pop
pusha
jns
dec
and
stos
push
push
pop
push
mov
xor
jb
xchg
lret
dec
mov
loope
jo
jle
lds
pushf
and
xor
mov
mov
mov
mov
and
js
dec
jnp
je
mov
jp
popf
mov
stc
inc
pop
fs
movsl
push
pop
aaa
sub
push
xchg
mov
sbb
nop
mov
test
stc
pop
pop
sbb
lock
ss
dec
dec
mov
push
mov
mov
push
das
xchg
mov
jbe
int3
arpl
push
or
push
leave
mov
lds
xor
xor
mov
shlb
push
out
clc
pop
cmpsl
arpl
leave
mov
xor
xlat
int
sarl
shlb
xor
and
push
imul
jbe
fidivrl
pusha
daa
les
addr16
jle
or
pop
sub
adc
jns
mov
pop
cmp
cmp
sti
cwtl
int3
js
inc
or
pop
pop
mov
adc
testb
outsb
ret
js
lcall
bound
xchg
in
test
mov
call
cmp
sti
sbb
ss
add
push
cmpsb
xchg
mov
and
mov
fmuls
mov
dec
inc
loopne
xchg
sub
in
push
sub
test
fwait
add
or
fs
mov
loope
dec
pop
fldl
cltd
sub
mov
lret
inc
cmp
jns
mov
lahf
add
shll
dec
and
jp
or
sti
inc
outsl
negb
mov
aas
shll
loop
push
inc
mov
stc
jb
int3
xchg
out
aad
mov
mov
and
xchg
pop
cmc
iret
sti
xchg
and
add
js
sub
jp
leave
dec
and
outsb
std
ljmp
pop
mov
xchg
arpl
scas
shrl
xor
addb
mov
pop
test
out
adcl
jle
lods
xchg
leave
shll
aas
orl
add
popa
and
je
jp
cmp
pop
pop
push
movsl
repz
xchg
jb
add
push
out
cmc
mov
add
aam
aam
inc
jl
jne
cwtl
add
mov
es
jno
cmpsb
xchg
mov
subl
adc
xor
pop
mov
lret
xor
push
mov
pop
les
xchg
pop
fistl
inc
icebp
push
dec
jbe
adc
fwait
repnz
sub
sbb
pusha
ljmp
push
addr16
repz
mov
pop
fistl
ret
out
pop
rcr
dec
mov
mov
inc
xor
cmp
jmp
and
scas
cmp
aaa
inc
pop
stc
add
mov
fidivs
lea
jg
hlt
jg
test
iret
cmp
and
mov
int
xor
xor
push
dec
cli
dec
shld
fisttps
out
pop
popa
rcr
pop
int
inc
repz
push
sbb
insb
or
xorl
stos
icebp
sbb
push
cmp
xchg
adc
int
pop
adc
pop
jg
lock
push
mov
pop
push
xchg
push
clc
and
call
test
jmp
cmpsl
loope
adc
aam
push
in
gs
xchg
mov
xor
mov
or
outsb
mov
cmp
and
push
clc
sub
jecxz
in
inc
mov
fbld
dec
add
xor
adc
lods
and
test
adcl
inc
mov
call
jmp
sbb
lods
push
dec
enter
js
xchg
and
mov
sbb
sti
jo
addr16
mov
or
test
and
pushf
pop
lds
aad
scas
mov
cmp
shr
leave
mov
int
leave
dec
adc
cwtl
mov
lods
inc
cmpsb
dec
mov
fbstp
movsb
mov
dec
into
loope
hlt
sahf
adc
mov
lcall
add
out
pusha
dec
mov
nop
xchg
dec
fildll
aam
pop
call
mov
into
out
mov
jne
leave
xor
daa
int3
rcrb
add
or
pusha
push
sub
inc
pop
stos
jp
fcomps
test
mov
stos
cmp
mov
mov
add
cwtl
daa
add
scas
fisttpll
test
aas
add
sbbl
fnstenv
pop
mov
lahf
push
pop
push
leave
push
xlat
stos
mov
mov
sbb
pop
loope,pn
pop
mov
add
jnp
or
std
pop
mov
setl
mov
mov
call
sti
cli
xchg
push
mov
and
mov
adc
push
fmull
mov
cli
std
cmp
std
sbb
test
fistl
es
adc
add
je
fcom
in
stos
mov
in
mov
out
fisubrl
add
jno
mov
and
inc
mov
in
jge
jp
jne
xor
nop
mov
les
adc
and
arpl
scas
test
das
scas
push
xchg
mov
mov
sbb
adc
add
xor
popf
addr16
cmc
push
imul
add
xor
imull
mov
popf
dec
movsb
out
cmpb
jbe
je
repz
insb
fstps
mov
xorl
adc
ret
cmp
scas
jnp
dec
data16
call
push
pushf
jns
lods
xchg
es
outsb
into
lods
leave
rorb
lds
lds
int3
movsl
add
adc
sub
orl
sbb
fisttpl
cli
cmp
push
push
sbb
out
negl
jae
or
out
jge
xor
add
stos
mov
mov
mov
ljmp
pop
dec
std
xor
stos
adc
mov
fldenv
cmp
leave
jmp
movsb
add
mov
push
sub
xlat
inc
in
in
mov
xchg
xchg
rcll
mov
mov
js
pop
in
test
dec
inc
xchg
and
imul
pop
es
loope
jnp
push
pushf
jne
inc
dec
xor
jno
int3
icebp
cld
fnstcw
xor
ret
mov
lret
dec
in
stos
add
insw
push
mov
and
movsl
inc
xchg
pop
jmp
cmp
xchg
std
pop
int3
imul
dec
fldenv
xor
jns
faddl
jo
jg
loopne
push
mov
out
add
push
into
in
and
mov
push
shl
insl
in
mov
mov
pushf
add
jo
cmp
push
cmp
xlat
push
sub
fbld
addr16
shlb
xchg
adc
test
int3
or
mov
dec
jl
push
cmp
jecxz
cld
xchg
add
push
mov
jl
sbb
mov
mov
mov
push
sub
sbb
mov
pop
repnz
je
jecxz
mov
push
in
jns
and
pop
push
repz
es
adc
cs
lock
fbstp
fdivrs
stos
pop
test
ljmp
std
pop
mov
aas
mov
pop
xchg
add
add
push
cmp
mov
push
insl
insl
xor
addb
mov
sti
ret
std
mov
pop
cld
je
and
or
mov
mov
bound
push
into
nop
xor
and
fdivs
or
add
fdivl
pop
push
ja
xor
aam
rcll
mov
pop
pusha
xchg
cmp
xor
sahf
rorb
push
pop
mov
into
and
aas
or
addb
jp
cli
jecxz
divb
cmp
pop
outsb
push
mov
mov
xorb
adc
test
mov
ljmp
add
ss
mov
adc
stos
inc
fists
cmp
mov
inc
push
stos
jno
sahf
inc
insl
add
out
xor
sti
dec
sub
ficomps
cwtl
sub
iret
and
shrl
stos
push
pop
sub
push
insb
mov
and
sbb
inc
adc
loope
add
push
outsb
inc
shr
jne
repnz
andl
adc
mov
cmc
into
shlb
dec
push
shlb
cmc
xchg
call
pop
and
stos
in
mov
sub
mov
out
scas
sub
sti
mul
push
test
ljmp
pop
insb
jmp
scas
popf
pop
or
pop
loopne
lock
push
pop
cwtl
inc
push
outsl
mov
test
gs
sti
dec
lahf
icebp
int3
das
in
stc
push
mov
push
lret
movsl
adc
aas
mov
push
or
cmp
mov
pop
pop
iret
mov
lods
add
and
xor
adc
std
fisubs
or
das
das
mov
pop
es
jno
shlb
setae
std
lahf
das
mov
rcll
xchg
jle
lods
xor
and
orb
push
daa
data16
mov
rcrl
repnz
pop
pop
sbb
pop
mov
mov
cltd
adc
cld
lcall
jae
adc
adc
cmpsl
mov
loopne
inc
rclb
adc
push
cmp
leave
ja
and
push
jne
inc
push
push
sarb
test
nop
pop
sub
and
xchg
and
xchg
sub
cmp
ret
mov
fidivs
xchg
ficomps
mov
int
sub
gs
loope
push
xchg
lods
jbe
xchg
out
pusha
mov
scas
fisubrl
rcrl
lods
ret
cli
scas
push
shll
ss
out
inc
rcrl
push
mov
and
clc
hlt
sub
and
adc
cmpsb
aam
xchg
jne
rorb
outsl
out
outsl
inc
clc
fistl
mov
lret
data16
stos
insb
out
push
sahf
and
push
add
dec
cs
bound
inc
mov
and
pop
mov
mov
dec
jo
adcb
imul
inc
es
pop
repz
sbb
test
xchg
into
popa
inc
xchg
sbb
fistps
xlat
jne
into
scas
in
imul
fcomip
jns
stc
xchg
sbb
outsb
movb
jns
fldt
in
pop
aad
test
nop
push
mov
sub
in
dec
cltd
push
mov
cs
inc
ljmp
lcall
dec
push
jae
mov
scas
sub
loopne
movsl
push
addr16
mov
xor
subl
or
push
stc
dec
es
adc
pop
imul
xchg
sbb
movsl
sahf
push
les
dec
adcl
rcrl
adc
mov
sub
aam
mov
push
cli
sbb
std
cmp
mov
inc
mov
mov
rolb
lahf
nop
sbb
outsb
pop
cmpsl
mov
xor
das
pop
dec
sub
lahf
xor
jmp
jns
inc
cmpsb
xorl
cmpsl
sbb
imul
outsb
test
sahf
loope
jmp
scas
push
sub
or
xor
rcll
ljmp
cs
outsl
fnsave
gs
loope
cmpsl
sub
inc
and
mov
mov
pushf
pop
and
rcrl
xchg
cmp
bound
in
aaa
dec
inc
sub
idivl
cmpsb
sub
mov
jg
outsl
push
cmp
out
mov
movsl
jae
rcrl
cld
pop
sub
mov
xlat
inc
sub
aas
jbe
pop
and
mov
dec
inc
mov
inc
mov
cmpsb
pop
fwait
scas
movsb
repz
adc
daa
loop
xchg
inc
or
or
mov
das
mov
insb
lea
in
test
adc
fwait
lock
pop
push
js
xlat
mov
mov
pusha
ja
jmp
movsb
sbb
loope
jl
sbb
mov
stos
add
cmpsl
icebp
dec
push
lock
addb
inc
clc
ljmp
fs
mov
mov
lea
sub
inc
push
out
push
pop
stos
mov
stc
push
pop
inc
add
cmp
and
push
enter
in
mov
push
roll
pop
sub
mov
mov
js
dec
xor
rclb
and
lods
push
in
add
push
xlat
out
jmp
fldcw
xchg
stos
or
movsl
cld
sub
dec
repz
stc
pop
pop
outsb
xlat
pop
lods
pop
jle
enter
mov
jge
hlt
mov
jo
sbb
sbb
jo
mull
adc
jp
daa
jge
icebp
and
mov
mov
inc
cmp
leave
lretw
cmpsl
push
js
imul
sub
out
inc
andb
sub
xchg
push
push
mov
cmp
add
js
jne
pop
pop
lea
popa
shrl
fstps
inc
popa
mov
cmp
inc
mov
addr16
data16
mov
mov
push
aam
inc
idivl
jns
or
jecxz
mov
lret
fwait
jmp
sub
rolb
cli
xlat
shrb
daa
push
dec
in
fmull
xchg
fisttpll
adc
aad
mov
jb
arpl
int3
adc
jl
xchg
dec
mov
testb
std
negb
sbb
out
shll
fistl
pop
mov
mov
fwait
and
das
and
sarl
and
fidivrs
pusha
sbb
in
add
inc
out
das
adc
std
push
cmp
loopne
mov
aad
nop
jno
inc
popf
and
push
pop
dec
adc
ja
mov
ss
aam
into
iret
sub
mov
mov
jbe
call
sbb
adc
and
mov
add
dec
dec
ret
pop
xchg
xchg
pop
cwtl
pop
lods
fisttps
cmp
dec
dec
mov
xor
test
xchg
or
mov
inc
call
stos
mov
out
cmp
ds
jnp
mov
cmc
aaa
sbb
cmp
push
ds
or
inc
loop
or
dec
mov
mov
cmpsl
cmp
or
xchg
rcr
movsl
mov
jo
mov
cmp
cmp
inc
jecxz
sub
or
int
cmp
test
sub
outsl
fninit
jno
xchg
mov
or
mov
popa
sbbb
jmp
xchg
and
stos
test
pop
jnp
in
pop
add
mov
arpl
orb
and
cmpsb
dec
hlt
dec
loope
or
adc
sbbb
enter
call
cmp
push
scas
cmp
daa
cmp
mov
out
mov
xchg
push
push
xchg
outsb
xchg
jo
sahf
sahf
and
stos
inc
mov
int3
lods
cmp
adc
aad
or
out
inc
jg
mov
sub
mov
inc
and
popa
xchg
or
mov
jae
mov
mov
xchg
stc
lcall
lea
clc
ret
and
lea
sbb
fs
notl
or
gs
mov
dec
sarl
xchg
lret
jg
mov
lock
icebp
jb
or
push
inc
mov
jp
cwtl
and
mov
adc
scas
into
test
popa
mov
mov
adc
enter
das
cmp
dec
mov
cmpsl
dec
dec
or
xchg
int3
sbb
clc
or
notl
mov
dec
pop
lea
int3
pop
adc
aaa
xchg
ss
out
push
shrl
xlat
ret
lret
jnp
in
cmpsl
jecxz
ss
fisubs
xor
jecxz
adc
mov
fldenv
imulb
cmp
mov
test
test
and
lods
lret
sub
and
repnz
mov
ss
gs
fsub
sbb
cmpsl
movsl
call
nop
loope
testl
les
dec
loop
adc
mov
loope
mov
lahf
rcrl
mov
daa
cmp
xor
pop
rolb
test
out
outsb
xchg
out
cmp
fs
hlt
pop
outsb
cmp
testl
push
dec
js
mov
pop
movsl
adc
ljmp
pop
in
sub
dec
push
fidivrs
jno
daa
pusha
xchg
xor
lock
btr
ljmp
outsb
enter
scas
adc
adc
shll
enter
aaa
sbb
xchg
shlb
push
xor
sub
iret
add
aam
xor
shlb
add
xchg
pop
xor
jmp
mov
sbb
cmp
dec
pop
pop
mov
mov
mov
movsb
ret
adcl
push
cmp
gs
dec
subl
andl
inc
mov
mov
xchg
and
lods
mov
fadds
cld
cmp
in
mov
cmp
lcall
or
adc
ljmp
inc
mov
sbb
in
xor
pop
jns
mov
sub
in
mov
aad
sbb
movb
inc
fidivl
jl
cmc
sbb
mov
test
addb
push
fdivrs
rcr
in
lret
test
insb
adc
test
push
add
pop
push
xchg
xor
dec
test
dec
lret
sub
sti
stc
mov
mov
mov
je
fwait
mov
and
out
or
loopne
sbb
test
xchg
mov
pop
mov
orl
xchg
out
jecxz
nop
fsubl
sbb
sbb
xchg
andb
loop
iret
popa
loopne
dec
inc
mov
push
jnp
popa
jbe
sbb
out
or
dec
mov
xlat
popf
sti
mov
ret
in
adc
sub
fldenv
sahf
push
jp
cli
mov
inc
dec
add
and
sarl
mov
popa
arpl
xor
insb
repnz
subl
push
ficomps
dec
sub
pusha
sub
jb
mov
out
lods
ret
push
push
loopne
enter
or
jl
sbb
cmp
pop
push
inc
inc
xchg
sbb
lea
popa
stos
lods
mov
addb
enter
xchg
fimuls
adc
push
jmp
add
jns
jl
pop
mov
loopne
loopne
xchg
xor
ss
jo
cmp
cwtl
dec
sbb
jno
fistpll
shlb
and
adc
adc
pop
dec
mov
out
shrb
add
movsl
lods
std
sti
mov
mov
jae
call
ror
inc
mov
addr16
ss
push
outsl
inc
cmp
dec
sub
or
xor
push
cltd
jmp
pop
cli
jle
mov
pop
push
mov
mov
stc
cmp
pop
shrb
jae
jg
sub
mov
imul
add
stc
std
mov
or
aam
dec
adc
add
push
dec
aad
ljmp
ja
imul
in
push
ss
outsl
push
push
cli
inc
insb
push
dec
arpl
push
cwtl
cmc
aas
test
sar
pop
cs
mov
popl
mov
stc
js
cwtl
mov
jg
insl
outsb
xchg
xchg
fldt
sbb
cmp
lods
sub
imul
xchg
ljmp
mov
dec
adc
test
imul
in
pop
iret
test
jl
aam
mov
lods
adc
in
out
sti
mov
shrb
ret
aas
jp
ss
inc
aas
inc
out
pop
adc
sarl
add
ja
cwtl
imul
scas
in
cld
pushf
add
and
ret
pop
xchg
inc
adc
dec
xorl
sbb
sbb
jl
nop
std
fimuls
add
imul
mov
adc
lods
add
nopl
ss
or
out
mov
inc
fstl
fimuls
mov
mov
mov
adc
mov
pop
fimuls
cltd
add
dec
xor
gs
xchg
insb
dec
mov
sub
lods
adc
mov
ret
jne
idiv
inc
loope
add
aad
xor
sbb
pop
test
popf
fwait
cltd
enter
pop
movsl
sub
stos
or
stos
clc
adc
ficoml
or
sbbb
adc
inc
ret
repnz
pusha
fstps
mov
add
dec
mov
sub
pushf
aaa
negl
xor
cmpsl
cmp
aaa
shrl
frstor
test
outsb
inc
mov
pop
fcompl
jg
mov
stc
out
xor
pop
inc
je
dec
xchg
jg
bswap
lods
adc
xor
andb
inc
loope
add
shr
inc
fiaddl
popa
rcrb
lea
cs
and
aad
dec
movsb
jg,pt
push
push
dec
jecxz
loope
pop
iret
mov
cmp
jl
push
jns
or
inc
mov
ss
fcoml
aad
ljmp
mov
cmp
leave
sbb
aad
mov
cmp
xor
mov
mov
lock
sarb
push
adc
or
loope
outsb
cmpsl
rcr
add
mov
lret
mov
cli
add
je
mov
lods
outsl
jnp
jo
fisttpll
aam
sbb
ror
jae
jg
mov
dec
repnz
flds
xor
ja
inc
lds
aad
insl
cmp
mov
in
icebp
nop
jnp
pop
dec
push
shlb
xlat
inc
inc
mov
shrl
cmp
dec
mov
add
sbb
sub
push
test
repz
pusha
sbb
mov
out
push
outsl
cmovs
insb
movsl
sbb
pop
push
sub
stc
mov
mov
mov
mov
out
nop
sbbl
push
push
popa
mov
push
xchg
movsb
fmul
cmp
xor
fisubrs
pop
lds
cli
pusha
push
xor
mov
popf
arpl
jne
xchg
or
xor
xor
nop
mov
mov
dec
nop
push
cltd
add
xor
mov
imul
jl
adc
xor
jno
pop
add
out
mov
insb
mov
clc
and
jle
test
nop
pop
xchg
adc
jecxz
pop
jno
dec
aam
mov
out
cmp
test
push
sbb
rorl
sub
and
pop
insl
sti
jle
ss
jnp
pop
and
jo
sbb
cmc
cmpsb
sbb
inc
test
cld
push
repnz
mov
in
pop
jg
fmull
movsl
jbe
repnz
mov
lahf
pop
into
mov
sub
add
test
jmp
jns
outsb
popa
jb
xor
into
rcll
addr16
mov
lods
fcoml
js
xchg
test
fwait
sbb
fs
repz
jb
mov
iret
mov
mov
sti
or
xchg
push
mov
sti
mov
adc
adc
mov
or
and
int3
lret
add
cmp
inc
idivl
push
xchg
icebp
or
xchg
sub
mov
xchg
cld
inc
jp
jl
int3
mov
lock
push
ret
push
pop
jmp
jb
or
pop
jbe
mov
and
mov
mov
jb
sub
roll
lea
gs
rolb
sub
nopl
cmpsl
es
pop
mov
std
mov
leave
push
cwtl
leave
test
adc
fucom
or
std
fistpl
jnp
shlb
and
daa
pop
adc
add
mov
dec
sbb
aam
xchg
mov
and
imul
inc
hlt
mov
flds
lret
movsl
dec
push
sbb
fdivs
push
fldl
aas
xchg
push
idivb
ret
outsl
jbe
mov
aad
outsl
pop
xchg
cmp
in
push
cld
mov
inc
int3
test
mov
xor
mov
inc
nop
cmp
inc
out
sub
push
xchg
adc
dec
dec
sub
sub
cmpsb
andl
imul
scas
push
rcrb
jo
test
clc
lret
stos
ffree
jae
scas
shll
inc
insl
shrl
loope
sti
jp
aaa
sti
xchg
fisubrs
mov
test
lret
rorl
mov
xchg
xor
dec
out
sub
lea
add
mov
test
shlb
dec
icebp
in
repz
pop
inc
lea
pop
lcall
adc
fucomi
or
mov
xchg
call
mov
xlat
or
mov
mov
dec
lods
sbb
call
pusha
mov
jnp
sub
and
mov
mov
fidivrs
cmp
outsb
ret
jne
pop
push
xor
add
jb
jno
push
es
fadd
nop
pop
fsub
les
xor
popa
jmp
stc
fwait
dec
and
pop
movsb
mov
push
pop
es
xor
cmpl
aas
adc
mov
es
shlb
arpl
mov
popa
call
imul
or
cmp
xor
stc
call
mov
pop
or
ds
push
add
dec
repz
adc
mov
push
out
jbe
shll
lods
iret
fadds
data16
push
mov
sbb
mov
mov
stos
sti
pop
in
call
dec
and
dec
inc
lret
clc
mov
ja
push
mov
stos
mov
stos
daa
gs
dec
arpl
mov
popa
mov
js
mov
pop
adc
pop
cmp
mov
xchg
movsb
es
jle
arpl
xchg
out
pop
xchg
mov
cmpsl
repz
out
imul
and
aam
jno
cmp
sbb
in
dec
rcl
push
dec
les
pop
or
inc
add
mov
push
xor
rclb
adc
out
xor
loopne
xchg
cwtl
inc
cwtl
cwtl
gs
pop
pop
xchg
mov
sub
shr
fsts
lds
hlt
popf
pop
pop
aam
sub
pushf
fstpl
scas
add
popf
scas
inc
xor
push
insl
das
in
iret
push
out
mov
adc
mov
pop
mov
jecxz
subb
and
jge
int
mov
xchg
pop
dec
jge
push
jbe
jbe
lds
mov
and
enter
aas
pop
push
int3
xchg
shlb
xchg
push
jg
mov
sarl
stos
adc
or
lods
insl
dec
push
loopne
add
adc
cmpl
add
mov
mov
cli
outsb
add
push
js
jnp
loop
dec
push
aas
fisubrl
shlb
aad
ds
xchg
xchg
scas
adc
fucom
ss
mov
jnp
pop
add
test
mov
stos
mov
inc
mov
mov
xchg
test
cld
jle
test
cmpl
inc
push
js
push
pusha
lret
stos
dec
rcrb
sub
je
lcall
fs
dec
sub
xchg
std
out
pusha
push
pop
jnp
test
jno
sub
or
mov
pushf
loopne
nop
mov
or
add
popf
cwtl
jge
int3
jnp
in
inc
mov
push
adc
mov
das
leave
int
rcl
hlt
jmp
sub
jae
lods
push
dec
into
jbe
out
sub
jo
push
cld
lods
cli
aas
mov
mov
in
cli
lar
stc
adc
ret
into
push
inc
addr16
mov
in
das
repnz
repnz
into
xor
sub
and
adc
push
jne
xchg
fcoms
pop
cs
movsb
xchg
xchg
adc
dec
scas
dec
inc
jno
jo
inc
dec
mov
pop
jae
mov
jp
lcall
pop
jnp
es
lcall
dec
mulb
rcr
aam
dec
add
inc
and
pop
mov
leave
pop
mov
dec
fidivrs
mov
inc
jg
or
jge
into
dec
rcl
cmp
fstpl
push
mov
jge
clc
into
push
xlat
daa
sbb
mov
mov
push
mov
sbbl
jno
loop
in
enter
mov
dec
xchg
fsts
test
jns
idivb
dec
movl
sub
jp
add
mov
inc
pushf
orb
in
xchg
dec
fcompl
push
push
lods
cld
addr16
aaa
jno
add
adc
lods
popf
pushf
sahf
lahf
xchg
insb
dec
in
into
xorl
into
add
or
jne
adc
repz
cltd
out
arpl
adc
ffree
inc
vmwrite
inc
or
mov
fs
imul
fdivr
popf
inc
loope
ss
lahf
fcoms
adc
hlt
movsb
jmp
aad
in
push
lods
lods
jp
lret
fs
in
movsb
scas
jae
push
pop
and
dec
in
pop
xorb
outsl
xchg
adc
into
mov
mov
pop
clc
xor
mov
aam
jg
pusha
dec
pop
clc
sub
mov
pop
xchg
jno
movsl
jb
pop
ret
rcrl
dec
sbb
add
push
sub
adc
sahf
adc
insb
rcrb
ret
popa
imul
iret
inc
sahf
stc
mov
sub
or
insb
cmp
push
add
xchg
mov
fdivl
pop
lea
clc
cs
adc
cmp
imul
fcomi
xlat
pop
movsb
sub
sub
cmp
ds
fwait
in
sbb
mov
adc
outsb
je
jne
xlat
dec
xchg
es
scas
cmp
enter
scas
xor
mov
sbb
pop
sbb
jmp
out
and
jns
xchg
rclb
clc
xchg
ss
stos
scas
outsl
popa
mov
and
out
mov
and
mov
imul
shlb
movsl
inc
idivb
mov
inc
mov
xchg
or
cli
xorl
cmc
subb
lret
popa
scas
out
sbb
add
mov
xor
mov
mov
int3
fcomps
insl
setne
push
mov
jmp
mov
repz
adc
das
cs
adc
sarb
sub
pusha
mov
cmpsb
repnz
inc
call
or
out
cltd
add
push
scas
mov
rclb
xchg
xor
call
mov
popf
cmp
les
fisubrl
es
lea
sbb
xor
cmp
dec
push
fsubrs
rcrb
push
es
mov
stos
sbb
mov
and
cmc
incl
jl
fisubs
or
sbb
sbb
xlat
push
jecxz
test
int
pop
repz
push
xor
inc
mov
into
add
lcall
jno
insb
sub
fstpt
mov
dec
insb
xchg
sbb
jge
cld
push
add
mov
or
inc
mov
cmpsb
into
and
int3
push
jns
jg
sub
and
inc
loopne
xor
bound
mov
jnp
into
fsubr
daa
lds
jle
addl
lret
mov
int3
dec
mov
sbbb
cmp
mov
lret
push
out
in
lret
push
test
xor
fcomps
pop
jle
and
or
or
pop
mov
popf
arpl
out
push
mov
adc
inc
jle
out
mov
pop
adc
dec
test
add
cmp
cltd
test
sbb
mov
or
xor
mov
fistps
mov
sub
jge
pop
jnp
mov
add
mov
jns
loop
or
aas
out
test
ss
mov
pop
xchg
add
fdivr
xor
out
loop
orl
pop
adc
dec
pop
es
inc
out
xchg
sub
aas
mov
into
pop
xor
dec
inc
sbb
add
push
inc
imul
cmp
test
and
aad
in
js
inc
push
cli
and
leave
mov
inc
dec
test
sbb
cs
mov
dec
imul
sti
pop
aaa
adc
repz
jmp
stos
fwait
push
pop
mov
push
test
mov
mov
scas
mov
pop
movsb
adc
and
sti
pop
mov
clc
mov
mov
aad
xchg
nop
pop
adc
or
movsb
call
stos
cmc
mov
pop
rcrb
es
dec
mov
sarb
dec
xor
in
scas
fstl
or
testb
aad
test
daa
rcrb
add
lcall
cmp
push
ja
imull
out
mov
inc
inc
fsubr
xlat
xor
sbb
jge
ss
xchg
xor
loop
inc
xlat
xor
adc
loop
daa
jl
mov
jo
and
inc
in
out
pop
arpl
push
cwtl
aam
outsl
inc
shl
imulb
push
push
inc
ret
gs
xchg
pop
or
and
push
stc
nop
xlat
rcrl
popa
inc
jne
lcall
mov
adc
aas
push
inc
jnp
jae
mov
es
jecxz
sub
test
lret
andl
push
sub
adc
mov
hlt
fs
int
jne
jnp
scas
push
js
out
out
adc
nop
sarl
mov
pop
test
mov
and
sbb
mov
js
out
jecxz
mov
cmpb
cmpsb
mov
insb
lret
lock
in
sub
lea
mov
inc
mov
in
xchg
in
fimuls
jp
lret
repz
enter
xlat
imul
rorb
mov
loope
push
mov
xchg
lret
fisttpll
inc
jne
cld
xchg
jmp
int3
xchg
stos
push
xchg
out
pop
inc
mov
scas
icebp
outsl
inc
adc
in
lret
fwait
mov
inc
sbb
movsl
clc
jne
jne
push
xchg
test
sbb
jge
cmpsb
mov
mov
inc
sbb
mov
out
push
out
mov
cmc
cmp
xchg
pusha
xor
xor
and
aad
xor
cmp
pop
cs
stos
pusha
data16
mov
or
aaa
adc
push
outsb
cmp
lret
cmpsb
xchg
mov
rcl
cmc
pushf
fistpll
or
test
dec
pop
xlat
in
lods
jecxz
pop
sub
push
pop
jns
ret
aam
fbld
add
scas
mov
push
lcall
xchg
lds
cld
addr16
mov
sbbb
fwait
sbb
lret
adc
cltd
push
test
stos
test
jae
mov
mov
push
cld
inc
and
fisttps
lds
sbb
and
adc
mov
lret
cltd
into
push
in
das
mov
inc
jbe
or
push
push
pop
xchg
add
pushf
push
es
xchg
xchg
mov
push
xor
divl
pop
sbb
mov
xchg
loopne
xchg
cmp
fs
inc
jmp
call
fdivrl
sahf
pop
add
mov
data16
add
call
mov
lea
cli
ljmp
mov
cmp
cmp
or
xor
mov
loop
ds
push
sub
adcb
push
movsb
push
lret
jo
outsb
add
pushf
notl
arpl
mov
ror
adc
inc
and
in
sub
loope
lcall
loop
jl
jmp
xor
fisubs
int
pop
scas
mov
and
jmp
cmp
aad
jae
cmp
xchg
mov
adc
addr16
out
pop
fidivrl
inc
arpl
inc
lock
mov
jnp
in
inc
or
lods
stos
enter
sbb
lock
xchg
shlb
mov
dec
or
or
mov
adc
pop
div
das
daa
adc
inc
mov
imul
xchg
xchg
pop
xor
add
popa
aas
ds
cmpsl
mov
pushf
and
or
mov
iret
xor
cmp
add
xlat
fdivs
and
rclb
icebp
push
in
imull
test
xlat
mov
pop
leave
lea
push
lret
lcall
clc
jmp
push
push
xchg
lret
cmp
cwtl
push
inc
hlt
mov
mov
pop
mov
xchg
sbb
adc
cmp
in
xchg
je
and
cmc
or
sbb
xchg
xchg
mov
imul
and
inc
sub
je
in
jbe
adc
ljmp
jb
stos
data16
jl
and
out
mov
leave
inc
shlb
test
pusha
add
push
xchg
je
int
or
mov
test
dec
fisubs
leave
sahf
nop
gs
cmpsb
inc
mov
mov
mov
mov
mov
cmp
ljmp
adc
imul
mov
sbb
ja
arpl
add
jle
xlat
mov
xchg
int
pop
mov
jne
cmc
outsl
push
sbb
loop
repnz
jge
fcompl
and
movsl
shll
mov
aam
addr16
inc
lret
inc
jl
push
jecxz
imul
sbb
cmpsl
fimuls
mov
sub
mov
insb
pop
pusha
nop
dec
jg
gs
cmp
jle
mov
sar
push
jmp
sbb
dec
ss
es
out
mov
jnp
cmp
int3
inc
mov
push
pop
mov
lcall
push
or
test
movsl
ja
rolb
xchg
mov
rorb
pop
adc
adc
mov
pop
call
mov
iret
in
cmp
mov
je
pop
clc
or
xchg
jle
sbb
dec
jb
pop
aad
dec
xor
jne
mov
sub
sub
mov
pop
push
decb
add
es
adc
pop
sub
push
adc
sub
sub
mov
xchg
or
mov
cmpsl
and
and
mov
mov
inc
into
pop
adc
push
add
cs
lcall
mov
movsl
ja
fldcw
adc
je
xor
or
loope
daa
mov
pop
lods
xchg
cmp
int3
jecxz
xchg
push
pop
scas
imul
fildll
into
repz
push
add
pop
jge
push
xor
pushf
and
and
cmp
mov
lcall
cmc
aas
or
loop
in
icebp
sub
mov
das
call
xchg
mov
cli
sti
sbb
ds
movsl
xor
int3
inc
xlat
ja
mov
in
add
jecxz
wrmsr
sarb
pop
xchg
js
xor
fldl
dec
push
fists
sbb
divl
cli
insb
push
sub
mov
add
or
movl
mov
push
dec
lods
aaa
sbb
aam
xchg
ljmp
aad
fmull
or
or
sbb
pop
pop
out
aaa
pop
fisubrl
outsb
xchg
sarb
call
cmp
pop
and
and
out
push
popf
mov
ja
xor
fldcw
sbb
xchg
cmp
jns
insl
cmp
out
js
cs
inc
clc
rcrb
pop
repnz
int3
pop
dec
cmp
sbb
lret
and
sahf
inc
outsb
jne
ja
dec
push
in
orl
dec
xor
mov
and
jbe
mov
mov
lret
mov
std
in
arpl
push
mov
cltd
push
jl
psubq
aaa
pop
sub
push
mov
jmp
addr16
cmpsl
popa
jecxz
adc
addr16
and
jge
adc
cltd
xchg
mov
movsb
and
fdivs
inc
push
mov
sbb
dec
fwait
inc
shll
popa
xchg
xchg
in
push
cwtl
mov
sti
dec
js
scas
cmpsl
mov
xchg
in
add
mov
mov
test
and
inc
sbb
dec
lea
arpl
scas
mov
dec
or
sub
int3
or
or
cmpsl
addr16
and
inc
mov
arpl
or
and
popf
push
fisubs
ljmp
and
fwait
ret
bound
out
scas
cmpsl
lahf
jg
imul
pop
aas
cmpsl
repz
insl
sub
add
divb
lret
inc
rcrb
xchg
enter
loop
mov
outsl
or
shrb
add
jecxz
and
call
mov
scas
loope
sbb
int3
movsl
out
xor
clc
sar
loopne
fildl
arpl
xor
test
stos
jg
mov
in
mov
add
aam
mov
lea
sub
sar
lcall
aaa
xchg
insb
adc
cld
ss
sbb
sahf
icebp
ss
ja
mov
pop
xchg
dec
push
or
push
in
jnp
and
cmc
sub
les
jge
ljmp
add
xor
or
pop
cmpsl
lahf
cli
repnz
mov
dec
outsb
push
mov
inc
xchg
and
sbb
mov
aas
gs
xor
mov
and
mov
cs
sub
es
or
pop
xchg
cltd
fiaddl
cmp
xor
test
xchg
jmp
outsb
out
loope
sub
mov
inc
pop
pop
jns
and
cmc
or
jl
mov
fnstcw
jae
fidivs
lea
popa
inc
sub
jo
mov
sbb
fcmovnu
test
xchg
jo
movsb
xchg
cld
dec
add
xor
xor
test
push
out
pusha
mov
arpl
cmc
or
loop
push
xchg
dec
push
sbb
xor
add
popf
cltd
inc
jmp
cwtl
dec
push
cwtl
dec
or
lds
sub
aaa
push
xchg
and
je
jl
loopew
imul
lods
jecxz,pt
cwtl
ret
dec
xchg
xchg
sahf
into
inc
sahf
mov
mov
sub
pop
pop
push
adc
icebp
sbb
fadds
jno
mov
push
sub
pop
out
inc
mov
frstor
add
pop
push
lock
cwtl
add
cwtl
in
rorb
in
push
mov
insl
jnp
add
sti
lcall
lock
pop
jecxz
xor
pop
sub
jmp
mov
popf
pop
xorl
adc
in
insb
inc
lcall
int3
ja
cltd
mov
mov
fsubrl
loopne
mov
add
push
inc
fs
shlb
stos
in
mov
shrb
fcmovnb
mov
rcrb
movsl
stos
dec
js
mov
push
lods
push
ss
and
cs
sub
adc
pop
sbb
in
xchg
dec
iret
sub
sbb
ljmp
aad
push
xchg
xlat
insl
xchg
adc
out
push
cmpsb
mov
cmp
imulb
cld
pop
inc
notb
loop
loop
inc
and
popf
fwait
mov
mov
adc
dec
jnp
lods
adc
push
push
push
mov
imul
mov
fdivrs
sub
shrb
dec
adc
in
and
fsts
ret
pop
rcll
inc
fistl
kmovw
xchg
dec
fadd
daa
daa
xor
jmp
push
add
mov
hlt
shl
imul
inc
adc
xor
jno
cmpb
data16
or
sub
in
lock
test
push
hlt
xorb
add
fcoml
add
push
cwtl
in
mov
push
pop
shll
and
dec
out
jl
sarb
test
sub
mov
mov
dec
clc
repz
xorl
xchg
sub
in
pop
fisttps
pop
shrb
dec
addr16
push
aad
mov
add
idivl
adc
sub
ss
mov
push
testl
xchg
dec
mov
push
int3
add
mov
push
xor
aad
rcrl
xchg
cltd
arpl
or
mov
hlt
jmp
cmpsb
out
mov
cmp
xchg
movsl
gs
push
add
outsb
rclb
xchg
shl
xlat
xchg
push
mulb
mov
adc
iret
jecxz
mov
mov
fwait
pop
call
push
jge
ss
push
cmp
in
jb
cmp
ljmp
pop
testb
lret
clc
pop
xchg
in
ljmp
push
and
setle
call
pop
out
xchg
es
dec
lods
push
push
add
mov
fdivrl
jmp
call
pop
jne
sub
pop
cld
xchg
shll
jne
in
mov
iret
iret
xor
sbb
addr16
mov
pop
inc
mov
bound
mov
jae
push
aad
aad
or
addb
in
mov
xchg
mov
nop
cwtl
out
cmp
dec
out
call
sub
and
add
adc
subl
adc
pop
xor
dec
popa
lods
pop
cs
and
sbb
push
dec
repnz
xchg
jbe
cmp
cltd
iret
movsb
mov
repz
push
jg
mov
pop
lret
mov
mov
pop
xor
xlat
negl
mov
xchg
mov
xchg
inc
mov
inc
jle
stos
jae
movnti
insb
sub
adc
jnp
fld
gs
and
lods
test
sub
scas
inc
shl
jno
fs
fcom
add
gs
stos
stc
pop
ds
mov
adc
dec
jne
ljmp
xchg
stos
jmp
jne
outsb
test
cmp
lcall
sub
sbb
clc
cli
jnp
loopne
pop
dec
stc
mov
pop
inc
lods
loopne
or
push
les
or
cmp
mov
inc
xchg
clc
movsb
jne
cmp
push
lods
push
cld
xchg
jp
sbb
push
mov
movsl
mov
bound
jo
sub
leave
lods
je
fs
jge
xchg
inc
outsl
insb
xchg
and
stc
mov
lcall
lods
add
cmc
aaa
scas
ja
jp
adc
xchg
xchg
mov
aaa
cmc
pop
imul
pop
daa
adc
scas
aaa
mov
adc
sbb
je
mov
call
xlat
cli
popf
loop
push
enter
add
cltd
sbb
jp
mov
adc
shll
sbb
popa
dec
ret
loopne
add
mov
pop
adc
les
ret
mov
fstl
leave
repnz
out
clc
cmp
loopne
and
xchg
xor
cmpsl
scas
jle
scas
inc
sub
sbb
add
sub
and
dec
mov
mov
sub
pop
cwtl
xor
cmp
addr16
inc
in
lds
lret
add
cmp
push
mov
or
je
mov
jg
ja
dec
pop
mov
xor
sbb
sub
fcmovnb
pushf
or
and
push
xlat
test
cs
and
addb
jl
lods
push
into
ds
mov
cmpsl
xchg
in
or
or
push
and
insl
cmp
sbb
lret
inc
sbb
pop
std
stos
dec
fadds
push
xor
mov
fldt
insb
pop
dec
jle
outsb
mov
arpl
dec
dec
pop
cli
repnz
mov
sbb
mov
mov
mov
xchg
mov
jb
enter
popa
xor
scas
inc
mov
aas
xlat
bound
jge
cmove
sar
mov
sbb
das
jmp
jb
pop
stos
iret
cwtl
push
mov
mov
shr
mov
rcrl
mov
dec
les
in
imul
sbb
adc
push
cmc
cmp
mov
mov
repnz
mov
push
test
test
ja
push
jp
pop
sub
test
add
xchg
les
jno
test
andl
out
mov
inc
xchg
adc
dec
xchg
pushf
mov
mov
jno
xchg
sbb
jle
popf
jne
adc
stc
jne
mov
out
cli
js
ljmp
les
pop
xor
cs
push
lds
sarb
jg
loopne
and
xor
test
pop
imul
or
repz
in
push
jns
mov
push
pop
push
and
subl
out
sbb
out
push
out
inc
enter
lds
add
not
ret
push
sbb
mov
inc
push
in
sti
mov
mov
out
out
insl
rorb
cmc
andb
pop
mov
dec
loope
cmp
jb
mov
rcll
mov
xlat
push
std
push
xlat
sub
in
sar
add
jecxz
dec
pop
pop
pop
sbb
push
aaa
xor
xchg
sbb
fimull
ret
fdecstp
sub
mov
sub
dec
or
pop
stos
shr
xchg
out
insl
xor
mov
les
repz
xor
cmp
divps
mov
in
stos
cwtl
xchg
jecxz
xchg
jb
lods
xor
and
test
xlat
inc
shrb
xchg
mov
xchg
mov
sub
jmp
arpl
shll
pop
mov
sub
mov
mov
stos
mov
xchg
pop
cmpsl
in
mov
iret
int
stos
push
cs
sbbl
xchg
jnp
movsl
aas
jnp
imul
xchg
mov
add
push
scas
mov
lods
imul
fsubl
xor
xor
or
xor
sub
sahf
nop
pushf
jbe
or
cmp
test
push
ja
roll
xlat
cmp
es
lahf
nop
lret
lds
xor
repnz
push
mov
hlt
push
push
dec
lea
rcrl
mov
pop
adc
dec
xchg
inc
jbe
xor
sbb
dec
pop
enter
out
adc
fcmove
push
xor
adc
jbe
cwtl
mov
xor
mov
pop
ss
and
std
jnp
inc
mov
inc
jno
sub
repz
sti
cmp
loope
dec
clc
leave
xor
jg
cmpsb
stos
fcomps
sbb
sbb
imul
jnp
outsl
lock
sub
scas
lock
xchg
cli
xchg
das
ljmp
subl
pop
mov
shl
negb
xor
pop
pop
pop
cmp
and
sub
xor
push
jecxz
mov
je
inc
sub
and
stos
push
clc
mov
cmp
jmp
push
out
sbb
add
push
or
sti
pop
in
xchg
fwait
dec
jle
scas
push
aam
cmp
push
pop
pop
or
ljmp
push
pushf
leave
jge
or
push
cltd
mov
repnz
bound
mov
dec
adc
jne
fs
and
enter
push
sub
je
xchg
and
push
les
xchg
mov
sar
les
out
sbb
ds
movsl
ja
sub
scas
das
xor
jb
adc
stos
arpl
iret
add
clc
pop
and
mov
dec
ret
jno
cmpsl
push
stos
loop
outsb
push
scas
or
mov
mov
and
mov
jp
shr
sbb
cmp
test
jno
bound
jle
outsb
mov
sahf
jle
fidivl
mov
jp
and
mov
cmp
lods
pop
ja
out
sub
popa
xor
jo
jo
push
jmp
xor
fcmovb
add
adc
lock
aam
cld
icebp
aam
fbld
xchg
insl
cmpsl
dec
test
mov
pop
pop
lret
push
sti
loop
das
movsb
or
push
inc
fucomp
xchg
cli
test
pop
push
mov
inc
dec
test
lret
ret
orl
aam
cmpsb
dec
mov
adc
dec
sahf
cs
push
outsb
arpl
pop
add
je
fldt
jg
mov
lret
cmpsb
sbb
outsb
fdiv
mov
lret
adc
cmp
pop
xor
xorb
pop
or
int3
mov
push
leave
dec
pop
out
cmp
cwtl
pop
xchg
cmc
cmc
lret
add
mov
movsl
sbb
mov
leave
mov
add
dec
or
ss
in
aad
push
rol
push
mov
xor
push
cmp
cld
xchg
lods
ss
and
cmp
sub
sbb
gs
dec
aad
inc
test
hlt
loopne
xor
xchg
jnp
movsl
int3
dec
pop
into
or
dec
repnz
scas
js
pop
in
test
inc
sub
mov
mov
cmp
aaa
jmp
mov
jp
imul
cli
pop
mov
in
sub
add
ds
ret
jno
dec
out
lock
ret
es
ss
cwtl
out
fstl
popa
idivl
daa
cmp
dec
daa
aam
ja
sbb
mov
int
into
xor
stc
pop
jb,pt
jbe
ljmp
jecxz
push
mov
ja
dec
cld
cmp
js
mov
into
mov
shlb
je
das
rol
xlat
add
shl
xor
push
inc
jns
mulb
ficoml
pop
jg
int3
cltd
lea
or
mov
dec
pusha
mov
mov
add
sub
inc
lcall
lcall
imul
adc
in
cmp
mov
mov
pop
stos
aam
mov
das
xchg
fwait
in
scas
cmp
pusha
mov
cwtl
lods
rorl
leave
pusha
popa
ljmp
xor
nop
pop
push
pop
sbb
popf
fwait
push
xchg
add
push
dec
sbb
jbe
and
xchg
adc
outsb
inc
add
cmpsl
int
sbb
or
dec
aas
mov
mov
popa
in
shlb
mov
push
inc
mov
mov
push
jno
push
and
frstor
outsb
imul
scas
in
addr16
fnsave
sub
push
inc
add
cwtl
mull
sbb
data16
into
out
cld
pop
mov
repnz
mov
inc
dec
stos
jno
outsb
rcll
loope
sarb
and
lea
ja
aad
es
xchg
xchg
insb
dec
call
mov
daa
jl
imul
in
cmp
jnp
jmp
test
call
xchg
ficoml
cmpsl
xchg
xor
adc
icebp
lods
add
or
roll
insl
jle
jo
jb
mov
jne
pop
push
jge
shrb
mov
pop
mov
or
lea
jns
or
mov
sub
enter
or
add
insl
push
nop
insb
xchg
mov
or
shr
xchg
xlat
jp
dec
dec
pop
insl
or
cwtl
into
jmp
mov
lds
xchg
stos
jno
cmc
xchg
das
mov
data16
sub
sub
rorl
rolb
nop
sbb
xchg
inc
in
insb
pop
jle
pop
loope
or
mov
nopl
add
jns
xchg
sub
outsb
sub
fistpl
xchg
pop
addl
mov
mov
lea
loop
mov
mov
add
fs
orb
lret
mov
pop
lret
push
rclb
xor
push
xor
mov
scas
mov
test
cmc
inc
adc
xchg
jmp
scas
bndldx
lock
imulb
out
pop
mov
inc
cld
jo
std
jo
adc
jns
jecxz
ficoms
clc
loopne
xchg
pop
pushl
pop
dec
push
push
sub
test
mov
nop
dec
push
std
xchg
mov
std
cltd
icebp
std
in
adc
ljmp
jle
adc
mov
cwtl
test
sub
testb
hlt
add
xchg
cmc
push
or
sar
mov
movsb
lods
cmpsl
mov
xchg
sbb
int3
call
dec
lret
mov
shrl
cmpsb
inc
popf
cmp
addb
add
sub
ds
cwtl
cmp
mov
push
sti
sub
sarl
xor
repz
cltd
mov
iret
inc
in
fadds
sub
mov
call
in
shrb
dec
enter
mov
add
aam
aas
inc
mov
adc
sbb
add
push
jecxz
pop
push
arpl
sub
stos
pop
pop
fbstp
test
or
mov
sbb
mov
ds
and
lods
adcb
push
stos
push
adc
in
cltd
lea
leave
fsubr
cmp
je
pushf
cmpsb
jge
and
pmaxub
mov
sahf
xchg
nop
imul
cmc
cmp
cld
inc
sub
nop
dec
daa
push
add
sub
or
dec
aam
or
aaa
daa
out
or
pusha
mov
add
push
cs
push
out
adc
pop
sub
std
icebp
adc
xor
xchg
add
inc
mov
out
testb
lds
dec
inc
ljmp
pop
cmp
or
push
inc
jg
enter
out
loope
cld
ss
sub
cmpsl
push
es
or
or
mov
jmp
cltd
sbb
xor
sbb
jae
push
ds
popa
sarb
incb
dec
jbe
out
insl
jecxz
inc
dec
jl
sbb
cmc
jne
jl
leave
stos
lods
aam
xchg
cmp
lock
andl
mov
mov
mov
ds
stos
or
insb
loop
inc
clc
cmpsb
cwtl
mov
jnp
jo
bound
arpl
pop
add
popa
adc
shll
pop
lcall
mov
imul
adc
stc
idivl
cmc
pop
out
aas
push
pop
cwtl
clc
outsb
stc
je
ss
incl
sub
call
nop
fistpl
push
jae
ja
sub
std
mov
movsb
movsl
push
scas
adc
cli
jecxz
lods
and
mov
xor
rclb
mov
mov
scas
xor
idivb
inc
inc
xchg
pop
psrld
cld
cmpsb
and
repz
cld
aaa
pop
int3
jg
and
jg
inc
pop
leave
dec
fldenv
and
imul
hlt
out
pop
mov
pop
inc
cli
outsb
sub
addr16
cmpl
and
fcmovbe
mov
fstpl
js
addr16
test
xchg
dec
mov
sti
pop
push
adc
push
sahf
fbld
jne
adc
out
divb
dec
sbb
ja
inc
std
popa
push
in
adc
jb
insl
daa
xchg
pop
mov
out
dec
bound
cmp
loop
mov
data16
mov
add
fwait
lock
int
sarb
ret
xchg
daa
adc
xlat
inc
ljmp
mov
mov
movsb
inc
js
cltd
sub
aas
sbbl
add
mov
push
cmp
sahf
xor
mov
addb
ja
push
loop
sub
and
sbb
xchg
push
sbb
into
jbe
fldcw
loopew
das
popf
jle
xchg
jle
dec
and
addr16
jecxz
and
sub
add
sti
lret
sub
pop
sahf
xor
es
jmp
pop
push
fdivr
ljmp
lahf
aas
cmpb
mov
stos
into
nop
jo
stos
pop
or
outsl
roll
and
push
dec
pop
xchg
inc
es
out
dec
loope
push
xchg
int3
shll
dec
scas
addb
adc
insb
sarb
sub
rol
xor
orl
mov
sbb
mov
add
push
mov
inc
pop
cmp
jae
popf
cwtl
push
pop
mov
inc
pop
lods
ficomps
lock
in
nop
shlb
sub
mov
mov
adc
aad
dec
jbe
push
filds
cs
bound
inc
adc
adc
pop
xor
bound
sbb
cmp
mov
pusha
nop
or
filds
and
test
inc
add
aaa
out
lods
gs
leave
sub
adc
or
mov
or
push
loop
out
pusha
mov
add
and
adc
sub
call
add
mov
arpl
or
test
sub
aas
jb
adcb
pop
pop
and
js
mov
lods
in
cmpsb
adcb
fs
icebp
fists
xchg
mov
pop
dec
ret
sbb
lahf
mov
enter
and
and
imul
pusha
pop
mov
inc
xchg
xor
or
adc
lds
mov
mov
mov
outsb
clc
ret
push
jo
adc
xchg
mov
dec
cltd
subl
lea
dec
aaa
out
xchg
jmp
scas
or
arpl
jbe
inc
mov
fiadds
test
adc
inc
les
cmp
fcoms
or
sub
aas
fs
dec
jecxz
out
lret
adc
push
jmp
mov
push
or
ja
push
push
push
repnz
xor
cmp
ds
sub
pop
ja
push
mov
js
mov
and
shrb
lret
add
rcrb
sti
push
mov
ds
and
les
mov
or
andb
xchg
xor
icebp
fldt
loopne
pop
test
sti
or
das
ja
ror
or
rolb
jle
fisttps
std
pop
fidivs
push
push
and
aas
lods
sub
dec
jg
fs
cltd
pop
sub
add
test
dec
stos
stc
inc
aam
sbb
mov
push
cmp
lret
pushf
inc
adc
sbb
loop
sub
xor
fucomp
xor
in
and
cmp
pop
gs
scas
dec
xchg
jmp
jmp
fwait
fucomi
mov
shlb
imull
stos
or
icebp
pushl
into
addr16
das
fildll
cmp
jg
es
sbb
sbb
adc
test
int
jl
scas
fwait
push
mov
mov
mov
mov
leave
loopne
nop
push
aam
jp
addr16
test
mov
adc
call
iret
fs
adc
ja
or
or
sub
push
push
sub
fnstsw
mov
push
imul
mov
imul
sub
out
push
cmp
mov
pop
mov
mov
jbe
lret
pop
lods
movsl
cwtl
test
jb
adc
loopne
pushf
xor
insb
pop
loop
stos
jns
cmp
and
inc
fs
xor
push
dec
aas
mov
pop
cltd
xchg
mov
in
idivb
or
push
mov
js
movsb
addr16
std
mov
or
dec
cmp
xchg
pop
fucomi
mulb
mov
stc
jb
and
mov
and
xchg
cmc
or
add
loope
les
outsl
pop
movzwl
inc
mov
mov
xlat
xor
and
push
inc
add
mov
lods
in
lret
push
and
lret
rcrl
imull
movsb
xchg
lods
jg
or
addr16
cmp
add
orb
push
cmp
jns
ds
adc
aaa
popf
clc
mov
inc
pop
adc
icebp
xacquire
xchg
cld
sub
out
mov
jge
js
add
jmp
cmp
xchg
fiaddl
adc
pop
xchg
loope
pop
dec
mov
orb
mov
enter
sub
lea
cmpsb
mov
sub
fisttpl
mov
sub
outsb
mov
push
rol
fsubrs
xor
scas
std
jmp
cmpsl
sbb
adc
cmpsl
lahf
xor
pop
lcall
xchg
pop
xchg
lret
or
mov
jge
mov
sub
aam
arpl
mov
stos
loope
xchg
cmp
daa
push
mov
mov
mov
pop
adc
cmp
out
cmpsb
xlat
leave
cmp
add
shr
lock
sbb
mov
xlat
mov
jp
mov
mov
mov
addr16
lea
push
or
testl
mov
frstor
test
cltd
cmp
stos
inc
push
xchg
or
ret
pop
pop
out
nop
jnp
in
mov
adc
jecxz
cwtl
mov
or
daa
mov
sub
mov
sub
ja
out
push
stos
insb
push
sub
lock
or
mov
push
jne
hlt
mov
dec
push
push
jns
or
jns
xor
outsl
addb
cmp
jecxz
jle
sub
pop
fmull
mov
pusha
add
ret
in
nop
jg
bound
add
mov
cmpsl
and
jbe
daa
mov
cli
or
cmpl
lret
push
inc
adc
js
adc
pop
addr16
das
cmp
or
pop
push
fwait
outsb
adc
jns
pop
icebp
jg
push
fstps
ja
out
jae
in
das
pusha
xor
xchg
mov
notl
into
ucomiss
push
lds
or
dec
int3
sahf
cmp
xor
subl
cs
push
leave
mov
inc
rcrb
lock
or
js
in
aas
add
xor
outsl
gs
and
xchg
pop
push
lock
rcll
mov
ficomps
sub
popf
push
popl
cmpsl
mov
into
mov
pop
mov
or
fisttps
and
daa
ljmp
das
or
jae
sbb
cltd
lock
xchg
mov
aad
nop
xor
jns
cmpsb
pop
jns
mov
xor
mov
out
lcall
adc
and
sub
imul
push
or
int
push
mov
aaa
out
movsb
and
mov
dec
rcll
cmpsl
dec
in
je
jae
pop
adc
push
std
imul
lock
mov
jae
sahf
mov
and
jae
ret
js
lds
arpl
push
imul
sarb
pusha
cltd
clc
mov
push
sbb
in
inc
xor
lret
div
out
and
cmpsl
mov
xchg
xchg
sub
popa
les
mov
push
add
mov
adc
aad
or
cld
movsl
or
pop
jno
mov
and
adc
mov
pop
js
es
faddl
cwtl
addr16
popa
out
jp
and
aad
out
lock
jae
push
pop
xor
movsb
mov
mov
sub
data16
mov
push
test
xlat
cmp
lret
shrl
sahf
dec
pop
xor
lock
pop
xchg
inc
adc
aaa
das
dec
dec
add
test
imul
xchg
dec
dec
mov
jmp
sbb
ljmp
repnz
jle
jno
or
dec
mov
out
fstps
pop
mov
push
cwtl
icebp
mov
stos
xor
loopne
mov
test
xchg
push
mov
or
mov
and
lret
sbb
pushl
test
jp
sbb
repnz
jns
loope,pt
sti
jne
fdivrs
jns
xor
imul
xchg
dec
sub
in
push
filds
insl
xchg
jg
je
pop
mov
pop
pop
xchg
mov
adc
clc
jle
and
push
xor
sbb
pop
movsb
ror
pop
nop
out
ret
xchg
jle
adc
xchg
pusha
pop
dec
dec
mov
and
lods
jl
add
fwait
jl
xchg
add
ret
add
test
addr16
xor
fs
fstpl
lods
out
loop
popf
cmp
or
das
add
scas
mov
out
push
imul
sbb
dec
and
jnp
adc
lods
cltd
pusha
pop
or
mov
jno
sbb
jmp
pop
out
mull
push
inc
faddl
inc
jne
mov
or
imul
sbb
bound
out
add
mov
xor
mov
les
xor
out
mov
in
push
rcr
xor
and
xor
sbb
xor
in
js
scas
sbbb
cli
jp
notb
jle
mov
loopne
int3
sbb
mov
movsl
jns
xchg
imul
lret
fwait
mov
add
jmp
int3
sbb
dec
lcall
pop
mov
test
push
fimuls
and
in
inc
mov
ret
mov
pop
rorl
sti
pop
je
mov
xlat
dec
enter
mov
gs
daa
in
aad
insl
inc
jae
sub
jecxz
jl
or
fdivs
jb
jb
call
aad
jg
es
inc
sub
movsl
cmp
pop
cwtl
mov
push
fiaddl
sbb
push
mov
or
sbb
lret
mov
std
sbb
pop
cli
push
pop
xchg
xchg
into
jo
imul
jg
test
sarb
xor
arpl
xor
dec
sub
mov
mov
xor
sbb
mov
movsb
and
inc
cwtl
sub
ljmp
shrb
dec
adc
jo
inc
mov
loopne
out
pop
movsl
jp
push
inc
mov
and
out
cmpsl
pop
arpl
into
loope
xor
shrl
in
mov
mov
add
ds
xchg
and
stos
daa
adc
xchg
and
mov
pop
addb
fcoml
rolb
iret
mov
xor
mov
mov
add
sti
ret
pop
add
cs
xchg
aaa
add
les
rolb
pop
scas
sti
outsl
mov
loopne
push
mov
punpckldq
and
mov
jecxz
mov
dec
inc
sub
xor
cmp
cmc
lods
push
or
mov
mov
xchg
inc
mov
ret
cmp
xor
jb
push
cmp
add
cmp
js
outsb
jge
mov
fdivl
adc
push
clc
outsb
lea
sbb
and
ja
dec
insb
sub
ficoms
pop
xor
mov
lcall
pop
fcoms
jae
outsb
ja
jb
cmp
pop
mov
loope
xchg
cli
xchg
pop
mov
cli
sub
sub
mov
popf
ds
jmp
fwait
add
cli
or
orl
repnz
inc
fldcw
sub
popf
fnsave
sbb
adc
hlt
divb
adc
data16
mov
cltd
adc
stos
aas
bnd
add
stos
lahf
jmp
stc
adc
scas
test
fists
push
ja
jb
mov
rcrb
imul
jmp
ds
adc
cmpsb
xor
mov
popf
movsl
sbb
inc
loop
mov
es
clc
push
lcallw
mov
and
add
xchg
pop
inc
insl
imul
out
sub
gs
subb
push
leave
pop
cmp
inc
scas
jl
sub
lahf
push
fs
outsl
cmp
int
mov
jo
adc
xor
faddl
jp
loopne
xchg
ja
loopne
fcomip
adc
push
stos
xchg
mov
sbb
xchg
pop
rorb
loope
addl
outsb
repz
scas
xor
jne
bound
cmp
adc
inc
insl
stc
or
hlt
cs
or
mov
out
sub
or
mov
mov
cli
in
adc
sub
jle
mov
loopne
xchg
fmuls
ja
insl
imul
jb
mov
or
sub
ficoms
inc
shrb
push
test
xor
in
mov
xor
mov
push
mov
jns
inc
cmp
test
ja
sti
cmc
and
xchg
sub
mov
iret
in
jae
sbb
in
cmp
pop
and
sbb
das
cmp
loop
jge
sbb
stos
insb
lret
cmp
ret
mov
xchg
cmp
sub
and
fsubrl
adc
stos
jp
mov
jle
xor
leave
jp
sbbb
sbb
inc
jae
sahf
je
sahf
lret
arpl
sbb
insl
xlat
lods
test
mov
push
js
mov
int
mov
stos
mulb
pushw
mov
push
or
lock
dec
ss
sbb
stc
inc
aaa
paddw
loope
fildl
scas
sub
mov
jb
xchg
pushf
cmpsb
adc
mov
insl
lret
dec
jnp
aaa
xor
fisubrs
jmp
daa
inc
mov
xchg
idivl
popa
sbb
ficoml
out
fdivrs
dec
and
popa
loop
lret
dec
xor
pop
pop
pop
aas
cmp
dec
pushf
fimull
stos
je
xchg
test
pop
jo
dec
orb
mov
ficompl
push
pop
mov
push
pop
xchg
mov
pop
imul
fcompl
test
lahf
mov
cmp
sub
fisubrl
roll
jge
xor
ds
or
sub
out
out
inc
mov
mov
das
mov
je
push
lock
lods
jg
outsl
mov
add
push
clc
and
sub
push
xchg
pop
xchg
jae
xor
xchg
insl
idivb
push
icebp
sub
lds
pop
outsb
dec
xchg
xor
or
pop
cltd
jmp
movsb
or
sub
push
pop
pop
arpl
daa
popa
lea
add
mov
leave
call
pop
mov
fistpll
repz
and
xchg
mov
test
int3
dec
movsb
mov
mov
jno
roll
fbstp
loopne
orb
sbb
fdivrs
dec
in
adc
mov
inc
xchg
lret
inc
fisubl
in
popf
lods
mov
in
xlat
call
adc
pop
es
inc
rolb
push
call
sub
sarb
gs
jmp
cmp
jmp
das
test
fisubl
aas
lea
push
out
enter
push
adc
dec
cmpsb
mov
fsubs
incl
int
mov
adc
push
cmpsl
sbb
jecxz
pop
mov
dec
not
jae
mov
dec
fsub
xchg
or
repnz
int3
xchg
gs
inc
daa
mov
sbb
dec
lcall
clc
int
jmp
pop
in
xor
scas
push
pusha
xchg
in
mov
fistpl
hlt
dec
test
pop
rorl
push
push
mov
fimull
adc
lahf
cmp
loop
add
jl
adc
push
cmp
mov
pop
xor
mov
in
movsb
inc
xor
xor
lods
pop
mov
ja
popl
lock
cs
cmp
sub
aaa
xor
popf
pop
xlat
xlat
into
in
nop
out
fbld
sahf
data16
pop
test
je
mov
cmp
inc
and
hlt
bound
jecxz
mov
fsts
mov
add
dec
sbb
repnz
bound
and
popa
push
mov
fwait
les
jp
pop
push
aad
and
add
icebp
cmp
jmp
dec
incl
lods
pop
cmp
dec
xchg
cmp
into
jmp
inc
sti
icebp
dec
jp
or
popa
sahf
inc
mov
aad
xlat
ret
mov
xchg
out
dec
outsl
sbb
xlat
pop
and
aam
adc
mov
rcrl
xchg
mov
xorb
inc
out
pop
xor
cmp
rclb
xorl
fnstsw
and
pop
mov
orl
xchg
addr16
int3
cmpsb
pop
cmp
dec
cmc
and
xchg
aam
shll
out
xchg
mov
mov
inc
adcl
adc
jecxz
outsb
push
sahf
mov
cmp
pop
mov
iret
ss
in
mov
mov
mov
push
jbe
pop
or
xor
pop
mov
xchg
cmp
sahf
push
pushf
mov
iret
cmp
jg
push
enter
std
jo
xor
pop
push
mov
xor
add
fiadds
fistpl
jbe
lcall
jge
scas
pop
or
dec
jmp
xchg
movsb
inc
xchg
fs
ja
mov
mov
xchg
sub
popa
xchg
ja
leave
stos
xor
in
xchg
ret
xorl
xchg
jecxz
and
nop
lcall
adc
iret
mov
mov
and
es
es
loope
or
ret
fsts
xorl
int
push
ret
pusha
xor
and
pop
aad
pop
mov
aaa
aad
add
mov
cmp
movsl
aad
rorl
inc
dec
sbb
push
jno
pop
jmp
jmp
and
aam
mov
and
imul
dec
dec
outsl
pop
adc
and
iret
cmc
jo
out
ficompl
mov
cmpsb
mov
movsl
pop
out
inc
in
mov
test
xchg
inc
jmp
push
dec
leave
cmpsb
out
dec
fwait
nop
in
mov
xchg
and
xchg
mov
inc
aaa
push
mov
jmp
in
jmp
and
push
dec
aaa
inc
jl
popf
movl
arpl
insb
cmc
leave
pop
clc
stc
fidivrs
jge
cmp
jns
out
pop
insl
cli
add
cmp
jle
shr
negl
push
push
int3
adc
fldt
popf
dec
pushf
rorb
les
add
inc
cmp
jmp
pop
dec
ret
js
pop
push
out
mov
in
repz
cmp
fldcw
out
inc
dec
add
sbb
ss
test
pop
enter
into
leave
mov
or
pop
mov
xchg
xchg
jmp
andb
mov
jbe
inc
mov
xchg
add
int
push
ret
jns
cs
ja
mov
fiadds
cs
mov
sub
cmp
int3
and
jo
push
mov
sbb
je
sbb
sub
dec
push
es
movsb
call
sbb
push
xor
inc
sbb
addb
fstpt
arpl
ret
ret
mov
mov
jg
jns
les
mov
push
mov
loope
push
dec
pop
adc
jo
and
and
cmpsl
jne
jle
xor
sbb
xor
xor
xchg
push
mov
mov
jae
idivl
in
or
cli
push
push
jecxz
mov
or
sub
outsb
jp
jne
push
or
aas
pushf
xchg
pop
test
or
out
mov
sub
mov
pop
faddl
iret
fld
push
cmp
stos
mov
int3
imul
outsb
insl
and
pushf
push
jecxz
mov
xor
and
mov
jns
aad
pop
sub
inc
sub
adc
jb
mov
dec
push
lods
jno
cmc
fsubrs
jge
rcll
in
arpl
ja
mov
mov
stos
sub
pop
dec
in
outsb
lcall
mov
and
sbb
inc
push
mov
ret
subl
xor
sahf
or
loopne
test
movl
adc
leave
stos
daa
frstor
jne
pop
popa
pop
mov
or
es
fldcw
add
loopne
mov
mov
mov
imul
sbb
lods
cltd
int
sbb
mov
xor
cltd
inc
icebp
jmp
stc
mov
fwait
inc
sbb
jo
aaa
clc
outsl
cmpsb
filds
ror
sbbl
mov
inc
jb
xchg
cli
mov
mov
sbb
mov
jmp
mov
icebp
imul
inc
dec
lret
sub
sub
adc
in
js
cli
cmp
push
pop
cmpb
xchg
pop
negl
mov
outsl
dec
outsl
push
mov
fisttpl
push
sahf
and
sbb
scas
sub
das
imul
or
sub
les
xchg
inc
int3
xchg
loope
pop
sbb
adc
insb
in
push
mov
pop
incb
xchg
insb
mov
mov
mov
repnz
jle
cwtl
lds
sbb
mov
add
mov
pop
push
jnp
jmp
aad
sbb
sub
andl
lret
add
mov
int
xorl
jae
mov
arpl
andb
mov
mov
call
cmp
jmp
mull
je
mov
xor
imul
gs
lea
xor
cmpsl
in
jb
icebp
out
in
jne
xchg
int3
popa
xor
shl
lock
cld
repnz
inc
repnz
xor
lcall
cmp
jnp
popa
outsb
push
mov
movb
inc
pusha
cmp
or
in
stc
sbb
jle
cmp
cwtl
sub
xchg
fidivrs
mov
adc
cltd
mov
cmp
and
adc
int3
shrb
mov
mov
ficoms
outsl
inc
xor
daa
add
roll
out
bound
jb
stos
scas
xchg
in
and
int3
and
imull
add
inc
fstps
mov
data16
jns
xorb
iret
test
dec
movsl
cwtl
push
jns
les
sbb
enter
imull
or
stos
pop
dec
pop
mov
into
ficoml
les
push
jge
ds
adc
mov
ret
xor
jge
sub
mov
jg
pusha
push
shl
loop
insl
jo
dec
cmp
or
cwtl
aas
xchg
sbb
int
sub
add
mov
insb
adc
or
cmpsb
fwait
inc
loopne
push
arpl
lret
stc
fld
sbb
lock
fisubrs
sahf
imulb
std
sbb
out
or
int
mov
xchg
dec
pop
fnsave
enter
stos
into
cmp
in
repnz
pushl
adc
jbe
mov
mov
stos
jae
sbb
repnz
jnp
dec
shlb
pushf
cld
das
jecxz
jecxz
inc
ljmp
scas
sbb
adc
jno
into
mov
shll
ljmp
mov
imulb
ret
sub
ss
andl
hlt
push
insl
add
xchg
into
lret
aad
enter
cld
and
frstor
and
movl
imul
ljmp
arpl
pop
push
aam
rcrl
fwait
xor
into
gs
or
dec
mov
das
scas
mov
inc
xor
push
xor
pop
fnstcw
xchg
jl
mov
and
xchg
repz
pop
arpl
inc
pop
aad
push
cmp
imul
sbb
dec
jnp
mov
pop
add
add
adc
ss
mov
mov
loopne
mov
fisubs
lds
push
stos
mov
mov
add
fs
sbb
lods
xor
lahf
stc
pmuludq
xchg
mov
dec
out
fisubrl
cld
xchg
stc
adc
mov
sub
xor
jle
sahf
stc
stc
jg
add
adc
sbb
adc
cmp
incl
add
std
pop
aaa
ss
add
test
imul
mov
jge
xchg
lds
inc
jg
adc
ja
loope
xor
cs
outsb
pop
adc
jns
sub
test
adc
mov
sub
cmp
and
test
lds
cmp
push
aaa
xchg
adc
jecxz
push
push
mov
lock
lods
xor
jp
or
imulb
cmpsb
leave
flds
repnz
data16
aas
roll
sbb
pop
adc
popf
mov
cmp
jo
ret
push
and
inc
testb
into
sbb
out
lcall
adcl
loop
aam
inc
lahf
mov
sbb
push
imul
pop
jl
mov
cli
pop
cmp
nop
sub
mov
sbb
test
jne
int
mov
mov
add
mov
jp
fldenv
shr
fdivl
icebp
adc
mov
push
outsl
sbb
cmp
movsl
mov
stos
inc
add
nop
sbb
pop
repz
mov
mov
cmc
sbb
mov
fwait
stos
jne
xlat
pushf
insl
pop
out
dec
lea
loope
xor
mov
cwtl
dec
insl
adc
xchg
and
and
xorb
jp
xchg
arpl
call
add
cmp
inc
nop
jo
push
lahf
inc
mov
push
jmp
sbb
out
rcrb
sar
test
ror
push
mov
cmpb
in
jl
fsubrs
xchg
rclb
sub
fs
fstpl
in
or
scas
xchg
in
xchg
sub
dec
or
pop
sbb
sbb
sti
out
push
cmc
cmp
imul
xor
pop
fdivp
dec
rcll
dec
sbb
test
popa
out
push
sub
add
lcall
loop
in
cmpsb
test
jecxz
inc
sub
lds
fs
cmpsl
mov
pop
ss
shrb
lahf
or
adc
or
pop
adc
lds
jge
and
dec
sub
ficoms
cltd
sbb
mov
je
in
and
ja
adc
push
push
data16
push
daa
mov
loope
rcl
push
ljmp
in
lock
add
popa
cmp
adc
pop
push
add
cmp
jl
sbbb
aas
out
loopne
mov
iret
inc
cmpsb
aam
ror
inc
dec
fldcw
insb
mov
repz
lods
xlat
inc
iret
ss
jge
cmpsl
notb
out
dec
fidivrs
dec
imul
hlt
imul
xchg
in
setno
adc
stos
xor
xor
push
jl
pop
push
mov
imul
out
xchg
cmp
cmp
mov
inc
punpckhwd
pop
lods
movsb
jb
idiv
int
in
lahf
add
in
icebp
mov
repz
loop
xor
setne
jecxz
pop
adc
fwait
and
je
lret
add
xor
in
dec
outsl
imul
out
sbb
push
mov
push
pmaddwd
dec
and
push
ret
cmp
mov
loop
lar
cmc
jmp
mov
xchg
fisttps
xchg
dec
data16
cmp
dec
xchg
fidivrs
push
pop
sub
mov
pop
loope
mov
dec
testl
mov
scas
fdivrl
mov
push
fdivl
call
add
lcall
pop
clc
fld1
popf
loop
and
clc
xchg
shlb
adc
sub
inc
sbb
outsl
push
inc
push
inc
xor
dec
xor
push
mov
ret
mov
mov
lea
outsb
dec
and
outsl
aas
fcoms
test
pop
xchg
dec
cmp
test
push
es
pop
pop
add
xchg
xor
pop
fimuls
test
mov
ficomps
mov
sbb
call
lods
fstpt
mov
ret
test
mov
pushf
int3
add
movsb
inc
sub
rorb
adc
pop
lock
sub
xchg
dec
nop
xchg
cmc
mov
pop
mov
fidivrl
insl
orl
fwait
rep
insb
or
jbe
daa
mov
jge
sub
hlt
sbb
push
ja
repnz
popf
outsb
mov
or
xchg
pop
aam
inc
fucomip
inc
or
ret
jl
leave
mov
xor
dec
xchg
pop
sbb
scas
and
stc
or
shll
imul
sub
jle
mov
and
adc
jge
cmp
mov
rorl
sahf
xchg
or
mov
pop
mov
sub
lods
es
bound
push
lcall
lods
sub
int3
daa
sbb
mov
test
pop
ja
sbb
push
cwtl
jno
mov
cmp
mov
fsubrl
mov
push
or
pop
cmc
pop
xchg
jl
cmp
outsb
sub
and
pop
cmp
xchg
ds
pushf
mov
cmpsb
lods
mull
insl
pop
push
jae
sbb
and
icebp
and
lock
mov
loop
aam
cmp
in
fwait
sti
mov
test
jge
mov
sub
mov
pop
push
je
stc
scas
aas
add
inc
push
repz
lods
test
and
xchg
andl
push
push
mov
gs
nop
test
addl
int
sbb
xchg
data16
sub
out
mov
mov
inc
mov
pop
mov
mov
xor
int
pop
sbb
scas
outsb
fstps
mov
dec
jecxz
arpl
int
mov
mov
dec
jne
push
and
repz
sarl
or
call
mov
and
sti
adc
ret
in
mov
lahf
fsubs
mov
ljmp
dec
xorb
subb
mov
jmp
sahf
dec
xor
in
mov
les
loope
ja
add
loop
cmp
lock
iret
inc
mov
cli
jne
stos
pop
test
and
xchg
xchg
fldcw
in
dec
ficoml
lods
das
push
aad
arpl
insl
sti
les
jb
pop
push
mov
jns
pop
fiaddl
testl
data16
sbb
aas
mov
sub
ss
rol
mov
ficompl
add
jle
and
jno
sub
dec
into
test
or
lock
pusha
cli
jl
push
jo
xchg
in
dec
dec
mov
stos
xor
arpl
lahf
push
push
cmp
mov
lea
cmp
or
xchg
ss
arpl
and
enter
or
or
and
xor
adc
repz
movsl
jne
jmp
lea
outsl
xchg
out
and
ror
rclb
out
sub
inc
shll
je
or
fstpt
cltd
pop
ss
jge
mov
cs
pushf
add
bound
cli
mov
adc
xchg
mov
add
mov
mov
mov
add
pushf
outsb
xlat
stos
je
push
loop
pop
mov
pop
jne
loope
sbb
paddd
or
pushf
shrb
sbb
push
pop
pop
xor
je
enter
mov
movsl
pop
out
rorl
scas
popa
arpl
mov
nop
addl
pop
lea
mov
or
add
outsb
xchg
push
andb
mov
dec
sbb
subb
gs
enter
inc
mov
sub
fcomps
mov
mov
jb
ret
out
ss
mov
sbb
leave
mov
fdivrl
negb
mov
js
filds
loope
popf
lcall
into
inc
mov
adc
inc
mov
add
xor
jbe
jne
int3
insl
adc
and
repz
mov
hlt
insl
add
lock
in
sbb
into
aam
fsubrs
jno
ljmp
and
aas
push
clc
scas
mov
fnsave
jo
mov
cltd
lret
and
jl
aas
push
lds
cmp
xchg
lock
mov
add
pop
mov
mov
mov
repnz
adc
jnp
shl
and
arpl
xchg
out
pop
aad
sub
shr
inc
jle
ds
bound
test
test
xor
dec
insb
fsubrl
jo
in
iret
std
aam
sbb
push
or
ljmp
push
int3
mov
scas
mov
push
rorl
sahf
cmp
fildl
jo
jmp
into
jecxz
xor
adc
add
repz
push
int3
les
push
in
xlat
inc
dec
pop
jbe
or
cmp
add
mov
inc
ja
sub
jo
ss
inc
push
stos
add
push
test
clc
fucomip
js
cmp
lret
pop
push
xor
xchg
in
and
aam
adc
mov
in
clc
jge
ret
in
jg
pop
pop
sub
cltd
repz
int3
push
xor
lea
mov
sub
xor
xchg
mov
xchg
mov
mov
push
mulb
xor
decl
or
pop
iret
repnz
fisttps
inc
jp
js
aaa
xchg
mov
hlt
insl
arpl
add
stos
fisubl
ljmp
dec
ja
jo
xchg
mov
push
mov
mov
jo
gs
out
andl
fadds
testl
cmpb
stos
enter
pop
mov
mov
cs
fdiv
dec
call
push
mov
mov
pusha
cli
aaa
lret
or
fistpl
fisttpll
sbb
xchg
cli
dec
dec
xchg
call
push
push
cmc
pop
data16
adc
or
sub
hlt
mulb
add
xchg
pop
leave
dec
xor
jns
add
push
adc
mov
fldcw
mov
lods
xchg
xor
rolb
inc
and
mov
mov
dec
out
lods
jge
jmp
jmp
sub
loopne
loopne
jb
or
pushf
and
push
nop
dec
or
cmp
cwtl
or
sahf
gs
loop
mov
enter
jge
rcll
mov
lds
mov
lahf
cmpsl
test
test
ja
leave
stos
cs
fcoms
jge
mov
push
les
and
xchg
pop
pop
jmp
adc
xchg
es
jbe
fiadds
add
scas
pushf
pushw
inc
mov
inc
push
bound
xor
push
lea
shlb
xchg
gs
push
cmp
mov
cmp
shll
test
jbe
or
add
les
sub
aas
test
hlt
push
lods
into
jne
add
das
sbb
aas
push
jl,pn
cmpsb
add
test
jmp
adc
lock
enter
les
cmpsl
imull
sbb
jmp
leave
jns
enter
mov
mov
movsl
or
shrl
dec
mov
repz
jmp
jae
gs
in
add
jl
inc
or
rcrb
sub
fdivrs
aad
cmp
jno
mov
cmp
fidivrl
test
xor
ljmp
sti
inc
lock
cmp
cli
jl
jl
xor
xor
repz
repz
mov
in
dec
dec
in
std
mov
ss
pop
pop
sarl
jns
bound
jne
jbe
pop
and
sub
xchg
jnp
enter
fwait
mov
inc
ret
push
ror
jns
pushf
shll
mov
cld
in
sub
lods
fsubrs
lcall
daa
call
fbld
mov
mov
and
and
or
lea
jns
mov
fcompl
inc
xchg
pop
pop
repnz
out
mov
ret
nop
pop
nop
mov
sub
dec
loopne
stc
adc
adc
mov
dec
mov
ss
adc
pop
xchg
mov
mov
popf
mov
mov
mov
lods
clc
jne
inc
mov
push
lcall
cmp
shrl
cli
cmc
xchg
xchg
xor
adc
outsl
cmp
ljmp
xchg
push
stos
scas
or
addb
push
out
push
mov
mov
adc
iret
sub
out
js
adc
popf
mov
pop
add
test
adc
add
cwtl
adc
in
push
leave
fsts
add
lea
je
jo
pushl
sbb
in
push
sbb
sti
ds
xchg
xor
fcmovb
pop
adc
test
or
mov
xor
pushf
pop
leave
lahf
push
ret
repz
push
sub
rcrb
or
popf
cmpsb
int
rcll
dec
bnd
mov
and
mov
scas
mov
popl
mov
jo
lret
inc
scas
mov
into
adc
inc
lret
push
add
xchg
mov
mov
pop
jo
xor
aas
jge
jle
push
monitor
scas
cmpsb
les
or
fnsave
imul
xorl
mov
aas
fidivrs
leave
and
cmp
test
mov
mov
fcompl
clc
xor
or
dec
add
lret
add
pop
gs
ljmp
int3
imul
sarb
add
dec
xchg
sar
scas
xor
loop
cmpsl
pop
les
sub
gs
pop
into
pop
add
xchg
xor
or
push
inc
or
popl
shrb
jb
inc
sub
xor
mov
cld
and
insl
xchg
jno
imul
mov
pop
jnp
dec
jns
mov
jmp
jae
xchg
add
mov
sub
sbb
xlat
pop
cmp
int
or
dec
fistl
add
inc
dec
ja
add
movsb
in
les
mov
mov
sub
outsl
inc
cmp
pop
add
fistl
ds
pop
ljmp
iret
pop
sbb
mov
xchg
ficoms
into
jne
or
inc
cmp
cmpsb
xchg
sbb
push
cmp
mov
jae
jnp
xor
cmp
cli
push
popf
push
push
sub
sahf
test
jns,pt
or
xchg
and
ret
pop
push
test
jg
pop
sahf
aaa
int
addl
sub
shll
xchg
push
mov
xchg
adcl
cmp
mov
push
jo
push
xor
leave
mov
in
adc
ror
cmp
pop
scas
fdiv
add
jp
dec
push
fucomi
add
outsb
push
lahf
clc
sbb
xor
push
mov
retw
mov
js
jae
std
mov
mov
repz
push
push
shlb
pop
xor
dec
inc
enter
push
push
subl
fimuls
sub
mov
mov
add
and
cmpsl
and
adc
jno
cmpsl
in
jae
pop
inc
push
int3
cmp
fbld
pop
ljmp
xchg
incb
loope
inc
ficoms
sub
pslld
or
push
sahf
sbb
adc
pop
xchg
cmp
xorb
xchg
or
ja
dec
sbb
sub
int
sbb
inc
icebp
outsb
loopne
dec
sarl
addl
cwtl
dec
inc
int3
and
aaa
jge
and
mov
xor
add
insb
push
jns
pop
cmp
popa
repz
mov
popa
pop
popa
stos
mov
jno
pop
iret
adc
or
addb
insb
sti
aas
testl
mov
jbe
out
inc
call
xlat
jbe
loop
adc
lea
jae
sbb
push
xchg
fdivs
int
test
xchg
jb
mov
mov
mov
aas
in
sbb
hlt
xorl
cmpsb
sbb
sub
cmpb
sub
arpl
cwtl
jne
and
dec
aas
jge
outsl
pop
push
pushf
pop
pop
lcall
mov
and
repnz
dec
int
cwtl
dec
mov
lret
mov
xor
clc
in
inc
jmp
sub
sbb
cmp
out
xor
rclb
pop
jne
and
test
mov
int
ret
das
inc
pop
mov
cmp
mul
movsb
icebp
adc
push
mov
nop
inc
add
xchg
out
mov
push
sahf
loope
or
xchg
sbb
adc
cmp
fs
and
sub
cmp
arpl
cmp
fwait
cmp
xchg
mov
jg
out
cmpsl
adc
or
cmp
sets
fs
add
out
add
sbb
ret
and
into
sub
mov
cmpsb
outsl
jne
jge
push
cwtl
or
cmpsl
inc
pop
inc
pop
ret
icebp
mov
xlat
rcrl
out
bsf
incb
in
lea
sub
repnz
int
push
gs
dec
push
push
mov
xor
cmp
cpuid
scas
pop
mov
pusha
mov
pop
lahf
fnstsw
dec
mov
dec
or
out
mov
inc
leave
mov
scas
jb
inc
ficoms
leave
rorl
imul
mov
push
test
fcompl
divb
daa
mov
jg
jp
push
mov
les
fcomps
cmpsl
adc
jb
pop
jge
mov
push
dec
pop
call
pop
loopne
sbb
dec
sub
or
mov
dec
test
addr16
add
ljmp
mov
or
inc
push
xchg
scas
sub
push
cmpsb
sbb
stos
cli
adc
lods
stos
pop
pop
mov
and
mov
and
sub
add
ss
imul
jne
mov
push
mov
clc
inc
pop
xchg
out
add
xchg
jo
insb
subl
js
lods
mov
sbb
sub
stos
adc
rclb
cs
ja
aam
push
sbb
mov
jl
sar
shlb
lret
or
adc
shll
hlt
mov
mov
repnz
jne
and
or
jl
aam
sub
out
push
roll
out
add
call
mov
mov
arpl
sbb
add
cmp
push
pop
xchg
pop
outsl
mov
lcall
es
mov
clc
jae
hlt
add
sub
adc
icebp
enter
fisubl
sarl
sbb
lcall
xlat
imul
loop
pop
lds
les
clc
repnz
pop
in
insl
cs
addb
jns
push
jno
mov
test
gs
out
or
push
pop
xchg
xchg
in
shll
xchg
jmp
fisubs
dec
sbb
cmp
cmp
inc
aaa
daa
sarb
mov
xchg
das
popa
into
jge
push
inc
dec
mul
mov
std
mov
sbb
stc
push
sub
pop
sbb
mov
aam
sbb
xchg
mov
push
or
jle
sarb
iret
push
andb
fs
jle
adc
jmp
pop
cmp
inc
or
stos
xorb
stos
xchg
add
cmp
gs
and
jecxz
ljmp
fucomip
outsl
fwait
popa
out
sbb
xchg
xchg
add
jb
cmpl
pushf
in
xchg
mov
mov
outsb
mov
stc
das
xor
mov
imul
cmp
rcrl
xchg
push
imul
sub
pushf
mov
or
jo
stos
iret
stos
in
push
gs
jecxz
dec
xchg
mov
mov
sub
and
sbb
xchg
cmp
mov
into
hlt
subb
sbb
inc
shll
lds
adc
and
hlt
fwait
dec
jle
orb
adc
decl
sub
loop
iret
sub
fwait
inc
cmp
cmp
fnstcw
test
bswap
xchg
add
roll
imul
loop
loop,pn
inc
ret
jmp
sub
fiaddl
jo
and
sti
call
inc
xor
cmc
cmp
pop
pop
pop
js
movsb
xor
pop
sbb
sbbb
loop
adc
cmpsb
pop
cmp
mov
outsl
adc
and
fadds
out
adc
dec
jns
aaa
jae
mov
decb
into
je
push
add
lahf
dec
test
data16
jle
push
shl
insb
add
push
test
lods
mov
sub
jl
or
mov
shlb
pop
mov
xlat
adc
lea
arpl
xor
mov
fs
inc
inc
cwtl
jg
es
push
ljmp
mov
test
js
xor
xchg
in
scas
sbb
test
inc
xor
mov
imul
fadds
or
pop
cmc
mov
neg
xchg
adc
ja
mov
adc
popf
loope
pop
or
imul
inc
jmp
iret
jmp
and
add
add
push
pop
push
mov
repz
mov
push
xchg
pop
ja
aad
fs
xchg
xor
dec
sbb
push
mov
dec
cmpsb
imul
sbb
call
int
jbe
aam
pushf
xchg
fwait
das
xor
push
repz
mov
out
or
mov
cmc
pop
fs
dec
cld
shl
test
xchg
es
pop
test
call
andps
xlat
mov
jle
arpl
xor
fisttpl
shl
cmp
hlt
sar
aas
xorb
add
push
loope
or
orb
mov
lret
xor
addr16
and
mov
jae
push
scas
mov
sbb
es
lock
stc
orb
mov
lret
jge
int3
cld
fnsave
popa
inc
adc
mov
icebp
dec
pop
push
jae
out
fwait
dec
leave
pop
push
mov
mov
or
notb
lcall
pop
sbb
pop
push
imul
arpl
fiadds
sub
jnp
push
cli
jecxz
dec
fistpl
adc
idivl
pop
lret
fcom
mov
adc
mulb
pop
pop
repz
mov
cmc
movntps
xor
cmp
lahf
cltd
pusha
sub
cmp
sbb
sub
mov
lahf
in
dec
cmp
lods
dec
push
mov
fcmovnb
xchg
inc
sbb
idivb
sbbl
pop
jg
pusha
mov
or
jge
push
mov
scas
jge
xchg
das
rcrb
das
cmpsl
out
mov
das
repnz
dec
icebp
mov
js
repz
mov
fs
dec
orb
xrelease
scas
inc
and
sbb
scas
rep
aas
xchg
push
mov
cmp
lcall
inc
jb
xchg
add
adc
fs
mov
outsl
fbld
outsl
inc
push
filds
jle
mov
les
mov
cltd
lcall
dec
dec
out
ljmp
pop
out
int
mov
in
out
stos
arpl
add
push
add
shll
pop
addr16
xor
dec
movsb
and
movsb
and
sahf
xlat
mov
in
and
dec
cltd
xchg
dec
in
ljmp
fisttpll
cmp
popl
mov
rcrb
fwait
loop
adc
sbb
sbb
fwait
add
xor
adc
cmpl
cmp
stos
fildl
mov
add
push
in
jbe
adc
push
data16
xor
ljmp
mov
fisubs
mov
cli
sub
and
lret
pushf
fadd
mov
test
and
jnp
cmp
nop
addr16
lods
adc
clc
push
stos
leave
inc
mov
loope
adc
sbb
out
add
pushf
mov
push
inc
shll
jp
cmp
pusha
and
or
frstor
mov
psubsw
adc
orl
testb
mov
pushf
aas
jge
and
dec
cld
sbb
repz
xor
lret
pop
sbb
mov
add
cmp
inc
xchg
loop
xchg
adc
arpl
mov
neg
cmpb
and
adcl
insb
dec
outsb
arpl
sbb
or
lret
imul
or
mov
adc
pop
adc
pop
xchg
int
fldl
cmpsb
inc
xchg
jmp
jle
xor
xchg
jo
inc
loopne
dec
pop
jp
sbb
mov
jno
jecxz
mov
mov
push
mov
inc
push
cmp
mov
xchg
adc
cmp
push
cmp
and
and
or
shlb
pop
stc
sbb
stc
mov
inc
xor
dec
lahf
hlt
sub
sbb
jmp
jae
in
int3
aaa
dec
jmp
movsb
push
pushf
push
and
inc
dec
cmc
jnp
jle
pop
aaa
out
outsl
lret
jns
arpl
and
pop
popf
mov
pop
inc
push
and
out
sti
ds
mov
daa
or
cli
and
mov
xchg
bndstx
iret
sub
ret
inc
nop
das
sbb
sbb
loope
and
pop
out
sub
xor
sti
sub
mov
repnz
jb
sub
rol
dec
inc
adc
mov
sbb
and
popf
xchg
pusha
stos
call
cli
addb
mov
loope
cltd
pop
inc
ficomps
and
loopne
fcomps
or
mov
dec
filds
mov
scas
mov
data16
mov
xchg
pusha
jle
cs
xor
scas
sub
jbe
aam
sbb
sub
jp
mov
lret
insb
jg
dec
sbb
fcom
cmpsl
fistpll
aad
out
popa
xor
xchg
mov
dec
add
xlat
jp
push
push
or
movsb
aam
insl
dec
xchg
pop
pop
or
push
push
rolb
add
mov
cmp
test
aas
inc
sbb
add
xor
nop
mov
xor
adc
push
cmp
cmp
ljmp
gs
sar
subb
pop
out
xor
subl
notl
pop
ret
push
aas
dec
je
ljmp
xlat
xchg
out
out
jecxz
xchg
mov
stos
dec
addr16
pop
sbb
sub
ret
leave
js
hlt
xchg
and
jne
out
jl
in
out
push
icebp
ljmp
mov
push
scas
stos
nop
fadd
pop
mov
andb
lret
xchg
sbb
mov
lds
jo
pop
addb
inc
cs
out
jne
enter
pop
data16
cmpsl
les
ret
xor
sub
jb
test
insb
pop
sub
ja,pt
std
stos
add
xchg
ficompl
sbb
addr16
add
ss
pop
loopne
inc
and
xchg
mov
mov
popf
or
and
pop
clc
adc
pushf
jns
fwait
enter
xor
pop
sub
int3
dec
dec
int
push
mov
pop
lahf
sbb
out
out
inc
inc
dec
adc
and
and
mov
stos
sbb
mov
jmp
loopne
push
loop
jne
fcoms
js
ljmp
xchg
mov
jb
xor
mov
ds
mov
push
fucomip
fs
dec
mov
lds
mov
pop
cmp
dec
adcl
jecxz
mov
jp
cld
pop
scas
xor
mov
push
repnz
sahf
cmp
call
int
and
stc
cmp
imul
mov
cwtl
xlat
xchg
mov
adc
cmpb
or
adc
adc
fwait
cmpsb
add
lret
insb
pushf
mov
mov
pushf
push
pusha
stos
mov
aaa
pop
xchg
test
fsubrl
outsl
xchg
repz
les
in
mov
nop
or
in
adc
pop
xorb
xchg
mov
int
test
ret
in
mov
das
push
stos
aad
mov
mov
add
or
dec
mov
xor
add
add
pop
cmp
add
jo
outsb
adc
imul
jbe
jmp
das
sbb
fwait
pop
lcall
cmpsl
mov
jnp
test
inc
cmpsb
imul
pushf
jo
push
pop
rcrl
out
leave
data16
lods
mov
cmp
inc
mov
fs
cmpsl
push
sbb
lea
sbb
xchg
sub
pop
out
out
jae
and
loop
dec
or
sbb
sbb
aam
sbb
pop
mov
outsl
jno
xchg
cmc
pop
cmpsb
mov
and
mov
ds
fildll
daa
out
mov
aad
loopne
sbb
dec
js
sbb
xchg
mov
adc
or
pop
xchg
sub
xor
frstor
lcall
add
psubsw
add
sarb
add
daa
mov
aam
adc
mov
jecxz
das
sub
es
popa
test
insl
jmp
lahf
mov
in
xchg
imul
cmp
stos
test
mov
fdivrl
mov
xchg
push
or
xor
int3
int3
jle
ret
fcoms
or
pop
xlat
xchg
mov
std
xchg
in
jno
ljmp
aas
sbb
scas
fcmovb
lahf
add
mov
lret
repnz
and
rcrl
outsb
cmpsb
outsb
cs
dec
into
movsl
in
nop
add
inc
mov
sbb
push
pop
adc
dec
xorps
push
sti
cmp
mov
jbe
push
pop
push
jle
repnz
mov
pusha
or
cmp
fiadds
cmp
aaa
jge
jne
mov
int
pop
sbb
xchg
scas
fs
push
add
add
in
test
cltd
adc
xor
negb
adc
pop
into
mov
in
jae
sub
aas
xor
shll
in
pop
cli
push
xchg
aad
mov
and
mov
mov
and
mov
cwtl
fldcw
jno
jns
xchg
mov
lods
inc
cmp
scas
ljmp
inc
mov
out
or
xchg
outsb
int
jne
outsl
shr
xchg
and
mov
ss
dec
int
out
push
jne,pt
adc
hlt
pop
pop
push
rolb
pop
loop
int
and
dec
je
aam
xchg
insb
dec
xchg
imul
dec
mov
inc
out
test
mov
inc
hlt
lcall
pop
int3
imul
faddp
insb
mov
es
mov
mov
sub
jp
ret
faddl
int3
mov
push
mov
push
lds
out
leave
and
pop
sub
ljmp
outsl
fwait
push
mov
lea
aad
out
inc
mov
lods
pushf
movsb
mov
mov
cltd
ds
xor
inc
adc
pop
jl
stos
shlb
ror
sub
push
lret
pop
cmp
pop
push
scas
outsl
js
movups
lahf
sub
hlt
sub
les
and
iret
sub
push
add
imul
xor
dec
lahf
aam
push
add
into
mov
mov
out
test
pop
add
or
mov
stc
call
sbb
and
or
out
scas
add
xchg
lahf
leave
fidivs
inc
mov
jo
or
mov
xlat
xchg
cmc
xchg
repz
fstl
test
ret
jb
les
aad
push
es
push
xchg
sub
or
cmp
mov
add
push
xor
jecxz
mov
dec
movsl
jge
inc
fsubrs
mov
jecxz
dec
push
rorl
pop
sti
aad
or
insb
push
jle
push
cli
cmp
hlt
dec
push
inc
push
inc
fwait
lock
popf
pushf
inc
add
out
adc
pop
add
mov
insb
clc
pop
push
pop
in
cs
sbb
xor
cmp
insl
gs
pop
jl
adc
cmp
add
jns
inc
in
sahf
out
push
dec
push
test
sbb
insb
in
movsb
jmp
add
shr
jb
jp
aam
adc
imul
add
pextrw
test
in
add
je
ss
in
into
ss
add
pop
lret
lret
test
dec
sub
mov
push
arpl
push
and
sub
paddb
push
fidivs
xchg
xchg
movsb
sbb
pop
dec
fwait
xchg
outsb
sbb
cmp
xchg
jb
sti
pop
cs
sbb
add
push
mov
shl
je
xor
mov
adc
cltd
xlat
add
mov
int
cltd
sub
insb
push
lret
shr
sub
insl
fwait
leave
inc
insb
mov
stos
mov
mov
mov
mov
loop
imul
sub
addr16
out
inc
test
aam
stc
mov
jns
jmp
cmpsb
addps
pushf
xchg
dec
push
repz
shl
mov
xchg
sahf
xor
jg
jle
daa
and
movsb
fisubrl
bound
pop
sub
aaa
iret
xlat
negb
adc
xlat
pop
push
lret
jo
int
pop
push
adc
pushw
jo
jl
inc
aas
ret
or
test
test
mov
fnstcw
fcmovu
lcall
mov
lret
push
andb
cli
add
mov
xor
aam
inc
sub
mov
or
cmc
outsl
int3
mov
xor
shrl
lcall
pushf
into
stc
es
hlt
jb
sarb
pop
jae
and
ja
mov
pop
stos
idivl
xlat
ss
xor
inc
les
cs
cld
fbld
mov
cmp
mov
dec
cli
mov
ret
mov
mov
in
mov
dec
pop
and
cmp
in
mov
lret
or
pop
push
gs
aad
test
xchg
outsb
jl
mov
out
call
inc
fstpt
in
mov
mov
dec
in
jp
sti
sub
dec
lcall
push
sti
mov
inc
jp
inc
ret
lret
adc
dec
xor
cmpsb
leave
cmp
lds
adc
ret
xchg
je
movsb
push
clc
sahf
in
jmp
mov
and
loopne
ss
fwait
xchg
pop
lret
das
and
xor
jl
inc
mov
roll
aas
add
out
mov
cld
in
pop
dec
and
ds
cld
xchg
or
lods
cmp
add
mov
cmc
popa
nop
aaa
mov
mov
repz
add
stos
and
insb
and
pop
jnp
iret
addb
pop
mov
insb
fstp
push
iret
mov
and
int
loopne
inc
push
jge
jl
int3
cmp
test
or
hlt
jmp
mov
mov
push
bound
mov
int
ret
lret
mov
pop
lahf
jmp
cmp
jae
in
rorl
scas
repz
lret
lods
ss
insb
aam
jg
mov
jno
inc
cmpsl
data16
inc
xchg
add
stos
and
stos
and
cmp
aaa
jb
xor
mov
push
adc
xchg
imull
rorb
jae
push
xlat
aaa
ljmp
pop
cmp
mov
jbe
lods
xlat
push
lock
mov
push
adc
jmp
shl
push
adcl
outsb
mov
int
mov
fstpl
xchg
add
mov
cmp
fcompl
and
je
in
cmpl
popf
and
cltd
inc
sbb
xor
fmulp
hlt
nop
jno
mov
cltd
xchg
cs
push
push
pop
cmc
push
dec
iret
decb
test
mov
add
mov
push
or
jnp
xor
in
enter
gs
mov
add
pop
dec
mov
cmp
sbb
push
cmp
aam
mov
dec
int3
mov
lock
repz
cmp
dec
jb
and
xchg
out
xor
out
or
dec
and
mov
sti
mov
mov
imul
cmp
pop
pop
cld
xor
sbb
adc
cmp
push
daa
add
loopne
mov
cmp
aas
push
scas
insb
sbb
xchg
std
mov
test
in
sub
loope
hlt
sbb
jecxz
push
adc
xor
sub
adc
and
cli
in
mov
add
lcall
adc
adc
adc
loopne
pop
sub
test
out
out
jo
insb
sub
ret
fldt
aas
andl
lret
push
imul
or
jl
mov
out
or
xor
pop
adc
push
cmp
mov
push
in
dec
in
leave
mov
and
add
sarl
leave
btc
dec
mov
test
push
and
pop
cmp
push
jecxz
in
add
and
mov
push
lret
sub
pop
testb
cmpsb
xor
pop
jb
jecxz
iret
ret
fwait
sub
int
sub
stos
cmp
outsl
jno
xchg
cmp
pop
shll
out
xor
mov
ret
cwtl
loope
add
or
jb
leave
dec
mov
jg
jo
xorl
pop
sarl
jno
mov
hlt
test
iret
sbb
loope
add
adc
cs
sti
loope
xchg
lea
push
enter
mov
aam
decb
sahf
sarb
popa
js
loopne
cmpsl
sbb
push
jne
mov
xchg
sub
loope
cmpsb
cld
mov
ljmp
adc
mov
and
ret
add
xchg
pop
sbb
addb
stos
adc
addb
adc
add
sub
lds
js
and
lea
inc
ljmp
push
mov
xchg
aam
arpl
cmc
jb
inc
ja
out
mov
jae
sbb
jmp
cmp
rcrl
jmp
scas
je
mov
xchg
cmp
cmpl
add
push
pop
mov
sbb
mov
pop
loope
push
fwait
stos
fisubl
sarl
push
dec
in
fcoml
adc
dec
xchg
stos
arpl
jl
mov
test
mov
xchg
in
inc
sti
loop
fcoms
lods
enter
xorb
jne,pn
movl
dec
jecxz
loope
adc
inc
mov
mov
inc
iret
shrl
popf
jecxz
icebp
jb
out
add
and
ficompl
fsubl
xchg
adc
movsb
subl
loope
push
out
cs
jmp
es
lret
sub
out
loope
enter
mov
sub
add
push
shlb
test
jecxz
xchg
sahf
push
mov
subl
xor
and
mov
cmp
and
daa
sahf
xchg
sahf
xchg
mov
xchg
sub
aaa
pop
fstp
pop
add
xor
fstpt
push
and
hlt
mov
nop
push
fndisi(8087
and
movsl
ret
out
inc
fnstsw
movsl
dec
dec
and
pop
cmp
pop
adc
loope
cwtl
dec
ret
and
inc
stos
add
lock
std
cmpb
out
xchg
test
test
fisubrl
lds
mov
out
add
xor
or
stos
mov
inc
loope
lret
mov
adc
push
pop
outsb
mov
and
cmpsl
jge
mov
xchg
pop
cltd
jg
pop
mov
mov
dec
mov
cmp
arpl
out
mov
xor
insl
sbb
and
in
lahf
lahf
enter
mov
mov
add
mov
mov
inc
insl
xor
mov
je
test
jge
cwtl
jle
sbb
xchg
sti
mov
sub
hlt
outsl
or
push
adc
lcall
js
idivl
jle
clc
jbe
push
leave
sahf
adc
addl
mov
and
cltd
add
movsb
sub
dec
mov
sub
jl
dec
sub
stc
sub
mov
cwtl
cli
popf
lods
leave
mov
mov
jge
inc
pop
jns
sbb
fs
daa
jne
or
push
adc
push
mov
mov
hlt
and
leave
cmp
repnz
sub
or
divb
mov
jl
cwtl
sub
xchg
mov
test
pop
int3
fwait
sub
dec
sbb
cmp
push
or
dec
cld
imul
js
in
mov
ret
inc
mov
mov
xchg
lods
pusha
subb
jo
xorl
cmp
cmp
cmpsb
lods
dec
and
rorl
pop
cmc
arpl
and
jno
gs
add
mov
xchg
and
jne
lahf
inc
popa
daa
dec
sbb
outsb
mov
cmp
or
mov
hlt
popf
aas
xchg
lret
xor
ror
test
dec
push
cltd
and
movl
ds
out
add
out
outsl
ljmp
in
movl
or
pushf
sub
inc
pushf
mov
sti
pop
in
into
cwtl
cmp
or
sub
mov
xchg
push
mov
aam
mov
add
mov
jge
or
cmp
xchg
xchg
and
mov
xor
ss
dec
push
cltd
movsb
xchg
nop
cmp
popf
loope
jnp
scas
xchg
dec
fsts
or
scas
mov
call
nop
mov
mov
lock
nop
aas
inc
dec
bound
shll
call
cltd
nop
push
cmp
push
icebp
adc
xor
out
inc
sbb
xchg
ret
outsb
int
jns
mov
dec
jecxz
sti
mov
inc
repnz
sbb
mov
push
pop
shll
mov
xor
mov
dec
lock
pusha
or
push
outsb
sbb
movsl
inc
test
push
inc
pop
in
or
aas
adcl
inc
js
popa
mov
setne
pop
sbb
adc
mov
mov
shlb
mov
adc
push
cltd
sub
pop
adc
xor
add
loop
bound
dec
and
dec
cmpsl
push
cs
fwait
or
or
jno
inc
jge
xchg
jo
jecxz
clc
addb
dec
imul
pusha
mov
jb
mov
pushf
mulb
sbbl
or
pop
jae
test
test
mov
sub
adc
jge
fchs
fldt
push
clc
loope
mov
mov
rcr
or
daa
sarl
popa
pop
adc
dec
fsubl
and
push
fs
stos
mov
jns
in
enter
push
cwtl
xlat
jl
daa
push
pop
sarb
inc
xor
or
ret
stc
loope
mov
dec
jmp
out
repz
jmp
pop
sbb
and
clc
shll
jle
decl
xor
pop
movsb
stos
mov
cmc
mov
sbb
jg
xor
ror
inc
cs
test
das
cmp
insb
mov
into
ficomps
std
cs
pop
cmpsb
sbb
loop
or
add
imul
sbb
ja
xchg
out
jp
stos
dec
inc
sbb
or
sbbb
stos
mov
test
sub
dec
add
fistpl
fcoml
jge
aad
sbb
ja
popf
inc
mulb
cwtl
repnz
add
sub
ljmp
cmpsb
pop
xchg
xchg
mov
sub
rol
aam
adc
insb
mov
push
cld
mov
out
pop
movsb
testb
pusha
pushf
stc
fs
dec
data16
pop
enter
arpl
pusha
push
mov
mov
into
xor
xchg
jmp
outsb
and
ja
and
cmpsb
xlat
icebp
pop
cmpsl
in
cmp
mov
aad
xor
mov
hlt
xchg
into
fstl
cmp
xor
pop
mov
lea
cmp
jbe
lret
mov
stc
test
jbe
aam
mov
aaa
pop
pop
scas
cli
mov
xor
lds
lea
and
cmpsl
in
xchg
jecxz
adc
jp
xor
je
lret
jo
xchg
sbb
jnp
push
sbb
adc
bnd
dec
ret
pop
or
xchg
xor
pop
xchg
ffree
outsl
pusha
fcmovne
pop
imul
mov
inc
add
jp
mov
pop
mov
ds
cmp
mov
notb
pop
in
es
insl
pop
negl
and
and
clc
dec
adc
sub
mov
sbb
cli
insb
pop
dec
es
xchg
sub
xchg
int3
dec
push
lods
and
cmpb
stos
shll
inc
mov
push
sbb
pop
pushf
ss
aam
lret
add
jno
and
push
push
test
daa
xlat
xlat
adc
cli
fdivs
fsubl
pop
sbb
mov
clc
cmp
pop
inc
mov
sbb
mov
loop
mov
cmc
fwait
decb
mov
xlat
pushf
sub
sub
push
mov
scas
mov
test
xchg
lock
add
push
mov
rcll
fmuls
je
pop
iret
dec
clc
out
sub
fs
cmp
inc
jp
cmp
int3
and
xchg
jnp
mov
psraw
outsl
xchg
fstpt
sbb
jg
add
in
lods
int
loope
out
ds
xchg
std
out
inc
xchg
jmp
mov
cmp
jno
std
test
add
popa
xchg
inc
cld
push
mov
imul
insb
sete
mov
cmpsl
data16
rcrb
xchg
fistl
sub
call
rclb
negb
jmp
stos
jbe
int
xchg
sub
aaa
xchg
dec
ja
jnp
xor
and
mov
mov
mov
mov
in
jmp
pop
iret
push
jle
inc
or
outsb
imul
outsb
cmp
cs
rclb
jnp
sub
and
inc
jo
das
scas
mov
xchg
imul
mov
je
adc
js
xor
jge
pop
test
mov
mov
sub
cmp
fldl
mov
xchg
lret
inc
adc
popa
adc
mov
xchg
mov
push
out
xlat
addr16
rcll
inc
flds
loop
fwait
lods
inc
je
inc
mov
in
add
or
lret
addr16
mov
push
pop
test
jmp
mov
sbb
arpl
dec
dec
dec
jl
mov
push
ja
mov
mov
cmp
inc
aaa
aas
or
xchg
jmp
mov
cmpsb
mov
stos
insb
in
in
ljmp
rcrl
xlat
enter
mov
call
pop
fldt
mov
imul
pop
add
hlt
xchg
xchg
push
push
cmp
cmp
ficoms
clc
loopne
cmc
push
into
mov
out
es
les
mov
sub
push
sub
stos
xor
test
xchg
mov
jecxz
aad
sub
xchg
sub
nop
mov
mov
insl
mov
lods
cmp
xor
mov
or
xchg
mov
sub
int3
jmp
jp
arpl
mov
jl
in
mov
fisubl
imul
cmp
sbb
xor
mov
sub
or
xchg
mov
add
mov
loopne
pop
sub
repz
xlat
pop
ss
in
adc
rcrl
inc
mov
movsl
out
aaa
mov
fimuls
adc
in
inc
loope
lcall
aam
popf
or
and
sahf
lods
inc
dec
fsts
sub
mov
lret
fidivrs
jne
mov
add
mov
roll
mov
push
cwtl
push
push
pop
adc
sub
or
dec
sub
xor
repnz
inc
sub
xchg
xor
cwtl
xchg
fs
lock
push
out
shr
jnp
cwtl
arpl
data16
dec
in
fcompl
pop
mov
mov
mov
cmpsb
mov
push
cmpsb
pop
outsl
aas
rcrl
mov
pusha
mov
lret
mov
and
xor
jle
jb
in
push
pop
divb
test
testb
mov
push
xor
or
outsl
orb
jno
add
inc
push
fbstp
lcall
push
adc
popf
mov
in
fpatan
adc
jb
ds
stc
xchg
loopne
add
int
dec
sbb
shll
dec
ljmp
je
adc
jmp
mov
mov
mov
jecxz
repz
mov
xchg
dec
push
mov
pusha
jb
add
mov
jne
push
ljmp
mov
or
xor
pop
jno
lahf
inc
aam
insl
ret
fildl
jg
xchg
rclb
dec
mov
and
mov
fcoms
pop
sub
mov
xor
pop
mov
mov
xchg
or
mov
ja
sub
or
stos
in
fucom
mov
icebp
xlat
mov
shlb
cmp
jno
mov
aaa
aad
add
mov
add
leave
cmp
loop
push
pop
cmp
fwait
icebp
jnp
pop
pusha
push
loopne
dec
jo
sub
or
inc
flds
test
dec
dec
jmp
sti
cmp
jnp
insb
fldenv
xor
dec
jnp
push
xor
mov
sbb
sub
xchg
pop
lret
push
mov
jae
add
or
pop
inc
iret
adc
pop
pop
jge
pop
insb
repnz
lcall
jb
jecxz
flds
in
and
aaa
push
das
outsb
add
and
jmp
dec
rcrb
jmp
scas
and
sbb
lcall
dec
jecxz
mov
adc
sbb
mov
push
adc
or
mov
cltd
push
lcall
popa
sub
push
dec
ja
mov
mov
cmp
inc
mov
scas
shl
fistl
or
out
mov
data16
dec
mov
popf
js
push
nop
test
movsb
call
fdivrp
lds
cwtl
mov
add
xchg
xor
insb
xchg
in
dec
insl
or
fistpll
int
sbbl
jae
mov
ret
adc
mov
les
adc
stos
add
fimull
lods
dec
cmp
int3
dec
xor
aam
xor
imul
nop
nop
sarl
sub
mov
cmp
imul
xchg
cmp
insl
cli
cwtl
jb
fisttps
jo
jmp
test
gs
inc
mov
sbb
outsl
lret
push
and
lods
popa
mov
ljmp
mov
mov
stos
lcall
stos
push
mov
mov
pop
sub
fistps
push
scas
ficomps
pusha
push
repnz
aam
lods
jl
out
rcll
fsubrl
inc
jl
and
and
test
nop
out
insl
adc
xor
mov
push
adc
push
cmp
aaa
lahf
aam
imul
adc
mov
imul
dec
rol
lods
cmp
push
cmpl
adc
xchg
xor
xchg
push
in
aaa
arpl
mov
dec
mov
popa
pop
add
movsl
pop
sub
loop
jb
mov
add
arpl
insb
or
inc
filds
mov
es
adc
xor
inc
cmpsb
test
push
pop
and
mov
jae
add
push
shrl
shl
icebp
push
arpl
dec
cmp
lahf
ds
in
xchg
or
clc
cmp
sbb
enter
popa
mov
jnp
inc
dec
ret
sbb
lret
loope,pt
test
lods
lahf
push
xchg
or
sub
pop
fs
js
int
xchg
pop
outsb
das
fisubrs
rolb
icebp
push
add
lds
add
adc
mov
scas
lea
dec
insl
ljmp
data16
rol
xchg
lea
ja
xor
mov
pop
pop
cmp
icebp
enter
int3
push
loopne
mov
dec
scas
mov
xchg
or
xor
sbb
lahf
dec
adc
mulb
aas
fs
mov
scas
inc
xor
adc
ret
in
cmp
mov
sbb
push
outsb
push
xchg
push
mov
call
jg
add
repnz
sub
lahf
test
lahf
sub
inc
bound
mov
push
das
pop
cwtl
out
cmp
adc
pop
daa
push
arpl
jg
jne
sbb
sbb
mov
pop
cmpsb
add
aad
inc
insl
mov
mov
mov
iret
ret
jb
dec
fmul
dec
sub
scas
xchg
xlat
fidivs
hlt
sbb
lcall
jns
inc
cmp
sbb
shrl
pop
add
lock
test
int
push
lea
push
push
bound
or
lcall
xor
mov
push
test
daa
dec
sub
scas
dec
mov
stos
and
inc
insl
xchg
xchg
fstpl
cmp
roll
pop
lret
out
in
movb
out
cmc
rclb
out
rorb
sub
mov
mov
and
pop
cmp
enter
xor
stos
mov
ror
push
lea
mov
mov
xor
mov
fnstenv
das
mov
mov
inc
stos
fdivl
mov
icebp
popa
dec
shll
lock
and
test
roll
ret
enter
mov
xchg
fsubl
jae
pop
push
xlat
hlt
dec
pop
xchg
or
out
dec
gs
popf
pop
mov
mov
push
ficoms
dec
jno
and
push
pop
push
aam
ljmp
lock
mov
add
and
push
movsl
sbb
cmp
xchg
sti
jl
inc
sub
pop
outsb
popa
data16
push
inc
jno
xchg
mov
xchg
repz
stos
xor
mov
lds
push
push
mov
mov
mov
pop
js
xor
or
out
divl
inc
fisttpl
sub
mov
xor
ficomps
pop
sbb
push
sti
mov
and
mov
in
ss
mov
dec
fildl
inc
addr16
mov
mov
sahf
jge
inc
xor
and
mov
cmp
pop
mov
inc
and
inc
outsl
lds
lock
push
push
iret
stc
loop
test
bound
lds
dec
xor
or
sti
incb
hlt
sarb
push
loop
ljmp
mov
dec
pusha
push
mov
cmpsb
aam
ja
and
movsb
rorb
fcoms
sub
xor
xor
xor
or
out
cmpb
jbe
cmp
in
dec
rcll
sub
inc
test
test
sbb
out
loopne
jno
cmc
xlat
xor
idiv
push
ffreep
jg
pop
shrb
push
insl
das
stos
dec
sbb
lea
xchg
test
std
push
jecxz
leave
dec
sbb
pop
adc
pop
sbb
imul
adc
fisttps
cmp
lahf
mov
clc
fnstenv
xchg
lock
fsubs
popa
push
into
ss
push
insb
inc
test
outsb
ficoms
xor
push
aaa
inc
jp
add
push
sub
inc
and
aad
rclb
pop
repz
sub
bound
push
mov
xlat
jmp
push
in
lock
fbstp
push
xchg
test
je
xor
inc
lods
lret
dec
mov
ds
adc
and
xor
mov
aam
pop
shrb
dec
pushf
mov
xchg
je
jmp
aad
add
int3
lea
mov
dec
pop
mov
inc
sub
lahf
mov
insl
outsl
test
mov
push
outsl
sbb
idivb
mov
rorl
mov
sub
mov
loop
jno
sarb
mov
jns
aad
jmp
and
cmp
ljmp
dec
pop
cmp
ljmp
mov
negl
jge
sub
sub
and
mov
out
cmpsl
cmpsb
sbb
arpl
mov
jb
into
and
test
mov
xchg
sti
cmp
popf
push
clc
repnz
xor
and
mov
fisttpll
mov
add
add
fwait
arpl
mov
hlt
push
cmp
dec
into
fistpll
adc
sbb
mov
mov
mov
jnp
insl
lds
pop
and
pop
pop
cwtl
in
xchg
xlat
inc
mov
mov
mov
push
icebp
push
mov
movsb
jmp
cmp
testl
stc
jp
decb
sub
cld
ret
aas
aas
xchg
xchg
mov
scas
orl
jo
jns
pushf
mov
push
dec
adc
ret
add
gs
mov
popf
shrl
mov
add
pop
cmp
xor
pusha
mov
mov
or
imul
rclb
shll
adc
inc
in
lods
push
jb
push
aas
adc
adc
pop
in
nop
adc
xchg
test
pop
test
dec
adc
cld
inc
or
sub
inc
add
popa
mov
pop
iret
mov
data16
push
aad
inc
push
jb
pop
repnz
jb
insl
roll
sbb
cwtl
sub
imul
shrl
xor
push
mov
xchg
aad
adc
sbb
inc
les
sti
inc
xlat
std
xor
cmp
loope
movsl
in
movsb
lcall
sub
bound
out
orb
subl
dec
std
dec
jmp
dec
and
outsb
roll
stos
push
pop
shlb
xor
dec
outsl
cld
in
fucomip
jae
dec
cltd
mov
gs
pop
mov
test
enter
mov
jnp
sub
pop
xor
push
xor
stos
fbld
mov
pop
cmpsb
cmpsl
ficomps
cmp
dec
insl
addr16
jmp
mov
ds
ret
ljmp
test
fs
adc
cwtl
inc
cmp
jne
popf
std
aaa
mov
sti
mov
lock
aaa
inc
les
rcr
dec
int3
mov
jge
sbb
je
push
pushf
imull
test
add
loopne
into
fists
push
fwait
nop
jno
je
and
mov
jg
pop
ficomps
daa
andl
fisubrl
push
push
sahf
gs
mov
pop
xchg
fcmovne
cmp
pop
sbb
cmp
icebp
rcrl
and
loopne
cwtl
cwtl
js
test
gs
sbb
sub
xorl
rcrb
dec
push
repnz
jnp
jne
scas
fs
rcl
rcrb
in
and
test
xchg
dec
xchg
stc
addr16
fadd
and
in
cwtl
out
pop
test
and
mov
mov
pop
repz
mov
scas
repz
cmp
rorb
jne
loop
jle
fsubrs
stc
arpl
lcall
lret
cwtl
pop
call
ret
mov
xchg
mov
cmc
or
es
jge
daa
out
inc
cmp
mov
fnstsw
add
sarb
xchg
loope
or
aas
mov
push
lods
jp
gs
adc
push
sbb
stc
push
xchg
clc
and
push
jmp
pop
leave
mov
stos
pop
arpl
mov
dec
cmp
mov
popa
or
xchg
pop
inc
hlt
jge
repnz
cmp
mov
pop
sub
push
xchg
or
jns
cmpsb
or
push
dec
jle
jge
lods
xchg
mov
stc
or
mov
push
mov
lcall
mov
int
mov
repz
push
repz
in
mov
push
jb
xor
mov
cmpsl
imul
sub
jle
adc
fwait
lock
out
cld
inc
mov
pop
dec
lret
int3
sbb
add
mov
cld
ds
jb
push
mov
sub
and
mov
push
jecxz
std
mov
adc
jp
sbb
test
sahf
cvtps2pd
int
ja
gs
or
sbb
inc
jbe
cs
push
clc
xlat
sub
inc
lods
loopne
add
jp
scas
lock
icebp
cmp
xchg
outsl
xor
jns
xchg
push
jp
daa
into
mov
mov
rorb
add
dec
ljmp
jnp
stos
fcmove
std
sbb
and
negb
push
inc
fs
mov
inc
sub
xchg
lahf
scas
adc
pop
loope
hlt
pop
inc
push
es
orb
mov
data16
push
pop
jl
test
sbb
outsl
sub
add
lods
or
sub
xor
notl
nop
mov
pushf
push
lret
cltd
adc
cmc
ds
inc
sbb
sbb
outsl
mov
addr16
fiadds
movsb
insb
mov
mov
je
and
jl
ret
cmp
push
clc
testb
pop
cwtl
lock
add
mov
out
call
aad
pop
mov
xor
out
rcll
inc
daa
dec
mov
mov
or
and
push
dec
or
gs
aaa
adc
int3
add
cmc
mov
xor
mov
insb
pop
shrl
dec
and
add
mov
aam
imul
inc
or
xchg
fdivr
mov
cmpsb
dec
add
in
dec
sahf
fsubrs
jp
xchg
outsb
push
hlt
mov
imul
jecxz
call
popf
fdivl
dec
fwait
sahf
inc
ret
shrl
sbb
fildl
nop
pop
addr16
or
cmp
into
fiaddl
sahf
scas
adc
loop
stc
iret
in
jp
push
mov
addr16
aaa
ljmp
xchg
or
mov
into
loop
push
add
dec
jnp
je
add
cmp
push
sbb
inc
test
jno
outsl
cs
pop
es
or
out
cltd
sti
mov
jne
push
adc
mov
imul
xlat
fisubl
imul
jbe
adc
jecxz
mov
dec
pop
sbb
adc
or
mov
push
dec
popf
and
push
lods
jp
dec
mov
lock
mov
dec
add
outsl
icebp
inc
jge
and
repnz
fstpl
jo
in
push
sub
ret
mov
shlb
sarl
data16
mov
and
rolb
sbb
icebp
ss
jecxz
sbb
hlt
adc
out
adcl
shl
js
jnp
aad
mov
iret
fimuls
out
clc
lcall
add
fists
out
sahf
pop
pop
xchg
sub
mov
sub
dec
rcl
int
hlt
sbb
pusha
cld
add
cmp
dec
jg
mov
in
mov
lret
int
jmp
dec
stos
inc
scas
inc
mov
xlat
shll
mov
dec
das
pop
stc
movsl
hlt
pop
lmsw
xlat
sbb
stos
mov
fmuls
push
jne
aad
loop
rorb
out
jae
add
xor
ljmp
shll
mov
inc
or
lods
mov
cmpsl
push
push
adc
cmpsw
xor
aam
mov
je
pop
bound
cld
pop
sbb
mov
loop
repnz
lret
mov
insl
add
add
pop
inc
mov
lret
daa
adc
jbe
loopne
xchg
outsb
aas
hlt
inc
add
add
scas
daa
xchg
insl
pop
mov
push
push
and
rcrb
jne
call
or
xor
ds
xchg
xchg
and
sbb
fisttpll
mov
or
enter
shl
sub
loopne
sbbl
push
test
cmp
add
adc
sahf
sub
arpl
dec
mov
std
lods
nop
add
mov
gs
rorl
movb
inc
cs
test
adc
cld
loope
out
push
imul
addr16
jg
mov
and
mov
pusha
in
cmp
mov
insb
aam
leave
dec
insb
pop
jecxz
xchg
jp
testl
push
inc
aam
pop
xchg
pop
cmp
mov
pop
rorb
jbe
in
aaa
cmp
std
lret
in
daa
sub
in
sbb
sahf
adc
dec
loope
dec
fs
jb
jno
mov
sbb
cmp
or
or
mov
js
fwait
push
and
pop
and
int3
mov
lcall
outsl
je
clc
mov
xchg
scas
aaa
mov
inc
add
das
xor
mov
rclb
imul
mov
lahf
pushf
das
push
cltd
dec
shl
arpl
cmp
jmp
dec
pushf
rcrb
ds
loop
orb
mov
pop
dec
mov
push
push
push
mov
dec
add
icebp
cmc
inc
bound
xor
sti
xchg
fdivs
mov
lods
popf
cmp
aas
filds
mov
test
aas
or
or
adc
divb
ret
popf
and
adc
nop
jo
lods
data16
sbbl
mov
ljmp
sub
repz
sahf
out
lock
mov
insl
int
std
push
push
in
mov
dec
dec
add
mov
out
in
loope
js
inc
or
inc
jge
push
popa
push
sub
dec
mov
mov
fs
cmp
mov
mov
jne
ret
lea
xchg
mov
mov
aaa
cmp
dec
dec
mulb
add
dec
int3
fiadds
cld
inc
in
inc
fwait
ret
xchg
mov
mov
cmc
pop
ret
sbb
adc
sub
sub
xor
insl
negb
push
imul
cmpsl
andl
jecxz
pop
lahf
xchg
cmpsl
pop
and
inc
pop
shl
enter
mov
ds
js
out
inc
cmpsl
xlat
dec
arpl
das
stc
das
loope
pop
in
stc
stos
mov
inc
arpl
decl
xchg
lret
scas
adc
jg
sbb
jno
jge
push
xchg
ja
mov
or
add
adc
mov
sar
pop
cltd
mov
or
adcl
ror
push
inc
push
and
fldl
sbb
inc
add
addb
stos
push
data16
out
add
rep
adc
and
sti
and
bound
sarb
xchg
dec
dec
or
lcall
pop
mov
jle
mov
pop
imul
dec
push
adc
pop
pop
pop
mov
mov
mov
sub
data16
das
jl
aaa
mov
movsl
loope
inc
scas
adc
jg
inc
xlat
data16
rcl
xor
inc
ffreep
cmpl
fnsave
mov
cld
ds
sbb
cmp
shlb
imul
xor
enter
cmp
push
int3
inc
lret
xchg
mov
mov
lods
xor
sbb
outsb
mov
scas
mov
pushf
add
dec
adc
lock
fwait
mov
and
mov
aad
cmp
mov
in
inc
mov
push
lds
jle
idivb
les
daa
fidivs
imul
cmp
mov
arpl
pop
movb
cmp
mov
stos
lea
jno
popf
jp
pop
mov
and
cmp
add
push
push
jno
lods
aad
popf
gs
push
sarl
or
shll
aas
test
lahf
xor
or
and
sbb
jbe
in
adc
jno
xchg
popf
and
sbb
cmp
sbb
xlat
inc
cmc
aam
or
inc
scas
shrb
data16
and
adc
fsubl
jp
bound
push
xor
xchg
sub
bound
push
sbb
aaa
mov
mov
arpl
adc
xchg
std
popa
dec
and
push
fisttpl
out
das
mov
scas
inc
stos
fimull
and
out
xorl
lret
or
rorb
xchg
in
push
fsubrl
and
in
sub
inc
arpl
push
add
cmpsl
stos
dec
dec
sti
cmp
jecxz
les
ficoml
xor
jae
mov
mov
loopne
pop
push
clc
pop
sub
pushf
xlat
inc
icebp
cli
xorl
popf
jns
out
mov
rorb
loope
ror
mov
jne
fs
out
xchg
lret
dec
jne
outsb
cmp
push
sub
sub
shlb
and
and
xor
push
js
nop
jbe
adc
rcll
in
sbb
faddl
mov
lods
cmp
popa
push
sub
jo
ror
aam
int3
mov
loopne
and
jne
aam
xor
mov
out
fisubrl
inc
mov
lahf
nop
stc
or
add
das
aad
sar
pop
push
int3
push
mov
test
mov
ror
sahf
jae
or
add
cmpsb
add
xor
ret
aam
testb
xchg
dec
shll
js
movsb
lcall
insl
icebp
and
sarb
sub
dec
jnp
add
js
cmp
fnstenv
dec
jnp
mov
ds
scas
sbbl
adc
push
test
push
sbb
mov
xchg
push
push
jmp
lods
popa
add
int3
lods
fnstsw
adc
push
sti
xor
imul
sub
add
sbb
data16
pop
out
inc
aad
jae
add
lock
jl
xor
int
pop
ss
lods
pop
xor
xlat
xor
or
loop
and
or
out
repz
es
sbb
sbb
xor
js
scas
mov
in
inc
pushf
jnp
ret
mov
std
mov
sbb
push
or
mov
fs
in
mov
push
nop
jg
add
or
dec
pop
in
repnz
xchg
mov
push
insb
and
cli
inc
cmpsb
lcall
aam
lock
or
cltd
mov
stos
inc
in
xchg
ret
inc
icebp
test
mov
std
idivl
sarb
aad
int
pop
mov
adc
push
xchg
sub
test
daa
insb
dec
pop
or
outsb
fisubs
sub
or
jecxz
push
inc
outsb
dec
inc
adc
dec
jo
adc
sub
xor
mov
scas
cmp
ret
push
sub
adc
pop
and
push
fnstcw
insb
nop
mov
jp
mov
mov
test
push
add
sbb
jmp
mov
push
nop
stc
pop
pop
cwtl
mov
dec
push
mov
js
loop
faddp
sbb
xchg
mov
pop
cmpsl
mov
int
inc
loop
jmp
repnz
hlt
popf
mov
ffree
or
imulb
pop
insb
push
subb
dec
leave
call
push
or
lea
js
mov
adcb
pop
fwait
sti
lods
xchg
or
inc
push
in
or
add
jb
sbb
iret
es
add
jg
out
pop
inc
push
lds
sahf
test
out
lock
mov
xchg
adc
inc
cltd
xchg
push
mov
repnz
jle
sbb
repz
fnstsw
push
loope
fldl
clc
adc
dec
adc
mov
rcll
mov
sahf
mov
cmp
inc
jg
xchg
jb
mov
jle
mov
jp
incl
add
add
in
xor
add
and
or
in
pusha
push
xchg
aam
cmp
inc
testl
mov
out
das
test
psubusw
push
shll
adc
jbe
jmp
xchg
jo
adc
cmp
mov
cmpsb
xor
mov
addr16
sahf
incl
inc
add
dec
mov
jg
das
mov
incb
lret
aaa
rol
fmuls
scas
insb
mov
sub
add
pop
orb
add
push
cmpsl
pop
xchg
xlat
xchg
int
adc
jno
xchg
hlt
ja
fucomp
fsubl
dec
in
mov
push
outsl
mov
mov
outsb
movsb
cmp
pop
push
jle
iret
push
push
je
xor
bnd
repnz
dec
cmp
jg
cmp
lods
sbb
out
clc
mov
popa
cmpsl
add
xchg
sbb
es
push
dec
xchg
clc
sub
nop
fldenv
add
xchg
or
int3
mov
pop
mov
sub
sub
xchg
jg
insb
and
jns
fisubrl
bnd
stc
dec
mov
or
mov
pop
imulb
xchg
int3
sbb
ret
jb
xchg
mov
mov
lret
pop
mov
out
shlb
or
ds
push
inc
shll
repnz
in
inc
mov
mov
je
ret
push
xor
mov
mov
loopne
mov
adc
sbbb
shll
push
push
jmp
std
shrb
mov
sub
outsl
mov
and
push
pop
xor
push
out
dec
fsubr
cmp
mov
sti
fcomp
lret
xor
imul
cli
in
icebp
inc
pop
in
xchg
mov
sub
pop
out
push
sbb
lret
mov
stc
mov
xchg
fdivrl
ja
mov
adc
add
mov
xchg
sub
loope
in
and
cmp
outsb
cs
lret
mov
scas
mov
mov
out
push
dec
mov
sbb
outsb
push
jge
mov
pop
movsb
xchg
jno
mov
mov
fldcw
mov
stos
test
outsb
and
test
hlt
sub
je
aas
jno
pop
pusha
push
inc
stos
imul
rep
sbb
lds
mov
aad
jbe
jne
xor
bound
mov
xlat
fmulp
cmp
and
fistpl
cld
jmp
inc
arpl
add
js
dec
pop
or
shll
inc
cwtl
out
pusha
lods
sbb
cltd
mov
mov
test
loope
sbb
jle
lcall
sbb
mov
cs
pushf
mov
outsb
cmp
xchg
mov
addr16
dec
hlt
cmp
pop
rcll
jnp
test
dec
xlat
sbb
or
dec
movsb
inc
inc
adc
test
leave
sub
mov
out
adc
mov
out
imull
xchg
mov
outsl
push
das
xor
inc
cmpb
fiaddl
push
and
into
scas
iret
xor
jle
mov
mov
jne
push
outsb
lds
mov
nop
faddp
repz
and
orl
lods
pop
out
sub
mov
pop
mov
inc
or
push
test
inc
xor
jecxz
add
lds
sbb
cltd
or
fs
pop
fwait
test
jnp
stos
bound
mov
loopne
stos
or
adc
mov
push
cmc
gs
lods
jo
mov
sti
or
cmpsb
gs
sti
adc
adc
int
add
mov
cmpsl
frstpm(287
cmp
inc
sbb
iret
sti
sbb
pop
mov
ret
mov
ds
lea
cmpsb
lcall
sbb
and
push
icebp
xor
lods
les
push
cld
or
xor
iret
stos
jnp
in
imull
mov
out
mov
or
mov
ret
fdivrl
lret
fadds
pusha
push
xchg
jne
movsl
int3
loopne
pop
mull
inc
mov
stos
sbb
push
cmp
or
or
out
xor
test
pop
fwait
inc
cmpsl
dec
sbb
inc
add
and
aam
repnz
jp
int
cmpb
nop
pop
mov
cld
push
xor
mov
sbb
pop
lods
add
push
jg
fstl
aam
and
arpl
jmp
lahf
lret
pop
push
xchg
movsb
repnz
or
jno
rcl
test
stos
imul
push
xor
push
into
cmp
imul
xor
mov
cmovne
out
leave
sbb
mov
imul
xchg
cmp
inc
sbb
xor
or
enter
cmp
jae
cltd
sbb
sbb
int3
mov
fldt
shr
out
clc
sbb
mov
movsb
leave
daa
push
xor
push
add
je
adc
xor
cmp
aas
leave
stos
xor
js
lea
hlt
addr16
adc
hlt
lcall
inc
cmpb
mov
jecxz
mov
jge
and
lock
xchg
repz
filds
pop
xchg
dec
pop
push
fwait
testb
push
cwtl
inc
add
dec
cmp
or
cmp
push
ret
cld
adc
mov
or
push
xor
mov
mov
or
adc
sbb
cmp
pop
add
dec
dec
out
xor
mov
cmp
mov
mov
in
lea
popf
imul
aam
rol
dec
jb
pop
xor
inc
jecxz
inc
loope
or
test
xorb
loopne
repz
cmp
jg
mov
loop
pushf
arpl
fstps
int
jo
jl
mov
jae
inc
mov
add
dec
mov
cs
or
pop
in
mov
add
pop
rorl
add
and
push
push
stos
add
cwtl
add
and
xor
push
shll
out
dec
dec
inc
mov
addr16
test
cmp
push
adc
sbb
leave
loopne
sbb
nop
loopne
mov
add
call
es
mov
in
arpl
add
or
mov
mov
mov
mov
ss
add
xor
push
jp
add
jne
popf
push
push
fisubl
xlat
sub
loopne
out
loope
xchg
or
pushf
mov
and
mov
cli
inc
mov
aaa
stc
dec
das
mov
adc
mov
pop
mov
push
inc
mov
das
mov
or
inc
in
xor
int
xor
outsl
fiadds
mov
push
je
je
cmp
cld
and
push
or
sti
adc
jecxz
and
xchg
fmull
scas
imul
push
sahf
xchg
xor
jne
xor
xchg
push
and
mov
pop
mov
jae
xor
inc
push
xor
sub
xchg
jp
adc
call
bound
mov
sub
or
inc
cmp
cmpsl
leave
lea
nop
les
lcall
fs
jge
mov
stos
adc
push
sub
loopne
jle
mov
jns
mov
loopne
jmp
int
push
inc
add
aad
push
pop
das
sarl
jno
jnp
pop
mov
push
mov
arpl
push
sti
test
cmp
out
jecxz
jbe
hlt
sbb
xor
rorl
mov
movsl
subb
mov
arpl
div
cmc
fsubrp
std
jl
jge
es
jl
mov
in
js
stos
push
xchg
fdivs
push
fldl
mov
push
lds
jmp
fcompl
xchg
jecxz
ficomps
les
insl
fildl
stc
sub
jae
jmp
jg
pop
sub
bound
rorl
out
out
add
leave
andb
cmp
push
mov
cmpsl
repnz
inc
in
ds
xchg
dec
pop
pop
cmp
xchg
xchg
push
mov
adcl
push
push
sti
lds
mov
loope
cmpsb
cld
cmc
sub
hlt
pop
cmp
pop
and
inc
aam
in
dec
jge
sub
in
imul
lret
xorb
sbb
scas
add
outsl
rcll
pop
dec
popa
call
push
mov
cli
fiaddl
aas
outsl
cmp
cmpsb
fs
test
js
mov
push
cmpsb
arpl
add
jb
xchg
mov
sahf
jge
xchg
push
rorl
lea
mov
add
out
call
sahf
mov
cmp
mov
repz
or
mov
nop
push
mov
mov
push
arpl
jno
mov
sub
xor
xchg
int
rol
and
sbb
in
jb
je
shrb
negb
cld
sbb
lods
mov
pop
repnz
mov
out
mov
aas
and
ja
ret
xorb
out
inc
out
inc
insl
ror
std
popf
cmc
dec
cmpsl
mov
cwtl
iret
or
cmpsb
pop
pop
imull
pop
cli
icebp
sti
and
clc
imul
pop
pushf
pop
xchg
shlb
jne
sub
jne
pop
pop
out
sub
jno
cwtl
popa
sbb
ret
pushf
jecxz
push
stc
out
or
inc
iret
fimuls
mov
jne
push
fistl
aad
adc
das
xchg
mov
ja
mov
call
fidivs
cmp
push
out
lods
daa
push
push
nop
in
jns
movsb
mov
cmp
pop
cli
bound
andb
jg
and
stos
mov
xor
cmp
movsb
mov
dec
sub
dec
cmp
jo
test
pop
mov
negl
cmpsb
xor
or
adc
fimuls
push
add
push
mov
sub
movsb
in
pop
add
push
mov
pusha
pop
dec
aam
cli
add
mov
mov
dec
sbb
pop
adc
fsub
in
repz
fdivrl
pushf
in
leave
push
add
gs
popa
dec
push
loopne
and
ffreep
roll
adc
push
sub
sub
jo
push
loope
leave
cmp
int
ljmp
les
insl
and
sub
xlat
jns
pop
mov
jne
mov
sarl
cld
dec
xor
das
aad
adc
and
mov
mov
shlb
add
pushf
cmpb
outsb
int3
sbb
add
sub
es
xor
movsb
adc
ds
out
arpl
out
inc
and
mov
icebp
rol
xlat
xchg
adc
mov
jo
clc
push
rclb
sbb
inc
icebp
jmp
sbb
sahf
cmpsl
push
jno
cmp
push
or
aam
mov
sbb
outsl
arpl
push
inc
repz
mov
nop
push
in
pop
ds
movsb
lock
es
xor
es
clc
scas
inc
mov
pop
ret
xchg
xor
or
stos
movsl
push
dec
dec
outsl
cmp
loope
cs
jnp
adc
mov
dec
bound
add
and
test
push
lods
lods
mov
jo
popf
jbe
ja
mov
mov
or
sahf
loop
or
xchg
ss
bound
sub
in
mov
xor
stos
inc
xchg
dec
xchg
sbb
jb
push
shl
ja
push
insl
xchg
test
dec
xchg
mov
mov
or
addl
push
mov
mov
test
dec
popf
mov
in
aad
imul
push
jae
decl
jp
push
xor
pop
sub
mov
pop
fnstenv
mov
sub
into
cmpsl
js
out
test
add
mov
cmp
in
scas
loope
jbe
push
fisttps
pop
fcmovnu
mov
sbb
fsubr
andl
mov
sub
test
pushf
fincstp
ja
cltd
faddl
test
lcall
mov
and
adc
cmp
test
imul
jae
shrl
mov
mov
lods
adc
or
clc
aad
dec
mov
lea
mov
cltd
inc
std
mov
lret
sub
mov
xor
rcll
les
cmpsb
roll
movsb
inc
stc
push
jge
sub
dec
sbb
cmp
xlat
mov
int
hlt
xor
call
add
repnz
pusha
xchg
mov
mov
xchg
lea
mov
dec
mov
push
adc
dec
push
xchg
aaa
pop
decb
inc
int3
inc
pop
pop
daa
jmp
sbb
jo
jmp
bound
repz
nop
jbe
jns,pt
sub
inc
adcb
fcomip
jle
pop
jge
cmp
out
cltd
pop
aad
mov
out
inc
lods
lret
aad
mov
xor
push
inc
movsl
sbb
push
rcr
inc
push
fisttpll
daa
imul
test
bound
cmpsl
pop
dec
stos
jns
lock
push
mov
sub
fwait
push
in
inc
insl
movsl
cmp
cmp
mov
fscale
push
and
scas
cmp
movsb
and
push
cld
xor
int3
xchg
push
lods
cmp
sbb
ljmp
shrl
movsb
push
pop
jb
int3
or
les
cltd
cmp
push
repnz
loopne
mov
imul
inc
rcl
popf
cmc
popa
fimull
shlb
dec
inc
cli
pmulhw
sub
cmpsl
lret
pop
xlat
cmp
fstps
cwtl
xor
pop
push
pop
xchg
dec
outsb
in
gs
gs
dec
xchg
pop
lahf
stc
pop
or
aad
push
cmpsb
scas
sbb
push
hlt
and
mov
pop
icebp
imul
daa
arpl
data16
cmp
sub
push
sub
mov
mov
in
mov
adc
fcoml
cmp
inc
cmp
dec
ficoml
outsl
stos
dec
aaa
mov
mov
push
sbb
cmpsb
mov
sbb
dec
fstl
jg
jl
je
test
xchg
sub
leave
push
sahf
outsb
jns
jg
sbb
sub
int3
subl
xor
lock
es
cmp
iret
inc
and
dec
loopne
pusha
cmp
clc
gs
outsb
lock
dec
lret
or
out
fildl
hlt
fimull
sub
sbb
cltd
shl
jmp
shlb
outsb
pushf
loop
imul
insb
fstps
pop
xchg
out
ret
lahf
test
inc
xor
lock
rcrl
ja
fs
jge
rorb
jno
loop
add
sahf
mov
sub
stos
aad
dec
test
lcall
or
ss
jge
aaa
cmp
das
loopne
js
test
outsb
xor
and
sub
shufps
dec
mov
xchg
dec
mov
shll
notl
add
loopne
add
lods
cmp
xor
bound
cli
mov
iret
test
scas
hlt
movsl
incb
push
inc
pop
sub
aam
mov
jmp
xchg
jge
clc
lahf
testl
cmp
jae
jno
push
xorb
push
xchg
xor
stc
mov
adc
subl
lahf
hlt
push
ja
es
add
cmp
mov
stos
daa
jnp
sbb
subb
mov
inc
mov
out
pop
jecxz
mov
sti
sbb
repnz
flds
es
add
imul
xchg
inc
mov
lret
out
pop
sarb
rcr
jg
rcr
movsl
subl
fmulp
sbb
sbb
aad
sub
shll
in
cwtl
ljmp
test
push
test
xor
cmc
xchg
loop
icebp
mov
pop
adc
lods
add
sbb
cmp
lods
dec
pop
dec
jle
xlat
or
mov
out
ja
mov
leave
loope
adc
rorl
cmpsl
mov
sbb
lds
aaa
int
xchg
lcall
sbb
scas
add
cli
add
mov
out
nop
inc
in
mov
in
xor
xchg
fistpll
insb
pop
in
cli
xlat
dec
in
lods
pusha
jb
imul
cmp
sub
ret
lret
xchg
cmp
add
int
add
and
cltd
adc
sub
outsb
ret
mov
lods
pusha
ja
xlat
dec
pop
mov
xlat
mov
cltd
push
loopne
cwtl
out
xor
insb
xchg
stos
fisubrs
movsl
xor
sub
std
xor
fstpt
fstpl
or
jns
in
sarl
cltd
movsl
fists
xor
dec
test
inc
add
mov
push
push
or
or
sbb
or
push
data16
fidivl
inc
push
adc
or
or
sbbl
dec
into
jo
rcll
pop
arpl
les
ficoml
pusha
cltd
and
cmpsb
pop
mov
adc
lahf
lcall
mov
mov
push
or
das
hlt
aas
lahf
shrb
lea
notl
imul
mov
sbb
out
sahf
fidivl
jb
push
loopne
outsb
xor
inc
mov
stc
divl
push
fs
adc
xchg
push
test
sub
hlt
int
pop
lea
push
lds
fsubl
fsubl
or
and
push
push
dec
cmp
jae
test
dec
or
inc
inc
or
xchg
cli
fdivp
cwtl
imul
arpl
push
popa
cmpsb
fistps
jae
mov
test
pop
adc
data16
jmp
data16
iret
cmpl
test
stos
loop
jmp
inc
cld
add
mov
dec
sbb
call
mov
and
jno
es
ja
adc
mov
sbb
icebp
movsl
sub
mov
rcl
jmp
mov
hlt
mov
xchg
inc
or
and
pop
xchg
xchg
mov
jg
dec
movl
and
xchg
mov
aaa
mov
pop
push
sub
ds
out
and
icebp
pushf
and
fnstsw
test
sbb
jg
movsb
fstl
mov
xchg
outsl
jb
loope
xor
into
sti
or
repnz
out
sub
ds
psrlq
or
cmpsl
push
dec
fs
sbb
lahf
fsubrs
decl
aaa
xchg
cmp
fcomip
repnz
push
push
or
shlb
pop
mov
add
cmp
in
subl
adc
outsl
outsl
jle
push
cmp
mulb
dec
and
mov
pop
es
mov
push
mov
and
sahf
es
mov
fisubs
fwait
cwtl
cli
jmp
pop
and
in
hlt
cmpsl
cmp
repnz
push
sub
lock
mov
mov
imul
cmpb
lock
add
adcl
arpl
test
lret
pop
pop
mov
aad
mov
xlat
ljmp
ror
sub
outsb
sbb
add
pop
rcll
sar
mov
ljmp
mov
imul
mov
lock
dec
subl
test
mov
sbb
sub
dec
aad
inc
cwtl
lods
js
loopne
stc
cmpsb
add
pop
lret
add
xlat
push
iret
pop
adc
fsubl
cltd
cmp
push
xchg
push
orb
sub
or
pop
in
xchg
and
pop
out
jnp
adc
pop
pop
movsl
int
xor
inc
dec
insl
test
inc
aam
setns
inc
pusha
jg
xor
dec
push
pop
loope
repnz
add
mov
pop
pop
imul
sbb
aam
daa
push
aam
pusha
lret
sub
sbb
iret
sub
cmp
rorb
mov
jnp
scas
jmp
int
ret
into
in
ficompl
fadds
jg
xchg
cmp
mov
xchg
xorl
jne
into
nop
or
xchg
mov
or
pop
shl
orb
fwait
sub
loopne
inc
and
daa
adc
inc
dec
sub
mov
dec
call
inc
repz
pop
imul
popf
test
cmpsb
mov
dec
das
add
popa
mov
mov
fmuls
in
data16
rcrl
inc
lret
xor
add
repnz
aad
cmp
arpl
mov
repz
aad
ret
clc
sub
js
add
incl
push
mov
pop
push
in
int3
lahf
les
lret
mov
enter
mov
mov
in
dec
cmpsl
cmp
loope
int
mov
pop
mov
ljmp
decb
repnz
ljmp
lods
repnz
xchg
xlat
push
or
into
shll
cmpsl
mov
or
xchg
sub
xchg
in
ret
push
gs
clc
pop
in
adc
inc
mov
in
andb
push
push
cmp
leave
loopne
jae
aam
add
sbb
pop
std
imul
add
push
movsl
fs
or
push
popf
lahf
js
mov
rclb
test
fidivs
and
mov
xor
stos
sahf
sbb
or
push
pop
push
adc
int
cmp
xor
pop
push
pop
jg
ret
lret
xchg
fs
lcall
cmp
test
sbb
lods
ret
insb
pop
dec
dec
aaa
mov
mov
ljmp
mov
insl
popa
mov
scas
adc
cli
insb
loop
xchg
test
jnp
ficompl
mov
call
mov
xlat
dec
sub
shl
push
sub
adc
sub
out
sub
jb
push
inc
pop
inc
int3
ds
pop
lods
andb
jge
xchg
cmc
into
adc
loop
jne
lods
enter
sub
mov
bound
inc
movl
bound
jb
out
sbb
mov
xchg
insb
jo
cmp
ja
jge
dec
jno
mov
adc
gs
jno
push
lret
xchg
notl
cmp
popa
mov
shr
mov
repz
jo
push
sbb
or
mov
add
hlt
cli
scas
mov
adc
cli
aas
adc
push
xlat
js
subl
cmpsb
xor
dec
mov
dec
pop
pop
jne
jno
push
sbb
dec
mov
add
clc
cmpsb
scas
sub
sub
lret
lods
aad
inc
std
sub
xor
push
hlt
sti
or
xchg
or
pop
jno
lea
xor
jecxz
pop
mov
add
fldl
cmp
mov
and
and
cld
out
vminss
add
repz
xchg
enter
test
push
out
leave
sahf
popl
clc
jmp
es
pusha
lret
dec
adc
aaa
mov
call
dec
ret
insl
insl
mov
sti
lods
inc
stc
mov
jnp
xor
cmp
and
fldt
sub
aas
sub
icebp
xor
cmp
jbe
xor
aad
push
imul
dec
xor
lds
stc
mov
xchg
lahf
inc
lret
imul
das
enter
fildll
mov
mov
xor
scas
push
jb
gs
inc
add
aaa
push
aam
cmpsb
test
sub
push
fwait
cs
sbb
ljmp
mov
dec
lods
movsb
inc
arpl
xor
cli
lret
sub
fsubrs
dec
imul
inc
push
in
and
inc
ret
mov
mov
push
mov
cmp
in
mov
sbb
push
ss
mov
roll
cmc
mov
jg
int3
add
sub
fnstcw
inc
cmp
mov
and
aad
ret
push
jo
scas
jl
mov
jecxz
mov
pusha
cmp
outsb
cmp
mov
mov
add
lret
or
pop
lret
mov
insb
sbb
hlt
and
cli
xchg
sub
rorb
out
add
dec
or
test
out
add
bound
out
adc
jno
ret
pop
xlat
stos
inc
xor
pop
dec
jl
xor
scas
adc
xchg
into
pop
push
icebp
roll
inc
out
dec
test
jl
or
insb
xorb
aad
mov
out
xor
dec
rcll
mov
jecxz
addr16
rcrb
test
cli
lcall
adc
or
test
fmul
in
sbb
inc
dec
mov
jno
shlb
js
dec
fs
scas
sahf
les
ret
mov
jb
div
scas
cli
popa
fmull
mov
out
or
addb
andb
inc
xor
outsb
leave
mov
xor
pop
pop
fidivs
mov
sub
sbb
dec
mov
repnz
and
jae
jne
lea
ja
jns
sbb
js
outsl
adc
mov
or
out
out
insb
mov
das
sbb
bound
push
cmpsl
inc
call
push
pusha
dec
mov
mov
cmp
popa
cli
add
mull
lea
xor
notl
pop
pusha
mov
push
fldenv
pop
insb
aad
sbb
fcoms
push
adcb
test
rcr
mov
dec
das
mov
lret
mov
nop
shll
stos
stos
dec
xor
xchg
fcmovne
pop
mov
jo
or
test
test
lahf
aam
das
sahf
xchg
xchg
add
out
mov
or
loop
pop
jg
and
lods
movsl
stos
ljmp
mov
jns
xor
movsb
clc
jg
fwait
loopne
cmp
lods
jmp
out
pop
push
lahf
jne
add
scas
fdivp
sysret
mov
xor
sbb
shlb
pop
mov
test
inc
and
dec
aad
clc
movsb
call
push
sbb
jp
addr16
push
mov
rcll
mov
fistps
mov
pop
incl
jmp
jnp
ret
jecxz
push
test
stc
sub
or
mov
mov
mov
pop
test
shll
fmul
mov
jns
sub
cmpsb
jmp
test
jno
jmp
xchg
stos
add
xchg
rcr
mov
or
fistl
cwtl
sub
pushw
mov
xchg
rcll
jmp
mov
cmpl
inc
dec
lods
leave
pushf
fs
push
pop
cli
jbe
xchg
sbb
xor
jge
jns
mov
jp
aam
dec
inc
mov
call
rolb
dec
add
stos
adc
push
jno
jmp
jne
sub
outsl
sub
sti
out
sarl
mov
dec
repnz
adc
push
inc
push
mov
ret
ljmp
rol
jg
lret
loopne
js
jb
xor
or
mov
sbb
lods
data16
sub
and
push
dec
movsl
into
mov
aad
enter
xchg
arpl
lods
xchg
dec
jle
jmp
mov
pop
int
jne
cmp
dec
or
test
adc
rcrl
cmp
out
dec
test
jg
testl
xlat
mov
call
ret
decb
mov
rcrb
repz
sbb
xlat
stos
xchg
mov
outsb
repz
mov
test
and
and
arpl
add
int3
pop
sub
or
fildl
adc
iret
adc
inc
xchg
sub
sub
mov
test
mov
cmp
xchg
push
sbb
xor
push
fs
inc
ret
push
push
outsl
clc
sbb
in
repz
cmp
rcr
lret
xchg
es
push
mov
imul
inc
int
pop
loopne
cmpsl
or
pop
inc
or
flds
xchg
icebp
enter
shll
dec
jb
cmpsl
mov
loopne
sub
xor
clc
mov
iret
aas
or
dec
or
movsb
mov
jle
fidivrs
jge
dec
cmp
add
fisttpl
ds
add
cmp
or
push
push
out
pop
loop
daa
sbb
add
sbb
mov
loop
aad
push
and
inc
sbb
ret
adc
inc
cmp
repz
push
outsl
mov
repz
das
mov
push
xchg
sbb
jne
and
and
clc
pop
repz
outsl
sbb
push
fidivs
insb
les
add
push
xor
or
loope
subl
das
rol
add
xlat
push
push
sub
mov
pop
iret
popf
inc
or
loopne
rol
cmp
xchg
decl
sub
pusha
stc
frstor
cmp
fdivrl
shlb
jg
ljmp
jb
mov
outsb
and
loop
fldl
loope
push
ss
popa
adc
and
pop
xchg
cmp
fldl
mov
rcrl
lods
imul
cmpsl
adc
hlt
std
es
xor
or
xchg
mov
push
sahf
xchg
pop
mov
lock
lods
daa
shlb
jp
push
pop
das
movsb
dec
jl
cli
cmpb
cmp
and
cmp
pop
fsubr
jns
xchg
loop
inc
mov
iret
or
mov
int
gs
mov
das
std
jl
sub
mov
popa
roll
mov
pop
xor
or
dec
pop
stos
ds
mov
popa
dec
inc
test
mov
cmpsb
and
aad
inc
aas
jecxz
dec
stos
jecxz
insb
xchg
inc
dec
sbb
mov
xchg
sbb
pop
mov
xchg
add
sarl
jb
sub
lcall
dec
jnp
mov
ror
mov
popa
jge
jmp
cmp
popa
jecxz
and
fs
jnp
jl
test
xor
negl
movsb
push
push
das
in
and
cmp
arpl
inc
dec
mov
dec
fcoml
int
push
jle
push
bound
aaa
pop
hlt
push
push
adc
jo
jecxz
mov
pop
add
pusha
pop
call
cmp
jle
imul
aaa
movsl
mov
stos
es
in
call
push
ja
adc
sub
js
enter
rcll
mov
pop
out
dec
push
mov
aas
push
and
insl
lret
mov
shll
mov
fstpt
fcmovnbe
mov
popa
popl
jae
pop
mov
pop
int3
pop
cmp
cmp
mov
les
inc
mov
add
repz
sub
and
nop
mov
and
jbe
adc
add
xchg
dec
test
push
inc
fdivrs
inc
xor
mov
out
mov
push
shll
jp
test
or
decl
mov
mov
or
xchg
pop
mov
sub
arpl
iret
dec
xchg
or
pop
nop
pop
xchg
add
test
add
ret
jl
and
ljmp
neg
movsl
cmp
outsl
jecxz
hlt
jmp
loop
inc
adc
mov
popf
lods
or
pop
adc
ja
adc
pop
into
mov
mov
outsb
lret
mov
aaa
jo
cmc
mov
inc
mov
pop
sbb
sub
xor
xor
inc
leave
mov
icebp
cmpsl
xor
sti
push
mov
std
out
outsb
ret
xchg
shll
adcb
or
mov
xchg
test
and
cmc
shlb
loopne
push
lahf
jne
incb
push
rcll
scas
outsl
das
inc
add
cmpsb
adcb
jg
and
mov
addb
cwtl
rcrb
call
ror
pop
lods
mov
sbb
jge
pusha
movsb
aaa
aam
jnp
push
ret
js
cmp
adc
out
xchg
add
ja
dec
lock
push
cmp
xchg
sti
push
outsl
cld
push
call
lds
mov
xchg
jnp
ja
fidivrl
in
ja
fistpl
or
xor
iret
jl
add
xchg
lods
xchg
mov
subb
xchg
mov
scas
adc
sbb
xlat
push
sub
mov
movsb
enter
pop
testb
addr16
movsb
and
mov
mov
jle
push
out
xchg
sti
popa
in
insl
into
ficoms
sbb
scas
jmp
cmc
xchg
fdivrs
out
and
popa
lods
subl
pop
fcomps
or
inc
jp
inc
inc
arpl
dec
and
pop
ja
test
addr16
push
mov
xor
arpl
into
push
inc
icebp
mov
dec
adc
adc
mov
icebp
ret
or
and
mov
loopne
or
imul
push
fistps
sub
push
xor
stos
xchg
dec
pusha
or
xchg
mov
nop
mov
scas
push
mov
add
bsr
or
aas
jns
adc
lds
shl
ljmp
lds
hlt
das
or
dec
es
sbbl
mov
arpl
mov
sbb
sbb
xlat
fnsave
mov
gs
rcl
inc
sbb
mov
leave
sbb
and
or
ss
mov
cmpsl
jno
pop
xchg
pushf
xchg
daa
push
call
push
cmp
adc
imul
dec
ljmp
add
sbb
aas
pcmpgtb
fildl
mov
mov
roll
xor
cld
push
push
add
lret
jl
iret
jns
or
pop
das
pushl
dec
pop
xor
xchg
lock
inc
mov
cmpsl
stc
loop
jns
xchg
in
iret
sarl
enter
push
or
jnp
jns
pop
mov
inc
test
faddp
jge
push
dec
push
mov
xor
lret
xor
ja
mov
cmc
mov
int3
add
insb
inc
jae
inc
nop
std
cli
sbb
arpl
sbb
xchg
scas
mov
std
xor
inc
adc
lret
or
sub
sbb
int3
lods
fs
repz
iret
scas
ret
aas
clc
mov
sub
scas
inc
mov
rorb
mov
or
mov
cli
or
sbb
and
pop
xchg
in
pop
lret
test
sub
fidivl
dec
dec
mov
daa
push
mov
and
cmpsl
pop
xor
test
movsb
daa
push
popa
dec
mov
rclb
repnz
sub
and
or
adc
fwait
lret
mov
mov
cmp
xchg
stos
jp
jl
sbb
lock
mov
repnz
out
mov
es
loop
or
adc
fnsave
data16
jl
jae
mov
imul
or
jne
pop
stos
xor
stos
sub
mov
call
clc
shll
mov
fisttpl
iret
mov
dec
dec
movsl
ja
sub
mov
dec
jl
fisttpl
jnp
mov
jns
push
cmp
gs
scas
mov
sarb
xor
inc
sub
aad
dec
lret
orb
sub
sbb
enter
xchg
imul
loop
pushf
dec
jmp
push
fistpl
in
cmpl
xchg
adc
in
push
push
cmp
in
fwait
dec
mov
xchg
loop
xor
cli
push
mov
cwtl
jp
adc
ss
insb
ss
mov
cmp
jne
inc
fcmove
in
mull
repnz
es
mov
repnz
dec
mov
lret
sbb
mov
fdivrs
adc
inc
leave
dec
test
lcall
jbe
sahf
jae
lods
mov
mov
jno
pop
cltd
jle
movsb
inc
push
loop
xchg
pop
aam
xchg
hlt
sub
subb
jp
shlb
repnz
lods
outsb
test
jl
mov
lock
rolb
add
icebp
andl
sahf
add
mov
sahf
xchg
setle
rclb
mov
out
outsb
fildll
js
push
ret
xchg
inc
push
negl
xchg
mov
lret
dec
sub
cs
pop
cmpsl
pop
jecxz
cs
sbb
rolb
mov
test
or
mov
mov
cmp
fistpll
inc
mov
gs
lock
jl
les
mov
rcrb
dec
inc
shll
push
scas
mov
scas
cmp
stc
jecxz
jecxz
xchg
in
xchg
pusha
aam
add
jp
ret
mov
add
jae
adc
lret
ljmp
gs
repz
dec
aaa
popf
add
sub
lret
cs
push
mov
pusha
leave
ffreep
lahf
pusha
test
pop
sahf
stos
aam
or
fidivl
or
les
mov
pop
flds
leave
repz
add
cmp
cmc
out
loopne,pt
mov
data16
shrl
or
mov
xor
or
mov
in
adc
fwait
scas
mov
out
ficomps
in
mull
stos
mov
iret
imul
into
adc
inc
inc
push
add
xlat
std
adc
and
popa
mov
mov
test
jo
in
adc
out
jl
mov
out
sbb
lcall
dec
dec
fdivrs
jae
jnp
xor
js
test
jno
sub
add
jg
cs
dec
push
pop
or
adc
add
mov
pop
sar
clc
jmp
repnz
push
imul
rcl
xor
xchg
push
pop
lea
outsl
dec
mov
aaa
sbb
lock
mov
pop
gs
xor
or
imul
dec
fptan
adc
adc
push
stc
pop
dec
dec
mov
jns
stos
mov
cmpsl
mov
call
sar
daa
imul
jge
and
xchg
sahf
fimuls
enter
mov
jecxz
dec
fsubs
pushl
pusha
in
push
lret
jecxz
sub
lods
cwtl
sub
pop
xchg
xor
push
adc
movsl
cmp
ss
shrb
xchg
int3
dec
adc
aaa
mov
or
sbb
and
icebp
xchg
mov
bound
sub
xchg
push
cmpsb
jp
xchg
jbe
mov
sahf
or
xor
test
cmp
push
les
adc
dec
out
in
adc
push
loop
enter
aad
mov
sbb
inc
sub
filds
and
cltd
pusha
cmp
inc
adc
jge
mov
inc
iret
mov
in
pop
pushf
nop
ret
xchg
mov
cwtl
fwait
data16
shll
lds
cmpsl
mov
jae
loope
inc
jmp
jb
mov
fdivrs
mov
js
dec
mov
stos
mov
lds
mov
jo
aas
pusha
inc
mov
gs
daa
rcrl
jmp
sahf
int
cmp
arpl
sub
jp
add
lahf
fisttps
pop
inc
push
xor
add
fisttpl
sub
mov
pop
xor
ret
cld
cld
add
push
cwtl
sbb
push
cwtl
ficoms
mov
sub
mov
lret
lret
adc
addr16
and
push
fisttpl
jno
mov
cmp
fisttpll
ds
inc
sub
xor
pop
arpl
and
mov
fwait
mov
xchg
int3
movsl
sub
ret
mov
or
dec
inc
jno
cld
sbb
mov
jb
movsb
pop
and
test
jo
scas
add
cli
sub
loope
hlt
pop
daa
notb
in
aam
or
fsubr
xchg
and
mov
out
into
ficoml
addr16
add
pushf
push
jp
sbb
or
loop
lods
cmp
push
mov
xlat
mov
cmp
int3
sahf
and
or
inc
nop
pop
lods
inc
dec
or
cmpb
int
pop
mov
push
or
test
jecxz
mov
out
loopne
push
cld
mov
cs
stc
test
popa
adc
cmpsb
loope
ja
jno
lds
jmp
test
xor
dec
es
push
mov
test
dec
movl
push
daa
iret
loope
mov
idivl
shll
cwtl
cwtl
push
dec
xchg
pop
fcmovbe
stos
lea
pop
test
sub
repnz
mov
imul
adc
mov
aad
lods
push
dec
rcrl
mov
jg
fadds
jnp
das
std
arpl
inc
ficomps
out
rcr
js
or
scas
sub
push
not
lahf
les
mov
inc
ret
stos
mov
vmread
jge
cmp
test
jecxz
push
jecxz
jecxz
inc
std
ja
insl
pop
pop
fdivp
xchg
mov
xchg
mov
jns
lret
loop
daa
adc
or
nop
imul
orb
mov
fisttpl
sbb
pop
xchg
pop
stc
mov
loope
jns
cmp
lcall
aad
pusha
sbb
sub
std
gs
into
arpl
push
sbb
aaa
sbb
js
mov
jmp
xlat
mov
mov
lret
ss
push
mull
repnz
pop
jmp
mov
cmc
fldl
mov
push
add
pop
outsb
fsub
pushf
xchg
es
or
lods
adc
lods
cwtl
pop
cld
and
xchg
push
pop
sbb
push
xchg
pop
cmp
dec
pop
out
cli
imul
dec
inc
cmp
and
ds
mov
push
push
sti
cwtl
insl
mov
and
stos
xor
mov
mov
out
add
mov
rorl
cltd
push
adc
jg
insb
dec
xorb
mov
jne
pop
sub
pushf
cmp
ret
clc
mov
push
in
mov
push
std
inc
inc
test
xor
xchg
leave
outsl
adc
mov
push
popf
push
push
push
test
repnz
cmpsb
test
jmp
fwait
aam
in
out
xchg
cli
xchg
sbb
inc
mov
lahf
mov
inc
scas
push
pop
sti
or
mov
push
in
xchg
leave
xor
dec
clc
xchg
push
fs
loop
lea
insb
jmp
push
mov
mov
imul
add
jecxz
insb
add
gs
dec
fists
sbb
ds
frstor
or
into
push
adc
ja
xchg
ljmp
inc
cmp
js
ret
rcpps
mov
mov
jns
cmp
repnz
lahf
std
fisttps
int3
inc
cwtl
bound
push
push
in
lret
decl
js
add
mov
push
mov
int3
aad
or
pop
xor
fs
adc
xlat
adc
push
shlb
mov
cmpsb
sbb
and
mov
stos
add
or
sub
repnz
iret
outsb
cltd
adcl
or
mov
cltd
cltd
add
xor
dec
aam
fistps
stos
ja
jecxz
push
sub
push
xor
in
ja
ljmp
xchg
mov
mov
shll
push
jo
cmpsl
repz
mov
cmc
fidivs
test
or
mov
mov
mov
cmp
shlb
mov
or
or
scas
iret
jo
mov
jnp
mov
pop
movl
int
pop
scas
push
or
cmpsb
dec
scas
popa
imul
pushf
enter
add
cmpsl
sub
mov
jle
xor
aam
leave
and
cli
jp
xchg
fnstsw
sarl
fdivrl
add
sbb
push
push
pop
sbb
adc
sub
lods
call
sub
mov
and
sub
pusha
and
jbe
dec
push
xor
dec
lahf
pop
scas
das
xchg
test
mov
lahf
popf
lds
ret
and
mov
dec
ds
mov
jg
aaa
add
cmp
int3
mov
adc
insl
mov
test
cmp
inc
loop
in
lret
ja
mov
cmpsl
sbb
pop
and
cmp
and
pop
push
pusha
sbb
adcb
push
dec
cltd
ret
fs
in
arpl
dec
sbb
xchg
pushl
mov
imul
out
lock
or
outsl
jbe
xor
pushf
mov
int
inc
add
xchg
ret
pop
mov
push
pop
and
pusha
jo
mov
cmpsl
jo
pop
popa
pop
and
pusha
insl
or
push
outsb
mov
lahf
mov
or
sub
jo
lcall
lret
inc
xchg
pop
xchg
aad
adc
adc
mov
iret
adc
mov
mull
inc
add
sbb
dec
jg
push
ss
sbb
adc
push
sbb
mov
push
inc
pusha
adc
pop
push
jne
sub
inc
imul
sarb
std
push
lods
add
nop
mov
icebp
jmp
lea
sub
mov
ja
xchg
daa
cmp
cmp
adc
fidivrl
imul
mov
popf
outsl
jb
xor
and
lret
roll
cs
leave
mov
push
or
lret
push
jecxz
adc
or
lcall
popa
sahf
push
adc
outsl
push
test
bound
jnp
out
ret
or
mov
pop
std
pop
mov
push
mov
lods
popf
fcomps
jo
lahf
inc
mov
sbb
fwait
insl
mov
push
mov
shr
fwait
pop
aam
mov
push
xchg
fists
jmp
pop
aas
pop
pop
mov
sti
mov
dec
pop
xor
push
loop
ss
pop
outsl
scas
push
push
stos
or
dec
pop
mov
jno
shrl
sub
scas
mov
mov
in
jp
test
sahf
enter
jns
pop
fs
aad
insb
sbb
push
xchg
addr16
pop
out
fsubs
outsb
adc
sbb
cltd
ja
out
pop
imul
test
iret
cmpsl
push
add
sub
jns
mov
jge
loopne
jp
lcall
aas
mov
mov
outsb
icebp
push
cmp
add
scas
lds
arpl
adc
xchg
jg
into
jl
test
pop
scas
fidivrs
add
iret
sub
xor
lret
jl
push
cmp
cmpsl
sbb
data16
push
fmulp
mov
sub
inc
push
cmp
jo
xlat
xlat
shl
shlb
adc
lds
ret
xchg
dec
daa
pop
add
call
incl
inc
and
push
js
sub
push
pop
aad
jle
push
jns
add
add
push
push
adc
ss
rcr
inc
fisubrl
add
dec
mov
aaa
mov
bound
mov
fucomi
adc
jns
sbb
arpl
inc
in
xor
adc
test
xor
xchg
mov
insb
cmpsb
cmpb
push
arpl
or
cmp
stos
lret
pop
dec
jnp
scas
stc
iret
out
and
lea
loopne
or
mov
scas
mov
imul
call
inc
in
mov
sahf
xchg
fldz
fs
mov
lock
iret
mov
cli
sti
out
stos
or
inc
jecxz
push
shl
fcompp
mov
jg
pop
ss
xor
not
cmpb
inc
pop
cmp
xor
xchg
rol
adc
mov
hlt
push
insb
cmp
dec
and
push
xchg
cmp
mov
pop
xchg
or
adc
xchg
mov
call
add
jae
rclb
mov
mov
adc
ss
pop
add
vmptrld
or
in
push
in
dec
movsl
mov
adc
push
popf
jne
scas
ljmp
iret
mov
cmpsl
adc
adc
sub
push
mov
shrl
mov
adc
mov
and
inc
sbb
loopne
jle
xchg
pop
icebp
pop
cmp
rcrb
and
hlt
test
sbb
jo
rcl
add
inc
imul
ljmp
shr
pop
xlat
push
dec
out
fnstcw
in
push
mov
dec
cltd
sub
fsts
mov
pshufw
inc
outsl
mov
stc
scas
xor
sub
xlat
mov
mov
adcl
outsl
adc
daa
call
mov
and
xor
xchg
jno
inc
rclb
call
and
add
nop
data16
xor
push
push
ljmp
stc
mov
pushf
divb
repz
inc
push
lds
jbe
and
add
fistl
inc
cmova
lds
mov
jno
push
icebp
clc
pop
jg
mov
ror
ds
test
daa
mov
jmp
std
mov
sbb
adc
inc
call
xor
int
test
insb
or
fs
mov
loope
insl
out
rcrl
xchg
fwait
iret
jb
lahf
push
test
jne
fmull
push
test
add
sti
mov
test
dec
and
add
inc
mov
sti
aad
push
repz
fisubrl
push
repnz
popa
loop
jb
rcrb
push
js
adc
pop
inc
xchg
push
mov
fndisi(8087
xchg
add
clc
inc
push
dec
mov
fsubrs
dec
fisttps
push
add
xorl
jbe
pop
add
mov
inc
mov
dec
sbb
push
sbb
mov
subl
pop
out
push
repz
lret
jne
mov
sbb
mov
sub
sub
sub
sub
ljmp
inc
mov
ljmp
mov
adc
mov
pop
or
aas
mov
xchg
mov
push
ret
jl
cmp
pop
pop
ss
sbb
fucomi
sub
xchg
call
xchg
push
shlb
pusha
insl
mov
fwait
mov
add
out
pushf
pop
mov
or
imul
xor
sbb
in
sbb
mov
mov
pop
xor
pop
pop
inc
ret
push
mov
leave
jecxz
out
push
or
sbb
fdivrl
pusha
sub
cwtl
imul
mov
pop
mov
add
stos
roll
adc
loopne
jecxz
ja
push
lds
mov
mov
shl
dec
mov
out
jb
xchg
pusha
push
repz
adc
inc
push
jle
fistps
xchg
adc
out
pushf
xchg
xor
or
fisubs
mov
dec
cmpsb
outsb
cmp
pop
xor
stos
xchg
fidivrs
cmp
nop
cmp
das
int
cltd
dec
cltd
cmp
and
and
lods
mov
test
in
sbb
addr16
out
aas
mov
inc
mov
gs
mov
aaa
and
loop
jle
pop
and
movl
repz
imul
ret
iret
inc
or
sub
push
mov
stos
ficompl
in
pop
test
movsl
loopne
rcl
sub
dec
dec
sbb
xchg
dec
mov
lret
xchg
aas
cmp
cltd
lcall
push
ret
stos
or
loope
jns
pop
scas
bound
push
push
movsl
pop
imul
call
and
push
ret
mov
xchg
pop
jae
xchg
jg
ss
mov
arpl
lods
loop
adc
mov
inc
xchg
rcl
call
mov
ja
out
aaa
jp
xlat
mov
in
adc
subb
sub
sbb
orb
dec
fwait
cmovns
iret
pop
sub
lea
add
dec
mov
sub
sbbl
iret
xchg
and
decl
ja
lds
in
cmp
add
or
or
imul
sub
cld
adc
mov
mov
inc
cld
jecxz
out
bound
fmull
xor
inc
push
pop
mov
mov
std
mov
lds
cmp
jns
rorl
mov
inc
lret
inc
xor
cmc
hlt
fldenv
jge
shrb
fistps
in
imul
and
notb
xor
mov
js
push
mov
dec
sti
and
cs
call
xor
pop
fidivl
callw
adc
jp
push
js
push
idiv
ficoml
pop
arpl
push
inc
das
inc
mov
ret
or
gs
dec
ret
clc
mov
aaa
add
or
aas
cltd
pop
pop
sbb
lret
push
xor
jmp
mov
std
add
push
adc
shrl
dec
lahf
lret
jge
mov
call
or
das
fildll
mov
jmp
mull
dec
movsb
jmp
pop
into
fwait
xchg
int3
mov
das
aas
out
lcall
pop
sbb
pushl
push
lcall
and
fists
popf
sub
xor
pop
fdivrs
int3
and
js
pop
lock
pop
ljmp
jne
jl
add
or
xchg
and
fsubrl
push
fldenv
sbb
insb
bound
push
push
rorl
enter
inc
fbstp
adc
mov
cmp
adc
mov
sarb
movsb
out
ljmp
lret
dec
adc
dec
insb
inc
push
add
inc
aam
ret
jb
and
cs
pop
mov
mov
mov
add
in
cmp
mov
ret
cld
inc
push
xchg
scas
sbb
arpl
and
adc
pop
mov
sahf
enter
mov
dec
push
div
jg
cwtl
int
cmp
jne
inc
fwait
push
mov
adc
or
add
imul
push
jns
out
lahf
and
cmpb
fdivrp
dec
pushf
add
pop
xchg
outsb
mov
or
test
je
setne
mov
and
push
xchg
cmpsl
sahf
cld
dec
imulb
fisttpll
negl
xchg
jmp
scas
xor
js
pusha
push
in
mov
imul
lods
in
data16
cmp
sbb
mov
lock
repnz
pusha
jge
out
div
loopne
les
jle
mov
dec
xchg
repz
stc
cmp
aaa
lods
out
pop
dec
mov
in
sub
cmpsb
xor
fcoml
inc
push
mov
ss
xchg
outsl
sub
cmp
in
push
loope
leave
lret
mov
fchs
stos
in
loopne
pop
or
fwait
jo
sbb
outsb
push
mov
dec
sbb
sbb
dec
jns
jge
push
in
add
in
and
int
mov
jp
fisubrs
ficomps
jmp
ja
nop
lcall
push
sbb
cs
adc
xchg
jno
aaa
cmp
push
addr16
data16
add
dec
jmp
test
dec
add
or
loop
xchg
sbb
mov
cmp
adc
cwtl
lahf
out
dec
inc
sbb
daa
adc
jecxz
aas
aaa
movsb
add
mov
xchg
xchg
push
or
pushw
ja
push
les
mov
rorb
mul
outsb
movsl
push
xchg
xor
pop
lock
jg
int3
stos
lret
push
cmp
cwtl
imul
addr16
movsb
arpl
rcr
xchg
outsb
out
out
cmp
gs
or
dec
rorl
adc
gs
lret
std
js
cmp
insb
cs
loopne
jecxz
lods
or
jnp
pop
in
out
arpl
subb
jl
daa
push
add
add
add
test
pop
daa
xchg
pop
les
sahf
sub
sar
push
mov
ret
in
push
fcmove
outsb
mov
loopne
or
cmp
sbb
xchg
push
gs
cmc
cs
or
add
sbb
jns
fwait
mov
ljmp
call
xchg
into
sbb
mov
test
out
int
ja
outsb
add
dec
insl
xchg
call
cmp
jbe
cmp
cli
clc
test
or
scas
add
push
arpl
out
scas
dec
xchg
lcall
mov
jo
scas
pop
lcall
lds
jne
nop
fistps
lahf
fdivl
inc
xor
loopne
addr16
jg
fnstcw
testl
pop
scas
sbb
jnp
pop
mov
rolb
das
add
orb
rcrl
cmpsb
xlat
int
pop
fdivrp
xor
add
add
inc
lea
xor
and
or
icebp
sub
gs
push
scas
scas
jecxz
push
pushf
cli
pop
mov
mov
xchg
push
mov
daa
push
fdivl
push
mov
stos
xchg
sbb
test
or
pop
insb
cld
mov
out
xchg
xlat
push
xchg
push
push
and
daa
pop
fbld
lret
mov
or
stos
aad
or
jp
inc
dec
stos
stc
jecxz,pt
mov
cmp
iret
sbb
cmp
int3
xchg
fwait
loopne
in
xchg
je
out
xchg
lock
lock
ds
gs
in
mov
fs
data16
mov
addr16
pop
psllw
pop
sub
dec
cmp
ljmp
sbb
test
dec
popf
dec
nop
xchg
mov
xor
out
mov
out
add
shrl
jg
sti
dec
mov
shrb
sub
sbb
fwait
fdivs
mov
fwait
outsb
or
dec
nop
adc
sbb
negl
push
fwait
sbb
ljmp
arpl
hlt
ss
jp
sub
aam
mov
add
mov
xorl
sbb
mov
scas
dec
cld
push
sbb
adc
mov
add
jnp
imul
out
push
nop
lret
imul
mov
dec
testb
imul
out
fs
out
mov
push
leave
sbbl
in
icebp
push
mov
movsb
scas
imul
inc
lods
jl
test
and
sub
and
or
popf
lds
jp
or
arpl
xor
lcall
pop
inc
imul
jge
pop
and
inc
mov
lcall
clc
enter
js
cmpsl
call
or
ret
stc
push
sbb
lea
sahf
dec
scas
rcll
imulb
lea
lock
rorb
or
imul
xor
imul
and
inc
pop
push
incl
ret
add
int3
xor
not
sub
lods
pop
ds
sbb
fildll
add
loope
mov
cmp
into
clc
adc
cltd
or
cmp
inc
lcall
mov
or
mov
js
mov
pop
lcall
xlat
in
mull
xchg
and
jmp
mov
add
push
push
and
fwait
dec
mov
sahf
popl
and
mov
add
xchg
xor
mov
add
pop
mov
mov
mov
imul
notb
dec
adc
xchg
sub
mov
or
pop
repnz
test
mov
xchg
int3
dec
cli
arpl
mov
dec
lahf
test
popa
stc
push
fdivr
insl
sub
jbe
and
inc
fidivs
mov
and
inc
call
mov
loope
int3
jle
test
mov
inc
cld
fbld
loop
xchg
enter
pushf
and
fidivl
cwtl
cwtl
xchg
and
and
out
stos
jae
jae
imul
jnp
nop
push
xchg
xchg
jge
inc
into
inc
inc
scas
stos
fmul
icebp
dec
or
test
icebp
mov
xchg
and
test
pop
jge
fstpl
es
mov
xchg
push
std
je
dec
mov
push
bnd
xorb
cmp
sub
in
or
mov
test
decb
mov
mov
adc
sahf
add
and
and
xor
push
jae
xor
iret
and
push
cltd
and
jle
mov
sahf
sbb
adc
xlat
mov
movsl
fbstp
sahf
testb
cmpsb
pop
orb
iret
ss
in
dec
das
mull
ja
shr
xchg
sbb
inc
bound
mov
cmpl
mov
lahf
mulb
loopne
ss
mov
adc
or
orb
pop
fwait
pop
popf
outsl
shrb
inc
lds
inc
jns
mov
sbb
lods
and
push
xchg
sub
pop
sti
sbb
inc
mov
lods
movsb
cmp
out
add
pop
mov
leave
jmp
jne
xorl
dec
xchg
lock
fcompl
or
sti
mov
jecxz
fmulp
je
adc
add
mov
mov
repz
shlb
add
push
push
or
movsb
call
dec
jl
pop
xchg
sub
sbb
mov
jbe
push
ret
ret
daa
out
xchg
xchg
sbb
mov
out
gs
push
xchg
ds
iret
add
or
xchg
imul
add
test
into
inc
mov
int
pushf
fnstcw
sub
cld
fadds
cmpsb
ret
pop
sub
jl
mov
inc
xor
push
inc
cwtl
imul
xchg
xor
mov
fistpl
stos
inc
pop
or
xchg
mov
ljmp
dec
adc
cmp
jmp
bswap
insb
jns
enter
xor
rolb
lret
mov
mov
sub
cmpsl
pop
push
lods
shlb
dec
jle
ljmp
call
adc
push
shll
popa
mov
xchg
fimull
dec
cmp
adc
pop
xor
loopne
in
inc
pushl
pusha
ret
mov
mov
push
sub
inc
mov
call
mov
mov
lea
dec
rorb
aam
scas
shll
mov
mov
mov
dec
jno
add
repnz
cmp
and
loopne
ror
or
lods
cld
xchg
cmp
cmp
ret
les
out
xchg
push
pushf
rorl
mov
jle
xor
jge
fsts
jns
push
and
arpl
pop
je
jb
mov
xlat
lret
test
in
lods
fsubr
ja
popf
mov
arpl
fucomip
lea
ss
cltd
push
testl
and
jl
mov
pop
xor
cmc
fs
jae
sbb
jne
jg
repz
sbb
push
rcll
insl
dec
out
or
fmull
or
add
mov
sbb
mov
into
fmull
outsb
and
inc
dec
repz
movsb
movzbl
xchg
jmp
bound
and
mov
pop
filds
and
mov
pushl
data16
jecxz
dec
ljmp
ljmp
adc
pusha
mov
sar
mov
dec
in
adc
xchg
push
sub
aam
lods
ljmp
mov
sbb
push
inc
xor
dec
mov
lcall
dec
popf
push
xor
sub
mov
hlt
inc
add
sub
push
sbb
cmp
repnz
lea
sub
mov
sub
jb
cmp
imull
dec
xorb
jae
rorb
or
sub
pop
sbb
movb
insb
popa
clc
pop
sahf
pusha
dec
mov
mov
int
aaa
movsl
pusha
shlb
jp
in
mov
pop
and
fistl
add
sti
jecxz
jbe
repnz
es
repz
pop
mov
push
pop
lds
xchg
sub
cmp
fstp
mov
push
xor
ficompl
jno
sbbb
cmp
xor
xchg
xor
das
xchg
lahf
pop
repnz
xchg
loopne
mov
jbe
sahf
pusha
pusha
inc
fdivl
rcrl
jae
mov
xor
inc
data16
add
jae
xor
fs
or
stc
jbe
add
mov
add
jmp
inc
push
mov
push
pop
into
inc
test
cmpsl
xor
or
mov
idivb
bound
jecxz
ss
cmp
mov
or
xchg
das
pop
imul
call
jg
pop
dec
mov
fimull
out
push
sbb
jo
cmc
push
faddl
pop
lret
lods
loop
mov
pop
add
insb
pop
cli
xor
push
nop
ds
fwait
gs
mov
ljmp
mov
iret
mov
call
das
pop
push
mov
out
cmove
sarb
aad
lods
add
adc
mov
cs
mov
loopne
push
sbbb
cmp
add
xchg
repnz
fcomi
mov
test
cmp
test
and
stc
iret
add
inc
jmp
mov
les
mov
out
nop
dec
mov
test
dec
jmp
out
jg
sbb
inc
andl
imul
mov
pop
mov
imul
sahf
jecxz
mov
imul
xor
lahf
mov
xchg
data16
aam
jp
or
mov
mov
push
fcmovnu
popa
repnz
pop
mov
pop
sub
xor
stc
adc
jg
jmp
mov
sbb
push
fwait
je
or
cmp
lcall
data16
addl
cmp
mov
lret
add
in
aad
sub
insb
jl
ja
pop
bound
add
mov
mov
imul
mov
mov
mov
xor
out
or
fwait
push
sbb
mov
cld
shlb
fcmovne
loop
mov
int3
xchg
xor
or
xchg
inc
arpl
lods
push
or
pop
scas
push
pop
inc
push
dec
rcrl
test
dec
add
xor
lcall
add
pop
xchg
mov
rcll
bound
or
or
enter
loop
sub
pop
in
jne
aad
cmp
out
ficoml
mov
lock
or
test
int3
xchg
iret
inc
or
fimull
test
int3
push
or
adc
mov
pop
dec
cmp
mov
or
sbb
xor
stos
mov
cmp
jne
push
icebp
sbb
repnz
idivb
mov
push
push
xchg
imul
sub
xchg
pusha
mov
cmp
imul
clc
jg
sbb
push
outsb
les
leave
dec
jb
arpl
lcall
xchg
push
fnsave
mov
mov
add
add
pushf
xlat
adc
das
ss
int
jl
xchg
sbb
sub
loope
dec
jne
mov
movsb
sub
cmpsb
jno
cmpsb
lock
cwtl
sbb
gs
sub
cmpsl
jmp
push
mov
aad
fsubrl
xchg
sbb
fsubr
dec
cli
idivb
sub
adcb
adcl
mov
stc
clc
pusha
jno
stos
ret
mov
push
jmp
inc
adc
aas
in
stos
and
imul
jbe
lcall
ss
or
jne
and
xchg
imul
ret
cmp
mov
lods
pop
fsubr
scas
cmp
push
pusha
pop
fs
ffreep
les
xchg
jne
and
cli
sub
xchg
jecxz
xor
inc
testl
fldcw
cli
sbb
mov
mov
inc
arpl
mov
inc
and
inc
mov
adc
xchg
shrb
mov
pop
jo
das
lret
jle
mov
ret
and
jle
ret
lret
jno
push
sub
subb
popa
mov
out
call
dec
ror
pop
push
xchg
dec
jae
pop
nop
outsl
xor
fisttps
lea
push
cs
int3
xor
jg
loope
hlt
fs
adc
jns
adc
cmp
xor
push
push
je
inc
sub
and
es
loop
or
cmpsb
mov
shrb
sub
xor
cli
mov
hlt
movsl
in
andl
sarb
in
sahf
push
ja
xor
fstl
psubusw
mov
xchg
andb
pop
dec
into
or
dec
lods
sub
nop
hlt
push
fnstcw
xchg
mov
xchg
std
xchg
aam
insl
xor
in
xchg
popa
push
jb
jecxz
test
push
aad
mov
mov
loopne
addr16
adc
xchg
pop
jno
lret
pusha
mov
xchg
pusha
ret
cmp
addr16
jge
cmp
enter
stos
jecxz
mov
jns
jbe
and
out
imul
mov
das
xor
iret
fwait
mov
push
addr16
in
cmp
and
add
in
dec
mov
push
push
pusha
or
jle
jmp
or
sbb
loop
mov
xchg
push
mov
pop
mov
inc
out
loopne
or
js
dec
inc
sbb
jns
cmpsl
inc
mov
mov
pop
lea
les
mov
cmpsl
xor
out
jmp
icebp
or
push
loope
fldt
shlb
bound
push
sub
push
mov
mov
mov
pusha
adc
cmp
fistpl
xor
adc
sbb
cmp
dec
mov
cmpsl
filds
into
call
xchg
pop
or
icebp
out
lret
pop
and
cmp
stos
jp
faddl
pop
sbb
sub
jp
mov
cmp
shlb
xor
cltd
sbb
inc
or
in
int3
fistpll
ljmp
rolb
imull
jp
leave
pop
lds
in
ds
dec
rcrb
adc
xor
dec
xor
pushf
jmp
mov
dec
sbb
pop
das
sub
orl
sub
adcl
and
mov
adc
dec
mov
push
rcll
xchg
mov
dec
jp
aam
les
std
mov
sub
stos
or
inc
inc
pushf
jns
cmc
mov
mov
or
je
rol
mov
stos
add
and
out
jae
lcall
sub
lock
mov
sub
mov
and
das
hlt
xor
andl
cmp
scas
icebp
push
and
dec
jae
andnps
popf
adc
jl
push
add
mov
push
cwtl
mov
int3
and
fs
sbb
jne
xor
cmp
test
mov
insl
xor
int3
movsb
push
push
mov
outsb
nop
in
rclb
popf
out
pop
testb
insl
call
lea
or
fs
adc
stos
stc
jbe
int3
jmp
cmc
mov
xor
les
mov
aam
icebp
int
outsl
adc
in
xchg
mov
int
aad
hlt
int
rcr
and
push
mov
xor
push
arpl
and
and
sbb
push
out
jnp
jecxz
fsubrp
iret
pop
mov
inc
mov
inc
dec
lods
bound
jno
divb
jae
inc
add
sub
xchg
xor
push
inc
push
cld
push
dec
shlb
and
sub
fmull
lret
push
xor
xchg
inc
rcll
xor
mov
cmp
inc
inc
or
movsl
jbe
pop
test
or
sbb
jns
mov
outsl
sub
shrb
cmp
dec
cld
ds
int
dec
cli
cmc
movsb
cld
pushf
sub
add
call
pop
and
test
fildll
push
outsl
incl
rol
fwait
popl
ss
dec
xor
test
incb
cmc
inc
pop
dec
xlat
cmp
inc
shlb
add
iret
jae
lock
cs
hlt
and
out
cmc
dec
std
enter
fcomps
ja
xorl
pop
sbb
test
dec
xchg
daa
push
mov
leave
int
and
mov
nop
sbb
aad
lds
andb
icebp
mov
pop
cmpsb
mov
imul
jle
addr16
dec
jo
jns
xchg
insb
lea
fidivs
pop
push
outsl
divl
xor
rcl
call
push
jo
fnsave
test
test
adc
das
daa
adc
out
inc
aad
sbb
xor
rol
fstl
xor
pop
es
in
sbb
int
neg
aas
pop
xlat
sub
mov
cltd
dec
mov
dec
pop
movsb
int3
ja
bound
arpl
add
push
insl
pop
push
stos
nop
dec
into
mov
jl
xchg
pop
dec
jnp
mov
jmp
ret
xchg
in
inc
les
add
xor
push
pop
jmp
repnz
test
not
test
cmp
stos
cltd
into
jnp
in
ljmp
push
cmp
jo
mov
mov
jns
pop
adc
icebp
mov
or
mov
xchg
mov
xor
lock
out
inc
jae
jge
loopne
lcall
scas
sbb
jecxz
mov
xchg
sub
mov
cmp
add
stc
mov
les
repnz
sbb
cmp
scas
mov
xchg
mov
sbb
cwtl
mov
jl
or
and
sahf
into
fimull
out
push
rorb
jbe
lods
add
jg
dec
and
push
mov
jbe
scas
pop
in
in
cmc
fistpl
cmp
scas
push
xor
and
sahf
mov
inc
mov
cld
scas
daa
pop
call
aas
pop
es
in
pop
xlat
stc
mov
aas
sbb
fimull
push
in
sbb
inc
daa
outsb
inc
fistl
cmc
incl
ja
dec
xchg
inc
les
jle
push
stos
cmp
cmc
fcmovnu
ljmp
lods
sub
dec
jae
xor
jmp
clc
pop
imul
dec
inc
lahf
insb
into
xor
jp
jecxz
test
sub
inc
out
mov
or
and
push
bndstx
xchg
or
insb
jnp
inc
pop
repz
cwtl
repnz
jns
dec
cmp
jecxz
inc
shl
out
xor
jg
fldl
inc
cmp
pop
loopne
loope
loop
and
mov
movsb
or
xor
dec
sub
xchg
cmpsb
add
push
jl
nop
add
testl
and
test
sub
orb
loope
pop
add
loop
jmp
inc
loope
sub
or
cmp
test
es
mov
adc
insb
pop
add
xor
test
cmp
arpl
fcoml
mov
xor
sbb
cmp
dec
test
or
stc
xchg
enter
mov
fsubrp
test
sbb
rcll
sbb
inc
sbb
mov
ljmp
pop
rcll
leave
pop
adc
jmp
jp
out
push
dec
pop
ficoml
shrb
inc
jo
push
push
lret
js
cwtl
imul
mov
cltd
mov
movsb
fs
jae
cmp
push
nop
shrl
xchg
mov
xchg
xchg
sbb
push
addr16
fisubs
outsl
push
insl
mov
xor
lahf
inc
pushf
xor
mov
test
pop
xchg
xlat
mov
pop
dec
push
xchg
js
gs
or
xchg
cmp
mov
cmp
pop
in
mov
popa
js
mov
push
mov
iret
mov
and
arpl
repnz
adc
pusha
sbb
sbb
mov
pop
cs
push
mov
imul
xchg
aas
dec
push
add
sbb
push
inc
inc
into
dec
xchg
push
daa
shl
ret
push
inc
inc
jnp
jo
aas
sub
jl
add
mov
cmp
pop
testb
push
stc
lods
inc
sbb
cmpsl
out
enter
fsub
arpl
sub
stc
mov
or
arpl
gs
ret
xchg
shrb
inc
int3
push
shl
xchg
inc
out
mov
aaa
into
rcll
push
add
xlat
arpl
adc
jge
clc
test
std
dec
dec
push
mov
or
bound
jmp
ljmp
in
ret
movsb
leave
xchg
cmp
popf
mov
data16
testl
mov
jmp
popa
add
repz
lock
popa
or
add
fsubrl
mov
cmpsb
dec
jp
sbb
lret
aas
sahf
mov
add
pop
mov
out
push
in
or
push
rclb
loopne
jmp
and
or
cs
mov
adc
push
rorl
mov
add
xor
in
lret
jo
pushf
sub
setge
fisttpll
cltd
je
cmc
xor
dec
push
bound
imul
jle
push
call
rolb
or
pop
fcmovnb
cli
mov
cmpsb
add
ljmp
dec
push
sahf
jb
in
sub
pop
sub
ret
in
jge
mov
ret
cld
scas
int
push
xchg
xor
push
mov
xchg
hlt
adc
adc
pop
fstp
sbb
xor
loop
cs
out
loopne
cmp
gs
jle
scas
cmc
sub
or
dec
fidivl
or
mov
pushl
cmp
sahf
adcl
les
movsb
lock
aad
lret
push
movsl
das
inc
dec
sbb
shr
and
push
fdivrl
addl
ja
pop
cmp
jo
jnp
adc
aam
push
out
loope
push
outsw
xor
or
mov
lret
mov
cmpsl
mov
lods
push
or
in
xor
cli
push
jecxz
shr
xchg
repnz
scas
out
fiaddl
dec
add
cmpsl
xor
inc
mov
mov
stos
or
leave
mov
pusha
iret
and
stos
scas
stos
adc
cld
imull
cmp
stc
and
jbe
frstor
xor
sub
leave
xchg
andb
inc
push
leave
fldcw
shll
and
imul
jg
and
cmpsl
subl
loop
mov
lea
xor
jge
push
jl
cs
push
push
insb
jg
xor
cmp
adc
mov
lcall
mov
cld
mov
mov
int
aas
xor
insb
sarb
add
jae
mov
data16
xor
and
or
xlat
ljmp
lcall
mov
lcall
roll
cmpsb
out
mov
jbe
sub
outsl
sub
xchg
xor
movsl
loopnew
or
lret
test
leave
sarl
mov
push
stc
test
ret
cmpsb
arpl
and
pushf
or
das
loope
shlb
lock
movsb
fcoms
mov
repz
fs
jbe
lgs
std
xchg
mov
xchg
xor
aas
mov
push
and
cld
popa
pop
mov
xor
sbb
popf
out
mov
mov
push
test
std
pop
add
nop
adc
sbb
mov
lds
es
sub
sahf
dec
sbb
or
or
ljmp
cmc
lcall
lods
cs
cmp
sbb
add
rclb
mov
and
dec
cmpsb
and
scas
adc
into
push
test
into
mov
stos
pop
inc
lock
or
fs
mov
xchg
iret
xor
stos
icebp
push
aaa
aad
testb
lret
repnz
iret
xor
xchg
jg
pop
mov
mov
inc
lock
iret
lret
mov
cmp
imul
jecxz
pop
fucom
mov
inc
sahf
clc
push
xchg
sub
pop
test
lahf
outsb
mov
ljmp
jecxz
or
mov
sti
scas
fistl
popa
test
fdivr
mov
mov
or
ss
mov
ficompl
xchg
iret
arpl
je
push
sbb
xchg
add
push
and
sub
push
lds
cld
neg
dec
in
adc
lods
inc
arpl
xor
cmpsb
cmpsl
roll
pop
js
jnp
ss
sub
or
add
jns
les
les
dec
out
lods
jne
and
jge
popa
jo
ja
daa
add
lret
inc
inc
mov
dec
sub
sbb
mov
mov
add
mov
xor
loopne
cmpsb
and
push
cwtl
push
xchg
dec
das
and
insb
xor
mov
push
jecxz
mov
adc
cmpsb
sbb
sub
pop
movsb
lret
cmpsb
mov
jmp
fildl
aas
xchg
loop
insw
jg
out
adc
mov
sub
icebp
ljmp
je
lock
int3
in
cmp
adc
add
imul
stos
insl
push
in
mov
mov
mov
jae
int3
shl
lock
into
aam
jo
xchg
mov
push
inc
ljmp
test
sbb
test
inc
mov
fs
cmp
icebp
pop
pop
cltd
inc
mov
orb
add
adc
out
sub
ret
loop
fnsave
das
es
mov
lods
mulb
loop
xchg
dec
inc
jbe
xor
xchg
jne
in
add
outsb
jnp
cltd
xchg
push
int3
leave
mov
jns
loopne
loopne
rolb
aam
lret
inc
inc
movsb
inc
sub
cmp
aad
into
pop
shll
movsl
mov
xchg
push
cmp
call
mov
jmp
fs
inc
clc
addl
shrl
jb
lea
mov
ds
mov
sarl
jge
pushf
es
insl
adc
push
cmp
sbb
into
out
cmpsl
imull
inc
lods
adc
lcall
or
sub
mov
test
imul
adc
add
aaa
push
leave
fs
movsb
mov
cwtl
lret
xor
cmp
push
mov
mov
jge
adc
arpl
cmp
push
sarb
clc
xorb
jecxz
sahf
push
xor
adc
pusha
dec
sub
pop
pusha
and
enter
add
dec
ja
sbb
push
inc
and
jae
gs
movsl
test
mov
gs
imul
mov
mov
in
adc
xor
mov
mov
cmpsb
out
pop
jo
cmp
loopne
mov
roll
mov
lea
fimuls
jle
inc
mov
test
lods
fs
mov
pop
or
mov
cmpsl
pop
or
pop
fs
sbbl
xchg
mov
in
cli
mov
test
lods
les
sub
push
roll
lods
in
mov
sarl
out
push
mov
push
jno
enter
or
adc
adc
inc
pop
stc
mov
iret
jbe
pop
pushl
cmp
push
adc
dec
jl
fisttps
pop
pop
or
or
xchg
shll
insl
mov
or
jne
pop
mov
icebp
sub
sub
inc
mov
mov
pop
es
cmpb
std
cwtl
jo
cltd
push
inc
add
jl
fwait
rcrl
add
sbb
lods
aas
into
cli
push
mov
in
adc
jp
or
add
mov
cltd
inc
sbb
mov
add
and
lea
lahf
sti
leave
lods
pop
ficompl
ret
das
jl
enter
push
inc
adc
sbb
mov
xchg
gs
push
scas
sbb
add
gs
sti
inc
fldcw
mov
xchg
notb
in
or
adc
pop
push
dec
inc
fnstsw
stos
mov
or
sbb
daa
nop
and
mov
lret
add
out
sub
push
mov
repnz
mov
pop
aaa
or
idiv
fiadds
std
sahf
mov
icebp
mov
mov
iret
mov
cld
cmp
out
fnsetpm(287
adc
and
in
inc
fs
add
incb
mov
push
add
cld
mov
test
and
insb
sub
dec
mov
and
aam
dec
mov
and
outsl
adc
adc
leave
sbbb
push
adc
hlt
xor
in
sub
push
inc
cwtl
pop
dec
cmpsl
xor
mov
or
mov
lods
lret
sbb
cwtl
shrl
sbb
lods
pop
and
scas
mov
test
out
andb
adc
jns
fdivl
pop
insl
aaa
add
add
mov
jae
jp
lahf
xchg
cmp
orl
int3
movsl
adc
sub
frstor
movsb
imul
jle
sbb
mov
mov
pop
jb
push
jb
sub
push
shlb
scas
add
adc
xchg
add
xor
cs
imul
pusha
test
mov
loop
xor
add
add
jg
das
push
xor
push
ds
ror
jl
aad
xchg
imul
shrb
ss
pop
mov
fcompl
das
cmp
jb
ret
dec
xor
cmp
and
pusha
es
inc
ret
or
je
mov
mov
aas
hlt
shll
pop
inc
ss
lods
sub
divl
sub
inc
jb
dec
adc
jns
mov
cld
sbb
or
jge
xor
les
sub
cmp
add
xchg
sahf
int3
jp
xor
insb
idivl
fwait
mov
jg
xchg
sub
daa
pop
sbb
mov
jbe
sbb
or
adc
push
pop
mov
shrl
add
cmp
lods
and
ret
and
pop
inc
rorb
cmp
sub
icebp
enter
sbb
xchg
pop
fiaddl
and
fisttpll
cmp
test
sub
sbb
clc
jmp
push
sub
push
push
js
out
repnz
push
call
jmp
dec
lret
xlat
dec
xor
not
adc
sbb
ja
repz
xorb
jns
rcr
and
jae
dec
pop
lea
outsb
inc
mov
jmp
pop
arpl
lock
rclb
clc
fidivrl
xchg
test
inc
cmp
pop
jns
in
sub
clc
clc
fsubs
xor
mov
xchg
and
pop
jae
stos
loope
or
pop
fnsave
pop
jmp
es
push
nop
std
aaa
ja
mov
pop
and
fwait
mov
mov
xchg
fisttps
test
les
or
je
aad
lcall
std
mov
jne
aas
sbb
push
or
lock
push
ja
int
and
inc
inc
jg
test
jbe
jle,pn
jp
lods
pop
rcrl
lcall
xchg
jl
xchg
mov
inc
inc
adc
call
xor
sub
pop
pop
push
add
frstor
cmp
push
shr
pusha
sub
dec
stc
push
rclb
gs
mov
arpl
dec
rorb
xchg
jo
cmpsl
cld
sarb
jmp
les
stc
je
cmp
out
xor
scas
fwait
dec
jmp
jmp
dec
popf
test
stc
lods
pavgb
fisubrl
jns
mov
sub
cld
or
mov
cmp
out
or
sub
pop
mov
add
push
cmp
outsl
jae
or
dec
inc
mov
out
xchg
dec
push
test
stos
sbb
or
push
orb
call
dec
jmp
cmp
add
lret
popa
cmp
jge
std
add
inc
stc
les
lods
dec
loopne
xchg
andb
xor
nop
dec
xor
inc
outsb
push
mov
imul
xchg
mov
pop
xchg
in
dec
sahf
fldl2t
scas
sbb
cltd
mov
movsl
mov
push
pop
inc
push
mov
push
and
cmp
scas
in
xchg
insb
cld
xchg
lods
dec
lret
repz
dec
sahf
jge
mov
mov
out
xor
scas
test
std
cmp
sbb
xchg
sub
rolb
cmp
je
std
fnstsw
repnz
movsb
mov
xchg
into
popa
push
sbb
je
add
mov
push
ja
cmpsb
xlat
jno
cmp
jmp
repz
in
int
stos
and
int
lods
xor
mov
lret
stos
gs
cli
push
lret
adc
mov
push
popf
mov
or
movsb
lret
cmp
sbb
clc
xlat
movsbl
sti
mov
adc
sub
mov
fwait
xchg
inc
out
nop
xchg
xchg
orl
arpl
adc
sbb
sub
cmp
cli
sti
std
jl
popf
pushf
xchg
pop
inc
mov
arpl
out
or
mov
dec
mov
fwait
sub
cmc
cmp
push
jbe
mov
fstpt
jg
shlb
sub
mov
pop
sbb
pop
mov
movsb
jmp
bound
fs
jns
arpl
and
mov
inc
or
cmp
fldcw
fwait
mov
fwait
and
and
inc
idivb
mov
and
and
pop
es
push
out
jl
lcall
sbb
daa
add
pop
xlat
outsb
jbe
add
inc
xlat
test
pusha
adc
insl
mov
scas
adc
pop
and
leave
mov
movsb
lret
stos
jb
dec
cmp
adc
push
sub
inc
fdivr
ljmp
loope
stos
mov
lahf
push
inc
fs
cmp
mov
pop
aam
mov
in
das
mov
adc
add
inc
sub
jecxz
sbb
ds
dec
andb
pop
xchg
adc
pop
sbb
loop
fnsave
out
sahf
stos
cmp
adc
inc
pop
in
stos
pop
bound
jb
xorl
pop
test
int
and
fcomip
sahf
jmp
aad
rorb
int
das
cltd
imul
mov
and
sub
repz
hlt
mov
mov
inc
mov
std
xchg
cmp
insb
stc
mov
jbe
fld1
lcall
pop
mov
pop
or
inc
or
lahf
loopne
and
lods
bound
dec
or
sub
fdivrs
mov
mov
lea
cmp
aas
xchg
mov
mov
popa
push
and
cltd
sbb
cltd
out
xchg
dec
pop
pop
jg
mov
push
xchg
testb
lcall
mov
aas
or
xor
dec
cmp
adc
repz
movsb
jge
out
dec
ja
ljmp
sub
popf
test
mov
dec
fcompl
sub
push
test
or
rol
add
jns
mov
inc
js
and
cmpsb
sbb
pop
sbb
or
mov
mov
add
aas
and
mov
xor
fimuls
lock
mov
imul
lcall
fdivrs
mov
sti
mov
mov
cs
sbb
xchg
ja
or
cmp
xor
or
test
idivb
sub
and
and
mov
pop
sbb
jmp
dec
ljmp
xor
mov
xor
sub
add
pop
sbb
mov
and
adc
sbb
addr16
rclb
jno
sub
test
push
iret
cwtl
mov
call
jmp
jo
add
mov
mov
das
dec
jns
mov
sti
std
cmpsl
pop
nop
mov
xor
mov
add
push
mov
lock
xor
stos
imul
xchg
addl
or
or
hlt
xor
das
lds
cli
xchg
bound
push
mov
lock
and
outsl
out
sub
inc
shll
fnclex
xor
adc
out
out
aad
jae
inc
adc
mov
sbbl
mov
ja
and
jae
incb
cmpsb
xchg
loop
pop
mov
inc
push
jle
or
bound
in
dec
andb
dec
in
push
pop
push
addl
push
imul
add
inc
outsl
add
adc
mov
cmc
test
or
xchg
iret
into
shll
pop
adc
gs
xor
dec
je
jmp
call
fxch
xchg
sahf
shll
or
and
in
jle
ffree
je
in
push
sub
xor
loopne
inc
push
iret
pop
dec
lds
bound
repz
push
and
test
xchg
cmc
lds
mov
sbb
mov
cs
pop
mov
loope
call
xchg
push
addr16
adc
push
das
movsb
jl
xor
or
or
fwait
mov
stc
and
out
adc
testl
and
or
add
lret
pop
lcall
les
push
pop
gs
push
inc
pop
fsubrp
xchg
or
or
sbb
mov
mov
xchg
jmp
ja
push
xor
pop
pop
push
pusha
pop
rcrb
inc
iret
and
inc
daa
mov
lods
cltd
mov
les
lahf
cmpb
enter
out
push
out
ljmp
dec
pop
sbb
gs
lods
and
xchg
pop
mov
jo
push
outsl
mov
or
mov
loopne
sbb
mov
xor
test
leave
cmp
leave
jp
adc
mov
aam
or
and
hlt
pop
js
dec
add
lock
out
imull
mov
push
mov
sub
lcall
adc
popf
jg
shlb
popf
push
cmp
ja
or
sbb
stos
and
scas
loope
adc
push
stos
xchg
sbb
rcrb
push
insb
sub
inc
fucomi
pusha
add
sub
pop
jb
push
jb
xor
add
and
arpl
pinsrw
imul
or
cmp
mov
clc
add
cltd
mov
jae
inc
aam
sub
ret
aad
add
push
or
xor
mov
mov
iret
loope
push
iret
pop
add
js
movsl
pop
imul
add
jl
sti
or
divl
mov
rorl
push
int
data16
or
clc
insl
adc
movsb
pushf
cmpsb
imul
mov
sub
mov
adc
xor
sahf
cmp
cmpsb
lock
mov
pushw
mov
mov
xchg
int
xor
sbb
pop
cmp
mov
fadds
movb
dec
into
test
jbe
loope
in
sbb
fstpl
out
jge
mov
test
jbe
sbb
mov
push
mov
push
mov
jne
loop
mov
or
les
pop
repnz
sub
icebp
pop
rclb
and
cli
sbb
ret
roll
jg
add
and
xchg
lds
adc
inc
push
jg
xchg
sub
cltd
in
notb
xorb
adc
addb
jbe
mov
lahf
ret
dec
push
xlat
adc
xchg
sarl
out
data16
arpl
add
ror
add
push
adc
mov
sbb
inc
sbb
ficoms
add
inc
shlb
push
or
xorb
ret
xchg
jl
es
scas
mul
mov
dec
and
int
jno
jae
mov
aam
xor
jmp
pop
inc
nop
cmpsl
adc
or
push
lcall
push
in
push
and
mov
bound
addr16
adc
fmuls
or
aaa
inc
and
dec
push
rclb
loop
inc
lret
lods
sbb
mov
pop
pop
fadd
pop
push
mov
adc
sub
cmpsb
repz
jp
pop
lods
cmp
and
andl
iret
add
push
pop
inc
mov
lahf
outsl
fildl
rcrb
ljmp
dec
sub
movsb
test
mov
cmp
fsub
ret
stos
add
dec
mov
jmp
lea
leave
out
jmp
jp
jl
pushf
dec
std
push
aas
ret
pop
xor
popf
enter
adc
inc
mov
in
jne
cmp
dec
shrb
sub
adc
scas
aaa
scas
faddp
cld
lds
mov
adc
jb
mov
jp
mov
mov
es
fdivrs
jae
popf
js
lret
or
cmp
inc
mov
jns
inc
add
mov
cltd
cwtl
ret
ljmp
rorb
mov
or
pop
inc
add
mov
jns
into
sti
pop
adc
dec
cmpsl
mov
lods
fimull
aas
mov
mov
jo
xchg
push
fadds
fcoml
sbb
or
cmp
sbb
pop
clc
cmp
jecxz
xor
cmp
xor
and
inc
inc
cld
xor
and
inc
add
mov
or
xchg
enter
mov
pusha
daa
in
sub
adc
cmp
sbb
add
aaa
jg
or
and
mov
ficoml
jnp
inc
add
jecxz
mov
push
cmc
in
dec
mov
leave
adc
or
repnz
xor
rorb
loop
jmp
or
jno
ss
lret
jno
adc
mov
jne
mov
xchg
test
incb
stc
mov
imul
ss
loope
lock
loopne
dec
mov
mov
pusha
lods
cmp
ror
adc
sbb
pushf
iret
ret
out
push
loopne
test
mov
sahf
lods
and
or
push
lock
hlt
adc
cmp
add
aad
shl
inc
push
ss
js
mov
dec
xor
out
jb
xor
pop
adcb
mov
inc
lods
pop
ret
shrw
jg
mov
iret
or
sub
mov
out
aam
imull
or
pop
addl
dec
dec
ja
leave
pop
cmp
inc
dec
push
popf
mov
jno,pn
addb
and
aas
cs
ret
xor
push
inc
imul
in
test
test
popf
movsb
xchg
push
ljmp
push
out
dec
jnp
mov
ss
cmp
add
hlt
mov
fiadds
dec
mov
addr16
mov
loope
pop
push
leave
sub
int3
cli
mov
jg
jnp
aas
fidivl
flds
and
push
jnp
mov
nop
xchg
jge
ss
cmp
clc
jo
sbbl
adc
xchg
adc
jmp
outsl
dec
sub
mov
jle
jmp
cli
cld
pop
loop
adc
test
fxam
inc
lret
aas
inc
lret
pop
cmp
push
aaa
mov
sbb
sbb
std
dec
mov
sub
push
inc
pusha
mov
xor
inc
and
or
addr16
xchg
rcr
test
adc
dec
cli
sbb
out
xor
xchg
xchg
cs
cltd
ds
cmc
outsb
movsb
jl
pop
lea
mov
stos
mov
or
out
pop
jno
jns
sub
jb
jbe
pop
popa
test
adc
scas
xchg
popf
mov
inc
ret
inc
xor
push
add
out
dec
adc
jg
jne
push
out
test
and
repnz
les
push
adc
pop
push
push
popf
cmp
dec
adc
dec
and
sub
jl
or
incl
das
cli
scas
pushf
ljmp
push
adcl
inc
lret
sarl
pusha
jno
pop
js
popa
xchg
ret
gs
pushf
pushf
int
xor
call
mov
xchg
fnstcw
lcall
sbb
outsb
or
lods
adc
jg
mov
iret
into
and
test
or
repz
testb
fcomps
or
cmp
or
pop
fsts
push
sbb
pop
xor
jl
mov
inc
stos
cmp
cmp
stos
addr16
fs
jb
fildl
mov
jmp
add
into
inc
mov
fisubs
lret
dec
loope
push
hlt
outsb
push
repnz
sbb
mov
and
dec
mov
lock
cmp
cmpb
inc
pop
mov
mov
out
dec
mov
push
fadds
mov
xor
adc
jbe
cmpl
dec
xor
jbe
stos
imul
mov
popa
pushf
mov
adc
mov
xchg
and
out
shlb
add
aam
into
rol
cmc
mov
jl
aaa
stos
out
adc
mov
xlat
and
outsb
sbb
xchg
cmpb
jno
fistl
sub
cmp
sahf
sbb
daa
cmp
test
mov
inc
xor
xor
mov
pop
or
or
inc
rcll
ret
xchg
je
cs
stc
loop
dec
rcrb
das
pop
cwtl
sub
sahf
ljmp
int
cmp
jle
and
std
jp
imul
sbb
dec
add
hlt
notl
leave
lods
fmuls
fsub
cmp
pop
pop
aaa
popw
inc
icebp
aam
fnstenv
push
movsb
insl
pop
sub
push
dec
lods
xchg
add
movsl
adc
je
xor
popf
test
sbb
mov
mov
xchg
mov
mov
lods
xor
mov
sbb
mov
or
loope
push
icebp
sbb
nop
dec
push
xchg
xchg
jnp
cltd
repz
cmp
popa
sub
repnz
dec
movsl
fisttps
das
or
test
aad
sbb
sahf
mov
jle
nop
inc
dec
insb
or
idivl
fwait
dec
adc
ret
push
mov
jecxz
pop
mov
fs
sbb
in
test
jl
xchg
loopne
cmpsb
sub
out
loopne
cli
movsb
mov
int3
xchg
pop
inc
cmpsl
mov
lea
fs
imul
nop
ret
fmul
cmpsb
cmp
sahf
call
lahf
jge
into
shrb
gs
sub
cwtl
cmp
flds
adc
enter
aaa
scas
fstl
mov
scas
adc
stos
sti
shl
or
adc
inc
shl
sub
lret
call
or
adc
rorl
jecxz
cs
mov
js
data16
and
and
out
ret
xchg
xor
insb
addb
or
out
in
add
shll
aaa
push
adc
adc
jge
movsl
add
icebp
adc
push
push
xor
jge
xor
aam
pop
jns
ljmp
lea
rol
shll
out
out
sbb
sbb
and
movsb
push
ljmp
sbb
aas
js
xchg
pop
mov
inc
leave
in
lds
pop
push
nop
and
subb
jno
mov
fistps
test
in
pop
cmp
and
mov
jle
dec
mov
sub
mov
jge
xchg
pop
out
hlt
push
mov
loop
add
or
ja
cmp
nop
fstps
lods
in
add
stc
ficomps
sti
rcrb
and
mov
lahf
imul
push
mov
add
lods
pop
mov
dec
pop
add
adc
mov
ljmp
rorl
popf
jns
add
addb
imul
std
or
pop
and
cmp
pop
shlb
adc
lods
inc
je
loop
leave
sub
xchg
hlt
mov
push
cmp
stc
test
jge
pop
jae
push
mov
lods
inc
xor
add
bound
cmp
pop
push
cmp
fstpt
rcll
outsl
fisttpll
jnp
sbb
jns
dec
lret
sahf
push
pop
xchg
xchg
jno
mov
add
aam
inc
xchg
adc
pop
and
pop
mov
cmp
je
fbld
scas
jbe
cmpsb
cmp
insb
shlb
inc
mov
ja
pop
test
or
stc
stc
in
int
or
xchg
rcrl
int3
outsb
add
lret
lret
pushf
xor
movsb
and
cmp
mov
pop
mov
push
sub
mov
scas
mov
mov
bound
cld
jns
subps
cmpsb
cmpsl
inc
or
push
mov
mov
mov
loop
ror
xchg
jle
cmp
mov
jo
in
jecxz
push
cmp
pop
and
popa
roll
mov
mov
mov
jmp
iret
lock
cmc
in
sbb
cmp
or
cmpsl
fs
sti
and
int
push
add
mov
aad
pop
pop
inc
inc
insl
js
out
xor
mov
jns
lcall
daa
jp
dec
mov
mov
mov
dec
hlt
dec
mov
out
mov
inc
jp
xchg
push
movsb
out
insb
ret
sti
pop
arpl
inc
subb
push
das
xchg
movsl
fnsave
test
push
rol
std
movsl
jecxz
inc
fcoms
and
lcall
jnp
pop
shlb
in
xchg
and
scas
mov
repnz
lds
loope
iret
xlat
loopne
in
mov
aaa
rcrb
int3
rolb
mov
pushf
inc
das
rcll
xchg
cmp
enter
dec
sub
adc
adc
sarb
or
dec
sub
fmull
aaa
add
mov
lcall
jnp
fcmovnb
cmp
pop
repnz
cmpsb
inc
push
daa
and
lcall
fisubl
jge
inc
inc
test
adc
add
sbb
je
mov
pusha
lcall
mov
pop
dec
sub
xchg
fldt
aad
iret
imul
lods
ret
mov
jmp
nop
rep
xor
into
xor
inc
inc
adc
inc
push
xchg
sti
sub
xchg
dec
js
dec
adc
cltd
inc
fimull
pop
adc
loopne
xor
repnz
push
adc
lret
mov
adc
sbb
push
jns
xchg
lret
subl
cmp
add
mov
in
add
into
pop
pop
jmp
sti
xor
or
decb
into
cmpb
mov
lods
aam
mov
test
fildl
enter
movsb
push
sti
add
sbb
push
add
add
push
fld
pop
movsl
cmp
test
gs
xchg
mov
xchg
inc
cli
and
out
dec
aas
cld
mov
push
rcl
jne
in
jmp
dec
mov
lret
mov
jae
lahf
pusha
in
dec
ja
lea
out
int3
mov
rcrb
dec
mov
add
clc
and
jge
into
or
and
cmp
test
std
pop
repnz
xchg
sbb
mov
pushf
xchg
dec
push
cmp
xor
sbb
in
in
aad
push
stos
pop
pusha
decl
sbb
and
inc
mov
inc
aam
sub
movb
aaa
addr16
mov
or
pop
xchg
pushf
jecxz
jnp
cmp
aas
lds
enter
adc
in
fiaddl
and
subl
sub
adc
or
inc
sbb
pop
out
idiv
cmc
dec
ret
shlb
jbe
push
jp
scas
test
xor
jle
test
out
and
pop
xchg
loopne
test
jg
or
fidivrs
pop
aas
lods
aam
mov
inc
pop
jo
pop
dec
dec
add
cltd
add
mov
adc
out
and
mov
mov
adc
mov
enter
xchg
jns
repz
pop
mov
aam
sub
mov
movsb
scas
lret
fwait
dec
stos
lcall
sbb
jne
int3
loop
ror
mov
xchg
gs
shr
flds
sbb
nop
mov
cli
and
or
pop
and
aam
xor
es
cmp
pop
mov
mov
sbb
mov
loop
cli
call
xor
out
test
popf
addr16
ljmp
dec
inc
and
popa
mov
xchg
in
dec
and
xchg
lahf
jge
cltd
fld
rorb
jbe
jo
xlat
xchg
pop
push
add
jmp
fimull
fnstenv
js
pop
push
sub
xor
and
jecxz
fcoml
mov
nop
mov
cmc
pop
xor
dec
pop
sub
hlt
lods
out
sub
imul
lcall
mov
sahf
movsl
loopne
xchg
mov
or
mov
fsts
push
adc
das
inc
push
mov
out
dec
jecxz
xor
sti
pushf
pop
imul
out
jge
xor
inc
sub
inc
enter
addr16
test
insb
mov
adc
xchg
push
cmc
push
jle
sub
mov
movsb
into
rcrl
rcrb
mul
negl
ja
insl
shl
addb
jns,pt
push
or
fdivr
sarb
mov
xchg
outsb
dec
std
iret
call
cmp
inc
je
xlat
jmp
test
rcl
fsubl
jecxz
out
fdivrp
or
insb
sub
cmp
lahf
rolb
loopne
popa
in
jmp
rol
mov
pop
lea
xor
ds
sub
loop
sbb
xor
mov
ficomps
xorl
jbe
je,pt
mov
das
enter
iret
cmp
sbb
sbb
and
cs
xchg
aaa
or
adc
jnp
xor
mov
rcr
ja
pop
cmp
sahf
and
mov
hlt
shll
lcall
lret
sbb
sahf
xchg
mov
jnp
adc
lock
jp
gs
into
test
cmpsb
repnz
js
je
mov
test
adc
sbb
lahf
inc
mov
mov
or
int3
cld
xadd
pop
insl
das
lcall
ret
fcomip
lods
adc
xor
insl
add
mov
icebp
push
pop
push
es
mov
or
mov
cltd
int3
icebp
mov
je
xchg
sahf
mov
popa
out
mov
lret
pop
scas
aaa
mov
mov
adc
and
xor
cld
enter
adc
into
rcrl
repnz
adc
cmp
xchg
or
xchg
stos
lahf
addr16
cltd
xchg
jne
push
push
dec
sbb
int
dec
xor
adc
repnz
xchg
mov
shlb
outsl
ucomiss
add
mov
cs
outsb
inc
inc
and
push
popa
cli
mov
push
es
or
jg
cmc
mov
addb
xchg
imul
pop
in
pop
and
out
jp
rcr
shlb
fs
push
cmp
movsb
xor
dec
sbb
cwtl
push
lret
in
mov
jle
sahf
lods
adc
adc
iret
rorl
cmpsb
inc
dec
stc
adcb
inc
mov
shrl
add
lods
sbb
mov
cmp
fwait
movsb
pop
sbb
sub
mov
imulb
cmpl
xor
daa
das
pusha
imul
adc
lock
xor
add
sbbl
arpl
mov
popf
lcall
scas
insb
sbb
mov
dec
ja
int
or
sbb
jl
outsl
cmpsl
int
xchg
push
lahf
jae
clc
xchg
mov
lret
mov
ja
stos
mov
add
scas
sbb
lods
mov
stos
sbb
sub
cmpsl
pop
pop
in
stc
inc
sbb
inc
enter
mov
fwait
loop
daa
xchg
sahf
out
cmp
xchg
sub
mov
stc
dec
mov
addb
xchg
data16
add
rcll
loop
in
jo
dec
repz
lea
mov
les
inc
mov
mov
dec
and
dec
lret
sti
sub
mov
mov
mov
cmpl
scas
int3
sbb
mov
jns
sub
jno
mov
inc
mov
mov
cmp
sbb
adc
fsubs
addr16
outsb
repnz
inc
stos
cmp
dec
xor
xor
outsl
outsb
in
or
negb
jecxz
add
inc
fstl
pop
mov
mov
push
xchg
jbe
sub
dec
outsl
xor
cwtl
mov
mov
push
mov
mov
loop
sbb
mov
shll
or
movsl
stc
pop
sbb
imul
insl
xchg
lock
pop
repz
pushf
lock
movsb
jge
jae
fsub
shrb
out
test
jecxz
insl
int
inc
mov
xchg
cmp
inc
pop
adc
jg
mov
je
push
outsl
dec
aas
push
lods
xchg
das
inc
or
push
in
push
dec
and
dec
add
jle
sub
mov
nop
fisubl
test
mov
cmp
ljmp
shlb
dec
fists
out
fsubrl
cmp
mov
sub
aas
mov
out
add
bound
jecxz
inc
outsl
push
xchg
and
in
push
aaa
clc
out
enter
add
mov
dec
xor
loop
int
loope
jo
mov
mov
dec
xchg
jp
sub
add
mov
pop
jecxz
pop
jns
inc
push
pop
dec
loope
dec
push
sbb
lods
xchg
adcb
loope
add
dec
clc
mov
popf
cwtl
aad
jae
cmpb
rol
adc
sub
pop
push
mov
scas
push
jg
jbe
and
mov
inc
adc
hlt
mov
mov
add
stos
and
cmc
fsubl
cld
cmc
je
iret
jge
outsl
cmpb
add
clc
aam
jl
cwtl
adc
ds
sub
addl
lods
rolb
pushl
in
jo
pop
jo
mov
adc
sbb
add
mov
incb
in
jge
std
mov
pusha
fcoml
sub
jbe
ret
fldl
inc
outsl
rol
std
mov
in
jmp
add
loope
push
ficompl
mov
xchg
movd
clc
rol
pop
out
pop
xchg
cs
or
ja
adc
xchg
fcompl
mov
xchg
es
and
int3
xchg
stos
test
jg
xor
call
pushw
xchg
adc
out
mov
outsl
xor
fsub
cltd
push
mov
cmp
into
aaa
lds
xchg
pop
cltd
inc
mov
dec
adc
mov
xor
lcall
or
adc
push
testl
out
stos
loope
ds
addb
repnz
sbb
or
pop
cli
movsl
or
or
stos
xor
push
testb
jb
sbb
pop
inc
adc
icebp
dec
notb
lds
sub
xchg
loop
lods
fs
out
mov
test
ljmp
jnp
adc
mov
in
vpsravd
jno
arpl
sbb
inc
inc
filds
call
imul
test
adc
das
push
mov
cli
fnstsw
pop
mov
in
ret
scas
inc
xor
lret
push
ja
jle
sti
or
adc
je
lea
mov
jbe
ret
in
sahf
je
pop
loope
into
mov
mov
loop
insl
pop
jge
fsts
xchg
push
outsl
jns
jns
shl
pop
inc
les
xchg
outsb
test
cs
andb
and
iret
in
xor
sbb
movl
lcall
and
scas
cmp
mov
mov
xchg
jmp
push
mov
lcall
push
inc
and
cmp
or
adc
fs
fisubl
cld
movsl
mov
fistps
std
test
adcl
fmuls
inc
es
cmpsl
inc
mov
shll
arpl
jbe
pop
push
dec
nop
push
jnp
push
sub
daa
iret
hlt
test
in
mov
dec
lret
loopne
add
dec
mov
push
in
adc
mov
inc
cmp
dec
jno
out
cmp
mov
inc
pop
add
rorl
and
adc
rcrl
shrb
nop
xchg
sahf
lret
add
xchg
dec
fwait
sub
dec
lea
outsb
test
aaa
pop
mov
adc
mov
scas
lds
push
jb
fisubrl
mov
lret
xchg
das
jb
fisttpll
mov
fimuls
in
in
fisttpll
xchg
pop
js
loopne
jb
fisttps
or
out
mov
xor
pop
fimuls
mov
inc
mov
xlat
xor
xor
mov
add
jecxz
bound
insb
mov
jmp
rcrl
dec
int
in
lods
sbb
xchg
jmp
jae
clc
stc
xchg
or
js
push
and
aaa
lea
rcll
push
inc
xor
stc
mov
mov
call
inc
daa
adc
xor
pop
mov
test
enter
addr16
cmpsb
cs
inc
mov
mov
mov
mov
and
sbb
mov
sub
repz
outsb
js
cmpsb
inc
loope
clc
mov
sub
sbb
shlb
int
bound
mov
fcmovne
push
mov
jecxz
sub
addr16
jecxz
xlat
std
mov
or
pop
mov
jp
loop
scas
aad
ds
imul
or
inc
bnd
mov
les
and
mov
mov
and
xchg
push
leave
or
cmp
pop
aaa
insl
in
daa
inc
nop
sbb
sbbb
mov
cltd
dec
dec
sbb
stos
mov
push
mov
in
pop
popf
push
adc
cmp
cli
aam
adc
mov
adc
stos
and
xor
mov
jp
scas
mov
jnp
subl
adc
mov
jecxz
inc
fwait
xor
loope
imul
push
arpl
push
pop
mov
mov
ljmp
sbb
xor
push
add
test
les
in
mov
push
popa
mov
or
pop
dec
je
popf
dec
out
add
xchg
and
inc
mov
jnp
dec
fstps
shlb
lret
loopne
sbb
add
cwtl
sub
adc
jle
cmc
sub
xor
inc
xchg
sub
enter
xor
jne
scas
pop
mov
aaa
scas
xchg
cmp
pop
outsb
sbb
fimuls
mov
popf
imul
into
jmp
mov
das
xchg
daa
sub
or
cmc
dec
ljmp
das
xchg
jle
mov
mov
sahf
ja
inc
xchg
je
popf
push
out
and
mov
push
cmp
jns
push
mov
sbb
pushf
sub
sarl
fdivrl
cli
scas
insl
cld
push
in
loop,pn
dec
sbb
addl
push
sbb
dec
fildl
ret
lds
flds
xor
imul
sbb
jb
cmc
add
enter
push
adc
popa
mov
in
aas
xor
daa
fwait
push
mov
outsl
add
cmp
adc
jb
loope
mov
fwait
dec
push
mov
popf
adc
scas
sahf
jecxz
adc
sbb
mov
jecxz
xor
lods
outsl
in
jae
cmp
scas
pop
hlt
inc
icebp
mov
or
lods
test
push
push
push
dec
cli
mov
stos
or
cmp
sbb
aam
outsb
sbb
mov
aas
stos
pop
cld
cs
icebp
mov
ficomps
dec
fsts
adc
xor
mov
inc
fistpl
shlb
ljmp
and
bound
mulb
mov
movsb
pop
ljmp
sub
xor
adcb
sbb
fistpl
into
lods
fstps
push
lret
jp
mov
xor
jne
decl
inc
mov
shlb
lahf
adc
dec
imul
cmp
loope
fistl
aam
xchg
add
adc
cld
sbb
xor
in
in
test
mov
mov
xor
je
ljmp
mov
pop
mov
and
lret
mov
mov
adc
sarl
xchg
cmc
mov
push
push
inc
in
int
fmul
pop
push
ret
or
pop
mov
fidivs
xchg
mov
shll
adc
add
push
jbe
sub
outsl
xor
cmpsl
das
mov
mov
mov
lea
movsl
push
dec
jns
mov
ja
sub
and
mull
je
scas
pop
mov
out
mov
stc
loop
lods
pop
add
push
jnp
not
add
mov
inc
jo
cmc
pop
rorb
cmp
sar
lcall
and
aad
hlt
sti
adc
lea
adc
lods
add
sbb
xor
aaa
into
adc
and
push
sub
sbb
adc
and
jge
cmp
mov
cmpsl
sbb
es
add
mov
je
sub
in
lods
int3
jbe
sbb
cli
cmc
jg
in
dec
sub
out
icebp
xlat
push
jns
adc
decl
data16
jne
mov
xchg
adc
cs
push
mov
dec
jp
stos
bound
movsl
mov
adc
sbb
aaa
push
testl
shl
sbb
xor
pop
cli
mov
stos
add
and
adcl
sbb
repz
mov
mov
jo
push
adc
mov
mov
les
xchg
daa
sbb
js
cmp
jle
loop
jb
pushl
push
sub
xchg
fs
pop
loope
mov
and
pop
pusha
mov
cltd
and
fdivs
stos
mov
nop
push
or
rclb
fistpll
jns
fst
rcr
sbb
sbb
xor
leave
dec
ljmp
mov
mov
mov
mov
jmp
jg
and
and
movsb
pop
xor
pop
jb
nop
dec
mov
mov
inc
mov
mulb
ficoms
xchg
xchg
dec
idivl
leave
sub
jb
arpl
cmp
add
aad
test
inc
out
and
int3
in
fucom
adc
cmc
test
cmp
push
ffreep
xchg
inc
add
jl
in
pop
imul
add
pop
fstps
or
inc
outsb
icebp
xor
sub
sub
sarb
mov
sub
jb
ja
dec
fnsave
add
call
xor
jne
pop
pop
int
mov
xor
movsl
xchg
out
push
xchg
add
add
jmp
mov
add
adc
mov
mov
xchg
fucom
cmp
xchg
mov
popa
outsl
push
test
jo
faddl
icebp
lods
or
mov
arpl
or
mov
sbb
out
jbe
lret
aam
mov
das
sub
add
sbb
decl
popf
imul
jge
clc
pop
pop
cmpsb
sub
std
pop
std
incb
cmp
jb
adc
jecxz
sub
cmp
out
aas
mov
sarb
fidivrl
arpl
xor
mov
xor
cmp
xchg
cmpsl
sti
pop
fldt
inc
hlt
dec
jge
out
xlat
fsubrl
jbe
ljmp
stos
out
xchg
out
out
inc
fcoml
xor
sbbl
pop
notl
jge
repnz
mov
mov
rcrb
adc
add
repnz
jo
repz
push
jnp
dec
das
push
pop
cltd
mov
rolb
arpl
dec
sub
pop
mov
icebp
andps
ljmp
inc
push
or
cli
and
xor
sbb
mov
and
out
loope
inc
push
push
xor
call
mov
sbb
dec
mov
pop
test
pop
out
aam
loopne
jns
sub
push
jns
jns
mov
and
mov
scas
je
add
sbb
jno
lcall
into
inc
icebp
test
out
xchg
leave
jecxz
mov
sub
jg
adc
sbb
aas
and
xor
fistl
scas
cmp
in
sub
stos
fdiv
inc
push
jp
pop
movsb
out
pop
les
pop
test
pop
and
cmpsb
fs
stos
push
adc
sub
mov
loope
movsb
insb
push
aam
insb
test
xchg
mov
fbstp
pop
push
ljmp
sub
stos
xor
inc
mov
fsubs
and
sarb
sbb
dec
xchg
pop
xlat
out
into
push
jnp
jmp
sub
scas
lea
andl
pop
dec
inc
pop
out
jnp
jno
inc
lods
ficoms
xchg
push
cmp
sbb
and
sbb
lea
lahf
push
in
pop
push
test
shll
push
add
and
jbe
fnstcw
adc
mov
mov
aaa
inc
pop
push
mov
out
add
aaa
jmp
je
sub
out
ljmp
dec
dec
dec
lcall
and
jae
and
lahf
test
je
mov
test
cmpsl
inc
mov
cmovns
ja
dec
pop
loop
inc
iret
and
mov
mov
bound
xor
loope
ss
js
and
hlt
pop
andb
xor
xchg
scas
in
stos
lods
mov
outsl
mov
jne
in
das
mov
pushf
xor
xor
add
add
push
xchg
add
js
push
sti
popf
dec
jp
in
ret
fiaddl
push
mov
dec
pop
andb
out
std
dec
shl
cmova
loope
sbb
xlat
daa
cmp
or
sbb
mov
xchg
adc
ret
lods
lock
lahf
sub
or
mov
lods
inc
shrb
fbld
rorl
and
sub
insb
mov
pop
lret
xchg
push
pushf
insl
and
test
push
inc
push
or
cmp
out
dec
movsl
and
mov
lods
stc
push
pusha
popa
cmc
je
bound
sub
cmpsl
fisttps
adc
mov
mov
inc
mov
sbb
lods
mov
loope
mov
jo
shll
lcall
popf
jb
arpl
mov
sets
shlb
movsb
sti
addl
and
jmp
sbb
ss
gs
ljmp
imul
ret
pop
adc
mov
lret
add
sti
jl
and
mov
dec
sub
scas
xchg
inc
test
mov
cmp
sbb
loop
cmp
nop
sub
adc
jecxz
aad
cwtl
pop
scas
das
dec
add
pop
leave
jnp
push
xor
or
sbbb
mov
fidivrl
xchg
cs
and
pop
jbe
fdivl
test
pop
or
sub
push
nop
xchg
ljmp
pop
out
jmp
inc
daa
hlt
sbb
pop
das
mov
pushf
cmp
outsb
popa
mov
cmpsl
pop
cld
pop
rorb
jl
push
pushf
aam
add
jge
jg
and
cwtl
and
push
movsl
roll
mov
je
jns
sti
inc
icebp
aad
cmp
out
xor
xchg
ret
lods
adcl
in
into
int
mov
adc
cmpsb
popf
aad
jno
sub
pop
sub
dec
stc
ss
cmp
push
pushf
out
push
push
cld
repz
repz
xchg
insl
mov
ret
imul
jecxz
dec
and
jecxz
sbb
jo
inc
xor
mov
mov
movsb
xchg
add
les
nop
jl
fdivrl
shlb
mov
fsubr
jg
mov
pop
mov
sbb
sti
xor
sub
dec
pushf
sub
mov
sub
fwait
inc
cmpb
imul
lock
icebp
cmp
mov
cmpsl
fcmovnu
clc
out
pop
sbb
in
xchg
and
popf
xchg
cmp
out
mov
push
fisubrl
mov
push
xlat
rol
into
inc
outsl
je
les
dec
push
stos
frstor
stos
add
ss
lahf
cwtl
idivl
xor
xchg
mov
jge
adc
adc
jg
sbb
stos
in
popw
jbe
push
sarl
cmpsb
add
or
scas
sahf
mov
fs
and
mov
sub
test
out
xor
rclb
mov
das
test
sbb
shrb
xor
scas
dec
mov
mov
scas
inc
imul
xor
sbb
xor
push
mov
mov
jl
jmp
iret
mov
xor
sbb
ljmp
mov
mov
push
aad
fdivrp
cld
push
mov
jmp
stc
les
cmp
mov
insb
movq
xor
add
ljmp
test
xlat
stos
fcmovu
fstpt
test
loopne
dec
push
jbe
call
xchg
into
xchg
pusha
sahf
xchg
add
out
push
sub
les
mov
popa
ret
repnz
sarb
xchg
mov
pushf
xchg
add
out
inc
jne
xor
mov
int
test
add
xchg
nop
ror
insb
jmp
subb
push
add
xchg
add
test
das
dec
scas
clc
cmpsb
fisttps
sbb
pop
in
in
pop
outsb
aad
stc
fisubrs
out
push
push
xorb
fisubrs
push
arpl
fsubl
pop
dec
xchg
pop
call
cmp
cli
aad
sbb
je
loopne
outsl
sahf
dec
adc
arpl
pop
add
pop
scas
cmp
or
push
push
test
lahf
cmpsl
inc
test
int3
ljmp
divl
mov
pop
and
enter
mov
out
popl
nop
or
cmpsb
ret
jne
and
test
jl
mov
cmp
stc
add
mov
sbb
sub
in
xchg
mov
aas
cli
push
sbbb
cmpsb
inc
and
sub
inc
cmp
cmp
xor
add
xlat
or
insl
push
sub
notb
inc
das
cmpsl
push
lret
subb
int
mov
pop
pusha
mov
xor
mov
or
xchg
test
subl
cmp
xchg
or
xchg
shrl
jecxz
or
shll
push
into
repnz
or
das
push
out
mov
jae
mov
jnp
imul
mov
lds
outsl
cmpsl
add
jnp
popf
das
inc
inc
sub
frstor
add
fimull
add
ds
dec
bound
xchg
stos
data16
pcmpeqd
mov
enter
imul
loope
xorl
push
lahf
xor
inc
push
cmpsb
mov
mov
test
add
xor
push
fs
mov
sub
and
mov
in
pop
in
aas
cmp
bnd
icebp
lret
lahf
sahf
inc
jle
or
cmp
mov
scas
mov
dec
inc
pop
cmp
cmp
int3
outsb
inc
fildll
fstp
inc
flds
lock
or
sub
mov
les
push
xor
dec
dec
stc
add
xchg
push
mov
jae
in
sbb
arpl
adcl
and
lock
je
shll
cmp
adc
push
stos
adc
je
push
movsl
add
pusha
sbb
scas
lret
mov
rcrb
jbe
loopne
pop
pop
push
ret
and
std
repnz
xlat
xor
pop
push
fdecstp
pusha
dec
mov
add
xor
fidivl
jle
or
xchg
push
mov
in
cmpsl
popa
xor
mov
sbb
cmc
lahf
inc
out
mov
cltd
rorl
or
scas
jecxz
jle
sub
test
jecxz
dec
decb
and
pop
je
lret
shr
xlat
lock
pop
push
out
pop
pop
mov
in
fst
clc
xor
cmp
incb
and
out
pop
sub
xchg
cld
pmaxsw
hlt
and
fcomps
push
pop
sbb
or
xor
pushf
test
lcall
mov
cld
mov
pop
inc
shl
mov
jmp
imul
adc
sub
cmp
and
push
test
mov
push
mov
incl
das
and
sub
shll
pop
xchg
cltd
clc
aam
mov
jge
xchg
inc
cmpsb
xor
mov
inc
mov
sub
xchg
or
mov
icebp
or
push
mov
stc
loopne
cs
rcrb
xlat
jecxz
or
sahf
aaa
gs
fwait
outsb
add
jnp
rcr
pushf
sbb
inc
or
movsl
lcall
inc
jle
mov
lods
dec
imul
mov
lret
xchg
xor
mov
adc
mov
mov
sub
lcall
and
jl
mov
cli
push
out
or
mov
enter
push
lock
mov
shll
pop
je
in
mov
and
or
outsb
imul
sbb
aad
out
xchg
inc
not
cld
mov
subl
insb
sbb
mov
xor
mov
fcmovne
and
sub
xor
pop
adc
inc
scas
pop
push
sahf
xchg
add
pop
dec
cmpsb
ss
in
shll
inc
insb
xchg
adc
loope
sbb
pop
adc
mov
movsl
aaa
aaa
ljmp
ja
out
jmp
fcomps
outsb
jg
pop
es
shlb
jle
push
stos
cs
add
in
xor
cmc
mov
and
stc
mov
stc
in
or
out
ret
mov
into
push
int
rclb
lcall
cmp
xor
shrb
push
leave
cmp
mov
lock
int3
and
and
and
mov
and
into
xor
push
stc
sub
add
sbb
or
test
jmp
mov
cmpb
xlat
mov
les
popa
jbe
xchg
das
dec
into
lahf
insb
stos
sbb
pop
arpl
insb
mov
fsubrs
aam
adc
mov
pop
xor
cmp
imul
repnz
cmp
jae
mov
loopne
lahf
mov
daa
popf
lods
or
push
mov
lods
out
xor
jl
jg
sahf
pusha
pop
jae
stos
push
lret
cmpsl
paddw
sub
imul
adc
push
dec
shl
mov
arpl
and
xchg
inc
jecxz
stos
in
out
mov
adcb
mov
cmp
pop
ret
fnsave
mov
or
bound
sbb
test
mov
imul
mov
push
scas
lock
mov
mull
sbb
negb
mov
adcb
or
pop
imul
imul
popa
jne
cmpsl
xor
rolb
lea
call
fsubrl
mov
adc
test
and
mov
sub
xor
rcl
xchg
insb
mov
je
aam
int3
push
sub
nop
add
pop
jo
sub
sbb
xor
pop
cmp
pop
pushf
pop
icebp
fdivrs
xlat
and
lret
sarb
push
repz
pusha
jl
ss
mov
imull
filds
in
adc
push
adc
dec
cmp
inc
mov
lahf
movsb
lret
push
jle
adc
push
js
aam
jecxz
scas
and
or
dec
or
enter
mov
lea
dec
mov
push
scas
inc
jecxz
pushf
ja
inc
xor
pop
in
adc
xor
jl
enter
mov
out
std
iret
dec
nop
pop
push
mov
fsub
int3
pushl
gs
adc
and
pop
xchg
frstor
add
xchg
sub
sub
std
xchg
pop
outsl
xor
scas
dec
ficoml
adc
mov
out
hlt
mov
subl
loope
ret
cs
mov
es
aam
ljmp
ret
fs
pushw
push
cli
mov
in
mov
jno
inc
int
out
xchg
fildll
bound
lds
push
je
lock
add
cli
insb
xor
add
loope
sub
loope
xchg
leave
jae
push
sbb
notb
xchg
jne
inc
mov
rol
loopne
sbb
xchg
mov
sub
lahf
mov
xchg
rcl
mov
add
xor
mov
xchg
out
or
in
mov
jg
mov
in
xor
out
in
and
enter
jle
stc
jne
mov
mov
loop
jmp
xor
fidivl
mov
fldl
and
js
cmp
sub
add
into
or
negl
adc
mov
es
push
or
into
repz
mov
lret
adc
aam
xor
adcb
repz
sub
scas
mov
push
push
mov
and
rcll
jle
sub
push
sub
sub
push
subl
jle
jae
test
repz
jo
jnp,pt
ds
mov
cmp
sub
sbb
lret
xchg
sub
sub
insb
popl
xchg
repz
pop
cmp
js
sub
and
jnp
mov
ja
sbb
jecxz
enter
xchg
xchg
and
call
sub
dec
jge
stos
jecxz
adc
mov
test
xor
and
pop
fadd
mov
roll
outsl
shlb
sub
or
fbstp
mov
lcall
in
test
cmpb
popf
and
cmpsb
data16
pop
ficomps
xchg
imul
mov
xor
adc
push
or
insb
sub
cmp
mov
push
xlat
push
sbb
mov
inc
ja
in
jnp
stc
and
out
mov
gs
xlat
stos
cltd
test
jg
fwait
sub
dec
fnstcw
sbb
pop
push
dec
pop
push
mov
pop
in
pop
pop
divb
mov
and
adc
sbbl
mov
pop
mov
or
pop
dec
aad
stc
faddl
mov
pusha
sub
pushf
in
push
mov
xor
lret
mov
and
mov
fs
jns
inc
out
idivb
in
jns
aaa
pushf
lods
pop
sub
fcoms
add
or
xchg
adc
ss
mov
inc
je
mov
jp
add
pop
pop
aad
test
movsb
inc
popf
mov
aas
lahf
add
dec
jecxz
or
leave
test
aad
dec
cmp
sub
test
adc
test
lds
adc
xchg
add
jo
nop
xor
mov
push
xchg
mov
mov
mov
adc
cmpsb
jp
sub
fisubl
mov
pop
ds
loop
data16
cli
mov
jns
movsb
xlat
mov
dec
js
enter
lock
in
std
push
call
xor
jp
stc
repnz
mov
sub
cld
push
cld
mov
scas
out
dec
and
out
xchg
je
test
imul
mov
fisubl
xchg
push
or
fildll
sti
push
movsb
cmpsb
dec
sti
leave
mov
cwtl
mov
mov
mov
sbb
jmp
sub
xchg
mov
and
bound
out
mov
cld
xor
loop
mov
and
cld
aad
ret
popf
mov
jg
ficompl
scas
adc
ds
cmp
mov
jns
adc
push
shlb
adc
mov
mov
cmp
mov
sti
loop
cmp
mov
fadds
dec
mov
decl
cmpl
mov
sbb
lock
pop
sbbl
fistpl
repnz
mov
sahf
jns
aad
add
fsubrs
testb
sbb
mov
sbb
push
add
es
test
inc
dec
ucomiss
push
nop
jecxz
sti
jmp
lahf
or
fldt
stos
in
aaa
cwtl
mov
or
adc
sub
iret
mov
les
gs
mov
mov
cmp
adc
xor
dec
enter
add
mov
adc
dec
adc
mov
sub
cmp
aas
lock
add
push
shrb
fbld
xor
decb
shll
dec
cmpsl
inc
es
jp
cmp
jge
and
jecxz
inc
ja
div
out
dec
es
mov
and
rolb
fdivrl
test
enter
jns
loope
popa
gs
outsb
mov
sub
add
icebp
jnp
ds
or
xchg
inc
movsl
pushf
jne
dec
xchg
sub
mov
xor
xor
jb
ficoms
std
int3
mov
popa
xor
aaa
loopne
xchg
dec
sub
insb
addr16
dec
in
aad
cmpsl
jecxz
sbb
lea
jbe
add
push
push
lods
jae
ja
in
outsb
fidivl
std
unpcklps
repnz
mov
push
aas
xchg
dec
cmp
fisubl
inc
sahf
dec
mov
and
mov
xchg
cltd
inc
iret
aaa
in
sbb
pop
jp
inc
data16
jae
or
mov
adc
insb
cmp
push
or
dec
loopne
and
lea
sbb
cli
cmp
nop
jle
mov
in
push
and
insb
test
pop
or
lahf
or
sub
pop
jo
mov
mov
add
inc
jle
jnp
sub
outsl
das
mov
mov
mov
cmp
or
xor
add
lock
pop
test
int
mov
mov
aaa
and
rol
lods
adc
pusha
ja
addl
adc
push
icebp
pop
leave
enter
iret
je
out
addr16
in
movsl
fdivrl
bound
rcrl
mov
out
jg
in
cmp
pop
jne
scas
cmp
rorb
jno
sbb
mov
loopne
inc
inc
repnz
pop
push
sub
sub
mov
or
je
shrl
dec
rcr
stos
hlt
nop
xchg
aad
mov
push
jne
xchg
jo
or
jmp
test
inc
push
loopne
nop
fs
sbb
pop
sub
xlat
in
aaa
faddl
outsb
mov
inc
add
ficoms
pop
xor
lahf
adc
jge
das
mov
mov
ljmp
addr16
add
jnp
rclb
mov
aas
cmp
add
and
lret
jnp
sbb
ljmp
stc
aas
cli
fwait
in
imul
and
push
cmp
xchg
push
and
pop
aas
cmpsb
outsl
pop
fs
or
or
jmp
push
cmp
xlat
sub
jge
inc
sub
jb
cwtl
js
rcll
sbb
push
repz
mov
fistpl
jg
rcrl
and
cli
in
clc
jmp
jnp
lret
stc
arpl
add
gs
ret
imul
cmp
stos
shll
mov
sar
xchg
jmp
stc
shll
nop
out
int3
push
ss
mov
mov
dec
push
pop
cmp
std
clc
ffreep
rcrl
sbb
rclb
adc
pop
das
sbb
call
adc
push
mov
push
adc
insb
cmp
fdivl
dec
pop
in
sti
push
mov
arpl
clc
fmull
sub
sbb
ret
insl
sub
jnp
pop
test
sbb
jecxz
lea
test
test
aaa
push
les
jg
icebp
scas
and
jo
cmp
loop
and
divl
or
lcall
movsb
addb
in
std
jnp
lock
in
outsb
sub
dec
lret
jnp
cmpsl
mov
std
sbb
icebp
xchg
fildll
dec
mov
adc
sbb
ret
adc
or
jmp
aaa
push
push
out
popf
mov
out
js
pop
mov
xlat
xlat
push
sub
mov
mov
scas
push
push
les
cld
and
and
sti
pop
push
sti
loopne
lret
pop
mov
add
fucomi
xor
fwait
mov
out
lret
xchg
lcall
ljmp
ret
js
pushf
fidivl
scas
jl
push
or
cs
mov
out
jecxz
fisubrs
fmul
dec
xor
or
clc
sub
mov
clc
mov
lret
sub
mov
mov
out
aam
call
lods
addr16
insl
jae
cmpsb
cmpsl
add
sbb
add
sub
or
push
in
adc
rolb
stos
bts
dec
repz
loop
dec
js
aaa
fcmovnbe
push
out
stos
mov
push
sbb
and
mov
mov
jo
scas
mov
add
push
leave
enter
dec
cmp
push
es
and
aam
cltd
inc
lcall
push
insb
stos
jmp
sti
xor
mov
jecxz
daa
push
rcll
fisubrs
mov
imul
pop
dec
inc
sub
bound
or
xor
pop
or
pop
xor
xor
aas
dec
test
and
adc
repnz
push
xor
mov
out
mov
ss
lods
shll
or
sti
add
jg
adc
cli
loopne
inc
stos
out
mov
cmpsl
adc
pop
or
jp
sub
imul
jne
mov
xchg
push
jae
cmp
dec
int
pop
push
loope
loope
push
divb
daa
outsb
ds
outsl
cmp
add
div
cmc
fiadds
lahf
cmpsl
icebp
je
adc
fidivs
leave
jae
loope
mov
adc
outsb
sub
fsub
xchg
out
aad
jo
ret
or
push
sar
mov
mov
loopne
lods
das
fwait
pop
pop
mov
xor
in
pop
out
mov
and
pop
add
xor
sub
cli
arpl
push
mov
es
push
ljmp
fsts
arpl
insl
into
sub
negl
loop
and
sbb
and
pop
jmp
in
pop
xchg
fldt
mov
daa
lods
decb
or
push
daa
mov
pusha
stc
sub
inc
sub
call
cmp
pushf
jle
pop
sbb
and
aas
xchg
and
add
mov
ficoml
inc
xchg
or
adc
scas
xchg
mov
outsb
sbb
mov
push
pop
orb
ret
mov
ds
lcall
pusha
sub
adc
ucomiss
xchg
dec
fmull
gs
jae
loopne
adc
cmc
jl
or
pop
test
push
add
dec
lock
adc
cwtl
push
push
jbe
adc
test
cmp
xor
lock
subb
sub
mov
pop
dec
cmp
pop
cmp
pushf
inc
in
cwtl
or
push
lods
pop
inc
and
dec
xor
ret
movsl
mov
mov
pop
stc
adc
int3
aaa
dec
pusha
push
sbb
xchg
sub
mov
pop
lcall
repz
pushf
adc
xchg
pop
cld
or
cwtl
cmp
rorl
popa
test
scas
jmp
pusha
adc
stc
je
lods
and
fwait
pop
pop
mov
sbb
dec
ss
pop
outsl
push
dec
jae
or
sbb
xchg
mov
addr16
daa
lea
push
lret
push
repz
iret
scas
cmp
xor
insb
cmovne
jno
fcoms
pop
cwtl
in
mov
or
add
mov
mov
push
push
dec
bound
push
pop
std
xor
bound
popf
pop
pop
and
add
insl
mov
hlt
cmp
in
popa
xchg
adc
dec
cmc
inc
dec
fisttpll
jae
es
and
adc
icebp
into
out
mov
fs
dec
fsubrs
cltd
cli
popa
movsb
jmp
jne
scas
fadds
dec
dec
mov
push
mov
leave
pop
or
repnz
and
add
add
ret
and
xor
push
pop
ret
pop
xchg
fnsave
push
xor
cmp
jmp
das
pop
aad
and
fs
imul
jmp
adc
xchg
jae
out
movsl
xchg
mov
xor
pop
mov
lret
jae
ss
ret
test
cmp
xchg
xor
push
mov
inc
jmp
nop
mov
adc
stos
test
rolb
ret
cmp
jns
adc
lret
test
clc
sub
je
cld
dec
push
add
lock
dec
das
dec
es
lods
xor
imul
xor
jmp
popf
inc
mulb
pop
and
xor
push
add
sub
dec
les
mov
fucomip
loopne
inc
sbb
mov
dec
arpl
pop
in
mov
xchg
cmpsb
pop
dec
cmp
mov
lods
sub
repz
scas
push
jg
stos
push
dec
push
int3
scas
and
rcrb
xor
sub
fcmovbe
ds
aad
mov
mov
loop
push
sahf
out
mov
jo
dec
push
aaa
cmp
negb
stc
ret
scas
or
sbb
hlt
es
mov
jae
adc
aad
dec
or
out
imul
out
scas
push
and
sub
cltd
movb
cmp
push
into
fwait
add
push
xchg
xchg
mov
repz
mov
jp
pop
sbb
gs
stc
icebp
dec
dec
arpl
stos
push
xor
sub
sub
imul
push
in
lods
lret
add
jo
push
neg
in
mov
fisubrs
push
jl
or
jnp
mov
imul
dec
leave
gs
enter
mov
cmpsb
pop
jg
mov
popa
mov
cmpsl
cltd
mov
rcl
je
popa
jns
mov
push
popl
and
xchg
rcl
std
shrl
ljmp
in
in
notb
inc
bnd
adc
push
in
imul
cmpsb
mov
xchg
in
sub
mov
lock
add
les
pop
add
movsb
push
pop
sub
stos
pop
shr
orb
sub
mov
xor
and
in
sub
cmc
jnp
or
cwtl
int
scas
movsl
pusha
mov
inc
push
movsl
loop
ret
dec
jno
mov
rol
sbb
dec
mov
cld
dec
add
and
rolb
inc
inc
imul
fisubrl
ja
jl
mov
clc
and
xchg
in
shlb
dec
sub
mov
jge
jmp
clc
iret
sbb
jl
sti
xor
xchg
mov
mov
push
jmp
dec
push
das
and
repnz
xor
pop
mov
xor
jl
mov
mov
pop
icebp
adc
xor
icebp
or
popf
mov
xchg
sbb
out
push
loop
jb
push
inc
mov
call
push
rol
mov
adc
cmovbe
and
cmpsl
xor
in
pop
jge
fs
sti
arpl
add
add
pop
and
mov
mov
xor
inc
enter
adc
imul
dec
inc
stos
jno
lods
repnz
nop
mov
das
enterw
or
jp
in
cwtl
xchg
in
pop
jne
mov
push
dec
sub
cltd
hlt
daa
sub
rcll
sub
in
scas
or
out
out
arpl
xor
jge
sub
daa
sbb
dec
testl
cmp
xchg
mov
aam
pop
add
and
inc
out
cmc
or
or
mov
add
or
hlt
mov
stos
fwait
lea
or
dec
sbb
push
inc
mov
xor
xor
xlat
adc
mov
insl
xor
inc
sbb
dec
aad
dec
jbe
test
fbstp
cmp
add
jne
xchg
mov
push
stc
ficoms
insb
jp
pop
orl
lret
xchg
shll
fidivs
lret
int
xchg
dec
inc
xor
jecxz
loope
ljmp
dec
xchg
jae
bound
add
in
pop
inc
imul
mov
imul
ja
push
loopne
iret
xor
sbb
sbb
and
lret
mov
scas
adc
mov
add
mov
nop
pop
pop
rcll
insb
jns
gs
xchg
pop
pop
xor
mov
dec
iret
sbb
mov
movsl
mov
lret
xor
push
mov
iret
jecxz
sti
dec
mov
xchg
mov
pushf
imulb
push
es
adc
daa
pop
outsb
mov
loope
mov
add
fstpl
test
lods
iret
jmp
jns
pop
xor
aad
cmc
jae
mov
sbb
insl
fmull
dec
push
push
push
xor
or
mov
jl
testl
aas
adc
xchg
inc
sub
jnp
mov
mov
mov
pop
xchg
and
repnz
flds
jmp
ljmp
icebp
cmc
leave
xchg
mov
pushf
std
pop
push
xor
rcl
xchg
dec
pop
in
sub
hlt
dec
loopne
push
inc
adc
popa
or
out
or
pop
inc
shrb
dec
call
stos
pop
adc
mov
mov
dec
fwait
cmp
xchg
arpl
imul
inc
inc
fistpl
das
jo
aas
adc
aam
add
mov
lahf
arpl
arpl
mov
pop
or
jl
xor
mov
push
gs
inc
xchg
ret
jl
movsl
xor
les
orb
jb
icebp
imul
inc
add
add
insl
xchg
leave
es
xchg
and
arpl
movsl
mov
add
xor
dec
pop
jmp
inc
les
mov
jo
lret
daa
jge
jns
lock
xor
loopne
bound
pushf
inc
lcall
je
and
popa
xor
insl
push
shll
je
lods
cli
adc
add
fimull
lods
xchg
divps
xchg
ss
mov
lea
dec
add
inc
jbe
and
xor
sbb
xchg
xchg
dec
push
xor
jl
inc
cmp
mov
and
mov
inc
stos
loopne
aas
pop
mov
aaa
ljmp
faddp
ret
jl
push
rorl
pop
andl
sbbl
ljmp
xchg
testb
inc
aas
adc
and
adcb
sbb
test
cli
and
nop
das
adc
jmp
push
xchg
in
fincstp
lods
or
out
clc
ret
movl
mov
fists
insl
adc
add
insb
aaa
mov
xchg
xchg
cmp
mov
push
inc
and
sti
sbb
int3
push
loopne
andl
inc
jmp
pop
pop
add
gs
inc
push
out
cmp
xchg
mov
sarl
pop
inc
fmul
pop
mov
lds
loope
push
adc
dec
sbb
stos
out
mov
and
xchg
sbb
sahf
arpl
push
je
pop
fsubl
hlt
mov
xchg
push
repnz
out
ja
test
out
push
jge
xlat
cmp
pop
mov
inc
iret
push
or
mov
in
sub
xchg
loopne
repnz
xchg
cs
push
inc
lods
xor
jmp
add
add
mov
ljmp
lea
cmp
xor
xor
push
popf
xor
mov
sar
imul
jo
inc
jns,pt
aaa
decb
xchg
pop
adc
out
pop
mov
cld
sbb
push
xor
pusha
push
pop
mov
cmpb
aam
popf
cmc
mov
cmp
dec
push
mov
rcll
adc
sub
cli
pop
jp
push
ficompl
flds
add
jae
insl
xchg
test
pop
xlat
fstpl
sahf
dec
cmp
mov
push
mov
ror
xchg
mov
inc
jbe
pop
fimull
mov
xor
mov
ljmp
pop
ret
imul
mov
mov
mov
jno
in
cmp
add
and
xor
ljmp
pop
insb
imul
std
outsb
repz
test
dec
and
adc
iret
lock
cmp
push
mov
daa
std
gs
push
pop
inc
cmpsl
push
push
push
out
cmc
push
xlat
mov
sub
mov
sahf
cli
out
pop
lcall
sar
inc
push
sub
push
or
hlt
test
insl
cmpsl
jno
cmpsl
lea
pop
mov
dec
les
out
push
popa
xor
nop
dec
xor
out
jmp
dec
cmc
pop
es
jmp
ret
std
mov
inc
xlat
shrl
mov
cmp
add
mov
lods
adcl
add
das
cmp
and
repz
in
pushf
std
lods
cmp
loope
push
jmp
int
jnp
push
jno
add
dec
ret
aam
xor
lret
test
jmp
jg
mov
xchg
push
pop
xor
dec
movsl
fs
cmp
cwtl
dec
test
sbb
les
jo
mov
add
sti
inc
and
jo
adc
ljmp
in
sbb
dec
cltd
loopne
pop
popf
xor
pop
sub
push
sarl
mov
out
subl
xor
mov
xor
xchg
xchg
movsl
ret
pushf
dec
cli
push
or
rcrb
lods
out
pushf
push
inc
aaa
cmc
add
pop
cmpsl
imul
push
rolb
ret
cwtl
push
xchg
test
les
ljmp
sub
xchg
cmpsl
or
sbb
lods
lods
in
sub
lods
outsb
jle
push
and
shlb
push
test
mov
add
cmpl
imul
jnp
sub
mov
and
cmc
popa
pushf
gs
pop
dec
int
or
push
int3
outsb
pop
dec
mov
test
std
dec
pop
lea
sub
int3
out
loopne
push
movl
jecxz
ds
add
pop
push
into
jle
jbe
test
mov
std
repnz
sub
push
pop
out
arpl
scas
cmp
stc
mov
xor
incb
mov
inc
lcall
inc
scas
jnp
jg
outsb
ret
sbb
mov
or
repz
push
xchg
pop
push
mov
testl
jbe
mov
cwtl
push
ljmp
xor
in
jb
xor
mov
jo
jo
shll
pushf
pop
sahf
mov
sub
dec
push
adc
sbb
imulb
insl
jno
insl
or
sub
scas
add
lret
push
mov
shrl
adc
aaa
xor
pop
sub
ret
inc
cwtl
mov
jmp
sbb
push
mov
sub
cmpsl
testb
jg
out
mulb
xor
xchg
or
je
adc
sub
and
sub
dec
cmp
arpl
out
insb
aam
add
sub
pop
aam
push
sub
out
push
inc
cld
add
cmpsl
out
test
popl
xchg
xor
shll
aam
cld
and
push
dec
and
inc
xor
insb
xchg
mov
dec
les
adc
inc
ljmp
sbb
sahf
mov
jno
popa
andl
and
test
push
popa
xor
jp
mov
testl
les
inc
ror
ds
jecxz
pop
movsl
sti
pop
sub
sbb
into
shrl
cld
mov
pop
jno
cld
jle
test
enter
jne
popf
imul
push
clc
adc
int
lahf
sbb
ja
cmp
add
push
sti
mov
adc
frstor
jb
jnp
push
fs
mov
sarb
jbe
fs
push
jl
xchg
and
pop
sub
jge
mov
into
mov
stc
pop
xor
mov
fldcw
push
ss
adc
jmp
mov
cmp
jl
or
fidivl
pop
sbb
andb
adcl
or
mov
xchg
scas
cli
cli
inc
out
add
or
call
nop
mov
test
cmpl
aad
aas
test
adc
loop
test
add
addr16
xor
inc
outsb
push
out
mov
push
dec
mov
stc
cmp
xor
scas
sub
add
popf
adc
popf
adc
fsub
lahf
jmp
xor
or
outsb
or
loopne
hlt
mov
inc
jmp
test
and
add
mov
out
daa
lock
loopne
js
pop
xchg
pushf
sub
les
mov
push
jo
daa
pop
arpl
xchg
ss
fsubl
outsb
add
je
aad
mov
cmp
mov
sub
mov
adc
mov
test
mov
add
movsb
mov
xchg
sarb
jge
je
int3
ficomps
xchg
adc
adc
clc
and
rolb
or
jae
imul
dec
repz
push
sub
lods
adc
and
imul
push
insl
arpl
jae
movsb
fistl
or
mov
sbb
cmp
es
sbb
push
dec
xchg
xor
sub
inc
push
jmp
mov
idivb
shl
std
xlat
add
popa
push
sub
jmp
push
adc
or
mov
enter
jle
sub
fildll
pop
jp
cmpsl
mov
mov
xor
imul
mov
out
sbb
addr16
or
std
imul
mov
mov
push
add
cmp
and
fadds
and
cmp
std
cli
pushf
and
iret
ret
aad
push
andl
ffree
mov
sbb
xor
mov
aaa
in
les
push
push
xor
lret
add
mov
insb
push
icebp
and
mov
jmp
push
mov
add
jmp
push
mov
add
add
adc
jb
mov
ja
cmp
ljmp
push
arpl
xlat
mov
iret
sbb
lock
or
ljmp
pop
jno
sahf
push
jbe
mov
cltd
fistpll
pop
or
pop
mov
push
xchg
addr16
push
sub
lock
dec
icebp
xchg
pushf
push
push
mov
xor
das
inc
in
daa
pop
lods
repz
lret
or
and
or
repnz
push
cmp
cmpsl
addr16
mov
dec
mov
iret
pop
fidivrl
stos
insl
out
push
mov
cmc
imul
push
mov
rcr
jmp
cmp
mov
or
mov
cli
std
cmp
pop
aam
pushf
dec
cmp
cmp
add
jp
cmp
gs
jnp
in
dec
addr16
adc
jne
xchg
jmp
aad
aad
ds
jae
sub
add
scas
add
push
sbb
xchg
clc
xchg
jmp
ljmp
insl
pop
pop
into
cli
xchg
xor
sahf
pop
popl
call
sub
or
iret
sbb
add
inc
lods
sti
pop
ret
aad
and
call
inc
test
loopne
xor
bound
jb
mov
out
rcrl
ret
inc
mov
jmp
sahf
dec
shr
or
jle
mov
clc
jno
aam
inc
into
lahf
jbe
mov
iret
test
push
lock
jns
mov
cmp
cmp
imul
push
pop
and
popf
mov
std
out
pop
aaa
ja
loope
cmp
movsl
push
mov
inc
mov
mov
jnp
adc
adc
mov
xchg
jle
or
or
sbb
outsb
jl
push
dec
mov
pop
xor
push
push
mov
aam
fldcw
test
or
inc
daa
sbb
out
mul
inc
push
out
repz
rorl
xchg
mov
femms
fldl
pusha
jp
inc
xor
addr16
adc
mov
push
xchg
call
xor
xor
xchg
sahf
sbb
pop
lods
test
lods
add
pop
lret
lret
inc
sub
shrl
in
mov
scas
pushf
dec
fs
pop
inc
sbb
repz
daa
sbb
pop
mov
popa
mov
sbbb
inc
mov
add
jg
enter
push
dec
xor
out
iret
jge
mov
lods
xchg
aas
jns
enter
ljmp
out
lret
pop
add
ror
int
mov
push
push
std
dec
inc
cld
sub
dec
inc
pusha
jmp
push
xchg
adc
cli
jge
adc
int3
out
into
cmp
mov
int3
dec
out
jb
icebp
cs
or
xor
aad
sbb
daa
cmpsb
int
adc
jae
adc
mov
ja
sbb
inc
or
fwait
mov
xchg
das
test
adc
sub
xchg
jb
aaa
sarl
mov
aaa
push
mov
stos
mov
orl
jp
xchg
test
outsb
mov
stos
dec
pop
push
inc
mov
xchg
or
stos
pop
jo
cmpsb
rcll
aaa
ret
test
mov
cmpsb
outsl
shrl
mov
mov
add
dec
fstps
add
push
push
lods
push
std
pop
ds
jae
jnp
sub
sbb
divb
push
orl
lea
sbb
or
es
pop
movsl
adc
cmp
dec
xlat
mov
mov
mov
scas
mov
fsubl
and
pop
sti
inc
mov
cs
sub
jae
add
adc
or
test
xchg
stos
fimull
scas
mov
jne
shll
xchg
lret
movsl
jne
sbb
rcll
aaa
inc
or
jbe
dec
adc
or
fucom
dec
xor
stos
cs
jmp
and
outsl
dec
cmpb
nop
xchg
cmpsb
out
mov
push
push
fimuls
les
cli
pop
int3
jns
jb
jle
adc
out
stos
mov
mov
sub
nop
insb
hlt
mov
push
lahf
negl
mov
xlat
jns
ja
xor
mov
and
mov
idiv
jp
xor
shlb
cmpsl
mov
cmp
aaa
rol
or
pop
and
mov
imul
and
cld
rcrb
sub
mov
loopne
nop
fidivs
dec
enter
and
inc
and
dec
fcoms
xor
mov
dec
sbb
ret
fdivl
xlat
or
scas
xchg
insb
jmp
pop
jge
add
xor
jo
mov
cmpsb
cmc
aas
sbb
mov
stos
mov
insb
daa
jle
aas
xchg
out
pop
mov
dec
lret
movb
scas
cmpsl
pop
movsl
out
call
fwait
jg
out
fmuls
in
sahf
dec
xlat
mov
lds
mov
cld
sub
das
pop
cmp
push
test
lock
movsl
roll
or
js
push
xor
adc
mov
sub
xor
cli
mov
sti
aad
cltd
pushf
push
mov
jb
xchg
add
mov
cmp
pop
rclb
xchg
pop
in
in
fildll
mov
cltd
mov
dec
xor
adc
mov
xor
push
mov
push
xchg
ss
out
in
dec
ret
rcr
bound
out
push
xor
xor
pop
cli
cmp
inc
xchg
sti
ficompl
mov
das
in
jbe
sbb
lret
stos
push
enter
mov
out
sub
adc
push
mov
mov
sarb
imul
in
repz
out
pop
test
jae
dec
cmc
fisttps
ljmp
mov
pusha
push
jbe
dec
lods
mov
jns
les
outsl
inc
out
sbb
mov
mov
test
jecxz
mov
in
popa
out
stos
push
jae
icebp
and
dec
sbb
repnz
mov
adc
ss
xchg
sub
aaa
inc
out
sbb
jne
xchg
pop
push
jge
loope
loopne
mov
adc
filds
loop
lahf
xcrypt-cbc
lods
sub
xor
nop
icebp
dec
dec
dec
std
xchg
mov
mov
dec
dec
aaa
pushf
rorl
aas
mov
add
adc
subl
adc
mov
out
pop
xchg
aad
adc
daa
bnd
push
popa
std
out
rcr
lods
dec
mov
in
repz
dec
lds
sbbl
lahf
je
mov
lea
outsl
aam
and
ljmp
inc
pop
or
sarb
test
pusha
nop
mov
push
rcrb
je
test
mov
or
and
mov
adc
cmp
fisttps
rolb
sub
testl
cmpsl
test
subl
xchg
cmp
dec
sbb
dec
fwait
loopne
cld
xchg
test
sub
inc
lahf
pop
ret
push
frstor
mov
jle
lock
xchg
sbb
xchg
or
mov
pusha
push
bswap
fnstenv
mov
mov
fdivrp
cmpsb
aad
sub
ljmp
sbb
mov
dec
add
cmp
ja
mov
loope
push
mov
mov
loop
xor
jle
mov
loopne
stc
or
cltd
ss
pop
push
fbstp
pop
xchg
clc
dec
lahf
mov
xor
movsb
ljmp
xor
and
mov
xchg
push
dec
jge
sub
lods
sub
std
imul
mov
out
adc
pop
xor
sbb
shrb
inc
push
and
fidivrl
dec
mov
pop
push
pop
sbb
mov
cmp
test
fcmovnb
xor
sbb
sub
mov
mov
inc
scas
mov
ret
in
mov
cmpsl
push
or
rcrl
sbb
inc
sbbb
in
adc
mov
add
pop
fisubrs
jns
pop
xchg
cs
mov
daa
add
mov
add
lods
inc
dec
pop
das
icebp
scas
push
je
mov
loope
repz
xor
addl
sbb
cli
push
pop
inc
or
pop
or
cld
orl
clc
mov
jmp
das
xchg
decb
push
nop
fcoml
mov
or
rorl
xchg
inc
das
fisubs
pop
pop
xchg
pop
push
and
ljmp
dec
adcb
in
dec
or
jmp
inc
ficoml
xor
mov
fnstenv
or
clc
cmp
pop
push
cmp
insb
aaa
xor
jno
in
or
cmp
push
xorb
push
hlt
and
fwait
adc
xlat
lahf
xor
ret
jns
dec
les
inc
mov
add
int
mov
out
and
mov
jle
jo
jns
push
cs
das
mov
es
push
sarb
xor
xlat
addb
pop
test
sbb
pop
movsl
mov
dec
mov
bound
aas
fnsave
cld
inc
pop
jmp
or
jge
aas
lcall
or
push
insb
push
fs
xchg
inc
sub
mov
sahf
cmc
adc
push
mov
out
sub
call
inc
dec
aam
gs
fidivs
add
cwtl
push
and
mov
pop
adc
aaa
dec
push
lahf
arpl
rcl
pop
jbe
imul
mov
inc
aam
inc
xlat
lret
in
test
cltd
ret
cmp
loop
xchg
mov
cwtl
sub
xor
imul
mov
loopne
std
xor
call
dec
cli
pushf
int3
mov
aam
dec
in
bound
fcoml
and
clc
xchg
or
cmpsl
mov
jno
and
push
movl
repz
push
fsubrl
std
push
test
inc
mov
adc
sub
or
divl
cmc
in
adc
daa
sbb
pop
cmp
daa
cmp
and
iret
or
adc
mov
icebp
pop
pop
jnp
in
scas
std
icebp
ret
andb
cmp
fidivrl
mov
xchg
gs
xchg
mov
shll
insl
fsubl
cs
repz
pop
inc
push
jne
sub
jbe
shrb
jns
outsb
pop
dec
repnz
mov
jno
lret
je
push
xchg
jp
sti
mov
cmp
sub
xor
ret
cltd
ja
cs
sbb
shll
xor
dec
cmc
mov
jae
aam
fistl
aas
xor
aam
xor
adc
inc
push
or
mov
je
xchg
jl
adc
stos
aas
movsb
pushf
lret
subl
lods
test
jmp
xchg
xchg
cmp
in
adc
ficoml
dec
pop
push
mov
cmp
add
xchg
fdivs
or
subl
add
lret
mov
sub
inc
cs
mov
fs
stc
mov
dec
mov
out
testl
imul
add
sbb
fwait
jg
fsubl
ret
icebp
cltd
loop
out
and
out
dec
sbb
int3
sbb
xor
mov
sbb
stos
nop
hlt
xlat
cmp
sti
and
mov
xchg
enter
fimuls
int
filds
add
addl
out
popf
jb
daa
clc
stc
les
xchg
inc
loop
xchg
mov
cmp
cmc
sub
or
ja
xlat
stos
ret
jnp
mov
cs
and
mov
jnp
sbb
shlb
das
loope
dec
lods
lock
les
insb
icebp
stos
mov
sahf
mov
adc
pop
adc
rep
mov
loope
lods
sbb
movsl
lds
push
and
adc
inc
clc
xchg
pop
pop
sub
out
dec
movsb
jae
outsb
inc
sbb
xchg
jne
aas
pop
cmp
pushf
sbbb
ja
cmovb
inc
cmc
scas
sbb
cmp
cmc
lea
cltd
inc
or
shr
sbb
imul
dec
add
mov
ss
aaa
add
adc
and
ret
mov
mov
sbb
sub
add
inc
in
jae
cltd
sahf
repnz
cmp
push
loope
and
mov
fmull
dec
push
out
loopne
out
xchg
test
ss
and
ret
mov
sbb
sbb
loope
shll
inc
icebp
jnp
mov
mov
sub
loop
add
imul
xchg
int3
push
fildll
inc
fimull
jae
sub
adc
js
out
ljmp
adc
mov
mov
dec
imul
fwait
jnp
xchg
cmp
jae
jns
sbb
mov
lock
xchg
sbb
jmp
adc
icebp
xor
mov
sub
inc
daa
int
in
fwait
lret
jg
lret
dec
mov
jb
sub
push
dec
xor
sub
aas
imul
xlat
pop
dec
xorb
scas
xchg
push
ret
sahf
leave
neg
fsubl
imul
imul
inc
adc
jns
pop
jmp
sbb
sbb
js
das
dec
insl
xchg
mov
cmp
pop
in
ja
mov
cltd
add
aam
adc
sbb
aam
xchg
lret
aas
leave
hlt
or
fnstcw
daa
in
mov
mov
lret
pop
pmaxsw
sbb
pop
cld
je
aad
push
leave
dec
fldt
mov
mov
push
jl
cmpsl
rorl
jb
femms
inc
dec
sbb
jmp
es
imul
push
inc
jo
ret
call
mov
add
jecxz
dec
inc
repnz
cli
jmp
rcl
or
jmp
shlb
inc
mov
xor
jno
dec
jl
addr16
mov
std
push
rcll
xchg
inc
or
and
stc
cld
dec
push
cs
idivb
ret
jmp
sbb
fiaddl
or
jo
mov
adc
cmpsb
pop
es
lea
inc
roll
pop
loopne
jnp
xlat
push
lods
and
mov
nop
cli
iret
imul
test
sahf
data16
ret
test
stos
or
push
lret
add
xchg
jecxz
push
jecxz
sub
ja
lods
in
sub
jae
cmp
adc
adc
roll
sub
inc
push
dec
repz
icebp
cmp
inc
push
jno
mov
fidivrl
xorl
int3
mov
or
cmp
jp
jae
ret
sarl
fists
test
inc
dec
insl
xor
push
cwtl
dec
pop
push
test
push
sbb
je
insl
dec
fsts
pop
loopne
into
jo
mov
clc
pop
or
scas
out
daa
dec
push
imul
cltd
xor
dec
mov
movsb
iret
fdivrs
jg
hlt
cmp
mov
sbb
in
addb
nop
repz
mov
dec
mov
lds
repnz
je
inc
mov
movl
scas
lret
aas
jne
ds
pop
sbb
xlat
cmpsl
or
add
xchg
dec
pushf
inc
dec
imul
lahf
dec
xchg
movsl
add
out
and
cmp
push
call
lcall
sbb
mov
test
pop
mov
movl
add
mov
flds
sbb
xchg
das
cmp
orl
push
pop
inc
adc
aas
aas
rcr
and
mov
fists
push
in
mov
lret
les
xor
leave
jnp
shl
mov
out
out
push
pushf
sahf
aaa
and
cmpsl
loopne
push
mov
sar
cmp
bound
outsb
add
and
leave
lods
jle
andb
sbb
jnp
sub
xlat
cmp
rcrl
or
or
dec
and
sub
jge
and
fldlg2
outsl
and
lods
iret
xor
hlt
add
aam
negb
aaa
notl
add
push
dec
inc
mov
rclb
clc
fdivs
fs
mov
adc
mov
lahf
arpl
scas
xlat
push
dec
dec
int
mov
lea
sarl
inc
imul
or
enter
sub
mov
sub
cmp
movb
inc
pop
bound
dec
mov
jbe
add
jae
aaa
mov
movl
xchg
jnp
ja
cmp
add
icebp
jle
jge
add
or
jle
out
cmc
dec
jp
jle
icebp
data16
sbb
push
fldcw
mov
cmp
sub
or
test
jmp
pusha
jle
sbb
dec
dec
stc
push
cmpsl
data16
mov
movsb
into
fisttpl
mov
hlt
pop
hlt
adc
bound
add
push
add
outsl
push
jg,pn
neg
and
pop
mov
es
push
fimuls
sub
push
sti
xor
xchg
add
jbe
push
cmp
fwait
inc
mov
addl
mov
mov
xor
dec
jae
mov
add
scas
pop
or
dec
pop
mov
cmp
std
mov
daa
xor
ljmp
cmp
lret
jmp
cld
fstl
div
jmp
mov
sbb
imul
mov
jnp
mov
pushl
xor
out
scas
or
push
cmp
adc
sub
mov
sbb
dec
pop
or
and
cmpsl
sub
mov
test
push
push
inc
inc
bsr
testl
xchg
pop
push
jmp
adc
mov
jle
andl
jge
nop
imul
imul
js
lods
xor
pushf
iret
aam
out
pop
dec
ljmp
popf
dec
dec
repz
andl
clc
inc
enter
xchg
push
scas
pop
sub
jle
int3
mov
mov
pop
mov
jl
popf
scas
mov
xchg
jg
mov
fildl
sti
ds
dec
xorb
mov
cli
or
and
sbb
inc
xor
or
imul
pop
xor
lcall
test
sub
aas
sti
daa
pop
mov
cmp
jae
hlt
dec
pushf
outsb
stos
inc
loope
pop
inc
and
frstor
dec
pop
cmpsl
cld
add
std
cmpsl
iret
std
push
int
or
popf
scas
xchg
mov
orl
jmp
int3
mov
cmp
and
pop
lds
jns
sub
jl
out
inc
scas
xchg
in
aaa
fmull
push
daa
pop
lods
adc
inc
xchg
xlat
out
and
inc
imul
in
mov
cmc
ds
fdiv
sub
arpl
xchg
cmp
cmp
push
push
enter
lret
lds
mov
das
push
xor
push
add
push
push
lahf
push
push
shl
sbb
adc
xlat
les
and
sbb
stos
mov
sbb
dec
scas
push
or
sbbl
add
fimull
add
movsl
loopne
mov
pop
in
dec
movsb
test
xor
mov
jp
push
sbb
mov
fldcw
jnp
je
dec
ljmp
or
aam
adc
imul
inc
xor
xorl
or
lds
es
and
roll
xchg
sub
out
push
jbe
mov
in
mov
fwait
mov
mov
dec
outsb
shlb
rcll
addr16
scas
iret
push
lds
in
in
fstpt
add
jb
pop
cmpsl
adc
pop
push
xchg
mov
xor
ljmp
push
lret
sbb
adc
and
jo
gs
mov
out
aas
add
insb
pop
add
mov
in
inc
les
push
push
in
std
add
xchg
mov
jge
fldcw
loopne
xchg
pop
out
in
stos
mov
xchg
add
shll
loop
orb
loopne
dec
xchg
inc
fisttps
stos
add
mov
push
gs
dec
cmp
test
push
mov
xor
lret
aaa
iret
add
fldenv
mov
lods
fildll
fisubl
dec
mov
icebp
dec
jle
cld
pop
data16
pop
hlt
mov
stos
mov
sbb
orb
mov
mov
fdivr
arpl
test
xchg
loopne
sahf
jle
iret
pop
mov
divl
mov
bound
scas
dec
mov
clc
je
inc
add
sbb
lret
scas
popf
stos
lock
sbb
sub
fnstenv
subb
ja
nop
inc
test
sarl
dec
cmpl
sbb
gs
cmp
mov
enter
adc
daa
lcall
mov
iret
cs
or
pop
lea
ja
xchg
xor
out
inc
pop
lcall
pop
jno
insb
mov
pop
pushf
aad
psrlw
ljmp
and
aaa
popf
stc
clc
xchg
dec
push
rcl
jmp
mov
pop
in
xchg
mov
sti
pop
jmp
jnp
cli
add
push
popf
and
dec
mov
xchg
dec
add
cmp
jb
pop
pop
jmp
inc
bound
mov
cmc
inc
push
mov
pusha
adc
into
rcll
jmp
fs
insb
int
dec
setle
adc
xor
shlb
bound
dec
fbstp
xlat
jecxz
adc
subb
pop
jno
xchg
pop
lret
jecxz
push
stos
lock
inc
js
outsb
imul
fs
aam
test
xchg
jbe
fsubl
sbb
aad
enter
cwtl
lds
pop
adc
call
leave
nop
push
pusha
mov
mov
add
dec
jl
xchg
and
cmp
iret
or
or
lds
push
fimuls
inc
lods
subl
mov
dec
rclb
mov
sub
fidivrs
xchg
cmp
or
xchg
mov
or
fimull
inc
mov
mov
mov
xchg
hlt
sbb
arpl
movsl
cmpsb
aam
decb
jb
push
movsl
bound
les
add
jp
call
push
shl
mov
loop
leave
xchg
mov
lret
into
and
bound
bound
mov
jecxz
sub
push
testb
andl
push
data16
jge
push
cmc
jmp
jp
cmc
fwait
sub
fildl
and
mov
out
xor
insl
fs
clc
pop
push
in
pushf
jbe
daa
jge
mov
and
leave
add
dec
and
mov
hlt
es
ss
sub
movb
mov
andb
pop
lods
mov
xchg
cmpsb
insl
adc
mov
jae
mov
inc
loop
iret
pop
cmp
mov
xchg
sub
push
movsb
and
mov
dec
mov
and
sahf
sahf
es
shrb
sub
xchg
jecxz
jne
mov
mov
fldt
jecxz
fiadds
cld
pop
cmp
dec
leave
rolb
mov
jno
mov
daa
jg,pt
lret
pop
int
or
test
bnd
sbb
adc
push
and
mov
int
xor
sub
testb
mov
sub
arpl
mov
scas
xchg
dec
jmp
or
ret
movsl
jae
inc
es
sbb
adc
mov
mov
dec
pop
ds
adc
mov
mov
ljmp
jb
mov
js
pop
xor
push
sbb
loopne
mov
mov
or
addr16
sbb
mov
mov
adc
sub
fbld
push
cmpsl
and
or
ret
fstpt
push
ret
jno
fs
popa
rol
rorb
movsl
out
push
mov
xor
or
xchg
mov
jno
stos
or
hlt
or
mov
fisubs
imul
outsl
jb
inc
pop
mov
scas
dec
xchg
mov
push
jns
xchg
pusha
movsl
xlat
out
xor
int
dec
in
hlt
pop
in
int3
ret
mov
stos
jle
and
push
cmpsb
movsl
xor
jns
or
leave
dec
dec
and
pushl
cmpsb
sbb
lret
pop
mov
dec
sub
ds
or
adc
movsb
jmp
loop
aam
loopne
movhps
dec
xor
add
inc
clts
pop
sbb
add
adc
xchg
std
pusha
stos
add
in
mov
mov
divl
adc
mov
or
dec
xchg
loopne
or
xor
popa
xchg
mov
cwtl
inc
daa
inc
call
inc
add
jnp
lock
sub
leave
jbe
std
aam
or
jg
dec
dec
pop
cmpsl
popa
mov
fnstsw
rorl
icebp
inc
mov
ss
mov
inc
or
inc
aam
sti
and
or
aam
mov
cli
pop
faddl
movswl
in
scas
cmp
mov
push
jb
fsubrs
cli
bound
ss
ret
push
mov
mov
jne
lret
pop
xchg
fdivl
roll
mov
jle
icebp
loopne
jg
jg
pop
xor
sarl
pop
sbb
xchg
dec
cli
pop
jo
mov
test
std
fsubrs
inc
pusha
sbb
jle
lea
aas
addl
sub
imul
icebp
adc
lcall
xchg
adc
add
mov
movl
das
adc
cmpsl
dec
sarl
std
pop
mov
imul
cmp
sbb
lods
push
fcoms
test
mov
lret
call
sbb
test
into
movsb
cli
vmread
xlat
adc
iret
js
ret
xor
mov
hlt
mov
imul
lret
sbb
icebp
mov
push
push
mov
xchg
dec
inc
push
in
mov
les
shl
lods
or
inc
out
jge
repz
jno
dec
adc
and
movsb
and
sbb
mov
inc
and
sub
rorb
mov
int
sub
jmp
mov
mov
adc
loopne
lods
or
mov
test
mov
mov
jmp
xchg
push
push
into
sbb
cmp
mov
xor
jg
jno
inc
mov
shlb
fucomi
cltd
clc
mov
outsl
cltd
sysret
ret
call
gs
dec
movsb
xlat
das
std
mov
push
add
pop
int
int3
out
mov
gs
leave
and
push
push
es
cmp
repz
into
insb
mov
sar
ret
inc
inc
adc
lahf
xchg
les
jmp
popf
xchg
xchg
outsb
sbb
mov
inc
pop
xchg
or
xor
inc
in
cwtl
out
dec
xchg
cmp
and
fwait
mov
iret
add
push
ja
out
fs
cmp
push
movsb
sbb
mulb
pop
sbb
das
sbb
xor
adc
push
push
cmp
xor
inc
pop
das
insl
ret
mov
mov
sarl
enter
rclb
mov
inc
fwait
mov
sub
jns
sbb
fdivr
not
fs
push
mov
cmp
cld
mov
fnstcw
loop
out
push
xchg
lods
lods
xchg
rcr
or
out
jno
jecxz
or
loopne
inc
fistl
mov
insb
xlat
in
out
fldl2t
adc
fiaddl
adc
ret
subl
sub
push
aaa
fldenv
or
scas
jbe
cmp
movsb
sub
es
fistpll
sub
outsl
sub
ljmp
mov
lret
jmp
mov
into
mov
mov
push
pop
or
mov
mov
out
sti
test
insl
cmp
pop
add
lret
inc
xbegin
mov
inc
out
popa
push
dec
mov
and
cmp
inc
cmp
outsl
sub
mov
sbb
ljmp
mov
cli
mov
mov
adc
mov
aaa
or
fcmovnb
sahf
cwtl
lcall
movsb
jae
fdivl
inc
adc
jne
mov
icebp
enter
adc
cmp
adc
fdivs
aad
bound
cmp
rcl
jmp
pop
popa
xchg
mov
sbb
fidivrs
scas
and
xchg
and
dec
jl
and
lea
adc
fmuls
pop
test
in
jp
inc
lds
push
fwait
scas
lcall
pop
mov
testl
fnstcw
xor
sbb
scas
test
add
or
push
cwtl
leave
cltd
pop
adc
adc
adcl
mov
pop
adc
out
mov
add
pop
test
dec
inc
out
sbb
push
mov
mov
outsl
pop
out
mul
push
repz
mov
xchg
movups
lret
call
push
inc
fildll
bound
add
cmc
xor
mov
cmpsb
cmpb
in
icebp
repnz
fdivrs
cmp
xlat
jp
imul
adc
and
ljmp
add
dec
push
xor
mov
imul
int
mov
cwtl
ficoml
pop
outsl
sti
mov
push
jne
fdivr
xchg
arpl
loopne
push
mov
xacquire
into
xchg
cld
push
cld
out
inc
jecxz
and
aaa
jnp
cmp
xchg
gs
pop
cmp
adc
out
inc
insb
jno
sbb
pusha
jp
push
sub
jae
inc
nop
adc
sti
outsl
out
icebp
jnp
mov
insl
lret
leave
mov
inc
mov
cmp
or
in
mov
cmpl
test
or
movsb
mov
sbb
or
sub
idivl
out
jo
sub
test
push
mov
mov
test
fildl
aas
xchg
aam
insl
mov
lods
icebp
jns
sub
push
js
push
lods
pop
data16
mov
aam
xchg
jb
xchg
sbb
lcall
insb
xor
outsl
or
sub
sub
mov
in
out
shr
push
ret
pop
lods
fs
mov
mov
mov
scas
push
loope
stos
push
pusha
pushf
lret
and
adc
add
push
push
out
cmp
mov
mov
pop
sbb
fsubr
xchg
push
fstps
jmp
dec
jns
mov
lret
mov
cli
push
push
sbb
inc
or
enter
jo
mov
test
inc
add
mov
xlat
dec
push
aas
sahf
xor
inc
xor
dec
sbb
inc
mov
fsubrl
mov
data16
mov
cmp
and
lcall
enter
jle
mov
xchg
adc
mov
rorb
roll
mov
repnz
mov
cmp
fwait
data16
push
xor
cmp
mov
sbb
aad
mov
cli
std
sub
mov
dec
test
andb
ficoml
mov
cmpl
ds
mov
iret
push
cld
arpl
not
jnp
xor
mov
jp
es
out
cmp
das
test
testb
popa
or
lret
adcb
sub
ret
decb
and
mov
add
add
mov
fwait
loopne
adc
mov
sbb
add
aad
and
hlt
inc
add
push
movsl
cmp
jae
mov
ror
sti
adc
mov
insl
shl
je
mov
sub
rcl
or
lods
push
pop
push
stc
sahf
pop
movb
clc
fwait
inc
aad
aas
mov
dec
inc
daa
or
add
add
dec
ror
clc
aaa
or
imul
sbb
stc
push
fsubrp
and
push
add
outsl
in
test
mov
stc
popa
sbb
daa
popf
mull
in
clc
stc
xchg
das
les
mov
pop
pop
sbb
cmp
add
clc
aad
cltd
sub
ja
daa
mov
andl
adc
xchg
cwtl
pop
sbb
dec
ret
shrb
adc
and
dec
iret
leave
mov
frstor
and
outsl
jmp
jne
or
pop
mov
jmp
fs
sub
lret
pop
pop
repnz
ret
mov
dec
out
test
je
nop
cwtl
call
inc
cmp
dec
daa
xor
adc
push
int
jecxz
lcall
pop
gs
notl
xor
pusha
popf
stc
jmp
mov
fwait
cli
cltd
lahf
sbb
int3
sbb
push
sbb
add
xchg
ret
inc
dec
jb
dec
or
pop
push
test
xor
push
pop
cmpsl
mov
jno
sbb
jg
jle
and
sub
and
into
sti
outsb
out
push
enter
out
daa
jl
pop
inc
pop
movups
sub
cli
imul
jae
loope
or
sub
mov
imul
jmp
add
addl
mov
lods
pop
imul
add
repz
clc
push
call
fdivl
outsb
je
sub
mov
pushf
movsl
bound
mov
and
std
stos
xchg
test
pusha
sbb
cmp
push
enter
xor
std
pop
pop
xor
mov
movsl
sub
push
pop
sub
loopne
jno
je
jecxz
and
les
cmc
dec
sti
dec
mov
pop
xor
rorl
gs
out
sahf
pop
lds
fninit
mov
jmp
daa
sub
mov
mov
add
repz
aad
test
fldenv
dec
ss
das
cmp
aad
push
mov
test
mov
cmc
lods
in
jge
dec
cmpsb
in
jg
push
cmpsl
pmaddwd
xchg
adc
inc
loop
sbb
mov
movsb
sbbb
push
mov
test
mov
lret
mov
repnz
les
outsb
mov
outsl
ret
repz
pop
push
xor
mov
call
rclb
inc
pop
test
jnp
stc
pop
and
xchg
sahf
pop
mov
andb
mov
cmpb
fwait
jbe
push
sub
xor
cwtl
xlat
je
sbb
addb
aad
mov
or
idivb
mov
push
aam
into
popa
push
add
add
mov
out
scas
pop
adc
ret
mov
add
add
inc
mov
push
test
cmpsl
or
stc
inc
jns
inc
sub
icebp
das
jno
insl
filds
mov
xchg
adc
hlt
cmp
fsubr
push
es
sub
aaa
dec
sbb
lods
and
xor
aam
fcmove
push
inc
jmp
mov
out
es
fmul
divl
cmp
xchg
lods
rolb
stc
adcl
js
in
mov
mov
shll
fnstcw
mov
inc
fsubrs
dec
xchg
mov
mov
rclb
mov
xor
xchg
cwtl
or
shll
in
inc
mov
sbb
inc
pushf
mov
pop
jle
sub
fnstenv
push
push
inc
lods
mov
js
inc
jae
dec
mov
mov
lock
pop
stos
roll
out
dec
jno
sbb
das
dec
test
pusha
or
sub
and
add
stos
mov
cmp
sti
mov
sub
xor
addr16
je
jp
das
lret
ljmp
fbld
xchg
loopne
pop
lock
add
fidivrs
add
es
out
sub
scas
popa
jae
jle
fucomi
xor
mov
xor
push
add
fistpl
sub
lahf
jmp
xor
lds
and
lods
mov
cmc
sbb
dec
dec
cmpsl
lock
xchg
rol
fiaddl
imul
xorw
or
cmp
mov
jge,pt
sbb
mov
test
pop
xchg
push
jns
movsl
mov
jbe
imul
jne
xchg
sub
sub
fnsave
test
xor
adc
flds
or
aad
jp
jne
sbb
pop
dec
daa
in
lcall
mov
pop
lret
orb
xchg
inc
mov
mov
daa
clc
mov
enter
pop
add
test
cs
into
adc
sub
inc
xchg
aam
mov
imul
push
scas
jo
pop
pop
jecxz
sub
fldcw
add
jmp
jno
inc
out
pop
xchg
out
jmpw
ss
inc
cltd
adc
push
pop
jg
dec
push
and
push
mov
loopne
cmp
call
add
push
mov
push
xchg
push
iret
orb
adc
and
jge
xchg
pop
mov
mov
cmpsb
adc
lcall
aaa
lcall
or
fs
insb
adc
or
ss
stc
jmp
or
insb
push
in
adc
sbb
scas
pop
rcrb
fcomps
iret
shll
push
rclb
shl
mov
push
pcmpgtd
arpl
nop
shl
call
or
sbb
pop
or
pop
lret
in
mov
adc
sub
test
pop
pop
dec
and
je
mov
daa
sub
mov
xor
or
cwtl
mov
movsb
adc
xchg
xor
rcl
push
cmp
or
and
or
ljmp
ret
adc
xor
inc
xor
add
sub
shrb
mov
daa
cmp
cltd
sub
jl
leave
mov
jmp
adcl
cld
rcrl
stc
and
je
fs
imul
cmp
and
jecxz
jle
stos
popa
xchg
fnstcw
inc
repnz
sub
jne
mov
pop
mov
mov
push
jge
je
xchg
in
add
out
sbb
sbb
sub
cld
int3
push
icebp
xor
mov
pop
aad
lret
nop
ljmp
inc
mov
ret
xchg
adc
inc
ficompl
ret
std
sbb
pop
mov
decl
mov
mov
adc
stc
sbb
iret
inc
notb
movsl
or
scas
adc
lahf
mov
ja
fbld
in
int3
fdivr
mov
jmp
mov
mov
jno
cld
ret
xchg
push
jns
jmp
aam
sbb
adc
insb
mov
sub
and
cmp
mov
cld
pushf
adc
sub
sti
jno
push
cmpl
push
inc
insl
lds
sbb
mov
adc
pop
pop
roll
mov
test
cmp
push
inc
es
xor
imul
cs
fidivrl
or
pop
hlt
ja
leave
inc
and
fldenv
dec
xchg
hlt
les
lahf
pop
dec
sbb
mov
adc
mov
mov
scas
xor
cmp
xchg
icebp
movsb
pop
aad
push
rol
pop
pop
push
ljmp
int3
testb
lret
std
ret
sbb
mov
lea
cs
mov
jg
sub
dec
push
je
push
cmp
mov
inc
notb
dec
lods
jno
jo
test
pop
cmp
lods
ret
dec
shl
nop
aas
push
cli
sub
shrb
or
push
outsb
into
pop
loope
lret
mov
push
pop
lcall
scas
stos
les
mov
xchg
andb
mov
push
imul
add
test
clc
fsubrl
inc
je
xorl
sub
adc
int3
outsb
jmp
testb
stc
sti
or
xor
push
sbb
fwait
pop
add
mov
sarl
imul
push
lods
pmaddwd
pop
movb
sbb
dec
mov
ret
lret
mov
in
es
or
lahf
mov
add
pop
outsl
iret
test
mov
jnp
movsb
jnp
adc
xchg
pop
push
cld
dec
and
loope
inc
mov
or
mov
insb
or
iret
pop
int
inc
jmp
add
adc
push
inc
fdivrp
loope
es
movsb
cltd
mov
sbb
mov
inc
mov
jne
out
xchg
add
loopne
and
lods
add
test
mov
dec
sbb
fimuls
jb
test
adc
outsl
outsl
movsb
mov
add
roll
shl
mov
sub
jmp
into
out
cmp
add
cmp
inc
dec
mov
push
rcrb
dec
dec
sub
jo
fbld
xorb
iret
sub
rclb
cmpsb
sbb
out
xor
mov
dec
std
adc
pop
jmp
clc
add
orb
jge
in
mov
fwait
jo
sbb
loop
jae
inc
mov
cmpsb
jge
lahf
mov
lock
inc
adc
push
movsb
outsl
inc
pop
shrl
jnp
data16
mov
stc
cmpsl
jo
outsb
arpl
ret
xorb
cmp
sub
or
sub
mov
icebp
cmpsb
sub
push
mov
adc
cs
leave
dec
or
cwtl
addr16
pop
mov
adc
stc
clc
rorl
xlat
ljmp
ror
cmpl
add
mov
xlat
inc
or
or
mov
mov
ret
add
test
icebp
loop
mov
cmc
lds
push
leave
dec
les
popf
xchg
cmp
lret
insl
sbb
orl
inc
das
inc
mov
adcl
mov
test
lods
gs
push
mov
add
xorb
test
dec
inc
subb
cmpl
adcl
push
add
add
inc
lahf
scas
shlb
pop
xchg
push
add
out
stc
out
pusha
mov
sub
xlat
or
out
mov
sbb
movsb
mov
push
pop
ds
or
notl
mov
xorl
out
lock
adc
xchg
cmp
cli
xor
insl
cmp
scas
es
cmp
or
dec
cltd
adc
mov
sti
in
js
cmp
inc
mov
mov
push
mov
clc
insb
and
ljmp
bound
pop
fmull
cwtl
int
cmovl
aam
sti
add
or
and
lret
mov
mov
push
mov
std
cmp
sub
sub
push
call
daa
and
and
in
inc
arpl
xchg
sti
xchg
and
stc
out
cltd
call
xchg
push
bound
push
movsl
stos
sub
jno
mov
andl
xor
sbb
fcom
sub
loopne
and
cmp
dec
shlb
and
divb
jb
adc
cmp
ds
loopne
faddl
mov
xchg
js
mov
fcmovu
mov
push
mov
das
dec
push
lcall
jle
lret
xor
js
or
mov
imul
pop
xor
mov
insb
aam
inc
sahf
insl
sti
insl
lods
mov
xor
fisubl
or
lret
mov
inc
shlb
test
cmp
jns
xor
sahf
in
push
push
imul
inc
add
jae
cld
mov
das
mov
push
into
jb
rclb
xchg
push
mov
int3
ror
cmp
jnp
into
rorb
jecxz
push
or
lock
enter
add
mov
dec
mov
inc
pop
lds
mov
jg
xlat
shrl
shrb
lss
cltd
outsb
lahf
mov
shrl
pop
mov
sbb
xor
fcompl
mov
lods
jmp
xor
fidivs
dec
repnz
dec
xor
ss
xchg
mov
sub
incl
jo
inc
movsb
dec
aas
pop
add
cltd
xchg
hlt
push
sti
les
inc
mov
add
mov
add
push
out
daa
sbb
xor
and
cmpsl
cmc
inc
movb
xchg
into
dec
adc
test
cmp
cmp
mov
add
xor
mov
fadds
arpl
xchg
push
imul
out
dec
xchg
push
clc
fists
mov
stc
stos
leave
pop
mov
test
add
xchg
or
cli
xchg
inc
cmp
aam
hlt
push
push
mov
int3
lods
lret
in
incb
xchg
cmp
and
test
push
mov
mov
jmp
sub
pop
pop
loopne
push
and
fiadds
into
lea
jl
addl
and
aad
inc
push
popf
jno
xchg
dec
cwtl
mov
daa
sbb
push
xor
or
mov
mov
ret
mov
push
push
sbb
repz
inc
stos
mov
outsb
inc
sbb
pop
ficomps
mov
cltd
push
arpl
xlat
xchg
inc
repz
out
dec
dec
fcoms
jb
test
in
out
ja
mov
imul
jne
cmpsb
loope
mov
xchg
sub
mov
add
in
inc
cs
mov
jbe
cmpsb
mov
scas
ret
decb
frstor
insl
or
jmp
cltd
fwait
xor
or
dec
xchg
sbbb
sub
ljmp
rorl
mov
shll
push
inc
add
mov
lcall
lds
inc
pop
shlb
inc
cmpsl
mov
hlt
xor
insb
adc
popa
mov
shll
insl
mov
add
mov
jle
fstl
sbb
sub
jecxz
in
jle
xchg
scas
pop
sbb
jbe
push
inc
pop
aad
jns
push
pop
jmp
mov
movsl
shrl
fcmovbe
adc
jbe
insb
insl
lret
cwtl
mov
push
pusha
dec
idivl
aad
orb
insl
test
xchg
jp
push
cltd
movsl
mov
inc
lret
xor
lds
loope
add
loope
mov
inc
in
out
push
pop
vpmaxub
push
jge
push
adc
scas
jnp
out
inc
fs
jecxz
outsb
sbb
xchg
arpl
mov
ror
jnp
ret
pop
test
jb
faddl
les
jl
ds
repz
mov
xor
xor
popa
test
mov
adc
aam
in
fcmovnb
ss
sub
or
jmp
jb
jge
lock
mov
and
lds
cwtl
cwtl
fs
jge
sub
repnz
sbb
dec
push
loop
dec
adc
add
mov
repnz
sub
gs
sub
sbb
ret
dec
iret
in
orb
mov
into
adcl
out
xchg
xor
mov
lahf
xchg
pop
jge
push
xor
stos
mov
and
test
inc
push
push
mov
fndisi(8087
in
add
cmp
push
mov
loop
mov
ret
add
push
xchg
loopne
dec
and
test
push
inc
lret
out
xchg
push
aad
jmp
or
pop
jbe
lea
and
fisubrs
or
jp
fs
sbb
mov
les
or
out
pop
lret
repz
mov
push
inc
inc
add
pusha
xor
ss
or
idivl
loop,pn
lods
push
pop
je
or
jp
jmp
sbb
cltd
push
mov
inc
in
repz
cmp
mov
sar
scas
ret
sub
cmp
lea
inc
push
jns
adc
push
testb
fldenv
mov
clc
stos
lret
das
jl
sbb
int
jmp
test
fsubrp
cmp
xchg
shlb
imul
push
test
fstpl
sub
inc
and
push
pop
fwait
ss
add
insl
mov
loopne
ret
jge
mov
adc
dec
sub
jmp
daa
sbb
dec
cmpsb
push
mov
pop
fmull
lods
or
sub
fbstp
jae
xlat
sbb
pushf
jo
cmp
scas
sub
sbbb
xchg
pusha
outsb
fisttpl
mov
dec
xchg
gs
and
fs
stos
mov
into
in
mov
sbb
jnp
sub
sub
test
movsb
test
and
lds
in
xchg
in
mov
push
inc
xor
out
pop
mov
notb
mov
push
repnz
dec
add
or
imul
or
pop
je
jge
adc
sbb
out
sub
mov
pusha
mov
into
sbb
sub
inc
sbb
push
push
cmp
cli
fisubs
jp
xor
push
fsubrp
ss
sbb
cmp
jb
jnp
int3
and
or
in
dec
mov
add
sahf
js
xlat
mov
xchg
popf
and
push
xchg
scas
mov
add
jmp
orl
dec
in
cs
sbb
in
hlt
inc
lahf
add
hlt
mov
test
jle
lcall
shll
test
push
push
aam
loope
push
inc
jg
cmc
inc
and
out
dec
jnp
in
jne
and
and
xor
dec
cmp
cmp
or
mov
inc
pop
jne
repz
inc
inc
xor
repnz
fs
sahf
mov
mov
and
or
mov
data16
cmpb
jmp
lock
jns
and
jl
loop
adc
jecxz
mov
pop
das
jnp
andl
popa
das
sub
ret
push
inc
pop
fcom
incl
scas
orb
inc
and
sarb
xchg
fstl
es
jno
mov
xor
ds
fisubrs
or
cmp
gs
mov
fsubr
sub
jecxz
inc
popa
or
int3
cmp
int3
orl
dec
pop
lcall
jnp
mov
in
add
ret
cmp
sbbl
scas
ja
xchg
leave
fs
inc
in
movsb
cmp
shll
push
fiaddl
dec
addb
sahf
mov
shr
and
out
rcll
inc
clc
ret
repz
jae
ss
xchg
pop
xor
dec
ja
xor
mov
js
and
js
cmc
mov
or
inc
loopne
push
xchg
stos
jl
scas
xchg
sbb
jmp
inc
push
jmp
jle
inc
mov
jp
mov
adc
add
xchg
clc
sub
aad
dec
xor
enter
xchg
jb
std
and
sub
mov
subl
mov
mov
cli
mov
addl
mov
and
push
jo
dec
hlt
sbb
sti
add
test
mov
bnd
imul
in
bound
js
jbe
cmp
sti
push
stos
imul
das
aad
rcr
sub
mov
inc
xor
in
fsubl
sbb
sbb
or
push
out
jne
mov
or
aas
xchg
lahf
mov
imull
mov
out
popa
mov
std
adc
gs
arpl
mov
insb
or
adcb
push
ffree
dec
mov
add
aad
int3
rcll
lcall
cmp
hlt
fsubrp
jmp
push
cwtl
pop
inc
sub
jns
movsb
popa
stos
jg
dec
xor
sbb
cwtl
stos
aas
jae
or
cmp
movsl
pop
out
stos
xchg
jle
dec
xchg
in
xor
stc
pop
pop
std
jle
xor
cmp
xchg
out
outsb
sahf
loopne
out
add
in
xchg
dec
dec
pop
and
jl
push
fbld
sub
mov
mov
je
push
mov
sti
pop
ss
adc
pop
and
sarl
cmpsb
push
fsubl
arpl
repz
outsb
dec
out
out
in
xor
lock
ficomps
lods
cmp
push
arpl
lahf
add
mov
xor
pop
xchg
cwtl
cmc
mov
idivl
sbb
mov
xor
bound
push
push
pop
cli
outsb
jns
jp
xor
adc
fcoml
jle
adc
popa
pop
push
sbb
xor
inc
mov
xchg
orb
addr16
popf
xlat
inc
and
push
loope
inc
xchg
xchg
or
fistl
insl
clc
mov
jo
or
daa
adc
cmp
scas
faddl
push
gs
xor
scas
adc
insl
in
cmp
xor
xchg
shlb
icebp
ds
in
xor
movsb
popa
outsb
xchg
out
ja
imul
cmp
jae
jmp
add
cmc
sbb
int
mov
js
pop
push
sub
mov
in
je
in
insl
pop
jl
mov
jno
push
sbb
mov
lahf
repnz
push
fsubp
stos
rcrb
push
outsb
orb
adc
negb
jno
js
or
mov
inc
mov
lret
push
adc
inc
add
inc
jns
insb
jl
jmp
mov
mov
add
pop
pop
scas
outsl
ficoms
pop
call
xor
loope
sub
iret
and
into
mov
xor
mov
stc
mov
xor
aaa
inc
fldenv
cli
and
xor
mov
mov
add
pop
lret
out
fwait
rorb
lcall
sbb
mov
fmul
mov
push
inc
iret
fsubrs
lds
pop
ljmp
cmp
mul
fnstsw
jg
cmpsl
arpl
repnz
sahf
scas
gs
cmp
dec
adc
sub
mov
xor
and
lea
jnp
and
repz
aad
sub
mov
mov
fisttpl
or
les
lcall
pusha
pop
xchg
mov
fists
sbb
loope
out
adc
mov
shll
adc
mov
shlb
fstps
lret
loopne
and
jbe
or
rcll
leave
ljmp
jb
mov
push
fidivl
mov
shl
cs
jo
test
inc
test
adc
mov
je
cmp
negl
push
push
jnp
dec
rcl
in
sbb
jg
xchg
dec
inc
inc
pop
jne
inc
sub
imul
fs
jle
aaa
push
lahf
shll
arpl
std
xchg
fildl
cli
adc
jg
pop
jle
cmp
ret
xor
jge
push
ret
or
out
mov
cmp
addb
sub
lcall
sub
push
mov
mov
in
lahf
push
lds
xchg
mov
je
mov
je
fimull
test
push
repz
or
lods
mov
jns
mov
sti
sbb
jmp
cltd
adc
push
pxor
jp
lcall
popa
xchg
add
cmpsl
push
adc
cmc
and
insb
in
mov
shll
ret
mov
notl
or
aaa
inc
je
dec
jmp
sub
test
outsl
add
not
hlt
mov
xchg
iret
idivb
push
nop
cmp
int
jl
rcr
scas
and
cltd
fcomps
sub
xchg
cld
lea
add
aaa
sbb
clc
jns
loopne
xchg
pop
cld
es
es
leave
adc
jno
xchg
xchg
inc
add
xor
iret
addr16
fwait
cmpsb
inc
xchg
leave
and
sub
xor
lahf
lds
cld
adc
mov
cltd
push
mov
dec
add
clc
inc
movl
test
neg
mov
add
lret
push
call
arpl
mov
sahf
mov
or
add
jns
and
push
mov
scas
stos
sbb
dec
adc
adc
clc
mov
das
mov
enter
jp
dec
aad
inc
and
hlt
loopne
jge
fldt
das
xchg
repz
nop
lds
lods
pop
pop
stos
xchg
and
and
xchg
mov
insb
pop
dec
popa
xor
jnp
mov
cmp
mov
inc
jns
mull
mov
cmp
jo
sub
rorb
inc
scas
mov
cwtl
mov
mov
movsb
push
repnz
and
cmp
inc
xchg
test
sarb
cmp
inc
mov
xor
fsts
into
mov
push
mov
mov
fs
push
inc
xor
dec
add
loope
imul
jns
push
or
popa
fimuls
roll
pop
dec
dec
daa
push
jl
iret
pop
inc
cmp
ljmp
cmpl
in
jb
fstl
sbb
call
in
jp,pt
cmp
lock
jl
cmp
jmp
jo
mov
int3
pop
sub
push
jo
stc
lahf
jno
adc
movsl
outsl
je
add
inc
and
adc
daa
leave
jge
js
pop
mov
and
push
aas
mov
add
shll
movsl
lahf
push
ror
jmp
jge
mov
jne
arpl
xlat
loopne
lret
jecxz
jno
arpl
push
cmp
test
js
mov
mov
outsl
sbb
das
jae
dec
push
lret
push
shl
lods
ljmp
aas
data16
out
je
sbb
jecxz
inc
xchg
inc
jmp
sbb
push
nop
test
repz
decb
push
out
cwtd
lret
sbbb
lock
sbbl
mov
gs
push
sahf
push
dec
jg
push
das
push
jge
std
dec
pop
xor
out
push
fwait
sub
movsb
loopne
fmul
stos
inc
data16
lahf
sbb
ljmp
repz
stos
insl
cltd
or
and
push
adc
mov
outsb
aaa
aas
jns
stc
lahf
push
pop
popa
push
into
sub
movsb
mov
sbb
ret
cltd
mov
dec
lock
add
sbb
aaa
es
cltd
clc
sub
nop
pop
mov
mov
mov
jle
xchg
addr16
sbbb
stc
add
in
sbb
jl
push
scas
es
inc
into
add
xchg
push
cli
ja
aad
fs
nop
adc
addr16
pushf
ret
loope
xchg
popa
mov
push
test
cs
adc
sub
sub
roll
adc
pop
test
cmp
or
das
xor
enter
mov
fists
mov
mov
push
jl
pop
in
pop
or
or
adc
shlb
aad
sub
adc
fstpt
push
xor
rcl
add
or
mov
or
jno
andb
mov
daa
int
jl
fs
movsl
inc
mov
lods
rolb
mov
arpl
das
fdivr
xchg
ficoms
adc
sbb
mov
or
sbb
or
xchg
outsb
std
sbb
lret
addl
stos
idivl
cwtl
mov
inc
sub
rcr
out
mov
add
pop
fisubrs
aaa
popf
mov
das
pop
sbb
rcrl
push
sub
mov
push
dec
lds
cli
test
cmpsl
jo
out
dec
xlat
sbb
inc
repnz
inc
xor
mov
sti
xchg
and
inc
repnz
sahf
dec
mov
mov
in
sub
jae
mov
lods
aas
addr16
in
jp
cmpsl
movsb
repnz
sbbb
jmp
xor
pop
mov
subl
mov
xor
jl
xchg
das
add
out
add
mov
pop
ds
cmp
lahf
mov
pusha
add
pusha
inc
fwait
das
stos
sub
dec
pop
aas
mov
jle
or
push
inc
out
into
ret
nop
xchg
and
mov
inc
fisttpl
rorb
int
and
lahf
pop
cmp
cmpsb
arpl
packssdw
adc
fsubrs
dec
cmpsb
add
andl
xchg
xor
pop
je
cmp
clc
mov
out
fnstsw
lahf
push
out
stos
and
lods
leave
inc
jne
popf
sti
mov
sub
std
cmp
sbb
push
in
xchg
and
aad
inc
das
iret
into
and
adcl
int
out
scas
ss
xchg
mov
ss
mov
enter
aas
mov
sub
fstl
or
sahf
cmp
and
add
fisubrl
lock
loop
push
stos
mov
inc
jns
cltd
jl
mov
incl
test
sub
adc
add
or
sub
in
sbbl
stos
mov
cwtl
adc
mov
clc
sbb
bound
pop
ss
xchg
and
sbb
shlb
cld
ds
stos
sub
xor
stos
inc
push
push
xor
jb
ror
int3
jge
int3
cmpsl
sahf
jne
adc
pop
jo
and
pop
ret
and
into
daa
mov
pop
aad
fisubrl
popa
lret
out
fistpll
xchg
sub
cmp
mov
xchg
lock
mov
repnz
jno
stc
roll
dec
add
cltd
les
in
xor
outsb
adc
mov
sub
cltd
in
das
icebp
push
push
or
in
cmp
ret
push
jp
inc
xchg
sbb
lret
insl
push
aad
data16
jl
mov
arpl
dec
xchg
and
lcall
mov
mov
jae
add
cmp
outsb
ror
mov
data16
jecxz
dec
call
lret
mov
fiaddl
aas
fiadds
repz
sub
jno
or
dec
push
test
jb
xor
or
xor
addb
nop
push
fcoml
call
add
cwtl
lds
je
mov
mov
or
pop
gs
ror
movsl
popf
fldcw
push
fs
push
repnz
shlb
lds
push
mov
jne
jo
je
mov
lcall
rcl
scas
pop
insb
notb
mov
int3
shl
iret
sub
outsb
ret
dec
push
ficomps
push
pop
stos
shlb
cld
in
push
lcall
jnp
xchg
insb
test
fisttpll
xor
xchg
inc
pop
movsb
int3
les
jle
pop
or
popf
xchg
shrb
scas
sub
add
ds
push
xchg
xchg
aaa
fwait
inc
dec
sub
insb
mov
push
add
out
out
push
testl
jb
or
inc
pushf
les
fs
xor
repnz
or
loopne
dec
xchg
dec
shlb
mov
int
imul
cmp
in
or
add
cs
xchg
repnz
or
rorb
stos
dec
pop
push
std
cwtl
inc
jnp
mov
pop
push
mov
dec
das
push
es
shr
int
lret
cltd
xchg
xchg
mov
mov
dec
clc
add
sbb
sbb
mov
xor
daa
jno
ficoms
daa
jnp
aas
or
jo
jl
mov
ret
mov
cmp
inc
mov
jecxz
out
scas
or
loope
das
fwait
pop
mov
xchg
fwait
pop
sahf
mov
push
and
icebp
test
mov
push
cmp
es
sbb
dec
scas
pop
and
out
fdivrs
mov
inc
out
dec
test
pop
nop
fdivrs
stc
aam
dec
cs
inc
cltd
xor
cmp
jne
arpl
mov
jecxz
mulb
xor
lahf
dec
jo,pt
mov
and
pop
sub
cld
inc
xlat
dec
icebp
inc
add
das
int3
mov
insl
addr16
and
jge
xchg
loope
sub
mov
stc
cltd
test
cmp
pop
xor
shrd
inc
dec
or
call
dec
cs
mov
cmp
loop
mov
sub
loopne
aas
mov
push
and
adc
insl
int
adc
push
rcr
inc
in
lret
xor
jge
cli
xchg
fbld
loope
pop
imul
icebp
out
inc
xchg
mov
sub
inc
jge,pt
ret
adc
xchg
lea
adc
inc
jecxz
das
loop
cmp
adc
pop
adc
ret
mov
add
test
lods
insl
test
mov
ljmp
mov
push
dec
aaa
mov
push
inc
pop
jns
dec
divl
push
mov
push
and
mov
xchg
popa
fwait
xchg
or
popf
sub
jg
fcmovne
cmp
add
nop
push
jnp
test
inc
or
add
lret
in
jge
scas
and
mov
movsl
scas
sbb
or
ret
aas
mov
in
mov
mov
mov
or
push
push
mov
arpl
push
push
xor
cmpsb
inc
rclb
cmp
jmp
jae
pop
sbb
adc
jns
mov
inc
sbb
xchg
in
fbld
xor
dec
mov
dec
lods
jge
call
shll
dec
sti
rolb
lahf
xor
ffree
or
xchg
mov
pop
dec
repz
inc
test
or
mov
jnp
mov
sbb
inc
xor
xchg
jl
into
fisubrl
push
jne
inc
daa
or
in
cmpsb
pop
jbe
rcrl
dec
or
subl
je
or
arpl
pop
jbe
push
sbb
pop
add
mov
xchg
dec
pop
test
push
dec
faddl
ljmp
mov
les
lret
enter
mov
mov
pop
dec
popa
adc
mov
sbb
stos
push
mov
cs
vpshaw
and
clc
jl
iret
xorb
xor
adc
cmp
sub
aam
ss
xor
mov
push
xchg
cmp
enter
daa
sub
mov
xorl
push
mov
shll
mov
inc
dec
add
cmp
fisttpl
mov
insb
add
push
add
repz
inc
cmpb
jp
mov
ret
cmovge
lcall
or
dec
aam
mov
daa
add
call
subb
addl
shl
push
sbb
dec
iret
stos
sbb
cltd
es
cli
rolb
iret
adc
adc
and
rolb
add
gs
pusha
std
sbb
pop
aaa
in
pop
fwait
dec
push
adc
add
push
xor
cltd
lret
mov
xor
dec
mov
bswap
add
push
fcoml
sbb
pop
adc
fnsave
lret
mov
imul
xor
cld
jae
stos
lcall
sbb
cwtl
out
pusha
push
adc
fwait
pop
loop
orl
repz
mov
and
push
or
lea
fwait
pop
in
into
sbb
mov
cmp
add
je
loope
into
ss
inc
imul
xchg
in
aas
add
into
sbb
int3
pop
popa
ja
ret
add
cmp
fnstcw
cs
push
push
in
fdivrl
dec
sbb
and
jns
xor
xor
mov
mov
scas
cmp
push
or
popf
outsb
jg
imul
mov
cmpsb
out
stos
ret
jbe
mov
int3
push
inc
add
adc
repnz
aaa
lahf
pop
outsl
jle
inc
inc
adc
lods
mov
pop
pusha
mov
mov
xor
push
jecxz
ret
fsts
mov
sub
push
sub
pop
mov
divl
test
jne
lods
insl
rorb
pop
popa
lea
sbb
sbb
enter
outsb
out
sti
in
shl
sbb
push
xchg
push
adcl
ftst
pop
xor
mov
and
pop
lcall
and
js
sahf
xchg
loope
aaa
lock
xor
inc
mov
stc
stc
imul
cmpsb
and
pushf
inc
push
or
jge
lret
ljmp
lds
inc
pusha
pop
std
data16
stos
sbbb
xor
jle
out
ds
rcrb
mov
inc
xchg
add
stos
cmp
test
bound
sbb
push
sbb
xor
xor
dec
ja
pop
mov
and
aaa
loope
and
lret
mov
inc
incl
lret
add
out
jl
dec
add
fdivs
mov
int
fistpl
lret
stc
icebp
inc
inc
jge
gs
inc
lret
ret
cli
lods
mov
jg
loope
sub
adc
je
repnz
sarb
or
rcrb
hlt
fidivrs
lock
js,pt
stc
in
lahf
mov
insl
dec
cmp
orl
push
shll
imul
jns
imull
jge
ja
mov
jp
adc
pop
pop
lahf
test
pop
mov
adc
sti
sahf
adc
fimull
jbe
inc
inc
pop
adcb
sub
es
or
mov
test
xchg
cmp
push
and
xchg
ja
mov
jl
xorl
fnstcw
pop
add
mov
js
stos
xchg
sub
lock
test
xor
out
lds
or
push
adc
rorb
pop
aam
sbb
out
jo
pop
movb
push
mov
popa
add
aad
fisttpl
pop
jb
les
push
mov
pop
or
add
lods
mov
test
add
jnp
icebp
je
scas
loopne
enter
divl
popf
popa
dec
out
ss
jmp
sbb
inc
ljmp
xchg
push
lock
incl
mov
cmp
jl
shl
lret
mov
popf
rorb
jo
jl
daa
mov
ret
push
lds
insb
repnz
cmp
and
stos
lods
push
sar
xchg
mov
scas
xchg
pop
mov
sbb
mov
mov
lret
icebp
xchg
pop
jmp
inc
jnp
and
xchg
dec
imul
push
sbb
fsubrs
pop
add
into
and
mov
cli
cmpsl
iret
push
popf
mov
and
ljmp
mov
fstl
jl
push
mov
pop
push
jl
sub
xor
cmp
jno
push
ljmp
push
sub
imul
adcl
sub
shrb
xchg
push
insl
mov
lret
pop
hlt
dec
outsl
leave
nop
movsl
push
pop
mov
mov
jmp
push
mov
xor
out
outsl
insb
test
mov
mov
les
dec
repz
push
pop
and
push
sahf
pop
ffreep
int3
rcll
sbb
shrl
in
in
fwait
aad
inc
ja
add
fcmovbe
pushl
icebp
sub
jmp
and
xchg
mov
and
cmpsb
sbb
sbb
push
jecxz
push
mov
inc
inc
add
jmp
lds
shrl
add
mov
mov
dec
cmp
test
and
lahf
push
ret
add
mov
jb
pop
cmp
mov
or
mov
int
mov
push
pusha
rolb
xor
mov
daa
xchg
gs
cmp
insb
xchg
jl,pn
sub
xchg
jb
mov
cmpb
shl
push
int3
or
push
loopne
scas
fnsave
cli
sub
std
mov
lods
jnp
je
xlat
push
out
jg
fmull
int
scas
add
rcrl
fbstp
pop
loop
push
out
daa
imul
lods
aad
cmpsb
xchg
dec
fbstp
out
sub
fwait
push
mov
test
test
out
movsb
pop
in
push
inc
mov
mull
in
mov
out
out
jmp
jg
mov
imul
mov
rolb
jns
mov
lahf
cmp
aas
scas
cmp
xchg
dec
add
xchg
push
ficompl
test
mov
jb
das
fsubrs
popa
xor
pop
push
sahf
scas
push
xchg
push
pop
arpl
or
cs
mov
rcl
loope
xor
js
xor
and
mov
mov
mov
cmc
mov
ds
xchg
mov
sub
call
repnz
cmpsl
mov
mov
cmp
jge
push
adc
inc
xor
rcl
aad
add
xchg
mov
push
ljmp
repnz
testl
dec
xor
sub
rclb
sbb
les
pop
cmc
mov
jmp
lcall
cld
in
or
imul
icebp
push
adc
dec
data16
fsubrs
push
sbbb
aaa
adc
push
sub
add
push
mov
sbb
es
or
and
neg
hlt
inc
nop
daa
jae
push
or
out
bnd
test
js
aas
stc
cmpsb
les
popa
lcall
iret
js
popf
pop
dec
sbbl
sahf
dec
dec
xchg
mov
mov
and
push
sbb
mov
push
aam
dec
dec
sar
mov
jle
fs
xchg
inc
jp
jo
mov
jnp
pusha
jnp
jns
xchg
or
call
pusha
mov
arpl
mov
and
data16
pop
adc
sub
xchg
add
or
push
jns
les
loope
imul
int
mov
repz
cmp
jns
add
sbb
lret
dec
mov
xchg
push
add
xchg
inc
xor
lret
in
push
stos
dec
fnstenv
or
sub
in
pop
lahf
xchg
enter
inc
idivl
fistl
inc
pop
cs
sub
imul
mov
fnstsw
lods
rcl
sti
cs
cwtl
inc
std
cmp
sub
pop
jo
lods
and
lods
push
add
sbb
lahf
pop
mov
or
gs
add
xor
arpl
int3
adc
sbb
incb
xchg
mov
loop
xchg
sahf
and
aad
stos
add
jle
aam
adc
xor
adc
lea
cmpsl
sub
leave
jb
stos
cmc
mov
and
jl
dec
mov
pop
es
mov
jle
repnz
das
xchg
mov
lock
push
ret
pusha
mov
mov
xchg
xchg
sahf
enter
into
into
sub
or
sbb
shrb
aam
push
ret
movsb
cmpsl
test
clc
out
push
and
mov
add
sbb
or
xchg
pop
icebp
xchg
aas
mov
xor
psubusb
jg
scas
clc
in
dec
mov
dec
enter
jmp
xchg
movsl
xlat
mov
icebp
hlt
sahf
in
and
xor
or
xchg
cld
jo
aam
or
dec
icebp
sub
jmp
xchg
data16
dec
scas
das
ds
cmp
mov
test
push
scas
pop
dec
xor
adc
mov
call
imul
and
cmp
pusha
rorl
test
rorb
jnp
mov
mov
fdiv
hlt
xchg
sti
add
das
popl
cmp
mov
dec
lcall
xlat
into
jb
loope
push
and
loopne
sub
clc
ret
cmpsb
xor
inc
mov
sti
in
pop
cmpb
aad
das
mov
jno
int
jecxz
mov
jbe
jno
fnstsw
mov
addr16
aas
jge
lret
iret
ja,pn
lds
stos
in
std
and
hlt
mull
mov
cmc
testb
loop
nop
iret
wbinvd
inc
aad
mov
js
jmp
je
cld
rcll
loop
xchg
jb
pusha
aad
stos
pop
movsl
xchg
popf
aas
add
stos
sbbl
push
sbb
cmc
imul
push
rol
jge
fwait
inc
testw
pop
inc
in
cmp
xorb
add
pop
xchg
jmp
cs
push
xor
fidivs
jg
pushf
inc
push
jno
loop
cmp
loopne
repnz
test
cmpl
mov
lret
sub
cmpsl
adc
lret
or
add
and
push
imul
sub
test
xchg
sub
lahf
mov
ja
jne
ret
scas
xchg
fidivl
into
ror
mov
les
or
das
ffree
mov
int
adc
rol
dec
pop
rcrl
arpl
lds
repnz
cmc
mov
mov
out
cli
stos
mov
sbb
cmc
shlb
jne
into
mov
test
mov
jg
iret
les
sub
aad
adc
stc
cmp
cmp
pushl
jecxz
pusha
iret
xor
addr16
add
pop
cld
pop
mov
repnz
mov
jle
adc
aam
jb
scas
loope
push
mov
adc
arpl
sub
cmp
pop
mov
jnp
lods
jo
sub
fwait
test
jl
cmp
or
sbb
jns
jb
adc
enter
sbb
sub
xchg
pop
mov
popa
jae
es
shrl
inc
fidivl
push
repz
sbb
adcb
lret
cmpsl
ljmp
xchg
pop
sbb
add
xchg
push
and
inc
daa
clc
cs
adc
lahf
roll
insb
mov
jns
mov
pop
pop
addr16
mov
mov
xorb
add
xchg
inc
in
xchg
inc
mov
jae
movsl
adc
div
es
test
std
mov
cli
push
xor
lret
sbb
outsl
jno
jne
add
push
sub
xor
sbb
ss
add
xchg
outsb
adc
lcall
pop
data16
sub
dec
cmc
clc
es
push
push
sbb
jmp
mov
push
into
jmp
lcall
jecxz
dec
pop
daa
pop
js
adc
lds
insb
lret
je
push
aam
jns
jle
pop
lret
sub
repz
ds
aam
les
rcll
scas
jae
lret
sti
insl
jbe
ljmp
xlat
mov
imul
inc
imul
xchg
icebp
cmc
fidivrl
push
push
stc
inc
sub
lods
adc
fistpl
stc
out
sahf
mov
test
je
fsubrs
xchg
movsb
fdivr
pop
sbb
insb
add
out
movsb
addr16
and
ja
cmp
into
rorb
adc
fiadds
mov
movsl
sub
mov
push
cmpsb
push
mov
push
inc
lock
pop
shll
xlat
xchg
push
rorl
call
aad
pop
ljmp
inc
xchg
and
mov
js
mov
enter
dec
sub
into
mov
out
cmpsl
pushf
inc
xor
imul
test
mov
sbb
dec
es
mov
or
push
mov
sub
daa
aas
dec
pop
cs
xchg
lock
mov
fwait
jl
cmp
pop
test
ljmp
lahf
jnp
xchg
cltd
movl
jl
push
jb
out
xlat
xchg
gs
xor
iret
lcall
in
ja
fst
jbe
or
addr16
imul
int
or
es
xchg
or
mov
and
out
cltd
test
clc
push
mov
jne
std
push
or
ljmp
push
in
loopne
hlt
test
xchg
inc
fldt
inc
mov
or
aam
cs
dec
sarl
push
cwtl
mov
enter
lods
adc
jno
das
mov
mov
and
iret
cmpl
sbb
mov
push
wbinvd
xor
or
push
xchg
pop
stc
ds
shll
loop
gs
icebp
imul
jae
pop
cmp
insb
frstpm(287
push
iret
les
fxch
stos
aaa
cltd
mov
xchg
push
arpl
dec
sarb
icebp
fidivrl
xchg
scas
or
mov
xchg
aam
push
xor
shrb
popa
jne
test
or
push
out
adc
jo
sbb
dec
stos
pop
jne
pusha
mov
rcll
sub
aad
lds
adc
mov
shr
pop
les
das
fwait
xchg
push
scas
repz
mov
sbb
leave
mov
aaa
inc
mov
mov
in
sbb
leave
lcall
les
xchg
daa
rol
daa
mov
or
mov
in
inc
inc
jle
iret
sub
adc
push
sti
dec
xchg
sub
cltd
in
dec
ds
mov
aad
lahf
gs
aas
cwtl
jge
jns
hlt
xchg
cmp
popf
sbb
insl
xor
jg
push
mov
es
add
push
fs
pop
rcll
rolb
cs
push
pushf
aad
cs
test
dec
jo
cmpsl
callw
push
sub
jl
push
sub
dec
cwtl
push
lcall
xchg
inc
iret
aad
xchg
add
mov
add
out
mov
add
xor
lods
test
xchg
daa
or
push
js
push
or
lods
incb
dec
mov
ds
insb
jmp
mov
cmp
fisttpll
in
push
in
mov
cmc
imul
or
mov
pop
cmp
stos
lock
inc
sub
jmp
fmull
add
out
in
lods
add
imul
outsl
mov
mov
add
imulb
aaa
jns
mov
dec
xchg
imul
xchg
jg
nop
out
fwait
inc
mov
movsl
xchg
ret
insb
pop
and
dec
bound
ds
push
adc
mov
cmp
rcrb
movsl
pop
adc
daa
pop
push
mov
nop
mov
and
pop
loopne
repz
and
sti
out
mov
pop
ja
mov
add
or
mov
js
dec
iret
adc
rcrl
sub
sbb
adc
cli
jb,pt
sub
and
repnz
je
mov
cmp
mov
add
xchg
dec
das
testl
aam
out
jg
jns
pop
cmp
mov
xor
cmp
sub
push
dec
mov
inc
adc
pop
mov
leave
pop
cltd
cmp
jl
push
push
and
dec
xchg
inc
pushf
inc
clc
into
call
or
call
pop
fwait
loopne
push
add
data16
fcomps
xchg
adc
jg
jns
popa
pop
in
lahf
mov
cs
jne
add
push
jno
mov
pop
sbb
xchg
imul
adc
mov
mov
xlat
or
push
xor
pop
out
orb
jecxz
push
repnz
out
pop
xor
jl
std
icebp
xor
rcrl
pop
cltd
and
insb
cli
xchg
in
imul
mov
shrl
fwait
int3
fidivrl
cmp
jg
popf
cld
jmp
daa
mov
cmpsb
mov
pop
push
cmpsl
sbb
push
xchg
nop
xor
je
repz
cmp
fadd
mov
xor
stc
lods
jmp
imul
aaa
pusha
cmp
inc
add
fisttpl
in
cmp
sti
clc
and
or
gs
fistpll
mov
pop
adc
out
adc
hlt
push
lret
push
mov
sub
jge
shll
lods
push
add
inc
sub
and
xchg
push
adc
out
xor
pop
add
jne
mov
loopne
push
insb
mov
sbb
and
cmp
mov
sub
bound
xorb
jne
mov
movsl
push
aaa
push
dec
fldenv
mov
push
sbb
popa
or
aad
jnp
lods
js
mov
rorl
pop
in
sti
fwait
adc
fsubs
fstp
add
sub
and
out
add
sbb
into
cs
inc
shlb
mov
inc
ret
pusha
test
jno
lods
imul
clc
loop
pop
jl
and
sbb
cmpsl
xchg
jo
and
or
push
inc
push
cld
loope
testb
mov
or
mov
or
push
pop
stos
mov
dec
pop
jge
lcall
dec
daa
rclb
and
pop
test
xlat
int3
dec
sub
or
cmpl
jb
mov
mov
in
and
xor
jnp
sbb
call
adc
loope
push
and
int
jge
imul
mov
movsl
mov
xchg
rorb
dec
psubsb
rcll
mov
push
xchg
inc
mov
rorb
imul
lods
outsb
pop
push
cwtl
sub
pop
mov
mov
xor
int3
frstor
pop
dec
or
aas
ljmp
popa
add
shl
loop
push
sub
cmc
adc
lds
dec
cmpsl
adc
ret
cld
pop
js
add
ja
cmp
imul
mov
cmp
dec
bound
in
call
and
int
adc
push
jl
test
or
and
push
or
xlat
jl
cltd
in
and
stos
mov
lahf
test
jmp
sbb
fs
mov
xchg
pop
mov
mov
push
roll
test
repz
int3
adcb
dec
or
scas
push
sbb
cmpsl
pop
popa
fmull
xchg
pop
and
mov
cmp
and
mov
sbb
or
mov
mov
std
push
lds
leave
stc
sbb
rcrl
enter
fnstsw
jb
subb
add
mov
inc
or
inc
hlt
jge
insl
and
jae
into
dec
cmp
or
jmp
stc
in
aas
sub
pop
and
push
iret
mov
jg
std
or
push
xor
mov
into
jmp
popf
jmp
xchg
fwait
mov
movsb
sbb
loopne
inc
hlt
ja
jnp
cwtl
and
sarb
ss
das
sbb
out
xchg
mov
sub
add
icebp
add
clc
push
repnz
mov
bound
je
mov
xchg
push
arpl
adc
mov
stos
inc
imul
push
cltd
cld
xchg
iret
cmp
loopne
sahf
inc
inc
mov
sbb
lret
mov
pusha
cmp
pop
xor
dec
cmc
mov
jb
pmulhw
mov
ja
addb
loope
jo
adc
dec
push
dec
js
sub
inc
cmp
mulb
adc
pop
sub
pop
clc
and
xchg
imul
rcrl
push
das
call
xor
mov
mov
out
xlat
xchg
pop
scas
xchg
mov
fwait
clc
lds
popf
xchg
push
int
cmp
div
loopne
test
sbb
inc
pop
or
out
or
jbe
mov
mov
daa
shlb
xlat
inc
cwtl
push
xchg
lds
mov
mov
mov
add
sbb
fidivrl
sti
or
jge
pop
jmp
cmp
mov
das
subl
sub
enter
test
ret
repz
xchg
mov
and
push
popa
pop
xchg
jo
mov
mov
call
mov
negb
jno
dec
sbb
ss
inc
push
mov
and
push
mov
scas
fdivrs
out
dec
popa
sub
test
adc
cmpsb
enter
mov
and
sarb
push
dec
iret
shll
dec
xchg
or
jecxz
test
xor
pop
fstpl
cld
ljmp
sahf
mov
mov
ret
cld
and
lods
fcomip
arpl
ret
test
hlt
mov
out
rcrb
mov
dec
jnp
leave
ficomps
negl
and
iret
sbb
push
fnstcw
and
pop
mov
push
out
push
cmp
and
jp
mov
in
xorb
mov
je
insl
scas
faddl
sbb
jb
jg
jp
pop
push
fwait
lods
mov
and
pop
push
lahf
mov
outsb
dec
les
jge
jno
inc
std
push
push
stc
xor
into
popf
ds
fidivs
lock
mov
lock
add
sub
addl
dec
lods
sub
mov
imul
sbb
lahf
pop
mov
dec
shl
ret
xor
enter
inc
jne
call
push
popa
fildll
fistl
jp
loopne
push
mov
or
mov
rorl
call
sahf
in
fwait
popl
aam
jg
sbb
aad
scas
and
popf
pop
xchg
fistpl
lods
fistps
out
or
out
jmp
roll
rorb
insl
sub
dec
ss
cwtl
add
out
out
mov
rcl
cmp
sbb
outsb
std
jp
xchg
sub
or
jge
jbe
jle
cli
sub
rclb
xchg
add
mov
add
jne
push
push
rcl
lahf
pop
xchg
cmp
and
adc
or
mov
arpl
addb
dec
aad
imul
push
hlt
push
pop
pop
das
pop
loopne
cltd
jge
insb
loope
ficoml
repz
xchg
adc
filds
add
xchg
cwtl
das
cmp
or
push
xor
repnz
movsb
pop
fistps
mov
pop
std
push
adc
jl
clc
dec
adcl
or
lea
imul
push
add
dec
dec
daa
xchg
xchg
inc
mov
mov
add
jecxz
mov
sti
nopl
and
stos
cmp
scas
jbe
cmp
adc
lock
sbb
mov
adc
mov
add
cmc
dec
pop
inc
gs
mov
adc
jbe
sbb
mov
and
sub
dec
test
xchg
mov
es
stc
outsb
lds
jb
rcll
xorb
cmp
pop
pusha
lods
mov
mov
mov
mov
mov
lods
test
add
js
daa
jmp
xchg
jae
push
adc
leave
jp
orb
xchg
subb
xchg
jge
xchg
pop
mov
mov
and
mov
mov
push
ss
aad
inc
insl
xchg
shlb
and
push
test
xchg
jno
test
outsl
xor
jns
lds
inc
and
daa
dec
movsb
icebp
adc
lret
sub
jmp
add
sahf
adc
ret
loope
mov
fildll
add
mull
test
push
push
popf
and
push
push
aas
jmp
mov
sub
mov
pusha
lret
push
imul
jecxz
call
test
stc
idivl
adc
push
or
in
sbb
xchg
lock
mov
fsubrp
shrb
cmp
inc
dec
lret
inc
mov
mov
mov
ja
outsl
sahf
and
cltd
mov
add
js
icebp
sti
jle
hlt
loop
pop
cld
das
sahf
test
xchg
fwait
lret
and
inc
pop
cwtl
mov
sub
loopne
jns
cmp
cltd
dec
repz
rcrb
lcall
icebp
pushf
mov
mov
add
cmp
stos
mov
call
jge
fwait
stos
pop
sbbl
pop
lahf
and
fstl
sub
rcll
mov
and
aam
push
mov
das
inc
shlb
fidivl
dec
imul
mov
mov
xchg
dec
cmc
in
gs
imul
adc
inc
dec
sub
xor
outsb
mov
and
rorb
pop
shrb
iret
iret
cmp
push
test
dec
xor
xorl
push
dec
jecxz
lret
mov
aam
sbb
inc
popa
jns
push
mov
cli
lcall
dec
xchg
in
xor
jb
cmp
jle
sub
and
mov
lock
jne
repnz
push
mov
int
in
sbb
xor
sbb
jmp
or
loop
and
out
cmp
mov
push
call
xor
lds
xchg
lret
xor
leave
xchg
jmp
cmp
cli
mul
fmulp
pushf
stc
push
xchg
pop
xchg
jp
xor
cli
adc
sbb
scas
ror
inc
nop
daa
mov
push
imulb
add
shll
sbb
mov
add
dec
sub
add
push
out
pop
mov
stc
mov
push
sub
adc
sub
int
rcrl
adc
insl
mov
xor
je
icebp
aas
or
test
imul
jbe
fdivp
jae
cmpb
pop
and
mov
mov
hlt
fmul
dec
add
lods
xchg
jge
dec
mov
jns
hlt
pop
rorb
call
in
loope
cld
test
mov
mov
adc
xor
and
sub
inc
and
sti
das
jge
stos
out
adc
dec
shlb
push
bound
pop
sub
and
or
or
std
aam
out
dec
pop
jno
aaa
les
mov
ror
cli
xchg
fisttps
xchg
lods
lea
out
dec
popf
in
addr16
pop
rolb
pop
xchg
hlt
push
in
sbb
and
mov
ret
iret
xor
dec
xchg
push
cmp
imul
movsb
shrb
dec
arpl
insl
lret
pop
shr
outsb
nop
mov
shrb
push
mov
popf
sti
jnp
lds
les
xor
fs
ficompl
loope
mov
add
int
inc
rolb
xchg
cmp
lods
fyl2xp1
lret
std
cmp
xor
call
in
aas
and
sbb
cmp
shll
movsb
dec
in
jl
sub
mov
or
aas
lock
pop
ret
cmp
jne
push
jmp
divl
and
and
test
add
ljmp
outsl
inc
push
iret
shlb
jno
sbb
in
test
in
out
pop
in
arpl
adc
pushf
adc
jns
push
pop
xlat
shr
dec
inc
xchg
bound
xlat
mov
xorb
add
fisubl
jg
xor
loop
mov
push
inc
xor
test
pop
inc
nop
mov
aas
push
sbb
loope
ja
js
lea
stos
subl
push
xor
push
ljmp
loopne
frstor
stos
mov
daa
push
mov
mov
into
mov
xor
xchg
lret
int3
sbb
mov
push
fldt
push
jo
test
cs
stc
inc
add
fdiv
xchg
enter
xor
dec
dec
movsl
pop
xor
repz
ds
mov
push
sub
push
push
or
es
push
pop
pop
faddl
xchg
jle
xchg
rcll
xchg
cmp
mov
imul
insl
lcall
adc
enter
lret
shl
jge
das
push
mov
push
test
adc
shrb
xor
leave
shrb
dec
dec
in
aas
lods
lahf
add
out
xchg
aaa
fisubrs
emms
xchg
jle
dec
out
mov
insb
mov
insb
dec
bound
cwtl
jbe
out
cltd
faddl
mov
fstpt
popf
dec
fnstcw
inc
aad
fidivs
ss
cmpsb
jle
pop
std
imul
adc
mov
mov
pop
mov
dec
lahf
movsl
xchg
imull
pusha
pusha
arpl
orb
xchg
dec
cmp
ljmp
mov
pop
xchg
cs
dec
loopne
jnp
dec
into
rorb
and
lock
push
push
push
in
add
cmp
adc
dec
in
int3
xchg
push
imul
imul
call
mov
arpl
xchg
js
insb
cmpsb
int
and
xchg
sub
in
inc
mov
cmpsl
jne
sbb
mov
sbb
pop
xor
or
jl
dec
pushf
adc
js
popw
mov
mov
repnz
or
fstpt
push
mov
mov
cmpsl
lret
lcall
inc
dec
mov
je
and
cmp
and
push
or
dec
movsb
cs
cmpsl
mov
clc
fdiv
xlat
dec
and
or
cmp
cmc
repz
sbb
lret
lea
pop
in
xchg
dec
pop
pop
xchg
mov
test
pusha
imul
outsl
and
mov
sahf
sbb
mov
xchg
xorl
and
out
in
repz
pop
adc
sbb
xor
lahf
xchg
repz
dec
fidivs
and
xchg
sub
xor
cld
or
loopne
jns
jo
sar
dec
in
cld
push
inc
push
add
mov
pop
jnp
es
icebp
cmp
les
adc
mov
nop
popa
cs
imul
or
call
sti
jle
repz
push
pop
cli
repz
clc
hlt
andb
sub
xor
nop
test
push
mov
sbb
xor
push
mov
jno
popf
arpl
enter
sub
ret
out
inc
and
mov
aaa
mov
mov
lds
push
stc
xchg
test
dec
ds
push
dec
cmp
arpl
fadds
outsl
pop
adcb
mov
xor
outsb
mov
push
popl
jmp
cmp
pop
cld
leave
mov
sub
mov
ret
cmpsl
mov
cmp
addr16
in
cwtl
xor
mov
das
or
daa
out
into
testl
subb
or
test
sbb
or
mov
xor
or
mov
and
xchg
mov
adc
sbb
pop
call
adc
or
enter
in
add
mov
insl
xor
jne
cmp
cld
sbb
pop
mov
jo
mov
mov
cmpsl
mov
dec
ds
xchg
push
mov
sub
out
mov
push
in
mov
push
insb
lcall
insl
pushf
js
pop
stc
add
negb
sbb
xchg
add
xchg
aas
mov
mov
jl
add
push
mov
mov
dec
cmp
xchg
mov
test
xchg
sub
mov
enter
push
das
insb
fwait
iret
ljmp
gs
push
shrb
test
sbb
cmp
add
jmp
je
cmp
mov
xbegin
rolb
mov
jbe
cmpsb
cmp
push
pop
dec
jmp
mov
xchg
repz
dec
mov
in
in
mov
jnp
sahf
pop
dec
mov
icebp
mov
nop
out
xor
push
test
fisubrl
push
or
std
sub
inc
aaa
mul
pop
mov
pop
je
imul
mov
pop
gs
mov
lret
sub
or
iret
jb
push
pop
xor
cmp
mov
xor
and
xor
cmp
mov
in
and
jne
or
push
push
push
cmp
int3
push
jno
stos
cs
xor
jae
jg
sti
movsl
or
dec
push
adc
out
rolb
fcom
jb
fsubrl
and
popa
cs
cmp
iret
sarl
scas
push
jns
leave
iret
test
les
test
pop
aaa
es
arpl
sbb
lods
insb
out
cmpb
jnp
rcrb
mov
insb
mov
push
jle
sub
add
sbb
shlb
cwtl
sarl
jp
flds
popa
decl
dec
adc
pop
outsl
leave
test
fdivs
dec
pushf
outsb
stc
adcl
inc
sub
dec
pop
sbb
dec
into
cs
popf
lcall
data16
fmull
fsubrp
and
push
jo
ss
sbb
inc
cmp
xchg
push
aam
out
inc
data16
pop
lahf
add
inc
ret
ja
or
je
inc
es
mov
inc
sbb
xlat
rolb
in
cmovae
or
adc
icebp
jo
xor
subl
push
out
mov
jmp
scas
xchg
popf
mov
pushf
mov
jmp
push
adc
cmp
mov
xchg
cmc
mov
mov
xchg
lock
cmpsb
call
jnp
icebp
xchg
pop
sub
xchg
fxch
adc
movl
inc
bound
in
adc
jmp
inc
push
fsub
loop
ss
sub
data16
mov
cmp
lret
divps
jmp
in
mov
push
imul
bound
mov
lcall
sub
push
jo
lret
je
inc
fstpl
ljmp
sarb
mov
ljmp
scas
pop
pop
xor
or
adc
push
jno
mov
or
cmp
lret
dec
xor
adc
mov
xor
inc
xchg
cmp
daa
decb
jb
fdivp
lret
insb
cmpb
repnz
loope
insl
sbb
rorb
adc
shll
mov
mov
mov
out
out
mov
push
std
dec
pop
faddl
cmpsb
pop
fwait
jge
rclb
pop
or
sub
outsb
jns
jl
fistps
shll
jmp
xlat
mov
cmpsl
xchg
movsb
jo
cwtl
jmp
mov
retw
fdivrs
arpl
xchg
enter
xchg
je
dec
icebp
dec
sti
xchg
and
in
icebp
mov
mov
ror
push
cmp
mov
andb
out
les
jne
jge
pop
adcb
jae
and
dec
pop
pop
mov
aad
mov
out
fcom
adc
sahf
mov
xor
xchg
sbb
andb
fucomip
test
mov
sbb
neg
push
test
push
sub
jno
jg
pop
pop
cltd
sbb
sub
das
mov
xchg
sbb
std
xchg
mov
cmp
mov
shl
and
lret
addb
sub
jns
cmpsl
fwait
mov
pop
fwait
sub
push
xchg
adc
jo
ror
clc
xchg
fbstp
xchg
sbb
lock
sbb
fcmovnb
orl
lods
fsubs
sub
push
xchg
cltd
test
push
adc
sti
jno
pop
jo
adc
xchg
add
das
dec
pop
fnsave
xchg
jle
shrl
mov
dec
inc
mov
sahf
test
mov
jmp
insb
jb
or
icebp
inc
mov
stc
mov
or
ficoms
jo
stc
scas
mov
xor
fdivrs
xchg
pop
daa
aad
mov
pop
lret
jae
fstpl
mov
mov
mov
fistpll
push
pop
push
sbb
jo
jp
imul
test
gs
cmp
cmp
mov
test
fadds
jmp
movb
mov
mov
add
sbb
cmp
loope
and
out
aas
and
xor
nop
mov
sbb
repnz
test
jecxz
cmc
loopne
xchg
inc
test
jge
sub
and
adc
aam
stc
pop
push
or
push
and
aaa
iret
dec
imul
jmp
inc
pushl
js
dec
ljmp
sub
std
fstl
cmp
mov
inc
jns
aam
out
add
lret
cli
mov
int
rol
dec
adc
scas
jge
push
js
mov
xchg
inc
jb
jns
divb
repz
cmpsb
fs
andb
loopne
mov
xlat
push
imul
xor
dec
jo
add
rolb
xchg
xor
rclb
shll
out
mov
jg
sub
or
sahf
xlat
add
or
test
imul
ss
xchg
test
insb
les
arpl
inc
mov
xorb
cwtl
xor
mov
push
out
mov
es
sahf
enter
mov
ficoml
icebp
fidivs
js
repz
clc
fldenv
inc
inc
push
xorl
mov
xchg
cmp
pop
sarb
clc
jne
push
mov
or
shlb
mov
xchg
push
pop
je
out
jno
sbb
dec
test
or
cli
mov
pushf
in
and
mov
mov
cld
mov
push
pusha
xchg
shlb
ja
xor
and
mov
sbb
mov
rcrl
and
inc
pushf
pop
cmp
imul
mov
xchg
cli
xchg
test
adc
inc
mov
or
inc
test
mov
insl
adc
call
mov
pop
push
leave
adc
sbb
fldl
lret
or
mov
out
lods
mov
addr16
sub
sbb
inc
pop
fwait
and
or
loope
imul
cmp
inc
roll
cmc
aas
adc
xorb
cmp
pop
scas
push
inc
rcll
cmp
loop
cmpsb
pop
fsubrs
and
mov
push
dec
xorb
jbe
push
ret
rol
or
adc
cmp
fwait
call
cmpsl
or
cmp
and
jl
and
jno
mov
fldt
adc
into
add
dec
ror
cmpsl
adc
mov
ror
data16
ljmp
dec
sub
rclb
inc
mov
out
jecxz
pop
inc
rcll
stc
and
or
in
test
mov
imul
push
push
push
mov
xor
mov
popf
push
push
and
into
negb
pop
push
mov
xor
adc
std
sub
fstp
jle
fimull
data16
inc
mov
cmp
mov
mov
lcall
inc
lret
or
imul
or
mov
mov
mov
xorb
or
mov
stc
clc
andl
cmpl
mov
xchg
pop
je
cld
rcrl
pop
xchg
mov
mov
mov
iret
lret
adc
mov
mov
inc
inc
insl
cmpsb
aaa
loope
repnz
push
xchg
aad
jp
popa
cmp
add
mov
push
jge
dec
in
sbb
adc
mov
cmp
rcrl
add
cmp
mov
or
push
inc
out
jno
in
jmp
xchg
daa
js
aam
stos
insb
xchg
stos
mov
vpunpckhdq
cmc
into
inc
mov
add
and
aam
pop
scas
faddp
mov
rep
test
loope
pop
cli
or
or
pop
test
push
out
jmp
jl
aaa
aaa
add
mov
div
ss
gs
enter
data16
into
sahf
aaa
mov
popf
jns
fidivl
les
push
push
push
shrl
hlt
jg
shlb
es
addr16
movsb
cmp
jbe
das
das
addr16
lods
cmp
divl
pop
test
sbb
jge
push
and
test
pop
test
ret
sti
test
push
push
and
xor
fists
les
shrl
stos
stos
jb
cwtl
mov
fs
inc
add
push
in
shll
cmp
dec
fisttps
jb
xchg
ret
mov
fldenv
lahf
fildll
das
mov
adc
push
aad
push
gs
in
inc
je
ljmp
gs
rcll
sbb
dec
xor
mov
shll
lds
xchg
jecxz
sar
jl
pop
jp
push
aas
or
gs
mov
shll
lea
sub
mov
shrb
add
fdivrl
dec
movsl
or
ljmp
lods
push
mov
bound
xor
pop
test
clc
and
cli
xchg
and
lods
hlt
std
js
push
add
or
loope
jae
adc
jp
cmp
push
int
cld
mov
inc
out
fmulp
pop
push
xchg
movsl
dec
hlt
xor
fisubrl
inc
adc
js
sarb
test
jecxz
pop
xor
ret
dec
gs
inc
repnz
cld
push
push
push
fldcw
add
imulb
scas
xchg
jne
sub
inc
or
or
mov
cmpb
inc
stos
or
jg
sub
adc
inc
loop
push
sub
shll
xchg
mov
xor
loope
lret
filds
aad
xchg
std
in
jnp
cmp
loopne
xchg
addl
insb
sahf
mov
gs
push
adc
and
jge
hlt
sbb
mov
fmull
outsl
mov
adc
dec
loope
and
fwait
js
sbb
xchg
jmp
das
lret
pop
pop
cmp
add
sub
cld
fwait
inc
inc
test
arpl
push
das
jno
es
xor
jb
rorb
into
icebp
fs
mov
xor
dec
cmpsl
rorl
jle
inc
adc
mov
aas
mov
push
in
mov
mov
lret
insl
std
jecxz
and
jb
in
lods
test
sbb
inc
add
cmp
jnp
inc
gs
pop
rorl
std
pop
test
push
les
and
mov
sbb
pop
nop
push
cmp
lock
xor
mov
pop
xor
addr16
dec
in
inc
add
insb
inc
test
xchg
dec
pop
sub
jecxz
mov
xchg
push
inc
out
push
cmp
loop
pop
xchg
ss
push
jno
mov
mov
xchg
test
in
sar
add
jae
mov
pop
mov
jecxz
enter
or
mov
xchg
add
lds
mov
sub
dec
jns,pn
dec
push
lock
aaa
dec
sbb
inc
bound
inc
pusha
sub
adc
sub
fcmovnb
jge
push
jge
mov
cld
iret
dec
in
jp
xchg
pop
fstpt
adc
jp
data16
pop
push
popa
sti
cmp
nop
inc
inc
sub
mov
pop
out
mov
adc
lea
fwait
mov
test
loop
jg
pop
subl
dec
fstps
jb
cmp
cld
and
mov
inc
sbb
add
and
cmp
je
push
loope
sub
je
inc
leave
adc
and
mov
sbb
xchg
jecxz
mov
sub
adc
icebp
push
push
mov
and
lock
fstl
stos
lds
lods
loop
mov
cmpl
mov
daa
jne
mov
mov
adc
in
push
sub
add
cltd
xor
rorb
adc
daa
loop
ret
add
or
adc
movsb
cmp
cmc
popa
sbb
out
add
jge
hlt
mov
lock
or
sbb
in
bnd
enter
jbe
mov
js
rcl
outsl
xor
out
jecxz
jmp
arpl
pop
mov
pop
inc
xchg
iret
sbbl
mov
loopne
fcoms
ret
mov
pop
test
cmpsb
inc
je
mov
mov
xchg
mov
jnp
cmp
inc
xor
xorb
sub
xchg
jae
arpl
pusha
cmpl
pop
push
push
mov
pop
lcall
icebp
mov
cltd
cmc
shrb
lock
repz
inc
sbb
mov
adc
and
jecxz
pop
leave
and
dec
das
inc
pop
lods
push
mov
pop
mov
out
and
dec
dec
sbbb
leave
test
mov
in
int3
dec
dec
lds
cmpsl
cmp
in
data16
adc
enter
lods
shlb
pushf
lods
pop
lret
gs
iret
cmpsb
subl
jns
popf
lock
dec
lahf
push
xchg
adc
ja
inc
fsubp
jecxz
ds
cmpsb
jmp
and
adc
mov
fidivs
dec
pusha
mov
push
xchg
jp
pushf
cmpsb
in
sub
xchg
jo
mov
lods
and
fwait
xor
adc
pop
adc
icebp
cwtl
inc
jo
sub
dec
lods
xchg
scas
add
mov
in
add
push
add
jo
fwait
in
xchg
dec
lahf
ljmp
in
jl
jge
mov
in
jg
push
sbb
push
push
mov
mov
add
cltd
mov
movsb
cmpsl
jns
fists
mov
outsb
push
nop
fsubrl
icebp
pop
pop
loopne
push
dec
das
imul
mulb
dec
and
xchg
xchg
lds
xchg
mov
lods
daa
push
push
mov
mov
pop
lods
aaa
js
insb
mov
movsl
pshufw
push
cmpsb
cmp
pop
mov
sbb
out
mov
dec
jnp
movsb
or
mov
jbe
lret
cmp
and
fisttps
push
sub
adc
enter
mov
sub
out
add
sub
aaa
xchg
sub
mov
shll
jle
lods
dec
jnp
cmp
int
add
inc
lret
dec
mov
mov
je
divb
jle
pop
aas
mov
bound
rclb
sub
jmp
clc
insb
in
mov
inc
sub
test
es
pushf
push
in
add
dec
iret
push
lret
mov
in
push
imul
xor
loope
call
xchg
inc
cmp
cmp
repnz
movsl
mov
mov
push
nop
jecxz
sahf
clc
and
xchg
push
xchg
cmpsl
enter
adc
nop
sub
out
adc
out
push
testl
pop
dec
push
aas
fs
rcll
xlat
jno
add
dec
insb
pop
bound
cmc
scas
fistpl
ficoml
cmpl
inc
cwtl
mov
int
out
xchg
fadd
add
pop
push
test
sub
adc
pop
std
xor
scas
push
dec
sbb
insl
sbb
popf
js
decl
pop
ja
aas
jb
xor
pop
xchg
repnz
and
cltd
in
cmpb
movsl
adc
pop
jnp
push
jmp
add
fstpl
pop
pop
adc
sub
movb
es
fwait
lcall
movbe
push
icebp
adc
sub
or
mov
jmp
pop
cmc
xor
inc
sahf
dec
jp
ja
std
in
sbb
and
insb
aad
sbb
push
jnp
dec
lea
sub
cmp
loopne
mov
add
add
mov
xor
insl
loopne
bndldx
inc
sbb
js
pop
popa
xor
in
mov
mov
fwait
in
xorl
sub
cmc
mov
dec
pop
loopne
xchg
addr16
out
in
gs
mov
js
fnstenv
sbb
int
dec
sub
xchg
jle
jo
movsb
int
popf
shlb
mov
dec
adc
cmp
int3
add
pop
adc
push
cmp
subb
repz
cld
ja
mov
loop
enter
push
xchg
pop
das
pop
fsubs
ret
or
cld
dec
adc
sti
rol
dec
inc
rorl
scas
push
mov
cmp
mov
sub
push
mov
std
cmpl
decb
aam
adc
sbb
stc
test
xor
add
stos
mulb
dec
repnz
ss
fcomip
push
jg
test
jae
cwtl
das
jp
dec
and
pop
xchg
int
xchg
mov
jns
leave
fnstcw
jp
xchg
into
sbb
and
sbb
inc
negl
outsb
loope
add
cmp
repnz
enter
mov
inc
lret
mov
xor
adc
jnp
scas
repnz
and
out
sti
int
xor
xor
jle
cmp
adcl
leave
movsb
jo
std
pop
sbb
xchg
inc
pushf
das
gs
mov
push
aas
jmp
cld
and
sub
xor
enter
inc
jno
cmp
jl
stc
es
add
rcrb
shr
shlb
rcrl
rol
outsl
and
call
fnstsw
mov
movsl
adc
arpl
arpl
push
dec
lods
or
sbb
cwtl
sub
mov
mov
hlt
lret
jno
jb
sbb
int
pop
fistpl
ss
mov
jmp
js
mov
mov
or
mov
xor
inc
xchg
or
fsts
cs
mov
adc
fst
ret
or
scas
sub
nop
mov
xchg
test
add
inc
dec
repz
ficoml
fwait
lods
cmp
aam
arpl
cmpsb
imul
mov
push
mov
js
inc
or
movd
pop
mov
int3
sub
adc
popa
sub
mov
sbb
or
ss
mov
or
push
loope
addr16
add
pop
and
mov
cmpsl
lret
cmpsl
sbb
lcall
inc
xor
cmp
inc
lock
fwait
xchg
aad
and
pop
adc
imul
pop
gs
adcw
mov
in
sub
cmp
fwait
cwtl
jo
je
comiss
inc
andb
aam
test
bt
lds
loop
push
xor
cmp
add
out
push
cmp
ret
pop
arpl
lods
cwtl
and
sbb
mov
mov
jmp
ror
mov
sbb
popa
test
inc
add
pop
mov
inc
inc
xchg
lcall
sub
out
add
dec
inc
mov
stos
rcr
xchg
add
add
out
ret
push
negl
repz
movl
cmp
or
fstl
mov
xchg
cwtl
aaa
mov
push
push
add
arpl
and
jle
dec
ficoms
and
cld
cwtl
push
aas
cld
movsl
test
cmp
push
adc
rcll
loope
inc
cmp
aam
sub
jb
in
push
and
push
xlat
xchg
sti
or
jle
push
mov
lods
cmpsb
into
aaa
sti
aad
daa
lahf
enter
add
pusha
leave
inc
cmp
push
inc
jns
pop
mov
adc
inc
or
xchg
cmp
pmaxub
jg
adc
cmp
ret
xor
dec
inc
cltd
adc
scas
and
test
xor
ss
lods
movb
push
jno
arpl
jl
cmp
scas
in
dec
push
push
mov
es
dec
cmc
or
mov
dec
pop
cli
nop
and
outsb
loope
test
pop
adc
std
cmc
je
call
into
test
jge
inc
pop
inc
push
push
fistps
cli
dec
mov
popf
ret
dec
nop
mov
leave
mov
sub
jns
mov
sub
xor
cmp
out
andb
cmpsb
test
mov
xor
xor
js
fwait
hlt
mov
cwtl
scas
push
pusha
stos
call
xor
sbb
fs
and
fistl
dec
inc
test
fidivs
mov
sahf
push
movsl
iret
mov
mov
or
leave
sbb
adc
mov
test
scas
je
ss
fdivrs
push
adcb
or
hlt
or
mov
aaa
pop
cli
and
cmp
jge
jbe
push
test
push
xchg
mov
xchg
iret
jb
xor
outsl
jmp
movsl
ds
scas
mov
cld
xchg
adc
or
jnp
arpl
daa
fsubl
popl
cmpsl
data16
adc
push
add
dec
add
xchg
cmp
pop
icebp
xchg
into
mov
shlb
clc
jmp
insb
mov
push
mov
dec
push
mov
test
mov
mov
aad
inc
out
fcomps
negb
dec
inc
pop
mov
aam
add
or
fisttps
pop
arpl
dec
pop
sbb
popf
jl
jno
cmp
sbb
inc
movsb
xor
lahf
mov
iret
movsl
mov
add
and
mov
jns
xchg
jne
call
ret
mov
stc
jb
les
cltd
inc
add
mov
sbb
push
outsl
add
add
cmc
push
jge
xchg
into
icebp
call
dec
es
pop
call
loop
repnz
inc
xchg
push
cmp
sti
xchg
and
jmp
loopne
and
sbb
cltd
jmp
xor
pop
fidivrl
cmc
xlat
mull
decl
les
out
dec
and
lods
push
sti
xchg
sbb
mov
jp
mov
cwtl
sub
and
fistpll
ficoms
mov
int
movsl
xchg
mov
dec
jecxz
aaa
push
mov
shll
mov
or
pop
push
repz
mov
scas
clc
and
enter
push
jmp
dec
fwait
addb
push
cli
jae
repz
pop
shr
sahf
cs
pop
jno
xchg
mov
xchg
bound
and
inc
aad
xor
nop
jle
adc
fs
into
sub
cmp
andb
xor
lea
sub
lcall
fs
movsl
add
dec
xchg
inc
data16
test
fnsave
loopne
in
fmull
rcl
cltd
sbbb
push
add
out
sbb
and
jmp
xor
movsb
add
adc
cld
sbb
mov
aas
dec
ss
push
add
push
mov
mov
rcrl
fsubp
outsl
dec
mov
pop
in
pop
cmp
loope
out
std
pop
ret
push
pop
ss
pop
outsl
fsubrs
sub
data16
hlt
orb
aas
adc
loop
out
in
or
loop
or
sbb
sub
inc
addb
pop
pop
mov
mov
jmp
push
loop
cs
shrb
push
xlat
sbb
inc
leave
pop
daa
rcl
cld
cmp
out
cs
or
mov
adc
in
popf
add
leave
cmovle
sbb
ljmp
addb
lcall
insb
faddl
xlat
inc
mov
fistpll
scas
xor
cmpsb
mov
cmc
jge
insb
fildll
push
dec
aad
or
adc
aam
jns
jmp
mov
mov
ja
mov
gs
mov
sub
test
mov
add
aaa
mov
cli
or
dec
cmp
sti
enter
lret
mov
lahf
push
movsb
loop
sbbl
loopne
and
mov
jecxz
jo
pop
popf
cmpsb
dec
cmpsb
push
rcr
bound
rorb
or
add
or
or
stos
daa
test
cltd
inc
stos
sub
sbb
add
push
xchg
or
insb
push
pop
sub
sub
stos
xchg
movsb
pop
adc
jbe
jl
addl
pusha
add
fdivs
adc
sahf
bnd
sub
add
adc
push
shll
jecxz
dec
push
cmpb
ret
xor
push
aad
sbb
adcl
scas
cmp
xor
sub
lea
negb
into
inc
or
scas
aad
in
icebp
fmul
push
fwait
js
outsl
mov
and
mov
fcompl
jbe
sub
outsl
sbb
add
jmp
sub
daa
cmpsl
cli
mov
es
hlt
test
pop
xchg
sub
loope
sub
inc
cltd
mov
gs
in
nop
mov
dec
adc
scas
inc
ja
dec
adc
mov
iret
sub
int
xchg
sbb
out
and
jb
daa
test
cwtl
jno
dec
lret
push
push
fld
rcrl
xor
gs
gs
xor
cmp
jge
clc
adc
insb
mov
xor
xor
inc
icebp
mov
sub
jl
sub
iret
xchg
pop
xchg
es
dec
jmp
sub
xchg
mov
and
jl
xchg
out
adc
inc
xchg
add
daa
cltd
or
ss
jl
cmp
xchg
int3
dec
fbstp
push
dec
push
xchg
sub
or
cld
bound
sub
lods
clc
xor
pop
imul
xchg
clc
and
fldt
fstps
or
jb
xchg
subb
adc
es
mov
add
bnd
std
outsb
mov
test
jmp
jmp
sbb
outsb
jl
jae
xchg
arpl
fdivrs
dec
mov
cwtl
shlb
aas
cmp
in
loop
jecxz
mov
pop
lahf
dec
add
stc
cmpsl
loop
stos
negb
lret
imul
out
ss
fsubs
xor
aam
jbe
xchg
sbb
rcll
sub
jnp
pop
lret
dec
rorl
mov
ret
sub
push
call
pop
jmp
push
mov
fists
cmp
loopne
sarb
pop
cmpb
pop
add
adc
inc
xor
jno
sub
int3
ds
and
clc
bound
mov
sub
xchg
inc
or
in
dec
nop
in
and
dec
jp
adc
clc
dec
data16
imul
and
pop
mov
jge
cmp
loopne
jp
hlt
and
sbb
aad
xorl
cwtl
loop,pt
ljmp
add
cli
push
adc
les
jno
call
push
pop
mov
push
jp
shll
xor
sub
inc
jecxz
xor
test
das
xbegin
fst
dec
xchg
xchg
push
sub
xor
test
movsl
jmp
fists
cmp
lret
add
dec
jecxz
test
or
and
fimuls
popf
adc
lret
sub
push
jmp
cwtl
inc
adcl
fwait
aaa
test
dec
jae
addb
sub
cltd
push
lock
call
sti
jg
es
dec
fstl
and
adc
xor
decl
je
add
jae
mov
pop
add
mov
dec
pop
mov
jecxz
jo
jno
cltd
and
out
adc
cmp
jl
sub
dec
int3
dec
jns
imul
scas
mov
imul
dec
dec
and
movsl
je
and
cltd
push
lcall
cmpsb
gs
xchg
dec
fcomps
sub
ret
push
xchg
or
mov
sub
sub
or
int
sub
mov
jecxz
outsl
es
ja
ret
jbe
push
call
ret
andl
and
mov
movsl
loop
loope
mov
or
in
mov
and
adc
ret
inc
les
mov
cmpsb
pushf
push
push
sbb
add
push
jae
shlb
clc
bound
leave
std
mov
fnstenv
or
aad
mov
stos
push
xchg
test
pop
call
ds
pushf
dec
push
xchg
insb
jo
mov
adc
sbb
ss
rorb
cli
jecxz
rcl
add
shrb
mov
rcl
add
sbb
pop
arpl
cmp
test
pop
push
mov
aas
daa
aas
xchg
outsl
jge
dec
pop
mov
fistpl
in
ja
jge
sahf
mov
fcmovnbe
xorl
orl
aaa
jnp
inc
subb
sub
xchg
ja
outsl
cmp
test
sub
andl
fs
or
pop
pop
cmc
add
mov
push
movsl
loop
add
les
hlt
in
xchg
cmp
inc
xchg
in
out
push
cld
cmc
je
add
push
enter
mov
pop
jae
movsb
push
imul
inc
mov
push
aam
das
aaa
mov
xor
movsl
xor
insb
xchg
mov
arpl
mov
inc
cwtl
cwtl
clc
popa
lds
je
push
bound
push
cld
out
out
and
movsb
sbb
movsb
rcrl
adc
adc
sbb
test
push
jo
pop
jbe
adc
icebp
cmp
aad
sub
sbb
enter
inc
out
and
leave
push
cwtl
xchg
mov
arpl
inc
rorl
xor
xchg
std
mov
mov
sbbb
mov
and
mov
cmpsb
lods
mov
out
stc
dec
lret
pop
xor
loop
lret
lods
fistpll
frstor
ret
pusha
fildll
sbb
xlat
dec
insl
cltd
mov
sarb
mov
scas
ja
push
dec
mov
push
pop
pop
xor
gs
fisttpll
or
add
mov
ror
jg
les
xchg
mov
bound
jl
push
scas
repnz
sbb
mov
xchg
adc
mov
jno
adc
mov
mov
push
xchg
sub
sbb
push
loope
stc
or
inc
imul
cwtl
lcall
imul
inc
scas
pop
sub
stos
andl
lcall
and
pop
shll
ret
push
jp
shl
dec
sbb
divl
pusha
push
les
clc
dec
fidivl
sub
cmc
dec
les
and
loopne
xchg
call
std
mov
aas
lock
fnstenv
push
into
nop
lahf
inc
lahf
sub
xor
inc
call
cmpb
divl
shl
nop
mov
sti
and
sub
lods
push
dec
jle
xchg
imul
cmp
push
mov
insb
push
loope
incl
test
in
inc
mov
outsb
js
out
cmp
lahf
inc
rcrb
insb
fists
insb
call
lods
mov
std
pop
mov
inc
xor
stc
lods
into
rolb
push
testb
stos
loopne
mov
mov
repnz
in
fidivrs
adc
adc
jb
mov
dec
mov
mov
or
test
mov
aas
jmp
lods
aas
pushf
push
mov
out
inc
out
in
sti
adcb
shll
and
push
mov
or
xchg
mov
bound
push
lods
loope
movsl
data16
xchg
cs
lcall
mov
jge
sub
mov
nop
xchg
popa
test
inc
or
pop
mov
and
ss
insl
testb
xor
or
sub
pop
cmp
outsb
call
xor
test
mov
mov
sbb
call
jno
add
icebp
push
sbb
xchg
cmp
jl
test
mov
sbb
inc
mov
sub
mov
adc
xor
div
mov
or
cld
aas
pop
in
ss
add
jle
outsb
pop
fistl
adc
imul
insl
pop
test
arpl
mov
loop
arpl
or
cwtl
ret
adc
clc
jns
sar
and
test
scas
aaa
out
jl
jb
xor
xchg
dec
nop
loop
enter
jl
lahf
and
dec
sub
in
cmp
and
mov
pop
sbb
xor
jne
adc
pop
mov
pop
pop
xchg
rcrb
xchg
mov
pushf
insb
push
adcb
mov
sbb
nop
push
or
ds
lds
fldenv
or
mov
sub
ja
std
cmp
jne
and
inc
inc
jo
in
mov
and
add
pusha
inc
es
push
btc
dec
outsl
or
loop
insb
jecxz
mov
pop
mov
int3
popa
inc
cltd
xchg
mov
mov
mov
mov
jmp
pop
mov
loope
in
pop
lea
mov
push
jae
push
inc
into
fisttpl
fnstcw
mov
nop
jnp
mov
cmp
stc
std
lock
or
orl
das
daa
xchg
pop
pusha
out
adc
cmp
lret
iret
push
xchg
sub
insl
dec
add
in
shl
mov
ss
cmc
mov
or
clc
pop
sbb
inc
insb
mov
lock
addl
fsub
outsl
sbb
push
inc
xchg
lahf
sbb
or
dec
mov
cld
dec
mov
mov
inc
push
inc
sahf
call
sbb
mov
aas
inc
filds
pop
aas
roll
popa
xchg
sbb
xchg
pop
ret
jnp
lock
push
cmp
stos
in
les
in
mov
xor
push
dec
mov
mov
rcrb
push
lods
and
scas
cmp
xchg
call
xchg
pop
adc
lret
mov
cmp
test
fadd
sub
aaa
xor
lret
xchg
mov
in
stos
outsl
sbb
sub
dec
push
out
gs
xorl
mov
mov
mov
inc
scas
push
add
mov
mov
lds
cmpsl
mov
inc
add
mov
xchg
and
insl
insl
sub
jns
test
jl
xor
xlat
test
aas
ja
in
pushf
dec
rolb
jo
imul
mov
mov
push
imul
popf
fmull
xchg
pop
cmpsb
addr16
push
add
lods
mov
push
mov
mov
push
stc
sub
stc
repnz
cmp
pop
inc
inc
jns
xchg
stos
dec
cmp
mov
xchg
mov
ret
mov
test
pop
out
mov
test
sub
add
sahf
pop
cmp
fwait
push
je
cli
jb
arpl
xchg
mov
lods
xlat
repnz
jno
dec
jmp
jno
adc
and
xor
lock
jbe
xchg
fisubrs
jo
add
insb
add
out
out
outsb
mov
gs
xlat
cmp
int3
inc
adc
in
add
aas
mov
fsubl
scas
push
sbb
push
ja
enter
aaa
push
int
lods
xor
push
mov
inc
adc
data16
nop
movsl
shl
xchg
inc
aam
mov
xchg
cmp
sub
cmp
divps
and
xchg
mov
jg
mov
sbb
mov
cs
cltd
les
loop
icebp
test
add
jge
pushf
cltd
jp
push
or
mov
outsb
mov
dec
adc
xor
cmpsb
cld
jo
or
push
insl
dec
jl
ljmp
movsb
jne
sbb
test
sti
stc
les
mov
sti
andb
data16
push
inc
xor
or
mov
movsl
cmc
adc
push
mov
in
adc
xor
or
add
xchg
cmp
cwtl
das
repnz
repz
out
mov
xlat
mov
push
fldenv
loop
scas
push
pusha
pop
or
jg
or
repnz
sub
cmp
dec
shrl
pop
sbb
bound
pop
pop
ret
xor
test
popfw
aaa
stos
into
sarl
lods
adcl
dec
roll
mov
or
out
mov
pop
mov
push
ret
aas
adc
cmp
pop
shlb
js
dec
outsl
aaa
testl
jbe
and
rorb
mov
push
in
jae
jno
out
popa
iret
pusha
cmp
decl
shl
das
movsl
inc
addl
repnz
adc
dec
mov
push
jbe
fwait
test
fnstenv
lods
icebp
das
pushw
or
imulb
je
jbe
pop
aam
orb
push
lods
mov
incl
inc
fldl
jb
inc
adc
ljmp
or
fimuls
sarl
enter
andb
xchg
adc
push
mov
and
mov
and
cld
leave
mov
call
iret
push
clc
in
pop
repz
cmp
jne
mov
shl
and
arpl
les
xor
test
or
sbb
fucomp
int
cltd
lods
mov
in
mov
gs
pop
loopne
sbb
jl
fidivl
lock
aam
cmp
dec
fsubrs
sub
cs
pushf
out
mov
pop
pusha
adc
fwait
pop
mov
sbb
and
addr16
jae
dec
clc
aam
iret
repnz
push
repz
jb
jbe
frstor
xchg
and
cmp
test
mov
pop
and
mov
cltd
sbb
fcoms
addb
adc
or
lret
ss
mov
sub
int
push
scas
outsb
lahf
bound
icebp
mov
jg
dec
and
into
mov
aam
repz
repnz
stos
cs
mov
adc
sbb
lods
or
dec
stc
or
xor
mov
frstor
pop
mov
add
movsb
in
adc
rorl
test
rol
cmp
aas
xchg
repz
add
or
dec
test
push
jne
sbb
shll
xchg
outsb
jne
out
and
mov
test
in
or
push
loop
dec
in
leave
icebp
sbb
in
jecxz
jmp
xchg
scas
fxsave
dec
add
pop
movsl
push
shlb
mov
popa
arpl
inc
mov
mov
cmp
repnz
fdivl
mov
ficoml
pop
cmp
test
shll
cmc
out
in
movq
outsl
fistl
testb
cltd
lods
mov
xchg
xchg
divl
pop
pop
pop
mov
ficompl
jmp
add
stos
scas
dec
jg
push
sub
std
sti
addb
fsubrs
dec
mov
notb
std
fistps
iret
popa
pop
icebp
xorl
xor
cmp
es
sbb
mov
lods
cmpsb
insl
lcall
jg
mov
dec
cltd
xchg
inc
insl
in
aaa
cmpsl
dec
sbb
pop
addr16
cmc
fistl
out
push
cmp
int
cs
lret
je
loopne
sbbl
dec
notl
jns
adc
push
in
loop
xor
lock
cwtl
cmpb
ss
call
or
xchg
xchg
std
mov
add
sub
push
pop
stos
jne
add
push
pop
push
cmc
add
cmpsl
in
aad
xor
xchg
popf
dec
sbb
adc
adc
adcb
in
fisubrs
push
sub
or
test
jae
sbb
adc
ja
pop
es
in
jmp
add
mov
or
xor
loopne
and
inc
pop
stos
pextrw
xchg
dec
sti
or
shlb
in
fwait
xchg
mov
pop
scas
mov
cwtl
mov
out
push
pushf
out
xchg
loopne
pop
add
arpl
pop
cltd
call
push
xchg
mov
push
pop
sub
dec
or
xchg
sbbl
sub
out
sahf
inc
jmp
cmp
cld
fstpl
nop
dec
pop
rorb
mov
aas
testl
mov
cmpsl
aaa
push
out
int
sbb
jns
aaa
loopne
add
sbb
and
push
loopne
shlb
sub
inc
dec
addps
fs
mov
xchg
repnz
ljmp
pusha
inc
sbb
jns
popa
into
aam
dec
cli
shl
inc
ds
ret
scas
call
dec
cmp
ljmp
rcrl
cmpsb
dec
cmp
cld
push
cmpsl
lret
mov
pop
pop
cwtl
movsb
pusha
hlt
cmc
fisubs
sbb
adcb
dec
pop
and
daa
nop
sub
dec
dec
xor
inc
cmp
popa
cli
loop
mov
lock
sub
aaa
adc
sbb
iret
xchg
mov
jne
pop
cmp
in
shlb
inc
xchg
sti
push
dec
adc
es
aam
and
mov
int
push
jmp
push
jg
push
add
cmp
add
fcoml
push
sbb
push
icebp
xchg
call
pop
dec
ret
js
pop
mov
pop
push
and
lahf
cmp
push
adc
hlt
iret
fiaddl
sub
aas
loope
and
inc
insl
inc
inc
outsl
jne
push
imul
sub
mov
sbbl
mov
sub
pop
mov
or
fistps
out
push
pop
cmp
xor
xlat
ds
in
fwait
inc
mul
or
cld
cmpsl
pop
scas
cmpsl
add
jae
or
mov
into
or
cltd
imul
cmpsl
xchg
inc
mov
insb
in
rclb
insl
sbb
addl
xor
push
mov
xor
into
dec
int
fwait
out
or
into
and
or
fucomp
xchg
mov
adc
and
mov
dec
in
mov
jo
adc
and
ret
jl
gs
cmp
aas
sub
adc
or
outsb
mov
pushf
or
stc
shlb
inc
movsl
mov
inc
jle
aad
xchg
aam
adc
mov
mov
rol
andl
sub
and
std
sub
add
ficomps
jmp
and
in
jns
pop
pop
aaa
jg
cmp
ljmp
js
insb
jmp
insb
enter
sub
stc
and
ljmp
nop
dec
pop
mov
lcall
movsl
mov
lcall
std
cmp
insb
test
insb
push
lock
mov
sbb
outsb
mov
inc
gs
fldt
xchg
xchg
mov
dec
out
push
cmc
pushf
mov
rep
or
mov
fcom
mov
loope
or
sbbb
push
jnp
ret
xor
out
ja
out
push
adc
add
jne
adcl
sub
imul
out
and
lea
or
mov
mov
xchg
xchg
out
fsts
jno
cwtl
pop
xchg
pop
push
ljmp
xlat
lea
xor
leave
rclb
rcl
scas
adc
inc
cmpsl
lcall
pop
dec
pushl
mov
lods
push
lods
int3
sbb
mov
jp
lret
aas
jg
dec
sub
insl
pushf
cld
out
jb
mov
pmuludq
daa
mov
push
xlat
lahf
xor
and
test
gs
mov
mov
fcmovnu
cmp
adc
jbe
sti
sbb
push
pop
sbb
jl
xorb
cwtl
mov
mov
int
mov
in
and
push
loop
test
scas
sahf
dec
jmp
add
sbb
out
hlt
xchg
int
xchg
pop
jecxz
push
stos
ficompl
push
pop
mov
inc
rol
outsl
mov
ljmp
test
sub
cmp
push
mov
stos
dec
js
repz
xchg
cmp
int3
loopne
or
jg
mov
cld
mov
sub
leave
pop
call
out
subb
stc
aam
sub
insl
inc
repnz
imul
subl
mov
into
cmp
dec
aad
mov
cmpsl
inc
std
in
xchg
das
ficoml
adc
outsb
inc
pusha
enter
dec
subb
mov
inc
sbb
mov
std
popf
sbb
xor
xlat
dec
sbb
sbb
sbb
push
lock
je
push
scas
xor
repz
hlt
mov
push
ret
outsl
leave
xchg
pop
in
xor
jns
mov
sbb
psrlq
adc
call
and
lahf
leave
nop
cmp
push
push
sub
adcb
test
pop
dec
jb
pop
sbb
and
and
sbb
and
push
cmpsl
insb
inc
popf
sahf
fwait
fcmovne
negl
mov
stc
xchg
pop
inc
sbb
add
mov
mov
adc
jno
or
push
pushf
pop
xchg
fstp
adc
dec
inc
jecxz
cmpsl
push
adc
adc
xor
or
fst
mov
mov
push
add
call
rorl
push
cmp
movsb
add
mov
and
sarl
cs
std
shrb
push
dec
enter
cmp
or
adc
and
scas
or
or
dec
jge
mul
add
ret
pushf
mov
sbb
dec
fidivs
sbb
dec
cwtl
push
inc
jo
andl
scas
jp
push
push
mov
int
roll
pop
sbb
jp
sub
xor
popf
jge
mov
insl
movsb
popf
add
dec
lret
insl
pop
hlt
jae
test
push
add
lret
push
pop
ljmp
sub
adc
data16
stc
jae
adc
and
fnstenv
dec
inc
ljmp
scas
popa
mov
inc
push
cli
pop
stos
push
or
insl
stc
jo
xor
xor
hlt
outsl
push
add
xchg
push
loop
and
ss
fwait
cmc
repz
icebp
mov
xchg
xchg
cmc
push
pop
push
mov
hlt
clc
frndint
sti
jg
sbb
fs
push
pop
sub
sub
lods
movsb
xchg
es
into
lret
and
xlat
jo
add
inc
aam
lods
fbld
and
adc
fidivrs
mov
xchg
pop
sub
js
pop
push
push
lahf
js
scas
mov
fcomi
mov
pop
mov
andl
in
cmpb
xchg
jno
mov
insb
dec
ret
xlat
pop
jb
iret
cmpsl
cmp
and
push
jmp
out
pop
popa
cmp
imull
cmpsb
mov
xor
stos
add
sti
or
mov
pop
movsl
imul
and
lock
sti
adc
pop
ljmp
jg
dec
or
add
and
popf
movsl
scas
daa
aam
xor
or
sar
cmc
cs
cwtl
dec
adc
push
test
or
dec
mov
int
cwtl
mov
jo
iret
loop
pushf
cmpsb
mov
lds
ljmp
jg
push
xchg
or
push
jmp
xchg
ljmp
rclb
xchg
popa
fwait
stc
repnz
ljmp
cmpsb
mov
xor
fistpl
div
push
and
aad
xor
xor
inc
fcoml
mov
test
adc
repnz
addr16
jp
or
mov
mov
xchg
sbb
push
pop
shlb
lea
loop
push
and
jne
mov
xor
gs
or
cs
xor
xor
mov
cmp
add
mov
repnz
dec
scas
xor
arpl
adc
in
xorl
push
clc
orb
popf
add
xor
and
xchg
push
lds
jmp
hlt
test
mov
mov
pop
jb
pop
add
sub
sti
inc
rolb
and
rcrb
jle
into
inc
cld
sub
mov
adc
add
pop
jp
clc
or
push
xor
sub
pop
aad
nopl
and
mov
js
repz
aaa
cwtl
addr16
and
sbb
pop
sub
dec
cmpsb
daa
cmc
notb
addr16
popf
lret
insl
push
sub
and
mov
inc
xchg
xchg
movsl
cmp
push
mov
lea
jecxz
ret
xchg
outsl
mov
movsl
lret
xchg
ds
pusha
mov
mov
xor
mov
repz
cmp
mov
push
adc
jne
mov
or
outsl
lods
adc
lcall
jg
jmp
jne
add
push
mov
pop
fsts
test
mov
sbb
cmp
jnp
jmp
outsb
cwtl
int3
xchg
adc
in
jp
xchg
aaa
mov
fsubrl
xor
mov
jge
in
jns
aas
pop
jno
push
push
dec
push
test
jns
jmp
xlat
call
xchg
push
std
jl
lock
add
pop
inc
enter
es
aam
cmp
into
test
and
pop
cs
mov
test
xchg
cli
cltd
jp
push
cmp
cmc
int
push
in
sbb
push
iret
mov
mov
push
or
jno
cs
and
sub
push
sub
out
pop
xor
xchg
pop
jbe
jp
cmpsl
push
scas
xchg
mov
pop
mov
rorl
jmp
sbb
adcb
add
cmp
lock
dec
add
sbb
pop
mov
sbb
push
and
test
mov
mov
cmp
sub
inc
lahf
rorl
cmp
int
scas
adc
mov
xchg
xchg
pop
mov
call
xor
add
gs
gs
push
add
js
or
lock
roll
jno
pop
ss
pop
ret
mov
fistps
loop
mov
out
rcr
dec
cmp
push
xchg
fldt
or
sub
jne
test
ja
and
fadd
int3
cld
andl
js
jle
pop
ret
adc
imul
pop
pop
xchg
jle
add
mov
adc
int
pop
movsl
mov
jg
aaa
cmp
iret
pop
mov
jb
fisubl
add
inc
push
or
or
shll
aam
push
sbb
call
cmp
jb
and
stc
out
daa
lods
std
mov
lods
cltd
lods
ret
cli
mov
cmpsb
lea
or
popa
jp
out
jbe
test
lahf
jp
and
decl
rcr
xchg
lds
stos
rcrl
xchg
push
cmp
fldt
add
add
popf
in
sti
out
enter
adc
in
fsubr
cmpl
stos
mov
inc
xor
jo
dec
outsb
dec
xor
mov
imul
mov
jecxz
int3
cmp
leave
pop
int
mov
mov
inc
jmp
cmp
ds
into
add
xchg
or
pop
mov
and
lock
mov
dec
fdivr
mov
test
lret
das
sbb
das
outsb
jmp
xor
popl
add
add
xchg
out
jge
neg
les
sahf
push
mov
mull
sub
ficomps
ja
jl
mov
jmp
mov
mov
mov
setl
andb
and
lea
push
push
ja
dec
or
jle
int
or
hlt
std
stos
xchg
xor
sub
and
fistpl
mov
push
arpl
pop
and
in
xor
andb
pop
daa
sbb
fwait
cmpsb
mov
orb
cmp
cwtl
les
arpl
iret
jmp
or
mov
adc
lods
sub
jl
mov
imul
xor
cmp
iret
add
mov
dec
lret
in
xchg
push
out
mov
adc
pop
insb
pusha
and
pop
sbb
repz
outsl
lcall
and
pop
stos
adc
imul
mov
lock
test
add
cmp
xchg
jge
mov
mov
loop
hlt
pop
dec
jb
mov
cmp
andl
mov
fwait
and
mov
or
lret
dec
and
mov
adc
inc
or
sbb
fidivrl
inc
add
inc
das
jbe
clc
setbe
test
sub
outsl
scas
push
cwtl
push
cmp
pop
mov
insb
fcoms
stos
mov
lahf
cld
inc
and
push
mov
push
xchg
push
es
cmp
aad
add
or
les
sub
add
sarb
xchg
lods
scas
pop
cmp
xor
cltd
add
or
cltd
mov
sbb
sub
sub
mov
add
mov
add
and
ds
scas
xchg
mov
loope
mov
push
test
fs
or
fdivr
mov
adc
xchg
aam
or
adc
mov
push
es
xor
sbb
outsb
test
pushf
sbb
pop
pop
mov
ljmp
push
adc
push
sbb
lcall
js
stos
jecxz
inc
and
push
mov
push
cmp
add
loop
stos
fwait
inc
xor
xor
jnp
mov
jno
push
int
jne
icebp
push
sub
bound
es
inc
in
les
push
scas
mov
sub
mov
inc
fs
jle
mov
cltd
test
add
xor
sahf
mov
jle
iret
and
std
ret
inc
sub
adc
in
lods
cmpl
xchg
mov
inc
out
xor
movsb
xchg
pop
jge
xchg
je
call
call
xor
lods
aad
lahf
cwtl
dec
push
xor
mov
dec
xchg
lea
shl
sti
test
call
jne
rcr
stc
lods
xor
xlat
shrl
addr16
add
lock
pop
cwtl
hlt
xor
jns
pop
shrb
inc
adc
leave
mov
sarl
push
cmpsb
add
jns
or
mov
aaa
jb,pn
pop
rcr
sbb
mov
pop
mov
jle
jno
repz
fmull
fwait
dec
push
repnz
mov
sti
lahf
aaa
mov
fwait
and
jno
cmp
mov
sbb
mov
pop
xchg
fdivp
int
pop
push
or
leave
or
and
popa
push
sbb
mov
xor
pop
inc
popa
jl
test
pop
mov
aad
das
fimuls
pop
xchg
or
in
add
mov
inc
jle
inc
sbb
mov
or
cwtl
cwtl
adc
imul
fwait
pop
mov
out
stc
dec
adc
leave
push
push
push
cmp
push
daa
mov
jo
outsl
rcrb
divb
xchg
and
jle
jle
fsubl
or
sbbl
or
fsubrl
add
pop
mov
ds
roll
enter
add
iret
mov
mov
pusha
test
mov
lock
insl
adc
fimuls
cmp
into
pop
pop
shrl
jno
dec
and
pusha
mov
mov
mov
xor
cmp
push
nop
fidivrs
rclb
xchg
clc
fistps
imul
mov
xchg
call
dec
loope
inc
daa
add
sti
pop
jl
fisttpll
aad
scas
and
xor
jns
xchg
test
fwait
mov
mov
popf
loopne
outsl
out
outsb
lret
ret
mov
dec
pop
stos
test
or
int
rcrl
xchg
jns
daa
sub
and
add
sbb
test
in
fdiv
je
loop
test
or
push
sbbb
lea
fcomi
push
xchg
outsb
pop
and
xor
jb
jo
aad
add
add
enter
add
test
gs
cltd
adc
add
mov
test
in
stos
sbb
inc
sub
lds
popf
pop
cmp
or
jne
mov
bnd
xor
add
mov
loop
shrb
mov
mov
mov
sub
test
xchg
lret
mov
lret
jbe
ss
pusha
sbb
sbb
cmp
jo
sub
shll
pushf
push
mov
scas
mov
arpl
inc
repz
push
loope
scas
fadds
inc
mov
rorl
mov
and
push
dec
loop
ja
inc
pop
fstpl
imul
out
pop
test
dec
aad
dec
clc
fwait
xchg
out
iret
fbld
xchg
jecxz
pop
xor
jmp
loopne
insl
cmp
test
xor
xchg
loop
movsl
iret
push
dec
cmpb
pop
xor
sub
lds
jle
aaa
dec
dec
fcmovne
arpl
jmp
iret
insb
and
push
sub
gs
sub
shrb
clc
and
mov
pop
ficomps
xor
mov
popf
mov
xor
add
sahf
roll
mov
and
test
mov
lret
cltd
jne
cmp
push
sti
cmc
jb
scas
arpl
enter
add
aaa
adc
push
notb
push
pop
adc
in
call
jns
ljmp
add
push
fistps
ds
push
add
je
lock
jecxz
mov
ret
repz
sahf
int3
jo
lret
test
movsl
xchg
lds
ret
sbb
fcmovu
out
mov
mov
lahf
mov
mov
pop
jnp
xchg
scas
xchg
gs
mov
sti
push
push
pop
xorb
xchg
inc
dec
mov
jecxz
fimuls
sub
xor
insb
jae
stos
mull
jne
outsl
xchg
add
xchg
push
xchg
call
cwtl
aaa
dec
mov
push
iret
mov
jecxz
adcb
mov
pop
es
test
mov
pop
es
and
cmp
push
inc
push
inc
cmp
mov
lcall
dec
push
push
pop
shl
pop
aas
mov
das
cmp
mov
add
or
or
lcall
es
inc
mov
lahf
adc
cmc
rcrb
rcr
and
stc
mov
rcrb
inc
lds
lahf
jbe
mov
sbb
xchg
clc
jge
xchg
jg
pop
popfw
add
outsb
mov
shr
mov
jp
inc
push
sahf
adc
mov
dec
dec
push
adc
push
ja
lret
pop
pop
ret
push
jo
push
mov
sbb
pop
stos
jge
loopne
inc
call
xchg
test
out
pop
jecxz
int
mov
adc
mov
ficomps
mov
subl
stos
stc
arpl
push
ja
add
nop
data16
inc
rcrb
hlt
jp
cmpsl
inc
adc
mov
pop
test
push
jns
add
stos
idivl
mov
xor
std
cld
outsl
fsubl
mov
and
adc
shl
popf
cmp
mov
inc
lret
fimuls
lret
xor
inc
aaa
movsb
mov
shr
cmp
inc
adc
and
and
imul
and
pop
das
cmpsb
mov
mov
mov
fmuls
out
outsl
ja
jns
sti
sbb
or
push
test
std
push
mov
and
sub
daa
mov
adc
xchg
or
fiaddl
push
lods
call
orl
hlt
xchg
fnsave
dec
rcl
je
dec
scas
push
pop
sub
jp
test
pop
mov
adc
mov
mov
add
mov
cmc
fcomps
testl
sbb
push
pop
cld
pop
rclb
int3
cmp
sub
add
inc
out
clc
movsl
lcall
movsb
fisttpll
jg
sbb
adc
cmp
mov
or
js
scas
and
dec
imul
out
iret
push
pop
jno
mov
pushf
pop
sahf
push
int
jmp
outsl
sub
push
adc
jb
push
mov
scas
pushf
movsb
int
push
jmp
cli
or
in
call
inc
mov
jmp
adc
insl
loope
pop
stos
mov
insb
shl
divl
xchg
jne
pop
sbb
sbb
lahf
cwtl
test
or
dec
and
pop
imul
xor
rcrb
push
sbb
or
mov
imul
adc
adc
inc
xorl
push
cmpsb
and
xchg
hlt
es
pop
mov
xchg
mov
mov
add
sub
cmp
sahf
mov
and
loope
cmp
lahf
ucomiss
jmp
xor
pop
out
mov
cmpsl
inc
arpl
insl
pop
das
xlat
pop
mov
push
jecxz
sbb
test
rcll
push
cmp
mov
xor
in
test
loopne
pop
xor
js
mov
fnstcw
add
pop
nopl
pop
int
push
lock
sub
stos
imul
add
ret
xor
filds
xchg
movsl
inc
mov
add
inc
into
insb
loope,pt
adc
popf
mov
aas
int
out
ret
das
popa
and
and
mov
data16
inc
or
lds
or
into
fdivs
cld
sbb
adc
roll
or
aas
sbb
mov
scas
cmp
or
mov
cmp
mov
mov
into
je
loopne
sub
subb
insl
mov
push
inc
and
sti
stc
mov
lods
mov
pop
test
scas
push
ret
inc
imul
push
or
es
les
jb
lock
sbb
cltd
mov
loope
into
jg
jo
inc
push
jno
js
pop
xor
jg
adc
movsb
pop
xor
push
dec
inc
inc
test
add
sbb
scas
xchg
mov
ds
push
adc
stos
movsb
xor
insl
add
mov
stc
fstpl
fdiv
popf
inc
loop
or
stos
cmp
inc
jno
inc
sbb
push
sbb
int3
insb
loope
fbld
cltd
sub
jp
push
in
jne
jge
mov
add
outsb
imul
out
ds
mov
ret
icebp
imul
sub
push
orl
mov
mov
pop
xchg
dec
mov
jno
lods
in
iret
pop
fisttpl
cmp
sbb
lds
not
xchg
mov
mov
or
in
and
into
ficomps
cmp
repz
or
fnstenv
andl
adc
scas
jecxz
adc
and
popf
divb
xor
fcmovu
ror
mov
adc
inc
sarl
insb
imul
push
rclb
sbb
hlt
cmp
and
add
lds
push
out
inc
or
sub
imul
fidivl
pop
jnp
push
cmp
inc
sbb
clc
mov
enter
add
movsb
scas
xchg
out
mov
arpl
test
cld
jnp
inc
pop
in
jae
and
pop
cmovl
repz
mov
sbb
test
or
imul
adc
jge
stc
xor
adc
xchg
push
pusha
xor
loop
outsb
xchg
lret
ret
imul
push
rcpps
push
pop
jne
lret
jo
addr16
addr16
sub
pop
xchg
mov
xor
scas
sub
sbb
insl
and
pop
lret
push
add
lahf
xchg
add
adc
subb
mov
cmpsb
stos
mov
rclb
stos
jns
frstor
cwtl
in
bound
divl
dec
stos
out
aad
jge
test
cltd
push
mov
mov
add
dec
dec
dec
inc
shll
cli
ljmp
mov
jge
push
imul
imul
xor
clc
push
inc
sub
or
dec
dec
mov
pop
ss
icebp
pop
push
push
jo
mov
pop
cmpsl
xlat
jl
push
scas
dec
mov
inc
jg
add
inc
jg
fimull
xchg
jecxz
and
sahf
and
loopne
adc
mov
les
pop
ffree
rorl
addl
insl
jae
mov
mov
xchg
jle
mov
rolb
sbbl
xchg
notl
repnz
xor
mov
mov
sbb
jg
cmp
fbstp
pop
mov
insl
xor
addr16
cmpsb
lods
fidivrs
aaa
mov
je
push
pop
subb
xchg
call
sub
fidivl
push
lcall
jg
arpl
add
xor
jl
dec
mov
dec
push
lret
sub
dec
mov
lcall
cmc
push
leave
cmp
hlt
sti
aas
xchg
dec
or
add
or
shlb
shlb
in
mov
mov
aam
mov
dec
push
sub
and
rorb
mov
push
mov
or
and
lcall
inc
stos
sub
jno
in
xor
push
fs
push
adc
and
enter
jecxz
aad
adc
xchg
adc
ja
dec
jne
jmp
pop
cmpsl
cmp
add
lods
inc
arpl
int
mov
xchg
icebp
movsl
addb
arpl
stos
mov
dec
pop
and
push
jecxz
bound
push
inc
inc
rolb
inc
shl
adc
mov
add
icebp
rcrb
aad
sub
in
mov
xor
fnsave
stos
fnstenv
outsb
push
mov
lcall
fsub
data16
loope
sbb
dec
jmp
adcl
pop
out
pop
ds
mov
lock
cmp
adc
pusha
jmp
mov
mov
rol
je
ja
xor
ficomps
lock
dec
fadds
cltd
in
xlat
or
je
mov
js
inc
pop
push
movsl
xchg
add
int3
iret
sbb
pusha
or
pop
shrb
dec
pop
mov
mov
lcall
cs
or
filds
int
ja
jne
test
cmp
hlt
xchg
inc
dec
imul
aad
cs
iretw
pop
sub
mov
scas
call
imul
pushf
outsb
rclb
int3
sub
jno
xor
mov
ja
xor
add
xor
icebp
jo
mov
mov
lcall
les
inc
add
les
pop
leave
sub
cs
xchg
mov
mov
add
mov
mov
das
inc
test
mov
in
adc
ljmp
cmc
pop
dec
jg
and
pop
sbbl
push
imul
inc
sbb
in
or
pop
jb
mov
stos
cmp
arpl
cltd
ret
inc
int
jns
pushf
mov
in
dec
ja
test
out
and
test
push
inc
push
mov
push
scas
daa
and
out
into
sbb
mov
test
scas
add
mov
jne
imul
xor
jns
inc
inc
lahf
je
daa
negb
and
push
and
test
clc
xchg
mov
js
dec
pop
bound
add
xorl
scas
call
xchg
sbb
pusha
pop
jns
test
scas
sub
cmp
pop
popa
pusha
inc
pop
add
mov
xchg
jb
mov
sub
and
xchg
ret
pop
or
sub
inc
js
cmp
adc
movb
cld
push
pop
insl
int3
cmpsb
outsl
mov
inc
int
pop
cwtl
fisubrs
dec
addr16
add
nop
pop
and
jmp
rolb
insl
mov
cmp
idivb
xchg
and
out
or
cmp
or
and
xchg
push
sbb
cmpsl
pop
fdiv
push
filds
dec
inc
or
stc
pop
mov
insb
add
enter
pop
adc
test
sub
jecxz
loopne
cmp
xchg
lcall
pop
test
or
adc
jb
popa
in
shlb
pop
push
add
jbe
jb
fstps
in
lcall
dec
int3
mov
pop
fsub
dec
cmp
mov
and
mov
mov
sbb
push
inc
fistpll
js
lods
divl
divl
sbb
fs
and
xchg
mov
pop
clc
cs
adcb
nop
add
lret
mov
jbe
xlat
sub
cmp
mov
xor
js
js
outsl
mov
and
fimuls
push
lock
rol
cmp
dec
int
cmp
xchg
add
lret
push
int
stos
adc
cmp
or
cmp
pop
push
cmp
mov
hlt
adc
mov
sbb
mov
jns
popf
hlt
mov
mov
movsb
mov
hlt
ret
int
add
lret
lret
mov
or
cmp
out
stc
jg
xchg
nop
mov
fistpll
pop
adc
arpl
aad
scas
scas
and
bound
aaa
jbe
andb
hlt
lods
xchg
pop
jne
mov
mov
ret
out
inc
int3
fistps
add
pusha
aad
and
dec
lds
ljmp
mov
ret
xchg
rcll
cltd
jle
jmp
inc
stos
xchg
sub
push
cmp
bnd
ss
pop
int3
inc
xchg
std
cwtl
inc
push
scas
mov
roll
aad
movsb
fiaddl
mov
je
xchg
popf
repz
jl
popf
and
push
pop
add
sahf
pop
fcmove
mov
iret
mov
int
leave
mov
jle
fdivrs
jge
mov
enter
loop
jg
mov
aam
aam
jno
in
sub
adc
and
arpl
dec
sub
je
ficoml
out
stos
cmp
add
or
jbe
jno
xchg
mov
pop
out
out
imul
jne
pop
popa
jge
mov
test
mov
mov
sub
shlb
into
inc
pop
call
dec
clc
and
push
cmp
addr16
sub
stc
sub
out
or
movsl
mov
fstps
jno
sbb
dec
rolb
adc
nop
pop
and
jns
jb
push
imul
push
and
popa
cmp
popf
in
test
cmpsb
lahf
enter
sub
mov
xlat
mov
mov
ss
sbb
repz
jns
inc
xchg
imul
test
rcrl
add
in
cmp
and
jp
lcall
sbb
push
stc
pushf
mov
mov
test
outsb
push
into
repnz
sub
sbbb
or
insb
jbe
and
pop
fidivl
cmp
lock
gs
adc
push
sbb
inc
dec
pop
loop
filds
mov
inc
cmc
lret
aad
loop
ret
sbb
push
fldl
jbe
jl
out
int3
faddp
cltd
jno
sbb
xor
cltd
push
cmpsb
adc
in
jp
inc
clc
cmpsb
repz
jp
imul
daa
xchg
cmp
popf
push
sbb
mov
pop
push
bound
shr
pop
and
adc
jbe
imul
imul
mov
add
fists
scas
jmp
push
cwtl
int3
ret
loopne
xor
sbb
mov
clc
inc
xchg
mov
cmc
sbbl
das
pop
dec
stos
dec
clc
cmp
dec
test
sub
lahf
adc
push
mov
mov
scas
jle
les
out
mov
sub
movsl
mov
sbb
in
push
sub
add
jns
jecxz
outsb
stos
sub
sti
cmp
lret
or
sbb
lret
stos
mov
rolb
ljmp
jge
cmp
xor
cmp
mov
mov
cs
and
push
push
mov
jle
fwait
dec
mov
add
jg
fistps
dec
mov
sti
pop
xor
test
stos
fs
in
stos
int3
ljmp
fs
lea
outsl
mov
into
sbb
pop
cmp
stos
test
jns
outsl
fcmovu
test
in
jmp
jl
aas
sbb
jle
cmp
sub
cmpb
pop
push
dec
cwtl
and
xchg
dec
xor
pop
adc
aas
mov
inc
sub
inc
push
popa
sub
mov
mov
loop
gs
pop
cmp
mov
push
aam
shrl
xchg
movsb
push
mov
sub
mov
jecxz
outsl
pushl
insb
xor
cltd
or
loopne
add
cmpsl
les
aaa
subl
mov
inc
jbe
lahf
arpl
enter
hlt
adc
jl
and
push
push
pop
mov
insb
cmp
sub
bound
add
xor
push
insl
fxch
hlt
adc
and
sti
out
xchg
aaa
test
push
push
scas
lock
stos
hlt
cmp
xor
das
pop
mov
or
lods
mov
sahf
jmp
cld
dec
cmpb
xor
and
hlt
icebp
dec
add
test
push
cmc
cmp
cwtl
pop
xlat
andb
sub
fisttpll
adc
lock
push
or
in
mov
fs
add
mov
andb
sbb
lods
inc
cmp
pop
and
cmp
mov
xor
ljmp
repz
mov
cmp
sbb
jns
js
sbb
cmp
inc
js
imul
jns
inc
hlt
or
xchg
jne
es
rorb
mov
je
jg
xchg
jmp
in
sbb
rcrb
loope
lock
mov
fwait
push
sub
mov
stc
test
test
add
arpl
movsb
cwtl
jne
cmp
mov
push
test
and
outsb
inc
aaa
and
loope
in
adc
cmp
nop
push
daa
inc
pop
lea
and
add
cmpsl
lahf
xchg
add
cltd
shrb
xchg
push
insb
je
sbb
xchg
xlat
dec
gs
jb
jle
and
cltd
imul
bound
push
mov
aaa
lret
ja
mov
xsaveopt
mov
or
repnz
clc
sub
sbb
inc
cmpsb
es
aas
ret
mov
push
cli
and
sbb
stos
add
inc
aaa
cltd
push
jb
popl
dec
xorb
mov
xor
push
clc
inc
push
movsb
jo
fnsave
inc
mov
movb
sbb
sbbl
cmc
push
xchg
adc
arpl
and
xchg
push
ret
in
sbb
shll
lret
xchg
mov
adc
adc
xchg
sbb
enter
mov
inc
inc
call
call
movsb
adc
jl
adc
cwtl
sub
testb
or
sbb
insl
loope
icebp
cmp
sbb
and
nop
inc
xor
bound
addl
mov
mov
loop
aam
cmpsl
into
pop
sbb
mov
mov
aad
inc
cli
dec
dec
bound
xor
std
mov
je
dec
movl
xor
and
jge
stos
aam
mov
cld
addr16
jge
sti
aas
cmpsl
push
jle
repnz
push
movsl
scas
pop
mov
lea
lock
add
jle
push
mov
xor
lods
comiss
xor
test
test
stos
inc
movsl
arpl
and
and
das
pop
test
cmp
jo
mov
repnz
popa
test
pop
and
inc
push
std
mov
xchg
addr16
inc
jmp
jle
xor
adc
rclb
fcmovnbe
and
movsb
jae
negb
iret
cmp
jo
mov
sub
out
inc
adc
ds
dec
es
lock
cltd
and
push
es
mov
stc
or
mov
hlt
sub
adc
repz
ror
xchg
jo
dec
pop
mov
jns
sahf
fdivrs
add
fadds
insb
inc
adc
pop
xchg
scas
in
js
ljmp
or
mov
pop
mov
cmp
arpl
lret
aam
aas
popa
push
ret
jg
rolb
stos
or
lahf
dec
insl
adc
je
insb
rcrl
mov
lret
and
inc
pop
jl
pop
mov
lret
int3
push
fdivrl
addr16
adc
or
ret
jae
cmp
imul
mov
sbb
fiadds
mov
aaa
sarl
pop
leave
adc
mov
and
sbbb
dec
in
add
rclb
mov
mov
jns
shrb
movsb
filds
xchg
pop
ljmp
jb
mov
cmp
xchg
mov
mov
stos
aam
stos
js
inc
jb
sub
lds
sbb
or
pop
pop
add
outsb
cmp
pop
cwtl
xor
addr16
addl
mov
repz
pop
push
xchg
or
xor
xchg
test
jns
dec
mov
sub
fcoml
fsubr
mov
xchg
repz
fs
fdivl
push
mov
xchg
js
pop
outsl
xor
xchg
cli
push
lds
push
jbe
push
adc
xor
scas
test
pusha
mov
adc
mov
add
addr16
jo
inc
lods
stos
and
cmp
add
out
dec
aas
xchg
or
sbb
notl
lds
divb
push
mov
xlat
fwait
call
out
sahf
outsb
inc
movsl
sbb
lods
jg
cs
rorl
push
sahf
stos
inc
pop
or
push
test
data16
dec
and
nop
inc
icebp
pop
push
mov
push
pushf
and
push
fwait
test
jle
pop
pop
push
ret
mov
inc
cmp
mov
cltd
in
mov
jle
xchg
inc
or
push
xor
dec
adc
sbb
mov
push
fcoms
xchg
xor
into
andl
push
mov
xchg
xor
out
push
jns
pop
stos
add
movsb
imul
cld
or
mov
loop
shlb
inc
test
fidivs
inc
sahf
xor
mov
mov
aam
inc
js
mov
mov
dec
and
loop
loopne
aad
aas
mov
dec
xchg
jmp
jl
in
outsb
loope
inc
and
mov
idivb
sbb
flds
repnz
inc
icebp
test
pop
dec
xchg
sub
jl
mov
mov
push
jb
fcmovnb
mov
lods
shll
fnstsw
sbb
ds
pop
jo
push
scas
fs
inc
xor
inc
sub
push
push
cmp
sbbl
push
mov
add
fwait
jbe
jno
movsl
aam
cli
jo
das
repz
scas
jnp
mov
icebp
xor
cmp
ds
movsl
adc
insb
cmpsl
mov
push
pusha
sbb
sub
jle
pop
aaa
rcll
xor
inc
fdivp
std
lret
add
outsb
mov
call
stos
push
test
rolb
xchg
jns
rolb
xchg
fcmovnb
pushf
and
jp
pop
popf
sti
push
les
pop
add
inc
mov
jae
filds
movsb
dec
mov
hlt
cmp
lods
and
mov
pop
mov
mov
sahf
pop
mov
xchg
or
es
ror
xor
leave
cmp
insb
subl
subb
xchg
stos
mov
inc
pop
dec
in
mov
jge
push
iret
add
or
enter
popa
icebp
std
lods
inc
fwait
dec
jecxz
mov
xor
sbb
adc
movsl
dec
insb
mov
arpl
xchg
loop
fnstenv
leave
adc
enter
sub
jno
mov
jle
ss
pushf
call
scas
cs
xchg
mov
adc
jmp
mov
jl
rorl
inc
mov
ljmp
test
enter
out
push
cmp
xor
lcall
cmpsl
pop
fdivs
pushf
ret
mov
shl
xor
ljmp
xor
push
pop
jg
ds
mov
fcompl
icebp
push
cmp
outsb
fdivrp
add
jb
dec
hlt
imul
sarl
push
mov
aad
cmp
xor
lea
mov
pop
stos
out
mov
and
lret
inc
cltd
ficoms
les
push
jb
std
out
dec
bswap
jb
pop
inc
mov
fs
add
sub
sahf
mov
mov
lret
lret
mov
add
popa
js
out
xor
sbb
mov
arpl
mov
push
mov
outsl
adc
pop
jg
imul
sti
xor
xor
pop
addr16
xor
imul
fnstcw
out
in
push
leave
loope
push
inc
in
popa
dec
mov
mov
add
pop
dec
jecxz
es
lcall
jmp
std
ljmp
xchg
or
fiaddl
inc
std
ja
pop
sub
ret
outsb
inc
enter
loop
iret
in
jne
xchg
sar
push
push
mov
adc
cwtl
lret
inc
sbb
sub
test
fwait
cmp
dec
dec
adc
in
mov
iret
les
xchg
xchg
sbb
adc
clc
out
dec
jns
enter
dec
mov
outsl
mov
es
jns
pop
bound
jge
mull
cmp
mov
xor
rcrb
loop
cmp
fimuls
stc
jbe
inc
sub
inc
jg
call
std
outsl
sub
push
bound
inc
xchg
js
sbb
cmp
repz
cmp
jle
nop
stos
lds
por
scas
inc
and
lcall
in
push
and
loop
js
inc
test
int3
test
inc
orl
xchg
jg
dec
dec
frstor
mov
roll
in
jmp
mov
dec
cli
loope
stos
pop
orb
sbbb
push
jo
mov
mov
pop
imul
ret
lds
inc
mov
inc
rorl
xor
imul
push
in
pop
jp
and
iret
lcall
aam
xchg
popf
imul
shlb
or
add
mov
out
loopne
insl
nop
inc
xor
xchg
mov
repz
sbb
int
adc
pop
rcrl
xchg
pop
outsb
leave
in
lret
shlb
lret
sbb
pop
sbb
xchg
mov
scas
sub
idivb
and
cmp
adc
mov
mov
sahf
pop
jg
int
popa
jle
outsb
add
in
rorl
gs
cld
inc
cmp
jecxz
pop
mov
cld
inc
leave
pop
xchg
cmp
sarl
mov
mov
imul
push
xchg
dec
cmp
sub
stc
mov
rcrl
or
out
shlb
cld
sti
bound
push
mov
push
cmp
aam
xor
adc
cmp
inc
or
cwtl
sub
push
jg
loope
xchg
or
xchg
xor
mov
mov
cmp
ficomps
les
out
mov
xchg
mov
sub
cmp
imul
mov
lret
ss
mov
add
outsl
pop
shlb
sub
jnp
mov
lret
rcr
in
jb
cmp
mov
popa
es
cmp
inc
or
dec
fistpll
fnsave
ss
sbb
cmp
add
cs
xor
adc
outsb
in
ds
mov
clc
push
pop
in
aad
push
sub
js
or
arpl
addr16
and
shrb
js
push
test
fwait
xchg
enter
or
adc
mov
scas
jne
mov
aad
mov
add
mov
clc
das
rol
adc
pop
das
push
fcoms
in
daa
push
push
ret
ljmp
rcrl
xchg
jle
xchg
push
subl
test
jae
aas
jne
movsl
jo
scas
daa
lds
popa
sub
xor
fstpl
sbb
ret
inc
insb
cli
add
test
sbb
xchg
into
ror
out
add
imul
pop
lods
jb
clc
push
mov
test
inc
and
add
jns
jne
in
aam
push
mov
cmp
push
cmp
adcb
add
xor
add
jns
fwait
xchg
fmul
insb
inc
in
aaa
mov
pop
mov
xor
cmp
or
push
and
test
scas
sub
js
loopne
mov
imul
inc
inc
div
cmpsl
loopne
popf
pop
mov
adc
out
data16
sbb
ja
mov
test
rolb
dec
inc
and
jno
or
add
jns
arpl
in
mov
dec
shlb
stos
hlt
dec
inc
adc
jle
adc
stos
xchg
loopne
dec
dec
pop
push
pusha
les
in
mov
or
xchg
cmovge
sarl
xchg
stos
loop
test
push
call
fsubr
fimuls
int
jno
push
xor
add
pop
stc
pop
jmp
insb
in
mov
push
cmp
pushl
xlat
pop
inc
imul
jg
jg
clc
sbb
lock
pop
inc
jns
test
adc
mov
push
repz
xchg
cmp
sub
sbb
aaa
psubusb
sti
into
mov
pop
loope
and
lock
inc
inc
outsl
stos
inc
mov
mov
ror
pop
pop
and
int
jge
adc
cmp
enter
sbb
mov
testb
fcmovu
stos
lds
data16
lret
jle
mov
pop
out
xor
pop
cmpsb
dec
sbb
add
scas
inc
jb
mov
mov
pop
insb
mov
pop
in
and
pop
loopne
sarb
push
xor
into
sbb
mov
cmp
mov
in
jo
nop
mov
push
ljmp
adc
out
or
sub
push
test
push
pushf
mov
cmp
jg
mov
cmp
pop
stos
repz
jae
inc
clc
or
rcrb
and
insb
adc
add
mov
aad
mov
xchg
iret
jo
or
add
incb
or
call
mov
push
push
outsl
insl
push
outsl
shl
inc
jb
pop
dec
hlt
leave
and
add
mov
push
fildl
or
pushf
icebp
adc
int3
xchg
mov
lds
push
xchg
dec
ret
fbld
out
and
dec
add
and
xor
mov
dec
int3
add
in
mov
ljmp
mov
loop
loope
pop
xor
jns
mull
cmp
pop
adcl
pop
inc
sbb
cmc
or
cmp
or
jb
pop
adc
xchg
mov
pop
mov
xchg
js
mov
inc
sub
inc
mov
push
in
mov
cld
nop
jb
cmp
cmp
sbb
pushf
ljmp
cltd
mov
xchg
daa
xor
out
jmp
xor
in
cltd
mov
adc
cmp
mov
loopne
movsl
je
es
xor
push
out
jns
sbb
lret
movsl
xorl
mov
mov
push
adc
in
push
int
aam
push
and
shll
add
inc
adc
mov
jp
testb
cmp
repnz
bound
or
mov
pop
stc
jp
xor
mov
or
cmp
into
push
xchg
and
ret
icebp
fsubl
dec
mov
imul
or
fmuls
push
mov
push
scas
xor
adc
repnz
lods
lods
scas
xor
mov
xchg
repz
aam
sub
lret
scas
pop
out
adc
pop
push
pop
pop
sbb
mov
xor
mov
lret
out
divl
or
ja
mov
xor
inc
js
jo
xchg
lock
dec
ds
jno
mov
mov
mov
lcall
out
fwait
dec
icebp
mov
loop
cmp
xor
sub
inc
push
out
sub
sub
in
shrb
nop
test
lea
push
inc
addb
cmp
push
cmp
andb
mov
lods
xchg
jmp
ja
jmp
testl
lret
xlat
outsb
cs
jno
pop
mov
int3
addl
lds
xchg
and
clc
es
pop
and
cmpsb
mov
xor
adc
pop
in
push
inc
jg
dec
sti
jl
stos
add
push
pop
xchg
xchg
loopne
rcl
inc
push
dec
into
test
xor
xchg
popf
push
repz
sbb
adc
addr16
or
pop
dec
mov
inc
mov
xorl
cmp
cli
jmp
jmp
sahf
loopne
dec
cmpsl
cmp
out
nop
xor
je
sbb
sbb
add
decb
aad
pop
loope
in
dec
adc
aas
outsb
aas
clc
xchg
inc
je
mov
icebp
cmp
cmc
pop
daa
out
imul
add
mov
push
push
inc
popf
pop
loop
cmp
pusha
jno
mov
jmp
cmp
scas
aad
es
push
sbb
add
ss
add
xchg
xchg
xchg
and
aad
xchg
fistpll
or
ret
cmpsl
jb
mov
jl
inc
andb
jmp
pop
subb
int3
cmpsl
movb
rcr
insl
or
jbe
out
mov
xchg
inc
sbb
cmp
mov
stc
jg
sub
pushf
dec
hlt
push
and
xor
clc
dec
aas
scas
pop
pop
lret
imul
cmpl
lods
jnp
jg
gs
jb
pop
sbb
mov
sbbl
les
mov
das
stc
and
stos
lds
jbe
lcall
ss
sbb
or
xor
inc
and
test
lods
xor
pop
push
sub
jp
lods
imul
jmp
push
sbb
insb
mov
call
push
lods
outsb
pop
repnz
adc
jns
dec
dec
out
mov
jb
cld
add
jbe
loopne
or
mov
cmp
inc
push
push
fdivl
xor
sbb
inc
xchg
decl
imul
mov
shlw
adc
call
stos
mov
xor
testb
pop
xchg
add
repnz
xchg
lods
sbb
data16
ret
lahf
cmp
mov
mov
ds
jle
xor
mov
shlb
adc
mov
in
mov
popa
xchg
lret
aaa
push
addl
cld
aas
xchg
push
aam
sti
int
dec
popl
pop
imul
cmp
add
jecxz
cmpl
add
cmpsl
pop
cld
aam
push
sub
aaa
out
shlb
mov
jp
cld
sub
jae
mov
mov
fcompl
pop
inc
push
xchg
jl
and
jg
stos
mov
xor
clc
ljmp
or
jne
lret
sbb
fldt
pop
xor
movsl
and
and
sarl
les
stos
xchg
not
out
cmpsl
push
stc
outsl
arpl
in
sub
and
jp
icebp
xorl
nop
shrl
imul
pop
mov
xorb
xchg
mov
jo
adc
loope
and
call
push
das
xchg
mov
or
pop
pop
jl
inc
dec
arpl
jg
repnz
push
fildll
mov
ds
fwait
dec
in
sbb
jnp
or
repnz
jns
jle
addl
lock
push
xor
push
cmp
out
out
dec
daa
popf
repz
int3
lret
sahf
mov
in
xlat
push
fucomi
insb
scas
mov
xor
xor
je
pop
pop
pop
jno
dec
nop
in
popa
pop
xchg
mov
aam
or
xchg
test
jno
adc
ret
mov
mov
xchg
sbb
or
std
std
pop
pop
push
ror
sub
dec
pop
stc
adc
cltd
pop
mov
gs
aaa
cmp
mov
int3
xchg
nop
dec
pop
js
lods
jbe
cmpsb
sub
mov
pop
sbb
mov
cmp
std
add
rep
fnstsw
fcmovne
scas
pushf
daa
dec
sub
stos
jno
sbb
mov
cmp
sti
adc
mulb
out
movsl
loopne
jns
test
fs
sbb
mull
popf
xor
jp
cmp
mov
lret
xor
fcoms
lahf
in
xchg
andl
jae
pop
cmpsl
jno
push
inc
or
jns
jecxz
cmpps
mov
sbb
andl
xchg
loopne
leave
jge
cltd
mov
mov
cmp
in
pop
push
dec
inc
mov
xchg
test
mov
and
mov
out
push
ret
lods
into
lods
adc
lret
mov
push
ret
fnsave
test
scas
pop
mov
arpl
dec
fwait
aaa
mov
or
lods
in
or
cmpb
mov
mov
inc
imul
lret
orl
push
popf
mov
loope
inc
and
or
shlb
sub
push
enter
mov
adc
and
mov
out
xchg
sub
into
shlb
jns
ds
fdivrs
push
pop
mov
jo
cmc
testl
and
jecxz
jo
loope
xor
lods
xorb
push
pusha
fs
lahf
scas
rcr
cmp
outsb
addr16
cmp
cmpb
dec
mov
sbb
aaa
jnp
sahf
mov
add
lds
pop
das
mov
adc
fidivrl
in
xor
lea
lret
jae
pop
and
std
sub
int3
xchg
and
int
out
inc
push
or
lret
lods
mov
pop
test
jbe
fldpi
xchg
or
test
sub
xchg
pop
scas
mov
scas
pop
je
push
into
clc
sbb
jecxz
push
fisubrl
inc
mov
popf
das
lds
loopne
sbb
mov
in
addr16
adcb
cs
int
cmp
sub
jg
cmp
fwait
sbb
xchg
xor
mov
pop
flds
shrl
xorb
les
pop
scas
inc
push
fsubs
push
out
int3
into
fcomps
jbe
aad
push
sbb
outsl
test
xchg
int
outsb
mov
xchg
cmp
adc
push
xchg
mov
sbb
mov
pandn
mov
adc
cmp
rorb
mov
cmp
fsubl
pop
addr16
loope
add
test
cmp
ror
or
cmc
xor
std
loopne
jns
add
push
movsl
push
xor
jmp
jo
cmpsb
fcoms
cmp
test
mov
push
and
stc
outsl
outsl
adc
inc
xchg
pop
push
sarb
push
pusha
cmp
sbb
aad
popf
cltd
push
cwtl
les
xor
inc
and
test
sti
xor
and
lret
popf
add
mov
pop
sub
and
sbb
cmp
aas
outsb
pop
xor
loop
adc
movsl
shrb
pop
fadd
mov
jmp
loopne
inc
and
negl
cmp
cmp
lret
loopne
cmp
xor
mov
mov
cmp
sbb
push
mov
arpl
lea
cli
sub
inc
out
jge
sub
out
mov
push
daa
into
jns
push
icebp
daa
pushf
aaa
cli
sarb
push
push
inc
pop
loope
lods
testb
loope
sbb
jmp
inc
xchg
mov
xor
int3
rcll
dec
lea
iret
rol
cmc
mov
fs
scas
test
ss
subl
pop
into
push
stos
jns
cwtl
xchg
mov
mov
loopne
ficoms
mov
shrb
xchg
adc
idiv
lret
mov
push
fstpt
push
je
mov
xlat
nop
fldt
lcall
mov
out
dec
mov
push
mov
or
dec
inc
jmp
add
in
push
fisttpl
adc
mov
jg
jecxz
mov
jg
outsb
mov
jmp
mov
add
mov
inc
mov
or
mov
in
push
outsl
pop
push
aas
loopne
imul
stos
pushf
insb
pop
leave
jecxz
pop
xor
or
and
adc
dec
xchg
mov
int3
jns
add
gs
shrb
popf
leave
xchg
mov
mov
or
mov
scas
sahf
test
popf
push
xlat
popa
lods
insl
xor
sbb
cmp
pop
dec
out
aam
inc
adc
sahf
or
push
cmp
rcr
dec
fadds
int3
cs
mov
daa
cmp
adc
les
push
mov
inc
outsb
add
dec
pop
mov
stos
lret
mov
aad
and
xorb
pop
mov
dec
mov
iret
sbb
pop
inc
es
loope
xor
lret
cwtl
adc
stos
and
ljmp
shll
jbe
pushf
in
adc
xchg
add
shll
cltd
sbb
dec
xchg
fbstp
shl
out
es
mov
js
jle
adc
mov
mov
push
sub
cmp
push
in
pop
inc
cmp
pop
sub
sarl
jns
dec
test
and
or
iret
cmp
stos
mov
pop
fcoml
dec
add
push
pop
mov
loop
lret
cmc
out
jnp
outsb
mov
imul
sub
clc
cmc
roll
mov
jbe
push
test
imul
xor
xrelease
iret
lock
pop
cs
in
sub
push
dec
adc
gs
sbb
setnp
xchg
popa
fisttpl
xchg
xor
iret
lahf
stos
adc
je
adc
mov
outsl
mov
addr16
out
inc
xor
fucomp
lahf
inc
das
movl
sti
test
imul
sbbl
inc
aas
enter
popa
and
divb
or
pop
sbb
das
dec
push
sti
fidivrl
cltd
jmp
aas
push
and
mov
xor
pop
dec
jmp
xchg
sub
adc
lret
mov
mov
jl
dec
mov
mov
out
imul
lret
mov
inc
aam
mov
out
mov
sub
enter
adc
repnz
adc
addl
cs
aas
scas
jae
xchg
mov
pop
jnp
insb
inc
pushf
push
adc
add
fstps
and
popf
pop
daa
jno
lret
ss
in
jns
mov
or
data16
insl
mov
cld
mov
cmp
pand
data16
les
pop
fucomp
cmp
pop
or
lock
jp
push
cmp
dec
jo
xchg
mov
mov
mov
stos
mov
jno
cmp
into
subb
les
push
dec
sbb
testl
mov
adc
xor
xor
dec
cli
mov
ja
iret
xchg
sbb
pop
gs
sarl
pop
lock
mov
dec
aas
mov
cli
jne
outsl
daa
js
sbb
push
mov
lret
stos
scas
fidivrs
ret
jmp
aas
add
daa
imul
decb
je
into
imul
cmp
sbbb
mov
imul
in
and
loop
push
push
mov
repz
iret
cli
mov
ds
push
jle
xor
stc
imul
xor
fucomp
leave
popa
hlt
aaa
lret
cltd
cmc
xchg
push
jp
inc
xlat
mov
push
dec
rolb
inc
loopne
dec
cmpb
xchg
imul
xchg
sub
xlat
adc
push
push
or
cmpsb
cli
loope
sti
lahf
mov
mov
mov
test
test
add
xchg
mov
cmpsb
sub
addr16
dec
lods
cmpsb
ds
push
or
fcomip
scas
sub
out
lea
in
outsl
pshufw
jbe
movsb
rcr
pushf
orb
cli
cmpl
xor
clc
fwait
add
adc
icebp
out
lar
push
lods
scas
xlat
xor
lds
fbld
inc
sub
cmp
pop
pop
mov
mov
and
aad
negl
pop
mov
lret
rcrb
dec
sbb
push
push
fistpll
cmp
fldl
mov
test
push
hlt
fcmovnb
cmp
push
insb
dec
movsl
cwtl
jno
divl
jle
fsubrl
ja
jge
xchg
in
sti
icebp
xchg
ret
ljmp
test
lock
pop
fnstenv
fs
xor
fisubrl
dec
insl
dec
push
inc
mov
addb
add
sub
lret
mov
jecxz
sbb
cmpb
cmp
test
mov
mov
pop
and
xchg
pop
loop
int
mov
jp
xchg
lret
movb
push
and
fnsave
faddl
sbb
andl
shll
push
in
adc
and
add
pop
leave
cmp
aad
test
pop
push
pop
imul
or
xor
jle
xor
mov
sbb
shll
nop
ret
xor
fs
inc
pop
addr16
pop
lahf
xchg
testb
push
jb
mov
ja
shrl
test
xchg
mulb
cmp
lea
xlat
out
pusha
shlb
push
inc
std
jno
addr16
adc
je,pn
fstps
mov
call
repz
repz
inc
pop
adc
or
adc
inc
jno
ud1
movsb
int
loopne
fcmove
sub
or
dec
test
ret
mov
cwtl
and
mov
imul
movd
adc
jb
ds
sub
test
ss
pop
cld
shr
mov
fadds
loopne
stos
sub
es
pop
add
enter
adc
in
inc
sahf
cld
mov
jbe
arpl
mov
mov
scas
adc
sbb
outsl
insl
mov
scas
jns
int3
test
fmull
in
dec
fucom
xchg
jo
in
xchg
sti
ljmp
pop
xor
sahf
mov
push
cmp
xchg
fstpt
out
dec
aad
pop
test
mov
jmp
movsl
lods
add
icebp
ss
outsl
sub
imul
push
mov
adc
jnp
mov
arpl
jmp
sbb
dec
inc
dec
rcl
adc
aam
pop
test
lahf
gs
xchg
cmc
cli
pop
lret
inc
in
aas
das
xchg
insl
mov
add
xchg
push
sbb
lahf
jl
sbb
mov
mov
js
loopne
cltd
dec
sbb
cmp
push
cmp
push
movsb
cmp
sahf
mov
cmpsb
mov
push
jo
test
aam
lods
xor
rcll
xor
cmc
add
fsubrs
popa
cmp
mov
cli
mov
das
out
imul
mov
lods
movsl
adc
and
and
xor
fwait
test
xchg
imul
xor
pop
push
xorb
pop
fs
das
lret
xor
movsl
inc
lds
lea
mov
sub
adc
jns
lret
mov
out
push
xchg
std
nop
jg
mov
mov
xchg
call
test
jle
call
push
test
pop
mov
mov
fldenv
cmc
lcall
dec
icebp
push
inc
cs
cmp
push
icebp
pop
mov
mov
cmp
sbb
mov
lea
cltd
test
pop
push
or
inc
ret
mov
mov
sahf
pop
in
jbe
xor
fldcw
idivb
test
les
mov
xor
stc
mov
shl
pop
stos
fs
test
sub
nop
cwtl
dec
mov
jl
dec
xchg
xchg
dec
mov
or
add
fnstsw
sub
outsb
mov
mov
sub
inc
adc
mov
imul
fsubrs
pop
add
das
test
jecxz
jo
mov
mov
ljmp
ja
dec
cmp
push
lcall
cmp
xchg
pusha
pop
enter
mov
mov
fisubrl
addl
sub
lahf
cli
stos
scas
cmp
test
pop
add
pop
leave
ja
adc
inc
jae
cmp
dec
push
dec
outsb
sbb
or
mov
insb
and
fidivl
mov
cmp
cld
sti
xor
enter
mov
fisubl
push
add
adc
xchg
aad
mov
imul
int
pushf
in
outsb
stos
or
pusha
aaa
data16
ja
pop
jle
cmp
fisubrl
pop
js
in
dec
and
stc
and
add
jmp
iret
push
mov
repz
in
adc
pushf
ficoml
lret
pop
loop
pop
jno
out
adc
fs
and
loopne
mov
int
lcall
iret
out
dec
arpl
dec
cmp
sub
rcr
lock
lret
test
mov
fbstp
imul
sahf
mov
sbb
je
mov
push
test
mov
sub
xor
xchg
push
or
in
ljmp
add
xlat
outsl
jg
cmc
sub
mov
jp
test
pop
rcrb
inc
sbb
out
lcall
stc
idiv
xor
and
cltd
pcmpgtw
adc
and
in
das
xchg
ss
xchg
test
xchg
pop
les
pushf
lahf
fadds
out
hlt
push
inc
jecxz
jno
data16
ret
mov
adc
xchg
and
mov
jge,pn
jmp
icebp
arpl
scas
pop
outsb
mov
and
sbb
dec
mov
test
cs
mov
jg
jo
mov
aas
stos
mov
lds
in
xchg
mov
jmp
sbb
mov
xor
mov
jp
fstps
dec
or
push
into
sbb
pusha
push
push
dec
pushf
scas
mov
pop
mov
inc
flds
mov
add
leave
or
mov
xchg
dec
add
stos
lods
popf
xchg
mov
lock
xchg
inc
jae
xchg
mov
adc
mov
popa
mov
cli
add
scas
scas
xor
jo
lahf
pusha
inc
push
lret
fbstp
lcall
and
leave
mov
and
add
sbb
pop
mov
pop
push
sub
jno
cmp
les
xchg
les
das
aad
mov
hlt
mov
push
fbstp
enter
cmp
test
sub
cs
daa
dec
repnz
imul
dec
add
loop
push
jle
mov
jns
icebp
out
adc
sbb
adc
popa
mov
repnz
mov
in
mov
sahf
subb
lret
pop
xlat
call
arpl
icebp
rcr
lock
jge
cmpsb
mov
stos
push
inc
loopne
ljmp
cli
mov
fwait
ja
sub
loopne
enter
or
mov
sub
stc
xchg
xor
lock
lahf
dec
xchg
pop
push
insl
movsl
loope
test
or
shll
sub
xor
xchg
ljmp
pop
mov
hlt
loopne
cltd
inc
int
fsubrl
adc
daa
int
loope
dec
mov
out
pop
mov
jb
testl
lods
jns
outsl
and
cmc
jge
pslld
repz
jno
mov
adcl
lds
ds
pop
dec
mov
test
pop
imul
or
mov
loope
jle
mov
sahf
lods
mov
cmp
and
lock
mov
nop
hlt
adc
loope
cmp
sbb
and
push
add
in
cmp
cld
mov
add
and
jge
push
into
js
sub
cwtl
fnstenv
add
and
outsb
sbb
shll
inc
div
clc
inc
jge
pop
mov
pop
push
rol
sub
popa
pop
dec
sub
mov
add
xor
inc
mov
jbe
test
gs
shll
xorb
lcall
movsl
jle
push
pop
test
add
insb
popa
sub
movsb
scas
mov
mov
roll
push
rcrb
popf
das
iret
int3
push
sub
call
addr16
and
sub
xorl
xchg
inc
xchg
leave
nop
inc
cmp
mov
inc
clc
inc
mov
push
clc
cmpsb
jb
aaa
pop
adc
idivb
xchg
cli
ret
cwtl
jle
mov
cmpsb
jmp
roll
ret
fs
sub
ret
push
daa
popf
adc
xor
inc
fs
iret
ss
insl
fwait
dec
into
out
in
lods
in
and
fiaddl
jl
pushf
sbb
cmpsb
lods
in
in
adc
icebp
xchg
sti
mov
loope
jmp
lds
jb
orl
mov
out
and
inc
dec
or
pop
mov
adc
mov
sub
jmp
inc
fwait
fcoms
mov
inc
daa
pop
cmpsl
ror
sub
dec
jns
mov
in
cwtl
arpl
cltd
cmp
mov
lock
sub
push
les
scas
jmp
sahf
cmpsl
in
in
pusha
xor
xor
dec
ret
std
or
iret
pop
stos
mov
cwtl
repz
mov
lret
or
lahf
jmp
push
push
jo
nop
mov
into
lods
cmpb
adc
in
dec
hlt
xchg
movsb
mov
xchg
stos
pop
push
notb
shll
scas
cltd
jo
mov
adc
nop
inc
adc
in
sub
dec
scas
rol
divl
sarb
mov
and
aaa
loop
push
sarb
int
fstpt
cltd
lcall
ret
cmc
aad
outsb
icebp
scas
int
mov
dec
dec
xor
cmpsb
jl
cltd
test
sahf
or
insb
xchg
adc
scas
push
icebp
xchg
cmp
inc
cmpsl
pop
repnz
out
dec
jmp
stc
xor
out
jno
mov
nop
repnz
sbb
inc
mov
js
movb
xor
cmc
fdivrl
ljmp
clc
dec
call
stos
dec
inc
push
testl
aas
nop
pop
stc
xor
pop
xlat
aam
lea
pop
add
pop
inc
dec
in
xor
ja
pop
mov
mov
mov
insl
jmp
pop
mov
mov
fbld
test
sub
mov
push
adc
xchg
in
das
xorb
jg
mov
shr
out
sub
xchg
mov
xor
es
jns
pop
mov
mov
cmp
sahf
int
enter
dec
jle
loopne
psubd
dec
pusha
lcall
jbe
sbb
imul
add
and
push
test
mov
cli
mov
mov
cli
inc
loop
mov
adc
dec
lcall
std
dec
inc
insl
pop
call
mov
add
add
ljmp
movsb
or
mov
ret
sbb
push
pop
movl
outsb
pop
lcall
fsub
cmpsb
xchg
mov
ja
sbb
pop
aaa
push
jecxz
dec
sub
rolb
repz
jae
sbb
fldcw
or
stos
lods
xor
popa
push
adc
push
push
jp
repnz
add
fs
lret
aas
daa
addl
xchg
cmp
outsl
xchg
icebp
aam
mov
jle
ret
insb
push
xor
jle
flds
mov
xchg
pushf
daa
pop
cmpsl
out
or
fadd
test
xlat
jg
mov
rorb
cmp
lods
repnz
mov
xor
out
mov
leave
out
jl
popf
cltd
dec
test
or
or
dec
mov
clc
in
inc
adc
pusha
dec
xchg
dec
fdivrl
push
pushf
fisubs
push
jle
dec
lahf
divl
push
sbb
negl
lar
arpl
jo
js
mov
stc
test
cli
mov
mov
mov
fcomp
mov
lret
inc
cli
pushf
pop
out
clc
sbb
mov
adc
shll
shlb
push
inc
sbbb
xor
sub
aad
shrb
loopne
push
cmp
adcb
shrb
push
jp
lret
sub
or
test
xlat
es
insl
dec
or
lock
ds
inc
pop
out
push
mov
jg
fstp
int
fdivp
fwait
nop
hlt
clc
or
std
jge
cmc
or
fadds
fwait
jne
in
and
jae
or
adc
out
and
mov
divl
sbb
in
enter
mov
and
inc
xchg
mov
movsl
pop
push
xor
pusha
adcl
cmp
subl
inc
mov
dec
jle
rcr
xchg
cmp
cwtl
sub
mov
loopne
pop
lock
push
jecxz
stos
shrl
lcall
ret
out
inc
cltd
outsb
gs
cmpsb
xchg
in
sub
call
mov
push
nop
aad
adc
xchg
push
or
cld
jns
mov
and
cmp
xor
pop
mov
pushf
inc
jl
int
jo
cltd
fidivrs
sub
dec
dec
xor
xchg
pop
mull
push
add
dec
rcl
and
imul
mov
or
cli
mov
popa
in
adcl
push
mov
pop
xor
js
aas
dec
jo
sub
pusha
popf
stos
call
or
aaa
xlat
shlb
sbb
push
test
mov
add
les
add
or
xor
scas
std
push
insb
scas
pushf
rcl
test
clc
je
mov
sbb
dec
es
in
push
rorl
jecxz
mov
faddl
sbb
add
lock
movsl
test
ja
mov
sub
cli
pop
inc
jecxz
sti
jbe
mov
jl
jo
or
lret
jb
adc
mov
jne
cs
int3
int3
pop
mov
sub
or
jbe
cmp
shrl
rcrb
pop
mov
jle
mov
das
push
mov
aas
in
jno
fstpt
xchg
mov
pop
mov
dec
push
mov
hlt
cmp
inc
adcb
out
pop
cli
rcl
sti
cmpsl
shlb
sbb
fimull
je
fs
jns
pop
inc
imul
aaa
shrb
das
out
fstps
outsb
mov
or
mov
sbb
pop
mov
mov
xor
jae
popf
test
addb
xor
iret
cmp
jl
push
loope
inc
xchg
icebp
and
and
popl
mov
fstps
stos
or
cmp
push
push
jg
in
push
js
cmp
popf
aaa
xor
pushf
add
lcall
and
sbb
and
lret
into
in
in
xor
or
lcall
xchg
rolb
xlat
pushf
outsl
ljmp
inc
ja
je
iret
lods
call
lahf
and
cmpsb
sahf
mov
movsb
pop
mov
jge
popf
aaa
ja
adc
xchg
xor
pusha
cmp
xchg
xchg
fsubrl
sbb
cs
cmpsl
mov
and
jbe
insb
pushf
mov
mov
mov
lods
mov
insb
push
adc
pop
in
cli
lret
lods
subl
leave
mov
mov
mov
mov
shll
jbe
add
sub
push
outsb
push
mov
addl
lock
dec
and
pavgw
inc
mov
popa
in
arpl
push
gs
test
jge
sub
push
je
mov
fisttps
pusha
cmc
movsb
jne
outsl
mov
pop
rcl
outsb
lods
lods
push
jno
jg
aas
xchg
shl
sbb
mov
cltd
sbb
mov
dec
xchg
xchg
orl
addl
mov
push
bound
mov
push
xchg
mov
xorb
inc
test
fistps
je
add
loope
hlt
jle
fs
cmpsl
pop
mov
imul
sub
fucomip
sbb
dec
cvtps2pi
movsl
jnp
leave
inc
jge
and
ds
ljmp
xor
jg
cmp
xchg
lods
int
mov
push
add
and
mov
mov
mov
adc
xchg
adc
sub
push
pop
mov
and
rolb
sahf
add
in
pop
lods
fldl
leave
and
mov
sub
in
andl
jmp
dec
js
loopne
sahf
cmpsl
cmpsl
xchg
mov
mov
pop
stc
xchg
add
into
shrl
pop
outsl
je
inc
cmpsb
cmp
dec
add
enter
xchg
mov
or
loop
scas
in
mov
sub
lcall
xor
sub
mov
add
fisubrs
mov
scas
jg
push
push
ret
mov
or
jle
shrl
fidivrs
and
loop
jge
xchg
xor
push
inc
add
sarb
add
fxch
pop
sti
ss
jl
push
lea
lret
and
adc
movsl
clc
faddl
repz
nop
fsubrs
and
js
loop
pop
daa
call
mov
xchg
and
or
mov
pop
aaa
xor
ror
cltd
sbb
scas
insl
lods
test
rcrb
lret
imul
xor
mov
mov
movsb
push
jb
mov
jp
cltd
and
je
pop
outsb
pop
adc
jg
shlb
jecxz
scas
mov
or
push
xor
sarl
outsl
es
inc
or
xchg
xchg
cltd
loop
push
stc
popa
ss
and
adc
cmpsl
push
pop
push
enter
scas
jnp
mov
mov
out
sub
add
mov
fst
lods
cmp
push
in
sbb
dec
icebp
push
pop
adc
cs
cmp
adc
shll
leave
cmpsl
jmp
jp
pop
adc
cmc
out
in
mov
shl
aaa
mov
ja
add
les
sbb
sbb
or
jne
xchg
xchg
fstpt
cmpsl
scas
or
shrl
mov
ja
mov
sub
sbb
mov
cli
lcall
int3
and
popa
fbld
ror
push
inc
cli
sbb
push
jp
or
fdivrl
sbb
adc
repz
aam
mov
mov
fmull
mov
inc
xchg
addl
rorb
xchg
or
sub
aad
push
out
scas
imul
jb
aam
into
insb
ljmp
test
and
cmove
xor
test
sub
mov
jne
aaa
hlt
dec
inc
inc
fisttps
in
jnp
lcall
je
sti
push
das
stc
hlt
hlt
and
movsl
xorb
jecxz
dec
or
cmpsb
jbe
mov
iret
mov
fistl
jbe
hlt
idiv
sbb
out
shll
push
mov
cmpb
out
sarl
sbb
mov
xor
lcall
xor
les
shll
leave
scas
shrl
inc
and
pop
orl
aam
rcrl
sub
add
ja
fildll
xlat
fdivrs
fisubrl
pop
sbb
cwtl
das
inc
xor
xor
movsb
loope
sbb
imul
mov
stc
push
imul
fsubs
test
jmp
dec
dec
xor
es
push
insb
loop
adc
xchg
jge
outsl
andl
mov
mov
call
ret
bound
in
and
inc
dec
and
bound
negb
dec
les
imul
jecxz
push
jl
enter
ret
adcb
ficompl
imull
pop
pop
push
lods
dec
add
xor
stos
inc
dec
mov
mov
sbb
cmp
jbe
and
hlt
aaa
cmp
rolb
mov
movsb
cmpsb
or
aad
and
push
mov
mov
xchg
xor
loope
fiadds
and
int3
aaa
arpl
iret
mov
lret
int
insl
xchg
rorb
dec
pop
adc
inc
add
into
and
adc
pop
cwtl
cmp
scas
sbb
scas
lcall
jnp
inc
push
sub
or
lds
mov
mov
push
xchg
repnz
in
mov
repnz
jbe
or
ja
dec
pop
push
movsb
xor
js
pop
imul
mov
add
pop
cwtl
mov
cwtl
sub
adc
dec
mov
jmp
movsl
clc
jae
mov
fwait
ja
sbb
adc
cmpsl
loop
leave
dec
cmpsl
mov
insb
scas
mov
mov
imulb
jb
xchg
iret
cmpsl
outsb
pop
xor
push
lock
mov
xchg
pop
pop
jae
lods
in
lret
xor
ret
mov
enter
ret
inc
bound
mov
dec
jmp
xor
jg
add
mov
xchg
data16
fs
xor
sbb
adc
and
out
daa
jmp
sbb
rclb
dec
fcomps
cmpsl
imul
adc
and
into
add
push
mov
sub
add
stos
mov
jne
dec
out
pop
mov
or
gs
movb
cmp
out
es
lds
inc
bndldx
std
jnp
push
mov
leave
aad
ja
mov
outsl
pusha
and
cmp
rolb
and
mov
pusha
add
and
push
icebp
jg
or
mov
insl
sarb
mov
inc
jae
xchg
in
cmp
clc
insb
imul
fidivrs
jbe
cmp
in
push
xlat
pusha
dec
stos
lea
or
fstps
sbb
dec
aaa
sar
aam
adc
out
or
test
push
push
insb
popf
adc
or
push
mov
stc
daa
fs
mov
adc
mov
and
les
cmpsb
cmpsl
xchg
mov
adc
das
mov
inc
cltd
jnp
lods
stos
cmp
insl
push
cwtl
cmp
cmp
adc
icebp
xor
pop
in
std
int3
cmpl
lea
lret
emms
xor
fldt
mov
data16
out
mov
sub
aam
mov
testl
movsl
lds
lock
idivl
mov
mov
jbe
mov
lods
mov
stos
sbb
jmp
pusha
pop
cltd
cmp
xchg
adc
rcll
shl
je
mov
mov
mov
and
cmp
sti
add
popf
sbb
adc
jp
fdivl
in
shrl
jg
jp
inc
mov
mov
xor
fisttpl
xor
pop
jne
inc
orb
cmp
push
xchg
insl
bound
stos
push
cmp
cmp
fnstenv
int
leave
push
adc
popf
sbb
sahf
jno
xchg
in
sbb
ds
shll
fildll
shrb
mov
insb
mov
scas
test
out
iret
stos
xor
mov
insl
add
adc
mov
mov
push
inc
jae
retw
sbb
inc
jns
push
loop
jp
jl
mov
add
test
addl
ret
or
mov
xor
fs
add
shrb
add
mov
jno
dec
push
add
mov
fmul
push
ds
cmpsl
into
xchg
adc
dec
jmp
xchg
inc
fs
cmp
dec
icebp
push
or
fwait
mov
pop
daa
fmull
fildl
mov
stos
bndstx
lret
sbb
cmp
es
lock
ficoms
out
out
jg
push
adc
lock
jecxz
jmp
mov
adc
push
mov
push
jmp
bound
sarb
imul
add
dec
adc
fucomi
in
and
ljmp
jge
fs
push
xchg
pop
xor
mov
push
jo
in
in
cmpsl
mov
fwait
jae
dec
push
or
xchg
mov
push
push
jecxz
xchg
mov
cmpsb
popf
mov
ret
xchg
add
xchg
sahf
mov
in
ret
divb
push
enter
push
fsubs
nop
jb
pop
push
xchg
out
rorb
xchg
sub
icebp
enter
lret
leave
inc
push
int3
int3
dec
std
pop
rol
and
cmpsl
mov
pop
mov
jne
and
mov
add
sub
jle
xchg
xchg
outsb
mov
cmp
push
xchg
incb
addr16
pop
out
and
mov
mov
cmc
outsl
mov
shll
mov
jg
push
add
fld
dec
dec
movsb
adc
out
sarb
aad
jb
lcall
jnp
sbb
xchg
imull
jnp
push
fbld
jne
movsb
pop
pusha
push
mov
fldl
mov
test
pusha
lret
popf
sub
mov
adc
sbb
in
xor
int
fucomip
int
add
call
or
fisubrs
adcl
push
gs
ja
jp
xor
scas
push
mov
jmp
fcomip
daa
cmp
adc
jbe
rcrl
dec
pop
jb
ja
stos
les
or
cmp
hlt
inc
scas
int3
incb
dec
mull
nop
std
cli
dec
loope
mov
inc
xchg
aad
imul
jg
add
mov
dec
cltd
xor
add
jge
dec
cltd
test
pop
shrb
adc
insb
pop
clc
pusha
popf
imul
fnstsw
sub
es
lds
sub
sbb
jnp
or
mov
mov
out
mov
popf
jnp
mov
jp
lock
aam
mov
pop
pop
inc
xor
mov
pop
cli
sahf
mov
jecxz
cmp
xor
rorl
pop
adc
xor
iret
dec
mov
xchg
add
xor
push
repnz
test
lahf
rolb
fidivrs
daa
movups
int3
out
push
cmp
mov
pop
cmpsl
mov
ljmp
and
call
and
dec
mov
inc
xor
arpl
dec
sub
outsb
jmp
ret
shlb
jne
xor
sti
sub
adc
xchg
rcl
adc
divb
aam
or
mov
movl
ds
add
rclb
mov
call
aas
and
stos
mov
mov
push
insb
adc
push
or
pusha
mov
adc
and
mov
nop
xchg
rorb
or
ffreep
cmpsb
push
mov
lcall
sbb
add
sbb
add
mov
mov
ljmp
inc
cli
ss
or
push
gs
xchg
jns
outsb
xchg
and
aam
repnz
mov
add
dec
lock
mov
incl
mull
enter
mov
scas
pop
inc
mov
sbbb
mov
mov
mov
add
dec
ret
jb
mov
fidivl
shr
add
cmp
add
pop
jg
lods
das
repz
push
test
out
pop
sbb
jge
test
pop
sbb
sub
fstpl
mov
mov
or
push
sbb
dec
in
jmp
ds
lret
lock
mov
in
hlt
mov
mov
jecxz
stos
bound
rorb
mov
push
lahf
or
insb
add
sub
clc
or
sub
jnp
dec
fildll
push
pop
and
mov
popa
gs
dec
cmpb
stos
adc
clc
mov
sbb
xlat
xchg
cmp
ficoms
pinsrw
sub
jno
pusha
inc
loopne
cmp
lret
push
mov
mov
add
sub
push
in
push
mov
dec
xor
aad
mov
mov
sbb
fisubl
sbb
data16
in
ficompl
pop
sbb
inc
stos
stos
push
inc
push
and
cld
or
mov
cmp
addr16
pop
mov
imul
mov
cmpb
add
aad
jle
and
xchg
jno
push
insl
cmpsb
arpl
dec
pop
iret
mov
out
xor
testl
push
testb
jbe
adc
das
pop
ficompl
cmc
roll
in
cmpsb
mov
fdivl
sbbb
les
cmp
sub
and
in
push
or
jge
push
mov
fwait
stc
cmc
mov
das
sbb
aam
cmp
out
adc
fbstp
and
ret
or
mov
lcall
mov
pmulhw
xor
mov
pop
lret
mov
xchg
dec
mov
mov
jg
fidivrs
dec
movsb
outsb
xor
pop
sub
data16
dec
push
mov
or
xchg
leave
mov
adc
inc
xchg
dec
stc
repz
leave
add
loop
rclb
ret
xor
mov
push
test
push
sub
add
int3
cmp
pusha
les
imul
stos
iret
pushf
inc
mov
add
sub
jge
xlat
and
sbb
pop
mov
add
jmp
iret
aaa
insb
leave
decl
mov
mov
es
jo
pop
stc
shll
out
mov
addr16
in
xor
mov
jmp
test
into
fildl
xchg
inc
stos
ret
mov
sbb
or
rol
pop
jg
cs
fistps
sahf
sbb
pop
fwait
pop
iret
sub
and
lea
or
xchg
and
xchg
or
mov
add
mov
pop
pop
ds
in
scas
sbb
adc
push
pop
mov
push
cmp
fnsave
jae
mov
iret
xor
xor
jmp
leave
xchg
rcr
cmp
mov
mov
sub
in
int
inc
adc
les
sti
cs
jae
arpl
lahf
andb
fidivl
test
rol
leave
or
sub
sbb
push
mov
aas
popa
ret
jmp
std
insl
sbb
mov
or
push
pop
idivb
fistpl
mov
xchg
ret
sub
call
jmp
push
insl
and
sbb
cmpsl
nop
lret
mov
popf
push
mov
sub
mov
sub
cmp
ss
mov
mov
into
xchg
adc
sbb
jmp
add
mov
xor
adcl
outsl
mov
out
cmp
bswap
pop
nop
add
xor
stos
xchg
ds
mov
lods
ljmp
call
sbb
sti
int3
and
fstpl
add
xchg
push
sbb
shlb
insl
cld
pop
and
push
mov
out
xchg
xchg
ja
xor
cmp
pop
icebp
repz
sub
inc
mov
mov
lea
adc
test
outsl
xlat
repz
sbb
pusha
stc
aaa
lds
aam
sti
xchg
jb
rcr
icebp
inc
filds
out
sbb
or
jecxz
jle
mov
sbb
fdivrs
stc
daa
add
push
dec
addr16
in
scas
cld
xor
aas
xchg
xchg
mov
clc
shll
int3
sub
xor
aas
repz
push
sub
dec
enter
jb
dec
repz
adc
push
int
mov
cmp
push
sub
sti
mov
rorb
movsb
or
cmp
cld
mov
repz
push
imul
rcrl
mov
lods
clc
test
sarb
xchg
sbbb
sub
pop
sbb
gs
cmp
jmp
or
data16
test
lock
mov
je
push
int3
cli
movsl
repnz
dec
scas
sbb
cs
push
push
mov
cmpsb
sbb
mov
movsl
or
pushf
bnd
pop
ja
inc
scas
fdivs
or
xchg
push
xor
pop
mov
daa
push
js
es
ljmp
call
bound
out
xlat
and
ss
stc
sbb
sub
or
loop
lea
mov
lcall
pop
mov
adc
adc
mov
dec
cmp
cmp
inc
negl
daa
fs
lods
out
movsb
adc
les
lcall
cmpsl
movsb
xchg
xchg
jns
xchg
pop
xchg
scas
aam
stos
fnstcw
xor
imull
xchg
jb,pn
pop
pushl
mov
xor
outsb
cmp
ss
mov
mov
out
pop
test
mov
sub
pand
mulb
mov
ficompl
cmpsb
dec
cmc
fwait
insb
xor
or
cld
add
push
ja
cmpsl
sti
test
iret
sub
jo
in
jg
scas
arpl
cmpsb
lods
or
push
jae
cli
add
pop
mov
sbb
iret
in
jl
out
mov
push
pop
mov
push
xlat
and
cmc
test
cmp
sub
push
inc
test
or
lcall
mov
fwait
xor
aam
shlb
inc
push
add
mov
push
fldcw
or
cmpl
fstps
sub
sub
sub
pop
mov
std
out
push
stos
je
imul
stc
cmp
jmp
mulb
call
or
adc
mov
loop
mov
dec
xchg
mov
int
pop
pop
adc
sub
mov
push
mov
es
ret
inc
push
mov
mov
repnz
pop
or
xchg
cmpsl
int
or
addr16
stos
cs
mov
mov
jge
aas
sbb
mov
pushf
jle
mov
cmp
dec
inc
xchg
dec
mov
enter
cmp
push
je
mov
ret
add
bound
imul
inc
shll
fwait
cld
xchg
repz
sbb
sbbl
in
sbb
mov
scas
fadd
push
sub
mov
jbe
into
adc
in
or
addr16
and
iret
lret
data16
mov
adcb
ljmp
int3
and
sti
xlat
lock
inc
test
mov
mov
movsl
push
out
inc
inc
sbb
jmp
notb
sti
insl
sub
fnstsw
mov
std
pop
mov
dec
xchg
not
test
fwait
push
sub
lahf
arpl
popa
cmp
test
mov
add
test
pop
add
in
stc
add
mov
and
sbb
xchg
xor
jmp
sbb
nop
scas
mov
cmp
push
mov
nop
test
lcall
xor
mov
test
out
pop
lret
mov
rorl
loop
testb
adc
sbb
or
pop
ja
lahf
or
sbb
lcall
push
in
fldl
sbb
add
cmc
inc
pushf
aaa
and
lcall
fsubrs
cltd
or
and
cli
xchg
jo
ss
jno
cmp
push
cld
adc
push
outsl
xchg
lds
ljmp
femms
inc
fnstsw
adc
xchg
mov
dec
push
mov
jnp
jp
int
icebp
ja
adc
cwtl
or
push
jnp
or
mov
cmpsb
jge
xchg
outsl
clc
leave
mov
sbb
add
xchg
nop
xor
cld
ret
sahf
mov
fldl
mov
cmp
rcrl
fisubs
jge
jecxz
mov
jnp
in
and
int
pop
aam
test
hlt
movsb
mov
jns
pop
fistpl
icebp
jb
adc
movnti
pop
daa
outsb
out
subl
adc
sbb
outsb
jl
adc
mov
in
outsl
arpl
push
pop
xor
fcmovne
insb
inc
mov
fcoms
fisubl
xchg
rorl
dec
push
rorl
fidivrl
outsb
ljmp
mov
fs
inc
stc
fnsave
add
fimull
jnp
test
mov
push
xchg
dec
pushl
imul
cmp
cmpsl
mov
fs
lcall
cmpb
sahf
nop
xchg
sub
into
clc
in
je
dec
mov
icebp
xor
ficoms
inc
mov
sub
or
in
adc
ret
xor
adc
sbb
pop
xchg
dec
mov
data16
xor
aam
and
pop
dec
inc
in
hlt
leave
ss
xchg
xor
fidivs
mov
pop
stc
mov
xchg
outsl
dec
cmc
mulb
pop
inc
adc
mov
js
sub
xchg
and
dec
cmpsl
sub
mov
jp
sahf
arpl
or
sahf
jbe
xchg
icebp
pop
or
and
and
fisttps
mov
pop
scas
loope
pop
repnz
insl
cli
cmpsb
loopne
imul
mov
enter
jmp
ss
adc
rolb
fistpl
fldenv
leave
lret
cmp
pusha
ss
adcb
cmpsb
fdivrl
cmp
dec
cs
mov
jmp
sbb
aam
stc
xor
push
cwtl
jg
arpl
and
inc
loop
insb
lahf
cli
push
fisubs
or
nop
lcall
jle
or
xchg
xor
setae
mov
test
inc
push
bound
mov
fsubrs
and
sbb
daa
or
scas
add
daa
cmp
leave
into
popf
movhps
pop
lock
cmpl
leave
inc
int3
cli
push
pop
xchg
movsb
push
aaa
inc
arpl
cmp
or
mov
cmc
std
int3
gs
fisttps
adc
xchg
add
sub
aam
arpl
sub
stos
mov
and
pusha
dec
ja
pop
mov
sub
and
or
add
clc
mov
aas
out
movsl
sbb
sub
cli
dec
out
cmc
adc
add
push
enter
jl
lods
inc
sbb
in
mov
shr
test
mov
mov
add
in
push
lock
out
cmpsb
repz
xlat
push
cwtl
scas
mov
adcl
mov
repz
jno
cmc
fsubr
sahf
pop
jl
cwtl
test
je
jae
in
roll
in
jg
adc
sbb
cld
repz
rcr
ret
cs
pop
and
out
in
inc
dec
lret
out
loope
ss
mov
sahf
lahf
mov
sbb
in
mov
andl
sti
cwtl
ljmp
fbstp
adc
pop
les
pop
push
fwait
sbb
rorl
out
mov
mov
scas
jecxz
cmpsb
fcomp
jg
call
movsb
int3
push
mov
fstp
cwtl
mov
pop
xchg
inc
shl
mov
sub
js
cmpsl
add
pushf
js
or
leave
repz
cli
stc
mov
mov
js
mov
addl
enter
adc
sbb
pop
adc
cmp
xchg
dec
call
movsl
push
push
dec
mov
cs
and
or
mov
ss
je
cltd
push
pop
out
pop
mov
jbe
jl
aas
inc
dec
adc
ds
sbb
insb
out
lock
pusha
out
loopne
jbe
add
xchg
or
enter
daa
js
mulb
cmpsl
push
mov
xor
cs
cld
push
mov
inc
add
clc
pop
pop
jle
icebp
cmp
lock
xor
stc
push
xor
rep
ret
pop
in
aaa
jle
cmp
push
jnp
add
push
rcll
bound
xor
mov
fwait
mov
daa
test
dec
andl
std
shlb
loopne
out
adc
test
int3
lock
push
and
lods
pushf
js
xchg
lods
mov
adc
inc
mov
lret
push
xor
sbb
orl
dec
pop
repz
mov
inc
leave
xor
push
aad
das
movsl
xor
ss
mov
lahf
in
fsubs
lret
mov
xor
cwtl
xchg
fistl
lods
call
iret
jo
test
lahf
jle
ja
push
add
and
in
sbb
insl
insb
jo
iret
and
push
jae
addr16
xchg
cmpl
fxch
inc
mov
mov
add
shlb
mov
jmp
fldenv
repz
add
xor
sahf
inc
les
dec
daa
in
aas
pop
fwait
push
aam
add
cs
lret
xor
dec
icebp
and
or
lods
iret
mov
sbb
gs
test
pop
je
lds
mov
out
xor
fcmovu
movsl
mov
dec
jo
fdivrl
lods
mov
inc
fwait
popl
lock
push
jns
scas
or
ja
ljmp
loope
repz
stos
out
mov
cltd
cmpsb
adc
sub
lret
xchg
inc
clc
jge
into
test
jno
add
and
xor
cmp
xchg
mov
mov
mov
repz
ss
sub
int
adc
xor
mov
xor
push
out
push
jb
adcl
push
lea
movsl
arpl
xchg
decb
cltd
outsl
xor
nop
nop
shl
jmp
sub
das
and
jo
cmp
in
add
lock
in
sub
push
jae
mov
repz
ret
lods
cmp
add
push
dec
add
mov
out
pop
pcmpgtb
aad
lret
xchg
inc
jmp
pushf
notl
xlat
xchg
dec
lahf
adc
fnstsw
push
pop
repnz
cmp
cmpsl
testl
push
push
in
mov
cmp
rolb
inc
cmp
mov
xlat
lea
jg
lahf
adc
mov
cli
int
jo
lcall
xchg
dec
sub
xchg
jg
pop
popf
xor
mov
imul
sbb
adc
mov
dec
mov
sahf
inc
mov
ljmp
addr16
in
mov
clc
cmc
mov
ficomps
cmp
and
rcrl
push
mov
push
movsb
sbb
cmp
repz
jge
or
jbe
pop
out
inc
mov
sahf
gs
jo
dec
jb
dec
lods
cmp
jmp
cmp
jge
push
adc
inc
mov
cli
lods
cmp
jbe
sub
cmp
push
push
cmp
push
notb
fadd
je
mov
mov
mov
lock
inc
lods
shrb
jnp
ljmp
xchg
insl
sti
push
test
xchg
jmp
lds
and
adc
lods
mov
sahf
add
lea
call
in
inc
dec
cmc
jb
aad
je
sub
push
xchg
mov
xchg
outsb
pop
cmpb
dec
xlat
mov
enter
cmp
leave
mov
movsb
pop
mov
add
mov
cmc
sti
cmp
scas
int
cltd
insb
xchg
ret
hlt
scas
mov
and
lcall
sbb
jae
xchg
mov
pop
and
ljmp
dec
rcrl
mov
push
mov
xchg
incl
lds
into
mov
sahf
aas
movsl
cli
adc
int3
mov
and
shrb
into
jmp
cmpsl
add
add
aam
push
loope
data16
inc
mov
lret
adc
xor
rolb
pop
lahf
pop
aad
out
add
nop
push
or
cmpsl
test
push
fimuls
pop
iret
ljmp
mov
ss
aam
mov
scas
adc
fstl
dec
cmp
js
mov
shll
jl
icebp
filds
stos
or
cmp
clc
insl
fnstcw
in
lea
push
lea
out
lds
test
fucomip
les
push
in
mov
call
pop
popa
lahf
cmp
push
jp
xor
push
mov
out
pop
lret
mov
in
stos
daa
mov
lret
lahf
dec
and
dec
out
inc
and
xchg
out
dec
pop
test
push
addr16
ss
cwtl
dec
sbb
mov
out
test
bnd
addl
aas
iret
jnp
add
aaa
lods
repnz
lds
sar
loope
lea
mov
sbb
ss
fcomps
mov
inc
ret
sbb
outsb
int
mov
dec
mov
dec
sbb
cld
jno
leave
add
jmp
mov
mov
or
sub
lcall
insb
ljmp
sbb
nop
xor
sub
std
mov
cmpsb
jmp
lods
cmp
loop
push
jl
sub
dec
add
je
xchg
into
pop
sbb
or
mov
add
mov
adc
loop
dec
sub
insb
or
sub
jno
imul
mov
xor
adc
mov
mov
push
mov
cmpsb
data16
in
or
cld
stos
loopne
lret
jecxz
bound
or
es
xorl
or
jae
loopne
popa
or
ja
and
push
mov
and
or
inc
cli
xor
cmpsl
mov
fs
dec
add
push
and
mov
test
pop
cmp
mull
adc
add
sahf
adc
scas
rolb
xchg
dec
push
mov
in
push
cli
jbe
sub
inc
mov
jmp
ficompl
mov
push
xchg
insb
xchg
fistpl
mov
mov
add
test
xor
mov
bound
mov
enter
jle
jne
les
pop
fs
loop
push
lret
or
push
out
xlat
sbbb
mov
popf
pop
in
inc
lock
mov
inc
push
inc
push
cmpsb
icebp
sbb
jge
stos
mov
cmc
jb
mull
outsl
mov
and
in
mov
pop
pusha
mov
xchg
or
out
test
aas
push
cli
clc
notl
mov
pop
fmul
push
xchg
rolb
fsts
jo
lret
fistl
loopne
shll
sub
add
movlps
add
pop
sbb
mov
shll
sbb
das
push
cmp
cmp
or
popa
pop
fisttpl
insb
in
add
lret
pop
inc
neg
push
out
dec
lcall
cli
cwtl
or
sbb
dec
out
lds
lahf
push
cmpsl
cmpsb
lret
dec
es
jnp
add
lods
fs
test
xchg
fld
xchg
push
clc
mov
mov
in
in
cs
pop
and
push
xchg
bound
pop
xor
cli
int3
mov
pop
ds
rcll
dec
lcall
test
xor
loopne
xchg
jns
cmpsb
cmc
pusha
mov
mov
jb
in
pop
xchg
ss
add
jmp
test
das
dec
mov
in
fmuls
and
and
mov
or
mov
mov
rcll
or
mov
andl
inc
lods
lds
fildl
and
int
and
pop
add
ficoml
sub
pop
fbstp
push
xor
jns
mov
repnz
mov
fsubrs
fsubrl
xor
aaa
loop
lock
int
jp
jnp
or
clc
jae
out
jg
xchg
lret
and
lret
out
fisttps
xchg
test
adc
fsubrp
sub
sub
icebp
adc
out
arpl
fs
or
xor
lret
sti
cmp
stc
mov
lcall
sti
outsl
xchg
in
mov
stc
fadds
outsl
mov
push
fsub
enter
pusha
xchg
push
fwait
pop
and
mov
stc
bound
mov
in
mov
mov
or
lcall
rclb
jecxz
data16
out
mov
in
lock
or
xchg
js
test
into
pop
clc
xor
lods
sbb
lcall
dec
cs
les
jle
and
push
mov
inc
gs
loop
ds
xor
mov
and
mov
pop
dec
mov
sarb
popf
cmc
testb
test
in
in
mov
loope
bound
dec
ds
aam
sbb
fisttpll
pop
out
jecxz
shrl
arpl
adc
push
jmp
roll
xor
leave
xor
cmp
sub
sti
fistpl
pop
mov
sub
iret
aad
adc
aam
xor
dec
push
mov
add
and
or
mov
cmp
cmp
ret
xchg
jl
ret
jmp
xchg
sub
inc
daa
sbb
outsb
lret
mov
pop
pop
out
rclb
pop
add
push
jge
out
add
shr
push
jp
iret
push
xchg
mov
jecxz
cld
call
call
cmp
mov
sarb
mov
pop
cmp
add
pop
jmp
jnp
xchg
and
push
ja
lock
add
loop
inc
je
jno
pop
dec
ds
pop
cmpsb
push
gs
in
cltd
add
mov
jmp
movsl
push
jbe
jbe
push
pop
ja
adc
sbb
andl
iret
idivb
imul
mov
je
pushf
fsubl
loop
push
shll
andl
mov
jae
mov
dec
mov
outsl
sbbb
mov
popf
movsl
or
push
jp
xor
mov
mov
xor
sti
adc
xor
in
xor
mov
mov
jns
sahf
xchg
clc
add
add
out
mov
lods
add
ret
pop
rcll
jge
sbb
mov
enter
jg
outsl
mov
push
sbb
jns
xchg
fimull
cli
mov
call
sub
sbb
jl
repz
out
scas
add
xchg
sbb
mov
movsb
imul
gs
push
or
ficompl
cmp
add
add
movsb
mov
arpl
in
sub
fnsave
cmp
sbb
cmp
pop
cmp
lods
push
add
scas
jbe
das
mov
aam
dec
push
mov
pop
and
pop
mov
xor
lahf
cwtl
xchg
sub
adc
and
push
mov
loop
ljmp
sub
rclb
sbb
and
sbb
pop
nop
in
adc
pop
adc
mov
gs
push
jno
inc
mov
in
jbe
pop
dec
jge
in
pushf
aaa
jg
aam
xorb
jle
out
add
scas
push
fstpl
sub
cs
xchg
into
push
es
ljmp
movsb
or
or
bound
stos
mov
or
xchg
inc
stos
pop
pop
cmpsb
adc
testb
daa
adc
inc
cmp
nop
insb
pop
mov
mov
push
add
jge
push
out
cmp
xchg
and
rcrl
loopne
or
imull
push
ljmp
push
push
pop
jge
dec
cmc
jmp
rcll
test
das
loopne
adc
ja
rcrl
xchg
dec
mov
stos
push
divl
add
lock
inc
popf
push
sub
ret
mov
mov
movsb
cli
stc
mov
mov
inc
lret
mov
lods
xchg
das
das
cmpsl
mov
adc
loope
xchg
and
shll
rorb
rorb
popa
out
add
xchg
cmp
in
mov
fmuls
lret
mov
xchg
filds
mov
rclb
xor
pop
rclb
or
add
mov
mov
mov
sbb
adc
adc
or
push
add
mov
push
or
fxtract
inc
repz
fidivrs
adc
divb
or
es
cmp
pop
in
mov
mov
sbb
mov
push
add
mov
xor
adc
scas
cmpsl
call
orl
push
jnp
xor
cmpb
sbb
pop
roll
adc
lret
fiadds
xorl
cmp
and
mov
mov
mov
adc
stc
mov
xor
faddp
dec
mov
push
icebp
in
and
jo
mov
cs
push
mov
pop
mov
data16
movsl
add
mov
xor
sbb
call
pop
and
shlb
mov
inc
rcrb
not
sbb
pop
add
jmp
std
pop
les
test
into
add
lahf
mov
inc
xchg
and
jl
call
mov
push
cmp
push
jle
push
mov
adc
and
shll
scas
sbb
xchg
and
and
clc
sub
xor
inc
push
cmc
mov
inc
inc
mov
xlat
mov
xchg
pop
and
and
cltd
cmc
sub
inc
std
inc
inc
xor
lahf
cli
pushf
pop
xchg
mov
cmpsl
sti
mov
mov
xchg
pusha
aaa
add
dec
arpl
in
push
mov
jp
mov
pop
stos
add
cld
mov
pop
fistps
outsl
cli
sahf
pop
int3
movsl
inc
cltd
aas
sahf
fcoml
in
jb
jg
jle
push
xchg
mov
jge
ss
push
cmpsl
jne
es
mov
pop
dec
add
or
and
inc
lods
inc
sahf
jns
jno
xor
cltd
xor
inc
cli
aaa
dec
outsb
je
sbb
cmc
push
pop
loopne
leave
mov
push
int
jno
rcll
add
push
cmp
and
and
std
popf
sbb
and
mov
and
daa
scas
xchg
test
rcrl
adc
mov
out
sub
nop
jmp
jb
cli
aaa
xchg
xchg
addl
leave
mov
mov
sub
cs
push
lods
or
pushf
push
jb
mov
add
mov
iret
mov
insb
mov
xor
sbb
enter
fcomps
inc
and
push
jae
call
and
lock
popa
arpl
lret
xchg
hlt
ja
leave
mov
mov
fucomi
push
push
hlt
push
add
int3
push
pop
int3
xchg
rolb
inc
sti
adc
hlt
lcall
mov
and
iret
xchg
rorb
push
jbe
push
jecxz
in
mov
mov
pop
xchg
mov
fisubl
test
mov
lret
sbb
cli
cwtl
enter
xchg
sub
ret
sti
push
std
lds
popa
adc
xlat
addr16
jae
inc
lods
jl
add
pushf
or
sub
pusha
inc
lds
repnz
fs
clc
adc
fcmovnbe
mov
mov
movsb
xchg
inc
add
mov
test
jo
push
jns
jmp
lods
push
test
push
cmpsb
jge
mov
idivb
jo
pop
es
fcmovne
fsubrs
sub
add
pop
ds
pop
mov
push
mov
mov
push
sub
jl
sub
sub
bound
fistps
jmp
cmp
mov
fwait
jl
push
jae
and
add
addr16
jmp
clc
or
adc
push
rep
stc
or
jnp
add
pop
mov
cmp
pop
push
orb
outsl
call
aam
sub
movsl
cmp
sti
sbbb
dec
andl
pop
fs
sub
add
or
push
cltd
add
inc
mov
data16
add
jae
out
test
ds
add
insl
xor
mov
lcall
loope
stos
or
cmpsb
or
xor
inc
adc
sbb
dec
mov
pop
cld
hlt
ficompl
or
xchg
cltd
push
sbbl
js
cmc
test
mov
mov
xchg
and
push
lcall
iret
out
dec
mov
fsubr
ror
in
adc
sbb
xchg
test
xchg
orb
add
push
pop
dec
into
xchg
cmpsl
iret
ljmp
pop
xorl
call
jecxz
jmp
xchg
outsb
lret
mov
adc
loopne
movsb
out
sub
into
iret
cmp
jnp
ja
lds
dec
dec
push
add
sub
xchg
shll
mov
mov
ds
xchg
jo
xchg
mov
or
xor
pusha
test
push
lahf
je
mov
jge
nop
int3
imulb
lcall
push
xchg
imul
push
out
sbb
xchg
mov
dec
sbb
cmpxchg
add
cmp
cmp
mov
lahf
jnp
jno
push
xchg
xor
imul
cmp
pop
mov
mov
int3
xchg
sub
js
lahf
js
jge
test
std
popa
testl
inc
xor
push
xchg
shlb
ds
add
cld
cli
ret
xor
push
mov
mov
lret
cmp
sahf
stc
add
fldl
int3
mov
int3
sahf
pavgw
mov
pop
mov
sahf
push
aas
out
jecxz
iret
add
in
enter
stos
xor
add
fdivrl
push
xor
adc
popa
sub
xor
aas
sub
sbb
push
sbb
sahf
cltd
mov
stos
mov
fnstenv
hlt
div
mov
nop
and
lods
cwtl
jo
xchg
jns
les
push
sbb
rcl
xor
rol
push
movsl
xchg
mov
rorb
push
in
jo
inc
jle
lret
lcall
lods
mov
jb
fistps
pop
int3
fisubrs
mov
aad
shll
pushf
ss
or
imul
cmp
insl
mov
sti
out
mov
cmp
inc
cmp
sub
push
call
loope
dec
xlat
and
addr16
out
inc
add
cmp
mov
add
jmp
adc
xchg
jne
movsb
ret
jecxz
inc
add
cmc
sbb
into
std
notb
or
inc
call
sbb
mov
shll
sbb
enter
push
fbld
popa
push
outsl
cld
adc
dec
xchg
sub
and
mov
sub
push
or
jge
xor
xor
xor
js
add
loopne
clc
or
jne
ror
or
rclb
mov
mov
pop
leave
mov
jp
jg
out
std
fdiv
add
into
mov
lods
idivl
jge
iret
orl
pusha
fabs
cli
or
cmp
sub
cmp
inc
xchg
mov
add
pushl
mov
int
add
cld
loop
and
orl
aas
adc
and
jmp
mov
stc
loope
inc
psubsw
push
aas
ret
nop
ficompl
pusha
adc
aaa
stos
or
cmpsb
lods
popa
cwtl
push
mov
or
nop
or
in
xabort
out
sti
inc
and
mov
xor
call
in
xchg
inc
pop
les
pop
call
ja
shlb
fsubrs
inc
push
lret
jle
sub
fldenv
xlat
inc
sub
lret
loopew
pop
dec
mov
outsb
sti
xchg
jecxz
aad
adc
call
loope
cltd
sbb
dec
xchg
gs
cs
dec
stos
fs
cli
jo
and
dec
or
aas
sub
out
jno
pop
nop
aam
xor
test
cmpsl
pop
sahf
xchg
stos
sbb
data16
lret
jne
push
dec
in
arpl
dec
adc
dec
jno
pop
mov
dec
js
ja
out
mov
jae
arpl
jl
jge
incl
mov
inc
push
jnp
int
jl
stos
mov
fisubrs
nop
in
xor
in
bound
pop
jne
enter
in
jl
lock
and
faddl
in
cmp
inc
or
repz
in
jae
xchg
gs
dec
mov
lret
mov
imul
test
and
push
inc
enter
pop
push
mov
xor
leave
loopne
scas
xchg
add
loop
ss
jge
add
mov
dec
sti
lods
mov
push
das
push
pop
rclb
xlat
xchg
push
andl
xchg
mov
adc
cmp
mov
movsl
loope
aad
mov
xor
sti
test
push
cmp
xchg
pushf
pop
pop
cmp
out
into
repnz
hlt
pop
popa
cmp
sub
mov
xlat
shll
sbb
pushl
push
inc
dec
jp
adc
dec
dec
js
movsb
mov
adc
stos
or
mov
in
in
push
pusha
inc
push
push
into
js
cs
gs
adc
fsubr
sub
xchg
cmp
jb
inc
jl
jns
outsl
stc
sbb
xchg
dec
xor
scas
jns
arpl
test
push
imul
mov
ret
dec
push
fnstenv
in
push
fistl
inc
sbb
mov
xor
cmpb
mov
cmp
sub
push
shld
out
push
stos
xor
inc
enter
and
mov
in
loope
je
test
cmp
fstps
pop
pop
int
test
adc
mov
adc
aam
adc
fs
mov
sbb
dec
adc
push
push
repz
mov
lret
and
or
mov
sbb
sbb
mov
cmp
fcmovb
ljmp
xor
cmpl
popf
add
lret
fdivrl
pop
inc
push
cmp
push
push
outsl
into
pop
ljmp
aam
repz
sbb
cwtl
loop
orl
imul
mov
popf
rol
ficoml
inc
lret
mov
fmul
push
nop
mov
andl
cmp
sbb
rorb
ja
xchg
add
sub
push
mov
sub
in
call
pop
pop
mov
outsl
notb
add
sub
cwtl
push
lret
or
xchg
gs
mov
xchg
lahf
ret
test
cltd
ljmp
pop
push
cmp
int3
adc
sti
insl
pop
push
test
cltd
cmp
mov
test
call
rcl
sti
idivb
pushf
jg
idivl
add
je
sbb
push
xor
mov
jle
adc
inc
dec
sub
out
ss
jp
push
stos
cli
push
mov
and
js
jns
subl
sbb
loopne
test
shlb
lods
fwait
sbb
in
idivl
test
mov
in
cmp
in
xchg
gs
subl
rclb
jns
ret
mov
jnp
enter
hlt
repnz
cmpsl
xor
inc
mov
sar
mov
negl
in
cmp
pushf
es
jbe
xor
or
mov
jl
inc
xor
sub
adc
xchg
mov
out
jp
sub
decl
inc
sub
das
insb
xlat
fmuls
pop
dec
scas
and
xor
jecxz
js
lock
cwtl
xchg
or
and
mov
les
stc
scas
mov
cmp
mov
imul
js
fwait
mov
leave
lahf
rolb
xchg
lock
add
ret
mov
adc
repz
pop
xor
xor
mov
cmp
xlat
inc
mov
sahf
xchg
iret
mov
ror
cmc
mov
fildl
mov
int3
sub
mov
mov
jmp
stc
adc
aas
je
dec
rorb
mov
jecxz
shr
je
fidivrl
inc
loopne
or
mov
jmp
imul
nop
cltd
mov
lcall
movsl
and
sbb
jl
lock
shr
sub
cmp
mov
dec
int
out
sub
push
aam
pop
ljmp
aam
push
andl
addr16
aaa
pop
outsl
movsl
and
cmpsl
xchg
call
hlt
lock
loopne
add
lahf
jmp
xchg
pop
mov
pushl
cmp
bound
xchg
test
aad
aad
fists
xchg
mov
sub
sbb
out
mov
mov
mov
adcl
out
dec
fnop
div
xchg
jne
and
out
or
leave
loope
xchg
sbb
loop
add
jl
aad
jle
and
fstpl
push
call
mov
insl
xchg
test
mov
push
daa
fwait
jo
and
aam
loope
lock
jbe
lcall
xchg
push
js
cmpb
fimull
add
imul
lret
xor
cmp
jbe
cs
in
sbb
adc
nop
leave
mov
dec
sbb
mov
jle
pop
mov
lea
sbbb
jle
add
clc
xchg
cmpsl
dec
imul
cmpsl
fcoms
fcomps
push
inc
shlb
push
imul
jo
inc
or
adc
stos
inc
sub
sub
std
inc
lock
pop
into
push
cwtl
xchg
and
adc
push
push
cltd
or
mov
add
std
cld
cld
dec
outsb
pop
je
and
mov
jb
add
test
subb
mov
sbbl
dec
shl
fsubs
jo
bnd
and
mov
fnstcw
sbb
inc
fldt
test
out
push
adc
sub
call
add
inc
push
adc
out
lea
sbb
imul
or
sub
fwait
mulb
pop
sub
pop
clc
adc
fwait
test
jl
movsl
and
popa
add
sbb
inc
lods
stos
or
je
dec
cwtl
mov
inc
mov
add
mov
inc
jmp
push
dec
lds
sub
inc
sub
dec
flds
inc
xor
cld
jecxz
cmpsb
popa
mov
inc
push
movsl
leave
test
xchg
loop
sahf
inc
push
inc
dec
mov
fwait
push
out
xor
decl
xchg
fidivrl
sbb
pop
inc
stos
aaa
rcl
cltd
int
cmpb
cmpsl
sub
jnp
ret
in
mov
in
sub
out
clc
pop
js
adc
and
jnp
lea
dec
jl
or
xor
xchg
mov
add
cmc
shll
dec
lods
mov
ret
test
jp
lea
cmp
imul
sub
or
aas
test
xchg
mov
xchg
push
lcall
hlt
popf
out
imul
outsl
pop
decl
inc
mov
mov
xor
mov
push
fldenv
sbb
aad
popa
pop
loope
pushf
inc
mov
js
loope
inc
out
mov
scas
push
les
jl
push
jns
jmp
or
testb
jmp
les
mov
test
scas
das
dec
push
ljmp
add
sub
leave
mov
and
or
pop
insl
sub
inc
inc
adc
rcrl
jae
imul
cmc
jmp
push
popl
cli
sbb
jmp
mov
cmp
jp
or
push
push
sub
and
and
inc
jge
cwtl
cltd
jg
mov
into
imul
sub
sub
mov
or
push
mov
loopne
inc
movsb
loopne
mov
daa
loop
mov
or
test
push
addl
and
adc
mov
pop
scas
lret
jns
ret
push
incl
xchg
xor
mov
jb
sub
sub
xchg
cmp
cmp
ljmp
lds
mov
sahf
imul
push
push
into
aam
adc
pop
pop
mov
in
nop
jecxz
add
pop
loopne
cmp
dec
movsb
mov
push
test
call
pop
fs
mov
mov
iret
jg
pop
sub
hlt
lcall
push
xchg
xor
inc
pop
inc
ret
pop
lret
lret
mov
lcall
into
cmp
or
movsb
xchg
andl
cmpsl
sbb
cmovnp
in
and
cld
or
sbb
cld
dec
mov
mov
push
inc
adc
rcrb
out
pop
repnz
jae
sbb
rclb
xchg
xor
fildl
sbb
subl
call
push
cmpsb
dec
adc
iret
fisubrs
pop
icebp
mov
lcall
pop
imul
hlt
stos
aam
xchg
and
out
test
je
stc
push
cmpl
or
outsl
pop
cwtl
jg
dec
push
js
adc
es
jmp
add
loop
dec
and
mov
or
push
rorb
loope
movb
mov
movsb
mov
mov
das
sbb
ss
fildll
out
cltd
dec
mov
jnp
mov
lds
sbb
mov
push
cli
mov
loopne
shrb
mov
jl
faddl
movsb
rcll
xchg
mov
mov
gs
js
fwait
jle
pop
movsb
popf
sbb
test
ret
int3
inc
push
das
jns
xor
shlb
test
pop
sbb
push
mov
jns
push
cld
in
push
xor
xchg
mov
fs
sub
push
sub
jo
arpl
rcrl
sahf
jns
andb
int3
pop
jae
dec
lds
and
pop
daa
leave
pop
mov
lods
daa
adc
dec
daa
sub
adc
add
ret
cmp
fnstcw
in
popf
add
repz
rcrl
push
cmpsl
gs
dec
rclb
add
cmp
push
fisubrs
mov
inc
aaa
aas
daa
add
insl
shlb
jp
or
movsl
out
or
adc
push
roll
mov
xor
fdivl
cmp
les
mov
mov
insb
xor
push
hlt
inc
sub
add
iret
mov
jo
aas
or
rorb
pusha
jns
or
out
jno
jg
out
mov
jae
loop
mov
outsl
and
aam
orb
sahf
mov
jge
push
dec
popa
jbe
xor
imul
cmp
loope
jmp
xor
cmp
xchg
iret
cltd
int3
imul
cld
sub
ret
push
test
sbb
test
idivl
sbb
push
addr16
outsl
lahf
add
pop
loope
pusha
xor
dec
sub
dec
cmp
or
jb
pop
addl
inc
push
fnsave
add
push
jne
mov
leave
jnp
aas
leave
ficomps
aam
mov
mov
lcall
mov
cmp
mov
jbe
test
pop
mov
jo
mov
push
in
aaa
push
add
pushf
adc
sbb
add
xor
jl
xlat
sbb
test
sub
cmpsb
sub
or
lret
cmc
sbbl
sti
cmp
jl
pop
push
pop
sbb
xor
stos
fisubl
xchg
and
std
push
xchg
fs
pop
movsl
mov
sub
std
paddsb
sub
movsl
mov
sub
sbb
xorl
mov
push
jb
cld
fisttpl
aad
mov
and
movsl
int
xchg
movsl
lret
lahf
jae
loop
je
addl
shl
lock
sbb
movsl
pushf
icebp
mov
repz
cmc
sub
sahf
test
jno
jl
sbb
cli
js
inc
mov
sub
ljmp
inc
shll
sbb
xchg
adc
dec
mov
inc
dec
test
call
mov
sahf
or
jns
fidivrs
outsl
rorl
cmpsl
xor
xchg
fwait
sarb
cmpsl
mov
push
repnz
pop
int3
xchg
mov
jne
dec
push
bound
test
push
sub
xchg
into
cmp
cmp
xor
test
mov
cltd
cltd
dec
sub
loopw
cwtl
xor
adc
pushf
adc
mov
sbb
sahf
pop
mov
into
loop
arpl
mov
inc
loop
test
stos
lods
lock
js
mov
sbb
jge
popf
push
repnz
sub
mov
fsts
push
insb
stos
or
pop
mov
adc
sbb
std
in
inc
lods
out
jecxz
cld
imul
jns
das
inc
jae
fbld
mov
fisubl
leave
rcll
das
nop
adc
xchg
dec
loopne
cmpsb
mov
push
shlb
mov
roll
jo
lret
js
add
out
out
mov
inc
sahf
std
dec
pushf
cmpsl
ret
insl
mov
sbb
fnstcw
xor
mov
mov
fcoml
cld
daa
jl
insb
dec
jb
sti
out
or
out
sarb
popa
mov
dec
add
adc
adc
push
dec
jge
aaa
lcall
sbb
pop
xchg
inc
xlat
mov
dec
cmc
shll
mov
dec
jl
push
dec
cmp
repnz
icebp
test
shrb
ret
mov
pop
and
shll
shlb
sti
mov
push
test
lahf
xchg
dec
in
mov
sarl
fistps
jmp
xchg
xchg
stos
shr
fmulp
lea
or
int
jnp
shll
add
out
outsw
test
pop
in
xlat
cs
add
int3
xor
sahf
push
aas
jb
cltd
lahf
outsb
cmp
push
out
gs
pop
int3
push
cmp
mov
xchg
shlb
mov
pop
xlat
popf
outsb
adc
rorl
dec
push
and
stos
push
or
into
mov
shlb
jne
push
lahf
loopne
aaa
pop
cmpsb
cs
and
addr16
dec
mov
lods
aas
out
pop
jmp
adc
adc
push
aad
fs
imul
je
inc
jle
nop
sub
mov
jecxz
cmp
push
mov
and
dec
pushf
cli
hlt
stos
xor
movsb
pop
sbb
dec
jne
popa
adc
in
adc
xor
pusha
cmp
jmp
inc
test
pop
out
in
into
add
in
mov
les
mov
mov
cmpb
or
mov
pop
and
jg
jne
lret
mov
imul
js
mov
jnp
xlat
inc
out
into
xor
inc
pusha
nop
cli
pop
icebp
mov
xor
mov
push
fs
push
out
mov
iret
ja
movsb
mov
mov
sub
mov
mov
add
and
shr
push
shll
push
xchg
int
and
pop
roll
lock
jns
and
aad
loope
stos
movsl
ljmp
mov
punpckhbw
paddusw
mov
cmp
lods
mov
sahf
cmc
in
call
push
xor
push
lds
pop
cmp
jo
ret
ds
push
fnsetpm(287
cmpsl
jg
push
adc
pop
imul
add
repz
sahf
jno
hlt
dec
sahf
cmp
into
mov
in
lock
xor
pop
fcompl
imul
add
repz
and
mov
roll
fs
pop
xchg
and
out
leave
arpl
xchg
ret
mov
ss
push
pop
es
mov
sar
jnp
sbb
or
cmpsl
lods
add
out
xor
sub
adc
inc
ss
pop
aaa
mov
movsl
xlat
cmpsb
mov
or
iret
mov
xor
ja
lock
mov
outsl
adc
call
fdivrl
jecxz
mov
mov
and
loope
sub
outsb
sub
cmpsb
inc
movsb
in
out
sar
test
ret
fldcw
sub
sbb
div
pop
fs
out
cmp
jmp
mov
jp
mov
jns
ret
inc
cmp
call
dec
push
dec
and
xchg
xchg
mov
dec
cmp
movsb
aad
fcmovnu
hlt
xchg
divb
setl
pop
push
inc
lret
or
gs
jo
dec
xorb
and
stc
jp
add
xchg
inc
xchg
xchg
movsl
sub
pop
mov
jecxz
fsubp
add
mov
cmp
sub
lods
addr16
hlt
imul
shl
dec
stc
lcall
cwtl
dec
cmpsl
mov
jmp
xchg
dec
icebp
cmpsl
dec
inc
popf
fwait
js
rcrb
out
mov
jmp
sub
jne
jl
jo
je
sbbl
mov
sahf
aas
lcall
scas
lcall
xchg
inc
pushf
fdivrl
call
mov
mov
fldt
mov
jbe
out
mov
jo
push
arpl
icebp
cmp
mov
xchg
notb
sbb
lods
push
in
dec
adc
cmp
rcll
xlat
jbe
insb
adc
out
jge
fwait
xchg
jle
mov
sbb
mov
pop
hlt
std
push
dec
mov
movsb
jae
stos
add
jl
push
mov
dec
mov
rolb
inc
xchg
fcoml
xchg
flds
jle
cmp
lods
push
jmp
xchg
xchg
dec
in
xchg
cmc
and
outsb
fisttpl
pop
xchg
in
inc
sub
xor
call
mov
in
push
pop
pushf
mov
scas
shl
popf
mulb
addl
aas
add
jle
daa
xor
xlat
in
inc
pop
imul
cmc
push
fimuls
or
mov
stc
sarb
les
ljmp
inc
imul
lahf
dec
xor
movsb
push
arpl
mov
inc
mov
lods
jo
gs
mov
xchg
inc
jb
shrl
dec
or
out
mov
and
sub
adc
out
sbb
test
sbb
out
sub
outsl
cli
xor
iret
sbb
push
lahf
jbe
in
sbb
cmp
setne
popf
push
xchg
dec
js
pop
cmp
xor
arpl
push
stos
aas
mov
pop
sbb
pop
and
arpl
jbe
sbb
xchg
stc
in
xor
add
icebp
fisttpll
cmc
mov
lods
nop
adc
mov
push
rolb
fbstp
xor
stos
cmpl
pusha
imul
pusha
xor
push
enter
ja
test
jb
fldcw
into
push
mov
jo
push
nop
xchg
sbb
or
cli
lock
add
lcall
int
cmp
mov
stc
jne
add
in
cmp
pop
arpl
mov
out
inc
fimull
xchg
sbb
push
sub
jge
xchg
cmpsb
ja
push
mov
pop
pop
lcall
into
popa
sub
ret
mov
pusha
pop
push
pop
mov
and
fucomip
rol
push
pop
lea
rclb
vpdpbusds
es
rolb
mov
mov
add
mov
sub
cmp
addr16
in
jl
and
inc
add
mov
xchg
push
jg
mov
fmulp
rorb
arpl
popa
xchg
adc
sbb
popa
xchg
dec
cmpsl
fimuls
sahf
cmp
lcall
paddusw
or
adc
mov
mov
xor
roll
in
add
mov
dec
adc
xchg
adc
bound
mov
stos
push
xchg
push
dec
cmovl
adc
hlt
mov
and
or
and
dec
inc
mov
cli
jl
int
fcoms
sub
insl
das
cmp
mov
in
daa
xor
packuswb
loop
ja
xchg
es
pop
jg
outsb
mov
mov
scas
int
push
test
dec
push
iret
in
lahf
cmp
sbb
lret
insl
mov
iret
xchg
js
and
enter
jp
cmp
popa
cli
add
pop
push
mov
adc
dec
cmp
cmp
in
fiaddl
and
xor
cmp
out
jecxz
cmp
xor
cmp
mov
jp
movsb
nop
mov
jmp
popf
dec
lcall
adc
orb
loope
dec
jle
loope
push
dec
imul
mov
sub
push
sbb
cmp
insl
push
ficompl
out
sub
outsb
outsb
mov
cmp
lods
fldlg2
andl
or
mov
mov
shll
lock
cmpsl
push
sbb
test
test
push
cltd
out
dec
and
mov
or
jecxz
bound
mov
dec
mov
adc
xchg
mov
fadds
out
dec
ret
xor
jle
lcall
cmp
insl
ja
sahf
ret
fcoms
rcrb
dec
jmp
fsubr
sbb
push
cmp
xchg
add
outsb
adc
mov
inc
adcb
mov
mov
repnz
pop
mov
xchg
loope
pop
adc
movsb
into
mov
in
out
xchg
cmp
pop
js
jbe
mov
popa
inc
inc
sbb
add
xor
shrb
push
into
int3
lock
shll
mov
mul
inc
xlat
andl
inc
in
jbe
xchg
movsl
add
jge
std
shlb
mov
fwait
stos
or
mov
pop
out
in
shr
cwtl
pop
dec
xchg
cwtl
int3
shlb
xchg
pop
lods
adc
jmp
loope
or
adc
xchg
leave
jmp
aas
pop
dec
imul
cmp
xchg
push
imul
lds
xchg
mov
test
faddl
lock
icebp
or
mov
ds
sahf
adc
test
jb
lcall
stc
xchg
mov
xchg
mov
mov
inc
pop
add
lret
int3
cmp
std
cmp
xchg
jo
xor
push
add
outsl
push
jmp
mov
clc
sub
aad
leave
loopne
sbb
push
ret
jno
pop
ds
ss
repz
pop
mov
and
mov
je
push
orb
rcll
mov
insl
jge
aaa
inc
pop
mov
aam
divl
aaa
lcall
in
in
mov
xchg
aaa
and
mov
push
xor
mov
out
push
addr16
and
or
or
lods
xor
popa
jp
movsb
inc
push
pushf
scas
inc
sub
xorb
cwtl
cli
jl
movsl
clc
imul
lods
jae
shlb
ljmp
sub
jle
cmpsb
or
test
push
and
shll
add
mov
shlb
arpl
mov
scas
shll
inc
dec
adc
xchg
xor
push
cmc
jp
lahf
popf
mov
inc
push
pop
mov
sbb
pop
cmp
mov
jecxz
or
cld
outsl
lods
sub
jnp
gs
aaa
fisubrl
cmpsl
pop
cld
mov
stos
xorb
ret
repnz
xchg
dec
aaa
sbb
jecxz
push
test
pop
xchg
push
loopne
cmp
ret
sti
xchg
testb
inc
adc
leave
sbb
push
sub
pop
es
mov
dec
in
mov
aam
add
lret
fsub
adc
or
mov
cmp
ds
add
sub
ret
mov
out
cmp
aaa
mov
and
out
es
mov
jns
vmovupd
arpl
push
aam
xor
sub
inc
push
fistpll
adc
xchg
mov
mov
shrl
xchg
mov
dec
push
jl
mov
lods
popf
hlt
aas
xchg
in
adc
or
jp
and
cmp
sub
les
aad
call
mov
cmp
dec
push
aaa
test
aam
xor
jbe
xor
pushf
mov
sub
push
mov
fsubrs
int3
fchs
mov
jle
add
test
pop
push
cli
aaa
mov
loopne
les
cli
xchg
stos
into
hlt
jp
rorl
into
cmp
inc
or
dec
add
test
and
es
pop
sti
stc
in
test
in
cmpsl
loopne
stc
out
xchg
pop
cmpsl
mov
add
sub
jmp
pop
adcl
jge
cltd
shr
ljmp
pop
mov
push
xchg
jne
pop
dec
mov
xchg
sbb
cmc
loop
retw
icebp
ljmp
push
cmc
fisubs
movsb
cli
and
fsts
adc
rol
movsl
js
sub
inc
jbe
adc
arpl
std
sti
xor
xchg
gs
lahf
popf
sub
out
dec
mov
testb
ficompl
imulb
test
stc
or
adc
mov
ret
ret
push
mov
lods
fisubrs
push
mov
call
stc
cmpb
ret
adc
shll
inc
lret
jl
fdiv
arpl
fadds
cmpsb
in
push
mov
jmp
sahf
cmp
cmc
pusha
movsb
jle
filds
lret
sbb
outsb
pusha
shl
arpl
aam
push
popf
negb
jns
dec
nop
dec
lret
stc
inc
call
movb
push
jl
push
xchg
iret
dec
outsb
lea
cld
out
cmc
xchg
inc
adc
loop
mov
cmp
shrb
in
and
inc
lcall
loop
call
inc
pop
bnd
sub
lock
ret
sbb
stos
ljmp
jno
xor
cmp
xor
ds
push
insb
mov
jnp
loop
push
lock
pushl
push
xchg
stos
je
mov
sub
iret
sbb
scas
ds
sti
clc
mov
mov
push
lcall
lcall
mov
pusha
jnp
xor
cmp
aam
push
sub
mov
shrl
sahf
nopl
cmp
out
stos
lcall
cli
loope
xchg
bound
clc
test
mov
pop
ror
pop
push
ja
jmp
movsl
in
and
jns
movsb
cmp
bound
pop
cmpsb
or
cmpsb
cmp
adc
clc
mov
pop
les
in
inc
jmp
mov
mov
inc
je
xchg
fisttpl
fstl
jmp
lods
andl
outsb
addr16
jp
xchg
pop
inc
inc
or
pop
push
jae
in
jl
jge
mov
push
popl
xor
addr16
cltd
das
and
dec
pop
cli
inc
test
push
mov
mov
scas
push
loopne
int3
pushf
cltd
repz
push
pop
scas
cmp
cli
nop
and
inc
dec
repz
movsl
pop
fisubs
ret
test
push
xor
les
sub
xchg
int3
push
roll
sahf
cwtl
fwait
cltd
andl
aad
jno
imul
repz
push
mov
lahf
test
pop
mov
mov
cli
cmpsb
stos
clc
add
pop
sbb
xchg
stos
frstor
sub
push
adc
pushf
adc
mov
xchg
hlt
jmp
movsl
cmp
les
jp
or
mov
test
movsb
pop
jp
shlb
mov
sbb
push
mov
or
sub
and
or
pop
add
jno
jl
sbb
test
shlb
xor
in
loope
mov
in
dec
xchg
jns
mov
pop
aam
and
mov
sahf
adc
add
out
dec
ljmp
arpl
pop
add
arpl
gs
adc
push
popf
fs
andb
fisubs
lret
mov
notb
push
sub
xorl
icebp
xor
sub
mov
jno
mov
mov
lods
push
push
ss
add
mov
inc
loopne
mov
lods
dec
sub
popf
sub
dec
push
in
and
cmpsb
xchg
idivl
pop
jbe
lret
mov
mov
jmp
gs
call
mov
bound
lcall
idivb
bound
xchg
inc
arpl
out
sbb
sti
or
cmp
and
xchg
fstpl
dec
sub
repnz
mov
and
mov
iret
test
arpl
ja
pushf
sbb
iret
dec
div
mov
hlt
mov
es
mov
imul
adc
scas
lret
xchg
addr16
call
xlat
stos
pop
sbb
ror
outsb
mov
sbb
test
sarb
xchg
scas
fnstenv
cltd
xchg
fcmovnb
cmp
out
mov
mov
dec
repz
sub
fcmovbe
sbb
cltd
mov
ret
jnp
imul
mov
sbb
cmp
dec
loop
cs
adc
rcrl
sub
jbe
sub
data16
cmp
mov
arpl
mov
xchg
inc
popa
jb
out
out
sarb
xchg
adc
addb
mov
push
or
adc
dec
iret
xchg
repnz
pop
and
aaa
cwtl
push
sbb
insl
shll
jge
scas
cli
mov
cmpsl
mov
test
bound
icebp
lret
leave
xchg
js
insl
xchg
dec
mov
ljmp
roll
in
jg
testb
scas
pop
mov
push
mov
outsb
aad
nop
push
pop
cmpsl
ljmp
rolb
add
sbb
sahf
std
dec
shrl
roll
ljmp
stos
push
add
mov
dec
push
adc
je
xchg
sub
mov
xchg
aas
push
add
add
popf
xor
rol
mov
in
fadds
jge
xlat
inc
outsl
ja
push
mov
in
cmpsb
jl
xchg
lds
call
pop
mov
mov
dec
in
jecxz
repz
lods
cmp
repnz
movl
mov
lcall
push
icebp
cld
pop
mov
xor
clc
test
jo
or
rorl
jge
add
or
mov
in
push
insb
cmp
iret
imul
xlat
sbb
xor
xorl
rcrb
mov
pusha
pop
out
pop
jbe
pop
cmpb
xlat
stc
xchg
xor
loope
jl
mov
sub
lods
push
adc
cmpsb
pop
mov
lcall
push
sub
pop
insl
mov
imul
xor
and
pavgw
cmp
sbb
mov
ret
cmp
stos
cld
shl
int3
add
in
cmpsl
fisttpll
jmp
lcall
inc
sahf
cmp
fptan
push
pop
roll
repnz
mov
or
adc
xchg
or
loope
cmpb
insl
pop
pop
shrl
test
leave
sbb
lahf
push
test
cltd
add
adc
mov
stos
mov
mov
ljmp
jecxz
fwait
das
push
sub
jge
subl
sub
jp
mov
mov
jecxz
cli
insb
pop
call
sbb
and
out
test
xchg
cmp
scas
decb
or
repnz
outsl
dec
sub
xor
add
idiv
xchg
push
in
adc
daa
nop
pop
inc
sbb
cmpsl
adc
jp
xchg
mov
mov
push
out
push
dec
jecxz
cld
sub
rol
mov
jae
mov
scas
movsl
and
lret
xlat
sahf
pop
xchg
loopne
call
mov
xchg
pushl
test
dec
rcl
bound
mov
jl
mov
cmp
cmpsl
cmp
mov
in
out
repz
sahf
ja
xchg
rol
xchg
mov
xchg
dec
arpl
cwtl
sti
mov
xchg
data16
stc
jae
push
stc
insl
jmp
xchg
call
adc
lcall
jbe
mov
jns
fidivl
insb
pop
push
cmp
sbb
fimuls
movsb
incb
pop
xchg
lea
jne
in
xor
adc
dec
cli
ret
leave
xchg
dec
mov
frstor
or
mov
out
fld
lret
cmpsl
and
cmc
and
jp
xchg
xor
out
adc
dec
scas
mov
lret
inc
dec
mov
aad
mov
jae
std
out
pushf
xchg
cli
or
sbb
stos
rcr
fldl
int3
in
xor
lods
sub
adc
push
sbb
xchg
imul
lods
jno
cmp
js
out
or
inc
sbb
and
mov
shl
in
sbb
rcll
js
mov
push
dec
mov
out
and
mov
adc
ret
ljmp
jnp
pop
loopne
push
adc
add
popf
mov
pop
mov
movsb
xchg
jmp
push
cwtl
push
adc
and
adc
loop
roll
mov
add
sub
and
mov
mov
rcll
cmpl
stos
mov
es
mov
pop
pop
and
xchg
sub
fmuls
sbb
int3
inc
mov
or
test
addr16
addr16
pop
xchg
cld
mov
jno,pt
and
int
out
mov
icebp
insl
cmpsb
xchg
das
jge
and
pop
cmc
int3
imul
fisubs
movsb
xchg
insb
fmull
sub
out
outsb
dec
addr16
add
out
sahf
mov
mov
shll
into
and
push
test
aad
cmp
scas
mov
inc
ja
mov
xchg
nop
testb
jmp
fnstsw
adcl
mov
pop
out
sub
test
daa
pop
ds
int3
or
push
sahf
int
pop
in
dec
pop
das
xchg
sub
ljmp
gs
pop
dec
sbb
fs
push
icebp
cmpb
aam
sbb
and
inc
push
iret
in
mov
stos
ljmp
les
mov
inc
jne
mov
sti
xchg
sbb
rorb
jge
xchg
mov
out
mov
add
lcall
cmp
call
dec
bound
loopne
test
xlat
ror
ljmp
roll
xchg
aam
inc
jl
int3
mov
mov
xchg
je
shlb
sbb
fsubr
jne
outsl
push
hlt
and
xchg
ja
pop
and
daa
jle
aam
pop
ret
mov
loope
cli
cmpl
in
mov
lret
add
jecxz
dec
pop
mov
jl
jmp
mov
jae
insl
add
mov
mov
push
aam
mov
sbb
jo
loop
adc
orb
push
pop
and
sub
or
insl
pop
decb
jl
jp
scas
lret
mov
out
add
adc
or
call
fs
pop
push
dec
jns
inc
movsl
add
push
ljmp
jne
dec
pop
dec
push
mov
adc
pop
adc
insl
mov
jg
insl
repnz
mov
dec
rorb
jecxz
sahf
test
fldl
andb
add
aad
gs
lds
or
and
popf
jge
push
outsb
or
mov
cmp
and
movsb
rclb
or
adc
ljmp
mov
rol
sti
test
fisubrl
mov
or
aad
mov
pop
fmulp
fisttpl
sub
fs
and
cmp
hlt
mov
sub
push
mov
je
jnp
imul
aad
dec
push
mov
mov
jp
dec
or
nop
ljmp
or
sbb
jbe
aam
xchg
mov
pop
sahf
push
adc
scas
pop
inc
jo
cli
sbbb
scas
add
pop
cmp
data16
dec
inc
bswap
inc
arpl
test
nop
mov
popa
lds
mov
add
sti
lret
adc
int3
movsl
ret
cmp
xor
aas
pop
sbb
movsl
mov
ds
das
or
mov
sti
pop
dec
or
imul
inc
sbb
jmp
push
mov
addl
pop
imul
dec
push
ljmp
test
adc
aas
ja
nop
scas
je
js
mov
mov
rcr
lods
pushf
mov
incl
push
push
mov
or
add
mov
js
arpl
sub
mov
cmpsl
jo
icebp
sub
lods
add
mov
fimull
pop
dec
or
pop
or
rclb
out
mov
add
imul
inc
in
fs
jp
push
inc
imull
push
xchg
cwtl
popf
jp
sbb
out
jbe
inc
jnp
jmp
jnp
call
imul
mov
lea
call
sbb
jl
pusha
fisubrl
add
xor
and
and
out
movsb
jns
ljmp
inc
sub
xor
cltd
stc
in
mov
or
test
out
loopne
inc
into
adc
push
roll
mov
mov
sub
adc
es
insl
adc
pop
jo
flds
mov
pop
scas
push
mov
cwtl
inc
int
in
jne
cmp
nop
data16
scas
ss
mov
xlat
shlb
icebp
inc
lods
pop
movsb
scas
push
add
mov
and
jbe
rorb
mov
jne
pop
shl
sub
sbb
pop
je
repnz
jmp
stos
andl
fnsave
mov
sub
mov
test
fldcw
pusha
add
fildl
jne
dec
jg
lods
enter
fbld
or
push
add
aam
xor
outsl
jl
jbe
or
xor
push
je
xor
sub
shlb
iret
dec
push
ljmp
lcall
ja
inc
dec
pop
hlt
adc
jb
test
cs
xchg
es
fisttpl
pop
je
pushf
sub
sub
enter
cli
out
js
mov
cmpsl
lahf
pop
dec
outsb
dec
inc
ja,pn
jmp
bound
jno
jnp
rclb
les
jge
bound
mov
je
int3
into
iret
pop
jnp
adc
aad
or
sub
in
pop
push
mov
sub
push
ja
xchg
movl
push
aam
fwait
push
out
inc
xor
imul
int
or
int
cmpsb
lods
and
sbb
sub
hlt
sbb
inc
je
inc
out
aas
cli
mov
and
pop
dec
add
enterw
adc
or
xor
fwait
mov
push
iret
shrl
aam
sub
divb
xor
dec
ja
ja
rol
outsb
lods
stos
inc
movd
mov
int3
push
lcall
popa
fsubp
stos
adc
lret
mov
xchg
fwait
push
mov
and
jne
lea
add
pop
mov
and
inc
lds
inc
data16
outsl
push
hlt
nop
in
jp
cmp
loop
xchg
inc
inc
mov
daa
mov
add
lcall
or
or
jle
sub
cmc
add
inc
push
lea
adc
rcrl
cmp
mov
sbb
xor
mov
push
dec
add
inc
int3
lret
push
xor
push
mov
jle
out
push
jb
pop
scas
int3
push
out
push
mov
add
push
mov
addr16
sti
fiaddl
testl
or
and
ljmp
imul
xor
loop
add
inc
or
lcall
les
fistl
mov
pop
pop
loope
mov
addr16
mov
xor
push
mov
ss
adcb
in
xor
xchg
sub
enter
jge
arpl
imul
cltd
mov
mov
stos
push
push
inc
lahf
cwtl
and
pop
xchg
dec
lods
mov
dec
jmp
std
or
aad
jp
adc
xor
in
mov
mov
xor
cld
adc
out
or
add
aam
add
cli
jg
sbb
mov
ljmp
lods
imul
movsb
in
iret
fadds
out
shrl
out
pushf
mov
or
scas
push
jo
sbb
cmp
or
hlt
jne
mov
xor
rclb
das
repz
mov
mov
out
pushf
add
lds
lret
cmp
cmpl
mov
test
lock
push
fbstp
xchg
je
loop
inc
or
outsl
in
xchg
cli
ret
sbb
xor
inc
je
pop
or
and
test
lds
cld
fcoml
jg
jns
daa
mov
fadd
mov
repz
mov
insl
dec
xchg
or
aas
addb
add
rcl
fcmovnbe
sarb
and
jbe
lds
adc
test
enter
jle
xchg
std
jbe
iret
stos
jp
fisubrl
in
arpl
sub
sub
clc
push
xlat
sub
dec
int3
into
into
push
pop
mov
insl
test
xor
or
icebp
das
or
out
loopne
mov
fmulp
out
ret
fidivs
push
xchg
push
dec
sub
fists
enter
lds
rorb
jo
mov
gs
out
jmp
stos
call
andb
xorb
lcallw
leave
call
stc
dec
fisttpl
push
xchg
cmp
inc
clc
les
dec
mov
adc
add
xchg
pop
lahf
pop
cmp
mov
cmc
xchg
mov
sub
push
sbb
inc
imul
pop
mov
leave
sbb
push
fidivrs
and
xchg
shrb
sbb
in
popa
lea
xorb
lret
jecxz
bound
lahf
repnz
popa
push
popa
sbb
cmp
xchg
cmp
add
xor
mov
popa
dec
outsb
push
cmp
mov
xor
rolb
out
lret
rorl
shl
mov
push
cli
xchg
xor
sahf
push
cld
jo
aas
cli
dec
xor
cld
les
cmpsl
mov
popa
add
not
inc
iret
mov
pop
std
mov
push
shll
movsl
loop
pop
and
shlb
lds
fildll
lcall
mov
shrb
xchg
and
rcl
in
imul
int
cmpsb
and
add
cmc
adc
fcoml
aad
lock
pop
or
sti
rcll
enter
out
nop
pop
test
pop
lcall
fadds
pop
cmp
je
xchg
mov
adc
sbb
cli
nop
adc
pop
adc
popf
mov
adc
fldenv
es
mov
cmp
cltd
adc
add
xchg
js
add
pop
mov
add
xchg
mov
ficompl
loop
lcall
aam
leave
xchg
pop
std
mov
cltd
daa
adc
or
jnp
sub
hlt
movl
jb
cmp
dec
mov
sbb
sub
jge
xchg
shr
mov
pop
cmpsb
cmp
incb
xchg
fmull
cmpsl
test
jmp
das
xlat
popf
in
rorb
flds
jge
je,pn
mov
push
in
or
aam
or
mov
sub
leave
jmp
ljmp
mov
nop
int
and
cs
in
inc
popa
jb
cmp
adc
dec
jp
push
out
lret
sarl
mov
call
mov
sbb
stos
in
icebp
jae
out
pop
nop
js
nop
das
mov
cmp
out
pusha
sub
rcll
sub
sub
inc
mov
push
incl
mov
mov
lds
daa
cmp
test
shrl
xor
push
pop
out
lods
pop
jge
mov
scas
mov
xchg
inc
repnz
cmp
pop
and
mov
aad
cli
dec
movups
sub
movsl
in
ret
ljmp
add
paddsb
fsqrt
mov
js
leave
mov
bound
jmp
pop
sbb
mov
push
vpaddw
loopne
jbe
push
cmp
push
adc
enter
pop
hlt
mov
mov
jno
aaa
mov
xor
and
leave
call
adc
popa
adc
test
cmpsl
sbb
in
pop
push
cmc
cmpsl
mov
call
gs
mov
mov
add
dec
add
sub
sub
gs
bound
xor
shrl
pop
inc
or
mov
aad
insl
outsl
inc
sub
cmpsl
sub
cmpsb
sbb
es
xor
jae
jb
lods
and
and
push
fmul
xchg
mov
repnz
insb
icebp
rcrb
mov
fisttpll
and
stc
push
aaa
add
dec
push
jb
dec
insb
pminub
js
mov
cmp
lcall
sub
clc
jg
sbb
cs
push
sbb
dec
add
fdivl
out
cmp
cmc
mov
aas
pop
ffreep
shr
dec
sti
cmp
call
jbe
mov
lcall
pop
outsb
cmp
test
jecxz
jb
jbe
lods
outsb
jnp
icebp
pop
js
mov
xor
inc
stc
bound
add
pop
daa
repnz
lcall
test
mov
leave
mov
lock
cmpsl
fs
add
jp
adc
sub
mov
dec
cmp
or
xlat
pop
sbb
movhps
or
inc
data16
filds
loop
mov
jmp
aad
pop
lret
xor
loopne
cmp
mov
dec
sahf
and
rorl
jl
pop
push
mov
mov
mov
lahf
lret
xor
nop
cmp
lods
pop
dec
sub
dec
movsb
xor
push
jae
mov
es
iret
add
and
cmpsl
adc
jne
loope
jae
mov
add
pop
negb
test
pop
cmp
fmull
imul
mov
sbb
sbbl
daa
mov
les
icebp
fiaddl
or
lret
in
fcoms
and
faddl
add
inc
push
push
cmpsb
push
lcall
inc
xor
imul
mov
jl
iret
addr16
mov
mov
call
jb
repnz
pop
je
push
push
sbbl
xchg
sti
mov
lcall
xor
outsb
jle
hlt
mov
scas
lret
out
dec
arpl
flds
es
bound
out
add
arpl
in
enter
rcr
or
call
add
and
mov
sbbb
fiaddl
aaa
hlt
imul
std
inc
cwtl
in
decb
add
call
imul
adc
popl
push
ljmp
sbb
imul
cmpsl
jle
ja
fmul
add
cmp
inc
dec
and
fbld
inc
cld
movsb
test
mov
js
test
xor
push
das
jb
inc
mov
dec
mov
cmpb
rol
fwait
adc
mov
mov
rol
cmp
cmp
ret
lea
or
idivb
mov
loop
sti
adc
inc
push
divb
pop
pop
scas
cmp
idivb
jb
or
push
sahf
rcrb
cmp
xchg
push
ror
push
inc
and
fcmove
or
adc
loope
push
fidivl
push
in
jg
cmp
xchg
adc
xchg
mov
pop
sub
push
adc
adc
xlat
clc
or
in
fwait
imul
xchg
xor
cs
pop
xor
sbbl
pop
cltd
xchg
pop
jae
das
pop
in
sub
or
sbb
and
or
call
std
xchg
mov
lret
add
bound
adc
dec
aam
push
mov
mov
faddl
inc
into
mov
adc
loop
xchg
cli
sub
int
in
out
addr16
pop
cmp
jmp
loop
push
nop
out
pushw
cmp
cli
scas
inc
shl
mov
inc
add
gs
shll
stos
sbb
xor
iret
push
xor
push
pop
lds
push
inc
add
mov
pop
mov
into
pop
push
add
mov
iret
push
jmp
sti
and
xchg
insb
repnz
mov
mov
test
loopne
xchg
ja
push
xchg
out
filds
sbb
xor
lret
and
test
cmp
mov
xchg
mov
insl
cmp
mov
hlt
fidivl
rorl
ds
dec
leave
jp
lret
mov
add
and
mov
rcrl
mov
pop
ds
sub
pusha
cmpsb
jl
in
mov
int
jnp
cmp
fs
in
imul
cld
loop
cmpl
xor
xor
jge
push
cmp
sub
cwtl
mov
jo
sbb
push
fstpl
shrb
test
loopnew
push
push
push
mov
fs
mov
and
sub
jmp
adcb
jns
sbb
lods
jle
push
mov
lea
jecxz
mov
jnp
sbb
addr16
pop
call
cmp
push
sahf
xlat
mov
negb
cld
sub
popf
imul
test
inc
sbb
negl
and
or
cwtl
mov
faddl
incl
jne
enter
xchg
lahf
push
jno
cmpsb
mov
and
push
fstpl
or
mov
les
mov
cs
and
sub
fists
add
mov
dec
pop
pusha
subl
add
mov
xchg
lods
in
sub
pop
fwait
nop
pop
push
sti
push
imul
xchg
es
scas
mov
mov
and
push
in
xchg
xchg
cmp
call
pusha
std
dec
pop
jge
pop
push
mov
mov
shlb
or
icebp
inc
jb
les
aaa
jns
jae
testl
adc
fcoms
pop
pop
adc
mov
hlt
sub
pop
add
jmp
sub
pop
mov
mov
cmp
shlb
fwait
orl
ret
loop
push
ret
fistpl
sti
in
fldl
xor
add
loope
adc
out
outsb
mov
xor
push
das
fdivs
mov
insb
mov
int3
fcmovnb
add
sarl
enter
aas
jecxz
in
push
stos
pop
sbb
popf
lds
decb
push
adcl
shll
ss
ja
dec
loop
divl
fs
push
or
inc
mov
fsubrl
insb
subb
xchg
std
daa
stos
std
cmp
pusha
jb
xchg
inc
enter
out
adc
push
lret
adc
stc
inc
push
je
stc
xchg
inc
push
in
bound
clc
push
jae
xchg
into
repnz
mov
test
fcmove
fstpl
scas
pop
popf
pop
xchg
test
xchg
cmp
jle
in
dec
in
shlb
arpl
clc
jae
shlb
lock
enter
lret
push
cwtl
lahf
pop
scas
mov
xchg
jns
fs
enter
add
sub
dec
iret
lods
jecxz
mov
or
dec
lock
fnsave
mov
sub
aam
fadds
inc
outsb
lea
cs
rcrb
icebp
push
mov
sub
je
stos
sbb
push
imul
xchg
aaa
jns
push
in
mov
jno
or
mov
out
add
dec
cs
cwtl
testl
sub
js
cmp
sbbl
inc
add
add
lret
mov
mov
lock
dec
leave
mov
ret
lcall
aaa
jle
and
or
xchg
jb
nop
call
xor
lds
loopne
adc
mov
repnz
test
shl
pop
mov
pop
dec
push
rclb
loop
cmp
int
sbb
enter
fmull
push
sub
xor
jo
sub
mov
jnp
ss
dec
jbe
ja
xchg
lods
mov
xchg
fldl
jl
shll
dec
cli
cltd
fdivl
xchg
mov
pop
fcoms
shl
and
push
int3
nop
popf
mov
sahf
xchg
xor
scas
mov
cld
scas
adc
mov
std
stos
cmp
cmp
lods
fidivrl
add
pop
add
mov
xchg
enter
push
les
mov
aad
rorl
call
jns
das
push
cli
xor
mov
adc
out
in
xchg
popf
adc
mov
and
jle
je
sub
inc
cmp
cmpsl
lods
data16
push
ss
bound
dec
incb
pandn
xor
add
movsl
cs
shl
insb
stos
push
push
lock
fwait
jbe
add
mov
test
test
daa
sbb
cltd
dec
pcmpgtb
inc
pop
les
popa
or
bnd
jno
rolb
in
push
push
pop
or
lock
imul
pop
mov
inc
xchg
or
fwait
into
push
stos
data16
insl
adc
mov
push
leave
ja
rcr
movsl
pop
mov
cmpsb
xorl
outsb
cmpsl
aad
xlat
fisttps
mov
cmp
adc
push
subb
mov
in
fcoml
add
insl
shl
out
mov
sub
mov
inc
cmc
mov
cli
push
push
nop
mov
jne
jge
pop
or
pop
out
int3
pop
or
xchg
dec
int3
popa
test
cmp
mov
jnp
jg
insb
add
sarb
mov
lea
stos
dec
jbe
pop
adc
lret
push
adc
out
mov
rol
or
pop
xor
push
in
jg
add
cmp
jbe
cmp
lahf
mov
lret
dec
pop
shrl
mov
movsl
mov
gs
js
cmp
jno
cld
bound
iret
xchg
movsl
cmp
ds
or
and
xchg
movsl
mov
into
cltd
ljmp
push
sbb
inc
lret
repz
adc
inc
push
inc
imul
leave
addr16
cmp
aas
fcoms
jge
sahf
imull
jae
imul
pop
pop
lahf
aam
mov
jg
in
sub
aad
push
sahf
cmp
pop
sarl
dec
ficomps
cmc
enter
call
bnd
sbb
loope
out
ljmp
es
adcl
sub
xchg
and
in
jmp
es
out
inc
inc
insl
mov
mov
mov
imul
stc
lods
inc
fcmovbe
jle
push
cli
iret
pusha
jg
jmp
pop
into
cli
imul
data16
pop
mov
aam
sbb
rclb
stos
mov
pushf
in
sbb
and
xor
mul
addl
cwtl
sbbb
xor
sbbb
test
add
aad
nop
pop
push
xor
push
daa
xor
inc
and
rcll
mov
and
test
dec
fstpl
sbb
or
out
push
and
mov
test
out
sub
cmovns
lret
fistpl
test
add
out
negb
jnp
fisubl
push
add
lahf
mov
mov
inc
jo
cmp
sbb
scas
addb
push
js
xor
sub
arpl
lahf
dec
stc
ret
adc
cmpl
enter
out
mov
mov
lock
popa
sbb
cmpb
mov
add
int3
mulb
test
lea
xlat
aas
leave
fwait
push
add
jcxz
fcom
js
rcr
xor
sbb
mov
inc
in
mov
mov
cmp
je
outsl
xchg
mov
xor
jns
sub
iret
sub
sbb
or
stc
xor
fldt
adc
xchg
aad
dec
mov
jl
popf
push
adc
inc
and
ds
push
adc
arpl
xor
push
xor
adc
out
addr16
or
inc
mov
mov
mov
test
hlt
test
add
mov
fs
sub
fxch
rorl
jno
pop
out
inc
test
out
xchg
js
dec
jbe
sbb
pusha
std
stc
addr16
xchg
push
dec
push
add
pusha
iret
insb
mov
inc
aam
stos
test
or
addr16
ljmp
sbb
into
mov
dec
push
bound
fisubl
lret
mov
adc
sti
imul
aad
mov
testb
aam
je
pop
lock
dec
stos
add
adc
loopne
les
roll
leave
cmpl
add
mov
sbb
or
loop
lods
xlat
mov
push
sahf
sub
into
cmp
cld
sub
add
push
hlt
pusha
dec
mov
or
scas
cmpsl
add
dec
push
sub
in
xlat
mov
or
xchg
add
xlat
ret
sbb
cltd
mov
sbb
mov
mov
lods
sbb
shrb
mov
fcomp
rolb
mov
push
pop
incl
xor
ret
insl
mov
push
mov
fsts
ljmp
nop
push
aas
xchg
loop
incl
imul
loop
add
das
jne
rcll
stos
pop
sti
and
out
adc
dec
add
sbb
mov
ror
adc
or
aas
dec
mov
cld
movsl
adc
pop
sbb
cmp
pop
test
add
xchg
data16
mov
ja
cmp
fnstenv
pop
inc
cmp
dec
mov
sbb
insb
mov
mov
stos
xor
je
mov
or
add
mov
mov
xchg
cmp
xchg
push
loope
mov
pop
jo
mov
add
push
aad
les
gs
rorb
test
dec
mov
push
rorl
sbb
stos
lret
arpl
cmp
inc
and
or
mov
pop
pop
out
imul
sbb
lcall
adc
and
jle
mov
mov
mov
imul
dec
adc
and
mov
lret
cld
fs
xchg
jne
adc
ds
enter
js
shll
cmp
inc
ds
lahf
fisubrs
pop
sub
push
stc
xchg
and
ficoms
in
pop
push
dec
into
or
mov
pop
test
call
dec
enter
add
push
mov
rorl
lds
dec
sbb
dec
jns
jnp
dec
bound
movsb
xchg
sbb
lds
push
sti
dec
mov
aad
xchg
cmc
pop
ss
or
hlt
nop
cmc
jno
lods
out
pop
add
jbe
int3
out
ds
and
repnz
dec
aad
inc
out
enter
scas
subb
fwait
divl
xor
mov
add
push
cmpl
test
shl
aad
cmp
mov
push
push
add
ret
pop
lcall
mov
test
cwtl
lret
jl
and
lcall
out
adc
xchg
sbb
xchg
lea
cmp
pusha
aaa
rcrb
jle
test
stos
cmp
inc
mov
cltd
push
repnz
in
shlb
imull
sbb
sbb
into
push
mov
in
stc
dec
push
mov
movsb
in
add
popa
dec
mov
sahf
sub
fcmovb
add
imul
mov
cmc
mov
mov
in
add
lcall
aas
jge
and
xchg
sub
mov
arpl
dec
pop
cmpsb
addr16
imul
inc
dec
cmp
sub
adc
mov
adc
iret
xor
push
xor
adc
shlb
push
decb
lret
enter
inc
int
push
je
sub
xchg
iret
fistpl
outsb
aad
jns
popa
cmp
fs
mov
adcb
out
in
clc
push
mov
scas
inc
fucomip
dec
enter
ljmp
enter
test
jge
mov
rclb
sub
jge
pop
xor
push
push
lret
jp
mov
fwait
jg
fidivrl
jmp
fs
jl
jmp
xor
test
aam
push
mov
or
pop
cltd
xchg
mov
mov
lods
sbb
xor
insl
and
add
dec
inc
and
lcall
jmp
fnstenv
arpl
cs
sub
scas
jge
imul
cmp
iret
sub
daa
les
dec
mov
jp
mov
addr16
jae
inc
jl
push
or
stos
or
popf
xchg
inc
push
adcb
xor
enter
xor
mov
pushf
mov
movsb
cli
xlat
pop
mov
cmpsb
mov
mov
mov
jnp
jp
push
push
ss
xchg
xchg
inc
testl
or
dec
xchg
test
aad
pop
mov
inc
loop
sub
addb
and
jnp
lahf
jne
fildl
inc
xchg
sbb
into
sub
ds
lods
add
sub
or
nop
cmp
push
fstpl
cmc
inc
cmp
mov
adc
inc
iret
in
lret
in
nop
mov
cs
push
xor
mov
jnp
lock
repnz
scas
jno
xchg
and
add
mov
mov
sub
movsl
dec
jbe
stos
adc
add
and
inc
aam
lcall
adc
jecxz
push
jge
push
mov
add
or
popf
xchg
sbb
int3
mov
popl
cltd
sti
cmp
sub
xchg
jo
inc
pop
pop
test
inc
xchg
cli
and
cmc
xor
xlat
xchg
pop
cmp
call
jns
inc
push
cld
mov
add
or
xlat
inc
jb
lods
in
orb
mov
pop
arpl
fdiv
subb
and
mov
jp
shlb
shlb
xchg
add
push
xchg
xchg
pop
jae
push
scas
sbb
sbb
pop
dec
add
mov
jmp
inc
rorb
or
cmp
pop
mov
push
xchg
push
out
cmp
mov
dec
lcall
jb
lcall
in
pop
inc
aad
add
pop
dec
in
mov
xchg
add
stos
fistl
mov
inc
ja
push
inc
xchg
addr16
mov
ja
repz
adc
push
sub
sbb
call
aam
xchg
pop
fwait
jbe
es
jp
mov
cltd
or
mov
movsb
jns
icebp
stos
leave
pop
scas
outsl
rcr
sbb
sub
inc
mov
mov
jecxz
stc
and
movsl
mov
shll
lret
incl
dec
dec
scas
add
inc
mov
stos
jp
jnp
mov
push
cmc
push
mov
imul
fiadds
call
sub
sub
xchg
add
pop
mov
mov
and
cmc
or
cltd
inc
int
adc
imul
and
addr16
bound
lock
loope
ret
bound
mov
pop
xchg
jmp
negl
arpl
and
insb
je
nop
mov
cmp
aaa
pop
adc
pop
pop
sbb
out
mov
ljmp
push
mov
pop
std
mov
pop
pop
xlat
out
dec
mov
mov
sub
adc
in
or
popf
aam
leave
and
dec
jbe
xor
mov
mov
push
aam
fst
add
hlt
or
push
stos
mov
pop
outsl
pop
and
adc
sahf
mov
out
inc
test
sub
push
push
icebp
mov
jnp
shl
sub
pop
pop
aaa
pop
and
cwtl
cld
mov
mov
pop
and
dec
inc
mov
outsl
aas
sbb
adc
inc
movsl
sbbb
xlat
fsubs
imul
jl
sahf
sbb
mov
je
jnp
mov
das
js
dec
xor
push
pop
sub
push
inc
in
adc
scas
scas
in
inc
jecxz
push
sub
push
mov
sbb
fisttpll
enter
jecxz
lahf
cli
cld
lods
jae
negb
inc
lds
mov
and
and
inc
mov
add
test
loop
jae
mov
stc
pop
shl
xchg
xor
xor
mov
adc
sub
and
fnsave
imul
mov
shl
push
push
popa
cmp
pop
xor
xchg
mov
adc
in
movsl
aas
cmp
jle
sbb
daa
jbe
scas
pop
push
xchg
mov
lret
mov
in
pusha
out
test
cwtl
mov
dec
decb
and
dec
mov
fcmovb
adc
mov
xchg
gs
and
adc
call
jl
lret
inc
sbb
add
mov
cmpsl
icebp
insl
lods
jl
stos
inc
sarb
push
jl
stos
mov
adcb
xor
sub
fisttpl
xchg
adc
mov
xor
mov
into
sbb
adc
sarb
shrb
adc
add
sar
pop
xor
addr16
mov
push
into
mov
into
cltd
mov
xchg
lea
xor
out
test
mulb
mov
lret
sub
lds
in
or
mov
cltd
clc
inc
dec
xchg
pop
lcall
sbb
cmp
sbb
jecxz
nop
xor
dec
or
lret
call
mull
clc
aas
mov
jns
insl
cmp
sarb
jbe
das
pop
aam
sub
not
and
fsubrp
cli
hlt
cmpsl
adc
mulb
insb
dec
cmpb
xor
mov
inc
loopne
call
ret
sbb
stos
inc
inc
jl
das
lock
or
sub
mov
add
or
pop
jb
shll
fsubrs
movsl
repnz
pop
mov
out
ret
mov
and
mov
adc
or
mov
icebp
mov
mov
mov
shrb
jl
scas
jae
ljmp
hlt
add
mov
fsub
sbbl
xchg
test
insl
fmul
pop
testl
add
sub
dec
push
dec
ss
roll
add
in
mov
incb
cmp
xor
cld
sub
enter
adc
mov
mov
or
push
mov
adc
fidivrs
adc
cli
fcomip
push
stos
add
cmp
and
inc
mov
lcall
jecxz
adc
call
sbb
cs
mov
xchg
jae
sub
mov
out
lods
mov
pop
adc
jno
insl
mov
xchg
stos
mov
ret
pusha
fwait
js
add
ret
and
push
dec
pop
stos
mov
sbbb
into
pop
mov
sarl
sub
push
stc
mov
sbb
and
movsb
mov
jne
call
imul
or
lock
cmpsl
leave
xor
aam
or
dec
pushf
xchg
loope
addr16
fmull
int3
clc
loopne
nop
and
jg
sbb
inc
mov
pop
popf
pop
and
mov
mov
xchg
test
call
cltd
sub
mov
jb
test
pop
and
cmpsb
or
aaa
and
inc
into
mov
popa
cmpsb
or
lahf
xchg
pop
push
xchg
test
inc
push
cmp
pop
fisubl
sbb
lcall
push
mov
bound
pop
ret
fs
ljmp
cmp
mov
or
adc
es
inc
mov
les
std
in
mov
idivb
xchg
fidivrl
icebp
pop
push
inc
mov
in
pop
or
aam
enter
cmp
xchg
sbb
jge
lret
dec
pop
ret
sahf
jg
xchg
push
xor
xor
nop
sub
mov
pop
cltd
pop
xchg
jb
cmp
push
pop
mov
xor
jns
xchg
jmp
lods
out
mov
mov
fstpt
mov
imul
loopne
sar
loopne
outsl
daa
aas
mov
test
cs
mov
xchg
mov
lahf
cmp
pop
jns
jns
mov
sbb
mov
psrlw
add
outsl
and
imul
dec
arpl
jmp
test
sbb
sub
inc
imul
adc
adc
jae
dec
js
push
jecxz
outsl
inc
mov
inc
ret
cmp
lea
push
jnp
aad
into
jne
lret
mov
push
sahf
or
sub
scas
out
xchg
fbstp
jecxz
imull
inc
lds
add
xchg
loop
movb
lcall
mov
mov
out
cmpsl
mov
enter
cli
mov
pop
aam
or
adc
xchg
ret
mov
jae
adc
pop
stos
imul
mov
xlat
fcoms
out
mov
test
and
cmp
push
jl
inc
mov
adc
out
idivb
fs
mov
adc
pop
cmp
and
mov
daa
pop
sbb
scas
in
addr16
xchg
push
mov
mov
scas
add
aaa
mov
mov
mov
and
push
mov
add
rclb
bound
out
add
jae
mov
or
aas
les
xchg
movl
ja
outsb
xchg
stos
lds
mov
add
cmpsb
test
xlat
pop
dec
shl
pop
insl
sub
push
sahf
cmp
xor
loopne
jmp
popa
and
push
mov
dec
js
adc
js
mov
adc
inc
addb
cmp
adc
jns
lods
les
in
das
or
adc
cwtl
xchg
test
inc
insb
shll
lea
xchg
sahf
lcall
fwait
pop
test
les
aam
in
dec
mov
ret
pop
cwtl
mov
mov
lahf
jl
je
mov
dec
cmp
cwtl
mov
outsb
dec
out
test
jp
mov
sbb
pop
fidivrs
jo
stc
andb
inc
dec
imul
inc
rcpps
xor
sub
out
mov
add
inc
pop
xor
incl
std
repz
imul
mov
jns
sbb
pop
add
sbb
lcall
mov
xchg
jg
adc
sub
cmp
inc
mov
rcll
mov
out
cmpl
push
or
and
xor
add
add
mov
sbb
addr16
ret
pop
xor
or
jl
xchg
inc
mov
add
pop
sbb
mov
or
fisubrs
sbb
clc
mov
mov
mov
inc
jp
sub
push
pushf
data16
pop
jne
js
mov
or
adc
movsl
cmp
pop
xchg
pop
and
xchg
movsl
sbb
or
xchg
mov
sahf
push
mov
std
loope
andl
xchg
in
into
pop
or
addb
mov
imul
arpl
pop
popf
test
adc
mov
mov
fcmovb
cmpl
fnstcw
fstl
nop
sub
shlb
std
sti
cmpsb
loopne
pop
sbb
in
imul
fistpl
cmpsb
insb
jnp
stc
mov
inc
enter
imul
das
stos
inc
or
inc
arpl
mov
dec
hlt
es
mov
sub
lock
inc
pop
xor
inc
jne
enter
push
jg
shl
and
fdivl
adc
xchg
add
popa
dec
imul
cli
mov
xor
inc
and
dec
lcall
xor
sub
inc
les
add
bndldx
jecxz
fdivl
jp
outsb
add
gs
icebp
in
xor
lcall
mov
fwait
jne
add
add
cmp
push
mov
sbb
jg
push
out
in
das
mov
fnsave
mov
popf
loopne
push
pop
xchg
and
mov
sub
fstpl
out
and
popf
ret
outsb
nop
jmp
cmpsb
lods
sub
nop
aad
and
sub
mov
fsub
out
into
cmp
scas
push
cmp
ficompl
rorl
jae
repnz
jp
inc
in
cmc
loope
mov
adc
mov
addr16
mov
ss
lcall
lock
sbb
jae
sahf
xchg
pop
push
lcall
outsb
sub
fstps
push
xchg
cmp
fimull
ret
cmp
push
fidivs
xchg
push
inc
xorb
pop
lods
cmc
push
repz
sti
out
stos
gs
and
xchg
dec
mov
lods
push
aaa
dec
mov
sub
dec
xor
aas
cmp
jmp
shrl
rcrb
icebp
and
adc
ret
loope
mov
clc
adc
push
insb
pop
push
jecxz
adc
leave
mov
lds
inc
or
push
mov
mov
iret
mov
push
popf
push
pushaw
inc
xchg
scas
aaa
test
add
rorl
sbb
cli
scas
and
mov
push
js
rcll
outsl
sub
loopne
mov
xchg
inc
cmp
mov
cmp
lret
and
lock
jno
pop
enter
jo
dec
test
insl
dec
leave
popf
pop
mov
pushf
push
mov
loop
sub
fs
test
fstpt
dec
jge
inc
lods
or
jae
add
aam
mov
cmpsb
mov
dec
leave
dec
test
mov
fsubrl
shll
add
adc
in
cld
dec
inc
sahf
sub
jbe
jg
mov
mov
scas
and
test
arpl
iret
dec
insl
mov
inc
fstpt
dec
pop
adc
lock
xchg
stc
rorl
aam
push
out
rclb
out
push
mov
test
xchg
sub
jmp
cmpsb
cmp
sbb
push
incb
inc
jno
jl
inc
adc
adc
call
loopne
adc
repz
mov
inc
mov
and
pop
movsb
xor
ja
in
push
lods
mov
mov
add
out
jp
mov
push
insl
mov
sbb
mov
scas
pop
gs
pop
xor
std
call
xchg
fistps
jo
mov
icebp
nop
or
mov
cld
repz
jno
std
pop
jb
aad
pop
xchg
outsl
push
pushf
rcr
cmp
popa
or
inc
leave
xchg
fildl
hlt
push
loopne
sbb
pop
dec
arpl
mov
inc
ds
shll
cld
les
mov
and
lcall
cmp
dec
inc
cmp
adcb
lds
jp
pop
loope
jbe
push
inc
mov
add
stc
cmpl
out
mov
cmp
lods
sbb
mov
pop
gs
fwait
inc
insb
push
jo
add
dec
xor
xchg
into
loop
test
xchg
fisubl
enter
adc
lock
add
cmpb
xlat
iret
mov
cs
pop
adc
mov
test
sub
sbb
js,pt
fimull
mov
add
jl
popa
fnstenv
scas
push
cmp
jge
xchg
sub
int3
mov
mov
push
aam
scas
sbb
lret
or
out
cmp
les
fst
shlb
xchg
mov
and
mov
xchg
ror
dec
and
cmp
cmp
pop
sbb
icebp
sahf
xchg
jmp
adc
out
mov
inc
jg
ljmp
popl
in
jg
decb
icebp
call
xchg
das
out
icebp
and
daa
repz
jmp
mov
mov
cs
dec
fildl
testb
hlt
shl
and
fwait
push
push
and
les
out
daa
cmpsl
icebp
ficompl
stos
mov
js
cmp
ss
gs
ret
push
add
mov
jne
push
ds
pusha
push
movsb
mov
push
cmp
jmp
repnz
sti
call
dec
les
dec
push
shrb
std
mov
add
inc
jge
jle
or
sbbb
jge
mov
sbb
enter
mov
mov
dec
dec
shlb
mov
jge
mov
mov
mov
xchg
mov
push
shlb
push
and
push
mov
leave
hlt
mov
pop
daa
sbb
ret
mov
dec
cmp
sti
popa
inc
loopne
mov
pop
or
bound
inc
outsb
sbb
sbb
in
xchg
and
xchg
inc
addr16
mov
lock
pop
ror
mov
mov
jnp
fisttpl
lods
call
xchg
and
cmp
fsts
test
pop
mov
int3
mov
inc
ljmp
clc
lds
loopne
inc
shll
cmp
cmpsl
lds
aad
push
lea
xchg
mov
push
dec
scas
not
fucomi
in
push
pop
rcpps
push
push
and
fwait
and
es
cmp
and
mov
andl
mov
dec
lds
sub
test
icebp
and
addr16
sub
mov
and
push
fisubrl
out
in
xchg
jg
fnstsw
ficompl
pop
pop
mov
xchg
push
imull
mov
cmpl
push
mov
sbbl
pop
aad
pop
lahf
add
and
adc
fsubrs
push
nop
sub
in
mov
sbb
jmp
es
push
sti
sub
fwait
xor
cmpsl
push
jle
stos
push
lods
loope
aad
sub
data16
fisubrl
icebp
jmp
mov
and
or
rolb
sub
aam
popf
xchg
lods
loop
jp
rorl
nop
ja
inc
lret
add
inc
fsubl
popf
push
sahf
popf
out
xchg
xchg
pop
xor
push
add
cli
sbb
push
xchg
daa
or
mov
mov
mov
dec
ret
sub
je
lret
je
add
inc
lods
addr16
jge
in
push
mov
adc
fidivrs
inc
pop
div
pop
or
and
mov
in
and
ss
sub
xchg
fistl
fcompl
dec
lods
mov
divb
xor
jge
xchg
and
int
ror
jae
stos
or
mov
adc
xchg
sbb
mov
xor
clc
addr16
mov
clc
data16
nop
stc
sub
push
pop
adc
sti
in
rcrl
popf
decl
cld
adc
inc
aas
add
xor
mov
mov
fdiv
insl
inc
arpl
je
mov
fisubrs
dec
in
push
ret
xchg
cmc
cld
bound
mov
dec
or
push
xchg
dec
pop
frstor
mul
std
jle
lret
push
scas
jl
push
dec
nop
jbe
in
int3
sti
and
stos
push
js
mov
or
push
cld
xchg
das
and
ret
aad
dec
fbld
out
mov
cwtl
hlt
sbb
fdivrs
jl
pushf
adc
addr16
push
pshufw
adc
arpl
dec
int3
adc
xor
cmp
pop
scas
repnz
test
out
testl
push
scas
fsts
sub
rolb
and
inc
daa
push
sbb
mov
popf
out
cltd
cmp
in
and
mov
in
jle
loop
jl
mov
stos
and
test
outsb
cmp
mov
xor
mov
pusha
jmp
mov
jmp
rorl
shrb
or
mov
test
sub
inc
push
jb
call
dec
jl
sub
mov
ljmp
fisubrl
mov
jmp
inc
sub
sbb
ljmp
mov
jge
cmpsb
dec
pop
dec
push
lahf
outsb
in
xor
adc
cmp
es
xchg
testl
lret
pusha
lret
sarl
adc
sarl
sbbb
mov
dec
or
pushf
or
ds
xor
mov
cmp
movsl
lcall
shl
adc
call
cltd
push
daa
or
adc
dec
sarl
dec
lret
lock
out
testb
mov
in
stos
aam
andb
push
lock
adc
call
dec
mov
mov
jge
unpckhps
sub
sub
xor
mov
dec
addr16
xchg
int
sub
pop
aad
daa
int3
enter
or
pop
and
dec
aas
fistpl
in
test
mov
jae
incb
sahf
dec
xchg
mov
mov
adc
sub
insl
mov
dec
icebp
roll
cmpsl
popa
bound
mov
sahf
mov
jo
js
fisttps
pop
pop
icebp
mov
xor
jbe
add
pop
or
pushf
add
pop
movsl
xor
test
fstpt
fldenv
cmp
or
cmp
xchg
jle
cmp
and
jge
out
int
rcrb
int3
dec
sub
xor
push
add
or
ds
data16
mov
lcall
fidivl
pusha
mov
or
lahf
inc
mov
mov
mov
les
mov
mov
sahf
or
mov
mov
mov
dec
sub
inc
and
mov
lods
fistl
jno
push
mov
push
jmp
pop
or
dec
xchg
pop
subl
rorl
lds
and
fsts
nop
mov
mov
fadd
repz
push
imul
out
pop
mov
adc
lret
jae
add
arpl
enter
push
out
adc
inc
and
loop
sub
ret
adc
lret
cli
pop
dec
mov
test
pop
mov
push
fwait
adc
cmpb
and
jno
repz
hlt
lock
decl
cmp
or
lock
ret
cmp
out
lods
adc
xchg
nop
movl
popa
pop
hlt
loop
ret
out
push
imul
dec
gs
int3
dec
dec
popa
jp
cmp
icebp
pop
cmpl
mov
and
jnp
dec
insb
mov
mov
push
lods
cmp
adc
mov
cmp
ficoml
push
dec
pop
icebp
out
push
mov
xchg
icebp
sbb
jnp
lods
xor
pusha
repz
stos
push
xchg
fwait
xchg
test
jmp
cmpsb
cmpsl
std
jo
dec
xor
and
sub
fisttpl
stos
stos
stc
sub
lahf
cmc
jbe
dec
inc
cmp
daa
jo
in
aam
sti
xchg
mov
dec
mov
mov
mov
js
repz
std
mov
mov
lahf
push
adc
lock
es
jp
mov
dec
adc
jno
xchg
dec
sub
fs
inc
test
arpl
sbb
es
jne
mov
pushf
jp
adc
test
pop
mov
and
mov
xchg
mov
iret
sbb
pop
imulb
xor
sub
imul
inc
movsb
sub
cmp
int
je
or
pop
mov
mov
push
divl
loope
stc
sub
sub
or
push
iret
sarb
xor
sbb
and
js
and
jmp
stos
repz
sbb
push
cli
and
pop
jb
lahf
je
mov
pop
xchg
leave
pushf
jns
aad
stos
aas
pushf
or
and
lock
pop
pop
mov
mov
cli
arpl
cmc
dec
aad
int
lahf
or
int
mov
push
cmp
xchg
adc
into
lahf
sbb
xor
mov
mov
arpl
adc
rorl
hlt
or
mov
sbb
js
das
cli
pop
cmp
repz
js
xlat
js
pop
jp
inc
push
das
sub
pop
xchg
aaa
icebp
shll
xchg
xlat
lds
jnp
mov
std
pusha
xor
or
pop
int
out
sahf
mov
cmp
mov
stos
pop
mov
call
xchg
lock
adc
pushf
pop
sbb
sbb
dec
fildll
fnstsw
out
mov
mov
inc
ret
push
mov
or
imul
sub
movsb
lods
sub
ret
sub
cmp
insl
movsl
sub
xchg
shlb
lock
ljmp
inc
push
push
xorps
sbb
push
sti
mov
xchg
lods
adc
out
ror
pop
xor
std
adc
jne
sub
mov
les
xchg
stc
js
mov
mov
hlt
cltd
jo,pt
sub
mov
mov
pop
push
xor
rcrl
ja
fwait
aam
pop
ficoml
dec
popf
ret
inc
inc
lea
popf
push
hlt
mov
pop
fwait
test
dec
inc
mov
pop
inc
stc
add
jo
xchg
dec
cld
les
or
xor
or
xorb
je
loope
test
cltd
cmc
mov
cs
dec
movsb
ds
frstor
mov
pop
push
andb
push
jecxz
lock
pop
daa
push
mov
sub
cmpsb
fisubrs
scas
sbb
pop
lock
mov
ret
or
mov
jae
mov
add
push
mov
jbe
ds
add
or
add
sbb
xlat
adc
sbb
lret
pop
jo
xchg
repz
mov
mov
xor
push
lea
inc
xlat
inc
aam
jg
push
dec
call
cmpsb
clc
gs
cmp
rcrb
shlb
inc
in
imul
and
jno
pop
xorb
xlat
add
add
sub
mov
testb
icebp
jl
in
mov
sbb
gs
call
pmaddwd
push
outsl
rsm
ja
stc
add
mov
xchg
out
repnz
add
push
aaa
and
and
loope
out
mov
inc
ret
ds
dec
cmp
xchg
sbb
scas
pushl
fs
cmp
inc
les
insl
jl
test
sbbb
popa
subb
pop
lock
clc
aad
mov
push
nop
push
or
lret
add
js
mov
push
and
mov
lahf
push
paddusb
sub
push
jp
push
mov
aam
sbb
loopne
fsubrl
push
xlat
adc
pop
dec
and
mov
imul
push
xchg
xor
mov
sbb
xchg
sub
sub
adc
add
mov
lea
cmp
fmuls
or
or
mov
fistl
adc
cmpsl
ffreep
je
out
ret
jbe
pop
bound
mov
arpl
fadd
outsb
popa
imul
adc
lods
jbe
and
inc
mov
pop
lret
push
int
test
jnp
popf
out
rcrl
xchg
daa
aas
xchg
loopne
xor
pop
sub
test
andb
je
fistpl
push
mov
jae
jno
add
add
pusha
or
inc
mov
data16
imul
sahf
les
xchg
es
sbb
mov
sub
fsubp
ret
xor
dec
or
mov
xchg
int3
mov
mov
out
jno
pusha
dec
xor
lret
repz
xchg
xorb
xchg
jno
scas
push
ret
int
cmp
sbb
xor
movsb
or
data16
mov
or
out
jmp
addr16
dec
insb
cmp
inc
push
sbb
and
mov
sarl
push
cwtl
insl
push
adc
sub
or
xor
mov
pop
push
or
repnz
jle
xchg
cmpsl
or
mov
shl
sbb
es
cmp
xchg
mov
or
jecxz
scas
adc
jnp
mov
xor
frstor
in
mov
push
push
fwait
or
push
js
mov
lret
mov
xchg
bound
arpl
sub
adc
dec
mov
and
mov
data16
repz
jbe
and
jge
mov
pop
add
dec
jae
mov
and
cmpl
lahf
fisttps
sub
out
frstor
push
in
orb
jl
jo
jns
sub
ret
hlt
pop
out
mov
js
loopne
sub
jl
jmp
fcomps
add
mov
stos
cmc
lods
stc
push
inc
cmp
je
into
lret
mov
xor
mov
int
shll
adc
dec
punpckhwd
pop
mov
enter
jno
sbb
mov
mov
jmp
cmp
pop
adcl
cltd
sahf
cmpsb
popf
add
xchg
cli
jns
dec
adcb
in
inc
pop
pop
fucomp
mov
and
dec
dec
sbbb
jp
scas
xchg
scas
lret
int
xor
push
lea
popf
mov
hlt
mov
filds
dec
xor
insb
dec
adc
cmp
test
ds
push
mov
nop
mov
cmp
adc
aaa
pop
jp
ret
lds
push
pop
mov
xchg
xchg
loop
lds
jae
test
jb
push
outsb
fistps
ljmp
test
jnp
repnz
mov
js
lret
test
jo
cmp
adc
adc
outsb
or
sbb
add
jg
pop
adc
repz
fldt
out
push
xchg
mov
lret
cmpb
push
ja
pop
mov
into
adc
sub
fisttps
dec
cmp
push
sub
pop
cmpsb
mov
repnz
jge
adcl
daa
sub
add
sbb
pop
in
dec
jl
lret
addl
inc
sbb
ficomps
mov
inc
sbb
popa
and
pop
leave
jne
inc
jp
or
ret
mov
sub
inc
add
arpl
or
inc
jno
les
add
jb
xchg
inc
sub
out
mov
data16
sub
fisubl
add
shll
cltd
aad
jp
inc
sbb
or
idiv
sub
mov
inc
push
or
shrl
daa
mov
jl
xchg
jno
mov
mov
pop
sub
lods
hlt
clc
loop
lods
imul
sub
inc
pop
pusha
dec
dec
inc
push
push
and
inc
stos
test
mov
push
sar
int3
push
in
mov
xchg
pop
add
shlb
dec
out
sub
push
nop
lds
mov
std
or
test
test
sahf
int3
mov
scas
repnz
call
dec
sub
roll
sub
xchg
dec
stc
sbb
repz
mov
stos
fsubrp
pop
clc
add
mov
cli
cli
or
scas
pop
leave
sbb
mov
ljmp
cmp
pop
cltd
jmp
adc
arpl
jno
cmpsb
sub
mov
jl
loopne
test
movsl
push
mov
mov
psrld
jno
jge
cmpsb
fistps
push
pushw
adc
sbb
and
pop
mov
mov
xchg
adc
cmp
fwait
xchg
mov
jo
std
sbb
add
jnp
stc
mov
pop
mov
bound
jg
inc
push
mov
dec
mov
xlat
mov
push
les
fdivs
outsb
lods
and
aas
mov
add
ds
iret
xchg
sbb
push
pop
sub
imul
or
mov
leave
pop
jmp
movsb
ret
xlat
insb
adc
imul
enter
mov
cmc
icebp
mov
and
cwtl
loopne
fsubrl
jo
jl
stos
dec
ret
sar
jns
and
out
mov
jns
fistl
push
shll
and
jg
pop
cmp
pop
fmul
sti
push
cs
testl
fwait
lret
xor
sub
jbe
inc
xor
or
push
movsl
mov
fucomip
fdiv
pop
int3
push
add
mov
mov
mov
jnp
xchg
outsb
inc
mov
lods
cmpsl
mov
mov
push
lds
jge
dec
inc
jle
or
out
mov
cmpsl
stos
dec
pop
fldt
imul
lahf
stos
lods
or
push
mov
sysret
out
cmpsb
dec
sub
jb
outsl
nop
push
sub
sbb
dec
dec
push
jecxz
std
sub
add
fcmovne
mov
outsb
loop
jl
loop
shll
mov
xor
enter
ja
add
fs
cmp
pop
aaa
nop
shlb
mov
lea
xor
jbe
lret
sbb
sbb
xor
add
bnd
jg
adc
pop
cmp
xor
xchg
inc
scas
pop
aaa
and
and
or
out
push
sub
xchg
out
jno
lea
mov
inc
add
xchg
sti
jo
sbb
adc
ja
add
fs
mov
mov
sbb
add
add
or
adc
sub
jbe
lahf
mov
loop
gs
xchg
or
and
mov
scas
mov
inc
push
xor
ret
adc
add
pop
aas
add
xlat
imul
in
cmpsl
movsb
cmpsl
or
push
in
adc
sbb
hlt
js
bound
fwait
out
jle
push
jbe
push
leave
inc
jecxz
pusha
mov
popa
mov
or
cld
cmp
add
jns
mov
mov
mov
in
dec
andb
test
push
mov
std
push
insb
gs
mov
test
jmp
cmpsb
icebp
inc
mov
mov
sbbl
adc
faddl
xor
dec
loopne
lcall
cmp
jbe
add
pop
jno
imul
xor
adc
push
dec
inc
repnz
aam
xor
movb
in
lcall
jge
mov
nop
loop
push
mov
dec
jg
push
mov
addr16
pop
hlt
ss
shll
repz
stos
xchg
cmp
xchg
cmpsb
cmp
xor
das
and
sbb
shr
push
mov
ja
fisttpl
dec
or
sbb
and
enter
xchg
mov
jecxz
cmp
xor
mov
hlt
lret
arpl
cli
insl
ret
and
loopne
mov
subb
xor
jne
out
outsl
sbb
dec
aad
jge
sbb
popf
dec
cmc
dec
imul
mov
sub
inc
sbb
icebp
push
call
ja
xor
and
or
mov
adc
cmovl
pushf
mov
aam
in
dec
jecxz
out
cmp
icebp
jge
nop
je
inc
mov
leave
fcoml
outsl
and
cmp
adc
pop
outsl
roll
xchg
push
or
jle
dec
add
roll
imul
mov
and
xchg
iret
test
bsr
mov
add
push
cmp
push
orb
jmp
or
call
adc
or
aad
push
addr16
jecxz
xchg
sub
les
mov
cld
cmp
dec
ljmp
xor
add
xor
push
out
dec
xchg
into
iret
shlb
xorl
cld
or
dec
cmpsb
stos
outsl
add
sub
insb
loop
hlt
cld
bound
xchg
faddl
dec
and
out
das
daa
cmp
or
fdivr
xlat
or
rcl
movsb
dec
hlt
daa
je
mov
and
push
xchg
into
inc
jo
scas
or
mov
or
pop
jp
lahf
or
sbb
int
dec
and
pop
mov
mov
loopne
orl
cmp
pushfw
rep
lahf
add
mov
jecxz
xchg
repnz
pushf
test
lea
stc
sbb
test
mov
inc
pop
mov
shlb
mov
xlat
inc
fwait
mov
mov
mov
jmp
lds
iret
adc
repnz
lds
scas
sub
adc
adc
ss
shll
push
mov
lds
sbb
orb
out
movsb
adc
mov
pushf
stc
dec
cmp
inc
outsb
in
or
scas
and
mov
scas
jae
adc
pop
jnp
fdiv
stos
jnp
test
add
arpl
xlat
or
das
dec
dec
and
sbb
jne
mov
pop
ja
cmp
inc
loopne
adc
nop
or
push
mov
mov
ss
ret
pop
addr16
imul
lea
mov
pop
push
push
jecxz
into
and
mov
sbb
ljmp
jb
dec
xor
inc
push
add
ss
sub
fs
inc
xchg
dec
stos
aam
in
xor
sub
add
popf
loope
js
mov
or
into
lods
call
sbb
daa
mov
sahf
cmp
xchg
jl
sbb
out
and
lds
push
arpl
insb
xor
loope
addr16
jecxz
cmp
cmp
sub
cmp
fsubrs
add
sti
ja
imul
test
popf
cwtl
pop
xchg
imulb
add
xor
gs
sub
pop
clc
mov
in
insb
cld
mov
adc
pop
mov
jne
dec
lods
es
sahf
add
aaa
pop
fdivrs
mov
fsubl
mov
lret
rcrl
inc
fwait
aas
mov
inc
jnp
add
bound
and
mov
aad
jge
iret
inc
push
cmp
pop
xchg
xchg
repnz
dec
inc
adc
pop
mov
mov
dec
bound
in
minps
jae
pop
sub
inc
push
push
pop
push
shufps
cmpl
scas
es
jno
and
and
shll
pop
push
mov
jmp
or
aam
cltd
outsb
push
push
inc
lods
daa
cmp
xchg
mov
push
xchg
lods
loopne
jmp
aaa
or
outsb
xor
mov
arpl
cmp
mov
nop
arpl
out
pop
push
ss
pushf
adc
cmpsl
loop
cmp
gs
mov
inc
dec
ret
clc
dec
mov
loope
xor
repz
insb
mov
adc
pop
sbb
mov
lods
lret
add
sub
jl
outsb
sub
pop
cli
pop
mov
ja
and
dec
pop
insl
les
dec
inc
andl
or
lods
imul
scas
inc
mov
lcall
sub
fistps
inc
xor
mov
pushf
cmp
sbb
cmpxchg
movsb
and
jo
cmpsl
or
jmp
jb
js
movl
cli
call
xor
pop
lods
mov
subl
xchg
xchg
stc
fs
sbb
jbe
adc
xchg
push
mov
fiaddl
jmp
xchg
mov
bnd
pop
inc
rcr
jno
xchg
push
pop
dec
lahf
lods
das
out
xchg
neg
ljmp
frndint
xor
fnsave
cmpsb
cmp
in
mov
repz
lahf
bndldx
pop
movsl
cmp
and
jns
das
js
push
aas
and
xchg
add
sbb
scas
dec
hlt
fsubr
loop
fcmovu
or
mov
sbb
mov
mov
cwtl
fidivrl
push
loope
mov
je
rcl
sub
xor
xlat
jno
mov
enter
inc
mov
jg
icebp
jle
outsb
bound
leave
inc
fdivrp
jle
sub
pop
mov
xchg
xor
cld
add
push
lcall
mov
rclb
arpl
pop
sbb
xor
inc
imul
inc
mov
xchg
push
pop
mov
fidivrs
stc
into
imul
out
dec
dec
xchg
iret
out
lock
orl
fdivl
repnz
sub
mov
dec
loop
add
ljmp
push
js
push
xlat
pop
push
push
and
cmpl
shr
mov
push
sub
push
and
cmp
vmwrite
rclb
jg
test
cli
je
jno
inc
xchg
daa
jne
ret
xor
or
lods
shll
mov
ljmp
pop
mov
in
data16
inc
shlb
roll
insl
dec
jg
addr16
jb
or
shrl
mov
mov
or
jnp
in
sbb
jp
mov
shrb
dec
xchg
xchg
push
rcr
mov
mov
inc
leave
leave
adc
outsl
cs
sub
cmpsl
sbb
jnp
ds
in
mov
mov
mov
rcrb
and
aad
jmp
cmpsl
imul
mov
lret
add
aas
ss
mov
xchg
fisubrl
test
adc
fwait
adc
dec
xchg
lcall
inc
bound
and
dec
js
mov
mov
add
and
jo
das
push
fbstp
and
jno
lock
dec
xor
jg
mov
fsubl
xchg
adc
pop
push
pushf
in
adc
ljmp
cmpb
imul
popa
jg
shr
adc
dec
cltd
nop
mov
push
pop
mov
mov
dec
pop
jo
xchg
xchg
push
dec
gs
mov
jp
adc
push
inc
mov
shl
sbb
dec
je
imul
jg
push
mov
xor
repnz
mov
dec
and
mov
rcrl
repz
sbb
mov
stos
sub
and
icebp
jmp
adc
sub
lds
fstpt
sti
xor
cmp
bound
pop
jnp
clc
dec
and
xchg
adc
cli
cs
aaa
xchg
xor
mov
es
and
sub
pop
and
addr16
mov
cmc
das
add
movsb
dec
xor
jne
decl
sti
jle
movsb
mov
cmc
ret
loopne
andl
insl
addr16
xor
jne
add
in
lret
aam
mov
xor
out
cmp
inc
dec
jno
pop
mov
xchg
xor
mov
cmp
jbe
mov
pop
hlt
adc
fdivl
sbb
mov
testb
mov
es
or
inc
mov
jae
jno
pusha
push
mov
fwait
lods
cld
pushf
rcr
inc
pusha
or
mov
cwtl
xorb
mov
mov
jp
inc
pop
and
stos
push
shrl
roll
fildll
mov
xchg
sub
aad
sub
rclb
add
and
or
loopne
mov
mov
sbb
add
lahf
cmpsl
test
stos
leave
repnz
sub
cmp
repnz
push
add
and
ljmp
cmpsl
fucomp
lods
cmp
adc
xchg
xor
pushf
arpl
adc
sbb
pop
dec
outsb
jbe
inc
js
dec
dec
out
xor
push
clc
xchg
add
gs
push
mov
dec
jg
popf
or
inc
repz
add
aad
add
loopne
inc
aam
dec
cs
int3
sub
and
mov
xchg
test
outsb
xor
cmpsb
mov
pop
sbb
aaa
jnp
imul
dec
cmp
out
bound
leave
daa
and
stos
jbe
push
roll
adc
sub
inc
push
push
enter
ret
push
hlt
test
bound
ror
out
xchg
lds
insl
xor
mov
out
pop
iret
popa
ror
pop
stos
push
adc
das
dec
dec
aad
xor
aad
ficoms
mov
push
cmp
lods
pop
arpl
inc
xchg
sub
and
ljmp
adc
cmp
mov
mov
mov
iret
mov
fsubl
sbbb
in
pop
imull
testl
inc
xchg
sub
idivl
jns
mov
or
icebp
stos
sbb
cmpsl
or
sub
or
sub
push
cmp
jg
aam
loop
mov
lea
in
test
fildl
jmp
mov
movsl
ss
jl
sbb
push
sub
xchg
in
loopne
daa
addl
inc
cld
jmp
ds
jge
aaa
inc
add
push
imul
mov
addr16
push
cwtl
dec
xchg
lret
int3
pop
test
push
xor
jmp
faddl
iret
lea
neg
push
loop
sbb
rcl
js
les
addr16
fstps
xchg
mov
ljmp
cs
add
mov
outsb
repz
out
add
xchg
std
incl
hlt
ret
sbb
shll
push
cmp
aad
movsl
dec
push
cmpsb
push
inc
xor
enter
rep
xor
addr16
add
in
ljmp
xor
shl
mov
xor
idiv
scas
dec
or
sub
repz
movsl
loop
enter
insl
or
repz
ja
inc
loope
sbb
jg
cld
test
fs
repz
add
jne
lcall
vunpckhps
test
iret
lret
fcomp
pop
adc
jmp
xor
in
inc
addr16
add
push
push
inc
pop
orb
xchg
rolb
into
push
loope
jae
mov
sub
fs
mov
dec
std
gs
mov
cmpsb
inc
jo
xlat
xchg
or
jno
mov
xchg
jno
push
jae
jp
lock
ljmp
push
fadd
xorb
cmc
outsl
dec
sbb
pop
push
in
orl
int
movsb
push
fdivl
inc
pop
lods
mov
aad
sub
mov
es
dec
pop
push
mov
cmp
loopne
adc
cmp
lods
push
lds
fcompl
inc
mov
ljmp
xlat
cld
xchg
push
dec
movsb
scas
loop
xor
mov
sub
jo
push
addr16
pop
mov
inc
pushf
jp
into
daa
pop
shll
addr16
test
aad
movsl
rol
add
add
sub
inc
and
adc
call
repz
fisttpl
lret
out
or
mov
in
xchg
pop
fwait
pusha
cmpsl
xchg
js
adc
xchg
push
jge
or
fimull
and
pop
jo
xorb
cmc
gs
test
cli
leave
pop
sub
imul
push
jbe
dec
push
jmp
ljmp
pop
push
mov
lock
adc
inc
push
les
hlt
push
outsl
imul
cmpsl
data16
pop
movsb
ret
sbb
cmp
mov
xchg
push
push
push
scas
ja
mov
hlt
sub
pop
leave
daa
mov
mov
jp
add
in
sarl
repz
out
lock
ss
pop
cmpsb
mov
sub
add
test
push
mov
mov
dec
mov
ss
gs
mov
adc
ja
pop
adc
push
dec
push
mov
mov
add
leave
xchg
daa
xor
xchg
lods
and
adc
xor
stc
xor
push
or
or
sub
cmp
sti
xor
pop
jg
stos
mov
adc
xchg
or
mov
and
or
inc
loop
mov
cmp
aad
xor
test
arpl
pop
imul
dec
or
cld
push
push
aad
push
sbb
fwait
in
add
lret
aaa
cwtl
inc
sbb
inc
mov
xor
mov
jne
in
fucom
ljmp
out
mov
pop
dec
bound
add
jl
out
lret
adc
cmpsb
shld
lock
scas
push
mov
jo
movb
call
xor
fisttpl
pop
sbb
cli
xor
fcomps
in
out
jbe
aas
mov
jecxz
sbb
push
inc
dec
sub
ja
dec
xor
jo
fbstp
dec
and
add
jp
xlat
imul
and
in
push
xorb
lods
inc
sub
xchg
push
leave
loopne
imul
call
pop
gs
popf
cwtl
add
inc
lds
inc
add
dec
pop
shrb
sub
movsl
push
negb
in
inc
push
ljmp
xchg
cltd
gs
mov
sub
fs
jge
jp
push
aam
jne
dec
movsb
rorl
rcll
jge
mov
andl
jg
sub
add
lds
push
in
loope
mov
adc
dec
xchg
fldl
sbb
xchg
cmp
mov
sub
adc
into
adc
into
push
insl
jnp
fstl
xchg
jbe
ret
loope
mov
inc
pop
or
mov
xchg
pop
aas
ss
adc
add
lods
sbb
lock
jmp
sub
ja
sbb
pop
cmpsl
inc
cwtl
xchg
hlt
xor
lahf
jnp
fdivrs
inc
xchg
push
sub
sub
mov
sahf
into
insl
xchg
stos
cmc
subl
mov
lods
cmp
and
pop
nop
mov
mov
pop
arpl
std
inc
adc
push
sti
inc
outsb
or
or
popf
xchg
clc
addl
pop
aad
mov
jecxz
movsb
stos
ret
loopne
pop
xlat
ret
mov
jb
je
xor
out
aaa
cmp
in
xchg
push
jnp
xchg
pushf
push
movsl
ja
jbe
ljmp
in
sub
aam
repnz
lods
dec
mov
and
inc
adc
mov
sets
aaa
dec
fidivs
jnp
xor
xchg
test
and
mov
ret
out
sbb
dec
push
mov
cltd
ss
mov
es
xchg
fwait
jle
xorb
fwait
jbe
sbb
test
sbb
iret
dec
jle
lock
mov
nop
xor
nop
jns
adc
pop
fisubl
jp
lock
popa
ret
jb
loope
xor
popa
pop
inc
mov
outsb
jmp
aam
mov
pop
cli
adc
stos
sub
pop
cli
mov
mov
sbb
dec
test
mov
mov
mov
jbe
xor
sbb
lods
jns
test
jne
jb
add
pop
scas
fdiv
jo
add
pop
xchg
out
sbb
rcll
xor
xlat
aad
mov
inc
push
inc
cli
cmp
pushf
inc
out
in
ret
and
ret
test
mov
lock
dec
aaa
mov
iret
repz
jge
test
cltd
xchg
sti
aaa
fstps
sbb
xchg
jne
ja
xchg
cmp
xor
dec
popf
stc
rolb
jmp
ret
scas
pop
sbb
lahf
leave
mov
cmp
inc
ret
mov
mov
iret
inc
aam
xor
jno
inc
cwtl
clc
bound
mov
loope
fcmovb
sub
inc
sar
dec
addr16
jnp
fiaddl
aaa
test
push
in
mov
sbb
mov
sub
cli
lret
frstor
std
mov
out
out
push
leave
add
inc
inc
mov
pushf
sbb
cmp
iret
dec
daa
pop
push
or
inc
stos
jo
andl
mov
and
cmp
stos
jle
pop
fnstsw
pop
and
cwtl
sub
push
arpl
sub
or
mov
xlat
xchg
push
dec
push
mov
mov
pop
popl
inc
lea
mov
adc
and
loop
jmp
outsl
dec
jg
xor
push
pushf
fnstsw
out
lahf
fimull
mov
cld
iret
rcrb
call
add
xor
jg
or
dec
movsb
out
and
mov
push
aas
fs
push
ret
stc
xor
add
rcr
cmp
cmp
js
ljmp
xchg
pop
cmpl
in
or
cltd
sti
inc
add
pop
jmp
mov
xor
lods
push
scas
cmp
push
cmp
push
pop
xor
and
mov
xor
cmp
sub
enter
dec
lcall
cmc
push
mov
dec
push
ds
sub
lahf
pop
cltd
jb
mov
dec
push
cltd
sarb
or
data16
cmp
cmp
cmp
inc
repz
dec
jecxz
faddl
mov
jle
pop
jmp
pop
lods
dec
jo
lcall
loopne
fildl
mov
xchg
add
cmp
mov
rcll
or
sub
mov
sti
shl
test
cmp
cmp
sub
fwait
loope
jo
call
ds
inc
ret
and
mov
pop
jnp
fcomip
in
lods
out
xchg
mov
cmp
jo
rorl
xchg
fs
hlt
lods
and
cmp
cld
inc
test
repz
xor
jae
loopne
push
adc
mov
into
js
mov
mov
pushf
rorb
and
leave
je
mov
dec
inc
pop
cmp
xchg
or
cmpl
mov
repz
imul
fcmovbe
xlat
pusha
cltd
test
cmp
xor
lea
daa
insb
push
mov
loopne
ret
xchg
cmpsl
inc
push
sub
outsb
scas
xor
mov
mov
xchg
push
lods
push
pop
cmp
bound
fnsave
cmp
in
scas
pop
dec
popa
jecxz
lds
rcrl
add
xchg
lods
rorb
data16
xchg
jp
cld
or
daa
test
mov
adc
add
mov
and
inc
daa
add
fadds
jle
push
and
in
and
mov
push
inc
loope
lcall
or
out
popf
fimuls
lea
test
enter
push
mov
into
and
xchg
pop
imul
popa
sti
mov
push
dec
jns
aas
rolb
pop
dec
stos
sbb
fwait
ret
mov
shlb
pop
mov
sub
mov
and
stc
mov
fcoms
enter
aam
jae
shlb
and
jge
aad
arpl
sbb
and
aam
fdivs
js
mov
test
push
inc
adc
shrb
xchg
xor
add
fmul
lahf
stos
mov
xchg
popa
dec
loop
dec
out
or
mov
push
mov
pop
outsb
fstl
xor
mov
push
sub
sub
loopne
inc
jmp
push
and
jno
sbb
lods
rcrb
add
sub
aad
ret
cwtl
sarb
jg
ja
shrl
pop
lods
inc
ja
jle
stos
cmp
push
inc
jg
pop
inc
push
aam
xchg
les
mov
rol
es
sti
cwtl
sbb
stc
mov
or
mov
or
inc
cmp
mov
aaa
sbb
into
lods
fstl
dec
int
add
cmp
push
fistl
jecxz
idiv
sbb
test
pop
pop
lret
fdiv
aas
mov
roll
jmp
cmp
push
ss
pop
add
data16
scas
aad
push
dec
and
xor
xor
cmc
sub
loopne
jo
out
push
in
loop
push
push
movb
in
cmp
adc
sub
xlat
dec
outsl
imul
jecxz
or
cmc
and
pop
imul
daa
mov
pop
jno
shl
outsl
mov
jnp
jg
lcall
jge
lods
enter
xchg
hlt
mov
pop
push
mov
mov
xor
insb
into
fdivrl
mov
sbb
and
inc
sahf
xor
test
lods
sub
cmp
shll
imul
dec
and
xor
das
and
or
pop
call
data16
push
fimull
pop
sti
fcoms
mov
popa
repnz
in
dec
adc
mov
adc
sub
outsl
dec
ds
pusha
xor
jle
je
idivb
push
mov
iret
push
cli
jle
dec
dec
lods
or
cwtl
nop
clc
inc
sbbb
aam
or
ss
stos
xor
std
lret
xchg
xor
call
popf
xlat
sbbb
lcall
mov
jo
push
inc
jle
push
insl
addl
bound
sub
inc
dec
cmp
fisttpll
add
adc
outsb
xchg
imul
jle
call
cwtl
adc
sahf
dec
dec
lahf
rclb
test
jge
mov
and
and
pop
ret
mov
sbb
mov
addr16
push
ja
repnz
js
push
inc
loop
ret
xchg
mov
pop
lahf
gs
xor
mov
lea
sbb
sbb
popf
rcl
mov
inc
jbe
jne
xchg
jp
out
mov
std
cmpsl
mov
add
setns
or
mov
fcmovnu
or
lahf
lahf
mov
add
sbb
jb
adc
jae
and
push
mov
aas
or
mov
mov
and
push
out
xchg
jecxz
jne
and
jo
inc
int
or
pop
fs
clc
sbb
shlb
cmc
xchg
daa
out
lcall
push
push
lods
loopne
or
aam
xor
jo
sub
ss
in
or
test
roll
adc
xchg
loopne
sub
add
xchg
push
jbe
hlt
jg
movsb
pop
mov
imul
rolb
sbb
mov
or
mov
cltd
lahf
mov
pop
fs
fucomp
push
insb
out
cli
mov
insb
mov
loopne
xchg
add
lahf
aaa
dec
imul
outsb
push
and
cmp
and
push
ret
adc
in
push
cltd
fs
mov
push
adc
or
ds
repnz
and
sub
sbb
cmp
lea
jge
jbe
mull
fisubrs
jp
test
adc
push
mov
jle
sub
pushf
cltd
cli
and
jb
stos
cwtl
sub
ret
std
ficoms
pusha
fildll
push
mov
mov
mov
hlt
xor
add
adc
cltd
out
aad
addr16
fimull
loopne
cmp
popf
add
les
xlat
leave
popa
adc
sbb
sub
pop
lds
sub
adc
mov
out
push
fistl
aaa
mov
dec
push
cmpsb
rcrl
addb
jecxz
test
ret
jnp
or
mov
dec
imul
jo
sbb
mov
lods
in
pop
fcoml
dec
jo
lds
ljmp
test
dec
jmp
mulb
out
and
sub
test
jnp
xchg
dec
mov
enter
lods
cmp
cmp
adc
lock
and
or
sbb
and
ja
out
out
out
out
rclb
std
daa
pop
sbbl
sahf
xchg
in
and
aad
xchg
jecxz
xchg
subl
mov
add
inc
cmpsb
add
cs
adc
loopne
int
call
pop
inc
mov
or
lods
mov
and
jp
mov
mov
pop
je
mov
mov
mov
cmp
fbld
fsubrl
adc
jo
xor
adc
fmull
push
add
fldcw
fwait
fs
mov
jo
ds
xchg
mov
insl
xchg
scas
cmp
jno
cld
inc
jb
mov
xor
xchg
loope
cmp
dec
nop
into
call
jnp
xchg
clc
mov
jle
push
shlb
jne
sub
sbb
adc
push
pop
leave
cmp
sub
jecxz
sbb
movsl
fldt
mov
pop
fsubl
test
shll
mov
gs
outsl
mov
jo
cmpsl
sub
lock
cs
test
leave
scas
mov
dec
cmpsb
in
mov
dec
lcall
push
xchg
push
stos
fucomip
incb
mov
loope
gs
mov
icebp
outsl
out
or
mov
xchg
es
xchg
mov
pop
lods
jne
subb
jno
sahf
dec
es
cmpsl
dec
divb
mov
sub
mov
mov
mov
scas
xor
mov
fcoms
insl
and
into
dec
insl
cmp
enter
sub
pop
stos
in
pop
in
ss
call
or
cld
in
mov
fdivrp
or
mov
jmp
mov
inc
js
and
mov
and
das
insl
setae
test
pop
sub
sbb
push
rolb
or
daa
imul
gs
mov
mov
imul
or
stos
sbb
fs
cld
dec
in
test
cmp
add
stos
stos
rorl
xor
pop
mov
add
ljmp
push
iret
jne
rcl
into
sarl
add
xchg
fdivs
not
es
imul
scas
lods
push
jp
inc
cmpsb
inc
push
fcompl
push
cmp
push
lods
jne
jmp
cmp
outsl
sub
mov
mov
aad
push
cmpsb
jno
cmp
sub
mov
xor
push
xchg
outsl
lds
dec
adc
mov
jge
and
add
xchg
sti
mov
std
cmp
dec
jns
pusha
jmp
ret
fs
cmp
divl
cltd
mov
fs
rcll
sub
test
sahf
jl,pt
shll
add
push
or
xlat
xchg
xor
nop
push
aaa
in
ret
leave
cmp
stos
cmc
mov
les
daa
sbb
bnd
bound
jbe
cld
std
jbe
mov
addl
aad
xor
and
cmp
jns
inc
xlat
push
pop
mov
push
add
xor
pop
sub
sahf
movsb
movsb
sub
leave
jnp
jle
mov
int
jmp
loop
fcomps
jmp
xor
inc
popa
pushf
scas
add
ficoms
or
mov
arpl
add
rorb
cmc
movsb
xor
jbe
call
inc
xchg
aam
and
lcall
pop
mov
flds
push
scas
sti
mov
push
mov
stos
lods
shrb
arpl
movswl
cmpsl
mov
cmpsl
xchg
mov
pop
push
xchg
xor
popf
sbb
sbb
sbb
ljmp
lea
inc
sub
ret
daa
scas
std
mov
inc
jbe
inc
push
add
int
mov
dec
add
add
cmp
outsb
xchg
cmpsb
addr16
gs
test
addr16
sub
mov
and
sbb
sbb
nop
sbb
mov
mov
lahf
cmp
out
lods
xchg
mov
mov
loope
pop
adc
cmp
cmc
dec
pop
dec
add
out
fistps
out
push
push
cmp
add
cwtl
dec
push
push
jo
cs
aas
add
aad
jb
mov
in
lea
and
xor
push
pop
dec
pop
add
push
shl
mov
ds
xchg
mov
dec
loopne
dec
outsb
pop
pop
push
int3
loope
sbb
xlat
imul
rclb
addr16
mov
into
in
mov
mov
jecxz
in
sub
dec
icebp
xchg
lret
xchg
int
lock
jp
fs
int3
pop
test
xor
fisubs
mov
clc
insb
push
xchg
push
mov
in
push
jge
in
stc
mov
dec
push
lcall
fstl
mov
xchg
jne
inc
int
push
adc
in
in
jge
data16
fbstp
adc
fwait
out
mov
test
cld
jge
cld
push
cmp
lds
push
mov
outsl
and
ljmp
inc
mov
rcr
or
in
or
add
jle
pushf
cld
arpl
shl
ficoms
xlat
adc
pop
and
in
sbb
orb
jge
incb
sub
popf
lea
hlt
mov
jle
push
and
pop
jle,pt
dec
outsb
lock
dec
pop
push
xchg
mov
push
xor
ss
pop
fsubrl
pop
inc
icebp
or
inc
lds
push
add
mov
cltd
jo
push
inc
dec
push
outsl
out
inc
adc
mov
push
dec
std
loopne
adc
cld
orl
popf
sbb
mov
lock
rcl
repz
or
push
pop
popf
out
xchg
dec
pop
cld
jle
mov
notb
shlb
adc
push
mov
xchg
sub
xor
cmpsb
fnstcw
sarl
das
shll
add
je
test
loopne
pop
xchg
mov
sar
stos
xor
cmovo
or
inc
leave
mov
popa
insl
repz
xlat
lcall
xor
lods
call
push
rclb
inc
test
cld
push
add
inc
jl
ret
lret
xor
scas
xchg
int3
movsl
das
fistps
and
xchg
cli
cmp
daa
data16
cmp
loop
dec
mov
fadds
std
push
push
add
inc
xchg
lds
shrb
into
dec
sbb
loope,pt
sbb
push
lcall
mov
xor
xchg
clc
adc
or
and
xor
cmp
movsb
cmp
cmpsb
js
imul
js
push
mov
pop
mov
inc
sbb
jp
or
aam
jnp
dec
lcall
cmp
xchg
mov
movsb
sarb
sub
xchg
and
sti
mov
adc
xor
xorb
jp
cmpsl
or
or
pop
add
lods
sbb
jge
addr16
into
in
lods
xor
xchg
nop
ljmp
ljmp
sbb
push
pop
sbb
add
or
arpl
pop
dec
lahf
jg
fstl
lods
mov
pop
push
lret
or
js
adc
sbb
adc
jmp
xchg
or
sub
pop
cmpsb
hlt
sub
inc
fcoml
lcall
fs
inc
jecxz
repnz
cmpsl
mov
push
out
loopne
sahf
aad
std
js
pop
cmp
sbb
cld
mov
test
jnp
push
inc
push
adc
je
sbb
add
mov
inc
pop
add
adc
adc
add
shl
xlat
add
loop
inc
sbb
and
sub
pushf
repnz
lock
xor
sub
daa
add
cltd
sub
cs
jmp
sub
rorb
aam
pop
cmp
lahf
loop
iret
movsb
inc
xor
nop
mov
cmp
aad
mov
push
adc
cwtl
jo
push
or
fs
es
and
rcr
cmp
js
imul
jle
mov
sbb
xchg
in
push
stos
inc
out
xlat
push
jo
lods
dec
pop
ss
dec
int3
pop
xor
aam
popf
push
dec
mov
aaa
mov
std
xlat
and
lods
pop
cmp
cmp
pop
pop
into
aas
stc
mov
clc
ret
fwait
andb
pop
jno
icebp
scas
mov
fisttps
pusha
cmovp
ret
and
cmp
cmc
push
or
and
inc
mov
test
xor
leave
lcall
jg
fidivl
add
and
in
bound
adc
cmc
or
lahf
push
and
push
jecxz
inc
adc
pop
je
inc
int3
imul
add
xor
mov
dec
or
mov
xlat
jb
outsb
js
sahf
into
or
cltd
enter
in
and
jns
enter
cmp
je
push
dec
out
xchg
outsl
sarl
std
jmp
mov
xchg
mov
hlt
das
xor
add
xchg
cli
pop
push
int3
rcl
mov
mov
std
rep
sbb
xchg
sahf
outsl
stos
adc
mov
sub
lea
mov
loop
jecxz
push
outsl
adc
lods
idivl
loop
jle
in
in
push
mov
jle
jmp
cmp
ja
mov
xchg
mov
stc
fwait
call
mov
xor
dec
and
mov
cmpsl
pop
or
or
sub
scas
nop
mov
mov
out
xor
xor
orl
in
hlt
cmp
pusha
or
insb
in
add
iret
jmp
shrb
adc
aad
jo
imull
jns
test
jg
inc
push
cmp
pop
or
sub
outsb
stos
rcll
cmpsl
fwait
cmpsl
sbb
and
and
xchg
jno
shrb
call
inc
pop
and
xor
das
aad
add
stos
mov
aam
dec
pop
ljmp
dec
cmp
mov
fstps
and
cld
mov
sub
fistl
imul
mov
movsb
sbb
int3
and
xchg
loopne
or
mov
mov
mov
fidivrl
push
mov
popa
sbb
cmp
push
push
in
in
stos
mov
adc
loop
xlat
test
pop
out
test
jb
loopne
adc
int3
push
xchg
shrl
jmp
jmp
mov
in
inc
inc
adc
dec
fildl
hlt
out
loop
pop
cwtl
pop
inc
decb
dec
lret
test
push
movsl
mov
xchg
es
mov
outsb
ficoms
mov
add
mov
push
scas
jle
sbb
ljmp
lret
cmp
adc
arpl
enter
mov
push
add
adc
xchg
and
mov
mov
loope
pop
pushf
cld
sbb
inc
sub
sub
int3
insl
cmpsb
pusha
inc
pop
sbb
imull
sub
add
xchg
hlt
test
sbb
scas
das
push
mull
jp
push
testb
cmp
aaa
mov
shrb
pop
les
push
cmp
sbb
pop
in
mov
outsl
jae
enter
fldl
push
mov
push
and
rcr
testl
fwait
int3
inc
vpsrad
mov
xchg
mov
xchg
ret
cmpsl
mov
xor
adc
xchg
cwtl
pop
js
jo
inc
out
scas
xchg
xchg
daa
sbb
out
fisttpl
pop
pop
shr
mov
sub
je
sub
pop
xor
adc
icebp
ret
faddl
andb
movsb
or
xor
inc
pop
pop
cmc
mov
test
lcall
roll
daa
sub
mov
mov
sarb
dec
or
stc
mov
gs
mov
aaa
icebp
push
adc
cmp
pop
mov
std
push
mov
adc
iret
or
jb
xchg
jo
in
repz
pop
add
es
add
pop
fdivrs
or
lock
das
push
pushf
inc
fsubrl
mov
movb
push
add
add
aaa
fcompl
lea
or
loopne
scas
stc
leave
aam
movsb
insb
xlat
sbb
subl
mov
mov
push
stos
ss
adc
popf
inc
adc
loop
mov
sbb
stos
js
leave
xchg
movb
mov
arpl
pusha
mov
lret
outsb
rcll
clc
cmp
lahf
mov
sti
cltd
or
imul
xchg
add
mov
and
lret
add
lcall
loop
sbb
mov
into
out
add
bnd
push
jbe
ja
or
push
cmp
add
movsb
xor
shrl
or
jnp
mov
mov
or
adc
fnstcw
das
pop
pop
pop
push
sub
mov
mov
or
cmpb
add
add
adc
xchg
ret
push
sarb
and
mov
and
xorb
imul
jne
pushf
cltd
notl
fsubs
xchg
push
cmp
lods
lock
adc
jne
adcl
mov
xor
jecxz
cmpb
cmp
sub
inc
and
ror
hlt
stos
cmp
subb
fbld
sub
out
out
add
lds
adc
fcmovu
cmp
out
lret
outsb
movsl
lret
sbb
into
push
imul
sahf
jno
aad
push
iret
mov
aas
js
mov
je
add
dec
ljmp
lcall
mov
mov
cmp
pop
in
repnz
mov
sbb
jns
out
scas
test
push
cmp
lret
mov
jnp
inc
jno
addr16
fimull
jecxz
outsb
pusha
dec
call
ja
lret
inc
pop
sbb
mov
hlt
dec
push
add
fildl
cmp
mov
sub
fcmovnu
mov
mov
sub
pop
rcrl
sub
call
repnz
xchg
push
jne
xchg
outsb
shlb
sbb
inc
cmp
fdivs
pusha
clc
dec
nop
daa
sbbb
jno
add
adc
rcrl
add
fisttpll
xchg
push
lret
orb
out
inc
add
mov
adc
cmpsb
jp
lods
mov
dec
int
pop
inc
std
ret
xchg
pop
pushf
dec
jge
inc
push
push
fcoms
mov
pop
orl
lret
dec
mov
inc
imul
xor
xor
push
mov
inc
mov
jne
pusha
rorl
sbb
dec
jl
in
loope
dec
nop
lret
xchg
ljmp
or
adc
lds
aam
jp
push
cli
aam
or
ret
enter
and
mov
je
add
push
jne
insb
xlat
sarb
cmp
cld
rol
jp
test
lds
mov
sbb
scas
push
mov
out
adc
jno
push
add
ret
pop
into
mov
and
sti
mov
mov
rcr
mov
loope
es
and
xchg
movsl
fstps
dec
cmpsl
sub
xchg
cmpsl
bound
cmpsl
push
and
lcall
dec
movsb
xor
cltd
cli
outsl
hlt
adc
cmp
aad
jl
or
sbb
loope
aas
and
dec
inc
cld
pop
or
mov
push
stos
or
popf
aam
mov
sbb
fs
mov
enter
pop
cltd
lock
mov
mov
pop
jo
imul
aad
inc
daa
insb
push
stos
iret
dec
xchg
push
add
and
insl
adc
xor
gs
icebp
lock
xor
cmpsl
pop
pop
dec
jmp
fscale
mov
xor
xchg
movsb
in
xor
mov
cmp
test
push
pop
out
mov
sbb
jae
int
adc
int
mov
notb
pushf
push
fldcw
out
in
sub
mov
push
test
cmpsl
sbb
pop
lcall
adc
or
nop
adc
and
jb
popf
movsl
and
out
jns
pop
mov
pusha
outsb
or
mov
cmp
add
xchg
pop
das
sbb
cmc
out
inc
xor
dec
daa
cmp
mov
jbe
aad
sbb
jmp
xchg
mov
pusha
sub
inc
mov
sahf
iret
inc
stos
lcall
xor
ret
lock
adc
test
fistpll
mov
jb
rclb
jo
popa
dec
xor
addr16
mov
ds
testl
jge
in
mov
mov
add
outsb
mov
in
xchg
iret
add
outsb
sub
mov
push
leave
mov
test
xchg
scas
fistl
outsl
pop
out
cmp
mov
push
jmp
rol
dec
in
xorb
stos
neg
lds
pushf
jno
or
push
push
xor
scas
mov
ds
mov
or
xchg
cmp
pop
into
ficompl
and
mov
jo
arpl
mov
mov
mov
and
jge
dec
int3
inc
mov
jl
inc
fidivs
test
sarb
cmc
subb
hlt
inc
push
push
mov
test
fnstsw
mov
hlt
hlt
mov
mov
or
xor
les
sahf
iret
pop
xchg
jmp
mov
in
loopne
xlat
dec
mov
fwait
int
lea
loope
push
cmp
push
sub
insb
cmpsb
mov
push
sbb
jge
xchg
test
hlt
adc
cmp
bound
les
dec
xchg
inc
fs
aam
call
mov
div
aaa
movsl
out
iret
pop
pop
and
push
pop
insl
add
test
rcll
fstpl
int3
mov
js
pop
dec
std
push
scas
fs
cmpsb
sub
mov
push
sub
mov
leave
fst
sub
loopne
int3
inc
xor
xchg
out
lret
sbb
aad
jl
adc
mov
sub
lcall
dec
sub
cs
movsb
xchg
jns
call
adc
insl
fcomps
xchg
and
dec
jno
les
shlb
in
adc
daa
cmp
roll
sbb
fs
mov
sub
addr16
pop
roll
into
jg
mov
mov
daa
sahf
jbe
xor
dec
xchg
repz
insl
pop
lahf
push
mov
mov
pusha
push
negb
mov
das
iret
or
in
insl
add
mov
fdivrl
lret
jecxz
mov
xchg
loopne
cmc
push
add
mov
push
mov
fadd
test
or
add
imul
in
ret
xor
xchg
pop
sbb
rcrb
sub
nop
std
sarl
push
add
mov
lret
ds
mov
push
pushf
jns
aas
jne
aad
pushf
mov
outsb
outsb
jecxz
sub
sub
stos
push
add
or
sahf
jge
ret
mov
dec
sub
loope
xchg
fucomi
imul
loope
ljmp
sub
stos
scas
mov
std
movsb
inc
xchg
xchg
and
dec
lahf
mov
addr16
sbb
add
fwait
hlt
jle
and
nop
repnz
sti
sbb
std
pop
stos
inc
mov
pop
mov
enter
mov
mov
and
shr
sub
jecxz
adc
nop
push
add
inc
or
push
push
mov
jl
cmp
movsl
sbb
int3
or
push
pop
cmpsb
sbb
sbb
sbb
imul
jmp
dec
imul
pop
sub
inc
push
outsb
popa
ret
fisubs
jecxz
das
mov
imul
add
clts
inc
bound
sbb
mov
pop
out
dec
icebp
inc
sub
pop
jno
and
popa
loopne
push
daa
mov
jecxz
mov
hlt
jbe
in
jnp
in
cmp
les
ja
lahf
je
stc
pushf
or
sbb
cs
dec
cli
cltd
ficoml
jmp
loop
cld
xchg
mov
pop
inc
push
shrb
test
push
movq
pop
popf
cmpsb
ss
mov
lret
mov
jne
mov
rcrl
xchg
sub
in
stos
mov
enter
fbstp
int
xor
out
jmp
push
mov
cmpsl
std
and
test
pusha
stc
add
pop
sbb
add
jbe
xchg
enter
inc
outsl
mov
jle
loopne
and
andl
movsl
decb
ret
inc
insb
pop
imul
ret
stc
cmpsl
lods
xchg
jmp
mov
repz
cmp
mov
mov
jmp
jg
out
push
pop
xchg
push
xchg
into
sub
rcll
ret
jl
inc
adc
or
lds
divb
add
pop
sarl
lods
sbb
sub
xchg
rol
ja
ljmp
rcrb
mov
jnp
in
mov
rcll
aad
xchg
sub
push
add
pop
pop
repz
jl
sub
gs
mov
lea
data16
dec
xor
xchg
and
inc
or
dec
pop
lahf
outsb
cwtl
xor
daa
sbbl
inc
push
shrb
adc
mov
xor
jecxz
pop
jne
fmulp
jo
or
sub
lds
add
pusha
mov
push
cmpsl
mov
loope,pt
jg
ficompl
and
cli
subb
mov
push
jb
lret
fs
or
incl
clc
inc
mov
xchg
cwtl
outsl
xchg
andb
imul
js
mov
adc
pusha
lods
movsb
xchg
cltd
jp
jecxz
pop
xor
sarl
dec
and
fcmovnbe
js
scas
lret
xor
push
into
imul
cli
cli
xorl
push
dec
fldl
dec
cltd
xor
enter
cs
pusha
jecxz
xchg
je
pop
ljmp
xchg
setne
pop
push
test
pop
dec
mov
rcrb
hlt
mov
xchg
sub
jae
add
daa
ds
les
repnz
icebp
push
scas
jg
dec
enter
das
adc
mov
push
incb
cmp
loopne
aas
sub
enter
dec
outsl
sbb
jno
out
shrl
repz
stos
and
scas
dec
push
mov
scas
inc
ret
leave
mov
stos
cmpsb
and
icebp
add
es
jg
aas
stos
icebp
sub
andb
push
jne
jae
mov
add
ja
out
sbb
pop
sub
mov
sbbl
movsb
sub
xchg
mov
mov
pop
mov
adc
adc
lret
xchg
shlb
test
pop
jbe
pop
sub
movsl
dec
cmpsl
sarl
mov
mov
daa
jbe
sub
add
stc
add
mov
pop
std
scas
iret
call
xchg
mov
imul
adcb
mov
mov
jp
add
or
cmp
fistps
inc
inc
dec
enter
pop
xor
adc
incl
cmp
std
push
mov
dec
xor
push
rcl
sub
les
test
jno
xor
mov
pop
dec
loop
push
mov
pop
cmc
adc
sahf
dec
lcall
lcall
pusha
ljmp
fst
xor
test
cmpsb
nop
add
or
les
ds
pusha
into
inc
cmp
jmp
inc
lcall
decl
dec
pop
cmp
xchg
add
xchg
dec
pop
fnsave
dec
sbb
inc
mov
push
scas
test
cld
add
mov
add
jmp
cli
ficomps
insl
int
outsl
insb
aam
xchg
outsb
lcall
sub
and
or
in
es
inc
stos
orb
and
and
and
nop
lods
sbb
mov
cs
call
sti
into
jns
adcb
ret
loope
sarl
cli
mov
xchg
sti
add
outsl
and
negl
ret
or
popf
mov
mov
cmp
jg
sar
mov
and
jne
push
fmulp
push
push
mov
ret
ja
sbb
sbb
clc
jo
cmpxchg
outsl
les
mov
mov
movsl
adc
xor
dec
imul
cmp
outsb
sub
stos
xor
mov
aas
mov
adcl
test
add
std
mov
dec
or
daa
mov
push
mov
stos
xchg
push
or
stos
cmp
fcompl
inc
into
sub
dec
cmp
dec
pushf
lods
add
movsb
into
int3
push
inc
inc
lods
rcl
jge
clc
xchg
shrl
jmp
daa
rorb
fmul
xadd
insl
inc
data16
jbe
hlt
or
push
fisubrl
ret
sti
lcall
insl
shlb
jmp
fidivrs
jp
sbb
roll
push
fnsave
sbb
push
xor
xor
xor
mov
xor
sub
mov
xchg
fs
cmp
ret
std
gs
leave
pop
stc
popf
adc
lahf
sbb
and
sti
cwtl
adc
ljmp
xchg
aam
mov
pushf
hlt
xchg
pop
pusha
push
mov
popf
sahf
fnstenv
scas
aam
sub
xchg
or
xor
hlt
push
mov
mov
pop
xchg
fwait
sub
jo
dec
xor
mov
enter
xor
xor
rcr
pop
ret
in
add
das
roll
pop
cwtl
add
mov
fisttpll
pop
pusha
out
adc
pusha
push
imul
adcb
sub
pop
lock
push
cmpsl
add
or
dec
xchg
outsl
in
scas
lods
mov
jmp
push
in
cmp
cmp
cltd
adc
das
sbb
inc
add
nop
in
jb
mov
xor
es
data16
adc
or
push
or
into
mov
aaa
test
test
in
mov
adc
push
pop
out
and
push
ljmp
mov
add
js
rolb
add
xchg
arpl
and
leave
aas
mov
mov
add
jo
sarb
aas
shlb
ja
xchg
xchg
shlb
sarb
push
fildl
inc
ds
fldt
xchg
mov
mov
sbb
xchg
int
outsb
jnp
pop
adc
add
inc
cmp
sbb
es
push
nop
popf
mov
shlb
repz
cli
push
jl
test
dec
push
and
repnz
sbb
test
faddl
mov
mov
push
mov
out
mov
call
jg
xor
cmc
das
popa
inc
jns
xlat
test
xchg
push
out
cmpsb
pushf
inc
sub
xor
mov
inc
arpl
jmp
mov
movsb
lahf
xor
xchg
loopne
inc
mov
es
imul
dec
fdivp
test
cmpsb
sarl
adc
xchg
add
sbb
popf
push
and
jle
in
xchg
pop
std
dec
or
adc
cmc
das
inc
adc
ret
sub
cli
outsb
aad
pop
jp
fistpl
ja
nop
in
addr16
xor
and
mov
stc
cld
stc
movsl
xor
mov
cmp
lods
cltd
cmp
inc
fistpl
test
push
xlat
mov
jns
cmpsl
mov
mov
shr
lea
jae
mov
popa
addb
sub
sbb
xor
int3
into
adcb
sarb
les
push
fcmove
xchg
push
daa
pop
xchg
adc
sahf
pusha
and
and
or
mov
jno
push
xchg
xchg
addb
pop
xchg
fldl
pop
jbe
iret
dec
xchg
mov
mov
ja
mov
push
jmp
mov
fmuls
cli
lea
ficomps
fisttpll
and
subl
pop
push
das
andl
sbbl
dec
sbb
outsl
fcmovne
imul
cwtl
pop
xchg
outsb
aam
or
adc
in
push
cmp
xor
popa
ficoml
andb
out
adc
lock
cmp
lock
cmp
add
out
daa
push
mov
imul
scas
push
js
lock
cmp
sti
cmp
test
loop
cmc
sbb
add
cmpsl
pop
dec
mov
loope
mov
test
flds
or
ret
bound
dec
and
pop
mov
jmp
mov
into
cld
lahf
mov
gs
pop
inc
sti
sarb
sub
dec
out
popa
sub
mov
add
lds
jae
mov
pusha
pop
sahf
mov
iret
push
ja
movsl
cmp
das
les
lahf
cltd
dec
xor
jbe
xchg
cmpsl
rcrl
repz
rol
imul
jae
inc
cmp
fcmovu
test
mov
out
xor
push
cmp
add
sub
add
mov
fidivrs
push
sub
sti
push
testb
icebp
jg
repnz
or
xchg
xchg
lock
bound
adc
mov
int
aam
aas
jg
cmc
aad
mov
dec
out
test
mov
in
mov
cmp
daa
scas
push
lods
sbb
push
dec
jge,pn
mov
int
inc
dec
sub
in
jae
movsl
test
into
adc
shlb
mov
fadds
xchg
mov
push
je
data16
fsubrs
ret
jb
mov
fs
in
jmp
repz
add
stos
in
lods
jge
jle
in
jns
mov
push
out
dec
lret
fiaddl
or
outsb
push
ret
inc
and
or
xor
lds
or
push
ja
jns
rcr
insb
dec
rcll
pop
jmp
sar
ljmp
out
and
and
inc
in
cld
or
les
std
cmc
hlt
sub
adc
cmp
rcrl
ja
aaa
push
cmp
iret
rcll
cmp
sbb
sbb
lahf
cwtl
lret
loopne
out
ds
xor
push
imul
aad
sub
lcall
and
ret
outsb
add
adc
decl
sub
nop
ret
gs
out
and
insl
movsb
lds
pusha
push
add
test
cmpsb
test
mov
jp
pop
arpl
mov
pop
sahf
sub
lcall
or
mov
fmuls
jmp
push
sbb
call
mov
popf
out
mov
jno
dec
inc
mov
fimuls
in
scas
mov
pop
add
fwait
jne
xchg
ja
dec
mov
mov
movsb
inc
pushl
int
mov
xchg
jmp
sub
aad
or
cmp
or
xor
and
aaa
mov
cmp
push
out
into
loopne
xchg
outsl
jbe
das
ret
roll
cmp
add
cmp
out
xorl
adc
or
and
shlb
data16
out
imul
aam
into
lods
push
dec
inc
push
std
popf
test
jb
scas
and
jae
xor
int
inc
jle
xchg
loopne
mov
ja
imul
or
testb
inc
loop
pop
rcr
push
inc
repz
mov
loopne
and
cltd
leave
mov
lds
fwait
or
cli
inc
cld
xchg
test
loopne
movsl
cmpsl
pop
sub
or
pop
cmp
pop
pop
inc
mov
sarl
pop
sub
push
inc
dec
push
jne
mov
add
insb
aas
inc
mov
pop
sub
ret
sbb
xor
ret
sti
testb
idivb
or
inc
imul
aas
in
jl
leave
movsl
sbb
mov
testl
push
cs
icebp
or
or
sub
call
and
test
out
add
stos
lds
jecxz
push
xchg
mov
mov
aam
outsb
dec
imul
repz
xchg
fcomp
xor
rclb
jbe
push
imul
jmp
shrb
jp
inc
push
inc
and
inc
rclb
fs
and
xchg
ljmp
mov
je
cmp
mov
call
push
inc
jmp
xor
icebp
in
sti
test
pop
insb
xchg
loope
xlat
adc
inc
enter
test
fstps
pop
mov
mov
addr16
and
lcall
popa
cmpsb
adc
outsl
cmp
test
fidivrs
stos
imull
push
fsts
add
pop
or
mov
mov
test
sub
xchg
ljmp
repz
jl
mov
xchg
lcall
scas
les
hlt
scas
xchg
fnstcw
pop
scas
int3
clc
dec
mov
xor
dec
test
inc
pop
fs
stos
arpl
lods
out
jmp
cmp
and
ljmp
arpl
jge
push
and
sbb
std
fisubrl
or
shrb
imul
fiaddl
out
out
sub
xchg
test
mov
xchg
jnp
popf
push
int
dec
mov
gs
fnsave
sub
fidivl
sub
mov
xlat
out
leave
pop
add
jae
out
js
jo
aas
mov
jg
out
pushf
mov
jno
stc
imul
leave
and
testb
aas
rcrl
loopne
add
in
mov
adc
stos
lods
add
ret
int3
jmp
inc
mov
or
add
sub
xchg
iret
aam
pop
jecxz
testl
cmp
scas
ret
mov
jge
jns
ds
loop
cmp
aaa
sbb
xor
cltd
jno
xorb
gs
push
cld
fbld
mov
fdivs
iret
adc
and
pop
into
dec
jo
xchg
mov
lcall
out
lds
adc
mov
fadd
push
lret
sbb
lods
and
and
inc
arpl
sbb
push
enter
dec
mov
add
loopne
mov
xchg
xchg
and
shrl
pop
in
sbb
push
adc
testb
jl
mov
nop
inc
dec
mov
or
je
adc
xchg
add
or
xor
je
pop
mov
test
lds
mov
mov
sbb
xor
icebp
imul
inc
sbb
ret
popa
in
out
repnz
dec
adc
roll
imul
push
push
sub
cltd
sub
fdivp
jnp
in
cld
jmp
fs
or
int
ss
andb
sub
jg
popa
sbb
xchg
inc
hlt
sub
test
repz
jge
mov
mov
call
adc
sbb
test
mov
jne
sbb
mov
hlt
mov
dec
out
movsl
jecxz
cmp
ljmp
xor
xchg
scas
stos
jbe
sbb
jbe
add
xchg
pop
nop
fs
sbb
sub
mov
mov
jp
mov
sub
fs
out
or
dec
les
mov
fidivrl
aam
pop
mov
fildll
pushf
push
mov
scas
sbb
mov
cmp
sub
out
fldenv
test
addr16
sbb
pop
idivb
les
push
mulb
pop
jp
mov
lea
xchg
inc
aas
enter
adc
les
in
clc
cld
pushf
xor
sbb
push
cmp
inc
outsb
jns
inc
or
jp
aam
ret
dec
dec
cmc
sub
jle
push
adc
sub
mov
dec
pop
adc
cmpsl
popa
and
push
mov
inc
push
and
sub
ror
mov
cmp
into
divb
cli
or
dec
pop
outsl
jno
jns
cmpb
inc
movsb
xor
fdivrs
cmp
cmpsl
stc
mov
adcl
jno
lret
jae
insb
fsubrs
adc
sbb
pop
into
xchg
dec
dec
sbb
inc
pop
dec
push
sub
mov
mov
shlb
and
cmp
scas
rcl
push
mov
cmp
adc
jbe
gs
adc
push
out
cld
imul
mov
jno
sub
and
gs
aas
in
jle
jbe
mov
sbb
xchg
pop
ret
insl
repnz
dec
mov
xor
sub
out
add
dec
xchg
mov
insb
add
cwtl
jne
adc
push
insb
or
xchg
out
xor
scas
and
test
lcall
cmp
scas
mov
mov
mov
shr
inc
stc
shr
xchg
mov
push
jl
push
inc
push
addb
or
dec
in
or
adcl
xor
sbb
movsl
pop
popa
lret
enter
xchg
ja
inc
ss
push
push
pop
sti
cmp
push
push
add
cs
fadds
inc
mov
jecxz
js
ss
jo
sub
and
lret
aad
clc
notl
out
xchg
and
xchg
movsl
mov
dec
cmpsb
push
add
testb
xchg
addr16
dec
pop
add
ss
push
sbb
cmpsb
pop
dec
aaa
adc
xchg
pop
imul
cmp
imul
mov
cltd
fistps
lods
mov
movsl
mov
mov
scas
cmp
addr16
push
rcll
jb
les
sbb
imul
aas
mov
in
orl
dec
arpl
xchg
inc
sbb
insb
push
call
adc
scas
subl
in
pop
dec
add
cli
fnsave
jb
mov
or
cld
test
into
aaa
cmpsb
adc
lea
push
dec
ret
cmc
pop
lods
lods
inc
fcmovne
lock
sarl
inc
mov
inc
fcoml
in
jbe
mov
or
movsl
pop
push
cmpsb
ljmp
xor
lock
mov
mov
adc
xlat
fisttps
enter
insl
fmull
dec
shlb
jo
add
add
inc
loopne
cmpsl
lahf
outsl
daa
dec
pop
cmp
clc
insb
hlt
xor
and
jne
faddl
faddl
adc
add
xchg
jb
sbbl
in
push
imul
mov
int
mov
jecxz
inc
bnd
pop
out
pop
add
adc
pop
cmp
call
scas
lret
ds
push
test
xchg
lods
enter
sbb
cmp
mov
hlt
mov
ret
cmpsl
pop
jnp
shl
cltd
jno
scas
xchg
lahf
inc
fists
inc
xchg
shrl
out
xor
insl
rol
adc
dec
xor
int
out
jecxz
cmp
arpl
and
int3
cmp
mov
xor
dec
xchg
fucom
xchg
addr16
pop
cmc
movsl
cltd
fisubs
movlps
in
adcb
repz
pushf
fistpll
mov
sarb
or
mov
inc
movsl
lar
dec
inc
rclb
popa
cmp
add
out
sahf
jecxz
aam
pop
cltd
testl
dec
fdivrs
outsb
ja
push
push
dec
dec
lcall
mov
loope
push
fcmovnb
pop
dec
gs
lcall
lods
and
outsb
into
outsl
pop
shrl
inc
loope
in
push
fwait
pop
les
sub
sub
cmp
mov
aas
ret
divl
inc
jl
jg
lds
loop
cmc
bound
sbb
pusha
cltd
mov
lods
and
sub
jmp
imul
xchg
xor
pop
popa
ss
rolb
xlat
and
xchg
cmp
into
sbb
xchg
jne
xchg
pop
mov
nop
xor
push
pushf
rorl
mov
push
xor
adc
mov
lahf
fs
jg
add
lcall
stc
xor
mov
xchg
mov
jne
fisubl
cmp
loopne
xchg
mov
and
push
in
add
sub
or
adc
inc
cmp
add
pop
pushf
xor
jae
and
xor
mov
inc
add
test
mov
cmpsl
jecxz
sbb
xchg
xchg
popf
dec
in
lcall
push
frstor
ja
mov
movsl
call
sbb
ror
mov
mov
and
pop
xor
mov
dec
notb
lods
cmp
xor
int
and
scas
lcall
mov
sbb
mov
cmp
inc
mov
push
add
lahf
dec
sbb
mov
or
sbb
and
dec
and
inc
add
pslld
and
pop
dec
shlb
inc
fs
inc
push
les
scas
into
sti
out
jmp
inc
fcoml
xor
inc
push
daa
mov
jmp
gs
enter
dec
mov
inc
pop
out
lds
movl
inc
add
xor
daa
test
jo
pop
fdiv
xchg
enter
inc
adc
pop
push
or
mov
jmp
rorb
popf
cmc
pop
test
loope
cmp
lcall
push
addr16
stc
shll
scas
test
stos
mov
cltd
sarb
repz
mov
mov
ret
mov
cmc
mov
inc
aam
push
out
jae
or
jmp
sti
jns
lock
jbe
cltd
dec
stos
out
add
pop
push
dec
je
nop
ljmp
fdivl
push
xchg
std
cmpb
adc
push
xchg
shl
sarl
pop
fistps
mov
dec
inc
push
xor
dec
cld
call
rcrl
xlat
add
mov
mov
adc
xchg
iret
test
rorl
sub
fcoml
clc
insl
bound
data16
jp
pop
cmpsb
data16
and
out
pop
loopne
sub
stos
pop
jo
mov
xchg
fcmovnu
cwtl
in
inc
popa
js
sub
and
xor
movnti
fwait
loopne
cmpb
xchg
mov
jmp
mov
dec
sub
dec
xchg
insl
imul
hlt
in
jge
inc
mov
cwtl
mov
repz
sub
pusha
mov
or
xor
mov
mov
sbb
test
not
aad
mov
push
iret
and
fdivp
cmp
bnd
lock
cmp
mov
out
jno
movsl
lods
int
ret
lea
or
sbb
bound
nop
cmpl
aaa
cmpl
jne
mov
add
pushf
mov
stos
or
and
stos
fldenv
gs
adc
mov
clc
pushf
push
sti
aam
mov
mov
cmpsl
ss
sub
xchg
jp
or
aas
test
mov
inc
pop
xchg
add
cmpsb
int
mov
push
pop
jmp
add
mov
in
outsb
into
jno
mov
dec
pop
inc
fmulp
pop
xor
ror
jb
mov
adc
mov
mov
add
data16
dec
mov
push
cli
bnd
into
jmp
stc
xor
movsl
add
lock
pop
repz
or
mov
psubd
mov
xlat
sub
xor
dec
pop
xchg
cmpsb
adc
cmpsb
dec
daa
pop
xchg
test
in
or
xor
jno
mov
push
scas
repnz
ss
jbe
mov
dec
loop
cli
stos
dec
iret
jmp
ret
jo
and
decl
adc
pop
jb
jb
dec
adc
or
in
and
inc
cltd
xor
jns
mov
cltd
push
imul
test
xchg
add
xchg
mov
pop
sub
std
adc
push
mov
xchg
ret
cwtl
inc
addr16
mov
in
cmpsl
lcall
xchg
lret
jne
ja
cli
movsl
lcall
das
sbb
adc
dec
stos
sub
in
enter
mov
add
in
out
cltd
push
ret
mov
aad
cmpb
jns
popf
mov
pop
movsl
icebp
outsl
add
sbb
inc
dec
dec
fwait
xlat
mov
out
pop
sbb
dec
lods
pop
or
out
sahf
cmp
mul
lret
or
sub
stos
xchg
inc
loopne
pop
dec
fs
add
sub
mov
sub
enter
inc
mov
and
rcr
shll
push
sub
mov
movl
hlt
fldl2t
int
andb
enter
inc
lcall
loop
pop
mov
inc
xchg
loopne
aam
mov
jmp
mov
push
pushf
fildl
loop
shlb
sti
xor
adc
mov
dec
push
andb
inc
jne
in
test
jae
xchg
inc
stc
insb
add
jno
pop
rcll
mov
fidivl
jnp
xchg
pop
gs
push
jb
int
dec
imul
jg
push
testl
dec
mov
xchg
scas
inc
jg
pushf
shrb
hlt
dec
mov
mov
mov
aam
mov
aaa
or
in
lods
lret
dec
clc
cld
cmp
and
mov
mov
inc
jno
fwait
lret
cmpsl
xor
movsb
or
sbb
cmc
aaa
repz
inc
adc
das
inc
sahf
or
mov
add
push
jne
outsl
add
hlt
push
rclb
mov
testl
or
xchg
ja
scas
out
loope
jl
mov
xchg
addl
or
dec
and
stos
cwtl
cmc
pop
dec
das
repz
dec
add
add
imul
fsubr
shrb
fstl
dec
inc
enter
push
xor
bound
filds
sbb
mov
mov
int
mov
pop
jge
mov
jmp
adc
sbb
xchg
mov
push
test
push
sbb
sub
xchg
push
rcrb
repnz
das
and
bound
call
fldcw
push
dec
int3
call
pop
jno
adc
bound
sbb
dec
jnp
sarl
or
push
inc
subl
dec
push
cmpsb
dec
cli
cld
aas
test
adc
mov
or
or
pop
mov
jnp
clc
or
cmpsl
stos
and
ror
inc
mov
mov
sub
clc
adc
dec
and
fcmove
pop
or
cmp
int3
jae
sub
adc
inc
xor
aas
stos
push
mov
add
cvttps2pi
je
dec
adcb
pusha
hlt
xlat
lcall
cmpsb
outsl
and
lret
in
sbb
mov
decb
inc
sbb
loope
bound
fistpl
test
push
add
paddsw
and
jp
or
xchg
xchg
push
adc
add
jnp
xor
aad
sbb
inc
inc
icebp
adc
inc
jo
mov
ss
or
xor
aam
jno
psubsb
dec
fisttps
mov
jecxz
jle
xor
xchg
lock
fisttps
pop
cmp
sbb
jp
loopne
sbb
pop
mov
lret
lahf
sub
xorl
add
fnstenv
nop
push
mov
mov
and
inc
push
sbb
push
mov
or
ss
and
cmp
dec
mov
and
loopne
rolb
xor
shrb
xor
loop
pop
and
pop
fsubs
daa
inc
xchg
jmp
dec
mov
hlt
mov
mov
push
sbb
cltd
inc
es
fxch
das
gs
mov
add
sti
jg
xchg
in
out
jp
mov
lret
int3
das
aam
sub
fistl
repnz
mov
sub
sub
sbb
mov
jp
pop
sbb
punpcklwd
lock
ss
subb
mov
dec
jg
rcrb
movsb
jno
adc
ja
push
fwait
mov
cmp
icebp
ja
enter
mov
ffree
xor
sbb
cmpsl
test
cwtl
mov
xorl
stos
mov
and
lock
es
pop
outsb
test
adc
ret
push
ret
inc
test
ret
xchg
paddd
dec
out
inc
repnz
adc
loope
loopne
lahf
add
or
sub
adc
jecxz
jg
xlat
fsubrl
xor
scas
dec
cwtl
mov
dec
mov
and
test
fisubrs
adc
icebp
mov
jbe
nop
cwtl
leave
ljmp
int3
jnp
imul
sbb
ljmp
or
and
cmp
pop
lock
xchg
out
outsl
sub
rorl
push
rcll
push
inc
cmp
xchg
cmp
shr
mov
lcall
in
cltd
cld
adc
inc
nop
nop
adc
int3
andb
lea
pop
or
frstor
aad
push
arpl
sbb
loopne
das
lahf
pop
rcrb
leave
pop
and
gs
fld
mov
aad
in
loop
jl
lret
or
pop
and
jne
movsb
ja
mov
dec
push
repz
sbb
inc
pop
inc
std
in
ljmp
pop
rcrb
xchg
ficoms
lahf
mov
in
sub
jnp,pn
xchg
adc
add
dec
sbb
mov
jmp
pop
sbb
dec
push
push
popf
mov
dec
jp
pop
inc
ret
mov
dec
push
ds
idivl
lret
xorl
push
int3
sub
in
imul
mov
nop
adc
in
pusha
mov
mov
popf
mov
mov
ret
jne
jbe
movsl
add
rcrb
out
lea
lret
fwait
lock
mov
fimuls
das
arpl
imul
ja
adc
das
xchg
sub
stos
pop
sbb
push
hlt
pop
out
add
scas
pop
lods
inc
push
add
bound
bound
out
xor
pop
jns
mull
mov
shll
adc
js
sub
add
push
cwtl
out
je
mov
xor
repz
dec
cmp
das
xorl
stos
inc
mov
lds
adc
push
pop
mov
jb
ror
repnz
xor
out
in
das
jae
arpl
fwait
adc
or
or
sarl
sbb
jbe
cmpsl
pop
pop
daa
cmp
mov
jno
add
or
inc
and
scas
out
ret
or
insl
je
adc
sbb
int
mov
repz
or
xor
xchg
jbe
bound
xchg
pop
pushf
idivl
add
inc
aad
pusha
mov
xchg
dec
or
or
add
lea
push
imul
or
xchg
insb
push
cmp
pop
dec
cmp
mov
dec
cmp
jmp
sub
dec
stc
repz
mov
mov
xchg
push
xchg
or
ljmp
lods
push
dec
push
jae
add
lret
or
jle
mov
fmull
mov
jle
cmpsb
mov
or
adc
cld
and
or
cmp
popf
lods
pop
shl
cwtl
insb
clc
inc
mov
push
fldenv
mov
jmp
fnstenv
pop
or
nop
addb
push
mov
sar
scas
sbb
or
nop
jno
ficoms
mov
adc
xchg
jne
rol
je
mov
xchg
sarl
lock
jne
mov
insb
decb
or
jb
sub
sti
push
mov
jno
jae
in
push
sti
jg
pop
sbb
cmp
add
xor
call
lret
inc
mov
iret
test
inc
std
sbb
sub
mov
xor
xlat
mov
subb
xor
sub
div
rcrl
lods
movsl
dec
jp
pusha
push
fisubrl
xor
push
jg
ja
es
movsl
sti
int
inc
fmull
jle
xchg
jl
imul
push
mov
and
int
in
mov
cmpsl
add
sub
mov
xchg
in
divb
aaa
sahf
adc
lea
adc
inc
in
dec
into
mov
cltd
in
pop
outsb
inc
lds
call
inc
add
ja
bound
sub
pop
sahf
dec
or
pop
jo
mov
push
adc
or
pop
mov
add
int3
cmp
sub
and
sub
jnp
jl
inc
divb
cmp
test
clc
cld
loopne
inc
sarl
push
out
mov
inc
mov
xchg
and
ds
xchg
popa
std
pop
or
and
cld
fstl
jmp
out
rclb
jnp
je
clc
mov
mov
repnz
out
cli
cmc
or
push
sbb
scas
stos
adc
jl
jl
lock
stos
sbb
add
sub
int
add
imul
sbb
sahf
pop
popa
sub
or
je
push
add
xchg
sub
test
jns
sub
or
lds
add
out
jbe
adc
push
dec
pop
fcomp
mov
data16
jge
shl
sbb
cld
mov
js
shll
or
push
test
xchg
mov
ljmp
mov
jg
or
out
imul
mov
push
sbbl
inc
jno
inc
and
pusha
inc
popa
test
int
mov
fdivrl
sub
jle
inc
popf
and
frstor
cmp
cmp
mov
in
fxam
mov
lret
fisubs
push
mov
js
fsubr
or
mov
jle
mov
cltd
mov
ja
enter
call
popa
cmpsb
ss
idiv
mov
dec
xlat
mov
movsl
pop
push
push
cmp
adc
test
jge
sub
decl
popa
mov
add
cmp
aam
arpl
xchg
lret
mov
jmp
leave
xor
lds
imul
inc
imull
nop
mov
nop
js
lea
jge
loop
nop
nop
pushf
mov
jbe
inc
mov
cmp
ja
cmpsb
jnp
inc
adc
inc
stos
fisubs
jne
out
or
cs
aas
xchg
jle
dec
repnz
push
push
andl
pop
outsl
cmovo
enter
popa
imul
cmp
data16
adc
and
addb
xchg
negb
cld
das
lret
repz
fcmovnb
stc
inc
loope
pop
pop
jne
pop
inc
cwtl
test
leave
loope
jbe
add
pop
fbld
cltd
fldcw
xor
ja
jb
fisubl
pushf
lock
push
aas
out
insl
call
ffreep
sarb
adc
ljmp
sub
rcrl
in
mull
sbb
jbe
sub
lcall
int
sbb
push
aas
mov
test
sbb
int
xor
mov
rol
sub
ja
test
sbbl
dec
jle
sbb
shrl
cli
adc
mov
repz
pop
jge
daa
or
pop
push
sarb
inc
lods
mov
mov
xchg
iret
xchg
inc
inc
aas
mov
add
push
mov
and
add
bound
es
jne
and
xchg
lret
popf
and
mov
lahf
popf
adc
jno
jge
test
pop
xor
lock
jne
push
dec
mov
aas
mov
ljmp
mov
cmp
push
or
xor
lods
and
cmp
cmp
jns
xor
test
dec
push
sub
out
or
jmp
insb
fists
mov
mov
in
inc
inc
les
lock
cmp
mov
ja
mov
fwait
mov
jmp
mov
jge
scas
mov
mov
ret
adc
push
xor
ror
popf
pop
bound
jge
insl
enter
inc
mov
cld
mov
jbe
fcompl
fwait
mov
stos
and
mov
add
dec
push
frstor
pop
fcomps
xchg
fmulp
pop
sbbb
rol
sub
shlb
out
mov
xor
xchg
out
nop
lahf
fdivr
fwait
sbb
inc
repz
mov
mov
cmc
rolb
inc
mov
add
into
inc
cmp
sub
push
sbb
fmuls
sbb
or
movsb
scas
sbb
test
shl
das
xor
imul
inc
scas
clc
mov
rcrb
mov
arpl
jecxz
push
or
jmp
in
in
repnz
xor
testb
iret
mov
in
xor
repnz
add
icebp
dec
inc
cmp
mov
pop
add
insl
pop
and
inc
jns
add
mov
push
loope
mov
nop
dec
inc
xchg
push
and
imul
shl
sbb
repnz
mov
scas
lahf
and
fstps
cs
push
cmpl
out
sub
push
outsb
rcll
xchg
mov
push
cmc
pop
cld
and
mov
cs
pusha
xor
inc
jns
lret
add
jnp
ja
inc
xchg
sub
add
jae
cmpl
mov
sbb
fbstp
lret
test
cmc
push
int
cmpsl
jae
inc
sbb
cmp
icebp
lods
inc
ljmp
int3
mov
push
and
rcr
inc
xor
sbbl
cmpsw
flds
rcll
sub
sub
fstps
push
mov
das
leave
xor
popa
out
repz
fistpll
xor
or
push
shlb
mov
mov
addr16
mov
xchg
enter
sub
pop
inc
ljmp
sub
cmp
pop
in
daa
lcall
mov
xchg
add
dec
sbb
or
dec
mov
push
call
and
mov
xchg
jecxz
sbb
bound
out
sbb
arpl
pushf
lcall
negl
divb
mov
ljmp
push
fwait
sub
sub
push
imul
jo
out
fstpl
xchg
sub
mov
clc
cltd
cmc
dec
movsl
or
lock
jg
int
sbb
inc
pop
int
or
out
into
push
cmpsl
inc
stos
and
js
mov
das
stos
pushf
sub
mov
mov
repz
jge
push
loope
jno
iret
sub
cltd
xchg
fimuls
xor
jno
or
idivl
fnstcw
add
cmp
stos
sub
or
add
sub
add
jmp
push
cmp
push
push
add
jb
mov
arpl
xchg
cmp
pop
ret
add
in
stc
jl
pop
test
rcrb
push
and
xor
mov
inc
in
add
xor
xorl
les
or
in
jge
cmp
xchg
pop
lret
mov
jbe
mov
mov
jle
mov
or
push
push
sub
or
clc
adc
jle
in
aad
push
xor
mov
push
jmp
aam
pusha
or
mov
pop
negb
cmc
xor
insl
mov
push
inc
int
subl
adc
jg
int
push
mov
or
imul
inc
push
fldcw
fwait
mov
sub
inc
inc
icebp
cli
push
pop
fists
mov
cmpsl
call
popa
cmp
jmp
in
push
pop
mov
test
enter
std
adc
sub
fwait
loop
xchg
stos
sbb
andb
xlat
add
push
xchg
mov
add
test
mov
loop
xchg
xor
out
hlt
add
pop
xor
sarb
ret
sbb
pop
sub
sti
mov
sbb
add
or
fimull
cmc
pop
loopne
jmp
hlt
sbb
scas
into
push
xor
scas
xor
ja
adc
lods
popf
xor
xorb
push
clc
cmp
call
dec
mov
rcrl
test
mov
xchg
pop
cmpsb
xor
mov
mov
inc
xlat
std
mov
sbb
cmp
xchg
sbb
lods
pop
int
xor
adc
xchg
nop
sub
out
xor
mov
mov
cmc
jmp
out
cmpl
or
add
pusha
cli
add
xor
or
pushf
clflush
mov
push
mov
push
xor
push
mov
fnstenv
stc
pop
mov
sub
mov
cmpl
je
fidivrs
ret
adc
xchg
jl
jbe
out
mov
outsl
jp
clc
cmp
adc
push
fstpl
xor
lcall
pop
jmp
xor
repz
xor
pop
mov
cmp
je
jl
ffree
xlat
fcoml
jb
sub
jp
mov
mov
mov
adc
hlt
sbb
mov
xchg
add
push
outsl
insb
sahf
add
adc
mul
jp
pop
and
leave
aam
push
int
dec
push
pop
and
pop
pop
mov
movsl
ja
adc
loop
jecxz
daa
sbb
stc
pushf
imul
int3
dec
xchg
mov
jle
loop
and
xchg
fnstenv
xor
or
fiaddl
movsl
sbb
mov
jns
fwait
int
pop
mov
mov
jno
xor
aaa
jmp
mov
fdivl
dec
cmp
or
lcall
and
nop
dec
pop
scas
pop
nop
add
outsl
xchg
aad
push
fwait
mov
mov
xchg
cltd
fiaddl
cmp
mov
push
add
xor
push
ja
test
xchg
jmp
out
xor
lcall
push
inc
push
xchg
pop
mov
mov
push
jbe
cld
xchg
xchg
add
sbb
pusha
pop
mov
out
mov
out
ret
mov
adc
loopne
ja
test
xchg
xchg
lock
insb
inc
out
cmp
and
sub
ss
and
je
rolb
sbb
pop
bound
in
sbb
push
out
pop
jns
jg
flds
pop
xor
xchg
mov
enter
insl
and
push
push
fstpl
or
or
in
add
xor
stos
jbe
jmp
push
bound
mov
into
pushf
cmpsb
enter
insl
adc
adcb
pop
sbbb
sbb
lds
cli
push
mov
push
inc
addr16
pop
repz
mov
ljmp
jg
les
call
jo
sub
pop
int3
enter
or
test
dec
in
sbb
jo,pt
mov
in
loop
add
pop
aaa
jge
clc
lds
push
sub
xchg
or
fildll
stc
lret
cmp
or
pop
mov
mov
jge
cmp
data16
and
dec
or
sub
sti
fdivrl
dec
push
cmpsb
lods
in
jae
testl
adc
aaa
mov
jo
and
xor
mov
xlat
lock
test
mov
insb
push
cmc
mov
scas
mov
push
sti
push
or
dec
lcall
adc
arpl
mov
inc
test
mov
inc
mov
mov
je
add
sbb
inc
dec
inc
pop
push
sti
pop
xor
pop
xor
stc
insl
mov
mov
fcompl
adc
add
outsb
int3
in
and
mov
sbb
inc
xchg
call
shll
adc
rclb
addr16
adc
out
mov
xchg
cmpl
cmp
jb
rolb
rorl
mov
sbb
dec
mov
inc
pop
or
pop
lods
test
jmp
pop
andb
pop
or
sbb
in
mov
mov
push
cltd
jge
cmpsl
into
push
ljmp
pop
sbb
cltd
outsl
xchg
push
mov
mov
divb
pop
jp
out
daa
repnz
cs
mov
pop
push
push
or
and
shlb
inc
daa
movsb
push
stc
push
fcmovne
xchg
inc
push
mov
sub
xchg
add
repnz
in
dec
js
sub
or
in
mov
xchg
pop
loope
ds
and
xor
bound
cld
fs
rcr
fdivs
sbb
gs
or
or
dec
inc
into
cltd
fists
jbe
jmp
hlt
and
es
mov
mov
jge
cs
out
mov
fcompp
push
push
dec
idivb
jnp
inc
ficoms
pop
int
cmpsl
or
cwtl
stc
cmp
in
cmc
adc
adcl
lret
imull
and
scas
pop
aas
mov
xchg
mov
push
jnp
adc
lds
cmp
jg
ror
jne
mov
sub
cmpsb
hlt
in
xchg
push
xchg
nop
int3
out
add
stos
push
sbb
roll
adc
add
push
push
scas
shr
jmp
cltd
xchg
or
and
mov
mov
xor
pop
cld
fldcw
sub
aad
and
mov
fxch
dec
scas
mov
js
sbb
pop
and
cmp
adc
movsl
stos
in
dec
gs
sbb
add
and
xchg
mov
mov
pop
mov
stos
pop
mov
xor
push
push
popf
popf
daa
into
sub
jl
stos
nop
xchg
dec
mov
in
mov
ds
cwtl
js
cwtl
loopne
rorl
adc
xchg
dec
aam
cltd
sar
int3
insl
and
push
xor
or
jo
add
sub
sbb
xchg
in
ljmp
shrb
sbb
or
aam
sbb
cs
ds
jbe
scas
jo
jae
shlb
dec
lock
xor
mov
dec
es
dec
jno
sub
lret
movsl
cmc
push
push
mov
mov
xchg
sbb
aam
out
clc
dec
or
sti
mov
mov
test
pop
and
fwait
xchg
mov
subb
data16
aaa
ss
mov
lods
fadds
mov
push
outsb
push
xchg
mov
cmp
imul
jmp
mov
aam
mov
xlat
lock
jb
sub
cmc
lds
or
mov
arpl
aam
cmpsl
sahf
rcl
arpl
data16
mov
and
cld
into
mull
incl
and
pop
fs
cli
repz
adc
jno
bnd
sbb
in
addr16
mov
mov
and
fsubl
in
pop
push
std
fcoms
sbb
sbb
push
mov
icebp
lcall
xchg
mov
push
add
notl
sub
stos
sbb
je
movsb
inc
and
xchg
lcall
pop
xchg
push
pushf
inc
lret
pop
mov
lds
cmp
pop
push
aaa
adc
popf
outsb
pop
xchg
dec
mov
movb
lret
div
ret
pop
scas
das
and
sbb
sub
xor
inc
mov
pop
test
fidivl
cmpsl
xchg
push
mov
sub
jns
enter
int3
jg
cmp
out
push
sti
and
fstpl
mov
lea
std
jo
movd
mulb
adc
sbb
adc
pop
data16
aad
ret
ffreep
xchg
cmp
scas
mov
gs
fwait
lock
out
xchg
pop
pop
and
imul
insb
sub
push
adc
cmc
je
mov
and
push
inc
push
xchg
push
sbb
xchg
mov
mov
sbb
jecxz
mov
dec
push
icebp
cmp
ucomiss
push
lret
popf
jae
in
insb
and
ret
xor
adc
pop
popf
shlb
lods
rol
gs
cmpsl
mov
pop
rcll
ljmp
lret
loop
xor
out
mov
mov
test
pusha
mov
call
pop
inc
in
stc
mov
adc
decl
sub
or
cmp
dec
push
cmpl
fmuls
xchg
mov
mov
lcall
lret
dec
lcall
popf
inc
push
repnz
cmp
inc
ja
adc
inc
xchg
lds
xchg
or
jg
out
ret
dec
out
daa
inc
arpl
push
sbb
cli
in
ljmp
cmpsl
push
mov
pop
add
or
roll
data16
daa
cld
mov
xchg
imul
jg
fsubp
cmc
jnp
gs
shl
sub
mov
mov
inc
das
lods
add
xlat
push
gs
aas
sbb
sbb
add
sbbb
mov
sub
mov
jge
fldenv
lea
pop
sub
call
xor
dec
xchg
xor
orl
arpl
test
pop
inc
xchg
jg
scas
sub
test
add
mov
int3
dec
stos
and
dec
in
xchg
jns
arpl
jg
test
mov
loop
and
pop
xchg
xor
mov
lret
fidivrl
cmp
call
pop
push
mov
jbe
dec
int3
test
test
movsl
jbe
mov
dec
mov
jns
mov
aas
cmc
jp
inc
xor
jmp
sub
out
cmp
jmp
pusha
cmp
in
cmpsb
lea
and
jecxz
xchg
push
inc
lds
icebp
xor
cmovbe
jmp
or
stc
push
sbb
sahf
dec
pusha
cltd
clc
call
jge
or
mov
out
adc
or
jp
pop
push
jnp
cmp
cmp
cmc
into
fldcw
pop
ss
mov
dec
xor
in
jbe
cltd
pop
cmp
jge
out
arpl
push
lret
and
arpl
mov
add
in
cmp
pop
xor
pop
stos
mov
movsb
mov
in
ds
mov
cltd
cmpsl
pop
push
push
and
xor
repnz
xchg
or
add
add
mov
outsb
xchg
ljmp
push
stc
sahf
cmpsl
mov
sub
sti
add
int3
in
cmpsl
and
push
pop
inc
mov
xchg
xor
sub
aaa
adc
outsl
mov
testl
sbb
ret
cs
mov
push
pop
repz
clc
jle
adc
adc
dec
mov
xchg
in
jne
into
sub
adc
pop
mov
neg
lds
outsb
push
push
mov
test
or
out
out
xchg
sub
and
cmc
mov
adc
cmp
inc
adc
loop
ficoms
pop
or
scas
sbb
add
scas
jns
xlat
stc
sbb
mov
js
xor
xchg
into
aad
inc
dec
roll
cmp
jb
sub
scas
add
inc
pop
mov
inc
push
in
ljmp
inc
fidivrl
push
cmp
jae
xlat
cs
outsl
rorb
sub
out
hlt
cmpsl
jle
jo
aad
cmc
add
jae
lock
arpl
roll
lcall
adc
fmuls
push
fcmovnbe
loop
clc
leave
sahf
fidivs
or
mov
pushw
mov
push
fidivs
adc
lret
in
movsb
push
mov
mov
cmp
pop
jno
adc
push
xlat
add
mov
mov
mov
or
adc
cmp
lods
adc
testb
adc
shl
jle
lahf
mov
mov
sahf
call
icebp
xor
addr16
adc
sub
xlat
ja
daa
jl
lcall
test
cmp
push
or
push
jl
add
fninit
sub
stos
adc
in
fidivl
push
mov
leave
loopne
xchg
stos
and
mov
mov
xchg
jge
cmp
mov
sub
xlat
and
push
cmp
push
xchg
sub
ds
leave
out
fcompl
pop
out
mov
fistpll
mov
xor
sub
jne
cmp
pop
fwait
jns
add
sbb
imul
add
and
mov
cmp
push
mov
roll
out
push
sti
inc
xor
icebp
les
stos
cmp
jecxz
lds
sbb
jns
lea
pop
mov
insb
in
push
dec
xor
jno
nop
and
sahf
mov
outsb
pop
sub
cmp
jmp
xchg
roll
gs
inc
addl
in
rol
lahf
aad
stos
pop
orl
mov
jb
cmp
push
lret
out
imul
negl
dec
scas
jo
nop
cmp
xlat
jo
mov
fcoml
sti
test
stos
push
pop
out
addr16
sti
pop
cltd
insb
push
pop
mov
cld
cmp
mov
lretw
sbb
cmp
or
sbb
addr16
mov
cs
jl
cli
push
test
nop
pop
and
orl
jl
pop
scas
jnp
lret
sub
inc
cmp
mov
sub
mov
xchg
inc
cli
jnp
xchg
pop
sbb
ja
cmp
cmpsb
ss
dec
aas
ret
into
xorl
and
loop
pop
push
inc
or
xchg
stos
ja
pop
sbb
or
pop
push
mov
mov
cmp
test
popa
jge
out
out
jp
das
jns
xor
dec
ficoml
jae
cwtl
cmp
sub
lods
jo
push
lock
in
movsb
test
mov
pop
adc
cmp
orb
and
mov
test
push
and
mov
aam
mov
add
shrl
stc
pusha
ud0
popf
stc
ret
inc
xchg
imul
cmp
add
stc
cmp
addl
xor
stos
jmp
xchg
sub
mov
mov
out
dec
push
or
stc
adc
xchg
mov
iret
ja
testb
cmpsb
inc
xchg
xor
sub
or
add
lahf
and
add
mov
dec
dec
sub
ja
sti
rcr
outsl
sarb
push
cmp
mov
xor
fwait
jmp
mov
dec
iret
inc
shr
loope
mov
mov
insl
int3
out
jb
pop
xchg
mov
xchg
cmp
out
pop
sub
stos
outsb
xchg
jno
push
jg
rcr
jle
cmp
inc
sbb
icebp
int
ja
sbb
adc
xchg
or
roll
gs
scas
cmp
adc
outsb
mov
sahf
lods
imul
mov
and
push
xor
jbe
dec
inc
imul
loope
outsb
cmc
push
test
test
rcrl
xchg
xchg
and
mov
mov
dec
insb
fwait
jne
mov
push
lock
ds
jbe
movsb
cwtl
leave
es
stc
jns
cmpsl
or
sbb
adc
push
hlt
es
mov
push
mov
mov
iret
pop
out
mov
test
mov
push
popf
sbb
test
jge
popf
jg
xor
dec
mov
in
sbb
stos
mov
mov
push
sub
pop
inc
inc
out
jle
inc
and
cmc
fcmovu
mov
add
popl
mov
jnp
scas
mov
je
scas
push
aad
fcomps
nop
gs
vcmpsd
sbb
imul
loop
mov
pop
stc
mov
out
and
insb
adc
xor
lds
int3
int3
ret
xchg
mov
sti
hlt
test
fsubl
mov
pop
inc
aaa
cmp
mov
enter
push
jno
and
mov
mov
or
stos
adc
fs
push
mov
scas
out
pop
cmpsb
xchg
shlb
iret
sbb
pop
scas
out
inc
xchg
push
out
push
movsb
cmp
fmuls
stos
pop
mov
aad
je
shlb
in
push
repnz
aad
imul
inc
mov
inc
pop
pusha
movsl
les
add
arpl
ret
push
add
add
subb
out
pop
xchg
sbb
jg
push
jnp
and
inc
movsb
sbb
cmp
in
add
pop
hlt
add
push
xor
les
fs
inc
mov
js
xlat
ja
push
ljmp
fmuls
aas
insb
cmpsl
adc
sub
add
nop
in
shll
in
out
jecxz
outsl
pop
ljmp
add
pusha
imul
xor
adcl
xor
sub
mov
or
inc
cmp
sbb
ljmp
aad
cmp
rorb
sub
push
pop
cs
cmp
xor
lcall
inc
mov
inc
cmp
inc
test
ljmp
pusha
add
and
xor
std
pop
nop
bound
addr16
push
mov
pop
inc
mov
mov
or
sti
inc
cmp
incb
pusha
push
rclb
movsl
sahf
shrl
cmpl
pop
dec
dec
mov
dec
cmp
ret
cmp
cmp
shl
addr16
es
frstor
mov
sub
in
lods
dec
fmuls
push
and
jp
cmc
jg
in
pop
mov
repz
mov
leave
leave
lea
mov
repz
ds
sub
mov
jne
jnp
jle
test
add
pop
mov
jno
pop
sbb
gs
scas
ret
dec
fnsave
jno
hlt
mov
in
sbb
xor
lods
xchg
and
dec
mov
xchg
and
inc
sub
sbb
scas
mov
in
data16
sbb
data16
imul
jecxz
adc
xchg
out
mov
jle
das
or
pop
sub
imul
aad
jne
arpl
jns
mov
outsl
fdivl
jmp
loopne
clc
fcmovnu
or
jbe
js
pop
mov
mov
aas
negb
cmp
inc
lahf
push
cmp
fstpt
pop
jle
int3
mov
mulb
dec
insl
jnp
pop
dec
jp
das
pop
fisubrs
cltd
hlt
sbb
sti
icebp
int
lret
leave
jns
shrb
xchg
sub
jmp
add
in
lea
push
pop
out
mov
fnsave
int3
add
mov
mov
or
xor
push
jg
scas
jp
sbb
sbb
xor
mov
fadds
pop
mov
in
stos
jbe
pop
mov
popa
dec
dec
lods
sbb
mov
push
sub
pushf
je
xor
rorl
dec
sub
cmp
in
jl
pop
cmp
rolb
outsl
push
sbb
dec
sar
push
fdivrl
push
scas
loopne
js
jmp
out
jns
cmp
loope
loopne
xor
or
dec
movsb
into
stc
repnz
pop
jb
adc
jg
fidivs
imul
fidivs
imul
leave
ja
xorl
enter
or
js
imul
xchg
sub
or
push
pop
xor
pop
adc
imul
rcrl
mov
out
loopne
out
test
stos
jmp
idiv
and
lret
in
adc
js
daa
inc
movsb
sbb
es
ljmp
sbb
andl
fs
xchg
outsb
jns
add
in
xor
inc
scas
xchg
fstps
stos
xchg
jno
mov
sub
pushf
test
or
mov
mov
inc
push
and
imul
and
fildl
jne
mov
repnz
mov
push
push
sub
sub
lahf
fisttps
and
mov
add
popa
dec
cmp
hlt
or
cli
inc
mov
jno
je
jecxz
inc
push
jge
cmpsl
push
lcall
xor
sub
lods
or
push
jb
roll
dec
mov
lea
or
push
push
pop
fucomp
rolb
pop
cmp
ds
cmp
out
popa
push
pop
mov
into
mov
cwtl
adc
das
movsl
jbe
call
icebp
sub
and
add
add
adcb
jmp
mov
adc
push
jecxz
mov
mov
pop
mov
mov
cs
dec
rclb
adc
daa
push
jmp
jge
mov
aam
add
xchg
add
aaa
add
jmp
sbb
or
jmp
xor
repz
mov
inc
xchg
mov
testb
addr16
fnstenv
jns
cmp
and
cmp
add
stos
adc
or
or
xor
mov
in
dec
outsb
mov
lock
cmp
insl
sarl
jne
ja
sbb
adc
adc
outsl
mov
into
jle
inc
or
movl
sbb
mov
pop
inc
clc
test
mov
add
mov
out
fs
add
int3
push
push
fisubs
mov
arpl
lret
imul
iret
stc
cmpsb
daa
pop
data16
mov
sahf
sub
push
std
inc
cwtl
and
pop
xor
lods
xchg
pop
nop
ljmp
les
call
mov
push
in
and
leave
mov
sti
push
popf
cltd
sbb
xchg
ja
out
cmc
xchg
sbb
mov
mov
nop
sti
stos
xchg
arpl
push
in
mov
jmp
add
inc
loope
aas
lret
bound
scas
adc
iret
std
pop
test
mov
jecxz
cmp
repz
int
mov
rolb
into
pop
out
arpl
lea
jge
jnp
pusha
repz
rcrb
sarl
idivl
push
xor
in
cmc
cs
movsb
cmp
inc
xlat
jo
neg
or
add
adc
cmp
sub
ret
add
push
mov
ds
adc
xor
push
sub
sub
mov
xor
mov
stc
in
pop
jmp
or
inc
fdivs
add
nop
mov
shrb
testb
aam
mov
lret
cs
addr16
push
jp
aaa
add
jo
push
dec
inc
push
aaa
ljmp
lret
aaa
stc
push
adc
sbb
popa
mov
lds
sbb
mov
ljmp
lods
jnp
mov
xchg
adc
mov
lds
push
push
push
xor
in
mov
and
outsl
insl
dec
aaa
movsb
insl
sbb
jecxz
pop
inc
repz
outsl
inc
ret
sbb
scas
divl
ljmp
adc
add
mov
inc
fldenv
mov
fcomps
rcl
xchg
in
lea
and
sbb
adc
dec
dec
nop
aaa
outsl
sub
icebp
daa
and
stos
je
xchg
icebp
repz
mov
pop
clc
dec
loopne
push
push
insb
jnp
pop
jno
sub
mov
lock
jg
iret
fsubl
out
dec
jae
insb
or
shll
and
lea
enter
ret
inc
lret
mov
inc
retw
xor
cmp
pop
ss
mov
ljmp
cmp
cmp
aam
stos
mov
inc
jle
adc
sub
xchg
sbb
lock
out
aad
xor
leave
cmp
ja
mov
gs
push
add
mov
das
lahf
aaa
and
xor
adc
cs
jbe
or
movsl
pop
xchg
or
inc
sbb
sbb
fisubrl
loopne
stc
pop
push
mov
lea
js
les
outsb
sti
inc
lea
aam
sbb
outsl
out
mov
addb
movsb
dec
enter
and
icebp
div
mov
lret
and
xor
jns
mov
inc
or
cli
or
xor
call
dec
ss
or
je
sub
lods
push
jnp
aas
pop
inc
lods
jnp
out
lahf
jl
pop
popf
popa
xchg
test
mov
or
stos
mov
push
pop
lcall
in
call
sbb
xor
and
xlat
cs
inc
aad
insb
aam
sub
insl
dec
iret
dec
or
test
cmpsb
in
lahf
rclb
fldpi
pop
inc
xchg
adc
pushf
lods
inc
insl
push
jo
mov
jno
enter
cmp
adc
sub
icebp
or
out
repz
push
xchg
call
cmp
ds
mov
pop
jbe
sarb
adc
pop
aas
mov
js
add
mull
loope
xchg
mov
push
cmp
mov
pop
imul
push
mov
sub
out
imulb
ficomps
inc
sahf
imul
loope
fstpl
fs
cmp
and
hlt
cmp
test
ja
outsb
aam
fsub
daa
mov
adc
or
mov
push
inc
scas
outsl
inc
jnp
loop
ret
sbb
and
minps
repnz
or
mov
jne
lock
mov
sbb
sub
fwait
ret
mov
popa
int
xchg
jne
movsl
int
mov
fcompl
inc
and
fstl
xchg
dec
cs
mov
pop
out
cmp
out
cwtl
test
xchg
movsb
mov
aad
in
lds
mov
loop
mov
push
data16
and
mov
or
xlat
mov
subb
inc
sbb
aas
or
xchg
ret
push
push
push
xchg
mov
add
push
mov
xor
pop
setns
vxorpd
vmovlpd
leave
xor
mov
loope
leave
inc
call
orl
jae
jne
out
mov
xchg
mov
dec
pusha
and
ficoml
out
enter
outsl
and
sbb
and
mov
and
add
sub
mov
cli
sbb
xlat
repz
ficompl
jbe
mov
push
mov
scas
inc
mov
adc
mov
cmp
sbb
push
jno
cwtl
pop
lcall
stos
movsl
xchg
fwait
mov
pop
cmp
push
mov
mov
xchg
cmp
cmp
push
iret
jp
and
xor
repz
mov
fcmovnu
or
push
push
cmp
mov
sbb
mov
movsl
jno
xor
jb
push
pop
jmp
and
ret
pop
bound
fldl2t
xor
scas
sbb
pop
pop
outsb
inc
add
pushl
je
dec
cmp
rcrb
popa
iret
inc
ficomps
adc
cwtl
jo
ljmp
sub
in
jle
mov
or
dec
cld
mov
mov
xchg
movsl
repnz
out
mov
ret
aam
jge
push
pop
sbb
insl
repz
cmp
loop
scas
lret
hlt
and
ss
jne
mov
ud2
add
xchg
pop
sbbb
adcl
push
icebp
rcll
mov
pop
pop
loope
mov
mov
fsubrl
mov
frstor
inc
sbb
into
xor
cmovle
xor
lahf
pusha
mov
mov
ss
xchg
pushf
jno
pop
cmpsl
add
out
insl
cmp
dec
dec
mov
lcall
outsl
push
lock
pop
fidivrs
popf
lcall
push
mov
imul
lret
add
xor
push
mov
jmp
fwait
mov
jno
push
or
subl
xor
lds
jbe
out
and
aas
or
or
rcll
or
add
popf
sub
bound
ror
aad
jno
lea
push
or
jb
push
inc
sub
xchg
std
in
dec
xchg
mov
notl
sti
or
mov
or
pop
fisubrs
adc
idivb
dec
mov
in
or
fisubrl
xor
fisttps
jb
std
push
inc
pusha
sbb
sub
fcmovb
hlt
movb
xchg
mov
aad
add
sbb
mov
inc
popf
fisubl
fisttpll
popf
push
dec
inc
popa
js
add
jle
cld
inc
mov
jne
rcrl
es
and
fbld
aaa
cmpsb
pop
rol
fsubl
xchg
jle
inc
sub
adc
repz
shrb
mov
push
subl
mov
test
addb
cmp
and
adc
aaa
inc
sbb
fwait
pop
lock
sub
je
addl
mov
movsl
and
imul
cld
dec
adc
and
jle
mov
push
inc
sub
out
mov
dec
mov
adc
jo
rorl
das
xchg
jnp
outsl
xor
in
mov
lcall
ljmp
xchg
sbb
adc
cmp
test
fsubl
jno
mov
sub
mov
imul
and
push
ja
int
adc
mov
or
pop
mov
sbb
imul
inc
imull
push
ficompl
sarl
inc
xor
rol
fidivrs
pusha
xchg
dec
aas
test
or
scas
cmp
sub
cmpb
test
xchg
mov
fdiv
iret
andl
xor
dec
hlt
fisttpl
jle
mov
mull
test
fimuls
and
adc
sub
sub
jl
outsl
cli
mov
notl
pop
nop
xlat
lock
testl
inc
xor
mov
jb
cli
push
addr16
push
sahf
arpl
mov
jle
popf
daa
loopne
rcrl
sub
jmp
mov
out
mov
pushf
xor
jecxz
out
mov
bound
adc
inc
push
sbb
dec
test
pop
filds
cltd
push
and
xchg
mov
data16
sub
cmp
std
xor
loopne
cmp
cmc
aam
mov
jb
jns
inc
push
dec
pop
jl
call
call
jnp
push
in
mov
fidivs
cs
cmc
sahf
repnz
or
je
fistpl
push
stc
repz
pushf
movsl
and
movsb
int3
hlt
and
jae
cmp
mov
xchg
cmpl
cmp
inc
and
mulb
cmp
mov
icebp
pop
and
or
xchg
insl
loope
mov
push
ds
xchg
xchg
dec
jns
xchg
xchg
cmp
insb
sbb
cmpsl
pop
pop
sub
imul
dec
push
decb
aam
pop
xor
icebp
mov
cwtl
add
jae
enter
daa
cs
std
push
sub
mov
je
ljmp
mov
jg
sbb
faddl
nop
dec
cli
int
scas
fs
ret
mov
pop
push
fcom
jp
stos
out
xorl
dec
leave
cwtl
and
xchg
sti
and
in
jne
lret
add
imul
int
xor
in
addb
test
adc
dec
shlb
xlat
inc
or
lcall
push
rorw
jae
repz
cmpsl
jmp
mov
dec
add
cmp
and
jbe
pop
mov
sbb
cs
mov
push
and
mov
cmpsb
dec
cs
out
mov
adc
sub
xor
push
push
adc
mov
dec
xchg
ret
out
mov
daa
adc
shrl
xchg
into
and
ja
dec
pusha
std
fcoms
lahf
mov
inc
jns
and
insb
xlat
cmp
insl
pusha
outsb
or
outsl
lahf
sub
gs
in
pop
stos
in
lahf
lea
mov
fdivrl
mov
cltd
mov
scas
mov
mov
add
add
cs
clc
push
ss
dec
pop
push
dec
cmp
add
jmp
outsb
std
xor
xor
adc
out
lds
jl
cltd
je
cld
mov
es
movb
cmp
xchg
fcompl
stos
test
push
ret
cmpb
pop
pusha
jae
dec
outsl
pop
leave
mov
lcall
stc
jno
jns
arpl
dec
pop
cli
fsts
dec
add
xor
adc
mov
std
aad
outsl
adc
push
scas
jbe
mov
sbb
jo
xchg
cmp
ds
int3
or
shrl
xor
xchg
push
lock
add
jno
cli
addl
add
cmp
or
xor
ja
cmp
pushf
push
sub
pusha
imul
jge
cmp
insb
loope
jmp
xor
lcall
hlt
ljmp
adc
sbb
xchg
sti
and
movl
cs
xor
leave
mov
rcrl
jecxz
and
mov
lods
add
out
add
mov
jle
addr16
jl
cmp
mov
add
cmp
repz
mov
dec
sub
cli
aas
xchg
leave
js
jne
mov
rcr
and
xchg
movsl
pop
lods
sti
jl
gs
sbb
das
pusha
dec
push
fistpll
add
push
out
mov
sbb
adc
imul
pop
adc
popa
cmpsl
pop
daa
cmp
movsb
faddl
arpl
xor
push
lret
add
ficoml
pushf
push
call
in
pop
fimull
and
sub
cmp
jno
mov
idivl
pop
lods
xchg
adcl
mov
andb
ret
dec
lcall
negb
xlat
adcl
clc
pop
dec
xchg
setns
cmp
mov
lock
xor
cmp
fiaddl
xorl
fs
lret
shrl
lods
xchg
adc
mov
and
jecxz
mov
sbb
xor
mov
gs
lahf
test
loop
xchg
and
cltd
sbb
mov
daa
leave
xlat
mov
mov
bound
xchg
inc
xchg
add
add
push
jb
pop
loop
icebp
cli
lahf
hlt
popf
lahf
sub
rcll
sbb
sti
fmuls
daa
push
cmp
add
aam
mov
add
adc
test
fisubs
int3
xchg
or
and
inc
jbe
sbb
ljmp
push
shll
mov
dec
pop
pop
fisttpl
ja
mov
cs
fwait
pop
mov
push
cmp
lock
fwait
push
icebp
movlps
xchg
sti
xchg
popa
jg
sti
imul
push
xchg
pop
in
leave
movb
cli
inc
ret
push
cmp
pop
xlat
in
notb
xchg
mov
push
stos
inc
cmpsb
cmp
push
stc
cmp
aam
fistl
sbb
and
sbb
jmp
in
sub
mov
out
or
push
xor
les
sbb
aas
call
dec
sbb
cwtl
fstps
cmp
call
mov
and
js
cli
imul
sub
add
fistpl
sbb
test
int
push
sti
or
sbb
loop
ret
lods
notb
xchg
or
cmpsl
rcl
inc
addr16
outsb
jmp
push
add
jmp
jg
stos
mov
push
mov
sub
add
mov
mov
cmovb
repz
cs
pop
jp
pop
cmp
and
in
pop
or
ret
push
loope
arpl
mov
jb
mov
pop
js,pn
sbb
hlt
xlat
mov
mov
mov
leave
scas
xorb
xlat
inc
push
test
cmpsl
arpl
outsl
cli
insb
popf
push
jne
sbb
or
loop
dec
repz
adc
sub
fstpl
cs
sbb
xchg
decb
inc
mov
push
insl
bound
addr16
mov
xchg
pop
ret
adc
jb
cmp
push
mov
lods
insl
shrl
fwait
lds
lahf
pushw
aam
mov
fsubrp
lret
aas
scas
dec
aam
das
pop
mov
stos
outsl
mov
jbe
imul
pushl
jo
xchg
sarl
mul
scas
rolb
adc
scas
ret
dec
in
rcl
outsb
lods
pop
cmpsl
ds
ds
popf
aas
add
mov
sub
outsl
xor
ljmp
sbb
imul
sbb
sub
sbb
mov
fistpll
std
clc
incl
xchg
xchg
pop
mov
mov
push
inc
jo
cli
clc
mov
test
ljmp
std
hlt
xor
cli
shll
sbb
sahf
jecxz
ss
je
lea
lea
in
in
and
cmp
adc
and
mov
cltd
push
or
xchg
hlt
popa
or
dec
sahf
xor
or
cmp
lock
lcall
cmp
mov
lods
xor
es
enter
mov
dec
jbe
repz
and
mov
mov
mov
add
scas
sbbb
push
enter
push
and
jo
repz
xchg
inc
mov
adc
push
jecxz
cli
pop
sub
jae
aas
aad
fistpll
push
stos
and
jnp
incl
scas
dec
popf
push
dec
std
xorb
push
mov
add
daa
xor
add
addb
jg
lods
loope
daa
mov
push
in
pusha
mov
sub
xor
aas
stos
fbstp
ja
out
mov
andl
fsubrl
jmp
pop
dec
cld
push
std
push
xchg
stc
xchg
lods
push
js
mov
movsb
mov
seta
mov
push
mov
in
jecxz
nop
push
hlt
sub
shll
inc
fdiv
aas
mov
lret
loope
and
and
sub
lret
fistps
sub
sub
dec
cmp
push
mov
cli
test
dec
jo
sbb
popf
pusha
jmp
or
cmp
pop
mov
sub
inc
divb
or
nop
adc
xchg
notb
shlb
ljmp
out
scas
aad
mov
mov
sub
mov
jae
push
bound
sbb
inc
loop
fisubl
add
adc
aad
or
notl
sbb
lea
scas
sub
add
or
enter
das
sub
sbb
in
inc
mov
sbb
sub
jno
mov
fdiv
and
cmc
or
pushl
test
ret
pop
sbb
popa
mov
adc
push
push
mov
inc
scas
test
sbb
nop
pop
lock
and
lds
sub
cld
xchg
sti
adc
cmp
xchg
xlat
or
push
pusha
add
xchg
aam
add
add
cmc
daa
jo
cmpl
stos
xor
or
dec
cmp
imul
cli
jecxz
and
jle
jmp
xchg
dec
and
or
int
outsl
inc
das
fstp
fidivl
insb
and
out
lret
leave
mov
push
mov
and
scas
adc
mov
jg
or
test
adc
imull
int3
pop
mov
jbe
rcrb
push
sti
int
mov
inc
and
xchg
jbe
or
xchg
mov
and
outsl
xchg
rol
mov
add
lcall
fsts
jp
xchg
xlat
adc
adcb
lret
mov
sub
add
xor
outsl
jg
jnp
into
stos
rcl
jp
adc
call
pop
mov
scas
in
movl
cli
repnz
stc
jmp
and
std
mov
jns
mov
pop
pop
dec
jp
xor
into
addl
pushf
dec
sarb
loop
cmp
cli
js
in
nop
adc
fdiv
push
sub
ss
mov
cmp
fcmovu
fstps
lock
jb
ficoml
jle
xchg
jns
mov
pop
sub
inc
push
mov
test
pop
sub
addb
mov
mov
les
or
adc
and
adc
stc
dec
sbb
shl
jp
jns
xchg
pop
inc
jmp
addr16
xchg
fwait
mov
lret
loope
les
jns
test
push
loope
test
test
insb
dec
add
enter
jnp
xchg
cmpsl
jmp
mov
aas
mov
int3
mov
shrb
movb
in
jno
push
inc
orb
mov
add
movsb
aaa
rcrl
inc
cmp
ret
rolb
push
ss
out
add
sbb
jno
cmp
jl
pop
cmpsl
sbb
mov
repz
xchg
rclb
jo
sarb
sti
test
push
iret
sub
ret
xchg
sub
faddp
jge
mov
push
adc
pop
int3
js
sub
into
inc
xchg
aam
lahf
iret
or
mov
fcomip
mov
rcll
aam
mov
jge
xor
push
leave
mov
cmp
out
sub
mov
cmp
adc
icebp
sbb
out
pop
add
xchg
xchg
das
sbbb
or
lods
movsb
repnz
enter
mov
jae
scas
xor
gs
add
out
dec
mov
jle
and
popf
jbe
stc
xchg
or
jns
adc
enter
mov
lock
dec
mov
mov
jp
sub
lds
mov
adc
hlt
pop
clc
cmp
movl
and
inc
xor
push
add
fsub
negb
pop
sbb
scas
adc
adc
mov
jle
into
iret
je
xlat
and
dec
out
fisubrs
or
cmp
dec
hlt
fbstp
xor
call
lock
sub
jmp
sbb
into
shl
adc
push
mov
mov
add
push
out
sub
sub
mov
stos
leave
scas
rcl
iret
sub
int
rolb
or
jo
lret
push
pop
inc
ret
pop
cmp
mov
and
test
pop
repnz
or
mov
into
dec
out
mov
mov
lods
add
cli
add
shrl
jbe
mov
pop
call
test
dec
adc
add
mov
add
pop
xchg
test
js
shr
loopne
dec
mov
mov
nop
mov
dec
push
adc
sub
outsl
push
leave
add
test
mov
arpl
xor
sti
js
and
dec
mov
je
mov
cld
in
inc
idivl
push
push
mov
and
es
jecxz
jae
mov
jns
inc
or
add
rcrl
aas
in
aad
pop
mov
popl
mov
dec
cmpsl
mov
mov
bndstx
ret
cmp
and
dec
jne
sbb
shll
mov
adc
cmpsb
mov
repnz
dec
push
rcrb
cmp
test
mov
cmp
loop
push
lahf
pavgw
xchg
scas
lds
out
jp
movsl
xchg
mov
jmp
mov
dec
fmuls
pop
je
scas
sub
push
pop
cld
pop
cltd
aaa
push
or
cwtl
insl
jae
cmp
push
cltd
in
mul
adc
xlat
cltd
ficomps
dec
jg
fs
xor
sbb
pop
jno
inc
fucomp
xchg
mov
mov
inc
cmp
lcall
or
xchg
adc
movsb
ss
pusha
out
out
xorb
scas
push
pusha
push
pop
pop
iret
xchg
mov
push
cmp
dec
popa
inc
or
fwait
imul
fsubrs
cmc
pop
inc
fdivrs
test
xlat
repz
dec
into
fdivrp
adc
data16
mov
lea
aas
cld
dec
pop
fcmovb
sbb
repnz
fstp
int
push
subb
das
ret
or
loop
adc
fdivr
or
cmp
arpl
out
rcl
dec
and
hlt
addr16
ja
xchg
insl
inc
pop
rol
ds
push
xlat
aad
pusha
test
and
adc
mov
in
xchg
dec
pop
xor
push
add
xor
pop
es
push
jge
pusha
xchg
leave
xor
xchg
sbb
rorl
mov
xlat
lods
sub
aad
jbe
xor
cld
inc
adc
sbb
push
mov
cmp
fisubl
sbb
push
mov
aas
mov
xchg
ljmp
cwtl
adc
test
inc
ss
popf
fstps
cltd
in
test
adc
pusha
gs
aad
mov
add
fsubr
pop
mov
push
jmp
push
xchg
jnp
in
arpl
add
popa
push
push
xchg
ror
lods
stc
cli
and
loopne
cmp
test
js
jle
push
cmp
rorb
stos
xchg
das
lea
repnz
xchg
xor
mov
lock
leave
sbb
ficoms
aad
lock
nop
aas
push
xchg
jp
shll
lods
nop
hlt
fdivrs
nop
loop
pusha
sub
pop
push
mov
xor
lret
jae
mulb
mov
cmp
jmp
aam
dec
test
jns
movsb
inc
push
add
and
loope
inc
sbb
cld
xchg
loopne
imul
adc
stc
xor
in
mov
ret
xor
and
andl
mov
out
add
pop
sub
mov
fstp
rcrb
jecxz
adc
or
pop
fcmovne
iret
mov
mov
pop
pop
lea
sbb
js
ss
shlb
fs
add
js
sub
es
jmp
mov
pop
fs
js
leave
jle
xchg
addl
jmp
add
out
divps
outsb
or
ja
hlt
cltd
push
or
fidivl
movsl
xchg
fwait
xchg
rcrb
pop
pop
jns
orl
lock
pop
pop
mov
fs
dec
mov
sbb
int
adc
push
sbb
pop
inc
and
mov
push
adc
xor
mov
and
es
insl
int3
mov
sub
and
fnsave
cmpsb
inc
test
in
and
cmp
cmp
jno
pop
xchg
xchg
and
ret
mov
push
imul
add
fcompl
leave
mov
stos
pop
fisubl
push
mov
add
sarl
aam
ret
sub
out
adc
mov
push
mov
and
sub
outsl
and
xchg
fnstsw
sub
pusha
mov
shrl
push
or
jbe
in
in
xchg
xor
cmpsb
push
cmpsb
mov
xlat
fwait
stc
xor
mov
aad
mov
and
jne
push
dec
rcr
insb
addr16
stc
cli
movl
js
imulb
adc
jge
jl
sub
adc
xchg
push
insl
stos
loopne
icebp
mov
in
add
adc
ds
addb
popa
icebp
repnz
jnp
adc
shrl
push
sub
ja
cmpsb
cwtl
dec
jno
out
lcall
mov
out
lcall
mov
pushf
lret
aas
shrb
pop
ret
lods
aam
cmp
in
and
inc
movsl
imul
movsb
out
pop
ret
xchg
add
cmpb
push
xchg
xchg
and
mov
movsl
push
in
pusha
gs
dec
call
mov
xchg
add
pop
in
pop
iret
es
movsb
adc
inc
pop
ja
xchg
ficomps
jp
pop
ret
out
adc
lret
adc
pop
mov
jmp
push
inc
and
fdivs
movsl
adc
adc
mov
jp
rcl
imul
or
ss
xchg
xor
lret
lret
sub
mov
mov
mov
jno
mov
push
jns
dec
and
adc
ljmp
ret
xchg
sti
ret
sub
sub
and
mov
jno
cmp
push
xor
loope
sbb
shl
ss
stos
jge
stos
out
rclb
and
dec
mov
pop
jns
fidivl
jl
cld
jo
jg
ja
add
pop
fidivrl
xor
inc
sub
sbb
add
stos
add
pushf
mov
push
cld
sti
jnp
sahf
jge
sbb
dec
or
ret
fisttpll
in
add
rcrb
enter
mov
ret
lds
inc
movsb
sub
das
mov
jmp
imul
xchg
cld
imul
or
pop
pop
sbbb
sar
inc
or
movsl
mov
es
sub
fisubs
pop
push
clc
and
xor
mov
lea
and
repz
ja
dec
lret
movsl
xor
sub
xor
les
test
insl
mov
pop
enter
inc
negl
dec
and
into
movd
and
ljmp
xchg
xor
sahf
lods
clc
clc
test
dec
lahf
arpl
int3
jb
loope
cmpsb
mov
lods
fadd
shlb
outsl
inc
std
dec
pop
aam
or
jl
leave
inc
mov
test
push
dec
ret
divl
imul
loopne
xchg
fadd
bound
ja
mov
sbb
xchg
pop
lcall
mov
push
out
inc
mov
cmp
call
mov
repz
fcmove
mov
fstpl
and
push
sbb
cmc
cli
imul
aad
out
insl
or
sbb
rcll
ret
test
lahf
adc
sub
subl
loope
jns
fisttps
mov
sti
mov
addr16
loop
fdiv
sahf
xor
sti
jge
push
repnz
pop
cltd
clc
dec
pop
cwtl
push
or
iret
adc
pusha
inc
js
hlt
imul
mov
cmp
lret
add
mov
jl
push
js
cld
or
lcall
jae
adc
inc
xlat
lods
leave
loop
xlat
inc
dec
in
int3
inc
xchg
or
sub
popf
inc
xchg
in
test
xor
iret
daa
mov
adc
sub
imulb
add
test
stc
inc
mov
and
scas
mov
out
jo
cmp
icebp
adc
inc
fs
fcoml
out
js
out
fdivl
imul
fsubs
mov
push
xchg
sub
stos
stos
shr
push
in
sub
dec
lods
ljmp
inc
aad
hlt
movsl
or
dec
mov
clts
mov
sub
push
shll
out
mov
cmp
pop
orl
mov
mov
xchg
out
sahf
dec
js
ret
inc
fwait
pop
arpl
cmp
inc
add
fidivs
test
sub
push
cli
lahf
xor
inc
adc
mov
sti
push
fld1
loopne
jnp
aas
ret
mov
cltd
cmp
popf
push
xor
sbb
fcom
sbb
adc
xor
push
in
loope
inc
mov
shlb
lods
mov
mov
jo,pt
not
fsubrl
test
sub
xchg
aam
adc
push
cmp
dec
xchg
ja
lods
jle
mov
loop
mov
js
sti
sbb
cmp
std
dec
push
mov
add
or
out
cmp
and
sub
stos
xor
loop
mov
popa
es
popw
testl
cmp
mov
pop
cld
push
adc
cmp
aaa
xchg
jae
fldt
into
jne
pop
or
iret
mov
pop
jecxz
hlt
push
or
push
icebp
lods
imul
in
sbb
mov
cmp
sbb
jno
ficoml
and
outsl
xchg
inc
ret
jle
ror
or
pop
out
mov
xor
arpl
lret
les
cli
mov
inc
test
add
jnp
daa
sbb
das
sbb
jo
adc
dec
repnz
dec
xor
mov
iret
shll
gs
adc
sbb
cmp
pop
sub
jg
icebp
pop
mov
imul
adc
cld
push
inc
test
in
inc
sub
mov
add
fisttps
mov
add
jecxz
call
rcrb
push
and
test
stos
leave
push
shrl
fistps
dec
rolb
fidivs
mov
out
ljmp
dec
dec
dec
ja
gs
push
jmp
outsb
pop
and
push
adc
pop
mov
fisttps
push
add
adc
hlt
je
adc
mov
idivb
aas
scas
inc
jns
push
in
push
sub
mov
repnz
add
fldenv
call
or
shrb
jb
or
mov
mov
xor
pop
lahf
inc
mov
mov
andb
and
mov
push
dec
cwtl
aad
es
jmp
das
es
inc
sbb
jnp
pop
xchg
mov
loop
or
adc
fisttpl
repz
sub
aas
dec
lds
lret
jge
nop
ljmp
push
sub
inc
hlt
inc
push
cvtdq2ps
inc
push
out
cmp
in
xchg
inc
into
les
repz
dec
fdivrs
lret
pop
xchg
dec
fwait
inc
dec
ficoms
out
aaa
pop
sbb
insb
push
ss
jo
or
mov
jb
mov
xchg
sbb
icebp
sbb
ja
jae
push
mov
xchg
dec
insl
mov
sub
sbb
push
hlt
into
mov
cmp
xor
pop
xlat
and
scas
cmpsb
jb
adc
leave
inc
sbb
adc
int3
inc
push
jl
cld
ss
or
dec
pusha
adc
test
ffreep
or
mov
mov
outsl
addl
xor
and
arpl
adc
xchg
inc
cmc
addr16
push
xchg
int3
sub
push
cltd
shlb
pop
mov
std
cmp
and
mov
aaa
repnz
stc
cmc
je
in
call
ss
pop
jnp
pushw
push
das
cmp
xor
or
add
jp
xchg
cwtl
inc
mov
mov
enter
fcmovne
into
push
push
and
inc
jp
mov
fs
ret
dec
loop
push
jns
mov
cmp
leave
aam
sub
cmp
or
subl
cmpsb
or
push
lcall
add
stos
out
jmp
mov
fwait
dec
sub
sub
xchg
lcall
imul
add
sbb
sub
and
ss
pop
adc
dec
ret
dec
and
mov
or
jmp
dec
mov
pop
mov
push
pop
lahf
and
push
sbbb
jp
dec
cmpsb
jns
sub
lock
pop
jno
mov
jbe
in
std
xchg
sahf
lds
testb
sub
xorb
and
pop
data16
into
mull
cld
je
sti
cmc
jmp
test
inc
push
fcmovne
nop
mov
lods
push
cltd
imul
dec
int
ljmp
jbe
mov
xor
push
inc
push
lock
jns
mov
ret
dec
pop
insb
daa
or
push
mov
std
mov
jge
cmpsb
fwait
mov
in
pop
out
nop
jb
jns
jbe
adc
mov
mov
cmp
mov
sub
mov
or
stc
mov
inc
mov
xchg
sbb
clc
adcb
mov
in
aas
stos
xor
jns
and
ret
push
xchg
dec
jmp
mov
add
lahf
jl
mov
and
mov
jno
les
add
inc
mov
les
cmp
test
dec
inc
in
push
sub
ret
ds
scas
cmp
and
xchg
loope
mov
bound
pop
stc
xor
mov
es
pushf
mov
push
cmp
sbb
push
out
xchg
enter
mov
dec
mov
ret
insb
dec
test
cmpsb
clc
jbe
jno
lret
nop
jae
enter
mov
xchg
in
mov
pop
mov
cmp
cmp
xlat
dec
aam
mov
cmc
cmpsl
xchg
mov
stos
or
imul
je
cmp
andb
repz
into
jl
in
shrb
insl
lock
inc
sbb
or
sub
loopne
mov
pop
repz
imul
mov
leave
mov
jae
andb
stc
push
imul
adc
in
dec
or
push
iret
jb
nop
enter
push
xchg
mov
mov
aam
ds
fnsave
rcl
enter
mov
push
dec
mov
movsb
icebp
push
mov
mov
xor
pop
dec
mov
jo
sbbb
add
pop
sub
mov
nop
sub
jb
mov
out
adc
into
dec
push
add
mov
stc
rcrb
xchg
mov
mov
mov
or
and
mov
in
jge
lods
jg
daa
xor
cltd
je
cmp
adc
and
jle
in
andb
pop
xor
inc
cmp
lahf
jp
in
sbb
push
loope
xor
and
cmp
inc
push
push
shll
push
aaa
aam
lahf
std
scas
or
das
inc
cmp
scas
push
addr16
pop
jae
cli
jne
test
cli
popa
test
push
jecxz
shl
sbbb
xchg
loopne
lods
test
lret
mov
sarl
mov
jmp
inc
push
and
test
nop
sub
loop
jo
or
sarb
and
jp
mov
mov
subl
divb
xchg
pop
sti
out
sbb
shlb
xchg
fdivrp
lret
icebp
ret
pop
xchg
scas
dec
fs
into
ja
jno
jb
into
or
pop
dec
aad
adc
ds
leave
add
arpl
pop
sarb
mov
fnstsw
and
scas
dec
pop
scas
inc
sarb
stos
sub
out
push
xor
xchg
out
cmc
xchg
jmp
iret
sbb
movsb
stc
std
push
mov
sbb
push
mov
lea
mov
xor
add
sub
jge
inc
sub
cli
sti
mov
jne
adc
test
es
popf
jae
jno
imul
pop
dec
sbbb
es
std
mov
cmp
in
in
sbb
pop
cmpsl
imul
lret
mov
xchg
dec
bnd
inc
xor
lcall
inc
movsl
mov
pop
lds
aam
addr16
inc
repnz
orb
cmp
pop
clflush
adc
or
ret
sbb
mov
loope
xchg
sbb
mov
cmp
or
xor
cli
sbb
mov
in
lds
jge
cmp
aad
pop
inc
mov
mov
jb
icebp
push
cmp
out
lcall
mov
jb
push
pushf
mov
cmp
adcb
test
shll
arpl
or
and
aas
cli
ret
shr
ljmp
scas
xchg
outsl
loop
mov
push
inc
lcall
pop
sbb
jne
fwait
or
in
movsb
xchg
add
clc
mov
jmp
xchg
mov
int
testb
stos
xchg
lret
dec
cltd
imulb
push
mov
pop
pushl
iret
cmp
pop
mov
imul
mov
sbb
in
mov
pop
mov
cmc
pusha
insl
shrl
inc
mov
push
xlat
repnz
dec
mov
cs
mov
imul
push
std
subb
into
or
xchg
push
sbb
fadds
scas
adc
dec
lds
mov
adc
cmp
nop
movsl
imull
jae
lods
inc
out
js
lret
and
inc
or
xchg
sbbb
movsl
inc
fwait
mov
fisttpll
inc
test
movsl
roll
mov
push
clc
frstor
inc
mov
dec
imul
les
mov
adc
mov
jecxz
addr16
xor
cmp
adc
pop
xchg
jl
xchg
ret
jae
or
and
dec
lret
imul
adc
push
test
decb
nop
iret
sub
in
rolb
sbb
data16
call
add
xchg
xor
cld
mov
rolb
and
jbe
dec
setae
out
mov
pop
jge
push
mov
adc
fdivrs
push
cmp
aad
movsl
cld
insb
fcmovnu
xchg
xor
push
mov
cwtl
sub
ret
cmp
dec
xor
pusha
pop
sbb
fisubrs
imul
aas
fistl
pop
insl
testb
lods
in
xor
pop
or
sbbb
mov
dec
jmp
mov
lea
mov
in
cmpsb
cltd
fcoml
int
arpl
ret
decb
sbb
out
in
cmp
push
xor
aaa
cltd
lock
leave
jmp
push
stos
rcrl
sbb
das
sub
shll
fiaddl
in
pop
in
cs
das
adc
cmpsb
add
pop
xor
ja
and
sbb
dec
xchg
xor
les
cmp
cli
pusha
pusha
xor
mov
cmp
and
hlt
mov
push
pop
push
mov
inc
add
pop
jmp
js
bswap
add
incl
mov
rolb
subl
ret
in
lock
adc
sub
aad
cmp
inc
xor
testb
int
aaa
loopne
lcall
out
pusha
daa
hlt
int3
rcll
adc
add
test
dec
out
dec
jae
adc
ffreep
inc
mov
xchg
pop
lods
loopne
mov
xchg
mov
jecxz
add
shl
lahf
push
push
fstpl
mov
cmp
cmp
dec
imul
and
sub
pop
sbb
push
cwtl
sbb
ficomps
test
aaa
sti
fucomi
dec
xor
nop
mov
cmpsb
fwait
cmp
xor
mov
imul
fstpt
inc
mov
es
mov
ljmp
dec
jnp
mov
divl
mov
lcall
inc
mov
adc
cmp
and
xchg
xor
jbe
out
xchg
loope
jg
roll
test
inc
roll
and
hlt
jecxz
lds
push
ss
sbb
stos
inc
sub
das
out
les
dec
or
pop
sub
iret
sub
sbb
repz
call
outsb
cld
sti
mov
cmpsb
ja
xchg
dec
inc
pushf
mov
mov
pop
mov
es
aam
add
add
xorb
sbb
xor
sbb
icebp
or
xchg
das
mov
daa
repz
sub
sbb
das
xlat
out
mov
ja
jne
sub
in
mov
mov
and
add
inc
test
jo
sub
or
decl
jg
aaa
scas
cltd
bound
sbb
out
dec
daa
clc
shll
fwait
adc
push
aaa
and
lock
lahf
cs
or
fcoms
in
cmc
mov
inc
imul
insb
sbb
std
add
mov
hlt
or
xor
popl
adc
sbb
ss
pop
adc
sbb
pusha
xchg
arpl
sbb
or
xor
or
insb
push
cmp
jne
cmc
cmpsl
xchg
dec
ret
fwait
fs
sub
lahf
dec
xchg
or
mov
shll
mov
popa
ja
sub
xor
dec
mov
pop
mov
xchg
and
mov
adcb
push
test
sub
jae
fbstp
mov
jae
adc
sub
lret
testl
movaps
je
add
sub
jb
xchg
jg
mov
fsubs
cld
and
test
fimull
jno
daa
xchg
scas
cmp
jnp
outsb
adc
insb
adc
pop
test
mov
jae
pop
shlb
test
popa
jp
addr16
pusha
addr16
mov
mov
adc
mov
mulps
mull
jnp
shll
iret
and
lret
es
out
repnz
jl
psubq
jbe
into
push
mov
pop
stos
aad
frstor
imul
jecxz
js
push
pop
cmp
js
sub
insb
pop
add
les
and
sbb
dec
pop
fsqrt
fildl
cmp
sub
iret
call
lea
popf
mov
scas
lds
mov
xchg
mov
out
pop
xchg
mov
mov
inc
scas
mov
push
movsb
xchg
inc
pop
enter
fmulp
push
mov
add
mov
je
jbe
ret
sub
lds
and
jmp
ret
subl
fstps
lret
int
xlat
fldenv
lods
lds
lret
sub
popa
mov
sbb
inc
movsl
fsubs
fld
mov
push
insl
shrb
jo
aad
in
jo
aas
add
sahf
jl
mov
cwtl
dec
dec
push
adcb
pop
mov
adc
add
cmp
movsl
loopne
cmp
xor
mov
inc
add
ds
mov
xor
pop
or
clc
stc
push
xchg
jb
cmpsl
cs
adc
xchg
dec
mov
sbb
fnsave
or
push
push
push
sub
loopne
test
add
cmpsl
je
or
movsl
aas
rcll
repz
call
sub
adc
lahf
orl
or
push
in
cmpl
in
xor
js
inc
cmp
dec
cmc
xchg
lea
add
cwtl
out
mov
or
sbb
call
ret
fwait
cmp
pop
arpl
mov
inc
loopne
leave
xor
cmp
cmpsl
push
mov
xor
mov
int3
pop
cmp
fdivrl
out
dec
jo
adc
mov
push
ds
fmul
jp
add
xor
inc
add
cmpsl
ljmp
jp
in
ret
dec
or
jmp
repz
add
jecxz
mov
mov
out
imul
push
sub
push
push
jbe
mov
repnz
std
bound
das
mov
or
mov
notb
xchg
aam
aas
xchg
in
mov
sub
mov
mov
mov
arpl
outsb
inc
jecxz
adc
bound
xchg
lcall
dec
test
pop
js
push
xor
mov
mov
push
mov
sbb
xchg
xchg
cmc
scas
and
jmp
aad
adc
fwait
les
adc
xor
inc
bound
divl
call
into
pop
jne
xchg
sub
nop
sub
dec
adc
cmp
je
mov
jg
icebp
icebp
pop
jg
repnz
sbb
cmpsl
in
push
sub
popf
mov
push
add
or
cli
jns
mov
sti
xchg
shl
inc
mov
lret
cwtl
in
aam
imul
int
inc
outsb
sbb
arpl
fstl
test
fsubr
cwtl
cmc
adc
pop
pop
and
push
int3
pop
sar
daa
bound
roll
jle
rolb
leave
dec
shr
mov
jp
inc
inc
ret
cmp
push
adc
das
test
cmp
pop
sbb
add
xchg
xchg
lret
loop
enter
popf
in
jg
xchg
icebp
lea
and
mov
aam
movsl
xor
lods
popa
add
mov
in
es
mov
movsl
push
rcl
add
insb
inc
aam
pop
jle
jno
mov
into
jle
or
push
jecxz
xor
push
xchg
es
or
jecxz
scas
sbb
pushf
jl
sahf
cwtl
xor
js
inc
push
add
pusha
cs
call
xchg
mov
sub
aaa
das
sub
push
pop
add
inc
xchg
ret
cmpsl
mov
into
lret
inc
dec
jns
fnstcw
scas
das
xchg
cmpsb
sub
sub
pop
xchg
jmp
ret
andl
jne
aad
hlt
and
xchg
mov
fcoml
aad
xchg
lret
xchg
insl
addr16
repz
push
xor
mov
loope
in
xchg
das
mov
mov
loope
insb
push
cmp
lret
xor
imul
fcmovb
adc
inc
cvtps2pd
lahf
jmp
and
stc
sbb
sar
out
test
push
mov
jg,pt
cmp
sub
cs
ficomps
inc
adc
jp
data16
in
stos
mov
sub
sub
xor
out
sub
adc
inc
int3
jecxz
jne
insb
popa
out
mov
sbb
add
add
lock
dec
int
jle
lock
out
push
test
jle
mov
dec
inc
mov
mov
push
out
jle
movsb
jecxz
jmp
or
std
ds
inc
and
repnz
daa
xor
cmp
push
xchg
clc
inc
jnp
shrl
orl
fbld
push
fwait
and
ret
sub
test
pop
cwtl
int3
pop
fwait
pop
sbb
mov
mov
lds
or
fwait
aas
lea
div
xor
outsl
adc
inc
dec
jge
add
or
mov
xchg
loopne
push
xchg
sub
ds
cmp
lods
sarl
inc
push
mov
out
dec
cmp
or
dec
add
jmp
or
aad
or
dec
mov
sbb
xchg
jl
mov
jno
sub
scas
add
push
jne
xor
dec
mov
xlat
cmp
fstl
add
jmp
cwtd
cmp
jae
inc
outsl
jecxz
and
push
mov
xor
or
testl
adc
sarb
pop
ror
sub
push
pop
dec
enter
insb
cmpl
imul
dec
xchg
in
and
push
sahf
data16
stos
pop
push
adc
dec
xor
in
jl
movsb
in
inc
xor
pusha
mov
nop
jns
sbb
cltd
xlat
push
dec
mov
bound
jle
jmp
mov
push
ss
nop
xor
push
mov
lds
jmp
adc
mov
outsb
jp
push
pop
jmp
shl
mov
addr16
pushl
jns
outsl
pop
outsb
sbb
rolb
jge
roll
idivl
loopne
ds
mov
stos
jnp
add
jl
addb
push
fldenv
je
or
mov
lret
xchg
inc
ja
xchg
or
mov
hlt
pandn
fistps
jmp
or
nop
jno
mov
lods
add
pop
cwtl
lods
push
test
mov
jecxz
and
push
test
or
testb
subb
rclb
xlat
loope
lods
clc
inc
iret
repnz
repnz
jmp
dec
adcb
xchg
or
pop
xchg
xchg
ficompl
xchg
outsb
adc
arpl
in
add
dec
xchg
add
int
ftst
scas
mov
xchg
or
repz
inc
or
aas
dec
and
dec
outsb
sub
xchg
or
pop
adc
das
ret
stos
insb
inc
jecxz
mov
gs
dec
clc
xor
push
push
in
jne
sub
lcall
cmp
insl
push
pop
inc
push
lcall
fwait
imul
push
add
cmc
and
icebp
aam
sub
pop
out
pop
mov
bound
xchg
lds
mov
daa
jne
addr16
jmp
out
jo
lock
sti
xchg
pop
imul
test
iret
jns
inc
jb
ja
xchg
mov
push
cltd
or
mov
shr
and
dec
inc
mov
test
sti
or
call
ss
and
cmp
dec
int3
mov
ret
pop
imul
movsl
push
daa
insl
fwait
aaa
mov
and
cltd
fcmovnbe
push
pop
pop
xor
inc
or
push
repnz
pop
mov
jmp
cmp
push
aaa
fidivl
gs
xchg
lock
mov
jp
mov
addr16
imul
push
call
pop
int3
jns
sbb
jmp
mov
outsl
xor
imul
dec
add
lods
xchg
outsl
in
aad
mov
push
push
es
inc
push
xchg
movsb
dec
adc
cwtl
aas
or
adc
lcall
pop
inc
dec
imul
out
int
inc
jp
std
fdivl
push
xchg
lret
inc
lret
into
xor
cmc
jnp
subl
cs
xor
das
adc
dec
hlt
push
add
mov
jmp
fs
in
or
stos
lea
scas
fimull
test
mov
aas
sarb
adc
adc
adc
sti
jns
xlat
aam
pop
mov
adc
lret
xchg
or
mov
repz
test
adc
push
movsl
dec
ds
scas
pop
push
and
ljmp
imul
dec
sahf
sbb
cli
mov
dec
jnp
fildl
cli
cltd
rol
dec
imul
aaa
xchg
mov
and
lret
jl
jno
dec
jno
bound
adc
and
and
pushf
loope
pop
enter
fucomp
ret
inc
mov
cwtl
dec
xchg
cmp
sub
imul
and
mov
and
shr
repnz
xchg
mov
aam
pushf
jns
stos
ljmp
xor
jnp
rcr
in
jmp
sub
push
bound
sbb
push
pop
aam
push
xchg
jmp
iret
stc
imull
stos
aaa
in
pushf
jbe
subb
pop
dec
enter
mov
xor
test
mov
aam
and
stos
jo
jg
push
cmp
cmp
pop
pop
sub
sbb
adc
pushf
aad
dec
sbb
xor
mov
aam
pop
js
mov
std
pusha
popf
ret
cmpsb
dec
idiv
cmp
icebp
outsl
cmpsb
flds
or
mov
test
adc
or
adc
es
test
decb
mov
neg
xor
lss
xchg
adcb
lock
cmp
jg
add
push
sti
repnz
rclb
mov
lods
mov
mov
push
jmp
test
and
dec
rcrb
popf
jbe
sbb
push
jns
aaa
ljmp
push
xor
aad
shlb
in
loope
xchg
stos
gs
std
std
bound
rcrl
es
mov
and
and
inc
gs
test
and
mov
repz
mov
mov
imul
push
pop
sahf
aam
pop
mov
daa
jae
fchs
outsl
es
mov
push
adcl
and
and
adc
popa
sub
daa
mov
aam
cmp
mov
and
pop
out
test
and
stc
cmpsb
cmp
xchg
dec
outsb
jl
adc
sbb
jo
jge
rolb
fsubr
mov
mov
mov
xor
jle
add
push
jle
sub
into
cmc
pop
outsl
xor
lea
lahf
leave
sub
cmp
and
dec
dec
rorb
push
daa
mov
cmp
shlb
negl
int
xchg
rcrb
fmuls
add
pop
inc
in
or
gs
and
jns
push
add
in
mov
lahf
aam
pop
stos
push
lock
decb
je
test
shr
mov
test
xchg
sub
xchg
mov
mov
xchg
cmc
add
lahf
lea
push
dec
sbb
repnz
xchg
daa
jb
jp
mov
cmp
xchg
push
sub
jg
bnd
sbb
mov
xor
inc
outsb
or
das
adc
das
jle
subb
scas
iret
cmp
data16
scas
into
adc
fisubrs
roll
jmp
outsl
out
mov
hlt
repnz
xchg
jb
mov
xchg
push
dec
into
les
mov
enter
xor
push
sarl
scas
jle
pusha
insb
push
or
cwtl
rcr
cli
adc
lret
mov
cmp
addl
mov
stc
sbb
lret
test
stos
pop
mov
mov
dec
add
mov
loop
sub
cmp
mov
and
push
adc
stos
shl
sbb
dec
std
push
test
jbe
out
roll
cmp
adc
mov
xchg
mov
inc
lods
mov
clc
test
add
addr16
fdivrl
mov
lods
jb
aaa
inc
sbb
loop
bound
jno
cwtl
cmpsl
fs
pusha
popl
dec
jno
hlt
push
out
andb
clc
adc
add
xor
aas
mov
iret
rcrb
push
push
xchg
cmc
jae
mov
sbb
pop
cmp
stc
popa
jge
popf
cli
pushf
aad
xor
push
mov
sahf
dec
or
enter
mov
adc
jae
out
aas
ss
pop
aas
mov
cmp
xchg
pop
xchg
repz
mov
xchg
cli
adc
idivb
jo
and
mov
cmp
and
mov
sub
and
enter
cmp
inc
mov
fs
fwait
test
cltd
mov
lea
cli
mov
xchg
pop
outsl
cmp
data16
pop
ja
pop
insl
push
push
and
mov
dec
clc
outsl
outsl
mov
lods
repz
es
jmp
lahf
insl
cmpl
mov
pop
scas
jns
js
cltd
loopne
fwait
jnp
mov
mov
push
inc
pop
andb
or
cmp
dec
sub
pop
syscall
fsub
in
or
pop
inc
or
push
cwtl
sarl
mov
xor
and
mov
mov
mov
clc
push
inc
and
inc
es
jg
xor
and
movsl
incl
mov
mov
lret
or
ds
mov
jp
or
arpl
cmp
xchg
ds
cltd
cmp
xchg
push
out
lret
sahf
fmulp
lods
push
jg
push
lret
mov
and
add
pop
les
xchg
je
push
adc
ds
push
mov
jge
ret
pop
and
cmpsb
jb
jg
scas
lods
jp
push
sbb
lret
jns
int3
mov
mov
or
push
rcrl
xor
into
ret
inc
rcrl
pop
and
mov
xchg
dec
into
rorb
mov
jmp
lds
xor
int
loop
std
or
mov
inc
mov
stos
out
shr
addb
test
scas
cmp
xchg
mov
fmuls
sbb
fimull
sub
daa
rclb
mov
xchg
inc
pop
pop
jecxz
mov
aam
jo
jmp
mov
cmp
mov
ret
add
int
popf
fcomip
pusha
jns
repz
test
add
xor
es
adc
sahf
sahf
cmp
sub
mov
ss
jno
mov
and
or
push
rcr
xchg
inc
mov
xchg
mov
add
mov
push
loopne
not
pop
dec
sbb
xor
xor
jo
and
push
xchg
pmullw
shl
cs
mov
mov
xor
fdivrs
out
mov
pop
xchg
divb
negb
mov
add
push
mov
mov
cmp
test
ja
push
dec
cmpsb
lcall
repz
fidivrs
cmc
xchg
push
sbb
push
ret
lods
dec
ljmp
jo
dec
jnp
out
out
cmp
push
jne
push
or
icebp
lcall
inc
dec
out
dec
mov
test
jmp
rcll
shl
into
inc
xlat
arpl
mov
cmpsl
mov
xchg
lcall
into
repz
mov
fnstsw
xor
xor
or
mov
ret
sbb
aas
mov
and
fcoml
or
pop
mov
sub
push
test
pop
stos
lcall
sarb
mov
out
mov
ret
mov
ja
daa
inc
add
mov
scas
sub
lahf
adc
adc
pusha
int
mov
jno
mov
fisttpll
addr16
aad
or
cmpsb
xor
mov
ds
xor
rorb
adc
xchg
push
lret
test
cmpsb
pop
out
loopne
and
sub
jg
xchg
sub
xor
enter
dec
insb
dec
int
mov
pop
les
fists
cmp
iret
cltd
jnp
pop
pop
jo
out
shrb
daa
cmp
push
loope
dec
and
repnz
mov
stos
push
and
jl
lds
pop
jns
sub
or
xchg
xchg
pop
jae
adc
ja
xor
inc
jg
divb
sbb
xor
dec
mov
loope
stos
sbb
cmp
inc
sbb
xchg
sub
out
incl
cmp
mov
aam
int3
dec
mov
mov
jle
cld
stos
mov
int3
xor
mov
fadd
test
add
xor
call
jbe
mov
add
aad
lahf
or
push
lret
pop
mov
or
jmp
push
xor
mov
adc
push
fs
ror
adc
add
push
cmp
sub
sti
test
int
and
cmpl
in
sub
repnz
dec
sub
xchg
mov
adc
dec
jns
push
mov
or
popf
shrb
std
push
xchg
pop
data16
xchg
mov
cli
lds
enter
incl
jl
mov
mov
or
fidivs
into
mov
sbb
push
les
hlt
hlt
push
cwtl
xor
or
mov
or
sub
in
dec
mov
xor
loopne
mov
jle
addr16
in
push
lods
popa
or
out
and
jns
cmp
mov
or
sbb
sub
lock
andl
ret
push
out
adc
mov
inc
sbb
lcall
leave
push
testl
jae
sbbl
mov
cld
cli
and
pop
adcb
jl
not
enter
pusha
xchg
jge
sub
cmc
pop
xor
push
mov
lret
cmpsl
fbstp
repz
repnz
std
xchg
pop
or
mov
data16
lods
and
sarb
test
call
in
mov
jne
pusha
dec
mov
loope
scas
loopne
push
mov
lods
or
jbe
mov
sbb
ljmp
xchg
inc
test
hlt
xchg
aaa
xchg
push
call
cwtl
loope
in
cmc
sar
scas
fmulp
aad
cmpsl
jo
cld
lret
dec
ds
outsb
insl
pop
outsb
jg
dec
add
push
sbb
jp
push
mov
jmp
dec
fbld
ljmp
xor
pop
mov
in
jo
movsb
sbb
xchg
mov
addl
inc
inc
repz
jae
adc
mov
mov
sbbb
out
push
cmpsb
xor
jnp
push
and
push
jo
pop
xor
sbb
sub
xchg
xchg
loope
dec
jmp
jmp
shll
sti
rcll
cmp
aaa
sub
push
loop
repnz
or
gs
int
dec
sti
jecxz
in
xchg
fsubrs
outsl
xchg
push
les
sub
sbb
mov
mov
xchg
nop
sbb
sbb
adc
add
ret
out
xor
adc
icebp
add
inc
pop
and
cmp
sahf
xchg
xor
mov
xchg
mov
hlt
add
fidivl
dec
fisubs
adc
stc
inc
scas
or
push
or
jne
push
jnp
jo
test
pop
ds
js
mov
xchg
call
fbstp
cltd
addr16
pop
inc
sub
aam
and
das
mov
icebp
or
or
xorb
mov
add
inc
mov
dec
loope
inc
insl
test
mov
in
dec
and
inc
adc
call
scas
aad
dec
pushl
call
xchg
cmp
int3
pop
pushf
mov
jmp
ret
dec
in
dec
fcompl
fs
aam
jl
cmpsb
roll
or
xchg
sbb
imul
mov
sbb
rolw
or
jmp
daa
cmpsl
loop
sub
mov
in
loopne
out
pop
dec
push
cmp
sti
es
or
outsl
popa
xor
xchg
dec
sahf
out
push
jne
adc
pop
jg
out
arpl
cmpsl
cmc
adc
xchg
out
pop
cmp
or
incl
in
cmp
pop
lods
cmc
cmp
pop
mov
or
push
stc
cmpsb
cmp
mov
pop
xor
lcall
sbb
dec
test
sbb
scas
repz
push
into
stos
xchg
scas
sbb
cli
pop
sub
add
or
xor
fnstcw
add
mov
cmp
adc
inc
aam
mov
mov
mov
dec
jno
jb
lcall
test
sub
or
in
push
cmp
lods
jmp
outsl
data16
jp
adc
mov
ljmp
or
sub
pop
pop
addr16
ss
jmp
into
and
cwtl
jg
insl
scas
dec
pop
leave
into
xlat
hlt
ret
mov
push
pop
mov
out
mov
push
xchg
in
jp
movsb
ss
mov
ss
sbb
fsubs
scas
adc
cmpl
adc
dec
or
movsl
and
test
mov
jl
les
xchg
mov
jnp
stc
mov
pusha
outsb
cwtl
das
sbb
cwtl
cmp
imul
insl
push
sub
rorb
dec
aas
mov
mov
ja
add
sahf
outsb
popa
or
aas
xchg
ret
icebp
ret
loope
iret
cmp
std
lret
stos
dec
add
fisubs
jbe
jnp
adc
loope
push
xor
lods
and
pop
adc
mov
mov
xor
pop
mov
ret
sbb
loopne
les
xor
push
push
cmp
jg
cmp
mov
lret
xor
fcmovne
leave
stos
mov
lods
and
and
ds
mov
out
daa
icebp
adc
or
loop
mov
sbb
xchg
push
and
fwait
test
and
sub
sti
pop
sbb
mov
or
jmp
xorl
push
loopne
adc
gs
sub
and
aaa
jge
jmp
or
pop
pop
xchg
dec
pop
fisubs
lods
sbb
cmp
jp
pushf
outsl
jg
fs
add
cltd
and
dec
sbbb
xchg
mov
jmp
jl
sbb
pop
mov
mov
pop
push
sub
mov
subb
int
xchg
outsb
pusha
mov
xchg
rclb
imul
inc
aam
jne
ja
pop
ficomps
adc
adc
jecxz
icebp
leave
loop
rcrl
jg
jg
xchg
shlb
push
sbb
add
mov
aaa
and
call
mov
cwtl
jns
push
cwtl
fstl
add
outsl
pop
xor
cli
les
xor
jnp
push
addl
push
out
fisubs
fimull
pop
pop
xor
mov
push
and
loope
inc
fs
xchg
stc
cmpsb
or
fs
dec
adc
mov
pop
in
data16
jge
mov
jne
xlat
sarl
outsb
pop
mov
data16
pop
shrl
mov
fidivl
enter
outsl
leave
pop
pushf
and
xchg
xchg
pop
icebp
popa
xchg
add
xchg
clc
cmp
adc
aam
loop
ds
out
sbb
mov
imull
jg
loopne
mov
addr16
or
xor
into
push
outsl
pop
int3
xor
lods
adc
les
add
adc
push
loopne
nop
stos
test
lods
cmp
popf
test
and
sarl
or
cmp
sbb
ficompl
in
xor
popf
testl
inc
bound
jecxz
cld
std
push
pop
cmp
xor
mov
sti
into
xor
dec
dec
rcl
dec
sub
add
std
test
imul
inc
cli
ljmp
fnstenv
ss
dec
rcrb
adc
mov
push
xchg
sub
gs
mov
sbb
fcompl
dec
lock
loopne
xchg
cmpsb
inc
shrl
in
pop
xchg
jecxz
dec
out
hlt
call
sahf
inc
idivb
out
stos
dec
orb
test
test
out
inc
push
jp
out
sti
adc
sbb
mov
push
cmp
ret
test
into
push
inc
in
push
ret
jbe
cmpsl
rorl
xor
jo
xchg
push
jp
cmp
insl
int3
mov
loopne
dec
xor
sub
push
sub
in
outsl
adc
outsl
and
pop
push
mov
push
idivb
add
ljmp
or
gs
dec
aaa
pop
lea
pop
insl
int3
imul
xor
inc
dec
test
or
xor
gs
insl
fistps
xchg
aaa
stos
test
add
adc
mov
lods
out
hlt
decl
out
popf
iret
incl
mov
fadds
cmp
mov
xor
iret
aaa
sub
pop
jge
cli
das
add
lret
pop
popf
and
lea
cmp
xlat
jbe
in
fwait
xorb
cwtl
jae
shll
adc
stos
lcall
ds
out
repnz
fildl
and
icebp
or
aam
ret
sbb
mov
push
out
das
ret
jecxz
sub
fsubrl
push
sbb
dec
push
or
fnstsw
es
jne
sub
icebp
ds
xchg
xor
ds
mov
sbb
push
lods
inc
sub
push
xor
jno
jno
mov
pop
loope
sahf
mov
mov
mov
pop
xor
cmp
sub
xchg
dec
lret
notl
push
jno
jp
cmp
cmovb
cmp
leave
fadd
fadd
mov
scas
std
pusha
push
sahf
adc
outsb
lea
clc
adc
jecxz
ljmp
and
cltd
ljmp
popf
jl
imul
mov
cmpsl
ficoml
or
dec
fcoms
mov
mov
xor
sbb
pop
mov
dec
sub
and
arpl
fisttpl
jbe
adcl
mov
mov
ficoms
adc
clc
outsb
jno
cli
pop
sti
sti
dec
insb
orb
dec
sarb
insl
jle
lcall
dec
adc
or
test
push
mov
mov
sbb
das
or
inc
inc
cmp
outsl
lods
fs
push
or
mov
jp
std
sahf
xor
iret
pop
ljmp
gs
enter
movsb
push
mov
inc
gs
pushf
cmp
push
jecxz
and
jg
push
mov
jecxz
dec
and
xchg
es
mov
adc
scas
test
cmpsb
or
cmp
or
repnz
ljmp
mov
dec
mov
cmp
mov
push
jae
sbbl
mov
fnsave
push
imul
lods
sub
mov
lods
int
mov
mov
push
aam
shrb
pop
pop
out
push
add
cmpsb
je
es
xlat
int
jp
add
cmpsl
dec
and
and
shrl
cli
adc
inc
adc
push
add
rorl
pop
lds
ja
nop
nop
stc
mov
cmc
shll
mov
push
gs
sbb
or
or
adc
add
mov
jmp
addr16
test
pop
aad
mov
lds
jno
test
rorb
hlt
data16
fsubl
in
fiaddl
fidivrl
mov
sub
mov
call
int
nop
daa
andl
xchg
sub
mov
mov
rcrb
xadd
sahf
inc
or
pop
mov
ficoml
push
sub
test
and
sub
scas
xor
inc
mov
adc
push
jecxz
mov
push
jmp
pop
adc
push
stos
cmp
push
cmp
ret
lea
addl
enter
dec
jg
movsl
cmp
push
outsl
add
jne
lahf
mov
call
mov
jg
push
cmp
inc
decb
pop
sub
or
outsb
adc
inc
das
inc
inc
jmp
test
popf
notl
xlat
or
xchg
out
repz
icebp
insb
mov
push
adc
in
cmp
imul
repz
lret
and
xor
jbe
mov
rcrl
cmp
inc
std
pop
inc
shlb
repz
stos
mov
lods
inc
jecxz
xchg
jns
jnp
faddp
push
aad
in
xor
push
mov
dec
lret
mov
divb
cmc
shrb
imul
mov
mov
outsl
sub
push
loope
jb
mov
fildl
add
jl
aam
movsb
gs
loop
les
bound
mov
test
pop
push
cli
push
or
and
cltd
jbe
dec
xor
aam
and
mov
cltd
xchg
les
lea
or
xchg
cmc
jg
mov
lcall
std
mov
hlt
push
dec
mov
dec
mov
sahf
sub
xchg
iret
cld
pop
loopne
repz
mov
sti
mov
in
int
daa
dec
cmp
test
jp
pusha
jg
mov
xchg
and
mov
push
push
std
rclb
and
jno
mov
sbb
pop
nop
fs
sub
lcall
popf
vmaxpd
jge
jp
push
fidivrs
xor
int
xchg
mov
insl
mov
aaa
ret
pusha
hlt
jmp
rcrl
jle
pop
cwtl
rolb
xor
lods
imul
xchg
fcompl
lcall
mov
iret
dec
adc
dec
xor
lock
imul
lcall
in
fdivl
ret
repnz
add
push
dec
insl
mov
cmpl
movb
decl
jp
js
push
inc
in
loopne
adc
daa
rcl
enter
bound
outsb
das
lea
ret
inc
enter
pop
push
loop
jbe
sbb
cs
jg
mov
repz
sbb
push
jo
aaa
sbb
sahf
xchg
xchg
pushf
inc
popa
xchg
jns
mov
xchg
hlt
inc
and
lcall
jo
or
add
xchg
mov
jb
cli
mov
pop
adc
dec
stos
loopne
mov
and
fstl
push
or
out
pop
pop
and
mov
stos
push
sbb
cld
inc
sub
push
xchg
jmp
aad
xchg
inc
xor
or
sbb
inc
push
xchg
push
pop
mov
cmp
xor
arpl
dec
bound
ret
mov
fisttps
mov
nopl
clc
sbb
ret
outsl
in
in
loope
out
or
pop
add
pop
pop
cmp
ljmp
scas
movl
ret
repz
and
sub
out
nop
xor
dec
dec
push
scas
push
fwait
leave
adc
test
push
mov
mov
mov
test
xchg
dec
mov
lock
jns
adc
dec
cli
imul
shll
fadd
cwtl
push
cmc
das
in
mov
ljmp
rcr
pushf
decb
cmc
out
in
inc
cmp
or
test
cmpsb
dec
mov
aaa
push
insl
jle
sti
fwait
popf
insl
pop
pop
pop
push
cltd
std
mov
rorl
dec
cmp
xor
nop
lods
mov
sbb
in
enter
ficoms
subb
and
push
xor
push
push
xchg
and
dec
jmp
jbe
testl
xchg
sub
mov
sbb
ljmp
lahf
or
mov
jno
leave
and
stos
pop
stos
popf
ds
icebp
xor
ret
push
cltd
add
leave
or
jl
stos
dec
es
outsb
push
mov
in
ret
add
pop
mov
jae
fnsave
out
outsl
insb
adc
mov
xchg
add
pop
mov
mov
inc
enter
lods
cmp
xor
int3
lret
aad
rcll
dec
or
mov
test
icebp
jne
push
clc
sti
cmp
cmp
mov
adc
hlt
cli
mov
mov
inc
pusha
nop
aaa
inc
inc
push
fstpl
sbb
cmpsb
rcrb
loope
sbb
inc
xchg
fs
cs
imul
or
inc
int3
ret
repnz
flds
jae
loop
divb
jecxz
mov
das
sbb
vmovsd
dec
sti
imul
sub
mov
das
mov
addl
es
push
cmpsb
popl
xchg
repnz
and
add
mov
sbb
scas
pop
jbe
mov
repnz
popa
jo
inc
pop
out
jl
and
cwtl
mov
lret
cmc
xor
push
jbe
iret
pop
sbb
jno
xchg
add
in
jo
sub
pop
and
scas
scas
jns
fstpl
cwtl
push
repz
cs
enter
sub
data16
fiadds
test
push
inc
add
xchg
jp
idivl
mov
fstpt
ss
mov
in
mov
shr
or
sub
popa
mov
testl
pop
adc
into
sub
test
xor
rcrl
push
in
lods
xor
lods
aas
or
aam
adc
mov
clc
mov
data16
or
inc
daa
adc
xor
xchg
add
sub
inc
sbb
lcall
imul
pop
adc
arpl
mov
imul
jae
imul
xchg
loope
add
stos
int
fs
xlat
data16
push
dec
pushf
aam
cmc
cmp
and
in
ret
mov
xor
insl
lods
int
loopne
add
stos
inc
je
fimuls
mov
in
mov
cs
hlt
fnsave
into
popa
nop
lods
jno
dec
fst
outsb
xor
les
orb
fsubp
push
xchg
adc
xchg
dec
fwait
cli
inc
cmp
movsb
lods
sbb
add
inc
icebp
jns
in
call
dec
cmp
mov
mov
cmpsl
fs
sar
xchg
dec
test
and
cwtl
xchg
mov
cmp
cmp
and
ret
jp
jo
jne
testl
and
mov
call
adc
dec
sti
popa
vpminsw
xchg
jle
add
cmp
cmp
jb
loope
out
mov
inc
jg
fcoms
adc
xchg
add
jle
inc
pusha
data16
jae
cwtl
loopne
clc
std
xor
mov
pop
leave
push
mov
les
sbb
dec
ret
and
insl
or
mov
jae
out
stc
add
or
and
dec
fcmovb
and
cmp
das
ror
cld
sub
les
push
mov
or
push
ret
mov
arpl
cmpsb
repnz
aas
or
mov
mov
add
ret
rorl
inc
mov
jo
decb
nop
shll
lret
inc
or
xor
sbb
or
pop
mov
sahf
ljmp
nop
fld
sbb
lods
mov
movsl
xor
fimuls
cmc
inc
test
jl
adc
dec
movsl
fwait
jg
rol
and
or
sub
in
sub
push
add
cmpsb
mov
cltd
sub
xor
add
sbb
mov
les
pop
add
pushw
push
ss
hlt
dec
clc
mov
pop
outsb
pop
mov
xlat
add
cmpsb
es
lahf
clc
mov
add
movsb
ficoms
sarb
or
lret
inc
sub
pop
les
mov
icebp
rcll
cmp
shlb
mov
xor
cmp
lret
mov
sub
les
leave
es
inc
pop
in
andb
fdivrs
mov
dec
in
aas
xchg
mov
pop
das
sub
into
xor
xor
mov
cmp
inc
fsubs
std
push
stos
lret
adc
mov
leave
mov
pop
xchg
inc
enter
pop
lcall
std
pop
dec
dec
sub
and
add
enter
push
cmpsl
pushf
jns
lahf
enter
xchg
lahf
std
inc
lret
dec
in
mov
ljmp
sti
pop
jnp
imul
jnp
das
in
inc
iret
fldl
mov
mov
push
les
lods
sub
mov
test
loop
xor
fsubl
push
adc
push
adc
repnz
mov
jl
cwtl
xor
test
mov
push
arpl
jbe
add
sbb
inc
xchg
clc
fucomp
sbb
aas
out
mov
and
jg
jae
int
decl
cmp
aas
add
faddp
xchg
out
inc
mov
or
sbb
incb
jmp
outsl
cmp
scas
adc
movsb
and
repnz
leavew
sbb
sbb
scas
repz
into
ljmp
dec
mov
mov
push
std
aam
loop
rclb
xlat
push
inc
int
xor
jno
mov
mov
rcrb
andl
sub
pusha
leave
cmp
cmp
stc
mov
cmpb
mov
push
add
push
inc
sub
jbe
fiaddl
inc
repnz
mov
pushl
xchg
xor
xor
pop
dec
push
adc
test
dec
mov
imul
sbb
lcall
cmpsl
mov
xor
push
sub
cltd
rcrl
xlat
jae
xor
test
in
xchg
mulb
lock
or
ret
xchg
test
sub
xor
shll
fwait
pushf
fs
rcrl
jge
ja
dec
mov
pop
xor
mov
sub
test
shlb
sbb
adc
pop
push
dec
and
xorb
mov
sahf
cltd
xor
cmp
jmp
pop
cmp
dec
pusha
cmpsb
mov
rolb
arpl
jecxz
sbb
les
fistl
andl
sub
jo
adc
into
les
adc
adc
jp,pt
popa
fadds
xchg
inc
mov
fisubs
dec
bnd
cs
orb
mov
out
cltd
mov
adc
outsl
sti
add
outsl
jmp
shlb
int
dec
sar
out
out
or
fsts
xchg
shl
incb
or
addr16
std
add
cmpsl
mov
mov
and
insb
pop
pop
pop
es
mov
add
out
xchg
inc
gs
cld
mov
out
aam
inc
enter
cltd
nop
js
mov
aaa
sbbb
test
add
xor
insb
stos
sahf
xlat
fs
int
arpl
and
sub
jle
adc
mov
in
rclb
adc
jno
jmp
loopne
dec
push
push
xchg
pop
sub
xchg
js
inc
cwtl
push
mov
and
or
adc
lea
movsl
inc
push
imul
pop
xor
daa
inc
mov
sbb
pop
jg
jnp
mov
daa
loopne
neg
lods
loopne
sub
pop
faddl
push
add
sbb
jbe
jp
loopne
ljmp
xor
sbb
jno
add
stos
imul
and
adc
jmp
jb
xchg
sub
ljmp
mov
scas
cs
mov
int3
imul
push
popa
fdiv
std
decb
pushf
loop
cmp
inc
sub
push
int3
pop
xchg
mov
sub
pop
inc
xor
fiadds
sbb
jle
push
mov
inc
pushf
repnz
subl
cmp
push
mov
stos
orl
push
repnz
aam
jbe
ds
in
or
sub
cmp
mov
je
imul
inc
mov
popa
insb
out
pop
mov
add
cmpsl
sbb
ds
int3
lods
shlb
shrb
mov
jns
jbe
movsb
mov
lods
push
inc
int3
outsl
jg
jb
inc
inc
pop
cltd
cli
push
cmp
leave
xchg
jo
shrb
rclb
cmp
adc
adc
popa
mov
sti
pop
or
stc
or
mov
adcb
mov
lods
and
jb
enter
jne
pushw
loop
push
fstps
mov
fs
sti
es
mov
and
mov
sti
daa
addb
push
add
insl
push
ret
aam
sbb
flds
push
adc
adc
shrl
imul
and
xchg
js
xchg
stos
stos
jle
test
inc
fbstp
mov
jae
data16
jnp
iret
stos
and
lods
jo
in
aad
lcall
fwait
mov
int3
pop
orl
pop
mov
jg
xor
or
push
movsb
xor
mov
push
das
mov
pop
orb
rclb
enter
pop
dec
mov
jne
ret
cli
in
ficoms
mov
push
orl
arpl
sbb
push
outsb
mov
add
and
adc
sbb
lret
xor
cmc
mov
mov
xor
sbbb
push
mov
aam
int
push
sbb
xchg
ja
sbb
bound
out
or
mov
es
fidivrs
shlb
call
or
imul
sub
outsb
pusha
mov
lret
lret
leave
sub
sti
popf
fistps
std
xchg
bound
sbbl
aad
fsubs
add
push
lret
js
jg
arpl
xchg
mov
mov
xchg
add
sbb
fwait
shll
dec
xchg
lock
idivb
into
icebp
xor
cmpsl
dec
jbe
and
cs
stc
es
mov
adc
cs
je
rcrl
cmp
push
add
pop
inc
inc
and
cmp
test
out
sub
push
arpl
test
mov
cwtl
mov
mov
mov
and
pop
push
out
fidivl
insl
scas
aas
test
mov
pop
pop
inc
js
ret
nop
lods
stos
out
test
cmp
dec
movsb
pushfw
leave
xor
jp
movl
pop
cmp
gs
adc
lock
xor
sarb
jnp
clc
imul
shll
jnp
testb
cmc
sub
add
test
or
xor
or
js
jae
and
test
push
mov
jmp
mov
or
lock
bound
mov
dec
adc
int
insl
push
mov
int3
outsb
pop
cmp
and
orl
cmpsb
push
rorb
mov
test
ds
mov
xor
lcall
pop
stos
jo
aas
setge
cmc
adc
cmpsl
mov
xchg
dec
imul
test
xor
sub
sbb
push
ja
popf
mov
lea
mov
jmp
adc
leave
jg
or
cmp
sbb
mov
call
adc
jg
or
mov
dec
nop
xor
xor
xchg
es
stc
cli
aas
xor
fwait
xor
push
dec
jle
mov
cld
dec
xor
in
jns
in
mov
sbb
cmp
test
fs
xchg
inc
jb
pop
je
push
add
enter
sbb
fwait
test
pop
add
xor
dec
pop
push
imul
shrb
cmp
rorb
mov
cmp
cwtl
stos
std
dec
xor
loopne
icebp
xchg
push
jo
sbb
sub
cmpsb
mov
test
lds
pop
aam
fidivrl
rorl
shrl
sub
xor
add
or
sub
and
vcvtpd2dq
and
rep
pop
sub
jno
mov
fwait
mov
xchg
push
rclb
push
cwtl
pop
mov
into
stos
sti
add
out
insb
test
scas
sbb
cmp
sub
inc
jmp
xchg
aad
out
cmp
add
cmp
daa
sbb
adc
pop
stos
addr16
fisubs
data16
cmp
mov
push
jecxz
mov
mov
imul
adc
bound
mov
push
pop
push
sub
lods
and
mov
push
add
dec
sbb
loope
sbb
ljmp
rcrb
sbb
adc
repnz
icebp
dec
int3
xor
aaa
mov
cmp
push
and
lock
dec
cwtl
pop
push
cld
push
lret
pop
nop
pusha
cmp
mov
jno
aad
rolb
cs
pop
cmp
rolb
cmp
popa
push
sub
inc
lahf
mov
mov
int
dec
sar
jge
and
add
jb
cmp
fdivp
pop
xchg
cld
pop
add
xchg
mov
sahf
movl
adc
fcmove
test
mov
test
xchg
in
cld
mov
xchg
scas
cld
lds
out
test
lds
test
xchg
add
lret
xchg
popf
xchg
push
lods
mov
push
push
stos
xchg
fstps
or
mov
mov
leave
sbb
into
cmpsb
dec
ffreep
fcompl
cmc
fisttpll
sti
xchg
stos
jmp
mov
inc
xor
aad
push
pop
test
call
stos
fsubs
in
xor
shr
div
add
and
jg
loope
xor
cmp
cmp
sub
mov
or
sbb
cmpsb
mov
aaa
sahf
aad
jno
jbe
fidivs
xchg
or
ds
das
sbb
inc
cmpsl
jbe
push
inc
jo
xchg
or
call
test
mov
xor
stc
out
repnz
rcl
cmp
mov
mov
mov
xlat
dec
insl
ds
adc
les
rorb
xchg
or
jl
roll
je
scas
ret
mov
inc
in
xor
out
nop
or
icebp
jbe
movsl
je
or
inc
aad
sbb
or
cmp
pushf
sub
jl
pop
outsb
stos
mov
or
xor
mov
xchg
repz
xor
movhps
mov
jns
xchg
cmp
sbb
fimuls
mov
inc
lods
push
test
pop
iret
hlt
enter
sub
sub
adc
hlt
pop
stos
and
call
sbbb
adc
cmpsb
cmp
ja
xlat
lret
jmp
mov
and
stos
cmp
cmp
and
out
addr16
dec
mov
ljmp
push
lahf
daa
loopne
lret
std
in
sub
sbb
enter
in
cmp
test
test
es
lods
imul
push
xchg
insb
jb
cmp
lret
ffree
mov
jne
leave
fs
scas
std
sub
or
push
mov
pop
adc
in
aam
jmp
stos
add
cmp
inc
testl
out
daa
add
dec
mov
adc
mov
mov
push
push
test
mov
negl
add
js
lods
fdivrl
movsl
mov
pop
dec
mov
push
sbb
push
icebp
mov
lret
int
push
xor
push
mov
frstor
hlt
pop
loop
xchg
jle
popf
decl
xchg
and
ljmp
jecxz
psrlw
adc
fcmovu
pop
fcmove
xor
lods
dec
mov
les
pop
in
fmuls
sbb
jno
mov
aad
dec
sub
mov
addr16
mov
leave
xorl
mov
push
ror
cmpl
ljmp
mov
push
je
fistpll
sbb
fdivrl
fimuls
push
adc
xchg
in
xchg
int
inc
out
iret
xchg
movsl
dec
push
inc
in
lahf
sub
xchg
leave
xchg
fnsave
dec
pop
add
lea
jmp
cli
xchg
les
jo
and
inc
sbb
test
ljmp
inc
sbb
iret
rcll
pop
stc
aas
xchg
mov
xor
rorl
pop
int
out
popf
in
push
cmp
add
pop
sub
push
loop
adc
ss
inc
movsl
mov
inc
gs
sub
sti
mov
call
inc
xor
push
iret
lods
xor
mov
sub
scas
aas
popf
fmulp
sbb
push
cmp
pop
setno
arpl
shll
and
or
mov
lcall
imul
sub
xor
lock
in
push
popf
rcrb
xor
ds
out
imul
out
shll
or
cmc
adc
sti
scas
push
add
or
into
pusha
push
ja
push
out
fiaddl
adc
iret
shlb
in
insl
or
mov
adcb
mov
mov
stos
sbb
xchg
cmp
imul
or
popa
sbb
xlat
cltd
dec
loopne
cmc
cmpsb
lock
jl
mov
ret
lds
sbb
jmp
test
jl
add
pop
xchg
lcall
or
mov
fcompl
jmp
jb
mov
and
into
insl
dec
xor
and
movsb
xor
shr
xor
or
jmp
pop
mul
cmp
cmp
stos
adc
mov
mov
sbb
imul
sub
clc
movsl
in
mov
loope
roll
into
mov
test
pop
enter
xor
mov
inc
pop
xor
je
das
mov
ja
add
mov
popa
mov
jne
xchg
jb
adc
xchg
jb
mov
push
push
cmp
aam
jb
insb
insb
xor
ja
test
mov
sarb
and
cmpsl
xor
stos
or
cli
and
pop
sbb
out
lds
out
fmull
loopne
ds
pop
mov
out
mov
daa
xchg
push
movsl
mov
dec
inc
adc
outsl
rolb
push
jg
push
dec
hlt
cmc
mov
push
aam
mov
jmp
test
push
aas
fdivrs
jno
pop
and
loop
arpl
shrb
push
cmp
in
pusha
dec
fistpl
or
cmp
or
in
ret
idiv
in
sub
sbb
ss
sar
dec
inc
and
cli
mov
ret
les
lcall
sub
aas
jne
adcl
filds
addb
sbb
inc
or
push
lret
mov
push
push
cmp
insl
push
ret
adc
cmp
sub
mov
push
in
cmpb
sub
out
lret
sub
cmp
es
scas
notl
adc
popf
call
cmp
push
mov
js
ret
sub
std
sub
xor
int
mov
and
sbb
and
int3
shrl
fsubrs
or
rorb
cs
ficompl
mov
pop
sbbb
std
comiss
cmc
scas
push
jno
pop
inc
andl
adc
movsl
in
faddl
pop
xchg
mov
cld
cmp
jge
jbe
mov
out
imulb
js
pop
push
sub
jnp
shll
mov
shll
pop
inc
xchg
xchg
pop
pop
push
push
xor
pusha
enter
adc
repnz
adc
inc
cmp
flds
shr
mulb
pop
and
push
and
bound
arpl
andb
outsl
ss
je
or
inc
add
popa
popf
xor
mov
push
je
scas
gs
adc
insl
in
popf
imul
or
int
jno
addr16
mov
je
call
jg
cmp
iret
nop
scas
push
lods
fnstenv
and
add
sbb
dec
insb
ljmp
mov
in
jl
mov
jl
out
mov
rolb
push
lock
mov
les
xor
and
cmp
inc
lahf
sbb
xchg
add
loopne
movl
lret
cwtl
fcom
mov
out
xchg
lret
push
or
insb
sbb
fcomp
insl
sub
inc
icebp
jo
sub
jno
sbb
cmp
ss
int3
sub
adc
ja,pn
bound
pop
out
jae
insl
push
pusha
xchg
dec
xlat
je
out
adc
jmp
cltd
xor
enter
xor
cmp
push
ss
roll
daa
lods
decl
xor
mov
shlb
std
pop
cmp
dec
or
and
push
out
insl
xchg
xchg
das
leave
mov
sbb
stos
push
xchg
xchg
gs
and
xchg
lahf
scas
shrl
pop
mov
pusha
rorl
inc
aad
aas
or
jle
inc
sbbb
pushf
jmp
int3
out
pop
mov
mov
out
and
cmp
cwtl
lret
cmp
cmp
mov
clc
iret
aaa
ret
push
pop
jb
mov
inc
inc
fistpll
sbb
cli
in
push
clc
fdivrl
push
sub
nop
sub
jp
cmp
addr16
mov
and
loopne
xchg
and
rolb
mov
cld
push
sbbb
xor
adc
shl
push
adc
out
push
xchg
mov
push
xchg
mov
mov
dec
ja
jo
daa
cmpl
and
js
jo
mulb
test
test
sbb
test
jecxz
adc
ljmp
mov
in
clc
mov
movsb
shll
fnsave
jecxz
pop
repz
jae
shlb
add
mov
push
xchg
or
cmpsb
lahf
mov
pop
cltd
cmpsb
mov
push
imul
lods
mov
and
mov
dec
test
pop
push
mov
xor
adc
xor
repnz
xlat
fsubrs
add
sub
cmove
sti
stos
mov
add
ret
dec
sub
popa
inc
in
rorl
adc
ss
xchg
inc
lds
dec
add
pushw
popf
add
outsb
add
fstps
mov
sub
aad
js
arpl
ss
sbbb
sbb
mov
pop
incl
or
sbb
sub
cmp
pop
cwtl
and
lret
mov
enter
mov
out
sub
ret
sti
xchg
pop
mov
fstl
inc
sbb
pop
mov
and
mov
ja
xor
adc
adc
add
bound
sbb
fcomps
dec
dec
cmp
xchg
inc
inc
push
mov
jo
dec
icebp
rol
rorb
cmpsl
leave
ja
pop
sub
lds
cmc
push
fnstenv
test
jne
xchg
rcrb
aas
addr16
sbbl
add
mov
inc
fs
int3
imul
jp
icebp
xchg
ja
icebp
das
mov
mov
jbe
push
mov
inc
cmpsl
adc
rorb
xor
xor
ret
outsb
mov
lea
insb
mov
in
add
into
mov
addb
pop
fstpt
jnp
out
cmpsb
shlb
lds
mov
cld
cmp
inc
clc
xor
mov
adc
rcrl
mov
sbb
cli
inc
cmpsb
fmuls
adc
out
addr16
scas
bound
sub
stos
mov
xor
xchg
movsb
xchg
cmp
jp
push
mov
pop
xlat
in
inc
ret
inc
cmp
fidivl
fwait
ss
cltd
imul
shll
stc
cmp
fwait
jnp
enter
out
insb
mov
dec
les
insb
add
sbb
xor
insb
rcrb
inc
mov
pop
dec
jg
and
sbb
loopne
jmp
jmp
jno
jae
faddl
push
dec
adc
jno
push
sbb
test
mov
and
fbld
cmc
pushf
vshufps
dec
push
and
out
roll
inc
scas
mov
xchg
scas
push
mov
stos
push
jne
xor
scas
pop
mov
scas
divl
sub
xchg
call
mov
pusha
stos
push
xchg
xchg
mov
mov
pop
sahf
inc
inc
jmp
pop
scas
and
push
iret
nop
cmp
pop
insl
sbb
adc
and
ret
mov
mov
add
pop
out
out
pop
inc
pop
int
sti
push
int3
push
push
dec
xchg
xlat
shrb
loop
imul
ss
sti
out
test
lods
mov
mov
out
in
push
idivb
sub
push
dec
mov
ret
and
ficoms
and
out
sub
pop
test
pusha
sub
fidivs
jo
push
sbb
psubsw
xchg
pushf
push
rol
dec
push
sti
fnstcw
shlb
ljmp
cmp
jge
pop
inc
lds
xor
mov
sub
je
sub
xchg
jmp
inc
adc
dec
lret
push
repz
hlt
xchg
mov
pop
lock
dec
fstpl
filds
xchg
cli
xchg
bound
lahf
push
imul
adc
cmpsb
xchg
clc
and
nop
pop
mov
xchg
or
and
aas
push
int
cmc
scas
xchg
or
arpl
mov
sbb
ret
icebp
outsl
hlt
mov
cld
push
aaa
ljmp
jne
inc
push
xchg
popf
repz
test
imul
scas
xor
cld
hlt
lods
mov
mov
dec
xor
jp
xor
xchg
xor
push
cmpb
cltd
push
adc
mov
cld
fcmove
ljmp
imulb
and
cmp
cwtl
decb
arpl
insl
pop
add
push
xchg
flds
cli
lods
add
adcb
sbb
mov
rcrb
and
or
mov
aaa
push
dec
loop
jnp
ja
and
sbb
xchg
inc
adc
sbb
sub
pop
mov
or
inc
scas
xchg
das
mov
int
stos
cltd
push
xorb
push
jecxz
lret
in
xchg
add
add
fisubs
or
icebp
xchg
lahf
dec
add
popf
cmp
cwtl
dec
or
out
pop
or
sub
xor
ret
adc
lret
sbb
cmc
cmp
mov
sub
jl
repnz
mov
fnsave
mov
ds
pop
xor
pop
pop
movsb
retw
push
outsl
cli
js
cmpsl
adc
int3
shl
push
dec
ret
xchg
or
mov
dec
and
cmp
imulb
xorl
inc
or
push
sbbl
xor
mov
jnp
push
pop
push
in
push
orb
cmp
cli
int3
jp
sub
ficoms
push
mov
ljmp
pop
jmp
xchg
sub
sub
mov
pushf
mov
bound
fistpl
out
les
and
addr16
cmp
sub
shll
jle
rorl
mov
jne
push
push
jp
imul
out
inc
jns
in
mov
cmp
test
rcrb
mov
cmpsb
pusha
jns
cmp
in
or
int
sbb
fsubrs
mov
pushf
xchg
xor
and
inc
cltd
xchg
cmpsl
jo
test
shl
mov
mov
dec
xchg
or
nop
or
arpl
xchg
mov
fimuls
xchg
xchg
in
xor
pop
jp
adc
and
jecxz
mov
mov
adc
cltd
rcll
push
sti
ror
test
push
loop
and
es
inc
sbb
mov
test
and
jle
add
mov
popf
add
mov
mov
lock
sbb
jg
jg
jo
jno,pn
mov
lcall
lret
xchg
cmp
in
mov
sahf
mov
rcrl
vandnps
ja
xchg
mov
iret
xor
lods
jne
and
out
and
inc
jmp
das
sub
mov
data16
sub
push
xchg
jl
sti
pop
shll
hlt
es
jmp
mov
repz
xor
inc
pop
sub
cli
sbb
cmpsl
sub
mov
inc
hlt
and
sbb
jne
lock
imul
xor
stos
cwtl
pop
sub
push
cwtl
aam
aaa
xlat
jns
mov
and
xor
loopne
jne
stos
call
shrl
push
fdiv
add
test
lret
cltd
stos
test
adc
sbb
rclb
insl
lods
mov
add
xor
orl
call
stos
mov
push
sub
adc
or
mov
into
mov
xor
inc
xor
dec
shlb
jg
mov
jge
dec
dec
sbb
xor
xchg
pop
shr
stos
fldt
rcrl
mov
inc
lcall
sbb
xchg
jo
jbe
loop
adc
sahf
mov
add
and
dec
xor
mov
and
or
bound
out
adcb
fmuls
adc
sti
push
fistpl
xor
sub
xchg
jae
ret
mov
repnz
and
lret
mov
push
rorl
aas
lods
aas
imulb
xor
das
mov
jg
adc
pushf
mov
adc
fs
mov
ret
iret
cld
sub
sbb
mov
mov
testb
mov
or
adc
punpckhbw
mov
stos
xor
cmpb
lret
mov
test
testl
inc
aaa
imul
mov
mov
cld
adc
sbb
mov
cli
das
mov
vmovsd
sub
inc
push
cmp
shrl
cwtl
mov
rolb
scas
fsubrs
jmp
jb
fisttpl
add
adc
jno
xchg
shll
les
and
sub
out
iret
push
xor
loope
or
push
aaa
mov
fwait
mov
cmp
adc
sub
mov
movsl
inc
xor
mov
dec
movsl
pushf
mov
arpl
mov
push
insl
sti
xlat
push
cs
cmp
fcom
mov
pop
push
dec
dec
sbb
or
lret
or
xchg
cmp
push
mov
movsb
inc
pushf
outsb
fisttps
fidivs
fiaddl
push
sbb
test
jl
or
jno
sbb
push
pop
cmp
push
mov
inc
stc
icebp
cwtl
orb
fs
jle
fimuls
mov
es
imul
and
mov
test
fnstenv
nop
sti
jmp
sub
aad
lea
aaa
mov
xchg
xchg
test
add
lret
or
pop
pop
sbb
int3
cmpsl
inc
lcall
or
cmp
mov
sbb
adc
add
mov
mov
dec
scas
sbb
dec
xchg
cs
aas
mov
stos
sub
mov
push
sbb
add
dec
call
push
push
test
adc
jbe
inc
clc
mov
lcall
out
push
in
or
call
cmp
mov
popa
add
xor
rol
sub
xchg
insl
or
gs
dec
mov
jl
std
mov
mov
lret
rclb
lds
cld
push
cmp
or
pop
add
mov
shlb
pop
or
lods
push
mov
jg
outsb
add
push
pop
dec
cld
out
inc
sub
xor
sbb
mov
dec
add
cmp
insl
imul
cmp
xlat
inc
fbstp
dec
and
mov
xchg
push
push
aam
rorb
mov
mov
add
lea
imul
lods
cmp
addl
mov
icebp
leave
je
jp
loopne
xor
cs
jle
or
push
sbb
adc
mov
xchg
mov
fdiv
mov
jo,pn
cmpsb
addl
imul
jno
es
rcll
inc
jns
sbb
xor
jmp
jl
js
push
mov
sbb
addr16
pop
mov
jbe
push
stos
in
mov
push
mov
inc
add
mov
rcrb
mov
shrb
rclb
mov
int3
and
mov
sbb
cltd
mov
lret
ror
inc
xchg
rclb
dec
sbb
pop
mov
jl
cmp
mov
and
ss
xor
addr16
or
jge
mov
mov
jl
shl
lds
inc
jo
push
aaa
les
pop
jne
xchg
jns
adc
push
sub
mov
and
cmpl
cmpl
adc
scas
jl
outsb
bound
je
sbb
lods
adc
ret
jge
push
or
pop
das
outsl
inc
adc
xchg
push
add
push
mov
sti
hlt
cmp
in
pop
cmpsb
mov
jno
push
psubq
leave
test
fnstsw
ss
ja
loope
adc
jle
xchg
sbb
xlat
lea
ja
lods
arpl
add
cmp
repnz
xchg
mov
sub
addl
sub
out
stc
sahf
cmp
mov
test
mov
mov
dec
jnp
pop
and
xor
and
xchg
std
xchg
cltd
jno
leave
sub
mov
push
in
sub
mov
mov
jp
and
test
popa
mov
push
adc
mov
clc
sbb
mov
arpl
lods
sbb
dec
sti
cmpsb
test
idivl
and
les
bound
stos
leave
jmp
cmpsl
arpl
es
sub
lea
cs
ret
testb
in
push
dec
and
and
les
sbb
lock
adc
adc
cwtl
push
lcall
push
xor
jp
xor
je
mov
lret
and
inc
jl
sub
fs
xchg
sbb
push
push
inc
jg
out
ret
nop
adc
ljmp
mov
sub
fistps
insb
dec
stos
fisubrs
mov
mov
inc
lds
in
movsl
mov
stos
dec
cmc
sub
insl
cmp
hlt
mov
sbb
xchg
inc
pop
inc
ss
push
mov
mov
and
mov
lret
mov
xchg
shl
bound
pop
mov
stos
imul
mov
add
cmp
push
out
xor
xchg
scas
cmp
and
jae
inc
jne
push
mov
rcll
mov
aam
cs
push
adc
stos
sahf
addb
mov
push
cs
lret
lods
mov
addr16
shll
and
int3
or
scas
push
int
scas
cmpsb
repnz
out
iret
cmc
enter
or
daa
inc
jbe
add
push
jge
xor
decb
push
jns
stos
movsb
btc
imul
lock
sbb
sub
std
or
std
add
aam
inc
lea
pushf
and
cmpsb
sahf
rcll
scas
jne
icebp
or
aaa
xor
lea
mov
lods
stc
scas
xchg
loopne
or
pushf
mov
cwtl
lret
push
xchg
leave
sbb
dec
movsb
sub
add
das
xchg
jbe
sbb
out
jecxz
xor
and
or
cmc
xchg
stos
inc
fs
push
add
fimuls
add
push
pop
push
fisttpll
cmp
and
pop
or
sbb
or
lods
ss
inc
mov
dec
jo
cmpsb
sub
add
icebp
mov
or
or
sub
out
lahf
inc
pop
lock
fdivrl
push
ja
sti
sub
addb
mov
adc
and
inc
orl
int
mov
push
xchg
fdivp
cli
push
push
mov
xor
pusha
leave
dec
orl
sbb
pop
popa
pop
dec
mov
lods
sub
das
sub
sub
inc
add
add
dec
mov
inc
sahf
pop
mov
ja
push
sub
into
push
cli
bound
jo
add
je
cmp
xor
inc
jle
out
or
adc
adc
inc
dec
inc
out
xchg
jecxz
inc
fwait
xor
out
fbld
mov
imul
lock
loope
testb
cli
cld
out
sahf
into
pushl
xlat
int
sbb
dec
lret
fsubrp
push
push
jl
pop
int3
inc
cmp
lock
adc
dec
imul
fiadds
inc
sub
push
dec
popa
cmp
call
leave
pop
test
inc
insb
clc
jae
and
or
rcrb
xchg
xchg
adc
dec
dec
mov
ds
outsl
mov
dec
test
inc
push
outsb
subl
jl
out
jbe
cmp
loop
jle
test
rcl
xlat
pop
mov
lret
xchg
mov
repnz
inc
jne
add
dec
jno
loop
pop
mov
dec
movzbl
mov
xchg
sub
push
mov
jle
and
enter
sahf
mov
jb
icebp
je
loop
out
adc
sub
cmpl
mov
xchg
mov
xchg
pop
out
push
and
fs
add
bound
push
rcl
in
pop
repnz
dec
fwait
add
adc
mul
sub
out
and
lahf
inc
sahf
imul
fsubl
cmp
test
and
xchg
mov
ljmp
call
mov
and
loope
stos
cld
scas
xor
movl
push
mov
adc
and
sbb
mov
jnp
dec
sub
or
roll
or
int
test
and
dec
ret
test
ljmp
adc
dec
lret
jl
loop,pt
mov
mov
cmp
rorb
xor
movsb
dec
jp
and
cmp
ret
js
cs
gs
pop
pusha
lret
scas
sub
arpl
adc
loopne
mov
jbe
fdivl
adc
push
lcall
mov
fldcw
es
bound
add
fptan
pop
mov
stos
stos
int
sub
fwait
shrb
insb
or
int
push
push
cmpsl
cmpsb
add
aam
aas
popa
cwtl
popf
dec
enter
push
cmp
js
ficomps
sbb
fildll
inc
testb
jge
aas
mov
fsub
mov
mov
ds
push
sbb
jp
mov
scas
cmp
xor
fldl
mov
sbb
fcmovu
stos
mov
mov
pop
mov
jl
xor
sti
lock
mov
xlat
test
loope
adcb
rolb
jnp
xor
lods
jp
pop
outsb
xchg
cmpsl
dec
jbe
cmc
popf
adc
sti
into
dec
pop
aad
mov
pop
adc
mov
lock
test
mov
xor
xor
xor
pop
mov
mov
rorw
add
repz
ret
add
mov
mov
push
imul
adc
bsf
mov
inc
cli
pop
adc
jnp
paddd
setle
cmp
jae
outsl
mov
std
into
or
sarb
dec
jle
out
xchg
mov
sbb
pop
fstps
pushf
lea
xor
leave
add
cmp
xlat
xchg
cld
stos
and
jae
sub
xchg
push
mov
scas
jg
mov
xor
adc
ret
xor
lea
pop
sahf
mov
adc
movsb
push
jecxz
jle
inc
ljmp
mov
mov
push
movsl
sub
adc
push
xor
cltd
ret
loope
clc
mov
xor
sub
in
mov
imul
sub
push
or
ljmp
inc
lahf
jmp
es
icebp
call
jo
jecxz
lds
dec
add
pop
sbb
push
and
not
in
sub
cmpsl
xlat
jmp
lea
ja
jmp
cli
xchg
inc
pop
cmp
decl
and
shr
push
jbe
shr
cs
ficomps
cmp
bound
das
or
es
out
subl
xor
sub
outsb
test
aam
repnz
mov
jl
or
mov
out
int3
mov
pushf
jne
adc
cmp
push
mov
mov
cmp
sti
flds
and
fisubl
jl
pop
mov
movsb
xchg
dec
js
mov
pop
mov
lret
mov
cld
hlt
arpl
and
repnz
stos
xchg
mov
inc
lds
shl
fstpt
xchg
sub
mov
jle
adc
dec
test
das
adc
sub
notb
negb
and
jae
mov
cwtl
shll
movsb
ss
pop
into
or
pop
out
lcall
int3
add
pop
jbe
xchg
cmpsb
shl
clc
lcall
movsl
or
les
aas
fimuls
pop
inc
cld
out
or
ret
push
stos
mov
in
data16
lcall
fdivrl
cmp
sub
sbb
jnp,pn
adcl
jno
std
dec
jp
adc
mov
lods
lods
sbb
or
int
mov
mov
jns
mov
data16
out
das
loopne
push
jno
sub
test
jl
mov
loope
pop
and
xlat
pop
add
sbb
shll
mov
cli
mov
jbe
pusha
xchg
push
inc
mov
fs
imul
bnd
xor
xor
lcall
cmp
std
push
mov
xchg
dec
imul
icebp
mov
sbb
mov
xchg
lldt
popa
inc
repnz
dec
mov
or
push
xchg
sub
mov
popf
test
hlt
sahf
mov
pop
divb
loop
popf
les
mov
sub
popf
daa
and
jl
cltd
outsl
es
pop
jae
jl
pop
orb
xchg
jbe
in
mov
adc
pop
and
cmpsl
cmp
inc
push
jbe
scas
lods
insb
rorb
leave
sbb
ds
aas
and
and
mov
test
or
std
pop
orb
jbe
mov
fwait
sbb
test
xlat
imul
sarb
or
inc
stos
mov
add
int
pusha
pop
pop
and
mov
out
pop
mov
push
xor
loop
push
or
pusha
arpl
loop
loopne
leave
into
xchg
dec
addl
add
xlat
insb
mov
std
mov
pop
mov
out
shrb
out
fisubrs
shl
das
add
mov
pop
inc
iret
or
jb
mov
aaa
test
in
ja
mov
movsl
stos
rorb
inc
scas
cld
rorl
lcall
mov
dec
inc
sahf
xchg
jnp
into
jg
jns
shrl
daa
imul
sbb
arpl
cs
cmp
repnz
jecxz
pop
push
repz
xchg
cmp
js
and
cmp
repz
xchg
test
insl
aas
xor
lock
sub
das
sub
inc
mov
fprem
mov
mov
inc
push
movhps
xchg
sub
push
addr16
push
ror
ss
lock
daa
add
sbb
mov
sbbl
popf
mov
jne
inc
mov
xlat
in
and
dec
fsubrs
sub
xor
xchg
ss
sub
mov
filds
in
inc
punpckhdq
scas
xchg
sti
shrl
push
call
enter
leave
lds
push
je
xor
bound
add
xlat
jge
repnz
mov
stc
je
loope
jl
sub
dec
sub
push
shrl
insl
gs
jne
popf
pushf
movsb
movsl
sahf
stos
rcrb
sbb
sub
xor
outsl
adc
stos
loope
jo
adc
xchg
xchg
in
push
mov
add
dec
roll
pop
scas
icebp
movsb
inc
dec
push
pop
adc
mov
dec
mov
addb
aam
cmp
sbb
xchg
scas
jns
mov
in
inc
and
push
xor
fnstcw
mov
pop
cmpsb
outsl
sahf
lahf
push
add
inc
scas
sti
lds
test
and
ss
sti
dec
mov
movl
or
or
mov
aam
cmp
arpl
lock
pop
add
out
and
inc
lahf
loop
cmp
lcall
adc
iret
in
lahf
mov
clc
in
movsl
or
call
lret
mov
mov
mov
jo
lds
ror
push
cmp
in
in
cwtl
je
ljmp
in
inc
push
or
sti
add
xorl
push
mov
adc
xchg
jl
sbb
xor
mov
cmp
mov
jp
imul
rcrl
lret
jecxz
into
addl
mov
in
je
push
dec
stc
fistpll
shrl
sti
xor
jnp
je
push
and
adc
cmpsl
sahf
sbb
adc
jp
jecxz
xor
pop
cli
in
test
mov
daa
les
dec
push
out
push
jge
pop
cltd
movsb
jecxz
sub
mov
leave
sub
sbb
divl
mov
lods
into
clc
clc
and
pop
data16
pop
shlb
push
test
jnp
mov
inc
dec
xchg
pushf
sti
dec
xchg
les
cmp
adc
sbb
inc
rcll
fldcw
xor
out
mov
sbb
cmp
sbb
aad
mov
mov
mov
push
es
jo
or
xor
inc
test
xchg
aad
xor
pushf
jl
movsl
xor
mov
add
push
pop
lret
subl
xchg
mov
jnp
mov
mov
push
push
xor
in
repnz
xor
js
int
repnz
insl
imul
data16
cld
in
std
into
mov
adc
jo
or
adc
test
loop
xor
push
or
int3
sbb
jno
inc
push
mov
mov
addl
ss
cwtl
push
jmp
xor
or
xor
pop
mov
aaa
sbb
xor
mov
test
inc
fcmovnb
outsb
sub
scas
mov
dec
call
imul
jl
mov
mov
lahf
mov
sbb
sbb
cltd
mov
repz
adc
sbb
cmpsb
adcl
or
movsl
sti
nop
ja
jb
lods
sbb
fwait
xlat
lods
or
lahf
bound
mov
int3
dec
cs
movl
dec
add
test
sub
cmpsl
pop
dec
out
int
into
xchg
andl
js
mov
sub
loopne
dec
adc
mov
xor
dec
cmp
lea
push
cmp
cmp
sub
cmpsl
adc
jl
sub
and
or
int
jb
cltd
cmp
xor
push
jbe
mov
xor
push
fs
rcl
ja
xor
adc
aam
mov
popa
out
rclb
and
xor
and
subl
aad
enter
push
dec
sbb
imul
das
and
scas
jae
xchg
xchg
dec
pop
adc
call
jbe
hlt
dec
adc
or
push
stc
dec
inc
jo
cmp
inc
inc
cmp
lret
pop
and
mov
mov
out
cld
add
ds
xchg
and
ljmp
cmp
scas
jno
mov
sarb
pop
les
pop
clc
loopne
xor
in
nop
in
or
mov
push
add
inc
fstps
test
pop
mov
cmp
stos
test
fisttpl
leave
xchg
lods
jns
scas
xchg
mov
push
sbb
mov
mov
imull
jmp
daa
mov
cs
int
jnp
mov
je
pop
dec
bound
imul
sbb
pushw
out
xlat
std
aas
pop
mov
mov
xchg
xchg
cmp
adc
pop
das
jo
hlt
shlb
push
dec
lahf
arpl
movsb
movsb
ror
adc
jge
shrb
out
pop
testl
cmp
jmp
out
inc
jl
push
daa
cmp
mov
ss
push
jns
sbb
cmp
fnstenv
mov
pop
fidivl
popf
orl
mov
insl
daa
adc
pop
insl
xchg
insb
fsin
jle
and
push
pusha
jb
rcrl
cmpsb
sub
add
pop
and
es
add
outsb
cltd
pop
lds
movsl
cs
cmpsb
dec
and
cli
lahf
mov
sub
in
jbe
mov
pop
and
aad
cmpl
xor
nop
inc
mov
jns
iret
jo
pop
call
pop
sub
js
mov
xchg
jl
loop
jns
hlt
mov
pop
xchg
or
repz
or
insl
inc
xchg
cltd
push
lods
out
mov
icebp
xor
xor
ljmp
stos
les
lods
or
hlt
pop
incb
push
dec
clc
stos
sbb
addr16
hlt
or
sub
cmp
popa
adc
pusha
push
sub
ljmp
add
out
inc
test
ljmp
add
nop
aaa
and
mov
adc
and
xchg
inc
mov
sbb
nop
fldenv
xchg
cmc
sbb
movsl
movsl
sti
lods
and
mov
pop
test
aad
sub
outsb
int3
outsl
push
pop
cli
fs
xchg
ljmp
mov
pop
pop
sub
sahf
jne
mov
inc
push
jno
aaa
or
shlb
lahf
les
lret
pop
xor
jo
pop
push
outsl
in
mov
sbb
into
int3
hlt
in
cmp
cltd
outsb
stos
test
jecxz
nop
sub
xlat
cld
xchg
push
pop
mov
pop
sbb
or
scas
dec
lods
int
dec
lahf
xchg
jle
es
mov
addr16
scas
icebp
jmp
push
inc
sti
enter
push
cs
mov
mov
cmc
stc
inc
imul
push
stos
pusha
adc
sbb
ljmp
and
xor
and
lret
xor
out
fsubrs
mov
cltd
sbb
mov
xor
ljmp
orl
test
push
test
sbb
es
aaa
mov
push
lahf
insb
sub
fwait
aas
inc
in
inc
xchg
lds
adc
mov
out
or
add
repz
divb
in
loopne
dec
cmp
mov
sub
xchg
shll
es
inc
push
lock
push
ss
pushf
push
mov
mov
push
outsl
push
push
cmp
lret
adc
fstpt
dec
pop
fidivrl
adc
jne
lret
push
and
pop
cmp
test
sub
mov
out
fcmovne
jmp
push
and
jb
mov
cmpb
mov
xchg
inc
and
sub
arpl
gs
loope,pn
ljmp
push
or
lret
mov
imul
fldenv
mov
or
sbb
jge
dec
pop
stos
adc
and
xorb
aaa
lcall
xor
cld
sub
mov
sbb
adc
push
insl
dec
daa
sub
pop
mov
cmp
popf
loope
or
add
xchg
push
daa
mov
in
fcom
add
fisttpll
inc
sub
add
add
cmp
in
aas
inc
es
scas
sub
loopne
inc
adc
scas
add
xchg
mov
scas
sbb
jmp
sbb
pop
paddq
in
into
jle
call
in
ds
jg
out
aam
xor
imulb
popa
imul
sahf
repz
push
cmc
adc
out
xchg
fsts
movaps
jno
shll
js
lea
pop
movsb
shrb
push
cmp
outsl
lods
pop
jp
sub
hlt
xor
jl
xchg
out
cmp
or
add
xor
push
inc
jo
jno
xchg
aaa
roll
rcrl
mov
jmp
lea
in
push
push
repz
dec
xchg
adc
sbb
push
lock
add
std
mov
gs
scas
inc
xchg
push
aas
or
fimuls
jb
mov
cltd
or
lret
jne
loope
addr16
and
pop
loopne
repz
in
xor
dec
jle
loopne
push
mov
or
shrl
or
hlt
in
push
cltd
fldl
sarb
cmp
mov
fcomps
fcmovbe
test
xchg
mov
dec
out
dec
sub
cld
jge
test
jg
mov
mov
xor
or
push
mov
push
dec
or
cld
and
sub
aam
mov
pop
add
jg
test
loopne
or
aaa
push
push
add
push
dec
out
fmul
lods
loopne
leave
mov
hlt
sbb
cmp
xchg
daa
xchg
pop
and
je
or
in
in
dec
sbb
pop
enter
rolb
jge
jnp
ss
xchg
shrl
xchg
sbb
jnp
lods
inc
inc
test
mov
outsl
mov
mov
push
aas
mov
xor
dec
pop
hlt
imul
or
lock
push
mov
stos
or
outsl
adc
fmul
dec
push
insb
sub
add
xchg
fstpl
add
cmp
pop
insb
mov
jle
adc
add
and
xor
mov
jnp
xor
bswap
inc
fadds
xchg
jge
rcll
mov
out
sub
pop
in
mov
adc
sub
xor
popf
inc
add
jg
inc
mov
dec
mov
push
sbb
mov
stos
sub
sub
rcrl
and
inc
out
lea
inc
sbb
cmp
mov
pop
jp
and
pusha
sub
jne
jg
push
cmp
fs
lret
leave
data16
inc
aam
mov
ret
xor
cld
imul
out
jns
cs
pop
fwait
outsl
inc
cwtl
push
sub
dec
xchg
jp
cmp
fcoml
imul
loop
mov
xchg
clc
arpl
aaa
cmpsb
sub
mov
xchg
out
loope
shl
data16
push
cmpxchg
gs
sub
repnz
xchg
sbb
cmpsl
daa
fs
jge
enter
jbe
sub
sbb
sti
inc
cmpsb
pop
sub
dec
test
aad
in
fnstsw
sub
xlat
push
and
mov
enter
es
cmp
les
sub
jns
dec
orb
cmpsl
nop
iret
adc
dec
lds
pop
frstor
nop
sub
sbb
inc
mov
into
lahf
outsl
sbb
xor
push
pop
in
arpl
pop
pop
push
sbb
outsl
sub
xor
loop
rol
pop
mov
addb
in
ret
jnp
fadd
mov
push
aaa
jnp
hlt
cmc
jl
or
dec
aam
lcall
rcl
fwait
scas
push
decb
enter
and
jae
and
pop
aam
outsl
mov
mov
mov
dec
pop
xchg
imul
fwait
je
mov
cld
push
pop
popf
xor
mov
pop
repz
int3
rorb
push
sub
fidivrl
or
dec
mov
jbe
scas
jno
outsb
mov
xor
movsl
inc
ja
xchg
nop
pop
mov
adc
jnp
ss
insl
cltd
push
icebp
scas
mov
jle
sub
mov
test
xchg
cmpsb
aam
jmp
push
lods
imul
xor
adc
xor
lock
inc
cmp
or
jp
in
fisttpl
dec
ss
mov
jnp
iret
pop
adc
filds
dec
jg
and
sbb
jbe,pt
cmc
fldl
stos
jl
mov
adc
sti
mov
loopne
xchg
xchg
jl
xchg
cmp
mov
rorb
cs
popf
xor
xchg
pop
cmp
push
out
mov
or
loop
jmp
cmp
ret
push
inc
lock
and
dec
xchg
mov
pop
push
cmc
dec
mov
nop
add
mov
fwait
shrb
mov
mov
in
cwtl
sahf
push
or
divl
jge
add
cltd
push
movsb
xor
mov
outsl
mov
lds
cmpsl
mov
inc
lods
jmp
and
mov
aaa
mov
cmpsl
inc
inc
mov
inc
divl
jnp
bound
dec
jl
lods
aad
lea
sbb
mov
mov
cmpsb
cmc
pop
xorb
paddw
test
push
and
pop
loop
rcll
pop
adc
sub
pop
pop
xchg
adc
sub
rorl
mov
addr16
sub
dec
and
add
cmp
xor
jle
faddl
mov
movsl
stos
lds
hlt
and
cli
imul
setl
or
movsb
mull
and
mov
xor
mov
es
imulb
andb
inc
cmpsb
aaa
in
jge
sbb
jno
mov
and
xor
pop
je
adc
cmp
mov
jmp
sub
jae
xor
fwait
mov
shlb
notl
mov
cld
ljmp
and
inc
loopne
scas
xchg
xor
movsl
sub
sub
pop
jo,pn
dec
sbb
sbb
out
loopne
loopne
lea
lock
dec
jl
xor
jo
xor
pop
mov
push
jp
mov
addr16
out
jl
in
or
ds
jns
mov
adc
test
cmc
xchg
testb
daa
mov
or
jp
bound
push
dec
mov
xchg
sarb
das
push
mov
sbb
dec
pop
cs
jge
pop
adc
cld
loopne
inc
mov
mov
into
cld
mov
xchg
pusha
xor
inc
pop
xorl
xchg
or
test
jae
mov
jl
cld
bound
mov
ja
mov
push
mov
mov
cmpsl
paddsb
push
push
movsb
rcll
xchg
xor
mov
adc
and
xor
out
adc
cmc
inc
pop
test
jmp
int3
gs
in
loopne
xor
lock
cmc
jns
cmc
incl
mov
mov
out
clc
jg
subl
mov
mov
arpl
and
dec
mov
jnp
daa
scas
lods
mov
adc
sti
setnp
and
mov
sbb
and
inc
sub
xor
adc
js
jp
pop
fmull
cmp
inc
sbb
push
ret
mov
sub
dec
sub
pop
shrl
mov
jb
push
std
js
xor
test
dec
movb
pop
inc
imul
pop
pop
push
push
mov
int
jne
shr
inc
jecxz
cmp
push
sbb
jo
pop
scas
out
inc
pop
pop
ret
dec
dec
jb
mov
lret
pop
insb
mov
data16
pop
jmp
xlat
rclb
push
sbb
in
inc
xor
jle
inc
addb
sbbb
lock
dec
sub
mov
and
gs
xor
ja
lahf
xchg
and
ret
mov
mov
loopne
push
inc
sub
dec
pop
push
std
int
and
or
mov
je
test
sbb
pop
lods
or
movsl
mov
out
and
std
movsl
add
sar
es
jnp
xor
ds
xor
cltd
clc
jle
xchg
mov
or
das
push
es
push
dec
xorb
mov
dec
xlat
dec
insb
fcoml
stc
or
mov
nop
in
out
test
dec
push
sub
fcoms
out
add
fldl
stos
arpl
lar
pop
addr16
daa
inc
inc
xchg
cmp
mov
or
mov
sahf
leave
cwtl
pop
jle
lea
aaa
loopne
inc
pop
cmp
inc
repz
adc
sub
or
scas
lret
or
push
out
insb
aam
cmpsb
sub
push
cs
and
scas
mov
aam
pop
push
arpl
or
sub
dec
lcall
fprem
je
pop
sahf
push
cmp
dec
or
ret
mov
stos
cwtl
mov
pop
test
and
and
or
jmp
arpl
sbb
rcrb
adc
lods
mov
fidivrl
bound
xor
jecxz
jno
inc
xor
mov
cmpsb
fs
ljmp
outsb
and
or
or
push
dec
sbb
and
mov
popf
out
and
orb
cmp
sub
popa
lds
cmp
out
mov
xchg
sub
xchg
xlat
inc
fdivl
or
and
pop
movsl
out
test
jp
repz
push
lods
jl
xchg
ret
dec
push
mov
cs
ret
xlat
jg
adc
std
dec
jbe
sbb
ss
bound
jb
add
pop
mov
les
push
repnz
outsb
push
inc
xorl
inc
push
dec
fisubrs
rcrb
cmp
mov
push
cmp
mov
mov
push
mov
popa
xor
test
cmp
pop
adc
and
mov
mov
jmp
xchg
test
pop
cmp
mov
mov
pop
add
mov
daa
aas
and
dec
adc
jnp
int
test
mov
lahf
dec
outsl
jo
add
jl
pop
add
push
cmp
and
cmp
adc
mov
subb
xchg
push
inc
push
push
sbb
xchg
or
lds
or
out
push
adc
iret
icebp
mov
jg
cmp
loop,pn
pop
and
mov
out
outsb
lcall
cs
mov
fbstp
cmpsl
js
mov
cltd
sub
dec
xchg
ljmp
inc
dec
add
mov
sbbb
push
repnz
push
adc
xor
dec
or
out
js
mov
iret
jle
xchg
push
faddl
sti
and
data16
inc
mov
aam
pop
or
cmp
int
xchg
jl
adc
test
xchg
cmpsl
xchg
fstps
imul
ja
xor
pushf
popa
and
in
or
xor
jecxz
xchg
add
inc
insl
lods
bound
add
lret
sahf
cmp
inc
mov
cmp
andb
lock
mov
push
daa
mov
movsl
jge
xchg
arpl
mov
pop
lds
mov
punpcklwd
ljmp
xor
sbb
rcl
xor
ss
push
adc
loope
dec
mov
in
daa
lods
push
xchg
into
cltd
jle
dec
in
xchg
dec
daa
or
pop
popf
fistl
dec
push
fwait
xor
mov
enter
jo
subl
and
pusha
xlat
mov
call
or
jg
cmp
aam
sbb
in
sub
and
and
sbb
pop
jp
adc
mov
sahf
stos
mov
in
popa
jecxz
jle
cltd
xor
movsl
inc
in
mov
lods
sbb
loopne
lcall
icebp
or
imul
push
add
outsl
mov
jge
xor
scas
andb
sub
gs
pop
cmpsl
xchg
jle
das
addb
sbb
sbb
jnp
iret
push
push
js
mov
xor
mov
lcall
push
stc
pop
mov
push
mov
push
and
mov
and
xchg
gs
adc
sti
push
push
add
in
sub
popf
loope
jle
push
std
adc
add
jb
test
adc
js
inc
out
rolb
or
pop
pushf
jecxz
js
mov
cmp
lods
dec
pop
and
add
stos
aaa
cmp
pop
inc
or
cmpsl
or
popf
xor
pop
inc
mov
mov
lods
push
in
imul
lret
jge
js
xor
cmc
jae
xchg
ds
sarb
xchg
arpl
or
js
jle
lock
sub
dec
cld
insb
iret
xor
mov
popf
loop
inc
es
imul
idivl
or
inc
fwait
in
pop
sub
cli
sub
sub
push
pop
aaa
sbb
mov
sbb
int3
mov
pop
ret
cmpsl
es
adc
push
and
push
loopne
rcl
and
add
lret
sbb
fidivrl
popf
mov
xor
jge
adcb
inc
mov
jns
xor
mov
arpl
fnstcw
xor
dec
push
mov
clc
mov
xchg
fistpl
inc
mov
cmpxchg
daa
es
sti
loop
and
pop
lds
das
inc
xchg
scas
mov
insb
dec
ss
out
scas
scas
mov
data16
popf
std
pop
mov
fistpl
lcall
push
jg
and
xor
es
pop
xor
mul
iret
xchg
adc
cmpb
sbb
xchg
inc
jne
jbe
inc
cmp
hlt
sbb
sbb
popl
xlat
jb
sub
enter
inc
clc
inc
pop
aam
mov
push
or
xor
call
jge
or
leave
ds
insl
xor
aaa
fisubl
xor
insb
ror
mov
les
and
mov
out
or
dec
push
aaa
decb
out
and
pop
push
mul
xchg
push
jge
test
popl
js
sti
xchg
jb
xchg
int3
pop
add
ficompl
mov
or
mov
push
inc
push
mov
mov
ss
sbb
lret
cmpsl
jl
cmpsb
aad
sti
shll
add
mov
jns
mov
jecxz
bound
loop
cmp
adc
enter
in
xor
mov
xchg
insl
xchg
push
bound
stc
mov
mov
ficompl
cli
mov
cld
xchg
out
add
pop
inc
push
cmp
lahf
xchg
aam
aad
ss
in
sbb
mov
scas
icebp
jmp
fmull
in
out
imul
add
add
cmc
mov
std
xor
sarl
sub
je
pop
loopne
rolb
mov
dec
push
mov
sub
aam
mov
cmpsl
bnd
mov
flds
out
pusha
push
xchg
or
in
lods
dec
pop
addr16
or
add
sar
xor
sahf
ficompl
adc
jnp
inc
out
xor
popf
sbb
push
movsb
pop
pop
or
in
arpl
ja
or
es
aaa
jg
mov
cmp
pusha
out
rcl
aad
cwtl
add
cwtl
mov
and
divl
push
pop
xchg
xchg
mov
repnz
mov
fildll
cld
pop
or
mov
dec
pop
mov
divb
rcll
pop
out
dec
xchg
inc
enter
fisubs
popa
into
mov
jns
lds
sub
ds
push
mov
ljmp
loopne
int
test
mov
sub
push
or
mov
sbb
call
divl
xchg
pop
fldl
out
jbe
xchg
sbb
rolb
dec
in
mov
ud0
test
loop
scas
xor
test
mov
sbb
or
jns
scas
data16
xchg
dec
es
xchg
push
push
push
sub
test
aas
je
orl
lods
imul
fisubs
pop
scas
mov
add
xchg
addr16
push
movsb
test
push
xchg
xchg
jp
add
fwait
and
xorb
add
add
jmp
xchg
fsubs
mov
jge
pop
mov
orl
xor
mov
ret
adc
out
xchg
es
je
push
div
cwtl
mov
or
push
nop
roll
push
push
jl
imul
mov
std
sbb
push
inc
xchg
fdivl
mov
inc
insb
imul
xchg
sarb
pusha
xorl
repnz
jecxz
std
mov
push
ljmp
sarb
rorb
xor
out
mov
cmp
popa
xor
sahf
jo
repz
or
lock
or
cli
fimull
and
addb
fcmovu
mov
into
push
xchg
mov
push
lods
test
leave
enter
jbe
enter
cmc
scas
lret
jae
loope
sbb
cmp
icebp
movsb
ret
outsb
ret
mov
iret
or
mov
fwait
cmpsl
mov
notb
repnz
cmp
sti
inc
cs
pop
xor
outsl
or
xlat
jae
lret
stc
mov
cmpsl
das
jecxz
sbb
add
pop
jbe
loope
push
fstpt
and
idiv
je
xor
sahf
mov
mov
popf
and
sbb
sub
inc
insb
mov
xlat
pusha
sti
jno
incl
iret
out
cmp
int
cmp
js
and
fwait
out
lock
insl
lds
xor
sbb
std
dec
jbe
in
adc
add
hlt
sbb
in
test
repz
xor
mov
sbb
jbe
lret
dec
loope
mov
inc
jae
loop
outsl
and
in
pop
fisubrl
inc
jno
mov
push
scas
outsb
hlt
cs
out
and
std
std
dec
cmp
fadd
addb
jle,pt
repnz
inc
insl
add
xlat
push
pop
test
popa
or
loopne
hlt
call
or
dec
and
mov
and
or
leave
sub
or
jmp
clc
and
push
xchg
imul
or
mov
mov
adc
aaa
pop
imul
jge
lock
cmpsl
out
cld
aas
and
and
inc
xor
les
pop
cmpsb
xor
add
lea
xor
xchg
jmp
test
cmc
or
scas
add
int
adc
loopne
xlat
divl
mov
sub
dec
insb
dec
testl
imul
pop
repnz
push
repnz
jne
and
ror
and
push
mov
xlat
or
pushf
pop
pop
cmp
insl
in
test
mov
adc
imull
test
rcr
faddl
out
xchg
inc
xchg
jle
test
iret
cmp
pop
inc
nop
shl
in
repnz
aad
inc
popl
fcomps
mov
xchg
divb
push
xchg
pop
jns
fsubrs
repz
repz
les
inc
mov
je
jmp
divl
push
mov
aaa
xchg
xchg
cmp
movsl
and
testb
pop
inc
push
cmpsl
mov
or
js
loope
lret
lods
rorb
ds
movsl
cmp
add
xor
shrb
cmp
adc
fdivs
in
cmpsb
add
rcll
aaa
cmp
inc
xchg
add
inc
fidivs
jmp
jo
call
loop
pop
jecxz
cmp
mov
push
lcall
call
sub
notb
adc
mov
mov
fcompl
int3
or
dec
shll
pop
jecxz
mov
loope
cld
or
add
insl
and
mov
cmp
and
pop
daa
cmp
mov
sbb
inc
push
cmpsl
mov
test
push
shll
and
aad
std
gs
cmc
sub
inc
leave
cltd
add
xchg
mov
mov
mov
jno
xchg
mov
xor
jbe
dec
and
aas
clc
lret
fldln2
cmp
add
xor
adc
imul
in
xchg
je
imul
inc
gs
dec
dec
jecxz
pcmpgtd
pop
lret
xlat
cld
sbb
arpl
insb
call
cmp
jecxz
and
les
flds
push
fs
ret
jmp
xor
mov
xchg
scas
es
repnz
pushf
cmpsb
int3
shl
jbe
call
jle
pop
mov
out
popf
jecxz
fisttps
add
imul
mov
or
push
lea
testl
inc
repnz
xor
cmpsl
jns
and
leavew
in
inc
dec
push
inc
push
out
pop
mov
push
repnz
and
push
pop
xor
aad
lds
icebp
xor
lds
push
popf
sub
arpl
lret
daa
inc
fwait
pop
push
testb
jl
fs
mov
je
outsl
dec
repz
stos
cmp
sbb
iret
clc
mov
mov
push
cmovl
push
xor
repz
adcl
inc
cmpsl
mov
dec
and
mov
mov
imul
repnz
fimull
jl
xlat
cltd
daa
mov
fsubp
outsl
sub
cwtl
mov
adc
les
cmp
pop
fcmove
mov
cmpsb
adc
and
and
test
jg
and
mov
inc
mov
roll
and
stos
mov
mov
adc
jne
mov
imul
jmp
dec
lods
orb
push
int3
jns
or
pop
ss
mov
pop
xchg
sahf
inc
stos
inc
int3
repz
sub
adc
pushf
loopne
fbstp
xor
push
and
fdiv
cmp
jo
xchg
lock
out
std
inc
jae
inc
xor
mov
fdivrp
jo
jg
in
les
stc
jg,pn
mov
inc
mov
dec
std
cpuid
rcr
jo
mov
addb
loopne
in
cmpsb
mov
hlt
inc
repnz
add
adc
adc
lahf
rolb
shl
inc
pop
cld
mov
sbb
cmpsb
xor
mov
jns
push
mov
adc
test
clc
jno
pushf
movsl
jno
push
mov
mov
pop
pop
jmp
or
mov
push
repnz
add
adc
mov
push
outsb
xor
movsb
rcl
lods
pop
mov
push
mov
mov
in
jg
pop
jbe
push
inc
xadd
pop
add
in
jno
mov
jnp
sub
imul
sahf
xor
int3
mov
adc
jmp
fcompl
lret
out
stos
dec
stc
cld
sub
stc
xor
pop
sbb
inc
sub
pop
and
mov
in
dec
in
xchg
sub
mov
jp
rorb
pop
inc
xor
mov
icebp
movsb
ret
xchg
test
arpl
add
jecxz
outsb
cmp
cmpsb
clc
rcll
clc
dec
sbb
outsl
leave
xchg
mov
dec
sahf
push
add
mov
xor
lods
push
iret
not
stc
mov
sahf
sbb
push
aas
xorl
cmp
test
sbb
xchg
idivb
test
mov
imul
jb
clc
xchg
pushf
and
pop
lea
push
dec
pop
adc
cli
mov
push
test
jbe
jae
xor
lcall
cmpsb
inc
cmp
and
push
mov
and
or
and
sbb
jp
repnz
jbe
movsb
jae
leave
out
dec
adc
gs
jmp
lret
pop
aaa
ret
or
shrb
movsl
mov
shll
loopne
mov
fwait
mov
out
jecxz
inc
add
shlb
adc
notl
jle
movsl
out
mov
jno
lcall
adc
inc
lods
stc
sub
mov
into
rcrl
sbb
fnstcw
mov
sbb
scas
aas
mov
fldl2t
mov
mov
ret
xor
mov
clc
pop
fwait
inc
jnp
lret
rclb
cmp
out
idivl
int3
lock
sbb
jnp
repnz
bound
das
jl
out
mov
inc
push
jmp
jbe
jl
xor
ja
enter
iret
cmp
jno
push
sub
pop
rcrb
ds
jae
inc
and
int3
or
cmp
mov
mov
adc
daa
jne
stos
dec
jp
leave
xor
cmp
inc
pushf
cmpb
mov
adc
xor
adc
add
and
inc
cmp
and
enter
jb
add
fwait
mov
mov
or
in
stos
jb
enter
jl
add
xchg
movsl
cltd
iret
cli
lds
inc
adc
sahf
sbb
or
push
test
jns
ffree
xchg
stos
ret
pusha
ret
lods
xor
cmpsb
mov
dec
stos
push
rorl
push
xor
xchg
mov
fisubrs
lea
loope
mov
pop
xor
arpl
mov
es
es
xchg
mov
js
js
mov
xor
push
ret
popf
icebp
popa
mov
mov
or
push
in
out
in
aaa
xor
mov
add
rclb
je
cmpsl
icebp
push
jg
adcb
jg
adc
jne
xor
jecxz
xchg
std
cmp
jmp
shrb
aaa
cmp
fisubrl
incb
rep
scas
scas
mov
sbb
lods
adc
push
stos
fxtract
xor
lea
mov
arpl
daa
arpl
push
call
aam
fwait
pop
jo
in
sub
loope
popa
lods
cmpsl
popa
lret
sub
or
push
test
jbe
fldl
push
sbbl
insl
inc
fwait
add
fldl2t
shll
sbb
sub
pop
jnp
movsb
jle
and
sbb
lock
imul
push
scas
sbb
je
je
addr16
xor
arpl
push
push
jns
xchg
jne
adc
sbb
lret
mov
orl
adc
push
cmp
inc
movsl
fsub
pop
add
inc
jno
adc
fucomi
shlb
xchg
inc
popf
test
cwtl
mov
xlat
adc
loope
push
mov
fistps
insb
ljmp
pop
stc
ret
clc
hlt
sti
shll
push
jne
dec
jle
mull
cmp
sti
fs
out
mov
mov
testl
xor
notb
or
jbe
cmc
hlt
jae
popf
dec
jne
ja
pop
xlat
mov
popf
pop
inc
push
dec
popa
jl
in
adc
sahf
dec
mov
cmpsb
icebp
ss
leave
dec
enter
repnz
mov
imull
scas
xchg
jp
xor
test
repnz
jmp
pusha
pop
sub
add
mov
dec
lds
fnstsw
pop
inc
xor
sub
fcoms
mov
sub
lock
mov
pop
pop
ds
push
rol
pop
frstor
push
pop
ja
sti
mov
outsb
flds
lods
xchg
push
sbb
shll
in
mov
in
pop
add
push
sbb
insl
add
jne
or
xlat
push
jno
pop
loope
or
call
dec
push
jno
mov
sbb
dec
pop
fwait
sbb
cld
leave
mov
sub
inc
jg
loop
cli
mov
pop
fidivl
inc
adc
scas
mov
push
test
popf
dec
fsubrl
jns
dec
xchg
mov
inc
or
in
dec
inc
inc
xor
push
loop
adc
icebp
mov
cmp
pop
cltd
pop
and
insb
cmpsb
mov
idivb
adc
inc
fsubs
insb
xchg
mov
jecxz
and
je
je
sti
andb
push
mov
mov
cmp
fldl
orb
call
xchg
push
scas
in
cmpsb
stc
add
mov
mov
out
mov
addl
incl
mov
sub
mov
int3
cmp
faddl
stc
jne
dec
jmp
mov
fidivrl
add
lcall
xchg
push
xlat
or
push
ss
imul
nop
cmp
adc
cmp
pop
mov
es
sbb
jge
or
cltd
fildl
test
rcr
pop
inc
pop
add
ret
or
rcrb
push
cld
andl
push
ja
lret
lock
adc
add
jnp
and
jne
fs
sub
jo
cmp
std
jb
out
sbb
fwait
cs
mov
sbb
ret
pushf
negb
pop
aam
and
jo
ds
mov
daa
fs
push
sbb
xor
cmp
loope
sbb
sub
add
xor
dec
adc
stos
cmp
sub
ret
mov
mov
push
mov
or
gs
and
subb
ljmp
aas
ret
lds
mov
out
push
std
inc
fisttpl
push
pop
add
in
pusha
push
add
lcall
call
sbb
or
out
rcr
andl
xchg
mov
in
fsubrl
cwtl
in
arpl
mov
into
push
mov
inc
pop
push
fsubrs
popa
push
pusha
into
push
loopne
pop
adc
inc
push
movsl
idivb
int3
in
mov
push
gs
sub
mov
loope
jae
cmp
xchg
or
xor
mov
sbb
dec
std
add
int
aad
mov
ss
xorl
arpl
inc
jle
sub
loop
xor
push
or
aaa
fsts
icebp
cmp
stos
pop
xlat
pusha
lods
mov
cld
into
cmp
pop
ret
sub
mov
mov
lds
push
xor
cmp
mov
popf
adc
fidivrl
mov
ret
add
xor
xchg
dec
sub
arpl
cmp
sub
fdivs
sbb
sub
ret
xchg
shr
ret
mov
fs
mov
xchg
mov
mov
daa
adc
rorb
lods
inc
sbb
iret
fdivrl
aaa
mov
js
sbb
ja
addl
lds
loop
mov
or
sub
pop
imul
cmp
jo
or
xor
movsb
add
mov
pop
pop
imul
xchg
jno
sub
daa
mov
pop
iret
icebp
les
jge
ljmp
and
popa
outsl
add
add
arpl
ss
stos
push
les
and
inc
pushf
adc
or
fsubr
sub
pushf
cmpsb
imul
dec
xchg
sub
sarb
adc
lahf
xchg
add
std
lods
push
repz
inc
out
pushf
sub
aam
enter
lock
ret
mov
push
add
pop
outsb
pop
add
mov
ljmp
xchg
aam
aas
or
or
adc
push
inc
out
pop
clc
add
sti
pop
push
inc
popa
mov
test
mov
idiv
mov
cli
iret
pop
dec
les
inc
in
mov
adc
rcll
call
dec
mov
mov
insl
inc
mov
pop
arpl
arpl
je
jp
sti
lods
pop
ds
inc
je
insb
and
scas
jne
loop
jge
xchg
in
mov
test
cmp
movsb
cmovs
xchg
sub
iret
adc
push
cwtl
fcmovnbe
leave
cltd
cmp
pop
jo
fistpll
or
mov
test
cmp
or
xor
fdivrp
push
aam
shrl
xlat
and
xor
test
adc
mov
lret
mov
cmp
inc
jmp
pop
pop
cmp
in
mov
add
xchg
jnp
arpl
ds
ljmp
sahf
mov
sbb
or
cwtl
in
push
xchg
mov
jmp
inc
jnp
shrb
mov
stc
pop
or
cmp
shll
sbb
mov
shll
pop
mov
addb
icebp
adc
inc
imul
inc
lds
cmp
dec
cmpsl
cmp
jp
scas
andl
or
inc
into
mov
mov
add
or
aas
outsl
xlat
dec
cmp
inc
cmpsl
pop
sbb
inc
dec
pushf
sbb
jl
mov
test
dec
cmp
sub
inc
jle
dec
or
push
jle
dec
hlt
int
or
add
sbb
push
adc
fs
adc
cltd
jecxz
xchg
js
int3
sahf
enter
loop
repz
xchg
dec
push
inc
xor
jl
ror
pop
inc
cld
jo
insb
cmpb
xor
fcmovnb
orb
cld
push
ja
clc
daa
insb
fbstp
lods
mov
sarb
cmp
insl
cmp
dec
stc
push
ja
mov
jne
pop
out
imul
sbb
fmull
scas
xor
mov
out
mov
pmulhuw
adc
mov
xor
mov
pop
jmp
les
imul
add
inc
sbb
fldt
or
mov
aad
daa
jg
sti
mov
je
int3
lret
gs
mov
pop
es
pop
inc
in
vpsubq
out
fnstcw
leave
push
jl
xchg
int
stos
fildl
or
xchg
out
test
daa
xor
push
cld
dec
shll
cmpsb
cwtl
add
mov
mov
mov
cmpsl
push
jmp
fdivs
loope
adc
pop
jno
lds
cli
les
ffree
orb
insb
jo
mov
out
fildl
push
lahf
popa
fbstp
cmp
sbb
cmpsb
jge
pop
lret
or
clc
jnp
mov
mov
cltd
sti
sbb
nop
jmp
sub
scas
sbb
clc
stos
mov
cmc
mov
dec
popa
cwtl
fstps
adc
mov
es
cltd
mov
lcall
in
xchg
push
subl
sub
mov
inc
cmp
sbb
sar
mov
orb
and
mov
repz
mov
jg
push
stc
ljmp
inc
jp
mov
push
testl
xorl
and
xchg
mov
push
sub
sub
xor
out
lret
xlat
push
adc
shl
mov
daa
sub
jmp
adc
fadds
movsb
sbb
jg
xchg
int3
xchg
inc
sbb
in
or
leave
test
and
xchg
in
mov
xchg
xchg
neg
mov
jne
adc
mov
in
ja
mov
lcall
sahf
pusha
arpl
repz
orl
push
cmpsl
sub
inc
int3
fimuls
popf
les
das
imul
mov
push
fdivr
popf
xchg
rcll
popf
cltd
bound
lods
js
ret
add
add
adc
stos
fsubrp
addr16
lret
outsb
cmp
mov
xor
stos
fsubs
nop
out
cli
sbb
jae
loopne
cld
add
popf
jae
lods
jg
mov
and
xchg
bound
pop
data16
leave
mov
jne
or
test
insl
push
mov
arpl
shll
nop
sub
addr16
cmp
sub
cmpsl
das
pop
mov
lea
popa
jbe
lea
sub
adc
push
jge
sarb
data16
dec
xlat
jb
mov
add
pop
out
negb
cmp
cmp
mov
or
aaa
xor
sbb
sub
dec
jns
xchg
sub
hlt
cmp
jecxz
ror
sahf
mov
inc
push
cmp
jg
vmovapd
jl
sub
fidivs
iret
imul
push
jo
adc
cli
sbb
cld
push
bound
or
cmp
test
xchg
inc
and
sub
sub
adc
addl
push
add
or
cmpsb
push
aad
sbb
iret
mov
in
mov
int3
fdivl
scas
cs
push
jnp
div
mov
fnstenv
cmpsl
lcall
cmp
ficoml
int
mov
sbb
stos
sbb
loop
pop
inc
shrb
mov
sti
adc
cmpsl
popf
inc
inc
dec
test
pop
iret
iret
pushf
dec
das
mov
xor
rorb
jecxz
movsl
mov
pop
stc
mov
cwtl
sar
xchg
lcall
out
outsl
rorl
xlat
hlt
sub
adc
movsb
add
hlt
aad
lods
scas
push
push
and
popf
sub
xchg
subb
jbe
js
sbb
lahf
sbbb
sub
fwait
stc
or
xchg
lcall
mov
sub
nop
pop
cwtl
pop
idivb
ljmp
mov
or
cli
in
inc
mov
xchg
jmp
popf
jbe
jne
push
call
sub
pop
pop
add
popf
aas
mov
cmpb
outsb
pop
sbb
mov
cs
push
ds
imul
xor
rorb
mov
adc
or
repnz
fcmove
outsb
dec
dec
jns
cmpb
jmp
inc
aad
movsl
jl
mov
sahf
adc
fisttps
aam
shl
dec
mov
stos
out
jecxz
mov
inc
test
sahf
mov
push
aam
adc
dec
push
loope
jg
jno
or
ret
gs
loope
cmc
pop
clc
lds
lret
sti
jl
pusha
push
xlat
xor
rclb
xor
mov
mov
jl
notl
movsb
imul
push
pop
push
aad
fsubrl
mov
ret
and
lret
lcall
pop
adc
cwtl
in
mov
ss
jg
xchg
loope
lods
andb
addr16
inc
gs
xchg
add
into
jo
sub
imul
int
sub
sub
add
sar
stc
sub
in
mov
nop
sub
mov
cs
mov
push
shrb
movsl
popf
ja
faddp
mov
push
sbb
xchg
sahf
mov
push
mov
pop
add
loop
ret
mov
pusha
pop
mov
sbb
ja
and
js
sbb
push
xchg
and
jns
push
fidivl
jle
call
mov
and
aaa
jecxz
cltd
push
xchg
outsb
or
leave
out
cltd
imul
rcl
enter
push
sbb
jl
mov
jae
sahf
xchg
nop
call
lods
xchg
mov
xchg
dec
and
pop
roll
cmp
dec
rol
imul
mov
daa
ljmp
jecxz
addr16
pop
mov
shrl
cwtl
push
lret
out
xor
push
fdivr
xor
cli
mov
lds
lods
fmull
xchg
imul
outsl
rolb
jl
sti
and
xchg
ljmp
pop
adc
aas
pop
or
orl
mov
imul
cmpsl
xchg
push
dec
lods
test
lds
repnz
jb
cmp
sbb
movl
push
sub
mov
cmp
imul
into
insb
adc
out
leave
out
xor
lds
cmp
cmovs
xchg
repnz
cmc
mov
adc
orb
pop
push
sub
sti
scas
aam
ja
dec
scas
xchg
ja
in
outsb
fldl
cmpsl
outsl
sbb
push
ficoml
and
xchg
andb
and
insb
mov
arpl
add
or
outsl
fnstcw
add
addr16
test
xor
jo
das
sbb
rclb
jbe
add
gs
popa
mov
cmp
pushf
cltd
push
push
ret
jbe
jle
div
lods
cltd
outsl
and
cs
loopne
fstps
out
icebp
imulb
das
daa
js
stos
imul
sub
imul
std
frndint
sub
gs
std
mov
in
repz
sub
mov
lds
dec
and
sahf
je
inc
inc
push
cli
mov
cmpsb
popf
into
mov
aas
inc
mov
add
xor
jl
jne
jl
iret
cltd
xor
push
clc
scas
aaa
cld
xchg
ret
ss
xor
mov
mov
jb
lahf
daa
lods
cld
pop
jo
pushf
cmp
arpl
imul
dec
out
adc
jne
enter
and
push
int3
das
xchg
out
repnz
gs
popf
sbb
pop
outsb
inc
mov
xchg
pop
sbb
mov
sub
insl
dec
loop
add
xchg
ret
fisubrs
add
lea
jns
mov
jne
sub
mov
in
out
outsl
loope
jbe
or
aas
scas
mov
or
inc
sub
dec
and
mov
cld
jbe
xchg
mov
js
mov
xor
add
xchg
outsb
rcr
ficomps
aad
pop
inc
push
cli
rcll
push
push
testl
jbe
nop
sbb
negb
inc
push
mov
arpl
js
cs
in
imul
je
xchg
popf
sbb
mov
or
cmp
test
pop
leave
inc
adc
in
adc
push
xchg
cld
lret
sarb
or
xor
and
mov
lds
mov
fidivl
jnp
test
mov
sarl
mov
and
loop
dec
and
jmp
rcl
pop
fists
or
aaa
adc
outsl
jle
nop
sub
sti
sbb
add
pop
push
mov
cmpsl
aaa
lea
cmc
inc
and
out
xlat
mov
pushf
sbb
fists
and
jge
pop
loopnew
cmpsl
out
sbb
loopne
mov
sub
mov
idivb
dec
pop
cwtl
ds
mov
cmp
jbe
loop
push
test
stos
add
iret
scas
adc
push
adc
or
nop
inc
sub
loope,pn
add
push
push
shrl
clc
int3
mov
inc
add
insl
sub
sbb
jge
orb
pop
mov
mov
ljmp
sahf
cmpsb
push
icebp
lahf
jne
enter
mov
js
out
nop
enter
adc
scas
shll
mov
out
inc
and
cmp
ret
or
cld
jns
repnz
ror
movl
sar
stc
sbb
sarb
out
pop
test
mov
and
out
sub
pop
push
loop
les
xchg
inc
dec
inc
aas
lods
jg
ds
ret
push
fnstcw
js
mov
movsl
mov
push
push
xchg
inc
iret
dec
or
icebp
pop
repnz
loop
hlt
xorl
flds
jns
jae
pop
mov
out
jb
adc
insb
sub
jmp
enter
imul
jle
xchg
xor
jmp
mov
cltd
mov
push
les
dec
jae
mov
lods
add
sub
pop
jnp
ret
aas
daa
dec
pop
mov
push
fsub
clc
std
mov
dec
les
inc
sti
scas
repz
xchg
jmp
outsb
xor
jae
arpl
shlw
inc
call
mov
nop
cmp
adc
push
pop
scas
jb
and
shl
fisubrs
jle
dec
outsl
and
ja
jmp
pushf
imul
push
in
sti
adc
add
push
pop
mov
or
incl
leave
xchg
bound
lahf
mov
pop
jg
mov
xchg
jb
add
mov
push
outsl
cmp
mov
jecxz
lods
mov
dec
sbb
rclb
dec
bound
push
hlt
sbbl
push
call
jae
push
in
aam
jb
fcompl
sub
mov
pop
hlt
in
xlat
mov
cmp
das
xchg
out
ljmp
xchg
pop
xor
pop
hlt
jmp
movsl
or
insb
shrb
test
jecxz
pusha
push
orl
and
js
adc
push
mov
mov
or
jecxz
jmp
outsb
int
or
mov
jnp
or
movl
adc
xchg
ret
pop
dec
mov
bound
into
dec
gs
shll
std
shlb
push
push
jge
push
mov
push
cmc
outsb
pushf
xor
sbb
test
mov
out
test
test
addr16
push
mov
adc
add
dec
out
ds
mov
fcomps
lret
lods
stos
xor
add
xchg
pop
test
xor
mov
lret
aas
cmp
xchg
int3
ret
push
sub
popa
xchg
loopne
adc
sbb
stc
or
repnz
leave
or
ret
or
xchg
mov
sub
sub
jecxz
add
jb
xor
lahf
mov
or
lods
push
or
es
pop
sub
dec
inc
or
xchg
repnz
xor
roll
mov
jmp
push
xchg
lahf
test
sub
dec
jns
insl
xchg
aad
mov
data16
int
and
vpaddusb
mov
subb
sbb
mov
and
std
es
in
xor
mov
insl
push
scas
movq
xchg
movntq
pop
xchg
xor
lock
jp
mov
jecxz
xchg
dec
imul
arpl
jle
or
lock
dec
adc
dec
fldenv
and
push
dec
mov
in
xchg
shrl
mov
test
addr16
arpl
add
mov
jae
and
xchg
xor
lds
jecxz
shrl
or
push
iret
shrb
or
setnp
out
repz
test
cmp
sub
stos
ss
cwtl
dec
fwait
cvtpi2ps
jae
divb
add
add
dec
add
aam
jnp
divl
jge
cld
inc
xchg
scas
push
cwtl
dec
int3
sahf
sub
lret
push
and
les
adc
mov
cmpsb
in
lret
imull
cmp
pop
cmp
push
xor
pop
and
mov
imulb
mov
enterw
mov
fiaddl
mov
test
fcompl
and
inc
aas
ja
lea
outsl
aaa
mov
fs
ja
cmpb
jae
adc
in
in
mov
fisubs
cmp
aad
push
popf
jl
sahf
fldl
into
adc
add
mov
xor
xor
mov
jo
pushf
lods
push
sbb
pop
fidivl
es
xchg
dec
movsb
jge
push
ds
mov
fwait
movsl
mov
adc
or
stos
std
stc
sbb
fldt
stos
arpl
adc
mov
aaa
adc
stos
sub
cmpsb
and
aaa
jle
das
cmpsl
fisubs
hlt
cwtl
ja
pop
xor
test
jmp
inc
adc
into
div
jbe,pt
push
aam
sub
imul
adc
mov
cmp
movsb
stos
ds
das
pop
es
jg
imul
int3
add
xchg
dec
outsl
dec
sbb
iret
std
cwtl
adc
xor
out
and
lret
test
cltd
mov
mov
xchg
stos
lea
and
push
push
daa
push
into
push
int3
lret
mov
inc
sbb
insl
or
xchg
imul
lahf
mov
dec
pop
std
jno
jp
xchg
rcrl
jns
bound
sbb
ror
xchg
xchg
pop
push
inc
sub
mov
es
ljmp
jne
or
fsubl
lea
push
add
dec
lret
shr
mov
xorb
incl
and
mov
fs
repz
jmp
push
xchg
jbe
outsb
insb
and
mov
insb
out
or
stos
jge
aas
divl
hlt
add
les
loop
pop
xchg
fcoml
mov
adc
enter
ror
dec
sbb
cmp
lret
xchg
dec
push
stos
cmp
jns
inc
cs
stc
xchg
jecxz
xor
pop
sub
or
lea
in
out
aam
clc
cmpsl
mov
es
push
test
int
pop
icebp
dec
xchg
fs
bound
xchg
mov
dec
or
lods
push
addr16
movsl
das
dec
outsl
aad
andb
jg
lea
outsb
fs
mov
or
pop
je
nop
test
mov
div
imul
mov
push
sbb
pop
lcall
mov
ss
gs
aam
mov
add
xlat
mov
or
inc
inc
cmpsb
fcomip
daa
pop
dec
lock
push
pushf
test
cmc
loope
mov
gs
jp
push
mov
outsl
popf
pop
insb
lock
lea
inc
sub
mov
out
mov
pop
jbe
fidivl
test
and
or
jmp
jns
les
rorl
or
xchg
cmp
adcb
ss
arpl
xor
psraw
add
mov
lret
mov
arpl
filds
and
push
jmp
popf
dec
lods
adc
imul
mov
loopne
push
jmp
xchg
jmp
loopne
sub
inc
rolb
mov
testb
test
pop
or
dec
stc
mov
xchg
xor
and
sub
dec
fwait
pop
lahf
sbb
sbb
jae
mov
inc
fstpt
pop
and
cmp
loope
jge
arpl
in
pop
pop
push
xor
cs
sub
xor
jne
cltd
cwtl
xchg
xlat
add
inc
fadds
test
inc
stos
xchg
jmp
push
pushf
adc
es
int
dec
dec
adc
mov
daa
test
loopne
inc
int
testb
pop
lcall
pop
inc
test
movsb
in
insl
imul
cmp
fwait
inc
sbb
xlat
add
imul
lcall
andb
cs
xchg
dec
lods
jo
sbb
lcall
cmp
mov
cmpsb
add
dec
jg
pop
lea
jbe
testl
lds
sbb
mov
mov
and
inc
dec
jnp
mov
pop
and
repnz
adc
or
ffreep
lcall
orl
sbb
push
arpl
icebp
cmp
lods
and
fwait
pop
sub
mov
lods
sub
imul
sub
or
sbb
xor
insl
test
rorl
fs
jbe
shll
xchg
and
loopne
mov
xchg
rcll
rcll
lods
add
and
push
fsubr
xchg
insl
test
arpl
mov
jno
test
mov
movsb
mov
xlat
dec
mov
popa
adc
lret
outsb
jl
das
inc
pop
sqrtps
ja
xchg
inc
add
jl
dec
std
cmp
adc
imul
mov
rcll
xor
mov
idivb
mov
xchg
add
bound
sub
inc
mov
xor
jb
and
adc
fidivs
sub
cmp
mov
dec
or
jl
ljmp
jo
push
in
inc
xchg
jl
mov
nop
jne
jae
das
psubusw
mov
es
and
movsb
rcrb
pop
jmp
repz
out
stos
lock
adc
out
lahf
dec
incb
sbb
cli
aad
das
sub
nop
mov
inc
test
sar
cld
inc
mov
adc
mov
pop
mov
insb
jp
push
bound
and
js
je
inc
add
fidivl
cmp
mov
sbb
push
jb
push
add
and
inc
adc
push
add
add
xchg
push
inc
xchg
bound
lret
push
into
mov
xor
mov
mov
mov
jb
xor
mov
jg
lret
loop
push
xchg
popfw
incb
js
movsb
jp
scas
movsb
mov
sub
adc
mov
and
and
daa
pop
mov
mov
int3
test
rep
xcrypt-ecb
cmpsl
dec
jg
dec
aad
jle
out
out
inc
and
lahf
jb
decb
mov
arpl
lds
ret
outsb
or
scas
enter
sub
fildll
pop
inc
add
push
sbb
pop
xor
add
loope
mov
ficompl
jecxz
jecxz
xor
in
pop
pushf
dec
xchg
push
sub
imul
cli
pop
xor
add
xchg
iret
sbb
shlb
sti
aas
xor
frstor
add
inc
dec
push
loopne
mov
and
subl
xchg
cltd
fwait
xor
aas
scas
jns
stos
lea
std
mov
dec
out
pushf
out
lret
jo
movsb
inc
aam
adc
mov
in
cmp
adc
out
push
call
add
insb
inc
rolb
mov
adc
icebp
leave
imul
jne
cli
js
mov
insb
adc
mov
inc
sub
jnp
das
test
dec
inc
addr16
jle
or
cmp
mov
add
inc
cmp
lds
mov
and
pop
or
push
insb
mov
mov
test
ljmp
mov
and
sahf
insb
sbb
out
sbb
rclb
data16
addr16
aas
xchg
mov
popf
roll
sti
mov
mov
shr
sub
pop
pusha
test
mov
dec
push
adcb
and
and
sbb
lret
adc
scas
or
mov
test
enter
das
jno
call
mov
repnz
mov
scas
fistps
stos
in
ja
xor
out
ret
movsl
out
jge
iret
mov
scas
bound
jne
daa
bound
mov
jp
mov
imul
pop
mov
add
pop
sbb
and
in
or
and
xor
xor
inc
pop
xchg
dec
pop
fadds
mov
push
pop
cwtl
lock
add
std
jo
sub
push
test
pop
aad
je
movsb
jae
add
adc
cli
cmp
jecxz
mov
pusha
jnp
adc
xchg
mov
cwtl
xchg
fwait
les
xchg
and
inc
pushf
orb
xor
cmp
dec
sbb
out
inc
sti
fs
push
lock
mov
mov
inc
or
daa
stos
cmc
add
test
out
mov
mov
hlt
in
sahf
dec
das
mov
les
ret
int
cld
and
xchg
jb
push
ds
incb
sbb
bound
or
cltd
loopne
test
jae
lods
aad
pusha
pop
notb
popf
and
testl
adc
scas
mov
fwait
ss
jl
sbb
lock
cmpsl
je
cmp
push
push
sub
clc
sahf
ret
xchg
push
mov
rorl
fisubrl
test
dec
stos
mov
mov
push
outsb
sub
dec
push
adc
xchg
pop
loop
sbb
outsl
fstp
sub
popa
jecxz
ss
bound
ret
les
clc
jb
cmp
xor
nop
and
and
stos
mov
push
sbb
push
push
jno
push
jne,pn
cmp
or
mov
pop
pop
icebp
das
mov
sbb
mov
sbb
aam
out
pop
in
daa
ja
lea
adc
and
cli
aad
and
gs
pop
inc
jne
jmp
pushl
xor
loop
inc
xchg
out
movsb
jb
or
fsubrs
cmp
ss
jo
pop
mov
or
inc
test
mov
mov
cld
adc
xor
lcall
mov
scas
push
pop
fwait
inc
mov
jmp
repz
pop
aam
cltd
mov
xchg
push
test
jnp
js
mov
mov
dec
mov
mov
test
sbb
fistps
sbb
adc
mov
ja
push
adc
and
fnstsw
inc
mov
xchg
inc
add
push
push
loope
stc
sbb
inc
push
stos
sbb
sahf
lahf
xchg
jns
mov
test
cmp
sbb
mov
test
cmp
mov
or
or
inc
imul
mov
pop
fnstenv
inc
shlb
fs
mov
jbe
cmpsl
mov
popf
cmp
pop
mov
daa
call
movsl
mov
xchg
outsl
mov
popf
cs
sub
add
je
jp
xor
leave
mov
fdivl
sub
test
imul
dec
and
inc
sbb
jle
pusha
inc
loop
in
test
in
mov
es
lahf
jp
push
enter
pop
in
das
inc
ret
and
test
pusha
test
aam
lret
popf
mov
out
mov
inc
lahf
dec
jmp
dec
jl
push
jo
jae
inc
sbb
mov
jne
imul
push
adc
mov
and
movl
nop
jge
jbe
jno
cli
fs
stos
pop
cli
stc
and
add
subl
imul
add
dec
ret
mov
andl
popa
test
push
in
pop
ljmp
fcomip
ret
inc
cld
jnp
dec
inc
sub
hlt
lods
jecxz
sbb
pop
lret
movsb
pusha
mov
jns
daa
xchg
lock
push
leave
call
adcl
sbb
je
inc
outsb
jmp
pop
push
lea
push
lret
je
das
lahf
inc
or
cmp
xor
mov
aaa
xorb
jo
inc
mov
add
and
mov
pushf
std
in
aam
mov
ja
jbe
or
mov
and
cmpsb
xchg
fs
inc
imul
xchg
enter
lock
xor
pop
nopl
dec
cmp
leave
push
pop
mov
xlat
adc
shlb
aad
test
pop
xlat
sub
lret
pop
push
xchg
mov
sub
xchg
cld
push
les
jg
jp
xchg
stos
lds
and
popf
mov
or
fs
or
cmp
sti
mov
mov
add
movsb
and
data16
pop
mov
push
clc
sti
cltd
pop
inc
xchg
or
sbb
inc
icebp
popa
push
cmpsb
imul
jg
pop
xor
shll
lret
insl
dec
xor
jnp
shr
cltd
sbb
std
orl
fstp
sub
enter
xor
push
cmp
jnp
enter
clc
insb
icebp
xor
ja
push
mov
outsl
jae
loope
and
mov
push
subl
adc
inc
call
in
sbb
test
inc
enter
xlat
out
imull
mov
xlat
cmp
es
ja
fcoms
jno
hlt
push
sbb
lcall
roll
adc
adc
loopne
xor
add
ret
popa
mov
sub
bound
dec
aaa
add
xor
push
mov
dec
xorb
and
sahf
gs
icebp
aaa
cmp
sub
add
sti
js
push
pop
dec
mov
sub
jge
mov
cmp
inc
push
outsb
inc
push
andb
push
mov
jns
js
push
pop
inc
pop
push
pop
sub
ja
xorl
out
pop
iret
scas
sbb
clc
dec
fadd
popf
xor
inc
insb
sbb
daa
pop
pop
pop
std
and
sbb
divl
leave
cmp
push
pop
mov
mov
sbb
aaa
cld
cmp
sbb
gs
ja
lds
jecxz
repz
fiadds
cwtl
dec
push
ret
add
fsubrl
pop
lret
insb
or
inc
sub
adc
xchg
jmp
in
out
cltd
iret
popf
inc
sub
inc
sti
cmp
xchg
push
js
cld
sub
mov
and
ja
pop
cld
and
xchg
stos
or
jno
movsb
insl
sub
adc
and
out
orb
xor
mov
xchg
fwait
ja
sub
popa
icebp
mov
cmpsb
addb
js
inc
xchg
cs
adc
push
fnstsw
daa
aaa
out
mov
mov
call
sbb
cwtl
mov
mov
sbb
pop
or
pop
inc
sbb
test
lods
imul
aad
scas
cmp
pusha
jp
sbb
push
insb
leave
notl
outsb
mov
rcrb
jmp
fsubrs
lock
sub
addr16
mov
and
mov
movhps
lcall
xchg
insl
mov
lcall
hlt
xchg
mov
ret
icebp
dec
mov
fldl
inc
cmp
out
cmc
incl
push
fldl
mov
clc
add
ret
lods
cltd
mov
outsb
mov
jbe
mov
incb
jg
mov
mov
test
inc
xor
sbb
movb
dec
out
pop
repnz
dec
test
mov
inc
or
scas
xchg
in
sub
inc
in
adc
add
xor
inc
and
nop
mov
test
push
repnz
mov
mov
mov
roll
loop
sub
cmc
or
xchg
mov
lods
fbstp
xor
adc
cmp
imul
inc
aas
add
enter
and
mov
cmp
mov
and
sub
int
mov
xchg
sahf
movsl
mov
and
movb
or
jp
mov
jle
mov
sbb
scas
adc
cmpsb
inc
mov
cli
jae
or
cli
popf
imul
cmpsl
cltd
jns
dec
cmpsl
std
and
push
or
out
mov
adc
inc
lea
or
and
cwtl
rorb
outsb
shrb
rcr
push
cltd
jnp
lds
ret
jo
xchg
cli
fcoms
cltd
add
pop
push
movzwl
cmovne
adc
adc
sbb
imul
mov
inc
popa
push
testl
cmp
sub
xchg
jmp
xchg
out
clc
imul
push
jo
mov
stc
insb
sbb
and
test
push
push
push
dec
rcrb
jle
push
ja
in
mov
pushf
and
stos
cmp
pushf
mov
stc
stos
adc
mov
mov
mov
pop
cli
xchg
xor
icebp
enter
stos
fistpl
fnstsw
sbb
gs
std
loopne
dec
jns
xchg
stos
int
xchg
add
fstpl
pop
bound
and
cmp
les
bound
gs
mov
xor
add
cmpsb
add
fstl
push
arpl
fsubp
fistpl
or
jecxz
xorb
xor
mov
setne
fidivl
xchg
popa
pusha
int
pop
es
or
data16
lret
lea
cmp
repnz
sbb
xlat
in
sti
pop
pop
xchg
pop
mov
xor
fidivrl
add
xchg
cld
mov
mov
pop
or
xor
jl
sub
xor
add
call
ss
shlb
inc
xchg
adc
mov
and
out
ja
push
call
fbld
mov
pusha
cmpsb
pop
adc
dec
int3
adc
inc
frstor
shlb
mov
mov
scas
fwait
scas
mov
je
mov
rclb
jp
lahf
xchg
push
add
fst
and
inc
sbb
aam
inc
rep
cli
scas
movsl
jge
push
xchg
add
xchg
ret
in
call
negb
mov
xchg
popa
push
imulb
mov
adc
addb
and
lcall
sub
fcompl
mov
inc
mov
outsb
rol
lcall
stc
mov
mov
in
push
and
push
cmp
xor
xchg
mov
sarl
adc
ret
dec
ficoml
dec
sub
jns
cmp
jb
fwait
push
mov
hlt
test
roll
pop
or
sub
es
in
ret
in
iret
sbbb
rcrb
dec
out
test
adc
sub
sahf
mov
pop
flds
mov
mov
mov
stc
jb
popa
aaa
scas
cmp
dec
mov
and
or
shl
push
jecxz
adcl
addr16
and
mov
lods
and
dec
adcl
jns
cli
push
and
jae
mov
mov
cmp
mov
popa
pop
pop
lahf
out
jl
roll
fisubrl
shlb
and
cli
sub
add
and
mov
or
push
shrl
xchg
je
outsl
sub
ffree
mov
pop
ror
dec
and
mov
sahf
add
rolb
out
insb
int3
js
jl
add
repnz
pop
mov
or
inc
sub
mov
xlat
and
inc
cmp
cmpsb
sbbl
out
outsl
sbb
rorl
cmp
imul
cmc
mov
sarl
pop
nop
inc
shr
xchg
cmp
neg
adc
sbb
pop
jnp
lcall
xchg
mov
movsl
stc
stc
jge
pusha
outsb
cmpb
sahf
jno
bound
enter
mov
fdivrp
inc
cmp
out
jle
jg
bound
ja
lret
cltd
loop
lock
cltd
sub
fs
fwait
je
dec
out
nop
outsb
xchg
mov
lods
out
movsl
jge
jecxz
dec
xor
out
pushf
addr16
xlat
call
scas
pop
pop
and
lods
mov
dec
and
sbb
pop
and
or
and
pop
jae
pop
lods
jb
push
fildl
push
xchg
mov
cmp
ljmp
fcomps
daa
aaa
cmpsl
mov
inc
pusha
sub
insb
mov
loop
add
inc
rclb
inc
movsb
lret
pop
sub
mov
mov
sti
mov
mov
cmp
in
xor
fbstp
dec
push
mov
mov
xchg
jle
neg
inc
rcrb
mov
xorb
inc
cmpsb
push
cmpsb
or
jg
stos
dec
insl
or
jle
mov
and
pop
clc
insl
sub
fstpt
push
and
and
std
dec
in
mov
push
xor
lock
dec
add
ja
test
mov
mov
data16
cmp
dec
xor
lods
adc
in
cld
cli
push
xchg
cmp
int3
xor
repz
jg
inc
enter
in
sub
mov
scas
je
cwtl
dec
pop
inc
xor
les
dec
arpl
incb
add
jno
mov
out
jae
hlt
sbb
xchg
std
lock
xlat
xchg
outsl
cmp
adc
shlb
aad
jns
imul
xchg
or
cmp
dec
inc
out
out
cltd
loop
and
mov
pop
mov
dec
pusha
mov
add
inc
sub
int
push
icebp
adc
mov
loope
mov
mov
pop
cmpsl
or
mov
aaa
fwait
shlb
and
mov
pop
push
pop
add
jp
lods
sub
dec
enter
mov
adc
cmp
negl
ja
mov
negb
mov
inc
cltd
dec
pop
mov
imul
dec
add
add
push
ret
int3
mov
pop
mov
sahf
cld
push
jmp
mov
adc
push
jo
out
xor
or
ret
jns
adc
mov
inc
pop
sbb
xor
jecxz
pop
mov
mov
cmp
jmp
fiaddl
movsb
mov
cs
dec
test
shll
pushf
int3
add
push
in
mov
sub
imul
stc
xchg
mov
sub
mov
mov
inc
les
or
shl
bnd
pushf
enter
insl
cmp
inc
pop
aas
mov
sub
scas
jg
jp
fnsave
stos
ret
ljmp
sub
add
cmp
jbe
pop
adc
nop
fsub
mov
scas
push
cwtl
sbb
std
add
push
mov
push
fidivrl
pop
mov
pop
fdivrs
xchg
aaa
pop
arpl
inc
push
outsl
call
mov
repz
and
xchg
addr16
mov
add
sbb
pop
ljmp
xchg
les
or
sbb
scas
lea
cmp
xor
gs
pop
inc
jp
xor
insl
inc
sti
lods
cmp
andl
int3
movsl
cmc
mov
lret
sbb
leave
inc
xor
or
xchg
jno
dec
inc
mov
sub
roll
gs
cmp
jge
aaa
int
arpl
xchg
inc
adc
jle
in
jne
mov
es
adc
ficomps
xchg
xor
ljmp
xchg
insb
and
jo
mov
rcr
and
dec
pop
adc
iret
cmp
lock
push
pop
xchg
scas
add
cwtl
jmp
and
inc
lods
js
add
les
jae
sub
xlat
cltd
xchg
pop
cltd
sahf
jl
or
mov
cs
inc
mov
dec
inc
gs
dec
fst
sub
and
in
lret
push
pop
loope
mov
jno
dec
test
sti
lret
jle
mov
cmp
mov
add
js
or
inc
ljmp
adc
cmp
mov
pop
xchg
into
sahf
sbb
in
pop
jecxz
jns
shl
xchg
cltd
and
movsb
mov
jbe
mov
mov
clc
in
push
std
negl
xor
aam
mov
les
loope
cs
mov
out
mov
fwait
mov
loopne
sub
xchg
inc
fsts
int
mov
imul
daa
add
cltd
lods
mov
mov
and
or
push
jg
mov
push
ror
loope
clc
xchg
bound
sbbl
push
dec
jb
in
jb
mov
fsubr
fwait
stc
jnp
inc
push
mov
vmwrite
aas
out
lds
clc
xlat
ja
jp
push
mov
or
dec
jmp
outsb
movsb
rcll
sti
inc
pop
add
insl
scas
sbb
xchg
leave
jmp
dec
or
xchg
cmp
xchg
sbb
fisttpll
xchg
sub
dec
insl
cmp
jo
repnz
in
sbb
dec
cli
mov
jb
stos
outsb
pusha
bound
outsb
mov
sub
inc
push
xchg
test
jne
bound
aaa
jae
add
cmpsl
scas
roll
xchg
mov
ljmp
nop
push
pop
push
dec
and
fnstcw
pop
jns
push
stos
and
xchg
adc
mov
sub
mov
inc
jle
movsb
mov
ja
dec
jl
mull
jo
cmp
insl
jbe
jns
mov
aam
stos
push
add
xchg
xchg
loope
xchg
outsb
xchg
call
pop
xor
mov
popf
lcall
jl
mov
bound
inc
mov
test
mov
loop
sbb
adc
push
or
push
aas
stos
cld
ret
dec
inc
cltd
inc
in
xor
sub
xchg
or
in
into
inc
repz
inc
add
xchg
mov
pop
mov
mov
inc
adc
cli
sti
cltd
and
leave
outsl
push
mov
mov
xchg
mov
leave
mov
xchg
sbb
out
and
leave
stos
lods
pushf
xchg
jmp
sbb
push
jne
xchg
decl
je
stos
orb
fidivrs
xor
popf
pop
xchg
xchg
pop
pop
pusha
xchg
sbb
ljmp
in
and
mov
es
cmpsl
std
dec
sbb
test
leave
ret
pop
xchg
ret
push
push
pop
std
sbb
sbb
cmp
ja
movl
cli
xor
test
stc
xchg
or
cmp
std
mov
inc
lds
cmp
sub
lret
mov
popf
ds
negb
add
movl
stos
mov
lret
mov
call
adcb
stos
ret
cmp
sub
das
mov
dec
adc
aas
xchg
sti
out
mov
enter
add
inc
add
adc
popa
in
push
push
mov
add
fidivrl
shlb
cmp
arpl
iret
inc
pushf
int
jl
inc
jno
jb
insb
mov
notl
mov
repz
inc
push
into
cmp
sbb
xchg
test
daa
loopne
cwtl
lods
negl
je
jle
mov
sub
loope
jbe
mov
movsl
rclb
dec
dec
or
lcall
mov
arpl
imulb
lock
xchg
imul
push
inc
fsubr
jge
repz
sbb
mov
rorl
filds
shr
mov
push
xchg
sub
jge
xor
and
je
scas
fidivrs
test
dec
cmpsb
jnp
push
mov
shll
xchg
jmp
add
cltd
mov
test
cmp
mov
sarb
adc
mov
js
shrl
cld
xor
mov
fisttpl
mov
jmp
lock
ljmp
jecxz
xchg
mov
mov
xor
mov
rorl
rcl
daa
subl
jnp
sub
js
mov
shr
jns
cmpsl
fsubs
mov
int3
cmpsl
add
in
mov
in
push
or
notl
pop
xor
and
mov
and
fidivrs
or
and
fsubrl
popa
shlb
shll
push
add
pop
in
jg
and
lods
jns
xlat
add
mov
add
test
mov
arpl
insl
xor
jnp
sub
insb
outsl
dec
imul
fcoms
add
out
mov
fisttpl
leave
and
sub
test
dec
push
inc
jne
add
or
or
lahf
xlat
sarb
cmp
add
andb
xchg
les
dec
inc
adc
and
push
cltd
vandnps
insl
stos
je
das
pusha
jnp
shlb
mov
fs
dec
cltd
mov
cmpsb
sti
push
call
or
in
std
hlt
hlt
outsb
pop
inc
lds
subb
xor
cmpsb
out
mov
pushf
jecxz
stos
lret
flds
lock
in
pop
data16
in
mov
mov
jns
dec
test
and
or
negb
outsl
hlt
sbb
icebp
xchg
dec
mov
push
nop
fisubrl
xchg
lods
cmpsl
dec
jne
mov
daa
enter
sbb
arpl
sub
dec
clc
inc
mov
adc
repz
mov
push
push
sbb
test
sub
xor
inc
push
outsl
pusha
adc
into
call
ds
jge
pop
lods
jp
pop
filds
inc
stos
aam
idivl
push
mov
sbb
pop
test
or
mov
inc
xchg
mov
and
mov
mov
aas
enter
enter
out
mov
sub
xchg
dec
jg
std
dec
xacquire
jl
inc
pop
or
out
fistps
mov
insb
sub
cwtl
push
sub
inc
add
leave
bound
stc
cmpb
dec
mov
sbb
xchg
movsl
pop
jg
push
jnp
gs
and
in
pop
xchg
out
lret
movsl
dec
push
rclb
inc
cmc
dec
lods
outsl
imul
xchg
push
fdivrl
aad
mov
dec
dec
gs
rorl
mov
adc
mov
sti
aaa
jae
sub
out
sub
mov
fs
imul
out
icebp
incl
inc
outsl
mov
and
pop
icebp
add
or
jo
fsubr
test
xchg
pushf
cli
ret
scas
pop
sub
bound
leave
and
push
sbb
stos
sub
xchg
sub
loop
out
or
jl
iret
inc
mov
cli
clc
aas
test
push
sti
dec
orl
sbb
movsb
enter
out
or
mov
sbb
stc
pop
fdivs
inc
xchg
lods
out
lcall
mov
pushf
stos
pop
pop
and
mov
pop
sbb
movl
fcoms
mov
cmpsl
js
mov
inc
ss
and
mov
out
mov
mov
jb
xlat
xor
mov
rcrb
adc
outsb
shrl
movsl
cmp
pusha
inc
out
jge
xor
ret
orb
push
inc
pop
mov
dec
mov
mov
or
test
sahf
push
int
mov
dec
imul
fstpt
adc
pop
stc
je
pop
std
mov
in
rclb
gs
ret
lock
loopne
push
notb
jle
cwtl
cltd
and
jb
sbb
out
int3
mov
lahf
cmpsw
fcoml
cld
hlt
mov
adc
jmp
add
lret
scas
leave
sub
add
negb
call
inc
imul
cltd
push
mov
test
add
stc
mov
inc
lgdtl
sbb
jno
mov
xchg
adc
adc
xchg
ret
fisubrs
push
add
test
cmp
sbb
fs
out
stos
scas
pop
sub
or
test
sbb
aad
mov
jp
dec
insl
out
lea
mov
pop
mov
sti
inc
pop
cmpl
in
xchg
pop
pop
adc
cs
es
sbb
pop
xor
pop
lret
imul
fmuls
lock
xor
out
aaa
or
fdivr
cmp
mov
cmpsl
ret
or
out
jo
lahf
lds
and
dec
mov
adc
fldt
test
mov
rorl
mov
fcmovnb
sbb
mov
adc
mov
les
pop
addl
or
arpl
addr16
icebp
xchg
ljmp
add
push
scas
pop
or
imul
pop
aad
sbb
aas
testb
nop
lock
cmp
stc
sbb
ret
in
sbbb
decl
bswap
add
shrl
sub
rorl
dec
out
rcrb
and
roll
mov
mov
lea
dec
inc
imul
or
test
nop
adc
pop
lds
ja
cmc
icebp
dec
lcall
jp
dec
cli
addr16
xchg
xlat
roll
push
imul
add
andl
sbb
mov
sub
sbb
jg
aaa
scas
cmp
sbb
fucom
adc
jo
ss
movl
xchg
inc
dec
jae
js
jl
sbb
addr16
jno
iret
and
loopne
out
ret
nop
push
mov
jae
mov
int
xchg
js
in
push
cltd
out
xchg
add
jl
ficompl
add
mov
push
mov
push
and
cmc
adc
fwait
outsb
arpl
popf
stc
arpl
mov
and
scas
mov
ret
xchg
push
out
insl
lods
clc
push
cwtl
negb
je
cmp
loope
inc
lods
out
add
mov
decl
int
scas
imul
mov
pop
loope
or
ja
pushl
push
push
frstor
adc
mov
outsb
ds
add
add
daa
sbbl
cwtl
inc
push
mov
push
test
stc
mov
shrb
test
test
mov
std
jecxz
lahf
jae
cmp
shll
das
pusha
into
cmp
mov
in
mov
and
inc
and
jno
repnz
push
inc
sbb
sub
cmp
loopne
jle
mov
xor
inc
sarl
and
addr16
push
cmp
daa
imul
add
adc
out
xor
sti
or
mov
push
push
sarl
or
ljmp
push
dec
lea
aas
cltd
sbb
xor
in
adc
mov
xchg
mov
leave
mov
int
aad
jne
out
stos
sti
out
xchg
sub
mov
sub
mov
ret
shrb
add
popa
cmpsb
jae
push
jp
or
pop
sub
pusha
fmull
pop
fsubrp
movsb
cmp
jl
add
adc
out
out
jne
mov
add
mov
adc
or
and
sbb
push
pushf
inc
jnp
mov
xor
es
arpl
scas
imul
sbb
jno
push
or
mov
add
mov
inc
dec
and
movl
enter
mov
xor
nop
and
mov
pop
sahf
mov
stos
mov
xchg
mov
pop
dec
jns
test
dec
aam
je
cmp
xor
push
jg
and
xor
std
insl
add
in
test
data16
jmp
fdivrp
dec
sbb
mov
mov
xor
adc
sub
cs
insb
cltd
lds
movsb
test
lods
cmp
out
sbb
push
dec
iret
pop
mov
lcall
sar
mov
or
adc
jle
inc
mov
out
dec
dec
out
sbb
push
lret
add
movsb
arpl
popa
lods
dec
stos
inc
sbb
pusha
pop
jnp
cmp
push
mov
rol
jbe
pop
test
mov
cmp
mov
popf
fdivs
stos
mov
in
scas
mov
jbe
inc
aad
mov
mov
lret
fnsave
dec
lds
mov
lahf
cltd
pop
xorl
mov
xor
pop
repnz
dec
and
or
sub
jl
loope
mov
repz
mov
out
rcrb
sub
xlat
clc
aad
dec
mov
inc
pop
in
pop
int3
adc
push
cmpsl
lods
jg
sub
out
add
dec
dec
mov
sbb
in
or
imul
inc
leave
sti
add
aad
mov
or
outsl
inc
add
mov
mov
dec
fcomp
loopne
nop
pop
cli
lock
xchg
loope
out
push
and
lea
popf
out
mov
iret
adc
cmp
mov
subl
enter
mov
jno
push
jns
add
mov
scas
js
mov
int
or
inc
data16
adc
lea
inc
xlat
mov
add
pop
fprem1
repz
inc
fistps
push
dec
sub
imul
mov
outsl
cmp
add
push
cmpsb
sti
or
mov
dec
movsl
dec
rorl
cltd
xchg
push
xchg
adc
adc
cwtl
out
cwtl
jge
push
movsb
pop
mov
pushf
pop
add
inc
loop
xchg
imul
lods
lods
lcall
add
push
in
pop
divb
imul
xor
roll
push
mov
div
in
jmp
lret
int3
and
aaa
and
adc
into
inc
mov
mov
fnstcw
mov
push
cmp
sbb
fists
stos
mov
andb
cld
pop
or
jns
pusha
mov
fcmove
push
les
sub
push
iret
cmp
roll
or
popf
and
cld
mov
mov
jl
xchg
pop
add
xor
sub
jb
xchg
insl
inc
add
movsl
xor
and
cmp
sbb
jns
imul
in
ljmp
out
aas
insl
push
cmpsl
jecxz
inc
mov
loop
rcrb
addr16
nop
xchg
lea
mov
in
rolb
xor
loop
int
int3
test
out
push
dec
or
int3
xchg
jmp
imul
das
icebp
and
mov
push
cwtl
js
adc
hlt
mov
aas
cmp
outsb
push
roll
iret
xchg
inc
push
push
or
in
rcrl
popf
in
and
adc
lcall
cld
mov
inc
ret
and
push
jmp
xchg
fidivrs
ja
and
push
shl
pop
cmp
inc
xchg
loopne,pn
mov
mov
xchg
mov
xor
cmp
mov
lods
idivl
and
mov
sbb
jo
les
adc
push
sti
sbb
xchg
push
enter
clc
loope
push
lret
out
lock
inc
xor
push
rclb
fstl
daa
mov
ds
cmp
mov
cmp
jp
inc
mov
fimuls
jne
aas
in
out
inc
notl
push
jmp
push
loopne
push
icebp
add
fsubs
fmuls
push
out
sbb
int
add
std
xor
ficompl
sbb
xor
les
call
scas
xchg
adc
cmc
repnz
loop
rcrb
jp
inc
pop
dec
sub
inc
cld
sbb
sub
iret
jmp
test
add
ret
or
into
popf
jle
es
inc
nop
push
dec
loope
cmp
imul
cmpsl
rcrb
pop
jge
xor
sarl
fildl
lcall
jp
add
pop
cmc
sub
out
inc
repnz
jp
jae
jae
pop
std
cs
cmp
shlb
lret
fnstcw
scas
jle
jno
jae
xchg
ret
fcomi
add
sub
shrl
movsb
in
jmp
fcoms
sub
push
xchg
frstpm(287
movsl
mov
xlat
ret
inc
in
mov
cmp
xchg
xlat
jmp
stc
pop
push
loop
hlt
sbb
jb
jns
add
test
test
mov
mov
aad
ffree
adc
roll
lods
test
adc
xor
inc
inc
insb
xor
pop
sub
icebp
test
lds
cmp
cmc
in
cltd
std
setno
faddl
enter
mov
jae
mov
add
mov
cmp
inc
mov
dec
sbb
mov
mov
mov
xor
add
cmp
sbb
xor
sti
nop
sub
pop
rclb
imul
insl
dec
add
sub
fwait
inc
adc
cmc
jmp
mov
jp
inc
lcall
out
imul
sti
jmp
sbb
pushf
adc
movsl
subl
shlb
push
mov
das
push
mov
xsaves
movsb
xorb
loop
ss
fcmovnb
xchg
inc
pop
sbb
mov
insl
cmpsb
jmp
leave
pop
cltd
addr16
push
shlb
dec
ss
test
pushf
xor
mov
cld
call
cli
repz
jb
sti
push
mov
sub
dec
mov
or
and
mov
xor
cmpsb
hlt
mov
sbb
mov
jne
or
xchg
lods
addl
xor
mov
test
and
inc
jnp
inc
add
mov
dec
jb
ljmp
pop
fisttpll
dec
sbb
movsb
pop
mov
mov
pop
or
dec
jno
out
in
lds
out
and
lcall
fisttps
outsb
in
and
aad
xchg
push
jl
add
ja
mov
or
lock
ss
xor
lock
mov
fldenv
xchg
filds
jle
adcl
add
xor
ret
icebp
int3
mov
in
inc
popa
mov
jns
daa
int
stc
ficomps
in
loop
push
mov
data16
outsl
inc
dec
arpl
xchg
adc
adc
push
inc
push
mov
addr16
pop
out
pop
out
mov
jg
gs
or
lea
insb
or
pop
jp
hlt
jbe
mov
push
jae
cmp
inc
cmp
mull
movb
leave
addb
sub
rcrb
or
and
pop
jecxz
rcll
in
and
ljmp
push
mov
cltd
ljmp
mov
xor
mov
cmp
lock
xor
lret
test
and
js
scas
mov
rcrb
sub
push
xchg
sub
add
push
and
pop
jmp
hlt
sub
and
mov
mov
insl
in
mov
adcb
les
sub
sbb
mov
ret
sub
mov
add
cmp
jp
cli
xchg
cmc
and
ss
notb
jmp
jnp
cmpsb
mov
addl
mov
and
lahf
imul
dec
mov
jbe
mov
push
xchg
mov
mov
add
adc
movsl
aas
xor
dec
adc
pop
inc
dec
cmp
and
jg
ja
enter
dec
fs
mov
pop
imul
push
popf
xchg
daa
jle
xor
fwait
cmpsl
jg
jmp
fstpl
mov
xchg
inc
dec
pop
imul
xchg
push
xor
cmpsl
aad
fsubl
pop
xchg
shlb
and
push
sub
mov
dec
popf
xor
jno
lcall
sbb
test
test
jns
or
push
stc
cmc
sbbb
mov
mov
test
test
adc
dec
roll
jle
divl
cld
fidivrs
xor
int
xor
push
test
add
pop
cwtl
lock
or
xchg
pop
sub
cli
add
fdiv
pusha
les
insb
int3
rclb
and
push
pop
cltd
negl
les
lods
mov
lret
int
lcall
sub
lret
aaa
mov
outsb
lret
mov
adc
mov
in
jecxz
rcl
vpxor
dec
mov
mulb
jge
inc
or
mov
cmp
push
dec
loop
sti
sub
push
int
dec
add
push
aas
mov
arpl
bswap
fists
mov
insl
jb
scas
movsb
and
fdiv
ss
mov
imul
repnz
notb
adc
or
insl
cmp
lock
dec
lret
ljmp
ret
loope
add
insb
fs
mov
pop
les
aad
roll
push
pushf
xchg
and
add
adc
cmp
enter
mov
mov
jne
lret
call
fdiv
fdivrl
xchg
daa
out
mov
aas
mov
lcall
test
repz
std
inc
lods
jo
pop
or
addr16
loope
push
add
push
pop
sbb
mov
addr16
sbb
pop
add
pop
jno
xor
mov
psubb
mov
lods
mov
adc
add
movl
cmp
ljmp
mov
mov
imul
or
push
mov
lret
pop
xor
add
jg
inc
in
inc
sub
mov
xor
jae
or
insb
cwtl
fs
mov
pop
xlat
sbb
adc
inc
cmp
sbb
filds
nop
mov
xchg
jno
and
loope
vunpckhps
decl
xor
insb
push
xor
or
test
pop
add
jbe
js
mov
cmc
andl
sub
cmp
ja
data16
cld
xor
lret
mov
sub
lock
jecxz
jbe
lods
push
subl
dec
lret
movb
out
cmp
sub
lods
jg
or
xchg
push
xor
xchg
cmp
and
lcall
pop
inc
dec
sub
mov
sbb
jno
jo
out
xchg
lahf
in
xchg
out
sti
ret
call
and
pop
loop
pop
popf
push
add
or
xor
or
in
or
hlt
or
aaa
clc
lds
and
imul
in
cli
lea
aam
int3
loop
ja
and
dec
xor
pusha
lret
pusha
or
mov
ss
jle
inc
mov
adcb
mov
mov
movsl
call
pop
sbb
fistl
xchg
adcl
inc
out
sbb
mov
mov
sub
mov
or
mov
add
jl
clc
pop
push
cmp
mov
mov
add
push
ds
in
gs
mov
mov
fldl
jae
arpl
dec
add
mov
test
das
icebp
and
pop
dec
mov
rep
mov
out
dec
mov
iret
push
add
in
push
dec
inc
daa
sub
jae
fisttpl
push
add
loopne
cwtl
push
and
sbb
cmc
dec
or
mov
cmp
ficomps
sbb
inc
mov
mov
loopne
pop
cmc
adc
and
sbb
or
sbb
lods
xchg
arpl
cli
inc
lods
jecxz
lret
mov
mov
pop
daa
push
in
out
push
and
jns
lcall
xchg
out
addr16
inc
fwait
sub
mov
xor
mov
add
push
push
stos
mov
inc
andb
pop
inc
outsb
xor
outsl
mov
imul
or
adc
cwtl
xor
call
sub
xchg
sbbl
xor
adc
imul
pop
in
mov
cmp
add
lea
test
or
scas
cmp
pop
push
stc
adc
inc
jmp
adc
fisubs
mov
push
add
lods
lea
jecxz
scas
into
xlat
add
movsl
mov
push
mov
or
mov
dec
in
inc
adc
mov
xor
stos
sahf
add
adc
mov
es
and
imul
mov
into
jg
sbb
push
or
sbb
stos
mov
xor
lods
xlat
jle
movsb
inc
mov
xchg
out
pop
push
test
jmp
mov
ja
push
dec
subl
mov
dec
popl
out
rolb
insl
cmp
adc
scas
adc
sub
in
and
ds
popa
pop
push
out
mov
sub
std
sub
imul
addr16
shll
loop
inc
sub
roll
cs
inc
push
adc
add
cld
imul
dec
fistpll
cmp
sub
fsubrs
pop
sbb
rclb
lahf
pushl
sbb
fimuls
mov
adc
test
out
inc
out
adc
jge
in
lcall
rolb
int3
mov
das
sbb
mov
fimuls
shl
mov
paddusw
cmp
sti
push
mov
cmp
jmp
aaa
add
or
inc
loope
call
add
dec
ret
dec
adc
mov
mov
dec
dec
mov
jbe
fiaddl
movsb
xor
mov
enter
lcall
insb
push
xchg
inc
pop
iret
mov
sbb
cltd
ljmp
or
xor
sbb
pop
aas
les
rolb
xor
mov
movb
gs
daa
mov
in
das
mov
imul
fdivrl
add
sub
shlb
xor
insl
mov
and
mov
push
arpl
bswap
repz
sub
inc
loop
fcmovne
jmp
push
pop
xor
jnp
pop
nop
mov
popa
jno,pn
aas
insb
pop
movsl
xor
test
iret
lret
daa
xchg
push
inc
sub
shrl
clc
mov
mov
dec
scas
test
addr16
inc
pop
inc
insl
ds
pop
jns
fucomi
pop
aaa
out
add
xchg
stos
jae
jno
push
mov
lret
icebp
clc
sbb
fisubrl
aaa
jge,pt
push
out
subl
jle
out
sahf
loope
pop
xchg
std
inc
mov
aam
test
xorb
insl
scas
add
sub
adc
add
dec
das
pop
pop
push
push
fisubs
in
je
sbb
bound
daa
scas
fidivl
in
aam
sub
push
mov
mov
call
jb
push
addr16
push
cmp
inc
icebp
mov
shlb
pop
or
mov
in
insb
rclb
push
xor
mov
mov
insl
add
push
and
test
int3
adc
popa
std
jp
aaa
push
sbb
cltd
das
push
add
adc
fisubrs
scas
mov
fisttpll
mov
jns
leave
int3
shr
adc
ja
arpl
mov
jb
decb
mov
clc
movsb
push
je
lds
push
xchg
sub
pop
cmp
movsb
jae
fucomip
adcb
dec
push
in
pop
loopne
cmp
test
adc
mov
fstl
mov
xchg
cmp
fisubrl
in
dec
addr16
sti
daa
or
dec
cld
imul
adc
iret
mov
mov
test
outsl
mov
sbb
pop
xor
jmp
jecxz
and
push
repnz
enter
pop
shrl
into
fistpl
xor
push
adc
push
nop
popf
sbb
sbb
dec
fdivrs
sbb
fmulp
in
imul
dec
nop
xchg
jno
out
and
arpl
sar
mov
fistpl
mov
aaa
add
movsb
dec
js
pushw
in
or
mov
mov
and
mov
fnstenv
dec
cmp
stos
jge
mov
or
int
notl
xor
or
in
divl
adc
jge
mov
inc
pop
jl
sbb
mov
xor
popf
pop
std
stos
sub
fs
cltd
mov
lret
sbb
jno
test
dec
mov
shrb
and
jp
cli
lret
mov
cmp
dec
out
rcrl
or
sbb
test
fs
fisttpl
inc
jo
add
mov
jmp
sarl
call
jl
repnz
mov
addl
fiadds
shr
push
add
cmp
sub
mov
xor
nop
mov
push
mov
xchg
xchg
mov
xchg
cmp
and
xor
jecxz
jb
cltd
or
jmp
push
or
xlat
sbb
dec
cmp
and
pop
popa
xorl
ss
jns
repz
pop
sub
loopne
repnz
adc
mov
out
stos
mov
mov
bound
or
sti
mov
mov
push
jp
and
fistpll
jns
clc
pushf
push
in
xor
cwtl
jle
aad
sbb
in
mulb
cmc
and
push
adc
jnp
ss
sub
repz
xor
xchg
mov
pusha
decl
jp
pop
mulb
jl
lods
and
ja
into
add
push
xchg
lds
popa
push
cmpsb
cmp
adc
sub
push
mov
popa
mov
mov
bound
aam
out
inc
scas
inc
out
jnp
dec
ljmp
repz
test
pop
inc
xchg
cmpsl
jnp
adc
outsb
push
xchg
fistpl
sti
nop
adc
mov
aad
loope
sbb
lock
mov
xchg
adcb
pop
mov
popa
cmp
inc
cltd
mov
adc
out
push
xor
mov
ret
xchg
add
mov
test
push
js
lds
lcall
inc
pushf
scas
xlat
lahf
sbb
mov
out
cltd
sub
mov
ud0
imul
xor
pop
cmpsl
dec
jo
mov
stos
imull
xchg
xchg
inc
sub
dec
add
das
outsb
mov
cmp
gs
sub
xchg
fs
pusha
inc
adc
mov
sub
xor
push
mov
push
in
loopne
mov
dec
test
cwtl
sub
or
and
jnp
mov
loop
push
mov
cmpsl
add
andb
fistpll
insb
mov
xor
icebp
fcomip
cs
pushl
pusha
fs
sahf
mov
xchg
dec
scas
stos
in
pop
arpl
incb
fistps
jo
mov
jl
jmp
test
cmp
leave
xor
ljmp
fists
fs
fistl
addl
and
scas
xchg
inc
adc
test
inc
faddl
aas
sub
inc
xor
roll
rorb
add
sahf
shrb
jecxz
cmpsb
mov
sar
cmc
arpl
jmp
adc
lock
jno
adc
pop
shl
jno
and
arpl
push
mov
rcrl
ja
push
lret
add
pop
fldenv
mov
data16
sbb
cld
ds
fdivrl
scas
push
mov
in
or
mov
aam
lock
sub
dec
stos
jbe
lods
mov
or
push
in
int
inc
or
xchg
call
leave
xchg
jmp
push
lods
aam
imul
test
dec
adc
and
pop
adc
cld
ret
iret
sub
leave
loope
out
pop
mov
mov
pop
int3
hlt
sbb
sub
sub
jno
ljmp
ss
imul
add
jmp
outsb
in
cmpsl
das
push
push
xor
add
pop
adcl
cmp
int3
and
repz
mov
lds
iret
ret
or
idivl
cwtl
mov
loop
mov
test
push
xlat
das
xor
xor
mov
sub
aad
sbb
aas
sub
out
jns
xchg
or
or
inc
inc
mov
cmp
fnsave
daa
jne
aad
pop
xchg
pop
cltd
ss
push
pop
dec
cmp
cwtl
sar
pop
jmp
push
sub
adc
xor
dec
and
imul
xor
jl
push
testb
cmp
scas
test
jne
popa
mov
rorb
jecxz
outsl
out
insb
push
lods
int
push
adc
push
lock
sbbb
mov
add
mov
xchg
cli
pop
cmpsl
jp
les
leave
cwtl
mov
xor
adc
inc
pop
and
test
cmp
sub
fbstp
in
adc
mov
sub
rcll
cwtl
idivl
or
in
pushf
insb
lret
add
cmp
aad
mov
pop
inc
popa
mov
push
push
xchg
int
fdivrl
cmp
cs
mov
xor
sbb
mov
mov
cmc
adc
std
jge
je
xlat
ret
pop
mov
fists
js
pop
lea
filds
mov
xlat
jle
ficompl
lcall
xchg
mov
mov
loope
stc
pop
xor
insl
push
pop
test
push
mov
imul
pop
or
lods
mov
jmp
mov
pop
aam
notb
xchg
jae
add
out
xchg
pop
lock
int3
stos
sar
shll
rorb
lcall
mov
fidivs
or
jno
inc
loop
icebp
mov
mov
lcall
pop
cwtl
ss
push
enter
dec
out
das
and
pop
or
inc
in
leave
xchg
ja
xchg
shlb
pop
aaa
into
push
stc
std
test
or
cmp
add
arpl
in
xchg
and
adcb
cmpsb
cld
repnz
xchg
stos
sbb
cmp
add
nop
dec
addr16
popa
out
icebp
repz
add
jb
clc
jnp
sbb
hlt
dec
cld
and
rcr
fisubrl
mov
pop
stos
cmp
ret
scas
lds
mov
adc
dec
int
sahf
push
inc
cltd
int3
repz
xor
cmp
aad
movsb
mov
xor
cld
shl
push
xor
loop
sub
sti
fimuls
test
pop
cmp
xchg
or
insb
aad
pushf
inc
mov
gs
cs
shll
pop
loop
inc
cmp
mov
nop
flds
rcrb
das
sub
jae
sbb
addl
popf
or
and
adc
dec
shrb
sub
adc
cmp
repnz
inc
hlt
inc
lea
test
mov
xchg
dec
test
jecxz
into
ljmp
inc
movsl
push
imul
fists
add
mov
cmp
cmp
cld
rcll
imul
mov
pop
ja
adc
jne
sub
fidivrl
pop
outsl
aas
js
cld
cmp
insb
push
jle
outsb
pop
add
mov
scas
sbb
movsl
jo
cmp
pop
cmp
out
nop
push
out
mov
aas
dec
les
sub
sub
js
mov
dec
test
inc
enter
push
mov
lcall
pop
outsl
clc
sub
sub
lock
stos
test
sub
xor
jle
push
push
push
adc
stos
lods
pop
inc
in
addl
mov
fsubp
mov
rclb
int3
add
pop
lods
sarb
xlat
fs
adc
add
enter
stos
inc
mov
push
test
cld
loopne
dec
jp
aaa
sub
jae
cmp
dec
in
sbbb
aam
negb
jmp
mov
pop
flds
repnz
mov
mov
pop
cmpsl
jno
aad
mov
repz
addr16
inc
sub
xor
mov
jo
rcrb
inc
jae
inc
pop
incl
out
add
leave
rorl
push
clc
out
sub
mov
and
cmp
aam
xchg
push
sbb
ljmp
or
lea
aaa
pop
mov
mov
outsb
sub
jl
mov
ss
scas
pop
sar
mov
jns
out
ds
nop
mov
xor
and
cmpsb
mov
mov
ret
push
aas
cmp
hlt
mov
stos
sub
enter
xchg
pop
jle
pop
xor
ljmp
lock
ljmp
repnz
daa
inc
lcall
out
adc
data16
sbb
inc
bound
das
sbb
mov
ds
jmp
or
sbb
jae
push
cmpb
call
sub
push
repz
push
sub
or
mov
inc
sti
inc
xlat
add
aaa
jnp
inc
test
mov
int
das
aam
mov
sub
faddl
lods
or
cmp
inc
xor
pop
adc
cli
xlat
stc
into
sub
icebp
dec
outsb
sub
call
dec
cmpb
out
add
mov
cmpsb
xchg
jne
lret
xchg
enter
lods
lea
adc
in
inc
fdivs
lcall
push
dec
or
cmp
fcmove
dec
rcl
pop
sbb
outsl
rcrb
das
push
and
jmp
jl
clc
daa
xchg
dec
and
adc
mov
fwait
ret
jp
shrb
call
cmpsb
sti
in
repnz
gs
or
lahf
xchg
and
adc
adcb
xchg
lods
xchg
jg
fcmovb
or
mov
mov
add
jg
iret
fcomp
lock
cwtl
lock
imul
sbb
lcall
rcll
outsb
sbb
sahf
mov
popa
pop
xor
and
cmpsb
notb
push
xchg
cwtl
aas
int3
icebp
cmpsb
mov
dec
xchg
push
jl
inc
xor
sbb
sbb
or
inc
shlb
call
lea
pop
dec
int3
xchg
xchg
int3
hlt
inc
mov
and
adc
test
jle
mov
outsl
xorb
hlt
popa
mov
push
sub
xchg
mov
and
frstor
cmp
mov
sti
das
movsb
xlat
test
cmp
sti
out
or
gs
push
mov
cmpsb
and
flds
pop
pop
pop
data16
mov
repz
lea
cs
fstps
dec
lahf
xchg
outsb
clc
pop
mov
ret
jno
or
fsubrl
je
add
jecxz
andl
repz
mov
scas
and
or
mov
inc
pop
pop
or
imul
mov
enter
test
or
sbb
xchg
cmp
cmp
pop
test
xchg
mov
sub
lret
sti
jb
pop
inc
mov
ret
or
dec
lods
cmp
sub
push
sbb
clc
hlt
adc
imul
lret
out
int
or
push
icebp
scas
cmpxchg
loop
sbb
pop
mov
outsl
fstl
test
or
add
sbbb
test
lcall
inc
fcmovu
inc
repnz
cs
aas
pop
loop
push
pop
and
cltd
les
fcomps
pop
out
push
ret
fcmovne
pusha
pushf
jo
stos
mov
pop
scas
inc
popa
jle
xchg
inc
pop
xor
jecxz
jns
fnsave
rcl
sub
jo
add
mov
dec
je
mov
mov
loope
fcoms
inc
ficoms
test
sahf
clc
mov
adc
ret
shld
mov
xorl
adc
lds
clc
fs
js
pop
jecxz
push
fwait
adc
loope
mov
aaa
push
mov
stos
mov
jne
lret
mov
cmpl
es
mov
fstpt
jb
inc
testl
or
mov
cmpsl
push
mov
xchg
jne
and
stc
jmp
mov
or
aad
test
lret
lcall
call
sbb
jne
shll
lock
mov
shl
pop
je
push
lret
jae
cmp
negl
pop
dec
mov
sbb
xor
pusha
xlat
mov
mov
and
inc
mov
lret
dec
aam
shlb
test
addl
lds
jnp
fldt
in
test
xchg
stc
push
jle
in
loop
mov
outsb
cwtl
cmp
je
add
aam
sbb
lcall
out
mov
xor
jno
std
les
pop
fsubrs
and
inc
ret
inc
sub
adc
mov
cmp
mov
jecxz
cmpsl
dec
xchg
cmp
popf
sbbl
hlt
cmp
daa
push
inc
enter
xor
jmp
jle
dec
outsb
loope
mov
xor
xchg
xchg
shrb
mov
sub
cmc
lea
addr16
popf
repz
push
xchg
cmp
scas
shlb
push
adc
orl
lds
arpl
repz
inc
jge
xchg
aas
cmp
sub
mov
mov
testl
loop
inc
addb
and
outsb
shl
mov
bound
cmp
test
mov
enter
sbb
pop
and
repnz
pop
iret
inc
cmp
fcoml
repnz
sbb
inc
sbb
or
mov
jae
repnz
xchg
cld
jle
xchg
icebp
add
pop
test
xchg
lret
in
or
fsubrp
xchg
out
sub
jno
or
loopne
fnstcw
jno
and
scas
shll
adc
int
mov
mov
mov
push
xchg
mov
inc
mov
rolb
fisttpl
imul
pushf
int
popa
mov
push
je
xchg
jp
mov
sbb
fsubl
mov
test
movl
outsb
sbb
aam
sub
fdivrs
dec
stos
aas
jp
and
cmp
inc
imul
cld
in
adc
shl
push
fcmovnu
dec
mov
mov
xchg
icebp
scas
pop
loope
pop
xbegin
mov
rcl
sbb
fwait
cmp
mov
xor
aaa
inc
cmp
cmpb
xor
daa
std
bound
fnstcw
inc
pop
cmpb
or
add
mov
add
pop
int
ffree
pop
mov
jb
xchg
fwait
cmc
inc
pop
mov
pop
std
imul
ja
add
insl
and
lock
insb
sbb
sbb
test
mov
div
or
push
sbb
inc
in
pop
mov
push
xchg
pop
movsl
sub
fistpl
pop
push
add
loopne
je
dec
adc
xchg
in
mov
mov
enter
cmp
xchg
inc
leave
xchg
lret
dec
repz
lret
adc
push
mov
push
adc
test
icebp
mov
ja
pop
iret
data16
test
sahf
ss
sbb
out
dec
jo
mov
adc
sbb
xor
xchg
mov
dec
imul
rolw
in
stos
xchg
sbb
push
mov
lds
xor
insl
mov
xchg
rorb
out
xchg
ds
ljmp
pusha
test
fadds
cltd
sbb
cmpl
dec
fcmovnbe
inc
stos
imul
lcall
daa
movsl
inc
loop
in
mov
add
shrb
popa
scas
shll
xchg
inc
bound
rcrl
dec
cmp
cmc
imul
mov
mov
add
cmp
xor
sbb
xor
xor
add
inc
call
push
mov
repnz
sub
xchg
jmp
mov
pop
pushf
add
int3
mov
xor
ljmp
fbld
cmpsb
inc
sbbb
mov
int3
cmp
mov
push
sub
lahf
int3
adc
xor
xor
mov
mov
jns
shl
test
xor
or
inc
in
mov
sbb
sbb
jecxz
add
mov
out
pop
xor
mov
jl
or
dec
mov
subb
lcall
xor
stos
jmp
pop
jae
jp
xchg
jp
mov
adc
mov
cmp
xchg
pop
daa
inc
pop
jo
push
das
inc
les
stos
xchg
and
enter
jns
sub
jle
aas
pushf
xor
clc
cld
xchg
push
flds
push
sub
pop
aam
xlat
sub
push
sbb
push
xor
outsb
xor
and
outsl
jle
lahf
cmpl
mov
test
jl
mov
jae
lea
mov
sbb
adc
dec
lret
mov
xchg
inc
pop
das
cwtl
push
js
mov
push
or
push
pop
or
lret
pop
test
xchg
xchg
bound
call
daa
cmp
jo
or
jg
xor
test
outsl
xchg
dec
lahf
test
ja
negb
inc
and
pushf
mov
cmp
repz
hlt
mov
mov
cld
sbb
adc
mov
movsl
subl
jg
pop
in
dec
lahf
mov
sbb
test
push
sbb
lods
and
ds
cmp
imul
mov
dec
and
sbb
sub
inc
out
inc
stos
int
addr16
xchg
loop
add
stc
sbb
popa
dec
cmp
cmpsb
dec
push
xor
and
pop
sbb
cltd
int
outsb
pop
push
or
jmp
fbstp
jp
popf
inc
pop
ds
pop
sub
jb
xorl
xor
into
and
and
xchg
adc
jmp
mov
and
leave
sarb
adc
cwtl
lea
cmpsb
mov
lds
push
xor
movsb
std
lahf
rcr
push
sbb
cmpsl
les
mov
test
je
push
inc
and
dec
jae
mov
jle
mov
imul
inc
cmpsl
sti
mov
in
sbb
xor
xor
sbb
lods
inc
pop
and
fwait
pop
adc
sub
cmp
imul
adc
inc
mov
xchg
adc
fs
sub
add
add
int3
adc
or
fstpl
push
mov
ret
xor
lods
movsl
dec
cmpsl
mov
dec
sub
mov
loopne
sti
cmp
or
jmp
ja
pushf
cmp
mov
add
mov
scas
lret
xchg
leave
cmp
push
or
lock
dec
xor
and
mov
neg
jp
xchg
lahf
xor
adcl
sub
xor
imul
stos
lea
dec
repnz
int
jp
lret
or
xchg
hlt
jl
pop
aas
inc
ficoms
pop
and
and
fidivrs
push
sbb
xor
mov
or
call
ja
add
cmp
push
sbb
mov
push
mov
sub
jecxz
push
imul
test
clc
das
sub
add
add
js
hlt
aaa
mov
or
mov
add
mov
je
int3
ret
mov
mov
lock
jl
loope
adc
pop
inc
andb
mov
dec
arpl
push
ret
dec
call
mov
dec
cmp
shlb
xor
rcrl
dec
les
idivb
sub
mov
fisttps
popa
push
mov
cltd
dec
fcompl
jnp
cmpsl
in
pusha
mov
push
or
stos
push
cwtl
sub
push
rcrl
xchg
add
xor
xor
mov
mov
cmpb
dec
xchg
fstl
add
pop
test
pop
and
add
icebp
inc
popf
cs
lods
or
rorl
jp
popf
popa
inc
mov
dec
divl
pop
xor
imul
lock
push
fimuls
pop
inc
in
dec
pop
aaa
push
lods
mov
cwtl
and
mov
imul
jl
pop
inc
jmp
mov
adc
cwtl
mov
cwtl
nop
xor
sub
imul
mov
addb
daa
mov
xchg
lret
mov
mov
mov
je
adc
rorl
repnz
and
arpl
shll
movsl
mov
pop
inc
push
ss
fldpi
cli
and
test
adc
push
dec
in
or
sub
cmp
push
stos
in
dec
lds
test
les
sub
jnp
data16
daa
mov
in
ret
or
and
pop
into
pop
jecxz
xor
or
movsl
outsl
arpl
pusha
fs
mov
xor
sbb
sub
mov
lock
push
mov
add
stc
nop
dec
stos
cld
add
js
adc
stc
ds
xchg
push
bnd
mov
xor
outsb
dec
clc
lds
pop
lcall
popa
fisttpll
push
mov
push
mov
xchg
inc
test
and
sbb
mov
pop
dec
lock
pop
mov
push
insb
mov
jmp
int3
movups
ret
ja
pop
add
inc
sbb
gs
mov
cmp
cvtpi2ps
adc
lock
outsl
int
lea
xor
lret
pop
push
xchg
xor
xchg
inc
xlat
pushf
loopne
lahf
push
fsubs
mov
sbb
popl
lock
adc
jge
icebp
add
mov
xchg
stc
pop
out
add
stc
xor
jmp
jmp
dec
jmp
cld
mov
dec
cltd
push
fisubs
sub
sub
push
adc
sbb
testb
enter
popa
pop
mov
inc
outsl
push
xchg
or
push
insl
sbb
sti
inc
aaa
mov
and
ret
mov
ljmp
cmp
add
jns
lock
scas
clc
stos
cmp
iret
mov
push
mov
sahf
pushf
push
jno
pusha
jp
xchg
clc
push
repz
fsubr
ja
dec
rolb
out
insl
push
cwtl
out
dec
sarl
popa
sti
sti
inc
sub
addr16
jnp
jmp
add
push
cmc
add
in
sub
and
inc
jb
xchg
jle
test
cmp
push
xchg
test
lock
stos
adc
push
jmp
roll
sahf
popa
cli
sub
xor
shlb
pop
jmp
xor
xorb
std
in
leave
test
aaa
and
inc
test
xchg
dec
and
shlb
jle
loop
fbstp
xlat
lret
pop
mov
cmp
inc
inc
ja
loop
xor
adc
lret
adc
xchg
xchg
add
inc
lock
pop
or
cmp
mov
and
sbb
andl
push
mov
leave
xor
std
pushf
mov
stos
cs
ja
push
xor
mov
or
jbe
add
in
or
lock
movsl
and
scas
lret
lods
iret
lods
pop
jb
mov
cmp
pop
jg
push
arpl
pop
arpl
testb
and
jge
rolb
repz
xchg
sahf
out
ror
sbb
and
mov
lahf
cmp
addl
xorb
xor
imul
mov
adc
in
cmp
add
xor
and
out
push
loopne
pop
mov
inc
push
imul
test
les
js
shll
fwait
add
nop
addb
add
clc
xor
jb
push
cmp
sub
xor
push
adc
adc
and
push
mov
pop
ret
lahf
inc
cmp
cltd
addl
in
adc
jo
push
mov
add
lods
mov
jle
dec
adc
ret
or
mov
mov
loop
pop
mov
scas
mov
clc
sbbl
mov
fildll
pop
or
push
pop
js
mov
sbb
sahf
cmp
outsl
in
ljmp
mov
shlb
sub
inc
sub
sbb
rclb
and
mov
xchg
pop
aam
aas
out
mov
add
cmpsl
aad
insl
in
push
xor
jb
or
out
pop
pop
stos
fcoml
xchg
imul
mov
shll
cmp
dec
push
pop
fdivrs
imull
ss
add
xlat
push
xor
jb
test
cli
pop
fdivl
sbb
in
mov
orb
in
arpl
xchg
add
test
xchg
mov
addr16
jae
pop
push
dec
pop
repnz
xchg
outsl
sbb
cs
cmp
stos
fs
fwait
call
lret
jnp
icebp
shrl
xor
add
jne
mov
push
out
mov
jae
inc
arpl
add
adc
cmp
inc
in
mov
cmp
push
or
mov
bound
ret
xchg
nop
inc
int3
sbb
into
adc
loop
and
repz
cmp
and
out
pop
push
xchg
call
jnp
flds
inc
pop
mov
xlat
insb
jp
pop
addb
or
xchg
in
push
mov
sbbl
out
fstps
ret
les
mov
lahf
xlat
fstps
mov
lahf
inc
repnz
inc
fmuls
mov
arpl
xchg
mov
scas
push
and
mov
fs
je
xor
cmp
les
inc
scas
movsl
mov
xchg
pop
add
fst
xchg
rolb
mov
cmp
pop
or
in
imul
out
adc
sbbb
out
cltd
xchg
in
ss
lret
js
push
sub
or
dec
jle
push
fimuls
jno
popf
shrb
popa
mov
pop
lret
jbe
sti
cmp
jle
pusha
cmp
imul
cmp
dec
sub
enter
popa
mov
push
imul
orb
stos
or
mov
icebp
add
or
orl
nop
or
ss
and
mov
mov
fs
jge
ficoml
push
adc
sbb
pushf
sbb
add
pop
out
mov
cmc
scas
insb
adc
enter
leave
pushf
enter
std
pop
xchg
jae
sbb
xlat
enter
int3
iret
ds
int3
sbb
sub
shll
xchg
mov
das
enter
lods
sti
retw
and
sbb
mov
adc
sbb
repz
inc
ja
cwtl
pop
fisubl
inc
popa
lods
cmp
xchg
or
hlt
xchg
in
outsl
add
adc
cld
mov
sbb
int
or
in
hlt
test
out
flds
pop
je
pop
and
jmp
and
xchg
sub
xor
push
push
xchg
out
sbb
inc
xchg
aad
pop
sbb
lahf
lea
mov
inc
push
addr16
jmp
movsb
add
pop
jl
mov
out
sarb
adc
xchg
mov
or
xchg
shlb
testl
adc
std
mov
sbb
sahf
jecxz
faddl
xchg
mov
movsb
shrb
lods
jns
aam
mov
pusha
pop
add
call
push
xchg
and
mov
adc
loop
jle
call
bound
add
push
push
fistpl
xchg
fldt
sbb
movsl
push
lahf
aad
pop
dec
add
dec
adc
ss
xchg
mov
imul
fs
lds
push
fsubrs
pop
dec
pusha
int3
sub
punpckhdq
ret
or
inc
test
cwtl
hlt
xor
lret
or
aam
icebp
jge
pop
popf
dec
imul
stos
xchg
shlb
stc
lret
add
dec
lods
clc
iret
xchg
adc
outsb
mov
pop
jecxz
aas
pop
int3
or
fidivs
popf
cmp
adc
cs
stos
xchg
sbb
mov
addb
dec
add
cwtl
and
mov
adc
scas
cli
cwtl
adc
int
sahf
mov
insl
cmp
test
gs
cs
add
and
pop
in
cmp
xchg
mov
in
sub
cli
repz
and
mov
jb
outsl
movsb
pop
push
or
inc
addr16
pop
push
pop
mov
xchg
jle
xchg
cmp
xchg
push
je
dec
sbb
adc
or
fstpl
pop
xor
cmpsb
add
lret
cmpsl
daa
fcompl
xor
ret
and
out
out
loope
data16
sub
pushf
adc
cli
insl
inc
es
sub
sti
xor
xor
fnstenv
ds
fdivrl
js
lea
bound
xchg
or
pop
out
jnp
ret
xchg
stos
or
add
leave
mov
mov
cmp
fcom
lods
mov
push
dec
into
or
les
inc
xor
stos
add
jmp
pop
mov
jbe
aaa
lret
push
imul
inc
cwtl
in
push
out
or
ds
roll
lods
es
add
push
fldcw
xor
rcl
push
scas
das
sbb
ja
and
clc
cmpsl
icebp
push
pop
div
int3
imul
inc
mov
lods
mov
adcl
scas
outsl
pop
stos
mov
jmp
fs
push
xor
cmpsl
push
or
fbstp
aad
pop
les
gs
rol
stc
add
sub
adc
cmp
pop
test
sub
xchg
xlat
fadd
test
and
lret
mov
jbe
aaa
jae
jp
nop
push
or
stos
lahf
sbb
jle
or
or
fstl
pop
aad
mov
lea
fstpt
xrelease
cmp
adcl
cwtl
xchg
fidivl
adc
mov
and
and
sbb
sbb
push
lea
xchg
rorb
xor
or
popf
cmpsl
inc
imul
xor
jnp,pn
nop
or
call
fistpl
js
cmp
mul
lock
pop
dec
rclb
adc
cltd
sbb
xlat
xchg
and
es
push
xchg
mov
mov
fwait
mov
sbb
xchg
cmpsl
inc
scas
xchg
jg
push
movl
stc
testl
and
aaa
add
cmovne
inc
pop
xchg
scas
loopne
jmp
popf
daa
add
subl
fucom
lcall
subb
jne
mov
ss
add
aaa
out
in
loopne
mov
pop
shl
ds
outsl
std
in
ss
testl
mov
cltd
pop
test
imul
out
and
push
shll
jns
inc
popf
mov
or
lock
fmuls
xor
leave
or
int3
icebp
xor
inc
push
push
int3
fdiv
lea
frstor
loop
mov
sub
frstor
les
in
jnp
mov
es
dec
xor
adc
sub
cltd
out
stc
xor
mov
leave
jo
sub
lret
repz
stos
adc
ljmp
push
cmpsl
lret
sbbl
adc
sbbl
cmp
jl
stos
out
lds
mov
add
rolb
pop
push
push
out
test
cmp
mov
ret
outsb
ss
pop
mov
in
sarl
xchg
push
mov
loope
and
cmp
rclb
outsb
rclb
mov
or
dec
data16
lds
xchg
sub
ja
mov
jp
scas
out
arpl
outsl
pop
fsts
mov
add
push
add
sbb
adc
cltd
fcmovnu
dec
dec
xchg
stos
mov
fwait
sbb
sarb
stos
bswap
dec
ljmp
in
ljmp
push
dec
ficompl
stos
cmp
push
or
cli
cmp
loop
pusha
in
inc
jp
adc
mov
jp
fdivr
pop
ja
sub
gs
mov
pop
subb
stos
lds
dec
pop
jl
icebp
mov
pusha
aaa
icebp
pop
movsb
sub
nop
scas
mov
or
lock
or
jne
lret
push
fdiv
mov
iret
push
sti
mov
push
mov
and
cmpsl
or
fdivl
movsl
mov
repz
cld
cmp
test
push
adc
int
ss
test
imul
int
out
out
je
dec
lret
mov
icebp
cmpsb
cmp
inc
icebp
mov
dec
int
cmp
adc
test
fiaddl
stos
mov
pop
lcall
das
push
push
adc
icebp
push
push
ja
imul
ret
in
inc
or
mov
mov
clc
inc
lcall
jp
popf
push
mov
shrb
dec
push
fcompl
xchg
dec
pop
or
outsb
leave
jne
push
push
mov
mov
lret
mov
and
or
cmp
test
push
jb
sbb
adc
or
and
dec
sbb
loope
adc
xchg
insl
hlt
insl
xor
das
mov
mov
adcl
mov
into
mov
cs
and
mov
push
pop
cmpsl
imul
iret
cmc
bound
add
enter
data16
jbe
int
pushf
loopne
cmpsb
fs
dec
call
arpl
repz
inc
cli
inc
das
pop
sbb
push
sub
ja
pop
xchg
mov
cmp
daa
push
mov
mov
adc
pushf
inc
push
sub
mov
sbb
mov
cmc
sbb
adc
cwtl
dec
ret
jne
and
loop
cmp
and
cmp
mov
mov
xor
in
sub
or
inc
insb
lds
pop
dec
mov
out
bound
es
mov
lds
sub
out
jnp
int3
stc
jb
jle
jp
mov
ficoms
jecxz
lret
jno
icebp
mov
adc
xor
in
dec
aas
out
adc
mov
out
in
das
gs
mov
push
sahf
pop
add
into
adc
imul
mov
jl
in
mov
fpatan
or
or
daa
mull
rcll
xchg
xor
xchg
pop
add
enter
mov
jae
popa
inc
scas
push
nop
or
scas
push
and
xor
fdivrl
or
lcall
int3
lds
xor
hlt
js
ds
and
fnstsw
xor
xor
push
cmp
adc
data16
loope
push
sub
jp
ja
lock
test
inc
mov
adc
lods
aaa
xor
pop
xorl
add
sub
push
mov
shlb
lock
lret
lods
fisttpl
mov
stos
inc
inc
add
pop
adcb
push
into
inc
scas
or
cwtl
mov
xor
ret
sbb
mov
push
stos
cmp
sbb
jge
aam
cmp
inc
mov
sbb
jnp
jge
mov
imul
xor
adcb
pushf
scas
gs
clc
cmp
frstor
or
adc
insl
call
hlt
loopne
inc
dec
outsl
les
movsb
popa
mov
mov
jmp
mov
dec
cmp
inc
aaa
mov
jge
mov
pop
push
push
xlat
scas
and
cmp
pop
mov
in
test
repnz
push
mov
hlt
cmp
and
dec
xchg
add
or
shlb
add
dec
pop
daa
lcall
pop
insl
lea
add
loopne
or
fdivrs
inc
mov
mov
xchg
mov
cmp
jecxz
inc
pop
leave
dec
cmp
lds
nop
jmp
mov
sub
scas
pop
aaa
xlat
mov
adc
testl
cmp
out
mov
inc
mov
rolb
cwtl
fwait
loopne
mov
lods
lcall
test
pop
pop
mov
ret
in
fmul
pop
jl
int3
mov
mov
sbb
mov
test
data16
ret
pop
repz
lock
mov
ja
data16
push
adc
cmpb
jno
je
sbb
sbb
jae
cmp
test
xlat
mov
shll
jae
cmp
ret
dec
push
sbb
nop
jnp
jno
das
mov
icebp
push
mov
sbb
push
loop
cmpl
jg
jg
jno
dec
mov
xchg
cld
cmp
push
scas
roll
cmpsb
add
movswl
out
xchg
addb
std
lret
adc
sbb
jecxz
call
out
inc
push
sub
pop
ss
cmp
ss
cltd
das
jmp
rcll
outsb
inc
adc
lock
imul
and
push
cmp
mov
lock
mov
clc
cmp
jle
cltd
jno
sbb
clc
int
lds
imull
fisubrl
inc
fnstenv
lcall
jnp
cs
pop
cmp
sbb
stos
mov
or
cltd
insb
stc
xor
mov
xorb
in
mov
popf
jno
jecxz
imul
aaa
mov
mov
mov
xchg
pand
mov
push
adc
ja
add
mov
add
mov
adc
cmp
sbb
xor
jno
popa
mov
xchg
mov
adc
or
add
cli
clc
push
test
jp
pop
mov
rolb
int
push
cmpsl
mov
iret
inc
in
lods
fldt
fbstp
lahf
fisttpll
inc
outsl
nop
gs
mov
adc
mov
in
pushf
jle
adc
mov
and
stos
push
sub
adc
ror
arpl
bound
and
inc
mov
push
xor
cld
mov
fsubr
inc
add
ljmp
inc
inc
push
insl
jne
cmc
fcompl
and
adc
lds
and
in
shlb
cmc
int
pop
std
out
inc
sbb
xor
cld
lods
testl
fwait
xor
sub
mov
out
stos
or
out
movsl
lahf
and
test
lcall
inc
pop
orl
data16
outsb
inc
inc
mov
hlt
mov
int3
sbb
sub
xchg
mov
out
mov
sbb
cld
loopne
xor
push
out
sarl
dec
insl
daa
jmp
lret
addr16
pusha
les
mov
pop
mov
mov
ja
cmpsl
cmp
xchg
hlt
stc
jne
adc
stc
push
mov
adc
xchg
mov
int
cmp
dec
test
stc
sbb
bnd
mov
pushf
sbb
jae
fldt
scas
ljmp
outsb
adc
xor
std
add
insl
loopne
pop
ret
outsl
repnz
lock
dec
lods
sbb
out
and
or
cs
icebp
test
out
test
unpcklps
mov
cmpsl
into
sub
inc
movsl
mov
add
in
push
or
clc
xor
mov
mov
loopne
xchg
pushf
into
movsl
xlat
xchg
idivl
sub
call
fildl
movsl
push
sub
jb
aam
sbb
inc
pop
or
jae
roll
sub
sub
pop
iret
jge
xchg
push
test
popf
mov
add
mov
xchg
ret
pop
push
scas
loop
insl
add
cmp
inc
das
push
add
cmpsb
add
xchg
scas
mov
lods
adc
dec
lahf
stos
dec
cmpsb
cmpsb
jns
cmpsl
fstpt
mov
hlt
lods
fstpt
outsl
rcrl
sbbb
and
imul
mov
dec
jno
int3
sbb
inc
push
addl
xor
adc
lcall
dec
sbb
xlat
mov
lock
rcr
shrb
or
scas
jns
add
test
ja
pop
ret
sub
popa
mov
inc
xor
das
lahf
push
inc
sub
xchg
out
mov
mov
sub
adc
sub
hlt
jb
insb
jo
push
sbb
mov
popf
pop
push
into
dec
int
in
adc
icebp
jae
cli
out
sbb
fdivrs
loope
mov
mov
pop
lds
mov
mov
inc
flds
sub
loopne
subb
push
push
mov
insl
test
cmp
or
pop
test
pusha
cs
mov
push
jl
addr16
stos
inc
ds
add
push
push
add
push
add
lret
mov
test
adc
pop
dec
inc
sub
idivl
shl
mov
or
cmp
or
scas
in
push
inc
inc
ret
subb
addl
aad
outsl
push
aad
stos
or
and
xchg
lahf
stc
setnp
push
inc
dec
lea
adc
nop
aas
iret
loope
or
das
sub
dec
cs
movsl
xor
jns
xchg
dec
cwtl
cli
loop
out
stos
stos
push
xchg
or
xchg
imul
cmc
add
ss
imul
adc
mov
hlt
das
add
and
push
bnd
scas
inc
xchg
xchg
nop
add
sub
pop
daa
scas
xor
lcall
xchg
and
mov
outsb
test
cmc
fwait
outsl
lret
ret
sbb
or
xchg
in
stc
pop
push
lea
mov
mov
mov
sub
jne
aam
sub
pop
jns
lea
and
int
xor
inc
or
aam
cmp
lahf
mov
mov
xchg
dec
cmc
mov
stos
int
lret
cld
cmp
dec
xchg
cmp
xchg
ror
sub
push
fcoml
pusha
sbb
pushf
roll
sti
push
stos
std
mov
sahf
pop
push
ret
mov
adc
mov
xchg
fxch
inc
xchg
mov
pop
outsb
add
sbb
xor
mov
pusha
pop
pop
ficomps
out
aas
ja
lock
arpl
pop
sahf
cmp
sub
lret
incl
addr16
out
mov
add
pop
insb
pushf
idivb
sahf
jns
mov
mov
fs
sbb
pop
insl
jge
pop
push
dec
femms
idiv
xorb
outsl
pop
lret
inc
jecxz
clc
or
push
mov
lock
jmp
push
ljmp
pop
ss
add
testl
out
call
stos
pop
mov
enter
inc
movsb
lock
xor
out
cli
popa
insb
in
xchg
ret
xchg
clc
daa
outsl
cmp
cli
imul
insb
cwtl
mov
jp
jge
adc
or
mov
cmp
pop
push
mov
int3
xor
loope
mov
dec
xchg
divb
loopne
jno
jo
push
sub
cltd
mov
shlb
inc
xor
push
testl
insl
testb
rcrb
popa
dec
into
negb
or
or
pop
lret
cs
mov
andl
inc
sbb
lods
mov
xchg
xchg
xchg
cmp
jl
stos
outsl
pop
js
mov
push
mov
cld
cmpl
adc
std
jl
lea
push
repz
mov
mov
iret
mov
insb
add
imul
iret
sbb
std
dec
xlat
mov
ja
add
pop
pop
pop
mov
add
dec
or
popl
push
cmc
jg
jno
mov
aas
push
cmp
aam
mov
xchg
notl
clc
cmp
aaa
jmp
ds
cmpsl
fs
lods
or
out
xchg
insb
jle
push
push
cs
rcr
scas
or
leave
dec
add
mov
inc
iret
xor
frstor
in
and
jecxz
cmp
adc
and
insl
sbb
out
jae
lahf
js
mov
pop
mov
and
loop
out
xchg
lahf
mov
ficomps
jge
adc
je
jne
sub
or
mov
xchg
fstpt
and
xchg
ja
inc
inc
xchg
xor
add
lcall
addr16
adc
push
std
inc
push
loop
cltd
jo
jmp
js
mov
jns
ds
mov
daa
lcall
xor
mov
dec
lock
cmp
arpl
in
mov
sbb
xchg
ds
cmpl
adc
adc
mov
push
mov
push
lock
popf
push
adcl
in
stc
pop
and
sbb
stos
adc
fcoms
cmpsl
cwtl
into
sbb
mov
int3
movsb
in
cmp
in
ficompl
ss
and
sub
btr
repnz
pop
fwait
pshufw
leave
mov
cwtl
mov
scas
sarl
xor
inc
dec
inc
dec
pop
cld
sbb
sbbb
insb
in
test
xor
or
rcr
fucom
push
add
push
mov
imul
xchg
pop
shrl
testb
xor
and
inc
cld
test
ret
loop
pop
dec
enter
ss
jge
out
rcrb
out
xor
push
xor
mov
mov
xchg
stc
push
mov
jnp
loop
out
jo
lea
shl
sarl
mov
jle
push
loope
cld
cwtl
loopne
pop
nop
xchg
dec
jb
push
mov
fwait
shlb
pop
scas
aas
cmp
into
fisubrs
jne
flds
fwait
and
shll
push
movsb
gs
lcall
adc
jp
jp
ret
ret
divl
outsl
and
xchg
inc
in
or
loopne
fwait
jo
insb
mov
mov
ljmp
push
xchg
outsl
les
jge
je
mov
cmp
and
mov
iret
insl
test
sti
sub
push
cwtl
dec
roll
fs
push
and
jne
xor
loope
in
arpl
mov
mov
les
mov
pop
or
fsubrs
stos
fists
add
ficompl
mov
jae
mov
push
adc
pop
test
mov
sub
mov
and
push
jmp
mov
or
subb
inc
shrl
je
jp
pop
mov
movsb
ror
add
lock
sub
push
inc
jae
jo
insl
xor
sbb
cmc
fxch
cli
rcr
jecxz
xchg
mov
sub
inc
shll
xchg
fisttpll
mov
addb
mov
mov
xchg
push
pop
inc
repnz
inc
push
push
outsb
or
sbb
push
pop
imull
mov
inc
cmp
inc
int
mov
ficoml
or
sub
xor
mov
out
ss
inc
stos
cmp
xchg
int
dec
cwtl
mulb
mov
movsb
push
pop
sub
movsl
or
cmpsl
stc
popf
out
cli
roll
bound
xlat
cmc
push
pop
jmp
movsb
ret
push
rcr
imul
pop
mov
jecxz
ss
call
cmp
arpl
add
cwtl
testb
repnz
out
add
pop
gs
int
cmpsl
xor
and
andb
sahf
push
jo
jns
mov
js
xchg
xchg
sub
dec
pop
jle
push
xchg
add
nop
sti
inc
int
sub
xchg
incl
into
dec
adc
push
mov
rclb
add
fildll
add
das
xorl
or
adcl
std
stos
adc
cmpb
adc
iret
loop
mov
test
mov
cmp
jg
inc
inc
pop
and
or
fstps
or
pop
fbld
sbb
pushf
and
fdiv
dec
aam
xor
shl
int
jns
push
and
shll
push
adc
cmpsl
stos
fstpt
pop
into
je
aaa
mov
ja
inc
mov
jo
outsl
jnp
out
jbe
xchg
lea
cmp
sub
in
leave
push
xchg
jmp
ss
pusha
xchg
fcomps
adc
and
pop
in
lods
aam
sbb
dec
loopne
sarl
cli
lahf
sarl
mov
lahf
in
out
mov
jg
jle
push
dec
arpl
xlat
jbe
add
scas
cmp
jmp
sbb
sbb
shlb
cmp
mov
scas
ja
push
adc
fs
sbb
mov
insb
fwait
jle
xor
fimull
jae
lahf
das
clc
outsb
imulb
outsl
xchg
ret
jb
sub
fwait
in
adc
sub
mov
and
xor
faddl
ret
mov
int
and
jge
iret
inc
lret
mov
leave
mov
push
mov
xor
movsl
insb
or
loopne
lret
repnz
fldt
das
ret
mov
fs
enter
pop
mov
movsl
cltd
loope
sub
mov
arpl
jns
jb
test
stos
mov
rcrl
clc
mov
mov
jno
sahf
cmpsb
mov
add
cmpsl
cmp
add
loope
push
mov
mov
cmp
xchg
sbb
dec
fnsave
inc
cmc
sbb
out
sbb
cli
fcomps
xchg
in
mov
and
sub
xorl
in
jns
jae
add
push
fcomps
gs
pop
pop
push
xchg
mov
jnp
inc
mov
cmp
mov
sahf
mov
or
ktestq
adc
or
leave
mov
inc
inc
jne
jne
and
in
push
add
dec
push
ja
add
hlt
lea
xchg
mov
call
divb
pop
xor
cmp
push
push
sbb
jp
sub
repz
push
mov
sub
mov
sarl
sbb
pop
out
mov
lods
das
mov
push
into
lock
mov
push
call
nop
mov
out
inc
jg
inc
movsl
fdivl
and
push
adc
test
mov
std
outsb
mov
push
xchg
in
dec
cltd
push
nop
sti
fidivl
popa
faddp
cli
mov
sar
and
adc
inc
push
sbb
dec
or
fldcw
mov
test
adc
mov
or
push
jae
xchg
and
es
notl
sub
push
stc
and
fisttpll
inc
stos
sahf
hlt
xorb
orb
cld
jl
and
pushf
dec
inc
in
xchg
mov
cmc
xchg
bound
inc
insb
push
or
mov
and
repz
cmpl
leave
or
mov
and
sub
ljmp
mov
sbb
out
mov
xor
mov
sbb
jecxz
mov
and
xor
push
sbb
fnstenv
push
sub
stos
fdivl
popf
mov
gs
jno
and
inc
imul
and
lret
mov
decl
nop
and
notl
add
cmpsb
jns
aaa
sbb
inc
cmpl
xchg
popa
inc
dec
imul
out
movsb
fisttpll
and
push
or
sbb
arpl
dec
lret
add
jnp
aam
mov
or
dec
cmp
pushl
dec
add
inc
or
or
adc
sbb
stos
ljmp
lahf
push
sub
add
sub
ret
xorb
lds
mov
imul
push
and
cli
inc
mov
mov
call
iret
mov
sbbb
fdiv
out
popa
ss
in
in
das
lahf
mov
xor
jb
mov
lods
pop
roll
push
mov
in
popa
cs
outsb
xor
pusha
cli
and
cltd
jo
pop
test
bound
and
addb
mov
into
daa
pop
cli
or
or
mov
xlat
pop
out
jmp
test
cmp
inc
xor
add
xchg
add
add
lock
mov
fs
out
movsb
add
sub
ret
daa
cmp
imul
iret
sub
adc
add
js
jnp,pn
je
lods
leave
outsb
adc
faddl
mov
aad
aam
loop
mov
stos
adcb
test
jnp
jb
adc
mov
insl
fadd
mov
sahf
daa
mov
hlt
xor
add
xchg
je
xchg
cmp
pusha
mov
sub
fcomip
mov
mov
dec
cs
in
sahf
cwtl
fnstenv
mov
xor
movsl
mov
dec
lods
lods
cmp
pop
daa
or
cmp
in
outsb
das
test
int3
push
out
mov
xchg
lods
adc
dec
lods
in
dec
fs
and
xchg
leave
jae
dec
mov
out
testl
ljmp
xor
mov
sub
fwait
sub
jg
shl
icebp
adc
and
xchg
push
cmp
inc
mov
ror
in
sub
ds
mov
inc
mov
testl
jmp
xor
adc
add
pop
jp
inc
pop
push
add
fdivl
jne
inc
jns
adcl
mov
pop
xchg
add
sbb
lret
insb
nop
sbb
lea
mov
daa
je
jbe
adc
pop
lret
add
pop
into
inc
cld
mov
lcall
mov
adc
dec
js
stc
mov
dec
cmp
xor
std
mov
cltd
test
xchg
dec
repz
cmp
popa
aas
xchg
lahf
mov
adc
xor
or
inc
jg
mov
sahf
fsub
inc
xchg
xchg
xor
ret
sbb
aam
xchg
pop
popa
stc
push
leave
jae
mov
cmp
mov
fcom
push
mov
rcll
or
mov
scas
sbb
jno
loopne
mov
mov
lret
mov
jg
call
pop
fwait
xchg
pop
xchg
jg
ret
sbbl
push
or
cmc
lret
enter
std
push
cmpsl
outsl
mov
nop
repz
sti
mov
fsubp
stos
sysexit
lea
mov
mov
cmp
push
nop
and
outsb
mov
les
int
or
xchg
lahf
xchg
out
mov
dec
and
pop
mov
push
or
xchg
data16
outsl
and
ja
lods
out
inc
cld
ljmp
insl
mov
int
cmp
push
jp
dec
xchg
add
mov
cmpsl
jge
mov
pop
sub
stos
xor
jecxz
sub
aaa
xor
arpl
xchg
sti
push
leave
mov
aaa
fwait
push
aam
add
ror
adc
in
xchg
test
xor
jo
fs
cmp
out
xor
sbb
mov
pusha
xor
adc
sbb
jnp
lahf
jmp
cmp
popa
shr
jmp
mov
addb
xchg
sub
or
sti
enter
in
mov
pushf
int3
call
cwtl
mov
jns
and
mov
inc
inc
jmp
mov
push
mov
fmull
add
clc
adc
test
in
cwtl
sahf
pop
cld
cmpsl
jae
test
fcom
sbb
xor
xor
vpunpckldq
ret
add
cwtl
imul
fdivrl
scas
stos
lds
sub
out
fs
fs
pop
pop
pop
or
pop
pushf
leave
mov
les
dec
popf
mov
mov
jb
jp
sbb
pop
call
and
xchg
push
and
and
std
cltd
mov
mov
sbb
stos
xchg
jbe
cmp
faddl
addr16
mov
jle
hlt
outsb
hlt
jle
sarl
or
sbb
jg
je
inc
push
jp
mov
push
scas
xor
inc
bound
iret
sub
sub
and
inc
or
inc
std
sbb
sub
rorl
fwait
mov
xchg
imul
lret
or
push
imull
mov
add
jecxz
mov
pushl
fcoml
dec
pop
jo
mov
iret
rolb
fwait
adc
leave
dec
scas
jns
xor
pop
call
nop
push
mov
pop
das
lcall
testl
dec
sub
and
clc
jbe
out
cmpl
loop
cmpsb
jp
add
mov
out
dec
pop
mov
xchg
fnstenv
inc
subb
imul
mov
lds
jg
add
mov
daa
popf
sub
pop
int3
adc
jb
cs
mov
sub
into
mov
push
mov
int3
pushf
je
ret
lods
rcrb
mov
pop
push
arpl
push
lds
movsl
out
sarl
xchg
sub
aas
andnpd
push
icebp
arpl
push
setae
push
notb
jae
xor
js
xchg
ret
popf
or
add
add
pop
xor
sbb
fisubrs
into
xchg
loopne
mov
sub
shrl
mov
jecxz
data16
int3
sub
cmp
push
cmpb
jecxz
ja
push
xor
push
lea
sbb
lea
sarb
scas
repnz
iret
loopne
loope
rcl
je
pop
notl
mov
out
out
addr16
jecxz
cmpsb
or
fisubs
jecxz
fists
loopne
outsb
inc
test
push
dec
movsl
ljmp
xchg
enter
xor
jbe
dec
lret
fists
lds
pop
rcrb
dec
jo
sbb
in
imul
int
fnstcw
pop
and
jg
pop
ss
mov
fists
arpl
js
pushf
add
stos
sbb
insl
mov
stc
stc
and
ficoml
hlt
scas
add
orb
ud1
lock
imul
mov
das
test
shll
dec
pop
negb
es
sub
and
mov
sub
pop
test
inc
nop
xchg
sub
pusha
sbb
push
inc
jae
scas
outsb
xchg
mov
hlt
pop
and
pusha
and
std
cmpl
psubq
adc
and
push
mov
cmpsb
loop
mov
rclb
or
iret
dec
jnp
inc
push
outsb
inc
cmpsl
or
loop
add
xchg
es
push
call
xchg
push
dec
mov
divb
je
jl
insb
mov
lret
cmp
enter
out
clc
add
ficoms
cmp
div
lods
out
jge
loopne
mov
mov
push
fcomps
sbb
sbb
adc
push
cmpsb
push
kmovw
sub
pop
xor
mov
or
adc
repz
and
jae
jo
cmpsl
mov
je
clc
pop
icebp
repz
jno
aad
icebp
lahf
scas
dec
xor
pop
mov
je
imul
pushf
fiaddl
adc
xchg
xor
dec
cltd
shrb
or
imul
xchg
jecxz
sub
xchg
into
dec
test
mov
lods
subl
sub
loopne
push
mov
adc
imul
dec
orb
ds
mov
imul
mov
in
sub
mov
fildll
lods
loopne
cld
mov
std
sub
fwait
dec
mov
sbb
adc
lock
repz
mov
mov
sbb
xlat
fidivs
dec
jb
push
stos
mov
or
sub
pop
and
xchg
das
aas
sub
cld
or
fistps
in
mov
lds
inc
les
hlt
adc
cmc
pop
lea
aad
aas
fsubl
inc
sub
dec
jg
push
dec
enter
ret
testb
jp
mov
xchg
dec
sbb
test
daa
jmp
mov
jae
aaa
rorb
fcomip
pusha
mov
mov
pop
gs
popf
and
lahf
test
iret
aam
in
fwait
rcl
imul
stc
inc
xchg
jge
adc
frstor
mov
hlt
pop
dec
jle
mov
jmp
mov
xchg
cltd
dec
insb
call
fs
lock
push
jne
pop
lock
adc
dec
dec
sbb
cltd
scas
fs
mov
pop
fnstcw
jg
imull
cld
cmc
xlat
out
nop
cmp
inc
into
pop
rol
bnd
in
adc
xor
and
mov
dec
cld
addb
pop
aas
mov
add
mov
pusha
popf
sbb
jo
sub
popa
out
cwtl
not
out
jge
fidivrs
jmp
imul
push
imul
mov
roll
mov
xor
test
and
jns
incl
shrl
mov
mov
les
pop
fwait
inc
sbb
cwtl
movaps
mov
dec
xchg
mov
push
adc
out
pop
adc
and
aas
cmpsl
jmp
or
mov
aam
mov
mov
push
sbbl
cwtl
adc
ss
adc
push
aas
cmp
stos
daa
leave
fstps
pusha
test
lea
adc
push
and
mov
push
push
xor
cmpsl
out
and
dec
jno
jo
lds
in
sub
in
mov
xchg
dec
shl
hlt
xor
cmc
call
std
pushf
pop
negl
add
jb
popf
pop
cmp
push
jb
jnp
test
fisubrs
jno
or
inc
fldl
arpl
xor
ret
sub
pop
stc
addr16
aam
cvttps2pi
fwait
ret
and
adc
push
aas
xor
aad
sti
mov
mov
sub
mov
or
jno
fsubl
inc
mov
jno
mov
xor
repnz
mov
add
repnz
adc
xchg
or
sbb
xchg
cmp
pop
int3
sti
mov
jnp
add
or
or
jae
adc
mov
inc
sbbb
sbb
mov
push
lret
adc
filds
jle
enter
and
xchg
jg
push
jle
out
mov
push
cltd
aaa
dec
xlat
movsl
es
pop
repz
mov
pop
push
push
jb
repz
movsb
inc
and
imul
or
adc
pusha
and
call
shrb
mov
jne
lods
das
jb
inc
orb
ds
aad
gs
and
sbb
lret
pop
and
rorb
push
imul
jns
add
adc
xchg
int
push
stos
jmp
cmc
enter
stos
jnp
scas
xchg
pushl
or
mov
push
push
andb
fwait
sti
sbb
adc
std
cmp
push
mov
xor
push
push
xor
sub
fiaddl
sbb
mov
sti
mov
stos
movsl
rcl
or
in
add
rclb
xor
jp,pt
pop
or
fdivs
mov
shl
rolb
pushl
adc
cmpsb
sub
xchg
mov
mov
xor
fisubrs
lcall
jle
xor
fidivl
xor
push
imul
push
mov
enter
jge
popa
or
mov
mov
es
mov
fwait
or
fadd
popa
ret
mov
push
adc
movsb
push
mov
jmp
add
lret
mov
xchg
lret
out
fisttps
insl
push
clc
bound
cmc
fisubrs
test
mov
ds
in
js
push
ret
cld
and
subl
adc
sbb
inc
and
in
ret
mov
xor
jnp
xor
test
lods
fld
je
push
scas
imul
in
pushl
mov
xchg
test
sbb
cmpsb
enter
add
clc
cltd
adc
repnz
mov
ljmp
and
es
add
jecxz
sub
push
mov
mov
add
mov
les
cmp
aad
insl
inc
std
push
ss
lods
and
subl
out
xor
xchg
mov
adc
jp
cmp
xchg
orl
andl
outsl
adc
inc
and
es
stos
push
in
sahf
out
push
imul
insl
and
ficompl
and
nop
push
jae
in
xchg
imul
dec
mov
inc
jne
jp
jno
shrb
dec
fwait
jno
adc
imul
add
shrb
pop
mov
out
insb
lods
jae
xchg
inc
inc
dec
adc
xchg
call
in
inc
and
or
lods
cmp
push
out
push
jle
jecxz,pn
pop
mov
sub
mov
popf
pop
xor
arpl
mov
fcmovb
sbb
mov
pop
cmp
xlat
add
add
sahf
add
adc
fcomps
int3
cmp
shr
sub
fdivrl
leave
out
dec
shrl
loop
inc
pop
nop
jne
jecxz
repz
lret
sub
push
fcmovnb
or
cwtl
dec
cmp
inc
emms
cmp
sbb
xchg
xchg
std
arpl
in
inc
and
xor
ss
fs
scas
aas
fs
insl
in
xlat
mov
mov
dec
add
out
dec
ret
iret
sbb
ret
or
mov
inc
cmp
test
xorl
loopne
push
clc
and
and
repz
sbb
jno
jne
movlps
push
and
bound
in
sbb
shrb
inc
add
dec
les
push
fcomi
mov
push
or
outsb
jbe
sbb
cmc
dec
shrl
pop
dec
or
mov
xor
jnp
incl
mov
outsl
fs
sub
sub
or
push
daa
mov
mov
js
imul
inc
mov
or
xchg
cli
loopne
ss
jbe
or
mov
jl
push
xchg
in
xchg
adcb
jl
push
popa
in
dec
inc
push
stos
sub
or
faddl
fs
xor
subl
push
rorb
sbb
pop
and
jmp
push
or
insb
in
jno
jecxz
cmp
adcl
dec
stos
rclb
cltd
into
sub
add
ficomps
stc
out
out
sbb
mov
jb
dec
adc
or
dec
std
cmp
test
sbb
jnp
and
int3
rcrb
pop
and
rcr
stc
aas
mov
ds
mov
dec
jb
jb
ds
icebp
xor
js
mov
jle
cmp
ljmp
outsb
or
hlt
aas
fdivs
bound
lcall
dec
adc
mov
xorl
aam
test
pop
into
sahf
jp
sti
sbb
divb
or
scas
push
lcall
mov
push
lods
movlps
jmp
dec
subb
push
stos
add
pop
cmpsb
fs
and
loope
sub
imul
sub
jecxz
fld
xchg
aad
and
je
insl
mov
mov
outsl
out
insb
xchg
pop
push
cmp
subb
mov
inc
dec
or
sbb
mov
roll
cmpl
pop
cwtl
sub
jbe
inc
fdivl
lds
xchg
or
aam
leave
and
fidivrl
dec
mov
dec
cmp
dec
jge
pop
jo
mov
enter
push
mov
mov
popa
cltd
outsl
pop
arpl
adc
fnstcw
xchg
push
sti
ret
sub
jne
lret
in
sbb
pop
inc
jmp
pop
jp
cmp
lods
dec
dec
xchg
data16
or
sub
lahf
in
inc
addr16
sbb
fucom
push
nop
cli
iret
frstor
negl
js
int3
mov
aaa
xchg
movsb
or
shr
ret
xor
or
es
jg
mov
push
enter
sbb
mov
in
pop
mov
sbb
sub
leave
sarl
mov
pop
arpl
fldcw
aaa
pop
jecxz
xchg
sbb
push
adc
inc
loop
lods
mov
jns
and
sbb
mov
out
or
mov
jb
test
mov
pop
jle
mov
fucomi
stc
insb
hlt
add
xchg
dec
and
shrb
cli
pop
divb
pusha
fisubl
sbb
cld
xchg
dec
mov
mov
or
and
lds
pop
push
pop
sub
cltd
mov
push
xchg
shl
lods
fdivr
sbb
or
push
xchg
fmulp
ficomps
and
mov
bound
stos
cmp
ss
xor
jbe
lahf
daa
mov
jge
fisttpll
pop
jge
sub
xchg
dec
inc
jg
pushf
ds
arpl
push
test
outsb
push
mov
mov
mov
testb
aaa
scas
je
inc
jb
push
push
subl
js
test
add
popa
lret
add
sar
xchg
xor
mov
ljmp
clc
loope
adc
loop
xchg
shl
push
and
es
addr16
cs
mov
fimull
jl
adc
cld
inc
mov
scas
out
jae
loopne
and
jne
nop
out
pop
inc
push
stos
xor
mov
mov
pop
mov
mov
repz
negb
xorl
insb
loopne,pt
pushw
mov
mov
into
mov
dec
std
jo
icebp
in
xchg
mov
out
adc
getsec
jo
jmp
xchg
shl
add
ljmp
ret
pop
aaa
fldl
sti
jnp
mul
push
andl
lcall
xchg
push
jle
and
rcll
xchg
add
push
faddl
xchg
stos
xchg
add
xchg
mov
jecxz
loopne
cmpsb
out
test
pop
push
lods
mov
add
inc
aam
scas
mov
loop
outsb
inc
subb
xchg
fisttpl
int3
jg
test
mov
mov
loope
aaa
roll
les
mov
dec
xchg
movsb
les
jae
add
jno
jne
rclb
shrl
jnp
cmp
and
and
cmpsl
jbe
pop
stc
bound
push
ds
subl
cmp
fidivl
ja
js
in
out
cli
mov
jecxz
jle
mov
and
pop
fisubs
and
sahf
lret
mov
jne
dec
and
jmp
popf
cmpsl
inc
dec
in
rolb
lcall
push
sarb
jp
xor
daa
into
mov
scas
inc
add
lds
dec
mov
jnp
cwtl
int
rolb
mov
ljmp
xchg
sub
test
imul
lret
xchg
add
movsl
mov
out
inc
xlat
or
inc
push
cmc
pop
push
sbb
repnz
std
fucomip
push
xchg
cmc
push
sbb
cmpsb
add
fst
fwait
jmp
dec
or
sub
fstl
jnp
dec
inc
sub
in
push
jns
shrl
test
jl
dec
pop
dec
adc
fisubrl
das
sbb
mov
mov
sti
adc
mov
mov
cli
and
orl
push
push
pop
mov
dec
cmp
xlat
push
mov
inc
xlat
sbbl
shrl
mov
js
adc
pop
cmpsb
dec
mov
xor
push
mov
push
xor
pusha
jne
and
jae
mov
mov
inc
jo
cs
pop
in
das
push
into
je
mov
xchg
lods
ret
ret
movsl
mov
popa
and
cld
push
aam
cmp
mov
mov
pusha
dec
inc
repz
das
scas
repz
pop
inc
xor
incb
push
adc
movups
leave
lock
stos
adc
bound
std
mov
dec
jno
loope
and
or
aas
dec
aas
test
pop
pop
xchg
ds
cmp
push
mov
push
inc
stos
fists
cmpsl
add
jns
lea
xorl
push
sbb
and
movsl
sbb
popf
dec
pop
mov
add
pop
mov
xchg
mov
jp
std
inc
mov
pop
sub
mov
out
and
and
pushf
jbe
xchg
sub
pop
mov
jae
mov
jno
or
fwait
movl
mov
mov
cltd
pop
sbb
cltd
insl
push
inc
scas
xchg
mov
or
adc
cmpsl
jne
rcrb
pop
lret
sbb
je
cmp
sub
lret
inc
jae
scas
repnz
fwait
mov
or
dec
addr16
test
mov
popa
push
pop
mov
in
mov
fists
rcl
sbb
inc
sub
ret
rclb
aam
js
sub
push
loop
push
push
lret
shlb
jge
and
mov
sbb
jne
xor
arpl
subl
lcall
adc
jmp
mov
repnz
mov
fistl
mov
mov
xchg
mov
inc
pushf
cld
fidivrs
inc
mov
rorb
mov
je
stos
sub
imul
cli
int3
mov
clc
mov
xchg
repnz
sub
cmpsb
dec
xlat
test
adc
pop
sub
xchg
jg
scas
pop
pop
js
jns
popa
ds
mov
inc
aam
jb
adc
mov
push
pushf
ret
aam
adc
jb
and
mov
mov
add
call
mov
out
fcoms
or
mov
jnp
push
xor
orb
fistpl
nop
adc
mov
sub
sub
pop
mov
out
push
xchg
mov
daa
clc
pop
int3
les
ret
cmp
sub
lock
and
adc
or
add
dec
push
sbb
or
xor
je
jp
in
and
sbb
push
xchg
add
cld
sbb
std
xor
sub
fs
push
push
xchg
shll
retw
mov
lret
add
add
mov
mov
xchg
ljmp
and
mov
clc
jmp
and
sub
dec
and
aad
pop
jb
aad
add
adc
sub
in
pop
sub
addr16
call
loop
adc
inc
push
es
mov
mov
inc
insb
in
repz
cmp
mov
imulb
dec
cmpsb
aad
clc
cld
movsl
std
sub
lahf
mov
movswl
or
xchg
add
or
insl
push
push
sbb
insb
mov
jg
cmpsb
pop
jno
hlt
push
dec
pop
dec
dec
in
cltd
test
sti
das
decl
jmp
pop
mov
sbb
cmpsb
iret
lock
je
pop
push
xchg
je
or
stos
or
mov
sub
mov
xchg
pop
push
mov
adc
movsl
xor
out
fwait
inc
xchg
xor
jge
gs
lcall
jle
xor
imul
push
ja
sbb
aas
xchg
rorb
and
add
and
cmp
mov
orl
movsb
push
subb
mov
enter
scas
jle
mov
out
loope
push
neg
test
mov
cmp
push
daa
bound
in
test
sbb
in
je
mov
push
ret
and
jg
cltd
and
or
mov
adc
lods
cmp
dec
mov
add
push
sub
push
int
lods
push
push
or
xorb
adc
push
outsl
fxch
sbb
aas
and
xchg
iret
xorl
hlt
aaa
shrb
xchg
insl
xchg
sahf
or
dec
jnp
sbb
fcompl
enter
xchg
shlb
rcll
jl
data16
jbe
adc
mov
mov
les
pop
mov
push
pop
xchg
gs
fs
pushf
mov
jp
out
scas
sbb
rorl
cmovp
pushf
or
lods
cmpl
lds
xchg
push
mov
fs
loop
adc
push
pusha
jns
push
jle
fstpt
sbb
loop
ret
cmp
push
and
sbb
mov
pop
push
dec
pop
iret
mov
mov
mov
movsl
push
adc
add
leave
pop
adc
xchg
call
xlat
inc
fs
aad
dec
dec
popa
push
js
cmpsb
test
cmp
scas
push
adc
mov
xchg
fcomp
scas
mov
ja
and
imul
add
out
and
fadd
imul
loope
mov
cmp
sub
cmc
pop
jno
push
sub
xchg
mov
lret
adc
sbb
les
xor
mov
popf
push
shll
fbstp
ss
mov
jp
lods
sbb
mov
pop
rcrl
mov
test
push
hlt
mov
pop
mov
scas
xor
sub
lock
vmovdqa
scas
aad
inc
insl
shll
mov
jl
mov
push
mov
or
lahf
inc
inc
push
std
pushf
cli
lods
jp
mov
sbb
sbb
out
icebp
jle
xlat
add
add
pop
iret
out
sub
push
lret
mov
xchg
and
aad
mov
push
fildll
pop
je
push
fistpl
pop
inc
icebp
inc
jl
pop
adc
pushf
das
aad
jns
shlb
inc
cmp
test
jo
std
inc
decl
fistpl
jp
test
clc
insb
and
mov
mov
jno
out
xor
xchg
sti
xchg
xchg
aaa
dec
xchg
mov
xchg
cmp
outsb
scas
ss
add
ror
pop
aas
and
push
js
jnp
xor
xchg
popa
push
es
sbb
loopne
hlt
jecxz
fbld
xchg
adc
or
rorb
in
call
mov
out
xchg
fsubs
xor
jbe
mov
inc
and
sub
inc
mov
or
imul
popa
push
sub
mov
cli
cld
or
sbb
push
push
ficoms
fistps
stc
sarb
out
fldcw
insl
sub
das
in
andb
or
sbb
or
pusha
pusha
adc
or
dec
test
push
cmc
push
cmp
outsb
cmp
outsb
push
sub
aas
push
sbb
test
dec
cmpsl
fnstenv
xchg
jge
jns
or
dec
mov
addr16
sarb
mov
sub
and
mov
jle
add
adc
ret
sub
and
pop
inc
sahf
xlat
push
sbb
xor
cmp
or
fwait
xchg
xchg
pop
inc
fisubrs
out
movsl
repnz
mov
push
cltd
jnp
fbld
push
jo
lods
ljmp
mov
les
push
jne
in
or
xor
mov
mov
sbb
addl
les
push
mov
ret
out
lcall
sub
es
call
mov
inc
scas
or
push
out
inc
fdivrl
leave
xorb
add
rolb
cld
xor
mov
cmp
jb
ljmp
xchg
je
stos
bound
push
push
push
jp
jns
sbb
push
out
das
push
ljmp
push
push
mull
and
movb
inc
mov
jno
ret
test
xor
sbb
nop
jae
dec
inc
repnz
cltd
sub
adc
and
pop
pop
in
and
xor
mov
add
jo
aad
inc
cmc
test
add
shrl
fiadds
mov
test
into
fiaddl
fwait
xchg
lret
jno
lret
xor
pop
loopne
jmp
cmp
cmp
fcomi
lock
das
sbb
out
xor
xor
addb
outsl
test
inc
pusha
jno
or
addr16
fistps
add
popa
xor
jecxz
lret
dec
popf
add
enter
sub
xchg
or
fisubrl
js
and
imul
inc
push
rolb
inc
sbb
cmp
push
xor
sbb
mov
mov
in
fnstenv
pushf
mov
push
arpl
hlt
inc
xchg
out
push
push
push
push
outsb
and
je
sub
pop
dec
adc
ret
loopne
loopne
icebp
push
xchg
mov
jns
jmp
dec
push
sbb
xchg
pop
aaa
sbb
jae
movl
add
mov
jg
sbb
push
nop
xor
inc
push
push
sbb
loop
push
lods
arpl
push
loop
rorb
mov
stc
sbb
out
out
bound
sub
inc
adcl
negl
shrb
and
xchg
cmp
repz
sub
imul
adc
and
and
jnp
inc
inc
lods
movsl
aas
pop
shll
jae
popf
es
movsb
pop
add
mov
test
loopne
sub
jge
pop
int
push
or
or
int3
pop
push
mov
in
movsb
scas
adc
cltd
mull
mov
xlat
imul
iret
fstl
loopne
push
mov
rcl
dec
xor
push
xorb
jo
aaa
aad
stos
xchg
sub
bound
push
lea
popf
shll
and
rorl
je
mov
pop
int3
mov
subl
repnz
je
pop
jge
es
jmp
inc
jp
cld
in
loopne
xorl
imul
pop
je
mov
mov
idivb
les
or
cmpsb
icebp
fwait
sbb
fnsave
testl
in
imul
inc
fimuls
pop
sbb
pop
jno
arpl
test
popf
push
enter
mov
sbb
mov
pop
and
fcomp
int3
push
mov
dec
out
inc
xchg
callw
mov
shrl
push
dec
daa
repnz
xor
mov
and
mov
nop
and
push
test
pushf
call
push
out
sahf
adc
inc
xchg
dec
jae
outsl
jge
lret
mov
pop
ds
pusha
sti
int
jae
dec
sahf
xchg
xchg
adc
cs
xchg
das
sahf
pop
clc
push
test
dec
cmpsb
mov
roll
lahf
sbbl
and
movsl
jle
hlt
sbb
push
lods
pop
loopne
jns
adc
xchg
lret
sti
lods
dec
inc
std
jecxz
pop
pusha
rolb
nop
xor
andb
mov
ficompl
push
sbb
xlat
bnd
sbb
pop
dec
xchg
es
addr16
xchg
movsb
push
lahf
xchg
in
and
jnp
fstpt
int
faddp
stc
fwait
mov
or
dec
scas
add
stos
push
push
push
jnp
fwait
mov
iret
aam
xchg
fnstsw
mov
xor
fiadds
fdivr
adc
mov
loopne
add
lret
popa
movsl
int3
cmpsl
sbb
unpcklps
fdiv
sbb
mov
std
daa
dec
adc
loope
cs
push
jecxz
xchg
inc
cmp
and
stc
mov
lret
fdivl
hlt
fnsave
jg
es
leave
loopne
hlt
mov
adc
cld
scas
push
insl
pushf
in
lcall
dec
sub
cmp
icebp
sub
pop
int3
fiadds
pop
in
adc
gs
arpl
repz
scas
and
shrl
cmp
mov
pop
dec
jb
outsl
test
mov
rorb
add
insb
or
xchg
xor
or
add
jae
jns
mov
cmp
push
mov
movsl
push
sub
lds
pop
cs
push
repz
xor
inc
cmpsl
cmc
or
ret
sbb
test
xor
and
into
jl
ret
testb
dec
test
repnz
or
out
call
mov
mov
mov
scas
xchg
daa
lea
mov
xor
cmp
movsb
pop
push
xchg
jl
xchg
sbb
xor
rorb
mov
inc
lods
adc
push
push
lds
or
pop
fcmovb
mov
inc
icebp
popf
sahf
and
pop
xchg
xor
dec
jb
pop
mov
adc
mov
cld
xor
or
add
push
push
mov
mov
test
or
movsl
inc
cmp
push
push
pop
fildll
xchg
push
test
loop
shr
pop
xor
je
stc
inc
hlt
ss
cmpsl
mov
sub
fisubrl
inc
es
pop
dec
sbb
gs
loopne
add
mov
repnz
rol
sbb
push
add
int
int3
in
xor
mov
push
mov
mov
mov
pushf
cmp
push
xor
cmp
xchg
and
orl
je
sbb
sbb
inc
sarl
sub
mov
hlt
aad
mov
stos
mov
sbbl
adc
mov
xor
cwtl
adc
pop
iret
test
pop
mov
ret
mov
into
dec
clc
int
jmp
pop
mov
push
mov
sahf
outsl
sbb
xlat
or
stos
jo
xlat
inc
sub
jo
lds
fs
aad
js
repnz
and
aam
pusha
cmpb
jmp
or
sub
subl
ret
add
shlb
xchg
outsb
jb
sbb
mov
adc
pushf
dec
dec
mov
int
movsl
pop
nop
outsb
or
mov
fwait
out
adc
xchg
call
lock
xchg
stos
pushf
jl
mov
dec
stc
push
mov
inc
mov
pop
ljmp
rclb
pop
xchg
sub
ljmp
jae
jle
mov
stc
or
xlat
pop
and
divb
pop
js
lock
mov
out
mov
nop
sbb
nop
fists
xchg
mov
or
jne
imul
leave
cs
fnstcw
icebp
pop
aad
mov
push
xchg
cmp
mov
call
cs
cwtl
mov
fwait
sub
imul
das
jge
adc
xor
sbb
mov
mov
cs
mov
xchg
fnsave
add
adc
add
mulb
jb
sub
ds
pop
sub
dec
mov
out
aas
add
flds
push
or
mov
stos
sbbl
pop
jbe
test
iret
xor
push
dec
fldcw
and
and
fidivrl
add
dec
fucomip
add
push
push
inc
sub
testb
mov
in
out
lods
push
sbb
pushf
mov
jl
push
and
cli
in
pop
sbb
int
out
outsb
mov
xchg
inc
jb
es
push
ret
inc
xchg
pusha
in
nop
prefetch
or
mov
adc
xchg
push
sti
adc
ror
dec
add
iret
sbb
mov
inc
cmpsb
fisubrl
mov
aam
out
shr
dec
iret
push
jl
sbbl
and
mov
mov
psubw
lret
loop
hlt
pop
cltd
insl
outsl
imul
mov
ret
dec
jns
or
dec
in
jle
pushf
stc
or
push
sahf
push
push
mov
mov
jae
cmp
mov
or
ja
pop
mov
nop
hlt
lds
inc
xor
js
movsl
xor
outsl
xchg
inc
cmpb
mov
nop
jl
xor
fdivp
xor
xor
into
inc
call
push
xchg
add
or
test
xor
jae,pt
mov
jecxz
cld
cmp
daa
cmc
cmc
jnp
ja
pop
lahf
ljmp
sbb
dec
mov
ja
push
pop
inc
insb
add
loopne
popf
cmp
repz
push
iret
xchg
aas
cmp
in
mov
xchg
adc
shl
push
cmp
or
add
orb
push
leave
pop
ss
push
jmp
mov
out
lds
stc
loop
addr16
frstor
fcoml
movsl
les
stos
adc
mov
int3
mov
sar
js
mov
div
push
pop
out
xchg
push
movsb
dec
add
dec
and
mov
adcl
push
fisttpl
or
scas
scas
test
sub
push
rorb
cmpsb
push
ficompl
mov
rorb
mov
fldl
repnz
inc
xchg
into
add
sub
inc
xchg
lods
cmpsl
jnp,pt
mov
aas
cmp
mov
imull
pop
xchg
jae
out
mov
xor
scas
fnstcw
inc
mov
fstpl
std
xchg
adc
mov
mov
lock
shll
ljmp
jge
lea
adcb
movsl
lret
sbb
jne
pop
and
cmp
mov
mov
add
test
add
push
pop
dec
inc
mov
cmpsl
js
xchg
sbb
dec
jbe
dec
adc
lods
loope
add
sti
xchg
adc
xor
inc
rolb
mov
into
psubsb
rcl
int3
loope
sbb
lcall
movsb
mov
js
sbb
bound
lds
mov
inc
cmp
sar
out
fcompl
inc
mov
das
cmpsb
pushf
ja
xchg
addr16
inc
push
inc
xlat
rorl
cwtl
or
pusha
movsb
mov
in
sti
or
sbb
neg
test
icebp
aaa
inc
iret
outsl
sub
push
rcr
xor
fwait
sub
adc
inc
or
adc
add
int
dec
xchg
pop
test
ret
movsl
and
inc
jnp
xchg
out
add
lea
insb
and
lea
outsl
lcall
cs
mov
popf
inc
adc
imul
out
and
loope
jb
push
or
xlat
fistpl
pop
and
les
sahf
lds
call
leave
inc
push
popf
fdivl
shlb
std
cli
and
sbb
inc
sub
cmp
cmp
jno
cld
add
jl
bound
cmp
xchg
out
lret
pusha
add
mov
mov
sbb
lods
mull
mov
test
fcomps
es
push
repnz
ss
in
xchg
call
push
cmp
jns
imul
jmp
popa
jmp
pop
adc
adc
add
andl
mov
mov
insl
scas
xorb
xchg
inc
jg
inc
pop
jo
repnz
jp
mov
push
fisttps
xchg
popf
inc
aam
outsl
cmpb
xor
fildll
jae
je
or
insl
add
mov
xor
or
fdivs
repz
adc
xor
sub
mov
mov
stc
daa
fs
cmp
pop
rcr
cmp
pop
add
loop
xchg
das
stos
in
pop
rol
cmpsl
xor
jg
pop
leave
and
fmul
je
and
inc
mov
test
fadds
aas
sahf
mov
fiaddl
ret
jae
pop
sti
jnp
sub
filds
call
and
dec
lahf
loopne
xor
add
ljmp
or
popa
fildl
cmp
and
xchg
xchg
cmc
push
out
add
dec
jle
mov
push
pushf
and
je
cmp
roll
sbb
sbb
lock
es
pop
pushf
sbb
shlb
sub
cmp
jns
rclb
push
hlt
mov
popa
pop
shll
iret
fcoms
adc
daa
push
into
cmp
sbb
in
adc
scas
rcl
rorb
fs
push
sub
into
pusha
in
mov
call
sub
mov
insl
pop
loop
call
int
nop
cmpsl
push
vpcmpeqw
std
or
shlb
subb
je
fsubrs
push
and
mov
subb
adc
push
stos
sarl
idivb
js
out
fldl
lret
sbb
push
das
les
push
push
xchg
pusha
stos
add
cmpsl
dec
addr16
enter
aad
sbb
pop
popa
test
orl
sar
in
dec
cmp
les
fisttpll
lret
sbb
loopne
loope
movb
pop
out
sub
mov
and
sub
arpl
and
push
fcmovb
cltd
xor
clc
popf
cmp
notb
test
or
cli
adc
aas
pusha
xchg
xlat
or
in
lahf
aad
cmp
stos
mov
repnz
lret
ja
cmpsl
ret
fwait
pop
pop
pusha
push
mov
icebp
pop
sub
fldl
nop
out
push
hlt
gs
inc
adc
loope
xchg
dec
and
nop
pop
push
adc
loop
subl
jp
inc
std
test
xor
cmpsl
cmp
pusha
dec
or
cmpsl
rcll
in
dec
xchg
cli
sahf
int3
imul
dec
jnp
mov
xchg
mov
mov
jnp
push
push
inc
inc
cld
loope
sahf
mov
mov
cmp
aaa
inc
push
mov
or
adc
imul
dec
movsb
xchg
pusha
les
fs
xchg
fnstcw
gs
and
sub
mov
lods
cmp
test
cmpsb
xor
pop
and
fcompl
enter
sbbl
mov
movsl
rcrl
ds
loope
dec
ret
push
jecxz
sbb
ret
test
sub
sahf
repnz
insb
aaa
mov
loope
or
lcall
cmpsb
sub
std
enter
jae
mov
loopne
pusha
loopne
xchg
jno
in
mov
stos
ret
shlb
add
jecxz
push
push
cmp
lea
enter
mov
sarl
repz
int3
adc
mov
fisttps
and
pop
mov
out
cmp
aam
lods
loope
mov
lods
xchg
test
pusha
mov
lea
mov
or
test
sbb
xor
push
ljmp
push
pop
adc
insb
pop
add
test
mov
ljmp
orb
pop
push
push
push
es
clc
fbstp
sbb
cmp
fadds
jmp
xchg
dec
sub
pop
sbb
xchg
out
rcrl
sub
adcb
outsb
mov
sbb
pop
jb
stos
dec
xor
mov
ret
add
ret
sub
mov
jmp
mov
test
or
and
dec
lahf
jmp
sbb
xor
push
movsb
mov
dec
cmpsb
xchg
clc
mov
xchg
xchg
inc
push
sbb
jg
or
fsubr
mov
shll
shlb
jecxz
fnstcw
cli
movsl
dec
mov
out
jae
mov
inc
rorl
in
das
xchg
aam
scas
aam
fs
sbb
ljmp
inc
xor
xchg
js
in
test
mov
push
ss
sbb
addr16
in
fdivs
mov
push
push
xorb
mov
imul
stos
push
ret
mov
es
push
sub
mov
loopne
cmp
movsb
fwait
mov
ret
mov
jae
mov
mov
fwait
imul
adc
hlt
outsl
push
scas
test
inc
idiv
bound
lods
mov
xor
scas
es
pop
mov
push
jmp
xor
push
pop
popf
in
ljmp
inc
psubsw
push
jno
scas
ror
fadd
sub
icebp
repz
addr16
mov
fcomps
pop
inc
pop
fs
mov
pop
setne
das
ljmp
push
mov
or
stc
pop
std
imul
cmp
push
outsl
fcoml
jnp
push
xor
ja
mov
std
lret
or
pop
push
mov
outsl
sub
pop
lods
stos
sub
movsl
jg
movsb
fists
ljmp
test
ret
out
je
jns
or
divb
sbb
jo
insl
out
lds
dec
inc
pop
xor
mov
pusha
subl
mov
lods
rcll
mov
aad
lcall
pop
push
shlb
bound
push
mov
xor
cmp
aad
mov
ss
push
ja
lahf
in
ret
cltd
push
iret
insb
clc
cmp
fildl
pop
jnp
lods
fldt
loope
or
roll
fstpt
daa
push
movsl
or
leave
movsl
add
sahf
sub
call
mov
push
rorl
cmp
mov
pop
add
add
dec
aam
inc
mov
push
popa
imul
cmpsb
stc
dec
push
enter
xchg
mov
pusha
jnp
dec
lcall
jae
popa
das
imul
add
sbb
std
cwtl
iret
imul
sbb
addl
dec
idiv
mov
jo
test
dec
sarb
ja
adc
cmp
adc
filds
mov
ds
mov
pop
aad
cmp
add
incb
mov
mov
pusha
inc
mov
imul
pushf
push
mov
add
mov
push
test
adc
aaa
xchg
xor
int
xor
jle
lret
leave
add
cmpsb
lds
mov
addr16
dec
dec
mov
adc
mov
scas
mov
inc
popf
das
aam
sub
mov
and
mov
pusha
rolb
add
rcll
int3
roll
inc
xor
fimull
adc
mov
jo
cmp
in
lret
pop
push
sahf
sti
jb
fcoml
add
outsl
out
dec
mov
shll
sbb
je
leave
addr16
cwtl
cmp
adc
mov
cmpsb
inc
test
out
lods
xor
mov
cltd
dec
addb
xor
in
add
pop
dec
and
mov
mov
in
sub
pop
fs
loopne
xor
out
iret
orb
int
jbe
pusha
gs
gs
cs
testb
or
aad
in
cmp
test
enter
xchg
or
pop
filds
clc
cmp
cmp
into
imul
push
jnp
sub
push
inc
les
mov
sbb
fucom
into
add
stos
in
jecxz
lcall
mov
test
mov
jg
dec
cld
lods
mov
cwtl
popa
and
cs
add
cmp
sub
popa
shlb
sub
mov
xchg
push
nop
je
push
inc
lods
sar
mov
push
lea
mov
mov
dec
inc
or
in
lret
and
enter
rcll
sub
insb
testb
mov
adc
in
fimuls
inc
or
insb
and
ss
dec
insb
js
or
in
or
jo
jmp
loopne
iret
aaa
jge
mov
inc
xor
mov
mov
scas
loope
and
inc
mov
and
dec
lds
negl
mov
call
sub
sub
movsb
jle
int
and
push
mov
mov
cs
mov
notl
fcomps
push
xor
adc
fld
aas
loop
sub
dec
cltd
sub
mov
sub
pop
dec
jg
dec
or
mov
test
and
mov
and
lock
adcb
movsb
xor
and
add
shr
cmc
add
enter
cmp
cmpsb
lahf
test
dec
mov
jmp
out
repz
mov
aaa
pop
sub
sbb
test
aaa
mov
jmp
movsb
or
les
or
sti
aaa
call
cmp
pop
pop
and
dec
out
incl
inc
adc
inc
mov
xchg
mov
mov
loopne
test
xor
sub
pop
xchg
rcr
dec
pop
in
dec
popf
dec
clc
daa
jl
adc
sbbb
andb
xchg
int
imul
add
mov
cmp
push
xchg
icebp
xor
push
mov
jmp
pop
mov
iret
repz
jne
xor
push
fcoms
jg
in
inc
pop
inc
dec
or
cmp
mov
ljmp
push
mov
repz
dec
add
jnp
ljmp
push
out
imul
shll
cmpsb
into
ret
push
dec
aaa
jmp
popf
push
mov
pop
jmp
sbb
dec
fisubs
andb
mov
sub
add
leave
pop
inc
fcmovb
scas
inc
pushf
mov
or
lds
jns
push
outsb
ss
lods
fisubrs
sub
hlt
dec
sub
and
mov
mov
push
xchg
cld
xor
mov
mov
test
std
sub
xor
jae
mov
clc
mov
pop
roll
movsl
xchg
loope
sbb
movsb
sbb
mov
rcrl
sbb
repnz
aad
mov
sub
and
add
push
ds
out
add
rcrb
sbb
mov
jl
mov
in
mov
aad
insb
ret
xchg
lods
scas
jns
push
outsl
clc
pop
in
sub
nopl
mov
pop
mov
lret
rclb
ss
jne
jns
addr16
cltd
cmp
or
xorl
and
mov
xchg
xchg
mov
adc
mov
pop
xor
int3
jl
push
sbb
jge
andl
xlat
mov
movsb
dec
out
call
mov
mov
jno
xorb
testl
insl
and
repz
jecxz
rcrl
mov
jg
cmpsb
lods
adcl
pop
hlt
stos
push
call
test
and
dec
or
dec
fcoml
cmpsb
sub
pop
push
jns
jnp
xor
fisubrs
pop
sub
or
cmpsb
and
xor
xchg
mov
push
xor
fistpl
cmp
mov
std
jb
xor
rcr
dec
mov
popf
cmpsl
fildll
ss
iret
sub
fdivr
mov
roll
lds
cmp
adc
pop
pop
xchg
mov
movl
rcll
or
test
adc
addr16
adc
les
in
int3
cmp
or
fs
fcompl
or
dec
pushf
add
mov
fiaddl
orb
stos
add
add
mov
cmc
or
dec
movsl
enter
cmp
cli
push
sbb
sbb
pop
in
xor
cmp
shll
pop
test
jle
dec
repnz
sub
sub
loopne
imul
imul
mov
adcb
pop
inc
inc
outsb
push
insl
adc
hlt
pop
dec
push
inc
pop
inc
mov
add
les
mov
int3
inc
fsubrs
add
test
ja
xchg
das
pop
pop
cwtl
fcmove
hlt
sbb
add
cltd
das
inc
mov
jno
add
loopne
dec
mov
adc
js
in
cmp
es
movsb
movb
dec
mov
xor
lods
out
jp
mov
clc
pop
outsl
leave
xchg
outsl
xor
lods
xchg
xor
out
loope
inc
gs
adc
dec
dec
xchg
imulb
xchg
jne
dec
add
mov
movsl
sub
dec
jnp
andb
jmp
fwait
xor
push
in
or
pop
out
jbe
add
loope
pop
ds
adc
pop
sub
sub
cwtl
sbb
aam
notl
jne
popa
and
push
add
fisttpl
adc
arpl
sahf
fildll
push
sub
push
jmp
xchg
pop
adc
fidivrl
mov
xor
ret
dec
dec
mov
rol
sahf
stos
inc
mov
imul
inc
cli
out
xor
xchg
add
fstps
xor
cmpsb
adc
adc
jne
mov
iret
fiaddl
enter
cmpl
enter
leave
mov
push
mov
cmovp
adcl
push
mov
movsl
ret
repz
roll
mov
out
insb
mov
xchg
inc
cmp
out
fucomip
test
outsb
iret
push
popf
nop
dec
and
jae
jecxz
xor
mov
dec
xor
int3
mov
xor
fdivrs
mov
dec
push
lods
mov
aaa
xor
clc
mov
imul
stos
adc
jl
inc
cmpsb
push
or
adc
in
mov
clc
adc
xor
lock
stos
lahf
into
popa
mov
in
std
fistps
daa
adc
jns
inc
jmp
cmp
mov
xor
adc
sbbb
and
mov
sub
lds
mov
outsl
push
stos
or
push
lea
ret
stos
pop
shll
les
jbe
insb
inc
les
xor
or
push
dec
adc
imul
or
nop
adc
inc
in
testl
mov
cmc
sub
push
int
shll
add
scas
mov
cmp
sbb
sahf
leave
pop
push
mov
addr16
xor
xchg
cwtl
nop
sub
xchg
lods
sbb
lret
test
push
sub
jns
mov
hlt
adc
cld
sahf
xor
aas
out
pop
sbb
add
js
push
cmpsb
xor
mov
fnstenv
insl
xchg
fimuls
test
popf
fnstsw
lods
mov
add
addr16
cmp
xor
add
xchg
mov
and
jl
insl
push
push
add
xlat
lea
int
jae
jg
ds
and
push
fnsave
inc
mov
scas
stos
sub
sahf
pusha
add
jbe
dec
faddl
cmp
cmpsb
cmc
mov
out
cmp
ja
rorb
or
lods
aam
xchg
pushf
clc
sbb
out
movsb
push
lret
sbb
int
fnsave
mov
push
sub
out
test
xchg
loopne
repnz
pop
pop
sti
in
shl
dec
ja
out
xchg
jb
ja
add
ljmp
out
mov
sarb
add
jns
dec
pusha
aam
stos
cld
addr16
or
call
mov
lock
xor
push
cld
or
lock
xor
in
lods
and
or
mov
xchg
bound
or
jno
add
and
sub
repz
xor
clc
popa
add
or
fs
xchg
fs
jbe
andl
push
jecxz
aad
pop
fsubrs
jae
movsb
inc
movsb
rcr
movsl
mov
iret
int3
insb
jecxz
aam
add
fs
fsubrl
inc
xor
xchg
neg
test
xchg
test
mov
mov
enter
mov
leave
or
pusha
test
mov
xchg
sbb
fdivrl
gs
out
adc
mov
imul
and
push
ret
lods
xchg
sub
lcall
dec
and
fisubs
pop
push
call
xor
push
push
cmp
adc
hlt
insb
mov
xchg
test
xchg
imul
push
fwait
in
test
mov
jbe
xchg
xchg
cli
dec
aad
cltd
popa
jmp
outsb
dec
jge
push
outsl
mov
jle
dec
push
xor
mov
out
ljmp
sbb
inc
add
jle
ds
jns
in
lds
xchg
mov
mov
mov
outsl
std
pop
push
ss
pop
cmp
dec
add
insb
add
std
aam
xchg
push
int3
out
out
out
jge
dec
inc
out
inc
dec
or
enter
adcl
mov
int
dec
push
loop
scas
pushf
adc
mov
aas
xchg
cmp
pop
je
test
jecxz
jae
aas
pop
mov
add
jno
orl
cwtl
lods
addr16
pop
les
jbe
rolb
dec
jp
mov
js
dec
testb
ljmp
lret
daa
dec
stc
stc
jl
out
jae
lea
inc
jae
and
or
sahf
testl
and
lods
mov
jge
mov
cmp
mov
jl
and
and
push
call
lods
sarl
pop
mov
bound
scas
call
or
lea
add
pop
jbe
ret
jo
fsqrt
push
nop
fs
movsl
enter
inc
mov
or
lret
sub
dec
mov
mov
lahf
push
pop
insb
push
lock
push
sub
adc
movsl
xor
dec
or
sbb
xchg
fxch
lods
ret
dec
clc
add
jno
ret
fisttpll
jb
lods
shlb
jno
mov
test
outsb
sub
int3
mov
lock
cmpxchg
jecxz
dec
jle
call
dec
jge
out
and
pop
icebp
push
fldl
jecxz
or
xor
aad
lods
scas
movl
sub
jae
mov
mov
pop
shll
dec
and
push
movsl
fdivl
mov
mov
mov
jne
mov
mov
fidivrl
inc
jb
and
mov
and
negb
pop
aas
jno
ljmp
push
pop
lds
or
mov
pop
ret
inc
mov
testb
mov
push
mov
adc
sti
adc
mov
stos
fs
xchg
mov
and
mov
and
xor
mul
sbb
imul
sbb
sti
outsl
jmp
mov
or
fadd
xchg
inc
testb
int
lods
scas
into
in
sbb
movsl
cmp
jecxz
lock
icebp
mov
aas
jle
pushf
outsl
cmp
mov
inc
filds
movl
xchg
xor
inc
push
mov
movsl
jmp
add
inc
call
fwait
push
cwtl
dec
lcall
aad
mov
dec
inc
out
rorb
adc
nop
sub
movl
dec
xor
fcmove
outsl
insl
test
cwtl
data16
mov
out
lret
pop
jp
int3
arpl
int3
sbb
test
notl
mov
out
test
cmp
and
ror
das
xchg
xchg
nop
mov
gs
das
jns
test
or
ret
es
adc
xchg
lcall
lea
les
aas
lds
lds
aas
bound
sahf
rcl
mov
dec
dec
and
das
hlt
and
adc
lret
bound
imul
xchg
aaa
ss
mov
and
in
inc
in
cltd
imul
sub
mov
pusha
pop
xor
ljmp
xlat
dec
push
es
push
or
sub
cmp
fisubrl
loopne
out
lahf
ljmp
mov
aad
repz
add
imul
pop
daa
repz
mov
repnz
roll
pop
shlb
popa
pop
cmp
aam
pushf
xor
popl
xor
int
add
pushf
bound
mov
jbe
mov
shrb
push
clc
test
jp
adc
adc
sarl
xchg
repz
xor
iret
push
aad
push
cmpsl
or
fldl
jne
aam
xor
xchg
pop
jnp,pn
and
fcmovu
test
stc
sbb
fs
mov
ds
xchg
test
xchg
iret
fildll
xchg
mov
xor
adc
dec
dec
and
popa
loope
jo
ss
arpl
rorl
mov
outsl
stos
popa
std
mov
fldt
scas
mov
leave
in
jbe
leave
fwait
dec
fiaddl
hlt
pop
loope
xor
les
scas
fld
and
adc
imul
mov
add
gs
icebp
mov
push
xor
outsl
out
pop
jno
icebp
daa
lea
pop
mov
test
ja
outsl
pusha
push
movsl
push
sahf
dec
push
sarl
lea
cltd
dec
pop
sahf
mov
cmp
sbb
sbb
xor
popa
bound
test
scas
out
loope
cmpl
fdivl
mov
lds
push
aad
cmpsl
pop
aas
xchg
mov
dec
push
adc
fdivl
push
rol
mov
stc
inc
fwait
xchg
pushf
mov
sbb
inc
ja
arpl
pushf
sbb
fstps
pop
push
xor
inc
pop
outsl
sbb
push
pop
rcll
sub
pop
divb
fildl
adc
add
xchg
push
jle
ds
into
or
adc
rcrl
and
daa
sub
push
daa
adc
mov
ficompl
addr16
jns
in
push
dec
push
fdivl
pop
int3
sbb
fwait
popl
or
dec
loope
popa
enter
adc
xchg
test
rcr
int3
xchg
mov
jno
jp
push
jg
adc
add
je
mov
outsl
insl
frstor
pop
xchg
sbb
stos
lret
movsb
adc
stos
pop
adc
dec
gs
jne
xchg
aam
xchg
xlat
test
cs
fdivs
daa
shll
pop
xchg
sbb
out
fnstenv
push
jb
and
and
jecxz
xor
out
mov
test
idivb
dec
sbbb
mov
inc
adc
pushf
clc
jge
leave
pop
push
fmull
leave
lds
pop
pop
mov
xor
and
enter
mulb
iret
pop
xor
pop
pop
andb
push
in
or
jns
push
push
icebp
fsubrs
hlt
repz
movsb
sub
add
inc
and
sarl
sub
daa
scas
inc
xchg
add
ret
xorl
cmpsb
nop
jne
popa
test
cwtl
jmp
ficoms
sub
lods
mov
ret
pop
cmpsl
xchg
mov
in
mov
cmp
sub
xchg
aas
mov
sub
negl
shr
mov
jo
fcmovu
insl
in
and
sub
fldcw
mov
jmp
call
push
pop
pop
mov
pop
cbtw
fcmovb
movsl
mov
pop
lods
pop
outsl
scas
jno
sub
or
or
or
push
or
outsb
packuswb
xchg
sbb
mov
icebp
adc
out
fisubs
xor
lods
jbe
mov
mov
loope
andb
pmulhuw
push
ficomps
notb
xor
pop
clc
xchg
loope
roll
push
push
out
cmp
jnp
cmpsb
in
int
mov
js
lret
and
fwait
jmp
mov
js
cmp
cmp
dec
adc
int3
push
scas
arpl
sub
loop
mov
add
pushf
xchg
inc
mov
bnd
lcall
cmc
orb
add
mov
xor
ds
test
insb
cmp
pushf
lahf
scas
imul
cli
popa
fldl
outsl
sub
aad
pushf
push
out
mov
mov
mov
test
test
enter
addr16
push
sub
xor
xor
push
aad
jnp
push
push
mov
pusha
xchg
icebp
mov
dec
hlt
loope
xchg
and
jl
adc
sbbl
iret
xchg
inc
fidivrs
movsb
popa
mov
jmp
and
shlb
sub
mov
jmp
add
in
andl
sbb
dec
jnp
imul
out
idivl
ljmp
mov
fcomps
sub
fsubrs
dec
test
popa
sub
cli
ds
jmp
sub
or
popf
lods
movsl
sbb
icebp
les
sub
pop
dec
stos
test
jmp
cmp
mov
jo
or
jle
repnz
cmpb
test
or
cmp
cmp
rcrb
jmp
ficompl
lock
imul
ret
xor
push
push
dec
loop
pop
jnp
mov
dec
sbb
out
loop
hlt
arpl
pop
in
and
inc
sbb
sub
stc
rol
push
test
sub
test
cmp
and
push
and
dec
lahf
or
lahf
test
or
sti
popa
xchg
inc
sbb
fs
cwtl
cltd
push
jno
movsl
push
mov
cli
cmc
pushf
stc
daa
lcall
push
arpl
inc
sti
stos
sahf
hlt
insb
icebp
aad
mov
vpmacssdqh
pop
decb
add
int3
jl
mov
out
mov
push
int3
ds
adc
sbb
cmp
cmp
ljmp
lds
mov
mov
call
mov
inc
ja
cmp
sub
xchg
insb
test
xchg
fnstsw
ss
shlb
leave
into
pop
ret
xchg
push
test
cmp
cltd
mov
shlb
pop
jb
xor
insl
mov
test
lret
mov
in
lret
stos
es
jge
cmp
test
pop
add
daa
mov
mov
es
sub
mov
sub
aas
adc
push
fclex
mov
inc
cmp
cmpsl
stc
sbb
or
pop
cmp
jb
jle
push
cmp
xchg
push
fldenv
icebp
mov
in
icebp
jbe
fmuls
dec
mov
je
data16
sahf
push
pop
scas
mov
fnstenv
xchg
inc
in
aad
pop
jle
adc
stos
data16
jge
push
mov
movsl
cld
inc
call
mov
leave
adcl
pop
data16
aad
and
push
xor
lret
mov
flds
pushf
rorb
clc
mov
js
leave
dec
mov
pop
xchg
test
mov
inc
fisttpl
lea
imul
push
in
stc
cmp
add
repz
fldcw
push
scas
cmpsb
rorb
sub
outsb
sti
mov
jo
and
mov
add
cmp
jl
adc
inc
push
push
sub
dec
mov
pushf
adc
test
sahf
mov
mov
sub
out
push
xlat
jmp
rorb
add
scas
cmp
jbe
and
mov
cmp
sbb
and
and
loop
mov
in
ds
lds
dec
push
mov
pop
cltd
and
add
adc
cmpsl
jno
or
cmp
and
aad
fisttps
push
xchg
cmp
cmp
and
cmpsl
add
inc
push
dec
pushf
lds
push
mov
push
mov
fcomps
cmp
cltd
insb
xor
je
repnz
ret
mov
jb
daa
mov
ja
pop
test
enter
lcall
out
int
lret
jne
mov
xchg
movsb
dec
and
fdivr
inc
bound
cmp
insb
and
in
or
mov
pop
aad
sub
push
subb
insl
insb
ljmp
iret
addr16
cmpsb
inc
jecxz
daa
int3
pop
dec
rol
mov
or
data16
push
lahf
jb
cmp
mov
push
add
stos
sbb
scas
pop
rolb
mov
and
gs
dec
jne
ds
cmp
push
in
cmp
test
mov
repnz
popa
leave
pop
sbb
jno
repz
fildll
aaa
fistpll
cmp
outsb
lcall
dec
xor
adc
incb
nop
and
mov
mov
loop
fwait
aas
mov
bound
dec
xchg
loopne
popa
mov
mov
js
insb
pop
push
xchg
mov
cmp
mov
inc
div
sub
sub
jo
lds
jg
popf
mov
xchg
xchg
xchg
jecxz
cmp
or
int3
in
inc
cwtl
cmpsl
xor
cmc
scas
aaa
fmul
xor
or
jle
push
xchg
popf
mov
xchg
mov
mov
aas
data16
mov
cmp
xor
lcall
andb
add
pop
push
popf
movsl
fdivr
lahf
sbb
push
jae
stos
jl
or
xor
sub
fiaddl
in
cmc
fs
sbb
adc
pushf
sbb
mov
call
rcrb
mov
cmp
push
cmpsl
jns
cmp
loop
sbb
mov
subb
loope
movsb
mov
adc
ret
jmp
fisttps
mov
stc
sub
xor
clc
test
lcall
mov
jg
cmp
neg
inc
mov
mov
movsb
std
leave
movsb
leave
lock
adc
cmp
fwait
sub
cmp
call
sbb
mov
add
and
cmp
jmp
push
add
sub
into
pop
cmc
jge
pop
popf
aam
mov
dec
jmp
xor
push
and
adc
mov
in
xchg
pop
dec
sub
or
jmp
mov
mov
jmp
pop
push
inc
sub
pop
inc
lahf
sub
movsl
pop
pop
jae
fildll
mov
lret
cwtl
cld
in
lea
jp
div
je
nop
add
popf
popa
push
mov
lods
lods
jge
mov
test
and
cmp
mov
xchg
adc
mov
cmp
mov
nop
adc
pop
dec
mov
cltd
das
xchg
imul
fidivrl
orl
icebp
dec
xor
sub
add
mov
push
ret
add
ss
mov
pop
push
ret
adcl
mov
xlat
jmp
mov
lock
push
lds
inc
dec
sbb
stc
sub
ror
scas
popf
adc
and
imul
mov
pop
aad
cmpsl
gs
pushf
mov
stc
cmp
stos
mov
int3
test
pushf
xor
and
xor
add
fcmovnu
popf
or
lcall
aam
roll
fwait
push
jnp
iret
lock
stos
sub
mov
fsubl
mov
movsl
fsubrs
jae
andl
insl
sbb
or
sbb
and
lock
shlb
xor
stc
lahf
daa
pop
inc
ljmp
push
push
es
stc
xchg
fidivl
imul
cmpsl
dec
dec
stos
test
sbb
mov
cmp
cltd
insl
aad
xor
push
scas
out
call
scas
sbb
loope
insl
cs
jb
sub
push
sti
outsl
out
stos
aaa
xchg
sbb
pop
inc
popa
mov
xlat
jo
fxch
xchg
mov
pop
xchg
ficompl
movsl
pop
inc
mov
popf
push
dec
cli
push
mov
pop
hlt
cld
xor
leave
jmp
mov
push
pop
shr
adc
cmp
fnstcw
dec
pop
pop
and
push
mov
sarl
movsb
mov
or
pushf
adc
rcll
mov
inc
dec
xchg
and
imul
dec
xor
jns
adc
sbb
cmp
cmp
dec
pusha
pop
add
jae
xor
dec
mov
es
lret
daa
sbbl
stos
icebp
mov
cmc
cmp
arpl
lds
jb
mov
pop
insl
das
fistl
lcall
mov
dec
jge
clc
fsub
ror
cmp
mov
sbb
sub
aas
in
adc
dec
cld
xchg
into
and
divb
outsb
ljmp
xor
sbbl
pop
add
mov
and
or
inc
or
insb
cmp
jmp
xor
clc
lret
les
mov
xchg
xchg
scas
cmp
out
loop
mov
out
mov
pop
dec
hlt
mov
xchg
push
inc
push
pushf
mov
inc
int
push
xorl
adcb
pop
xor
cmp
cmp
mov
push
data16
cmp
call
adc
cmovns
lret
push
clc
xchg
imul
jmp
mov
add
sbb
fstps
push
inc
jmp
adc
int
xchg
push
stc
js
dec
mov
addb
enter
sti
cmpl
loop
aaa
mov
daa
push
jns
cmpsb
fdivrl
jb
sub
xchg
inc
pop
xchg
scas
dec
jbe
mov
movsl
inc
mov
into
data16
inc
fidivl
cmp
add
mov
push
popf
inc
jecxz
or
and
xor
mov
outsl
sbb
leave
sub
lds
sub
push
fildll
aad
jne
ss
dec
jno
jmp
das
mov
out
mov
mov
mov
dec
loopne
push
imul
test
xchg
mov
sub
out
test
aam
xchg
cmp
adc
add
jnp
ss
xlat
push
ss
stos
jecxz
xchg
loope
sbb
adc
int
pop
paddd
xchg
and
and
xorb
cwtl
test
sbb
xchg
rcl
mov
mov
aad
loope
nop
shrd
sti
jge
or
hlt
inc
popa
repz
repz
test
addr16
nop
cmp
sbb
lods
push
mov
jo
lahf
sub
fcoms
insb
ftst
push
sbb
cwtl
daa
cmp
and
lcall
rcr
insb
rclb
aad
pop
iret
dec
sti
push
mov
push
bound
imul
xorb
or
sbb
push
jmp
cmp
adc
mov
stc
andb
ret
and
imul
jl
pusha
cld
aaa
mov
test
iret
cmpsl
aam
cltd
shrb
shll
scas
add
jno
aaa
out
jmp
out
adc
or
fistpll
cmp
inc
dec
fstpt
or
mov
add
mov
rorl
inc
cmc
cmp
lods
mov
nop
les
mov
repnz
iret
or
and
jle
fs
cltd
cmp
popf
mov
dec
imul
mov
imul
test
adc
cmp
xchg
push
shr
mov
std
xor
dec
lock
xor
scas
push
jmp
faddl
in
ret
out
mov
xor
push
movsb
pusha
mov
adc
cmpsb
fcomp
fisubrl
pushf
cmp
cld
ss
cmpsl
out
mov
iret
cmpsb
imul
xor
into
arpl
dec
cwtl
mov
sub
jle
ljmp
jno
adc
daa
loope
cld
inc
daa
cmp
mov
lcall
xchg
fcmovu
gs
push
shll
jo
sub
mov
jp
lods
int
mov
mov
andb
cmp
sbb
inc
sub
pop
pop
scas
mov
push
or
daa
dec
jno
aaa
and
inc
sahf
cmp
xchg
jmp
xchg
pop
sub
fdivp
inc
push
test
mov
out
outsl
stos
loope
adc
in
shlb
gs
sub
push
mov
pop
pop
xorb
xchg
dec
mov
jae
push
xor
fsubp
jne
dec
jns
int
outsl
add
adc
mov
xor
push
dec
test
sti
bnd
jo
sbb
pop
imul
pop
je
cwtl
rolb
fwait
cmpsb
push
rolb
rcrb
int
xchg
mov
sub
scas
cs
out
push
cmp
jbe
fbld
int3
stc
movsb
ds
sbb
pop
adc
outsl
push
pop
imul
adc
in
mov
push
push
fidivrl
subb
mov
sbb
push
cld
fcmove
sub
int
or
push
push
xchg
cs
out
in
jl
fcomps
push
pop
inc
push
push
test
xor
lcall
les
mov
mov
add
mov
xorl
push
add
pop
mov
xor
addr16
out
inc
jl
in
adc
xor
lcall
inc
mov
jmp
imul
and
clc
pop
cmpl
xchg
push
fsub
stos
cmp
push
lds
sub
cld
aam
inc
push
data16
mov
mov
sbb
mov
xchg
mov
loopne
lds
mov
sub
les
sub
adc
in
cmp
jl
es
out
push
xor
leave
repnz
xchg
dec
test
ret
ficompl
stc
leave
or
mov
out
mov
push
xchg
ret
test
mov
mov
aad
test
mov
mov
push
and
cmc
loope
push
add
std
insb
inc
je
xor
fnstsw
inc
mov
pop
inc
push
cmp
inc
cmp
mov
mov
mov
push
push
push
adc
enter
popf
cmc
xor
or
filds
pop
push
lmsw
addr16
addb
insb
add
mov
mov
cmpsl
pop
scas
mov
rcrb
pop
movsl
popa
movsb
mov
addl
mov
push
in
pop
mov
mov
js
ret
xor
packuswb
insl
pop
aam
fnstsw
into
shlb
into
pop
imul
adc
jg
ret
or
pop
sub
inc
cmp
inc
jne
jae
clc
mov
mov
pushf
stos
repnz
sub
adc
xor
jbe
mov
daa
xchg
and
or
pop
sub
mov
mov
or
in
cli
adc
mov
xor
cmp
mov
inc
lret
sub
mov
sub
loope
add
subb
int
test
sti
and
xchg
repnz
cltd
enter
int
and
fstl
arpl
mov
std
insb
pop
and
jg
es
pusha
icebp
adc
sbb
int3
mov
or
push
push
lea
and
popf
xor
fildl
std
shll
jns
sbb
movsl
jne
shr
cmp
inc
mov
xchg
mov
ret
cmp
lds
push
fdiv
stos
inc
pop
add
test
push
iret
jno
pop
inc
mov
or
push
add
lret
mov
outsl
cmpsl
leave
test
mov
setp
add
add
stos
push
add
mov
icebp
sub
rorb
shrl
xchg
xor
mov
jns
scas
mov
loopne
push
in
fists
jae
xor
xor
adc
push
in
test
insb
mov
sub
push
adc
ret
hlt
mov
jg
mov
cs
repz
push
push
xchg
jbe
ds
push
jle
in
sbb
mov
xor
jmp
inc
dec
or
cmp
jmp
xchg
sbb
mov
push
ret
shrb
push
hlt
stos
mov
and
mov
dec
inc
jecxz
mov
xchg
repz
ja
xchg
lret
loop
mov
incl
xor
and
push
fsubs
pop
dec
out
lret
dec
xchg
loope
lcall
jecxz
pop
imul
mov
cli
xor
push
outsb
xor
pop
bts
jle
jmp
add
rclb
in
popf
dec
gs
out
sbb
pushf
add
xor
sub
push
dec
repz
sbb
adc
rcl
sub
inc
fistl
mov
loope
movsb
jne
mov
into
repz
pop
lcall
fldl
movsl
cmp
fwait
es
jbe
insl
rclb
mov
xor
ss
sahf
or
int
dec
movsl
cmp
aaa
cmp
je
movsl
stos
sti
lcall
sbb
cld
dec
int
xchg
loopne
or
push
xacquire
enter
mov
add
jle
xlat
lea
pop
pushf
in
jb
inc
adc
mov
xor
dec
xlat
sbb
mov
and
inc
int
mov
lret
jne
jne
lahf
ror
mov
arpl
jge
sub
push
imul
leave
lret
insl
daa
sub
mov
adcb
mov
dec
push
push
fsts
xchg
sti
ds
pop
sbb
stos
insb
sub
aaa
add
out
sub
push
and
cmp
imul
inc
cmp
int
outsl
mov
orl
enter
xor
cwtl
scas
cmp
fadd
in
adc
jg
sbb
rorl
ja
jge
out
lret
outsb
or
adc
repnz
enter
les
push
in
test
mov
mov
dec
pop
adc
jp
xchg
inc
mov
out
mov
pop
fisttpll
lcall
or
fidivs
jmp
push
out
add
addr16
call
mov
pop
xchg
sar
mov
add
pop
in
popa
movsl
mov
std
inc
std
jns
pushf
lret
popf
pop
push
popf
push
mov
in
test
add
ss
dec
ficomps
icebp
push
xchg
adc
lods
cmp
or
mov
imul
and
xchg
xor
push
mov
and
fbld
or
test
push
int
scas
jno
stc
mov
in
arpl
divb
ror
out
loope
mov
or
xchg
notl
sahf
and
dec
and
cmpl
push
cmp
dec
mov
les
out
add
adc
cmp
shrb
pusha
pushf
pop
std
mov
stos
inc
mov
or
mov
lret
arpl
and
stos
stc
jl
pop
stos
mov
outsb
add
loop
stos
mov
in
jne
add
xchg
cmc
iret
movsbl
fisubrl
push
daa
xor
addb
mov
inc
in
xchg
cltd
jne
xor
inc
sub
mov
or
inc
je
add
cmpsb
xor
test
mov
stos
jmp
pop
sarl
jle
push
mov
xchg
mov
adc
push
testb
add
push
sti
std
cmp
adc
or
pop
or
push
js
adc
push
add
and
je
test
arpl
mov
add
fbld
xor
aad
pusha
or
out
pusha
scas
popa
jg
ficoml
loopne
repz
dec
push
mov
sbb
dec
stos
daa
mov
cwtl
shr
jp
push
insb
imul
es
or
gs
pop
inc
push
and
ficoml
bound
jge
stos
fidivrs
fwait
test
sub
loopne
mov
xor
loope
adc
fsubrs
sub
lea
mov
scas
adc
bound
rorb
call
repz
pop
addr16
xchg
adc
ss
inc
xlat
aam
and
xchg
mov
pop
sub
add
into
stos
cli
jle
imulb
push
mov
enter
insb
imul
cwtl
loop
mov
sub
inc
jl
mov
cmpsl
das
and
adc
lahf
push
xor
outsb
push
rcrl
pop
mov
jl
movhps
es
push
xor
xor
mov
clc
fidivl
and
xchg
cld
in
sarb
xchg
enter
pop
lods
mov
mov
loopne
loopne
adc
imul
leave
cli
lahf
add
sbb
push
add
outsl
enter
xchg
in
fwait
push
neg
fdivl
es
arpl
int
xor
lods
mov
cmpsl
pop
es
hlt
dec
mov
stos
jle
cmp
jns
cwtl
movsl
cmp
and
xor
pusha
or
pop
xchg
xor
sub
mov
mov
ficomps
cmc
push
sub
add
add
xlat
mov
in
fs
adc
push
xchg
sub
sbb
dec
jmp
test
decb
jge
mov
sub
pop
sub
cmp
dec
sbb
xchg
mov
mov
ss
pop
lret
ja
testl
aas
pop
sbb
xor
scas
into
push
inc
lds
outsl
int3
jge
into
shl
mov
repnz
cmova
sarl
jge
sub
mov
out
jns
fbld
aad
outsb
lret
dec
pop
imul
movsl
out
insb
lds
inc
inc
ffreep
mov
mov
js
mov
xor
inc
imul
xchg
mov
push
cmp
jmp
sarl
sub
popa
das
push
cmp
xchg
pushl
lahf
adc
xor
inc
jnp
push
fistps
mov
push
inc
pop
les
cmpsb
adc
dec
out
cmpb
testl
fs
jmp
bnd
cwtl
ficoml
not
mov
gs
inc
ja
jle
mov
fnsave
in
mov
jle
push
inc
or
in
es
jae
out
rcrb
pushf
and
jmp
das
dec
cmp
cs
lahf
mov
mov
xchg
jg
les
xor
cs
xor
imul
push
addr16
test
or
jns
push
push
jg
cld
xlat
popa
jo
jns
shrb
cs
push
add
std
xlat
shll
aam
cs
das
jp
test
cs
iret
imul
mov
hlt
mov
shrl
sub
cmpsb
cmpsb
sub
mov
inc
jp
xchg
adc
mov
pop
rcr
test
adc
mov
sub
insb
jecxz
mov
loope
add
mov
and
add
sbb
repz
imull
or
xchg
fnclex
stc
push
gs
adc
mov
xchg
cmc
enter
xchg
jne
insb
mov
cmp
xor
nop
movsb
sub
xchg
into
fidivrl
sub
insl
dec
es
cmp
sub
sti
das
out
mov
adc
cmp
in
xchg
or
add
lret
out
out
dec
fwait
iret
in
cmp
xlat
inc
std
sub
pop
sbb
xorl
addr16
push
and
movsl
sbb
shrl
addr16
cmpsl
lods
in
mov
or
lock
gs
sub
into
imul
lock
and
outsl
jmp
push
aad
lock
jns
lock
inc
scas
inc
dec
push
call
aas
xor
and
adc
add
cld
pop
xchg
and
adc
sub
popf
outsb
xchg
out
ja
add
test
mov
jne
fldl
popf
sbb
out
lods
stos
jo
dec
icebp
mov
or
add
sbb
pusha
sarb
mov
movsb
negb
pop
movsl
sti
pop
jle
in
mov
subl
ljmp
sub
rol
or
xchg
sbb
loope
sbb
lret
xor
xchg
outsl
inc
mov
add
xor
daa
mov
repz
push
rcl
pop
push
mov
xchg
std
xchg
xchg
mov
aas
mov
fdivl
mov
sub
or
jnp
jl
bound
xchg
pop
sbb
psubusw
xor
and
dec
inc
lret
stc
mov
pop
mov
cmp
push
popf
push
dec
push
adc
push
cmp
and
cs
jo
inc
lret
into
nop
xchg
xchg
daa
imul
push
mov
iret
iret
adc
and
mov
xlat
adc
add
push
lcall
inc
xchg
inc
pop
test
aad
hlt
subl
pop
push
out
push
es
push
movsb
pop
leave
fiadds
aad
add
imull
xor
cli
dec
out
scas
xlat
jecxz
call
sub
test
out
insb
out
mov
ja,pt
adc
jo
imul
aad
stc
jbe
inc
loopne
movsb
inc
cltd
add
sub
sbb
jbe
je
xchg
jl
dec
and
out
in
inc
cmp
dec
rolb
icebp
shr
popa
mov
push
outsb
mov
js
sub
inc
xchg
push
or
addl
sbb
es
clc
or
mov
mov
or
push
push
mov
popf
aaa
ljmp
ficoms
loope
aas
push
lret
dec
ljmp
movsb
mov
dec
pop
pop
data16
cmpsl
sub
test
hlt
in
and
add
in
mov
add
fistpl
mov
lcall
xchg
adc
mov
sub
out
test
in
sub
mov
jmp
aas
dec
fmuls
sbb
fs
xchg
or
xorb
sbb
push
jbe
cmp
test
sub
jle
xchg
test
mov
sarb
adc
mov
and
xchg
add
ret
aas
imul
jae
clc
inc
cld
addr16
lods
add
inc
jl
ds
negb
push
mov
push
fnstcw
push
mov
int
test
pop
lret
jnp
repz
or
jo
shrl
pop
sarb
divl
push
mov
loop
imul
jmp
cli
test
jmp
mov
jl
inc
or
push
dec
mov
dec
jae
js
imul
mov
xchg
inc
jle
pop
mov
pusha
into
mov
xchg
mov
out
cmpsb
fadds
out
pop
jo
mov
loop
cmp
mov
loope
cmp
rclb
adc
mov
dec
mov
aam
notl
setg
rcl
cmp
neg
dec
add
daa
and
fisubrl
testb
out
test
lds
sahf
std
pushf
jl
mov
aaa
mov
cmp
and
add
imul
cmc
cmp
xchg
mov
cmp
inc
jp
out
xchg
addr16
ret
movsl
movsl
addr16
jo
jecxz
loope
icebp
xorb
pop
outsb
fwait
cmpb
xlat
mov
mov
xchg
add
icebp
fwait
mov
mov
imul
ret
mov
out
mov
lock
sbb
ljmp
push
es
pop
scas
sti
frstor
icebp
sub
xchg
movsl
stos
sub
sub
cmp
mov
add
add
push
lcall
add
jmp
pop
inc
lret
mov
stc
pop
jge
fwait
mov
pop
mov
lret
inc
and
vxorps
fidivl
push
or
fwait
aam
out
movsl
stos
popf
cli
lock
das
lret
cltd
push
lcall
add
std
mov
mov
mov
push
mov
enter
mov
pop
iret
imul
aaa
ja
enter
add
jnp
cmp
pushf
fs
lea
push
add
dec
in
addr16
mov
es
shll
push
jno
cwtl
lods
cld
popa
cli
xchg
jnp
jo
sahf
and
jg
iret
int
clc
fcmovbe
ret
mov
repnz
push
repnz
pop
int3
push
sbb
cld
mov
pop
mov
dec
fcmovnbe
es
mov
rorl
push
dec
je
loop
rol
lds
nopl
mov
or
xchg
cmp
fadds
loop
mov
call
xor
ljmp
lods
pop
add
and
mov
push
mov
cmp
mov
fidivs
aam
mov
xchg
jns
xlat
or
add
mov
shlb
mov
xchg
popf
push
test
rolb
decl
xchg
out
rcrl
lock
cmpl
in
pop
jp
mov
aam
cmp
cmp
or
lcall
push
sub
shl
dec
mov
cwtl
arpl
dec
push
pop
xchg
inc
adc
cmp
pop
ja
int3
xor
push
lods
sbb
push
ret
or
dec
in
hlt
fcmovb
cld
scas
add
scas
inc
mov
or
or
and
cld
ret
sbb
test
lcall
sti
fisubrl
ret
aad
sub
xchg
lret
movsb
sub
lods
jecxz
out
xorl
jb
call
and
cmp
mov
xorl
movsl
scas
inc
xlat
pushf
pusha
mov
mov
jbe
push
adc
test
inc
jae
in
orl
scas
cli
rcll
inc
dec
pop
dec
dec
adc
pop
inc
xlat
pmulhw
mov
pop
mov
cmp
pop
outsb
iret
and
push
sarb
and
pop
pop
jg
cmp
das
mov
and
cltd
mov
xchg
sti
inc
jmp
or
mov
ficoml
call
mov
xorb
mov
cmpsl
call
cmc
stc
jns,pt
sbb
jbe
popf
mov
push
enter
dec
and
adc
mov
jnp
sub
dec
std
and
pop
jb
mov
dec
js
in
mov
add
mov
and
movb
lock
sub
cmp
pushf
inc
xchg
add
arpl
aaa
cmpsl
rcr
push
mov
lret
xor
imul
fwait
xchg
lds
sbb
or
add
imul
rorb
xor
lret
inc
shlb
mov
cmp
mov
mov
and
mov
pop
fidivrl
add
jns
shlb
lret
or
mov
ret
fadds
xor
cld
add
adc
jmp
mov
sbb
and
addb
mov
push
movsb
sbb
xchg
adc
sbb
inc
lds
adc
addr16
xchg
xchg
pop
mov
idivb
cmc
lahf
fsubl
imul
push
fs
mov
cmp
or
mov
and
cvttps2pi
and
inc
cmp
jbe
scas
xchg
movsl
pop
sub
fsubrl
jne
mov
incl
inc
inc
fiaddl
jp
jmp
loope
iret
je
aaa
sub
int3
dec
and
inc
ret
mov
movb
mov
clc
mov
xchg
mov
cmp
mov
movsl
rcrl
das
in
scas
aas
mov
mov
sub
sub
shrl
inc
add
arpl
add
cmp
pop
mov
test
adcl
dec
xchg
sbb
jmp
insl
leave
lds
xor
enter
ficompl
mov
xchg
push
ds
addb
pop
jbe
sbb
pop
mov
arpl
subb
mov
dec
pop
pop
cmove
daa
stos
das
mov
sti
adc
cs
jle
xor
cwtl
ja
ret
inc
cli
cmp
push
pop
dec
lret
in
cltd
sbb
negl
fdivs
jmp
ror
cli
and
js
and
or
cmp
jb
mov
fcmovnu
cmp
add
loop
jb
xor
add
mov
inc
call
out
loopne
push
cmpsl
xorl
mov
dec
out
pop
out
pushf
lret
xchg
mov
jae
inc
push
pop
data16
dec
jecxz
push
sar
je
inc
outsb
ljmp
std
sbb
ret
sub
pinsrw
ret
push
leave
or
roll
pop
arpl
das
mov
mov
imul
dec
and
mov
add
xor
jb
cld
sahf
mov
outsb
jmp
jecxz
stos
push
add
inc
xlat
mov
sbb
pop
aaa
imul
cmpsl
int
add
imul
jecxz
mov
loop
push
lret
mov
sub
js
mov
xchg
ret
leave
outsb
rclb
mov
mov
jo
add
gs
daa
mov
fldcw
mov
add
sub
push
test
push
int3
jae
cmc
sbb
jb
push
cld
out
lock
inc
cmp
pop
push
push
xchg
outsb
push
or
jnp
ljmp
fdivr
dec
fwait
stos
stc
pop
jge
jo
mov
push
sbb
outsb
adc
out
pop
loop
ret
aam
xchg
add
xchg
out
and
fndisi(8087
jnp
sbb
sbb
rcl
push
jecxz
popf
aaa
adc
shll
sub
mov
mov
jecxz
pop
jbe
rcl
data16
cld
mov
mov
and
jo
dec
push
repz
adc
outsl
out
dec
jno
nop
xchg
out
flds
pop
xchg
push
insl
loope
mov
and
sub
dec
rcrb
por
daa
xor
popf
movsb
inc
jnp
ja
add
cmp
push
rcll
in
lcall
mov
cld
push
insb
cmp
es
into
cmpsb
in
inc
sbb
rorl
sbb
jge
in
dec
leave
arpl
pop
pop
ds
pop
lahf
mov
mov
and
cmc
fdivl
mov
push
mov
jmp
fs
outsb
inc
mov
in
iret
sti
ret
insb
je
cmc
add
mov
xchg
popf
in
pop
test
sbb
xor
stos
inc
and
or
push
repz
dec
outsl
movb
inc
push
mov
cltd
inc
aam
test
mov
and
in
rorb
daa
movsl
jno
test
xchg
push
aad
dec
adc
inc
scas
push
jge
jb
loopne
pop
sub
push
loope
inc
arpl
icebp
pusha
sub
mov
push
mov
andl
xchg
lret
es
cwtl
mov
cli
jno
xor
cmp
aas
sbb
pop
out
scas
sbb
pop
xlat
movsb
sahf
subb
rorb
jo
repz
pop
push
aaa
and
idiv
fcomps
iret
mov
cwtl
jne
mov
sub
bound
movups
adc
andb
mov
push
push
sbb
stos
cwtl
mov
dec
movsl
movsl
mov
dec
adc
ret
fmuls
sbb
adc
shl
xchg
jg
jo
das
sbb
push
pusha
add
popf
insl
push
in
xchg
icebp
or
into
movsb
xor
push
insb
xchg
imul
mov
mov
pusha
fcoms
or
inc
pop
mov
mov
and
pop
aad
pop
push
adc
sub
adc
mov
jmp
xor
int3
push
inc
imul
movsl
xor
in
and
pusha
es
mov
aam
mov
push
test
sub
incl
push
out
loope
xlat
out
sbb
or
mov
pop
pop
mov
sub
adc
out
imulb
inc
or
fnstenv
push
nop
push
jb
mov
int
inc
adc
lcall
mov
out
mov
data16
rorb
leave
inc
fwait
push
xchg
adc
inc
gs
cli
mov
cwtl
push
add
inc
dec
or
or
ret
sbb
pop
daa
popf
das
add
or
add
outsl
xor
loopne
inc
js
jge
mov
test
cwtl
xchg
sub
mov
mov
add
iret
cmp
movsb
cld
dec
sub
stos
and
xor
test
testl
imul
inc
adc
sub
add
cli
loope
jno
pop
mov
pop
mov
out
in
test
or
pusha
jb
cmp
pop
and
lcall
inc
mov
hlt
sub
sahf
jmp
sub
lret
add
pop
mov
xor
mov
aad
mov
repnz
and
test
arpl
mov
arpl
orl
jecxz
ret
cmc
pushl
int3
clc
or
push
push
cmp
aad
or
cwtl
hlt
inc
sbb
int3
popa
sti
xchg
icebp
out
hlt
mov
fistpll
ja
nop
push
jecxz
ret
icebp
xchg
cld
movsb
xchg
pop
xor
pop
loopne
jmp
add
inc
fdivr
push
push
enter
pop
and
mov
cwtl
addr16
jb
iret
test
inc
dec
xor
mov
jns
pushf
out
cmp
sar
sahf
test
cmp
jno
jo
jne
sahf
xlat
popa
mov
test
pop
push
sbb
mov
dec
pop
inc
cmc
inc
cld
sbb
hlt
cmp
sbb
jns
daa
jle
inc
mov
sub
xchg
inc
xor
leave
push
dec
mov
imul
dec
cmp
xor
jne
mov
xchg
cmpsl
pop
mov
out
pop
sbb
test
dec
mov
jae
jge
and
aas
jbe
jp
cmp
ret
or
jo
and
or
inc
pop
aam
add
adc
xchg
cmpsl
dec
adc
push
push
pop
lret
lcall
push
add
adc
lods
sbb
dec
lea
leave
pop
not
dec
xchg
fs
jno,pn
lcall
ret
xchg
dec
loop
pop
sahf
arpl
fdivs
jl
mov
push
pop
les
mov
xor
das
jo
dec
test
repz
jnp
sbb
xchg
scas
xchg
rorb
negl
mov
rcr
cwtl
mov
mov
pop
movsb
mov
pop
xchg
fnstenv
call
stc
jb
mov
xor
aad
out
cld
call
iret
cmp
shll
adc
test
lret
pop
fwait
mov
lods
dec
jp
xchg
shll
int3
push
sub
sbb
sbb
lock
xchg
pushf
std
sti
mov
pushf
je
mov
cmp
xchg
stos
in
in
pushf
data16
fstl
sub
xor
scas
in
loop
ret
xor
xchg
imul
mov
cmp
adc
jg
enter
or
add
jecxz
sub
xor
testw
mov
fs
mov
insl
clc
outsl
sbb
xchg
clc
mov
mov
es
add
aam
push
cmp
sub
dec
cltd
pop
and
xor
add
sbb
adc
imul
pushf
test
sti
jl
sti
insb
and
mov
fdiv
cmp
loopne
out
rcrl
xchg
mov
xor
xlat
xor
push
jl,pn
add
fcomp
sbb
jb
mov
ljmp
lret
out
or
add
cmp
cltd
iret
mov
sbb
push
not
out
mov
imul
cmp
scas
inc
pop
cmp
decb
arpl
cmp
push
adc
xor
xchg
mov
call
mov
add
sbb
xchg
push
ficoml
stos
leave
ja
or
xchg
mov
mov
leave
fistpll
testb
cmp
je
incl
and
in
outsl
mov
fwait
cmp
shlb
lret
mov
mov
mov
xchg
ror
iret
cmp
testl
mov
and
mov
push
gs
pop
inc
fldl
pop
mov
imul
cmp
jle
das
inc
dec
pop
pop
fstps
lret
fucomip
loope
fsub
pop
in
sbb
mov
seto
mov
xchg
dec
idivb
dec
in
jae
jb
adc
in
rolb
push
push
test
cmp
push
les
sbb
mov
inc
je
imul
pop
xor
xor
les
arpl
xor
negl
pop
lret
cltd
pushf
jno
js
lcall
sub
cmp
jne
cld
xor
jge
out
aad
shl
cld
popf
or
adc
xchg
mov
mov
mov
or
leave
movsb
mov
add
xor
dec
nop
gs
ds
imul
cmp
jp
inc
in
pop
add
ss
and
movsb
js
pop
push
mov
lods
daa
aad
rolb
jecxz
jl
fs
shr
jno
xchg
rorb
sub
pop
jns
add
lock
xor
mov
pop
lods
clc
and
mov
stos
clc
outsl
mov
into
or
bsf
stos
inc
scas
xlat
jle
push
mov
negl
adc
mov
inc
pop
cld
subb
mov
in
loopne
lds
adc
lods
rcrb
sbb
or
sub
xor
in
cmp
mov
shlb
cltd
jno
gs
inc
scas
movsl
roll
or
and
pop
inc
add
mov
rolb
aad
ret
mov
mov
imul
cs
mov
jmp
dec
adc
and
dec
into
aam
sub
movsl
xor
dec
dec
inc
and
lods
das
dec
pop
mov
sub
add
das
push
sbbl
and
and
adc
pusha
lods
das
adc
sbb
inc
test
dec
int3
add
out
call
mov
fucomip
mov
leave
xchg
cmp
leave
xor
and
pop
xor
test
into
and
xlat
in
or
loope
mov
xor
xor
in
jp
mov
ss
fldcw
sti
mov
jb
fcomip
lea
lret
adc
xor
adc
gs
xchg
add
aas
mov
out
leave
jae
xchg
cmp
les
dec
mov
and
jns
aad
inc
daa
adc
xor
inc
jne
mov
push
cmc
push
call
adc
or
mov
dec
in
pop
gs
push
dec
dec
popa
mov
lods
repnz
hlt
and
push
adc
adc
sub
xchg
lea
lcall
push
movsb
or
dec
lods
adc
jbe
mov
xchg
dec
repz
jge
cli
es
stc
inc
dec
xchg
lcall
hlt
sub
lcall
dec
cld
add
push
ret
cmp
sub
or
ljmp
push
inc
or
sbb
add
sbb
and
clc
ljmp
dec
repz
inc
mov
cmc
test
jmp
xor
or
in
adcb
xor
jae
lods
movsb
add
scas
lock
mov
jl
aam
lret
xchg
or
jl
rorl
mov
mov
int
jno
sbbl
add
mov
and
loop
or
and
xor
push
imul
cmpb
mov
and
stc
test
js
cmpsb
aaa
xchg
pop
icebp
lret
mov
xchg
in
test
inc
sbb
lcall
cmp
push
lret
dec
add
bound
adc
dec
fdivl
sar
cmpsb
xor
cmpsl
stc
ret
mov
mov
test
adc
mov
push
jge
outsl
push
pop
mov
movsb
loope,pn
pop
sub
push
mov
icebp
daa
xchg
pop
mov
dec
outsb
fld
mov
in
lret
and
fisubs
mov
xchg
pusha
xor
pusha
add
mov
sti
sbb
shr
add
add
xchg
in
call
cmp
push
add
pop
enter
test
mov
xchg
pop
jg
dec
adc
out
dec
jno
ds
shl
movsl
lret
fsubs
imul
popf
lret
or
mov
iret
fldcw
shll
shl
test
mov
pop
adc
lcall
out
test
pushf
enter
test
and
add
sub
mulb
lods
cmpb
dec
sub
pushf
mov
inc
mov
fisubrl
dec
mov
mov
iret
sahf
cmp
ret
dec
imulb
out
ljmp
push
lods
cmp
mov
mov
jo
adc
popf
cs
add
pop
xchg
inc
test
dec
lock
icebp
adc
test
mov
dec
push
adc
jb
mov
out
aad
aam
sahf
xchg
nop
pop
divb
add
shrb
bound
nop
mov
testb
fstpl
js
jnp
hlt
les
js
mov
mov
stc
cmc
les
adc
push
mov
repnz
insl
jnp
stos
loopne
das
push
dec
movsb
dec
push
pop
pop
pop
test
xchg
pop
cli
xchg
mov
into
roll
insb
dec
fs
or
cwtl
ds
inc
jecxz
xchg
or
cmpsb
sbb
push
mov
sbb
ret
pop
rcr
orl
mov
pop
sub
pop
imul
cmc
and
sub
xorb
call
push
mov
int
mov
cwtl
inc
xlat
add
sbb
bound
or
jge
xlat
dec
sbb
jne
negb
cmp
jo
out
mov
out
neg
mov
sbb
aad
mov
mov
movsb
rclb
or
mov
xor
daa
sbbl
or
adc
or
sub
aas
jmp
or
cmpsl
jl
insb
loope
icebp
jecxz
add
sbb
or
jno
test
xor
jnp
dec
les
cwtl
je
cmp
imul
stc
cli
dec
inc
mov
xor
mov
cmpsb
cmp
jecxz
push
rcl
xor
xor
fwait
or
push
sbb
and
cmpsl
jg
aam
sub
adc
adc
and
mov
decl
jecxz
xlat
jne
bound
lahf
out
sbb
sbb
int3
mov
movsb
cmp
or
aaa
test
pop
test
xor
mov
out
cli
adc
inc
jmp
test
gs
in
ja
rcll
xchg
adc
cwtl
adc
test
mov
mov
adc
lock
clc
adc
add
sub
das
scas
mov
jecxz
sbb
cli
je
jbe
aad
and
lock
test
es
jno
clc
mov
popa
push
adc
sbb
mov
mov
xchg
pop
pop
or
outsb
mov
adc
or
and
xchg
pop
mov
in
push
push
fisubrl
sub
fisubl
dec
aam
sti
mov
cmpsl
stos
insb
cmp
hlt
dec
imul
dec
sti
loope
mov
inc
daa
mov
mov
sbb
jns
push
jle
pop
divl
ja
lret
aas
lcall
ret
movsl
inc
inc
stos
dec
repz
jecxz
stos
imul
fsubrs
test
loope
out
sub
sub
daa
leave
int
xor
or
lock
subl
push
out
sbb
xor
or
sub
push
js
mov
cs
push
hlt
negl
in
cmp
jns
loop
push
fs
add
mov
pop
iret
or
inc
lds
dec
xchg
jg
sti
icebp
mov
int3
jle
dec
mov
aas
ja
push
push
js
ss
push
inc
mov
fstps
ljmp
fildll
js
adc
dec
add
jecxz
mov
mov
outsl
out
jbe
sbb
sub
mov
shrl
fdivrs
sub
mov
cmp
pop
jl
loop
scas
mov
mov
mov
add
inc
adc
cs
and
cmp
mov
jmp
call
sarl
loope
push
cmpsb
js
test
shll
xor
xor
dec
adc
ds
cmp
pop
sub
popf
sbb
sbb
jp
hlt
loope
mov
push
jno
and
stos
in
lods
mov
int
test
dec
push
into
aaa
xorl
sbb
cmp
outsb
and
xor
movsl
xchg
add
out
inc
or
mov
lods
stos
aas
push
roll
xchg
sti
js
and
out
cltd
test
outsb
xchg
fisubrl
inc
inc
sub
pop
mov
out
dec
pop
xor
mov
xor
movsb
add
fwait
or
repz
aad
out
sbb
aaa
repnz
movsb
lea
iret
add
in
adcb
pop
mov
pop
std
ss
xchg
imul
std
xchg
xchg
or
push
mov
in
xchg
repz
stos
push
mov
insb
xor
ret
jbe
pusha
in
mov
inc
mov
subb
popf
add
lds
stos
decb
and
mov
ljmp
mov
idiv
rcl
ss
xchg
idivl
mov
out
inc
aad
mov
loop
or
add
and
mov
sub
pop
js
sbb
push
add
mov
jnp
je
adc
test
hlt
test
cmp
inc
dec
inc
ja
cmpsl
lock
push
js
pop
mov
mov
mov
dec
inc
lock
pop
pop
or
sahf
jb
inc
repnz
outsb
shll
popf
pop
xor
out
adc
loop
xchg
mov
or
adc
pop
ffreep
push
push
stc
sub
jne
das
pop
mov
or
test
movsl
pop
test
push
mov
adc
daa
mov
fsts
outsb
dec
cltd
cwtl
ds
or
mov
cmp
and
fisttpll
aam
movsl
ret
loop
arpl
cmpsl
mov
loopne
jns
mov
nop
cmp
daa
stos
inc
inc
dec
cmc
dec
push
xorl
push
add
cmc
lods
dec
mov
jo
fsubl
fcoml
iret
cmp
or
bound
into
adc
and
inc
push
cmp
rorl
mov
xorl
xor
push
nop
adc
mov
in
or
shl
pop
movsb
cmp
lcall
nop
pusha
sbb
sbb
or
rcrl
lret
in
or
paddw
stos
inc
lock
daa
popa
movsb
lock
xchg
or
xchg
and
loopne
rolb
jns
jmp
jo
arpl
xchg
out
add
inc
pop
and
in
push
out
xchg
loopne
lret
out
scas
fwait
push
push
and
xor
movsl
xchg
sub
ja
push
shll
enter
sti
addb
inc
outsb
arpl
enter
pusha
mov
loopne
insl
push
fs
cmc
sbb
inc
out
push
and
pop
mov
lahf
loop
loope
inc
pop
lret
sub
jnp
aaa
insb
sub
adc
cmpsl
xchg
sub
fists
dec
outsl
in
push
xchg
sti
sub
and
add
sahf
mov
inc
xor
clc
scas
cwtl
inc
dec
decb
in
icebp
sbbb
mov
or
sub
mov
add
adc
cli
daa
mov
add
jg
xchg
push
jne
aam
inc
dec
dec
jecxz
icebp
sbb
mov
jnp
pusha
lds
aad
push
test
ret
int
dec
orb
rcrl
xor
xchg
mov
or
mov
adc
or
xor
jbe
inc
out
push
push
movsl
mov
push
mov
push
int3
movsb
mov
xor
dec
lret
cmpsl
xlat
lret
repnz
jns
movlps
js
xor
loopne
sub
mov
inc
dec
and
aaa
xchg
adc
sahf
orl
mov
xchg
dec
or
cmpsb
iret
xorb
inc
push
mov
int3
ds
icebp
pop
vpshufd
rorl
add
push
dec
cmpsl
imul
scas
je
adc
pop
sub
insb
rorb
sarl
lahf
dec
repnz
inc
sub
shll
je
stos
stos
and
xchg
and
pop
inc
fistpll
jne
xor
das
xor
adc
rclb
loopne
mov
gs
orl
and
repz
sub
add
sub
pop
mov
pop
int3
xchg
sub
cmp
loope
sub
pop
in
or
push
aam
call
cld
fcmove
cmp
lods
and
enter
mov
cmp
rorb
lods
sub
jle
jo
push
loop
insl
cwtl
and
jae
out
call
xchg
and
mov
shll
push
add
jo
lds
inc
push
int
mov
cmpsb
insl
jb
sub
and
jns
lods
sbb
int
inc
adc
push
inc
scas
cld
pop
pop
push
aad
pusha
pop
fdivs
leave
arpl
pushf
sub
movsl
jl
mov
shll
push
fstpl
sahf
add
ficomps
addr16
rcrl
scas
and
pop
sbb
jle
xor
xchg
test
call
inc
fs
push
into
clc
gs
jecxz
popa
fimull
lret
jp
pop
xor
xor
inc
les
jo
ret
pop
and
sbb
std
push
popa
insb
movsl
mov
aas
mov
xor
loopne
inc
ja
es
stc
or
shll
push
lea
add
iret
add
cmp
cs
pop
imul
mov
mov
outsl
sbb
in
cli
xor
mov
pop
cmp
je
test
fbstp
push
sbb
rclb
push
es
or
jl
mov
or
xchg
inc
inc
inc
ret
imul
or
aaa
pushf
adc
mov
test
pop
dec
ja
and
push
add
adc
xor
dec
in
pusha
lock
fcmovb
aad
ljmp
mov
enter
ret
lcall
adc
cmpsb
and
popf
loopne
loop
cmpsb
aam
aam
out
jecxz
imul
pop
mov
xlat
out
inc
test
sub
sarb
pop
or
imul
jmp
inc
mov
test
push
mov
adc
mov
adc
push
inc
imul
popf
cmp
aaa
xchg
lcall
outsl
loopne
jnp
insb
fldt
jge
mov
ret
inc
fidivs
pop
out
or
out
sbb
sbb
aad
ljmp
sub
xor
and
mov
push
popa
dec
dec
mov
jno
aad
and
add
clc
inc
pop
outsb
aaa
sbb
lret
mov
jl
dec
dec
scas
out
nop
jge
sbb
notb
xor
add
pop
fs
js
inc
pusha
icebp
mov
dec
lds
mov
jns
aad
or
sar
xor
mov
cmp
jmp
mov
xchg
jge
mov
imul
mov
fsub
push
rcr
lock
test
stc
outsb
add
cmp
aad
gs
push
mov
outsb
adc
dec
mull
push
sub
mov
lea
sti
adc
int
cmpsb
icebp
int3
jne
sbb
sbb
lds
cmp
mov
inc
jns
mov
push
pop
pop
sbb
lahf
push
push
scas
shlb
aad
inc
adc
and
and
add
shl
lock
pop
movsl
xor
hlt
cltd
nop
sub
mov
insl
mov
mov
jg
mov
mov
adc
xchg
movsl
push
sub
dec
jg
jbe
mov
sbb
xchg
cwtl
les
mov
mov
cmp
scas
jo
jbe
xor
push
mov
add
icebp
rcrl
pop
insb
dec
cld
pop
sub
idiv
fs
mov
imul
fimuls
sub
pop
cmp
or
aas
mov
push
xchg
mov
pushf
jmp
fsts
cmp
aad
push
sbb
push
xor
ss
xchg
or
xchg
xor
test
dec
lret
mov
shlb
mov
lret
jb
mov
cmp
jecxz
mov
dec
ret
stos
sbb
pushl
mov
loop
sbb
jge
adc
mov
loopne
xorb
push
pop
adc
or
mov
or
mov
cwtl
rcl
xor
fwait
inc
sub
inc
sbb
imul
ljmp
js
xchg
add
sbb
loope
cltd
pusha
test
sub
rorl
mov
shll
cmp
ret
outsb
jecxz
xor
jo
in
cmp
test
adc
adc
adc
add
push
cmpsl
movsl
add
mov
jmp
push
adc
sbb
xchg
repnz
je
cs
fiadds
inc
ds
or
lds
cmp
cmp
xchg
adc
cmp
iret
repz
push
ja
xchg
pop
and
repz
inc
pop
mov
outsl
int3
push
outsb
cwtl
imul
xor
out
stos
pusha
scas
outsl
lock
outsb
xchg
sub
fmul
bsr
addr16
add
vmread
push
inc
mov
popa
cmpl
jl
sbb
push
scas
andb
orb
movsb
jbe
ss
popa
sub
decl
cli
dec
jle
sub
rorb
sbbb
or
repnz
das
outsb
lret
cld
push
or
stc
and
mov
mov
sub
orl
sub
dec
dec
lods
js
mov
dec
xchg
hlt
push
rcrb
pop
mov
insb
sbb
cmp
push
scas
sbb
scas
sti
mov
mov
pop
fyl2x
xchg
pop
inc
inc
sbb
or
insl
out
das
repz
and
xchg
gs
mov
scas
mov
fwait
aas
xchg
test
aaa
xor
aad
gs
pop
mulps
or
pop
leave
inc
mov
pop
shll
shlb
mov
xchg
js
in
cmpsb
push
cmp
xchg
xor
and
lret
xor
add
repnz
adc
pop
push
pop
sub
cwtl
push
lock
cmp
or
loope
jge
push
ret
fisubs
mov
shlb
adc
mov
aad
stos
push
adc
sahf
insb
xchg
outsl
hlt
mov
inc
xchg
lods
mov
pop
gs
in
inc
mov
loopne
movsl
into
mov
and
jbe
sbb
xor
inc
imul
mov
and
sub
aas
mov
ss
ljmp
js
push
stos
pop
sub
call
and
sub
sub
fstpl
xchg
leave
lods
mov
add
xlat
xor
xchg
sbb
sti
or
dec
fnstenv
push
outsl
imul
aad
out
aaa
out
insb
sub
mov
push
mov
fistps
xlat
sub
adc
mov
loop
sbb
imul
cmp
cmp
ds
pop
xchg
mov
or
mov
mov
fbstp
push
ret
mov
inc
shlb
lret
and
add
testb
mov
call
ljmp
cmpsb
adc
or
inc
das
ror
subl
jmp
pusha
stc
adc
dec
ds
add
ljmp
push
hlt
stc
or
sbb
mov
add
scas
dec
sbb
and
icebp
push
dec
mov
or
lahf
mov
bound
repnz
mov
popf
aam
add
jne
rcrb
test
dec
mov
adc
adc
xor
cmp
xor
sbb
add
movsl
push
sub
jmp
push
in
add
es
pop
push
cmpsb
jb
or
mov
and
inc
inc
jmp
jmp
pop
in
imul
in
orb
out
mov
pop
xor
into
pop
mov
pop
and
fstpt
imul
mov
rcll
test
push
xor
xor
adc
arpl
inc
mov
inc
push
lods
test
or
mov
xor
cmp
xor
orb
xchg
mov
pop
lahf
adc
data16
sti
mov
repz
mov
orps
jecxz
dec
jecxz
push
push
int3
push
repz
lods
mov
pop
test
cli
call
mov
push
xor
repnz
inc
cmp
sbb
jl
ret
outsb
push
sahf
add
rorb
pop
mov
cli
cmp
adc
test
das
fisubs
pushf
and
into
aam
in
xor
mul
repz
cwtl
enter
pop
mov
cmpsb
push
lods
xor
shrb
int
repz
fisttpl
mov
adc
shll
cmpsb
or
aas
and
xchg
mov
push
pop
jae
sti
sbb
js
xchg
inc
stos
in
xchg
out
lcall
ljmp
repz
jbe
aaa
sbb
xchg
test
cwtl
jecxz
cli
xchg
in
jmp
sbb
in
mov
outsb
outsl
push
xor
test
xchg
jns
xor
jle
dec
push
sahf
adc
jb
and
mov
fsubrl
or
cmpl
int
pop
scas
lock
je
andl
jnp
jae
push
mov
xor
shlb
cli
insl
cmc
js
and
sbb
mov
out
dec
jb
mov
pop
insl
movsb
and
or
push
into
mov
mov
sbb
pushf
add
or
mov
pop
loopne
outsl
push
out
jns
pushf
fwait
rorl
xor
and
mov
pop
dec
daa
inc
in
xchg
cmp
add
push
arpl
arpl
fstl
psubsw
in
xchg
pop
call
push
add
xchg
test
outsb
push
enter
sbb
mov
lds
scas
lods
inc
in
jae
cli
test
testb
ret
lret
push
mov
push
sub
adc
aad
xlat
mov
pop
arpl
cltd
leave
dec
jb
cmpsb
test
roll
xor
adc
mov
test
push
pushf
dec
in
xlat
les
push
cmpsb
xor
fisubrs
leave
lret
push
movb
leave
shrl
push
gs
xor
into
lret
loopne
mov
mov
ljmp
cmp
and
in
lahf
out
inc
push
and
pop
dec
shlb
cld
adc
xchg
mov
xor
dec
dec
push
test
xorl
xchg
es
cs
xor
outsl
cmp
push
stc
imulb
inc
lret
lds
sbb
lret
xchg
mov
shlb
jo
push
inc
pop
imul
xor
es
out
int
out
lcall
aam
int3
mov
sbb
jg
inc
neg
mov
stc
outsl
jle
int3
insb
negb
insb
fcmovu
xchg
cwtl
into
mov
movsb
jno
mov
fs
ret
es
xchg
xchg
sbb
push
cvtpi2ps
sbb
insl
push
ja
or
mov
add
add
rorb
test
sub
cmp
sbb
jge
inc
mov
dec
stos
shl
xchg
repz
negb
inc
pop
cmp
xchg
push
adc
daa
ds
in
dec
test
cmp
cmp
das
mov
and
stos
jbe
in
mov
mov
fwait
mov
into
adc
clc
xchg
mov
jo,pt
adc
popf
add
xchg
pop
xor
movsl
mov
and
push
xchg
xchg
adc
ret
fldt
jp
dec
pop
lods
inc
cmp
inc
xorb
aaa
insl
out
popf
add
dec
fnstsw
jae
push
push
dec
dec
rorb
test
xchg
outsb
stos
bound
movsl
insb
pop
sbb
push
add
mov
dec
daa
mov
fsubl
icebp
inc
xchg
mov
jmp
cltd
popf
shlb
cmp
hlt
mov
in
hlt
xchg
fst
lods
pop
scas
pop
in
jae
sub
sbb
cmp
in
je
mov
pop
stos
cmp
sbb
lcall
xchg
insl
jl
imul
mov
xchg
xor
sarb
xchg
inc
adc
mov
mov
clc
jnp
add
cmp
pop
cmpsb
imul
cmp
xchg
sbb
rorb
add
mov
sar
loope
mov
ja
lock
or
or
icebp
pop
ret
lahf
sub
movsb
imul
test
adc
sub
jge
lahf
loop
dec
jmp
shrb
jle
fmull
repnz
dec
mov
mov
sahf
pop
aad
sub
pop
add
mov
inc
dec
loope
movsb
movsl
scas
dec
fwait
and
clc
lea
cmp
ret
and
dec
adc
xchg
ja
push
lock
shrl
nop
add
leave
pusha
addb
mov
fucom
inc
filds
mov
lea
pop
cmp
ret
aas
cmp
hlt
pop
and
mov
xchg
test
inc
inc
xor
mov
in
xchg
mov
pop
mov
gs
bound
mov
mov
test
cmp
adc
fst
and
dec
nop
sti
mov
cs
or
pop
out
mov
xchg
std
stos
gs
push
xor
into
cmp
imul
mov
ss
call
xchg
cmp
or
daa
cmpsb
fcmovb
repnz
cmp
and
push
js
test
mov
stc
shlb
pushf
mov
xor
test
mov
sub
cltd
mov
and
pop
fnstcw
arpl
popa
xchg
gs
outsl
mov
loopne
mov
mov
lods
sub
ja
mov
mov
sbb
pop
mov
cmp
ffreep
jg
sbb
nop
movsb
imul
sub
mov
adc
mov
out
add
or
std
addb
stos
bound
cltd
ret
lret
pushf
ja
dec
dec
sub
lds
imulb
cmpsl
xchg
push
loopne
sub
pushf
imul
sub
xlat
add
loop
shlb
out
mov
mov
mov
aad
movsb
je
cmpb
dec
cli
sub
iret
fstl
xor
jg
outsb
sti
dec
ds
int
push
jp
inc
cltd
dec
add
movsl
ss
and
mov
xor
in
icebp
mov
cmp
dec
cmp
ret
pop
push
das
mov
jge
and
sub
inc
mov
cmc
sbb
mov
xchg
push
loope
mov
jo
xchg
jo
xchg
push
idiv
push
lahf
pusha
fwait
push
sub
rcll
int
ss
sbb
xchg
inc
test
mov
imul
mov
jbe
push
mov
aaa
xchg
fdivr
mov
add
out
cmpsl
xchg
lds
or
and
xor
mov
das
push
call
mov
sbb
jno
cmp
jb
pop
inc
mov
jmp
pushf
daa
fidivl
popa
add
test
xchg
ret
mov
shl
sbb
das
inc
aad
sub
dec
insb
cmp
nop
cmp
xchg
mov
scas
lea
lret
xlat
xorl
popa
mov
popl
mov
mov
sub
ret
pop
jecxz
orl
fld
add
leave
add
add
cli
not
jbe
outsb
ljmp
jo
inc
mov
sub
test
mov
dec
jne
pop
xchg
sbb
cs
int3
int3
dec
jne
inc
arpl
push
sar
mov
std
inc
sarl
dec
stc
aam
push
orl
sbb
loope
jle
insb
cmp
fildll
stc
sub
int3
leave
xchg
sub
mov
call
push
pop
dec
pop
push
xchg
xor
loopne
std
imul
push
sub
jb
adc
jp
add
decb
mov
lock
jmp
shlb
call
pop
adc
lock
or
xor
imul
xchg
jg
xlat
or
xor
sub
mov
mov
das
mov
shll
mov
test
push
in
cwtl
lret
shlb
arpl
sub
fsub
mov
or
xchg
pop
jge
fldenv
sub
xchg
mov
repz
add
xchg
jge
and
das
sahf
scas
sub
imul
call
pop
mov
iret
push
lret
pushf
mov
in
dec
popa
adc
adc
hlt
loope
jecxz
push
xchg
in
ss
movsl
arpl
jmp
int
inc
lock
les
dec
xor
sub
cmp
push
jp
mov
jmp
sahf
inc
sahf
iret
ljmp
push
xor
pop
repz
into
clc
leave
sub
mov
xor
xchg
aas
in
and
dec
mov
cmp
pop
into
push
gs
mov
mov
scas
shll
test
cld
sti
xchg
or
xchg
xor
dec
lret
jnp
ds
out
aas
in
xor
stos
adc
jge
push
pop
xchg
jmp
clc
lahf
in
jno
jae
add
adc
dec
negb
mov
mov
mov
sub
fwait
cltd
xchg
insb
pop
dec
sub
fnstenv
mov
ds
jo
into
stos
aam
leave
and
test
xchg
lock
packuswb
lea
dec
pop
push
mov
pop
sbb
and
daa
popa
stos
adc
lahf
cmp
scas
xor
mov
xor
or
add
and
push
xor
sub
ljmp
cmp
movsl
mov
add
sub
fdivr
sub
push
mov
push
pop
nop
mov
ja
mov
dec
test
stos
imul
movsb
into
cld
push
loopw
and
inc
cmp
mov
lock
rcl
inc
enter
in
fwait
pop
cwtl
leave
ret
dec
outsb
shll
arpl
ds
xchg
or
repnz
cmp
push
loopne
outsl
add
cmp
pop
cmp
lods
std
rorl
jnp
stos
mov
ja
push
fdivl
inc
faddl
pop
aas
in
fsub
mov
xor
add
bound
iret
call
nop
and
cmp
jg
aas
adc
push
lret
pop
add
cmp
cs
adc
sarb
xchg
push
cltd
in
je
push
jo
popa
push
and
nop
cmp
adc
jg
roll
js
jb
and
xor
into
cmp
xchg
sti
jnp
int
lods
add
add
mov
sub
call
movsb
rcrb
xchg
fcomp
scas
or
loop
mov
adc
pop
inc
push
push
adc
dec
dec
xchg
aad
inc
ja
cltd
jno
or
sbb
imul
notl
icebp
insl
sub
mov
addl
test
push
imull
mov
pop
ret
mov
and
sbb
sbb
xor
lcall
or
cmp
sahf
or
inc
mov
add
fld
cmpsl
imul
add
adc
mov
loop
andb
loop
aas
into
out
testb
out
jecxz
ss
sti
movsl
adc
ss
loop
cwtl
push
inc
mov
ljmp
cmpsb
mov
jnp
test
mov
xor
dec
adc
loopne
lock
roll
adc
call
sub
adc
or
insb
popa
xor
jnp
sbbl
xor
xor
inc
cs
dec
popf
iret
push
xchg
sub
daa
add
popf
aam
cmp
or
xchg
or
pop
jmp
mov
iret
aas
or
add
add
dec
pop
enter
adc
testb
mov
nop
pop
test
jnp
dec
jbe
push
lods
repz
jo
jle
cmp
ret
jle
adc
dec
mov
jp
push
js
fstpl
jge
adc
push
gs
sbb
jle
test
aam
imul
outsb
pop
in
lret
add
cmc
rorl
nop
fbld
ret
push
test
dec
loope
xchg
icebp
mov
scas
mov
jns
lret
sbb
xchg
inc
add
add
push
dec
xor
jecxz
js
lret
mov
mov
push
dec
cltd
lcall
inc
adc
fs
mov
fwait
mov
xor
mov
jle
inc
mov
pop
imul
es
jno
int
fidivrl
dec
aas
insb
mov
je
cli
mov
sbb
inc
dec
mov
repnz
mov
mov
fimuls
add
push
xor
mov
fdivl
jne
xor
iret
in
in
mov
aaa
sbb
sbb
dec
outsl
pop
test
pushf
inc
jge
pop
negl
out
push
out
mov
rolb
xchg
dec
pop
inc
movsb
std
data16
es
jns
arpl
xchg
icebp
ss
fisubs
aam
push
and
inc
mov
jo
mov
add
outsl
cld
inc
leave
pop
sbb
imul
pushf
pop
cmp
xchg
dec
lock
or
xchg
ljmp
clc
shl
xor
in
jmp
shrl
inc
dec
ja
mulb
or
in
mov
ficompl
cltd
dec
shl
loopne
shrb
sub
ret
mov
inc
lds
scas
xlat
add
stc
mov
loopne
pop
sbb
add
mov
xchg
pop
xchg
lea
add
adc
xor
subb
lods
sbb
sarl
dec
popa
push
pop
push
pop
xorb
inc
jnp
push
cmc
dec
bound
xchg
pop
mov
iret
ret
and
rcr
pusha
jecxz
push
jge
jg
xor
pushf
push
test
jne
popf
stc
jbe
dec
push
inc
mov
or
inc
xlat
mov
mov
dec
les
jno
aaa
int
mov
jnp
cli
mov
int
sub
push
pop
loope
test
or
mov
pop
nop
addr16
out
cli
sub
jg
xor
stc
mov
nop
jne
mov
xchg
rcll
push
lea
rolb
gs
add
je
es
xor
sub
mov
add
pop
mov
shrl
ja
arpl
fwait
adc
and
imulb
inc
mov
pop
arpl
adc
push
imul
pop
and
sbb
sbb
notb
sbb
pop
push
cltd
push
std
fadds
lea
popa
ret
push
and
xchg
push
push
test
sbb
nop
pop
sbb
repz
rcrb
fadds
stos
stos
adc
jmp
mov
ficoml
xchg
jg
es
addr16
xchg
mov
ljmp
aaa
pop
setg
outsl
orl
xchg
mov
fwait
mov
adc
or
adc
pop
or
inc
mov
out
push
ficompl
into
jno
idivb
fsts
or
mov
idivl
mov
jecxz
adc
jbe
test
je
mov
enter
add
pop
lods
loopne
cwtl
shll
sarl
mov
mov
mov
pop
nop
mov
lret
cmp
fisubs
mov
add
imulb
dec
dec
xchg
je
iret
pop
push
pop
mov
or
or
sbb
push
hlt
adc
lret
jecxz
adc
ja
rcr
rclb
mov
imul
cli
mov
cmp
xchg
ret
or
insl
push
and
aaa
sbb
inc
mov
sbb
jle
mov
repnz
cmpb
and
mov
add
outsl
dec
shrb
pushf
jae
push
mov
mov
xorb
pop
sarl
cmpsl
test
adc
lds
stos
mov
cmpb
sub
imul
mov
push
cld
in
push
sbb
mov
mov
pop
jl
adc
hlt
rcrb
sbb
dec
in
push
xor
inc
dec
inc
out
fdivrs
inc
push
inc
mulb
cltd
jg
cmpl
fnstcw
cld
into
and
mov
mov
push
adc
mov
gs
or
mov
mov
or
pop
jmp
lret
clc
cmpsl
rorb
xchg
enter
sar
sahf
cmpsb
popf
sbb
mov
cmpsl
add
movsl
das
cs
jno
pop
push
stc
cld
dec
scas
sub
mov
and
pop
and
mov
lock
fdivl
cmp
push
or
ss
mov
insl
push
jb
and
stos
add
lret
loopne
push
lock
sub
dec
mov
mov
add
xor
jo
cmp
pushl
xchg
fimuls
clc
aaa
or
jge
and
bound
xchg
sbb
mov
dec
adc
sbb
ficoms
cld
aas
rol
jle
dec
mov
out
aaa
std
cmpsl
mov
shlb
sub
loop
mov
mov
das
mov
mov
jae
jbe
js
jns
les
test
xlat
adc
jbe
or
xor
jl
je
ret
test
outsl
call
mov
rcrl
push
sbb
pop
push
and
in
ret
addr16
scas
rorl
sbb
xchg
cmp
add
ret
inc
and
sbb
add
mov
jp
cmp
mov
aaa
sub
jno
mov
and
push
mov
lret
sub
mov
xor
dec
mov
negl
iret
scas
je
cmp
shl
and
cmc
pop
rcrl
cmpsb
in
inc
inc
stos
outsl
rcr
setno
hlt
push
xlat
xorl
xchg
add
jg
sbb
mov
mov
cltd
int
xchg
stos
xor
cmp
lahf
jle
xchg
cmc
pop
xchg
add
daa
outsl
adc
call
in
sbb
out
movl
adc
popf
xchg
xor
cli
mov
test
out
mov
jecxz
cs
lock
inc
jmp
and
negl
and
inc
push
pop
xorb
aam
incl
leave
dec
mov
stos
jb
xor
pusha
loop
rcll
push
mov
rep
mov
or
push
scas
jno
subb
leave
sub
and
stc
sub
repnz
mov
nop
mov
push
cld
cmp
and
jo
rcll
addr16
mov
push
fsubl
lea
sbb
push
and
mov
insb
sahf
sub
mull
push
sub
jbe
aam
arpl
cmp
adcb
push
inc
sbb
dec
adc
scas
push
push
dec
sahf
inc
add
sbb
sbb
jg
aam
xor
jl
push
push
xchg
cwtl
jo
inc
dec
dec
dec
iret
and
mov
push
xchg
scas
repnz
js
sbbl
inc
sub
dec
mov
arpl
dec
idivb
push
pop
lock
add
pop
lahf
mov
out
les
xchg
psubw
pusha
xchg
xchg
loope
jo
pop
int
dec
mov
lret
test
je
out
inc
and
inc
and
jle
inc
push
mov
dec
inc
sbb
aas
imul
and
inc
cmpsb
push
out
fsubl
dec
jns
push
fdivr
inc
xchg
loop
negl
loopne
push
mov
push
test
insl
mov
clc
fisubs
sub
jns
push
sub
out
sbb
pop
adc
mov
fdivrs
and
inc
sub
cmpsb
sub
xchg
mov
js
mov
mov
cltd
adc
testb
and
mov
mov
pop
mov
jnp
outsl
sbb
ss
sub
mov
jo
mov
arpl
add
jle
into
cltd
fs
mov
daa
in
mov
icebp
sbb
dec
lret
jl
cmpsb
pop
adc
push
xor
ss
out
add
dec
das
popf
or
fisttps
or
xchg
xor
or
andl
pop
xor
fbld
jne
loope
cltd
test
gs
negl
mov
outsb
shll
push
mov
in
hlt
aam
push
mov
dec
inc
loop
add
shl
leave
pop
jne
mov
mov
mov
stos
inc
and
cmp
pop
cmpsl
shrl
stos
xchg
mov
sbb
or
out
fsincos
inc
and
ss
frstor
aaa
and
mov
adc
push
jnp
test
scas
ss
rcrl
and
xchg
mov
inc
pop
xor
dec
repnz
mov
pop
xchg
rcll
mov
mov
inc
or
sub
dec
jmp
decb
jb
mov
sub
daa
shlb
test
inc
and
and
movsb
push
mov
out
outsl
jo
sahf
jno
lcall
repz
popf
push
jo
push
push
fcoms
test
out
jne
pusha
push
cmp
daa
jle
fsubrs
jno
sarb
ljmp
xchg
lret
xor
adc
jo
mov
int
fstl
mov
daa
inc
xor
repz
mov
push
pushf
jge
lret
sbb
popw
shll
pop
lea
push
outsb
fdivrl
out
jle
pop
stc
jnp
outsl
push
jg
test
xchg
lcall
ja
push
or
pop
aaa
data16
cld
xor
shl
std
fbld
cmp
or
icebp
xchg
push
mov
push
and
push
in
pop
dec
aam
in
idivl
pop
imul
ss
daa
dec
loopne
pop
testl
je
jo
jle
cmp
sbb
and
dec
mov
das
jb
jge
rorb
push
jl
or
inc
mov
sub
sbb
mov
in
sub
add
jl
js
push
mov
jb
div
mov
insb
mov
mov
sahf
cmpsb
sbb
or
adc
xchg
into
push
daa
dec
add
lds
loope
cmp
out
cld
sub
sub
pop
int3
or
jge
inc
lahf
dec
dec
rcrl
mov
mov
test
orl
das
add
repnz
add
sub
push
sbb
repnz
lcall
ss
pop
pop
lea
cmpsl
fld
sbb
jmp
cmpsb
pop
jge
in
push
mov
imul
hlt
jmp
les
es
sub
inc
repnz
mov
int
mov
mov
push
leave
dec
add
inc
mov
fcomps
mov
mov
xor
pop
addr16
imull
stc
inc
push
xchg
mov
cli
movups
cld
push
cmp
iret
push
pop
sub
pop
pop
test
and
fdivs
lret
ret
notl
cs
movsb
lods
cmc
and
mov
cmp
mov
lahf
imul
cmp
adc
mov
sub
and
outsl
ja
jo
push
or
adc
rcl
mov
cs
repz
sti
jno
mov
mov
jmp
jle
mov
mov
outsl
lahf
mull
enter
sub
mov
rclb
pushf
mov
shl
jns
push
nop
adc
into
mull
ffree
cmp
out
scas
dec
push
dec
mov
lcall
jns
xchg
jno
imul
adc
sub
add
jb
add
add
iret
xchg
iret
xchg
mov
jns
test
ja
mov
fbstp
rcrl
or
shlb
pop
push
inc
inc
rcr
subl
xchg
repz
mov
push
and
lods
leave
daa
aad
add
jl
mov
inc
fiaddl
movsb
sbb
mov
fnsave
ja
pushf
out
in
andl
adc
daa
mov
jecxz
dec
jg
mov
jmp
sbb
stos
jg
jo
inc
or
test
rcrl
push
adc
dec
aas
mov
fcom
jae
and
cmp
sbb
js
iret
xchg
je
addr16
shrb
insl
pop
or
adc
adc
xchg
push
mov
lock
pushf
pop
sub
pop
xchg
insb
mov
fwait
adc
jge
mov
in
cmp
inc
jecxz
loope
mov
jbe
dec
mov
gs
rorl
dec
pop
jmp
iret
test
scas
inc
dec
adc
pop
mov
add
loopne
jp
push
pop
add
lock
scas
push
cmpsl
mov
jae
jne
ljmp
sub
loope
out
fstpl
mov
jnp
hlt
shll
inc
mov
pop
fisttpl
mov
push
frstor
sub
rcr
inc
sub
cmp
inc
adc
mov
nop
jno
and
pop
cwtl
mov
jnp
leave
test
fistpll
xchg
cmp
jg
mov
push
or
ret
in
mov
shll
js
pop
cltd
jp
fs
cmc
pop
mov
adc
push
mov
movsl
pop
jmp
rclb
data16
xor
movsl
lds
mov
jne
lret
mov
ds
jp
mov
and
les
daa
outsb
jg
lods
push
jbe
rolb
dec
add
xchg
icebp
dec
mov
out
inc
mov
pop
out
add
jbe
lret
lret
js
rolb
pop
mov
test
pusha
in
push
mov
fnsave
pop
mov
mov
mov
scas
repz
clc
dec
test
pop
stos
inc
add
daa
add
and
sbb
fxtract
cmp
jb
adc
xchg
js
dec
or
in
insb
mov
popf
loope
fwait
cmp
pop
stos
ret
cmpsl
outsb
sbb
loope
jo
hlt
sbb
mov
xchg
lock
mov
cmp
jne
scas
sbb
stos
cmc
inc
dec
dec
sbb
inc
mov
fisttpll
lahf
sbb
pop
roll
cmp
adc
xor
lock
cwtl
iret
int3
inc
lods
inc
test
mov
mov
imul
cmp
add
pop
pop
xchg
sbbl
xor
cmp
and
push
and
loope
cmp
or
sub
shr
addr16
es
fisttpll
xchg
shlb
mov
lods
lret
jg
pop
imul
mov
fistpll
mov
out
fwait
sti
paddd
andl
push
mov
cwtl
cmc
inc
test
ja
jns
dec
stos
cmpsb
fldt
dec
sbb
movsl
mov
lea
mov
push
lcall
jle
or
xchg
inc
loope
lahf
cmp
mov
xchg
sub
lret
imul
dec
mov
pusha
into
scas
mov
ret
mov
inc
dec
mov
imulb
ja
jp
negl
fstpt
mov
movsl
sbb
iret
hlt
dec
repnz
lds
push
orl
add
xchg
lods
sub
jno
inc
adc
inc
push
inc
push
in
sbb
or
push
push
sahf
cli
dec
loope
mov
inc
jae
aam
push
cmp
out
sbb
arpl
inc
fwait
stc
stos
clc
cli
sti
xchg
add
mov
pop
add
stc
out
add
or
fprem1
pusha
lret
inc
inc
andb
or
mov
stos
addr16
add
mov
jno
movsl
lods
sahf
xchg
pop
nop
add
nop
cmp
and
push
mov
cmpsb
sbb
out
or
imul
push
cmp
aaa
jns
push
jns
das
hlt
xchg
stos
pop
xchg
sub
jne
aad
pop
jl
sbb
pop
xlat
add
dec
daa
xchg
and
rol
add
test
xchg
pop
test
pop
call
sub
xchg
sbb
shlb
dec
popf
gs
test
test
jno
and
push
pop
inc
push
outsl
sub
sarl
ss
adc
popa
inc
cmp
or
xchg
in
addl
mov
out
cli
xchg
ret
mov
sbb
ljmp
xchg
rcrl
sti
mov
mov
jg
push
mov
pusha
inc
insl
popf
xchg
scas
shr
inc
cmp
jmp
jl
mov
fstps
shlb
ljmp
icebp
data16
mov
aad
add
xchg
insb
addl
push
pop
fwait
mov
fistpll
repnz
roll
and
push
mov
fstps
mov
xor
pop
or
shll
arpl
addr16
pop
jl
mov
or
lret
arpl
cmp
add
cmp
fistpl
adc
stos
insl
data16
push
push
lock
jl
aas
mov
adc
pop
mov
mov
imul
rcll
ret
mov
aas
mov
popf
test
fcompl
add
dec
mov
push
jbe
and
sbb
adc
stos
or
subl
jecxz
pop
cmp
xchg
cmp
jg
pop
ffreep
push
fiaddl
das
js
cmpsb
xchg
popa
jl
jbe
sub
cmp
inc
xchg
add
pop
xchg
lahf
sbb
xchg
ret
fisttps
sbb
lds
subl
dec
fld
adc
and
mov
xchg
inc
jb,pt
inc
cmp
hlt
add
xor
push
lret
cmp
fnstenv
cltd
sti
inc
xchg
outsl
hlt
cli
adc
add
lret
and
adcb
les
cmpsb
add
cli
xchg
push
insl
add
fwait
popa
movsl
lods
push
das
xor
ror
cmp
xchg
into
fisttps
adc
je
jg
mov
push
xor
xchg
shll
xor
inc
xchg
enter
repnz
into
jno
cmp
shlb
pop
aad
push
stos
arpl
cmp
pop
decb
int3
pop
mov
bound
and
xchg
fwait
mov
inc
push
push
fstp
lahf
ret
gs
mov
call
pop
add
xor
sahf
pop
cmpsb
fnsave
pop
lods
add
xchg
mov
or
inc
push
sub
imul
xor
es
cmp
inc
hlt
adc
setp
rclb
fwait
data16
daa
xchg
dec
sbb
jge
mov
outsl
int3
adc
iret
dec
add
std
mov
add
fdivrl
push
lea
xchg
sub
pop
dec
jbe
or
push
xchg
fidivrs
dec
sub
sbb
filds
mov
stos
or
rcrb
push
sbbb
pop
push
jo
fstl
or
xor
sbbb
in
pop
ss
inc
push
loopne
fldenv
xor
into
shl
add
andl
lret
dec
pushf
insb
cli
and
ror
dec
cmpsb
shlb
fwait
sbb
std
mov
ja
fwait
lock
mov
hlt
or
jl
pop
adc
jnp
jns
push
cs
xor
popa
loop
rcrl
xorl
sar
shr
loope
cmpsl
jns
and
cld
add
loopne
jg
jne
cmpsb
cltd
ss
sbb
lods
mov
xchg
push
rcll
les
cmp
ret
or
pop
fs
aas
cmpsb
out
subb
ja
mov
dec
inc
popa
push
inc
or
cmpsb
cmp
xchg
push
cmp
cld
pmaxsw
dec
cmp
or
packsswb
xchg
lret
xchg
jo
out
and
sbb
add
shrb
daa
jg
mov
push
sub
scas
mulb
hlt
shrd
loop
jl
push
ds
out
fbld
push
mov
or
dec
lock
int3
rol
cmp
sub
hlt
or
ds
lahf
lds
cs
adc
fsubrl
push
jns
imull
xchg
mov
in
push
adc
mov
push
push
in
std
out
mov
cmpsl
jmp
pushf
fiaddl
add
in
push
adc
xor
sbb
inc
adc
mov
sbb
jmp
sub
cmp
rolb
sub
add
fxch
daa
insl
sub
add
aas
lcall
jnp
adc
fimuls
cmp
nop
sti
ljmp
inc
mov
cwtl
cltd
stos
js
mov
testl
imul
dec
fsubrl
fwait
into
aam
mov
add
mov
jmp
pushf
mov
pop
ret
repnz
jo
into
inc
mov
lret
divb
sahf
sub
sbbb
adcl
mov
lahf
push
mov
shr
mov
or
es
pop
cmp
lods
fisttpll
and
jmp
jg
fiadds
cltd
and
out
jo
imul
xorl
aas
inc
mov
inc
mov
cmp
add
push
sbb
sub
dec
and
inc
das
xchg
negb
lds
jecxz
cwtl
xchg
cmp
lds
add
add
cmp
gs
pop
rcrl
fs
out
test
mov
push
xchg
ljmp
push
pop
fiadds
cmovg
ret
inc
dec
lret
ret
sub
cmp
mov
ja
push
xchg
enter
bound
sahf
movsl
sbb
fimull
hlt
lret
sbb
pop
andl
shr
inc
and
jne
mov
pop
push
jbe
dec
xor
pop
pop
shrb
call
jl
xchg
lret
mov
cmp
in
dec
fisttpl
mov
cli
pop
dec
std
fimull
sub
shll
adc
xchg
or
cltd
inc
xor
push
iret
mov
cltd
imul
mov
jbe
scas
hlt
cmp
fcoms
insl
out
xchg
cli
dec
sbb
aas
mov
rcrb
xchg
out
mov
int3
cmp
pop
sbb
pop
sub
push
stos
pop
sbb
inc
daa
cli
enter
movsl
mov
test
dec
out
lods
inc
jg
sub
pop
xor
roll
iret
lods
sbb
ret
mov
into
mov
fcoms
cmpsl
pop
rcl
lcall
xchg
mov
jp
rdmsr
das
mov
cmpsl
je
shl
ja
std
and
mov
pushl
cld
xor
and
sahf
sbb
sti
mov
and
subl
and
add
cmc
sbb
movsb
movsb
aaa
xlat
stos
sti
add
int
inc
mov
and
xor
xchg
stc
sub
call
ja
cmp
mov
push
or
xchg
jb
movsl
xchg
jb
std
leave
mov
pushf
jmp
pxor
unpckhps
out
repz
ret
xor
outsb
xchg
wrmsr
adc
ret
jle
sub
pop
cli
iret
xchg
jmp
lods
dec
sbb
add
mov
stos
ja
gs
je
mov
loope
mov
adc
mov
and
mov
outsl
pop
out
sub
js
clc
jmp
sbb
cmp
or
adc
pop
dec
out
aas
popl
arpl
in
jb
xchg
pop
adcb
out
jecxz
xchg
add
sarb
das
gs
mov
nop
jle
test
push
mov
xchg
xchg
sub
roll
stc
cltd
sub
hlt
pop
loopne
lret
jmp
stc
insb
push
das
loop
stos
out
daa
jb
mov
aad
ficoms
add
and
fwait
mov
dec
mov
push
and
lea
divb
test
in
movsb
stc
lods
jecxz
cmp
aam
pop
pop
out
lock
fdiv
push
std
push
add
sub
mov
mov
jne
mov
iret
popa
test
lds
jne
mov
push
outsb
sbb
pop
push
pminub
loopne
into
paddusw
jne
dec
jo
add
xor
xor
divb
cli
mov
lea
sub
fwait
mov
and
inc
sub
or
jno
push
jle
rorb
sbb
in
hlt
dec
dec
cmp
inc
test
testl
pop
cli
cltd
sub
sbb
xchg
addr16
sbb
sbb
mov
roll
xor
imul
add
add
dec
bound
inc
xchg
jb
jo
outsb
shll
push
mov
fisubrl
mov
pop
sub
dec
outsb
notb
xor
out
daa
int3
jae
daa
nop
daa
add
nop
mov
mov
push
lods
mov
mov
pop
aas
mov
jo
cmp
lods
pop
aaa
fists
jns
das
pop
push
add
repnz
sbb
int
cltd
sbb
mov
test
sub
imul
sbb
ds
sub
lret
mov
and
pushf
or
or
inc
pop
pop
xchg
fwait
add
lds
pop
insb
dec
mov
and
mov
cmpsl
pusha
push
inc
clc
in
scas
es
outsl
roll
push
sti
add
inc
or
jne
cmp
push
mov
xchg
scas
adc
sbb
jg
mov
je
test
ljmp
pushf
mov
repnz
out
fstps
dec
je
mov
rcl
add
mov
aam
pop
in
add
adc
jle
sub
and
push
sub
jns
jno
outsl
cld
mov
nop
cmpsl
xor
sub
outsl
and
andb
sarl
ret
or
push
pop
js
aaa
mov
je
or
test
push
pop
gs
push
add
jge
cs
push
sbb
lods
mov
lods
and
lret
mov
in
stos
out
adc
ja
lret
test
jb
pop
mov
and
fildll
sti
call
mov
mov
das
fsubrs
jb
pop
cmp
rcrb
xchg
jo
mov
sahf
adc
pushw
hlt
mov
std
loop
xchg
cmpsl
out
mov
fcoms
jmp
or
sbb
and
fcmovnu
push
aam
jle
xchg
outsb
shlb
popf
cltd
fiaddl
jge
adcb
iret
sbb
sbb
push
data16
jns
stc
imul
push
loope
inc
movsb
mov
sti
push
mov
enter
inc
pop
fiaddl
sub
lret
cltd
lea
cmp
push
repz
sub
dec
mov
inc
in
addr16
pusha
mov
push
xchg
xchg
jbe
push
xor
test
sub
test
rolb
sub
xchg
mov
outsl
int3
gs
ljmp
jne
stc
jbe
neg
and
sbb
iret
jo
xor
aam
shlb
adc
xor
lret
sar
lret
hlt
adc
add
mov
enter
shll
pop
pop
shrb
divl
nop
jae
dec
pop
dec
in
insb
xchg
test
js
mov
loopne
sar
arpl
fdiv
sbb
jae
repz
push
enter
fstp
hlt
add
push
cltd
call
cmp
xor
xchg
cwtl
jle
fcoms
out
ret
shrb
adc
mulb
scas
inc
adc
test
mov
xchg
scas
cltd
movsb
xor
leave
add
scas
push
add
call
in
inc
imul
fs
out
lds
test
push
rorb
mov
pop
fcomip
jo
dec
push
jg
cld
sbb
rclb
insb
fs
mov
or
and
inc
repz
add
lret
and
inc
inc
loopne
sub
lret
ljmp
scas
or
xor
adc
call
dec
mov
and
jp
aas
mov
or
rolb
std
mov
ss
jp
push
or
dec
xchg
aaa
adc
stos
mov
popa
shl
adcb
jg
fwait
lcall
stos
or
sti
leave
in
push
push
cld
jp
scas
ds
mov
cli
enter
dec
mov
cmp
popa
xor
pop
insb
cld
mov
lret
fcmovu
cmp
lock
popf
ror
std
jg
ret
shl
dec
mov
movsl
cmp
add
or
ljmp
push
push
icebp
pop
mov
cmpsb
movsl
pop
rorb
inc
push
push
push
lock
test
lods
roll
scas
out
pop
pop
scas
test
sbb
loope
add
sahf
inc
mov
mov
add
cli
ret
add
mov
aas
outsl
vmovhps
cmc
jbe
or
sub
insb
mov
mov
cmp
cmpb
lods
out
and
add
and
jb
lods
pop
xor
aam
pop
aam
mov
fnstenv
inc
cmp
pop
outsl
pop
in
sub
dec
lret
push
push
call
scas
push
or
push
sbb
mov
mov
fwait
ds
and
clc
inc
outsb
popa
test
xor
push
jne
data16
pop
ja
cwtl
sbb
lret
adc
add
push
into
jae
mov
xchg
and
cltd
repz
inc
push
xor
inc
icebp
push
stos
xorl
push
lret
push
mov
adc
jle
movb
and
lret
sub
cmpsl
jge
xchg
es
mov
or
aas
cmp
lret
mov
mov
ss
mov
jne
jbe
cwtl
std
movsb
insb
ljmp
sbb
jo
mov
in
inc
inc
or
mov
jl
jae
xor
cld
cmpsb
loope
in
cmc
shrl
into
xchg
ret
sbb
xchg
lods
mov
sub
pop
xor
stos
leave
mov
dec
pop
xchg
jb
mov
loopne
test
loop
scas
xchg
ret
xor
fs
aas
add
aad
stc
cmpsl
or
dec
pop
inc
and
fcmovnbe
cmp
push
cmp
push
je
xlat
fs
jns
push
dec
jmp
sub
fidivs
rcl
inc
pop
shlb
jge
out
sbb
test
subl
dec
ja
sbb
xor
xchg
stos
and
xor
pop
inc
stos
xor
mov
test
test
push
jns
cld
ja
test
gs
pop
jnp
sbb
fwait
jp
loope
lret
int3
sub
shrl
icebp
cwtl
dec
in
shr
xor
lods
fwait
pop
xchg
or
mov
lea
insb
into
fwait
dec
and
xor
test
mov
push
data16
sbb
pop
pop
xlat
cltd
cli
das
in
in
outsb
cli
in
rep
bound
or
popl
leave
push
xlat
pop
sbb
mov
inc
cli
cmp
push
data16
test
add
rclb
mov
out
adc
add
ss
in
push
sbb
sub
insb
pop
arpl
sarl
icebp
mov
pop
lods
jg
or
pop
insl
cwtl
iret
mov
adc
mov
xor
xor
orb
cmpsl
xor
fcoml
les
xor
or
sbb
mov
lret
les
xchg
mov
fmuls
mul
enter
mov
pushf
jmp
inc
or
iret
mov
fs
in
in
int3
or
pushf
and
idivb
aad
cmc
je
push
sub
aas
shll
mov
pop
xor
in
rolb
aas
inc
mov
cmp
xchg
mov
outsb
shl
mov
pop
push
sub
jp
adc
out
push
test
repnz
dec
std
addb
cmp
jne
ljmp
cld
loope
mov
sbb
test
push
pop
jo
adc
in
sbb
cmp
lds
ret
inc
lods
sbb
ret
xor
add
mov
mov
jecxz
add
and
mov
movsl
fmull
das
jle
mov
pop
or
and
and
push
or
mov
add
or
je
aas
icebp
daa
subb
aaa
out
js
xchg
fisubs
pop
into
test
cmpsl
inc
jb
cld
jge
popa
cs
jecxz
addr16
xchg
mov
adc
sti
mov
add
out
sub
data16
sbb
xchg
and
xchg
pop
cld
stc
pusha
dec
jge
inc
xlat
sub
cmc
sbbl
outsl
pop
data16
fcompl
in
cld
and
or
out
jno
or
adc
fdivrl
insb
sub
cli
dec
or
or
lret
data16
leave
mov
xor
jbe
sub
loop
push
jle
frstor
fucomi
cmp
mov
insb
fidivl
ret
orps
movsb
ds
rorb
push
daa
fiaddl
and
xchg
push
das
push
lock
pushf
in
stc
cmp
or
andb
ficoms
dec
out
pminub
subl
xchg
and
mov
lret
stos
mov
xor
mov
mov
mov
out
mov
jmp
hlt
xchg
inc
mov
xchg
sbb
sbb
cmc
jne
je
nop
out
aas
enter
and
push
push
xchg
push
dec
lods
roll
ror
push
jmp
jae
aam
jecxz
mov
sbb
lcall
jmp
pop
mov
and
mov
cmpsl
imul
and
pop
or
mov
sub
into
fdivrs
push
and
loope
jno
jl
sub
inc
mov
dec
imul
nop
andb
add
pop
call
divl
pushf
xchg
loope
sbb
cli
fwait
mov
sbb
adc
jmp
std
jb
mov
jge
cmpsb
cmp
outsb
push
lds
insl
mov
mov
mov
int3
and
dec
ret
push
iret
sbb
mov
adc
rcrb
orb
mov
mov
jb
lock
xor
leave
mov
adc
fnstsw
imul
sub
cmp
sbb
gs
jge
jecxz
dec
pop
aaa
xchg
mov
pop
cmpsl
cmpsl
push
dec
arpl
xchg
and
cltd
cli
lods
adc
push
repz
into
pop
in
daa
push
rol
cli
lcall
jmp
in
jl
sahf
out
arpl
adc
ret
insb
lret
fimull
jge
adc
aas
push
jae
and
mov
xlat
leave
je
fisubl
jl
sbb
adc
roll
loop
not
movsl
stos
roll
cwtl
stos
jg
fsubrp
cmpl
cmp
mov
mov
ror
mov
mov
arpl
add
fxch
inc
adcb
popa
dec
push
push
and
imul
fsubl
lds
loope
sub
mov
sbb
loope
imul
xor
in
repnz
lcall
mov
jae
aam
sub
and
pop
mov
inc
mov
pusha
cld
add
pusha
cmpsl
insl
es
mov
sbb
aad
fmull
and
xor
pop
mov
add
cmp
xor
sahf
lock
mov
loope
inc
mov
inc
cmp
adc
andb
lret
push
or
das
xor
mov
add
adc
pop
push
dec
ror
inc
push
rolb
and
sub
mov
adc
cmpsb
xor
sbb
pop
into
jp
push
mov
and
cmp
jecxz
push
scas
int
jb
xor
and
iret
xlat
or
cmc
inc
xor
insl
push
xor
or
mov
daa
add
lret
mov
inc
dec
out
mov
lret
sbb
fcoms
push
inc
js
dec
popa
adc
sub
add
ja
or
dec
mov
iret
and
lds
data16
roll
iret
cmp
cmp
ret
cmpsl
push
outsl
mov
nop
mov
cmp
sbb
jp
lcall
jb
and
movsl
adc
jmp
stos
mov
sti
sub
not
fs
xor
xchg
mov
and
push
pop
enter
xor
cwtl
adc
outsl
jnp
fwait
and
pop
inc
add
mov
test
sbb
sub
daa
js
mov
jne
pop
add
int
adc
adc
in
ds
xchg
pop
cli
sub
and
mov
aad
scas
sub
mov
js
sbb
add
xchg
insb
bnd
lret
jbe
jb
mov
dec
stc
adcl
adcl
fneni(8087
call
das
int3
xchg
push
mov
out
fisubl
lret
cmp
push
jge
sbb
cltd
lcall
ret
test
adc
push
xor
pop
jl
lock
mov
inc
jecxz
push
cmc
loop
nop
loop
cmp
jnp
sbb
scas
xor
loopne
fisubs
sbb
out
outsl
ja
xor
pop
and
arpl
mov
jle
or
scas
mov
cmc
ds
fs
mov
sub
push
nop
es
mov
in
xor
test
sub
push
fldl
or
add
sahf
fwait
mull
sbb
cmp
lret
scas
mov
sbb
jl
in
lds
xchg
jns
out
bound
bswap
adc
out
nop
js
jp
xchg
or
outsb
jle
xchg
pop
cmp
or
or
in
pop
jo
fs
out
mov
fidivrl
lock
sub
repz
mov
lcall
popa
sub
pop
into
sarb
inc
movsb
test
jbe
dec
js
inc
popf
ljmp
sti
fmull
stos
mov
loope
push
jl
stos
arpl
pmaxsw
sub
inc
xor
cmp
cmp
inc
out
xchg
cs
repz
outsl
repnz
test
jecxz
mov
loopne,pn
mov
xor
arpl
jo
jmp
inc
pop
and
jo
fucomp
adc
jge
inc
std
jmp
sbb
lds
jl
dec
push
daa
out
cmpsl
arpl
jmp
lcall
test
test
rolb
jbe
cltd
popa
add
int3
pop
out
shr
add
push
mov
js
ljmp
stc
mov
fs
and
scas
sbb
xchg
pop
mov
roll
das
mov
push
popf
addr16
mov
iret
adc
lods
imul
mov
jno
adc
xor
or
or
sbb
jae
ret
push
jecxz,pn
dec
fmuls
ret
sahf
das
and
jg
jge
push
mov
or
lock
add
lcall
adc
push
adc
idiv
lahf
add
mov
pop
mov
add
mov
sbb
adc
sub
jb
sbb
test
cmp
jno
addb
inc
shll
push
shrl
pop
test
push
mov
cli
jnp
imull
and
out
pusha
nop
xchg
test
sarl
popf
sbb
out
iret
mov
cmp
pop
jae
jg
adc
or
pop
mov
sbb
mov
mov
or
clc
inc
jno
in
jbe
or
push
cltd
and
in
cmc
clc
and
mov
fs
xchg
adc
out
inc
mov
push
bound
pop
iret
ja
push
dec
xor
sub
mov
cmpsb
fdivs
ror
jne
rclb
jmp
stc
mov
mov
addl
jns
out
mov
jp
jbe
dec
or
inc
push
mov
int
or
jle
and
cmp
xlat
fcomps
hlt
shrb
dec
jge
cmpsb
cltd
ss
js
std
push
cmp
inc
mov
push
pushf
mov
jo
jle
xor
fistpll
enter
push
mov
leave
lahf
or
cmpsl
insb
adc
test
xor
imul
mov
or
jmp
pop
decb
and
icebp
out
in
xor
mov
xor
dec
jnp
fstpt
nop
sbb
ljmp
jecxz
cltd
mov
stc
rclb
in
inc
aam
or
movsb
mov
int3
aam
in
divb
and
xchg
xchg
push
push
in
mov
outsl
fsubrp
sub
xor
or
cmp
push
cmp
bswap
push
jbe
cmpsb
lcall
scas
add
lret
jne
lock
aad
shl
icebp
mov
fdiv
dec
lcall
or
pop
sub
fidivrl
adc
js
prefetchwt1
jne
js
add
ljmp
dec
loopne
cmp
addr16
xor
and
sbb
fisubrs
ds
inc
into
cmp
mov
popa
fneni(8087
scas
push
jle
mov
fldenv
push
lods
std
scas
aas
sbb
adc
mov
cmc
mov
gs
mov
inc
jbe
and
testb
mov
pop
aam
arpl
int3
cmpsb
mov
push
sbb
popa
in
lret
call
jne
jp
sub
fimull
xchg
daa
push
pop
dec
jne
push
int
dec
mov
and
sbb
test
mov
imul
dec
test
xor
push
aas
lret
xchg
fnsave
xlat
dec
cmc
arpl
test
cmp
pusha
lods
mov
mov
shll
inc
xchg
sub
cli
cli
repnz
mov
out
leave
push
fldt
add
add
test
sbb
dec
xor
jge
add
cmp
push
je
cld
scas
mov
xchg
ljmp
push
adc
mov
div
cwtl
loopne
or
and
xchg
iret
mov
test
out
xchg
jmp
cmpsl
test
sub
out
fnstenv
mov
orl
inc
sub
push
mov
mov
cld
dec
lret
mov
push
pushf
lcall
movsl
mov
repz
sub
dec
fs
test
mov
jne
test
out
xchg
and
jg
ret
dec
mov
sbb
fmull
and
or
push
stc
xlat
scas
daa
outsl
sub
mov
lahf
rcrl
xor
pushf
pop
rcll
sbb
mov
jnp
scas
cmc
xchg
aaa
mov
mov
gs
add
inc
pop
testl
aaa
add
mov
fcoms
mov
sbb
pop
pop
lea
jae
test
xchg
push
xchg
fcoms
icebp
or
repz
mov
lods
dec
insl
iret
mov
mov
jbe
in
add
dec
sub
adcl
pop
xor
fwait
pop
dec
adc
movb
js
adc
push
shl
icebp
aas
sbb
jo
dec
shlb
or
push
daa
call
xlat
jp
data16
adc
xor
cld
pop
jge
sbb
adc
jo
sbb
dec
loop
fucomip
nop
insb
out
pcmpeqw
movsb
push
mov
push
push
xorb
and
or
fnstenv
test
sbb
cwtl
dec
inc
jo
shl
idivl
sub
insl
jecxz
jb
or
mov
movsl
pushf
clc
sub
or
out
sti
cs
adc
jl
lahf
adc
lcall
int
push
lods
mov
mov
adc
add
dec
xchg
inc
jp
les
into
sbb
dec
and
ficompl
push
negb
xchg
into
adc
sub
lock
aam
fwait
shl
insb
jl
or
subl
dec
jle
sbb
mov
xor
adc
pop
inc
mov
inc
push
sbb
jmp
xchg
sahf
in
cmpsl
outsl
sbb
jl
jo
inc
jge
loopne
aad
cltd
gs
outsl
adc
adc
mov
sub
inc
or
jbe
inc
iret
sub
xorl
jo
popf
or
jns
cmp
push
push
pop
jg
pusha
sub
xor
sti
jg
mov
es
push
or
sahf
aad
dec
mov
mov
lock
pop
fcmovbe
mov
cltd
sbb
sbbb
bound
es
scas
jb
mov
test
aas
lods
out
add
fcomip
dec
sbb
mov
push
inc
pop
cwtl
jns
aam
push
jl
pop
nop
mov
push
mov
sbbb
test
cmpsb
sbb
leave
pop
adc
call
mov
scas
pop
aam
clc
sub
cmpsb
xlat
pop
inc
mov
jge
int3
mov
mov
and
es
jne
jno
dec
sub
xorl
test
repz
add
ret
pop
test
xor
in
jle
xchg
fs
inc
push
icebp
sub
adc
or
test
add
adc
sti
stos
or
pop
adcl
sub
cmp
lock
leave
inc
inc
adc
sub
jecxz
dec
pop
rcrl
call
addr16
fcomip
fld
mov
inc
adc
mov
test
out
loope
loopne
clc
mov
pop
mov
pop
rclb
fisttps
inc
pop
fstpt
daa
xor
std
mov
inc
loope
mov
ficomps
out
aam
sarb
loop
je
mov
push
les
push
add
push
adc
add
ds
out
bound
add
test
fsts
and
icebp
jecxz
add
mov
sahf
daa
lret
notl
inc
nop
jmp
xchg
mov
rolb
inc
sti
test
push
add
cmpsb
mov
insb
push
icebp
jno
jmp
frstor
scas
inc
push
ljmp
sti
out
mov
sti
jnp
dec
mov
xor
add
sbb
js
mov
xchg
lock
test
fisttps
arpl
and
sbb
adc
push
sub
movq
jg
push
lcall
jl
imul
daa
outsb
sbb
lret
inc
sti
mov
add
mov
push
jge
mov
cs
mov
xor
xor
std
mov
sbb
add
sub
lds
ja
in
setnp
cli
mov
add
out
pop
push
sti
mov
int
frstor
sub
aaa
sarl
mov
icebp
loope
rcll
jb
out
xor
jno
dec
adcb
and
popf
xchg
dec
insb
in
xor
cmp
stos
scas
daa
lret
push
pop
sub
jg
shll
addr16
push
sbb
or
ret
cmpl
inc
xchg
pop
inc
jmp
xchg
jecxz
and
int
in
lds
outsb
movsl
insb
dec
das
cmp
enter
adc
cmpl
insl
jp
sarl
cmp
dec
enter
xlat
add
call
and
and
aam
cmpsb
jge
es
icebp
hlt
mov
pop
aad
mov
scas
pop
inc
pop
dec
jg
cltd
imull
imul
mov
and
and
push
add
ret
scas
mov
stos
out
xchg
pushw
pop
xchg
and
mov
jge
in
mov
pusha
jne
push
test
aad
rorb
aas
cmp
dec
push
jl
xor
inc
mov
fwait
pop
leave
pusha
add
add
xor
xor
out
test
or
pop
pmaddwd
cmp
ret
cmpsl
mov
fstpl
je
fsubs
mov
mov
mov
pop
push
push
test
xchg
pop
ret
mov
sub
ret
adc
push
or
and
cmp
inc
xchg
cli
push
ljmp
jo
mov
jge
mov
fwait
pop
cmp
fidivrs
ret
inc
roll
jns
scas
pop
pop
pushf
and
adc
in
subb
sbb
mov
xor
jae
les
push
sbb
fsubr
xchg
xor
icebp
adc
je
cmpsb
scas
cmp
cs
cmp
jge
jg
repz
jmp
push
or
xchg
gs
stos
mov
and
push
cwtl
sub
fs
pop
divps
sar
xchg
lcall
cwtl
or
out
adc
push
pop
or
push
or
imul
bound
insb
or
mov
cld
cmc
cmpsb
test
mov
mov
lahf
add
adc
jmp
pop
lock
mov
test
cmp
cwtl
adc
jb
in
sbb
push
push
hlt
data16
aam
add
xchg
mov
jns
dec
faddl
popf
mov
xor
jp
or
mov
push
scas
cwtl
divl
push
test
mov
daa
mov
xchg
pop
push
outsl
push
cs
call
dec
mov
aad
pop
jg
pop
mov
sub
pop
jns
pop
adc
lods
cli
mov
xchg
or
jns
cltd
cmc
ljmp
dec
mov
iret
push
fwait
push
insl
insl
jbe
pop
les
lock
inc
add
cmpsl
jns
out
insl
xchg
xchg
mov
dec
ficoml
fwait
mov
xor
test
cmpsb
je
stos
adc
push
xchg
push
xchg
sub
enter
xor
jge
adc
push
aad
dec
dec
jecxz
lret
call
xchg
pop
dec
outsl
mov
dec
stos
pop
ja
add
leave
aaa
out
and
cmpsb
lahf
sub
jecxz
pop
pop
add
mov
loopne
ja
sbb
ss
mov
fwait
mov
jae
loopne
cmc
cmp
push
xor
in
js
mov
fwait
mov
out
sahf
cmp
push
cmp
pop
loopne
inc
push
icebp
pop
mov
ss
rcrl
and
adc
add
ljmp
imulb
aad
add
int3
mov
fisubrl
jle
pop
jmp
pop
cmp
jns
shlb
jp
mov
cmp
add
and
mov
push
mov
insl
sub
lods
ljmp
or
and
int3
subl
jl
fisubs
dec
pop
insb
cmp
and
cltd
in
or
add
inc
inc
jle
jo
push
gs
aam
add
mov
ret
stc
xchg
outsb
jno
sarb
mov
nop
fdivrl
xchg
outsl
mov
xchg
rcr
add
push
mov
iret
jnp
pcmpgtw
leave
scas
mov
pop
or
push
fcompl
dec
sub
pop
xchg
xor
pusha
nop
loop
dec
pop
inc
sub
lods
xor
jmp
bound
cltd
push
sub
jns
jno
xor
es
lods
cmp
stc
repz
sbb
inc
push
cmpl
or
subb
arpl
imul
push
in
inc
addr16
jne
jo
in
push
add
int
pop
jle
cmp
rorl
test
inc
popf
je
cmpsb
cmc
daa
or
push
sbb
dec
mov
in
sub
xchg
sbb
jg
sarl
je
rcr
test
jae
popa
aas
lea
jnp
push
xchg
adc
mov
cmp
xchg
mov
je
gs
push
and
xchg
sbb
xor
mov
pop
loope
in
in
pop
inc
mov
lea
mov
pusha
inc
jnp
inc
cmpl
push
dec
test
inc
add
add
or
nop
mov
cmp
xchg
mov
push
ja
sub
jmp
xor
cmp
outsl
arpl
pop
enter
fisubrl
xor
push
cli
mov
sbb
mov
mov
push
xor
sbb
sahf
mov
sbb
adc
push
xchg
push
stos
ljmp
fwait
cmpsl
cli
dec
test
mov
mov
in
aaa
cmpsl
stos
or
sbb
jne
push
xchg
icebp
and
sub
inc
cli
loop,pt
imul
cmp
ja
es
repz
test
push
lret
test
and
push
cmpsb
xchg
out
jmp
in
lret
fsubrs
cli
nop
outsb
mov
pop
pop
or
test
mov
xor
jge
outsl
pop
ret
mov
sbb
in
xchg
jp
decl
out
pushf
in
mov
xor
and
and
push
in
dec
mov
pop
jbe
cmpsl
mov
fildl
xlat
mov
xchg
stos
inc
gs
ja
sti
adc
mov
ffreep
sub
cwtl
mov
in
and
sbb
shlb
shrb
mov
fsub
lods
xor
xchg
inc
adc
lods
testb
scas
loop
inc
pop
insb
add
negb
sahf
mov
and
jns
sub
sahf
cmp
neg
shll
cmpsl
jmp
or
mov
xchg
xchg
ljmp
mov
test
dec
sub
lret
or
mov
js
sarb
ljmp
ss
mov
arpl
pop
add
or
mov
std
add
clc
fisttps
add
daa
inc
sub
mov
and
or
idivl
xor
mov
outsb
jb
push
jle
xor
push
sub
cwtl
cmp
cld
add
xchg
and
pop
aam
lods
iret
jmp
in
aam
and
mov
inc
movsb
cmp
xor
push
cmp
mov
inc
adc
sbb
adc
es
rorl
mov
insb
mov
test
mov
adc
xchg
mov
popa
je
push
loop
mov
les
sub
xor
add
pushf
xchg
je
add
imul
sti
push
imul
cmc
and
xor
inc
into
cld
lcall
addr16
add
xchg
je
push
mov
dec
lods
mov
mov
les
pusha
cmpsl
sbb
dec
inc
xchg
xor
stos
loope
xor
pop
pop
test
xchg
cmpsb
sub
leave
lods
aam
xor
les
in
xchg
jne
jge
pushf
mulb
shrb
mov
pushf
and
sbb
flds
lret
test
push
rcl
xor
movsl
orb
cmpsb
xchg
mov
dec
xor
imul
mov
in
les
jae
pushf
cwtl
jle
dec
push
ljmp
cli
inc
lods
add
fcomi
leave
aas
and
or
jmp
inc
and
outsl
mov
fwait
push
cmc
lea
xor
orl
pop
cmp
push
sbb
xor
dec
frstor
push
sbbb
fcomps
mov
dec
sub
or
jnp
xor
stos
xor
xchg
push
adc
dec
fistps
rolb
das
aad
stc
xchg
cltd
jmp
or
outsb
jecxz
out
icebp
mov
sub
pop
std
xlat
in
cli
mov
fwait
pop
and
mov
lea
cmpsl
or
sbb
imull
icebp
ret
sti
adc
jnp
inc
addb
lods
mov
rolb
mov
jg
mov
jmp
pop
or
mov
add
pop
sahf
jo
add
adc
inc
mov
aad
mov
pop
xor
add
inc
mov
mov
ds
mov
mov
xchg
push
fs
in
cmp
nop
test
pop
stc
push
inc
loope
popf
insb
lcall
add
xchg
mov
int
push
jb
xchg
ror
inc
cmp
pop
mov
push
sbb
stos
roll
cld
imull
xchg
hlt
mov
cwtl
push
cs
cmp
mov
jmp
dec
lock
dec
nop
jmp
shlb
imul
push
rcrb
aas
add
cmovnp
in
imul
or
add
lds
pop
inc
movb
adc
add
dec
arpl
sbb
push
adc
lret
sub
sbb
push
pusha
lahf
std
and
push
sbb
push
or
insl
adc
xchg
inc
add
test
adc
imul
scas
mov
add
push
sbb
mov
aaa
cmpsl
repnz
pusha
std
out
imull
ljmp
cmp
loop
sbb
mov
lock
mov
lret
ljmpw
iret
pop
shr
arpl
mov
sbb
xchg
push
and
adc
add
fbld
lods
lods
push
mov
addl
xor
mov
xchg
xchg
lods
xlat
fists
lods
loopne
jb
sub
testb
sbb
jb
xor
add
and
pop
sbb
dec
dec
pushf
cs
clc
dec
je
sub
pop
push
icebp
stos
jg
mov
sbb
das
loop
in
rcrb
cmp
movsb
sbb
out
mov
push
sarb
pop
push
jp
insb
int3
inc
add
and
outsl
pop
test
mov
sbb
xlat
das
jo
jmp
and
imul
jne
jg
pop
xchg
cwtl
sub
lods
push
pop
sbb
add
sbb
mov
inc
dec
dec
leave
clc
and
loopne
stos
xorb
pop
mov
insb
push
daa
mov
adc
ss
addr16
das
roll
or
ja
inc
jecxz
shrl
mov
jp
out
xor
fsubrl
xor
movsl
lret
inc
pop
xchg
rcl
push
cltd
fcompl
pop
pop
xchg
inc
daa
outsb
push
mov
test
fs
xor
add
stos
add
push
and
lea
sub
adc
arpl
adc
out
xchg
repz
xchg
and
adc
lea
je
stc
das
pop
leave
cs
pop
rcl
out
lods
test
xchg
push
mov
hlt
enter
mov
mov
scas
jns
cmp
dec
sub
roll
out
inc
cmp
in
int
dec
test
fstps
sbbl
dec
ret
sbb
adc
jle
jb
pop
jge
lods
push
cmp
mov
inc
jp
inc
or
or
fdivrl
xor
lcall
xchg
fwait
and
into
push
push
mov
aam
les
xchg
sahf
mov
push
xchg
push
data16
repz
nop
clc
push
lcall
ja
adc
mov
adc
hlt
adc
lret
scas
ret
pop
mov
push
push
test
and
decl
xchg
orb
imul
outsb
jno
js
pop
fwait
into
lahf
jo
sub
ds
mov
rcrb
cmp
jnp
xor
mov
xchg
inc
sbb
pop
popf
pushf
mov
nop
test
dec
shrl
jp
mov
fwait
dec
and
lcall
xchg
fnstsw
cmp
mov
rorl
mov
lcall
bound
sub
js
jo
daa
or
jge
jne
jne
or
sbb
inc
mov
mov
dec
push
mov
jb
fnstsw
mov
sub
dec
rcl
sbb
fwait
in
or
or
jno
rorb
into
jo
add
ja
in
outsb
sub
jo
xchg
xor
xor
lds
mov
push
dec
mov
jg
sub
sbb
push
add
outsb
xchg
jne
out
lock
dec
push
fwait
sub
mov
cld
in
lret
lcall
cli
jne
pushl
jno
shll
movsl
pop
divb
push
aaa
add
sub
sbb
or
and
in
jnp
mov
scas
sub
xchg
jnp
xchg
xchg
and
sub
push
repz
aaa
pop
jb
cmpsl
pusha
dec
iret
xor
or
int
testb
sub
sub
cltd
cmpb
cmp
sbbl
mov
pop
iret
xchg
xorb
rorb
ja
movsb
je
xor
fiadds
mov
cmp
aaa
xor
adc
mov
sub
push
call
xlat
or
or
pop
pop
or
mov
aas
mov
cmp
outsb
add
call
mov
popa
fsubl
mov
in
dec
xchg
lahf
adc
or
xchg
bound
sub
fistpl
jbe
fcompl
ret
or
mov
mov
mov
and
daa
js
cmpsl
pop
scas
push
pop
loop
stc
in
adc
mov
push
add
xbegin
lcall
sbb
ljmp
ja
mov
push
sub
push
xchg
popf
in
popf
sub
out
mov
inc
push
out
sub
lea
outsl
inc
cli
insb
lock
daa
shlb
addr16
lods
in
addl
pop
jne
pushf
jl
dec
ljmp
movsl
mov
loopne
mov
dec
dec
divb
adc
mov
xor
sbb
repz
jle
iret
dec
xchg
ljmp
nop
sub
nop
dec
add
mov
ds
push
add
jns
jbe
mov
cmovge
pop
sti
mov
sahf
ficoml
sbb
inc
or
push
or
sub
adc
ret
sti
test
in
imul
fsubrl
mov
shlb
mov
inc
push
sbb
cmc
push
loop
or
repz
and
jb
int3
and
adc
cwtl
lods
sub
adcl
cld
aas
xchg
aas
push
inc
fs
fisttps
push
stos
rcrb
gs
jle
xchg
or
jp
mov
pop
pusha
mov
into
aaa
xchg
adc
lret
sub
add
jle
in
xchg
leave
bnd
dec
out
mulb
add
cmc
xor
adc
js
iret
rcll
mov
scas
cmpsl
test
jmp
mov
das
xor
inc
mov
test
sub
adc
ficompl
sbb
shll
adc
mov
push
mov
or
jmp
bound
mulb
sbb
daa
mov
jb
jmp
pop
arpl
jle
add
lods
pusha
jecxz
sub
pusha
test
sub
pop
aaa
push
aam
lock
adc
lds
xor
add
xchg
xchg
fcoms
mov
cmp
inc
imull
call
or
push
jne
scas
push
cld
loop
pop
sub
imul
add
add
add
rclb
dec
cmp
lock
rcrb
inc
push
pop
fidivrs
or
and
cmp
mov
loopne
lea
rorl
rcrb
test
outsb
pop
cli
adc
sti
adc
sbb
stc
xchg
imulb
int3
lock
jo
arpl
mov
out
pop
ja
ret
add
jecxz
mov
fstpt
loope
jo
push
and
adc
imul
jle
sub
shr
adc
xor
jecxz
in
xor
int
xchg
xchg
or
adc
jae
pop
push
sub
pop
mov
lea
ret
lret
mov
and
imul
fcmovnbe
mov
adc
lahf
or
clc
cmp
callw
inc
jbe
cmp
in
cmc
dec
mov
mov
mov
scas
fs
rcr
popa
jge
and
jae
fstps
gs
mov
pop
mov
std
dec
and
xchg
out
sbb
rcrl
les
jecxz
xor
stc
sub
rorl
sub
lods
push
fs
mov
add
femms
inc
sti
nop
fistpll
out
xlat
push
ljmp
inc
push
faddp
sahf
xor
sarb
mov
clc
pop
or
in
or
movsl
pop
dec
xchg
bnd
xchg
jmp
and
neg
testl
pop
arpl
out
popa
loopne
xchg
pop
and
scas
cli
pop
adc
pop
mov
clc
idivl
mov
imul
test
mov
and
cmpl
lds
cmp
faddl
push
push
xor
dec
popf
mov
outsl
and
sbb
outsb
call
inc
jle
and
sub
mov
jno
push
aas
cli
fiadds
mov
rol
mov
xchg
inc
jle
and
adc
mov
sub
push
inc
dec
jb
bound
out
popa
jle
pushf
sbb
scas
fisttps
mov
add
insb
jns
lea
jnp
mull
sbb
js
jno
andb
bound
or
xor
movsb
jae
inc
cmp
inc
sbb
cwtl
dec
and
insl
sarb
imul
dec
ss
pop
jp
sub
out
fisubl
stos
jecxz
movsl
dec
jns
stos
cmp
js
lahf
std
test
out
scas
shll
xor
and
pop
addl
pop
jle
mov
xchg
add
adc
repz
cmp
lea
add
xchg
xchg
mov
fs
mov
push
rclb
xor
xchg
and
stos
fildll
shlb
out
clc
xor
loopne
std
movsb
outsb
pop
add
ret
jge
addr16
cmc
and
jnp
adc
push
push
fwait
mov
outsb
jecxz
and
pop
shrl
dec
mov
cmp
sbb
pop
or
icebp
js
cli
adc
imul
iret
das
adc
in
les
subl
sahf
insl
ret
xchg
sbb
gs
cli
pop
cmp
jns
mov
xlat
mov
pop
jns
and
jbe
pop
dec
je
add
stos
inc
jmp
xor
addr16
push
dec
outsl
push
mov
out
lea
bound
or
push
movsl
mov
dec
and
int3
sbb
sub
cmpl
ja
mov
jmp
stc
dec
cmp
je
imul
into
inc
movsl
pop
xchg
mov
xor
movsl
sti
out
daa
ja
aaa
pop
pop
and
je
mov
outsb
push
push
cltd
sub
sub
clc
shlb
pop
popf
dec
movsl
loope
popf
adc
pop
sub
stos
pop
and
dec
sbb
fisubs
jmp
xchg
enter
push
push
cltd
mov
les
dec
cmp
jmp
gs
pop
pop
or
out
test
lods
mov
in
mov
or
stos
test
mov
aad
or
jmp
xchg
and
loop
jge
xlat
mov
adc
js
add
imul
mov
and
cs
jp
pushf
pop
sbb
popf
add
je
xchg
jle
inc
outsl
cli
pushf
cmc
cmp
testb
or
fs
inc
shr
xor
in
cmp
loope
sbb
push
test
pop
xchg
loopne
cmpsl
jmp
jb
cmp
and
int3
sbb
lods
ja
scas
movsb
pop
loop
mov
sub
mov
mov
or
inc
fists
dec
xor
xor
dec
test
or
das
iret
jle
lcall
movsb
or
mov
lock
aaa
lods
sbb
add
in
add
push
es
or
lods
les
push
cmp
jno
lret
gs
xchg
push
cmp
sbb
mov
jae
xor
rcrb
or
stos
xchg
adc
sbb
mov
jb
cs
adc
cltd
shrl
mov
je
add
andl
xor
push
jb
addr16
and
push
push
popa
pop
sbb
or
cmpsl
mov
call
xchg
in
icebp
pop
xlat
adcl
mov
repz
mov
dec
jbe
push
cmp
jae
and
sub
cld
mov
jp
ss
stos
cwtl
lods
add
pushf
sbb
xchg
cmp
inc
js
push
jl
hlt
popa
jnp
mov
sti
pop
and
jmp
adc
data16
dec
jp
leave
cmp
pop
dec
fdivr
xchg
lahf
dec
ffreep
or
inc
cmpsb
fsubs
sarb
mov
inc
push
lock
fucomp
iret
mov
jl
sub
cmp
add
push
inc
das
dec
add
shrl
inc
xchg
movsb
insl
jnp
jmp
stos
xchg
or
cmp
xchg
ficoms
pop
sub
push
push
jmp
mov
js
sbb
cmp
xchg
and
mov
aas
es
popf
gs
xchg
stos
lock
jl
jb
mov
jae
mov
ja
lock
mov
jb
imul
mov
sbb
ljmp
pop
push
into
push
xor
cltd
dec
cmp
cmp
cmp
into
xchg
loopne
xor
scas
jp
mov
xchg
arpl
stc
mov
shrb
test
sub
xchg
push
pop
xlat
push
mov
das
jne
popa
pop
repz
jmp
and
js
xchg
popa
xlat
xchg
jp
mov
test
aad
jb
movsb
push
arpl
lods
out
call
mov
push
and
pop
jp
test
sbb
jno
cmp
icebp
push
xchg
push
push
test
enter
loope
lds
repz
ja
cmc
sub
and
push
mov
sbb
adcl
adc
jbe
and
xor
add
cmc
and
std
jbe
mov
scas
std
shrb
sbbl
xor
inc
sbb
in
cli
and
ficomps
bound
pusha
mov
cwtl
sub
mov
adc
inc
adc
sbbb
pop
xor
pop
jl
xor
adc
mov
fisttps
mov
or
mov
xchg
add
jmp
dec
xchg
lcall
inc
mov
dec
int3
movsl
ss
dec
clc
mov
cli
mov
fldcw
add
scas
insl
jl
xorb
sti
adc
std
xor
push
aas
mov
in
push
mov
or
in
add
pop
das
outsl
or
adcb
test
mov
xchg
repnz
xlat
cwtl
cmp
je
mov
popf
fisttps
push
push
loop
fs
jle
leave
fmul
shll
adc
push
sbb
xchg
fsubp
cli
call
add
cmpsb
mov
fnstenv
pop
push
popa
mov
xor
cmp
insl
push
aad
shll
pop
add
push
lret
cli
sbb
mov
xchg
lea
std
inc
pusha
fnsave
fidivs
cwtl
movsb
xlat
sti
loop
inc
dec
mov
inc
inc
inc
add
inc
repz
lret
mov
icebp
sarb
pop
inc
xlat
pop
pop
xchg
nop
gs
pushf
sbb
dec
mov
dec
sti
pop
inc
dec
incl
aas
sbb
sti
ret
mov
andl
sahf
popa
dec
scas
jmp
add
push
sbb
mov
mov
mov
iret
or
ffree
mov
dec
push
mov
push
jl
rcrl
jb
aad
jecxz
add
fidivl
outsb
loopne
mov
stos
nop
bound
enter
sub
into
leave
cmc
fisttpll
minps
xlat
push
das
fistl
mov
inc
mov
scas
out
push
cmpsl
nop
inc
jnp
pop
sub
mov
out
aam
subl
scas
jno
repnz
mov
imul
pop
insb
xor
shlb
inc
sub
imul
cltd
inc
jmp
insl
cmp
mov
jecxz
outsl
cld
xchg
or
ljmp
mov
pop
dec
data16
dec
inc
xchg
enter
mov
inc
dec
jne
sub
loope
push
pop
push
adc
sub
and
push
push
pop
cs
hlt
cmpsl
imul
cmp
xor
lds
mulb
xor
cwtl
rcll
shll
bndstx
jge
rolb
pop
repnz
sahf
add
gs
sbb
aad
adc
ljmp
mov
pop
fstl
push
sarb
imul
xchg
call
push
out
sbbb
lds
orl
lods
rcrb
cmp
pop
stos
pop
and
in
pop
out
scas
jp
jae
sti
dec
push
insb
push
pop
cs
push
sbb
or
imull
xlat
enter
inc
pop
xchg
push
shrl
in
add
mov
sub
enter
nopl
sub
xor
push
dec
jnp
js
mov
push
inc
adc
cmpsl
adc
sahf
inc
fisttpll
pop
mov
push
repz
mov
or
sub
shrl
xchg
jbe
loope
test
inc
jmp
clc
cmc
mov
xor
iret
pop
inc
or
in
pop
jae
es
sbb
jo
incb
addb
lcall
jno
inc
add
push
loop
inc
mov
mov
pop
xor
jne
out
arpl
cmp
cmp
mov
sub
in
lods
mov
push
mov
jns
cmc
int
mov
fldcw
loop
sar
pop
xor
test
fists
add
mull
movsl
add
inc
je
cmp
cmpsl
dec
inc
rcll
inc
hlt
add
ret
ss
cmpsl
add
lods
aam
xor
repz
lgs
repz
mov
mov
dec
movsb
idivb
notb
or
repz
xchg
mov
pusha
gs
add
cli
pop
push
cltd
ret
andb
iret
sub
mov
test
adc
push
xchg
rclb
pop
je
fcompl
and
mov
dec
subb
popa
cmp
xor
adc
out
es
ja
scas
or
call
fstps
pop
aad
sti
cmpsb
repnz
es
sub
punpckhbw
pop
mov
adc
sbb
test
xchg
in
into
pusha
ret
bound
mov
mov
pop
sub
xor
mov
bound
ss
imul
movsb
jle
sub
xchg
test
sub
ljmp
stos
mov
push
push
in
xor
cmp
arpl
lret
ret
mov
xor
push
adc
ret
sbb
addr16
mov
mov
js
icebp
mov
xchg
cmovb
pop
sti
int
nop
test
aaa
shlb
sbb
push
dec
mov
mov
inc
dec
rcl
cwtl
cld
iret
test
arpl
enter
pop
push
mov
mov
addl
or
ja
pop
mov
mov
nop
push
ss
les
ds
fidivrs
divb
mov
test
lea
cmp
outsb
std
stos
jle
dec
repz
cmp
mov
push
std
clc
mov
jl
es
nop
rcl
fdivs
inc
jmp
aad
rcll
lcall
je
lods
aam
xchg
adc
mov
rorb
nop
or
in
mov
movb
mov
faddl
or
sub
mov
hlt
xchg
fwait
adc
das
cli
sbb
cmpb
pop
aad
das
jl
pop
mov
fsubrs
les
sub
jbe
add
into
lahf
in
xchg
cmp
jmp
mov
iret
ljmp
push
adc
addr16
and
push
adc
bnd
adc
pop
jb
insl
fimuls
mov
adc
mov
dec
push
sbb
lods
call
sbb
xchg
fs
sbb
push
adc
test
loope
pop
in
jp
or
mov
sti
jbe
add
int
xchg
icebp
ja
cmpsl
pop
cmp
mov
jl
inc
loopne
push
test
leave
pop
xchg
add
add
mov
and
mov
stos
fildl
sbbl
cmp
inc
sbb
cmp
inc
sbb
jg
fs
cmc
mov
cwtl
sahf
sbb
pop
inc
push
clc
lret
sub
dec
and
dec
jp
sub
jmp
shl
cmpsl
xchg
push
ja
mov
jp
mov
cs
repz
dec
cmp
dec
mov
mov
iret
inc
stos
hlt
or
shlb
mov
cli
mov
sti
jl
adc
xor
dec
jae
out
neg
mov
xchg
ficoml
les
in
aam
out
adc
jge
or
lret
inc
icebp
dec
js
nop
sbb
push
clc
arpl
je
lds
xor
inc
mov
test
out
stos
fwait
loope
push
andl
outsl
inc
js
sbb
ret
adc
jo
xchg
sbb
xor
xor
jmp
sbb
ljmp
fsubr
add
adc
fs
jb
les
jmp
mov
mov
lret
lods
ret
rcl
jle,pt
sbb
fnsave
sti
or
push
xlat
scas
int3
loop
and
add
jmp
iret
adc
sub
xchg
in
cmp
pushf
and
or
daa
pushf
daa
push
out
out
insl
mov
out
popa
lcall
scas
or
loop
jb
sub
test
add
shlb
gs
jmp
xor
jp
les
hlt
sub
push
jns
cltd
inc
aam
mov
sub
cli
push
push
enter
lds
cmc
outsl
js
dec
jnp
push
pop
pop
ret
js
fadd
sub
stc
pop
xor
enter
das
mov
or
in
daa
stos
jbe
xchg
daa
sbb
ud1
mov
mov
shll
mov
hlt
orl
movsl
push
jae
sbb
xchg
addb
push
icebp
into
mov
jg
push
lods
and
mov
sbb
xchg
push
mov
fstps
sbb
sahf
dec
aad
xchg
jecxz
cli
and
inc
sti
and
add
pop
outsb
lret
push
cmc
outsb
push
mov
cmpsb
dec
sarl
jp
jo
jbe
jmp
or
imul
jle
in
movsb
dec
outsl
sub
push
jno
cmp
loopne
popf
mov
arpl
xor
sbb
imul
mov
bound
or
inc
adc
test
dec
cs
cmp
adc
std
jbe
clc
lds
and
int
lock
sti
inc
js
mov
mov
pusha
mov
ss
or
aad
je
ja
negb
sbb
dec
cmp
lea
sbb
cltd
lret
sub
rorl
pop
cmp
mov
jns
inc
sbb
mov
push
lcall
mov
dec
popa
inc
xor
jo
lock
sbb
aas
test
ret
cwtl
pusha
cwtl
xor
push
xor
jecxz
push
stos
push
sti
sti
mov
cmp
std
fdivrs
pop
mov
push
pop
or
ficoml
cld
pop
push
fwait
xchg
jo
inc
push
lods
loope
or
ds
cmpb
sbbb
je
shll
jmp
dec
push
cmc
sub
xor
and
mov
adcb
gs
out
inc
sahf
inc
push
push
cwtl
xchg
push
faddp
js
push
call
repz
fmuls
inc
xor
lahf
movsb
outsl
mov
adc
iret
divb
andb
loopne
push
test
push
pop
add
shlb
hlt
inc
lock
mov
icebp
mov
rcrl
adc
in
xchg
arpl
icebp
and
jae
or
pop
jmp
dec
mov
fsubs
xchg
idiv
xchg
push
enter
sub
mov
enter
cmp
cmp
pop
daa
mov
cmp
cmp
sti
rol
popf
shll
shrl
mov
dec
shlb
xchg
pop
out
lcall
iret
add
sbb
cmp
or
add
movsl
and
rol
xor
inc
decb
sbb
cmc
sti
stc
int3
sti
mov
or
jno
inc
adc
mov
mov
lock
or
push
hlt
ret
in
mov
in
cwtl
pop
outsl
jnp
scas
fsubrs
fnstsw
seta
scas
pop
sub
dec
scas
insb
cmp
cmpb
lods
fcomps
fwait
iret
movsl
repnz
les
fisubrl
fisubl
mov
xchg
insb
testb
dec
and
pop
mov
adc
fldl
pusha
out
into
inc
nop
leave
or
aam
or
mov
adc
xchg
lods
mov
inc
leave
daa
xchg
mov
cmp
in
cmp
push
or
inc
pop
xchg
data16
popf
or
in
lcall
pop
cmpsl
fcmovnu
pop
rolb
inc
pop
add
adc
ljmp
cmp
fs
fmul
rolb
jbe
jb
pop
and
push
and
pop
daa
leave
punpckldq
pop
jnp
mov
xchg
push
in
push
shl
pop
daa
les
mov
in
out
into
cld
jmp
adc
jo
mov
jb
ljmp
es
fistps
jmp
loope
push
bound
lods
fstl
mov
into
pop
in
leave
mov
rcll
inc
jl
aad
fsubr
pushf
sub
clc
lahf
mov
scas
inc
xchg
mov
add
push
jge
sti
fisubl
ficoml
iret
cmp
xor
pop
in
and
pop
xchg
add
cmpsb
in
lea
dec
imul
pop
subb
aas
add
xor
add
pusha
sbbl
imul
dec
aas
and
inc
ss
loopne
push
mov
and
mov
outsl
negb
into
jge
add
cmpsl
insl
mov
testl
stos
push
dec
in
cmpsl
aas
movsl
cmpsb
xchg
lea
xchg
insl
stc
sub
movsb
push
push
lds
xor
mov
or
xchg
cmp
xor
sbb
out
cmpsl
jl
cmpsl
scas
xchg
add
jle
jns
dec
adc
pop
fstpt
idivl
mov
sbb
lds
or
xchg
sahf
pop
add
push
and
mov
push
fwait
push
rcl
out
mov
jmp
adc
cmp
out
fistpll
pop
adc
test
xchg
andb
jns
mov
mov
gs
xchg
jmp
out
test
adc
subb
stos
in
xchg
sub
mov
or
daa
loope
pop
jno
int
out
je
lock
push
lea
jp
sbb
test
xchg
stos
jo
add
dec
mov
insb
fcmovnu
xor
adc
jno
push
shrl
jo
adc
xchg
xorl
or
test
lret
pop
fs
ret
ljmp
xchg
mov
jno
pop
int3
or
mov
jns
push
jecxz
mov
out
cmp
mov
lock
sbb
lahf
jp
or
aam
xchg
lock
cmpsb
dec
cmpsb
jecxz
lret
and
jne
inc
cmp
stc
xor
mov
int
out
sbb
jl
push
xor
sbb
pop
ja,pn
and
lret
xor
dec
jge
push
cmpsb
dec
into
int3
xor
bound
pop
int
pop
mulb
fs
jecxz
mov
shl
add
dec
sbb
mov
and
pop
and
repz
push
cltd
jp,pn
scas
jno
addr16
push
imul
leave
xor
lcall
inc
mov
mov
mov
cli
mov
iret
xchg
jns
repnz
adc
xchg
arpl
add
push
inc
outsb
adc
inc
xchg
xchg
xchg
jle
and
pop
dec
add
leave
sti
mul
mov
sbb
dec
dec
push
sub
int
and
add
int3
inc
dec
shrl
pop
push
inc
mov
pop
pop
js
xor
mov
jl
jnp
lahf
ja
jmp
test
jbe
cmpb
xchg
sub
xor
clc
cmpb
xor
dec
in
sbb
arpl
sub
mov
stos
xchg
popf
xor
pusha
pop
dec
xlat
xor
cmp
xor
test
outsl
xchg
ja
scas
fs
add
mov
add
lods
cs
pop
pop
mov
add
pushaw
mov
dec
sub
lods
mov
inc
test
cmpsl
mov
mov
int3
xor
mov
out
cmp
mov
sahf
push
or
cmp
jp
cmc
addl
jbe
push
int
mov
adc
mov
scas
jo
xor
pop
pop
dec
cmpsb
fs
adc
mov
xor
push
shlb
movl
loope
ret
jmp
mov
mov
shll
out
mov
pushf
movsb
cld
lea
or
in
inc
dec
cmpsl
imulb
or
and
cmpsl
mov
in
xchg
imul
subb
inc
cmp
and
cltd
xchg
ss
jne
inc
push
or
bound
dec
xor
in
jnp
aam
aaa
das
adc
int
in
adc
outsb
push
or
test
adc
lds
loopne
inc
ja
add
sub
pusha
lret
fildl
adc
sbb
xchg
dec
push
or
add
aam
xchg
ja
adc
scas
sub
cmpsb
mov
adc
dec
pop
sbb
cmp
mov
adc
sbb
shlb
pop
sbb
jnp,pn
outsl
aam
leave
inc
arpl
sub
mov
nop
dec
jno
adc
leave
arpl
data16
iret
mov
out
xor
inc
mov
mov
add
rol
xor
mov
popl
mov
xchg
mov
and
insl
out
out
add
loopne
sbb
and
mov
xor
and
cmpsb
test
jns
lret
mov
or
arpl
ja
cmp
negl
clc
loope
mov
inc
sbb
or
sbb
daa
sub
pop
sarb
adc
adc
push
scas
cwtl
xchg
add
into
aad
lret
movsb
add
inc
pop
sti
into
popl
sahf
add
or
lods
ficoml
and
add
sub
call
call
nop
mov
fdiv
mov
mov
pop
dec
or
dec
xor
cwtl
insb
xlat
push
popf
add
xchg
cli
lds
push
outsb
add
in
inc
xlat
xor
testb
aad
sub
cmp
jne
mov
orl
xor
sbb
mov
xchg
dec
mov
or
push
repnz
sub
jecxz
adc
lahf
test
imul
adc
sahf
xor
test
int
push
ret
jg
pop
add
in
xchg
inc
mov
scas
mov
jp
and
rorb
js
inc
lcall
std
sub
hlt
jns
pushf
mov
xchg
in
xchg
into
arpl
mov
inc
rcll
out
mov
std
imul
push
sarl
lods
sub
dec
dec
ret
test
scas
and
mov
insb
pop
dec
or
je
daa
clc
sar
rolb
and
inc
lods
push
dec
add
inc
and
addr16
push
add
dec
add
push
xor
mov
sub
add
jo
lods
mov
data16
and
leave
sbb
into
into
sub
adc
jge
inc
inc
aad
nop
popf
dec
mov
ret
adc
clc
lahf
shll
cmp
popa
ja
mov
push
mov
or
mov
ret
xor
cmpsb
loopne
popf
and
mov
jns
fs
pop
inc
inc
mov
ret
xchg
aad
mov
popa
xchg
lcall
push
xchg
movsl
xchg
pop
jmp
adc
push
in
rolb
mov
adc
add
xor
ja
push
inc
fcomps
shlb
mov
aas
pop
fsubrl
and
mov
fnstcw
bound
dec
rol
mov
mov
jecxz
or
sub
xchg
push
rcll
out
out
pushf
insb
pusha
clc
add
and
ds
test
or
test
add
es
pop
inc
mov
or
inc
into
cmp
mov
xor
sti
jo
fwait
push
adc
sub
daa
or
pop
in
and
std
jmp
mov
mov
mov
and
jnp
and
sahf
xchg
and
leave
mov
inc
inc
and
add
stos
cmpsl
inc
scas
movl
xchg
xchg
adc
mov
in
in
sbb
stos
pop
mov
mov
mov
jnp
or
int3
sbb
in
cmp
movsb
shl
pop
mov
xor
dec
jns
out
push
js
div
push
fcmove
ret
cld
mov
sti
lret
dec
mov
ret
mov
in
mov
popa
andnps
enter
sarb
stos
inc
out
enter
mov
inc
pop
cs
pop
and
mov
int3
xchg
mov
inc
daa
mov
ljmp
cmpsl
lcall
xlat
inc
loop
add
jbe
fwait
ljmp
gs
cli
xor
fildll
mov
out
cmp
hlt
jmp
in
rcrl
pop
push
shrl
cmp
pop
mov
adc
mov
ja
out
hlt
orb
xchg
out
pushf
stos
shll
mov
jns
ds
xlat
into
mov
rorb
fmull
sub
addb
in
jmp
sub
push
bound
jns
imul
mov
insb
xorb
pop
repz
mov
dec
mov
das
or
jne
lods
dec
inc
arpl
mov
mov
ss
pop
test
negb
pop
xchg
push
or
mov
ljmp
fistl
push
inc
mov
leave
stos
stos
insb
pop
fisubrl
jbe
inc
cmpsl
jge
xchg
ds
dec
mov
mov
int
orl
and
arpl
sbbl
mov
imul
add
or
fidivrs
shlb
test
fbld
adc
insb
prefetch
adc
dec
dec
mov
frstor
lcall
lock
out
mov
jnp
cld
lods
ret
lock
shl
nop
int
pop
dec
into
mov
pop
loop
out
rorb
adc
test
push
pop
dec
mov
lcall
dec
arpl
xchg
push
stc
jno
mov
jbe
sarb
add
loope
jmp
insb
xor
clc
addr16
push
push
sub
pop
dec
movsb
mov
dec
imul
enter
sbb
sar
push
repz
adc
inc
clc
xor
add
pop
cmp
cwtl
jg
shll
adc
and
popa
ficoms
int3
add
xchg
lods
test
ret
inc
fnstenv
ds
shlb
mov
push
ljmp
fwait
xchg
dec
push
lods
push
jmp
cwtl
aam
das
jne
inc
out
in
mov
lahf
pop
sbb
setg
xchg
int3
repnz
hlt
stos
push
jl
mov
cmc
or
mov
movsl
xchg
add
push
imul
lds
push
int3
jb
cmp
in
lahf
adc
push
adc
inc
aas
dec
push
scas
lock
inc
mul
aaa
xor
add
and
stc
fisubs
sub
sahf
jle
ficomps
pop
test
nop
jo
rol
decb
stos
xchg
sbb
jbe
pusha
lahf
inc
pop
loope
push
xchg
sbb
fiadds
xor
data16
pusha
cmpsb
jl
dec
loopne
adc
jg
sahf
cmp
mov
popf
sub
mov
pushf
sahf
lcall
mov
cmpsl
in
sbb
out
xchg
mov
clc
das
mov
in
leave
rorl
xchg
mov
cmp
clc
inc
jp
add
mov
pop
aad
fnstenv
sub
js
dec
jno
xor
cmpsb
pop
dec
mov
pop
sbb
insl
dec
or
sahf
cld
fcoml
adc
insl
push
cmp
adc
jo
push
bound
pop
gs
inc
loope
mov
adc
adc
rclb
daa
mov
or
mov
adc
dec
aad
xchg
or
add
cmpb
sti
push
ja
mov
repnz
fidivl
lahf
loopne
dec
pop
push
lock
movsb
cmpl
shl
jle
movsl
outsl
jmp
mov
adc
ljmp
push
push
mov
insl
inc
cmpsl
test
push
insl
inc
adc
aam
roll
sbb
cli
sub
mov
sti
pop
in
fistps
mov
add
push
sahf
cmpsb
out
mov
mov
pop
adc
jne
xchg
daa
push
xchg
ds
add
outsl
test
mov
lahf
test
inc
jge
mov
sub
test
in
xchg
lahf
psubsw
outsb
imul
cmp
add
into
xor
pop
push
mov
mov
adc
xchg
enter
add
pushf
lret
or
cmpsl
push
xor
add
cmp
add
jno
sbb
xchg
mov
pop
out
jne
xor
mov
cmp
movb
push
xchg
stos
cld
repz
mov
decl
push
jbe
fsubrp
lods
push
and
inc
lahf
mov
dec
nop
rcrl
push
sahf
dec
push
or
insb
push
in
test
ljmp
aam
je
shrl
cmp
mov
xchg
ja
xor
mov
stos
mov
lods
mov
sub
jbe
icebp
and
cmp
bound
repnz
and
and
je
out
cmp
jecxz
add
push
addb
jae
or
pop
adcb
jne
mov
dec
imulb
aas
add
lcall
out
mov
adc
ss
mov
and
rcr
dec
cld
hlt
fisubrs
in
cs
add
outsl
ljmp
sahf
push
mov
or
pop
jns
insb
out
imul
loopne
jle
push
adc
addr16
xlat
and
and
jl
aam
loopne
xsha256
cmpsb
push
mov
call
cwtl
mov
cld
movsl
fnstenv
insb
rcrb
xchg
stos
mov
imul
inc
jne
dec
lock
outsl
ret
aas
outsb
mov
and
cmp
mov
mov
add
mov
and
xor
repnz
fsubr
dec
add
sbb
lea
aaa
shl
cld
repnz
sub
call
mov
shll
add
pop
int
xor
fs
fnstenv
pop
or
lods
sbb
icebp
xor
cli
daa
sti
aas
xor
insl
cmp
lods
ss
ficoml
add
adc
aas
les
loopew
loopne
xor
or
mov
mov
cld
adc
adc
xchg
adc
or
or
add
shrl
add
data16
push
mov
mov
insb
sbb
and
test
push
push
and
popf
dec
jp
cmp
adc
aad
add
out
sbb
adc
icebp
subb
adc
xchg
insb
mov
cmp
mov
push
mov
sub
mov
push
rcrl
jae
shufps
stos
cmp
sbb
add
jg
pop
adc
xchg
rcl
mov
out
add
jge
or
xchg
mov
push
sahf
mov
jecxz
jo
bound
js
popa
repz
in
jnp
jbe
lret
mov
iret
sub
mov
push
and
add
out
jns
iret
mov
cmp
jbe
sub
test
xor
out
push
pop
mov
dec
mov
lahf
mov
dec
dec
gs
popf
idivl
dec
xchg
pop
ret
or
inc
and
mov
stc
cmp
xor
xorb
pop
xor
xchg
pop
fcmovnbe
add
dec
lods
loope
xchg
mov
pop
in
movsl
les
jo
mov
cmp
dec
dec
std
inc
int
cltd
sbb
or
ds
push
repnz
sub
push
adcb
pop
inc
cwtl
arpl
repz
leave
inc
mov
outsl
mov
inc
enter
push
add
dec
push
cmp
sbb
shll
lret
xchg
push
dec
fisubrs
pop
or
bswap
jmp
and
and
fcompl
xchg
pop
sub
leave
loope
cs
add
sub
inc
sysret
dec
xor
bound
pushf
popf
fidivl
je
dec
hlt
fsub
sub
in
or
ljmp
and
jmp
adc
aas
push
andb
cltd
push
push
dec
xor
xor
shlb
loopne
ror
pop
enter
and
orl
lods
rclb
jne
add
cmp
add
arpl
rclb
pop
or
push
in
or
ret
arpl
sbb
std
in
fistpl
test
xchg
push
into
arpl
push
lods
sahf
mov
xchg
test
jle
inc
mov
sahf
pop
pop
jo
lea
lds
dec
mov
xchg
mov
adc
cmpsb
les
mov
lret
imul
shlb
in
sarl
mov
call
push
xchg
in
fisubs
jp
adc
push
push
out
or
pop
mov
sub
mov
sbb
xchg
mov
mov
sbb
lret
aas
mov
xchg
sbb
jp
add
sub
inc
inc
nop
pop
jl
mov
cmc
cmp
sbb
notl
es
bound
add
dec
jmp
mov
lock
sbb
sbb
add
dec
pop
movsl
mov
sbb
sbb
dec
test
push
jno
jmp
xlat
jne
clc
and
pop
sbb
flds
dec
push
imul
sub
or
jnp
sub
add
sub
inc
js
aas
mov
add
add
mov
cld
aaa
andb
jno
pop
cs
imul
push
push
mov
fwait
and
xorb
jmp
leave
fmull
nop
add
test
sti
adcl
adc
aaa
jl
into
scas
or
mov
test
test
mov
stc
cmc
popf
mov
or
dec
mov
inc
in
popf
adc
es
sbb
and
mov
movsb
scas
push
or
jecxz
jg
jne
push
pop
cltd
push
pop
pop
loope
lret
and
xchg
pop
inc
clc
xor
push
mov
sti
pop
jle
iret
js
imul
jne
add
pop
inc
and
cmpsl
cmp
dec
mov
xor
ret
mov
jnp
adc
sbbb
mov
pushf
mov
push
in
inc
xchg
xor
pop
push
pusha
jmp
nop
mov
mov
sti
xchg
lret
push
mov
mov
aam
push
mov
inc
add
mov
jg
pop
or
pmullw
movsb
add
in
mov
sbb
and
xchg
jmp
adc
repnz
aas
adc
dec
jbe
sbb
push
pusha
test
sub
fcompl
mov
punpcklwd
repz
nop
rolb
jp
or
sbb
and
out
je
cmpsl
out
fsub
outsl
fsubrs
fsts
jle
xor
stos
add
sbb
ljmp
stos
cld
mov
shll
dec
roll
and
aam
iret
idivl
add
andb
push
iret
ret
das
fildll
mov
jo
mov
mov
and
inc
and
sub
dec
mov
out
jne
shll
call
dec
lds
mov
push
sub
cmp
mov
adc
jae
loop
xchg
mov
jo
and
pop
inc
or
lods
setle
adc
xchg
jo
nop
add
imul
fsubrs
inc
mov
call
mov
xor
mov
out
mov
add
out
pop
insl
cmpsb
sub
stos
xchg
scas
and
xor
shll
push
inc
push
rcrb
movsl
repz
enter
ret
sbb
aam
mov
inc
add
pusha
fwait
sahf
mov
ret
out
mov
iret
data16
sbb
jp
data16
in
xor
dec
mov
mov
addl
adc
out
push
sahf
and
sub
fs
mov
xchg
cmp
lea
pop
xchg
lock
lahf
adc
mov
aas
pop
scas
xor
jp
scas
xchg
xorl
and
insl
jmp
dec
pop
mov
mov
fidivrs
pop
cmp
hlt
sub
jbe
jb
sub
cmp
in
fsubrs
mov
fiaddl
shlb
lods
mov
int3
jae
fmull
daa
test
fidivl
sbb
int3
jecxz
insl
xchg
mov
jno
cli
inc
in
mov
mov
cmp
aam
ror
dec
mov
or
fs
xchg
xchg
push
jne
imul
decb
std
pushf
mov
mov
push
outsl
cltd
test
lcall
sub
dec
sub
hlt
repz
int
stos
mov
dec
fsubrs
jnp
inc
xorps
or
test
jno
pop
sbb
clc
fsubs
cs
pop
cmp
sub
pop
in
or
add
jb
push
cmc
add
leave
dec
xchg
arpl
xchg
xchg
pop
cmp
ret
ret
push
es
out
in
fldln2
aas
notb
jge
sbbl
das
dec
mov
add
das
add
mov
ficomps
push
or
lds
test
test
fstpl
popa
xor
mov
pop
mov
rorw
pop
cmp
xchg
pop
mov
xor
jno
mov
ja
popf
xchg
imulb
xlat
or
pop
lret
jo
inc
lds
sbb
sub
mov
inc
pop
sbb
mov
cmpsb
lock
je
push
insb
jno
xchg
push
lock
mov
add
mov
rclb
mov
idiv
sarb
fwait
push
pushf
xlat
push
inc
loopne
mov
or
shrb
jge
and
push
ss
test
popa
test
loop
mov
push
mov
or
in
insb
stos
lret
insb
cmp
sbb
pop
xchg
xchg
mov
xchg
mov
leave
pop
mov
je
lahf
inc
mov
or
xchg
repnz
out
rolb
aam
out
inc
int3
int
cmc
jge
xchg
inc
pop
sbb
imul
addr16
dec
xor
mov
dec
pop
dec
mov
or
or
andl
xchg
pop
icebp
and
bound
shl
and
xor
in
popa
adc
xchg
add
shlb
xchg
push
jbe
jns
jno
push
cwtl
pusha
or
out
cwtl
adc
scas
daa
xchg
xor
rorb
push
xor
jmp
imul
push
int
jecxz
jp
in
mov
in
push
lds
int
jmp
pusha
clc
into
fsubs
je
lock
adc
popf
and
dec
pusha
or
and
testl
jno
xor
cmp
cmp
add
inc
fisubrs
insb
lahf
add
cmp
and
xor
add
mov
xor
sub
fnstsw
xchg
mov
xchg
or
xchg
xrelease
shl
dec
not
int3
and
mov
movsl
into
adc
and
and
cmpsb
pusha
xchg
scas
outsl
add
pop
mov
push
imul
mov
xchg
hlt
stc
cmpsb
movsl
fstps
sub
push
in
or
mov
out
jno
aam
in
mov
push
scas
jns
and
js
xchg
xchg
xchg
mov
lret
je
inc
popf
cmpsb
lahf
ss
fildl
mov
std
push
loopne
fisttpll
adc
push
out
mulb
cld
daa
xor
add
aam
fbld
sbb
shll
mov
and
insl
imul
push
add
sbb
and
int
fmuls
push
inc
mov
cmp
jns
add
dec
in
aam
lea
cmp
hlt
shr
mov
adc
sub
fmuls
scas
mov
add
jo
dec
sub
in
aad
dec
aas
sub
scas
pushf
dec
insl
in
sbb
and
jo
sbb
scas
enter
popf
push
mov
sbb
nop
and
out
xor
fsubp
fldl
test
imul
sub
out
mov
xchg
leave
bound
in
pushf
sbb
fs
js
sahf
cmp
in
cmp
xor
mov
mov
dec
jns
pop
add
mov
stos
lret
stc
push
test
push
add
or
sbb
out
nop
lcall
lods
outsl
testb
pop
jmp
mov
sbb
popf
insl
test
adc
pop
jg
outsl
mov
in
fldt
fistpl
mov
fmull
movsb
mov
mov
xor
dec
loop
lret
aaa
icebp
sbb
inc
push
xorl
int3
push
mov
int3
or
jnp
xor
jo
out
fadd
mov
sar
xor
pop
lds
or
das
enter
insl
sbb
stc
mov
lret
repz
xchg
outsl
mov
fiaddl
jmp
popa
ffree
neg
push
ja
jne
pop
xchg
fcoml
sub
mov
mov
out
iret
test
xor
or
loope
insl
popa
icebp
and
stc
stos
fs
add
sbb
cmp
add
push
loopne
aam
sbb
and
mov
repz
ja
lret
mov
push
sub
orl
mov
sbb
inc
movsl
mov
stc
lea
jmp
sbb
xchg
push
or
jmp
adcb
jecxz
mov
jno
insb
mov
or
testl
mov
stos
mov
fdivs
bound
js
and
lahf
movd
sub
fstp
mov
cltd
and
fwait
dec
inc
fnstsw
jle
popf
push
fcoms
inc
dec
jecxz
mov
xlat
or
adc
xchg
push
out
data16
push
aad
mov
sbb
mov
insb
sub
cmp
pop
shrl
imul
fwait
jmp
loopne
addb
pop
push
rcl
lods
inc
fmul
xchg
sbb
test
fyl2xp1
cmp
cwtl
inc
sahf
in
sbb
divb
xor
jno
adc
shr
inc
test
inc
dec
cmp
add
sub
push
push
ja
lock
ret
push
and
gs
iret
aas
xchg
dec
jno
add
push
mov
insl
repz
push
pop
mov
leave
nop
jp
insl
lahf
data16
cmpsb
cmp
inc
idivb
and
or
cwtl
in
cmc
in
xor
add
mov
dec
je
or
inc
jno
iretw
and
jp
sbb
or
lret
adc
lcall
movsl
cmp
rolb
xchg
gs
bound
sbb
mov
push
fadds
scas
dec
mov
xchg
cmp
bound
ss
inc
mov
ret
dec
cmp
sub
imul
stos
mov
xchg
push
push
sbb
sub
cmp
fnsave
mov
scas
push
add
mov
loop
inc
cld
and
repz
dec
loope
sub
add
xor
cli
jp
cmpsb
push
push
dec
or
aas
add
cmp
add
mov
mov
aas
repnz
insb
add
lret
add
cli
pop
andl
out
shrb
mov
or
das
das
imul
mov
sbb
sub
inc
inc
in
dec
out
jbe
jno
popa
jle
and
xor
lods
shlb
out
adc
test
pop
test
ljmp
lret
mov
insl
or
mov
orl
aad
xlat
dec
mov
mov
xor
xchg
xor
iret
xor
push
jnp
loopne
les
jp
mov
in
repnz
or
mov
pop
call
cld
mov
push
test
mov
mov
mov
cmp
add
je
jne
mov
jecxz
inc
fistpll
sub
lret
mov
jbe
sub
lcall
xchg
rcl
sahf
int3
xlat
push
movsl
pusha
mov
inc
mov
pop
xlat
mov
andl
jg
cmpsl
fsubr
adc
mov
lea
sbb
jo
test
sbb
jmp
inc
sub
push
scas
fstps
or
mov
call
cld
out
adc
push
out
ret
out
or
xchg
mov
and
addr16
adcb
add
pop
mov
cmp
pusha
movsb
and
insb
fsubrp
xor
int
je
cli
mov
sub
push
in
sbb
sub
cmp
sub
pop
xor
stos
fsubrl
xor
mov
jmp
or
lea
push
call
sub
sbb
or
cwtl
out
loop
dec
push
jo
loope
pop
add
lahf
or
ljmp
test
or
mov
push
jl
mov
dec
xor
sub
movsb
in
mov
popf
mov
push
nop
rcrb
icebp
xchg
push
shll
pop
inc
movsb
leave
addr16
mov
cmpsb
outsl
test
fimuls
mov
rcr
add
aam
xchg
pop
es
jle
xchg
jmp
aaa
push
rolb
xor
fisubrs
out
test
xchg
enter
nop
in
jnp,pt
int
fcmovbe
mov
lods
testb
loope
jne
pushf
dec
or
sub
pop
fwait
mov
sahf
cmpsb
cld
out
aaa
inc
out
in
mov
dec
sbbb
pop
arpl
or
popf
imul
pop
pop
sub
aaa
jmp
mov
dec
cmp
lret
cli
cmp
pusha
dec
sbb
add
inc
das
push
mov
ss
cmp
jge
push
and
pop
inc
push
int
aaa
jg
ret
mov
cmp
bound
jmp
mov
pop
mov
push
add
push
ret
andl
add
sahf
testb
fcompl
adc
mov
inc
and
push
push
lods
pop
stos
jb
adc
hlt
hlt
dec
xor
es
repz
jmp
je
ds
cli
mov
pop
ret
dec
sub
loop
jle
insb
rolb
lcall
sahf
stos
mov
or
insb
sub
jno
and
mov
repnz
out
arpl
adc
loopne
iret
sbb
hlt
inc
das
sub
stos
shrb
push
hlt
and
adcl
or
call
ret
pop
add
sbb
outsl
popl
inc
je
add
outsl
loopne
dec
sbb
lock
lods
mov
push
les
and
and
loope
mov
dec
fwait
mov
jecxz
das
je
jl
mov
add
mov
bound
mov
mov
fisubl
addb
pop
jne
mov
das
push
and
lret
int3
add
icebp
out
sub
and
sbb
outsb
nop
push
push
and
hlt
pop
xchg
inc
push
lret
out
cmpsb
and
notl
xchg
jg
cltd
push
lcall
fcmovbe
mov
jnp
out
sub
fisubrs
sbb
fstpl
fxch
es
imul
add
xorl
mov
pop
notl
dec
ret
mov
inc
hlt
daa
cs
mov
out
and
fcmovnu
leave
mov
rol
jp
fstpl
push
sub
ret
movsl
inc
push
dec
into
lea
inc
push
and
fildll
and
imul
add
xor
rcll
push
inc
int
push
shrb
mov
jns
xchg
lahf
int
lret
sbb
dec
cwtl
add
popf
jge
sub
mov
add
inc
jbe
and
xor
lea
fisttpll
jo
out
jne
jg
or
inc
add
mov
jbe
sti
pop
mov
lds
mull
add
inc
std
inc
jnp
cmp
insb
mov
popf
inc
ljmp
pop
mov
mov
cltd
or
push
leave
ret
lods
mov
pop
inc
cmp
addr16
lret
repnz
iret
jns
xchg
lret
jbe
push
das
and
mov
shll
pop
das
adc
loopne
fsubrp
inc
mov
mov
push
cli
push
pusha
out
int
fisubs
in
mov
mov
sahf
mov
xor
mov
ja
jg
add
dec
push
sbb
subl
adc
add
enter
inc
lods
out
jecxz
dec
pop
jmp
cmp
cltd
negl
xchg
xlat
scas
mov
adc
xor
sub
leave
test
cmp
aas
iret
outsl
or
hlt
or
pop
outsl
sub
pop
add
out
dec
and
int
fstpl
lock
ss
xor
stos
fldl
pop
call
out
out
pop
fistl
pushf
gs
fidivrs
popa
shll
imul
icebp
sbb
jl
pop
and
inc
jae
or
mov
cmp
mov
movsb
aad
movsb
pop
jg
out
add
imul
xorl
popf
popf
pushf
jmp
push
data16
xchg
add
pop
aaa
and
in
pop
pop
fdivs
pop
mov
test
negl
dec
in
loope
add
sub
cld
ficompl
sbb
push
dec
push
inc
mov
dec
jl
or
mov
imul
push
sub
daa
insb
or
je
or
jmp
das
pop
mov
imul
imul
es
lret
pop
pop
mull
cmp
xchg
push
xchg
loop
pushf
jb
cmc
add
out
xor
call
cld
aaa
ja
adc
push
sbb
jo
mov
jg
jmp
fsubr
imul
popa
jae,pn
testl
daa
enter
cld
add
out
pop
fdivrs
xor
pop
je
ds
loope
js
jno
out
out
and
and
push
ljmp
mov
lret
dec
js
pop
stos
adcl
xor
loop
xor
jg
out
cltd
sbbw
adc
push
mov
enter
lods
xor
add
jg
aaa
mov
in
movsb
cs
into
inc
inc
stc
in
mov
push
test
add
sbb
in
adc
sbb
push
sub
incb
std
std
xchg
add
dec
test
daa
mov
dec
cltd
cs
dec
and
data16
push
xchg
sub
decl
push
fistpll
mov
subb
mov
ja
push
mov
jg
xchg
outsb
dec
xlat
hlt
push
daa
push
pop
insl
filds
jp
xchg
xchg
adc
aas
lea
push
add
mov
sbb
js
lret
inc
ds
push
outsl
mov
fisubl
call
test
lods
adc
pop
pop
push
cmp
sbb
adcb
mov
int
popa
adc
xlat
add
cmp
and
dec
jp
push
or
jmp
insl
imul
push
mov
pop
lea
add
in
jle
cmp
mov
fwait
add
mov
dec
inc
sub
movsl
and
popf
cmp
ja
loop
sub
scas
sbb
sbb
pop
sbb
xor
ret
hlt
stos
lock
jnp
push
shrb
popf
xlat
clc
arpl
pop
xchg
mov
loopne
dec
test
ljmp
test
cmp
sub
cmpsl
in
popf
mov
outsl
cmp
fisubs
add
add
push
pushf
jle,pn
imul
dec
movsb
int3
test
negb
push
into
int
jne
pop
scas
scas
rclb
int3
daa
adc
fimuls
xor
leave
lea
in
add
pop
incl
mov
cmp
mov
sub
xchg
imul
inc
jo
pop
fmull
mov
rol
out
fisubrs
out
and
push
ret
add
jbe
daa
ret
mov
imul
jne
lds
outsb
xlat
mov
stc
mov
or
aam
sbb
daa
andl
js
sub
stos
int
loop
loope
jne
icebp
jbe
sbb
aas
mov
adc
push
jp
jp
std
mov
push
cwtl
xlat
push
mov
lds
mov
jo
cmc
adc
testl
mov
out
jae
pop
sub
adc
imul
loope
push
adc
jae
clc
pop
lret
repz
mov
lds
push
dec
pop
jge
dec
cmpsl
mov
push
push
rorl
out
xor
or
popl
jl
test
pop
jge
lahf
push
mov
xchg
add
mov
inc
fcmovnb
fsubs
in
shll
push
dec
lahf
mov
xchg
incb
popf
test
lcall
cmpsl
xchg
cld
sbb
push
or
idiv
dec
push
roll
stos
xchg
stc
mov
cwtl
sbb
iret
and
pop
out
test
in
jmp
les
xor
mov
bound
jmp
movsb
push
fs
dec
jecxz
sahf
pop
xchg
lahf
loope
loope
add
rcl
notl
movsl
jl
cmc
lds
cmpsl
stos
movsb
out
test
je
inc
dec
pop
loopne
mov
mov
xchg
lret
test
test
xchg
and
mov
and
les
insb
inc
inc
in
dec
mov
daa
addb
lock
mov
mov
add
iret
or
adc
loopne
js
jp
out
mov
mov
stos
sub
jns
jbe
or
and
pushf
adc
add
negl
jl
mov
mov
pop
mov
mov
adc
jae
pop
xchg
push
cmpsl
cmc
imul
pop
jge
and
pop
adc
and
scas
ljmp
jmp
cmp
pushf
mov
jns
jmp
divb
out
push
call
mov
jns
int
das
mov
ficoms
push
sti
fwait
popa
push
jno
cwtl
cltd
xchg
enter
lret
jbe
pop
adc
mov
scas
jnp
jmp
or
icebp
pop
mov
icebp
xor
inc
data16
pop
into
test
push
ja
xor
jnp
and
inc
cli
and
mov
ja
xchg
test
jns
pusha
sub
in
outsb
mov
xchg
cwtl
xor
clc
dec
stos
int
imul
cmp
rorl
int
jle
xchg
data16
xlat
ss
adc
jge
lcall
mov
and
pop
repnz
test
imul
dec
pop
in
test
push
out
lret
dec
aas
adc
fwait
lods
mov
inc
xchg
cltd
sbb
mov
ja
jbe
jne
xchg
push
sbb
lret
lahf
ja
ljmp
cld
cmp
jmp
xor
push
pushf
lahf
push
sbb
aaa
mov
adc
rolb
push
and
pop
iret
repnz
insb
and
or
dec
pushf
xor
enter
mov
push
leave
in
push
int3
pop
shlb
js
aam
fxch
cmpsl
out
add
les
pop
popf
xlat
xor
sub
mov
ret
dec
lret
loop
xor
xchg
mov
arpl
rorl
stos
imul
push
rorb
movsb
push
add
ficoms
adc
sbb
and
rcrl
jae
adc
and
xor
xor
mov
adc
mov
inc
movsb
cmc
popa
or
pop
lcall
call
sub
and
jns
stc
icebp
xor
addr16
mov
shlb
mov
push
add
xchg
add
mov
mov
ret
mov
adc
xchg
add
add
iret
neg
push
or
or
adc
jg
pop
jb
clc
subl
xor
mov
or
sub
xor
mov
scas
add
add
lock
push
pop
mov
pop
sub
ja
sub
popa
rcrb
add
lock
cld
xchg
sub
cli
jle
gs
mov
jmp
jne
movsl
ja
push
popf
pop
insl
sahf
aas
lods
pop
xlat
sbb
inc
mov
je
adc
adc
das
push
int3
test
sub
das
mov
inc
dec
jg
jo
xorl
fwait
jbe
popa
add
xor
inc
adc
aam
sub
pushf
sub
xchg
lahf
daa
mov
jmp
out
add
cltd
adc
sbb
add
fsubs
jno
xchg
inc
mov
cmp
icebp
test
hlt
mov
shrl
mov
dec
cmpl
mov
and
mov
mov
mov
std
jbe
lods
adc
add
sbb
fadds
bound
sub
das
jbe
popf
imul
lea
pop
jecxz
cltd
bound
negb
mov
je
pop
clc
stc
lahf
xchg
mov
and
and
fldcw
aaa
sbb
test
dec
xchg
mov
sarl
mov
push
inc
cmp
pop
or
out
rclb
lods
dec
mov
aam
xchg
sbbb
std
rorb
bound
lods
lock
movsl
mov
inc
and
lret
push
pop
or
ds
push
xchg
pop
push
mov
lret
loope
pop
js
scas
mov
lock
xchg
hlt
lods
lret
rorl
mov
mov
dec
loopne
mov
ja
ss
mov
in
mov
cmp
out
aaa
loope
cmp
enter
ret
rcl
sub
je
in
cli
mov
pop
lods
into
cli
sub
jo
loop
test
ss
add
mov
lahf
xor
ljmp
mov
dec
and
pop
jg
cmc
push
iret
pop
jl
mull
or
push
jmp
nop
mov
jecxz
aas
mov
outsl
in
sub
cmc
insb
add
iret
and
sub
cmpsl
xchg
push
push
hlt
jg
ljmp
add
dec
mov
enter
jo
jge
mov
mov
fbld
ljmp
xchg
into
fucomi
fadd
inc
scas
and
cmp
add
scas
test
ret
mov
mov
jecxz
out
mov
xchg
adc
cmpb
jb
in
stos
cmp
fsts
stos
fists
xchg
sti
fstpl
jmp
lock
pop
xchg
push
aas
shlb
xor
arpl
out
in
je
mov
pusha
jecxz
das
es
add
mov
outsl
ds
jne
pop
icebp
testl
pop
cmovs
cmp
mov
push
mov
mov
or
mov
jnp
pop
mov
add
outsb
jns
mov
out
or
xchg
mov
mov
scas
dec
cmp
add
or
dec
jecxz
outsb
and
aaa
push
pop
sub
add
sub
fnstsw
xchg
dec
xchg
pop
sti
ret
scas
jg
cmp
pushf
repnz
gs
mov
pop
or
movsl
stos
scas
jns
xchg
sub
mov
cmp
mov
cmp
ds
sbb
fwait
enter
dec
fstpt
mov
mov
mov
daa
mov
in
mov
sub
frstor
pop
adc
jns
add
push
sub
and
sbb
loope
jp
dec
rol
mov
shlb
sbb
mov
out
ja
fildl
fwait
jo
test
arpl
jge
jg
lds
sub
push
out
repz
scas
lret
xchg
popa
dec
pop
mov
arpl
and
sbb
loop
inc
ljmp
out
push
and
inc
rolb
dec
mov
pop
cmpsb
imul
fldenv
int
clc
lret
jl
mov
stos
xor
jp
ficompl
pushl
negl
jb
rcrl
sbb
mov
pop
adc
sbb
mov
scas
sbbb
sub
fisubl
out
int3
sub
arpl
xchg
popf
insl
clc
mov
inc
or
lahf
iret
mov
fwait
adc
mov
insb
sub
dec
jmp
xor
jmp
sub
mov
pop
sub
jge
or
out
outsb
fadd
scas
cmc
push
ss
in
pop
iret
and
ss
push
mov
cmc
push
fcomps
ds
sub
scas
in
sbb
mov
xor
mov
cmp
pop
pop
pop
daa
xchg
cmp
icebp
and
cltd
pop
jno
rep
jg
jp
mov
jmp
or
out
mov
test
add
hlt
sbb
movl
mov
pushf
pop
fwait
adc
sahf
lock
or
mov
cwtl
or
cwtl
and
pop
jne
add
or
dec
cltd
repz
xor
xor
imul
icebp
mov
push
out
push
outsl
or
roll
cmp
in
push
dec
enter
movsb
rorb
pusha
imul
lahf
and
shl
out
sub
adcb
bound
mov
xchg
inc
jns
lret
mov
loopne
lahf
xor
cmp
adc
stos
repz
fsubl
mov
lock
cmp
jb
jno
dec
or
lahf
imul
jns
hlt
push
push
xchg
std
cmp
xchg
popa
jo
sbb
mov
or
popf
pop
mov
sub
xlat
push
pop
inc
mov
lcall
ret
dec
fstpt
sarl
xor
std
push
mov
out
push
test
xor
inc
jb
xor
in
leave
cmp
jb
jns
int3
or
mov
push
or
scas
mov
cwtl
push
xlat
fildl
or
or
add
jae
and
loop
sub
sbb
out
out
imul
std
in
mov
in
mov
ret
inc
xor
cli
mov
fldcw
mov
lcall
sahf
dec
jo
jnp
call
inc
loop
das
js
xor
cltd
sbb
adc
cmpsb
jge
mov
jmp
gs
inc
shlb
stc
inc
fwait
and
xor
jo
clc
sub
xchg
inc
xchg
mov
and
fadd
dec
xor
mov
adc
stos
inc
insl
int3
and
sbb
xor
dec
add
cltd
pop
cmp
rep
rcr
mov
xchg
in
jl
and
or
repnz
loope
js
pop
loop
and
data16
ljmp
cmp
xchg
inc
mov
and
cltd
push
jae
sbb
or
movsl
mov
sahf
cmp
pop
and
push
icebp
jb
sahf
sarb
mov
fstps
mov
cmp
or
icebp
je
loop
lahf
in
pop
cmc
and
pop
pop
rcr
pop
cmp
imul
dec
cmc
out
das
pop
stos
pop
sbb
jo
push
xor
cmp
xchg
pop
fdivr
jb
sarl
xlat
and
jb
cmp
inc
push
mov
pop
idivb
rcrl
inc
and
idivb
cmc
mov
pop
lock
xor
xchg
push
cmp
adc
jae
in
cwtl
jecxz
mov
and
lcall
xchg
push
sub
add
pop
or
mov
outsl
mov
out
scas
cmp
cmp
mov
in
decb
dec
jge
ja
mov
in
lods
xor
cmp
jne
push
inc
popl
inc
cmp
jl
daa
xlat
aas
lock
xchg
sar
mov
mov
add
aam
in
int
fs
inc
cwtl
scas
arpl
mov
int
lods
cwtl
jb
sbb
cmp
outsb
adc
arpl
imul
jmp
xor
fadds
popf
cmp
out
jnp
cmp
mov
dec
lcall
insl
adc
lret
aad
cmc
loopne
or
test
inc
mov
sbb
aaa
adc
adc
jae
out
sbb
bound
jae
push
xor
and
insl
xor
sub
mov
cld
ljmp
xchg
movsb
push
push
xor
push
xor
mov
inc
in
inc
jp
pop
xor
pop
shll
cld
lock
hlt
nop/reserved
lret
sbb
loop
mov
movsl
ja
mov
xchg
inc
adc
or
outsb
int3
mov
les
in
outsb
sub
xor
jmp
xor
mov
jge
fcompl
add
in
and
xchg
mov
gs
push
add
std
xchg
dec
or
jae
inc
arpl
push
ret
jl
idivb
clc
adc
int
mov
mov
push
mov
xor
cmpsl
in
lret
inc
xchg
or
sub
push
mov
add
lds
stos
dec
jns
mov
rorb
subb
inc
inc
mov
je
mov
jns
mov
jl
mov
pop
add
dec
fidivrs
or
sbb
jns
mov
mov
fildll
xor
pop
enter
dec
gs
xorb
push
xchg
xchg
ds
xchg
mov
sti
and
jb
mov
mov
mov
xchg
arpl
pop
mov
hlt
enter
xchg
push
bound
sbbb
adc
loope
sub
inc
jne
flds
push
dec
aaa
lods
jno
popa
jno
fsub
test
pop
ret
mov
lret
jge
push
outsb
jmp
pop
xchg
mov
jae
ss
dec
mov
xor
movsl
jmp
sub
shlb
adc
mov
mov
mov
pop
push
pop
mov
adc
xor
shrb
sub
jae
adc
push
in
leave
mov
sub
adcl
cmp
stc
sbb
xchg
repnz
pop
arpl
divl
int3
mov
adc
fisubrs
xchg
leave
imul
pop
sbb
xchg
or
mov
jle
cmp
jl
rcr
mov
fildll
shrb
xchg
stos
stc
fidivrl
mov
mov
stos
int3
cmpsl
lret
scas
add
mov
aaa
sbb
adc
mov
xchg
ficomps
ja
sahf
lods
sbb
xor
leave
jns
mov
jns
or
dec
movsb
fcoms
pop
mov
adc
testl
leave
aad
mov
gs
xchg
cli
shrl
in
es
inc
inc
add
lock
lahf
movsb
test
or
addb
icebp
mov
shlb
std
out
addr16
pop
ret
mov
cmp
arpl
shlb
lahf
push
dec
inc
push
call
inc
or
xchg
in
pop
adc
repnz
int
dec
pop
fnsave
fcoml
xor
shrb
mov
pop
xor
lcall
andb
fistpl
insl
sahf
pushf
sti
mov
insl
add
pop
cwtl
sub
sub
mov
dec
and
daa
xor
in
or
clc
mov
into
movsb
pop
sbb
inc
out
test
fwait
ljmp
add
mov
mov
icebp
lahf
pop
inc
or
xor
xchg
sbb
mov
sbb
dec
insb
rolb
movsl
movl
les
dec
and
push
fldenv
das
push
sbb
clc
sub
sti
cmp
adc
adc
push
and
mov
dec
lret
aaa
or
insb
push
and
inc
mov
pop
mov
shrb
and
mov
ret
mov
or
inc
add
add
subl
lods
or
jae
popa
push
xor
inc
inc
jo
cli
shrb
rcrb
out
adcl
jne
fildll
adc
inc
xchg
iret
xlat
or
mov
sub
dec
xchg
jno
shrl
pop
cmp
pop
loop
fbstp
mov
subb
adc
dec
ds
cmp
mov
daa
mov
jns
popa
data16
xchg
adc
mov
stc
mull
sbb
adcb
pop
out
int3
pop
jno
push
shlb
sub
pop
iret
mov
sbb
inc
subl
mov
jno
subb
test
adc
ret
out
int
notl
test
sub
popl
aad
clc
pop
mov
jb
push
push
push
int3
scas
push
inc
push
cmp
xchg
mov
cmp
mov
push
out
pop
leave
clc
pushf
pop
pop
fidivs
xchg
dec
mov
shll
or
push
imul
loop
jne
daa
imul
shll
pop
jmp
gs
insb
movb
push
call
fdivr
adc
jecxz
fwait
repz
jbe
xor
sar
not
jecxz
xchg
fnstsw
xchg
dec
insl
xor
out
push
add
aaa
mov
fs
mov
pop
lea
gs
lcall
sub
scas
lds
fidivl
int3
push
or
adc
and
sub
dec
inc
ret
pop
pop
sbb
sbb
daa
jbe
aad
fildl
push
mov
mov
jnp
and
mov
nop
jge
out
push
stc
cmp
dec
dec
mov
push
push
mov
out
lret
arpl
inc
xchg
shrl
xor
stos
lock
loopne
jo
shrb
insl
cwtl
xchg
fistps
in
xchg
js
out
pop
test
incb
and
jge
or
sbb
dec
or
insl
iret
out
push
jnp
adc
test
sahf
adc
add
mov
dec
test
cmp
inc
pop
aad
arpl
cltd
add
xchg
lods
pop
subb
xorb
lock
jge
out
lcall
fnsave
lods
insl
sub
fmulp
and
adc
andb
inc
xlat
scas
sarl
lahf
adc
adcl
dec
mov
imul
in
push
xor
movsl
cmc
adc
mov
mov
cmp
fcmovb
pushf
and
aad
addb
mov
adc
test
mov
sahf
jbe
mov
les
fldcw
out
stc
cmpsb
rclb
test
add
in
push
pusha
ljmp
cmpsl
adc
xchg
in
push
dec
pavgw
lahf
push
mov
fsubl
xchg
inc
pop
ja
mov
mov
insb
pop
pop
ret
test
xchg
iret
popf
lods
fdivrl
xorb
xlat
xlat
jo
add
test
mov
mov
add
add
mov
fsubrs
sbb
xor
push
and
xor
call
push
xor
jbe
stos
xchg
bound
les
inc
in
fisubl
out
xor
aas
mov
pop
inc
inc
pusha
fcmove
jae
shll
sbb
cmp
fs
stos
bnd
pop
sti
jb
dec
je
xchg
dec
fucomip
adc
rcrb
mov
fidivrl
hlt
clc
fdivl
fnstcw
outsl
cltd
insb
in
mov
ficoml
xchg
int
fsubrs
fsts
or
cmp
pop
fwait
jp
push
push
outsl
push
mov
adc
jecxz
out
subl
daa
sub
bound
and
mov
ss
inc
jb
call
mov
mov
clc
ss
pop
push
jle
std
call
mov
pop
mov
xchg
enter
sub
or
stos
aas
mov
clc
int
fadds
inc
out
rcrl
imulb
dec
fsub
les
insl
cmp
mov
mov
in
mov
inc
sarb
mov
mov
mov
pusha
cltd
in
icebp
out
mov
in
push
ja
in
out
push
and
sbb
lock
and
insb
ja
mov
or
or
scas
test
rcr
pop
imul
dec
fmuls
and
xchg
sbb
lret
ljmp
popa
or
sti
nop
push
pop
cmpsb
negb
pop
ds
aaa
sbb
rcll
stc
repnz
out
cmpsl
sbb
or
inc
xchg
int
popf
fwait
xor
cmp
push
loope
cs
dec
xchg
cmc
repnz
add
jecxz
adc
sbb
jl
xchg
xor
ss
in
jg
jmp
sbb
out
cltd
ljmp
mov
pop
sub
pop
test
mov
aad
imul
lret
xchg
pop
out
es
lea
lock
xlat
repz
aad
neg
fsubrp
popf
fadd
and
aam
jno
sbb
or
ficompl
mov
ss
ljmp
xchg
cld
jb
adc
mov
stos
mov
cmp
rol
sub
in
je
lahf
jge
push
in
loopne
xchg
cli
stc
jb
out
rorb
xchg
mov
push
mov
or
enter
cmp
in
arpl
add
inc
popa
pop
xor
add
out
gs
jo
sbb
pop
pop
insb
or
sub
dec
outsb
dec
and
sti
bound
jnp
rorb
jg
shrb
jnp
decb
adc
sub
add
xchg
push
pushf
in
std
mov
pushf
sbb
xor
sti
data16
cltd
aas
xlat
push
fstl
in
jecxz
mov
in
mov
dec
mov
xchg
out
imul
mov
push
mov
and
imul
push
add
insl
mov
outsl
jo
sahf
mov
insl
loope
daa
cmp
loopne
inc
dec
mov
in
add
cmp
cmp
inc
mov
fs
outsl
or
sub
push
stos
xchg
test
xor
decl
dec
xchg
ret
xor
sbb
mov
ret
push
sbb
sahf
std
push
fsubrl
push
aad
adc
xor
jle
lds
jne
loop
je
mov
sti
scas
push
add
xchg
outsl
inc
lcall
and
call
xor
xor
xor
mov
adc
popa
test
and
adc
xor
push
inc
mov
pop
aaa
leave
je
xchg
cltd
daa
scas
int
int3
popa
test
jl
icebp
xchg
es
movsb
cmp
pusha
and
pop
aam
cwtl
add
cmp
shlb
das
dec
insl
cmp
push
push
pop
xchg
and
and
pop
je
mov
xchg
and
mov
mov
or
mov
xchg
xchg
int3
push
enter
ds
mov
in
mov
fstpt
ret
pop
sub
dec
dec
inc
mov
inc
nop
mov
fwait
jno
mulb
or
xchg
jl
test
push
xor
iret
push
pop
ja
jmp
jmp
mov
inc
jecxz
adc
xor
cld
or
addr16
mov
mov
push
lock
mov
jb
pop
add
insb
dec
push
mov
inc
cmpsb
test
in
and
jecxz
sbb
les
subb
je
and
into
sub
cbtw
arpl
xchg
inc
add
inc
pushf
mov
dec
push
and
sbb
or
and
mov
cltd
dec
js
mov
inc
call
sahf
pop
jo
fwait
cmp
mov
sbb
imul
shll
stos
jno
mov
in
cmp
pop
add
cmp
mov
mov
and
push
es
lods
aaa
xchg
cli
lock
push
sbb
inc
dec
aad
fidivl
jl
jg
mov
test
pop
js
add
bound
ss
aad
dec
fwait
test
mov
mov
jmp
dec
stc
jle
adc
in
shrb
adc
mov
xor
in
cld
cmpsl
mov
mov
dec
xorl
mov
and
sub
mov
out
or
orb
mov
push
imul
mov
pop
cli
pop
insb
xor
adc
xorb
push
shll
lods
adc
push
cmp
pop
cwtl
mov
das
jno
mov
hlt
mov
xor
mov
fnstcw
push
test
pop
jbe
pop
out
icebp
shll
or
es
pop
test
add
mov
add
stos
into
pusha
bound
leave
xor
out
ss
stos
test
mov
pop
or
add
mov
test
into
push
mov
pop
loopne
mov
insl
adc
push
enter
jb
xchg
pop
outsb
rol
test
mov
testb
jo
lcall
mov
sbb
aas
xchg
or
mov
aam
or
sti
mov
test
inc
ret
fsts
aas
ffree
out
or
sbb
ret
cmp
push
push
pushf
lods
fnstsw
jmp
xchg
popf
xor
int
push
ljmp
andb
jecxz
icebp
cmc
out
sub
pop
gs
add
mov
lea
and
cmp
sbb
pusha
dec
pushf
outsl
jecxz
enterw
adc
mov
mov
push
inc
lret
in
pop
or
push
repnz
jnp
gs
xor
fstpl
dec
out
xor
mov
std
stos
stos
inc
mov
mov
lret
mov
imul
fimuls
sbb
adc
adc
xchg
cmp
xchg
add
fs
mov
test
fnstsw
dec
add
testl
fwait
jg
pusha
adc
stos
and
ss
sahf
push
jns
xchg
outsl
push
in
dec
repnz
divl
out
lcall
not
mov
mov
shrl
mov
leave
jns
mov
dec
xchg
pop
inc
sbb
adcl
std
cmp
xchg
pushf
sub
pop
cli
sub
sbb
push
aad
cmp
mov
xchg
and
push
fs
and
mov
push
fmuls
mov
push
mov
roll
sub
insb
mov
push
mov
lret
xchg
iret
cmpsl
pop
cmp
sbb
pop
ret
das
ret
testl
push
cmp
adc
int
jae
and
inc
insl
repnz
xchg
inc
lea
into
pop
arpl
test
ljmp
rcl
xchg
xor
notl
pop
fstpl
ljmp
mov
dec
pop
add
jno
pop
mull
popa
sub
je
inc
cwtl
fs
ss
cmp
mov
jns
cmp
jne
mov
shlb
adc
or
sbb
loop
pop
xor
cmp
mov
pop
fidivrs
cmp
inc
imull
sbb
lock
movsl
xlat
lods
pop
mov
sub
jns
mov
fnstsw
ds
jbe
loopne
push
call
sarb
and
pop
jno
dec
mov
sub
mov
and
roll
in
push
ret
sbb
jbe
popa
pusha
push
repz
pop
ja
add
fsubs
or
pop
xor
fdivrs
xor
out
roll
js
shll
int3
std
and
xchg
aad
aaa
int
sbb
cmp
popa
sub
and
xchg
adc
ss
cmpsb
insb
aaa
xchg
cmp
xchg
pop
pop
xchg
shlb
test
gs
outsl
sti
mov
movsl
aaa
inc
mov
shlb
adc
inc
cmp
addl
xlat
jmp
repz
cmpsb
cmp
cwtl
cmc
out
lods
insb
add
loop
mov
inc
insl
sbbb
es
jnp
xor
ficoms
ss
xchg
test
pop
cs
insl
and
fdivrl
in
sub
fidivrs
gs
fnsave
inc
hlt
insl
fs
push
std
fildll
mov
add
push
fs
jge
jecxz
mov
sbb
add
dec
and
mov
pop
push
or
dec
sbb
stos
cwtl
aas
outsb
std
out
icebp
lock
popa
cs
pop
cld
jno
jo
and
push
dec
sub
popf
fbstp
lods
insb
xor
pop
or
sub
imul
push
cld
and
inc
xor
scas
int3
ret
inc
add
pop
popf
dec
pop
or
jne
divb
jge
sub
cmpsb
testl
or
adcb
jge
adc
mov
ret
outsl
insl
add
jle
jns
push
outsl
mov
push
aam
push
leave
popf
adc
mov
mov
into
out
dec
sbb
hlt
mov
shrl
mov
inc
inc
jmp
xchg
inc
fstps
mov
data16
std
je
xchg
and
out
aam
mov
arpl
sub
mov
mov
push
and
lret
shlb
jnp
pop
cltd
mull
mov
cmp
shrl
clc
pop
js
lret
xorl
fistpl
dec
data16
jg
push
lret
fisttpl
xchg
js
ret
cmp
push
pop
aaa
fldcw
inc
rclb
mov
test
jae
mov
sbb
push
pop
lock
pop
gs
lcall
jmp
orl
leave
call
imul
mov
into
add
xchg
loope
aad
mov
aam
in
xor
mov
push
add
mov
dec
inc
ror
mov
mov
add
mov
out
fcmove
sub
fnsave
cmpsb
insl
dec
pop
cmp
jne
scas
pop
pop
push
pop
mov
inc
sub
mov
inc
lret
stos
cs
jb
cmp
test
inc
shll
cmc
push
mov
aas
xchg
mov
int
ss
mov
push
xchg
jmp
cmp
fsubrs
ds
inc
push
test
inc
jp
xchg
pop
add
rolb
fsubrl
out
add
stos
loope
sbb
scas
sub
sti
sbb
and
adc
jae
cmp
add
popa
push
xchg
cld
dec
pop
or
test
xor
lret
jmp
mov
inc
sbb
cmpsl
pop
in
enter
daa
cmp
aas
pop
pop
fstps
mov
dec
sub
idivb
push
fmulp
les
clc
jge
rcl
repz
jns
pop
adc
cmc
fbstp
and
loop
in
iret
push
mov
and
sbb
cmp
test
fstps
leave
cltd
fimull
mov
out
jno
sti
sub
rcr
cmpsb
lea
cmp
gs
out
xor
mov
rorb
sub
sub
xor
clc
loopne
pop
fiaddl
movsl
test
cmpsl
movsb
xchg
and
es
int3
mov
fcomip
in
out
ljmp
mov
int3
icebp
movsb
into
dec
shll
popa
sahf
cmc
cmpsb
fwait
cmp
adc
mov
js
loop
sub
pop
mov
loope
push
frstor
dec
andb
movsb
lds
mov
sbb
or
adc
push
xlat
cmc
cmp
or
inc
xor
inc
out
test
in
fdivr
lret
divl
xchg
sahf
or
out
movsl
enter
nop
out
scas
lods
xor
sub
js
scas
out
inc
adc
ss
sbb
insb
xchg
inc
jecxz
and
dec
push
xor
or
add
inc
mov
pop
aaa
or
mov
aaa
arpl
push
inc
or
les
add
std
dec
mov
aas
mov
xchg
push
mov
nop
das
sti
cmp
adc
push
xor
cmp
sbb
inc
int3
mov
imul
cmp
inc
test
lds
inc
sti
push
adc
lods
push
cltd
add
and
test
test
pop
cmp
in
mov
insl
push
mov
push
mov
clc
cmp
es
and
shl
cmp
lcall
decl
ljmp
or
mov
push
pop
test
clc
inc
movsb
fs
in
pop
sub
dec
mov
rclb
insl
das
sub
add
jg
xchg
data16
out
jge
cmp
inc
and
pop
sub
dec
push
jge
sub
scas
inc
enter
xchg
adc
pop
inc
addb
push
arpl
scas
jmp
insl
adc
jecxz
andl
into
cwtl
jmp
mov
xor
dec
outsb
aaa
sbb
or
movsb
add
mov
cmpsl
lahf
push
gs
daa
int
insl
lcall
add
mov
xchg
pushf
jne
add
sbb
outsb
or
call
sbb
cmpsl
mulb
outsb
or
cmp
js
rcll
mov
sbb
xor
fbld
mov
mov
adc
lock
les
push
mov
enter
or
mov
shrl
adc
jge
fildll
xor
add
leave
pop
insb
mov
push
sub
cmp
inc
lock
icebp
cmp
lock
lret
test
sbb
dec
jbe
push
test
or
inc
test
in
xor
cmpsl
jg
mov
cmpsl
shll
shlb
mov
dec
loope
dec
adc
sub
inc
cmp
mov
add
xor
loope
mov
pop
push
test
sti
fdivl
mov
cmpsl
shlb
popa
sbb
cmpsb
mov
pop
adc
mov
loop
js
jle
mov
mov
xchg
add
repnz
inc
add
fwait
jne
ja
mov
adc
pop
in
loopne
into
mov
es
lods
xor
imul
mov
sbb
sub
jl
cltd
jg
or
sub
out
cld
lock
lcall
sub
stos
je
pushf
rcrl
shlb
mov
add
clc
sahf
add
fistl
aad
inc
mov
jle
daa
and
jnp
shrb
imul
mov
xor
cmp
ja
add
sub
xlat
lcall
and
mov
mov
push
xor
sbb
fldt
add
out
pop
xchg
push
out
ret
adc
call
out
movsb
push
inc
mov
rcrl
adc
pop
inc
inc
adc
leave
cmp
mov
icebp
lcall
cmp
sahf
insl
mov
dec
jnp
fcoml
push
jmp
lock
inc
mov
ss
mov
jb
inc
mov
pop
loope
xor
rcr
dec
mov
pusha
xchg
xchg
pop
mov
js
orb
sti
jp
sti
adc
pop
inc
and
jne
mov
jle
lcall
call
push
sbb
mov
pop
imul
imul
imul
xchg
stc
inc
pop
push
mov
into
iret
cmp
jp
cmp
mov
ss
adc
xchg
cltd
adc
dec
xor
cmp
adc
dec
js
aad
data16
xchg
in
lahf
inc
outsb
faddp
cmp
mov
and
notl
hlt
sbb
jge
dec
loopne
das
jo
sbb
sbb
je
push
mov
fisubrl
in
insl
pop
test
leave
mov
sub
cmc
adc
pusha
xchg
enter
xchg
dec
test
push
leave
test
pop
stos
repnz
mov
pop
repnz
gs
repnz
dec
fwait
ret
lcall
xlat
std
outsb
mov
ret
mov
mov
imul
dec
insl
mov
icebp
or
jmp
push
es
xchg
mov
dec
loope
add
dec
push
mov
mov
adc
push
ret
out
add
icebp
jg
mov
jl
aad
sarl
pop
inc
sbb
mov
push
xor
lock
inc
outsl
lock
testb
outsl
sub
std
std
mov
push
arpl
in
mov
loopne
and
mov
clc
cmpsl
push
dec
sub
fwait
jb
outsb
out
xchg
lock
jns
add
or
popf
mov
mov
jns
nop
push
push
ror
add
test
popf
xchg
fsubrl
shr
push
dec
mov
popf
out
cmp
xor
dec
push
jp
mov
es
test
dec
sub
pop
clc
in
xor
inc
adc
xchg
push
push
test
repnz
sub
ja
imul
ja
push
aaa
rol
xchg
dec
xchg
andl
cmp
out
lret
in
jb
in
adc
pop
cmp
or
xor
adc
clc
call
cmp
fistpll
xlat
cmc
dec
or
pop
outsb
push
lcall
and
xchg
push
mov
inc
and
in
or
cmpsl
xor
adc
push
and
ss
mov
pop
aaa
int
dec
clc
neg
fidivs
add
movsb
scas
mov
dec
in
ss
adc
andb
idiv
sahf
fdivl
push
sbb
int
iret
aas
shrl
mov
mov
inc
movsl
jl
cmp
fnstenv
pop
dec
in
xchg
adc
call
jae
pusha
insb
pop
jns,pn
push
xor
pop
rclb
arpl
in
cli
or
dec
call
out
dec
mov
fidivrl
enter
imul
int3
shl
mov
fsts
test
cmp
mov
orl
inc
invd
cmc
aaa
lods
es
daa
push
cmpsl
dec
jne
ljmp
inc
or
xchg
adc
mov
and
lds
loop
loopne
cmp
inc
sbb
cld
ds
test
cld
fcoms
adc
pop
iret
cwtl
mov
jb
push
ljmp
and
sahf
jle
sub
or
leave
aad
push
mull
dec
pop
cmpsb
mov
stos
adc
mov
insl
sbb
mov
vpunpcklbw
arpl
push
and
sbb
xor
push
mov
fcomps
fcmovnbe
out
cmp
roll
sbb
repz
lcall
mov
xor
mov
dec
mov
lods
jge
mov
leave
fs
sbb
xchg
flds
subb
sub
xchg
aaa
ljmp
xchg
sbb
mov
ret
ljmp
cmp
in
stos
dec
jg
cmp
sti
cmp
mov
outsb
sub
repnz
out
xchg
push
iret
mov
not
xor
ja
mov
push
xor
pmaxsw
mov
out
xchg
fwait
imul
outsb
dec
sbb
jle
call
fwait
out
sub
popa
push
outsl
pop
fidivl
stc
push
push
movsb
add
push
mov
mov
or
call
mov
mov
mov
sub
in
test
fwait
lret
inc
js
lahf
inc
inc
mov
fcmovb
adc
pop
sub
adc
fbstp
and
pop
dec
dec
les
adc
mov
cmp
add
xor
push
mul
inc
icebp
sub
int
sarl
bound
pop
push
cmp
shl
fs
inc
in
out
jae
imul
fwait
imul
xchg
mov
rolb
mov
lret
xor
cmpsl
xchg
xchg
sub
mov
in
loope
insl
scas
ja
pop
xor
xor
push
pop
adc
push
loope
or
in
pop
aaa
in
movsb
dec
pop
gs
jmp
pop
hlt
nop
mov
frstor
addr16
or
pop
xchg
dec
js
rorl
hlt
sub
pop
inc
int
cmp
xor
icebp
insl
or
pop
mov
or
xor
loopne
jnp
or
push
or
aas
xor
cmp
loop
movsl
push
fnstsw
inc
dec
xchg
sub
dec
test
jo
repnz
sbb
rcl
aaa
pop
stos
mulb
xor
jg
push
stos
out
adc
jne
push
popf
fldenv
sub
mov
sbb
das
pop
sub
testl
fldl
inc
insl
aam
inc
daa
mov
scas
adc
dec
aaa
inc
fcoml
cwtl
mov
mov
sub
inc
leave
pop
mov
xchg
std
ficoml
mov
xchg
sahf
adc
xchg
shll
testb
pop
cmp
out
hlt
jg
enter
nop
adc
arpl
sbb
dec
dec
push
adc
loope
outsl
mov
xor
sahf
shlb
sbb
cmc
jle
jnp
mov
sbb
rcr
fsubl
cmp
cmp
lahf
jno
adc
add
add
cwtl
outsl
adc
scas
sbb
cld
adc
mov
or
cmp
popf
adc
jbe
mov
xchg
push
fcomip
aam
data16
imul
and
mov
aas
mov
xlat
mov
stos
int3
in
ret
andl
jnp
mov
aad
loop
out
dec
dec
sbb
or
xchg
icebp
int
lods
xor
mov
xchg
mov
in
mov
and
pop
xor
ror
or
je
gs
clc
and
xor
popa
pusha
push
ja
push
ljmp
ret
add
in
jbe
cmp
and
jb
mov
xchg
and
jns
jnp
dec
imul
push
cwtl
aas
imul
into
lahf
movsb
mov
push
arpl
push
out
inc
jle,pn
pop
ret
enter
or
inc
inc
xchg
sbb
enter
enter
gs
daa
sbb
int
hlt
and
mov
xchg
lods
pusha
sub
push
mov
imul
jle
movsl
popa
dec
iret
bound
cwtl
rcrl
cmovae
sub
cmpsl
das
aam
jae
sti
push
push
icebp
loopne
fs
mov
aam
pop
dec
dec
xor
dec
cmp
outsb
xor
gs
or
sbb
gs
xor
cltd
nop
pop
ss
nop
js
mov
mov
sub
mov
push
stos
mov
mov
and
add
in
sbb
testb
lret
push
and
divb
insl
mul
inc
push
xor
add
mov
adc
stc
inc
std
mov
loope
arpl
jg
fimull
movsl
lret
push
mov
mov
inc
imul
insl
lods
imul
loop
jge
outsb
xchg
adc
cmp
cld
stos
aaa
or
rcll
push
mov
sti
daa
mov
xor
bound
mov
out
cmp
ss
pop
es
in
push
cmc
push
and
loopne
loope
aad
push
into
mov
mov
mov
stc
fnstsw
jb
adc
dec
aas
mov
mov
xor
or
ljmp
pop
jecxz
mov
adc
jge
pop
pop
mov
in
ljmp
cmc
inc
cmp
add
hlt
or
stc
sub
xor
push
stc
arpl
sub
adc
mov
aaa
pop
fwait
and
adc
rcll
test
mov
xor
out
xorb
sar
add
pop
cmpsb
push
dec
data16
pusha
xor
sbb
daa
cld
fcoms
fiadds
mov
mov
cltd
clc
add
cmpsb
push
cltd
cmp
jb
jp
fyl2xp1
push
cmp
xor
jl
bound
fbstp
aas
es
movsb
cmp
leave
mov
shll
cld
adcb
xor
adc
inc
mov
push
ja
and
repnz
loop
movsb
push
repz
das
push
not
mov
cli
cmc
adc
pop
shlb
fs
call
xor
ficomps
add
loope
cmp
pop
jo
inc
in
or
fneni(8087
push
dec
push
push
cmpsb
movsb
sub
adcb
adc
movsb
mov
mov
cmpsb
cmp
mov
pop
mov
ss
popf
loope
inc
cltd
add
ret
sbb
jp
mov
push
fdivl
scas
fsts
loop
ud2
inc
leave
aaa
push
xchg
negl
jl
insl
data16
fucomip
cli
mov
push
notl
jecxz
insl
fcompl
or
aad
loop
jb
or
dec
dec
test
aam
push
adc
ss
out
cmp
movsb
mov
jno
mov
fcompl
mov
jnp
hlt
inc
and
jo
mov
in
pop
fidivrl
or
mov
fisubrs
mov
sub
xchg
or
cwtl
adc
cmp
fsubrl
xchg
scas
aas
test
mov
cmc
push
push
pop
mov
cltd
cmp
xchg
push
lods
mov
xchg
mov
insl
js
sub
sbb
push
pop
mov
inc
int3
call
jo
outsl
stos
or
ljmp
xchg
ljmp
sub
add
pop
cmp
push
xor
inc
xor
test
lahf
xchg
mov
jl
xor
fcomip
fs
mov
mov
cltd
xor
jg
cmp
data16
mov
cmp
push
jns
push
mov
cmp
cmp
xor
jle
inc
fadd
rorl
and
gs
popl
lret
or
int3
nop
xchg
int3
xchg
aaa
ds
sub
mov
push
loopne
popa
into
cmp
inc
out
inc
sbb
aad
mov
sub
fs
rol
and
outsb
data16
data16
and
sbb
xchg
insb
inc
in
add
idivl
stc
loop
pusha
jno
js
or
adc
lret
add
lds
xor
cli
gs
lods
jg
push
mov
bound
test
xchg
int3
inc
pushf
aas
std
push
jle
push
test
cmp
adc
jnp
xor
gs
out
ljmp
js
cmp
in
lods
mov
push
inc
jne
mov
adcl
fs
addr16
or
sub
imul
mov
jno
and
mov
inc
fiadds
adc
test
int
std
imulb
pop
mov
in
arpl
fcoms
mov
and
sbb
mov
mov
and
inc
pop
sbb
xor
push
and
pop
movsl
adc
fnstenv
jnp
mov
xchg
jns
lods
jg
push
addl
pop
xchg
std
xchg
xchg
test
cmpsl
in
adc
fisubs
jp
xchg
xchg
mov
push
scas
rorb
fwait
in
sbb
rcrb
scas
stos
sub
pop
or
lods
push
xorb
shlb
cmpsb
mov
iret
dec
aas
dec
cmc
test
or
mov
pop
cwtl
add
stos
push
insb
arpl
fmulp
mov
and
push
ss
xchg
jns
inc
repz
dec
inc
sub
cwtl
mov
insl
outsb
rolb
mov
ja
ljmp
scas
pop
mov
dec
jl
dec
pop
jo
push
pop
push
addl
mov
jb
insl
pop
lret
inc
mov
insb
mov
out
jp
popf
cltd
push
dec
lcall
sub
and
ret
fisttpll
ja
pop
xchg
movsb
push
sarb
cs
xor
mov
aas
jl
pop
fsubr
clc
subb
mov
add
cmp
lret
mov
sub
fists
sub
arpl
sub
sbb
xor
test
out
mov
jb
cmpl
push
adc
repz
das
sbb
push
mov
xor
das
jmp
in
inc
repz
out
enter
loop
out
scas
xor
push
xchg
out
loop
and
movd
leave
jmp
add
sub
cltd
inc
insb
cld
inc
push
int
push
pop
add
gs
pop
jo
cmp
xor
test
divl
push
mov
ds
push
cmp
incl
daa
iret
jle
sarb
xchg
cwtl
xchg
stos
sub
add
iret
iret
icebp
dec
jl
es
out
inc
mov
subb
mov
fnsave
sub
fucomip
push
pop
out
out
push
fisttpl
outsl
das
cltd
sub
int
pop
cmp
and
mov
scas
add
lock
repz
xchg
xchg
adc
ret
out
or
or
mov
pop
movsb
jle
pop
mov
icebp
and
repz
movsl
lret
add
push
fildl
arpl
sub
stos
sub
lahf
mov
gs
inc
lret
cmp
and
mov
ficoml
cmpsl
push
nop
lcall
movsl
jne
inc
inc
mov
js
mov
adc
jg
xchg
sub
das
xor
mov
cli
dec
pop
call
arpl
jns
lea
cmp
lcall
cmc
pop
pusha
lret
inc
cmpsl
fisubl
inc
cmp
daa
sub
adc
mov
cmpsl
shr
and
and
dec
mov
dec
add
adc
push
sbb
jb
fistpl
fmul
jp
mov
sbb
cmp
out
and
mov
mov
inc
mov
pop
gs
pop
mov
divps
ljmp
ret
insb
jo
sub
xorb
orl
push
jnp
aad
mov
mov
leave
hlt
iret
ja
scas
call
add
in
dec
jae
lods
in
cmp
rcrl
test
mov
mov
add
leave
rcl
enter
adc
in
sub
push
mov
sarl
xchg
mov
mov
sub
pop
stos
push
fcompl
cmc
ja
cltd
xchg
adc
sub
lret
xor
inc
pop
cmc
jp
xorl
dec
enterw
fimuls
call
sub
pop
add
ror
enter
push
leave
fistpl
xchg
add
inc
loope
shll
xor
or
sbb
imul
sbb
daa
jp
stos
fwait
inc
jb
dec
test
das
adc
xchg
sub
fcomi
and
call
leave
push
cmp
outsl
xor
js
cmp
cmpsb
mov
sbb
sahf
aam
out
je
jecxz
adc
sub
mov
push
fistps
leave
add
cmc
rclb
cs
cmp
fcmovbe
mov
les
mov
aas
cmc
push
lcall
in
cs
leave
insl
jl
jle
push
je
test
out
inc
jno
cmpsb
aam
rorl
xchg
ljmp
lods
mov
subb
fs
push
ss
and
out
in
mov
das
stos
das
push
fnstenv
xchg
fcmovnu
mov
imull
pop
lock
pop
sub
adc
inc
push
imulb
or
out
es
bswap
nop
cmpsb
pop
sbb
mov
aad
test
pusha
test
jmp
sbb
shll
mov
popf
mov
adc
push
jo
mov
mov
jmp
add
popf
adc
sti
inc
add
insl
xchg
mov
xchg
stos
sbb
push
das
and
sbb
lcall
xor
pushf
ds
push
or
daa
mov
int
rcl
push
jecxz
mov
mov
js
xchg
xor
out
sbb
mov
sub
jo
jmp
loop
mov
jle
pop
mov
jle,pt
andl
popf
cmp
add
pop
loope
sub
cld
adc
stos
pop
je
jg
push
shlb
push
popf
sbb
jmp
data16
imul
dec
dec
inc
movsb
in
int
setno
xchg
inc
and
mov
xchg
ljmp
loop
ret
ror
ja
mov
lret
stc
cmp
lcall
ja
push
insl
das
sub
fmuls
adc
popf
or
shlb
divb
sbb
bnd
dec
xor
and
xchg
aad
stos
xor
test
sub
adc
out
lock
sub
push
insl
dec
aam
mov
fldenv
mov
adc
xchg
sbb
mov
jmp
pop
push
dec
xor
and
cmp
test
out
mov
nop
jecxz
sbb
push
inc
mov
out
ret
add
ret
and
xor
outsl
rorl
adc
cmpsl
js
jb
xchg
adc
loopne
mov
add
mov
in
mov
out
xchg
fs
push
imul
lock
int3
ret
and
mov
xor
xor
mov
cmpsb
leave
clc
test
dec
or
adc
bound
sbb
sub
pop
xor
and
mov
pop
pop
and
mov
mov
and
enter
cmp
or
in
test
push
in
add
pop
insb
sbb
pop
jl
pop
and
add
ficomps
mov
mov
idivl
into
aam
lret
xchg
call
ja
insb
push
fs
inc
outsb
pop
sub
and
shl
in
and
mov
ja
cmpsb
sbb
data16
loop
popf
pop
xor
stos
sbb
cmp
cmpl
jmp
push
jne
andb
sbb
popa
xchg
mov
inc
add
inc
mov
cmpsl
xchg
dec
loop
daa
in
xor
jl
lahf
in
jecxz
push
pop
sub
mov
cltd
clc
xchg
mov
ljmp
repz
push
pusha
mov
iret
mov
adc
mov
fwait
pop
add
movsl
inc
dec
or
xchg
les
sub
xor
pop
fidivrl
bound
inc
daa
mov
xchg
insb
mov
xchg
jo
cmp
cmp
test
fwait
mov
mov
mov
shll
stos
cmp
dec
mov
mov
sahf
jae
lret
cld
push
in
jno
negl
cwtl
sbb
das
call
mov
call
inc
add
xchg
in
fsubs
lock
push
fcoms
repnz
in
mov
and
adc
das
inc
mov
into
xor
fisttps
jno
cmpsb
flds
shl
aam
data16
cmpb
loopne
cmpsl
inc
pop
mov
pushl
and
mov
std
inc
sbb
cmpsb
test
or
push
shr
arpl
insb
insl
or
sub
xchg
jg
ret
xor
or
jae
cwtl
cmp
mov
push
stos
iret
iret
repnz
push
cmp
mov
xchg
xor
or
in
arpl
movsb
sbb
mov
push
mov
mov
push
popf
pop
iret
rclb
shrb
inc
cmp
adc
push
fnop
add
imul
and
adc
test
shlb
or
mov
and
push
and
hlt
out
and
jp
sahf
sub
mov
lock
sub
inc
inc
loopne
sahf
jnp
dec
mov
loope
fisttps
adc
fidivl
mov
loopne
pusha
sbb
fists
pop
fwait
cmp
rcll
push
lret
rclb
jne
subl
adc
dec
adc
out
sbb
popf
enter
imulb
mov
bnd
sub
inc
and
out
cli
or
ret
mov
and
fsub
in
pop
shrl
dec
out
jp
mov
outsb
das
mov
cmpsl
push
mov
fstpt
adc
mov
xchg
mov
mov
out
insl
inc
xchg
pop
iret
or
aad
cmp
out
out
pop
cmp
popa
or
sbb
xchg
mov
push
fadd
enter
rcr
pusha
cmpsb
testb
dec
hlt
rcr
cmp
xchg
cmpsl
test
dec
adc
mov
xchg
fsubrs
jle
xchg
xchg
cmp
cld
and
and
mov
sbb
cmp
fwait
adc
cmp
push
ja
rolb
dec
pop
adc
std
sbb
and
jne
mov
add
mov
decb
stc
loope
xchg
adc
push
aam
mov
cmpsb
xlat
pop
or
push
rcll
mov
pop
jl
shll
stos
stos
mov
adcl
adc
xlat
lret
in
mov
mov
leave
faddl
fs
mov
inc
lea
int
dec
scas
mov
jecxz
movsl
negl
xchg
pop
dec
repnz
icebp
lret
xor
mull
dec
and
repz
cmpsl
xchg
loop
or
fcmovb
add
push
mov
push
je
or
call
mov
inc
jbe
aaa
ja
xor
bound
int
adc
add
in
xchg
loope
mov
jo
or
testl
and
test
dec
or
ret
adc
js
dec
stos
jl
stos
jmp
jecxz
lock
dec
lds
jmp
les
in
fildl
call
lret
sbb
push
dec
or
int
call
sbb
xor
fiadds
aas
aaa
sub
outsl
out
adc
inc
movsb
mov
inc
mov
into
lea
aam
dec
in
hlt
cmp
imul
or
mov
pop
int
or
or
mov
int3
jle
sub
pushf
xchg
and
and
push
push
addr16
lock
div
push
adc
daa
xchg
dec
jp
jge
aad
push
fwait
in
ret
int3
fists
mov
pushf
mov
fs
mov
shlb
je
sti
sub
ss
insb
addr16
and
dec
ficoml
out
scas
sbb
jge
mov
mov
call
js
movsb
sbb
cmp
mov
das
fwait
sbb
jecxz
cwtl
inc
imul
dec
xchg
sub
adc
testl
dec
jns
jg
xor
xlat
in
scas
jecxz
sbb
sbb
imul
cwtl
mov
fimull
inc
divb
xlat
mov
jns
aam
data16
aaa
arpl
inc
pushf
popa
inc
dec
cmpsl
sbb
int3
inc
mov
inc
add
and
sbb
lcall
outsb
xor
adc
push
cmp
enter
sub
mov
xchg
sbb
out
sti
pushf
lods
pusha
mov
jecxz
adc
pusha
sbbb
or
inc
mov
xchg
rolb
outsb
push
xchg
lds
cmp
sahf
fmul
xorl
cli
or
mov
xchg
sbb
call
inc
or
lds
inc
or
or
add
shll
out
sub
push
mov
lahf
int3
popa
xchg
sbb
adc
mov
fs
mov
cmp
xchg
push
int3
mov
inc
mov
cwtl
scas
xchg
fistl
mov
das
iret
inc
out
mov
leave
cmp
mov
shrl
cmpsl
mov
call
nop
push
outsb
pushf
sub
cmp
dec
adc
push
pushf
push
test
xchg
cmp
call
xchg
test
push
cmp
push
in
pop
hlt
xor
xchg
les
cwtl
cltd
cltd
mov
jge
adc
and
pusha
inc
fwait
fwait
or
int3
cmp
cmc
bound
adc
xchg
add
sarl
add
sbb
xor
add
xchg
xchg
mov
and
xchg
push
pop
int3
sti
inc
rclb
cld
cltd
push
imul
mov
movsl
fwait
push
std
or
sahf
pop
or
dec
aad
test
add
insl
test
sbb
push
pop
mov
pop
xchg
adc
ds
push
lahf
mov
mov
jns
enter
cmp
mov
and
and
xchg
out
mov
das
xor
and
lds
pop
mov
loopne
outsl
inc
mov
leave
add
mov
or
jnp
xchg
ret
sub
xor
push
add
mov
int
inc
mov
sbb
inc
dec
push
mov
mov
adc
cld
lock
push
adc
mov
lods
jge
xlat
jno
pop
cmpb
lds
adc
std
inc
and
push
sbb
pop
lods
xor
push
xor
scas
push
sub
xchg
js
sub
sbb
xchg
outsl
lret
mov
xor
es
mov
and
out
fnstcw
fdivs
sti
pop
sub
jg
push
pop
stc
and
aam
mov
std
mov
fs
inc
jp
adc
jle
in
cmp
inc
dec
js
aaa
or
iret
cld
es
cld
and
push
push
inc
jne
popf
aaa
rorl
rolb
mov
call
scas
sub
in
jecxz
cmp
rorb
cmpsb
pop
dec
jle
out
call
fwait
and
push
or
cmp
sub
mov
push
arpl
jnp
jg
out
jb
pop
sub
inc
cli
cmpsl
movsl
xchg
mov
xor
lds
cmp
cmpb
mov
pop
in
not
xor
into
or
xchg
xor
lods
mov
sbb
pushf
in
cld
add
mov
and
mov
lods
xchg
push
push
int3
stos
jg
sub
jb
mov
adc
jl
stos
add
pop
int
jae
mov
ss
out
arpl
lret
mov
dec
mov
sub
scas
leave
jl
or
push
stc
stc
int
jae
or
ficompl
loope
cmc
dec
adc
xor
icebp
inc
or
test
cmp
cmp
or
xlat
or
sub
scas
push
imul
mov
vfrczsd
movsb
shlb
dec
sbb
xlat
in
inc
dec
lret
repz
or
js
mov
xor
mov
pop
lret
push
dec
sahf
icebp
lods
push
mov
jno
dec
ss
dec
jne
mov
lcall
adc
pushf
xchg
std
lods
jge
sub
adc
or
cmp
das
pop
pop
fwait
iret
jl
stos
dec
jbe
adc
or
in
pop
add
xchg
test
outsb
push
cmc
movsb
pop
stc
xor
jge
fbld
inc
inc
xor
pop
jne
bound
pop
cs
push
arpl
dec
call
sbb
popf
sahf
cld
shll
jg
add
add
mov
nop
ja
xchg
out
test
mov
rorl
clc
fcom
push
cmp
icebp
loopne
fdivrl
push
shlb
popa
adc
or
insb
mov
push
adc
scas
jle
das
aad
cmp
and
aas
ficompl
cmpsb
mull
inc
rol
outsl
xchg
lret
jmp
lret
enter
mov
outsl
cmp
jno
push
sub
mov
xor
and
nop
pusha
lahf
mov
mov
and
fidivl
out
inc
add
fwait
or
andb
je
rcrb
outsl
cmc
jecxz
xor
cmp
sarb
sbb
xchg
iret
mov
out
xor
and
adc
test
inc
mov
mov
pusha
in
ja
pop
in
loope
loope
out
mov
mov
movsl
pop
mov
loope
cltd
inc
dec
add
mov
ljmp
insb
nop
cmc
hlt
cs
inc
sbb
cli
adc
jbe
dec
push
jl
les
les
sub
and
dec
pop
daa
xchg
xchg
stc
sbb
call
lret
dec
jno
cmp
popf
lods
add
addb
sub
sbb
pop
mov
addb
popa
loop
in
mov
adc
int3
in
xlat
repz
sahf
ljmp
mov
mov
xchg
mov
aas
out
mov
lcall
sbb
insl
push
imul
jmp
stc
jmp
movntps
and
stos
sbb
pusha
movsl
adc
stos
jmp
sub
aaa
jae
in
imul
in
push
ret
dec
add
mov
dec
pusha
pop
and
fisubrl
push
push
incb
xor
movswl
loop
maxps
clc
data16
add
add
push
int
je
mov
jo
or
push
cmp
lret
je
sti
cmp
sbb
jecxz
sbb
iret
mov
push
mov
clc
cmp
jmp
filds
lea
cmp
insl
mov
mov
sbb
outsb
aam
stos
jecxz
mov
fldenv
sti
call
jns
pop
sbb
cmp
xor
xchg
mov
dec
dec
outsl
fchs
dec
lcall
pop
xchg
mov
popa
icebp
hlt
mov
pop
fwait
add
cmp
xlat
sub
push
mov
and
ds
push
add
mov
pop
or
push
icebp
std
call
sub
cmpsb
lcall
inc
add
ljmp
je
in
ss
mov
dec
hlt
pushf
lret
fcmovnbe
and
inc
and
cld
inc
or
xchg
incb
orb
adc
push
push
js
xchg
jns
scas
lret
mov
add
push
gs
daa
jb
in
imul
inc
incl
enter
pop
push
inc
outsb
push
pushf
test
fidivrs
dec
pusha
sbbb
fwait
lret
jle
cmp
popa
repz
mov
or
add
sarb
sahf
pop
test
jecxz
ss
sbb
dec
sbb
sbb
mov
sbb
dec
into
aaa
pop
inc
and
add
xchg
sbb
loopne
cmp
movsb
or
icebp
mov
sarb
cltd
les
lock
sahf
imul
mov
cmp
push
int
lds
mov
negl
mov
loopne
out
cmp
and
push
test
cmpsl
xchg
mov
xor
mov
adc
mov
mov
pop
fwait
clc
daa
xlat
or
div
mov
mov
dec
lret
pop
imul
mov
jnp
or
xlat
pop
mov
mov
add
or
fwait
pop
or
jo
cmp
call
sub
mov
fnstsw
cmp
push
or
sbb
cmp
sub
sbb
xorl
jne
inc
mov
aaa
sbb
pop
sub
sbb
mov
mov
cmp
insl
mov
dec
ret
test
inc
jnp
pop
stc
ljmp
adc
pushf
mov
shr
mov
ja
fildl
daa
add
pop
or
cli
mov
loop
and
ss
lahf
inc
icebp
or
addr16
insb
mov
xchg
xor
mov
cmp
cld
and
nop
or
filds
inc
ljmp
mov
pushf
icebp
outsb
das
jg
arpl
mov
jnp
movsl
pop
pop
ret
ja
fidivrs
loope
aas
std
iret
aad
push
mov
cmp
dec
cmc
movsb
lret
sbb
push
dec
fstl
popa
mov
and
dec
jle
jle
cmp
stos
sbb
out
push
movsb
out
xchg
bound
imul
fidivrs
icebp
inc
dec
gs
pusha
loope
dec
mov
mov
push
pop
push
fdivs
mov
negb
aam
sbb
xchg
aas
inc
cmc
std
lods
add
inc
pop
nop
sub
test
xchg
jge
addr16
popa
pop
add
cmpsl
xor
cmc
out
push
daa
inc
cmp
imul
inc
sbb
dec
stos
fistpl
or
jp
loope
popf
push
pushf
sub
pop
or
imul
xchg
ret
into
lods
ljmp
sbb
outsl
repnz
add
push
cmp
sub
outsl
pusha
or
jge
or
jg
cld
ret
aas
inc
push
mov
inc
rcrl
pop
aam
insb
rcll
loopne
jecxz
pop
jne
mov
sbb
mov
or
mov
jae
movsb
ficomps
xchg
out
adc
mov
push
dec
and
fucomip
std
adc
adc
adc
mov
sahf
push
loop
jno
aas
lds
cs
dec
and
in
mov
stos
pop
fisttpl
out
ficoms
pop
cmp
inc
cmp
int
je
frstor
mov
push
addr16
or
push
jmp
mov
lret
cwtl
pop
sub
add
popf
lret
enter
loopne
fidivs
or
dec
inc
sbb
mov
pop
popa
cs
rcrl
mov
aad
and
fidivl
cltd
adc
xor
mov
addr16
mov
mov
shl
cs
adc
add
push
insb
xchg
ret
test
lods
jmp
bound
int3
shl
xlat
inc
insl
push
ds
mov
lock
mov
shrb
sub
fs
dec
daa
jmp
mov
js
stc
pop
out
lret
out
rcl
pop
int
popf
xlat
cmp
ror
jno
js
pusha
dec
scas
mov
inc
mov
mov
and
or
repz
xchg
jns
or
bound
inc
cld
dec
push
outsb
mov
mov
sbb
out
inc
push
and
xchg
mov
jnp
clc
imul
pop
inc
test
jle
int3
push
in
out
mov
sahf
mov
clc
fstp
sub
add
lret
loopne
add
mov
mov
push
fsubs
pop
int
in
adc
lea
scas
es
sti
cmp
push
imul
loopne
imul
xchg
push
aam
nop
insb
push
scas
mov
sbb
push
adc
insl
mov
dec
ret
test
cmp
adc
mov
jo
sub
icebp
and
sahf
inc
es
repnz
xor
lods
ja,pt
hlt
pop
out
mov
add
setnp
mov
and
xchg
int
mov
rcrl
iret
lods
mov
call
mov
or
cli
sub
sarb
in
cli
ret
mov
test
xchg
mov
ss
fdivrs
xchg
roll
lock
cmp
push
push
sbb
mov
sbb
xor
ljmp
pop
xlat
mov
daa
dec
inc
sub
dec
mov
hlt
dec
into
dec
out
jp
fistpl
cltd
inc
add
fwait
addb
sbb
push
jne
lock
xchg
pop
cmpsb
outsb
fcoml
add
and
mov
shrl
mov
insl
in
rep
test
add
pop
iret
out
dec
gs
push
movsb
xor
pop
test
stos
sbb
jmp
fbld
mov
and
in
shrl
and
xorl
inc
repnz
cmp
mov
and
sbb
dec
cmpl
insl
mov
sti
loope
add
push
loopne
adc
ds
pop
inc
inc
pusha
pop
les
xchg
inc
cmp
push
jl
bound
cltd
cmp
jno
dec
mov
pop
js
sbb
pop
repnz
jg
push
rorl
ret
test
and
lahf
lret
jg
dec
repnz
adc
data16
popa
incb
outsl
icebp
mov
rorb
sbb
mov
push
ss
pop
stos
sub
loope
or
leave
out
outsb
rcr
cmc
xor
das
jo
insl
xor
xor
fs
jg
adcb
cmp
test
lcall
mov
dec
pop
mov
andb
lret
aad
stos
cmp
fcoms
xchg
adc
outsb
ret
aas
fs
sarb
fwait
test
popf
mov
hlt
cmc
fcoml
clc
mov
xor
testl
movsb
push
xchg
push
lods
and
fucom
adc
inc
adc
add
xchg
hlt
xor
jmp
add
mov
iret
int3
in
paddb
mov
je
cld
mov
sbb
imul
clc
rorl
push
pop
jns
jb
mov
addr16
out
sbb
or
mov
outsb
or
sbbl
dec
xchg
sub
insb
into
sti
in
fisttpl
push
out
and
mov
imul
mov
jp
fsts
adc
pop
push
outsl
push
out
mov
outsb
add
test
mov
popa
arpl
inc
and
inc
xchg
and
sbb
dec
rclb
pop
dec
mov
cmc
or
jp
adc
push
out
repz
imul
flds
inc
lods
mov
pop
das
mov
adc
das
xor
test
ds
fcmove
pop
mov
push
pushf
xor
xchg
je
cld
adc
mov
jg
sbb
or
test
fisubl
rclb
fsubrs
pop
push
mov
mov
inc
icebp
mov
pop
int
xor
or
shll
jl
dec
loope
inc
mov
push
or
jne
imul
xor
cmp
sti
mov
pop
mov
shll
push
fcoms
sti
push
dec
xchg
in
leave
jnp
mov
inc
sbb
mov
mov
cmp
mov
fsts
sbb
loopne
fnsave
cmc
inc
call
lods
adc
lret
xor
adc
pusha
std
sbb
sub
scas
leave
jb
loope
adc
and
and
and
call
adc
aad
loope
rcrb
es
adc
outsb
pop
inc
xchg
rolb
jmp
inc
push
ret
aas
rorb
out
hlt
addr16
pop
sahf
pop
jne
lock
and
cs
les
mov
xchg
jle
push
int3
hlt
push
clc
xor
fisttps
lcall
icebp
cs
xchg
mov
icebp
cmc
xchg
stc
or
sub
out
xchg
icebp
mov
mov
mov
jecxz
cmc
jne
pop
xlat
movsl
pop
ss
cmp
inc
iret
into
cmp
and
and
lret
ret
clc
sahf
inc
dec
push
bswap
dec
sahf
push
xchg
loop
push
movsl
jmp
lret
inc
insb
inc
cmp
ret
ss
fistl
sbb
pop
mov
push
mov
faddl
and
inc
mov
fildll
and
into
in
and
mov
sub
push
or
int3
xchg
shrl
mov
lods
rorl
mov
inc
test
fs
mov
fcoms
cli
dec
or
add
jp
cmp
addr16
cmp
sub
mov
repz
les
push
inc
adc
ja
sbb
mov
dec
cli
mov
ja
stos
iret
xor
or
test
jmp
dec
loope
out
jecxz
mov
ficompl
out
cmpsb
fisttps
inc
int
jne
inc
std
push
jecxz
or
push
jle
lcall
inc
mov
push
popa
dec
fstpt
dec
fldt
sbb
das
stos
jle
xor
shr
pop
cmpsl
pop
inc
ret
setns
jns
push
ljmpw
fldt
repz
out
jb
and
cmpsb
scas
and
mov
sub
or
and
jbe
adc
fidivs
fstl
xor
sub
and
and
jle
cs
mov
dec
test
pop
out
push
and
out
xchg
test
cmp
test
arpl
cmpsl
inc
mov
xorb
jge
pushf
mov
fsubl
inc
movsl
add
shlb
dec
mov
push
ja
dec
push
pop
sub
dec
fmull
add
clc
stos
push
into
test
jne
lret
ljmp
jp
jge
rol
imul
popf
sbb
xchg
jb
add
lret
dec
sub
xor
pop
sbb
cmp
shll
xor
sub
js
xor
jp
push
lods
cmpsl
rorb
popf
dec
cmc
and
cld
mov
imul
aas
mov
sbb
cmc
fsubs
in
arpl
add
jnp
pusha
mov
enter
or
mov
xchg
les
clc
lcall
inc
fstl
out
lea
adc
jnp
fstps
mulb
mov
mov
sbb
adc
or
daa
in
jecxz
call
clc
jge
xchg
mov
add
xchg
iret
dec
sar
cmpsl
mov
jmp
mov
mulb
inc
sub
stos
loop
daa
rcll
les
jmp
jecxz
jmp
xor
jbe
mov
jnp
shrl
and
mov
push
out
aad
loope
jne
mov
jo
push
mov
repz
pop
cmp
push
cmp
or
roll
subb
xor
test
xchg
mov
int
setle
xchg
add
and
xchg
xchg
pop
icebp
notb
sub
mov
jo
lods
sub
lods
mov
pop
mov
lret
decl
jle
mov
xlat
push
add
cmp
fnstenv
adc
and
inc
push
call
or
push
jnp
inc
adcl
rcrb
push
mov
fisubrl
cltd
sbb
xor
enter
ja
in
add
pop
hlt
sti
sbb
mov
adc
adc
sub
lds
mov
leave
push
or
adc
pusha
jl
adc
adc
or
jl
lds
imul
sbb
ret
and
movsl
icebp
lret
orb
std
xchg
hlt
cltd
out
adc
and
popf
jge
repz
xor
and
adc
push
push
xchg
cmp
cltd
adc
mov
mov
test
jmp
adc
loopne
pop
push
mov
sbb
jecxz
mov
or
sbb
xchg
movl
xor
inc
roll
xor
test
push
cmc
cs
pop
arpl
cmp
sbb
addr16
mov
jae
or
pop
bound
inc
push
xor
icebp
jp
sub
loop
cld
cmp
lea
mov
mov
imul
mov
loopne
out
cmp
inc
xor
daa
ret
gs
cli
shll
jno
sub
dec
and
cmpsb
stos
stos
push
jns
jge
inc
inc
jle
xor
inc
stos
bound
sti
scas
call
call
adc
fidivrs
xorl
int3
push
lcall
js
dec
rcrb
pop
mov
and
xor
jnp
mov
mov
dec
mov
cmp
jg
push
rcl
lds
fisubrs
lds
xchg
cltd
cmp
loope
sub
or
ljmp
popf
cld
out
inc
fbld
rorb
xchg
repnz
clc
cmc
scas
adc
into
xlat
adc
cs
out
xchg
out
loope
adcl
xchg
or
pop
mov
cltd
mov
jne,pt
add
dec
scas
inc
iret
lods
and
sbb
xchg
add
icebp
inc
clc
popa
inc
xor
xchg
mov
dec
fstl
je
jae
lock
mov
fdivp
dec
icebp
subl
cmp
setle
pop
jnp
sarb
or
and
mov
popa
std
adc
cltd
or
xchg
push
mov
push
pop
sti
xchg
into
mov
fsubrs
or
push
test
enter
outsb
inc
dec
mov
mov
mov
or
mov
mov
insl
shll
stc
test
mov
arpl
inc
inc
stc
dec
pop
and
repnz
aas
lcall
or
or
fwait
add
mov
call
js
sbb
stos
mov
cli
lahf
fs
inc
mov
bound
xchg
sbb
mov
mov
mov
ljmp
out
cli
hlt
ja
jns,pt
mov
sbb
mov
pop
shlb
int3
hlt
mov
aas
jbe
xchg
hlt
push
dec
dec
sbb
inc
dec
lret
pop
test
push
xor
cmp
adc
mov
xchg
lret
cmp
fstps
and
inc
arpl
adc
out
mov
adc
insb
adc
xchg
mov
pop
cmp
push
ja
cld
fisttps
pop
push
sub
lcall
enter
movsb
pop
imul
push
pop
popf
or
bound
popf
xchg
testb
xchg
push
push
pushf
jge
jne
inc
dec
das
cltd
pop
lock
jl
jp
cmp
push
adc
sbb
dec
pop
lret
rcrb
and
pop
xchg
sti
push
pop
mov
xor
fs
call
lds
adc
pop
mov
push
gs
mov
inc
push
xchg
lods
cli
or
inc
pop
es
stos
or
lcall
sbb
lea
sbb
push
ss
pushf
lahf
pand
insl
mov
testb
sub
cmpl
sub
push
in
push
adc
lcall
jno
fcomps
fdivl
adc
lea
mov
add
pop
adc
adc
adc
mov
jl
pop
lods
push
in
adc
mov
mov
aam
push
inc
enter
ror
aas
adc
jo
shll
mov
rcrl
fst
inc
les
push
cmc
lret
sbb
movsb
xchg
cld
and
fwait
loopne
cmc
jecxz
ss
rcrb
xor
lcall
std
adc
addr16
mov
filds
fcom
sub
nop
les
xor
cwtl
sbb
ficompl
mov
push
inc
pop
sub
stc
lahf
xchg
popl
push
lods
clc
dec
xchg
jno
jns
jecxz
lahf
pop
pop
inc
mov
push
jecxz
lahf
add
xchg
rcrb
cwtl
out
fdivs
in
mov
mov
insb
xorb
push
popa
scas
sbb
aad
xor
pusha
test
int
pop
pop
sub
inc
mov
sbb
inc
js
jp
or
add
sbb
push
ss
push
add
cmp
cmpsl
adc
mov
ss
sbb
in
cmc
mov
iret
outsb
add
rcll
mov
sbb
jns
or
popf
xor
mov
ds
lret
xchg
and
pop
pop
or
push
sub
fadds
mov
push
les
cmpsb
push
int3
mov
adc
pop
ss
scas
push
mov
or
jo
sti
aas
mov
imul
cmp
sub
mov
inc
sti
movsl
inc
ret
lret
leave
mov
imul
out
or
mov
sarl
arpl
pop
push
call
daa
mov
fcompl
shr
js
dec
outsb
push
fimuls
xorl
jns
insb
cwtl
pop
in
mov
jecxz
pushf
cltd
cmp
je
int3
mov
jmp
arpl
imul
loopne
sbb
cmp
imul
xchg
mov
pushf
gs
dec
jbe
ret
jo
pop
add
jno
add
mov
std
fcoms
and
cwtl
clc
inc
jo
jbe
push
xor
jg
and
push
dec
test
std
mov
sbb
out
ja
jge
mov
int3
jmp
xchg
ffree
imul
lods
mov
lods
push
fcoml
pop
jmp
es
mov
push
sahf
push
mov
shrl
jecxz
pop
test
rcrb
jns
xor
mov
xor
mov
fwait
add
xor
insl
outsb
mov
stc
adc
sbb
int3
sti
pop
cmp
repnz
jle
jle
ja
pop
repnz
lret
scas
fwait
pop
or
dec
mov
jnp
sbb
cmp
mov
cmpsw
mov
dec
movsl
mov
mov
inc
pushf
xchg
xchg
push
and
mov
mov
xchg
adc
jp
adc
jnp
scas
repz
push
push
subb
mov
pop
push
stc
inc
xchg
fsubr
add
mov
or
sub
adc
dec
mov
in
lods
aad
test
sub
and
jnp
jb
sti
aaa
mov
dec
dec
cmc
adc
andb
dec
jl
rcrl
fdivrl
push
inc
xchg
shlb
mov
loopne
gs
mov
or
pop
push
scas
dec
cld
mov
pop
popa
mov
jl
xchg
je
fs
ljmp
add
adc
rcll
ljmp
in
or
xchg
xchg
xlat
lahf
or
inc
mov
outsb
ljmp
loope
adc
aam
out
pop
mov
mov
or
popa
mov
rcrb
push
or
sub
dec
inc
mov
push
fldt
jns
or
mov
mov
xor
and
xor
pop
pop
ja
loope
adc
stos
xor
movsb
mov
sahf
clc
hlt
and
push
push
push
cmpsl
push
inc
repnz
add
adc
push
movsb
scas
mov
mov
jae
jbe
in
add
sub
sbb
jle
ficompl
inc
xor
sbb
or
imul
test
push
data16
push
enter
adc
pop
jecxz
xchg
mov
repnz
cli
ret
push
sti
mov
sub
fxch
insl
push
fimuls
fisubrs
pushf
push
mov
lds
push
adc
mov
into
ret
and
pop
xchg
push
push
mov
pushf
add
setle
xor
and
inc
pop
popf
leave
pop
jo
dec
xchg
or
sub
add
jns
xchg
or
sarl
sub
movsl
rolb
dec
push
icebp
pop
sbb
sbb
cmpsl
pop
popf
xlat
movsl
sbb
dec
enter
xlat
jb
xlat
sub
cmp
dec
pop
add
into
movsl
mov
loope
cs
cmp
push
dec
jecxz
jecxz
xor
cmp
ss
cwtl
add
jno
jg
xchg
stos
mov
xor
mov
and
push
inc
push
jl
xor
dec
adc
push
jge
push
or
cltd
jbe
xor
xchg
jo
sbb
lcall
adc
cs
call
push
and
mov
ss
fdivrl
dec
stc
mov
jo
xor
out
lahf
cmp
imul
cmpsl
cmc
lahf
leave
add
and
push
xchg
mov
cmp
push
cli
aad
pop
pop
xchg
xlat
xor
out
sub
or
filds
or
pop
lods
and
dec
test
mov
sbb
add
push
mov
pop
mov
popa
aas
mov
lret
sarb
lcall
cmp
pop
jmp
add
cltd
push
rcrb
sub
cmpl
frstpm(287
clc
jecxz
les
push
push
subb
push
ds
fmul
push
insl
jmp
rcr
ret
sbb
fwait
mov
mov
iret
sub
pop
push
and
push
or
xchg
orl
movsl
gs
cmp
popf
movsl
sbb
or
pop
gs
fcomp
adc
mov
js
mov
pop
mov
call
repnz
jno
push
xchg
xchg
jmp
pop
hlt
push
es
rolb
filds
pop
mov
jno
mov
sub
and
clc
push
mov
or
std
xor
mov
fcompl
xor
int
popa
or
loope
and
or
pop
cmp
pop
push
cld
jno
xor
in
lock
or
in
pop
mov
cwtl
js
xor
pop
or
inc
cmp
in
out
repnz
fsubrp
adc
jg
std
testb
cmp
push
imul
int
push
mov
out
movsl
andb
or
lahf
insl
insl
push
cwtl
and
mov
xchg
mov
mov
pop
sarl
mov
jo
dec
aad
add
adc
push
scas
adc
inc
pop
xorl
and
jne,pn
js
enter
es
imul
jne
cmp
test
cmp
outsb
inc
lock
enter
cmpl
ja
mov
pop
not
push
sbb
scas
aad
outsl
xlat
test
cmp
push
rcll
mov
mov
rcll
add
int
jo
cmc
sbb
adc
aaa
adc
push
pushf
mov
push
rclb
push
dec
imul
mov
int3
push
xchg
smsw
sidtl
xchg
stos
adc
ja
jp
push
dec
and
cld
in
xlat
inc
inc
add
sbb
xchg
pop
outsb
orb
xchg
mov
ret
pop
addb
dec
lock
inc
aaa
jno
icebp
pusha
bound
and
push
pop
push
dec
sub
jns
dec
loope,pt
lods
pusha
sbb
mov
dec
mov
jl
mov
mov
stos
mov
mull
push
sub
jbe
xor
rcrl
xchg
sbb
push
cs
mov
jle
fdivrs
insb
mov
out
pop
mov
int
jecxz
call
inc
insb
aas
mov
scas
mov
pop
mov
int
xchg
and
scas
fmuls
loop
inc
outsb
pop
fbld
mov
call
jnp
clc
dec
sti
mov
decl
inc
mov
pop
cmp
xchg
cmp
cmp
aam
rclb
lahf
je
push
aam
lea
mov
lods
jg
mov
xlat
out
push
push
es
das
xor
mov
adc
adc
js
xor
fisttpl
mov
mov
fldcw
lods
add
in
add
out
mov
aaa
xchg
loopne
out
bound
nop
jbe
and
mov
test
push
ja
loopne
xor
add
lds
jne
xor
mov
sub
xor
jge
jecxz
lcall
insl
add
cs
cmp
test
xchg
es
loope
jecxz
ret
test
leave
mov
rolb
ficoms
into
xor
mov
rorl
shll
aad
frstor
pushf
jb
dec
dec
shl
push
fisttpl
jnp
or
shlb
dec
outsb
dec
je
movsl
les
push
mov
xor
stos
shr
push
xor
inc
or
mov
mov
lods
add
xchg
cmp
jmp
push
inc
dec
scas
je
into
imul
and
testb
mov
ja
repz
imul
xchg
push
xchg
mov
mov
insl
lea
testb
inc
aaa
xchg
rolb
mov
or
test
jb
and
cmp
lahf
dec
outsb
dec
mov
push
fdivl
pop
or
call
or
out
push
mov
ljmp
sbb
movsl
int3
add
ja
pop
mov
cmc
in
sub
mov
in
inc
or
adc
mov
or
sbb
int
sub
mov
pop
xor
fcoms
sbb
es
in
mov
in
lds
dec
push
push
xor
in
lods
mov
hlt
aad
dec
mov
addr16
sbb
adc
pushf
mov
xchg
test
xchg
cli
push
xor
loope
add
inc
push
stc
mov
add
roll
inc
jge
and
cmp
push
xchg
divl
adc
mov
mov
add
lock
clc
js
cmp
inc
push
sti
je
mov
cmp
push
fmul
ds
mov
sbb
xchg
cmpsl
les
sub
lods
inc
jecxz
dec
pop
add
fbld
loopne
jo
mov
jmp
fistpl
adc
dec
inc
pop
pop
in
out
inc
dec
ljmp
loope
ret
cmp
sbb
lcall
dec
cltd
add
and
dec
push
push
clc
jp
je
in
out
insb
sub
xchg
call
mov
adc
pop
int3
cltd
mov
mov
mov
sahf
sub
in
pusha
cmp
test
into
push
add
dec
sbb
sub
jae
push
mov
adc
aam
out
xchg
daa
stc
in
int3
sbb
cmpsb
shrl
dec
mov
xchg
fmuls
dec
mov
mov
mov
cwtl
or
sbb
sub
sbb
out
dec
cltd
jae
cltd
lods
add
rorl
adc
jb
je
inc
or
addr16
lahf
or
or
aas
imul
adc
lahf
mov
js
pop
out
call
xorb
pop
scas
dec
xchg
out
xchg
jb
bound
cmp
inc
sbb
mov
cld
fwait
xor
daa
sti
inc
das
adc
insl
or
stos
pop
inc
push
dec
dec
jecxz
aam
lods
ficoms
das
add
cmp
int
pop
popa
mov
outsl
or
das
das
dec
faddl
and
movsl
and
cmpsb
ja
sbb
test
orl
jmp
sbb
daa
push
xchg
add
stos
leave
test
incl
es
inc
and
mov
add
sub
cmc
iret
mov
push
adc
scas
sarb
fldl
adc
aam
push
outsl
mov
dec
fwait
sub
cld
int
inc
xor
es
movsb
pop
loop,pt
mov
fdivrl
std
pop
arpl
mov
cmp
les
push
sar
pop
pop
jp
xchg
leave
clc
sub
push
push
ljmp
push
jae
test
bound
xchg
cmpsb
fldpi
dec
xchg
or
dec
lock
xchg
jp
push
into
out
sbb
and
imul
mov
addr16
mov
push
popf
popf
pop
mov
xchg
movsb
inc
cmc
push
add
sbb
outsb
lea
dec
adc
sbb
test
and
fdivrs
xor
mov
je
xor
into
pop
dec
xor
mov
sbb
int3
jmp
pusha
xlat
movsl
clc
ror
adc
imul
outsl
mov
xchg
fmull
cmpb
push
insb
or
cmp
xchg
xchg
test
pop
fcoml
and
sub
out
cmp
popa
int3
aaa
pop
add
iret
sub
jecxz
pop
pop
icebp
jno
mov
inc
scas
pop
clc
leave
loop
scas
or
je
movsl
lds
in
insb
pop
push
pop
in
xor
int
xor
imul
das
jo
mov
ret
push
push
into
mov
movsl
xchg
cli
sbb
rorl
leave
lea
mov
das
inc
push
push
mov
sub
push
cmpsl
pop
vpcomb
and
push
cmp
sbb
sbb
fisubs
int
cmp
mov
inc
inc
inc
push
fwait
popf
and
and
mov
xchg
and
addl
or
cmp
push
sub
xchg
mov
pushf
packsswb
or
stos
cmpsl
scas
push
xchg
clc
mov
dec
or
pusha
mov
inc
dec
adc
push
leave
add
add
movsl
mov
insl
popa
jne
pop
push
xchg
lret
fwait
stos
adc
inc
mov
push
add
mov
test
add
les
lret
stos
dec
shlb
repnz
mov
out
adc
inc
out
lock
adc
push
adc
push
loope
or
jecxz
daa
adc
stos
aaa
stos
xor
cmp
inc
mov
dec
andl
ficompl
mov
xchg
leave
push
sbb
js
sbb
push
mov
and
push
out
and
cmp
rolb
adc
pop
enter
push
sahf
cmp
push
shrl
int3
and
scas
lea
loopne
movsl
sub
inc
out
test
testb
sbb
in
shlb
mov
scas
dec
lods
mov
iret
or
dec
stc
test
push
in
out
fwait
pop
daa
pop
imul
push
daa
fcmovnbe
add
ja
mov
add
sbb
cmc
dec
iret
mov
dec
insl
enter
outsb
das
sub
pop
cmp
clc
inc
jbe
pop
nop
mov
sbb
outsb
insl
dec
sub
dec
add
daa
in
mov
mov
mov
sub
inc
daa
lret
pop
push
ror
out
loope
stos
ja
cmpsb
or
xchg
and
mov
xchg
insl
cmp
sub
cs
xor
inc
pop
sbb
add
jo
aas
movsb
push
jecxz
mov
push
push
fs
mov
daa
sub
xchg
mov
scas
xchg
cmpsb
fistl
xchg
cli
jle
sbb
xchg
mov
xorl
xor
xor
pushf
mov
inc
fnstenv
push
pop
mov
adc
dec
pusha
add
push
rcr
mov
mov
out
inc
in
dec
lods
inc
fbld
xchg
pop
sub
sarb
push
mov
shll
outsl
lods
xchg
jecxz
or
adc
mov
push
push
neg
dec
xor
ds
ds
test
stos
or
enter
sub
pop
sbbl
lods
adc
sbb
inc
cmp
dec
push
lcall
sbbb
aas
inc
stc
adc
adc
pop
cmp
mov
mov
movsb
mov
cltd
adc
std
adc
ss
mov
cmp
xlat
dec
xchg
das
mov
test
aaa
js
in
xchg
jmp
add
fxch
and
xchg
mov
adc
les
cmpsb
movsb
fdivl
cwtl
icebp
adc
pop
mov
leave
inc
sbb
and
adc
jns
dec
and
ret
mov
cmp
sbb
pusha
ljmp
popa
aad
leave
stos
push
jl
mov
outsl
mov
pushf
loopne
das
mov
jecxz
hlt
popf
out
cmp
cmc
mov
fsubl
xchg
lods
mov
mov
leave
subl
add
mov
sbb
cmc
mov
dec
es
mov
add
repnz
in
mov
lea
cld
sahf
adc
pop
adc
mov
mov
jns
sbb
sbb
imulb
sub
inc
dec
jne
aad
and
ja
mov
jecxz
inc
jle
sub
mov
push
mov
insb
aad
mov
loopne
out
ret
out
test
jb
arpl
mov
imul
lcall
or
insl
les
ltr
out
cs
pop
jg
prefetch
into
nop
mov
mov
adc
mov
and
mov
dec
sub
in
adc
rcrb
jge
mov
push
xchg
out
cmovne
loop
mov
movsl
lds
cmp
std
shlb
ja
push
pop
insb
outsl
hlt
leave
enter
std
push
cmp
mov
sub
lods
popf
shlb
jnp
sub
mov
or
xor
lret
mov
add
aam
inc
add
mov
stos
push
test
loope
mov
xchg
sbb
pop
dec
or
inc
popf
dec
orl
dec
inc
push
fs
mov
test
fs
test
fwait
call
xor
fldenv
jp
shll
mov
mov
mov
cwtl
xor
iret
xchg
cmc
push
sti
and
mov
mov
or
iret
xchg
ds
test
lret
dec
xor
push
and
fdivl
mov
aaa
xchg
iret
repnz
nop
cs
bound
fs
pop
imul
mov
mov
cltd
pop
dec
aad
dec
push
push
cmp
mov
in
dec
jl
testl
dec
push
jne
mov
add
adc
test
in
push
test
fidivrs
sub
int
pop
push
inc
push
mov
out
xchg
arpl
popa
xchg
and
mov
data16
andb
lcall
loopne
not
lret
das
ds
idivl
shll
fmull
mov
fsubs
pushw
enter
mov
jl
out
inc
movsl
cwtl
mov
adc
cmpsl
push
pop
js
add
push
daa
pop
lods
mov
shll
outsb
mov
sti
mov
and
add
arpl
sbb
sub
gs
ljmp
lcall
push
xor
cs
cmc
dec
inc
add
das
mov
fimull
scas
inc
cwtl
test
clc
icebp
addr16
push
mov
push
aam
xor
xchg
loopne
jb
data16
mov
xchg
in
pmaxub
xor
inc
sub
daa
adc
sub
pop
pop
xchg
test
out
xchg
adc
mov
jecxz
mov
xor
add
clc
or
repnz
cld
xor
sbb
push
jecxz
stc
inc
arpl
pusha
inc
push
cmc
ret
and
scas
push
ss
stos
rorb
rclb
repnz
mov
jne
jbe
test
xchg
scas
cld
push
mov
dec
dec
sbb
push
fdecstp
repz
ret
test
pop
jle
imul
jns
gs
adc
mov
or
mov
fcomps
dec
nop
bound
xor
repnz
int3
sub
cmp
test
sbb
js
int
std
in
jmp
lock
decb
shlb
movsb
fucom
jns
sub
add
es
ja
cli
jnp
sbb
sbb
hlt
int
pop
outsl
cmp
jns
xchg
lds
out
in
mov
cmpsl
xor
xchg
lahf
pop
mov
das
push
xor
push
icebp
push
adc
jno
data16
sub
test
pushf
and
xchg
cmpl
pusha
jno
add
dec
cli
sbb
xchg
es
js
shr
daa
jne
pusha
sti
pusha
out
xor
enter
lahf
out
mov
popf
loope
cltd
push
test
sahf
test
pop
and
outsl
xchg
fs
ret
sub
mov
push
push
stc
mov
mov
mov
insb
lea
jae
add
outsl
clc
push
and
cmp
and
out
xchg
jge
hlt
cwtl
jp
sahf
mov
dec
adc
or
mov
lds
adc
into
sub
fidivs
mov
mov
in
xchg
jns
loope
or
pop
and
dec
les
dec
jno
mov
std
out
popf
add
faddl
loope
test
sbb
dec
cmpsl
into
xor
insl
sub
add
sbb
adc
lahf
xchg
dec
bound
stos
imul
repnz
pop
fldz
imul
pop
lret
flds
push
sbb
imul
sbb
cltd
das
stc
xor
xor
je
mov
jg
pop
lds
pop
call
xlat
xchg
and
xchg
subb
jmp
pop
add
stc
ret
add
loopne
lock
dec
ret
mov
loop
in
pop
punpckhwd
push
cwtl
cmc
js
sub
shrb
xchg
icebp
push
cmp
xor
lahf
out
gs
das
or
test
int
cmpsb
or
and
mov
loop
xlat
mov
push
adc
lcall
aaa
cmpsb
loope
jb
add
ljmp
test
mov
push
lods
cmc
lret
sahf
testl
push
insb
ret
add
pusha
cs
andnps
mov
push
in
js
mov
mov
mov
add
dec
idivl
jno
dec
adc
fstl
nop
lcall
or
sbb
push
jl
push
or
frstor
test
fnstenv
and
push
sub
aad
cld
orl
fwait
mov
lds
aaa
mov
aam
pusha
in
rcll
jle
mov
pop
mov
mov
jl
movsl
mov
push
fisubrl
pop
cmp
les
adcb
mov
cmp
rorb
test
xchg
push
pop
stc
xlat
insl
mov
xchg
dec
inc
aas
cld
inc
lahf
clc
mov
xchg
push
aas
mov
xor
push
lods
inc
scas
jb
dec
dec
hlt
xlat
push
sbb
dec
pop
xorl
repnz
jb
mov
mov
fwait
aad
mov
bound
jl
hlt
ja
nop
ljmp
inc
movsl
pusha
push
lock
into
push
mov
pushf
jle
daa
pushf
mov
jae
pop
xor
cmp
push
es
jbe
add
sub
xchg
addl
push
mov
pop
cs
cmp
sbb
bound
mov
iret
jne
and
fcmovnbe
and
mov
cmp
rolb
jge
inc
push
or
mov
add
fwait
mov
cltd
movsb
in
mov
dec
mov
xchg
sbb
jmp
cmp
or
or
cmc
lret
and
push
sti
mov
jb
mov
mov
movsb
adc
mov
mov
cli
fs
jnp
and
jno
arpl
mov
outsb
mov
icebp
xor
xchg
fildll
clc
cmp
xor
jmp
fisubrl
shl
jnp
js
push
pop
jle
negb
das
fldenv
xor
mov
fsubs
not
or
mov
repnz
mov
adc
jmp
cmp
push
mov
or
push
in
jbe
lods
test
mov
lret
cld
das
testb
bound
jae
mov
add
fdivs
sbb
imul
jb
test
mov
loope
dec
cmp
scas
les
gs
xor
fsts
js
xor
adc
das
mov
push
mov
repz
lret
lds
pop
mov
lret
rcll
jne
loopne
xchg
dec
es
mov
pop
or
fisttps
jmp
xchg
jbe
and
xchg
stc
out
imul
or
push
inc
adc
aam
lcall
test
mov
pop
jne
popa
ja
mov
iret
inc
andb
andb
pop
cltd
adc
movsl
repnz
cmp
pop
icebp
sub
mov
das
in
out
pop
mov
xchg
cmp
lret
xor
jns
inc
inc
add
add
pop
cmp
mull
fdivl
lock
test
in
scas
add
or
cmp
movsb
in
lret
test
dec
or
in
push
cmp
icebp
inc
cmp
gs
push
sahf
pop
aaa
xchg
call
mov
sbb
nop
jb
adc
dec
add
aaa
inc
sbb
add
pop
lret
das
pop
cmpsb
mov
aas
push
jecxz
sbb
sub
mov
ja
daa
jl
add
es
xchg
rcl
xchg
mov
fistpll
push
testb
std
jl
outsb
ja
outsb
pushf
add
xor
das
mov
mov
dec
lea
adc
test
call
in
jne
shl
xchg
jbe
repnz
cli
cli
or
out
xchg
jo
aaa
dec
hlt
test
sbb
mov
mov
push
adc
jmp
clc
or
add
cltd
dec
add
cmpsb
mov
ja
mov
mov
pop
jae
pushf
and
insl
bound
das
sub
xchg
fisubs
or
or
nop
push
lcall
arpl
lods
push
adc
pop
or
adc
push
mov
sti
fcoms
or
pop
jg
faddl
dec
insl
mov
ds
popa
pop
fsubrl
push
jae
push
cmp
jg
push
push
jb
fildll
je
loope
pusha
inc
es
mov
xor
mov
shrl
jae
loop
jg
std
inc
cmp
push
in
push
jle
mov
add
mov
fdivrs
lock
xor
push
enterw
pop
push
fistps
push
dec
sahf
fstl
dec
ret
and
cmp
jecxz
aam
daa
into
sahf
xchg
jae
adc
mov
or
and
fsubrl
leave
cmpsl
cwtl
iret
or
iret
test
popl
adc
jns
sbb
das
pop
pusha
je
leave
mov
mov
jae
shll
sub
lock
dec
push
xor
mov
daa
pop
into
scas
stc
mov
bound
sar
push
fsts
pop
lret
scas
sbb
lcall
daa
sahf
mov
jge
lret
fcoml
repz
vpaddd
addl
incb
gs
inc
xlat
mov
cmc
mov
add
jp
cs
push
in
xor
jnp
mov
hlt
add
loopne
test
pop
inc
xorb
mov
out
test
jecxz
lock
pop
mov
jo
xor
adc
rorl
std
sbb
pop
arpl
mov
mov
sbb
lret
mov
or
leave
inc
lcall
aad
xor
mov
jecxz
xchg
cmp
clc
push
std
inc
sbb
mov
mov
dec
push
out
in
push
jg
in
xchg
mov
sbb
subb
dec
ficompl
pop
pop
mov
popa
or
xchg
testb
les
xchg
lock
sbb
add
in
decl
cli
xchg
mov
sub
mov
mov
sub
bsr
cmp
jmp
hlt
dec
or
fstl
lds
int3
hlt
inc
orl
mov
xor
jmp
ja
in
xor
sbbb
pop
pop
sbb
adc
ljmp
in
push
ret
aam
dec
sbb
mov
sbb
data16
lods
mov
pop
sti
repz
jno
mov
add
loopne
cltd
mov
push
call
jecxz
jmp
int
ljmp
mov
std
mov
mov
push
adc
mov
pop
dec
inc
add
jno
sub
in
fisttpl
mov
cmc
mov
add
aad
mov
out
pop
fs
lahf
fldt
jbe
nop
jmp
inc
leave
adc
movsl
lock
xor
push
add
xlat
bound
in
jae
flds
out
std
lods
pusha
sub
add
or
dec
stos
xchg
imul
jbe
test
pop
fs
pushf
xor
les
test
rcrl
stos
mov
or
xchg
dec
popf
mov
xchg
addr16
fdivrs
dec
inc
cmp
sbb
xor
je
inc
dec
jae
fmull
jecxz
dec
or
inc
jo
sbb
mov
cmp
imul
sub
mov
jo
sub
loop
rclb
pop
out
pop
clc
jnp
jg
add
jecxz
sub
sub
imul
pop
sbb
mov
ja
lods
sub
adc
xchg
jl
fwait
std
pushf
ss
aaa
arpl
pop
scas
sbb
rcrb
lods
test
push
cmp
xchg
mov
mov
add
cmp
adc
lret
ljmp
ficomps
sbb
push
movsl
andl
dec
addr16
jno
into
int3
mov
stos
leave
or
lcall
mov
pop
push
fistpl
fwait
cmp
mov
clc
adc
and
mov
mov
mov
sbb
push
adc
inc
xchg
dec
inc
pop
xchg
mov
push
ds
cmp
sbb
and
in
lret
jg
sarb
ds
cmp
or
fimull
pop
mov
and
pop
cld
add
cli
mul
lods
dec
jbe
iret
rcll
mov
xchg
outsb
or
loopne
leave
xor
inc
in
push
push
cmpsl
cmpl
and
dec
push
cs
xchg
ljmp
lea
jl
pop
xchg
pop
pop
push
push
fcmove
fs
nop
hlt
frstor
inc
mov
xchg
sub
push
mov
mov
mov
dec
stc
cmp
cs
push
and
sub
add
shlb
mov
mov
push
gs
mov
int3
cli
add
jp
call
jns
sub
imul
pushl
mov
fwait
call
cmp
dec
dec
pop
mov
cmp
gs
xchg
cwtl
mov
xchg
sbb
fisttpll
adc
mov
jno
xor
dec
mov
das
daa
inc
jl
iret
or
cmp
push
add
pusha
hlt
in
add
cld
notl
xor
push
mov
lea
xor
rcr
fstpt
ljmp
fisubl
cmp
and
push
xor
jmp
aaa
lods
sbb
sub
aaa
mov
dec
sub
mov
push
adc
or
xchg
pop
sub
inc
sub
bound
into
sub
xor
push
loopne
pop
sbb
sub
loope
cltd
icebp
bound
mull
dec
xor
xchg
lcall
mov
out
rcrl
outsl
cmp
daa
adc
xchg
mov
in
xchg
in
mov
out
imulb
ss
leave
mov
cli
sub
cmp
sub
inc
sarb
cmpsb
xchg
or
sub
jno
pop
push
fcomps
adc
ss
sti
cmp
dec
sub
fnstcw
jmp
aas
ficoml
test
cli
int3
sub
jno
cmpsb
push
sbb
test
jnp
mov
push
cmpsb
add
pusha
pop
nop
sbb
mov
and
xchg
pop
rol
xor
mov
lods
cld
scas
mov
push
or
cmp
scas
aad
mov
xor
xchg
ds
adc
loop
popa
cmpsb
jl
lods
cmp
scas
adc
xlat
jg
mov
movsl
xchg
pop
daa
mov
shl
xchg
je
out
lods
aam
cmp
notb
int3
mov
push
xlat
push
js
push
bound
rcrb
inc
mov
bnd
adc
jmp
incl
lods
inc
push
add
stos
or
xchg
jnp
pop
mov
mov
lods
addr16
stc
and
inc
mov
jg
das
fidivrs
xchg
imul
addr16
push
adc
mov
mov
outsb
ja
daa
mov
sbb
mov
loope
dec
out
add
out
sbb
fdivrp
push
pusha
popa
push
mov
sub
lret
mov
imul
notb
fs
xor
push
ja
mov
cltd
mov
or
or
scas
ja
jb
stos
mov
jo
rcrb
and
sbb
sbb
inc
or
xor
movsl
sbb
sbb
mov
cli
mov
mov
sbb
xorl
fwait
mov
int3
jmp
or
movsb
loop
or
movsl
daa
imul
mov
inc
cmc
std
jp
sti
jo
mov
repnz
sub
jae
sbb
inc
mov
mov
jb
and
out
fnstenv
xlat
push
arpl
lret
xor
insb
adc
clc
movb
mov
in
scas
xor
sbb
jp
xchg
pop
arpl
cmp
lea
pusha
lods
clc
jp
mov
dec
xchg
test
je
sbb
in
mov
jp
jmp
cmc
mov
imul
lret
mov
adc
adc
in
in
lcall
inc
mov
sbb
add
repnz
sub
shll
adc
movb
mov
ret
mov
mov
lahf
jmp
div
jecxz
pop
lock
aam
movsb
xor
xchg
push
cmpsb
jl
lret
add
ret
scas
push
xor
cli
xchg
or
pop
imul
in
mov
pop
lods
cmp
outsb
cmpsl
test
in
and
cwtl
ds
pop
adc
ret
shr
push
cmp
and
imul
cs
insl
shlb
mov
xlat
scas
sti
dec
lcall
out
mov
rolb
lods
fistpl
aas
xor
cmp
add
testl
jmp
scas
mov
sbb
dec
in
and
and
ficomps
aad
loop
fs
add
jo
jb
jle
fdivs
inc
pusha
sbb
jns
int
sub
fisubrl
mov
xor
xchg
rclb
imul
stc
xchg
and
vpxor
inc
pushf
cs
lods
cli
idiv
dec
inc
mov
std
or
xor
hlt
mov
sub
mov
bound
push
xor
xorb
lds
push
adc
inc
xor
std
imul
and
lahf
push
aas
jnp
sahf
movd
aaa
enter
inc
pop
mov
mov
lcall
jne
xchg
add
jecxz
push
loopne
cmc
mov
jne
inc
sbbb
jg
mov
aas
lea
adc
stos
mov
lret
mov
or
and
xlat
pop
jmp
dec
lock
cmp
jnp
add
shl
jne
je
adc
mov
push
jle
jns
push
das
mov
inc
jb
xlat
add
cmpsl
inc
adc
inc
rcrb
out
lea
cmp
jnp
cs
clc
hlt
and
test
and
stos
out
xchg
mov
push
fcmovnu
mov
or
fwait
or
lock
inc
dec
and
cli
std
rcll
or
lods
cld
pushf
mov
pusha
lea
adc
les
clc
icebp
add
fs
jbe
cltd
ret
jo
mov
movsl
arpl
mov
mov
push
fs
lret
adc
scas
lcall
testb
fldl
sahf
pop
pop
pop
and
movd
add
mov
lock
add
fisubs
sub
lret
pop
and
fisubl
out
rclb
push
mov
push
xchg
ficoml
out
or
sub
pop
cmp
add
add
xchg
sub
or
mov
or
inc
test
mov
mov
dec
addr16
dec
adc
lret
repnz
sbb
inc
mov
ret
lcall
xchg
lcall
daa
cmp
js
call
lea
and
xchg
add
pop
shlb
ret
sub
bswap
and
push
clc
repnz
into
loop
fcoms
dec
xchg
dec
fwait
test
ret
mov
lahf
lock
jne
repnz
xor
outsb
mov
ret
popf
inc
jle
daa
stc
out
pop
repz
adc
mov
into
cwtl
cmp
lods
rcrl
fistl
ja
dec
sub
inc
sub
mov
out
jae
jle
ror
push
enter
cmp
inc
cld
or
add
popa
fstl
or
push
and
sub
ja
shll
jns
lret
dec
or
fcmovu
dec
jp
jmp
xchg
shll
mov
dec
sub
push
pop
test
dec
pop
pop
dec
or
cmp
test
pop
adc
xor
inc
lock
or
mov
loope
rorb
pop
jb
jo
test
dec
imul
xlat
jl
add
outsl
xor
lcall
out
das
ljmp
and
add
push
xchg
adc
mov
sbb
adc
add
sbb
mov
and
lret
cmp
imul
fbld
push
add
bound
aas
popa
jae
test
flds
sub
sbb
lahf
test
int3
pop
push
outsl
or
mov
andb
aam
push
push
push
adc
fisttpl
push
in
in
cmp
roll
rcrl
cmpsl
mov
cmp
jnp
cmc
cmp
out
mov
ljmp
ffreep
lret
popa
sub
movsl
sub
ja
push
xor
dec
push
xchg
mov
pop
mov
or
loope
adc
inc
out
pop
ja
mov
jg
std
rclb
jle
xchg
lods
jecxz
das
push
inc
gs
hlt
ret
insl
shrb
dec
push
or
sub
mov
jbe
mov
jmp
cltd
iret
fnstcw
mov
mov
ja
or
shlb
mov
shl
incl
dec
mov
fdiv
loopne
sub
lods
sti
iret
push
lahf
add
adc
cmp
add
scas
adc
in
mov
outsw
mov
in
rorb
mov
push
or
or
and
mov
or
lods
cmp
cli
mov
clc
xor
fmuls
aad
inc
dec
cld
add
pop
stos
mov
xor
sub
push
xor
push
imul
fsubrp
enter
jno
je
adc
sbb
mov
lea
arpl
mov
psadbw
xchg
lcall
inc
ljmp
pop
std
ds
xchg
jp
and
or
sti
adc
rorl
add
push
mov
lock
adc
mov
in
xchg
icebp
mov
push
pusha
push
sbb
pop
fcomi
xchg
ret
jnp
ja
dec
mov
push
js
repnz
enter
adc
mov
mov
push
ret
sbb
mov
push
mov
aam
dec
ds
mov
sub
test
dec
popf
decb
sbb
cld
scas
or
testl
xor
and
jp
rclb
mov
cli
xchg
cmp
ret
aas
ficomps
jle
pop
jo
movsl
out
nop
dec
jb
dec
fcomp
dec
enter
xor
mov
icebp
xor
mov
add
pushl
xchg
pop
inc
pusha
mov
fsubrl
popf
xchg
cli
mov
xor
ftst
jnp
adc
sbb
andb
push
scas
dec
pop
and
cld
cmp
rcll
into
inc
mov
cld
push
xchg
inc
inc
lock
and
mov
xor
push
and
outsb
sbb
stos
das
sub
push
cmp
sbb
pop
push
jmp
ss
lret
je
mov
pop
repz
into
push
in
shll
fdivrs
ljmp
mov
pop
dec
or
mov
cld
mov
aas
cmp
xchg
aaa
xchg
daa
xlat
pop
orl
ss
inc
jmp
sub
mov
leave
fldl
in
sub
add
aam
loope
cli
out
push
xor
jg
and
dec
pop
and
and
bound
xchg
aam
out
mov
push
mov
mov
mov
inc
push
push
test
sub
sbb
adc
repnz
mov
loope
in
and
outsb
pop
xchg
iret
stos
je
inc
enter
out
ljmp
rcrb
or
sbb
aaa
mov
add
enter
add
ds
add
xchg
mov
jno
push
pop
xchg
sbb
dec
mov
or
out
sub
icebp
jle
mov
xor
rcrl
cmp
dec
stos
jl
fdivs
jo
sbb
inc
ret
movsb
sub
shlb
dec
xchg
lods
out
mov
into
sbb
dec
dec
sbb
mov
xchg
add
dec
xchg
jge
lahf
mov
inc
icebp
outsb
xor
insb
dec
mov
push
inc
mov
repnz
test
mov
stc
dec
xchg
cmp
mov
js
dec
or
imul
xchg
mov
sbb
or
jnp
pop
imull
outsb
int3
shll
leave
mov
jecxz
ds
sub
es
sub
leave
mov
inc
xchg
in
ljmp
addr16
mov
loop
adcl
cmp
mov
pop
lods
and
or
adc
lds
flds
adc
inc
fisubrl
adc
stos
lea
ret
stos
jle
mov
aas
adc
inc
add
cmp
dec
push
fsts
fldt
pop
mov
mov
iret
sahf
push
jbe
pop
sub
or
icebp
xchg
jg
dec
mov
outsb
call
add
inc
add
sub
pop
cmp
mov
pushf
imul
mov
sub
cmpsl
add
mov
sarb
cmpsl
js,pt
mov
stos
clc
pushf
dec
push
jo
repnz
test
into
xchg
cli
sbb
addb
jl
push
test
je
add
fwait
loop
jb
iret
adc
out
out
daa
mov
nop
push
adc
cmp
sub
add
xchg
jecxz
pop
or
movsb
fwait
and
std
cltd
jp
inc
sti
orl
icebp
fucomp
lret
leave
jg
inc
aad
pop
and
xchg
shll
jae
and
push
aas
cmpsl
call
adc
fnsave
sbb
dec
push
add
stos
fwait
xlat
mov
sub
xchg
in
es
adc
push
inc
jo
push
jne
cs
mov
push
push
out
out
stos
mov
jno
xchg
jmp
xor
cmp
int
sub
push
pop
inc
pop
dec
inc
inc
repnz
cmp
cld
mov
sbb
sub
cmp
addl
sahf
in
push
sbb
xchg
xchg
in
xor
adc
repnz
or
mov
and
je
nop
mov
ja
cmpsl
in
stos
add
out
mov
insl
mov
sub
mov
inc
dec
mov
sub
add
icebp
incb
sub
add
sub
fildll
in
test
xchg
in
xor
inc
adc
pop
xor
dec
movb
test
jo
test
out
and
lret
js
jl
mov
sahf
cld
cmpsb
xchg
in
dec
push
xchg
loop
scas
in
fadds
pop
jno
aam
lods
sbb
cmp
cwtl
mov
in
sub
dec
xchg
xlat
call
call
dec
nop
inc
mul
and
or
fsubrp
stc
inc
inc
xor
xor
mov
and
je
jle
loopne
adc
rolb
and
fcmove
xchg
fs
aaa
fcompl
aaa
xor
imul
dec
rep
mov
sub
movsb
xor
bound
sub
imul
cli
fadds
outsl
lea
rcll
dec
sbb
adc
lret
cld
jae
rol
jle
cmp
pop
inc
mov
data16
repnz
xchg
xor
shl
clc
mov
lock
stos
call
or
cmp
mov
cs
in
movsb
and
sub
jb
jle
cmp
sub
imul
cltd
je
mov
pushf
rolb
inc
out
negb
sti
jno
arpl
sar
rcrb
aam
loopne
jge
pop
push
bound
cmp
fidivrl
lock
inc
push
mov
push
je
pusha
fwait
mov
push
pop
push
push
mov
in
cmp
sbb
pop
rcrl
mov
adc
hlt
es
cwtl
sahf
push
or
cltd
or
cltd
test
sub
cltd
mov
lret
add
fdivs
or
push
push
or
add
xchg
shll
adc
sbb
mov
cmp
sub
pop
push
int3
mov
das
loopne
inc
pop
sti
mov
loope
sub
push
sahf
push
jns
out
ret
sahf
jmp
add
fnstsw
add
test
adc
call
pop
popf
cltd
xor
inc
sub
fisubrs
pusha
mov
xor
aam
push
stc
lock
mov
shl
lret
ljmp
pop
movl
std
dec
sub
add
es
mov
xchg
jno
popa
xchg
imul
loope
xchg
mov
mulb
sub
mov
sub
add
iret
or
lcall
mov
dec
xlat
mov
mov
adc
or
imul
sbbb
pop
jp
xchg
rcr
inc
fucompp
inc
imul
fdivs
xchg
mov
scas
jb
pop
mov
or
push
add
inc
and
dec
in
push
fdivrl
xchg
and
addr16
jle
jnp
or
jbe
push
jno
leave
sbb
pop
cld
popa
cmp
jg
popf
test
jl
out
jb
sbb
xchg
ljmp
sahf
leave
lock
ljmpw
fbld
push
push
mov
pop
data16
arpl
mov
ja
mov
stos
push
pop
sti
daa
cmp
mov
icebp
rcr
nop
je
lahf
cmpsl
push
sahf
aam
add
jecxz
xchg
movsl
ja
insl
nopl
enter
dec
icebp
fcmove
cmp
push
xchg
lret
jae
mov
rol
adc
inc
cld
adc
insb
lods
push
ret
jecxz
pop
push
and
pop
fisubs
daa
sbb
jp
cmp
addr16
aad
mov
sbb
mov
in
in
push
mov
jl
arpl
sub
jns
or
mov
setp
test
mov
sbb
daa
or
ds
in
cmp
jmp
ret
push
stc
cmp
orl
mov
iret
sahf
xchg
cmp
fs
insl
jae
ror
inc
mov
mov
xor
lret
mov
std
add
cmp
jl
ja
fsubr
addr16
jecxz
pop
scas
imul
shrb
adc
xor
cmp
pushf
jp
sbb
imul
addr16
and
jo
mov
lock
adc
and
or
pop
ret
xor
inc
xorl
dec
out
test
cmp
loope
lret
cltd
or
adc
and
shl
add
in
push
add
xor
repnz
or
dec
and
jo
dec
cmp
sub
mov
sahf
jae
repnz
jb
outsl
xchg
test
dec
mov
lea
shlb
pushw
fwait
push
in
inc
mov
pop
mov
fcoml
sarb
pop
das
inc
or
cld
sbb
std
out
xchg
jns
ja
jno
daa
mov
push
and
sbb
xor
sub
adc
test
loope
mov
lret
dec
xchg
icebp
andl
mov
test
inc
and
scas
sub
sub
dec
jp
push
add
sub
les
es
decb
cmp
mov
mov
cltd
dec
fs
test
push
js
nop
shrb
mov
jl
into
jl
add
addr16
fnsave
and
mov
rsqrtps
inc
mov
in
pushf
sets
jg
push
mov
into
xchg
xchg
mov
cmc
ss
sub
cmpsl
pop
pop
jl
clc
jbe
sub
xchg
es
mov
or
sbb
scas
call
fwait
xchg
orl
iret
cmp
dec
orl
push
scas
xor
mov
push
sbb
fwait
sarb
mov
or
adc
mov
sub
push
sti
add
dec
jl
add
jp
movb
or
inc
test
push
inc
pop
js,pn
cmp
jne
loop
notl
inc
pop
ss
fwait
push
xchg
jmp
jae
adc
lret
mov
xlat
adc
and
fs
ljmp
std
pop
cmp
add
or
jecxz
repz
cmpsl
pop
loop
out
cmp
and
jecxz
push
sbb
addr16
movsb
sub
mov
mov
pop
out
and
mov
push
mov
xchg
xor
inc
lea
jl
inc
dec
pop
sbb
inc
add
push
jno
pusha
push
ljmp
in
push
in
popa
mov
inc
pop
mov
fnstsw
add
inc
xchg
mov
mov
lret
sbb
das
aam
jmp
add
out
sbb
jne
push
sarb
rclb
pop
sub
sub
es
adc
out
mov
sbb
lret
mov
imul
dec
mov
dec
adc
xor
popf
inc
stos
int3
push
out
andb
mov
mov
arpl
gs
cmc
popa
sti
cmp
and
mov
xor
mov
adc
loope
add
scas
push
stos
adc
adc
push
iret
stc
aaa
sahf
dec
xchg
xor
ds
popa
lock
or
dec
out
mov
pusha
ljmp
lea
rclb
ds
push
inc
jle
cmp
ss
push
popf
inc
subb
push
int
rolb
mov
pop
dec
push
pop
and
mov
or
inc
push
movsb
daa
je
push
inc
add
imul
popa
aaa
jne
push
inc
jl
xor
dec
jnp
or
jle
icebp
les
mov
ljmp
stos
sub
into
jl
ljmp
in
out
inc
sbb
dec
mov
xor
xor
push
jmp
sbb
pop
xchg
mov
mov
cli
stc
loopne
push
xlat
popa
adc
fs
scas
outsl
sub
enter
inc
push
lock
mov
lahf
incb
xor
jge
dec
or
and
fdivl
xchg
dec
push
iret
imul
mov
int
cs
mov
and
adc
jecxz
ficoml
pusha
mov
lea
rolb
jg
jmp
push
loop
ss
push
push
cmpb
xor
jbe
jno
cmp
arpl
outsb
and
cmp
shll
leave
xchg
test
cltd
push
add
add
loopne
mov
aaa
jp
dec
dec
imul
adc
mov
or
fsubl
popf
adc
cmc
ljmp
pop
arpl
js
pop
mov
xchg
enter
add
pop
hlt
enter
xchg
sbb
rorb
add
aaa
cmc
mov
std
cmp
mov
xchg
test
in
cmp
aam
dec
xchg
loope
mov
pop
mov
jg
imull
pop
pop
shll
inc
mov
in
push
and
mov
es
push
outsb
mov
rolb
jp
mov
hlt
scas
sarl
cld
jne
cld
and
sti
and
xchg
pop
les
sbb
inc
xchg
jmp
push
push
popa
add
bsf
push
ds
sub
lds
stos
pop
fs
clc
mov
lret
jp
dec
dec
lret
fdivrp
mov
mov
mov
dec
push
push
add
insl
jnp
aam
cmp
pop
je
lock
rorb
push
ret
addb
xor
add
es
push
pop
sub
bound
dec
inc
mov
push
mov
cmpsl
adc
mov
pusha
int
jne
sub
fstl
mov
mov
add
jbe
ret
inc
or
xchg
repnz
jmp
inc
sti
lods
pop
mov
push
pop
je
mov
int
mov
push
out
ss
out
stos
jo
adc
cmp
add
jb
mov
mov
cmp
pop
adc
popf
ret
ss
mov
xchg
lahf
leave
subb
inc
or
int3
xor
es
in
fnstcw
test
sbb
mov
faddl
ret
adc
js
xor
adc
cmpsb
xor
cltd
cmp
jecxz
pop
aad
jae
movl
flds
fs
inc
mov
popa
sub
testb
sti
mulb
xor
fnsave
push
and
sub
push
inc
ja
ljmp
jno
pop
or
cmp
mov
and
xchg
inc
jbe
mov
mov
xchg
xchg
cld
mov
ds
dec
stos
or
insb
int
adc
mov
iret
insl
aad
inc
or
ljmp
fstl
pop
adc
mov
andl
arpl
inc
pop
xchg
test
loope
jnp
or
add
cmp
call
cmc
mov
and
ljmp
fcomip
testb
add
aam
int3
push
inc
mov
popa
sub
les
pop
dec
push
lahf
mov
stc
jp
arpl
mov
mov
and
popf
fisubs
std
lea
pop
dec
mov
fwait
xor
out
int3
sahf
enter
fs
xlat
add
and
pop
in
cs
call
push
stos
adc
cld
repz
pop
xchg
sub
jns
loop
scas
pop
jae
js
mov
icebp
scas
es
mov
xor
push
mov
dec
mov
jo
inc
and
fwait
in
push
jo
stos
adc
jno
cmp
clc
dec
daa
jae
testb
push
jmp
in
xchg
sub
xchg
sbbb
adc
fstps
call
in
movhps
xor
movsb
xchg
xlat
mov
mov
or
dec
sbb
dec
pop
iret
push
jns
and
fwait
mov
dec
sbb
sahf
xchg
scas
popa
and
imul
xor
inc
scas
out
or
ljmp
sbb
rorb
dec
dec
sub
jbe
sbb
test
pushl
pop
add
lock
mov
stc
fisttps
jbe,pt
mov
xchg
cmp
cwtl
fs
sti
scas
sbb
inc
xchg
jb
add
mov
mov
ret
xor
cmp
in
dec
jge
lods
jne
pop
jb
fs
jbe
xlat
cld
mov
cs
add
jmp
mov
jl
das
and
stc
cs
jl
enter
test
push
in
imul
ja
out
in
loopne
inc
xchg
push
push
mov
jns
pop
cmpsb
jmp
mov
scas
std
mov
stc
je
aam
sbb
fwait
test
lcall
mov
mov
scas
cltd
sahf
mov
dec
pop
cmp
insb
sub
sbb
out
stos
in
push
inc
fldt
insb
or
into
sahf
imul
dec
jge
push
out
pop
xor
or
cmp
add
mov
pop
push
push
scas
or
xchg
loop
imulb
stc
dec
popf
imull
add
daa
or
rol
sbb
ret
psllq
aam
jo
jnp
push
cmp
or
xchg
sbb
xchg
mov
fwait
shll
sub
inc
clc
shrl
or
out
add
lds
subb
adcb
insl
push
xor
push
pop
sub
adc
sub
lods
adc
sbb
repz
fisubs
jnp
jl
sti
push
mov
and
sub
test
push
mov
ljmp
bound
pop
or
dec
mov
into
loop
pop
inc
inc
cmpsb
sbb
ficomps
mov
xor
and
cmpsb
mov
cli
sub
sub
pop
mov
xchg
fstl
pop
lcall
addr16
mov
loope
push
push
movsl
add
loop
je
xchg
ret
loopne
mov
out
and
sbb
push
loope
cmp
arpl
cltd
repz
mov
leave
mov
push
ds
repnz
icebp
pop
jno
cltd
or
sbb
push
in
mov
stos
push
int
popa
xchg
inc
push
test
and
cli
scas
aam
xor
lret
sbb
mov
iret
adc
cmp
inc
je
mov
les
std
in
pop
sub
jl
xchg
pop
xor
movsl
mov
test
mov
push
js
scas
aam
sti
mov
lret
pushf
sbb
icebp
add
sub
loopne
inc
xchg
jns
mov
jle
shll
outsb
adc
lods
dec
add
jge
imul
repnz
arpl
pushf
sbb
fs
mov
lods
sti
pop
ret
arpl
mov
mov
cmc
xor
shll
push
mov
test
inc
rcll
mov
aaa
imul
jbe
sub
lock
mov
sbb
movsb
and
push
push
scas
std
les
sbb
mov
sub
ja
imul
popf
jle
and
push
push
aad
popa
xchg
imul
out
push
ftst
pushf
ja
cmpsb
sbb
and
xchg
insb
ljmp
mov
pushf
cmpb
mov
jl
lock
bound
pop
lahf
cmp
pop
push
pop
jp
mov
sbbl
les
dec
dec
imul
out
add
adc
xchg
jmp
pusha
jnp
cmpsl
pop
dec
add
sub
dec
push
test
push
jne
pop
pop
fs
adc
adc
cmp
pop
in
push
xchg
xor
ficoms
push
push
cmp
mov
leave
subl
jle
mov
pop
movsl
ja
loope
mov
sbb
adc
adc
in
cmp
push
test
mov
leave
dec
stc
mov
pop
shlb
xor
iret
or
sub
adcl
pop
push
outsl
aaa
mov
jb
int3
xchg
lods
and
inc
xor
adc
sbb
nop
fwait
and
dec
jmp
push
xchg
jecxz
jge
pop
push
sti
mov
shrb
loop
pop
data16
xchg
xchg
inc
sub
dec
xor
test
fildl
pusha
or
cmp
mov
fsts
mov
cld
fstpl
sub
popa
loope
pop
lods
mov
jno
add
inc
test
add
insb
xchg
addl
mov
mov
dec
daa
cmp
mov
sub
rcl
ret
dec
add
lods
out
pop
rclb
repnz
add
int3
or
cmpsl
repz
sbb
sbb
loope
jne
sti
add
popf
push
in
mov
lcall
sbb
inc
mov
push
mov
imul
pop
rolb
mov
das
and
stos
jle
inc
decb
notl
leave
stos
pop
sbb
mov
xor
sbb
lock
cmpsb
movsb
jae
into
cmc
call
xlat
adc
inc
sub
push
scas
icebp
jmp
out
aaa
cmpsl
mov
jae
rol
lea
pop
push
push
aam
pop
ss
dec
inc
fidivrl
test
mov
lea
scas
add
xor
lods
fsubr
stos
iret
or
cwtl
sbb
xor
mov
adc
rcll
scas
jl
repz
xor
lahf
sub
enter
pusha
stos
add
lcall
mov
pop
push
or
and
mov
mov
mov
shrb
add
adc
out
leave
xchg
jb
dec
push
or
flds
inc
sti
or
mov
mov
inc
inc
enter
lds
push
cli
aas
faddl
pop
sar
inc
mov
mov
push
pop
xor
test
push
mov
insl
pop
pop
adc
dec
pop
imul
jl
popa
xchg
add
arpl
ja
orl
fs
cmp
mov
movntq
sub
sahf
jbe
cwtl
int3
sub
xchg
ds
data16
insl
push
icebp
mov
sub
push
xlat
lea
cmp
andb
insl
jmp
shrl
jmp
adc
pop
das
js
ret
cmp
gs
jno
push
sbb
loope
cltd
testl
mov
sub
mulb
mov
mov
dec
cmpsb
jmp
popa
rorb
push
jnp
cmp
fcom
in
sub
gs
inc
mov
fistpl
mov
sub
xchg
pusha
pop
mov
icebp
jge
dec
sub
adc
push
or
notl
mov
push
pop
divb
fnstcw
add
inc
mov
int
mov
daa
inc
inc
inc
mov
pop
jle
mov
popl
mov
subb
outsl
add
mov
stc
xchg
inc
nop
mov
or
out
jg
js
push
xlat
mov
outsl
cmp
aas
push
pop
mov
xor
ficoms
rolb
cmpsb
lret
addr16
mov
sub
dec
gs
mov
or
adc
mov
aas
jnp
add
jle
insb
cmc
and
push
jo
int
lret
daa
hlt
jecxz
mov
je
outsb
mov
sub
sbb
fcom
sub
lds
mov
test
and
dec
ljmp
rol
sarl
xor
les
scas
ret
jnp
dec
insl
pop
mov
into
push
sti
xchg
inc
in
and
subps
cmpsl
jnp
mov
gs
mov
dec
xor
push
aaa
nop
jecxz
idiv
mov
pop
bound
call
push
jns
fadd
in
add
fcomps
fcoml
rclb
dec
push
dec
int3
xchg
inc
aaa
das
jge
inc
out
mov
dec
push
adc
push
aam
int
fmull
cmp
cwtl
and
mov
pop
sahf
call
push
fmull
mov
sbb
dec
xchg
mov
test
loope
outsb
imul
ret
mov
rcrb
jnp
xor
cmpsl
inc
roll
in
call
out
adc
lea
add
lcall
ja
movsl
pusha
dec
push
clc
lods
mov
cmp
incl
iret
cmpsb
jg
push
daa
dec
cmpsl
adc
dec
in
out
jmp
decl
add
dec
or
inc
popf
sub
mov
sub
js
test
clc
add
hlt
push
shrb
scas
jmp
sbb
xchg
sub
dec
add
ljmp
int3
cmc
jbe
jge
das
jmp
sub
jg
fimull
and
mov
inc
jecxz
push
mov
sahf
cmp
fiaddl
outsl
pop
lcall
rol
and
add
xchg
sbb
ret
sti
ds
sub
cmpsb
cmpl
push
out
xlat
sub
jno
cmp
imul
lret
out
cli
data16
xchg
mov
lahf
mov
fisubl
and
sbb
dec
sub
cmp
das
mov
lcall
insl
jne
push
cs
cmpsl
test
lds
ret
inc
fwait
push
adc
xor
call
ret
mov
xchg
movsb
fisttps
iret
jge
arpl
aam
ds
and
test
in
xchg
lret
out
push
int
sahf
leave
out
fsts
adc
xchg
in
cmpb
fmuls
idivl
jno
jp
push
jo
mov
xchg
cmpsl
xor
and
or
dec
dec
cltd
iret
mov
mov
sub
mov
mov
mulb
sub
fldl2e
jae
faddl
stos
cs
push
clc
das
xchg
jno
rep
dec
adc
ficomps
pop
and
lret
lds
adc
stc
xor
sub
fdivp
cmpsb
xchg
out
and
push
js
jne
mov
ss
mov
push
pop
jl
fcoms
hlt
movsb
mov
out
mov
and
mov
dec
int3
sub
and
iret
xchg
cmc
stos
stos
inc
lret
fistpl
outsb
and
data16
xchg
cmp
cmp
mov
sub
jo
pushf
mov
iret
mov
ret
adc
iret
or
sub
nop
nop
lods
cvtpi2ps
push
push
je
hlt
xchg
ja
adc
pushf
js
pusha
push
cs
adc
je
push
cltd
add
pop
sarl
outsl
xchg
xor
imul
mov
xor
std
cmp
into
ffree
jl
js
or
out
jo
xor
lea
stos
jle
cmp
cmp
inc
sbb
xor
js
iret
sub
pusha
push
adc
outsb
iret
sbb
out
xchg
es
mov
and
xorb
cmp
aad
push
jno
xchg
lea
jns
cli
push
xlat
inc
jb
fwait
dec
and
stc
push
lods
clc
push
adc
push
test
adcl
jbe
jmp
nop
into
dec
adc
lods
in
faddp
int
addr16
pushf
test
cld
pop
fucomi
push
ss
add
fwait
cmc
insb
jo
jp
pop
sub
in
insl
pop
cmp
mov
jne
sub
jge
inc
jecxz
lods
pop
cmp
jmp
adc
out
fbstp
sub
pusha
addr16
outsb
popf
test
pusha
adc
daa
out
pop
std
mov
bound
mov
scas
jp
push
mov
lods
push
mov
dec
roll
jns
fsubr
imul
jecxz
and
add
out
data16
ret
lret
sub
cs
cmp
cmp
insb
pop
movsb
mov
int3
push
sbb
adc
jne
cmp
lret
lea
sub
adc
enter
das
in
mov
pop
daa
dec
clc
lock
jbe
repnz
adc
faddl
repnz
jp
jecxz
jp
pushl
cmp
sbb
aam
add
inc
add
jns
shrl
pop
int
les
mov
jo
ret
mov
icebp
imul
cmp
jbe
lods
fildl
jae
jnp
jae
xor
mov
cmpsl
pop
jecxz
jecxz
hlt
mov
out
repz
fstpl
adc
jo
lret
or
add
cmp
jbe
loope
mov
negl
sbbl
add
xor
ja
loopne
cmp
popf
rcll
std
ficomps
ja
ljmp
mov
push
loopne
cld
cwtl
dec
or
aam
jnp
shll
shlb
faddl
popa
mov
cmpsb
fisttpll
pop
and
xorl
pop
loop
icebp
js
repz
xchg
or
scas
pop
movl
pop
dec
dec
ret
daa
dec
test
insl
mov
push
pop
gs
or
fldt
push
fsubs
notl
popf
shrl
push
andl
or
add
add
mov
xorb
jle
sbb
mov
mov
in
inc
ds
pop
cmp
lcall
mov
fiaddl
sub
inc
mov
mov
push
arpl
into
mov
aaa
addr16
add
add
ja
rolb
mov
inc
inc
jle
testl
fidivrs
sbb
sub
add
sub
push
mov
inc
repz
repnz
cmp
pop
mov
fbld
scas
popf
ss
aam
rolb
out
movb
mov
mov
push
das
mov
add
scas
xor
mov
mov
and
lcall
call
das
jns
shrl
xchg
mov
cmc
pop
rcl
mov
jo
ljmp
setg
and
sub
in
ss
cld
jle
sahf
dec
rol
mov
inc
incb
jne
repz
stc
ja
sbb
test
push
int
sub
mov
lea
mov
inc
in
bound
or
inc
in
cmpl
push
adc
push
push
into
sbb
out
movsb
and
inc
inc
ja
push
and
push
mov
pop
sahf
mov
add
popf
inc
xchg
push
push
add
xchg
push
loope
fs
scas
or
mov
sbb
jbe
lret
mov
lret
dec
sbb
fs
fcmove
push
xor
je
divl
lds
cmp
xchg
mul
fnstcw
addb
add
icebp
out
xchg
gs
cmpsl
jnp
out
dec
out
int
sbb
fldenv
cmp
ds
in
imul
jno
insb
push
in
mov
aad
das
std
xchg
or
push
test
cmp
dec
cli
inc
adcl
les
inc
or
bound
jl
and
js
mov
loope
or
into
inc
push
into
inc
daa
in
adcl
jecxz
mov
shl
mov
fmulp
jnp
adc
bound
xchg
out
popf
lret
mov
lods
call
decl
sbb
mov
cmp
mov
dec
loopne
aam
aas
push
adc
lcall
fld
test
stos
repz
add
cwtl
dec
fdivrl
mov
inc
dec
adc
sub
pop
and
daa
jl
mov
jb
xchg
sbb
or
bound
inc
lcall
lock
loopne
xchg
adc
xor
ret
jnp
lcall
sbb
xor
cs
in
or
and
inc
jnp
xchg
rorl
adc
mov
inc
scas
imul
lahf
lret
pop
mov
aaa
hlt
seto
xchg
dec
lahf
movsb
int3
arpl
das
and
in
lds
xchg
test
in
and
cmp
test
daa
jns
jmp
rolb
jae
shlb
sar
adc
sbb
inc
jnp
ds
cmp
lods
lahf
sub
xor
scas
or
mov
gs
shlb
mov
xor
int3
mov
sub
adc
and
mov
shrl
push
lods
push
mov
out
mov
orb
stc
jp
cmp
push
adc
aad
in
xchg
cli
sbb
test
daa
imul
jg
int
xor
loop
inc
stc
cmp
pop
mov
and
push
les
sarl
bound
cs
test
and
mov
pop
adc
stos
pop
in
cltd
dec
nop
jb
cmp
notrack
sub
cltd
mov
imul
bnd
js
xor
jecxz
pop
push
cmpsb
lret
push
cmpsl
or
daa
inc
call
sarb
mov
inc
add
outsl
push
cmp
mov
cli
xchg
aam
rol
xor
lcall
inc
cvtps2pi
test
call
xlat
jp
cmp
mov
and
les
pop
pop
lods
jg
pop
adc
vpsrld
incl
cmp
nop
add
and
pop
mov
fnstenv
adc
std
xor
mov
movsb
xor
add
push
scas
js
xor
mov
sbb
and
sub
pusha
and
jg
pop
out
ja
pop
mov
sti
mov
push
dec
into
or
or
and
hlt
cs
aas
xor
mov
sarb
pushf
sarl
lea
and
and
into
arpl
cmp
mov
inc
or
inc
fwait
pop
pop
xchg
cmp
push
lods
loopne
ja
lea
scas
sbb
rcl
mov
mov
pop
fldpi
adc
das
inc
mov
sub
imul
add
cmpsb
outsb
push
inc
sbb
das
or
dec
jbe
xor
pop
outsb
mov
jge
adc
or
movsl
and
jge
orb
sub
repnz
out
enter
ds
pop
mov
xchg
pop
push
cmp
sarb
add
loop
cwtl
enter
call
cltd
lds
jg
scas
ljmp
lahf
sbb
into
mov
ss
xchg
lock
ljmp
cs
cmp
mov
mov
pop
int
and
cmc
insl
push
out
repz
or
push
sahf
in
push
scas
push
nop
mov
cmp
sbb
repnz
pushf
jecxz
push
lods
repz
dec
cmp
lds
idivb
xor
lea
das
gs
inc
xchg
repz
sub
outsb
pop
out
outsl
ficompl
jmp
jns
divl
shl
pop
ror
jo
mov
mov
nop
fistpll
enter
xchg
sbb
mov
jae
adcl
inc
paddq
psllw
lea
mov
sti
xor
insl
push
aas
inc
pushf
add
and
push
jne
ficoml
aam
aas
jb
mov
cmp
arpl
pop
sbb
scas
mov
mov
cmp
push
xor
push
add
movzbl
std
pop
cmp
stos
lcall
mov
jmp
icebp
jmp
xchg
mov
shr
jg
cmp
dec
dec
mov
clc
notb
aam
xor
add
aad
mov
jb
adcl
orb
out
cs
cs
push
into
pop
ja
mov
aaa
sti
sbb
lods
mov
js
sbb
sub
sbb
push
popl
push
jae
enter
pop
outsl
lea
call
jg
sbb
fimull
icebp
lret
xchg
hlt
mov
inc
rorb
cmp
stos
inc
mov
xlat
imul
loope
mov
in
stc
in
dec
es
test
ds
sub
int
jp
xchg
aad
mov
mov
in
lret
adc
cmp
test
jge
dec
sbb
mov
clc
lods
repz
mov
scas
out
sub
rcrb
inc
imul
adc
or
aaa
cmp
stos
cmp
xor
cltd
push
cli
lock
fdivrl
fstpl
pop
pop
dec
out
stos
xor
xor
test
ret
sub
shr
sub
push
dec
push
sub
cmovo
jns
jmp
cmp
push
mov
add
fdivrl
mov
mov
mov
aam
int
add
inc
adc
sub
ja
xchg
rolb
jp
mov
pop
inc
adc
fstpl
inc
cs
loopne
push
imul
incb
xor
inc
jns
mov
mov
xor
adc
jp
mov
fwait
sub
pop
repnz
dec
cltd
loopne
push
inc
mov
xlat
rcrb
xlat
pop
mov
push
bound
or
add
ss
es
iret
mov
in
mov
fiadds
sbb
enter
mov
push
movsb
sbb
rcrl
dec
int
inc
pop
cmp
pop
xchg
loope
sbb
jno
xor
xchg
stos
or
stos
pop
mov
and
fstp
or
jo
and
fiadds
mov
es
pop
popf
sbb
or
push
sahf
inc
and
and
inc
popa
push
cmpsb
in
mov
inc
adc
rolb
jmp
pushf
addb
xchg
in
inc
pop
xor
xchg
dec
ds
jbe
repz
mov
cs
test
jb
push
int3
and
negl
or
cmc
aam
add
mov
addr16
add
push
sbb
out
mov
and
xor
xor
aad
cwtl
jecxz
sub
mov
push
push
enter
jecxz
jo
test
insl
lahf
sti
clc
xchg
insl
mov
xchg
outsb
in
or
out
mov
xor
orb
out
sub
fs
cmpsl
jbe
sti
movsb
push
jmp
bound
and
add
mov
push
adc
dec
lods
in
sar
sub
mov
das
es
sbb
shl
lcall
scas
mov
mov
hlt
push
data16
sub
in
xorl
out
xchg
and
xchg
call
mov
sub
cmp
daa
sub
cltd
dec
mov
out
cmp
pop
cmp
das
outsl
xor
daa
jge
push
testb
mov
mov
stos
out
sbb
lods
movsb
or
ret
je
jmp
shrb
fdivrl
jle
aaa
cmp
inc
sbb
aam
ljmp
movq
sub
mov
add
lahf
stos
add
subl
mov
pop
cmp
mov
inc
mov
inc
add
addr16
push
repnz
scas
outsb
mov
std
scas
inc
ljmp
aas
loope
ss
test
test
xrelease
fcomps
cmpsb
fisubl
push
pop
pop
sub
popa
cltd
dec
and
lret
pop
int3
inc
sbb
arpl
xchg
inc
adc
inc
ss
mov
flds
ficoms
outsl
jp
out
and
insl
leave
push
or
jno
movsl
push
mov
adc
fisubrl
mull
outsl
arpl
jne
loopne
sar
dec
or
call
mov
cwtl
add
stc
or
and
inc
lret
push
pop
adc
sarb
sbb
test
lea
lcall
adc
jmp
sahf
push
sub
decb
jp
jae
push
push
and
jle
jp
sub
rcrb
or
scas
pop
dec
xchg
xor
jo
inc
daa
mov
fmull
add
jae
cmp
idiv
std
push
push
sub
mov
cmpl
daa
and
jo
adc
push
or
jge
fstpl
cli
nop
xchg
mov
inc
or
outsl
inc
pop
cmpsb
pop
dec
sub
cld
push
in
loope
xchg
dec
nop
pop
mov
jge
sbb
pop
mov
scas
fisubrl
pusha
pop
inc
pop
ss
dec
call
arpl
jle
xchg
je
sub
and
out
mov
loope
sbb
ja
pop
xchg
mov
dec
mov
lea
out
cmp
push
xchg
fstpl
fwait
clc
xor
add
fisttpll
es
subl
sub
sub
mov
movsl
adc
cmp
orl
inc
pop
fstl
mov
je
es
enter
add
insl
sbb
inc
cmc
ja
cld
adc
in
test
or
nop
lock
ficomps
jns
fdivl
lret
sub
in
in
sahf
aas
push
lret
push
pop
mov
push
or
sub
add
push
mov
stos
xchg
pop
stos
inc
cwtl
aad
inc
pop
jo,pn
inc
test
fidivrs
xchg
inc
pushl
jl
xchg
lock
daa
aam
jmp
std
icebp
enter
or
push
jae
inc
lahf
jp
mov
scas
inc
or
fsubrs
cmp
mov
push
out
cmp
sub
jl
mov
imul
aam
sub
xchg
mov
jnp
cli
fucomi
shll
and
jns
mov
andl
or
cmc
andb
jge
aas
inc
sti
mov
sbb
add
mov
fnstsw
dec
add
or
daa
sti
mov
and
shll
icebp
subb
cmpsb
rclb
push
jle
cli
frstor
stc
xor
push
push
stc
mull
mov
fimull
mov
test
rol
loopne
stos
pushf
faddl
lock
dec
xor
inc
std
bound
aam
mov
and
dec
test
iret
aam
shrb
push
imul
cwtl
dec
into
popa
lods
jb
xchg
mov
add
jo
je
sbb
add
int3
sbb
jl
test
dec
mov
repz
pop
add
punpckldq
sub
mov
icebp
cmp
lods
xor
movsl
sahf
out
insl
insb
push
ja
cmpsb
cltd
jmp
std
sub
ljmp
mov
add
pop
lods
repz
push
push
cmpsb
enter
inc
andb
sbb
adc
pop
gs
dec
sub
push
mov
insl
pop
jmp
sbb
sub
fs
lahf
shlb
inc
ficompl
shrl
pcmpgtb
sahf
push
push
rcll
xor
popa
jae
arpl
rorl
into
loopne
int
xor
xchg
lods
rcrb
iret
mov
idiv
jb
jno
es
dec
jp
mov
sbb
insl
jg
jp
jmp
mov
mov
pop
adc
mul
adc
xor
ret
lock
mov
push
filds
call
sub
inc
sti
rorl
fiadds
imul
fistps
pop
and
psubb
sar
mov
inc
pop
xor
sub
cmpsl
mov
dec
insb
adc
jecxz
push
sbb
mov
mov
lock
jge
push
push
push
shll
sub
pop
ss
and
add
jnp
cld
mov
xchg
into
fcomi
outsl
repnz
jle
fmull
and
xorb
test
adc
push
call
aad
sub
jnp
rcl
rolb
mov
push
inc
fisubrl
sub
and
xchg
dec
repz
mov
rol
ret
or
sbb
adc
dec
out
into
cld
fidivl
xchg
or
xchg
sbbb
int3
sarb
inc
dec
in
arpl
inc
sub
inc
jp
sbb
xchg
inc
cli
jle
jmp
mov
xchg
or
fists
je
pop
and
subb
arpl
movsb
lret
lds
out
test
xor
cmp
loopne
fdiv
mov
mov
pop
adc
adc
popl
in
xor
popf
push
insl
enter
push
iret
subb
or
fxch
cli
call
cmp
enter
add
jbe
sbb
cld
pushf
jne
cmc
fs
xlat
add
xor
vmread
xchg
loop
push
outsl
ret
add
push
and
cmpsl
cmp
jl
jp
inc
and
or
fisubrl
cs
jl
push
pop
das
cmp
mov
test
int3
sub
add
into
mov
sbb
in
mov
inc
inc
das
cwtl
xchg
pop
inc
insl
mov
imul
stos
enter
fs
pop
mov
push
ss
rolb
mov
stos
faddp
scas
int
popf
dec
sub
enter
sbb
mov
sbb
gs
jne
rolb
int
imul
jmp
and
pushf
mov
dec
adc
decb
sahf
push
inc
xlat
jae
pusha
or
xlat
cs
stos
hlt
or
test
ret
adc
es
lods
push
testl
mov
and
push
mov
pop
aam
cs
popa
ljmp
sub
dec
mov
cmpb
cmc
mov
daa
imul
sbb
hlt
inc
jge
repz
xchg
cmpsl
andb
push
in
bound
aas
ficompl
sahf
inc
sub
mov
lea
xor
dec
imul
xchg
xor
andb
or
xchg
and
and
aad
out
mov
jl
loop
lds
add
insb
imul
xor
into
inc
xor
mov
fsub
fisubs
hlt
xchg
adc
cli
jmp
fsts
les
xor
loop
stos
xchg
pop
cwtl
test
sbb
jl
loop
cmp
push
test
mov
or
mov
andl
mov
enter
test
cwtl
or
cmp
push
stc
mov
cmp
gs
mov
ror
xor
xor
shrl
mov
mov
lods
sbb
fcoms
jmp
repz
push
mov
cmpsl
sub
sahf
fucomip
data16
xor
xchg
xor
jno
cmp
jle
push
js
lods
mov
dec
and
push
bound
popa
pop
test
out
dec
pop
sub
fists
mov
or
inc
push
xor
in
in
rolb
or
rorb
jecxz
xchg
pop
les
pop
in
cli
jo
jno
test
cld
jmp
out
or
data16
cli
jo
jg
call
out
push
test
ds
jp
inc
fs
push
or
cltd
xchg
imul
jb
sub
sub
sub
mov
mov
je
lods
mov
es
or
add
lock
mov
and
push
sbb
stos
sbb
push
xchg
mov
inc
xor
stos
mov
mov
lods
cmpsl
repnz
ffreep
cmp
add
adc
pop
pop
cs
sbb
aad
mov
outsb
in
test
and
sbb
cmpsl
sub
mov
fs
rorb
dec
mov
mov
or
mov
pop
add
iret
or
stos
es
mov
xchg
out
xor
scas
into
push
mov
sub
insl
enter
sbb
push
push
inc
adc
cli
subb
dec
sbb
cmp
out
data16
ja
or
xor
push
aas
popa
cmpb
ret
inc
repnz
lods
xchg
inc
sti
lcall
dec
mov
arpl
fldl
in
out
jno
jge
or
mov
test
call
punpcklbw
mov
into
mov
jne
mov
push
mov
testb
adc
fists
sub
mov
xor
sbb
sub
mov
out
test
pop
jae
cmp
jle
scas
divl
xchg
push
pusha
movsb
aam
notb
xchg
call
jae
xchg
fldcw
cmp
fs
xor
jle
add
fucom
or
push
mov
add
ljmp
mov
xchg
lahf
fisubl
jbe
lcall
test
mov
mov
jb
mov
xor
out
cmc
add
adcl
repnz
filds
out
stc
push
jmp
and
add
lahf
cmc
je
rclb
sbb
mov
out
out
push
mov
insb
mov
xor
jns
ja
dec
out
sub
int3
mov
repnz
push
mov
movsb
dec
push
lret
int3
orb
in
push
sbb
int
xchg
jo
add
pop
cwtl
orb
mov
xchg
dec
cltd
fwait
and
mov
aam
ret
fldenv
rcrl
or
mov
adc
in
in
pop
call
cmp
loope
xlat
iret
cs
jo
jnp
bound
or
mov
arpl
jae
int
sub
cwtl
outsl
out
cmp
pop
lret
pop
sbb
mov
xchg
imul
mov
loope
inc
movsb
loope
xchg
pop
or
fnstcw
mov
jmp
xchg
fs
lock
test
adc
gs
fdiv
xchg
sahf
and
push
lods
add
mov
cmpsb
out
mov
out
rcll
dec
mull
push
ret
jp
xchg
lcall
mov
dec
xor
fidivrs
mov
ja
and
jns
mov
add
lods
sarl
ljmp
inc
jge
or
fnstcw
or
in
ss
out
stos
test
add
cmp
push
adc
mov
jmp
dec
add
dec
pusha
fcmovnb
inc
mov
out
aad
dec
mov
roll
and
sub
push
adc
cmp
fsubrs
pop
popf
les
push
lock
ret
xchg
mov
push
ljmpw
xor
mov
out
jp
mov
or
fnstcw
and
frstpm(287
repnz
mov
push
mov
outsb
push
cli
mov
fs
out
std
aad
mov
cmpsl
push
cmc
add
jb
add
imul
cmp
mov
adc
sub
mov
lret
aam
or
add
xor
je
jb
cmpsb
rorl
adc
cmp
imul
ret
in
mov
add
inc
mov
inc
inc
in
aad
outsl
mov
cmp
rcll
rclb
adc
mov
aam
jne
pop
lock
jbe
lock
test
cltd
pop
fdecstp
test
jae
int3
hlt
mov
push
test
inc
dec
inc
fnsave
pop
mov
fucomi
mov
mov
push
shrl
out
mov
lret
add
or
cmp
andb
mov
cs
push
mov
notb
add
inc
cmpsb
dec
mov
cmpsb
pusha
popa
ret
adc
jns
subl
mov
cmp
xor
gs
fldenv
lcall
sarl
mov
xchg
call
dec
leave
fldcw
gs
or
push
les
fbstp
cmp
sti
adc
repz
enter
mov
xorl
lds
mov
int3
mov
ror
dec
aas
outsl
sub
jns
pop
jbe
jns
imul
cli
sbb
movsl
lahf
pop
or
mov
jbe
mov
push
into
scas
jo
and
loope
pop
popa
xor
fisubs
rcl
les
arpl
loope
add
mov
adc
lods
xchg
inc
cmc
push
mov
xrelease
ljmp
sub
ds
push
aad
ficomps
sahf
outsb
lds
popa
mov
rclb
pop
jno
cltd
shrl
push
jbe
and
xor
jnp
pushf
repz
mov
inc
pusha
mov
loopne
inc
cs
and
dec
sbb
push
cmp
inc
pop
add
mov
hlt
jne
mov
mov
cltd
cmp
movsl
pop
lcall
jo
mov
push
sbb
fs
shr
in
jae
adc
add
in
cmp
push
loope
jae
js
cmp
jo
mov
push
sub
outsl
mov
mov
pop
sbb
push
rclb
push
xchg
push
xor
cmpsl
loope
hlt
push
subl
cli
aad
pop
outsl
test
push
mov
fmull
mul
sbb
mov
dec
push
adc
bnd
jne
sbb
in
mov
das
mov
adc
jno
popf
cs
xchg
test
xchg
xchg
mov
aaa
pop
or
xchg
scas
loopne
icebp
or
dec
add
sub
flds
sbb
sbb
loopne
lds
cmp
inc
int
dec
out
push
jmp
dec
and
sub
mov
add
test
add
inc
pop
and
mov
addr16
pop
imull
mov
jbe
inc
outsl
jae
cmp
pop
dec
int3
arpl
xor
mov
or
sub
sbb
mov
insb
idivb
xchg
add
inc
mov
jnp
sbb
pop
dec
xchg
sub
dec
xlat
xchg
cmp
mov
iret
mov
push
and
cs
notrack
outsb
cmp
jae
sub
mov
mov
mov
mov
rcrb
adc
repnz
mov
test
adc
sahf
adc
xlat
out
hlt
fstl
cwtl
cs
stos
loope
shlb
mov
ss
dec
pop
mov
daa
mov
fmull
pop
cmp
les
mov
jecxz
xchg
sbb
pop
rclb
inc
add
out
pop
scas
andb
mov
stos
or
adc
sahf
adc
pop
xor
sub
int3
pop
cli
gs
outsb
adc
lret
push
jns
je
adc
mov
stos
pop
mov
test
cltd
test
inc
lcall
push
repz
push
add
pop
jg
mov
ss
insl
in
out
dec
mov
int3
test
aas
lcall
pop
ret
pop
aad
cmp
push
lret
stc
mov
mov
je
leave
mov
sub
fbstp
xchg
mov
movl
daa
popa
push
test
add
jae
mov
push
jle
push
insb
xchg
ss
sbb
sub
das
movb
lret
jp
inc
rcr
dec
mov
es
out
or
cli
push
daa
jmp
std
rcrb
sbbl
wrmsr
lods
inc
aaa
or
cs
cmc
shll
ds
xor
cmp
xor
push
ljmp
lods
jmp
andb
cmp
xchg
pop
orl
cmp
sub
pop
subb
dec
xchg
cmp
cmp
shr
pusha
push
xchg
mov
push
pusha
mov
inc
and
pop
sbb
push
push
repnz
insl
and
jle
mov
movsb
mov
fwait
inc
mov
xchg
push
dec
loope
dec
cmp
divb
testb
cmc
xchg
adc
repnz
ret
iret
out
xchg
aaa
gs
sbb
lret
int3
aad
aad
inc
movsb
lret
rcr
test
adc
pop
inc
push
or
loopne
cld
repnz
cmp
sub
sbbb
rolb
mov
hlt
shll
push
sub
data16
inc
fistpl
inc
in
loop
and
cmp
addr16
cmp
imul
adc
test
adc
xchg
je
shll
das
lcall
in
pop
sahf
jnp
mov
or
jp
loop
shll
adc
xlat
jb
fmull
lock
dec
pop
xchg
aaa
or
ficompl
mov
jmp
sti
cmpsb
mov
mov
test
cmc
jge
lret
or
push
mov
mov
push
test
inc
dec
dec
in
aas
or
into
into
jbe
movsl
push
or
int3
dec
lret
sub
push
lods
clc
dec
pop
stc
push
jp
dec
js
arpl
mov
mov
sub
loop
mov
push
cmp
xlat
subl
out
dec
dec
cmp
movsl
add
jns
push
aam
jmp
fistpll
mov
sub
mov
add
mov
ret
rcr
loopne
int3
daa
inc
std
sub
aad
test
clc
outsb
jl
int
ljmp
rcrb
cmpsb
mov
shrl
xchg
test
xchg
push
fistps
add
ja
pop
adc
stc
pop
sbb
pop
inc
xchg
fsubs
hlt
xchg
shll
xchg
mov
push
in
inc
jo
jmp
mov
ficomps
lea
pop
mov
adc
popf
xlat
mov
call
dec
push
cmp
es
movsb
das
push
and
js
jg
test
mov
or
lods
and
push
cmpsb
push
xchg
cltd
and
mov
out
jge
and
sbb
mov
push
sub
out
in
popa
dec
sub
les
mov
mov
ffree
inc
shrb
dec
jle
and
mov
inc
jl
dec
btc
sub
aad
ljmp
fs
sbb
ja
shrl
mov
xchg
mov
mov
les
lods
pop
mov
mov
mov
stc
mov
out
adc
mov
sar
imul
in
and
mov
les
push
dec
jp
popa
out
pop
lcall
in
fists
dec
popl
mov
or
inc
pusha
test
xlat
push
rcrb
xor
lcall
jmp
in
insb
dec
ret
aad
adc
hlt
not
notb
push
lock
int
mov
fldt
dec
ja
paddusb
push
or
mov
rcll
pusha
add
inc
push
out
cmp
jo
shrb
jb
mov
dec
out
jge
mov
mov
add
enter
stos
and
ds
inc
dec
xor
jmp
repnz
in
ficoml
xchg
test
rorl
dec
enter
mov
push
cltd
test
orl
cs
and
repnz
mov
adc
test
dec
fsubs
jb
gs
rorl
lods
push
mov
enter
dec
sub
cmc
scas
cmp
inc
rcl
mov
mov
push
push
pushl
aas
arpl
or
push
dec
push
push
dec
cmc
faddl
xorl
and
pop
and
push
cs
jno
add
pop
mov
in
cld
aas
movlps
or
push
and
or
sbb
ret
iret
push
and
ret
popf
mov
sub
scas
xor
int
out
int3
loopne
jg
mov
cmp
mov
mov
mov
sub
jne
inc
pop
into
mov
scas
jmp
cmpl
cmp
cmp
shll
pushf
xlat
push
adc
add
mov
fsubrs
sbb
mov
or
lcall
mov
mov
add
add
out
xchg
adc
mov
shr
mov
jle
roll
jmp
mov
push
push
pop
lret
jb
dec
lret
inc
push
push
mov
jecxz
cltd
mov
add
std
jnp
push
ljmp
insl
lds
mov
sarl
ss
push
or
loopne
pop
add
push
jae
add
popa
repnz
loope
sarl
in
pop
jbe
leave
adc
mov
cltd
xchg
push
jns
sbb
xchg
push
jg
push
jns
sti
add
ret
ficompl
push
xchg
add
iret
xchg
mov
ss
xchg
mov
cmp
jo
fsubl
in
ljmp
mov
fistl
aam
insl
and
xchg
rclb
cmpsl
jns
outsb
pop
hlt
ret
cmp
push
dec
sub
shlb
out
cmp
mov
pop
loop
out
or
push
call
bnd
bound
test
and
shll
rclb
clc
jp
pop
xor
sbb
push
or
cmp
enter
aaa
fs
and
outsl
scas
pop
push
cmp
xchg
pop
mov
jp
sbb
cld
jge
dec
clc
bound
je
lret
imul
mov
in
in
inc
cmp
shrb
dec
jb
add
int
and
scas
mov
sub
or
mov
shrl
sub
cmp
jp
imul
rcrb
scas
movsl
xor
rdmsr
ss
sub
add
bound
or
xchg
sar
rcll
sbb
and
lds
pop
cmpsl
mov
sbbl
insb
ljmp
popf
dec
push
cli
outsb
test
sahf
cmp
stos
fsubrs
or
rclb
mov
jnp
insb
mov
scas
push
xchg
aam
inc
test
jmp
sub
or
fldcw
sub
adc
add
imulb
xchg
call
mov
dec
call
and
inc
push
sbb
and
or
in
push
repz
dec
icebp
jne
and
les
mov
aaa
add
repnz
sbb
push
imul
mov
cmpsl
imul
lret
out
jb
dec
rcrb
enter
inc
mov
mov
sbb
in
push
or
lcall
mov
adc
mov
mov
cmp
test
lds
xchg
mov
daa
push
mov
int
push
jne
push
xor
ja
mov
mov
pop
or
test
dec
cli
and
rclb
jns
add
add
cltd
ret
test
jbe
idivb
insl
pop
cmpb
push
shlb
add
aaa
pop
pushl
cmpsb
mov
in
jnp
jmp
stc
jecxz
jecxz
fstpt
push
xchg
jbe
in
xchg
cmpsl
and
das
ret
pusha
mov
or
mov
sub
loopne
push
jo
jge
cmp
shll
fimull
push
adc
xchg
push
xchg
xchg
dec
xor
repnz
sbb
aas
pop
shlb
push
mov
scas
mov
inc
sub
insl
pop
out
sub
inc
aad
hlt
popl
dec
pop
jge
add
xor
and
sarl
fs
leave
nop
mov
adc
dec
lods
mov
dec
gs
sub
jecxz
push
inc
les
test
adc
xchg
cli
adc
inc
int3
iret
add
adc
mov
jne
popa
push
iret
imul
push
xchg
xor
xor
pop
shrb
mov
loop
mov
test
mov
ficomps
insl
adc
push
nop
cmp
cld
movsb
add
clc
xchg
test
pop
or
outsb
loope
xor
and
xchg
fs
push
pop
shlb
cld
std
rolb
lea
in
mov
fsubrs
push
jne
add
xchg
dec
rorb
in
push
mov
add
mov
scas
ret
mov
stos
mov
out
cld
xchg
jns
test
xor
pushaw
stos
xlat
test
es
mov
stos
push
sbb
in
or
sub
cmp
adc
aaa
xorb
call
mov
jle
test
fldenv
sub
ret
fwait
cmp
jno
arpl
scas
in
and
loop
ds
sub
es
or
dec
pop
jl
mov
aas
pop
mov
adc
popf
push
add
shlb
xchg
std
je
dec
dec
push
xor
mov
jp
xchg
movsl
cmp
mov
icebp
jecxz
sub
jp
cmp
sbb
pushl
sub
or
divb
movsl
stos
out
xor
lret
frstor
dec
outsb
mov
pop
repnz
mov
popa
sbb
pop
adc
inc
pop
mov
adc
in
outsb
ret
lock
cmp
cmp
in
inc
daa
fsubrp
lock
je
dec
xchg
mov
lret
scas
push
sbb
ret
aam
add
lds
sub
fistl
mov
js
xchg
mov
push
fisttpll
mov
imul
in
rcrb
pop
dec
mov
insl
es
rcll
adc
out
mov
or
test
cmp
push
dec
rclb
out
sahf
nop
jo
mov
xor
mov
in
fdivs
inc
iret
adc
test
inc
sbb
cmc
and
insl
cmc
cmc
xor
popf
cmp
jo
add
inc
xchg
and
or
push
cmp
fildll
cmp
mov
pop
inc
aaa
jmp
notl
test
mov
dec
stos
pop
jno
cmpsb
jo
mov
mov
bswap
mov
mov
xor
and
cmpsl
push
clc
sbb
and
sub
nop
bound
insb
mov
lahf
in
xlat
out
mov
jns
loop
and
loope
fmull
sub
mov
bts
in
xchg
leave
or
les
mov
mov
loop
xor
es
shlb
cmp
xchg
mov
jo
fucom
mov
loope
add
and
or
lret
mov
je
inc
mov
mov
push
lret
fcmovb
gs
and
pushl
sub
cwtl
movsb
add
mov
shrb
fsts
inc
lcall
xchg
cmp
shl
test
cwtl
sbb
cmp
shlb
xchg
lods
fstl
mov
insl
xchg
pop
mov
loope,pt
test
fiaddl
mov
cmp
into
xchg
dec
aas
push
rcll
push
or
jg
cmp
adc
pop
jno
lret
mov
leave
out
dec
scas
xchg
and
mov
shrb
insb
cmpsl
lock
rol
inc
cmp
dec
clc
sub
das
repnz
out
mov
or
fistl
idiv
pop
or
jecxz
outsl
ja
xor
mov
mov
cmpsb
out
mov
jmp
sub
imul
mov
addr16
fbstp
fisttpll
xchg
movsb
incb
push
scas
lods
jmp
inc
mov
sbb
shrl
lret
shll
and
lcall
dec
mov
mov
add
daa
push
ljmp
inc
cmp
mov
xchg
out
or
jae
scas
sub
push
pop
aam
mov
add
mov
xor
mov
lret
outsb
push
jge
in
out
stos
push
mov
shl
jl
and
shl
lods
aam
cmpsb
xchg
cmp
loop
inc
xchg
xor
lods
sbb
sub
imul
lods
sbb
fwait
sbb
popf
stos
test
clc
lret
sub
or
sbbb
lea
in
jne
cmp
mov
inc
fucom
adc
xchg
jae
mov
inc
xor
or
fisubrl
xchg
mov
aaa
pushl
outsb
pandn
jg
in
lds
fwait
xchg
mov
int
pusha
dec
call
push
push
lds
dec
fwait
movsl
je
cmpsb
loope
cwtl
daa
arpl
add
or
in
movl
inc
outsl
cmp
mov
lods
fmuls
xchg
push
fsqrt
sbb
cmp
xchg
icebp
jg
out
pop
push
push
or
cltd
loope
xlat
or
addl
fstpl
iret
inc
incl
cmpsl
ret
push
sbb
sarb
jle
jne
out
jp
lret
inc
out
lret
pop
in
addr16
xor
xor
jo
in
outsl
jne
xchg
pop
mov
lahf
dec
jmp
leave
stos
mov
pop
movsb
push
imul
mov
add
jo
mov
popf
or
fisubl
es
xchg
insb
repz
push
pop
cmpsb
push
mov
adc
ja
xor
jp
cli
fidivl
adc
mov
mov
xorb
dec
adc
pop
pop
mov
add
xor
lcall
jb
jnp
jnp
repz
xchg
push
xchg
adc
loope
mov
jbe
repnz
in
aas
faddp
cmpsl
add
and
or
loopne
xchg
pop
mov
pop
repz
add
cli
add
mov
icebp
stc
xchg
adc
inc
inc
or
jne
aas
and
pushf
pop
or
ret
in
inc
or
inc
inc
cmpsb
mov
int
and
add
lret
mov
cwtl
sbb
sub
out
repz
or
fmulp
dec
and
ljmp
add
xchg
in
scas
dec
mov
iret
nop
aas
mov
add
lahf
push
je
leave
lea
inc
bound
lret
pop
ret
decb
mov
imul
cs
pop
sbb
stos
xchg
imul
cmp
sbb
aas
arpl
and
sub
dec
sub
or
fldl
pusha
repz
pusha
jmp
jae
gs
add
sub
rcrl
push
mov
cmc
mov
xchg
adc
int3
cmp
mov
mov
inc
mov
inc
inc
mov
outsb
fimuls
jmp
int
and
mov
lcall
xchg
out
dec
pop
cmp
sbb
cs
jnp
jb
or
lods
xchg
call
incl
daa
xorl
lcall
aad
ds
sahf
mov
cmpsl
or
int3
popf
ret
or
out
add
push
lock
sub
cmp
lea
xor
cmpsb
jg
add
sub
imul
test
dec
pop
mov
xorl
psllq
out
push
cwtl
adc
mov
dec
loopne
pushf
push
push
gs
push
jmp
xor
jb
popa
fidivl
leave
ret
sbb
adc
scas
data16
stos
sbb
sub
sbb
mov
in
push
div
sub
jg,pt
adc
cmp
cmp
outsl
adc
in
xchg
inc
pop
outsb
pushf
xor
inc
xlat
inc
mov
bound
mov
inc
mov
add
adc
xor
pop
loopne
cli
add
pusha
push
out
fs
and
roll
shlb
cmp
mov
xor
cmp
stos
loop
clc
sahf
push
icebp
mov
push
mov
lods
jp
leave
pusha
xchg
jbe
cltd
and
cmpsb
and
ror
jae
lds
arpl
mov
fsqrt
mov
jnp
aas
push
sub
je
cmp
xor
sti
sti
xor
stc
pop
push
sub
and
pusha
adc
adc
xchg
scas
mov
ret
mov
loope
in
lcall
mov
jge
push
arpl
bound
lock
cmp
or
sbb
dec
shll
sub
adc
lock
jo
add
in
cwtl
xor
push
call
xor
xchg
dec
cmc
imul
push
mov
mov
add
int3
test
inc
dec
nop
sub
clc
mov
or
nopl
mov
inc
inc
mov
pop
xchg
lret
push
int3
adc
js
mov
orl
jmp
xlat
push
movsb
ss
cmpsb
mov
cli
jno
sbb
xchg
test
out
jl
xchg
mov
xor
mov
addr16
push
cmpb
iret
insl
dec
cmc
sbb
add
jle
das
iret
sti
xchg
bnd
push
xchg
ljmp
gs
and
pop
xchg
xchg
es
imulb
aaa
mov
fst
mov
adc
jecxz
fwait
std
in
mov
mov
int3
add
mov
push
shlb
dec
xlat
in
mov
call
lret
insb
leave
xchg
por
arpl
test
inc
inc
sub
lea
inc
bound
loope
lret
test
or
xchg
das
std
xchg
ljmp
mov
push
jo
fs
call
add
movsl
into
adc
jno
movb
add
mov
add
add
push
and
fldcw
xor
test
ljmp
shl
fstp
daa
inc
lea
loope
das
repnz
adc
outsl
mov
and
dec
enter
sbb
imul
pop
fwait
add
idivb
and
ds
ret
cs
sbb
xor
imul
dec
adc
cltd
aas
int
inc
sbb
push
out
or
or
ds
loopne
inc
mov
mov
push
adc
out
lods
pop
mov
pop
mov
dec
xchg
ret
mov
jae
leave
xchg
and
jnp
jmp
cmpsb
sbb
pop
mov
je
into
xchg
or
js
enter
lock
mov
pop
out
sbb
sbb
flds
mov
cli
filds
push
xor
loopne
adc
jge
cmp
xor
adc
and
out
jbe
xor
hlt
inc
pop
cmpb
dec
pusha
icebp
add
out
mov
repz
mov
adc
scas
pusha
lds
and
ret
fdivrl
xor
imul
bound
cmp
mov
cwtl
mov
adc
insb
cmpsl
subl
mov
loop
mov
mov
cmpsb
jg
sbbl
xchg
and
mov
adc
mov
in
sbb
mov
mov
mov
xchg
mov
pop
xor
cwtl
sarb
pop
cs
dec
in
xor
rcl
cmp
sub
in
lods
adc
add
mov
call
mov
mov
int
or
shlb
push
adc
shr
mov
icebp
mov
add
lcall
mov
rcrb
jle
mov
repz
push
scas
sti
ret
repnz
mov
mov
pushf
mov
movsl
bts
scas
push
jnp
popf
adc
cmp
imul
adc
dec
xor
lret
idiv
ja
pop
das
in
and
inc
xor
sub
mov
test
mov
inc
adc
imul
adc
imul
in
sti
mov
andb
lock
add
mov
push
push
push
adc
inc
mov
es
jns
jp
and
cmpsb
mov
or
add
mov
inc
and
insl
xchg
dec
jne
mov
mov
mov
jle
jb
mov
dec
jl
fldl
xchg
pop
and
mov
inc
inc
ds
movsl
xor
ret
js
dec
push
and
lods
roll
push
and
and
loopne
iret
dec
in
dec
xchg
sbb
lret
jne
push
outsl
mov
mov
cltd
sub
nop
stos
jecxz
mov
pop
mov
insl
outsl
test
mov
xchg
stos
sbb
pop
aas
xor
imull
push
data16
pop
sbb
inc
xor
fwait
push
imul
cmpsb
jae
mov
iret
mov
imul
scas
in
ja
pop
mov
loope
sub
out
mov
movsl
inc
add
subl
das
lock
hlt
xchg
mov
cmp
jb
xchg
in
pop
push
adc
imul
insb
push
pop
ret
js
dec
mov
xchg
add
sub
jbe
xchg
daa
mov
mov
or
mov
xor
rcll
das
mov
outsl
xchg
stos
jmp
inc
das
or
movsb
cltd
xor
dec
jp
rclb
call
in
jne
out
into
aaa
and
sbb
enter
jp
mov
cmc
popf
fmuls
pop
cmpsl
mov
push
std
cmc
xchg
jno
ds
aaa
jbe
or
mov
mov
and
xor
pop
adc
out
xchg
mov
arpl
mov
xor
scas
fs
lahf
int3
rcr
je
lahf
push
cwtl
mov
sub
dec
add
mov
sar
divl
addr16
aas
adc
push
fnstenv
jecxz
xchg
shrl
cli
arpl
and
push
pop
dec
mov
xchg
and
insl
and
jns
inc
mov
scas
rcrl
rcr
and
mov
cmpsl
aaa
ret
inc
negb
sar
movsl
repz
pop
mov
nop
sbb
push
outsb
test
icebp
cltd
push
loopne
and
stc
sbb
mov
dec
lea
push
icebp
pop
call
xchg
addr16
push
push
jno
sbb
fmull
jnp
cld
shld
cmp
fstp
pop
cmc
sub
jl
stos
sahf
pop
in
int
jae
ss
ret
ds
cmp
mov
gs
scas
jmp
cld
bound
ss
fwait
insl
mov
dec
or
aas
and
popa
xchg
and
sub
lahf
scas
ja
xor
inc
fidivl
stos
mov
repz
mov
movsl
stos
jno
sbb
iret
out
popa
sbbb
sub
mov
adc
test
and
sub
and
sub
int
xchg
ret
push
adc
inc
or
jle
cmp
and
cs
push
add
xchg
jnp
addl
lods
ja
adc
sahf
xchg
jp
mov
mov
scas
sub
flds
pop
ret
ret
adc
lock
cmpsl
mov
aas
pushf
or
mov
dec
cmpsl
and
cwtl
or
aam
shl
es
sti
mov
ja
sbb
data16
mov
xor
out
cwtl
es
mov
lret
xchg
shlb
xchg
sbbb
aas
mov
pop
cmpl
adc
jo
jecxz
mov
fdivrl
loopne
jg
pop
int
fdivl
imul
icebp
mov
xchg
cli
mov
sub
fst
jle
test
out
fisttpl
psubsb
push
sbb
xchg
out
mov
mov
push
mov
fucom
inc
imul
dec
punpcklbw
mov
pop
adc
or
mov
and
mov
flds
push
int3
icebp
sub
dec
dec
movsl
addb
addb
repz
out
add
ss
pushf
mov
xor
and
sahf
jp
clc
and
rcll
loop
dec
mov
ds
in
rcrl
mov
push
cld
jle
push
fisubrs
cld
xchg
inc
jg
mov
ss
lret
imul
xlat
in
jl
aad
rcrl
or
out
push
fs
lcall
aam
icebp
jg
das
sbb
pusha
or
pop
lds
cmp
pop
jmp
repnz
testl
fidivrl
das
push
test
movsb
cli
mull
adc
xchg
movsb
shl
push
stos
sbb
aas
cmp
nop
outsb
inc
iret
popf
or
aaa
cltd
xor
daa
mov
into
leave
push
addr16
adc
push
sbb
and
push
lahf
push
add
repnz
inc
and
dec
pop
push
jae
cmp
xlat
cwtl
sbb
jp
insl
or
cltd
or
inc
mov
clc
fistl
adc
stc
mov
cld
in
aam
add
push
dec
push
jge
mov
imul
adc
loop
test
scas
and
jno
push
lods
gs
adc
add
ret
adc
cmp
subl
fucomi
dec
cmp
lds
popa
add
ljmp
loope
xor
xchg
mov
int
mov
in
iret
cmp
sahf
or
mov
loopne
xchg
popa
fldt
sub
or
insl
add
push
sbb
sarl
jp
fistps
add
je
push
mov
les
loope
mov
inc
in
sar
faddl
xor
sub
mull
scas
sub
xchg
imul
sbb
sldt
lcall
in
daa
loopne
mov
lret
cmp
popf
cmp
adc
pop
adc
in
mov
sbb
pop
inc
xchg
lds
shll
xor
mov
add
sbb
stos
popf
ss
inc
cmpsl
sub
sbbl
or
test
cmc
fldl
fdivs
lds
call
mov
push
cmpsb
lods
out
inc
push
mov
daa
lods
mov
cmpsl
cmp
inc
pop
mov
sub
add
or
mov
shrb
enter
mov
addr16
push
dec
cli
movsb
xor
pop
cmp
loopne
outsl
cltd
push
shrl
add
mov
test
xchg
lahf
mov
mov
aam
int3
icebp
stc
mov
push
jg,pt
mov
rcrl
insb
arpl
sub
imull
jl
pop
sub
xor
rorb
out
outsl
frstor
or
popf
movsb
cmp
das
loop
fidivl
jae
pop
pushf
sub
test
add
dec
mov
mov
cmp
ja
hlt
pop
insl
aam
nop
sub
cmp
movsl
push
push
xchg
pop
popl
out
cmp
jle
mov
push
ds
push
xor
mov
lcall
fsubrl
dec
pusha
cmc
cs
sbb
test
idiv
xchg
and
dec
and
and
sub
dec
cmpsl
fimuls
shlb
dec
in
xor
sbbb
in
push
cmc
ret
mov
popf
mov
pop
ds
stc
jnp
mov
ljmp
and
push
pop
jbe
aad
ret
xor
fistpl
jg
leave
ds
fprem
lahf
or
lahf
pushf
add
and
popf
xchg
dec
lds
and
orl
add
cmp
ds
jl
arpl
stos
mov
mov
xor
inc
dec
shlb
cmp
scas
les
dec
jle
je
ret
inc
pop
sbb
arpl
aad
jmp
int3
cmp
movsl
stos
cmpsb
cltd
out
ds
jbe
lret
lds
cmp
aas
idiv
or
loop
ljmp
arpl
or
nop
insl
sti
notb
into
jl
sbb
pop
loopne
pop
out
imulb
ja
and
pop
data16
fbstp
sub
nop
pop
sub
popa
pop
pusha
dec
notl
clc
cmp
dec
cmpsl
cld
push
lods
loopne
adc
jp
adc
js
push
jb
inc
add
je
dec
lret
popa
and
add
scas
inc
jle
jno
cmpsl
add
and
js
jmp
mov
xchg
mov
bound
loop
mov
repz
mov
dec
cwtl
inc
fstl
je
popf
mov
and
in
jp
cmp
jnp
push
scas
aam
fnstcw
xor
loop
loopne
pop
push
test
loopne
imul
push
and
aas
aam
lds
adc
cmp
addr16
stos
mov
push
pop
addl
daa
xor
sub
add
dec
xchg
iret
sub
add
lds
movsl
lea
xor
test
mov
add
jl
or
lods
in
stos
fiaddl
decl
cld
lahf
push
cmc
outsl
pusha
inc
aas
mov
movsl
jmp
xchg
in
jecxz
jmp
pop
mov
cmp
inc
into
sub
pop
imull
add
in
mov
andl
mov
popa
ljmp
xchg
js
jg
mov
jbe
cmp
shr
mov
repz
jle
les
outsl
shll
cli
push
test
and
or
push
xor
rol
jle
cmp
in
test
bnd
mov
or
adc
adc
xchg
xor
push
pop
dec
cmp
push
mov
mov
jo
mov
movsl
stos
or
shrl
mov
xchg
cmp
pop
push
push
push
in
xchg
lcall
push
dec
insl
mov
ljmp
insb
decb
and
pop
jmp
cltd
push
sub
rclb
jmp
sub
rorb
jae
inc
fmul
aas
add
cmp
aam
and
arpl
xchg
ljmp
jbe
dec
es
cmpb
pusha
mov
repnz
inc
mov
sub
paddsb
imul
ljmp
fsts
aaa
iret
mov
jne
mov
adc
daa
push
or
div
mov
call
sub
fimull
test
les
add
adc
lcall
add
push
inc
push
or
scas
dec
pop
out
es
xchg
xchg
push
rcrl
fmuls
shrl
daa
xor
das
pushf
popf
sbb
pop
fsub
push
inc
out
mov
sub
dec
repz
xchg
add
inc
xchg
mov
push
hlt
fs
push
lahf
mov
cltd
adc
jecxz
cli
mov
out
or
sub
mov
push
push
testb
jg
or
dec
and
orb
scas
movsl
inc
lahf
aad
lcall
sbb
sahf
mov
pxor
adc
ficoml
cmp
andb
push
in
mov
lock
shll
std
jp
pusha
sarl
bound
les
daa
cwtl
or
loopne
mov
mov
push
hlt
loope
popa
aad
into
jecxz
test
shll
das
inc
aas
out
sub
mov
por
adc
add
xor
pop
lods
pop
jno
xor
sbb
jne
adc
jb
inc
shll
outsb
test
lods
jl
cmpsl
or
pop
pop
gs
xor
mov
addl
inc
sarl
ret
dec
lahf
pop
jecxz
ss
fneni(8087
iret
dec
sbb
xor
test
pop
stos
jns
sbb
jo
repnz
dec
push
mov
add
ret
imul
sub
adc
pop
test
cmp
adc
adc
arpl
lret
cmp
js
jmp
js
add
fldenv
xchg
orl
pop
jmp
pop
lock
ds
out
arpl
movsl
xor
xchg
push
shrl
sahf
shr
rcll
or
test
add
inc
jbe
or
pop
repz
fnstsw
into
dec
bound
pushf
push
outsb
pop
fwait
clc
dec
jecxz
cmp
push
pop
jmp
mov
out
cmp
jbe
fimuls
iret
repz
pop
mov
sbb
aad
push
pop
js
cmp
out
test
pop
dec
or
mov
adc
push
pop
inc
in
dec
rolb
jnp
test
push
jge
add
cs
sbb
jae
sub
inc
int
pop
xchg
mov
in
add
xchg
push
pop
inc
arpl
bound
lock
mov
xor
lahf
lock
xchg
in
mov
xor
dec
mov
mov
or
mov
hlt
cmpsb
push
or
add
and
shlb
mov
sub
out
fnsave
dec
pushf
fstl
and
arpl
mov
scas
xor
in
mov
xchg
lods
arpl
push
inc
scas
dec
insb
mov
nop
test
jmp
xor
mov
mov
iret
test
cmp
into
mov
pop
add
rorb
inc
xor
inc
arpl
lret
pop
rclb
xor
jmp
icebp
ficomps
into
dec
pop
aad
push
inc
pop
pop
jmp
sbb
enter
mov
and
inc
xchg
and
cmp
pop
dec
fdivs
mov
sbb
push
sti
xor
inc
scas
jne
dec
mov
mov
jmp
xorb
jo
bound
jg
outsb
jns
sarl
inc
push
mov
inc
push
mov
xchg
and
std
xchg
daa
lock
int
fimuls
test
pop
and
push
push
stos
sahf
into
adc
clc
scas
jae
adc
aad
notb
cld
pop
adc
mov
jbe
stos
fmuls
cmp
cmp
or
ds
and
cmp
fidivl
cli
mov
fcompl
aaa
fbstp
push
cmpsl
cmpsb
rorb
cltd
pusha
inc
and
sbb
fs
es
jmp
cmc
xlat
ja
test
subb
je
mov
lahf
arpl
imul
xor
xor
in
mov
fsubrs
jl
or
pop
addr16
pop
mov
inc
popa
lret
mov
sbb
movsl
cwtl
sbb
mov
xchg
dec
push
pushf
popf
fistl
pop
xchg
movsl
mov
xorb
add
test
in
jge
daa
in
mov
xchg
lret
sbb
fwait
aaa
hlt
icebp
inc
shr
inc
lea
leave
mov
nop
ficoml
lret
aas
loop
ret
or
or
inc
lcall
decl
gs
mov
mov
stos
int
xchg
aad
insl
sub
jg
jno
inc
dec
adc
test
xor
lret
pop
arpl
shrb
repz
and
movsb
imul
or
fcomps
das
adc
dec
mov
mov
sub
adc
mov
pop
aam
movsl
mov
mul
stos
outsl
mov
and
int3
xor
cmpsl
jnp
out
int3
lcall
addr16
jo
adc
aas
sub
mov
xchg
cmp
into
push
and
inc
xchg
clc
mov
mov
xorb
dec
lcall
cmp
loopne
sub
mov
lods
pop
pop
nop
jbe
popf
and
in
mov
sbb
shl
jmp
ljmp
sub
add
pop
pop
lock
cmp
adc
iret
jecxz
jle
mov
or
jecxz
xchg
jg
cwtl
or
pop
mov
mov
addr16
or
mov
and
add
popf
adc
std
filds
outsl
test
mov
fs
mov
push
adc
pop
incb
pop
sub
cmpsb
sub
fstl
in
add
fidivs
push
cltd
inc
and
jo
xor
cmp
add
mov
data16
outsl
fdivrl
xchg
cmc
addr16
iret
mov
cmc
mull
xlat
xchg
adc
pushf
or
pushf
pop
sub
pop
movzbl
loopne
inc
mov
xchg
sti
nop
fimuls
jb
stc
jmp
xchg
mov
pop
stc
mov
and
pusha
out
sbb
cwtl
jne
and
sub
rcl
xchg
mov
lret
mov
imul
mov
ret
dec
xor
pop
xchg
mov
cmp
cmp
inc
add
cmc
imul
loop
inc
test
loop
xor
out
cmpsb
mov
cmpsl
ret
stc
loope
cli
xchg
add
ja
clc
out
xchg
inc
sti
sub
xor
mov
xor
xchg
sbb
adc
clc
sbb
stos
fcom
or
mov
jp
sbb
ret
cmp
sub
inc
jbe
or
pop
movsl
jge
or
loope
jnp
xlat
inc
mov
fsubrl
stos
test
mov
sti
add
incl
push
aas
or
mov
imul
push
jmp
mov
cmpsb
xor
imul
lahf
pushf
mov
jno
pop
mov
lret
add
sarb
jns
outsl
add
sub
push
push
pop
pop
test
push
fwait
mov
mov
dec
cld
aaa
ss
mov
fsubl
adcb
or
cmp
enter
push
jge
sub
sub
pushf
cmp
aaa
adc
roll
push
incl
clc
inc
adc
add
bnd
js
jl
jg
pop
mov
out
mov
arpl
mov
cli
dec
mov
mov
addr16
push
pop
outsl
pusha
add
pop
jo
cmp
insb
push
sub
jo
cmp
mov
add
dec
in
call
mov
mov
pop
pop
aaa
lea
jno
dec
fcomip
sub
jl
icebp
xchg
push
fistpll
and
movsl
bound
jmp
mov
icebp
inc
sub
sbb
mov
mov
add
outsb
cmp
ds
mov
movsl
mov
jmp
aaa
aas
in
pop
std
cld
mov
es
push
dec
push
lea
push
fnstenv
adc
push
cmc
movsb
jno
sbb
ds
test
sbb
pop
cmp
cmpsl
dec
lahf
mov
xchg
push
adc
test
pop
pop
push
fdivl
out
mov
call
clc
insl
xchg
scas
sbb
outsb
loopne
xor
and
xor
adc
movsl
popa
ja
and
sbb
std
test
mov
mov
push
adc
xchg
add
out
nop
add
aad
xchg
xor
clc
pusha
ror
sub
xor
je
mov
adc
lcall
icebp
fadds
imul
sub
int3
cmpsb
sahf
ret
jbe
cmp
cld
repnz
push
push
cwtl
sub
jae
inc
loopne
imul
cmp
popa
pushf
sahf
int
push
inc
or
push
cltd
dec
es
push
mov
stos
fdivrl
and
shl
int
push
jno
cltd
jmp
and
loop
subb
push
push
iret
in
adc
jge
insb
fldt
cmp
sub
pop
inc
jge
pop
je
idivb
pop
pop
rcr
add
add
into
stos
add
adc
rolb
add
mov
sahf
test
xor
push
pop
pop
cli
insl
in
jae
lea
in
js
jnp
in
cmp
mov
in
fistpll
cmp
mov
ds
fistpl
cld
mov
jno
fdiv
pusha
icebp
or
or
mov
mov
je
mov
leave
cwtl
bound
int3
xlat
pop
sbb
add
ds
mov
fsin
cltd
and
stos
lods
mov
out
add
ds
cmp
mov
movsl
inc
lret
mov
lcall
push
push
std
sub
imul
out
enter
xorl
and
cmpsl
shl
in
enter
mov
adc
mov
clc
sbb
stos
jl
xchg
orb
incl
fdivrs
and
fiaddl
sub
cld
test
mov
mov
mov
test
divb
fst
pop
pop
jmp
shll
mov
nop
add
std
sub
cmp
pop
dec
mov
dec
cmp
adc
std
aaa
popa
test
fmul
xchg
fs
add
push
mov
stos
jle
sub
and
aas
add
testl
cs
lea
lods
stc
fwait
data16
int3
scas
fidivs
xchg
and
cmpsb
inc
push
xor
arpl
in
in
add
ss
adc
outsl
jg
jno
das
xor
lret
sti
nop
out
inc
sub
xor
jle
iret
pop
clc
mov
test
test
xchg
repz
rol
aam
push
sub
out
out
xor
jno
mov
xchg
stc
jo
pop
xchg
mov
ret
movsl
jmp
call
gs
jae
int3
nop
cmp
bound
insb
fadds
add
xor
loop
adc
mov
loope
inc
jecxz
mov
or
mov
rorl
mov
jbe
not
xchg
aas
inc
icebp
mov
ljmp
xor
lea
inc
in
sub
jns
fimuls
jp
push
loopne
fistps
mov
lret
out
xorl
pop
frstor
jecxz
in
data16
mov
pop
adc
fisubs
popa
fs
ror
mov
pop
shll
lock
ss
cmc
insb
and
movsl
jb
popf
enter
inc
xlat
aad
ds
addr16
mov
test
aas
cmp
lret
or
pop
inc
lret
or
test
inc
adc
sbb
dec
outsb
fidivrs
jp
sbb
push
jne
rcl
xor
daa
and
or
bound
cmp
stos
cmp
in
insl
call
jle
mov
cmp
mov
scas
push
in
clc
les
pop
push
add
fcmovnbe
add
cld
clc
push
inc
xchg
arpl
testb
cmp
dec
inc
fidivrs
xor
adc
jns
sub
out
movsl
dec
xor
sub
loopne
ficompl
pop
mov
inc
fistpl
mov
sbb
outsl
pop
ja
push
mov
test
ss
sbb
xchg
sbb
dec
sar
in
ret
test
repnz
jmp
inc
adc
jle
or
add
mov
cmp
aaa
jae
mov
repz
push
lret
or
mov
dec
call
adc
mov
maskmovq
xor
dec
xlat
mov
imul
mov
ja
pause
pop
rclb
mov
fucomip
jmp
movsb
and
xchg
pusha
mov
xchg
fiaddl
xor
pop
les
pop
in
or
arpl
sub
ja
jno
cmp
push
cmpsb
xlat
xchg
out
adc
inc
movsl
dec
sub
pop
mov
ds
jae
pop
and
adc
jno
outsl
imul
cmp
adc
pop
sbb
scas
lock
shrl
xchg
mov
nop
fcomps
xchg
faddl
test
stos
xor
jmp
movsl
stos
data16
jb
push
test
lock
fbstp
shl
xchg
xchg
cwtl
cmp
jecxz
cmp
jmp
xchg
out
mov
jae
ja
inc
sub
jae
cs
xor
dec
add
sbb
addr16
lahf
hlt
jns
insl
push
testb
testb
js
dec
daa
sar
in
push
push
out
cld
bnd
sti
filds
outsb
mov
js
mov
fnsave
mov
add
pop
adc
inc
push
test
pop
jne
rcrb
and
rcl
lock
sub
jge
sub
jp
add
in
or
fisttps
ret
sub
fists
xorb
sbb
notl
daa
xlat
xchg
jbe
mov
rorl
xchg
orl
dec
pop
push
or
or
push
jp
adc
imul
jge
adc
cmp
jecxz
cltd
jo
xor
mov
icebp
mov
cli
dec
and
ja
inc
cmp
pop
jle
loopne
jle
dec
jmp
imul
pop
adc
pop
xor
fisttpll
or
pop
lods
scas
orb
sub
xchg
lcall
cmpsl
stc
inc
nop
ss
and
mov
mov
mov
sub
mov
inc
notb
cmpsb
test
int
ss
push
fldl
mov
add
nop
lock
xchg
repz
test
cli
jno
pop
fwait
push
in
adc
dec
in
lahf
jb
dec
adc
movsb
push
xchg
jl
int3
iret
pop
jp
jno
ljmp
imul
jo
push
pusha
xchg
cmpsb
js
adc
testb
push
xor
lea
ret
add
mov
addl
mov
out
inc
pop
add
fwait
pusha
daa
adc
inc
jno
aaa
cmp
pop
jmp
cmc
xor
mov
cmp
ja
xor
lock
shr
rolb
nop
pop
aad
inc
mov
insl
pop
jecxz
imul
popa
out
shl
jmp
inc
test
pop
jmp
pop
jno
mov
push
in
jmp
cld
into
mov
pop
gs
mov
push
mov
std
cmp
and
mov
in
mov
add
shrl
push
fwait
push
shll
push
xor
mov
xor
movsl
dec
jl
popa
sti
or
xor
dec
lret
sbb
sbb
mov
not
inc
push
scas
test
sbb
fcoms
test
sbb
add
lahf
dec
dec
mov
movsb
pop
jmp
cmc
push
scas
mov
push
sti
cmc
or
icebp
jae
mov
inc
inc
rcrb
sbb
inc
scas
add
sbb
xchg
movsb
addr16
or
jae
adcb
iret
out
jl
cmp
into
sub
pusha
xchg
pop
jle
pusha
pop
push
outsb
loop
jne
jl
stos
cs
cmp
test
jns
push
mov
das
ja
test
decb
leave
push
sti
fdivrs
insl
cld
push
mov
pushf
stc
cltd
daa
jge
lods
aad
insl
mov
xor
xchg
or
lods
inc
xchg
in
loope
xchg
mov
test
iret
dec
dec
orb
iret
adc
push
daa
fdivr
aam
test
repz
shlb
cmp
les
into
shll
xchg
repz
jb
pusha
test
fwait
push
call
xchg
mov
jmp
out
add
fdivl
loopne
hlt
add
pop
mov
popf
mov
push
inc
jp
movsb
pop
push
xchg
cmp
dec
adc
fistpll
leave
pop
scas
scas
in
cmpb
sbb
cmp
test
pusha
imul
add
pop
test
sbb
fadds
inc
mov
pop
ret
jl
ja
ret
out
dec
out
mov
lahf
repnz
xor
add
xor
cmpsb
cwtl
cmp
mov
nop
out
out
mov
mov
lret
lock
sub
mov
or
frstor
orl
mov
dec
mov
add
dec
adc
rorb
xchg
out
add
dec
xor
mov
push
test
cmp
add
push
sub
insb
inc
out
dec
dec
outsb
xchg
aam
mov
es
inc
sbb
sbb
jnp
jg
mov
out
cmc
add
mov
or
aas
push
lods
lret
out
sub
fmul
xor
aad
dec
sub
and
cmp
cmp
hlt
and
cs
int3
mov
push
cltd
icebp
test
cmp
test
fnsave
inc
pop
push
mov
pop
out
mov
and
in
popf
movsl
push
mov
jae
fmuls
sbb
dec
pop
out
adc
push
pusha
jno
add
fwait
es
inc
mov
fimuls
sbb
or
in
and
iret
xchg
jb
pusha
lahf
jge
cmp
out
push
xorb
push
dec
cwtl
mov
shl
stos
js
repz
cmp
nop
cmpsl
push
dec
adc
imul
push
cmp
gs
daa
sbb
cmpsl
push
out
jno
pop
sub
int
lahf
xor
mov
xchg
dec
jb
xor
out
cmp
xchg
mov
xchg
mov
lock
popf
fs
adc
mov
mov
shlb
inc
xchg
lret
sub
in
and
cli
repnz
mov
and
in
jno
xor
cmp
test
cwtl
xchg
andb
add
std
arpl
lcall
push
cmp
and
addr16
pop
push
push
pop
daa
fbld
out
scas
add
lods
sbbb
cld
ja
sub
mov
loope
pop
cmp
push
pop
rol
bound
mov
pop
dec
or
pop
pop
lds
xorl
outsl
std
sub
in
xor
dec
xor
into
or
mov
xchg
nop
xchg
lods
push
cmpl
imul
and
jle
xchg
stos
sub
jge
in
fidivl
jbe
sbb
int
fildll
test
sbb
pop
out
mov
inc
es
sbb
rcrb
adc
nop
and
push
push
xor
imul
cltd
xchg
adc
aas
mov
xor
xchg
add
std
daa
mov
inc
adc
mov
pusha
or
mov
push
pusha
sarb
fildl
daa
cmpsb
movb
mov
jecxz
and
cltd
mov
cmp
ja
aam
out
loope
gs
adcl
lods
or
repz
gs
jo
xor
loopne
cmc
push
and
outsl
daa
cmc
shlb
imul
sahf
and
ret
inc
xor
imul
insl
adc
je
pop
mov
ss
and
mov
lds
cmp
loopne
mov
repz
jl
xchg
or
lock
fprem1
sbb
sub
popf
xor
xchg
out
pusha
jge
dec
test
lods
sub
and
sbb
sub
xor
and
fiaddl
pop
add
jle
inc
das
loop
sub
ret
fadds
mov
icebp
ja
fs
cwtl
les
pusha
jne
mov
sub
push
fcomps
pop
xchg
test
jecxz
jb
and
pop
jge
or
sub
outsb
dec
insb
lods
sahf
fbld
aad
sbb
ds
jne
fs
push
loopne
or
sbb
sbb
push
push
push
out
jg
mov
inc
cltd
cmc
xor
lea
inc
mov
cli
lock
aaa
cltd
imul
cli
pop
std
push
jno
pop
push
test
inc
xchg
push
int3
inc
jb
pop
mov
push
cltd
in
fistps
sbb
insb
push
je
ror
shll
jae
mov
push
test
pop
cmp
mov
loopne
mov
mov
aam
sbb
mov
push
pop
sbb
enter
les
jp
mov
mov
xchg
xor
add
sub
popa
loopne
cmp
icebp
xchg
or
xchg
fisubs
movl
outsb
cmp
dec
lret
pop
rep
or
lds
cld
dec
jb
fmulp
lret
push
es
add
stos
subb
jb
and
mov
stos
stos
dec
shr
sub
hlt
inc
jl
inc
lock
inc
daa
nop
sbb
mov
push
mov
loope
into
push
mov
sub
or
or
mov
inc
mov
mov
popa
push
in
addr16
addb
dec
xor
sub
in
test
ljmp
cmp
cli
mov
int3
addr16
jge
imul
enter
xchg
jb
xorb
scas
dec
cmp
lock
sbb
pop
lea
jno
roll
pusha
cmp
mov
cmovg
jl
nop
addb
cmc
ret
cmpsl
std
insb
push
aaa
mov
or
ror
xchg
loope
dec
jae
mov
mov
mov
sti
cmpsb
decw
fisttpl
insl
ljmp
sbb
jmp
xchg
aaa
stos
lahf
mov
mov
aas
in
add
push
imul
scas
in
int
fs
pushf
pop
mov
out
dec
cmp
sub
push
pop
xchg
nop
addb
sarl
lea
or
bnd
out
inc
movsb
ret
cmp
add
insl
lcall
loop
xchg
cld
negb
mov
repnz
clc
jne
pop
xor
je
cmpsl
cmp
inc
lret
mov
imul
pop
test
dec
dec
push
mov
fiadds
imull
cs
lds
insl
or
or
in
notb
mov
incl
dec
imul
call
movsb
mov
scas
into
jnp
adc
loop
mov
cmovo
xchg
inc
out
ja
mov
pop
mov
dec
push
popa
in
ljmp
popf
movsl
pop
sbb
js
adc
push
lds
xchg
ret
adc
fstl
pop
or
clc
fsts
xor
hlt
mov
xchg
lret
fwait
neg
shlb
andb
mov
in
arpl
sbb
sub
xor
dec
bnd
and
sbb
push
mov
and
inc
mov
daa
addl
or
loop
inc
sub
dec
loopne
push
gs
xchg
sub
xlat
cmp
mov
add
fwait
adc
xchg
and
jl
test
cwtl
cmp
sub
scas
sbb
and
les
movsl
aam
xorb
sahf
cmp
inc
push
sub
loop
adc
jmp
sub
pushl
and
pop
inc
lock
mov
lret
and
repnz
jae
sub
mov
mov
cmpsl
lcall
mov
inc
xchg
jmp
or
cmp
adc
xchg
push
xchg
loopne
sub
jne
jge
lret
sti
xor
jmp
fildl
and
rcrb
push
add
scas
dec
sbb
fistps
rorb
mov
jg
loope
and
loope
imull
ret
iret
test
push
cmp
insl
fdivrl
xchg
loopne
or
daa
scas
sbb
test
fwait
cltd
gs
hlt
daa
sbb
add
into
leave
jecxz
rcrb
sub
cmp
lret
dec
iret
lret
lods
je
add
cmp
xor
inc
sub
push
adc
out
add
cwtl
repnz
aam
inc
shll
xor
jne
bound
popa
stc
sbb
insl
cld
mov
into
fs
adc
subl
jp
mov
ja
adc
dec
aaa
ljmp
and
outsl
pop
pushf
jl
ret
stc
push
mov
jecxz
or
push
pop
imul
adc
mov
mov
movb
push
cmpl
mov
mov
sub
cmpsb
arpl
sahf
fwait
aaa
xor
or
dec
aam
inc
sbb
mov
repnz
cmp
leave
pop
lock
push
mov
mov
sub
jmp
mov
scas
jbe
dec
out
fiaddl
mov
out
out
setg
mov
int3
or
sub
roll
add
cld
rclb
je
sub
test
notb
dec
mov
imul
push
aam
xchg
dec
in
inc
sti
xchg
or
call
push
aam
jp
pop
lret
xchg
dec
test
mov
pop
lock
xchg
ljmp
int3
mov
dec
cmp
leave
imul
adc
and
cmp
insb
xchg
leave
adc
add
mov
fwait
or
add
xor
sub
push
pop
jo
addr16
ret
mov
das
lret
mov
loopne
popf
das
aas
mov
jge
xchg
adc
ret
bsf
fs
pop
jmp
push
push
cmp
rcl
lock
les
scas
sub
adc
push
jae
push
mov
test
call
insb
out
pusha
inc
or
sbbl
sub
insl
cmpsb
sarb
mov
push
adc
push
repz
sub
aad
push
adcl
fwait
addr16
les
gs
mov
dec
dec
jecxz
push
pop
stc
xor
xchg
scas
sub
jp
inc
xchg
jae
sub
mov
and
inc
mov
in
xchg
ret
aaa
inc
jnp
lcall
std
push
mov
ljmp
hlt
fwait
rclb
mov
pop
mov
push
pop
das
cwtl
in
fmuls
push
inc
pop
mov
out
daa
cmpsb
movsb
loope
fcmove
insb
fbld
jmp
dec
lods
add
push
sbbl
shll
add
inc
pop
fadds
insb
notl
adc
and
out
cld
or
push
fdivrl
add
stos
ret
xor
popf
add
fstps
gs
cwtl
shll
or
in
pop
and
aas
sbb
stos
xchg
fwait
push
and
gs
insl
dec
mov
mov
aam
push
mov
out
inc
fidivrl
aam
xchg
test
xor
ficoml
push
gs
into
insb
xchg
ja
shr
ret
or
adc
sub
std
add
mov
inc
test
push
out
dec
mov
rol
jge
jle
lcall
inc
inc
adc
cmp
pop
test
lods
and
test
ljmp
scas
pop
mov
scas
dec
mov
inc
lahf
mov
pop
add
xchg
mov
hlt
stos
andl
int
repnz
or
or
hlt
in
aad
out
insb
jo
out
sbb
cld
pop
imul
xchg
mov
cld
sbb
pop
adc
cli
rcrl
add
dec
ljmp
or
sbb
int3
jbe
sub
shl
jl
xlat
cli
outsb
inc
pop
dec
jne
sbb
pop
jmp
push
dec
mull
and
pop
enter
pop
imul
mov
mov
cld
jl
gs
sub
loopne
inc
mov
cmpsb
shlb
adc
and
fstps
cmpsb
hlt
in
and
mov
pop
in
pop
fnstsw
mov
push
and
xchg
push
adc
bound
pop
adc
push
sbb
adc
pop
xor
clc
mov
repz
xchg
dec
es
fs
fstps
cltd
je
int
mov
sar
pop
add
sti
outsb
jge
sarl
js
dec
sbb
jo
mov
mov
aaa
add
cmp
outsl
test
xchg
sbb
mov
icebp
or
out
test
pop
mov
dec
mov
jnp
mov
loop
sub
inc
adc
clc
xchg
loope
jno
in
filds
ds
in
cmp
das
fidivrl
aad
mov
adc
dec
xor
fnstcw
lea
xor
enter
sbb
rolb
jo
or
enter
jb
popa
lock
sbb
dec
dec
in
jg
pushf
xchg
in
lret
lcall
in
jno
cwtl
bound
ss
dec
sbb
out
or
in
stc
outsl
jbe
out
cmp
insb
xor
stc
sbb
out
negl
and
stc
mov
lahf
sub
xlat
inc
inc
push
clc
mov
push
or
mov
jl
out
push
lea
jl
lret
cmp
push
loope
xorl
rep
stos
adc
int
test
add
data16
hlt
aaa
mov
clc
shr
addb
lds
and
ret
sbb
mov
sbbl
leave
pop
pushf
test
dec
sbb
mov
push
jp
out
or
xchg
cmc
mov
or
push
adc
xchg
cmp
mov
popa
sbb
mov
cmp
mov
or
pop
mov
cmpl
mov
and
mov
mov
jne
dec
data16
imul
sti
mov
xchg
pop
in
fisubl
xchg
inc
cmp
xchg
mov
insb
xor
ss
cmp
inc
mov
sub
push
cmp
testl
mov
test
subl
sbb
and
je
dec
loope
in
daa
sbb
iret
pop
ja
out
pop
or
or
mov
out
into
adc
hlt
sub
test
insl
adcl
mov
aad
push
adc
mov
xchg
dec
push
xchg
xchg
pop
xor
test
mov
fnstcw
je
pop
ja
shll
ja
je
cwtl
std
sarl
jg
inc
sbb
icebp
dec
add
inc
lods
ret
stc
movsb
orl
sub
xor
fisubrs
popa
push
push
movsb
ucomiss
pop
scas
lret
test
xlat
pop
rorb
push
lds
pop
push
mov
jo
mov
mov
xor
stos
push
mulb
xor
arpl
and
insb
loop
jg
and
cli
mov
and
mov
mov
aaa
scas
out
test
mov
xchg
jle
sbb
ss
jns
sbb
fwait
or
sbb
pop
jmp
sub
fsubs
lar
xchg
cmp
sub
mov
push
pop
popa
adc
jecxz
pusha
add
add
imul
lcall
inc
add
or
mov
jno
addr16
mov
call
outsl
imull
das
mov
pop
cld
outsb
cmp
push
loope
rcl
ret
fmul
cmp
mov
lds
mov
xor
rcll
sbb
mov
movsb
cmp
test
movsb
pop
sbb
xor
in
cli
or
mov
sbb
add
mov
loope
enter
into
lret
lock
ss
pusha
xor
pop
mov
push
jmp
jle
add
dec
repz
andl
scas
cli
jle
mov
mov
stc
mov
cld
pop
sahf
loopne
aaa
loopne
rolb
push
ljmp
std
addb
sub
dec
lret
shrl
push
outsl
mov
sub
pop
xor
pop
xchg
xlat
fadds
mov
leave
jne
add
dec
inc
push
pop
inc
mov
sbb
push
out
aam
jno
clc
sti
lock
stc
inc
mov
push
sbb
sub
mov
daa
xor
insb
cmpsl
xchg
popf
mov
vpaddsb
sub
sub
aas
push
dec
imul
leave
cmpsb
xchg
jge
test
int3
mov
test
cltd
xor
or
mov
jae
xchg
adc
orb
fstp
push
xor
ret
adc
mov
repnz
mov
fwait
jge
sub
test
sub
test
push
mov
stc
int3
sub
loope
sti
lds
sub
pushf
es
push
jg
mov
adc
adc
js
push
push
scas
lret
sub
ljmp
add
cmp
jle
mov
sbb
pop
and
cmpsb
fwait
rcll
ds
adc
mov
sub
dec
jp
outsl
out
xor
jno
test
popf
push
outsl
cmp
data16
out
leave
jne
sbb
sbb
insb
enter
test
jecxz
pop
adcb
ss
jne
sbb
inc
je
cmpsb
mov
enter
inc
sbb
data16
cltd
int
imull
mov
mov
fnstenv
inc
pusha
xchg
and
pop
sbb
inc
xor
push
cli
movsl
mov
leave
enter
fsubrl
jne
xor
jnp
fcmovnu
pop
mov
fisubrs
stc
jl
xchg
or
cmp
mov
jp
push
push
push
in
jnp
ffreep
pop
test
js
xlat
popf
mov
jns
mov
shr
jno
sbb
daa
int
imul
or
and
pop
adc
pop
xchg
inc
pop
and
dec
mov
push
outsb
mov
lds
inc
mov
adc
insl
pop
daa
lahf
scas
ss
jle
sbb
cmp
dec
pusha
adc
stos
mov
and
dec
insl
inc
sub
scas
push
scas
cld
sbb
out
adc
aad
add
cwtl
insl
mov
ds
pop
ret
fsubr
scas
cmc
movsb
call
std
faddp
or
in
imul
ja
fs
cmp
push
mov
inc
data16
xchg
sbb
add
outsl
pusha
imul
fnsave
ffree
ljmp
push
add
inc
add
sbb
pop
pop
dec
xor
call
lods
push
xchg
push
mov
push
clc
mov
push
mulb
repz
sub
cwtl
and
dec
sahf
out
jne
inc
xlat
push
inc
adc
or
pop
imul
jb
sbb
push
popf
push
lret
daa
jle
or
in
bound
faddl
inc
rolb
lods
adcb
loopne
es
and
test
xor
push
push
mov
push
xor
mov
jne
xchg
cmp
xor
clts
outsb
adc
daa
sbb
into
xor
mov
cli
movsb
xor
jbe
pop
push
xor
and
fsub
lea
das
sbb
jb
aad
xchg
sub
sbb
jo
jnp
inc
xchg
lcall
mov
andl
aaa
jle
add
stos
in
sbb
fst
push
jb
mov
xchg
sahf
push
adc
cmp
ret
ror
repnz
cli
mov
inc
and
js
cmp
sbb
dec
adcl
icebp
pop
dec
sub
xor
push
das
cwtl
mov
add
loop
cmpsb
xorb
and
cmp
fnstenv
call
mov
mov
pop
pop
sbb
jmp
sar
jmp
in
lret
in
rorb
xchg
enter
cmp
or
popa
dec
loop
fdivr
pop
imul
das
popa
sub
push
and
jmp
push
or
sbb
xchg
inc
pop
pop
cwtl
ljmp
int3
shr
cs
divl
xchg
inc
fisubrs
call
iret
jnp
mov
xor
scas
or
clc
cmp
fstpl
pushf
data16
outsl
xchg
jae
mov
mov
mov
lcall
dec
add
cmp
add
cwtl
pop
icebp
gs
mov
pop
ret
inc
insb
les
mov
shlb
jg
pop
imul
dec
cmp
icebp
push
lret
push
mov
arpl
test
inc
pop
cli
divb
movsl
dec
pushf
mov
dec
pop
cmp
rcll
jb
mov
mov
jae
sbb
sub
inc
cmp
adc
xlat
loop
sbb
sbbl
divps
outsl
loopne
loopne
adc
jle
nop
lods
add
popf
pop
orl
mov
fimull
cli
adc
aas
xchg
fstps
pop
std
pop
dec
loop
dec
pop
mov
pop
xchg
xor
inc
ss
and
xchg
mov
add
mov
add
mov
jne
pop
popa
data16
inc
pop
movb
push
cmp
mov
int
push
repz
xchg
dec
jns
sub
pop
jae
add
mov
jne
pusha
jnp
outsb
sub
or
loope
cmp
mov
sub
xchg
test
dec
movl
adc
stos
or
sahf
cmc
or
xchg
icebp
je
addr16
outsb
ds
mov
xchg
mov
jge
inc
shl
jp
enter
test
int3
xchg
ljmp
fdivl
jmp
je
jo
fimuls
adc
cwtl
rcrb
dec
stc
jo
aas
jg,pt
push
xor
xchg
jp
mov
fs
std
pop
push
jg
testl
pop
or
popf
dec
xor
add
orl
sbb
scas
clc
mov
movsb
lock
mov
cs
test
ret
dec
jb
jo
or
cli
cmp
nop
sub
push
int
dec
ljmp
fldl
xchg
lret
fxch
cmp
enter
sub
daa
daa
jbe
mov
in
out
ds
mov
sbb
sbb
pop
push
sbb
fisubs
push
mov
js
sbb
sahf
test
sbb
jl
aas
out
ret
imul
setbe
mov
xchg
subl
xor
aam
jp
iret
cmp
sbb
fisubl
sbb
inc
aad
imul
repz
js
or
aam
call
mov
ret
fcmovnu
mov
dec
or
shll
std
rorl
repnz
cltd
xor
mov
jne
test
push
insl
test
inc
ret
sub
xchg
xchg
mov
add
add
out
mov
mov
mov
movsb
mov
das
jg
outsb
push
and
dec
jg
cmpl
lea
adc
jle
xor
in
mov
mov
rolb
mov
xchg
fnstsw
mov
aaa
aaa
out
cmp
ret
cltd
lcall
lods
sti
in
js
xor
fcmovbe
fstl
push
xchg
lret
gs
mov
xor
movb
mov
xchg
cmp
jns
jl
cmp
dec
inc
loopne
fdivl
pop
and
gs
sbb
dec
pop
fldl
lret
sbb
xor
popa
and
loopne
cltd
adc
shll
ret
xchg
pop
push
shl
int
xor
mov
sahf
jg
ret
jnp
and
mov
mov
in
mov
ja
adc
sub
das
int3
and
fisttpl
sub
and
jmp
cli
or
push
xchg
cltd
enter
leave
icebp
loopne
je
bound
adc
pop
sub
mov
xchg
push
mov
cmp
fs
xor
xor
sbb
dec
sbb
pop
push
jle
in
insb
xor
emms
add
jnp
inc
movl
into
adc
adc
das
and
jmp
fs
out
or
fsubl
push
sub
dec
pushf
and
rcl
dec
cmpsb
jg
add
lds
leave
out
jnp
mov
jecxz
bound
hlt
faddl
outsl
call
imul
jo
jbe
sti
rcll
xchg
fadd
and
lcall
loopne
xchg
or
push
and
mov
mov
mov
inc
in
mov
push
mov
push
cmpb
lods
push
sub
out
adcl
push
sbb
pop
jo
loop
hlt
insb
call
cmovbe
out
mov
cmpsb
movsb
sub
inc
aam
dec
out
fcmovbe
dec
mov
adc
xlat
pop
stos
pop
test
mov
pop
fmuls
bound
cwtl
sbb
add
hlt
sti
sub
pop
dec
mov
pop
mov
jne
adc
xchg
ss
or
xchg
std
outsl
mov
push
fisubl
mov
jcxz
bound
lods
jno
mov
dec
push
jp
jno
jno
sub
xchg
dec
jecxz
hlt
inc
cmpsb
xchg
hlt
fisubrs
xor
ljmp
xor
pop
mov
mov
xlat
pop
and
in
add
movb
movsl
jp,pn
mov
lcall
mov
rorb
push
mov
adc
pop
ds
or
cmc
sub
rclb
imul
lds
fcomip
xor
rolb
pop
sbb
test
xlat
xlat
int3
sub
adc
dec
inc
cmc
decb
lret
lea
sub
adcl
ret
xlat
add
xchg
sbb
lcall
aaa
cmpsl
idiv
jecxz
stos
mov
adc
popa
dec
mov
push
push
xor
rolb
or
scas
mov
and
add
pop
pop
xchg
ljmp
mov
cmpsb
clc
pop
cmp
das
mov
scas
sub
push
std
dec
jge
push
repz
jmp
inc
lcall
jno
popf
push
test
mov
ss
push
mov
cmp
xor
and
daa
xorb
pop
cmp
xchg
or
push
mov
out
jnp
jmp
pop
fildl
mov
fisttpll
adc
and
sub
mov
jle
sbb
adcl
sahf
mov
cs
xchg
cli
pushw
mov
not
faddl
jne
sbb
popf
cmpsl
iret
daa
es
add
cmp
mov
or
sub
cs
jae
sbb
mov
in
shlb
notb
je
mov
mov
cmpsl
ret
pop
stos
fmull
and
xor
xchg
movsl
mov
push
sbb
mov
nop
icebp
sbb
mov
pop
nop
jg
mov
or
lret
sbb
addb
loopne
cmpb
mov
inc
cltd
lret
pop
jns
jnp
pop
ja
fstpl
sub
push
jl
xchg
adc
or
ret
push
cmp
pop
dec
lcall
cmp
in
test
push
adcb
scas
dec
jb
clc
fldenv
jge
jns
xor
or
cmp
lock
gs
cmp
ror
aaa
es
add
es
pop
aad
lods
les
mov
mov
cld
push
cmp
popa
push
fidivrs
fwait
outsl
pop
jbe
in
test
imul
add
hlt
imul
mov
fs
cmp
sti
xor
hlt
xlat
mov
cmpsl
push
es
stc
mov
inc
insb
push
ds
insl
popf
xchg
orb
ret
mov
xchg
cs
pop
mull
nop
push
in
out
pop
movsb
mov
xor
in
call
sbb
stc
jae
insb
xchg
out
idiv
pusha
push
ljmp
mov
xlat
pop
xchg
jbe
lcall
xchg
adc
test
out
repz
inc
or
shrb
xchg
pop
sti
lds
or
fwait
push
or
ss
inc
adc
cmp
adc
mov
add
xchg
mov
sbb
inc
outsb
dec
bound
adc
mov
mov
stos
xlat
test
enter
stc
dec
pop
xchg
aaa
mov
mov
imul
mov
fsubl
pop
test
push
sbb
adc
push
pop
xor
push
mov
push
cmp
dec
pop
insl
seta
loope
mov
inc
in
clc
jae
pmaxsw
lock
push
xchg
lea
mov
sub
fcoms
sbb
aas
ja
mov
xor
ljmp
mov
shl
sub
mov
push
out
and
mov
bound
mov
or
cmp
fcompl
mov
cmp
add
ds
pop
jg
pop
cltd
pusha
jbe
mov
adc
lods
ficoms
or
adc
dec
sbb
inc
inc
pop
dec
dec
test
dec
dec
add
in
pop
das
xchg
mov
add
iret
test
data16
xor
inc
outsl
dec
sarl
es
adc
ljmp
shrb
xor
std
mov
enter
mov
jmp
inc
sbb
outsl
mov
lea
xchg
xor
hlt
push
jge
rcrb
mov
jp
mov
jns
out
mov
inc
cwtl
mov
mov
imul
int3
mov
mov
fwait
mov
imul
daa
fwait
mov
mov
imul
pop
mulb
bnd
and
movsb
cwtl
mov
std
xchg
cmpsl
into
and
outsb
push
xor
ja
lahf
pop
imul
mov
popf
sarl
loopne
xchg
sub
daa
shlb
pop
in
and
inc
xchg
lretw
aam
insl
movsb
push
sbb
popf
mov
aas
aas
orl
or
pop
popf
jb
or
loop
addr16
sti
adc
fstps
dec
fldenv
roll
jbe
mov
mov
scas
enter
and
push
sub
and
out
inc
cmc
inc
bound
sbb
mov
mov
rcll
loopne
popa
cmp
xchg
adc
jecxz
jae
or
gs
cmp
jg
scas
inc
cmpsl
mov
int3
mov
js
and
aad
mov
xchg
add
mov
or
xchg
clc
xchg
dec
add
aaa
fs
enter
cld
jae
imul
out
std
stos
ss
gs
movsb
xchg
mov
add
fistl
jmp
les
stc
jne
daa
mov
pop
dec
sub
int
ss
xchg
popf
dec
add
inc
dec
sub
push
test
and
jb
aas
or
mov
hlt
das
loop
jne
cmp
sbbb
inc
out
jmp
jns
sub
push
add
stos
lds
cmp
rcrl
inc
sbb
out
pop
sub
adc
out
cmp
and
cmpsb
sub
jecxz
pop
and
popa
add
pop
mov
pop
cwtl
push
in
mov
mov
sbb
push
adc
lods
packuswb
sub
push
fcomps
cwtl
push
pusha
jge
mov
int
add
dec
xchg
pop
stc
mov
push
mov
mov
cmp
inc
mov
pushf
ss
pop
shll
pop
mov
pop
xor
ljmp
repnz
in
push
nop
sub
aam
stos
push
and
xchg
sbb
jecxz
or
popa
out
mov
test
add
or
out
fwait
sahf
fdivrs
mov
iret
or
lock
out
push
push
mov
xor
inc
mov
addr16
fwait
sub
dec
mov
mov
inc
pop
adc
push
clc
ds
out
xchg
jmp
inc
jp
xor
fidivs
imul
rcl
test
mov
pop
mov
pop
ljmp
push
shlb
int3
mov
sbb
in
cmpsb
iret
in
jne
subl
mull
imul
xor
negb
stos
popf
mov
das
stc
jg
jg
test
push
and
rcr
in
mull
adc
fcoms
pop
mov
pop
pop
inc
lds
cmp
inc
in
mov
mov
dec
adc
ffree
jl
mov
lret
xor
pop
xlat
dec
xlat
nop
mov
push
lret
icebp
fidivl
mov
push
lods
cmp
push
or
xchg
cmc
repz
xchg
pop
mov
int
test
dec
inc
add
in
mov
push
pop
or
cmp
mov
scas
fisubrs
adc
pop
imul
mov
test
lahf
test
mov
loopne
adc
xor
push
lret
ret
rol
sub
cli
push
sub
or
into
sub
test
repz
xor
xchg
fimuls
popf
and
mov
push
inc
bound
pop
pop
rcrl
mov
cwtl
jo
mov
data16
cmp
xor
sbb
out
push
fwait
sbb
mov
loop
push
lahf
xorl
fsqrt
fbld
dec
and
js
dec
xchg
xchg
mov
mov
mov
inc
sbb
xor
mov
dec
add
loop
pop
shll
mov
icebp
testl
jge
jp
or
or
fnsave
fstl
add
jge
dec
sbb
sub
sarb
scas
add
clc
mov
mov
cmp
sbb
dec
fiaddl
cmp
or
cmp
ficomps
arpl
adc
clc
or
fwait
shl
leave
lret
dec
clc
jecxz
pop
mov
repz
push
and
das
sub
jmp
test
in
outsb
sbb
or
adc
and
push
loope
or
in
mov
inc
iret
cld
jae
xchg
pop
leave
add
popa
inc
mov
xchg
stc
jb
aaa
arpl
mov
cmpsb
push
cmp
jbe
xor
jnp
fwait
pop
pop
and
push
clc
push
sub
mov
loop
or
iret
cmp
sub
aaa
mov
xlat
inc
daa
xchg
in
gs
pop
jle
mov
hlt
mov
outsb
or
jo
xlat
inc
iret
in
in
jg
adc
add
xchg
in
jne
mov
pop
enter
loop
pushf
inc
cmp
lcall
cmp
add
out
xor
out
sbbb
pop
outsl
push
fildl
stos
fiaddl
loopne
mov
adc
sub
addr16
mov
mov
ret
jns
push
pop
sarl
dec
or
out
test
lods
cmp
iret
mov
mov
xchg
push
pop
xor
test
adc
inc
dec
loop
mov
jmp
or
lods
ret
pop
adc
enter
popf
xchg
pop
xchg
pop
and
inc
lcall
mov
cs
out
sub
fs
std
jge
pop
inc
mov
cmp
push
mov
xchg
jg
jne
inc
sub
pop
cmp
push
or
int
jmp
hlt
outsb
dec
inc
lahf
mov
mov
test
lods
sbb
jp
mov
mov
xchg
movsl
push
and
movsb
inc
data16
lret
jg
mov
push
int
shll
loope
hlt
pop
js
pop
xor
mov
or
jno
sbb
sub
lret
adc
call
push
or
ret
xlat
push
pop
jge
lods
dec
ds
cmp
int3
fcmovu
rorl
pop
pusha
and
dec
sub
dec
fiadds
negb
stc
mov
cmp
jbe
arpl
loope
push
add
xor
nop
in
push
test
sub
dec
jnp
push
mov
rclb
shll
into
adcb
jnp
ja
sbb
jns
rcr
testl
das
xchg
push
pop
add
xor
in
sbb
jb
sub
outsb
xor
cmp
jne
insb
ret
pop
mov
push
push
xchg
ja
jo
inc
insb
roll
out
jl
push
data16
push
sti
jb
xchg
inc
inc
hlt
inc
pop
sahf
inc
jb
inc
and
push
imul
push
inc
outsb
shl
ja
jo
push
js
test
addr16
scas
nop
imul
mov
adc
imul
loop
xor
cli
rcl
mov
push
loope
fldl
pusha
mov
jbe
fs
inc
xlat
lds
daa
xchg
test
mov
xor
xor
cmpl
mov
push
mov
adc
jmp
into
mov
int3
add
pushl
xor
mov
push
outsb
ss
jb
test
jns
repnz
pop
xchg
mov
out
test
sahf
sub
pop
xchg
pop
xchg
pop
das
ret
mov
outsl
lcall
jnp
lret
xchg
mov
scas
mov
lahf
imul
sbb
jae
xchg
aaa
lret
popa
insb
jns
adc
xor
xchg
repnz
mov
idivl
inc
mov
inc
mov
into
jp
mov
lds
in
hlt
test
pop
call
cmp
in
push
loopne
push
ret
dec
or
xchg
mov
pop
ret
dec
roll
sub
adc
imul
mov
outsb
sbb
push
fmull
and
into
ret
int
cmpl
mov
jno
and
stos
and
push
dec
mov
xor
mov
out
or
arpl
push
aaa
arpl
mov
mov
flds
test
and
cmp
mov
adc
imul
or
mov
fsts
lret
mov
mov
call
xor
ret
mov
cmc
push
push
fadd
pushf
gs
sarl
push
mov
lahf
jns
adc
nop
dec
xchg
cmp
andb
add
xchg
sbb
pop
cmp
adc
out
sub
push
pop
ficoml
stos
mov
into
or
cwtl
xchg
stc
xchg
dec
enter
pop
dec
mov
lret
rorl
inc
mov
lods
imul
test
stos
mov
xor
lea
bound
sub
mov
pusha
ficoms
test
xor
and
xor
in
stc
xlat
movnti
lcall
inc
jae
in
push
push
inc
stos
lahf
and
out
notb
push
sub
jmp
sub
mov
mov
mov
in
adc
sarl
cmc
divb
insl
cld
push
iret
bnd
jecxz
mov
call
leave
rcrb
aam
dec
outsl
jmp
pop
inc
adc
add
enter
loop
imul
movsl
icebp
ss
fidivrs
or
dec
pop
sbb
mov
jnp
push
adcb
imul
xor
in
push
and
xchg
test
arpl
dec
in
sub
cmp
adc
sub
rcll
inc
xor
mov
ret
popa
das
xchg
dec
cmp
xchg
adc
cmp
push
imull
fcomi
adc
and
push
pop
clc
dec
mov
test
push
xchg
dec
cmc
add
xor
sbbb
push
and
sub
andb
pop
mov
stos
nop
or
mov
jnp
sub
inc
xor
cmp
sub
pushf
stos
or
pop
inc
sbb
adc
jg
or
mov
sub
mov
nop
cld
jb
out
mov
or
xor
lods
lock
repnz
pusha
mov
inc
daa
or
imull
and
xchg
lret
jne
mov
scas
loop
insl
sub
or
jnp
push
loope
xchg
inc
fdivr
jecxz
mov
sub
cmpsb
or
dec
pop
test
movsl
push
cmpsb
ljmp
sbbb
cmc
popf
loope
insb
roll
test
ss
xchg
xchg
call
cmp
cmp
jecxz
in
addb
cmp
add
sbb
push
in
outsb
push
inc
gs
test
je
cmpsb
mov
and
and
adc
add
inc
adc
incb
push
into
jl
add
icebp
push
pop
aas
repz
mov
data16
cmpsl
cmp
imul
lods
mov
out
mov
loope
mov
rcrl
jns
push
arpl
xchg
dec
adc
inc
jmp
mov
sti
inc
fsubrs
popa
movsl
hlt
sti
icebp
push
std
add
in
jl
mov
inc
jge
xor
mov
dec
imul
mov
cmp
mov
ja
and
sub
xchg
dec
movsb
inc
lahf
cli
pmullw
dec
mov
push
sub
jne
dec
insb
xchg
arpl
pop
out
add
shll
push
lea
mov
xchg
jl
ja
imul
xchg
mov
lret
xchg
sbb
mov
jg
gs
sub
jecxz
xor
xchg
mov
test
lods
sbb
jnp
out
push
mov
gs
xor
jns
scas
aad
xor
pop
fisubs
icebp
add
or
jg
or
cmpsb
or
outsl
loopne
or
fnsave
jg
adc
mov
pop
and
lea
cltd
call
aad
pop
in
jecxz
lea
js
mov
popa
leave
cmp
sahf
or
lret
and
arpl
insl
lcall
outsb
dec
call
cmp
stc
inc
sarl
ss
call
cmp
mov
ss
popw
and
pushf
pop
inc
inc
loope
mov
push
sub
cmpsb
jge
cmpsl
repz
rcl
daa
insl
popa
popa
xor
sub
invd
push
cmp
pop
mov
cs
mov
pop
pop
mov
jne
mov
and
loop
or
and
xor
mov
ds
dec
in
hlt
or
jne
push
lods
xchg
lds
jns
aaa
aaa
pop
movsb
or
notl
xor
stos
jbe
pavgb
pop
ljmp
sbb
dec
mov
ret
jle
push
mov
or
rclb
xchg
popf
cmp
sarb
pop
gs
and
enter
loopne
jp
icebp
jbe
shlb
in
push
imul
stos
and
sbb
mov
pushf
adc
jmp
and
adc
jl
test
add
outsb
imul
stos
idivl
cmp
xchg
pop
xor
fs
cmp
rclb
cmpsl
cld
add
cmp
inc
std
add
cli
aas
andl
mov
imulb
rcrl
sub
lret
dec
push
push
push
inc
push
cmpsb
out
incl
fdivrs
push
out
cmp
es
push
daa
icebp
xchg
stc
outsb
dec
pop
mov
dec
mov
scas
sbb
and
adc
jecxz
dec
adc
aas
icebp
mov
xor
iret
mov
and
pop
push
idiv
add
xlat
in
subb
mov
mov
adc
mov
push
jg
jmp
rcll
xor
cwtl
push
pop
push
and
out
and
lcall
xchg
add
push
ss
gs
mov
pop
pop
popa
mov
sysexit
cli
sbb
mov
orl
sub
xorb
sub
gs
or
jmp
mov
lret
xlat
ret
sub
movl
xchg
xor
xchg
sub
mov
jbe
push
and
jmp
test
adc
aam
inc
sub
or
out
call
mov
sbb
mov
frstor
pop
add
pushf
or
lret
jo
add
rclb
push
mov
daa
push
clc
icebp
imul
std
push
cmp
fldenv
out
mov
add
lea
add
jg
mov
mov
and
dec
cmpsl
popf
xor
cmp
ja
cltd
sbb
test
leave
pop
ds
and
xor
cmc
aam
adc
cmp
das
into
loopne
in
roll
fstl
lret
sub
dec
f2xm1
fnstenv
mov
pop
ss
aam
sub
sbb
jns
adcl
dec
rcll
lock
pop
mov
inc
xor
mov
sti
enter
or
push
jo
or
xchg
jae
inc
dec
es
jbe
mov
pop
aam
stc
mov
call
loop
cli
push
jbe
iret
sub
push
sbb
clc
or
hlt
loopne
fcoml
push
cs
in
push
stos
addr16
arpl
mov
push
int3
rorb
jp
popf
ds
sbb
adc
push
shl
cmp
daa
in
adc
prefetchwt1
or
cli
mov
in
mov
cld
cmpsl
out
repnz
dec
repz
jbe
ljmp
or
mov
mov
rolb
fcom
das
sub
jnp
leave
xor
into
cmp
fidivrs
mov
xor
pop
aad
in
pop
mov
nop
sub
push
in
jne
xchg
int
aam
jge
popa
cmp
or
insb
into
std
pushf
pop
addl
pushl
scas
jnp
es
mov
ret
scas
sub
repz
jae
gs
jbe
push
mov
and
daa
cmp
add
cmpsl
xor
pop
out
mov
dec
push
fwait
push
adc
add
xchg
and
lret
xchg
pop
int3
cmp
lock
sbb
and
and
push
sub
xchg
push
add
xor
mov
mov
testl
stos
dec
fists
mov
call
ss
and
cmp
stc
xchg
xor
loop
pop
or
orl
ljmp
cmp
push
out
pushf
repnz
xchg
shll
dec
scas
ljmp
inc
test
or
aas
mov
ficoml
testl
mov
mov
and
test
cli
push
xlat
xchg
mov
mov
out
jo
sub
cwtl
push
cwtl
add
fisttpl
pushl
mov
or
loop
fistl
lret
call
das
fldcw
mov
add
jnp
dec
lock
push
sub
sti
or
jmp
lods
xor
cmp
stos
hlt
push
mov
bound
popa
add
inc
push
push
mov
insb
adc
lock
mov
mov
in
scas
in
adc
or
inc
jmp
pop
sbb
sub
and
out
mov
mov
jp
push
add
mov
xorb
xor
push
inc
lods
roll
loopne
xchg
fstl
xor
inc
incl
cmp
xchg
push
rcr
lock
daa
js
les
xor
sub
xchg
xchg
inc
incb
ljmp
or
cmp
out
add
cmp
pop
xchg
xor
or
push
mov
int3
or
dec
shlb
cmpsb
into
mov
add
loop
into
lods
lea
inc
lret
lds
mov
xor
icebp
sahf
loopne
ss
cmpsl
iret
adc
mov
icebp
mov
andl
pusha
iret
pop
lret
outsb
shll
loop
shlb
xor
aas
mov
cmp
adc
test
mov
gs
rolb
sbb
in
sub
cmpsl
popf
stos
test
mov
test
fnop
dec
ror
mov
push
loop
int
repnz
rorb
shrl
clc
mov
arpl
out
adc
and
std
pusha
dec
incb
test
inc
inc
jecxz
fstl
sbb
pop
dec
sub
cmp
scas
push
jns
pop
sub
les
jle
cmpl
xchg
rcrl
cmp
add
jo
movsb
mov
in
push
cmp
push
mov
inc
shll
lcall
and
push
icebp
dec
jmp
test
test
fisubrl
fstp
xor
movb
outsb
movsl
push
jb
sbb
mov
mov
fldenv
test
sbb
xor
mov
cmp
and
push
les
popa
jl
inc
dec
cmp
jno
fmul
add
add
or
ds
mov
xchg
xorb
sub
add
or
je
addb
test
mov
stc
jns
daa
loop
jp
enter
movsb
adc
outsb
inc
scas
sbb
ljmp
lret
jae
ror
and
mov
mov
pop
and
sub
jecxz
fbld
push
je
imul
icebp
adc
sti
push
pop
add
pop
popf
pop
dec
mov
xchg
arpl
in
faddp
jp
stos
mov
and
in
cmp
sub
push
cmp
and
dec
iret
add
push
movsb
pusha
add
pop
out
push
dec
jecxz
hlt
jl
push
mov
outsb
adc
pushf
stos
bnd
mov
psubusw
fnstenv
pop
in
and
mov
push
mov
mov
fst
lcall
test
fwait
cli
xchg
add
inc
xchg
dec
xlat
rcl
sbb
add
movsl
mov
test
lock
mov
out
daa
in
fs
sbb
out
ljmp
dec
sub
inc
std
aaa
pop
sbb
cmp
sbb
int3
fldcw
int3
sbb
ljmp
mov
test
and
fcompl
lcall
shr
jo
dec
outsl
addb
pop
xchg
sub
cmp
ljmp
lods
adc
cltd
mov
out
push
notb
cli
imul
insl
inc
dec
rol
roll
push
sti
mov
scas
mov
mov
ss
xor
xchg
sbb
add
aad
mov
and
sbb
cmpsb
mov
cwtl
push
movsb
aad
push
sbb
jbe
test
lds
sub
xchg
pop
push
xor
and
mov
and
loopne
shll
add
sub
xor
outsb
or
leave
sub
mov
dec
adc
sbb
dec
pop
sti
pop
int3
lret
push
jno
pop
mov
bound
jns
pop
rol
adc
test
adc
cmpl
mov
les
cmp
fs
testb
sub
adc
aaa
clc
movsb
scas
mov
dec
push
rolw
push
lock
mov
iret
sbb
outsl
ret
add
insb
shl
or
jns
adc
inc
and
ljmp
jge
ljmp
adc
kmovb
fs
dec
jle
xor
jp
arpl
es
arpl
xchg
and
flds
mov
xchg
xor
cmp
repnz
pusha
jl
dec
test
push
in
adc
add
adc
lods
xchg
testl
outsb
insb
jae
neg
scas
xchg
cmpsl
scas
iret
mov
dec
into
jbe
out
outsl
adc
or
or
mov
fdivp
dec
push
sbb
inc
sbb
fsubl
inc
xchg
sbb
inc
mov
rcrb
stc
dec
pop
push
stos
je
adc
in
lds
inc
out
stc
jns
jnp
ret
sbb
stos
xor
push
lods
cld
xchg
clc
push
call
cmpb
in
daa
mov
fwait
mov
xor
std
adc
mov
push
arpl
subb
test
fsub
or
adc
iret
cli
push
add
jl
sub
fidivrl
and
cltd
cs
lret
jbe
xchg
dec
push
sub
pop
and
out
jge
dec
push
aas
insb
fstps
jmp
mov
jg
cmp
mov
pushf
rorb
fcompl
arpl
dec
or
mov
test
pop
daa
cs
lret
xchg
pushf
pop
dec
test
ljmp
dec
mov
mov
jecxz
inc
sbb
cmp
mov
pop
cmp
cmpb
xor
sub
cmp
mov
popa
mov
faddl
inc
mov
ja
mov
pop
pushf
mov
push
cmp
xor
xor
push
stc
push
into
mov
jns
push
cmc
jmp
and
enter
sbb
jecxz
lods
dec
ret
cli
jne
std
aad
and
imul
lahf
setle
loop
rcl
jle
jae
adc
stc
push
jne
add
cmpsl
movsl
imul
and
mov
fstpt
sbb
rolb
and
mov
push
test
outsb
adc
sahf
and
dec
adc
jne
popa
loop
cmp
inc
push
gs
sub
push
dec
mov
xor
mov
lahf
pop
test
pop
cs
arpl
inc
in
outsl
jge
cmpsb
int3
cld
out
add
jae
cwtl
xor
jb
sbb
lahf
je
push
stos
sub
test
sbb
gs
fdiv
leave
aas
ljmp
jne
repz
push
in
xor
insb
adc
mov
push
iret
or
shr
jns
adc
push
bnd
push
adc
xchg
pop
rol
cwtl
and
xchg
pop
dec
setbe
imul
mov
lods
adc
cld
dec
xor
je
iret
push
repnz
mov
adc
rcr
add
push
jp
mov
int3
mov
imul
jns
lock
pop
mov
insl
outsl
rolb
inc
xchg
and
fwait
sub
pop
inc
mov
xor
adc
fmul
and
scas
loope
notl
std
dec
push
cltd
jnp
repnz
dec
push
sub
je
cmp
or
movsl
in
sbb
cmc
sub
mov
shr
lahf
int
inc
sbbl
cvttps2pi
jge
fidivrl
loop
and
cmp
nop
pushf
sub
push
fldenv
dec
fs
mov
jne
cld
mov
nop
sub
hlt
sub
xor
mov
adc
inc
lcall
mov
shl
out
popf
stc
dec
xchg
xchg
jae
push
es
and
fcomps
mov
sti
pop
dec
mov
mov
inc
ret
cmpl
outsb
mov
and
adc
les
es
out
and
sbb
xchg
hlt
cmp
das
and
dec
aad
cmpsl
or
das
movsl
pop
jg
sbb
jg
ss
push
cmp
arpl
popa
and
call
in
push
inc
xchg
lock
sub
aaa
push
dec
sbb
cmpsb
ret
arpl
out
mov
jnp
xchg
pushf
pop
jecxz
push
insb
xlat
loopne
je
xor
ret
popa
aam
or
or
sbb
adc
xchg
shrl
arpl
adc
jo
sub
cmp
ficompl
push
hlt
pop
xor
cmp
jmp
call
movsb
stos
push
ljmp
xchg
or
popa
add
cmp
out
sbb
jno
dec
adc
jl
mov
outsb
or
push
add
add
adc
loopne
fucomip
cmp
xor
jge
pusha
loop
cltd
pop
xchg
adc
and
je
movsb
mov
in
dec
dec
mov
adc
sahf
jp
push
pop
subb
dec
scas
mov
leave
leave
test
ds
loope
movsb
cmp
and
out
subb
icebp
imull
ffreep
jmp
jb
add
ss
sarl
mov
dec
mov
push
pop
enter
shrb
movsl
xchg
ja
xchg
fsts
jle
in
iret
sbb
lret
add
pop
push
pop
jo
movsl
enter
sbb
mov
shrb
xchg
xor
cli
inc
add
or
shr
mov
mov
stos
and
icebp
aad
fstpt
lret
rorl
iret
shrb
int
mov
add
mov
jb
xor
out
cmp
or
jne
pop
mov
repz
sbb
sub
out
sti
test
sbb
add
ds
cld
xor
pop
jl
enter
cs
lret
les
scas
sub
mov
sub
sub
subl
sub
sub
aas
or
jo
sar
pop
jmp
lea
sub
pop
xchg
cld
or
ficoms
pusha
push
ds
jns
hlt
mov
inc
arpl
adc
and
out
dec
push
lea
mov
or
mov
inc
pusha
adc
sub
adc
push
pop
pop
push
psllw
cs
dec
ljmp
push
std
inc
xchg
push
enter
rcrb
push
cmpsl
xor
push
xor
cmp
inc
fnsave
test
lret
mov
or
fsub
js
mov
or
dec
imul
fmuls
inc
inc
dec
push
pop
adc
sbb
decb
xchg
stc
pop
mov
repz
mov
dec
and
loope
lea
scas
add
fcmove
data16
sbb
cmp
and
xchg
in
lods
dec
aas
jae
lods
add
push
bound
push
mov
mov
les
cmpb
enter
daa
mov
mov
lds
cmp
xchg
fstl
fwait
cmpsb
mul
rcr
xchg
dec
mov
dec
orl
cmpsb
mov
cmp
or
mov
xchg
mov
dec
pop
lods
sub
aas
ret
aas
sub
pusha
rorb
mov
fs
cmc
test
jecxz
fidivl
stc
dec
push
cmp
out
or
fsubr
repnz
aam
sbb
mov
daa
aam
xchg
mov
xchg
cli
mov
pop
jne
leave
add
adc
cmp
push
pusha
cli
pop
mov
pop
xchg
popa
test
sti
aad
xchg
jle
movb
xor
dec
mov
rcrl
adc
cld
mov
cmp
xor
rclb
adc
or
cmc
cld
inc
int
je
cltd
inc
bound
sub
push
inc
cwtl
fnstsw
cld
push
inc
xchg
xor
mov
mov
push
or
aad
std
pushf
cwtl
outsl
inc
call
cltd
mov
cltd
adc
adc
mov
dec
cmp
adc
dec
out
outsl
mov
pop
pop
add
adc
jle
pop
shll
imul
mov
test
icebp
sub
mov
push
xor
mov
stc
pop
aad
jecxz
daa
add
lret
repz
pushf
cli
mov
mov
subl
or
mov
mov
mov
mov
cmpb
fstp
xor
pop
dec
mov
fs
imul
in
xchg
cltd
xor
push
push
mov
adc
sahf
ljmp
sbb
stos
sub
fmuls
pop
mov
and
shll
sub
xchg
das
stos
push
xor
das
cmp
inc
ss
mov
jo
in
push
rcl
pop
lret
insl
popa
add
push
ret
inc
inc
inc
cli
and
mov
dec
add
push
jae
cmc
mov
mov
mov
pop
add
cs
jb
xchg
jnp
add
mov
xor
mov
inc
and
mov
int3
xor
aaa
ljmp
xchg
push
lea
or
cmp
imul
les
dec
cmp
xchg
into
xor
insb
mov
das
adcl
sti
add
pop
sbb
mov
aad
sub
adc
push
xor
lahf
loope
sbb
and
orl
ljmp
mov
adc
inc
pop
lret
jg
ret
movl
sub
jg
ret
pop
mov
notl
repnz
or
out
jecxz
mov
mov
jae
fs
xor
movsb
pushf
mov
rcr
fidivl
rol
aas
mov
lret
into
jae
jmp
inc
arpl
jge
jno
pop
mov
mov
nop
inc
xchg
sbb
push
mov
loopne
ret
and
jp
out
outsb
shlb
or
xchg
gs
mov
int3
fildll
and
xlat
cmc
lret
mov
fwait
test
lahf
sbb
xchg
mov
popf
fistpl
or
data16
mov
lahf
bound
idivb
fstpt
or
xlat
mov
scas
int
sub
jno
daa
mov
test
and
hlt
popa
int
pop
xchg
ja
shll
and
dec
int
mov
push
push
fldenv
lret
mov
int
cmpb
pushf
add
cmp
adc
jg
mov
lahf
outsl
cltd
lds
in
adc
jnp
xchg
mov
dec
push
lret
sub
fwait
pushf
in
stos
mov
mov
outsl
scas
sarb
popa
scas
push
es
push
in
jmp
sti
cmc
shrl
push
inc
dec
mov
test
dec
or
jae
jne
lods
into
mov
iret
cld
jle
cwtl
pushf
jns
sub
repnz
into
add
enter
mov
loopne
ret
nop
pop
icebp
mov
push
cmp
push
clc
dec
mov
xor
fmull
loopne
and
add
loopne
pop
push
daa
in
leave
fwait
cs
jae
fsubrs
mov
sbbl
out
jge
retw
fildll
mov
call
xchg
and
mov
mov
fimull
lock
xchg
xchg
cld
and
sbb
data16
mov
cmp
cmp
mov
pop
inc
mov
in
xor
sbb
jge
addr16
pop
sub
sub
mov
daa
icebp
pushf
sbb
mov
popf
xorl
mov
xor
and
test
shrl
jmp
or
sub
rorb
mov
xor
mov
sub
xor
mov
or
movsl
mov
xchg
or
shlb
or
cmp
pusha
cmpsb
mov
testb
and
jmp
sub
test
push
push
stos
mov
hlt
xor
push
push
mov
jg
test
mov
xchg
aam
fidivs
scas
shrb
imulb
dec
bound
lods
movsl
xor
sub
test
xor
xor
sbb
notb
and
stos
lea
pop
cmp
insl
push
xchg
adc
cmp
cltd
fidivl
test
scas
cmp
pushf
push
outsb
mov
subl
xchg
mov
sbb
push
dec
push
push
mov
test
jmp
fwait
dec
ljmp
mov
xlat
and
cmp
test
pop
sub
xchg
pop
fcmovnbe
loope
lahf
scas
or
test
outsb
xchg
orb
movsb
xchg
cld
mov
notb
nop
imul
jnp
sub
add
btc
mov
movsl
mov
cmp
lods
in
mov
push
call
pushf
jb
std
cmp
and
adc
rclb
xchg
or
and
loope
mov
ds
fwait
scas
inc
add
in
fdiv
push
fwait
and
mov
adc
scas
hlt
ret
push
xchg
or
jae
or
sbb
shlb
jmp
inc
xchg
jo
mov
jmp
std
mov
and
sub
js
inc
insl
dec
cmp
call
mov
jo
sti
push
movb
sbb
adc
rorb
or
adc
add
ja
bound
and
inc
adc
imul
int3
pop
adc
loope
jne
es
add
hlt
into
outsl
int
data16
dec
adc
imulb
add
push
mov
pop
mov
addb
popf
pop
and
imul
inc
xor
push
pop
lret
inc
dec
adc
mov
scas
ret
jecxz
icebp
mov
das
sub
lret
outsb
inc
adc
sahf
ret
push
nop
lea
jge
imul
fsubl
push
popf
push
es
out
hlt
mov
push
mov
mov
sti
adc
xchg
cmpsl
stos
std
ss
daa
adc
test
jo
jnp
inc
daa
cmp
jb
rclb
adc
pop
pusha
sub
lds
fadds
into
pop
test
rcrl
push
push
ds
test
mov
out
add
add
inc
dec
daa
xor
push
and
push
scas
insb
mov
test
sahf
jns
leave
loop
js
fadds
add
add
mov
add
xchg
lret
pop
xchg
cli
mov
mov
push
lea
insl
in
outsb
aas
sbb
push
mov
sub
stc
int
int3
jo
jecxz
or
lret
push
bnd
pusha
xor
pop
nop
and
shl
mov
jmp
inc
sbb
push
mov
dec
les
enter
sub
lret
mov
sub
jge
or
or
out
imulb
push
xchg
out
hlt
sub
mov
inc
ret
cmpsl
adc
test
mov
adc
mov
int
subl
pop
cmp
jb
sbb
xchg
inc
add
mov
push
ss
rcrb
idiv
or
sbb
stos
stc
fsubrs
repz
mov
cmp
push
movsb
in
repnz
cmp
fcompl
pop
mov
or
lret
mov
push
mov
ds
enter
adc
imul
push
mov
es
pusha
add
sub
lods
push
test
add
daa
aam
jecxz
sub
push
push
test
dec
push
fsubl
push
sub
pushf
out
xor
outsb
push
fwait
mov
mov
jae
insb
arpl
int3
leave
mov
js
xchg
cmpsb
mov
pop
lcall
mov
daa
ds
call
das
rcr
call
or
jnp
push
add
or
cwtl
jns
xchg
jp
jmp
cmp
sub
sub
ljmp
mov
rcrb
pop
mov
in
adc
out
inc
hlt
outsb
das
push
je
mov
inc
jno
inc
out
push
xchg
aas
popa
dec
xchg
dec
mov
pop
andb
repnz
mov
xor
ror
adc
nop
dec
push
push
mov
xor
test
sub
icebp
cs
mov
push
jno
lret
cmp
repz
lods
sub
mov
jge
gs
push
in
mov
push
xchg
push
mov
adc
stos
adc
sahf
lret
add
jg
iret
or
sub
mov
leave
cs
repnz
jbe
sbb
add
dec
xchg
test
out
jne
dec
adc
jmp
add
aaa
jo
subb
cmpsb
dec
and
and
xor
mov
jae
mov
pop
xor
shll
pmullw
push
in
je
call
pushf
jae
jecxz
les
push
xor
mov
and
dec
mov
pushf
pop
mov
stc
stc
insb
lds
ret
fisttps
insl
push
jno
sbb
sar
movsb
push
push
dec
ret
out
dec
stc
push
xchg
or
movsb
fisubs
mov
mov
cmc
lods
add
pushf
dec
les
das
adc
and
popf
js
and
jae
bound
sub
inc
sarb
lock
xchg
xchg
mov
xchg
xchg
mov
sahf
jo
jle
mov
sbb
movsl
push
in
dec
sahf
loop
mov
inc
fiadds
mov
cmp
fdivs
arpl
fadds
push
test
mov
out
fs
and
out
cmp
lcall
dec
aaa
loope
mov
enter
cmp
gs
cwtl
pop
jle
addl
jno
nop
sbb
push
xchg
inc
dec
mov
les
push
pop
lock
mov
movntps
hlt
in
aas
jl
jle
or
shl
mov
insb
das
ja
iret
sar
testl
add
loop
bound
adc
les
lea
call
popf
dec
add
jno
add
mov
push
dec
and
out
in
test
inc
mov
int3
fmul
fbstp
sub
scas
in
mov
sbb
loope
les
scas
mov
dec
loope
mov
adc
xchg
sub
pusha
shl
outsb
rcrl
test
adc
push
jl
cmpsb
ror
push
xchg
pop
lahf
shl
adc
fnstsw
adc
loopne
mov
dec
lret
sbb
addr16
lock
cwtl
loop
fimuls
or
sub
stos
adc
push
stos
not
mov
sti
pusha
sbb
mov
inc
imulb
mov
sub
cmpsb
pop
inc
xchg
test
cmp
and
xchg
mov
movsb
push
jae
popa
or
jge
jbe
out
mov
pop
adc
mov
jbe
cmp
mov
dec
out
adc
movl
mov
cld
stos
mov
push
das
cwtl
push
pop
ret
mov
data16
lahf
std
mov
aas
into
push
sbb
ss
test
loope
mov
pop
inc
dec
cmp
or
test
dec
dec
cmp
outsl
push
xor
loopne
jae
pop
loope
popf
xor
xor
repnz
cmp
dec
mov
lret
xchg
lahf
orb
inc
inc
mov
push
sub
push
icebp
xor
add
lret
cltd
mov
sahf
dec
mov
xchg
aas
mov
push
jbe
es
push
loopne
pushl
lods
push
pop
fldenv
mov
ljmp
imul
cmpsb
mov
stos
out
or
pop
dec
ljmp
jne
lock
jmp
jp
xchg
jo
stos
inc
pusha
pop
mov
sbbb
lods
imul
stos
mov
out
hlt
pusha
mov
cmpsl
mov
sahf
es
lods
adc
js
xor
sahf
cld
mov
inc
adc
shl
inc
pop
or
arpl
mov
sub
push
sbb
insl
xchg
rcrl
inc
xorb
xor
aad
sbb
arpl
jecxz
mov
cmp
lahf
in
xor
arpl
lret
shrl
inc
adc
sahf
adc
xchg
cmp
cmpsb
stos
es
fs
lcall
or
in
push
push
xchg
mov
pop
scas
sbb
mov
jno
dec
push
sub
hlt
test
or
and
movb
lcall
dec
xchg
sbb
hlt
call
mov
fdivrl
pop
xchg
and
gs
lret
fs
xchg
test
rclb
lods
cltd
jo
cmp
aaa
push
jbe
cwtl
adc
lahf
jb
cmp
inc
inc
and
xchg
insl
adc
jo
pop
xor
repz
filds
pop
mov
jl
and
adc
loope
orb
push
ljmp
sub
test
mov
xorl
push
mov
push
dec
pushf
xchg
sti
fnsave
xlat
leave
mov
loop
sbb
xchg
or
fisubs
jne
mov
shl
mov
outsb
stc
std
cwtl
in
movsl
xor
pop
femms
mov
xchg
mov
movsb
in
enter
jne
cmpsl
imull
ljmp
push
push
mov
jne
cltd
in
ret
mov
shrb
fwait
cmp
add
fyl2x
sbb
movsl
popa
xor
sti
jo,pt
movsl
insb
sub
jecxz
lods
cmp
or
scas
jo
insl
in
int
add
or
in
iret
ficoml
push
xchg
sbb
in
xor
push
mov
pop
xchg
add
xchg
or
nop
cs
push
inc
outsl
aad
in
pause
cmpsl
pop
pop
xor
and
sub
mov
out
push
std
pop
sarl
dec
mul
adc
mov
lret
out
clc
in
mov
mov
aad
pop
or
adc
inc
mov
int
ret
mov
jmp
insl
std
out
push
mov
lcall
adc
icebp
leave
xchg
cli
xchg
mov
push
inc
sbb
dec
mov
fcom
xor
and
ja
mov
push
lret
sbb
insb
jg
pop
and
repz
test
pusha
sti
push
cmpsb
pop
or
gs
pusha
push
cwtl
xor
push
xor
fdivl
mov
out
jge
mov
mov
es
sub
and
rclb
add
rol
and
out
xor
out
mov
jb
pop
out
addr16
adc
xlat
and
mov
and
orb
sbb
lods
sbb
movsb
testl
mov
stos
outsb
mov
lea
jno
sti
rorl
and
or
inc
sbb
adc
mov
imul
mov
mov
or
inc
movsb
mov
push
arpl
xchg
iret
cmpsl
scas
and
add
mov
dec
data16
sbb
ficomps
pop
dec
insl
xor
in
cltd
jbe
or
jno
out
mov
jo
std
clc
dec
dec
loop
fldt
in
call
pop
pop
xchg
dec
sbb
jns
mov
sahf
in
xor
mov
xchg
mov
mov
sub
adc
cmp
dec
into
sbb
lods
ljmp
ja
mov
mov
mov
inc
adc
mov
int
inc
mov
loopne
and
adc
mov
pop
ds
lock
sbb
into
xchg
dec
repnz
and
subb
lahf
gs
or
mov
popf
add
inc
insl
pop
jne
push
leave
xchg
adc
dec
xor
bound
aaa
xor
pop
mov
mov
pop
filds
in
cmp
leave
call
icebp
mov
push
lods
stos
mov
adc
decb
push
ja
js
sbbb
xor
mov
xor
nop
arpl
xchg
loop
rorl
pusha
inc
xchg
sarl
fildll
stc
aas
aas
mov
popa
dec
ljmp
cmc
adc
jae
das
mov
pop
sbb
ljmp
test
roll
lods
add
inc
push
jl
repnz
jno
pop
inc
dec
mov
sbb
daa
stos
sub
push
mov
gs
pop
and
mov
sub
int3
mov
sahf
mov
or
aaa
xchg
call
adc
and
shrl
jle
jne
pop
das
ret
cmpsb
into
leave
mov
outsb
jo
mov
cld
fcomps
aam
arpl
cltd
dec
lea
push
push
ret
data16
ret
lods
and
pop
pop
and
cltd
push
jl
sbbb
xchg
aad
cltd
and
sub
sbb
rorb
imul
cmpsb
jge
mov
das
add
mov
test
sarl
jmp
bound
orl
mov
mov
sarb
into
sbb
or
int
dec
xchg
pop
out
push
mov
pop
js
aaa
or
rorb
in
xor
push
nop
cmc
add
xchg
cmp
arpl
iret
mov
cmc
mov
adc
jnp
shl
jae
ret
lock
mov
pop
lods
insl
ret
lahf
ljmp
adc
or
push
xor
rorb
sbbb
lods
cmp
out
shrl
jl
out
jns
lds
mov
or
push
add
cmc
cmp
inc
lret
pop
sub
out
cmp
rcrb
sbb
cli
daa
rcrl
and
rcll
push
cs
rcll
cmp
or
mov
mov
mov
pop
ret
adc
lods
xchg
mov
xor
gs
out
pop
inc
push
pushf
push
push
cmp
pushf
add
pop
shl
and
pop
inc
loope
daa
add
or
inc
pop
repnz
adc
jecxz
and
cmpsb
mov
outsl
gs
clc
sub
jmp
aam
cmp
sbb
jne
rcrl
negl
pushf
sbb
rcrb
pop
std
pop
xchg
cmp
ljmp
lahf
inc
mov
lret
dec
movsl
xor
jo
arpl
outsb
popf
push
xor
out
push
mov
jae
es
movsb
cmp
jns
ja
lret
xor
cmp
jmp
ffree
inc
or
rolb
pop
sub
lea
mov
pop
cmp
imul
push
pop
lcall
push
inc
into
add
ljmp
add
mov
or
leave
cld
mul
fstpl
out
or
out
lock
popa
cmp
dec
inc
je
jb
jg
fcompl
lods
or
dec
inc
and
cltd
jmp
sub
stos
es
xchg
xlat
add
shlb
or
push
bound
inc
lea
adc
out
aam
int
lock
sbb
stos
dec
test
and
insl
adc
cmp
test
and
pusha
push
pop
sub
jno
lahf
ds
jp
sbbl
ds
int3
imul
lods
mov
jae
mov
js
and
fucomi
and
gs
adc
filds
ss
inc
push
dec
pop
cld
negl
sbb
cmc
seto
adc
dec
rcrl
jp
sub
inc
data16
dec
aaa
mov
jae
cmp
add
push
xlat
sbb
cmp
mov
xor
fimuls
movsb
clc
xchg
pop
jl
cs
icebp
jns
js
pop
pop
xorb
mov
ja
cltd
scas
dec
insb
or
ret
test
leave
sbb
subl
mov
inc
and
hlt
leave
adcl
mov
aaa
xor
and
jb
cmp
mov
jnp
adc
rcll
in
mov
and
repnz
scas
push
les
xchg
inc
sar
cmp
leave
mov
out
jle
pop
pop
fwait
push
bound
fsubl
loopne
xor
jge
or
sub
jecxz
and
imul
repnz
push
sbb
jmp
outsb
jb
test
subl
dec
xchg
sub
push
in
mov
mov
mov
push
cltd
sbb
mov
push
into
dec
add
repnz
sub
mov
inc
sub
push
jbe
or
scas
fidivrs
jg
cwtl
inc
ja
rcr
scas
ret
pop
shl
xorl
sbb
jecxz
cmp
sub
and
xchg
mov
lea
mov
push
sub
cmp
jecxz
push
mov
dec
xor
mov
nop
jo
ljmp
pop
sub
xor
cs
les
sub
pop
adc
mov
mov
fwait
add
call
pop
dec
pop
data16
or
sub
stos
imul
cld
mov
xchg
mov
rclb
pusha
lock
dec
mov
cmpsb
adc
loop
jecxz
cld
dec
lret
subb
mov
outsl
call
sub
dec
add
push
push
scas
mov
dec
sub
pop
out
xor
cltd
dec
add
push
pop
xor
loop
aaa
push
out
jle
sub
aas
jg
sbb
fmuls
out
xchg
frndint
hlt
push
out
movsb
js
int3
cmp
or
sbb
mov
out
into
pop
xor
fistpl
jmp
jecxz
dec
jl
pushf
fsub
pop
cmp
ror
jbe
lahf
xor
push
dec
cmp
push
inc
fstpl
std
pusha
mov
scas
mov
xchg
nop
in
sbb
pop
xchg
xchg
push
dec
fdivl
pop
jg
xchg
roll
push
sub
and
stc
push
adc
lret
lcall
lret
adc
mov
mov
push
mov
push
shlb
pop
sbb
leave
inc
pop
movq
inc
fildl
add
cmp
cmp
jp
mov
mov
divl
aam
stc
mov
lods
cs
repnz
adc
imul
fwait
aad
sub
pop
loope
sbb
pushf
gs
inc
dec
test
inc
pop
mov
jno
pusha
fnsave
sbb
fldl
scas
out
pusha
fucom
loopne
push
xor
add
xor
push
aas
pop
push
pushf
pushf
mov
push
mov
pop
lcall
add
dec
mov
lret
shrl
mov
lock
and
dec
lods
fsubrs
dec
in
lcall
bound
mov
fwait
sti
mov
fcomi
ret
es
loope
stos
xchg
sahf
cli
ret
mov
mov
xchg
sbb
movsb
jp
mov
inc
mov
bound
lahf
mov
movsl
and
in
cs
jns
xor
es
mov
mov
push
cmc
int
sbb
fcmovnb
imull
cmp
sub
sub
mov
add
push
rclb
dec
adcl
mov
and
int3
insl
pop
ret
xchg
sub
add
mulb
cwtl
or
inc
sbb
cmpb
ljmp
jmp
jo
jmp
test
dec
sbb
jb
rcrb
insb
fmuls
mov
mov
and
fdivr
lret
mov
rorl
mov
xor
cmpsb
pop
call
xchg
mov
adc
xor
xchg
or
add
mov
xchg
shll
mov
insl
dec
test
rorl
fcoml
mov
inc
ret
adc
jle
arpl
dec
mov
adc
test
int3
sub
ds
ficompl
dec
adc
or
adc
mov
push
aad
adc
scas
xchg
subb
cltd
mov
xor
sbb
pop
pop
mov
icebp
or
testl
decl
arpl
cmpsl
out
push
cmpsb
pop
dec
add
dec
mov
xchg
or
jecxz
lods
mov
cmp
imull
xchg
test
sbb
inc
push
dec
daa
stos
mov
push
ds
lcall
mov
rcll
cs
fs
cmpsl
adc
test
mov
loop
std
divl
je
jo
xchg
pusha
test
bound
jnp
mov
sahf
mov
cmp
rolb
sub
daa
sub
dec
jmp
sub
xchg
add
hlt
cmp
dec
cld
js
push
loopne
fldcw
xor
out
pop
adc
fucomip
xor
push
cmp
jmp
xlat
daa
pop
imul
lods
repz
dec
fstpt
loopne
rcrb
int
jp
jmp
stc
adc
mov
adc
push
pop
mov
fsts
sub
fimull
leave
imul
mov
sbb
and
adc
mov
jae
and
addr16
push
dec
ds
insb
cli
mov
xlat
pop
test
iret
add
adc
jns
inc
add
aas
lock
das
cmc
rcrl
gs
lds
mov
sti
in
jecxz
cltd
insb
ret
jns
sbb
jbe
lods
cmc
test
or
adc
int
fidivrl
pop
inc
and
jo
xchg
jb
mov
mov
mov
stc
cwtl
jge
addr16
lods
mov
xchg
bound
es
shrb
pop
data16
ret
das
push
mov
add
and
jb
out
cld
xor
leave
pop
mov
repnz
cld
add
hlt
sub
je
adc
into
out
nop
rorb
out
out
or
xchg
je
std
dec
or
push
test
imul
ret
pusha
or
push
inc
push
inc
inc
jo
jne
jg
loop
popf
add
int3
xor
gs
adc
rorb
leave
outsb
add
test
dec
and
test
push
dec
xchg
mov
adc
jbe
aam
or
sbb
push
lcall
sub
test
lahf
pop
pop
pop
les
fucomi
and
imul
mov
fs
push
scas
imul
mov
ror
mov
push
dec
pop
scas
notb
mov
sub
mov
jl
or
jns
sbb
out
sub
cmp
push
out
inc
movsl
adc
sahf
inc
sub
cs
mov
je
or
rclb
es
cmp
inc
mov
scas
popf
fsubs
push
jecxz
fwait
mov
dec
into
clc
aad
test
inc
mov
sbb
jge
pxor
xchg
iret
shr
cvtpi2ps
aas
xor
xor
pusha
scas
mov
xor
pop
pop
js
xchg
cmp
shll
sub
dec
movsb
imul
pop
fiadds
inc
dec
mov
mov
data16
or
mov
loop
adc
cmp
mov
ss
lret
movsl
inc
and
lret
out
and
lock
cmp
sbb
es
xchg
mov
dec
stos
test
pop
movsl
xchg
mov
xchg
shl
jb
scas
mov
add
xchg
pop
push
and
int
mov
add
mov
adc
sub
movsb
in
jp
iret
mov
mov
mov
sub
loop
and
test
adc
push
fimuls
stos
cld
dec
mov
sbb
imul
or
in
push
pop
jp
fs
sub
mov
cmp
addb
icebp
cmp
insl
out
pop
fwait
rolb
lcall
fdivl
cmp
mov
fcomip
mov
or
int3
adc
leave
cmp
mov
ds
loop
scas
pop
pop
aam
jge
adc
mov
inc
and
std
pop
into
xchg
push
lret
inc
repz
fdivr
sub
pop
mov
pop
ds
cmp
jbe
pop
push
hlt
daa
jle
cmp
out
std
add
adc
or
fdivl
bound
sub
dec
aam
jp
mov
jp
stos
test
fwait
movsb
dec
and
lret
jo
push
scas
cmp
and
sbb
push
nop
pop
lock
cmp
vandnps
adc
cmp
cmp
loop
in
bnd
cld
fcomp
loope
mov
dec
lret
pusha
adc
inc
pop
sub
inc
lock
cmpsl
xor
movsb
mov
sub
xchg
push
lea
js
in
pop
or
push
sbb
lods
adc
cmpsl
sub
push
in
push
and
mov
sub
push
mov
arpl
imul
jae
out
sub
cmpsl
test
test
and
shrb
std
pop
ficomps
push
rorl
push
cmp
xchg
pop
pushf
icebp
adc
subl
mov
push
and
ss
insb
lret
test
pushf
jle
push
test
dec
aam
iret
movsl
dec
xor
sti
pop
insb
test
leave
int3
es
xor
and
inc
pop
movzbl
repnz
xchg
adc
data16
data16
jge
mov
xor
add
lsl
inc
dec
daa
fsubl
xrelease
lret
je
out
mov
push
imul
adc
sahf
cmc
cmp
je
adc
test
pop
insb
mov
xor
cmp
mov
loopne
push
imul
stc
cld
jb
movsb
idivl
xchg
xchg
loopne
or
mov
adcl
xchg
lret
and
adc
lahf
mov
mov
imul
in
ds
enter
lret
icebp
sar
pop
xor
cmpsb
imul
and
shrb
fldcw
add
mov
mov
scas
adc
rclb
sbb
xor
pop
xlat
sbb
xchg
in
sbb
inc
and
cs
inc
ror
in
lcall
outsb
ret
push
dec
daa
cmp
push
cmpsl
popa
imul
jns
loope
pop
pop
mov
xor
push
lcall
mov
lgs
ret
mov
jmp
cmp
sub
addl
jb
and
es
adc
jle
and
xchg
gs
into
inc
jmpw
dec
cld
jno
dec
ficoms
mov
mov
in
push
mov
push
push
xor
pop
mov
mov
xchg
sar
jp
loop
popa
xlat
sbb
sbb
popf
xor
icebp
daa
les
or
loope
pop
adc
shl
loopne
sub
dec
es
inc
and
sub
xor
jecxz
mov
jmp
xchg
test
mov
dec
enter
out
testl
inc
sub
fucom
xchg
mov
aad
inc
adc
roll
pop
out
fidivl
cmp
mov
jnp
fcomps
xchg
lret
jnp
push
add
out
inc
cmpsl
push
sahf
mov
cmp
mov
inc
in
outsb
adc
xor
cwtl
mov
jb
rcrl
mov
out
ds
cmpsl
jg
jecxz
adcb
sub
in
ffreep
xchg
dec
cs
xchg
test
sbb
inc
push
fisttpl
sbb
lods
aam
or
mov
es
mov
push
cmp
andl
adc
cmp
mov
mov
in
addw
and
add
and
mov
push
xlat
push
mov
and
inc
jge
into
test
push
jo
dec
test
jle
xor
das
push
push
cmp
aaa
popa
imul
shr
call
jecxz
out
sbb
pop
push
fcomps
sub
jmp
jo
mov
mov
xchg
adc
pop
lds
cmp
mov
xchg
insb
push
pop
xchg
xor
or
roll
ret
sbb
stc
xchg
push
adc
add
jae
inc
or
scas
push
shlb
push
pop
mov
nop
add
lock
fstps
or
out
xor
adc
lods
or
enter
mov
jns
jge
dec
inc
cmp
cmp
push
jle
insb
les
insl
in
or
popf
jnp
push
shlb
adc
add
into
push
push
pop
in
cmp
xor
jmp
push
push
je
push
xor
addr16
cmp
adc
xchg
mov
test
fs
test
jne
movsl
push
pop
dec
dec
mov
insl
adc
sbb
adc
pushf
xchg
xchg
enter
mov
pop
loope
in
inc
sbb
mov
in
clc
jno
clc
movsl
ljmp
into
cmp
out
pusha
cli
inc
add
push
in
cmp
pop
cwtl
sbb
adc
or
adcb
mov
enter
inc
test
fsubr
rcrb
or
imul
hlt
loope
mov
mov
sbb
mov
jp
jmp
cld
in
adc
jae
in
pop
inc
test
inc
sub
sbb
or
inc
xchg
add
jbe
mov
in
mov
daa
pop
pop
inc
mov
pop
icebp
subl
aas
mov
test
icebp
out
in
mov
ret
jp
mov
ret
leave
fcmovu
repz
pop
dec
mov
in
pop
stos
fisttpl
in
lods
inc
lods
push
cmp
jle
and
lods
jns
enter
fwait
jge
ja
push
dec
jae
push
testl
insl
xor
adc
incl
fdiv
iret
shl
int
pop
movsl
in
jle
loope
jl
xchg
xchg
sbbl
leave
outsl
cs
xchg
and
add
pop
jb
inc
jmp
ja
aam
stc
cs
sub
sti
jae
and
popa
cmpsl
or
cmc
rol
pop
cmp
push
jl
loopne
cwtl
xchg
enter
xchg
scas
inc
rclb
add
cli
enter
cmp
fnstenv
mov
rolb
or
add
lcall
pop
stos
popf
push
xchg
das
inc
sbb
xor
in
jge
inc
call
add
sbb
mov
rep
es
dec
cmp
dec
fdivrl
addr16
sub
shll
xchg
mov
out
jne
daa
pop
ss
push
sub
adc
lods
xchg
cmp
or
fiadds
shr
cmc
lods
in
dec
out
mov
outsl
jnp
xchg
cmp
and
or
mov
test
dec
inc
pop
out
test
insb
outsb
xchg
sti
cmp
sbb
adc
loope
std
inc
arpl
xor
call
pop
out
lahf
mov
pop
popf
int3
in
roll
push
fs
xchg
or
pop
loop
jge
mov
jle
ss
loope
popa
or
dec
filds
iret
jmp
sub
jl
dec
inc
cmpsl
xchg
add
rclb
xor
and
ret
stos
popf
pop
mov
pushf
adc
into
inc
push
imull
or
lret
pop
daa
cld
adc
sahf
push
mov
xchg
outsl
sbb
dec
fisubrl
mov
mov
pop
nop
mov
cmp
stc
out
stos
lret
enter
and
outsb
fsts
xchg
in
movsb
addr16
sti
mov
xlat
fnsave
push
mov
jle
lods
add
jg
push
add
and
cwtl
jmp
lahf
lods
cmp
xor
xor
movsb
or
jecxz
negl
out
nop
lret
adc
and
addr16
xor
ljmp
cmp
add
fists
push
bound
cwtl
loope
es
shr
push
loope
sub
icebp
jg
addr16
or
fcomps
jp
inc
mov
sub
stos
xchg
rorb
daa
jnp
xor
fwait
mov
push
gs
dec
jb
enter
sub
inc
xor
outsb
cmp
cmc
subb
cs
mov
divl
xor
jbe
mov
out
xchg
mov
imul
roll
sub
adcl
adc
dec
testl
mov
xor
pop
mov
rcr
inc
clc
xchg
push
push
je
lret
dec
data16
cmp
lock
push
popa
push
push
in
jo
xchg
xlat
fmull
out
jmp
dec
loop
mov
mov
push
dec
push
arpl
jg
test
and
xorb
pusha
enter
int3
movsl
or
and
push
or
nop
jae
jb
and
adc
sbb
mov
pop
jmp
mov
jg
shrb
fistps
ret
in
inc
pop
data16
into
hlt
adc
mov
jne
jp
mov
sbb
push
add
or
sub
pop
sub
mov
sub
es
rcrl
or
into
xchg
xor
push
ja
mov
adc
loopne
cwtl
ljmp
in
mulb
push
loop
cli
pusha
cmpsl
adc
stos
cs
dec
cltd
in
je
popa
xchg
or
add
imul
rorb
sub
dec
adc
mov
or
imul
cmpsl
jbe
xchg
cmp
and
dec
mov
les
cmp
jg
stos
mov
mov
and
dec
push
in
test
cmp
repnz
aad
fwait
push
mov
cs
enter
mov
sbb
adc
inc
scas
pop
inc
lcall
mov
movsb
imul
or
inc
int3
lcall
inc
je
xor
addb
xor
insb
repnz
pop
add
jl
inc
xor
psadbw
jnp
movsb
mov
mov
xlat
pop
mov
std
cmpsb
or
lods
addr16
aad
vpsllq
or
imul
push
fucomi
lea
lret
or
xchg
inc
cmpsl
out
dec
bound
add
lods
mov
push
or
dec
xlat
xor
add
mov
dec
jo
or
pop
mov
aam
sub
jne
or
and
cmpsl
jns
inc
add
mov
adc
push
mov
fs
scas
in
mov
sub
callw
fs
jmp
adc
dec
dec
lock
mov
fs
fnstenv
lds
out
add
jge
xor
movsb
push
sbb
sbb
mov
jne
cmp
mov
dec
xor
andl
cmp
adc
xchg
int3
sbb
ficomps
jb
mov
jp
aaa
aaa
pop
fidivs
cld
adc
sarb
stos
xor
adc
mov
lahf
mov
loopne
xchg
dec
cmp
xor
jle
loope
add
popf
aas
jo
ss
xchg
popa
push
jle
xorl
cmp
xchg
aas
inc
aad
xchg
imul
or
cmp
lods
loopne
pop
lods
scas
cmp
testb
lds
mov
cli
sbb
inc
push
or
sub
add
lods
stos
lods
sbb
push
cmp
sub
mov
in
jno
imul
daa
aam
xor
cmc
cmpsb
adc
add
sub
loopne
sarl
mov
test
xlat
xor
clc
inc
je
and
or
rorl
lcall
or
mov
sbb
inc
sub
call
mov
movntq
fsubrs
sbb
inc
test
and
cmpsl
jno
push
mov
stc
jnp
dec
and
adc
mov
mov
cmp
mov
shll
sub
inc
pop
aas
push
pop
pop
cmp
cmpsb
out
orb
popf
sub
sbb
mov
inc
jnp
sbb
stos
daa
fwait
enter
orl
mov
lods
mov
dec
and
jno
test
push
mov
ret
mov
aas
aas
inc
xorb
rol
sub
cwtl
in
cmp
icebp
cwtl
cmp
mov
inc
jb
enter
mov
lret
gs
call
popa
sbb
js
pop
lahf
data16
das
mov
loope
xchg
xchg
cmpsb
adc
aad
test
xor
dec
inc
loop
cld
inc
inc
stos
push
mov
out
pop
subl
xor
in
mov
xor
lahf
pop
inc
mov
cmc
int3
mov
xchg
cmpsb
push
fstpt
jg
movb
div
aad
fcmovne
addb
ret
loope
leave
rcrl
xchg
adc
inc
js
adc
jge
mov
cmc
ret
popa
mov
cmp
repnz
negb
push
lret
decb
cmc
sub
push
int3
push
push
neg
and
imul
dec
insb
enter
xor
lcall
jbe
inc
mov
or
mov
shl
lods
and
sbb
pop
cmpsb
divl
dec
xor
mov
inc
mov
pusha
mov
xchg
inc
pop
pop
ret
mov
adc
sbb
jb
inc
or
xchg
mov
test
sbb
gs
and
xchg
and
stc
movb
sbb
fimull
push
jp
loope
mov
cmp
mov
mov
lods
and
mov
add
and
imul
inc
out
fcompp
cwtl
mov
inc
cmp
mov
xor
mov
gs
call
cltd
jp
sub
mov
cmp
in
add
xchg
mov
and
subb
dec
addl
adc
cli
and
pop
xchg
rcrl
test
mov
aam
jmp
push
mov
pop
icebp
mov
test
cmc
lods
aad
dec
adc
xor
inc
mov
adc
pusha
pop
clc
mov
outsl
mov
cmp
pusha
test
push
jge
inc
ljmp
and
in
inc
mov
daa
mov
xor
mov
pop
push
sub
jg
mov
xor
pushf
push
popf
icebp
dec
dec
lods
mov
mov
adc
cmc
and
ljmp
adc
xor
and
or
xor
jae
push
rcrb
pop
ja
dec
repz
sub
xor
sbb
inc
mov
loopne
cmp
push
or
lret
dec
in
test
jae
add
subb
movsb
loope
cmp
cmp
jle
negb
movsl
and
dec
push
mov
or
xor
fsubl
pop
insb
inc
outsl
adcl
jo
scas
das
cmc
stos
inc
repz
jg
in
sbb
shlb
adc
fs
adc
mov
ret
cmp
xchg
loop
xor
inc
xchg
xchg
xchg
push
popf
mov
push
push
in
or
stc
rol
xchg
cli
test
iret
js
fistps
sbb
in
pop
jg
stc
jp
enter
adc
ss
or
lods
insb
loop
xchg
fisttps
pusha
push
vdivss
ljmp
int
ja
pop
xchg
iret
int
ficoms
jbe
adc
lret
inc
inc
inc
and
pop
dec
fs
cmp
sub
xor
jb
mov
int3
stc
or
inc
cmp
inc
repnz
loope
xchg
mov
sarb
add
pushf
push
mov
inc
sbb
pushf
in
rolb
mov
stc
jno
stos
dec
and
cmp
mov
mov
add
in
daa
arpl
addr16
sbb
pop
cmpl
mov
in
sub
out
out
rcrl
mov
imul
mov
js
xor
xlat
rclb
or
ljmp
movsl
sbb
dec
mov
mov
addb
mov
sub
and
repnz
lea
lods
sti
shr
sub
xor
mov
and
aaa
mov
popf
call
outsb
pop
xchg
int3
add
xor
jle
mov
xchg
test
je
mov
add
gs
inc
orl
jo
mov
leave
pop
shrb
cltd
pop
cmp
aam
daa
outsb
add
data16
or
mov
inc
xor
in
mov
in
cltd
cmpsl
dec
cmpsl
jns
ds
push
or
sub
cmp
aad
pop
mov
or
subb
mov
das
loop
gs
adc
jmp
sub
je
add
loop
jns
xchg
cmp
mov
jl
xchg
mov
jno
rcr
add
pop
cwtl
mov
dec
jae
cmp
inc
ss
add
pop
xchg
xor
mov
ficompl
pop
dec
scas
int3
sahf
fstl
pushf
fmull
pop
daa
out
pop
loope
jge
sahf
andb
adcb
push
dec
fxch
shlb
inc
mov
mov
cmp
movsl
insb
cmp
pop
add
mov
js
out
imul
cltd
sbb
fs
ljmp
sub
mov
sub
insb
adc
jl
pop
sbb
mov
add
mov
cli
xchg
and
nop
fldcw
in
lcall
xchg
xchg
and
inc
and
imul
jle
lods
push
je
pop
sbb
mov
push
and
push
lea
repz
popa
cld
inc
movsb
pop
mov
dec
lahf
push
lods
ja
push
pushf
mov
cmpsl
mov
cmp
jb
stos
fisttpl
ja
inc
adc
push
pop
popf
and
add
mov
daa
xlat
mov
arpl
adc
or
mov
xlat
xchg
jne
push
aas
jp
insb
ret
mov
scas
ss
loop,pn
in
daa
cmc
leave
add
insb
mov
loop
and
rorl
pop
xor
xchg
pop
das
cld
jmp
js
aaa
mov
xchg
jno
sbb
lock
xchg
push
xor
xchg
mov
mov
mov
pop
repnz
sarb
cmpsl
addr16
jnp
jge
ds
js
ficomps
or
mov
mov
mov
dec
adc
aad
mov
pop
sbb
out
in
mov
xchg
push
jne
mov
iret
rcrb
xlat
dec
adc
sub
or
insl
sbb
mov
adc
pop
mov
add
cmpsl
mov
mov
stc
mov
fisttps
ret
xchg
add
xchg
mov
sti
loop
xchg
xlat
frstor
cltd
jbe
scas
out
sub
dec
cmp
sarl
pop
xchg
cs
mov
orl
xchg
add
in
repnz
cmp
daa
ds
inc
test
lods
std
adc
cs
orb
cmp
sub
mov
xor
movsl
xor
addr16
pop
jge
lret
in
mov
leave
iret
int
add
out
jl
push
shll
and
cltd
rcrl
push
inc
orb
or
hlt
inc
and
mov
das
and
popa
dec
dec
dec
fwait
and
and
lods
fstpt
in
pop
out
push
stos
mov
jl
pop
or
xor
jb
jne
in
pop
push
xchg
notb
pushf
ljmp
lods
xchg
push
push
dec
mov
stc
push
dec
sub
sti
fiadds
lahf
xchg
mov
sbb
lret
xorl
sbb
pusha
add
cmc
call
rclb
inc
xchg
test
xchg
outsb
orl
insl
pusha
push
mov
sub
lea
adc
pop
cs
cmp
mov
pop
inc
ss
pop
mov
cmc
dec
cmc
bound
push
div
sbb
adc
punpckhwd
sbb
in
lret
fbld
xchg
pop
mov
push
inc
sub
add
stos
jecxz
push
hlt
sbb
ja
enter
sahf
inc
push
or
repnz
stos
sbb
bound
mov
inc
mov
call
ret
aad
and
xor
mov
jl
mov
in
repnz
gs
addr16
push
sbb
fadd
fcompl
fwait
jl
add
lea
lea
jmp
popa
aas
jmp
pop
pop
push
jne
mov
int
addl
out
hlt
pop
push
sub
aas
stc
bound
and
mov
xchg
mov
in
std
cltd
jo
mov
sti
fdivs
sbb
scas
xchg
xchg
repz
test
inc
and
mov
xchg
push
sahf
into
add
xchg
into
popa
lock
xchg
xchg
sbb
dec
into
inc
jecxz
in
loopne
aad
lock
mov
aad
movsb
stos
cs
xor
mov
jecxz
jmp
inc
jns
mov
fsubs
outsb
xchg
out
mov
icebp
movb
add
cmc
mov
push
lret
test
push
lcall
mov
stos
loope
fsubrs
call
mov
into
push
mov
xor
and
int
push
add
negl
and
xchg
shrl
je
jnp
xchg
and
pop
xchg
insl
mull
fs
es
mov
push
inc
inc
push
fdivs
pushf
clc
inc
xchg
push
ljmp
adc
rorl
xchg
pop
push
mov
fistpl
jle
aad
fsubr
or
push
inc
ja
or
sarb
fwait
shl
mov
xor
mov
sbb
push
dec
or
mov
stos
mov
jg
xchg
cmp
bound
or
adc
jle
nop
mov
lret
fstpt
add
pmaddwd
inc
pushf
insb
cmpsl
xchg
scas
int
pop
adc
cmp
cmp
cmp
mov
add
out
push
ret
gs
cli
leave
adc
cwtl
mul
in
adc
orb
dec
pop
ljmp
js
mov
lahf
mov
inc
leave
jg
add
sbb
or
or
cmp
filds
ret
cmp
dec
pop
cmp
in
fld
push
sbb
fdivrl
int3
xchg
jecxz
insb
xchg
notb
ret
leave
xor
aaa
sti
in
ljmp
decb
push
mul
xchg
jne
idivl
lea
outsl
pusha
adcb
inc
and
aam
nop
xlat
mov
xchg
sub
push
pop
cs
loop
dec
hlt
dec
test
cli
movsb
and
push
sub
lods
or
fists
jbe
test
mov
movsb
shll
sti
into
adc
aam
clc
xchg
outsl
dec
or
js
bound
pop
roll
insb
xchg
dec
repnz
mov
push
push
iret
pop
test
popf
adc
inc
std
shll
outsb
sar
or
sbb
mov
and
jp
pop
loop
xchg
popf
loop
inc
push
lock
mov
inc
inc
mov
movsb
sbb
ja
lea
and
jp
xchg
popa
jne
jp
cmp
jecxz
data16
sti
mov
rolb
mov
mov
test
adc
pop
mov
xchg
fidivl
int3
in
or
lea
adc
loopne
xor
fwait
lahf
mov
xor
cmp
mov
jnp
in
xchg
push
cmp
pop
scas
mov
paddusw
mov
das
inc
mov
sub
or
dec
jl
mov
push
xor
and
pop
mov
rcrb
in
ja
stc
push
push
adc
xchg
test
testb
outsb
mov
cmp
popf
adc
arpl
jecxz
dec
sar
in
int
jne
inc
insl
mov
xor
movsb
jp
push
mov
xchg
mov
mov
xor
sbb
daa
jno
pushf
mov
xor
xchg
xor
xor
lea
les
xchg
call
lods
dec
or
mov
mov
dec
jecxz
fldt
sbb
cmp
dec
movsb
in
ja
mov
repnz
out
es
jae
dec
es
cmc
dec
jb
pop
repnz
int
pop
and
fidivrl
and
mov
in
mov
je
dec
test
aas
cmp
insb
aam
aas
hlt
stos
push
xchg
mov
adc
xchg
adc
fsubrl
call
je
repz
or
jns
mov
or
sbb
jne
cwtl
test
cli
dec
enter
push
adc
out
aaa
pop
push
adc
cmp
pop
movsl
mov
mov
pop
mov
mov
pushf
mov
dec
aam
ja
lret
ljmp
and
cld
repz
jb
lcall
loop
in
cmpb
add
pop
repnz
outsb
jns
mov
cld
rol
sub
mov
jbe
lea
pop
cld
mov
aam
xchg
rcll
inc
nop
sub
xor
jo
rorb
inc
fdiv
bound
sub
adc
sbb
js
call
mov
test
dec
dec
data16
call
xor
out
movsl
lds
push
xchg
lahf
cmp
pop
add
pop
nop
sbb
xor
out
jge
mov
dec
jno
gs
sbb
pushl
xchg
pop
lret
mov
enter
pop
sub
pop
cmp
pop
cmp
outsb
aad
pop
je
mov
mov
mov
pusha
or
mov
sub
sub
inc
movsl
aad
cmp
cwtl
mov
stos
sub
sub
imul
repnz
mov
xchg
test
and
test
jno
ljmp
divl
mov
adc
movsl
push
sub
pop
ljmp
inc
mov
cltd
loope
or
js
dec
leave
fcompl
cs
test
jns
leave
bnd
leave
shlb
bnd
sbb
mov
jbe
dec
shlb
push
inc
or
lods
roll
stos
push
jmp
ljmp
mov
sbbl
nop
mov
jl
mov
jmp
cli
push
push
jnp
out
mov
or
bound
mov
sbb
push
into
xchg
rclb
sbb
insl
pop
adc
jg
mov
mov
es
popa
mov
mov
ficoml
inc
adc
lock
jne
lods
rolb
sub
mov
outsl
and
mov
mov
push
cld
gs
mov
xchg
and
adc
push
imul
push
pushf
loopne
mov
dec
inc
call
dec
dec
inc
mov
pop
leave
daa
push
adc
int
fidivrl
mov
cld
popa
icebp
sbb
out
pop
rcll
mov
dec
mov
les
cli
and
mov
mov
push
arpl
bound
int3
daa
mov
push
out
cmpsb
loope
rol
sti
sarl
mov
xchg
and
fimull
push
pop
dec
das
dec
mov
mov
call
sti
aam
aad
pop
xchg
sahf
jnp
mov
jnp
clc
cli
mov
and
in
ds
popf
xchg
lock
sti
test
fwait
shl
xlat
aad
or
test
pop
mov
rcl
ja
popf
mov
lahf
push
cmpsb
dec
pop
mov
push
add
in
ds
xchg
lcall
cmpsb
mov
xchg
mov
clc
fiaddl
leave
test
push
mov
lods
popf
dec
add
pop
mov
int
bound
jecxz
scas
aas
outsb
push
arpl
jnp
mov
inc
fsubs
ficoml
mov
pop
sarb
mov
mov
and
adc
adcl
imul
sub
mov
in
rcr
sti
jmp
mov
jne
fwait
mov
add
shlb
mov
push
jg
filds
dec
lock
push
inc
stos
repz
test
cli
sbb
cmp
add
fcoml
jae
adc
lret
sbbl
jecxz
pop
addl
js
bound
add
mov
push
int3
mov
jmp
fnsave
shrb
mov
xchg
inc
xchg
fidivl
pop
mov
popa
repz
inc
or
mov
loopne
fistps
bound
fists
dec
scas
push
sub
idiv
test
andl
iret
test
aas
jge
out
jo
lds
test
pop
stos
loop
dec
daa
sub
mov
out
inc
push
xor
add
mov
cmpsl
aas
pop
scas
push
xor
or
cmp
mov
add
je
sbb
insb
push
xchg
xchg
scas
push
and
or
sub
cmp
sub
sub
call
mov
sbb
icebp
pop
outsb
insb
sbb
jne
movsb
sahf
lods
sbb
fisttpl
dec
rcrb
in
xor
mov
es
js
mov
inc
lret
push
hlt
or
xor
scas
push
push
push
ljmp
add
adc
imul
cmp
das
fwait
in
aas
mov
rclb
icebp
sbb
add
mov
pushf
pop
xor
adc
jmp
test
and
add
lods
xchg
mov
adc
and
jo
or
inc
or
mov
leave
es
ret
clc
mov
fsubs
mov
pop
adc
scas
out
lcall
imul
out
mov
clc
push
xchg
inc
jle
popa
push
enter
mov
aas
das
mov
dec
outsb
test
leave
ret
sub
lcall
test
aaa
mov
mov
pushf
sub
dec
lret
dec
xchg
add
xor
mov
stc
and
pop
dec
rorl
pop
pop
push
inc
pop
xor
stos
sub
and
imul
sub
iret
dec
popa
mov
jbe
gs
pop
pop
mov
and
out
repz
xchg
aad
inc
test
mov
xchg
sahf
pop
lock
enter
inc
fstps
xchg
and
xchg
in
lods
orl
add
je
imulb
xchg
xlat
jbe
out
push
cmp
arpl
mov
or
jmp
pop
mov
fiadds
mov
mov
mov
loop
std
fcmovbe
repnz
lret
xchg
push
sarb
sub
cmc
mov
jmp
adc
push
add
sbb
inc
icebp
cwtl
cli
sub
rcrb
sub
imul
icebp
ja
xchg
mov
jle
outsb
fsubrs
mov
add
and
mov
rcl
xor
hlt
out
xor
ja
add
mov
add
sub
inc
xchg
iret
loopne
dec
addr16
xchg
add
fsubr
mov
das
jmp
push
jns
lods
jge
addl
fsubp
sbb
push
mov
and
out
inc
cmp
cs
pop
scas
pop
and
jbe
loop
data16
add
dec
mov
dec
inc
movb
mov
cmp
sahf
inc
shl
xchg
testb
test
sub
fisubl
je
xor
lcall
sahf
pop
movsl
sbbb
mov
repnz
fcmovb
stos
jo
jp
sub
lahf
loop
xlat
pop
sub
ret
cld
loope
arpl
mov
mov
dec
stos
cmpsb
mov
push
lock
mov
lock
jns
fidivrs
dec
aad
jl
imul
dec
add
shlb
or
dec
adc
mov
pop
pop
jne
es
xchg
lods
ret
repnz
push
push
rcrb
add
fistpl
dec
fildl
lds
sub
mov
jle
iret
lret
xor
dec
sahf
in
mov
loopne
sarl
nop
xchg
int3
jno
outsl
leave
dec
xchg
fs
dec
mull
mov
out
jl
dec
clc
int3
lahf
lahf
sub
rcll
shl
cmpsl
jno
test
test
push
cmp
mov
dec
mov
std
pusha
jb
pop
mov
clc
xor
insl
push
xchg
cmpsb
xchg
jo
pushl
mov
jecxz
push
mov
imul
nop
into
mov
push
inc
cmp
mov
pop
cld
and
mov
sub
int
inc
pop
mov
inc
add
xor
inc
stc
adc
push
or
push
or
adc
ret
test
inc
xchg
lret
cmp
aam
pop
dec
ret
into
mov
iret
roll
and
cltd
fs
dec
loop
loope
add
jecxz
fsubrs
hlt
nop
pop
int
fnstcw
jae
loope
aas
in
mov
xor
pop
test
push
pop
mov
cmc
add
nop
ljmp
pop
cmp
sbb
test
xchg
loopne
icebp
mov
fnstenv
scas
mov
jo
inc
jno
loope
push
push
in
xchg
dec
and
scas
in
popf
pusha
add
pop
mov
orl
cmpsl
sti
add
pop
mov
add
jnp
add
pop
xchg
aam
sbb
int
into
std
mov
nop
add
int
mov
jge
inc
add
jg
in
in
dec
sbb
or
ret
xor
pop
xchg
dec
add
mov
jmp
lock
cmpsl
jecxz
or
shrl
xor
xchg
enter
and
in
sub
mov
add
inc
out
mov
push
fs
imull
mov
andl
cmp
xchg
sahf
popl
inc
inc
or
test
loop
jle
insl
mov
out
aaa
sbb
push
sbb
mov
dec
jno
push
sub
mov
es
sub
dec
into
pop
iret
xchg
loop
cltd
inc
pop
jns
inc
dec
xor
mov
out
mov
xchg
and
cmp
or
xlat
jbe
sub
lods
cmp
insb
pop
in
or
and
push
roll
adc
fisubrs
ss
lock
jecxz
mov
and
mov
ljmp
pop
call
jae
dec
push
shrl
mov
int3
ja
jno
sbb
sbb
mov
mov
inc
mov
jno
ja
and
data16
mov
or
call
inc
in
dec
push
test
mov
inc
hlt
mov
jbe
pop
call
push
addr16
and
in
lds
cs
push
stc
mov
and
addr16
jmp
cltd
pop
inc
mov
lds
pop
in
outsl
pop
xchg
and
insl
add
test
int3
push
shlb
jnp
cltd
pop
ljmp
sbb
adcb
jecxz
fsubrs
cli
scas
fistpll
or
out
pop
sub
mov
popa
xchg
test
mov
ss
xchg
mov
stos
das
jg
repz
ljmp
mov
adc
loopne
bound
jmp
dec
pop
and
icebp
sbb
xor
fstpt
xchg
dec
leave
jb
jge
aaa
mov
dec
sti
dec
ljmp
mov
imul
jb
lock
or
jae
push
lock
test
sub
jns
mov
xchg
out
lods
into
decb
dec
outsb
and
loopne
mov
dec
mov
cwtl
popf
jns
dec
add
in
dec
fcmove
js
adc
insl
icebp
rclb
loope
aam
fbld
cld
mov
inc
mov
je
inc
cs
push
mov
cwtl
xor
clc
aam
push
rorl
push
aad
scas
mov
fsubrl
mov
in
xchg
test
aas
sahf
arpl
call
test
sub
cmc
lahf
push
push
xchg
jge
cli
sbb
mov
outsl
sub
or
pop
dec
sti
aaa
daa
mov
lret
xchg
pop
xor
rcll
cld
mov
xor
dec
aad
leave
inc
mov
jb
adc
lret
mov
inc
jge
mov
sbb
out
push
jae
pusha
pop
outsl
imul
insl
xchg
scas
movsb
jbe
loop
lret
push
jb,pt
repnz
cmp
cmp
jmp
je
repz
lahf
les
cmc
loopne
std
and
pop
lcall
and
scas
sub
jns
jmp
cltd
movsb
xchg
or
and
mov
sub
jbe
out
cwtl
ss
and
or
jnp
sar
daa
ds
inc
cmp
lahf
jl
stc
ds
into
outsl
test
popf
and
fwait
add
dec
adc
mov
in
push
ds
sbb
or
cmp
cs
out
inc
jo
mov
and
xor
aam
rorl
in
mov
mov
ficoms
inc
clc
pop
push
push
popa
cmp
mov
icebp
dec
orl
jg
ficompl
pop
cwtl
dec
jle
aaa
add
les
sbb
sar
xchg
inc
push
dec
xor
push
subl
fisubrl
dec
adc
jl
push
inc
dec
pop
mov
inc
jl
dec
push
push
sub
pop
jmp
lret
add
mov
call
fsubs
icebp
out
fdivrs
stos
xchg
dec
mov
mov
scas
push
add
repnz
stos
sub
sub
clc
cmp
repz
in
call
inc
lahf
xchg
jnp
adc
inc
ret
and
movsl
xor
push
loop
loope
fwait
sub
insb
inc
int3
fs
test
ljmp
cmp
sub
out
jecxz
mov
imul
adc
pop
ret
insl
cs
adc
mov
push
in
lea
gs
fs
xorb
jle
rcr
xchg
jbe
mov
in
and
sub
div
out
sbb
mul
jecxz
jmp
out
mov
into
sub
shlb
pop
adc
cmp
movsb
add
outsb
pop
pop
inc
mov
add
popa
scas
jnp
jl
inc
shr
mov
jecxz
or
pop
outsb
push
lret
cli
pop
sbb
xchg
pop
and
out
jle
add
iret
dec
sbb
cli
xchg
outsb
filds
in
pushf
sbb
shr
jp
push
testb
std
xchg
fists
ja
fdivl
push
xor
sub
mov
int
cmp
push
enter
sbb
loopne
mov
pop
add
push
addl
or
cld
test
fidivrs
jbe
sub
pop
push
inc
clc
jno
sbb
cwtl
je
mov
pop
mov
ret
add
add
outsl
out
xchg
push
sbb
sub
testb
stos
jecxz
mov
inc
dec
hlt
dec
in
xchg
shlb
in
js
pop
xor
jae
mov
inc
sub
imul
push
dec
enter
das
rcrl
lock
push
fnstsw
add
jge
sub
test
sbb
fisttpll
add
mov
xor
jne
test
xlat
sti
sbb
mov
mov
or
pop
push
cmc
mov
sbb
gs
les
mov
in
or
xchg
push
js
stos
int
jecxz
sub
rcl
pop
xor
mov
mov
push
loop
mov
testb
jne
subl
cli
push
icebp
pop
xchg
subl
cmp
ss
movsb
ret
pop
add
push
push
out
inc
add
sub
sbb
fs
hlt
rol
mov
jle
dec
pop
ds
inc
xchg
push
inc
inc
mov
jo
ret
data16
cmp
in
movsb
mov
dec
sti
add
movsl
dec
jae
in
mov
ds
js
sahf
insl
addb
mov
cwtl
pop
bsf
push
mov
push
mov
push
add
js
mov
xchg
bndstx
lock
sub
jge
jo
daa
sar
sbb
insl
jl
out
push
sub
test
push
popf
repz
aam
clc
adc
rcrb
repnz
adc
mov
mov
cmpsl
xor
mov
mov
fwait
adc
imul
lea
push
enter
in
mov
ja
and
mov
jge
movsl
jns
push
adc
inc
add
and
in
aad
loope
into
or
divb
stc
sub
loope
or
push
ljmp
test
xchg
xor
data16
aam
bound
dec
mov
or
add
movsb
pushf
popl
into
les
sahf
fdivr
jp
fwait
push
fnsave
test
insb
into
bound
mov
inc
imul
pop
cmp
fisubl
aad
icebp
inc
and
les
xor
jmp
daa
adc
push
rolb
inc
push
hlt
adc
popf
adc
fcoml
mov
test
leave
mov
mov
ret
xchg
push
cmpsb
add
data16
ss
roll
jmp
cld
imull
lods
sbb
and
lds
lods
jne
cwtl
out
sbb
xor
jnp
and
push
into
loop
leave
imul
inc
or
dec
or
fcoms
fdivrl
enter
pop
adc
sbb
xorl
xchg
or
pushf
jmp
adc
stos
push
sbb
mov
fidivrl
inc
je
adc
pop
cld
jae
les
jg
jno
inc
sub
jo
push
jecxz
lret
hlt
push
testl
mov
cmpsl
mov
popf
xor
rclb
mov
xchg
hlt
inc
push
pop
mov
sahf
or
imul
inc
push
jecxz
xchg
inc
pop
in
mov
imull
pop
sbb
pushf
or
mov
lcall
sub
aaa
rorl
dec
data16
daa
push
inc
pop
inc
lahf
xor
aad
fldenv
ja
mov
fisubrl
es
insb
or
ss
arpl
or
shlb
push
mov
mov
notb
out
hlt
dec
lods
xlat
inc
dec
out
sub
fisubrs
sbb
cmp
sbb
jne
stos
lea
inc
test
aaa
mov
ror
jecxz
popf
test
sub
push
sub
das
jecxz
mov
and
outsl
jo
xchg
push
pusha
xchg
lcall
pop
loope
lods
xchg
jne
and
outsb
sbb
lret
sub
xor
out
jbe
call
push
jmp
push
in
popl
jmp
and
stos
insb
out
mov
cld
push
xor
or
out
add
movsl
leave
xchg
jecxz
mov
int3
fisubrl
jecxz
xchg
jbe
fldl
movb
push
push
mov
leave
lods
pop
push
ret
sub
or
jge
cwtl
fisttpll
outsl
cmpsl
loop
xor
push
cmc
xchg
cmpsl
popf
xchg
pop
idivl
jmp
outsl
and
mov
mov
jne
sub
mov
jecxz
lret
mov
rcrb
leave
push
add
pop
lret
shrb
es
pop
push
cmpl
imul
inc
cli
jl
add
push
mov
dec
jb
scas
xor
enter
call
pop
lock
pop
lods
push
sarl
and
mov
cmp
jg
adc
or
mov
add
jb
aaa
in
ficoms
mov
mov
out
mov
in
std
jl
rcrb
lea
loope
cmp
aad
xor
lcall
repz
sbb
rcll
sub
inc
jl
sub
push
and
add
xchg
in
xchg
xchg
outsl
cmp
jae
jb
mov
loop
xchg
mov
mov
adc
push
leave
jbe
sub
xchg
add
gs
in
or
mov
cmp
sbb
or
pop
sbb
xchg
inc
xchg
push
call
mov
fs
jno
push
inc
pop
lret
lret
sbb
inc
mov
jne
hlt
sbb
int3
sub
orl
stos
sbb
out
andl
mov
dec
clc
jge
shll
mov
dec
jnp
or
jns
fisubrl
inc
and
call
jmp
xlat
push
clc
test
lea
arpl
xchg
jbe
cmp
ret
pop
cmp
divb
and
and
mov
arpl
das
movsb
xor
faddl
inc
addb
enter
aaa
mull
inc
stos
lcall
std
movsl
jge
idivl
or
loope
enter
inc
imul
sbb
xor
sub
or
sti
cmpb
mov
leave
push
xchg
pushf
popf
push
movsl
hlt
inc
aam
loopne
add
sbb
popa
call
push
ja
pushf
jo
adc
xchg
push
mov
mov
lcall
add
ret
pop
fwait
incl
inc
xlat
sub
xchg
arpl
jne
sahf
sub
inc
and
aas
rorb
mov
cmp
jge
xor
and
ret
lea
dec
aad
addb
xor
or
mov
stos
rol
int3
lcall
inc
and
sub
push
aas
or
adc
neg
iret
mov
outsb
clc
stos
inc
sub
xchg
push
cmp
jns
test
xor
outsb
xor
lret
into
xlat
leave
add
xchg
mov
inc
call
imul
test
ljmp
push
push
lods
addl
in
scas
mov
xchg
call
fsubrp
std
pop
mov
lret
jae
out
fldcw
mov
push
icebp
push
or
fcmovb
sub
xchg
lock
fisttps
pop
inc
mov
scas
xor
push
and
push
icebp
int3
mov
negl
std
sbb
mov
hlt
jae
inc
ds
iret
test
sub
sub
addr16
sbb
mov
fistps
mov
stc
fnstcw
inc
test
inc
mov
in
cmpb
inc
fnstenv
adc
pop
cmp
sahf
dec
mov
xor
pushf
out
enter
adc
sub
imul
andl
jbe
loopne
ljmp
mov
cmp
test
adcb
into
xor
pop
dec
sub
mov
mov
scas
call
jnp
pop
pop
dec
add
pop
ljmp
js
aad
aad
or
push
sbb
je
sub
sub
and
xchg
cli
push
fidivrl
inc
mov
sbb
jae
or
jecxz
in
imulb
mov
push
xorb
and
loopne
push
mov
std
push
pop
add
imul
in
mov
adc
inc
arpl
test
ret
insl
cmp
jne
mov
ja
adc
lods
jle
push
cmp
mov
out
notb
push
test
or
cmpsl
dec
cmp
jne
dec
mov
inc
rorb
add
cmpb
out
mov
mov
sub
sub
dec
mov
inc
jl
xlat
fbstp
in
mov
aas
lds
and
std
flds
clc
dec
mov
xor
jns
fwait
je
cmc
cmp
cwtl
outsb
cmp
mov
inc
es
push
imul
xlat
or
mov
in
adc
leave
cli
lahf
lods
repz
pop
shrb
and
hlt
xchg
ror
or
fnsave
mov
leave
pop
jp
pop
push
subl
xchg
push
int
sub
inc
cmp
add
iret
or
jbe
pop
fst
bnd
push
cs
rorl
ds
les
arpl
jecxz
sarl
call
cmp
loope
hlt
idivl
sahf
dec
ljmp
cmpsl
hlt
mov
push
or
imul
cltd
ss
mov
loop
cmp
pusha
xor
jns
test
jg
cs
xchg
jbe
cmp
nop
cmpsb
cmp
pop
into
imul
mov
icebp
ja
sbb
imul
xchg
movsb
push
dec
insl
add
cmp
mov
and
out
rcr
in
ss
pop
jns
xor
cmpsl
adc
jecxz
pop
dec
aas
cmp
adc
loope
dec
stos
test
adc
divl
arpl
fwait
test
push
scas
scas
es
push
lock
push
xchg
movsb
and
xor
outsl
pop
xchg
dec
push
mov
test
jb
jle
adc
ds
xchg
shl
cmp
imul
sub
cmp
lret
dec
js
jno
cmpsl
lods
roll
inc
push
std
out
out
mov
fiaddl
mov
test
adc
mov
adc
pop
je
adc
fs
mov
and
sub
lahf
inc
mov
mov
mov
in
mov
imul
popa
mov
fildll
imul
mov
or
aad
sbb
ds
stos
mov
loop
mov
and
jo
popf
fldt
ljmp
push
mov
not
test
adc
in
mov
jno
mov
push
or
bound
cmpsl
jp
push
iret
in
into
mov
xchg
xchg
push
mov
pop
jmp
imul
xchg
jbe
orl
inc
arpl
pop
pop
jecxz
movsl
xchg
bound
fcoml
inc
add
mov
mov
idiv
mov
fnstenv
lahf
xchg
call
adcl
in
dec
xchg
fld1
clc
shl
cmpsl
minps
loopne
sub
imul
and
mov
mov
outsb
and
lret
mov
xor
into
sub
mov
ljmp
push
clc
dec
xor
ret
sbb
cmp
add
mov
dec
std
or
out
jne
xor
pop
jns
jmp
out
cmp
leave
mov
and
test
fsubrs
sbb
int3
xchg
sub
inc
mov
xor
test
lock
lret
jle
test
fcompl
sahf
shll
mov
scas
rclb
sbb
repnz
outsb
push
cmp
xor
sbb
and
out
jp
mulb
sub
jno
jecxz
lret
pop
jge
or
jo
popf
sbb
jnp
xchg
in
dec
or
mov
cli
in
je
pop
push
sahf
dec
inc
mov
mov
into
inc
cmpsl
out
pop
lahf
cs
leave
pusha
popf
nop
push
mov
pusha
sub
and
pop
stos
loopne
pop
fldcw
or
cmp
jmp
mov
jle
and
ljmp
imul
xchg
ds
cmp
jbe
push
mov
fs
mov
jb
add
adc
faddl
push
xor
or
cltd
xor
push
pushf
aam
mov
xor
add
loop
jno
enter
inc
mov
add
dec
and
fidivrs
and
pushf
aaa
mov
fisubs
out
xchg
mov
push
lds
ret
loopne
mov
or
jmp
outsb
je
pop
xor
lock
push
xchg
or
call
inc
daa
jbe
mov
repnz
dec
jg
cmpsl
mov
lods
sbb
sahf
lea
movsb
popf
pop
aaa
xor
mov
pop
stos
sahf
xchg
jl
aaa
jne
mov
xchg
aad
mov
push
lret
jo
dec
lcall
jecxz
out
out
push
sbb
movsl
movl
xchg
or
pusha
jmp
cmp
jns
xchg
mov
dec
jne
jl
sbb
dec
dec
jl
jb
push
inc
mov
and
mov
enter
fbld
xchg
cmc
pop
or
mov
je
xor
mulb
pop
sbb
mov
mov
test
fadds
imul
fs
and
jno
sbb
sbb
xchg
jns
mov
jle
mov
rcll
jne
xchg
push
sets
sarb
in
or
jbe
sbb
mov
unpckhps
adc
xor
add
sbb
push
movsl
pusha
test
cld
jae
jge
test
mov
ffree
mov
dec
les
xchg
xchg
inc
jb
test
cmpsb
push
testb
movsb
test
jno
ljmp
xchg
mov
adc
pop
or
adc
in
xor
adc
push
frstor
jo
mov
xor
mov
mov
sbb
jg
ds
xor
mov
shrb
in
out
stos
adc
ja
shrl
ljmp
loope
pop
push
xlat
mov
ja
add
into
add
sub
push
data16
mov
mov
in
outsb
adc
pop
ficompl
dec
bound
sahf
mov
mov
es
les
sub
add
adc
push
dec
push
pushf
fdivl
pop
or
cld
stc
in
cld
pop
dec
sarl
es
scas
mov
sub
sbb
mov
test
lea
dec
sbb
fwait
popf
sahf
insl
data16
jge
add
repnz
sbb
sub
int
test
in
outsb
pop
ss
add
push
gs
jmp
cld
mov
mov
xor
jmp
ss
pop
cmp
scas
pop
lret
sub
bound
in
popf
rcl
add
pop
inc
pop
xor
xor
sahf
lods
lods
call
inc
ss
pop
pmaxub
push
push
in
out
je
cmp
clc
push
scas
jb
lock
mov
cmpsb
dec
pop
push
push
adc
movsb
fldt
cltd
pusha
out
sub
lods
or
popa
mov
cmp
pop
pop
adc
inc
cmp
hlt
movsb
lock
jbe
lods
sti
and
cmp
and
jne
adc
sub
mov
push
sti
cmpsb
inc
mov
fdivr
inc
outsl
xchg
fcmovne
mov
addl
and
dec
stos
rcrl
data16
inc
xor
popa
or
jbe
dec
fisubrs
ficomps
movsl
dec
sbb
sub
lret
pop
adc
jne
xor
lret
cs
mov
nop
jno
fmul
sub
jb
jge
call
mov
dec
rcr
roll
or
lock
xor
mov
inc
mov
inc
inc
mov
jmp
imul
sub
cmp
pusha
sbbb
rolb
xor
push
test
insb
dec
fisubrl
das
arpl
and
add
cmpsl
loop
mov
mov
jl
mov
inc
mov
xchg
icebp
dec
add
dec
mov
cmp
mov
add
cmpsl
jns
repnz
lea
xchg
addb
xchg
sbb
bnd
or
loope
cmp
jmp
xor
add
out
shrl
cwtl
ljmp
pop
fs
push
andb
push
mov
push
cmp
loope
in
jno
bound
andl
std
rol
cmpsl
adc
pop
por
das
jne
and
mov
in
sbb
pop
sbb
imul
dec
in
pop
xor
call
inc
loopne
das
aam
outsb
mov
arpl
loopne
sub
jbe
mov
add
mov
aas
stc
cld
cmp
cmpsl
nop
inc
pop
adc
ja
sbb
test
data16
mov
loope
mov
sbb
outsb
push
xchg
test
popa
pop
mov
xchg
cmp
cmp
pop
dec
out
sub
and
pop
cmc
adc
mov
cmp
push
arpl
fs
sub
inc
add
addr16
int
cmp
mov
rcll
or
leave
pop
scas
ret
insb
call
push
es
pusha
mov
test
adc
inc
and
cmp
xor
sarb
in
pop
aad
ficomps
pushf
jns
jecxz
scas
push
fwait
ljmp
movsb
aas
xchg
imul
jmp
adc
mov
out
je
stc
bound
ficoms
xchg
into
push
dec
mov
icebp
popa
and
imul
cmp
test
icebp
push
pusha
xchg
push
xchg
int
aam
cmp
fistpl
cmpsb
js
aas
xlat
and
mov
pop
mov
sub
popa
xchg
enter
lcall
add
pop
xor
rcl
or
daa
stos
sbb
out
jno
aam
mov
jne
lea
inc
lret
or
sbb
xor
push
push
xor
test
repz
imul
mov
adc
or
in
pop
fdivrs
push
leave
rcll
xor
xchg
jno
rorl
mov
mov
push
cmp
mov
pop
cmp
out
inc
cmp
dec
mov
das
xor
mov
mov
adc
cmp
inc
mov
fwait
cmp
ljmp
pop
push
cwtl
sahf
cli
popf
cmp
das
ret
cwtl
adc
hlt
push
hlt
mov
mov
xor
mov
sub
xchg
sti
sbb
not
pop
mov
rcrl
out
in
dec
mov
lret
lock
andb
dec
adc
sbb
aad
scas
fists
outsl
mov
int
fimull
cs
xchg
into
mov
ret
fwait
enter
jle
push
popa
lds
sti
loope
nop
jbe
lock
push
aad
out
sahf
and
and
dec
arpl
mov
in
rcr
mov
mov
jl
lret
dec
ljmp
xchg
repz
mov
aaa
mov
push
sbb
arpl
test
xchg
xlat
lds
clc
ljmp
dec
xor
sub
lahf
clc
mov
sbb
jmp
dec
xchg
mov
lahf
aaa
cli
imull
adc
inc
outsb
flds
jbe
popf
jecxz
js
ljmp
std
aas
dec
push
dec
or
enter
lock
ficomps
push
push
daa
jbe
int3
in
xchg
xchg
fisubs
stos
mov
xor
mov
adc
mov
and
sub
cwtl
adc
jb
and
jge
fwait
jnp
loopne
cmp
jo
arpl
add
int
test
mov
arpl
std
mov
push
addr16
and
call
sbb
mov
mov
lods
lahf
pop
fs
sbbl
and
mov
lcall
or
mov
mov
pusha
dec
mov
adc
rcr
or
imul
cmp
icebp
jno
dec
push
mov
or
or
push
push
push
insb
dec
mov
scas
adc
fisubl
aad
sub
mull
notb
cmp
jo
push
mov
or
jno
aam
dec
xchg
nop
pushf
or
es
fidivrl
test
dec
mov
pop
cli
rcrl
mov
sti
stc
pop
fwait
and
fs
sub
std
mov
fwait
pop
adc
ret
mov
sub
add
imul
pop
push
addl
xor
mov
mov
inc
mov
roll
jmp
andl
jns
cmp
sbbb
and
int3
sbb
bound
or
gs
imul
fldcw
inc
nopl
icebp
add
vpunpcklqdq
bnd
inc
jp
into
orl
push
mulb
inc
adc
mov
push
imul
jecxz
je
loope
call
pop
js
pop
idivb
push
ja
xor
push
jmp
fcompl
mov
push
and
mov
test
or
rolb
mov
insb
mov
orl
pop
add
stos
stos
adc
cltd
nop
and
leave
inc
scas
hlt
loopne
jno
mov
lods
pop
aam
xchg
adc
ret
pop
loop
jecxz
stos
out
stc
jle
fs
inc
gs
add
std
sbb
popf
jp
push
xchg
loop
adc
mov
mov
rcrb
pop
ret
mov
ljmp
inc
sub
sub
jp
test
inc
divl
scas
mov
outsb
mov
gs
addl
lods
inc
inc
in
xchg
loopne
mov
lods
cld
sahf
adc
inc
push
pop
or
jns
lcall
test
pop
stos
lret
or
dec
pushf
mov
inc
sbb
mov
cs
fs
adc
mov
xor
ljmp
sub
adc
in
ret
cmpsb
push
mov
inc
push
push
adc
xor
mov
daa
adc
rol
leave
fidivl
push
stos
rcl
mov
nop
fcoml
pusha
outsl
pop
andb
xchg
pop
xor
aad
push
movsb
mov
xor
mov
repz
add
in
mov
lret
push
cmpsb
hlt
and
out
and
addr16
repz
call
ret
les
movsl
ljmp
fisubs
fs
mov
int3
fwait
cmpsl
xor
aaa
out
add
imul
cwtl
negb
inc
stos
lahf
aad
lods
jle
and
mov
js
cmp
fisubl
enter
sbb
mov
bound
sbb
and
fidivrl
jae
cs
movsb
cmp
push
lcall
lods
jbe
test
notb
xchg
cmpsb
fidivrs
xchg
scas
mov
mov
bound
arpl
enter
lret
loope
xchg
test
xchg
cmc
and
scas
push
outsl
into
pop
fsubrs
ljmp
pop
push
sub
jecxz
test
in
and
das
pop
cmp
les
jns
iret
cmp
test
or
imul
xchg
fimuls
fwait
arpl
out
aaa
inc
inc
out
cmpsl
or
pop
jne
sub
sub
aas
jle
sti
sub
test
in
jo
lods
dec
mov
mov
ljmp
ret
mov
jge
cmc
dec
ds
icebp
xor
adc
aad
in
fistl
sub
fs
lock
cs
fs
xor
outsb
mov
mov
pop
inc
out
ret
pop
movsb
cmc
lret
loop
negl
stos
jno
in
pop
add
lahf
lret
mov
pop
xor
push
hlt
call
or
mov
push
lret
popa
dec
push
pop
lret
fldenv
xlat
xchg
mov
sbb
and
xorb
sarl
pop
inc
js
popf
cs
jge
shlb
out
push
sbb
out
adc
mov
outsb
out
or
enter
adc
inc
xchg
cmp
cld
lea
cmpsl
cmp
mov
jle
fcoml
jl
push
add
cltd
in
cmp
sti
push
hlt
jne
xor
and
stos
pop
movsl
leave
xchg
mov
aam
stc
pop
ror
dec
add
inc
js
shlb
stos
out
adc
rorl
pushf
pop
xlat
xor
sbb
mov
std
movsl
mov
push
sti
lods
jle
bound
mov
movsl
rcll
or
jle
sbb
push
test
dec
cmp
arpl
lahf
sbb
fnstcw
ja
icebp
je
fwait
dec
dec
lret
pop
repz
in
ja
cmp
call
dec
in
pusha
arpl
xor
repnz
jle
mov
lea
in
je
ror
imul
xchg
mov
mov
xor
out
insl
adc
sub
mov
and
rolb
pusha
fwait
push
rcl
stos
sub
and
test
cmpl
jae
movsb
adc
js
or
fucomp
push
pusha
cmpsl
and
jmp
enter
dec
xchg
dec
mov
dec
xchg
mov
test
mov
jl
jg
cmp
cwtl
pop
pop
jg
xchg
fldt
mov
mov
or
inc
xor
dec
outsb
mov
dec
enter
and
mov
push
out
xor
stos
or
fnstsw
pop
push
mov
jns
mov
mov
sub
xlat
dec
imul
mov
add
push
xchg
fs
xor
sbb
jmp
jbe
jo
sbb
shrb
jo
lret
ds
aaa
add
jne
pop
std
mov
in
sbb
test
xor
negb
inc
pop
fmull
sbb
sbb
xchg
dec
inc
fbstp
add
pminub
das
fwait
arpl
mov
rcrb
mov
jecxz
push
or
cmp
inc
fs
jecxz
mov
cli
les
pop
inc
cs
test
pop
lcall
ja
and
roll
pop
jns
xchg
std
mov
sahf
clc
fists
aaa
jle
mov
rol
aas
xor
es
push
xor
sub
int
arpl
lret
fcomps
mull
sbb
daa
out
jbe
lcall
hlt
sbb
mov
add
dec
cld
push
outsl
pop
dec
adc
mov
in
in
xchg
jnp
ret
inc
cmp
cmp
aam
gs
inc
or
std
mov
pop
and
xor
test
das
xchg
push
xor
lds
pop
adc
and
mov
mov
dec
lock
inc
pushf
sub
pop
aas
loop
xchg
adc
lret
pop
pop
push
cmpsb
mov
xchg
cmpsb
adc
sbb
dec
cmc
add
divl
jbe
add
fmull
pop
aam
dec
ljmp
fistpl
insl
sbb
das
push
cmc
add
repnz
testl
test
das
fsub
nop
sbb
jmp
add
int3
enter
push
test
bound
pop
scas
sub
adc
xor
jb
inc
mov
ja
or
rorl
pop
scas
inc
and
insl
imul
cmp
js
sti
loope
jecxz
int3
jb
dec
push
insb
loopne
dec
xor
test
sub
rol
movsb
jo
and
inc
xchg
negb
pop
lds
push
ss
out
ja
or
xchg
mov
lods
cmp
stos
clc
mov
and
sti
mov
out
scas
mov
inc
ret
loop
cmpsl
inc
movsl
jnp
or
dec
imul
nop
ret
hlt
adc
ficoms
sbb
add
pop
in
and
dec
sbb
fwait
cmp
mov
sub
mov
push
mov
fistps
rolb
mov
xor
push
fiaddl
dec
bound
scas
add
stc
sbb
test
dec
jle
insl
movsl
sahf
sahf
stos
outsb
mov
pop
repz
movsb
sub
ja
xchg
fwait
pop
push
rcll
mov
xchg
sbb
shr
sbb
xchg
les
lods
stos
mov
push
sub
jne
loop
ja
ds
mov
inc
sub
pop
pusha
shlb
insb
or
mov
inc
mov
test
push
mov
sub
repnz
ss
dec
les
and
andnps
ret
add
mov
dec
mov
cmp
and
xor
and
inc
aas
sub
sbb
mov
clc
loopne
pop
outsl
das
dec
lock
fsubrp
xor
mov
out
fwait
icebp
sti
mov
jo
sub
sbb
aam
push
sbb
and
stc
mov
mov
mov
iret
dec
movsl
or
imul
adc
and
xor
jae
icebp
out
insl
int
mov
cwtl
pusha
add
xor
adc
pop
scas
inc
sbb
inc
int
pop
dec
xchg
fninit
inc
cmp
mov
test
xorb
xor
lret
out
push
lret
cmp
mulb
xchg
arpl
outsl
sti
xchg
push
movsl
stos
js
push
js
mov
testl
push
addr16
jae
hlt
xchg
int3
inc
repz
enter
fbstp
popf
lds
and
stos
insb
lea
pusha
andb
lret
sub
mov
or
idivb
mov
xchg
into
push
pop
shlb
arpl
add
stos
in
adc
jl
addr16
out
icebp
inc
cmpsb
repz
test
mov
mov
sbb
add
lock
sahf
mov
sbb
nop
pop
cmp
out
fnstsw
jecxz
loopne
es
rol
mov
cmp
scas
xchg
and
test
sub
jg
pop
push
push
sbb
cli
dec
fldt
xlat
sbb
int3
or
mov
inc
out
and
cmp
sbb
mov
js
pushf
lods
sub
xchg
adc
das
lret
pop
mov
cwtl
cmp
and
cmpsl
dec
out
cmp
cmp
pop
mov
outsb
jecxz
xchg
inc
add
stc
xchg
jb
out
fdivrl
jno
adc
inc
cmpb
push
jo
mov
inc
movsb
mov
jg
add
jns
push
int3
mov
repz
ljmp
aas
test
pop
cwtl
js
sub
stc
rorl
ror
std
mov
or
mov
xor
pop
gs
movsb
lds
mov
pop
fsubrl
jb
arpl
mov
daa
sub
loope
and
loope
cmpsb
pushl
lcall
mov
ficoms
push
mov
int
jle
int3
mov
pop
dec
bound
cmpl
xor
jns
pop
pop
add
call
rcrb
ds
inc
mov
jle
cmp
loope
subb
imul
imul
sbb
pop
adc
sar
inc
xchg
nop
push
fcompl
or
lcall
imul
sbbb
into
nop
stos
mov
scas
cmp
mov
mov
insb
call
mov
cmpsb
test
out
dec
cmovns
push
insb
aam
sub
push
push
sbb
sbb
jnp
je
sar
mov
mov
imul
mov
sbb
fdivl
sbb
test
sahf
and
push
dec
push
in
lods
or
mov
int
lods
fdivs
icebp
add
xchg
ret
inc
mov
push
xchg
movsl
test
rcr
lock
lods
xor
jns
mov
mov
test
push
nop
lods
out
out
cli
or
sbb
scas
in
dec
fsubp
mov
cli
jecxz
imul
packsswb
add
mov
mov
mov
push
sbb
aaa
xchg
dec
inc
shl
adc
jmp
mov
jno
movsb
idivb
mov
add
push
lds
outsl
xchg
jo
test
ret
shll
jl
inc
in
sub
add
int
mov
jp
iret
testb
mov
or
inc
and
movl
xchg
fstps
xchg
sub
loop
push
sub
mov
cs
sti
outsl
xchg
xor
dec
cmp
and
pop
popa
nop
loopne
popf
fistps
icebp
adc
add
mov
cltd
adc
mov
je
xchg
aad
mov
insb
jecxz
push
mov
or
sbb
jl
sbb
mov
sub
jb
scas
scas
aaa
fbstp
mov
xchg
cmp
stos
jb
call
sub
ja
cmpl
fistl
ss
roll
add
fimuls
mov
test
dec
lods
push
cmp
xor
add
jecxz
push
aaa
ja
pushl
pop
mull
iret
push
push
push
rcll
sub
mov
stos
lds
scas
xchg
test
dec
loop
ja
xchg
repnz
xchg
sbb
xchg
mov
jp
iret
pop
mov
mov
lods
stc
mov
clc
dec
test
pop
jmp
xchg
and
mov
loopne
inc
icebp
loope
test
jb
xchg
sbb
mov
jb
outsl
xchg
xchg
orl
xchg
push
mov
flds
ljmp
mov
jb
pushf
cwtl
xlat
cmp
mov
add
out
push
cmpb
mov
call
or
mov
pop
mov
outsb
rcrb
mov
xchg
push
icebp
arpl
push
iret
and
cmpsb
mov
push
adc
es
xor
dec
bound
inc
in
add
add
fistps
outsb
or
pop
sub
fsubl
imull
and
sbb
xor
and
pusha
sti
xchg
inc
shll
jle
mov
rolb
les
in
or
inc
daa
mov
movsb
jns
or
out
push
pop
xor
xchg
mov
lcall
or
cmp
outsl
mov
insl
inc
ds
lds
lods
sahf
and
cwtl
or
add
inc
pop
cmp
sarb
hlt
cmp
push
and
out
push
ljmp
jnp
jmp
lahf
xlat
inc
aaa
sub
push
push
sub
shl
outsb
cs
xchg
sub
clc
cli
test
jmp
inc
dec
adc
mov
orl
inc
lcall
or
cmpsl
add
movsl
jecxz
lods
icebp
xor
push
pop
and
sub
xor
mov
cmp
adc
in
fnstcw
stc
mov
dec
fwait
sbb
add
mov
mov
mov
xor
mov
test
out
into
cmp
movsl
cmp
or
mov
xor
mov
subb
jo
dec
cltd
int
add
out
shrl
popa
xchg
and
dec
repnz
lea
mov
mov
mov
add
clc
pop
or
jns
test
in
clc
popa
jnp
adc
lahf
mov
dec
je
ja
fdivs
mov
cmp
jne
xor
pusha
mov
pusha
loop
aaa
iret
dec
ret
stos
mov
popa
std
xchg
mov
orl
aam
push
xchg
lea
mov
add
mov
out
cmpsl
sub
test
xor
xor
in
sub
cmc
sbb
mov
mov
mov
ret
mov
add
ss
sbb
js
push
adc
or
jg
and
push
fdivl
aas
insb
inc
sbb
ss
scas
push
ds
iret
out
or
and
or
pop
cmpsb
sub
in
inc
xchg
xor
aaa
adc
dec
jae
sub
iret
sub
repnz
test
mov
xchg
inc
insl
mov
mov
mov
mov
push
cli
cmpsb
dec
fstl
xor
loope
xor
sbb
sub
das
jne
fstpl
in
out
xchg
cs
mov
pushf
xchg
and
outsb
pop
mov
aas
pop
xlat
fistl
push
aad
inc
sbb
mov
out
push
sub
push
cmp
aas
stos
inc
push
or
lahf
scas
xor
arpl
rcr
mov
inc
inc
cmp
lahf
mov
insl
popa
adc
cmc
leave
fsts
jne
or
jmp
mov
xchg
in
repnz
cld
mov
out
dec
imul
out
xchg
dec
mov
mov
push
repz
shrb
aas
shrb
mov
xor
dec
sub
xchg
mov
mov
xchg
mov
jg
imulb
jb
mov
icebp
lahf
ss
cmpsb
test
mov
lret
loope
and
movsb
xor
pop
fwait
add
mov
mov
mov
lds
ja
sbb
xchg
popf
cltd
dec
loopne
or
decb
inc
sar
sub
sub
aas
adc
xchg
out
push
mov
cmpsb
jmp
push
scas
mov
rorb
lret
pop
xor
lret
loope
aaa
daa
xlat
imul
loopne
sub
jo
imul
loopne
aad
xchg
add
jp
popf
leave
scas
xor
out
mov
enter
inc
test
fs
iret
push
dec
in
xor
mov
adc
mov
mov
mov
fstl
sub
sbbb
mov
add
sub
jecxz
pop
popa
sub
add
loop
inc
scas
and
dec
cmp
sti
in
mov
sub
push
or
mov
movb
xor
xchg
dec
adc
sub
cmpsb
fstps
mov
dec
ret
or
scas
jo
ret
cli
pop
mov
loopne
jecxz
push
mov
and
xor
add
sahf
ljmp
movsl
pop
push
es
push
and
jg
in
push
aad
jae
aaa
xchg
add
cmc
xor
push
xchg
adc
add
and
pop
inc
rcll
pop
frstor
push
sarb
out
ret
mov
mov
sub
adc
fwait
dec
dec
sarl
jno
push
push
rcr
test
sub
push
xor
nop
call
cmp
inc
adc
xchg
jge
fmull
in
xor
xor
jle
test
mov
pop
jmp
mov
popf
jmp
aad
mov
ret
lret
cmp
icebp
int3
repnz
xlat
lea
nop
adc
xor
xchg
imul
dec
shrl
push
pushf
popf
rcrb
test
repnz
push
mov
or
lret
pop
xchg
cld
jbe
push
rcrl
push
inc
out
push
outsb
icebp
mov
shrb
sarb
push
xor
add
dec
std
lea
xchg
std
lcall
sbb
imul
xorb
ss
add
or
roll
push
mov
aam
sbb
out
lea
movsl
subb
and
test
inc
jno
pop
push
mov
shll
fmulp
fcoms
sub
lods
popf
jb
sbbl
out
mov
cmp
push
repnz
adc
sbbb
lret
cltd
ljmp
dec
xchg
sub
and
aam
inc
mov
inc
mov
cmp
mov
lret
jnp,pn
pop
or
rcrl
sahf
repz
or
sub
and
pop
mov
push
mov
jge
jecxz
inc
or
int
sbbl
lds
xor
mov
test
cmpsb
pop
mov
mov
into
int3
outsl
sbb
pop
int
pusha
adc
sub
imul
adc
sub
rcll
mov
mov
movsb
lds
cltd
cmp
or
ds
in
mov
test
loope
jle
dec
pop
jmp
in
cmp
and
testl
push
xor
mov
pop
subl
les
pop
xor
ficomps
pop
fs
ja
arpl
rclb
js
adc
fisubs
dec
inc
daa
icebp
mov
mov
xchg
leave
sub
inc
mov
lds
movsl
mov
test
imul
cs
outsl
pop
and
enter
sub
out
loope
sub
mov
pop
xchg
mov
pop
add
jp
inc
adc
push
or
adc
lret
add
jo
cwtl
shll
mov
jns,pn
mov
cmpsl
mov
test
dec
insl
imul
jmp
test
xchg
jg
mov
cmp
and
fildll
cmp
adc
mov
ja
sub
cld
adc
test
mov
fdivl
scas
mov
fistpll
inc
pop
adc
and
push
cltd
insl
outsl
mov
xor
gs
cld
lea
imul
scas
and
push
in
lods
leave
iret
test
mov
lock
push
jno
cmpsb
adc
and
pop
sti
cmpsb
pop
andb
push
xchg
add
bound
pop
daa
idiv
adc
mov
shll
add
enter
pop
add
or
pop
xchg
lahf
loope
xchg
or
inc
in
in
stos
popf
fsts
aad
pop
daa
and
push
in
inc
cmp
sbbl
mov
dec
fstpl
popa
adc
cwtl
push
in
inc
push
mov
out
and
and
and
aaa
fisubrl
mov
pop
mulb
das
rcl
int3
or
cmp
push
jnp
mov
pop
mov
pop
mov
into
shrb
pop
insl
mov
jg
cmc
xchg
cmpsl
or
add
cmp
push
jecxz
test
mov
and
sahf
les
pushf
sub
lock
fucom
pop
repz
or
and
scas
xor
mov
push
xchg
movsb
dec
lods
xor
movsl
rol
nop
sti
push
sub
push
or
movsb
pop
fldcw
sbb
mov
add
pop
in
or
outsb
das
cmpsb
dec
clc
fwait
pop
pop
mov
adc
loop
jecxz
fwait
xchg
fwait
rcrl
cmc
mov
xchg
pop
mov
aas
adc
fdivs
test
mov
repnz
inc
inc
enter
lahf
outsl
stos
add
hlt
cmp
lret
adc
in
outsl
dec
icebp
test
jo
adc
push
cmpb
inc
xchg
push
mov
cmc
es
push
and
iret
mov
cltd
mov
cmp
stos
push
pop
sbb
cli
sbb
gs
jecxz
add
mov
push
mov
cwtl
lcall
fidivl
lds
add
jb
sahf
push
movsl
pop
mov
scas
inc
fdivr
sti
imul
mov
xchg
xor
adc
sub
insb
push
push
loope
lea
mov
std
push
xchg
leave
inc
notb
adc
xchg
enter
cmp
xor
cwtl
push
je
sub
cmp
icebp
aaa
mov
or
xor
xchg
call
add
xor
and
sub
sbbb
mov
cmp
mov
jecxz
jmp
movsl
xchg
lock
ja
or
nop
sub
decl
enter
push
push
popa
ficoml
fcompl
xor
or
xor
mov
cmp
cwtl
jg
shlb
adc
out
xchg
xchg
adc
mov
fcompl
sbb
popf
test
inc
jp
inc
xor
sub
add
ss
mov
push
or
mov
scas
cmp
jmp
stc
lcall
scas
inc
xchg
addr16
or
add
jle
ds
jne
out
xchg
hlt
jp
lea
sbb
cmc
pand
stc
repnz
outsb
pop
adc
xchg
jno
je
int3
push
or
shlb
cmpsb
jnp
js
jns
data16
out
adc
loope
test
rol
iret
fildl
scas
add
iret
mov
or
popa
jns
int
jmp
imul
fmuls
pop
jns
imul
or
xor
out
and
mov
call
aas
fs
pop
sbb
adc
movsl
nop
cmp
pop
mov
sub
test
jns
test
icebp
push
ret
xor
mov
test
push
push
lods
rep
incl
insl
xchg
mov
xor
push
mov
push
mov
test
roll
loop
mov
xchg
xor
sbb
mov
icebp
dec
ss
push
int3
pop
aad
inc
inc
add
sub
mov
outsb
xchg
les
dec
mov
sub
mov
inc
pop
mov
sbb
inc
sub
dec
and
mov
and
into
pop
inc
xchg
sti
popa
leave
out
push
pop
mov
repz
negb
fcompl
bound
mov
push
je
xchg
shll
push
jmp
stos
pop
sub
jae
rcll
sahf
cmpsb
gs
xor
adc
lret
stos
sub
jle
xchg
sub
xor
mov
in
adc
push
fistl
mov
mov
pop
xor
loope
push
in
lret
mov
leave
push
cmp
pushf
mul
xchg
mov
mov
dec
out
testl
arpl
jecxz
add
add
sub
or
in
cmp
psrad
xchg
push
das
test
repz
insl
mov
sbb
fcmovnu
add
jns
movl
scas
cmp
out
int
js
adc
xlat
adc
lock
dec
pop
cmp
inc
jg
mov
push
adcb
mov
dec
jnp
sub
mov
jmp
out
sub
out
test
test
faddl
mov
sarl
mov
fsubrs
mov
popa
fsubl
fs
adc
cmp
fldenv
pop
mov
xchg
sbb
pop
je
das
js
loope
mov
movsl
sarb
adc
test
mov
xlat
lds
stos
jbe
jl
scas
ret
mov
ret
inc
hlt
dec
icebp
mov
cmp
xchg
jp
into
xchg
xchg
cltd
dec
scas
movups
pop
inc
icebp
lock
fsubp
rcrb
dec
mov
testl
stc
mov
or
xabort
jnp
cmp
cli
pop
dec
pop
push
inc
repz
xchg
or
mov
mov
mov
rolb
in
shl
aaa
daa
pop
les
add
leave
mov
xlat
fiadds
xlat
xchg
loope
jmp
lcall
incl
loope
aas
xlat
cmp
lret
mov
stos
or
out
mov
int3
add
xchg
push
cmp
xor
xor
inc
cmp
jo
testb
xchg
fsubr
mov
jnp
pop
mov
mov
ja
lret
cld
ret
enter
push
gs
ret
aaa
add
xor
mov
gs
daa
insl
out
mov
pop
mov
imul
aas
gs
int3
dec
in
subl
subl
push
or
jmp
call
sti
lret
fiadds
call
loop
test
mov
leave
jne
dec
jnp
or
addr16
ja
in
sub
lds
cmpsl
inc
mov
inc
nop
push
sub
daa
aas
pushf
lock
into
stos
das
sbb
inc
add
sbb
je
ret
addb
out
xchg
imul
mov
jns
mov
iret
fcmovnu
push
xor
pusha
adc
jbe
lret
mov
popf
sar
mov
pusha
inc
stos
insl
cmp
fbld
sbb
jge
addr16
aam
cmp
sub
fldenv
lret
subl
sbbb
or
push
test
in
fsubs
push
pusha
insb
pop
sub
xchg
xchg
loope
les
fisttpl
pop
sbb
pop
sub
mov
aam
and
jle
aad
popa
cmpsl
lock
leave
sbb
pop
mov
lret
push
sahf
jp
add
lret
pop
pop
inc
or
test
inc
dec
mov
push
sub
cmp
rcll
xor
out
out
test
or
pop
xor
loop
mov
subps
adc
push
jno
jle
sub
stos
mov
scas
daa
fsubs
pushf
in
cmpsb
and
out
bound
cmp
push
outsb
dec
push
push
mov
roll
mov
mov
insl
push
daa
test
pop
divl
test
jl
lcall
test
dec
pop
pop
imul
gs
xor
push
pop
mov
push
loopne
fadds
and
pop
adc
jne
fcompl
and
repz
pusha
andl
mov
cld
dec
inc
sub
ds
shr
inc
clc
push
or
add
mov
pop
sbb
mov
add
out
mov
xlat
popa
int
icebp
pop
fucom
call
inc
mov
pop
xchg
push
mov
mov
pop
orl
or
lock
push
call
xchg
je
mov
aaa
leave
inc
xor
lcall
imul
sbb
mov
dec
insl
mov
pop
arpl
xor
cmpsl
stos
mov
sahf
andb
js
sub
ret
shl
bound
add
adc
cmp
sub
rcrl
push
and
fcoms
adc
cwtl
idivl
xlat
add
inc
ret
and
pop
in
push
jle
cmp
addr16
mov
ds
ja
andl
or
mov
cmc
addr16
sbb
jns
cmp
mov
jno
fiaddl
imul
xchg
cmp
pop
dec
xor
int3
xor
push
mov
push
stc
out
test
sub
nop
push
fnstenv
mov
lahf
fwait
cltd
clc
sbb
adc
bound
lcall
lock
pop
mov
mov
js
scas
mov
aam
arpl
les
and
ret
popf
ds
mov
in
mov
dec
cwtl
pusha
lret
mov
loop
cmp
xchg
push
lds
lret
inc
imul
mov
xor
jnp
outsl
popa
push
xchg
sub
jno
mov
push
iret
pop
push
add
call
scas
mov
roll
mov
inc
mov
mov
dec
pop
subb
js
jnp
inc
mov
fcmovb
sub
lods
push
aad
mov
rorl
lods
adc
call
pop
repz
icebp
fcomip
mov
inc
dec
jp
sbb
popf
scas
insl
out
jecxz
mov
gs
lcall
neg
in
movsl
sub
xchg
adc
repz
sub
push
cmpsl
mov
repz
push
adc
insb
mov
daa
adc
outsb
shlb
inc
stos
fidivrl
jnp
outsl
out
mov
fcmovne
push
pop
loop
js
lret
jne
xor
imul
cmp
jecxz
out
arpl
cwtl
aaa
add
and
in
sbb
and
div
push
pop
jno
pushf
das
mov
rorb
inc
dec
sar
push
push
cli
iret
mov
outsl
leave
jo
lret
sbb
roll
into
push
inc
aad
and
inc
testl
daa
sub
xor
inc
push
cmp
add
add
jbe
mov
pusha
adc
and
pop
pop
stos
outsl
clts
scas
push
and
jecxz
lods
icebp
xor
xchg
and
xor
jnp
mov
push
ljmp
inc
cli
out
and
xor
sub
dec
inc
push
addr16
in
clc
xor
adc
out
cmp
arpl
or
lahf
jle
not
jle
inc
stos
dec
cmp
sub
sbb
push
es
repz
xlat
dec
xor
cli
add
cmp
stos
in
push
sub
push
cmp
fs
push
je
cmp
je,pt
lea
iret
repnz
lahf
jp
fnstenv
in
dec
mov
xchg
mov
push
lea
jmp
add
jl
push
out
add
fbld
loope
push
or
stos
mov
in
mov
mov
mov
das
sub
lret
lock
in
or
fdivs
cmp
mov
pop
stos
faddp
and
js
mov
cmp
adc
jmp
mov
pop
lods
mov
sbb
push
jp
arpl
push
mov
mov
cmp
scas
in
and
sahf
fs
push
cmpsl
adc
int3
test
inc
in
lcall
imul
xchg
dec
or
cmc
rcll
push
call
inc
sbb
sbb
xchg
popf
push
test
mov
cmp
adc
nop
pop
sti
mov
jnp
dec
lret
and
mov
add
pop
mov
test
adc
fwait
notl
pop
mov
push
mov
fs
inc
mov
pusha
imul
in
sbb
stc
test
daa
cmp
or
pushf
iret
cld
cmp
sbb
fidivrl
adc
ljmp
add
in
xchg
push
lock
or
mov
mov
jmp
fsubrp
sbb
in
xor
loop
stos
cltd
lea
aam
imul
test
cld
dec
cmpsb
push
cmpb
and
and
loop
add
in
lret
decb
outsl
or
lods
daa
repnz
jp
xchg
scas
dec
je
cmpsl
movsl
xchg
repz
push
aad
pop
push
cwtl
mov
or
fucomp
jne
push
push
aad
dec
or
jge
jmp
push
inc
loopne
dec
add
repz
shlb
ret
lahf
lods
pop
xchg
aam
cmp
xchg
add
xor
enter
test
dec
jl
pop
aaa
mov
mov
xchg
and
in
test
bound
inc
sbb
rcrb
aaa
jge
xchg
dec
cs
xor
int3
imul
push
and
cwtl
mov
sbb
mov
hlt
bound
xchg
dec
jnp
mov
add
xchg
mov
sub
sbb
sub
inc
push
fcoms
or
and
pop
mov
add
mov
inc
jbe
cmp
mov
xor
stos
rcll
and
sub
ror
xchg
mov
add
cwtl
ja
outsl
mov
inc
fdivrp
outsb
sahf
push
hlt
loop
sar
inc
lock
cltd
aad
jmp
jb
stc
xlat
mov
and
or
xchg
aam
jge
rcr
je
cwtl
lret
cwtl
mov
std
jb
pop
dec
dec
loope
scas
and
mov
imul
xchg
sub
add
hlt
aad
inc
loope
add
aad
adc
jb
xor
mov
add
sbb
into
shll
outsl
outsb
in
jge
ss
bound
int3
mov
rep
mov
sbb
insb
mov
clc
jo
sahf
fwait
testl
mov
xor
push
stos
das
pusha
fistpll
js
sub
out
roll
fstpl
loopne
mov
movb
cltd
dec
sahf
scas
adc
orl
movsb
pop
push
jmp
aas
and
fxch
adc
inc
movb
dec
ret
dec
orl
mov
mov
scas
cmpsb
jae
push
outsw
mov
mov
stc
int3
dec
add
mov
aad
sub
inc
aam
fs
jle
lret
mov
jl
and
cmp
movsl
in
fisttps
mov
mov
scas
xchg
sub
out
test
and
fwait
nop
inc
repz
sub
add
jmp
xor
imul
xchg
jo
push
test
aad
mov
cmpsl
inc
xchg
ja
and
xchg
shl
shrl
mov
mov
leave
imul
inc
test
test
pop
sbb
pop
in
push
mov
add
lahf
subl
call
aad
sub
mov
movsb
ljmp
aaa
or
lea
cmp
test
stc
repnz
and
inc
mov
ror
in
scas
sbb
sub
mov
adc
xor
rclb
cmp
jns
into
cmpsl
push
stc
or
xchg
sti
xchg
sub
mov
inc
xlat
jns
xchg
inc
mov
and
ja
fwait
inc
lret
add
int3
add
out
jl
jne
pop
push
or
inc
sbb
frstor
sbb
addr16
xchg
out
bound
iret
pushf
lcall
fucomip
test
cmp
imul
push
cmovne
inc
push
mov
lods
push
ds
jmp
push
or
cld
sbb
dec
ja
mov
cmpb
cmp
inc
add
pop
pop
jle
or
leave
dec
sbb
dec
out
or
add
test
jno
mov
mov
push
xchg
adc
add
sbb
mov
rorl
jecxz,pt
imul
dec
sub
popa
shrl
repnz
add
mov
aas
jb
sbb
pop
and
shrl
push
scas
sub
lods
adc
mov
inc
pusha
cld
cmpsl
xlat
leave
adc
mov
sarb
ret
andb
dec
ss
push
paddw
js
daa
dec
cmp
lods
xor
jbe
inc
scas
loopne
lahf
test
shlb
cmp
int3
xchg
add
xorl
imul
jnp
jle
adc
push
es
hlt
adc
dec
lds
lret
scas
jle
aam
dec
cwtl
movsb
add
leave
test
sbb
gs
and
lods
clc
pop
xchg
sub
add
fmull
imul
ljmp
jne
add
ds
cmc
stc
int
cmc
shrl
sub
mov
cmp
fstl
test
mov
icebp
mov
scas
loopne
dec
inc
lret
pop
in
shrd
xchg
nop
xor
nop
jp
or
jl
mov
call
out
fwait
cs
mov
sub
enter
xor
imul
dec
nop
pop
cmp
sbb
mov
loop
mov
stc
cld
fisttpl
out
jecxz
call
jl
orb
out
fs
adc
jmp
and
push
rcr
push
add
xchg
outsl
icebp
mov
xor
add
inc
xchg
pop
repz
into
idivb
dec
push
pop
push
xchg
push
sbbl
jbe
xchg
mov
pop
jp
xor
mov
js
and
out
jg
xor
fucomip
js
mov
push
mov
lea
cltd
mul
mov
popf
cmp
push
shrb
or
cmp
mov
sub
push
add
jo
stos
fwait
rcll
loop
xor
data16
mov
add
dec
mov
jmp
jge
jbe
xchg
fldenv
pop
mov
out
ror
xchg
jae
js
sub
fcom
out
movsb
sti
dec
adc
or
jl
mov
cmp
or
mov
sub
mov
sub
hlt
jb
add
xchg
xchg
mov
push
and
lea
cmpsl
and
subl
mov
push
sbb
ljmp
inc
js
push
rcl
test
cmpsl
adc
jne
addr16
les
cld
lcall
jbe
inc
jle
js
xlat
negb
fstpt
push
and
bound
and
arpl
ret
addr16
mov
inc
hlt
in
pop
repnz
sbb
inc
cltd
inc
pop
xchg
lret
loopne
mov
and
orl
mov
inc
out
stc
lcall
dec
insb
sbb
mov
and
cmp
fmul
or
cli
cmp
scas
jno
arpl
lds
cs
mov
popf
xchg
rorl
pop
add
push
push
ret
push
in
fists
inc
leave
jmp
cmp
fsubl
xchg
sub
mov
or
dec
push
push
ljmp
push
add
ret
cmp
cmp
enter
xchg
fdivs
sbb
mov
push
repz
das
lret
mov
lret
insb
lcall
call
fdivs
in
inc
inc
into
scas
int3
mov
popa
or
mov
push
mov
hlt
js
jmp
dec
arpl
lahf
stos
jg
ret
loope
sti
xchg
jbe
jge
xchg
enter
insl
push
sbb
sbb
in
xchg
es
idivl
inc
mov
or
fsubrp
inc
sbb
sub
cmp
pusha
lds
mov
push
jge
pop
lret
xor
mov
sarb
ljmp
mov
cmp
test
mov
adc
and
lret
xor
mov
cmp
mov
jl
xor
popf
mov
dec
dec
test
je
es
xchg
cli
out
push
xor
int3
sbb
xor
sbb
add
inc
xchg
movsb
pusha
fbstp
repnz
lds
or
mov
fistps
adc
mov
push
lcall
pop
pop
sbb
mov
and
outsb
je
jmp
out
and
xor
mov
aaa
aaa
pop
add
cwtl
pop
sub
stos
fwait
cmp
and
jg
gs
mov
scas
and
fildll
cmc
fbld
ds
clc
xchg
cmp
mov
and
scas
int3
stos
mov
sarw
adc
cmc
dec
xor
popf
mov
sub
mov
xchg
pop
xor
ret
sar
aam
jne
mov
xchg
dec
mov
push
jp
cs
pop
and
or
mov
or
dec
shl
insb
mov
negb
sub
jno
sti
data16
adc
icebp
mov
xchg
mov
insb
leave
jge
mov
call
jae
call
jle
xchg
cmp
stc
ljmp
ljmp
inc
nop
sbb
fsubl
insl
mov
into
mov
test
sbbl
aas
sub
sbb
jb
lcall
mov
lods
cld
push
jne
inc
sbb
arpl
xlat
mov
cmpsl
cltd
dec
aad
pop
jno
add
out
pop
test
mov
pop
outsb
and
push
addr16
add
clc
cmpsl
repnz
xchg
mov
fcmovbe
sub
push
outsb
shrb
inc
aad
rcrb
cmpsl
fdivrl
xchg
rcll
mov
xor
dec
mov
shrb
test
dec
int
xor
adc
ficoml
hlt
xor
add
cmp
into
push
ret
mov
xor
bound
push
sbb
jnp
pushf
icebp
push
push
add
mov
out
xchg
out
mov
rclb
es
imul
cmpsb
mov
movsl
clc
lods
jl
aam
push
ja
pop
aas
xchg
out
push
fidivs
cmp
out
fildl
lock
push
sti
jge
std
mov
xor
or
and
xchg
popf
sbb
mov
sub
aad
inc
dec
stos
in
lods
ljmp
into
lret
mov
jb
adc
sbb
mov
jl
test
sbb
ret
xchg
popf
jae
jns
push
faddp
rcll
mov
loop
dec
lds
es
jmp
insl
int
jno
pop
cli
xchg
add
inc
or
bound
mull
loopne
cmp
jo
dec
inc
jno
mov
cmpsl
divl
push
and
sbb
cmp
sbb
into
into
lock
addl
inc
repz
roll
dec
out
and
xchg
pushf
cmp
push
push
repz
imull
scas
in
clc
xor
in
dec
mov
push
lahf
inc
shll
int
lods
lock
inc
nop
in
mov
adc
dec
pusha
lcall
push
enter
push
adc
test
push
mov
push
andl
pop
lahf
xchg
pop
add
sbb
xor
mov
lods
pop
loop
into
faddl
inc
xorb
pop
mov
jl
adc
je
mov
kunpckbw
inc
jno
hlt
lret
mov
in
loopne
addb
sahf
leave
leave
mov
pop
adc
pop
sub
roll
xchg
pop
cmp
sbb
insl
cmp
mov
jno
pop
mov
pop
dec
fcomps
mov
mov
inc
sbb
jmp
outsb
sbb
or
fxch
pusha
ss
data16
lahf
xlat
in
jmp
pop
sar
xchg
inc
sub
or
in
or
jb
and
push
xchg
mov
nop
mov
int
push
in
jae
rolb
mov
loop
cld
ret
jle
mov
in
fs
add
aam
or
cmp
adc
dec
cmp
mov
mov
addr16
imul
mov
inc
rcl
outsl
insb
sub
push
dec
outsb
add
mov
fmull
sarb
fsubrp
xlat
pop
rcrb
jns
jno
filds
pushf
cld
push
or
cwtl
pushl
es
sbb
pop
int
push
dec
ss
je
stc
bound
lds
cli
push
mov
add
out
shll
or
push
adc
push
js
es
xor
sub
in
outsb
lea
mov
int
mov
in
cmp
sub
push
mov
mov
ss
mov
or
mov
cmp
rcrl
pop
mov
decb
ds
jbe
mov
mov
les
dec
adc
sbb
push
js
jnp
xor
cmp
movsb
test
dec
fs
addb
sub
add
test
push
dec
rcll
cmp
cmpsb
pop
adc
sbb
cmc
scas
pop
dec
fisttpll
and
sti
ror
into
mov
faddl
mov
popa
add
pop
imul
paddb
into
js
je
aaa
xchg
xchg
cmpsl
iret
popf
sbb
lret
cmp
adc
sub
test
test
cmpsb
scas
insb
sbb
push
adc
scas
xchg
push
mov
test
cmp
pusha
xor
push
xor
pop
in
jb
loopne
in
mov
xor
mov
pop
add
push
or
xchg
sub
je
inc
gs
mov
ds
dec
pop
lock
adc
sbb
xor
ss
roll
jns
outsb
sbb
fsubl
fs
jge
repnz
mov
xchg
outsb
outsb
lea
add
and
pop
adc
dec
js
loopne
int
pop
sub
push
into
mov
std
movsl
push
fcoms
jl
dec
aaa
cmp
subb
mov
sbb
inc
das
push
sbb
hlt
addb
sbb
mov
mov
or
lret
mov
xchg
lret
pushf
hlt
mov
pop
jecxz
es
adc
or
cwtl
push
in
loope
movl
sub
test
movsb
dec
and
cmp
cmp
mov
pop
cs
insl
mov
mov
pop
pusha
adc
push
jae
lods
pop
and
roll
sub
rcr
xor
or
xchg
adc
jmp
test
pop
cmc
lods
push
push
jge
inc
les
cmp
sub
add
mov
ret
stos
subb
fidivrs
shll
sbb
ret
or
cmp
enter
sti
or
mov
sbb
xor
test
roll
aad
das
jnp
xor
roll
sbb
fistpl
cwtl
sbb
push
mov
sub
sbb
test
cmp
incl
add
cwtl
sbb
jbe
sub
loope
insb
jmp
out
aam
lahf
data16
out
fstl
dec
in
jecxz
shll
dec
sbb
lret
xchg
iret
and
rorl
stos
and
sub
adc
mov
cltd
adc
idivb
sbb
and
sub
pushf
jg
add
popa
dec
ljmp
sub
lock
pushf
sub
xchg
pusha
test
xor
sbb
test
adc
sub
pop
jns
fdivs
cmpsb
sbb
jns
cmc
jbe
inc
les
mov
hlt
cmpsb
in
push
hlt
das
adc
mov
sub
or
into
loope
cmp
xor
pop
inc
sub
jbe
push
frstor
stos
sahf
mov
push
jge
and
dec
jne
movsb
jbe
test
dec
hlt
outsl
mov
and
xchg
out
lret
or
mov
sub
daa
js
push
call
or
fcmovbe
xor
rorl
jle
jbe
stos
adc
insb
ss
inc
sub
mov
insl
or
jp
cmp
cmpsb
dec
add
movsl
cli
test
lea
mov
cld
stos
jae
dec
mov
xchg
frstor
mov
fcmovu
inc
hlt
xchg
inc
push
xor
jg
sbb
lahf
ja
lods
mov
test
arpl
ret
fcomip
push
nop
pop
push
pop
ficoml
hlt
adc
inc
push
loopne
xor
int
inc
out
mov
push
ret
popf
fdivl
addr16
repz
cwtl
daa
pop
sub
jecxz
pop
imul
test
flds
in
int3
xchg
ret
sub
bound
jmp
xor
push
xor
in
xchg
pop
pop
mov
and
movsl
loope
jnp
pushl
or
repnz
imul
add
mov
and
xor
mov
dec
aad
into
sub
mov
inc
fwait
outsl
sbb
jp
dec
lods
lods
dec
mov
fdivrs
iret
and
aaa
fcompl
xchg
and
ret
inc
fldlg2
insl
les
divb
inc
gs
out
call
push
jge
sarb
dec
push
jg
fstl
mov
and
ds
mov
scas
mov
testb
mov
cwtl
cmp
daa
mov
cmp
xchg
pop
mov
cltd
or
jnp
dec
push
std
daa
aam
outsl
inc
pop
inc
aam
in
and
hlt
jns
mov
push
add
popf
mov
arpl
ljmp
dec
mov
xor
pop
and
pop
sbb
pop
imul
cs
int
test
adc
movsb
cmp
sub
cmpsb
lods
push
sbb
push
aaa
lret
ds
sub
in
loope
in
repz
mov
sub
xchg
inc
push
int
and
mov
mov
in
fcmovnbe
enter
inc
fwait
push
xor
test
stos
ret
scas
repz
dec
fmuls
push
fidivrl
out
push
cmp
sub
pushf
inc
sub
cs
push
cmc
cld
in
stos
cmc
xchg
into
icebp
adc
mov
adc
shll
cld
ret
sbb
in
pop
sub
cwtl
testb
or
mov
sub
ds
arpl
in
fistps
mov
cmp
jae
xchg
out
and
ret
sub
out
repz
pop
sbb
ficoml
jmp
dec
sub
mov
xor
xlat
out
ret
jnp
pushf
sbb
jecxz
mov
jnp
xchg
das
mov
xchg
cs
adc
dec
mov
fistpll
add
mov
xor
jne
sbb
stc
cmp
dec
mov
stc
dec
cmp
ret
mov
dec
jae
adc
adc
mov
and
mov
xor
out
shrl
outsl
adc
pop
jge
sbb
popa
aaa
fsubrp
pop
push
into
push
enter
ja
faddl
je
push
rolb
scas
pusha
scas
outsb
insl
add
and
in
jmp
pop
sub
subb
jmp
js,pn
stos
and
dec
out
xor
and
xor
dec
lret
sub
jo
jmp
sti
fstpt
loopne
add
xchg
dec
movsb
xchg
push
pop
or
cmpsb
mov
outsl
jbe
or
lock
nop
and
adc
pop
call
mov
mov
xchg
add
cmpsl
inc
mov
adc
icebp
add
dec
sub
je
push
cmp
je
pop
add
mov
ja
mov
outsb
dec
pop
pushf
dec
jle
scas
inc
push
jno
mov
mov
push
add
mov
add
leave
shl
dec
adc
xchg
hlt
pushf
es
lods
push
xchg
test
mov
int3
inc
movsb
aam
stos
mov
ja
std
add
jle,pt
mov
lcall
or
rcll
xor
inc
imul
pop
out
sbb
mov
js
popa
xor
sbb
nop
sub
xchg
cmpsl
addr16
dec
cmpsl
sbb
xchg
pop
mov
inc
imul
push
sub
aad
mov
mov
adc
push
int3
jbe
xchg
dec
xlat
testb
idivb
dec
aaa
imul
mov
test
xchg
lods
test
jmp
sahf
sbb
jecxz
and
mov
jne
xchg
mov
dec
push
pop
push
stc
stos
jl
jns
push
fdivrs
rcll
jns
or
and
xor
mov
xchg
xchg
adc
std
in
sar
push
test
push
stos
sbb
test
rcl
clc
ret
pop
lock
imul
jb
shrl
pop
or
in
mov
ss
fwait
mov
in
or
vmulps
into
insb
xlat
push
dec
push
pop
adc
or
push
rolb
sbb
dec
je
cmp
cmp
ljmp
jns
pop
fisttpll
or
loop
adc
andb
cmpsl
and
inc
loop
mov
fucomip
in
adc
jno
mov
je
inc
jle
int3
sub
mov
xchg
xor
inc
or
dec
mov
insl
jg
push
xchg
cmpsl
dec
or
mov
cmp
gs
cmc
mov
sub
jle
lahf
test
and
jecxz
int3
pop
rorb
pop
jle
cmp
sub
jbe
dec
dec
adc
fidivrl
mov
mov
push
fwait
aas
loope
cltd
fdivrl
pop
cmp
bound
out
jg
bound
sub
scas
xchg
push
push
fisubrl
mov
loop
mov
adc
stos
sub
add
lock
push
mov
push
popf
movl
cs
lds
xchg
xchg
dec
xchg
popf
add
or
jo
dec
decb
xor
jb
add
push
push
adc
sub
pop
sub
pop
pop
jge
int3
add
dec
add
jns
pop
fcomi
or
clc
or
decb
push
and
cmp
mov
stos
popa
cmpsl
rol
mov
push
mov
pop
and
iret
jae
pop
or
cmp
cmp
std
sahf
dec
xchg
daa
xchg
pop
fidivrs
inc
scas
dec
cmp
out
fsubrs
sbb
loopne
lds
sbb
cmp
js
pop
es
adc
jg
sub
loop
dec
or
jns
in
pop
data16
pop
mov
cltd
ds
adc
bound
testl
aam
mov
test
lods
sub
clc
sub
in
ror
sarb
adc
adc
outsl
repnz
mov
insl
mov
nop
pop
inc
and
aad
sub
gs
sbb
mov
add
es
ret
and
out
push
fcom
sbb
jnp
adc
push
outsb
adc
add
clc
les
add
mov
mov
cs
mulb
xlat
sti
out
int
cli
adc
xchg
test
cmpsb
mov
ss
pop
inc
lret
mov
test
fmul
adc
inc
sahf
inc
push
fldenv
add
call
mov
cmp
sbb
and
inc
cwtl
mov
mov
das
scas
test
jnp
fiaddl
pop
jnp,pt
repz
xchg
jl
or
fsts
mov
rcr
push
jae
sbb
jmp
lret
push
repnz
mov
jnp
jnp
cmp
rcl
mov
out
lret
aaa
ss
pop
or
jl
repnz
icebp
pop
scas
movsl
rorb
or
adc
xor
mov
pop
pushf
jg
sahf
out
jecxz
or
popf
addr16
cmp
and
and
cmpsb
aas
imul
inc
loop
sub
push
mov
jmp
fucomi
adc
dec
push
sub
mov
fists
sbb
push
jecxz
divl
mov
pop
adc
dec
inc
sub
hlt
mov
lret
add
mov
mov
loopne
adc
scas
or
jecxz
mov
mov
mov
jl
xor
sbb
insl
pop
xchg
adc
daa
cmp
inc
pop
and
daa
xchg
repnz
int3
pushf
cmp
movsl
in
dec
push
rol
sub
xchg
arpl
mov
leave
les
push
jb
sub
dec
movsb
pusha
in
aad
or
rcr
add
xchg
rcrl
or
mov
jns
adc
mov
fs
jns
add
je
stos
xchg
push
xchg
cmp
xor
adc
sbb
cmp
push
mov
adc
inc
enter
sub
dec
sbb
push
pop
add
sub
das
aaa
cmp
push
andl
jmp
push
loop
enter
sub
and
cmpsl
iret
pop
mov
scas
jns
call
adc
cmp
mov
or
sub
loope
lods
mov
imul
testb
ret
push
add
push
in
shl
sub
jge
and
je
dec
mov
xchg
nop
push
es
dec
mov
xor
fcomps
adc
loope
gs
push
mov
xor
xlat
flds
pop
dec
mov
lea
inc
push
mov
add
imul
ds
stos
test
jae
mov
stos
cmp
cmp
movsb
cmc
lock
jo
fadds
shlb
dec
sub
sub
test
in
sahf
mov
pop
ds
lds
sbbl
mov
roll
ret
xchg
out
sbb
dec
imul
mov
cld
loope
das
jl
cld
std
inc
lock
push
push
mov
inc
paddq
xchg
addr16
and
dec
lods
insb
pop
pushf
sbb
or
mov
cmp
push
jl
mull
lcall
in
test
jno
inc
jnp
xor
jge
insb
movsb
cltd
xchg
sbb
xchg
inc
popf
or
push
test
gs
dec
jecxz
push
sbb
xchg
jno
pop
int3
xchg
fcmovb
mov
fiaddl
and
and
popf
xorl
sub
imul
orb
jg
push
clc
repz
iret
sbb
lods
sub
push
sbb
sbb
jmp
and
lret
or
dec
sub
sti
stc
sub
jbe
pop
push
pop
mov
sub
movsb
jae
sbb
shll
adc
jns
daa
loopne
or
lret
insb
loop
mov
mov
hlt
and
and
sub
mov
lcall
jl
sbb
aaa
inc
pop
add
loop
adc
mov
fldcw
adc
outsb
lds
sub
adc
int3
movsl
ret
lods
pop
rcr
pop
clc
rcl
daa
test
dec
test
pop
aaa
mov
jnp
int
sbb
in
mov
dec
sbb
cltd
cld
mov
mov
jo
std
out
fnstsw
fsub
stos
mov
dec
call
loop
test
movsl
jno
mov
cmpb
inc
pop
fistps
loope
std
pusha
mov
xor
cli
int
inc
xor
sbb
pop
pop
or
xor
pop
gs
popf
cld
push
sbb
xchg
in
lret
sbb
iret
push
mov
negb
or
jno
outsl
fcmovu
adc
mov
push
aam
cmpsb
js
mov
cmp
or
and
shr
sarl
mov
inc
dec
in
rcr
sbb
mov
add
push
in
sub
sarl
pop
adc
sbb
shl
daa
out
aaa
xor
cmp
rcrb
lcall
fstpl
and
or
int3
inc
leave
cmp
and
fisubl
mov
int
mov
lcall
jbe
and
iret
nop
das
int3
xchg
stos
push
mov
lods
cli
mov
inc
xor
leave
rolb
out
xchg
dec
leave
insl
pop
pop
mov
xchg
out
sub
aaa
fs
mov
outsl
leave
add
or
cli
cmc
orl
push
xor
imul
lods
lock
out
outsb
add
push
scas
popa
adc
inc
je
shlb
clc
fdivs
mov
sbb
ss
bound
mov
jbe
sbb
pusha
bound
xorl
sub
std
loopne
imul
mov
sbb
xlat
jecxz
clc
push
outsb
stc
pop
out
mov
pop
stos
add
data16
inc
mov
orl
addr16
cmpl
int
fwait
xor
roll
mov
jbe
orb
sbbb
push
push
sbb
mov
or
dec
mov
xor
mov
es
pop
inc
and
call
sbb
rorl
fists
and
paddusb
sbb
or
adc
push
mov
lret
aaa
insl
add
inc
cmpsl
lea
popf
test
xchg
mov
iret
sub
inc
xchg
pop
outsb
cs
popa
or
jo
int
outsl
xchg
jp
movsl
cmp
xor
nop
cmp
pop
scas
sahf
jmp
adc
pop
call
leave
pop
aas
iret
xlat
mov
jnp
and
xorb
add
pop
push
push
nop
pop
push
cmpb
jbe
mov
mov
mov
fnsave
faddl
movsb
loopne
sti
mov
outsb
and
jge
adcb
gs
not
xchg
sbb
in
cs
xor
out
inc
jae
call
xchg
insb
or
cmpsb
or
in
jnp
xchg
addr16
xchg
dec
dec
jne
fxam
inc
stc
add
nop
out
int3
inc
inc
dec
add
mov
fdivrs
fnstsw
sahf
cmpsl
and
scas
cwtl
dec
daa
ret
dec
xor
movsb
xchg
jns
pop
lahf
pop
push
leave
stos
mov
pop
xchg
mov
mov
jl
cmp
cmp
addr16
pushf
ret
xchg
mov
jecxz
xorb
mov
mov
scas
sub
and
inc
sbb
lahf
js
jge
pusha
sub
jge
aad
add
push
sbb
xor
jp
inc
mov
cmc
mov
mov
xchg
sti
int
sub
test
pop
and
icebp
jns
test
loopne
mov
ds
dec
inc
inc
or
hlt
stos
test
fisttpll
lret
mov
mov
mov
les
out
enter
pop
mov
sub
jecxz
mov
sub
xorl
out
jecxz
xor
jae
sub
arpl
mov
outsl
fimuls
aaa
push
sti
jge
stc
jmp
pop
mov
jg
sub
out
lcall
dec
adc
push
xor
outsl
xorl
cmp
jecxz,pn
sub
pusha
dec
cld
xchg
xchg
out
aas
out
pop
loopne
iret
jmp
fcompl
gs
push
dec
jns
sbb
add
xorb
fstl
mov
xchg
mov
xlat
scas
insb
outsb
xchg
push
aad
in
xor
xchg
out
cs
sbb
pop
pop
imul
orb
lcall
add
mov
mov
push
mov
lahf
cmp
idivb
cmp
and
mov
icebp
in
clc
icebp
sbb
fwait
add
jno
xchg
xor
fldt
push
xchg
inc
push
movsl
dec
mov
dec
jo
or
mov
xchg
jo
lea
adc
sbb
in
mov
dec
cmpsb
into
fsubrs
mov
outsl
aaa
mov
mov
add
loop
mov
sbb
adc
adc
sub
xchg
mov
icebp
xchg
jecxz
adc
imul
loop
xchg
repz
push
shlb
andb
neg
sub
movsl
cmpsl
cmp
cmp
or
and
jns
jmp
out
rcrl
mov
cmp
lret
jge
loope
adc
pop
dec
stos
outsb
lods
popl
in
xor
outsl
rcrb
add
outsl
add
adc
dec
lea
sub
les
gs
jmp
xchg
mov
push
popf
adc
ljmp
in
inc
xchg
movsb
sub
inc
jge
test
outsl
mov
or
cltd
daa
jnp
dec
movsb
das
xchg
cmp
dec
pop
xchg
xchg
jae
pop
or
ss
js
cli
sub
mov
test
dec
arpl
shrl
lret
inc
enter
xchg
movsl
fldenv
roll
in
sub
adc
sub
insb
clc
mov
mov
jne
sbb
rorb
cli
mov
add
loope
mov
ds
cmp
and
pusha
sbb
cmp
fldl
scas
mov
jp
or
out
cmp
in
cmp
sbb
jg
xchg
enter
fsub
adc
cmp
shl
cmpsl
add
loop
popa
dec
mull
ret
or
xchg
pop
push
and
outsb
mov
sbb
cltd
in
push
jecxz
stc
mov
stos
mov
je
sub
add
int3
push
fdivr
push
jb
mov
jl
stc
jecxz
xor
mov
fs
outsl
dec
inc
mulb
sbb
gs
lods
pop
jge
dec
dec
es
das
add
mov
xchg
xchg
pop
pop
ljmp
out
lock
push
fimull
jecxz
mov
lods
inc
jae
std
aas
les
addr16
decb
xor
push
test
adc
inc
dec
shll
pop
das
cld
ja
mov
sahf
dec
push
les
jle
inc
push
std
sahf
jmp
add
adc
jl
push
adc
dec
pop
cli
mov
subl
mov
lods
imull
xorl
ljmp
stos
mov
jle
mov
pop
pop
iret
pop
adc
mov
cs
ffreep
jnp
enter
mov
mov
dec
dec
xchg
cmpsl
xchg
cwtl
popf
ja
push
pop
jne
or
jne
push
mov
repz
pop
cmpsb
pusha
xchg
out
push
xchg
mov
mov
and
jnp
ds
enter
and
inc
scas
popa
in
mov
lret
sub
clc
jmp
xchg
hlt
mov
xchg
dec
out
mulb
sub
fwait
imul
mov
xor
pop
in
mov
pop
decb
ret
cwtl
pusha
loopne
fnsave
fs
lret
pop
ret
pop
mov
ret
out
mov
insb
sub
cmp
orb
push
mov
lret
in
stos
loop
pop
mov
adc
mov
mov
scas
jge
push
les
call
flds
and
or
mov
pop
lods
fldt
pop
xor
jnp
aad
or
push
test
das
cltd
push
outsb
mov
xor
or
xchg
pushf
jb
popf
pop
loop
mov
sub
lods
outsl
fbstp
push
pop
sqrtps
mov
call
shlb
std
mov
subb
dec
pop
jecxz
cmpsl
iret
pop
pop
and
mov
xchg
pop
lods
add
inc
test
fbstp
or
out
in
movsb
inc
cmp
loop
pop
outsb
xchg
insl
in
out
xchg
pop
test
mov
out
adc
push
push
sbb
mov
repnz
int3
repnz
xchg
fdivl
xor
loope
inc
sub
jl
out
daa
mov
scas
cli
in
ret
jg
ja
dec
lods
mov
mov
iret
addr16
dec
sbb
out
pop
or
adc
mov
mull
ja
dec
push
mov
xchg
push
sub
call
jecxz
jecxz
cld
cmp
dec
loope
out
cmpsl
and
add
rcl
ljmp
fcmovnbe
sub
insb
add
push
testl
and
xor
or
aas
push
mov
mov
cwtl
loope
adc
ret
xlat
je
mov
mov
or
mov
test
loope
jmp
and
dec
je
pop
repz
les
mov
aad
mov
lret
sub
lods
arpl
push
and
sbb
sbbl
aad
cmp
mov
sub
fdiv
shll
ss
mov
cltd
iret
adc
or
and
push
pop
andb
daa
xchg
mov
ljmp
xor
gs
or
rorl
xor
cmp
leave
into
cmp
add
fsubs
jecxz
sbb
out
repz
sub
jge
mov
enter
call
cmp
pcmpgtd
mov
pop
cmp
addr16
ss
icebp
lds
out
inc
insb
scas
dec
lea
jle
push
ficoml
xchg
xchg
sahf
loope
xor
mov
rorb
push
mov
mov
sbb
cmc
mov
sub
cld
xchg
mov
insb
push
pop
out
dec
xchg
add
imul
inc
rorl
jmp
mov
pop
lock
loopne
jg
sti
mov
js
fildl
mov
dec
inc
xchg
dec
es
sub
gs
or
scas
add
lods
adcb
jne,pt
xchg
xchg
pop
fdivrs
loopne
insb
add
cmp
mov
xor
cs
mov
add
adc
mov
incl
mov
mov
iret
fdivrs
sub
xchg
aas
shrl
xor
sub
mov
jg
push
mov
adc
cmpsb
cmpsb
push
lods
and
xor
xor
cmpsl
lret
pop
pop
cmc
lods
inc
sbb
mov
arpl
cmc
test
cmp
dec
test
jnp
fsubrs
or
mov
push
in
jno
mov
mov
out
push
dec
loopne
xor
and
mov
xor
dec
fs
js
lods
xor
aaa
xor
lret
dec
adc
jno
jnp
es
shl
dec
xlat
sub
loop
scas
or
test
cs
ret
fcoms
mov
stc
bound
hlt
mov
stos
xchg
int
clc
inc
dec
jne
gs
mov
dec
pushf
adcb
or
pop
aam
sbb
gs
sbbb
pop
flds
jnp
stos
loope
hlt
addr16
ds
add
push
das
dec
stc
cmp
sbb
lds
and
or
sbbl
add
pop
out
std
adc
insl
out
inc
lcall
jno
xchg
rolb
out
fidivs
jno
jmp
insl
push
out
in
dec
rorl
xor
xchg
mov
xchg
sub
mov
lea
loop
jbe
mov
gs
dec
jns
dec
out
aaa
mov
pop
xor
stos
inc
lods
lret
repz
pop
or
sbb
jo
movsb
test
add
jne
mov
jl
out
cmp
sbb
jge
mov
gs
and
adc
mov
dec
es
mov
sub
dec
ja
jl
out
add
lods
mov
mov
xchg
out
popa
pop
xor
cwtl
add
add
inc
int3
fistl
adc
sub
dec
in
push
mov
push
xor
or
sahf
insl
fbstp
push
jg
push
out
and
insb
cmpsb
push
pop
pop
inc
out
fnstsw
xchg
xchg
add
xchg
sahf
add
idivl
cmp
sub
mov
pushf
mov
rep
in
cwtl
mov
mov
push
hlt
out
cmp
mov
enter
jge
add
dec
pop
fisubl
mov
movsl
xchg
mov
pop
xchg
mov
push
sub
paddsb
jecxz
mov
mov
push
repnz
in
outsl
lahf
adc
test
jnp
cmp
push
fistps
pop
repnz
cmpsb
mov
mov
pop
xchg
sub
jns
mov
stos
aas
push
push
insb
sbb
in
test
scas
das
sbb
cmpsb
xchg
jge
jmp
adc
jl
and
rcrl
jle
sbb
sub
jmp
cld
sub
sbb
push
lods
repnz
mov
lret
sti
dec
cmp
xor
xchg
sub
mov
push
dec
popa
jecxz
jmp
cwtl
repnz
das
ficoml
jne
enter
outsb
or
mov
or
cli
in
fisubl
and
cli
nop
jg
mov
mov
xabort
xchg
ret
xchg
xlat
mov
leave
or
or
mov
and
enter
in
das
jae
pushf
pop
jb
stc
lret
mov
inc
pop
sub
pop
popf
mov
jmp
xchg
jae
lods
adc
mov
pop
and
test
arpl
mov
int
fcomi
aam
sub
loopne
test
mov
or
jmp
outsl
test
aaa
lock
mov
cltd
sub
jo
mov
fisubs
cmp
cmc
aas
inc
push
pop
rcl
pop
or
arpl
fcom
in
leave
fwait
pop
rcll
scas
mov
xchg
fstp
lea
clc
add
cmp
in
je
mov
aas
and
test
cld
mov
mov
or
cmp
push
insb
stc
push
add
push
xor
sahf
adc
xchg
lds
sbbl
movsl
rcr
and
pushf
clc
dec
jmp
sbb
push
orl
insb
aam
pop
xchg
divl
insb
pop
push
mov
xor
jo
inc
and
enter
leave
add
inc
xchg
sub
sub
push
mov
sub
pop
xchg
add
jns
addr16
lods
js
icebp
sub
push
adc
stos
cwtl
aas
je
mov
lods
xchg
push
daa
mov
sahf
mov
sbb
mov
testl
arpl
ja
js
lret
jp
ja
dec
std
push
scas
pop
into
call
test
xor
mov
dec
nop
pop
pop
mov
cmpsl
inc
jecxz
push
mov
xchg
dec
test
in
push
jae
mov
jns
sbb
xchg
inc
mov
lahf
pop
pop
enter
mov
mov
fildll
push
out
rolb
addr16
rcl
enter
call
adc
and
adc
daa
lahf
inc
pushf
jg
inc
sub
pop
xchg
ret
jns
rcll
dec
mov
dec
call
add
inc
inc
sub
bound
and
stos
stos
push
lcall
sub
loopne
add
push
shlb
push
retw
test
pushf
outsl
dec
or
jmp
lods
das
and
stos
stc
cmp
mov
jge
cld
xchg
dec
adc
stos
rep
mov
pop
inc
arpl
cmp
mov
cli
aaa
sbb
insl
fidivrs
gs
scas
shlb
push
lret
and
arpl
mov
and
mov
mov
sub
mov
loopne
in
testb
clc
pop
je
jnp
cmp
mov
and
cmpl
sub
sub
sbb
test
lods
add
das
dec
dec
mov
mov
jo
sbb
incl
mov
repz
repz
arpl
jae
jle
enter
test
xchg
xchg
stos
lahf
jle
push
sub
in
inc
push
lods
dec
cmp
repnz
call
jge
push
pop
mov
inc
mov
cmpb
out
cmpsl
cmp
fbstp
jmp
sub
or
mov
in
push
call
in
push
xorb
mov
inc
sbbl
jl
cmp
push
fwait
mov
pop
dec
fidivs
sub
incb
xchg
pop
cli
insl
in
inc
call
rcr
outsl
dec
jbe
dec
insl
mov
iret
pusha
shrl
mov
mul
outsb
push
push
das
aam
sub
xorl
mov
popf
std
es
jmp
or
jmp
repz
mov
mov
inc
enter
in
cmp
nop
push
into
adc
out
push
adc
subb
sub
ret
mov
dec
lods
nop
mov
ror
stc
ret
jl
outsb
adc
sbbb
insb
ljmp
jp
xchg
adc
dec
push
sbb
data16
push
inc
lods
mov
cmpsb
mov
imul
pop
push
div
lods
push
jecxz
cmp
dec
mov
enter
cmpsl
lds
lahf
shlb
jge
xchg
jecxz
mov
cmc
cli
jno
adc
into
xchg
adc
xchg
inc
test
add
cli
movsb
pmulhw
into
or
mov
cmp
push
and
sbb
mov
xchg
or
sbb
add
lds
sbb
lret
adc
mov
movsl
mov
stos
je
dec
sub
addr16
fldt
sub
fwait
cmpsl
fs
repnz
push
fidivs
inc
cmp
dec
mov
pop
icebp
sbb
arpl
jno
sub
clc
aad
mov
fnstenv
lods
outsb
mov
add
dec
mov
xchg
dec
int3
jb
xor
add
movsb
mov
out
sbb
dec
push
add
xlat
xchg
aaa
out
and
cmp
mov
ljmp
loop
push
dec
adc
sbb
mov
in
ret
rcrl
stos
sub
mov
sub
stos
icebp
jae
loop
dec
test
dec
mov
dec
fsubrl
mov
dec
ss
inc
sub
jns
mov
pop
pushf
adc
popa
pushf
movsl
shrl
push
pop
roll
std
jno
mov
inc
call
mov
mov
adc
mov
cmp
pop
das
movsl
or
mov
push
mov
xor
daa
pop
orb
xchg
and
inc
les
xchg
mov
xor
sub
stc
out
fnstcw
test
sarl
pusha
dec
pop
rolb
pop
test
rorb
fcompl
rorl
cltd
cmp
sbb
xor
xchg
jne
clc
js
xor
jmp
fs
jle
pop
incl
bound
or
fimull
mov
jge
dec
iret
push
popa
ret
lea
out
fmull
ror
lret
es
xor
call
insl
dec
in
mov
popf
cwtl
pop
call
adc
fisubs
dec
in
mov
mov
leave
aad
aam
adc
add
out
shll
ror
or
orb
push
and
mov
cmp
cmpb
mov
jmp
mov
mov
adc
dec
mov
loopne
pop
aad
call
fldcw
sbb
and
rorb
fisubrl
cmp
lds
lea
dec
iret
lret
xchg
xchg
daa
arpl
xchg
xchg
loopne
dec
stos
lock
insl
mov
stc
cwtl
sbb
jmp
inc
nop
add
sti
in
lea
gs
push
mov
hlt
fstl
push
pushf
adc
jo
mov
xchg
mov
pop
jmp
sub
cmc
jne
mov
jae
mov
lret
mov
movsb
out
nop
pop
leave
push
daa
mov
out
cmpsl
jbe
inc
mov
addb
mov
gs
psrld
push
add
icebp
hlt
inc
aas
and
push
xor
mov
add
insl
arpl
call
xchg
loope
inc
outsb
repnz
hlt
xchg
mov
pop
sub
push
sub
leave
js
push
nop
cwtl
mov
out
outsb
das
lea
addr16
xchg
pop
int3
popa
lcall
mov
jmp
das
and
jg
lods
add
fwait
andb
sbb
sub
sbb
inc
or
das
mov
sbb
mov
xchg
int3
pushf
mov
fwait
lret
test
add
xchg
fsubrl
enter
jnp
das
lret
int3
mov
mov
inc
int3
inc
call
push
mov
pop
dec
mov
mov
int
jmp
daa
mov
xchg
cmp
xchg
mov
push
and
push
xor
push
das
mov
int
fstps
gs
idivl
shll
push
imul
in
dec
mov
and
jne
scas
xor
popl
aaa
std
sti
push
gs
pop
jno
test
fsubl
mov
test
jno
mov
out
int
sub
mov
das
xchg
orb
push
enter
jg
hlt
add
cli
or
pop
outsb
lahf
xchg
cmp
add
jmp
ss
and
sbb
insl
pop
test
jb
xchg
outsb
insb
insb
fldl
xchg
mov
ficompl
loop
fcoml
ljmp
pusha
imul
icebp
ret
jae
lret
icebp
add
pop
xlat
loopne
and
cmpsb
enter
mov
push
adc
mov
cmp
cld
and
cli
push
mov
mov
lods
cs
jnp
inc
inc
inc
in
int
mov
scas
out
mov
push
add
inc
pushl
xchg
mov
test
xchg
mov
or
pusha
mov
and
sbb
mov
fsubrl
mov
shll
cmc
sbb
pushl
pop
scas
sbb
xchg
fistps
xchg
mov
lahf
insb
mov
sbb
test
loopne
push
mov
sbb
jno
loope
jnp
pop
int
fmul
cmp
xor
nop
insl
sbb
fstl
pop
fs
sarb
push
retw
mov
pop
test
nop
call
cmpsb
insb
in
pop
and
push
ja
add
repz
xor
outsl
cwtl
jl
adc
jmp
bound
mov
cmp
clc
push
loope
adc
ljmp
push
push
add
mov
lret
addr16
testl
popa
xor
je
hlt
fimuls
stos
xor
dec
stos
in
mov
nop
mov
pop
push
or
repnz
jecxz
inc
hlt
stos
flds
outsb
or
scas
inc
mov
jge
or
adc
sbb
jnp
push
scas
or
mov
and
shrl
pop
mov
push
cmc
pop
mov
out
arpl
sbb
decb
mov
call
insb
mov
cmp
sbb
sbb
mov
xchg
sbb
scas
mov
aaa
jno
les
mov
loope
pop
imul
fdecstp
lods
call
inc
mov
mov
jle
fwait
negb
imul
mov
inc
add
scas
arpl
and
mov
sub
shr
sub
xor
fldl
sub
fisubrs
sbb
inc
or
jo
andb
scas
fstpl
pop
mov
add
mov
scas
repnz
pop
add
jg,pn
das
xchg
popa
loop
ret
push
ficoml
sbb
dec
mov
add
sbb
dec
and
pop
jmp
popa
mov
fldt
push
push
jbe
bound
inc
mov
pusha
xor
push
jno
push
mov
mov
mov
fistpl
movsl
fdivl
call
mov
or
push
outsl
inc
jmp
add
push
adc
fcompl
sbb
dec
stos
test
jns
jg
fistpll
imull
jo
inc
fwait
das
mov
pop
adc
repnz
pop
mov
push
arpl
cmp
mov
sahf
stc
fidivrs
cmpsl
cmpsl
cmc
mov
and
cmc
lret
popf
movsb
call
fsubs
arpl
test
pop
out
push
test
cmp
inc
out
mov
roll
mov
sbb
jns
push
daa
cltd
loop
push
push
mov
insl
sti
in
mov
sub
push
push
push
dec
nop
add
or
push
inc
lahf
add
adc
xor
enter
lahf
dec
cmp
add
cmp
pop
sub
test
filds
push
mov
test
mov
jae
adc
adc
das
push
repz
cmp
jp
cmp
inc
xor
cwtl
pop
add
jp
push
push
fisttpl
adc
int3
stos
bound
test
ja
in
repnz
pop
dec
stos
mov
inc
sub
add
mov
mov
mov
push
test
jmp
add
or
lds
push
popa
push
test
add
test
into
fwait
stos
jecxz
jecxz
into
into
xor
aas
mov
xor
add
pop
mov
clc
ljmp
sarl
xchg
cli
in
adc
repnz
push
cmp
out
frstor
insb
sarl
pop
inc
mov
cli
xor
jge
jns
addr16
clc
hlt
insl
push
cmovb
inc
xor
je
test
notl
pop
popa
iret
lods
push
cmp
adc
xor
pop
mov
das
sbb
jae
jb
adc
fdivr
popf
push
and
in
pop
jg
add
aam
lahf
bound
or
aas
cmpsb
add
push
je
inc
fs
jmp
jb
insb
xor
sarl
sbb
jae
jl
out
out
movsb
mov
mov
adc
insl
scas
mov
and
sub
lods
ret
and
push
in
and
test
ljmp
cmp
and
mov
inc
cmpsb
inc
jmp
stos
ror
dec
jp
outsl
imul
lods
inc
repz
xchg
push
das
movsb
pusha
pushl
adc
cli
xor
int
jnp
testb
ds
int
push
das
iret
mov
mov
lock
mov
push
fdivl
xchg
fstpt
movsl
lds
pop
int3
add
push
push
inc
add
sbb
mov
movsl
adc
imul
mov
pop
push
jnp
or
sub
xor
mov
rcrl
xor
lret
fwait
js
mov
and
dec
shlb
scas
inc
jle
mov
xor
xor
fcomps
gs
add
aam
inc
add
arpl
add
scas
mov
in
in
mov
int
mov
mov
stos
mov
adc
int
enter
jno
xor
pop
mov
movsl
mov
xor
mov
mov
jmp
cmpsb
imul
mov
jnp
push
mov
push
ss
and
fdiv
dec
hlt
pusha
out
clc
idivl
cwtl
xlat
leave
mov
pushf
inc
inc
iret
xchg
ds
or
hlt
pop
sub
out
loopne
sbb
mov
push
jo
pop
fimuls
adc
movsl
jg
dec
mov
xchg
mov
bnd
inc
pop
pop
xlat
push
pop
sub
cmc
or
je
mov
cmp
inc
pop
das
ss
inc
jno
out
rcl
mov
je
xor
push
sti
scas
fistpl
mov
enter
mov
repnz
sub
adcl
test
mov
lods
cmp
mov
sbb
inc
mov
pop
or
push
std
and
mov
push
cmp
cmpsl
hlt
je
fcomps
imul
sub
add
les
das
fnsave
pop
rorl
divb
add
ds
sbb
into
push
cmp
mov
or
fdiv
bound
rcll
sub
dec
fwait
dec
adc
lahf
loop
mov
jae
dec
into
popa
xor
and
mov
adc
lret
push
fsubl
ficompl
and
dec
or
aas
mov
aaa
xchg
int3
out
pop
push
dec
icebp
push
ds
arpl
push
or
movsb
xchg
push
cmp
nop
ret
jns
rcrl
ss
out
dec
xor
cmc
orb
mov
pop
xchg
xadd
js
jno
pop
mov
mov
pop
in
call
xchg
lods
pop
mov
push
jnp
xchg
xor
mov
xchg
pop
push
cmpsl
and
sub
sub
inc
pop
jp
or
pop
xor
adc
ss
adc
sbb
push
ja
mov
xor
jns
add
les
jo
daa
pushf
sbb
add
or
mov
dec
pop
jb
cmp
mov
pop
jecxz
out
aas
sbbb
in
mov
inc
gs
jmp
test
or
mov
jne
and
sub
sarb
mov
aam
popa
dec
sti
jb
cmp
cltd
jne
cmp
mov
push
mov
test
ljmp
jle
add
mov
push
cmpsb
vpsadbw
pop
ss
std
or
loope
pusha
fmull
pusha
nop
fdivr
data16
add
stc
jl
inc
and
out
push
je
ds
pop
jne
mov
insb
add
repz
dec
push
sbb
test
aam
adc
jecxz
add
stos
xchg
xchg
ret
jle
mov
xchg
gs
lret
call
xchg
movsl
fsubrs
mov
jg
cmpb
pushf
popf
scas
xchg
movlps
and
cli
jno
mov
or
xlat
jno
pop
stc
or
mov
and
das
cmovbe
inc
xchg
movsb
mov
pop
xor
and
js
jecxz
mov
inc
push
sbb
fiaddl
adc
aam
sbbb
push
ss
xchg
jno
inc
sarb
in
cld
nop
dec
rcrb
sub
inc
fists
gs
stc
aas
and
jno
ss
std
scas
inc
xor
int
jne
lds
push
es
mov
mov
filds
int3
js
push
jl
xchg
fisttps
mov
jb
pop
clc
cmpb
inc
pop
and
sbb
add
negb
mov
dec
jmp
mov
aad
sub
pop
push
mov
shlb
scas
je
cmp
xchg
enter
rcll
mov
lock
cmpsb
xor
je
lcall
mov
mov
aaa
out
mov
cmp
jmp
jle
mov
adc
test
call
idiv
nop
repnz
pop
jnp
sbb
into
mov
mov
inc
cli
das
adc
add
xchg
jge
stos
and
or
sarl
mov
shrb
mov
add
movsb
jmp
sahf
flds
adc
jbe
dec
pop
cmp
dec
jle
imul
jge
push
xchg
ss
cmp
mov
ss
in
stos
jns
xchg
cmp
and
testl
ds
repz
cmp
xor
sub
inc
icebp
mov
sub
cld
loopne
js
jmp
jl
out
insl
pop
call
fldt
mov
addr16
push
inc
xchg
aad
jge
mov
adc
sub
push
pop
xor
fbstp
loopne
xor
ds
pop
sub
add
pop
out
sbb
movsb
dec
rcrl
movsb
dec
push
imul
push
add
mov
sub
mov
pop
mov
lds
inc
hlt
mov
xorl
shlb
mov
adc
fs
icebp
clc
aas
mov
push
mov
out
mov
fstl
dec
xchg
jo
mov
jl
sub
arpl
pusha
mov
mov
ja
push
cmc
test
push
ret
inc
add
ss
jnp
mov
push
enter
sub
int3
sub
sub
shl
fidivl
iret
js
fiadds
xchg
imul
jnp
cmp
pop
inc
loopne
insl
movsl
xchg
cltd
aaa
stc
mov
movsb
mov
fs
arpl
in
mov
aaa
in
sub
cmpsb
lcall
stos
mov
push
mov
sbb
mov
cmpsl
xor
addr16
lcall
bound
test
dec
out
xchg
ret
sbb
daa
cmp
sbb
pop
xor
lods
mov
je
mov
scas
xchg
or
mov
push
or
test
xchg
sbb
cmpsb
into
shrl
lods
dec
je
inc
sbb
cmp
lock
push
mov
push
add
repnz
add
pusha
in
sarl
mov
dec
pop
mov
stos
jmp
sahf
lcall
adc
push
sub
stc
ja
inc
stc
push
sub
mov
adc
and
repnz
sub
movd
xorb
xor
or
or
pop
mov
inc
in
and
test
pop
int
sbb
cwtl
cld
add
hlt
sti
loop
fcomps
sub
push
adc
and
sbb
xor
decl
inc
dec
add
std
push
push
icebp
cmp
push
cwtl
daa
adc
xchg
xor
jb
aad
test
fsincos
sub
push
leave
jb
sbb
sti
or
xor
xchg
cmpb
test
fcoml
popa
sbb
inc
mov
sbb
stos
out
aas
aaa
sbb
adc
xor
cwtl
hlt
push
ret
mov
jo
xor
outsl
les
or
add
xor
xchg
lret
cmpsb
rol
sbb
jo
and
adc
stos
sub
das
ss
loope
or
xor
faddl
int
mov
or
xchg
mov
pop
mov
lds
stos
xchg
inc
arpl
addr16
fdivl
shll
pop
bound
ret
and
dec
mov
fadds
js
stc
orl
dec
shr
mov
lock
into
jbe
dec
stos
jp
push
xchg
mov
lods
jl
and
xchg
xorl
ljmp
imul
pop
aas
out
nop
negl
push
fnstcw
ja
lea
push
mov
popa
stos
out
lds
inc
test
dec
je
rol
cli
subl
cwtl
add
xor
aam
cwtl
mov
dec
negl
loop
addl
mov
ja
lods
mov
sbb
pop
push
cmp
add
das
jno
in
and
aas
loopne
xorb
jne
leavew
in
jmp
cltd
mov
mov
push
mov
cmc
and
xchg
sub
iret
or
hlt
jnp
mov
sahf
mov
or
jmp
pop
insl
loopne
fldt
in
call
aam
push
mov
cmc
fcomi
pop
cli
clc
jge
or
lret
sub
std
lods
or
imul
out
and
jne
xchg
sbb
adc
mov
out
pop
lods
lds
jp
popa
fwait
jnp
jnp
or
icebp
fwait
jecxz
lret
or
inc
test
push
add
cmp
jae
ficompl
es
adc
fstps
mov
mov
stos
add
xor
std
loop
out
cmp
push
mov
adc
popa
jae
pop
sub
push
and
and
sbb
pop
lret
shrb
lret
fwait
enter
imul
sbb
inc
push
cmc
popf
jecxz
mov
mov
push
xchg
jae
fs
pop
fs
xchg
cmp
pusha
lret
mov
jl
fisubrs
sarb
adc
push
icebp
bound
dec
adc
adc
pop
outsb
aam
fdivr
jl
cltd
mov
test
sbb
mov
dec
stc
dec
jbe
jnp
xchg
pusha
rcll
mov
jne
int
dec
add
jmp
jne
roll
jmp
jge
into
sub
scas
pushf
shlb
pop
push
adc
dec
mov
dec
leave
ror
in
pop
push
into
fisttpll
inc
loope
pop
in
xchg
xchg
or
ljmp
adc
or
or
jmp
shrb
cmc
lods
sub
xor
xor
jmp
lcall
std
jo
aad
ljmp
sbb
outsl
insl
mov
and
inc
shlb
mov
sbb
push
pop
js
les
fimull
stc
cmpsl
mov
es
inc
sbb
add
repz
pop
movsb
dec
ja
dec
pop
or
mov
enter
jecxz
xchg
push
push
xchg
sub
orl
loop
mov
dec
std
xorl
dec
mov
mov
sbb
daa
test
pushf
pushf
sbb
sti
pop
orb
mov
dec
icebp
or
add
jo
mov
jp
mov
stc
fbstp
xchg
call
cmp
xor
ds
add
testb
and
adc
sub
cmpsl
dec
jp
adc
or
jne
aaa
leave
aaa
sbb
push
in
inc
popf
push
fwait
xchg
movsb
or
sahf
mov
cli
pop
rolb
dec
stc
or
repz
xchg
sahf
add
movsb
icebp
dec
insl
dec
rol
inc
js
scas
dec
sub
inc
xor
sahf
cmpsb
add
jecxz
divl
mov
stos
add
and
loopne
in
andb
arpl
dec
jno
lds
pushf
mov
lcall
xor
fdivs
fwait
js
repnz
cmp
adc
dec
xchg
movsl
addr16
jnp
add
xlat
jb
out
mov
inc
rcl
mov
fsubl
data16
insl
xorb
dec
rolb
ret
sbb
stc
repnz
jp
adc
sahf
out
sarb
ja
sbb
lock
fs
mov
add
sub
movsb
cmc
push
mov
aaa
mov
cmp
and
and
inc
sbb
pusha
arpl
addr16
xor
xchg
dec
inc
decl
xchg
fimuls
dec
mov
punpckhbw
adcb
hlt
arpl
pop
clc
cmp
dec
cmp
cwtl
rorb
lods
std
icebp
shrd
inc
mov
jmp
xchg
jle
aad
nop
jne
gs
and
movsb
imul
jmp
nop
xchg
insb
inc
mov
out
bound
pop
fnstcw
sbb
pop
jp
push
and
mov
xor
out
mov
pop
add
incl
and
dec
fdivrp
mov
pop
xchg
push
xchg
ja
inc
fadd
cwtl
shl
mov
dec
xor
xchg
ss
pop
inc
lock
mov
inc
dec
mov
aas
test
mov
fsubl
cmp
cmc
sbb
dec
test
jb
pusha
sbb
scas
into
push
enter
pop
hlt
or
ret
add
cmpsl
stos
xchg
add
cld
inc
dec
shlb
mov
outsl
inc
popa
packssdw
ljmp
insb
mov
sar
push
push
push
aam
ja
test
inc
mov
xchg
jne
sub
dec
jle
cld
inc
xorb
cmp
flds
fistpll
mov
in
jl
cltd
mov
fucomi
cmp
cmpsl
adc
stos
shlb
pop
pop
or
push
imul
cmp
addl
ja
sub
lock
ljmp
xchg
add
dec
mov
jmp
ret
mov
xchg
adc
fisttpl
insb
or
stc
pop
test
pop
pop
xchg
stos
in
and
mov
sbb
das
xchg
mov
std
and
repz
test
jmp
int
dec
dec
shll
and
adc
popw
call
jnp
std
enter
lcall
pusha
xor
mov
pop
ret
cwtl
push
adc
xor
fidivs
loope
test
ja
mov
cltd
mov
pushl
mov
xlat
mov
enter
pop
in
inc
fdivr
cld
add
movsb
scas
sahf
aas
sub
daa
mov
xchg
pop
sahf
das
adc
pop
out
popa
xor
pushf
daa
dec
mov
mov
push
andl
sub
das
aas
aad
imul
pop
outsl
hlt
pop
pop
ret
das
int3
xchg
mov
fisubrl
roll
push
ss
push
mov
push
add
scas
lock
ss
stos
pop
jbe
ret
mov
fiaddl
shr
and
and
push
sti
cmp
pop
loope
pushf
sub
sub
cmp
imul
out
dec
mov
push
jo
push
jae
ret
fldl
xchg
stos
push
cmp
cmpsb
sub
leave
out
sti
adc
clc
rcll
fistpl
cmp
pop
mov
jg
xchg
ja
push
nop
not
pop
lock
gs
testb
mov
mov
jae
cmp
push
push
push
sub
xchg
sti
sbbb
loop
testb
push
fisttpll
or
push
hlt
fistpl
aaa
pop
jmp
lds
mov
mov
pop
xor
cmp
and
jl
movsb
sti
in
bound
jo
or
scas
adc
xchg
xor
fcomip
inc
sub
pop
xchg
lods
jl
xchg
fdivp
xlat
in
xchg
dec
pop
inc
std
and
mov
pop
or
push
add
xor
dec
test
cwtl
dec
ret
pushf
ret
pop
sti
nop
xchg
out
pushf
shll
pop
adc
and
lods
jne
stos
popf
dec
adc
loope
xchg
mov
cmpsb
icebp
sbb
addr16
xor
daa
fistl
dec
cmp
movsl
push
aam
and
dec
out
sahf
movsl
xchg
ss
cmp
movntps
les
aam
or
xor
xchg
inc
jg
mov
pop
sub
or
inc
push
inc
cmp
and
or
push
jg
stos
andl
loopne
daa
test
es
mov
repz
xor
mov
and
and
jbe
inc
imul
inc
icebp
call
jp
mov
inc
orb
and
rcll
xor
test
cmp
nop
dec
movzwl
inc
scas
jae
je
in
or
or
xchg
das
movsb
insb
ficompl
mov
adc
out
daa
adc
pop
sub
push
inc
jns
push
push
rcr
je
out
ficomps
loop
sbb
ret
negb
mov
roll
jns
popa
rol
les
mov
shl
fcomps
mov
mov
or
or
add
clc
sbb
sub
inc
pop
adc
stos
lahf
and
fsubr
lret
movb
enter
shlb
fdivp
mov
push
mov
loope
sub
mov
inc
ss
orl
std
sbb
sub
jecxz
cmp
push
das
out
pop
lcall
popf
mov
fwait
mov
cmpsb
mov
or
into
ret
das
leave
les
sub
xchg
jge
lods
cmp
inc
ret
addb
fcompl
xchg
mov
cmp
sbb
lea
sub
fbld
xor
pop
cld
in
push
and
push
sub
sbb
dec
leave
lods
into
jp
adc
cmp
adc
push
movsb
hlt
mov
fcos
xorb
mov
pop
add
pushf
sub
rcrb
push
jl
in
inc
push
out
pop
push
mov
aaa
mov
outsb
cld
inc
out
pusha
jg
lods
ret
xchg
jg
mov
push
pop
out
mov
mov
pop
jge
loope
ret
aad
imul
in
stos
pop
jg
xlat
dec
je
pop
add
or
fwait
sti
jp
hlt
ret
jno
scas
outsb
jg
lcall
lcall
adc
rorl
sti
xlat
mov
fisttpll
xor
adc
ss
lret
outsl
push
leave
jb
xchg
mov
cmp
pop
pop
or
inc
add
mov
xor
pop
sub
pop
cmp
mov
popf
push
leave
stc
mov
hlt
aas
inc
movlps
mov
push
mov
loope
pusha
xchg
ja
and
mov
leave
sub
lock
mov
inc
mov
cwtl
inc
sbb
xlat
ljmp
imulb
mov
and
adc
jb
xchg
int3
filds
sub
ljmp
pop
popa
xor
xlat
push
cmp
adcb
inc
dec
iret
cmp
mov
stos
inc
call
dec
sbb
loop
inc
repnz
and
xchg
jmp
sbb
xor
push
mov
sbb
adc
add
sbb
dec
lock
xchg
pop
daa
roll
xor
inc
mov
dec
or
movsl
cmpsb
cwtl
movb
pop
aas
push
fimuls
cmp
inc
push
shlb
aam
mov
dec
pushf
sub
repz
xchg
pop
xor
sub
jmp
and
jle
rclb
add
addr16
out
repnz
xor
mov
dec
fisubrs
nop
movsb
xchg
jne
mov
add
sbb
mov
aaa
cmp
push
mov
sub
cli
pop
pushf
dec
or
add
push
mov
shl
aam
cmpsb
repnz
jg
inc
rorl
xlat
sub
enter
adc
daa
pop
stc
dec
xchg
cmp
mov
addr16
in
idivb
dec
jno
cpuid
xor
inc
sub
imul
loopne
pop
jmp
dec
push
xchg
mov
jge
mov
inc
nopl
xchg
or
mov
and
pop
mov
insb
inc
insl
push
cmc
js
fisubs
and
inc
imul
movsl
jb
fdivs
test
je
xchg
pop
push
nop
mov
xorl
jmp
add
push
aas
xor
cwtl
outsb
enter
ds
cmp
mov
cld
xor
cmp
xor
scas
sub
ja
xlat
adc
jg
cli
nop
add
or
add
sub
xor
clc
xchg
loopne
ja
adc
cltd
rcll
rcl
mov
lea
faddp
mov
std
inc
pop
out
fwait
sbb
scas
mov
mov
negl
dec
les
cmpsb
orl
jle
mov
pop
push
out
pop
xchg
xor
jecxz
sbb
or
clc
sbb
mov
aaa
shlb
cmc
ds
aaa
mov
dec
sbb
dec
push
std
cltd
xchg
loope
cmp
adc
add
loop
stc
xchg
pushf
push
mov
xor
shr
push
es
pushf
out
pop
mov
lock
sbb
adc
leave
mov
ret
fs
dec
insl
in
sbb
adc
xor
cmp
aaa
lret
aam
out
es
fldl2e
push
pop
fdivl
and
arpl
dec
mov
pushf
and
xchg
stos
xchg
pop
addb
adc
bound
loop
xor
out
insb
jg
pop
xor
int3
push
sub
bound
fisubrl
nop
fs
xlat
es
sbb
data16
fwait
test
lret
loope
jle
rcrl
mov
fimull
cmp
cwtl
cmp
pop
in
push
inc
cltd
lahf
adc
sub
jl
dec
add
enter
ljmp
mov
sub
adc
mov
pop
dec
incl
repz
inc
in
leave
sbb
sub
cld
dec
loopne
je
repz
sti
dec
cmp
sbb
pop
mov
cmp
xchg
lcall
pop
fstp
fists
dec
mov
iret
jae
sarl
mov
popf
pop
lcall
sbb
dec
pop
rorb
mov
cmpsl
xor
xor
in
pop
in
mov
cmpsl
mov
and
iret
cltd
inc
movsb
cs
lret
ret
pushf
xchg
xchg
ret
inc
call
dec
mov
push
add
mov
or
out
jl
xor
outsl
mov
dec
sbbl
test
clc
movsb
or
repnz
push
adcl
adc
xlat
adc
inc
shr
ss
mov
subl
mov
data16
enter
cmp
cltd
adc
hlt
nop
mov
mov
dec
in
jp
lea
cltd
jb
sbb
fdivrs
sti
mov
lahf
xchg
xchg
imul
leave
xchg
addr16
ficomps
out
in
filds
jb
push
iret
ljmp
pop
sub
sub
lcall
mov
mov
shlb
popa
sub
jne
insb
push
jecxz
xor
das
pop
push
arpl
mov
cli
divb
inc
test
sbb
mov
or
dec
in
dec
loop
cltd
test
push
dec
xlat
cmpsb
adc
out
pop
mov
mov
lock
xchg
mov
iret
sub
test
or
push
ljmp
adc
push
fiaddl
cmc
fmul
pop
mov
fildl
cmp
push
or
pusha
jecxz
jo
mull
stos
jp
inc
cmp
mov
in
jne
cli
scas
push
stc
out
lea
imul
ret
xchg
arpl
out
lea
adc
popa
jns
xor
scas
cwtl
inc
xor
std
lcall
cmpsl
out
data16
hlt
scas
sub
es
jle
pop
out
adc
arpl
enter
push
movsl
es
xchg
fiadds
adc
jmp
mov
out
loopne
test
aad
dec
add
mov
adc
jge
cli
lds
mov
cmp
int3
mov
or
sbb
enter
fwait
shll
push
out
add
sbb
sti
icebp
lock
mov
rcr
lret
push
sub
dec
cmp
stos
mov
sarb
lret
mov
add
pop
sub
sub
mov
or
dec
data16
cmp
inc
ror
mov
push
stos
jmp
xchg
sbb
scas
ss
mov
mov
scas
jl
addl
in
lea
pushf
cmp
je
sbb
popa
test
add
les
fistpll
cmp
pop
add
push
jbe
and
std
cmp
ret
imul
repnz
in
mov
in
jp
shll
arpl
xchg
clc
test
mov
dec
xlat
in
jbe
xchg
add
jae
inc
sbb
jl
push
xor
hlt
fbld
inc
stos
lods
sub
fstps
mov
push
and
ljmp
xchg
arpl
jge
in
shrl
mov
xchg
push
cld
lods
idivb
repnz
push
test
xchg
pop
jnp
mov
add
jg
test
push
mov
cli
shlb
fldenv
inc
enter
mov
add
iret
aaa
ss
imul
lret
inc
fwait
popf
roll
fs
xor
int
push
jb
push
insl
insl
cmp
enter
cwtl
xchg
cli
xchg
mov
dec
subl
out
int3
and
int3
cmp
cltd
incl
sbb
add
andb
adc
into
dec
mov
fcoms
add
int3
out
cmp
loope
push
in
mov
add
fldpi
push
sbb
xorl
aad
adc
pop
sahf
loope
cmpsl
inc
std
cmpsb
xor
sub
jne
popa
mov
testb
call
aad
jmp
mov
xor
pop
cmp
cmp
jbe
shl
pusha
aaa
push
stos
ffreep
dec
mov
shlb
and
xchg
andb
das
imul
or
push
inc
mov
pusha
sub
insl
sub
or
ret
mov
int3
in
pop
aam
out
notb
stc
mov
or
fldcw
dec
rol
nop
jl
test
jp
mov
sbb
loop
fstpl
inc
pop
insl
test
or
cmp
lret
inc
int3
in
in
cmp
mov
cmp
fisttpl
loop
sub
xor
dec
inc
add
in
or
adcl
stc
inc
add
repnz
and
int3
sar
fisubrl
lret
jge
test
fsubs
stos
sub
jmp
push
stos
sub
mov
xchg
arpl
insb
push
xor
or
mov
mov
sub
jp
addr16
adc
ret
fdivrp
push
imul
pop
movaps
cld
repnz
pop
lods
inc
push
arpl
cmpl
jo
cli
clc
scas
jmp
xrelease
sbb
das
lahf
jo
js
sbb
ds
in
fnstenv
sub
scas
pop
mov
int
mov
or
cli
xor
lock
sbb
cmc
popl
arpl
inc
repnz
add
in
mov
mov
push
and
jnp
scas
pop
aam
in
clc
lods
mov
sub
push
jns
icebp
or
or
mov
rcrb
pop
mov
lahf
ret
les
sub
cli
sbb
mov
mov
cmp
cmp
adc
jno
jae
lahf
push
outsb
mov
scas
test
mov
pushf
mov
push
inc
outsb
sbb
outsl
xchg
pop
gs
movb
imul
or
jg
aam
repz
or
std
add
mov
out
inc
pop
test
push
mov
mov
cmp
jbe
pusha
or
mov
mov
mov
jge
pushf
adc
cmp
push
add
out
aas
iret
popl
cmp
fs
loopne
xor
sbb
sbb
mov
in
dec
cltd
mov
inc
ror
call
sub
lea
sub
imul
ret
mov
test
add
cmp
out
jb
movsl
fs
xchg
add
in
mov
into
mov
std
jmp
fldt
out
mov
cmp
out
pop
jg
in
xor
cmc
dec
xchg
jle
cmpsb
xchg
in
ljmp
rorl
and
subl
lahf
imul
pop
jp
push
out
push
inc
jge
push
adc
pop
daa
fcompl
and
movsl
out
dec
mov
and
sub
cmp
ds
lods
cmp
mov
stos
lods
scas
ror
mov
mov
xchg
cmp
mov
mov
jle
or
fisttpll
fstl
add
stos
adc
gs
out
push
xchg
lcall
jp
jns
jns
in
pop
pop
jmp
lods
ror
popf
lds
ss
je
dec
or
shll
adc
movsl
inc
xchg
adc
xchg
cmp
sbb
fsts
mov
mov
testb
scas
daa
out
push
add
pop
fsubr
mov
mov
addr16
mull
pop
lods
arpl
xchg
int3
test
push
ss
jb
test
in
dec
lea
mov
aam
mov
faddl
repnz
pop
lock
sarb
in
xchg
push
sti
xchg
subl
dec
jo
cmp
xlat
dec
jae
test
sbb
cmc
mov
test
xchg
add
nop
jb
or
pop
inc
ss
and
cmpsl
mov
je
adc
cltd
sbb
mov
adc
pushf
enter
mov
sbb
pop
loopne
cltd
rorl
sbb
mov
jl
adc
aad
or
sub
lcall
xor
je
sub
jp
dec
lock
ret
cmp
paddq
adc
or
inc
sub
xor
test
cltd
xor
imul
lods
mov
in
into
xchg
arpl
loop
pop
repnz
xchg
ja
adc
and
mov
jne
std
sub
test
test
icebp
fnsave
pop
std
aas
scas
push
xchg
out
pop
mov
xchg
sbb
pop
sub
fdivs
outsb
xor
add
in
lret
inc
mov
push
push
inc
repz
push
mov
mov
dec
xchg
xchg
dec
stos
sti
jp
pushf
out
fs
jg
dec
inc
and
mov
sub
es
aam
sti
cwtl
mov
vmovhpd
pop
adc
cmc
or
and
mov
pop
scas
and
sbb
lcall
or
push
lret
callw
cmp
or
test
push
mov
sub
mov
fnstsw
or
ljmp
pushf
push
ja
roll
es
imul
or
cmp
mov
std
pop
xor
xchg
in
shrb
dec
or
test
cmp
movsb
insb
xchg
mov
sbb
push
mov
sub
adc
pusha
cmpsl
dec
sub
imul
jge
cli
xorb
xor
inc
or
mov
shll
xchg
push
push
mov
mov
mov
aaa
fwait
shlb
rorb
imul
cmp
stos
cld
pusha
mov
testl
or
mov
inc
adc
mov
aam
out
rclb
fdivp
or
insb
jmp
and
lods
inc
insl
sbb
stos
shrl
call
push
cli
xor
dec
mov
mov
cli
mov
xchg
lock
pop
inc
ljmp
sub
cs
fstps
sub
out
cli
and
popf
sarb
in
pop
lods
insb
and
add
adc
je
jae
xchg
or
push
or
int
pop
adc
jo
push
sbb
push
xor
xchg
lret
mov
icebp
scas
cmp
orl
xchg
mov
xchg
shr
in
loope
arpl
mov
sub
bound
mov
cmc
add
pushf
dec
sbb
pusha
xor
adc
icebp
call
popa
sub
jno
daa
lret
or
adc
mov
icebp
into
shll
ja
mov
xor
pop
fstps
sti
push
int
mov
fisttpll
pushf
xchg
cmp
and
test
mov
push
and
outsl
push
iret
out
outsb
push
mov
test
mov
ret
int
out
mov
ljmp
pop
push
sbb
jo
adc
or
adc
pause
and
clc
popa
mov
inc
dec
xchg
cmpl
mov
and
dec
or
sbb
push
xchg
inc
jge
or
cmpsl
push
mov
pop
insl
gs
xchg
mov
mov
ffreep
lock
add
mov
mov
mov
or
dec
adc
xor
bound
cwtl
jmp
lods
jns
or
sbb
aad
add
jae
nop
push
or
test
in
flds
mov
add
aam
xchg
inc
iret
enter
repnz
inc
mov
xchg
je
sbb
sbb
adc
divl
mov
aaa
and
sbb
inc
out
xor
lods
inc
push
xchg
fcoms
pop
jns
dec
hlt
lcall
or
mov
je
in
jno
out
les
mov
sub
inc
jmp
mov
in
dec
nop
inc
dec
enter
cmpsl
or
mov
cmp
stos
jnp
imul
sub
decb
sub
sti
jae
cs
xor
je
mov
jno
in
fisttpl
cmp
push
out
hlt
cmp
jecxz
and
add
push
xchg
in
lret
adc
sbb
mov
outsl
gs
pushf
mov
imul
jns
push
stc
inc
and
lods
test
movsl
test
mov
repz
and
push
dec
or
cmp
scas
push
pop
mov
dec
jl
add
aas
sbb
xchg
mov
cli
xchg
sub
shl
mov
test
stos
decb
mov
sbb
fs
inc
xchg
push
imulb
mov
push
inc
repz
lret
adc
mov
add
push
add
mov
mov
popf
loope
and
scas
out
sbb
push
sub
mov
inc
jae
inc
add
test
mov
pop
push
push
out
dec
mov
movsl
sub
mov
sub
je
aas
in
inc
pop
outsl
mov
push
xor
fbstp
sub
inc
push
sbb
movl
add
mov
lock
cmp
mov
enter
andb
mulb
popf
in
mov
mov
sub
js
mov
sbb
cmpb
leave
dec
add
jnp
push
jmp
imul
sub
or
jbe
add
mov
cltd
inc
pusha
sub
js
and
mov
scas
js
lock
mov
mov
cmp
fwait
test
arpl
add
fnstenv
xor
push
fwait
sbb
cld
in
xor
jg
push
in
call
ret
pop
bswap
xlat
divb
mov
mov
jnp
or
add
mov
fidivrs
add
or
adc
sub
inc
mov
jp
push
ja
insb
pop
insb
clc
ja
cmpsb
sbb
push
xor
cmp
std
mov
loop
dec
adc
sub
jnp
pop
pop
loope
pop
leave
lds
lret
icebp
mov
sub
ficoms
iret
cmp
adc
stos
mov
and
out
cmp
mov
cmp
cmp
stos
ja
lods
pop
insb
cwtl
pop
fwait
lcall
xor
adc
sbb
or
mov
js
xchg
scas
aaa
adc
cmp
fdivrs
rcll
lret
divl
mov
mov
gs
push
insb
pop
les
sbb
mov
test
jnp
jle
pop
jle
mov
mov
pop
rcll
movsl
loopne
cmp
jne
xchg
pushl
fdivrl
mov
call
mov
cmpsl
loope
ret
loopne
cltd
repnz
cs
cmpb
xorb
mov
push
mov
mov
mov
das
and
sbb
xor
mov
sbb
ss
pop
push
nop
jne
jge
shl
inc
xchg
sbb
fadds
dec
es
jo
aas
rcrl
iret
jne
mov
xchg
mov
add
shlb
mov
ljmp
sbb
stos
pushf
mov
aaa
cmp
mov
push
sbb
sbb
popa
addr16
mov
inc
out
sub
lea
inc
popf
and
std
cmp
jns
and
call
addr16
push
mov
mov
in
adc
sub
nop
pushf
out
xorl
daa
add
cmp
aad
lods
js
mov
cld
add
movsl
push
decb
rol
icebp
shrl
push
popa
dec
jle
add
xor
xchg
sub
pop
mov
cmpl
ljmp
icebp
popf
and
xchg
jmp
js
lods
imul
mov
sti
cld
sbb
fsub
dec
xor
nop
lds
mov
sbb
loope
and
aam
dec
addr16
xchg
mov
pusha
insb
add
cmpsl
adc
daa
lahf
cmp
idivl
int
subb
stos
lret
cs
loopne
mov
xchg
inc
repnz
cmpl
adc
add
mov
call
fwait
lods
lods
push
sti
jne
jb
out
test
pop
push
jle
xor
and
inc
subl
push
sub
pop
jb
cmp
test
stos
pusha
adc
push
xchg
stc
add
or
fldl
je
fwait
cmp
xchg
rcr
lret
fsub
jl
and
xchg
add
inc
stos
mov
mov
fwait
fs
fisubs
mov
adc
aad
mov
ss
fcomp
out
cmc
mov
pop
das
fstps
sbb
mov
jne
xchg
jle
loope
jg
ret
push
test
popa
cs
repnz
pop
das
dec
pop
mov
xchg
outsl
cmpsl
add
xor
loope
rolb
adc
push
rolb
lret
xchg
test
xor
and
out
repz
jne
or
push
lcall
add
mov
inc
pop
xor
ss
ret
pop
test
add
and
testl
pop
sbb
pop
dec
fiadds
xchg
fucom
jmp
jne
ja
fcmovne
push
cmp
push
xchg
xchg
movsb
add
fs
mov
pushf
in
or
adc
movsb
push
sub
push
pop
and
add
je
in
jl
mov
inc
add
cmpsl
xchg
adc
or
mov
adc
je
push
adc
testl
testb
xor
sbb
xor
add
mov
lds
sbb
and
mov
sbb
arpl
sbbl
aaa
and
sub
mov
mov
xor
lea
xlat
dec
jp
scas
push
jno
mov
repz
clc
aaa
mov
push
xchg
jle
cmp
das
shlb
mov
cmp
pop
mov
lea
ljmp
testl
imul
loop
and
dec
dec
rol
sti
mov
push
jnp
call
mov
clc
sar
mov
mull
mov
or
pushf
inc
xor
mov
aaa
fwait
pop
cltd
and
push
jne
jae
jg
repnz
xchg
push
enter
mov
adc
in
push
jne
sub
xchg
arpl
shll
out
repz
shll
add
cmp
and
rcrb
loope
and
mov
jns
sbb
jmp
stc
cmp
movsl
xchg
cwtl
adc
jno
adc
ja
mov
pop
mov
sub
jmp
push
mov
mov
repz
dec
fwait
cmpl
clc
or
xchg
push
mov
rclb
adc
xor
nop
jnp
ret
data16
out
mov
out
adc
lock
stos
add
movsl
stc
dec
cmp
je
mov
call
mov
push
stos
dec
movsb
insb
movsb
lods
ljmp
cmp
scas
push
fimuls
gs
push
andnps
stos
imul
nop
enter
sub
gs
std
jns
ret
push
sbb
fnstcw
mov
adc
bound
pop
and
mul
jge
stos
lahf
cmp
xchg
sahf
inc
xor
out
in
pop
movsb
push
inc
jl
xchg
sarl
cmp
sbb
jnp
cmpsl
mov
pop
mov
int3
pop
hlt
shl
scas
mov
cmpl
loopne
cmp
hlt
cmp
mov
mov
jnp
movsb
lret
xor
cli
sbb
mov
mov
in
dec
xchg
xchg
das
mov
sbbl
jmp
xchg
mov
mov
cltd
push
mov
vmovq
jle
pop
fsubrl
testl
inc
cmpsl
lcall
dec
shl
sbb
outsl
outsb
lods
cmpsl
loop
add
and
mov
jecxz
jl
ljmp
sub
push
int
or
dec
or
push
rcrb
aaa
or
xor
mov
rorl
rorb
pusha
test
jl
cmp
inc
jmp
dec
sub
out
into
mov
lods
add
js
mov
push
cld
fstl
add
mov
jbe
adc
and
rorb
mov
jp
fprem
shrl
sarb
xchg
adc
jne
je
add
mov
pop
mov
jg
mov
inc
pop
rol
clc
jno
adc
pop
in
shlb
mov
jg
ss
ret
dec
and
push
jl
jb
stc
mov
ss
lea
mov
sbb
dec
sub
ret
jle
xor
pushf
mov
jae
sbbl
rolb
push
leave
loope
sub
adc
push
clc
in
xor
pop
add
jg
xchg
insl
call
mov
push
mov
or
xorb
jbe
orl
cld
out
dec
cmc
int3
dec
aas
arpl
popa
fistps
hlt
ljmp
test
repz
mul
push
xor
negl
cmp
push
mov
xor
imul
fisubrs
pushf
jb
mov
lea
mov
mov
stos
sbb
pop
jb
mov
cwtl
loopne
filds
or
fcmovu
and
push
jmp
push
and
js
insl
add
or
or
mov
inc
mov
mov
loope
fwait
pushf
mov
mov
cmpsl
dec
lea
je
in
test
cld
arpl
pop
or
fisttpl
jb
lds
lret
lret
jle
dec
xor
push
pusha
mov
in
cmp
enter
testb
cmp
mov
mov
and
adc
xchg
andl
mov
jle
rcrb
pop
iret
cmpsb
scas
push
cltd
pop
sub
jmp
sbb
mov
push
fiaddl
mov
push
popf
in
popa
stos
popf
in
shll
add
mov
dec
js
sub
js
subb
jne
cli
leave
jge
imul
xchg
push
sub
sub
adc
dec
nop
inc
push
xor
lods
dec
arpl
aad
ret
popa
jp
fdivrl
xchg
cmp
loope
adc
jle
clc
inc
clc
xlat
rclb
imul
test
fs
test
icebp
and
cli
lea
nop
fiaddl
mov
pusha
cmp
jge
lds
iret
jbe
popa
lcall
cmp
jecxz
bound
mov
cmp
popf
fistpll
jne
xor
aam
pop
ret
mov
ficoml
subb
push
clc
dec
into
mov
enter
jle
dec
shlb
cltd
or
or
ja
pop
mov
inc
xor
inc
cs
in
sbb
pop
ds
je
jb
jg
lret
insb
call
cmp
fsubrl
xchg
insl
mov
jmp
sbb
cmc
mov
nop
sub
jmp
xchg
mov
stos
sbb
repnz
outsb
in
int3
int
out
stos
mov
xor
pop
cwtl
pop
out
adc
mov
lds
push
insb
mov
shlb
and
jno
fnsave
xchg
push
mov
lahf
mov
enter
jl
mov
scas
inc
pop
mov
aaa
nop
mov
xchg
push
and
xchg
ja
sub
je
or
push
jle
dec
jmp
mov
xchg
xchg
xor
push
cmpsb
clc
dec
adc
in
ret
and
out
pop
les
push
call
imul
ficomps
loopne
pop
shlb
mov
out
sub
pushf
stc
xchg
push
mul
push
data16
pusha
popf
lret
in
test
xor
jl
in
xor
jp
sar
mov
stos
enter
xor
loop
pop
pop
push
sbb
lock
sahf
int
lret
inc
cmpsb
sti
dec
or
sbb
mov
adc
ds
and
push
mov
mov
cs
mov
cwtl
aam
leave
adc
push
push
pop
mov
in
push
cmpsl
jbe
mov
sub
shll
mov
mov
cs
adc
and
mov
mov
hlt
stos
in
xor
xchg
and
imulb
int3
push
or
xor
adc
int3
dec
mov
mov
sbb
repnz
and
lea
push
add
cmp
mov
mov
stos
jb
test
jp
insb
cmp
inc
sbb
or
inc
or
inc
dec
int3
lret
scas
sub
sub
sbb
icebp
or
inc
pop
xchg
add
xor
dec
dec
stos
mov
fstpt
insl
cltd
push
push
dec
mov
xchg
in
sbb
bound
inc
dec
jmp
add
repz
inc
push
loope
je
dec
ret
inc
stos
dec
stc
sbb
pushf
sub
jnp
stc
xchg
clc
leave
dec
mov
push
scas
or
shrb
mov
xchg
or
cmp
or
adc
pop
lods
negb
push
mov
sub
cmc
jae
ret
mov
lods
and
in
mov
pop
iret
mov
jns
inc
push
xchg
cltd
shll
cmp
mov
mov
mov
fldl
addl
dec
mov
dec
xchg
mov
mov
movsb
mov
pop
dec
push
int3
repnz
mov
dec
pop
cmp
sub
out
icebp
loopne
pusha
pop
lods
add
sbb
cmp
shrl
or
out
mov
sbb
outsb
jecxz
int3
xchg
xchg
and
mov
dec
adc
pushf
pop
sbb
dec
xchg
jle
mov
fistps
popf
fnstenv
arpl
fisubrl
loop
push
add
push
cmp
addb
neg
in
xchg
popf
inc
pusha
dec
mov
xchg
pop
out
xchg
push
mov
ret
pop
aam
rorb
push
call
shrb
shlb
cmp
dec
inc
lret
iret
xchg
add
icebp
jecxz
loope
add
lock
mov
xor
in
mov
cltd
xor
mov
and
cltd
mov
testl
and
int3
cmpsb
cmp
sub
aas
pop
mov
pop
fldl
adc
adc
lret
scas
in
mov
cli
andl
or
mov
jne
hlt
push
loop
push
mov
xor
mov
fstpl
jnp
and
jl
mov
mov
int
lds
and
jnp
and
jb
xchg
mov
ljmp
lock
mov
push
cmp
dec
ss
gs
sub
stos
fmul
pop
out
adc
imul
inc
push
aad
pop
sub
fs
out
pusha
sub
hlt
stc
dec
push
dec
fs
cmp
pop
or
push
lods
or
mov
xchg
pusha
xchg
pop
js
in
addr16
negl
fldenv
jge
mov
cmp
sub
clc
sub
or
dec
sub
add
add
xor
xlat
loope
cld
inc
push
pusha
rolb
and
add
mov
or
xor
inc
pop
jg
add
inc
imul
aam
adc
pop
push
jecxz
ret
jg
int3
decb
inc
clc
jo
sbb
pop
xchg
inc
in
out
xor
addr16
popa
fmuls
push
pop
outsl
lahf
andb
pop
ss
cmp
add
pop
adc
jl
mov
iret
call
push
out
xlat
mov
and
pop
pushf
rcrb
mov
inc
xor
xchg
imul
inc
cmp
and
jbe
xchg
jb
fwait
mov
xchg
push
xorl
sub
inc
pop
jl
ret
cmc
and
push
push
adc
push
inc
mov
loop
jge
push
nop
and
mov
movsl
dec
dec
test
fs
jecxz
cmp
mov
push
inc
scas
loop
movsb
add
int
stc
aas
out
push
mov
dec
inc
loope
aaa
call
jo
popa
pushf
xorl
popf
push
lock
clc
out
dec
loopne
rorl
mov
jbe
shrb
setge
pushf
lods
sbb
pop
dec
ljmp
lods
xor
cwtl
stos
fstpt
fstpt
pushf
mov
xor
les
pop
push
popf
xchg
add
mov
inc
jmp
sbb
sbb
push
out
lds
ficompl
dec
movsb
jne
xor
or
mov
cmp
test
pop
repz
cld
shr
adc
insb
clc
popf
leave
imulb
adc
jbe
inc
shlb
addb
xchg
and
cmp
loopne
shll
lds
inc
outsb
int3
pop
outsb
pop
push
popf
bound
popf
xor
and
call
aaa
dec
lahf
xchg
mov
pop
inc
jl
stos
fcoml
xor
movsb
iret
daa
mov
mov
xchg
adc
hlt
add
outsb
adc
pop
ljmp
fmuls
in
fsts
mov
daa
push
lds
xchg
in
push
jo
in
inc
std
daa
sub
mov
jnp
sub
test
mov
push
imul
fcoms
cmp
mov
jge
dec
inc
mov
mov
dec
adc
neg
push
sub
ds
sub
sahf
cmp
cmp
push
jbe
pop
pop
lea
xchg
mov
pop
popa
pop
pushf
jno
ljmp
jae
jecxz
movsl
adc
xlat
aas
mov
dec
outsb
popf
mov
out
mov
xlat
cmp
dec
mov
sub
cwtl
adc
repnz
fisttpll
dec
les
arpl
aad
xchg
xchg
or
fisttpl
cmp
ret
popf
mov
dec
jo
pcmpgtd
cs
lahf
sub
cmp
mov
decb
movsb
push
outsb
jb
test
sarb
jmp
ja
xchg
dec
loop
and
sub
jg
icebp
xchg
mov
adc
jo
cmpsb
repnz
orl
push
jmp
ja
xchg
mov
adc
inc
aas
pop
add
sbb
mov
clc
fimull
add
cmpsb
sbb
outsb
or
daa
daa
sbb
dec
sbb
fisttpl
mov
clc
test
out
xchg
pop
test
mov
lods
pop
xor
repz
cltd
andl
or
lahf
pop
sbb
and
jbe
xchg
mov
adc
lahf
mov
out
gs
push
test
aam
mov
out
or
insl
push
push
pop
or
sar
lcall
hlt
mov
cmp
xor
repnz
rorl
inc
sub
mov
ss
js
into
mov
mov
cmp
add
mov
lock
inc
dec
icebp
xchg
mov
xchg
mov
mov
cmp
icebp
xor
add
lods
add
sbb
sbb
jecxz
int3
loopw
imul
push
fdivl
mov
xor
das
scas
fcoms
mov
add
pop
jne
test
mov
hlt
jno
leave
addr16
add
outsb
mov
dec
sub
movsb
stc
sahf
or
fmul
fcmovb
push
add
pop
stos
insl
loop
mov
aad
insl
inc
add
sbb
cld
push
mov
cmpsl
push
imul
sti
cmpsb
or
ret
outsl
sub
icebp
lret
xor
pop
mov
in
xlat
adc
xchg
scas
cmp
inc
addr16
push
fidivrs
push
or
aaa
add
sahf
mov
pop
pop
cmpsb
or
xchg
pop
pop
out
fwait
ds
sub
cmp
fstps
jle
lds
int
cmp
cmc
add
imul
jle
leave
leave
pop
and
adc
push
add
xadd
pop
shll
pop
movsl
cmc
cmpl
jecxz
mov
cld
push
adc
push
ret
jge
clc
les
dec
scas
mov
ss
jns
fwait
push
ja
fcomps
inc
jecxz
aad
sub
jno
ffree
orl
inc
lods
and
sbbl
scas
or
sbb
clc
lods
jo
loop
jae
jo
repz
xlat
enter
punpckhdq
rcrl
outsl
data16
testb
test
lock
clc
pushf
pop
jp
and
dec
mov
mov
fsubr
data16
in
pop
cmc
sub
out
dec
les
jns
xchg
repnz
mov
push
dec
inc
das
or
sbb
sub
cmpsb
daa
frstor
push
adc
sub
aad
or
dec
adc
dec
xchg
dec
mov
mov
insb
inc
or
dec
pop
push
mov
scas
add
shl
mov
or
rcr
mov
pop
inc
add
mov
xlat
dec
or
dec
daa
lods
stc
pop
fldt
ds
xchg
sub
mov
adc
movsl
push
jb
je
in
pop
rcrb
mov
fwait
iret
inc
cmp
adc
cmp
mov
sub
inc
pop
lock
xchg
sarb
mov
mov
jmp
addr16
shll
pop
sti
fucomi
mov
ds
shrb
pop
jl
push
jo
jl
cmpsb
hlt
adc
pop
stos
jbe
mov
pop
pushf
or
scas
loope
mov
movsb
cwtl
fst
pop
les
insl
test
rclb
mov
mov
mov
mov
popf
dec
push
orl
cmpsl
leave
pop
push
shl
test
popf
dec
xchg
push
jne
lock
push
mov
negb
clts
or
cld
push
out
lock
or
test
sub
add
inc
dec
pop
pop
sub
cs
sti
mov
cmpsb
push
xchg
scas
mov
mov
sbb
jno
and
cwtl
sahf
in
lahf
ss
mov
les
pop
mov
add
mov
jmp
mov
aam
clc
int
loope
test
inc
dec
or
test
pushf
notb
push
out
cld
fimull
sbb
nop
jb
mov
sbb
mov
or
sbb
and
test
dec
ja
incb
ja
movb
aaa
lcall
lods
in
imul
push
lahf
jecxz
fwait
mov
jg
aas
and
lds
aad
push
mov
stos
dec
jle
pop
jae
pop
inc
lret
mov
ret
jnp
pop
mov
xchg
test
push
and
add
xlat
jg
adc
mov
and
lods
mov
dec
test
jmp
mov
jge
pop
jecxz
cwtl
sub
mov
pop
out
mov
mov
inc
and
ds
popf
int
xchg
dec
ljmp
jecxz
cmc
xor
adc
pop
int3
pop
outsb
sti
fstpl
aam
mov
inc
push
jne
push
addr16
out
insb
lahf
loop
push
push
xchg
lds
leave
ret
push
ss
pop
call
repnz
or
jecxz
lock
push
in
pop
fstpt
mov
daa
cmpsl
outsl
xchg
and
rcrl
add
fcmovbe
daa
rorb
fmul
xchg
inc
jno
xchg
cmp
data16
or
cmpsb
mov
pushf
iret
ret
movsb
shll
mov
xor
outsb
or
push
movsl
and
xor
mov
jae
stos
pop
push
pushf
push
out
sub
mov
push
jg
xchg
or
fstp
sub
fisubrl
rorl
pop
insb
xchg
push
sbb
mov
adc
daa
push
aam
xor
xchg
in
add
inc
push
notb
pop
push
jnp
dec
cs
inc
push
cli
ja
pop
imul
in
jge
push
into
lds
enter
inc
xchg
outsl
or
cmc
lods
pop
popa
into
inc
sub
xchg
cmp
loopne
stos
cwtl
int3
or
fldl
cli
test
sbb
in
cltd
add
xchg
mov
mov
in
push
pusha
movl
sti
jle
fistl
roll
lahf
inc
test
aam
push
lods
inc
out
mov
mov
mov
das
test
sub
cltd
clc
dec
xlat
scas
stc
pop
inc
mov
ja
mov
xchg
pop
pop
jmp
cwtl
js
mov
jne
or
add
and
mov
or
push
fs
jo
fisttps
inc
lahf
and
fcmovne
scas
test
xor
sarb
jl
iret
mov
in
les
mov
js
ss
push
ficomps
arpl
mov
sub
mov
dec
pop
adc
inc
mov
loop
sub
mov
mov
xor
push
aam
push
or
add
mov
add
and
mov
mov
imul
cwtl
xchg
fisttpl
xchg
adc
jae
xor
dec
inc
or
cmp
adc
add
xor
sbb
aad
xchg
jmp
rorb
push
sbb
ret
pop
lcall
popf
lret
fisubs
popf
mov
sidtl
int3
cltd
push
mov
xchg
and
sbb
imul
sub
jecxz
jo
xchg
push
jns
inc
dec
cmp
ss
rolb
xor
pop
or
dec
xor
ror
js
in
dec
nopl
pop
lcall
rclb
or
ljmp
lods
pop
mov
push
cmp
adc
shlb
xchg
call
and
push
ja
popa
addr16
xlat
mov
out
andb
pop
test
jmp
add
xor
pop
sbb
add
lcall
sbb
jb
sahf
and
push
daa
loope
adc
outsl
test
push
add
fs
test
dec
cmc
test
mov
mov
and
xor
push
fists
sbb
jecxz
mov
ret
jne
sahf
pop
push
or
push
push
fstpl
mov
mov
in
mov
arpl
cld
notb
mov
out
repnz
inc
ret
xor
xchg
ret
fistpll
push
jbe
insb
outsl
mov
cmp
mov
push
cmp
mov
stc
out
in
xor
jmp
xchg
das
cmp
or
orb
dec
or
test
shlb
mov
mov
or
dec
ljmp
push
add
push
fcoms
add
push
inc
aas
test
dec
out
and
jmp
pop
call
adc
inc
pop
add
cs
or
fnsave
xor
mov
jne
out
mov
fcomps
push
or
repnz
mov
pop
and
out
xchg
mov
lea
in
loope
sub
addr16
fcmove
push
inc
outsl
ljmp
imull
cmp
dec
ret
add
cmpl
aam
dec
mov
dec
sub
in
cli
sar
insl
xchg
mov
rcll
aaa
dec
gs
cwtl
add
fidivrl
shrb
mov
mov
fisubrs
jle
loope
push
shlb
sub
jl
jl
add
jle
mov
fcoml
or
cmp
dec
mov
imul
mov
sub
sti
ljmp
mov
flds
pop
nop
rcrb
sub
sub
repnz
cmp
and
or
or
or
lea
cmp
jbe
sbb
fwait
mov
and
xchg
mov
mov
mov
push
xchg
std
cmp
rcll
fcmovnb
push
mov
jbe
pop
jae
std
add
roll
repnz
xor
sub
movsb
or
out
lret
jge
loop
leave
push
ret
adc
fcmovnu
add
into
lcall
inc
das
cmp
in
mul
push
rclb
loope
hlt
mov
ljmp
lods
lea
in
jno
jle
mov
mov
outsb
popf
imul
mov
sarb
push
hlt
stc
add
sbb
fwait
push
fwait
push
fucomip
ret
xchg
cmp
sub
sbb
int3
cli
and
xor
and
cmp
dec
jp
dec
fmuls
repnz
and
jns
jmp
stos
je
ja
rorl
add
and
jecxz
add
jge
or
ficomps
adc
pushf
jg
mov
xchg
cmpsl
fstpt
mov
mov
sahf
jecxz
mov
xchg
lahf
stc
jae
push
mov
shll
xchg
xor
mov
sbb
inc
mov
cld
loopew
lods
pop
xor
pop
cmp
mov
imul
frstor
rorl
iret
xchg
fdivrl
fstps
pop
divb
and
mov
mov
jns
mov
xor
repz
cmc
push
in
push
shrb
orl
outsl
js
dec
fmulp
sub
xchg
pop
push
cmp
stos
ror
sahf
mov
lods
mov
leave
adc
cmp
cld
dec
in
hlt
add
pop
ret
pop
fisubrl
insl
mov
mov
lods
jbe
lret
fldl
push
fsubrs
scas
mov
je
cli
mov
mov
or
data16
jmp
cmc
das
rol
pop
ffreep
mov
ret
ret
cmc
test
xor
jecxz
enter
dec
mov
xchg
cmpsb
push
and
jmp
inc
mov
lahf
mov
pop
push
sti
pinsrw
out
mov
adc
lock
pop
or
sub
repz
arpl
push
adc
cmc
loop
f2xm1
mov
std
cmp
imul
dec
pop
xlat
jnp
into
dec
mov
jae
xchg
lcall
js
xor
xchg
sbb
pop
shrb
jo
stos
inc
or
xchg
shll
mov
ret
inc
lret
and
add
cmp
dec
dec
mov
lret
jnp
pop
mov
ljmp
mov
test
cmp
sti
or
daa
inc
lods
lock
inc
inc
mov
or
adc
pop
mov
xlat
push
mov
fcompl
ljmp
lods
lock
jbe
lods
lcall
push
cmp
aaa
cmpsb
dec
leave
mulb
call
inc
add
xchg
lods
lds
xchg
and
shr
xchg
xlat
jno
jecxz
sbb
dec
aaa
movsb
les
gs
pop
push
xor
fmull
xor
pusha
add
and
add
add
pop
ljmp
mov
mov
arpl
xchg
mov
pop
pop
xchg
addr16
lcall
movsb
jae
sub
dec
insb
stos
ret
imul
jecxz
rolb
icebp
sub
sbb
xchg
sbb
pop
xchg
jg
cli
cmc
repz
cmp
cmpl
scas
in
xchg
push
loopne
in
repz
dec
inc
or
fnstenv
sti
cmp
shlb
mov
dec
adc
mov
mov
adcl
push
jmp
mov
pop
mov
and
jge
mov
xchg
iret
pusha
mov
movsl
mov
xlat
cltd
push
mov
xor
or
mov
mov
sbb
adc
sbb
sbb
jle
fildl
cmp
cli
testb
jno
sbb
andb
jl
jp
xor
shrb
dec
pop
mov
push
or
sbb
mov
jmp
cmc
push
mov
js
test
sti
mov
sbb
add
push
imul
idivl
into
mov
push
leave
mov
sub
loopne
jnp
cmc
fiaddl
dec
or
jecxz
xchg
pop
stos
rcrb
aad
push
and
inc
in
mov
adc
ret
pop
out
je
mov
mov
mov
ljmp
mov
xchg
loopne
pop
jp
lods
out
jnp
jle
mov
fbstp
adc
push
inc
negb
xchg
or
jae
stos
xor
push
aad
imul
loop
add
inc
inc
mov
arpl
mov
xchg
das
pop
js
cmpsb
enter
jns
cmp
mov
push
nop
sti
xchg
fsubs
call
ljmp
jmp
cld
push
adc
adc
xlat
int3
movswl
repz
sbb
add
dec
mov
cld
or
mov
pusha
in
jo
into
and
addb
add
push
clc
imul
push
inc
dec
mov
pop
lahf
adc
leave
xchg
jnp
push
push
stc
xchg
lahf
mov
xchg
mov
push
in
inc
sub
inc
nop
sub
dec
in
dec
outsb
xchg
test
mov
sbb
mov
cmc
mov
dec
pop
push
rorb
and
stc
std
mov
adc
xchg
mov
in
add
movsl
fldcw
outsb
sahf
push
mov
stc
mov
fdiv
lret
cmp
push
insl
in
xchg
dec
icebp
add
mov
jbe
inc
mov
or
inc
scas
addl
loop
iret
or
push
pop
test
filds
ret
xor
pop
mov
jb
or
rorb
cmp
adc
or
aas
int3
in
dec
outsb
mov
mov
out
lcall
xchg
leave
fsubrs
cmp
and
iret
fs
xchg
adc
ds
or
xchg
sbb
and
insb
stc
add
popf
stos
and
mov
aas
sti
out
inc
pushf
jg
xchg
or
out
popa
push
sti
in
inc
addr16
lret
in
jo
push
xchg
and
push
int3
sub
into
sub
loope
lahf
add
fadd
jbe
ds
dec
jp
test
cld
mov
clc
sbb
mov
scas
and
adc
push
out
mov
clc
sbb
mov
sub
in
popf
stc
in
sub
shll
inc
stc
repnz
add
add
outsl
sbb
xchg
mov
repnz
idivb
test
dec
mov
pop
in
inc
pop
and
out
ss
inc
or
and
dec
imul
xchg
cld
xor
repnz
lock
xor
cmp
addl
pop
dec
les
inc
loop
aad
xor
jmp
inc
rclb
xlat
jp
negb
jbe
cmpsb
mov
les
pop
pushf
dec
mov
ret
mov
test
popa
popl
mov
fidivrs
test
jb
mov
mov
dec
das
inc
sbb
jo
pushl
pop
push
mov
pop
dec
sbb
in
shl
inc
xor
inc
and
mov
xlat
arpl
shll
in
cmp
and
ret
pop
inc
mov
push
pop
pusha
mov
and
rorb
ss
jbe
lcall
scas
push
dec
insb
pop
stc
xchg
fstpt
sbb
imul
add
rol
dec
fwait
dec
sub
jnp
push
mov
out
and
or
imulb
inc
or
pop
out
dec
dec
call
test
lock
mov
push
in
fcomps
cld
das
mov
push
rcrl
sbb
dec
mov
call
test
out
insl
loop
push
and
push
aam
insl
and
jo
insl
inc
pop
lock
mov
sub
and
sbb
add
ja
shlb
sub
rcr
leave
stos
pop
aas
or
sub
cld
pop
sub
sbbl
adc
cs
daa
repnz
repnz
cmp
cmp
aad
adc
mulb
jbe
push
sahf
add
sahf
dec
cmp
outsb
arpl
je
add
xchg
inc
cmc
lret
xchg
outsl
mov
cs
mov
inc
or
cmp
mov
jle
pop
aaa
loop
push
sahf
adc
repnz
jmp
mov
inc
mov
test
and
dec
and
cli
mov
or
outsl
pop
sub
imul
sub
test
sub
ja
xor
push
mov
stos
pusha
inc
in
in
test
cs
mov
xchg
imull
in
pop
dec
inc
mov
lea
or
mov
inc
mov
rcrl
rclb
outsl
mov
cli
add
inc
push
enter
jbe
les
aam
ret
mov
fcomps
test
mov
xchg
insb
push
dec
add
mov
lds
adc
xor
adc
jmp
xchg
mov
test
loop
mov
rcll
addb
sub
xor
fwait
lea
adc
shl
sar
mov
or
push
adc
sub
xchg
mov
int
cmp
push
pop
push
fs
pop
xlat
mov
dec
lods
cmpb
or
bound
push
les
and
insl
aam
test
mov
jge
in
hlt
cld
data16
xchg
lods
push
enter
jecxz
dec
idivl
mov
lock
jno
adc
adc
and
jno
ret
popa
test
lods
das
data16
hlt
in
adc
pandn
scas
pushf
or
jb
or
adc
gs
pop
orb
xchg
rol
jp
xor
jbe
divb
pop
std
pop
adc
dec
ss
fs
inc
sub
xchg
sbb
repz
test
cld
jmp
jmp
ljmp
jecxz
popf
and
sub
fdivrs
pop
test
leave
loope
negl
ljmp
jb
mov
xor
ss
mov
outsl
dec
or
and
stos
pop
mov
sahf
add
and
xor
cmp
mov
fwait
and
sbb
xor
js
cmp
inc
xchg
push
scas
adc
cltd
pop
in
dec
ret
push
sub
inc
icebp
hlt
cld
stc
in
and
mov
jns
add
xlat
mov
or
das
xor
shrl
xchg
jl
inc
mov
stc
cltd
stos
outsl
mov
cltd
in
movsl
jb
add
test
iret
and
cltd
push
popl
rorb
lods
leave
iret
out
hlt
loope
ficoms
std
cmpsl
and
or
movsl
cmpl
push
loope
dec
in
and
lret
xor
push
xor
out
dec
aad
std
ja
mov
loope
add
cltd
gs
dec
sub
movlps
push
mov
cmp
and
loopne
outsl
pop
icebp
xchg
pop
mov
xchg
cmpsb
mov
pop
lods
dec
mov
ret
adc
mov
arpl
adc
in
shl
fnsave
movsl
jge
pop
out
mov
adc
push
xor
hlt
stc
sub
xor
lret
testl
lea
mov
inc
xchg
adc
mov
stc
loope
popf
adc
sub
movsb
pop
out
fsubrl
mov
fdivs
aas
out
jno
sbb
out
xorb
loopne
sti
ret
jae
aas
jmp
aas
push
add
jp
cmpsl
iret
fdivrl
mov
in
icebp
mov
xchg
mov
leave
jge
jg
scas
cwtl
mov
push
cmp
add
loopne
insb
mov
pusha
mov
adc
int3
and
loop
and
lods
adc
cmp
ret
ret
mov
loope
push
movsl
test
jmp
pop
mov
jmp
fsub
add
jae
add
cmp
repnz
jbe
xor
iret
cmp
cmc
cmp
mov
pop
lods
fimull
add
popl
adc
mov
cmp
lods
mov
imul
cld
sub
jp
or
aad
aas
jnp
cmpb
or
mov
mov
pushf
fsubrl
bound
fiaddl
pop
cs
or
xor
xchg
jg
or
xchg
lods
das
enter
jns
xchg
sub
dec
mov
rcrl
xor
pop
cmc
or
push
xchg
mov
xchg
mov
mov
sub
sbbb
inc
mov
xchg
dec
and
pushf
mov
push
add
xor
fwait
sub
cmc
sti
jle
sub
xchg
loope
inc
loopne
jo
inc
or
push
mov
repnz
fstpl
test
popf
add
mov
xor
loopne
ds
test
mov
mov
cs
pusha
jno
xchg
lods
lods
pop
or
dec
mov
mov
lret
cmp
sbb
fucomp
xor
inc
cmp
mov
mov
fldt
sub
addr16
mov
sbb
mov
pop
movsb
mov
add
jb
push
push
arpl
ds
xor
fdiv
xor
ret
pop
xor
inc
jge
jle
scas
add
rcrb
mov
mov
insb
xorb
sti
mov
add
loop
or
les
adcb
xor
add
xchg
xor
movsb
in
cmc
outsl
test
xchg
jge
test
aaa
mov
int3
jne
jge
cmpsl
shrb
das
in
std
push
mov
lds
or
jmp
mov
jp
in
fmull
lret
xchg
test
clc
loop
push
pop
cltd
popa
out
adcb
ror
inc
hlt
cmp
xchg
clc
lods
adc
fdivrs
stos
push
mov
fwait
sahf
lock
mov
adc
jno
pop
xchg
jno
outsl
ljmp
jge
pop
cmp
repz
add
xchg
out
mov
sub
push
mov
sub
sub
fs
js
mov
pop
lock
aad
xor
test
cli
loope
mov
adc
xchg
pop
pop
fcoms
mov
adc
lock
fldenv
jnp
out
fildl
jge
sub
leave
pop
push
cmc
imull
xor
lods
cmp
adc
jl
pushf
push
or
loopne
jae
cmc
xor
mov
js
stos
test
jg
int
and
in
xchg
std
sbb
out
and
loope
mov
test
lcall
shrb
mov
push
xor
std
mov
imul
hlt
cmpsl
sbb
adc
adc
mov
call
sub
xchg
xor
xchg
xchg
notb
fsubr
hlt
fldcw
push
clc
fsubrs
cmp
scas
aad
pop
lock
int3
filds
add
mov
and
mov
sbb
adc
test
icebp
and
ja
push
int3
sub
mov
and
bound
and
clc
xor
add
inc
mov
jns
add
jmp
scas
enter
sub
cmp
xor
mov
push
pop
lret
jl
sbb
loop
cmp
sbb
mov
test
dec
testl
in
jo
mov
mov
call
insl
ret
mov
xchg
cmp
sub
insl
cmp
mov
imul
dec
lahf
inc
xlat
xor
sub
mov
mov
add
push
jae
adc
fldenv
mov
mov
shrb
mov
jp
adc
xlat
pop
jecxz
cli
pop
sbb
stos
mov
jns
push
and
xor
pop
and
jb
push
fdivl
mov
aaa
fistpll
xor
cwtl
iret
pushf
pop
jb
sahf
adc
mov
mov
in
cmp
adc
mov
push
dec
icebp
fcoml
cmp
xchg
outsb
lret
mov
dec
sub
and
fldcw
in
jge
sbb
xchg
xchg
xchg
pop
and
adc
xchg
out
xchg
lret
xchg
mov
repz
pop
pusha
into
lret
fwait
mov
ja
stos
lret
cmp
pop
testl
roll
mov
and
fildl
cmpsl
mov
int
dec
sub
aas
fs
in
fildl
jb
mov
xlat
inc
ret
pop
push
add
shrb
inc
mov
fwait
jg
or
push
shrb
mov
xchg
cmp
sub
pop
xor
mov
fwait
mov
pop
mov
test
add
gs
xor
lret
push
cli
xchg
mov
sub
mov
ja
test
testb
lret
or
push
out
test
mov
jmp
adc
lahf
fcomps
aad
iret
dec
insb
out
add
cmp
out
bound
aam
adcl
test
adc
mov
adc
sub
iret
sub
jns
sub
push
outsb
adc
lods
pop
mov
test
push
out
jne
loop
aaa
pop
paddusw
cmc
stos
dec
push
stc
clc
push
push
packsswb
sahf
jl
add
mov
xchg
inc
mov
jmp
pop
nop
mov
test
imul
sub
test
inc
adcl
xlat
push
ret
pusha
inc
sbb
cmpxchg
xor
stos
sub
popa
cld
mov
mov
rclb
xchg
mov
stc
mov
stc
pop
adc
out
loop
or
bnd
mov
repz
into
aad
xorb
pop
mov
sti
rorb
or
xor
rorl
dec
repnz
or
mov
out
iret
loope
pop
dec
push
add
in
mov
jp
push
mov
xor
sbb
push
cmp
in
xchg
sub
stos
jecxz
testb
das
bound
jmp
cli
cmp
xor
pop
dec
test
sub
xchg
int
mov
pop
out
mov
ja
xor
gs
movsb
mov
pop
add
mov
jl
and
xor
in
ret
ds
sub
add
ret
lods
push
jo
cmp
fs
pop
mov
jmp
ja
out
or
nop
jb
or
movsb
imul
out
aas
sarb
jb
dec
outsb
aam
pushf
cltd
aaa
jp
adcb
lods
repz
lea
inc
sbb
mov
mov
adc
and
xchg
or
adc
push
push
cltd
ja
lock
cs
and
roll
cmp
dec
repnz
idivl
sub
pop
adc
sbb
loopne
stos
and
into
lods
outsb
aaa
loopne
or
sbb
mov
mov
dec
inc
fisubrs
and
sub
and
das
leave
jmp
or
leave
pop
hlt
push
rorb
mov
xor
pushf
dec
mov
sub
push
stos
and
sub
imul
or
xchg
inc
push
mov
repz
sub
adc
dec
sbb
pop
sbb
mov
sbbl
sub
addr16
in
mov
push
sbb
sub
movsb
test
push
stc
dec
adc
mov
inc
add
pop
mov
pop
lcall
cmc
js
push
mov
inc
jne
sti
test
aam
insb
fsts
cmp
jecxz
cs
in
xchg
stc
inc
call
mov
popf
pop
clc
movb
xchg
insl
and
mov
lds
push
daa
add
mov
dec
xor
fldt
xor
cmp
and
mov
mov
mov
ljmp
jns
icebp
loop
mov
mov
stc
mov
jmp
inc
repz
arpl
int3
das
lods
and
movsb
add
into
cmp
js,pt
push
sub
decb
cmpsb
cs
jns
sbb
sbb
adcl
lret
push
inc
enter
mov
sub
pop
shrl
ds
add
or
lret
cmp
lock
mov
inc
dec
fimuls
xor
pop
dec
jnp
mov
int
andl
jo
inc
in
in
or
cmpb
adc
stos
stos
xchg
jg
xchg
cmp
loope
adc
lods
mov
mov
lret
cmp
mov
pusha
push
test
mov
push
xchg
icebp
int
or
sti
mov
les
push
aam
loopne
jl
or
sub
sarb
es
pushf
mov
stos
adc
jg
movsl
push
std
lcall
pop
hlt
jno
wrmsr
mov
int3
add
mov
or
cmpsb
jbe
jg
add
je
test
scas
sti
cmpsb
subb
repz
sbb
dec
jg
inc
scas
rcrl
adc
pop
fsubl
loope
sti
jg
cmpl
hlt
ds
dec
pop
jbe
cmp
xchg
stos
inc
xadd
lret
pop
in
and
dec
xor
and
dec
xor
push
aad
sub
push
out
bnd
inc
mov
mov
sub
xor
enter
je
xchg
mov
idivl
inc
jne
arpl
outsl
pop
add
sbb
mov
jb
pop
fdivl
jmp
inc
jecxz
bound
dec
cmp
pushf
movsl
inc
iret
mov
pop
jecxz
adc
pushl
movsb
dec
filds
push
nop
add
add
mov
sbb
movsl
dec
add
jecxz
sti
leave
jo
leave
xor
sahf
inc
xor
cmp
lret
dec
mov
push
jo
xor
insb
xorl
cmp
loope
cmp
cltd
or
push
lret
stos
pop
ss
std
shlb
dec
mul
and
leave
clc
sub
ret
xor
sub
xor
pop
out
jle
ja
clc
jno
sarb
add
mov
cmpl
sbb
inc
mov
pop
xchg
jnp
push
sbb
gs
cmpsl
mov
out
dec
fmul
mov
out
inc
lds
mov
sub
mov
jecxz
inc
inc
leave
dec
push
sbb
sub
inc
jg
add
cmpsl
cltd
sti
cmp
dec
jno
fs
jnp
pop
ds
lods
aad
pop
ret
sti
fcomps
mov
shrl
push
outsb
call
in
or
inc
insl
fs
push
adc
inc
shrl
pop
cmp
out
mov
gs
ss
xchg
fiadds
mov
dec
test
jle
orl
adc
lahf
push
iret
xchg
stos
js
jno
sbb
add
imul
push
test
loopne
inc
insl
push
push
gs
rclb
ret
jge
repnz
fadds
jl
lret
ds
mov
mov
push
test
js
push
cmpb
xchg
aam
clc
into
sbbl
aas
push
dec
xchg
xor
push
add
ljmp
gs
fst
xchg
xchg
mov
xchg
jle
mov
pop
lea
call
sbb
pop
and
push
pop
shrb
cmpsb
or
inc
mov
adc
iret
test
addb
and
mov
jge
rcl
push
sub
cwtl
ja
std
cmpsb
in
adc
mov
add
dec
lret
loopne
pop
lock
lock
jbe
inc
cmpsb
cmp
jmp
xor
and
push
inc
pop
ja
cmpsb
dec
cmpsb
pop
xchg
push
loop
xor
adc
jmp
mov
jbe
mov
and
jmp
dec
push
jne
and
sub
mov
pop
jge
in
push
pop
xor
add
or
or
push
sub
pop
imul
cwtl
sub
js
jno
mov
std
arpl
sbb
mov
js
data16
mov
outsb
dec
dec
pop
pop
or
insl
xchg
test
jl
pop
repz
std
sbb
mov
mov
push
aas
xchg
xchg
inc
mov
cmp
pop
xor
sub
pop
xchg
push
out
fwait
in
ja
rol
fldl
jecxz
sbb
cmc
lds
or
mov
jnp
scas
or
pop
jecxz
mov
mov
push
jo
insl
dec
lock
fnstcw
mov
insl
pop
ret
imulb
jle
cld
lahf
pop
popf
mov
pop
add
cmp
push
jbe
outsb
dec
dec
cmpsl
push
push
mov
mov
or
fisttpl
lcall
imul
adc
adc
je
shrb
mov
fisubl
push
dec
ljmp
sub
adc
je
add
mov
adc
jge
loopne
xchg
xchg
add
xor
test
js
dec
push
mov
cmp
sub
xlat
ljmp
push
sub
fdivs
dec
push
mov
mov
dec
sub
aas
movsb
mov
shrw
repnz
mov
cld
fildll
pop
decb
std
andb
mov
ljmp
cmp
cmc
ljmp
out
cmp
push
add
xchg
and
imul
jns
dec
cld
or
dec
or
xchg
xor
out
xor
loopne
jne
test
adc
sti
pop
fisubs
mov
push
test
mov
iret
xchg
push
sub
mov
sub
int3
add
lahf
stos
cmp
lret
push
aaa
mov
cld
mov
rcr
push
inc
cltd
jae
xchg
negb
in
pop
out
or
sub
adc
movsb
stos
ja
pop
xchg
sub
jno
iret
bound
or
into
inc
xor
loope
sub
or
xchg
imul
cs
xchg
inc
fwait
inc
xor
adc
adc
movsl
or
imull
jle
js
jbe
sbb
into
mov
push
jbe
int
int
lock
repz
aam
sub
stos
cltd
jb
pop
jb
sbb
dec
mov
fdivr
shl
mov
lret
in
push
xchg
movsb
xchg
jb
movsl
out
xor
dec
ss
push
shl
mov
aad
jg
out
mov
add
inc
and
push
adc
fbld
inc
into
xchg
fists
sub
push
testl
sarb
sub
fnstcw
sub
pop
std
add
mov
stos
add
push
cmp
ficompl
or
pop
ret
scas
cmpsl
dec
add
mov
or
push
push
scas
out
or
fisttpll
push
test
pop
push
outsl
cmp
and
jbe
pop
adc
fwait
test
js
push
pop
mov
add
push
mov
and
sbb
mov
push
loope
aam
fnop
mov
adc
mov
jle
dec
xchg
mov
adc
jbe,pt
fcoml
enter
scas
jb
mov
push
lahf
mov
jecxz
dec
nop
jle
inc
popa
push
outsl
sarb
fnstsw
stc
insb
jmp
outsb
and
jge
or
pop
push
rcrb
push
lea
jb
movsl
fcomps
in
push
pop
mov
rclb
cltd
mov
mov
jecxz
mov
add
pop
insl
xchg
int3
or
in
add
insb
cmc
mov
test
cmp
add
push
mov
sub
mov
imul
mov
jge
cmp
and
daa
int
pop
dec
js
addl
sbb
lock
andl
sub
mov
add
idivl
outsl
inc
aad
jmp
sbb
jns
or
out
inc
and
xchg
xor
push
mov
xchg
jmp
imul
in
mov
into
rorb
shlb
int
into
or
add
stos
pop
into
into
sub
adc
mov
cmp
add
ja
cmc
xor
fidivs
jp
mov
daa
movsb
mov
mov
divb
mov
ss
mov
addr16
and
jae
mov
ds
scas
scas
jo
sbb
inc
push
push
pop
jg
sbb
and
mov
decl
jne
sub
inc
sub
sbb
sub
lahf
dec
adc
lea
inc
mov
pop
dec
cmp
cmp
jp
mov
inc
es
xchg
mov
movsb
movsb
int3
inc
call
cmp
jo
mov
jne
aad
lcall
mov
clc
mov
pop
dec
or
int3
out
pop
mov
test
push
jbe
ficoml
pop
shlb
fwait
push
sbb
fidivl
add
imul
sbbl
sbb
fnstenv
std
jo
push
mov
icebp
dec
push
rorb
or
popf
aad
es
in
mov
mov
inc
push
xchg
mov
jmp
add
sbb
adc
sbb
enter
aad
clc
xchg
xorb
xor
in
cmp
or
push
adc
lea
push
mov
xchg
scas
xchg
ret
test
cmp
pop
push
test
jmp
xor
adc
xor
nop
insl
shlb
inc
out
sbb
lret
push
lsl
mov
sbb
sub
cwtl
inc
cmpsl
pushf
mov
or
int
aaa
jle
mov
ljmp
push
push
roll
pop
popa
bound
enter
lcall
adc
sbb
hlt
sub
test
movsl
mov
adcl
push
xor
fistpll
adc
cmp
adc
cmc
mov
mov
mov
dec
shll
xchg
inc
ds
lcall
jecxz
mov
pop
jno
inc
push
adc
ret
mov
push
or
int
mov
aaa
jle
lahf
or
inc
jne
mov
outsb
ja
xor
ds
in
or
es
test
hlt
dec
add
outsb
ret
mov
sub
aad
aad
gs
sbb
push
leave
xor
jge
stos
inc
mov
mov
nop
lret
jnp
push
mov
mov
insl
mov
test
adc
push
mov
or
pop
sub
js
lret
fmuls
mov
daa
cmpsb
and
cmc
call
mov
add
movsl
sbb
add
sub
push
stos
outsl
test
push
inc
addb
and
movsl
wrmsr
or
add
adcl
cmpsb
out
idivl
pop
mov
lahf
inc
push
lahf
mov
mov
clc
cmc
and
xchg
xor
push
paddsw
les
adc
push
mov
adc
sti
and
jne
push
negl
mov
out
lock
xor
fwait
in
xchg
add
fwait
push
imul
mov
xor
insb
inc
jne
push
push
push
jno
clc
aaa
enter
pop
ret
pop
pushf
testl
ficomps
rorb
pop
mov
sbb
lcall
and
je
and
out
xor
outsl
repz
mov
sub
or
and
push
xchg
sbb
add
ja
in
sub
or
pop
jnp
inc
push
popf
add
jae
dec
mov
fisttpl
jo
mov
imul
scas
push
aas
test
sub
outsb
fs
pop
inc
mov
push
xlat
pusha
jo
push
mov
xor
sub
repz
sti
std
dec
sub
in
dec
push
rol
in
xor
mov
sub
xchg
mov
mov
ret
push
cmp
lods
sub
cmpb
mov
imul
mov
fcomip
or
xor
orl
divb
xchg
lret
and
pop
sub
stos
rol
sbb
lods
addl
push
mov
icebp
push
cmp
mov
js
repnz
test
xchg
mov
test
fmuls
les
scas
xchg
frstor
xchg
mov
arpl
test
lods
dec
mov
inc
xor
adc
es
dec
fisubrs
inc
and
outsb
xor
mov
xchg
mov
rcrl
mov
test
adc
sbb
imul
mov
and
dec
mov
xchg
gs
inc
lods
fisubs
hlt
dec
push
popf
in
and
and
sbb
sub
fwait
push
call
sub
andb
iret
mov
sbb
dec
dec
inc
pop
aaa
inc
mov
loope
leave
mov
pop
ss
xchg
cmp
xor
push
or
shr
push
mov
mov
or
add
push
sbb
subb
mov
hlt
ret
cmp
xchg
es
loope
and
scas
sbb
push
dec
lret
cmp
inc
inc
aas
mov
adc
or
repnz
cmp
mov
mov
es
popf
and
or
loope
test
jnp
fmull
movsb
ljmp
mov
jne
incb
adc
ds
mov
jmp
sbb
scas
in
cmp
pop
call
inc
pop
mov
outsb
into
and
shl
adc
xor
mov
xchg
pop
fisubrl
adc
push
lahf
push
rcrl
insl
jmp
ja
inc
mov
push
lcall
cwtl
cs
sub
mov
push
adc
or
and
addr16
cmpb
aaa
iret
jns
int
stos
dec
sbb
jne
adc
sbb
ret
aam
fwait
negl
inc
push
mov
ret
dec
test
int
jne
cmpsb
fmulp
mov
dec
pop
rorl
repnz
insb
sbb
and
inc
sbb
push
stos
lock
ljmp
arpl
and
das
pop
andb
pop
cmp
add
mov
sub
jbe
mov
cld
xchg
fidivrl
dec
pop
mov
dec
xlat
cmc
add
inc
xor
aas
jg
inc
push
cld
out
pop
aad
test
loop
test
scas
dec
cmc
push
daa
sub
or
clc
mov
or
xor
lds
xchg
mov
test
xchg
sbb
aad
mov
or
stc
out
xor
cltd
jl
subl
inc
xor
adc
or
push
mov
int3
aad
sub
clc
dec
int
aam
in
xchg
cwtl
xchg
repnz
add
mov
roll
mov
sbb
jecxz
subl
jge
imul
imul
pop
mov
add
cs
stos
clc
and
pop
insl
jo
mov
outsl
push
lods
je
mov
xor
adc
pop
nop
cli
shl
stc
jmp
inc
add
adc
or
mov
push
sub
repnz
xchg
mov
cmp
xchg
or
xor
adc
je
lahf
pushf
pop
push
adc
push
inc
jno
mov
pop
insb
in
cmpsb
decb
adc
aaa
and
pop
xchg
xchg
push
cmpsl
loopne
dec
cmpsl
daa
cmp
mov
aaa
js
push
adcl
mov
lcall
dec
pop
push
fcmovnu
inc
popf
ror
cmp
in
inc
dec
iret
lret
sub
xchg
push
push
sbb
sub
jne
pop
iret
inc
fstpl
sub
adc
mov
or
sbb
loop
xchg
xchg
mov
in
dec
lret
mov
and
aas
pop
pushl
ret
leave
out
mov
xchg
xchg
inc
jns
jo
xchg
cli
fldt
scas
pop
jp
in
mov
sbb
sahf
jmp
aaa
xlat
cwtl
mov
dec
cmpb
pop
data16
and
dec
lret
jae
push
adc
outsb
add
enter
xlat
add
jg
stos
mov
mov
cld
jl
fsubl
lods
mov
jno
cmpsb
pop
js
mov
xchg
jns
in
adc
adc
pusha
sub
pop
sbb
std
lods
daa
adc
sysenter
jg
jp
movsb
mov
out
push
mov
mov
pop
or
jle
lret
mov
aam
pop
sbb
sbb
cmpb
mov
push
push
lods
sbb
xchg
dec
mov
arpl
jbe
xchg
xrelease
add
adc
fistl
lret
negb
mov
popf
adc
jae
sbb
iret
mov
mov
in
xchg
mov
mov
pop
cmp
in
mov
xor
mulb
repnz
mov
mov
sub
ja
cmpsl
not
xor
daa
jae
push
push
push
jl
fbstp
mov
xlat
jge
adc
dec
xlat
cmp
addl
and
mov
dec
rolb
sbb
xchg
sbb
mov
lahf
popa
cmpsb
pop
jge
int3
movsb
fcmovu
addr16
inc
dec
sub
mov
and
xor
push
adc
jo
sub
adc
test
fdivr
subl
jmp
movsl
jno,pn
scas
sbb
js
and
xor
pop
dec
in
push
stos
leave
divl
inc
fcompl
mov
stc
js
rclb
and
int3
or
cmp
fnsave
sarb
pushf
pop
aaa
pop
stos
cmpsb
cmc
pop
in
jns
in
add
mov
and
gs
ret
mov
arpl
mov
and
lret
xor
adcl
out
cs
push
adcb
mov
mov
adc
clc
cmp
ret
es
cmpb
jmp
sbb
stos
call
stc
lcall
cmp
sbb
cmpsl
std
insl
add
clc
adc
xchg
jecxz
xchg
or
int3
xchg
les
push
adc
imul
fstps
push
cli
xor
out
into
out
stos
loope
lock
push
jp
jp
pop
je
xor
or
dec
xor
push
adc
mov
leave
jno
pop
loope
outsb
stos
xchg
int
lret
rcll
jg
sub
add
sbb
adc
insl
jne
imul
lods
xor
jae
inc
les
jecxz
les
xchg
and
xor
hlt
mov
flds
xchg
or
xor
mov
push
jge
lock
ror
and
push
imul
jnp
jbe
jmp
in
pop
and
push
pushf
es
lock
testl
lods
in
pop
push
stos
test
pop
repz
cld
sub
lcall
sub
mov
or
mov
popl
shrb
xor
sub
cmp
sbb
xor
imul
push
push
loopne
add
pop
add
push
sbb
ja
dec
movsl
ja
jle
outsl
sub
jno
adc
adc
inc
sbb
test
or
add
push
xor
fstpt
cmp
push
xor
and
rcrl
dec
sbb
and
stos
mov
std
mov
push
stos
sti
adc
sbb
add
or
pop
push
cmpsl
ljmp
sub
cmp
bound
filds
divl
dec
lret
push
sbb
mov
jns
call
and
push
outsb
fmulp
fsubp
fwait
inc
in
mov
and
mov
fdivrl
lds
or
pop
addr16
dec
jnp
into
nop
push
xor
push
jg
adc
inc
jno
fisttps
movb
inc
jmp
stos
xchg
sub
mov
ficoml
jecxz
push
ror
mov
orb
push
dec
inc
dec
add
dec
pop
adc
movsb
cs
outsb
mov
xchg
mov
test
jp
in
jb
adcb
dec
js
xor
aam
out
sub
xchg
mov
mov
cmp
sub
popa
xchg
xchg
jbe
sub
pop
sbb
and
jle
fsubp
dec
int
in
or
pop
fisttps
xor
xor
mov
ljmp
daa
stos
lods
mov
mov
push
and
in
jno
xor
test
inc
in
cvtps2pd
adc
sub
je
test
mov
dec
push
outsb
fldcw
jne
xor
lods
fmulp
mov
rcr
jp
mov
fdivrl
out
adc
in
dec
mov
daa
push
hlt
pop
cmpl
ret
xchg
cltd
dec
jbe
inc
mov
pop
fisubrs
mov
add
push
xor
pop
arpl
scas
push
push
adc
dec
sbb
or
cmpsl
aam
out
mov
mov
pop
sbb
xchg
xchg
jno
jno
xchg
mov
inc
stc
fsubl
cmpps
decl
adc
ja
addb
std
jle
mov
lcall
shrb
cmp
inc
cltd
push
adc
jo
xlat
push
outsl
xchg
nop
or
add
leave
nop
mov
test
jae
addr16
fadds
sbb
lahf
dec
repz
xchg
aam
add
cltd
sbb
jecxz
sbb
shl
shrb
ja
scas
xchg
jmp
mov
cmp
stos
mov
dec
dec
mov
pop
or
ljmp
pop
sarl
jg
mov
and
aas
aam
ret
add
mov
cltd
int
mov
and
sbb
sub
xchg
add
loope
dec
cmp
stc
mov
outsb
sub
clc
sub
inc
ret
test
mov
sbb
push
ror
lret
push
dec
pop
cmp
out
sbb
adc
mov
push
subl
lock
inc
sub
xor
inc
clc
jecxz
pop
mov
into
arpl
lds
xchg
mov
fistps
hlt
sub
imul
mov
sub
in
xor
mov
mov
daa
lret
loopne
loopne
stc
rolb
or
hlt
dec
sub
sub
sbb
push
xor
data16
dec
js
xor
sahf
in
dec
or
into
push
fidivl
fidivs
lret
mov
ficoms
stos
mov
jb
inc
xchg
lret
addr16
enter
insb
jb
push
pop
nop
loope
loopne
add
cmp
lret
cltd
mov
stos
mov
xor
or
jmp
mov
aam
ret
push
scas
xchg
enter
jo
dec
shl
mov
aas
sub
pusha
shr
mov
xchg
jo
mov
cs
push
sbb
mov
xchg
shll
das
adc
cli
out
outsb
fld
scas
cli
sahf
lahf
shlb
pushf
jb
inc
mov
into
cmp
pusha
adc
jne
pop
call
cmp
scas
daa
jecxz
insl
mov
push
subb
mov
mov
sub
mov
sbb
and
and
mov
or
enter
or
jbe
xchg
sbb
push
add
mov
jle
pop
sbb
insb
push
pop
adc
mov
scas
push
mov
xor
dec
push
dec
mov
nop
mov
sub
dec
shrb
in
mov
stos
fldt
pop
das
dec
lock
push
xor
jl
lds
clc
lea
fisubrl
push
in
outsb
mov
inc
mov
iret
jge
xchg
lahf
and
adc
push
loopne
das
lret
jge
and
add
jl
icebp
je
jg
ret
push
sbb
lods
fdivrs
sbb
pop
jecxz
dec
pop
dec
sti
cmp
push
pcmpeqd
pop
adc
jg
mov
std
enter
in
in
cli
or
fs
subl
insl
loop
out
push
add
push
shlb
push
add
cmpsb
idivb
cmp
and
inc
push
sub
fnstsw
jns
test
fs
jge
adcb
pushf
push
roll
sbb
inc
xchg
jg
mov
daa
mov
mov
cmp
aam
jae
popa
out
xchg
cmp
push
or
mov
jo
xlat
mov
jle
push
adc
adc
cmpsl
push
dec
outsl
mov
jo
add
cwtl
mov
mull
dec
xor
test
in
inc
call
test
addr16
and
mov
sbb
push
sbb
arpl
hlt
cmp
cmp
jp
or
dec
jnp
psubsb
adc
mov
shll
pop
add
mov
inc
dec
push
leave
jg
rcll
into
adc
cmp
in
and
mov
jne
dec
push
sbbl
inc
adc
fiadds
push
mov
dec
sbb
push
fs
loop
call
loope
mov
dec
sbb
push
inc
movsb
stos
repnz
cmp
rclb
enter
loope
test
je
push
inc
data16
fnstenv
inc
aaa
orl
out
and
mov
test
inc
mov
push
pop
dec
xorb
push
fdivl
inc
push
jp
les
sbb
rorb
or
sub
mov
add
mov
mov
fsubs
xor
popf
cmp
call
mov
dec
jle
dec
xchg
adc
inc
mov
or
fsubrs
xchg
or
insb
js
mov
out
inc
xorl
scas
pop
dec
add
push
ss
jns
push
arpl
inc
lods
xchg
dec
jno
adc
nop
jmp
jge
test
aaa
jl
fcomps
jp
repnz
push
xchg
xor
dec
sahf
je
jp
cmpsb
inc
scas
or
mov
push
add
notb
and
or
lods
arpl
dec
ret
adcl
fimull
jl
shrl
ja
mov
jl
outsb
sbb
lahf
fdiv
xlat
cld
mov
test
and
adc
into
loopne
sbb
or
aad
icebp
xchg
std
sti
mov
rcl
push
mov
mov
imul
ret
in
out
cmp
cmpsl
and
cmp
sahf
xchg
push
stos
les
roll
iret
movsl
xor
fstl
lods
mov
les
lods
jno
dec
pop
mov
outsb
sub
dec
outsb
sub
in
fisubs
out
shr
add
stos
push
dec
jae
push
xorb
dec
test
stc
xor
shll
scas
push
rclb
ljmp
cmpsl
xor
push
ja
imul
in
push
movd
mov
push
arpl
cmp
add
dec
mov
ja
out
sub
js
and
rorl
mov
push
xchg
roll
push
mov
or
cmp
movsb
and
xchg
shll
dec
jnp
or
daa
cmp
inc
std
dec
andl
push
jle
in
das
add
outsl
aam
jge
mov
ret
outsb
repnz
testl
push
adc
icebp
xchg
hlt
inc
mov
adc
xor
push
and
nop
mov
shlb
dec
dec
gs
push
not
jle
pop
in
popa
imul
stos
std
cmp
dec
jno
xchg
and
data16
inc
std
pop
dec
sub
pop
divl
sub
iret
dec
test
adc
into
inc
adc
push
enter
stc
lock
inc
push
xchg
divb
lahf
or
loope
inc
xchg
iret
mov
xor
xchg
add
mov
adc
add
shlb
loope
stc
ret
out
mov
lods
hlt
mov
add
fwait
cmp
scas
sbb
sbb
sbb
mov
sbb
cwtl
inc
cmpsl
dec
es
mov
cmpb
mov
enter
xor
xchg
push
out
in
push
and
sbbl
lret
pop
xlat
xor
lret
jbe
bound
jbe
mov
mov
popf
ja
cltd
setbe
test
mov
fwait
adc
loop
clc
jge
pop
icebp
pop
out
rep
adc
push
fisttps
das
sbb
pop
adc
add
aad
std
dec
mov
fwait
imul
lods
sub
cmp
enter
xor
into
cmp
push
mov
dec
and
call
dec
xchg
mov
xchg
clc
aas
mov
mov
xchg
cmp
jnp
test
cmp
jp
mov
pop
xchg
jo
mov
jl
out
fmul
mov
lret
in
icebp
or
gs
push
mov
inc
adc
adc
iret
push
and
idivb
mov
sbb
sti
mov
lock
test
sahf
inc
das
dec
in
out
fwait
push
xchg
scas
push
jle
inc
fistps
repz
inc
sub
mov
iret
insl
fstpt
xor
xor
daa
sbb
ret
add
xor
add
nop
adc
lods
pop
jno
mov
xchg
push
mov
call
out
addr16
cld
fcoms
cmpl
xchg
ret
fdivl
mov
push
pop
sbbl
outsl
or
in
xor
test
dec
sbb
pop
sti
imul
cld
xorb
pop
cmp
iret
sbb
lock
lea
addr16
dec
es
out
pop
jmp
cmp
out
loop
lret
lahf
imul
pop
mov
out
test
ds
loope
pusha
aaa
lods
sub
ret
fdivr
arpl
dec
lods
jns
sbb
scas
cli
jecxz
mov
negl
sarl
lcall
ljmp
push
cmp
mov
fs
fs
test
mov
std
imul
and
mov
sbb
push
mov
jnp
icebp
ss
fwait
adc
or
pop
jne
mov
cmp
iret
cmp
dec
add
sti
push
mov
cs
pop
in
jge
enter
dec
sub
push
cmp
mov
sbb
mov
outsl
jbe
mov
loop
std
aaa
mov
push
mov
cmpsl
rcll
xchg
fisubrl
stos
dec
scas
inc
imul
bndstx
test
xor
cmp
dec
subb
pop
cli
mov
pop
jb
mov
fistps
std
sti
jno
fildl
mov
cmp
fistl
sub
lock
pop
lea
mov
ljmp
leave
movsl
lea
adcb
clc
jb
repnz
fsub
rclb
and
sub
xor
or
fwait
push
xchg
push
repnz
aam
inc
sbb
dec
stos
jecxz
in
mov
adc
in
pop
lods
mov
ret
mov
shlb
mov
shr
mov
in
fcomps
and
mov
in
stos
mov
fbstp
fdiv
cmp
sub
arpl
fcoml
movsb
mov
or
xor
ds
dec
pop
mov
movsl
lock
hlt
push
div
nop
adc
inc
ljmp
or
in
sub
xorl
int
ds
popa
pop
jge
mov
mov
sub
mov
ss
sub
aaa
push
pop
lods
mov
leave
jb
in
fmul
push
jecxz
pop
nop
test
stos
and
imul
scas
pop
xchg
pop
test
sbb
lret
es
jg
mov
scas
lds
jb
mov
add
addr16
das
jp
mov
add
clc
dec
sbb
int3
adc
repz
and
aam
jb
mov
lea
sbb
pop
pop
add
mov
bound
call
cltd
rcl
movsl
cltd
mov
insb
arpl
iret
push
out
sub
fmul
xor
or
push
and
xchg
inc
add
test
cmpsb
cmpsl
mov
xchg
mov
adc
sar
add
mov
inc
mov
addr16
jmp
pop
mov
sahf
xchg
je
mov
mov
rcrb
xchg
inc
mov
aam
or
dec
into
and
dec
pop
fcomps
push
je
xchg
push
xor
xor
lods
pop
or
sahf
add
in
sub
cmp
hlt
inc
push
les
sbb
in
fwait
ret
inc
xchg
xor
cmp
pushf
popa
or
inc
ror
imul
popf
pop
jmp
lret
rolb
ds
cmp
sbbl
xor
movsb
ss
jo
mov
push
dec
cmpsl
stos
cwtl
lahf
mov
loopne
push
pop
icebp
jns
scas
dec
ja
imul
adc
mov
dec
scas
je
jns
fs
lret
lds
adc
mov
mov
lods
mov
loopne
out
xor
arpl
lods
in
adc
pop
fmull
or
add
mov
pop
lret
pop
sub
in
movsb
push
test
fisttpl
inc
inc
mov
sbb
cmp
inc
popa
mov
or
dec
mov
movsb
sarl
mov
push
arpl
push
outsl
frstor
add
and
scas
or
jecxz
and
lahf
mov
sbb
jl
outsb
fwait
xor
sbb
fwait
jp
js
stos
mov
les
jle
push
clc
aam
in
mov
jnp
jns
jge
xchg
mov
fs
imul
out
inc
push
cmp
mov
push
pop
insl
data16
stos
add
test
mov
and
push
pushf
insb
jae
loope
fsubrp
sbb
das
test
push
jecxz
add
arpl
dec
movsl
inc
pop
mov
lds
call
mov
cmp
in
fnstcw
ret
sarb
stc
stos
inc
cltd
push
loope
jbe
mov
insb
ss
decb
dec
adc
test
jns
pushf
scas
inc
mov
pop
je
insb
cmpsl
loope
repnz
or
dec
and
cmpsb
xor
in
into
popa
xchg
dec
pushfw
push
mov
dec
xor
mov
xchg
pop
adc
xchg
xchg
add
test
mov
add
pop
cmpsl
push
ljmp
cmp
scas
testb
test
xchg
cld
jns
mov
cmp
add
jg
popa
pusha
test
cmc
aam
out
shll
or
mov
lret
lret
inc
fistl
pop
mov
push
jae
cmp
fidivl
jmp
in
imul
into
pop
push
push
cli
xor
pop
add
mov
mov
sbb
push
adc
xchg
xchg
daa
fstpl
dec
movsl
push
pop
xchg
cmpsl
scas
aas
insb
jp
xchg
bound
add
xchg
mov
adc
jno
subb
in
pop
jno
in
push
mov
ljmp
add
lret
mov
jmp
insb
add
mov
test
inc
shrb
hlt
cmp
cmovae
sbb
imull
leave
sbb
mov
add
and
movb
std
sbb
loope
jmp
and
subb
or
adc
inc
and
fwait
adc
into
shl
jo
inc
psubb
push
xchg
mov
xchg
aaa
and
mov
sbb
adc
jns
jb
data16
outsl
cmp
out
adc
jl
dec
jno
xor
inc
out
jo
pop
nop
cmp
out
out
and
test
mov
fwait
roll
mov
adc
xor
sti
push
and
cltd
jp
mov
fs
lea
adc
sub
and
rolb
jmp
sbb
shlb
packssdw
mov
mov
cmpsl
inc
flds
popa
cmp
xor
push
push
pushf
cwtl
lcall
sbb
pop
sbb
outsb
jae
adc
dec
inc
pop
test
outsb
cmp
add
xor
xchg
dec
add
movsb
gs
es
jle
xor
mov
jle
pop
adc
xchg
into
adc
lock
lods
repnz
jns
scas
and
jmp
movsl
imul
call
sbb
mov
fistps
ror
pusha
dec
inc
pop
out
push
add
orl
adc
push
ljmp
stc
mov
lods
jo
inc
mov
inc
jbe
xor
xor
cmpsl
push
mov
mov
push
bound
sub
out
sub
dec
gs
mov
jno
adc
sub
stc
sub
cmp
xor
je
or
adc
adc
fwait
mov
push
js
clc
xor
xchg
ljmp
popa
minps
add
fmuls
fsubs
arpl
out
mov
in
xor
sub
xlat
pop
dec
mov
ds
inc
xor
jno
and
dec
loopne
insl
sarb
push
pop
iret
mov
std
mov
or
push
fldl
addps
cld
arpl
push
mov
mov
push
mov
cmp
outsl
fcomip
jg
cs
pop
pop
mov
and
pop
int
iret
and
sbb
js
sbb
push
push
and
shr
mov
es
xor
cmp
and
and
push
pop
mov
aas
clc
mov
push
fs
sub
mov
pop
insl
fisubs
sarl
fwait
push
adc
test
jb
aas
test
out
aam
les
adc
push
stc
frstor
dec
out
sbb
or
insb
xchg
xor
dec
xor
and
add
dec
ljmp
inc
push
push
sbb
or
mov
lods
popf
dec
test
in
sbb
psadbw
mov
insb
rclb
mov
push
cmp
cmpsb
pop
cs
subb
ja
inc
dec
scas
std
xor
adc
add
pop
or
imul
xchg
cs
in
adc
push
push
mov
and
xchg
in
xchg
cmpsb
pop
mov
in
fwait
cmpsl
das
lock
pop
sbb
sbb
ss
dec
fsubrs
pusha
adc
das
in
xchg
jnp
and
mov
test
push
subl
mov
cmpl
jl
bound
rcr
dec
mov
out
cmp
adc
outsl
and
inc
xor
inc
leave
inc
fxch
push
loopne
inc
mov
test
mov
cwtl
dec
arpl
fstpt
icebp
orb
gs
xor
icebp
out
cs
xor
dec
mov
stos
cmp
sbb
lea
mov
jl
shll
and
scas
in
stc
in
orb
clc
sbb
fidivrs
mov
test
pop
push
iret
out
dec
ds
pop
aas
mov
xchg
cmp
jbe
stos
xchg
cs
jne
cmp
push
mov
jg
adc
dec
cmp
cld
shlb
dec
and
stos
push
fisttpl
repz
add
adc
mov
and
xor
pop
inc
and
adc
out
inc
std
or
pop
stos
inc
jge
mov
sbb
xchg
push
ds
sub
ret
xchg
xchg
sub
lea
lcall
dec
and
ficomps
nop
ret
mov
out
stc
loop
imul
repz
inc
call
in
insb
mov
mov
fidivrs
sub
pop
imul
in
push
divb
arpl
in
hlt
fadd
imul
pusha
jb
push
xchg
punpcklbw
cli
in
or
mov
imul
fwait
ds
test
adc
sub
stos
arpl
push
pop
inc
mov
dec
xchg
pop
sbb
rolb
xor
cmp
dec
dec
push
jae
imul
push
mov
inc
in
push
dec
notl
inc
int3
popa
cmp
xchg
or
cmove
mov
mov
mov
lahf
mov
mov
dec
inc
loop
xor
rolb
mov
js
fst
lds
mov
enter
and
xchg
xor
fs
stos
adc
xor
test
push
mov
mov
lret
lods
fildll
adc
adc
jecxz
dec
xor
jle
or
scas
lods
sub
loopne
adc
leave
clc
addb
jmp
xor
movsb
inc
rclb
enter
fbstp
sbb
sub
push
add
lea
xor
loop
add
shll
aaa
rorl
mov
rcll
sbb
je
push
sbb
iret
pop
xlat
dec
jmp
sbb
cmpsb
orb
notl
or
and
push
adcb
push
sbb
sahf
mov
mov
push
pop
ds
lret
cwtl
gs
adc
sbb
in
inc
test
push
es
jno
cwtl
test
fmuls
ss
imul
push
add
out
mov
test
xchg
mov
cmp
std
call
aam
xor
ficoms
test
jne
lahf
cltd
sbb
in
xor
dec
stc
push
out
outsb
and
das
fcoms
lcall
pop
xor
cmp
mov
insl
cli
mov
dec
cmp
and
add
stos
push
shll
push
aaa
adc
push
shlb
jl
ja
stos
mov
adc
cmp
mov
jb
jnp
nop
test
ret
xchg
or
shll
jnp
mov
and
pop
test
dec
push
std
inc
jle
cmpsl
ret
iret
pop
cmc
push
jb
out
and
inc
pusha
aas
mov
sarb
fidivrl
ss
repnz
int3
std
call
call
add
shll
loope
in
mov
icebp
lea
sbb
add
xor
aad
inc
shlb
sub
fsts
pop
sbb
ret
mov
lret
fdivrl
add
jmp
sar
sti
dec
pop
aas
xchg
xor
push
int
xor
stos
negb
add
mov
push
lret
repz
sub
js
enter
pop
ror
pop
movsl
jnp
and
mov
xchg
sahf
sub
pop
test
xor
xchg
mov
lods
lods
or
lret
jne
inc
in
leave
or
aas
dec
adc
push
scas
or
outsb
or
adc
xchg
jo
leave
mov
rorb
mov
sti
dec
mov
insb
inc
lret
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fdiv
push
fistps
outsb
out
inc
mov
cmp
add
xchg
mov
push
pushl
inc
inc
xchg
mov
sarl
call
sbb
jno
add
repnz
mov
adc
insl
in
lret
cmpsl
roll
jle
in
and
cmp
dec
dec
sub
out
jb
movsl
in
xchg
in
hlt
pop
addb
xor
out
fprem
cmc
loope
ja
mov
mov
arpl
mov
cld
dec
bound
mov
add
movsl
pop
inc
ficomps
jecxz
sub
mov
jae
pop
stos
push
and
mov
insb
push
dec
aas
sbb
jnp
xor
adc
loope
lahf
or
sbb
lret
xlat
stc
test
dec
mov
mov
ret
or
push
push
pop
popa
dec
lods
leave
popf
icebp
adcb
test
jo
movsb
fmulp
xchg
es
sub
inc
mov
xchg
hlt
pop
in
arpl
mov
mov
push
mov
aas
push
imul
mov
inc
rcl
insb
xchg
popf
or
mov
les
inc
xchg
lret
idivb
lcall
js
mov
add
pushf
or
inc
pop
stos
imul
sub
adc
jge
inc
test
lods
adc
stos
xor
aad
mov
sub
stc
mov
sub
and
push
fistps
testb
icebp
stc
inc
pop
push
or
cmp
lds
fistps
pop
mov
in
mov
test
insl
fcoms
nop
sbb
es
sarl
ret
les
sub
adc
mov
pop
cmpsb
cmp
push
test
hlt
xor
cmp
repz
mov
shll
in
stc
xchg
dec
inc
dec
gs
ja
enter
dec
mov
repnz
pushf
sub
jnp
xor
sbb
inc
fistps
lea
clc
xor
or
lods
cli
jl
std
rorl
addl
cmpsb
out
pop
stos
fistpl
pop
pop
js
outsb
fidivrs
mov
jmp
call
push
xor
ret
cltd
pop
aas
cmpl
xchg
frstor
adc
cmp
int3
or
mov
xchg
adc
push
mov
jmp
cmp
push
mov
xlat
jmp
pop
and
les
mov
in
mov
daa
xchg
pop
loop
inc
pusha
test
pop
jg
mov
out
andb
icebp
insb
outsl
and
in
aaa
cwtl
pop
or
inc
pop
insl
xor
mov
lods
rcll
xor
sbb
mov
addb
inc
fistl
dec
xlat
shlb
daa
pop
pop
dec
push
mov
dec
dec
lret
std
xor
jmp
test
inc
icebp
ret
ret
jne
cmp
and
pop
popf
enter
xlat
and
sbb
push
mov
inc
dec
lods
dec
sbb
mov
mov
aad
sub
int3
fisttpl
push
sahf
xchg
fs
leave
rorl
dec
pop
xchg
ret
push
addr16
stc
les
push
dec
test
stos
enter
cld
in
lahf
fsubr
dec
sub
shll
sbb
mov
mov
cmc
notl
or
jnp
ljmp
cltd
cli
sarb
xor
xor
cmpb
dec
mov
shrl
rcrb
imul
mov
adc
pop
pop
mov
xchg
lcall
test
test
mov
sub
jg
mov
cltd
out
xor
inc
or
je
lds
popf
push
sub
daa
jmp
repnz
pop
cmc
popf
nop
jb
dec
pop
and
int
jp
mov
dec
insb
xchg
push
mov
lcall
lods
outsl
sbb
xchg
mov
scas
cmpsl
cmp
mov
imul
cld
aam
gs
outsl
jp
repz
bound
stos
mov
xorl
or
repz
adc
xor
lea
push
fdivrs
dec
sbb
fdivs
xchg
mov
jge
in
jbe
adc
mov
repz
in
adc
pusha
inc
mov
inc
pop
mov
sbb
cmpsb
mov
shlb
cmpl
jp
xchg
cs
adc
mov
fs
sub
push
pop
lcall
int3
inc
insb
loop
lret
enter
loope
jle
testb
jecxz
data16
pop
mov
pop
or
stos
inc
in
ret
ja
mov
pop
addr16
imul
rep
mov
jnp
shrb
push
cmc
outsl
sbb
sbb
iret
jnp
inc
mov
push
flds
add
sahf
mov
outsl
xor
pop
pop
push
or
xor
xchg
ret
iret
cmp
mov
mov
sub
adc
push
jae
idivb
pop
clc
pop
and
andb
fdivrs
js
lods
sub
adc
in
fisubrl
xlat
cmp
push
movsb
fbstp
jnp
lret
sbb
bound
movsl
adc
rcl
push
jg
loope
inc
jb
stc
mov
mov
icebp
dec
popa
das
lret
xrelease
mov
ss
adc
insb
divl
icebp
xor
xchg
popf
pop
popa
int
lcall
inc
dec
mov
lcall
push
mov
push
sub
loop
loopne
jne
sbb
fbstp
jl
mov
jb
shrl
fldl
lods
inc
add
mov
insb
scas
jnp
adc
stc
imul
rorb
xorl
call
mov
xchg
lret
out
testl
imul
inc
inc
jecxz
mov
push
add
add
aas
je
arpl
fs
sti
jg
and
imul
pusha
movsb
xchg
pop
cs
xchg
push
dec
pop
inc
inc
cld
js
out
cmp
or
cs
insb
add
push
pop
inc
dec
push
sub
aaa
dec
outsl
xlat
xor
jae
sarb
push
clc
cld
or
rcl
adc
mov
mov
lods
push
shl
cltd
adc
mov
pop
xor
push
pop
and
xchg
and
popl
add
ret
cmc
subl
mov
cmp
xchg
cli
leave
inc
cmpsl
imul
xchg
imul
jno
lods
mov
jnp
sub
lds
sub
loop
cmc
lods
loopne
inc
add
sbb
icebp
cmp
fisubs
frstor
in
push
insb
loop
pop
pushf
ljmp
jmp
xor
test
pop
lods
dec
inc
sub
lds
xchg
and
arpl
cmp
fucomi
js
mov
cld
test
jmp
push
or
lcall
pushf
or
lea
jge
js
dec
mov
adc
sub
add
dec
dec
dec
push
sti
cmp
mov
call
mov
idivl
fdivrl
xor
xor
pushf
out
and
jmp
sti
fst
add
sub
xor
xchg
push
lds
mov
cltd
dec
sbb
sub
cwtl
fst
inc
xchg
sub
roll
pop
repz
inc
lret
cmpsl
int
jns
in
push
data16
in
pop
fnstsw
mov
push
out
and
out
inc
stos
or
sub
in
lock
push
addl
mov
cmp
mov
mov
adc
aad
pop
nop
dec
jge
cld
lea
daa
xor
sti
pop
ret
dec
add
push
aam
es
pop
jns
push
xchg
mov
xchg
push
sbb
or
inc
mulb
stc
fwait
sub
ja
clc
loopne
add
repnz
das
jns
cmpsl
cwtl
leave
mov
ljmp
xor
outsb
lea
cwtl
loop
pop
add
pop
pop
insl
xor
xchg
inc
nop
and
pop
aad
cmp
mov
shlb
add
xor
cmc
inc
mov
in
fadds
or
js
hlt
add
dec
mov
mov
xchg
push
dec
cmc
sub
repnz
adc
cmpsl
lods
push
or
jle
dec
lods
cmc
sarl
sub
subl
pop
add
add
ja
adc
inc
fiadds
mov
sarb
pop
int
jae
stos
push
pop
cmpsl
cmp
movsb
inc
int3
sbb
mov
xor
cmp
mov
xchg
ljmp
push
push
gs
push
jae
out
pop
push
mov
sbb
cs
jbe
adc
push
rcll
gs
inc
xorb
xchg
sbb
outsb
lret
orl
xlat
inc
xor
push
adc
fdivrp
sub
mov
mov
push
shrl
movsb
addr16
or
mov
cltd
cmp
leave
ror
insb
scas
adc
outsl
xor
inc
int
sub
loope
bound
lods
test
sub
ljmp
into
shll
insl
shll
push
adcb
pop
ljmp
mov
repz
shr
flds
push
mov
sub
rcrl
repz
int3
mov
jmp
push
cs
clc
mov
push
insl
jge
cmp
xor
adc
iret
or
mov
xchg
or
daa
sar
lret
mov
loopne
nop
pxor
cltd
cmp
scas
push
dec
cs
cmp
outsl
out
imul
outsb
out
cmp
jge
aaa
inc
pusha
test
mov
mov
sbb
xor
push
cs
stc
push
out
fistl
push
shl
lea
scas
inc
sbb
clc
rcll
mov
adc
pop
aam
or
pop
popa
pop
inc
and
ret
arpl
adc
pop
shrb
aas
sub
iret
jecxz
call
sub
pop
push
mov
call
bound
mov
fsub
inc
xor
outsb
ja
in
ret
inc
test
lods
aaa
mov
xor
mov
mov
ss
lret
cmc
inc
fucomp
mov
icebp
js
xchg
or
push
imul
adc
lret
jg
mov
pop
das
and
mov
mov
ja
mov
loopne
ds
pop
or
add
jo
in
iret
mov
add
xor
pop
push
jbe,pt
test
adc
in
push
lds
cmp
stos
cmp
mov
mov
jg
out
pop
negl
ficoms
jle
cli
add
cmc
add
jns
fxch
cmp
jo
imul
and
pop
cmpsb
fbstp
icebp
addr16
jmp
pop
mov
shlb
cmp
inc
fnstsw
and
daa
es
and
in
loopne
adc
imul
daa
loop
cs
cmp
addl
cld
dec
les
add
gs
mov
aaa
bound
add
movsb
push
mov
and
clc
dec
scas
inc
aad
mul
scas
xchg
push
gs
shll
stc
sub
mov
fdivr
shlb
or
fmuls
mov
aad
jle
jle
je
jbe
xor
sub
pop
pop
ljmp
daa
xchg
shlb
inc
cltd
mov
mov
test
enter
bound
gs
jge
pop
movb
cmp
std
mov
mov
adc
out
xor
test
adc
cmp
xor
xchg
imul
cmp
mov
pushf
or
push
jnp
push
sbb
xchg
inc
sub
sub
in
adc
mov
jno
pop
ret
mov
cmp
xchg
inc
lcall
fcmovnbe
dec
mov
in
sti
push
jae
in
out
out
repnz
mov
jnp
cmp
lock
movsb
sbb
ret
sub
mov
push
sahf
fstpt
imul
popf
add
push
xchg
mov
push
test
mov
int3
scas
xor
sti
rolb
inc
mov
pop
fimuls
jmp
mov
push
fisttpl
imul
rcl
shlb
dec
loopne
insb
jecxz
sti
dec
cmpb
aad
sub
adc
aaa
test
and
cli
imulb
nop
aam
lods
ret
jmp
cmp
outsb
lods
iret
push
cmc
pop
outsl
cltd
mov
mov
cmp
push
mov
mov
adc
jp
jnp
int3
jle
and
add
icebp
pushf
mov
out
and
jmp
lods
inc
ss
push
sbb
mov
mov
imul
repnz
jle
add
call
or
test
xchg
call
fmul
clc
or
mov
movsl
dec
popf
aas
cmp
stc
mov
fs
dec
cmp
pop
sbb
sub
xor
cld
xchg
push
jge
mov
or
sbb
iret
sar
or
movsl
or
xor
sti
sbb
jp
add
fidivl
mov
daa
jae
das
xor
inc
cmp
test
lahf
insl
mov
adc
punpckhdq
mov
jne
and
add
mov
add
lcall
mov
lods
lock
sub
pushf
push
icebp
cmp
out
and
mov
inc
clc
hlt
ret
pop
mov
sbb
cltd
sbb
lods
inc
sahf
fldcw
icebp
outsl
push
dec
stc
sub
test
adc
mov
mov
fwait
lcall
addr16
fcomps
stc
sbb
les
cwtl
adcl
ret
ret
sti
jae
add
mov
xchg
scas
push
cmp
inc
pop
mov
leave
jbe
lea
or
in
bound
ficoml
xlat
sbb
add
xchg
ficoms
mov
jp
mov
test
jns
imul
jnp
testb
cli
mov
nop
add
leave
sub
jnp
shlb
lret
lds
sub
dec
pop
lahf
pop
push
je
rcrb
xchg
and
mov
fwait
xor
add
sbb
mov
insl
outsl
out
jl
movsb
jnp
stc
and
stos
mov
or
jl
movsb
lods
fidivrs
dec
mov
sub
push
xor
gs
pop
dec
pop
mov
dec
xchg
push
mov
pop
or
mov
or
data16
inc
or
test
shl
and
mov
adc
les
out
loope
test
adc
stc
mov
int
pop
loopne
mov
lods
mov
dec
push
scas
mov
xlat
andb
push
popf
jge
xorb
fisttps
fisubs
stos
mov
xor
sub
cmp
sbbl
mov
outsl
stos
sarb
pop
xchg
adc
push
xorl
mov
mov
nop
aaa
push
mov
cwtl
movsl
cmpl
mov
jecxz
mul
inc
sbb
pop
jp
fldcw
in
add
stos
jmp
dec
popa
int
js
fwait
mov
mov
cli
push
xchg
jg
mov
fdivrl
and
cmpsl
lock
lods
adc
push
xlat
mov
mov
cmpsl
dec
out
jmp
add
aas
dec
sahf
in
mov
adc
pop
xchg
pushf
cmp
push
lcall
pop
jne
mov
push
cmpsb
loop
push
push
sub
jne
movsl
in
and
or
bound
fisttps
out
repz
cmp
cmp
mov
sbb
insb
push
and
cltd
cltd
aam
adc
ds
call
in
mov
cwtl
xor
xor
fcomps
test
test
adc
stos
jp
and
xchg
xchg
and
mov
ror
enter
xchg
movsb
ret
and
test
jg
adc
stos
xchg
dec
imul
jmp
inc
cltd
mov
push
inc
int3
sysret
sub
or
paddw
adc
xchg
sbb
inc
mov
mov
in
fcompl
cmpw
mov
mov
hlt
dec
test
adc
adc
cmp
mov
pushf
and
and
adc
testb
fsubs
sub
out
ret
pop
pushf
icebp
dec
sahf
push
ja
js
xor
and
dec
aaa
fcmovnbe
paddsw
adc
pop
gs
cwtl
mov
pop
mov
fisttpl
ja
out
daa
pushf
jge
aad
cwtl
clc
fyl2xp1
xor
jbe
fimuls
in
mov
in
mov
xchg
sub
push
repnz
and
or
pop
sbb
jl
jecxz
mov
insb
push
clc
xchg
mov
jg
cmp
sbb
xor
out
xchg
sbb
outsb
cmp
outsb
inc
mov
xor
sub
mov
jae
and
sbb
inc
and
fwait
pop
loopne
je
je
inc
mov
rcll
mov
fcomps
lock
inc
negb
mov
mov
lock
jbe
inc
nop
maskmovq
notl
dec
aas
out
sbb
and
pusha
push
rol
adc
mov
test
xor
xor
mov
fisubs
xchg
stos
int
mov
xchg
and
add
push
sub
push
ret
gs
lea
lods
jnp
mov
fsub
sbb
pop
or
ljmp
cmp
mov
mov
je
jne
cmp
mov
cltd
mov
mov
dec
mov
push
jg,pt
arpl
test
jnp
sub
mov
call
pop
push
sub
arpl
pop
inc
mov
cmp
push
sub
in
jae
ja
adc
push
bound
cmpsb
sahf
lret
aad
pusha
mov
out
mov
pop
jno
iret
xor
mov
cmp
mov
jnp
jo
dec
test
mov
jbe
leave
jb
pop
std
pop
aaa
adc
mov
mov
adc
ret
shlb
inc
mov
ret
or
lcall
mov
xor
sbb
cmp
in
insb
and
or
dec
push
jbe
in
xor
cmc
leave
mov
arpl
dec
cmp
imul
das
or
movsl
aaa
cmpsb
in
arpl
mov
imul
jle
xor
enter
xchg
jp
push
repnz
lret
rorb
xchg
pop
test
repz
cmpsl
addb
xchg
cmpsb
repnz
loop
dec
inc
adc
jl
aam
xchg
adc
and
lock
enter
inc
adc
test
dec
popl
out
inc
and
mov
sahf
adcb
outsb
scas
loope
fldt
arpl
mov
xchg
cld
xchg
mov
out
in
adc
or
inc
ljmp
sub
lods
and
bound
jmp
lret
pop
dec
enter
cmpsb
sub
int3
stos
sbb
adc
mov
xchg
add
push
mov
std
in
adc
add
call
push
pusha
cmp
repnz
jmp
repnz
xchg
xor
push
mov
popa
dec
pop
push
xchg
adc
push
je
outsb
xchg
ja
rclb
sbb
int
sub
std
jne
push
xor
adcb
fadds
pop
pop
mov
adc
std
fildl
inc
mov
jnp
movsl
jge
jp
popf
dec
sahf
mov
push
out
mov
fnsave
ljmp
pushl
mov
sub
sbb
xchg
movsl
lcall
arpl
test
daa
xor
xchg
cmp
in
les
arpl
adc
ss
outsb
xchg
dec
sub
xchg
ja
xor
lret
lods
popf
push
lea
jge
push
ret
cmp
mov
jne
sub
mov
mov
lods
pop
shll
inc
jbe
es
rol
xlat
adc
pop
mov
jmp
xchg
cld
xchg
out
cltd
or
inc
icebp
scas
data16
faddl
mov
in
jo
into
sbb
iret
out
jmp
filds
out
fdivrs
jb
or
xchg
push
xor
ffreep
inc
dec
dec
add
cld
xchg
xorl
jbe
xchg
jl
fldln2
and
jp
inc
push
inc
aad
or
sbb
fwait
inc
jecxz
loop
fldenv
lock
mov
lods
lcall
shr
sub
sub
insb
inc
imul
add
imul
pop
aaa
dec
sbb
sbb
outsl
pushf
aam
push
cli
push
adc
pop
mov
loop
add
push
add
xchg
fwait
push
push
lods
or
scas
shl
rcrl
push
push
dec
mov
imul
inc
mov
jns
add
shrb
sbb
sub
mov
cltd
and
lcall
push
arpl
cmpsb
pop
dec
test
stos
xchg
insl
imul
mov
add
ss
jmp
mov
push
and
mov
inc
push
ljmp
lock
les
aas
sub
ja
and
cmp
call
jo
pop
mov
shrl
fsubp
repz
in
loopne
std
adc
xchg
fsubs
cli
mov
lcall
nop
data16
das
mov
jns
in
and
adc
pop
sahf
mov
stos
adc
ja
lock
pop
xchg
mov
cmp
xchg
dec
jge
leave
push
pop
sbb
push
xor
sbb
cmpsb
or
lret
mov
out
inc
pop
mov
clc
or
call
mov
fimuls
or
inc
ljmp
adc
sahf
sub
inc
mov
idivb
fisubrs
orl
aaa
out
jae
stos
jo
js
mov
sub
or
shll
loop
mov
out
scas
jno
lods
jg
lock
cltd
dec
xchg
arpl
testl
imul
adc
in
clc
in
test
adc
stos
or
into
leave
in
movsb
push
inc
rcrl
xchg
push
ss
loop
icebp
jne
or
dec
test
enter
in
ljmp
xchg
xchg
mov
mov
dec
cmpsb
dec
int3
outsb
push
or
mov
stos
mov
cmc
adc
leave
repz
push
adc
lock
stos
adc
jbe
mov
and
mull
test
mov
gs
jecxz
dec
loop
or
lret
or
dec
roll
testl
jae
orb
xchg
lret
andl
fistl
xchg
fdiv
add
pop
loopne
pop
addr16
hlt
sub
imul
test
push
jb
test
imul
cwtl
sti
push
fld
cmpsl
call
and
shr
repz
dec
jp
lods
nop
call
mov
decl
xchg
adc
aam
mov
in
lret
test
inc
xor
cld
test
or
push
adc
and
jne
inc
in
sbb
or
pop
fld
dec
sbb
sbb
mov
sub
xchg
addr16
mov
cmc
or
in
sub
xchg
roll
pop
push
jmp
fistl
andl
out
xor
or
aaa
inc
les
xchg
loopne
jo
sbb
rorb
mov
jg
cld
fcompp
ret
jg
inc
mov
pop
jl
nop
sbb
add
pop
pop
pop
sahf
xor
xchg
push
lock
int3
pop
cltd
inc
jo
popl
cmpsl
aaa
mov
and
stc
inc
mov
xor
mov
fisubrs
sbb
and
mov
ljmp
dec
outsb
int
pop
mov
cli
pop
cmp
scas
scas
inc
push
jg
mov
adc
in
cmpsb
sti
push
push
aas
sbbl
sub
mov
push
sub
adc
xchg
rorb
or
les
out
enter
mov
shrl
mov
sbb
xchg
lcall
or
adc
repz
push
in
sbb
push
sti
ljmp
iret
lods
push
pmaxsw
xor
jnp
or
rcrl
aas
mov
sti
stos
mov
pushf
and
or
add
test
push
xor
pop
rclb
and
test
xlat
cmp
xor
js
adc
cld
add
out
popa
dec
bound
lcall
mov
repnz
stos
fidivs
mov
js
lahf
sub
leave
lock
mov
stc
cmc
dec
cltd
sub
inc
cmp
addr16
jge
jno
insb
mov
pop
sub
cmp
out
cmp
add
arpl
mov
pop
fwait
cli
cmpsb
jno
jg
loop
bound
jo
pop
shll
cmp
rorl
icebp
push
cmpsb
jb
in
loop
jnp
scas
js
addr16
test
mov
les
int3
dec
xor
jle
movsb
jmp
movsl
fidivs
lods
mov
out
stos
jmp
jmp
or
push
and
xor
call
enter
add
and
push
dec
dec
xor
mov
pop
ds
xor
cs
pop
push
das
rsm
fidivrl
cmpsb
cmp
cmp
inc
push
jmp
outsb
dec
adc
in
lods
inc
xchg
sub
loop
ss
aad
rcl
enter
sub
push
push
jb
or
pop
je
cld
fidivs
lcall
mov
push
pop
lock
mul
stos
mov
rcll
jbe
lcall
cmp
dec
mov
mov
pop
daa
mov
inc
mov
mov
adc
sbb
pop
dec
jmp
daa
or
jg
add
sub
add
lret
lods
jno
add
mov
out
stos
call
pushf
ljmp
test
mov
lods
adc
lahf
xchg
roll
shl
fldl
aaa
les
test
cmp
dec
pop
cmp
aad
dec
inc
ret
fimuls
xor
daa
nop
push
loope
in
pop
dec
movsb
xchg
dec
test
clc
xor
sub
hlt
dec
mov
pop
clc
mov
out
xor
outsb
leave
fcomi
and
adc
std
ss
in
dec
and
ret
cmc
mov
mov
pop
dec
mov
loop
dec
cmp
mov
xchg
sbb
xchg
ljmp
jnp
sbb
repnz
pop
icebp
data16
mov
mov
cmp
scas
enter
arpl
lret
cmp
adc
arpl
sub
jb
mov
dec
repz
int3
aas
shll
ljmp
cmpsb
or
adc
test
into
push
pop
stos
out
adc
lods
jg
icebp
arpl
jmp
nop
sbb
add
jl
flds
push
std
lods
stos
iret
and
xchg
into
mov
or
enter
out
lea
pop
xchg
xor
divl
daa
inc
mov
imul
pop
ss
das
rcr
xchg
rclb
inc
mov
addl
xor
std
std
add
sbb
push
outsl
fsub
shr
dec
leave
sub
fdivrs
rorb
cmpsl
fs
mov
dec
mov
cmpsl
cmpsb
leave
jns
scas
ret
xchg
out
xor
les
mov
clc
adc
dec
enter
lock
iret
inc
add
dec
cmp
mov
cmp
dec
adc
mov
xchg
cld
pushf
jmp
int3
lahf
jl
and
aaa
clc
xchg
fcmove
xor
inc
movsb
mov
push
std
or
sub
lret
or
mov
rcrb
mov
lds
jle
mov
idiv
nop
ret
and
movsl
flds
xor
mov
xor
adc
lods
mov
sub
pop
inc
mov
dec
sbbl
shl
pop
jp
inc
rep
ret
dec
enter
popa
xor
sub
push
clc
fwait
mov
pop
mov
jp
mov
xchg
ljmp
stos
mov
lock
lret
gs
xor
ss
loope
mov
mov
cld
add
pop
daa
loop
and
mov
sahf
les
xchg
inc
popf
repz
sbb
xchg
fistps
mov
jno
push
xor
mov
push
call
ret
arpl
pop
mov
inc
inc
lds
add
mov
mov
fildl
aad
insb
sub
mov
jmp
mov
mov
sub
fdivrs
scas
jmp
mov
insl
in
pop
xchg
push
xor
xchg
filds
in
std
enter
pop
fs
sarl
add
jo
loopne
mov
cmp
push
pop
mov
into
push
sti
inc
int
jl
dec
jno
std
test
out
jge
dec
dec
cli
gs
imul
rcll
and
pop
mov
and
dec
pop
into
dec
in
in
mov
in
xor
int
testb
bound
nop
shl
sub
push
sbb
repnz
in
in
push
loopne
and
xchg
fldl
je
and
jg
lods
test
sbb
daa
push
xor
pusha
mov
imul
dec
jmp
insl
out
ss
mov
clc
outsl
vpmacsww
mov
push
ficompl
jb
adc
fbstp
bound
lret
lret
push
lahf
pop
imul
fistpl
push
cmp
mov
subl
cmc
outsb
inc
adc
push
pop
mov
xorl
imul
mov
aaa
ljmp
cld
jg
mov
loope
add
cli
sub
movl
jae
or
int3
dec
sub
pop
pop
ljmp
jae
adc
in
js
push
mov
enter
and
add
jp
push
jge
ficoms
js
mov
out
jmp
imul
mov
movsl
push
adcl
xor
pop
rol
xor
lods
mov
movsb
adc
test
pop
jl
inc
push
mov
cltd
mov
cs
fmuls
clc
jae
scas
add
dec
mov
sahf
in
leave
cmp
scas
mov
cs
pop
outsl
in
mov
adc
ljmp
xchg
xor
rcr
mov
enter
mov
clc
in
mov
inc
out
jmp
stos
fadds
aam
cmp
mov
cld
mov
sbb
and
cmp
push
push
inc
out
push
je
jno
adc
gs
add
or
jnp
dec
mov
imul
bnd
push
xor
pop
pusha
and
push
in
dec
push
lcall
lcall
and
sarb
mov
xchg
adc
fidivrs
push
les
cs
clc
inc
push
lahf
adc
ljmp
jecxz
int
adc
insb
data16
sbb
sub
cmp
inc
dec
shl
add
add
inc
dec
call
xchg
ficoms
or
or
push
pop
test
push
xchg
bound
cmp
mov
mov
mov
ljmp
add
xchg
adc
jg
jo
fistpll
pop
push
bound
fidivrl
fildll
out
mov
cmp
movsb
add
ja
int
or
in
loopne,pn
fisubrs
cld
mov
stc
ss
mov
adc
outsl
or
sarb
test
jg
cs
mov
nop
xor
cltd
adc
push
sbb
inc
xchg
movsb
pop
fidivrs
jge
je
xor
rolb
notb
add
lret
fs
bound
movsl
or
ret
jecxz
xor
mov
lods
jae
dec
push
cmp
in
sub
loop
add
jns
add
sub
inc
xchg
xchg
push
les
xchg
push
xchg
call
and
push
pop
fs
dec
adc
lock
ja
mov
xor
cmc
pop
repnz
add
xlat
mov
lods
sbb
jp
out
dec
add
mov
ret
inc
mov
sbb
push
and
jo
sub
je
xor
xchg
add
bound
pop
lret
dec
lock
and
bound
sub
divb
and
xchg
scas
out
testb
flds
sub
fistpl
jmp
andnps
test
lods
jecxz
js
inc
dec
adc
lock
mov
add
adc
insb
xchg
cli
mov
jns
out
push
xchg
test
loopne
hlt
sub
repnz
ficompl
out
mov
lds
xor
xchg
mov
sbb
fildl
repz
negl
inc
sub
sub
adc
push
lock
dec
mov
cmp
dec
decl
inc
leave
popa
out
pop
adcb
jnp
sarb
jl
add
lods
call
inc
sub
lods
dec
and
ja
xlat
adc
test
sub
movsb
repnz
sbb
xchg
movsb
aas
mov
out
outsb
gs
lods
xor
das
cmp
sub
pop
xor
imul
bound
add
fsubs
jne
adc
sbb
stos
lret
nop
lret
xchg
jecxz
in
lock
xlat
out
add
adc
enter
cmc
sub
and
push
dec
pop
shll
xor
into
push
das
add
inc
xor
push
adc
imul
loopne
repz
es
stos
xchg
test
sub
ja
aad
xchg
ret
cmp
popa
mov
lcall
les
push
ret
ret
pop
pusha
fcoms
in
xor
in
and
jo
push
add
add
add
add
add
add
inc
xchg
outsl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
mov
add
