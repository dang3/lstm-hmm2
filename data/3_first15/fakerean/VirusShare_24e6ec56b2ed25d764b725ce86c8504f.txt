push
mov
sub
movl
mov
xor
mov
div
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
and
mov
mov
add
mov
mov
add
mov
mov
add
movzbl
movzbl
sub
mov
add
mov
jmp
mov
and
mov
mov
xor
mov
div
mov
mov
mov
mov
add
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
movl
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
mov
mov
jmp
mov
sub
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
xor
mov
mov
mov
pushl
pushl
pushl
call
add
cmp
je
mov
mov
xor
mov
mov
mov
jmp
mov
mov
call
mov
pop
leave
ret
push
mov
sub
call
andl
push
push
push
push
push
call
cmp
jne
push
push
call
test
jne
push
push
push
push
call
add
xor
jmp
xor
leave
ret
int3
int3
int3
outsl
dec
xor
int3
int3
int3
int3
int3
push
mov
mov
mov
rcrb
scas
divl
pop
fistps
mov
dec
push
sbb
in
push
roll
dec
or
jne
mov
lods
imul
lds
sbb
and
dec
out
add
xchg
jnp
loop
mov
dec
or
enter
shll
ja
adc
leave
push
outsb
pop
xchg
jge,pn
fcompl
sbb
cmc
loopne
sub
dec
fs
outsl
pop
dec
ret
mov
es
jg
mov
test
sub
push
aam
sbb
sahf
int
sbb
jbe
xchg
and
jge
jmp
or
lret
mov
push
fisttpl
cmc
psubsb
aam
mov
push
into
mov
mov
lds
push
pop
fs
cld
loopne
push
pushl
roll
mov
daa
cmc
push
fnstsw
jmp
stc
or
std
scas
ret
lahf
dec
push
xchg
adc
fisubs
lret
xchg
xchg
jmp
iret
push
insb
fsubl
sub
mov
add
jge
adc
push
sahf
ja
aam
adc
mov
sahf
sbb
sbb
xchg
repnz
test
fs
sub
dec
mov
inc
add
jb
xchg
mov
dec
xlat
jmp
fs
jmp
jno
pop
sbb
add
xor
lret
cmpsl
add
mov
repz
call
cli
les
jne
icebp
sub
ret
mov
testl
pop
pusha
lea
fmuls
jge
add
outsb
les
mov
in
inc
xchg
mov
jb
insb
es
pop
inc
pop
imul
aaa
shl
lods
sbb
inc
in
mov
imul
int3
mov
push
loopne
push
lock
inc
inc
lods
xor
jo
push
push
mov
or
icebp
ljmp
gs
xchg
loopne
ja
pop
sub
pop
inc
daa
iret
mov
loopne
xchg
lds
into
jae
inc
push
push
mov
clc
pop
mov
stos
out
andl
lods
pop
add
and
pmuludq
mov
xor
jbe
xlat
es
inc
xchg
xorl
push
xor
fnstenv
fst
adc
into
sbb
push
jge
inc
imul
lods
cmp
cmp
rorl
pop
dec
aaa
or
arpl
push
and
and
movsb
xor
push
adc
in
and
mov
ljmp
in
push
add
repnz
mov
add
mov
bound
mov
inc
push
loopne
pop
add
ror
pusha
popa
jecxz
cmp
outsb
sub
and
je
int
es
fidivs
vpsrlq
or
mov
out
sbb
rcrb
jmp
add
int
pop
fisubrs
fprem
cwtl
mov
sub
daa
movsl
pop
in
sbb
je
pop
cmp
mov
fldenv
cld
fsts
pushl
and
leave
cltd
imul
sarb
add
sahf
or
mov
enter
movsb
sti
xchg
add
pop
mov
mov
pop
mov
xchg
and
nop
xor
cwtl
cmp
inc
and
sbb
repnz
jmp
rcrb
mov
jb
sub
or
inc
add
fildll
xchg
push
sbb
mov
outsb
mov
xor
sarb
push
in
data16
ffreep
aaa
stos
std
outsb
xchg
popa
pushl
mov
mov
pop
mov
fisubrs
sbb
je
inc
mov
aas
in
pop
pushf
sbb
movsl
test
or
movsl
mov
and
fucomip
mov
add
fnstsw
inc
push
iret
add
lcall
test
pop
or
mov
xor
outsl
nop
cs
das
invd
or
lret
pop
pop
lea
ror
mov
repz
add
inc
jo
xchg
mov
and
es
pop
fdivl
xor
add
xor
pop
adc
das
aaa
push
jae
mov
aaa
cwtl
cs
jecxz
fidivrl
subb
mov
and
or
xor
mov
lock
push
data16
adc
in
add
push
aaa
scas
les
leave
adc
gs
outsl
push
mov
xor
xchg
or
insb
aaa
icebp
pop
loop
inc
shr
rolb
repz
aas
xchg
mov
pop
mov
mov
xchg
adc
push
cmp
cmpsb
jle
cmpsb
lods
push
arpl
and
mov
mov
inc
push
inc
push
mov
addr16
js
xchg
dec
fimull
jno
sub
jns
lret
int
jbe
cmp
popa
sub
sub
or
xchg
pop
jecxz
pushf
mov
data16
pop
inc
dec
mov
add
xchg
sbb
pushf
adc
inc
je
cmc
test
sub
test
aam
sbb
pop
dec
inc
xor
dec
cmpsl
aam
movsl
xor
cli
xlat
pop
xlat
lock
add
shll
pop
push
jmp
cwtl
xchg
or
std
jle
push
push
mov
int3
push
cmp
inc
repz
lods
fstl
std
notl
adc
imul
std
mov
psubb
into
popa
roll
add
das
aad
jb
cmpsl
shll
lret
xchg
pop
dec
xchg
scas
mov
push
lea
xchg
mov
lcall
in
mov
test
pop
xor
mov
jmp
nop
xchg
push
cwtl
mov
xchg
sub
sub
enter
push
sbb
xchg
in
pop
mov
inc
pop
pop
xor
fdivl
std
pusha
jmp
pushf
idivl
mov
adc
and
and
pushw
and
sbb
out
jnp
sub
or
or
ss
out
ds
jne
xor
aam
int3
inc
push
push
lcall
pop
xor
lcall
push
add
popa
out
mov
fisubrs
mov
xchg
and
pop
pusha
lcall
inc
mov
imul
pop
xlat
stc
jg
or
jne
xchg
jne
sahf
dec
add
push
jmp
loop
ret
leave
fisubs
es
xchg
movsl
sub
mov
stos
rol
mov
orl
mov
xchg
fwait
loop
sar
cmp
call
xor
movsb
jne
sahf
imull
sbb
pop
mov
xor
xchg
xlat
daa
push
scas
out
insb
mov
add
sahf
ljmp
xor
inc
adc
enter
inc
in
in
jmp
and
or
pop
divl
lea
in
loope
pop
xchg
adc
and
sbb
cmp
pop
xchg
int3
push
test
cmp
shlb
jae
mov
addl
out
xor
mov
inc
fwait
outsb
lahf
mov
add
in
sub
fcmovu
mov
ds
mov
sub
xchg
pushf
inc
add
pop
aad
cmp
cmp
fmull
jle
outsl
jle
popf
or
cmpsb
push
dec
cmp
add
ss
jns
rcrl
add
cmp
push
push
lock
push
insl
jnp
pop
mov
pop
in
rcrl
lock
mov
inc
cmp
push
cltd
scas
inc
clc
popa
jbe
gs
jnp
sarb
stos
hlt
int3
arpl
shr
ret
mov
push
push
push
out
hlt
or
push
hlt
xorb
xor
cmc
aad
fs
jne
es
out
dec
daa
sub
push
jle
jge
in
mov
sbb
in
cwtl
inc
daa
fsubl
loope
mov
imul
add
in
mov
in
push
pop
mov
pushf
adc
cmp
rcrb
pop
mov
jb
adc
dec
jmp
mov
jp
inc
mov
lret
and
push
dec
ss
xlat
rcrb
popl
mov
cld
xor
fistpll
jle
frstpm(287
frstor
sub
outsb
ds
jmp
push
or
ret
imul
jmp
in
shrl
xchg
push
sub
pushf
stos
imul
add
pop
mov
add
xchg
adc
imul
sub
add
icebp
fwait
mov
mov
loope,pn
pop
cmpsb
lea
mov
daa
loopne
add
sub
push
or
or
jbe
adc
xor
inc
ljmp
xchg
test
arpl
insl
or
pushf
in
shlb
cs
push
movsl
jo
push
les
cli
gs
xor
fsubrs
mov
mov
dec
js
add
and
jb
mov
cmp
add
jbe
xor
jae
sbb
and
test
push
xchg
aad
push
jns
xchg
cmp
mov
cli
add
fstpl
cmp
addr16
mov
sahf
mov
inc
xchg
mov
hlt
xor
add
dec
push
dec
cld
imul
lods
in
dec
mov
pop
and
mov
out
je
inc
push
andps
sbb
inc
adcl
into
jae
icebp
xchg
test
pop
imul
dec
fcmovb
jmp
xchg
push
adc
xlat
adc
mov
mov
out
in
xchg
jno
lcall
js
jno
dec
mov
psubsb
scas
arpl
loop
pop
mov
mov
fisttps
xchg
sub
sub
ret
loope
shrl
mov
cmp
idivb
sub
push
cmp
and
das
or
fdivrs
ss
in
jnp
add
shl
jle
and
stos
mov
lret
cmp
in
jg
aam
lock
int
arpl
mov
or
int
push
rcll
sahf
aad
rorl
mov
jl
jecxz
push
mov
adc
es
cmp
sahf
and
mov
clc
adc
ljmp
sbb
sub
shrb
jp
out
adc
push
dec
sbb
pop
les
in
out
out
push
mov
xchg
sti
shr
mov
les
test
push
jge
in
and
push
push
mov
xchg
jbe
js
clc
outsb
int
lcall
out
or
push
xchg
sahf
dec
iret
jae
adc
scas
and
lods
mov
dec
cmp
into
sbb
das
adc
adc
mov
sahf
out
outsl
testl
adc
adc
roll
loopne
hlt
xchg
pop
and
mov
lock
faddl
xchg
movsl
inc
sub
mov
xchg
push
xor
mov
pop
mov
outsb
ja
fstpt
sbb
mov
cs
xchg
pop
jo
lcall
in
or
popa
std
scas
mov
shrb
mov
lahf
dec
imul
xor
jo
popa
inc
sub
dec
mov
mov
jb
leave
inc
loope
pop
out
jnp
testb
adc
inc
aas
call
insl
sbb
scas
push
xchg
fldt
mov
les
cmp
mov
outsb
ljmp
rcrl
icebp
dec
xorl
pop
dec
and
sarw
inc
dec
mov
lods
sbb
das
aas
cwtl
movsb
scas
fldlg2
hlt
movsl
movsb
and
bound
lahf
pusha
and
in
pop
dec
fldt
lret
pop
insb
cmc
pop
pop
repz
loopne
jge
mov
add
adc
push
in
mov
scas
pop
sahf
xor
or
hlt
test
mov
loope
xchg
jmp
es
decl
pop
fmull
fucom
sub
mov
les
jns
xchg
pop
jae
mov
inc
and
dec
push
rcr
sub
cmp
jnp
in
adc
xor
xor
dec
ficoms
ret
push
cs
out
sbb
add
lcall
imul
fildll
push
add
sbb
andb
add
add
push
jl
test
pop
setge
int
dec
xor
sub
cld
or
pop
add
enter
mov
mov
lret
lds
adc
mov
add
and
cmp
or
addr16
xlat
pop
aaa
cmpsl
or
mov
stc
dec
mov
lea
jns
jmp
repz
jecxz
sub
mov
push
gs
xor
lcall
pop
shll
sbb
cmp
sbb
mov
lcall
and
and
dec
shll
jns
mov
pop
loop
sbb
adc
dec
mov
or
jmp
inc
xchg
mov
aam
outsl
fstps
cwtl
aad
shl
mov
nop
mov
test
or
rclb
out
sbb
xchg
jge
in
or
xchg
and
lret
repz
adc
add
aam
bound
mov
or
inc
leave
incl
push
jle
addb
sub
lock
jb
mov
int3
add
xchg
and
push
mov
xlat
cmp
mov
inc
push
xor
std
push
add
rcrl
push
mov
and
adc
call
adc
sbb
and
adc
and
shll
bound
adc
movsb
ds
and
pop
fisttps
add
push
fwait
adc
sub
push
xchg
call
filds
leave
jl
lock
scas
mov
int
test
mov
inc
test
jl
js
jno
mov
cmp
fwait
inc
push
dec
or
js
adcl
mov
cmp
out
xlat
jle
push
into
cmovle
xchg
shr
sub
rcr
fldcw
jo
cmpl
mov
repz
or
ljmp
lods
cltd
shlb
es
repnz
mov
push
ss
gs
cltd
subl
and
xchg
push
jmp
jns
dec
loope
jmp
sub
xchg
mov
dec
add
out
imul
sub
stos
popf
rorb
fadd
arpl
test
mov
and
sbb
popa
cs
mov
push
mov
pop
je
insb
lock
jge
push
fstpl
lds
and
xor
ds
aam
pop
aas
int3
sbb
das
fwait
sbb
sub
movsl
repz
stos
test
mov
mov
pop
stos
fimuls
movsb
aaa
xchg
sbb
stc
out
call
mov
sti
cltd
push
aas
inc
popf
mov
test
jg
adc
mov
mov
fldt
mov
sub
icebp
pop
and
aad
pop
xchg
cmpsl
out
aas
inc
mov
inc
sub
pop
sub
in
or
ja
dec
hlt
out
dec
mov
pushf
scas
mov
mov
or
outsb
xor
popa
push
ds
jo
enter
push
inc
shlb
adc
and
repnz
aam
stc
arpl
mov
ljmp
jnp
scas
or
adc
xchg
xchg
jne
nop
add
out
mov
push
add
push
lods
ja
xor
or
fs
adc
stc
mov
cmovge
adc
lea
mov
xchg
or
mov
add
cmp
call
pop
je
mov
adc
in
cmpsl
add
xor
add
sbb
pop
inc
hlt
inc
push
pop
jp
movsl
mov
imul
lock
and
or
push
inc
mov
add
out
cmp
shr
int3
cmp
inc
and
ljmp
rol
add
push
xchg
clc
adc
push
lret
xor
into
in
sbb
daa
mov
aaa
mov
pop
lea
xor
imull
xchg
xchg
dec
add
ror
dec
jg
xor
fs
xchg
xor
dec
mov
mov
lret
pop
mov
adc
ja
mov
lods
cmp
sub
lcall
and
scas
adc
iret
xor
add
fstps
cwtl
xor
mov
fistps
testb
mov
and
cmp
pop
in
xor
stos
jge
push
dec
repnz
lcall
add
cmp
xchg
sbb
inc
sub
xchg
jecxz
testl
data16
mov
fnstcw
inc
ljmp
cmp
jae
ss
out
dec
ficomps
and
and
jae
xorb
mov
imul
inc
rcll
js
mov
mov
mov
xchg
sbb
xlat
inc
add
fstpt
fldl
into
adc
ja
xchg
jno
push
push
sub
cmp
push
ret
imul
je
mov
imul
inc
dec
out
sbb
add
mov
inc
test
scas
or
mov
loop
movsl
pop
repz
out
ds
movsb
mov
aam
jno
inc
test
ds
jb
out
mov
push
xchg
xor
mov
enter
bnd
and
dec
inc
and
mov
jne
dec
sbb
xchg
xorb
add
inc
add
xchg
jo
and
mov
inc
aam
in
movsb
inc
lods
lock
in
jmp
inc
into
cmpb
fsubrl
adc
jmp
add
push
clc
repnz
dec
or
xchg
xchg
pop
sbb
inc
inc
or
dec
ja
stos
dec
adc
movsb
lret
sbb
and
cwtl
ds
push
xchg
es
mov
cwtl
sbb
test
imul
cmpsl
lcall
out
mov
ret
pushf
mov
iret
test
rep
lock
jle
pop
xchg
in
jecxz
fists
test
out
push
je
pop
lea
incl
ja
pop
fdivrp
mov
mov
sbb
cmpsb
or
add
mov
ja
push
fwait
push
mov
lods
pop
cli
push
dec
pop
add
mov
push
cmp
pusha
mov
pop
xorl
je
stos
jmp
or
aam
add
adc
ljmp
imul
shrl
push
sub
fwait
jg
push
mov
mov
sbb
mov
add
ds
subb
jnp
pop
in
sbb
rcl
sbb
pop
or
int3
movsl
jle
sub
xchg
imul
xchg
inc
sbb
subb
sub
stos
pop
mov
xlat
mov
adc
sbb
mov
outsb
dec
lds
out
dec
lods
cli
icebp
lahf
fisttpll
mov
add
into
sbb
repz
push
outsl
insb
xchg
xor
rcrb
into
pop
test
adc
dec
ljmp
std
aas
daa
out
or
pop
pop
popa
out
daa
test
xchg
and
das
fcmovnu
mov
sub
mulb
stos
push
inc
xchg
dec
cli
pop
cmpb
mov
aas
dec
pop
nop
xchg
push
jp
hlt
fistpl
inc
push
imul
adc
push
xor
pop
mov
dec
int3
andb
inc
ljmp
sti
jl
shrl
push
sbb
std
mov
cwtl
aad
fidivl
pop
dec
jle
sbb
les
mov
rclb
fcom
adc
inc
mov
sub
repnz
mov
fisubrl
add
in
movsl
inc
push
scas
add
insl
mov
mov
inc
sub
and
cmpsl
pop
push
cmp
int
fwait
cmp
mov
rcll
int3
dec
fdivrs
in
addl
stos
std
pop
push
test
or
adc
imul
or
stc
sub
insl
jnp
shl
or
jbe
loope
mov
xorb
jg
loope
js
and
test
fs
nop
push
dec
pop
js
popf
rol
js
cs
fs
int3
int
dec
outsl
out
xor
pop
int3
mov
sub
out
jb
and
insb
jge
out
adc
ret
bound
out
fdivl
or
loope
js
imul
and
inc
mov
adc
int
and
fsubrp
call
lds
dec
or
xchg
dec
or
mov
xchg
dec
je
out
mov
and
pop
and
push
pop
cwtl
dec
cwtl
pusha
data16
imul
in
ljmp
das
mov
sbb
imul
dec
lods
int
lods
adc
mov
pop
gs
push
pop
cmp
mov
pop
je
mov
and
popf
mov
out
jno
iret
mov
jl
or
out
cwtl
add
ljmp
mov
hlt
iret
aas
outsb
mov
jle
dec
aad
pop
sahf
pushf
mov
ficomps
adc
adc
aam
dec
lahf
push
mov
ja
dec
xor
js
cmp
lds
insl
mov
mov
lods
xchg
add
push
ret
xor
or
or
mov
insl
call
pop
int3
and
add
shll
clc
daa
adc
add
adc
movsl
pop
xchg
xchg
ljmp
jo
loope
mov
data16
push
icebp
sub
inc
mov
dec
cli
lds
push
add
dec
xor
pop
sbb
dec
xor
or
mov
add
or
jmp
mov
xor
mov
out
dec
jb
out
movsb
mov
mov
mov
add
into
adc
jo
push
sub
jl
repz
into
push
mov
sub
gs
cmp
inc
push
popa
or
jl
es
push
pop
adc
sub
xchg
mov
adc
cmp
jb
jg
and
mov
into
fwait
and
mov
rcl
pop
cmp
jg
outsb
cli
xchg
jne
sbb
mov
xor
push
pop
inc
in
cmp
jo
jg
fcmovbe
loope
pop
inc
std
pop
sahf
jg
dec
sub
repz
cmp
push
outsl
daa
push
adc
rclb
jmp
mov
sub
add
or
into
push
bound
xchg
rorl
push
inc
add
cmp
xchg
jb
popa
je
sbb
mov
in
in
pop
mov
add
test
inc
bound
xchg
sti
ja
lds
scas
cli
and
jbe
pop
push
push
clc
pop
jb
dec
mov
icebp
out
loope
lods
xchg
jo
loopne
enter
sub
repnz
sub
cmpsl
inc
movsl
data16
inc
jp
mov
xchg
negb
mov
call
loope
popf
fildll
mov
cmpb
cmpsb
popf
push
out
call
xchg
xchg
sbb
clc
or
sarb
cs
pop
lahf
cmp
ja
pop
fwait
mov
cli
push
das
adc
pop
xchg
popf
aas
test
jecxz
xchg
aas
cmpsl
rcll
aaa
jne
mov
lds
negb
loop
adc
xchg
ss
jge
and
and
mov
jbe
or
stos
repnz
cs
je
mov
or
pop
popf
add
enter
sub
xor
mov
mov
cmp
mov
inc
iret
xor
xor
or
push
jns
test
add
sti
ss
icebp
xchg
xchg
clc
scas
dec
pop
scas
and
mov
xor
enter
dec
int
push
rorb
inc
cmp
pop
ljmp
inc
pop
dec
mov
or
mov
fidivrs
arpl
push
mov
sti
js
jns
nop
lea
or
mov
int3
jp
dec
xchg
lret
xor
jmp
lret
sbb
ds
mov
les
mov
push
jge
lcall
and
push
sub
pop
jo
and
aaa
mov
aas
jne
rcr
add
xchg
sub
insb
in
mov
sbb
mov
rol
or
xor
orl
fbld
sub
pop
gs
repnz
imul
outsb
mov
or
jg
clc
rcll
adc
sahf
out
or
jno
adc
sbb
mov
xor
mov
iret
or
imul
icebp
repz
out
mov
les
push
sahf
xor
repz
out
xor
dec
lea
test
jbe
daa
int3
mov
arpl
test
sub
in
loopew
and
or
mov
aaa
insl
xor
xchg
mov
icebp
repz
mov
mov
inc
jle
in
ss
jp
mov
mov
xchg
fildll
les
in
cmp
es
movsb
imul
sub
adc
push
test
mov
adcl
clc
xor
push
inc
pop
imul
addr16
iret
std
sub
add
sbb
mov
adc
lret
jge
lea
xor
lcall
cmp
xchg
je
fnstenv
pusha
adc
inc
lods
jecxz
xchg
jnp
ret
scas
je
popf
es
push
xor
adc
pop
push
push
mov
pop
es
in
and
sarl
sahf
mov
cmp
arpl
mov
ss
push
push
lods
ljmp
addr16
test
mov
sbbl
mov
pop
mov
sub
dec
pop
dec
addr16
xchg
push
movsb
out
aad
push
mov
aas
jg
iret
dec
mov
insl
jno
icebp
movsb
mov
fs
add
mov
mov
xor
add
adcb
add
jge
xor
jns
xchg
fsubl
sub
stos
add
fwait
mov
ja
adc
mov
xor
out
xchg
adc
lds
mov
adc
ss
ror
test
mov
test
lods
jge
xor
add
jmp
push
add
push
mov
push
pop
pop
std
pop
cmp
sbb
and
mov
xchg
pop
repz
ds
inc
jne
jle
jae
pop
out
or
aas
shlb
ss
inc
and
push
sbb
ljmp
add
pushf
jl
nop
in
pop
mov
push
cmpsb
jl
jne
xchg
xlat
inc
mov
shlb
mov
and
jle
inc
aad
vmread
cmpsl
xchg
imul
lahf
and
pop
daa
mov
push
pusha
ret
icebp
test
fidivrl
xlat
adc
xchg
sbb
divb
cmpb
mov
jns
stos
ljmp
dec
scas
sbb
and
pop
pop
add
xchg
push
cmc
addr16
std
add
mov
and
arpl
dec
fwait
cltd
add
pop
icebp
test
jg
mov
cmpsb
or
cmpsl
dec
mov
mov
xor
and
pop
and
xlat
mov
lret
push
arpl
pop
push
lds
pop
xchg
jne
int3
je
jecxz
int3
adc
push
jge
les
loop
test
out
or
call
pop
jno
push
add
and
jo
jno
pop
dec
adc
ds
test
arpl
push
arpl
out
das
cmp
inc
add
aas
mov
xor
lock
mov
cmpb
mov
xchg
int3
sbb
and
add
dec
inc
lods
out
nop
pop
mov
es
lahf
adc
sbb
jbe
decl
sbb
inc
fisubl
push
mov
das
mov
add
cmp
jns
dec
cs
mov
sbb
push
jge
xchg
iret
stos
sbb
sbb
or
adc
mov
aad
pop
xor
sub
js
sub
jg
xor
roll
or
add
add
fists
inc
jl
imul
aaa
mov
xor
mov
jmp
fidivrs
push
adc
mov
inc
dec
jg
inc
mov
fidivrs
pop
imul
sub
cs
xchg
mov
xlat
ja
jae
pushf
into
add
mov
ret
sbb
incl
jnp
xlat
add
mov
gs
into
decl
push
cltd
les
jbe
dec
test
sub
xchg
dec
xchg
mov
push
fimuls
movsb
jl
int
loop
xchg
notl
push
push
push
movsb
xlat
enter
ljmp
inc
mov
push
aas
scas
subb
xchg
incl
jp
cmp
adc
xor
rcr
sbb
int
xchg
xor
cmpsl
mov
and
cmpsb
push
xor
int
push
pop
loop
xor
outsb
inc
rcll
mov
pop
pop
push
out
adc
xor
lcall
repz
sahf
mov
or
mov
jmp
std
rcrb
test
sub
jmp
xor
test
adc
inc
jmp
flds
aas
outsb
cld
sarl
daa
sbb
jge
mov
cmpsl
or
pop
das
push
movsl
ret
adc
into
push
popa
mov
push
add
sbb
test
jge
dec
hlt
lcall
push
push
out
inc
dec
add
sahf
pop
movhps
inc
dec
add
sti
imul
stos
push
stos
cmp
popf
sub
ficompl
cwtl
jmp
inc
mov
push
data16
or
xchg
dec
pop
xchg
xchg
jne
out
pop
loopne
sbbl
lret
inc
call
add
mov
or
aam
push
sar
xchg
lds
ds
pop
mov
jg
xchg
adc
mov
cwtl
in
mov
mul
ljmp
loop
insl
sub
cmp
int3
jns
loope
push
call
popf
sbb
cmp
inc
mov
psubw
cmp
sub
leave
lds
repnz
int
sbbb
std
dec
sahf
fiaddl
movsb
pop
hlt
adc
aad
inc
aam
cmp
repz
pop
xor
sbb
cwtl
outsl
fists
pop
cmc
aam
cmpsb
jb
sbb
cld
fmul
dec
icebp
mov
iret
jmp
inc
jo
mov
dec
adc
push
fisubl
mov
fiaddl
outsl
adc
out
int
scas
into
inc
inc
cmp
imul
cmc
mov
xchg
lods
sub
mov
xchg
sbb
sbb
and
add
lcall
mov
mov
mov
jge
sbb
lcall
jge
pop
xchg
loop
inc
outsl
aaa
add
nop
in
mov
inc
cmp
jbe
pop
xchg
and
bound
lcall
pop
mov
addr16
adc
je
pop
mov
mov
loope
jo
in
dec
add
push
add
push
pop
add
sub
xor
ja
mov
jmp
scas
negb
or
sbb
into
add
add
sub
jg
mov
push
ds
outsb
mov
inc
ret
fstpt
inc
pop
repz
nop
mov
movsl
or
fstps
decl
outsl
push
sbb
les
roll
cli
inc
std
insb
scas
lds
test
std
insl
jno
inc
jmp
loopne
jmp
or
sbb
fmul
aas
cmp
imul
jmp
das
add
std
pop
pushf
pop
rolb
fstl
adc
push
cltd
pop
outsl
mov
gs
or
push
add
mov
xchg
loopne
fsubp
mov
mov
inc
or
add
mov
sbb
bound
pop
js
outsb
pop
ja
or
stos
push
inc
sahf
mov
or
lods
sbb
aas
stos
fcoms
cmpsb
mov
jmp
cmp
lods
push
mov
std
subl
push
aam
aam
pop
adc
xchg
decb
pusha
aam
adc
rcrl
push
push
lcall
sbb
shlb
sbb
mov
lods
pop
sub
xlat
push
pusha
adc
clc
push
or
aaa
pop
mov
and
push
pop
lock
int3
adc
out
pop
mov
add
pop
js
push
xchg
stc
pushf
stos
lds
icebp
mov
mov
lods
roll
fisubrl
cltd
mov
jnp
fwait
sbbl
test
mov
fisubrs
movsb
pandn
inc
jae
sbb
and
arpl
inc
enter
mov
pusha
std
addb
movsl
loope
mov
sbb
mov
push
pop
inc
mov
ret
cmc
inc
ja
loop
lea
movsb
jp
or
sahf
out
mov
mov
and
int3
mov
les
mov
iret
js
insl
jbe
jns
jp,pn
add
mov
jle
cltd
cmpsb
and
jmp
setae
pop
jnp
in
add
or
insl
repz
in
or
xchg
inc
test
xchg
les
mov
shrl
xchg
pop
push
push
jmp
xchg
mov
mov
lds
sbb
add
lret
push
fcmovne
add
jnp
popa
dec
xchg
sbb
xchg
test
mov
dec
insl
rcrl
mov
pop
lds
push
pop
pop
in
and
shll
rorb
mov
sbb
aam
int3
mov
dec
xor
xor
add
fsubl
lahf
fld1
inc
mov
push
adc
jne
xchg
mov
xor
adc
stos
mov
test
ds
pop
mov
mov
xchg
vpaddusb
idiv
scas
push
pop
jne
sti
out
fnsave
daa
dec
fstl
adc
hlt
jne
push
mov
xchg
fcmovnbe
lret
lods
sarl
imul
neg
movsb
rclb
pushf
pop
xor
lods
call
pop
mov
xor
jne
mov
stos
adc
loop
notb
adc
aas
sub
sub
ror
adc
popa
mov
push
jno
pop
inc
cmp
test
popa
sbb
mov
loope
hlt
out
and
sbb
sti
cmpsl
pop
sub
dec
lret
sub
and
ret
xchg
xor
fwait
and
cwtl
xchg
shll
sub
mov
test
sub
sbb
xorl
pop
push
dec
mov
ja
ret
add
inc
loop
inc
mov
fwait
or
addb
jb
test
out
jp
mov
arpl
sbb
xor
ret
pop
fdivr
mov
add
pop
lock
insl
push
xor
insl
mov
sub
lret
xchg
inc
or
adc
outsl
incb
adc
int3
mov
adc
inc
movsb
sbb
push
in
orb
adc
cmpsb
add
xor
xchg
xor
mov
or
dec
mov
push
arpl
imul
fadd
cmp
jmp
push
aas
mov
push
pop
movsl
or
fldenv
cli
xchg
sub
push
divl
rcrl
push
pop
out
hlt
xor
and
out
xchg
cmp
fisttps
push
jo
xchg
pop
jl
xor
lods
adc
mov
mov
int3
add
rcrb
and
cmp
sbb
shll
xor
jo
movsl
hlt
pop
cmp
xchg
xor
sbb
mov
mov
pusha
and
negl
enter
inc
adc
inc
loopne
inc
dec
xchg
repz
cltd
push
inc
fsubrp
mov
imul
mov
ret
push
out
push
or
ds
inc
add
jno
out
out
ds
pop
push
sub
insl
shlb
and
out
es
inc
jb
adcl
pushf
in
or
stos
or
enter
test
repnz
repnz
mov
xchg
sahf
lods
and
negb
test
jge
pop
or
mov
mov
test
or
sub
sti
popa
into
sti
adc
lret
push
mov
into
xor
rclb
dec
jb
stos
lret
push
push
lds
lcall
lret
mov
and
cmpsl
jl
int3
movl
pop
pop
lods
sub
or
cmpsb
mov
or
or
repnz
push
cmp
push
mov
push
and
ja
sbb
sbb
addl
mov
int3
push
pushl
mov
scas
pandn
mov
js
test
xchg
push
imul
into
ds
inc
jg
adc
inc
dec
inc
push
inc
xor
fwait
movsl
insl
mov
and
cmpsb
cmp
inc
push
xor
xor
notb
fidivrs
sbb
cwtl
sub
pushf
test
mov
adc
push
jne
cmpsl
sub
addr16
pop
pop
adc
fnstenv
stos
fs
push
sub
xor
mov
push
out
dec
hlt
pop
gs
mov
ret
testl
mov
mov
mov
enter
pop
xchg
nop
pop
mov
lds
mov
xchg
insb
into
imul
mov
shrl
enter
int3
fmul
push
jle
jae
mov
lods
sub
hlt
mov
mov
push
pushf
cmp
aad
clc
push
popa
pusha
les
xor
loope
aaa
dec
popa
or
fists
pusha
push
inc
or
mov
scas
popa
popf
shrb
xor
fldt
add
pusha
adc
push
xchg
clc
pop
and
mov
out
and
clc
push
jl
xchg
push
adc
bound
clc
xchg
adc
mov
inc
xchg
inc
jne
dec
cwtl
icebp
sahf
daa
push
push
mov
sub
stos
push
cmp
jae
or
dec
fsubrp
sahf
jo
xor
jae
popa
jb
and
push
outsb
sub
stos
mov
adc
sub
lret
xchg
imul
mov
in
xor
mov
in
pop
mov
jp
push
call
imul
in
les
divl
xchg
outsb
sbb
clc
aad
cs
jo
fsubl
ss
pushf
inc
rclb
out
sbb
jl
mov
push
imul
sbb
popf
fdivp
and
lods
iret
loop
mov
in
hlt
push
lcall
insb
push
mov
push
stos
aaa
std
inc
rcrl
mov
fildll
lahf
cwtl
cmp
es
imul
cmp
icebp
push
or
xor
cli
insb
push
mov
adc
lcall
aas
sbb
es
inc
cmp
xchg
push
lods
mov
jge
push
inc
xor
push
decl
or
fmull
lret
out
push
in
aad
sti
daa
push
gs
negl
pop
jecxz
or
ret
scas
popa
fimull
adc
mov
frstor
cmp
mov
pop
out
std
les
cmp
jb
mov
push
outsb
push
test
es
sub
lcall
rcrl
xchg
mov
test
push
icebp
adc
sahf
jb
mov
cmp
je
mov
mov
scas
ret
add
xor
ss
sti
les
sub
mov
xlat
pusha
xor
and
jg
out
push
mov
cmp
adc
cld
cmp
das
cmc
shll
dec
sar
ds
cmp
mov
adc
mov
dec
int
fidivs
dec
push
jge
bound
xor
rcr
xchg
push
jnp
scas
sti
roll
add
cltd
push
mov
fbstp
inc
clc
or
jb
iret
sbb
iret
in
adc
xchg
dec
push
xchg
call
cmpsb
push
loop
ficoms
addr16
aad
jns
mov
cli
in
mov
push
repz
enter
loope
andb
iret
push
pop
sarl
iret
pop
bound
gs
mov
sbb
pop
inc
xchg
rcll
in
sub
and
repz
iret
cld
cltd
jns
pushf
pop
sbb
mov
inc
jecxz
stc
gs
push
mov
and
lods
test
xchg
cs
xchg
sbb
pusha
push
mov
andl
lock
shrl
rcl
in
lds
das
pop
cmpb
sub
sbb
xor
call
add
outsb
push
pushf
popa
cmc
in
mov
mov
mov
ljmp
add
add
test
mov
in
sub
jno
mov
in
xchg
leave
repnz
icebp
js
jle
xchg
cmp
lret
gs
test
ret
aam
seto
mov
aam
mov
mov
jae
lock
arpl
clc
dec
nop
cmp
or
pop
mov
outsb
js
push
inc
jmp
sbb
popa
adc
fdivr
cli
xchg
lcall
push
out
ror
ret
mov
jbe
sub
jno
inc
repz
mov
dec
test
dec
notl
es
lods
inc
xchg
jg
mov
adc
repz
subl
push
and
imul
enter
icebp
int
imul
lret
mov
pop
loopne
jbe
add
mov
dec
insb
lcall
out
mov
dec
ja
dec
cmp
fldenv
subl
jno
loope
mov
jge
inc
pop
fisubl
call
pop
xchg
ljmp
das
xor
fidivrl
add
jbe
ret
std
mov
xor
into
add
test
push
addr16
jmp
stc
push
and
dec
insl
mov
out
mov
jmp
ljmp
loop
sub
das
push
in
in
aam
mov
pop
push
fimull
pop
movsb
popf
aaa
ret
or
push
shrl
dec
fmull
mov
out
jp
xor
mov
ds
cs
cs
fmul
test
cwtl
jno
bound
cmp
ficoml
adc
jl
sub
inc
test
loope
push
mov
fwait
or
setbe
je
bound
data16
xchg
aas
adc
out
inc
fidivl
mov
xchg
cmp
sbb
leave
lret
or
mov
push
or
ljmp
aas
cmpsl
jge
add
jp
sub
dec
cmp
push
daa
in
mov
push
int3
inc
call
push
pop
arpl
add
pop
cmp
dec
ljmp
dec
imul
mov
mov
pop
rclb
insl
mov
inc
or
pop
iret
or
jg
das
fdivrs
fwait
in
push
test
jle
subl
dec
push
in
xor
insb
imul
lods
lahf
jecxz
das
lret
inc
adc
sbb
ret
or
repnz
adc
xlat
in
dec
inc
imul
in
add
gs
mov
mov
scas
mov
daa
cmc
dec
loopne
xchg
add
mov
dec
inc
out
daa
pushf
jo
and
mov
and
mov
int
jecxz
cmp
test
sarb
xor
sbb
dec
out
or
mov
sub
fdivrl
cld
outsl
shll
leave
xchg
xor
xor
data16
xchg
push
push
push
fldl
sar
rclb
fwait
out
mov
fs
jbe
add
sbb
pop
push
inc
lret
enter
into
mov
mov
xchg
dec
cld
jne
enter
lret
movsb
scas
notb
aaa
sub
add
sbb
hlt
mov
int3
pushf
xchg
incb
mov
lcall
test
push
push
inc
jae
fsubrl
xchg
pop
daa
in
enter
or
xchg
mov
jbe
lcall
and
adc
scas
jbe
lds
ds
lds
ja
push
or
inc
outsb
cmp
dec
push
xlat
jo
pop
add
dec
nop
jl
out
adc
push
iret
popf
scas
cs
push
push
movsl
xorl
loopne
mov
mov
dec
xchg
aaa
mov
sbb
fnsave
cmpsb
mov
push
add
mov
and
lods
in
xor
insl
or
fiaddl
fisubl
mov
sbb
lret
mov
sar
add
cs
push
bound
push
pop
mov
call
loopne
cmpsl
push
js
dec
jns
lea
and
jbe
dec
jns
cmpsl
in
inc
iret
loopne
and
push
sub
mov
fsubs
fs
cs
js
push
cmp
fwait
add
mov
repnz
sbb
enter
and
xchg
int3
dec
shlb
push
cmp
enter
push
add
sti
lret
or
outsl
leave
xchg
aad
fwait
cwtl
pop
dec
jmp
inc
arpl
icebp
in
cmpsb
or
mov
insl
xchg
jmp
insb
insl
arpl
les
in
rcll
pop
fs
pusha
in
ds
xor
cmp
int3
insb
push
jno
out
mov
or
xor
sub
or
jno
sub
and
cltd
push
pop
and
xorl
mov
xchg
and
adc
mov
rolb
inc
pop
and
in
arpl
xchg
fildll
pop
lret
jmp
out
dec
xor
sub
rolb
lret
jmp
and
call
subb
mov
mov
inc
inc
dec
cmc
lock
hlt
pushf
outsl
cmpsb
add
add
loop
roll
xor
mov
cmp
ds
out
xor
hlt
into
lock
and
repz
je
fs
cmpl
cmp
mov
jp
nop
inc
shrl
adc
jae
into
loope
iret
jp
push
sbb
popf
out
lcall
loopne
scas
adc
mov
test
mov
daa
push
in
mov
in
sub
lret
test
orl
inc
add
pop
push
and
aaa
xchg
xor
les
sbb
sti
sub
push
scas
pop
test
xor
sbb
push
into
cmp
mov
sbb
movsb
xor
jno
jl
sub
loopne
xchg
pop
inc
and
nop
jg
xor
push
cmp
dec
subb
movsl
sub
fwait
pushf
xor
sub
and
add
outsb
xor
movsl
outsb
cmpsb
fisubrs
and
scas
fcomi
or
inc
push
xchg
test
fidivl
int3
and
xchg
test
ja
imul
cwtl
cwtl
enter
lds
xchg
addr16
shl
jae
outsl
es
adc
xchg
xchg
pop
sbb
sub
or
dec
pushl
das
mov
xor
adc
call
xor
insl
sub
push
ds
push
adc
add
push
xor
repz
xchg
xchg
out
mov
push
add
jmp
inc
jge
aad
loop
push
in
repz
and
push
in
xor
and
lret
add
lret
out
push
inc
daa
notb
or
movsb
testl
out
xchg
push
in
sub
mov
sub
subb
jb
call
stos
inc
or
jg
inc
sbb
push
aad
inc
sbb
arpl
adc
add
repnz
or
out
icebp
stos
mov
stos
hlt
cli
mov
fldt
fdivrs
pop
aam
mov
xchg
jne
xchg
mulb
scas
fisubs
jno
dec
push
test
dec
pop
sbb
xor
xor
jo
aas
jecxz
orl
mov
stc
es
sar
bound
es
mov
rorb
push
out
pop
pop
fwait
scas
ljmp
or
pop
or
in
jp
dec
pop
mov
mov
jp
sub
pop
sti
test
and
sarl
cltd
subl
push
mov
out
mov
repz
push
mov
mov
dec
jno
icebp
sub
adc
mov
in
scas
sar
xor
idiv
xor
jno
mov
sti
lods
je
sbb
push
fwait
mov
out
inc
sub
pop
sbb
jne
and
cmp
ds
cld
sub
cmpb
filds
int3
mov
sub
ret
call
jp
pop
inc
enter
mov
and
pusha
mov
and
xchg
push
cwtl
push
adcb
out
inc
cmpb
loop
mov
adc
mov
pop
adc
dec
mov
enter
sti
pop
or
push
and
cmp
fpatan
xchg
push
leave
cmpsb
jns
xchg
test
push
mov
pop
ficomps
jmp
sub
js
imul
jns
jbe
lahf
roll
xchg
add
loopne
movsb
lret
in
fcoms
push
insb
pushf
daa
mov
pop
outsl
mov
mov
jnp
xchg
pop
addr16
cmpsb
cmp
ja
testb
repnz
cli
xchg
cli
sub
out
shll
lods
mov
cmp
daa
lock
pop
in
dec
sbb
leave
fs
and
lock
adc
enter
inc
arpl
insl
fxch
pushf
mov
mov
cmp
dec
cli
repnz
fdivl
mov
add
dec
mov
rclb
in
lea
mov
repz
cmc
jge
test
mov
int3
lret
adc
ret
insl
jns
shrb
mov
mov
pop
ljmp
std
dec
sub
push
pushf
clc
mov
inc
dec
mov
insb
stos
enter
es
add
lcall
sbb
mov
lcall
jecxz
push
pop
jle
xchg
xchg
lock
push
subb
sbb
xchg
jae
or
xchg
pop
jge
or
xor
xchg
das
sbb
mov
roll
loopne
test
inc
cmpsl
out
sbb
mov
push
adc
call
lods
jnp
addr16
inc
mov
mov
xor
movsl
push
js
aaa
fsubs
sbb
movsb
fildl
or
addr16
mov
fdivrp
dec
out
mov
cli
or
out
jecxz
xchg
push
lret
shrb
enter
jnp
ror
stos
adc
in
in
gs
push
pop
movups
cmp
stos
outsb
das
popa
addr16
loope
aad
aam
xor
jbe
fisubrl
adc
outsb
adc
movsl
push
pop
jns
mov
mov
push
mov
lock
fnstsw
sub
mov
les
fildl
cmp
cld
repnz
lods
lea
leave
lock
xchg
push
pop
nop
cwtl
je
cli
shl
in
andb
mov
test
cmpsb
and
push
imul
push
lds
cmpsb
adc
lods
rcrb
adc
cmp
jl
dec
xor
iret
mov
filds
xchg
jp
sub
sti
cmc
jecxz
fs
iret
jae
cmc
lret
or
ftst
pop
add
adc
push
mov
sbb
fs
xor
and
and
add
jg
cmp
lahf
mov
iret
cltd
ljmp
inc
loope
int
and
mov
addl
push
xchg
add
jle
mov
mov
pop
divb
mov
pop
iret
fs
filds
xor
sub
xchg
sub
push
mov
inc
cmpsb
inc
dec
mov
pop
or
and
mov
adc
and
jge
aaa
mov
addps
js
sub
dec
adc
pop
mov
inc
fmulp
cmp
fimull
or
les
pop
cmp
xchg
inc
dec
imul
cs
mov
sub
push
push
gs
out
push
jmp
dec
std
aad
dec
outsb
xor
mov
ljmp
or
aaa
jge
pushf
xor
dec
lahf
loop
cmp
in
dec
fnsave
sbb
pop
xchg
lret
dec
fs
xor
mov
jecxz
shr
jne
push
mov
mov
out
mov
pop
cmp
mov
sub
clc
and
repz
xchg
sbb
xchg
stc
xchg
add
or
pop
dec
xor
dec
mov
add
fmuls
rorl
stos
jg
mov
shl
sahf
jbe
les
xor
dec
js
addb
scas
jmp
pop
fiadds
mov
mov
push
cmpsb
fadd
or
and
repz
stos
cmp
xlat
es
clc
dec
push
xchg
in
xlat
push
lahf
mov
std
mov
push
stos
mov
sbbb
in
add
outsl
jne
mov
gs
inc
lret
mov
inc
in
fmuls
jg
loop
adc
xor
fwait
xlat
jno
rorl
cmp
sub
int
mov
outsb
jnp
xor
sbb
pop
jp
push
jge
dec
aas
iret
out
inc
clc
test
adc
adc
pop
mov
out
jle
or
mov
push
hlt
mov
je
fisubrl
jp
and
mov
cmp
sbb
push
aam
jnp
lahf
xchg
mov
mov
pop
cmp
sbbb
cmpsl
push
andb
pop
fs
shll
pushf
out
lret
dec
push
in
test
mov
rcrl
bound
test
dec
inc
outsb
jae
xlat
in
fs
xchg
outsl
jmp
popl
sub
lret
fistl
or
lcall
push
mov
daa
sbb
mov
sub
fimuls
pop
int
int3
mov
nop
jle
icebp
dec
add
fsubs
cmp
mov
jge
add
les
lea
rcrl
dec
mov
dec
push
shlb
stos
test
cmp
push
mov
adc
les
hlt
cmp
ljmp
add
movsl
lret
sub
cltd
push
mov
mov
into
dec
mov
mov
xor
mov
bound
and
popl
iret
mov
nop
and
xchg
adc
push
or
sub
into
int3
sahf
fwait
xchg
inc
inc
mov
and
xchg
nop
sbb
or
cltd
pushf
mov
mov
mov
sub
out
decb
lret
push
insl
pop
cmp
in
pop
dec
arpl
mov
mov
movsl
xchg
push
daa
mov
addr16
jg
push
stos
in
sub
rcr
ljmp
xor
into
jo
mov
pop
incl
imul
mov
out
sub
outsb
dec
adc
popf
sbb
scas
shrb
sbb
js
mov
sarl
cwtl
cli
lret
adc
or
outsb
xchg
sbbl
scas
jne
sbb
enter
in
call
stc
in
sub
pop
std
test
prefetchw
rorl
std
aad
add
outsb
pushf
test
xchg
xchg
pushf
out
pop
xorb
loopne
sub
iret
jns
mov
add
adc
rcll
pop
xor
lcall
pop
cmc
stos
decl
fadd
jno
or
or
cmp
hlt
push
cwtl
cmp
test
sbb
aaa
fwait
cmp
jne
rorb
mov
xchg
sbb
jg
fildll
or
xchg
out
adc
inc
push
scas
mov
cmc
or
adc
cmp
push
dec
sbb
dec
imul
jle
and
out
add
rcrl
add
inc
sahf
cli
test
push
popa
xor
push
neg
ficompl
mov
je
or
in
push
xlat
lods
imull
fdivr
add
fnstenv
sbb
jae
xor
int
cmpsl
mov
out
lock
jp
and
scas
dec
jne
inc
repz
fdivrs
fdivs
push
in
add
jne
insb
cmp
test
xor
dec
jmp
inc
test
data16
xchg
test
lcall
pop
in
scas
std
jne
stos
or
mov
push
jp
xchg
pop
aad
std
repnz
out
xchg
ja
mov
pop
bound
mov
push
dec
je
jne
int
cmp
pop
lock
add
mov
and
shl
ljmp
mov
insl
xor
test
and
lcall
ror
push
mulb
fwait
xchg
mov
pop
cmp
cmp
dec
mov
push
insl
inc
mov
and
inc
inc
pop
adc
sub
mov
loop
test
je
and
fstp
icebp
dec
xchg
and
ss
test
mov
popa
lods
adc
mov
loop
sub
inc
mov
inc
pop
imul
rcrb
popf
or
xchg
jge
shr
dec
xorb
mov
bound
daa
in
jmp
lock
les
lret
adc
fcmovnb
xor
pop
mov
add
sar
lods
pop
mov
pop
aam
pushf
out
stos
enter
xlat
mov
jmp
lret
andl
insb
adc
pop
sti
stos
xchg
repnz
pop
add
jmp
xorb
sub
sahf
es
adc
mov
pop
and
rcll
mov
aaa
push
and
mov
mov
aas
push
dec
sbb
push
leave
mov
jmp
xchg
push
addr16
lods
add
mov
dec
jecxz
fldenv
pop
mov
dec
test
out
xor
xchg
push
jns
loope
xor
push
imul
data16
movsl
jge
mov
repz
in
mov
sbb
mov
mov
imul
or
push
sbb
imul
fcoml
addl
push
and
cli
es
push
mov
in
fbld
int
fcoml
push
sbb
mov
push
test
mov
cli
nop
loop
inc
jecxz
inc
xchg
ret
insl
push
adc
push
cmp
loope
mov
fbld
or
arpl
push
daa
xor
and
mov
pop
jo
ficoms
sub
inc
dec
out
test
pop
xchg
cmp
cmp
lds
cmpl
rcrb
mov
rclw
dec
ret
fildll
ja
mov
mov
fisttpll
push
mov
enter
inc
pop
xor
pop
and
ret
inc
imul
call
mov
inc
or
xchg
sti
mov
pop
xchg
and
insl
sbb
mov
js
or
inc
adc
int
xchg
push
sbb
adc
incl
push
xchg
jne
scas
iret
cwtl
enter
and
enter
and
mulb
pop
ror
int3
leave
xchg
imul
rcr
data16
sub
int
scas
shrb
outsb
gs
and
sub
xchg
dec
adc
cmc
call
ret
pop
bound
xor
adc
jp
inc
adc
mov
ret
aaa
adc
jns
jecxz
addr16
mov
cmc
push
cmpsl
fnsave
jnp
leave
inc
cmpsb
in
jecxz
cwtl
mov
loop
push
adc
mov
cmp
movsb
push
les
cwtl
pop
in
pusha
aaa
fnstenv
sub
adc
cmp
repnz
or
push
pop
fucomip
test
or
pop
fcoml
std
cmpsb
cmp
jl
test
lcall
ror
xchg
imul
sub
jg
xchg
dec
pushf
and
aaa
shrb
std
insl
sub
ljmp
cmp
scas
sar
add
dec
mov
xchg
and
mov
jb
movsl
test
fldcw
iret
lds
das
js
notb
adc
bnd
sub
leave
pop
in
dec
mov
jne
in
nop
out
adc
push
ja
push
cwtl
xor
dec
cmp
ss
out
divl
mov
jns
out
div
sbb
push
or
lcall
add
out
dec
es
pop
scas
and
popa
sub
inc
rolb
push
cwtl
mov
mov
fdivp
pop
and
fisubrl
in
xor
enter
jmp
inc
repz
xor
dec
cwtl
insb
loope
insl
pop
enter
adc
sti
mov
ret
xor
imul
jnp
push
out
pop
mov
or
iret
cmp
bound
or
push
data16
repnz
xchg
popf
int
mov
pusha
leave
jecxz
loopne
incb
in
outsb
subb
iret
mov
loop
pop
or
fistps
call
dec
inc
and
pop
add
stos
pushf
imul
int
lds
nop
in
xchg
outsw
sarb
sbb
jno
imul
jae
sbb
inc
pop
cmpsl
ror
ds
das
arpl
pop
mov
imul
push
out
adc
xor
movsb
leave
sub
xchg
ja
cmp
call
pop
or
push
inc
andl
lds
cmpsl
aaa
or
call
shlb
and
jo
cmp
rclb
mov
add
jg
icebp
push
enter
mov
and
aam
gs
rcrl
ret
pop
xor
mov
add
int3
mov
addr16
arpl
cmp
fcmovnbe
and
cmp
ds
cmpb
in
jmp
push
mov
fldt
jl
jmp
pop
xor
test
add
mov
add
xor
xlat
xchg
adcl
ror
jae
pop
mov
sar
or
xchg
enter
dec
adc
sarb
ljmp
cmp
inc
popa
sahf
xchg
pop
les
les
mov
loope
int
inc
adc
add
inc
je
push
lret
js
dec
punpckldq
push
lret
pushf
sbb
sbb
xchg
push
loopne
push
std
imul
pop
lods
mov
or
cmp
in
addr16
call
stos
out
adc
popf
psubsb
xchg
and
movsl
jns
push
pop
aad
imull
jbe
jno
out
and
cmpsl
repnz
inc
mov
dec
fiaddl
and
sti
aam
cmp
cld
xchg
sub
adc
add
mov
jo
cld
fisttpl
sbb
ret
mov
cmp
sarl
dec
mov
adc
add
jns
cmpsb
out
imul
push
jae
pop
push
add
les
icebp
das
dec
sbb
or
mov
popa
inc
push
xchg
lahf
sub
cltd
adc
out
fs
movsl
mov
add
dec
jo
xchg
mov
lock
push
pop
xor
fisubl
mov
xchg
daa
mov
mov
pop
cltd
mov
fidivrl
adc
mov
mov
ljmp
and
faddl
inc
lretw
pop
mov
jle
ficomps
or
rorb
cltd
pop
repz
adc
pushf
mov
jne
adcb
out
push
int3
orb
out
std
push
sbb
leave
ficomps
cmp
jg
push
iret
sub
or
pop
sub
jp
cs
xor
mov
mov
pushf
mov
mov
pop
in
dec
stc
out
scas
aas
leave
int
fldcw
mov
xchg
lcall
pop
jecxz
cmpsb
adc
mov
andb
cli
lods
dec
jo
xchg
insb
push
dec
je
test
jecxz
stos
js
add
push
out
filds
out
or
jmp
lea
mov
jae
fldcw
xchg
sarb
pop
adc
dec
dec
cmc
pop
mov
push
pop
push
mov
ja
pop
cli
dec
jne
add
cmp
mov
mov
iret
ds
fistps
fsubp
xor
xlat
test
push
out
inc
or
mov
lahf
xchg
push
cld
sti
dec
outsl
xchg
cmp
lret
mov
inc
pop
adc
lahf
test
dec
and
xchg
push
imul
and
xchg
xchg
clc
xchg
and
adcl
scas
out
pusha
push
xchg
and
loope
jo
mov
fisubrs
mov
sub
pop
jp
stc
imul
cmp
xchg
mov
test
mov
sbb
pusha
in
testb
push
inc
ficoml
hlt
adc
mov
jge
adc
dec
adc
fs
xchg
mov
mov
pushf
lea
lret
cmp
adc
adc
cli
xchg
repnz
inc
add
inc
ret
inc
jns
lods
and
repz
popf
sub
mov
es
dec
sbb
fsts
add
cmpsl
fcomps
mov
mov
les
xchg
jbe
testl
xchg
ds
aad
mov
cmp
je
push
sbb
mov
and
jp
jecxz
dec
sub
xor
adc
push
push
ja
cli
jbe
out
push
stos
mov
jp
inc
mov
fdivs
shlb
in
sbb
xor
jl
dec
mov
mov
xor
pushf
push
shlb
mov
inc
push
stc
in
ret
outsl
push
call
adcl
cmp
cmpsl
push
or
jae
cs
aam
cmp
push
imul
into
cmp
pop
cmp
sbbb
ss
shrb
cmp
test
scas
adc
popf
lcall
mov
fistpl
mov
out
mov
jmp
xor
lods
popa
std
inc
movsb
dec
mov
and
mov
xor
popa
flds
dec
inc
sub
ret
imul
pop
add
test
xorl
mov
jmp
jl
mov
ret
imul
in
adc
int
cli
cmp
jp
sub
add
das
lea
jg
dec
shlb
inc
xchg
fwait
imul
dec
or
std
push
or
cmp
inc
sbb
stos
lcall
cwtl
pop
xor
adc
jl
adc
lock
push
sub
nop
jo
aas
mov
fldenv
fucompp
dec
pop
jae
data16
mov
sub
leave
add
fiaddl
dec
xor
lods
lods
repz
mov
cld
and
rol
xlat
jo
ljmp
jge
cmpsb
dec
cmp
mov
inc
xchg
shr
les
push
lock
sub
push
xchg
jns
ss
mov
rorl
rcrb
mov
push
sbb
cld
add
sbb
dec
fisubrl
imul
hlt
orb
jecxz
jge
adc
or
sbb
hlt
jge
mov
mov
hlt
imul
sbb
mov
and
push
inc
adc
cmp
mov
mov
xchg
mov
mov
xor
leave
sbbb
xchg
jmp
mov
add
and
dec
inc
icebp
inc
cmp
loop
adc
stos
test
pushf
add
pop
push
pushl
cmp
jge
xor
sub
dec
pop
dec
pusha
js
in
dec
lods
push
in
and
out
dec
push
inc
mov
sbb
pop
push
mulb
lret
mov
ss
stos
jo
sub
cmp
mov
les
push
xor
sti
dec
cmp
cmp
idivb
shrl
mov
out
aaa
in
push
das
jg
ffree
push
sbb
push
sbbb
pushl
xor
pop
fidivl
cmp
bound
jo
inc
add
xor
xchg
sti
jnp
sahf
mov
sub
pop
dec
jne
popa
and
add
out
mov
negl
inc
mov
dec
daa
cmpl
orl
dec
test
jbe
mov
cmpl
adc
stos
cmp
lret
mov
or
pop
jmp
insb
push
js
sub
mov
dec
jns
add
loope
mov
les
fadd
in
fiadds
mov
jae
scas
mov
xchg
add
inc
out
push
push
inc
adc
popf
sti
inc
sbb
jo
mov
lcall
xchg
jo
inc
xchg
out
pop
add
popa
repnz
mov
sbb
mov
ret
aas
lret
add
cmc
add
jns
jnp
cmp
loope
sbb
push
pop
outsl
xchg
pop
test
ljmp
lahf
movsb
xchg
js
cld
sub
push
cltd
mov
lret
ss
push
pop
cmp
loop
pop
pop
loopne
cmp
test
fmull
std
sbb
pop
jno
xchg
repz
cs
jnp
jge
add
insb
mov
cld
popa
ja
pushf
push
sub
push
dec
hlt
pop
int3
jno
and
lret
dec
pusha
dec
out
push
call
lahf
or
inc
cmp
lods
dec
xor
add
les
sub
out
rcll
dec
jmp
imul
cmpb
xlat
inc
xlat
pop
cmc
mov
jle
lods
cmc
test
and
jb
fimuls
cmpsl
jg
sbb
push
pushl
fs
sub
xchg
mov
test
cmp
add
or
sbbb
sti
out
mov
cmpxchg8b
leave
lock
mov
cmp
xchg
xor
imul
aas
clc
cmp
ret
push
out
cmp
call
cli
xlat
pop
arpl
mov
out
fnstcw
mov
ret
and
or
je
and
fcoml
jecxz
or
int
testb
lret
notl
arpl
hlt
repnz
in
int3
pop
xchg
out
cmp
xor
push
mov
and
lods
jno
pop
ja
je
mov
inc
lret
hlt
loop
test
mov
xchg
daa
outsb
xor
sti
dec
xor
mov
ret
mov
add
xlat
cmpsl
xchg
fcom
sub
or
xor
push
mov
inc
dec
inc
xchg
push
jecxz
xor
xchg
mov
pop
stc
stc
push
stc
or
ljmp
bound
fidivl
inc
xchg
mov
bound
mov
clc
js
mov
in
add
xchg
shl
mov
fldenv
jb
add
stos
lods
cmpsb
mov
negl
cmp
sbb
lahf
pop
aad
mov
mov
cli
jp
add
int3
aad
icebp
and
mov
aaa
stos
pop
lret
add
loope
js
cmp
inc
bound
sbb
xor
adc
lods
test
pop
insb
es
stos
sbb
jnp
sahf
xor
lahf
sbb
jl
loopne
adc
out
lods
xorl
aaa
or
out
stos
data16
inc
inc
and
mov
cmp
adc
push
add
loope
enter
jo
xchg
add
ret
test
repnz
inc
es
sbb
add
and
scas
mov
xchg
les
pop
inc
stos
rcr
xor
rcrb
lea
or
push
in
negl
test
das
pop
rcrl
sbb
sub
pop
jl
sbb
inc
js
pop
dec
or
mov
sti
or
and
test
das
dec
inc
adc
mov
out
out
mov
dec
out
in
ret
adc
mov
cld
push
pop
push
insl
mov
jmp
enter
faddl
outsb
test
stos
dec
sahf
push
sub
int
jbe
std
ss
sub
inc
xchg
sarl
push
addb
lret
adc
inc
jne
adc
dec
fcompl
lods
mov
testb
rolb
mov
lods
mov
mov
sahf
mov
mov
outsl
mov
jae
push
in
icebp
add
aaa
xchg
rorl
sbb
jecxz
repz
outsl
stc
fldl
jo
mov
iret
int
aad
mov
jne
pusha
out
cwtl
fwait
cmp
and
sbbl
sbb
cmpsb
lock
xchg
jmp
push
ja
repnz
and
arpl
adcb
cmp
push
fninit
mov
pop
or
cli
mov
mov
sbb
outsl
mov
inc
mov
es
add
idivb
or
cmpsl
js
pop
push
push
add
fcomp
fidivrl
inc
pop
ds
jmp
sbb
pop
sahf
or
aaa
in
sti
lds
pop
lock
sub
xor
pop
aad
jle
fists
pop
xchg
stos
adcl
xchg
cmp
and
cwtl
push
addr16
gs
mov
jmp
outsl
pop
in
std
xchg
outsb
popf
decl
aas
cmp
and
and
mov
pushf
jl
test
jb
fldt
jg
push
pushf
test
adc
xor
neg
push
stos
mov
push
lea
clc
adcb
pop
jne
popa
int3
movsl
xor
adc
mov
repz
rep
sub
sahf
cs
clc
mov
lock
mov
mov
cmp
in
jae
arpl
loopne
pop
adc
fwait
pop
pop
notl
pop
loopne
mov
inc
xlat
mov
adc
ss
add
inc
mov
outsb
inc
lahf
add
add
push
ret
sbb
xchg
inc
mov
fisttps
pop
push
push
push
cltd
pop
xor
dec
add
mov
sub
int
push
cmc
lock
in
fisubs
in
or
ret
jnp
insl
mov
jnp
les
cltd
call
sar
in
lea
cli
out
sub
dec
add
add
push
scas
es
mov
not
lods
in
mov
jmp
and
mov
or
jo
dec
sbb
imul
lcall
or
out
imul
push
xchg
out
pop
jl
rorb
mov
pop
mov
xchg
dec
jns
pusha
test
add
sbb
test
jge
test
cmp
and
fstpt
xchg
scas
pop
dec
mov
pop
lds
or
pop
or
push
inc
outsl
or
js
push
jae
push
repz
inc
mov
pop
dec
xchg
in
fisttpll
mov
divb
jnp
int
jecxz
push
mov
test
je
xchg
xor
inc
aad
lods
ficompl
mov
jb
jecxz
jecxz
jmp
nop
orl
push
rcr
movsl
xor
fdivs
pop
pop
adcb
pop
dec
push
fucomip
xor
or
in
out
pop
stc
xchg
das
fimuls
lods
fmul
sub
fisubs
mov
popa
call
inc
sbb
mov
enter
dec
lds
push
xchg
and
lea
mov
in
std
push
push
jecxz
adc
cmp
mov
mov
xchg
cld
or
stos
bnd
mov
lcall
rorb
pop
jmp
mov
mov
push
add
jl
cmc
int
arpl
jmp
jb
movsb
sti
fs
xchg
ss
inc
cmp
insl
sahf
mov
push
inc
pushf
xchg
mov
mov
and
adc
cld
xchg
sbbl
cmpsl
test
add
in
mov
std
das
int
gs
ret
inc
cmc
subb
insb
lcall
add
adc
mov
inc
xchg
dec
xchg
mov
pop
adc
dec
jl
scas
roll
jle
daa
xor
movsl
sbb
fcoml
pop
int3
add
imul
stos
jmp
or
or
xor
aad
test
int
in
scas
call
sbb
pop
mov
int3
mov
loopne
inc
pop
repnz
mov
imul
pusha
push
mov
adcb
ljmp
out
sub
ficompl
std
mov
pop
sahf
mov
test
stos
and
xchg
jo
lret
mov
jl
aad
push
mov
daa
push
nop
jnp
push
dec
jecxz
push
mov
test
jae,pn
cld
sbb
imul
or
xor
and
fnop
divb
or
push
xlat
add
addr16
mov
jle
add
je
jnp
pop
dec
pop
lret
sbb
pop
inc
push
lcall
jbe
out
pop
cwtl
mov
imul
iret
sub
sub
mov
scas
repnz
xchg
jmp
sub
pop
es
shll
into
ret
ret
xchg
add
frstor
cmp
lahf
mov
add
enter
imul
adcl
and
xchg
int3
shrb
sbb
mov
dec
xor
shl
les
jg
pop
adc
jmp
loop
sbb
movsb
aad
push
inc
inc
lods
sub
imulb
dec
jp
fisttpll
daa
into
incb
push
cli
and
xchg
mov
pusha
inc
or
ret
mov
call
cmp
push
push
clc
fists
outsb
dec
imul
jg,pt
dec
push
lret
fists
cmp
sti
pop
stos
scas
testl
cmp
test
hlt
cmpsb
popf
sub
dec
aam
shll
fimull
sbb
xor
mov
jecxz
out
std
pop
adc
sbb
cmp
stos
and
imul
data16
test
sub
icebp
mov
sub
push
aad
sbb
movsl
inc
mov
mov
lcall
mov
xchg
mov
mov
mulb
add
inc
jmp
sti
test
adc
jl
testb
imull
movsl
testl
mov
out
push
adc
cmp
dec
mov
inc
pop
pop
fisttps
into
enter
pop
or
mov
fidivrs
les
mov
movhlps
jne
mov
mov
push
mov
dec
enter
or
xchg
arpl
cmp
call
int3
xlat
je
jns
adc
outsb
inc
cli
cs
push
push
lods
out
scas
xchg
sbb
out
jb
xorl
repz
int
xlat
jmp
sahf
and
outsb
push
std
daa
and
ret
jnp
enter
test
loop
cmovge
div
mov
les
sbb
push
push
icebp
int
cmp
lret
lods
stos
mov
popa
cmp
cwtl
pushf
aas
sarb
cmpsb
jp,pt
push
js
fsubr
dec
sti
mov
fcmovnb
int3
repz
adc
fwait
sub
out
push
pushl
cmpb
mov
daa
mov
lret
insb
loopne
jne
mov
adc
std
js
pop
push
leave
fisubs
imul
or
mov
jmp
sub
cmc
xor
push
xchg
out
mov
adc
fisubs
xor
stos
pop
dec
jnp
mov
mov
int3
jecxz
adc
jne
dec
xchg
push
lods
ds
xchg
mov
stos
mov
mov
dec
add
inc
es
cmp
mov
movsl
add
add
inc
pop
jp
jnp
lcall
mov
stc
sub
std
sbb
in
cmp
cmp
dec
sbb
sub
popf
push
dec
sub
bound
jno
inc
je
int
mov
pop
mov
lret
ret
or
xor
stos
mov
gs
sbb
cmpl
ds
das
aas
dec
cltd
cmp
adc
jg
mov
push
pusha
pop
xchg
dec
lds
mov
fcomps
pop
adc
pushf
movsb
rclb
cmp
push
push
sub
dec
insb
inc
mov
mov
repnz
out
dec
push
aam
into
pop
addr16
mov
or
lret
push
or
or
enter
jne
cli
cmc
out
adc
xor
mov
dec
stos
icebp
cmp
iret
int3
adc
sbb
gs
jb
and
mov
pusha
int
lock
mov
mov
aad
adc
lea
lods
mul
adc
repnz
adc
pop
sti
hlt
xchg
inc
icebp
jmp
jbe
mov
ja
mov
ret
pop
push
jp
enter
jb
loope
xorl
cmpsb
jmp
lahf
mov
mov
add
dec
aam
iret
lahf
mov
repnz
dec
inc
push
js
mov
mov
fsubrs
stos
or
add
dec
xor
shr
add
rcr
hlt
fs
fstpl
mov
sbb
sbb
mov
bound
insb
insb
sbb
xor
test
imul
pusha
and
sub
sub
es
push
mov
je
sbb
rcl
fs
push
or
sti
or
jb
hlt
adcl
incb
aam
fistpll
mov
ret
imul
into
pop
pop
dec
insb
jmp
imul
shlb
lock
testb
repnz
movsl
pop
lahf
jbe
cmp
push
lahf
dec
pop
xchg
cs
fidivrs
mov
push
mov
fmull
sbb
loope
inc
fwait
lock
ja
clc
mov
xchg
fcompl
pop
mov
xchg
cltd
jg
aad
jle
pop
lods
sbb
lds
aad
or
cs
rclb
sbbl
mov
xor
pop
sub
xlat
in
ret
lods
bound
lods
or
jb
stos
fcomps
dec
push
imul
test
imul
push
jne
in
cmpsl
xor
pop
ret
and
mov
cli
add
pop
mov
dec
test
push
jmp
rcl
dec
inc
mov
movsl
hlt
scas
mov
dec
mov
inc
outsl
dec
mov
in
dec
pushf
dec
cmc
xor
or
pop
inc
sub
lret
cld
xchg
add
adc
dec
pop
lds
xchg
sub
push
imul
cmp
or
loopne
mov
ljmp
hlt
test
jno
mov
ret
jbe
or
stos
test
jge
je
outsb
arpl
insb
xchg
cmc
mov
in
jo
cmp
addr16
sbb
xor
xchg
fwait
bound
cmpb
sub
sbb
push
and
cwtl
and
ret
call
mov
mov
mov
mov
jns
add
sub
xor
mov
in
out
jg
xlat
xor
cmp
fldt
rolb
fisttps
xor
shlb
push
sarb
jbe
into
adc
insb
pop
aad
mov
inc
leave
mov
roll
cmpsl
aaa
std
iret
in
fwait
push
imul
pop
xchg
fmull
aam
push
mov
aas
jge
dec
jle
xor
loop
aas
cmpsb
add
mov
repnz
pop
fidivl
mov
xor
add
ljmp
push
pop
js
cmp
cmpsb
push
aad
adc
mov
nopl
inc
mov
inc
lret
mov
pushf
inc
outsb
insb
mov
ret
or
rcrl
je
repz
mov
enter
jle
mov
fcmovne
ja
mov
pop
push
cmc
aaa
jp
les
xchg
dec
dec
mov
leave
jle
sbb
in
and
ds
mov
test
into
pusha
enter
sub
cmp
mov
push
inc
jge
push
pop
dec
sub
fwait
movb
inc
mov
inc
ffreep
pop
jmp
inc
icebp
add
out
in
mov
ret
dec
inc
sbb
jecxz
jnp
jecxz
mov
andb
xlat
test
cs
and
decb
add
repz
cmp
in
in
loope
xchg
sahf
imul
sti
inc
adc
xor
add
jmp
imul
sarl
aad
nop
lock
cmp
fildl
lcall
mov
jno
mov
mov
loop
mov
and
aam
and
xchg
call
xchg
jbe
and
dec
sbbl
xchg
into
jge
aas
xorb
lea
cmp
jne
cmpsl
adc
sar
or
fnstenv
cmp
in
or
push
cmp
sub
lods
cmc
fidivl
push
xchg
out
pop
mov
scas
insl
fcmovu
push
cmp
jne
jl
xorb
xor
daa
xor
daa
ret
mov
fisttpll
rorl
pop
clc
jecxz
adcl
xor
outsb
fwait
mov
cmp
test
xorb
lock
rolb
jno
mov
fistpll
push
fdivrs
ret
xchg
ret
loop
xor
addr16
push
call
mov
stos
lock
push
test
fwait
out
pop
ja
std
pusha
mov
mov
in
stos
sbb
or
fists
mov
repz
fwait
aam
stc
adc
pop
fdiv
ljmp
mov
xor
dec
and
inc
fnstsw
add
or
sub
fxsave
mov
mov
jo
pop
stos
fstps
and
ret
stos
dec
in
dec
inc
aas
clc
sbb
fdiv
xchg
pushf
aaa
insb
add
and
inc
jle
je
test
inc
add
shrl
in
scas
push
iret
or
clc
and
mov
imul
cmp
or
adc
movsb
arpl
cltd
outsb
cmp
sbb
jno
push
mov
aaa
xlat
mov
cmp
loopne
int
scas
jo
outsb
cltd
loop
dec
jp
dec
imul
mov
hlt
sub
mov
fistpll
lret
repnz
cmp
stos
inc
add
mov
ja
orl
add
repnz
and
mov
leave
fdivr
xchg
aaa
push
jns
dec
nop
popa
adc
sahf
dec
inc
testb
movl
or
jno
mov
aas
add
push
mov
pop
inc
shl
xchg
out
adc
push
pop
dec
idivl
or
stos
cmp
sahf
repnz
repnz
xor
xor
jb
xchg
jno
sbb
mov
push
dec
xchg
std
xor
fstpl
sbb
dec
xchg
and
sbb
xlat
dec
cmp
push
leave
sbb
cmp
jmp
sar
mov
scas
fsub
fmull
popa
sbb
aad
ret
mov
jo
shrb
js
int3
jns
cmp
mov
xlat
push
andb
lret
dec
push
pop
imul
sbb
fldenv
jg
pop
dec
fistpl
arpl
subb
add
imul
enter
idivl
mov
mov
xor
xchg
dec
rolb
test
push
pop
mov
lret
fisubl
cmpsl
add
fiadds
test
arpl
mov
pusha
movsl
jmp
popa
std
je
and
sub
out
sbb
into
cld
push
ja
mov
cmp
cmpsl
fstpl
ret
movsb
lea
mov
int3
mov
push
addr16
nop
popf
jl,pt
loope
sbb
pop
mov
mov
xor
sti
sub
aad
cmp
mov
shrb
push
hlt
ficomps
outsb
xchg
out
add
jbe
sub
adc
lret
decb
cmpsb
addr16
xor
aam
mov
jns
jmp
mov
sub
mov
xchg
sub
divb
cld
or
mov
jl
add
add
mov
outsl
dec
ret
ljmp
shl
nop
in
in
adc
pusha
test
test
jle
sub
xlat
sub
mov
iret
scas
cmp
pop
roll
mov
push
dec
add
fwait
cwtl
outsl
inc
inc
pushf
mov
inc
adc
xor
shrl
jnp
push
cmp
jecxz
jmp
add
mov
or
lcall
jl
or
sub
cli
add
xor
push
push
fwait
push
sub
ret
aas
in
outsl
inc
adc
je
imul
xor
flds
loop
movsb
sub
imul
cmp
movsl
out
add
sub
xchg
call
mov
add
push
sub
cwtl
mov
bound
mov
aam
inc
cmpsl
jp
or
sbb
xor
add
adc
push
sahf
fs
cmc
jae
outsb
aad
in
push
jae
pusha
repz
lods
sbb
mov
cmp
popf
sti
pop
add
mov
inc
jae
push
dec
addr16
and
decl
xor
pushf
into
push
mov
das
je
and
lds
mov
mov
pop
jecxz
outsb
dec
push
insb
inc
push
mov
lret
inc
dec
insb
push
push
pushf
ret
adc
ljmp
pop
sahf
shl
push
adc
sub
mov
in
mov
dec
sbb
mov
jae
int3
nop
xor
cmp
dec
test
push
push
fdivl
cmp
jmp
xorl
popa
mov
pop
pop
inc
sti
sbb
mov
popa
inc
push
mov
lcall
jge
in
aas
xchg
loope
cmc
cmp
pop
sub
add
sbb
mov
sub
add
loope
inc
inc
mov
add
inc
pop
rcll
popf
add
or
sbb
sub
enter
pusha
and
adc
xor
stc
mov
xlat
dec
dec
mov
inc
cmpsb
stos
jns
mov
cmpsb
ret
adc
cld
shlb
mov
lods
and
push
and
mov
dec
inc
rorb
cmp
jb
ds
stos
jmp
sub
sbb
lods
adc
mov
mov
mov
mov
cwtl
test
mov
test
mov
lret
sub
subb
orl
stc
jo
icebp
les
nop
test
js
in
add
fstps
out
frstor
cli
push
cltd
jmp
loop
pushf
out
shlb
sbb
sub
mov
into
inc
rcrl
add
lods
mov
mov
xor
push
pop
push
cli
popl
adcl
gs
push
cmp
lods
inc
cmp
dec
imull
test
ljmp
fsubrl
pop
xor
jb
popf
adc
js
mov
mov
into
lcall
movsl
add
xor
idiv
mov
addr16
push
add
xor
lods
stos
or
jmp
jne
subb
dec
orb
fs
dec
sub
cmp
xor
aam
jae
mov
inc
outsl
es
out
into
ds
fnstcw
pop
in
fsubl
rcrb
xor
leave
imul
push
xchg
adc
pop
mov
sbb
inc
mov
jb
mov
pop
aam
mov
je
push
mov
add
pop
cmc
or
stos
jno
cmpsl
cmp
lea
and
lods
lods
fsubrs
pop
aam
shll
pop
push
adc
mov
pop
fistps
push
nop
dec
xchg
jmp
add
push
sub
mov
sub
enter
or
or
dec
mov
mov
xlat
in
jmp
xlat
pop
jp
lods
mov
es
and
jmp
cwtl
adc
mov
imul
call
leave
lret
loopne
addl
sub
stos
sbbl
and
in
roll
jmp
out
fldcw
push
mov
adc
lret
mov
fmull
add
lods
test
cmp
mov
add
xor
xchg
pop
rcl
mov
pushf
push
ljmp
adc
adc
test
es
add
aam
inc
dec
pushf
aad
loope
lods
push
or
push
rcrl
inc
and
data16
add
enter
add
in
mov
cmp
add
pop
cmpsb
test
add
and
scas
test
cmp
ficomps
push
shl
repz
in
mov
sbb
xchg
decl
lock
or
inc
mov
xchg
dec
addl
pop
sbb
das
or
push
xchg
mov
xchg
sbb
loop
xchg
inc
or
sub
fnstsw
push
jg
mov
push
push
mov
xchg
xchg
push
or
pop
xor
xchg
mov
mov
js
jae
mov
fidivrs
or
cmp
fsub
push
xchg
or
push
cmpl
sub
idivb
or
lret
frndint
inc
iret
orl
cltd
cmp
sti
out
aaa
push
xchg
das
scas
dec
push
cmc
sbb
sahf
and
test
push
jl
outsb
xor
call
mov
dec
call
mov
jecxz
xchg
xchg
or
out
inc
push
jnp
roll
fistl
mov
push
ret
or
insl
fs
repz
mov
int
mov
mov
leave
clc
mov
scas
cmpsb
aam
popf
mov
sbb
push
xor
lret
xchg
mull
pop
and
cld
orb
mov
xor
jp
sbb
mov
push
cmp
roll
adc
movsb
xchg
jns
je
xor
int3
cmp
mov
or
cs
mov
add
ret
and
mov
cmpsb
scas
pop
mov
cmp
mov
push
shrb
sbb
into
pop
adc
xchg
push
dec
and
add
dec
pop
push
into
repz
sbb
call
xlat
pop
jae
mov
add
pop
into
cli
popf
adc
inc
jae
fcompl
or
or
pusha
mov
in
xor
popf
inc
fistpll
jp
mov
mov
add
sbb
add
xchg
fisttps
dec
cmpsb
lock
inc
jno
mov
pushf
push
cmpsb
imul
mov
mov
jmp
lods
rcrl
xchg
call
dec
jae
cmp
inc
push
mov
xor
mov
scas
dec
and
aam
mov
and
outsb
mov
stos
fstpl
jmp
sub
adc
leave
pop
test
jo
mov
ret
sbb
mov
adc
pop
inc
pop
mov
jmp
push
jle
adc
into
add
jae
inc
mov
xchg
leave
xor
es
push
fwait
jne
sub
fwait
sbb
pop
loope
dec
adc
ret
loopne
mov
sti
sub
and
adc
fwait
mov
iret
aaa
aad
scas
pop
push
popf
rorb
std
notb
clc
inc
cmp
inc
cmp
loope
sub
sbb
div
enter
mov
insl
inc
dec
out
loope
jno
xchg
stos
mov
incl
repz
mov
sub
adc
jge
jg
jle
lret
pushf
daa
jg
adc
adcb
pop
fldt
addr16
pop
sbbb
cmpsb
fs
arpl
add
sbb
fmuls
cmp
cmp
mov
stos
fdivs
enter
insb
out
in
cmp
and
pop
push
sub
idiv
add
push
loope
jl
aaa
in
loopne
iret
mov
mov
inc
mov
xchg
shlb
ljmp
cmc
mov
negl
add
or
mov
inc
inc
ja
pusha
nop
push
push
inc
fidivl
mov
call
jno
mov
sub
test
or
int
mov
je
push
xchg
xlat
sub
imul
cld
lock
clc
push
loop
in
in
jnp
data16
loopne
xchg
lock
lds
sbb
arpl
sete
xchg
push
jmp
cmp
xchg
jne
adc
dec
call
mov
adc
in
mov
addb
cmp
or
push
lret
js
fildl
inc
arpl
adc
shll
push
mov
cmp
mov
imul
inc
loopne
push
rorl
jae
scas
aas
push
cmp
add
sarl
lcall
dec
dec
dec
jecxz
sub
call
and
lea
into
pop
call
pop
push
xchg
xchg
push
cwtl
mov
sar
dec
test
xor
subb
roll
lcall
stos
push
test
aaa
movsl
cmp
mov
in
je
and
orl
sar
insl
cltd
push
rolb
push
and
sarb
in
xor
fdivrp
add
test
loopne
je
movsl
add
shlb
in
mov
jns
sti
adc
adc
inc
bound
cmp
frstor
push
inc
sbb
add
in
mov
push
bound
dec
mov
or
out
imul
push
mov
pop
test
cmp
arpl
sbb
mov
sbb
mov
pop
add
popf
je
inc
mov
into
arpl
inc
xchg
mov
orb
mov
xchg
or
aam
lahf
iret
fdivrl
pop
sub
and
inc
add
cwtl
jp
mov
sbb
cmp
dec
mov
imul
adcl
push
shl
xchg
cmpl
imul
sbb
ja
xlat
pop
jbe
lock
add
inc
pop
cmp
sar
lret
addl
inc
mov
add
or
jne
cmp
outsl
sbb
or
cmp
test
insl
lahf
cmp
movsl
push
mov
out
pop
jg
loop
mov
pop
jle
imul
stc
je
daa
adc
or
add
pop
cmpsb
bound
mov
scas
daa
outsb
cmpsl
inc
pop
addb
jbe
sub
or
dec
jb
mov
xchg
icebp
sbb
mov
add
mov
les
cmp
or
or
pop
hlt
imul
pop
push
xchg
gs
insb
cmp
cmp
jmp
popa
xor
maxps
jecxz
rorb
xlat
repz
push
sarb
push
mov
negl
cmp
lcall
in
mov
sub
xchg
xor
dec
aam
out
mov
and
nop
dec
and
mov
jo
jle
lods
mov
jnp
int
sub
test
test
icebp
sti
cltd
sub
cmpsl
lods
xor
loopne
push
mov
and
jge
incl
xchg
or
mov
stos
pop
out
lds
cmp
sub
jmp
sub
pop
dec
inc
es
add
cmpsb
pop
in
enter
ss
push
mov
cmpsb
xor
in
outsl
imul
int
ljmp
or
rcll
outsb
jg
dec
xchg
and
push
sbb
ror
clc
pop
mov
lcall
clc
push
lods
orl
incb
cwtl
and
or
fsts
mov
adc
adc
push
bound
sets
stc
lret
int3
xlat
fsubrl
out
inc
dec
mov
lahf
push
insl
xor
inc
pusha
pop
adc
push
xor
or
jge
movsl
fisttpl
adc
arpl
imul
sub
xor
add
int
in
mov
xchg
dec
std
pop
in
adc
in
out
xchg
adc
std
rep
lea
mov
mov
test
call
mov
push
addr16
enter
xchg
int3
mov
and
daa
inc
mov
mov
imul
mov
shlb
imul
xor
inc
shr
nop
sub
hlt
inc
dec
adc
or
push
lock
inc
dec
push
frstor
sub
aaa
mov
sbb
inc
jbe
scas
add
pop
jbe
fcomp
test
jne
aam
add
jae
cmp
add
aaa
inc
cmp
mov
insl
movsb
inc
sar
pop
and
jmp
movsb
shrd
push
xchg
outsb
stos
xchg
fnsave
ljmp
notl
xchg
cmc
stos
lods
cli
sbbb
cli
popf
in
bound
cmp
addr16
sub
jp
xor
xchg
sbb
dec
inc
je
mov
lret
rclb
lds
sub
imul
jnp
xor
jne
and
inc
dec
sub
fmull
mov
js
jnp
fistl
inc
push
sbb
cmp
xchg
test
pop
data16
pusha
cltd
mov
ja
shl
mov
scas
mov
xor
or
push
aas
adc
sub
popf
and
pop
rcr
into
sbb
dec
pop
test
in
mov
and
fisubl
xor
sahf
push
fsincos
add
xor
push
stos
stos
rclb
jg
insb
aad
mov
xchg
jl
dec
pop
lock
xor
inc
mov
and
dec
push
push
out
mov
out
push
mov
aas
dec
pop
and
rcll
xchg
inc
adc
in
mov
and
fbld
xlat
pusha
add
push
clc
push
outsl
xor
adc
xchg
aad
enter
jno
mov
mov
sbb
sub
jbe
adc
out
mov
jno
fmuls
lcall
mov
pop
test
sbb
adc
nop
fldl2t
fiaddl
mov
ljmp
xchg
cmp
jg
sbb
inc
into
scas
call
sahf
pusha
push
aas
jb
filds
nop
mov
and
pop
aas
adc
sub
rcl
adc
movsl
frstor
lock
cld
fs
mulb
add
jecxz
xchg
pop
pop
sub
add
flds
jmp
dec
adc
stos
mov
bound
sarb
insl
jmp
mov
inc
cmpb
or
jns
and
test
ret
sbb
pop
and
xchg
rcrl
popf
scas
ljmp
cmp
loope
mov
and
insb
or
push
dec
jge
in
cmp
inc
cmp
popa
jp
lcall
xlat
test
and
xor
add
sbb
cmc
jnp
xor
inc
pop
inc
mov
add
adc
inc
sub
xlat
hlt
jne
push
sti
push
xchg
rcrl
pop
lods
add
imul
sbb
repz
xor
fcmovne
add
cmp
pop
call
lahf
push
mov
push
pop
addl
dec
pop
jp,pn
push
lods
insb
rclb
ljmp
adc
clc
or
adc
pop
mov
into
sbb
loope
sub
push
ja
and
call
arpl
lods
xor
fnstsw
pop
and
mov
cmpsl
jmp
test
mov
pop
xchg
and
push
mov
pop
int3
jg
push
adc
push
dec
pop
outsb
cmpsl
mov
fadds
or
mov
pop
insb
fsubr
adc
addr16
test
mov
dec
sub
push
cltd
mov
sbb
or
daa
xchg
in
fisttpl
aam
nop
mov
xchg
pop
loope
popa
lahf
xchg
xchg
push
fxch
push
stc
add
jge
cli
addr16
seta
bound
adc
xor
int
lds
jno
mov
mov
jp
inc
fstpl
aaa
int3
lods
sub
push
sub
jnp
lea
dec
negl
aas
fsubs
jns
cltd
icebp
or
adc
inc
pop
add
es
or
pop
in
hlt
inc
xor
dec
jne
jnp
sahf
iret
les
and
mov
xor
ss
sub
xor
cmp
inc
rcl
inc
push
daa
fstpl
push
insb
fs
fwait
push
inc
lods
or
ss
sbb
jb
ror
push
gs
xchg
orl
and
adc
push
mov
xor
push
loopne
push
pusha
loopne
mov
and
add
inc
sarb
bound
adc
mov
dec
lret
ret
push
imul
cmc
aaa
jo
popa
mov
mov
add
and
pop
xchg
inc
sub
push
cmp
and
jnp
movb
sub
add
aas
push
stos
movsb
dec
lcall
lods
gs
stos
mov
mov
in
or
xor
ljmp
or
popf
xor
das
push
loopne
arpl
cmpsb
inc
mov
scas
je
jl
lods
or
mov
out
ljmp
cmpsb
data16
pop
jne
jmp
or
mov
popf
xor
jno
xor
fsubrl
xor
test
lea
movsl
adc
das
mov
lea
or
jae
test
adc
xrelease
inc
cmpsb
or
adc
outsl
and
xor
pop
adcl
xor
mov
lock
jae
fsubrs
ja
inc
sub
xchg
lds
cli
mov
sahf
add
dec
cwtl
pusha
fmul
ret
push
fisttpl
sbb
aas
cmp
iret
and
movsl
adc
mov
xchg
les
cmp
cld
insb
pop
gs
fistl
and
loopne
lahf
lret
lds
adc
outsl
sub
or
sbb
add
rorb
ds
stc
dec
pop
inc
xchg
pop
mov
lock
or
xor
xor
pop
fwait
or
xchg
int3
into
negl
push
push
add
aam
jge
pop
movsb
ficomps
sbb
jo
sbbl
ret
dec
cli
push
bound
pop
xor
jno
cmp
mov
icebp
cmp
push
bound
and
adc
jp
mov
outsb
push
out
jae
xlat
dec
inc
leave
sbb
sub
leave
dec
pop
or
inc
ret
add
xchg
imul
hlt
push
mov
jmp
pop
fcomip
or
shlb
and
xchg
fcmovnb
mov
inc
or
xchg
add
and
xor
xor
fcoml
and
xor
ljmp
hlt
sub
jno
sub
js
pop
xchg
mov
arpl
pop
jne
jb
aam
lcall
sbb
popa
aaa
jnp
out
xchg
adc
rcrb
ret
xchg
aas
test
inc
adc
pusha
out
notb
push
inc
cld
scas
sbbl
repnz
dec
lea
shrb
popl
sub
pop
push
xchg
xor
insb
out
or
jp
or
pop
testl
jne
mov
mov
insb
arpl
insl
xchg
ljmp
sub
sub
fwait
cltd
mov
sbb
ret
mov
and
sub
or
xlat
cli
imul
and
push
mov
into
lods
lret
insl
mov
mov
out
ja
out
or
xlat
test
adc
imul
push
mov
dec
mov
inc
push
shrl
int
not
int
pusha
lock
dec
icebp
and
dec
xchg
or
mov
push
xchg
bound
fs
js
js
sbb
orb
add
outsl
jle
and
jns
stc
int
je
mov
les
cli
leave
add
adc
xor
and
cmp
adc
xchg
mov
pop
repnz
or
cmpsb
sbb
popa
movb
movsb
decl
outsl
cs
leave
in
xlat
lods
push
or
dec
inc
adcb
incb
adc
mov
xor
cltd
fstpt
jg
dec
pop
or
daa
stos
and
icebp
and
notb
loopne
lods
lea
and
adc
mov
pop
test
xor
fwait
aas
xor
fisttpll
sub
das
jg
orl
out
xor
shlb
enter
addb
push
xchg
jge
pop
flds
push
mov
pop
or
push
xor
negb
or
ficomps
mov
xor
push
scas
icebp
push
imul
call
rcrb
pop
inc
push
pop
iret
pop
shr
xchg
mov
mov
mov
addl
hlt
test
dec
dec
clc
push
cmp
clc
push
mov
andl
mov
sub
in
cmp
xchg
inc
mov
dec
add
popf
cwtl
and
ret
enter
mov
cmp
pop
ret
push
cmp
imul
std
mov
iret
sub
cmc
test
repnz
andl
in
stos
js
jmp
loopne
push
pop
movsl
xchg
scas
jg
xchg
fdivrl
pop
xchg
or
repz
call
sarb
jp
inc
ss
in
sbb
popa
mov
sti
bound
je
add
std
xor
jb
and
or
cld
out
scas
and
das
mov
xor
xor
cld
mov
movsl
pop
cmp
test
push
mov
push
cmp
jge
cwtl
mov
mov
imul
or
pusha
dec
loope
data16
xchg
arpl
int3
cmp
mov
cltd
cmc
shll
ret
mov
outsb
inc
sub
ss
cmp
mov
mov
ficompl
loopne
stos
je
ret
jge
push
jp
arpl
shll
pop
cwtl
das
or
inc
icebp
xor
xor
or
add
add
xchg
add
out
test
ljmp
sub
movsb
gs
rorl
and
push
cld
xor
daa
fwait
cmp
jmp
or
fnsave
inc
js
mov
mov
or
pop
iret
rclb
data16
push
add
clc
xor
push
out
mov
fsts
xchg
aaa
sbb
enter
cmp
or
loop
xlat
rcl
cmp
cli
test
inc
sbb
testl
test
cmpsl
jnp
push
lea
ret
out
loope
mov
cmp
and
cmp
add
pop
add
loopne
inc
pop
stos
rorl
inc
sbb
out
adc
out
fs
fcmovnu
jge
pop
sub
loope
inc
lahf
xrelease
pop
js
insl
and
rorb
lahf
in
std
jno
scas
fwait
dec
xor
out
into
pop
test
jnp
cmpsb
movsb
fcom
inc
xchg
dec
pushf
out
dec
inc
sub
lds
daa
test
int
mov
and
popf
popf
adc
jmp
jb
mov
xor
mov
fwait
xchg
popa
add
cld
jno
pop
inc
in
lret
stos
mov
rorl
mov
xchg
bound
jecxz
cwtl
mov
add
repz
cmpsl
dec
mov
ret
dec
cs
outsl
push
xor
add
jp
pop
cli
jnp
outsl
jecxz
mov
filds
cltd
mov
into
lahf
nop
loop
pop
inc
aam
test
xor
jnp
push
xchg
subb
repz
in
mov
sarb
popa
push
loope
cmpb
push
popa
push
xlat
adc
adc
pop
fwait
stos
xor
xchg
inc
xlat
mov
pop
fdivr
adc
fsubr
sahf
or
pop
xchg
es
sbbb
mov
pop
xchg
sbb
test
adc
xlat
xchg
jmp
xor
add
cmpsb
jnp
test
pop
in
xchg
push
xor
mov
xchg
xlat
pop
outsb
dec
add
pop
cmp
out
mov
test
jo
outsb
cld
incl
rcll
sub
lahf
xchg
xchg
sbb
pop
mov
pop
sbb
in
mov
or
stc
imul
or
repz
in
adc
mov
popa
and
divb
in
sub
cmp
jo
std
xor
jb
push
mov
xlat
dec
cmp
popa
mov
lahf
add
push
out
lahf
imul
arpl
jle
xor
cmp
xchg
jge
or
push
or
xor
insl
dec
push
mull
aad
scas
sbb
repz
or
sahf
and
xchg
lock
xchg
outsb
xor
leave
outsl
or
add
ret
cmpsl
jecxz
pop
jl
movsl
stc
cltd
mov
mov
xor
xor
and
cmp
or
mov
xor
std
inc
loop
out
or
out
mov
xor
daa
out
jo
adc
sbb
cmpb
ja
inc
pop
mov
adc
fsts
aam
fucomi
out
cmp
mov
pop
mov
and
mov
inc
xor
xchg
icebp
pop
mov
lcall
mov
or
mov
adc
xor
jnp
in
nop
add
push
idivb
jnp
sub
int
xlat
call
shlb
mov
shl
idivl
cmp
add
movsb
fnstcw
insb
outsb
pop
xchg
std
pop
push
jg
cltd
push
bound
idivb
inc
in
adc
call
or
fadds
cmp
lahf
mov
nop
xor
pusha
bound
mov
fisubl
shl
pushf
aad
hlt
insl
dec
loopne,pn
cli
push
mov
sub
dec
lock
lds
or
in
test
xchg
sub
pop
les
in
jl
scas
xlat
dec
cmp
ja
das
lret
icebp
pop
sbb
pop
mov
in
jo
pop
sub
cltd
divl
in
mulb
es
addr16
cld
das
jge
popa
mov
push
add
aaa
andl
out
adc
mov
test
pop
leave
inc
sub
hlt
push
mov
push
jmp
pop
xchg
test
loopne
xlat
jp
mov
and
lahf
pop
sub
dec
imul
movsb
out
and
call
inc
mov
inc
xor
push
and
or
dec
pop
sti
adc
or
adc
pop
mov
fisubrl
dec
fs
lds
aaa
sbb
or
jl
in
add
push
pop
bnd
push
and
pop
jo
dec
lcall
xor
aam
ja
adc
bound
mov
js
cmp
in
mov
ss
fcoml
loop
bound
mov
arpl
xor
mov
scas
popa
out
out
cmpsl
aaa
lea
cltd
test
ret
dec
pushf
jmp
or
adc
loope
ds
mov
sub
ds
xchg
je
dec
sarb
inc
ja,pt
aas
xlat
mov
mov
cs
cmc
mov
or
push
fs
pop
shlb
arpl
push
int3
mov
or
jg
mov
aaa
loop
mov
call
mov
push
jmp
pop
bound
ss
sub
dec
xor
sub
xor
pop
mov
outsl
jp
inc
aas
roll
xchg
pop
xlat
cwtl
repnz
pusha
aad
xchg
subl
push
sbb
mov
cmp
test
bound
ret
sti
mov
jae
repz
or
ficoms
dec
sbb
lret
sbb
fstpt
jo
sub
in
mov
js
fadds
add
and
add
or
ja
arpl
jecxz
push
into
adc
faddl
js
fsubrs
scas
movsb
lret
pop
cs
sub
inc
es
dec
shl
jno
icebp
test
jp
roll
xchg
jle
in
mov
xchg
int3
xor
lock
mov
ja
ja
adc
scas
ror
and
mov
out
sti
mov
xchg
in
mov
fistl
add
loope
mov
or
pop
leave
and
xchg
es
push
xchg
inc
mov
and
insl
mov
jle
mov
mov
cltd
sub
mov
ja
xchg
adc
test
lds
imull
add
mov
or
aam
sbb
lock
push
mov
jns
jp
xchg
mov
inc
dec
sti
or
cmp
rclb
pop
pushf
outsb
mov
popa
ret
inc
xchg
mov
mov
shl
loopne
sbb
sbb
and
or
xchg
jno
or
adc
pop
testl
shrb
je
add
inc
push
adc
je
mov
call
add
lcall
sbb
mov
push
adc
shlb
inc
jg
jb
push
cs
rorb
xchg
es
outsb
cmp
lcall
scas
outsb
stc
add
movsb
cli
test
xorb
neg
xor
insb
shr
sub
loop
out
adc
inc
cwtl
sub
push
pop
sahf
hlt
movsb
icebp
femms
sbb
arpl
inc
dec
leave
outsb
pop
sbb
add
sub
imul
call
and
arpl
push
dec
std
out
pop
not
push
arpl
sub
mov
out
or
push
xchg
sahf
add
andb
or
insl
dec
sahf
cs
adc
dec
rolb
sub
lret
hlt
insl
pop
jno
jecxz
movsl
push
out
xchg
fucomp
in
xchg
xlat
jno
mov
xor
iret
push
je
notb
mov
or
inc
out
fwait
jo
xchg
cmp
xchg
or
scas
xor
mov
scas
jmp
pop
pushf
push
sbb
subb
adc
shr
inc
cmp
xchg
jl
fst
loopne
in
ret
loop
and
in
lods
sub
pop
in
lods
sarl
pop
hlt
mov
enter
test
stos
and
sub
mov
adc
adc
rcl
and
push
push
add
mov
mov
pusha
orb
inc
out
fdivl
cli
sti
repnz
lcall
inc
jne
pop
xchg
sub
jl
mov
mov
push
push
mov
cld
lods
sti
cmp
mov
jle
xchg
xchg
jmp
fsubrp
fs
inc
ficompl
push
and
dec
rcl
mov
bound
jbe
xor
mov
mov
test
add
inc
in
fdivp
lahf
or
mov
mov
pop
cwtl
adc
mov
sti
mov
lock
jmp
ret
lahf
movsb
adc
fs
addr16
and
scas
dec
inc
pop
or
ja
pop
adc
sahf
repz
lods
adc
push
pop
shl
out
inc
daa
push
bound
cltd
push
sbb
fsub
std
fidivs
filds
and
call
mov
imul
jecxz
pushf
lret
lock
dec
and
rol
cmc
adc
push
in
lahf
dec
mov
les
cmpl
xchg
dec
rclb
lods
inc
dec
cs
daa
into
ret
and
add
xchg
insb
fdivp
call
sbb
enter
sbb
mov
dec
pusha
mov
rolb
pop
pop
outsb
pop
mov
mov
mov
stos
push
out
xchg
jl
outsb
rcl
jno
bound
sub
xchg
xlat
sbb
rolb
mov
xchg
mov
and
jle
mov
sbb
out
push
pop
pop
clc
inc
call
lods
dec
mulb
add
or
cmp
mov
xchg
lea
shlb
ss
mov
jnp
rclb
xchg
aas
cmc
and
xchg
and
sbb
pop
mov
pop
nop
out
movsb
xchg
xchg
mov
imul
pop
mov
mov
lret
xchg
dec
mov
jo
js
cli
push
lds
call
out
scas
inc
pop
sbb
cld
inc
jo
lret
shlb
jne
add
insb
and
xchg
pop
repz
add
mov
dec
inc
fs
stos
pusha
test
sbb
out
ret
ja
xchg
xchg
test
or
pop
sahf
inc
outsb
pusha
cmpsl
xchg
mov
scas
lea
clc
cmp
loop
mov
out
xchg
push
or
sub
ret
call
xor
push
and
inc
cld
xchg
loopne
cmpsb
shrb
pop
insl
mov
pop
pushf
repnz
xor
sbb
xor
jbe
sub
popa
cmpsb
enter
dec
or
test
pop
sub
leave
cs
push
push
cmpsb
les
fistpll
cmp
cld
loopne
inc
xchg
mov
sti
mov
pop
out
jb
cld
gs
mov
and
push
sub
ds
push
push
jnp
and
clc
addl
jp
scas
push
pop
push
cmp
jbe
es
rcl
cltd
mov
sub
jne
pop
icebp
mov
js
repz
addr16
lock
pop
lds
and
push
mov
pop
dec
lret
pop
adc
sub
shlb
jne
out
fsubp
jo
pop
jmp
mov
xchg
xchg
or
mov
pop
add
pop
insl
dec
inc
ret
pushf
sbb
cwtl
test
repz
or
push
movsl
mov
jle
xor
insl
xchg
push
inc
aam
std
pop
push
arpl
sbb
add
stos
pusha
pop
mov
or
test
arpl
inc
xor
adcl
cli
push
cmp
pop
mov
mov
xchg
xchg
lret
jnp
rcr
jae
lahf
lahf
push
daa
lret
iret
mov
sbb
es
test
or
jg
les
lcall
add
in
pusha
xchg
xchg
fisubs
icebp
cmc
sbb
add
inc
mov
mov
jbe
outsb
popf
mov
ret
out
inc
or
ljmp
icebp
sti
mov
dec
inc
data16
or
mov
sub
pusha
jb
mov
js
std
xchg
mov
xchg
mov
cmp
lds
in
lods
inc
xor
ss
arpl
call
lcall
or
or
cltd
and
mov
lret
xchg
rcrb
push
dec
outsb
jp
push
mov
mov
clc
mov
in
mov
dec
fiaddl
in
push
inc
rcr
and
inc
push
cmp
dec
push
push
idivb
jp
ffree
mov
xchg
cli
in
jnp
sbb
mov
ds
pop
inc
pop
enter
out
icebp
cmp
and
jg
or
push
push
add
leave
pop
xor
mov
les
adc
cs
loopne
mov
jns
lret
test
stos
mov
pop
mov
sub
mov
inc
push
dec
es
test
xor
lea
cmc
jb
sbb
adc
xor
xlat
out
pop
in
and
adc
test
or
inc
insb
push
inc
push
pop
xor
in
xchg
in
mov
rclb
cmp
ds
popf
cwtl
jbe
mov
loopne
sub
pusha
inc
or
pop
es
xchg
neg
sub
xchg
ljmp
out
xor
inc
inc
scas
push
test
and
jp
or
pmaxsw
ds
xchg
cltd
imul
mov
lock
cwtl
shr
jg
rcr
hlt
vpsubsb
dec
xchg
mov
cmpsl
or
xor
test
jmp
mov
loope
sarb
repnz
mov
lcall
mov
stos
add
lods
cld
or
test
mov
sbb
pop
cltd
jp
mov
out
push
jns
jo
mov
and
mov
out
movb
test
ret
xchg
addb
cmp
xor
sbb
push
pop
ljmp
inc
test
inc
in
test
mov
xchg
rcrb
jno
aaa
cmpb
cmp
cmp
push
jmp
mov
inc
in
and
or
mov
mov
fwait
mov
or
in
test
sub
push
pop
dec
out
lcall
mov
aas
mov
pause
sub
jae
xchg
pop
inc
cld
push
out
fidivl
cmp
mul
lcall
int3
out
scas
mov
inc
inc
push
fcmovnbe
aas
and
jbe
insl
mov
fistl
cmp
addl
dec
cmp
and
push
add
cmp
jae
jae
ror
inc
mov
sub
mov
pop
xchg
mov
ds
xorb
lret
mov
jbe
lods
mov
mov
dec
lret
into
jecxz
ret
enter
sbb
mov
mov
inc
lret
mov
sbb
sbb
imulb
jg
sbb
fmuls
jno
dec
lahf
in
scas
scas
decb
js
adc
les
nop
repz
mov
push
incb
leave
xchg
leave
xor
repnz
pop
xorl
sbb
xchg
inc
test
int
scas
lcall
sub
pusha
add
addl
sahf
test
fucomi
outsl
inc
and
cs
repnz
mov
sahf
lcall
call
imulb
cmc
pop
xchg
sub
or
xchg
cmp
mov
mov
test
or
push
inc
mov
and
sbb
pusha
inc
jge
daa
adc
pop
adc
fists
rolb
jne
je
mov
cld
clc
inc
lds
and
pop
data16
add
mov
bound
add
add
ja
movb
sub
je
xor
in
dec
and
int3
adc
xbegin
jp
add
out
push
fwait
icebp
jns
gs
push
pop
lea
pop
ds
jle
adc
inc
sub
std
mov
aad
mov
add
cmp
or
push
mov
lret
push
out
imul
xor
cwtl
inc
test
and
sub
push
stos
pop
ss
cmp
adc
jb
pop
xchg
call
sbb
lret
mov
mov
sub
bound
pop
dec
in
out
mov
cld
frstor
mov
cmpsl
fisttpll
sahf
in
js
mov
imul
scas
ret
adc
jne
adc
push
add
pop
rolb
in
inc
icebp
lods
fbld
sbb
and
iret
cmp
jmp
arpl
popa
push
ja
push
pop
sbb
mov
movsl
push
push
xor
pop
jle
jae
cmc
arpl
insb
int
iret
jno
lods
iret
dec
ficoms
fadds
cmp
and
repz
xchg
fidivrs
pop
ret
jbe
lret
loope,pn
ja
imull
js
je
xchg
adc
inc
out
and
jae
fsubs
cmp
int3
add
adc
cmp
xchg
add
dec
aaa
in
in
stos
sub
jg
int3
mov
fs
mov
rclb
mov
sub
stos
inc
xchg
jnp
divl
mov
xchg
fidivl
mov
dec
sub
imul
pop
aaa
repnz
out
mov
cltd
jl
call
lret
inc
jo
data16
mov
roll
clc
repnz
sub
dec
pop
push
lods
call
inc
mov
cmp
add
es
add
andl
xchg
mov
mov
mov
xchg
push
aas
jae
lcall
cmpsl
outsb
mov
mov
call
add
sub
loopne
insb
mov
add
sub
and
pop
out
xor
or
lret
popa
lods
cmp
iret
out
jno
idivb
xor
mov
sarb
mov
stos
push
and
dec
lret
xchg
mulb
jae
mov
insl
or
jmp
xchg
push
inc
es
inc
xchg
out
pop
adc
add
sbb
inc
in
push
cmp
cmc
mov
jle
push
roll
add
xchg
inc
fbstp
cmp
push
iret
into
sub
stc
popa
icebp
ljmp
movsb
cmpsb
jae
cmp
adc
clc
mov
inc
push
bound
adc
jmp
mov
mov
xor
int3
add
and
lea
pop
int3
push
aad
sub
adc
cld
cmpsb
fisttps
or
inc
scas
pop
xor
in
adc
pusha
addl
test
pop
hlt
int
push
js
iret
out
cmp
mov
cmp
sbb
sbbl
call
cmpsb
scas
shrl
sbb
dec
or
push
lock
sbb
in
mov
mov
xchg
push
inc
outsl
pusha
xchg
inc
adc
mov
daa
mov
and
dec
nop
rclb
arpl
ficoms
mov
mov
and
add
cld
aas
push
test
xor
ret
adc
mov
jl
dec
push
sub
pop
outsl
mov
jb
or
ss
and
lret
mov
pusha
cmp
lods
lret
fldt
shrb
mov
repnz
xchg
fwait
lds
xchg
pop
adc
daa
ljmp
call
mov
inc
out
dec
dec
xor
fs
rorb
fisubrs
pop
adc
gs
push
dec
daa
icebp
xchg
push
mov
mov
xchg
loopne
pop
jle
sti
pop
outsb
clc
sub
sbb
push
mov
jle
adc
iret
or
fstpt
sub
data16
adc
call
pop
dec
lahf
sub
inc
gs
subl
out
cli
xor
imul
sub
data16
add
lret
pop
xchg
fcoml
scas
jo
in
scas
mov
adcl
adc
in
mov
sbb
jmp
icebp
pinsrw
xchg
and
xor
movsl
lods
cmp
push
outsl
mov
dec
movsb
in
mov
dec
icebp
in
std
pop
shrl
js
ret
adc
push
paddusb
pop
negl
adc
jb
sbb
jb
xor
ss
and
int3
mov
inc
lret
jbe
mov
call
lock
pop
pushf
ja
gs
mov
or
int
ror
lods
jge
nop
sarl
aad
cs
stos
jns
cmpsl
xchg
and
mov
std
lods
imul
mov
jb
jp
inc
popa
pop
add
add
scas
mov
in
push
pop
push
jg
xor
and
pushf
jne
jg
jg
or
out
push
es
fs
cwtl
flds
mov
inc
xlat
push
data16
leave
cmp
jg
xchg
cltd
jb
xlat
iret
jb
fadd
adc
adc
fwait
push
pusha
sub
push
ret
pop
test
gs
mov
mov
cltd
addr16
mov
xchg
fwait
aas
mov
shl
loope
and
sbb
pushf
cmp
int3
sar
nop
inc
and
dec
repnz
adc
fcoml
cmpb
in
cli
and
dec
std
mov
xor
out
lods
lods
repz
daa
dec
jmp
fstl
roll
or
add
mov
hlt
xchg
negb
and
dec
js
lea
in
mov
int3
cld
mov
int
ret
lock
mov
shl
or
mov
stos
rol
jg
lods
inc
daa
subl
sbb
mov
xor
je
movsb
push
jnp
mov
jnp
mov
xchg
cmc
lds
fucomip
ffree
fwait
sbb
jo
inc
sbb
stc
jg
jne
icebp
or
cmpsl
mov
mov
or
ret
imul
sbb
addb
daa
clc
mov
insb
std
arpl
add
fdivrs
imul
jecxz
push
push
sub
test
cs
sub
add
push
movsb
push
lock
movsl
ljmp
shll
sub
dec
in
xchg
push
mov
cld
jnp
push
push
test
aas
pop
xchg
pop
xor
xor
ja
cmp
push
jne
cmp
xchg
stos
and
out
dec
mov
push
lods
mov
ret
cmp
aaa
je
mov
lods
ror
adc
lods
stos
push
push
pop
push
fs
dec
mov
iret
iret
sbb
add
aas
sbb
pop
sub
sub
jmp
pop
shll
mov
fcmovne
hlt
pop
cld
lods
jb
out
pop
fdivs
and
pop
mov
pop
test
and
and
add
mov
and
adc
xchg
popa
test
fdivs
or
xlat
cmc
sarl
fisubrs
out
cltd
push
test
cld
sbb
repnz
xchg
pop
inc
cmpsl
or
xchg
add
stc
cmpsl
mov
xor
xor
scas
inc
adc
ja
mov
push
and
lea
sbb
cmp
cwtl
mov
int
jg
mov
adc
fistpll
mov
jnp
outsb
notb
outsl
xchg
sahf
mov
sub
push
pop
imul
add
adc
push
add
mov
xor
pop
cmpsb
mov
loopne
cmp
dec
and
je
insl
mov
jbe
shlb
dec
pop
popf
outsb
or
adc
into
in
leave
cmp
push
fcomps
mov
xchg
pop
icebp
lds
in
icebp
xor
in
push
daa
cmc
outsb
or
repz
ficompl
ret
and
and
inc
leave
or
sbb
arpl
xor
loop
les
mov
mov
and
sbb
adc
dec
insl
xchg
add
and
push
movb
adc
mov
cli
or
push
subl
or
stc
leave
xor
pop
loopne
mov
mov
cmp
mov
xor
jge
es
inc
cs
stos
and
xchg
xlat
je
xchg
push
lcallw
mov
dec
dec
xchg
pop
push
inc
xor
mov
jno
hlt
cs
jae
shrb
lds
in
shrb
test
add
gs
into
xchg
daa
int
add
scas
pop
lret
cmp
loope
jbe
pop
sbb
or
xchg
xor
adc
lds
xor
nop
push
mov
dec
cmpsl
adc
aaa
and
cmp
dec
std
cltd
sbb
loop
ds
sub
cmp
add
mov
jo
cmp
mov
nop
out
in
addr16
sahf
jmp
cltd
mov
push
sub
pushf
es
lods
push
es
idiv
sub
xchg
inc
int3
cmp
jae
lcall
and
scas
dec
sarb
rolb
punpckhbw
pusha
int
and
dec
fnclex
into
adc
outsb
mov
push
sahf
sbb
lret
cli
cmc
cmp
cs
into
add
pushf
inc
push
popf
orb
xchg
and
mov
aas
je
mov
cmp
arpl
cmp
in
subb
out
jns
push
pop
adcb
mov
xchg
ja
pop
loop
das
jns
fwait
daa
sbb
dec
cld
shl
outsl
repz
out
cmp
mov
fsts
mov
pop
fs
mov
insl
repz
xchg
cltd
pop
jne
mov
nop
xchg
or
xor
cwtl
cmp
add
jno
jno
repnz
pop
int3
mov
and
leave
jp
adc
add
xchg
cmc
das
push
inc
gs
es
push
sub
pop
jecxz
imul
or
jae
lret
cli
enter
mov
repz
cmp
cmpsl
pop
add
xlat
mov
and
cmpl
repz
insl
adc
xchg
jns
xchg
in
setl
and
cmp
js
inc
mov
and
jno
aaa
repnz
xor
pop
jbe
bound
push
mov
jg
xchg
gs
push
mov
push
dec
cmp
xor
dec
in
sahf
sarb
orb
pusha
and
dec
imul
sbb
mov
pop
cmc
inc
dec
enter
mov
pop
cmp
imul
dec
imul
cmp
and
xor
loop
loope
aad
subb
sbb
jg
jno
cmc
scas
cmp
adc
mov
lock
mov
dec
jp
cmc
lahf
push
jle
adc
push
pushf
nop
mov
lds
dec
stos
mov
xor
push
dec
jmp
add
enter
lds
adc
or
in
jb
test
inc
xchg
xchg
negl
jmp
les
pop
inc
cmpsl
gs
push
add
insb
mov
and
lods
leave
stos
and
xchg
sub
mov
push
push
or
sbb
loopne
or
sub
mov
sub
pop
insb
and
adc
cs
mov
scas
loope
and
sbbb
test
test
xor
push
shlb
or
xor
push
out
add
addb
cld
pop
test
pop
pop
sarb
icebp
mov
jne
mov
mov
dec
mov
call
scas
aaa
jb
mov
push
ror
sub
cmp
push
mov
sub
ds
rolb
lods
add
mov
andl
pop
leave
xor
push
add
sahf
push
movsl
aam
test
jne
lret
mov
aad
iret
ret
adc
push
xor
outsb
adc
fbstp
push
test
gs
stos
pop
or
dec
sti
dec
cmp
sub
rcll
dec
icebp
imul
test
iret
fs
pushf
hlt
shll
mov
dec
aad
lds
mov
arpl
jbe
sbb
aas
pusha
sarb
out
xlat
stos
das
push
shrl
das
fs
adc
push
jp
cmp
orl
popa
jmp
xor
inc
mov
mov
arpl
sbb
inc
out
js
rcll
mov
test
cmp
push
mov
mov
stos
bnd
imul
mov
xchg
scas
fnstenv
inc
enter
fidivrl
dec
imul
fsubs
jmp
fistpl
pushf
daa
and
popa
add
and
pop
dec
movsb
test
xor
sbb
lds
xor
lret
sti
cmp
push
add
sarl
inc
jnp
jmp
fisubrs
mov
sbb
imul
mov
adc
int3
je
insb
outsb
scas
pop
and
sbb
fstl
sar
mov
rorb
pop
outsb
push
testb
mov
std
dec
adc
or
in
into
fisttps
cld
xchg
jp
push
sbb
loope
fcom
mov
idiv
lcall
or
pop
jmp
aaa
xor
push
arpl
add
jne
in
fistpll
push
xlat
adc
sbb
divb
leave
ljmp
idivb
pop
loopne
push
mov
sub
mov
sub
xchg
or
adc
cmpsb
jnp
jae
mov
mov
dec
add
daa
scas
and
xchg
xchg
jmp
xchg
sti
loopne
popf
xchg
pxor
nop
aam
insb
push
sub
push
dec
mov
je
add
add
call
sbb
jg
or
imul
push
icebp
jmp
mov
popa
dec
push
popf
cli
and
repnz
cmpsb
std
fwait
jge
leave
push
cld
cmp
xchg
adc
mov
ds
fdivrl
mov
sahf
mov
jbe
xor
sub
mov
push
cltd
pop
mov
push
ret
in
pop
jnp
add
test
aaa
sbb
repnz
fsubs
cmp
xchg
jge
pop
push
shlb
mov
push
or
aas
mov
loop
jle
xorl
cmpsl
int3
and
adc
sub
sti
stos
repz
inc
xor
rcll
aad
mov
pop
cmp
pop
repz
idiv
dec
and
mov
xchg
fs
aas
popl
imul
gs
dec
push
pop
pop
push
outsb
jnp
inc
xor
nop
in
adc
testl
loope
mov
test
xor
in
jecxz
lahf
or
cld
dec
in
hlt
jo
inc
add
bsr
in
cmp
dec
sbb
filds
mov
aaa
rcrb
adc
mov
jae
or
iret
addl
push
out
cmp
pusha
adc
mov
mov
and
mov
in
sbb
movb
inc
cmp
inc
fisubrs
mov
lock
push
push
push
iret
out
rsqrtps
cmp
rorb
std
stos
popf
pop
adc
insl
lea
xchg
cmpsl
adc
rcl
mov
test
popa
or
xor
cwtl
lods
mov
jb
xchg
mov
mov
loopne
int
mov
xchg
push
xchg
cmp
and
cld
fstps
xor
inc
xchg
ja
or
iret
xor
sub
out
sub
jo
xchg
or
push
cmp
pushf
daa
js
loop
loopne
push
sbb
jecxz
dec
inc
fdivr
xor
fwait
call
decb
aad
add
sbb
data16
pop
filds
icebp
in
add
ljmp
inc
idiv
call
int
iret
test
movsl
lea
jo
adc
push
dec
push
in
xchg
mov
xor
adcb
push
rcrl
aad
and
leave
inc
add
mov
data16
cmp
or
add
xor
pop
mov
loopne
aad
add
test
xor
in
xchg
cmp
xlat
xlat
leave
jns
jo
and
sub
test
jae
mov
cmp
inc
lahf
inc
ds
mov
mov
mulb
lods
mov
stc
ja
inc
push
lahf
pop
outsb
and
popf
icebp
push
call
mov
mov
or
andb
hlt
mov
jne
std
outsb
dec
add
jno
jecxz
cmpsl
leave
cmp
sub
xor
pop
loopne
mov
add
xlat
cmp
sbb
mov
in
shlb
aaa
push
jnp
stos
cmp
push
sbb
cs
pop
insl
shrl
lcall
mov
ljmp
ja
dec
test
adcl
imul
leave
add
push
arpl
cmpsl
push
xorl
movsb
aaa
mov
stos
ja
pusha
and
xchg
jnp
in
aad
fs
pop
insl
in
mov
sbb
jl
aad
popf
xor
add
add
stos
and
test
outsb
xor
sbb
into
daa
mov
and
repnz
scas
imul
adc
in
rcrl
pusha
and
repz
pop
push
and
push
lods
js
jl
sbb
xchg
cmp
mov
mov
sbb
repnz
test
mov
xchg
adc
stos
mov
fisttpl
mov
ficoml
andl
sarb
repz
and
aam
inc
js
scas
movsl
lock
sub
inc
test
inc
pop
jmp
enter
dec
pop
shrl
pop
cmpsl
jae
pop
pop
push
iret
stos
xchg
popl
add
xchg
pop
out
lea
mov
out
in
cmc
das
inc
lods
mov
xchg
je
and
subb
test
mov
ja
repz
aam
dec
in
mov
aam
push
rorb
jae
aas
clc
adc
bound
loopne
fldenv
fiadds
fwait
xor
cmp
push
xchg
dec
cmpsb
mov
sbb
cmp
shll
leave
ret
pop
pop
in
pop
outsl
js
cwtl
xor
jo
pop
shll
jp
push
leave
fwait
or
push
shll
push
mov
shlb
cmp
mov
bound
imul
cmpb
xorb
fidivl
jp
and
imul
into
add
inc
pushf
mov
add
cld
cmp
pushf
xor
dec
xor
inc
je
jg
sbbb
bound
jb
sub
lea
or
fisttpl
loopne
push
test
push
jno
pop
popa
xor
xlat
mov
cmpsb
scas
xchg
add
test
pop
shlb
rcr
fsubl
jno
mov
ret
sub
clc
xor
cmp
or
imul
mov
xchg
inc
pop
mov
cmpsl
push
cwtl
adc
aas
inc
cwtl
sbb
mov
ljmp
cmp
cmp
xchg
lcall
popa
lahf
jno
push
xorl
mov
in
xor
movsl
mov
aas
mov
stos
pop
jp
adc
push
out
cmp
ss
test
movsl
arpl
in
in
xchg
mov
mov
jne
push
cmp
xchg
mov
mov
cmp
mov
je
or
push
xchg
add
adc
cmpb
inc
pop
inc
popf
test
mov
pop
lods
pop
and
icebp
mov
push
cltd
mov
push
mov
popa
inc
sub
and
push
sar
mov
mov
insb
dec
xlat
mov
adc
fisubl
lcall
sbb
pop
adc
pop
add
gs
xchg
adc
jnp
arpl
jb
in
fs
push
inc
xchg
stc
mov
lea
addb
inc
fbld
cmovge
cld
pop
push
rorl
mov
xchg
or
scas
mov
xchg
dec
mov
sub
cs
loop
enter
lock
jmp
ret
pop
jnp
movsl
add
aas
roll
xchg
ljmp
xchg
pop
sub
test
xor
sub
adc
ss
enter
xlat
jl
and
shll
pop
inc
daa
dec
mov
popa
inc
mov
mov
push
cmpsl
dec
rorb
push
jge
fmuls
les
cmp
sti
sti
push
xchg
inc
outsl
sub
insb
aad
lock
test
cmpsl
or
lcall
xchg
cmc
pop
dec
mov
push
sbb
inc
or
cmp
jmp
and
push
int
add
add
hlt
and
fsubrs
cmpsb
pop
cltd
scas
int3
cmp
inc
daa
aaa
cld
fists
dec
rorl
out
cmp
clc
jge
leave
pinsrw
add
lds
jne
andb
sbb
inc
rcrb
add
jb
inc
mov
shl
xchg
movsl
popa
add
test
jne
rcrl
fwait
jp
push
ss
or
cmp
dec
pop
sub
xchg
mov
push
xchg
in
cli
cmpsb
loop
test
scas
jmp
mov
lret
pop
push
push
nop
std
mov
daa
es
pop
scas
lock
and
xlat
fildl
subb
inc
mov
pop
and
mov
out
jmp
jbe
mov
or
xchg
cltd
jbe
divb
mov
cmp
pop
jno
push
pop
imul
out
xor
mov
scas
adc
mov
push
insb
pop
push
decb
iret
cwtl
movsb
out
rol
ljmp
leave
xchg
int3
xchg
mov
scas
sarb
mov
rcll
cmpsl
nop
cmp
dec
inc
subb
cmp
inc
fs
scas
lds
je
or
sbb
xor
pop
xorl
sub
in
pop
adc
jns
nop/reserved
decl
cli
outsl
mov
shlb
xlat
jb
xchg
in
int
pop
aam
xchg
jb
jb
addb
out
dec
lds
scas
stos
push
mov
pop
js
adc
pop
enter
add
sub
outsb
cmovle
out
inc
clc
or
shlw
sub
cltd
out
pop
push
pushf
add
cltd
out
aam
orl
out
cmpsl
aaa
pop
rcrl
pop
stos
sbb
out
xchg
test
xor
sub
loopne
test
nop
gs
loopne
das
sahf
dec
lret
sub
repnz
ret
mov
cwtl
dec
pop
aad
xor
mov
push
movsb
cmp
or
cmp
pushf
add
adc
push
mov
sbb
xchg
inc
lcall
out
pop
mov
xchg
shll
mov
adc
int3
mov
ret
jmp
mov
fadds
test
and
pop
pusha
pop
pushf
addl
inc
sarb
cld
hlt
xchg
aas
adcb
mov
ljmp
fstpt
mov
cli
push
ficomps
cmp
ss
cmp
cmpsb
sahf
dec
sbb
pop
mov
test
cmp
movsb
fbstp
mov
and
mov
mov
pop
fistl
inc
mov
int3
xor
mov
inc
push
data16
fnstenv
adc
mov
and
fs
xlat
xchg
and
repz
dec
add
loope
out
bound
push
shlb
aaa
adc
jb
loope
dec
mov
ss
jecxz
test
lock
imul
mov
imul
jp
jmp
cmpsb
test
push
inc
pop
cltd
dec
pop
stos
fildl
shrl
ss
mov
pop
mov
sbb
or
adc
jecxz
gs
rcll
test
shrl
or
pop
jae
shrb
imul
in
divl
push
xchg
repz
or
scas
or
stos
cmpl
sbb
scas
cmp
hlt
add
inc
xor
sti
cmp
xor
lret
je
js
mul
mov
push
sub
aaa
and
adc
out
adc
fstpl
mov
and
data16
std
outsl
fs
dec
inc
lahf
rorl
sbb
pop
and
shlb
insb
cmpsl
or
and
pop
mov
xchg
icebp
push
out
add
out
addb
inc
mov
pushf
out
inc
lods
mov
pusha
ja
test
out
cmpsl
data16
and
dec
and
movsl
mov
lret
add
cld
inc
sub
and
jp
xchg
popa
roll
adc
in
iret
push
aam
jne
gs
jp
insb
mov
inc
outsb
aas
pop
inc
dec
int3
cmpsl
in
mov
and
push
xchg
dec
test
mov
ds
call
pop
imul
mov
pushf
adc
push
nop
add
cwtl
idivl
push
outsl
aas
mov
stos
mov
mov
jmp
pop
inc
jl
or
sahf
scas
shlb
dec
push
shll
leave
repnz
loopne
scas
vmulps
insb
sub
jecxz
int3
cli
outsb
mov
loop
insb
cmp
ss
hlt
addl
pop
push
jno
jae
xor
ret
or
cmp
xchg
cld
jmp
int3
add
adc
das
adc
pop
sbb
icebp
dec
orb
in
je
xor
sbb
sahf
xchg
or
lret
fisttps
jmp
add
lds
adc
mov
arpl
and
mov
test
sbb
testl
aaa
pop
inc
loopne
aad
sbb
inc
std
xor
fistl
aaa
add
add
insb
lock
add
xor
or
fcmovnu
outsl
sbb
pushf
mov
xchg
pop
jbe
sbb
mov
negl
cwtl
sub
xlat
call
sub
fcoml
dec
pop
fsts
push
les
ss
mov
adc
lret
dec
out
or
nop
stos
inc
push
les
js
inc
data16
inc
clc
xor
cmc
ret
mov
clc
gs
sahf
mov
and
jns
mov
add
fsubrl
and
js
in
cmp
insb
inc
cmp
dec
mov
jb
dec
outsl
inc
cmp
repnz
or
call
jmp
leave
xchg
push
xor
or
hlt
lock
rcll
xor
ss
movsl
xorl
cli
mov
inc
xchg
mov
inc
dec
cld
adc
out
outsl
add
fsubrs
jecxz
test
add
mov
push
inc
cmp
jno
adc
inc
push
inc
insb
mov
je
inc
add
xchg
pop
push
rclb
sub
das
pop
lret
push
inc
cmpb
push
mov
add
xor
adc
cmpsb
dec
pushf
ret
outsl
xor
adc
and
ds
push
jge
push
xchg
iret
mov
test
js
inc
inc
adc
test
movsb
pop
adc
popa
mov
sbb
mov
cmpps
sbb
push
insb
inc
inc
sub
insl
fs
pop
sti
dec
xchg
insl
cwtl
daa
mov
loop
pop
es
scas
mov
cmp
cld
out
add
out
loope
es
push
pop
outsb
mov
sub
and
sahf
les
pop
cld
jmp
movsb
mull
push
daa
lods
or
lock
sub
push
inc
sub
repnz
fists
sti
sbb
ss
mov
mov
jne
push
pop
pop
orl
xchg
lahf
cmp
sbb
sub
adc
lods
or
andl
nop
push
in
mov
lock
pop
cmpb
sbb
mov
shlb
jg
mov
aam
imul
push
xorl
xchg
push
jo
push
dec
andb
push
pop
aad
add
dec
xchg
ret
mov
mov
lds
mov
loopne
xor
js,pt
aad
out
shrb
mov
dec
ljmp
clc
push
sbb
insb
das
ja
fwait
mov
inc
and
pop
nop
add
jle
sbb
jbe
fnstcw
test
or
fdivrp
lcall
nop
xor
aaa
into
ja
cmpsb
mov
mov
sarb
jecxz
and
es
mov
mov
inc
and
add
pop
aas
pop
adc
pop
dec
enter
xchg
subb
gs
fldt
and
xchg
aad
arpl
lods
jo
cmp
mov
int3
jb
inc
mov
fdiv
rcl
cmp
negb
movsb
mov
push
les
out
push
pop
int3
cmp
mov
xchg
pop
jle
loope
in
add
xor
sarl
loop
push
inc
pop
add
icebp
rcll
aaa
outsb
rcl
mov
xchg
and
pop
mov
fstps
mov
or
sub
adc
gs
pop
bound
lret
jl
sbb
push
mov
lret
dec
adc
mov
push
pop
jne
jl
aad
mov
xor
frstor
jg
ret
loop
adc
fistl
cmp
out
repnz
xorb
sbb
loope
jbe
int3
or
rorb
inc
std
dec
xlat
scas
xor
sub
inc
pop
adc
repnz
cltd
mov
push
sahf
idivb
js
das
dec
ljmp
dec
add
mov
xchg
mov
fs
repnz
movsb
sbb
les
ret
inc
cmp
adc
xchg
mov
push
bound
or
lods
aad
or
hlt
mov
roll
jbe
test
leave
xchg
ret
orl
rcl
in
inc
mov
lds
mov
push
add
lock
loopne
sti
and
out
stos
mov
push
frstpm(287
push
mov
sub
mov
insb
push
cltd
jo
clc
into
or
mov
sbb
dec
mov
lahf
adc
ret
call
stos
adc
insl
outsl
repnz
adc
xchg
loop
add
dec
inc
mov
fiaddl
mov
out
jp
cwtl
jge
dec
mov
ljmp
cs
imul
push
mov
sahf
aaa
inc
mov
insl
xor
dec
in
pop
loopne
adc
loopne
cltd
or
sub
pusha
and
int3
push
jnp
push
inc
cs
and
sub
lds
fldl2e
xchg
pop
mov
lds
int
outsb
je
movsl
jb
jnp
cmp
pop
add
js
adc
rorb
fwait
mov
mov
push
les
add
cmp
mov
push
lcall
subl
fcompl
sarl
dec
xor
lret
outsb
cld
outsb
or
fldl
jge
repnz
pop
push
test
imul
popf
mov
movsb
sub
xor
xchg
out
rorb
jmp
mov
dec
flds
shll
inc
mov
push
mov
inc
xchg
fwait
shll
jb
xor
pop
aad
xor
inc
mov
lods
pop
xlat
cmp
mov
mov
fcomps
push
push
cmp
data16
rorl
add
lahf
or
jb
cmp
ljmp
lret
mov
test
loope
adc
jnp
into
in
movsb
sbb
outsl
mov
scas
xor
mov
xor
icebp
push
lea
enter
mov
push
test
fidivrs
inc
out
aam
sub
jl
or
outsb
mov
stos
mov
imul
pop
mov
into
pop
dec
popf
insl
push
fcoml
gs
imulb
in
jo
shlb
xor
imul
int3
dec
loopne
mov
jne
cmp
jg
outsl
jo
xor
clc
cmp
popa
sbb
nop
add
out
sbb
push
test
loopne
incl
sub
fstpl
mov
dec
mov
inc
jecxz
sbb
mov
jne
inc
aad
fsubr
push
sarl
insb
lods
pop
pop
cmp
xchg
dec
imul
inc
inc
add
xchg
loope
test
mov
fldcw
in
dec
std
mov
push
fisubl
inc
shl
and
and
xchg
cmp
repnz
stos
loopne
test
sbb
fs
adc
or
mov
sbb
pop
and
stos
and
jg
pushf
cs
dec
pop
ja
or
fiadds
cmp
filds
inc
mov
cmp
push
pop
shl
leave
pop
popa
add
or
test
ds
cwtl
dec
push
push
add
sbb
push
mov
jno
add
or
mov
sti
aaa
sarb
adc
into
dec
inc
sbb
mov
mov
imul
inc
add
xor
inc
int3
jne
andl
sub
xor
out
cmp
pushf
movsb
mov
gs
loopne
push
xchg
sti
out
lahf
inc
outsb
xor
xor
sti
daa
or
aaa
addb
cli
js
mov
sub
arpl
xchg
xchg
xchg
xchg
mov
and
jge
or
lea
xchg
shlb
mov
jle
cs
lret
jo
cmp
ret
addr16
lods
dec
fstpt
andl
loopne
pusha
xor
loop
sahf
into
mov
push
lods
cmp
and
test
shrl
pop
rolb
shlb
cltd
mov
mov
push
stc
sub
sti
test
jb
pusha
pushf
lea
xlat
repnz
mov
and
sti
movsb
cmp
daa
mov
daa
xchg
sbb
js
ss
pusha
or
in
inc
push
sub
out
idivb
es
ficompl
cmp
push
mov
adc
xor
lds
outsb
jg
add
aam
adc
cmpsb
das
xor
sbb
add
push
xor
push
mov
jbe
add
sbb
in
mov
mov
icebp
push
xchg
stos
lret
js
subl
iret
lret
ror
push
xor
fdivr
pop
dec
scas
shll
xchg
cmp
ljmp
lods
mov
pop
inc
in
cmp
subb
push
jg
fwait
xor
xchg
jg
leave
cmp
jae
fucomi
mov
cmpb
jbe
dec
and
dec
ficomps
push
sub
pop
sbb
dec
jp
mov
jne
push
adc
dec
cli
mov
gs
pop
icebp
scas
sbb
sub
in
clc
idivl
lcall
into
sbb
andl
lahf
xor
in
or
push
push
jns
push
enter
mov
jb
jne
and
jo
sbb
sbb
cmp
aaa
repnz
inc
inc
pop
not
out
dec
movsb
mov
sbb
pop
enter
xor
bswap
sub
xor
rclb
lods
rcl
or
jp
in
sub
pop
js
in
push
jb
sub
push
adc
fidivl
cli
add
or
inc
push
in
incb
xchg
lret
push
push
push
push
push
sub
cld
jns
lret
sbb
lock
mov
dec
fwait
push
pop
cli
lock
insl
adc
push
andl
int
xor
sahf
enter
icebp
pushf
cltd
or
idivb
ds
fs
or
adc
jo
xor
flds
ret
repnz
push
push
inc
mov
push
push
imul
jmp
cmpsl
enter
fsubr
fdivrs
stos
ljmp
cmpsb
mov
push
pop
xor
push
jle
jns
lahf
in
test
adc
adcl
aaa
mov
jg
xor
sti
sbb
push
in
mov
sbb
arpl
in
popa
mov
jns
test
stc
int3
popa
sbb
faddl
sbb
je
and
add
cmc
xchg
mov
lods
mov
adc
adc
rcrb
sbb
push
inc
mov
into
dec
inc
or
mov
gs
loop
xchg
repnz
loopne
inc
xor
outsb
jno
xlat
add
sub
cmp
or
sbb
jg
adc
mov
outsl
roll
pop
jecxz
xchg
fildl
aas
xor
arpl
nop
into
jmp
es
scas
dec
out
cmp
ljmp
mov
add
sbb
cmc
fcmovnu
cli
dec
jle
or
add
jg
jnp
outsl
out
push
and
sub
addr16
push
sub
dec
jne
sub
adc
inc
add
cwtl
int3
mov
xchg
repz
push
xor
adc
insb
outsl
xchg
jge
pushf
lret
test
repz
inc
pop
add
xlat
pop
add
paddsw
stos
movsb
test
lret
js
repz
mov
xchg
cmp
jmp
sbb
mov
add
and
cmpsl
mov
sahf
fsubrl
sahf
sub
dec
xchg
dec
loop
mov
iret
pop
mov
xchg
push
and
sbb
sahf
and
cmp
nop
insb
adc
std
and
pusha
insl
xor
xchg
jns
sahf
mov
shrb
test
sbb
pop
mov
dec
das
mov
movsb
add
push
mov
pop
push
cwtl
sub
hlt
out
pusha
insl
jmp
int
out
inc
mov
jp
decl
out
lea
or
loop
dec
pop
loope
mov
addr16
out
sbb
and
dec
adc
decb
stos
iret
outsb
ja
std
xchg
pop
sub
xchg
lahf
pop
lods
xadd
mov
or
jle
dec
pushf
fisttpll
lcall
jmp
negb
loope
push
test
stos
outsb
ficomps
push
push
mov
pop
jmp
push
cmpsl
out
out
push
push
shll
xor
mov
mov
and
call
je
shll
mov
sub
enter
inc
leave
pop
je
or
aas
mov
icebp
mov
js
or
sbb
mulb
mov
cmp
stos
repz
lahf
je
loopne
aam
push
das
subb
mov
jp
mov
pinsrw
add
stos
mov
ret
inc
push
sub
or
in
repz
push
fs
xchg
dec
xor
mov
sbb
jp
sub
rolb
cwtl
mov
cmp
xchg
gs
inc
sbb
push
add
jae
addr16
dec
fcmovne
sub
lret
xchg
inc
mov
ds
movsl
pop
push
sbb
insl
xchg
adc
test
sub
mov
loop
popf
or
jns
jmp
repz
mov
lock
fsub
mov
or
enter
lds
sbb
pop
stc
inc
mov
les
aaa
ds
or
mov
xchg
orps
cmp
mov
iret
ss
shlb
hlt
ljmp
xor
push
lahf
je
out
movsb
mov
xchg
enter
sub
movl
loope
int
sub
mov
inc
es
xchg
push
fcoms
sub
add
sbb
sbb
inc
mov
sbb
mov
mov
xchg
movsb
cld
ljmp
xchg
mull
jno
push
jmp
xchg
mov
lahf
mov
mov
pop
dec
and
lcall
imul
xor
cmpsb
movnti
cs
nop
cmp
into
mov
test
ss
std
fcomps
pop
or
lret
add
aam
push
mov
hlt
aad
movsl
orl
jns
jmp
or
shlb
mov
push
lods
in
std
sub
cli
in
push
cltd
jle
cmp
outsb
push
in
sahf
fiaddl
mov
or
mov
inc
pushf
and
sub
sbb
mov
xchg
je
adc
pop
add
xchg
cmc
lea
imul
mov
lret
in
in
pop
xor
or
cmc
push
les
in
mov
jb
mov
push
ja
mov
pop
cmc
xchg
push
and
cmp
mov
xchg
jmp
pop
fs
in
ret
cmp
xor
fisttps
fnstsw
pop
leave
jge
mov
mov
in
out
aad
inc
aam
mov
aam
out
push
pop
jecxz
cmp
xor
and
js
inc
mov
sahf
adc
mov
add
lcall
xor
jne
jecxz
mov
sbb
cmp
mov
mov
sbb
scas
mov
lret
mov
jnp
sub
sbb
sahf
adc
xchg
ret
mov
lock
push
cli
or
mov
mov
or
mov
cmp
dec
cmpsb
cs
in
jmp
jne
inc
aaa
aas
jmp
jmp
push
data16
rclb
and
dec
dec
aaa
push
inc
and
sub
pop
add
push
mov
movsb
out
jle
mov
xor
in
out
arpl
in
dec
shrb
cmc
or
pop
sub
sub
or
adc
cmp
leave
pop
mov
jg
push
int3
pop
out
mov
insb
mov
jle
ficomps
es
stos
je
ljmp
inc
jno
adc
sbb
or
xor
leave
ret
push
inc
cltd
push
push
pop
mov
bsf
movsb
mov
adc
notb
pop
fadds
pop
nop
mov
divb
pop
and
mov
aad
add
fidivs
scas
xor
jecxz
xchg
ja
inc
shrl
jae
pop
add
dec
fidivl
mov
push
sbb
loopne
es
or
cmp
out
cs
mov
test
iret
fcomip
mov
test
mov
hlt
dec
jns
iret
jbe
imul
jge
dec
daa
push
jae
out
adc
cmp
aad
out
lret
sbb
push
sarb
push
pop
mov
stos
xchg
xchg
hlt
bound
jg
bound
fsin
pop
cmpsl
push
add
pop
add
push
xchg
sbb
xchg
inc
fsubrs
xchg
insb
mov
and
ss
jb
fcoms
add
in
mov
stos
orb
dec
adcb
leave
icebp
mov
fdivs
push
cmpsl
jecxz
out
pop
ret
dec
mov
push
mov
int3
aam
iret
insb
mov
ret
cltd
popa
add
dec
lds
lea
loopne
popa
push
mov
cs
jl
ficoms
data16
push
push
jl
out
test
scas
ret
mov
inc
jne
inc
fistpll
pop
dec
jecxz
push
fdivrl
cwtl
in
push
stc
sbb
fcmovb
dec
mov
loope
mov
mov
clc
xchg
pop
mov
sub
out
add
cmpsb
xchg
sbb
xchg
dec
fsubrl
xchg
lcall
lret
das
movsb
inc
dec
xchg
mov
rcl
xchg
xor
sbb
xchg
mov
fldcw
pop
div
dec
sub
adc
das
out
mov
mov
xor
cltd
pop
adc
les
inc
insl
add
scas
mov
push
aam
cwtl
sbb
shl
mov
sbbl
jmp
dec
hlt
pop
js
jp
lock
sbb
and
adcl
lods
xlat
jnp
arpl
lret
sub
imulb
or
mov
imul
mov
in
push
lds
aaa
jmp
hlt
mov
in
lcall
out
and
aad
jno
ljmp
push
push
test
and
mov
push
mov
out
mov
xlat
jle
cmp
sbb
and
shrl
mov
stos
add
mov
mov
push
sti
xchg
add
cmpsl
test
jo
into
mov
bound
mulb
test
dec
jl
test
jle
cld
push
std
mov
xchg
mov
movsl
leave
adc
xor
out
xchg
mov
mov
adc
push
mov
clc
in
repz
lret
mov
jne
jg
cwtl
popa
out
cld
cmp
jne
fimull
mov
push
push
or
jle
shl
jnp
sub
fimull
das
fsubs
outsb
cmc
pusha
iret
imul
lcall
push
inc
pop
in
cli
jle
lods
push
sub
neg
adc
test
adc
jmp
add
ret
addr16
outsl
cmp
inc
aas
in
pop
xor
adc
orb
scas
mov
cmpb
testb
pop
mov
mov
mov
sahf
lea
xor
pop
bound
dec
inc
xor
xor
mov
push
in
jmp
fdivrp
mov
pop
push
rorb
push
leave
sub
add
mov
add
jle
outsb
pop
cmp
or
jne
sub
inc
add
sub
cmp
xchg
rorl
lahf
nop
sbbl
push
repz
popa
cmc
out
fsubrs
add
stos
jo
push
and
subw
andl
popf
roll
jmp
scas
pop
cmc
out
cltd
popa
sub
inc
and
inc
lods
les
adc
test
mov
inc
fldln2
jge
mov
pop
cmc
jnp
push
clc
orl
loopne
test
cs
inc
mov
std
fldl
inc
scas
movsl
mov
stos
scas
cmp
adc
lds
xor
xchg
adc
popa
inc
mov
dec
lods
lock
inc
jmp
push
mov
addr16
add
sbb
in
mov
xor
out
stc
out
jp
sti
stos
fistpll
arpl
inc
dec
icebp
js,pn
push
clc
inc
lcall
in
bound
cltd
and
mov
mov
fsubr
or
ljmp
mov
jmp
es
xchg
repnz
xor
cld
mov
cs
mov
xor
inc
das
sub
test
cld
push
fbstp
mov
rorb
in
push
or
dec
subl
loop
push
and
out
pop
repz
jbe
pop
fcoms
jmp
xchg
fnsave
testb
cmpsb
jae
sub
mov
rcrb
pop
aas
out
rorb
cs
push
das
adc
test
pop
mov
jge
pop
jl
out
adc
sbb
outsl
xchg
push
sbb
sub
aaa
push
mov
adcb
in
aas
jbe
xlat
pmullw
xor
test
lock
jp
fmuls
outsl
loope
aaa
shlb
out
sarl
nop
push
test
and
jne
push
dec
mov
shl
mov
pop
fsubrl
dec
sub
in
inc
popf
sub
inc
adc
repz
sub
gs
mov
stos
cwtl
bt
andb
imul
movsl
rcrl
pop
adc
negb
xorl
fsubp
xchg
add
push
push
dec
cmp
jns
sbb
cmp
push
pop
sub
das
push
mov
xor
fildl
stos
dec
in
mov
fbstp
in
or
mov
jno
sbb
push
scas
pushf
jp
pop
ret
callw
ret
popf
push
arpl
jbe
cmpsb
push
pusha
bnd
insb
ror
cli
and
imul
lods
mov
inc
loop
mov
pop
ficomps
mov
pop
and
je
movsl
shlb
xor
int
sbb
and
mov
aad
insl
push
sti
shl
repz
sub
int3
pop
js
fsubr
mov
xor
es
mov
xchg
mov
mov
insl
imull
jge
sbb
mov
jno
arpl
sub
test
rcrl
rolb
test
and
mov
ljmp
xchg
fs
push
inc
imul
cs
dec
add
rcrl
out
movsb
je
stos
mov
xchg
and
mov
xor
adcb
inc
sub
and
mov
sub
scas
imul
pop
jne
mov
in
and
xchg
mov
mov
repnz
add
add
push
push
rorb
dec
loope
addb
shrb
sub
repz
imul
in
jmp
jmp
mov
adc
inc
out
jl
add
repz
or
sbb
add
sub
push
cmc
call
imul
lods
and
in
imul
mov
jb
mov
js
sub
inc
fidivl
and
dec
xchg
inc
or
repz
sti
dec
cltd
and
out
mov
adc
in
push
adc
jo
mov
jo
loopne
inc
mov
xchg
mov
inc
mov
out
int
mov
add
addb
xor
sub
sbb
aad
push
or
mov
rorl
xchg
mov
in
in
aas
jecxz
fmul
popf
dec
cli
mov
cltd
mov
mov
lret
ret
and
xor
addr16
gs
lret
adc
insb
sub
mov
imul
out
adc
lcall
insb
xor
int
cld
sarb
sbb
xor
in
insb
outsb
mov
jo
push
call
or
sbb
pop
dec
ss
mov
and
push
sahf
les
loopne
mov
cmp
fucomip
aas
arpl
pop
push
bound
test
out
fs
call
xchg
enter
das
sub
jge
cmp
dec
sub
hlt
push
dec
adc
mov
pop
inc
leave
xor
pop
sbb
xlat
sub
sub
sub
aad
pop
mov
mov
sbb
fcoms
dec
movl
pop
adc
call
lock
mov
stc
jae
std
movsb
adc
pop
push
flds
xchg
mov
stos
xor
into
jecxz
pop
pop
dec
pop
pop
xor
lahf
popa
decb
into
test
mov
mov
xchg
jmp
rcrb
les
lcall
call
sarb
test
shrb
test
xor
rcrb
inc
pop
sub
dec
test
mov
inc
sbb
pop
pop
jb
dec
ljmp
das
adc
pop
jno
data16
sub
xor
lods
xchg
shlb
mov
or
pop
insb
jecxz
inc
lock
push
add
fcmovnu
cmp
cmpsl
ret
and
sub
adc
int3
dec
pop
int3
pop
xor
mov
mov
icebp
sarb
fimull
stos
mov
jg
push
movsb
lds
lds
push
push
notb
out
cld
adc
dec
adc
arpl
fs
or
sahf
and
adc
mov
mov
cmp
xorl
popf
lret
lds
rorb
rorb
insl
pop
movups
dec
int3
and
inc
fcomp
clc
inc
lock
or
pop
mov
aas
gs
cltd
add
inc
add
aad
dec
jnp
or
jns
pop
adc
jl
sti
int
mov
jmp
sbb
xchg
jae
dec
lods
jmp
insb
xor
pop
jle
outsl
mov
insl
inc
lds
mov
pop
or
loope
mov
dec
nop
sub
ret
pop
loopne
roll
mov
movsb
out
rcrl
cmpl
cmp
jecxz
and
sbbl
cld
cmc
movsb
push
icebp
stc
push
fucom
jp
cs
fcmovnu
add
ret
mov
lds
shlb
jns
mov
xchg
rorl
sbb
xor
add
fsubrl
daa
mov
dec
jne
xchg
fsubl
or
inc
je
out
cltd
inc
push
insl
lcall
xchg
mov
cwtl
pop
jo
add
inc
xor
or
sbb
inc
gs
add
cwtl
pop
test
fwait
sbb
mov
and
test
or
data16
clc
xor
mov
adc
test
jp
and
mov
xchg
sahf
inc
xchg
xchg
sub
xor
popa
stos
rol
popa
lcall
fists
in
lods
aam
jmp
dec
pop
lret
and
mov
jbe
cmp
inc
inc
and
jg
or
pop
lret
ret
mov
rcrl
stos
or
js
jmp
aad
sbb
push
xor
mov
int3
call
cltd
div
test
arpl
mov
jmp
hlt
fldenv
test
es
pop
ljmp
gs
or
mov
mov
xchg
jne
pop
and
sbb
fisttpl
add
repnz
popa
mov
sbb
daa
or
mov
mov
loopne
jno
jnp
xchg
shrl
inc
xchg
popa
popf
mov
push
inc
dec
enter
add
mov
scas
loope
pop
pop
xchg
fisttps
mov
add
lods
push
dec
in
jnp
adc
xor
in
push
adc
movsl
cltd
repz
xlat
pop
mov
int3
je
lret
out
cmp
out
aaa
cmp
fadds
push
insb
out
nop
push
int3
cwtl
mov
cli
leave
jb
mov
xchg
in
scas
pusha
into
push
insl
mov
fwait
cs
pop
rcrb
jb
in
js
test
and
in
jb
xchg
jo
imul
xchg
aas
lods
push
mov
inc
sub
mov
add
jne
cmp
mov
sbbl
in
mov
push
lcall
mov
mov
dec
inc
jb
arpl
daa
sbb
fnstenv
jle
pusha
pop
push
dec
sti
shll
push
in
inc
stc
xor
insb
repnz
out
sbb
push
in
mov
cmpsl
pop
cmp
pop
sub
xchg
ret
pop
xchg
push
mov
aam
push
scas
out
cmpsl
push
test
pusha
mov
dec
xchg
cwtl
cmc
out
mov
xlat
fwait
cmp
ret
cmp
xor
imul
lods
loop
out
gs
mov
inc
in
test
mov
ds
cmc
or
stos
lods
sbb
lods
cld
ss
fwait
sub
push
or
in
mov
fildl
pushf
and
lods
ret
xchg
fcomps
imul
repnz
gs
outsl
mov
mov
mov
and
inc
outsl
pusha
scas
bound
mov
mov
sbb
inc
jo
in
or
out
mov
fstl
lods
popl
sub
mov
in
pop
and
movsl
ret
mov
pushf
int3
imul
into
gs
pop
std
lret
cli
add
sbb
or
mov
push
enter
incb
fsubrs
pushf
into
pushf
xchg
cmp
and
pop
xor
in
and
push
lret
sub
call
pop
sub
push
daa
subb
ret
push
push
ret
ja
inc
pusha
inc
dec
jnp
ljmp
mov
inc
cmp
jl
or
lock
imul
mov
and
add
cs
int
out
jmp
mov
jae
loopne
data16
add
fwait
leave
jg
enter
add
dec
mov
pop
push
in
pop
je
fbld
inc
mov
mov
adc
lds
fwait
mov
push
inc
nop
and
jnp
out
or
adc
in
insb
pop
scas
cmpsl
aaa
test
mov
in
std
sahf
mov
inc
int3
sbb
mov
pop
stos
jno
scas
dec
push
xchg
xlat
and
sub
stos
aas
outsb
orl
jg
sub
ret
xor
ljmp
ret
mov
push
popf
pop
inc
bnd
repz
add
mov
pop
cmpsl
sub
or
push
cmp
add
out
dec
insl
js
test
inc
sbb
iret
xor
xchg
mov
scas
xchg
aam
sbb
mov
lock
push
sub
sub
inc
addr16
sub
insb
fwait
and
push
icebp
mov
cmp
push
cld
ficoml
sbb
ret
xor
js
mov
mov
inc
push
ret
xchg
dec
int3
cld
pushf
and
stos
mov
movsb
test
xorb
mov
cmp
push
jmp
sub
jnp
inc
loopne
jge
cmp
popa
insl
in
sub
repz
pop
ja
arpl
sub
jae
gs
out
mov
fstps
pop
cwtl
in
icebp
sub
mov
cmc
aaa
sub
xorl
lret
in
jmp
out
lock
jbe
cmp
push
fcompl
out
movsl
rorb
ret
stos
imul
shl
out
ficoml
repnz
add
enter
pop
jl
mov
or
scas
mov
movsl
xchg
xchg
mov
rcll
or
sbb
sbb
xchg
mov
out
pop
inc
xor
popf
mov
cmp
stos
ret
fwait
andb
jmp
mov
push
xchg
pop
mov
or
int
push
lahf
ror
outsl
jnp
or
inc
dec
imul
repz
sub
mov
addb
inc
pop
push
roll
in
loope
pop
jle
or
pop
xchg
shr
ret
inc
mov
sar
addl
test
js
fs
inc
pop
add
or
pop
mov
in
loopne
in
push
pop
mov
push
movsb
movsl
lods
sti
cmp
lcall
int3
jl
adc
mov
mov
pusha
mov
loopne
and
es
sbb
add
mov
lods
or
dec
js
mov
imul
add
lock
in
pop
inc
nop
repnz
out
das
lahf
cmp
fwait
mov
sub
decb
inc
pop
push
or
adc
cmp
xor
pop
ss
insl
sbb
in
hlt
loopne
push
mov
daa
push
and
mov
and
sti
aas
repnz
push
adc
push
adc
ds
cmc
adc
cmp
or
lea
or
addb
cmp
popa
int
and
cmpsb
les
into
xchg
push
cmp
fnsave
push
push
sub
testl
or
icebp
js
mov
loope
dec
movsl
cs
dec
lods
call
bound
rol
jmp
inc
test
lret
and
dec
ret
int
inc
in
or
shll
jbe
test
xchg
mov
xor
aaa
sub
mov
lret
mov
jl
xchg
jl
pop
fcomps
xchg
xor
push
mov
push
cld
arpl
mov
in
mov
mov
adc
sub
jg
imul
int
imul
push
cmc
cmp
add
push
push
xchg
inc
out
ror
pop
mov
add
xor
lea
inc
rcrl
sbb
movsb
and
and
movsw
scas
daa
negl
movsb
arpl
xor
movsl
sbb
daa
aas
cmp
test
loop
mov
jnp
scas
lods
xor
xor
addr16
inc
xor
xchg
xor
pop
jecxz
push
das
push
adc
test
dec
int3
jmp
mov
jbe
insl
sbb
stc
add
or
xor
push
mov
dec
push
mov
xor
jo
or
cmp
pop
pop
cwtl
adc
fnstenv
adc
arpl
es
mov
push
xchg
mov
fcoml
mov
mov
push
push
sahf
adc
addr16
jns
inc
pop
sub
ss
jge
movsl
popf
cmpsb
jb
ret
hlt
scas
jo
sub
sub
stc
and
lock
outsb
push
adc
addr16
pop
jo
inc
in
lahf
mov
sub
fld
jne
jnp
loop
arpl
pop
mov
es
shll
mov
mov
pop
sub
outsl
xchg
dec
insb
lock
sbb
or
in
clc
int3
push
pop
sbb
inc
mov
jnp
mov
ljmp
testl
sahf
jo
and
insb
fsubp
pop
sarl
cld
push
scas
sub
xor
pop
jne
outsb
shlb
subl
cmpsb
in
insl
pusha
test
cmp
cmp
repnz
mov
subl
shlb
xchg
push
mov
and
test
mov
jg
mov
hlt
jae
xchg
int3
cmp
and
iret
push
mov
mov
stos
push
out
jbe
push
mov
xchg
insl
je
xchg
rcrl
test
test
pop
cmp
xlat
xor
fsubrp
pop
inc
inc
and
cmp
xchg
repnz
in
es
ljmp
add
mov
fmull
pop
scas
js
stos
dec
pop
shlb
cmp
daa
cs
jo
addl
and
mov
cmp
lds
fidivl
in
sub
mov
jns
pop
je
stc
int3
xor
pop
movsl
jl
inc
je
jmp
aas
inc
cltd
out
sub
fwait
inc
lds
fwait
aad
push
xor
pop
push
mov
dec
insl
sub
leave
cmp
je
add
lds
mov
fmull
pop
dec
icebp
xorb
jns
and
enter
icebp
bound
pop
pop
out
out
out
jnp
cmpsl
mov
push
xor
dec
push
jo
das
jnp
sbb
mov
daa
psubsb
aaa
adc
fs
inc
enter
adc
std
mov
jg
xchg
sbb
test
xlat
addr16
sbbl
jns
push
inc
xor
ficomps
repnz
cmpsb
sub
xchg
orl
push
mov
lds
fcmovnu
test
cs
out
and
dec
xor
push
cmovne
into
je
cmp
add
data16
cmp
and
in
xchg
fisubs
sbb
cltd
jo
add
xlat
dec
pop
jno
aad
adc
pop
mov
lds
add
add
sbb
inc
ret
cmp
mov
mov
adc
xchg
scas
pop
in
outsl
push
xor
pop
jle
or
sbb
pop
xchg
or
or
decl
dec
or
rorl
lret
xor
mov
push
sub
and
cs
xchg
sub
pop
mov
incl
pusha
cmpl
inc
into
rcll
pop
imul
sbb
ljmp
cwtl
or
roll
imull
sub
xorl
jp
movsb
mov
adc
mov
shlb
into
mov
ss
or
pop
pop
jmp
xchg
dec
clc
pop
cmpsl
pop
xchg
adc
pop
add
test
loopne
out
jl
push
lahf
or
mov
fcmovnb
lds
pop
mov
hlt
repnz
xor
mov
pushf
mov
stc
out
inc
cwtl
in
clc
iret
dec
adc
mov
rcrb
repnz
loopne
inc
das
pop
mov
push
roll
pop
stc
push
loopne
insl
ja
ja
push
mov
rolb
adc
mov
mov
outsl
fbstp
aaa
xchg
popf
add
es
mov
inc
add
in
test
dec
js
in
dec
movsl
inc
push
out
and
mov
enter
daa
aam
fidivl
lds
filds
mov
jno
sbbl
popa
push
jmp
pushf
in
add
icebp
hlt
fwait
repnz
push
and
or
pop
inc
xor
test
lds
cs
push
sub
add
sarl
cmp
mov
inc
mov
inc
jge
fwait
mov
push
push
loopne
pop
jbe
add
dec
scas
paddsb
mov
loope
cmp
xchg
sbb
sub
push
pop
sub
sbb
jle
pop
pop
sub
leave
ss
outsb
push
push
movsb
push
mov
cmp
popf
jae
xor
pop
lock
mov
clc
cwtd
outsl
bound
pushf
jmp
rolb
lahf
xor
orb
mov
dec
jmp
scas
and
mov
sub
push
and
insb
mov
cmp
shrl
insb
ret
mov
mov
or
cmp
push
or
or
push
jno
xor
daa
rclb
xchg
and
inc
loop
insb
xlat
mov
fldenv
adc
popl
std
pusha
push
fsts
adc
fcmovnu
scas
pop
adc
mov
rcll
mov
dec
negl
push
rcrb
add
inc
aaa
aad
rorb
in
push
xchg
pop
cld
xor
andb
add
hlt
or
jnp
inc
das
push
subb
rorl
rcr
es
mov
adc
dec
lcall
pop
jle
enter
mov
lods
xchg
push
dec
testb
adc
jp
jbe
lret
aaa
inc
mov
pop
std
es
dec
or
iret
aaa
or
dec
insb
out
cwtl
inc
iret
push
adc
into
mov
push
js
std
fpatan
lods
pop
jle
mov
jp
idiv
mov
pop
outsl
pop
loope
jge
xor
or
movsb
mov
gs
mov
xor
push
es
dec
add
add
xor
insb
lret
mov
cmpsb
jb
aam
jmp
mov
movsl
stos
cmc
sbb
mov
pop
push
mov
cli
loope
movsl
pop
rclb
add
push
in
lret
ljmp
in
out
es
jecxz
outsb
stos
fadds
fs
xor
sahf
das
xor
icebp
lods
sbb
mov
dec
lods
mov
xchg
pushf
dec
cmc
out
jge
mov
lds
push
jle
cwtl
cmpb
not
out
imul
push
or
pop
pop
mov
xchg
push
data16
data16
jp
mov
and
int3
lcall
fcomip
stos
insb
outsl
xor
inc
ret
cltd
ljmp
sbb
jle
fldcw
mov
pop
loope
mov
stc
sets
lds
mov
add
mov
sarl
adc
popa
fnstenv
imul
mov
xchg
pop
insb
mov
fistps
rolb
inc
scas
pop
and
dec
add
pop
dec
gs
or
fldcw
inc
sahf
mov
movsl
mov
sbb
xor
rclb
ljmp
sub
mov
inc
jo
in
test
pop
sti
push
cmp
add
push
gs
loopne,pn
sti
cmp
sbb
mov
push
cld
push
xchg
cwtl
imul
mov
dec
pop
dec
jns
sbb
call
xchg
mov
cmp
pop
push
sbb
shll
loope
insb
imul
mov
lahf
adc
jbe
clc
int3
cwtl
mov
jg
push
repz
ds
out
mov
aad
mov
sub
mov
pop
icebp
jg
dec
js
sbb
daa
add
jg
xchg
pop
andl
arpl
repz
pop
dec
sbb
cmp
into
mov
xchg
adc
push
mov
add
aas
leave
lock
mov
cmp
and
mov
stos
sub
add
or
mov
mov
mov
cs
pop
enter
dec
or
into
add
push
xchg
js
inc
js
movsl
or
addr16
aam
cmp
mov
aad
ljmp
mov
mov
out
push
mov
cltd
inc
cli
fdivrl
dec
orb
lods
pop
dec
mov
jb
in
pusha
sti
cli
out
and
lahf
cld
dec
xlat
in
and
fisttpll
push
pop
arpl
mov
xchg
or
outsl
push
ja
repnz
sbb
ret
outsl
ja
call
sbb
adc
lcall
adc
push
inc
xchg
stos
mov
jmp
jl
and
jne
fisttps
jne
outsl
out
and
mov
mov
in
mov
ret
mov
pushf
int
sub
orb
or
clc
jno
rclb
cmp
call
pop
cmp
inc
add
pushaw
scas
fs
insb
in
mov
and
sub
push
cmp
adc
in
bound
cltd
cmp
dec
popf
xor
mov
push
shrb
popf
lods
or
xor
lds
ja
jge
cmp
lcall
loopne
mulb
jnp
test
xor
les
int
mov
cmpl
faddl
fiadds
out
popa
cmp
adc
push
movsb
aas
jge
adc
jbe
add
sti
sbb
inc
mov
push
or
neg
adc
movsl
sbb
les
mov
adc
lcall
daa
outsb
popa
cmpsb
mov
pusha
aad
mov
ds
mov
xchg
movb
lock
test
out
mov
dec
pop
sbb
cmp
push
sbb
add
fimull
nop
dec
mov
or
sbb
das
or
sahf
pop
je
out
xchg
jbe
push
mov
test
loopne
popa
push
fsubl
arpl
cmp
xchg
jle
xlat
add
adc
jne
jl
cmpsb
push
jb
mov
sub
cmp
imul
jo
dec
les
add
pop
xchg
cmc
push
inc
jge
mov
adc
sbb
std
push
jp
out
xchg
in
call
cmpsl
sub
rol
mov
call
data16
cmc
sub
adc
push
je
je
mov
push
pop
inc
imul
sub
xchg
addr16
dec
add
push
imul
cmp
hlt
shr
clc
adc
clc
out
out
xor
in
push
sbb
and
push
movsl
jmp
mov
pop
insl
loope
lds
je
pop
or
ja
hlt
mov
std
cmp
pop
mov
inc
cwtl
pop
add
pop
imul
pusha
int3
jg
lret
jecxz
and
pop
mov
xchg
into
les
daa
test
push
inc
pop
dec
xchg
cmp
or
scas
xor
aaa
ljmp
jp
cwtl
mov
inc
movsl
xchg
mov
movsl
sbb
int
pushf
jl
imul
mov
fiadds
and
cmp
adc
sbb
adc
les
addr16
call
rcl
mov
ret
jno
xchg
lcall
imul
scas
push
xchg
mov
sub
test
cwtl
cmp
pop
dec
daa
cwtl
dec
test
dec
xor
pop
fcmovbe
sbb
aad
es
test
pop
or
jo
stc
js
inc
fcompl
xchg
jb
sub
cwtl
dec
ret
xor
shl
and
loop
addl
sub
mov
rcpps
mov
fdivs
aam
xchg
sub
xchg
push
push
lret
rorl
test
sub
push
mov
ljmp
push
mov
mov
mov
std
and
out
clc
fdivp
movsl
pop
adc
mov
inc
addr16
xor
std
ret
enter
and
das
inc
mov
leave
cli
dec
adc
lock
sub
mov
into
lods
add
outsl
test
les
sub
push
mov
pop
jle
out
or
and
inc
and
cmp
push
cltd
imulb
lcall
fwait
mov
dec
inc
xchg
hlt
inc
xchg
pop
cltd
cmc
test
mov
push
pop
ds
dec
sbb
out
jle
mov
inc
loopne
scas
sub
fwait
xchg
sub
dec
loop
pop
les
xchg
jge
or
inc
aam
outsl
es
out
mov
loop
mov
sti
loop
bound
out
mov
mov
test
sub
shlb
lods
xor
movsb
or
movsb
and
test
inc
adc
jg
jno
bound
inc
pushf
sti
jo
das
les
jae
fistpll
stos
nop
mov
push
ja
mov
xor
lea
mov
cmp
or
ficomps
in
out
cld
inc
pop
icebp
adc
or
out
pop
dec
pushl
ss
cmp
lods
mov
popf
inc
jae
jae
enter
imul
sub
push
jo
mov
xchg
jg
mov
sub
pushf
ds
jno
push
pop
dec
ss
cmc
scas
or
repnz
add
mov
jg
int
out
mov
ds
dec
add
add
jne
daa
sbb
cmp
pop
nop
cmpsl
sarb
mov
lds
mov
or
pop
out
mov
sub
loopne
dec
push
mov
xor
xor
adc
out
mov
push
push
fyl2x
mov
int
dec
lods
jp
add
dec
cwtl
cli
pop
fcoml
andb
repz
push
push
sub
and
jnp
sub
mov
test
xlat
or
es
adc
popf
mov
lcall
mov
mov
jno
jecxz
sbb
adc
in
xchg
popa
loope
int
mov
dec
xchg
flds
xchg
fdivr
in
mov
das
std
pop
push
loopne
dec
and
xchg
jb
into
adc
ret
mov
arpl
fstpl
ljmp
fs
mov
mov
rorb
xchg
fldz
call
pop
push
cli
mov
addr16
or
js
or
jae
xlat
icebp
cmc
sbb
mov
repnz
jl
xlat
cli
in
imul
xchg
loopne
pop
paddsb
add
loop
pop
das
lret
sarl
in
adc
out
jno
mov
lock
shrl
add
sub
out
je
pop
push
inc
jg
testl
dec
xlat
xchg
mov
mov
xchg
or
jge
shlb
pop
mov
imul
jl
test
fldt
xlat
push
fstpl
and
cmpsb
and
add
cmpl
xchg
push
sub
out
fmuls
adc
pop
cwtl
xor
out
in
mov
mov
adc
xchg
pavgb
or
movsbl
pop
repz
pop
cmp
xor
lock
gs
sbb
add
mov
daa
leave
sbb
mov
pop
aam
jne
mov
dec
test
push
mov
xor
add
xchg
mov
jb
pop
add
outsl
pop
pop
or
out
xor
ljmp
pop
out
inc
nop
push
jno
xor
adc
lcall
jg
jne
add
out
lcall
adc
adcl
lds
insl
adc
adc
xlat
lret
push
mov
cmpsl
lret
jl
jmp
xlat
jmp
add
and
pop
out
xchg
mov
xor
sar
push
sbb
sbb
repnz
cld
mov
pop
shl
add
cltd
or
fdivl
dec
xor
pop
xor
das
sbb
loopne
int3
xchg
cmc
aam
mov
int3
mov
mov
lret
cltd
push
cmp
out
push
pop
push
xchg
and
repz
popa
lret
mov
mov
subb
loop
jae
lock
mov
mov
fwait
xchg
dec
sub
push
or
push
aad
fwait
mov
xor
push
loop
cmp
sub
inc
push
sar
js
je
addr16
out
fs
out
mov
sbb
cltd
iret
xchg
and
rcr
test
inc
and
fs
xchg
jno
xchg
jp
int3
das
mov
adc
out
mov
push
and
popa
lods
fyl2x
inc
movsl
movsl
mov
push
mov
xchg
sub
fs
xor
dec
es
or
sbb
mov
nop
fucom
aad
cmp
adc
sbb
mov
int3
pop
out
jmp
leave
dec
jnp
push
and
or
lret
sub
xchg
or
int
les
test
outsb
adc
popa
sub
and
stos
pop
arpl
xchg
std
xchg
rcrb
dec
cmpsl
jno
jg
sarl
clc
dec
inc
scas
push
scas
jo
push
ds
lock
adc
movsl
subb
dec
mov
iret
dec
out
dec
cmp
mov
mov
mov
mov
sub
fwait
outsb
les
lds
ja
push
fwait
movl
push
das
fbld
add
push
push
sbb
jo
dec
pop
xchg
nop
pushf
sbb
push
xor
mov
std
xor
cmp
ljmp
repz
dec
lods
in
xor
gs
sbb
mov
divb
iret
lods
adc
push
inc
fcomip
and
repnz
cwtl
imul
inc
aaa
pop
movsb
add
dec
imul
and
ret
sub
mov
push
jge
push
ficomps
jb
pop
push
push
inc
lods
incl
sti
dec
pop
adc
ja
cs
test
pcmpgtw
cmp
stc
push
push
lret
mov
or
sbb
bswap
xchg
mov
jge
sbb
sub
sub
subl
jp
lods
adc
repz
hlt
hlt
or
popf
jbe
sbb
or
cli
out
mov
notb
rorl
lods
xchg
scas
add
and
jmp
into
inc
push
cwtl
sub
push
in
xchg
xchg
inc
stos
pop
fdivrl
popl
ss
out
adc
scas
in
divb
push
adc
mov
mov
in
jbe
mov
imull
orl
repnz
bound
push
out
push
icebp
mov
jno
and
xor
lock
pop
pop
aas
inc
outsl
rorl
add
movsl
mov
push
sbb
xchg
adc
ss
xchg
inc
test
adc
push
jle
arpl
xchg
dec
jle
and
sbb
push
and
les
pusha
cs
push
jmp
dec
xchg
cmpsl
sbb
testl
jle
xchg
scas
ss
xor
icebp
or
loopne
add
adcl
lea
das
or
imul
adc
outsb
push
imul
mov
lds
mov
inc
and
push
repnz
pop
pushl
cltd
ret
pop
xchg
lret
int3
sub
gs
mov
fidivl
mov
bound
cld
adc
in
adcb
ds
out
aam
lock
jl
pop
std
pop
mov
jne
inc
sub
stos
adc
es
scas
pop
sahf
mov
lcall
adc
mov
jb
gs
fdivrs
mov
add
cwtl
inc
loop
pushf
addr16
mov
jmp
xor
mov
sub
or
push
or
test
repnz
dec
jmp
xor
or
and
insb
mov
adc
and
mov
mov
adc
mov
ffreep
ljmp
pop
push
loop
popa
cmp
adc
lcall
add
das
cs
idivl
sbb
adc
dec
cmp
jne
ss
dec
sbb
clc
sbb
push
dec
inc
nop
repz
sldt
cmpsw
add
push
popa
pop
lods
sbb
dec
pop
pop
adc
popa
loopne
movb
jns
imul
mov
and
ret
loop
jns
fisubrl
push
mov
repnz
dec
xchg
scas
add
dec
rcll
movsl
leave
sub
mov
sarl
stos
xlat
dec
mov
sbb
xchg
jns
mov
push
out
push
add
jp
mov
les
rol
mov
dec
loopne
movswl
mov
es
pop
jl
loopne
ss
dec
test
pushf
mov
std
popa
xor
cltd
scas
pushf
sbb
xchg
cmpsl
sbb
sarb
or
mov
negb
mov
pop
rorl
pop
mov
fisttpll
aad
cs
fdivrs
call
mov
daa
sti
add
mov
out
mov
add
push
pop
mov
push
adc
loope
int3
mov
gs
shlb
push
dec
clc
adc
push
xchg
dec
mov
decb
rolb
xor
jae
lock
inc
loope
fnstsw
xor
mov
pop
xor
xchg
rsm
in
insb
add
das
sub
fwait
stos
lret
repnz
cltd
sbb
mov
mov
insb
mov
or
push
or
test
std
arpl
or
push
test
or
maxps
xor
mov
xor
das
aas
adc
ja
cmp
xchg
and
jecxz
mov
imul
mov
pop
jne
jo
aas
imul
pop
inc
adc
push
jmp
sub
ror
icebp
push
and
mov
ja
rorb
das
cltd
push
divl
mov
pop
dec
movl
idivb
into
popa
jp
mov
sub
xor
adc
inc
adc
dec
aaa
faddp
jo
loop
stos
les
mov
push
icebp
mov
lods
pop
xlat
cmp
test
test
adc
cmp
push
push
sbb
push
xor
insl
movsb
mov
jp
pop
mov
lods
inc
jbe
mov
pop
outsb
mov
ret
loop
test
mov
xlat
pop
mov
xor
sbb
out
ret
xchg
jge
lret
cmp
inc
xchg
enter
jo
push
cmc
pushf
and
loopne
in
jbe
les
adc
and
lea
cmp
dec
andl
inc
push
dec
dec
ficompl
jp
gs
push
mov
cmc
dec
xor
shlb
loope
mov
dec
sbb
mov
popa
les
push
decb
sbbb
sub
jp
in
loope
outsb
nop
fcmovnb
ret
adc
insb
loope
ret
xor
addr16
mov
mov
adc
gs
push
std
rcll
pusha
jge
mov
inc
test
out
mov
xor
mov
cld
test
scas
fwait
sub
aas
cmp
mov
mov
fisttps
jge
add
cmpsb
inc
andb
es
ja
scas
or
repz
sbb
sti
xchg
sbb
jp
xchg
aad
aas
jle
push
dec
lahf
jo
scas
and
push
xchg
pushf
adc
hlt
pushf
and
js
fdivl
jmp
rorl
addr16
mov
inc
add
je
inc
adc
hlt
add
jo
or
js
fistps
add
jge
stos
scas
xchg
xchg
add
xchg
or
pop
jmp
shrb
outsb
pusha
and
enter
dec
shlb
imul
imul
bound
jns,pt
scas
lock
pop
xchg
pushf
pop
xor
xchg
fistpll
cltd
loop
sbb
jno
add
dec
testl
xchg
push
int3
test
cmpsb
es
or
push
std
jb
push
sbb
pop
fldcw
data16
add
push
lcall
inc
test
lcall
push
jbe
jg
cmc
sbb
out
pusha
xlat
nop
rcl
mov
or
or
out
sbb
dec
jle
jns
insl
adc
and
inc
add
pop
cltd
ficomps
push
push
pusha
js
sub
test
adc
shlb
or
ret
mov
push
jecxz
insb
int3
call
movsl
inc
outsw
adc
dec
push
xlat
jno
sbb
cmp
test
roll
outsl
cmp
ljmp
lea
leave
pop
lcall
jle
push
leave
or
push
jg
adc
and
test
push
pop
or
xor
popf
xchg
push
pop
movsl
scas
pop
es
cwtl
cltd
lret
test
rolb
cmp
test
ljmp
cmp
or
aam
or
movsl
in
loopne
mov
jbe
sub
data16
mov
call
std
arpl
xor
cmpsl
stos
xchg
fwait
cli
divl
adc
ret
test
sbb
or
cld
cmp
ret
nop
mov
xor
xorl
xor
cmp
add
jne
push
pop
sbb
lahf
push
mov
mov
test
fsubs
jns
dec
repnz
cltd
adc
in
pmaxub
pop
loop
push
scas
lea
call
aam
pop
sahf
mov
data16
das
outsb
mov
int
cmp
xor
repz
testl
int
orb
xor
arpl
rorl
push
aaa
lea
push
imul
or
jecxz
jp
lret
sub
push
rcrb
fs
jo
aad
sbb
arpl
and
cwtl
lret
mov
pusha
jg
clc
cli
or
and
xor
test
cmp
cs
test
jno
add
clc
addr16
mov
cltd
mov
ret
fidivrl
pop
and
cmc
mov
scas
test
ljmp
jo
scas
call
stos
add
popf
and
mov
push
out
cmp
loopne
push
cltd
test
adc
add
in
sub
push
lods
pop
mov
adc
mov
fs
test
mov
inc
or
ret
mov
mov
lds
jp
jmp
mov
addr16
mov
sbb
mov
mov
in
ja
sbb
sbb
cmp
test
mov
roll
push
adc
enter
shll
add
dec
ret
xor
cwtl
lds
and
popa
mov
std
sub
jmp
fcoml
aaa
out
dec
mov
push
imul
shll
cld
adc
push
and
push
jb
push
cmpl
jne
idiv
or
jnp
scas
cli
add
out
fisttpll
test
fisttps
mov
push
outsl
aas
or
dec
jbe
and
push
daa
push
push
cmp
cs
sub
and
xchg
inc
mov
or
ljmp
jno
sahf
stos
out
mov
inc
subb
mov
adc
dec
lock
test
out
and
mov
in
push
pop
inc
add
pusha
mov
pop
inc
adc
add
sbb
test
subl
je
es
les
mov
push
lods
outsb
or
jo
mov
jg
cmpsb
push
push
adc
xor
push
pusha
jmp
and
popf
fnsave
ret
shll
inc
lock
jge
lahf
cmp
push
mov
push
dec
clc
dec
xor
or
pop
scas
dec
lcall
ljmp
outsb
xchg
dec
fxch
ja
cltd
sbb
dec
jg
movsl
cmp
mov
dec
je
add
jne
mov
mov
in
sbb
aad
sub
inc
out
aad
imul
test
cmpsb
sti
xchg
jmp
daa
rcrb
cmpsb
ret
inc
sarl
jbe
sub
adcl
in
xor
sbb
push
int
std
pop
xor
sub
mov
and
negb
dec
lods
idivb
xor
fcmovbe
push
shll
dec
mov
inc
bnd
dec
xchg
mov
stc
lea
stos
sub
xchg
inc
and
and
stc
shlb
adc
inc
mov
js
fdivrl
jmp
adc
ja
inc
inc
popf
or
scas
jo
daa
inc
fiadds
add
xrelease
dec
xchg
cs
xor
pushf
xchg
fsts
xchg
jbe
outsb
lods
lcall
outsb
mov
push
jo
pop
mov
frstor
lahf
dec
inc
push
lods
lea
sahf
arpl
sub
lds
repz
aas
xor
fucom
mov
outsl
mov
or
aad
xchg
xor
pop
aaa
sarb
clc
mov
test
addr16
sbb
push
sbb
adc
mov
out
insl
push
in
in
adc
adc
jecxz
nop
push
out
mov
mov
test
jne
mov
add
and
aam
jo
xor
mov
pop
cmp
repnz
push
mov
pop
dec
movsl
sbb
xor
dec
mov
cli
insb
test
mov
inc
cmp
pop
push
mov
loope
sbb
cltd
dec
jns
negb
push
stos
clc
mov
xlat
in
sub
fisttpll
push
lods
fcompl
push
jo
push
je
and
lods
sbb
les
push
test
jmp
jp
aad
nop
mov
cmp
xchg
imull
inc
sub
outsl
adc
dec
jge
in
mov
testb
push
out
jno
mov
push
mov
imul
jne
lock
lcall
data16
stc
fsubr
out
mov
insl
jg
dec
into
ja
mov
stc
daa
test
inc
fcompl
sbb
inc
outsb
push
dec
std
cmp
xlat
popa
and
sti
in
xchg
pop
sbb
stos
mov
xor
pusha
in
push
inc
mov
or
addr16
mov
lods
dec
mov
or
and
lods
mov
adcb
or
popf
pop
mov
jmp
or
push
adc
lock
dec
ljmp
adc
cmpsl
iret
sbb
push
adcl
xchg
push
nop
ss
mov
dec
dec
add
adc
fst
ljmp
cmpsl
sbb
in
add
repnz
cmpl
leave
lds
xchg
xchg
xor
pushf
or
test
cs
pop
inc
jno
cmp
mov
inc
push
clc
gs
popf
mov
cltd
das
ficompl
inc
inc
leave
adc
cmpsl
inc
popf
jecxz
push
inc
cmc
sti
push
fstp
ror
and
mov
pop
loopne
dec
shll
add
imul
lock
mov
scas
push
fldcw
js
sbb
push
stc
fimull
xchg
cmp
enter
pop
int3
inc
cmp
cmpsb
push
pop
dec
or
iret
adc
pop
arpl
sarb
xor
es
je
insb
pop
sub
mov
out
or
orb
adc
inc
sbb
xchg
imul
sarl
dec
dec
out
repnz
ss
inc
xor
imull
fistpl
aas
add
pop
dec
out
xchg
jb
sti
cmp
out
incl
ds
push
jb
lahf
fcompl
fucomi
pusha
and
jns
mov
xlat
stos
push
adcl
sbb
mov
mov
movsl
out
adcb
out
outsb
stos
test
pusha
mov
or
add
test
jg
mov
mov
ret
or
jg
mov
add
dec
ja
lods
mov
push
test
cmpsb
xchg
scas
sbb
outsl
xchg
adc
fcmovnbe
mov
adc
clc
sbbl
sbb
daa
add
in
mov
fstpl
xlat
dec
in
mov
cs
mov
cmpsl
push
jl
xchg
jmp
cltd
pushf
push
inc
pop
sti
mov
and
xor
pushf
xchg
inc
movsl
setne
pop
xorl
pop
out
sbb
out
and
lods
xchg
outsb
in
mov
mov
or
mov
cmp
xchg
stc
addr16
movsl
or
or
fstpl
pop
xchg
xchg
mov
aaa
adc
negl
mov
pop
popa
add
dec
mov
cmp
jo
dec
ljmp
jp
out
pop
orb
gs
push
add
push
jl
cwtl
xchg
xchg
lret
jnp
data16
loop
mov
mov
xor
ret
cmp
xchg
pop
pop
icebp
sbb
nop
cmp
ss
insb
mov
mov
adc
adc
or
xchg
gs
mov
cmp
stc
into
jb
or
adc
mov
inc
mov
xor
dec
xchg
fdivrs
loop
ja
inc
out
subl
call
jp
inc
aad
mov
scas
iret
xor
add
push
sub
or
xor
cld
fstps
push
push
scas
or
mov
fnsave
mov
sbb
pop
mov
out
sbb
pop
ficoms
les
inc
cld
stos
jnp
lahf
xor
xchg
ret
adc
das
mov
out
cmpsb
sbb
loop
pop
mov
enter
or
pop
xchg
sub
cmp
data16
lret
lret
fs
aad
lcall
lret
sbb
inc
pop
loope
movsb
outsl
sbb
ds
lret
xor
jb
shlb
sub
jnp
push
jge
sub
das
out
out
and
pop
ds
xchg
push
cmp
lahf
push
xchg
scas
dec
sti
push
rcr
repz
inc
pop
xchg
shll
inc
aad
lcall
data16
cmp
add
test
loope
in
dec
js
add
add
fiadds
mov
push
sub
mov
pop
xchg
dec
outsl
mov
mov
dec
sbb
fwait
std
rcrb
loop
pop
cmp
inc
add
inc
push
lcall
out
loope,pn
arpl
out
and
imul
dec
cwtl
push
xchg
fiaddl
stos
sbb
mov
cmc
and
lods
scas
insl
cmpsl
and
or
fldenv
ds
lods
andl
jecxz
push
loop
stc
jg
cmp
add
bound
sub
adc
movsl
sbb
repnz
out
pop
rcl
rcrl
imul
cmp
int
xchg
cld
subl
jmp
fisubl
lock
scas
xchg
hlt
add
xchg
sbb
dec
into
mov
adc
mov
sub
lods
xchg
inc
out
pop
arpl
mov
enter
fisttpl
out
xchg
mov
push
pop
sub
cmp
dec
mov
ffree
adc
xor
jp
add
mov
inc
ja
lret
mov
xlat
lods
and
dec
cmp
out
push
lds
andb
xor
aaa
push
adc
adc
cmc
add
cmovnp
mov
adc
jge
inc
test
loopne
xchg
es
loope
cmpsb
and
sti
lea
mov
adc
mov
in
add
jmp
and
gs
das
shlb
sti
scas
lcall
inc
jnp
gs
lcall
in
fsubrp
xor
mov
xor
je
mov
addb
ljmp
adc
adc
rcrl
xlat
call
and
mov
aaa
sbbb
pusha
pop
hlt
xchg
jno
hlt
xchg
add
add
loope
or
ljmp
dec
in
xlat
rorb
clc
push
cli
dec
arpl
xchg
insl
movsb
jp
mov
xchg
add
mov
mov
popa
xor
add
bound
pop
sub
lret
pop
dec
les
xchg
test
mov
xchg
pop
call
mov
sub
push
pop
movsl
mov
push
jmp
lret
jle
sti
je
inc
jge
mov
add
mov
aam
xor
movsl
xchg
add
xchg
cwtl
ret
in
push
dec
jae
shll
mov
and
sbb
clc
outsb
jae
inc
adc
enter
ret
sub
xor
popa
lea
sahf
xorl
cmp
iret
stos
jge
stc
add
mov
sbb
je
cmpl
xchg
pop
pop
jno
fisubrl
je
push
movsl
loope
mov
sub
mov
push
cmp
rcl
pusha
cmpsl
adc
out
mov
mov
stc
jb
out
push
fmuls
daa
mov
fs
jae
fwait
fwait
jae
cmpb
inc
leave
cmp
fyl2xp1
scas
dec
mov
mov
lock
or
ret
sbb
scas
mov
std
loopne
or
std
call
imul
mov
outsl
or
cmp
negb
sbb
mov
cmpsb
cs
mov
into
jb
stos
lea
loopne
les
mov
das
mov
adc
cmp
mov
fimuls
pop
ret
aaa
add
dec
ja
pop
out
mov
xchg
cltd
jmp
bound
cmp
cwtl
cs
inc
mov
push
arpl
dec
cmp
and
dec
fnstcw
aas
gs
fldcw
push
inc
ja
mov
dec
cld
or
mov
and
clc
adc
flds
or
lea
and
addl
movsb
or
arpl
lcall
mov
std
and
rclb
test
push
push
xor
inc
xchg
pop
pusha
add
jbe
in
jno
aad
jbe
out
jmp
ss
addl
mov
mov
js
add
mov
mov
mov
lea
xor
xorb
scas
std
push
pushf
dec
inc
js
inc
inc
je
shr
mov
out
divb
idivl
stos
inc
dec
shll
testl
xor
testl
cli
dec
cmc
in
dec
hlt
leave
push
xchg
jl
out
or
push
pushf
xor
shr
test
xor
dec
out
pop
rcll
jmp
sub
hlt
je
inc
jp
ret
sahf
pop
mov
xor
fistpll
pusha
push
jb
xor
lret
jge
nop
sub
cmpsb
in
mov
jge
jno
pop
sarl
mov
inc
inc
pop
std
mov
xchg
sbb
or
movsl
jecxz
fsubl
add
dec
mov
loopne
add
mov
and
aaa
lahf
cmp
fwait
ss
sub
in
test
sti
jle
mov
repnz
dec
test
shll
andb
jbe
dec
mov
shrb
jae
mov
jno
add
or
xor
mov
in
cmp
adc
in
ljmp
or
aad
inc
sbbb
xorl
mov
nop
fcomps
sbb
mov
scas
adc
hlt
dec
loopne
lods
xchg
movsb
mov
lea
add
out
mov
call
mov
jb
stos
pop
jno,pt
popf
xor
popa
jmp
imul
fcmovbe
loope,pt
pop
xchg
add
cmpsb
xchg
out
ja
xlat
sub
outsl
rorb
in
mov
popf
push
pop
or
rorl
insb
xor
push
sbb
xor
or
dec
aam
dec
and
repz
shr
and
test
sub
sti
incb
ficompl
cmpb
pop
adc
mov
xor
test
add
sti
xchg
mull
jmp
dec
stos
push
dec
add
in
jae
pop
xchg
insl
sbb
aas
dec
xchg
pop
jo
xchg
pop
xchg
int3
lret
sbb
lods
or
fdivr
movsb
sahf
stos
jb
jecxz
xchg
adc
and
loope
jnp
loop
pop
push
xchg
add
in
lahf
fcmovnu
lret
int3
adc
inc
push
cmpl
pop
cmp
dec
mov
jns
nop
scas
loop
and
dec
mov
adc
pop
cmp
cmc
cltd
adc
aam
mov
xor
bswap
jns
fcmovne
lock
mov
add
adc
aad
sbb
roll
mov
jge
pop
das
xchg
sub
fstps
inc
movsb
inc
mov
fwait
in
addl
loop
inc
enter
rorb
adc
mov
inc
dec
and
hlt
dec
inc
icebp
repnz
movsl
arpl
sbbb
push
loopne
es
aaa
adc
hlt
subb
add
or
sti
gs
mov
add
aam
or
ret
sub
xchg
movsl
dec
mov
jg
and
cmpb
test
rorb
adc
out
or
outsl
dec
nop
and
mov
and
jae
mov
popf
sahf
or
cmp
dec
sbbl
xchg
lea
lret
popf
sub
and
push
jge
fdiv
inc
loop
jecxz
add
dec
movsl
das
push
mov
sub
sbb
xchg
repz
shl
ja
and
push
jl
mov
dec
jo
hlt
mov
sub
mov
xchg
add
sub
xor
pushf
imul
pop
pop
nop
ljmp
adc
lds
es
jno
inc
dec
mov
adc
loopne
xchg
cmc
js
out
mov
push
mov
jae
adc
and
mov
adc
jecxz
psraw
xchg
mov
or
jno
fsubr
cmp
mov
push
shl
lret
push
pop
test
xor
sbb
roll
push
mov
cmc
out
xchg
fidivl
pop
adc
and
xchg
sbb
push
dec
push
jns
or
sub
cltd
dec
cwtl
loopne
dec
les
out
ds
cmpsb
lahf
out
add
das
or
push
popa
ss
js
sti
cmp
inc
pop
xchg
add
in
sub
movsl
cwtl
icebp
das
cmp
testl
mov
or
xor
mov
mov
cmp
loop
jle
out
imul
mov
or
mov
jecxz
sub
aad
or
mov
mov
xchg
dec
adc
or
insl
xchg
cmp
pop
mov
cli
pop
call
push
cmp
xchg
shl
sbb
add
call
and
jl
repz
sub
mov
aam
push
xchg
lcall
mov
leave
xchg
jmp
or
or
out
or
dec
iret
call
sbb
mov
pop
out
cmp
push
inc
icebp
inc
cmc
xlat
jecxz
loope
or
mov
cmp
and
mov
icebp
pop
fldt
dec
xchg
lahf
push
add
out
mov
push
daa
and
cmp
jo
cmpsb
or
xor
adc
pop
iret
sub
inc
shlb
jp
sub
jle
jp
fistl
aad
insl
xlat
dec
cld
push
sub
xor
or
popf
sub
mov
inc
cmp
push
addr16
dec
stc
cmp
push
outsl
lret
jle
mov
add
dec
push
movsb
xor
dec
cmp
mov
pop
scas
push
inc
cmp
jnp
fistpll
cmc
out
adcb
rcrl
cmp
inc
lea
int
in
rol
push
cli
xchg
test
loopne
mov
xchg
fsubrs
cmp
ja
fsub
sub
sahf
cld
pop
mov
int3
out
adc
mov
test
jmp
popf
in
add
fcmovnbe
mov
or
push
jl
cmpsb
mov
push
mov
shrl
int3
jecxz
loope
mov
mov
pop
adc
out
adc
shlb
push
rolb
fimuls
and
pushf
outsl
outsl
jb
in
pop
jmp
rcrb
aam
adc
rcl
lods
les
cld
stos
xlat
mov
sbb
repz
xor
daa
les
sbb
rcr
adc
sbb
sbb
jo
scas
int
sub
movsl
adc
add
aas
shrb
adc
adc
inc
xor
adc
aas
adc
sti
cmp
xor
dec
mov
mov
inc
xor
data16
dec
mov
into
daa
sbb
data16
fisttpl
loop
sbb
sub
repz
pop
addb
cwtl
and
dec
pop
cltd
aam
sti
aam
lret
xchg
pop
hlt
mov
mov
push
push
cltd
adcl
sub
sarb
popf
cmc
mov
pop
xchg
es
in
or
dec
sub
fcompl
in
add
or
xchg
std
dec
mov
in
sbb
bound
adc
mov
mov
mov
fs
out
sub
sub
sbb
ret
inc
das
mov
xorb
mov
mov
inc
and
add
push
out
or
and
add
or
inc
aad
mov
adc
inc
mov
mov
repnz
or
inc
sysenter
and
push
ljmp
adc
mov
sbb
mov
push
cmp
outsl
adc
fs
sub
fstpt
adc
push
mov
sti
jl
sbb
push
cmpsb
pop
movsb
cmp
sti
xor
sarb
xor
push
sbb
mov
lods
out
and
mov
jb
push
inc
arpl
mov
je
xor
push
xor
test
ss
xchg
pop
lods
pop
insl
or
cmpsl
in
mov
mov
pop
inc
faddl
aam
das
mov
cmp
enter
jl
xor
or
out
ret
arpl
xchg
rorb
jae
xchg
ror
out
stos
cs
pop
outsb
jbe
or
sbb
mov
shll
mov
jnp
sub
pop
mov
mov
mov
mov
xchg
incb
jno
call
andb
mov
add
pop
negl
jns
call
push
movsl
sti
movl
data16
lret
mov
cs
leave
aam
nop
lret
mov
in
jns
test
scas
inc
in
fnsave
mov
xchg
enter
iret
mov
push
in
out
jne
dec
jmp
adc
das
dec
dec
and
inc
cwtl
pop
xor
sub
sti
lahf
jbe
mov
daa
mov
roll
push
push
xchg
mov
mov
dec
push
aam
and
cmpl
adc
push
js
inc
mov
cmp
lods
pop
movsb
out
push
outsb
popa
jbe
stos
js
and
aaa
or
ret
loop
xchg
jbe
cmp
lods
aaa
div
repz
sbbb
lods
jle
jnp
in
xchg
stos
imul
xchg
movsb
daa
into
aad
inc
pop
mov
incb
pop
dec
scas
scas
adc
cmp
nop
sub
jg
aam
mov
inc
sub
test
xor
clc
inc
popf
test
jnp
mov
xor
cmp
les
js
push
xchg
outsb
ret
or
xchg
fimull
sbb
enter
call
cli
and
fsubrs
das
cmpsb
mov
inc
cmc
and
and
rolb
adc
xor
push
xlat
pop
mov
mov
lds
je
mov
pop
pop
xchg
adc
scas
dec
roll
sub
popa
lcall
jmp
jae
and
out
leave
mov
cmpsl
xor
aad
loopne
xchg
rclb
test
mov
sarb
ja
pop
insl
lret
ret
roll
fprem1
scas
ret
scas
pushf
ret
cmp
test
fidivl
pop
jp
jg
pop
fisubs
adc
repnz
mov
outsl
ret
mov
sub
cs
jle
inc
xlat
cmp
movsl
push
dec
pushl
fcompl
inc
mov
sub
stc
loope
addr16
js
mov
cmc
pop
and
push
mov
pushf
stos
xchg
scas
mov
inc
shll
push
aaa
test
fidivrs
jno
jle
lds
aad
push
je
xchg
bound
push
pop
cmp
pop
jecxz
dec
push
cmp
outsl
lock
mov
bound
cmp
mov
dec
adc
lods
scas
and
fsts
addr16
roll
pop
ds
int3
jb
out
fstl
mov
movsl
dec
pop
test
cmp
test
ljmp
lods
lret
pop
sub
out
gs
mov
mov
fsubl
movsl
xchg
cwtl
xchg
dec
jnp
rcl
push
das
lret
mov
pop
pop
sahf
in
xor
push
lea
jns
xchg
sbb
adc
pop
or
fldl
mov
repnz
test
pop
mov
movsb
push
ljmp
lods
jnp
pop
cltd
jg
and
xchg
dec
and
pop
sub
xchg
jbe
jae
andb
dec
cwtl
fstpl
ret
leave
mull
lret
pop
ja
mov
add
jp
and
mov
dec
adc
aad
jge
int
mov
mov
adc
or
or
xchg
xchg
cli
ss
out
jecxz
and
xor
outsl
je
clc
pop
xchg
inc
ret
hlt
icebp
dec
fucomp
jecxz
ret
dec
mov
xor
sub
out
test
scas
push
cmp
and
cmpsl
pushf
pop
pop
mov
mov
lds
adc
mov
stc
sbb
and
aad
arpl
lret
ret
or
int3
jo
cmp
fsubs
lock
cld
push
into
mov
xor
test
adc
adc
jle
pop
mov
dec
adc
sti
mov
stos
mov
push
inc
mov
ret
and
sbbb
mov
lds
cmpsl
stc
jb
ret
dec
movsl
sbb
add
aas
rcrb
push
pop
ret
jg
mov
clc
pop
pop
cld
cld
xor
test
adc
int3
dec
mov
adcb
pusha
mov
hlt
andb
or
push
cltd
mov
divl
sub
loope
adc
mov
fidivl
cmp
sub
and
mov
pop
nop
fdivs
loopne
mov
inc
pusha
cmp
aad
mov
lret
inc
pop
test
das
jg
mov
and
adc
cmp
and
mov
daa
stc
cmp
cmp
xchg
jl
mov
pop
in
cmp
xor
mov
and
stc
mov
mov
jo
sub
fwait
mov
aam
sub
xor
fildll
adc
xchg
pop
data16
loope
rorb
and
aaa
fcomip
das
mov
push
test
jbe
test
pushf
out
mov
dec
call
jbe
push
fwait
loop
fdivrl
xchg
movsl
stc
loopne
aaa
push
fstl
das
orl
push
push
pusha
cli
fdivl
and
dec
cltd
push
cli
and
pusha
adc
mov
or
cmp
jl
push
push
mov
popa
jge
cmpl
dec
popa
inc
add
or
jae
or
lret
cmpsl
push
dec
cmp
lret
dec
mov
inc
leave
sub
mov
fucom
aam
sar
test
mov
cmp
addr16
out
cmpsb
shll
or
aad
push
xlat
dec
mov
xchg
mov
stos
mul
cmp
push
es
sbb
push
das
subl
test
jo
enter
lock
push
adc
dec
jecxz
push
dec
std
sti
add
mov
nop
jle
push
mov
aas
addb
mov
nop
jl
lock
sub
leave
fsub
dec
into
loop
clc
push
in
cmp
push
mov
adc
lea
hlt
xorb
inc
orl
pop
dec
shr
inc
or
and
and
imul
insl
hlt
pop
dec
mov
mov
lock
xchg
std
fisubs
mov
test
push
fisttps
les
addr16
mov
lods
mov
pop
xor
push
mov
mov
fincstp
xor
or
adc
fiaddl
sub
movsl
ss
je
and
xchg
jb
pop
pop
outsb
movsb
fwait
adc
ljmp
stos
sub
mov
add
lret
mov
rorb
sahf
fisttpl
das
add
dec
add
cmpsb
jb
nop
xchg
add
sar
aaa
andb
cmpsl
adc
iret
divl
clc
sub
jne
mov
cmp
inc
inc
inc
pop
inc
or
adc
mov
adc
sbb
test
inc
sbb
add
lods
sbb
jmp
cmp
stos
imul
loop
ss
jns
jl
gs
jl
jp
adc
xor
push
sub
xor
aaa
aas
xchg
mov
or
mov
mov
push
inc
out
cli
push
or
pop
adc
adc
decl
xchg
jmp
cmp
push
pop
pop
xchg
test
movsl
in
cmp
lods
fwait
mov
pop
xor
mov
push
push
push
frstor
ficoml
pop
into
dec
mov
xchg
cmp
sbb
lret
xchg
ja
pop
cmp
jb
cmp
popa
movsl
rcrl
mov
loop
add
or
std
fimull
mov
call
sbb
movsl
mov
jae
popa
movsb
mov
mov
nop
adc
outsb
xor
in
imul
and
cmp
push
xor
xchg
outsb
aaa
add
out
mov
fs
ds
gs
cwtl
dec
xchg
mov
add
mov
inc
sub
lret
jo
or
stc
in
repz
cmp
jg
mov
loopne
xchg
iret
jge
mov
pop
call
mov
pop
aas
pop
inc
mov
in
insl
jg
xchg
mov
test
in
imul
xchg
aas
cmp
xchg
xchg
lock
outsl
mov
dec
mov
mov
ret
pop
rcrb
mov
outsl
jbe
pushf
call
xor
clc
mov
int
popw
fnstenv
jnp
sub
sbb
mov
loopne
fldl
xor
arpl
test
inc
jg
decb
into
mov
inc
icebp
xchg
pop
cmp
or
mov
cmpsb
subb
push
in
inc
ljmp
mov
adc
mov
fistps
jecxz
in
mov
leave
push
pop
test
aad
jo
sbb
add
add
jne
scas
dec
idivb
lret
inc
dec
stc
cmpsl
scas
sbb
cmpsb
in
in
sub
shll
mov
mov
lahf
je
icebp
gs
int
push
mov
jno
sub
push
dec
xchg
lret
call
jnp
lret
ja
mov
pop
negl
push
sbb
push
mov
push
kmovb
dec
dec
jnp
into
add
ds
push
inc
push
cli
std
adc
sbb
cmc
mov
shll
cmp
mov
mov
popf
out
lret
lret
lea
cmp
and
bndstx
and
push
inc
mov
out
pop
pop
leave
rcrl
cld
mov
popa
popf
ret
sbb
fucom
call
js
add
or
sub
repnz
mov
cs
xor
mov
jbe
adc
mov
mov
test
pop
jmp
fcoms
cltd
pop
inc
add
push
mov
sbb
inc
add
push
sbb
out
jle
or
fs
icebp
xchg
std
les
sub
sbb
std
pop
or
and
gs
add
lea
mov
or
dec
ret
and
cmp
jnp
fists
stos
popf
mov
fldenv
repz
pop
jno
in
jns
xchg
pop
pop
mov
icebp
mov
ljmp
into
ss
mov
sub
addr16
and
cmpsl
popf
pop
aad
push
cmp
xlat
ficomps
mov
sbb
add
jl
sti
push
test
adc
out
fdivrs
mov
pop
test
cmp
cmp
cld
loop
fimull
cmp
add
call
pop
xor
call
jmp
jle
xlat
add
aaa
xor
clc
mov
pop
push
pushf
fisttpl
imul
das
jns
add
mov
push
sbb
sub
or
jle
sti
in
ljmp
xor
push
sbb
jnp
add
sahf
ficoms
mov
mov
xorb
fldt
mov
ljmp
push
insb
cwtl
adc
inc
jp
int
or
aaa
subl
dec
jbe
pop
pop
dec
inc
fistl
xchg
cltd
xor
ds
jnp
mov
pop
icebp
sub
dec
pop
jle
mov
cmp
inc
shrb
cmpsb
mov
adc
xor
xor
and
cmc
pop
cmp
mov
push
push
sub
nop
icebp
pop
mov
cli
dec
imul
pushf
movb
insl
outsl
xor
adc
outsl
sub
test
sbb
xchg
and
ljmp
dec
lea
pusha
cmp
cs
mov
xor
shl
cmc
mov
mov
push
enter
cmp
cmp
mov
test
sbb
movsl
rolb
add
push
test
jae
lods
shlb
hlt
push
and
push
insb
mov
shl
daa
adc
faddl
lods
jp
nop
sahf
cmp
out
out
xchg
pushf
testb
sub
mov
sahf
sti
das
and
dec
sub
cmpsb
push
rcrb
dec
jns
adc
cld
lret
movb
xchg
leave
sahf
adc
dec
out
leave
and
outsb
inc
lcall
int
loopne
fmuls
xchg
push
inc
es
mov
or
adc
inc
and
xor
cld
push
mov
loop
dec
int
leave
xchg
sarb
das
cwtl
jg
cmp
mov
lret
lahf
jmp
push
addr16
hlt
clc
ret
shl
in
sbb
decl
shlb
mov
or
adc
xor
adc
push
mov
dec
inc
mov
imul
cmp
lahf
xchg
inc
scas
cmp
es
fmull
lea
test
fs
cmp
cld
ja
scas
sbb
inc
fistl
sti
push
call
xchg
sub
stos
in
mov
das
addb
fwait
pop
lock
bound
enter
mov
sub
dec
arpl
lods
pop
in
stc
add
hlt
ds
mov
add
xor
shll
jmp
iret
add
int
inc
jo
popa
popf
push
sub
data16
arpl
imul
pushl
dec
mov
xchg
movsb
sbb
inc
jg
leave
mov
push
xor
loop
lea
scas
or
rclb
and
xchg
out
or
dec
mov
mov
xchg
int3
dec
sbb
in
in
pushf
inc
pop
and
gs
push
add
dec
mov
inc
cmp
repnz
sbb
pop
outsb
popa
mov
hlt
sub
out
int3
test
push
dec
pop
test
scas
pop
movsb
fs
cmp
divl
xor
and
sbb
ja
add
or
loope
jp
inc
pop
sahf
leave
mov
movsl
pop
inc
scas
lretw
mov
inc
pop
sbb
addb
ficomps
sarb
lea
or
test
decl
add
ss
in
push
inc
ja
mov
push
scas
cmp
mov
push
xor
aaa
jmp
dec
divb
jae
rcll
test
push
xor
pop
imul
xchg
rol
out
xor
fcomps
daa
or
pop
jmp
sub
pop
fs
sbb
loop
in
and
stos
adc
clc
cmc
int3
insb
xor
addr16
inc
outsl
sbb
adc
pop
push
fbld
outsl
cli
mov
leave
imul
jbe
cmp
sbb
imul
bound
shrb
inc
test
adc
je
or
mov
jp
sub
fdivs
gs
fnstsw
mov
or
jno
xchg
lods
das
shl
std
repnz
xchg
dec
and
xor
push
xlat
cmp
push
fnsave
cmp
jb
push
scas
push
pop
dec
mul
and
scas
cmpsb
mov
aam
mov
scas
fnsave
cltd
mov
loop
cmpb
xor
push
out
jae
ret
add
adc
test
insl
mov
hlt
adc
fists
or
mov
mov
jp
xchg
dec
push
or
jns
and
cwtl
xor
jns
test
dec
pop
out
in
sub
dec
cld
pop
xor
cli
dec
pop
jno
push
dec
mov
and
iret
xor
push
fstpt
add
je
mov
push
xor
mov
popa
ds
addr16
dec
push
push
mov
push
arpl
inc
icebp
cwtl
into
int3
sbb
cmp
sub
lods
xor
les
sbbb
jne
popf
ja
test
xchg
mov
ja
cmp
imul
or
outsl
xchg
mov
add
jecxz
mov
outsl
ljmp
xchg
push
sbb
xchg
stos
les
or
push
xlat
cld
sub
add
dec
sbb
inc
jle
xchg
clc
inc
push
addb
adc
scas
push
fwait
mov
popf
mov
or
rcrb
ljmp
sbb
push
fs
add
cmc
int3
movl
xor
popa
adc
lcall
jmp
gs
push
jns
lahf
and
pop
je
stos
mov
adc
fmuls
add
hlt
or
stos
inc
fmulp
in
sub
stc
mov
lods
std
xchg
jecxz
jg
mov
mov
jne
xchg
mov
mov
fnstcw
jg
scas
aad
pop
js
and
enter
dec
xor
xor
dec
mov
push
and
mov
imul
pop
dec
int
add
mov
js
add
pop
adc
dec
inc
test
ds
jne
idivb
and
ss
mov
mov
aas
xchg
inc
popa
stos
jg
mov
pop
or
repnz
push
leave
mov
dec
dec
outsb
xchg
push
push
push
fisubs
mov
mov
adc
fidivrl
fistps
out
movsb
in
mov
mov
scas
aam
ljmp
sahf
xor
pop
mov
call
cwtl
and
cld
loope
stos
add
leave
cmp
cmpsl
aad
jl
sub
add
mov
movsb
loop
jno
sbb
xorb
andl
cmp
push
fstl
push
or
invd
jo
add
sbbl
enter
mov
add
pop
arpl
xchg
adc
fwait
jo
add
gs
loop
outsl
jg
shl
in
push
aam
pusha
imul
add
aas
test
nop
pop
cmc
inc
cli
mov
and
jge
sub
test
loop
push
test
icebp
sub
adc
sbb
push
clc
and
add
mov
rolb
pop
push
outsb
out
sub
adcb
xor
jmp
mov
cmpl
jge
stos
xor
mov
daa
pop
cmp
test
pop
or
negl
jo
pop
repz
mov
sub
fadd
mov
push
pop
cmp
pop
movsb
dec
in
bound
clc
pop
out
push
mov
adc
lods
test
xchg
repnz
push
sub
xchg
adc
cmc
push
jmp
inc
pop
nop
add
and
lods
lret
adc
dec
imul
mov
dec
xor
dec
mov
inc
and
jl
fidivl
mov
or
dec
lds
inc
xorl
popf
and
popf
je
push
xchg
fsubs
dec
cmp
mov
jb
in
nop
push
and
dec
adc
cmp
fsubl
mov
es
mov
push
sub
decl
enter
dec
rcrb
dec
adc
fwait
adc
mov
in
dec
sbb
stos
test
popa
cli
cmc
adc
scas
jnp
xlat
jb
cltd
scas
pcmpeqd
clc
xor
sbb
test
ss
xchg
jp
or
arpl
jg
pop
mov
popf
js
xor
jecxz
ret
jle
or
loopne
mov
addr16
pop
gs
lds
in
jp
repz
sti
scas
add
and
push
mov
fnstsw
sub
lret
or
scas
xor
fisttpll
sti
pop
xchg
jl
ljmp
movsl
pop
movsl
sbb
or
sbb
ret
adc
add
dec
jb
adcl
sahf
movb
add
mov
std
cmc
roll
mov
mov
lea
mov
es
imull
adc
add
cmc
mov
outsb
dec
jp
ds
js
jb
mov
mov
dec
xor
or
mov
jg
xchg
cmc
jno
push
stos
test
mov
les
cwtl
std
sub
jl
pop
add
mov
xlat
dec
jns
into
push
cmp
sub
sbb
aad
repnz
rorl
push
inc
hlt
out
outsb
add
cwtl
add
jbe
outsl
sbb
sbb
fsubl
mov
std
lahf
jb
rcr
mov
sbb
xchg
loope
and
loopne
daa
aaa
in
pop
push
fcomps
mov
cmpsb
cld
icebp
nop
mov
test
mov
stos
inc
imul
sub
adc
cld
cwtl
mov
cwtl
pop
fidivl
and
cmp
call
lock
cmpsb
mov
fidivl
int
xchg
xchg
jb
push
xor
enter
adc
or
stos
jle
fidivl
cwtl
sbb
adc
cmp
mov
test
pop
fs
fs
jp
sbb
sahf
dec
fcomip
inc
lahf
imul
js
ret
sbb
jns
xor
pop
js
inc
into
mul
movsb
rcl
jo
pop
mov
fsubl
in
stc
pop
sbb
dec
mov
mov
sahf
dec
maxps
add
sbb
pop
push
dec
mov
lock
dec
add
add
iret
pop
push
xchg
std
pop
or
test
lret
dec
cmp
test
or
xor
xchg
and
mov
sbb
out
sbb
insl
lods
dec
or
sbb
popa
ljmp
popl
mov
sub
aaa
push
add
std
inc
js
pop
dec
repnz
and
lret
call
mov
inc
daa
or
dec
aad
ja
mov
icebp
cmp
pop
inc
add
inc
imul
pop
and
imul
jg
sbb
call
bnd
or
imul
movsb
add
in
pop
fld
mov
pop
push
incl
repnz
les
xor
xor
cmpsl
lea
cli
sbb
adc
mov
fimull
aaa
test
js
in
out
xor
mov
inc
and
loop
repnz
addr16
lret
fs
pop
jge
je
aam
add
mov
repz
jne
lret
loope
cwtl
rcrl
inc
or
ljmp
ret
std
mov
fnop
or
add
loopne
mov
loope
jne
jnp
inc
sub
cmc
sbb
stc
xor
cmpsl
outsl
out
lea
push
mov
add
xchg
or
scas
mov
das
dec
rcll
pop
pop
pop
lcall
dec
rorl
ret
fmuls
xchg
fwait
mov
loope
loopne
sbb
push
idivl
ljmp
je
inc
push
adc
xchg
adc
fmuls
and
xor
sub
xchg
loop
dec
add
jecxz
xor
dec
jecxz
daa
cli
rolb
or
adc
arpl
jno,pt
call
mov
sub
mov
cmpl
sbb
incb
sub
push
scas
sub
in
dec
adc
andl
das
cmc
outsb
or
xlat
sbb
mov
mov
push
cmova
dec
leave
sarb
leave
mov
ljmp
testl
mov
aaa
sub
add
fwait
or
inc
add
xchg
sbb
out
das
iret
loopne
enter
jle
lret
cmc
dec
in
pop
adc
push
ss
sarb
out
lock
lds
mov
scas
and
sub
push
mov
xlat
std
pop
paddusw
mov
fidivrs
pop
insl
sub
pop
das
push
fsts
clc
sbb
shll
sbb
aaa
fdivs
les
pop
and
xchg
mov
sub
scas
or
mov
inc
add
arpl
mov
push
mov
enter
or
psrld
add
cmp
pop
inc
xchg
test
loope
jno
mov
or
cs
dec
aam
sbb
popf
repnz
push
stos
nop
and
lds
add
sub
flds
cmp
mov
fnstenv
divl
add
xchg
cmpsb
jae
stc
jmp
add
enter
mov
push
js
mov
push
lret
inc
js
and
cmpsl
cld
xchg
push
scas
repnz
decl
xor
sbb
cmp
jns
in
clc
in
fsub
testb
push
jno
mov
sbb
addr16
cld
cmp
or
jbe
idivl
shlb
imul
daa
cld
mov
mov
inc
sbb
xchg
adc
ret
pop
rcrb
push
js
pusha
dec
xchg
adc
ret
dec
roll
cmp
lods
xor
and
lahf
and
adc
outsb
repz
ret
out
fnstenv
adc
mov
mov
lahf
jno
fistpll
rclb
add
fsubs
outsb
push
shrb
cmpsl
fisubrs
cmc
xor
xor
in
sbb
mov
in
gs
inc
sarl
sahf
jl
lahf
rclb
stos
pop
or
and
in
test
fisubrs
jae
ficoml
mov
in
mov
jbe
or
and
push
pop
mov
stos
mov
insl
icebp
cmp
loopne
sbb
xor
cmp
mov
mov
sub
shll
pushl
mov
bound
adc
int3
push
mov
inc
mov
mov
and
fwait
cld
jne
add
daa
gs
pop
ljmp
mov
in
nop
dec
xchg
jge
cli
shll
cmpl
in
mov
sbb
popa
sbb
pop
data16
fidivs
push
push
lock
pop
jg
test
ja
mov
add
test
xor
ss
mov
mov
jne
outsb
add
jecxz
test
cmp
pushf
jns
lock
out
mov
xchg
push
xor
std
xchg
pop
mov
jb
add
xchg
fisubs
inc
loop
pusha
push
cmpsl
mov
bound
cmp
mov
or
jbe
cs
jg
xor
dec
add
jecxz
pop
pop
inc
xorb
push
push
pusha
sub
mov
jecxz
pushf
mov
aam
gs
cltd
dec
pop
adc
mov
orb
test
aam
jge
sub
pop
dec
cmpb
dec
cmpsl
roll
xchg
aad
out
sbb
sbb
enter
repz
int3
fdivl
out
dec
and
pop
fsubr
mov
jbe
pop
ret
shlb
fldcw
xor
adc
addb
dec
outsl
cmpl
cltd
jno
out
mov
lock
rorb
test
xchg
inc
test
aaa
push
loopne
push
shrl
add
arpl
pop
mov
imul
icebp
addr16
mov
rclb
push
adc
and
es
xchg
add
cwtl
adc
inc
jo
push
out
ret
out
stc
bound
pop
xor
add
mov
jmp
fdivr
in
cwtl
adc
mov
sub
or
pop
jg
stos
mov
dec
adc
cli
lcall
sbb
adc
lods
ficomps
lahf
lret
or
arpl
rorb
test
cmpsl
inc
sub
jb
bound
outsb
es
mov
fdivr
or
fisttps
cmpl
push
xor
lahf
xor
daa
sbb
mov
cmpsb
pop
push
sbb
das
mov
icebp
sbb
mov
aam
aas
cmp
jb
cmpsl
pop
jb
popf
stos
ds
stc
and
jmp
imul
imul
lret
pop
pop
repz
and
ja
mov
mov
je
ljmp
stos
into
add
mov
adc
aaa
sbb
cmpsl
loop
repz
or
mov
dec
cmpb
subl
xor
clc
test
pop
push
das
lock
mov
jle
jo
icebp
je
sbb
out
test
add
aam
test
lea
scas
out
repz
aas
dec
rclb
push
cmp
gs
je
aas
imul
imul
jmp
pusha
xor
shll
shrb
xchg
pop
add
mov
xchg
andl
sbb
xchg
or
mov
pop
pusha
shrb
test
inc
xchg
and
aas
inc
mov
adc
mov
xor
cltd
pushf
jb
insb
inc
pop
add
mov
inc
pushf
stc
adc
mov
inc
into
or
sub
or
outsl
hlt
sub
adc
jmp
jge
mov
mov
jp
push
cmpsb
mov
or
inc
mov
jmp
jns
in
xchg
bnd
adcl
fcomi
pop
xchg
in
xchg
bound
jne
sub
repnz
sbb
outsl
mov
mov
pop
push
add
jle
sbb
mov
cmp
jmp
pop
inc
sbb
lods
sbb
dec
ret
mov
sbb
repz
xchg
and
sbb
aas
push
push
rcl
leave
sub
jg
jl
cmc
daa
shl
scas
sbb
pop
mov
rcrl
mov
fsubrs
sub
jle
test
rcpps
push
xchg
inc
add
pop
cmp
dec
and
jge
rorb
daa
mov
stc
nop
pop
aaa
xchg
cltd
or
ret
clc
sub
aam
inc
lret
push
adc
mov
jge
mov
imul
repz
imul
pop
xor
out
pop
cwtl
dec
lock
push
xchg
negb
push
fcmove
movsl
push
and
and
iret
push
sub
add
pop
mov
ja
test
sub
xchg
mov
adc
les
and
pop
mov
repz
cmc
out
fcmovbe
ja
adc
fsub
into
push
sub
lcall
add
data16
push
dec
les
mov
mov
xchg
pop
adc
repz
int3
paddusw
xor
in
in
test
lret
or
int
xadd
in
int
sahf
mov
dec
call
xor
ret
inc
mov
popf
xor
pop
mov
dec
cltd
inc
inc
xor
jle
add
jmp
xor
cmp
enter
aad
sti
leave
pop
dec
jge
in
mov
ss
popf
jae
and
and
dec
in
test
add
nop
je
sbb
inc
push
inc
cmp
xchg
sti
fldt
dec
and
pop
addr16
call
bound
rcrb
gs
sahf
sbb
mov
mov
jmp
aas
lcall
popa
adc
inc
cmc
lock
xchg
jle
fnsave
add
inc
mov
sub
mov
or
or
imul
pop
sti
jae
stc
or
pushf
pop
or
inc
jb
pop
test
adc
sbb
pusha
mov
enter
sbb
insb
adc
test
jae
xchg
push
pop
xor
mov
jecxz
mov
jo
daa
sahf
stos
xor
sti
not
aaa
dec
movsb
ret
and
cmpb
sbb
mov
hlt
mov
adc
or
call
adc
nop
or
pop
sbb
ss
int
cmc
mov
pop
push
imul
and
out
cmp
push
cmc
das
mov
out
insb
sbb
divl
xor
push
mov
stc
sbb
hlt
loopne
mov
aaa
adc
cmpsb
adc
adc
cli
add
fistpll
call
or
sbb
psubw
mov
stos
mov
dec
iret
or
stos
xchg
pop
notl
mov
pushf
hlt
cmpsl
rcl
out
push
stc
stos
dec
loopne
stos
cmp
orb
cwtl
aas
sbb
out
xor
cmp
or
sahf
and
stos
dec
xchg
loopne
jp
test
icebp
fidivrl
outsb
or
aad
aad
xor
ret
lret
cmp
jo
fwait
cs
sbb
inc
cld
adc
fldcw
fimuls
adc
xor
xchg
add
mov
xchg
mov
and
inc
cmp
mov
cmp
les
les
test
fs
cmpsl
leave
jge
mov
pop
cwtl
cs
icebp
jne
cmp
inc
inc
mov
mov
sub
xchg
inc
inc
adc
std
repnz
and
leave
jne
pop
jbe
mov
rcrb
mov
dec
or
jo
cmp
jmp
jbe
testl
push
sub
add
dec
xchg
pushf
dec
ljmp
mov
sbb
adc
aam
gs
and
push
adc
mov
fmul
jl
mov
ret
dec
pop
push
and
rol
iret
xchg
or
daa
out
sbb
enterw
mov
cmp
fisttpl
movsl
int
mov
and
daa
push
in
sub
xchg
cmp
es
pop
dec
jge
out
into
cmp
js
mov
mov
fbld
mov
xchg
test
or
xor
mov
mov
loopne
jb
adc
adcl
lods
in
mov
push
aaa
test
daa
notl
in
add
hlt
rcl
lods
stos
jle
cs
ret
and
add
mov
dec
jp
mov
je
cltd
daa
or
jecxz
fidivs
sub
ja
mov
xor
mov
pop
das
shll
into
mov
jmp
sub
hlt
sbb
mov
notl
add
cmc
jle
xchg
pop
add
push
cmpsl
addr16
test
ret
adc
es
inc
sti
bnd
std
sti
call
cmp
dec
rclb
fimuls
mov
mov
sbbl
test
insb
inc
movsl
or
jns
jmp
mov
lea
xchg
test
mov
sbb
push
dec
jecxz
pop
int
das
jecxz
push
cmpl
jg
mov
or
sub
enter
pop
xchg
jbe
dec
push
pop
idivl
push
lods
cli
addl
sbbl
repz
push
daa
loopne
xor
pop
jl
pop
inc
stos
inc
out
in
sub
mov
xor
add
test
rcrb
add
push
push
imul
popf
dec
adc
xchg
pusha
mov
js
and
fistpll
icebp
fwait
mov
movsl
sahf
sub
pop
imul
inc
push
mov
cmp
mov
add
das
xlat
push
adc
lcall
dec
adc
and
push
xchg
es
and
adc
pop
fmull
add
mov
sub
popa
mov
jecxz
push
mov
dec
sbb
loope
xor
jb
mov
mov
fsubrs
sarl
lods
sbb
es
mov
or
arpl
and
dec
xor
pop
nop
loopew
rol
in
lea
in
in
fstpl
xchg
push
push
movsl
loopne
fs
jo
sub
aad
iret
pop
push
mov
adc
cmp
out
mov
cmp
mov
mov
xchg
mov
jnp
fstps
cmp
sub
push
cld
jge
icebp
rolb
or
iret
xchg
xor
test
in
inc
int3
jo
ret
stos
or
repnz
fidivrl
pusha
ljmp
pop
andb
popa
jl
adc
icebp
xchg
rcl
scas
jae
fsts
cld
push
testl
jge
push
xchg
clc
and
jo
test
in
mov
xlat
movsl
imul
sbb
outsb
dec
insl
push
repnz
mov
iret
inc
loop
pop
sub
loopne
insb
push
daa
cwtl
out
push
mov
test
popa
sbb
inc
fidivl
dec
xorb
or
cmpsl
idiv
sbb
pop
jmp
in
cmpsl
rclb
cmp
rorl
rcll
movsl
adc
dec
push
aaa
into
adcb
je
push
nop
in
push
js
dec
push
inc
xchg
xchg
imul
jle
or
jae
out
pushf
stos
lds
pop
mov
repz
repnz
jmp
jnp
mov
data16
sbb
das
xlat
pushf
inc
adc
jno
lret
cmp
push
cmp
add
adc
dec
int
dec
movsb
add
gs
rorb
mov
int
xchg
lahf
push
dec
fiaddl
fs
cs
out
or
adc
xchg
call
lock
xchg
xchg
into
insb
aad
xchg
xor
sub
or
inc
add
iret
test
fwait
mov
inc
jo
test
rcll
add
mov
into
xchg
jecxz
setbe
jmp
call
add
xor
stos
stc
pop
cmp
inc
push
pusha
xchg
mov
inc
pushf
xchg
xor
out
push
pusha
pop
arpl
subl
mov
loop
mov
pop
jae
or
sahf
into
add
adc
and
fldl2t
ret
inc
xor
inc
in
pop
jae
inc
adc
aad
add
stos
adc
lods
nop
mov
stos
insb
sbb
push
sub
orb
xchg
ret
popa
rcrb
sahf
outsb
test
inc
aas
xchg
mov
ret
jae
bound
ja
sahf
cmp
dec
movsb
fiaddl
jg
xchg
clc
adc
arpl
inc
test
scas
repnz
into
push
jbe
popa
push
in
adc
aas
sub
mov
pop
inc
jnp
adc
stc
pusha
outsb
xlat
arpl
adc
lock
clc
in
jne
ret
fisttpll
es
mov
add
mov
mov
inc
jl
dec
xchg
movsl
fstps
dec
mov
aam
and
xor
insb
into
nopl
loop
insb
call
jns
aaa
add
aas
lret
shlb
or
push
push
lea
in
push
rcrb
and
fsubrs
jns
dec
test
loop
push
test
xchg
mov
popf
add
xor
orl
push
imull
xchg
jg
xchg
mov
jns
xorb
scas
incl
pop
adc
js
or
mov
mov
push
loop
jb
rolb
inc
test
jne
jns
sbb
sub
jle
push
lcall
sahf
lock
add
sub
mov
sahf
js
xchg
incb
call
or
xor
repz
mov
int
pop
fimull
jmp
sub
loopne
das
cmp
mov
lcall
iret
out
insl
mov
or
in
inc
loop
daa
aas
ljmp
xchg
or
std
in
hlt
mov
push
adc
aas
ja
xchg
sbb
push
mov
cmp
push
test
movsl
ds
fwait
or
push
lret
xor
enter
test
shll
cmp
scas
push
out
mov
xchg
jge
or
jmp
lcall
and
xchg
or
cwtl
cmc
or
pop
mov
pop
int3
or
push
xor
lock
pop
jb
mov
insb
mov
mov
dec
sbb
mov
sbb
cwtl
stc
popf
mov
pop
pusha
repnz
xor
clc
mov
fimull
mov
loope
push
add
push
pushf
sub
push
jbe
pop
into
pop
enter
rcll
inc
and
mov
mov
faddp
cltd
jg
pop
jp
xchg
cmp
insb
sub
dec
jp
bnd
pop
jecxz
mov
lret
popf
inc
adcb
mov
jnp
xor
lcall
lock
outsb
sti
xor
sahf
mov
push
or
jg
mov
das
shll
jg
clc
push
loope
mov
mov
popf
and
inc
mov
jg
scas
mov
and
testb
test
jno
sbb
or
xlat
lods
or
add
cld
clc
add
pop
cli
or
lcall
les
stos
pop
mov
xchg
mov
iret
mov
fdivl
ss
aam
insl
aam
dec
sbb
cmp
xor
ja
or
pop
outsb
out
xchg
push
cmp
popa
repnz
jae
xchg
xchg
leave
jo
push
dec
imul
xchg
push
pop
or
scas
mov
jl
push
push
sti
and
jae
stos
jo
push
pop
jns
xor
fs
xchg
out
xchg
xchg
ret
push
mov
fs
cmp
test
rcl
xlat
scas
add
clc
dec
daa
gs
or
dec
sub
add
arpl
pop
xchg
lret
pop
dec
pusha
cmc
sbb
jg
or
jg
daa
push
pop
or
adc
popf
or
cld
jp
xor
cld
outsb
hlt
add
xor
je
enter
mov
sub
cli
out
aaa
inc
stc
and
cmpsb
js
jecxz
mov
sti
fsubrp
and
pop
ja
push
out
pop
push
jge
icebp
inc
mov
loopne
jb
sub
test
jmp
mov
bound
or
adc
dec
loopne
push
fsts
stos
sub
aaa
push
sbbb
push
addr16
addr16
in
aad
lret
pop
and
fsubp
mov
inc
xor
inc
or
mov
lret
inc
ret
les
jns
sub
xor
and
roll
pop
and
xchg
xor
cmp
push
mov
push
mov
loope
and
add
or
sbb
cwtl
adc
pop
add
jnp
imulb
aas
and
sahf
push
cmp
sbb
icebp
push
cmp
aas
xlat
jnp
pop
add
aas
flds
scas
arpl
inc
test
jp
jae
stos
or
aad
add
in
mov
mov
mov
mov
test
test
cmp
cmpsb
and
loopne
mov
popa
popf
cmpsl
mov
push
dec
cmpsb
inc
adcb
fldenv
xchg
test
mov
testb
add
addl
xchg
add
out
push
mov
cmp
shlb
sbb
and
jb
out
in
and
jp
gs
mov
pop
sub
fisttpll
ds
fwait
roll
test
jl
dec
ror
movsb
ja
add
xchg
xor
lods
sbb
mov
add
push
iret
cwtl
inc
cltd
mov
fdivr
lret
in
mov
sar
add
sbb
fstp
cmp
mov
or
and
adc
out
mov
filds
les
scas
xlat
xchg
in
pop
notb
adc
pop
andb
hlt
fists
les
sub
push
lcall
pop
or
outsl
jp
sbb
mov
xor
shrb
adc
inc
xorb
or
xor
js
mov
popf
mov
icebp
in
pop
bound
dec
lock
fcoms
mov
stos
cmpsb
inc
jle
sub
mov
enter
je
push
mov
jp
xor
std
add
iret
scas
and
jmp
fisttpll
test
pop
push
mov
sbb
mov
add
mov
decb
jnp
lret
in
adc
add
outsl
or
mov
inc
inc
fsts
inc
in
rolb
test
cmpsb
ja
pop
jae
adc
test
and
push
repz
cmp
aas
ja
mov
aam
mov
mov
popa
add
jge
mov
xchg
sarl
jbe
sub
cmpsl
add
lret
mov
popa
push
stc
daa
mov
lods
or
lret
push
daa
dec
shl
cmp
mov
dec
adc
test
jp
cld
xchg
pop
xor
adc
pop
rcll
popf
fwait
stos
int
mov
xchg
lods
mov
cmp
sub
mov
jecxz
notb
mov
push
lea
icebp
inc
fsubrp
push
xchg
out
or
divl
and
fcompl
les
clc
insl
mov
fdivl
jle
add
test
xlat
xlat
xor
xor
lods
and
ds
pop
lea
mov
data16
pop
jnp
popf
xchg
and
test
imulb
dec
pop
in
bound
lods
pop
add
jle,pn
push
jp
rcr
xchg
es
int
hlt
lret
and
jge
pusha
pusha
cwtl
add
das
je
lock
add
sarb
xor
cld
scas
xchg
cmp
and
pop
cmp
pop
inc
and
inc
nop
mov
addr16
outsl
ret
cmpsl
fdivrs
pop
dec
xchg
inc
mov
clc
push
mov
fsts
and
pop
pop
xchg
mov
ret
out
xchg
sarb
push
mov
ljmp
ret
out
and
and
jb
dec
jbe
pop
cltd
cs
push
sbb
js
pop
movsl
sub
and
adc
je
dec
rclb
mov
in
scas
adc
arpl
mov
jmp
and
filds
pop
mov
imul
sti
sar
or
xchg
adc
mov
pusha
test
or
mov
and
inc
push
mov
sub
shl
xor
mov
xor
or
sbb
xchg
pop
push
push
xchg
adc
and
imul
loopne
jecxz
add
insl
fstpt
out
push
into
mov
outsl
clc
cmp
ss
push
sbb
dec
sbb
popa
insl
nop
mov
and
clc
pop
pop
xor
mov
adcl
cld
dec
cld
cld
scas
dec
xor
jge
jne
and
xchg
adc
xchg
push
and
mov
pop
cmp
jp
call
mov
jmp
sub
push
inc
imul
ss
mov
jb
leave
pop
xchg
jnp
bound
les
or
cs
jle
stc
xchg
into
sbb
fisubl
insb
lcall
jl
fcmovu
hlt
int3
outsb
lods
pop
int
jecxz
push
lods
out
stos
xor
or
jnp
ss
test
cmc
insb
xchg
xchg
pop
and
inc
add
pop
mov
jl
mov
repz
pusha
dec
push
dec
xor
leave
jo
push
lea
out
ja
cmp
sub
pop
mov
in
test
pusha
lcall
lock
fwait
inc
or
hlt
outsl
daa
sbb
fstl
loopne
fisttpl
fadds
push
cmpb
and
sbb
icebp
shl
pop
lahf
xchg
push
dec
mov
sbb
xor
add
sbb
clc
pop
enter
mov
xor
sti
inc
mov
fiaddl
lea
adc
popa
icebp
jle
mov
imul
jp
dec
idivl
imulb
cmp
adc
aaa
dec
lcall
inc
ljmp
popf
mov
lds
pop
pop
push
ret
adc
inc
sub
push
mov
outsl
mov
cld
loope
mov
lds
pop
and
fsubs
mov
out
pop
enter
pop
jge
adc
dec
mov
cmp
ficomps
sbb
jecxz
adc
or
xchg
mov
mov
cmp
arpl
jmp
mov
cs
inc
jp
xor
leave
adc
or
sbb
sub
les
fimuls
in
sub
inc
shlb
sbb
and
xor
mulb
test
loop
cwtl
xchg
lcall
lock
bound
aam
push
push
sbb
jg
xorl
in
je
xor
dec
inc
arpl
ret
mov
std
inc
sbb
xchg
hlt
insl
lea
cld
loopne
daa
mov
es
mov
xor
sub
jns
or
sbb
xchg
pop
add
sarl
fistpll
aam
subl
and
xor
leave
add
xor
jp
clc
cmc
sbb
movsl
test
insb
push
or
mov
arpl
xchg
mov
test
idivb
or
xchg
ss
mov
xor
xor
std
inc
imul
pop
cwtl
xlat
rolb
sub
dec
cmpl
cmp
inc
push
sbb
push
xor
or
xchg
ljmp
adc
push
add
pop
filds
leave
jae
leave
add
orl
pushf
in
call
ljmp
dec
push
push
xor
xchg
dec
ljmp
imull
jbe
adc
sbb
pop
xor
sub
sub
cmp
les
es
and
xchg
daa
jne
dec
sub
aaa
lret
imul
mov
fcoml
leave
adc
stc
cmc
xchg
cmc
ret
sbb
and
add
xchg
mov
cld
les
sbb
insl
ds
fwait
pop
fdivrs
fwait
push
mov
aad
xchg
add
stos
jmp
xchg
add
xchg
xor
iret
push
xor
xor
test
test
cmovle
les
mov
das
dec
xor
sbb
pop
enter
roll
jbe
xchg
xor
out
pop
inc
lcall
push
lods
mov
and
cmp
ljmp
fistl
cltd
fcomip
inc
idivb
cs
ss
jecxz
shll
mov
shll
mov
dec
mov
stos
lods
add
cmp
mov
imul
aad
lahf
fcoms
mulb
cmpsb
sbb
add
fldt
jnp
mov
int3
rcll
rorb
jns
sbb
xor
and
push
popf
and
cmpl
inc
add
popf
test
xor
int3
fldenv
ljmp
mov
lock
das
repnz
inc
inc
add
jne
xchg
mov
adc
lock
dec
pushf
mov
xor
mov
jp
stos
fidivrs
lahf
arpl
mov
xor
in
jg
mov
push
loope
std
movsl
fildl
dec
jnp
into
inc
stos
pop
pop
jno
push
or
pop
test
adc
or
in
out
or
push
ficomps
sbb
lea
nop
sub
mov
ljmp
nop
clc
xchg
pop
imul
loope
cli
stc
inc
incl
or
or
sbb
xlat
cmp
aas
and
pop
mov
jg
std
add
repnz
in
test
js
sarl
outsb
gs
cmp
adc
das
mov
mov
sub
sub
daa
sub
and
add
mov
lcall
mov
in
xchg
sbbl
je
stc
mov
shl
out
aad
mov
inc
gs
test
shll
call
jmp
leave
sahf
sub
inc
negl
adc
ss
sub
mov
fldcw
outsb
push
xchg
into
test
pop
inc
or
repz
add
fsubrs
cld
pop
fcompl
sub
mov
dec
sti
sbb
outsl
sarb
inc
cmp
cmp
and
je
test
sbb
int
shll
mov
inc
sub
xor
xor
cmp
push
mov
int3
lea
mov
ret
imul
sub
sbb
aas
in
or
mov
xor
sbb
and
mov
outsb
jns
outsb
mov
cmpl
stc
push
movsl
sub
mov
xchg
xor
inc
pop
mull
pop
mov
xchg
rcr
mov
push
daa
mov
lods
in
leave
lods
add
mov
lds
js
add
stos
loop
rcr
test
jo
inc
xchg
push
jecxz
jl
mov
adcb
mov
cld
pop
je
out
cs
mov
cwtl
nopl
lahf
push
cmpl
fwait
daa
jg
std
sub
or
mov
lretw
jmp
lret
adc
out
pop
adc
aaa
inc
addl
xor
std
in
lret
out
pop
jp
adc
cmpb
sbb
jno
mov
mov
adc
repz
push
mov
mov
xor
sqrtps
jne
es
or
mov
movb
jle
pusha
aad
pop
push
sub
mov
in
rcrl
xor
test
and
inc
insb
or
insl
out
push
inc
inc
es
add
pop
leave
imul
dec
loopne
sub
loop
sub
ljmp
sbb
shrb
dec
cmp
addr16
mov
add
sahf
push
ficomps
ss
sbb
iret
std
movsl
mov
push
int
pusha
inc
dec
lahf
xchg
les
pop
data16
add
dec
mov
inc
and
lret
inc
jl
pop
mov
push
and
push
xchg
insb
bound
mov
into
push
add
insl
xor
movsl
jne
shll
cmp
int
test
cld
data16
inc
cmp
sub
inc
or
xchg
adc
imul
mov
and
xor
dec
subl
stos
outsl
xchg
bound
push
jo
daa
sbb
dec
rcrl
je
adc
cmp
pop
push
pop
mov
cmp
fwait
rorl
das
sbb
lea
in
pop
repnz
mov
push
xor
sub
dec
fs
int
enter
pop
mov
iret
call
pop
rcll
jne
mov
xor
xor
add
lea
sbb
pop
dec
negl
outsb
and
adc
pop
xor
dec
ds
imulb
jo
push
imul
sub
test
xchg
sti
test
stos
out
jecxz
adc
mov
popf
mov
xor
mov
xchg
add
mov
jge
mov
jmp
jno
sbb
and
shll
fs
lret
adc
sbb
in
int
lods
repnz
pop
je
insl
frstor
mov
push
lods
popa
hlt
pop
add
outsl
add
lods
cmp
pop
mov
push
lret
sbb
into
cs
lock
fdivp
and
jle
aas
mov
mov
repz
pop
adc
imulb
pop
cmp
in
xor
aam
in
pop
mov
xchg
cmp
jb
cltd
xlat
push
adc
sub
jle
test
iret
adc
aam
lahf
pop
inc
lods
xor
push
jo
arpl
adc
fsubrl
push
inc
and
sbb
add
cwtl
lods
int
cmpl
push
ret
rcll
jmp
sbbb
mov
testl
fisubrl
xor
push
loopne
jl
scas
pop
adc
add
leave
mov
stos
adc
stos
jno
inc
and
jl
into
dec
mov
or
out
inc
xchg
jnp
lahf
scas
mov
pop
loop
mov
jl
je
push
rcl
or
adc
lock
add
sbb
or
push
jo
or
xor
mov
xlat
mov
mov
ss
leave
mov
and
les
mov
or
dec
xchg
sbb
cmp
and
jg
stos
pop
xor
insl
mov
gs
mov
imul
inc
hlt
push
cmp
insl
jnp
inc
scas
or
cmp
daa
aas
inc
pop
fcmovnu
adc
sbb
je
addr16
adc
stos
dec
sub
repz
pop
xchg
data16
sbb
or
in
sahf
xchg
js
push
sub
ret
shl
mov
xchg
inc
dec
test
ja
push
mov
jae
jno
cmpsl
inc
gs
outsb
out
jmp
inc
bound
add
mov
fadd
mov
or
and
pushf
inc
ret
movsb
popa
mov
push
fistps
mov
cmp
cmp
cmp
adc
or
test
and
push
or
ret
xor
push
sbb
inc
adc
out
mov
call
fnstenv
cmp
stc
push
divb
cmp
lahf
jae
js
add
pop
in
mov
into
pop
or
adc
fwait
or
repz
stos
pop
inc
aam
and
out
add
or
arpl
jl
sub
mov
ret
jle
xor
insb
roll
pop
lods
mov
jae
jmp
mov
xor
ret
nop
or
inc
mov
inc
shl
jne
push
dec
fsub
jmp
dec
ret
jb
dec
in
inc
add
aas
pop
in
test
and
ds
xchg
inc
rcl
mov
cmp
and
cmpsl
mov
sahf
jg
stos
xchg
cmp
xor
ret
mov
scas
pop
stos
fmull
mov
mov
loop
popf
insl
fldenv
test
shrb
and
sub
or
pusha
mov
mov
and
xchg
clc
imul
adc
jbe
xchg
add
adcl
lea
xlat
pop
in
inc
xor
repz
das
hlt
mov
jmp
inc
adc
mov
jno
xor
sbb
lret
inc
mov
jne
xor
cmc
or
stos
dec
mov
stos
ficoml
incb
mov
jnp
in
std
out
xor
repz
and
pop
mov
je
dec
push
arpl
iret
xor
mov
dec
lahf
pop
pop
ss
mov
mov
inc
mov
popa
into
jg
cmp
xor
or
or
cs
cmp
mov
mov
inc
mov
hlt
sub
ss
or
mov
push
push
xchg
mov
cmp
mov
push
push
dec
pop
push
das
jge
pusha
gs
dec
mov
call
cmp
inc
stc
add
out
dec
jl
sbb
xchg
scas
js
xchg
sub
lea
jge
push
lea
mov
jle
scas
cs
stos
jo
add
into
sbb
hlt
sbb
jae
je
mov
cmpsl
mov
loope
hlt
mov
and
popa
pop
mov
xchg
les
fcomps
scas
lahf
int
jne
fiaddl
inc
movups
je
fcomps
jmp
inc
stos
xchg
icebp
pop
pop
lahf
xor
jne
loopne
mov
fldpi
pop
std
and
pusha
push
aas
mov
nop
popa
xchg
pusha
adc
mov
sbb
insl
sbb
or
mov
fmul
jbe
in
push
loope
and
in
in
arpl
nop
dec
aad
das
push
les
or
push
sub
cmp
mov
add
leave
out
hlt
addr16
pushf
lds
jnp
mov
dec
ret
daa
xor
dec
das
in
inc
nop
in
movsb
cmpsb
je
mov
add
lds
test
cmp
fldcw
mov
ret
push
pop
test
or
ja
repz
daa
cli
lahf
mov
push
pop
or
add
pop
scas
scas
test
movsb
dec
iret
addr16
popf
andl
inc
xor
sub
mov
rorl
mov
xchg
pop
and
mov
add
or
cmp
pop
fldt
pop
inc
aam
fbstp
inc
lcall
fucomp
fsts
pop
xchg
xchg
roll
aam
icebp
cmp
cli
cmpsb
adc
insb
mov
es
les
fdivp
cwtl
jo
and
adc
scas
pop
jl
gs
xchg
push
gs
sahf
lahf
xor
repnz
push
lcall
pop
js
ds
jp
fmul
xor
push
inc
mov
lcall
sbb
fidivl
push
dec
aad
or
fwait
dec
cwtl
or
dec
jo
popa
inc
scas
cmp
xchg
icebp
mov
push
loope
mov
sub
xor
iret
push
jg
in
xor
and
js
ret
xor
jne
loope
xchg
push
dec
push
or
call
or
dec
out
inc
mov
cmp
out
icebp
push
outsl
in
and
inc
lods
lret
mov
and
stos
mov
lods
jge
cmpsl
cmpsl
and
mov
pusha
lret
xlat
mov
or
add
or
add
push
push
push
sbb
sbb
jecxz
mov
ss
test
out
push
pop
mov
cmc
cltd
call
cmp
cmpb
ss
rolb
add
subl
jmp
xchg
pop
jne
push
jp
sbb
loope
loopne
pop
shrb
inc
mov
inc
loope
inc
cmp
inc
push
test
clc
push
lret
xchg
xor
adc
je
inc
push
push
out
pop
insb
cmp
int
inc
loopne
iret
xchg
mov
inc
sub
test
pop
lret
repnz
and
inc
ss
in
mov
ret
test
push
imulb
and
lcall
lods
prefetch
out
sti
orb
adc
leave
sub
xor
pop
xchg
xor
adc
xchg
lds
loope
or
sub
xchg
fwait
pop
pushf
fsubrl
lea
icebp
mov
leave
sbb
das
test
push
jb
sbb
out
les
enter
push
push
sub
add
outsb
sub
mov
jle
fidivrs
setae
inc
push
cld
outsb
push
fldl
out
sub
xchg
xlat
jmp
pop
aas
add
mov
mov
cld
add
sarb
mov
in
into
fcoms
out
notb
pop
insl
jae
outsl
inc
jle
and
sbb
mov
mov
jbe
mov
add
into
xor
jne
jecxz
push
mov
sbb
in
mov
lret
adc
mov
cs
gs
call
aas
roll
hlt
or
inc
test
xchg
cmpsb
call
mov
mov
movsl
adc
add
push
push
bound
jne
pop
xor
mov
ss
lcall
aaa
fs
xor
fistps
clc
pop
xchg
call
adc
imul
jmp
xor
enter
arpl
xchg
cmp
xchg
sti
cld
dec
mov
into
jecxz
in
out
xchg
rolb
test
popa
popf
lock
jnp
pop
iret
cmp
sub
loopne
cwtl
movsb
aad
sarb
movsb
mov
and
leave
push
ret
aam
cmpsl
faddl
mov
jae
xchg
iret
cli
jno
out
xchg
push
mov
sarb
xor
cmp
aas
dec
adc
add
mov
gs
sub
cmc
inc
subl
xor
cli
test
lret
shrb
clc
lea
pop
fcomp
test
cmp
jmp
daa
repz
mov
fwait
stc
pop
jno
mov
push
add
dec
bound
enter
int
ret
clc
push
jne
adc
rcl
jo
inc
in
mov
scas
imul
jg
inc
es
int3
scas
testb
das
iret
add
fsubl
scas
mov
call
jno
test
ficompl
xchg
mov
rcrb
xor
push
cmp
stc
xchg
outsl
cmpsb
gs
mov
iret
xlat
scas
cmpb
adc
or
sti
daa
lret
fistpl
cltd
aas
mov
fldl
mov
lret
xor
sub
adc
mov
mov
sub
push
xchg
out
sbb
xorl
jl
dec
jo
popf
mov
sub
leave
sbb
mov
or
es
test
dec
jecxz
mov
in
hlt
out
and
push
int3
icebp
lds
mov
pop
cmp
mov
xchg
test
js
sahf
lret
test
cld
sbb
xchg
add
or
loope
xor
dec
adc
xchg
jns
test
test
pop
lods
push
pop
xorl
lds
sarl
dec
cmpsl
aad
lahf
mov
mov
faddp
sub
ja
clc
arpl
rcr
jge
int
arpl
test
mov
rcl
mov
sbb
add
jno
fdivs
into
popf
frstor
cmpsl
add
out
dec
push
and
cld
xchg
pop
sub
jb
xchg
cmp
mov
cld
lret
mov
insl
xor
push
ss
mov
fwait
inc
xlat
test
enter
mov
mov
and
dec
lret
enter
sub
enter
sub
lea
dec
or
sub
inc
xor
dec
aaa
dec
fwait
daa
out
test
dec
dec
push
test
dec
jge
dec
xor
mov
mov
xorl
orl
sti
adc
rcl
push
fwait
ret
cld
ljmp
int3
cmp
or
push
push
xchg
sbb
cld
and
mov
hlt
int
xor
stc
out
ret
jb
ljmp
lock
cmp
add
mov
pop
test
repz
sub
in
outsl
push
scas
test
jle
cmp
xor
insb
in
push
ror
pop
or
push
pop
sahf
hlt
jl
jle
dec
cmp
push
mov
inc
mov
fmull
pop
and
lret
xor
xor
aaa
clc
sub
sbb
stos
mov
nop
lahf
push
lods
cmp
mov
insb
jp
or
pop
clc
mov
imull
xor
frstor
test
rorb
hlt
jns
xchg
mov
lea
leave
mov
inc
les
sbb
mov
mov
and
orl
popf
fwait
xor
xor
inc
dec
lock
adc
cmp
or
mov
pop
test
popa
inc
push
je
mov
sub
aas
inc
lretw
inc
pop
push
fs
dec
dec
cmp
dec
lea
cmpl
mov
sbb
mov
mov
inc
outsl
fs
mov
ljmp
pop
hlt
dec
popf
les
sti
mov
adc
outsb
in
mov
js
push
push
repnz
and
int
insb
in
mulb
jbe
add
inc
rcll
add
imul
call
mov
mov
lds
popf
mov
pushf
pushf
stos
mov
xorb
shrl
and
and
inc
inc
jb
pop
mov
in
out
subb
dec
test
cmp
push
xchg
jno
rcrb
pop
nop
sub
mov
lret
adc
in
stc
xlat
jle
push
mov
fstpl
mov
mov
jecxz
xchg
cmp
pop
push
push
cmp
idivb
outsl
cmp
pop
enter
clc
pop
push
push
xchg
adc
sti
xchg
cmp
push
imul
jb
inc
sub
rcl
add
add
sub
std
pop
sahf
mov
sub
out
lret
mov
sbb
jp
das
dec
xchg
inc
das
inc
push
js
push
enter
loop
addr16
xor
leave
mov
jbe
roll
xor
xor
call
sbb
inc
cmpsb
cmp
pop
es
pop
scas
popa
inc
push
xchg
daa
xchg
lock
mov
mov
push
adc
stos
stos
lods
or
dec
inc
pop
inc
in
lret
cli
mov
pop
add
inc
xor
push
mov
mov
sub
ljmp
mov
test
or
jb
sbb
les
xchg
jnp
testl
cmp
enter
ja
mov
loopne
or
ds
sub
fldcw
push
sub
add
mov
aaa
aas
and
cli
scas
mov
adc
arpl
jle
add
add
mov
push
mov
push
and
sbb
dec
repnz
push
js
jmp
xchg
cmc
jne
and
shll
dec
enter
dec
xor
loopne
nop
xlat
cmp
ss
push
or
push
es
lods
int
faddl
ret
jge
add
lcall
insb
ret
test
fnsaves
es
fsubrs
inc
jmp
aam
push
pop
sahf
add
add
inc
arpl
sbb
cmp
lea
das
or
xchg
or
stos
bound
inc
cmp
lock
add
leave
dec
inc
add
jns
repnz
imul
push
cmp
and
notb
sbb
leave
into
mov
sub
or
push
in
lods
push
jp
mov
add
rolb
xor
in
gs
sahf
dec
mov
cmp
cmpsb
add
sahf
push
adcb
xchg
lods
outsb
test
xor
imulb
sbb
rolb
repz
data16
lahf
sub
cmc
sbb
add
lea
loopne
adc
mov
xchg
aas
ss
and
or
jmp
cmp
movsb
push
fnstsw
adc
lahf
in
lods
jp
sbb
xchg
and
sub
icebp
mov
push
cmp
cs
leave
jl
cmp
xor
mov
jo
sbb
sbb
push
xchg
sub
bound
jp
out
or
push
add
mulb
push
in
inc
pop
jp
loopnew
jp
aas
fisttps
cltd
cmp
push
scas
arpl
mov
add
xchg
movsl
cmovs
mov
push
dec
ljmp
aam
insl
outsb
xchg
pop
test
movsb
dec
scas
pop
insb
cltd
rorl
mov
cmc
loope
mov
xchg
push
inc
out
fiadds
dec
mov
rcrl
sub
ss
sbb
rclb
push
ficomps
dec
fcoml
inc
cwtl
jl
iret
push
clc
ss
aad
xchg
jnp
push
daa
outsb
push
loopne
cli
loopne
jnp
add
aam
cmc
cmpsb
icebp
sahf
adc
sbb
sub
or
inc
bound
ja
mov
incb
lahf
push
xchg
fnstsw
mov
roll
popl
movsb
jb
cmp
mov
lea
add
iret
out
leave
push
push
cmpsl
cmpl
add
xlat
pushf
sti
sbb
cltd
ror
push
dec
or
fcompl
push
cli
popf
addr16
pop
out
xchg
sti
push
cmp
shlb
in
pop
add
jp
fcoms
icebp
vorps
or
stc
mov
or
lahf
repz
shll
adc
cmpl
loop
mov
xchg
les
shll
insl
mov
lock
or
dec
shrb
out
sub
sub
sub
sahf
js
jne
sub
fildll
mov
ffreep
and
or
xor
mov
or
outsl
push
std
lea
mov
ret
adc
pop
insl
jns
add
jns
jno
popf
hlt
add
lret
mov
lcall
fucomp
sub
lret
cs
push
dec
pop
dec
jmp
push
sub
mov
mov
mov
mov
fldenv
and
adc
loop
pop
mov
or
or
xchg
pop
xor
inc
enter
jno
or
xor
and
mov
mov
stos
xor
push
sbb
shll
dec
mov
fcoml
in
ss
add
cld
push
stos
je
in
jae
fimull
mov
ficompl
mov
aas
xchg
sbb
push
xchg
cmp
mov
sub
xchg
xor
jecxz
test
fstpt
lds
rclb
mov
lea
fmull
rcrb
insl
mov
add
je
jbe
push
jb
gs
ja
int
add
xchg
xlat
mov
icebp
cmpsb
or
cmp
adc
decl
xor
cwtl
inc
dec
sbb
in
orl
sbb
jmp
xchg
pop
push
dec
xchg
xchg
sub
xorl
jnp
mov
mov
inc
popa
adc
aas
popf
push
dec
xor
push
jae
cmpsb
inc
xlat
cltd
pop
hlt
xor
mov
pop
movsl
jl
mov
out
inc
popf
incb
inc
jbe
enter
pushf
push
xchg
add
js
dec
pop
nop
movsb
cs
movsb
into
jmp
sbb
and
mov
mov
add
and
mov
cs
ja
in
cmpsl
roll
inc
sbb
push
inc
in
and
js
mov
repz
popf
loopne
movsb
push
jne,pn
stos
adc
ret
ss
leave
sbb
pop
sub
xchg
xlat
mov
cmp
jp
ss
jb
ljmp
fdivl
xchg
int
loope
push
dec
cld
sahf
add
pop
lret
jb
xor
sub
sahf
adc
lcall
cltd
jg
mov
lods
lea
inc
inc
sbb
jne
ljmp
sub
sbb
push
xor
add
fistl
or
mov
fnstsw
movsb
pop
dec
adc
inc
pop
pop
es
mov
sahf
xchg
cmpsb
add
jo
adc
mov
lret
stos
shlb
mov
movhps
mov
sbb
ret
cmp
test
cmc
xchg
pop
mov
and
lods
cmp
lods
cmp
or
cltd
pop
arpl
shl
sbb
xchg
xchg
sub
test
scas
lret
mov
popf
aam
adc
xor
outsl
pop
mov
xchg
stc
loopne
pop
cmpsl
mov
push
sub
mov
jno
inc
iret
cmpsl
cmc
into
mov
test
bound
jmpw
push
aas
fs
xchg
divl
repnz
lret
push
popf
test
mov
pop
jne
jnp
loope
test
dec
pop
adc
inc
repz
ficoms
pushf
add
xor
mov
fstp
cmpsb
sbb
aam
push
jae
aad
das
addr16
loope
in
mov
cli
maxps
or
popf
jecxz
inc
mov
ret
cmp
gs
repnz
xchg
inc
rorl
repz
cmpsb
jb
jecxz
push
leave
jge
mov
arpl
cmp
add
cltd
loop,pt
dec
mov
imul
pop
lods
or
push
adc
xchg
and
mull
rcr
push
push
or
insb
addl
popa
inc
push
call
mov
inc
insl
mov
push
or
lea
lret
shl
loopne
icebp
popf
jle
xor
or
adc
cmp
pushf
or
daa
or
int3
loope
aaa
or
mov
aaa
fidivrs
pop
insb
lods
jp
sub
repnz
test
pop
sbb
sbb
fiadds
pop
cmp
movsl
shl
lahf
test
xchg
mov
mov
or
sub
in
cli
sub
roll
repz
sub
loop
xor
xchg
stos
pop
jg
mov
adc
sbb
gs
mov
les
adc
mov
sbb
or
xchg
ds
fmuls
aad
mov
aas
test
pop
cmp
clc
sbb
stos
cmpl
stc
jecxz
clc
in
push
aaa
xor
inc
pop
sbb
cmp
or
push
ret
jns
jge
mov
lds
pop
and
lock
push
push
add
stc
lret
mov
aas
jp
pop
aaa
push
xchg
div
jmp
cmp
cmp
push
pop
push
jne
push
jbe
jae
or
mov
pop
fisubl
mov
jle
mov
mov
pop
shrl
adc
test
daa
xor
js
in
push
xor
adc
mov
add
dec
movsb
pop
push
add
loop
test
fimuls
out
sbb
dec
xchg
dec
or
push
stos
jge
rclb
int3
mov
push
outsl
sub
mov
xchg
and
cmp
cmpsb
bound
test
rcrb
hlt
or
cmpb
hlt
lods
adc
adc
push
dec
out
adc
cmc
and
cmp
sub
pop
inc
adc
xchg
int
jmp
push
jno
dec
test
sbb
clc
lret
out
inc
add
dec
pop
sub
mov
loop
aam
adc
dec
enter
sbb
pop
ds
lcall
xchg
test
xlat
sub
sbb
sbb
inc
and
scas
mov
rorb
lret
rorl
popf
mov
adcb
lahf
inc
rolb
enter
test
jns
xor
stc
daa
xor
addb
mov
cmp
les
mov
jne
cmpsl
in
subl
pop
adc
mov
fidivrl
mov
decb
pop
inc
stos
ret
inc
mov
sub
and
ljmp
cmp
jg
pop
add
mov
add
cmp
leave
fwait
push
sub
push
loopne
aaa
ret
or
sbb
and
pop
cmp
mov
mov
cmpsl
nop
rep
push
cs
mov
dec
dec
in
test
jns
jmp
fcoml
mov
aam
dec
scas
cmpsb
xchg
push
ret
and
hlt
mov
movsb
das
scas
lahf
pop
add
ret
adc
cmp
ss
ds
repnz
adcb
outsl
sahf
jge
sbb
sbb
mov
push
jb
cltd
cmp
add
data16
gs
hlt
mov
icebp
sbb
sub
jo
cwtl
mov
jg
mov
out
in
push
ljmp
shl
jb
cmc
pop
cmp
adc
leave
cmp
dec
or
push
mov
cmpsl
ficoml
push
push
push
add
mov
cmc
inc
lods
mov
dec
dec
xor
jecxz
mov
fincstp
and
mov
cmpsl
jg
data16
mov
aad
mov
xlat
repz
in
inc
and
popa
cmp
mov
insl
mov
jns
gs
add
push
mov
add
data16
cmp
repz
cmpsb
mov
push
cmp
pop
cmp
dec
add
xchg
mull
mov
mov
lods
mov
push
shl
mov
int
ret
sbbb
stc
inc
push
xchg
add
int
movsl
lret
aad
hlt
jmp
int
ror
jecxz
xor
push
inc
idivl
cmpsl
aas
mov
test
push
adc
addb
inc
int3
dec
jecxz
movsb
inc
inc
push
cmp
inc
cmp
or
sarb
outsl
js
enter
xor
lds
rcr
add
ja
das
xor
pop
jno
and
ss
mov
daa
mov
inc
scas
inc
pop
dec
push
sbb
or
in
inc
lret
shlb
xor
cwtl
mov
xchg
push
test
int3
insl
mov
insb
out
popf
mov
push
mov
and
xor
pop
sub
sub
pop
in
pushf
daa
fincstp
jnp
movsb
sbb
int3
pusha
mov
ja
ss
in
inc
inc
mov
popa
shll
add
mov
in
std
push
lods
add
out
xchg
add
mov
ss
add
adc
jg
std
aaa
mov
les
xor
scas
mov
mov
add
test
fidivs
repnz
add
insb
lahf
movl
dec
hlt
out
push
adc
lock
mov
cmpsb
ds
jle
jmp
out
sbb
adcl
xor
rolb
dec
in
imul
push
adc
aad
test
lods
jns
xorl
rcr
vorps
add
xchg
sbbb
xchg
push
mov
pusha
sub
lods
dec
sub
ret
adc
imulb
cmp
out
cli
fwait
imulb
add
lea
cli
xor
push
insb
fmul
push
add
js
xor
mov
xlat
sbb
mov
sti
dec
add
pop
enter
clc
add
lods
add
leave
out
out
and
push
jne
inc
pushf
movsb
push
in
das
add
dec
push
add
insl
cmp
in
leave
jl
mov
shlb
in
popa
xchg
cmp
add
mov
movsb
icebp
mulb
mov
and
ffreep
dec
mov
out
push
mov
lods
sub
dec
lds
jmp
push
hlt
or
rcr
add
sbb
pop
repnz
xchg
js
leave
pop
hlt
mov
faddl
shlb
add
shrl
mov
xchg
inc
inc
mov
push
inc
fs
pop
insl
fdivp
mov
sbb
rcrl
imul
push
bound
fadds
jl
mov
pop
mov
xor
dec
sbb
test
fimuls
dec
sbb
add
hlt
xlat
jge
insb
insl
mov
test
daa
push
and
rorl
mov
mov
xor
inc
lods
jmp
sbb
shrl
iret
cmpb
cmp
pushf
test
cmpsl
xor
pop
rcr
jbe
push
clc
sahf
rcrl
mov
mov
rcrl
jge
cmp
pusha
cld
iret
std
test
pop
push
ficompl
call
test
xchg
dec
push
daa
sub
in
add
add
cli
xchg
xchg
cmpsb
xlat
lock
int3
icebp
adc
insl
or
gs
jecxz
out
add
ficoml
call
in
mov
xchg
mov
xor
icebp
jno
mov
unpckhps
inc
mov
int
out
mov
mov
test
cmp
mov
push
ja
sub
jae
hlt
jb
xchg
and
push
pop
aad
push
subb
mov
clc
cmpsb
movsb
pop
gs
jle
out
nop
imul
std
push
sub
add
fs
popf
lret
mov
cli
cmp
out
loop
ret
jmp
out
mov
and
jno
test
lcall
mov
jae
out
jcxz
sub
pop
mov
lock
lcall
inc
in
icebp
xchg
adc
insl
jbe
mov
xor
inc
or
dec
outsb
outsl
negb
popa
hlt
loope
mov
push
out
fidivs
lea
arpl
lods
pop
or
pop
push
sub
jmp
nop
push
arpl
fisttpll
subb
add
or
out
fistpll
mov
mov
jns
or
add
mov
out
xchg
sbb
push
dec
push
push
out
fisttps
sub
mov
icebp
pop
ss
shlb
dec
or
sbb
pop
lods
movsl
fistpl
pop
jo
cltd
push
popf
test
sahf
push
fsubl
mov
add
xchg
xor
mov
iret
cli
xlat
adc
jbe
outsl
jecxz
xchg
popa
dec
push
out
dec
mov
lcall
add
pop
jns
push
mov
jne
flds
stos
xchg
ja
xchg
sahf
test
stos
shl
daa
data16
repnz
fmuls
cmpsb
cmp
scas
jge
or
mov
inc
sbb
ret
xor
ds
push
out
fldt
enter
xchg
andb
aad
fisubrl
pop
popa
inc
es
pop
inc
outsb
repz
fdivrl
int3
sbb
cmp
insb
jne
cmpsb
pop
jns
notl
or
and
pop
xor
or
popa
push
fwait
sub
push
ffreep
pop
mov
xorl
add
daa
inc
aad
jns
popa
out
mov
out
mov
push
ss
push
mov
in
xchg
jb
insb
xlat
xchg
push
cmp
fwait
jge
sub
adc
cltd
mov
inc
sub
or
mov
imul
dec
xchg
outsb
in
out
mov
mov
adc
mov
push
mov
lret
sbb
mov
mov
in
lret
ficomps
mov
rcll
aas
push
je
fnstcw
sub
ret
fisttpll
cltd
enter
lods
sub
mov
mov
pop
ja
adc
nop
ja
cmp
mov
lahf
and
pop
ljmp
cmp
movsb
faddp
lods
push
in
lret
xor
jle
enter
mov
jae
cmc
je
xchg
cwtl
adc
mov
movsl
xchg
mov
mov
or
dec
imul
jge
xor
fistps
outsb
shl
rcl
add
enter
sbb
dec
inc
add
imul
fimuls
jo
jg
inc
pop
sbb
pop
testb
xchg
mov
add
xor
lods
rcr
mov
nop
jg
mov
cmc
int
outsb
add
roll
or
mov
daa
push
test
dec
repnz
outsb
test
sbb
mov
pop
imul
in
shlb
pop
xor
mov
gs
insb
pop
mov
not
jno
fadds
clc
sub
mov
loopne
int
lret
add
fucomp
outsb
enter
je
mov
scas
test
int3
adc
sub
add
mov
xor
jmp
lahf
jmp
shrl
add
sub
cltd
xlat
xor
jecxz
push
and
cltd
ja
insb
std
imul
xor
mov
lahf
inc
mov
jp,pn
xor
xor
push
lret
mov
pop
and
push
pop
js
and
loopne
fbld
jge
fs
lahf
pop
pop
fwait
popl
add
pusha
xchg
dec
inc
cmpsl
mov
mov
dec
loope
mov
inc
out
xchg
daa
cmp
xor
add
push
adc
dec
sbb
test
rorb
xor
and
push
in
inc
leave
or
dec
inc
cmp
mov
and
jbe
outsb
mov
dec
xchg
adc
pop
mov
xchg
dec
cmp
in
fwait
pop
movsl
insb
je
push
sar
stc
pop
fnstsw
aam
iret
inc
hlt
mov
mov
dec
sub
popa
js
ret
adc
roll
ljmp
das
ss
pop
outsb
inc
sub
lea
ret
mov
mov
imul
popf
mov
mul
dec
lret
xlat
femms
mov
add
pop
jmp
lds
push
fstps
mov
mov
mov
sub
out
and
lahf
std
in
cli
not
add
addb
inc
mov
cmp
movsl
xor
and
mov
loop
das
imul
inc
popf
icebp
int
xlat
mov
pop
scas
dec
push
leave
xchg
pop
push
push
clc
test
cwtl
xchg
scas
je
dec
pop
adc
mov
add
fiaddl
das
jo
xor
jge
mov
nop
mov
stos
ffreep
pop
imul
adc
insb
subps
add
fsubrl
mov
fmuls
cmp
insb
or
and
mov
lock
mov
out
xor
dec
je
div
xor
sahf
adc
ljmp
push
mov
xlat
sub
cld
aam
push
test
mov
cmp
testb
repz
and
push
scas
cmp
dec
cmp
xchg
sub
xchg
sahf
test
mov
adc
adc
loop
insb
xchg
dec
cmpsb
pop
sub
inc
adc
addl
mulps
mov
pop
es
push
push
cmc
pop
fildl
hlt
adc
xchg
gs
pusha
test
ds
add
in
sbb
jp
adc
mov
ret
fcompl
or
das
out
clc
mov
pop
cli
fwait
mov
dec
ret
fsubrs
pop
leave
popf
dec
and
popf
and
sbb
mov
outsl
add
fdivrs
mov
adc
inc
cs
cs
leave
outsl
xlat
jge
sbb
imul
insb
push
inc
hlt
leave
jb
lock
pop
xlat
int
and
dec
imul
cmp
in
mov
dec
es
xchg
cmp
rclb
push
sub
addl
fwait
push
lret
adc
xor
jecxz
outsl
adc
xor
and
pop
push
loope
mov
jg
scas
and
lds
pop
mov
mov
inc
daa
dec
pusha
pop
jne,pn
shrl
jg
arpl
js
int3
mov
or
into
cmp
scas
stos
ret
aas
push
cltd
mov
pushf
xor
push
out
aam
sbb
nop
xchg
cmp
cmp
in
cltd
and
adc
sbbb
pop
stos
jnp
scas
mov
fnstcw
jb
jno
inc
push
dec
rorl
mov
inc
mov
and
pop
cwtl
in
test
aas
push
sbb
and
outsl
and
jmp
sbb
push
cltd
pop
jbe
ret
leave
lods
push
icebp
xchg
sbb
lea
lods
dec
jae
inc
and
out
inc
stos
sti
push
mov
sub
addb
cmp
rcrl
adc
xor
pushf
outsl
adc
cltd
jne
adc
xchg
or
fcmove
xor
clc
outsl
inc
loopne
mov
adc
lea
add
or
push
mov
and
cmp
sub
push
jge
ficomps
pushl
push
lods
sbb
in
pop
jne
fstpt
mov
shlb
ret
call
cmpsb
subb
mov
sti
cmp
mov
insl
lea
jno
je
nop
notl
push
fucomi
in
popa
push
ja
xchg
sub
sbb
rcrb
aam
push
push
cmp
mov
fisttpl
sub
dec
pushf
mov
xor
sbb
loopne
adc
jg
out
inc
and
test
sti
pop
push
sub
jns
push
mov
push
add
push
outsb
sahf
push
popa
lret
jbe
int
dec
push
sbb
xor
aaa
aam
icebp
mov
loop
adc
push
pop
data16
stos
xchg
push
dec
cmp
push
xchg
ljmp
in
push
sub
xor
push
jns,pt
xlat
cmp
inc
push
fildl
arpl
add
pop
or
push
xchg
lahf
stos
ret
or
stos
stos
xchg
subb
inc
jne
jb
out
pop
cmp
and
xchg
dec
cmp
je
jle
call
sub
ljmp
mov
daa
mov
es
imul
ret
repnz
movsb
fbstp
or
xor
xchg
ret
xchg
pop
and
in
push
cwtl
push
out
loopne
push
inc
xchg
pusha
cltd
pop
jae
xchg
insl
or
addr16
pop
cli
popa
dec
clc
push
sbb
cld
bswap
push
fcmovnbe
or
inc
push
jno
das
jg
jne
mov
bound
or
dec
mov
push
or
mov
pop
in
pop
xchg
jo
jo
aaa
cmp
mov
hlt
mov
jp
xor
js
nop
jmp
mov
call
xchg
and
xor
jns
mov
mov
cltd
mov
jns
fwait
leave
sbb
lret
inc
into
inc
inc
mov
insb
arpl
sub
sti
pusha
lret
mov
add
pop
fsubrs
aaa
mov
and
dec
xor
lock
sub
xor
shlb
pop
sub
inc
pop
negb
insl
mov
dec
sbb
ficompl
dec
cmp
imul
mov
or
outsl
cmc
leave
test
aaa
dec
ficoml
pop
int
pop
xchg
jmp
or
sub
aam
sbb
inc
subl
inc
adc
mov
cmpsb
stos
adc
clc
cmp
das
imul
mov
jle
cmp
xlat
pop
mov
push
imul
cmpsb
mov
test
mov
jecxz
pop
cwtl
inc
nop
inc
add
mov
xchg
and
movsl
push
mov
inc
int
adc
mov
movsl
xor
icebp
rcll
dec
aas
fsubrs
pop
xor
push
ds
xor
mov
test
sub
mov
mov
iret
or
mov
roll
insl
push
data16
aas
xchg
or
imul
icebp
inc
jns
inc
in
int3
out
addr16
mov
sbb
sbb
outsb
push
xor
ja
mov
fdivp
scas
pcmpeqb
pushf
mov
sub
or
hlt
mov
pop
mov
dec
jb
cwtl
inc
and
mov
lods
sub
pop
leave
jnp
mov
stc
dec
loope
into
or
jbe
pop
adc
mov
loopne
sub
lret
push
std
in
xchg
repnz
mov
add
and
add
jb
mov
and
aas
lret
fnstenv
jl
push
fidivrs
push
adc
sub
or
imul
imul
jmp
or
and
cmp
les
sbb
xchg
mov
and
mov
cmpsl
jb
daa
adc
lods
sbb
test
inc
mov
scas
xchg
pop
inc
das
test
out
jb
movsl
cltd
dec
push
mov
or
jl
addb
ss
inc
jbe
adc
xchg
into
aas
and
fisttpll
popa
pop
pop
xchg
test
mov
in
or
ret
cmpsl
sti
cmp
push
test
subb
hlt
push
and
xchg
pop
cmp
or
lock
cwtl
in
movb
xor
lret
push
pop
inc
fwait
imul
call
lea
sbb
aad
fistps
roll
sub
jae
jne
cmp
mov
and
data16
push
adc
xor
mov
aaa
je
mov
fldcw
xor
pushf
push
daa
and
sbb
insb
adc
loopne
outsb
inc
rcrl
into
inc
je
cli
mov
cwtl
push
ret
mov
sahf
dec
xor
repz
test
ficoml
xchg
sarl
xlat
cmp
xchg
mov
and
xchg
inc
pop
sub
mov
dec
cmc
out
bound
inc
mov
adc
sub
mov
int
aad
cwtl
mov
ret
enter
dec
pop
outsb
mov
popf
ds
mov
xor
mov
mov
mov
mov
sub
lcall
inc
lret
ds
mov
out
add
cs
scas
inc
add
lods
pushf
mov
dec
fildll
add
jl
add
push
test
andb
mul
decl
cli
inc
jb
insb
loope
repnz
loop
xchg
dec
inc
call
ljmp
jne
dec
cmp
stc
cwtl
xchg
dec
rolb
je
pop
dec
popf
aad
mov
cs
movsb
jnp
out
xor
cmpsb
push
or
adc
sahf
add
lods
stc
sbb
bound
cmp
xchg
fistl
push
in
movsl
cmpsb
bound
jbe
out
sbbl
push
sbb
push
push
mov
sbbb
loopne
addr16
je
cli
jae
int
in
in
stc
or
ret
mov
inc
int
lea
mov
push
sbb
mov
mov
sbb
pop
iret
leave
add
fnsave
out
scas
and
cmp
movsl
cld
ret
cs
or
xlat
add
cmpb
std
sbb
insb
aaa
add
cwtl
les
xchg
adc
mov
cmp
ds
pusha
out
es
push
xlat
push
jl
cmp
icebp
mov
jg
dec
inc
lods
push
sbb
push
push
or
int
fmuls
and
adc
cli
fisubs
inc
rolb
lods
cltd
lods
add
cmpsl
cmp
sbb
xchg
jno
xchg
fwait
jmp
das
jl
add
dec
xor
cmp
jo
cmp
jle
mov
inc
push
scas
dec
jp
xchg
cmc
jns
das
mov
push
fisttpll
fists
ja
sub
ds
std
and
inc
pop
mov
rcll
insl
cmp
rclb
ficomps
mov
and
movsb
test
cmpsb
or
cltd
ret
rcl
shll
jecxz
rclb
jne
shl
in
ja
imul
mov
pop
sbb
sbb
mov
lret
adc
xchg
lods
lea
push
gs
in
and
inc
xlat
dec
out
push
adc
pop
mov
movq
stos
add
mov
popf
in
loopne
mov
lret
sti
mov
mov
cmp
lret
jnp
push
jns
push
int
lret
mov
rcll
hlt
jae
fstps
fistpll
gs
and
push
cmp
shlb
adc
call
xor
mov
xor
call
loopne
pop
es
int
fsts
out
pop
add
data16
dec
loop
inc
xchg
xor
adc
mov
and
and
insl
mov
xlat
dec
mov
push
lea
mov
or
sbb
fsubrl
out
lods
lahf
aam
mov
push
adc
sub
and
jmp
mov
pop
fcoms
cwtl
jp
sub
and
jno
adc
xchg
js
cmp
call
push
xor
sahf
sbb
testl
xor
popf
dec
nop
iret
imul
repnz
idiv
ficomps
sub
and
ret
push
test
cmp
in
lods
sbb
mov
jle
imul
lret
cmp
xchg
mov
gs
dec
mov
cmp
test
leave
fs
pop
and
pop
dec
int
int3
notl
sbb
sbb
addr16
push
sub
pop
mov
ret
push
cmpsl
pop
bound
xchg
push
xchg
xor
outsl
add
test
pop
or
es
pusha
cmp
push
pop
enter
sub
sti
pop
adc
or
int
push
shl
test
orl
push
in
inc
lret
sbb
insb
sahf
mov
mov
pop
xor
sub
dec
add
iret
cmp
xchg
movsl
cmp
fisubl
ffree
shll
lcall
jmp
inc
mov
cmpsb
faddp
insl
xchg
popa
mov
xchg
ret
jae
mov
add
mov
sbb
or
or
scas
mov
cmpl
sub
mov
fsubr
enter
pop
pop
or
dec
cmp
rcll
hlt
mov
call
out
outsb
jnp
sub
mov
mov
xlat
inc
mov
sub
push
in
lahf
mov
das
push
repz
or
js
sub
ljmp
js
das
sub
jne
loopne
dec
jecxz
fwait
dec
sub
movl
push
fs
and
in
scas
mov
pop
mov
mov
inc
push
inc
or
sub
fsubr
mov
lods
mov
pop
jle
or
or
mov
sbb
sbb
shll
mov
pop
movsl
jle
xor
push
and
mov
mov
pop
hlt
add
inc
movsl
lcall
add
jns
add
or
sbb
inc
imul
popa
mov
ss
arpl
xchg
int3
cwtl
mov
and
push
adc
or
adc
imul
jecxz
mov
xor
outsl
push
pop
push
cmp
xchg
fcomp
push
or
lds
out
mov
inc
es
in
jb
scas
popl
and
movsb
jmp
hlt
add
jae
mov
xlat
xchg
dec
cmpb
cmpsl
sub
sub
cmp
out
push
pop
and
sar
fsts
mov
enter
adcl
mov
out
shr
dec
dec
aas
inc
mov
dec
and
mov
rcrl
mov
stc
mov
jae
fcmovnu
or
fcoms
scas
sub
test
xor
add
push
cmpsl
xchg
out
or
lret
scas
push
movsb
inc
cmc
xlat
push
xorb
cmp
mov
mov
pop
outsb
cwtl
daa
clc
lret
mov
inc
dec
xor
cs
jae
xchg
and
inc
adc
repnz
adc
pop
xchg
or
mov
mov
dec
add
lret
ss
popa
ret
cmpsb
stos
cmp
imul
ret
sahf
int
call
mov
andl
nop
pop
mov
cmpsl
jo
cmpsl
lock
mov
adc
sbb
leave
into
imul
cltd
and
jb
push
in
js
cmp
jg
push
sti
mov
sbb
ja
mov
stc
lock
ret
cmp
fwait
xchg
mov
jecxz
push
add
and
ja
xor
out
roll
fisubrl
fisubrl
iret
stos
js
call
inc
adc
outsb
mov
mov
adc
push
jle
xor
cmovge
inc
mov
xor
mov
loope
scas
and
clc
and
cs
and
enter
inc
and
fmuls
rdmsr
xchg
add
mov
stos
pop
mov
pop
jns
add
dec
ffreep
mov
sbb
inc
fxch
imul
mov
jp
insl
lods
stos
sbb
mov
lods
std
sahf
shll
inc
dec
sbb
xlat
sbb
sbb
mov
dec
sub
cli
mov
mov
sahf
jb
and
adc
lock
jbe
inc
sbb
xchg
test
mov
xchg
pop
les
addr16
repz
cli
inc
mov
aas
push
mov
mov
stc
adcl
add
ja
push
cmp
shrb
jo
inc
ret
das
andb
cmp
out
test
movsb
xor
in
xor
add
fidivrl
adc
lds
enter
pop
mov
dec
call
push
xor
mov
enter
add
pushf
adcb
imul
cmp
add
xorl
xor
and
jne
and
les
loope
sbb
jne
xor
nop
push
mov
ds
cli
fwait
ret
xacquire
xor
push
out
callw
jo
sarb
cmp
rcr
out
dec
dec
test
inc
or
pusha
repz
aas
jnp
jl
or
pop
mov
lds
or
add
mov
insb
mov
dec
lcall
xchg
cmpsb
enter
mov
rclb
shll
jle
lcall
jl
stc
repz
sbb
aaa
sbb
test
je
sub
inc
daa
fsubl
jmp
jg
incb
dec
fnstsw
nop
sbb
icebp
xlat
pop
ret
movsl
mov
sahf
push
insb
iret
xor
and
xchg
sarl
cs
inc
dec
jg
nop
push
mov
insb
fdivs
cmpsb
push
jae
aam
test
lcall
xlat
xchg
cltd
cmp
test
movsb
daa
fldl
clc
testb
fldz
jb
or
jle
mov
lea
jnp
xlat
movsb
inc
scas
add
push
clc
mov
inc
cmp
xor
fsts
push
pop
jno
sbbl
jmp
ror
arpl
mov
xchg
imull
push
inc
out
lcall
faddl
add
mov
mov
push
outsl
sbb
adc
add
shll
xchg
aas
lods
xchg
fidivrl
out
add
add
les
adc
int
repnz
arpl
das
data16
pop
xor
mov
mov
inc
xor
pop
sub
loop
add
add
mov
push
sub
cmp
cli
imul
and
mov
daa
jo
jno
les
inc
test
cmp
xor
ds
jo
dec
icebp
add
sbb
int3
mov
stc
fidivl
xor
inc
out
lock
add
or
mov
je
inc
mov
ljmp
mov
lcall
gs
int
sbb
add
jp
xchg
inc
lods
in
ret
cmp
push
orb
or
cmp
inc
inc
jmp
xor
pop
cmp
test
pop
mov
dec
inc
fiadds
xchg
fildll
lods
lret
dec
jmp
out
jmp
inc
mov
jge
push
inc
jo
pop
ss
jns
shlb
int
or
sub
data16
lds
mov
insl
cmp
mov
dec
xchg
mov
es
sbbb
inc
dec
lea
and
icebp
xchg
adc
std
repz
lret
or
adc
add
pop
loop
inc
and
mov
popa
sti
mov
ljmp
jmp
pop
inc
add
xchg
aam
sub
leave
add
mov
out
jne
mov
mov
sbb
loope
push
aad
arpl
add
mov
and
bound
js
pop
sahf
out
repnz
sbb
call
sbb
in
mov
popa
push
stos
jb
sbb
inc
adc
rclb
inc
or
fdivrs
mov
test
test
pop
clc
pop
arpl
cmpsb
adc
pop
lods
cwtl
sbb
loopne
mov
mov
mov
in
outsl
and
jp
cmp
incl
mov
xchg
insl
cmp
mov
sti
mov
or
shll
insl
mov
fisttpll
js
mov
mov
inc
xchg
test
pop
inc
daa
loop
inc
aaa
or
rorb
adc
dec
adc
popa
pop
jg
pop
outsb
mov
dec
fwait
lock
in
adc
inc
adc
mov
mov
cmp
add
mov
mov
xchg
mov
test
inc
pop
cmp
fldl
or
sbb
in
inc
push
add
lock
and
das
jnp
je
and
fsubr
test
jmp
push
and
out
lcallw
jnp
insl
add
loopne
jecxz
hlt
ljmp
sub
cwtl
scas
loopew
ja
jnp
jno
call
nop
and
fadds
popa
lret
cmpl
insl
dec
fwait
push
dec
jae
inc
pop
or
pusha
inc
test
jecxz
adc
pop
inc
scas
sbb
pop
jecxz
pop
xchg
call
arpl
jb
sbb
jns
mov
or
test
xor
xlat
add
mov
mov
push
ljmp
insb
push
ss
inc
cmc
and
jne
imul
mov
dec
inc
xor
inc
insb
jl
jbe
mov
fdivs
pop
pop
stos
lret
scas
in
ja
fistps
and
clc
mov
clc
add
mov
and
cld
push
jnp
loopne
sub
jl
mov
mov
fadds
xor
add
jb
loope
jb
scas
nopl
mov
ss
push
stos
inc
out
ret
mov
mov
fcoms
and
fwait
and
arpl
fwait
sti
xor
fdivs
push
lret
lea
add
data16
int
in
cmc
dec
aad
xchg
repnz
out
ret
push
sbb
ljmp
in
and
stos
aad
repnz
ds
cmp
mov
ja
mov
pop
jecxz
andb
lea
add
fdivr
andb
inc
jge
jb
push
adc
mov
shll
or
mov
xchg
pop
cld
jbe
data16
mov
sub
pop
call
cmpsl
loop
jecxz
aam
or
and
js
push
add
xchg
popa
cmp
adc
es
pusha
xor
in
inc
insl
cmp
fbld
inc
push
aas
xor
int
mov
or
pusha
sbb
xor
jns,pn
ljmp
mov
adc
dec
xchg
mov
fdivp
out
mov
xchg
dec
mov
sbb
xchg
pop
nop
cmc
xchg
test
scas
mov
sbb
test
gs
push
test
xor
lret
jecxz
add
or
cltd
test
jmp
add
out
pop
add
daa
jle
pop
or
jl
into
cmp
es
sbb
lock
jno
andb
fwait
lcall
shr
dec
and
push
adc
insl
mov
fwait
test
xchg
pop
cmp
inc
dec
mov
sbb
jecxz
aas
les
in
cmpsb
sti
inc
loope
or
pop
adcb
inc
xchg
aad
out
pusha
pop
es
fcompl
loopne
push
xchg
ds
push
xor
push
into
hlt
pop
push
sbb
xchg
aaa
aaa
inc
cltd
sbb
sub
mov
adc
add
xor
mov
cwtl
and
out
jecxz
xor
inc
add
jecxz
sbb
lods
insb
and
sub
cwtl
das
sbbl
jl
stos
jb
lsl
cmp
push
pop
dec
mov
into
push
sti
stos
xor
jo
bound
xchg
cld
pop
cmpb
ja
repnz
xor
jl
cmp
shll
fistpll
inc
adc
cmp
mov
add
mov
jae
mov
or
outsb
push
xchg
mov
je
bound
mov
push
fsubrl
xor
cs
mov
sub
sbbl
rcl
scas
jge
inc
jmp
popf
outsb
sub
jge
xor
nop
loop
mov
add
jbe
fldl2e
popf
repnz
fisubs
out
repnz
pop
movsl
cmp
aas
lock
mov
dec
mov
icebp
lds
stos
adc
add
int
mov
enter
push
imul
inc
push
scas
out
mov
and
ficoms
hlt
into
cmpsb
mov
inc
sbb
adc
jnp
jae
xchg
inc
les
or
and
pop
fstl
sbb
iret
mov
ret
jbe
add
inc
scas
ss
test
loop
sbb
sbb
cmpsb
scas
pusha
adc
add
pop
frstors
ficoms
and
jmp
cltd
pusha
fbld
cli
xchg
adc
push
xchg
pop
jnp
mov
enter
sub
outsl
sub
lahf
dec
pop
add
mov
cltd
adc
dec
fcompl
js
sbb
jmp
adc
fs
cmp
pop
les
pop
call
sbb
call
xchg
bnd
test
dec
or
ret
jns
test
pop
pop
loop
sarl
pop
jno
mov
scas
sub
mov
add
fcoms
fwait
in
sub
out
pop
inc
loopne
shrb
push
xor
cli
dec
in
lcall
fnstenv
movsl
mov
js
xor
das
incl
sub
push
fbstp
xchg
add
push
gs
por
jl
push
cltd
sub
aad
loop
clc
lcall
push
movsb
mov
mov
stos
xchg
dec
xor
outsl
pushf
lds
ds
jge
mov
xchg
xchg
popa
jns
es
fisttps
lds
mov
jne
sub
cwtl
cltd
enter
in
xchg
jns
pop
cmp
xchg
dec
fadd
sub
cmp
sbb
pushf
xsha256
cmpsb
shrl
and
mov
cmp
lahf
repz
icebp
stos
mov
dec
mov
sub
adc
addr16
pop
fidivl
mov
jl
pop
sub
call
mov
mov
lahf
out
outsb
call
dec
pop
shlb
ja
add
sub
push
sub
into
stos
add
push
add
or
sahf
add
mov
mov
nop
add
add
jecxz
mov
adcb
xor
push
mov
mov
fldl
lret
lahf
cs
push
or
mov
inc
xchg
cmp
and
jne
addb
cmp
repnz
cmp
insl
int3
add
mov
sarl
das
into
neg
add
rolb
jl
mov
les
cmp
cs
push
mov
dec
xor
inc
sarb
stc
test
pop
lock
mov
in
pop
jbe
inc
cmp
lds
leave
sahf
dec
dec
stos
pop
dec
pop
mov
pop
push
je
mov
nop
mov
jp
cmp
movsb
fldenv
loopne
xchg
or
call
pop
iret
or
fldl
sbb
xchg
xor
ljmp
xchg
xchg
cmp
or
jp
xchg
sahf
sti
ljmp
cs
movsl
mov
xor
js
sub
cld
pop
mov
add
or
push
mov
dec
out
xchg
jl
lcall
mov
gs
mov
fldpi
adc
inc
mov
add
cli
popa
and
mov
push
stos
pusha
xchg
lock
add
je
pop
pop
mov
in
add
xor
into
xor
out
fdivl
push
aad
adc
out
imul
loopne
xchg
movsl
pop
fiadds
pop
cmp
aaa
inc
bound
fdivrl
sub
rorb
adc
in
jl
mov
mov
xor
dec
xchg
pop
mov
clc
push
pop
or
xchg
add
xchg
aad
mov
sbb
rorl
or
faddl
mov
push
ja
xchg
or
mov
adc
lahf
xchg
test
cmpb
gs
dec
fisttpl
pop
loop
xor
adc
inc
rorl
inc
jb
xor
dec
scas
sbb
push
jl
adc
mov
jno
jne
lods
lds
scas
push
mov
jg
sbbl
sahf
shlb
movsb
lods
stos
icebp
outsl
add
mov
out
push
push
outsl
popa
or
or
or
call
aam
pop
test
cld
sbb
mov
pop
mov
enter
repz
loop
inc
pop
mov
rolb
jb
pushf
shll
mov
lea
jnp
icebp
lods
and
sbb
jmp
out
ljmp
lcall
jno
cs
lea
dec
mov
cwtl
and
xor
xor
xchg
jmp
cltd
aas
jge
ret
and
enter
mov
push
je
inc
push
in
aaa
daa
int3
pop
cwtl
clc
out
cmpsb
fidivl
mov
mov
xor
pop
insb
fs
aas
negb
and
out
test
xor
sbb
jbe
cmp
aam
adc
push
mov
xor
orl
and
xor
fbld
das
xor
stos
cltd
cmp
lcall
mov
addb
rorl
stos
incl
orb
ss
push
nop
jne
mov
lcall
imul
add
movsl
sarb
and
movsl
mov
push
xor
loopne
xchg
aam
xchg
lcall
aad
ja
push
outsb
sub
lea
iret
aam
push
xorl
lcall
mov
mov
repz
out
cld
popa
subb
rep
dec
scas
sahf
les
leave
pop
les
pop
mov
or
fcoml
sbb
loope
xchg
xchg
loop
fsubrl
stos
clc
mov
adcl
shrl
aas
cmpsb
out
stos
cmp
jo
lods
rolb
pop
loop
pop
pop
mov
pop
and
and
roll
jns
loopne
push
arpl
mov
cld
add
int3
test
repz
pop
xor
shlb
movsb
xchg
mov
push
das
mov
out
push
mov
scas
int3
aaa
sbb
xor
sbbl
fwait
out
lret
repnz
sti
mov
fucomi
add
dec
cmp
jp
sti
or
pop
sbb
xor
outsl
push
or
xor
adc
dec
cmp
ss
in
pop
mov
and
jp
sub
sub
lret
cmp
mov
sar
mov
clc
inc
sbb
mov
adc
inc
hlt
sbb
jg
jb
daa
jns
pop
pop
movsl
push
sbb
stos
stos
fldl
adc
dec
es
adc
add
out
mov
imul
and
filds
cmc
notl
mov
sbb
pop
sbb
orb
out
lds
xchg
or
hlt
faddl
or
jnp
pop
insb
jle
sbb
mov
jle
xchg
pop
dec
add
add
repnz
imul
mov
pop
xor
loopne
cli
fisttpl
jb
push
mov
popa
jnp
jl
lahf
insl
adc
movsb
clc
mov
jbe
sbb
xchg
cltd
cmpsb
jge
mov
ficomps
aaa
jle
stos
sub
lea
ret
rcrb
xor
sub
or
pushf
lret
adc
push
jnp
cld
jmp
xor
jg
aaa
jns
push
pop
and
dec
divb
sbb
dec
mov
jo
jb
and
jp
adc
test
decl
mov
xor
mov
xchg
imul
inc
cld
setl
mov
sbb
xchg
aad
ja
push
int
and
pop
stos
in
gs
dec
push
and
xchg
sub
adc
loope
into
mov
cmpsb
nop
imul
lea
mov
xorb
lea
lret
push
jge
arpl
fildll
in
ljmp
rcll
jle
inc
adc
xchg
ja
push
or
xorb
mov
into
addr16
xchg
jecxz
push
mov
subl
adc
inc
in
mov
sarl
xchg
outsl
sub
aam
add
add
mov
movsb
insl
ja
push
xor
mov
fmul
inc
adc
mov
xor
mov
mov
test
lea
addr16
dec
sub
iret
out
sub
iret
xlat
push
jmp
inc
incl
das
lret
xor
cmc
jecxz
inc
dec
jge
shl
cli
push
ret
cltd
cwtl
iret
jmp
psadbw
cwtl
mov
cmp
inc
xchg
test
and
cwtl
mov
data16
pop
sbb
jne
repz
and
cmpsl
test
ret
cs
jl
movsl
jge
in
dec
sub
mov
mov
mov
dec
or
mov
rclb
inc
xor
jbe
xchg
imul
sub
cmp
or
nop
or
xchg
adc
mov
fmull
repz
nop
rclb
sarl
ret
aad
push
xor
xor
add
cmp
mov
mov
push
fdivrs
sahf
dec
sbb
xor
push
mov
mov
mov
mov
out
cmp
add
sahf
jno
cltd
inc
jge,pt
xchg
lret
adc
pushf
mov
ss
scas
loope
mov
mov
test
in
inc
xor
ss
pop
jge
mov
pop
pop
dec
mov
adc
shr
xchg
lret
xor
mov
push
jo
cmp
es
popf
sub
sub
out
mov
outsb
xchg
xchg
int3
sbb
imul
jne
mov
pop
dec
pop
cmpsb
sar
xchg
adc
dec
ffree
xor
fidivrl
insl
dec
sahf
inc
movsb
roll
fists
cltd
mov
sub
outsl
jle
daa
or
mov
pop
pop
incl
jl
mov
sbb
test
cwtl
lret
adc
sub
xchg
fdivrs
ret
xor
std
push
mov
mov
mov
clc
xchg
jne
push
cmp
inc
mov
sub
adc
push
pop
push
or
xchg
fisttps
xchg
insl
xor
das
push
aad
cli
mov
testl
int
test
test
fnstcw
lods
repz
aam
enter
in
adc
decb
and
xchg
xchg
das
sub
ja
js
mov
mov
and
rcrl
mov
in
dec
mov
mov
daa
sub
adc
jg,pt
fistpll
mov
gs
movsb
fwait
stc
outsl
push
lret
dec
out
mov
jecxz
out
les
call
add
divb
enter
imul
enter
push
sub
inc
cmp
lods
pop
pop
mov
sbb
cmp
test
cmp
pop
cmpsb
ljmp
nop
pop
les
hlt
mov
mov
cmpsl
cmp
nop
test
in
outsl
sahf
mov
sbb
sub
mov
into
in
daa
ret
jmp
cmp
adc
into
leave
sbb
or
mov
adc
shrl
imul
or
repnz
std
cli
enter
and
fsubp
add
rcr
jnp
add
push
sbb
in
mov
lahf
mov
mov
call
aas
setne
sbb
lds
aas
or
push
in
movsb
cmc
inc
push
inc
or
iret
xor
or
out
mov
pop
call
enter
aaa
jle
sbb
js
aaa
dec
push
daa
fcoml
fsubs
add
add
add
add
shrb
cld
sbb
out
dec
push
adc
pop
incl
mov
jne
out
sbb
insl
insl
fisttps
mov
rep
sahf
xchg
xchg
xor
cs
inc
push
xchg
mov
xor
cmpsl
cli
ja
fdivl
and
xchg
scas
and
jnp
mov
or
fcomps
mov
dec
out
and
aaa
rcr
je
cli
xor
push
in
outsb
hlt
jl
jae
in
xor
rcrb
add
mov
clc
mov
pusha
mov
outsb
sub
jne
sarl
jb
scas
movsl
lcall
mov
jb
test
addl
xor
jae
popa
fsts
test
enter
js
sbb
xchg
pop
mov
loop
xor
lcall
mov
in
dec
mov
in
lahf
mov
pop
scas
shlb
clc
inc
mov
add
push
lea
add
xor
hlt
imul
loope
fistl
inc
xchg
in
mov
int
in
xor
jle
inc
dec
xor
jo
out
imul
and
hlt
out
mov
and
cmpb
out
rcll
js
insb
xlat
enter
scas
push
out
mov
pop
paddw
xchg
test
jle
mov
arpl
leave
mov
roll
ret
mov
daa
iret
jl
pop
jl
hlt
inc
inc
clc
out
fisubrl
in
call
push
push
xor
rorb
push
pop
sbb
inc
testl
sub
loope
cmp
adc
pop
popa
rol
cmpsl
icebp
in
jns
test
popf
push
fs
xorl
std
outsl
icebp
or
insl
lret
pop
popf
jmp
leave
out
cwtl
sub
lods
and
scas
loope
and
pop
pop
sub
scas
imul
stos
jp
psraw
sub
imul
loopne
inc
push
xchg
fwait
mov
mov
adc
mov
jb
add
outsl
lock
jne
sbb
adc
jle
xchg
cmpsb
pop
sub
jecxz
jns
sub
xor
push
das
icebp
inc
inc
fwait
and
je
arpl
pop
inc
jle
adc
cmc
push
cld
and
test
test
inc
pop
jmp
mov
lock
sbb
negb
add
push
lea
mov
insb
jecxz
mov
pop
fisubrl
dec
xor
ret
mov
xchg
int3
pushf
push
sbb
add
push
dec
xor
subb
aaa
xor
in
imul
stos
mov
movsb
push
fstpl
cmp
add
mov
pop
and
fcmovnb
jecxz
arpl
and
add
aad
sarl
or
inc
or
dec
pop
loope
mov
jo
lods
and
adc
stos
inc
ret
cmc
cmp
in
cmpsb
mov
insl
imul
aaa
loopne,pt
lds
clc
in
sarl
jmp
ja
test
bound
stc
insl
jno
std
fabs
push
push
insl
lret
in
xchg
jns
add
jecxz
sbb
pop
in
xchg
aaa
mov
inc
push
repz
or
adc
sub
popa
sub
fcoms
dec
adcb
push
mov
addr16
and
jno
push
rcll
cwtl
outsl
cld
mov
cltd
inc
mov
scas
adc
xchg
push
mov
adc
dec
mov
mov
in
xchg
cmc
inc
cmpsl
in
mov
sti
lret
sbb
cmp
add
mov
in
ja
xchg
dec
stos
and
pop
jl
adc
pusha
xchg
jmp
cmpl
cmpsl
mov
jmp
jl
mov
aad
leave
fnstcw
mov
inc
ss
jecxz
sbb
pop
cmpsb
std
in
int3
jp
outsb
and
mov
pop
jp
pusha
ljmp
xchg
and
and
js
movsb
sbb
out
ljmp
xor
and
cli
mov
inc
or
push
mov
dec
das
movsl
out
faddl
xchg
lret
std
dec
pop
and
into
ds
xor
mov
pop
pushf
mov
sub
jns
and
jbe
cs
jle
adc
sub
fstpt
fiaddl
or
pusha
pop
mov
sub
stc
mov
bound
cmc
cmp
pop
jecxz
xor
inc
int
pusha
xor
insb
add
mov
gs
xchg
popf
jb
ret
ja
leave
into
lret
dec
adc
add
fs
mov
sbb
push
imul
loop
sub
dec
mov
outsl
subl
fistps
fcoms
test
lds
mov
movsl
pop
ss
fcomps
mov
ds
icebp
cwtl
push
in
out
cmp
push
je
insl
gs
inc
inc
pop
mov
jnp
icebp
faddl
cmpsl
pushf
dec
pop
gs
cwtl
mov
xchg
in
rcrb
mov
push
fcoms
jecxz
andb
or
stc
dec
stos
sbb
push
mov
out
fcmovb
adc
call
icebp
add
rcll
fs
push
lret
pushf
lret
mov
in
fs
ja
movsl
or
incl
inc
xor
leave
cmpsl
pop
inc
xchg
fisubs
dec
ljmp
or
aaa
inc
lods
js
cmp
adc
push
mov
js
mov
cmp
and
push
cmp
movl
xor
xchg
enter
ljmp
fiaddl
enter
xor
inc
push
mov
jecxz
rcrb
cmp
js
sbb
sub
test
sub
cmp
pop
enter
out
dec
adc
out
xchg
jp
sub
stos
adc
xor
fnstsw
push
add
stos
loop
mov
xchg
pop
in
and
mov
ja
in
fmull
dec
imul
stc
punpcklwd
xchg
repz
jo
pop
xchg
in
xor
lcall
pop
mov
sub
aam
add
leave
xchg
mov
push
shrl
stos
call
bnd
add
jge
ss
mov
push
push
js
imul
jecxz
arpl
test
movsb
fst
arpl
shrl
cwtl
xchg
mov
inc
scas
fs
add
push
enter
cld
stos
out
xor
cmpsl
shlb
sti
dec
sub
stos
jbe
mov
lea
xor
mov
pop
and
hlt
sbb
mov
ret
mov
push
xor
mov
push
inc
fmull
adc
std
push
sub
ljmp
mov
in
mov
mov
pusha
push
dec
mov
call
cmp
in
push
mov
push
fadd
lahf
inc
enter
mov
sub
das
aas
hlt
enter
gs
outsb
pop
test
je
insl
cmp
or
fwait
jno
cmpl
inc
stc
xor
je
lahf
xchg
popf
addps
in
aam
int
pop
push
pop
sbb
aas
xor
jecxz
incl
push
ljmp
or
or
mov
icebp
adc
fdivrl
stos
test
mov
jo
rclb
dec
cmp
cmpsw
aaa
push
das
and
les
insb
rcll
cwtl
cli
pop
pop
ss
pop
ds
cmc
add
sub
pop
mov
xchg
sbbl
dec
push
test
nop
mov
in
dec
test
sbb
stc
fmul
movsb
push
add
xchg
mov
sbb
xor
mov
mov
mov
dec
and
stos
mov
xchg
push
mov
dec
xor
int
daa
lret
fidivl
fs
jecxz
mov
fdiv
jno
jle
pusha
fdivl
add
sbb
or
fisubl
and
push
inc
call
mov
add
test
mov
out
sbb
and
cld
mov
cmc
pop
sbb
sub
pop
mov
cli
cmp
pop
aam
pop
fadds
rorl
jmp
or
or
aad
xlat
adc
push
add
nop
fsubrl
cmp
repnz
inc
or
mov
or
add
inc
inc
jns
shlb
adc
sbb
mov
hlt
or
scas
dec
mov
and
in
mov
adc
cmpsl
jo
out
outsb
mov
int
sbb
xor
aam
push
cltd
cmpsl
jns
add
lods
or
lret
jge
dec
into
sbb
call
dec
push
int3
lcall
push
fwait
xchg
jns
xchg
push
idivl
inc
inc
dec
pop
pusha
out
mov
sub
sub
sub
sbb
ds
xchg
or
sbb
out
adc
or
dec
iret
push
add
push
lret
pop
in
jmp
popf
imul
out
outsb
mov
int3
push
push
xchg
fwait
sub
arpl
jmp
in
mov
jnp
push
cmc
sub
push
ja
lahf
jmp
xchg
push
imull
or
jbe
cmp
push
mov
and
mov
sub
rcl
adc
daa
loop
or
lea
dec
mov
adc
xchg
inc
push
fcompl
fwait
rorb
inc
subl
sub
inc
aad
mov
icebp
cmp
mov
repz
mov
sbb
sub
mov
mov
out
xchg
cmpsl
and
sub
lods
cltd
ss
scas
shlb
iret
icebp
inc
mov
jmp
dec
mov
popa
inc
and
mov
mov
cltd
cltd
xchg
insl
sbb
push
loop
sub
xor
xchg
fisttpl
xchg
adc
repz
and
and
sub
adcb
push
mov
push
xor
sbb
notl
loope
inc
mov
jge
lret
xchg
push
mov
mov
mov
std
jnp
adc
jg
sbb
ja
adc
das
jge
push
clc
sub
hlt
push
repz
popa
out
sbb
xor
inc
dec
pop
mov
jb
data16
or
push
dec
xor
mull
xor
popa
out
shrl
stos
add
cli
dec
add
inc
add
xorl
adc
jbe
ja
ja
xlat
test
jge
mov
mov
jnp
in
pop
fsubr
or
sub
adc
in
xor
loopne
inc
subl
bound
stos
scas
call
iret
mov
test
mov
sti
mov
or
jne
cmpsb
mov
sub
outsb
pop
test
lret
and
lods
ja
adc
xchg
jmp
cli
add
fcoms
jbe
or
jl
sarb
mov
call
sbb
out
dec
jo
xor
stos
cmpsl
sbbl
sub
out
pop
mov
inc
or
mov
sti
in
cmp
fstpl
lretw
sub
push
call
fnstcw
add
mov
lock
icebp
push
popa
xchg
sbb
sbb
in
inc
out
mov
jno
sub
into
adc
push
mov
jne
mov
loop
fs
adc
or
xor
ror
add
gs
and
mov
stos
mov
jmp
add
push
cltd
addb
mov
jnp
push
add
mov
or
xchg
mov
divl
jnp
mov
sbb
outsl
dec
xchg
sbb
movsl
push
or
pop
lods
xor
or
mov
ja
mov
xor
int3
pop
jns
mov
lret
jg
or
enter
in
adc
mov
fdivr
or
push
idivb
pop
sahf
lds
inc
mov
movsb
pop
out
xor
aad
addr16
push
rolb
mov
fnstcw
dec
stc
inc
data16
stc
cltd
ss
mov
add
or
cmp
mov
cltd
dec
add
xchg
movsl
bound
inc
mov
xchg
in
call
aam
sti
aas
sbb
rcrl
or
mov
fstps
repz
inc
push
pushw
lahf
push
pop
xchg
aam
pushf
jp
loopne
xlat
push
xchg
mov
cltd
xor
and
movsl
and
insb
cwtl
push
xor
inc
imul
and
loopne
clc
cmp
scas
out
jp
add
push
lods
inc
ds
ret
movsl
and
push
shl
int
movsb
xlat
and
test
sahf
outsb
pop
mov
jne
jne
clc
aaa
stos
movsl
loop
test
sbb
dec
xor
insb
filds
daa
sbb
dec
pop
inc
outsl
adc
mov
cmp
xor
mov
xchg
hlt
pop
mov
jmp
aas
jecxz
sub
es
inc
pop
jae
mov
dec
lahf
mov
adc
jo
cli
mov
sbb
outsb
cwtl
out
inc
cmc
mov
imul
cld
cmp
mov
pop
sub
inc
mov
xchg
and
pop
push
test
mov
mov
adc
test
dec
popa
sub
cmp
int
pop
cmp
cmpb
push
lock
jno
cmc
outsl
mov
mov
jle
jecxz
xchg
jae
in
lods
adc
sti
xchg
test
sbb
mov
scas
lock
sub
fcomps
push
int
adc
pop
mov
gs
sbb
mov
xchg
fdivp
xor
push
imulb
inc
mov
lods
push
push
sti
cmc
popa
jns
sbb
inc
cmpsl
sbbb
es
loop
out
push
cmp
jb
insl
pop
xchg
pusha
fs
filds
sub
xor
inc
sub
xchg
pop
mov
in
fldenv
mov
js
mov
stc
cmpsb
cmp
dec
mov
or
data16
mov
mov
pop
scas
adc
sti
es
xorb
mov
cmp
pop
insl
adc
fists
pop
lret
sub
rcr
ret
jmp
ret
cmp
ficomps
sub
into
icebp
mov
loopne
int
or
mov
out
in
mov
pop
sar
pop
jb
jp
hlt
fdivl
or
mov
ret
or
xchg
and
int3
dec
sarl
into
pop
and
pop
sti
cli
and
xchg
push
dec
push
jbe
add
add
cmp
in
mov
imul
jae
daa
fstpl
push
push
mov
add
std
or
inc
lods
xchg
fistpl
imul
inc
bound
pop
adc
mov
adc
movsb
xchg
adc
sub
shrb
lret
add
lock
jl
add
push
jno
adc
pushf
ret
lock
int
mov
mov
hlt
ret
pop
stc
imul
negb
cltd
adcb
lods
or
xchg
out
or
in
push
adc
maxps
xor
lea
shr
fwait
xor
inc
pusha
add
inc
sub
js
push
sti
out
add
andb
stos
pushf
test
cwtl
sbb
inc
jge
jbe
test
jne
jo
lock
pop
mov
icebp
nop
push
adc
dec
test
dec
js
dec
adc
or
rolb
popa
divl
mov
and
mov
sti
push
mul
jo
adc
cmp
xor
addr16
outsl
sub
inc
cmp
jle
shl
mov
push
sub
aas
and
sbb
cld
fdivs
testl
rclb
and
mov
das
mov
scas
jecxz
gs
jmp
je
mov
lcall
adc
cmp
mov
mov
aad
nop
aad
in
int
mov
mov
jmp
mov
out
sbb
mov
dec
lods
mov
jmp
push
ret
dec
dec
or
loop
mov
push
jno
aam
outsl
fst
sbb
cs
mov
rcl
mov
scas
sbb
push
push
lds
or
inc
or
gs
push
adc
xchg
add
jle
jg
xchg
aad
sbb
mov
pop
mov
sub
or
cli
cmp
inc
push
mov
out
sub
pop
mov
adc
cmp
lcall
loop
or
cmp
and
and
into
jo
icebp
mov
mulps
lods
shlb
mov
xlat
adc
pop
inc
jmp
fdivrl
jl
mov
xchg
mov
outsb
mov
lock
jmp
jg
pop
inc
pushf
ds
xor
mov
ds
mov
jne
and
call
inc
sbb
pop
and
or
add
scas
xor
push
rcr
adc
push
xchg
pop
xor
pusha
jnp
nop
mov
in
sti
xor
iret
mov
notl
je
out
mov
add
std
mov
xchg
push
sub
enter
add
xchg
inc
dec
inc
push
mov
ret
jb
sbb
jb
mov
insb
pop
in
into
mov
scas
and
sti
jmp
clc
in
incl
pusha
test
mov
lcall
mov
movsb
dec
nop
pop
addl
add
dec
imul
add
dec
jb
jo
push
sbb
mov
je
fldl
add
adc
call
mov
divl
int3
xor
xchg
hlt
test
out
int
aas
dec
in
stos
pop
dec
xlat
fmuls
dec
jo
xor
pop
push
xchg
push
mov
sub
pop
mov
rolb
inc
mov
mov
lret
hlt
mov
cwtl
rclb
daa
ja
sahf
dec
sub
mov
push
and
stos
fsubl
divb
mov
push
jle
adc
sbb
lret
shrl
sub
lret
in
es
inc
pop
jns
mov
push
or
add
xchg
adc
xlat
test
push
push
push
dec
dec
lds
adc
sbb
int
shlb
push
clc
xor
cwtl
push
test
xchg
or
mov
das
add
push
je
cli
fildll
div
es
mov
pop
and
imul
aaa
inc
rcrl
xchg
add
xor
out
xor
mov
cs
jp
push
ljmp
sub
into
xchg
loop
add
shll
pusha
sti
jo
mov
xor
inc
mov
ds
add
fdivl
loopne
insb
pop
ss
decl
out
movsb
xchg
cmp
or
fdiv
push
inc
sub
inc
aad
mov
sub
fsubs
in
lods
shll
ljmp
mov
imul
mov
scas
pop
insl
or
dec
xor
add
dec
test
fisubrl
push
pop
stc
push
push
sub
jmp
aas
sub
jnp
arpl
fiadds
pop
imul
pop
call
rcll
mov
pop
mov
add
sbb
outsb
sti
ja
or
jg
fs
jb
andl
arpl
dec
and
lahf
ret
ds
icebp
ret
daa
lahf
inc
jnp
and
loop
cli
sahf
or
movsl
mov
sub
mov
cmpsb
mov
add
fistl
subb
or
mov
movb
repz
push
fstps
in
into
out
mov
inc
push
cmp
or
push
pop
pusha
mov
into
cwtl
rcll
sti
das
adc
gs
lods
rorb
mov
or
add
adcb
push
repnz
jno
cli
mov
add
push
jne
ret
mov
add
inc
lods
ret
push
loop
vphsubdq
addr16
push
push
leave
out
in
cmp
mov
add
outsb
mov
pop
mov
add
cmp
lds
aaa
loope
fwait
test
add
fadd
test
xor
mov
mov
inc
jae
das
lods
sbb
es
jns
sub
bound
mov
dec
cmp
jp
push
arpl
ds
lret
fmuls
nop
sub
push
into
xchg
scas
jmp
push
cmp
push
add
xchg
and
push
leave
loop
stos
dec
dec
stos
push
mov
jo
pusha
insb
jne
aam
imul
cmp
xchg
add
sahf
gs
mov
mov
shr
pop
xchg
push
arpl
mov
jns
test
cmp
loopne
outsl
xchg
sahf
gs
fdivl
lret
xchg
xchg
and
in
into
xor
push
dec
mov
inc
and
mull
ljmp
fidivrl
dec
jne
and
jmp
or
ja
push
movsb
movsb
cmp
dec
scas
insb
int
sub
mov
sub
mov
push
insb
out
push
jp
aad
mov
mov
inc
pop
in
imul
addr16
xor
adc
push
pop
dec
jp
cmpsl
xchg
fwait
xor
dec
in
jnp
jmp
and
gs
pop
outsl
pop
sbbb
ss
jnp
out
aas
test
in
and
in
pop
or
sub
pop
punpckldq
gs
fisttps
insl
or
shr
xor
mov
rcrb
in
enter
test
rcll
aad
cmp
jmp
jge
insb
loop
inc
pop
outsb
dec
sbb
lret
cli
xchg
ds
sub
and
and
mov
out
fs
cld
mov
adc
aas
pop
aad
cmp
mov
mov
xchg
nop
jo
push
jne
adc
cmp
mov
push
ficomps
insl
int
jbe
pop
mov
or
inc
adc
mov
jge
aam
inc
ljmp
add
imul
fs
jne
inc
jno
jne
test
pop
ljmp
je
mov
push
cmp
mov
inc
push
jns
fdiv
inc
cli
inc
outsb
mov
movsl
fcmovu
popa
es
xchg
ret
movl
bound
scas
lea
imul
negb
adc
fs
sbb
sahf
or
jno
dec
js
int
cmc
inc
insb
mov
mov
xor
out
ret
add
jae
outsb
adc
mov
lock
push
aad
xchg
cltd
push
test
test
test
sub
lret
pop
dec
ficompl
clc
xchg
push
lret
ljmp
jb
pop
icebp
out
pop
add
jns
mov
stos
and
xor
pusha
mov
ss
std
mov
mov
and
inc
inc
push
imulb
cmpsl
stos
jl
adc
adc
sbb
sbb
ret
xchg
xor
sub
dec
push
jno
jmp
inc
out
cld
dec
aam
or
iret
fcomps
sbb
add
jp
mov
or
cld
loopne
ds
mov
pop
push
cmp
jnp
push
rcr
out
push
shr
push
fdivrs
stos
sarl
push
add
bound
mov
xlat
dec
and
movsb
jno
fidivs
add
pop
sub
mov
cmpsb
aam
out
mov
lods
push
push
mov
xor
mov
jo
jne
mov
jp
int
and
adc
dec
pop
fcmovu
lods
nop
mov
sbb
cli
stos
call
ljmp
maskmovq
mull
xor
js
mov
dec
insl
inc
out
xchg
es
aaa
imul
mov
nop
out
es
pop
add
mov
xor
sbb
xchg
test
push
xchg
jl
pop
ja
insb
cmp
fmull
mov
sub
cwtl
push
inc
jb
adc
lret
mov
stos
repnz
mov
and
mov
out
lret
fdivl
repz
push
mov
dec
mov
mov
pop
and
push
movsb
xor
pop
jecxz
popa
inc
jmp
inc
daa
push
and
pusha
icebp
or
jp
cmp
repnz
cltd
and
cmpsl
fdivs
push
loop
lret
xchg
cmp
iret
jl
rorb
pop
mov
add
sbb
mov
dec
lods
or
orl
jmp
mov
lret
adc
pop
mov
push
mov
jno
jmp
mov
push
movsl
jge
jns
hlt
cltd
push
pop
adc
xor
inc
cli
pop
push
mov
sub
pop
inc
or
or
add
mov
dec
sub
fistps
loope
dec
dec
arpl
sbb
aad
sub
lods
xchg
fldl
sbb
sahf
xchg
inc
inc
iret
aaa
xor
leave
xchg
mov
adc
movsb
aam
mov
dec
divl
fisttpll
or
pop
dec
imul
push
fstp
mov
es
mov
sbb
sbb
jecxz
xchg
cmpsb
fbld
rcl
pushf
call
hlt
mov
jae
fcomi
aad
decl
or
or
adc
ficoms
call
push
repz
mov
inc
ss
call
jo
out
inc
jmp
adc
std
add
mov
ljmp
sub
out
push
add
mov
test
mov
ljmp
mov
dec
ret
cmp
add
lods
push
jb
push
imul
and
dec
fbld
inc
pcmpeqb
ret
adc
les
xor
sbb
leave
mov
loopne
lret
ds
mov
loop
sub
cwtl
sbb
xchg
add
dec
rcr
and
jge
xor
or
shll
inc
push
popa
je
xor
mov
cmpb
sbb
negb
cmpsl
mov
lods
pop
push
mov
in
iret
dec
xorb
cld
xchg
in
push
or
pop
inc
or
clc
sti
gs
int3
mov
cmp
adc
sbb
stc
insl
jg
inc
shll
mov
push
pusha
mov
mov
pusha
fwait
dec
popa
jnp
adc
call
mov
addr16
shlb
in
add
jecxz
int3
mov
pop
xchg
loope
xor
insb
mov
or
mov
add
ret
jne
test
idiv
shlb
jne
xchg
fidivl
cmpl
add
dec
dec
xor
jns
fsts
xchg
fistps
lret
ja
mov
lock
mov
inc
aad
mov
mov
or
cmp
in
stos
push
inc
inc
mov
mov
mov
xor
pusha
and
lea
sub
lods
aas
repnz
test
push
ja
scas
pop
lcall
test
push
test
fsubrl
push
ja
insl
or
xor
pop
fstpt
nop
ret
pop
xor
ret
lods
nop
stos
inc
sbb
mov
inc
dec
inc
sar
mov
stos
lea
scas
cs
sarl
mov
jle
cltd
jne
mov
push
pusha
push
aaa
outsb
xchg
in
or
test
cwtl
jae
or
xor
mov
shll
or
push
fsubl
and
outsl
xchg
pushf
lea
arpl
mov
xchg
mov
idivl
shl
dec
jp
cmp
inc
or
movsl
rcll
pop
sbb
cld
fbstp
xor
cltd
xchg
mov
xor
aam
fst
pop
mov
or
sub
rcrl
adc
ds
mov
xchg
lret
or
test
jg
mov
repz
dec
repnz
ror
xchg
jl
add
xor
xchg
sub
mov
cld
arpl
push
addb
sbb
lds
jne
movsb
imul
dec
in
sbb
sbb
popw
pop
inc
dec
rolb
inc
xor
add
inc
push
fisttpll
cmp
bnd
and
gs
ljmp
xor
shll
lret
sub
repz
aad
and
push
xchg
jmp
pop
xor
out
mov
add
loop
push
jge
sbbb
pop
push
push
add
jbe
mov
dec
pop
xchg
xor
mov
mov
jne
sub
je
add
adc
fisubl
cmp
cmpsl
imul
and
jns,pt
ljmp
and
subl
adc
jg
xor
mov
iret
pusha
insl
jbe
rorl
cmp
lods
dec
sbb
shrl
outsl
mov
call
or
mov
sbbl
mov
scas
popa
mov
sti
in
imul
sbb
and
rorb
mov
popa
mov
test
adc
add
fbld
dec
sahf
add
outsl
aad
add
or
pop
call
insb
repnz
sub
jnp
es
insl
mov
mov
mov
scas
popa
les
insb
imul
fs
inc
sbb
aas
jo
ds
fistpl
jnp
negl
jb
stos
or
fdivrp
sbb
jmp
pop
sbb
xor
dec
mov
inc
std
loope
mov
mov
icebp
sub
lret
hlt
adc
mov
lret
and
cltd
fimuls
pushf
xor
inc
push
sbb
ficomps
jg
aaa
ret
mov
popa
sbb
xor
sbb
xchg
xor
movq
jnp
iret
push
mov
jecxz
aas
cmp
sahf
inc
loope
cmc
and
cmp
aam
jecxz
inc
mov
jle
ficompl
mov
or
sbb
jg
push
popf
sub
push
cmc
test
popf
pop
cmp
sbb
mov
sti
mov
pop
jbe
mov
movl
and
mov
icebp
icebp
and
fisubrl
repnz
or
fbstp
fsubs
xor
sbb
enter
ds
add
mov
inc
cmp
inc
clc
cmpb
rcrb
mov
repnz
enter
sub
xchg
in
add
fsubs
imul
cmp
pop
mov
stos
jb
bound
push
push
xchg
bound
aaa
push
sub
jecxz
or
inc
mov
sub
or
jg
addr16
push
ret
inc
cmp
mov
les
add
cs
jo
aaa
mov
ds
or
sahf
aam
and
adc
dec
jns
rclb
mov
pop
repnz
sbb
rcrb
in
mov
and
rolb
mov
pop
cmpsl
in
fiadds
dec
xlat
lret
inc
jb
leave
lds
les
or
fmulp
push
arpl
popf
cmp
popa
adc
add
mov
push
mov
imul
adc
cld
in
mov
dec
cmp
sti
je
mov
inc
scas
or
and
cmpl
int
push
inc
inc
sub
int3
mov
inc
xor
movsb
pop
sti
je
cwtl
test
negl
shll
loopne
inc
xchg
into
sbb
ficomps
out
test
lods
fwait
inc
jle
pop
lret
stos
or
lods
fwait
inc
inc
mov
lea
dec
inc
push
movsl
jl
test
adc
mov
cmpl
icebp
xor
out
mov
in
scas
and
jge
ficompl
jmp
mov
stc
dec
std
or
pop
imull
outsl
pushf
fsubrp
pop
mov
stos
testl
ror
xchg
xchg
das
mov
mov
jo
std
push
push
imul
das
jno
outsl
sub
mov
or
hlt
jp
xchg
cmpsb
sbb
push
and
fwait
sub
popa
sbb
sub
push
xor
xorl
cmpsb
idiv
cli
aam
cmp
mov
mov
adc
dec
push
or
cli
sbb
push
loop
inc
mov
negl
stos
stos
mov
xor
xchg
xchg
or
and
enter
bsf
shr
mov
inc
insb
sub
imul
pushf
or
dec
jl
fs
call
lahf
insb
jmp
pop
xorl
mov
out
mov
leave
jecxz
mov
stos
push
shlb
cmp
repnz
out
inc
outsl
or
pop
sub
repnz
xor
add
sahf
cltd
sub
stc
mov
mov
push
or
jecxz
add
jnp
scas
ret
je
pushf
push
pop
push
xor
jb
test
leave
xchg
imul
push
les
mov
mov
add
or
ficomps
ret
int
nop
lods
mov
into
sahf
jo
adc
mov
sub
fisubrs
or
jmp
mov
xchg
ds
aad
sarb
mov
jb
shlb
dec
insl
jle
xor
add
mov
adc
shll
cld
push
loope
pusha
dec
stos
fadds
lods
out
outsl
enter
xchg
sub
push
mov
stos
inc
in
fabs
ret
sub
adc
addr16
cmp
lahf
ret
sbb
xchg
dec
pop
xor
ss
sub
outsl
leave
ret
les
jb
inc
sbbl
leave
int
or
and
shll
jmp
lret
andb
adc
enter
outsb
push
xchg
jmp
mov
mov
cmp
shr
cli
sti
out
and
cld
sbb
or
or
jae
jp
mov
push
ficompl
add
popa
iret
icebp
test
pop
add
mov
aam
mov
add
es
mov
cmp
dec
jp
dec
fcoml
mov
sub
mov
xor
mov
push
xor
rsm
push
cs
cltd
xor
xchg
push
imul
mov
sub
insl
dec
ret
xchg
mov
mov
inc
das
in
mov
sbb
jg
scas
xchg
rcrl
jo
loop
inc
pop
cmp
lcall
and
push
mov
lock
outsb
pushf
dec
mov
mov
mov
mov
rcrl
imul
sub
out
movsb
decl
cmpsb
mov
sbb
cli
mov
push
xor
imul
cmpsl
idivl
cmp
notb
ja
mov
push
lahf
test
xor
movsbl
inc
xchg
movsb
hlt
mov
js
shl
into
lret
and
adc
and
push
push
lret
adc
mov
sub
adc
xor
dec
xor
and
xchg
leave
lret
aas
in
mov
add
in
xchg
cli
xchg
lods
cltd
loope
xchg
ret
inc
cmpsl
and
mov
std
sar
cmp
adc
sub
enter
std
sub
xchg
xchg
jl
pop
pop
cs
push
scas
mov
hlt
sahf
and
int
mov
mov
js
push
out
in
mov
jnp
mov
push
andl
sub
push
mov
pop
push
dec
call
stos
jb
sub
pop
sbb
js
cmp
and
fst
pushf
push
sub
sti
xor
aam
xlat
hlt
test
cmpb
push
daa
fiadds
cmp
mov
sub
pop
in
mov
inc
jmp
ds
push
iret
loope
dec
loope
pushf
xchg
in
push
jo
cmp
jp
sub
fildl
jo
sub
push
mov
sub
mov
ret
xor
stos
add
mov
adc
andb
push
int
xchg
dec
test
mov
pushf
push
insb
ret
je
pop
test
cld
fisubl
pop
scas
push
rclb
xorl
lods
push
and
addr16
mov
lea
das
cmp
xchg
loopne
adc
push
icebp
push
out
cmp
mov
dec
gs
js
mov
js
stos
lock
xor
shrb
cltd
inc
add
jnp
and
mov
sahf
popf
dec
jns
or
hlt
pop
push
clc
sub
xchg
push
loopne
inc
bnd
xlat
outsl
xor
adc
or
push
cmp
aad
xchg
dec
or
dec
push
ljmp
jno
imul
aas
rcrb
mov
mov
out
pop
cmp
mov
add
enter
add
loop
inc
sub
shrb
or
cmp
rorb
jae
leave
int3
mov
jbe
mov
cmp
jnp
stc
mov
mov
imul
xchg
xor
dec
mov
jmp
rorl
or
divb
test
inc
cmp
insb
xor
jbe
adc
pop
xchg
loop
out
lcall
inc
push
dec
sub
sub
outsl
dec
mov
xor
sub
lret
sub
lds
xlat
fnstenv
rcrb
cwtl
imul
mov
jno
mov
or
cmp
mov
lcall
into
jns
mov
mov
lret
std
lds
lock
push
enter
or
arpl
sub
mov
btc
inc
hlt
enter
sub
add
push
or
into
xorb
cld
call
stos
or
fs
jmp
ja
js
push
or
adc
xchg
sub
xchg
data16
push
insb
insb
jp
push
xor
fld
xchg
gs
cmp
testl
cli
mov
mov
ss
push
popa
mov
jl
mov
or
leave
cmpsl
add
add
insl
or
inc
adc
aad
ret
not
xchg
ror
arpl
adc
outsb
inc
and
mov
push
ljmp
sub
inc
xchg
or
xor
stos
negl
mov
and
aam
mov
jg
mov
insb
push
insl
mov
fsubl
cmpsb
add
cmp
insl
not
or
dec
aam
mov
xchg
fdivs
pushf
xor
cmp
sti
sub
mov
push
mov
inc
out
xchg
fdivr
fdivl
or
int3
xor
pop
clc
cmp
push
imul
cs
xor
jp
imul
inc
fmuls
fstl
and
mov
mov
mov
loopne
aad
das
mov
and
nop
jb
jns
and
in
push
outsb
or
push
shlb
mov
cmp
jp
mov
adc
mov
loopne
cmc
jns
xor
dec
adc
sub
out
fs
fsts
adc
mov
in
pushf
push
daa
arpl
jnp
jmp
dec
push
dec
inc
out
sbb
insb
push
js
into
call
dec
dec
ss
push
in
inc
cld
xchg
jge
xchg
ret
mov
adc
lock
mov
mov
xorb
in
cmp
and
cmp
mov
jle
or
lods
push
jecxz
mov
ds
out
or
in
loope
arpl
sbbl
lds
xchg
push
out
push
add
ljmp
cld
pusha
sbb
push
insb
out
and
ja
push
adc
mov
mov
ss
push
cmp
loope
outsl
mov
lods
jae
mov
iret
subb
ja
push
jbe
fidivrs
xchg
xchg
cmp
testb
sub
add
pop
cmp
aas
lods
fcoms
imul
xchg
inc
adc
mov
pusha
and
jp
clc
adc
inc
mov
mov
arpl
adc
sbb
les
or
sub
shl
and
and
inc
sub
outsb
sub
xor
ja
push
pusha
in
int3
gs
out
adc
sub
outsl
shlb
test
mov
pop
mov
adc
leave
jl
cmpsl
loop
fucomip
in
xchg
or
pop
cmp
dec
jne
mov
int
fs
pop
ljmp
pop
cmpsb
xlat
test
add
not
loop
aam
sub
cmpsl
into
cmp
push
dec
cmp
test
and
sbbl
cmp
xor
or
bnd
adcb
lcall
popa
out
push
dec
ficoml
imul
loopne
in
xor
mov
add
das
mov
push
cmpsl
cmp
push
shll
jecxz
xchg
xchg
or
jo
add
insl
nop
mov
je
jno
rcl
xor
rolb
cwtl
lcall
outsl
adc
sub
jp
pop
xorb
mov
jns
jb
rolb
pusha
loop
pushf
push
mov
adc
pop
sbb
dec
cmp
dec
xchg
daa
mov
ljmp
movsl
push
test
lret
shrb
push
sbb
and
fs
pop
mov
jb
pop
push
out
shr
mov
adc
repnz
imul
add
cmp
dec
or
pushf
and
ss
sbb
out
sbb
dec
bound
push
aaa
mov
lea
dec
data16
pop
in
fidivl
movsb
jge
fldt
in
mov
pushf
jnp
pop
into
and
dec
push
push
push
pop
mov
xor
gs
mov
dec
sarl
scas
dec
jne
add
and
gs
sar
jle
nop
push
jbe
lret
xchg
fwait
xor
fimull
mov
xor
je
sub
xchg
loop
aam
sbb
loope
lods
movsl
adc
es
cli
icebp
xor
jl
mov
in
cmp
adc
stc
insl
jle
incb
sbb
jnp
mov
cmc
mov
jns
mov
jns
push
add
sub
adc
xchg
sub
leave
sahf
jns
cmp
sbb
shl
sahf
sbb
xchg
xorl
xor
dec
jecxz
nop
mov
mov
sti
sbb
lds
pop
bnd
call
imul
sahf
xor
pop
imul
jp
cs
sub
cmp
cwtl
or
lret
xchg
into
push
lds
add
ds
add
cmp
fadd
gs
inc
or
scas
or
loop
push
shrb
scas
adc
xchg
divl
shrb
sahf
stos
add
repnz
ds
popf
mov
cmpsl
mov
mov
in
repz
adc
incl
div
sbb
andb
jp
mov
sub
dec
pop
push
repz
lahf
push
decl
pop
aam
mov
mov
xchg
push
in
inc
jne
push
and
lds
into
ja
test
xchg
jns
or
mov
mov
fldcw
ds
dec
mov
test
add
xchg
aaa
outsb
cmpsb
mov
inc
lahf
adc
repnz
push
xchg
push
out
in
out
subps
outsl
dec
pop
xchg
pop
ja
enter
jns
push
xor
inc
sub
ds
pop
pop
mov
aas
pop
hlt
lahf
mov
imul
mov
fiaddl
lods
dec
pusha
flds
add
fsubrl
insl
mov
lret
add
rcrl
in
dec
dec
aaa
mov
lret
js
loop
inc
xor
jle
ja
stc
out
je
insl
orl
fdivs
jne
adc
adc
inc
dec
cmp
stos
add
xor
cltd
xor
pop
fstpt
push
xor
out
adc
rcrl
int3
mov
xor
inc
mov
outsl
jp
out
jl
sub
xchg
dec
xor
stos
and
mov
lods
shl
sub
mov
jle
aam
loope
dec
mov
inc
loope
inc
sbb
ret
inc
inc
mov
cli
dec
aas
sub
repz
cmp
data16
sub
cli
xor
mov
shrb
ret
or
rclb
add
dec
hlt
ret
pop
test
mov
iret
xlat
cmp
shl
aas
push
or
nop
out
jge
out
movsl
and
sbb
sub
mov
shlb
push
imul
lds
loop
xor
pop
xchg
ret
add
pop
jp
fimull
or
out
in
or
cmp
cmpsb
mov
xor
mov
insl
pop
mov
inc
sbb
jp
fstl
mov
push
or
xor
fscale
or
mov
jae
mov
sub
push
out
cld
cmpsb
fildl
gs
call
cmc
mov
hlt
inc
xor
jne
mov
adc
cmp
cmp
in
imul
mov
push
aas
femms
jne
or
mov
arpl
ret
lods
xchg
sub
lcall
lahf
into
lods
xor
dec
lock
push
sub
or
pop
push
sub
in
dec
imul
roll
jmp
sbb
push
sub
lahf
imul
cmp
pop
movsb
adc
sbb
inc
addr16
iret
mov
lret
cmp
addr16
pop
cmp
jmp
sub
daa
cwtl
inc
ret
sub
xchg
pushl
mulb
jg
mov
jbe
cmp
or
fdivs
cmp
xor
sbb
xchg
nop
cld
pushf
cmpsl
mov
sbb
stc
inc
into
sub
int3
jo
inc
andl
mov
and
push
repnz
cmp
cwtl
lahf
sbb
pusha
fldenv
push
pop
push
lahf
imul
cmp
mov
addb
dec
addl
xchg
daa
js
pusha
push
sbb
test
mov
adc
les
adc
pop
mov
mov
mov
xchg
dec
jl
dec
jmp
mov
iret
pushf
movsl
xchg
xor
mov
lock
mov
ja
sbb
inc
mov
loop
loope
ret
test
push
jnp
dec
imul
xchg
sub
push
and
cmc
dec
aaa
push
shlb
add
add
mov
dec
xlat
or
cmp
popf
mov
mov
push
shr
xlat
mov
js
popf
cmc
outsb
dec
addr16
inc
sar
orl
ret
inc
ret
jge
pop
ss
mov
mov
mov
popa
push
sahf
jae
mov
and
jmp
xchg
bound
nop
lods
mov
jg
xchg
std
cli
adc
add
adc
fs
stc
leave
cwtl
aam
stc
add
jno
mov
sub
pop
inc
adc
or
je
arpl
bnd
std
sub
movsl
mov
sbb
pop
sub
lds
sub
gs
movsl
lret
inc
pop
xchg
jo
adc
cs
or
add
rorl
pop
inc
ljmp
gs
xchg
sub
clc
xor
call
add
rorl
xchg
lahf
pop
push
in
fidivrs
clc
movsl
jno
movl
jbe
mov
sbb
pop
cmpsb
mov
push
loopne
add
mov
hlt
adc
sub
test
scas
pop
insb
inc
mov
inc
xor
js
data16
sub
or
mov
in
cmc
push
push
ret
adc
lcall
sbb
lret
adc
negb
dec
adc
mov
mov
add
pop
push
sahf
sbb
bnd
test
xchg
out
inc
dec
shrb
cltd
adc
jmp
push
pop
push
pop
pop
sub
and
outsb
adc
fcmovnu
mov
add
int3
aaa
arpl
dec
sub
cmc
jg
movsl
nop
roll
pop
nop
xchg
shrb
xor
inc
cmpsb
cmc
mov
or
stos
xor
nop
rorb
inc
lcall
into
xorl
and
cs
imul
mov
ret
inc
push
mov
aas
ret
jnp
scas
sahf
or
ds
in
mov
stc
mov
or
sub
lea
pop
xlat
cltd
add
pop
dec
pop
imul
rcrb
xchg
sub
jmp
lcall
ret
scas
xchg
or
mov
push
add
test
push
push
push
and
xchg
fsubp
add
mov
fiadds
scas
sub
roll
fs
lods
cmp
dec
push
lods
stos
fwait
jno
mov
repnz
inc
mov
enter
dec
js
mov
jnp
negl
jns
lds
dec
sbb
add
arpl
lret
fildl
sbb
push
xchg
jmp
sub
inc
pop
int
push
mov
xchg
jl
mov
mov
nop
add
addr16
push
arpl
mov
inc
mov
mov
jbe
mov
mov
cmpsb
sbb
data16
xchg
inc
jbe
push
xchg
ds
pop
and
adc
test
imulb
jbe
ss
xrelease
push
bound
sub
dec
cmc
std
insl
aam
arpl
mov
data16
inc
jns
push
pop
mov
xor
cmp
or
test
andb
repnz
jge
movsb
sub
sbb
mov
shrb
cmp
rcl
xor
push
sbb
dec
inc
hlt
cmp
es
xchg
inc
mov
xchg
mov
and
sysret
jecxz
mov
or
jb
ficompl
sahf
je
hlt
stos
aad
xor
ja
jmp
cmpsb
or
adc
dec
xlat
inc
popa
and
xchg
sahf
loop
pop
add
push
jg
inc
loope
mov
or
jbe
ja
mov
mov
test
push
loopne
pusha
enter
int3
push
jp,pt
pop
jg
fwait
jo
or
dec
mov
aad
and
repz
mov
add
dec
bound
stos
stos
lea
insl
jo
add
push
aam
icebp
dec
jge
xchg
cmp
dec
pusha
inc
sbb
das
cltd
outsb
lahf
shlb
aam
pop
dec
lods
add
rcrl
insl
mov
push
xchg
ja
push
push
pop
ret
in
roll
add
push
aas
mov
ljmp
movsl
mov
inc
cwtl
testl
aas
call
ret
xchg
dec
jbe
lods
in
push
lock
mov
or
lret
pusha
jecxz
int
ja
jecxz
testb
push
xor
stos
jno
sbb
add
mov
je
enter
ljmp
lock
out
cmp
out
push
cmp
lahf
mov
jae
push
arpl
in
nop
pop
shlb
inc
push
addb
ss
arpl
stos
mov
pop
mov
outsl
bound
call
pop
aaa
rorl
mov
fcoml
xlat
pushf
pop
hlt
pop
jp
dec
inc
scas
xchg
dec
pop
fcmove
add
push
sub
and
add
outsl
imul
ret
dec
sbb
out
push
sarl
scas
mov
mov
mov
lea
lea
es
xchg
addr16
inc
cmpsb
outsl
dec
xchg
or
push
push
arpl
sbb
inc
push
mov
pop
sub
fmull
lret
and
push
sbb
jns
fidivrs
lds
lock
mov
icebp
mov
xor
popa
mov
dec
movsb
jae
outsb
xor
jbe
xor
frstor
dec
adcb
aas
pop
outsl
shll
popf
roll
dec
pop
xlat
clc
gs
rclb
sbb
shr
xor
push
out
cli
xor
or
xchg
xor
sbb
sahf
jae
decw
stos
dec
sbb
out
add
xchg
push
pushf
mov
shrb
mov
mov
xchg
inc
nop
dec
fidivl
push
nop
fnstsw
sbb
lea
cmp
cmp
lods
shlb
repnz
icebp
daa
push
pop
and
clc
outsl
aam
push
inc
and
inc
pop
and
testb
pop
fs
arpl
or
popf
or
pop
or
cmc
test
or
sbb
mov
jae
push
and
adc
fstpl
sbb
fs
xor
mov
inc
inc
out
mov
pop
cmp
ficompl
mov
sbb
pop
jo
and
push
push
sbb
ss
mov
jp
daa
popf
in
sub
aaa
cmp
push
cmp
hlt
dec
cmp
push
sbbb
pushf
leave
cmp
stos
cmp
inc
xlat
bound
das
leave
or
push
jp
rcrl
push
add
sbb
mov
add
cmp
or
imul
sub
enter
or
jmp
mov
ss
jge
pop
lret
dec
push
adc
pop
jnp
sbb
sub
jmp
repnz
sbb
pushf
imul
out
dec
xchg
roll
adc
cwtl
rorb
inc
pop
lahf
dec
in
cmp
push
les
cmp
cmpsl
fadd
jbe
fptan
std
push
push
loop
sbb
or
and
repz
xchg
add
inc
int3
mov
xor
imul
repnz
push
add
std
movsl
lret
sbb
addr16
pop
stos
enter
subb
or
test
mov
xchg
inc
mov
jne
mov
add
test
std
xchg
fcoms
add
out
inc
cwtl
jns
and
sbb
mov
sbb
mov
mov
dec
leave
push
sbb
or
dec
cli
add
cmpsb
sub
nop
add
mov
lods
lods
sbb
jae
das
push
adc
out
mov
mulb
aaa
xchg
or
aas
sbb
sub
sarl
fwait
fisubrl
mov
stos
adc
xchg
pusha
popa
sbb
repz
insb
pop
sahf
mov
mov
xchg
dec
xor
mov
xor
or
mov
pop
sbb
or
jnp
mov
fistl
inc
dec
dec
pop
inc
cmp
add
fistpl
xchg
pushf
mov
sbbl
std
jmp
push
pushf
das
iret
lds
arpl
fucomip
shlb
in
lock
daa
mov
insl
xlat
sub
stos
sbb
mov
adc
adc
mov
fldcw
cmpsl
cmp
and
rcll
std
std
pop
xchg
jp
icebp
testb
inc
es
aaa
repz
je
mov
jae
add
jae
scas
sub
cmpsl
sub
mov
lds
sbb
or
pop
push
jne
mov
pusha
and
mov
cli
ret
and
xor
pop
shll
stc
xor
dec
ret
ror
jo
dec
jo
imul
popa
jnp
inc
incl
mov
inc
mov
mov
repz
lods
pop
cs
or
or
pushl
mov
pop
cld
test
fdivl
int
js
jne
loop
and
jle
fstp
cwtl
mov
insb
loope
pop
vpshufhw
xor
mov
cmpb
and
pop
pop
mov
sti
pushl
jae
mov
sarb
adc
sbb
push
popa
divb
mulb
xor
sbb
test
mov
mov
mov
mov
add
iret
popf
jno
repz
mov
lds
push
sbb
xor
mov
or
xor
jae
mov
scas
or
xor
cld
test
mov
push
pop
add
loopne
and
and
inc
mov
add
or
jmp
xchg
insb
fiaddl
sti
xor
sti
ret
xchg
shll
push
mov
jbe
push
push
fimuls
ss
mov
jne
cmovnp
inc
xchg
imul
and
jae
ret
les
fists
rcrb
push
cmp
test
add
test
mov
dec
movsl
sub
jo
dec
adc
jae
mov
cmpsl
push
scas
mov
sbb
call
pop
inc
cwtl
ljmp
mov
xchg
pop
mov
xor
mov
test
leave
aas
mov
scas
loopne
dec
aam
dec
xchg
pop
and
sar
push
push
and
cmp
mov
mov
les
cmp
js
mov
repz
sbb
mov
in
mov
pop
mov
xchg
cwtl
push
pushl
imul
into
imul
fiaddl
sub
mov
sub
push
pop
mov
test
lret
mov
add
jbe
sbb
push
cmpsb
les
and
xor
test
cmpsl
xor
outsb
adc
add
inc
out
lea
mov
insb
daa
xchg
pop
movsl
ja
dec
popf
xlat
fsubr
test
dec
add
add
inc
push
pusha
mov
dec
movsl
js
bound
dec
call
push
into
pusha
xorl
inc
stc
xor
xchg
sbb
xor
mov
lahf
xlat
push
and
sbb
lret
add
lret
lds
addr16
jbe
adc
ja
jl
bound
rorb
dec
call
repz
loopne
cmc
js
inc
cld
fidivrl
push
stos
sbb
pop
mov
mov
xchg
in
rorl
out
sub
adc
aaa
pop
lcall
inc
pushf
push
lea
out
inc
inc
push
cld
xor
add
cmp
sbb
mov
leave
shll
add
push
sbb
pop
pusha
sarl
push
dec
xchg
xor
cmpsl
pop
cvtps2pd
push
lds
sbb
xor
sbb
fildll
mov
je
push
cmp
xchg
lcall
cmpsb
push
dec
mov
je
cmc
and
testl
adc
cmp
addr16
jne
mov
pop
push
inc
pop
add
push
dec
cmovns
pop
mov
shr
mov
movsb
push
xor
jle
mov
arpl
add
hlt
mov
jp
rorl
and
mov
je
aaa
mov
xchg
sub
add
dec
cmp
das
xor
cmpsb
js
sahf
mov
in
add
adc
ss
outsb
and
dec
insl
dec
std
and
jo
int
stc
jle
xchg
invlpg
mov
mov
loope
dec
lds
jnp
cmpsb
sbb
aad
test
xor
dec
cmp
jecxz
test
mov
add
mov
adc
add
mov
fcomi
push
jnp
cli
push
movsb
cs
push
insb
popa
pop
sbb
push
outsb
dec
jns
jmp
adc
dec
idivl
ljmp
scas
rcll
sub
ret
adc
inc
shl
xchg
orb
cmc
aam
test
in
xchg
mov
sub
ret
lcall
cs
call
stc
outsl
mov
mov
sahf
sub
push
push
mov
dec
jecxz
add
push
lcall
xlat
bnd
add
inc
cmp
cmpsb
cmpsb
mov
xor
pop
insb
xor
or
fldt
sub
mov
or
repnz
shrb
out
and
add
sbb
sub
fimull
jge
mov
or
insl
sbb
inc
lock
and
mov
sub
xchg
loope
das
or
out
aaa
push
repnz
sub
out
pop
popf
jo
dec
mov
pop
popf
jle
rcrb
mov
in
test
mov
xor
cmp
lret
xor
cs
stos
out
push
divl
outsl
xchg
xchg
repnz
lcall
pusha
xchg
rolb
in
adcb
jge
lods
movw
pop
xchg
cmc
rol
mov
dec
mov
fbld
push
inc
push
bound
adc
dec
lret
mov
push
test
ret
mov
aam
push
outsb
fld
jle
repz
popl
hlt
pop
mov
pop
jl
mov
test
insl
loop
fsubrs
or
adc
imul
scas
xor
adc
pushf
cmp
in
dec
jle
mov
lahf
mov
push
xor
test
adc
insb
movsb
sbb
push
cmpsl
inc
add
jnp
jns
or
rclb
cmp
mov
sahf
pop
aaa
fwait
shr
dec
mov
add
mov
push
jl
jecxz
pop
xor
mov
mov
clc
jb
cltd
pop
push
test
paddusb
cltd
push
push
cmc
in
stos
pop
into
outsb
mov
cmp
enter
jl
ds
ret
sub
pop
ffree
xchg
cwtl
sahf
ja
clc
loop
sub
lds
xor
iret
hlt
int3
add
mov
and
pop
cmp
pop
call
iret
adc
jmp
pop
mov
sub
dec
mov
nop
out
rolb
xlat
push
pop
cltd
sti
jno
add
dec
jecxz
inc
adc
jmp
pop
pop
xor
pop
sar
mov
adc
daa
pop
or
das
mov
mov
jae
gs
mov
iret
insb
adc
jmp
aaa
mov
pop
and
and
hlt
mov
pop
ret
into
in
orb
mov
stos
sbb
cmovo
insb
sbb
cmp
sbb
inc
mov
and
shll
mov
push
xchg
jb
jbe
insb
fs
cmp
and
mov
push
notl
dec
xchg
mov
xor
pop
jmp
dec
mov
and
cmp
sbb
subb
sbb
ficoml
pop
fisttpll
shr
jl
add
xchg
jmp
jns
mov
outsl
aam
cwtl
or
test
scas
sbb
mov
cmp
xor
push
mov
mov
mov
mov
bound
mov
incw
mov
mull
test
popf
xchg
mov
mov
insb
sub
nop
lcall
adc
xchg
cli
and
ret
out
push
in
adc
xchg
cmp
adc
sti
imul
outsb
cmpsl
mov
cltd
xchg
cmpsb
xor
ds
sub
sbb
movsl
mov
fwait
cmp
mov
add
scas
push
std
cmp
popa
stc
jno
jge
fsts
ds
mulb
jbe
scas
xchg
mov
mov
lret
dec
cli
cwtl
xor
lret
cmpsl
lret
int3
sti
in
ljmp
scas
jb
in
shlb
dec
shl
fstp
loope
cmp
inc
mov
mov
rolb
std
mov
lods
or
cltd
ds
sub
nop
dec
fs
and
mov
mov
and
jnp
jecxz
or
cmp
gs
sarl
adc
shrb
dec
jnp
sub
je
cs
inc
mov
data16
into
je
sbb
sbb
pusha
jbe
fsubrs
jecxz
sahf
call
mov
lds
sub
sahf
out
lcall
sbb
jge
push
iret
fxam
jmp
mov
xchg
pop
lahf
jne
cwtl
call
test
push
lea
mov
js
push
mov
and
dec
rcrl
xchg
xor
jno
and
xchg
or
jne
nop
lods
sub
andb
mov
roll
mov
andl
aaa
mov
and
fdivrl
push
scas
and
movsl
bound
or
lret
sbb
xor
imul
xchg
insb
insl
xor
xor
mov
mov
lahf
fldl
lahf
repnz
add
xchg
jo
pop
jecxz
roll
add
pop
push
mov
dec
cmpsl
push
in
mov
adc
cmc
cltd
xchg
dec
lcall
fcoml
pop
enter
roll
xchg
orl
lret
or
mov
and
ljmp
mov
lret
shl
popa
sbbl
push
xlat
insl
push
sbbl
cmp
jmp
mov
daa
mov
pop
inc
int3
mov
mov
jmp
cmp
out
mov
das
push
pop
sbb
xchg
jl
rcrb
lea
mov
sub
push
dec
nop
dec
cmpsl
pop
or
outsl
pop
call
movsl
push
adc
xchg
dec
rorb
into
inc
push
iret
jmp
loope
insl
ja
push
loopne
loope
fs
dec
sbb
jecxz
ss
xor
sbb
sub
insb
iret
sbb
inc
loopne
scas
jmp
fwait
movsl
add
mov
inc
adc
jge
push
mov
lds
arpl
incb
xchg
fdivl
jo
mov
xor
test
inc
cmpsl
sub
jl
xchg
imul
test
negb
cwtl
push
in
dec
sub
sub
pop
enter
cmpsb
icebp
jp
mov
cmp
pop
dec
xchg
or
sub
lret
dec
decb
into
dec
mov
pop
mov
xchg
sub
push
in
filds
lods
test
sahf
cli
cmc
add
das
cmpsb
inc
ss
adc
jle
pop
xchg
and
imul
stos
push
int3
mov
aas
and
pop
inc
pop
leave
mov
arpl
fs
rcll
lods
jns
pusha
push
push
loop
movsb
adc
repz
dec
inc
neg
pop
jbe
fimull
out
xchg
cs
or
testl
int
jne
sbb
add
icebp
cmp
and
out
push
xor
or
pop
push
popf
fwait
pop
scas
push
inc
loop
andl
pop
mov
and
mov
push
aad
lods
mov
and
push
imul
and
dec
push
jmp
inc
popf
cmp
arpl
sub
mov
in
dec
lds
dec
mov
lret
mov
pop
add
mov
push
rolb
lods
sub
out
lods
outsb
neg
bound
sar
pop
mov
std
cmp
outsb
jmp
test
adc
in
jno
dec
test
scas
cmp
in
inc
movsb
les
add
aaa
cmp
imul
add
out
fnstcw
or
in
cmp
jb
or
sbb
push
push
dec
jb
ds
inc
into
mov
mov
push
dec
in
push
fdivr
out
scas
clc
inc
cwtl
or
add
dec
divb
push
push
dec
iret
outsb
das
test
in
xchg
jns
insl
sub
pop
ret
xor
mov
insl
in
imul
in
inc
dec
lret
pop
mov
sbb
add
out
or
in
int
xor
or
mov
ret
xchg
les
add
mov
xor
xor
pop
mov
jl
pop
ljmp
xlat
push
jbe
jns
jp
cs
out
cmpsl
es
enter
inc
and
movsb
popf
adc
call
les
fdivrl
rorb
lahf
mov
pop
pushw
lcall
jae
sar
cltd
dec
adc
or
lds
filds
fsubs
ret
mov
add
fdivs
push
jl
dec
je
fwait
std
sub
mov
lods
jb
mov
jl
adc
or
jne
sbb
lahf
push
idivb
call
jl
pusha
pop
lds
inc
and
dec
lods
shlb
xchg
gs
cwtl
or
seto
int
fucom
jge
mov
add
mov
cmpsb
pop
push
push
mov
lret
sbb
jmp
mov
andb
sbb
xor
xchg
adc
sbb
and
jne
sarl
idivl
rcrb
push
sub
out
mov
mov
test
pop
fstl
cmp
pop
mov
andb
dec
stos
lret
pop
mov
imul
mov
sbb
outsb
ds
pop
mov
les
sub
push
outsb
shrl
gs
mov
mov
push
dec
in
std
test
cmpsl
in
stos
xchg
or
adc
push
cmp
xchg
xorb
test
jno
mov
outsb
mov
sub
add
idivl
ja
lock
and
cmp
outsb
mov
push
test
lahf
nop
cmp
push
lock
mov
mov
clc
and
insb
rolb
ja
repz
fcompl
popf
dec
or
push
ss
push
and
add
pop
test
push
dec
pusha
imul
sbbb
xor
mov
std
xchg
dec
add
cmpsb
xor
pop
fsubs
mov
and
mov
cmp
imull
xor
insb
dec
mov
fstps
or
or
dec
loopne
xlat
xchg
dec
xchg
mov
or
lret
cmp
imul
pop
fimuls
popa
push
jle
sub
sub
mov
or
sub
inc
cmp
xor
add
push
add
loop
jge
lret
lods
out
cmp
movsb
rol
fistpll
add
mov
fmuls
jns
mov
mov
divl
aam
fld
push
jecxz
xchg
incl
lea
push
call
xchg
rcl
fildll
rcrl
arpl
adc
test
cwtl
mov
adc
jle
inc
sbb
dec
loope
cli
leave
int
neg
dec
add
xchg
jno
pop
mov
insl
ss
sbb
jp
nop
popa
adc
pop
into
es
xor
cmp
test
imulb
stos
push
sub
push
aas
bound
pop
ret
mov
lds
push
pop
cmp
adcl
xchg
pushf
inc
cwtl
sbb
arpl
push
sub
dec
adc
and
inc
sahf
push
push
push
xchg
adc
add
or
aaa
rcrl
test
imul
ljmp
push
sti
pop
mov
imul
xchg
fnstsw
jmp
jns
jne
mov
xchg
push
lods
adc
adc
mov
add
push
aad
xorb
mov
add
in
popf
mov
dec
xchg
jns
sub
in
dec
sub
cld
cmp
add
push
push
inc
pop
loopne
dec
sub
popa
pop
cmp
adc
enter
or
aas
adc
dec
mov
imul
or
data16
ret
inc
test
push
pusha
int
cwtl
fsubr
mov
insl
jge
pop
push
push
js
and
adc
inc
test
lea
mov
mov
sub
mulb
mov
es
js
mov
mov
bnd
cmp
cmp
cmp
leave
pop
jmp
out
jg
mov
and
xchg
mov
adc
jecxz
cmp
inc
or
adc
insb
mov
sbb
dec
js
mov
inc
lret
mov
loope
mov
push
lcall
mov
inc
sub
cmp
xorl
push
or
push
xchg
adc
lods
or
sub
xor
pop
lds
fmul
cmp
sub
sub
xor
fdivrp
push
testl
mov
add
imul
repz
pop
testl
xchg
lds
scas
shll
nop
mov
fistpl
pop
xchg
iret
ret
out
add
xor
add
vpsrld
fmul
pop
and
fsubl
mov
cmp
push
mov
mov
push
or
cmp
mov
mov
jp
nop
enter
add
sti
incb
xor
addr16
je
icebp
sbb
jmp
pop
mov
mov
push
sti
push
dec
cmp
ja
ret
mov
das
dec
dec
dec
xor
and
lea
mov
fs
lods
pop
lahf
pop
icebp
jmp
dec
xchg
dec
aaa
dec
or
sub
imul
ud2
xchg
push
jg
mov
cmp
sub
pmaddwd
arpl
das
jl
and
je
jmp
outsb
jae
fsubrl
xor
jne
cmc
stos
pushf
dec
xchg
sub
shll
push
popa
or
lock
out
mov
push
icebp
je
es
xor
add
test
xlat
cwtl
pusha
enter
shlb
mov
ja
jne
out
push
dec
push
sub
pop
push
movhlps
inc
mov
xor
in
sub
data16
pusha
push
inc
adc
neg
xchg
jns
pop
pusha
popa
ljmp
inc
cmp
int3
daa
mov
add
xor
pop
xchg
repnz
fdivrs
mov
imul
jb
and
outsb
movsl
xchg
push
dec
mov
adc
cmc
sbbl
pop
pop
scas
adc
jnp
jb
pop
inc
lods
in
mov
cwtl
jae
in
sub
adc
out
adc
dec
cmp
pushf
dec
outsl
xor
add
std
or
mov
adc
fcoml
fdivr
rorb
mulb
cmpsb
jmp
js
fsub
jbe
dec
sbb
cmp
xorl
pop
test
nop
add
ljmp
je
pop
push
sbb
inc
outsl
add
lret
push
aaa
in
mov
mov
mov
std
loope
mov
arpl
jmp
jo
mov
jl
in
and
icebp
push
xor
imul
into
pop
fildl
jno
scas
sbb
xor
jmp
aaa
sbb
adc
clc
je
add
dec
subl
push
lcall
in
inc
jp
sbb
xor
call
pop
mov
sbb
push
jge
mov
push
jp
aaa
popa
jbe
adc
dec
mov
es
inc
mov
in
lcall
adc
imul
sub
mov
je
add
pop
imul
or
lret
sub
bound
dec
aaa
mov
and
inc
dec
ret
arpl
mov
sub
inc
nopl
daa
xchg
movsl
and
push
shrb
inc
mov
lahf
push
in
icebp
repnz
lock
imul
orl
mov
sti
ror
cs
cmp
or
pop
int
sahf
cmp
repnz
lahf
adc
sar
mov
sbbb
mov
xchg
in
adc
mov
out
mov
sbb
jnp
sub
cmp
lods
mov
adc
scas
jb
rorb
or
xchg
and
repz
inc
inc
pusha
fwait
inc
dec
xchg
ds
add
xor
out
xchg
cmp
xor
sbb
dec
and
sbb
mov
sbb
in
fdivr
stc
mov
cmpsb
dec
icebp
bound
sub
test
outsl
pop
sqrtps
out
int
daa
imul
divl
insb
sbbb
mov
movsb
mov
push
mov
ja
scas
imull
les
mov
xchg
mov
mov
mov
stc
adc
pushf
lret
mov
test
mov
test
inc
jg
fwait
repz
mov
dec
lahf
push
repnz
mov
stos
dec
scas
xor
outsl
movsl
popa
aam
xor
xchg
stc
fld
test
inc
pop
xor
ja
add
jne
fwait
and
push
pop
fbstp
mov
mov
les
pop
fbstp
cmc
mov
xchg
mull
cld
adc
xbegin
js
pop
dec
lretw
add
mov
in
or
fs
dec
lret
dec
lret
gs
sahf
cmp
pusha
std
out
fildll
shll
sub
mov
orl
stos
es
push
rcrl
lret
paddb
and
rcrl
inc
imul
mov
icebp
xchg
pop
movsb
dec
gs
sti
dec
pop
dec
push
cmc
insl
sahf
data16
out
mov
es
addb
nop
mov
inc
pop
jb
scas
pushf
test
pop
fidivrs
sbb
je
xchg
je
push
fwait
mov
test
sarl
mov
aas
push
pop
dec
dec
and
aas
mov
jg
shl
sub
rcll
test
xor
xlat
pop
mull
add
dec
jae
and
jno
and
std
imul
mov
inc
sub
fs
dec
lea
pop
movsl
xorb
loopne
jbe
sbb
fcmovnb
xchg
xor
dec
mov
cmpsl
ljmp
fsts
cmpsl
cmp
ret
rcll
push
push
cld
sbb
pusha
or
push
mov
jbe
out
std
pop
adc
cltd
mov
loopne
adc
bound
and
insl
adc
and
int
fisttpl
lock
sub
pop
in
pop
mov
dec
stos
clc
dec
fcom
lcall
out
xor
mov
cltd
pop
jle
xor
repnz
dec
sbb
repz
sahf
sub
cltd
mov
adc
dec
jl
fistl
ljmp
xor
aam
icebp
dec
inc
stos
shrl
aaa
stos
adc
mov
ret
inc
in
adc
adc
add
xlat
jb
lret
and
jl
mov
imul
adc
into
es
mov
fwait
cmp
or
hlt
out
insl
mov
ud2
add
jo
mov
test
icebp
sahf
insl
into
cmpl
pop
push
outsl
cltd
mov
repnz
dec
and
xchg
xchg
ja
inc
jecxz
xchg
mov
movsb
lods
lods
xor
mov
stos
aad
cmp
lds
cmpl
imul
popf
cmp
neg
mov
cmpsb
mov
sub
push
fldt
jae
dec
popa
inc
push
inc
data16
mov
call
std
sbb
pop
int
push
insb
jp
out
jo
mov
jno
stos
out
xor
fistl
sbb
push
inc
inc
xor
je
mov
and
fistl
mov
std
push
cmp
push
jp
out
inc
out
and
incl
or
lret
in
cmp
shr
shlb
sti
dec
push
insb
cs
pop
mov
dec
push
shll
xor
sahf
fimull
xor
cld
fistpll
aaa
or
adc
and
or
cmp
push
cmc
jg
hlt
mov
cmp
push
push
add
or
out
xchg
add
insb
mov
mov
stos
xchg
andb
insl
mov
pusha
aas
jl
dec
aas
adc
add
stos
insl
add
lret
inc
lret
cmp
pusha
call
push
arpl
sbb
test
out
mov
daa
out
mov
notb
in
jmp
mov
sbbl
sbb
and
adc
sbb
ror
mov
sbb
fsubr
loop
jb
filds
ljmp
inc
test
in
ret
stos
dec
xor
in
lea
scas
popa
sub
aad
les
and
mov
or
xchg
stos
and
push
jno
push
jge
lahf
dec
push
push
mov
fnsave
inc
mov
rclb
push
mov
push
repnz
sub
jecxz
in
ja
jbe
testb
cmpsb
mov
rclb
out
jg
adc
je
loop
fs
lock
sbbb
push
add
je
or
nop
rcrl
out
lods
dec
or
jne
dec
jp
aaa
fildl
dec
sbb
xchg
daa
add
inc
sbbl
jmp
cmp
sub
jnp
sub
test
or
xchg
je
data16
mov
fwait
out
add
sub
data16
sbb
push
stc
jae
add
mov
push
xor
lock
gs
imul
lfs
xchg
ja
sahf
push
data16
in
popf
outsb
pop
iret
adc
stc
add
inc
jg
sbb
and
push
lret
push
mov
iret
enter
dec
xlat
shll
stos
push
test
dec
mov
cmpsl
xchg
jne
cmpsb
add
outsb
pop
add
cmp
mov
fs
push
sub
or
adc
lret
fnstsw
jecxz
cmc
jne
xchg
loop
scas
pushf
roll
and
push
leave
rcrl
ss
push
aaa
test
add
int3
pop
jne
je
push
cmpsb
testl
rcr
std
cwtl
sti
cmp
sbb
cltd
out
dec
dec
push
iret
mov
aaa
je
daa
pusha
xor
popf
and
lret
jne,pn
jl
inc
fs
pusha
push
fimull
adc
iret
sbbl
and
orb
push
imul
mov
mov
push
ret
inc
push
hlt
lahf
outsb
xchg
xchg
inc
jl
or
push
cmp
xchg
lcall
cmpsb
cmc
add
dec
stos
mov
push
clc
jbe
in
fcomps
sub
popa
adc
out
mov
ret
inc
fsts
jae
push
loope
add
sub
and
jp
div
adc
sbb
dec
cli
aas
xor
cmc
adc
dec
rcrb
and
or
out
sub
mov
push
shlb
cli
andl
adc
push
notl
scas
add
mov
push
pop
aaa
xor
js
adc
out
adc
adc
jl
sub
xchg
adc
lcall
stc
push
mov
shl
lods
call
inc
push
fucomip
dec
aaa
fisubrl
daa
dec
cmp
xchg
lock
push
ds
adc
in
ja
cmpsb
jp
add
imul
fnsave
cld
daa
mov
adc
dec
xchg
push
aas
popf
mov
mov
orb
xor
idivb
cwtl
ret
movl
icebp
cwtl
aad
fmull
push
in
stc
negl
imul
cmp
aad
cld
mov
js
daa
adc
inc
test
cmp
loope
xor
in
sub
adc
fwait
std
sbb
sbb
mov
add
and
jge
pushf
gs
cmp
hlt
cwtl
push
mulb
or
cmp
ret
int
test
sbb
jb
lahf
lret
loopne
stc
adc
fcmovnbe
xchg
add
fcmovnu
cli
es
cmp
sub
xlat
lds
fisttpl
cmpb
xchg
dec
imul
adc
int
into
xchg
mov
aas
mov
mov
vrsqrtps
imul
fwait
inc
inc
lcall
cmp
imull
out
lret
fnsave
int3
add
mov
dec
lock
xchg
and
add
stc
jo
add
or
cld
fnstcw
test
lods
add
inc
sbb
insb
pusha
mov
pop
cmpsb
inc
sti
xchg
rorb
xchg
push
cmpsb
cmp
adc
scas
pop
sbb
sti
lock
fisubrl
movsb
jl
lods
dec
lods
repnz
push
push
push
adc
push
push
cli
pop
pop
popa
dec
rcrl
pop
push
mov
inc
pop
sti
and
cmp
cmp
inc
test
pop
push
lds
push
inc
ja
jbe
mov
pop
xor
and
out
in
mov
icebp
push
mov
loope
lds
xor
outsb
in
mov
repnz
pop
rclb
dec
pop
xor
cmp
and
rcr
mov
fiadds
out
sub
shr
sub
andl
pop
adc
mov
ja
mov
fcompl
push
adc
test
inc
fmulp
rorb
stc
mov
nop
lods
cmpsl
dec
xlat
fdivp
fdivl
outsl
loopne
xchg
imul
pushf
and
jle
and
push
and
test
mov
adc
sub
shll
pop
add
cli
addr16
pop
mov
mov
dec
dec
mov
mov
imul
push
cwtl
sub
mov
ja
xor
rcl
and
shr
pushf
adc
jae
fucom
loop
test
sbb
xor
xchg
xchg
adc
jb
mov
mov
or
rolb
int
jae
adc
xor
movsb
out
adc
test
and
or
sub
dec
in
outsb
push
push
or
in
cmp
fadd
mov
sbb
es
lret
xchg
cmp
xor
ret
or
out
mov
mov
iret
inc
inc
inc
and
loop
aaa
jns
sbb
pop
andb
cmp
push
xchg
cmpsb
int
sbb
xchg
inc
dec
pop
xchg
pop
mov
into
fbld
movb
push
push
and
cmp
popf
jne
pop
les
addr16
iret
lcall
sti
cs
mov
test
loopne
or
in
jne
movb
gs
scas
cmpsl
cmp
jae
mov
and
insl
dec
mov
mov
jno
insb
loopne
xor
mov
shl
xchg
shrl
dec
add
pop
jle
jge
cmpsl
jg
mov
jnp
push
push
add
aaa
scas
jb
jbe
mov
push
icebp
and
leave
jnp
and
cmp
cwtl
inc
push
sub
mov
cmc
mov
outsb
xchg
lods
into
sti
rorl
mov
cli
xor
imul
rolb
sbb
add
inc
jp
push
dec
sub
mov
inc
scas
mov
xchg
mov
mov
dec
add
hlt
adc
or
stos
mov
int3
push
aaa
fucomp
cmp
shl
pop
jl
xchg
popf
xchg
dec
inc
xchg
incl
aaa
into
or
add
inc
push
or
cld
add
dec
cmpsb
pop
xchg
cltd
push
sub
std
mov
aas
add
roll
add
mov
addr16
repz
mov
loop
jne
jno
in
pop
pop
icebp
repz
xor
test
inc
loope
mov
inc
shll
cs
mov
lods
ljmp
jl
xor
nop
div
or
sbb
mov
fwait
cmp
push
and
sbb
gs
pop
movsb
outsl
addb
in
jb
mov
enter
inc
insl
mov
jge
into
sub
int
insb
sub
pop
xchg
jecxz
add
push
outsb
jp
cli
fwait
outsb
and
sub
mov
adcb
pop
adc
push
dec
sub
pop
gs
jle
mov
jb
popa
and
shrl
xchg
xor
movsl
sbb
stos
lods
fisttpl
xchg
and
mov
pusha
or
fsub
sub
mov
dec
bound
sub
shl
mov
es
sbb
subl
mov
call
push
lret
mov
js
lock
sub
jb
inc
out
mov
mov
test
inc
int3
or
ret
add
flds
pop
dec
sbb
xor
push
xor
add
pop
push
cmp
jnp
push
jle
imul
shr
insb
lcall
std
imul
out
rcll
bound
push
adcb
lret
push
movups
js
mov
pop
out
lods
xchg
cmp
gs
hlt
push
ds
cmp
pop
ret
xchg
aad
and
movsl
mov
popa
adc
cmc
notb
ja
cltd
push
and
or
clc
xor
jo
inc
and
push
jns
sub
lret
sub
add
daa
push
mov
sti
jle
insb
or
inc
xor
stos
ret
pop
repnz
movsl
ja
sbb
iret
insl
mov
mov
push
and
jnp
negb
xchg
and
mov
lahf
clc
dec
sub
call
cltd
stos
sub
iret
xor
dec
jg
das
push
outsb
shr
dec
mov
inc
mov
lahf
lahf
sbb
xor
mov
pop
mov
jns
test
cs
jmp
mov
lods
add
std
pop
mov
cld
into
dec
or
pop
mov
iret
and
aam
pop
inc
iret
outsb
aam
hlt
and
jl
idivl
cmp
push
xor
sbb
and
sub
dec
icebp
xlat
push
das
jge
push
cmpsl
pop
xor
adc
je
jb
inc
dec
push
sbb
adc
sub
adc
mov
subb
jg
pop
inc
mov
rcrb
pop
mov
dec
add
js
outsl
push
rcll
sarb
clc
push
ficompl
or
adc
mov
das
and
loope
mov
ss
nop
das
pusha
mov
cmp
int
jae
int
inc
pop
hlt
orb
jecxz
mov
mov
inc
cmpsl
loop
aam
add
leave
repnz
loope
add
mov
mov
mov
jae
cs
int3
and
and
sub
lret
and
sub
js
push
loope
fldl
dec
dec
mov
inc
test
movsl
int
xor
sub
and
es
xor
and
out
idivb
sbb
insl
jge
inc
push
inc
mov
or
sub
push
std
cmp
jb
jnp
pusha
xlat
les
and
add
subl
push
mov
ljmp
sub
push
sub
std
inc
and
sbb
in
scas
jne
or
mov
add
les
sub
jae
mov
xchg
jnp
shl
inc
cmp
int3
sub
pop
mov
sub
shr
adc
dec
lret
mov
bound
mov
cmp
and
sub
sbb
testl
stc
gs
arpl
les
aad
push
dec
xchg
outsl
subl
shlb
jne
daa
sbb
jmp
lcall
int
ja
lahf
data16
data16
mov
cmpsl
pop
icebp
leave
dec
and
mov
jae
inc
call
inc
mov
daa
mov
jno
and
mov
imul
pop
aam
pop
out
sahf
xor
scas
negb
xchg
aas
xor
pushf
xchg
add
divl
adc
adc
sbbl
jns
nop
adc
mov
imul
xor
jmp
lea
adc
push
or
ja
in
mov
inc
cmc
mov
add
pop
js
mov
outsl
pusha
aad
icebp
mov
rorb
aad
dec
jns
insl
jmp
fldcw
xchg
sub
testb
adc
xorl
inc
pop
jae
inc
ja
mov
test
scas
mov
lcall
push
xor
dec
pop
outsb
push
std
or
les
dec
mov
xchg
out
lcall
or
mov
mov
insl
shrb
aaa
sub
pop
shrb
jp
cld
dec
xor
shr
push
add
sbb
sarl
push
pop
cmp
lock
roll
sub
jo
mov
test
mov
shlb
sub
repnz
lret
aam
pcmpeqd
xchg
movsb
ret
fs
je
mov
pop
mov
test
sub
adc
es
push
out
pop
fdivl
pop
lods
ds
mov
sub
and
cwtl
lret
pusha
jp
mov
sub
sti
cld
ja
lahf
in
in
repz
lods
enter
pop
fmull
push
mov
inc
ficoms
aaa
xchg
mov
xchg
dec
addr16
or
mov
fistps
or
push
outsb
imul
add
insl
repnz
lea
cmpl
aad
enter
push
cld
jmp
pop
xchg
push
pop
push
inc
loopne
in
test
test
std
loope
inc
cmp
out
ss
js
push
pop
pop
inc
aaa
xchg
pop
push
scas
cmp
loopne
arpl
cmp
inc
jbe
cmp
icebp
sti
scas
scas
sbb
decl
push
adc
xchg
repnz
pop
add
loop
and
cmp
je
and
addr16
mov
imull
inc
fdivl
data16
filds
gs
movsb
adc
ljmp
pop
mov
push
push
outsb
daa
sbb
jno
jge
in
cs
repz
ja
adc
andl
ret
adcb
ljmp
hlt
aam
addr16
ljmp
add
xchg
rcl
or
pushf
mov
push
shlb
notl
mov
dec
mov
lcall
xchg
mov
sbb
clc
dec
pop
mov
mov
rcr
or
aam
js
xchg
inc
jnp
daa
cmp
and
sbb
insb
notl
js
pop
pushf
loop
push
inc
mov
out
jne
dec
aas
cmp
adc
incb
pop
shlb
pop
or
jle
mov
out
cmpb
subl
push
iret
into
mov
in
lcall
sub
ret
ss
xchg
pop
insb
sbb
int3
jle
sub
fsubrl
and
fstpl
sahf
test
push
mov
inc
mov
add
cwtl
and
lock
fcom
mov
mov
pop
leave
pushf
cmpsl
mov
and
adc
dec
dec
xor
shrb
not
fnsave
fsubs
imul
cli
jae
pop
data16
gs
jne
push
mov
fwait
xor
inc
fisttpll
jo
pop
push
or
xchg
xorl
ss
imul
test
aam
push
xor
fs
lret
mov
push
dec
gs
mov
loope
into
mov
mov
and
popf
and
cmp
and
push
call
or
push
loopne
add
mov
repnz
jne
lahf
stos
and
pop
mov
and
or
lahf
sarl
test
push
out
std
lea
push
push
mov
lea
adc
jnp
push
jmp
sub
jne
jle
mov
popf
into
lahf
sub
aas
dec
sbb
cli
fwait
rol
mov
sbb
or
into
cmc
xchg
xor
addr16
mov
pusha
push
lock
fs
icebp
iret
inc
daa
push
jnp
punpckldq
mov
fcoms
jecxz
jnp
mov
jbe
mov
push
loop
mov
das
dec
std
cmp
sbb
mov
gs
inc
push
mov
jle
mov
add
outsb
xchg
jb
pop
repz
pusha
push
gs
test
mov
enter
and
inc
scas
and
xchg
test
mov
inc
imul
xor
popa
lahf
jo
icebp
jg
and
aaa
and
push
add
and
inc
loope
push
cli
dec
sbb
mov
lret
jmp
push
jge
rorb
push
add
pop
imul
pop
mov
cwtl
sahf
lea
push
cli
fisubl
daa
loopne
adc
ds
pop
or
pushf
xchg
push
repz
aaa
xchg
sti
leave
fwait
imul
xor
icebp
mov
mov
xor
inc
bound
push
arpl
in
jns
stos
jmp
aam
jge
sub
in
dec
loope
cmpsl
cmp
jno
cs
test
hlt
dec
ficoml
popl
mov
popf
in
push
scas
mov
jmp
in
mov
lret
lea
in
or
jnp
or
in
dec
inc
sub
add
push
fidivs
movsb
sub
add
dec
mov
and
pop
mov
mov
or
or
fldenv
cmp
fdivrl
lods
mov
inc
sbbl
mov
bound
aaa
ljmp
mov
add
xchg
fdivr
popf
rolb
popa
mov
sub
movnti
push
data16
stos
mov
adc
pop
lcall
dec
popf
ret
hlt
popa
pop
adc
mov
or
or
xchg
or
fucomp
or
or
pop
ljmp
bnd
inc
in
mov
pushf
std
data16
loop
rclb
cmp
popa
mov
fistpll
add
std
xchg
push
sub
mov
pushf
sub
lret
mov
xlat
cmp
sub
inc
push
jnp
add
mov
test
push
into
pop
mov
or
lret
pop
jg
xchg
cs
test
cltd
in
lock
jnp
fidivrl
scas
setg
in
pop
out
mov
and
sbb
jle
mov
ret
fcomip
out
mov
les
insl
imul
mov
xlat
dec
iret
inc
sarb
imul
mov
rclb
inc
lea
inc
dec
adc
dec
jge
stos
push
adc
push
pop
xchg
and
xor
subb
cmp
xor
fisttpll
cmp
xor
jecxz
sbb
fprem
inc
jp
pop
mov
shr
fsubs
cmp
nop
jmp
scas
lret
addr16
lea
push
addb
jne
and
sub
xor
jecxz
outsb
lcall
fwait
push
mov
in
inc
in
mov
xor
push
ret
push
mov
pop
pop
inc
movsb
push
les
cmp
outsl
stc
or
cmp
out
mov
adc
std
es
lahf
pop
adc
pushf
iret
cltd
fdivrp
jl
rcl
cmpsl
stos
hlt
push
push
in
stc
lret
out
loope
inc
cltd
enter
cmp
pop
jg
push
lahf
add
inc
push
dec
jl
and
add
dec
dec
adc
mov
pop
push
xor
dec
mov
daa
push
add
inc
pop
add
in
xchg
test
lret
xchg
ja
add
sti
clc
sbb
shll
dec
mov
push
sbb
sbbl
cmp
or
popa
repnz
ds
cmp
sub
or
adcb
dec
mov
mov
jle
iret
mov
in
xchg
lcall
xchg
aaa
scas
inc
jl
add
jno
out
push
mov
sub
or
cmp
sbb
xchg
cli
inc
movsb
jl
push
xchg
iret
lods
inc
mov
mov
lcall
rclb
arpl
fs
fsubr
in
pop
mov
xor
cmp
addr16
xor
cld
push
and
adc
jno
das
adc
dec
fcoml
icebp
sar
lcall
xchg
call
test
loop
movsb
hlt
add
jno
repnz
pop
addr16
ficoms
stos
xor
das
pop
push
in
gs
jb,pn
imul
mov
push
movsb
xor
push
insb
pop
je
cmp
pushf
jl
sahf
into
jg
pop
inc
std
popf
pop
dec
adc
clc
add
and
xchg
fnstenv
xor
lcall
jmp
fmul
or
mov
sub
pop
dec
push
mov
cmpsl
cld
sahf
cmpsb
enter
xor
or
in
je
jb
out
mov
into
pop
ror
insb
lahf
lock
in
movsl
sbb
jo
adc
pop
cli
ret
lea
fcomps
mov
aas
inc
leave
loopne
or
addr16
jne
cltd
jp
and
cmp
dec
aam
std
pop
aaa
mov
add
inc
loopne
stc
xlat
dec
inc
pop
cmp
add
lock
loope
daa
jnp
xchg
int
mov
xor
jp
sti
outsl
pusha
movsl
ret
fistps
or
mov
in
iret
sbb
test
push
push
adc
outsl
cld
js
add
imul
outsl
dec
mov
fcmovbe
out
ss
lock
xchg
outsb
mov
dec
popa
loopne
adcl
dec
adcb
fidivrs
es
jmp
mov
scas
sub
out
aaa
push
loopne
mov
jno
testl
xor
cmp
cmp
outsl
popf
insl
dec
sbb
mov
xor
daa
xchg
and
int3
cmp
inc
or
std
int3
arpl
loop
scas
cmp
addr16
jmp
inc
inc
and
lret
stos
sar
adc
and
ret
xchg
int
cld
sbb
mov
mov
mov
out
lock
sbb
repnz
jmp
fmuls
aaa
enter
cli
mov
jmp
sub
xchg
xchg
sub
fwait
lods
dec
aad
aad
js
adc
rcll
shll
xor
call
test
mov
movsl
or
xor
sbb
push
mov
lret
das
adc
into
sbb
mov
lods
cwtl
pushf
adc
aad
xor
imul
mov
jb
test
orb
shrd
adc
pop
das
addb
int3
mul
in
fsubrs
inc
cmp
sub
cs
mov
cld
leave
and
xor
jmp
add
fistpll
add
inc
mov
or
mov
dec
cmp
lds
cltd
fnstsw
pop
enter
dec
inc
jmp
hlt
xchg
cli
les
out
cli
loop
mov
sbb
loopne
cld
leave
cltd
jns
mov
pop
test
jecxz
fidivl
pop
dec
xchg
sbb
dec
test
add
negb
in
sub
mov
popf
xchg
fisttpll
push
aas
add
xchg
fidivrs
imul
fucomip
ss
popa
sbb
cmc
adc
sbb
push
xchg
sbb
cmp
push
ds
cmp
adc
xchg
lods
adc
shll
xor
cwtl
and
dec
adc
cmp
ja
movsb
mov
push
outsb
sub
jecxz
mov
test
iret
and
in
lahf
and
jl
roll
and
lea
mov
pop
pop
pop
mov
inc
les
adc
inc
es
ljmp
xor
mov
inc
sbb
and
aaa
into
xchg
pop
push
in
aad
xchg
xchg
or
es
iret
jl
mov
pop
and
add
icebp
adc
push
test
inc
xor
test
mov
movsb
fs
jp
jns
cmpsl
lds
and
fnstsw
int
mov
jl
scas
push
lret
xor
cmpl
xchg
cmp
les
cmp
xchg
adc
mov
sti
es
arpl
inc
iret
push
mov
push
cli
sbb
lcall
pop
cmp
rcll
adc
pop
ja
xchg
push
mov
and
xor
dec
xchg
ss
cltd
inc
add
sub
and
sbb
mov
mov
mov
mov
xorb
aas
arpl
mov
iret
cmp
mov
sar
xchg
fwait
sub
stos
outsl
xor
lods
inc
mov
filds
inc
rcr
inc
inc
cld
call
lret
sbb
inc
ds
out
jno
mov
mov
or
lock
mov
mov
mov
movsl
inc
sbbb
icebp
cmp
add
push
cli
add
cmp
fwait
xor
xor
inc
push
sbbb
call
push
inc
enter
stc
cmp
xchg
push
xchg
cwtl
jns
dec
sub
scas
push
mov
xor
add
push
fsubl
fstpt
outsb
into
add
mov
sbb
cld
pop
shlb
cld
call
sub
xor
fcompl
or
lahf
jne
cmp
xchg
fiadds
test
and
cmp
int3
sbb
mov
add
mov
bnd
or
movsb
cmp
mov
imul
mov
lret
push
cld
push
mov
aad
pop
cmp
adc
aam
mov
xor
lret
push
lods
shr
fwait
pop
mov
jecxz
push
pop
xchg
cmpsl
xlat
into
or
cmp
cli
add
mov
mov
adc
lret
movsl
data16
das
data16
ret
xor
or
add
lahf
js
or
fnstcw
shl
adc
add
dec
pusha
mov
mov
in
test
sbb
enter
jle
jge
jbe
iret
or
fs
pop
push
xor
popf
or
cmp
daa
push
lcall
jbe
fbld
fstl
stos
cmpsl
lret
sahf
insl
popf
mov
adc
mov
clc
cmp
aad
lods
enter
test
push
push
sti
add
fs
lock
ljmp
and
js
cwtl
adc
sbb
xor
xchg
popa
inc
dec
enter
pusha
mov
pop
fs
mov
add
cmp
orb
lahf
out
popf
and
pop
mov
lds
sarl
loop,pt
in
loop
push
cmp
cli
jl
sbb
sbbb
out
adc
out
push
push
pop
out
jne
int3
push
push
enter
frstor
faddl
imul
jl
xchg
mov
push
push
or
test
and
jge
adc
jne
in
push
mov
jle
aad
sarl
cmp
mov
lahf
xchg
inc
in
jecxz
enter
push
pop
or
sub
pusha
and
pushf
mov
mov
inc
gs
inc
sub
mov
and
mov
ds
aas
mov
and
inc
and
nop
stos
test
mov
and
add
movsb
mov
mov
orl
cmc
mov
mov
lods
lods
sbb
sub
test
nop
fstpl
jb
or
dec
mov
je
andb
mov
inc
cmp
inc
mov
aad
test
imul
lods
dec
cld
out
aaa
jo
inc
add
mov
cmovs
outsb
sahf
bound
mov
scas
scas
int
add
pop
pop
aaa
popa
lcall
and
pop
add
adc
jne
sbb
es
inc
jecxz
fcomps
dec
jmp
into
sbb
cli
xchg
into
jmp
pop
adc
push
sbb
int3
adc
sbb
sub
test
push
mov
cmp
push
cli
xlat
add
popf
push
into
ljmp
dec
popa
lahf
lret
insl
add
and
push
pop
dec
shrl
add
popf
scas
cmpsb
mov
adc
aas
mov
mov
push
sub
jle
stos
inc
sub
adc
sub
pusha
bound
rcl
jge
pop
loopne
xchg
flds
in
lret
mov
mov
insb
leave
loope
xlat
in
xchg
add
rcr
or
popa
mov
decl
rolb
or
and
scas
out
out
mov
pop
fimull
or
testb
push
push
cld
aas
lahf
cmpsb
mov
push
shufps
out
aam
cltd
or
movsl
in
and
mov
sar
pop
adc
ficomps
pop
inc
push
add
and
sbb
int
sub
sbb
insb
inc
loop
out
cmpsl
and
adc
std
test
add
mov
in
rorl
adc
outsl
pop
add
inc
dec
push
cmpsb
cmp
fistpl
lahf
push
jbe
jno
pop
inc
clc
add
sbb
mov
idivb
lahf
fsubr
sub
les
dec
or
pop
cld
aas
pop
stos
dec
imul
or
cmp
test
sbb
sub
dec
fs
cmp
adc
and
int3
xchg
aaa
pop
fisubs
adc
stos
addr16
push
sarl
cmpsb
pop
add
pop
hlt
mov
lcall
cmp
and
repz
or
pop
sbb
stc
jno
pop
repnz
je
xchg
mov
call
popa
mov
push
fisttps
push
mov
dec
mov
mov
sbb
mov
shlb
popa
pop
out
outsb
iret
lret
xor
inc
and
aaa
in
xchg
outsb
sbb
popa
push
push
cltd
test
inc
pop
vmwrite
inc
dec
jmp
mov
jbe
mov
idiv
sbb
mov
imul
ss
fcomps
push
and
ret
nop
xorl
insb
bound
push
rcl
pusha
add
negb
data16
mov
or
sbb
ret
xchg
mov
adc
inc
and
ds
enter
sbbl
mov
lods
inc
sbb
sti
xchg
adc
pusha
jg
sub
pop
and
mov
enter
and
sbb
hlt
lods
mov
cmp
cmp
ret
cld
adc
arpl
add
inc
cmp
data16
jg
das
cmc
or
leave
ficompl
mov
push
mov
inc
adc
andl
jnp
push
cmpl
push
sbbl
loopne
dec
and
mulb
ja
int
sbb
insb
ljmp
sbb
mov
ss
scas
pushf
jae
aaa
fsubrl
pop
mov
scas
aad
lods
inc
stos
cmp
aad
test
in
testl
cmc
push
stc
fstps
jns
lahf
push
std
push
jb
cwtl
roll
jge
ds
pop
mov
testl
loopne
push
dec
and
adc
sub
adc
ret
jmp
lahf
or
iret
leave
inc
mov
and
mov
xor
sbb
add
sub
mov
outsb
jae
jb
bound
push
jecxz
sub
mov
mov
sti
and
pop
fwait
lret
jecxz
dec
sbb
pop
movsl
xchg
inc
arpl
pusha
fwait
push
test
mov
dec
js
adc
shrb
jp
ficoms
push
and
pop
enter
xchg
les
inc
sub
lods
lret
cmp
setg
inc
mov
fisubrs
int3
jne
and
icebp
sbb
and
in
loope
mov
jecxz
ret
in
jge
int
sbb
js
mov
xor
das
sahf
lods
jg
sahf
ljmp
adcb
pop
enter
inc
mov
dec
gs
pop
cmp
cmp
inc
inc
jle
scas
jo
pop
fistl
call
cmp
leave
fstl
lea
bound
mov
push
xchg
mov
rolb
cmpsl
cmpsl
and
and
leave
and
lret
jp
push
sbb
in
add
push
sbb
push
sub
ret
sub
gs
adc
shr
pop
pop
ret
cs
arpl
movsl
pop
dec
cmpb
sahf
mov
jae
fmuls
push
jecxz
dec
inc
test
jmp
hlt
jne
pop
add
add
and
leave
add
ja
add
sti
fidivrs
xchg
add
inc
mov
push
push
inc
mov
movsb
pop
gs
sbb
inc
dec
ss
outsb
ss
sbb
subb
fwait
scas
fimull
adc
ljmp
cmp
mov
dec
mov
pop
sar
mov
dec
es
sub
movsl
enter
das
hlt
aas
mov
adc
in
pop
test
mov
leave
mov
fildl
lret
int3
inc
sub
bound
mov
repz
dec
pop
test
push
repz
mov
lea
xlat
or
sub
out
mov
xchg
mov
jae
les
rcll
sbb
sub
push
sbb
push
pop
int3
cmpsl
icebp
push
ja
sbb
or
lods
movsb
xor
or
cwtl
dec
xchg
or
cmp
call
jg
lods
loope
push
imulb
ss
ss
push
pop
movsl
into
pop
insb
enter
repz
add
lret
loope
loope
arpl
pop
repz
push
dec
jmp
arpl
cmp
mov
cli
mov
or
into
cmp
daa
mov
lret
mov
cmpsl
inc
test
jl
pop
mov
int3
lret
arpl
in
jecxz
push
out
rolb
inc
insl
push
pop
scas
arpl
cli
push
repz
dec
pop
outsb
mov
pop
push
push
cmp
cmp
sub
jle
and
push
add
or
lods
cmp
push
lock
div
jecxz
out
outsb
mov
add
stos
adc
cmp
jmp
insl
push
sbb
cmp
cmp
nop
mov
sub
fistl
ret
loope
adc
movsl
testb
dec
mov
add
sbb
adc
push
cmpsb
jecxz
int
pop
test
dec
adc
mov
cltd
ret
repz
inc
stos
adc
jne
in
into
test
or
cmpsb
ds
dec
mov
sbb
mov
test
dec
jecxz
test
sub
mov
das
add
cmpsl
xchg
add
mov
stos
or
add
dec
mov
cmp
movsl
adc
insb
negl
loopne
popf
sti
mov
mov
or
xor
mov
test
sub
inc
pop
jbe
nop
out
mov
and
jbe
and
cmpsb
xor
jns
mov
jo
fs
jecxz
dec
and
leave
ljmp
js
sbb
inc
mov
ret
push
scas
add
push
loopne
jnp
fiadds
mov
jge
repnz
pop
push
call
push
fucom
test
push
imul
ret
ret
mov
test
sub
sub
jg
sbb
lret
scas
lahf
mov
cltd
sub
mov
jae
mov
mov
jns
cmc
pop
in
xor
push
inc
js
cmp
jecxz
arpl
bound
mov
pop
sub
pop
xchg
shll
int3
out
fisubrs
mov
cmp
sahf
xor
aaa
mov
lcall
jnp
and
cwtl
jo
dec
jnp
test
movsl
enter
cmpsb
enter
jp
clc
mov
lret
dec
call
hlt
movl
int3
sar
jmp
lcall
pop
inc
cmpsb
loopne
std
sub
cmc
cmpsb
push
push
int3
or
movsl
xchg
push
add
inc
mov
int3
add
icebp
imul
lock
int
call
lods
lock
cwtl
or
lods
add
mov
mov
stos
xchg
pop
fwait
xchg
push
or
dec
arpl
sarb
insl
lods
adc
mov
repz
xchg
dec
dec
xor
sbb
pop
into
xlat
testb
and
sub
mov
aaa
add
imul
shrl
mov
movq
int
fsubs
mov
and
stos
jg
fcmove
emms
push
lcall
mov
jecxz
dec
andl
mov
lcall
mov
repz
adc
jp
mov
dec
nop
js
lcall
mov
cmc
and
sahf
push
bound
dec
scas
jmp
ljmp
pop
sub
test
push
mov
mov
ds
addr16
lods
pushl
daa
into
loop
pop
jnp
or
loopne
jg
dec
sub
or
fsts
jns
mov
push
cmp
add
popa
sti
sbb
and
mov
pushf
mov
jne
inc
in
fisttpl
cmp
pop
mov
mov
je
or
jmp
xchg
gs
icebp
sub
jecxz
mov
push
ret
rol
jl
out
and
inc
les
or
push
jo
sbb
aas
sub
dec
jns
enter
imul
fsub
and
and
outsb
push
jnp
stos
cmp
sarb
sub
push
push
shlb
and
add
mov
into
or
mov
dec
jae
and
imul
les
out
pop
jbe
sub
bound
or
repnz
xrelease
and
add
fistpl
scas
adc
push
ljmp
scas
idivl
pop
imull
out
daa
cmp
stc
sub
sbb
ret
ljmp
mov
test
ljmp
test
cmpsl
outsb
xchg
mov
lods
lods
sub
xor
or
cmp
xor
in
inc
fdiv
or
mov
mov
add
insl
adc
imul
and
add
ror
movsb
orb
inc
clc
jae
ds
mull
out
arpl
mov
lods
jno
dec
cmpl
xchg
or
push
mov
cmc
add
push
cmp
or
xchg
in
xor
lea
xchg
fsubs
test
xor
or
xchg
fnsave
clc
das
int3
adc
jnp
jmp
cld
jmp
dec
es
into
hlt
adc
dec
pop
int
sbb
int3
lcall
mov
inc
pop
push
lods
loopne
gs
popa
idivl
dec
ja
ds
sbb
jo
stos
ficompl
adc
addb
inc
xchg
fwait
jmp
sti
push
xor
mov
fildll
lods
test
int
xchg
jp
pushf
cmc
mov
mov
and
mov
or
mov
mov
xor
mov
pushf
mov
cmpsb
aam
push
cmp
xor
out
adc
pop
nop
mov
pop
and
andb
js
popl
hlt
divl
in
inc
sarb
cmp
jb
push
jne
test
pop
sti
stos
mov
sub
addr16
jp
mov
mov
ds
fsub
push
xchg
cmp
and
cs
mov
ret
in
and
mov
jmp
das
sbb
xchg
sbb
mov
repz
jnp
jg
push
fstpl
out
in
jl
out
sbb
dec
dec
mov
and
cmpsb
mov
cmp
xor
mov
pop
jg
xlat
add
movsb
hlt
push
cmpxchg
or
inc
xchg
jo
clc
cs
cmp
cltd
ljmp
jge
insl
pop
std
orl
adc
mov
shlb
fwait
loop
bound
adc
jns
jg
jne
push
test
stc
outsb
adc
mov
aas
dec
loope
mov
int
movsl
in
jns
mov
mov
sarb
sbb
pop
jb
lret
test
popf
pop
fistpll
and
jne
repnz
jmp
jne
jl
inc
jecxz
adc
push
cmp
dec
cmpsl
shlb
out
sbb
xor
mov
pop
push
sub
es
fistpll
cld
mov
sub
mov
adc
sub
push
out
fisubs
sub
inc
test
add
or
jge
arpl
push
and
rcr
sahf
in
cwtl
push
mov
pop
cltd
insb
cs
stos
test
pop
sahf
es
sbb
sub
cmp
stos
push
clc
std
test
lret
loopne
in
pop
add
dec
movsl
testb
dec
jl
or
mov
lret
hlt
sub
mov
inc
xor
mov
inc
sub
ret
addr16
outsl
js
cmp
pop
lds
add
cmp
sti
jp
mov
cmp
mov
sbb
lods
call
mov
ja
nop
mov
fisttps
fcmovbe
es
rcll
popf
cmp
mov
mov
sahf
or
sbb
jbe
movsl
iret
jmp
clc
cmpsb
stos
stc
mov
je
sub
lahf
mov
out
push
outsb
out
lods
pop
lea
push
xor
push
rcrl
xchg
xchg
adc
insl
mov
jge
and
mov
mov
je
jo
jne
lock
call
enter
push
cmp
ds
cltd
imul
pop
lret
rcl
pop
mov
add
add
jge
movsb
in
jne
lahf
lcall
repnz
cmp
push
push
xchg
cmp
imul
in
inc
pushf
out
xchg
lds
lods
mov
dec
adc
mov
mov
lret
push
int3
inc
out
or
sti
aaa
stos
arpl
dec
leave
int3
fwait
mov
loop
fstpl
pop
lock
movsl
sub
repz
xchg
mov
dec
das
dec
jg
lods
xor
sbb
mov
mov
mov
or
pop
ss
mov
out
cwtl
inc
xor
jo
mov
adc
roll
xchg
test
cmc
ja
push
outsb
mov
fstps
mov
mov
ret
movsb
sbb
data16
lock
add
or
fwait
aas
pushl
mov
mov
clc
mov
int
out
sahf
xchg
jmp
pop
xchg
push
mov
testb
dec
mov
inc
adc
pop
sub
insl
push
idivl
sub
loop
sub
xchg
xchg
sti
jecxz
dec
loop
cmc
push
inc
inc
cmpsb
shl
loope
pop
cmp
inc
sbb
pusha
nop
cmp
ss
mov
xor
rolb
pop
jo
dec
pminsw
imul
mov
aad
std
in
mov
sarb
jecxz
lods
push
nop
jg
aad
mov
out
mov
cmp
push
in
lret
loope
cwtl
aam
add
push
sub
pop
mov
xchg
shrl
mov
jmp
cwtl
pop
in
mov
adc
mov
lret
out
movsl
jbe
xchg
js
incl
into
arpl
aam
or
popf
negl
leave
mov
cmpsb
sahf
and
jmp
cmpsl
movsb
pop
imul
mov
pop
mov
xchg
loop
lret
lcall
jbe
jb
aam
fs
xor
mov
scas
adc
xchg
pop
jbe
fsubs
fld
es
orb
cltd
sti
pusha
into
push
dec
cmp
or
out
sub
jne
fsubrs
loopne
mov
inc
rorl
cmp
notb
aam
mov
adc
mov
xchg
mov
pop
mov
adc
filds
mov
pop
je
add
sub
push
mov
sahf
push
les
arpl
sub
adc
test
jmp
xchg
mov
mov
xor
add
pop
dec
outsb
mov
dec
mov
mov
ja
addr16
aas
test
pop
cltd
add
shll
adc
add
insl
stc
out
nop
pop
lock
je
stc
fisubrs
cmp
mov
dec
or
push
decb
pushf
shl
andl
icebp
mov
popl
pushf
inc
or
mov
inc
std
notb
iret
jnp
in
push
repnz
dec
test
xchg
insb
gs
add
mov
sahf
inc
adc
lahf
pushf
push
mov
stos
push
cmpsb
xor
inc
in
jmp
add
xchg
xlat
and
ret
inc
enter
lods
and
mov
leave
sbb
mov
das
add
stos
pop
lahf
dec
push
les
pop
cmp
in
imul
jp
jnp
xlat
popf
and
sbb
jne
ret
insl
xor
mov
and
aas
sbb
stos
mov
daa
xor
js
movsl
pop
stc
sbb
outsb
cmp
push
iret
push
cmp
fcmovnb
mov
xor
data16
pop
pop
dec
lods
dec
pop
xchg
inc
imul
xor
pop
pop
jg
addl
adc
out
adc
jmp
add
dec
fsts
stc
dec
popa
lret
rep
leave
mov
jno
dec
pop
jecxz
jge
dec
mov
sub
xchg
insb
int
or
in
movsl
enter
inc
inc
and
push
bound
mov
bound
push
cmp
les
sub
lahf
loope
cmp
inc
mov
jle
sahf
pop
fcmovb
pop
dec
xchg
jns
bound
jmp
stos
fildll
cli
adc
leave
imul
in
cmp
xor
pop
push
mov
lret
aam
mov
sti
add
aaa
mov
jmp
pop
xor
jg
sti
mov
cmp
mov
aas
adc
inc
or
pop
add
jne
mov
fistps
mov
pop
repnz
or
out
mov
fistl
mov
sbb
negl
add
adc
in
sbb
dec
cmpsb
arpl
imull
add
shlb
outsl
sub
xchg
loopne
push
dec
pop
arpl
sbb
jae
mov
sbb
popf
or
mov
push
fmul
jbe
and
imul
adc
test
test
aas
test
adc
dec
xor
mov
adc
xor
sahf
mov
sbb
jae
adc
push
sbb
pop
fwait
push
mov
push
data16
movsb
xor
push
in
sub
mov
imul
aas
fiadds
and
mov
sbbb
pop
cmp
orb
pushf
outsb
jp
add
aaa
scas
in
mov
xchg
xor
stos
fcoms
or
and
in
icebp
fldt
mov
mov
xchg
push
push
repz
stc
pop
sbb
and
adc
data16
add
movsl
shlb
mov
pop
dec
stos
test
test
pop
pop
repz
in
loope
dec
xchg
sbb
out
sar
sbb
pop
gs
fldcw
out
jl
insl
lds
cmp
test
sub
ffreep
mov
lcall
mov
mov
adc
sbb
rorl
mov
insl
ss
and
pop
pusha
lret
lahf
mov
mov
inc
mov
out
jge
rolw
rorl
mov
fistpll
cmp
arpl
sahf
mov
push
push
jno
xchg
xlat
hlt
pop
jne
sti
cltd
imul
xor
mov
loop
mov
cmp
rcr
xorb
or
inc
add
fistl
andl
inc
insl
mov
test
pop
jl
jmp
fldt
fmuls
mov
in
xchg
or
jge
call
fnsave
adc
or
gs
stos
iret
mov
scas
or
xor
pop
out
xchg
jmp
add
mov
addr16
je
imul
cltd
mov
cmp
mov
mov
ret
add
xchg
movsl
lret
cld
arpl
js
inc
cltd
daa
push
jb
call
fidivl
xor
ret
cld
cmp
mov
adc
mov
cmp
test
insb
test
push
pop
ljmp
xchg
add
roll
mov
repnz
testb
jb
rcrl
jp
call
dec
cs
and
xchg
mov
cmp
pop
into
aad
cltd
shlb
mov
jbe
inc
inc
arpl
or
add
test
sub
sub
push
fadd
mov
push
aad
xor
xlat
test
cld
xlat
xchg
mov
bound
mov
add
jns
mov
xor
xchg
xor
or
dec
mov
cmpsb
push
mov
add
daa
ret
mov
gs
or
dec
inc
fiaddl
mov
push
in
sbb
push
mov
das
vpavgw
insl
jecxz
outsb
inc
jo
fs
push
inc
shlb
and
gs
sbb
out
xor
lock
push
int
xorb
mov
mov
mov
adc
and
fbstp
xchg
jo
mov
ja
and
les
aaa
adc
cmp
popa
lods
mov
fnstsw
out
out
int
push
add
pop
popf
dec
push
mov
popa
cs
hlt
sti
push
and
dec
lahf
sahf
push
sbb
mov
xchg
mov
insl
mov
push
or
scas
loopne
aam
cwtl
or
jmp
jecxz
mov
and
bound
mov
mov
or
adc
push
int
das
add
and
mov
scas
out
scas
xor
out
sub
aaa
cmp
scas
mov
sti
push
lods
xchg
orl
aas
lcall
lcall
gs
cmp
ljmp
clc
cmp
lret
ret
xorl
imul
mov
push
push
cwtl
loope
cmp
cmpsb
jae
popf
inc
add
out
inc
pushf
or
xorb
mov
dec
clc
inc
mov
pop
je
sbbl
or
push
fldcw
cmp
mov
rcrl
add
inc
and
inc
pop
mov
lds
outsl
mov
leave
fmuls
jae
push
dec
repz
sahf
sbb
aad
lds
xor
data16
inc
test
adc
sahf
inc
mov
rolb
sub
ret
mov
pop
in
dec
cmp
and
xor
std
stos
cmc
sbb
mov
insl
movsb
add
pop
fdiv
stos
bound
stos
mov
out
cmp
ret
movsb
xchg
sub
mov
stos
mov
jg
hlt
pop
enter
hlt
mov
add
lcall
ret
adc
or
fnclex
pop
cwtl
pop
loop
pusha
lcall
imul
loope
sub
imul
repz
xchg
add
in
bnd
inc
ret
test
insb
icebp
lret
insl
es
insb
fnstenv
test
cmp
insl
or
mov
sub
loope
cs
scas
stos
xor
or
mov
cwtl
adc
mov
mov
and
cld
adc
xchg
fcompl
jae
aaa
ds
fstpt
jle
xor
pop
lahf
sbb
outsl
mov
in
or
cmp
jp
or
mov
pop
mov
js
sub
push
sbb
dec
pop
mov
or
push
sub
sub
add
in
pop
ret
xor
js
mull
cmp
dec
adc
pop
sub
sub
clc
dec
mov
adc
in
pop
sahf
aad
shll
mov
xor
bound
daa
cmp
or
popa
lret
add
push
std
inc
xor
fwait
pusha
int3
xchg
test
xor
fbld
sub
lahf
pop
arpl
fbld
push
add
mov
sbb
mov
in
mov
pop
add
roll
pusha
dec
mov
dec
outsb
stos
fisttps
out
rolb
push
inc
loop
icebp
adc
fmull
push
mov
sbb
adc
fldcw
stos
pop
test
mov
mov
mov
jl
cmp
push
xor
sub
adc
in
sub
sub
mov
ffree
or
insl
inc
dec
xchg
adc
mov
inc
sahf
mov
shll
lret
int
lahf
mov
scas
lea
mov
jne
cmpsl
push
sbbl
icebp
in
test
sahf
mov
mov
test
sti
imul
jnp
les
or
scas
sar
xor
xlat
icebp
add
cwtl
bound
lahf
xor
pop
sub
cmc
inc
lret
pop
rcl
int
mov
dec
arpl
inc
xchg
into
push
push
insl
rclb
jbe
test
imul
dec
in
adc
lods
rol
fisubrl
fdivrl
incb
mov
dec
fs
mov
mov
xlat
adc
lds
test
cmpsb
in
repz
mov
dec
movntps
dec
out
jne
inc
fs
test
subb
pop
mov
dec
mov
sub
pop
imul
push
sbb
jo
mov
mov
imul
sub
sbb
cli
lods
icebp
filds
xor
xor
push
repnz
in
fucomi
cmp
xchg
roll
pop
mov
mov
out
loop
bound
jmp
mov
xor
dec
movsl
inc
jb
adcb
mov
cmp
push
sarb
lods
and
xchg
sbb
xchg
icebp
stc
dec
mov
jns
mov
adc
fwait
mov
dec
das
push
subb
xchg
ss
pop
lods
xor
insl
mov
fistps
cmp
push
fxch
lcall
or
xchg
pushl
mov
and
dec
imul
cmp
mov
arpl
lds
shll
cmc
clc
push
push
push
shlb
mov
lea
jmp
pop
lret
sarl
test
jg
cmpl
xorl
adc
insb
bound
add
leave
mov
repnz
icebp
adc
js
or
or
outsl
sbb
mov
mov
jge
pop
pop
sarl
and
les
cmpl
add
idivb
lods
jmp
in
push
ljmp
sub
mov
out
call
scas
movsl
js
test
push
inc
dec
dec
xchg
testl
daa
shlb
fnsave
push
xchg
cmpsb
xchg
test
loopne
inc
cmp
popa
and
lcall
add
test
mov
testl
cmp
repz
jne
cmp
popf
mov
hlt
outsl
out
dec
mov
cli
mov
xchg
std
mov
xchg
in
dec
xor
sub
sbb
inc
jle
fsubr
ss
into
pop
ds
jae,pt
jne
outsl
and
jecxz
rcrb
ja
addr16
xor
jecxz
cld
jmp
fcompl
pop
pop
lea
aad
adc
lret
cli
imul
pusha
shlb
mov
pop
dec
sahf
lret
xchg
out
sub
fsubrs
aas
popa
neg
mov
pop
or
lock
lods
nop
test
adc
push
fadd
hlt
es
jno
int
sub
xchg
lock
mov
add
fs
sti
in
cmp
fwait
sbb
int3
mov
shrb
push
mov
es
movsb
imul
push
test
adc
bswap
adcb
std
cmp
cmc
aad
or
iret
arpl
pusha
cmpsb
sahf
sub
jge
lahf
xor
lods
fldl
aad
or
shl
fidivrs
cs
and
jne
xchg
mov
inc
lods
push
aaa
jae
cmp
ss
push
mov
scas
aaa
push
push
adc
mov
sbb
popf
mov
xor
xchg
movsl
insb
fmuls
test
fwait
subl
sub
enter
mulb
lds
cmp
mov
push
xor
inc
lds
call
add
movsb
jmp
sbb
push
arpl
inc
in
xor
pop
xor
rcrb
add
sarl
adc
cltd
mov
pop
mov
xor
jg
xchg
fistpl
insb
nop
out
popa
pushf
add
dec
cld
xchg
pop
out
and
scas
movsb
gs
dec
lea
pop
ds
mov
dec
call
mov
out
test
fidivs
add
jmp
mov
pop
stc
mov
dec
mov
cli
outsb
add
es
inc
jl
rol
push
inc
push
adc
dec
jne
sbbb
jl
add
imul
hlt
or
out
imul
mov
xchg
dec
roll
daa
add
push
xor
mov
jmp
and
adc
mov
jmp
out
mov
shll
mov
cmp
fxch
push
or
xchg
xor
lret
adc
out
adc
lret
xlat
into
mov
shll
sub
fcoml
or
add
push
pop
xchg
dec
in
jae
cwtl
les
loope
lods
mov
iret
xor
dec
and
sub
dec
pop
mov
insb
and
jne
fistpll
lret
loopne
mov
in
mov
aad
lea
and
add
inc
jge
cs
pop
out
pop
mov
cmp
cmp
stos
adc
sarb
pop
adc
add
mov
call
inc
es
fwait
sub
mov
push
or
pushf
add
jp
aad
fs
es
aad
push
popf
pop
aam
insl
out
pop
outsl
insb
or
mov
mov
jbe
and
test
dec
inc
dec
cld
mov
outsl
dec
or
lea
mov
sub
fldenv
push
pop
jecxz
mov
push
mov
loop
xor
test
jle
mov
inc
rcl
push
pusha
inc
divl
popf
aam
mov
daa
in
loopne
adcb
jp
sub
cltd
lods
jnp
mov
insb
repz
and
repnz
pop
pop
mov
adc
fmull
cmp
je
add
sub
fnstenv
mov
or
sub
incl
mov
push
aas
outsb
lock
stos
mov
jbe
inc
imul
push
shl
xor
xlat
inc
mov
fwait
xchg
mov
imul
adc
in
gs
lahf
insl
adc
hlt
or
dec
lret
scas
int
push
jnp
adc
dec
jb
out
inc
and
sub
inc
pop
in
adc
divl
push
out
xchg
pop
jecxz
out
push
jae
pop
add
fwait
dec
cmp
adcl
int3
cmpsb
lret
mov
adc
sub
ljmp
xchg
and
sbb
mov
popf
test
cltd
cmp
lahf
mov
nop
movsb
movsb
prefetch
pop
shrb
sbb
mov
add
sub
shll
dec
dec
mov
iret
movb
arpl
int3
sub
or
ja
gs
clc
push
femms
insb
sub
fistl
lahf
xor
in
lods
push
xchg
jb
andl
test
and
mov
mov
out
and
xlat
pop
cmp
popf
push
mov
loope
icebp
add
mov
push
test
pop
pop
sub
mov
push
fdivrl
in
jb
loope
push
scas
inc
jmp
sbb
outsl
addr16
jne
into
adc
xchg
dec
xor
mov
jl
in
add
push
rcrb
cmp
and
ret
stos
add
lea
dec
mov
inc
jmp
pop
mov
inc
mov
imul
clc
int3
std
aaa
mov
add
mov
sbb
leave
dec
xchg
call
xchg
shr
popa
insb
call
adc
push
mov
mov
add
lods
sti
fildll
rcll
data16
cld
pop
icebp
fisubrs
fadds
pop
pop
dec
adc
sti
cmp
fldt
jl
push
pop
rclb
imul
out
repnz
mov
out
test
aam
adc
xchg
sahf
mov
push
arpl
push
pop
push
lahf
addr16
in
and
std
push
jle
push
mov
xor
adc
jnp
imul
push
jge
jmp
inc
in
dec
faddp
popf
data16
daa
push
push
inc
ret
rolb
and
dec
rcr
sbb
cld
add
or
imul
dec
fcomip
sbb
xor
mov
sbb
add
xor
mov
ljmp
pop
fistps
lock
in
hlt
lret
cmp
or
ds
in
xchg
imul
jbe
jg
jle
popa
mov
fstp
xchg
call
addb
or
xchg
sbb
mov
xchg
mov
jno
mov
flds
pushl
test
clc
js
subb
adc
mov
mov
jmp
adc
cmp
jbe
jg
mov
and
jmp
sbb
jne
lds
fsts
mov
popf
pusha
dec
fists
push
das
faddp
and
cmp
mov
pop
mov
cltd
dec
rcrl
fnstsw
lcall
aaa
insb
push
enter
inc
xlat
fisttps
stc
mov
sbb
jb
sbb
adcb
fwait
push
out
lods
mov
mov
pop
adc
aaa
add
xchg
hlt
jns
bnd
sub
insl
xor
fldt
push
in
stos
mov
jmp
and
mov
sbb
cmp
inc
mov
sbb
ret
fisttpl
cs
sbb
push
andl
mov
and
cmpsb
and
fcmovu
lods
mov
mov
jb
jmp
jge
add
lret
test
add
rol
pop
sub
add
pushf
inc
cmc
fidivrl
mov
rorl
push
int3
add
inc
cli
fldcw
fs
jae
pop
js
pop
xchg
addr16
cld
adc
sahf
push
fwait
xor
call
adc
or
add
and
shrl
mov
inc
mov
pop
push
jle
mov
sbb
inc
or
adc
push
mov
jb
hlt
iret
out
jb
and
fildl
data16
lret
jo
scas
and
fisubrl
xlat
in
mov
daa
faddl
inc
xlat
mov
divb
dec
or
mov
or
add
icebp
daa
icebp
or
ss
inc
xor
add
pop
aam
jno
popf
pop
push
enter
ljmp
js
dec
int
popf
ja
or
xchg
fstpl
in
add
loope
pusha
inc
xchg
jae
mov
dec
or
cmp
and
mov
scas
inc
loopne
xchg
fldl
cld
jo
jnp
mov
jge
lahf
pop
cmp
cmp
lock
sbb
inc
and
pushf
shlb
jmp
push
dec
call
jmp
aam
pop
clc
add
dec
mov
sbb
xor
sbb
in
rolb
jl
jge
cmp
leave
ja
xchg
lret
sarl
inc
mov
push
std
inc
cmpsl
sbb
lods
xor
and
cwtl
inc
jl
sahf
std
add
inc
pop
test
mov
mov
push
aas
stos
test
ds
adcl
gs
shrb
lcall
mov
lahf
sub
xchg
daa
scas
sbb
ss
jb
sbb
pop
dec
insl
test
outsl
cli
outsl
je
and
and
in
xchg
xchg
xor
into
mov
in
data16
dec
aaa
jecxz
dec
lods
or
das
test
push
lahf
mov
movsb
cmp
sbb
fs
dec
xchg
sub
inc
daa
aaa
jle
int3
cmpl
pop
scas
cmpl
sahf
pop
or
test
push
fnstenv
fimuls
xchg
leave
mov
xchg
or
fisubrs
sti
mul
imul
jnp
cmp
cmp
fs
aam
movsl
or
das
jns
lret
loope
and
outsl
in
xchg
hlt
cmp
ja
cld
sbb
scas
fwait
std
push
aam
push
and
loope
xor
fidivrl
mov
dec
and
test
mov
push
stos
fisubrs
lret
cltd
mov
jmp
les
mov
stos
jns
pop
fs
es
out
lock
lea
add
cld
fidivl
and
ljmp
int3
cmp
or
or
out
dec
jnp
pop
aad
movsb
jecxz
fs
ss
mov
mov
add
sub
pop
in
movsb
dec
movsl
mov
cli
data16
addl
or
push
xchg
cmp
insb
cld
mov
cs
add
clc
push
push
imul
pop
jo
ljmp
mull
mov
int
add
out
sarl
aad
and
mov
lock
push
jmp
les
ret
pop
fldt
in
lea
jp
cmp
cmp
pop
jno
lcall
sub
push
les
jp
sbb
push
and
cmpsl
pop
lods
cmp
pop
aad
faddp
test
aad
popf
jb
sbb
stc
fisubs
inc
stos
cmp
daa
cmp
xchg
sbb
xchg
pop
xchg
push
jg
inc
xor
push
lds
lahf
in
cmp
in
arpl
lds
mov
cmc
xor
sbb
in
xchg
bsr
push
mov
call
adcb
lahf
leave
add
mov
push
pop
fdivp
faddp
in
iret
out
lods
xor
push
negb
push
mov
xchg
jg
js
lcall
out
loope
dec
sbb
movsb
js
adc
sub
outsl
pop
ljmp
in
cmc
mov
mov
sbb
iret
stc
inc
pop
cmp
jae
leave
imul
aaa
in
scas
jg
jne
popf
test
add
out
lods
jecxz
sub
mov
jbe
iret
aas
lea
mov
cltd
inc
insb
imul
out
les
add
sbb
shrl
lret
dec
adcb
sbb
iret
movsb
push
xor
int3
leave
adcb
or
test
leave
xor
sub
call
jmp
lahf
ja
mov
push
scas
call
sbb
dec
inc
fwait
sbbl
push
daa
mov
sbb
jle
jp
clc
push
dec
cmp
add
mov
mov
fldcw
std
mov
push
adc
outsl
hlt
out
lret
subl
mov
mov
and
mov
cmp
jnp
ss
ja
cld
inc
sub
and
adc
int
mov
cmp
mov
pushf
fsubr
cltd
scas
adc
cltd
lahf
cld
pusha
nop
mov
inc
mov
out
inc
sbb
sub
push
pop
stos
movsl
out
sub
sbb
mov
shlb
mov
jne
pop
lea
adc
dec
or
cmc
pop
jecxz
and
call
fcoms
jmp
popa
test
jl
subl
fdivrl
jbe
jge
mov
or
mov
pop
pop
jns
lods
or
movsl
push
pop
into
movsb
push
dec
cmp
xchg
aas
std
aad
popf
jmp
mov
nop
inc
mov
popa
rcl
jge
clc
clc
mov
or
push
psrlq
aad
xor
sub
fidivrl
ss
jo
mov
dec
mov
and
mov
aas
jbe
xor
sbb
mov
enter
mov
mov
jnp
rcl
xor
mov
xchg
les
sbb
or
mov
subl
popf
inc
scas
out
xor
xchg
and
jne
call
and
xor
push
gs
adc
mov
pop
jge
and
out
pop
sbb
ljmp
int
mov
lods
pop
sub
out
pop
out
xchg
or
xlat
pop
aas
fistpll
jle
sarb
sub
in
cbtw
bound
sbb
aad
sub
mov
test
cmp
movsb
sbb
lds
sbb
cwtl
mov
ljmp
fs
xchg
bnd
pop
shrl
das
push
mov
xchg
inc
mov
imull
lods
mov
inc
lock
ljmp
je
inc
cld
push
xor
out
dec
xor
pop
add
mov
insb
add
dec
ljmp
lods
outsb
arpl
call
gs
xchg
mov
or
cld
mov
xor
pusha
jg
pop
les
cmpsb
or
aad
adc
push
dec
mov
pop
xor
jg
outsl
jo
loopne
stos
xor
mov
mov
jle
popa
iret
pop
movsl
cmp
xlat
test
movsl
xchg
push
aaa
loop
cmp
jmp
pop
cmp
jnp
cltd
pop
push
std
out
pop
jecxz
lahf
outsb
sti
adc
inc
xchg
out
lea
mov
jns
inc
jmp
leave
mov
mov
inc
and
pop
and
in
add
push
dec
push
outsb
insl
and
sbb
sbb
sub
iret
inc
or
mov
add
ljmp
dec
inc
jmp
das
sbb
pop
or
insl
pop
hlt
mov
dec
and
and
into
jb
les
inc
scas
cmp
cwtl
js
jo
cli
imul
pop
fsubp
iret
mov
movsl
inc
sbb
out
xchg
aam
pop
push
pop
push
xor
sbb
mov
scas
or
sarl
icebp
jl
mov
cli
shrb
movsl
pop
pop
and
pop
int3
test
push
pop
sub
mov
out
push
pop
pop
lahf
aam
imul
fldcw
mov
into
xlat
test
out
push
out
add
mov
add
or
aas
xorl
fldcw
sbb
bound
or
xor
dec
lahf
xchg
scas
in
lcall
dec
inc
adc
test
dec
out
jns
movsl
lcall
inc
ss
add
lods
es
leave
fistpll
mov
aaa
dec
out
cmpsl
pop
daa
mov
js
dec
add
mov
ja
ret
insb
rcrl
ljmp
mov
shlb
cmp
lahf
push
and
scas
fmuls
addr16
xchg
add
mov
sbb
sbb
pop
lahf
outsb
pop
out
sbb
sbb
icebp
adc
cmp
outsl
loop
xor
push
add
pop
imul
inc
or
or
pop
js
out
rcll
jne
push
frstor
icebp
xchg
imul
jae
sbbl
sti
push
fldl
cmc
xchg
stos
jo
mov
jmp
sbb
repnz
mov
ret
ds
push
lock
loopne
in
ss
jns
or
or
loope
sub
int
xor
adc
clc
push
or
sub
shlb
leave
lods
jp
mov
and
lock
mov
xchg
in
dec
outsl
jo
je
fcomi
cmp
push
fiadds
repnz
dec
push
or
or
idiv
mov
loop
mov
mov
out
and
mov
push
inc
arpl
pop
repz
and
pop
imul
jnp
push
loopne
scas
rcll
fs
cmp
daa
sub
shlb
mov
jns
pushf
cmp
and
shrb
xchg
ljmp
out
pop
xchg
fnstenv
inc
aam
gs
add
add
bound
fisubs
ret
fsubl
fisubrl
lods
sahf
dec
adc
ds
jae
out
and
hlt
jae
and
xchg
xor
dec
movsl
subb
fwait
sahf
bound
cli
rolb
popf
jo
lods
adcl
or
pop
sub
les
nop
xchg
and
cmp
sub
and
or
fsubrl
or
pusha
hlt
test
push
and
les
jle
jp
les
stos
shll
lods
or
mov
adc
add
inc
mov
les
inc
mov
test
mov
cmp
lahf
jg
js
sbb
pop
push
inc
sahf
outsb
mov
dec
ret
insl
or
pop
sbb
add
bound
addr16
push
adc
cmp
call
in
jle
push
bound
pop
sub
mov
fiadds
jmp
push
mov
xchg
aad
stc
imul
push
inc
pusha
xchg
lcall
sub
push
inc
aas
push
fstps
add
sbbl
inc
push
or
push
imul
daa
lods
das
jmp
fdivrl
sub
inc
mov
cmp
mov
popf
jo
inc
fsubrl
sub
cmc
fsubs
xchg
pushf
mov
inc
sbb
adc
adc
adc
stos
mov
lea
nop
pusha
push
test
mov
movsb
sbb
stos
xlat
xchg
mov
sbb
pop
sbb
loopne
je
ss
xchg
pop
sbb
fidivrs
inc
pop
mov
adc
imul
movsb
ret
adc
xor
xchg
outsb
iret
rcrl
and
dec
jge
mov
xchg
rcrl
neg
pop
rol
inc
rolb
xchg
pushf
scas
lcall
xor
mov
and
ficompl
sub
dec
xchg
repnz
jae
push
fnsave
or
push
test
test
pmuludq
add
enter
dec
dec
jmp
cld
ss
jmp
sbb
and
jmp
call
cs
jl
sub
pop
loopne
xlat
loope
cmp
jbe
scas
aam
sbb
loope
cltd
std
in
cmp
test
incb
es
aaa
cs
add
and
into
jnp
test
sbb
jecxz
or
mov
cmp
push
hlt
mov
sbb
mov
shl
mov
stos
test
std
lcall
out
dec
inc
in
insl
mov
inc
mov
outsb
and
inc
cmp
mov
mov
stos
jle
mov
mov
xor
mov
out
cmpsb
lret
push
lea
mov
pop
pop
jle
cli
loop
jmp
frstor
push
jl
xor
jl
scas
fbld
bound
shr
xor
inc
das
mov
mov
out
enter
cs
shll
mov
adc
jne
les
jne
add
fisttps
outsl
call
push
mov
pop
lea
jae
shrb
out
hlt
mov
pop
xchg
mov
jg
ljmp
cli
and
mov
cwtl
xchg
mov
dec
loope
mov
iret
pop
call
test
inc
lock
scas
pop
cmpsb
xchg
test
test
bound
sti
dec
xor
sub
call
jge
ljmp
scas
sbb
jbe
lds
jnp
mov
sti
pushf
fsubs
in
lods
clc
add
lods
aaa
mov
inc
arpl
push
in
cltd
nop
add
jl
dec
cmpsb
fiadds
loopne
out
xor
cmp
repz
cli
in
jp
add
popa
cli
mov
inc
ds
les
mov
jl
leave
cmp
clc
add
call
outsl
cmp
test
or
es
movb
jl
cwtl
sbb
jp
fldt
ret
aaa
int
cmpsb
fdivl
inc
lahf
lret
je
add
aad
movsl
mov
and
or
lahf
push
das
add
rcll
push
add
lods
mov
pop
add
cmp
push
jl
xor
xchg
in
mov
outsl
ror
repnz
scas
bound
adc
cld
mov
int3
shl
xor
orb
jg
fidivl
rclb
inc
dec
daa
jmp
xchg
loop
push
jmp
push
mov
pusha
mov
or
test
ret
adc
pop
or
adc
sahf
pushl
cmp
int3
aas
cld
xchg
loopne
sbbb
xor
repz
inc
add
test
leave
ss
lret
movsl
arpl
daa
or
inc
hlt
xchg
and
pop
mov
mov
jnp
mov
jbe
in
lahf
leave
or
loop
sub
aas
rcrl
jecxz
outsb
dec
mov
aas
xchg
fcoms
mov
mov
mov
jp
outsb
add
scas
push
movsb
dec
push
sbbl
lds
jb
jle
ret
fnsave
mov
inc
mov
loopne
push
sbb
xor
fs
fmull
or
xor
mov
movsl
in
std
push
mov
sti
mov
arpl
ret
scas
sub
and
xor
cmp
jns
leave
popa
add
add
js
xchg
adc
jns
and
addr16
push
or
mov
pop
jle
cmpsb
mov
repnz
in
vcvtps2pd
pop
enter
dec
jno
add
adc
leave
lods
iret
fwait
xchg
mov
sub
ret
scas
movsb
cmp
and
jno
loop
lret
mov
push
stc
pop
loopne
push
fmuls
cli
cwtl
test
int
mov
cs
int3
adc
cmp
lods
cltd
or
cmpsl
jp
call
sbb
mov
mov
icebp
fiadds
push
mov
shlb
test
push
push
jmp
push
mov
xor
pmaxub
ljmp
mov
addb
lods
push
repnz
sbb
lock
jmp
std
jp,pn
adcl
mov
pop
and
and
daa
outsl
movsl
and
js
inc
ret
les
aad
lods
dec
xor
inc
or
mulb
repnz
pop
cmp
inc
dec
aad
and
or
cwtl
dec
loopne
dec
cmc
decb
xor
dec
xchg
ret
jno
add
or
xor
pop
jnp
pushf
push
jge
jbe
shrb
jo
and
mov
in
aaa
aaa
flds
dec
loop
int
fistpll
jle
out
lock
imul
sub
sbb
out
lock
lcall
mov
pushf
call
test
popa
fstpt
push
loopne
call
mov
push
mov
pop
bound
adc
inc
addr16
mov
je
mov
hlt
mov
pop
idivl
addr16
inc
cs
out
push
testb
sbbb
and
aam
add
mov
xor
enter
xor
and
mov
push
or
xchg
dec
pop
std
pushf
js
xor
push
cmpsl
orl
nop
int
xor
popa
stc
pop
xor
jl
lahf
and
stos
adc
or
shll
out
pop
fsubs
sub
pop
xchg
icebp
and
or
xlat
inc
or
es
and
pop
lods
js
jp
scas
or
ss
mov
jecxz
jge
lahf
cltd
mov
mov
fcomps
jns
enter
sub
repz
jns
mov
sub
jbe
mov
and
jne
ret
rclb
fiadds
movb
ret
or
ljmp
xor
fs
xchg
xchg
popa
es
push
cmp
ret
ja
out
mov
icebp
inc
test
pop
repz
adc
jne
mov
out
and
mov
cmp
iret
sti
fdivr
out
add
mov
ss
xor
cmp
mov
adc
push
je
mov
rcll
cmc
xchg
or
cld
mov
cmp
or
rorb
sub
test
push
and
xchg
push
jo
mov
sbb
sarb
sub
mov
in
cmp
xchg
ficompl
pop
mov
mov
sarl
mov
sarl
xchg
fnstcw
repz
js
mov
out
and
int3
insl
in
or
leave
loopne
stos
das
xchg
dec
call
jno
cmp
test
cmp
in
xor
or
push
mov
lcall
dec
out
ret
mov
out
push
cli
imul
subb
xor
mov
fadds
sbb
cmp
imul
adc
mov
ds
clc
incb
jnp
fcmovu
jbe
cs
and
ret
pop
adc
push
adc
icebp
xor
out
sub
lcall
jmp
xor
stc
out
out
in
dec
mov
fidivrl
out
pop
and
push
xchg
jp
push
out
xor
xor
mov
add
mov
jne
push
inc
dec
cmp
xchg
ret
xor
loop
dec
dec
sub
mov
jbe
lock
imul
loope
or
aam
mov
in
sub
xchg
mov
jmp
jp
jae
pop
pop
or
jp
lods
mov
sub
lds
xor
and
xor
xor
jb
add
mov
xlat
jne
shlb
into
or
ror
inc
test
sub
cmp
pop
pop
mov
popa
lock
cmp
dec
xor
jg
fsts
xor
shlb
lds
cmp
inc
push
mov
sub
out
cmc
fabs
sub
push
or
movntq
fsubl
jns
pop
pop
mov
ret
lock
xchg
push
cmpsl
jle
in
fs
loope
xor
mov
cpuid
xor
xor
pop
mov
pop
mov
xchg
dec
and
cmp
xorb
add
dec
jns
pop
and
dec
addr16
rorb
push
sahf
add
fcomi
lcall
jle
test
push
adc
ret
fstl
xor
hlt
jg
outsl
mov
pop
mov
mov
mov
adc
push
leave
sbb
push
inc
js
jle
mov
andb
sbb
lea
je
push
pop
add
outsb
or
sbb
xlat
mov
int
jae
or
pop
push
stos
cli
adc
hlt
lods
cli
test
mov
sti
inc
adc
insl
cltd
jne
lea
mov
jle
cmc
and
xor
push
add
lock
push
sti
fsubrp
insl
call
push
xlat
jno
clc
push
jno
out
insl
call
mov
movsb
mov
jp
shlb
cli
add
es
cltd
repnz
scas
mov
out
fsubrs
pop
sbb
enter
or
cmp
jo
dec
xor
pop
push
or
jnp
add
sub
hlt
pop
jo
std
rol
mov
pushl
arpl
xchg
xor
and
fsubl
dec
inc
outsb
lret
and
scas
push
out
jl
xor
std
stos
cmp
fldenv
out
les
or
mov
xchg
pop
or
andb
std
fcomps
pushf
adc
xchg
or
push
xor
test
add
mov
stos
outsl
pop
rcr
insb
xchg
out
add
add
andb
or
and
pop
mov
ret
jbe
add
push
popf
push
and
fiaddl
hlt
inc
ja
cltd
xor
mov
and
add
mov
sub
testb
mov
mov
xchg
xchg
addr16
and
xchg
pop
cmpsl
gs
or
fidivs
ds
fmulp
xchg
mul
iret
jp
lret
or
cmp
or
inc
mov
jecxz,pt
mov
popf
mov
mov
pop
pop
inc
scas
add
movsl
cltd
jbe
mov
clc
pop
push
mov
sti
add
das
in
ljmp
push
push
mov
cmp
pushf
sbb
fcomps
stc
test
popa
data16
push
test
or
cmp
dec
dec
lret
aam
jmp
dec
nop
rcr
cmp
xchg
lods
pop
fnstsw
std
mov
sbb
lret
mov
es
adc
popf
mov
cmp
inc
jmp
xchg
pop
jle
adc
inc
pop
jmp
addr16
mov
movq
xchg
mov
mov
aas
jne
sub
mov
jg
insl
add
lcall
imul
and
imul
mov
fs
aam
test
inc
push
jg
mov
imul
mov
or
sub
or
xlat
lahf
ret
lea
aad
pop
jne
push
dec
enter
movsb
or
add
mov
add
in
jbe
shlb
call
jle
push
xor
out
rolb
push
aaa
xlat
xor
in
stc
dec
out
loop
pop
in
rorl
cwtl
sbb
mov
cmp
and
ror
adc
sub
dec
mov
outsb
jmp
dec
dec
loop
test
and
roll
dec
sahf
leave
jae
xchg
nop
cli
dec
mulps
lea
or
sbb
push
pop
es
jae
push
test
js
and
or
sbb
dec
out
loop
xor
sub
in
jno
aad
cmpl
dec
les
adcl
xchg
xchg
roll
and
mov
mov
and
mov
jle
clc
out
push
sub
aam
std
push
cmp
js
pop
mov
rcrl
loopne
push
adc
adc
mov
leave
je
sbb
push
imul
dec
and
arpl
pop
jle
xchg
ljmp
add
rol
inc
pop
aam
loop
push
mov
test
adc
jb
and
dec
repnz
pop
lahf
add
add
sub
fisubs
sahf
or
jp
popf
adc
sbb
pop
sbb
pushf
xchg
out
imul
adc
mov
shl
sbb
add
sub
mov
mov
mov
outsl
or
push
sbb
fnsave
add
mov
lret
rcrb
adc
rorl
test
and
pop
jmp
scas
pop
popa
nop
aam
jbe
jmp
inc
push
enter
mov
repz
cs
imul
movsl
dec
outsb
xor
nop
call
pop
inc
loopne
push
bound
pop
leave
out
and
sbbl
push
adc
divl
fmuls
fsubr
gs
add
test
test
mov
mov
inc
add
fnstenv
push
call
push
xchg
jbe
sub
xchg
jmp
jo
xor
fldcw
fwait
icebp
mov
scas
fstpt
adc
push
jbe
add
jge
add
push
lods
and
movsl
loopne
shll
mov
xor
test
dec
add
push
lock
mov
push
dec
inc
adc
clc
jns
pop
jns
cmp
mov
jbe
mov
int3
fidivs
mov
mov
repnz
and
and
fld
scas
ret
pop
sbb
orl
outsb
mov
fwait
jns
mov
pushf
lods
inc
mov
lcall
push
mov
add
dec
adc
or
push
andl
sbb
and
xlat
push
stc
movsl
stos
rcll
into
pop
xor
ds
sub
insb
in
jg
int
pop
cmp
das
mov
xchg
mov
roll
out
or
fisttps
xor
stos
mov
mov
pop
cwtl
cwtl
pop
outsl
jne
outsl
pop
and
shrb
movl
ss
cltd
adc
push
jge
mov
scas
push
sub
cmp
or
or
mov
pop
mov
add
call
stc
or
fldt
imul
pop
sub
loope
add
aad
imul
ds
mov
mov
je
push
push
loopne
inc
mov
mov
mov
adc
das
and
inc
call
push
hlt
daa
leave
std
das
fs
mov
fnsave
fisubrs
leave
shrb
xchg
push
shlb
ret
or
bound
add
sbb
jno
adc
lcall
lods
push
xchg
lret
lret
pop
sbb
lret
call
data16
outsl
cmp
enter
scas
or
and
sbb
fidivrs
mov
test
lods
sub
mov
leave
test
sahf
pop
imul
fisubs
sub
leave
cld
lret
test
xchg
or
push
popa
addb
push
add
jb
icebp
daa
push
pop
rcrb
sub
add
fmul
sub
dec
cmp
fwait
jge
std
xchg
movsl
xor
sbb
jnp
loop
shl
inc
lcall
daa
das
inc
in
pop
cli
mov
xchg
nop
shll
pop
pusha
cmp
fdivrl
cwtl
mov
mov
pop
mov
jmp
sub
mov
mov
in
push
aam
dec
pop
push
dec
or
incb
sbb
push
pushf
pop
xlat
and
push
fmulp
xlat
and
adc
js
mov
jmp
shl
movsl
pop
repnz
mov
loope
clc
rcll
test
and
mov
jb
xchg
aas
int
push
cmp
movsl
or
rorl
cmc
in
mov
adc
ss
xor
cmp
addr16
jmp
scas
lods
and
push
int3
lock
add
les
mov
mov
mov
jle
loop
sbb
fs
lods
sbb
les
jecxz
push
sub
lret
ja
loopne
cmp
cmc
pop
xchg
cmpsb
mov
or
xchg
in
movsl
jnp
pop
mov
imul
xchg
cmp
movsl
mov
adc
cmp
push
adc
push
inc
pop
test
adc
xor
cmp
daa
sahf
mov
push
mov
push
adc
jg
or
add
test
in
fsubrs
fcom
out
push
push
lods
inc
jbe
fadds
cmp
mov
mov
fneni(8087
or
cltd
pop
jno
pop
rolb
adc
dec
std
inc
fs
jmp
sbb
popa
xchg
mov
cld
fildll
loop
pusha
jne
cmpb
repnz
mov
jge
cmpb
pop
in
sbb
mov
je
sub
cmp
shlb
and
xchg
jecxz
mov
jns
push
sbb
inc
stos
roll
adc
jg
orb
inc
fmuls
mov
out
or
pop
lds
sbb
sbbl
dec
fs
pop
pop
mov
cmp
rclb
mov
or
pop
movsl
jle
sbb
inc
xchg
sbb
sbb
in
inc
xor
or
stc
imul
add
mov
or
push
jns
pop
test
add
sarb
aam
push
sub
movsb
mov
adc
data16
push
out
fs
mov
xchg
nop
push
fidivrs
or
or
gs
mov
inc
lret
xchg
add
ds
notl
stos
lret
lret
rclb
push
push
ret
icebp
imul
cmp
arpl
xchg
jle
sbb
pop
adc
push
scas
lds
mov
mov
push
mov
or
ss
push
or
dec
jle
mov
push
popf
dec
dec
cmpl
mov
int3
adc
inc
mov
mov
cmp
cmc
lret
insb
and
pop
push
dec
repz
dec
shr
add
push
jge
sub
call
rclb
scas
lcall
lret
and
jg
or
fisubl
dec
or
aas
sti
je
cmpsb
movsb
jb
mov
lret
lea
cmpsb
testl
cmp
popf
sub
dec
jno
push
sahf
scas
jp
mov
mov
sti
dec
arpl
jle
mov
xchg
std
sub
in
fwait
inc
jno
mov
fsub
and
cmp
mov
stos
inc
sti
xchg
mov
jl
jmp
inc
lcall
xchg
out
cmp
jno
loope
dec
popf
lahf
pop
cwtl
or
div
jbe
pop
scas
popa
cmp
pop
pop
clc
shl
push
cmpsb
popa
rcll
pop
push
js
clc
scas
jl
push
shl
cmp
cmp
cmpsb
cmp
mov
aas
les
imul
ret
pushf
sahf
popa
mov
data16
fwait
lea
pop
adc
int3
pushf
push
mov
in
inc
aam
outsb
and
pusha
pop
push
cli
xor
pop
repz
addb
pop
mov
xor
js
pusha
adc
mov
std
test
sub
mov
cs
xchg
insb
push
push
push
lea
or
mov
hlt
jg
inc
push
jne
mov
mov
pusha
jp
xchg
outsl
ret
pop
jmp
or
sub
icebp
xor
movsb
dec
jl
jp
movsb
inc
xchg
cmp
cmp
xorb
loopne
cmp
repnz
push
ds
ret
out
or
jmp
insb
es
fmull
aam
subb
dec
or
out
roll
push
and
xor
mov
xor
jb
add
div
jns
cld
xor
jmp
std
cmp
fists
test
cmp
dec
cmp
stc
jae
rorb
and
lcall
inc
lret
std
push
jno
cmp
adc
stos
pop
xchg
push
cli
adc
fmuls
push
into
cmp
push
jnp
je
xchg
mov
add
lods
dec
xor
in
and
push
rol
pop
ja
fistpll
fisubrs
mov
add
pop
pop
sbb
inc
jns
aaa
adc
cs
lods
into
xchg
pushl
int
pop
mov
add
inc
pop
pop
cmc
decb
jnp
data16
or
or
test
mov
cld
stos
sub
inc
lods
and
add
adc
dec
nop
aam
pusha
das
or
outsl
je
adc
push
or
ja
les
loopne
outsl
sub
or
data16
cwtl
xchg
ficoml
cmpsb
xchg
movsl
jp
lahf
jb
insb
aaa
loop
clc
test
fucom
lcall
jns
lret
push
sub
aaa
jo
dec
enter
scas
fsubrl
fldcw
pop
xor
imul
sbb
pop
or
mov
imul
pop
mov
add
fstl
popa
and
gs
daa
fsts
mov
push
lock
frstor
addr16
movsb
sbb
lods
dec
add
or
clc
or
jl
push
xor
jno
cmp
push
cld
xlat
dec
add
xchg
xchg
sub
xor
filds
mov
jo
mov
mov
sub
jne
stos
sti
inc
fsts
arpl
inc
xchg
mov
in
insb
aas
popa
mov
pop
ljmp
std
std
sbb
int3
int3
adc
xor
bound
aam
pop
imul
jns
bound
inc
jb
lods
jne
jne
scas
es
fwait
dec
or
mov
mov
jo
es
cmp
push
ss
xor
out
pop
sbb
xchg
xchg
enter
icebp
int
nop
and
sets
scas
fiaddl
or
fistps
imul
pusha
sub
rcrb
and
xchg
repnz
mov
cmp
bound
rcrl
mov
cmp
decl
inc
jb
adc
sub
nop
pop
cmp
jmp
jae
daa
sub
add
inc
and
leave
pop
cmp
xchg
lcall
adc
jbe
pop
or
loop
cltd
dec
or
movsl
mov
rclb
pop
addl
rcl
pop
out
adc
in
aaa
pop
mov
inc
mov
push
aas
cmp
mov
mov
scas
fs
cmp
std
xor
and
mov
mov
arpl
cmc
aas
mov
fcmovnbe
fcompl
mov
dec
mov
dec
mov
jl
lret
jmp
sub
sbb
xor
mov
xchg
loope
rorb
and
movsl
cltd
xchg
popa
lods
cli
mov
sbb
into
les
ljmp
inc
stos
ljmp
out
sbb
jg
mov
push
lea
pop
xchg
jle
sub
add
or
lea
cli
mov
jg
leave
movsb
test
and
fistpll
sti
dec
push
imul
mov
out
pop
sub
sub
loopne
adc
jae
inc
fdivr
add
pop
shl
cmpsl
pop
insb
lods
sub
in
inc
fisttps
cli
adc
es
pushf
mov
and
addr16
push
mov
jl
push
xchg
push
and
jmp
add
aaa
sbb
out
in
out
sub
sbb
xlat
in
adc
andl
iret
ds
into
sbbl
cmp
cmpsb
fs
xchg
inc
push
or
and
mov
sub
hlt
adc
xchg
push
jo
std
lds
push
in
jmp
add
pop
mov
dec
sbb
lods
pop
scas
xchg
out
cli
sub
inc
jle
push
cli
mov
fistpll
mov
lods
dec
push
xor
mov
out
jno
mov
das
lret
mov
inc
lahf
cmp
daa
test
repz
decb
in
xchg
addr16
pushf
repnz
jl
cs
xchg
mov
les
call
pop
inc
mov
jo
dec
pop
jne
fs
sbb
fsubp
roll
pop
or
in
mov
lahf
or
insl
inc
insb
lods
nop
mov
movsl
pop
stos
movsb
stc
pop
push
pop
call
mov
cmpsb
movsb
jns
fmuls
dec
and
cmp
test
lods
mov
icebp
push
inc
inc
sub
subb
pop
fsubp
dec
sub
inc
adc
and
sub
scas
adc
and
lea
or
data16
mov
sbb
cmpsb
cmp
ljmp
test
jle
sti
jmp
imul
scas
mov
stos
ret
outsl
ja
mov
xchg
cmpsb
sub
push
ret
insb
xchg
lret
pop
movl
push
inc
pop
addb
cmpsl
add
out
jmp
adc
ficompl
lahf
sub
leave
sub
xor
add
mov
cmpsb
std
loopne
jle
xchg
mov
out
add
cmpsb
xor
fiaddl
pop
mov
dec
jno
dec
jno
ret
or
cmp
fdivrs
sbb
sub
hlt
mov
loopne
mov
cmp
xchg
test
aam
adc
ficompl
cwtl
das
inc
cli
mov
pop
xchg
mov
adc
out
jbe
cmp
xchg
jne
lods
xor
xor
lret
cmpsl
and
push
pop
imul
outsl
mov
jno
mov
sbb
xchg
push
adc
repz
and
mov
dec
fst
in
je
lods
push
inc
dec
adc
nop
sbbl
scas
clc
test
push
ret
lcall
dec
push
adc
pushf
aaa
adc
jmp
lock
inc
and
add
or
data16
popl
push
clc
inc
das
addr16
repz
mov
movsb
xor
mov
cmp
shll
jmp
scas
dec
or
xor
pop
mov
xchg
aas
mov
insb
std
jmp
xor
test
add
xchg
lret
push
push
or
leave
mov
popf
lods
sub
mov
into
pop
cmp
iret
or
das
inc
or
inc
cmp
cmp
push
or
push
xchg
dec
fs
enter
into
push
dec
lahf
jmp
push
xchg
mov
or
pop
call
je
jge
int3
pop
aas
jp
mov
iret
mov
push
or
pop
xchg
aaa
pop
adc
es
bswap
call
mov
jbe
push
cmc
leave
xor
and
imul
sub
mov
test
lods
test
imul
out
mov
mov
sbb
lea
ss
aaa
out
sbb
dec
hlt
cmp
push
ja
push
mov
mov
or
inc
pop
jno
jae
cmp
xchg
adc
push
pop
sbb
jle
clc
xor
adc
sub
nop
sub
mov
pop
sbb
mov
out
lahf
pop
daa
mov
stc
sbb
pop
incb
imul
mov
cmp
insl
jnp
push
dec
ss
fsubs
incb
pop
jo
xchg
xor
imul
dec
int3
lods
or
pop
or
mov
xchg
enter
mov
leave
sub
push
cmp
adc
das
aas
xor
mull
pop
pop
sub
sub
loop
ja
pop
add
dec
cmc
loop
sbb
sub
mov
mov
mov
lods
addr16
jle
clc
lods
pop
fdivl
push
adc
sub
adc
adc
into
lds
test
jae
pop
mov
testb
cli
mov
stos
dec
dec
daa
or
xor
mov
and
fdivrs
or
pop
xor
lret
pusha
sbb
pop
in
or
jbe
push
add
and
stos
push
add
inc
clc
gs
xchg
jne
pusha
sub
loope
mov
xor
sar
push
cltd
lret
xor
mov
in
movsb
popf
sbb
repnz
in
add
insb
mov
jge
pop
dec
sub
pushf
xchg
into
outsb
mov
push
test
nop
or
aad
lcall
lcall
lods
sbb
and
mov
test
push
popa
or
imul
cmp
pusha
shl
xor
cmc
fcmovnu
repnz
daa
ljmp
pop
das
leave
pop
xor
add
push
or
in
and
rclb
neg
shl
daa
sbb
push
mov
cmpsl
xchg
xor
outsb
test
inc
fsubrp
jb
jle
jmp
and
xor
sahf
cmp
inc
push
cwtl
cmp
adc
dec
popa
dec
xlat
pop
push
sbb
repz
ds
fstpt
arpl
adc
ficoms
bound
mov
or
cs
fstl
and
aaa
int3
xchg
dec
movsb
pop
pushf
xchg
aas
jl
fimuls
ds
pop
mov
fsubrs
pusha
cwtl
sbb
loope
add
pop
push
sub
jecxz
mov
cmp
push
xchg
xor
stc
ljmp
xor
int3
sbb
js
cmc
hlt
loop
das
xchg
push
push
sbb
sbb
cmp
jne
jae
sub
jmp
int
or
mov
push
movsl
cmpsb
shl
jg
fsubs
jnp
xchg
stos
ret
xor
fmulp
dec
push
int3
mov
aam
add
in
inc
inc
iret
femms
loopne
push
mov
sbb
xorl
sahf
cmpsl
sub
dec
shr
sbb
rclb
inc
push
cmp
push
ret
xchg
mov
hlt
lcall
std
pop
ret
es
inc
dec
jb
lock
cmpb
out
shlb
out
daa
xchg
inc
and
inc
add
mov
pushf
mov
or
ss
sbb
cmp
fs
cmpsl
push
sbb
push
inc
pop
xor
insl
out
ja
vfrczpd
addr16
mov
das
jbe
lcall
rep
xlat
ljmp
out
stos
cli
jg
stos
sub
mov
or
inc
mov
leave
adc
push
sbb
aas
out
push
hlt
xchg
ret
jnp
or
arpl
cmp
rolb
sarb
rolb
mov
stc
xchg
pop
jae
dec
adc
pop
cld
pop
loope
les
ror
pop
or
xchg
stc
jg
leave
xchg
jecxz
push
leave
pop
or
cld
pop
rolb
inc
sbb
lahf
xlat
pop
daa
lcall
imull
push
stc
sti
sub
pop
loopne
fistl
xlat
dec
jp
xchg
pop
sbb
mov
pop
shll
icebp
outsl
mov
mov
mov
push
mov
cmp
xor
pop
jmp
arpl
add
loopne
push
stos
add
inc
repnz
lahf
dec
jnp
add
dec
adc
or
mov
adc
pop
fs
or
mov
sub
pop
jmp
push
push
xorb
pop
pop
popf
xor
addr16
stos
lea
inc
mov
loope
pop
insb
int3
rorl
push
pop
cltd
pop
inc
or
inc
rcrl
mov
mov
adc
imul
mov
mov
in
dec
vpcomuw
sub
arpl
jb
lcall
and
ds
pop
mov
in
adc
adc
outsb
jae
jg
sti
mov
cmp
jmp
jecxz
aad
mov
jle
mov
hlt
outsb
pushf
scas
icebp
inc
pop
mov
pop
les
hlt
or
mov
xor
sbb
test
sbb
out
dec
adc
pop
sbbl
mov
pop
and
cmp
adc
incl
out
jbe
dec
jnp
or
outsl
aaa
xor
mov
movb
out
mov
add
push
test
daa
add
inc
lods
cmp
roll
iret
mov
out
or
setle
addr16
test
mov
pop
and
add
cmp
add
xor
sbb
inc
stos
bound
xchg
lods
daa
shlb
adc
jae
push
bound
iret
aad
loopne
and
enter
addb
inc
lods
int
jg
in
mov
in
sbb
mov
fwait
xchg
dec
pop
fmul
xchg
push
shl
mov
cmpsl
lahf
out
int
inc
mov
ljmp
xor
pop
iret
insl
push
sub
sbb
jecxz
sub
or
pop
mov
es
divb
arpl
xor
aaa
dec
push
mov
push
bound
popf
xor
fimuls
loope
sub
dec
insb
sub
push
inc
popf
or
lods
adc
rolb
dec
mov
leave
fs
pushf
jnp
xchg
inc
int3
int
push
add
adc
adc
mov
pop
mov
dec
inc
orl
jmp
scas
xor
test
push
cmp
mov
xchg
test
fwait
js
add
mov
fnsave
sub
mov
sbb
in
call
les
jl
inc
push
pushl
lcall
cmpsl
jno
cmpsb
jle
pop
xor
mov
mov
mov
jo
ljmp
mov
lret
jno
and
sub
add
push
jmp
mov
mov
inc
stc
ret
sbb
mov
adc
stos
sbb
xchg
repz
jo
out
aad
sbb
sbb
push
cmp
in
cltd
sti
repz
stos
cwtl
xor
or
sar
fmull
jnp
inc
or
and
add
pop
hlt
ds
push
std
sarl
mov
sbb
lcall
ficompl
pushf
xchg
lods
fs
and
lea
ja
mov
cmp
scas
movsl
mov
jb
roll
add
lods
xor
jae
shll
dec
mov
inc
sub
xor
and
mov
jmp
push
add
ja
fs
push
movl
inc
ret
lcall
call
loop
inc
push
push
les
jnp
mov
cmpl
icebp
mov
push
ret
pop
fsub
ficoms
and
lea
sbb
push
pop
dec
in
mov
cmpsb
pop
sub
aaa
dec
lahf
push
mov
popf
add
push
gs
gs
or
xlat
pop
dec
popa
xor
or
out
cmp
outsb
imul
mov
popf
loopne
jmp
jmp
cmp
nop
in
or
xor
mov
sub
fsubs
mov
out
es
or
in
push
sub
stos
xchg
xchg
jb
cwtl
mov
mov
sub
and
fisttpll
mov
xor
and
xor
scas
sarb
mov
popf
stos
mov
add
pop
std
push
sti
push
dec
jmp
mov
fwait
cltd
cmpb
mov
das
push
inc
out
add
jns
xchg
inc
cmp
mov
xchg
mov
inc
sbb
add
adc
fsubrl
mov
inc
rcll
mov
in
inc
lea
pop
xchg
and
pop
cmpsb
xlat
stc
test
stos
jmp
fwait
test
ret
repnz
xchg
and
popa
fninit
adc
mov
movsb
stos
sbb
in
xchg
adc
or
push
popa
out
imul
mov
sbb
sbb
xlat
mov
fimull
fst
dec
mov
or
cs
or
sub
mov
mov
sti
inc
dec
in
mov
bound
jl
shrl
add
arpl
adcl
scas
in
jne
repnz
mull
in
clc
mov
mov
mov
leave
cmp
jnp
popa
push
neg
outsb
fiaddl
dec
test
and
cmpsl
xchg
repz
push
cmp
in
jmp
jmp
lret
leave
mov
mov
and
mov
cmp
jnp
mov
outsl
cltd
push
pop
dec
ja
arpl
hlt
dec
or
rcll
xchg
jp,pt
dec
adc
jmp
and
mov
xchg
mov
add
and
push
jae
mov
mov
lds
adc
xchg
add
mov
xor
xor
jbe
sbb
mov
push
int
fistpl
lret
jl
add
mov
jne
ljmp
or
mov
mov
and
das
ljmp
leave
mulb
insb
pop
arpl
in
xchg
dec
mov
sub
fisttps
rcl
cli
add
je,pn
clc
and
adc
sbb
andl
je
lahf
shl
ss
test
or
in
adc
xchg
sbbb
jb
push
scas
lods
cmp
das
or
push
add
addr16
rclb
jnp
and
push
jne
repz
stos
imul
xchg
or
test
add
sbb
mov
cmp
dec
cld
inc
outsb
fistpl
fidivrl
add
sub
ds
add
ret
stos
addb
mov
cltd
movsl
xchg
pop
loop
cmp
in
dec
mov
cmp
adc
hlt
mov
xchg
imul
rcll
sub
sub
icebp
std
push
jns
or
fstp
inc
test
sbb
xchg
push
inc
inc
rep
xchg
push
jae
add
paddb
gs
scas
push
in
rcll
xchg
dec
pop
aaa
inc
push
cmp
rorl
data16
out
rorb
mov
inc
fwait
loope
ret
out
adcl
std
mov
mov
sbb
stos
add
fldl
in
test
pop
add
dec
xlat
sahf
add
fwait
cmp
inc
push
aad
out
sbb
xchg
or
dec
roll
push
in
mov
cmp
sbb
jae
push
or
cmp
gs
push
rcl
ds
hlt
daa
add
push
repnz
sbb
cwtl
dec
add
movsl
cmpb
flds
xchg
shr
test
lock
enter
mov
xchg
out
jmp
nop
aaa
scas
mov
mov
pop
add
scas
sbb
adc
lea
pop
inc
ficoms
movsb
jl
mov
aad
lods
scas
repz
dec
push
iret
fistpll
mov
not
adc
les
xor
xchg
repz
lret
dec
mov
in
push
mov
xchg
pop
mull
pop
push
std
nop
xchg
mov
in
dec
dec
jnp
xlat
push
fsubs
ljmp
or
jmp
dec
lods
adc
movsb
jns
push
mov
test
add
push
cltd
cli
push
xchg
es
mov
int3
jno
add
pop
mov
inc
cmp
es
rcll
adc
mov
cmpsb
ljmp
aam
mov
sahf
add
push
clc
shl
jmp
cltd
hlt
xchg
jmp
cmp
push
xor
jno
shl
and
push
popa
dec
add
sbb
xor
cmp
push
out
and
mov
sahf
in
inc
outsl
icebp
or
lds
xchg
cmp
mov
xor
push
ds
lcall
push
mov
mov
mov
arpl
fisttpll
pushf
and
aas
dec
adcl
lds
sbb
mov
push
hlt
testl
sarl
repz
loopne
sbb
stos
daa
leave
adc
lds
pop
rorb
mov
add
dec
test
mov
jle
orl
dec
mov
scas
push
cld
inc
aaa
test
loopne
outsb
dec
fucompp
in
ljmp
mov
outsb
mov
in
ja
int3
in
hlt
cmp
aas
pop
mov
test
mov
subb
imul
and
aas
or
xchg
xor
jae
mov
jb
inc
xor
outsl
inc
pinsrw
pop
lret
cmpxchg
sahf
arpl
mov
mov
stc
imul
jbe
inc
cmp
enter
push
sub
pop
shrb
insb
xlat
add
xchg
iret
fsubr
or
mov
xor
dec
lock
lods
or
xor
pop
lea
adc
fildl
mov
cltd
aaa
icebp
pop
cmp
push
in
and
mov
mov
mov
sub
loop
adc
lret
sbb
pop
into
or
adc
adc
out
jbe
dec
or
sub
mov
clc
mov
cmp
sub
inc
sbbb
fildl
add
cwtl
push
xchg
movsl
aam
jl
stc
xchg
mov
cmc
mov
js
mov
sbb
inc
pop
addr16
adc
inc
add
inc
cmp
inc
push
enter
nop
jmp
xchg
mov
js
inc
aaa
cli
cmp
or
int
lea
lea
cmp
loopne
cmp
jnp
icebp
rorl
out
aam
lcall
push
add
pop
adc
mov
add
hlt
adc
jo
out
shll
pushf
test
push
mov
inc
mov
xor
movsb
xor
mov
test
mov
outsb
jns
sbb
sbb
fwait
jae
popf
js
fdivs
jno
rclw
rclb
lods
jb
or
cld
push
repnz
adcl
mov
mov
xchg
loop
hlt
add
cmp
mov
lock
jbe
xchg
ss
je
pop
loope
testl
or
or
mov
clc
xchg
aaa
inc
sbb
mov
outsl
movsb
jl
pop
ds
mov
lds
jnp
bound
add
xlat
clc
inc
or
pop
adcl
outsb
aas
lods
jb
mov
jae
fmul
leave
stc
inc
stc
sbb
sub
fnstsw
test
imul
cwtl
and
jns
mov
mov
inc
sub
cmp
cmp
movsb
jge
xchg
xor
cmpsb
out
jae
mov
inc
lea
test
mov
data16
cmp
jae
imul
in
add
jge
sbb
sub
push
js
sbb
mov
adc
into
mov
mov
and
ja
ja
mov
push
adc
adc
mov
scas
mov
idiv
xchg
dec
xor
aas
movsb
shlb
cmpsl
cli
daa
lock
rol
cmc
mov
adc
insl
push
mov
push
mov
lods
jl
mov
cmc
xchg
or
adc
jge
test
addb
push
mov
adc
scas
int
cmp
mov
dec
jo
out
adc
aam
pop
dec
sbb
repz
dec
xor
xorl
lcall
sbb
cs
shrl
test
xor
xlat
in
lods
sti
push
lock
jg
xor
push
or
ss
inc
inc
loopne
jle
jp
push
rorl
and
pop
jae
pop
or
push
jo
sub
loop
xchg
test
cli
jno
cmpxchg
nop
std
sbb
popf
mov
and
shll
sbb
fsubrp
into
aas
pop
and
inc
icebp
push
mov
and
cld
adc
icebp
in
std
cmpsb
subl
ret
outsl
xlat
stos
push
add
pop
mov
jne
aam
jg
test
adc
jbe
add
insb
xchg
jnp
add
push
push
ds
adc
das
out
push
adc
sub
faddl
scas
adc
xchg
push
lcall
lret
hlt
sub
mov
or
jne
cmp
rol
fisubl
arpl
xor
jnp
mov
pop
or
pop
cmc
dec
sub
dec
sub
xor
push
push
sahf
sahf
lods
mov
or
outsb
or
cld
cmpb
icebp
in
lods
std
mov
ljmp
pop
jmp
repz
push
test
xlat
fs
int
icebp
cmp
fs
jo
outsl
mov
aad
push
gs
loopne
fwait
or
aas
add
test
fnstenv
xchg
sahf
mov
in
push
ret
mov
jmp
loop
aam
xor
lds
or
test
stos
xchg
inc
daa
ja
xchg
fdivl
mov
fwait
mov
jl
ret
pop
xchg
decl
and
jnp
repz
mov
je
lret
xchg
cmc
std
scas
add
fidivl
ja
in
lcall
pushf
scas
adc
lahf
pusha
and
ss
mov
jl
xor
ret
push
or
dec
or
pop
stos
imul
loop
pop
and
xor
nop
mov
push
jnp
xor
cwtl
mov
pop
int3
jl
sub
out
mov
les
and
sub
inc
xor
adc
pop
sub
test
lea
stos
jle
fnsave
outsb
adc
jge
cs
cmp
xchg
test
flds
in
inc
shlb
and
dec
ljmp
add
std
insb
jo
jp
scas
dec
les
pop
or
dec
je
mov
xchg
mov
insb
and
adc
xchg
jl
popf
call
out
dec
lea
es
push
or
xchg
sub
jp
xchg
into
or
aaa
les
jmp
into
imul
es
je
leave
stos
push
addr16
rcrb
mov
imul
mov
add
lods
pop
push
pop
sti
cmp
pop
xlat
movsb
sarl
ja
push
cli
in
mov
rorb
pop
in
push
mov
lods
mov
dec
imul
push
in
rdtsc
sti
hlt
inc
dec
jno
pusha
cmpsb
movq
and
or
fdivrs
inc
and
arpl
push
js
in
push
mov
mov
insb
adc
sbb
lret
lahf
mov
test
loop
movsl
xchg
adc
nop
and
pop
imul
jl
std
test
add
out
xor
dec
xor
jnp
pop
cmp
xchg
ds
push
jmp
das
cli
mov
push
adc
shr
push
dec
mov
rorb
sbb
lahf
mov
mov
mov
jle
adc
cmc
mov
cmp
mov
xchg
call
push
xchg
shrb
dec
mov
xlat
pop
dec
aas
dec
mov
filds
decb
adcl
movb
repnz
push
fmull
data16
cwtl
lret
xor
adc
push
fdivl
add
pop
xchg
sbb
fs
add
jb
add
movsb
stos
enter
out
ljmp
pop
js
cmp
daa
inc
pop
in
push
emms
aam
dec
xor
cmp
mov
mov
shll
xchg
xchg
xor
jl
inc
addr16
rcll
mov
data16
mov
addr16
into
in
mov
sbb
outsb
int
cld
rorb
mov
sub
add
dec
mov
dec
add
adc
sti
xchg
add
sbb
jp
mov
or
push
les
and
into
fwait
sub
orb
out
addr16
sahf
rcl
out
pop
and
mov
pop
and
or
js
cwtl
loop
cltd
jmp
push
push
mov
or
stos
add
stos
xor
in
jb
push
push
push
adc
push
enter
jae
ret
xchg
jbe
xlat
xlat
in
jnp
push
jo
sbbl
inc
sbb
aas
int
cmp
xor
subl
pop
add
mov
cld
jle
fmul
push
jnp,pn
rorb
pop
pop
mov
xchg
cli
popl
sbb
xchg
xor
pop
sub
push
clc
sti
cmp
sbb
cltd
enter
divb
out
jge
xor
fadd
imul
mov
xchg
sub
mov
xor
sarl
fildl
in
lahf
mov
xor
pop
mov
jns
outsb
repz
loopne
shlb
lock
nop
arpl
scas
mov
idivb
scas
test
inc
push
xor
push
inc
dec
stc
fwait
insb
sti
leave
inc
cmc
add
lds
int
or
jg
stos
ja
gs
sub
lret
jne
xor
dec
in
aaa
push
hlt
add
xor
imull
dec
xor
loop
xorl
mov
dec
jmp
cmpsb
dec
test
adc
mov
addb
lcall
je
bnd
out
xchg
jno
pop
pop
repz
rcrl
inc
arpl
or
jae,pn
in
mov
popf
pusha
xchg
mov
rorb
and
sbb
sti
push
fldl
test
inc
dec
push
pop
cwtl
cli
out
in
mov
js
mov
xor
outsl
in
dec
inc
sahf
sbb
das
lahf
mov
push
push
pop
xchg
push
repnz
xor
shlb
jmp
push
or
outsb
xchg
mov
lret
mov
test
fisubl
push
mov
in
jmp
xchg
xor
bound
jno
mov
nop
jb
hlt
inc
std
jns
sub
sub
push
and
fs
sahf
rcll
divb
outsb
mov
fwait
out
hlt
cmp
adc
hlt
pusha
scas
cltd
in
lods
jnp
divb
mov
sahf
nop
xor
pop
fs
push
and
xlat
push
adc
jecxz
call
adc
mov
inc
xor
sbb
or
adc
pop
stos
mov
dec
mov
push
dec
addl
sub
pop
cmp
jl
cmp
jno
or
lcall
or
cltd
test
loopne
out
pop
fmull
fimull
mov
lret
add
push
stos
lds
data16
stos
cltd
nop
jo
ficoml
push
inc
das
ret
jns
jbe
ds
mov
rclb
or
pop
nop
lock
loop
cmpsb
jbe
testl
xchg
pusha
adc
add
push
cli
leave
pop
dec
mov
insl
dec
dec
sub
test
sbb
fnstenv
jg
fcompl
adc
loope
js
and
shlb
or
decl
int
pop
inc
stos
dec
jne
cld
repnz
lret
push
xchg
test
jge
lods
ficomps
push
add
xor
xchg
mov
lods
repz
in
mov
push
mov
mov
loopne
or
popf
mov
stc
mov
mov
xchg
in
pop
into
push
push
push
loope
pop
pop
lret
pop
push
xlat
es
jl
inc
or
test
repz
mov
and
sbb
rcrb
in
movsl
dec
adc
stos
aaa
inc
pop
lahf
push
jmp
lcall
out
xchg
mov
int
and
sbb
mov
adc
push
sub
fidivl
mov
or
mov
push
xor
cmpsl
xchg
scas
jl
push
inc
icebp
sbb
xchg
scas
adc
test
sub
sub
xlat
data16
pop
jp
clc
cli
dec
jne
mov
jae
cli
xchg
test
daa
pop
pop
aas
rcrl
ja
push
push
enter
push
lret
iret
dec
sbb
stos
ja
pop
jae
in
adc
mov
imul
pop
xchg
inc
mov
mov
xchg
jmp
adc
sahf
ds
cmc
test
jp
mov
push
into
jl
mov
cld
and
mov
cmpsb
or
fsts
add
lret
negb
jno
mov
jnp
sub
push
cmp
outsb
and
mov
mov
insb
sti
ljmp
int3
pushf
sahf
into
lods
sbb
js
mov
dec
sbb
mov
aad
sub
sbb
fs
aaa
fcoms
pop
push
pop
xor
mov
cmp
cld
es
ss
xchg
mov
or
test
in
cmp
cltd
mov
pop
popa
sub
loopne
inc
xor
stos
pop
mov
sub
ja
sub
fwait
push
push
pop
push
icebp
cmp
mov
mov
sbbb
clc
outsb
cmp
dec
in
test
sbb
add
imul
call
das
aas
fadds
cmpsl
fs
jb
jno
jno
addr16
fisubrl
pop
jae
ficompl
aas
es
cmc
in
xchg
and
mov
xlat
jns
in
mov
mov
and
imul
jecxz
dec
insb
cwtl
or
fisubs
mov
adc
hlt
ja
push
test
sbb
lock
push
ret
and
dec
sbb
cs
orb
inc
dec
enter
xchg
ja
rcll
loop
pop
xlat
pmaxsw
enter
sbb
insl
addl
and
mov
pushf
insl
rol
shll
and
cld
enter
cltd
lahf
xchg
movnti
test
mov
or
testl
xchg
shlb
sbb
mov
jne
push
push
insb
shlb
xchg
jno
lcall
add
push
sbb
mov
enter
xchg
out
xor
imul
jbe
cmp
orl
mov
ds
add
stos
xor
xor
movsl
xchg
popa
fs
mov
dec
icebp
cld
fwait
fwait
popa
jns
jle
into
mov
iret
mov
psubsb
in
mov
jnp
lea
jge
mov
lea
pop
sub
dec
notl
je
or
jae
push
push
iret
xchg
shrl
mov
fisubl
repz
sub
cmp
sarl
popf
push
jne
out
rclb
outsl
jns
dec
mov
push
sbb
rcr
aas
aas
mov
fcoml
jne
sarb
mov
out
lock
fstpl
and
fdivp
push
sahf
jl
inc
sbb
cmc
sub
stos
push
mov
xor
insb
insb
sbb
or
addr16
adc
int
sub
popa
sub
cmp
clc
jge
xor
xor
lahf
setno
adc
mov
nop
cwtl
popa
pop
hlt
pushf
stos
pop
mov
inc
pop
out
inc
imul
and
subb
loopne
imul
xchg
dec
jno
pop
mov
cmp
in
cli
jge
xlat
xchg
pushf
fildll
sub
scas
or
push
add
xchg
loopne
pop
jg
pop
sahf
rcrb
xchg
enter
orb
ret
rorb
out
xchg
inc
mov
stos
add
mov
xchg
mov
pop
mulb
dec
ror
ja
mov
pusha
test
and
push
sti
pop
jo
and
fstpt
rorb
movsl
cmpsl
sub
mov
mov
mov
sti
lock
or
out
int
hlt
stc
ret
mov
out
les
mov
inc
mov
or
xor
hlt
cmp
outsb
adc
nop
mov
dec
es
cmp
xchg
movq
dec
ss
call
add
pop
vucomiss
inc
push
ljmp
mov
out
cmpsb
jg
xchg
popf
push
test
xchg
or
cmp
cli
and
pop
dec
mov
push
stc
stos
movzwl
push
or
xor
sbb
jg
adc
cmpb
push
pusha
cmc
mov
movsb
nop
in
negl
mov
aaa
jnp
ret
lahf
or
jle
lods
add
inc
test
ret
addb
andb
jp
decl
lcall
ss
scas
xlat
in
mov
cmc
ror
inc
in
sbb
arpl
sbb
push
jno
sti
loope
out
lret
mov
sbb
enter
call
inc
mov
jb
dec
pop
notl
flds
loope
outsl
scas
in
dec
mov
sbb
pop
inc
iret
lds
cmp
jg
rclb
pushf
mov
mov
lods
mov
cmpsb
jb
in
dec
xor
pop
sbb
pop
sbb
dec
pop
inc
jmp
lahf
push
leave
iret
xor
cmp
repz
cltd
pop
sub
movsb
das
and
push
out
or
jnp
ja,pn
bound
sbbb
outsl
scas
dec
mov
idivb
out
dec
cltd
repz
lods
inc
andl
div
lret
shlb
cmp
mov
addr16
jne
pop
or
jp
shlb
aaa
call
inc
clc
fisubrs
sbb
push
adc
mulb
sbb
shlb
shr
mov
mov
xchg
push
and
shlb
jno
jle
adc
shlb
adc
lret
and
xor
sub
add
in
arpl
or
les
and
scas
push
js
and
in
mov
pop
jmp
pushf
cmp
repnz
xchg
jno
pop
sub
xchg
mov
es
mov
loope
cwtl
fmulp
pop
jle
xor
cmp
imul
stos
roll
or
aad
mov
sub
inc
clc
jns
mov
imul
daa
jmp
pop
add
xor
inc
cwtl
cwtl
sarb
mov
add
aam
fs
and
in
cs
mov
lret
into
adc
outsl
aaa
sbbb
sar
imul
mov
mov
or
jecxz
outsb
push
ret
in
adc
mov
dec
or
dec
lock
push
mov
mov
std
add
jae
push
xor
cld
sub
jb
mov
cpuid
cmp
cmc
js
jp
pop
cmp
cmp
fisttps
cmc
rorb
lcall
push
dec
movsl
fbld
outsb
sub
lods
call
or
imul
fbld
xchg
adc
push
mov
mov
push
adc
lahf
add
js
outsb
mov
rcl
adc
jp
jl
push
push
cmc
or
shll
dec
sbb
and
nop
rorb
jbe
pushf
push
push
testl
push
ror
mov
xor
clc
cmpl
loope
pop
fs
mov
fisttpl
mov
sbb
lahf
xchg
push
xchg
inc
ret
lea
sbb
xchg
and
mov
sbb
mov
cwtl
loopne
add
push
out
push
xchg
mov
push
mov
mov
in
popa
lcall
repnz
xchg
bound
xchg
rclb
test
sbb
pop
lret
into
negb
loope
sub
fwait
cmp
mov
fs
mov
inc
das
fisttps
xchg
mov
and
fmuls
insb
test
cmp
xchg
add
arpl
stos
cltd
scas
popf
mov
mov
js
add
lods
int3
es
mov
bound
lea
sub
sub
movsb
sub
lods
pusha
jle
xchg
in
adc
shl
xchg
cmpl
pusha
xchg
lret
daa
popfw
nop
dec
int
mov
mov
push
mov
adc
fists
inc
inc
movsb
add
sti
ss
jle
mov
xor
fistpl
inc
and
mov
test
and
ret
lock
add
xor
mov
sub
adc
jmp
add
aaa
pop
aaa
jne
xor
dec
push
lahf
repz
inc
push
cmc
sbb
out
xor
pop
xor
rclb
pop
mov
out
inc
adc
into
or
inc
dec
aaa
or
jne
and
fldl
push
xchg
test
jmp
testb
xchg
repnz
popa
jp
in
es
sbb
push
dec
cmp
mov
fwait
out
leave
adc
and
fmulp
xchg
sub
pop
stc
dec
add
js
xchg
ret
pusha
xorb
imul
iret
pushf
mov
or
fstl
add
jnp
ds
add
pop
jnp
push
pop
test
or
lcall
adc
jb
pusha
ret
out
mov
add
les
test
mov
and
push
push
xchg
mov
test
orb
mov
add
iret
sub
shrb
cmpsb
ja
imul
inc
push
test
fidivrl
scas
cmp
mov
loopne
lcall
pusha
insb
sbb
push
lcall
add
lret
cmc
ret
pop
out
push
sbb
pusha
adc
movsl
repz
xchg
repz
jecxz
inc
dec
clc
fs
push
insb
popa
xchg
testl
xchg
jns
dec
sub
sti
dec
xlat
xor
dec
jl
aas
jle
jl
repz
test
inc
sbb
lods
mov
adc
lret
lret
dec
adc
aam
stos
xchg
aad
fbld
inc
aas
pop
ret
or
or
or
or
insl
sbb
ss
testl
loopne
aaa
icebp
push
in
xor
push
push
xorl
loop
orb
iret
nop
fdivl
notb
bound
lds
adc
xchg
mov
jl
shlb
xchg
inc
lds
repnz
and
mov
pop
std
pop
addr16
and
xchg
gs
mov
ftst
lock
int3
sbb
imul
sahf
jge
scas
sbb
inc
pop
test
sbb
stos
ss
sub
pop
fiaddl
xchg
fstl
data16
sub
test
das
aaa
std
mov
sbb
imul
cmp
pop
add
dec
push
fstpt
sub
cmpsb
cwtl
add
mov
arpl
dec
ja
dec
lock
push
pop
or
test
mov
mov
xor
push
and
imul
xchg
cmc
gs
std
cwtl
out
add
and
push
out
mov
ret
cli
mov
fs
cld
dec
jmp
shrb
xor
sub
rcrl
mov
add
lahf
test
loope
mov
push
call
or
mov
cmp
lods
sbb
xchg
adc
les
push
pop
cmpsb
loope
mov
mov
xor
sbb
ja
bsf
pop
and
push
pushf
push
divl
inc
xchg
test
inc
cvtps2pi
cmp
pusha
shrb
sub
push
mov
sbb
mov
rcll
sbb
les
sbb
adc
mov
mov
das
xor
js
xor
cmp
enter
add
movsl
arpl
push
jne
mov
arpl
cmp
dec
shl
jns
test
lret
xchg
lds
sbb
mov
subl
push
adc
cmpsl
or
sti
lock
scas
mov
cmc
or
pop
inc
jne
push
jno
jbe
push
jle
pop
add
gs
xor
es
cmp
dec
fcmovnu
scas
ljmp
adc
mov
add
movsb
pusha
adc
and
orl
outsl
repnz
cli
ja
repz
xlat
lret
fstp
mov
inc
adc
xor
pop
pushf
lods
popf
ret
sub
aam
xor
mov
xchg
xor
inc
sub
and
xor
mov
dec
and
mov
and
add
cs
and
sub
ret
pop
call
aad
int3
push
push
fcompl
pop
repz
fadds
icebp
inc
mov
push
into
clc
pop
jg
repz
cmpsb
adc
cld
cld
pop
cltd
lods
sub
dec
jnp
sbb
scas
sbb
call
repz
lahf
in
scas
cli
test
icebp
add
loope
jmp
jbe
mov
lods
and
pop
sub
jg,pn
imul
cmp
inc
dec
in
int
dec
xorl
test
je
pop
mov
adc
dec
shll
mov
sbb
xchg
cmpsb
pop
arpl
out
mov
dec
push
xchg
add
adc
jp
inc
mov
arpl
test
iret
les
pop
clc
push
sti
and
push
cmp
mov
enter
out
into
xor
ret
insl
xchg
xchg
jnp
loop
stc
adc
int
popa
jne
add
push
stos
inc
icebp
fildll
mov
or
sti
push
inc
mov
sub
add
and
ds
fs
std
fcmovbe
fwait
push
das
imul
adc
movq
js
in
in
aas
movsb
leave
into
add
dec
and
sub
xor
push
pop
xor
and
mov
inc
test
scas
movsl
adc
and
test
ja
pusha
std
outsb
mov
rclb
sub
leave
pop
mov
inc
mov
add
dec
mov
in
cmpsb
ficoml
cmc
test
mov
scas
dec
pushf
es
test
fidivl
icebp
jecxz
inc
clc
ss
add
add
imull
pop
into
add
inc
dec
dec
enter
dec
stos
mov
mov
and
push
mov
adc
rcrl
scas
stos
int
jo
jne
sti
mov
test
pop
loop
imulb
daa
mov
movsl
hlt
pop
pusha
ds
test
adc
lock
xchg
aam
stc
adc
mov
mov
jbe
sub
andb
inc
lods
fdivrs
mov
push
fs
sbb
decl
push
lock
lea
jp
sbb
xchg
andl
leave
xchg
xor
repz
or
pop
add
loope
ficoml
jmp
daa
pop
lods
cmc
jmp
xchg
lret
es
testb
call
push
mov
jae
mov
inc
sbb
inc
dec
mov
xor
inc
xchg
xchg
sbb
xchg
jbe
or
push
jl
mov
int3
push
jb
jl
ljmp
mov
pop
mov
sbb
sti
ja
stc
in
nop
ficoml
lret
lds
cmp
fiaddl
push
xlat
std
sub
test
cmp
shlb
faddl
xchg
pop
fidivs
mov
xor
imul
sbb
shll
sub
into
push
adc
mulb
add
jl,pt
test
dec
rolb
fnstcw
inc
das
les
jbe
shll
xlat
das
lods
sbb
xor
fiaddl
mov
in
mov
inc
test
rcl
mov
fildl
lret
test
inc
into
inc
insb
dec
std
xchg
outsl
repz
sbb
popa
push
xchg
rolb
out
das
mov
cwtl
loope
call
jmp
pop
lea
cltd
mov
and
xchg
jae
test
sbb
jmp
sbb
cmpsb
addr16
mov
and
imul
dec
addb
out
mov
mov
notl
pushf
sbb
mov
fildll
jp
xor
xor
jbe
insl
popa
mov
jg
mov
pop
mov
fimuls
scas
jb
ret
cmp
adc
jbe
lea
push
sub
inc
insl
je
push
and
pop
inc
fnstenv
idiv
es
loopne
nop
pop
test
sbb
push
sbb
push
divb
xchg
popa
out
mov
xor
dec
in
outsl
or
jmp
xchg
xchg
vmread
pop
popf
pusha
aaa
in
insb
push
xchg
cmpsl
imull
clc
sbb
mov
ljmp
out
nop
fwait
in
push
sbb
jge
xchg
mov
loope
jecxz
xor
gs
cmpsl
or
cmpsl
mov
repz
fiaddl
mov
cmpsl
mov
inc
mov
mov
pop
jbe
push
inc
or
adc
cmp
fnstsw
insl
sbb
push
pop
adc
outsb
sbb
dec
cld
fdivrl
out
and
out
pop
cltd
ja
arpl
pusha
pop
and
jns
mov
in
outsl
das
or
lcall
test
shrb
dec
mov
mov
call
mov
sub
pushf
hlt
add
dec
add
rcrb
rolb
pop
js
filds
lret
cmpsb
cli
adc
out
loopne
iret
cli
bound
subps
mov
cmp
mov
ss
adc
xchg
addr16
sbb
pushf
scas
cmpsl
xor
mov
test
fisubs
loop
sbb
cmp
inc
xlat
pop
out
inc
push
or
mov
mov
mov
push
jl
in
jl
and
jb
shrb
mov
rcll
jp
lret
scas
pop
xlat
cmp
daa
add
cs
xor
arpl
adc
and
ud0
mov
pop
out
xor
or
adc
rorb
inc
insl
int
mov
outsb
bound
pop
lahf
mov
inc
sbb
xchg
dec
jge
xlat
in
popf
mov
xor
mov
sub
push
add
adc
mov
inc
fstpl
dec
out
test
inc
hlt
mov
pop
notl
cmc
jns
int3
stos
test
push
inc
jns
cmp
lods
cmc
cli
dec
test
push
mov
jp
xlat
lea
pusha
loop
out
mov
push
lods
loopne
test
jbe
mov
cld
dec
lret
xchg
pop
aas
push
idivl
je
inc
inc
js
inc
aas
adc
push
dec
mov
inc
adc
push
jb
inc
ret
adc
shlb
imul
dec
push
cwtl
movsl
pusha
dec
sahf
dec
insb
jecxz
clc
xchg
scas
fadd
pushf
int
mov
sbb
inc
dec
enter
and
rcr
and
xchg
cmp
jno
pop
push
fld
cs
movsb
cmp
pop
pushf
jp
inc
loop
cltd
ss
dec
movsb
jg
xchg
stos
mov
lea
out
addr16
xchg
adc
mov
mov
add
loop
mov
dec
add
lds
adc
aam
inc
lahf
pop
rcll
mov
outsb
call
adc
into
repnz
inc
out
test
xlat
jle
nop
rorb
push
test
add
inc
xchg
cmp
cmp
imul
lret
es
rcrb
sbb
sarl
int3
cmpsb
inc
xlat
mov
repnz
je
out
mov
sub
call
sbb
pop
lea
or
lods
bound
push
arpl
addr16
add
mov
adc
mov
sbb
dec
jle
or
test
out
ret
std
cwtl
decb
sub
lods
enter
das
sub
popa
jne
cs
dec
or
inc
jo
jge
dec
iret
and
adcb
hlt
cmp
jno
faddl
bnd
out
cmp
add
inc
jnp
jnp
je
insb
add
push
movsl
jno
sbb
mov
inc
adc
or
hlt
rcrb
lahf
and
mov
imul
mov
arpl
testl
cmc
sub
shl
xchg
lods
mov
mov
es
jecxz
jae
nop
mov
sahf
push
mov
dec
push
loopne
sbb
jmp
pop
fsubl
xchg
jmp
fldt
imul
js
mov
jne
negl
sbb
xchg
xor
repnz
sti
add
ret
mov
pushf
adc
mov
fdivrs
push
dec
call
rcl
fs
xchg
int3
cmp
xor
or
fnstcw
or
push
test
inc
pop
push
mov
ret
cmpsl
jns
cwtl
and
push
dec
mov
rclb
jge
xchg
or
sahf
into
leave
adc
outsb
sbb
fistl
inc
cmp
sti
dec
insl
adc
pusha
js
pop
iret
pop
leave
pop
mov
loope
xchg
add
jg
shll
xor
inc
inc
mov
and
adc
loop
push
es
inc
sub
mov
inc
movsb
imul
inc
ds
imul
pop
es
inc
fiadds
mov
aad
out
xor
in
test
mov
inc
in
imul
mov
lcall
scas
jmp
clc
mov
cwtl
cmp
and
inc
dec
je
dec
push
inc
push
stos
push
ljmp
in
scas
std
xor
imul
clc
inc
test
cwtl
inc
cltd
xchg
pop
pop
nop
dec
jns
pop
aad
adc
repnz
cmc
dec
repz
not
lret
fcomi
insl
int
popa
int3
lods
into
add
fwait
add
aas
and
aam
add
andb
in
mov
and
add
adcl
mov
push
mov
jae
push
rcr
mov
movsb
cmpsl
sub
mov
and
in
lret
dec
out
in
insb
out
add
out
sbb
hlt
mov
imul
jo
imul
sti
sub
inc
jae
xor
leave
ret
fcompl
fmul
nop
fcoms
mov
jle
shll
insl
popa
dec
cli
xchg
push
sarb
sub
lret
inc
cmp
xor
repnz
sahf
push
adc
push
mov
jae
insl
xor
filds
daa
add
aam
movsb
cmp
loope
enter
xchg
lea
add
inc
cmp
cmpsb
testb
cmp
leave
outsl
sub
sbb
filds
cmp
push
in
cld
lahf
add
sahf
lods
jne
shl
mov
fdivrl
push
cmp
prefetcht2
pop
test
xor
jg
cs
pop
rcll
int3
add
out
into
dec
bound
divl
es
cmpsb
aas
jecxz
xor
mov
and
mov
push
jg
and
and
pop
xor
je
mov
inc
in
inc
cmp
lret
es
mov
xor
shll
and
pop
insl
aaa
xchg
adc
shlb
rolb
mov
mov
sub
xchg
add
cmpsb
aas
popf
loope
adc
aam
pop
int
cmp
push
notl
daa
xchg
xchg
les
shll
push
fisttps
mov
mov
aad
outsl
fwait
fwait
mov
outsl
int
mov
xchg
add
sub
push
nop
addr16
mov
arpl
add
inc
daa
out
ss
cld
xchg
dec
mov
stos
sbb
sbb
mov
jbe
add
pop
lods
test
fadds
and
jno
testl
ljmp
rol
aam
adc
mov
mov
int3
insb
jmp
js
dec
cs
xor
out
push
xchg
mov
adc
dec
dec
pushf
mov
popf
sbb
ret
sbb
and
cmp
fnstsw
aaa
mov
daa
test
test
inc
repnz
mov
aaa
cli
daa
mov
decb
mov
xor
or
and
mov
sub
stos
shrb
mov
out
add
jns
ljmp
push
cltd
jg
mov
jmp
cltd
in
jbe
mov
rclb
out
lret
add
adc
ret
sahf
add
shl
cmp
aaa
pop
cld
mov
xor
or
pop
sbb
inc
rcll
les
jecxz
mov
and
out
sbb
scas
mov
jp
fisubs
mov
jmp
dec
jnp
mov
xchg
lds
adc
dec
out
movsl
sahf
or
out
lcall
cltd
cmpsb
shrl
mov
xor
sti
shrl
cmpsb
inc
lock
sahf
xchg
les
daa
lcall
lods
lcall
ret
sub
stos
jo
leave
stos
imul
cmc
lock
popf
jnp
int3
push
fwait
loopne
fcoms
pop
jmpw
mov
and
dec
inc
cmp
push
jle
xchg
out
out
mov
cmp
dec
mov
cmp
cmp
mov
ja
popl
cmp
jnp
sbb
sarl
ss
sbb
int3
jp
mov
and
enter
movsb
and
fsubl
mov
nop
inc
daa
int
adc
jae
out
aas
dec
cmp
in
lods
and
jecxz
test
fildll
lcall
imul
lods
add
push
inc
in
es
leave
xchg
lock
imul
xor
pusha
sahf
lahf
in
fisttpll
adc
xlat
ja
fldl2e
and
ljmp
jecxz
call
filds
icebp
aas
jo
repz
stc
inc
or
cmp
fs
mov
fldl
ds
in
inc
xchg
dec
out
rcrb
les
cli
imul
xchg
mov
dec
mov
mov
stos
leave
fstps
mov
subl
out
sub
jmp
movsb
add
clc
cld
and
pop
imul
nop
stos
xchg
rcrl
sbb
adc
clc
dec
cs
xchg
sbb
outsb
jne
add
or
aas
push
mov
into
lods
push
add
cmp
or
in
fildl
and
pop
xor
xor
mov
std
or
sbb
in
sbb
scas
hlt
push
sub
arpl
shll
sub
loope
pop
adc
shrb
or
xchg
mov
hlt
aaa
jo
mov
andl
addr16
icebp
aaa
cmc
mov
or
cmpsb
in
addr16
mov
sbbb
sti
push
jo
mov
xchg
xor
or
mov
and
or
pushf
dec
mov
cmp
ljmp
pop
cli
push
fs
fwait
jae
ds
scas
ja
cmp
int
movaps
ror
add
push
mov
push
push
sbb
dec
mulb
mov
mov
pop
lahf
lds
stos
jmp
push
arpl
pop
xlat
cmc
xor
popf
or
lret
sti
jne
les
setbe
pop
jne
lods
lahf
repnz
and
imul
push
xchg
iret
adc
mov
pushf
mov
subl
aam
xchg
popaw
adc
daa
je
repnz
xchg
xor
cmc
arpl
imul
inc
cmc
fcomi
sub
pop
jecxz
out
mov
outsb
mov
gs
jo
es
fidivrl
orl
and
and
popf
inc
mov
jbe
in
xchg
or
push
jne
mov
out
stos
shlb
mov
mov
fdivs
ret
mov
cmp
scas
sbb
mov
dec
std
leave
sbb
ret
pop
push
xor
cwtl
or
mov
jae
jne
jae
lods
xor
sti
popa
clc
dec
push
inc
sub
mov
mov
movsl
or
insl
dec
jle
imul
push
mov
mov
outsb
fistpl
pop
xchg
and
std
jmp
jl
idiv
adc
sub
inc
xchg
mov
sub
cli
notb
adc
push
cmp
mov
mov
push
and
aam
sub
xor
xchg
pusha
jno
outsb
cmp
aam
aad
dec
shrl
stc
repz
cld
sub
out
nop
mulb
push
movsl
xchg
ja
orb
push
rol
adc
andb
add
clc
lcall
push
repnz
inc
out
sub
movsl
mov
movsb
mov
sub
shlb
pop
mov
mov
jmp
adc
fcoms
pop
fdivs
sahf
pop
out
in
inc
or
sub
jp
adc
lods
cmp
mov
inc
data16
out
std
push
jmp
adc
loop
icebp
std
mov
jne
add
jbe
loop
idivb
arpl
jne
lock
lret
sti
sbb
inc
xor
adc
outsb
scas
pop
dec
fdivs
xchg
out
testb
pop
dec
pop
rcr
fimull
cmp
adc
mov
das
lahf
in
adc
push
xor
and
repnz
inc
mov
dec
scas
adc
xchg
lret
xchg
repnz
fsubs
pop
inc
aas
daa
push
push
fstpl
gs
push
mov
inc
and
call
aad
addb
sub
out
push
fiaddl
jl
lahf
fs
popa
or
rcr
sarl
aaa
dec
cmp
sbbb
push
lret
or
dec
and
fwait
add
jl
sub
cmp
add
mov
add
and
testb
jp
mov
dec
test
dec
adc
rclb
cltd
daa
into
and
ret
or
or
loopne
sub
dec
cmpsb
xchg
stc
out
dec
insl
pop
sbb
lcall
xor
lods
aaa
dec
out
dec
jmp
adc
int
int
dec
imul
dec
fisubs
mov
cmpsb
outsl
mov
sti
mov
out
int
mov
mov
or
adc
nop
lock
inc
dec
mov
fsub
shll
mov
xorl
cmp
scas
fcmovnu
push
je
adc
xor
pop
mov
mov
and
and
stos
rolb
scas
icebp
sub
int
outsl
sar
fsts
std
ja
sub
icebp
leave
sbb
fs
fs
ss
pop
es
push
xchg
loopne
xchg
dec
sbb
lret
enter
data16
das
stos
stc
mov
loope
ljmp
test
mov
sbb
fs
mov
jo
in
cmp
je
sub
push
aaa
dec
sbb
mov
adc
ljmp
loopne
in
mov
jmp
leave
daa
outsl
sarl
xor
outsb
jge
cmp
or
cmpsl
nop
push
or
or
mov
and
call
sti
repz
lcall
xchg
stos
fnstenv
mov
gs
out
and
lock
cmpsb
jne
shll
cs
or
out
ss
and
dec
fcmove
cld
mov
loop
mov
pop
mov
pusha
mov
stc
arpl
test
dec
sti
repnz
jecxz
pop
imul
pusha
loop
lcall
out
lock
hlt
cmpsl
clc
leave
cwtl
stos
inc
xchg
jge
inc
addr16
sub
adc
testl
fisubrl
stc
sbb
add
sets
nop
mov
xchg
add
shrl
mov
add
inc
xor
push
mov
pusha
jmp
adc
jne
out
inc
rcll
arpl
xchg
fsubl
cld
dec
mov
jle
mov
or
smsw
sbb
in
stc
push
in
push
adc
stos
movsb
repnz
cmc
inc
xchg
enter
adc
je
outsl
loope
xor
dec
insb
ffreep
jp
repnz
sub
adc
and
fisubrs
rcll
ret
mov
inc
popa
and
fwait
lcall
dec
loope
mov
fcmovbe
push
push
idiv
in
add
aaa
or
pop
sbb
in
pop
in
or
xchg
mov
xor
mov
push
test
adc
movsl
das
mov
jmp
xor
mov
xchg
dec
andb
push
pop
ror
mov
sbb
sbb
mov
test
xlat
sbb
lcall
push
aas
lahf
fnstsw
ficomps
push
adc
or
and
or
insl
push
or
outsl
cmp
mov
mov
xor
ds
lret
adc
pop
fisubl
jmp
es
or
add
mov
add
sbb
xor
xchg
les
into
add
fldenv
mov
and
nop
mov
mov
outsb
cmpl
inc
mov
add
cmpsb
cmp
hlt
bound
push
out
adc
call
js
inc
xchg
stc
test
imul
mov
jb
fstps
in
add
cld
fcompl
jne
lods
cli
fimull
and
lcall
cwtl
xchg
jmp
sbb
lret
sti
inc
xchg
int
dec
lahf
mov
pusha
es
jo
add
cltd
push
in
int
inc
and
aas
scas
jmp
or
push
and
xor
loopne,pn
xchg
in
fs
repz
clc
stos
pop
repnz
inc
les
jne
sub
bound
inc
dec
mov
test
loop
enter
xor
xor
incb
jns
mov
sub
xchg
cmp
data16
shrb
jns
out
lret
leave
xchg
push
cvttps2pi
cmp
pop
pop
mov
xor
stc
sbb
and
sbb
push
jg
je
in
nop
jbe
sub
std
mov
jl
dec
mov
mov
mov
or
addb
or
mov
hlt
arpl
int
aam
xor
les
negl
into
jmp
cltd
xchg
xchg
pop
into
aaa
test
fiadds
es
add
sub
push
fwait
cmpb
ret
sub
movl
aaa
sub
imul
fwait
sbb
cmpb
cmp
fs
lods
jle
test
push
popa
in
push
mov
add
sbb
in
mov
shlb
sarl
ljmp
ds
stos
movsl
hlt
and
mov
sbb
call
loope
pop
jle
nop
adcl
cmpsb
jbe
inc
mov
and
aad
or
sub
cmp
inc
push
lock
push
cwtl
jmp
mov
adc
mov
hlt
lock
lods
push
and
daa
sub
pop
cmp
mov
push
stos
mov
add
neg
daa
cmp
pusha
jp
and
xchg
ss
out
mov
mov
scas
pop
aaa
push
shll
xchg
subb
loopne
jb
hlt
adc
dec
mov
jns
inc
or
ret
ret
sbb
jno
jnp
xor
sbb
pusha
scas
inc
add
inc
ret
mov
dec
mov
orl
push
lock
nop
xchg
cld
lret
mov
rclb
sarb
in
in
cmp
lcall
adc
shll
mov
inc
loope
push
stos
or
mov
dec
dec
push
mov
aad
mov
test
and
mov
jmp
jnp
pop
popa
movsb
mov
dec
rcll
jecxz
mov
inc
pop
jnp
dec
sbb
lds
add
mov
cmp
in
mov
mov
xchg
push
sub
insb
andb
push
sbb
subb
sub
int
adc
out
sub
aam
bound
lods
or
test
jge
dec
sarb
sbb
mov
dec
sub
mov
testb
icebp
xor
test
pop
dec
inc
mov
fistpll
pushw
out
cli
sbb
cli
jno
and
cmpsb
imul
cld
and
dec
mov
jmp
jmp
jp
loope
mov
arpl
std
rcrb
std
out
sub
stc
jns
lret
pop
test
in
cmp
or
inc
dec
ret
pop
loope
shll
pop
lcall
pop
jl
inc
movsb
adc
es
fcoml
jg
adcb
add
mov
sub
jge
xlat
test
pop
mov
push
adc
mov
pop
push
pop
std
push
shl
test
xor
sbb
mov
repnz
int
fisttps
sbb
out
sbb
jo
aaa
stc
mov
testb
fistl
add
mov
lock
cmc
ficomps
mov
leave
imul
std
test
sbb
lock
cmc
or
and
xchg
bnd
jmp
stos
inc
mov
xorl
invd
repnz
shll
adc
jb
loopne
arpl
xchg
mov
lods
adc
pop
repnz
xlat
idiv
mov
mov
mov
sbb
push
pop
js
test
insb
popa
lock
or
or
adc
pop
loop
mov
jmp
insb
adc
or
stos
and
test
and
test
cmp
outsb
popa
mov
sub
xlat
cmp
sti
iret
test
dec
mov
sbb
push
or
std
mov
mov
cmp
pop
dec
mov
mov
iret
sbb
mov
dec
pusha
pop
inc
mov
inc
bound
push
fisttpll
negb
mul
mov
ljmp
adc
pop
push
jne
ret
pop
xchg
pop
jp
sub
cli
shrl
push
jge
in
inc
loop
dec
aam
cs
jle
xor
push
iret
mov
mov
mov
rcll
ret
gs
push
dec
xchg
in
neg
mov
add
mov
xor
or
js
and
pop
out
jl
mov
loop
xor
jo
loopne
mov
mov
xchg
xchg
leave
adc
mov
pusha
pop
ljmp
mov
lock
jbe
outsb
mov
repnz
mov
out
add
push
inc
fiaddl
cltd
sti
lods
ljmp
stc
sub
scas
xor
jns
xor
pop
sub
hlt
add
outsl
mov
xchg
inc
daa
inc
xor
test
and
or
adc
lret
push
rorl
dec
lcall
xchg
and
sbb
sbb
fiadds
sbb
sbb
mov
and
pop
push
adc
scas
sbb
imul
sti
cmp
lea
inc
loop
rolb
dec
mov
sbb
mov
mov
cli
xlat
add
mov
mov
lret
sub
xchg
cli
inc
test
jg
sarb
lds
pop
aaa
ss
add
add
xchg
lock
jl
das
sbb
mov
inc
cmp
inc
xchg
outsb
lret
cmp
es
adc
in
subl
mov
loopne
pop
push
lods
pop
out
int
hlt
sbb
mov
mov
lods
jnp
sbb
mov
scas
mov
aas
stos
ja
and
lods
xlat
mov
out
mov
xor
push
sahf
pop
jp
inc
inc
stos
cltd
cmpsb
rcll
rorl
push
jnp
mov
aad
or
sbb
push
lock
cld
xor
les
loopne
jne
sub
sub
lock
push
mov
xchg
inc
pop
adc
sub
sbbl
and
popf
jle
sub
ret
adc
outsb
add
or
jae
cltd
int
adc
sub
loopne
or
mov
lret
std
jmp
cs
cmp
or
jmp
shlb
dec
int3
addr16
mov
cmp
addr16
test
inc
fsub
fadds
sti
rolb
in
pop
iret
inc
or
rolb
mov
cli
lock
mov
das
xor
decb
cmpsl
inc
shl
pushf
lahf
or
push
pushf
das
push
xor
jecxz
xchg
mov
sbb
xlat
je
inc
stc
in
and
dec
fmull
sub
xchg
mov
xchg
pop
popa
pop
stos
sub
in
mov
add
cli
sbb
xor
cmp
or
xchg
lahf
into
insl
xchg
sub
sbb
repz
lret
mov
pop
jle
mov
adc
lock
divl
adc
int
push
cmp
lock
mov
adc
jmp
dec
mov
inc
icebp
jecxz
ret
or
movsl
xor
mov
jne
test
sbb
pop
mov
push
push
xchg
pop
sbb
cli
add
push
cmp
outsb
outsl
adc
xchg
jge
orl
mov
jl,pn
repnz
and
dec
pop
ljmp
fstps
mov
mov
and
and
cmp
movaps
subb
sub
add
mov
adc
push
jnp
mov
decw
int
orb
popf
andl
lret
xchg
std
es
push
xchg
out
into
add
icebp
inc
jbe
push
and
scas
arpl
mov
sarl
icebp
hlt
test
divl
mov
pushf
lods
cs
ss
or
add
push
jae
jbe
outsb
xchg
icebp
mov
mov
push
xor
iret
int3
cmp
xchg
and
nop
subb
sbb
enter
and
callw
sub
mov
loopew
clc
pop
adc
scas
jmp
sub
repz
nop
inc
xor
mov
cmp
lods
ss
sub
cmpsb
mov
incl
dec
std
pushl
jl
adc
cs
or
cli
mov
add
push
insb
mov
call
bswap
cld
movsw
adc
jnp
rorl
ss
sbb
in
aam
inc
out
dec
add
mov
cli
out
cmp
test
mov
subl
cli
or
jno
mov
dec
push
lahf
out
ficompl
dec
test
xchg
inc
xchg
push
repz
jecxz
push
test
dec
mov
sub
jae
loope
lcall
xor
aad
lods
out
push
bound
in
sub
or
jl
adc
or
inc
aas
aaa
mov
lods
dec
mov
ss
jecxz
imul
sahf
cmp
les
out
adc
bound
popa
add
popf
jno
fwait
cmp
push
dec
jb
cmp
push
nop
out
jno
iret
fsts
and
aaa
fnstsw
es
or
mov
aad
pop
hlt
cmpsb
xchg
dec
bound
out
add
mov
inc
mov
stc
lods
and
sbb
sbb
inc
add
mov
push
shll
outsl
orl
ret
jmp
jmp
pusha
arpl
jmp
cmpsl
test
lahf
xchg
push
data16
lret
push
es
repnz
test
jge
int
gs
or
add
mov
mov
sahf
cld
into
push
ror
in
bound
cld
test
and
sbb
mov
sub
lret
add
push
subb
push
lahf
inc
pop
adc
testl
movsb
fisttps
push
xor
cmpsb
cwtl
mov
mov
push
lret
push
inc
jecxz
mov
push
inc
scas
mov
jae
icebp
inc
mov
mov
cmp
outsl
lods
push
add
lods
push
inc
cmp
movsb
add
testb
inc
outsb
push
inc
arpl
cltd
and
dec
pushf
hlt
ficompl
insl
add
vorps
pop
sbb
sub
shll
mov
das
adc
iret
out
add
push
push
fimuls
mov
pusha
inc
or
insb
jns
js
push
cs
push
xor
xchg
push
sbb
insl
fcompl
mov
pop
pop
jnp
fcomip
pushf
dec
in
pushf
dec
mov
xchg
add
xchg
jle
push
jl
add
adc
cmp
shll
adc
insb
and
cmp
arpl
daa
mov
insl
fsubl
dec
jmp
pop
int3
rorl
jg
cld
jnp
sbb
aas
pop
inc
adc
sbb
mov
aam
sbb
or
xchg
mov
sbb
or
xchg
addr16
adc
push
outsl
sti
in
xchg
icebp
mov
arpl
pop
cmc
into
mov
mov
lds
es
clc
mov
fcmovb
stos
test
add
imul
lsl
xchg
out
loopne
adc
or
dec
adc
int
cli
jmp
pop
shlb
push
inc
lret
and
add
imul
add
int
xor
mov
inc
or
loope
call
inc
addb
test
sub
push
fnstcw
mov
or
cmp
test
cmp
pop
cmp
and
jp
push
dec
fs
mov
inc
mov
xor
jb
mov
outsl
je
cs
loop
shlb
sub
aas
and
cmp
or
inc
movsl
jge
dec
int
mov
fisttps
push
jo
decb
aad
rcll
inc
jle
jae
mov
jp
mov
xchg
shr
push
or
mov
inc
outsl
pop
mov
inc
jl
dec
scas
mov
mov
insb
gs
repz
xor
mov
lret
sbb
push
sbb
ja
mov
xor
adcl
mov
mov
jb
sub
sub
lds
imull
xor
cli
xor
adc
out
push
dec
inc
fisubs
adc
push
mov
xchg
fsubrp
jmp
in
addb
and
push
sub
push
xor
cmp
push
jnp
push
popf
insb
pop
movsb
movsl
add
fldenv
fbstp
mov
lret
xchg
inc
scas
addl
fisttps
sub
shl
pop
push
xchg
dec
jecxz
enter
xor
ret
scas
enter
jne
hlt
or
out
sti
mov
pop
sbb
shrl
pop
or
cli
mov
push
test
mov
push
and
xchg
adc
inc
lcall
dec
sub
sbb
insb
push
xchg
lods
pop
and
fsts
push
pop
flds
lret
add
add
cs
test
int3
test
adc
mov
jns
cmp
call
pop
pop
inc
nop
popf
jg
into
push
cmpsb
enter
sub
lea
jle
mov
adc
test
vprotw
loope
mov
mov
push
sub
inc
dec
mov
cld
rolb
ss
pop
mov
xor
lds
adc
stc
or
decb
mov
push
cmp
sahf
jb
jg
or
pusha
loopne
arpl
outsb
popa
add
test
mov
stos
dec
aam
fwait
push
sbb
clc
stos
sbb
push
jo
cmp
sti
mov
dec
cld
pop
ljmp
icebp
inc
cmp
add
dec
divl
xor
xor
out
mov
push
adc
test
jo
adc
orb
out
popl
lahf
cmp
faddl
rolb
fwait
rcll
int
adc
push
inc
inc
stos
jecxz
lret
dec
dec
pop
fistps
push
dec
pop
cmpsb
jo
out
lret
jecxz
ficomps
fcmovnu
xchg
leave
dec
and
jns
inc
dec
das
xlat
loope
int
xchg
rcll
sbb
push
cmc
pop
cli
xor
lods
ret
xchg
insb
xadd
pop
cmp
lret
ds
or
cmp
inc
add
xlat
or
mov
cmpsb
fcmovnu
jne
pop
adc
mov
ret
mov
popf
inc
and
or
leave
mov
sub
sub
mov
mov
in
jno
jmp
dec
sbb
cmp
sti
mov
xlat
sbb
cmc
mov
stos
xor
and
mov
pop
bswap
add
inc
inc
cmp
out
sti
ss
jb
push
std
mov
bound
xor
lea
mov
cmp
mov
xor
jge
cmc
xchg
lahf
fucomp
push
sbb
je
inc
enter
mov
out
test
rcrl
pop
pop
aad
cmp
mov
or
sarb
je
push
pop
inc
nop
xor
push
es
iret
xor
or
daa
cmp
lret
xchg
or
scas
jmp
push
shrl
push
mov
mov
fisttpl
xor
daa
test
popl
cli
fcoms
js
mov
leave
imul
cmp
ret
mov
cmp
inc
push
pop
movsb
cltd
lret
xor
sub
scas
xchg
ja
int
jg
add
stc
fwait
mov
sub
jb
cmp
loopne
inc
xor
imul
mov
out
bound
cmp
shlb
add
cmpsb
cmc
in
rorb
mov
and
jl
cmc
and
inc
add
jb
in
movsl
clc
inc
fwait
jnp
in
stc
mov
cmc
movsb
ja
cmpsl
sbb
push
test
test
out
adc
je
idivb
xlat
sbb
idiv
push
cmp
sub
test
mov
cmp
xrstors
xchg
leave
clc
xor
mov
enter
outsl
inc
xrelease
xchg
or
outsb
inc
pop
or
mov
sahf
clc
adc
stc
jbe
jbe
push
fimuls
push
mov
mov
jb
test
std
cmp
fdivl
roll
in
cmp
pop
push
dec
mov
cmpsl
scas
xor
cmp
cs
push
sahf
xchg
lods
xchg
ds
dec
push
jp
dec
push
inc
pushf
out
dec
lcall
and
or
xchg
push
popf
inc
xchg
lea
dec
fisttpll
out
sub
sub
pop
jns
or
dec
jecxz
test
pusha
mov
icebp
mov
pushf
add
push
adc
test
sub
icebp
shrb
pop
cli
add
iret
lcall
daa
mov
xchg
pop
sbb
or
dec
leave
xchg
xor
push
sbbl
repnz
xor
data16
out
rorb
into
dec
iret
fs
jns
jecxz
or
add
sbb
je
and
out
lret
adc
cltd
rorl
dec
mov
jb
and
mov
push
mov
sbb
sbb
fsubrs
mov
sbb
jg
cli
je
fcmovu
and
clc
test
mov
popa
dec
dec
call
hlt
inc
pop
xchg
js
pop
sbb
je
dec
xlat
fst
sbb
mov
add
mov
jae
and
sbb
push
push
hlt
pop
cmpsl
js
out
adc
and
jns
ret
add
fwait
xor
pop
cmp
das
dec
fmuls
or
xor
adc
rorb
xchg
les
xchg
loopne
sub
pop
insl
jnp
pop
xchg
mov
inc
inc
into
add
mov
sub
aas
lcall
repz
cmp
mov
fldl
mov
xchg
bound
cs
call
push
mov
vcvtss2si
mov
or
xchg
in
xorl
sbb
clc
cwtl
std
sub
data16
inc
fnsave
daa
mov
sub
fbstp
shlb
inc
sbb
dec
cmp
or
fidivs
test
and
ret
js
mov
mov
adc
enter
and
ret
fisubrl
add
shlb
mov
call
rol
push
orl
mov
sub
add
add
arpl
pop
into
cmp
inc
mov
pop
aas
inc
pusha
arpl
mov
imull
add
jmp
add
jne
inc
mov
jle
int
mov
idivl
mov
repnz
lcall
in
mov
scas
xchg
pop
push
mov
xchg
adc
pop
dec
stos
dec
jecxz
push
xor
lret
dec
adc
inc
push
push
sub
cmp
scas
mov
push
cmp
mov
pop
sahf
jp
xchg
jb
adc
cmp
jge
enter
nop
jg
xchg
loope
stos
jb
add
jl
mov
sub
leave
xor
push
outsl
or
xchg
jcxz
bound
test
mov
dec
mov
popf
cmp
aam
pop
push
add
shl
sar
cmp
jg
inc
pop
fldenv
cmovle
inc
mov
dec
mov
fists
cltd
leave
cmp
lods
push
pop
push
push
mov
rorl
insb
mov
fmull
dec
addr16
jno
ja
mov
scas
sub
inc
cld
xor
stc
cmp
xchg
mov
aaa
sbb
push
mov
fwait
pop
insb
and
jmp
or
xlat
sar
and
dec
jnp
and
enter
pop
mov
ds
pop
add
pusha
push
cmp
sti
or
stc
ret
push
jmp
cld
test
insb
icebp
imul
rclb
pop
lahf
addr16
clc
and
mov
pop
filds
xchg
and
rorb
and
dec
and
es
bound
adc
mov
and
sub
adc
insl
addr16
jg
xchg
mov
stos
call
addr16
aad
lcall
sti
cmp
in
adc
cs
cmpsb
pop
mov
ja
lds
stos
mov
negl
adc
push
in
aaa
adc
sub
insb
mov
sti
inc
mov
sbb
xchg
mov
cltd
out
stos
jp
push
jmp
push
insl
xor
in
hlt
in
pop
mov
pop
or
mov
mov
icebp
mov
jae
jbe
aaa
inc
xlat
xchg
lret
xor
cli
std
cmpsl
add
mov
enter
lods
mov
fcmovu
jmp
cwtl
sub
popf
cld
jb
scas
fcmovne
stos
negb
push
sbb
outsl
jo
nop
test
and
sbb
stos
aaa
ret
mov
cmp
jg
inc
ret
sbb
sub
cmp
jmp
mov
jb
mov
fisubl
mov
cmp
or
test
xor
and
repz
rcl
lahf
mov
add
mov
mov
fprem
cld
push
je
call
mov
adc
or
xchg
lock
mov
data16
repnz
jge
sub
sbb
loop
cmp
dec
insb
sbb
or
sub
cltd
ja
jg
add
pop
jg
mov
lret
push
sbb
fstpt
jge
es
pop
fisubl
jmp
inc
cld
mov
mov
rorl
mov
mov
insl
nop
pop
lret
in
imul
push
and
js
jl
loopne
rolb
or
adc
js
push
adc
repz
loop
rcll
dec
mov
dec
jp
add
clc
fcomp
enter
adcl
cli
cwtl
daa
or
sbb
mov
lahf
imul
out
pop
mov
adc
sbb
ds
xor
aas
xchg
mov
and
call
into
xor
jle
xchg
aam
inc
mov
cltd
popf
mov
mov
dec
mov
mov
incl
pusha
add
pop
add
mov
mov
sub
inc
push
adc
mov
lahf
cmp
jbe
iret
in
test
pusha
push
movsl
fsubs
xchg
sbb
mov
cs
stc
xor
jne
pushf
mov
push
and
cmp
mov
outsb
mov
sbb
inc
popa
mov
mov
sbb
mov
mov
sbb
bound
xchg
or
adc
push
lea
mov
addr16
dec
dec
fistps
jl
aaa
xor
and
aam
shll
inc
addr16
push
and
out
inc
daa
mov
ret
cli
jns
jne
xor
cmp
jmp
mov
mov
dec
or
out
add
mov
push
and
mov
icebp
and
pop
mov
movsl
rorl
inc
pop
mov
mov
inc
lods
push
inc
jae
inc
dec
cmp
in
ss
popa
stos
hlt
mov
cli
push
pop
incl
push
mov
out
mov
fistps
clc
ljmp
lret
lahf
jp
push
xor
xor
dec
movsb
mov
dec
pop
in
pop
xchg
xchg
hlt
hlt
push
movsb
pop
addr16
icebp
into
add
std
and
xor
maxps
fnstsw
xadd
pop
push
pop
cmp
mov
inc
cmp
mov
mov
dec
shlb
xor
sub
xor
push
je
in
push
sub
lds
out
push
loop
out
xchg
ss
aas
xlat
jnp
sbb
icebp
cmc
nop
fs
lcall
bound
leave
ret
lahf
es
jnp
push
imul
in
push
nop
gs
out
jmp
pop
mov
test
inc
repz
pop
movsb
mov
inc
pop
xchg
inc
orl
jle
lahf
jp
xchg
xchg
dec
cmp
or
pop
dec
jnp
dec
mov
js
jbe
cmp
xchg
rcrl
lcall
aam
push
xchg
cwtl
data16
push
jl
cmc
mov
xor
mov
out
pop
aaa
sub
inc
sarl
fcomp
lcall
push
ret
pushaw
or
mov
stos
mov
mov
inc
cmp
je
je
sub
or
ss
mov
movzbl
xchg
leave
idivl
lods
xor
rcrl
repz
test
cltd
dec
lahf
dec
pushf
bnd
aas
mov
mov
cmp
adc
ficoml
lcall
mov
sbb
mov
and
jle
flds
xchg
loopne
xor
cmp
xor
into
popa
ret
jge
or
clc
xor
cmp
adc
inc
rol
mov
push
cmp
fldenv
pop
adc
inc
add
movsl
adc
outsb
mov
adc
jne
rorb
jnp
frstor
mov
xor
out
mov
pop
add
mov
fists
xor
rclb
mov
dec
cltd
fdiv
sub
add
lock
sub
push
popa
dec
mov
test
dec
addr16
pushl
ljmp
push
popa
out
mov
rcrb
cmp
jno
jne
push
inc
pop
mov
nop
mov
jno
mov
movl
fistpl
stos
push
xor
mov
and
in
adc
addr16
pop
mov
sti
je
add
leave
fmul
push
jo
inc
insb
idivb
push
mov
arpl
aaa
pop
popf
mov
mov
pop
lods
daa
xchg
stos
mov
popf
out
pop
adc
shrl
mov
sub
dec
mov
lahf
bound
std
ds
xor
iret
cmovb
shr
or
cli
imul
fdivl
mov
bound
lret
mov
in
mov
add
call
jg
jb
enter
add
aaa
stos
dec
mov
scas
stc
mov
mov
std
push
filds
lret
repnz
or
inc
cmp
add
dec
mov
and
addl
cmpsl
sbb
mov
dec
pop
mov
fucomi
push
ja,pt
repz
pop
mov
test
hlt
lea
or
xor
or
xchg
mov
lret
push
push
push
pop
addr16
fwait
and
je
fs
aad
lods
in
or
mov
mov
xor
mov
mov
or
lret
repnz
sub
cwtl
int3
fadds
or
xor
jecxz
jne
shl
lret
mov
sbb
fwait
scas
lds
out
pop
xchg
imul
jge
xchg
cltd
ljmp
inc
or
mov
cs
mov
push
pusha
xor
jg
mov
mov
pop
shl
mov
fs
test
xchg
arpl
rclb
mov
cmp
adc
or
mov
mov
inc
mov
mov
jmp
test
cmp
mov
pop
adc
xlat
push
sbb
add
and
pop
mov
outsl
sbb
cmc
cmp
and
mov
fcoml
je
push
mov
push
test
push
fs
cmpl
ss
or
nop
or
mov
mov
sub
sbb
sbb
aad
jo
mov
lds
pusha
xlat
xchg
lret
test
clc
and
xor
sbb
out
repz
xor
int3
sbb
out
out
push
mov
pop
dec
pop
dec
or
xchg
movsb
lcall
mov
push
push
out
and
xchg
jns
sbb
xorl
jns
or
scas
out
jge
flds
mov
leave
gs
inc
jecxz
push
decl
xchg
sbb
mov
pop
xorl
push
es
jne
movl
inc
clc
pop
xor
sub
jecxz
test
testl
jb
shrb
sbb
pop
inc
xchg
leave
mov
jg
xor
or
xlat
repnz
clc
sarb
mov
jmp
hlt
cmp
sub
test
ds
stos
pop
xchg
inc
sbbb
addr16
rcl
xchg
cmpl
addr16
fimull
aaa
xor
pop
cmp
in
lods
mov
clc
mov
into
jo
xor
out
outsl
mov
inc
das
cmpsb
push
push
orl
inc
cmp
xor
mov
add
sbb
mov
xor
cmp
bound
rcrl
add
jle
aad
adc
stc
adc
faddp
cmp
xchg
cmc
insl
mov
mov
clc
iret
xchg
and
lods
aad
sbb
jmp
cmpsl
push
xchg
imul
mov
lea
pusha
xchg
cmc
popf
pop
mov
shll
xchg
call
pusha
mov
xchg
xchg
mov
and
mov
jecxz
jp
push
movsbl
mov
mov
pop
mov
lret
and
xchg
ror
sbb
sub
cmp
outsb
imul
adc
jne,pt
and
pop
pop
aad
xor
xor
inc
pop
push
aam
lods
gs
sti
fucomip
imul
stc
fadd
stos
sub
jo
add
sbb
rorl
mulb
push
jle
sub
fcompl
lahf
mov
cs
xchg
mov
xorl
xchg
cmp
adc
fcomps
dec
xor
or
repz
sub
repz
jmp
pop
pop
xchg
dec
scas
mov
pop
mov
ss
cmp
xchg
sbb
cli
xchg
xchg
or
jecxz
sub
scas
dec
adc
fdivrs
call
mov
lods
stos
popa
out
pop
lret
push
cwtl
stos
sub
pop
rorb
mov
into
aas
and
cmp
loope
dec
sub
in
outsb
imul
movsl
cmp
xchg
mov
sbb
push
push
lcall
inc
adcb
inc
nop
adc
int
pop
stc
mov
scas
fxch
jmp
loopne
jae
or
test
shll
dec
cmpsb
lea
inc
mov
fimull
mov
aas
sbb
push
adc
fisubrs
mov
mov
and
jns
xor
gs
pop
scas
mov
lods
adc
jne
in
inc
cmpsl
add
mov
mov
dec
enter
pop
jmp
and
mov
enter
sub
xchg
adc
push
jnp
push
or
je
ror
test
push
lret
leave
dec
into
cmpsb
jo
or
xlat
and
mov
pop
or
inc
mov
xor
ss
mov
and
pop
inc
pop
push
sub
nop
mov
arpl
test
inc
xor
xor
insl
add
xor
orb
add
or
push
add
daa
pop
vcvtsi2sdl
int
ss
push
movsb
sti
es
push
add
sbb
stos
sub
cmp
fcompl
mov
jl
add
in
cmp
adc
cwtl
mov
sahf
sbb
xor
xor
jecxz
cmc
mov
pop
mov
mov
push
xchg
and
scas
jae
outsb
adc
or
cli
xor
aam
movsl
xchg
in
xchg
sahf
inc
out
or
push
imul
jmp
scas
test
aaa
pop
in
inc
add
and
jb
out
ja
pop
leave
push
mov
adc
inc
add
leave
jmp
fdivl
mov
ss
jp
addb
in
bound
and
mov
mov
adc
loope
bound
dec
sarb
jb
mov
enter
add
es
jge
dec
cld
mov
sahf
push
testb
push
push
mov
or
mov
xchg
sahf
push
sti
das
in
xchg
daa
mov
sub
aad
push
lock
outsl
pop
cmc
int3
fidivrs
or
aaa
xor
cmp
add
dec
mov
out
gs
ja
ss
lods
jl
aad
sti
sbb
int3
bound
jmp
mov
addr16
push
mov
mov
pop
inc
lock
daa
or
push
jmp
pop
add
or
xchg
andb
loope
or
or
aaa
jns
add
jecxz
jbe
and
orl
mov
int3
fcoml
fldcw
jg
scas
test
xor
push
xchg
push
dec
adc
cmp
pop
mov
addl
insl
pop
jb
pop
or
mov
jge
jle
sbb
outsb
mov
push
cmpsl
and
push
lock
ss
lret
jmp
outsb
xchg
sub
leave
mov
lea
inc
movl
xchg
out
cld
ds
in
jo
daa
pusha
idivb
pop
dec
cmp
pop
lret
and
push
imull
jne
pop
aam
push
out
outsb
sub
mov
xchg
dec
mov
or
movsb
adc
add
jmp
leave
ret
rcll
hlt
bnd
inc
xchg
mov
imul
icebp
mov
add
mov
packssdw
aam
js
call
insb
xor
sub
lcall
mov
jge
dec
movsl
cltd
popa
js
and
mov
add
out
or
sub
movsl
or
or
pop
rcrl
jecxz
mov
pop
andnps
xor
lahf
xor
hlt
adc
and
and
or
xchg
push
in
jne
loope
push
stos
ja
mov
scas
cli
jg
mov
inc
add
ljmp
jl
repz
pop
fimull
mov
add
cmp
stc
dec
jge
xchg
sbbl
in
mov
push
inc
bound
cmc
scas
test
das
test
and
repnz
movsb
mov
inc
es
dec
leave
mov
shl
mov
mov
int
test
and
je
repnz
cmc
xchg
addl
mov
dec
xchg
insl
imul
sbb
mov
outsb
insl
mov
jnp
out
and
out
fsts
mov
cli
subb
and
icebp
out
lods
lock
jmp
mov
sbb
pop
xor
mov
jo
call
outsl
xor
dec
neg
push
ljmp
inc
push
xchg
movsl
mov
out
jb
cmpsb
xor
bound
sahf
shlb
imul
add
pop
in
jb
iret
aas
notl
inc
adc
xchg
mov
jbe
jecxz
add
fnsave
lock
test
push
sbb
jecxz
push
cmpsl
or
inc
adc
icebp
not
pop
leave
rolb
fdivrs
add
out
push
movsb
add
adc
int3
jl
xchg
and
and
mov
add
adcb
stc
loop
add
or
lea
arpl
pop
stc
or
pop
imul
fcmove
xor
jnp
pop
jns
and
mov
jl
cli
mov
mov
imul
mov
nop
fnstsw
or
cmc
inc
in
das
fyl2xp1
add
dec
add
negb
mov
inc
mov
pop
and
test
std
gs
cltd
rcrb
lock
adcb
inc
lds
mov
or
call
rcll
push
test
jecxz
sub
pop
xchg
xchg
add
stc
data16
mov
jo
scas
movsb
push
or
fcmovnbe
inc
leave
lcall
ret
push
cmc
sarl
les
adc
add
mov
sbb
add
scas
add
insb
movsb
jnp
test
cltd
inc
sahf
insb
cmp
jge
or
pop
les
test
je
std
data16
loopne
sbb
sbb
mov
sbb
in
dec
out
pop
mov
int3
cmp
iret
test
pop
filds
shlb
int
add
fadds
sub
sbb
test
cltd
jo
dec
xchg
ret
xlat
or
sbb
test
lds
ds
cmp
sbb
adc
xchg
jnp
repnz
rcr
cmp
mov
sar
movsl
int3
call
cmp
inc
lods
xor
shrb
ret
xchg
scas
aaa
stos
fstpl
sti
fdiv
fs
scas
xchg
pusha
inc
push
inc
mov
js
and
inc
jle
mulb
mov
and
mov
bound
mov
and
inc
dec
adc
fdiv
push
sub
mov
push
je
xlat
mov
rcr
test
sar
or
in
mov
out
jle
mov
nop
test
cmp
push
hlt
sbb
add
or
aam
cmpsb
cltd
in
repnz
jae
or
mov
and
fsts
xchg
iret
xchg
add
jnp
push
cmpsl
jg
enter
rcrb
xchg
dec
int3
mov
imul
imul
rcrb
nop
call
adc
outsb
mov
into
out
scas
add
imul
mov
push
inc
sub
fidivrs
loope
insl
cld
or
fucomi
mov
sub
mov
jmp
sarl
mov
mov
aad
dec
mov
movsb
jnp
fidivs
loop
jo
inc
repz
stos
sbb
xor
test
loop
mov
sarl
stos
jnp
lock
iret
sub
xor
les
sbb
sbb
adc
xchg
xchg
jnp
sbb
and
xor
or
fstpl
sbb
or
dec
add
xor
jae
pop
les
lods
xchg
cmp
add
mov
dec
adc
cli
sub
sbb
test
or
stos
push
icebp
popa
sbb
and
add
mov
add
sub
cmp
cmp
xchg
mov
mov
std
fcmovnu
sub
daa
sub
aas
jmp
mov
lods
jecxz
ror
int
call
mov
lock
ret
sub
movsb
fsubrs
mov
pop
arpl
mull
ror
icebp
out
mov
stos
scas
add
jne
mov
movsl
mov
lock
dec
xor
xchg
jae
lock
fists
repnz
imul
add
sub
push
xchg
loopne
cmp
gs
inc
scas
repnz
pop
jo
fstps
adc
sbbl
mov
push
inc
movsl
pop
inc
cmp
mov
push
in
and
repz
sti
pop
aas
fsubs
into
nop
lret
mov
shrl
add
or
sub
jno
into
insl
mov
cmp
in
adc
ret
fiadds
mov
std
stos
nop
testb
mov
xor
xchg
xchg
lahf
xor
sbb
mov
aas
pop
and
sbb
dec
push
jecxz
leave
push
push
cltd
xchg
cli
negb
jb
add
add
and
fnstcw
or
inc
push
sub
sub
xor
not
stos
or
push
jmp
add
mov
movsb
in
outsb
aas
es
or
sbb
mov
and
out
inc
rolb
sub
mov
shll
daa
pop
xchg
fistpl
out
stc
ss
std
nop
add
inc
push
mov
mov
popf
jo
daa
mov
fwait
jle
ret
xor
stos
jno
idivb
pop
fwait
xchg
test
paddsw
shll
rclb
ja
stos
push
mov
dec
shlb
sbb
bound
int3
pop
pop
and
dec
insb
add
repz
loope
into
test
aad
fimuls
mov
mov
xor
bound
jnp
cmpb
pop
cmp
fnsave
jne
movsl
shlb
mov
jnp
dec
mov
xor
scas
pusha
jp
xor
js
lods
repnz
stos
movsl
mov
gs
scas
mov
call
fs
xchg
and
xor
out
or
dec
xor
and
rcll
add
fsubs
ret
add
insl
cli
pop
arpl
dec
pop
push
sti
out
cld
pop
pop
inc
iret
dec
shl
sbb
icebp
dec
in
or
and
push
pop
lea
iret
imul
lock
outsl
cmp
mov
cmp
shll
push
xchg
clc
sbb
andl
dec
adc
pop
fildl
aad
mov
fidivl
ja
lret
scas
cmp
xor
bts
cmpsb
jp
mov
rorb
jl
or
xchg
jmp
add
cs
xor
push
dec
dec
repnz
push
mov
test
sub
and
dec
jns
leave
add
cld
and
jno
sbb
call
out
inc
inc
sbb
adc
cmp
daa
jp
mov
mov
cmp
xor
addl
xchg
dec
test
jns
int3
or
aam
jno
andl
push
test
daa
cmpsb
movsb
in
cwtl
and
loop
insl
mov
fistpl
mov
pusha
pop
imul
loopne
adc
mov
icebp
scas
js
outsb
insb
sub
xchg
cwtl
mov
adc
fmuls
pop
popf
add
mov
das
bound
inc
pop
jb
cltd
ss
mov
push
push
das
addr16
jge
mov
shrl
xorb
cmp
dec
and
xchg
gs
sbb
pop
jns
test
cmpsl
dec
dec
leave
adc
jno
inc
push
mov
add
or
insl
xlat
sbb
insb
push
pusha
fadd
xor
dec
jge
out
scas
leave
iret
adc
cmp
sub
xchg
mov
mov
repz
sbbl
lret
sbb
les
mov
push
inc
loope
pop
mov
pop
jg
cmp
mov
lea
mov
pushf
gs
sahf
fs
or
pushf
cmpsb
pop
hlt
xor
cli
sub
jnp
insl
das
and
fdivrp
mov
add
arpl
lahf
outsl
cmpsl
inc
movsb
inc
popa
push
sahf
test
and
push
test
push
and
std
pop
inc
mov
or
pop
pop
xchg
loopne
fcomps
sbb
pop
insl
dec
xchg
lcall
out
mov
mov
scas
ror
and
pop
adc
push
mov
int3
and
test
inc
das
mov
cwtl
loope
adc
arpl
sub
inc
nop
dec
jne
cmp
xor
aaa
lahf
mov
adc
jbe
adcb
fistpl
mulb
xlat
or
cmpb
lahf
test
popf
inc
std
ret
lcall
loopne
jbe
xchg
or
and
mov
push
stos
aam
xchg
inc
sbb
aaa
and
stos
sti
xchg
push
enter
dec
pop
mov
out
mov
fidivrl
in
and
or
and
rorb
mov
sarl
dec
or
out
loope
pop
push
sarl
cmpsb
xchg
aaa
pop
mov
clc
cmp
adc
out
jnp
scas
pop
xchg
aaa
pop
dec
jge
adc
fsubrl
scas
inc
mov
push
aad
ljmp
mov
imul
outsb
outsb
loop
and
cmp
sbb
adc
xchg
add
push
dec
jl
imul
push
jo
jecxz
icebp
movsb
inc
mul
and
add
pop
leave
cmp
mov
pop
aam
call
sarl
out
iret
xor
inc
out
loopne
cli
inc
addr16
leave
push
adc
fwait
repnz
xchg
js
xchg
sub
pop
adc
push
cs
mov
scas
or
sbb
aam
iret
jecxz
cmp
adc
adc
or
jns
mov
push
xchg
lods
aad
push
sub
cmp
movsl
jle
fs
xor
and
inc
xchg
gs
jbe
xchg
stc
xor
pop
rolb
iret
iret
inc
int
movsb
lret
movaps
jmp
in
rcl
movl
jmp
jmp
mov
or
stos
pop
js
xor
mov
inc
pop
or
xchg
cmp
or
mov
sbb
pop
fsubrs
stc
ret
fdivs
mov
roll
dec
jae
mov
insb
push
or
ror
mull
xlat
dec
stos
stos
in
mov
jcxz
mov
xchg
sbb
imul
mov
addl
out
mov
jp
pop
inc
or
testb
jle
xor
xchg
mov
js
or
in
lock
push
sub
mov
lds
jbe
shrb
es
pop
pop
cmp
fdivl
push
jb
sub
loopne
jne
pop
rorb
xchg
inc
lods
test
into
std
cmpsb
jae
pfpnacc
cmpsb
lret
mov
lods
int
inc
push
sub
leave
fcomps
call
and
sub
cld
jg
push
pushf
into
mov
push
test
aaa
imul
and
mov
add
clc
and
pop
add
movsb
and
dec
sub
mov
or
jae
adc
mov
sbb
fcmovne
cwtl
int
ret
mov
test
rcrb
into
xchg
inc
testb
popa
fwait
cli
fs
push
out
or
lock
scas
cmp
xor
imul
sbb
adc
ds
jne
movsb
mov
imul
mov
pop
xchg
jl
repz
dec
lods
push
stc
cs
pusha
testl
sbb
repnz
outsb
lret
jle
rcrb
mov
imul
mov
aam
incb
xchg
cmp
pop
hlt
addr16
stc
data16
pop
sbb
push
in
orb
popa
cmp
lock
fstpl
sbb
sahf
lcall
lcallw
jo
sub
add
sar
filds
sbb
cmpsl
lods
enter
lock
popa
movsb
bound
xchg
test
testl
sbb
jno
sub
addl
inc
aam
into
insl
inc
loope
lods
imul
aad
xchg
aam
insl
sbb
les
loope
adc
fstps
lahf
mov
mov
loopne
add
jnp
mov
dec
insl
xchg
mov
sbb
aaa
push
pop
add
and
ljmpw
inc
sub
mov
jle
cmc
inc
pop
cmp
lcall
fiadds
inc
fistpl
mov
pop
mov
lret
mov
adc
inc
pop
xorl
insl
dec
lret
jbe
cmp
mov
enter
or
xchg
push
push
inc
in
sbb
mov
int
stc
push
roll
iret
push
aaa
insl
sbb
ljmp
stc
frstor
pop
in
cmc
out
pop
and
aas
fldl
testb
in
pop
scas
outsl
add
and
adc
push
and
ret
lea
jmp
js
mov
pusha
or
and
xlat
mov
mov
mov
adc
xor
jp
test
add
jne
push
aas
lcall
xchg
jmp
mov
inc
in
icebp
push
xrelease
lds
mov
sbb
cld
jno
cmp
dec
rol
or
jge
xchg
inc
in
nop
xor
mov
mov
lods
add
lcall
fcoml
cmp
mov
repnz
out
jecxz
fistpll
ljmp
jmp
xor
cmp
pop
rorl
dec
add
out
cmp
call
andb
add
imul
idivl
jp
loopne
lods
int
arpl
inc
sub
lds
cmc
mov
inc
imul
jbe
sbb
mov
sub
adc
adc
rcl
insl
ja
xlat
test
add
arpl
aam
cs
leave
hlt
xchg
push
dec
dec
decl
test
shrl
sub
adc
fidivrs
aam
inc
icebp
popf
adc
cmp
mov
insb
sub
or
and
test
jno
jne
or
out
mov
inc
xchg
fwait
mov
rorb
pop
andb
pop
test
test
sti
inc
or
stc
int3
mov
push
mov
mov
mov
popa
add
out
sbb
jmpw
popa
jns
mov
jge
stos
enter
jg
mov
aad
mov
loopne
sub
lahf
xchg
and
fs
jle
andb
loop
test
mov
dec
orb
nop
sub
imul
jp
int3
lret
dec
orb
rcll
insb
xchg
xchg
repnz
or
xchg
int
pop
sub
jb
jno
lock
mov
inc
jae
scas
push
mov
fsubrs
call
lret
sub
mov
test
into
xchg
cmp
sbb
ret
std
lods
pop
pop
repz
push
mov
subl
jno
push
out
leave
aas
mov
pop
popf
rcrl
inc
jecxz
fstl
inc
sub
fs
pusha
push
mov
mov
xchg
outsl
out
int
test
xor
arpl
popf
sbb
inc
and
mov
or
rorl
js
adc
stos
inc
mov
add
and
dec
lods
sbb
test
mov
stos
mov
aam
stos
in
mov
push
mov
test
out
roll
shll
aas
pop
cmc
cmpl
stos
and
dec
jns
add
ss
lock
inc
mov
dec
dec
lea
testb
push
insb
inc
enter
movsl
xchg
fisubs
mov
xchg
jg
or
out
leave
mov
sub
sub
loopne
pop
cltd
sub
jae
mov
loop
ret
sbb
push
cwtl
pop
pop
stc
push
jle
movsb
int3
inc
mov
xchg
inc
cltd
add
dec
out
sbb
cltd
out
ficoms
clc
or
cld
sahf
call
shll
inc
int
mov
xor
fiadds
imul
popa
or
hlt
push
push
lock
xor
jns
fstps
pop
sub
xchg
or
mov
call
cmpsl
xchg
movsl
cmpsb
aas
out
aas
int3
aas
jb
cltd
lods
jb
add
add
sbb
inc
mov
mov
aas
in
scas
movsl
add
lods
or
adc
xchg
add
mov
ljmp
sbb
out
and
jg
fstpl
add
mov
sub
push
data16
xchg
das
mov
pop
sbbl
cmp
ss
xchg
sbb
int3
testl
stos
mov
push
fstl
shl
cltd
stc
push
sbb
sub
pop
mov
or
je
shll
leave
mov
mov
cmp
push
xor
jns
faddp
pushf
and
lahf
shl
repnz
jmp
push
push
jno
xor
inc
in
xchg
mov
icebp
cwtl
repnz
xchg
cmpsb
pop
arpl
and
push
mov
xor
xchg
xor
mov
shl
xor
out
shlb
pop
por
sbbl
push
fldenv
lcall
in
gs
and
sbb
mov
bound
jle
movsb
or
inc
ror
mov
cmpsb
push
out
sub
jbe
xchg
idiv
fidivl
pop
xor
pop
mov
mov
fildll
jl
sahf
addl
add
int3
fsts
movsl
movsb
aam
jns
or
jmp
cli
cli
jne
fwait
ds
jge
mov
stos
mov
icebp
jno
je
hlt
loopne
dec
cli
jbe
movsl
xchg
xlat
dec
push
mov
repz
loop
xchg
sbb
pop
test
rcrl
jg
or
mov
in
stos
imull
lods
shr
sbb
sbb
push
mov
clc
mov
push
movsbl
scas
cli
stos
and
ja
inc
rcl
push
inc
std
cmp
orb
dec
and
bound
sub
xchg
adc
push
dec
mov
ret
jo
inc
jno
test
sbb
cmc
loopne
lods
cmpsl
push
ss
inc
xchg
jp
xchg
mov
sub
cmc
hlt
mov
add
loopne
and
mov
js
cmp
add
aas
jge
test
jl
sub
mov
rcll
iret
inc
dec
or
push
lret
lock
jmp
pop
cltd
cmpsb
cmpsb
push
cmc
xchg
lret
push
xchg
icebp
enter
mov
ss
scas
xchg
insb
fwait
sub
pusha
aam
or
popf
mov
hlt
cmp
out
pop
fimull
add
or
pushf
shlb
xchg
cwtl
add
das
fsubrs
fstpl
push
outsb
into
bound
dec
ja
push
shld
pusha
orl
adc
mov
scas
mov
jne
negb
aaa
fimull
pop
dec
adcl
fcomps
mov
cwtl
shl
incb
icebp
sbb
bound
sbb
dec
sub
call
scas
dec
leave
or
stos
scas
xor
lods
insb
out
mov
neg
xor
xchg
in
in
movsl
push
out
mov
push
push
lock
flds
jb
rorl
push
xchg
fwait
mov
mov
jb
xor
jg
push
mov
aad
rorl
push
xchg
mov
jecxz
jbe
xchg
bound
fisttpl
std
fdivp
pop
cmp
add
push
mov
fwait
xchg
stos
or
inc
mov
xchg
mov
pop
les
add
das
pop
push
shlb
ret
jge
cmp
rcrb
in
in
movsb
out
pop
cmp
or
gs
sub
out
ret
addb
outsl
inc
movsb
dec
roll
call
mov
xor
mov
xchg
stos
popa
insb
xchg
xchg
or
dec
icebp
mov
dec
loop
cmp
add
outsb
icebp
mov
push
sub
pop
mov
cmp
cmpsl
cli
mov
cltd
mov
xchg
addr16
mov
dec
pop
insl
xchg
fisubl
adc
dec
es
dec
test
cmp
sbb
outsb
sub
sub
jle
push
dec
mov
shll
leave
cmp
cmp
sub
das
orl
in
mov
shrb
leave
dec
adc
push
lret
es
xchg
jmp
inc
ds
inc
cwtl
data16
add
cmpsl
inc
lock
xchg
adc
stc
bound
fwait
jl
sar
mov
cmp
fcmovnb
mov
dec
bnd
out
add
imul
jnp
mov
push
push
test
jp
fistpl
ds
les
mov
xlat
pop
xchg
jbe
ljmp
push
outsl
adc
outsl
pop
cmp
sar
lcall
push
bnd
add
inc
test
dec
int
loope
andnps
loop
in
pop
loopne
jae
push
and
subl
fsubs
outsl
lcall
roll
out
xor
inc
fidivl
push
sbb
add
inc
mov
add
orb
xchg
test
xchg
jp
xor
ja
and
psllq
in
clc
fldl
rcrb
or
inc
mov
lcall
shrb
les
in
pop
pop
popf
mov
sbb
dec
lret
ret
xchg
push
sub
mov
lods
xchg
xchg
mov
lods
lret
adc
jne
xor
add
inc
dec
nop
mov
insb
and
negb
and
sbb
lds
mov
and
cmp
sbbb
imul
push
adc
mov
sbb
loop
dec
aaa
cmp
mov
cs
fiadds
sti
pop
rcr
sbb
movsl
sti
push
inc
sbb
gs
pop
repnz
mov
sbb
or
or
sub
fsts
in
mov
clc
push
xchg
out
xor
add
and
mov
fnstenv
sahf
cld
cvtps2pd
inc
pop
jb
sbb
adc
mov
or
pop
push
jge
rolb
mov
es
or
lods
and
aam
jae
enter
cmp
lock
and
sarl
xchg
dec
jg
xor
mov
lret
add
aaa
adc
xchg
xchg
fcom
mov
fsubp
fisubrl
adc
cmp
stos
inc
jp
ljmp
push
and
add
arpl
push
es
add
pop
ja
in
movsb
subl
imul
pop
sbb
aam
inc
push
pushf
push
sahf
lods
add
mov
imul
inc
sti
mov
gs
dec
repnz
xchg
sub
cwtl
xor
lds
cmpsl
lret
iret
fiadds
adc
dec
lds
xchg
pop
mov
or
roll
ja
mov
dec
sar
ret
lahf
sti
add
mov
adc
mov
pop
xchg
mov
pop
pop
fs
repz
decl
mov
es
addr16
aaa
jecxz
pop
mov
and
das
pop
xor
xchg
mov
push
scas
pop
pop
out
ret
inc
sub
leave
push
fdivr
pop
aam
push
add
cmpsb
fwait
dec
mov
sub
daa
sub
call
inc
lds
in
inc
iret
jne
pop
ss
mov
jecxz
sbb
add
cmpl
push
mov
push
test
xor
pusha
sub
mov
jo
dec
inc
xchg
in
lcall
mov
xchg
movsb
sub
xchg
clc
dec
adc
jbe
test
in
dec
in
aam
daa
test
or
mov
into
cmp
xchg
bound
jno
jne
nop
mov
adcb
add
inc
jg
lret
flds
sub
xchg
out
xlat
fsubs
aad
cmp
mov
cmp
ficompl
shlb
or
incl
pop
adc
call
jecxz
inc
icebp
xchg
lods
scas
popf
gs
clc
rorl
hlt
fwait
and
bound
inc
inc
xchg
push
cmp
jl
dec
int
lea
sbb
sbb
add
jle
add
xlat
or
pushf
xor
mov
jne
leave
add
in
rcl
inc
mov
int
icebp
lock
leave
dec
ds
es
xchg
int3
adc
xchg
xchg
mov
int3
sub
sbb
or
sub
dec
sub
sbb
pop
pop
mov
cmpsb
xchg
pop
jl
push
dec
shll
sub
add
into
add
out
xchg
sub
push
or
rep
mov
insb
jns
jmp
test
mov
out
adc
rcl
std
hlt
xlat
mov
and
lahf
mov
xor
xor
outsb
xor
mov
mov
pop
lret
call
pop
out
or
cmp
and
cli
pop
sti
and
fnstenv
aad
xchg
in
xor
sbb
add
cli
push
fs
mov
mov
sub
and
jg
mov
dec
lret
xchg
lea
inc
mov
out
fdiv
pop
into
xchg
jp
into
xchg
movsb
mov
sbb
push
mov
ret
inc
or
mov
in
clc
cmp
xor
js
cmpsl
mov
popf
mov
movsl
rclb
add
cmp
mov
pop
pusha
and
sbb
fndisi(8087
jns
pushf
in
and
pusha
loope
xchg
xchg
xchg
pop
fwait
mov
cmp
fs
ja
movsb
mov
sub
and
fimull
out
rol
adc
push
pop
lods
shll
mov
cli
repz
mov
addr16
push
mov
jle
popa
jp
pop
cmpsl
aaa
xchg
test
notb
cmp
sbb
dec
idiv
fsubrs
je
repnz
mov
sarb
mov
push
popf
ds
inc
bound
xor
jae
out
mov
add
gs
jecxz
pop
push
sub
inc
insb
test
dec
push
xchg
sub
imul
cmc
or
add
out
sbb
leave
and
mov
inc
out
popf
es
and
push
lcall
mov
adc
sbb
sbb
loop
ss
pop
mov
les
out
jp
mov
sbb
out
ret
shll
mov
sarb
outsb
mov
mov
out
jae
aaa
fisubrl
adc
jb
sub
test
sbb
jle
sub
imul
mov
inc
sub
mov
sub
pop
les
xchg
lret
and
mov
jmp
mov
fisubrl
jne
das
mov
cmp
add
dec
cmpsl
mov
or
jmp
les
cwtl
inc
add
addb
rcrb
les
insb
cmp
je
ficompl
mov
lods
daa
fwait
js
insl
adcl
arpl
cmpsb
pop
cmpl
js
sbb
add
inc
mov
in
ficoms
repz
fstpt
mov
bound
or
bound
lahf
inc
sbb
ret
cli
sub
sub
cld
cmp
add
lcall
ja
int
push
xor
and
pop
fwait
xchg
repnz
ret
inc
sub
xchg
dec
mov
inc
dec
xchg
xchg
pop
jb
aas
and
push
cwtl
xor
xor
cmp
insl
icebp
xchg
popa
jmp
test
mov
push
insl
inc
lret
loop
jg
inc
jns
jb
out
xchg
out
push
xchg
leave
mov
jae
outsl
push
adc
pop
xchg
dec
adc
incl
sub
out
or
pop
in
jo
inc
cmp
adc
pop
mov
ret
xlat
mov
ljmp
inc
arpl
and
sbb
xchg
add
jle
fisttpll
mov
rclb
mov
sbb
les
inc
pop
hlt
cmp
pop
jle
repnz
pop
out
push
dec
and
rorl
mov
xchg
fmuls
xchg
mov
pop
ret
test
xor
sbbb
add
fwait
dec
cmp
das
sub
sub
shll
int
jecxz
call
shrl
bswap
push
sub
or
es
cmp
push
lcall
lret
test
sub
dec
ja
sysexit
mov
sub
outsl
vrsqrtps
mov
loope
cmp
sahf
inc
cmp
push
std
sbb
dec
mov
out
pop
out
hlt
sbb
pop
push
jl
out
jle
cmp
cmp
pusha
mov
ljmp
cmp
ja
adc
push
dec
sbb
jns
imul
pop
outsb
ds
in
push
lock
test
cmp
mov
nop
sahf
push
inc
fisttpl
stos
dec
mov
das
xchg
and
push
adc
lods
pop
sub
mov
test
inc
shlb
fcompl
cmpsl
call
xchg
jnp
outsl
outsb
xchg
jo
ds
ja
jle
fsubrl
and
xor
cld
out
dec
jb
je
lods
stos
scas
push
or
pushf
adc
pcmpeqd
cwtl
test
sub
leave
push
imul
mov
inc
inc
dec
dec
inc
aas
cmpsl
adc
aaa
movsb
mov
sbb
xchg
ret
imul
int3
cmp
cmpsb
mov
pop
dec
mov
jo
sub
jae
jp
cwtl
bound
int3
lock
mov
sbb
cmp
mov
sbb
pop
and
ret
enter
ljmp
sbb
xor
inc
xchg
push
and
add
mov
jae
inc
adc
jecxz
cmpsb
mov
add
je
cmp
cmpsl
inc
mov
pop
mov
pop
sbb
dec
popa
icebp
jge
and
ficoms
std
xchg
inc
test
das
cli
sub
outsl
jmp
push
xor
insb
mov
clc
aas
sbb
in
xchg
sub
je
xchg
push
xor
mov
cmp
inc
stos
outsb
lods
add
mov
sub
mov
sbb
pop
push
popf
jl
adc
sub
xor
cwtl
aad
data16
sarl
hlt
cmp
fwait
inc
fidivrl
mov
sbb
addr16
jbe
mov
icebp
xor
cmp
shll
test
sbb
add
lcall
cmp
xor
sarb
sbb
mov
mov
mov
pop
test
popa
xor
mov
and
mov
stc
xor
stos
dec
stos
outsb
sbb
lds
dec
dec
xor
sahf
jno
add
fistpll
loope
mov
push
dec
xchg
pop
sub
mov
dec
das
pop
cmp
sti
xchg
cmp
imul
movsl
movsl
icebp
jl
ljmp
and
out
jmp
nop
test
test
mov
jecxz
in
std
dec
int3
insb
mov
in
ret
pop
rcrb
and
aad
addl
add
push
addr16
sbbb
into
int3
jmp
mov
adc
pop
jnp
cld
stos
orl
jp
sbb
test
cmpsl
and
cltd
adc
bound
mov
adc
mov
jecxz
or
cld
mov
xor
xor
loop
mov
mov
add
and
sbb
sbb
or
cmp
xchg
inc
dec
aaa
sub
mov
call
jecxz
or
mov
fdivr
test
dec
sarl
xlat
adc
mov
aas
out
sub
pop
mov
xchg
loope
cld
xchg
es
adc
call
or
fldenv
movsl
shlb
mov
cmp
push
and
cmp
rcrl
clc
test
addr16
icebp
mov
jle
loop
xchg
fidivl
enter
cmc
xchg
dec
and
test
subb
or
fidivs
in
mov
sbb
mov
sbb
or
dec
pop
dec
sbb
lcall
dec
inc
push
mov
jg
push
add
pop
mov
out
popa
inc
das
jmp
mov
adcl
jmp
sub
adc
sbbb
mov
jl
pop
mov
out
out
fisttpll
int
stos
mov
shrb
mov
pop
fidivs
sahf
pop
std
lods
ljmp
jge
call
push
aas
adc
repnz
cmp
lcall
or
inc
inc
cmp
dec
mov
jb
movsl
sub
insl
insl
mov
das
mov
sbb
adc
stos
and
jge
jns
pop
mov
adc
pop
arpl
dec
mov
push
cmp
sbb
or
into
xor
mov
pop
test
loope
lcall
pop
and
jns
dec
pop
mov
mov
pop
push
mov
sub
aas
sub
lret
pop
stos
or
mov
xchg
push
call
or
push
sbb
sub
imul
aam
mov
pusha
xchg
pop
ret
xor
ja
push
xor
pushf
jmp
testb
dec
cmp
push
loopne
int
mov
je
sbb
jle
and
cmpb
cmpl
cmc
stc
stc
insl
cmp
fcoms
aad
je
push
fbstp
pop
aas
pushf
loopne
jns
ds
mov
fidivs
xor
inc
pop
adc
popa
mov
movsb
add
stos
mov
mov
fwait
pop
xor
sub
adc
divb
mov
push
xor
jae
stos
lea
jecxz
shll
add
mov
popa
lock
cwtl
mov
adc
outsl
adc
stos
testb
dec
mul
ret
and
jge
nop
mov
jecxz
imul
jne
push
jp
push
stc
pop
fs
cmp
dec
push
testl
into
push
mov
cmp
mov
dec
cwtl
stc
xchg
inc
and
movsb
test
repnz
adc
dec
out
shrl
mov
and
lock
push
cmp
cmp
es
mov
inc
pop
aam
mov
rcr
or
ja
in
and
cli
inc
add
jecxz
mov
out
enter
xchg
pushf
stos
add
cmp
fldln2
cmp
cmp
jbe
loope
inc
mov
xchg
inc
jo
and
stos
mov
in
or
or
xchg
in
pop
in
pop
add
sub
add
ret
leave
enter
leave
mov
xchg
in
xor
mov
leave
add
cltd
cmp
pop
jno
xchg
out
mull
jno
in
or
push
cmp
jae
fdivrs
pop
and
inc
jge
adc
idivl
jbe
xor
jmp
repz
cli
sbb
movsl
addl
jb
cwtl
or
and
out
inc
cmpl
shll
adc
jns
sbb
int3
xchg
push
or
ret
inc
mov
pop
mov
andb
sbb
xor
ja
jmp
push
dec
or
and
fwait
push
inc
xor
dec
lcall
leave
inc
dec
adcb
cmp
fidivrs
loopne
adc
or
mov
insl
stos
or
inc
pop
add
sbb
mov
sbb
cwtl
sub
addr16
dec
jb
dec
lods
add
lahf
pop
add
mov
cmp
stos
addb
das
push
aam
rcrl
in
loope
sti
xlat
fst
mov
subl
insb
mov
ds
mov
fadds
call
test
jmp
lret
out
xorl
xor
jg
push
outsl
mov
or
mov
push
jo
dec
jl
sbb
jo
das
jmp
push
in
insl
test
xchg
add
outsb
push
cwtl
and
idivl
mov
nop
inc
and
jae
rcr
xchg
sbb
mov
pop
ret
fidivrs
push
sub
pmaddwd
nop
xor
push
inc
adc
cwtl
jae
icebp
mov
mov
dec
dec
lock
ja
jno
or
push
sbb
hlt
dec
cmpsb
mov
lods
test
mov
jmp
or
sbb
cltd
mov
mov
push
sbb
mov
js
aam
mov
pop
xor
push
sbbl
add
sbb
insl
xchg
add
rorb
sbb
cltd
iret
mov
pop
pop
cs
xchg
pop
data16
push
je
mov
jno,pn
aam
test
les
mov
mov
pop
xor
inc
movsl
pop
fdivl
repz
scas
jl
es
xlat
mov
sbb
cmp
jmp
xorb
test
roll
xchg
loop
cmpl
cmp
jp
insb
mov
dec
push
fmul
push
bnd
or
and
or
mov
or
mov
add
iret
jne
adc
pusha
pusha
push
mov
jmp
gs
imul
pop
mov
pop
fcoml
scas
xchg
sbb
push
aad
in
ss
sbb
loopne
sbb
jno
dec
xchg
pop
imul
cltd
mov
dec
dec
dec
sub
call
jae
jmp
loopne
mulb
sbb
into
xchg
pop
or
dec
inc
jno
sbbb
mov
dec
insl
stc
pop
pop
jne
push
fwait
inc
in
mov
pop
ljmp
inc
mov
add
pop
in
add
arpl
imull
fwait
mov
enter
test
mov
mov
xchg
dec
add
adc
cltd
sub
data16
int
jmp
lret
and
sub
daa
jnp
and
dec
popa
add
movl
icebp
sti
push
xchg
filds
or
mov
inc
adc
push
or
dec
mov
je
lcall
popa
ja
out
int
inc
ja
stos
dec
cmp
test
add
xor
cmp
cmp
dec
mov
dec
aad
int3
xchg
rcrl
lock
push
xor
faddl
sbb
add
inc
xchg
movsb
loope
daa
dec
cwtl
aaa
dec
lods
sbb
mov
adcl
jle
out
xorl
es
stc
mov
inc
add
sarl
or
mov
adcb
iret
push
cmpsb
loope
sub
push
les
leave
icebp
js
sub
push
add
xchg
fcomip
add
pusha
push
cmpsl
flds
dec
inc
test
cli
xor
fimuls
loop
sti
xchg
lret
adc
push
xchg
popa
aam
je
push
lods
iret
ja
push
cs
mov
and
adc
loopne
clc
xchg
fwait
inc
out
mov
dec
outsb
cltd
push
outsb
in
psubsw
sub
mov
cvtps2pi
mov
loopne
ret
popa
dec
leave
xchg
sbb
sbb
inc
sub
les
lock
or
lea
fwait
xor
xchg
cmp
pop
sub
mov
stos
xchg
and
lods
rcrl
sbb
mov
pop
and
hlt
pop
mov
loope
pop
lds
insl
push
cmpsl
jg
sbb
jge
jb
add
mov
je
in
mov
mov
mov
scas
cmpsl
aas
stc
stos
ret
add
repnz
lcall
dec
add
cltd
xchg
pusha
dec
fld1
mov
std
sub
cltd
icebp
pop
into
push
call
and
add
pop
xor
cltd
lods
xlat
aam
xchg
js
rcpps
or
hlt
jno
lret
jo
mov
loope
mov
mov
je
or
lret
cwtl
gs
xchg
idivl
and
inc
pop
mov
movsb
iret
push
test
sub
and
outsl
xchg
lahf
mov
negl
daa
loope
jg
mov
cmpsb
cmp
pop
aam
bound
test
xchg
lahf
sub
aad
sub
aad
push
inc
fs
push
leave
hlt
daa
xchg
jo
dec
sbb
int
jmp
imul
shll
or
insl
sub
jl
xchg
orl
sarl
jmp
xchg
jo
fs
imul
ret
into
or
aas
xor
mov
sahf
mov
lods
lods
mov
shl
jbe
daa
ret
fdivrp
pop
imul
push
push
loop
xor
xlat
aas
lcall
popa
arpl
mov
mov
imul
xchg
jg
ljmp
fldcw
cmc
cwtl
ja
cltd
sub
mov
repnz
std
jo
jnp
or
or
mov
std
pop
pop
pop
xchg
xchg
xor
adc
and
mov
adc
dec
push
ljmp
dec
jnp
sub
adc
xor
mov
dec
dec
pop
xchg
stos
cltd
cmp
pop
push
lret
loop
mov
jmp
sbb
outsb
adc
aam
js
in
adc
jo
jl
add
push
pop
in
xor
into
push
shlb
loopne
aad
mov
push
sub
dec
fidivs
xor
cs
clc
xchg
adc
enter
rclb
xchg
push
pop
add
das
ficompl
rolb
adc
stos
jmp
dec
loopne
pop
sub
xor
insb
sub
fistpl
mov
sbb
loop
cmpl
jg,pt
adc
xor
push
mov
loope
xor
out
or
mov
nop
arpl
jl
cmp
sahf
inc
sub
lds
inc
jns
inc
xor
stos
mov
mov
cwtl
adc
jl
gs
jnp
subb
mov
inc
dec
stos
push
scas
mov
gs
jp
xchg
lods
xchg
add
mov
mov
mov
jo
inc
cmp
jecxz
arpl
cld
movsb
loopne
cmc
inc
xchg
inc
call
xor
adc
rcrb
push
arpl
inc
addl
sbb
hlt
or
pop
and
subb
adc
dec
and
mov
aas
sbb
lcall
jmp
inc
out
or
pop
jnp
jae
shl
pop
int
jnp
inc
pop
mov
mov
stos
pop
adcb
nop
push
and
scas
inc
dec
fs
fsts
push
sbb
loopne
sbb
jmp
lock
imul
or
enter
call
sbb
mov
and
rorb
shl
inc
lock
test
test
mov
pop
sub
adc
vrcpps
xchg
inc
and
adcl
js
jno
insb
push
roll
sarl
movsb
andb
aam
inc
stc
xor
xor
fdivr
xor
xchg
sarl
xor
jp
jb
dec
cmp
jmp
sbb
test
xchg
cmp
mov
in
jnp
sbb
sbb
xchg
push
inc
and
loopne
ror
es
aaa
std
push
and
icebp
fldt
inc
push
push
je
scas
xor
push
cmp
cmpb
in
daa
call
jne
scas
dec
push
push
mov
in
fistpl
icebp
movl
adc
popl
push
aad
xchg
js
shlb
mov
sarb
mov
movsb
and
imul
pop
add
arpl
hlt
mov
nop
cltd
dec
inc
ss
stc
bound
push
and
imul
jbe
cltd
lods
cltd
rcrl
jp
push
mov
and
jae
mov
pop
shr
xchg
push
mov
lock
jg
xchg
std
stc
test
sarl
aaa
mov
sbb
sub
push
lea
daa
sbb
jb
mov
out
comiss
dec
es
arpl
loope
add
dec
xchg
push
outsl
cmp
jl
scas
lods
dec
mull
push
jo
jo
inc
inc
stc
add
lret
xlat
enter
test
jge
pop
xor
or
test
mov
adc
arpl
fsubrl
jp,pn
xchg
xor
sbb
hlt
xorl
mov
lret
dec
cltd
gs
jmp
add
and
ja
dec
adc
inc
testl
iret
les
mov
pop
scas
adc
outsb
jmp
imul
hlt
ficoms
add
ffree
push
mov
sbb
jmp
popa
fisubs
fsubrp
add
mov
arpl
or
cld
out
stc
addr16
push
xor
mov
cli
add
add
int3
shrb
jns
pop
inc
inc
mov
or
test
sbb
mov
test
adc
cmp
push
icebp
jp
jg
fwait
gs
stos
ja
fs
pushf
outsl
adc
push
adc
xor
dec
rcrb
push
xor
inc
dec
mov
mov
and
pushf
push
fsubrl
jl
test
scas
insb
inc
mov
adc
jl
scas
popa
push
push
jno
mov
and
mov
cmc
ret
jecxz
popf
pusha
or
pop
imul
mov
mov
fbld
sbb
push
mov
dec
test
daa
sub
mov
int3
sbb
in
jb
mov
rorb
loop
int3
imul
leave
in
scas
aad
jmp
mov
push
or
pushf
mov
xlat
dec
cld
clc
in
jecxz
into
mov
data16
xchg
adc
scas
daa
xor
mov
pop
fwait
dec
into
mov
jb
xor
ss
adc
jno
and
test
add
jmp
sbbb
inc
or
cmpsb
mov
inc
fdivs
adc
fidivrs
add
xchg
sub
mov
xchg
jne
and
push
jbe
mov
iret
mov
pslld
mov
aaa
imul
int3
loopne
rorl
into
or
mov
jge
cli
into
pop
inc
dec
sbb
pop
mov
cmc
sub
in
rcr
xor
insl
mov
shl
ds
aam
shll
test
sub
orl
cmp
sub
loop
shrl
xchg
fstpl
idivl
add
ljmp
hlt
aad
sbb
dec
push
pop
sbb
pop
stc
mov
sub
and
ja
popa
pop
pop
inc
inc
sbb
xor
push
out
popa
sbb
std
cmpsl
test
aad
aas
add
rolb
add
ss
pop
and
mov
pop
mov
adc
mov
xor
and
sub
sbb
fcmovnb
negl
sub
sahf
rcrb
mov
push
jbe
or
dec
and
test
insl
in
push
mov
adc
xchg
bound
in
or
xchg
sub
into
cmp
out
sahf
mov
adc
fadd
and
loope
jmp
add
xor
mov
jo
dec
pop
xchg
imul
out
sbb
sbb
xchg
xchg
ljmp
xor
es
xor
push
jnp
in
mov
adc
out
rcrb
and
xchg
xchg
cmp
fwait
addl
outsl
or
aad
mov
sbb
repz
xor
inc
test
adc
dec
out
lods
scas
jb
test
fwait
pop
mov
jmp
xchg
lahf
xor
pop
pusha
sub
push
add
aam
sbb
inc
mov
fsubl
mov
ror
loop
ficompl
jp
jg
pop
sbb
out
icebp
sahf
xor
hlt
dec
pop
and
pusha
mov
nop
mov
cwtl
ret
mov
jns
push
cmp
lds
dec
popa
in
lea
sti
stos
jl
aam
and
mov
cmpl
adc
in
sub
popa
fbstp
mov
shlb
mov
andb
inc
jb
mov
sar
pushf
into
or
dec
xchg
jecxz
sub
dec
fcompl
or
shlb
jne
dec
shl
rcll
std
imul
xor
pop
dec
xor
sbb
xlat
cmc
sarb
sbb
mov
sub
dec
xor
xor
mov
lods
repnz
adc
xchg
lret
push
sbb
lods
and
repz
push
jmp
mov
or
je
inc
xchg
lahf
push
adc
xchg
fnsave
mov
mov
cmp
xchg
cld
fstl
pop
push
pop
dec
xor
fbld
lcall
push
mov
mov
xchg
test
insb
push
aam
jno
sub
shll
addr16
xchg
pop
lds
int
jmp
aam
add
xchg
andl
sbbl
jae
dec
sbb
push
mov
lcall
jb
push
push
dec
out
push
mov
mov
ja
mov
aaa
push
or
lods
add
bound
fidivl
scas
adc
mov
pop
scas
push
std
push
jo
cwtl
loope
mov
pop
aam
lahf
xor
sbb
sbb
in
mov
cmpsl
psllq
shlb
testl
dec
mov
xor
repnz
or
testb
fildl
stc
xchg
mulb
add
test
inc
js
sbb
or
mov
and
cltd
inc
das
push
dec
les
pop
jno
mov
stos
movsl
sar
xchg
adc
es
adc
jl
adc
and
jmp
xor
repz
cmpsb
jge
fisubrs
inc
in
cld
pop
outsl
inc
and
adc
dec
cltd
mov
stos
cmp
ret
scas
into
dec
mov
stos
mov
jb
push
pop
int3
mov
and
jl
fsubrs
or
fsubr
jns
jo
jne
xchg
jne
cmc
iret
jmp
pop
jb
add
aad
pushf
out
js
repnz
insl
adc
loop
imul
hlt
sub
test
ficoml
adc
fwait
add
aas
fdivs
stos
push
sti
dec
outsb
sbb
dec
pop
loope
jns
mov
cmp
call
mov
das
jae
cmp
ja
rcll
out
mov
int3
mov
or
pop
lret
jl
inc
mov
inc
adc
or
inc
call
mov
or
in
jg
push
dec
xchg
fisttpl
jns
in
push
dec
scas
lods
lods
imul
sub
repz
or
mov
icebp
imul
out
inc
mov
ljmp
icebp
je
mov
pop
stos
dec
sbb
jg
xchg
lods
pop
mov
dec
out
shl
call
add
int3
clc
lret
mov
xorl
xor
data16
in
popa
insb
dec
xchg
sti
xlat
push
rclb
lods
ss
aas
mov
aad
insb
cmpsb
rcrb
loope
xchg
sbb
lret
repnz
pop
cwtl
orb
add
jo
mov
mov
div
popa
xor
inc
mov
inc
or
out
imul
inc
jne
notb
dec
pop
ja
xor
xor
outsb
mov
sarl
push
inc
sub
jecxz
pop
test
or
hlt
inc
mov
call
jl
sbb
cmp
pop
cli
ss
dec
sub
into
jmp
jecxz
sbb
or
push
insl
sbb
and
cmpsb
sbb
imul
mov
inc
adc
pop
sbb
and
scas
pop
sub
xchg
xchg
mov
out
popf
cmc
call
mov
mov
sub
and
push
push
jl
aas
or
cltd
les
mov
adcl
push
dec
mov
test
add
insl
std
cwtl
mov
sbb
jge
mov
inc
cltd
sbb
mov
into
mov
push
push
cwtl
and
scas
xchg
call
add
ficoml
lds
fmull
repz
lock
inc
out
test
mov
inc
mov
cwtl
and
cmpsl
jns
or
fs
adc
push
mov
cmp
push
xor
pop
ds
imul
aad
movsb
xchg
adc
fwait
xor
test
movsl
repnz
gs
push
xor
test
jne
fwait
mov
xor
fcoms
inc
mov
dec
xchg
or
pop
cmp
cltd
inc
mov
imul
mov
repnz
xchg
cmp
sti
inc
xchg
push
ljmp
lods
in
repz
mov
mov
daa
mov
dec
mov
xor
sbb
fmuls
mov
push
nop
pusha
lcall
mov
jnp
inc
roll
push
xor
and
sub
cli
add
mov
xchg
xchg
js
inc
lcall
dec
inc
lods
out
mov
out
stos
adc
in
mov
sbb
jbe
mov
sub
rorb
enter
insl
push
cld
pop
repnz
or
clc
jg
push
and
lock
shrb
jmp
cld
mov
inc
pop
xchg
pop
xchg
sub
xlat
pop
clc
ret
fs
push
ljmp
mov
in
clc
push
xor
jb
in
add
and
adc
mov
inc
and
jp
cmpsb
int
out
in
ret
movsb
dec
dec
fwait
inc
and
mov
mov
add
mov
popa
jg
or
fildll
add
loopne
loopne
add
adc
mov
fwait
cmp
add
and
dec
cmp
inc
push
mov
hlt
aam
int
or
add
shrb
repz
inc
dec
sbb
orb
pop
test
jecxz
mov
mov
ds
test
adc
mov
dec
in
int3
sbbb
je
aaa
leave
cmpsl
das
jmp
jle
or
mov
jle
mov
inc
cli
imul
adc
mov
mov
ja
cmp
inc
mov
loop
fs
cmp
clc
popa
push
loopw
sub
and
arpl
out
push
js
sbb
mov
pop
in
cs
pop
add
inc
pusha
or
adc
xchg
es
mov
mov
sar
mov
popf
insl
cli
sbb
icebp
xchg
inc
jns
enter
lret
enter
mov
rolb
jle
sub
jb
sbb
jge
int
sarb
fmull
mov
xor
movl
pop
sbb
mov
mov
into
out
inc
dec
pop
js
inc
mov
inc
stc
mov
test
and
add
inc
sbb
adc
xor
aam
mov
pop
std
movsb
insb
xchg
pop
xor
dec
rorb
inc
fcomi
inc
imul
ret
push
dec
add
mov
sbb
insl
jo
sbb
xor
adcb
mov
pop
dec
shrb
aad
jo
xor
push
add
gs
push
sarb
pop
cmpsl
cmpsb
sbb
push
jne
mov
jecxz
bnd
clc
dec
pop
ja
das
adc
fwait
xor
call
in
mov
cli
or
loopne
pop
inc
call
xor
jg
push
mov
cmpb
sbb
adc
imul
mov
test
test
push
inc
popf
mov
mov
dec
lret
or
adc
sbb
add
xchg
js
popf
cld
add
jle
outsl
jl
addr16
jne
add
push
and
push
or
sub
dec
push
jne
mov
call
ljmp
pusha
leave
lods
ret
lods
mov
lcall
hlt
or
or
icebp
arpl
fsubl
fwait
inc
dec
or
aam
and
pop
repnz
jno
or
inc
fstp
push
and
cwtl
cmp
mov
pop
pop
lock
lods
mov
repz
out
mov
popf
repnz
inc
data16
ficomps
addr16
test
inc
out
cmpl
push
jne
and
lea
and
mov
jle
push
add
insb
lea
pop
imul
fisubs
ss
xchg
sbb
faddl
ret
movsl
jmp
movsb
mov
push
adc
pop
paddusb
xor
lds
mov
imul
loop
ljmp
cmp
in
test
sbb
aad
aad
pop
xor
icebp
loope
jmp
in
mov
movl
mov
test
mov
adc
shlb
sahf
sbbb
xchg
in
sub
test
ljmp
xor
in
inc
fadds
inc
inc
adc
andb
int3
add
mov
cli
int
inc
aad
xchg
and
subl
in
jae
sbb
fistpll
rcll
mov
sbb
push
loope
push
mov
popf
insl
loop
in
jecxz
and
adc
repnz
pop
test
cld
mov
add
push
lea
outsb
adcl
lock
rep
jmp
jo
jne
jns
push
test
pop
and
dec
testl
sarl
xchg
inc
or
mov
psubusb
and
out
jecxz
test
add
jb
mov
or
jbe
data16
add
xor
jns
bnd
outsb
jns
stc
loopne
int
rcl
out
push
mov
and
push
sbb
and
ljmp
xor
pop
enter
mulb
popl
push
cmp
push
movsb
iret
or
xchg
iret
fbld
sbb
push
movsb
es
mov
adc
and
push
andl
sbb
shlb
les
jle
scas
mov
push
shrl
fwait
push
and
adc
pop
push
bound
cmp
in
stc
sub
pop
mov
mov
adc
xchg
paddb
lahf
pop
out
sbb
sub
jb
sub
pop
sti
mov
cmp
shrb
mov
pop
cmp
sub
add
sub
and
jge
or
cmp
repz
inc
scas
fwait
imul
andb
sbb
inc
mov
clc
jecxz
pop
movsb
mov
pop
test
scas
jne
ds
test
rcr
jne
incb
sbb
inc
push
sbb
lea
rcrb
add
ss
cwtl
ret
popa
adc
arpl
adcl
mov
ret
pop
scas
push
aad
nop
jmp
cmpsb
or
arpl
out
inc
push
sub
sbb
hlt
addr16
cld
mov
test
ucomiss
movsl
xchg
sbb
lret
xor
pushf
pop
xchg
gs
pushf
std
shl
cwtl
cmp
mov
mov
adc
mov
push
shrl
lcall
add
cmp
ljmp
es
test
repz
adc
loop
pop
stos
pop
xor
lea
or
enter
pop
sbb
jg
mov
lahf
dec
mov
push
testb
xchg
inc
mov
mov
fcmovu
mov
xor
popa
push
pop
xor
fstl
add
dec
mov
jae
int3
push
dec
dec
mov
pop
cmp
adcl
mov
mov
lret
cmp
push
jge
sub
mov
scas
inc
dec
push
lret
mov
mov
inc
inc
aaa
out
into
add
mov
push
xchg
push
and
push
in
dec
test
enter
icebp
pop
push
movsb
ss
pusha
dec
movsb
jns
stos
andl
mov
push
push
sub
fcmovbe
cmp
ja
mov
das
add
cmc
cmp
sbb
sbb
adc
jo
outsl
xchg
and
lock
leave
mov
push
adc
mov
xlat
adc
out
repnz
aad
out
test
mov
xchg
add
scas
cltd
mov
notb
cmp
add
andb
jb
sbb
adc
in
shr
jmp
mov
dec
pop
push
mov
xchg
mov
int
loopne
dec
sub
roll
jge
mov
xchg
cmc
ljmp
xor
emms
dec
inc
iret
jbe
enter
cmpsb
push
inc
dec
cmpsl
sahf
sarl
pop
rclb
lea
xchg
or
sbb
or
andb
divb
cmp
lcall
mov
mov
sbb
mov
hlt
in
stos
out
stc
xor
mov
loop
or
jp
cmpsl
or
xchg
and
clc
mov
sahf
inc
pop
mov
add
sub
inc
pop
add
or
mov
sbb
popw
mov
pop
add
aad
leave
mov
or
lds
lcall
push
xchg
sbb
or
mov
cmpsl
dec
in
nop
cmp
imul
in
in
lea
push
mov
movzwl
daa
into
or
dec
gs
cltd
out
shlb
pop
push
stos
sbb
lret
imul
cmp
xor
xor
clc
ss
push
lods
aas
subl
and
dec
adc
cltd
scas
test
inc
mov
mov
sub
fs
cmp
xchg
aam
outsl
and
jmp
mov
ror
xchg
test
cmp
cmc
xor
mov
and
test
push
dec
cmp
mov
rorb
push
mov
push
inc
sub
cmp
sub
pop
mov
push
rcr
call
xchg
mov
lock
imul
cmp
test
sbb
xor
mov
jmp
sbb
mov
inc
cmp
testl
mov
jge
jnp
jge
das
cwtl
or
push
xchg
and
in
xor
ds
rclb
sub
jl
jno
cltd
in
outsb
jns
leave
xchg
jmp
mov
mov
fs
ret
lods
pop
pop
movsb
imul
dec
push
jecxz
clc
aam
add
push
mov
in
lcall
inc
je
sub
dec
and
and
and
adc
fadd
aam
pop
cmc
fstl
cmp
lods
xchg
inc
pop
mov
jmp
dec
scas
incb
out
into
dec
sub
pop
mov
mov
outsl
shlb
mov
mov
dec
fimull
adc
je
pusha
mov
inc
cmp
aaa
mov
cmpsl
mov
lret
or
push
push
inc
addb
mov
xor
lret
sbbl
rorb
mov
lds
outsb
fwait
jbe
add
mov
aas
push
sti
sbb
mull
outsb
pop
add
test
push
dec
orl
pop
mov
xchg
fmull
pop
pop
push
xchg
jns
je
or
in
inc
cmp
xchg
pop
ss
loop
and
cld
fiaddl
test
stos
inc
jmp
in
mov
outsb
dec
movl
mov
test
lock
cmp
dec
lahf
dec
ret
mov
xchg
adc
mov
inc
sbb
add
pop
testb
adc
xchg
imul
mov
aam
mov
xor
fidivl
jnp
adc
pop
add
ficoms
icebp
fisttps
pop
cld
add
xor
leave
push
addl
addr16
inc
das
sub
fbld
and
pop
sub
ds
repz
hlt
push
push
out
loopne
hlt
push
xor
inc
daa
mov
mov
xchg
imul
mov
mov
aam
push
xchg
or
xchg
sti
push
fnstcw
jo
mov
adc
test
out
push
pop
and
inc
lret
fnsave
sbb
pop
push
clc
repz
mov
lock
xchg
push
loopne
punpckhdq
clc
pop
add
incb
cld
xchg
jmp
inc
mov
dec
aaa
ds
inc
push
push
dec
xor
ja
add
jecxz
inc
cmp
or
mov
div
outsl
xchg
cmpsb
pop
dec
aam
xor
sahf
jbe
out
xor
mov
jns
adc
sbb
mov
and
jp
mov
cmp
imul
mov
imulb
outsl
mov
dec
fisttps
mov
mov
icebp
fsubr
dec
cmp
pop
xbegin
push
sarb
test
clc
int
dec
outsl
or
iret
ss
or
les
add
rorb
test
adc
jb
sbb
add
cli
iret
push
pop
fcomps
jecxz
repnz
and
enter
jle
lret
cmp
das
ss
inc
mov
iret
inc
popf
pop
cmpsl
pop
mov
push
lea
iret
into
push
int3
xchg
data16
jmp
xchg
popf
push
push
jne
clc
add
in
dec
xchg
xchg
cli
pop
and
loopne
shll
aas
rcrb
das
xor
loop
aad
popa
inc
push
pop
and
hlt
andl
push
push
ljmp
dec
pop
xchg
fs
frstor
adc
mov
insl
push
lods
fimull
mov
rcll
arpl
and
mov
jg
jmp
sahf
dec
xchg
addr16
int
mov
pop
pop
inc
add
mov
stos
loope
cmp
xlat
add
fiaddl
push
movsb
and
mov
stc
or
mov
jae
mov
dec
clc
or
inc
inc
into
inc
gs
sbb
shrb
ljmp
out
xchg
sahf
push
mov
adc
sub
test
sbb
xchg
outsb
xchg
dec
push
xor
pop
orb
pop
push
mov
hlt
loop
aaa
mov
or
dec
movsl
aas
mov
xor
xchg
stos
sbb
xor
xchg
cwtl
push
jo
negb
jge
mov
sbb
xor
aam
adc
xchg
int
lahf
jbe
cmpsl
aam
lahf
std
xchg
inc
dec
scas
insl
or
sub
enter
sub
cmp
and
push
inc
loopne
inc
mov
push
cltd
mov
dec
add
pop
negl
fs
adc
xchg
inc
mov
xor
repnz
cwtl
outsl
mov
sete
cmpsl
pop
in
ja
push
push
or
cmc
out
or
xchg
les
lret
lret
cmc
jge,pn
cli
popa
xor
iret
or
push
rorl
ret
push
adc
sub
push
push
xchg
push
push
xchg
mov
sub
mov
xchg
fsubrl
mov
test
ffreep
int3
dec
inc
fcoml
cmpb
sbb
add
mov
es
iret
add
mov
mov
nop
fstpt
xlat
xchg
in
adc
int
sti
test
push
lods
iret
repz
pop
sbb
or
sbb
add
or
add
xor
push
cmc
xchg
lcall
mov
inc
jmp
push
shr
and
adc
jmp
addr16
out
cmpsb
test
pop
add
sub
push
jl
add
add
aad
aam
pushf
js
mov
mov
xchg
add
fsubr
mov
push
lods
xchg
inc
cmp
adc
or
pop
lods
fcompl
popf
sub
mov
xchg
ljmp
lea
ss
dec
les
pop
into
xchg
pop
cmp
imul
xchg
xor
pop
mov
xchg
xchg
mov
lds
xchg
in
mov
test
pop
jmp
je
push
xchg
mov
ljmp
xchg
out
idivl
cmp
cmp
mov
repnz
push
pusha
xchg
stos
stos
pop
xlat
push
test
lods
and
inc
and
lods
negb
dec
in
xchg
xor
mov
cmp
call
cmpsl
pop
jle
fdivs
filds
xor
jg
std
cmc
insl
repnz
data16
cli
pop
dec
xor
inc
add
jp
jl
imul
clc
and
sub
mov
cmp
imull
dec
call
loop
adc
cltd
inc
std
mov
int3
loop
mov
sub
rcpps
xchg
dec
pop
rcrb
adc
fs
lods
in
mov
sti
fisubs
xchg
mov
xor
imul
ljmp
fidivl
jb
jge
adc
adc
sbb
inc
mov
rorl
scas
mov
hlt
hlt
movsb
inc
out
popf
jnp
push
jnp
push
cwtl
insl
lret
aas
dec
mov
dec
add
int3
ja
test
sbbl
js
int
push
xor
and
push
lret
pop
adc
jp
push
fcmovne
call
shll
xchg
dec
push
mov
sub
std
iret
push
mov
jge
adc
int
jno
lea
test
adc
pop
mov
js
fidivrs
mov
cmc
dec
test
cmc
push
xor
movsb
je
inc
popa
mov
sbb
inc
sbb
je
xchg
pop
mov
shrb
sbb
mov
gs
mov
pop
inc
push
mov
flds
inc
xchg
push
rorb
xchg
add
in
es
ds
adc
sub
mov
mov
mov
sti
rclb
xchg
ret
lods
mov
xor
xor
adc
fwait
mov
jnp
lds
jno
stc
add
xchg
das
push
lea
cld
sbb
mov
push
stos
jmp
mov
test
outsl
xor
mov
jb
dec
or
daa
inc
and
orl
ret
faddl
ret
mov
aas
or
cmp
add
out
insl
cli
pop
or
and
cli
daa
mov
sbb
push
lcall
lea
mov
push
ret
adc
mov
lret
xor
fistpl
jae
jge
adc
test
rorl
jecxz
inc
ret
pusha
xchg
and
cltd
pushf
mov
fsubrs
inc
mov
es
or
lret
scas
or
pop
xchg
or
jmp
aad
adc
fadds
out
and
sub
scas
fbstp
shlb
xor
nop
sub
in
aaa
pop
add
jno
repnz
push
mulb
xorl
in
in
sub
inc
pop
bound
mov
cmp
mov
mov
sub
rorl
sbb
stos
js
ds
hlt
pop
push
sti
ret
mov
test
adc
inc
leave
mov
dec
dec
mov
xor
repz
addr16
dec
cmp
aam
jo
shlb
scas
pop
mov
in
dec
shrb
aaa
test
jg
lahf
jns
sub
dec
leave
nop
aam
adc
cld
push
leave
jbe
adc
pop
mov
repz
leave
adcb
cmc
rorb
push
icebp
inc
outsb
cmp
xchg
fwait
mov
outsl
mov
mov
das
roll
dec
jecxz
xlat
lahf
out
push
test
movsb
insb
add
mov
ret
nop
test
sbb
jle
ljmp
lods
mov
cmp
push
jle
rorl
ja
iret
data16
xchg
pop
sbb
mov
dec
mov
popa
rorl
sub
inc
lds
mul
imul
jl
roll
xor
iret
mov
sbb
add
jg
sub
int3
xor
mov
mov
and
xbegin
sub
addr16
xor
imul
out
xor
test
fildl
xor
imul
mov
xchg
fidivrs
les
pop
and
cwtl
mov
add
jecxz
gs
xchg
in
jmp
notb
ds
fists
in
or
lds
xchg
test
loopne
into
iret
jne
xchg
ds
jns
gs
test
mov
inc
mov
mov
sub
sub
ficoms
pusha
lret
xor
sbbb
loopne
xchg
push
sti
xchg
xchg
ss
push
fs
cmp
imul
hlt
adc
add
adc
ljmp
sbb
in
sub
or
xchg
test
xor
arpl
cmp
sub
mov
insl
mov
xchg
mov
adc
shll
jnp
leave
or
fcomps
xor
aad
mov
mov
push
out
rcl
or
cmpsl
dec
pextrw
outsl
add
scas
add
movsl
push
in
ret
pop
fisttps
iret
inc
jae
clc
adc
mov
push
shll
cmpsl
adc
inc
lcall
imul
mov
cmpsl
div
fcoms
data16
sbb
cmp
xchg
jl
jo
xor
xor
add
addr16
repz
add
mov
fidivs
inc
pop
mull
das
jl
fdivrl
enter
lock
iret
outsl
sbb
and
jno
cmp
xorl
jl
inc
cmc
leave
mov
xchg
push
mov
cmpsl
jnp
movsl
xor
cmp
testb
popl
or
push
and
sbb
fucomp
lea
add
cli
jp
loop
int
pop
mov
push
adc
lock
pop
loope
je
cs
mov
xchg
fidivrs
mov
mov
mov
jle
cmpsl
and
lds
inc
mov
adc
add
mov
cmp
aaa
aam
lahf
cli
mov
jg
lock
add
inc
ret
les
push
add
adc
sub
cmp
inc
and
add
fs
add
adc
push
fcoml
mov
shll
sub
idivb
adc
out
dec
leave
stos
push
divb
je
cmp
bound
lods
pop
cmp
bound
adc
lret
call
sub
pop
lock
push
adc
stc
cmpb
pop
sub
testb
xchg
mov
adc
pop
xlat
push
divl
test
fsubr
adc
xchg
inc
leave
add
sub
mov
push
std
insb
and
or
inc
arpl
lea
pop
test
add
shrb
rcrb
cli
cld
cmpsl
in
lcall
outsb
and
addr16
push
mov
jo
mov
jns
hlt
gs
jae
fdivs
xchg
mov
mov
push
pop
inc
test
popa
in
inc
gs
rcrl
sbb
xchg
je
sbb
fucomi
push
lret
ljmp
add
fstpt
imul
jnp
cmp
icebp
shrb
mov
inc
mov
sbbl
test
push
xor
dec
lods
mov
dec
pop
push
cmpb
cmp
dec
mov
inc
movsb
mov
xchg
fwait
xchg
sbb
daa
and
dec
or
pushf
lods
jecxz
repnz
in
out
aaa
ret
xor
stos
sub
or
sbb
insl
sbb
cmpsb
sbb
mov
jns
test
mov
pushf
xor
insl
pop
jae
mov
or
push
sub
vphaddwd
mov
and
fldl
push
jecxz
sbb
xchg
fdivrp
cmp
or
sub
orb
fwait
ror
add
ss
jns
std
lods
mov
cmpsl
fildll
lcall
and
mov
cmpsb
jecxz
cwtl
mov
cwtl
dec
in
add
xchg
mov
adcb
adc
mov
loopne
jg
add
adc
jnp
andl
sub
xor
jae
mov
sub
out
or
stc
mov
scas
fcomps
jnp
add
push
cmp
sub
push
sbb
fisttps
sbb
or
cmpsb
xorl
data16
lds
jl
leave
add
mov
outsl
add
imul
mov
and
inc
mov
int3
mov
imul
jae
es
out
xchg
call
inc
insb
sbb
xchg
cmc
fiadds
aam
add
aas
and
add
cli
aad
icebp
inc
ret
clc
loope
lea
and
push
inc
pusha
push
insb
cmp
ljmp
je
mov
xor
push
ffree
fadd
iret
xor
adc
push
push
outsb
sub
leave
popa
mov
and
jmp
add
pop
lea
outsb
scas
hlt
jmp
lret
and
mov
inc
orl
cmp
lds
adc
rorl
sbb
push
jo
and
out
sarl
jb
sub
dec
cmp
iret
xchg
push
mov
jg
pop
ljmp
xchg
mov
subb
xchg
xor
add
imul
jo
lds
ljmp
scas
sub
cld
fisubs
int3
jg
std
adcl
inc
xchg
popl
mov
xchg
out
idivb
rcrl
shl
and
lods
iret
jle
dec
xor
mulb
jb
sbb
loopne
sbb
and
and
sub
jae
pop
jae
jb
mov
pop
sbb
js
pop
dec
jns
stc
outsb
mov
fwait
in
jmp
sbbb
les
int3
mov
aaa
adc
cmp
loopne
push
rcl
pusha
add
iret
enter
cmp
push
js
cmp
das
sbb
pushf
lret
fsubrl
sbb
jns
stc
mov
xor
adc
sahf
mov
mov
push
aas
xchg
xchg
lret
or
xchg
mov
mov
std
shrb
xchg
mov
test
pop
gs
loope
push
xor
lret
adc
adc
inc
subb
testl
das
jecxz
mov
insl
pop
lahf
mov
pop
fcmovnbe
mov
aaa
fsubrs
xor
jp
xchg
rcr
mov
addl
inc
test
insb
idivb
and
xchg
xor
rolb
push
je
ss
mov
jp
inc
pusha
hlt
xchg
xlat
test
iret
push
lret
cmp
movsl
data16
je
and
jno
je
aas
in
sub
out
cmc
rcrb
rcl
insb
imul
lods
arpl
fisubs
or
jl
xchg
ret
and
sahf
inc
lods
fimull
xor
ret
testb
cmp
mov
rorl
aam
daa
insb
leave
sbb
or
mov
in
add
in
stos
inc
push
sahf
aam
inc
stos
mov
xorb
push
sub
orb
test
xchg
xchg
inc
fs
mov
dec
xlat
test
mov
ljmp
dec
sub
stos
outsb
and
inc
inc
jne
in
ds
clc
jno
adc
loop
push
daa
add
cmp
or
mov
es
push
pop
sub
and
jb
pop
popa
and
mov
sbb
push
movsl
xorl
and
je
bound
insb
dec
bound
cmp
rcl
cwtl
fidivrs
dec
dec
call
and
push
and
inc
xchg
imul
sub
add
pop
scas
lahf
xchg
in
cmp
fwait
xchg
mov
lea
imul
xor
push
cmp
or
xor
test
popf
movsl
mov
xor
shr
iret
in
mov
stos
mov
sbb
pop
dec
push
push
jle
lea
cmc
push
out
or
push
fwait
into
not
or
mov
jmp
xor
and
add
dec
xchg
sahf
dec
sti
movnti
sbb
out
je
leave
inc
jns
or
cltd
cltd
dec
iret
pop
mov
test
jmp
enter
mov
stc
popa
xchg
or
lods
pop
scas
popl
mov
fld
lods
dec
cs
lds
sbb
enter
sbb
mul
lods
stos
adc
adc
xchg
insb
jns
test
and
idivl
mov
push
aad
scas
or
cld
aas
stos
mov
xlat
outsb
ss
sub
fidivrl
inc
std
push
movsl
push
sub
xchg
adc
sbb
push
lret
shr
inc
inc
push
jmp
mov
ja
cmpsl
xor
sahf
jmp
mov
inc
scas
sub
xor
mov
data16
pop
pop
sbb
push
dec
mov
mov
push
call
pop
pop
or
std
or
test
or
enter
lea
imul
xor
add
dec
and
lods
xlat
sahf
pop
mov
cmp
fcos
in
movsl
sbb
and
and
xor
shrl
or
insb
lcall
mov
mov
adc
mov
mov
into
call
xchg
sub
fwait
imul
xor
jp
jne
and
xchg
test
loopne
mov
repz
dec
mov
push
jb
sbb
das
mov
in
lea
xor
push
leave
sbb
push
push
subl
ds
xchg
mov
adc
xchg
shrb
cli
loope
xor
cld
in
mov
dec
or
mov
in
lods
and
ret
shlb
mov
incl
in
sbb
jmp
jb
mov
xor
insb
sbb
imul
adc
sbb
add
jg
sub
cs
mov
in
jg
pop
add
xor
jb
mov
ds
insl
loopne
stos
dec
xlat
xchg
mov
add
jecxz
push
inc
adc
sbb
sub
out
sub
sbb
inc
rep
nop
sbb
mov
mov
rcrl
loop
dec
sti
les
cmp
ret
lods
add
fldl
pop
dec
in
outsl
std
jo
push
push
cmp
mov
jmp
jno
cld
mov
cmp
sar
adc
inc
mov
mov
mov
mov
dec
push
pop
repnz
pop
decl
sbb
xchg
push
repz
dec
mov
adc
out
cmpsl
pusha
aad
icebp
mov
inc
mov
dec
test
and
jne
clc
testl
mov
jnp
mov
cli
out
xor
mov
fs
inc
mov
mov
imul
mov
mov
xchg
imul
push
add
test
arpl
push
dec
fistl
lods
pop
xor
and
pusha
adc
clc
lea
dec
dec
or
inc
shll
xlat
sbb
scas
pusha
or
dec
fidivs
jge
popf
push
shlb
xchg
mov
push
mov
or
pop
aaa
jl
jae
dec
pop
sbb
xchg
xchg
cld
mov
cmp
xchg
sahf
adc
inc
or
lds
xchg
je
cmp
shlb
cmp
aaa
dec
xor
ss
pop
sub
inc
mov
subb
test
roll
sbb
aam
loop
in
mov
jg
je
mov
adc
jge
fs
fdivrp
mov
push
dec
adc
pop
xlat
mov
int3
cld
in
xor
mov
push
fisubs
mov
inc
cld
aad
and
subb
inc
cmc
sbb
push
jmp
hlt
xor
fwait
sbb
push
repz
leave
decl
inc
ss
mov
pop
loopne
mov
add
sti
outsb
dec
or
loopne
loopne
pop
cwtl
movsb
andl
scas
adc
sbb
pop
push
ds
adc
scas
rcll
sbb
or
arpl
adc
test
jns
xor
add
xor
imul
push
jns
into
push
mov
mov
fsubr
pop
add
shrl
xor
sbb
jae
dec
mov
sbb
sbb
loopne
xor
ret
cltd
rcrb
and
cmc
movsb
insb
pop
loopne
test
adc
popf
shlb
adc
lods
mov
mov
xlat
repnz
fisubl
ss
and
test
stos
cwtl
inc
mov
jle
sub
jmp
cli
mov
cli
cmp
stc
adc
add
clc
dec
cli
hlt
sbb
imul
jmp
jbe
jnp
repnz
cmp
push
pop
js,pt
fwait
sbb
push
ret
jge
pop
dec
repnz
popf
push
fisttps
jnp
mov
lahf
adc
insb
push
fwait
lahf
mov
test
loope
push
adc
icebp
add
and
xchg
jge
mov
mov
mov
stc
pop
inc
sub
jae
add
scas
adc
xchg
imul
pop
fstl
imul
push
ss
xchg
fildll
mov
repz
pop
dec
jo
es
fldt
jg
xor
dec
dec
jp
lods
bound
lret
xorl
sbb
shr
pop
mov
les
push
push
loopne
std
fwait
jge
pop
sub
mov
mov
mov
and
mov
mov
ljmp
data16
clc
adc
add
xchg
sarl
xchg
inc
testb
sub
das
adc
jl
lds
and
shr
mov
mov
sub
pop
xlat
test
jp
or
out
cmp
lock
adc
repnz
nop
and
dec
pop
dec
pop
sub
and
jecxz
cmp
mov
scas
add
cmpsl
jp
sbb
movsl
scas
add
out
push
mov
mov
enter
lahf
inc
fnstcw
hlt
and
dec
in
jns
mov
int
mov
mov
loope
or
push
punpcklwd
lcall
cwtl
or
mov
jge
and
fs
mov
cmp
or
jmp
pop
repz
inc
inc
out
inc
ss
push
mov
mov
pop
popf
push
rolb
xlat
aas
rorl
movsl
lock
mov
fidivrs
lea
jns
rclb
test
adc
inc
xchg
push
mov
inc
sub
add
add
rorl
loop
int3
mov
jns
pushf
mov
jp
push
dec
in
shl
rol
in
insb
dec
xor
sahf
daa
adc
mov
jns
xchg
jmp
mov
or
ljmp
stos
cmpsl
push
fidivs
push
mov
arpl
mov
mov
sub
xchg
mov
fs
aaa
pop
mov
sub
dec
enter
add
xchg
mov
leave
cmpsb
cwtl
jp
mov
pushf
rcrb
add
insb
sbb
pop
pop
repz
std
dec
dec
fmul
jecxz
lret
pop
in
push
sbb
cmc
pop
pop
xchg
lods
jae
mov
loope
add
sahf
xorb
cli
out
pop
mov
insb
iret
loope
imul
xchg
sbb
dec
pop
mov
fmuls
roll
addl
aad
icebp
add
jo
aam
cltd
insb
adc
push
or
popa
mov
and
pop
mov
cmp
movsb
jbe
pushf
fistpll
xorl
aaa
rcll
push
cltd
mov
dec
cs
int
cs
out
xor
xor
ret
cmp
push
scas
jl
in
push
and
mov
gs
jnp
popf
or
adc
adc
xchg
scas
xchg
std
sbb
into
stos
cmp
push
sar
inc
sub
sbb
adc
pop
sub
lcall
xchg
or
add
enter
nop
std
sbb
and
mov
je
test
mov
cmp
adc
jge
repnz
adcb
cmp
test
cwtl
jp
inc
xor
jae
mov
cmp
rcl
rcrb
movzwl
lock
sub
jle
push
cmp
inc
sbb
outsb
dec
je
ret
das
mov
repnz
es
inc
dec
add
xchg
adc
or
mov
fwait
adc
jmp
rcll
xor
lock
pop
cmp
sahf
sub
xor
aam
push
cmp
sbb
arpl
ljmp
dec
pop
sub
add
pop
fs
fcoml
pop
and
pop
out
push
lea
or
ja
rcrl
sub
xchg
stc
add
cmp
sti
sbb
loope
rclb
das
mov
mov
fildl
loop
in
or
fwait
scas
repz
push
adcl
pop
adc
jo
ret
gs
adc
or
dec
mov
xchg
cmp
dec
push
mov
into
cltd
inc
mov
mov
ljmp
add
imul
xor
in
pop
add
xchg
ds
pop
andb
dec
sub
rclb
movsb
cmp
psubsb
push
lds
or
subb
jns
jl
fistpll
insb
lcall
mov
ljmp
ret
rorl
add
xor
push
fcmovnu
sub
xchg
mov
imul
adc
push
xchg
mov
pop
sbb
sbb
mov
xchg
mov
inc
add
pmaxsw
fiadds
adc
leave
call
sbb
test
xchg
pop
dec
movb
aad
cltd
movsl
push
pushf
jnp
data16
fidivs
data16
mov
loope
sarb
hlt
out
cmpb
ja
lock
jge
push
mov
sti
sub
ja
mov
mov
mov
aaa
mov
ret
fwait
mov
or
outsl
in
mov
inc
jae
in
jmp
cmp
xor
xchg
mov
imul
fwait
xor
jecxz
cs
push
xor
sub
popf
xor
in
decb
xchg
ret
xor
cmpsl
or
lods
adc
test
mov
push
stc
mov
push
gs
mov
and
ret
push
push
mov
xchg
js
xchg
mov
mov
outsb
repz
daa
jb
cmp
dec
mov
or
mov
and
leave
int
roll
mov
xor
push
ljmp
std
mov
lahf
movb
mov
add
jl
mov
pushf
loope
shrl
cmp
xor
es
out
sahf
push
leave
repz
push
jb
cmpsl
ret
push
cmc
es
xor
xor
adc
idivb
int3
lret
inc
rorl
lret
jnp
pop
inc
mov
cltd
adc
lock
sbb
jl
cld
push
pusha
iret
sbb
rcrl
mov
in
lock
xor
insl
pushf
movsb
js
in
int3
mov
rorl
in
mov
push
inc
push
incb
aaa
xchg
jno
sub
cmp
cmp
pop
or
cmp
fcmovnbe
inc
and
fsubrs
sub
push
stos
add
xchg
mov
in
mov
push
movsb
mov
ljmp
push
icebp
cwtl
sbb
sbb
lods
and
inc
out
addr16
mov
xor
sub
xor
leave
sbb
cmp
adc
std
dec
push
stos
pop
xchg
ret
mov
jp
leave
inc
mov
push
jle
jnp
push
gs
in
cmp
sti
xchg
inc
inc
pop
lea
xor
mov
xchg
cmpsb
fldcw
xchg
and
add
imull
sub
je
lods
fiadds
stc
xorb
sub
and
mov
test
mov
decb
pop
jp
ja
or
inc
cwtl
or
loop
mov
mov
xchg
popf
lods
ja
inc
out
mov
push
mov
cmp
dec
stos
dec
aam
xchg
addr16
shrb
push
aam
lret
adc
lods
and
mov
cmp
ljmp
imul
insb
or
xor
mov
pop
stos
pop
xchg
decl
cmc
xchg
fcompl
jmp
in
in
es
fs
jne
fimuls
push
push
sbb
push
popa
cmp
jns
fadds
inc
adc
outsb
jo
cmp
xor
push
arpl
pop
popf
mov
jmp
mov
std
adc
out
daa
xchg
xchg
inc
cmp
jmp
sbb
lret
jnp
cld
add
fidivrl
pop
cmp
cltd
push
pop
sub
inc
mov
inc
dec
push
outsl
dec
rcrl
out
movsb
inc
or
in
addr16
sbb
out
les
cltd
into
pop
pop
call
lcall
pop
outsl
adc
jbe
das
out
repz
xchg
push
add
add
push
shlb
or
rcrl
inc
jae
ljmp
addr16
adc
cwtl
clc
xchg
jecxz
push
fsubrl
jl
push
add
or
push
sti
inc
into
sub
push
mov
stc
out
in
fucomip
mov
mov
cmp
mov
mov
xchg
inc
cld
mov
testb
les
fcoms
call
sub
inc
jp
ficoms
jle
dec
sbb
pop
je
ljmp
inc
insl
mov
out
adc
notl
test
daa
rcrl
push
jb
in
arpl
push
sbb
ret
or
mov
dec
push
jp
cmp
adc
test
jp
jl
shrb
loop
loop
push
nop
sarl
out
in
dec
stos
mov
movsl
push
pop
or
test
jmp
sub
xor
jmp
fldt
in
outsb
sbb
fisttpll
pop
push
insb
mov
aaa
popf
int
cmc
ss
lret
int3
in
add
xchg
es
lcall
mov
roll
aas
mov
pop
jg
lahf
jno
clc
imul
add
dec
add
mov
push
popf
sub
pop
mov
arpl
mov
xor
stos
jo,pn
sti
pop
pop
divb
dec
pusha
dec
pushf
add
mov
push
ljmp
in
xor
lea
cltd
or
fmuls
icebp
inc
pop
lds
pushf
dec
repnz
jae
jae
stos
pusha
lea
out
jl
iret
cmp
jg
or
mov
ret
mov
pop
pop
dec
dec
cmp
sti
rcrb
scas
shll
mov
push
push
lret
jecxz
or
pop
xor
xchg
fs
jg
ljmp
notrack
mov
adc
fstpl
mov
icebp
xor
push
cmp
mov
pop
stc
sbb
lock
fisubrl
xchg
jns
fs
test
ret
or
ds
mov
rolb
imull
imul
sub
jae
inc
jnp
lret
adc
sub
mov
cmpsl
inc
test
xchg
xchg
pop
pop
cs
movsb
push
mov
pop
pop
ljmp
sub
stos
cld
jns
scas
cmp
dec
mov
addr16
push
fistps
adc
pop
add
imul
xchg
cmp
jecxz
or
inc
fdiv
mov
ficompl
fistpl
cmpsl
orl
dec
shll
jl
cmp
dec
repz
cmp
mov
in
stc
and
xchg
inc
popf
sub
cmp
mov
jecxz
cld
fdiv
adc
into
popf
sub
pushf
cld
out
leave
lods
clc
lahf
cmp
fmuls
addr16
jg
repnz
inc
push
push
or
loop
mov
pusha
outsl
out
mov
jb
mov
xchg
into
add
add
int
lahf
sub
cmp
xchg
cwtl
fcoml
loop
xor
lea
and
ret
inc
out
pop
insl
xor
jecxz
imul
iret
lea
mov
push
into
and
xor
std
mov
lahf
popl
addb
fnstcw
lea
mov
pop
fldenv
mov
loop
call
shrb
xchg
lods
test
adc
loope
loopne
out
mov
popf
lds
sbb
ds
out
pop
loopne
dec
jnp
fs
cmp
xchg
outsb
xchg
inc
and
icebp
fadd
mov
xchg
mov
pop
subb
lea
or
xchg
cmp
pop
jmp
adc
fistpl
faddl
add
cmp
cltd
xor
cld
sbbl
or
mov
aaa
fadds
xchg
test
and
out
aad
in
cmp
jecxz
cli
stos
xchg
gs
addr16
repnz
arpl
inc
fidivrs
ror
insl
inc
jg
mov
addl
push
mov
add
mov
pop
iret
fcomps
js
ret
sbb
aam
enter
xchg
add
bound
into
jb
cmp
add
pusha
jae
cmp
push
push
sarl
or
std
xchg
filds
add
rolb
insl
fdivl
push
push
in
add
xchg
cmp
cmp
testl
xor
add
iret
dec
pop
loopne
int
insl
aas
orb
imul
and
pop
cld
push
lods
jp
fmuls
mov
and
dec
mov
pop
and
es
mov
nop
clc
cmp
add
lcall
xor
fldenv
mov
pop
add
loopne
sbb
dec
mov
aad
lcall
dec
js
in
jg
inc
sub
in
cmp
mov
arpl
pcmpeqw
outsb
and
lods
aam
out
js
sti
lods
in
xchg
gs
movsb
sub
mov
add
stos
rclb
cltd
loop
pop
and
add
sti
lods
jno
xchg
adc
xor
pop
inc
pop
fcoms
je
lret
cmp
sbb
xchg
rcrl
cs
scas
rcrb
and
je
and
push
jae
inc
out
pop
add
rolb
pushf
jae
std
xchg
adc
je
arpl
imul
loop
or
add
ja
pop
push
outsl
and
lret
and
cmp
enter
or
rcr
loopew
shll
xchg
sub
in
mov
cwtl
test
dec
imull
aam
pusha
lds
sub
cmp
pop
popa
int
int
jbe
and
sbb
sub
jge
call
mov
addl
and
rcrb
clc
mov
inc
dec
xchg
jmp
inc
or
fmull
or
repz
fs
enter
pop
test
jmp
nop
adc
aam
inc
lret
xchg
mov
sub
lea
ss
aam
pushl
adc
std
mov
outsl
jg
repz
enter
pop
mov
js
mov
xchg
xchg
add
ljmp
mov
cmp
les
mov
inc
xor
jl
mov
test
aas
jge
inc
imul
les
pop
fldl
dec
addb
or
inc
gs
jae
inc
xchg
push
inc
cmp
div
cmp
push
in
subl
cmp
addb
les
mov
jae
push
add
inc
push
adc
orl
inc
sub
loopne
sub
mov
mov
jge
int
xchg
enter
add
hlt
imull
push
sahf
push
lods
add
add
mov
mov
out
pop
adc
stc
and
mov
enter
ds
out
push
nop
scas
jmp
loope
dec
popa
jp
cli
dec
mov
popf
sbb
push
or
mov
add
jno
mov
xlat
xor
cmp
enter
xchg
add
cmp
outsl
jno
fnsave
insl
lock
or
push
inc
cld
sbb
dec
outsl
xchg
mov
adc
mov
adc
stos
mov
add
jb
mov
out
pop
xchg
int3
imul
pop
aaa
lcall
js
and
xor
mov
mov
imul
nop
fwait
mov
pop
or
loopne
incl
repnz
sbb
in
cmc
jae
test
dec
mov
cmp
aaa
mov
jg
mov
mov
rol
adc
mov
xchg
int3
cli
aaa
sub
mov
movsl
ja
js
push
aam
lret
les
mov
ds
fcomp
pop
mov
inc
or
push
mov
adc
mov
stc
ljmp
loope
sbbb
pop
cmc
lret
xor
lock
daa
sar
xchg
and
lods
ja
pop
xchg
pop
popf
mov
add
dec
je
std
in
push
notl
inc
enter
fistpl
popa
jl
aam
xchg
imul
push
pushf
nop
sbb
cli
out
repz
sbb
lds
imul
js
shll
xor
add
sbb
xchg
xor
cltd
pop
and
jno
pop
daa
scas
mov
movsl
sbb
dec
sbb
xchg
mov
add
vpcmpgtd
popf
cmp
lcall
xchg
ja
outsl
testb
aas
xor
xor
and
inc
stos
jb
mov
sub
loopne
sbb
jecxz
or
je
popf
push
sub
or
scas
imul
stc
and
mov
dec
loopne
daa
mov
adc
data16
js
add
lea
scas
jo
sub
xchg
popf
or
add
popa
push
mov
mov
fidivrs
pop
sbb
je
or
and
sahf
hlt
mov
pop
icebp
inc
push
mov
dec
inc
adc
ret
inc
imul
jle
js
push
outsb
jnp
push
xchg
push
insb
jp
push
pop
pop
nop
push
inc
push
mov
fwait
or
std
mov
or
fcoms
imul
ss
jmp
dec
outsb
push
sbb
scas
in
xchg
pop
mov
adcb
cli
jecxz
add
push
das
push
insl
movsl
add
test
ret
xchg
hlt
xchg
or
mov
int
push
sar
mov
mov
sarl
mov
scas
adc
sbb
enter
xor
push
cld
popf
push
and
push
nop
xorb
fdivs
sbb
fisubs
movsl
adc
and
sbb
fsubr
mov
ds
sbb
hlt
repz
jno
popa
sbb
adc
jns
jmp
in
stos
stc
les
sti
add
cmpsl
mov
mov
mov
cmpsl
push
push
clc
cli
lods
jb
inc
lcall
and
add
lods
out
outsl
addr16
add
aad
ds
mov
or
lds
and
lret
out
xchg
cmp
mov
jne
dec
rorb
int
jb
xlat
add
xor
and
fs
xchg
imul
jae
xchg
xchg
sbb
ja
push
cmp
in
xchg
or
enter
cmp
dec
jno
pop
dec
push
push
xchg
mov
rep
shr
adc
jnp
xlat
andl
adc
xchg
pushf
jns
add
sub
or
out
sbb
sarb
mov
inc
push
xor
mov
jbe
jp
jecxz
mov
movsb
pusha
out
push
jecxz
mov
fistpll
sahf
in
daa
inc
mov
push
cmp
inc
push
sbb
mov
rorl
and
push
arpl
mov
lret
jmp
jg
dec
jmp
dec
sbb
fiaddl
dec
inc
pusha
in
rclb
stos
mov
cwtl
mov
cmp
jg
add
mov
das
and
out
int3
je
icebp
cmp
or
incl
pop
inc
mov
lahf
cs
dec
fldenv
loop
fildll
test
insl
test
aaa
scas
fcoml
mov
imul
xchg
adc
scas
mov
cld
push
shrl
push
test
mov
scas
scas
pop
add
test
inc
clc
mov
adc
enter
in
jg
in
aas
pop
jle
loope
dec
into
das
xchg
test
dec
xorl
sbb
int
ficompl
aad
push
test
aas
je
mov
mov
test
push
jae
ret
and
testb
adc
lahf
mov
cltd
xor
cmpsl
loopne
xor
pushf
orl
jle
mov
ss
xor
frstor
adc
fcom
cs
loope
push
inc
sbb
add
xor
out
pop
int
xorb
mov
add
mov
cmc
inc
adc
mov
add
inc
cmc
sbb
mov
pop
pop
or
jmp
psubusw
test
out
outsl
add
outsl
push
jmp
repnz
je
cmp
jne
fimuls
sahf
mov
aam
mov
je
push
and
mov
pushl
out
xchg
ljmp
and
shrb
adc
inc
lods
out
xchg
jmp
clc
jmp
jg
xchg
and
and
repnz
stos
push
lret
push
push
into
add
pushf
mov
pop
adc
test
xchg
in
out
mov
fwait
leave
mov
cmpsl
outsl
push
cmpsl
imul
js
in
outsb
mov
lret
lahf
mov
adc
pop
aas
push
cld
cmpsb
adc
push
mov
scas
push
xor
stc
and
imul
jno
int3
arpl
mov
push
rclb
dec
add
cs
and
xchg
movsb
sub
cmpsl
lock
pop
and
mov
arpl
jb
in
pop
sub
repz
and
lcall
subl
loope
pusha
ret
push
stos
gs
andb
mov
pop
inc
aad
rclb
sar
adc
inc
pop
loop
or
jmp
push
in
dec
ljmp
jo
lahf
or
out
stos
out
sbb
daa
imul
or
cltd
adc
loope
push
aas
jb
jp
nop
xchg
out
movsb
xor
scas
pop
dec
jo
jmp
push
into
inc
jo
jb
push
add
fwait
loopne
aad
popa
aam
lret
mov
cmp
addr16
bound
push
sbb
dec
jno
adc
mov
mov
stos
shll
mov
mov
xor
sarb
add
mov
add
test
pop
or
loop
stos
push
cmp
mov
push
or
addb
shl
push
xor
fnstenv
and
jae
and
cmpsl
add
pmaxub
cmp
int
xor
add
in
jno
xchg
imul
pop
insl
xlat
cli
mov
or
pop
lcall
sbb
loopne
repnz
jp
fidivl
push
dec
and
mov
out
jae
bound
loope
lock
jo
pop
inc
adc
popa
data16
or
jl
hlt
mov
shl
jae
push
in
cs
dec
inc
out
push
pop
adc
lds
mov
jecxz
test
cwtl
jmp
inc
pop
jmp
mov
inc
out
or
or
test
cmp
or
arpl
pushf
in
jmp
mov
push
fsubrl
mov
add
cmp
dec
popf
or
inc
dec
xchg
xchg
stos
les
cld
or
rorl
dec
in
mov
jnp
test
xchg
inc
sub
fs
pusha
xchg
cmpsl
in
cld
mov
and
pop
adc
imul
or
and
sub
lods
cwtl
mov
adc
pusha
push
dec
mov
scas
testl
add
nop
mov
mov
mov
cltd
mov
in
repz
mov
pushf
shll
sbb
sarl
dec
jnp
push
push
imul
out
inc
xchg
or
mov
outsl
stos
data16
aas
cli
mov
les
sbb
mov
shl
adc
cmp
mov
sbb
ret
adc
sbb
shrl
ret
mull
adc
push
and
imulb
test
fsubrl
in
pop
pushf
mov
pop
rcr
shrl
repz
push
sub
jp
sbb
mov
lock
sub
jne
cs
inc
repz
test
loope
int3
and
xchg
test
cmp
pop
and
stos
les
mov
mov
jne
jae
push
hlt
or
nop
cmpsl
enter
or
cmc
xchg
test
add
enter
jecxz
ja
mov
aam
inc
stos
dec
insl
roll
or
pop
adc
bound
and
jo
dec
and
cmc
xchg
xchg
call
out
imul
lock
sub
push
out
add
pop
or
cli
push
sti
mov
and
mov
mov
xchg
in
in
aas
rcr
push
or
and
cs
xor
push
roll
sub
push
add
scas
push
ret
lahf
push
mov
daa
mov
shlb
push
lea
sbb
adcb
inc
sub
lahf
popf
adc
push
repnz
fadd
shll
and
clc
xor
inc
mov
mov
lcall
in
cld
lahf
in
and
fstpt
adc
adc
ret
movsl
ret
mov
cmp
dec
ljmp
inc
stos
pop
enter
loopne
lock
adc
cmp
pop
push
push
arpl
lcall
pop
push
nop
lcall
xor
mov
ficompl
jp
pop
jns
add
pop
outsb
aaa
pop
mov
and
imul
add
sub
jmp
or
iret
pop
xchg
inc
mov
jnp
enter
ja
sub
inc
mov
dec
ljmp
movl
das
sub
adc
adc
add
cltd
mov
clc
ret
pop
xor
push
popf
dec
mov
xor
roll
add
mov
jge
fwait
cmp
jb
mov
int
fs
repnz
pop
mov
inc
outsb
div
frstor
lock
orb
in
push
les
xchg
std
dec
divb
jb
repz
mov
insl
movsb
mov
stos
mov
push
dec
pop
jne
ret
ljmp
push
shlb
out
pusha
sub
and
push
lods
shll
push
lds
and
je,pt
ret
mov
sbb
add
pusha
and
data16
fcompl
pop
pop
shl
lret
rolb
gs
and
enter
mov
lds
outsl
cmp
aaa
xlat
pop
mov
cmp
negl
les
xchg
and
cmpsb
add
orb
lahf
movb
lcall
dec
aas
sbb
or
sub
and
lock
push
mov
mov
cmp
pop
subl
dec
repnz
push
mov
jg
iret
loopne
sub
cli
jae
insl
daa
ds
pop
ss
daa
mov
push
inc
loop
or
sbb
pop
sub
in
lret
shr
loope
mov
std
mov
mov
rclb
fcoml
mov
jb
or
inc
lcall
dec
iret
xchg
fcoms
cmp
imul
mov
jb
test
jae
cmpsl
ret
adc
add
test
repnz
lds
test
or
popa
shl
hlt
je
add
test
shll
int3
das
xor
lret
sub
dec
int
shrl
pushf
mov
loopne
sbb
rclb
mov
fiaddl
rcr
cmp
aas
cltd
popf
in
js
mov
push
mov
enter
xchg
clc
push
add
dec
mov
xchg
repz
mov
loop
push
mov
sbb
stc
nop
movsb
xchg
pop
pushf
mov
adc
jg
lret
lods
jp
mov
in
pop
push
inc
or
hlt
adc
pop
ret
sub
mov
mov
ficoms
out
mov
lds
aaa
adcb
sbb
jecxz
cmp
out
out
imul
or
jp
jb
xchg
jno
pop
mov
cmp
fiadds
sahf
test
and
test
and
std
outsb
loop
adc
and
sbb
mov
ljmp
sbbb
push
ljmp
dec
xchg
leave
jae
or
je
nop
fcmovnu
inc
and
loopne
mov
mov
add
inc
test
mov
pop
jns
cmp
cmp
cmp
es
ret
pop
loop
push
mov
or
pop
jns
pop
and
int3
sbb
icebp
pop
arpl
gs
add
mov
mov
or
mov
adc
mov
fcomip
lahf
jle
pop
pop
outsb
sbb
xchg
rolw
xchg
aaa
popa
hlt
dec
sbb
andb
incl
sbb
pop
lcall
repz
movsl
cmp
popf
mov
cmpsb
xor
outsb
or
sarl
js
mov
mov
push
mov
ds
ja
dec
out
in
testl
jns
push
or
jno
xor
rorl
sbb
xchg
repnz
and
and
int
push
cli
and
sar
hlt
xchg
in
inc
sbb
sub
daa
mov
ret
mov
mov
or
jo
in
sbbb
sub
xor
fmull
push
ret
cmpsb
pop
mov
je
sbb
imul
pop
sub
imul
jnp
pop
xchg
pop
push
ret
sbb
cmpsl
fisttpll
out
popf
fildl
stc
stc
sub
enter
imul
popa
ret
xchg
gs
sub
pop
pop
push
cmp
adc
ds
dec
hlt
lock
and
push
mov
dec
sti
rorb
cmpsb
in
jecxz
jne
loopne
loope
imul
cmp
xchg
pop
pop
jbe
mov
mov
xor
aad
xchg
ret
cwtl
xor
pop
cwtl
adc
ds
lcall
sub
inc
icebp
stos
mov
movsl
pop
and
jo
ret
sbb
hlt
fildl
sbb
sbb
add
jne
dec
into
adc
jne
icebp
outsb
je
jl
test
jl
test
in
mov
insb
or
js
in
movsl
imul
hlt
adc
sub
xchg
lock
mov
push
cltd
imul
inc
cli
dec
adc
inc
jo
das
sbb
mov
cli
and
inc
and
add
addl
fsubl
xor
outsb
or
rcll
push
inc
dec
scas
les
dec
lahf
enter
cli
testb
and
loope
or
out
ds
sub
push
popa
push
ficomps
daa
jae
lret
add
cmpsb
cmp
jb
cmp
imul
int3
iret
mov
cmpsl
call
adc
in
and
mov
in
stos
movsb
inc
jge
jge
mov
dec
fnstsw
sub
jg
push
jo
iret
std
inc
mov
dec
movsb
test
addb
shrl
and
and
test
or
dec
pop
ffreep
fldenv
mov
pop
out
mov
dec
clc
inc
jne
fnsave
xor
jl
mov
xchg
lods
xor
mov
out
dec
std
jbe
inc
stos
into
add
dec
mov
push
mov
adc
mov
push
testb
sti
rorb
aas
and
xor
jo
mov
outsl
rorb
pop
mov
pop
in
notl
xor
aas
fcoml
push
mov
adc
in
sbb
fisttpl
xchg
dec
pop
aas
arpl
inc
in
xor
jo
dec
addr16
jne
push
add
stc
sub
add
mov
ljmp
mov
inc
je
out
out
xchg
ljmp
pushf
jecxz
ja
imulb
mov
dec
cmp
pop
jbe
jnp
sar
fisubrs
and
daa
ljmp
xor
data16
lea
cmp
cmc
sub
pop
bound
mov
mov
pop
xchg
mov
sbb
cmp
imul
call
mov
lods
repnz
dec
es
inc
sub
insb
cwtl
and
mov
and
orb
and
dec
jns
iret
rolb
push
mov
jp
scas
aam
jge
jecxz
pop
inc
dec
mov
or
sub
sbb
pop
pop
dec
sbb
gs
loope
test
ret
pusha
jae
jmp
dec
sbb
inc
pop
mov
cmp
rorb
dec
jo
inc
or
aaa
dec
cmp
imul
sbb
pop
pushf
xor
vpunpckldq
shr
pop
roll
fwait
idivl
adc
call
test
xchg
inc
mull
ror
inc
data16
mov
and
fs
mov
jmp
sbb
adc
pop
hlt
or
pop
mov
adc
and
mov
int
pop
and
jge
pop
push
mov
cmpsb
adc
test
jle
sahf
mov
push
push
outsl
scas
adc
aam
push
and
mov
mov
out
fdivrs
shll
insl
mov
fldl
loope
vphsubdq
add
fadd
dec
cmp
sbbb
pop
cmp
jmp
dec
adc
pop
cmc
dec
xchg
sbb
or
push
push
bound
repz
mov
pop
xor
and
inc
pop
xor
mov
sub
addl
ja
mov
push
inc
inc
xchg
mov
mov
push
lea
jb
lcall
add
inc
cmp
push
xchg
scas
imul
pop
sub
add
xchg
cmp
and
insl
movsl
loopne
popa
inc
dec
inc
jle
pop
inc
cltd
mov
sbb
add
sub
fwait
sbb
pop
das
insl
lods
jecxz
dec
lret
ss
mov
test
rcrl
inc
pushf
cmp
mov
jne
xchg
repnz
push
push
inc
out
fdivs
inc
jle
pop
dec
arpl
mov
out
or
and
lock
pop
push
jle
add
jns
lods
insl
add
ja
cmc
jb
in
fcmovne
jbe
dec
mov
pop
mov
aad
jo
mov
mov
xchg
adc
ret
push
cmpsl
add
ljmp
mov
pop
xchg
mov
out
xor
movsb
and
test
das
sbb
inc
divb
cli
int3
call
sub
or
iret
int
je
addr16
inc
and
clc
add
ret
push
adc
test
data16
shrl
lock
std
xor
xor
insb
andb
mov
or
sub
or
rep
and
in
aas
cmp
sub
xor
nop
push
fisubrl
xor
xchg
arpl
and
fsubrl
cld
mov
or
and
jle
and
or
lods
shr
sbb
mov
lods
pop
xchg
mov
xchg
inc
stos
cmp
cmpsl
lds
pop
cmpsl
fadds
jl
stos
xchg
add
scas
push
jle
aam
and
xchg
incl
jae
rcrb
add
cli
add
stos
sbb
movsb
lret
mov
mov
dec
push
sbb
pushf
dec
xor
fs
ret
sti
shll
pminub
test
cmp
loope
xor
int
in
mov
xor
stos
jl
push
lretw
dec
inc
and
ljmp
mov
push
mov
mov
push
or
jne
mov
cltd
jp
mov
in
lods
lods
mov
test
or
jp
cmpb
movsb
pop
xchg
xor
add
imul
sbb
cmp
push
xchg
pusha
nop
in
popf
xchg
movsl
xor
pop
ja
leave
or
js
jae
imulb
pop
repnz
fisubs
daa
xor
sbb
mov
in
data16
xchg
rorb
xchg
jbe
int
rcr
add
adc
dec
mov
jmp
stos
aam
and
xorb
aas
aaa
fsubrp
xchg
lods
cmp
xorl
pop
sub
jbe
ss
mov
mov
mov
xlat
jbe
and
daa
jnp
jmp
ret
fisubs
daa
insl
in
aad
in
int
sahf
pusha
push
mov
jno
cli
ljmp
ret
lods
dec
test
sub
add
cltd
lea
pop
mov
scas
xchg
add
jnp
mov
loop
rorb
lock
setnp
shrd
inc
jo
sbb
xchg
ljmp
fwait
shl
leave
outsb
ret
jecxz
or
cli
in
xor
lahf
lret
repz
lods
daa
andb
push
fcomps
lcall
mov
inc
xor
inc
ds
add
and
add
loope
and
push
in
push
adc
push
dec
popa
movsl
in
mov
xchg
fwait
fs
outsl
stos
inc
lahf
cmc
dec
cld
push
movsl
xchg
ljmp
lock
jl
push
fstpt
popf
into
inc
add
arpl
push
xchg
mov
push
gs
rcrb
lods
dec
cmp
inc
or
xchg
orl
adc
call
sub
das
das
mov
or
daa
sub
dec
stos
daa
and
sbb
adc
enter
enter
decb
and
dec
jne
mov
scas
popa
nop
lret
ret
lds
daa
and
xchg
jp
add
loop
mov
fchs
add
adc
test
stc
fldcw
fisttps
aaa
push
fdivl
sub
sbb
std
pushf
adc
loopne
add
rcrb
leave
int
aaa
jmp
lcall
test
pusha
pop
psubusb
xlat
ljmp
clc
test
and
subl
sub
nop
mov
ret
sub
loope
outsl
in
xor
cmc
xor
push
adc
push
sahf
and
popa
push
imul
jge
mov
ret
enter
gs
cmc
ljmp
pop
lahf
stos
rorb
cmp
pop
lods
add
push
test
xchg
inc
adcl
imull
mov
mov
std
jne
shl
scas
outsl
inc
into
inc
xor
dec
dec
iret
imul
call
loope
dec
test
jb
cmpl
xorl
lret
sub
daa
sub
push
orl
mov
sub
pop
loop
test
xchg
mov
adc
lcall
cli
dec
lret
fnstenv
cmpsl
and
xor
dec
cli
add
imul
xor
inc
mov
cmp
sarb
cli
mov
loopne
xchg
cmc
rorl
out
pop
pop
dec
int3
nop
jg
fiadds
jl
add
cs
lds
movsb
leave
aas
adc
sbb
leave
es
or
mov
sub
dec
shlb
push
sahf
lds
negl
jne
mov
jne
xchg
mov
lods
pop
loopne
xchg
pop
sbb
jno
inc
adc
ret
mov
jnp
je
xchg
or
and
out
xchg
loope
movsl
fistl
int
movsb
and
xor
adc
cmpsl
je
scas
add
divl
test
inc
cmp
nop
add
and
xchg
out
inc
js
jmp
mov
fisubrl
test
adc
sbbl
xor
pop
scas
out
lahf
outsb
int3
mov
mov
add
lods
pop
and
push
enter
mov
insl
and
outsb
andl
xor
pop
push
int3
sarb
call
rcrl
fcmovu
cmpsb
mov
jno
fcomps
pop
mov
ja
test
inc
fs
mov
jne
jns
mov
mov
cmp
test
daa
dec
mov
lea
mov
add
neg
ja
cltd
pop
adc
sbb
add
sub
adc
pushf
inc
aas
or
test
pusha
and
mov
stc
scas
movsl
jecxz
and
xchg
pop
mov
sarb
mov
cmpl
xchg
and
or
testl
jmp
dec
sbb
sub
sbb
or
dec
adc
xchg
outsb
dec
sbb
jb
add
xchg
mov
sbb
sub
and
jp
mov
mov
inc
movsb
int
jne
leave
sbb
mov
movl
xor
jecxz
dec
jmp
adc
push
fisubs
pushf
clc
out
pop
es
xorb
rclb
adc
cmp
inc
and
jo
cmp
jae
jl
addb
lahf
jbe
sti
push
ja
cld
inc
xchg
xchg
pop
mov
mov
rcll
cmp
xchg
xor
shl
mov
push
mov
fbstp
add
hlt
in
fcomi
cs
or
fisttpl
mov
mov
popf
xchg
imull
inc
mov
cmp
sbb
subb
adcl
loopne
push
jnp
test
mov
imul
push
dec
jmp
mov
mov
dec
repnz
cs
push
xor
mov
pop
fimuls
jne
pop
sub
xor
jecxz
popa
mov
mov
or
sub
or
and
mov
lahf
mov
and
test
jo
test
pop
sti
push
push
out
fstpl
mov
imul
push
std
cwtl
daa
repz
lahf
les
or
add
aaa
imul
cmpsb
dec
push
cmc
dec
xchg
cmp
push
mov
leave
xor
xchg
lcall
mov
sbb
es
lret
push
or
xlat
pop
popf
xchg
mov
decb
movsl
jmp
int
mov
push
jge
push
lock
aam
sub
fs
enter
adc
std
dec
add
lret
sbb
push
dec
xchg
jne
test
push
pop
add
xor
adc
insb
cmp
in
rcrb
cs
sub
je
js
pop
or
sub
dec
sarb
cmp
pusha
cs
inc
xchg
pushf
dec
std
xchg
inc
mov
sti
mov
sub
xor
loopne
inc
jbe
data16
xor
imull
push
lret
and
jbe
insb
fs
jmp
sbb
inc
out
mov
sahf
fcoms
mov
mov
cmp
ja
jno
xchg
push
add
cmp
or
sub
ret
in
dec
cltd
mov
jg
cmpb
adc
stos
cwtl
jmp
mov
and
or
add
pop
fadd
add
xchg
lea
rcrl
pop
jge
movsl
mov
jne
and
pop
dec
js
xchg
aad
les
push
pop
pop
inc
incb
insl
in
scas
ret
lret
add
ja
ficompl
sbb
insl
lods
inc
movsl
out
pop
out
xchg
adc
jle
push
filds
test
push
ds
mov
xor
cmpsb
jmp
xor
sbb
sub
shrl
sub
sbb
jbe
out
add
sbb
xchg
and
mov
mov
scas
test
mov
cmc
daa
sbb
mov
or
lret
daa
cmc
sbb
shll
jbe
inc
or
jmp
roll
bound
jbe
sarl
fsubs
ret
jl
cli
imul
cmp
insl
jb
mov
xor
je
push
movsl
out
sub
fstpt
bound
jns
mov
lds
mov
stos
adc
or
mov
mov
and
lea
mov
cmpsb
pop
pop
stos
jmp
jmp
cli
push
pop
das
lahf
test
mov
mov
sbb
push
push
xor
scas
cld
or
cltd
pop
xor
mov
lea
mov
lock
pop
mov
xchg
pop
and
and
popf
mov
arpl
cwtl
inc
in
push
cmp
aaa
es
aad
cli
cmp
ficoms
adc
or
rcrl
dec
test
lret
in
cwtl
js
mull
mov
movsl
lret
into
and
insl
mov
sub
pop
and
mov
xchg
dec
fstpl
mov
mov
cmp
fs
les
js
xchg
inc
xor
jg
add
imul
or
sarb
pop
aad
cmp
jnp
pop
out
in
cltd
nop
pushf
scas
pushf
test
or
mov
push
std
test
aaa
jecxz
bound
gs
mov
mov
test
xchg
call
sub
movsb
add
jns
fisubrl
and
out
lret
pop
jmp
cltd
mov
push
mov
adc
dec
or
mov
jmp
dec
sbb
adc
push
pop
scas
xor
jle
push
movsl
sub
add
bound
xchg
test
fs
dec
out
daa
jb
fmul
cmp
cld
xchg
jns
ds
test
pop
popf
imul
push
xchg
ret
pushf
mov
shrb
pop
call
xchg
insl
cmp
add
leave
rol
imul
dec
ret
push
cli
test
sub
dec
in
inc
jae
dec
and
adc
popf
fisttpll
cli
lcall
scas
imul
leave
clc
inc
xchg
jecxz
bound
mov
rol
in
insl
pmulhw
mov
into
test
and
daa
pop
dec
jmp
out
xchg
leave
dec
mov
xor
arpl
stos
insl
sub
mov
es
push
sub
lods
scas
mov
movsl
dec
inc
movsb
shll
fidivrl
pop
popa
hlt
xchg
imul
jo
std
mov
fs
mov
movsb
push
fcoml
adc
cmp
iret
stos
sub
mov
ret
jno
push
push
pop
fisttpl
adc
mov
xchg
push
cld
xlat
repnz
sbb
dec
xchg
addr16
clc
movsl
stos
leave
lods
dec
cmp
and
icebp
aad
adc
mov
xlat
dec
fdivrp
mov
jg
lock
jge
popf
mov
mov
cltd
inc
mov
fstl
fldl
xor
pop
pusha
mov
mov
xor
test
negb
call
ficoml
cmp
sub
popa
out
fcomi
cmp
sahf
cltd
or
ja
xor
cmpsb
push
jl
pop
xchg
jae
cmp
mov
sub
insb
in
mov
add
movsl
jns
xchg
lret
jmp
jl
jb
cmp
mov
test
sub
out
shll
jl
data16
loop
sti
cmp
je
aaa
or
repnz
mov
mov
sbb
mov
fstpt
add
xlat
push
inc
hlt
fnstenv
dec
popf
pushf
iret
cltd
cmp
pop
push
mov
lret
in
sub
sar
lret
and
test
outsl
lods
je
push
fstp
push
loopne
jmp
js
insl
sbb
nop
mov
xchg
or
rol
jmp
cmpsl
mov
lret
add
adc
pop
jb
int
lcall
adc
mov
sarl
sarb
ficompl
cmp
push
or
xor
stos
aad
insl
stc
bnd
inc
shl
xchg
ret
jmp
sbbl
loopne
pop
xchg
mov
in
jecxz
xor
jg
clc
fdivl
stc
sub
movsb
aam
cmpsb
ja
pop
loopne
pop
lea
mov
ss
dec
pop
and
mov
or
or
outsb
sbb
xor
adc
sub
loope
lds
sbb
pop
repnz
and
xchg
adc
addr16
dec
adc
add
out
gs
subl
data16
pop
stos
fwait
out
xor
divl
fs
xor
push
add
orl
jns
mov
fistps
xor
arpl
jge
movsb
out
arpl
push
jle
iret
clc
push
and
push
add
insb
out
xchg
into
pop
ret
sub
and
sarl
cmp
iret
pop
sbb
push
or
sub
mov
mov
inc
jne
lds
cld
clc
dec
sbb
or
out
or
xchg
mov
or
in
test
iret
lods
pushf
js
adcl
dec
xchg
push
std
lcall
dec
push
push
dec
pop
jp
and
sti
pop
mov
sub
imull
jb
add
les
in
push
dec
mov
xor
sti
sbb
jle
movsl
cmpsl
sub
enter
push
cmp
mov
jne
aas
push
fimull
inc
push
mov
aad
add
ja
stc
movsl
push
add
adc
jl
or
dec
daa
and
push
pop
dec
mov
mov
mov
fmull
sub
cmpb
sti
sub
pop
dec
adc
mov
test
mov
test
fsubl
ja
mov
fcomp
fnsave
cmc
cmc
xchg
ds
ss
jbe
fcmovnb
sub
pop
cmpb
mov
outsb
bound
inc
bnd
xor
jge
nop
in
test
mov
lods
push
data16
mov
mov
mov
xor
jp
ljmp
mov
push
xchg
shll
inc
pop
xchg
leave
xchg
pop
sbb
rol
jmp
inc
dec
pushf
xchg
mov
ret
push
xchg
out
sbb
adc
and
jg
inc
mov
inc
sub
sub
addl
out
pop
fisttpll
pop
inc
popa
jne
icebp
sbb
repnz
std
fwait
icebp
or
jge
lret
mov
arpl
inc
dec
insl
in
xchg
imul
sbb
push
hlt
andl
das
or
cwtl
daa
call
or
xchg
adc
pop
dec
inc
in
cmp
push
mov
push
ljmp
jecxz
addr16
and
push
out
pop
mov
bound
xchg
xchg
push
jno
pusha
lods
push
add
cwtl
or
jae
incb
mov
xor
mov
sub
push
xor
add
mov
inc
out
inc
ret
dec
inc
fs
ljmp
repnz
xlat
cmp
mov
sarl
push
xchg
push
out
sub
stos
and
scas
mov
add
sub
or
xor
sarb
jg
xchg
cmp
mov
test
mov
cmp
mov
xor
stc
stc
or
cmp
xchg
aam
shlb
mov
push
jmp
call
push
loope
sub
xor
jbe
push
out
mov
adc
aam
ja
movsl
mov
arpl
cmp
jecxz
ljmp
add
xlat
out
mov
int3
mov
call
and
adc
repz
cmp
add
test
pop
sbb
iretw
add
adc
mov
sbb
sbb
push
dec
test
push
out
adcb
mov
stc
mov
xchg
mov
or
inc
dec
pusha
xchg
lahf
mov
or
xchg
cmp
bound
mov
loop
movsb
mov
mov
dec
xor
add
mov
idivb
mov
lret
xchg
fnsave
movsl
out
lret
movb
hlt
push
call
cmp
sub
lds
push
xor
imul
andl
adc
adc
fwait
daa
sarb
push
sbb
aad
lods
cmc
mov
arpl
jne
je
cmp
out
adc
shll
push
out
xchg
sar
and
or
rcrl
out
cmpsb
add
xchg
fs
andb
and
jle
inc
mov
lock
or
inc
sbb
inc
push
sbb
or
ret
mov
sbb
mov
loopne
xchg
int3
sub
adc
cltd
sbb
pop
mov
sbb
mov
insb
jle
mov
orl
clc
out
dec
xchg
lods
xchg
into
loopne
cmp
outsb
push
add
push
sbb
push
jno
int
aaa
cmp
pop
sbb
lret
lds
repz
push
repz
dec
mov
lcall
popf
movsb
stos
fsub
call
stos
mov
incl
dec
cmpsl
cli
daa
jnp
pop
xor
repnz
stos
mov
fs
lods
or
mov
test
mov
inc
sub
addb
lea
mov
rcrl
popf
enter
lods
fsubrl
sub
inc
movsb
mov
xor
and
sbb
ja
cli
gs
lcall
std
sbb
adc
pushf
and
lods
add
and
dec
clc
testb
rcrl
jo
push
jo
loop
push
dec
scas
stos
ds
jnp
mov
insb
jns
or
daa
pop
int3
mov
pop
popa
sarl
pop
rol
sbb
ss
cmp
xchg
fdivr
mov
or
jnp
or
repz
iret
lods
rcrl
add
out
push
test
and
mov
add
sbb
aam
jle
jnp
mov
push
jmpw
aaa
sub
lods
dec
sbb
push
and
mov
call
pop
inc
sub
mov
mov
leave
test
or
mov
leave
or
dec
cmpsl
jo
repnz
add
fcoml
into
fldenv
aad
out
and
mov
dec
sub
iret
repnz
push
xchg
jge
and
call
lret
pop
mov
ja
mov
push
icebp
test
repnz
js
jmp
dec
sbb
adc
add
out
fcoms
ret
and
cwtl
xchg
mov
mov
gs
icebp
punpckhbw
mov
outsb
dec
imul
push
jle
test
jno
sarb
das
sti
int
test
sbbl
mov
ret
sub
dec
fdivrs
imul
cmp
jecxz
in
out
adc
sti
mov
ja
and
loop
push
fwait
clc
mov
inc
sub
sub
mov
addl
imul
insb
lcall
shr
or
test
dec
mov
jne
and
sub
xor
lods
scas
lahf
aad
rdmsr
sahf
inc
aaa
in
xlat
rclb
push
fbstp
insl
stos
push
sahf
mov
imul
sbb
mov
and
or
mov
cs
cmpsb
fucomip
pop
lret
pushaw
mov
push
lock
push
mov
jo
imul
xor
jecxz
jns
not
test
sbb
stos
imul
es
adc
cmpsl
mov
cmp
shrl
dec
shll
jo
aas
cmp
mov
inc
mov
cs
push
aam
scas
dec
mov
inc
aas
xchg
pop
aas
dec
cwtl
ret
adc
addr16
fsts
mov
addr16
xchg
add
es
sub
inc
aas
outsl
rorb
leave
movsb
sub
sub
cmp
roll
ror
cmp
lods
ror
mov
lahf
hlt
ljmp
or
movsb
sbb
jge
push
mov
repnz
sub
test
xor
jne
mov
ror
lds
movsb
dec
cmp
sar
inc
xor
jne
fstps
imull
add
push
adc
popf
xchg
add
adc
nop
popa
je
add
cmp
inc
jecxz
int3
and
nopl
mov
ficomps
and
xor
lods
lock
outsl
or
stc
add
push
cmp
pop
add
xchg
shrl
dec
cmpsb
inc
stos
mov
popf
push
cmp
mov
stos
scas
es
inc
mov
shrl
test
std
or
pop
add
nop
stos
ljmp
fbld
sbb
or
cwtl
mov
mov
dec
mov
enter
sbb
push
stc
mov
in
ljmp
in
stc
pop
lret
das
jnp
mov
sahf
sar
testb
push
fld
sub
sbb
pop
add
addl
xor
lcall
xchg
jmp
push
out
pushf
sub
test
imul
lods
mov
lret
rorl
xor
and
ret
sbb
sub
rorl
mov
call
inc
inc
popa
loopne
inc
mov
sti
mov
xor
jl
mov
fwait
or
incb
fwait
imul
in
fildll
sub
mov
clc
arpl
aad
mul
push
xor
cltd
inc
mov
aas
jne
adc
xchg
pop
fildl
or
fidivl
jbe
sub
jge,pn
jg
clc
mov
jno
cmp
inc
jne
cs
movsl
stos
add
addr16
call
mov
addr16
jne
shll
sub
and
repnz
jge
scas
and
mov
sub
dec
aam
or
jo
decl
les
shrb
inc
mov
xchg
cmc
call
xchg
mov
push
and
sub
loope
loopne
mov
cltd
cs
cmp
jns
mov
loop
enter
insb
insb
nop
push
push
pop
hlt
rolb
mov
dec
add
xchg
add
inc
inc
int
roll
inc
pop
clc
xchg
stos
mov
mov
int
sbb
lock
pop
mov
xchg
idivb
lods
dec
mov
lcall
inc
jns
xchg
dec
sti
sbb
adc
lock
cli
xor
lods
push
xchg
add
pop
inc
pop
cld
int3
cmp
inc
pop
jb
fildl
outsb
jecxz
mov
js
das
inc
jne
dec
jbe
es
popa
lods
lea
fimuls
scas
cmp
mov
shr
mov
lret
add
sub
sub
jmp
xchg
mov
push
xor
ret
sbb
push
mov
bound
inc
sub
repnz
es
mov
outsl
mov
mov
imul
jnp
pop
mov
xchg
js
mov
fstpt
sub
fadds
nop
mov
mov
std
or
sbb
gs
pop
or
imul
pushf
je
mov
mov
adc
inc
pop
mov
ffree
test
mov
mov
call
jl
sti
sub
dec
pop
outsl
js
push
cwtl
insb
loop
adc
push
rolb
rolb
add
xchg
stc
mov
push
les
sbb
fcoml
lods
jne
xchg
xor
loop
mov
hlt
test
icebp
pop
fwait
jg
in
push
mov
dec
xchg
dec
mov
mov
push
out
jb
inc
sub
fwait
sti
ficomps
cmp
fisubl
mov
mov
imul
and
inc
sbb
push
push
pop
cmpsl
mov
pop
jl
push
xchg
testl
adc
bnd
negb
adc
pop
add
xchg
cli
icebp
mov
add
sar
mov
incb
pushf
in
jecxz
xchg
jbe
shll
popf
xchg
das
pop
icebp
dec
scas
icebp
rorl
stos
rcl
sbb
dec
cmp
mov
dec
jbe
sbb
fucomp
cmpsl
shl
in
jle
mov
repz
pop
cli
xchg
and
mov
and
mov
push
sub
repz
pusha
movsb
sbb
xchg
cmp
insb
out
mov
pop
icebp
jge
mov
xor
xor
jge
nop
fstl
cmc
jbe
outsl
bound
xchg
cmp
fsubs
stos
inc
xchg
mov
or
jnp
ss
inc
push
dec
add
aaa
sub
lahf
xor
dec
shrl
addb
insl
js
lret
shrl
jns
ret
ficoms
ss
jecxz
sbb
insl
mov
push
add
lds
test
lds
cmp
fnstenv
pop
push
pop
cmp
es
shll
and
in
or
int3
pop
int3
pop
std
loop
nop
and
roll
pop
pusha
mov
xchg
out
jns
nop
inc
and
xor
lahf
negb
add
aad
fs
data16
leave
fsubrs
fldenv
mov
icebp
xchg
addb
pop
les
in
pushf
or
sbb
aaa
mov
gs
lret
ds
xor
sti
dec
popf
adc
xor
sub
push
cmp
ss
into
fdivs
push
cmp
add
push
into
leave
sub
push
xor
inc
dec
pop
jnp
and
negb
mov
cmp
xor
mov
jnp
ja
aaa
inc
mov
nop
mov
leave
lcall
cmp
xor
loopne
cmp
movb
jbe
nop
mov
dec
les
cmp
lret
pop
mov
arpl
sarb
in
and
sub
js
adc
pushf
cmc
mov
dec
inc
mov
adc
cld
jne
test
rcll
jecxz
cmp
jns
out
insl
push
sbb
imul
fistps
les
adc
cmp
loop
or
pop
dec
sti
push
pop
ret
fcomps
mov
clc
xchg
mov
pop
loopne
cmp
or
add
pop
int3
jbe
sbbl
mov
inc
or
push
repnz
lds
or
jl
adc
aaa
and
mov
sub
xor
ljmp
imul
lret
lcall
fwait
mov
dec
pop
push
sbb
loope
push
jbe
in
xlat
dec
jmp
fwait
jecxz
outsl
mov
jp
ret
inc
ljmp
cmp
imul
shrl
test
xchg
cmpsb
mov
pop
hlt
mov
sub
pop
or
and
or
cs
cmc
and
into
inc
addb
dec
mov
js
repnz
loopne
xchg
xor
int
adc
sbb
pushf
scas
sub
lds
cmp
xchg
cmpsb
in
sbb
adc
scas
mov
xor
pop
out
adc
jmp
add
xlat
repz
shlb
pop
es
push
mov
dec
adc
xchg
cld
aam
xchg
fsubrl
xor
mov
loopne
pop
shr
pop
jecxz
mov
cwtl
data16
inc
xor
notb
xchg
inc
outsl
add
ret
movsb
out
mov
push
mov
jecxz
xor
lret
inc
scas
into
xlat
sub
daa
int
jnp
roll
imul
lcall
mov
loopne
mov
je
sti
sbb
loope
inc
pop
lods
cltd
xor
js
je,pt
insl
fistl
cmpsl
mov
jmp
jo
aas
in
loope
lea
dec
push
xchg
push
xchg
out
cmp
cmp
and
mov
stc
mov
out
sub
add
movsl
je
lret
add
jmp
stos
imul
sub
mov
test
push
mov
pop
add
adc
sahf
sbb
repz
push
xchg
pushf
pusha
ret
movb
dec
cmc
jo
into
pop
mov
inc
mov
imul
scas
int3
inc
in
imul
sub
aam
sub
xor
stos
mov
xor
imul
jns
inc
adc
jg
push
in
ss
lds
xchg
mov
sbb
xor
fs
cs
test
pop
lock
pop
inc
mov
setae
fldl
jo
sarl
or
push
cmc
mov
add
nop
push
fsub
imulb
dec
cmpsl
lds
movsb
xor
imul
add
dec
lret
addr16
out
int3
es
out
popf
mov
lock
popa
repz
mov
in
pop
aad
add
fnstsw
xchg
insl
mov
add
insb
shl
insl
cwtl
add
jne
inc
cltd
mov
movsl
cwtl
push
pushf
cld
or
cmp
push
push
lahf
fildll
and
into
sub
bnd
mov
cmpsb
xchg
sub
push
mov
push
add
adc
adc
out
add
pop
sti
adc
out
fistpl
pop
add
ljmp
push
inc
mov
sub
ss
add
aad
fcmovbe
pop
push
dec
xorl
ret
in
xlat
xchg
js
jg
int
or
cmp
mov
sub
xchg
test
pause
mov
pop
cmp
inc
das
leave
pop
xchg
mov
sbb
aas
shlb
pop
les
fdivs
inc
cmp
roll
test
in
add
cmp
mov
in
das
dec
outsl
sahf
cmp
int
sarb
add
fwait
mov
sbb
inc
pop
es
jne
cmpsb
inc
add
jne
sub
fcoml
sti
push
aam
sub
iret
jno
lcall
lcall
jo
add
mov
xlat
stos
rorb
push
popl
idivb
mov
mov
lods
jp
xchg
jecxz
and
lea
cmpsb
fldt
push
add
inc
xor
fnstenv
repnz
sahf
stc
cltd
or
fucomip
in
leave
stos
adc
xor
xchg
inc
inc
data16
cmp
push
push
dec
fs
sti
cmp
sahf
adc
loopne
stos
push
out
ljmp
int3
mov
add
sbb
sub
iret
popf
sbb
cmp
add
push
cwtl
jl
loope
fidivl
mov
inc
arpl
mov
aad
scas
aaa
dec
pop
or
iret
jp
test
push
insl
stc
cmp
out
and
test
pop
jecxz
lret
mov
lea
pop
xchg
dec
dec
adc
ror
jg,pn
cmpsb
jne
cld
arpl
sti
xor
mov
mov
sbb
or
xchg
sbb
fidivrs
ja
jae
loopne
sbb
push
xchg
icebp
iret
mov
mull
inc
aam
mov
mov
out
shll
cmpsl
mov
out
mov
icebp
mov
cli
mov
lahf
jmp
pop
ja
lods
ljmp
insl
out
fs
addr16
movsb
xchg
or
ljmp
or
ds
push
adc
addr16
dec
jg
pop
lods
mov
sti
stos
incl
dec
mov
sub
lods
xchg
loope
test
lods
test
movsl
mov
test
lret
xor
jl
mov
bound
mov
dec
rcll
fdivs
push
jnp
pop
sbb
mov
xchg
scas
xchg
jnp
out
fstpl
jne
mov
subl
fsubrl
adc
xchg
scas
mov
movsb
sbb
push
jge
fwait
dec
loop
enter
dec
shr
xor
push
add
ret
inc
ret
shrb
nop
negb
in
lahf
mov
loop
inc
pop
insb
aad
aam
and
insb
sbb
pop
sbb
adc
aad
repz
movsl
xchg
sbb
pop
fidivs
ret
fadd
dec
inc
xchg
and
push
scas
cmc
pop
xchg
lods
jge
mov
popa
stc
jo
test
xchg
push
jo
icebp
cld
inc
mov
lcall
in
or
push
addr16
xor
jae
push
and
repz
loopne
imul
and
leave
xchg
int3
fcoml
das
pop
cmp
pusha
in
pop
fisubrl
mov
pop
pusha
cmp
mov
icebp
jo
mov
cmpsl
leave
insl
sbb
movsb
jno
cwtl
mov
mov
push
and
and
std
lods
add
add
and
notl
mov
adc
shll
jge
loop
mov
mulb
xchg
pop
inc
inc
adc
mov
loop
fs
inc
mov
jl
adc
push
jns
imul
xor
inc
cmpsl
inc
cmp
loope
out
icebp
shrl
test
fwait
pushf
add
fs
push
nop
popf
outsl
cmpsl
add
mov
ljmp
pop
mov
ljmp
pop
mov
or
pop
add
mov
dec
adc
call
mov
stos
jne
and
lahf
and
pop
sub
out
cwtl
inc
ret
shll
outsl
inc
mov
adc
adc
inc
cmpsl
xor
xchg
and
fwait
pop
xor
inc
jle
mov
mov
ljmp
stos
int3
xor
push
jecxz
sti
mov
mov
sbb
call
ret
imul
mov
loop
int
jg
jo
or
hlt
xchg
aad
std
jb
popf
xchg
push
push
sbb
cld
imul
data16
inc
bound
pop
push
cwtl
call
adc
sbbl
cmp
lods
push
mov
or
sbb
jecxz
clc
jno
adc
enter
cmp
int3
notb
xchg
outsb
lret
mov
out
fbld
data16
fcmovnbe
jne
pop
pop
lcall
jnp
xchg
pop
rcrb
leave
inc
or
outsb
xor
cli
cwtl
shll
fiadds
test
popf
and
aad
cmp
adc
mov
mov
mov
mov
xlat
gs
mov
std
ja
jno
cld
push
lock
loopne
fsubl
jg
jns
scas
sub
loope
sub
sub
cmp
cmp
jno
mov
mov
fsubrs
fwait
sbb
loopne
and
xchg
push
cmpsb
mov
mov
pop
xor
inc
dec
xor
shl
sarl
jbe
adc
mov
inc
push
mov
popa
mov
jle
adc
push
mov
inc
hlt
add
add
inc
in
icebp
push
dec
outsl
or
jp
push
add
sub
xor
xchg
mov
and
out
mov
sbb
out
lock
cltd
test
cmpsl
cmpsl
push
mov
sbb
adc
imul
call
psadbw
enter
adc
add
mov
lea
scas
sahf
mov
testl
mov
shll
pusha
jl
and
dec
mov
lods
inc
mov
es
mov
xor
adc
movsl
mov
clc
or
mov
pop
lods
cmp
sub
xchg
inc
and
adc
hlt
sbbl
xchg
xor
ret
jge
jp
in
cmp
in
in
push
sub
mov
push
cwtl
and
movl
pop
xor
mov
out
ss
pop
popf
jl
rorl
lea
cmp
es
fadds
or
xlat
int3
or
push
fcoms
pop
jecxz
cmp
jmp
aas
idivl
inc
adc
xor
sbb
inc
xor
mov
ja
add
cld
jg
add
add
ficompl
fnsave
js
movsl
push
jmp
leave
jb
xor
pop
sbb
outsb
and
pop
int
rep
clc
xchg
push
pop
xchg
dec
lahf
sbb
inc
mov
add
clc
mov
lcall
hlt
repnz
shr
sub
ret
sub
ret
add
lods
cmc
jb
out
xor
jb
mov
mov
mov
push
xchg
pop
neg
daa
cmc
dec
cmpsb
xchg
xchg
add
sub
std
jnp
mov
aad
sub
lds
test
gs
adc
inc
mov
inc
fdivl
and
xchg
sbb
push
bnd
or
int3
insl
push
in
pop
aas
fdivl
xlat
xchg
scas
inc
scas
mov
pop
leave
xchg
jb
in
mov
fiadds
fnstenv
fnstcw
and
mov
repnz
cli
jns
mov
cmp
repnz
jp
or
or
aas
icebp
cmp
and
insb
ja
mov
push
adc
and
mov
fisubs
sahf
add
push
repnz
sbb
sbb
cmpsb
decl
inc
addr16
mov
ja
int3
jp
xchg
and
xchg
ljmp
mov
mov
imul
test
mov
lret
mov
aam
repz
adc
ds
dec
sub
bound
test
test
pop
cmp
pop
cld
sub
jno
or
ljmp
jne
lock
cmpsb
out
mov
fldenv
push
xchg
pop
cmp
aam
xor
mov
mov
cmp
push
inc
hlt
jge,pn
testb
cmpl
push
sarl
mov
push
sbb
std
fildl
or
stos
repz
add
push
pop
ret
pop
lcall
aad
dec
clc
cmpl
push
out
inc
sub
push
dec
mov
jbe
mov
adc
jbe
ja
mov
mov
fistps
popa
pop
push
testl
cli
cmp
je
in
int3
mov
iret
mov
push
mov
iret
fcoml
or
push
pushf
fsubs
subb
push
ja
outsb
lahf
push
arpl
pop
pop
pop
push
insb
sub
icebp
out
pusha
jns
out
xor
faddp
out
rcrl
xlat
inc
xor
mov
mov
daa
clc
sub
leave
jmp
sbb
mov
mov
and
mov
out
lds
imul
jecxz
es
xchg
mov
jecxz
adcb
test
lret
mov
inc
inc
adc
or
adc
jmp
cmp
adc
imul
pop
sbbl
hlt
in
movsb
les
push
cmpsl
xor
jge
xor
jle
xchg
mov
lret
enter
jns
inc
arpl
lock
cld
add
movd
aaa
testb
mov
out
and
sub
sub
add
add
lea
outsl
xchg
push
and
fldl
stos
xchg
data16
cmp
push
fimuls
std
jmp
ret
jbe
xchg
pop
mov
push
dec
les
sub
cmp
add
mov
aad
pop
or
pop
pusha
jbe
pop
push
sahf
mov
or
int3
fdiv
pop
rolb
pop
adc
je
repnz
push
mov
jbe
jns
or
xor
dec
adc
jecxz
or
lahf
call
xchg
dec
aam
jmp
inc
adc
dec
inc
sbb
repz
testb
or
outsl
daa
inc
popa
rcrl
jne
ret
js
in
dec
dec
scas
mov
out
inc
dec
aad
in
jae
roll
adc
dec
mov
cld
and
test
bound
lods
pop
je
xchg
lock
bound
lock
out
insl
push
adc
jno
cmc
dec
fwait
add
push
iret
in
int3
and
cmp
mov
shrb
push
pop
or
fcmovnbe
jle
cmp
fbstp
das
aad
pop
fwait
jmp
sub
jnp
fsub
mov
cmp
in
cmp
aad
test
mov
inc
mov
leave
movsb
call
add
sub
ds
mov
mov
ss
push
mov
pop
inc
pop
cwtl
mov
clc
inc
aaa
pop
xor
lods
dec
add
and
ljmp
xor
sub
dec
jno
xor
push
cmp
pop
jnp
push
fcmovne
out
mov
scas
pop
sbb
sbb
cltd
jne
adc
pop
and
movsb
adc
out
adc
push
xor
mov
dec
inc
imul
add
stos
popa
mov
outsl
inc
sbb
jae
adcb
xor
lret
pusha
pusha
fldt
jnp
gs
arpl
xchg
lcall
sbb
and
and
ds
daa
and
test
mov
test
out
jae
pop
fwait
sahf
and
stos
icebp
or
mov
cmp
mov
mov
inc
mov
fcompl
pop
xchg
push
rclb
jb
xchg
inc
adc
inc
loopne
mov
and
push
dec
ret
cmp
or
test
add
cmpsb
mov
dec
notb
lods
mov
mov
mov
in
ret
jl
and
and
sbb
inc
stc
jbe
lods
push
sub
or
test
clc
ds
data16
push
sub
xor
mov
es
cmpsb
or
or
out
popf
add
pop
movsb
push
sahf
stos
push
pop
shl
fmull
jb
dec
shl
push
fisubrl
ja
or
insl
push
fwait
or
hlt
mov
xchg
mov
xor
aas
cmp
mov
pop
jbe
ret
xchg
ljmp
mov
js
mov
scas
or
push
outsl
rcrl
dec
ret
mov
call
mov
fdivr
out
xor
dec
push
outsb
xor
push
pop
mov
mov
cmp
in
pop
or
xor
enter
mov
jge
jp
pop
fiadds
mov
push
fcmovu
pop
mov
xchg
xchg
xchg
pop
and
sahf
es
sbb
sub
push
fldcw
and
out
pop
jbe
xchg
hlt
xchg
mov
test
mov
xchg
cltd
mov
cmp
add
pop
scas
push
cld
test
jg
nop
loop
adc
mov
and
adc
mov
jmp
jp
and
cmpsl
int3
push
mov
fisttps
rcrl
lea
pop
jl
test
push
movsl
sub
test
mov
or
mov
inc
dec
mov
cmpsb
repz
pop
jl
test
mov
sahf
lcall
dec
jmp
lcall
aas
cltd
stos
jl
out
scas
test
jge
and
sub
arpl
or
cmpsl
mov
loop
popf
cmc
mov
add
pop
data16
mov
stos
mov
or
lret
cld
lea
int
fsubl
push
jbe
into
xor
aaa
sbb
push
xor
xlat
mov
sbb
xchg
daa
daa
or
scas
es
nop
pop
add
cmc
pop
xor
sarl
jo
andb
jbe
incl
pop
mov
inc
push
aas
ret
or
cwtl
lret
lds
mov
icebp
fsubrs
std
cmpsl
jle
pop
popa
sbb
mov
mov
int
mov
and
sub
into
in
or
xor
inc
jbe
mov
inc
popf
scas
fnsave
sbb
rcr
push
push
test
hlt
add
int
xchg
add
mov
sahf
repnz
call
add
stc
sbb
int
into
and
add
dec
jmp
lahf
and
bound
inc
cmc
mov
mov
push
mov
sbb
mov
and
push
sub
cli
movsl
pop
arpl
and
push
jecxz
xchg
dec
add
adc
and
push
js
cmpsb
and
ja
pusha
and
dec
inc
out
add
mov
gs
je
sub
pushf
popa
mov
gs
out
sbb
sbb
fldt
adc
or
xchg
stos
inc
minps
dec
inc
mov
lea
shrl
xchg
pop
mov
testb
jle
ss
dec
fisttpl
test
stc
xor
or
push
sub
cmpsb
scas
cmpsl
xchg
pop
mov
jb
subb
xchg
adc
jnp
sbb
sbb
hlt
or
lret
cmp
ds
xchg
push
and
push
movsl
mov
xlat
and
fistl
andl
xor
pop
cwtl
aad
dec
jecxz
shll
cmp
xchg
inc
repnz
cld
imul
xor
push
test
mov
mov
js
out
popf
sub
and
arpl
pop
adc
pushf
shlb
loopne
std
loop
stc
xchg
mulb
or
test
lods
mov
cmp
cmp
mov
in
nop
xchg
sbb
add
and
push
loope
dec
cmp
mov
mov
inc
inc
test
fldl
testl
out
mov
pop
add
enter
mov
inc
mov
arpl
sbb
mov
daa
mov
dec
inc
mov
mov
adc
mov
push
sub
mov
in
mov
inc
sub
cwtl
push
das
lea
jae
sar
aam
jl
les
jb
sar
insb
gs
xor
mov
jns
pop
sub
cli
aaa
rorl
inc
mov
pusha
js
adc
sbb
cs
loop
fs
push
push
imul
add
and
imul
mov
cmpsl
xchg
rcll
gs
xchg
xor
mov
and
icebp
xchg
cmp
push
and
cmpl
mov
ficompl
stos
rcl
sti
cmp
add
adc
sub
jns
data16
push
dec
fldcw
scas
dec
add
cmp
je
outsl
inc
xor
pop
imul
jns
in
pop
mov
fs
add
adc
and
insb
mov
jg
mov
adc
shl
xchg
jb
loop
xchg
arpl
orb
addr16
mov
ret
push
rolb
icebp
mov
or
sbb
inc
ss
iret
pushl
pop
lcall
add
adc
enter
mov
jl
gs
lods
mov
loope
sbb
xchg
inc
inc
sub
push
xchg
shrb
arpl
xor
jns
arpl
in
jl
mov
xchg
out
cld
and
cmp
stos
sahf
loop
ds
je
mov
pop
movsb
adc
add
cwtl
stos
dec
rcll
push
adc
nop
fwait
pop
out
imulb
inc
xchg
add
aaa
mov
push
sub
test
add
mov
or
aad
es
subl
xchg
rcrl
xor
test
test
pop
icebp
xchg
push
test
fwait
or
cmp
and
outsl
bound
imul
das
jecxz
mov
xchg
leave
ja
sti
push
mov
aaa
adc
insl
icebp
or
scas
lcall
adc
mov
jno
sbb
neg
add
stos
in
je
adc
sarb
xchg
pop
fwait
xchg
sbbb
int3
jle
test
mov
sbb
add
pop
push
ret
jnp
sbb
ds
add
cmp
mov
pop
fs
or
lea
lock
push
dec
stos
insb
aas
push
cmp
add
sbb
sub
gs
xor
imul
or
jns
mov
xchg
xorl
pop
inc
mov
js
dec
lret
sub
mov
xchg
decl
sbb
cmpsb
add
sahf
pop
mov
outsl
xchg
inc
fs
mov
sub
inc
les
scas
mov
daa
test
pop
ret
fdivl
cmp
outsb
loope
cmp
push
adc
adc
jbe
sbb
je
adc
mov
data16
inc
or
pop
popf
ja
jmp
sub
js
lods
movsl
in
test
mov
mov
insl
jmp
cmp
dec
sbb
add
xchg
outsl
int
mov
aaa
mov
sbb
mov
notl
call
rclb
xlat
xchg
lds
sub
lret
jg
xor
pop
lret
push
xor
pop
xchg
repz
push
ljmp
jns
es
std
lahf
testl
movsl
shll
hlt
int
jne
pop
xchg
ret
lahf
xor
test
inc
insb
pop
cmc
xor
xchg
add
mov
sbb
cmp
adc
push
fcomps
push
roll
push
cmpsb
movsb
rorb
mov
sub
std
std
add
cmp
cmp
mov
dec
ds
add
adc
jo
inc
leave
mov
js
inc
cmp
pop
jge
mov
mov
lcall
mov
pop
into
dec
lcall
lods
and
mov
cmp
lods
fsts
mov
into
xor
std
stos
lods
or
cmc
stc
sub
xchg
sbb
pop
dec
adc
pop
sbb
xchg
push
fisubl
fdiv
push
add
xchg
sbb
pusha
add
dec
decb
imul
cwtl
xor
xlat
cltd
mov
or
xor
pushf
mov
xchg
mov
aad
pop
pop
icebp
outsl
pop
bound
adc
icebp
hlt
cmp
lret
jmp
aas
or
out
aad
iret
xchg
insl
enter
sub
adc
mov
addr16
xchg
repz
and
vmread
sbb
js
mov
dec
push
fistpl
inc
inc
shr
idiv
or
das
inc
and
loopne
pushf
inc
jae
loope
push
popa
int3
in
shrl
lret
adcl
pop
jne
mov
stc
fdivrl
data16
mov
data16
xchg
cmc
frstor
push
repnz
test
dec
rorb
call
cpuid
cs
stc
sti
loopne
xchg
jecxz
sub
call
aas
lea
xchg
jle
xchg
popa
lods
cmp
inc
or
and
jne
adc
and
std
cmp
add
repnz
data16
addr16
adc
xchg
mov
stos
scas
sbb
lods
mov
rclb
cmpsb
push
dec
addb
xor
je
push
pushf
out
mov
xor
push
xor
jge
cmp
mov
imulb
mov
ret
daa
mov
roll
vsubps
mov
cld
in
imul
jo
cld
std
sahf
inc
ja
ret
push
or
mov
dec
sub
and
jmp
scas
and
cmp
les
wrmsr
push
out
cmp
push
je
ret
mov
mov
loope
leave
pop
call
in
adc
xchg
xadd
fiaddl
insl
outsb
test
les
stos
inc
lods
or
fildll
xchg
lds
sub
mov
cmpsl
into
xchg
mov
imul
call
xchg
mov
push
sbb
cmpsb
lea
push
jge
dec
fists
xchg
outsl
cmc
ljmp
mov
push
or
add
outsl
bound
jmp
xchg
mov
or
stos
fwait
or
outsl
and
or
lret
pop
mov
lock
rcrb
lods
and
popf
stos
push
dec
dec
movl
lret
jae
stos
je
cli
adc
push
pop
push
mov
mov
insb
stc
xchg
pop
cld
int
imul
bound
xor
sbb
mov
jne
stc
sbb
loope
mov
mov
fwait
xor
insb
mov
lods
xlat
fadds
mov
rcll
das
pop
push
push
fimuls
push
ret
enter
mov
add
xor
jns
outsl
adc
mov
xchg
aad
fdivp
sub
jne
rorb
sar
cmp
cwtl
cmc
sbb
pop
add
cmp
ds
push
lcall
adc
cli
insb
or
mov
sbb
leave
lods
test
outsb
xor
inc
test
or
dec
notb
mov
hlt
push
addb
lods
xor
push
arpl
notl
call
ret
fmull
xchg
insb
icebp
adc
pop
push
sub
call
mov
mov
lahf
stos
or
xchg
xlat
insb
fisttps
out
nop
js
mov
out
lahf
push
lock
les
lcall
iret
cs
shr
sahf
adc
movsb
jns
pop
jp
mov
cmp
xchg
push
or
jg
pushf
mov
pop
loopne
outsl
mov
mov
add
mov
xchg
dec
dec
mov
and
loopne
or
jecxz
das
and
test
xor
and
repz
cmp
xor
xor
imul
addr16
push
adc
outsl
dec
fnstcw
inc
pop
add
imul
movsb
dec
lds
add
stos
dec
xchg
sbb
xchg
outsl
jbe
les
dec
fidivs
mov
jb
shll
push
cwtl
mov
lods
mov
out
std
mov
ret
pop
xchg
in
ja
lds
ret
push
pop
cli
rcl
cmp
adc
into
cltd
test
cmpsb
rcll
pop
into
jg
rorl
fadds
adc
daa
gs
setp
adc
cli
sbb
and
jecxz
sub
sub
xor
lahf
pop
push
aad
lret
mov
add
push
ss
movsl
push
shl
pop
fcmovnu
stc
adcl
xchg
inc
dec
mov
push
xchg
dec
in
fistpll
inc
add
gs
add
div
xchg
fistpl
js
xor
inc
adc
les
fisubs
pusha
shlb
jg
lods
jmp
mov
sub
das
ret
jl
cmp
daa
mov
mov
in
shlb
popf
incb
ret
je
je
xor
inc
insl
adc
js
xlat
data16
sub
out
and
xor
in
cmp
ja
mov
stos
cmc
add
fcompl
mov
lods
loope
inc
test
mov
insl
push
test
dec
sub
das
add
mov
jnp
pop
sti
shl
shrb
mov
loop
adc
outsl
inc
add
out
jge
mov
out
xor
out
lahf
add
int3
xor
xchg
cmpsb
xchg
lods
push
jge
jmp
cmp
dec
repz
out
adc
sbb
aas
pop
adc
and
cmp
sbbb
sbb
xor
pop
insb
incl
inc
sub
scas
sahf
in
inc
or
cli
jecxz,pt
push
pop
loopne
jp
jbe
jne
dec
leave
scas
stc
cmpb
mov
xchg
mov
mov
cltd
mov
sub
addr16
stos
sub
lret
sbb
jecxz
cmp
sub
les
add
cmpsl
pop
sub
sahf
lock
out
jbe
sbb
je
or
or
mov
add
stos
je
aas
sar
push
leave
test
imul
fsts
in
mov
popa
dec
cmp
aad
add
jns
sub
cmpsb
mov
push
jmp
pop
sub
daa
comiss
pop
nop
jo
cmpl
jo
jecxz
and
ljmp
insb
xchg
and
push
icebp
cmp
and
mov
pop
sub
adc
and
dec
lret
loope
or
call
push
push
add
xchg
fistl
idivb
test
jmp
sbb
insl
or
jp
lods
arpl
clc
fadd
push
push
ljmp
adc
rorl
add
inc
mov
ret
gs
jmp
shll
add
cmpsb
out
out
lcall
pop
mov
push
and
push
mov
xchg
fdivp
jo
in
das
pop
dec
lret
or
mov
aam
cltd
pop
xchg
jns
jecxz
jmp
xchg
xchg
movsl
cld
popa
sbb
insl
fwait
inc
mov
lock
mov
and
fisttpl
lret
add
pop
lods
push
cmp
add
mov
inc
dec
outsl
aas
push
pushf
out
inc
xor
push
inc
or
mov
dec
push
jb
ret
cltd
push
adc
in
jge
fwait
mov
sti
ljmp
cld
dec
mov
push
orl
dec
or
push
mov
hlt
and
push
sbb
movsl
out
sahf
inc
int3
add
xor
outsb
sbb
jecxz
push
sub
xor
cmpb
insl
dec
out
out
xchg
dec
test
jg
xchg
inc
inc
mov
add
fcompl
or
add
and
jmp
dec
movsb
jg
es
add
jmp
ljmp
and
leave
fcompl
push
pop
xchg
ljmp
stos
int
adc
dec
ret
inc
rcrl
in
out
inc
add
loop
test
pop
xchg
sbb
outsb
ja
fwait
pop
sbb
pop
dec
jl
jb
xor
rclb
outsb
or
dec
lahf
sub
insb
fdivl
and
clc
adcl
adc
mov
out
shlb
addr16
jle
mov
inc
mov
cmp
iret
dec
and
aam
aas
jnp
cs
jnp
mov
bound
stos
aas
mov
into
push
das
out
aas
add
pop
fisubl
inc
cmp
add
ss
xor
movsl
inc
push
push
push
int
rolb
sbb
add
xchg
js
inc
cwtl
xchg
adc
jge
out
cltd
sub
and
es
or
mov
mull
sbb
out
push
inc
cmp
mov
fsubp
dec
arpl
aaa
outsl
rol
xchg
pop
jle
aaa
and
jmp
cpuid
les
xor
cmp
pop
adcl
out
cmp
mov
mov
fldt
mov
and
aad
call
inc
lcall
pushf
fidivrl
push
js
mov
adc
ret
fnstcw
cli
mov
add
arpl
in
imul
dec
sarl
xor
lds
aad
and
mov
inc
mov
test
lock
cs
push
xchg
cmc
sub
shlb
ret
js
js
nop
out
lret
arpl
pop
xchg
ljmp
lcall
sahf
jae
rcrl
lcall
push
or
out
scas
ds
nop
fistpl
loopne
sbbb
clc
int
sbb
sbb
mov
mov
inc
xor
pop
dec
pop
fistpll
into
ficompl
sbb
and
xchg
sahf
adc
add
cmp
sub
leave
pop
pop
pop
test
lods
mov
xlat
cltd
ret
or
xchg
nop
and
lds
cmc
xchg
pop
ret
inc
push
daa
bnd
imul
jo
inc
test
add
cld
push
ret
ficompl
ds
fidivl
nop
inc
int3
scas
leave
mov
into
gs
and
movsb
inc
cmpsb
loop
pop
sbb
add
pop
sbb
push
test
dec
loopne
mov
and
dec
in
push
aas
aam
xchg
int3
ficompl
mov
insl
dec
add
jnp
mov
push
cld
stos
and
lods
xchg
push
lock
jae
or
cmp
stos
js
mov
in
dec
stos
add
aaa
nop
push
mov
mov
fsubr
or
xor
xchg
add
inc
cmp
mov
in
paddsw
out
or
jns
cld
xchg
arpl
stc
cmpsb
lcall
rcrb
jp
inc
fnsave
and
cltd
push
repnz
mov
jl
or
jb
add
pop
out
popf
dec
mov
movsl
scas
jle
jg
test
popf
or
stos
lock
vcvtpd2ps
scas
popa
xchg
cmp
scas
mov
stc
lcall
push
imul
lds
icebp
out
mov
repz
mov
je
mov
pop
cs
loope
push
mov
std
out
inc
nop
add
fs
dec
xchg
jns
lahf
cwtl
adc
das
insb
jmp
js
aad
stos
scas
je
mov
dec
dec
stos
js
sub
push
int
leave
adc
cmp
inc
fidivs
ficoml
in
or
push
insl
and
pause
pusha
repnz
cmp
data16
icebp
adc
xchg
popa
jno
pop
clc
ficomps
sbb
cmp
mov
or
jno
jecxz
mov
mov
lcall
fwait
hlt
icebp
push
sub
hlt
cmp
sub
lods
popa
movsl
popa
loopne
dec
cmp
or
test
ljmp
imul
shll
in
sbb
in
add
lock
xchg
imul
sbb
dec
and
pop
ret
cmpsb
adc
mov
iret
add
leave
push
mov
test
cmc
repz
or
outsl
xor
jge
in
pop
repnz
pop
or
repnz
fidivs
xor
pop
push
mov
dec
in
xor
pop
mov
dec
mov
adc
ss
adc
aad
mov
imul
add
je
popa
mov
imul
dec
and
push
hlt
adc
inc
aad
sub
iret
cmp
xor
nop
test
push
jle
jno
pop
cwtl
xchg
das
insl
stos
mov
add
jle
test
inc
mov
cmc
imul
sub
data16
xchg
fdivl
jge
pop
jge
xchg
inc
inc
xchg
xchg
outsb
sbb
add
jb
leave
mov
sahf
xor
fs
jle
in
test
inc
or
shll
push
hlt
mov
lea
loop
lret
xchg
data16
xlat
ds
insb
pop
pushf
or
mov
enter
cs
icebp
lea
add
jb
decb
push
jb
push
les
data16
mov
dec
fisubrl
loope
imul
in
in
fwait
int
arpl
mov
sbb
xor
inc
repz
inc
addr16
push
int
push
subl
dec
push
pop
dec
push
jns
xor
gs
jae
jne
fcmovnu
subb
es
adc
sbbl
lea
jp
mov
xchg
push
pop
inc
andb
xchg
cmc
cmp
arpl
aas
out
jg
mov
dec
fs
dec
movsl
sarl
jl
out
fidivs
loopne
sbb
add
leave
outsl
lock
loop
add
stos
flds
shrl
jecxz
popf
in
push
andb
mov
mov
xchg
out
sbb
popf
stc
mov
pop
lods
outsb
rorb
jnp
mov
movsd
push
or
sub
je
inc
add
stc
jbe
mov
jns
cbtw
xchg
insl
pop
aad
mov
fsubl
push
xchg
clc
cld
incl
pop
out
cmp
out
sarl
ret
loopne
ds
aaa
sbb
lds
sub
or
pusha
loop
xor
jp
pop
adc
stc
in
inc
pop
loope
lret
fcomi
jb
xchg
xchg
sbb
ss
push
jbe
push
dec
stos
in
out
pop
add
xchg
xor
daa
pop
push
lods
adc
mov
repz
paddsw
pushf
mov
ds
popf
cmc
fimull
sbb
data16
aad
cwtl
iret
mov
jg
jg
push
push
mov
lock
xor
pop
repnz
pop
scas
add
xchg
cmp
adc
hlt
mov
dec
jecxz
mov
push
test
or
in
cmpsl
pop
mov
repz
insl
addb
mov
or
push
fstpt
sub
pop
cwtl
pusha
lods
push
loope
std
mov
mov
test
ret
pusha
ret
sbb
inc
loopne
inc
pop
das
xchg
jmp
shll
mov
aad
js
mov
cmp
jmp
push
mov
aam
jmp
fs
outsl
dec
and
test
dec
fwait
push
sbb
xor
test
xor
sub
or
pop
fs
pop
inc
jae
push
bound
mov
xor
loope
mov
xchg
jecxz
inc
outsl
aad
lock
or
push
std
add
stc
stc
mul
lahf
bound
mov
pop
into
and
or
inc
cmp
hlt
push
daa
mov
push
sahf
lret
cmp
lret
movsb
sub
push
idivl
and
xchg
mov
add
push
stos
jle
add
pop
pop
push
xlat
fs
jmp
jge
mov
push
dec
pop
decb
sub
pop
push
pop
or
and
pop
or
inc
xchg
cmp
outsl
sbb
int3
fwait
sbb
cli
aam
lods
test
mov
xor
inc
push
lret
mov
sub
subl
mov
int
fistl
test
jb
sbb
push
pop
fsts
jecxz
jmp
jbe
pop
cli
jl
jl
aaa
js
inc
dec
hlt
insb
push
cmp
mov
jg
pop
cs
in
push
add
out
add
push
bound
repnz
outsl
mov
push
jo
and
mov
lds
jge
repnz
jecxz
fsubrs
xchg
sbb
loope
adc
jo
and
js
mov
cmpb
jp
cmp
test
stc
aaa
fsubl
sub
les
sub
lcall
icebp
lock
push
inc
into
cld
and
xorb
into
fmulp
mov
dec
sub
or
or
dec
dec
mov
fmull
das
or
test
jl
adc
ret
jmp
add
mov
shl
add
fstps
mov
pop
jno
fmull
cmp
mov
lock
push
pop
outsl
xchg
add
adc
jae
clc
roll
mov
push
add
mov
add
out
inc
ss
mov
sahf
js
loope
dec
in
mov
and
out
adcl
lahf
ret
jge
xor
mov
imul
stos
and
ret
pop
dec
jmp
lock
xchg
inc
sub
repnz
fxch
or
into
dec
and
cmp
jecxz
out
scas
es
ja
rcrl
or
jb
outsl
aas
dec
mov
dec
pusha
movsb
inc
fidivrl
add
movsb
mov
or
cmp
sbb
in
push
adc
shlb
negb
jmp
frstor
mov
dec
cmp
push
mov
add
dec
adc
xor
and
pop
dec
flds
dec
dec
fdivs
call
jns
sub
movsl
decb
add
or
mov
push
lds
popa
mov
xor
sub
add
test
movsl
xchg
fldcw
leave
scas
add
clc
out
sub
into
fwait
imul
inc
xchg
outsb
jg
add
stos
ja
cmp
jnp
xchg
cmp
or
iret
insb
repz
mov
insl
repz
dec
inc
das
fmuls
gs
jns
pop
add
pop
adcb
pop
in
les
outsb
pop
push
insl
pop
add
das
xor
jnp
and
jp
ljmp
push
daa
sbb
cs
in
mov
rol
cs
adc
xchg
push
sub
sub
push
inc
push
inc
xor
out
je
adc
aaa
and
sub
mov
dec
inc
dec
pushf
push
mov
mov
lcall
xor
xor
mov
aam
imul
add
and
lods
add
push
xor
cld
fnstcw
in
cwtl
mov
aam
sbb
sahf
xchg
int3
fsubrl
out
dec
stos
addr16
pop
dec
rcll
enter
sub
inc
and
int
or
mov
jl
mov
lods
inc
mov
lret
je
fdiv
add
push
sub
jmp
or
sahf
sbb
and
pushf
sub
outsb
mov
or
sub
mov
jbe
das
testl
pop
loope
add
push
push
mov
aam
xchg
loopne
cmp
mov
outsl
sbb
pop
nop
inc
sbb
mov
and
in
inc
inc
cmc
loop
fxch
pop
popa
inc
mov
xchg
sahf
xchg
or
mov
test
sbbb
jmp
adc
cmp
ret
pushw
mov
xorb
popf
lock
xchg
cs
mov
aam
and
out
cmp
nop
sub
jns
fwait
mov
popf
dec
les
inc
iret
dec
jp
push
mov
cmp
insl
add
jmp
incl
dec
add
sub
test
mov
mov
or
mov
jge
lret
dec
mov
fisubrs
mov
into
jno
sbb
scas
or
ror
fisubs
into
xor
push
pop
rol
mov
add
fwait
mov
sarl
sub
xor
and
fidivs
movsb
gs
jns
or
pop
fisttps
and
test
inc
push
cmp
sahf
cmp
push
push
cmp
je
iret
xor
sub
xchg
adc
push
out
insl
scas
cmp
inc
cmp
and
or
mov
test
std
int3
xor
jmp
adc
inc
ljmp
sbb
push
mov
push
data16
icebp
push
aas
push
mov
mov
lahf
jle
fimull
popl
fildl
mov
mov
inc
or
sub
icebp
lods
das
pop
aaa
cmp
imul
aas
cmp
mov
sbb
daa
inc
push
sub
stc
jo
cwtl
jo
or
test
rolb
jo
mov
xchg
mov
aad
push
inc
jns
nop
sbb
pop
aaa
popa
sbb
lret
nop
inc
fisttpll
pop
out
and
loope
jbe
dec
push
push
or
mov
sbb
xchg
idivb
out
stos
das
sub
addl
pop
icebp
out
mov
push
jno
psraw
pop
cmp
stc
scas
bound
lods
sbb
mov
pop
cmp
fcmovb
lods
xchg
loop
lods
ficomps
mov
loop
jp
mov
insl
dec
sarl
data16
pop
fwait
popa
fwait
ret
fistps
in
push
sub
cmpsl
es
shr
je
mov
pop
add
fwait
sbb
mov
push
lcall
in
adc
xchg
pop
mov
and
aas
mov
in
in
cmp
outsl
hlt
aas
dec
jnp
and
movsb
and
insl
rol
test
sub
xchg
push
xchg
and
mov
rorb
xorl
jbe
repnz
int3
lahf
xor
rorb
mov
in
lahf
push
test
stos
ret
out
addr16
bound
cltd
xchg
pusha
and
adc
xor
push
mov
jl
sarb
ds
or
addb
cmp
imul
es
sub
pop
inc
outsl
push
sub
lret
js
je
iret
fistpll
out
mov
mov
aas
inc
adc
les
test
jle
std
sbb
out
orps
shlb
test
movsb
xorl
mov
push
pop
rol
jae
je
cli
nop
scas
adc
ss
aaa
pusha
enter
pop
call
xchg
stos
sbb
mov
xchg
rorb
mov
adc
loope
push
imul
cmpsb
add
cmpsl
icebp
xchg
rolb
in
jae
mov
or
push
ret
stc
pop
aas
or
jb
pop
cmp
mov
nop
lods
mov
sbb
push
loope
adc
hlt
rcl
outsl
cmp
adc
adc
pop
stc
stos
xchg
inc
mov
add
test
ss
pop
push
out
inc
in
in
inc
mov
cmp
jg
or
sarb
mov
add
pop
mov
aas
cmp
mov
pop
xchg
out
mov
push
stos
jnp
adc
les
ret
jl
xor
loop
insl
push
fs
add
lock
dec
out
jg
scas
call
xchg
or
mov
filds
adc
inc
inc
mov
or
sarb
mov
sbb
out
arpl
nop
insb
mov
out
mov
jmp
inc
mov
lret
sub
xor
jb
gs
or
loope
dec
fwait
or
xor
or
sti
pusha
xor
cmpb
pushf
push
sub
jo
ljmp
xchg
sbb
fiaddl
cmp
repnz
jne
aad
imul
push
in
sub
mov
fucomi
orl
into
cld
rorl
sbbl
inc
add
xor
outsl
add
adc
add
inc
and
mov
mov
cmpsb
std
lret
testl
xor
addr16
inc
mov
or
jg
push
xor
jle
mov
aad
test
adc
stos
add
int3
incl
shrl
cmp
or
out
sbb
fdiv
inc
aaa
adc
mov
pop
imul
shrl
adc
dec
je
pusha
mov
pop
xor
push
std
iret
mov
aaa
push
xor
sbb
fisubrl
aam
cwtl
mov
sub
ja
sbb
lds
sbb
jbe
mov
add
lods
inc
imul
and
xchg
add
jecxz
aaa
cmp
pusha
loope
push
sbb
push
mov
imul
cwtl
out
add
add
test
sbb
repz
push
int3
mov
and
repz
pop
roll
lcall
aad
cmpsb
hlt
std
jo
xor
pop
arpl
pop
imul
inc
cwtl
adc
and
dec
inc
enter
inc
test
lods
out
and
fistpl
out
jne
movsb
sub
and
mov
jno
lods
scas
es
pop
ds
pop
gs
orl
fnstcw
arpl
fwait
pop
mov
push
xchg
lods
inc
popf
cmp
mov
int
in
nop
cmp
pushf
adc
out
xchg
and
lock
dec
enter
mov
cmp
rcrb
dec
jle
lret
in
aad
lea
int
jne
jle
aaa
add
dec
cmpl
cmp
repz
movsl
mov
dec
aas
sbb
pop
push
ljmp
sbb
out
dec
pop
arpl
cli
xchg
xor
or
mov
fwait
xor
jge
imul
std
les
pushl
lods
mov
cmp
les
pop
or
xchg
bound
scas
jnp
xor
mov
popa
adc
push
inc
jg
add
in
shl
dec
jle
loop
cmpsb
cli
iret
loopne
xchg
jae
add
adc
pop
xchg
test
popa
bound
jns
mov
mov
sti
dec
sbb
cmp
xchg
scas
inc
in
scas
iret
outsb
sbb
jecxz
xor
in
fmuls
dec
mov
mov
and
pop
mov
add
xor
mov
xor
ror
mov
push
lods
fwait
gs
scas
inc
icebp
ja
push
add
out
popa
mov
pop
int
insl
mov
je
dec
fxch
mov
call
mov
outsb
int
sbb
cmp
or
cwtl
inc
xor
or
dec
add
movsb
adc
scas
shll
testb
in
cmp
lea
xor
or
lret
pushl
sub
aas
bswap
rclb
sub
int3
push
inc
pop
mov
xchg
mov
pop
jns
ja
jmp
aad
aaa
cmp
sub
lret
xchg
dec
pop
rol
ficoml
and
jb
pop
notw
push
and
sub
sbb
and
mov
out
popf
xor
pop
pop
xor
sbb
pop
enter
jge
sub
inc
and
adc
cmp
cltd
addr16
ret
inc
push
add
xor
push
cmpb
aas
cmc
nop
or
push
inc
daa
addr16
aad
gs
mov
or
inc
push
adc
stc
sbb
out
and
mov
pusha
popf
ret
aaa
bound
shlb
fdivrp
repnz
inc
imul
mov
push
hlt
aad
adc
testb
dec
aaa
mov
popf
insl
adc
adc
setns
int
hlt
test
xor
sahf
sbbb
inc
xchg
fldenv
fbld
push
pop
repz
cmp
and
filds
addr16
dec
push
sbb
jbe
pop
ljmp
insb
ds
mov
add
adc
cmp
test
insb
in
arpl
smsw
imul
add
mov
loop
mov
jae
rorb
or
sbb
mov
divl
aaa
jl
mov
sub
jmp
inc
jg
lods
mov
mov
sbb
or
push
and
shl
cwtl
push
mov
mov
jne
push
in
dec
and
jno
shlb
insb
shll
jno
fidivrs
scas
pop
jne
cmpb
push
xorb
test
ret
movsb
and
out
sub
jp,pt
not
mov
leave
xlat
cmpsl
pop
bound
jp
jg
inc
xor
repz
rol
addb
or
mov
xor
in
pop
jne
int
ljmp
push
or
popl
push
mov
fcomps
sahf
push
out
xor
roll
adc
inc
cld
cmc
lret
cmp
pop
lock
aaa
dec
addr16
std
jp
sub
pop
xchg
out
xchg
mov
imul
insl
test
push
jb
leave
dec
dec
test
addr16
xchg
dec
pushw
cmpsl
push
je
loop
mov
sbb
sub
pop
jnp
scas
cmp
out
jo
xchg
sahf
sahf
lods
test
push
movb
dec
mov
sbb
loopne
mov
or
dec
sbbl
xchg
push
adc
xchg
push
pop
mov
jp
or
mov
mull
cwtl
push
fsubrs
sub
lahf
arpl
xchg
mov
imul
je
fisttpl
dec
or
sub
xor
push
lahf
mov
sub
or
jp
push
stos
loop
sbbb
stc
shlb
aas
push
mov
mov
ret
sub
shrb
jmp
jle
mov
inc
and
ja
xor
jl
pop
bound
fisubrl
shrl
push
sbb
nop
sbb
lods
insl
cmp
lods
movsl
movd
aaa
mov
sbb
jne
loop
sbb
jae
fdiv
push
addr16
outsb
out
addr16
cmc
decb
pop
notb
insb
dec
aaa
pop
mov
lods
pop
xchg
push
mov
pop
jns
pand
adc
add
cmp
add
mov
push
fs
push
cmpsl
imul
push
ret
mov
jle
mov
mov
jl
lea
ret
rorl
js
cmp
leave
add
aam
gs
and
push
mov
sbb
lahf
xchg
pop
push
stos
lds
js
bound
mov
or
mov
scas
cmp
test
outsb
cmp
jp
mov
add
xchg
pop
inc
movl
xchg
sub
ds
aas
mov
mov
loope
mov
mov
dec
adc
stc
cmp
movsb
add
sub
dec
mov
mov
loope
mov
jns
mov
in
or
loopne
int
adc
cmc
aaa
push
sub
repnz
cltd
orl
imul
lods
sub
dec
mov
ljmp
xchg
inc
cmpsb
repz
int
les
scas
fwait
inc
jmp
push
scas
or
andl
fistl
sub
push
xlat
jge
adc
dec
repnz
inc
pop
and
decl
in
push
pop
test
pop
mov
adc
or
jnp
rcrl
sbbl
xchg
xchg
jge
cs
scas
jo
orb
cmp
jb
jne
push
movsl
imul
mov
les
jecxz
mov
pop
jb
jbe
mov
dec
fistpll
insl
sbb
pushf
popf
inc
pop
jb
push
mov
push
stos
xchg
push
sub
pop
mov
pop
loop
sbb
popa
xor
dec
and
and
mov
inc
insl
mov
mov
cmp
add
or
cld
loope
mov
ret
std
in
in
xchg
popl
jp
mov
ja
sbb
icebp
jge
jnp
pop
in
lret
lods
les
push
pop
out
jmp
dec
test
lret
in
pop
sarl
sarl
jb
shr
imul
imul
sub
into
or
jnp
jle
int3
addr16
fcmovu
mov
sub
push
push
lret
lea
sbb
push
in
and
inc
rcr
mov
daa
lock
xchg
push
clc
push
mov
bound
scas
push
js
pop
popa
pop
jb
cmc
inc
iret
lahf
jge
xor
sbb
rclb
adc
pop
popa
fildl
inc
sbb
fidivrl
mov
std
insb
sub
push
out
and
gs
dec
ret
mov
dec
push
pop
adc
lods
ret
mov
xor
out
jb
sti
dec
sbb
icebp
shr
test
mov
adc
jl
adc
test
sarl
xchg
cmp
mov
adc
jbe
pop
push
sbbl
test
icebp
insl
add
das
lret
cmpsb
adc
adc
cltd
pusha
add
cmp
shll
nop
pusha
jne
adcl
and
inc
in
arpl
shll
or
jge
cmp
js
jb
xchg
mov
mov
cmp
adc
jno
pop
cmp
pushf
jo
sahf
ret
ficoms
ss
mov
cs
dec
mov
and
xchg
bound
adc
inc
mov
and
movsb
fiaddl
or
dec
fsub
push
ss
sti
sub
fwait
dec
data16
loope
add
sti
mov
cmp
push
xchg
mov
mov
fwait
pop
jecxz
xor
dec
push
mov
push
pop
jbe
test
orl
push
mov
xchg
test
movsb
cld
cmc
pop
push
push
push
adc
fadd
jmp
xchg
mov
mov
das
ficoml
rorb
sub
xchg
mov
inc
and
and
xchg
xchg
aad
cs
jp
sahf
dec
daa
popa
adc
stc
ljmp
mov
mov
mov
imul
loope
push
and
xchg
outsl
add
adc
push
clc
sbb
xor
mov
gs
popa
mov
sarb
stos
stos
xor
push
popf
add
fidivl
sbb
stc
push
mov
jnp
jae
cmp
cmc
adc
adc
div
dec
dec
in
mov
jl
mov
xchg
pop
cmp
call
es
push
push
add
dec
out
scas
mov
movb
rclb
addr16
rolb
movsb
inc
pusha
sub
mov
out
lret
sbb
mov
inc
mov
jne
movsb
jb
xchg
xchg
push
rcll
xor
ds
mov
mov
dec
test
ss
dec
mov
pushf
imul
add
leave
out
out
stc
cltd
lods
les
sbb
xchg
mov
in
outsl
sub
cmp
mov
mov
push
pushf
jo
in
aaa
mov
popf
lret
pop
jmp
jmp
leave
jae
scas
jmp
mov
inc
in
scas
cmpsb
jge
xor
repz
adc
mov
lea
jae
repnz
mov
imul
test
adc
lock
cltd
or
test
or
stos
mov
repz
rcl
in
fldt
xlat
sub
push
shrb
shrl
fstpt
in
hlt
or
jmp
jae
adc
add
dec
mov
fnsave
inc
pop
aad
sbb
mov
mov
lods
mov
xor
cmp
and
mov
addl
mov
inc
fwait
aad
rcrl
stc
jo
test
lds
cmpsb
xchg
xchg
or
push
mov
push
scas
mov
mov
add
sub
push
sbb
and
sbb
pop
add
push
fldl
xor
xor
pushl
jae
adc
mov
fisttpl
cmp
loope
or
pop
mov
mov
pop
pop
ficoms
repz
pxor
mov
shl
sbb
into
adc
nop
sub
xor
push
jl
pusha
out
aaa
push
sbb
add
cmp
mov
sbb
push
mov
dec
popa
sub
lcall
fadds
mov
pop
mov
test
pop
js
xchg
mov
dec
and
enter
mov
scas
cmp
imul
cmp
jle
mov
push
fidivl
icebp
fwait
add
jns
or
inc
add
xorb
cmp
into
mov
jmp
pop
aad
sub
mov
addr16
ds
or
gs
aad
aad
stc
jge
or
cmp
int
popa
ss
jecxz
push
mov
popa
mov
cmp
out
int
pop
jo
push
mov
mov
mov
mov
cmp
pop
or
inc
or
sbb
pushf
push
inc
clc
shlb
and
adc
jmp
push
aas
xor
mov
mov
insb
push
cs
into
inc
call
cmp
imulb
ja
rorb
add
mov
test
and
xor
pushf
fxam
pushf
std
rorb
pushf
add
or
andb
xlat
addr16
lods
notl
vpmacssdql
jno
fmuls
cmp
cmp
cmpsb
adc
out
inc
ret
std
and
xlat
xchg
cld
push
inc
icebp
stos
mov
pushf
cwtl
mov
pop
and
mov
ret
imul
lret
mov
xor
cld
sbb
adcl
incl
cltd
add
and
xchg
sbb
out
ja
adc
dec
jo
pop
cwtl
cmpl
leave
cmc
mov
mov
mov
pop
jae
inc
xchg
subb
sahf
xlat
push
mov
aaa
mov
movb
sub
dec
stos
addr16
cmpsb
push
mov
sbb
test
ret
push
imul
stos
loop
pop
hlt
sub
or
mov
addr16
xor
inc
lea
mov
fists
pop
pusha
and
jge
mov
out
push
test
pop
cbtw
sub
dec
cld
xlat
cli
push
lret
xor
dec
mov
add
mov
pop
imull
call
fmull
cli
call
pop
lock
loopne
std
inc
mov
add
pop
mov
lahf
insb
dec
inc
mov
jecxz
sub
stc
push
sbb
xlat
outsb
add
mov
imul
fisubl
das
sub
dec
mov
push
scas
cmpsl
stos
data16
mov
popa
subb
dec
pop
lahf
outsl
daa
pop
push
sbb
jno
shr
mov
and
or
cmp
ja
repnz
jle
sub
testb
lea
mov
imul
jmp
idivl
inc
je
dec
mov
cmp
mov
cmp
mov
mov
out
dec
cli
test
lcall
jecxz
sbb
mov
aaa
dec
fdivs
mov
jo
stos
roll
ret
or
nop
gs
imul
insl
inc
mov
dec
in
test
jmp
cmp
subl
pop
pusha
push
outsl
dec
insb
in
cmp
adc
mov
jecxz
es
ja
and
in
mov
out
mov
sbb
pop
arpl
ss
xchg
iret
sub
test
and
jne
push
adc
enter
jb
in
push
or
inc
jns
or
mov
pop
faddl
mov
dec
ror
sub
or
mov
sub
mov
mov
push
out
push
ljmp
dec
ja
inc
dec
mov
lret
adc
ja
ret
jbe
mov
jp
inc
outsl
pop
das
imul
push
popf
adc
pop
stc
outsb
pop
fidivrl
jno
leave
jb
jns
ss
and
sbb
mov
lahf
mov
jecxz
test
in
pop
mov
pop
dec
xor
lret
mov
adc
fwait
jg
lcall
jnp
add
movsb
loop
les
dec
xor
and
test
push
pop
push
or
aam
or
push
sub
imul
cli
out
pop
and
cli
std
scas
sbb
adc
mov
es
add
in
xor
leave
arpl
icebp
aad
addr16
inc
adc
jae
test
repz
popf
mov
imul
jns
inc
repnz
into
aaa
push
sbb
add
and
sub
sub
adc
data16
sarb
pop
sub
inc
inc
sbb
xchg
aam
mov
cmp
scas
orb
pmaxub
in
jo
jbe
sbb
sbb
test
cld
or
test
xor
xchg
fwait
dec
mov
mov
aas
ror
subb
inc
je
int3
jne
stos
fidivrl
daa
mov
or
xchg
xor
repnz
sbb
ds
and
cli
movsl
in
cmc
push
dec
std
jbe
hlt
outsl
fnstsw
adc
add
imul
mov
jmp
sbb
scas
add
xor
fldenv
mov
out
hlt
loopne
dec
mov
sub
ljmp
sbb
shll
and
push
adc
xchg
cmp
int3
inc
mov
outsl
je
movsb
sbb
cmp
xor
gs
dec
into
xorl
pop
loop
pop
xchg
pop
inc
insb
pop
mov
dec
ja
pop
loopne
xchg
pop
aaa
pusha
push
sub
shlb
and
aaa
outsl
xchg
push
aaa
xorb
insb
faddl
movsl
cld
push
ljmp
push
fdivrs
in
nop
popf
or
fdivrs
dec
push
mov
xor
jle
pop
int
ret
ret
sbb
or
insl
leavew
push
xchg
jb
sbb
in
adc
xchg
outsl
test
insb
cmpsl
jg
xchg
dec
mov
ljmp
addl
js
mov
imul
lods
movsb
sbb
decl
dec
rcl
adc
test
clc
push
mov
mov
clc
inc
in
data16
xor
mov
inc
jle
pop
pushf
loopne
popa
ja
jne
in
mov
ret
add
push
push
inc
push
push
cwtl
dec
movsl
mov
push
test
sbb
lods
jge
les
cmp
gs
aas
and
ljmp
and
sub
fs
push
aam
js
xchg
adc
sub
inc
repz
dec
lods
jp
out
aad
fiadds
xchg
xchg
add
bnd
ss
ret
fs
push
loop
pusha
push
leave
sub
mov
je
pop
mov
add
mov
mov
jp
cwtl
xchg
scas
adc
cmp
jnp
sub
incl
cld
mov
cmp
cmc
fwait
push
lea
push
and
xor
sbb
mov
cmp
inc
push
in
stos
inc
ret
cmp
and
mov
jp
lods
xchg
cli
pop
mov
xchg
fldl
in
icebp
push
jg
cli
jae
test
outsl
jmp
mov
aas
aaa
adc
or
xor
or
test
xorb
ja
mov
cld
neg
xorl
mov
or
dec
hlt
push
mov
decb
cs
fadds
pusha
ss
sub
xor
es
pop
test
pop
scas
hlt
ljmp
add
or
inc
jl
packssdw
enter
or
lea
inc
aaa
jne
xchg
call
inc
push
pop
enter
clc
cmp
cmc
out
aas
xor
lret
pushf
les
xor
push
fsubrl
iret
cmp
jno
sbb
aam
es
inc
push
or
mov
std
fisubs
mov
pop
cmp
jbe
inc
pop
mov
inc
ja
cli
mov
pop
js
xchg
fdivrl
xor
sub
push
test
push
fldt
test
xchg
nop
test
jl
dec
fisubrl
sbb
outsb
push
repz
xor
jl
stos
mov
mov
push
js
or
jl
mov
sbb
repnz
mov
loope
push
mov
insl
lahf
dec
stc
inc
lea
pop
push
pop
xchg
mov
fbstp
adc
push
sub
std
out
xor
test
lret
pop
into
out
xor
xchg
sub
jbe
in
ss
xchg
jmp
push
pushl
js
test
sub
jno
inc
add
scas
jb
and
dec
sub
xor
xchg
daa
rcrb
sub
daa
xchg
jge
ja
jecxz
jo
inc
adc
cltd
mov
add
stc
mov
lret
push
loop
sub
adc
xor
cs
fs
sbb
sub
mov
inc
mov
rclb
cltd
ds
cmc
or
repnz
pusha
rclb
pop
jecxz
cmpps
mov
test
or
push
cli
cmp
fidivrs
jbe
sbb
xor
lea
test
mov
aas
cltd
adc
out
sbb
sub
shl
jae
mov
das
loop
ja
pop
sub
call
push
add
ffreep
xchg
mov
mov
xchg
push
fisttpl
dec
lcall
frstor
jae
fiadds
leave
and
xor
mov
gs
pushl
mov
out
aas
nop
aas
xchg
ljmp
pop
int
cmc
adc
scas
das
neg
dec
imul
fwait
mov
push
jno
pushf
xchg
add
int3
lods
xchg
push
pushf
mov
or
arpl
xchg
cwtl
rorl
outsb
lahf
in
inc
std
js
movsb
sbb
les
adc
out
sbb
inc
sub
fcoml
rcll
adc
test
xchg
mov
dec
mov
int3
daa
test
lcall
ret
rol
mov
lock
xor
push
movsb
fwait
dec
lods
cli
popa
xchg
xor
mov
ljmp
dec
stc
stos
lods
sarb
sub
or
add
lods
inc
out
das
inc
xor
or
inc
pop
add
adc
xchg
enter
adc
je
jne
or
sub
push
xchg
mov
into
pop
loopne
xchg
repnz
nop
push
icebp
xor
push
mov
cmp
dec
cs
out
inc
cli
fwait
adcb
add
pop
push
mov
sub
xchg
xchg
add
fnstenv
mov
jbe
ja
fistpll
push
das
jmp
in
mov
pop
and
ret
fldenv
bound
push
sub
repnz
loop
inc
outsb
roll
push
xchg
lods
inc
movsb
or
les
imul
dec
mov
dec
push
aad
repz
fisttps
push
dec
ss
xchg
push
and
jge
mov
test
xor
imul
sub
andb
cmp
pusha
cs
ficomps
push
jne
sub
fists
push
jns
xor
loopne
adc
bound
fcompp
push
ljmp
mov
shll
mov
jge
xchg
mov
in
jg
sbb
xchg
iret
push
add
mov
fimull
lret
cmp
mov
out
sub
inc
cmp
cmp
sbb
mov
not
mov
clc
fdivl
aas
push
or
cmp
pop
mov
jg
lcall
and
jmp
movl
shll
sbb
sub
sbb
aam
inc
mov
cmp
cmc
sti
sub
andl
aad
mov
jb
jg
aam
cmp
cmp
jns
lea
ja
jb
jo
and
aam
xchg
adc
add
std
mov
fisttpll
mov
mov
lea
lea
jnp
xor
int
or
mov
in
mov
and
mov
xor
inc
sbb
lds
pusha
or
popl
jne
lods
and
push
xlat
pop
sub
xor
inc
pushf
adc
enter
xor
sbb
jo
add
add
arpl
test
rorl
jns
in
shlb
mov
pop
cltd
or
xor
xlat
addl
cmp
push
loop
lcall
outsl
adc
subl
pop
mov
aad
lds
adc
scas
pop
rcrb
cmp
mov
adc
mov
xchg
fstl
xchg
push
mov
aas
xor
xor
mov
dec
pushf
adc
xor
lret
jmp
loope
lods
subl
pop
lret
mov
pop
inc
arpl
push
lea
or
pop
rcrl
mov
inc
sbb
mov
loopne
bound
fwait
jmp
xlat
push
push
iret
stos
aad
fsubl
cmc
jmp
push
int3
arpl
lret
sbb
insb
andl
insb
adc
gs
inc
in
adc
cmc
xor
xchg
add
and
push
popf
add
into
push
sub
lahf
lods
fmuls
push
pop
jno
shll
cwtl
ljmp
notl
jp
loopne
cmp
cmp
cmp
mov
aad
jl
jns
xchg
mov
mul
push
and
pusha
dec
fistl
adc
jne
xchg
enter
shll
pop
sub
fdivp
mov
pop
rorb
sar
sub
cmp
lret
cmpsb
sbbl
sbb
jge
test
into
fs
sub
jo
fistpll
aaa
add
mov
push
pop
cmp
lods
cld
xor
cltd
fcomi
push
pop
nop
cmp
iret
adc
das
mov
data16
push
fstpt
cmp
dec
fistps
jae
and
mov
fildl
dec
sub
ljmp
loop
dec
inc
mov
xlat
sbb
movsb
aas
test
data16
pop
cmc
adc
add
pop
sub
ror
out
adc
icebp
cld
xlat
add
cmp
lret
mov
xor
jmp
mov
push
out
fistpll
in
scas
inc
mov
mov
fdiv
push
add
mov
cmc
je
js
or
adc
jnp
fcoms
cmp
aaa
push
mov
dec
rcl
popf
push
sub
pop
xchg
adc
js
push
jnp
nop
icebp
fs
dec
and
xchg
push
jae
inc
scas
push
push
lock
ret
add
push
mov
test
xor
and
fwait
bound
add
mov
jmp
sub
repz
jb
in
cmc
mov
mov
dec
push
push
outsb
xchg
xchg
push
mov
lahf
xor
sti
dec
add
or
mov
and
cltd
icebp
inc
fnstsw
xchg
hlt
mov
sbb
xchg
mov
xchg
mov
cmp
xchg
mov
shlb
pushf
xchg
es
fucom
shr
stos
pusha
sub
sub
out
xlat
sahf
sbb
mov
xlat
mov
ret
addl
ja
cli
sbb
push
xor
sub
test
into
ljmp
adc
inc
jo
addr16
jp
cmp
dec
xor
ds
rorb
pusha
xchg
jg
insl
add
adc
jmp
mov
test
or
inc
loop
lods
mov
rorl
sbb
xchg
hlt
les
xlat
sbb
xor
mov
inc
lock
and
lret
jne
movsb
jnp
xchg
sub
movsb
imul
mov
arpl
repnz
inc
xor
and
ss
hlt
test
xchg
sbb
jmp
lds
data16
inc
jnp
jmp
jle
pop
xlat
aas
std
cmp
insl
xor
push
rcr
cld
aas
cli
cmp
inc
sub
jo
inc
addb
mov
pop
push
fxch
ja
clc
pop
jmp
shll
dec
loop
sahf
jne
mov
in
ja
lcall
popf
sbb
push
mov
fs
inc
imul
lcall
add
sub
xchg
push
mov
mov
les
int
push
pop
inc
into
fimull
adc
pushf
insb
addr16
shrb
out
loopne
lcall
into
out
jnp
push
push
enter
sub
or
fldcw
mov
mull
xor
call
mov
into
adc
andl
nop
in
push
push
inc
mov
inc
test
lea
into
repnz
sub
dec
and
lret
or
int3
test
push
lret
pusha
aam
cmpsb
fldl2t
xchg
es
repnz
call
call
into
loope
jo
mov
movl
jmp
sarb
adc
and
and
shlb
into
outsb
mov
pop
outsb
cmp
jp
add
test
lcall
and
mov
ror
cmp
push
mov
xchg
add
sbb
xchg
push
xchg
adc
call
sbb
jl
xchg
mov
sbb
xchg
ss
sbbb
mov
arpl
ficoml
or
fiaddl
ljmp
inc
push
push
outsb
jb
repz
test
rorl
decl
push
es
and
iret
add
add
adc
cmpsb
popa
mov
add
or
shlb
shll
xlat
adc
rcr
arpl
les
mov
sub
inc
flds
ret
testl
insl
aam
mov
jbe
jne
push
mov
and
aaa
out
insl
popl
cmp
and
mov
loope
or
push
add
sub
pushf
lret
fdivs
mov
cmc
shl
stos
ja
ljmp
and
sub
xchg
out
mov
mov
or
mov
pop
xlat
insb
pop
movsl
push
add
sbb
lods
leave
push
push
ret
dec
mov
fucomi
pushl
enter
lds
out
daa
cltd
lds
jnp
cmp
sub
mov
mov
fnstsw
pop
fs
cmp
adc
rclb
mov
inc
inc
in
xchg
test
adc
pextrw
gs
add
es
sub
push
cmp
or
loope
aad
sub
shrb
stos
adc
add
or
lcall
rclb
dec
mov
outsl
addl
jle
in
sbb
xchg
cmc
scas
mov
test
out
jo
mov
aas
push
loop
test
mov
lea
mov
cmpsl
cmp
push
cli
test
sbbl
push
pusha
dec
or
cmc
inc
lret
pop
test
push
sarl
mov
bound
sti
data16
cmp
mov
jecxz
pop
jae
pop
jae
sub
xchg
loope
push
lock
stos
cmp
xchg
test
add
repnz
repnz
shr
pop
inc
mov
ds
fsubl
jge
adc
mov
xor
in
xor
stc
int3
cmc
sar
test
jno
dec
push
cli
cltd
mov
inc
cld
enter
das
popa
dec
mov
lds
push
ror
sub
sbb
push
mov
ficompl
mov
pop
adc
cmp
ljmp
mov
and
int
sub
xor
and
mov
outsb
repnz
dec
push
sbb
cmp
cmp
or
out
xor
pop
mov
addl
or
lock
xchg
or
jge
jb
inc
add
notb
xor
je
daa
inc
inc
mov
pop
stos
jnp
or
add
and
xor
es
outsb
mov
push
and
cmp
and
jle
mov
sub
jg
lods
loopne
into
jns
push
in
pop
cmpsl
cmp
repnz
rol
xor
fisubrs
subl
shrl
movsb
addr16
mov
test
imulb
jb
sbb
push
mov
movsl
ljmp
dec
jl
jnp
xor
push
sbbl
repnz
les
iret
mov
ja
lods
enter
lret
orps
repz
jns
xchg
xchg
fld
in
and
fsubs
dec
imul
inc
jmp
test
cmp
addr16
inc
repnz
and
in
jbe
ffree
repnz
add
sub
repnz
cmpsb
cmp
int3
and
mul
sub
sub
js
inc
leave
sti
mov
sahf
fcmovbe
mov
lret
stos
mov
lods
jno
pop
jbe
leave
cwtl
ja
jg
xchg
mov
lret
daa
sbb
lret
rcrb
aad
ljmp
loop
shl
fisubl
or
mov
mov
pop
fisttpll
xchg
dec
rorb
add
and
push
xchg
cwtl
sti
push
xchg
fiadds
or
dec
pop
xor
in
or
sbb
inc
popf
sub
inc
mov
inc
dec
insl
dec
stc
jp
dec
or
shll
into
roll
sti
sub
adc
loopne
sub
jo
hlt
pushf
repz
pop
adc
push
jg
mov
stos
xchg
inc
push
adc
xor
xor
cmp
loope
lret
lahf
mov
enter
outsb
add
jp
or
add
mov
leave
push
aam
sbb
xchg
and
hlt
lret
cmp
mov
dec
test
dec
cmp
pusha
and
imul
loop
cmp
add
fcos
push
ret
or
lock
mov
adc
adc
mov
jl
test
inc
sbb
jg
or
mov
and
test
jnp
xor
out
push
xor
fistpl
cmp
scas
cld
std
stc
push
out
arpl
insb
push
mov
pop
mov
loopne
lret
cmp
sub
fistpl
lods
loopne
stc
add
fwait
xchg
iret
push
aaa
in
push
sbb
je
es
fists
jp
adc
mov
xorb
add
or
aaa
fidivrl
pop
or
inc
mov
xchg
pop
mov
pop
enter
sub
and
jg
cmpsl
lds
cmp
pop
ffreep
mov
scas
jnp
std
dec
mov
and
jns
cmc
es
fucomip
les
popa
pop
shll
dec
mov
stos
ljmp
mov
xchg
in
int
mov
stc
fucomp
dec
mov
sub
jg
daa
insb
and
in
mov
lret
and
adc
jb
rol
fnsave
mov
jge
pop
or
filds
pop
js
in
mov
inc
add
or
xchg
lods
push
imul
int
lods
fnsave
jmp
rcll
lods
fisubl
jp
add
enter
mov
adc
push
sub
and
inc
add
inc
outsl
lret
mov
jg
in
mov
andl
pop
inc
jecxz
push
xchg
jb
enter
pop
add
dec
outsb
sbb
aaa
mov
mov
pop
ds
jbe
or
add
jb
js
out
add
mov
lea
popa
sub
mov
test
inc
es
daa
lea
xor
xchg
cltd
data16
jne
add
xchg
rcpps
cmp
sub
sarl
mov
xor
mov
sbb
add
xchg
sbb
popa
xor
aas
scas
push
in
jb
fwait
xchg
dec
in
clc
mov
add
or
dec
outsb
aam
aad
lcall
mov
jg
lea
sahf
int3
mov
xchg
scas
sbb
dec
pmulhw
xchg
jns
in
pusha
rcr
xchg
dec
xlat
repz
mov
hlt
mov
pop
fdivrs
loope
fcomps
push
sti
cmpl
gs
pop
fwait
inc
xor
add
cmp
push
dec
xor
add
shll
pop
inc
xor
mov
xor
add
imul
fnstenv
filds
mov
sub
jns
hlt
mov
into
dec
pop
mov
loope
and
or
sbbb
std
jecxz
fldt
push
insl
data16
mov
jge
xor
push
mov
push
std
and
pop
jp
xchg
movsb
xor
loop
cs
mov
jecxz
inc
sti
aad
pop
mov
fistpl
in
in
cmp
push
popa
and
lahf
xchg
push
data16
cmp
push
jg
push
cmp
mov
decb
pop
out
mov
add
inc
push
or
jnp
jmp
mov
sbb
or
aaa
mov
jae
outsl
mov
push
push
or
clc
fcoms
sbb
repz
out
xor
mov
int
push
ja
ss
pop
mov
mov
push
mov
mov
and
dec
adc
add
int3
add
test
int3
mov
push
xchg
insl
lcall
addr16
out
es
jns
and
fcomip
sub
es
dec
mov
dec
std
push
pop
pop
inc
xchg
dec
cmovge
xchg
insb
out
mov
fistl
dec
sbb
mov
push
and
mov
rorb
sub
das
sbb
movb
pop
jno
cmp
inc
dec
aas
fisubrl
lret
inc
pop
fdivr
xchg
cmp
push
ljmp
arpl
icebp
and
repnz
shlb
sub
int3
loope
scas
pop
xchg
sbb
dec
mov
sarl
pop
mov
popa
mov
mov
push
dec
sahf
adc
or
loope
adc
xchg
jle
mov
push
fldl
and
xor
dec
orl
out
inc
mov
sti
jae
lods
xchg
jmp
lods
lods
cmp
mov
xor
inc
jmp
pop
mov
pop
mov
mov
xchg
or
js
ret
cmpsb
fs
pop
ja
cwtl
fdivrs
inc
xchg
in
push
lock
and
adc
pop
idivl
mov
xchg
loop
insl
add
loopne
jmp
lods
push
and
push
pop
mov
pusha
xchg
aaa
add
sarl
xorl
cmc
xchg
stos
pushw
nop
mov
flds
mov
jp
sbb
dec
pop
sahf
add
fistl
push
fwait
inc
xor
mov
add
stos
pop
push
cmpsl
mov
bound
out
out
fwait
lcall
addb
inc
idivl
xchg
inc
fidivs
dec
jne
lock
mov
adc
jmp
add
xor
fildll
stos
mov
xchg
pop
and
xchg
leave
fwait
mov
mov
mov
bound
aaa
popf
in
lret
cmp
xchg
push
int
jbe
pop
mov
enter
push
enter
push
or
and
and
mov
enter
loop
mov
dec
dec
iret
inc
rcrb
xchg
sti
add
jl
jl
sub
pushf
hlt
mov
xchg
addl
xor
mov
roll
mov
test
xor
sti
xchg
mov
call
icebp
mov
clc
hlt
dec
jae
add
xchg
movsl
and
add
nop
pop
stos
arpl
push
adc
sub
inc
shl
sbb
movsl
add
test
cmp
xchg
or
in
sti
stos
adc
fcoms
das
fcomps
jo
xor
or
scas
andb
shlb
int
jno
xchg
lds
push
orb
int3
adc
ror
ja
pop
inc
jl
cmp
movl
subb
jge
test
icebp
sbb
xchg
sub
sub
push
ss
and
out
adc
fmul
arpl
pop
sbb
sbb
out
push
lds
loop
jno
lods
adc
xchg
stc
insb
push
stos
roll
js
fisubrl
dec
lret
fcmovnb
adc
mov
fwait
jno
in
cmp
stc
fcmovnbe
mov
xor
in
or
jne
popf
sub
std
inc
aad
mov
adc
fwait
test
repz
mov
jge
aad
xor
testl
std
aad
lahf
insb
mov
adc
es
shll
cmpsb
xchg
mov
aas
mov
cli
add
popf
jg
pop
shrb
mov
cs
leave
rorb
jl
cld
pop
push
cmp
mov
inc
mov
adc
add
xor
mov
add
jl
stos
dec
jne
mov
push
fcmovb
jp
les
mov
adc
cmp
xchg
fists
or
out
call
stos
js
loop
dec
mov
inc
cmc
or
adcl
popfw
and
in
pop
push
xchg
push
jae
adc
lds
lahf
adc
dec
or
dec
orb
xor
push
loopne
inc
icebp
clc
inc
xchg
fimull
sub
dec
imul
stos
fs
dec
push
jp
call
xor
mov
rorl
repnz
xlat
and
mov
cmpsb
pop
testb
mov
xchg
xchg
cmp
and
repz
test
mov
call
push
pop
sub
adc
out
mov
sub
xchg
pop
xchg
cmp
cmpsb
icebp
enter
bound
pushf
int
jns
inc
stos
xchg
clc
ret
pop
pop
aad
ror
cmp
cs
lcall
std
add
mov
xchg
mov
cs
dec
sub
loope
and
imul
jb
sub
test
aas
cmc
or
adc
out
lret
xor
fcmovne
mov
inc
xorl
shlb
out
mov
push
mov
adc
popf
ss
outsb
leave
ret
jbe
xor
aam
mov
fisubrs
add
loope
push
repz
sbb
mov
sub
xor
outsl
insl
mov
jo
xor
add
sarb
jp
dec
or
cmp
pop
and
add
mov
jmp
shlb
jg
shll
xor
adcb
mov
dec
test
cld
call
hlt
imul
daa
je
in
out
xchg
lahf
dec
xor
fimull
jo
cmpsb
orb
call
dec
ljmp
popl
adc
add
out
jo
mov
test
test
test
sti
testb
add
add
mov
push
xchg
mov
mov
cmp
xor
fucomip
movsl
adc
and
and
test
and
xlat
push
add
push
push
iret
dec
test
xchg
out
movsl
jne
add
mov
xchg
ret
dec
in
les
ffree
pop
lcall
leave
or
or
ds
sbb
out
mov
sbb
imul
and
push
sbb
out
test
pop
pop
pushf
mov
mov
xchg
xor
adc
inc
sbb
pop
xor
stos
icebp
add
cmp
daa
cltd
les
stos
cltd
mov
mov
or
inc
cltd
das
and
dec
in
sbb
ret
das
sarb
cmp
int3
dec
dec
cmp
fadd
es
cmp
jmp
push
lret
or
mov
lods
clc
aaa
lcall
pop
mov
mov
aad
xor
mov
add
lahf
cmp
cmp
bound
inc
lock
sbb
outsb
adc
xchg
std
test
icebp
call
mov
rcr
sub
repnz
mov
sarb
mov
fsubrl
cmpsb
ja
outsl
sbb
arpl
mov
lods
mov
lock
mov
xor
leave
cmc
fimull
mov
sbb
mov
inc
dec
push
outsl
fbstp
test
or
cmp
iret
jbe
fwait
test
jo
pop
mov
and
push
mov
cmc
cmc
pushf
ud0
outsl
movsl
lret
cmc
and
cmp
in
xor
push
imul
jle
cmpsl
mov
pop
xor
lock
outsl
ss
inc
mov
pop
pop
mov
xor
mov
imul
lret
mov
ret
sbb
add
arpl
inc
mov
ret
out
pop
popf
or
lock
fidivrl
cld
aam
cs
sub
lcall
dec
frstor
ret
mov
mov
cmp
push
call
or
and
xchg
mov
mov
dec
shll
and
and
adcb
cmpsl
sbb
or
aam
sbb
fsubs
and
stos
push
movsl
mov
popf
jne
fnsave
inc
mov
lods
imul
mov
imul
xor
sbb
cmc
cmp
and
push
pop
sbb
or
data16
or
mov
dec
dec
pop
cwtl
sub
mull
stos
stos
cmp
addr16
outsl
mov
xor
aam
scas
idivl
mov
sub
arpl
xchg
loopne
outsl
jno
test
cmp
aaa
pop
mov
dec
out
lahf
lcall
in
jge
lds
mov
roll
fdivrl
into
ds
fstps
cmp
xchg
sbb
sbb
fwait
jbe
pop
stc
mov
sahf
jecxz
xchg
loopne
jecxz
cs
xor
incl
jnp
mov
mov
mov
mov
shlb
jmp
pop
add
mov
pop
sbb
mov
sbb
fdivrl
and
repnz
cmp
bound
or
ja
ss
fisubrl
movsl
ret
mov
int
mov
push
test
mov
int
inc
repz
adc
stos
int
mov
add
mov
scas
fidivrs
or
jnp
sarl
test
in
push
and
push
jmp
icebp
push
mov
in
sahf
test
aas
cwtl
cmp
xor
inc
insb
mov
push
dec
push
mov
sub
cmp
dec
pop
cmp
mov
dec
dec
outsb
and
cs
stc
pop
data16
mov
mov
loop
andb
ds
jl
dec
mov
lock
mov
or
mov
bound
and
lods
lret
outsl
data16
test
cmp
leave
cmp
jle
xchg
mov
inc
push
push
mov
cmp
mov
adcl
xchg
cltd
arpl
mov
leave
jl
mov
repz
in
icebp
mov
cmpsb
adc
add
sbb
jge
call
and
adc
sub
pushf
popf
outsb
mov
jl
sbb
lahf
outsl
inc
xor
xchg
mov
lcall
iret
mov
pop
cmp
jo
mov
inc
sbb
or
test
stc
pop
fs
test
pop
mov
xlat
jmp
push
hlt
mov
mov
or
cmpb
adc
inc
in
cmp
fs
and
lcall
dec
nop
push
aam
push
adc
lret
popf
mov
push
test
repnz
mov
into
dec
sbb
mov
sbb
pushf
outsl
pushf
stc
add
daa
push
popf
loopne
and
xchg
cwtl
jl
adc
jmp
mov
stos
je
mov
sbb
mov
adc
loop
mov
clc
movsl
rorl
push
popa
adc
aaa
fs
dec
sbb
int
imul
pop
jns
es
pop
mov
or
jbe
andl
dec
and
sub
and
push
push
std
xor
add
test
insb
jno
aaa
jecxz
cmp
sbb
xchg
cmpsb
mov
scas
or
add
das
push
arpl
scas
lret
adc
jp
adcl
cmp
ja
fidivrl
push
jb
repz
dec
adc
xchg
xchg
inc
fadd
sbb
lcall
pop
adc
cs
xor
sbb
out
inc
or
cmp
iret
rorb
push
jb
shr
inc
xor
sbb
repz
outsl
clc
or
xchg
push
movsb
aad
out
xchg
jle
dec
ds
mov
je
push
negl
xor
in
xchg
mov
push
jne
imul
sub
rcrb
sub
movsl
lcall
je
xchg
xor
jecxz
sbb
mov
stos
pop
pop
cmp
lods
or
dec
sub
and
and
call
mov
gs
jns
sbb
add
pop
lcall
lds
adc
lods
mov
testl
insb
and
dec
xchg
mov
or
rcll
pushf
fstpt
jae
inc
jle
inc
pop
daa
sub
addb
cltd
jbe
cmp
inc
mov
xchg
dec
cmp
jbe
sbb
or
jp
sbb
mov
mov
mov
inc
movsl
movsb
sbb
popf
xor
cmp
in
gs
call
subl
mov
jo
mov
js,pn
stc
pop
xor
mov
rcl
cmp
test
xor
repnz
dec
push
jnp
aam
add
popa
leave
mov
or
movsw
mov
and
mov
sub
notb
out
repnz
lods
jmp
pushf
cmpsb
popf
addr16
in
and
out
js
lods
rcrl
xchg
ljmp
adc
test
push
rorb
lahf
outsl
pop
stos
xor
pusha
sbb
jle
xchg
ljmp
mov
mov
inc
mov
mov
mov
pushf
sub
int3
fsubl
mov
mov
mov
lds
test
out
sti
and
scas
pop
or
lock
and
dec
out
leave
sub
ret
aas
jae
adc
lahf
test
in
xchg
das
adc
pop
fidivl
mov
lock
xchg
and
dec
adcl
pop
push
jge
xchg
iret
add
cltd
xor
push
or
lock
cli
jbe
dec
call
mov
aaa
dec
mov
bound
out
xor
mov
jbe
xlat
jo
jne
fwait
aam
ja
insb
fnstenv
mov
jae
lahf
pop
in
out
dec
or
mov
jmp
sbb
adc
fdivl
addr16
nop
jg
rcll
lcall
push
push
mov
cld
jge
add
mov
xchg
and
sbb
xchg
cwtl
out
jo
fbld
mov
jo
pop
jecxz
jb
mov
int
imul
xchg
adc
les
jno
aad
mov
fsubrl
xor
mov
stos
xor
in
imul
xor
mov
fisubl
or
jne
aaa
test
sub
fiaddl
cmp
aas
cmp
sbb
dec
cmp
jmp
incl
mov
mov
add
cmp
cmp
mov
shrl
mov
adc
mov
jmp
js
repnz
push
add
xchg
filds
mov
pop
aas
fwait
pop
inc
or
ror
mov
jo
mov
out
loopne
xchg
das
subb
insl
mov
cmp
jae
xchg
sbb
test
sub
sarl
jne
js
dec
outsl
sub
xor
pop
lret
pop
push
aas
outsl
or
movsb
xor
dec
mov
and
stos
test
lret
mov
or
faddl
inc
jno
inc
ret
xchg
call
pop
popf
addr16
popa
mov
xchg
mov
xchg
add
inc
mov
push
dec
and
xor
ret
dec
sub
es
xor
sub
jge
js
jg
dec
jae
xchg
xlat
in
das
push
fcoms
push
sub
test
xchg
and
jmp
xchg
sti
dec
jmp
insb
add
out
sbb
jmp
mov
out
mov
mov
and
ss
dec
mov
sub
push
cmpsl
push
out
pop
lahf
lahf
mov
insl
mov
test
fwait
jp
hlt
lea
adc
fwait
cmp
inc
sub
sbb
push
imul
sub
xor
push
clc
mov
fisubrl
cltd
les
mov
pop
mov
mov
dec
inc
mov
pop
not
ret
insb
arpl
shlb
jmp
cmpsb
andb
fs
ret
mov
adc
lods
push
xchg
leave
rclb
cmpsl
jo
xchg
cmp
je
mov
movb
out
push
test
mov
pop
fists
jns
mov
push
pop
divb
push
mov
scas
ljmp
push
sub
lcall
jecxz
jmp
out
imul
test
push
adc
popf
dec
mov
mov
adc
in
and
mov
adc
sub
test
rcll
ret
or
cmpsl
add
bnd
push
out
push
jl
xor
clc
inc
lret
arpl
inc
je
out
insl
jp
push
data16
add
pcmpeqb
and
xchg
sub
push
xor
or
and
movsl
push
std
mov
loope
loope
mov
push
jecxz
add
dec
push
jo
push
cli
enter
push
loop
icebp
add
xchg
dec
cmp
mov
fnsave
xlat
sub
xor
cs
mov
imul
xlat
dec
js
pop
pop
mov
xlat
and
or
roll
jnp
lahf
push
setne
cld
sarb
scas
or
or
js
lret
bound
or
or
fisubrl
inc
xchg
add
adc
faddp
call
pusha
mov
mov
cvttps2pi
cmp
jge
jge
stc
and
mov
dec
popf
inc
lret
sub
push
ror
push
mov
subl
testb
cmp
inc
dec
mov
mov
mov
push
xchg
hlt
ss
sbb
scas
cmpsl
loope
and
push
adc
je
cmpsb
jg
inc
xchg
sub
icebp
sub
repnz
push
in
inc
xor
aas
cltd
jo
clc
bound
add
popa
in
es
inc
dec
pop
lods
rcrl
push
enter
push
loopne
mov
add
mov
mov
dec
scas
cmp
fsqrt
gs
adc
cwtl
cld
push
mov
or
jnp
jmp
ret
adc
cmp
lret
fnstsw
cs
cmc
mov
mov
ljmp
jno
inc
int
in
jnp
xor
add
cmp
push
jg
jecxz
rcrb
lret
lahf
add
or
repz
test
xchg
in
lods
mov
jmp
pop
push
inc
ds
rorl
mov
dec
scas
cmp
cmc
cltd
or
imul
inc
mov
fcomps
shlb
mov
popf
jl
leave
std
jl
xor
lock
jo
sbb
xor
xchg
mov
out
jle
stc
pop
mov
push
lcall
ss
push
xlat
xchg
sbb
adc
les
divb
jo
jae
mov
xorl
aas
pop
pushf
loope
out
lahf
sbb
sbb
stos
paddq
pop
fdivrl
and
shl
es
gs
or
dec
mov
ret
test
push
adc
mov
stc
pop
mov
dec
sub
sub
sub
or
std
into
adc
or
out
jnp
fst
add
jo
jnp
push
cwtl
loop
ret
cmp
movsb
push
mov
movl
cmp
jnp
jae
mov
in
and
adc
cmp
jmp
push
mov
int3
pop
in
or
inc
inc
je
or
je
cmc
jo
fstp
outsb
outsb
arpl
iret
xor
adc
clc
push
pop
pop
inc
mov
or
icebp
cmp
inc
push
ss
cmp
pop
adc
push
loopne
pop
mov
nop
insl
mov
and
add
roll
ds
sub
rclb
sub
cmp
sbb
les
notb
jnp
out
int
xchg
push
rclb
call
adc
mov
jge
jmp
lret
in
mov
mov
bound
fisttpl
aad
push
imul
sbb
test
hlt
gs
jecxz
dec
jle
inc
sbb
and
mov
push
dec
imul
push
mov
fisubrs
iret
dec
js
jnp
push
lock
in
cwtl
xchg
jmp
popf
and
fucomip
clc
jecxz
sbb
bound
in
mov
and
cmp
out
lahf
sbb
rcrb
test
and
mov
add
aas
arpl
xor
mov
adc
sub
or
adc
and
pop
icebp
mov
fsub
aad
cmc
pusha
lods
push
insb
out
adc
mov
dec
xchg
sarl
jno
xchg
cmp
and
lock
imul
add
stos
xchg
int3
test
dec
test
jp
imul
dec
push
adc
inc
ds
sub
stos
call
inc
ljmp
shlb
gs
adc
or
nop
mov
jns
sub
xchg
sbb
popf
mov
jns
pop
lods
cmp
push
pop
loopne
pop
iret
cmp
lods
cmp
mov
out
push
mov
pop
das
fstps
adcb
pop
mov
jle
ret
loopne
pop
pop
sub
clc
pop
mov
lret
shr
xor
adc
cli
test
jbe
lock
lock
scas
push
pop
das
inc
mov
mov
dec
bound
xor
sbb
mov
fldcw
movsb
xor
stc
jae
or
sub
xchg
pop
out
xor
and
or
movsl
mov
jb
je
insl
mov
imul
ret
js
out
sub
push
sub
push
cmpsl
dec
mov
outsl
sbb
cmc
fistpll
pusha
out
mov
clc
jo
adc
addr16
adc
and
xchg
add
cmp
lods
inc
xor
cmp
lea
sub
in
lods
and
fsts
jbe
xor
push
ja
push
mov
mov
shrl
push
sub
xchg
bound
push
pop
sbb
clc
push
mov
shlb
lahf
repz
das
cmp
test
mov
jp
pop
dec
test
jae
inc
pop
xor
enter
ret
gs
sbb
fxtract
mov
jo
test
shl
scas
or
mov
mov
fdivrs
outsl
outsl
mov
add
mov
xor
out
or
scas
inc
aas
arpl
push
add
adc
out
inc
les
enter
stos
repnz
aas
cmpsl
push
mov
xchg
stos
jg
test
mov
iret
lock
inc
mov
jl
mov
dec
inc
shlb
xor
sub
push
xchg
adc
pop
aaa
adc
mov
xchg
out
push
cmp
ret
fnsave
xor
mov
push
insb
test
pop
int3
adc
push
pop
stos
pop
out
mov
arpl
cli
xor
lods
mov
rcrl
cmp
rolb
inc
fidivrs
adc
shlb
sti
mov
jp
dec
fs
dec
leave
cld
jb
das
sti
sub
jecxz
mov
add
movsb
push
add
repnz
lcall
cltd
insl
jae
gs
aas
pop
push
arpl
imulb
add
repz
and
adc
and
std
mov
enter
aam
inc
dec
jge
imul
sbb
repnz
mov
and
andl
cmp
cmpsl
jnp
push
pop
outsl
mov
xor
pop
adc
pushl
loope
xor
mov
inc
push
mov
pop
stc
cmpsb
sahf
push
insl
ficomps
fwait
cld
sahf
push
xchg
dec
push
or
aas
pop
pop
aas
into
pop
jp
dec
cmp
mov
xor
mov
inc
and
inc
xchg
faddl
cmp
sbb
in
jo
es
jne
dec
lods
call
pop
lret
add
sbb
andl
int
push
or
lret
dec
lods
mov
pop
mov
xchg
push
call
in
fcoml
and
push
ret
in
imul
stc
imul
pop
ja
mov
lcall
sti
lret
jnp
cmp
inc
push
cmpsb
mov
jns
fnstsw
and
mov
scas
fistpl
aaa
gs
or
into
xchg
pop
jge
xchg
sbb
mov
mov
cmp
jle
fnstenv
mov
push
sbb
cmpsb
shl
push
or
daa
adcb
cltd
or
mov
sub
test
mov
jge
mov
fmuls
pop
inc
loop
or
sahf
xlat
dec
cltd
jp
call
leave
add
test
add
into
test
dec
push
adc
inc
cltd
aam
ljmp
imul
mov
test
cmpsb
inc
dec
mov
push
jg,pn
in
enter
repz
aam
dec
outsl
lret
icebp
outsb
add
add
mov
lea
lahf
popa
mov
test
mov
and
inc
sub
push
cmpl
shlb
xchg
xor
shll
jge
rolb
lret
or
mov
insb
pop
rorb
fcoms
aaa
dec
ret
leave
mov
call
js
out
pop
xchg
popl
pop
add
push
pushf
cmp
and
out
stc
push
pushf
gs
add
xchg
xor
jne
shlb
sbb
cmc
cli
out
or
testb
mov
out
mov
mov
xchg
fistl
or
fisubs
test
mov
adc
iret
imull
popa
or
loop
mov
xchg
sub
jne
sub
push
mov
data16
mov
add
dec
pop
jo
push
daa
push
call
outsl
lret
mov
xlat
mov
push
cmp
stc
cmp
jbe
mov
inc
lods
rolb
sbb
jmp
fucomp
and
xchg
mov
push
adc
cmovs
cmpsb
mov
movb
pop
xchg
aad
xor
subl
dec
push
push
pop
and
je
int3
xor
jne
xor
in
jns
add
daa
lahf
xchg
or
mov
mov
jl
icebp
xchg
mov
lret
add
xchg
fbld
add
cmp
pusha
xchg
mov
xchg
lea
xor
xor
jb
cmpsl
arpl
ret
or
test
sub
mov
pop
cli
mov
xchg
aaa
inc
aaa
cmpsl
hlt
push
mov
loopne
adc
orb
xor
xor
pop
jmp
mov
push
mov
std
xor
in
aas
xchg
loope
in
ficoml
test
cmp
jnp
cmp
test
ds
imul
dec
inc
pusha
rcr
cmp
add
out
rcrl
jle
pop
mov
push
repnz
push
adcl
jl
adc
cmpsb
mov
pop
xor
decb
push
lock
cli
scas
stos
sbb
push
dec
xchg
arpl
outsl
ja
and
call
cmp
pop
inc
dec
add
and
lods
lods
mov
mov
pushf
ja
imul
jmp
fcmovu
sbb
fwait
lea
shrd
inc
clc
pop
lcall
inc
mov
out
sbb
icebp
mov
lods
cli
push
dec
jle
loop
or
xchg
jb
outsb
les
push
ficoml
sub
lods
addr16
pop
inc
loope
inc
cld
add
sub
shll
xchg
push
fildl
out
ds
push
adc
mov
mov
stos
lret
xchg
bound
sahf
sub
xor
pop
roll
add
adc
vorps
testl
rcr
in
push
pushf
scas
stos
push
mov
shrl
sub
or
jmp
pop
push
cmp
sub
jge
loop
pop
aam
xor
loope
dec
int
mov
mov
adc
rorl
xor
orl
int
add
ds
cmp
in
ja
mov
add
sbb
repnz
dec
movsb
push
inc
mov
adcl
dec
sub
int
gs
push
sbb
jmp
in
cmp
ljmp
and
outsl
cmp
loope
cld
jno
cmp
incl
sub
sahf
and
movb
lea
imul
mov
mov
mov
mov
lock
adc
outsb
in
and
mov
sbbb
rcl
data16
xor
dec
mov
pop
or
adc
sar
mov
pusha
ss
enter
or
xor
push
sbbl
popf
mov
gs
imull
xor
lret
scas
aam
aad
in
lods
add
jecxz
cwtl
pop
ja
jno
dec
mov
pop
xchg
insb
push
sub
dec
ljmp
aad
cmp
shrl
rcll
out
cmpsl
cs
xchg
cmp
dec
aad
xchg
rcrl
fsubs
loop
sub
gs
and
dec
lods
in
push
pop
inc
cltd
push
les
ja
cmp
push
loop
jno
jecxz
and
pusha
add
xchg
fwait
stc
mov
popf
inc
jae
jne
aam
and
pop
add
pxor
cmp
outsl
jp
ss
stos
mov
push
and
in
jbe
adc
in
repnz
inc
cmpsb
bound
test
jp
push
negl
sbb
push
and
rcl
addr16
in
sub
or
pusha
sbb
xchg
mov
lock
fnstsw
mov
mov
stos
stos
jae
mov
add
pop
xchg
int3
mov
xchg
push
add
dec
repnz
sti
pop
dec
sub
ds
adc
add
lcall
jp
or
int3
sahf
sbbl
jl
mov
cmc
push
es
cmp
xchg
and
mov
repz
inc
add
mov
arpl
mov
addl
mov
data16
and
or
mov
ret
push
mov
arpl
xchg
jp
aad
iret
out
ss
imul
adc
mov
pop
bound
pop
mov
dec
call
add
jmp
repnz
and
push
mov
inc
xor
inc
divl
fldl
in
arpl
in
jae
pop
scas
into
sub
sbb
in
stos
mov
out
mov
sbb
sbb
push
mov
hlt
adc
mov
push
xchg
inc
cwtl
mov
push
jno
mov
pop
int
scas
sbb
nop
fwait
mov
add
in
sub
xor
add
jno
popf
aad
jae
pop
movb
lods
in
jg
cmp
adc
push
jbe
jge
push
sub
mov
test
mov
imul
nop
in
cmp
outsb
adc
mov
lret
test
hlt
jmp
fldenv
dec
mov
fadd
pop
jg
in
pop
jne
pop
xor
fst
pop
jmp
sbb
push
add
rolb
cmp
jno
stos
push
lods
mov
or
call
and
adc
adc
sub
add
dec
add
inc
pop
dec
shrb
push
jnp
jmp
push
subb
fnstsw
mov
mov
jno
addr16
in
aas
js
fsts
lret
insb
or
into
mov
insl
and
pop
pop
jb
sbb
push
fdiv
adc
int
push
ficoml
mov
stos
ret
jecxz,pt
pusha
fdivs
jnp
push
jle
mov
scas
inc
inc
jno
cmpsl
sub
or
jae
std
fstps
cwtl
es
insb
xchg
mov
dec
icebp
sbb
in
cld
cmpsb
cmp
sarl
out
gs
mov
lcall
cltd
sub
mov
aas
gs
movsl
outsl
push
orb
outsb
gs
add
pop
testl
test
dec
pop
push
mov
add
sbb
sub
mov
stos
add
test
dec
imul
xor
and
xchg
mov
cmp
push
adc
xchg
outsb
shr
mov
push
js
lods
aam
loope
sub
stos
daa
push
nop
js
out
mov
and
dec
or
lock
lret
dec
inc
jb
insl
outsb
mov
mov
pop
test
iret
js
sbb
dec
into
and
dec
gs
mov
cs
aaa
pop
fsubrl
cmp
xchg
testl
or
js
jb
loop
xchg
sub
adc
call
sbb
loop
mov
pop
cmp
sahf
in
lret
sbb
jb
jo,pt
mov
mov
cmp
stos
add
faddl
sbb
and
mov
cmp
lret
or
inc
repz
mov
inc
loope
addr16
cli
dec
fsubrs
xchg
xchg
sar
dec
mulps
push
adc
push
insb
movsb
xchg
xor
shl
push
cltd
fcomps
mov
cmp
jns
divl
popf
out
test
in
lahf
fistl
xchg
xor
lods
rcrl
movsb
fwait
adc
das
xor
int
sub
pop
shrb
dec
mov
fstps
xchg
push
test
jne
js
inc
loopne
jbe
and
dec
loope
sbb
xor
jno
shrl
adc
dec
scas
cld
push
cmp
push
or
call
jne
or
adc
push
pop
add
in
aas
sub
repz
dec
popl
fdivrp
into
arpl
mov
and
xchg
sahf
shlb
sbb
xor
je
xchg
orl
popl
jp
addr16
mov
push
push
or
mov
xor
mov
pop
ds
das
pusha
in
push
xor
dec
lods
ljmp
shlb
mov
inc
mov
dec
out
add
jne
cmp
ds
pop
xor
inc
inc
ss
sti
repz
sub
or
movsl
or
lcall
sub
dec
or
out
fwait
scas
dec
ss
xchg
ss
cmpl
jno
pop
push
or
xchg
sub
std
push
mov
lret
repz
sarl
popf
insl
add
std
popf
inc
mov
pop
icebp
fildl
push
adc
jmp
loope
sbb
lea
add
jno
pop
mov
incl
mov
loopne
push
xor
mov
movsl
jecxz
adc
stos
movsb
add
ss
data16
aad
aas
and
mov
aad
and
xchg
test
fdivr
fwait
or
incl
mov
hlt
repz
xchg
adc
mov
mov
push
and
cmp
call
pop
repz
pusha
in
xchg
and
cs
sahf
jo
xor
xchg
xor
mov
cs
mov
rorl
hlt
mov
jle
pop
jecxz
jbe
and
pop
xor
mov
cmpsl
dec
xorb
pop
les
insb
cmpsb
sub
adc
push
lds
xor
or
push
mov
mov
dec
rcl
pop
xor
xor
adc
arpl
or
mov
mov
arpl
jl
push
sub
inc
sub
xor
ficoms
stos
imul
in
arpl
popf
testb
mov
dec
add
pop
pop
sub
dec
sub
cld
mov
sub
sbb
stos
or
mov
mov
mov
outsb
loopne
mov
push
pop
xor
idivl
adc
test
mov
push
sbb
daa
scas
movsb
pop
adc
sub
test
inc
mov
aam
mov
jae
enter
cli
dec
lds
in
xchg
ds
or
lock
in
xchg
pop
rcrb
jmp
inc
cltd
dec
push
cmp
hlt
fsubrs
shrb
push
mov
mov
daa
and
jno
cmp
test
mov
out
pop
mov
inc
xor
mov
fistl
setb
das
xchg
mov
repnz
das
push
lcall
and
adc
scas
subb
or
mov
scas
nop
add
inc
divb
rorl
ja
sub
sbb
cmp
xchg
push
jnp
lea
adc
xor
xchg
xchg
mov
lret
push
cmc
or
xor
mov
repnz
pop
sbb
cmp
ret
test
neg
xor
push
and
jno
push
push
add
jge
stc
sub
fwait
jg
leave
cltd
shrb
add
pop
jle
test
mov
mov
jge
lret
ljmp
pop
pop
add
jno
mov
pop
cmpsl
sub
and
pusha
aaa
ret
dec
add
mov
sbb
lods
push
jp
in
adc
sub
dec
pop
stos
int3
mov
xor
pop
sub
sbb
into
mov
je
add
sub
mov
sub
xor
das
inc
sbbl
sbb
test
js
sub
int
outsb
mov
arpl
xorl
mov
mov
stos
jle
add
addr16
test
dec
and
call
dec
into
cmp
mov
pop
xchg
scas
lock
xor
xchg
das
mov
scas
pusha
xor
and
leave
fwait
cli
psubsb
pop
add
add
lock
pushf
jo
push
fwait
popf
mov
jne
hlt
in
cmp
mov
cmp
maskmovq
notl
or
and
out
mov
dec
loopne
adc
sarb
cld
xor
enter
fistps
dec
inc
test
and
shrb
lea
pop
inc
jae
repnz
inc
aaa
mov
test
jmp
mov
jp
and
std
pop
cmp
adc
shll
pop
outsb
or
lods
nop
xchg
stc
mov
jg
test
popa
xchg
pop
icebp
or
movsb
adc
lret
scas
scas
mov
xchg
mov
cwtl
int
or
lret
dec
testb
and
sub
mov
dec
in
dec
pop
faddl
enter
in
xchg
es
iret
out
sbb
jne
movsl
jmp
jecxz
and
inc
cmp
pop
incl
push
jns
jae
nop
test
add
adc
mov
mov
subl
loopne
std
cmp
sbb
pop
shrb
test
sub
loope
loop
adc
lahf
scas
repz
and
or
jge
stos
jle
ja
test
mov
jg
sbb
xlat
aam
pop
rcr
hlt
pop
aad
sbb
pop
xor
mov
adc
sub
les
aad
lret
inc
jecxz
sbb
loop
pusha
jmp
mov
lret
addr16
jge
call
inc
mov
ljmp
jae
bound
xchg
xchg
iret
imul
xchg
jmp
sub
mov
push
mov
popa
insl
outsb
and
cmp
pop
or
jns
mov
inc
loope
xchg
adc
fdivrp
icebp
insb
mov
pop
jmp
fisttpl
ret
jl
daa
mov
push
test
test
pop
jns
mov
dec
shlb
mov
xchg
outsl
fstp
insb
loope
xchg
into
rol
inc
inc
or
dec
cmp
sbb
sbbb
mov
dec
pop
cmp
sub
push
xchg
cmp
xchg
ret
popa
movl
adc
in
add
jns
xchg
rcrl
pop
outsl
xor
and
imul
inc
pop
mov
mov
mov
adc
out
stc
xchg
fcmovnbe
sahf
push
pop
sub
ja
dec
ret
mov
shr
je
test
shlb
sti
dec
rclb
iret
scas
je
movb
lcall
mov
jmp
adc
xor
lods
arpl
shrb
xor
and
inc
push
cli
in
loope
add
cmp
cmc
rcll
imul
and
cmpsb
cmc
xchg
add
xchg
inc
stc
enter
insb
test
adc
test
call
movsb
imul
leave
add
cmp
pusha
jge
nop
push
gs
sbb
sti
repz
xor
leave
pop
mov
lcall
arpl
out
mov
imul
shll
push
sbb
mov
jg
das
cltd
pop
movb
inc
push
aas
in
adc
ss
push
adc
sbb
hlt
ret
dec
cmp
mov
fldt
jp
cltd
lea
push
jge
insb
pushf
fwait
jns
hlt
jmp
push
mov
sbb
and
sti
mov
push
sub
jp
mov
lcall
fcoms
inc
rcrl
test
outsb
mov
dec
mov
push
add
jecxz
xchg
jmp
inc
push
rcrl
inc
jl
pop
and
mov
sarl
cmp
sub
in
sarb
in
int
frstor
push
sub
jle
stos
xchg
adc
push
jnp
les
mov
sbb
int
inc
loop
or
cmpsl
repz
mov
mov
cmpsl
and
call
xor
rep
out
ja
jno
aad
aas
aam
pop
push
fwait
sub
mov
cltd
xchg
sti
pushf
pop
insb
push
sti
das
or
in
mov
cs
inc
mov
sti
shll
mov
or
cmpsb
stos
dec
call
cmp
repz
xor
jo
cmp
dec
imul
adc
nop
es
adc
mov
cmp
add
jnp
adc
dec
adc
mov
imul
jl
fsubrl
mov
insb
in
pop
cmp
sbb
mov
mov
sub
in
mov
mov
xchg
adc
push
lret
fwait
xchg
lcall
lahf
cmp
and
push
leave
aas
mov
sbb
cmp
movsb
sbb
or
out
lods
cli
inc
lea
jmp
fmuls
sub
jns
xchg
or
push
sbb
jbe
mov
out
add
test
mov
sub
jg
push
mov
ljmp
add
xchg
pop
cmp
and
pop
push
sbb
rcr
pop
mov
mov
pminsw
dec
in
sti
adc
cltd
cmp
pop
pop
sbb
rcll
inc
sti
das
xor
dec
add
adc
popa
push
or
scas
jnp
cld
dec
testb
push
cs
movsl
les
jg
jl
in
ds
mov
sahf
insl
pop
mov
fdivl
sub
sub
inc
inc
test
jge
adc
or
mov
jbe
outsl
popf
xor
and
pusha
jge
lahf
decb
mov
xor
lock
sbb
mov
inc
adc
mov
push
xlat
mov
fwait
orb
repnz
lret
ljmp
in
pop
mov
ret
and
mulb
mov
add
jae
movsb
jne
cld
mov
in
shrl
jp
repnz
or
push
ljmp
loope
jno
shlb
out
jmp
pop
dec
sahf
add
add
inc
mov
mov
jae
jae
push
pop
in
sahf
fmull
pop
dec
int3
lcall
pop
cmpsl
sbb
daa
adc
outsl
icebp
dec
xchg
dec
or
cmpsl
push
js
xor
cs
cmc
mov
mov
push
mov
xor
fdivr
jnp
dec
add
sub
dec
shrl
push
cmp
imul
or
or
xor
je
sub
pop
std
aad
dec
cmc
popf
pop
loope
clc
jmp
lcall
loope
jmp
push
lods
inc
js
mov
cmpsl
mov
scas
pop
rcrb
mov
and
bound
jl
imulb
fisubrs
push
dec
insl
xorb
repz
jg
cs
sbb
mov
mov
loop
addr16
movsb
dec
adc
inc
lret
mov
inc
in
inc
in
xorb
cmpsl
add
xor
outsl
cmpsl
aaa
and
inc
les
insb
test
loop
test
movsl
mov
lahf
dec
push
xchg
inc
ja
mov
pushf
dec
mov
push
jl
pop
mov
das
dec
inc
scas
pop
test
push
pop
lods
adc
stc
test
and
insl
jg
jbe
shll
fwait
mov
lods
out
adc
stc
into
mov
cmpb
mov
jecxz
xchg
in
popa
pop
mov
mov
sub
mov
sub
out
and
cmovbe
daa
xchg
cltd
or
push
add
in
add
inc
cli
xor
mov
xor
mov
lock
ja
data16
cld
dec
mov
dec
or
call
sahf
xor
imul
mov
sub
cmc
dec
adc
mov
and
mov
addl
aas
xor
adc
mov
stos
cmc
mov
lret
jge
mov
sbb
shrb
lea
or
clc
cld
popa
cs
or
loopne
lods
add
sub
fsubl
enter
mov
adc
cmp
stos
cltd
inc
jmp
xchg
popf
pop
lcall
push
andl
lahf
inc
ss
pop
js
add
xchg
cld
xor
cmp
mov
xor
or
jb
imul
jae
adc
int
or
sbb
push
es
iret
das
xor
sub
leave
in
insl
jns
and
enter
mov
pop
movsb
xchg
mov
rcr
cwtl
ja
push
sti
scas
loopne
ficomps
nop
imul
mov
push
sti
pop
in
and
iret
fsub
mov
in
ds
fdivs
fwait
jnp
xchg
mov
push
cli
test
in
fs
and
mov
ja
cmp
jp
in
movsl
lahf
dec
or
mov
arpl
fsts
mov
lret
dec
fst
fnstcw
aad
mov
in
and
fadd
and
int3
mov
pop
mov
cmp
sbb
jo
sbb
xor
xchg
jecxz
int3
inc
int
clc
lods
mov
and
mov
mov
sbb
dec
hlt
fsubrl
fnsave
push
or
and
jns
add
imul
xor
dec
mov
mov
jne
push
pop
cs
mov
cmp
jns
pop
lcallw
mov
push
xor
cwtl
das
jmp
xor
sbbl
notl
gs
mull
repnz
push
dec
lcall
int3
pop
or
sbb
iret
loope
out
das
sahf
fadds
fildl
lret
add
jecxz
sbb
push
sbb
mov
scas
mov
bswap
popa
cmp
mov
sti
or
or
sub
inc
sub
mov
daa
in
and
pop
fmull
lea
rol
das
or
xchg
icebp
push
lds
jge
jge
test
sbb
jb
iret
mov
mov
xchg
repnz
jb
sbb
incb
jb,pt
dec
neg
lods
or
jns
adc
mov
push
xlat
xchg
sub
add
outsl
orb
mov
fs
jns
mov
and
or
andb
imul
mov
dec
mov
add
imul
iret
xor
xchg
inc
cmp
cltd
xor
ret
cwtl
push
mov
mov
cwtl
out
sub
push
test
daa
sub
pop
andl
jle
lods
adc
andl
iret
push
pusha
jo
push
imul
es
or
push
bound
clc
adc
fcmovnbe
fs
shll
int
idivl
es
loope
rcll
rcr
lret
stos
sub
xchg
aaa
dec
jae
xor
std
movsb
xchg
pop
cmc
dec
or
xchg
and
push
mov
xchg
pop
repz
and
scas
bound
ficoml
test
scas
cmc
fwait
int
cmc
test
in
loop
pop
mov
pop
stc
cli
push
sbb
subb
repz
int
add
push
lret
jmp
inc
mov
mov
push
sahf
and
movsb
mov
xor
mov
aas
ret
addb
sbb
dec
std
jecxz,pt
outsl
push
push
jg
sbb
jno
in
jle
aas
push
scas
stos
jl
lret
inc
test
scas
cs
inc
jns
pop
dec
jno
das
stos
inc
out
jg
lret
pop
adc
mov
mov
inc
mov
scas
jb
mov
js
push
jb
xchg
iret
mov
add
cwtl
insb
push
test
out
addr16
xchg
cmpsl
bswap
loopne
les
fnstsw
movsb
leave
ss
iret
jp
stc
testb
pop
cmc
lret
or
rol
out
out
inc
push
clc
ficomps
roll
or
loopne
jns
out
cmc
and
mov
mov
mov
dec
or
adcl
aad
sahf
shr
push
call
xchg
xchg
movsb
sub
or
sub
outsb
mov
push
dec
jae
fsubrs
das
ficoml
insl
aam
inc
jg
hlt
mov
cmp
dec
or
and
and
mov
push
data16
dec
xor
xchg
insb
dec
mov
arpl
daa
mov
aaa
pusha
push
mov
ret
in
mov
loope
out
cmc
and
jnp
pop
arpl
mov
mov
mov
cmc
mov
xchg
or
scas
or
add
push
adc
and
scas
int
mov
lahf
cmp
push
ss
cmp
sbb
dec
dec
inc
stc
push
mov
add
out
into
jle
dec
push
jns
mov
pop
dec
cltd
call
popf
sub
mov
ljmp
or
int3
pop
leave
dec
jp
xchg
test
or
int3
je
gs
nop
jmp
adc
mov
jo
pop
inc
imul
cli
xchg
je
mov
pop
cwtl
adc
jp
clc
cmpsb
jbe
add
xadd
decb
inc
cwtl
xchg
lcall
aad
xchg
ficoms
rolb
pop
hlt
out
fs
das
jmp
add
fs
sbb
flds
aas
dec
xchg
hlt
idiv
jae
pop
sbb
aas
lcall
pop
xchg
mov
stos
das
mov
stc
fdivl
adc
mov
push
and
inc
and
sub
jp
adc
mov
mov
lock
lea
xchg
push
loopne
loope
aaa
sub
int
mov
and
push
sti
xor
js
imul
outsb
popf
pusha
js
lret
out
out
cmp
popf
mov
and
hlt
add
mov
jbe
jle
std
xchg
dec
je
xchg
or
inc
sub
aaa
mov
lods
pusha
pop
in
add
push
add
lret
jg
adcl
dec
cmp
js
imul
fmull
test
shr
js
scas
mov
add
out
xchg
xchg
call
in
jbe
sub
repz
mov
adc
mov
jnp
lods
or
scas
mov
pop
lods
xchg
adc
cmp
cmp
aad
add
dec
lods
pop
lea
xor
in
xorl
pop
sbb
adc
push
pop
push
xor
dec
add
daa
clc
jb
sub
or
push
mov
cmp
ljmp
xchg
push
mov
fldcw
divl
mulb
or
push
dec
dec
mov
adc
or
test
sbb
jg
hlt
ljmp
mov
jg
arpl
aas
mov
lods
in
inc
bswap
adc
xchg
sub
push
pop
in
or
pop
rorl
movsb
adc
adcl
push
scas
int3
stc
mov
gs
lret
ret
movsl
pop
insb
fbstp
add
inc
and
lods
ds
cmpsb
jl
add
mov
dec
ljmp
jns
nop
std
sub
adc
jecxz
mov
dec
fwait
inc
mov
dec
mov
inc
adc
lea
cld
lret
jmp
jnp
push
xor
xchg
lret
adcb
ja
xor
sub
and
push
lods
sbb
pop
insl
lds
jne
xchg
rolb
sahf
iret
sub
dec
ret
and
push
stos
out
cmp
lret
stc
jge,pn
outsb
imul
sbb
xor
pop
int3
test
mov
and
test
pop
subb
pop
sbb
add
lea
cld
leave
mov
push
cmpsb
add
or
ss
fsubs
xchg
jl
push
cltd
das
imul
mov
fdivl
push
jle
push
pushf
std
push
mov
cmp
jp
shrl
stos
out
cmpsb
fs
xlat
jge
repz
jo
sahf
xor
dec
cltd
rclb
adc
or
dec
repz
arpl
ret
lcallw
sbb
ret
adc
jl
cmp
mov
jg
xchg
jmp
inc
jge
rolb
xor
pop
ja
xchg
ror
xchg
xchg
inc
es
arpl
idivl
popf
push
xchg
das
ficompl
test
xchg
sbb
dec
imul
or
stos
pop
mov
xor
je
pop
aam
out
push
movsl
jb
sub
jg
repnz
repz
mov
push
roll
adc
mov
cmp
adc
ljmp
add
das
pop
lcall
xchg
addr16
jbe
mov
aaa
rorl
mov
inc
adc
hlt
call
jbe
test
sbb
mov
jecxz
inc
jb
ds
je
hlt
clc
lret
push
cmp
outsl
mov
sbb
mov
mov
sbb
adc
iret
inc
jne
enter
push
arpl
pop
cmp
sbb
pop
pop
xchg
and
jae
data16
lcall
xor
adc
mov
add
jae
aad
push
xchg
in
adc
inc
movsb
pop
dec
sub
int
push
cmp
xor
sbb
xchg
xchg
insb
test
je
rcrl
leave
inc
insl
xor
js
int3
in
pop
xor
clc
bound
push
jno
jo
out
jge
subl
sbb
shr
lods
and
xlat
push
lahf
mov
pop
dec
les
or
shlb
jecxz
lret
mov
jns
pop
sub
or
mov
and
mov
shll
les
push
fsts
push
outsb
repnz
test
cwtl
xor
out
xchg
mov
mov
das
js
sub
je
cld
xchg
scas
pop
rcrl
ja
push
and
push
imul
mov
sub
pop
xchg
cmpsl
sbb
or
pcmpeqd
and
pop
mov
loop
imul
adc
pop
addr16
fbstp
cld
pushf
inc
pop
add
push
data16
orl
mov
scas
popa
faddp
xor
dec
cli
int
push
lret
cmc
jbe
jnp
xor
sbb
stc
inc
dec
ror
icebp
insl
mov
movsl
std
mov
leave
in
std
inc
push
sahf
scas
jo
loope
aas
popf
cmpsb
mov
pop
dec
lret
sub
dec
and
adc
negl
push
pop
movsl
test
pop
lret
outsl
ss
mov
mov
aad
std
xor
adc
mov
pushf
in
mov
dec
sbb
or
outsb
jb
fistl
jmp
sbbb
mov
ja
jg
cmp
aam
pop
add
jno
paddusb
pop
adc
sub
adc
shlb
sub
mov
aaa
mov
aam
cs
test
imul
and
bnd
outsl
aas
sbb
xor
xchg
push
ds
sub
pop
mov
ja
ds
cmpsb
xchg
inc
mov
mov
and
mov
dec
mov
pop
cwtl
adc
imul
je
ret
out
cmp
lret
mov
notb
ds
jge
test
stos
or
mov
incl
dec
mov
rcll
call
push
fadd
xchg
ljmp
or
bound
insb
fdivrs
mov
pop
jnp
mov
rolb
aaa
lock
mov
test
jns
pop
cmp
push
and
sub
insl
pushf
mov
pop
push
adcb
insb
xchg
scas
xchg
jo
xchg
mov
inc
sbb
or
ret
and
push
loope
xchg
mov
rcl
shll
cltd
aas
sahf
jp
xchg
cmp
sub
sbb
popa
fildll
call
xor
ret
jmp
mov
mov
sbb
je
sub
push
mov
jecxz
and
nop
sti
js
pop
mov
mov
jnp
mov
adc
cwtl
sbb
cmpsl
sahf
rcrl
mov
or
loop
insb
xchg
fdivl
inc
jns
fwait
adc
mov
insl
incl
xor
and
pop
out
push
dec
xchg
fwait
addr16
xorb
push
dec
das
mov
fdivl
lds
addr16
adc
and
leave
pop
sbb
fldl
sub
in
jae
lds
inc
leave
cmc
or
xor
lret
xor
or
in
inc
adc
fstpl
fldl
test
and
cmp
jne
enter
jmp
outsl
out
outsl
mov
inc
pop
jle,pt
aam
outsb
mov
mov
daa
or
sub
jl
mov
pop
out
jge
shlb
jl
ja
rolb
movsb
ljmp
pop
fistps
cmp
rclb
dec
add
sub
loope
mov
or
aas
ret
add
xchg
scas
int
push
inc
sbb
and
add
stos
sbbb
das
xchg
xor
dec
movsl
subl
adc
mov
cltd
lret
fstpt
aad
inc
sub
daa
sbb
addr16
or
jno
mov
cmc
xor
sbb
fwait
cmp
or
push
call
lds
pop
lcall
mov
push
ret
ret
iret
lcall
xor
loopne
fidivs
mov
sub
jne
out
push
mov
or
mov
fs
jp
icebp
mov
inc
imul
and
sub
bnd
data16
xor
push
in
rol
sub
scas
cmpsb
cmpsb
test
mov
push
mov
jecxz
test
sub
inc
pop
sub
rcl
adc
sbb
mov
mov
add
out
out
imul
or
cld
leave
cltd
cli
pusha
leave
push
push
outsl
rorl
aam
and
dec
test
push
pop
or
xlat
in
std
ja
jns
inc
hlt
adc
and
xchg
adc
movsb
enter
fstl
popf
loope
xchg
xorb
lret
roll
cs
popf
arpl
pop
lcall
fisubs
sbb
rorl
jnp
pop
push
or
mov
or
xchg
test
jmp
jle
sbbb
iret
pop
mov
neg
aad
das
lret
cmp
stos
movsl
das
ret
push
pop
repnz
mov
sbbl
je
jge
lods
xlat
jl
add
rorb
jmp
or
aas
xchg
test
sbb
nop
ret
aas
pop
loope
addl
pop
dec
mov
movsb
outsb
out
push
cltd
mov
sub
xchg
or
jg
into
mov
and
mov
ficompl
incb
idivl
push
cmp
lret
out
data16
xor
inc
movsb
divl
shrb
fiadds
das
dec
rcrb
inc
mov
mov
push
sub
add
push
enter
mov
ret
inc
mov
stos
sbb
add
xchg
icebp
sub
enter
les
repnz
add
jg
call
push
xchg
sahf
cli
push
arpl
sub
pop
add
iret
or
push
jge
scas
pop
std
ret
adc
dec
loop
fnstcw
js
jbe
xchg
in
int3
pop
pop
lds
pop
test
or
push
cltd
popa
mov
lds
add
xchg
push
pop
jle
sub
inc
fisubl
dec
pop
test
movsl
dec
or
out
cld
sub
add
and
mov
mov
push
mov
push
sub
sub
ljmp
jge
popf
fcmovnbe
inc
cli
mov
fwait
loopne
fs
jnp
fwait
imul
loop
xor
das
jns
int
dec
or
test
dec
aam
sbb
popf
lods
jno
sti
jp
add
mov
hlt
xchg
push
jae
or
cmp
adc
jae
push
adc
jae
push
in
cld
loopne
movl
or
cli
push
aas
aad
jp
jo
dec
sbb
sar
sub
mov
jg
push
mov
shrl
xor
sub
movsb
imul
cmp
daa
sbb
repnz
push
punpcklbw
pop
mov
sub
or
or
fsts
popa
fnsave
movsb
popf
mov
mov
cmp
gs
and
insl
aad
push
shll
test
aas
mov
push
rcr
mov
pop
lcall
push
daa
call
sub
gs
jecxz
fisttpl
pop
into
lods
aaa
lcall
mov
inc
mov
sub
dec
cmp
cmp
lahf
lcall
rorb
cmp
fdivrl
leave
or
outsl
jmp
fcomps
mov
xorb
loopne
sahf
int
nop
add
mov
sahf
jecxz
sbb
mov
pop
sub
orl
lock
fsubr
repz
ret
pop
jge
jl
xor
push
cli
xchg
fwait
pop
sub
dec
jmp
and
cwtl
jge
push
test
adc
jne
dec
push
inc
rolb
mov
add
cmp
dec
je
pushf
scas
icebp
inc
fs
sbb
mov
mov
mov
rcrb
aas
pop
popf
adc
cmp
or
inc
movsl
adc
jg,pn
outsl
pop
mov
sti
ficompl
lods
push
std
jae
jp
ss
xlat
pop
inc
and
cmp
dec
int3
adc
pop
or
ljmp
stos
int3
push
sub
mov
fsts
int3
cs
mov
lahf
dec
sbb
popf
test
and
dec
shlb
in
std
rcr
out
leave
pop
cwtl
and
mov
cli
pusha
test
dec
arpl
movsb
sbb
mov
pop
fcoms
mov
testl
or
std
push
mov
clc
test
test
mov
and
mov
rcr
cmp
scas
leave
fcoml
inc
nop
in
mov
sbb
aas
es
icebp
push
aaa
push
fwait
cmp
fistps
cli
pop
xchg
jl
add
fwait
outsb
test
aad
push
fdivs
adc
mov
xlat
adc
popa
and
jmp
adc
dec
std
loop
out
or
sub
das
push
out
insb
test
and
xor
call
pop
sbb
xor
pop
icebp
popa
popa
xchg
jns
and
decb
gs
mov
push
or
dec
sbb
push
into
jne
ja
jp
dec
das
add
sbb
jmp
int3
inc
xor
mov
pop
test
cmp
sti
cmpsb
cmp
cmp
mov
cmpsb
js
sub
sub
in
mov
cli
pop
adc
push
jge
js
mov
sub
test
sbb
dec
or
adc
pop
and
shl
das
mov
cwtl
cmp
mov
out
mov
add
pop
shll
push
inc
push
pop
icebp
sbb
mov
pop
or
jg
mov
mov
pop
ds
int
cmpsl
jno
scas
cmp
jno
in
push
cwtl
les
mov
scas
or
jecxz
sbb
mov
dec
aad
mov
ret
push
mov
inc
mov
mov
jp,pn
fwait
cmp
xchg
xchg
xchg
ja
wrmsr
add
sbb
js
inc
mov
mov
and
or
hlt
cmp
xchg
add
sar
jno
mov
or
lret
inc
jp
cltd
test
mov
jecxz
je
notb
push
pop
xlat
push
mov
inc
ljmp
movb
xor
push
shll
std
inc
loop
add
jmp
call
sub
inc
inc
and
out
cmpsb
rol
or
sbb
pop
pushaw
rcl
inc
add
dec
mov
push
jmp
pop
inc
or
xor
sub
ds
cld
out
push
sbb
fisubrl
testb
dec
cmp
mov
lods
adc
sbb
mov
int
inc
ds
pop
mov
repz
clc
and
repz
loopne
inc
mov
dec
inc
shl
cs
xchg
pop
jmp
jle
jo
mov
and
mov
scas
cmp
sbb
jns
lods
cli
pop
xchg
adc
or
dec
add
gs
pop
push
mov
add
mov
sbb
fsub
lea
loop
xchg
fiaddl
lds
rcl
into
imul
sbb
mov
cmp
mov
xchg
inc
push
sbb
ficoms
mov
inc
sub
pop
in
outsl
push
out
mov
jmp
and
push
fucomip
jnp
xchg
mov
add
lea
sub
mov
daa
or
scas
test
push
mov
push
or
jns
or
sbb
shrb
test
test
or
mov
xor
ret
loopne
and
rcrl
mov
mul
adc
add
dec
xchg
mov
sub
cwtl
test
sub
lds
aas
adc
loope
lcall
jg
or
or
adc
shll
lret
and
dec
mov
mov
bound
test
sti
mov
lcall
sbb
mov
jle
mov
jmp
lea
push
sub
insb
rcrl
sti
mov
adc
dec
inc
rcll
cld
add
push
jl
popf
sbb
sub
or
cvtpi2ps
mov
dec
addb
jg
ds
dec
jne
stos
pop
inc
and
push
mov
mov
push
lcall
movntq
vmaxss
inc
insl
bound
push
jg
das
adc
jge
popf
testb
and
ljmp
jecxz
cltd
in
test
cmc
int3
sub
clc
loope
out
mov
push
cmp
jnp
and
mov
push
mov
jl
ss
mov
jp
jnp
in
jno
rol
sbb
stc
sahf
push
pop
mov
push
and
inc
and
mov
or
sub
iret
mov
and
data16
das
outsb
jg
lods
jecxz
cmp
mov
cld
sbb
test
pop
xchg
sbb
pop
sub
cli
sbb
into
mov
lahf
sbb
pop
enter
divb
sarl
jg
arpl
insb
int
jb
es
roll
negl
sub
fcmovnbe
ret
loopne
xchg
sub
xchg
pop
fisubl
and
jb
jae
pop
ss
clc
and
xor
shll
stc
xor
lcall
push
sub
arpl
mov
xchg
repnz
sar
mov
lods
xchg
push
inc
lcall
scas
xchg
push
xchg
mov
push
add
xchg
jl
jecxz
aad
sti
ficomps
repnz
sbb
out
dec
je
lcall
sbb
lahf
cmp
ret
inc
pop
dec
or
test
add
xchg
stc
push
push
push
sbb
fwait
jbe
into
enter
in
hlt
lods
mov
in
imul
xchg
cld
pushf
lock
test
xchg
pop
sbb
insl
jg
add
jne
push
add
inc
mov
lret
xchg
idivl
test
xor
jmp
sbb
aas
add
dec
out
inc
mov
add
outsb
jo
or
test
scas
mov
or
adc
loope
sub
lret
sub
fwait
cmp
scas
ret
popf
cmp
dec
aam
cmc
mov
dec
dec
mov
cwtl
gs
imul
lods
jne
loopne
sub
and
cmp
xor
shlb
cmp
rcl
mov
je
in
stos
ds
adc
add
cmp
jno
mov
aaa
cmc
jno
cmp
scas
mov
add
or
mov
and
add
mov
jge
hlt
cld
inc
push
lods
inc
imulb
cmp
outsb
lods
xchg
nop
lret
lods
shll
ret
dec
mov
lock
bound
sbb
sti
xor
and
in
sbb
sahf
int
pop
mov
cmp
sub
or
aad
jne
mov
mov
in
js
mov
xor
add
adc
sbb
popa
add
dec
adc
mov
aaa
nop
jp
xchg
cmpb
inc
push
dec
xchg
addb
sub
add
cmpsb
stos
es
push
inc
nop
aam
icebp
mov
dec
pop
pop
jne
push
and
in
test
shlb
lcall
push
insl
sarb
push
call
sbb
cltd
xchg
shr
cs
sub
popf
mov
pushf
nop
lahf
fnstenv
jle
jns
aam
mov
jns
push
xchg
movsb
push
shrl
add
xchg
mov
test
sub
pop
xor
jmp
nop
repnz
push
ror
and
xchg
lret
mov
scas
stos
addr16
lock
scas
lcall
dec
insb
out
lock
cs
sahf
js
rcl
aam
rcrb
push
adc
fs
mov
hlt
and
icebp
lods
sbb
jb
popl
fstl
mov
pop
outsb
and
loopne
ljmp
lock
xor
mov
ljmp
or
test
xchg
push
jg
push
mov
pusha
outsl
std
nop
shlb
cmp
mov
mov
out
xchg
fs
mov
scas
inc
adc
and
xor
jns
sbb
fwait
decb
fwait
add
cs
push
pop
rcll
push
frstor
cmp
aas
mov
xor
popa
lahf
movsb
ret
in
jbe
repnz
mov
loopne
sbb
stc
mov
jmp
add
add
push
call
xchg
mov
int3
jnp
cltd
adc
into
or
jecxz
addps
pop
rcrl
jns
outsb
cmpsl
movsb
push
mov
add
pop
call
mov
ja
test
sarl
shl
cmp
popf
testl
imul
dec
fcmove
mov
out
cmp
push
dec
jmp
and
jb
movsb
adc
ret
mov
xchg
fdivrs
cmp
inc
add
xchg
mov
imul
pop
lods
cmp
outsl
pop
je
loop
imul
jno
or
jnp
pop
mov
lods
lahf
dec
sub
cmp
fs
arpl
shrl
bound
js
cmp
inc
pop
sbb
sarl
movb
or
mov
pop
arpl
movb
scas
call
out
pop
lock
call
flds
je
sub
pop
mov
aam
add
rorb
test
or
popa
xor
gs
stos
test
iret
xchg
dec
pop
pcmpeqw
stc
insl
xchg
jmp
icebp
mov
and
cmpsb
or
pop
adc
adc
fld1
imul
xlat
jae
jne
fnsave
sbb
fs
mov
in
push
adc
aas
aad
sbb
mov
pop
in
fadds
lods
test
out
divb
mov
inc
sub
imul
mov
andb
xor
push
push
fisubl
rorb
call
inc
or
out
jno
cld
sbb
jle
loop
push
nop
out
lods
cmpsl
dec
mov
xchg
into
addr16
mov
cmp
xor
inc
subl
sbb
push
fs
jecxz
fdivrs
inc
ljmp
das
mov
fstpl
lods
ret
push
stos
push
mov
maskmovq
imull
ja
push
out
inc
shll
mov
or
out
jp
gs
inc
stos
mov
je
insw
stos
cmp
cs
ret
jge
dec
sub
int
push
outsl
flds
mov
imul
jp
push
adc
and
iret
sbb
sub
sub
int
aam
add
daa
pop
xor
mov
in
mov
loop
sub
cmp
dec
loope
movb
xor
ss
sbb
push
mov
outsl
push
shll
mov
das
xchg
jo
xchg
loop
dec
xchg
xor
mov
pushl
cmp
ret
fistpl
sarb
inc
push
imul
bound
xlat
sbbb
repnz
jae
call
push
mov
pop
xchg
sub
push
pop
mov
push
push
mov
lock
or
mov
mov
and
aas
mov
call
test
lret
fstpt
mov
dec
fwait
dec
cs
scas
jecxz
dec
jmp
mov
mov
push
stos
push
es
sti
test
jle
cmp
jg
insl
and
ljmp
adc
mov
mov
ljmp
mov
ja
mov
jb
leave
or
xchg
and
pushf
je
gs
mov
jg
and
dec
push
lock
push
mov
add
mov
mov
mov
cmp
loop
or
lods
lods
shlb
daa
out
jns
aas
cmp
test
out
and
mov
inc
scas
push
outsl
test
pop
ss
push
pushf
xchg
mov
int
daa
in
push
movsb
and
dec
out
icebp
ja
lahf
add
lret
rcl
gs
in
mov
pop
pop
inc
movsl
shl
nop
ja
lods
inc
stc
mov
push
sbb
lahf
gs
cmp
mov
mov
inc
pop
imul
or
scas
mov
in
js
add
sub
push
and
xor
push
jl
mov
push
dec
cmc
adc
aad
out
adc
jne
addr16
dec
mov
call
mov
push
pop
jmp
out
push
add
ja
xchg
inc
mov
sbb
sub
xchg
inc
inc
int
sbb
mov
pusha
inc
adc
repnz
sbb
jmp
jae
cmp
fwait
lcall
and
imul
push
xchg
dec
pop
xchg
adc
dec
loop
jo
adc
xchg
lock
rcrl
es
lret
adc
mov
imul
adc
and
loopne
mov
hlt
pushf
insl
neg
icebp
push
ljmp
cmp
int
daa
sti
scas
add
jecxz
test
adc
ja
pop
fadds
jnp
pop
add
imull
loopne
mov
leave
pop
in
adc
sub
mull
mov
xchg
jae
jecxz
aad
imul
fdivs
mov
pop
dec
icebp
enter
bound
or
das
cmpsb
pop
inc
shl
add
out
mov
test
scas
pop
sub
sub
and
fwait
test
je
add
enter
add
insb
out
fcoml
inc
adc
and
dec
ficomps
adc
data16
and
jge
inc
inc
sti
xor
cli
sbb
xor
leave
or
mov
pop
pusha
mov
cmc
fmul
jg
insb
fisttps
stos
fcmove
sti
hlt
mov
jno
jecxz
or
cwtl
cmp
jg
out
adc
outsb
xor
or
ljmp
pop
arpl
mov
ret
ret
adcl
adc
xor
inc
mov
stos
test
aaa
push
das
js
outsb
cmp
cmp
adc
add
mov
frstor
jge
scas
rorb
xchg
push
pop
ret
lcall
cmp
rcl
add
sub
xchg
jg
in
push
sbb
xchg
fldt
push
and
ret
rorb
icebp
cmp
les
mov
fadds
test
jnp
pop
xchg
jb
xchg
jl
inc
test
pop
call
repnz
sahf
nop
sub
xor
int3
rorl
sub
das
adc
mov
sbb
das
loope
xlat
pop
mov
mov
mov
lods
js
xchg
mov
loopne
es
mov
mov
outsl
xchg
push
mov
dec
cld
mov
dec
es
fistl
aas
cltd
mov
stc
mov
cltd
pop
addr16
jecxz
sahf
int3
sbb
xor
mov
mov
adc
mov
pop
and
js
mov
inc
push
or
lret
dec
test
add
movb
cmc
in
loop
xchg
mov
outsl
fwait
cli
cli
pop
imul
dec
push
test
inc
scas
mov
jle
lret
pop
js
xchg
aaa
jge
daa
cmp
fldcw
mov
js
stc
jge
mov
push
repz
scas
in
sar
push
test
cld
jno
icebp
xor
inc
insb
dec
adc
leave
das
jg
push
lahf
scas
cmp
adc
and
aam
test
rolb
lcall
ror
pop
or
adc
cmp
pop
movsb
pop
or
loopne
dec
shlb
sbb
cmp
rcl
pop
adc
fwait
jne
mov
shll
ljmp
push
adc
in
mov
xor
mov
inc
outsl
dec
and
shrb
and
or
cmp
js
mov
loop
negl
bound
fwait
std
je
in
mov
xchg
mov
mov
mov
in
add
xchg
add
hlt
fdiv
mov
mov
adc
xlat
jecxz
fmuls
mov
ljmp
gs
and
aaa
fcom
cmp
add
out
push
aaa
xor
cld
push
push
or
repnz
sbb
cmovae
or
dec
jb
repnz
pushf
dec
cmpsb
mov
or
arpl
lret
clc
std
arpl
mov
xor
repz
arpl
mov
and
cmp
mov
xchg
jmp
stc
divb
stc
lret
and
xchg
and
sbb
pop
jl
daa
in
lret
outsb
or
js
loope
xor
aam
lret
inc
add
adc
push
cld
pop
dec
mov
shlb
addr16
adcb
inc
cmp
or
mov
mull
sbb
inc
lds
xchg
sub
vmovlps
inc
cwtl
adc
lcall
into
hlt
inc
mov
jecxz
test
je
fdivs
adc
mov
ja
js
call
xor
das
addl
ret
dec
in
sub
inc
dec
push
or
mov
xor
das
fnstcw
in
popa
daa
outsl
pop
jg
dec
jmp
stos
pop
popf
icebp
outsb
xor
pop
dec
lods
sbb
dec
sbb
inc
mov
insl
ss
loope
pushf
iret
cld
or
jg
jp
test
xor
xchg
scas
scas
mov
xor
adc
xchg
xchg
add
pop
ficompl
pop
dec
jmp
inc
sub
xor
sahf
fdivrp
outsb
dec
enter
jg
inc
outsl
pushf
cmp
mov
inc
mov
pusha
leave
sti
mov
cmp
imul
mov
fs
out
mov
dec
mov
adc
dec
pop
fwait
or
lcall
cli
dec
xchg
pop
and
pop
dec
lea
mov
mov
xor
test
call
xchg
popl
or
rorl
dec
mov
cmp
je
xchg
testb
rcrl
or
mov
stos
ret
adc
jg
ss
inc
pop
cmc
sub
mov
adc
lds
ja
mov
cmc
sub
and
test
imul
inc
xchg
jb
sbb
mov
jne
stos
xchg
inc
jecxz
mov
mov
xor
sub
leave
mov
push
mov
aas
icebp
nop
jle
inc
lcall
fdivp
jp
adc
and
ja
andb
xor
lcall
insb
jae
ror
pop
pop
outsb
push
jmp
pop
pop
in
add
push
hlt
mov
cmp
rcrb
xchg
or
dec
or
xchg
andb
sbb
inc
scas
lods
mov
inc
aad
fstl
add
or
ret
andl
fldl
scas
mov
call
call
xchg
jle
iret
mov
jnp
jns
pop
mov
pushf
pushf
ds
stos
push
push
out
or
leave
xchg
loopne
stc
jmp
adc
daa
stos
inc
cwtl
inc
notl
mov
mov
ja
inc
jbe
aad
cltd
call
stc
jl,pt
xor
test
movsl
jbe
push
iret
mov
pop
sahf
sub
inc
repnz
push
into
incb
outsb
jne
pusha
and
mov
push
ss
push
cmp
adc
clc
xchg
sbb
test
aam
mov
pop
test
push
aas
nop
leave
cmpsl
xchg
cli
push
sub
lret
push
stc
pop
aaa
shl
insb
sbb
mov
add
xchg
sub
aad
lret
cmpsl
push
cmp
xorb
or
rorl
add
cmc
adcl
sub
pop
push
sbb
inc
mov
cwtl
pop
sub
xchg
lods
sub
ret
adc
lret
fidivl
mov
mov
inc
pop
repnz
sbb
jnp
enter
xchg
mov
push
adc
add
loop
xor
inc
inc
dec
xor
sbb
cmp
push
movsb
std
and
icebp
idivl
pop
mov
shl
daa
test
xor
clc
sbbb
inc
movsl
popf
push
dec
aam
movsl
lret
mov
push
test
rcl
and
pop
outsl
add
scas
and
xchg
lcall
je
loopne
sub
stos
and
jb
lret
test
shll
movsb
mov
aam
divl
inc
outsb
gs
sub
in
repz
lcall
aaa
mov
push
jg
lods
mov
or
push
subl
add
xor
sbb
scas
repz
lock
adc
mov
xor
cwtl
ds
add
cmc
test
pop
inc
sub
adc
or
ret
pop
nop
cmp
adc
pop
push
ret
test
fmuls
pop
jmp
jg
dec
mov
add
sub
xchg
in
sarl
xlat
lock
in
inc
mov
cmp
xchg
clc
dec
dec
pop
pushf
push
or
cwtl
inc
je
adcl
mov
pop
jmp
jae
xchg
mov
in
sahf
in
or
xchg
popa
fstpl
cmpsb
or
cwtl
ljmp
test
xchg
cltd
clc
popa
jl
lea
lods
or
stos
dec
mov
inc
testb
icebp
nop
stc
daa
imul
je
rolb
or
out
dec
hlt
ljmp
cmp
gs
sub
mov
repz
cmpsb
out
push
inc
sbb
icebp
and
and
ror
jge
sub
mov
jl
outsb
sbb
add
mov
mov
mov
addps
and
mov
add
cltd
jp
mov
ljmp
cs
daa
add
and
xchg
inc
stos
dec
data16
in
add
ret
sbb
inc
cs
jp
jns
ja
xchg
icebp
inc
pop
mov
jg
out
ficomps
inc
les
dec
js
mov
push
inc
jne
sbb
push
pop
pop
daa
inc
icebp
mov
cld
les
mov
lock
xor
mov
xchg
ja
cmp
int3
ljmp
and
sti
push
addl
iret
daa
jo
pop
imul
insb
aaa
fists
testb
adc
or
into
mov
jmp
pop
sub
jl
das
cs
loope
aad
lods
icebp
adc
pop
dec
pop
add
mov
pop
outsb
stos
dec
movsl
mov
cmp
cmpsl
pop
and
les
scas
addl
inc
insb
add
add
and
push
inc
pusha
je
arpl
mov
xchg
cwtl
rcrb
push
cmp
lret
loop
pop
or
xchg
mov
or
mov
cmp
or
test
stos
jno
jns
das
pop
ret
jno
push
popa
cmp
jno
mov
mov
inc
jne
mov
and
aad
insl
jge
xor
sub
adc
lahf
adc
mov
pop
inc
aas
sbb
cmp
mov
imul
pop
cmp
cli
out
pusha
add
mov
mov
dec
lret
setp
or
mov
mov
addb
mov
jo
cmpsb
std
mov
dec
test
std
mov
outsl
aam
jp
sarb
data16
or
pop
cmpsb
dec
dec
jne
fs
and
and
lret
and
mov
xor
dec
movsb
add
xor
arpl
movsl
xchg
push
pop
adc
push
hlt
mov
xor
mov
jl
lret
mov
or
jle
out
and
repnz
loopne
movsb
es
std
sbbl
push
jae
mov
push
mulb
and
fiaddl
scas
mov
jno
dec
xor
jns
inc
dec
lcall
xlat
sub
fnstcw
adc
push
je
sbb
mov
mov
dec
fsubl
cmc
and
mov
in
out
fcmovb
sub
push
popa
xchg
dec
outsb
dec
adc
ret
pushf
mov
dec
stos
ret
push
insl
push
inc
rolb
sub
add
jmp
mov
mov
test
pushf
iret
or
scas
sbb
mov
adc
jns
js
or
std
fdivrl
movsl
jp
clc
aad
loope
push
out
roll
add
out
or
arpl
ljmp
pop
cmp
je
dec
mov
push
pop
das
sbb
das
movsb
enter
call
jmp
sub
pop
jle
fs
es
push
xor
cmp
lock
push
mov
sub
push
inc
dec
mov
push
lods
push
jge
insl
mov
ljmp
or
leave
clc
enter
jbe
ljmp
adc
vcvtdq2ps
inc
loop
int
inc
pop
xchg
jne
push
pop
sub
movl
xor
stos
jl
mov
fbld
les
scas
ret
arpl
sarb
fs
sar
test
pop
push
addr16
int
inc
push
push
add
test
call
sbb
sarb
jmp
in
lods
push
xchg
ds
mov
mov
or
cmpsl
scas
sbb
test
cmpsb
sbb
cli
pop
push
fs
jns
mov
inc
xor
mov
shll
push
movsl
lret
int
xor
mov
ret
adc
adc
mov
dec
test
in
aas
sub
sub
mov
xchg
int
stos
inc
fs
call
addl
hlt
mov
xor
ss
bound
data16
ja
xor
push
xor
dec
jmp
outsl
in
xchg
nop
jmp
outsl
xor
push
mov
std
into
dec
mov
mov
or
jne
fidivrs
xchg
or
push
call
cmpsl
test
xchg
push
dec
test
push
ja
in
es
aam
mov
inc
sar
movsb
jo
or
add
sbb
cmp
jno
fs
xor
push
xchg
jmp
jp
scas
ret
aad
std
mov
icebp
dec
dec
std
fucom
jge
cmp
push
add
mov
ja
xor
imul
sahf
or
or
ds
mov
inc
push
in
ret
fldt
movsl
mov
sbb
xchg
and
mov
cmp
mov
add
daa
adc
hlt
cmp
mov
movsl
mov
mov
shll
int3
scas
dec
fistpll
mov
out
lahf
xchg
je
icebp
sbb
xor
das
out
sbb
clc
je
inc
imul
in
dec
insl
add
jl
addl
xchg
fisttpl
clc
outsb
je
addr16
adcl
push
add
xchg
push
hlt
pop
or
cltd
push
jno
push
loop
popa
pop
js
xor
push
cmc
add
adc
jecxz
sbb
mov
fwait
xchg
sub
adc
out
cli
add
push
idivl
mov
es
xlat
xchg
out
icebp
test
mov
adc
rcl
imul
aas
fstpl
or
fildll
mov
pusha
cmp
and
es
nop
pop
aad
inc
push
adc
int3
cmp
mov
add
xor
lret
enter
rcrl
pop
push
mov
inc
cmp
je
test
mov
push
roll
gs
or
loopne
lret
fdiv
scas
xlat
jbe
mov
call
or
dec
mov
sub
jne
jbe
lcall
sbb
adc
outsl
and
fwait
inc
xchg
test
mov
xchg
int
pop
shl
lds
ret
into
loope
and
ss
sub
lods
mov
test
sub
mov
xchg
cwtl
out
xchg
xchg
cmp
in
push
in
lods
jmp
mov
scas
stc
bnd
jo
push
pop
push
jbe
cmc
sbb
in
jns
mov
hlt
and
gs
xchg
mov
lock
mov
adc
divb
das
in
xor
test
negb
xchg
out
fs
sarl
das
push
sub
jmp
out
stos
cwtl
and
xchg
addl
mov
xor
fadd
sti
pushf
je
adc
push
xchg
xor
or
mov
adc
add
dec
xorl
dec
add
loopne
rcr
popa
loopne
lods
mov
pusha
dec
fmull
mov
ja
rcll
je
rorl
test
and
push
imul
ja
in
outsl
xchg
mov
pop
push
push
pushf
push
xorl
mov
and
shlb
shll
dec
out
jl
dec
pop
cmp
out
add
jnp
mov
push
push
mov
adc
lret
mov
repz
sbb
imul
inc
xchg
popl
inc
mov
das
jb
jo
outsb
and
jns
lods
rclb
mov
movsb
nop
fmul
mov
sub
insb
jbe
add
sbb
xchg
orl
sub
mov
mov
shrb
or
mov
jns
push
jg
cmc
jge
add
xchg
lods
mov
out
ret
xor
cmp
dec
daa
add
pop
sub
mov
mov
mov
addl
cld
inc
gs
int3
js
mov
or
jns
pusha
xor
mov
in
add
fsubr
insl
dec
sub
fs
sub
cltd
inc
aas
ret
mov
repz
sahf
movsb
std
sti
fnsave
jns
inc
push
test
test
add
repz
mov
dec
aad
or
push
inc
lret
imul
loopne
repz
xchg
cmovle
test
into
aas
xchg
arpl
lahf
call
mov
push
loopne
icebp
pop
mov
jb
in
enter
test
mov
sbb
or
decl
inc
pop
add
dec
lock
mov
lret
push
jbe
xor
dec
xchg
es
dec
jge
fcomp
push
repz
cmp
cmpsl
bound
jmp
addr16
xchg
pop
out
mov
dec
outsl
xor
xlat
pop
xchg
adc
sub
add
rorb
lahf
pop
rol
cmp
loope
jle
gs
fstps
sbb
fdivs
inc
shlb
push
stos
addr16
call
add
jmp
or
mov
stc
adc
push
inc
dec
mov
inc
in
aas
movsl
fcomps
push
xor
inc
push
sub
pop
mov
add
xchg
sbb
push
and
mov
stos
mov
popa
inc
sub
out
cmpl
into
add
dec
pop
inc
dec
and
mov
cmp
cli
dec
pop
in
lret
data16
or
pop
ja
mov
mov
jo
adc
test
xchg
out
out
das
stc
pop
mov
arpl
or
test
dec
xor
fisttpl
dec
sbb
push
adc
shrb
cs
push
out
dec
push
jecxz
out
jns
jno
in
jmp
js
and
or
pop
and
push
push
fsubrl
jbe
cs
fwait
popf
mov
sub
push
imul
pop
mov
imul
out
inc
imul
xor
adc
in
aad
pusha
push
push
inc
sbb
jecxz
sbbb
xchg
xchg
lds
jae
mov
fwait
lods
fadds
push
mov
push
outsl
arpl
js
out
stc
jno
cltd
clc
and
fldcw
ret
dec
in
jo
jg
or
testl
push
lods
cmp
loopne
cmp
scas
jbe
sub
xor
aas
jle
cmp
mov
sbb
xchg
jg
add
push
rclb
mov
jmp
ret
addr16
cmpsl
in
idivl
and
mov
cmp
loop
jns
fcompl
sub
data16
cmp
sti
adc
cmp
pop
adc
mov
xor
cmpsl
add
cmpl
ljmp
lret
pop
lods
adc
push
sti
xor
dec
pop
sbb
outsl
dec
push
bound
stos
jecxz
add
sbb
jo
mov
push
shrl
sahf
mov
insl
mov
cli
mov
int3
inc
mov
lret
sahf
pop
mov
iret
in
stos
out
and
jp
jno
add
jbe
lock
mov
mull
add
sub
mov
push
mov
arpl
aas
adc
sbb
repz
adc
mov
mov
mov
fwait
mov
jno
sub
in
loopne
xor
add
lahf
ret
pop
mov
aaa
mov
mov
adc
mov
inc
inc
xchg
sub
push
fstl
xor
push
hlt
loopne
sub
in
cmp
add
fxch
xor
mov
adc
stos
aad
pop
xor
movsb
mov
in
shr
out
mov
jbe
jae
pop
fst
jg
into
sub
fldl
mov
rorl
in
sub
mov
and
push
xchg
ljmp
imul
into
in
lods
loop
cmp
xchg
jno
jl
jmp
xchg
push
stos
movsl
inc
xchg
mov
outsl
pushf
outsb
mov
lods
aas
int
inc
outsl
push
adc
scas
mov
jbe
sub
imul
xor
lods
xchg
push
outsb
arpl
out
mov
jge
jp
dec
clc
cmc
pop
fimuls
ljmp
adc
mov
inc
arpl
jp
test
xchg
jl
aad
nop
mov
test
push
cmp
test
in
cmpsl
xor
jle
testb
popa
xchg
inc
cmp
push
fidivs
jp
fxtract
arpl
jp
cltd
js
pop
lret
sbb
xor
mov
sub
into
test
bound
lds
add
pushf
push
lret
adc
mov
cmp
xor
iret
push
inc
cmp
mov
jns
imul
out
loope
std
fisubrs
lea
sbb
and
mov
inc
or
dec
mov
push
cmp
popa
jp
dec
test
add
jecxz
out
dec
pop
int3
dec
movsb
inc
mov
cmc
fcmovne
add
leave
and
push
sbb
je
or
push
xor
xchg
xor
addr16
out
push
shl
add
sub
sub
fisttpll
lods
cmp
ss
out
inc
sbb
aas
sarl
ja
add
xor
mov
std
xchg
jno
popf
mov
push
sbb
addr16
pop
mov
nop
je
jo
jecxz
jl
jmp
pusha
xor
lods
push
push
sbb
iret
cmpsl
in
and
in
int3
jmp
es
dec
mov
bound
pop
aaa
mov
iret
push
add
push
fbld
xchg
mov
fldenv
push
xchg
test
pop
adc
pop
xor
ret
icebp
lods
imul
loopne
mov
mov
xor
faddl
dec
jge
jl
out
sbb
mov
int
cmp
sbb
fs
ror
adc
and
push
dec
xchg
cmpsl
aas
mov
add
and
cmp
in
fcomps
in
mov
sbb
add
sub
outsl
in
pop
jne
test
xchg
mov
jp,pt
push
xchg
pop
xlat
jmp
cmc
push
and
dec
inc
jns
not
fcmovu
into
in
cmp
mov
and
push
ds
dec
das
sub
or
sti
xor
int3
mov
jbe
xchg
imull
mov
je
out
out
or
cld
rorl
cmp
push
inc
aad
adc
jne
jo
push
mov
test
ljmp
popa
pop
pop
dec
pop
ss
enter
fcomps
xchg
out
lock
bound
push
cmp
xchg
daa
lock
xchg
pop
shrb
push
mov
sub
cmc
xor
out
cli
add
leave
cmc
mov
fistpll
pop
cwtl
adc
and
arpl
imul
outsb
scas
ret
mov
add
push
xchg
movl
jae
leave
mov
fsubrs
gs
mov
cmp
in
aad
adc
mov
in
gs
rol
sbbl
cmp
sti
mov
mov
scas
roll
sub
add
cs
ja
mov
jle
lods
sbb
pop
mov
push
or
loope
mov
sub
push
inc
inc
pushl
cmc
push
inc
fildll
fwait
jno
testl
fldt
sub
movb
rol
xchg
mov
sti
fwait
cmc
sub
mov
int3
adc
and
int3
pusha
nop
fadds
pusha
lods
lods
pop
mov
push
lea
es
lds
push
fimuls
adc
inc
pushf
dec
out
xchg
in
or
xor
mov
fstps
lods
rclb
nop
test
notl
ljmp
imul
movsl
call
test
add
rolb
leave
in
negb
rcrl
xlat
sub
pop
shrb
push
or
movsb
pusha
jecxz
cmc
mov
cmp
nop
push
cmp
mov
xchg
xor
jnp
push
inc
dec
scas
jno
js
cmp
sub
mov
stc
mov
push
cmc
loopne
adc
in
sbb
insl
mov
jl
push
mov
aam
pop
call
ss
sub
xor
add
fdivs
mov
test
pop
lret
fdivrl
add
inc
dec
imul
inc
lcall
gs
add
dec
xor
inc
push
xor
cmp
aad
jp
mov
fsubrs
mov
iret
xchg
insl
ja
dec
sub
cwtl
inc
dec
inc
fsubp
dec
xlat
pop
jnp
push
rep
cltd
hlt
pop
outsl
data16
lods
or
or
ret
add
int3
or
dec
mov
int3
shl
sbb
mov
dec
pop
ret
lock
lcall
cmp
push
fsubr
cmp
inc
dec
sahf
test
movsb
mov
mov
jmp
jmp
mov
push
test
jns
pop
lds
ficomps
fwait
hlt
mov
cwtl
notb
test
test
pop
xor
sub
outsb
sub
cltd
pop
aas
adc
mov
lods
mov
add
sub
stos
aad
add
jle
jmp
jo
jle
fistpll
shl
xor
rorl
outsl
mov
dec
leave
sarl
dec
mov
shrb
or
sub
sbb
and
cmp
mov
mov
mov
mov
lds
dec
int
fwait
lret
add
pop
call
test
pop
iret
inc
repnz
xchg
cmp
subl
mov
cmp
and
xor
test
loop
jmp
test
push
push
aaa
cmpsb
lds
mov
popa
rcr
lods
je
popa
sbb
xor
pop
xchg
xor
xchg
lea
fimuls
cs
movsb
mov
dec
popa
dec
scas
push
in
fs
jb
leave
push
insl
cwtl
call
cmp
mov
xchg
movsb
add
mov
xor
push
mov
pop
ss
and
movsb
iret
mov
fimull
stos
cmp
call
jns
push
dec
cmp
out
fistps
movsl
jbe
pop
imul
dec
pop
xor
loopne
push
and
ja
fdecstp
das
sub
jmp
iret
adc
jg
jns
lahf
and
cs
xchg
gs
sub
movzbl
mov
jecxz
clc
adcl
xchg
mov
out
xchg
jge
cmp
dec
push
aad
xchg
jo
arpl
leave
outsb
lea
pop
test
mov
pop
cmp
dec
sbbl
lods
or
pop
jno
lret
sahf
adc
negl
pop
lahf
lcall
and
push
int3
xchg
jno
fcmovne
jmp
jo
daa
test
lods
and
fsubrs
sbb
lcall
inc
inc
or
jecxz
adc
arpl
adc
inc
test
mov
icebp
rorl
push
and
jnp
lret
push
pop
push
push
cmpsl
lock
add
push
push
mov
push
sub
fsts
test
pop
shl
inc
loop
push
bound
add
int3
push
sbb
into
xor
jae
xor
or
out
xor
js
enter
dec
daa
addr16
pop
mov
sbb
lahf
mov
jl
lods
add
jecxz
add
test
jb
sub
sub
fisttpll
push
lea
pop
into
fbstp
movsl
cmpsl
cmp
loope
inc
movsb
iret
mov
pop
stc
inc
mov
jmp
in
imul
xor
hlt
push
ss
mov
add
or
movsl
xor
pop
stos
dec
or
mov
push
shlb
in
stos
jmp
loop
lahf
push
shrb
lds
lods
mov
das
xor
jmp
movsl
jp
sahf
pop
jne
mov
or
sar
and
jg
pop
cmp
sub
mov
cmpsb
sbb
jl
stos
xchg
pop
xor
adc
xchg
adc
orl
mov
in
sbb
decl
mov
jmp
lret
cmp
sbb
pop
sbb
mov
out
push
sub
popl
nop
ror
mov
call
icebp
jmp
pop
push
mov
xlat
jmp
inc
and
pop
jl
ja
aam
sbb
sbb
adc
test
test
inc
lea
jp
test
mov
sub
sub
popa
mov
mov
popf
pop
sub
enter
or
lods
cmp
dec
push
mov
outsb
shlb
bound
imul
jle
shrb
in
rcll
and
and
mov
and
jp
int
adcb
jecxz
or
mov
xor
cmp
jne
in
divl
div
imul
and
dec
push
hlt
mov
popa
add
fnstenv
adc
jmp
xor
push
cld
int3
mov
fcomps
int
subl
and
push
push
fs
jno
enter
sbb
or
sti
inc
mov
adc
daa
push
je
mov
adc
jo
sub
int
bound
testb
shl
sbb
add
jp
lds
cmc
add
ret
in
scas
cld
stc
mov
les
sbb
xchg
dec
mov
jno
lds
mov
andl
mov
push
insb
sti
xchg
or
cmp
sti
les
incb
sub
pop
xor
outsb
scas
out
sbb
cli
sub
insb
sbb
mov
xchg
inc
mov
enter
clc
or
push
mov
sub
addb
sub
dec
je
pop
pop
aas
mov
sbb
jae
mov
add
into
adc
outsl
xchg
movsb
repz
ret
in
mov
sbb
inc
pushf
iret
outsl
cmp
mov
fisttpl
es
pusha
push
xor
inc
fs
clc
loopne
clc
inc
jbe
inc
loopne
outsb
mov
xorl
ss
inc
aad
adc
cmpsb
push
mov
add
sbb
arpl
stos
jp
adc
aad
into
xchg
or
xchg
es
cltd
sahf
sbb
das
mov
dec
xchg
fcompl
inc
xchg
fwait
leave
pop
mov
adc
add
jno
div
lcall
inc
xchg
in
adc
test
jmp
clc
mov
ret
ja
gs
mov
xchg
dec
js
test
rorb
lea
push
cmp
dec
mov
or
fadd
lds
push
f2xm1
insb
jge
mov
lods
jnp
xor
sub
mov
out
mov
xchg
xchg
adc
dec
cmp
pop
popa
lret
lods
mov
xchg
dec
push
les
jl
shrl
aam
jae
gs
call
push
rcll
jns
push
in
cmp
int
loope
int3
test
lret
mov
shl
int3
insb
push
jae
pushf
pop
insl
pop
mov
jno
adc
movsb
add
push
je
push
or
je
scas
mov
shr
mov
sub
lahf
test
dec
push
repnz
test
xlat
ljmp
inc
comiss
jae
or
cwtl
pushf
mov
cwtl
sbb
jle
bnd
mov
mov
aaa
cmc
dec
add
sub
pop
push
cmp
fsubl
cmpsb
imul
mov
mov
into
mov
out
inc
and
add
jp
sarl
gs
inc
ret
leave
mov
aaa
pop
lcall
mov
jb
sub
test
add
inc
lahf
fstps
and
cmp
mov
pop
out
pushf
mov
shrb
or
jnp
jp
mov
mov
mov
push
xor
mov
mov
xchg
ret
cs
push
imul
and
pop
xchg
lahf
out
mov
sub
daa
sub
mov
xlat
mov
pop
repnz
out
pop
mov
mov
shlb
add
shll
inc
mov
adc
jl
out
mov
pusha
lret
mov
inc
adc
jmp
imul
sbb
movsb
imul
lea
mov
jnp
les
pop
clc
add
jns
test
and
add
loopne
adc
push
lret
adc
adc
add
ds
sahf
insb
mov
fdivs
arpl
in
sub
rcll
out
jne
mov
aad
jg
sbb
lods
mov
popf
sub
dec
arpl
testb
repz
cmpl
mov
sbb
fbld
cmp
push
inc
clc
lahf
inc
mov
ljmp
out
xor
xchg
and
push
jle
mov
fcoml
and
addr16
test
mov
xor
or
cmp
fwait
scas
jg
repnz
insl
or
sbb
inc
sub
aaa
add
cmp
xchg
idiv
ret
jecxz
call
and
pop
sbb
loope
or
cmp
xchg
and
mov
xchg
mov
cltd
sub
mov
dec
pop
js
mov
ljmp
mov
test
add
iret
mov
jmp
pop
popf
adc
jl
mov
xchg
daa
hlt
jb
mov
scas
test
mov
mov
mov
xchg
jb
fisttpll
mov
mov
iret
pop
xorb
out
dec
inc
sbb
push
xor
stc
xor
xchg
in
or
mov
cmp
mov
nop
sbb
or
jnp
xor
gs
push
cmp
pop
inc
fwait
xor
imul
push
xchg
cmpl
push
or
sub
mov
xor
xor
xchg
pop
mov
sbbb
and
and
jmp
xorb
ficoml
outsb
enter
fisubrs
ret
mov
pusha
jno
repnz
lret
adc
mov
xchg
int3
shrl
fsubl
aam
call
std
scas
mov
inc
in
movsl
add
mov
out
jb
insb
xor
sti
ds
xor
in
fmuls
inc
mov
popf
add
jbe
mov
cmp
jle
jmp
mov
ss
dec
outsl
pop
mov
mov
ret
das
inc
push
cli
cmp
jbe
pop
fcompl
push
sub
and
popl
sbb
cld
scas
xchg
ss
and
call
add
adc
jae
test
or
call
dec
cli
aad
xchg
push
mov
mov
loopne
add
inc
dec
call
sub
scas
inc
pop
xchg
mov
jbe
cmpps
stos
pop
cli
movsb
dec
or
push
pop
test
sbb
push
push
scas
jns
movsl
cmpsb
mov
add
or
mov
sbb
shl
js
mulb
insb
add
lcall
jmp
xchg
fdivr
and
lea
fcom
clc
or
sti
sub
lret
xor
mov
lods
loopne
je
xor
or
push
loop
adc
cmp
fists
xchg
sub
push
or
cs
fisubrl
sbb
inc
sub
scas
movsb
lea
imul
push
stc
xor
fisttps
inc
cmpsb
iret
into
ds
addb
fs
lret
arpl
sbb
adcb
mov
les
dec
mov
or
imul
mov
xor
dec
jb
and
out
pusha
clc
or
or
cwtl
jp
sub
repnz
adc
adc
jmp
cmp
cmp
lods
xor
jmp
cmp
rolb
popa
pushf
sbb
out
mov
mov
jb
ret
insb
jle
ss
js
lret
add
mov
mov
adc
jmp
pop
shrb
ja
mov
ljmp
sbb
jmp
hlt
jno
push
cmp
lea
ficoms
je
jns
xchg
fwait
jecxz
mov
stc
dec
or
dec
dec
sub
sbb
adc
dec
pushf
xchg
xlat
loop
aam
in
dec
aas
xchg
adc
out
scas
shlb
rorl
mov
push
xor
std
adc
stos
dec
rcr
inc
jg,pt
mov
add
cmp
mov
ss
into
xor
imul
loopne
aas
mov
loop
aad
icebp
cmpsl
testb
xor
inc
add
jbe
sub
mov
cs
jp
pop
mov
cmp
pop
pop
cmpl
dec
popf
cli
mov
jns
insb
outsl
add
pop
leave
fsubr
cmp
dec
into
jbe
decb
and
enter
jbe
xchg
dec
push
fisttpll
sbb
clc
loop
sbb
in
xlat
fidivrl
jo
jg
and
clc
xchg
and
outsl
sbb
sti
aas
push
add
fdivl
lds
out
push
mov
addr16
sub
push
ds
xchg
imul
mov
pop
pop
adc
shlb
pop
mov
fwait
andl
iret
jge
daa
push
sub
mov
fs
inc
ror
cmp
adc
cmpsl
jle
mov
push
sbb
lcall
dec
push
xchg
mov
mov
clc
cmp
adcl
int3
scas
fdivrl
or
insb
mov
cs
mov
sbb
aas
sbb
subb
dec
insb
mov
clc
cld
lds
cld
push
test
inc
arpl
pop
mov
pop
icebp
iret
std
and
inc
add
mov
fmul
pop
jge
inc
sub
or
inc
push
movsl
stos
and
xchg
movsb
rol
mov
and
mov
das
pop
test
push
pop
clc
incl
xor
sub
mov
dec
fistpl
pop
cmp
and
cmp
insb
fisttps
pop
hlt
mov
fdivr
shlb
fldenv
mov
movsl
sub
push
pop
pop
xor
fcmovne
in
std
xchg
mov
cmp
xor
push
js
scas
pop
jle
sti
cmp
imul
ficoml
fnstcw
lcall
enter
cmpsb
imul
in
lahf
mov
sub
jecxz
enter
inc
or
xor
lock
xor
xchg
pop
verr
and
push
out
add
imul
lds
inc
sub
ss
inc
movsl
dec
jb
mov
jmp
pop
dec
pusha
imul
insb
push
cmp
aam
insb
jne
and
and
xchg
pop
cmp
pop
mov
psubsb
xlat
push
outsb
shll
int
mov
sbb
jne
dec
cmpsl
jge
mov
xchg
cmp
sahf
add
int3
jne
dec
pop
cmpsl
push
call
out
inc
jmp
outsb
inc
jle
imul
iret
ja
xchg
lock
aam
in
add
sti
cld
mov
andl
test
pop
xor
pop
rolb
mov
cli
push
add
fcmovnu
jb
pop
imul
ret
cmpb
mov
call
sbb
mov
leave
pop
stos
jnp
rclb
repnz
fbld
cltd
mov
repnz
cmpsl
pop
clc
test
lret
aaa
lods
call
jbe
xor
jnp
das
je
pop
fs
and
dec
sbb
mov
mov
inc
sbb
adc
inc
sub
or
mov
cmp
sbb
sub
push
mov
jno
loop
test
push
mov
addr16
add
and
push
and
pop
inc
fwait
cmpsb
jmp
cmp
negl
fdivrp
out
xlat
lods
pusha
lds
aas
sbb
call
lret
popf
adc
inc
arpl
mov
shlb
sbb
sub
fldt
jns
out
ds
xchg
jne
mov
cltd
push
cmpsb
push
es
add
dec
bound
subb
adc
pushf
cmpsl
push
mov
cli
pop
pop
mov
jecxz
and
pop
push
mov
push
sbb
dec
add
mov
jge
or
test
push
dec
int
lret
lock
pop
test
inc
jb
jge
lcall
lods
lock
or
fs
mov
sahf
jmp
and
outsl
mov
test
mov
push
sbb
pop
incl
mov
gs
add
sub
adc
out
loope
enter
inc
jge
movsb
jge
enter
movsb
rol
mov
mov
sarl
push
arpl
or
and
test
cmpsl
repz
les
sub
add
cmpsb
mov
mov
mov
shr
cmpsb
xlat
mov
xor
pushf
mov
mov
mov
pop
je
add
testb
jmp
sbb
loopne
bnd
jge
sar
test
xor
daa
sub
mov
mov
repnz
repnz
sub
xchg
mov
push
push
stos
jo
mov
ret
or
or
sbb
push
stc
cmpsb
mov
sbb
sahf
testl
daa
xor
or
xchg
insl
dec
xor
lret
xor
pusha
push
or
sahf
pop
sub
scas
xchg
jno
stos
je
push
jp
push
push
mov
push
imul
and
rcll
inc
push
notb
and
popf
mov
jge
xchg
inc
mov
div
add
das
push
fcmovne
jecxz
mov
rorb
les
pop
fstps
inc
push
fnstenv
sub
mov
or
mov
arpl
mov
cld
rorl
cmc
adc
dec
icebp
incb
mov
fcompl
pop
fstps
jle
shlb
sti
jne
sub
mov
pop
xlat
sub
pushf
xor
adc
sub
xor
ret
lods
add
notl
or
jmp
sbb
sub
pop
mov
and
lret
inc
mov
fwait
mov
jecxz
addr16
jg
imul
mov
sbb
mov
pop
adc
xor
xchg
and
je,pn
push
jp
loope
sub
in
pop
mov
push
lret
sti
hlt
jp
mov
lret
jmp
mov
jae
das
jle
arpl
outsb
scas
adc
lock
popa
test
ja
ret
je
into
repz
push
mov
sbb
lea
and
xchg
aad
in
mov
jge
scas
push
inc
xor
mov
mov
in
repnz
xor
rorl
mov
pop
mov
in
test
clc
mov
scas
inc
mov
sub
mov
es
adc
and
or
out
cmp
rclb
insb
xor
in
mov
mov
pop
shll
sbb
mov
push
mov
sub
lds
aas
clc
cmp
cmp
pop
loopne
rcrl
xor
push
or
fs
cmp
sbb
cmp
cmc
or
adc
scas
push
cmc
inc
cvtdq2ps
mov
pop
dec
and
sahf
inc
stc
mov
sarb
lcall
mov
test
push
pop
jp
push
std
adc
repnz
mov
enter
data16
inc
sbb
outsb
or
and
sar
push
add
cmp
pusha
sbb
jle
popf
xchg
sub
mov
xor
and
pop
adc
test
pop
cmp
xchg
xor
jmp
dec
xchg
mov
bound
fiadds
stc
dec
mov
sbb
add
cwtl
pop
in
orb
jns
jmp
fwait
sbb
lcall
cmc
out
xchg
lret
jnp
dec
pop
mov
lea
leave
movsl
add
loopne
cmp
scas
decl
ret
cli
sbb
nop
sub
int
lds
dec
push
mov
subl
mov
shrb
xchg
test
cmp
fwait
or
aas
sbb
jnp
leave
dec
jne
or
iret
cwtl
imul
push
outsl
push
loope
pop
jno
or
dec
adc
jb
into
addl
mov
mov
ret
es
and
scas
mov
cli
cmc
lods
ss
fs
loop
xor
lock
sub
xor
call
cmpsl
pop
xchg
mov
jns
pushf
mov
xor
shlb
sub
jb
pop
or
dec
insb
inc
ss
pop
aam
pop
movsb
sub
push
mov
adc
sbb
sub
inc
add
enter
addr16
push
jp
into
movsl
jbe
sarl
and
sahf
inc
inc
lds
fisubs
fsts
or
lock
sarb
pop
mov
cltd
cwtl
adcb
shrl
jmp
or
fiadds
mov
add
rcr
sbb
or
pushf
cmp
inc
loope
fstpt
fidivs
mov
imul
loopne
sbb
push
in
shl
dec
or
adc
push
sbb
cli
shlb
je
test
push
call
std
inc
and
dec
arpl
and
dec
pop
movsl
mov
or
dec
add
xchg
jb
add
mov
loop,pt
and
lds
and
mov
addr16
push
jb
pop
in
jb
sub
xchg
movsl
std
ss
and
xor
lock
pop
inc
mov
js
jb
mov
and
or
inc
and
in
mov
push
dec
imull
xchg
jno
push
test
dec
out
xlat
adc
and
sbb
ja
pop
jg
jb
and
fisttpll
push
jae
clc
dec
jns
and
in
jle
jle
pop
mov
adc
dec
test
jmp
call
or
js
scas
lret
insb
aad
xor
cmc
and
iret
into
sbb
sub
mov
imul
scas
test
sub
xor
jne
icebp
ror
mov
pop
and
daa
cmc
aaa
out
adcl
sar
push
adc
xor
xchg
lea
shll
mov
pop
pop
sub
and
and
sbb
pusha
sbb
sbb
into
enter
cld
leave
call
sub
das
je
sub
xchg
mov
cld
out
mov
cmpl
push
sub
sbb
sbb
ss
das
sub
lahf
sti
jmp
mov
and
cs
and
shlb
hlt
aad
hlt
push
sarl
push
xchg
imul
cmp
enter
mov
push
sbb
fnstsw
dec
fwait
pop
cmp
xchg
cmp
inc
pop
stc
push
sub
mov
aam
jae
ja
mov
loopne
and
lcall
popf
das
shrl
loopne
dec
scas
pop
push
stos
call
pusha
lds
pop
pop
sub
dec
aaa
into
enter
imul
inc
mov
mov
out
iret
cli
repnz
sbb
add
pop
fdivrs
pop
out
fcmovne
or
fcoml
mov
cmp
jmp
test
xlat
mov
inc
push
add
sbb
add
cwtl
add
mov
out
ljmp
xchg
outsl
add
sarb
xlat
xor
xchg
jg
and
call
in
add
scas
out
push
xchg
les
aaa
aam
adc
mov
movsl
lcall
adc
push
outsb
pop
std
lds
mov
sub
fcmove
pop
shrl
jg
or
add
fnstcw
jle
stos
push
fwait
jle
pop
or
out
imul
shrb
fisttpll
cmp
dec
imul
jne
xchg
xor
or
sahf
idiv
lods
sbb
xchg
sbb
in
in
xchg
adc
pop
aam
gs
stc
pop
xchg
lcall
inc
sbb
cld
stos
jnp
test
push
push
add
sbb
lahf
mov
dec
pop
fwait
sbb
dec
cltd
cltd
jne
out
les
sbb
sub
test
xchg
roll
nop
mov
mov
enter
lret
jb
xor
je
pop
ja
or
mov
outsb
sbbb
xchg
insl
xchg
arpl
out
rcl
sbb
xchg
xor
and
cld
push
xchg
sub
pop
sbb
ret
loope
sub
push
movsb
jecxz
insl
pusha
sahf
test
std
movsl
minps
mov
mov
sbb
adc
mov
scas
cld
cmp
cmp
imul
jle
ret
cmpsb
andb
push
dec
aas
cmp
mov
ret
and
mov
jp
push
inc
mov
xor
cli
lods
sbb
jb
ret
cli
adc
inc
fbstp
insl
pop
loope
jno
cmp
dec
sub
sub
sub
in
or
xchg
add
mov
jae
pop
loop
popa
or
das
mov
push
xchg
test
xlat
sub
aaa
sti
inc
cmpsb
xor
dec
sub
mov
mov
mov
stc
inc
push
stos
rorl
pop
in
or
ret
lret
mov
orb
mov
les
shlb
jge
dec
jg
addr16
push
in
out
test
push
jns
test
aam
js
les
jl
xor
or
insl
add
outsl
xor
jnp
jnp
lds
cli
int
pop
push
jmp
rcrl
stos
hlt
fstps
in
imul
inc
leave
sub
out
loopne
inc
cmp
inc
enter
add
imul
and
js
and
sub
test
popf
test
fsts
hlt
aam
dec
ret
mov
jbe
ret
pop
mov
sub
roll
sub
add
sub
pop
movsl
jbe
rcrb
sub
or
and
fdivr
movsl
and
leave
cmp
xchg
xchg
daa
jl
outsb
add
mov
xorl
les
jo
adc
mov
mov
inc
xorl
cmpsb
inc
pop
into
shlb
mov
push
bound
cli
pop
cltd
sbb
test
insl
leave
adc
sub
lea
mov
dec
lock
mov
mov
xor
xor
ds
jg
popl
inc
push
xchg
stc
push
jecxz
enter
shlb
jo
jl
xchg
fucomip
daa
test
xchg
push
dec
mov
pop
and
popa
push
and
mov
stos
inc
fstl
outsl
mov
cltd
ss
aaa
mov
sarl
mov
and
jmp
xor
mov
addr16
jmp
iret
iret
dec
popa
adc
mov
out
pop
test
push
in
loope
lods
out
out
ret
js
icebp
cmp
shlb
mov
scas
add
int3
or
jmp
mov
mov
xchg
test
cltd
xorl
inc
push
mov
jae
ret
inc
inc
adc
push
jo
rcl
aaa
and
xchg
fwait
and
push
gs
test
aad
inc
xchg
aam
xor
icebp
adc
lock
push
scas
xchg
inc
sbb
push
xor
add
icebp
dec
xchg
sbb
jbe
imul
lds
divb
or
mov
jne
out
fbld
movsb
dec
nop
pop
sub
imul
cmp
jp
mov
inc
push
int3
addl
add
rclb
xchg
ds
stc
cmc
push
and
arpl
inc
or
insb
rcrb
xchg
pop
push
add
in
fisubrl
shlb
stos
sbb
adc
mov
sbb
stos
mov
les
mov
xchg
inc
je
leave
out
xchg
pop
mov
jecxz
outsl
jbe
adc
push
and
ja
pop
cmpsb
nop
rorl
inc
cmp
xor
add
adc
pop
xor
sti
gs
out
mov
push
mov
je
cvtps2pd
mov
fwait
test
mov
dec
lret
in
cmc
adc
das
in
ret
mov
or
and
test
shrl
cmpsb
inc
jns
jmp
mov
or
lret
or
fnstenv
dec
cmp
loop
push
mov
rclb
into
mov
mov
or
enter
lret
xchg
xor
inc
ljmp
mov
ljmp
push
scas
movsb
fcmovu
push
jge
sbb
test
jnp
sarl
sub
cld
lcall
ja
adc
mov
daa
mov
test
dec
mov
add
xchg
lea
xchg
push
ficoml
cmp
cli
lcall
add
mov
push
pop
sub
fwait
hlt
mov
or
gs
insb
gs
fwait
xor
sahf
xlat
push
scas
ret
iret
or
mov
pop
jmp
jb
clc
or
lret
pop
sti
lcall
sbb
stc
lret
push
pop
dec
xchg
in
mov
cmp
and
and
jmp
cmp
lods
mov
pop
rcr
ljmp
add
pop
mov
jae
sbb
add
ds
and
out
lods
add
adc
jmp
dec
lcall
sub
mov
in
call
push
fcomps
mov
jp
cwtl
or
xchg
dec
xchg
sub
xchg
std
fisubrs
rolb
cmp
out
inc
bound
push
popf
imul
out
xor
mov
xor
out
iret
pop
push
sbb
mov
inc
iret
rcrb
add
pop
sbb
bnd
cld
or
mov
in
mov
mov
mov
cli
mov
lahf
adc
or
fisttpl
sbb
test
xorb
shrl
xlat
stc
xor
jge
shrl
pop
dec
ss
mov
test
aad
mov
lds
scas
iret
movb
call
sti
ficompl
pushf
popf
out
popa
pop
adc
mov
add
imul
lea
mov
out
and
jl
mov
add
mul
je
cmpl
repnz
std
std
pop
out
push
adc
out
lea
mov
imul
add
orl
jae
and
fwait
mov
outsb
sub
dec
sbb
lods
xchg
cmp
jp
push
imul
cltd
insb
jb
xor
into
dec
inc
push
sub
pop
lcall
rcll
scas
pusha
and
cmp
stos
in
or
push
fs
xchg
orl
xor
dec
std
inc
aad
lret
test
outsb
test
call
adc
iret
sbb
movsl
roll
xor
pop
popa
add
mov
adc
leave
jge
mov
sub
jo
add
sub
mov
mov
push
movups
mov
pushf
pop
inc
mov
mov
loope
aas
push
inc
add
xchg
or
sbb
and
ret
fcoms
nop
mov
add
scas
lcall
shlb
push
fldl
pop
fs
fildll
into
cld
mov
out
js
out
aad
and
adc
lock
jnp
xchg
inc
call
and
xor
inc
popa
dec
mov
add
pop
test
jo
sub
jb
cmc
das
arpl
lcall
clc
add
repz
dec
sub
or
xor
movsb
clc
xchg
push
aam
pop
push
insl
lea
shlb
xor
mov
sbb
idivl
pop
sbb
mov
fmul
mov
mov
inc
inc
filds
das
push
xor
jp
cmp
jecxz,pn
rcrb
sarl
outsb
loope
bound
pop
inc
mov
icebp
inc
push
cltd
jecxz
jno
and
enter
mov
cmp
inc
nop
pop
shlb
cmc
jge
adcb
cmp
pop
xor
pop
cmpsl
push
sbb
jl
les
push
mov
mov
in
cmc
pop
imul
je
scas
in
arpl
sbb
nop
cmc
push
pop
mov
jae
sub
inc
pop
jbe
jmp
push
push
pop
adc
mov
in
fs
push
sbb
mov
out
rcrb
and
jb
setg
ret
loope
je
add
clc
adc
mul
cmp
in
mov
inc
test
fs
and
adc
orb
add
xchg
push
ret
mov
xor
lcall
sub
or
ret
xchg
cwtl
lahf
push
xor
lret
aas
out
jle
enter
insl
es
push
scas
cli
hlt
jb
push
add
mov
add
or
addb
mov
mov
fincstp
shlb
lahf
rcll
adc
and
pop
cltd
ljmp
dec
clc
aaa
jl
mov
int3
and
dec
mov
cmc
stos
fstps
andb
sahf
out
lret
in
jbe
sahf
fs
jae
pop
loopne
pusha
mov
out
or
jg
lds
mov
xlat
mov
mov
inc
repnz
sbb
jg
and
ja
mov
add
mov
xor
jle
pop
iret
xor
push
pop
xchg
lds
frstor
or
rcll
lods
in
sti
dec
repnz
push
es
cmp
jmp
ret
ja
lret
outsl
or
adc
sub
push
scas
and
dec
test
mov
or
fidivrl
ret
out
xor
pop
rdpmc
les
sbb
dec
adc
fisubrs
jb
inc
adc
test
sbb
dec
in
movsl
movsl
or
cmp
sub
dec
stos
inc
popf
fs
movsl
push
scas
xchg
fdivrs
fdivrs
adc
sub
or
pop
xchg
movsl
inc
adc
jnp
iret
in
jl
xor
xor
repz
mov
and
fldl
movl
xor
int
or
lods
add
scas
popf
hlt
popa
fidivl
in
xor
leave
cmp
push
adc
cs
jp
mov
dec
out
movb
add
rcl
mov
adc
out
jb
cs
lahf
call
movsl
or
cmpsl
je
jmp
lcall
or
mov
ja
sub
ljmp
loopne
inc
or
divl
fldenv
push
xchg
push
cld
xchg
mov
cld
aaa
inc
dec
lahf
pop
sarb
vunpckhps
push
jge
ja
aam
ret
stos
fistpl
fs
xor
sub
lock
inc
sub
cmp
rorl
sub
add
shll
loopne
xchg
jnp
mov
stos
mov
in
jnp
das
push
or
rol
fbld
faddl
rclb
mov
pop
push
sub
fisubl
mov
cwtl
mov
cmpsb
arpl
movsb
jl
cmp
scas
nop
daa
cmp
mov
jle
xlat
shlb
into
test
jp
pop
je
jmp
xor
jae
mov
or
fiaddl
xchg
xor
jae
imul
add
gs
add
insb
lods
xor
mov
cmp
lods
pop
and
sbb
mov
popf
push
cmc
xchg
jp
jnp
fcompl
subb
add
or
fldlg2
sbb
fwait
pop
ljmp
fs
xor
inc
ret
cmp
cmp
push
xchg
mov
and
add
sbb
test
push
shl
lock
jne
xor
lock
add
inc
dec
mov
mov
adc
dec
jne
xor
out
mov
dec
mov
mov
add
inc
repnz
loop
sbb
in
push
mov
xchg
pop
xchg
mov
xchg
dec
adc
mov
lret
cmp
sbbb
push
mov
fistpl
jnp
add
cwtl
lret
bound
insl
add
pop
and
jl
ss
and
into
cmp
inc
dec
mov
mov
inc
dec
mov
call
add
arpl
repnz
inc
jecxz
jmp
mov
sbbl
cltd
loopne
push
dec
jo
dec
loop
cmc
ljmp
mov
jo
pop
xchg
dec
xchg
add
and
jge
cmp
or
jbe
scas
xlat
mov
and
mov
jp
scas
mov
enter
aaa
inc
add
lds
pop
fcmovnbe
push
lret
sub
lds
inc
or
add
push
cmp
push
lods
aam
xchg
push
xor
pop
add
add
gs
cmpsl
sub
adc
sahf
scas
addr16
negl
xor
add
xor
xor
xchg
test
icebp
push
mov
scas
sbb
pop
cli
sar
jecxz
enter
stos
es
arpl
cld
test
jae
ret
jecxz
mov
xchg
jl
jmp
mov
in
scas
pop
sub
push
jne
jnp
insl
push
or
pop
lock
xor
jnp
push
pushf
and
fisttpll
push
sbb
mov
cmp
xchg
mov
jne
pop
inc
cmp
das
ds
xor
mul
hlt
mov
jmp
jns
lods
lods
ljmp
and
add
sbb
lds
sbb
pop
aas
div
or
ss
adc
jl
push
xor
sahf
pop
leave
in
xlat
push
mov
jg
enter
into
icebp
clc
cmc
xchg
cmc
sub
std
das
xorb
pop
stc
jmp
imul
pop
int3
dec
nop
dec
push
iret
jb
cwtl
fistl
dec
mov
jno
aaa
sbb
pop
ret
scas
inc
sub
xchg
mov
jl
adc
xor
jmp
push
mov
aas
incb
cmp
je
pop
push
ds
imul
jo
gs
lods
and
add
xor
mov
enter
cmp
mov
xchg
pusha
adcb
mov
sbb
pop
lcall
dec
cmp
je
xor
xchg
push
aam
loope
xor
mov
scas
sub
inc
inc
fcompl
jmp
dec
sahf
icebp
in
jle
xchg
cmpsb
dec
or
lods
jne
xor
data16
jnp
aaa
test
arpl
or
mov
mov
mov
jb
inc
mov
and
sbb
adc
ds
inc
mov
pushf
mov
orb
inc
or
iret
sbb
fisubrl
dec
andl
sbb
xchg
dec
inc
fistpl
outsb
xor
daa
cmpsl
sbb
lcall
out
ja
into
neg
jb
mov
cmp
cltd
or
push
jmp
mov
adc
aad
sub
jne
lahf
push
pop
testb
or
cmp
lcall
xchg
or
xchg
ret
subb
sbb
push
out
push
push
dec
into
cmc
pushl
sbb
aas
fildll
adc
sbb
lods
es
xor
pop
xchg
jl
mov
jmp
fidivs
iret
add
loopne
sarb
push
xor
cmpsb
fnstcw
stos
in
pop
push
ss
cwtl
insb
int
xor
mov
jecxz
push
in
adc
xchg
push
in
clc
rorb
mov
lock
and
insl
movsl
lret
dec
cmp
out
dec
mov
in
adc
jle,pn
or
scas
arpl
xor
clc
popf
decb
out
cmpsb
insl
movsb
adc
jae
decl
add
xor
mov
pop
inc
xor
lock
stos
call
cmp
int3
fsubrl
xchg
jne
xor
mov
sub
sti
clc
outsb
js
aas
cmp
jbe
inc
lods
imulb
xorb
cli
add
lock
or
mov
pop
mov
fimuls
cmp
sbb
popf
gs
jecxz
jbe
out
into
mov
int
mov
fwait
cmpsb
dec
and
out
jb
mov
mov
daa
js
sarl
adc
jb
xchg
ret
clc
fdivrl
xchg
xlat
lret
push
movsl
jb
cmp
xchg
ss
test
out
pushf
dec
mov
adcb
jmp
pop
aas
out
mov
ds
dec
mov
test
inc
xor
rol
hlt
je
jno
xchg
push
dec
arpl
pop
mov
add
mov
lret
lea
adc
jp
shl
add
inc
xchg
jbe
pop
test
sub
push
xchg
add
in
mov
push
mov
xchg
xchg
xor
inc
push
push
shll
mov
fdivl
imul
cmc
aam
out
jb,pn
cwtl
mov
sub
sbb
sub
imul
push
lret
adc
xchg
jo
jae
mov
xor
mov
adc
mov
and
inc
stc
mov
out
scas
stc
dec
xchg
sub
push
inc
mov
pop
sbb
mov
cwtl
push
lods
sub
and
mov
cmp
stos
mov
add
dec
cmp
andl
or
add
gs
dec
sub
mov
outsl
in
mov
and
int
imul
loopne
aas
das
out
out
pop
imul
mov
adc
add
sti
dec
aam
stc
push
xchg
mov
ds
push
sti
mull
dec
sbb
fcomps
xchg
jbe
mov
mov
inc
outsb
jns
adc
push
rorl
push
cmp
add
push
mov
and
dec
push
wrmsr
or
sbb
les
mov
dec
pop
outsb
push
and
mov
stc
cld
dec
pop
es
or
or
daa
movsl
sbb
cli
outsl
aaa
xchg
xor
shll
push
sbb
pushf
xchg
jnp
aaa
repz
or
push
or
sbb
icebp
bound
and
pop
lret
mov
sub
mov
ret
mov
jge
pop
mull
sub
sarl
cmp
or
mov
add
push
mov
call
sarb
mov
bound
add
push
xchg
and
dec
imul
and
int
dec
jg
mov
push
movsb
mov
lret
loopne
xchg
sbb
xchg
push
insb
jmp
jo
iret
xchg
xchg
icebp
lret
daa
pop
cmp
leave
jmp
push
jg
pop
cmpsb
jo
nop
sub
xor
sub
jae
pop
adc
fisubl
add
lret
test
xchg
and
jg
cltd
mov
imul
repnz
fbstp
popa
mov
pop
sub
fwait
adc
push
push
push
adc
xor
adc
test
inc
jne
jmp
sub
orl
popa
pop
cmp
lea
orb
adc
xchg
ds
pop
add
mov
and
mov
push
cmp
test
xchg
fsubrs
aas
shufps
sbb
sti
xchg
rorb
cmp
and
mov
pop
fisubs
pop
cmp
les
in
push
fldt
stc
add
xchg
push
sub
add
sbb
pop
movsl
rcrb
xor
pop
call
shrb
in
mov
out
push
adc
pushf
sub
out
lods
scas
xchg
and
sub
or
stos
jle
scas
lcall
cld
dec
mov
lock
xchg
xor
std
daa
ret
popf
xor
lea
dec
jb
stos
add
test
mov
sub
negb
movsb
push
inc
dec
adc
adc
xchg
sbb
cld
xor
inc
pop
aas
mov
push
ret
pop
pusha
mov
pop
and
mov
pop
repnz
sub
xor
subl
mov
cmp
push
sbb
lea
movsb
sti
sub
outsl
add
cmp
jecxz
shlb
sub
hlt
les
sub
orl
pop
test
or
subl
push
mov
push
jl
jecxz
test
out
lret
mov
or
fiaddl
loop
popa
imul
cmc
repnz
jo
inc
mov
imul
jecxz
cld
cmpsb
cmp
xchg
pop
outsb
sbb
jge
arpl
and
inc
add
mov
xor
adc
repz
ljmp
pusha
fdivl
in
ljmp
lret
xchg
mov
or
adc
jne
mov
push
sbb
pop
jecxz
pop
mov
movsb
xchg
jnp
out
push
and
mov
out
and
adc
orl
jp
mov
setge
es
mov
roll
in
jl
sbb
mov
jb
mov
add
cmc
repz
push
cmp
cmpsb
cmpsl
clc
lock
sahf
cld
sub
mov
cmc
loope
or
push
data16
adc
add
imul
ljmp
pop
inc
fistps
xorl
xchg
xor
dec
xchg
push
add
add
idivl
in
fistpl
in
xor
mov
jnp
add
arpl
xor
popf
mov
popa
mov
ret
push
dec
sub
push
andl
xor
mov
pop
push
jnp
cli
push
js
or
lret
dec
mov
inc
test
mov
popf
call
data16
mov
push
fisubl
loopne
inc
push
mov
dec
popa
aas
inc
daa
scas
pop
aad
dec
lcall
icebp
or
xlat
sbb
push
mov
sarl
subb
cwtl
lds
into
xchg
sbb
mov
test
mov
pop
int3
add
pop
ret
out
mov
mov
stos
fisubl
repz
mov
popf
out
xor
ja
adc
push
dec
andb
clc
mov
sbb
out
mov
fcmovu
sbb
and
push
pop
and
mov
sbb
out
inc
mov
pop
adc
mov
adc
push
out
popa
inc
xor
addb
adc
pop
test
lret
lcall
add
test
gs
mov
dec
inc
leave
inc
lret
and
insb
aaa
jae
add
mov
arpl
xorb
mov
out
cli
mov
imul
aaa
jnp
push
leave
pushf
xchg
test
lods
in
aas
mov
mov
jl
int
mov
mov
adc
test
mov
mov
hlt
dec
lcall
mov
sub
sbb
daa
shl
mov
rorb
push
cwtl
or
xor
jmp
lds
inc
test
cmp
enter
push
fisubrl
cmp
roll
pop
pusha
movsl
ds
jnp
fdivl
pusha
inc
jl
scas
jle
or
ret
adc
push
sub
xchg
lret
sub
xor
enter
aad
push
lods
idiv
cli
jle
sub
push
out
push
mov
mov
and
frstor
dec
gs
add
push
push
outsb
shll
movsb
jno
cmpb
dec
mov
adc
cmp
push
adcb
cmpsb
inc
mov
test
int3
jecxz
and
adc
std
nop
out
jb
roll
sbb
mov
xor
fstpl
adc
xchg
mov
mov
gs
shlb
bound
imul
push
les
ror
jmp
pusha
imulb
fisttpll
and
mov
and
xor
push
fstpt
jo
ficoml
jns
pop
scas
jbe
jle
inc
ret
inc
jp
adc
int3
add
mov
and
push
xor
dec
xchg
rcll
insb
imul
adc
out
mov
mov
testl
hlt
sub
mov
ljmp
push
inc
lret
jo
mov
jle
jb
iret
mov
jmp
jl
subl
lds
mov
sub
cmp
fidivrl
icebp
cltd
pop
outsl
jnp
sbb
dec
jg
cmpsb
cmp
cwtl
stc
js
cmpsb
jle
push
jp
cmp
xchg
imul
out
inc
insb
sti
and
xchg
popf
shlb
std
adc
or
mov
test
stc
push
mov
or
mov
in
add
push
dec
sub
mov
sub
xchg
nop
xchg
in
pop
xor
pop
xchg
xchg
mov
daa
inc
push
xchg
inc
add
xor
stc
pop
cltd
icebp
inc
dec
xchg
stos
fdivrl
add
int3
push
xor
mov
or
cwtl
pop
inc
outsl
mov
out
add
or
imul
dec
and
mov
mov
ljmp
mov
fdivl
fnsave
xor
dec
jbe
xor
pushf
inc
cmp
hlt
repz
push
lea
pop
mov
daa
cmp
inc
aam
dec
inc
pop
pop
mov
pushf
xlat
aam
pusha
pushf
mov
sbb
pop
ret
mov
mov
mov
mov
mov
sahf
lds
sarl
aas
inc
mov
out
sub
mov
adc
movsl
mov
ja
add
add
mov
stc
xor
addr16
push
sub
data16
mov
mov
add
mov
mov
leave
scas
xor
push
flds
and
xchg
jb
stos
repz
mov
mov
popf
out
xchg
jo
nop
cmp
xchg
cmp
aam
pop
xchg
inc
roll
aas
fstpl
aas
cmp
dec
mov
dec
cmpsl
ja
mov
jne
pop
sub
add
fsubrs
push
rorb
jne
lret
repz
je
movl
sub
popa
sbb
xor
pop
mov
in
jne
xor
leave
dec
je
rcrl
test
push
pop
mov
int3
les
adc
dec
xor
int
inc
cmp
xor
ret
adc
test
mov
into
mov
and
fisubrl
sub
sub
lds
daa
pop
push
pop
in
inc
adc
ja
sahf
popa
xchg
in
dec
jecxz
mov
mov
mov
pop
jle
dec
sbb
cwtl
mov
add
stos
insl
pop
and
cmp
mov
push
mov
repnz
or
call
lret
and
scas
cmp
pop
ficompl
inc
lods
adc
cwtl
cmp
inc
xor
add
sub
add
pushf
aam
das
cs
pop
into
mov
out
mov
mov
cs
and
xor
scas
pushf
sbb
outsl
inc
mov
popa
jns
push
ret
inc
xor
call
pop
dec
enter
sub
mov
pop
sbb
cmc
add
movl
insb
ljmp
pop
dec
sub
mov
push
push
dec
test
push
fstp
sbb
xchg
movsb
mov
ja
pop
pop
out
mov
lods
push
repz
es
out
movsl
lcall
test
add
xor
dec
xchg
jo
xchg
pop
cmp
xchg
das
lfs
sbb
ret
jmp
and
mov
mov
inc
adc
push
and
enter
or
stos
cli
dec
push
lret
pushf
xor
bound
xchg
data16
mov
aas
xchg
sub
jl
out
cmp
cmp
cmpsb
lret
push
sbb
ficoms
repz
adc
in
ret
testb
mov
mov
mov
js
std
data16
test
pop
xor
js
negb
jp
and
shll
outsb
dec
cmp
enter
jo
pop
xchg
sbb
mov
stos
lret
cld
outsb
insl
push
adc
sarl
and
ret
fistl
std
cmp
inc
push
sbb
cld
cli
fldcw
pop
movsl
or
faddl
jmp
xchg
mov
mov
pushf
lcall
sbb
cmp
mov
loope
sub
dec
decl
test
lds
imull
inc
outsb
add
sub
fcmove
cmp
addr16
sti
call
push
ret
xchg
ss
mov
inc
mov
or
shl
subb
mov
scas
dec
xchg
push
stos
mov
xor
and
sbb
cmp
adc
push
lds
outsb
hlt
mov
stos
cmp
xor
pop
testb
or
dec
mov
mov
cwtl
in
outsl
xchg
adc
mov
cli
aam
mov
clc
ja
and
mov
mov
and
push
cs
sub
mov
xor
inc
test
aam
or
insl
cmpsl
stc
cltd
insl
adc
pop
popa
or
lods
pusha
daa
mov
mov
cmp
cmp
sub
lret
pop
inc
aad
int
inc
xor
movsb
adc
push
jne
pop
mov
imul
push
aaa
xchg
lret
and
jmp
es
mov
ror
xchg
sbb
repz
xchg
push
loope
push
data16
rolb
std
stos
xchg
inc
mov
adc
int3
icebp
jle
dec
int3
and
or
cld
lds
mov
in
imul
mov
push
cmpsl
xchg
pop
mov
or
mov
lret
adcb
out
dec
aaa
push
gs
out
dec
pop
mov
cwtl
mov
dec
xchg
sub
imul
xor
test
cmp
cs
mov
rcrb
mov
mov
inc
out
xchg
cmp
pusha
jp
add
aas
out
imul
mov
cmp
ret
mov
and
leave
aaa
add
lret
scas
mov
fistpll
xchg
mov
mov
sub
scas
push
es
shrb
fisttpll
sarl
into
push
aad
inc
cmc
dec
cmp
fisttpll
das
xchg
mov
cmp
lock
push
cmp
xchg
call
popf
out
xor
fwait
pause
cmp
inc
mov
xchg
pop
pop
add
arpl
dec
add
cld
pusha
sub
popa
les
inc
fld
jmp
cld
lahf
dec
jp
sub
xchg
pusha
jmp
jbe
dec
lahf
push
test
push
call
fdivl
ret
sub
adc
jae
bnd
repz
insl
mov
lret
mov
xchg
jmp
lock
lret
cmpsb
aad
push
cmpsb
clc
mov
iret
mov
scas
fldcw
fildl
inc
cmp
in
fildll
cltd
dec
test
add
aam
inc
push
ret
cwtl
mov
in
iret
stc
sub
pop
mov
sub
in
push
scas
repnz
lret
dec
mov
fnsave
or
dec
sbb
ja
into
sbb
inc
dec
in
push
pop
cmp
jmp
push
push
ret
mov
mov
fstpl
leave
in
idiv
leave
add
mov
lds
js
xchg
jne
fstpl
inc
pusha
mov
scas
jge
cmp
addr16
jo
pushf
dec
int
fs
dec
push
xlat
add
lahf
push
frstor
dec
sub
jp
jg
scas
into
add
sbb
jg
mov
popf
aas
and
test
sar
xor
adc
jns
cmpsb
push
inc
ret
in
xor
les
test
mov
scas
aam
stc
sbb
push
inc
mov
xlat
adc
xchg
lds
stos
inc
cmp
adc
mov
ret
inc
cld
lods
clc
mov
aam
mov
mov
dec
pop
inc
mov
cmpb
add
fwait
pushf
push
add
xabort
cmp
imul
adc
push
jns
shr
leave
push
sbb
cli
call
pushf
jge
icebp
fwait
mov
subl
inc
ja
add
cmp
flds
pop
push
imul
sub
adc
mov
sub
in
ja
push
cmp
fisttps
mov
push
cltd
mov
mov
and
test
call
clc
pop
cmp
pop
xchg
inc
cmp
jnp
jge
ss
xor
fistl
inc
adc
or
sub
rol
arpl
js
lahf
adc
mov
cmp
mov
xor
inc
stos
movsl
shl
not
bound
pop
cmp
mov
negb
lock
cli
xor
jl
push
movsb
add
mov
add
jmp
dec
mov
mov
or
mov
xchg
das
scas
add
jp
mov
or
sarb
jmp
lret
push
pop
sub
lea
push
xchg
jmp
cwtl
test
imul
or
les
test
in
pusha
ret
jp
fwait
cmpsl
pop
int
pop
add
xchg
xor
lds
sub
xchg
out
push
scas
pushf
sub
out
out
or
fsubl
jecxz
sbb
out
les
gs
jmp
push
jb
inc
mov
fwait
arpl
repz
ss
sti
fsubrs
scas
iret
xchg
daa
xor
jae
test
fwait
stc
push
xlat
or
les
mov
imul
push
adc
enter
sar
mov
aas
shlb
fmulp
or
in
imul
pop
insl
push
xlat
stos
mov
inc
xchg
dec
xlat
add
jb
pop
xor
std
xchg
insb
adc
sub
add
ljmp
add
fnsave
repnz
xorb
je
sarb
outsl
sub
repnz
xchg
pop
xchg
fnstcw
adc
insl
adc
arpl
fstp
add
jbe
push
cli
subb
int3
jb
cmp
or
push
xchg
ss
outsl
adc
into
add
xchg
dec
leave
add
adc
cmpsl
enter
arpl
add
outsb
mov
fsts
fildll
xchg
jp
daa
call
fpatan
and
in
test
movsl
xlat
push
xor
dec
xchg
xchg
js
pop
sbbl
push
popf
ret
pop
push
test
mov
aaa
inc
gs
in
enter
xchg
inc
pop
jnp
jns
bound
iret
jno
and
jecxz
das
jmp
mov
mov
fnstcw
leave
clc
inc
jmp
xchg
jle
push
push
mov
cmp
fcompl
adc
lea
ret
adc
aad
imulb
sbb
and
into
shlb
inc
stos
and
pushf
stos
jno
daa
shrl
loope
pushf
add
and
scas
mov
cld
shr
xchg
cmp
pop
mov
ds
mov
and
sub
inc
push
imul
mov
and
sbb
dec
insl
xchg
fildl
movsl
pushf
add
inc
and
pusha
sub
inc
cmp
xor
shlb
add
sub
sub
inc
sub
cmp
dec
sbb
nop
sbb
xor
pop
outsl
cmc
hlt
jl
aad
pop
loopw
sbb
stc
stos
fldt
sub
add
inc
popf
call
jmp
incl
add
daa
outsb
gs
stc
add
dec
pop
aaa
xchg
sbb
loop
int3
jmp
cli
dec
fldl
lds
or
push
stos
movl
mov
add
mov
add
push
dec
dec
inc
imul
and
std
push
lcall
dec
outsl
orb
or
ret
push
push
cmc
iret
inc
inc
lret
mov
inc
mov
xchg
cwtl
adc
push
out
pushf
dec
jl
cmc
mov
sub
or
mov
out
sti
mov
sub
mov
xchg
icebp
adc
dec
or
inc
cmpsb
cmp
inc
call
pop
xor
pop
loop
mov
push
pop
daa
add
or
sub
and
jecxz
push
dec
lcall
fs
sbb
jg
or
dec
xchg
and
inc
subl
push
dec
stc
shll
ljmp
sti
xchg
sbbb
sub
cltd
add
jmp
pop
or
cs
and
xchg
sbb
push
stc
xchg
mov
sub
clc
imul
movsl
mov
rorb
movsb
popf
outsl
dec
adc
jne
adc
mov
xchg
clc
test
daa
out
outsb
or
fimuls
add
xor
push
stos
fnstcw
cmp
mov
inc
xor
xchg
pushf
mov
push
push
ja
mov
daa
sarb
ret
adc
into
sub
shl
addb
or
mov
pop
xchg
pop
mov
sbb
dec
leave
or
jp
outsb
push
je
push
rcrl
movsl
jne
mov
ret
mov
ficompl
add
mov
push
outsl
aaa
push
mov
jg
ficompl
jno
cli
sbb
sahf
repz
or
cmp
lret
dec
sbb
xlat
mov
xchg
xchg
dec
bound
mov
xor
frstor
pop
fwait
roll
hlt
cmp
ss
dec
js
lods
pop
cmp
insl
jo
fstpt
sub
incl
cmp
add
cli
xchg
fimull
fdivrl
lcall
inc
pop
negb
pop
shrl
loop
adc
rolb
adc
cmp
inc
mov
repnz
mov
adc
push
add
hlt
les
sarl
clc
push
icebp
add
push
ficompl
sbb
movsb
sbb
lods
cmpsb
jae
jb
sbbb
aas
out
pop
sbb
ficoml
mov
ret
int3
ja
mov
adc
shr
arpl
dec
ret
sub
push
insl
jb
lcall
pop
out
and
pop
adcb
mov
mov
loop
ja
shrb
add
addr16
mov
dec
call
out
push
int3
dec
sub
iret
cmpsl
popa
mov
cmp
or
imull
int3
push
and
and
xor
jae
iret
jecxz
leave
push
jmp
inc
out
loop
stos
mov
dec
push
out
and
sbb
cld
lea
das
popa
test
nop
sub
jp
mov
dec
xchg
hlt
and
outsl
sbb
dec
sub
sub
insb
mov
mov
push
daa
out
inc
push
xchg
add
push
xchg
xchg
scas
test
jmp
stc
sub
sub
mov
push
fwait
inc
pop
cmc
dec
jecxz
mov
lret
jns
mov
pop
sarb
lcall
sbb
jb
insb
cs
push
jne
or
or
add
cmp
add
pop
out
pop
repnz
push
repz
lods
dec
aas
jl
dec
cmpsl
lds
or
ds
aad
test
cmp
sbb
xchg
xchg
mov
insl
jp
mov
mov
or
sbb
pop
repnz
pop
mov
mov
jg
ds
mov
xchg
inc
test
cmpsb
aas
stos
and
jns
dec
ljmp
inc
mov
add
lods
xor
pop
sbb
pushf
push
out
test
popa
out
out
xor
or
push
lcall
mov
push
mov
sbb
mov
cmp
je
jne
into
xchg
aas
mov
scas
popf
jg
loopne
ret
jl
dec
mov
add
call
xchg
jle
xlat
test
scas
lahf
sub
ret
repz
dec
mov
adc
leave
addr16
pop
out
outsb
xor
fsubr
icebp
jno
sbb
mov
mov
or
pop
movsl
and
dec
cmp
xchg
cmpsl
sbb
stc
call
mov
pushf
push
out
leave
shrb
xchg
or
add
and
in
repnz
sti
fdivl
sub
test
jge
pop
ss
pop
lret
pop
ffree
popf
push
xorl
pop
push
cmp
cli
cli
mov
out
push
test
ficompl
inc
jns
testl
push
mov
shll
out
pop
mov
out
std
insl
sbb
sarb
mov
in
mov
push
sub
inc
nop
mov
xor
daa
in
xchg
inc
sbb
ds
gs
data16
in
inc
xchg
iret
das
xlat
icebp
ja
jae
cs
nop
insb
dec
mov
cs
xchg
js
push
cmp
call
das
push
fdivrs
test
arpl
inc
fisubl
or
adc
les
inc
add
mov
fwait
pop
push
mov
adc
jbe
ja
cmp
sahf
or
andl
sbbl
push
sar
add
sahf
lds
pop
into
xchg
loope
mov
jnp
mov
cs
enter
aam
lret
fisubrl
pop
cs
dec
xchg
das
push
mov
or
sbb
pop
fmuls
sahf
data16
outsl
std
jo
lods
orb
fisubs
les
ficoml
in
sbb
add
push
xor
ljmp
jns
movlhps
popa
fmull
sub
dec
cltd
and
jbe
dec
xorl
fcoms
dec
shl
add
sub
cmp
dec
sub
push
cmp
push
jns
mov
pop
jbe
dec
lahf
inc
je
rcr
mov
xchg
cmc
test
xor
sti
dec
cmp
lahf
xor
and
or
call
or
pop
rorb
jne
call
out
pushf
dec
fstpl
icebp
std
cli
aas
mov
push
jp
mov
add
movsl
shrl
pop
push
mov
or
sti
jnp
leave
mov
clc
loopne
ljmp
sbb
cmp
bound
inc
divb
add
jecxz
jno
inc
js
xchg
or
aad
fldcw
mov
fdivrp
sbb
shr
push
iret
push
mov
mov
sub
sub
adc
push
lock
scas
sub
arpl
xchg
push
jnp
jle
and
nop
mov
adc
add
and
je
js
ret
add
and
clc
dec
pusha
ud2
mov
xchg
push
xchg
lret
sarl
jne
jge
cmp
mov
ljmp
push
movsb
loop
fldcw
or
lds
or
shll
movsb
mov
mov
push
cmpsl
pop
mov
push
insl
pop
inc
or
adc
pop
sahf
mov
jno
in
jg
push
mov
outsl
in
xor
les
sub
insb
jmp
insl
inc
or
sub
imul
mov
sbb
aam
add
mov
inc
dec
xchg
test
xor
pop
xchg
out
loope
sub
subl
adc
dec
jge
fs
push
sbb
xchg
or
test
mov
jecxz
mov
mov
sbb
out
mov
gs
push
int3
cld
sub
lods
imul
pushf
adc
cmp
std
in
dec
xchg
subl
movhps
cmp
sub
xchg
push
mov
lods
adc
lret
inc
add
aas
mov
ss
loop
pop
lcall
push
mov
fisubrl
mov
cs
cwtl
je
jg
mov
fisubl
clc
inc
pop
icebp
fstl
fldt
imul
inc
and
xlat
mov
int3
xor
je
sub
dec
shlb
test
xor
adc
adc
or
adc
daa
or
dec
xchg
jno
or
mov
fsubp
loopne
les
test
dec
ljmp
jg
cmp
and
sbb
pushf
xor
gs
cmp
xchg
setge
ret
hlt
scas
cmp
cld
cmpsb
push
loop
call
mov
add
mov
pop
sub
add
jae
ret
or
rcrl
sbb
add
aam
or
out
hlt
fwait
mov
add
gs
not
or
xor
sub
jno
inc
scas
sti
jp
and
insl
jnp
in
mov
insl
mov
sub
sti
mov
lods
pop
xchg
lret
leave
aad
icebp
roll
jnp
push
cmpsb
jne
mov
cmp
inc
inc
fdivs
mov
iret
in
cmp
push
mov
shll
inc
or
jnp
lret
mov
mov
add
insb
divl
adc
jle
sbb
inc
shrb
or
std
add
scas
mov
mov
insb
frstor
shl
jb
aas
mov
cmp
xor
or
out
or
dec
inc
insl
jge
shl
dec
test
pushf
into
xor
pop
jl
nop
ret
jmp
pusha
push
xchg
push
jecxz
aas
add
xlat
test
inc
aaa
leave
rcll
stos
mov
mov
out
jge
rcll
sub
fs
adc
into
adc
adc
xchg
adc
popa
mov
jo
daa
dec
cmp
mov
dec
ja
jmp
ja,pn
push
xor
inc
lcall
add
push
cmp
mov
adc
insl
popa
test
jo
inc
push
adc
xchg
ss
add
sbb
mov
loopne
cmp
imul
fcoms
pushl
jmp
js
jmp
xor
sub
popf
cmp
mov
negb
lods
bound
push
cli
jno
div
inc
push
daa
mov
push
jnp
pop
sbb
adc
roll
pop
jne
movsb
hlt
loop
ja
mov
aas
stos
mov
ret
sbb
mov
jge
mov
add
adc
pop
nop
inc
xchg
ret
pop
dec
add
sti
fisttpl
or
xchg
push
sub
fmull
fs
ss
lret
mov
sbb
ss
sbb
loop
into
stc
jae
add
loope
push
movb
sub
in
pushl
jl
rcll
in
mov
repnz
in
aad
leave
push
test
cwtl
adc
pop
push
mov
int
insb
dec
push
sahf
arpl
sbb
jg
push
daa
or
push
jecxz
outsb
dec
shll
adc
mov
daa
add
aam
xlat
sarl
fld
fdivl
xchg
mov
xor
cmovl
fs
jp
dec
jecxz
mov
jnp
aaa
pop
jle
add
scas
std
cmp
and
cli
icebp
testl
fsubrs
cltd
xchg
test
insl
repnz
loope
in
mov
mov
aad
pop
addr16
ror
fimull
dec
and
fcomp
movsl
cmp
stos
stc
jmp
xchg
xchg
lret
and
pushf
xchg
aam
sub
dec
icebp
lock
or
adc
lahf
push
ja
lcall
push
and
add
cli
mov
hlt
jno
cmpsb
int3
lret
jle
icebp
push
faddl
jno
in
mov
and
lret
das
push
aas
dec
jae
xchg
seto
mov
add
mov
sti
add
movsb
pop
clc
in
stc
mov
fildl
jae
mov
push
xor
mov
int
inc
cmpsb
in
lret
dec
push
inc
pop
jb,pt
stos
adc
cmp
cli
cltd
mov
jecxz
pop
into
pop
shl
fcmovne
lock
out
mov
idivb
push
pop
aas
push
loope
mov
pop
jo
pusha
js
cmpl
loope
sbb
mov
cmpsl
inc
and
jmp
lock
int
in
test
mov
jns
xchg
subb
lret
fstpt
dec
pop
pusha
sbb
popf
push
jl
popf
cs
fdivs
pop
in
xchg
or
push
xor
loopne
dec
fs
aas
and
aas
jmp
add
out
jnp
jge
fisttpl
dec
push
and
xor
scas
dec
mov
cmp
cs
fimull
in
push
test
jmp
jb
out
push
outsb
loopne
inc
xchg
andb
or
or
mov
ljmp
mov
mov
and
loop
dec
pop
sbb
sub
jp
push
subl
movsb
push
leave
gs
js
cli
lods
mov
mov
outsl
cli
add
mov
int
lahf
scas
test
xchg
testl
dec
jle
push
call
adc
sarb
xor
xorl
sbb
xor
in
je
lret
pop
testl
ret
mov
outsl
cmp
stos
stos
push
rorl
inc
movsb
rorl
or
daa
jbe
sub
xchg
es
xchg
les
test
inc
mov
aas
mov
addl
push
jecxz
ret
mov
push
sbb
push
idivb
push
imul
and
push
pusha
cli
sahf
xchg
fsubrp
aam
inc
addr16
cmp
dec
rcll
jmp
sbb
adc
dec
dec
pop
cs
dec
add
sbb
rolb
and
xchg
add
imul
and
adc
sbb
fistps
aam
add
lcall
jb
pushf
mov
pop
xor
xor
movsl
leave
lods
dec
scas
imul
pop
pop
lods
nop
ljmp
cli
les
push
cmp
sbb
clc
pop
lret
push
cltd
pusha
cmpsl
cmp
lcall
mov
add
je
orl
ljmp
ja
or
pop
sub
push
jge
pushf
dec
xchg
pop
push
sbb
xlat
xor
push
fs
insl
cmp
xor
jo
leave
xchg
aam
aam
aam
pop
or
adc
push
cmp
in
lds
outsb
jnp
out
sbb
push
fidivl
xor
or
add
dec
and
daa
jno
mov
cmc
outsl
sub
fwait
cmc
ret
mov
inc
mov
inc
sub
push
cmpsb
xchg
icebp
add
add
loopne
shrb
insb
inc
xchg
jne
cltd
cwtl
or
or
movsl
int3
outsl
sub
adc
pop
movsb
out
or
mov
test
push
in
movsl
pop
out
cli
mov
jp
shrl
pusha
clc
pop
push
aaa
xchg
inc
xlat
mov
nop
cli
cli
and
inc
cmp
or
sub
mov
fcmovb
add
dec
cmp
shlb
add
and
push
and
mov
sub
sbb
fsubrs
jne
mov
push
add
adc
lock
mov
mov
jbe
shrb
lods
push
cmp
fbstp
sbb
shlb
pop
xor
pop
jmp
jo
je
dec
add
adc
hlt
ja
pushf
cltd
ja
rolb
and
and
cmpl
push
pop
add
xchg
inc
fisttpl
mov
pushf
pop
loope
clc
aad
or
mov
int
adc
stc
or
addr16
fmuls
or
xchg
inc
lcall
pop
jp
adc
sub
mov
test
sub
flds
cmpsb
cmp
enter
fnsave
dec
sbb
in
arpl
mov
fimuls
out
jg
roll
xchg
fwait
push
push
inc
cli
dec
scas
xchg
pop
bound
lret
imul
pop
xor
iret
rcrl
xchg
lock
outsl
xchg
mov
add
mov
xchg
loope
xor
outsb
mov
cmp
add
inc
push
jp
in
and
push
mov
mov
cli
push
mov
shll
test
cmp
popf
repz
arpl
pop
sub
mov
sub
cmc
or
bnd
or
jns
cmpsl
jge
mov
movl
ss
sub
sarb
jmp
add
cmc
das
cmp
sbb
loope
sub
mov
jge
aas
stos
fs
inc
mov
add
cmp
sarl
pop
or
lea
adc
adc
mov
stc
ret
enter
subb
stos
loop
test
xchg
xlat
mov
xor
cmp
sbb
dec
sbbb
xor
adc
xchg
out
repnz
lea
add
sti
pop
addb
push
aaa
sarl
mov
inc
jl
pop
jmp
add
cmpsl
daa
imul
push
dec
dec
or
outsl
pop
sbb
pop
push
xchg
out
cmp
sbb
jbe
leave
mov
into
rcr
shr
out
sub
icebp
cld
fcomip
ss
outsb
pop
cwtl
jp
xor
mov
push
and
mov
iret
and
lods
aaa
hlt
lds
jge
mov
mov
outsl
or
xor
lcall
fnstenv
cld
xor
subl
xchg
nop
push
test
rclb
jbe
arpl
sti
stc
and
mov
mov
jne
and
fildl
push
xchg
leave
dec
mov
aam
sarb
imul
jns
jecxz
xchg
ret
in
jnp
cld
int
add
or
icebp
arpl
xor
mov
push
in
xchg
aad
sbbl
cmp
das
and
ret
mov
pop
mov
icebp
ds
add
cld
jge
mov
cmpl
adc
scas
call
xlat
add
movsl
jnp
int3
cld
les
call
xchg
loop
fs
cs
xor
mov
fs
cmpsb
sub
sbb
outsb
jns
xor
out
ret
cmpsl
jge
mov
je
xchg
bound
aam
push
sub
incb
cltd
jg
xlat
outsb
lret
lods
xor
jl
sti
icebp
or
in
adc
xchg
jno
out
ljmp
mov
fistps
and
push
fsubrl
repnz
les
mov
movsb
repz
pushf
pop
mov
cld
xor
xor
loopne
xchg
mov
or
jecxz
sub
xchg
js
sbb
lds
cmp
fidivl
movsb
add
ret
push
fbld
movsl
lds
fbstp
sub
testb
rep
insb
out
mov
js
sbb
adc
andb
sbb
xlat
mov
fldt
enter
lret
ss
addr16
xor
push
pop
cmp
mov
push
test
shl
es
aas
sbb
cs
inc
or
pop
xchg
add
into
je
stos
jnp
fdiv
outsb
jl
sub
push
adcb
movsl
mov
sub
ret
das
clc
cmp
xor
mov
or
sub
data16
aas
fs
in
rclb
ffree
es
push
lods
push
xchg
add
xor
pop
scas
mov
adc
ss
adc
movsb
jno
mov
push
pop
shlb
pushf
xchg
mov
leave
ror
andl
xchg
decl
in
insb
mov
out
xor
push
adc
pusha
mov
cmp
pop
mov
nop
and
cmp
cmpsb
inc
xlat
xchg
mov
mov
js
adc
cmp
xlat
inc
sarl
jo
push
mov
and
int
pause
inc
pop
mov
pop
out
lock
mov
jge
inc
lcall
adc
and
fs
sbb
push
ss
fwait
sbb
add
out
mov
cmp
stos
sahf
xchg
mov
xchg
outsl
cmp
popf
mov
jbe
ret
xor
or
cmp
xor
jge
loope
int
pop
add
hlt
into
mov
inc
and
les
lea
xchg
or
adc
mov
pop
cwtl
adc
andl
sub
inc
fbld
arpl
inc
cmp
push
shrl
pop
outsb
cmpsl
push
push
jbe
push
pop
rolb
add
ret
filds
shrb
push
cmp
notb
addr16
sub
fsubl
jb
mov
inc
sub
roll
int3
jae
mov
clc
mov
movsb
cmpsl
sbb
pop
stos
and
lret
stos
vdivps
cwtl
test
jl
and
push
inc
or
dec
out
dec
and
icebp
jbe
nop
lcall
mov
or
pop
std
or
test
sbb
icebp
div
mov
nop
xchg
es
adc
lret
filds
pop
leave
pop
dec
pop
xchg
out
xor
enter
or
testb
dec
xchg
cmp
mov
cmp
lahf
decl
xor
inc
mov
test
mov
mov
in
arpl
ds
aad
outsl
scas
jg
sti
popf
testl
pop
cmp
ret
sub
xchg
mov
outsb
cwtl
leave
insb
push
fbstp
mov
xor
outsl
xchg
fnstcw
add
js
pop
andb
pop
lea
and
pop
sbb
in
inc
loopne
add
in
shll
ss
les
out
rorl
aam
into
popf
int3
lahf
jo
hlt
push
or
mov
dec
xchg
mov
mov
push
push
mov
add
sub
int3
mov
test
jl
xchg
int
pop
out
push
pop
cmp
stos
aad
fs
test
cltd
sahf
adc
pusha
popf
imul
and
or
fisttpll
push
adc
jp
sub
fcmove
filds
fs
mov
aaa
mov
sbb
cld
cmpsb
test
and
mov
xor
cmp
pop
lods
mov
dec
aam
icebp
mov
leave
lcall
nop
pop
push
into
not
loopne
out
arpl
mov
movsb
fmulp
add
sahf
xchg
inc
dec
dec
add
mov
xchg
mov
in
popf
xchg
out
mov
rclb
lcall
insb
pop
xchg
fisttpl
iret
mov
inc
test
fwait
lret
gs
inc
ss
pop
ss
xlat
pushf
cli
pop
mov
outsl
mov
or
mov
leave
xchg
mov
xor
lods
nop
jns
cmp
into
or
inc
and
test
adc
outsl
stos
cld
jmp
mov
pop
cmp
popf
ljmp
xor
orl
push
mov
outsl
xchg
int3
lock
lock
pop
cs
fisttpll
xchg
xchg
inc
push
xlat
test
loope
push
call
push
xchg
rol
dec
pop
dec
mov
sti
push
jo
mov
xor
sbb
dec
pushf
outsl
lods
out
inc
inc
ja
orb
or
repnz
inc
add
sub
call
bsr
pushf
push
clc
lret
rcrl
xchg
push
and
into
mov
into
nop
push
ror
push
or
mov
js
aas
xchg
lcall
inc
xor
dec
loope
lret
mov
inc
xor
lea
mov
rclb
xor
sub
jmp
pop
sahf
shll
mov
cmp
ficompl
out
dec
push
mov
jmp
and
daa
mov
shlb
lcall
push
push
bound
add
push
fdivr
insb
ss
cld
xor
sub
cmp
inc
inc
fnstcw
aas
cmpsl
add
sub
in
inc
dec
repnz
test
fidivrl
lahf
nop
push
lret
repnz
or
arpl
dec
aaa
sbbl
inc
sbb
push
or
xchg
mov
scas
repz
lods
popf
popf
les
xchg
test
or
dec
push
xor
in
aam
sbb
jg
lods
hlt
ss
lret
popa
data16
xchg
mov
rcrb
movsl
push
lcall
std
push
xchg
xor
cmp
adc
sub
mov
lock
sub
jle
repnz
pusha
iret
insl
push
add
dec
jge
stc
push
xchg
xor
outsb
mov
dec
lods
push
in
hlt
out
xchg
je
fildl
mov
add
pop
mov
imul
mov
lret
jmp
dec
movsb
add
xchg
ljmp
enter
in
lcall
xchg
mov
ficoms
addr16
jno
icebp
xor
and
ja
pop
or
sarb
mov
in
mov
insl
adc
or
or
add
and
imul
sub
xchg
and
lret
jp
stos
jno
mov
repnz
loopne
xor
xchg
jle
pop
xchg
pop
pop
and
xchg
add
xchg
sub
xor
dec
in
addr16
sub
mov
dec
adc
dec
push
adc
sti
lods
pop
and
out
lods
sub
fwait
xor
jb
mov
aas
cmp
pop
inc
loope
xchg
test
leave
pop
les
das
outsb
movsb
or
jecxz
int3
add
fdivp
je
mov
fimull
pop
outsl
jne
xchg
jl
movsl
sub
or
int
bound
pop
insb
subb
lret
sub
inc
popf
repnz
aaa
mul
movsl
adc
cmp
sub
and
pop
inc
and
jmp
fsubrs
sub
pop
push
out
inc
add
xchg
lods
cmp
mov
ret
stc
int3
negb
test
dec
daa
ror
sub
scas
in
fstp
js
mov
sti
in
add
adc
cld
cmpsb
inc
cmp
out
push
add
xchg
xor
inc
fisubs
sbb
and
sahf
pop
push
je
jecxz
add
and
mov
push
add
pop
push
out
ret
mov
scas
adc
xchg
js
push
imul
fisttpll
jo
es
xchg
fdivs
mulb
std
call
fisttps
xor
sti
les
fcoms
movsb
sbb
fcoml
push
fcmove
xor
add
sbb
loopne
pushf
or
mov
aam
pop
cli
cli
mov
iret
lds
test
int3
sahf
cwtl
pop
lods
push
adc
not
inc
std
out
jo
rorl
mov
in
repnz
rolb
ss
scas
jbe
cli
jmp
scas
rcrb
popa
and
ljmp
loopne
jle
roll
in
or
lret
cmp
push
inc
loop
jecxz
inc
xchg
sub
pop
dec
or
pop
hlt
imulb
mov
popa
inc
mov
adc
int3
mov
incl
mov
xchg
xchg
ljmp
cltd
jb
inc
adcb
out
xor
or
pop
aas
test
jmp
push
in
insb
cmp
popf
push
mov
push
cmp
mov
into
rorl
push
push
repnz
fcomp
lret
rcrb
into
sbb
sub
mov
cmp
decb
hlt
lcall
stos
roll
sub
pop
jl
mov
and
mov
std
pushf
inc
addr16
stc
stos
mov
out
movsb
in
cld
int
mov
adc
jno
cld
das
test
cmp
outsl
in
sub
int
push
push
arpl
xchg
dec
sbb
add
mov
dec
shll
adc
repz
rcll
mov
mov
lahf
ret
in
jae
xchg
daa
ljmp
repnz
fisttpl
mov
sbb
loope
nop
pop
add
fisubs
mov
mov
and
repz
mov
jne
idivl
andb
fisttps
test
jp
push
xchg
sub
ret
add
sub
movsb
mov
lahf
out
decb
mov
mov
mov
dec
mov
test
mov
jb
sbb
push
xor
test
addr16
mov
pop
dec
mov
inc
imull
into
push
push
xchg
dec
adc
cmpsl
mov
addr16
lret
pop
push
mov
in
fnsave
mov
sub
pop
test
sub
and
ljmp
adc
sbb
sbb
xor
inc
dec
arpl
in
out
lahf
cs
push
aam
out
or
cmp
inc
test
pop
sahf
inc
and
xor
arpl
mov
xor
mov
xlat
fcomp
in
test
je
shl
mov
adc
movsb
pop
mov
in
outsl
adc
cmp
pushf
pop
adc
jmp
insb
fildll
and
incb
bound
rcr
cmpb
daa
test
insb
mov
push
das
cwtl
adc
or
add
pop
xchg
in
lret
cli
and
mov
icebp
repnz
out
and
xchg
lea
xchg
sub
push
dec
adc
int3
test
pop
fdivs
fsubs
jb
nop
pushf
mov
popa
and
cltd
jno
pusha
jno
pop
popa
mov
ljmp
push
test
loopne
mov
dec
jbe
js
ret
aam
test
add
mov
inc
dec
icebp
inc
mov
xchg
and
incl
fcompl
cmp
stc
and
push
pop
popa
in
mov
xchg
test
or
ja
stos
je
cltd
imul
or
inc
ret
mov
or
cmpsb
inc
pop
lret
sub
pop
out
sbb
sbb
out
push
cltd
nop
jb
mov
movsb
jbe
in
push
out
in
mov
cmc
imul
lcall
movsl
mov
jo
in
rcr
or
fsubs
xchg
sbb
adc
out
add
xchg
push
add
xor
xchg
adc
andl
mov
xor
in
popa
pusha
lcall
inc
je
add
sub
adc
push
dec
js
sub
jne
sahf
push
sub
stos
mov
in
push
jb
test
cmp
pop
shlb
push
dec
in
stc
lock
inc
push
adc
sub
mov
mov
pop
pusha
out
rclb
pushf
push
dec
cltd
sub
call
stc
fstpl
mov
aas
xor
imul
hlt
sub
ja
data16
addr16
jecxz
js
cmp
fidivl
sbb
jo
gs
fucom
scas
aam
or
inc
mov
xchg
sarl
push
push
jle
mov
push
dec
fimull
loop
push
repz
dec
xchg
pop
sarl
cs
int3
jo
jo
test
shlb
and
minps
push
or
xchg
add
test
les
pusha
mov
andl
mov
dec
mov
in
out
out
mov
push
ljmp
add
sbb
add
and
lret
scas
ja
stos
or
into
mov
mov
popa
xchg
lret
jbe
add
jecxz
aaa
iret
fcomp
push
jmp
stos
fnsave
jl
push
ficompl
aad
and
lods
out
sub
pop
inc
cmp
fistps
clc
imulb
push
into
es
pop
lods
adc
xchg
shll
aas
inc
dec
jne
das
in
std
cli
test
in
or
div
fildl
orb
and
push
push
push
sbb
negl
test
addl
mov
rclb
int3
out
pop
push
cmp
lahf
pop
push
sbb
adc
and
ret
rorl
test
jb
xlat
leave
mov
jb
popa
xchg
mov
enter
mov
sarb
ret
push
jmp
mov
mov
xor
fcmovne
ret
ja
xchg
imul
or
dec
or
inc
sub
push
mov
push
sbb
xchg
xor
and
shll
or
lods
adcb
sbb
cs
jno
out
add
dec
gs
lods
cld
sbb
test
push
xchg
fnsave
cmc
adc
pop
add
add
xchg
mov
and
adc
sahf
fistpl
push
shll
xchg
adc
cmp
test
mov
mov
lea
push
ret
int
xchg
dec
push
and
jl
mov
ljmp
sub
cmp
cmp
rclb
aad
stos
adc
adc
vunpcklps
mov
clc
or
lcall
mov
mov
mov
sti
test
fs
leave
sbb
push
mov
jg
pop
shlb
stos
and
sbb
jbe
fsubrs
out
fldcw
or
in
lret
mov
in
das
movd
pop
push
std
sarb
mov
push
enter
mov
cmc
addr16
mov
lret
pop
adc
mov
outsl
shrb
mov
jl
testl
xor
lret
int3
sti
adc
pop
lcall
sbb
mov
je
addr16
enter
sub
ficompl
dec
aas
xor
jae
ss
popa
mov
out
dec
ds
mov
addl
addr16
sub
loop
xor
cli
cmpsb
imul
in
lock
pop
add
mov
les
and
mov
popf
mov
push
lods
push
pushf
adc
xor
lcall
hlt
dec
xchg
cmp
clc
popf
add
out
push
into
inc
jne
xchg
fsubrs
mov
sub
ret
in
mov
jnp
test
pop
mov
mov
lods
adc
xchg
and
jle
aas
sbb
imul
fists
jnp
pop
mov
xor
xor
rolb
jp
dec
dec
and
add
mov
sub
das
hlt
rcrl
add
xor
movsl
push
incl
add
jno
lahf
pop
imul
je
out
or
jno
xor
in
shrb
mov
les
das
fdivrl
clc
push
jmp
mov
jns
push
test
ret
data16
xchg
pop
inc
shrl
pop
pop
lds
lahf
fildll
out
pushf
sub
insb
or
arpl
roll
jno
fstpt
fsts
pop
mov
and
clc
xor
nop
es
addr16
add
popf
jmp
xchg
pop
nop
les
mov
jnp
and
dec
imul
xchg
neg
pop
sahf
in
pop
ficompl
pop
mov
cld
push
das
jbe
arpl
lea
xor
add
loop
adc
sub
pushf
lahf
push
jne
adc
outsb
in
fbstp
cwtl
pop
jmp
into
loope
fistpl
xor
clc
adc
or
mov
push
fxtract
xchg
cmp
mov
mov
loop
iret
cmp
stos
loop
and
fstpt
fwait
pop
xchg
push
scas
jbe
jecxz
mov
mov
out
push
jp
fisubs
mov
fld
lret
arpl
add
and
push
insb
bound
cmp
sub
loope
fisttpll
pop
dec
xchg
lcall
jb
rclb
ljmp
sbb
shl
into
xchg
xor
adc
inc
adc
push
xchg
outsb
xor
jmp
xor
adc
call
or
xlat
or
pushf
inc
sarl
push
mov
and
es
popa
xor
out
jmp
mov
or
into
dec
mov
jle
add
mov
sub
fiaddl
iret
lds
bound
nop
lods
mov
test
sbb
enter
dec
xchg
push
ret
jne
je
orb
jns
inc
stos
xchg
cltd
dec
mov
fldcw
mov
mov
xor
fisttpll
daa
ljmp
in
aaa
aas
pusha
add
in
data16
lea
sbb
mov
or
rcrb
outsb
das
push
cmp
or
daa
push
pop
inc
fmul
adc
lahf
lret
mov
xchg
icebp
mov
fdivl
stos
scas
in
ds
sub
mov
outsb
mov
pop
xchg
les
ja
fildll
pop
add
or
out
pop
enter
jle
ljmp
mov
xchg
mov
fidivs
lahf
cli
ficompl
dec
or
jns
imul
int
push
xchg
cmp
repnz
adcb
fwait
pop
out
hlt
je
outsb
rcll
mov
mov
pop
sbb
mov
or
jecxz
aas
pusha
jle
insb
or
dec
cmp
arpl
and
mov
or
jnp
fnstenv
jp
mov
add
lret
div
and
int
fisttps
pop
scas
push
cltd
mov
and
cmpsl
adc
shrb
xor
loopne
das
adc
mov
add
cs
adc
mov
jo
pop
xchg
mov
out
xorb
ret
mov
cs
cmp
xchg
sbb
push
push
sahf
pop
popa
xor
xchg
lcall
in
ss
je
in
aas
xor
dec
cmpsl
xchg
dec
mov
in
cmp
xor
jae
bound
lret
and
xchg
and
mov
xor
push
mov
xchg
xor
mov
fnstenv
test
div
shlb
or
xchg
daa
cmc
scas
test
fs
sub
or
leave
loopne
or
dec
xor
aas
iret
repz
je
addb
or
and
test
std
and
ret
int3
sub
jae
fisttpl
out
cmp
jl
mov
in
jbe
xchg
cmp
sbb
dec
popf
in
sti
incb
rolb
fnsave
jae
loop
push
xor
repz
sub
loop
lea
inc
inc
mov
jns
negl
mov
cltd
cmp
or
test
scas
push
push
and
sub
dec
adc
sbb
lcall
jo
push
inc
mov
mov
lock
lds
inc
jno
mov
or
cmc
cmp
mov
jecxz
xchg
push
call
xor
sub
push
loop
insl
lret
cmp
mov
lret
nop
adc
dec
and
sbb
jbe
or
pushf
push
mov
or
aam
add
sub
jne
mov
in
fistpl
sub
jmp
lret
out
cmpsb
popf
and
cmc
rep
sbb
loope
call
inc
ljmp
push
jae
fiadds
stos
inc
inc
add
jae
aas
dec
or
gs
cwtl
test
pop
out
loopne
cli
shlb
fsubrl
out
int
mov
push
stc
movsb
adc
rol
sbb
pop
add
cmp
int3
sbb
sahf
lea
jge
int
and
cmp
push
adc
mov
cwtl
pop
cmp
pop
inc
push
flds
add
jno
xor
cs
les
out
xor
daa
xor
sub
cs
test
insb
mov
or
arpl
rcr
dec
add
ljmp
sub
jle
jl
sbb
cmpsl
cwtl
mov
mov
repz
cmp
enter
add
mov
mov
sbb
push
daa
test
ret
and
movsb
out
mov
mov
outsl
xchg
jmp
push
jnp
xchg
lret
mov
xor
sub
vmread
adc
nop
cmp
fdiv
pop
or
push
push
mov
or
adc
sbb
jnp
and
int
sbb
das
imul
mov
iret
les
pushf
jbe
xorb
adc
je
inc
movsl
in
stc
mov
ljmp
and
xchg
mov
mov
rclb
add
cmp
push
movsb
incb
sbb
pusha
mov
cmp
mov
movsb
jae
add
inc
pop
pusha
and
sahf
lret
mov
out
mov
xor
xor
das
jge
out
dec
cmpsl
add
cmpl
test
movsb
out
dec
out
mov
xor
jae
xor
pop
and
lods
pusha
xchg
mov
loop
bound
ss
push
and
add
dec
gs
leave
lcall
ja
in
or
xor
call
rcrl
cli
ljmp
add
out
in
and
mov
cld
insl
fcomps
popa
out
mov
pop
out
test
ljmp
arpl
imulb
into
xor
stos
and
mov
repz
xchg
sbb
cmp
test
pop
lea
pop
dec
mov
dec
sarb
push
dec
cmp
mov
pop
mov
sarb
sbb
das
xchg
inc
push
mov
push
mov
ss
fbld
and
dec
dec
xchg
pusha
lret
mov
sbb
sahf
push
cli
dec
cmp
aaa
int
fiadds
add
push
mov
and
inc
inc
outsb
push
xor
pop
xchg
mov
push
jo
xor
icebp
stos
pop
pop
mov
xor
shll
test
sbb
xchg
daa
in
repz
stos
push
mov
jb
push
lret
int3
jae
xchg
into
jb
mov
pop
mov
jbe
cltd
mov
or
fisubs
cmp
jge
pop
in
mov
fwait
in
sahf
ljmp
mov
mov
imul
or
icebp
or
jno
mov
fwait
int3
jne
daa
inc
fwait
inc
jnp
dec
push
pushf
sbb
add
je
mov
orb
popf
xchg
push
add
jg
sbb
mov
mov
sarl
cld
push
repnz
jmp
les
out
push
in
addr16
jle
sbb
lcall
rorl
cwtl
ss
popf
mov
pop
jl
jmp
push
inc
lahf
sub
popfw
sbb
push
scas
mov
xor
dec
jae
and
mov
int3
xchg
xlat
rcll
push
incb
sahf
pop
adc
mov
pop
lea
out
movsb
xor
adc
dec
xor
ds
in
dec
je
lahf
repz
mov
push
aam
in
lret
jmp
push
lcall
les
loopne
mov
scas
outsb
mov
sbb
adcb
outsl
and
jnp
jno
mov
adc
aam
loope
sbb
xor
add
stc
or
jnp
mov
loope
mov
sub
add
push
lcall
aam
pushf
push
notb
mulb
stc
fildl
mov
cmp
out
in
fildl
and
push
popf
push
fwait
sub
lods
sub
mov
pushf
sub
sbb
jns
xchg
pop
mov
mov
mov
icebp
fs
stc
sbb
std
ret
push
iret
sub
lods
imul
pusha
stos
cmc
out
pusha
add
and
or
dec
lcall
inc
and
and
inc
sbb
hlt
enter
sub
inc
adc
lret
in
ds
xchg
ljmp
mov
sub
push
fists
and
jp
add
pop
outsl
adc
loope
pop
lcall
lcall
adc
sub
mov
and
jg
or
sub
adc
scas
pop
shrb
or
hlt
cmpsl
add
inc
sbb
mov
lret
bnd
and
dec
dec
bound
shlb
cmp
rcrb
jmp
rcll
popf
lock
mov
test
fsubl
lret
bound
xor
or
inc
inc
ret
mov
mov
jne
push
push
fisubrs
cmp
jp
xchg
mov
fisubl
pop
push
imul
push
xchg
mov
cmc
xchg
ds
dec
test
jno
adc
mov
adcb
fisttpl
mov
inc
mov
fucomip
outsl
inc
bound
push
mov
iret
xor
add
out
dec
xor
cmpsl
addr16
mov
push
jo
push
loop
add
cmp
push
lea
pop
xor
cmc
pop
repz
dec
xor
rcll
in
insl
jl
stos
jae
push
repz
add
out
data16
inc
mov
mov
jl
ljmp
add
xorl
pop
push
adc
or
std
dec
dec
mov
dec
repz
cmp
dec
popa
test
and
cmp
push
icebp
orb
movl
push
xcrypt-ecb
cmpsl
int3
inc
sbb
ds
repnz
out
xchg
addr16
adc
cmpsb
lret
movsl
cmpsl
popf
in
xchg
xor
jbe
mov
sbb
pop
pop
popl
jmp
aad
xchg
adc
lahf
daa
jg
fsubrl
cwtl
popw
repz
ljmp
fs
lods
inc
adcl
cli
xorb
les
out
cmp
cmpb
popa
in
stc
sub
cmp
pop
sub
aam
aas
andb
mov
addr16
adc
shl
std
repz
sub
cli
mov
jo
dec
sub
ljmp
inc
mov
pop
pop
pop
pop
clc
pop
rorb
mov
mov
out
call
adc
aad
push
imul
sbb
xchg
lods
shlb
fs
jp
xor
push
or
mov
push
xor
mov
dec
nop
ret
ss
lret
jle
in
sub
xor
xchg
push
sub
or
mov
movsl
adc
out
mov
movsb
dec
jno
clc
xchg
dec
push
pop
gs
adc
mov
pop
adc
rol
pop
icebp
pop
and
mov
shl
add
test
std
lds
mov
fbstp
mov
sbb
lea
cmp
notb
push
or
xchg
adc
test
push
jle
xor
fs
xchg
out
push
pop
xchg
lcall
mov
scas
cltd
or
fcoml
cld
bound
xchg
sbb
fnstsw
stos
stos
mov
rol
or
fwait
scas
cmp
cld
pusha
mov
adc
or
inc
loope
adc
push
xchg
mov
out
test
xor
add
lret
icebp
sub
leave
and
jno
and
fucomi
test
icebp
sub
pushf
lods
repnz
push
jb
fdivrs
push
lods
dec
les
push
loope
jecxz
jne
and
xchg
mov
cmp
sbb
mov
icebp
inc
xchg
test
dec
imul
mov
jle
sbb
add
aaa
and
sbb
adc
fstp
mov
jg
mov
ss
call
push
dec
movsl
ljmp
hlt
das
ds
mov
and
testb
out
mov
mov
lock
std
dec
gs
stos
stos
cmpsb
jmp
mov
fld
rcll
fisubl
xchg
push
std
cwtl
test
daa
out
je
inc
cmp
mov
outsl
inc
out
fs
ss
arpl
sub
jl
ret
sbb
xchg
adc
xchg
xor
push
pop
imul
fcmovnu
xchg
dec
fcomps
or
xchg
cmp
out
or
cmp
test
xchg
sbb
popa
call
mov
xor
add
or
rorb
ss
out
cmpsb
lret
or
sbb
or
sahf
dec
add
pushf
scas
imul
sub
fcomps
sbb
rcll
mov
sub
enter
repz
jmp
or
stos
dec
jae
not
mov
jb
dec
rcl
cmp
js
adc
push
sbb
mov
sbb
add
jmp
ds
setns
fiaddl
inc
xchg
idiv
repnz
or
inc
xchg
sbb
sub
mov
outsl
dec
ljmp
xor
cmc
insb
std
xor
cmpsl
in
and
iret
es
jo
out
call
or
pop
push
mov
sub
clc
sti
mov
outsl
es
rcll
push
fs
lods
ds
insl
xchg
inc
sub
out
in
je
pop
push
out
sahf
xchg
sbb
scas
aad
sbb
hlt
out
push
dec
add
insl
in
test
out
push
outsl
mov
cmp
fneni(8087
add
mov
push
lods
mov
jp
mov
or
or
aam
jnp
xchg
stc
cld
adc
pop
sub
jbe
test
imul
jo
rcll
pop
xor
movsb
xchg
dec
aam
fiadds
test
pop
pop
mov
dec
int
cwtl
xor
sbb
test
xor
cmp
adc
cmpsb
mov
xchg
mov
mov
hlt
pop
mov
and
fcmovne
adc
mov
ret
xor
jg
cwtl
in
pop
xchg
mov
and
lods
or
mov
or
mov
aaa
fadd
adc
xchg
mov
or
into
pop
push
mov
mov
adc
adc
enter
cmp
inc
xchg
cli
scas
cmp
jns
xlat
or
nop
dec
ss
xchg
sub
in
mov
jl
dec
push
aad
sti
xchg
mov
adc
mov
rcrl
xor
out
add
add
cmpsl
movsb
out
pop
insl
and
add
jbe
push
test
or
std
int3
test
out
or
loopne
nop
xor
lret
xchg
mov
test
sar
mov
adc
scas
sub
sub
pushf
je
out
sub
jnp
jmp
int3
jge
and
stos
nop
cmp
xchg
rorl
test
push
std
fistl
inc
ret
jne
stc
add
fidivrl
pop
mov
mov
leave
andb
ja
jb
lret
fwait
push
clc
sub
sub
dec
mov
cmp
pop
pop
popf
cmpb
dec
mov
mov
js
in
movsl
dec
and
inc
aaa
mov
jmp
popf
inc
sub
repnz
test
jl
repz
xor
xchg
insb
icebp
shlb
aas
sub
lock
xor
and
or
mov
test
div
js
pushf
in
out
or
decb
insb
scas
lahf
sti
sbb
cwtl
loopne
and
pop
ret
ss
xchg
xchg
xchg
loop
imul
fsubrs
outsb
aas
mov
push
test
push
loopne
arpl
jmp
and
bound
push
jge
call
test
mov
and
filds
sbb
mov
test
add
mov
mov
dec
sub
in
ss
jp
nop
or
mov
sub
pusha
mov
jl
out
lsl
jo
shlb
test
in
xchg
adc
icebp
fnstsw
and
cs
inc
into
pop
fs
mov
xchg
and
lret
mov
inc
or
mov
popa
dec
push
inc
lds
and
xlat
push
inc
wbinvd
pop
push
stos
pop
mull
pusha
jb
out
xchg
pop
stc
dec
dec
insl
add
push
and
pop
jnp
inc
and
adc
adc
aad
in
movl
inc
lds
xchg
aaa
dec
or
subb
or
cmp
leave
xchg
mov
inc
mov
inc
inc
divl
xor
sbb
jmp
mov
push
mov
fwait
addr16
xchg
pop
lock
pop
add
movsl
dec
pop
cmpsl
andb
mov
push
mov
push
xor
sarb
jmp
fwait
jle
add
ds
in
divl
testb
enter
insb
popa
rolb
je
xor
xchg
lds
sub
fs
dec
add
pop
mov
adc
call
mov
icebp
subl
mov
xor
jp
pop
icebp
ret
inc
cmpsb
mull
jo
push
std
lea
js
sub
jmp
or
inc
jno
negl
ret
xchg
leave
inc
mov
dec
jge
gs
pushf
jns
add
lret
sub
or
jmp
rclb
mov
bound
insb
jbe
dec
cmp
dec
mov
cli
mov
mov
shll
sbb
push
sbb
cmc
pop
into
addb
xchg
aad
and
int3
outsb
js
dec
dec
xor
cmp
mov
xchg
out
fsubs
pop
cmp
in
les
xchg
test
ret
xchg
push
insl
sub
and
cmpsb
sub
inc
jne
dec
lret
sub
shlb
repnz
xor
mov
xor
inc
push
mov
fs
mov
es
adc
push
inc
sbb
add
mov
xor
xor
mov
or
fnsave
lea
leave
out
push
bound
arpl
mov
dec
dec
lock
cmp
cld
jge
and
sbb
xchg
lock
xor
sub
incb
loope
pushf
mov
cmp
hlt
fdivl
mov
lcall
fsubl
mov
sub
in
pop
clc
xchg
xor
pusha
fstpt
inc
movsl
lahf
lahf
or
lret
cs
out
add
add
adc
repnz
inc
cmp
aad
jbe
mov
dec
test
aaa
js
dec
mov
stos
inc
pop
mul
stc
or
test
pop
or
cli
add
inc
xchg
loop
push
mov
cs
fsubl
movsb
inc
mov
xchg
test
inc
add
cwtl
ret
cli
dec
roll
js
pusha
mov
jbe
push
out
jl
test
gs
dec
lret
push
pusha
repz
dec
mov
mull
subb
mov
sbb
mov
outsl
call
mov
lods
leave
lods
popa
cmp
outsb
cwtl
mov
int3
push
or
cmpb
mov
pushf
into
mov
fnsave
adc
das
cwtl
ja
fwait
dec
sbb
mov
cmp
xor
addb
jecxz
outsb
jecxz
dec
imul
adc
stos
pop
jmp
testb
mov
cld
lahf
pop
mov
in
cs
or
mov
jo
sbb
rorl
mov
add
sub
fwait
pop
inc
mov
inc
add
rclb
push
adc
ds
stc
into
es
cmc
push
jmp
xchg
adc
and
and
dec
jns
popf
mov
or
dec
shlb
add
mov
push
cmp
dec
pop
xor
and
movsb
ljmp
mov
popa
push
push
fwait
ss
pushf
adc
adc
xor
or
adc
jae
aam
mov
sbb
js
into
xor
popa
push
mov
lretw
push
push
cmp
in
adc
fs
repnz
in
test
cs
std
test
test
add
cmpb
testb
icebp
lods
sbb
cmp
ja
shll
scas
repnz
sub
jo
inc
ss
ret
in
or
jg
imul
je
pop
xor
push
lods
pop
cmc
testb
jecxz
icebp
out
fcomps
jne
out
bound
cmp
ret
jnp
cmp
inc
dec
rolb
insl
pop
cmp
mov
into
push
push
mov
sbb
adc
sar
adc
aam
ds
outsl
imul
outsb
mov
adc
cmpl
add
inc
mov
aad
and
sbb
inc
xor
loope
fstl
push
ss
push
movsl
test
cmp
cmpsl
js
icebp
cld
js
sti
fldpi
xchg
nop
and
test
or
push
mov
shl
add
cmp
into
mov
fisttpll
cwtl
xchg
push
std
mov
lods
lock
loop
andnps
xchg
ss
jge
scas
out
adc
popf
xchg
or
in
out
jae
mov
repz
sub
mov
inc
mov
mov
xor
inc
imul
add
cmpsb
and
xchg
in
pop
push
xlat
jno
push
xor
inc
orb
pusha
bnd
jl
cmp
cmp
mov
shlb
mov
push
lret
aaa
lods
mov
jb
fisttpl
fidivl
loope
xor
ljmp
arpl
push
jo
hlt
and
mov
adc
cmp
cmp
sbb
ljmp
add
scas
pop
push
fnsave
mov
mov
and
dec
ss
sbb
mov
imul
dec
push
xor
mov
sbb
les
mov
dec
rcl
pop
pop
fs
jp
daa
push
pop
mov
cmpb
aam
and
pop
pusha
lea
aad
inc
sbb
lock
sub
and
mov
or
lret
pop
hlt
aad
or
cmpsb
rcrl
test
add
pop
xchg
stos
mov
pop
in
push
jge
pop
pop
enter
sub
inc
mov
ret
push
call
sahf
sub
add
mov
cwtl
ret
stc
adcb
push
stos
xchg
xor
rol
je
adcb
inc
mov
in
lods
std
andl
jge
add
jg
dec
jo
jecxz
adc
cld
jno
outsl
insb
mov
lret
movsb
fildl
loop
dec
out
jg
push
xchg
arpl
push
adc
out
add
arpl
add
stos
mov
jle
cmpsb
ds
mov
scas
xor
mov
push
xor
pop
nop
lahf
mov
xchg
insl
push
mov
xchg
inc
orb
outsl
mov
stc
fs
mov
scas
nop
sub
mov
add
lods
jno
mov
ret
or
mov
mov
neg
dec
int3
ds
int
leave
andb
ds
popa
inc
cmp
and
mov
mov
push
xor
sub
shll
push
mov
xchg
or
push
mov
imul
iret
dec
aam
sbb
in
jbe
into
mov
pinsrw
lcall
into
orl
pusha
outsb
push
cmc
add
lea
test
xchg
push
and
xor
mov
push
pop
sbb
xrelease
sub
sbb
sub
not
mov
sti
imul
pop
nop
hlt
out
int
insl
or
das
in
xchg
push
imul
push
cmpl
gs
aad
sub
mov
add
scas
xchg
mov
jg
imul
dec
xlat
mov
mov
xor
dec
or
xlat
push
push
icebp
sub
in
jns
mov
enter
aad
cmpl
inc
ljmp
fwait
add
or
pushf
mov
xor
pop
lcall
cmp
mov
mov
cs
std
mov
cmc
aam
or
cmp
bound
out
es
cld
cld
pop
in
lock
das
out
xor
adc
sbb
mov
stos
bound
pop
or
push
xor
mov
or
cmp
in
mov
xchg
pop
mov
js
mov
loopne
mov
xchg
mov
and
dec
mov
sub
mov
stos
adc
int3
adc
xor
outsl
shll
arpl
aam
mov
jne
stc
mov
mov
adc
dec
mov
js
mov
pusha
sbb
mov
cmpsb
fcmovnb
add
jmp
fldcw
pusha
popf
jecxz
ja
and
jmp
cmp
in
loop
mov
mov
pop
rcrl
push
xchg
jmp
add
push
outsb
or
and
repz
fucomp
jecxz
inc
into
dec
mov
dec
mov
xchg
andl
enter
insb
data16
popf
add
cmp
bswap
sub
adc
mov
movsb
jecxz
inc
hlt
outsb
inc
push
mov
xlat
pushf
sbb
adc
sub
jecxz
loopne
and
cmpl
arpl
add
fyl2x
xchg
mov
jne
das
cmc
ljmp
mov
lret
out
lret
push
cmp
int
sbb
dec
scas
in
ljmp
shll
lcall
cwtl
lcall
psubb
add
es
jno
hlt
aaa
jmp
dec
sub
mov
inc
mov
pop
mov
dec
push
mov
xchg
cmpsl
push
dec
pop
pop
add
nop
hlt
aas
test
outsb
push
insb
stos
jp
lcall
outsl
mov
jl
aam
gs
mov
imul
cmpsl
jle
lret
es
push
push
mov
pushf
cmc
in
mov
mov
loop
jno
jmp
sub
clc
and
mov
iret
fwait
outsl
xor
test
movsb
out
mov
xchg
adc
stc
dec
mov
aam
outsl
sub
fldcw
push
fcompl
call
jne
fldenv
mov
aas
ljmp
add
fidivrl
jmp
call
adc
lods
push
pusha
cmp
inc
stc
push
add
and
xchg
loope
mov
sub
andb
in
xor
and
sbb
mov
shll
adc
add
ret
cltd
int
push
push
mov
aaa
ret
mov
repnz
and
pop
out
pushl
adc
ficompl
aam
sbb
cmp
xor
imul
test
out
sbb
mov
dec
adc
pusha
shll
negb
jno
xchg
rcrl
clc
and
inc
adc
jle
outsb
mov
and
push
xchg
and
inc
imul
out
jl
push
pop
xor
jmp
cmpsl
cmp
xor
pop
es
push
movsl
lock
jae
icebp
mov
xor
sahf
sahf
mov
mov
lret
mov
or
enter
cli
fistpll
adc
hlt
sub
daa
lea
js
mov
rol
xchg
xor
add
sub
mov
sbb
dec
aas
sub
xlat
pop
cmpsl
out
out
mov
or
cld
movsl
xchg
sahf
push
out
jb
add
imulb
pop
pop
jb
mov
imul
sets
jbe
imul
mov
inc
dec
mov
push
sbb
outsl
lcall
cmp
loop
cmp
loopne
mov
int
push
je
nop
test
jmp
sbb
cltd
shlb
push
repz
jne
out
aam
mov
mov
test
cmovle
pop
sti
pop
pop
push
sub
and
adc
and
fisubrs
test
jns
popa
adc
in
popf
outsb
jne
sbbb
outsl
xchg
stos
push
je
notl
mov
das
fists
jge
mov
xchg
jg
clc
icebp
mov
in
dec
fmull
push
jno
loopne
stos
mov
mov
push
push
in
cmp
js
movsl
ljmp
hlt
fsubrs
in
xorl
xchg
push
iret
addl
fcmovne
or
stos
xchg
aaa
add
js
jecxz
jb
aam
sbb
lds
outsb
sub
mov
call
in
in
mov
mov
and
int3
out
and
push
pop
mov
or
cwtl
loopne
lods
cmp
mov
xor
xchg
pushl
adc
imul
push
mov
sti
sbb
fwait
cmp
push
fidivrs
pop
stos
or
jbe
scas
xchg
xchg
pop
insb
dec
fsubrs
imul
testb
xchg
jb
outsl
mov
pop
inc
orb
sub
push
jge
fwait
push
or
lock
cltd
leave
stos
push
and
inc
fmulp
clc
xor
out
cmc
loop
sub
sbb
lock
xorb
je
dec
and
je
adc
cmp
jo
mov
std
sub
pop
outsl
ja
repnz
sarl
or
jo
shlb
sbb
pop
cmp
cwtl
mov
stos
xor
inc
sub
subb
lret
mov
lods
inc
mov
push
xor
add
or
cld
sbb
inc
inc
lret
push
jge
ror
rdpmc
stos
inc
jge
movsl
jl
addr16
shll
nop
or
and
add
xor
adc
and
stc
movsl
dec
cmp
pop
ljmp
sahf
mov
and
mov
jae
sub
adcb
divb
rclb
mov
add
add
cld
adc
mov
fcmovu
dec
andb
jge
jge
inc
adc
inc
mov
push
mov
cmp
xchg
xchg
pusha
jecxz
dec
xor
cmpsl
inc
shrl
imul
dec
loop
pop
out
push
inc
je
dec
movsl
add
ljmp
adc
jl
push
sub
mov
ljmp
push
ljmp
rcrl
and
mov
xor
je
stos
paddusw
push
sub
inc
dec
jns
lods
add
pop
adcb
das
pop
mov
subl
and
or
mov
pushf
jb
and
and
inc
mov
inc
lahf
jne
xor
xchg
movsb
into
shrl
xorl
ss
ja
mov
jb
xorps
fsubp
adc
in
mov
loop
sti
mov
dec
and
mov
and
jne
loope
xchg
rcrl
push
call
ficoms
imul
jne
into
and
and
sub
rcrb
cwtl
push
pop
push
call
xchg
roll
pop
or
push
or
push
and
lahf
cmp
mov
enter
ja
mov
adc
add
dec
mov
and
push
in
dec
mov
sub
mov
mov
adc
jmp
cmp
fstpt
xor
sub
lahf
pop
add
mov
mov
lods
and
gs
test
add
cltd
mov
adc
sub
ja
call
sbb
push
xchg
test
lds
jnp
insl
out
pop
pusha
cmp
jecxz
dec
pop
aad
stos
push
mov
and
cmc
inc
xchg
aaa
imul
mov
mov
addr16
fisttpll
inc
pop
sahf
adc
push
adc
std
jae
inc
ss
aas
sub
aad
mov
daa
orb
mov
mov
pop
xor
fucomip
call
xchg
sub
loop
and
jmp
add
stos
sub
mov
or
js
fildll
mov
or
jge
add
cmp
sub
mov
std
dec
add
cmp
into
clc
xor
aas
cmp
les
jns
or
adc
pop
xor
cld
hlt
jbe
fidivl
mov
jle
pop
cmp
loop
push
xlat
jb
push
rorb
dec
sub
xor
fidivl
mov
cmc
test
cmp
imul
jno
pop
fwait
mov
mov
mov
jno
push
std
sarl
sti
inc
xor
fnstcw
arpl
sub
ror
imul
pop
repnz
in
dec
js
int
mov
cs
scas
mov
push
cmp
outsb
push
jg
push
es
shr
lea
adc
xchg
fwait
lods
pop
mov
fisttpl
push
sub
cltd
cmp
dec
adc
subl
or
dec
jo
imulb
dec
sbb
shlb
stos
mov
daa
pop
fwait
mov
push
test
jae
pop
jns
add
push
loop
and
or
sbb
cmpsl
push
adc
je
cmp
dec
mov
stos
data16
lret
jno
or
addl
imul
dec
push
aaa
call
mov
dec
sub
into
mov
das
mov
int
in
or
call
push
aam
call
push
xor
jmp
dec
cwtl
pop
in
fidivs
mov
jg
push
adc
iret
adc
or
mov
xor
jbe
int3
mov
pop
adc
add
sbb
sub
or
pop
addr16
out
or
dec
push
daa
dec
daa
lahf
mov
lods
stos
daa
cmp
mov
mov
sub
dec
xchg
mov
mov
popf
or
mov
pop
insl
jnp
testl
rcll
les
dec
out
sbb
push
inc
cmp
mov
movsb
stc
stos
dec
pop
sbb
sahf
dec
ss
test
mov
push
pushl
pop
in
sub
push
pop
cmp
pop
inc
pop
loop
sbb
fwait
cwtl
mov
add
add
call
inc
call
mov
mov
out
inc
fldl
icebp
sub
lret
pop
insl
iret
sti
mov
sub
add
je
jl
mov
sbb
test
ja
sbb
jb
add
mov
rcll
cli
shrb
movsb
push
lods
mov
fldl
or
mov
mov
push
into
xchg
xlat
repnz
jnp
xchg
cmpsl
add
add
xor
enter
leave
lods
subl
dec
dec
stc
fwait
jmp
lock
cmp
shl
iret
mov
jno
int3
jle
jae
mov
mov
shl
cmp
clc
pusha
je
jnp
xlat
or
sub
mov
xor
rolb
pushf
cmpsb
xor
lods
mov
jge
push
rclb
lret
stos
mov
andl
cmp
mov
aas
jecxz
cmpsb
scas
and
cld
cltd
rorl
addr16
pushw
jecxz
fadd
push
sbb
rorb
inc
dec
push
lea
enter
mov
add
lods
stc
xchg
mov
loopne
lahf
subb
aaa
xor
aam
pop
push
cs
push
orb
push
mov
pop
scas
stc
cmp
rcl
mov
pop
xlat
out
ss
and
test
mov
rclb
mov
subb
cli
js
add
sub
mov
icebp
into
call
les
cmp
mov
xchg
fwait
add
in
xor
cs
lods
xchg
jne
aaa
add
repnz
mov
mov
clc
pop
ja
mov
pop
fwait
call
jg
js
jno
xor
js
out
flds
in
insl
mov
jno
add
in
sbb
xchg
test
arpl
mov
jae
fmull
mov
sbb
lods
mov
daa
xchg
sbb
sbb
addb
cmpsl
inc
int
cltd
out
dec
or
rorb
fiadds
cmpsl
pop
data16
mov
cld
movsl
cmp
dec
test
je
mov
clc
lock
or
mov
das
cmp
jecxz
arpl
push
lea
adc
xor
mov
cmovns
bound
push
inc
int3
push
jae
inc
push
mov
mov
jp
repnz
pop
rcll
inc
loopne
mov
shrw
mov
clc
dec
pop
insl
ret
iret
dec
xchg
ljmp
pop
adc
call
int3
loop
dec
inc
jmp
dec
aas
mov
jecxz
psrlq
in
jbe
xor
lahf
pop
scas
in
mov
cmp
outsb
fidivrs
pop
sahf
add
mov
leave
lcall
pusha
mov
test
or
sub
pusha
das
mov
push
mov
push
push
mov
lret
pop
push
jns
or
insl
pop
arpl
jae
mov
test
inc
lret
paddsb
jle
loope
jl
mov
fadds
shll
sub
and
loope
pop
stos
sbbl
mov
lea
mov
dec
push
mov
jnp
movsb
mov
aad
loop,pt
cmp
scas
enter
mov
inc
mov
or
pop
in
das
push
push
push
lds
dec
inc
cwtl
push
lods
movsl
push
sub
stc
in
loop
rol
in
ror
lods
mov
pop
lahf
or
loope
mov
popf
je
test
mov
jnp
jmp
lahf
jne
and
jle
nop
inc
xor
and
flds
xchg
call
cmp
addl
pop
out
and
insb
mov
add
aad
enter
cmp
xor
cltd
dec
pop
mov
push
cmpsl
cmp
cmp
shll
repz
dec
and
fwait
cwtl
jp
dec
pop
xor
out
inc
adc
repz
pushf
push
dec
ror
test
sub
xchg
pusha
xchg
and
or
ficomps
mov
xor
jle
stc
add
sarl
and
les
pop
mov
in
out
imul
sar
ficompl
addb
lahf
jge
cli
and
sub
pslld
xor
push
popf
adc
jle
lret
mov
cltd
movsl
std
xchg
mov
gs
icebp
push
pop
decl
stos
xlat
push
or
aaa
in
xor
sbb
cmp
das
aad
dec
mov
and
jo
push
fisubrs
in
out
pop
add
xchg
inc
loop
add
xchg
lock
xor
adc
shlb
jns
mov
popa
cmpsb
movsl
mov
jmp
lods
jl
xor
scas
dec
bound
mov
fimuls
and
sub
mov
sbb
test
sbb
adc
or
pop
dec
scas
lods
ret
adc
mov
je
and
push
das
ret
imul
movb
shrb
das
and
aas
fadds
imul
jo
dec
cmp
inc
in
adc
pop
dec
movsl
mov
out
pop
or
cmc
jmp
insb
xchg
mov
sahf
ret
out
pop
inc
lahf
cmp
xor
filds
xchg
lea
sbb
scas
xor
insl
pop
bound
movsb
pushf
ds
mov
test
jns
leave
sbb
fwait
mov
mov
add
lock
rol
mov
sti
mov
jmp
xor
aam
jmp
cmp
repz
test
sti
leave
sub
mov
push
test
cmp
sbb
dec
jle
mov
cmp
in
cli
shll
pop
lret
imul
in
and
in
mov
mov
fdiv
jbe
ss
rcrl
or
jb
in
inc
shll
ds
pop
idivl
jp
insb
mov
sbb
bound
inc
push
je
hlt
mov
jno
push
fcmove
pop
lahf
xor
shlb
lret
repnz
cmp
mov
add
and
dec
stc
or
pop
or
in
push
or
ds
loope
outsl
mov
sti
out
fbld
and
xor
push
xor
daa
xchg
and
push
insl
mov
jp
and
fiaddl
psubsb
nop
pusha
pop
xor
in
adc
nop
movsb
mov
or
mov
or
jae
sti
lcall
mov
mov
scas
in
or
sbb
cmpsb
adc
adc
mov
mov
push
sti
pop
cmp
xor
sti
dec
pusha
lods
mov
pcmpgtw
movsb
jnp
pusha
jns
pop
jne
push
jne
pop
jns
xor
sahf
out
mov
leave
nop
vmovsd
mov
dec
dec
push
mov
pusha
test
ret
pop
iret
xor
dec
insl
dec
or
rorl
lock
pop
nop
pop
jo
test
test
mov
or
out
dec
jno
jle
mov
pop
test
fs
or
out
addr16
sbb
decb
sbb
cmpsl
repz
cwtl
iret
decl
aam
push
adc
mov
in
scas
sti
aam
jle
pop
dec
jo
ret
add
dec
jecxz
test
clc
fwait
inc
pop
sbb
aad
sarl
jmp
add
das
xor
out
xlat
aaa
dec
scas
sbb
movsb
clc
fidivrs
sub
std
int3
gs
je
jne
cmp
or
adc
inc
jne
sub
push
je
outsl
xor
mov
inc
pushf
cmp
xor
or
cli
xor
daa
inc
ljmp
pop
cmpsb
fldenv
push
loop
inc
ja
add
cmp
cmpsl
adcb
ret
push
pop
mov
adc
mov
ss
movsl
scas
xlat
xchg
pop
aaa
dec
rcr
cmpsl
cli
js
jg
lock
fdivs
ret
rcl
adc
pop
and
sbb
pop
and
mov
sbb
pop
sub
inc
dec
add
mov
in
jo
outsl
mov
pop
dec
jmp
mov
sarl
hlt
xor
adc
push
push
stc
sti
lods
pop
test
pusha
outsl
test
sbb
jmp
inc
pop
insl
mov
cmp
mov
das
jo
out
js
xor
aam
sbb
mov
xchg
js
ljmp
mov
push
xchg
mov
pop
xchg
negb
adcl
sbb
aam
int
clc
xor
xchg
xchg
pop
int
mov
outsl
mov
push
sarb
mov
jecxz
push
arpl
dec
scas
mov
loope
leave
inc
jg
sbb
fs
jg
shll
dec
aaa
adc
xchg
jp
push
imul
xor
push
mov
pop
jae
sub
mov
mov
cmpsb
shrl
lock
in
call
lods
outsl
mov
ret
fstl
and
cld
jge
lods
popa
xchg
adc
adc
pop
sub
mov
shll
mov
push
push
fidivl
adc
jmp
sbb
sbb
into
mov
xchg
fdivs
xor
sahf
sub
cltd
repz
inc
jmp
inc
cmp
push
loope
mov
push
lret
push
push
test
jo
jb
scas
dec
test
loopne
mov
loop
jg
add
jge
repnz
pop
call
lahf
jno
xor
add
stos
test
mov
test
mov
ds
fsubrl
push
icebp
mov
sbb
inc
aas
or
and
hlt
pop
cmp
dec
xchg
xor
lea
push
mov
dec
xchg
jl
push
and
mov
fsubrl
lcall
outsb
add
xor
push
out
push
mov
push
pop
xchg
enter
ja
sbb
lahf
jp
xor
lcall
dec
add
out
xchg
mov
decb
inc
shrb
xchg
inc
ret
adc
adc
dec
inc
dec
mov
sub
bound
in
orb
out
lock
outsb
repz
sar
stos
flds
jle
ficomps
rclb
inc
fmul
test
fisubrs
dec
mov
mov
ljmp
or
jecxz
jne
add
pop
addb
ret
pop
jl
shlb
xchg
add
xchg
jl
leave
sub
cwtl
bound
out
test
lcall
jl
ss
pushf
in
cmc
inc
xchg
icebp
sbb
mov
cmp
dec
pop
cmpsl
sti
in
loopne
loop
cmp
aad
data16
int
mov
ja
les
rorl
stos
std
icebp
popa
shll
cltd
es
inc
cmovo
mov
sbb
call
sbb
fidivs
ret
popf
jmp
out
or
adcl
add
roll
loopne
xchg
adc
ja
jbe
jmp
adc
out
cli
jmp
bound
pop
pusha
sbb
cmp
and
out
test
jb
xor
fsubs
mov
add
xorl
jb
sbb
push
ja
jl
xor
stos
call
idiv
sti
sbb
xchg
jg
jle
and
nop
fidivrs
sub
movsb
in
inc
fistpl
jno
mov
push
leave
pop
add
scas
lcall
data16
inc
sbb
imul
jns
enter
js
and
push
pop
outsl
shll
subb
lret
mov
add
lahf
addl
fwait
stos
push
mov
cli
push
stos
or
pop
ret
mov
sbb
add
mov
xchg
xor
jl
fadds
jne
dec
mov
gs
jg
xor
std
dec
insb
fwait
repz
mov
pop
fsubr
mov
test
int
rolb
imul
clc
push
les
xchg
gs
cs
inc
jae
cmp
idivl
enter
push
xchg
push
stos
flds
xorl
fdivs
mov
or
cmc
les
lock
ret
dec
dec
add
add
sub
pop
hlt
pusha
fidivrs
leave
jmp
pop
mov
repz
add
arpl
popa
mov
pop
ljmp
sbb
push
pop
andb
inc
mov
outsb
je
enter
int
sub
jnp
out
gs
mov
insl
stos
js
fidivrs
or
sbb
adc
insl
lea
adc
out
mov
xchg
imul
ffree
cwtl
test
std
out
adc
mov
inc
sar
sub
mov
dec
lcall
lods
insb
mov
mov
mov
pop
test
cmpsl
mov
rcll
popf
mov
mov
andl
or
cmpsb
insb
xor
jb
ljmp
sub
arpl
jg
cmpsb
xchg
mov
mov
pop
adc
cli
xchg
jo
mov
or
scas
sbb
pop
mov
cmpsl
push
js
cmpb
enter
push
decl
in
lock
js
sub
mov
out
xchg
int
pop
lret
jns
int
dec
push
adc
test
scas
jle
pop
xchg
push
mov
dec
std
repz
ds
xchg
mov
mov
cmpsl
jmp
mov
popf
outsl
shl
test
hlt
movsb
xchg
enter
fldl
sub
xor
lahf
mov
repz
fmull
add
add
lahf
sbb
xor
xchg
sahf
test
jge
mov
add
stos
mov
add
movsl
add
test
mov
xor
fiaddl
loopne
loope
add
add
insb
adc
add
or
aas
add
mov
inc
mov
lock
dec
push
pop
sbb
xor
sbbl
sub
ljmp
add
das
bound
mov
dec
cmpsb
inc
dec
xor
mov
sahf
popf
arpl
and
lds
cltd
mov
clc
cmp
aam
and
push
imul
cmp
and
shll
xchg
push
div
bound
sbb
push
pop
jmp
outsb
lods
cmp
xor
iret
cmp
and
pop
ja
xor
gs
adc
stos
pusha
push
pop
scas
aas
mov
inc
mov
adc
mov
cmp
movsl
jns
jle
adc
add
outsb
out
repz
icebp
jne
test
iret
mov
cs
aas
icebp
arpl
es
jg
mov
add
std
shlb
fildl
cmp
pusha
push
sub
notb
shl
jg
mov
outsb
push
sub
mov
pop
stos
push
cmp
movsl
add
pop
clc
out
add
loope
and
pop
pop
xchg
pop
bound
mov
mov
inc
pop
and
mov
movsl
bound
mov
adc
adc
add
push
xor
jmp
cltd
hlt
mov
daa
cltd
mov
shll
addr16
lahf
mov
in
shlb
pop
dec
xchg
fidivs
inc
sub
movsl
psllq
fwait
mov
sbbb
adcl
or
xor
cmp
push
jo
xchg
mov
or
shlb
aad
adc
adc
cmp
pop
inc
cli
and
sub
rolb
stos
jne
sub
lcall
xchg
jmp
xor
jbe
cmp
inc
inc
cmp
lods
das
push
mov
xor
xor
lds
inc
jno
daa
push
dec
nop
ja
jne
cmp
lea
enter
xchg
or
aaa
push
lret
loopne
mov
gs
sub
test
xchg
jl
sbb
cmp
push
xchg
scas
push
sbb
pop
mov
cmp
jp
push
cmp
les
and
sbb
mov
in
mov
mov
mov
mov
lret
push
minps
push
sti
test
repz
call
fldcw
mov
leave
add
fimuls
mov
push
pop
cmp
lock
lret
fwait
jnp
xor
nop
inc
mov
push
dec
dec
xor
lret
fsubp
cmp
imul
and
mov
mov
inc
mov
fdivl
ja
mov
shrl
sub
js
inc
ljmp
sub
xchg
sub
cmp
sbb
scas
add
add
mov
outsl
mov
je
insl
and
das
inc
divl
ljmp
js
movb
inc
out
inc
ret
add
repz
scas
fisttps
mov
or
shl
ret
inc
add
stc
pop
out
js
mov
sbb
movsb
add
test
xchg
dec
mov
adc
xchg
out
jle
pop
and
mov
mov
push
sbb
iret
daa
inc
inc
ret
cli
cmpsb
pslld
insb
cmpsl
inc
pop
mov
ss
dec
outsb
out
in
xchg
mov
repz
mov
ss
push
pop
stos
arpl
repnz
test
nop
ret
xor
pop
xor
jns
aas
jle
pop
sub
mov
xchg
rolb
hlt
data16
in
pop
xor
outsl
xor
mov
dec
xor
sbb
ja
sub
int
mov
pop
icebp
mov
lea
sub
sbb
shll
dec
add
xor
fidivrl
cmp
or
orl
pop
mov
test
sub
imul
inc
mov
lret
ljmp
pop
dec
andb
and
xchg
stos
xor
add
add
bound
or
mov
inc
sub
mov
sbb
sbb
jp
jg
insb
or
mov
jmp
enter
jmp
mov
mov
test
js
jmp
sub
dec
ror
cs
scas
jmp
in
xlat
iret
stos
std
mov
mov
fucom
neg
aas
or
imul
fidivrl
cmp
ret
ljmp
jbe
jecxz
jle
pushf
jne
sbb
add
lret
inc
lods
lock
add
arpl
shl
adc
xchg
adc
pop
fdivrs
jmp
loopne
pop
in
out
pop
pushf
and
outsl
jo
out
rorl
push
or
push
aas
push
and
jecxz
rcr
mov
fiadds
cltd
adc
cli
notl
lcall
xor
mov
in
insb
pop
xchg
test
jb
mov
cmp
movsl
aad
shrb
out
jb
cmp
adc
or
rol
mov
jae
jo
mov
xor
mov
nop
cli
fmul
pop
push
outsl
pop
and
out
xor
pop
xor
adc
mov
mov
pushf
cmpsb
mov
test
xchg
stos
aaa
cmpsl
push
sbb
mov
loopne
sti
dec
aad
insl
jecxz
repz
popf
js
or
dec
clc
cld
andb
aam
mov
lock
in
mov
add
sub
pop
popa
adc
dec
iret
mov
lock
popf
xchg
push
sub
sub
adc
inc
sarl
and
mov
mov
cmpsb
dec
fisubrl
cltd
shll
adc
add
lcall
jmp
pop
push
lock
adc
mov
rclb
pop
add
cmp
mov
mov
mov
cld
jmp
aam
insl
fmull
imul
fs
sub
jns
push
and
shlb
dec
pop
or
xchg
cmc
jg
into
mov
jnp
fwait
js
adc
jae
daa
dec
lods
xor
xchg
and
or
sbb
ficomps
clc
call
jle
lss
mov
adc
subl
lods
or
outsl
dec
pop
cld
dec
mov
pushl
mov
stos
jge
enter
test
test
add
add
jnp
test
and
inc
mov
or
outsb
push
imull
push
mov
stc
cmpb
div
pop
shlb
xorb
pop
mov
fadds
mov
sub
daa
rclb
pop
inc
sbb
bound
mov
adc
xor
mov
xlat
push
mov
xchg
push
adc
call
mov
pop
adc
push
lret
and
inc
cmp
inc
int
bound
xor
adc
cltd
in
movsb
dec
mov
add
popa
int3
or
dec
out
ret
xor
sbb
cmp
adc
out
fsubr
mov
jle
cmp
xor
addr16
sbb
xor
cltd
ds
xlat
pop
mov
push
shlb
sub
xchg
in
push
cmpps
sbb
js
fsubl
pusha
mov
popa
out
jo
sub
jnp
ret
mov
mov
xor
out
xchg
mov
stos
orl
jno
inc
jle
pop
inc
mov
add
cmp
bound
dec
cmp
shlb
stos
out
pop
mov
or
shll
ficoml
pop
ds
sub
push
push
or
idiv
ja
inc
in
push
dec
cmp
sti
ja
inc
lea
in
inc
jmp
or
mov
xor
popa
test
loop
lahf
jl
arpl
add
leave
movsb
mov
mov
ljmp
push
lret
and
mov
pop
pop
jne
pop
push
xchg
cmpsb
loop
xchg
ret
pop
adc
mov
fisubs
xchg
into
mov
aam
push
xor
pop
mov
jmp
push
inc
xchg
mov
fidivrl
cmp
jmp
adc
or
xchg
pop
mov
pop
xlat
jge
adc
pop
out
imul
leave
daa
leave
mov
out
rcrl
sbb
imul
pop
hlt
mov
sbb
adc
das
mov
sub
out
cli
mov
lea
sti
hlt
loope
stos
push
addr16
out
popa
enter
rorb
and
fwait
lock
gs
lahf
popf
cmpsb
sar
fdivr
loope
repz
lods
sbbl
dec
rcrb
rcrb
bound
dec
mov
xchg
aaa
test
xor
fdivp
mov
rcrl
jns
sbb
imul
ret
dec
dec
ljmp
frstor
sahf
ds
mov
jmp
xor
sarl
jne
pop
lods
imul
pop
popf
lods
sbb
xchg
xchg
jb
cwtl
pop
push
es
cmp
push
add
les
or
inc
fists
mov
mov
shll
leave
popf
jb
sbb
out
je
outsl
loopne
jecxz
add
mov
xor
sub
aaa
cli
call
or
sbb
sbb
addr16
sub
push
cmp
stos
inc
lret
repz
xchg
fs
popa
xchg
pushw
fcmovne
pop
xchg
adc
xchg
xchg
in
fdivrl
fwait
or
adc
into
jle
lock
int3
adc
inc
mov
lock
out
sbb
cmpsb
adc
shr
jbe
push
sahf
data16
dec
gs
sub
push
in
lret
in
lds
xor
mov
xchg
xchg
adc
jle
stc
xchg
dec
jmp
xor
lds
cmp
or
notl
inc
cs
test
mov
and
jbe
out
push
fbstp
mov
imul
and
dec
sbb
loopne
mov
mov
jmp
fisubs
pop
mov
sti
xchg
adc
cs
mov
pop
push
lods
movsl
mov
movsl
cmp
xor
xor
subb
orb
fs
imul
ljmp
hlt
mov
into
mov
push
add
les
sub
push
and
cld
push
inc
xchg
outsb
dec
mov
mov
dec
hlt
stc
gs
sti
movsl
or
in
testl
fdivr
int3
dec
pop
data16
xor
or
lret
dec
insb
popl
pop
xchg
pop
cmp
xor
pop
sbb
test
in
lds
push
cmp
xchg
xchg
adc
iret
aad
inc
es
rol
clc
mov
pop
lods
call
add
adc
adc
iret
push
pop
icebp
or
cwtl
test
push
das
pop
add
cs
movsl
in
mov
mov
ret
mov
jmp
sub
push
out
ja
test
out
stos
pop
sub
int3
inc
xchg
mov
mov
cltd
lock
cmp
and
dec
lods
pop
xchg
ja
stos
cmp
push
loope
jecxz
div
andb
xchg
movsl
das
icebp
stc
aad
aaa
cmp
sub
subl
inc
add
mov
push
pop
and
cmp
xchg
roll
imul
dec
jge
data16
jo
jle
in
lods
movsb
test
sbb
sbb
sub
popf
or
mov
mov
cs
mov
xor
aaa
dec
and
lret
call
mov
jl
sub
and
jbe
xchg
aaa
push
cmp
les
fs
sbb
mov
enter
sbb
out
dec
xor
fwait
xchg
and
aam
mov
push
ljmp
add
cmc
pop
pop
xchg
mov
push
and
fisttpll
rcrl
mov
ss
inc
movsl
outsb
adc
into
pushl
test
adc
jmp
adc
mov
clts
sbb
int3
inc
aam
cmpsb
cmp
add
xor
dec
cmp
gs
sub
xchg
and
inc
lret
les
dec
push
dec
je
mov
or
inc
lcall
leave
push
inc
int3
call
jae
push
mov
movsl
les
in
jmp
out
cmp
adc
jb
shlb
add
jle
test
ljmp
sub
or
jecxz
je
rcll
popf
in
lret
inc
jl
je
test
divb
dec
sbb
out
cs
loopne
iret
pop
jne
pop
and
js
pusha
imul
xor
repnz
xchg
add
push
jge
pop
ja
push
add
adc
std
fidivrl
sub
mov
pop
lock
jge
mov
out
push
dec
or
jno
mov
les
xchg
xchg
rol
dec
fmuls
pop
mov
test
stos
and
mov
mov
xchg
jbe
xchg
xlat
mov
inc
mov
cmpsb
mov
add
pushw
mov
mov
sbb
lds
outsb
lea
enter
cmp
lods
or
xor
test
and
sub
mov
fidivrl
pop
xor
push
mov
sbb
xchg
shr
mov
mov
addr16
fldt
aaa
jle
mov
sbb
jne
lret
adc
clc
insl
push
dec
shll
gs
loope
push
xor
jmp
mov
leave
pop
and
push
push
jbe
das
adc
insl
mov
stos
cli
cmp
lret
mov
add
and
push
les
push
mov
sbb
lahf
mov
cmc
in
sub
movsl
sbb
pop
divl
push
mov
movsl
dec
sub
xchg
push
mov
cmp
or
mov
icebp
mov
push
daa
xor
dec
mov
inc
cs
pop
add
out
pop
dec
adc
mov
std
sahf
scas
xchg
fisubrl
xchg
shlb
cli
cmp
jle
mov
xchg
out
lea
dec
mov
cmc
clc
gs
xchg
scas
cwtl
mov
jbe
xchg
xlat
xchg
js
hlt
or
movb
jns
mov
inc
push
and
in
lcall
call
rorl
nop
or
das
ret
jnp
dec
enter
mov
or
or
icebp
in
cli
xchg
sbb
scas
shlb
test
adc
shrb
mov
test
pop
lret
mov
cmpsl
popf
jbe
test
data16
cmp
adc
xor
aam
mov
cmpsb
sub
fisubrs
pop
rclb
imul
aas
add
xchg
in
mov
mov
call
push
out
iret
or
clc
hlt
push
mov
lods
jo
outsb
daa
dec
jne
xorl
hlt
gs
out
idivl
call
mov
xchg
mov
xchg
mov
pushf
jp
mov
sub
and
pop
test
addr16
out
test
push
in
cmc
jns
mov
push
in
ret
dec
cmp
pop
xchg
test
insl
ss
testl
mov
leave
mov
push
sti
sbb
push
and
dec
dec
int3
sbb
ret
push
ret
insl
cltd
mov
insl
shrb
outsl
fdivrs
movsl
mov
push
ljmp
ja
cmp
or
out
mov
popf
shll
ret
ja
movsb
loope
fnstcw
inc
jo
in
push
xchg
clc
es
fwait
lea
sbb
inc
add
scas
loop
aam
hlt
mov
inc
ret
je
sti
mov
xchg
mov
jp
rclb
dec
mov
push
std
mov
mov
fidivs
mov
cmp
fdivr
mov
mov
mov
xorb
jl
or
pop
mov
mov
push
and
inc
mov
out
xchg
pusha
pop
dec
test
xchg
cmp
jns
cmp
sub
jmp
jle
rol
jge
out
or
loop
cmp
dec
test
je
mov
mov
arpl
lcall
push
adc
ret
or
push
lods
cs
push
dec
out
ja
pop
inc
cmp
inc
sbb
fwait
mov
xchg
adc
hlt
pusha
fistps
push
jbe
adc
jo
js
xor
dec
or
jg
push
fidivrl
fsubl
adc
dec
aam
ljmp
gs
cmp
push
push
mov
hlt
sbb
and
in
sub
inc
ss
addr16
jg
sbb
jo
mulb
mov
mov
sarb
dec
mov
es
pop
jle
push
mov
cmp
cmp
and
sbb
cli
ret
push
adc
pop
stc
sbb
jo
lret
bound
mov
and
cmp
ds
inc
sub
or
mov
test
aam
jbe
aam
enter
cmc
xchg
mov
icebp
pop
lret
adc
pop
dec
dec
dec
movsb
shlb
pop
xor
faddp
hlt
cmpsb
push
pop
mov
test
les
mov
jne
cwtl
insl
movsl
inc
mov
xchg
add
cmc
insb
sti
ja
loopne
pop
mov
ljmp
fmull
scas
lods
pop
bswap
push
pop
push
mov
mov
push
xchg
repnz
jnp
or
aam
int
cmp
xor
pushf
dec
cmpb
in
cmp
dec
outsl
pop
push
je
and
icebp
loope
or
dec
inc
fcoms
inc
pop
jne
xchg
cmpsb
flds
dec
xor
rcll
push
movsl
inc
inc
xor
sub
jl
xchg
mov
clc
jo
int3
add
mov
pop
out
scas
xchg
mov
pshufw
imul
mov
rol
mov
into
cwtl
mov
xor
ret
cs
dec
push
push
int
push
call
mov
xchg
pcmpeqd
pusha
lcall
add
ljmp
pusha
xor
ret
mov
cltd
pop
mov
or
negl
mov
cmp
xor
mov
cmp
mov
aas
cmp
fdivrl
cmp
jns
xchg
fucomi
popa
pop
hlt
loope
popf
pop
out
repz
scas
sahf
pop
stc
push
sti
jnp
mov
pushf
add
js
fldenv
adc
negl
outsl
lock
pusha
aad
add
jb
sbb
imul
enter
out
ja
adc
lock
sub
push
std
pop
scas
push
aam
out
sti
out
pop
aam
xchg
subb
sbb
mov
shlb
js
sahf
imul
mov
movsb
fmull
jl
pusha
aaa
aad
jne
sbb
aad
inc
adc
subb
daa
imul
mov
mov
add
cmp
sbb
sbb
mov
and
dec
outsl
pop
xchg
or
dec
leave
mov
xlat
xchg
pop
les
xor
xchg
pop
pop
sahf
cld
js
insb
std
xchg
cltd
in
inc
or
inc
aas
jne
stos
jmp
in
mov
in
call
mov
outsl
cmpsl
dec
imul
rorl
inc
lahf
pop
rcr
mov
xchg
or
movsl
icebp
mov
mov
xlat
cs
lds
lahf
clc
add
rcrb
push
sbbb
outsl
je
in
inc
pop
jp
xchg
and
cs
loop
mov
inc
mov
movsl
pop
gs
add
and
jecxz
sbb
jbe
js
adc
stc
fcompl
mov
std
bound
xor
jns
sbb
hlt
and
adc
add
push
mulb
fcoms
inc
mov
mov
add
dec
shll
loope
ficompl
out
or
jbe
insb
dec
lods
subb
add
adc
gs
mov
jb
imul
push
popf
pop
hlt
xchg
jg
clc
cmp
mov
add
jno
fiaddl
stos
gs
push
add
repnz
test
lock
xchg
jle
das
sahf
clc
push
and
bound
add
push
xchg
mov
imul
add
bound
sbb
ja
test
jnp
fiaddl
inc
inc
sti
lds
test
sub
adc
stos
xchg
mov
pop
fldl
icebp
sbb
sbb
rorl
xchg
pop
lock
ja
pushf
cmova
sti
popf
test
mov
icebp
xchg
lahf
mov
xor
andl
or
cli
push
imul
std
pop
mov
aas
sub
hlt
ljmp
xchg
pop
adc
lret
and
outsl
cwtl
add
arpl
cmc
pusha
cld
shrb
adc
cli
mov
jns
stos
lret
fstpl
shr
data16
mov
shl
jp
push
movsl
cmp
pop
bound
int3
dec
std
inc
cld
fisttpl
testl
cltd
shll
jecxz
insb
inc
jp
out
add
or
pop
dec
lock
xlat
fcmovnbe
push
aam
jbe
sub
add
xchg
cmp
ljmp
xor
pop
cmp
movsl
mov
les
mov
fisttps
cmp
add
lret
and
stos
pusha
pop
cmp
mov
add
lea
inc
cmp
loope
test
or
or
sbb
cmp
xchg
movsb
sarl
loop
jcxz
jp
mov
cwtl
push
imul
insb
or
mov
pusha
testb
js
push
stc
fldl
push
imul
inc
test
adc
xor
jl
dec
mov
jno
mov
sub
sbb
sbbb
in
jo
std
cmp
dec
dec
jp
jle
mov
call
mov
int3
push
mulb
jb
and
mov
xor
pop
lds
sti
cs
test
push
and
sub
pop
xchg
xor
aas
rorb
leave
addr16
xor
cli
jo
int
inc
lock
test
dec
imul
std
inc
lcall
xor
fbstp
or
lahf
xor
sbb
xor
pushf
mov
icebp
sbb
push
inc
xchg
sbb
mov
lock
add
mov
xchg
mov
mov
dec
repnz
sbb
dec
repnz
inc
xor
sub
test
rcrb
rclb
push
test
stc
fistl
mov
sti
clc
pop
adc
pop
mov
xchg
add
outsb
mov
insl
ret
fistpl
push
mov
sub
lret
sbb
test
push
shlb
bound
pop
addr16
xchg
cmp
scas
xchg
fistpl
pushf
bound
pop
adc
add
or
and
int3
mov
mov
lods
shr
lds
jb
push
pop
jb
mov
test
lock
roll
push
gs
mov
jno
push
mov
jl
mov
insb
sub
adc
scas
lods
push
fstpl
xchg
inc
popl
mov
rorl
sub
mov
and
iret
mov
mov
mov
lret
rcl
jmp
sbbb
mov
fisubrs
dec
xor
out
lret
dec
setne
icebp
std
push
imul
adc
inc
sub
jle
ds
xorb
dec
fcomp
mov
nop
in
aas
xchg
nop
inc
pusha
movsl
xor
outsb
sub
xchg
dec
pop
mov
inc
lds
or
rcrl
test
xor
pop
mov
mov
lcall
test
mov
fnsave
mov
mov
fs
xchg
loop
push
cmp
push
mov
cmpsl
and
fnstcw
mov
in
popa
mov
lahf
or
mov
mov
into
lret
inc
mov
in
aas
xor
or
push
cmp
out
mov
sbb
cmp
mov
je
fsts
add
mov
or
rcl
cmp
push
and
or
nop
mov
xchg
sub
push
sub
insb
xor
dec
mov
andl
and
loop
add
or
pop
add
and
movsb
pop
xchg
test
sti
push
xor
or
jne
jnp
xor
fwait
or
imul
jg
or
sub
xor
lods
in
outsb
add
cmp
cmp
pushw
ret
rcrb
pop
push
scas
insb
movsl
mov
add
into
jo
repnz
jge
jnp
mov
out
fcompl
das
add
inc
jns
bound
aaa
sub
sub
dec
ds
mov
mov
or
inc
fdivr
sbb
jp
js
dec
adc
lock
inc
fbld
mov
movsl
loopne
mov
dec
stos
lret
lock
jns
divb
xlat
loopne
mov
push
adc
adc
push
hlt
js
mov
cmp
mov
mov
inc
scas
push
test
out
aad
ret
jb
xlat
jmp
inc
xor
outsl
imul
dec
clc
cmp
std
cmpsl
scas
and
mov
xchg
adc
int3
sbb
insb
jg
mov
icebp
push
adc
push
leave
mov
pop
push
icebp
add
jbe
pop
jle
insl
roll
mov
dec
mov
add
sub
imul
push
dec
push
sbb
stos
enter
enter
ror
xor
add
or
orl
js
jne
dec
mov
ljmp
addb
xor
or
test
inc
mov
fdivrs
mov
and
jnp
mov
jge
loop
push
mov
dec
daa
cmpsl
lcall
sbb
mov
pop
out
insb
push
xchg
popf
mov
or
mov
es
aad
test
xchg
clc
cmc
pop
outsb
and
popa
mov
pop
je
mov
push
xor
mov
sub
cmpsl
out
mov
decb
mov
aam
add
sub
flds
lcall
test
sbb
roll
mov
leave
sbb
mov
push
add
loop
jl
out
push
xlat
loopne
test
dec
leave
clc
imul
dec
sbb
out
orb
aad
inc
fmuls
test
xchg
jecxz
rorl
gs
dec
xor
movsl
xchg
arpl
ss
mov
inc
insb
mov
adc
push
les
push
call
add
pop
and
clc
out
pop
out
mov
pop
adc
dec
lret
out
lods
dec
pusha
push
cmc
xlat
call
and
gs
test
add
lock
je
push
aad
add
mov
aaa
xchg
cltd
jmp
jmp
jnp
rep
pop
pop
cltd
pop
mov
arpl
pop
dec
test
mov
cmp
xchg
dec
paddw
mov
cmp
fimull
adc
fwait
mov
shl
fstps
xor
enter
push
sbb
je
jle
sbb
jae
add
je
lods
lods
jnp
inc
push
jp
idiv
lret
ljmp
push
inc
jge
dec
daa
mov
lock
fsts
cli
dec
xor
add
out
pop
repnz
out
jns
pop
int
cltd
jle
dec
mov
mov
sahf
mov
mov
aad
mov
xchg
arpl
jp
or
inc
lahf
bound
iret
mov
xchg
xchg
test
leave
and
ljmp
shll
pop
loop
inc
dec
adc
mov
fnsave
data16
arpl
lcall
cli
or
scas
fdivl
inc
fistl
push
jb
sub
sub
sub
pop
jbe
push
hlt
out
fimull
nop
adc
push
push
and
mov
cmpsb
leave
sbb
push
push
arpl
pop
pop
leave
mov
jle
cmp
mov
out
es
inc
enter
xchg
inc
mov
lcall
cmp
mov
cmp
lods
lahf
or
inc
lock
movsb
mov
dec
cs
loope
faddl
pop
pop
or
jmp
mov
fwait
cmpsl
sub
inc
outsb
xchg
xor
sti
lds
in
icebp
add
ljmp
imul
or
mov
pop
insl
push
aas
cmpsb
imul
inc
inc
jp
xor
xchg
cwtl
mov
push
add
push
popf
or
cs
bound
rorl
pop
loope
iret
loop
jecxz
push
inc
outsb
add
fwait
rorb
mov
pop
push
push
cmp
ljmp
gs
mov
fistpll
test
xor
and
fs
xlat
or
adc
jmp
mov
lods
out
sub
or
jae
in
lds
fsubs
outsb
loop
cmpsb
mov
inc
push
sub
testb
lds
and
loopne
loope
mov
and
clc
addb
and
jg
ds
or
mov
adc
std
push
out
mov
imul
leave
cltd
jmp
out
jge
lea
and
dec
or
insl
test
and
and
mov
test
pushf
repz
cld
pop
or
in
xchg
in
pcmpeqd
int3
cmpsb
jmpw
xchg
roll
sbb
aaa
mov
cs
das
jnp
int3
insl
orb
pop
js
or
cli
inc
mov
mov
pusha
mov
adc
jns
mov
or
ret
jecxz
ret
xchg
loop
subl
pusha
mov
sub
push
pop
jmp
hlt
lret
test
ljmp
nop
mov
push
and
jnp
sub
clc
dec
adc
push
in
jmp
xlat
xchg
lds
popf
in
mov
mov
inc
adc
sbb
xchg
mov
inc
adc
sub
test
push
xlat
dec
push
sbb
adc
stc
mov
jmp
and
adc
sub
js
push
inc
push
lock
mov
in
push
xor
arpl
dec
aas
and
call
bound
in
pusha
cs
mov
in
lds
idivb
loop
loope
lret
push
repz
pop
gs
arpl
leave
pop
and
bound
gs
out
lods
cmp
push
mov
or
push
and
jge
mov
xrelease
jne
movsb
ret
push
fmull
adc
jle
jo
jmp
jnp
mov
aad
mov
mov
push
jecxz
shl
jno
rorb
shl
outsl
mov
daa
sub
addr16
lret
cmpsb
loopne
mov
sub
push
adc
push
mov
je
icebp
clc
mov
test
xchg
mov
jmp
outsb
gs
stos
fucomi
xorb
dec
das
in
lds
mov
enter
sbb
xor
jae
into
rcr
test
ret
xchg
push
dec
repz
insb
gs
imul
inc
ja
addl
clc
outsl
jp
xchg
fstl
xchg
pop
cli
test
lahf
pop
inc
iret
mov
incl
divb
bound
cmp
inc
lret
dec
mov
insl
jae
dec
dec
and
dec
jno
jg
and
iret
cwtl
inc
cmp
aam
lahf
shr
sbb
jmp
cmpsl
add
dec
sbb
jae
gs
test
jno
into
scas
and
xor
inc
or
push
icebp
in
pop
repz
scas
lods
fsubrl
cmp
jne
dec
mov
push
cmp
outsl
mov
fsubl
push
arpl
out
jg
push
imul
mov
mov
add
mov
xor
jne
push
rcrl
sbb
and
jmp
add
pop
jae
xchg
ja
mov
add
add
or
leave
mov
stc
xchg
push
shlb
pop
or
or
sti
addr16
nop
add
add
ficomps
loope
aam
in
fisttpl
adc
fcmovnbe
roll
cli
sbb
push
jmp
xor
sub
out
pop
or
fnstenv
mov
and
out
jae
jnp
in
inc
pushf
mov
fwait
inc
ret
mov
fbld
rcrl
push
cmp
jecxz
out
in
adc
push
mov
inc
cmp
dec
adc
push
stc
cmp
aaa
jbe
clc
cld
lret
cmpb
daa
outsl
xchg
and
push
inc
fimuls
adc
daa
cmp
cli
mov
aaa
outsl
push
lock
inc
in
or
add
in
xchg
xchg
into
js
jle
rolb
les
hlt
mov
fnsave
xchg
mov
stc
jo
scas
push
and
and
jno
cmp
mov
mov
push
cmp
jae
cmp
fistpl
sbb
xchg
lahf
pushf
insb
add
loop
add
in
mov
push
pop
cli
mov
xchg
jg
mov
jno
dec
xor
add
jno
fwait
push
add
xorps
mov
mov
lock
stos
iret
jmp
movsl
cmp
cmp
and
push
xor
xchg
pop
push
jmp
mov
outsl
add
es
and
and
mov
imul
mov
in
lods
inc
adc
and
ljmp
push
lods
test
ds
popa
fwait
mov
jle
lcall
frstor
cmpsb
xor
shll
mov
sahf
dec
cmpsb
mov
add
int3
fwait
xlat
aas
or
mov
sub
movsb
insb
sub
out
ret
inc
jge
mov
fildl
push
aas
jb
dec
call
sahf
pop
sbb
aam
outsb
mov
stc
sub
in
cmp
sbb
jnp
std
dec
rcr
cld
ror
push
pop
bound
jns
inc
int
sub
mov
pop
movsb
stos
repz
and
or
xorb
lret
sub
sbb
mov
xor
inc
scas
lahf
test
int
dec
aad
adc
pop
pop
jae
cmp
cmp
add
sbb
hlt
stc
jbe
addb
and
jmp
outsl
and
mov
cmp
push
mov
mov
push
cs
lcall
xor
rep
aad
mov
xchg
inc
scas
mov
jp
icebp
in
pop
movsb
jle
lcall
mov
add
data16
cld
lock
push
sarb
test
mov
in
inc
cmp
push
mov
std
push
nop
cmpsl
dec
or
call
inc
cmp
scas
inc
xchg
dec
or
cmp
or
cwtl
lods
cmp
mov
or
fstp
insl
xchg
sbb
pop
adcl
lea
push
sbb
cs
pop
insl
lcall
cmp
adc
add
outsb
dec
jl
sbb
in
ret
adc
and
sbb
js
lock
andb
cltd
inc
popf
push
pop
inc
lds
fidivrs
sti
sub
pushf
ret
cli
add
mov
fnsave
sub
aam
fwait
jno
std
hlt
dec
cmpsl
and
loop
xor
add
fidivrl
cmc
adc
outsb
aaa
xchg
sub
call
fwait
or
ja
xchg
jle
and
jge
enter
add
xchg
jb
fbld
fisubs
mov
and
mov
dec
ljmp
xor
sub
or
lcall
shrb
adc
mov
inc
lock
pop
aam
lret
imul
stc
and
jbe
iret
xor
jecxz
gs
ds
lock
adc
pop
adc
in
fwait
push
sbb
cs
sbb
scas
das
mov
aam
movsl
xor
stc
test
les
dec
inc
sub
pop
outsl
cmp
mov
test
imul
inc
ljmp
enter
int3
nop
pop
outsb
inc
push
jne
add
shrl
jge
je
xor
pop
lock
dec
rclb
dec
mov
mov
inc
inc
ficompl
lock
ret
insb
sti
out
mov
arpl
mov
dec
out
loop
mov
std
and
mov
or
psrlq
dec
pop
adc
int3
call
xlat
xchg
push
or
jb
sbb
out
add
mov
lods
shll
in
dec
sub
push
sarb
jne
shll
nop
xor
push
xchg
xor
mov
mov
fucomp
fisttps
jg
test
fcomi
cmp
xchg
clc
dec
bound
adc
subl
ror
test
addr16
movsl
pop
mov
and
idiv
cmp
mov
out
popa
xchg
in
jp
movnti
lods
cwtl
outsb
daa
pop
and
adc
xchg
test
scas
and
mov
mov
in
dec
jl
mov
dec
inc
repz
popf
xchg
pop
push
lret
dec
push
push
es
aas
cmc
mov
mov
xchg
sub
adc
notb
mov
inc
sbb
mov
jp
test
fs
cmpsb
inc
fdivrp
call
pop
int3
mov
in
leave
or
xchg
fwait
jmp
fadd
arpl
adc
int3
add
lret
mov
push
mov
addb
mov
daa
push
insb
je
sub
test
adc
jmp
or
or
push
pop
xchg
jle
insl
js
jnp
xor
daa
notl
pop
mov
stc
pop
mov
mov
inc
sbb
pop
lods
cmp
xchg
sub
jg
pop
clc
stos
push
pop
std
in
popa
lock
dec
jbe
mov
pop
hlt
xchg
push
cmp
aam
fwait
add
jmp
push
jns
or
movsb
andb
pop
faddl
xor
int3
int3
and
pop
repnz
sahf
out
mov
jmp
pop
mov
bound
inc
xchg
inc
shr
mov
loope
jl
out
mov
insb
test
xor
fnstsw
mov
vorps
je
rclb
push
rcll
rcrl
leave
cwtl
aam
repnz
addl
mov
fcomi
cwtl
sbb
inc
and
xor
push
jne
sarb
int3
ljmp
and
jb,pn
sbb
fistpll
sbb
push
push
stc
addr16
dec
out
std
cmc
test
sahf
or
fiaddl
and
repnz
push
insb
inc
aaa
jge
sti
fisttps
mov
jno
adc
aas
xlat
add
enter
stc
or
sbb
loopne
dec
pop
jae
aam
fisubl
fadds
imul
sub
push
sbbb
test
push
pop
inc
insl
push
loope
push
sub
cmpl
test
xchg
jl
test
addr16
mov
sbb
inc
or
sub
pop
std
cs
jne
test
pop
inc
add
xor
faddl
aad
adc
mov
lcall
cmp
add
popf
pop
cmpsb
or
mov
sbb
and
test
aam
mov
xchg
pop
adc
out
xor
popa
or
push
ljmp
push
iret
lea
repnz
pop
out
inc
sbb
insl
inc
pop
pop
test
pop
std
sti
stos
testl
and
pop
xchg
xchg
add
into
xchg
mov
cmp
mov
std
out
sbb
sub
push
and
mov
jb
hlt
push
fstpt
fstpt
int3
jno
push
aaa
les
mov
insl
aas
xchg
cmp
in
pop
jecxz
pop
and
les
xor
mov
cmp
xchg
push
dec
jnp
or
xor
aaa
dec
stc
cmp
push
cld
push
adc
ret
jecxz
cmp
out
sbb
lock
fistpl
ret
aaa
in
xor
and
pusha
mov
push
aas
insl
fs
xor
into
or
inc
scas
mov
jl
fdivs
push
mov
sub
mov
add
dec
pop
sahf
outsl
dec
or
aam
xlat
cmp
add
je
inc
push
test
fdivrs
or
daa
push
sar
jge
das
cmpsb
add
fisubs
adc
int
int3
shll
ret
sbb
or
sub
out
sbb
xchg
fldcw
dec
pushf
cmpl
roll
mov
sbb
lcall
dec
repnz
popf
aam
mov
subb
inc
jge
sub
jnp
call
adc
out
repz
jg
add
cmp
or
xchg
dec
les
out
adc
cmpsb
ljmp
pop
cs
loope
mov
mov
fidivs
das
ret
xor
pop
scas
dec
cwtl
nopl
cld
bound
xor
and
rolb
repz
mov
cltd
inc
pop
cs
mov
iret
andl
mov
push
popa
inc
in
enter
insb
mov
js
idiv
pop
clc
insb
sub
jl
xchg
aad
and
pop
jns
mov
xchg
mov
adc
push
dec
and
adc
push
outsb
jge
mov
mov
in
pop
mov
mov
or
pop
mov
or
jge
leave
int3
xor
inc
mov
ret
pop
enter
pop
xchg
out
cmovl
popf
inc
sbb
sub
pop
push
push
fnstsw
shll
dec
or
les
and
subl
imul
xchg
inc
fwait
mov
and
or
lret
inc
aas
lret
xlat
stos
inc
les
mov
xlat
push
sub
dec
push
dec
cli
call
outsl
stmxcsr
das
mov
or
cmp
or
jmp
into
mov
std
ljmp
cmpsb
mov
popf
fwait
cltd
sarb
icebp
xchg
scas
std
and
push
push
mov
insl
fildll
stos
dec
dec
les
test
cmp
inc
cmpsb
xor
pop
push
stos
pop
push
sub
orb
mov
das
movsl
add
movsb
mov
mov
fcomp
in
pusha
inc
push
fisttps
sbb
cwtl
mov
stos
jb
movsl
das
repnz
or
sub
in
cmpsb
sahf
mov
xor
inc
push
test
mov
mov
mov
scas
jbe
mov
mov
dec
popa
cwtl
lret
mov
jo
xor
mov
idiv
ja
mov
int3
push
pop
movsl
sub
cwtl
rorl
shrl
jnp
pop
pop
test
or
std
inc
jecxz
and
push
mov
mov
stos
adcb
outsl
les
test
xchg
out
cs
out
sahf
adc
scas
pop
jmp
pop
test
pop
shrl
push
and
subb
arpl
shr
scas
aad
sahf
popa
scas
cmp
lret
jno
push
or
pop
mov
icebp
sub
and
push
add
sar
dec
mov
call
push
mov
cwtl
cmp
pop
jmp
or
dec
sbb
jbe
add
nop
das
loopne
into
int3
push
fists
fs
jae
test
pop
mov
mov
icebp
adc
fildl
sbb
fucompp
dec
pop
push
movsb
mov
push
test
add
lahf
out
lahf
inc
adc
mov
loope
dec
fcmovne
shrb
ret
sub
mov
xor
mov
push
data16
inc
nop
je
popa
mov
or
pop
inc
hlt
mov
sub
sbb
bound
lret
xor
dec
cmp
cmp
cmc
mov
adc
aad
imul
mov
cld
daa
jno
sub
aaa
cltd
pop
inc
push
mov
mov
je
xor
test
inc
and
fsubrs
mov
subl
cli
addr16
ficoml
call
fwait
jecxz
subb
and
shlb
mov
or
adc
pop
lahf
mov
lcall
lret
ljmp
rcr
loope
aas
ljmp
movsb
push
push
nop
push
lahf
repz
mov
stos
pusha
cmp
sbb
lea
iret
lods
shrb
dec
lock
xchg
in
or
jb
adc
xchg
mov
sar
stos
test
xchg
scas
pop
icebp
mov
xor
out
movl
inc
push
xchg
popa
push
jg
scas
imul
adc
int3
test
mov
pushf
sti
dec
xchg
add
push
jge
or
cmp
xor
adc
bound
mov
fists
and
cmp
lock
add
or
mov
fdivp
lcall
addr16
int3
rclb
dec
pusha
mov
rolb
or
lret
clc
sbb
jl
pop
pop
in
push
add
scas
dec
mov
jns
sarb
sbbb
popf
lds
int3
push
or
lss
adc
push
mov
addr16
pop
in
imul
fiaddl
js
ret
stos
sbb
sub
adc
decb
dec
sbb
adc
cmp
movl
sbb
xor
sbbb
out
push
push
cmp
or
mov
cmp
jns
jecxz
out
and
hlt
or
popf
push
leave
push
repz
repz
and
mov
pop
lea
inc
or
xor
push
mov
cmpsb
jge
cmp
int3
mov
loope
add
fisubrs
pushf
add
fistpll
xchg
jge
shl
ss
jnp
jmp
add
cld
cmp
jno
xor
dec
xor
sbb
jge
div
outsb
xchg
push
add
loopne
ret
cmp
fisubl
orb
rcrb
jle
lcall
lods
pop
rolb
or
arpl
pop
imul
push
mov
and
mov
loop
xor
push
push
outsl
sub
outsb
loope
jne
bound
js,pn
ret
or
lret
jg
cld
pushf
repz
loopne
inc
aas
pop
pusha
pusha
sbb
in
dec
mov
mov
int3
lret
pusha
dec
gs
lea
cmp
push
cmp
imul
call
mov
outsl
cwtl
pushf
sub
fwait
mov
dec
aaa
hlt
add
testl
sarb
les
mov
adc
jae
outsb
inc
loopne
or
popf
push
inc
pop
inc
shrl
daa
push
pop
adcl
or
jp
cmp
and
scas
dec
into
ds
jbe
pushf
push
dec
enter
sub
mov
shlb
jge
pop
popf
adc
out
divps
adc
push
rcll
sti
imul
pop
pop
adc
mov
imul
stc
or
sub
pop
je
mov
into
arpl
dec
push
fisttps
xchg
cli
sbb
outsb
add
in
jecxz
mov
stos
add
rdpmc
popa
repnz
aam
push
test
inc
in
shrb
movsl
mov
sub
jnp
sub
rcrb
xchg
lods
mov
mov
dec
loopne
jmp
pop
pop
push
mov
add
les
adc
dec
outsb
pop
mov
dec
adc
aam
cmp
cld
mov
xchg
enter
jns
dec
or
loopne
data16
std
inc
inc
or
mov
xlat
mov
bound
xor
adc
xor
mov
xchg
adc
mov
inc
jb
cmp
out
scas
mov
push
jo
sbb
pop
lds
fisubrl
and
or
subb
js
enter
mov
mov
mov
xor
push
out
sub
fistpl
push
in
fcoms
sub
cmp
and
mov
push
out
lds
mov
sbb
and
inc
cmovo
jbe
jge
cwtl
push
fs
ficomps
xchg
mov
sub
insb
pushf
jns
xchg
jbe
aad
and
adc
inc
pop
mov
pop
mov
jo
mov
mov
sbb
lcall
rcrl
bound
mov
ss
fincstp
test
mov
outsb
cmp
in
sub
sub
pushf
push
sub
dec
inc
mov
jle,pn
pop
dec
aam
out
mov
sub
lahf
loope
sahf
mov
aas
cwtl
shlb
lahf
and
add
cwtl
js
sub
in
push
ret
icebp
add
push
inc
rclb
pop
imul
dec
push
pop
mov
daa
test
mov
test
in
fistl
push
lds
in
scas
add
test
sub
dec
scas
push
mov
sarl
popf
adc
out
loop
pusha
test
insl
sub
jl
or
sti
in
rcrb
add
sbb
cmc
xor
cmp
stc
jle
sub
sub
js
mov
jno
cmp
inc
pusha
add
dec
pop
stc
push
movsb
movl
ficoms
scas
fsubs
cmpsl
xchg
xchg
and
mov
cltd
dec
cmp
jae
sbb
stos
xor
out
pop
mov
loop
ret
jp
mov
mov
stc
lods
pusha
hlt
icebp
push
cmp
mov
imul
test
adc
or
sub
in
push
test
sti
push
mov
outsb
mov
or
test
mov
inc
pushf
push
inc
sti
pop
shrl
outsb
popa
mov
mov
add
test
push
sbb
outsl
sub
ret
fdivl
inc
testb
or
pop
imul
inc
dec
daa
jg
popa
iret
xorb
lcall
fisubs
out
jmp
push
sub
inc
dec
inc
sbb
fwait
pusha
xchg
cmpsl
dec
lea
xchg
mov
leave
aad
in
dec
jb
scas
addr16
sbb
mov
iret
mov
push
lock
sti
xor
loop
decb
sbb
and
sbb
aaa
xor
popa
mov
xchg
adc
mov
cltd
sbb
scas
cwtl
jle
test
ret
cmp
sbb
mov
inc
shr
or
mov
pop
stos
out
mov
and
popa
outsb
sub
test
dec
pop
inc
test
loopne
sbb
dec
and
lret
fwait
xchg
dec
repz
pop
xorl
push
pop
cmpsb
dec
xchg
cmp
aas
push
adc
lea
jl
clc
mov
outsl
cwtl
call
cmpl
mov
sbb
xchg
cwtl
pop
hlt
ret
push
scas
cmpb
aas
xor
ljmp
pop
mov
cmp
push
adc
xchg
lock
mov
push
inc
xor
jle
mov
adc
scas
icebp
leave
lahf
daa
inc
int3
int
les
xorl
mov
dec
into
dec
mov
or
xlat
dec
cltd
sbb
sub
jmp
and
std
leave
adc
loope
lret
cli
push
sub
push
daa
cmp
iret
das
adc
or
mov
adc
pop
xlat
int3
xor
pop
leave
xor
ljmp
stos
cmpsl
or
jae
xor
lret
lods
imul
pop
mov
sbb
lret
sarl
xor
adc
js
out
pushf
out
stos
add
mov
jg
mov
iret
xchg
aad
das
jl
sub
xor
xchg
mov
lcall
es
push
outsb
outsb
outsb
sbb
lds
sbb
shr
cs
ljmp
xor
mov
inc
int3
iret
in
insb
movsb
push
push
mov
outsb
mov
adc
xor
clc
push
push
pop
jecxz
adc
jo
lret
jge
rclb
mov
sub
sti
push
cmp
aaa
and
and
dec
stos
test
or
call
aaa
lods
dec
ljmp
inc
fucomi
mov
xchg
or
mov
cmp
inc
xlat
das
push
daa
int
and
dec
pop
subl
ret
rorb
sub
int3
outsb
mov
shll
lahf
mov
cmp
pop
or
pop
aas
inc
dec
cmp
add
outsl
jns
mov
mov
add
add
jo
loopne
or
inc
shlb
orl
inc
ffreep
icebp
cmpsl
mov
sarb
in
pushl
xor
test
mov
lret
cmp
orl
icebp
cmp
push
add
xchg
xchg
jbe
iret
or
std
add
das
pushf
dec
nop
lds
je
dec
fs
cs
pop
enter
jnp
stos
in
cld
loope
notb
jecxz
mov
std
sub
jae
inc
daa
mov
push
push
cmp
popf
xor
andl
or
adc
mov
cmp
jl
xlat
mov
loopne
rclb
loope
jp
xchg
dec
add
pop
xchg
lcallw
cs
leave
or
pop
jno
jp
sbb
jmp
js
into
mov
call
push
ss
dec
inc
lock
adc
xchg
rcl
imul
lods
xchg
ret
xor
push
loopne
into
push
test
aam
sub
mov
xchg
nop
sarl
mov
xchg
push
mov
icebp
sbb
shlb
sub
lret
mov
dec
sub
pop
mov
outsl
inc
bound
push
cmpsb
add
lahf
push
or
iret
test
pop
mov
fucom
sti
testb
mov
sub
cmp
in
sahf
xchg
cmp
cmp
roll
fidivrl
push
dec
int3
sub
test
add
mov
cmovae
jmp
es
pop
cli
ja
arpl
jl
jg
xchg
stc
mov
xlat
push
fs
scas
ss
aad
pop
push
outsl
out
lock
and
dec
xchg
shll
adc
fcomip
ret
push
decl
imul
test
dec
mov
cli
add
lahf
fsubr
add
into
mov
sbb
rcrb
inc
cmpsl
xor
das
push
jp
clc
pusha
ret
je
rolb
xchg
loop
inc
ljmp
xchg
mov
push
sub
adc
cmp
or
lods
jne
jg
shl
rcrb
xchg
in
aad
dec
in
mov
mov
cmp
and
add
dec
xchg
cmp
ljmp
xor
repz
mov
inc
jecxz
push
jo
stos
ret
fucom
in
or
add
rcll
adc
xchg
lock
mov
pop
pop
adc
test
test
mov
jbe
cmp
dec
or
mov
xor
stos
xor
pop
pop
xchg
out
push
lret
push
loopne
cwtl
scas
into
mov
inc
mov
and
push
into
jnp
sub
cmp
xchg
dec
or
rcrb
call
sub
mov
out
jb
mov
stos
pop
outsl
roll
mov
push
cmp
cmp
das
mov
shrl
mov
mov
sbb
or
ja
jne
inc
xor
call
lcall
adc
movsl
pop
lds
mov
movsb
out
stc
mov
jl,pn
push
jp
xlat
pushf
xor
jbe
int
mov
mov
lds
std
popa
fadd
mov
xor
imul
adc
scas
xchg
xor
scas
mov
mov
push
pusha
or
jnp
push
adc
sbb
pop
add
frstor
test
rolb
xchg
notl
scas
or
loop
ss
adc
xchg
xor
push
xchg
stc
int3
push
mov
mov
in
lret
call
add
lcall
xor
inc
stos
jg
lods
xchg
cmc
cld
popf
sbb
xor
rcll
aam
aam
cs
scas
xor
into
xchg
xchg
push
arpl
add
pusha
mov
push
mov
sbb
in
call
pop
aas
push
roll
dec
jne
icebp
fiadds
pop
pop
in
add
xlat
sbb
inc
xor
sub
mov
lds
or
sub
cmp
xchg
enter
roll
gs
push
dec
jmp
mov
xchg
idivl
repz
jns
pop
or
dec
mov
sahf
rolb
mov
out
imul
jecxz
or
mov
jg
addr16
jbe
jo
sbb
or
and
inc
adc
cli
jg
ret
imul
shl
xor
movsl
aam
push
and
pop
jl
aaa
cmp
hlt
cmp
jns
sbb
sti
pop
nop
mov
xlat
divb
rorl
mov
lcall
stc
vmovq
aad
mov
or
sbb
mov
mov
into
orb
and
mov
or
push
sahf
sbb
movsl
jle
out
dec
push
dec
iret
idivb
data16
ds
popa
movsl
popa
mov
push
or
hlt
sahf
icebp
jns
pop
out
aam
mov
bnd
sub
ficomps
inc
fnstsw
fdivs
lock
jle
aas
or
sbb
out
mov
push
inc
pop
adc
mov
test
test
fnsave
inc
data16
add
fimuls
cld
inc
fistl
in
iret
jecxz
pop
ficoml
cmp
lods
xor
cmp
xchg
fnstenv
mov
pop
out
call
lea
cwtl
jns
push
or
cmpsl
pusha
jecxz
xchg
inc
ja
pop
and
inc
push
adc
inc
push
inc
ret
jne
aad
in
sbb
pusha
push
and
pop
add
push
std
xlat
negl
lods
mov
outsb
ds
push
stc
mov
repz
mov
xchg
xor
mov
xchg
or
movsb
fstp
adc
and
sbb
cld
xor
cmp
xchg
mov
push
lcall
add
sbb
xor
test
cld
imull
mov
arpl
cmpsl
cli
test
xchg
jb
push
ss
leave
and
icebp
and
xor
mov
push
movsb
jmp
adc
lahf
jmp
test
sbb
pop
mov
lahf
testl
sbb
hlt
repz
clc
sub
sub
sub
mov
insl
data16
stos
cmp
out
out
mov
outsb
pop
das
jno
push
gs
clc
sub
fs
push
or
iret
clc
xchg
dec
adc
or
ret
pop
xor
sahf
inc
jbe
jl
sbb
push
add
lahf
jp
add
out
ret
int
jb
leave
dec
xchg
xor
cli
cmp
outsl
dec
mov
in
mov
sbb
push
and
fisubrl
push
cmc
fstl
mov
jge
popf
jae
bound
adc
pop
push
or
flds
cltd
scas
imul
adcb
and
dec
stos
int
in
movsb
and
jl
imul
jge
sub
cmpsb
ljmp
leave
fists
push
insl
std
mov
pop
jge
jb
in
jp
or
hlt
mov
enter
fadd
test
cmp
xor
and
add
sti
xchg
cmpl
fcmovnu
xor
xchg
lret
testl
sub
dec
ret
into
adc
or
iret
adc
addb
call
xor
adc
push
or
mov
movsb
loope
out
mov
mov
sub
imul
test
xchg
sbb
fs
and
mov
adc
mov
movsb
inc
rcrb
adc
jnp
xor
sbb
jno
lock
pop
dec
pop
fwait
mov
mov
fbstp
les
repnz
rclb
adc
gs
dec
fisttps
repnz
jns
mov
int
jle
lahf
scas
rcr
mov
das
or
gs
dec
call
jle
stc
pop
mov
test
lahf
sbb
adc
mov
inc
dec
push
add
jns
insl
fs
dec
xor
call
cmc
shlb
fs
xchg
popf
in
jo
xchg
jle
leave
rorl
and
das
dec
iret
addr16
loopne
imul
xlat
dec
push
test
jmp
mov
cmp
sbb
sub
ja
in
dec
mov
pop
out
push
mov
stc
fildl
inc
call
rcl
fwait
cwtl
mov
outsb
jp
enter
cmc
lods
inc
fs
popf
iret
aas
adc
loopne
in
rolb
incl
sub
xor
jg
data16
in
sbb
jp
mov
adc
push
je
movaps
sbb
int3
negb
cmp
addr16
push
inc
in
push
mov
cmp
movsb
daa
push
sub
int
push
pusha
shll
push
enter
cltd
mov
add
or
jns
std
repz
imul
mov
leave
scas
cmp
pushf
jno
or
pop
xor
mov
or
cwtl
aam
jo
sub
das
mov
out
test
jle
mov
mov
push
fiaddl
imul
or
cmpb
int3
fisubrs
addr16
stos
lea
cmpsb
iret
jl
popf
int
scas
aaa
int3
loop
nop
jae
mov
add
xchg
test
lret
mov
loope
cmc
movsl
lret
inc
mov
and
imul
dec
test
mov
xchg
add
rolb
les
adc
jbe
insl
mov
push
aaa
sub
sbb
jns
lods
jge
sbb
sub
pusha
xchg
leave
fdivrs
inc
dec
imul
addb
cltd
jmp
ficomps
fisubs
jne
dec
xchg
int3
mov
lret
test
sub
mov
in
mov
cmpsb
push
leave
rcll
sbb
stos
or
cmc
and
xor
cmp
cmp
mov
and
fmuls
push
xor
divl
adc
fisttps
lahf
and
mov
lea
cmp
sub
mov
mov
mov
mov
aaa
add
sub
into
ret
inc
pop
stc
xor
test
adc
or
mov
cmc
mov
lods
or
jge
fbld
mov
aaa
pop
andb
push
leave
mov
mov
psubb
add
sub
sub
repnz
add
jae
js
das
cmp
jg
cmc
scas
loopne
or
out
push
mov
xchg
or
mov
ret
and
into
icebp
push
pop
sbb
inc
repnz
fisubrs
and
add
test
mov
adc
cmp
jb
mov
sarl
scas
cmp
scas
add
pop
mov
and
fcoms
sub
jge
call
sti
mov
cmp
sbb
lods
mov
icebp
pop
push
shl
and
xchg
jnp
jns
push
cmpsb
insb
rclb
xor
adc
mov
and
pop
leave
lock
xlat
sti
push
jb,pn
xchg
or
ret
xchg
cld
loope
cmc
fwait
lock
pop
sbb
adc
ret
std
push
repnz
lcall
lret
insb
stos
rcl
dec
mov
and
xchg
sub
hlt
fs
and
pop
rorb
pop
mov
fcomps
jae
stos
push
mov
in
or
add
sbb
sbb
in
mov
jno
add
pushf
movsb
xor
adc
adc
push
addl
cmp
xor
mov
jb
loop
cld
icebp
fldcw
mov
vmread
outsb
clc
sub
arpl
scas
mov
mov
adc
fwait
addr16
xchg
push
cwtl
ret
pop
cmp
push
lahf
adc
test
or
js
or
mov
fdivl
scas
sahf
outsl
sub
mov
sbb
or
and
mov
mov
out
dec
stc
mov
lock
mov
or
dec
fldl2t
mov
sbb
inc
outsb
jg
add
bound
xor
sarb
or
mov
mov
push
out
mov
addr16
ret
mov
xor
in
sbb
or
cli
stos
mov
test
aad
xor
xor
lret
imul
adc
sub
sbb
push
xor
cmp
mov
test
out
pop
jbe
in
cltd
shl
out
cmc
out
scas
ljmp
jbe
mov
cmp
movsb
mov
cltd
add
pop
bound
lcall
mov
popf
stos
sbb
mov
xor
imulb
js
ret
or
mov
mov
mov
repz
jns
cltd
mov
add
pop
add
mov
lods
jno
sbb
movsl
mov
iret
xchg
clc
lods
in
test
add
or
ret
sbb
pop
pop
or
std
pop
ffreep
mov
arpl
sub
sub
test
pop
cli
xchg
mov
inc
inc
dec
jmp
notl
lock
add
mov
mov
out
adc
lds
push
scas
dec
nop
mov
mov
mov
ret
fwait
xor
repz
push
fs
fwait
push
inc
sbb
adc
push
test
subl
fisubl
fs
pop
mov
add
xchg
sub
xchg
pop
lods
sub
sbb
ljmp
lahf
jecxz
ret
mov
cltd
clc
lods
dec
cli
fimuls
cmp
jmp
sub
lds
add
lret
ficoms
and
nop
lret
xor
sti
mov
mov
or
loop
aaa
insb
inc
inc
pop
dec
int3
jnp
xor
ret
and
mov
jmp
in
pusha
cmc
test
mov
das
pusha
dec
je
fadd
test
daa
xchg
lds
xchg
dec
mov
or
pop
lret
ja
lock
mov
add
lock
in
and
and
js
insb
adc
scas
dec
sbb
stos
xor
mov
cmpsb
repz
dec
bound
jne
cs
inc
lss
add
cmp
xor
push
insb
ror
jmp
mov
imul
jno
mov
addr16
mov
pop
fcomps
int3
pop
insl
mov
adc
mov
add
cmc
pop
mov
sahf
xor
or
mov
imul
ret
inc
or
jno
and
in
test
addb
mov
pop
push
popf
je
jge
mov
fsubrl
lahf
and
jae
sahf
outsb
mov
loop
inc
mov
out
add
xor
fimull
and
fstpt
inc
mov
push
aam
push
cs
unpckhps
mov
xor
mov
lcall
add
jl
mov
std
daa
jge
push
jne
shl
and
xlat
xlat
mov
push
push
push
es
adc
in
in
and
test
lret
div
and
ja
movsb
les
es
aad
dec
and
sbb
sbb
pop
jno
icebp
xor
loopne
mov
jo
int3
mov
ja
in
sub
dec
shrb
enter
sub
mov
loope
sub
xchg
adcl
xor
add
jno
addr16
scas
jae
mov
adc
cmpsb
or
dec
lock
test
dec
sarb
fdivs
std
mov
xchg
xchg
mov
cmpsb
lea
mov
cmp
outsb
lret
jge
and
jae
fdivl
add
add
and
cmpsl
cmp
sbb
mov
ss
in
sub
iret
ret
pop
jecxz
test
and
rcrl
inc
ss
out
mov
addb
pop
xor
dec
push
jecxz
sti
inc
add
loopne
rcll
sbb
into
cmp
jo
cmp
xchg
mov
addb
stos
mov
fsubrs
jecxz
mov
mov
pop
fldcw
adc
leave
dec
mov
pop
cmp
jbe
push
lcall
insl
jge
mov
adc
cmpsl
lret
rcll
and
aas
imulb
in
call
xor
lret
jo
icebp
hlt
inc
cli
ja
fisubl
mov
je
inc
mov
loopne
jmp
adc
push
jno
add
cli
mov
sahf
and
lcall
mov
mov
xor
sub
push
cmp
jp
por
mov
xchg
sub
arpl
xor
dec
mov
fcomip
or
xchg
pop
add
dec
sub
add
sbb
popl
dec
call
add
outsb
int
or
imul
sbb
or
cwtl
ficompl
push
mov
push
std
subb
fs
sub
mov
sbb
ljmp
mov
inc
or
jns
sbb
add
sbb
aad
cmpsb
fcmovb
cmp
mov
mov
add
fstps
mov
lret
test
ret
dec
mov
and
inc
jge
sti
popf
lods
jns
loopne
imul
repz
add
std
fsubrs
movsl
sti
adc
mov
jno
hlt
aaa
rcl
int3
lcall
inc
stc
add
cmp
or
and
xor
xor
jecxz
mov
sub
fisttpll
xor
push
rorb
in
mov
sbb
rcl
sub
cmpl
sbbl
sub
push
mov
or
xchg
sti
cmp
mov
dec
call
pop
fildll
cmp
sbb
lea
shlb
sbb
outsb
cwtl
lods
xchg
cmp
shrl
pop
pop
mov
sbbl
fbstp
out
mov
mov
in
sub
mov
xchg
push
xor
mov
filds
jne
xchg
dec
popf
inc
push
lock
mov
mov
js
loope
xor
mov
mov
mov
adcl
das
mov
push
pop
and
xchg
mov
cmp
aad
std
test
dec
leave
bound
decl
lock
sbb
push
sarb
ss
imul
adc
ffree
jb
pop
mov
arpl
xchg
lahf
iret
adc
xchg
jne
jnp
push
imul
adc
out
adc
xchg
outsb
int
or
imul
insl
aad
shlb
jbe
test
stc
or
shll
repnz
mov
mov
or
rolb
insl
pop
loope
mov
xor
mov
push
xchg
sbb
mov
cmp
lds
hlt
xchg
sbb
jl
test
lods
test
fnsave
xchg
cltd
push
out
mov
test
sbb
rclb
sub
outsb
ret
test
mov
mov
lods
mov
jl
daa
sub
int3
into
cltd
dec
rcr
mov
cmp
test
gs
mov
aad
jmp
lcall
sbb
pop
je
test
sbb
pop
dec
int
ret
out
push
push
mov
aam
loope
push
mov
sbb
cmp
inc
stos
mov
cmpsl
jne
loope
jae
lcall
ljmp
loop
gs
fucom
mov
std
mov
into
or
rorl
or
lods
jecxz
ficoml
mov
push
add
mov
fsubs
iret
sub
jae
fisttps
imul
ljmp
mov
lret
cmpsb
jg
xlat
mov
pop
sti
cmp
outsl
xor
in
cs
movsl
mov
repnz
scas
adc
cld
jbe
add
setae
shll
push
inc
cmp
insl
push
cld
pop
iret
adc
xchg
lcall
rorb
inc
mov
xor
jge
mov
xor
sbb
fmuls
and
mov
test
and
pop
pop
ss
xchg
jmp
mov
js
inc
fsubrl
sub
fincstp
pop
jg
ret
jp
jle
inc
sbb
out
imul
sub
outsl
xchg
ret
mov
stc
ds
ljmp
xor
aad
push
aaa
sti
les
xor
push
xlat
adcl
ljmp
outsb
rorl
aas
mov
or
lret
lahf
and
aas
gs
xor
and
jp
xchg
cmp
subb
stc
aad
jbe
and
ret
jle
leave
cmp
iret
dec
loop
or
mov
inc
lahf
cltd
icebp
sub
xchg
int3
dec
xor
xchg
pop
stos
add
cmp
adc
mov
dec
fadds
cmp
rcrl
xchg
or
das
push
das
stos
sbb
jp
xchg
dec
dec
xor
add
das
push
push
orl
in
inc
jns
adc
loope
mov
and
in
xor
mov
add
adc
cmp
cmpsb
sbbl
mov
ljmp
pop
out
insb
pop
push
adc
out
loop
add
inc
inc
add
pop
into
push
mov
je
in
sub
rorb
xchg
and
inc
jne
bound
pop
std
mov
mov
insb
aaa
xchg
sbb
lock
in
mov
leave
pushf
and
pop
jl
push
mov
cmp
xor
test
xchg
mov
cwtl
inc
cmp
mov
popf
cmp
lret
ja
pop
xorl
cltd
xor
jg
xchg
pop
inc
adc
dec
int3
push
pop
insb
pop
jmp
imul
mov
xor
std
shr
les
lcall
push
mov
mov
icebp
ss
dec
lret
outsb
fs
ds
iret
mov
aam
outsb
mov
clc
pop
lahf
mov
push
mov
lods
outsl
push
inc
and
lods
in
arpl
xor
or
pop
out
mov
lods
scas
sub
scas
rorb
xor
lahf
add
sbb
sbb
sarb
lea
pop
pop
add
cmp
aad
outsl
mov
adc
js
add
rcl
cmp
cmpsb
sti
mov
add
sub
xor
into
adc
push
mov
loop
jle
ds
xchg
ret
jp
sbb
sbb
pop
sbb
push
xor
add
rorb
xor
mov
aaa
push
add
loopne
mov
fs
mov
xchg
pushf
mov
int3
mov
je
push
dec
xor
jle
hlt
mov
loopne
cmp
hlt
xor
addr16
jge
fs
cltd
loope
into
push
jae
add
xchg
leave
stos
dec
lahf
push
jb
push
pop
adc
or
ss
mov
out
push
lret
dec
xor
stc
sub
dec
dec
cld
jg
lds
inc
xorb
imul
inc
add
mov
adc
pop
ljmp
mov
imul
insb
mov
das
xor
push
rcll
sbb
repnz
hlt
xor
out
mov
sbb
pop
dec
cmp
addl
andb
arpl
mov
mov
iret
adc
cmp
pop
enter
add
popf
xchg
push
rcll
and
mov
outsb
xor
imul
sbb
or
push
jo
add
dec
push
push
xor
rcr
aas
ja
out
imul
mov
and
orl
imul
sti
inc
inc
mov
mov
xchg
inc
mov
fwait
icebp
call
inc
xchg
in
or
mov
cmp
mov
mov
adc
xchg
loop
insb
test
arpl
fcmovb
lret
inc
lock
ret
jmp
inc
out
out
in
inc
mov
lods
lea
aad
stos
inc
repz
jmp
xchg
sbb
pop
jp
shlb
fisttpl
pop
xchg
adc
sub
sbb
imul
push
fisttpll
adc
mov
sbb
sub
aam
cmp
or
jl
lcall
mov
sub
push
jmp
sbb
jae
mov
loope
rcrl
aaa
xchg
je
int3
push
out
jb
inc
stc
sbb
push
and
push
inc
sub
mov
fnop
data16
adc
pop
cmp
sub
or
repz
loop
dec
jmp
fdivrs
cwtl
pop
test
push
pop
or
push
mov
fcomi
adc
xlat
cmp
jo
jo
mov
inc
out
pop
inc
and
mov
ds
add
jmp
daa
ret
mov
mov
cli
push
cmpsl
xchg
mov
imul
sbb
and
cmp
fisttpll
push
jns
push
popa
or
fldln2
add
mov
lock
sarl
mov
in
push
add
loope
jmp
push
xchg
out
xchg
daa
test
fiadds
ja
fistl
mov
sarb
xchg
fs
push
subb
jmp
mov
pop
sub
aam
inc
stos
xchg
gs
xchg
sub
out
jg
test
ret
push
xchg
stc
jno
ja
ss
mov
dec
ja
ret
cmp
sub
in
movsb
shr
mov
jnp
or
xchg
xchg
sbb
mov
mov
in
test
mov
loop
mov
lret
cmp
or
cmp
mov
popf
xor
aam
lret
scas
sbb
adcl
mov
es
mov
stos
push
xchg
fidivrs
sub
movsb
icebp
add
cmp
sarb
and
or
sbb
aas
sub
test
and
pop
pusha
jne
push
jne
enter
lret
fstl
dec
ja
lds
sub
mov
imul
rorl
dec
sbb
jns
int3
adc
cld
mov
fimull
sbb
pop
adc
mov
xor
sub
xchg
mov
jno
rclb
or
jb
push
mov
ret
jle
test
lret
adc
mov
aad
pop
add
enter
std
ror
cltd
fstpt
and
xchg
jae,pt
and
in
inc
push
jb
add
repnz
arpl
clc
xor
popf
xchg
pusha
sub
cmc
push
repnz
inc
push
add
mov
mov
xlat
dec
pushl
sub
or
loopne
jb
das
cwtl
gs
sbb
jb,pt
enter
pop
fiaddl
nop
adc
call
cmp
mov
clc
mov
add
jns
cmp
loopne
sub
ret
mov
loop
sub
cmpsl
lds
push
vpackuswb
push
daa
cmpsl
insb
xchg
aaa
mov
adc
pop
push
xor
adc
jle
andl
imul
insb
adc
push
hlt
and
out
xchg
push
or
outsb
sub
pop
out
jae
cmpsb
hlt
icebp
cltd
lcall
inc
aam
or
add
sbb
gs
pop
movsb
lcall
aaa
int3
test
hlt
jb
or
test
adc
pusha
imulb
out
mov
sub
and
fldcw
nop
mov
call
leave
mov
xor
iret
sub
mov
into
fld
mov
mov
dec
add
sahf
push
jne
and
nop
fildll
rcl
adc
inc
imul
or
movsb
lods
mov
in
sbb
ret
out
adc
dec
and
or
xchg
scas
repnz
ja
xchg
ss
jno
cmp
pushf
andb
mov
cmp
ds
xchg
ss
adc
dec
mov
setg
xchg
sub
xor
stc
fcmovb
and
cmp
jae
movsb
in
add
stos
push
jge
jo
roll
outsb
mov
jmp
jmp
sarl
shrb
out
std
repnz
mov
add
fmul
xor
lahf
inc
dec
sbb
pusha
pop
dec
pop
cmpsb
icebp
outsl
and
inc
rclb
mov
dec
sti
call
aad
mov
sub
out
rcrb
aam
nop
enter
inc
inc
lret
mov
das
push
cmp
xchg
ljmp
andnps
cmpb
or
or
daa
mov
sbb
sub
fisubrl
push
outsl
lcall
push
push
in
xor
ja
jle
or
xchg
inc
andl
sbb
rcrl
or
sahf
cltd
icebp
cltd
xor
fidivrl
push
sbbl
cwtl
loope
mov
repz
daa
adc
inc
fidivl
jo
insb
pushl
xor
push
jns
inc
jo
inc
fs
mov
stos
or
dec
xlat
mov
add
ds
sbb
push
pushf
popa
jae
push
outsb
dec
mov
sbb
xchg
inc
xor
push
nop
fstps
inc
shl
push
mov
movsl
xor
or
inc
adc
stos
std
out
stos
dec
in
movsb
lahf
jae
paddusb
fstpl
inc
pop
popf
das
sub
orb
fisttpll
dec
icebp
lods
cs
mov
inc
int3
stos
in
fstps
enter
dec
clc
xor
or
stos
mov
add
xchg
nop
push
mov
loopne
test
jmp
fucomp
daa
inc
and
movl
mov
addr16
stc
roll
mov
ljmp
add
in
mov
ljmp
xchg
inc
push
roll
iret
das
iret
push
xchg
or
mov
or
sbb
repnz
xchg
arpl
add
cmp
xchg
test
data16
adc
test
and
setl
cli
cmpsb
jne
adc
popf
cmpb
fidivs
in
loope
sbb
and
sbb
test
inc
xchg
out
pop
sarb
and
xor
and
lock
jbe
imul
dec
inc
jo
test
mov
add
lea
sti
jne
push
movsl
or
dec
mov
pop
add
sub
popf
dec
push
xchg
int
repz
bound
in
mov
pop
sbb
mov
mov
sbb
mov
add
mov
sub
gs
jl
mov
and
outsl
fstp
cmp
add
movsl
aam
fsts
sub
stos
ds
stos
jo
xor
or
or
jb
pop
out
lds
movl
insl
cmp
mov
and
ret
push
sub
inc
lea
pop
loope
out
movsb
or
test
addr16
ficoml
popf
adc
cmpsb
or
add
scas
leave
nop
sub
shrb
mov
out
pushf
pop
push
movsb
fistl
sbb
shrl
sbb
add
test
adc
push
sahf
pop
jns
in
inc
xchg
adc
into
ret
lahf
lret
adc
test
loope
jo
cmpsb
lret
je
in
loopne
jae
dec
mov
lods
dec
and
mov
nopl
mov
inc
je
fsts
inc
leave
mov
pop
sbb
js
inc
ja
fwait
loopne
popa
jbe
in
mov
lock
cmc
push
test
sub
sub
invd
pop
and
and
pop
or
mov
xchg
sub
fnsave
int3
ja
jecxz
xlat
pusha
repnz
inc
cmpsb
jp
out
imul
or
mov
sbb
xchg
or
or
test
lods
adc
and
xor
and
inc
pop
sbb
cmp
into
jb
shl
mov
js
and
or
mov
pop
movsb
push
or
cmp
xchg
popa
add
movsb
xchg
push
sub
sub
sahf
push
and
ljmp
jmp
rcll
mov
mov
lahf
test
mov
and
out
inc
push
sbb
not
adc
or
and
in
arpl
add
mov
lahf
push
push
cmp
gs
movsl
mov
nop
mov
pop
arpl
cwtl
xchg
push
aad
imul
sbb
mov
sbb
insb
jmp
pop
inc
insl
xlat
shll
dec
jg
push
scas
inc
push
test
adc
or
imul
stc
out
push
mov
loopne
repz
das
jbe
mov
loope
pop
or
push
xor
imul
ret
mov
mov
cwtl
cmp
pop
fisubs
out
shlb
or
cmp
jne
negl
jae
dec
cmpsb
xchg
pop
cltd
mov
add
jle
mov
cmpsb
addb
inc
add
sub
dec
in
xchg
inc
push
popf
pop
loope
stos
pusha
clc
cltd
inc
aas
mov
dec
mov
sub
xor
ljmp
sti
lds
int
sub
bswap
lds
pop
out
dec
pop
mov
add
out
call
daa
ret
mov
mov
fimuls
popa
inc
fcomps
pop
out
in
mov
jg
repnz
xor
ss
fnstenv
jb
sar
xor
leave
push
mov
repz
outsb
mov
leave
mov
pop
inc
movsb
ja
mov
outsl
in
adc
push
and
test
inc
out
xchg
js
push
pop
imul
and
aas
jne
sbb
clc
xchg
out
call
ret
xor
sbb
test
into
pop
or
mov
dec
ror
out
leave
das
add
cmp
je
dec
push
test
mov
jge
xorb
inc
rclb
jle
cmp
lock
xor
in
sbb
out
mov
stc
jg
push
dec
sbb
orl
lods
lret
lea
lret
xchg
add
cli
mov
push
inc
lock
movsb
dec
dec
add
jmp
jp
cmpsl
jecxz
lock
cwtl
push
inc
inc
loop
aas
mov
fiaddl
or
mov
cmp
mov
push
xor
dec
inc
cltd
pop
imul
stos
js
push
mov
ds
jecxz
mov
int3
push
outsl
and
dec
mov
pop
cwtl
addb
mov
movsl
ret
bound
fdivs
loopne
int
cmp
mov
mov
cmpsb
add
les
insl
jmp
pop
int
fisubl
in
add
gs
sbb
int
mov
or
inc
repz
int
adc
mov
aad
les
fistl
inc
pop
xchg
xor
pop
or
sub
std
jo
cmp
cmc
lock
fistpl
imul
adc
imul
jno
mov
popf
int
cs
test
int3
ja
popf
ljmp
inc
push
and
scas
xor
sbb
jne
dec
shl
movsb
mov
cmpsl
xorb
xor
inc
pop
mov
addr16
sbb
fistl
jmp
mov
int3
jle
add
stc
pop
mov
scas
lea
mov
negb
xchg
adc
adc
lret
orb
and
and
std
pop
mov
jnp
mov
and
cmp
lahf
adc
xor
lret
ret
push
inc
mov
pop
into
adc
daa
jle
pop
pushf
inc
mov
das
or
mov
jg
loop
sub
sub
pop
sbb
jecxz
lods
sbb
or
rcll
jne
sbb
pop
out
mov
je
faddl
out
test
cmp
mov
xchg
notl
jo
out
add
mov
popf
mov
jae
add
pop
jbe
roll
imul
ljmp
inc
or
loopne
or
adc
sub
mov
cmp
sbb
pop
aad
sbb
das
xor
pop
jbe,pn
mov
inc
lock
add
jb
lret
pushaw
add
rcr
scas
out
cs
inc
cmpsl
xor
or
daa
orl
aam
movsb
outsb
out
out
les
mov
mov
test
or
cmpl
add
mov
pop
mov
roll
pop
dec
sub
cmp
sahf
push
pushf
push
jp
push
cld
mov
andb
push
push
loope
inc
dec
fwait
xchg
cmp
or
cwtl
enter
lods
push
push
jo
inc
jp
xor
shl
mov
sub
nop
hlt
fisttpll
test
lcall
in
pop
fisubrl
loope
cmp
enter
dec
sbb
lcall
ja
xchg
int
sub
shrb
push
mov
aaa
mov
jbe
mov
out
xchg
mov
push
pop
cli
test
mov
cld
movsb
push
push
pop
adc
xchg
push
dec
shll
fiaddl
sbb
push
jne
cmp
cmp
test
push
jo
dec
and
inc
xchg
lods
stos
pusha
adc
sub
and
rorl
push
mov
movsb
in
xor
aaa
mov
add
mov
adc
out
icebp
mov
jmp
out
out
dec
arpl
je
or
fnstcw
sub
sbb
add
shl
jge
insb
mov
pop
sbb
or
mov
sub
jne
ljmp
pop
rcl
inc
sub
jne
mov
lods
inc
mov
sti
sbb
lods
test
push
push
sbb
mov
mov
mov
aas
ds
dec
and
xlat
or
dec
hlt
dec
add
mull
and
out
icebp
cmp
rcrb
jecxz
mov
setns
test
mul
cmp
rclb
jo
mov
gs
daa
inc
dec
cli
dec
out
mov
and
ss
xor
outsb
mov
jnp
jbe
dec
mov
les
in
inc
mov
mov
mov
xor
push
fsubrl
mov
loopne
jge
dec
icebp
push
jle
mov
push
movsl
pushf
mov
les
cmp
and
or
add
jo,pn
in
into
xchg
popa
repz
jl
orl
add
mov
xchg
sub
sbb
cli
jb
xchg
cmp
into
mull
sbb
idivl
cli
ficoms
jbe
icebp
ja
shll
mul
loopne
ljmp
lods
jle
rolb
std
push
mov
dec
mov
jl
clc
jns
cli
lea
push
xor
dec
dec
lcall
sbb
fidivrs
push
jno
cltd
xchg
mov
std
lea
pushf
mov
sbb
mov
rclb
mov
bswap
lods
jae
jge
sbb
pop
inc
mov
in
mov
mov
pusha
in
mov
lcall
push
sub
in
xchg
mov
mull
pop
out
sbb
xchg
dec
cmp
pop
clc
dec
cmp
xor
les
fsubp
cmc
out
pop
or
lret
sbb
mov
test
call
cwtl
mov
push
mov
xchg
fs
scas
mov
aad
imul
stc
ret
mov
int
pop
in
cld
icebp
shrl
mov
xchg
xor
dec
mov
sbb
daa
push
lods
dec
imul
push
les
pop
inc
cmp
shrl
mov
xchg
add
movsb
outsb
and
mov
icebp
icebp
jp
sahf
dec
dec
cwtl
xchg
addr16
fadd
dec
jl
push
stc
movsb
xor
pop
jmp
ret
fwait
nop
mov
out
lods
insl
in
std
jmp
loop
outsl
out
js
std
and
adc
adc
ja
and
push
mov
cs
gs
hlt
hlt
cmp
or
mov
mov
sbb
subb
dec
pop
js
xorb
repz
xchg
mov
fcmovbe
lahf
mov
sbb
lret
mov
roll
sub
sbb
jb
jle
mov
cmp
sbb
fistl
xchg
rcll
or
jbe
mov
sbb
shrl
cwtl
lret
call
je
xchg
push
mov
push
ret
mov
mov
inc
pusha
mov
std
and
add
dec
shr
scas
mov
push
jb
negl
jg
nop
int3
mov
sub
mov
push
push
sub
push
ljmp
jae
call
sbb
into
mov
test
mov
push
imul
cmp
pop
rorl
xorl
jmp
imul
outsb
mov
xchg
scas
popf
adc
out
sub
aaa
push
and
sarb
cmp
lea
imul
jo
sbb
scas
sbb
pushf
pop
mov
inc
mov
jmp
aam
in
xchg
divl
lods
iret
inc
or
dec
stos
xor
cmpsb
lods
pop
push
popf
aas
aaa
rcr
or
adc
jne
push
push
cli
gs
mov
sbb
cmp
jg
js
scas
jl
clc
lea
xchg
inc
cmp
cwtl
xorb
xchg
cld
and
pusha
jb
jmp
adc
xchg
les
cmp
or
js
repnz
xlat
or
sub
jge
and
sub
xor
enter
push
push
hlt
in
jg
push
sbb
pop
sarb
pop
jnp
xor
inc
xchg
lock
jmp
cmovs
push
push
sbb
jnp
sbb
rclb
inc
stos
scas
cmp
cs
push
fidivl
int3
push
add
faddl
lea
sub
sub
push
lret
mov
dec
sbb
push
and
xchg
xchg
mov
js
inc
stos
pop
adc
jmp
dec
dec
or
mov
inc
lods
je
pop
imul
insl
nop
insb
xchg
xchg
mov
xchg
xchg
cmpb
fistl
mov
outsl
xchg
dec
stos
adc
in
das
push
xchg
jbe
test
test
out
inc
scas
pusha
inc
fldl
dec
xchg
push
mov
mov
test
adc
pop
out
das
adc
and
inc
dec
movl
in
jmp
adc
xlat
mov
aam
jnp
xchg
js
push
xchg
or
push
adc
xchg
cmp
xchg
les
mov
jbe
std
xor
jno
or
mov
out
cltd
dec
xor
addr16
cmp
rolb
orl
adc
stos
stos
ljmp
lret
push
adc
sbb
lods
movsb
or
cwtl
lds
pushw
or
decl
xchg
es
push
ds
sbb
mov
xor
sbb
jns
or
scas
mov
jle
adc
mov
outsl
jb
aad
mov
mov
xchg
fisubs
cmp
inc
bound
add
xor
mov
xchg
cmp
test
dec
fcomip
xchg
mov
outsb
lret
xchg
js
in
jnp
sub
or
out
sub
mov
sub
adc
adc
fwait
cli
sub
pop
pop
in
sbb
in
or
test
mov
push
cmc
ljmp
push
in
xchg
xlat
sub
inc
lock
loop
pop
clc
adc
cmp
add
mov
jne
mov
jmp
add
pop
fcmovb
xor
loope
or
insb
out
or
sbb
subl
lods
cltd
add
mov
cmp
mov
loop
insb
xlat
xor
xchg
mov
pushf
notl
xchg
sbb
or
sub
inc
mov
cmp
xor
pop
adc
lock
mov
popf
or
jp
lods
out
xchg
out
jg
cmp
aam
mov
pop
mov
or
ror
lods
mov
cmp
cmp
or
std
mov
mov
les
mov
add
sti
in
fs
loop
mov
pushf
aas
or
or
cmp
addr16
rol
test
mov
mov
mov
adc
or
cmc
imul
lods
pop
les
mov
pop
sub
mov
cmp
outsb
cmpsb
in
pop
in
add
mov
jge
jb
jae
scas
ljmp
dec
mov
or
sbb
mov
sbb
sub
testl
jp
popf
add
pop
lret
gs
push
cltd
jnp
sbb
adc
push
outsb
cmpb
push
xor
mov
imul
popa
cmpsl
jne
sbb
dec
cmc
mov
outsl
push
ret
cmp
xor
cmp
outsb
add
outsb
cmp
xor
dec
push
jnp
pusha
cmpsb
mov
and
jbe
jb
push
repnz
pusha
xchg
sub
and
movsl
sbb
call
mov
jno
push
xchg
das
jge
stc
xchg
mov
lods
aaa
scas
orl
clc
imulb
test
insl
pushf
in
mov
pushf
int3
mov
mov
dec
cmp
mov
and
inc
cmp
push
hlt
sbb
orl
cltd
xor
push
inc
ficompl
push
arpl
sbb
push
push
clc
dec
and
cs
jge
out
xor
clc
mov
addr16
iret
dec
adc
sub
nop
int3
adc
repz
mov
jne
ret
ret
pusha
lods
jno
adc
mov
andl
test
test
aas
daa
adc
mov
inc
inc
sbb
cmp
inc
mov
add
pop
scas
mov
jo
cmp
mov
adc
sub
xchg
call
movsl
movsb
jp
lods
dec
sub
or
ret
inc
aam
test
sbb
dec
mov
sub
jbe
bound
xchg
addr16
dec
pop
sub
cmpsl
xchg
ljmp
imul
inc
es
fistl
iret
xor
cli
cmp
mov
fwait
jno
add
inc
pop
movsl
rorb
mov
mov
inc
in
loopne
sbb
repnz
xchg
adc
cld
sub
leave
dec
adc
test
or
dec
xchg
jle
sbb
cmp
dec
xchg
bound
ss
pushf
mov
subb
in
sub
ret
out
adc
dec
or
sbb
dec
es
mov
push
add
dec
or
insb
inc
adc
clc
pop
js
or
pushf
add
sub
mov
fsts
daa
lea
mov
lods
popf
addb
mov
add
scas
inc
leave
or
lds
mov
cmpsb
push
inc
movsb
jns
mov
mov
rcl
push
cmp
rcl
aad
ja
in
dec
push
cmp
mov
mov
daa
pushf
pop
sub
add
jg
cmc
test
dec
jle
jo
xchg
jge
out
outsb
out
add
cld
mov
lret
hlt
inc
int
pop
mov
jo
jg
das
pop
adc
mov
fcmovnb
fdivr
push
test
jne
rcll
shrl
test
scas
aas
mov
pop
adc
cmpsb
nop
popf
adc
cmp
jl
xchg
inc
ficomps
rorb
aaa
dec
sub
shl
xor
fdivr
lods
comiss
mov
xchg
test
fs
out
adc
cmp
in
sub
cld
sbb
cltd
mov
mov
push
mov
loop
je
psubw
mov
cmp
outsl
mov
add
cmp
fistps
xor
mov
sarb
into
push
adc
or
cli
pop
jb
nop
stc
sub
sub
mov
mov
femms
jp
sbbb
xchg
adc
jnp
clc
xlat
sahf
imul
push
lods
lock
dec
push
xchg
mov
and
outsl
lret
icebp
mov
outsl
icebp
nop
xchg
test
or
xchg
xor
and
into
pusha
mov
arpl
and
in
and
jns
test
mov
sub
das
add
into
or
xchg
pop
xor
jmp
jmp
lret
dec
jle
xchg
push
push
in
insl
rolb
adc
pusha
cmp
add
pop
lret
faddl
push
cmp
scas
adc
ret
pmulhuw
lock
outsb
adc
cmp
jo
aaa
aad
cmp
outsl
sub
xchg
or
arpl
imul
pusha
dec
xchg
add
or
mov
and
repnz
jp
fcoms
rcrb
push
dec
push
ja
sub
mov
dec
shll
fwait
cltd
test
push
fwait
mov
jae
test
mov
dec
das
pop
lret
fldenv
mov
je
lcall
popf
dec
dec
int3
shlb
xchg
push
std
mov
push
mov
out
dec
ds
jle
cmp
into
xor
lds
lret
out
push
xchg
repnz
push
cld
jnp
fs
push
and
and
jb
scas
nop
add
hlt
add
repnz
nop
cmp
xchg
jae
cmp
ret
popf
clc
add
bound
push
les
mov
add
xlat
test
xor
mov
mov
mov
repz
push
inc
mov
add
sbb
cmp
aam
xor
nop
mov
je
xor
and
int3
adc
data16
adc
mov
mov
pop
sbb
rcrl
xchg
add
inc
mov
mov
test
mov
lret
pop
pop
mov
jnp
adc
or
xchg
mov
cli
testb
lcall
and
cltd
xor
xor
dec
xchg
inc
add
fs
mov
scas
jae
aad
and
sbb
enter
dec
xlat
imul
mov
mov
mov
aad
rorb
jmp
push
adcb
shlb
mov
pop
xchg
and
adc
cmp
outsb
jno
xchg
test
mov
mov
inc
je
jp
out
xchg
xor
xor
xchg
test
mov
xor
inc
jo
or
add
out
rorb
adc
sbb
mov
shlb
pop
sub
mov
fildl
mov
cmp
loopne
std
int
lds
cmp
movsl
lea
xor
cmp
and
add
insl
add
outsl
and
pop
jnp
test
jne
ja
xchg
and
lock
inc
daa
shll
mov
cwtl
jno
mov
negl
stos
in
out
xchg
lods
pop
movd
adc
inc
repnz
pushf
inc
sbb
nop
cs
lods
pop
fisubrl
mov
imulb
inc
out
bound
xlat
rorl
insb
push
sbb
shlb
add
repz
xchg
testl
std
xor
repnz
xchg
jle
and
jo
movsl
imul
into
push
imul
jns
dec
sarb
sbb
push
pop
aam
jne
push
sub
icebp
ret
sub
xor
push
clc
loope
fs
je
push
ret
scas
ja
sbb
xchg
add
pop
mov
addr16
and
cmc
jo
fidivrl
cmp
inc
pop
sahf
es
gs
mov
repz
fsubs
lea
lahf
cmp
jp
mov
rolb
mov
xchg
pop
pop
jae
imul
loopne
mov
aam
xor
pop
add
jae
fiaddl
imul
inc
call
mov
cmpsl
fstpt
xchg
xchg
pop
iret
push
pop
cwtl
or
arpl
sub
out
xchg
xor
xchg
pop
mov
sbb
stos
jne
aaa
pop
and
mov
mov
shrb
jecxz
fnstsw
testl
sub
ja
push
je
xchg
testl
jmp
jp
pop
les
cld
xchg
roll
dec
outsl
push
jae
mov
cmp
stc
mov
mov
std
sahf
sahf
insb
daa
sub
enter
or
sub
and
test
mov
clc
aam
mov
cmp
push
inc
insl
pop
stos
push
mov
xchg
xchg
jmp
aam
pop
cmpsb
pop
ljmp
add
repnz
or
mov
cltd
adcb
lds
sarl
mov
call
fcomi
in
pop
fcoml
mov
push
cmp
push
imul
scas
in
cld
imul
push
jo
in
mov
roll
mov
sti
add
pop
pusha
sub
fsubs
add
mov
add
xchg
jns
cmp
stos
shlb
mov
jge
xor
loope
rcr
bound
divb
aam
in
fimull
in
adc
and
fs
jbe
mov
in
mov
mov
dec
jp
inc
fidivs
or
in
sbb
cwtl
add
adc
hlt
mov
dec
mov
icebp
mov
daa
inc
enter
ja
cltd
mov
hlt
paddusw
data16
mov
imul
or
testl
push
lds
dec
add
mov
lods
mov
jo
into
dec
imul
xchg
in
lcall
sbb
in
jnp
call
mov
push
std
imul
push
mov
fdivs
push
adcw
or
adc
lea
mov
fwait
add
xchg
mov
dec
jp
addr16
cli
sbb
add
shll
jmp
test
aad
push
rorl
sbb
mov
mov
inc
jo
cmp
xlat
pop
inc
jno
stos
xchg
shll
shlb
cmp
cmp
leave
sub
out
jecxz
mov
mov
fdivr
cli
lods
push
mov
das
imul
and
arpl
gs
bound
cwtl
fsubrs
mov
call
adc
pop
adc
push
mov
push
xor
fildl
xchg
int
jnp
fwait
xchg
orb
sub
mov
and
test
repz
psadbw
test
cli
aam
pop
orl
mov
js
mov
stos
ds
into
ja
or
push
dec
push
add
jp,pn
iret
push
dec
sti
lret
dec
lods
aaa
imul
mov
xchg
pop
iret
cld
cwtl
xorb
jae
in
inc
pop
mov
pushf
cmp
nop
xchg
fs
iret
imull
jg
stos
xchg
dec
mov
dec
movsb
mov
mov
enter
movsb
loop
add
add
and
shl
insb
adc
idivb
cmp
movsb
pop
cltd
leave
jp
mov
sub
bound
pop
mov
inc
xlat
shr
out
mov
test
hlt
xlat
repz
pop
daa
and
xchg
ficoml
xchg
cmpsb
mov
ljmp
xchg
cwtl
sub
jo
or
jmp
xchg
mov
add
and
bound
mov
cli
lret
and
jle
inc
adc
pop
mov
xor
push
xchg
mov
stos
rorl
test
xchg
hlt
scas
arpl
popf
sbb
xchg
xor
mov
enter
into
adc
or
xchg
add
sub
lds
lret
cld
sarb
icebp
int3
hlt
test
outsl
add
fdiv
mov
xor
push
and
push
sbb
sub
gs
pop
inc
or
andb
mov
mov
fstpt
jne
xchg
jecxz
push
sub
xlat
ret
and
sarl
pop
je
bound
push
imulb
sarl
outsl
mov
xchg
enter
shlb
pop
icebp
imul
jns
mov
imull
dec
dec
xor
jbe
out
and
add
mov
cmpsl
cmp
jg
dec
mov
lods
movb
addr16
jl
pop
jo
mov
out
dec
cwtl
int
out
jne
imul
add
lea
popa
inc
cmp
push
test
dec
out
xchg
push
xchg
cmpsb
mov
dec
iret
fmul
jb
sub
adc
sub
aad
pop
cmp
enter
leave
mov
add
mov
std
cmc
fsubrs
popf
ss
jl
lcall
add
lods
cld
in
fmull
mov
fstps
fistpll
mov
in
mov
and
pop
into
pushf
fisubrs
rcrl
aas
cmp
adc
sbb
loope
inc
mov
ficoms
pop
scas
rcrb
testl
xor
sbb
push
daa
jmp
or
scas
pop
push
mov
negb
inc
jl
mov
and
jne
and
test
jae
movb
scas
adc
xorl
xchg
adc
ja
push
mov
lahf
and
mov
mov
ficoml
mov
mov
loopne
jbe
mov
adc
cwtl
mov
mov
popa
push
mov
inc
ds
aad
sub
pop
mov
in
push
inc
das
add
mov
adc
mov
push
lods
into
and
pusha
lret
nop
adcb
insl
sub
inc
leave
nop
mov
movsl
push
adc
aad
es
dec
jno
dec
icebp
cmp
mov
ss
roll
xchg
aad
divb
ffreep
cmp
subl
es
mov
shrb
and
sub
pop
mov
test
push
ss
and
mov
cmp
sbb
pop
movsb
cli
jne
lret
mov
mov
dec
sub
test
ljmp
and
jl
lahf
addr16
or
jns
fnstcw
arpl
popf
pop
subb
pop
popf
mov
nop
dec
rcr
nop
push
in
or
pop
push
and
dec
or
dec
fcomp
inc
jle
and
xchg
mov
and
xor
movsb
xchg
add
pop
jno
es
inc
lods
adc
adc
jns
jae
call
dec
and
mov
xchg
lds
dec
daa
lds
dec
aam
and
pop
js
and
mov
push
ret
cmc
or
shll
les
daa
rorb
sub
cmp
mov
push
popf
pop
mov
cltd
add
stos
sub
movsl
cmp
mov
lock
pushf
aas
mov
ja
fisubrs
sar
out
jl
sub
test
add
xchg
xor
movsl
mov
cmpsl
mov
xor
jae
push
fmuls
jg
enter
fst
pop
cmp
push
add
subl
ret
mov
icebp
xchg
dec
call
bnd
sub
cmp
sar
pop
sti
inc
and
loope
dec
and
sub
mov
scas
xor
cmpsb
call
jge
cmpsb
sbb
test
je
adc
sbb
pop
jae
mov
add
sub
pop
lret
and
fs
popa
xchg
add
and
imul
jo
andb
movsb
aas
sbb
or
jecxz
stos
lahf
aas
sub
add
jmp
xchg
in
jne
loop
push
lds
and
pop
lods
lret
sbb
shlb
cmp
adc
pop
xor
out
mov
jge
xchg
xchg
adc
fsubl
bnd
pop
ret
lock
lea
mov
mov
outsb
icebp
scas
xchg
cmp
jecxz
icebp
fwait
pop
add
mov
sbb
cs
int3
add
subl
mov
inc
inc
add
movsb
movsb
xchg
data16
lcall
adc
lock
inc
and
xor
dec
movsb
popf
stos
imul
mov
xlat
ret
and
movsb
mov
xchg
push
sub
xchg
dec
cmp
aam
inc
lea
and
in
scas
fdivs
sarb
push
negb
adc
push
dec
stos
arpl
jne
and
mov
adc
ljmp
pop
dec
sub
gs
fidivrs
notb
out
idivb
cltd
xchg
pop
sub
in
inc
push
outsl
or
scas
xchg
ret
out
mov
pop
imulb
aam
mov
imul
lcall
push
ljmp
mov
fs
or
outsl
xor
jmp
jp
jl
iret
in
inc
stc
aam
insb
push
pop
cmc
mov
dec
shlb
lea
decl
mov
jnp
psrlw
iret
mov
adc
daa
sbb
add
push
loopne
stos
loop
mov
in
dec
push
pop
mov
testb
aaa
sbb
das
add
push
xchg
mov
orl
sbb
rcrb
add
pop
jb
mul
aad
mov
movsl
leave
imul
ds
in
cmp
jb
and
xor
movsl
xchg
jmp
jae
jl
stos
mov
add
adc
and
push
push
sahf
not
add
call
add
movsb
loope
xchg
push
fstl
mov
jp
stos
into
in
jb
or
lcall
pusha
cmp
aas
adc
lret
dec
cmp
pushf
mov
pop
mov
sbb
mov
xor
jo
loope
lods
dec
setl
mov
fbstp
xchg
mov
cltd
xor
mov
divb
mov
mov
cmpsl
mov
aam
in
xchg
cmpb
push
pop
mov
pop
jecxz
scas
insl
push
insl
cs
pop
stos
inc
aad
dec
roll
fidivl
and
fildll
jl
push
xchg
mov
xchg
mov
out
pop
cmp
jg
mov
lcall
cmp
aam
dec
aam
out
decl
lret
xor
or
or
imul
out
mov
mov
mov
test
inc
test
push
xchg
lock
clc
jmp
sbb
addr16
std
in
std
lret
fisubs
insl
in
mov
cmp
and
imul
popf
movsb
loope
and
mov
leave
scas
in
aam
lods
sbb
fsubl
negb
push
sbb
sub
cmp
adc
loop
out
out
xchg
dec
xchg
mov
xor
ret
cmp
dec
add
and
fdivrl
out
leave
add
adc
adc
mov
scas
es
pop
test
mov
cmpsb
add
out
push
xchg
jae
jecxz
test
push
int
movsb
inc
insl
push
mov
icebp
dec
mov
jg
fstps
mov
dec
daa
mov
in
dec
nop
mov
jle
cmp
or
aad
ret
dec
mov
and
stos
aam
in
icebp
loopne
scas
xor
add
loopne
inc
iret
mov
mov
loopne
mov
push
jmp
pop
sub
fucomi
cmpsb
jno
add
int3
jecxz
pop
icebp
fisubrs
push
ds
int3
mov
mov
xorb
cmp
dec
fcomip
inc
xchg
cmp
movsl
outsl
mov
outsl
cmpsl
fistl
xor
out
push
pop
dec
xchg
push
outsl
cmp
add
cmp
mov
mov
sub
rclb
nop
pop
pop
push
sub
xchg
cmp
xchg
push
test
rclb
jp
ds
push
push
push
push
xchg
fstpl
pop
sbb
push
and
fdivs
inc
mov
jp
cmp
lret
cmc
movsb
jbe
enter
dec
movsb
lods
mov
sbb
xchg
and
xchg
test
out
and
test
mov
adc
jmp
xchg
ficompl
jg
sbb
not
jmp
es
movl
popa
scas
pop
xchg
inc
mov
push
dec
add
dec
add
jbe
cmpsb
loop
ret
xchg
pop
fs
fidivs
icebp
out
jo
push
rcr
insl
scas
push
clc
cwtl
gs
popf
jp
xchg
aad
dec
scas
mov
mov
push
jmp
inc
jecxz
sub
cmpl
js
adc
sbb
mov
add
xchg
in
pushf
mov
or
jo
es
pop
sub
or
mulb
sar
mov
dec
mov
sti
add
pusha
inc
paddusb
fdivp
loop
repz
fadd
out
jne
js
cwtl
pop
sbb
dec
push
inc
push
arpl
mov
mov
pop
ljmp
fsubrs
adc
insl
movsb
ljmp
ss
into
lret
test
mov
aad
dec
subb
and
mov
stos
in
loop
xor
stos
lea
aas
les
scas
adc
xor
in
jae,pt
xor
insb
xchg
movsb
gs
pusha
dec
jle
or
int
mov
pop
int3
sarl
rcrb
jnp
das
test
push
or
jo
repz
and
clc
insl
mov
adc
lods
out
sbb
cmp
mov
dec
add
test
pop
mov
rolb
loopne
ret
mov
les
mov
fists
rcll
mov
call
dec
mov
jle
push
pop
inc
mov
inc
sub
inc
lds
loop
stos
mov
leave
inc
push
mov
enter
out
movsb
dec
test
daa
xchg
lods
sub
imul
mov
popf
dec
add
in
lods
mov
dec
jmp
sbb
inc
mov
lock
daa
outsb
cmc
mov
or
call
aam
inc
adc
loop
cli
shll
xchg
popf
dec
add
dec
negb
push
into
jle
ret
int
mov
push
mov
dec
xor
sbb
push
repnz
test
mov
push
or
loopne
xchg
aaa
xchg
push
push
xchg
mov
out
push
jbe
sbb
adc
shlb
sub
lahf
outsb
jnp
sbb
daa
imul
add
jnp
inc
mov
sub
gs
xor
jo
repz
mov
pop
call
mov
rolb
int3
aam
sbb
xor
push
icebp
dec
fwait
pop
lods
lods
enter
push
in
adc
stc
mov
inc
rcrb
sbb
dec
sub
xor
daa
mov
add
mov
pusha
lret
sbb
ss
mov
adc
pop
cwtl
enter
mov
aaa
insl
mov
in
lods
ja
sbb
jne
cmp
cmp
sahf
adc
pop
xlat
cwtl
jno
and
add
outsl
sbb
jmp
mov
add
push
std
lea
sub
inc
stos
dec
scas
pop
shrb
mov
dec
mov
std
fmull
cmpsb
imul
mov
xchg
pusha
mov
and
dec
xchg
pop
adc
add
adc
or
jp
push
mov
xor
mov
pop
cmpsb
loop
push
insb
iret
lea
sbb
push
std
fwait
jne
cmp
and
daa
data16
addr16
mov
lock
cmpsl
pushf
mov
adc
xor
ss
cmp
dec
add
jae
stos
in
ja
pop
mov
jge
cmp
cwtl
pop
ljmp
or
mov
outsb
mov
push
push
out
iret
mov
mov
aaa
imul
fsubrp
rcrb
dec
mov
mov
js
adc
pop
shlb
cmp
notb
mov
cmp
mov
and
nop
loopne
js
out
lea
stos
xor
dec
movsb
dec
jecxz
iret
shll
mov
mov
es
adc
adc
dec
popf
gs
sbb
sti
push
push
ret
mov
shlb
loopne
dec
lret
mov
xchg
jmp
jg
fcom
fists
inc
xor
push
cmp
fwait
jo
push
cld
push
test
mov
in
mov
inc
xor
pop
xor
xchg
pop
adc
sub
jns
into
gs
and
ss
jmp
fmuls
je
xchg
loope
scas
push
ja
mov
fldl
or
fidivrs
and
es
int
and
and
add
adc
imulb
out
pop
enter
aam
xchg
imul
ss
aaa
ljmp
cltd
xchg
cmpsb
jmp
inc
cs
pop
push
xor
out
loope
mov
cmp
stc
fcmovnu
hlt
ljmp
inc
aam
sbb
cwtd
cmp
push
mov
aaa
js
push
xlat
cmc
in
mov
popf
insb
fadd
sub
into
rcrl
rorb
fstpt
outsl
icebp
int
bound
int3
arpl
clc
mov
inc
clc
mov
mov
enter
aaa
mov
lods
cmp
aaa
dec
fwait
fadd
icebp
out
push
rcll
std
cs
sbb
sarl
ret
push
es
mov
in
cs
mov
pop
daa
xchg
out
push
xor
arpl
push
ljmp
push
inc
aaa
mov
push
inc
and
mov
nop
and
dec
sti
mov
cwtl
sbb
add
jl
test
pop
dec
jmp
xor
inc
pop
add
fdivrl
adc
adc
inc
mov
push
sbb
mov
dec
fmulp
arpl
add
push
iret
lds
cli
and
mov
pop
xchg
das
pop
push
pop
pop
lcall
in
fwait
push
jle
jns
fidivs
pop
ss
add
insl
mov
int
inc
ret
f2xm1
xchg
add
cmp
sub
xor
jge
sbb
jg
mov
popf
xchg
stc
dec
hlt
add
adc
push
push
fmulp
xchg
adcl
xor
mov
adc
aad
or
push
push
das
out
fdivr
add
aaa
dec
fidivs
dec
cmp
pop
cmpsb
cmc
vpshlq
mov
lahf
add
adcb
push
popa
fadd
int
adc
mov
pushf
add
pop
lcall
ret
lret
hlt
mov
fbstp
add
cli
xchg
mov
ret
cmp
call
cmp
jns
inc
push
pop
xchg
in
mov
and
cmc
lahf
lods
sbb
scas
out
inc
aas
test
dec
insl
std
add
stc
pusha
push
dec
testl
fists
mov
movsl
imulb
pop
lock
push
sub
pop
cltd
shll
add
or
sbb
sti
daa
les
push
iret
mov
sbb
xchg
push
mov
test
stc
in
out
mov
inc
pop
xor
mov
mov
add
scas
or
call
inc
aaa
mov
mov
test
dec
stos
xor
cmp
cmc
push
jecxz
dec
sbb
cmpsb
test
jns
push
cld
sbb
fisubrs
cmp
fisubl
cli
ljmp
and
adc
shrl
ret
fnstenv
xorb
cmp
mov
sbb
xor
lcall
cmpb
sub
or
lods
das
mov
nop
hlt
xor
scas
outsb
test
sbb
js
lret
idivb
sahf
add
cmpsl
mov
mov
dec
jl
mov
ret
sbb
movsl
inc
mov
inc
cmp
cmc
repnz
fsubs
sahf
jo
push
es
push
imul
js
movb
clc
idiv
push
cltd
jmp
fldt
movsl
or
fstps
xor
sub
sbb
inc
cwtl
push
pushf
mov
insl
push
mov
ja
outsb
mov
cmp
jbe
cltd
push
inc
sub
loope
jmp
xchg
out
sahf
pop
pop
lret
dec
out
sub
scas
test
inc
shlb
in
adc
lret
sub
adc
jb
in
js
cld
into
push
mov
sbb
cmpsl
add
pop
xlat
imull
adc
xor
sbbl
ret
jo
mov
mov
xlat
test
jl
sbb
aas
pop
js
jp
jmp
popf
loope
arpl
mov
sahf
fcoms
add
stos
push
mov
pushf
aas
push
flds
pop
lret
mov
pop
rclb
in
cmp
test
xchg
push
mov
adc
cmc
jno
lock
test
push
lcall
adc
mov
push
push
mov
bound
pop
mov
sub
pop
mov
imul
jnp
inc
js
xor
jmp
ficoms
xor
fiaddl
sbb
ret
mov
push
cmp
outsb
nop
sbb
scas
xchg
jae
mov
insb
and
sbb
gs
jnp
push
lcall
sbb
jbe
add
mov
mov
adc
pop
sub
cmp
mov
pop
xlat
mov
sti
adc
fdiv
outsl
and
sbb
push
and
mov
xor
mov
aas
idivl
pop
xchg
mov
sbb
mov
xchg
fwait
or
leave
pop
popa
pop
mov
out
call
dec
jne
sbb
xchg
push
aam
jecxz
jge
icebp
aaa
xchg
jo,pt
out
dec
mov
iret
inc
rcll
fcoml
jp
mov
xchg
jne
inc
sub
and
xchg
inc
addr16
lods
and
out
xor
add
mov
mov
data16
mov
pop
aam
jbe
dec
pop
cltd
or
popa
bound
jle
popa
adc
aas
fwait
or
in
mov
mov
adc
mov
pop
int3
addr16
cmp
ret
int
pop
xchg
ds
lret
adc
stc
sahf
adc
sub
cli
out
in
insl
jge
pop
or
xor
sub
and
or
shl
out
hlt
into
lods
inc
cli
pop
mov
insl
cmp
loop
cltd
mov
pusha
dec
push
insb
mov
aas
mov
hlt
push
or
ljmp
and
loopne
popf
stc
and
movsb
ja
lods
jg
pop
fisttps
sub
mov
jns
dec
inc
or
jecxz
loope
out
dec
cld
or
cmpsb
lds
sub
test
ds
cld
shll
xor
loope
inc
jnp
stos
addr16
jnp
jp
in
mov
or
in
rorb
dec
push
mov
or
mov
fidivs
dec
xchg
adc
inc
xchg
jns
add
jmp
pop
push
lret
lds
adc
mov
je
xchg
int
mov
imul
cmp
ljmp
out
mov
decl
jp
jbe
aaa
sbb
sub
sbb
adc
mov
scas
jbe
js
add
in
shll
call
jns
nop
pop
mov
and
imul
es
in
jbe
sbb
outsl
pop
insb
jle
test
scas
adc
icebp
xor
sub
out
aad
sahf
or
xchg
imul
xor
out
cmc
clc
cld
or
fstps
cmp
fiadds
ret
negb
int
ret
out
cmp
adc
nop
aaa
push
in
sub
or
xchg
push
stos
or
xchg
push
adc
ret
mov
insb
addr16
in
mov
sbb
test
or
jno
push
call
les
stos
xchg
jmp
in
lea
xchg
lahf
or
pop
inc
and
pushf
and
dec
cmp
mov
pop
into
jecxz
cmp
repnz
mov
xchg
je
ret
addb
iret
loopne
jne
fwait
pop
out
imul
scas
int3
jecxz
xchg
mov
negl
add
mov
xchg
fdivrs
cmp
ljmp
push
and
or
or
push
stos
ret
sub
push
and
movsb
sub
stos
xchg
jbe
xor
mov
fcoms
rclb
fldenv
and
sbb
aad
mov
inc
mov
sub
jl
rclb
and
loop
mov
xor
add
push
fcoms
add
stos
sub
sub
popf
adc
loope
cmpsb
xor
pop
xchg
repnz
sub
cmc
push
call
cmpsb
into
mov
xor
clc
cmpb
stos
rorb
push
mov
imul
mov
sub
sub
cld
pop
jmp
sbb
jns
jns
in
sbb
jo
bound
jnp
pop
iret
fidivrl
and
pop
and
dec
mov
fdivrs
cmp
pop
enter
inc
rorb
stos
push
mov
mov
test
mov
arpl
xchg
sahf
xchg
scas
jns
pushl
mov
sbb
jns
test
pop
scas
ds
fucom
push
nop
into
cmpsl
add
push
adc
add
rcll
inc
out
xchg
outsl
mov
add
or
loop
sbb
mov
sub
negl
jo
sub
mov
loop
mov
lret
xchg
inc
xor
sti
push
int3
into
push
jo
mov
mov
imul
push
cwtl
lock
inc
std
ret
pusha
or
xor
jle
pop
rorb
xor
adc
mov
sbb
loop
outsb
mov
pushf
loopne
dec
sub
shr
pop
icebp
pshufw
in
cmp
bound
imul
mov
mov
es
aas
int3
push
adc
pop
cmp
push
jno
mov
inc
rcll
fcomps
push
lcall
in
xor
loopne
insb
cmp
inc
jbe
cmpsl
xchg
xor
ficoml
sbb
inc
in
pop
adc
fcmovnbe
xor
outsb
dec
std
push
ljmp
lret
lcall
insb
clc
inc
mov
xor
adcb
sub
fimull
andl
sub
push
sbb
xchg
mov
je,pn
adc
lcall
sbb
push
and
cwtl
in
pop
sti
dec
shl
dec
jns
inc
lea
lods
clc
int3
rcl
lods
scas
shl
test
inc
test
pop
inc
jmp
mov
sar
pop
sbb
mov
xchg
ret
fwait
ret
outsl
inc
sub
icebp
mov
lahf
pop
adc
mov
je
adc
mov
sbb
cmpsb
mov
divl
cmpsb
adc
cltd
cs
xchg
or
inc
pop
jmp
mov
cmpsl
test
test
nop
das
sub
or
xchg
mov
adc
push
push
jmp
xor
mov
loop
push
stos
popa
cmp
aas
sahf
sub
adc
insb
xchg
dec
jmp
sub
lret
sbb
ja
cmp
ret
inc
stos
and
lods
pushf
shrb
popf
cmp
into
sbb
jno
cmp
lret
outsl
jo
mov
cmp
add
jns
dec
addl
call
push
je
sub
and
pop
out
call
mov
mov
rclb
rcrb
inc
cmp
jo
jne
les
fldt
mov
fdivrs
fwait
aaa
mov
stos
or
fwait
xchg
popa
sub
xor
push
jno
je
loop
lds
adc
and
das
and
sub
sub
scas
ljmp
jmp
push
mov
pushf
cmp
idivl
xor
sub
enter
xchg
jae
lds
xor
push
add
jnp
les
lea
mov
enter
lock
mov
fisttps
jno
adcb
sbb
and
and
int
mov
cmpsl
adc
fwait
scas
push
dec
repnz
dec
pop
loopne
push
xchg
jae
icebp
mov
out
fcomps
mov
test
sbb
in
je
aam
hlt
das
sbb
sbb
jmp
in
xor
dec
jno
pop
in
push
jbe
pop
icebp
inc
push
pop
xchg
or
dec
scas
xchg
mov
xchg
mov
pop
fnstcw
iret
les
and
fwait
jle,pn
jne
adc
dec
mov
bound
decl
popa
inc
ljmp
ret
test
pop
push
lods
adc
xor
and
cmpsl
jmp
or
jne
loop
mov
fwait
mov
push
in
xchg
dec
out
inc
ja
insb
push
sbb
mull
fists
lret
mov
das
dec
sbb
lds
sub
mov
adc
sub
outsl
inc
add
int
mov
or
lock
daa
dec
neg
fidivrl
scas
xchg
add
xchg
hlt
pusha
shll
mov
sub
push
fcom
sbb
filds
pop
cltd
not
popf
es
gs
pop
rol
ss
aaa
outsl
aas
out
cli
aaa
sub
ret
sahf
pop
movlps
add
jne
aam
aas
shlb
mov
cmp
jp
call
hlt
lods
or
mov
fdivl
mov
sbb
xchg
mov
add
jp
ds
xor
enter
xchg
push
xchg
adc
and
or
testb
repz
dec
cltd
add
jne
mov
and
sbb
xorb
shl
fdiv
popf
mov
int
cs
pop
das
inc
call
pop
out
fwait
or
pop
mov
cmp
pop
int3
mov
mov
lcall
fistpl
mov
and
sbb
sub
mov
in
loope
test
pop
cltd
icebp
and
xor
clc
lret
or
mov
add
sarl
popf
sbb
fisttps
sub
test
data16
mov
push
rcrb
ja
xor
lds
inc
mov
add
and
inc
cmc
pmaddwd
push
inc
int
jo
push
dec
cmpsl
adc
push
push
lret
mov
es
xor
cli
push
and
sub
imul
paddd
pop
add
not
push
cli
xlat
cld
das
das
out
add
cs
movzwl
inc
nop
rol
mov
push
inc
out
pop
sbb
sahf
hlt
in
mov
inc
pop
scas
mull
push
dec
je
dec
inc
inc
or
std
cmp
dec
cmp
add
cmp
fwait
lock
ds
pop
pop
scas
scas
pushf
mov
cmpsl
cmc
movsl
in
dec
imul
mov
dec
or
movsb
add
add
mov
insl
jp
pop
clc
sbb
arpl
cmpsl
sub
xchg
xchg
mov
dec
mov
pop
repz
pop
add
cs
mov
bound
and
into
push
jmp
jl
mov
gs
adcb
sub
sbb
and
mov
call
out
fidivrl
loope
xor
pushf
cwtl
mov
add
push
shlb
stc
mov
arpl
push
and
or
mov
cli
xor
popa
leave
arpl
in
dec
dec
je
lret
push
testl
fsts
jns
ds
incb
xor
or
inc
daa
pop
adc
outsb
pop
movsl
jns
and
insb
and
push
lret
bound
movsb
mov
orb
add
clc
insl
dec
scas
cmp
insl
std
mov
sub
xchg
rcrl
and
push
pop
mov
scas
fs
jg
les
in
jmp
cmp
cmp
outsl
and
jb
push
int
lret
movb
shlb
addr16
xchg
mov
jmp
pop
or
in
jecxz
cmpl
sbb
ret
fidivrl
cmpsl
icebp
lods
sub
loope
arpl
aam
mov
inc
daa
daa
mov
and
add
adcb
or
jmp
mov
mov
fsubl
inc
fisttpl
push
mov
jae
inc
lahf
mov
std
xor
push
mov
outsb
ja
push
inc
aam
cmc
out
cmp
aad
int3
aas
fsubr
faddl
das
iret
xor
ljmp
fidivrs
push
push
test
sub
inc
cmp
xor
fdivrl
test
andb
push
inc
adc
movsb
mov
add
pop
cmp
mov
mov
in
loop
push
in
mov
test
adc
lsl
xor
pop
js
mov
sbb
dec
gs
cmp
push
cmp
jno
cmp
int
cmp
jae
test
xchg
xor
push
test
imul
jnp
xchg
cmp
ret
into
test
mov
out
les
enter
and
aas
push
push
xlat
int
push
sub
inc
rcpps
aas
lods
mov
xor
jno
jbe
popa
pop
cmp
push
mov
xor
fldcw
lods
insl
xchg
jae
out
jns
lahf
in
lods
int3
adc
mov
xchg
and
sbb
bound
push
inc
push
sbb
mov
fistl
mov
add
test
popa
lods
push
cld
cwtl
mov
ds
rcll
adc
out
cli
sbb
push
pop
push
pop
xlat
push
mov
stos
xchg
jge
sbb
les
repnz
popa
push
movsl
mov
rcr
jp
jbe
sahf
jb
sbb
push
imul
popf
imul
xor
add
cltd
ds
mov
pop
pop
loop
xchg
or
pop
xor
adc
xor
jbe
and
xlat
sub
xchg
sub
shll
rcl
imul
lret
imul
mov
jecxz
dec
cmp
mov
test
push
test
and
jo
lret
cmp
mov
pop
dec
sub
hlt
xchg
lock
mov
or
enter
jg
sbb
rcrb
sub
push
cmp
mov
in
sti
addr16
sete
repz
rorb
imul
dec
sub
std
push
addl
jmp
add
pop
fs
sub
addr16
jns
pop
mov
mov
inc
repnz
insb
or
icebp
pavgb
mov
lcall
sti
mov
inc
stos
sbb
loopne
in
fwait
mov
in
in
jecxz
push
or
es
xor
cmp
loope
outsl
xchg
ss
jbe
xchg
adc
sub
jle
movsl
mov
loop
jecxz
icebp
insl
lock
pushf
repnz
dec
sbb
dec
stos
jb
ljmp
repnz
incb
jg
int3
adc
add
mov
cwtl
mov
push
xchg
pusha
cmp
pop
dec
in
xor
in
ret
add
aaa
jnp
jle
adc
data16
inc
int3
pop
fistpl
nop
add
int3
stos
rcrb
xchg
adc
aad
cmp
repnz
insb
outsb
xchg
add
dec
movl
mov
xchg
rcrl
mov
mov
dec
test
adc
test
sahf
inc
cmpb
sbb
out
cs
ja
jnp
negb
mov
mov
jno
sbb
out
and
xchg
loope
sub
xchg
mov
leave
sbb
pop
lods
sbbl
addr16
jns
sub
mov
inc
pop
cmp
gs
aas
dec
roll
pop
add
aad
jne
rcll
clc
push
mov
insl
orb
movsl
sbb
sub
stos
test
push
das
sbb
mov
add
add
mov
fsub
xor
inc
push
mov
ficomps
xchg
xchg
int3
scas
jge
mov
call
xchg
mov
xor
xor
leave
xadd
test
xchg
ss
pop
push
sub
scas
xchg
dec
and
data16
mov
xchg
ficompl
imul
and
pushf
in
inc
push
mov
inc
xor
jnp
dec
push
shr
pop
mov
lcallw
or
imul
add
mov
push
adc
stos
lcall
sbb
mov
sub
sbb
cmp
push
pop
enter
loope
mov
adc
pop
dec
pushf
aaa
dec
add
icebp
sub
sbb
pop
pushf
fnstenv
push
call
pop
arpl
cmp
enter
xchg
mov
pop
pop
stos
cmpb
call
pop
push
shr
dec
inc
aam
jge
mov
or
ret
imul
dec
sbb
fisubrl
or
int3
xchg
mov
or
inc
repz
mov
stos
je
fdivl
dec
lahf
cli
mov
hlt
dec
and
dec
ss
push
inc
jnp
mov
test
aam
jg
mov
leave
adc
pusha
out
adc
and
mov
pop
xor
push
sbbl
add
es
jge
inc
pusha
or
out
or
jmp
imul
xchg
bnd
out
andb
aad
mov
mov
leave
imull
mov
data16
push
mov
nop
div
lods
mov
mov
lcall
mov
inc
pop
dec
inc
jecxz
mov
xor
add
gs
shlb
and
and
mov
cmp
push
sbb
xchg
and
cmc
mov
push
cs
cmpsb
xchg
sbb
aaa
xor
lahf
out
call
dec
mov
sub
mov
cltd
aas
cmpsb
adc
fwait
into
dec
testb
stos
cmp
xor
fistpll
pushf
inc
repz
outsb
lret
mov
fidivrl
mov
test
jb
push
or
push
mov
test
enter
push
push
fstl
call
mov
gs
sbb
stos
jne
popa
sub
fs
cmp
and
stc
rcrl
mov
sub
jg
sbb
iret
gs
js
jae
sbb
add
mov
jne
lods
lock
stos
adc
jbe
clc
dec
xchg
sbb
mov
lahf
out
out
cmp
push
mov
test
out
test
add
and
es
jnp
iret
dec
shr
stos
out
into
hlt
mov
fnstcw
xor
push
lret
adc
push
hlt
cli
into
cmc
jae
xchg
and
cmc
test
mov
inc
adc
stc
and
popf
fmuls
fsubrs
rcrl
rolb
fs
icebp
pushf
int3
mov
inc
sbb
dec
add
jb,pn
xor
jg
das
mov
sbb
mov
and
mov
pop
mul
xchg
inc
push
repnz
xor
ja
loope
mov
jl
popa
xchg
ja
lods
push
pop
jmp
ret
mov
sub
clc
sti
dec
pop
stos
mov
pop
cmpsb
jle
jg
push
les
add
pop
lcall
psubusw
xchg
cmp
sti
jb
testl
inc
mov
pop
push
pusha
jns
lret
add
add
xchg
ret
mov
xchg
shrb
mov
out
shlb
xchg
ret
das
cmpsb
push
jo
sbb
dec
out
or
mov
aam
push
das
pop
ds
mov
loopne
or
test
xor
adc
enter
int3
xchg
lret
aaa
jbe
jmp
add
fnstsw
pop
stos
in
push
frstor
hlt
jo
pop
dec
cmp
add
pop
pop
cltd
mov
ret
dec
dec
insb
sub
aaa
sti
rorb
sbb
add
push
cmc
jno
les
mov
lret
xchg
rolb
mov
mov
bound
cs
sahf
scas
xor
aaa
inc
cmp
call
push
popa
xchg
add
and
xlat
iret
adc
in
mov
jnp
shrb
int3
insl
lret
movsb
pop
lcall
jmp
mov
push
dec
pop
and
outsl
sbb
xchg
fwait
cmpsb
or
dec
dec
mov
cmp
push
fsubl
dec
sbbl
cmp
sbb
test
loope
jno
fistl
xchg
cwtl
inc
ja
fwait
and
fidivrs
movsl
test
cmp
shl
or
xchg
sub
pop
adc
add
jno
bound
inc
mov
mov
das
adc
inc
mov
dec
sbb
sarl
push
push
popf
jnp
mov
loope
es
mov
xchg
xchg
dec
xchg
mov
jb
jnp
mov
into
idivl
and
mov
mov
xor
xchg
clc
gs
sti
out
xor
iret
mov
in
pop
shlb
add
push
or
aad
movsb
test
mov
cmp
inc
mov
out
mov
push
test
cli
into
cmp
scas
xchg
cvtdq2ps
mov
add
and
sbb
scas
fbld
dec
lret
in
or
inc
stos
bound
je
mov
sbb
lods
mov
dec
jge
insl
xchg
leave
or
and
and
inc
dec
imul
pop
out
mov
insb
scas
mov
movsl
and
out
dec
adc
cmpsl
aad
lcall
enter
fs
jge
loopne
xlat
xchg
mov
dec
dec
daa
mov
jg
mov
push
test
adc
call
mov
jge
xchg
js
outsl
testl
sub
add
notl
sub
pop
mov
ret
shr
in
mov
std
pop
xor
push
or
and
sbb
adc
mov
std
sbb
mov
mov
xchg
int
dec
dec
fcoml
jo
hlt
mov
leave
daa
or
inc
addr16
jnp
jg
in
jge
fimull
xchg
pop
into
ffreep
in
and
pop
popa
mov
mov
cmp
rcrw
cs
fildl
pop
lcall
add
outsb
shll
mov
or
nop
cld
jl
mov
addr16
das
int
dec
add
jae
mov
fadd
jno
add
jle
sbb
pop
xor
and
lahf
ja
xor
jnp
lahf
add
mov
gs
dec
push
xor
sti
or
or
adc
js
adc
xor
test
fadds
pop
mov
adc
cwtl
mov
xorb
pop
push
lea
or
std
xor
pop
inc
xchg
adcb
cli
dec
pop
jmp
fmuls
lods
jae
or
in
push
out
jg
jb
repz
pop
push
cmp
aad
bound
add
push
mov
imul
dec
js
or
pop
outsl
sbb
sarl
dec
cltd
in
adcb
pop
pop
fs
bound
xchg
sub
mov
ja
dec
sub
cmp
mov
adc
fwait
jecxz
clc
std
dec
pop
push
inc
sub
ja
mov
pop
cmp
dec
cmpsl
dec
push
cs
das
int3
mov
nop
ret
hlt
fwait
imul
in
lcall
divb
xchg
fists
iret
lcall
push
sub
xchg
mov
enter
xchg
push
add
cmpsl
add
sub
cs
imul
out
in
xchg
jo
adc
push
inc
jecxz
sub
out
mov
cli
jg
call
lds
adc
and
arpl
jnp
add
jg
mov
mov
out
jo
pop
pop
push
inc
lret
cld
ljmp
mov
js
inc
pop
mov
add
movsl
xlat
leave
ss
sti
pushl
out
or
jo
out
fucomi
jp
or
ss
inc
cmp
ret
shlb
adc
inc
adc
das
inc
ss
scas
pushf
mov
arpl
test
xchg
jmp
xor
add
popa
enter
hlt
cltd
stos
mov
fwait
stos
xchg
fbstp
adc
js
nop
sbb
popa
cmpsl
lods
inc
mov
enter
add
mov
cmp
pop
and
dec
sub
xchg
repz
mov
mov
addb
push
pop
cmp
push
mov
xchg
mov
adc
data16
jb
pop
test
sbb
adcb
jle
sub
mov
cmp
lcall
outsl
leave
mov
and
mov
cmp
aaa
and
lea
fimull
rol
aas
fcoms
ret
xor
and
cmp
cmp
mov
mov
cmp
mov
mov
jl
lcall
cmp
or
or
sbb
sub
xchg
jae
or
mov
cltd
mov
or
or
lret
testl
dec
cld
stos
jge
push
xchg
data16
pop
xor
xlat
insb
inc
popa
sbb
push
xor
les
add
adc
and
mov
cltd
rolb
test
les
dec
mov
xor
push
lds
or
adc
pop
sets
pop
int
shll
sub
adc
out
cwtl
inc
ds
ja
out
mov
sbb
bound
or
test
jb
or
negl
mov
adc
dec
test
jno
cwtl
lds
clc
add
shr
adc
jg
cmp
dec
popa
decb
pop
mov
mov
jmp
or
loope
mov
lods
sub
pop
insb
xchg
rcrl
pop
mov
lea
fsubs
pusha
add
test
pusha
ja
sub
les
push
mov
jbe
mov
add
decl
push
inc
or
cmp
cmp
out
ljmp
xchg
inc
inc
iret
pop
cwtl
lea
daa
in
and
push
fimull
gs
dec
sbb
stc
leave
push
addr16
jle
mov
xchg
cmp
enter
and
cmpsl
into
pop
cli
icebp
sbb
sarb
mov
outsl
jge
pop
xor
jb
push
inc
sbb
cmpsl
xchg
mov
lds
out
add
clc
loopne
mov
xor
inc
insl
outsl
jg
sub
cli
rcrb
or
mov
ret
mov
push
sbbl
out
test
andb
mov
in
jne
movsl
out
mov
mov
cmp
push
or
das
dec
pop
cmc
cmp
pop
nop
jle
push
push
sbb
sbb
jmp
inc
or
hlt
movsb
dec
jne
cmp
pop
mull
mov
lods
cli
sub
add
popf
xchg
cmc
fildl
mov
in
mov
xor
loopne
mov
mov
xchg
push
inc
cld
jo
loop
adc
cmc
mov
js
js
daa
sarl
cmp
addr16
outsb
jo
out
lea
jno
push
decb
add
testb
sub
lahf
xor
or
loope
add
sbb
imul
test
data16
inc
mov
push
xchg
mov
jb
xor
dec
cmpsb
sbb
push
xchg
ret
repz
inc
push
sbb
ljmp
lods
jns
call
add
inc
adc
push
lcall
sbb
lods
je
xchg
mov
fnsave
loopne
mov
adc
repnz
movsl
add
cmp
je
jae
ret
int3
or
hlt
add
add
mov
sbb
mov
lcall
mov
mov
mov
jecxz
das
pusha
push
fidivs
xchg
xchg
and
outsl
iret
lcall
lea
mov
aad
jl
sub
rcll
ds
xor
mov
scas
dec
pop
scas
jne
fwait
mov
jae
mov
jb
pushf
ss
or
and
das
sahf
or
mov
js
outsl
fs
js
scas
jmp
sub
fadd
xor
scas
dec
add
or
adc
pop
popf
add
mov
xor
xor
in
popf
pop
or
push
aad
jmp
fildll
iret
xchg
mov
cwtl
lret
jg
mov
sub
push
dec
inc
repz
push
movsl
std
or
xor
loop
andb
inc
nop
mov
inc
test
insl
outsb
cmp
push
mov
push
mov
inc
sahf
rol
aaa
repz
and
in
lea
pushf
sahf
movl
or
hlt
fs
nop
push
imulb
rcrl
mov
or
leave
pop
pop
popf
mov
sarb
lea
xchg
sbb
shll
leave
push
js
movsb
movsl
lahf
std
rcrb
cmp
add
cmpb
aas
lock
and
pop
int
mov
push
clc
adc
filds
cmp
inc
and
jecxz
pop
jae
sti
or
mov
adc
dec
aas
xor
ja
scas
mov
mov
cmp
mov
out
push
std
adc
sub
dec
daa
push
cmc
ja
in
or
leave
lds
push
cli
xor
loopne
in
cmp
xchg
inc
push
test
das
jp
mov
xchg
mov
sub
jno
inc
inc
mov
cli
fists
sub
mov
clc
push
loop
and
std
jle
imul
jnp
data16
aaa
fs
push
insl
insl
dec
mov
push
jnp
pop
lods
jo
fcmovb
int3
fdivp
scas
push
data16
mov
aaa
dec
mov
dec
xor
jecxz
xlat
test
ljmp
inc
jl
lret
add
push
enter
sub
mov
push
push
inc
std
fnsave
cmpsl
adcb
mov
pusha
movsb
aas
cmpb
loopne
pop
outsb
cmp
or
shl
inc
sahf
insb
xor
mov
mov
je
fcompl
xor
xchg
dec
pop
xchg
test
inc
sbb
imul
xor
cmp
jl
subb
mov
popw
testl
lahf
mov
mov
sbb
push
andnps
cld
adc
sub
cwtl
inc
sbb
or
xlat
sbb
mov
xor
or
xchg
or
imull
mov
ret
aam
push
movsl
sub
lea
cmp
imul
or
icebp
arpl
pop
aaa
cmp
cmpsl
jb
ljmp
repz
in
gs
int
bound
jge
pop
inc
sbb
jne
ja
sarb
mov
inc
mov
data16
test
enter
push
pop
stos
and
push
ret
lcall
cmp
mov
sti
test
xchg
mov
out
gs
sub
mov
push
fimull
ror
in
pop
mov
cmp
ret
push
jb
ret
jle
add
inc
jle
dec
loope
adc
das
push
cmp
jecxz
mov
pop
bound
mov
lahf
xchg
call
ja
stos
cmpsb
out
pusha
leave
rcll
jle
and
inc
add
aaa
notb
xchg
int
xchg
jecxz
scas
rcr
fistpll
or
dec
daa
imul
mov
jns
popa
pop
jne
xor
mov
inc
add
stos
or
sub
aam
inc
addr16
jnp
mov
outsb
shlb
jns
enter
sbb
jge
and
ja
fistps
add
xlat
push
lea
add
aas
out
dec
pusha
gs
lcall
dec
loope
dec
divb
xchg
push
test
aas
scas
cmp
cmp
loope
xchg
imul
lock
or
lock
inc
repz
or
and
sub
mov
add
ss
mov
mov
pop
pop
add
out
test
rorl
dec
sub
test
mov
jbe
idivb
pop
sbb
mov
daa
dec
jp
les
flds
mov
sub
xor
jle
adc
insb
stc
push
sarl
lret
orb
and
mov
mov
addb
sbb
pusha
outsl
xlat
or
jns
fldl
hlt
int3
dec
loopne
cmp
test
ss
pusha
pushf
sbb
leave
inc
or
arpl
pop
movsb
sub
rcrb
loop
lcall
mov
sbb
adc
pushf
loop
fidivs
pop
cld
sbbl
jae
arpl
inc
lahf
jmp
xor
fldcw
add
popf
test
addr16
add
out
mov
pusha
fstps
rol
aas
adc
filds
push
jge
jg
mov
es
cmpsl
insb
inc
fnstenv
out
cmp
gs
jne
arpl
and
push
hlt
insb
mov
jae
pushf
dec
rorb
push
shl
stc
lds
mov
out
in
push
jnp
shl
sbb
sub
inc
mov
scas
in
cli
mov
repnz
xor
iret
gs
mov
jl
lds
xchg
cmp
rorb
test
popa
lret
out
mov
push
cltd
arpl
mov
push
pusha
fsubrl
popa
stc
pop
jb
push
gs
and
sub
out
mov
outsl
jae
mov
les
dec
or
jno
das
xchg
add
push
jecxz
loop
pop
pop
data16
add
mov
cmp
jns
shll
jmp
sub
xchg
xchg
sbbl
ss
inc
push
pop
inc
arpl
in
xchg
filds
je
xchg
pop
hlt
pop
inc
daa
sub
popf
jmp
sub
or
mov
in
add
adc
push
xchg
in
loopne,pn
call
inc
sub
ret
pop
loope
xchg
dec
inc
and
add
push
mov
shrl
data16
popf
mov
fstps
push
push
sub
cltd
jge
pop
mov
xlat
jmp
js
insl
cli
leave
jp
and
out
insl
xchg
mov
ret
arpl
pop
and
pop
xchg
data16
push
or
xchg
adc
aaa
push
xchg
jg
cs
inc
call
jo
or
add
loop
cltd
aad
cmp
jno
sub
mov
jb
mov
push
inc
movsb
add
ds
aam
fiaddl
sbb
dec
jg
mov
sub
sbb
xor
inc
arpl
mov
movsl
ja
xor
lods
imul
or
sbb
jbe
mov
add
shr
lock
ret
mov
mov
notl
push
add
push
sbb
out
js
mov
roll
push
dec
pop
jle
lret
mov
sbb
push
mov
push
mov
out
movsb
mov
faddl
xchg
into
jmp
iret
aas
xlat
inc
aas
sbb
xlat
sbb
adc
mov
xchg
scas
xchg
fisubs
xchg
add
test
push
mov
ljmp
fldt
mov
dec
add
adc
mov
fildl
and
and
testl
leave
jbe
in
mov
and
jne
mov
aaa
ret
stc
sbb
outsl
xor
in
xor
ja
mov
das
femms
lods
jmp
cmp
sub
dec
push
cmp
inc
jg
push
nop
les
adc
xor
push
inc
fucomi
inc
icebp
cmpsb
and
stc
mov
push
pop
xchg
or
aam
push
xchg
decb
push
sub
or
negb
push
inc
scas
pusha
mov
sub
jae
cmpb
cld
test
mov
int3
mov
lods
or
ret
push
pushf
ljmp
sub
cmp
idiv
pop
push
adcl
xchg
sub
sbb
stos
push
rcrl
inc
lods
jno
aas
push
sub
sbb
xchg
rcr
sub
jge
add
out
mov
push
mov
sbb
lret
pop
js
push
inc
out
loopne
sbb
out
test
push
arpl
and
imul
into
add
popa
inc
and
and
xchg
fs
mov
sbb
add
sti
xchg
pop
dec
add
jmp
dec
push
dec
cmp
jne
sub
pop
sub
repz
shll
iret
adc
xor
pop
sub
out
rorb
adc
imul
cmpb
push
dec
jns
into
out
shrl
out
dec
ja
push
js
lret
shll
cwtl
jb
push
mov
or
adc
pushf
xchg
test
add
jns
mov
ljmp
jnp
xlat
push
cmpl
js
or
or
sub
mov
daa
cld
les
movsb
pop
push
and
mov
cmp
repnz
cmpsl
pop
out
insb
ss
repz
dec
ljmp
loope
daa
fdivrs
loopne
in
in
addr16
mov
aam
into
das
or
mov
or
ret
adc
sti
movsl
jle
and
dec
cli
push
mov
and
rorb
icebp
sub
stos
aam
scas
xacquire
cmc
sub
inc
loop
add
das
pusha
lcall
mov
pop
sarb
in
les
pushf
mov
push
das
xchg
xchg
addb
push
mov
daa
in
xor
loope
and
rorb
or
insb
das
ljmp
jle
mov
sbb
lcall
outsb
inc
insl
mov
mov
mov
sarl
out
xor
call
fsubl
aas
xor
imul
sub
fdivl
lret
imul
je
movsl
scas
cmp
aas
imul
lods
aas
aad
sarb
in
xchg
popa
scas
movsb
push
mov
xchg
mov
lcall
mov
xchg
xchg
les
add
addb
int3
mov
xor
push
push
or
pop
add
pop
mov
fcmovnbe
mov
mov
ja
dec
test
movsb
outsb
ffreep
push
cmpsb
mov
subl
fwait
int
jle
les
pop
jb
rcr
das
xor
lret
ror
outsb
fmulp
stos
mov
mov
jmp
frstor
aad
adcl
les
cmp
mov
or
int3
frstor
jp
inc
dec
stos
sbb
popa
sbb
loop
mov
and
shlb
out
fisubs
push
sub
aas
add
add
outsb
cmp
dec
inc
and
add
xor
mov
ret
loop
mov
cmp
dec
icebp
inc
xor
push
addl
jo
cmp
mov
repz
imul
insl
stos
xchg
jne,pt
in
and
cmp
shll
mov
xchg
out
cmp
ss
add
sbb
les
xchg
xchg
std
push
int3
or
arpl
or
and
jo
rcrl
movl
icebp
inc
jns
ds
push
in
sahf
push
cwtl
into
jge
push
call
dec
fcompl
push
xchg
out
cwtl
or
andl
movsl
and
push
incl
mov
aaa
aas
fnstcw
int3
sbb
lods
xchg
inc
mov
xchg
and
aad
test
mov
jne
in
sub
cmpsb
je
iret
sarb
dec
aad
scas
test
shrl
sbb
imul
es
or
pop
imul
and
stos
xchg
jns
test
jo
int
imul
and
jle
push
shlb
xchg
int
fsubrl
pop
mov
mov
insb
rcrl
push
int3
stos
xchg
cmc
push
sub
xor
or
adc
mov
sbb
jmp
or
call
jne
mov
js
stc
in
jp
insb
test
jbe
mov
cmp
pushf
xor
or
cmp
mov
mov
roll
lahf
cltd
movaps
xlat
jmp
mov
xor
push
jecxz
fstl
dec
pop
aad
scas
std
xchg
dec
jge
and
fldcw
fiaddl
imul
cmp
cltd
call
cmp
into
test
int
lret
std
dec
and
mov
jo
xor
sbb
data16
outsb
inc
in
dec
ljmp
push
lock
scas
rcr
inc
cmp
call
daa
xchg
pop
mov
ja
lret
inc
mov
cmc
lret
push
jl
push
or
mov
cmc
test
mov
jne
ds
xchg
inc
ficoms
into
adc
xchg
cmp
pop
xchg
leave
std
sahf
out
stos
mov
mov
or
stos
fidivrl
inc
les
xadd
pop
xchg
mov
inc
dec
jmp
je
xchg
cmp
push
sbb
mov
mov
loop
jmp
movsb
add
cmpsb
out
lods
mov
mov
sti
inc
enter
sbb
xchg
aaa
popa
inc
mov
adc
push
shrl
xorb
pop
cmpsb
dec
lret
fs
sbb
aad
enter
push
ja,pn
lcall
dec
sub
pusha
loope
sbb
sbb
push
xor
pop
js
xchg
pop
repz
jl
mov
rcl
repz
xor
or
call
push
movsb
sahf
dec
sbb
pop
mov
rorb
shlb
mov
dec
inc
dec
or
adc
mov
push
mov
cmp
insb
fmull
xchg
cs
mov
pop
div
adc
fistps
jg
sbb
addl
fmull
xchg
fidivrl
iret
dec
add
add
cmp
aad
lods
adc
sbbb
in
pop
push
fwait
jae
add
ljmp
div
add
mov
xchg
push
add
fidivrl
xor
mov
cmpb
push
ret
push
loop
inc
mov
lret
mov
lea
int
push
adc
adc
jno
pop
ja
xor
cmp
pop
cmp
in
mov
xor
mov
divb
cmp
xor
xor
lcall
out
xor
xchg
jbe
pop
and
jp
mov
or
xchg
je
cltd
adc
fnstenv
mov
sbb
mov
loopne
and
pushf
test
and
scas
addr16
insb
popf
xchg
add
sbb
sbb
add
cli
outsb
fwait
cmc
hlt
mov
imul
inc
cmp
jnp
mov
dec
shll
lret
aas
add
mov
ljmp
aad
rol
aad
mov
adc
test
xorb
mulb
andb
inc
mov
loop
pop
push
lods
xchg
clc
pop
pop
sub
lods
or
cld
adc
or
mov
jno
lods
subb
mov
icebp
mov
dec
pop
imul
push
jmp
pop
dec
jecxz
mov
in
lcall
xor
mov
repnz
push
mov
mov
scas
mov
adc
push
mov
cltd
out
cmp
hlt
xchg
arpl
sbb
in
add
dec
cmp
sti
xor
scas
pop
ret
nop
fsubp
pop
cmp
push
mov
mov
mov
and
mov
mov
inc
nop
ds
in
jnp
fmull
push
insl
aad
cltd
push
mov
in
mov
jbe
testl
sahf
inc
jae
and
xchg
and
out
push
add
sahf
lds
inc
stos
mov
mov
dec
cmp
add
add
inc
jg
enter
aaa
in
loop
jp
adc
mov
inc
inc
outsb
pop
push
addb
xorb
mov
mov
add
xlat
inc
xchg
leave
push
pop
jmp
hlt
or
push
jle
dec
push
sbb
bound
xchg
inc
xchg
cmp
add
mov
mov
movsb
lock
loop
cli
cwtl
add
jae
push
fidivrs
xchg
testl
push
mov
sub
popf
dec
adc
push
xor
xor
adc
jns
dec
xor
add
add
jg
int3
push
dec
gs
test
cmp
cld
ljmp
cmp
aas
sub
cs
mov
js
xor
sbb
or
xchg
xor
adc
jo,pt
pop
lods
sbb
mov
jecxz
inc
push
das
cmc
sub
cli
fwait
pop
sub
mov
int
loopne
test
pop
pop
pop
jg
call
popf
xor
ret
fsub
sbb
mov
cld
nop
fmul
xchg
hlt
cmpsl
mov
mov
sub
test
bound
enter
push
dec
cmp
mov
arpl
xchg
sbb
fldcw
dec
pop
xchg
aas
outsb
std
fwait
jge
cmp
mov
jns
add
cmp
mov
xchg
mov
lds
cmpsl
xchg
nop
pop
jns
les
hlt
dec
data16
fistps
xchg
mov
out
out
mov
ret
push
inc
push
sub
or
inc
lahf
imulb
hlt
dec
sub
fwait
cmp
push
dec
xor
nop
test
sub
fwait
repz
inc
lret
mov
jno
sub
sahf
inc
cmp
mov
stos
inc
stos
jge
clc
movsb
adc
xor
mov
xchg
lods
mov
cmpsb
adc
lret
add
outsl
fs
dec
and
hlt
enter
adc
and
inc
and
out
and
insl
push
xchg
daa
dec
pop
pushf
xorb
pop
push
pop
pop
add
mov
gs
out
loopne
decl
lock
aaa
sti
mov
data16
out
jb
out
add
sbbb
addb
ds
push
xor
sahf
adc
xor
push
mov
stc
shlb
mov
cmp
mulb
andl
mov
push
mov
mov
xor
arpl
pop
xchg
lcall
rolb
inc
jns
cmp
ret
popf
sub
push
popa
sqrtps
cld
cltd
sbb
push
sbb
loopne
sub
jmp
shl
add
inc
insl
cltd
das
stos
mov
js
es
int3
dec
test
popf
pusha
jb
ss
mov
jbe
insb
std
lock
in
sar
jne
mov
push
lret
xor
sbb
inc
mov
push
adc
push
loope
cmpsl
std
repnz
xchg
fdivrl
mov
in
sbb
pop
adc
or
xor
scas
mov
inc
pop
sbb
jne
xlat
jno
les
je
fldl
fwait
pop
movsl
mov
test
jle
mov
mov
dec
push
stos
pusha
mov
aas
dec
dec
aas
mov
jbe
mov
ss
int3
push
dec
push
mov
jb
sbb
push
or
divb
xor
and
int3
ficoml
xor
jnp
ret
notl
mov
cmp
xor
sbbl
cmp
mov
mov
and
leave
mov
inc
or
mov
mov
adc
lcall
gs
divl
js
xchg
popf
cmp
jne
and
fidivrl
fcoms
clc
div
ret
out
push
sub
inc
insb
add
repnz
icebp
enter
xchg
pop
or
xor
jo
pop
js
dec
cmp
addl
inc
mov
mov
es
xor
push
shrb
jo
adc
dec
jge
push
cwtl
cmpsb
add
mov
ds
add
xor
lret
push
mov
add
mov
mov
mov
popa
inc
outsl
and
jbe
sbb
cmp
loopne
ds
xor
push
clc
adc
inc
add
push
pop
push
in
inc
cld
cmp
mov
ret
xorb
lahf
cmp
mov
or
pop
movsb
rclb
roll
inc
adc
pop
jb
sub
mov
sbb
add
sub
adc
lret
lock
jae
enter
mov
aas
or
xchg
cmp
dec
mov
fimuls
jle
out
outsl
stc
lret
enter
xchg
add
pusha
aaa
sub
les
stos
mov
xchg
nop
jg
fdiv
xlat
rol
or
in
dec
fdivp
cmp
call
hlt
cli
mov
lods
cmc
adc
xor
mov
scas
xor
loope
sub
inc
mov
dec
repz
test
cltd
sbb
jmp
lods
insb
ja
cld
push
jo
outsl
movsb
jmp
push
pop
mov
imul
add
push
xchg
cmpsb
stos
lods
jae
loope
xchg
shlb
pop
add
rorl
sbb
xor
jne
push
cs
or
sub
scas
push
cli
fsubrs
mov
movsb
int3
xchg
lcall
mov
lea
adc
adc
cmp
xchg
test
adc
sbbb
dec
pop
ljmp
repnz
mov
xor
jns
and
in
sbb
jne
dec
test
daa
fs
dec
insb
inc
iret
arpl
and
orl
dec
jns
mov
in
cmp
orb
test
pop
mov
dec
jecxz
clc
lods
jecxz
in
mov
popa
adc
nop
icebp
mov
out
mov
add
push
jae
mov
repz
adc
scas
data16
in
movsl
outsl
mov
fldcw
push
pop
cmp
push
xor
mov
out
arpl
push
addr16
out
add
sbb
jge
cmp
fldl
adc
data16
pop
mov
fdiv
rcr
pushf
cs
sbb
sbb
add
jg
fs
icebp
bswap
push
aaa
pop
jne
insb
sarl
sub
jecxz
mov
sub
or
cmp
jg
movsl
and
es
xchg
frstor
or
sbb
dec
lret
rcrl
lods
xor
scas
ss
adc
orl
call
cli
lock
sub
movsl
and
into
hlt
push
sti
sbb
mov
adc
daa
mov
mov
cmc
cmp
mov
gs
sub
push
fsubs
test
loop
or
ret
mov
js
popa
adc
xor
pop
mov
lods
int
pusha
in
mov
inc
arpl
imul
mov
mov
dec
add
loopne
sub
jne
inc
lods
jmp
xor
out
adc
stos
fbstp
mov
dec
fs
rorl
shll
and
dec
stos
lret
shl
sub
lock
pop
rcrw
test
and
jmp
fwait
adc
mov
xchg
mov
icebp
add
inc
sbb
jle
pop
bound
addr16
jb
lods
lret
loope
imul
dec
mov
andl
bound
cwtl
addr16
sbb
adc
mov
xchg
repnz
inc
xchg
xchg
fmuls
push
in
icebp
mov
sbb
adc
cmp
dec
subb
loope
jno
icebp
pusha
push
jp
sub
outsl
add
jns
loopne
push
aaa
stc
data16
icebp
jae
lods
pop
jecxz
cld
iret
gs
xor
lea
into
mov
xchg
repnz
dec
add
das
test
push
and
push
xchg
push
rorl
movsl
cmpsl
fs
mov
incl
mov
push
loopw
in
cltd
dec
mov
inc
outsb
stos
imul
aam
or
mov
inc
dec
fisubrs
shll
mov
pop
pop
imul
push
xor
popl
imul
hlt
popa
aas
xchg
xchg
xchg
es
adc
jno
and
movsb
imul
daa
nop
and
cs
fadds
xchg
xchg
pop
repnz
sub
xchg
fs
push
lcall
push
insl
xor
cmpsb
aas
insb
adc
sbb
sti
push
sub
std
add
xchg
iret
inc
mov
out
movsl
cmpsb
cmp
subps
out
push
inc
iret
cmp
std
jno
loop
cmpsl
pop
xchg
enter
cmp
mov
and
cmp
xchg
cwtl
psrlw
not
cmp
mov
xor
insl
mov
iret
aam
pop
call
mov
dec
mov
inc
pop
clc
cs
scas
pop
lods
andl
out
xorl
and
incb
jp
fimull
imul
ret
push
push
nop
insl
pop
popf
scas
pop
outsl
les
cmp
sbb
sub
cmp
inc
add
lods
movsb
scas
in
xchg
mov
icebp
and
adc
rolb
popa
aam
idiv
cmpb
or
mov
jecxz
adc
inc
jmp
imul
imul
insb
and
xchg
xchg
pop
mov
add
movsl
dec
xchg
sub
pop
stos
scas
outsl
dec
mov
aam
and
xchg
js
or
mov
mov
popf
scas
dec
sbb
gs
sub
adc
sbb
call
popa
jbe
divl
out
push
out
push
mov
xchg
scas
ss
cltd
mov
shrb
dec
or
iret
insl
or
dec
outsl
ret
fldt
mov
stos
gs
cli
dec
insl
std
inc
add
xor
mov
fnstsw
in
fwait
fs
pop
jb
jne
and
xor
push
mov
mov
pushf
sub
adc
pop
xchg
or
sbb
sub
mov
andb
and
fisttpl
stos
fildll
fnsave
pop
jecxz
sahf
mov
pop
push
xchg
stc
mov
mov
fbstp
lds
add
xchg
sbb
cmp
adcb
push
out
in
xchg
cmp
mov
roll
or
lods
jae
mov
push
sub
loop
gs
xor
fisubs
cmpl
movsb
push
xor
in
mov
sub
pop
out
in
test
or
mov
adc
xor
pop
lods
push
dec
popa
nop
or
xor
in
pop
aas
cmp
loope
sarb
in
cmpsl
bsf
push
and
hlt
or
mov
fwait
mov
mov
add
inc
add
jnp
sub
iret
repz
rol
mov
imul
movl
adcl
shrl
cs
push
pop
mov
int3
test
aaa
test
ja
test
add
xor
mov
sub
sahf
pop
ja
push
adc
stos
nop
xor
jecxz
fdivrl
sub
ret
or
adc
mov
out
cmc
add
pop
sbb
mov
sbb
sbb
dec
add
mov
pop
or
fcomps
push
mov
or
imul
mov
sbb
pop
push
xchg
iret
aad
int
dec
adc
dec
lret
sti
push
adc
xchg
dec
sbb
rcrb
loop
mov
cmpl
adc
aas
lret
add
fimuls
ja
pop
mov
cmp
mov
es
or
push
fsub
sahf
sbb
popf
or
lock
fadd
repnz
add
inc
stos
cmpsl
dec
xchg
icebp
cmp
ret
out
adc
pop
ret
addr16
pop
repnz
leave
lods
cmpsl
adc
adcb
dec
xchg
cmp
or
pop
inc
cld
cmp
imul
test
repz
loop
sub
xorl
scas
cmpb
or
pusha
incl
enter
dec
stos
mov
mov
iret
lret
jle
mov
loop
jmp
int
lods
iret
cmpsl
sbb
cmp
mov
pop
pop
lcall
repz
aaa
cmp
mov
ds
pop
lds
bnd
or
cmpsl
out
loopne
pushf
repnz
roll
xchg
dec
add
xlat
jle
insl
inc
inc
adc
or
fisubs
xchg
inc
sbb
repz
negl
push
sbb
lea
sbb
leave
add
lret
inc
lcall
call
mov
and
xchg
or
jmp
ja
sub
mov
popa
mov
es
lret
mov
xor
jno
cmpsb
nop
out
outsb
subb
in
jb
jmp
leave
loop
mov
negl
loope
pop
xchg
push
je,pn
mov
sbb
fstps
jle
cmovbe
aad
mov
inc
lret
adc
sahf
roll
push
out
shr
add
push
mov
jl
xchg
xchg
sarb
loop
jge
jns
sbb
xlat
lea
add
mov
les
jle
cmpsl
and
psrad
cmpsl
xchg
or
pop
pop
or
pop
xchg
shr
int3
mov
adc
frstor
ds
inc
je
lret
outsb
xchg
stos
or
or
add
fdiv
shlb
lahf
fs
sti
fsubrl
lea
push
dec
bt
xor
orl
ss
fwait
or
inc
push
loope
sub
sub
stos
jl
in
fstl
out
lock
add
dec
test
jp
es
cmp
jae
or
outsb
leave
outsb
mov
cwtl
xchg
popa
call
xchg
cmpsb
lcall
popa
or
into
lcall
fdivr
xchg
jecxz
cmp
js
and
adc
mov
mull
xor
sti
pop
push
pop
inc
push
cwtl
ja
jmp
test
scas
mov
sub
pop
movsl
loop
inc
and
sub
sub
andb
ljmp
nop
in
sbb
adc
push
cltd
clc
push
xor
sbb
aam
mov
mov
mov
and
lea
push
out
cltd
mov
push
cmp
test
inc
adc
add
push
fwait
aam
or
cmp
negb
sbb
mov
dec
sbb
mov
das
add
inc
mov
cmp
icebp
push
icebp
sbb
cwtl
jle
mov
cmc
push
insl
aaa
and
mov
nop
jo
xchg
xor
mov
push
sbb
sub
lcall
inc
frstor
push
inc
and
leave
and
push
push
lret
pop
mov
pminub
popf
rcrb
push
sti
fnsave
mov
pop
mov
or
int
jmp
jle
pop
ffree
xchg
pop
add
fistpll
dec
inc
in
and
xchg
inc
enter
mov
sbb
and
insb
or
adc
je
cmp
fstpt
mov
push
jne
sti
lods
lret
push
and
push
and
fwait
add
push
pop
test
das
push
dec
pop
or
jle
fnclex
xlat
cltd
fs
cmc
dec
jbe
inc
jno
clc
cmp
out
xchg
push
fldt
jbe
add
negb
dec
cmp
test
xchg
imul
cld
daa
outsb
repnz
setae
and
or
jge
icebp
xchg
cwtl
mov
imul
xorl
pop
decb
or
pop
aas
push
test
ljmp
and
aaa
inc
inc
js
into
mov
jno
mov
mov
ret
add
add
inc
fisttpll
push
hlt
cs
push
rolb
and
pop
cmc
in
subb
or
mov
shlb
into
cli
and
xchg
ja
and
mov
rorb
and
inc
mov
mov
xlat
jbe
stos
orl
adc
cltd
ljmp
add
pop
aaa
pop
shll
sbb
mov
adc
xor
cmpsb
das
mov
lret
inc
jl
xchg
push
mov
ja
or
test
push
and
mov
dec
push
int3
fiadds
cmp
and
sub
inc
pop
xchg
mov
inc
pop
fs
int
sbb
cmpsb
add
aas
jb
pop
loope
push
dec
push
pop
mov
and
sbb
push
lock
jg
and
scas
xor
xor
in
push
enter
cmp
shrl
mov
js
daa
cmp
std
dec
ret
jb
cmp
shr
dec
gs
outsb
xchg
outsb
mov
sub
inc
push
cmp
test
leave
pop
sub
and
mov
jne
es
jg
add
pop
push
test
sub
cmp
rclb
adc
mov
fxch
fwait
movsb
mov
mov
add
mov
sub
lcall
add
fidivs
repz
stos
push
xor
sbb
int3
movsb
push
insb
insl
mov
lcall
jmp
push
xchg
add
sbb
imul
stc
repnz
mov
xchg
cmpl
or
xchg
mov
xchg
out
push
mov
or
mov
cmp
mov
int
ljmp
ret
fnstcw
push
mov
fimull
xchg
repz
and
addb
pop
push
outsb
shlb
push
xchg
xchg
sub
in
out
mov
pop
and
ljmp
clc
mov
or
ja
iret
fisubrs
dec
aaa
in
lock
xor
les
adc
imul
sbb
xor
push
rep
shll
iret
in
or
cmp
sarb
pop
ss
xchg
fwait
mov
push
mov
cmp
lods
in
mov
pop
mov
xor
clc
xor
test
lcall
inc
mov
pop
shlb
mov
cmpsl
pusha
add
sahf
mov
jno
push
jecxz
jo
and
inc
arpl
lret
sub
sub
outsl
test
cli
add
clc
das
fmul
icebp
std
imul
popa
stc
clc
mov
or
aaa
pusha
ss
imul
dec
inc
into
jno
add
or
test
jb
cwtl
adc
dec
cmpsl
lea
test
stc
cmc
fisttps
or
mov
int3
mov
roll
cmpsl
dec
stos
add
mov
mul
sbb
out
stc
arpl
push
lret
mov
and
popf
xor
xchg
lret
xor
or
mov
popa
popf
scas
and
ja
lret
arpl
mov
push
sub
popf
mov
and
test
pop
push
loopne
sbb
int3
fsub
cs
mov
cmpsb
pop
xchg
jo
dec
add
mov
insb
xor
or
icebp
sbb
sbbb
hlt
mov
jno
adc
cmpsb
bound
dec
mov
aaa
xchg
push
mov
loop
ljmp
xor
dec
cmp
inc
mov
inc
xor
dec
sbb
jecxz
add
mov
inc
insb
cmp
in
jns
dec
aas
add
leave
cld
xlat
dec
inc
pop
insl
mov
stos
xchg
pop
jmp
fadds
addl
cs
subb
xor
inc
iret
dec
rol
pop
imul
pop
mov
sbb
jecxz
mov
cld
and
push
adc
outsb
add
popa
dec
add
imull
scas
push
lea
mov
pop
sub
insb
jge
gs
nop
test
push
orl
add
sti
sbb
lods
mov
jns
pop
daa
xchg
loope
fs
and
inc
into
pop
jne
pop
or
or
sub
adc
js
adc
fnsave
xchg
xchg
int3
repz
pop
jge
adc
mov
dec
pop
cmp
sub
loop
lds
data16
mov
dec
sub
and
clc
pop
int
int
int3
and
pop
stos
inc
jmp
fsts
outsl
adc
roll
mov
xor
xchg
sbb
stos
adc
scas
cmpsl
fs
cs
xchg
je
pusha
lea
adc
mov
sub
push
inc
and
xor
fdivl
cmpsb
cmp
or
adc
mov
and
negl
ret
mov
pop
loopne
insb
pop
iret
repz
jmp
cmp
fwait
push
jb
out
cmp
ds
xacquire
pop
rclb
xchg
push
popa
push
test
inc
pushf
arpl
out
jecxz
cmp
std
repz
pop
popa
pop
sbb
out
adc
popa
lods
push
cmp
xor
ret
test
mov
sub
stos
lds
mov
push
adc
inc
in
pop
call
in
mov
sbb
idivl
ret
add
xchg
pusha
adc
and
das
in
inc
push
lds
shlb
cld
in
ret
mov
loopne
arpl
shlb
xor
sub
push
or
daa
into
mov
cli
out
aad
scas
adc
ret
mov
sti
leave
cmp
sbb
mov
in
not
xchg
push
mov
popa
xor
jbe
add
sub
mov
aad
pushf
xchg
call
sbb
out
inc
or
push
int
mov
lea
or
arpl
mov
pop
cli
sbb
add
adc
jge
xchg
ja
add
ficomps
loop
sbb
subb
stos
lea
and
cmp
lcall
lret
xorl
jns
add
testl
cs
mov
fiadds
xchg
push
test
jnp
jecxz
jl
mov
pop
xlat
xlat
es
cmp
push
add
mov
or
loope
mov
dec
xor
xchg
lds
nop
jle
movsl
enter
sti
hlt
adcb
cli
dec
outsb
xlat
pop
xor
sahf
mov
ret
mov
mov
xor
addr16
aam
add
sbb
or
mov
cmp
pop
pop
pop
mov
push
data16
enter
and
fst
pop
test
out
pop
insb
jno
fimull
mov
push
shl
sbb
adc
in
or
cltd
cwtl
ret
aaa
stc
das
xor
decb
pop
out
test
bound
sub
test
mov
sti
push
lcall
cmpsb
mov
arpl
push
popa
pop
outsl
inc
dec
pop
test
push
negl
jb
inc
arpl
sub
lods
addr16
xchg
jge
ss
idivl
out
mov
test
xchg
out
in
movsl
imul
cmp
pop
push
pop
xchg
rcl
mov
mov
dec
jbe
xchg
jae
push
lock
sti
into
sbb
jmp
mov
dec
pop
pop
mov
ljmp
xchg
mov
pop
sbb
xor
and
insl
sub
cli
sub
pop
in
cmp
mov
hlt
scas
jnp
lahf
sbb
shr
into
mov
add
gs
ja
pop
data16
cmp
cmp
fs
mov
enter
testl
adc
imul
jae
call
ds
pop
lock
mov
cmpsb
and
ljmp
mov
sarl
mov
sbb
adc
cmp
sub
enter
jbe
dec
test
dec
stc
adc
add
scas
sbb
dec
sub
imul
xlat
int3
push
mov
or
dec
jnp
leave
pushl
jg
orl
pop
out
es
pop
cmpsl
and
pop
mov
push
mov
xchg
sbb
and
jns
mov
ds
addr16
das
jnp
mov
and
or
loope
lds
leave
scas
adc
push
pop
gs
jnp
pop
sbb
jnp
xor
out
jmp
sbb
jb
and
hlt
cs
out
cmp
les
xchg
aaa
xor
divl
outsl
rcll
cld
loopne
es
mov
mov
adc
pop
notl
stos
xor
out
sbb
add
and
test
cmp
sbb
sub
stos
pop
push
scas
jns
push
mov
ljmp
popf
dec
test
inc
sub
and
mov
popa
orl
or
xchg
sahf
add
aas
aaa
cmp
inc
arpl
lea
loopne
mov
cmp
mov
pop
loop
adc
idivl
push
adc
add
test
shl
pop
sub
hlt
clc
and
jno
mov
das
std
add
sbb
ret
mov
adc
lret
sub
fldl
imul
sbb
add
mov
xlat
gs
insl
sub
fwait
mov
movb
mov
shrl
ret
sbb
pop
clc
cwtl
push
xor
push
push
mov
dec
loopne
sbb
test
cmp
and
xor
loop
mov
hlt
pop
ljmp
mov
sbb
cmp
insl
push
mov
push
push
mov
adc
ljmp
push
xchg
adc
xchg
xor
push
mov
sub
ret
leave
add
jbe
xchg
in
dec
addb
dec
xor
sub
xor
mov
stos
dec
or
mov
lcall
sub
leave
cmpsl
sub
xchg
add
cli
fdiv
push
jg
xchg
sub
pop
jb
sbb
fcmovnu
mov
sti
in
pop
in
int
pop
sbb
ret
fiadds
aam
adc
insb
adc
add
xchg
dec
and
pop
ja
lret
sub
fstpt
out
inc
add
and
pop
sbb
fistps
push
adc
dec
inc
out
sub
mov
int
pusha
fsubl
add
fldenv
cltd
or
ljmp
inc
add
fidivrl
aaa
rclb
fxam
pop
aaa
pop
xor
sub
push
stos
xchg
je
subb
je
call
rcrl
cmp
sub
push
cmp
into
jae
cld
adc
lods
add
out
daa
inc
xchg
cmp
fildl
cmc
cmp
out
insb
push
xorb
ret
cmc
loope
lds
add
stos
or
dec
lds
or
rorb
mov
push
push
jl
lea
push
add
adc
xor
xor
addr16
and
push
cmp
outsl
jp
ret
push
xchg
inc
xor
mov
jo
pusha
pop
mov
pop
mov
mov
sub
pusha
jmp
mov
or
mov
mov
cs
bound
push
mov
jno
pushf
ret
jb
mov
scas
cli
pop
mov
ficoml
jbe
mov
cld
push
mov
pop
fxch
push
pop
jmp
sub
xor
addr16
adc
movsb
cmp
pusha
test
ds
dec
mov
add
push
aaa
call
add
jns
sbb
dec
enter
mov
pop
test
fcomps
lods
pop
and
pushf
mov
push
push
addr16
adc
out
pop
subb
jecxz
cmpsl
cmc
addr16
sbb
or
mov
nop
sbb
in
test
cltd
adc
or
pop
les
dec
and
jg
mov
sbb
les
subb
inc
sbb
jl
adc
test
pusha
add
xor
stc
adc
xchg
jnp
push
fnstcw
call
cmp
pushf
or
lret
sahf
mov
shrl
jns
cmpsl
out
sti
setge
cs
xor
push
push
aaa
inc
cs
aas
mov
jns
mov
jge
mov
dec
mov
sbb
cmp
ljmp
outsl
push
iret
cli
add
sti
mov
stos
and
stos
inc
add
adc
xor
test
cld
imul
sub
jnp
push
ljmp
pusha
mov
sbb
fdivrs
out
push
mov
mov
addl
adc
aas
adc
push
testb
cmp
sub
push
pop
dec
sbb
jnp
add
test
fnsave
xchg
inc
popf
pop
sub
inc
fisubrs
jnp
in
fs
fscale
adc
dec
sbb
xor
mov
pop
mov
mov
push
es
xor
in
xchg
jge
inc
dec
xchg
jp
jo
push
ficompl
adc
aam
out
dec
pop
loop
mov
push
pop
or
or
mov
xchg
bnd
push
testb
dec
sub
mov
push
inc
inc
adc
xchg
iret
aam
mov
movsl
adc
pop
lock
into
jecxz
aaa
push
dec
or
ds
or
jecxz
sub
sub
cs
mov
test
inc
inc
pop
xchg
sbb
xor
push
scas
repnz
mov
mov
arpl
mov
js
loopne
inc
sub
fsts
mov
or
popa
xor
xchg
loope
arpl
or
in
jb
cmp
jge
xor
xchg
pop
lods
lahf
jae
mov
lds
pop
in
sub
add
movsb
pop
jnp
mov
or
popf
push
pop
in
jg
dec
aaa
out
mov
mov
sub
pushf
mov
jp
mov
mov
add
xchg
pop
cwtl
lcall
xchg
jns
inc
repnz
sub
leave
pop
sarl
and
mov
aas
sbb
andl
jp
push
rolb
push
add
pop
xor
lds
es
mov
cmp
testl
cmpsl
mov
fisubl
jae
sbb
mov
mov
cltd
loop
pop
sbb
cmp
mov
xlat
jo,pt
inc
fistl
pushf
shl
mov
sahf
movsl
loope
xchg
call
movsb
pop
imul
xchg
pop
push
xchg
xchg
push
in
repnz
add
les
stos
repnz
or
ret
mov
jp
xlat
pop
inc
mov
xchg
cwtl
xchg
icebp
xor
xchg
mov
cmp
les
push
jge
rolb
jmp
or
adc
hlt
in
fidivrs
and
xchg
int
aaa
xchg
dec
insl
je
leave
roll
and
jmp
fsubrp
mov
std
jb
or
sarb
and
adc
popf
add
mov
mov
inc
daa
inc
push
xor
mov
mov
xlat
fs
cmp
inc
inc
mov
loop
int3
and
mov
cmp
inc
fs
sarl
mov
cwtl
cmpsb
push
aad
lds
xchg
jnp
dec
push
adc
aaa
add
loop
loop
add
jns
stos
int3
adcb
rcl
in
mov
fwait
push
or
arpl
sahf
mov
outsl
negl
and
repz
dec
sub
pop
mov
xor
xchg
mov
mov
dec
stos
not
sub
xor
dec
movsb
cltd
js
jbe
addr16
xorl
sbb
sub
icebp
mov
dec
pop
inc
jmp
and
outsl
hlt
popa
jecxz
sub
dec
outsl
pop
jmp
dec
adc
fsubp
xchg
movsb
sbb
pop
les
pop
sub
mov
in
sahf
push
add
sbb
mov
ja
insb
les
jmp
inc
out
ds
roll
scas
mov
loopne
nop
push
in
mov
aas
jmp
dec
call
mov
mov
les
insl
mov
test
dec
rorb
roll
pop
xchg
stc
cmpsb
pushl
inc
dec
div
xor
enter
or
xor
in
cmp
or
mov
pop
xor
insl
in
insl
or
cmp
insl
inc
push
inc
add
pop
or
adc
push
jp
mov
xorb
dec
xchg
inc
mov
mov
adc
leave
ret
addl
fisubs
ret
xchg
sbbl
pop
mov
jge
xchg
lock
lret
or
sbb
subb
ret
shlb
xlat
sub
or
pop
outsb
jno
mov
lea
push
sub
popa
pop
cltd
scas
sub
jno
xor
ljmp
stos
or
cli
test
xor
dec
xchg
adc
stos
or
mov
hlt
sub
mov
lds
je
xchg
push
dec
pusha
dec
pushf
and
aad
ja
aad
push
sub
xchg
ret
or
xor
pop
xor
jne
mov
fisubrl
add
add
adc
lods
sahf
dec
int3
mov
sub
aaa
les
in
jns
pop
repz
add
ljmp
ror
push
mov
xchg
sbb
push
shl
mov
fidivs
add
imul
fldl
mov
mov
test
jb
xchg
test
stc
int3
pop
test
dec
xor
repz
mov
aas
fadds
fstp
cmp
pop
mov
repnz
push
or
aas
cmpsb
xchg
mov
sbb
pop
add
sub
pop
enter
testl
push
cmpb
pop
adc
shlb
cmp
mov
xor
mov
add
inc
stos
xchg
xchg
idivb
mov
test
sar
sub
into
push
dec
shlb
mov
push
pop
movsb
inc
sbb
pop
dec
imul
rcrb
push
pop
sub
push
call
sbb
push
pop
mov
cmp
test
in
scas
and
mov
sbb
aad
sub
sub
fisttpll
add
stc
mov
mov
or
popa
add
add
jbe
fdivrl
adc
mov
add
movsb
inc
cltd
sbb
cmp
mov
gs
sbb
mov
cli
xchg
imul
pop
mov
and
mov
loopne
jae
outsb
xchg
add
pusha
jle
fmuls
mov
jmp
jae
jmp
xor
into
inc
repnz
xchg
adc
inc
jge
push
leave
movsl
lahf
mov
pop
shl
addr16
jne
pop
mov
xlat
mov
aam
enter
jo
sub
ds
insl
sub
mov
pop
push
js
outsb
idivl
jnp
jg
jecxz
lcall
inc
psubsw
test
repnz
jecxz
jp
mov
popf
dec
out
pop
pushf
fimuls
sub
cld
divb
sub
pop
sbb
mov
sub
inc
cmpsl
inc
mov
mov
or
xor
push
clc
fs
adc
arpl
cmpsb
rcrl
xchg
stc
xchg
out
lods
mov
mov
aaa
leave
mov
in
sbb
fildl
pop
mov
rol
jmp
mov
xchg
popa
enter
mov
ret
push
lahf
mov
cmp
fbstp
push
jb
es
les
ljmp
cmc
lods
mov
pop
pushf
pop
int
add
sahf
testl
or
push
test
and
adc
xchg
dec
loopne
push
jg
push
inc
lods
push
test
inc
fsts
xchg
mov
xchg
repnz
jnp
loope
sbb
inc
dec
pop
jmp
adc
inc
insb
outsl
stc
cmpsb
xchg
push
mov
test
rolb
insb
cmpsl
push
adc
or
push
mov
lret
xchg
dec
add
mov
imul
push
add
js
or
inc
pop
call
jae
pop
jl
adc
bnd
mov
movsl
pop
fwait
or
subl
pop
mov
jp
test
loope
insl
scas
cli
pop
xor
hlt
gs
pop
mov
lahf
add
or
nop
inc
push
fmul
std
xchg
xchg
xor
xchg
pusha
xchg
jnp
in
lcall
out
and
lret
addl
jns
mov
jecxz
les
fs
jp
dec
lods
cmc
ror
scas
or
jp
pop
mov
cmovne
imul
out
imul
cmp
inc
xchg
jae
iret
rol
sbb
lock
mov
jae
aam
popf
sar
xor
pop
hlt
addr16
jg
pop
pop
dec
jmp
pop
jns
bound
mov
movsl
sub
sbb
movsl
push
add
inc
aad
pusha
and
fdivrs
sarb
sub
add
int3
push
pop
cmp
in
jno
push
jmp
fsubrp
gs
mov
xchg
mov
mov
push
ret
push
xchg
sbb
fisubrl
mov
adc
imul
mov
lds
in
mov
adc
iret
cmp
push
xlat
pmulhuw
out
std
and
jne
aas
insb
repnz
push
loope
fiadds
xor
aaa
nop
dec
popa
xor
mov
out
cmpsb
movsb
pusha
xchg
push
ljmp
ja
push
sbb
fdivl
sub
pop
out
mov
cld
add
add
stos
jo
inc
xor
pop
cmp
movsb
mov
out
lds
inc
jnp
repz
and
dec
push
bound
inc
or
mov
insb
js
es
xor
pushf
pop
in
add
daa
mov
cs
xor
xchg
popa
push
fcmovnu
mov
bound
dec
call
mov
push
mov
xchg
test
enter
dec
add
jbe
xchg
pusha
sahf
sbb
in
fsts
insl
pop
stc
push
sbb
dec
or
jbe
repz
sub
cli
sarb
movsl
sub
mov
in
hlt
scas
movaps
pop
pushf
shlb
aad
fidivrs
imul
scas
imul
fdivp
mov
mov
loope
fwait
mov
outsb
scas
mov
jg
imul
iret
loope
xchg
xchg
adc
add
and
mov
sub
mov
mov
inc
cmp
pop
je
popf
data16
pop
cmp
pushf
outsb
mov
cmp
outsb
jmp
cmc
pop
fsubrs
xor
inc
dec
lock
inc
mov
sub
lahf
iret
xchg
icebp
pop
cmpsb
shll
push
or
or
ret
rcr
cwtl
jbe
lds
out
pop
insl
aaa
pop
insl
ret
sub
leave
nop
lret
xchg
movsl
add
push
pop
pop
andl
mov
icebp
in
jmp
mov
xor
add
jg
ror
mov
jnp
shll
pop
push
mov
mov
es
sbb
jp
fidivs
imul
xchg
leave
test
scas
pop
stc
pop
sbb
adc
and
mov
decl
ds
scas
aam
pop
sub
mov
sbb
andl
sub
movsb
repz
adc
push
pop
imul
pop
and
test
mov
aam
lahf
inc
std
and
jl
outsb
add
mov
inc
pusha
xor
jb
sbb
outsl
sbb
aam
cld
jmp
sub
xchg
xchg
inc
mov
out
jge
daa
inc
divb
dec
xchg
loop
subl
pop
enter
ficoms
es
out
sub
sbb
cli
icebp
xchg
xbegin
gs
gs
inc
loopne
cmp
mov
jno
and
sub
push
jecxz
push
imul
loope
lds
in
xchg
mov
cmc
ficompl
lods
add
ljmp
pop
jae
push
xchg
xchg
imul
sahf
call
lods
jl
mov
aas
mov
mov
ds
lea
mov
xchg
pop
push
stc
xor
ds
adc
or
test
je
hlt
mov
push
cmc
popa
cmpsl
es
cmp
scas
mov
add
arpl
cmp
sub
add
and
cmp
movl
xchg
hlt
test
test
scas
add
pop
and
jl
xor
rcrb
jg
sub
mov
in
dec
insb
pushf
add
and
adc
mov
push
test
popa
sbb
hlt
imul
dec
dec
popa
hlt
dec
frstor
sbb
fiadds
addl
cmp
mov
in
scas
push
sbb
cs
xchg
sub
lock
adc
lock
cmp
loop
push
stos
rol
pop
insb
jne
out
sub
mov
ja
mov
sub
add
test
sahf
jge
pop
adc
push
mov
mov
cmc
dec
test
and
insl
stc
mov
sub
dec
cltd
arpl
and
mov
or
sub
sub
ret
lea
xchg
inc
add
mov
fiaddl
jecxz
pushf
xchg
ds
imul
js
dec
push
popf
mov
add
cld
sub
sahf
cmpsl
pop
mov
nop
leave
imul
cmc
or
xor
push
xor
xchg
sbb
notl
clc
mov
jae
ljmp
lods
mov
insl
popa
cmpsl
movsl
jb
pop
mov
scas
and
adc
push
dec
stc
mov
loope
and
cmp
dec
sub
push
xchg
adc
sub
cli
pushf
sub
push
loop
ljmp
ds
cmp
mov
jl
xchg
inc
mov
dec
dec
pop
lea
push
jmp
rcl
rcll
pop
adcl
add
sbb
add
mov
sbb
mov
insl
dec
cmp
mov
stos
mov
loop
cmp
rcrb
lret
hlt
scas
xchg
out
adc
push
fwait
mov
xchg
pop
ss
jge
andl
mov
mov
das
mov
mov
push
data16
cltd
clc
push
and
and
cmpsb
and
cmpl
and
cmp
dec
and
pop
in
cmpsl
lea
outsb
fsubrp
into
dec
push
daa
rcrb
jp
cmpb
aad
push
sbb
adc
push
sbb
repnz
cld
dec
or
dec
cmp
cltd
add
loope
ds
add
inc
sbb
fmull
sub
and
mov
ret
mov
mov
pushl
inc
xorb
dec
sbb
sahf
aaa
or
iret
jnp
mov
cmp
cmp
dec
mov
sub
cmp
in
cmp
fs
xor
cmp
and
push
xchg
icebp
jne
or
dec
in
stos
test
and
fs
int
gs
lea
es
xchg
push
shrb
loop
sub
les
add
jnp
mov
stos
jbe
pushf
out
icebp
outsb
movsb
mov
jecxz
lea
and
pop
or
add
dec
scas
mov
or
xor
lds
add
push
subl
and
or
xchg
xor
pop
int3
xor
cmp
mov
pushf
add
cmpsl
push
sahf
jbe
inc
mov
lret
lahf
pushf
rclb
sub
fbld
idivb
icebp
jns
adc
sub
or
jo
jp
ja
sbb
sbb
pop
cs
mov
and
mov
cmp
jmp
and
adc
stos
push
dec
sahf
pop
push
cmp
inc
jmp
mov
jbe
ss
and
int
xor
in
mov
test
sbb
xchg
movsb
mov
outsl
in
mov
addb
outsb
cmpb
imul
cmpsb
les
shl
xchg
adc
stos
lea
sub
jmp
popa
cli
push
fldl
sbb
adc
mov
frstor
add
cld
mov
stos
jae
in
push
fsts
movsl
ret
decl
les
xorb
ljmp
inc
js
add
push
inc
stc
or
add
adc
js
push
mov
test
addr16
and
and
dec
or
lods
clc
push
ja
std
scas
pop
int3
push
and
xchg
jbe
dec
imul
inc
adc
ljmpw
outsb
sahf
js
push
into
add
das
pushf
mov
ss
mov
nop
adc
adc
add
cltd
rcrl
lods
xchg
push
lea
push
sbb
inc
leave
lret
cwtl
pop
out
mov
pop
mov
xchg
out
dec
rcll
daa
scas
xor
mov
rclb
cmp
pop
mov
jge
xor
into
add
scas
xor
lods
lea
lods
sub
bound
pop
cld
data16
out
pushf
cmpsl
jge
sbb
ret
addr16
add
ret
jmp
mov
fstpl
push
in
sbb
cmpb
shl
roll
test
fstp
test
cld
xchg
in
xchg
mov
stos
jnp
mov
call
add
push
mov
mov
cmp
mov
data16
adc
fiaddl
mov
mov
mov
push
ljmp
sbb
xlat
out
adc
adc
dec
das
mov
dec
popf
xchg
sbb
xor
or
mov
mov
pop
push
fiadds
movsl
mov
leave
xchg
data16
incl
dec
pop
cmp
popa
scas
cmp
es
xor
idivb
jmp
sbbl
jmp
push
mov
rclb
add
sbb
fistpl
push
or
sbb
insb
push
lods
adc
push
push
bswap
ficompl
jg
mov
inc
pop
sbb
les
adc
data16
pop
testl
lcall
mov
pop
push
cmp
jge
jbe
rol
int
repnz
sub
push
sahf
mov
xor
ret
inc
pusha
jno
sbb
push
lcall
sub
loope
dec
movsl
push
dec
adc
sarl
xchg
mov
sarl
jno
repz
sub
inc
inc
stos
push
shrb
add
adc
jmp
data16
insb
loopne
push
cmc
sub
inc
inc
test
mov
cltd
jle
adc
xor
adc
lahf
js
mov
inc
jo
pop
inc
cltd
mov
test
sub
and
sbb
aas
push
insb
ja
jge
in
test
dec
jns
test
ja
repz
popf
inc
xchg
push
jnp
andb
mov
push
sahf
mov
stc
pop
dec
xchg
insl
sub
call
mov
adc
and
cmp
fcompl
subl
cli
aad
xor
jle
repnz
mov
dec
in
clc
xchg
cld
js
js
loopne
shr
popa
add
and
cmp
push
dec
fsubrs
lds
into
sahf
shll
lret
into
pushf
js
mov
adc
sbb
jmp
jp
pop
fimull
lds
ljmp
cmpsb
jmp
sbb
in
dec
push
pop
icebp
xchg
stos
das
aam
mov
into
jge
aas
pusha
loop,pt
sub
std
sarl
pop
sub
mov
js
out
pop
xchg
les
in
cmp
adc
cmp
push
xchg
out
mov
xchg
xor
adc
jae
ja
sbb
mov
cmp
mov
test
inc
dec
divb
test
sbb
mov
fsubs
pop
lahf
adc
int
xor
out
dec
sub
add
sbb
pop
jg
adc
insl
mov
mov
ja
inc
pop
sti
shlb
addl
hlt
dec
adc
cmp
mov
mov
mov
movsl
aam
stc
mov
mov
scas
icebp
mov
sarl
dec
push
stos
in
pop
stc
dec
pop
mov
movb
sahf
lahf
aam
shrl
xchg
gs
pop
add
rorb
mov
push
pop
sbb
sbb
and
jecxz
mov
fsubrs
mov
shlb
jne
mov
and
sbb
xchg
ljmp
jle
in
movsl
and
add
movsb
aas
inc
fwait
inc
sub
scas
fistpll
scas
fcompl
jnp
lea
xor
lret
inc
sbb
cmp
sbb
lods
addr16
insb
inc
or
jp
adc
pop
insl
and
mov
jge
jecxz
rclb
pop
push
jge
setg
das
adc
mov
out
lods
aas
popf
test
lods
add
outsb
bnd
adc
add
push
mov
insl
cmp
pop
and
mov
fisubs
mov
mov
daa
je
leave
jecxz
dec
mov
testl
cltd
jo
mov
push
cmp
xchg
sub
adc
test
add
ja
push
xchg
cld
lret
stos
data16
push
add
arpl
cltd
xchg
push
cwtl
ret
in
iret
pushf
mov
pop
out
push
push
xor
std
mov
notl
lods
sti
lds
mov
dec
xchg
add
test
push
and
lods
mov
clc
in
leave
test
inc
jmp
cltd
inc
jp
ret
cmp
cmp
insl
pop
jnp
mov
sub
out
mov
clc
dec
lods
cmp
and
rorl
jo
xchg
or
sbb
jge
xor
fs
faddl
subl
pop
sub
and
add
divl
cmp
xlat
roll
sub
or
rcrl
mov
in
nop
test
clc
and
outsl
sub
xchg
je
lret
mov
in
xchg
pop
add
in
fwait
fs
pusha
xorb
sub
push
xlat
aaa
lcall
ja
pop
sbb
call
mov
mov
pop
movsl
imul
clc
push
xor
fdivrl
adc
push
xor
in
movsl
dec
or
test
inc
inc
test
popf
aam
ljmp
add
test
adc
out
aas
pop
or
mov
adc
adc
jmp
xchg
cmp
les
push
iret
mov
jbe
sarb
fcompl
add
pmaxsw
inc
push
pop
sub
sub
loope
nop
cmp
or
jp
mov
sub
push
repnz
movsb
repz
push
xor
or
mov
sub
fdiv
bound
cli
jne
jg
mov
dec
jle
cs
adc
popf
dec
mov
out
insl
mov
add
mov
jp
pop
push
scas
js
daa
lods
xlat
lock
jl
in
xor
jnp
ret
or
and
arpl
cmpsl
push
cmpsb
dec
test
pop
pusha
pop
xor
lahf
insl
lods
mov
mov
jnp
pop
mov
sbb
dec
int
mov
in
out
out
insb
jnp
cmp
test
dec
pop
mov
outsl
cli
out
out
mov
stos
outsb
in
sarl
sbb
jnp
or
out
cmp
shll
shll
lods
shlb
pop
sar
cwtl
fimull
sbb
or
out
cmp
fwait
dec
out
push
arpl
push
push
aaa
test
mov
cltd
in
xchg
and
fmul
push
pop
mov
sub
lods
and
lea
fwait
sbb
gs
cmp
mov
and
xchg
push
fxtract
xorl
mov
or
mov
sbb
jl
xchg
add
pop
push
fdivr
sbb
lahf
jb
loope
int3
add
adcb
jl
iret
mov
aam
faddl
leave
push
and
mov
enter
stos
push
and
pop
or
mov
flds
mov
cltd
jae
shrl
jns
lock
mov
out
mov
and
iret
xor
lods
or
cltd
mov
divb
insb
and
popf
popf
dec
mov
xlat
lret
mov
lahf
imul
mov
stc
xchg
xchg
or
or
ret
cmp
iret
test
push
push
sub
fidivrs
sbb
mov
pop
mulb
test
sti
xor
adc
cwtl
push
daa
or
sub
sbb
scas
push
nop
mov
dec
sbb
lahf
shlb
inc
mov
and
jb
add
sahf
mov
jmp
aaa
push
dec
xor
push
or
pop
aad
pop
ret
dec
faddl
mov
pop
add
inc
ljmp
push
mov
cmp
pop
mov
andb
int3
mov
data16
aad
cmp
jecxz
call
out
push
dec
sbb
sbb
mov
in
mov
mov
leave
add
ds
lea
mov
ret
je
dec
jno
sbb
daa
pop
xor
jp
negb
pop
jnp
bound
daa
mov
mov
cmp
sbb
enter
ss
sarl
testl
cmp
gs
lods
movsb
mov
jae
dec
mov
and
in
lcall
cmpsl
in
hlt
push
xchg
push
fnstsw
dec
repnz
lds
sub
test
jg
cli
std
ljmp
dec
or
rcrl
sub
mov
push
mov
testb
mov
ret
xor
inc
fabs
add
je
xor
dec
aas
movntq
pop
ficoml
ss
pop
cmpb
je
pushf
daa
push
hlt
or
mov
in
fildll
fcoms
test
out
add
or
sbb
sbb
lods
pushf
fsubrl
scas
xchg
lods
aam
and
dec
cmp
xor
outsb
inc
fdivrs
loop
dec
aam
push
or
sub
mov
in
fstps
cltd
lock
mov
pusha
jmp
fimuls
rolb
adc
lods
cmp
in
std
lret
sbb
inc
sbb
fwait
cmp
test
js
scas
sbb
xchg
dec
fsub
aaa
inc
push
and
repz
xor
in
sub
popf
daa
and
pushf
push
add
add
sub
and
cmpsl
sub
loop
call
mov
dec
scas
movsl
mov
push
sti
jns
mov
popf
js
add
mov
xchg
pop
imul
sbb
sbb
add
sub
add
adc
aad
push
loope
sub
xor
push
jl
aaa
arpl
test
mov
repnz
push
mov
adc
dec
sub
test
jge
dec
in
sub
push
les
xor
inc
or
jnp
mov
jl
out
push
sbb
mov
push
nop
inc
enter
sarl
fidivrl
xchg
adc
dec
and
int
cmp
mov
std
adc
push
inc
mov
add
filds
xor
sub
loop
lahf
pop
in
push
sahf
clc
daa
and
pop
add
repnz
inc
fisubrl
dec
push
arpl
decl
jae
mov
lcall
cmpsl
push
push
testb
mov
lret
adc
sub
iret
push
push
mov
jo
pop
bound
and
mov
dec
loope
xor
pop
mov
jp
insb
or
fs
repz
add
pop
jp
sbb
ret
pop
jl
dec
popw
sahf
inc
and
lcall
sub
scas
xorl
les
data16
fisttpl
push
hlt
negb
and
popf
out
dec
cltd
dec
mov
sub
push
imul
sub
or
fcoml
or
ja
mov
cmp
jnp
add
or
movsl
fnsave
ret
mov
in
jge
pushf
scas
jl
jno
xor
data16
or
scas
or
mov
leave
cmp
gs
mov
sar
jg
out
js
dec
ss
dec
inc
dec
fcompl
inc
enter
dec
and
mov
adc
xor
outsl
loope
cmp
mov
push
push
pop
adc
sarl
jns
mov
jmp
enter
loopne
and
xchg
add
lods
dec
pushf
jl
int3
test
sub
fdivrs
cmp
test
pop
fdivr
xor
fbld
pushf
sbb
dec
jl
cwtl
lahf
cwtl
rolb
lahf
fwait
xchg
mov
pop
mov
adcl
ret
cld
test
int3
popa
repz
cmp
roll
pop
pop
xchg
mov
cmpsl
sti
pusha
cld
sbb
adc
and
jmp
inc
clc
fstl
enter
or
mov
xchg
jecxz
xor
cmp
sub
clc
jmp
jecxz
int3
mov
repz
pop
or
fmull
pusha
ss
mov
ret
push
sahf
fidivrs
movsb
pop
sub
and
pop
outsl
popf
and
pop
sbb
sarl
jns
or
dec
jl
cmp
adc
movl
and
call
imul
or
mov
pop
jg
dec
iret
mov
and
in
lods
sbb
pop
es
add
adc
sarb
fwait
adc
nop
or
sahf
cmp
jmp
cmp
sub
push
mov
or
mov
outsb
mov
fidivrl
push
shll
aam
cmp
stos
aad
jnp
push
out
xchg
sub
subb
stos
test
pusha
or
pusha
fnsave
adc
inc
pop
sar
out
push
mov
lods
sbb
inc
iret
xlat
add
sti
cli
jmp
xchg
or
daa
and
in
mov
ljmp
shll
mov
xlat
cmp
push
lcall
sbbb
sub
outsl
shlb
fcmovnu
mov
je
lcall
subl
rorb
out
xor
aam
mov
cmp
push
mov
mov
jne
filds
insb
add
loop
xor
lret
icebp
push
loope
stc
mov
daa
inc
mov
rcl
push
adc
shlb
mov
sub
or
cmp
fdivl
or
jb
out
fcomps
pop
fwait
std
lret
cmp
add
hlt
ljmp
mov
mov
popf
inc
adc
jo
ja
sbb
push
movb
mov
jl
aas
mov
xchg
sti
pusha
and
test
adc
js
popf
xorl
cmpsb
ss
fstl
pop
cltd
fs
fildll
ficoml
daa
pop
cmp
loope
stc
xor
sub
fisubrs
scas
add
sub
adc
addr16
ss
xor
sbb
add
adc
jbe
mov
mov
sub
addr16
popa
scas
pop
cmp
imul
or
jnp
adc
mov
lret
xlat
push
pop
jnp
add
cs
mov
in
outsb
and
dec
or
xchg
push
notl
xchg
pop
scas
mov
push
mov
mov
js
rcrl
pop
insb
mov
push
hlt
adc
sbb
cwtl
movsb
movsl
shr
fs
jo
test
shlb
lock
loop
xor
push
jle
xchg
push
iret
cmpsb
mov
shrl
test
pusha
ja
push
pop
ds
jg
sub
pop
sbb
or
mov
xor
jnp
sub
mov
stc
xchg
add
jp
sub
das
imul
xchg
sbb
shrd
movsl
or
gs
mov
pop
shl
push
dec
mov
cmp
in
pop
loopne
leave
daa
je
sub
shl
push
fdiv
aam
and
ficoml
xchg
lods
mov
mov
call
gs
adc
loope
daa
add
das
idivb
adcl
push
push
shrb
testb
lods
xchg
cld
and
mov
cwtl
repnz
in
add
jle
push
out
test
inc
push
xor
or
pop
mov
mov
pop
cltd
repnz
movsb
pop
mov
or
out
leave
sub
adcb
ja
push
sub
enter
lcall
xchg
mov
enter
stc
bound
sub
mov
fldt
adc
xchg
movsb
lds
mov
in
mov
push
push
mov
cmpsl
xchg
mov
add
sbb
mov
cmc
dec
mov
mov
out
loop
sbb
xchg
mov
xchg
aas
sub
sbb
jne
cmp
lds
sarl
idiv
repnz
jle
xorl
ljmp
and
xor
inc
loope
push
sbb
lock
loop
ret
cli
in
clc
movsb
ficompl
push
xor
std
movb
addb
fldln2
test
jbe
shll
or
or
mov
sbb
push
inc
ret
and
xchg
jp
imul
sub
out
imul
sbb
add
hlt
cltd
sub
decl
mov
cmp
jnp
test
clc
jge
and
fs
icebp
movsl
shrl
gs
ret
add
mov
aaa
stc
hlt
fldenv
cmp
iret
shr
lret
jle
push
stos
inc
in
jle
call
or
or
outsl
and
push
xchg
fldenv
push
pushf
stos
xor
mov
rclb
cwtl
xchg
test
adc
cmp
mov
mov
andb
or
inc
cmp
out
xor
pop
mov
jae
hlt
pop
xor
stc
or
xchg
push
add
out
in
rolb
ret
lea
jge
pop
pop
mov
or
or
sub
sbb
push
jbe
andl
push
pushf
pop
adc
stos
xlat
mul
es
pop
out
push
inc
dec
xchg
lcall
leave
jg
dec
inc
xlat
cld
cmp
lcall
inc
enter
in
lret
mov
hlt
or
ficoml
pop
clc
cs
jnp
out
jns
jns
push
test
pop
mov
loope
test
in
out
stos
pop
repnz
pop
xchg
push
scas
xchg
scas
xchg
hlt
je
pop
mov
cmp
or
cmpsb
jo
fistpll
and
and
test
jecxz
mov
scas
sbb
por
rcll
mov
sbb
addr16
push
pusha
into
les
cmp
jae
testl
mov
sbb
pop
insl
pop
sbb
xor
clc
int3
adc
mov
mov
rclb
push
das
test
aam
mov
jae
add
inc
push
shrb
xchg
lds
fadds
mov
add
rcll
xor
sub
flds
jnp
xchg
add
fsubrs
js
sub
mov
sub
dec
loopne
add
cs
dec
hlt
imull
push
or
ret
add
aad
sub
ror
hlt
mov
adc
mov
adc
cltd
lea
pop
sbb
scas
sbbb
xor
push
popf
lods
push
in
xchg
and
mov
cmp
repnz
test
insb
jo
mov
out
adc
js
sbb
out
lahf
outsb
jo
rorl
repnz
add
inc
int
mov
xchg
stos
and
push
fs
xor
pop
lahf
and
xchg
fwait
mov
aaa
mov
and
lock
das
xchg
add
lahf
jl
das
adc
lds
ss
push
in
mov
xchg
js
pop
xchg
iret
nop
mov
jle
push
mov
int
dec
dec
jecxz
adc
sbb
dec
jno
cmpsl
popa
lock
rcrl
xchg
sarb
and
push
add
dec
leave
push
movsb
and
jno
mov
jmp
insl
pop
or
push
roll
adc
mov
pop
fstpt
call
adc
xchg
and
mov
add
cwtl
jae
mov
addr16
mov
rolb
js
push
lcall
pop
xor
inc
push
inc
pushf
pop
push
push
sti
jae
xchg
pop
testl
jo
cmp
xchg
xchg
lahf
jne
incb
sbb
push
addb
mov
sub
and
sbb
mov
adc
inc
sub
outsb
in
hlt
bound
cwtl
or
je
sahf
jne
ret
in
push
bound
int
dec
aam
lods
sbb
xchg
scas
push
add
std
gs
pop
jl
and
gs
and
inc
fldl
cmc
std
mov
clc
jb
mov
xchg
popa
out
push
push
jo
push
in
fcomps
lcall
lahf
orl
repz
out
in
cwtl
sub
jb
jmp
jnp
test
push
jg
out
dec
in
pop
test
and
and
pop
sbb
ret
arpl
test
xor
in
xor
std
cmp
dec
and
fldt
push
lret
mov
mov
sub
mulb
mov
subb
hlt
int3
cld
repz
aaa
fdivr
jecxz
cmp
add
xor
xchg
push
stos
add
fsqrt
in
and
loop
and
push
je
jmp
mov
sbb
gs
jbe
pop
stos
cltd
inc
sub
clc
mov
inc
stos
mov
jb
cmp
ss
rol
mov
inc
dec
xchg
mov
or
jno
gs
les
sbb
mov
dec
lret
stos
in
pop
or
push
jo
jecxz
movsb
adcb
xchg
dec
fmull
cs
inc
mov
cmp
sbb
jno
lahf
xchg
lds
insl
mov
push
dec
test
mov
mov
sbb
mov
les
test
hlt
jno
dec
cmp
lods
jno
and
jb
shrb
sub
cmpsl
dec
mov
stos
loop
das
cmc
mov
jge
stc
pop
xchg
xlat
outsb
cmp
sub
addr16
jp
inc
data16
jl
jb
mov
out
popl
cmpsl
jo
in
jg
push
shlb
dec
mov
pop
enter
cmp
jne
dec
inc
and
fists
mov
inc
pop
lret
and
aad
push
mov
xchg
mov
or
sub
lret
dec
cmp
jb
add
jg
or
ror
push
setge
xor
mov
negb
or
test
insb
into
lcall
rcrb
jge
icebp
into
cmp
sti
jl
stc
xor
lock
movsl
lock
mov
dec
movsb
movsl
stc
sbb
dec
dec
dec
je
xor
add
int3
push
aam
mov
pop
jbe
bound
sub
or
aam
or
jmp
in
cmpsl
push
mov
test
jns
in
pusha
fdivl
leave
jg
mov
lea
stc
xchg
data16
int
lds
sbb
insl
movsb
int
daa
mov
gs
int
mov
xchg
cmp
scas
push
cwtl
mov
mov
sub
inc
mov
mov
sub
push
jg
jnp
sbb
dec
sub
inc
jno
push
pop
or
jle
xchg
mov
dec
enter
lods
lret
fistps
test
addr16
aad
sar
mov
sbb
int
xor
adc
loopne
pop
stc
lds
xchg
sbb
add
mov
cs
pusha
cmp
jae
jno
mov
sub
std
loopne,pt
lret
sbb
cltd
cmp
jb
daa
xchg
dec
mov
pop
mov
pop
or
sbb
repnz
sbb
xchg
ja
push
clc
int3
out
push
dec
lea
out
adc
loope
insl
lret
rclb
pop
dec
mov
pusha
test
mov
jmp
cmovs
fnstsw
jp
xor
mov
cmc
bnd
in
sbb
or
fisubl
test
leave
xchg
insb
and
mov
insl
std
das
outsb
lods
push
test
rorl
sub
xlat
shll
pusha
mull
fsubs
inc
in
arpl
imul
xchg
lds
jb
add
fcoml
fldenv
enter
ljmp
inc
lret
movsb
mov
enter
mov
mov
adc
insl
jg
push
jecxz
adc
decl
cs
inc
pop
pop
clc
push
cmp
push
mov
aad
in
fcomi
dec
sub
push
add
inc
iret
mov
jp,pn
fnstcw
pop
jae
mov
push
mov
or
aam
test
iret
add
dec
sbb
jbe
cmp
and
mov
xchg
test
inc
cmp
out
push
mov
add
fildll
add
fildl
dec
sbb
dec
addr16
js
ret
xor
mov
testl
pusha
push
mov
rolb
sbb
mov
out
cld
fistpl
imull
xchg
xlat
sbb
mov
mov
xor
pushl
xor
jmp
insl
jle
mov
dec
jae
push
sub
pop
mov
pop
aaa
and
or
push
push
xor
out
mov
xchg
sbb
divl
pop
rorb
mov
inc
je
fninit
push
insb
push
jle
out
incl
jno
ljmp
aad
and
jl
dec
sbb
shlb
inc
cwtl
cmp
mov
test
and
popl
mov
fld
push
hlt
xchg
mov
imul
test
xor
insb
les
insl
lret
stc
aad
test
mov
test
nop
push
sub
mov
xchg
outsb
test
mov
divl
push
sub
mov
mov
xchg
and
movsb
popa
je
sbb
into
push
aad
insb
dec
dec
sbb
inc
incl
inc
test
ja
inc
pop
mov
shrl
sahf
decb
in
push
xor
dec
sub
fiadds
xchg
sub
insl
es
add
mov
xchg
iret
loop
adc
xchg
adc
gs
mov
loope
dec
push
loope
gs
aaa
orl
movsb
subl
outsl
loopne
enter
arpl
push
mov
in
shufps
dec
xchg
push
or
push
repz
push
movb
aas
push
and
addr16
or
xchg
xchg
push
dec
mov
insb
mov
push
lds
mov
sbb
sub
sub
icebp
movsl
xor
push
stos
sahf
sbb
sbb
int
xchg
cs
pop
mov
pop
mov
lret
fisubl
mov
cmpl
jns
dec
mov
daa
push
test
mov
xchg
jnp
std
mov
mov
jno
subl
ja
xchg
dec
jge
movsl
test
xor
mov
movsl
inc
jmp
addl
jp
shrb
imul
bound
aad
cmp
outsl
stos
loop
fisubs
pushf
and
insb
xchg
and
add
jg
push
mov
dec
pop
cmp
insb
push
sub
pushf
fwait
pop
mov
pop
hlt
inc
pop
inc
test
mov
sbb
dec
and
lret
fildl
pop
cmp
xor
test
inc
fisubl
push
mov
inc
sub
popf
imul
call
dec
mov
push
jns
xor
cwtl
stos
add
ljmp
inc
mov
dec
pop
adc
cmp
push
scas
pop
fs
sbb
popf
sub
test
test
adc
sbb
jb
jl
xor
xchg
and
lds
cmp
mov
sahf
xor
jecxz
push
mov
imul
bound
jae
arpl
cs
dec
enter
and
out
ja
clc
or
sub
adc
in
lock
and
adc
or
mov
pop
lock
fcmovnbe
aaa
fcos
add
sub
stos
and
adc
cs
das
push
loop
pop
sbb
mov
test
xchg
xchg
out
or
mov
popa
cmc
sahf
xor
sbb
shll
sbb
mov
dec
mov
fdivrp
and
add
cli
test
push
stc
faddp
jbe
dec
enter
sbb
add
rcr
mov
sti
or
test
sbb
xchg
push
out
pop
push
mov
lea
enter
cwtl
fsubs
mov
movsb
add
cmp
fimull
pop
pop
inc
and
aam
ja
sahf
and
mov
sub
dec
movsl
push
aam
push
iret
fs
je
xchg
xchg
out
jg
inc
mov
sub
adc
in
in
gs
ret
xchg
add
mov
out
lea
daa
pop
inc
dec
test
shl
mov
aas
xchg
xor
out
sub
xchg
dec
xchg
lcall
call
mov
xchg
sub
loope
out
push
or
cmpb
mov
sub
gs
jne,pn
mov
cs
sbb
in
xchg
jno
jbe
pop
fisttps
mov
testb
ja
icebp
movsl
iret
std
pop
outsb
lret
push
pop
jbe
mov
xor
cld
lods
aas
xlat
mov
xlat
call
sbb
cmpsb
lea
xchg
mov
loopne
ds
adc
xchg
fmulp
xlat
pop
push
or
call
and
xchg
outsb
xor
xorb
notb
minps
ss
scas
dec
xor
sti
mov
adc
ret
lcall
fwait
or
push
or
daa
add
jns
shlb
jecxz
icebp
mov
dec
roll
fstps
in
adc
lcall
push
imul
fcomip
sub
arpl
aad
das
loop
cli
cmc
popf
cmp
rcrb
ss
aas
push
es
cmp
ds
cli
out
std
inc
pushf
loope
icebp
cmp
lea
pop
sub
pop
shrb
jbe
dec
jle
xor
call
dec
ret
pop
dec
dec
rorl
xchg
into
mov
orb
pusha
pop
push
ret
inc
cmp
jne
mov
mov
add
loopne
or
imul
cmp
push
mov
outsb
xchg
adc
pusha
icebp
gs
scas
sbb
xor
std
ja
push
fimull
inc
in
inc
out
cs
cmc
push
aas
xchg
add
mov
nop
rorl
jmp
lods
aas
lcall
push
jns
fistpll
ss
bound
lock
mov
outsl
push
sbb
out
fdivs
popf
in
pop
xchg
add
inc
cmpsb
fisubrl
daa
xor
lods
notb
test
imul
jne
imul
addb
aam
popf
cli
or
cmp
fnstcw
int
sub
negl
es
cmp
or
into
lret
xor
cmpsl
or
adc
add
mov
outsb
mov
test
mov
leave
xor
mov
mov
pop
adc
dec
test
leave
imul
into
push
int
ljmp
mov
cmpsl
cmpsb
push
out
addr16
ret
out
into
mov
adc
out
fwait
sbb
add
push
imul
cmp
push
repnz
sti
mov
and
stc
cli
sbb
or
je
push
or
cs
arpl
adc
fdiv
dec
xchg
mov
lcall
dec
pop
sti
xchg
clc
xchg
jmp
std
sbb
and
shll
mov
rcrl
loope
sub
arpl
test
jo
andl
daa
mov
xor
into
int3
out
cmpl
mov
sbb
fwait
xor
test
icebp
je
push
dec
lods
or
mov
mov
movsl
push
call
sbb
push
push
rorb
xlat
or
jns
pusha
adcl
ljmp
imul
xchg
jl
fdivs
inc
icebp
sarb
and
sub
rcr
pop
add
push
cld
sti
inc
fdiv
mov
stc
sbb
push
bound
cmp
push
push
push
jge
mov
mov
mov
inc
dec
push
ret
ret
repnz
outsl
mov
out
and
or
push
lods
adcb
xor
xchg
ss
xor
cwtl
cmpsb
cmp
xor
mov
xor
inc
jbe
and
lret
pop
pop
cmp
pop
int3
dec
inc
mov
dec
repz
sub
jg
stos
fwait
pop
xchg
add
cmpsb
or
fsubrp
les
mov
xchg
fwait
sbb
ss
ljmp
pop
jmp
lods
xlat
or
xor
scas
pop
bound
lahf
aad
popf
ljmp
mov
fisttpl
jne
lret
adc
pop
arpl
dec
mov
xchg
mov
push
push
repnz
stos
in
dec
rorb
das
inc
and
daa
and
hlt
cmp
loope
incl
iret
xchg
jbe
inc
clc
sbb
fdivp
add
jg
sbb
cmpl
ja
cmpsb
and
jecxz
cs
aaa
jbe
in
scas
sub
dec
mov
loopne
ret
and
push
sbb
lcall
call
mov
sub
add
test
jl
mov
shrb
stos
in
or
mov
mov
mov
jbe
push
mov
fdivs
dec
into
sahf
jnp,pn
pop
and
rolb
push
sub
scas
or
or
xor
add
cld
stos
and
adc
out
push
arpl
push
stc
lock
out
loop
add
es
jae
push
fldenv
mov
push
addr16
pop
das
jecxz
mov
xor
leave
mov
loop
adc
sub
roll
ljmp
push
mov
adc
mov
jae
fstp
loope
xchg
pop
in
fisubrs
cmp
aas
xor
mov
cmpsb
cld
out
and
push
or
cltd
mov
jp
ret
aas
fistl
cwtl
push
sbb
pushf
mov
xchg
mov
fldcw
movsb
push
cmpsb
mov
sbb
cltd
mov
fcoms
fwait
test
stos
neg
mov
data16
adc
and
insb
push
dec
sti
xchg
xchg
xchg
mov
jl
adc
cmp
jge
or
ja
push
repz
not
dec
xchg
je
xor
inc
lahf
rcr
cvtdq2ps
fs
add
sbb
stos
jo
pop
iret
adc
pop
push
push
cwtl
lods
xchg
fxch
mov
mov
inc
pop
lds
rcl
aam
push
icebp
ret
add
mov
bound
int3
ud2
ljmp
and
jp
adc
and
rorl
icebp
stos
pop
out
dec
pop
imul
mov
add
inc
std
mov
push
mov
sbb
adc
add
xor
or
sbb
rorb
loope
cmpsb
add
roll
dec
sbb
sub
pop
sub
je
ret
hlt
rsm
movsb
push
in
add
jl
xlat
cmp
mov
outsb
pop
movsl
mov
xchg
aad
test
lret
xchg
pop
mov
mov
mov
mov
sahf
loop
mov
ja
mov
inc
pop
inc
pop
jne
xchg
lahf
mov
mov
mov
sub
dec
and
dec
popa
mov
xchg
dec
inc
icebp
adc
mov
dec
std
jno
insb
cmp
fcompl
pop
sbb
jl
imul
jmp
scas
mov
movsb
sub
sbb
pop
mov
add
mov
xor
out
or
sub
inc
jmp
sub
and
pop
dec
cmp
cmp
outsb
push
repz
imul
jo
in
xchg
out
out
jnp
and
fnstenv
xor
mov
lret
dec
pusha
xor
xlat
or
outsb
mov
shrl
lock
mov
aad
in
mov
scas
xchg
outsb
mov
lds
popf
mov
jmp
or
fcomp
cmp
outsb
adc
fwait
xchg
lea
adc
mov
sti
mov
mov
das
jle
xchg
mov
pop
mov
push
jp
mov
or
sbb
aas
adc
aam
ret
inc
idiv
and
rolb
xchg
jp
bound
fmull
jo
jnp
les
add
gs
mull
mov
hlt
mov
int
add
pop
out
cli
subb
js
test
rclb
loope
jns
or
or
imul
aad
mov
pusha
xchg
jmp
xchg
sbb
and
mov
xchg
loop
ret
adc
in
pop
cmp
enter
rcrb
inc
stc
xchg
ret
insb
or
setl
xchg
and
mov
xor
cltd
inc
push
sbb
cli
or
js
inc
cmpsb
test
in
loopne
out
push
das
outsb
jae
sbb
rcrb
mov
sbb
ljmp
push
test
mov
xchg
inc
movsb
imul
addr16
and
or
pop
mov
into
xor
mov
jmp
push
rorb
push
shll
jbe
mov
pop
scas
lret
lret
xor
ds
jbe
push
mov
dec
or
push
jnp
out
test
push
inc
xor
bound
faddp
push
or
pop
rorl
push
test
adc
xchg
stc
aad
in
jl
fnstenv
push
mov
sbb
roll
sbb
inc
aam
mov
and
push
les
xor
repz
enter
cmpsb
mov
sbb
popf
mov
aas
ret
leave
dec
out
xor
cmp
or
adc
je
jmp
loop
in
and
jmp
stc
fstl
insl
mov
xor
ret
push
cmp
aaa
dec
lret
mov
dec
dec
push
ret
loope
sub
jns
sbbb
push
rcr
test
pop
mov
add
mov
ret
popa
pop
inc
mov
mov
clc
scas
xor
cmp
push
dec
inc
rorb
das
sahf
leave
movsl
mov
dec
adc
aas
push
aas
imul
rcr
test
sub
loope
pop
testl
out
pop
push
fsubrl
in
test
dec
or
dec
sub
mov
das
sub
out
ds
jno
xchg
jmp
fldenv
inc
mov
push
daa
sarl
sahf
mov
pop
sbb
lcall
and
mov
jmp
add
fldcw
or
sbb
ret
outsl
cld
xorb
test
int
pop
pop
dec
in
mov
pop
sbb
xchg
test
arpl
add
les
mov
mov
sub
loope
xchg
gs
imul
lret
jmp
test
sbb
sub
notl
mov
cwtl
sbbb
adc
cwtl
insb
sbb
sbb
jl
cs
xor
sti
lea
sbb
dec
jmp
loope
out
je
or
jmp
push
xor
stc
xor
test
and
stos
sbb
jp
scas
scas
cmp
pop
sub
nop
pop
and
pop
mov
sbb
loopne
fldcw
hlt
fisubs
jnp
scas
and
mov
lock
sub
mov
sbb
outsl
push
out
xor
int3
sbb
fs
dec
sub
pop
and
jns
repnz
rclb
orb
pop
adc
dec
and
test
jge
clc
sti
xchg
enter
xchg
jg
dec
or
rorl
and
add
cmp
dec
mov
xlat
pushf
inc
dec
sbb
imul
in
pusha
in
insb
out
jecxz
cli
cmpb
scas
cltd
mov
jns
push
add
fdivl
out
pop
mov
mov
dec
adc
inc
std
fsubrp
shlb
insb
pop
mov
mov
test
jp
loope
fcomi
mov
cmpsl
je
cmp
arpl
dec
repz
jb
and
lahf
gs
hlt
lret
out
sti
les
adc
or
cmc
mov
adc
lret
lea
mov
sbb
js
pop
pop
mov
push
sub
fldl
cmpb
fld
xchg
cmp
cmp
xchg
popf
and
mov
or
jbe
lret
inc
jge
fidivl
loope
enter
movsl
sub
cli
mov
fiaddl
pop
mov
inc
xorb
test
popf
ss
jge
inc
push
insb
rorl
lea
mov
es
inc
ret
mov
out
in
out
pusha
sarb
outsb
lahf
je
jo
and
and
sub
mov
jno
hlt
sub
pop
lods
fcompl
imul
repnz
mov
dec
das
jbe
lahf
jae
mov
adcb
push
aaa
mov
ret
clc
push
ds
lret
test
enter
mov
push
icebp
pop
mov
push
out
lahf
mov
cmp
xor
dec
popl
lret
push
jl
adc
sbb
push
sub
jmp
and
cmp
aaa
sub
out
in
and
stc
jns
add
jno
jp
hlt
sahf
repz
out
fdivl
push
xchg
push
shl
aad
cld
lock
pop
fadds
flds
pop
insb
loope
and
pop
in
int
bound
jl
adc
xlat
ds
scas
jns
and
push
xor
jb
ljmp
lds
xor
std
faddl
out
je
jge
aam
rol
jge
lret
aas
xor
in
dec
jno
loopne
lock
mov
cs
inc
jge
daa
dec
in
lcall
lea
sbb
lods
in
xchg
xlat
pop
stos
ds
loop
xlat
gs
popa
jl
sbb
push
jbe
sub
ret
repz
ja
lea
lcall
xchg
jg
xor
mov
jae
rcrl
xlat
in
push
sub
int3
in
jmp
add
dec
push
xchg
xchg
xor
mov
lods
xor
out
push
push
mov
and
cmp
out
jne
shrl
pushf
mov
push
fwait
in
leave
sahf
cmc
mov
cmpsl
adc
xor
mov
loopne
pop
or
rcrl
mov
ljmp
lcall
adc
jo
and
dec
ret
push
and
sbb
iret
mov
mov
push
sub
shll
xchg
sub
inc
add
fadd
jp
fadd
pop
dec
nop
or
aam
sub
fdiv
fcomi
sbb
cmp
sub
stos
mov
addr16
and
push
addr16
dec
push
xlat
mov
in
out
lds
out
xchg
loop
shl
sub
rcl
jno
or
dec
sbb
gs
fadds
mov
pop
push
div
add
dec
daa
cmpb
jg
push
push
mov
mov
fcmovb
or
data16
std
stos
in
mov
push
jb
xchg
shlb
xor
imul
cmp
xchg
mov
sbbb
push
mov
jno
pusha
jle
add
cmpsb
lods
out
repz
insl
aad
adc
je
into
test
jo
sbb
pop
inc
sti
mov
shl
cmp
xorb
lret
pop
or
add
test
sbb
imul
jo
xchg
pop
fisubs
jl
cwtl
or
jae
pop
lods
repnz
mov
sub
lret
push
adc
divb
test
xchg
ficoml
ds
xor
ljmp
movsb
imul
sub
pcmpeqd
mov
adc
in
lret
xchg
aas
out
pop
pop
stos
imul
sti
inc
adc
and
mov
jmp
cs
jp
adc
xlat
jp
sarb
outsl
cmc
lea
jbe
sub
push
push
test
and
pop
cmp
lock
mov
ret
mov
xor
out
push
dec
push
inc
pop
cmp
clc
fwait
or
hlt
xor
dec
out
cmpsl
ret
and
xor
cmp
idivb
pop
jmp
xor
outsl
or
mov
push
cmpsb
adc
mov
fstl
ljmp
and
push
test
sub
xchg
mov
addr16
bound
inc
scas
sub
pop
jle
lods
out
push
mov
jae
or
jge
xchg
aas
loop
pop
lea
lods
mov
sti
in
pusha
cltd
sub
inc
rcll
out
loope
pop
fiadds
add
call
sbb
jmp
imul
sub
insb
sub
insb
push
out
pop
mov
push
or
mov
mov
in
or
in
ret
stc
fisubl
sti
xchg
and
add
or
mov
adc
inc
sahf
xor
popl
setnp
jns
jnp
or
stos
mov
pop
pop
sbb
test
idivl
push
sti
xorl
xchg
rcr
mov
push
xor
push
pushf
mov
sarl
mov
mov
pxor
xchg
sub
sub
fcmovbe
mov
mov
cmp
inc
nop
mov
xchg
stos
rolb
xor
xchg
test
jl
pop
xchg
int
lret
xchg
dec
test
pusha
in
push
ja
imul
sbb
call
dec
pop
das
dec
lods
int
enter
rol
dec
fistpll
mov
mov
jge
inc
jl
jmp
adc
push
cmc
into
sbb
pop
daa
inc
sti
mov
insb
sbb
cmpb
sbb
push
xchg
test
inc
fcoml
sub
stos
iret
pop
dec
adc
jmp
add
sub
jl
add
nop
inc
sahf
mov
inc
mov
jmp
mov
jl
inc
mov
jno
fs
test
dec
mov
mov
aas
jmp
cmp
je
test
add
je
shlb
xor
call
dec
shl
sub
test
jae
imull
dec
rcr
push
loopne
or
cwtl
sub
lahf
push
data16
fsub
fstpt
pop
ret
sbb
mov
pop
jbe
xor
imul
sbb
cli
pop
cs
mov
mov
xchg
pop
pusha
ja
push
int3
in
addr16
in
jns
or
popa
jmp
adc
loopne
test
dec
lret
fidivrl
fwait
sahf
pop
mov
les
mov
popa
cmc
dec
mov
movsl
inc
movd
hlt
js
pop
add
into
int
mov
add
cs
insb
clc
fs
xchg
leave
add
push
lahf
nop
ss
mov
sahf
cld
pushf
into
cltd
pusha
xchg
andb
sahf
pop
xor
mov
andb
and
ds
mov
xchg
mov
std
jnp
mov
xor
pushf
or
xchg
daa
shlb
fwait
imul
jecxz
daa
divb
jbe
cwtl
out
dec
inc
movsl
lock
insl
mov
or
sub
inc
sub
hlt
adc
or
and
xor
andl
out
shll
bound
ds
jnp
divl
inc
hlt
add
jle
addb
add
pushf
rclb
das
repnz
inc
test
arpl
inc
xchg
push
out
arpl
dec
sub
idivb
mov
lcall
add
adc
push
aas
addr16
mov
pop
jecxz
jp
std
inc
imul
rclb
aas
xor
in
mov
sbb
xchg
cli
scas
cmp
std
movsb
cmc
mov
cld
add
or
push
sbb
fwait
xchg
nop
add
loop
mov
sbb
jle
inc
jne
hlt
mov
sbbb
mov
fwait
xor
sub
fwait
inc
push
pop
inc
mov
and
dec
mov
scas
sbb
mov
daa
mov
jg
jge
lcall
mov
popa
xor
mov
mov
mov
mov
out
push
decl
pop
xor
cmp
push
jns
mov
addr16
and
and
adc
data16
push
dec
fdivrl
push
cmpsb
aas
pop
mov
test
fcompl
in
cmp
push
das
jnp
cmpsb
inc
jbe
mov
sbb
lcall
sub
mov
les
xor
push
mov
fadds
jno
or
popf
pop
aad
pop
movsb
fistpl
pop
push
sub
scas
cmp
enter
push
dec
neg
pop
jns
mov
mov
roll
adc
inc
and
cmp
cs
inc
dec
add
call
popa
pop
fisubl
js
mov
scas
mov
in
push
jp
fdivs
and
dec
sarb
pop
mov
js
dec
ss
lret
xor
jns
inc
cmpsl
int
cmp
addr16
mov
pop
fdivl
daa
sti
jno
dec
push
mov
aaa
push
int3
jns
xchg
sbb
jns
bound
in
cmp
shl
cltd
nop
out
test
std
popa
fimuls
lods
inc
cmc
subl
push
or
das
mov
ljmp
aas
push
loopne
daa
in
shlb
aas
lea
push
cmp
or
mov
lds
sbb
add
push
mov
outsb
xchg
push
and
xor
jae
cmc
lock
ljmp
mov
test
mov
jg
or
testl
mov
and
movsl
adc
into
adcl
ljmp
mov
lret
ds
enter
fistpll
sarb
jo
fstl
inc
scas
jg
call
push
es
mov
inc
inc
imulb
and
push
mov
push
ja
ljmp
cmc
test
xor
out
xor
xor
lods
imul
sub
repnz
pop
jecxz
loopne
mov
dec
dec
xchg
or
lock
jns
test
in
xchg
outsb
test
dec
push
cmp
dec
daa
into
inc
add
retw
scas
xor
adc
pusha
lods
push
mov
enter
inc
lret
aas
xor
xchg
push
aaa
mov
in
incb
cli
loope
xor
cs
out
test
mov
add
and
icebp
push
cmpsl
cmp
insl
and
cmp
pop
or
cmpsb
add
loope
push
xchg
test
rcrb
sub
cmc
test
sti
cmp
sti
dec
jb
dec
leave
mov
mov
cld
sub
jg
and
sub
mov
ds
jnp
cmp
jnp
out
repz
and
cld
int3
push
mov
cmpsb
rcl
test
pop
movsl
lahf
sbb
lea
xchg
shll
loop
imul
push
add
popf
xor
jecxz
clc
mov
pop
or
scas
dec
adc
or
bound
in
cld
sar
in
add
mov
es
sti
pop
stos
sahf
and
jle,pn
inc
or
add
fisttpl
mov
jbe
enter
and
xor
leave
dec
popa
mov
mov
jbe
jnp
xchg
lock
outsl
xchg
popa
inc
sbb
dec
and
jl
cld
jno
insb
mov
sub
cmc
jecxz
popa
cwtl
das
lock
into
or
aas
mov
movsl
pop
add
or
icebp
xchg
jp
fdiv
fsubr
push
insb
sbb
stos
and
mov
xchg
push
comiss
mov
push
push
leave
aas
ds
movb
addr16
mov
stos
or
adc
cmp
inc
xchg
fwait
sbb
mov
les
add
and
fwait
pop
add
mov
popa
or
aad
xchg
lret
push
dec
aad
jecxz
xchg
leave
iret
lcall
mov
lahf
insl
cmp
push
out
pushf
cmp
mul
xchg
mov
dec
imul
inc
xchg
sahf
out
sub
arpl
cltd
iret
inc
lcall
testl
addr16
xor
call
icebp
jmp
xchg
cmp
dec
das
jno
je
push
push
mov
nop
gs
es
dec
adc
addr16
test
jmp
in
pop
aas
xchg
push
cmp
sub
lret
idivb
subl
divb
pop
cmp
mov
sbb
test
push
add
add
aam
testb
rolb
ja
cltd
cmpsb
bound
jp
inc
test
pop
pop
and
push
movsb
movl
insb
sub
mov
push
lods
popa
xchg
lods
push
lret
sti
mov
mov
mov
out
mov
push
lds
sub
push
mov
rorl
lret
pop
repz
outsl
fcoml
iret
test
and
jae
mov
cld
sbb
and
mov
push
fmulp
xchg
mov
and
xchg
sbb
inc
mov
inc
xor
jp
mov
mov
shr
in
insl
shlb
fisubrs
lods
and
dec
sub
dec
ret
idivl
aam
sub
pop
adc
add
xchg
push
mov
push
jle
push
adc
cltd
push
mov
sub
add
loope
push
sbb
lods
sub
cmp
inc
xchg
add
cmp
add
push
fsubl
fldz
or
lods
data16
jno
fsubr
xor
xchg
mov
mov
subb
cli
mov
lea
pop
push
out
sub
fbstp
popa
int3
imul
jae
push
mov
incl
faddl
push
aad
fmull
movsl
in
mov
xchg
popa
inc
loop
lret
test
cld
xor
inc
outsl
dec
inc
lock
rolb
mov
in
cmp
jne
xor
imul
jmp
les
and
in
nop
push
lods
fbstp
pusha
cmpsl
mov
or
insb
push
inc
cwtl
ror
mov
mov
nop
mov
movsl
sbb
lahf
push
jne
sub
and
sub
mov
mov
xor
movsl
sub
dec
pusha
jno
xor
sbb
pusha
lods
push
lret
into
mov
sbbb
sti
lret
jbe
xchg
js
dec
fwait
jge
test
notb
sbb
dec
xchg
aaa
push
and
jle
pop
adc
movsl
fs
popa
push
mov
inc
js
dec
outsl
sub
sbbb
inc
jno
aas
cmp
add
ja
xor
push
outsl
ret
mov
pop
push
push
pop
daa
mov
dec
jmp
mov
movsl
inc
mov
dec
arpl
aam
cmp
and
xor
pop
or
out
or
ficoms
sbb
lock
paddsb
jae
into
andl
lahf
push
sub
psrlq
or
gs
scas
xchg
nop
jbe
push
mov
mov
cs
or
je
mov
inc
stos
das
cltd
push
adc
repz
lret
adc
int
les
cmpsl
enter
pop
ja
push
dec
aad
lcall
push
popa
sbb
jmp
lock
pop
call
enter
sub
cmp
inc
push
add
sbb
pop
dec
call
clc
aad
mov
mov
push
push
mov
add
rolb
jbe
push
add
shr
or
jecxz
jns
mov
stos
xchg
in
lretw
sbb
and
or
push
and
stos
fists
ss
mov
inc
pop
into
lods
mul
mov
and
in
xor
fsubrp
adc
popa
mov
jl
orb
imul
dec
psadbw
movsb
adc
fisubs
repnz
ja
iret
add
lret
addr16
in
add
mov
orl
mov
xchg
xor
data16
out
pop
std
in
es
scas
loopne
ja
mov
ja
add
mov
add
or
in
jmp
inc
add
cmc
sbbb
rcrb
lret
in
movsl
je
mov
jne
adc
neg
dec
jg
test
pop
inc
sbb
aam
sahf
cmp
mulb
or
push
or
in
ret
add
shrl
nop
aaa
cltd
js
jno
bt
mov
or
movb
ret
pusha
sub
jecxz
adc
jbe
sbb
xor
push
test
iret
mov
dec
scas
and
add
mov
mov
loop
mov
and
mov
addr16
add
and
inc
icebp
dec
js
sub
sbb
lret
test
ss
jp
mov
cmpsb
cmpsb
sbb
jecxz
jo
or
incl
pop
lock
repnz
inc
mov
lcall
pop
je
xchg
sbb
inc
jo
fists
dec
or
insl
aad
inc
cli
loopne
cwtl
ja
pop
xor
push
xor
cmc
fisttps
xchg
xchg
pop
fists
push
test
adc
aad
jl
xchg
mov
add
int
pop
pop
add
xlat
and
jmp
shrl
outsl
cs
add
xor
adc
or
or
xchg
les
mov
sub
adc
pop
or
xor
popa
and
sbb
push
pop
sbb
test
lret
mov
jae
cmc
scas
lods
mov
dec
cmpb
jg
mov
daa
orb
mov
mov
sahf
rorl
pop
loope
decl
jae
inc
jae
js
das
dec
addl
jae
orb
jp
jl
mov
aaa
xchg
sti
sbb
xchg
jp
dec
arpl
and
sub
aaa
cwtl
lods
cli
ljmp
ds
mov
popf
mov
dec
test
xchg
or
shrl
shrb
xlat
out
sub
push
mov
mov
dec
push
dec
shll
pusha
sub
sbbb
out
cli
dec
xchg
jns
jl
sti
les
pusha
and
pop
add
mov
pop
cmp
ljmp
xor
add
fldl2e
xchg
psrlw
xor
fs
jecxz
imul
in
push
add
adc
add
sbb
mov
push
push
addl
and
daa
and
xor
lret
xchg
in
pop
gs
dec
mov
fcompl
lds
aam
jl
loope
inc
jo
cmc
push
push
lods
fnsave
mov
rcll
arpl
je
add
sbb
or
sub
xrelease
shr
push
mov
sub
movsb
andb
pop
sub
aam
hlt
stc
pop
mov
sub
push
jmp
movbe
cmp
jmp
jg
scas
or
inc
cmp
mov
pop
and
jo
mov
jge
cmp
jns
xor
mov
out
xor
leave
adc
push
jp
dec
scas
repz
call
repz
mov
adc
jne
jo
loope
andb
lcall
loopne
jp
adc
cwtl
std
jg
enter
mov
inc
mov
es
fucomi
or
icebp
test
scas
out
hlt
aam
fsub
push
insl
push
jp
push
dec
adcb
fsts
push
mov
pop
outsl
dec
sbb
fwait
enter
xor
mov
cltd
je
sbb
jp
lea
fdivl
test
add
fwait
and
sub
sub
clc
arpl
aam
mov
insb
das
push
outsl
int
leave
rol
adc
inc
popf
int3
js
sub
mov
jmp
bound
and
jg
push
cmpsl
lods
cmp
jnp
jge
rcrb
cmpsb
lret
ret
not
into
cli
ret
xlat
inc
sub
dec
mov
or
call
loopne
test
aas
int3
in
xor
insl
jge
and
std
jp
pop
ds
mov
xchg
fcoms
clc
sahf
sub
mov
insl
adc
adc
insb
pop
and
jne
push
push
lret
xor
lcall
inc
rorl
clc
ja
lret
mov
mov
mov
test
mov
sub
rcrl
fwait
dec
into
into
ds
test
cmp
jg
jbe
mov
in
out
aam
adc
mov
fs
sarb
mov
test
pop
lods
pop
pop
enter
pop
sbb
inc
outsb
or
sub
mov
xchg
inc
sub
icebp
mov
mov
jge
jecxz
xor
xor
fisttpl
mov
cmp
lahf
jg
flds
test
call
adcl
inc
out
xchg
add
fdivrl
movsl
add
int
xchg
daa
sti
cs
ret
cmc
jp
pop
in
dec
sub
or
arpl
aam
inc
aam
adc
sub
inc
scas
jle
test
xchg
and
xchg
push
adc
mov
mov
pushf
and
pop
xchg
mov
pop
mov
movsl
fs
std
test
dec
shlb
lds
mov
or
sub
and
mov
xchg
js
lret
out
mov
and
mov
inc
push
add
and
cwtl
sub
sbb
xchg
out
inc
dec
lods
lods
mov
cmc
mov
lods
lods
mov
jg
jle
jb
mov
add
aam
push
add
jecxz
lds
xchg
add
fisubs
push
mov
pop
sub
mov
dec
cmp
inc
popa
push
sub
dec
pop
xchg
addl
ret
xor
fstpt
sbb
and
jbe
or
sahf
imul
cltd
and
icebp
mov
call
sbb
les
jmp
mov
xchg
pop
mov
cmp
cmp
stos
addr16
ret
jp
lahf
mov
push
pop
sbb
cmpsl
sub
xor
leave
lods
adc
out
sub
xchg
xor
test
add
fnstcw
jne
push
add
adc
sbb
push
pop
adc
adc
jl
inc
mov
jmp
mov
out
xor
xor
orl
push
jno
movsl
cli
xor
or
shll
jb
dec
pop
adc
fldcw
aad
jo
sarb
cmpsl
movsb
pop
cmp
mov
fbld
add
lret
and
data16
test
vcompresspd
ror
xor
or
call
fisttps
mov
or
mov
movsl
fildll
dec
das
rcrl
daa
push
in
adc
dec
int
mov
sti
cld
cs
cmp
jne
in
sub
add
fwait
sahf
mov
fists
pusha
xchg
xchg
nop
nop
xchg
sbb
pop
cmp
je
and
xchg
xor
inc
test
call
inc
push
js
lods
dec
int
add
cmp
inc
in
movsb
push
sub
cs
mov
mov
out
push
gs
jecxz
cmp
xchg
scas
inc
mov
dec
or
pop
mov
push
push
mov
and
add
scas
in
sbb
and
jno
xorl
out
push
sar
stc
mov
rcrb
jb
aaa
push
push
add
xor
mov
xor
cmp
jge
adc
push
out
mov
sub
jno
rolb
in
xchg
adc
dec
xchg
lds
pusha
js
inc
mov
pop
imul
icebp
push
xor
outsl
cwtl
and
lahf
in
stos
icebp
mov
lret
add
jge
adc
jno
popa
cmp
push
out
pop
repnz
int3
add
in
pop
pop
jae
dec
rclb
pop
add
push
jge
cmpsb
outsb
andl
mov
pop
pop
dec
cwtl
mov
ljmp
out
idivl
ret
add
nop
sub
inc
xchg
dec
rol
jbe
pusha
add
scas
push
decb
sub
inc
xor
call
orl
jb
loopne
push
nop
sahf
js
xor
push
inc
xchg
add
jg
jp
pop
sbb
inc
adc
cwtl
xchg
sti
jno
jb
xor
out
add
enter
xor
addr16
mov
jmp
pop
rclb
iret
faddl
repnz
into
addr16
mov
add
aas
push
cltd
inc
push
jl
or
pop
dec
gs
pop
adc
pop
mov
push
in
scas
xor
and
push
jmp
push
rcrl
nop
fmull
pop
inc
cmp
negb
shrb
xor
cmp
jns
ljmp
fs
xor
and
dec
cs
adc
ja
adc
leave
inc
sarl
xchg
inc
sbb
out
icebp
mov
or
vprotw
call
cmc
adc
jmp
cld
nop
aam
das
or
cmp
cmpsb
jnp
mov
add
stos
push
or
leave
cmp
das
or
clc
gs
or
xchg
mov
adc
ljmp
jle
test
xchg
adc
dec
aam
or
pusha
push
push
lea
push
push
idivb
add
add
jno
repnz
xchg
mov
mov
dec
jno
xchg
push
fsubrs
push
shl
lret
jnp
stos
sti
in
sbb
daa
or
loope
sbb
fstl
or
push
jo
jne
push
and
fs
aaa
lret
leave
and
and
adc
int3
mov
push
or
fstl
stos
mov
pop
xchg
fsubrl
pop
xlat
dec
jl
out
mov
inc
cld
cmpsb
sub
and
shlb
imul
jnp
out
mov
loop
fcmovbe
mulb
sbb
adc
lock
mov
xlat
int
aam
loop
jecxz
add
imul
mov
mov
decb
sub
pop
or
sti
cmpl
in
cmp
adc
jno
les
movsb
and
adc
cmpsb
mov
mov
jle
pushl
mov
je
icebp
mov
cltd
adc
mov
test
std
cmp
pop
push
sbb
bnd
ror
cmpsl
jle
or
jle
mov
push
push
jo
in
in
mov
fsts
xchg
js
mov
mov
ja
loopne
addr16
adc
test
and
dec
and
inc
inc
sub
dec
scas
push
inc
out
inc
pop
stos
lahf
cmp
mov
jno
and
das
fwait
repnz
adc
mov
xlat
or
fidivrs
mov
cli
push
push
sbb
mov
test
inc
xor
jno
mov
rorl
imul
or
shrl
mov
in
xor
adc
pop
fmull
and
push
fcomp
cmpb
cmp
add
or
stos
clc
scas
push
or
jmp
dec
pop
mov
adc
int3
lret
lret
and
or
outsb
xchg
mull
cmp
je
enter
inc
mov
dec
and
push
pop
fucomi
testb
ret
arpl
aaa
scas
push
pushf
je
cmpsb
jae
dec
mov
aaa
jmp
mov
shl
cwtl
mov
sub
mov
push
std
sub
out
mov
ret
push
dec
pushf
aaa
lods
inc
sub
mov
push
sahf
jge
dec
fisttps
xlat
shll
in
jnp
push
ds
mov
jle
fisubrl
push
call
iret
aaa
icebp
cltd
and
or
fistl
push
mov
jmp
jle
sub
xlat
orb
rdtsc
pop
cli
and
aad
jns
imul
in
pushf
cmp
movsl
cmpsb
inc
das
dec
fwait
andb
lock
sbb
scas
iret
sub
mov
fistl
jl
insb
push
mov
and
int3
sub
call
ficoms
idivb
mov
lea
sub
xor
inc
pop
test
in
add
lock
mov
repnz
sbb
sbb
prefetchnta
lock
xchg
fstl
mov
xchg
out
stc
xchg
or
sub
xchg
xchg
mov
fs
lods
insl
test
scas
cmp
xor
test
aam
mov
push
shlb
adc
add
jbe
mov
pop
arpl
sti
insb
imul
rcrl
and
mov
add
addl
test
pop
or
or
cmc
sub
sub
ja
scas
xor
rcll
imul
stos
leave
inc
mov
hlt
rorl
push
sahf
adc
xchg
das
popa
sarb
cwtl
and
sbb
sbb
inc
in
mov
mov
hlt
inc
push
xchg
ret
mov
fbstp
xchg
sbb
dec
xchg
add
je
int
xchg
or
or
dec
dec
insb
mov
pop
adc
inc
jno
dec
std
add
inc
mov
jb
imul
sarl
cltd
lret
ret
dec
pop
outsb
call
in
test
push
test
test
mov
jg
or
mov
mov
cmpsl
sub
scas
repnz
mov
sub
cmp
jo
pop
mov
sbb
mov
push
mov
int
pusha
inc
ret
mov
mov
xor
push
dec
das
insl
loopne
dec
add
push
inc
push
sub
fstps
dec
scas
dec
xchg
stc
dec
mov
mov
xchg
ja
test
inc
insl
fisubrl
cmpsl
mov
inc
jae
cmp
das
add
jmp
call
in
lcall
dec
push
mov
outsl
imul
pusha
loop
xadd
fs
sbb
add
inc
lret
mov
push
jns
pop
sub
mov
and
divb
mov
xchg
jmp
mov
mov
loope
fimuls
sbb
cmp
mov
dec
cld
adc
xchg
ss
stos
push
pop
dec
fistps
sub
jg
push
sub
inc
movsb
out
mov
pop
inc
xchg
push
adc
adc
add
xor
andl
adc
dec
repnz
mov
sub
js
push
fs
xor
lods
xor
test
pop
inc
jbe
xchg
pop
or
addb
sbb
add
xlat
lods
and
lcall
jb
mov
push
push
xor
rcrl
lret
pop
pop
or
jbe
in
scas
xor
lea
inc
mov
hlt
mov
pop
ret
push
addb
not
cmp
jne
gs
mov
mov
adc
and
adc
lret
cmp
les
imul
or
mov
loop
sub
stos
inc
add
xchg
cmp
push
inc
dec
jae
jae
in
enter
cmc
dec
dec
mov
lods
int
jbe
mov
jp
je
mov
orl
sbb
mov
out
adc
aam
mov
rclb
lret
push
inc
mov
xor
push
cmpsb
jmp
mov
movsb
lock
sbb
lock
push
aad
inc
and
sub
cmp
and
sub
dec
cmp
test
iret
adc
add
fstpl
add
outsl
xchg
cmp
int3
std
int3
sbb
leave
div
sub
in
mov
lret
imul
pop
mov
cmpsb
adc
mov
or
push
inc
mov
or
inc
or
les
sbb
lcall
push
mov
sub
mov
inc
adcb
incb
dec
adcb
lods
repnz
mov
and
mov
sub
push
xor
sub
mov
sbb
iret
sahf
aad
in
and
das
aam
mov
arpl
sbb
sub
mov
dec
fadds
cwtl
imul
ja
pop
test
jo
pop
int
pop
aaa
jmp
call
icebp
pop
mov
int3
sub
cs
adc
mov
into
ss
cmpsl
cmpxchg
sahf
push
push
and
jmp
ljmp
jae
sbb
add
and
fidivl
icebp
incb
scas
mov
shlb
mov
aad
and
repz
outsb
sub
fidivl
shlb
in
insl
lahf
or
popf
jle
addb
adc
mov
dec
pop
sbb
clc
mov
pop
and
test
pop
inc
add
int
lock
fsub
and
test
mov
pop
into
or
jno
push
push
popf
jbe
mov
dec
sub
push
int
divl
hlt
lret
jle
mov
xchg
cmp
mov
nop
dec
fwait
add
push
pop
xor
daa
jb
push
idiv
xchg
mov
mov
cmp
daa
mov
push
jae
jne
mov
mov
pop
cmpsb
in
es
xor
call
mov
mov
cmpsl
popa
push
out
lret
ret
lret
stos
test
and
and
stos
int
push
mov
enter
outsb
mov
xor
pop
ret
or
sbb
jmp
mov
sbb
pop
cmp
hlt
in
and
lahf
sbb
pop
mov
sbb
into
rclb
inc
inc
movsl
inc
sub
fisubl
mov
mov
xlat
adc
fcoml
dec
mov
push
jl
cs
inc
mov
add
jle
pushf
mov
xor
test
pop
gs
dec
mov
cmpsl
inc
aas
jp
nop
inc
adc
dec
sub
fsts
out
pop
xor
inc
mov
dec
inc
aad
push
mov
cmpsb
dec
aas
addb
jle
sarb
pop
out
sub
inc
and
push
fs
sub
out
push
ds
fldl
xchg
mov
jae
mov
pop
sbb
jmp
out
sub
pop
out
mov
mov
shll
into
test
cmpsl
push
sbb
xorl
cmp
dec
pop
adc
imul
sub
repz
lret
xor
add
mov
lea
xor
mov
popa
lock
or
ja
and
add
mov
and
stos
gs
pop
std
fs
outsb
int
inc
popf
xor
enter
enter
cmpsl
jmp
push
jmp
in
mov
mov
stos
outsb
xchg
push
and
xor
daa
push
out
dec
enter
and
les
push
ss
decl
testb
rcl
mov
shrl
inc
and
dec
dec
aad
rclb
clts
xchg
decb
jno
in
nop
pop
mov
popf
clc
iret
lea
adc
xchg
mov
mov
push
ja
into
push
mov
cs
adc
pop
fs
jne
out
mov
fdivrp
loopne
mov
sbb
rorb
out
jl
hlt
cmp
push
dec
pop
pop
xor
aas
fldcw
inc
or
jecxz
cmp
xchg
jg
insb
icebp
outsl
ror
out
dec
repnz
lret
add
cli
pop
andb
pop
fsubrs
mov
pop
adc
scas
add
cmp
add
iret
mov
out
cmpsb
and
les
int
rcll
push
xchg
dec
es
jp
scas
movups
movsl
icebp
mov
mov
mov
loopne
xchg
or
push
push
out
inc
addb
loopne
les
cmp
cmp
in
movsb
repz
inc
mov
mull
adc
pop
in
push
xor
fiadds
cmc
hlt
out
shl
das
jmp
mov
sbb
xchg
rolb
int
mov
shl
xchg
popa
mov
ror
mov
repnz
not
aaa
sarl
dec
fs
dec
xor
inc
mov
xor
jg
fimuls
mov
lea
fldt
popa
inc
decb
jl
outsb
adc
push
inc
mov
push
insb
push
mov
and
mov
mov
push
arpl
or
cmpb
outsb
mov
int3
lods
xchg
in
ret
faddl
and
pop
sub
adc
dec
mov
lods
push
jae
pop
popa
sub
lods
ljmp
pop
jbe
mov
imul
imul
inc
data16
sbb
shl
fidivs
inc
cmp
sub
jbe
rclb
dec
cmc
rclb
mov
in
jo,pt
or
sub
inc
cmp
cld
push
cmc
mov
and
fnstenv
pop
sbb
pop
inc
inc
pop
xor
cmp
cmp
push
mov
lods
aad
dec
repz
mov
outsl
test
jmp
mov
int3
adc
shll
lret
scas
xchg
push
aaa
ss
mov
push
repz
or
mov
shll
mov
jmp
lods
dec
mov
fstpl
imull
pop
add
sub
hlt
mov
imul
decb
scas
cmpsl
jno
ja
int
out
xrelease
mov
xor
sub
or
daa
xor
push
negb
xchg
xorb
pop
cs
mov
aam
dec
mulb
ds
xor
inc
pop
cmpsl
pop
mov
pop
in
hlt
inc
ror
test
mov
or
mov
andl
imul
out
cmc
stos
cmp
push
add
fcomps
jns
mov
mov
push
sub
notl
lahf
jp
out
mov
clc
sub
stos
pop
negl
or
xchg
xchg
orb
ret
rcrb
mov
cld
mov
cmpsb
sub
cmp
int
lret
clc
and
pushf
jae
jge
and
sub
aam
stos
pop
hlt
push
xchg
shrb
jle
add
in
subb
cmpsl
jo
jl
ljmp
adc
fisttps
fidivs
adc
and
cmpsb
iret
cmp
test
jae
sub
pop
aad
inc
mov
fistl
mov
sub
xchg
lret
ret
xor
jp
outsb
insl
push
xor
pop
pop
push
insl
cmpsb
lods
dec
add
outsl
std
mov
gs
stos
cld
outsb
cmp
cmp
push
jb
sbb
sbb
add
inc
loop
insl
push
popa
dec
cmp
fsubr
inc
loopne
add
incb
pop
dec
xorl
cmpsb
sbb
cmp
popf
addr16
add
pop
push
add
mov
xor
cmc
mov
popf
sbb
ret
dec
test
and
inc
stos
lds
imul
out
add
xchg
out
pop
cmp
or
cmpsb
cmp
dec
data16
mov
dec
mov
pop
fdivs
and
out
orl
mov
int
fsubrs
lock
ljmp
mov
xchg
mov
in
mov
fidivrs
fstl
pop
sub
cmp
popf
out
pushf
jbe
sub
aam
ret
fistl
loopne
subb
sub
cmp
add
push
xchg
insb
sub
inc
inc
test
xchg
shll
fidivl
jb
in
inc
xchg
push
xor
aas
mov
pusha
push
loop
adc
mov
cs
cmp
mov
fadds
adc
rorl
fcmovb
push
sub
in
repz
inc
xor
scas
test
lods
lods
inc
outsl
or
leave
stc
xor
adc
leave
jno
sub
shl
pop
dec
adc
or
mov
xlat
push
mov
call
into
jp
mov
adc
inc
add
test
xchg
sbb
pop
mov
cmpsl
clc
jle
fildll
mov
mov
dec
xchg
jmp
iret
mov
pop
inc
mov
cmp
mov
sbbb
and
ljmp
mov
rcrb
xor
push
add
lret
jp
sbbb
or
cltd
mov
and
popa
adc
cwtl
sbb
jp
add
dec
addr16
dec
movsl
xor
lahf
ds
dec
add
cli
dec
andb
fildl
aas
xor
jae
push
jb
aam
jl
call
and
push
sahf
or
cmp
sti
sub
mov
aad
movsb
movsl
stc
or
pop
pop
mov
dec
push
and
mov
sbb
cmp
cwtl
cmp
bsr
xor
jb
lods
ret
push
xor
xchg
inc
cs
sub
inc
andl
loop
and
cmpsb
cltd
xchg
mov
insl
and
rol
aam
push
push
pop
into
jl
call
jle
dec
or
xor
stos
cmp
subl
pushf
cmp
lret
punpcklbw
fsub
mov
data16
fdivrl
cmp
pushf
sbb
fidivs
push
fstl
xlat
inc
insb
mov
sti
dec
jl
xchg
adc
mov
stos
fcmovbe
push
daa
test
les
jb
dec
fwait
pop
icebp
push
xchg
sub
push
pop
xchg
test
fwait
aad
in
addl
adc
or
sbb
inc
in
and
test
mov
mov
sub
fsubrl
add
in
sbb
xor
xbegin
ret
mov
mov
lahf
adc
pop
frstor
mov
jl
ret
jp
les
or
sub
xor
sti
sub
int3
push
movsl
dec
ret
adc
fwait
nop
aas
jae
sbb
cmp
push
add
mov
test
sbb
mov
pop
push
sbb
mov
jae
jle
sub
int3
out
or
imul
mov
faddl
and
arpl
pop
jp
je
fidivl
mov
js
insl
mov
mov
xchg
rol
xchg
loop
leave
xor
xchg
int3
mov
insl
lcall
dec
cmp
enter
pushf
push
fildll
mov
in
or
inc
and
inc
mov
aaa
or
je
cmp
adc
push
cs
xor
mov
pusha
and
lods
jl
xchg
data16
iret
xrelease
int3
nop
test
sbb
mov
cmp
sbb
add
mov
int
test
dec
jg
add
ret
add
sarb
xlat
jno
popa
subl
dec
mov
add
push
dec
pusha
andl
rorb
sbb
jns
pop
mov
push
mov
out
in
lret
sub
or
popl
sub
ret
inc
je
jnp
out
pop
call
arpl
xchg
test
fnsave
sbb
les
loopne
or
add
bound
lret
ret
mov
divb
bound
inc
lahf
mov
pop
add
and
imul
inc
pop
push
mov
cmp
gs
mov
dec
mov
sahf
adc
nop
sbb
jbe
lret
mov
mov
dec
lea
aam
adcb
push
sbb
test
add
jp
aas
mov
pop
mov
pop
divl
inc
add
push
addr16
push
shl
cmc
mov
or
inc
lea
sub
std
cmp
ss
cmp
and
ss
dec
xor
mov
insb
test
xor
popf
mov
xor
xor
mov
inc
sahf
inc
push
dec
xchg
jl
test
cmp
aas
cmove
adc
out
sti
ret
leave
dec
jg
imul
mov
cltd
and
es
mov
sbb
addr16
nop
mov
loop
lcall
loop
rcl
xor
lods
rclb
insb
inc
scas
je
loopne
lods
cmpsl
and
loope
ljmp
pushf
mov
ja
cli
stc
test
or
popa
dec
js
push
add
xchg
mov
push
push
in
sub
enter
bound
jecxz
int3
sub
inc
pmaxsw
mov
adc
and
sub
sbb
dec
cmpsl
nop
mov
shll
cmp
mov
lea
and
push
pop
int
inc
xchg
insb
je
lock
aam
xor
cltd
pop
movsb
push
jbe
mov
in
mov
sub
lods
pop
dec
mov
ret
lcall
leave
or
std
push
mov
arpl
jns
les
mov
pop
jge
into
inc
aas
or
dec
popf
pop
cmp
stos
and
jl
dec
push
mov
or
stos
test
iret
jne
insl
fcmovu
stos
sub
xor
mov
push
in
lods
inc
jl
in
orb
push
fs
daa
pop
xor
fbstp
mov
jne
movsb
jne
movsb
sub
xor
cli
js
loope
ret
push
fbld
and
hlt
jns
mov
xor
push
jle
icebp
fpatan
sub
mov
adc
cmp
sbb
jg
bound
mov
ds
in
jle
inc
call
jl
pop
jg
jnp
inc
nop
sbb
loopne
pop
inc
shrl
add
or
shrl
loopne
imul
fstps
imul
mov
out
inc
pop
nop
jp
icebp
mov
mov
cmp
or
lret
xchg
adc
mov
mov
aad
or
hlt
pop
loopne
js
push
jp
or
jnp
or
push
or
mov
iret
or
xchg
pop
sub
jb
xchg
xchg
and
cmp
mov
jle
bound
xchg
cli
adc
mov
pop
xor
mov
frstor
cmp
fdivs
fiaddl
push
sbb
lret
loopne
outsl
repz
mov
or
or
jecxz
xchg
popa
cwtl
mov
or
xor
sub
pusha
out
push
cmc
or
sub
push
scas
mov
dec
push
loope
mov
rorb
push
mov
dec
xor
cltd
mov
adc
xor
dec
and
in
add
movsb
push
test
inc
xor
aam
outsb
push
xchg
sbb
cmpsl
sub
inc
mov
and
xchg
insb
scas
insb
aaa
andb
fwait
orl
leave
test
ret
scas
lahf
test
mov
adc
push
xchg
jge
dec
jl
mov
xchg
popa
push
dec
ljmp
fdivrs
dec
test
adc
dec
xlat
xchg
lcall
in
shlb
mov
inc
mov
js
sahf
stc
mov
hlt
popa
rorl
outsb
adc
ljmp
lcall
mov
jbe
nop
scas
mov
nop
dec
mov
cltd
movsb
imul
divl
inc
jbe
inc
scas
idivl
sti
fistps
call
js
xor
cmp
lock
aad
in
mov
xchg
pop
xor
nop
and
lahf
push
push
jle
imul
xlat
xchg
nop
js
xor
xchg
dec
mov
loop
leave
mov
inc
cmp
repnz
aad
fstl
xor
mov
ds
jecxz
ljmp
in
mov
out
mov
mov
aam
mov
push
fstpt
jne
aas
es
in
dec
mov
notb
popf
rclb
sbb
jmp
repz
icebp
js
mov
or
out
mov
addr16
or
imul
fs
inc
decl
jmp
mov
adc
pop
out
cmc
lds
xchg
ds
mov
inc
ja
mov
notl
dec
or
add
imul
or
nop
add
push
mov
inc
xlat
imul
mov
pushf
pop
dec
push
gs
imul
fimull
xor
imul
lods
test
call
mov
lcall
adc
jno
or
enter
or
lods
pushl
int3
pop
in
jle
jp
arpl
popa
jns
add
mov
adc
loope
insb
sarl
push
stc
mov
out
test
iret
insb
adc
nopl
in
lret
xchg
notl
mov
iret
sbb
pop
loop
or
and
repnz
sbb
cmp
fstps
dec
aam
jns
push
in
ds
push
insb
or
sbb
imul
mov
add
into
aam
cmp
dec
mov
test
outsb
pop
adc
xor
xchg
mov
adc
fildll
int
dec
jmp
mov
xor
cwtl
add
cmp
xchg
daa
adc
mov
adc
cmp
ss
xchg
mov
mov
movsb
cmp
test
je
xor
dec
mov
inc
and
xchg
cmc
jo
adc
stos
nop
dec
ljmp
add
sarb
cmp
jnp
xchg
push
cltd
mov
cmp
cmpsb
out
add
pop
mov
sbb
cmp
sbb
shrl
add
mov
mov
outsb
aad
sysexit
lods
or
and
dec
imulb
sub
rorb
int
movsl
lods
les
shll
inc
outsb
ret
enter
int3
hlt
ljmp
rorl
xlat
test
xor
in
lock
inc
xor
xchg
daa
repz
sub
push
mov
popa
sti
and
pushf
fwait
push
jg
movb
push
pusha
jp
mov
mov
xchg
leave
xchg
imul
cmpsl
xor
mov
repz
dec
test
insl
mov
int3
sbb
test
jo
or
shll
in
or
sub
ja
out
push
sub
lods
out
push
and
testl
into
out
iret
xor
add
clc
aad
cmp
loop
movsb
push
jp
fwait
scas
hlt
cmp
inc
mov
mov
pop
dec
out
xchg
repz
ret
std
push
cwtl
dec
or
leave
xchg
pop
dec
or
mov
ja
inc
ljmp
fs
adc
sbb
test
fwait
loopne
add
adc
add
imul
negl
inc
dec
fbstp
dec
movsb
rcrl
sbb
sbb
dec
or
insb
fsts
pusha
jnp
jmp
jl
adc
or
ficompl
lahf
jne
daa
cmp
cmpsl
adc
adc
enter
xchg
xorl
punpckhbw
enter
negl
mov
xlat
add
cwtl
mov
or
test
mov
add
rcl
hlt
adc
pop
jmp
xor
bound
sbb
pop
imul
adc
jl
push
and
dec
mov
sbb
mov
dec
ljmp
add
xchg
mov
les
sbb
enter
cmp
sahf
xor
lret
ljmp
iret
repnz
ljmp
in
add
ret
aad
aas
fistps
jbe
mov
sub
adc
and
es
xlat
js
test
sbb
pop
mov
jle
mov
icebp
pop
and
push
out
xor
push
into
lcall
inc
or
stos
dec
jg
repz
jbe
add
sbb
addl
aad
icebp
mov
js
out
out
xlat
inc
test
imul
lcall
int3
mov
mov
addr16
cmp
dec
push
mov
inc
mov
in
jle
bound
adc
das
sub
mov
xchg
aas
adc
fdivl
mov
lea
mov
pop
aas
cld
sbb
shrb
xchg
fisubl
insb
pop
and
sbb
lahf
cmp
dec
repnz
daa
icebp
movsb
in
pop
sub
test
loope
ja
fldcw
loopne
fisttps
ds
xor
scas
push
test
mov
mov
and
jno
stos
out
nop
adc
jo
lcall
sbb
or
sub
pop
mov
les
or
sub
popa
aam
movsl
outsl
fistps
fcoml
aas
push
out
xchg
stos
sti
aas
add
pop
divl
inc
or
push
sub
push
or
sub
and
add
stos
iret
sub
cmpsb
out
xchg
in
dec
scas
es
enter
mov
or
xchg
lods
xor
lock
sti
dec
or
jg
dec
jp
jo
inc
jmp
or
outsl
loopne
xor
or
filds
into
orl
dec
xchg
addr16
or
jle
imul
sbb
jnp
outsb
mov
cmp
add
lret
mov
or
gs
fsubrl
scas
xchg
es
pop
lods
mov
cmp
mov
aad
mov
fwait
sti
cmp
xor
insb
cmpl
mov
xchg
rorb
loopne
fdivs
fsubrs
xchg
icebp
sub
xor
iret
nop
mov
push
outsb
mov
mov
enter
fstpl
push
dec
shlb
test
shrl
cmp
pop
pop
inc
cmp
and
pop
and
or
and
inc
loope
mov
mov
adc
xchg
sbb
lods
add
mov
sbb
jno
xchg
xchg
sbb
icebp
mov
fmulp
test
dec
repz
lods
test
mov
aaa
jg
cli
imul
mov
fstpt
jns
aam
icebp
and
repnz
cs
jns
ss
and
js
call
loope
cmp
and
out
pushf
lret
add
xchg
mov
mov
jle
and
mov
in
dec
xchg
lahf
aas
stc
xor
hlt
dec
jmp
in
xchg
xchg
push
or
pusha
push
pop
leave
sub
push
xor
inc
sub
sarl
pusha
adcl
lea
sbb
adc
and
jae
add
imul
cmp
push
scas
lds
inc
push
dec
cmp
push
xchg
ja
or
or
nop
adc
inc
adc
mov
cltd
xchg
bound
mov
in
out
ja
arpl
into
test
aaa
popf
test
sbb
push
test
sbbl
xchg
mov
iret
xchg
and
adc
and
xchg
push
in
mov
push
pop
and
sbb
cli
mov
mov
stos
outsl
stos
adc
test
mov
loop
pushf
add
fidivl
sbb
repz
xchg
mov
imul
adc
cmp
in
add
jle
fnsave
mov
sbb
xchg
repnz
mov
mov
lods
xchg
insl
fstpl
jno
xlat
mov
mov
sbb
sub
jno
stc
sub
push
stos
inc
cmpsb
inc
adc
mov
lds
call
mulb
in
push
aad
xchg
jle
mov
fsubs
adc
jg
cmp
cmpsb
mov
push
cmp
fistpl
aad
dec
sbb
repz
rcrb
nop
adc
add
aaa
es
push
cs
in
cld
dec
les
xchg
xchg
loop
lds
hlt
lods
and
dec
fsubrp
mov
scas
mov
xchg
jae
clc
cmp
outsl
imul
jbe
cltd
jno
incb
popf
aas
adc
push
sti
jmp
leave
pusha
adc
adc
repnz
sahf
push
ja
rolb
push
push
sub
push
imul
scas
inc
gs
sbb
fnstsw
js
cmpsl
mov
dec
sarb
cwtl
add
push
xor
out
jbe
ror
ljmp
xor
ds
dec
cmp
fcompl
sti
and
nop
sbb
sti
adc
daa
inc
int3
repnz
push
loope
cmp
and
mov
lret
pop
outsl
nop
mov
mov
mov
pop
push
push
in
outsl
jns
cld
jmp
sti
push
test
ret
push
mov
out
pusha
xchg
test
scas
xlat
sub
loopne
or
aam
add
ja
and
aaa
jb
adc
inc
xlat
test
jmp
inc
mov
pop
mov
xor
test
imul
mov
addl
bound
leave
popa
gs
movsl
xchg
outsb
cs
lret
mov
add
dec
les
jp
mov
push
sub
xchg
pop
xor
inc
pop
cmpb
mov
popa
loopne
ss
xor
out
test
clc
shlb
adc
and
add
movsb
insb
xchg
pop
pop
jge
gs
mov
cmc
dec
xchg
bnd
mov
mov
and
outsl
xor
addr16
dec
sahf
mov
inc
mov
sahf
add
scas
xchg
adc
iret
ss
imul
jle
jnp
enter
mov
shlb
sub
repz
pop
or
test
sbb
cmp
mov
iret
push
fdivrl
mov
data16
pop
test
sub
repz
std
jne
sti
xchg
je
dec
ja
inc
in
sbb
jecxz
fldl
shlb
xchg
jle
inc
pop
loop
push
cltd
inc
int3
add
je
xor
mov
stc
test
push
mov
in
cmp
xchg
push
aas
cmpsb
outsb
xor
jecxz
jo
scas
xor
push
in
adc
fidivrl
and
popf
xchg
in
fcoms
fmul
pop
fstl
inc
sbb
mov
mov
icebp
sbb
flds
sti
hlt
pop
jb
add
cmp
mov
or
inc
test
mov
dec
push
lods
fnstsw
shlb
pop
xchg
jle
jle
das
roll
push
and
lcall
pop
out
and
cmpsb
scas
jecxz
mov
iret
xchg
js
rcl
loopne
mov
scas
push
push
mov
dec
jg
popa
decl
in
inc
cmpsl
scas
in
adc
xchg
pop
adc
rolb
cmp
int3
adc
shll
fs
call
add
repnz
fildll
sbb
cmp
or
push
mov
jecxz
js
pop
jno
daa
out
pop
adc
mov
orl
add
rcr
cs
xchg
rclb
test
jae
out
sub
cmp
fnstcw
rcl
lcall
iret
test
fs
push
lret
test
jg
xchg
cmc
addr16
inc
dec
sub
ja
pop
inc
xchg
mov
int3
inc
adc
pop
pushf
ds
mov
jae
push
aaa
movb
xor
subb
incl
out
mov
mov
in
sahf
es
shrb
fnsave
pop
ja
sub
sahf
or
fcmovbe
cld
jp
jmp
daa
shl
mov
out
mov
sbb
lods
pop
or
mov
jl
lea
int
into
scas
fcmovu
jo
and
adc
sti
stos
lods
loopne
dec
scas
fwait
out
fimull
je
xor
or
inc
imul
cmpsl
inc
outsl
ret
inc
push
adc
mov
xchg
out
cld
lock
sahf
mov
movsl
lods
add
or
sti
xchg
cmpsl
cmp
rcl
cmp
pop
adc
jo
dec
pop
mov
cli
shl
repnz
inc
inc
xchg
cmp
add
test
stc
pop
dec
imulb
xchg
mov
ret
stc
adc
les
adc
lgs
add
popa
cmpsl
cmp
or
out
ret
jb
cwtl
fdivl
dec
cmpl
sti
outsl
mov
filds
rcrl
lock
inc
orl
lret
ds
pushf
inc
icebp
xchg
loopne
inc
arpl
cmpsl
xchg
push
aad
mov
jne
mov
mov
jecxz
xorl
jo
and
outsb
xchg
inc
ds
ret
xor
les
pop
pop
mov
or
notl
insb
insb
pop
mov
and
cwtl
loope
mov
test
out
sub
pop
das
add
insl
inc
mov
int
loop
sub
pusha
push
add
in
push
popa
call
movsl
sub
xor
xchg
daa
push
popf
pop
sbb
push
mov
or
mov
inc
lock
rcrb
into
outsb
add
je
mov
push
out
jo
mov
pop
cmp
sarb
dec
push
icebp
test
test
dec
sbb
les
dec
jno
push
in
push
xchg
loope
loope
and
mov
and
or
repz
sub
xchg
shlb
stos
insb
sahf
out
or
call
ret
movsb
and
sbb
js
push
mov
test
fstp
lds
loopne
lahf
call
xor
lods
jbe
dec
fs
mov
imul
mov
jg
loopne
pusha
jbe
fildll
bound
push
ds
sub
movsl
inc
call
xchg
dec
pop
sub
mov
ret
or
and
dec
mov
enter
rcll
nop
sbb
mov
std
xchg
test
shl
loope
mov
cmc
dec
mov
repnz
in
inc
pop
sarl
push
add
nop
js
lea
daa
add
adc
in
call
inc
call
add
mov
fwait
xor
jmp
mov
sub
movsb
dec
mov
dec
cmp
sbb
pop
push
mov
cmp
push
push
mov
push
sub
inc
fs
adc
push
lods
frstor
int3
jp
out
ror
int3
cmp
movsb
jae
xchg
pop
xchg
hlt
jnp
enter
in
inc
jbe
mov
hlt
daa
addr16
lds
movsb
insb
pop
inc
jnp
add
imul
fcomp
sahf
nop
in
shl
mov
cmp
jl
out
inc
add
and
or
les
or
sbbl
xchg
mov
mov
movsl
jle
xor
fdivrs
pusha
inc
sbb
les
jns
sbb
pop
shl
outsl
xchg
outsb
xor
cmp
rcll
pop
and
push
inc
xchg
and
push
sbb
inc
negb
sbb
inc
cmp
cwtl
lcall
gs
repnz
ret
outsl
xchg
and
xchg
outsb
jne
faddp
inc
test
jp
xor
or
imul
pusha
out
inc
jg
mov
jb
ds
aad
xchg
pop
pop
mov
adc
mov
out
cmp
jp
divb
movsl
mov
sbb
loop
mov
cmp
mov
mov
dec
xor
div
inc
sub
mov
pop
or
mov
xchg
inc
fld
in
jae
ds
mov
cmp
loope
adc
imul
push
inc
add
and
dec
adc
jg
lds
call
cmpsl
mov
add
xor
inc
mov
lds
pop
sar
mov
nop
inc
das
scas
popf
out
test
jecxz
loop
outsl
or
das
aas
enter
aas
cmp
lock
rcrl
insl
sbb
fsubr
out
dec
xor
lods
aam
shrb
lods
pop
mov
mov
mov
adc
mov
adc
imul
push
inc
clc
adc
in
aas
in
xchg
mov
lret
sahf
dec
mov
jbe
mov
cwtl
repz
cld
mov
das
lods
mov
clc
int3
cli
ss
aam
mov
lret
out
das
push
mov
cmp
iret
pop
loope
push
clc
pop
pop
test
jp
add
inc
adc
inc
pop
popa
shll
std
scas
shl
sbb
add
xchg
mov
jle
dec
adc
mov
imul
pushf
cld
cmp
daa
cmp
dec
xlat
lods
lds
jg
push
xor
scas
sub
xor
and
cmp
sti
mov
sub
int3
adc
sahf
shrl
sub
ret
dec
sub
cltd
hlt
add
sbb
pop
pop
cmp
ja
out
push
ret
rol
xchg
out
insl
xchg
adc
stos
mov
int3
mov
xor
push
xchg
mov
adc
push
in
jnp
out
pop
cli
dec
pushf
cmp
add
jp
cmp
push
mov
xchg
jl
ret
jb
cmp
push
loop
mov
jmp
sti
subl
xor
xor
arpl
sub
mov
test
outsl
xor
xor
filds
loopne
pop
out
pop
inc
imul
sbb
das
iret
xchg
movsb
adc
xor
int
out
adc
push
or
fisttpl
das
push
xor
mul
adc
mov
and
xlat
notl
mov
push
ss
push
inc
loope
add
or
jno
icebp
imul
jae
out
lea
lret
imul
jp
inc
add
lahf
inc
int
cmp
cmpsl
out
push
subl
or
call
mov
pusha
and
pop
cmc
fisttpl
subl
push
push
int
aaa
scas
dec
sub
insl
in
popa
lcall
push
jl
sbb
insl
mov
and
shrb
loop
popa
cmc
lods
and
mov
pop
lods
sub
xchg
xchg
pop
cmpsl
bound
push
jns
jecxz
popf
or
sub
mov
jp
add
xor
mov
cmpsb
sub
fdivrl
jg
int3
mov
push
dec
mov
dec
inc
in
into
and
je
pop
mov
add
mov
mov
scas
mov
jecxz
add
or
add
dec
popf
imul
call
mull
movsb
out
clc
push
hlt
insl
int
iret
pop
mov
adc
into
jne
jecxz
cld
mulps
inc
fidivs
add
test
dec
cli
inc
mov
and
mov
fucom
cmp
stos
out
pushf
xchg
adc
adc
outsl
mov
fnstenv
dec
insl
clc
dec
sbb
sbb
add
xchg
xlat
sbbb
or
pushw
or
test
mov
xor
mov
add
fsubrp
xchg
jo
pop
lcall
xchg
pop
shl
pop
shll
xor
cld
sti
lods
faddl
sbb
add
sarl
pop
push
orl
xchg
pop
mov
pop
out
mov
push
lahf
mov
mov
inc
test
sarb
fnstsw
frstor
add
add
xor
mov
xor
jg
stc
pop
push
in
ds
pop
jns
sub
push
mov
loope
inc
dec
jl
pop
xchg
lea
mov
push
xchg
shrb
int3
js
lret
insb
xorl
or
jp
aaa
xchg
jns
jns
push
sbb
mov
xchg
cld
jns
rcrb
and
cld
push
push
push
xor
jo
test
sti
into
ret
loop
out
adc
push
dec
push
cltd
xor
add
std
je
std
and
xchg
dec
lahf
pop
aam
ret
mov
inc
jl
out
and
out
rcrl
inc
test
and
or
fwait
xor
pop
lods
pop
daa
cmp
adc
push
and
out
in
mov
xchg
xchg
pop
sbb
sbb
scas
stos
orl
sub
repnz
insl
lods
cmp
jo
cmp
enter
fstp
dec
mov
jecxz
ror
adc
mov
mov
nop
into
or
out
loop
mov
or
call
incb
jo
jo
stc
sbb
push
cs
and
scas
xor
in
pushf
fstpt
pop
test
out
lret
in
xlat
fidivrl
lods
scas
ret
jbe
bound
cmp
dec
xchg
dec
insb
not
ficompl
shl
scas
imul
pop
stc
sub
mov
scas
lahf
scas
sub
jmp
jbe
mov
push
imul
fsubr
dec
ror
dec
cwtl
pop
sbb
cmp
xchg
inc
shl
jmp
pushf
xchg
inc
jecxz
sbb
in
xchg
fcomps
push
pushf
mov
fsubl
or
ror
pop
sahf
sahf
mov
xchg
mov
into
int
push
jmp
push
std
test
xchg
movl
inc
jge
sbb
lret
lods
ficomps
mov
pop
ror
adc
push
add
mov
mov
pop
test
rorl
cmp
icebp
push
mov
mov
lods
in
jle
insl
xchg
outsl
add
jle
loopne
sbb
dec
pop
jb
mov
pop
or
mov
int3
dec
dec
jb
mov
push
lret
add
jb
dec
and
jle
out
rcrl
add
jp
aad
pop
repz
cmp
es
dec
ficoml
fdivs
pop
into
lock
dec
imul
mov
daa
addl
data16
arpl
neg
enter
sbb
pop
mov
inc
inc
outsb
popa
pop
out
push
add
jp
sub
leave
cmp
mov
cmp
mov
sarb
nop
fsubs
jcxz,pt
adc
sub
test
cmp
stos
jbe
cmpl
fimuls
mov
cmp
or
lcall
arpl
xlat
fists
fistpll
jnp
cltd
es
add
dec
rclb
xchg
cmp
divl
imul
push
jmp
fcoms
sub
push
enter
push
mov
call
lcall
jg
sbb
inc
je
push
jg
or
aad
bound
inc
mov
adc
cli
mov
sahf
repnz
pop
fld
mov
scas
icebp
loope
pop
js
pusha
lahf
and
xlat
jge
repnz
mov
popf
jle
cmp
or
sahf
scas
aam
dec
jnp
je
or
int3
lcall
jge
sbb
mov
into
les
xor
pop
inc
movsb
lcall
loope
call
cmpsb
roll
test
xchg
repnz
sahf
nop/reserved
adc
pop
cltd
imul
or
scas
insb
mov
ss
movsb
jmp
xor
push
testb
dec
in
sub
add
cs
adcb
xor
sbb
loopne
mov
clc
jo
push
push
mov
mov
imul
and
bound
and
jnp
mov
mov
mov
and
push
data16
ret
hlt
sub
or
dec
lahf
pop
shll
je
cwtl
loopne
inc
sbb
add
push
jb
jg
sahf
cmp
fcmovb
sub
enter
push
cwtl
adcb
dec
pop
ss
mov
loop
cmp
fwait
lahf
pop
cwtl
repnz
mov
arpl
es
and
movsb
lods
xchg
jbe
jl
lahf
mov
and
jo
inc
loope
jnp
jle
roll
out
gs
leave
movsl
or
out
dec
pushf
pop
mov
aam
xchg
and
adc
dec
fisubs
gs
aaa
rcrb
fwait
adc
jae
push
cmp
mov
dec
inc
and
inc
fwait
mov
pop
mov
shrl
dec
mov
fisttpll
sub
push
popf
jge
or
xchg
les
adc
fimuls
xchg
sbb
dec
int3
mov
sub
mov
test
mov
bound
popf
or
pop
dec
xor
loop
cli
lretw
jnp
sti
pop
and
pop
mov
leave
aam
mov
mov
xchg
cwtl
sahf
xchg
repz
xchg
push
and
mov
push
push
or
test
jno
stos
fiadds
xor
int3
test
clc
add
sub
les
stos
mov
pop
out
push
ficompl
dec
adc
iret
xor
es
enter
imulb
inc
jbe
xor
popa
cmp
popf
mov
imul
ror
pop
stos
cmp
movl
cmpsb
bound
adc
sub
insb
sti
out
jl
notl
inc
imul
ret
add
aam
and
lret
adc
out
sub
ds
sub
js
lds
dec
mov
mov
pusha
push
pop
inc
xchg
push
shlb
jbe
dec
dec
adc
mov
popf
fwait
rcrl
arpl
jle
mov
test
sub
mov
push
jecxz
in
xchg
xchg
inc
pop
arpl
xor
out
sbb
mov
test
divl
jg
cltd
movsb
jge
mov
mov
and
pop
aas
repnz
fildl
mov
mov
repnz
cmp
xor
adc
pop
mov
aad
xchg
push
out
or
imul
fdivrs
sbb
inc
and
ss
jg
adc
jp
popf
movsb
stos
roll
jp
imul
imul
lea
mov
cmp
loop
xchg
aaa
pusha
pop
push
sbb
jo
repz
lgs
dec
dec
or
jge
icebp
and
sbbl
xor
test
fcoml
hlt
jb
loop
inc
mov
mov
getsec
mov
mov
mov
ret
add
inc
jmp
sbbb
xor
xor
lret
out
insb
iret
mov
sub
negb
jb
nop
je
adc
sub
push
cltd
sub
subl
pop
adcb
ds
ret
cmp
ljmp
fildll
sub
roll
inc
mov
mov
scas
stc
mov
mov
js
sahf
jnp
sbb
insb
in
test
lahf
jo
mov
cmp
sbb
into
fbld
pop
xor
stos
movsl
pushl
ds
pop
outsb
ds
lods
out
popa
jmp
adc
xlat
mov
push
xchg
mov
arpl
mov
sub
lds
das
fidivs
popa
or
fdivs
lret
mov
pop
jge
test
js
imul
aad
loopne
mov
pushf
fidivs
int
jb
cmc
mov
or
faddl
pop
sub
dec
and
and
lock
mov
test
xchg
std
outsb
mov
jno
mov
fs
icebp
jne
pop
add
scas
fs
jne
mov
xlat
loopne
push
ficomps
stos
sbb
dec
xchg
insl
cmova
mov
mov
insb
sti
bound
nop
pop
jge
mov
in
int3
pop
stos
dec
in
insl
fldl
mov
pop
xor
lcall
mov
xchg
insb
xchg
pop
cmp
pop
jecxz
shlb
lods
pop
js
and
mov
sbb
inc
inc
adc
pop
pop
mov
stc
js
add
cmc
mov
jo
loopne
sub
add
push
cmpsb
ss
dec
jno
popf
cli
jb
dec
push
mov
mov
bound
dec
cli
sbb
mov
adc
pop
xorb
ret
addr16
stc
and
cmpxchg
and
inc
cmp
adc
cld
mov
cltd
cmpl
repnz
mov
clc
adc
out
pop
jmp
cltd
mov
add
mov
push
stc
fidivs
pop
push
movsb
inc
pusha
scas
int
lret
dec
aad
popf
xchg
xchg
add
jecxz
fwait
jle
mov
nop
mov
pop
fistpl
xor
lcall
and
jb
es
inc
pop
jae
mov
insl
push
fsubrs
dec
into
andl
xchg
fbstp
cmp
pop
jbe
dec
or
andb
das
sbb
or
xor
mov
je
ss
shld
sti
cwtl
popf
cli
jnp
pop
xor
cmp
in
ret
add
enter
add
push
mov
fisttps
mov
out
aam
into
popa
inc
push
jg
mov
or
and
adc
xor
shl
push
idivl
xchg
in
jmp
and
ja
pusha
test
cltd
pop
mov
xchg
repnz
inc
mov
push
or
out
jge
sub
dec
xchg
push
mov
fmuls
adc
pop
lock
orl
pop
cwtl
fiadds
mov
and
mov
jo
cmc
ficomps
in
or
push
sbb
imull
stos
dec
aad
movsb
push
mov
pushf
outsl
scas
sti
pop
dec
bswap
cld
stc
inc
bound
inc
fsubr
sahf
sbb
dec
clc
sbb
pop
js
xor
hlt
nop
ljmp
mov
sarb
or
outsl
fcoml
dec
pusha
push
mov
cmp
loope
jae
adc
out
dec
out
lock
into
add
adc
in
int
add
je
jns
lcall
cmpsb
cmp
in
sbb
xchg
clc
jb
aam
push
cmp
inc
and
push
xor
dec
call
mov
pushf
scas
and
rorl
lcall
sbb
sarb
out
outsb
cmpsb
sub
imul
rcll
mov
xor
pop
dec
cli
pop
repnz
xchg
and
lret
loope
popl
fcmovbe
popf
add
push
jle
aaa
cs
xor
push
dec
pop
sbbl
mov
xchg
mov
xchg
or
mov
mov
iret
daa
shlb
daa
xchg
xchg
inc
adc
cmpsb
pop
lock
sub
or
out
pop
imul
sbb
dec
cmp
add
iret
rcrl
rcll
mov
lock
sbb
dec
sbb
cmp
jmp
dec
mov
inc
push
sbb
jle
cmp
jg
mov
jae
or
out
or
sbb
mov
aad
mov
or
sahf
repz
rol
movsl
inc
fdivs
repnz
insl
stos
lds
int
je
popf
fiadds
jbe
neg
dec
in
mov
xchg
scas
dec
sbb
mov
adc
pop
mov
fcoml
dec
in
cmp
out
inc
push
cmc
cmpsb
push
pop
mov
xchg
inc
out
loop
cmpsl
gs
rolb
mov
ljmp
push
mov
pop
test
and
dec
sbb
pop
mov
test
ficoml
lahf
scas
inc
out
mov
push
sbb
faddl
add
inc
arpl
or
bound
xchg
pop
xor
scas
mov
push
int3
insl
je
xchg
in
sbb
popf
leave
mov
jge
sbb
pop
inc
jmp
aaa
pcmpeqw
gs
aas
dec
pop
lret
mov
lds
mov
in
stos
mov
xchg
clc
stos
xchg
pop
mov
jne
pop
jns
push
xchg
out
adc
lret
jbe
mov
int
cmpsb
push
sbb
sbb
sarl
int
pop
jmp
sti
popa
repz
cwtl
jno
imul
adc
push
mov
aad
stos
cmp
scas
andl
cli
lret
dec
sahf
sub
mov
adc
pop
cli
xor
ja
insl
pop
mov
aaa
fnstsw
jge
leave
imul
or
or
movsb
push
rorb
sbb
cmp
movsb
xor
jg
xchg
mov
jecxz
sub
fldt
pop
leave
in
std
in
iret
sbb
scas
flds
insl
scas
ljmp
pop
lret
outsb
loop
mov
pop
es
mov
mov
int3
xor
mov
fsub
push
imul
mov
insl
and
pop
cs
je
lds
aas
xlat
scas
mov
test
test
ret
daa
bound
loopne
adc
xor
shll
fdivrs
mov
xlat
cmp
aas
xor
fstl
push
cmp
movsl
adc
out
sahf
jno
addr16
jg
mov
sub
out
add
push
dec
jmp
scas
push
inc
adc
call
arpl
jmp
jecxz
pop
lret
mov
movsl
repnz
leave
inc
orl
fsubrs
idivl
pop
jno
xlat
ret
add
xor
pop
add
push
and
rcl
mov
adc
xor
les
lods
adc
lret
cmp
pop
insb
aad
mov
gs
xor
sahf
inc
sbb
fldenv
adc
jmp
lods
test
lea
cmc
aad
mov
scas
out
int
add
lea
ljmp
or
push
pop
or
mov
mov
pusha
adc
in
insb
and
sahf
out
aas
sbb
addr16
in
aas
imul
ds
mov
pop
gs
mov
sbb
jno
push
cmp
clc
fiadds
inc
bound
xchg
inc
push
daa
dec
cmp
sbb
lods
lds
stos
push
fbld
sbb
outsl
aas
jmp
outsl
and
test
xor
imul
and
mov
or
push
sub
mov
inc
sbb
cmp
dec
cs
push
jnp
jp
push
or
cltd
orb
pop
fdiv
sub
fldenv
stc
call
mov
ret
sub
jns
bound
push
cli
push
fsub
orl
adc
sbbb
lret
adc
adc
pop
sbb
cmp
mov
fcmovnbe
sbb
lea
dec
icebp
fstl
or
mov
or
and
xorb
pcmpgtw
aam
dec
mov
jmp
pushl
mov
data16
xchg
push
lcall
mov
mov
rcrb
mov
xchg
pop
xchg
fnsave
xchg
pcmpeqd
add
ficoml
loope
cltd
pop
mov
mov
cmc
cld
xorb
pop
insb
push
inc
call
cltd
rorb
inc
loopne
adc
loop
and
sbb
into
mov
sbb
imul
xlat
aaa
stos
sbb
cmp
in
shl
pop
repz
or
data16
xchg
lret
mov
insb
lret
xor
out
fwait
cmp
test
cmp
adc
or
mov
sub
fidivrs
mov
dec
lods
cli
mov
mov
out
ret
das
lcall
mov
push
adc
jmp
jecxz
jno
dec
dec
push
xchg
test
sti
ja
nop
and
add
mov
push
addr16
cmp
mov
data16
jp
je
push
adc
or
cmpb
cmpsl
mov
sbb
mov
jle
cli
cltd
aad
ds
rcrb
jge
mull
repz
sti
pop
aas
or
int
mov
movb
sub
mov
js
lret
or
push
enter
pusha
sbb
xchg
lock
push
or
jecxz
inc
mov
shll
jb
add
mov
mov
popf
in
sbb
rcrb
mov
into
xlat
push
nop
jg
out
subl
gs
das
stc
jo
adcl
cltd
out
shrb
ljmp
adc
adc
inc
pop
xchg
aaa
cmpsb
adc
adc
sub
stc
sbb
push
sub
loopne
nop
jo
push
add
cmp
mov
and
mov
xor
cs
notl
xor
xchg
leave
pop
xor
mov
xchg
or
pop
test
mov
or
js
add
jno
sub
cli
and
std
popa
dec
xchg
jp
pop
imul
repz
sub
adc
or
sub
mov
push
xchg
movsl
fstpt
mov
push
in
popf
and
out
sub
outsb
ja
pushf
pop
imulb
cmpsl
mov
xor
popa
shll
jo
inc
add
jle
mov
mov
mov
and
lret
and
aaa
add
mov
jle
out
aaa
insb
ljmp
ljmp
aaa
popa
jle
mov
or
xchg
popf
push
mov
dec
inc
cld
out
ds
mov
mov
lea
imul
out
mov
int3
outsb
rcrb
sub
call
mov
fwait
xor
in
imul
sub
xlat
and
pop
mov
sbb
cmpsl
aas
fisubs
adc
je
sbb
loop
enter
mov
movsl
inc
ret
adc
incb
xchg
pop
sub
jg
jle
cmpsl
mov
je,pn
nop
pop
in
iret
jmp
jle
std
lds
and
outsb
movsb
cmp
dec
cmp
jmp
inc
mov
lcall
xchg
mov
addb
loop
dec
cmp
nop
mov
repnz
es
jb
pushf
lcall
sub
cld
xor
push
stos
pop
pop
cmpsl
mov
test
or
mov
fcomps
sbb
ljmp
stos
out
jmp
stos
insb
ss
inc
mov
cmc
aam
xor
outsb
cmp
mov
push
xchg
push
in
lds
aaa
and
mov
xlat
test
mov
sbb
ljmp
jge
lcall
inc
add
call
pop
sub
pop
pop
insb
jl
fistps
and
mov
lcall
sbb
mov
mov
xchg
adc
into
and
imul
mov
mov
test
jo
push
pushf
fsubrp
xor
sahf
or
dec
jns
js
mov
cmp
mov
push
scas
ja
xchg
mov
inc
daa
pushf
dec
call
aad
mov
mov
cmp
add
ljmp
pushf
shlb
dec
in
movsb
jecxz
ja
das
inc
add
lret
sub
or
xlat
rorb
xchg
inc
cltd
mov
cmp
in
mov
aam
pop
repz
movsl
jecxz
push
mov
arpl
xchg
jns
in
or
ss
adc
dec
sbb
test
add
pop
mov
out
pop
mov
jbe
outsl
lcall
out
jle
mov
jnp
leave
ret
mov
stos
cmp
std
std
mov
dec
push
cs
inc
xchg
repz
mov
mov
lods
sahf
push
sbb
cli
in
mov
nop
dec
nop
test
mov
loopne
mov
mov
cmp
mov
mov
sub
sub
xor
and
je
sbb
mov
inc
add
mov
cmpsl
mov
icebp
ret
lret
hlt
xchg
repnz
les
vmulpd
push
stc
cwtl
test
cltd
xchg
and
popw
cmpsb
mov
ja
xor
xor
jae
push
sub
pop
sub
movsb
xor
jbe
mov
dec
mov
pop
push
lahf
fcoml
jp
xchg
mov
inc
js
jle
or
xor
xor
in
rcrb
sbb
test
cmc
dec
lods
inc
adc
sub
scas
xchg
imul
lret
inc
mov
lret
incb
jp
mov
mov
push
rolb
and
enter
fucom
test
sub
adc
push
xor
push
je
mov
push
jns
cltd
loopne
add
mov
insb
pop
pop
inc
add
lods
mov
inc
xlat
mov
dec
pop
inc
in
aaa
jne
nop
test
pop
mov
inc
stos
xor
loopne
stc
lret
pop
insl
pop
jl
inc
mov
jo
sub
and
sti
pop
das
mov
inc
add
repz
sbb
nop
out
jle
push
lcall
pop
xchg
lcall
mov
fbstp
sbb
mov
mov
sbb
cmpsb
sbb
bound
xchg
rorl
mov
jmp
andl
jbe
sbb
pusha
and
jp
js
mov
cmp
push
push
mov
adc
int3
add
pop
adc
add
cwtl
jno
and
push
lcall
imul
sub
xchg
nop
mov
mov
lods
out
cltd
gs
test
mov
pop
mov
jns
mov
mov
sub
push
sbb
mov
lock
gs
and
shrb
mov
xor
andl
mov
cmp
outsl
and
mov
icebp
nop
push
into
jg
fnsave
pop
into
push
stos
push
enter
ret
xchg
xchg
mov
and
repnz
add
decl
sbb
xor
cmc
jo
xor
mov
and
push
cmp
repz
sahf
xor
testb
test
push
scas
int
mov
xor
or
lods
inc
push
mov
add
adc
xor
jmp
test
ret
aas
cwtl
jle
xor
sub
sarb
leave
dec
inc
mov
loopne
sbb
inc
push
xor
test
int3
add
inc
clc
fldenv
lahf
les
repnz
or
xchg
int
rcl
sbb
push
or
mov
stos
push
inc
lcall
sahf
aas
xchg
cmc
mov
pop
add
gs
into
push
push
and
add
pop
push
jmp
mov
orb
cmovl
fidivrs
mov
loope
add
mov
or
stc
push
int3
or
sub
dec
jmp
dec
add
dec
xchg
stos
push
or
clc
push
mov
ss
sub
out
push
imul
mov
rorb
dec
jae
cmpsl
xor
scas
add
movups
push
mov
ljmp
fwait
mov
js
call
push
inc
xchg
lahf
out
test
push
sahf
dec
cld
pop
jl
int
mov
in
out
ljmp
add
in
lahf
fildl
aad
sub
sbb
add
mov
sahf
sbb
push
sub
daa
in
cmpsb
call
xor
sbb
negl
fistpl
gs
and
jl
mov
fstpt
andb
fcoms
int
push
inc
call
test
outsb
mov
or
xchg
das
mov
lds
jmp
or
or
dec
cltd
pop
mov
cmp
push
pop
es
shlb
mov
add
cmovno
push
mov
sbb
stc
mov
pop
paddd
add
lcall
popa
xchg
fnstcw
sbb
test
sbb
movsb
es
ja
sarl
dec
int3
enter
sarl
mov
jne
pusha
cld
clc
stos
xlat
iret
bound
sub
xchg
aad
xor
inc
pop
roll
leave
and
and
insb
jb
mov
cmpsl
or
rcrb
xor
popa
fadd
jecxz
lock
mov
and
add
ret
imul
ret
iret
mov
mov
mov
add
adc
dec
fdivs
fsubr
dec
movsl
hlt
enter
aaa
rolb
adc
mov
lcall
int3
mov
das
inc
cmp
dec
push
in
cmp
iret
pop
sbb
enter
and
mov
pop
loop
add
test
insl
adc
dec
or
mov
or
cmpl
fcompl
faddl
xor
and
mov
dec
ljmp
ja
xor
sub
jp
pop
ljmp
xor
hlt
clc
sub
sbb
es
adc
rolb
out
xor
in
mov
imul
pop
lds
out
xlat
add
mov
pop
cld
dec
xchg
adc
clc
xchg
xchg
jl
push
adc
mov
or
push
nop
xchg
or
mov
cmp
in
aad
test
test
xchg
mov
ret
xor
arpl
imul
cmp
sahf
rclb
fcomip
movsl
mov
clc
sub
lcall
cmp
dec
push
push
push
xor
mov
xor
dec
or
xchg
xchg
pop
jl
cmp
mov
pop
cltd
lods
ja
gs
movsl
aam
mov
out
inc
mov
out
pushf
aam
jb
arpl
jnp
or
fcmovu
xchg
mov
sub
mov
xor
push
pop
mov
or
je
or
sbb
call
loopne
inc
lret
jg
mov
push
push
shlb
int
lcall
xor
stc
in
and
sub
or
mov
nop
add
dec
out
lahf
arpl
cli
lock
jae
add
jbe
xor
cmp
xor
pop
mov
push
les
or
mov
pop
mov
cmp
pop
push
sbb
jmp
push
neg
and
stos
dec
ret
jl
movsl
js
adc
fwait
jmp
lret
rclb
xor
gs
or
lcall
mov
mov
push
or
push
dec
aad
lahf
jnp
jmp
addr16
xor
hlt
loope
mov
dec
aaa
iret
push
leave
test
pop
cli
jb
xchg
push
adc
jecxz
dec
repnz
mov
lcall
mov
lret
cmp
mov
fs
or
subb
cmp
into
insl
inc
sub
or
shlb
sub
push
cmp
loopne
xchg
cmp
mov
popf
add
mov
movsl
inc
or
fidivrs
sub
std
xchg
add
in
shrb
stos
ret
mov
xchg
mov
mov
dec
ficoml
pop
mov
and
push
xorb
nop
loop
popl
cmpsb
std
rolb
daa
pop
sti
mov
enter
in
xor
stos
mov
pop
daa
pop
je
dec
testb
popa
loopne
lahf
push
and
divb
add
sbb
mov
jp
lds
push
xchg
popf
xchg
imul
sbb
add
cld
bound
popa
mov
jb
jmp
mov
add
aad
mov
cmp
push
pop
sub
js
adc
dec
hlt
adc
and
int
xchg
icebp
jns
push
sbb
sub
push
pop
js
std
rcrb
in
push
ljmp
insb
push
mov
mov
mov
inc
iret
and
fdivp
movsb
xchg
jl
mov
xor
mov
push
inc
or
xor
in
popf
daa
pushf
clc
out
cmp
test
or
mov
cmpsl
dec
cltd
in
or
inc
push
cltd
cmp
mov
dec
sbb
jg
xchg
cmp
loopne
fisubs
jb
mov
int3
dec
call
jp
or
popa
sub
push
add
rorl
lods
leave
adc
icebp
inc
pop
push
jmp
sub
shlb
cli
int3
push
xchg
cmp
add
inc
jmp
adc
inc
cmpsb
cli
jmp
iret
out
out
adc
mov
sbb
pushf
icebp
fs
add
xchg
mov
push
mov
sub
stos
mov
sbb
int
roll
or
sub
and
dec
dec
insl
push
xchg
out
int3
sbb
pusha
jle
add
gs
pop
adc
es
pop
pop
out
sahf
or
cs
mov
dec
or
and
xchg
mov
pop
mov
inc
xor
repnz
or
mov
test
dec
jp
es
stos
adc
mov
jo
sbb
lret
nop
jge
test
cmpsb
hlt
cmp
bound
sbb
call
mov
and
insb
dec
push
push
imul
stos
pop
iret
stos
inc
enter
pop
addl
jne
fdivrs
loopne
out
push
outsl
push
adc
stos
xchg
push
add
ds
lock
push
sub
mov
ds
xorl
out
out
fstl
cmc
push
sub
out
jg
fistpl
ljmp
movsl
nop
mov
xchg
stos
adc
rcr
adc
fs
divb
xchg
jno
lcall
cmp
aam
aam
fiaddl
mov
xor
lcall
testb
js
pop
inc
push
fsubl
push
sub
adc
test
js
sbb
je
add
add
popa
dec
pop
push
push
mov
loope
push
mov
push
andl
xor
ss
movsl
inc
xchg
push
popa
std
pushf
add
add
jae
shrb
cs
cmp
xchg
or
out
fnstenv
or
iret
mov
mov
subl
imul
insb
xlat
jmp
mov
cmp
xchg
scas
add
cmp
fmull
push
fbld
jle
stos
cli
add
bound
jbe
mov
aad
mov
jne
push
dec
mov
jmp
mov
rolb
sub
sbb
daa
testl
mov
cmpsb
dec
adc
jle
xorb
test
xchg
fstps
cmp
dec
mov
sbb
shrl
jg
sub
lahf
movsl
push
addr16
push
push
insl
das
rcrl
adc
aas
jmp
xor
cmp
cmp
or
call
rcll
push
test
pop
pop
dec
les
aaa
jo
fstps
lds
sti
aam
rcrb
jg
and
mov
pop
cs
mov
pop
adc
mov
xchg
popa
mov
adc
or
pusha
rcl
call
sbb
xor
adc
jne
stc
inc
xchg
cmc
daa
push
rclb
dec
xchg
and
jp
cmp
xchg
sub
test
or
cmpsl
inc
dec
push
loopne
arpl
into
stc
rcrl
mov
sub
jnp
pop
int
filds
jmp
xor
mov
out
xchg
das
push
mov
movsl
shll
push
sbbl
push
sbb
daa
in
push
mov
push
inc
and
add
in
xor
sub
dec
aas
pushf
in
jle
push
pop
and
lods
shll
subl
enter
ret
or
adc
lock
pushl
mov
push
cld
sbb
lret
fcompl
gs
rcll
fstp
insb
ss
fnstsw
jo
cmp
aas
jns
les
sub
shr
mov
pop
cli
push
or
or
pop
jbe
ret
mov
mov
xchg
imul
test
cwtl
outsl
push
lds
fs
dec
sbb
lock
call
das
shr
imul
clc
add
adc
xchg
push
lret
es
pop
cmpsl
jge
sbb
pop
outsb
stc
add
and
jecxz
xchg
loope
test
mov
out
hlt
jl
loope
inc
pusha
add
xlat
gs
hlt
das
mov
pop
popa
sar
iret
or
sarl
bound
mov
testb
push
mov
jae
dec
rcll
pop
jae
xchg
jnp
jmp
cmpsb
xorb
xorb
adcl
shll
or
aam
mov
dec
push
hlt
and
push
movsb
dec
jae,pn
out
inc
or
push
pop
cli
mov
dec
jnp
int
gs
icebp
lock
scas
cltd
lods
cmp
xlat
outsl
mov
pop
rclb
dec
ficomps
aas
push
lods
das
mov
and
shll
sub
sbb
mov
data16
dec
jl
in
push
jnp
je
add
or
pop
repnz
sarl
xchg
call
out
testb
push
push
sbb
mov
shll
xchg
inc
int
test
fcomps
fs
xor
insl
inc
out
mov
lea
jle
jge
mov
stos
loop
adc
mull
fisttpll
sub
data16
mov
test
pop
xchg
add
jp
fbld
dec
loop
xchg
iret
jnp
pushf
loopne
adc
mov
mov
jno
sbbb
dec
fistps
mov
mov
inc
lahf
sub
test
test
dec
shr
cmpsb
nop
mov
sub
dec
mov
into
imull
addb
lahf
sub
into
shlb
adcb
lcall
lds
or
int3
xor
xchg
jbe
jns
icebp
mov
stc
push
test
fdivrp
out
imul
add
ret
or
inc
mov
in
rcll
lea
jno
inc
and
ror
adc
xchg
out
les
ret
lock
std
mov
and
adc
shrl
cld
mov
push
cltd
cmpb
cmp
call
shrl
jne
scas
lock
enter
pop
sub
add
int3
add
int
pushf
xchg
mov
xchg
data16
cmp
push
push
dec
out
daa
jns
ret
clc
mov
inc
addl
lock
sbb
pusha
xlat
add
repnz
adc
jp
inc
or
xchg
popa
or
aad
divl
inc
jl
fldcw
add
xchg
sbb
mov
cmp
cmc
dec
sub
rclb
in
lret
outsb
enter
int
pop
push
subb
dec
xchg
cmpsb
rcrb
imul
xor
inc
sbbb
xlat
add
dec
imul
sbb
inc
xor
pusha
movsb
shrb
rolb
inc
mov
mov
leave
xchg
push
push
inc
pop
push
icebp
mov
sti
or
pusha
in
mov
rclb
add
xchg
icebp
push
or
std
xor
mov
and
add
lock
mov
dec
lock
movsl
jmp
cmp
mov
imul
leave
pop
pop
imul
pop
scas
jmp
leave
int3
fldcw
push
movsb
iret
aas
jo
push
sbb
negb
test
push
xor
lret
xchg
sub
clc
sbb
jo
and
aad
lock
es
jne
mov
mov
pop
push
cmp
push
cmp
arpl
push
rcl
mov
xor
cli
or
push
cs
enter
out
sub
sbb
and
mov
or
add
cli
jo
in
push
sub
out
psllq
xor
push
int
and
push
mov
pop
mov
insb
enter
mov
jmp
push
jne
inc
and
mov
jmp
jno
test
and
imul
add
outsl
cli
jae
sub
inc
in
cli
loop
scas
sbb
filds
mov
loopne
adc
xchg
mov
popa
or
ret
out
cmpb
and
or
rclb
bound
repnz
push
lds
dec
into
pop
jmp
inc
mov
cltd
jae
or
repz
sub
iret
push
in
sub
roll
mov
aas
loopne
gs
fnsave
mov
rcll
adc
xchg
xor
inc
sbb
test
jecxz
xchg
in
imul
cmp
xor
sub
lahf
add
into
pop
pop
push
iret
jp
jle
jle
out
or
mov
jo
pusha
or
gs
movsl
dec
lret
call
ror
pop
mov
inc
fnstsw
xchg
leave
sbb
add
stos
pop
shll
in
inc
scas
scas
xor
and
or
mov
push
in
test
mov
out
pop
nop
icebp
jp
ja
jae
mov
scas
cmp
mov
arpl
mov
cmp
roll
les
add
fisubrl
out
movsl
and
sub
aas
push
fisttps
sti
repz
push
add
jge
out
fsubl
mov
cltd
inc
cltd
into
pushl
mov
jno
arpl
inc
sti
cmp
inc
adc
ljmp
cmp
ror
pop
int
clc
jp
cli
or
aad
push
mov
mov
iret
push
movsl
inc
adc
or
jbe
cmp
jns
mov
mov
xchg
pop
cmp
mov
dec
inc
call
repnz
pop
ret
shl
lret
sbb
sbb
xchg
push
add
and
pusha
loop
fcmovb
jo
and
call
adc
sbb
movsb
mov
ret
aam
addr16
enter
insb
insl
and
hlt
outsl
lret
lahf
dec
and
mulb
leave
les
insb
sbb
jb
jns
mov
lahf
pop
imul
lds
mov
scas
jo
addr16
sub
mov
icebp
xchg
inc
inc
insl
stos
jg
test
mov
lea
fiadds
neg
cmp
push
mov
add
roll
lahf
push
test
inc
lea
inc
push
and
push
fiaddl
sarb
adc
or
mov
fidivs
add
std
fs
stc
jbe
mov
jno
or
jnp
fiaddl
roll
cmp
cmp
aaa
pushf
push
mov
mov
sbb
mov
outsb
arpl
adc
bound
out
sub
lods
mov
xchg
jp
sar
ds
ja
mov
jle
xor
mov
cmpsl
jmp
xchg
scas
mov
into
cmp
push
fs
int
fiadds
int
push
adc
fucomip
or
imull
lret
imul
sub
roll
push
sti
ret
push
push
xor
pushf
mov
aam
int
jg
push
cmp
daa
iret
lods
cmp
xchg
roll
jl
cltd
sub
xlat
sub
cmc
pop
js
pop
or
outsb
push
push
dec
rcrb
or
add
jns
popa
adc
mov
aam
xchg
adc
push
ficoms
loop
std
das
push
push
gs
pop
adcl
xchg
xchg
arpl
stos
mov
lret
mov
pop
inc
add
add
out
das
jne
popa
icebp
movsl
add
jmp
cmp
sub
test
inc
pop
test
in
pop
push
bound
adc
cmp
jle
lods
jbe
push
sub
or
xlat
adc
push
pop
add
lahf
inc
pop
hlt
data16
sahf
push
shll
or
push
icebp
jle
adc
push
addl
addl
shll
ficoml
icebp
inc
cmovno
mov
jno
pop
dec
mov
lds
roll
jmp
dec
jno
shr
cwtl
iret
push
cmpb
cwtl
push
lds
rcll
daa
enter
lea
rorb
in
clc
and
dec
iret
in
repnz
xchg
or
std
or
and
call
pslld
or
stc
xchg
pop
popa
and
cltd
or
add
sub
cwtl
pop
xchg
hlt
enter
cmp
out
xchg
scas
sbb
and
add
push
xlat
ljmp
cwtl
stos
push
inc
loop
loopne
push
lods
test
sbb
scas
out
fists
add
mov
or
testl
dec
jl
les
into
outsb
andb
idivb
ja
push
mov
sbb
xchg
pop
xchg
dec
rol
cmc
dec
mov
mov
je
dec
stos
sahf
pop
lret
or
jne
rcrl
bound
sti
inc
dec
or
xchg
clc
les
pushf
pop
in
faddp
aaa
xor
outsl
xchg
add
push
cmp
push
xchg
dec
or
popf
cwtl
inc
push
jae
in
stc
push
into
xchg
pop
imul
loopne
dec
dec
dec
nop
xchg
stos
mov
pop
ljmp
roll
pop
aaa
mov
test
add
fsubr
cmpsl
mov
rcrb
inc
fwait
lret
or
rclb
das
and
rcll
mov
or
adcl
scas
push
sahf
mov
cmp
push
sbb
mov
movsl
inc
sub
dec
jb
into
sub
mov
dec
mov
arpl
xor
jp
sub
add
lret
pop
mov
cmp
xor
push
push
andb
mov
mov
mov
pop
gs
adc
in
xchg
out
rcrb
mov
jg
add
fisubs
jb
jle
adc
xor
add
movsb
and
mov
cmp
pop
cmp
in
lret
push
ror
adc
adc
test
bound
nop
mov
cs
cmp
push
test
ret
cld
imul
jae
pusha
xchg
mov
xchg
or
pop
xorb
out
mov
sar
inc
fdiv
and
cmp
mov
loop
shlb
push
stos
sub
cmp
cmpsb
jne
push
sub
lcall
pop
mov
and
cld
jmp
movsb
rcll
or
push
pop
pusha
xor
out
iret
sub
mov
mov
and
das
cmp
jb
add
dec
loope
jns
mov
out
stc
jmp
sub
pop
rcl
xchg
loopne
popa
mov
fimull
shll
lods
xchg
adc
xchg
sahf
mov
inc
mov
mov
lds
outsb
loope
jbe
dec
insl
sbb
jno
push
jmp
icebp
push
or
jg
push
mov
mov
sub
insb
push
aas
jg
mov
push
loope
adc
clc
rolb
lcall
xchg
push
das
xchg
icebp
mov
mov
jle
lret
sub
jns
imul
or
sbb
xchg
lods
add
cmp
sub
mov
push
sbb
push
adc
pusha
mov
xor
adc
mov
xchg
out
aad
and
cmp
fwait
mov
ja
insl
inc
es
ficomps
popfw
mov
dec
cmp
test
jge
mov
sti
xchg
insb
outsb
dec
pushw
fisttpll
add
jns
fsubs
pop
push
lods
xchg
test
inc
in
cmpsl
mov
cld
scas
xlat
cmc
test
push
lret
hlt
pop
pop
xchg
sub
cmp
adc
and
in
pop
sti
xchg
ljmp
iret
jmp
nop
xor
mov
dec
push
mov
popf
xor
pop
or
xchg
lcall
sbb
or
call
movswl
test
adc
jnp
jae
sbb
insb
inc
cmp
adc
pop
scas
movsb
cmp
lods
test
xchg
jl
popa
movsl
lods
pop
jl
pop
cmp
jmp
scas
jl
in
cmp
mov
and
xchg
ja
iret
arpl
negl
insl
imul
dec
pusha
sbb
or
push
xor
xchg
lods
or
add
jns
jmp
xchg
mov
push
imul
inc
sbbb
sahf
inc
xchg
sub
add
pop
sbb
add
pusha
sbb
mov
sbb
mov
fldl
test
popf
xchg
arpl
iret
push
add
sbbb
or
dec
nopl
ficompl
lds
imul
insl
or
int3
mov
cmpsb
imul
shll
arpl
in
mov
jns
xor
pop
in
dec
adc
jno
pop
mov
mov
out
cs
xchg
jo
push
lods
dec
mov
inc
test
jb
in
cmp
sbb
inc
cld
xchg
subb
adc
jg
mov
xor
pop
add
out
mov
adc
dec
sub
inc
pushf
push
push
mov
ss
ret
daa
sahf
pop
stc
jl
repz
add
sbbb
loopne
aaa
insb
out
cmp
and
into
dec
in
xchg
lock
pop
jnp
ret
in
add
mov
aaa
xchg
pop
into
add
loope
stos
loopne
xlat
loopne
and
aad
push
pop
popa
and
fwait
ja
adc
enter
negl
dec
movsb
inc
mov
addb
hlt
jmp
or
test
sbb
ljmp
inc
jmp
or
xor
add
sbb
ljmp
stc
test
or
mov
dec
mov
push
sahf
jmp
pop
jo
push
jo
das
mov
fidivrl
jo
in
repz
push
int3
shrb
int3
mov
push
clc
cmp
mov
add
mov
dec
jae
repnz
notl
rorl
sbb
ljmp
test
mov
cmpsb
push
cmp
mov
loop
ret
shll
stos
add
daa
dec
adc
push
mov
andl
scas
in
sbb
loop
pop
sbb
cmpl
add
dec
inc
or
mov
stos
inc
lahf
push
es
push
push
pop
xorb
or
shlb
cmp
imul
rorl
adc
movsl
mov
dec
icebp
mov
adc
jmp
mov
sahf
loope
cwtl
jl
push
dec
subb
bound
cwtl
pop
mov
xchg
mov
mov
in
cs
loop
sbb
sti
inc
shlb
enter
lock
pop
add
fmul
arpl
out
sub
xor
push
inc
rcrl
mov
out
xchg
and
jecxz
stos
cmpsl
adc
insl
mov
adc
xlat
cmp
in
push
sbb
mov
in
push
mov
mov
push
mov
cmp
mov
cmpsb
ja
and
insl
jmp
mov
lahf
pop
pop
or
js
and
xor
push
test
xchg
inc
or
push
or
sahf
jg
xchg
sub
add
jnp
jl
mov
in
in
das
out
or
rcrb
cmpsl
or
sub
insb
pop
rolb
mov
dec
mov
repz
out
push
push
push
das
cltd
test
push
jp
stc
mov
lcall
xchg
push
mov
fidivl
lret
enter
test
inc
push
inc
jne
xor
inc
xorl
or
pop
lea
out
jnp
loop
push
popa
test
inc
in
mov
xchg
daa
cld
ss
jg
pop
pop
jb
mov
enter
jno
cs
or
mov
pop
insb
dec
sub
jl
push
in
mov
mov
and
mov
add
fs
pop
mov
add
jle
cwtl
mov
mov
cs
sti
loopne
leave
jae
fisubrs
call
not
xor
sub
pop
dec
add
test
pushf
jmp
ret
xchg
push
gs
ficoml
xor
leave
or
inc
jecxz
stc
or
xchg
mov
aaa
xchg
xor
xchg
cltd
add
cli
test
adc
fnsave
test
sbb
dec
cmpsb
jo
add
dec
cltd
sub
xchg
shrl
jnp
mull
mov
cmp
xor
xchg
add
mov
jecxz
xlat
push
shl
lock
rol
push
pop
pop
jl
push
jne
push
xor
cmp
xchg
fwait
jp
int3
adc
sbb
xor
out
in
pushf
push
dec
inc
das
data16
scas
pop
cmpsb
movsb
jo
push
fistps
push
in
xchg
jae
cmc
iret
jecxz
stc
mov
imul
pop
dec
sarl
es
dec
outsb
addr16
mov
fwait
movsb
repz
pop
mov
repz
xor
out
mov
lret
aam
lret
fstpt
divl
loopne
call
ljmp
mov
out
dec
xchg
ljmp
inc
pop
repz
add
fdivs
sub
aas
iret
pop
mov
rcll
je
xchg
mov
sbb
inc
ret
ret
sbbl
adc
in
cmpsl
ss
mov
je
fsubrs
sub
icebp
jb
sub
jmp
mov
mov
add
movsb
inc
cli
mov
mov
fldcw
das
mov
push
stos
lea
repz
mov
cmp
cmc
cmp
cmp
push
sbb
add
popl
add
mov
mov
aas
insb
mov
aaa
cwtl
xor
pushf
push
ror
push
movsb
mov
jbe
dec
xor
xor
gs
sarb
sbb
lret
add
int
xor
nop
mov
les
shr
clc
rorl
arpl
fstp
cltd
inc
out
pop
mov
fcoms
repnz
adc
push
push
cmpsb
add
leave
shrl
sub
inc
add
mov
and
inc
sbb
in
cld
mov
lahf
sub
sub
sbb
inc
jmp
lret
ficoms
cmpsb
add
fcomp
mul
mov
xchg
gs
mov
insb
imul
iret
xchg
stos
and
cmc
pop
mov
cmp
test
mov
add
repnz
push
decb
push
mov
adc
pop
cmp
rolb
repnz
pop
stos
fldt
insb
sti
aam
loopne
adc
je
or
stos
std
outsl
push
fcomi
push
xlat
cmp
aad
xchg
into
in
js
mov
lret
xchg
and
aaa
mov
push
inc
dec
mov
dec
adc
fimull
lret
movsl
out
jns
cmp
sbb
or
xlat
lcall
jge
jge
jl
das
push
xchg
aas
stos
lock
xor
dec
pop
inc
imull
into
ljmp
inc
mov
je
orb
dec
inc
aam
mov
push
aaa
inc
addr16
pop
pop
adc
in
jne
jb
push
pusha
xor
lahf
sub
push
idivb
sub
adcb
lcall
mov
mov
pop
inc
push
push
jmp
call
jp
cmp
mov
enter
lret
sub
xlat
lods
push
lret
je
incl
leave
adc
fnstenv
hlt
jge
xor
scas
or
inc
mov
jg
pop
mov
stos
xchg
js
in
cli
dec
jne
int3
insl
adc
mov
mov
lods
in
hlt
movsb
push
xchg
push
push
xchg
add
cli
xor
adc
xchg
sbb
adc
filds
lds
pop
sbb
daa
add
sub
sahf
rolb
icebp
xchg
jno
jmp
xor
sub
sti
xchg
cli
mov
pop
dec
cwtl
adc
xor
mov
cwtl
mov
imul
xchg
gs
mov
mov
enter
jnp
jp
je
mov
insl
popf
mov
jb
push
aam
xchg
adc
mov
jge
fwait
jmp
xlat
lods
or
and
gs
mov
loop
or
icebp
push
xchg
lcall
into
push
cmp
inc
push
lea
push
aaa
hlt
test
fisubl
dec
mov
out
push
jmp
test
inc
xchg
xor
movsl
ret
repz
push
outsl
dec
aam
aad
cmp
mov
jno
push
or
sub
adc
fs
iret
xchg
jns
xor
loope
push
add
sub
xor
das
daa
mov
add
pop
je
out
xor
jb
loope
loop
mov
push
lret
jl
mov
push
shll
and
popf
sbb
xor
add
lcall
mov
das
jl
lcall
cmp
nop
jmp
int3
add
repz
mov
mov
add
push
out
dec
jmp
fisubrl
jo
cli
sbb
xor
addr16
sbb
mov
jne
or
fidivl
push
mov
out
jle
je
imul
adcb
jb
ljmp
mov
int3
sbb
mov
lret
and
enter
shl
mov
loope
aad
cmp
dec
test
inc
mov
in
mov
cmp
addps
jo
pop
clc
fdivrl
xlat
mov
outsl
rcll
jmp
pusha
cwtl
rcl
pusha
and
enter
sahf
mov
out
repz
and
test
push
sbb
mov
xor
pop
mov
out
lret
mov
sbb
movsb
mov
cwtl
hlt
adc
mov
fisubrl
or
cwtl
sahf
repnz
inc
cmc
mov
stos
ss
idiv
adc
inc
aaa
xor
pop
leave
in
stos
dec
inc
jmp
and
imul
jle
idiv
cmp
test
sarb
cmp
rcll
sarl
xchg
dec
mov
bts
dec
jnp
sbb
sbb
loope
pop
js
adc
jge
pop
push
mov
sub
mov
push
jmp
jb
jo
call
mov
loop
leave
xor
adc
mov
inc
mov
aaa
lds
jb
pop
mov
and
and
not
and
xchg
push
cltd
push
inc
push
in
ret
test
or
sbb
mov
out
inc
pusha
lcall
je
test
outsl
dec
int3
lock
and
orb
rcl
add
pop
ret
sti
test
ss
mov
adc
add
std
jmp
cld
sub
int
dec
mov
out
ss
pop
pop
lret
fcomp
xor
and
pusha
xchg
std
outsl
lods
jl
icebp
push
clc
dec
xor
cs
in
stos
in
mulb
lret
cmp
into
int3
cmpl
lock
movq
sti
xchg
or
adc
sbb
push
push
adc
and
cmp
call
inc
lcall
xchg
iret
add
imul
mov
faddl
in
jb
xlat
js
insl
enter
sub
into
fsubrl
xchg
cli
jne
stos
mov
add
mov
sbb
cmpl
jne
mov
stc
add
stos
arpl
std
scas
int
negl
sub
xchg
daa
jmp
daa
es
movb
pop
cmpsb
repz
stos
cli
movsb
jae
inc
inc
lods
aam
cwtl
mov
out
in
or
pop
xor
outsl
mov
stc
shlb
mov
sub
fwait
xchg
jnp
xchg
cmp
into
fcmovbe
js
or
scas
pavgw
stos
lret
add
pop
sti
in
testl
movsb
push
or
mov
xor
mov
into
inc
or
or
ljmp
sub
fcompl
xor
jmp
sbb
inc
insb
pop
pop
jns
sub
jp
ljmp
sar
pop
rcrb
roll
test
jae
lods
xor
popa
negb
cmp
pop
out
jecxz
daa
scas
outsl
xchg
add
mov
and
adc
pusha
repz
cmc
cmp
into
subb
scas
add
or
imul
fisubl
lret
sub
pushf
mov
mov
pop
jo
inc
jmp
js
pop
leave
sub
cld
lods
jle
cmc
call
add
in
out
jae
cmp
aam
cmpb
sti
sub
movsl
and
aas
je
xor
iret
es
jp
rcrl
jmp
dec
sub
dec
outsl
dec
mov
ja
or
xchg
mov
cld
cmp
xchg
jne
mov
pop
lret
xchg
sub
push
or
sahf
into
sbb
repz
ds
insb
pusha
fcoms
test
adc
lea
add
pop
stos
push
mov
imulb
fs
or
sbb
addr16
loope
loop
pop
pop
sub
push
pop
rclb
push
or
jae
xchg
sub
and
movsl
pop
or
aaa
ficoms
pop
and
xchg
cltd
add
shlb
iret
mov
inc
into
popf
jno
out
leave
sub
leave
push
sub
inc
pop
das
fdivrl
inc
pop
fnsave
icebp
jge
mov
js
inc
in
gs
pop
fcoms
fcmovbe
jne
fwait
xchg
loopne
shl
push
dec
xchg
in
rcll
data16
scas
imul
sub
mov
lret
mov
addl
rcrb
xor
mov
sti
or
testl
das
jb
stos
and
pop
inc
adc
and
fildll
shlb
or
push
jbe
xchg
popf
push
in
loopne
lods
push
ret
pop
inc
mov
sub
shl
adc
insb
inc
jecxz
adc
inc
and
or
sbb
adc
add
xchg
add
jns
fxch
jmp
fwait
and
adc
out
sub
mov
push
pusha
data16
xor
out
es
mov
xor
dec
outsl
pop
roll
loop
jp
std
xchg
push
mov
in
fdivs
cmp
add
add
mov
dec
call
jl
pusha
leave
sub
out
sbb
aaa
out
pop
mov
test
iret
mov
cmpl
cmp
stos
inc
jae
insl
mov
sbb
daa
fs
data16
mov
lcall
movsb
dec
xchg
or
mov
mov
loop
loope
jnp
push
xor
mov
sbb
scas
pop
jns
jge
out
xchg
fimull
fptan
and
push
jle
rolb
data16
mov
xor
call
adc
sarb
mov
enter
sbb
jl
sub
fsubs
xchg
mov
ret
pop
stc
or
fwait
jb
int
sbb
shlb
movsb
lcall
add
mov
pop
xor
cmc
rcll
arpl
push
jecxz
pop
push
or
adc
scas
test
adc
or
and
sub
mov
push
pop
mov
filds
pop
dec
or
mov
fdivrs
rcl
mov
mov
call
fildl
add
jle
push
xor
in
push
push
cmp
movsl
stc
mov
adc
pop
les
mov
or
jmp
inc
dec
cmpsl
mov
mov
cmp
mov
mov
call
and
les
mov
cmp
cmpsb
lock
divl
adc
fisttpl
mov
sub
stos
adc
cmp
push
mov
and
adc
sub
ret
lds
dec
push
cmp
imul
movsb
cmp
add
enter
lret
popl
cmc
add
cmp
push
xchg
jmp
loope
cmp
lahf
cwtl
jp
mov
push
push
nop
push
mov
daa
push
fdivrl
xor
popa
jl
icebp
out
ds
or
dec
inc
xchg
xchg
mov
jae
sub
dec
sub
lods
jmp
iret
sbb
inc
push
shlb
pop
mov
imul
sub
dec
fsts
pusha
lret
xor
movsb
shr
loop
mov
push
out
adc
rolb
jle
pop
aad
push
cmpsl
fs
test
out
subl
rcrl
cmpsl
and
or
mov
push
push
xor
pushf
leave
bound
adc
sub
sub
iret
cmp
pop
adc
sub
jge
rcl
ss
xchg
xchg
cwtl
arpl
add
dec
cmpsb
pop
mov
sub
adc
push
xor
loop
jbe
mov
fisttpl
mov
aam
mov
mov
test
adc
test
jge
dec
cmpsb
jb
sbb
out
popa
pop
bound
and
jmp
xchg
data16
jno
dec
xor
mov
leave
scas
out
mov
stos
insb
stc
test
and
push
mov
dec
aam
cltd
lcall
or
gs
scas
or
mov
mov
and
test
push
push
xchg
and
or
mov
xor
cmpsl
sbb
xor
lock
dec
notl
int
js
push
addl
mov
jmp
loop
idivb
imul
jl
mov
out
divb
add
lret
pushf
mov
popa
call
add
lock
sbb
fs
dec
pop
sbbb
imul
push
lcall
fists
push
jg
addl
add
or
cli
ljmp
and
enter
jno
push
and
int3
dec
out
out
leave
mov
mov
fsubs
sahf
rcrl
fs
inc
int3
testl
dec
add
stc
jbe
lea
cli
leave
cwtl
in
cli
aas
push
push
mov
mov
fildll
outsl
sbb
insb
pop
add
aad
ret
pop
test
mov
je
ja
ret
cli
adc
sti
mov
cmpl
aam
and
addl
mov
cmp
inc
adc
in
dec
inc
popa
or
outsl
mov
shlb
push
xor
icebp
sbb
lret
adc
test
jnp
popf
push
mov
sar
cmp
and
jp
sahf
cmp
jbe
mov
loopne
aaa
lcall
mov
sbb
ret
in
imul
scas
inc
repz
adc
pushf
add
and
iret
mov
out
sub
cs
addr16
jnp
scas
mov
int3
das
out
arpl
jle
jbe
mov
ss
inc
fwait
push
stc
aaa
pop
xchg
cmpl
in
imul
loope
xchg
adc
roll
arpl
fisubl
ret
cld
mov
xorb
sub
mov
xor
xlat
fucomi
mov
and
stos
jmp
and
mov
mov
adc
cmpb
dec
sbb
addl
out
scas
push
xchg
sar
mov
mov
sbb
mov
jae
sbb
adc
insb
mov
jp
lret
test
fsubs
out
jg
es
adc
add
jl
push
jae
xorl
movsb
mov
push
mov
xor
pop
mov
xor
insb
loopne
mov
les
leave
inc
xchg
push
cwtl
dec
rorl
add
xchg
adc
adc
outsb
jge
inc
nop
or
bound
lds
inc
test
and
adc
test
adc
dec
jnp
test
and
pop
cwtl
out
std
push
jne
rclb
xchg
ret
scas
and
cld
mov
mov
dec
lods
jns
pop
or
push
dec
movsl
pop
cmp
push
sbb
pop
push
cmp
ja
push
push
cmp
lock
fcoml
cmpsb
jle
addr16
jge
ret
push
fbstp
test
cmc
xchg
std
push
add
push
je
xchg
mov
dec
aad
mov
dec
mov
dec
xor
or
or
mov
in
call
pop
hlt
sti
addl
cmp
aad
lock
or
mov
lock
pop
push
xor
xchg
xchg
ja
mov
mov
fnstcw
push
ficomps
mov
inc
jns
and
mov
ret
xor
scas
xor
mov
dec
or
adc
popa
std
sbb
in
push
mov
mov
mov
test
fcoms
inc
jmp
push
lea
sub
dec
cmp
filds
popa
sub
jbe
out
in
out
lock
xor
xchg
imul
or
mov
mov
xor
test
js
mov
push
arpl
add
mov
outsl
mov
ret
pop
call
ja
ja
mov
outsb
jae
mov
or
mov
jecxz
xchg
jns
mov
xchg
add
xor
addl
xor
add
xchg
adc
sub
popf
and
mov
and
lock
dec
imul
decl
ret
jl
out
ds
xor
into
in
dec
insb
add
loope
xor
sbb
lds
bound
fisubl
je
cmp
mov
bound
xchg
leave
inc
icebp
mov
xlat
movsl
out
push
test
outsb
test
inc
sti
dec
lock
ss
adc
jl
int
aas
sti
mov
pop
jne
xchg
fildll
scas
push
mov
subl
mov
push
fcoml
xlat
ret
pushf
dec
fstpl
add
cmp
lods
subl
mov
sbb
mov
andl
ds
outsb
and
jne
pop
jge
push
jo
ljmp
adc
into
fwait
dec
push
adc
movsb
pop
into
cwtl
insl
movq
jle
out
dec
xchg
scas
fbld
xor
shrl
outsb
jo
std
aas
xlat
in
push
xchg
aad
addb
adc
cmp
dec
pop
into
adc
mov
sub
aas
xlat
xchg
ss
ret
add
push
mov
jbe
xor
cltd
test
dec
jg
jae
movsl
or
nop
ss
sti
dec
jle
mov
dec
mov
mov
sub
pusha
lcall
imul
divb
xchg
imul
sbb
std
inc
xor
push
rcl
cs
lret
mov
ret
push
outsl
push
outsl
xor
in
push
test
add
mov
push
sub
pop
xchg
dec
aas
bound
mov
push
mov
mov
mov
jns
in
imulb
jo
mov
jnp
sub
pushl
outsl
lret
cltd
aad
cltd
mov
xchg
es
or
in
dec
fisttpll
push
add
pop
push
push
pop
shll
sub
nop
or
jns
movhps
loop
and
cmp
sbb
jbe
lods
xchg
pop
dec
gs
xlat
fidivl
outsb
aaa
adc
pop
push
sahf
dec
and
or
push
jge
or
push
rcr
jo
mov
jae
clc
mov
lret
aad
add
mov
shll
inc
adc
cmp
inc
mov
pop
outsl
jo
rcrl
pop
adc
sahf
sub
pop
or
sti
loop
mov
mov
or
inc
push
lock
add
mov
fistpl
outsl
push
das
fld
rorl
fmull
inc
and
cmp
or
jno
fildll
insl
stos
pop
fisubl
in
sub
and
adc
or
mov
jno
cld
je
subl
sub
cmp
sbb
cs
xchg
addr16
loop
scas
out
movsb
push
xchg
inc
decl
sbb
jg
clc
jbe
test
aam
addl
daa
sub
xchg
add
jns
imul
jnp
ss
jmp
outsl
push
outsb
xor
or
mov
test
mov
out
jo
jge
push
cmp
hlt
es
mov
pushf
dec
jnp
cmp
pop
sbb
ja
movsb
add
jge
push
aad
punpckhdq
fmuls
aam
fwait
push
jne
fs
mov
inc
jnp
mov
andb
mov
shlb
add
pop
jnp
push
push
adc
ljmp
adc
dec
add
test
lock
and
push
out
inc
in
inc
inc
pop
jge
aas
fmull
je
pop
push
adc
xchg
lds
fs
sbb
fnstcw
add
jne
adc
xchg
test
jno
mov
std
jl
js
xor
lds
xor
cld
jl
pushf
sub
hlt
mov
and
sbb
or
mov
inc
dec
add
lds
xor
dec
fdivl
outsb
cmpsb
call
jns
dec
imul
out
ds
push
push
xor
sbb
or
loop
and
mov
int3
cli
shll
stos
xchg
adc
mov
gs
out
push
mov
cs
rcl
mov
sbb
and
mov
pop
lret
inc
pop
fwait
sub
std
fadd
xorl
arpl
push
pop
dec
cmpsb
inc
insl
sti
repz
test
loopne
adcl
or
sti
adc
mov
fistps
sub
pusha
mov
adc
cmp
sub
imul
jge
xchg
inc
sahf
jp
sub
in
fldt
add
fs
fsts
jmp
ljmp
rep
xlat
xchg
inc
and
xor
push
cmpsb
cli
xor
stos
mov
repz
fisttpl
lods
mov
add
mov
add
mov
pop
sbbb
or
pop
test
inc
imul
pop
movsl
sbb
xor
jge
stos
sti
ljmp
sti
mov
sub
or
jbe
fwait
and
idiv
inc
mov
inc
mov
add
and
sahf
pop
jge
pop
cmp
in
dec
shlb
mov
xor
and
mov
sar
cli
dec
repz
in
iret
sub
sarb
cs
mov
mov
dec
inc
gs
jbe
pop
adc
mov
push
test
pop
imul
stos
test
lds
in
mov
push
leave
mov
shll
or
addr16
push
jg
clc
and
call
push
enter
xchg
push
xchg
sti
aaa
lea
pop
iret
in
enter
addr16
test
dec
xor
pop
imul
mov
or
sbb
out
sbb
pop
fldl
mov
sbb
xor
cmpsb
scas
scas
negl
add
in
imul
inc
not
jg
pop
pop
dec
xlat
das
mov
or
pop
mov
jmp
pop
icebp
cmp
pushf
jp
outsb
int3
into
fldt
cwtl
mov
push
mov
pusha
sahf
sub
xor
insl
hlt
jo
mov
inc
dec
movsl
sbbb
dec
addl
dec
or
cmp
xchg
xchg
xor
and
in
dec
xor
mov
pop
adc
insl
mov
or
or
and
jle
pop
popf
mov
mov
test
enter
push
sub
test
mov
push
push
fwait
sub
adc
stos
and
aam
mov
push
bound
jl
mov
fwait
sahf
jno
dec
lahf
cmp
pop
or
dec
enterw
in
push
pop
ljmp
inc
fistpl
outsl
jb
cmp
mov
fdivrs
xor
inc
mull
and
xchg
lods
dec
push
push
je
mov
sub
roll
fdivrl
je
or
jmp
fdivr
sbb
ret
bound
shl
dec
out
add
sub
xor
test
int3
jnp
dec
imul
pushf
popf
subl
and
test
cmpsb
cld
lods
inc
push
push
fisubrl
lea
push
les
sti
and
mulb
icebp
cmp
dec
xor
fdivrs
sahf
xchg
mov
fmuls
sbb
pop
mov
push
mov
mov
or
xor
cmp
push
ss
mov
push
or
push
jo
mov
sub
cli
pop
pushw
ret
push
mov
cmp
push
sar
cmp
inc
sbb
movsb
sbb
sub
cmc
mov
and
mov
mov
test
int3
stos
rcll
mov
jno
or
je
movsb
inc
mov
das
cmp
les
push
lock
adcl
sbb
andl
adc
jno
jp
loope
mov
sub
xchg
gs
leave
repnz
not
adc
popf
popa
sbb
mov
sbb
cmp
imul
mov
shlb
inc
xchg
test
adc
movups
insl
xchg
stos
andl
cmp
cmc
nop
xchg
adc
leave
xchg
popf
cmp
subb
loope
cmpsb
cli
roll
push
mov
into
mov
xchg
call
insl
mov
pop
in
enter
pop
addr16
nop
xchg
sahf
jno
adc
sti
mov
adc
imul
sub
ljmp
adc
jge
scas
mov
js
dec
sbb
add
and
add
orl
cld
mov
ss
jno
pop
into
nop
lret
pusha
test
js
into
das
push
icebp
loopne
add
nop
mov
pop
xchg
sbb
or
lcall
punpckldq
sbbl
pushl
sub
mov
mov
lret
in
sbb
fmuls
outsl
xchg
mov
lods
test
mov
jns
xchg
xchg
sbb
adc
add
xlat
and
push
int3
dec
cmp
subb
inc
push
sub
jbe
arpl
pop
test
das
dec
jns
subb
mov
lds
mov
pop
insb
movsl
flds
and
xchg
add
mov
cmp
dec
add
jge
aam
test
outsl
jge
adc
sarl
cld
or
and
js
dec
cmpsb
nop
and
push
add
adc
aas
lds
push
shrl
mov
daa
jne
add
cs
test
mov
fisubrl
cmp
push
fdivrs
mov
aad
push
adc
xstore-rng
cmpsl
and
jae
movsl
cld
and
lahf
sub
sbbb
mov
lcall
push
sbb
jl
dec
cli
and
imul
fistpll
stos
call
leave
sub
fisttpl
hlt
add
mov
adc
xor
adc
ljmp
and
jb
xchg
mov
shrb
jae
mov
lahf
das
out
div
xchg
dec
add
sbbb
pop
addl
inc
pop
movsb
shlb
push
add
jmp
mov
js
and
mov
insb
imul
je
lock
xchg
arpl
add
xchg
lcall
arpl
cltd
jbe
mov
cmpsl
sbb
in
or
sbb
neg
popf
out
xor
dec
mov
sub
arpl
sub
fidivl
bound
cmpsb
test
hlt
cwtl
xlat
sbb
gs
mov
aaa
push
test
add
fldl
adc
lcall
hlt
dec
sub
ja
hlt
daa
js
lea
in
data16
pop
aam
fldl
push
test
push
jg
into
push
sahf
and
imul
lock
cltd
jle
test
xchg
sti
add
mov
or
pop
mov
mov
jne
sbb
mov
scas
into
scas
shrb
lret
sahf
insl
mov
mov
pop
call
mov
imul
sbb
add
fs
and
adc
fucomp
dec
cli
adc
lods
adc
jge
mov
lods
fs
xor
in
and
mov
mov
jp
jl
pop
ss
pop
nop
jne
arpl
mov
int
sbb
pop
xchg
rsm
adc
movsb
sub
fcomps
aas
inc
aam
mov
adc
fsubs
fs
sbb
add
loopne
lret
or
scas
push
lds
in
lods
pop
clc
and
inc
mov
xchg
jne
xor
pop
xchg
je
call
sbbl
ficompl
enter
and
sar
pushf
insb
filds
mov
mov
mov
jp
dec
add
dec
sub
xchg
push
orl
dec
pop
mov
popa
loopne
insl
imul
cmp
shll
pushf
jno
icebp
jmp
or
stc
test
mov
aam
dec
cli
push
mov
inc
dec
aas
shlb
adc
daa
push
aas
cmp
repnz
mov
and
movsb
enter
lret
icebp
jno
jo
test
lea
aam
in
movsl
loop
pop
jp
std
inc
jae
sbb
rcrl
inc
hlt
cmpsb
sbb
lods
xchg
hlt
mov
cli
push
testl
inc
jge
sbb
test
out
push
lret
mov
test
decl
ret
cs
and
test
adc
je
ds
fldenv
mov
in
mov
inc
gs
lret
cltd
sbb
inc
aas
or
jne
dec
cli
icebp
xchg
popf
pop
xor
loop
sbb
mov
popa
jmp
aaa
mov
test
enter
push
and
xor
xchg
pusha
pop
stc
les
lahf
cmp
inc
dec
call
sete
in
decl
outsb
sar
test
xlat
lea
mov
ret
jg
xor
je
jge
les
adc
les
dec
fs
daa
das
rorb
mov
sub
rorb
sbb
movsl
jbe
xchg
sub
add
cmp
sbb
xchg
push
fs
imul
xchg
jbe
or
add
and
lahf
cmpsb
lret
mov
pop
mov
shl
pop
xor
xchg
cmp
xor
xchg
jb
or
inc
fbstp
jae
movsb
sub
jg
mov
stc
jne
and
and
dec
je
test
bound
or
pop
mov
rorl
add
mov
cmp
add
adc
xor
mov
inc
pop
cmp
inc
stos
call
push
sbb
xchg
cmp
fld
xchg
orb
out
aas
rcrb
adc
sbb
mov
add
cmp
repnz
pop
jecxz
lds
push
fists
in
ret
cmpsl
inc
add
outsl
ds
loope
aad
jl
jne
adc
xor
jp
movb
fsubrl
cmpl
push
xchg
or
hlt
xchg
test
into
lods
jbe
push
push
xlat
jne
mov
sbbb
and
iret
out
pop
enter
mov
daa
out
jae
push
xchg
dec
pop
jmp
xchg
imul
ficompl
push
ficompl
add
inc
inc
add
inc
in
cmp
inc
mov
ja
loop
or
rcr
pop
loop
jbe
pop
and
push
and
scas
addr16
or
inc
pop
data16
mov
lret
je
ror
sbb
into
fs
repnz
mov
popf
lahf
ja
add
pop
xchg
fsubrs
mov
outsb
cmp
xor
inc
lea
push
pushf
addb
jae
mov
jb
cmpl
sub
fisubl
inc
add
adc
and
lock
sti
jecxz
rorb
shll
jne
enter
push
dec
dec
out
je
enter
pop
aas
sub
push
add
add
adc
clc
pop
loop
addr16
sub
mov
stc
hlt
jl
pushf
outsb
mov
cmp
cltd
mov
rcrl
iret
push
sub
sarl
jns
inc
xchg
jns
jb
cmp
pop
repz
jbe
dec
movsb
aam
adc
hlt
outsb
mov
jbe
lds
sti
neg
movsl
xlat
xchg
lahf
and
xchg
xchg
lock
imul
int
ljmp
mov
xor
sbb
add
pop
stc
loopne
outsl
xor
icebp
mov
inc
mov
rcrl
pusha
lahf
lock
sub
stc
dec
shll
fsubs
inc
dec
into
dec
ja
call
jl
jo
dec
fdivl
push
dec
ret
add
fsub
mov
ja
sbb
jnp
jg
sbb
fs
inc
arpl
andps
insl
test
pop
pop
js
int3
xlat
push
stos
out
mov
data16
loopne
xchg
xor
sbb
mov
push
xchg
pop
mov
cmp
ljmp
pusha
ja
sub
push
jo
out
xchg
adc
lahf
inc
jbe
sahf
mov
sbb
in
push
adc
push
jecxz
sub
xchg
in
and
nop
stc
addr16
push
scas
pop
daa
mov
lods
xor
cmp
ljmp
pop
inc
lds
dec
jge
shlb
and
mov
or
data16
xor
gs
sub
push
mov
push
xchg
push
lahf
outsb
jecxz
mov
xor
jns
sbb
clc
xor
mov
push
jle
lds
js
aas
out
jp
je
add
dec
push
out
lds
ret
pop
pop
or
outsb
jb
cli
jmp
push
xchg
lahf
jge
cmpsb
les
mov
inc
and
movsb
pop
pop
jae
mov
pushf
out
xchg
shll
pop
jo
fimull
push
les
push
sub
dec
outsl
dec
xchg
dec
or
in
movsb
sti
cmp
rclb
lods
push
sbb
xor
mov
mov
out
jnp
outsb
push
ret
xchg
xor
cmp
push
mov
push
add
cld
outsb
aam
aas
sarl
or
aas
sub
push
jp
cmp
pushf
mov
mov
inc
push
test
inc
dec
cmp
pop
push
mov
fnstsw
add
cmp
lods
aaa
cmp
xchg
xchg
sbb
scas
xlat
pushf
dec
les
xor
pop
jno
mov
jmp
xchg
cmpsb
push
decb
adc
inc
push
jbe
das
pop
jp
mov
outsb
inc
dec
cmp
and
pop
add
cmp
cmpsl
pand
mov
in
leave
cmp
ljmp
mov
sub
push
jmp
lahf
pop
ret
lret
or
push
xchg
in
jmp
cli
cmp
xlat
xor
addb
jl
push
pop
add
inc
adc
mov
mov
add
sub
ljmp
int3
and
orl
sbb
daa
fsubrs
and
out
xor
inc
jb
and
push
pop
cld
mov
nop
adc
adc
mov
into
or
mov
pop
ss
adc
mov
and
jbe
jp
test
je
mov
ror
jno
and
xor
jmp
mov
lds
mov
les
loope
xor
nop
mov
add
aaa
shll
mov
fcom
push
or
ds
into
jnp
inc
mov
fcmovb
fildl
jecxz
pop
dec
ja
addr16
push
dec
shl
mov
add
adc
mov
pop
pop
or
xor
inc
mov
test
mov
sbb
fcoms
flds
rorl
cld
pop
inc
add
stos
loop
or
pop
dec
sbb
ret
rolb
call
lds
push
and
sti
ret
or
inc
push
sub
pusha
loop
cmp
repnz
hlt
sahf
mov
cmp
repnz
fcmovne
mov
mov
test
inc
fistpl
sahf
jmp
divb
xchg
lds
inc
into
ss
pcmpeqw
cmpsl
inc
xchg
ljmp
add
fsubl
leave
mov
gs
jae
lcall
mov
jg
push
fs
roll
popa
loop
movsb
movsb
repnz
repz
pop
jle
stos
inc
fcoms
xchg
jnp
and
pop
inc
pop
out
cs
inc
testl
in
imull
test
xchg
adc
cli
xchg
out
xchg
pop
cli
dec
cmp
cmp
push
test
jb
daa
sub
dec
pop
mov
fwait
xor
popa
push
push
dec
ds
mov
sbb
cmpsb
fsubp
movsl
mov
imul
cmpsb
ficoml
popa
or
pop
out
push
xchg
jno
cld
mov
pop
xor
jg
inc
bound
fistl
adc
push
xchg
dec
pop
cmp
repz
imul
mov
jmp
sbb
push
icebp
sbb
dec
or
in
or
sbb
jbe
ds
cli
dec
pusha
mov
outsl
bound
jp
xchg
xor
and
and
mov
push
das
pop
mov
adc
mov
aaa
sahf
test
push
out
mov
and
popa
test
lret
outsl
mov
stc
lea
jecxz
sbb
xor
push
arpl
test
scas
push
add
mov
in
loop
push
fstl
inc
push
ja
and
mov
jo
xchg
add
negl
incl
adc
dec
cltd
jl
dec
and
es
rol
imul
aam
sbb
mov
aaa
ret
xchg
mov
scas
cmp
dec
mov
mov
int3
adc
mov
call
xchg
lock
add
sub
dec
das
dec
push
xor
or
test
fiadds
dec
leave
shlb
or
adc
data16
add
cwtl
xor
jecxz
xchg
xchg
xor
sahf
in
fadd
pop
or
add
dec
push
sub
sbb
push
pop
fucomi
xchg
or
push
lcall
lret
imul
pop
push
add
ljmp
divb
or
mov
cltd
mov
fcomps
int
mov
int
stos
jns
dec
mov
out
push
fildl
scas
cmpb
mov
in
in
cmp
xor
xchg
repz
mov
lock
jbe
test
jno
mov
adc
sahf
pop
in
call
dec
lods
rcr
or
mov
fsubrs
cmpsb
cmp
loopne
mov
xchg
adcl
or
mov
or
push
cld
outsb
push
rcl
mov
popf
imul
addr16
enter
pop
or
leave
fists
cmp
popf
add
sub
pop
xchg
jno
jmp
adc
mov
int3
lock
xchg
fiaddl
pushf
fs
stc
dec
mov
insb
adc
push
mov
jp
pop
mov
lock
sbb
repnz
sub
rcl
cmpsl
ljmp
pop
pop
sub
mov
mov
popa
pushf
aam
cmp
pop
repz
push
add
xor
jae
insb
lcall
in
inc
sub
loopne
in
inc
dec
xchg
leave
adc
dec
std
mov
xor
cmp
push
add
or
icebp
pushf
enter
ret
mov
clc
mov
lret
addl
xor
dec
xchg
adc
push
leave
cmp
lods
scas
and
xor
out
sub
je
inc
aaa
and
jmp
cmp
aam
push
dec
insb
cmp
sub
mov
mov
out
incl
or
inc
ljmp
stos
data16
or
jb
adc
mov
lock
in
push
stos
fsubs
jno
xchg
into
cmpsl
popa
xor
cmpb
lret
or
adc
cmp
push
mov
orb
mov
lods
dec
pop
scas
call
inc
enter
in
idivb
push
pop
into
mov
es
xchg
dec
divl
mov
pop
pop
cmp
sub
and
sub
in
jb
mov
jbe
jl
stos
sub
lcall
into
mov
xlat
nop
or
dec
push
daa
aas
shlb
aad
dec
push
jne
jnp
adc
icebp
cmp
mov
cs
mov
sbb
fmull
jns
loopne
push
push
mulb
sub
jne
add
lods
arpl
mov
sub
cmp
loopne
inc
sub
mov
cli
scas
cmp
push
insl
out
lahf
and
xor
int3
bound
roll
dec
jge
ljmp
test
insl
or
es
es
sbb
mov
bound
xor
pushl
test
mov
sbb
jecxz
dec
mov
jle
popf
fiaddl
dec
clc
aam
inc
aam
cmp
push
dec
push
test
xor
pusha
mov
pop
loopne
fisttps
loopne
pop
and
fs
ja
mov
xor
xchg
fisubs
movd
je
dec
push
aad
mov
and
fimull
mov
sbb
pop
cwtl
out
andb
push
test
mov
pop
ja
push
add
ja
add
stos
in
jno
dec
pop
add
inc
roll
std
popa
dec
hlt
js
pop
fsubl
jecxz
adc
adc
ret
orl
and
cmpsl
or
cmpsl
mov
cmpsb
add
ficoms
jns
gs
lds
or
xor
and
cmp
or
repz
push
cmp
test
outsb
pushf
adc
in
push
xor
or
cltd
shrl
ja
dec
add
lock
adc
push
adc
fwait
lret
add
scas
rcrl
sbb
test
fs
push
xor
mov
ja
cld
pop
loope
jge
imul
sbb
xor
movsb
dec
jp
push
es
dec
add
fwait
jae
mov
inc
sub
jecxz
mov
iret
sbb
decb
adc
xchg
scas
pop
lcall
shrb
pop
pop
lret
cld
mov
dec
rcrl
andb
add
and
lds
jge
lock
add
jb
mov
aas
les
fs
out
xor
insl
ljmp
and
out
fndisi(8087
inc
add
xchg
add
cmp
daa
cmpsl
inc
cmpsl
inc
pop
sbb
filds
fscale
dec
scas
aam
je
fldt
cmova
adc
mov
scas
int
xor
in
adc
push
cmpsb
loopne
fsubrs
inc
push
inc
mov
outsb
leave
push
pop
fisubl
repz
call
adc
test
or
lods
sub
xchg
cmp
mov
push
add
fs
pop
add
mov
adc
push
push
sub
xchg
pop
psrad
scas
jmp
cmc
dec
sbb
cmpl
pusha
aam
test
sbb
adc
dec
dec
push
xor
ljmp
fs
out
xor
cmpsl
pop
sub
add
movsl
aaa
out
pop
sub
mov
stos
movsb
mov
mov
mov
lcall
push
insb
sbb
sbb
leave
hlt
push
rorl
pop
cmpsl
inc
mov
out
cmc
fidivs
add
cmp
arpl
jl
les
add
lods
or
sub
add
rorb
cmp
aad
push
push
sub
into
jnp
mov
out
mov
cld
sarl
ljmp
das
out
test
sahf
lret
xchg
xchg
fisttps
xlat
xchg
rcrb
out
lret
mov
dec
pop
lock
jecxz
popf
mov
cltd
push
movsl
jecxz
adc
lock
cltd
mov
inc
mov
push
loop
xchg
xchg
sahf
cmc
adc
and
add
cld
stos
xchg
pop
fsubr
and
jle
pop
and
inc
cs
rolb
test
stos
inc
mov
push
ja
inc
insl
out
xchg
out
sub
scas
add
ds
mov
inc
pop
inc
sub
std
mov
lods
mov
xchg
loope
fwait
jo
int
ret
and
mov
mov
int
xchg
push
push
adc
je
pop
ret
sub
sub
and
cmc
stos
mov
test
adc
out
fildll
inc
ret
pop
fs
inc
test
mov
aaa
loop
wbinvd
push
dec
mov
push
mov
jns
sbb
fidivl
lea
hlt
cmp
mov
mov
inc
mov
pop
clc
xorb
into
cmp
sti
mov
les
xor
jne
jns
ret
es
imul
insl
mov
sbb
sub
pop
or
pop
and
out
imul
bnd
jne
imul
shl
cmp
fldenv
cmp
sub
repnz
and
xchg
ficomps
push
dec
jo
dec
mov
repz
mov
and
loop
shll
inc
mov
push
push
into
pop
xchg
xchg
push
mov
adc
lahf
sub
mov
push
pop
xchg
das
pop
fiaddl
jge
testl
cmp
popl
dec
inc
pop
sub
pop
mov
pop
sbb
std
add
or
mov
push
mov
scas
mov
inc
fstpl
cmp
xor
and
xor
pop
inc
mov
test
jecxz
xchg
dec
mov
fdivl
xor
fst
std
pop
fmuls
lcall
scas
push
leave
dec
addl
cmp
rorb
mulb
adc
lret
icebp
das
pop
ror
in
cltd
push
lcall
pop
fldl
and
ss
push
notl
gs
pushf
scas
dec
mov
inc
or
nop
inc
or
cwtl
subl
ret
sbb
cwtl
push
mov
inc
dec
sub
xchg
push
xchg
or
sub
sbb
dec
cwtl
out
inc
push
jnp
cltd
call
icebp
xor
pop
sahf
adc
push
add
xchg
aaa
fcomps
dec
fwait
mov
test
leave
or
pusha
or
into
shrl
or
sub
leave
or
je
xchg
es
xchg
or
sbb
push
push
sub
mov
pop
cmc
push
or
sti
mov
cmpsl
dec
mov
data16
sti
hlt
cld
mov
and
and
and
ret
mov
push
mov
icebp
mov
inc
adc
add
popf
stos
movsl
inc
out
sbb
subb
jmp
pop
pop
ret
lret
je
arpl
pop
notb
xor
repz
dec
test
cltd
jmp
mov
scas
mov
and
inc
enter
mov
mov
out
push
add
mov
xchg
mov
mov
sub
gs
and
or
pusha
clc
jmp
jp
cmpsl
aam
jecxz
sti
sarl
xlat
out
cmp
fnstenv
cmp
in
daa
pop
scas
fcmove
inc
rcll
mov
mov
ret
lods
shl
imul
addr16
xor
pop
mov
mov
in
and
call
mov
imul
in
pushf
movsb
add
cld
dec
push
jb
push
repz
mov
out
add
js
xchg
ljmp
loopne
dec
aam
hlt
ficomps
cltd
pop
sbb
jae
cwtl
mov
xor
out
out
sbb
cmp
jae
rorb
pop
add
ds
jg
xchg
mov
or
cmpsb
cmpsb
nop
and
and
jmp
xchg
sbb
push
mov
mov
sub
shr
mov
sbb
mov
loopne
or
loope
cmp
fdivl
pusha
into
sbb
xchg
inc
outsl
jge
mov
adc
jnp
or
push
pop
cmp
jmp
mov
out
int
jnp
test
icebp
fwait
add
mov
or
xorl
push
add
adc
mov
dec
lods
out
add
in
mov
inc
shlb
gs
push
mov
jmp
or
inc
cwtl
imul
or
inc
sahf
fs
rol
call
es
in
pxor
int3
int
adcl
aad
jo
mov
mov
add
mov
push
rcl
sub
sbb
js
jle
mov
xchg
xlat
bound
and
jb
fucomip
mov
std
jg
add
jmp
inc
jno
jbe
out
push
sbb
jno
into
mov
out
call
mov
pusha
jp
jae
push
in
inc
sub
cmp
sub
xorb
movsb
jo
out
add
lret
xor
and
add
or
dec
incb
cwtl
or
or
scas
pop
rcrl
sub
xchg
fisttpll
test
lcall
xchg
push
les
ss
addr16
xor
adc
enter
mov
mov
pop
pop
xchg
out
mov
push
push
or
dec
jg
sti
test
mov
xor
orb
cli
outsl
mov
sahf
xchg
into
repz
in
mov
sub
aas
test
test
mov
lcall
jb
sbb
sahf
mov
out
push
aam
ljmp
push
cmp
es
loope
cmp
hlt
xchg
ficompl
mov
cmpsl
lods
inc
jmp
bound
pop
shrl
iret
orl
cmc
push
or
sbb
sbb
push
leave
je
xor
in
es
clc
shl
inc
dec
and
or
adc
inc
sbb
dec
push
push
mov
mov
out
inc
inc
sbb
insl
out
push
sti
and
xchg
cltd
push
mov
and
repz
mov
shll
lahf
arpl
jge
mov
loopne
and
enter
push
sti
and
xchg
rcrl
bound
push
jecxz
test
div
aas
xor
jge
push
sbb
jecxz
rclb
push
rcl
xor
mov
adc
add
push
xor
fistps
xchg
add
xor
pop
fildll
test
int3
mov
sbb
das
outsl
jnp
addr16
xchg
mov
push
or
xor
mov
xacquire
mov
stc
mulb
cmp
or
notb
jge
loope
popa
mov
sbb
lahf
mov
enter
in
or
and
xor
lods
incl
mov
lret
inc
mov
adc
stos
insb
pop
xchg
je
push
dec
push
push
in
jmp
push
jl
xorl
in
ja
jae
inc
es
mov
ljmp
xchg
add
aas
lret
sbb
dec
inc
mov
int
out
test
push
cwtl
mov
xor
push
pushf
mov
adc
jae
je
push
jnp
dec
xor
sahf
xchg
add
mov
sahf
outsl
aas
sub
or
ljmp
aad
scas
push
xchg
xchg
xchg
lock
pop
sarb
cld
fsubrl
mov
insl
or
iret
add
fisubrl
sbb
jnp
or
xchg
and
insl
mov
pushf
mov
sar
out
bsf
dec
fimull
or
cld
and
add
call
outsb
xchg
test
or
xchg
js
jecxz
cmp
cs
sub
push
adc
insl
cmp
sbb
cmp
sub
dec
cmp
es
popa
decl
jo
and
mov
mov
lods
lock
lods
cmp
jbe
jmp
inc
aas
push
pop
mov
xchg
adc
shr
adc
dec
daa
pushf
and
mov
lcall
push
test
pop
jne
xchg
out
adc
mov
mov
pushf
pop
jbe
mov
dec
push
sbb
xor
std
mov
stos
hlt
subb
icebp
xchg
push
mov
ljmp
cmp
mov
test
push
inc
dec
call
pop
shr
xor
add
cmc
or
pop
stc
push
sbb
push
popf
xlat
loope
lods
pop
test
icebp
push
or
shrb
sub
scas
sub
sub
in
les
fistpl
out
into
jl
enter
subb
lock
cwtl
mov
push
add
neg
adc
cmp
sub
mov
test
push
fnstcw
fdivs
sti
mov
jns
add
call
mov
testl
sub
rcll
subl
les
sub
outsl
mov
mov
outsl
jmp
icebp
int3
dec
push
adc
or
shrb
inc
pop
sub
cmp
mov
ja
repnz
dec
push
outsl
push
lret
xor
mov
rorl
daa
aaa
repnz
mov
stos
enter
arpl
ss
mov
xchg
aaa
adc
or
in
orb
dec
push
sbb
jmp
ja
push
mov
and
lods
push
daa
addr16
add
test
mov
in
test
jp
sub
jmp
aam
sub
cmc
and
push
pop
rclb
dec
mov
xchg
fsubs
push
push
jns
imul
and
nop
pop
pop
xchg
jb
and
mov
pop
in
xchg
mov
imul
cltd
xor
filds
mov
sti
jae
sbb
xchg
scas
or
push
inc
pop
loope
test
add
dec
pop
stos
stos
cmp
mov
out
je
popf
push
cmp
jmp
mov
push
inc
insb
sub
leave
mov
xchg
das
and
and
pop
mov
mov
call
push
mov
negb
repz
dec
pop
xor
rcr
lret
iret
mov
add
jae
jne
push
add
add
push
das
int3
sub
mov
repz
arpl
sub
scas
push
pushl
orb
pop
in
pusha
xchg
push
shrl
add
or
lock
outsb
xchg
cltd
xchg
and
imul
cmp
push
ja
and
push
add
jb
lahf
sbb
xor
repnz
sbb
jge
cli
lock
dec
mov
jp
mov
sbb
int3
pop
ret
jmp
mov
hlt
cmpl
jbe
and
cmp
sub
jl
fadds
pop
popa
push
add
nop
mov
fildl
add
adc
insb
mov
xchg
inc
jmp
mov
dec
incl
pop
inc
fcoms
iret
cmc
aam
movsl
dec
dec
dec
mov
cmc
mov
je
test
outsb
sub
jg
scas
js
and
out
pop
cmp
mov
stos
xchg
test
adc
pop
jne
jge
mov
inc
shlb
mov
pop
ret
or
data16
popf
loopne
jmp
adc
sub
sbb
xchg
hlt
xlat
fs
outsl
insl
xchg
pop
aas
fcmovnu
fiadds
cltd
fisttpl
loop
jecxz
or
push
aaa
inc
mov
leave
mov
jns
arpl
mov
pop
dec
mov
mov
xor
push
rorl
mov
adc
and
xor
xchg
jg
test
movsb
sub
push
push
mov
pop
push
adc
add
mov
pextrw
cmc
stc
sbb
mov
dec
loopne
aad
out
add
inc
push
dec
adc
ret
js
cmpsl
loop
mov
rcrl
fisttpll
sbb
cwtl
repnz
inc
fst
jp
jmp
in
xchg
clc
jns
dec
xchg
mov
push
push
push
xchg
andl
xlat
adc
nop
repnz
adc
aad
mov
call
ret
cmpsb
mov
shlb
arpl
mov
es
sub
dec
sub
inc
nop
lret
mov
shl
adc
ficoml
fistpl
push
ja
orl
cmp
insl
push
mov
push
vcvtss2sd
push
movsl
out
fbstp
fbstp
fidivl
dec
sbbl
cltd
popf
sti
sub
int
or
and
jno
push
popf
cltd
out
iret
int3
sub
imul
pop
shll
and
sub
sub
inc
ljmp
adc
mov
push
cmp
mov
dec
push
sbb
mov
and
lods
sbb
cmp
jo
push
cmpsb
xchg
int3
push
mov
es
ds
rorb
in
test
scas
lcall
fistps
lcall
mov
cld
mov
push
inc
cmp
lret
std
push
jbe
cmp
sub
mov
push
ljmp
jg
jb
xor
add
dec
test
xchg
mov
jbe
sub
inc
gs
add
loop
mov
andl
sbb
subl
movsl
insb
daa
add
dec
inc
mov
and
mov
xchg
jmp
lds
jmp
insl
add
lods
mov
scas
mov
addr16
in
jb
movsl
xchg
lods
lea
or
or
xlat
xchg
push
repnz
dec
fmul
xchg
mulb
es
jl
dec
in
testl
lret
sub
out
adc
jp
fnstsw
outsb
cmp
or
mov
lret
pushf
mov
jo
fiaddl
outsb
pop
js
push
mov
imul
pop
insl
mov
in
aad
mov
dec
push
hlt
sti
les
mov
sti
test
loop
lock
popf
xchg
test
mov
decb
jbe
pushf
in
jno
popa
xchg
or
cvtpi2ps
sub
inc
andl
and
adc
xor
jne
mov
push
dec
cld
sbb
jp
loopne
push
and
jl
jge
mov
push
mov
adc
shrl
pop
mov
xor
sub
cltd
cltd
inc
push
fidivrs
mov
dec
enter
dec
and
pop
mov
or
cmp
cmpsb
aas
lock
sub
fwait
pop
push
xchg
les
cwtl
cmc
push
dec
cmp
jecxz
push
mov
nop
add
cmp
mov
insl
mov
xor
xchg
mov
movsl
and
push
outsl
je
pop
lret
mov
adc
cs
nop
shlb
inc
faddl
pushf
icebp
cmpsl
daa
fsts
inc
push
scas
mov
pusha
xor
rcl
push
aaa
sbb
jne
mov
mov
dec
sbb
xchg
aas
out
imul
inc
dec
adc
mov
repz
stos
fwait
adcl
xchg
cmpsl
fidivs
ljmp
jnp
addr16
shrb
add
inc
mov
fiadds
pop
loopne
inc
sub
stc
lret
shr
call
int3
jb
daa
sbb
mov
push
je
insb
lret
inc
mov
js
jg
mov
fcmovne
sbb
movsb
faddl
jae
pop
jl
imul
insb
cmpsb
pmaddwd
mov
rclb
push
sbb
cmp
aam
xchg
andl
cmpsb
ljmp
stos
adc
dec
push
icebp
adc
ret
inc
cmp
fstpl
inc
sub
mov
imul
lds
mov
inc
cmp
loop
pop
or
jb
or
sti
test
popa
xor
lods
aam
mov
add
jns
sub
lahf
lock
sbb
mov
scas
in
imull
int
jbe
nop
jmp
sbb
push
stos
inc
push
ja
push
loop
and
or
sarb
lahf
ja
ja
add
bound
loopne
sbb
mov
cli
xchg
fdivrl
in
pushf
inc
adc
ror
pusha
and
push
pusha
dec
pop
call
call
gs
xchg
je
cmp
inc
aam
inc
or
in
pop
jo
movsl
loop
mov
mov
setae
xchg
stos
jb
lret
cli
jge
inc
push
dec
and
aam
daa
lods
lock
mov
insl
lret
js
xor
pushf
xchg
mov
lods
ja
mov
jge
mov
aam
or
xchg
je
aas
testb
sub
aaa
outsb
jnp
in
das
and
push
nop
popf
icebp
cmp
stos
sbb
repnz
mov
xchg
sarl
push
mov
lods
mov
in
out
mov
push
inc
stos
jge
and
adc
adc
ret
jmp
push
mov
mov
adc
or
push
xchg
test
xchg
xor
mov
ds
mov
dec
in
cwtl
mov
inc
mov
push
xlat
lahf
or
icebp
insl
movsl
outsb
sbb
adcb
in
in
lods
xorb
daa
adc
adc
jg
or
nop
push
lret
mov
imul
jbe
sbb
aaa
in
cmp
shlb
xor
and
mov
daa
mov
out
pusha
ja
daa
push
xor
cmc
lret
inc
push
sti
ljmp
sti
lahf
xchg
mov
sbb
insb
aad
shr
ljmp
out
xor
outsb
fwait
xorl
repnz
jne
inc
fildll
mov
or
mov
fwait
add
dec
mov
out
sub
lods
jnp
or
push
jb
add
lret
mov
cmp
lretw
pushl
mov
or
ret
push
insl
xor
xor
aaa
xor
in
bnd
add
pop
dec
pop
push
or
stc
adc
iret
and
fwait
sub
lcall
xchg
xor
push
pop
out
fnstsw
cmp
js
aaa
adc
cmp
in
nop
mov
pop
xchg
jle
inc
aad
mov
shll
jbe
rcll
pusha
push
inc
jle
pushf
test
je
fisubrl
jl
in
adc
mov
les
aad
jge
jge
out
xchg
jbe
je
or
jmp
push
into
mov
sub
inc
cmpsb
xchg
les
mov
fidivrs
adc
fs
std
sub
out
sti
sub
xchg
xchg
inc
mov
gs
js
adc
sbb
std
or
cmpsl
arpl
and
lcall
inc
jns
or
xchg
test
leave
or
cmp
mov
outsl
data16
fcompl
or
and
stos
fs
jns
adc
sbb
mov
xchg
or
fs
add
rcll
and
xor
push
sub
cmc
cmp
mov
rorb
movsb
inc
cld
scas
xor
movsl
bound
scas
stc
xor
stos
stos
cmpb
cmp
mov
xor
mov
mov
inc
scas
addr16
in
add
mov
popf
xchg
cmp
int3
xchg
mov
xor
mov
cmp
xor
mov
pop
push
sub
nop
inc
loop
xor
in
mov
inc
and
insb
mov
dec
inc
sbb
xchg
pop
cltd
stos
and
adc
inc
lea
cmp
sub
cld
jns
adcl
push
lods
dec
pop
fldl
mov
lods
nop
dec
lods
mov
mov
ljmp
and
rolb
popf
and
je
pop
sbb
jecxz,pt
push
sti
repnz
mov
cli
lcall
xorb
push
mov
and
fdivr
nop
stos
sahf
add
iret
test
or
mov
popf
jmp
das
int3
int3
aam
add
or
dec
mov
sbb
ficomps
stos
dec
sbb
inc
cmp
shlb
add
lahf
cmp
cmc
rclb
lea
call
loopne
dec
out
divl
mov
cmp
and
jns
cmp
lods
inc
popl
ficompl
hlt
fsub
mov
push
test
addl
int
leave
data16
adc
xchg
push
pop
cmp
and
inc
repnz
aas
xchg
es
sub
push
add
out
lods
pop
call
shl
jmp
mov
mov
mov
cmpsl
inc
cld
leave
mov
repz
roll
and
add
push
inc
xchg
shrl
mov
sbb
push
es
scas
sbb
mov
xor
adcb
and
mov
xor
push
cmpsb
jecxz
jmp
mov
cmpsl
xor
or
xor
clc
dec
pop
sbb
or
ret
aad
jl
mov
inc
cmp
dec
popf
lahf
sbb
data16
jae
xchg
sbb
xchg
out
test
cmpsl
jne
pop
jmp
dec
cmp
mov
jl
flds
enter
gs
stc
pop
mov
and
xchg
mov
or
pop
je
fbstp
push
cmc
aas
movsl
gs
orb
fistps
pop
movsl
jae
inc
loopne
mov
lret
sub
sahf
mov
and
fstl
cltd
mov
leave
push
out
daa
jne
stc
xchg
imulb
dec
aam
add
add
cmc
push
xchg
cmpsb
or
jns
mov
xor
sbb
in
xchg
mov
adc
xor
cwtl
mov
add
gs
movsb
jns
jle
psubsb
lock
pusha
rcll
pop
in
iret
inc
add
pusha
ss
js
xchg
jnp
iret
outsl
shlb
and
jle
repz
frstor
jmp
mov
or
std
sub
sbb
rcrl
lar
cld
inc
xchg
sahf
sub
aam
test
das
insl
fs
sbb
and
hlt
mov
sbb
mov
pop
enter
popa
or
fcmovnb
imul
jmp
jbe
fwait
xchg
mov
fucomi
popa
andb
sub
mov
pop
mov
xor
test
mov
stc
dec
out
loop
outsl
sub
cmp
call
xchg
and
dec
push
lcall
jno
outsb
push
xor
mov
dec
push
adc
sbb
out
xchg
push
cli
and
aad
rclb
or
or
sub
mov
divl
add
mov
fidivl
scas
jecxz
push
hlt
sbb
xchg
shrb
loope
add
or
outsl
movsb
sbbl
gs
fisubrs
lcall
cmpsb
xor
dec
push
mov
fldcw
jno
mov
pop
movsb
scas
pop
fmull
dec
add
lcall
ds
jecxz
cld
movsb
adc
gs
sub
sub
mov
jo
cmpsb
mov
xchg
push
ljmp
adc
test
test
or
out
enter
ror
iret
and
mov
add
xor
outsb
loope
push
arpl
in
lock
clc
dec
sbb
jg
mov
push
xor
aaa
cltd
add
and
push
movaps
in
push
sub
pop
into
xor
lret
push
loopne
lcall
in
jg
lret
jbe
adc
jns
insb
inc
jl
test
stos
insl
hlt
test
add
mov
frstor
lods
xor
xor
lcall
lds
outsb
cmpsb
cmp
sbb
or
loopne
shlb
decb
adc
mov
rorl
shll
adc
scas
loope
push
pop
mov
add
mov
lret
scas
mov
testl
rcl
add
xor
mov
or
inc
add
leave
push
cmp
add
and
in
adc
cli
rclb
mov
xlat
rolb
int3
int
movsb
lret
jo
pop
js
popf
movsb
inc
pop
push
xchg
dec
adc
sub
or
xor
iret
sub
popf
xchg
fsubl
xchg
and
lea
ret
daa
insb
sbb
js
adc
push
outsl
push
lods
push
in
leave
lds
push
inc
fs
daa
or
hlt
popw
or
or
mov
lock
mov
mov
and
testb
and
sbb
xchg
and
jo
inc
fcomi
push
scas
int3
hlt
enter
pushf
pop
cmc
add
adc
pop
outsl
mov
xor
lcall
push
xchg
setg
sti
dec
xor
mov
call
mov
dec
mov
std
xchg
add
cmp
xor
shll
dec
ljmp
push
push
jbe
rorb
cltd
insb
in
outsl
les
lods
outsb
mov
into
pop
xchg
push
xchg
mov
sbbl
lods
sti
les
mov
sub
mov
mulb
data16
sub
mov
jp
sahf
pop
les
mov
mov
imul
inc
xchg
scas
shll
xor
xchg
imul
push
cmc
xor
pop
bound
mov
dec
mov
mov
ds
sub
aas
mov
cltd
pop
loop
inc
in
pushf
mov
mov
sbbl
jae
jae
lret
xor
xchg
cmc
scas
pop
adc
add
push
push
jne
jp
push
xor
xchg
mov
gs
sbb
or
outsb
divl
icebp
mov
and
xchg
inc
in
adc
sub
orl
sbb
adcl
cld
js
rcrb
push
movsl
jo
movsb
sub
addr16
push
pop
jecxz
rcl
sbb
inc
push
lcall
inc
adcb
inc
stc
fildl
call
loope
dec
les
cld
pop
shll
lret
in
js
aam
ljmp
movsl
xor
xor
adc
dec
pusha
dec
add
lea
adc
lret
aas
xor
sub
fidivrs
gs
int3
das
pop
bnd
ljmp
sbb
sub
insb
dec
cmp
sub
add
shlb
xorl
leave
mov
nop
stc
sti
cmp
push
cli
mov
stc
sahf
roll
cltd
pop
adc
leave
inc
jecxz
and
cmp
pop
and
jmp
cmpsb
cmp
push
jge
push
flds
sarb
mov
mov
movsb
mov
inc
push
call
push
pand
scas
fildl
push
insb
adc
add
scas
push
int
xor
xchg
inc
fistpll
sbb
negl
stos
lahf
popa
aas
dec
inc
push
sbb
sbb
lret
mov
in
fs
imul
sti
xlat
jecxz
bswap
cmp
fucomi
adc
out
stos
shll
in
insb
in
and
mov
sbb
dec
fdivr
int3
sahf
cmpsb
insl
cwtl
mov
sub
test
sub
xor
jbe
lahf
adc
push
cmp
adc
test
ds
lahf
cs
mov
xor
jne
imul
loop
movsl
xchg
dec
xchg
jmp
fucom
mov
icebp
add
pusha
sbb
les
mov
push
adc
out
mov
mov
ss
rorb
mov
shrb
test
fcoms
mov
mov
loop
lds
push
jno
adc
jno
jg
sub
mov
ret
dec
mov
stc
fidivs
or
test
xchg
xorl
in
inc
sti
lds
cmp
push
ljmp
push
push
mov
fcomi
mov
ret
cltd
cmpsl
sahf
int3
jns
mov
pop
imul
into
mov
mov
movsb
aad
mov
je
pop
xor
mov
sbb
aas
xor
icebp
fcmovnu
xorl
ret
shrl
push
jbe
jle
stos
xlat
push
lds
scas
mov
shlb
sbb
and
outsl
fldcw
jmp
gs
adc
sub
loope
stc
sub
xor
push
shrb
pop
lahf
pop
gs
and
add
insb
fldcw
cmp
outsl
xchg
push
mov
lods
fnstenv
cmp
cmp
xor
fwait
outsl
mov
hlt
mov
xor
and
std
inc
cwtl
xchg
int3
jl
push
inc
clc
xchg
inc
or
mov
call
adc
das
dec
das
test
test
push
rorl
xchg
iret
sub
in
jg
gs
mov
sub
adc
cltd
sarb
push
lea
mov
movsl
data16
or
faddl
push
or
dec
cmpsb
inc
push
idiv
adc
pop
lret
in
xchg
mov
cmpsb
sbb
cltd
or
hlt
arpl
movsb
stos
jecxz
arpl
fsts
in
inc
mov
mov
cmp
mov
out
repnz
fisttps
xor
jmp
mov
iret
push
hlt
jl
adc
sub
inc
mov
push
jg
cmp
xchg
inc
push
or
movsb
mov
jnp
jmp
das
or
dec
lods
arpl
dec
adc
rcr
ret
cmp
aaa
add
mul
adc
mov
dec
xlat
lcall
or
sbb
cmp
jnp
sarb
outsb
mov
nop
and
pushf
sbb
sbb
sub
cmp
xchg
mov
or
mov
mov
faddl
lcall
sbb
mov
into
pop
mov
xchg
or
lods
push
jg
lret
or
stos
pop
cmp
shlb
jnp
xorb
aaa
pop
fidivrl
lock
or
sub
aas
sbb
lahf
pop
sub
xorb
movsl
inc
pop
pop
dec
cmp
push
push
sahf
dec
sub
jge
add
mov
in
outsl
and
mov
xchg
in
mov
add
lcall
push
fists
inc
push
dec
popa
cmp
jbe
arpl
jnp
mov
inc
insl
ficoml
cmp
add
push
in
movsl
mov
in
and
push
xchg
cltd
and
pop
xor
push
lret
sbb
int
dec
xor
xchg
je
imul
adc
push
push
and
aam
popa
stos
inc
mov
pop
adc
lods
mov
adc
es
adc
iret
add
mov
xor
lea
out
jl
mov
sbb
push
cmp
cmp
jp
push
cwtl
xchg
dec
ljmp
dec
mov
xor
inc
xchg
cs
es
pop
cwtl
out
clc
lods
enter
mov
nop
fmuls
jmp
ljmp
sub
pop
mov
mov
lcall
out
popf
xchg
mov
insl
xor
pop
dec
fs
adc
int
cmp
sub
mov
sahf
sub
and
mov
pop
bound
pusha
adc
pop
das
inc
sub
jl
sbb
mov
sub
add
pop
sbb
cmp
jge
loope
rcrl
movsl
int
mov
mov
sub
xchg
or
in
lahf
adc
out
mov
data16
ret
and
mov
stos
movsl
cmc
test
mov
mov
adc
push
pop
xchg
jno
test
and
jle
mov
ret
rcrl
sbb
mov
mov
xchg
or
inc
sub
add
and
adc
pop
sub
push
popf
xchg
and
fdiv
add
mov
cmp
lods
rorl
les
push
push
cmp
in
sbb
fwait
es
into
fldcw
mov
pop
push
xorb
jmp
jl
mov
aaa
jecxz
mov
inc
pop
sti
in
pop
sub
fdivl
push
aad
rcrb
or
ja
popa
outsl
nop
gs
mov
add
ds
sahf
sti
mov
and
loopne
jecxz
outsl
dec
pop
or
in
xlat
mov
popf
flds
enter
pop
push
pushf
pop
adc
arpl
loop
adc
out
and
lock
ds
cmp
or
fucomip
jmp
pushf
shrl
xor
xchg
inc
dec
arpl
jecxz
ficomps
int3
xor
inc
push
les
or
xchg
push
sub
daa
add
lods
mov
sub
rcll
lds
lods
test
enter
and
in
ss
cld
testl
jns
lods
push
loop
insl
test
sub
push
dec
mov
dec
mov
loope
idivl
mov
pop
mov
cmpsl
popf
cmpsl
pop
out
cmc
push
sbb
dec
leave
jl
jecxz
jge
ret
mov
mov
popl
mov
and
int
pop
dec
ret
pop
fidivrs
cmp
mov
dec
lock
mov
subb
cwtl
incb
iret
jmp
int3
les
in
into
adc
lds
ja
scas
enter
sbb
pop
sub
mov
add
or
jnp
cmp
pop
fwait
lcall
mov
js
bound
rolb
fistps
mov
inc
aad
add
pop
mov
sti
cmp
pop
lods
mov
loop
dec
insl
jl
out
dec
pop
fs
ljmp
icebp
outsb
pop
jo
ljmp
lcall
stos
mov
mul
pop
scas
push
pop
fdivl
push
and
rorl
ja
and
sti
push
lret
in
sub
mov
insb
imull
in
out
xchg
or
jmp
outsb
je
test
fistps
enter
popa
pop
push
mov
out
daa
xchg
xor
test
repnz
mov
sbb
add
loop
sbbl
pop
cld
sbb
outsl
imul
repnz
add
push
inc
hlt
scas
repnz
mov
popf
or
mov
xor
jns
jge
gs
inc
outsb
nop
mov
aaa
lahf
scas
pop
jo
cmc
imull
test
pop
jmp
popf
popf
mov
sub
cli
nop
lret
out
pxor
shl
arpl
iret
stos
lods
pop
sahf
jg
lods
rcr
repz
lcall
add
lahf
pushl
popf
pop
lret
adc
insb
xchg
sub
outsb
jno
xor
jae
fisubrl
and
dec
call
jno
rorb
cmp
jo
aas
movsb
dec
jo
inc
add
push
cmpsl
jae
push
aad
or
jae
push
and
pop
dec
cmc
sub
fs
orl
cmp
xchg
movsb
fisttpll
in
pusha
sbb
stos
mov
sbb
push
or
dec
mov
xchg
adc
cmp
repz
outsl
mov
cwtl
inc
into
sbb
scas
das
stos
cmp
jle,pn
mov
icebp
leave
sub
nop
and
xchg
test
sti
pop
adc
cli
push
xchg
and
cmp
jmp
lcall
cltd
dec
jle
jbe
mov
xlat
shlb
enter
outsl
or
mov
jb
adc
jns
adc
mov
xchg
in
popa
bound
daa
add
inc
ret
syscall
and
dec
pushf
dec
gs
leave
int3
enter
push
sbb
push
or
xchg
leave
test
mov
or
dec
aad
out
ljmp
outsl
fildl
loope
mov
hlt
dec
out
cli
cmp
dec
inc
gs
cld
ss
js
mov
sarb
fdivrs
mov
cwtl
loop
mov
adc
pop
jne
pop
ljmp
or
shll
or
test
mov
jbe
mov
pop
fsubs
cld
dec
lcall
ss
mov
push
testb
imul
rcr
sub
movsb
add
in
jp
fs
fcoml
daa
add
imul
pop
aad
arpl
aam
out
aad
hlt
pushl
popf
add
push
inc
mov
inc
mov
cld
pop
lcall
jns
sysenter
mov
adc
rclb
push
push
jp
and
into
cli
xor
das
loopne
pop
inc
xchg
jp
jne
ljmp
mov
inc
push
repz
add
into
stos
movsl
mov
mov
xor
adc
out
ret
pop
jmp
popf
not
std
mov
jnp
mov
xor
jmp
xchg
xchg
jp
add
lods
jmp
xor
add
es
jp
cmp
mov
add
in
inc
inc
test
test
cld
add
pop
idivb
enter
inc
hlt
in
aad
add
dec
pmaxsw
stos
test
sub
cld
jecxz
outsb
in
pop
outsb
dec
movsl
mov
lods
stos
and
hlt
push
mov
in
lcall
lock
jl
pop
int3
xchg
scas
cwtl
pop
lods
out
cs
and
lods
push
sbb
inc
mov
push
xor
push
mov
xchg
fwait
in
mov
pusha
shl
stc
jb
aas
data16
jp
clc
sbb
push
mov
ljmp
push
xchg
xor
lods
pop
add
push
sbb
shrl
bound
lcall
in
andb
inc
sbb
sbb
push
fs
shl
addr16
add
lret
ret
push
rolb
add
jae
scas
movsl
lock
mov
xor
push
repz
lcall
movsl
mov
mov
iret
lods
jge
mov
outsl
aam
repnz
and
les
cwtl
inc
in
data16
dec
ret
adc
mov
mov
cmp
push
jp
shlb
push
in
lods
adc
adc
lcall
jecxz
mov
pop
ja
inc
loope
dec
dec
and
addr16
inc
mov
cmpsb
inc
test
jge
ds
in
lret
imul
int3
jnp
mov
xchg
insb
sbb
cmp
loope
imul
mov
sub
pop
push
jg
push
sub
aas
or
mov
ret
push
fldenv
pusha
or
testl
cltd
sbb
lea
push
jmp
or
sbb
pop
jo
and
jne
jmp
mov
xchg
jae
ds
add
add
jp
and
cmpl
leave
ret
jg
jns
add
leave
cmpb
daa
test
dec
push
and
or
insb
notb
ror
insl
dec
or
cmpsl
fs
aaa
dec
mov
xor
xchg
jne
mov
mov
pop
mov
mov
cmp
fnstsw
pop
adc
sub
dec
dec
jle
push
pop
xchg
enter
sub
fs
fiaddl
arpl
imul
lret
rep
adc
insb
mov
jecxz
adc
xchg
mov
int
jge
xor
xchg
mov
stos
pop
test
pop
cltd
roll
mov
js
iret
orb
fwait
stos
jo
imulb
int
mov
push
sbb
adc
mov
cmc
jo
mov
mov
mov
cmpb
in
sbb
cmpsb
sub
fyl2x
adc
lock
pop
rolb
add
cmpl
mov
addr16
jge
and
jo
jno
sub
imul
mov
add
pushf
popa
sarb
fildl
pop
fistps
cmp
mov
jno
test
and
inc
or
outsl
into
insl
test
mov
pusha
in
mov
push
aaa
lds
pop
mov
add
outsl
mov
fsubrs
jo
adc
and
cmpsl
ja
xlat
arpl
sbb
jbe
fisubl
out
stc
iret
loopne
sbb
jl
rclb
fdivrl
mov
pop
cmpsl
in
pop
xchg
or
call
in
cmp
push
popa
pop
loopne
lret
popf
pop
loopne
cmp
icebp
jno
lock
fbld
cld
sub
push
pop
in
cmp
ds
lods
sbb
loope
outsb
rolb
fbld
popa
aam
push
mov
add
xchg
nop
sub
bound
inc
mov
iret
out
pop
das
dec
lcall
out
dec
pop
test
sbb
cmpsb
mov
mov
jp
xor
cmp
repnz
sub
jo
dec
cld
mov
fisubs
dec
cmpl
call
pop
push
je,pt
jo
je
shrl
add
adc
test
pop
sub
out
mov
mov
cmp
jae
xor
xlat
mov
subb
inc
jp
lret
jae
bound
pop
and
imul
sub
xchg
pop
shlb
fldenv
das
xchg
aas
adc
sahf
out
push
cmpsb
cmp
daa
mov
xlat
xchg
pop
pop
mov
shll
scas
mov
insb
lahf
cs
pop
in
jp
dec
lret
lods
addl
inc
pop
scas
cmpsb
mov
pushf
inc
push
movsb
xlat
js
mov
rclb
xor
add
mov
xchg
jno
dec
sbb
mov
mov
or
movsb
xchg
sbb
insl
and
pushf
sub
and
mov
stos
add
inc
xchg
js
sbb
imul
lock
push
mov
xchg
pop
pop
imul
jne
dec
popf
xchg
shrb
add
mov
fs
jno
xchg
out
pop
or
data16
clc
jae
pop
aad
add
into
data16
sbb
out
inc
mov
fwait
push
mov
enter
bound
push
pop
ret
imul
jno,pn
mov
movsb
adc
or
fbld
stc
dec
and
add
sub
sbb
adc
test
loopne
mov
jmp
addr16
lds
jmp
shrb
les
fwait
incb
sbb
test
ljmp
andnps
add
mov
fs
orb
push
dec
repnz
shrl
call
mov
cmovbe
jo
xchg
pop
mov
mov
cmp
out
jle
sarl
outsl
push
cmp
sbb
push
sti
das
mov
ljmp
inc
sti
or
jo
pop
loopne
lods
xchg
pop
test
sbb
dec
gs
jne
mov
js
dec
sarl
ror
add
pop
icebp
mov
xchg
jns
rcrl
push
out
test
push
mov
sub
push
dec
js
sbbl
ds
push
hlt
cwtl
lods
loop
clc
out
jmp
push
lods
in
int
mov
addr16
push
addr16
les
xor
push
fistps
mov
xchg
jns
sbb
loop
mov
lea
pop
shrl
call
and
fcomi
or
push
shll
pop
in
mov
decl
sub
mov
xorl
fwait
mov
ss
sarb
cmc
stc
mov
xchg
daa
dec
shll
add
add
leave
inc
scas
pusha
cmp
pop
mov
and
inc
mov
mov
push
cli
fdivs
adc
sbb
in
lock
or
dec
pop
inc
pop
fnstsw
or
xchg
adc
push
aas
lds
pop
repz
not
jne
add
jge
aad
adc
sbb
fwait
mov
imul
pop
fstpl
mov
sub
jecxz
loop
mov
hlt
push
push
push
in
jge
imul
adc
data16
es
mov
jo
push
inc
or
inc
out
pop
add
pop
sub
imul
xor
insl
cli
test
mov
inc
scas
into
adc
ja
inc
frstor
adc
xchg
cmpsl
add
lret
sbb
outsb
leave
test
cmpsl
xor
or
daa
loopne
mov
mov
jp
rcr
hlt
fidivrl
shl
jno
xor
sub
inc
pop
into
int
xor
sbb
pop
dec
mov
out
loopne
rcrb
sarl
mov
in
dec
xchg
icebp
aad
adc
add
xor
jecxz
adc
cmpsl
xor
pop
lret
mov
cwtl
and
repz
adc
xchg
push
dec
scas
aas
imulb
pop
push
lds
inc
adc
into
inc
lahf
sahf
lahf
mov
xchg
fdivp
stos
scas
stc
fstpt
push
mov
pop
movups
sub
jnp
aad
mulb
and
std
ja
push
inc
inc
push
inc
in
adc
sbb
into
clc
cmpsl
sbb
sub
std
jne
push
outsb
and
rorb
pextrw
adc
ficoms
lcall
inc
adc
sti
pop
pop
xor
int
jnp
dec
sub
dec
sahf
bound
dec
add
dec
stc
inc
mov
jl
and
cmp
mov
shrl
pop
leave
rorb
fildl
dec
mov
lea
mov
cmp
push
mov
xchg
mov
lods
adc
pop
jg
push
scas
mov
push
and
jecxz
stos
cltd
mov
incl
stos
mov
mov
pop
mov
xchg
decl
es
jg
mov
jnp
jo
outsb
call
cwtl
test
dec
call
shll
fcmove
nop
mov
repnz
shll
into
xchg
repnz
fstpt
sbb
cmp
jmp
mov
sahf
ficoml
adc
loopne
jae
cld
out
push
movsl
adc
ret
add
out
pop
pop
cmp
mov
std
mov
xor
sub
adc
ficoms
fnstenv
cmp
fwait
stos
mov
jl
negl
mov
jae
repnz
xchg
mov
xor
mov
cli
xor
xchg
aad
repnz
jo
adc
xchg
add
sti
mov
stos
divb
jmp
lods
iret
mov
lock
or
addr16
dec
lea
loopne
movsb
in
xor
add
mov
xor
xor
mov
int
sub
stos
sub
and
mov
mov
push
shl
fcoml
stos
mov
in
int3
lret
stos
es
dec
lods
cmpsl
movsb
jmp
push
fwait
cs
fsubrs
dec
sbb
fwait
push
mov
pop
pop
xchg
gs
push
rcll
lds
inc
dec
aaa
je
mov
test
or
out
adc
imul
ds
aas
lods
and
mov
sahf
push
adcl
je
mov
push
lahf
lret
mov
icebp
xlat
pop
jp
inc
setae
push
scas
scas
dec
sti
fs
or
cmp
mov
out
push
and
xor
dec
jl
push
or
mov
fldt
mov
mov
lds
lods
jp
xor
or
xor
movsl
rorl
dec
fnstsw
and
inc
inc
scas
pop
mov
es
mov
pushf
cli
dec
jnp
mov
xor
xor
push
pop
mov
lcall
in
cmpsl
pusha
xchg
fwait
sti
dec
xor
mov
addr16
adc
push
icebp
jbe
loop
inc
jbe
out
repz
scas
sbb
sub
mov
lret
out
movsb
jne
jmp
or
xor
xchg
cmp
out
sbb
jge
jae
test
push
in
add
mov
bound
int3
fimull
push
mov
and
inc
xchg
push
xchg
fildll
ret
cmc
or
loope
pop
in
subb
push
loope
cmpsl
daa
adc
ljmp
push
in
test
push
xchg
cmp
mov
mov
xchg
jae
push
push
cltd
movsl
sub
lea
fsubr
xchg
ror
js
dec
insl
pop
insl
or
lret
inc
and
push
push
ds
xchg
std
lea
or
jb
xchg
push
xor
decl
add
mov
mov
pop
negl
inc
sbb
adc
lods
and
adc
stos
std
imul
std
mov
stos
inc
jl
and
sub
fidivrs
dec
cmp
fisttpll
test
insb
frstor
xor
xor
pop
cmp
into
nop
mov
icebp
jmp
je
adc
idiv
or
jbe
cmp
xchg
scas
sar
xchg
sub
xchg
repz
pop
es
addl
pop
mov
fdivs
icebp
mov
jge
lock
ss
cmpsl
cmpsl
in
xchg
xor
mov
dec
dec
xchg
add
frstor
popf
mov
mov
push
gs
cs
cli
xor
cli
movsl
dec
xlat
clc
cmp
js
outsl
into
add
push
xor
fpatan
xor
fsub
jmp
loope
or
sub
aam
mov
or
and
push
mov
inc
ja
pushl
ret
sbb
xchg
adc
out
test
cltd
outsb
pop
into
push
clc
sti
mov
int3
pushf
mov
cli
ret
xlat
add
out
and
cwtl
dec
ss
mov
outsl
sbb
pop
clc
out
mov
xor
popa
inc
fs
mov
pushf
lret
lret
fldl
xor
push
js
sub
stos
mov
pop
inc
add
out
push
mov
adc
cmp
mov
mov
movsb
addr16
mov
inc
xorl
cmp
lahf
arpl
nop
inc
lea
daa
cs
cltd
or
jne
ficoms
inc
les
push
aaa
or
fsts
scas
pop
mov
dec
jo
fisttpl
dec
jnp
xlat
cwtl
mulb
repnz
out
and
out
cmp
sti
gs
mov
out
push
add
inc
loop
dec
imul
stc
jle
add
and
and
ret
sbb
xor
and
mov
pop
sahf
cmp
xchg
inc
into
in
jb
add
stos
test
les
add
sub
das
xchg
cmc
ret
test
in
pop
popf
test
into
pusha
je
aad
mov
inc
clc
shrb
cwtl
xor
sub
inc
insb
sbb
test
pop
insl
jge
push
aad
or
scas
push
scas
adc
pop
je
ffreep
push
leave
mov
fmulp
cmp
xor
ret
ljmp
subb
cmc
add
and
notl
lock
aaa
ret
sahf
and
xchg
cmp
or
int
movsb
cmp
xchg
add
jnp
xor
or
aam
xor
out
xor
inc
pusha
addr16
push
xor
mov
divl
cmpb
dec
ret
pop
mov
mov
xorb
loope
add
push
cmp
filds
lea
jae
daa
pop
fwait
scas
fwait
or
fsubl
xchg
inc
nop
lds
mov
jecxz
mov
cltd
stos
sbb
cmpb
pusha
add
mov
in
or
aam
xchg
dec
cmp
mov
int3
scas
pop
mov
enter
xchg
mov
jecxz
fiaddl
inc
fdiv
mov
fs
loope
sub
add
adc
push
bound
pop
out
test
push
dec
pop
shlb
popf
sub
add
mov
int3
movsl
jbe
ja
pop
mov
fs
fidivs
adc
mov
mov
mov
add
popa
sbb
cmp
adc
frstor
into
rcrb
jno
sahf
mov
mov
mov
mov
xchg
adc
ljmp
xor
cmp
stc
int
ss
lock
imulb
pop
pop
loope
jb
pop
dec
mov
test
add
inc
rorl
and
mov
dec
mov
mov
imull
repz
iret
lahf
xchg
dec
into
sbb
mov
dec
out
sub
rorb
rcl
call
adc
mov
mov
leave
sub
arpl
addr16
pop
incb
in
nop
jge
aas
int
pop
ds
imul
shll
xlat
icebp
inc
sub
mov
decl
sub
test
cmp
dec
xor
add
mov
pop
lock
jle
cld
sbb
pop
and
mov
xchg
and
xchg
sub
adc
inc
pusha
pop
sbb
in
imul
pushf
mov
call
loop
push
stc
scas
js
stos
sbb
push
cmpl
sbb
fmull
and
sarl
jb
ror
push
mov
dec
add
shlb
mov
pop
push
xor
nop
xchg
roll
or
inc
popf
cld
xor
je
imul
jmp
test
jnp
ljmp
test
mov
jge
icebp
sbb
hlt
std
inc
lret
cli
pop
sub
jae
and
add
jp
cmp
add
xor
rorl
adc
dec
out
cwtl
xorl
add
jae
push
shl
jp
dec
push
jbe
int3
or
in
xor
scas
fbstp
xor
mov
cmpl
push
fldt
mov
add
mov
push
cmp
add
cmp
paddw
dec
mov
jmp
je
loope
ret
push
sub
pop
adc
fistpl
jle
dec
or
scas
cmp
mov
push
aas
pop
sub
pop
in
jns
jb
push
mov
cmp
mov
sub
adc
mov
pushf
leave
pop
fwait
insl
adc
repz
cli
inc
ja
icebp
sub
add
push
xchg
popf
and
jb
lds
sub
popf
fisttpl
adc
movsl
hlt
xor
sub
pop
out
dec
jge
gs
jp
sbb
xchg
sub
push
mov
iret
bound
lds
into
loopne
shlb
mov
js
es
cmp
jo
outsl
push
int3
cwtl
mov
xchg
popf
push
pushf
mull
sub
nop
aas
icebp
add
stos
js
enter
jecxz
jbe
or
out
ljmp
sbb
inc
fsin
test
repnz
xor
mov
push
dec
add
xchg
std
mov
fidivl
pop
addb
daa
add
jl
and
add
ret
cmp
adc
mov
cmpsb
and
xor
inc
ret
inc
andb
popf
insl
fidivs
jle
xchg
add
out
sahf
mov
stos
xchg
mov
push
mov
pop
out
sub
repnz
fninit
pushf
xor
pop
xor
xchg
pushl
push
mov
out
inc
test
into
ret
js
cld
jmp
icebp
push
jno
inc
xlat
xor
mov
ss
push
fwait
and
imul
or
fnsave
shl
push
jbe
insl
aam
push
dec
push
ljmp
or
ds
adc
cmp
sub
mov
sar
add
rcrb
lahf
fstp
popa
out
xchg
in
aas
pop
mov
insb
pop
mov
inc
daa
fdivr
cltd
out
lea
ljmp
mov
inc
orb
add
and
fidivrs
xchg
add
out
insl
rclb
shrb
scas
in
inc
in
hlt
xchg
adc
push
push
add
scas
xor
xchg
dec
mov
enter
push
dec
in
inc
xorl
dec
push
push
push
insb
sbb
icebp
and
jae
xor
mov
test
adcb
int3
fimuls
add
lcall
insl
cmp
adc
pusha
jno
fdivl
fisubrl
mov
les
push
sub
adc
mov
outsl
and
cmp
lea
loopne
dec
lret
in
pushl
pop
jp
pop
jae
pop
in
add
outsl
cmpsb
hlt
add
inc
jecxz
sbb
push
cli
sbb
push
inc
xchg
test
pop
xchg
xchg
daa
dec
xchg
xlat
pop
dec
cmc
es
insb
mov
lcall
insb
ret
popa
mov
pop
stos
dec
add
pop
cli
popa
or
incl
fisubrs
mov
jl
sbb
sub
adc
movsb
adc
mov
ficoms
iret
test
xor
mov
sbb
mov
or
add
or
pand
insb
shrb
jnp
scas
sbb
jmp
leave
addb
push
test
and
add
lret
push
pop
xor
sar
bound
sbb
aam
sub
lods
cs
pop
sbb
mov
adcb
fistpll
pop
jno
lret
mov
sub
cmpsb
fwait
push
fldl
mov
jg
jp
inc
adc
out
mov
cmp
and
test
mov
test
xchg
popa
xchg
mov
out
xchg
mov
call
aas
imul
and
inc
and
test
aas
out
cmp
jl
call
mov
inc
mov
cli
fucomp
cmc
mov
fcmovnu
dec
pop
leave
or
pop
xorl
js
or
cmc
or
fidivrs
dec
stos
sbb
pop
and
pop
leave
lret
fiaddl
or
imul
fmull
jge
mov
fadd
add
jnp
push
jp
or
jo
int3
movb
fs
fistps
std
xlat
ret
mov
or
test
fs
jo
or
lock
movsl
xor
add
dec
lret
sahf
jp
push
call
punpckhdq
add
js
push
into
mov
add
mov
int
ljmp
or
iret
jge
inc
in
adc
jbe
cmp
ret
cmp
fs
mov
xchg
push
jecxz
rol
pusha
enter
jl
jb
lock
shrb
add
lods
cmpl
jmp
in
outsl
push
xor
mov
lock
pop
xor
cmp
aaa
fidivs
xor
add
test
dec
ljmp
jecxz
in
adc
cmp
jl
or
xchg
nop
push
lods
loop
and
mov
xor
adc
repnz
mov
dec
xor
rclb
outsl
jle
mov
xchg
pop
aam
and
xchg
popa
jbe
mov
push
push
mov
aas
mov
rcll
and
int
xchg
loop
movsb
and
repnz
enter
ds
insb
adc
aam
inc
push
add
test
xlat
in
scas
xchg
lods
mov
pop
mov
xor
popf
sub
sahf
mov
xchg
es
cld
imul
pop
lcall
mov
movl
xor
or
lods
jle
mov
mov
scas
popa
shll
filds
cld
aam
addr16
inc
out
movsl
outsl
je
inc
dec
jne
subl
fucom
sbb
push
ret
scas
jne
addr16
jg
out
xchg
in
inc
stos
lods
lock
sub
jge
jae
in
cmp
dec
into
adc
ror
mov
adc
mov
clc
icebp
nop
jecxz
push
lcall
mov
test
and
in
das
mov
mov
jl
mov
out
daa
in
dec
sub
les
add
mov
sbb
push
mov
mov
or
jmp
xor
xchg
adc
dec
les
popf
xrelease
aad
iret
enter
fistpl
mov
jecxz
out
pop
mov
mov
mov
loope
popa
cmp
and
cwtl
mov
jnp
adc
mov
rolb
pusha
cmc
mov
insb
pop
lret
pop
jge
jecxz
daa
pop
sbb
push
pop
movsb
int3
xchg
stc
hlt
push
inc
mov
sbbl
cmp
add
dec
jge
dec
enter
out
addr16
xchg
inc
loope
call
into
out
aaa
ret
cmpsl
fildll
lret
leave
je
adc
into
mov
xlat
xchg
je
mov
jmp
xchg
push
jle
xor
es
loop
jp
adc
jnp
dec
adc
adc
push
and
ficoms
out
scas
out
aam
ja
jo
mov
data16
add
push
push
push
popf
cmp
add
or
imul
fsubl
cmp
cmp
xchg
dec
mov
outsl
push
jne
xchg
xchg
icebp
inc
or
or
jmp
jnp
aas
test
lods
mov
pop
sub
push
dec
cmc
jp
jmp
pop
fstpl
loopne
dec
sub
adc
enter
cmpsl
jmp
xor
cld
sbb
xchg
fisubrs
in
shlb
leave
enter
mov
add
stc
addb
es
or
push
push
cmp
cmp
mov
cmpb
addr16
dec
stos
xchg
popf
in
mov
mov
daa
lcall
gs
xchg
decl
jno
and
push
inc
in
bound
push
fwait
xchg
lret
test
mov
in
xlat
or
loop
xchg
cmp
jo
popf
addr16
add
into
mov
iret
cmp
mov
outsl
mov
sbb
insl
notb
cld
fbld
dec
xor
lock
lds
mov
jne
pop
mov
cli
adc
stos
jae
dec
std
dec
sub
arpl
lds
jmp
push
sti
daa
leave
xchg
mov
movsl
es
aam
subb
sarb
xchg
mov
inc
add
jl
icebp
iret
aam
popf
loopne
pop
add
mov
push
fwait
push
push
shll
cmp
inc
jb
jge
cmp
xchg
pop
in
push
stos
sarb
fwait
inc
mov
jae
rorb
lret
or
cmp
int3
popf
mov
mov
xor
adc
mov
imul
mov
dec
dec
pop
insb
ss
adc
or
sbb
jne
bound
xor
lahf
xor
fbld
adc
lods
scas
out
xorl
and
inc
inc
clc
and
jl
push
jge
pop
xor
cli
out
xchg
pop
xchg
sbb
mov
mov
lea
repz
imul
enter
ss
mov
hlt
fwait
ljmp
or
outsb
or
lea
cmpsb
testb
jae
loop
inc
imul
adc
mov
jge
scas
sub
testb
sub
mov
sti
in
adc
jl
movsb
xchg
lods
sub
adcl
or
and
pusha
mov
inc
or
xchg
in
sti
ljmp
daa
lea
popf
dec
orb
or
adc
stos
add
sbb
int3
and
adc
into
sub
xchg
out
push
stos
and
cmpsb
mov
fbld
loopne
js
jl
pop
jmp
mov
inc
add
pop
mov
fmuls
and
push
or
call
push
andb
lea
jp
test
xchg
push
loop
push
xor
fcmovne
jg
xor
sbb
es
xor
mov
xchg
fisttpl
sti
mov
aaa
sub
push
imul
xchg
sub
scas
imul
sub
push
or
add
pop
ljmp
lret
push
mov
push
stc
sahf
test
sbb
addb
mov
ljmpw
rolb
jmp
shld
popa
pop
cwtl
pop
or
push
popa
out
movl
inc
sbb
mov
les
shlb
mov
dec
xchg
inc
jle
vmovdqu
stc
adc
inc
scas
shlb
subb
rcll
addr16
in
insl
bound
aam
lahf
and
scas
push
jle
jl
loopne
jne
adc
rolb
loope
push
in
outsl
pop
fnstenv
ja
imul
aas
aaa
xchg
sub
test
repnz
xchg
xchg
stos
outsb
out
adc
or
inc
xchg
cmp
jb
mov
nop
mov
scas
cmp
movups
cmp
xchg
mov
xchg
or
rorb
inc
jmp
xchg
flds
dec
pop
or
imul
and
xchg
cmpsb
lds
jge
pop
arpl
jae
sub
hlt
ljmp
xchg
push
icebp
rol
es
mov
add
inc
mov
std
rcll
fbstp
les
and
stc
lds
push
lods
xorl
es
in
add
xor
imul
popf
xchg
mov
add
nop
xchg
sahf
sahf
cmp
xchg
test
sub
ss
movsb
lahf
inc
into
aaa
pusha
jb
dec
sbbb
stos
sbb
ss
mov
aad
mov
data16
push
fmuls
clc
out
out
clc
or
xchg
dec
rcll
lahf
clc
inc
cli
jno
fcmove
xchg
xlat
loop
pop
jo
fdivr
test
or
ret
push
test
cli
lcall
cmpsl
imul
pop
inc
cltd
test
arpl
jnp
inc
arpl
lods
fcmovb
jne
mov
inc
or
test
add
nop
sub
adc
xor
pop
jne
adc
rep
aad
adc
jno
lods
mov
inc
cltd
daa
call
jns
pop
jb
pop
lcall
xchg
sub
je
rolb
sub
cli
mov
lock
mov
leave
jmp
sbb
gs
loop
mov
add
jmp
scas
imul
outsb
cmpsl
pop
inc
movsb
pop
scas
shrb
and
ja
pop
bound
sub
lods
daa
out
inc
xlat
push
mov
jecxz
call
cmp
and
aam
cwtl
mov
xchg
xor
lea
mov
ja
xor
pop
enter
shll
adc
mov
shl
in
test
movups
mull
sub
out
mov
cmp
insb
inc
inc
test
out
hlt
cli
xchg
mov
gs
sti
cmp
jmp
sbb
pop
xchg
mov
inc
dec
pop
outsb
stos
sahf
cmp
lcall
addr16
dec
lods
clc
clc
mov
pop
movsl
ss
sub
je
pop
sbb
les
fbstp
or
jl
cs
das
or
cmp
std
out
in
sub
mov
scas
mov
out
repnz
cld
push
daa
adc
fimuls
mov
dec
jno
test
subl
test
jno
dec
es
out
inc
jecxz
pop
pop
shll
xchg
jl
mov
and
cmpsl
ret
jge
rorb
andl
filds
add
aas
mov
sti
push
mov
mov
xor
push
addr16
imul
sub
cmp
jns
leave
je
ret
popf
data16
cmpsl
lods
jne
fistpll
sahf
cmpsb
lahf
lds
mov
imul
ret
xchg
fmuls
xchg
mov
lock
adc
jle
arpl
cltd
add
xor
add
repnz
mov
add
scas
xchg
push
inc
insb
cwtl
inc
out
orl
xor
ljmp
loope
push
scas
add
push
and
shrl
lea
pop
loop
loope
scas
adc
into
arpl
add
fcoms
cld
repnz
addr16
pushf
or
xor
pusha
cmpsb
loop
lahf
icebp
and
add
sub
inc
adc
sub
jne
mov
out
fstpt
xorl
mov
enter
push
jb
test
sti
jg
arpl
outsb
fldcw
adc
lods
jg
mov
sub
fucomi
iret
xchg
aam
repz
pop
ja
xchg
jnp
mov
test
jae
js
ret
xor
fwait
mov
icebp
arpl
add
int3
add
scas
mov
jne
shlb
loop
sbb
ret
test
scas
mov
mov
and
ret
scas
and
cmp
stos
lock
adc
sbb
shrl
cmp
shll
jl
jge
pop
xchg
jg
aas
xor
roll
scas
or
pop
sbb
shll
into
mov
into
ror
xchg
mov
int3
cmpsb
popf
ss
inc
push
mov
lcall
jne
jecxz
push
xchg
mov
outsl
xchg
mov
sti
dec
cmp
cmp
xchg
aam
popf
aas
xor
loopne
lret
pop
shl
dec
cmp
dec
divb
into
add
and
iret
jno
add
lods
sbb
stos
scas
scas
cli
daa
std
adc
jbe
outsb
jbe
out
xchg
cmpsl
fistpll
cli
sub
bound
dec
adc
pop
iret
loopne
pop
jl
push
or
imul
mov
and
sbb
dec
inc
or
jge
mov
mov
imul
mov
sub
rcrl
lods
push
leave
es
pop
mov
and
ficomps
dec
and
dec
mov
xor
adc
shl
cmpsl
pop
ds
cs
loopne
adc
sub
add
loopne
lods
dec
imul
push
js
cmpsl
and
outsb
divl
mov
movsb
stc
stc
std
mov
in
dec
mov
jmp
daa
jns
pop
jl
inc
mov
add
test
fcoml
adc
shll
pusha
jmp
ja
xchg
mov
mov
adc
or
mov
xchg
int3
sub
inc
sub
aad
test
and
inc
fcos
lods
cs
mov
xor
and
and
cmpsb
push
into
movsb
xor
popa
aad
rolb
jne
ret
int
out
sahf
mov
dec
icebp
lock
adc
mov
enter
mov
hlt
sub
inc
loopew
sbb
jecxz
mov
adc
es
lret
popa
sbb
dec
das
mov
inc
stc
mov
stc
mov
add
dec
dec
fisubs
repz
std
and
repnz
xlat
sub
dec
add
dec
mov
aas
cmp
jge
xchg
mov
inc
aad
push
inc
or
or
jbe
push
or
div
sbb
jns
lods
cs
jae
sub
mov
xlat
dec
gs
fsincos
push
pusha
loope,pn
les
in
xchg
jge
adc
sub
inc
sub
pop
aam
sbb
das
push
or
xor
test
pop
mov
cmpsb
imul
js
push
jge
fiaddl
xchg
push
enter
setae
and
cltd
int3
xchg
lock
dec
insb
push
jno
push
je
lcall
xchg
insb
adc
mov
inc
jl
enter
lret
dec
mov
cwtl
cmp
popa
mov
in
cmp
jecxz
push
sarl
push
roll
push
adc
test
scas
jns
add
dec
push
and
dec
inc
dec
pop
ja
addr16
int3
scas
std
hlt
xchg
scas
stc
mov
cs
cmc
or
inc
jnp
mov
arpl
mov
je
adc
cmp
mov
loope
mov
mov
mov
sbbl
int3
jne
fdiv
in
jns
xorl
mov
test
fwait
pop
hlt
push
test
pop
mov
shr
mov
cltd
pop
mov
cmpsb
add
push
or
dec
push
jge
push
out
insl
xlat
jb
out
pusha
xor
hlt
lods
adc
sbb
sbb
rcr
cmc
dec
call
lcall
int
sti
sub
xor
sbb
and
or
hlt
aam
outsb
arpl
dec
pop
and
mov
movsb
inc
cltd
and
mov
aad
sarb
fidivs
and
test
imul
bound
aam
mov
sub
xchg
mov
inc
or
mov
sbb
in
lea
cmp
mov
leave
ja
xor
enter
cltd
pop
sti
lcall
addr16
xchg
aad
adcl
push
test
sub
mov
jbe
pop
nop
daa
sbb
push
into
jmp
mov
clc
pop
out
mov
ret
leave
sbb
sub
cld
sbb
xchg
popf
jne
cmp
adc
data16
sbb
cmpsl
xchg
std
sbb
sbb
and
lret
add
cwtl
or
xchg
inc
jmp
pop
xor
ficomps
jp
sub
fs
test
and
push
dec
mov
xchg
sub
and
popf
or
mov
test
cld
adcb
je
xor
insl
jnp
and
adc
pop
addr16
or
mov
outsb
pop
add
fst
sub
push
mov
dec
je
sub
mov
mov
mov
in
lds
test
test
fs
pop
add
testl
push
lock
mov
pop
mull
call
dec
inc
mov
pop
pushf
pop
fnstcw
dec
lcall
or
call
sub
jle
js
dec
in
pusha
pop
xor
xchg
push
xchg
jecxz
popa
in
sbb
filds
lea
ds
sub
adc
fs
dec
jbe
xchg
ret
fidivl
out
pop
mov
outsb
lcall
dec
pop
sbb
jl
pop
inc
aam
popa
pop
inc
or
pop
sub
cltd
ds
jge
and
xor
fldenv
stos
inc
jge
xor
aad
dec
mov
lods
sub
cltd
rcrb
xor
cld
xchg
jle
or
arpl
mov
enter
inc
xchg
clc
or
mov
mov
mov
sub
push
aam
adcl
dec
out
xchg
sbb
nop
ds
ds
sbb
xchg
in
cmp
jns
cmp
fdiv
not
fldl
daa
xchg
gs
jne
pop
inc
dec
mov
jle
jo
mov
incb
push
repnz
cmc
adc
cmp
pushf
or
adc
mov
lcall
in
frstor
and
dec
cwtl
arpl
aam
sbb
movsl
adc
into
sti
pop
ja
not
jg
je
loop
xlat
jle
test
inc
loope
cltd
cmpb
sbb
adc
ds
test
fstp
mov
iret
in
dec
jnp
xor
in
ss
in
lcall
mov
inc
repnz
fwait
push
pushf
enter
xor
mov
mov
pop
cld
dec
sub
addr16
cmpsl
ds
ljmp
mov
or
sahf
dec
fisttpll
sarl
aam
add
push
push
cld
push
push
je
mov
xor
push
mov
pop
lret
pusha
cmp
dec
jmp
cmp
mov
ja
fisubrl
sahf
push
xchg
xor
lock
sub
xor
faddl
mov
pop
rclb
pop
and
jns
lahf
lahf
sti
daa
in
push
xor
notl
inc
leave
mov
adc
mov
cs
adc
pop
xchg
lods
adc
pop
das
dec
into
aad
xchg
jnp
add
jo
sbb
ficomps
gs
lds
or
orb
and
sub
bound
stos
and
test
rcr
popf
push
shll
dec
pusha
mulb
sti
ljmpw
lods
vpunpcklqdq
add
sub
sarl
xchg
dec
mov
das
lds
dec
sub
cmpsb
add
nop
jns
sub
nop
jmp
mov
pop
shufps
cmp
in
movntps
and
sbb
shlb
mov
mov
lds
rclb
leave
sub
sub
test
divb
js
fs
jbe
sarl
movsl
insb
xchg
cli
adc
jbe
rcrb
outsb
lods
mov
test
pop
cld
sub
sub
fs
mov
lret
xchg
xchg
out
xor
xchg
icebp
js
int
xor
inc
sbb
adc
sbb
movsl
divl
hlt
and
inc
push
adc
mov
dec
sub
ja
lods
xchg
lds
mov
movsb
dec
jmp
rcll
lds
hlt
mov
mov
or
jae
add
sbb
outsb
sbb
or
fldcw
jb
pop
jl
sbb
xchg
dec
in
xchg
jns
mov
and
loope
sub
iret
stos
jmp
sbbb
lods
inc
int
dec
inc
fsubl
mov
or
jne
mov
add
pop
mov
in
inc
call
adc
mov
jno
leave
jp
cld
dec
push
sarl
mov
sub
jb
das
pop
loop
dec
pop
jns
adcl
xchg
or
inc
loope
into
ds
leave
loope
pop
aam
lahf
insb
int
mov
in
adc
cmp
or
or
in
cld
cli
mov
cld
int
cmpb
test
adc
xor
notl
jo
inc
fwait
xchg
mov
loope
pop
xchg
pop
jle
dec
xor
sahf
shll
jmp
add
loopne
add
xor
push
push
stos
jl
add
mov
jbe
and
add
add
pop
imul
sub
mov
push
call
pop
cmp
idivb
xlat
xchg
add
jecxz
in
cld
jnp
mov
pop
mov
in
ret
adc
pop
lret
pop
pop
es
std
jns
out
stc
js
dec
pop
xchg
xor
out
sub
xor
adc
xchg
or
xchg
cltd
inc
push
cli
leave
ss
fwait
adc
sub
mov
rorb
add
xchg
adc
inc
lahf
jne
aam
je
xor
and
js
out
mov
rcrl
in
ja
movsb
push
insb
incb
push
and
push
add
and
sbb
add
adc
popf
mov
imul
out
cmp
mov
into
cmp
inc
notl
cmp
stos
lret
mov
xchg
gs
pusha
add
push
pop
push
imul
ljmp
xchg
mov
push
adc
xchg
fisttpl
iret
xor
jmp
fdivrs
inc
sbb
call
outsl
or
mov
push
lock
xchg
in
xchg
nop
add
jns
lcall
sub
pop
push
sub
and
jo
loopne,pn
lock
sbb
push
loopne
filds
push
xor
test
rclb
push
adc
push
js
adc
jmp
adc
mov
lods
loop
pop
push
sarl
fstpt
pop
movsl
sub
mov
xchg
in
dec
loop
scas
jbe
pop
mov
dec
incl
xor
repnz
mov
mov
cmpsb
inc
lock
mov
pop
add
sahf
mov
mov
push
repnz
or
stos
scas
push
lock
fs
inc
add
mov
add
test
dec
stos
or
fcmovnu
leave
aaa
or
fisttpll
add
repnz
mov
xor
and
xchg
popa
mov
lds
jae
and
push
int3
jnp
inc
cmp
rorl
xchg
sub
int3
xchg
aas
push
dec
test
fs
cltd
leave
mov
push
jnp
adc
sarb
add
shll
mov
into
or
xlat
add
adc
pop
push
out
hlt
jp
insl
add
mov
leave
cmp
jp
fs
cs
movsb
arpl
sub
fildl
xlat
xor
push
mov
sub
xchg
jl
in
je
imul
jl
xchg
insb
dec
sbb
pop
xor
jae
dec
dec
sub
hlt
push
sub
ficoms
mov
xchg
call
sbb
and
push
hlt
cwtl
dec
ja
cmp
pop
sbb
xor
movsb
push
sbb
mov
out
aas
gs
add
xor
push
pop
fdivs
cmc
inc
nop
das
jge
pop
ljmp
repz
mov
push
xchg
aad
or
outsb
in
inc
jo
push
dec
cltd
dec
pop
not
sbb
push
or
in
icebp
sub
sbb
rcll
mov
idiv
test
sbb
rcrb
cmpsl
lret
movsl
sti
sbbb
lret
adc
mov
sbb
into
shrl
adc
adc
loope
mov
shll
lods
test
xchg
ss
mov
xor
pushf
mov
and
push
mov
mov
sbb
xchg
sub
mov
fisubrs
jg
xchg
pop
xlat
and
outsl
xchg
cmpsb
push
dec
bound
sub
lcall
sub
xchg
xchg
cmp
push
push
pushf
je
inc
xchg
movb
inc
dec
jae
lods
sti
js
mov
ds
int
aad
je
faddl
fwait
imul
cwtl
fwait
pusha
adc
add
mov
and
std
push
xor
stos
push
sti
ret
mov
bound
pusha
das
xchg
mov
sbb
xchg
sub
bound
pop
lcall
int3
int
cmpsb
into
xlat
mov
cs
test
xorb
dec
ds
testb
push
mov
lds
xchg
adc
pop
or
inc
push
dec
loop
sub
add
lret
jb
imul
pop
pop
icebp
cmp
dec
ret
mov
adc
jne
mov
dec
push
dec
mov
mov
outsl
jg
ficoml
cmp
pop
aam
inc
rcrl
lret
sahf
inc
mov
lods
lret
mov
pop
dec
into
mov
pop
dec
adc
filds
adc
mov
xchg
cmp
pop
jmp
lds
mov
mov
jno
repz
xchg
rclb
and
inc
decl
mov
xchg
jnp
add
popa
and
les
fmuls
addr16
ret
xorl
push
adc
icebp
mov
pop
mov
add
mov
adc
inc
outsb
cmp
js
lods
test
lods
dec
push
push
inc
gs
push
sub
icebp
cltd
adc
inc
push
loop
addr16
popf
dec
imul
cwtl
roll
rcrb
push
adc
xchg
js
iret
fcomps
mov
pop
loop
pop
or
ds
cmc
insl
test
das
mov
push
fisttpl
inc
mov
lock
sbb
fxch
or
jns
in
add
inc
push
fwait
cmpl
stos
pop
arpl
cli
shrl
sarl
inc
out
imul
xchg
xchg
mov
das
pusha
mov
sarb
outsl
fistpl
jnp
inc
sahf
iret
mov
jg
mov
inc
push
and
jge
rcl
out
jbe
lret
lret
jne
stos
cmpsl
std
lock
xchg
dec
mov
mov
and
or
add
or
dec
dec
addb
inc
cs
test
fidivs
add
mov
mov
inc
xchg
fidivrs
mov
jae
sub
push
inc
fildll
mov
jle
test
test
subb
adc
mov
adc
dec
xchg
mov
js
push
int
hlt
test
pop
lock
out
jns
add
rcll
dec
pop
mov
pushf
xchg
enter
jp
clc
pop
repz
jmp
xor
push
das
int
mov
inc
cmp
lea
cmp
add
sub
in
sbb
mov
push
movsl
das
outsb
movsb
pop
adc
daa
pusha
not
jae
into
cmpsb
dec
hlt
cmp
and
ret
popa
or
mov
dec
imul
pop
xchg
mov
cmp
out
dec
add
lods
into
rolb
loopne
movsb
int
cmp
push
xchg
popf
bound
cld
call
imul
jge
pop
push
mov
mov
clc
outsl
std
hlt
mov
mov
mul
fadds
add
push
add
fidivl
rcrb
and
aas
loopne
loopne
inc
nop
inc
jp
pop
xchg
push
and
push
lcall
inc
test
xchg
aam
repz
sbb
and
xlat
dec
clc
mov
mov
or
xchg
fwait
dec
jns
ret
sbb
add
jmp
dec
inc
adc
xchg
jg
jne
jns
je
jmp
fistpl
lock
mov
stos
dec
flds
insl
add
xchg
mov
sub
popa
mov
sahf
out
sbb
and
dec
das
add
mov
jne
popa
jno
sbb
ret
dec
shll
mov
out
sub
dec
jbe
outsb
pop
dec
inc
fdivrp
lret
pop
addr16
mov
testl
add
fdivrp
aam
jmp
mov
xchg
push
in
cmp
leave
mov
roll
add
loopne
push
fs
inc
cmp
adc
or
jbe
jmp
or
push
push
sub
adc
pusha
pop
xchg
movsb
jo
daa
lcall
lret
cmpb
push
push
mov
cwtl
dec
test
imul
outsb
mov
cmp
mov
pop
sbb
rolb
mov
shl
cwtl
mov
ret
mov
scas
std
mov
push
arpl
aaa
jge
xchg
sbb
fucomi
and
add
hlt
ja
inc
or
push
out
je
or
push
push
cmp
testl
push
cmpsb
out
cmc
inc
les
jae
pop
aad
sti
imul
lock
in
cli
sub
adc
mov
adc
sub
push
mov
push
ret
xchg
add
iret
push
mov
aad
insl
pop
mov
stc
lret
ret
in
je
loop
jbe
cwtl
repnz
mov
mov
cmc
ret
faddp
data16
jno
ljmp
in
imul
das
xchg
mov
mov
pop
inc
lret
xor
lods
cmp
sbb
push
mov
das
mov
xor
pop
int3
dec
xor
fsubr
scas
push
jne
fcompl
mov
icebp
shll
jp
hlt
call
movsb
fnsave
mov
out
add
gs
xchg
xchg
jbe
mov
sbb
mov
js
scas
pop
push
aam
loop
or
insb
in
dec
cmc
ljmp
xchg
mov
add
inc
mov
dec
repnz
fcoms
jb
pop
pop
push
mov
subl
out
jne
or
call
movsl
inc
sub
xchg
mov
jg
leave
pop
cs
add
inc
shlb
push
int
jg
adc
push
lret
xor
fimuls
dec
lds
roll
sbb
inc
lods
add
call
adc
sbb
push
nop
sbb
lds
xchg
call
je
fadd
insb
sbb
ds
pop
sahf
pop
das
in
int
loope
xor
mov
push
inc
out
jne
cvttps2pi
jae
push
inc
lahf
fs
imul
mov
inc
push
mov
stc
cmp
lds
xchg
mov
jbe
sub
outsl
adc
icebp
add
xchg
pop
jbe
in
xchg
mov
and
movsb
leave
adc
test
xchg
cmp
push
pop
push
or
jp
cmp
pop
and
mov
loop
test
push
fucomi
adc
ljmp
and
decl
test
in
push
repz
adc
lahf
jno
or
push
fistps
add
aaa
mov
cmp
std
pop
lcall
shl
arpl
sub
pop
pop
jl
add
dec
scas
movb
lds
sub
mov
fidivrl
scas
adc
pusha
adc
dec
xchg
cli
push
cmc
pop
pop
lcall
cmpsb
sub
and
js
repnz
dec
int
jo
mov
bound
fsubp
pop
jp
inc
loope
pop
js
in
inc
mov
pop
stos
adc
movsl
insb
repnz
je
cmp
scas
and
out
mov
mov
shlb
sub
mov
mov
addl
mov
jbe
cmc
sub
frstor
addb
push
adc
jne
push
cmpsl
xchg
xchg
adc
sti
enter
popa
add
push
lcall
jmp
mov
decl
loop
aaa
dec
shlb
test
pop
jp
pushl
call
int
test
repz
sbb
mov
cmpsb
xlat
imul
or
int3
in
lock
jno
pop
pop
hlt
out
push
cs
xchg
orl
scas
ja
pop
data16
addr16
pushf
mov
and
or
lods
in
aas
faddl
xchg
fs
pop
data16
dec
sbb
push
push
scas
jg
xor
mov
fisubrl
xchg
and
and
mov
stos
or
pop
xor
lods
pop
out
sbb
cmc
lods
fistpl
xlat
in
insl
dec
loop
adc
icebp
sbb
inc
aaa
jne
sahf
cltd
push
dec
mov
aas
divb
mov
push
jns
aam
lods
lcall
push
test
inc
hlt
pshufw
add
and
push
push
cld
xchg
xchg
leave
xor
hlt
xchg
adc
insl
xchg
inc
in
rorb
popa
dec
pop
adc
sbb
mov
sub
nop
addb
out
outsb
repz
mov
adc
fsts
fadd
movsl
and
jle
mov
pushf
rclb
push
push
icebp
dec
scas
mov
stos
nop
add
cli
fbstp
xchg
mov
cmp
arpl
and
pop
cld
cld
mov
push
pusha
sti
sbb
pop
inc
sub
inc
shl
ds
out
cs
mov
cmp
fcos
mov
outsb
mov
les
jmp
cmpsb
das
dec
push
in
mov
mov
int3
adc
es
xorb
mov
scas
dec
addr16
dec
orl
add
cli
enter
jns
sbb
xchg
les
or
imul
orl
fmull
push
bound
mov
push
in
push
outsl
inc
gs
jmp
orl
adc
arpl
ss
mov
xor
add
pop
addps
mov
dec
xchg
add
push
cmp
xchg
cmpxchg
xlat
pop
xchg
repnz
lret
das
aad
leave
or
cmp
sahf
ja
out
jne
mov
add
fisttpll
sti
test
cmp
cmp
ret
push
pop
divl
sahf
aas
jl
shll
fisubl
les
jae
das
dec
int
aaa
jo
xor
leave
rcrl
xor
div
cmp
add
mov
leave
cmp
add
sub
jno
ffreep
push
es
sub
mov
pop
mov
fildl
push
or
cmp
in
out
clc
jge
mov
pushf
cmp
sub
lret
xor
add
xor
adc
sahf
lahf
xchg
enter
sub
jmp
cmpsl
in
out
sti
sahf
out
mov
loopne
and
pop
cmp
mov
cmp
mov
ret
int3
in
int
js
shld
and
sbb
inc
lods
inc
mov
inc
cld
int3
scas
xchg
dec
in
aas
fdivs
mov
adc
mov
mov
inc
adc
fildl
mov
adc
and
pop
adc
std
ret
sbb
aas
icebp
inc
cld
cmp
push
divb
dec
lahf
lds
xchg
fnsave
or
push
inc
mov
sbb
inc
push
add
loopne
adc
push
out
stos
repz
daa
sbb
iret
cld
ljmp
pusha
xchg
or
mov
incb
sub
clc
cmc
mov
dec
dec
lahf
xchg
bnd
adc
cmp
into
lods
rcl
fnstenv
sbb
rorl
sbb
inc
push
cmp
mov
sbb
sbb
pop
shll
jle
pop
rcr
cmp
push
mov
jl
shll
fucomi
jae
test
inc
jne
lock
iret
shll
push
xor
xor
inc
outsb
icebp
jbe
pusha
push
or
or
fcmovnb
ret
lods
mov
stos
xchg
jmp
push
pcmpgtb
int3
popl
lock
pop
cmpsl
add
dec
xlat
push
sarl
sub
fwait
loop
mov
mov
mov
inc
xchg
jae
cli
cwtl
cltd
jbe
shl
or
mov
hlt
cmp
mov
jmp
sub
dec
xchg
ljmp
xor
push
daa
mulb
iret
js
lods
mov
cmp
lock
mov
fstl
xchg
xchg
pop
mov
push
pop
cmp
sub
sti
cmp
pop
incb
cwtl
in
push
movsl
jg
sbb
ret
bnd
test
mov
je
and
pop
jl,pt
das
pop
inc
sub
dec
int
pusha
jle
arpl
push
leave
pop
lods
incb
mov
imul
add
mov
popf
repz
leave
loope
in
aam
mov
outsl
outsl
xor
xchg
jp
jg
and
nop
test
sub
fucom
leave
adc
pop
outsb
jae
or
andl
repz
fcoms
add
adc
rolb
push
shll
pop
movsl
cli
mov
cmp
and
pop
in
sub
cmp
and
rorl
adc
imul
inc
dec
cld
xor
sbb
fwait
das
sbb
ds
lret
jb
mov
scas
cmp
test
ficoml
iret
imul
fistps
inc
mov
cmc
lods
push
and
pushf
dec
ret
leave
lock
lock
jmp
test
mov
or
leave
inc
mov
decl
mov
sbb
inc
mov
dec
push
or
xchg
call
cmp
inc
mov
pop
movsl
test
gs
scas
cltd
dec
xor
test
in
xrelease
add
movsb
lds
ljmp
icebp
or
mov
shll
je
jmp
adc
pusha
sbb
mov
add
mov
jmp
sub
and
outsb
int3
add
xor
mov
push
mov
mov
insb
hlt
subl
lahf
ret
mov
push
aas
divb
fs
xor
push
ja
cmp
add
ja
lret
mov
cmp
cmp
mov
mov
pop
mov
out
mov
push
aad
shl
mov
cmp
or
mov
push
mov
push
cli
aaa
bound
and
push
sahf
sub
xor
std
xor
jae
out
mov
push
cmp
shl
cmpsb
mov
lods
xchg
lcall
dec
scas
add
addr16
test
pop
rcr
in
es
cmc
mov
shll
inc
inc
stos
mov
or
push
jne
rclb
sub
das
std
jecxz
testb
stos
stos
adc
jl
jmp
jmp
std
lods
cs
pop
xor
insb
pop
sub
mov
lds
outsl
je
sbb
sub
pop
jg
cmp
pop
cmp
pop
lcall
adc
loop
cmp
mov
pop
inc
and
aas
xchg
xchg
push
mov
or
cmp
ds
sti
xorb
mov
jns
mov
js
inc
les
mov
cld
pushf
sbb
test
mov
dec
add
inc
adcb
mov
out
hlt
jge
mull
jns
sahf
and
mov
cmp
mov
dec
in
xlat
xor
push
push
les
insl
pop
or
lds
call
dec
mov
xor
add
ds
movsl
xor
add
or
das
pop
adc
xor
fiadds
adc
out
dec
ja
xchg
cs
hlt
adc
enter
mov
aas
cmc
ss
or
jb
popf
dec
pop
pop
and
inc
pusha
push
sti
push
xor
cli
mov
sahf
dec
cmp
repnz
mov
sub
adc
xchg
fcmovnu
mov
jo
rcrb
push
cmp
sub
cs
std
ja
fcmovnb
roll
test
popf
int
in
ss
and
sub
decl
or
adc
sbb
stos
sub
or
gs
sub
mov
popa
xchg
or
push
loopne
pop
lds
jnp
imul
push
hlt
in
add
inc
jmp
mov
mov
jns
sub
rcrb
les
mov
jne
xchg
insl
and
hlt
xor
xchg
test
and
jb
fdivrp
add
or
xor
xor
lods
shll
rcll
je
sub
sub
adc
or
test
inc
negl
push
lock
lcall
cmp
imul
aaa
inc
out
xor
icebp
loop
sub
das
pushf
push
rcl
out
and
lds
fnstcw
mov
dec
mov
cmp
pop
push
add
add
jg
push
iret
shlb
je
fisubrl
mov
andb
les
jae
and
mov
push
pop
dec
xchg
jb
into
pop
fistl
lret
mov
xchg
mov
push
inc
bound
aam
lret
xchg
push
ss
xor
mov
mov
loope
push
int3
adc
call
mov
movsl
fwait
cmp
data16
xchg
pop
repnz
sbb
sub
lret
xchg
and
cmp
push
clc
in
lock
inc
shlb
scas
lods
mov
mov
and
ja
cmp
mov
test
flds
nop
sbb
xchg
and
leave
pushf
mov
aam
lret
pop
je
leave
leave
mov
enter
jo
pushf
mov
or
sahf
and
xchg
jp
adc
movsl
sub
roll
shl
ljmp
mov
xchg
push
shr
mov
jle
mov
cmp
push
add
cltd
repnz
push
sub
and
imul
mov
sti
or
mov
lds
jns
dec
mov
movsl
lret
cmpb
aam
mov
ror
xor
mov
mov
inc
jo
sub
and
aas
shll
call
stos
mov
cmp
lcall
adc
adc
pop
int
shl
cmpsb
pushaw
insl
cmp
or
cmp
cmp
mov
push
dec
sbb
gs
fiadds
jnp
pop
popf
jge
enter
mov
lods
jecxz
test
mov
pop
sub
jae
adc
lret
xchg
leave
cmp
mov
jecxz
xorl
cmpsl
sub
and
jnp
push
sbb
bound
stc
or
stos
pop
jg
out
movb
aaa
adc
mov
jg
stos
pop
sbb
xchg
push
les
sbb
repnz
dec
sub
sub
and
sahf
sbb
cld
mov
in
mov
or
lods
adc
jl
ss
pop
add
sahf
xor
or
or
arpl
and
call
stos
das
outsl
dec
pop
mov
stos
cmpsb
jne
in
lods
sbbb
jae
pusha
das
lock
in
stc
ds
and
cmp
and
or
stos
mov
or
push
dec
sub
pop
xor
repz
dec
inc
xchg
mov
pushf
sub
sub
inc
insb
mov
dec
out
jo
push
pop
cs
adc
xor
fisttpl
das
sti
test
in
cld
adcb
sbb
je
inc
leave
lret
jbe
imul
in
fs
pop
and
dec
mov
fcoms
jns
fstpl
adc
push
sbb
mov
xchg
pop
push
mov
test
popa
xor
jp
dec
sub
sub
outsl
cmp
pop
cmpsl
out
cmpsb
dec
ret
stos
repnz
add
jl
sub
cmpsb
outsl
pop
xor
jae
in
push
xor
js
mov
sarb
jb
add
inc
cmc
sbb
cld
sbb
divb
pop
add
mov
fldz
loop
jp
pop
inc
push
stos
mov
outsb
aaa
cmp
inc
fwait
xor
ja
and
das
sub
mov
imul
jg
aad
mov
fmuls
adc
xchg
add
mov
dec
add
push
add
scas
jg
into
ficoms
test
jmp
mov
or
mov
outsl
imul
leave
aad
cmp
jae
arpl
cmpsb
mov
xchg
mov
outsl
push
push
xor
loop
xor
js
and
insb
cmp
sub
popf
ret
sbbb
popl
push
mov
in
scas
and
jno
int
xchg
repz
mov
fdivrs
push
or
xor
loop
ja
out
mov
jbe
mov
enter
out
fbld
or
mov
insb
gs
cld
imull
outsl
stos
push
popf
mov
enter
inc
push
insl
fsub
push
js
sub
cmpsb
jb
test
ljmp
f2xm1
leave
notl
enter
and
mov
pop
repnz
popf
and
jne
jne,pt
xchg
sbb
fldl
sub
out
nop
push
xchg
cmp
testl
dec
jae
mov
push
mov
push
dec
cmp
cs
jmp
lcall
mov
jnp
sbb
jo
sub
jbe
inc
mov
mov
or
test
xchg
jb
iret
adc
mov
mov
dec
push
dec
or
lcall
into
mov
sub
pop
ja
xchg
xor
mov
movsb
push
xchg
sub
ret
int3
jno
mov
mov
ficomps
sub
popa
out
mov
int3
mov
addr16
lahf
adc
inc
sarl
sub
fnstenv
mov
pop
or
cmp
sbb
jmp
fstpl
xor
xchg
pop
pop
lods
pop
mov
dec
addr16
mov
sub
iret
push
and
into
mov
jmp
xchg
push
xor
push
sub
scas
mov
dec
mov
lahf
push
jb
xlat
and
inc
gs
scas
lods
in
popa
and
call
sub
mov
jg
jmp
cmp
cwtl
into
mov
push
sahf
jg
xchg
cli
push
imul
aad
lods
sbb
xchg
push
mov
mov
jno
dec
lods
sarl
or
inc
enter
add
or
popf
dec
add
pop
shlb
inc
lcall
add
push
and
insb
adc
andb
cld
xor
mov
faddl
vmwrite
xor
jmp
dec
mov
repnz
ds
sbb
mov
push
mov
pop
dec
xchg
insb
andb
cmp
jbe
aad
pop
out
dec
jno
lahf
cmc
add
gs
mov
dec
insb
shl
sub
mov
pop
mov
cld
decl
mov
sti
dec
sub
out
sahf
dec
mov
in
jecxz
outsl
mov
push
sti
jnp
mov
in
ret
lods
mov
pop
and
push
aaa
les
sub
jp
adc
pop
sub
and
ret
repz
pop
xor
sti
fdivrs
mov
inc
cwtl
pushf
incb
in
xor
pusha
cmp
lret
movsb
sbbb
and
dec
insb
xchg
fwait
pop
seta
dec
xor
inc
fstps
add
in
xchg
ds
jle
jbe
and
sbb
dec
out
adc
sub
repz
aad
lcall
and
enter
lock
pop
es
dec
ror
stc
imul
jecxz
sti
aam
push
scas
lea
cmc
sbb
dec
push
out
jge
add
jb
add
push
mov
pop
add
scas
movsl
arpl
rclb
jo
mov
xor
inc
cmp
add
xor
int
mov
xor
inc
push
fwait
stc
cwtl
fwait
push
aam
xor
push
jl
fsubrs
loope
mov
cld
mov
or
test
push
pop
inc
push
addr16
push
pop
cs
jns
bound
loopne
lret
or
ljmp
xchg
add
repnz
cmpsb
cmp
pusha
sbb
mov
inc
or
insb
aad
adc
sbb
add
mov
into
in
jno
repnz
cwtl
mov
rclb
iret
sub
mov
ret
frstor
pop
push
lret
rolb
dec
cmp
rcll
sbb
stos
xor
shr
xchg
push
ficompl
dec
dec
into
sub
push
mov
das
adcb
pop
xchg
cltd
cmp
jae
nop
ljmp
or
imull
xchg
shll
mov
mov
mov
lock
cltd
ds
call
pop
add
fnstcw
pop
imull
mov
push
movsb
mov
rcr
in
or
sahf
jp
mov
jg
mov
lcall
or
lds
cmpsb
xor
pop
out
addr16
imull
dec
test
imul
lock
mov
adc
repnz
pusha
negl
jo
jp
sbb
testb
cli
adc
or
and
andb
in
in
test
jg
loop
jo
mov
fldt
divl
stc
mov
sub
bound
rcr
in
mov
insb
mov
cld
jne
std
je
xor
dec
mov
push
adc
inc
enter
nop
incl
je
jge
push
add
iret
fnstenv
mov
inc
js
mov
iret
lcall
insl
cltd
pusha
test
sub
dec
and
popa
push
lods
push
add
add
jo
decb
jg
sar
repz
andl
in
mov
sub
ljmp
xchg
test
add
mov
cli
ds
sub
mov
cmpsb
pop
lods
fdivrs
adc
cmpsb
mov
in
push
insl
cld
fdivp
dec
fbld
das
lods
iret
xor
xchg
enter
push
pop
outsl
sbb
and
dec
imul
push
into
adc
cmp
out
pushf
adc
pop
lahf
fwait
fsub
jmp
cmpsb
dec
testl
push
ja
dec
pop
and
ret
gs
ret
sub
ds
adc
lret
bound
fists
jb
repz
in
add
mov
dec
adc
insl
das
andb
scas
push
fwait
mov
imul
rcll
xor
scas
fwait
ret
push
and
pop
jb
rorl
cmpsb
icebp
aam
pop
cltd
push
into
add
cmpsl
sub
push
dec
lods
mov
adc
jmp
aam
pusha
xlat
cmp
xchg
loopne
in
or
dec
fwait
divl
iret
loop
je
pop
sub
and
out
push
jg
enter
scas
pop
imul
or
je
insl
push
nop
cmp
addb
sbb
xor
int3
add
inc
out
and
or
xor
jl
push
insb
xlat
sub
xchg
adc
call
rolb
dec
cmpsl
imul
ss
es
les
jo
pop
or
test
xchg
jmp
aad
sarl
out
add
jmp
negl
icebp
jmp
mov
loop
imul
ljmp
jge
inc
fcoml
and
addr16
scas
mov
int
addr16
stos
sbb
push
outsb
loop
inc
mov
cmp
lahf
std
sahf
lea
cmpsb
jbe
jb
gs
jbe
fldenv
push
push
idivb
testl
push
rcll
xchg
sub
or
sub
mov
push
inc
cmp
sub
pop
ret
loop
xor
mov
mov
sbb
jecxz
je
dec
mov
mov
adc
out
sub
adc
out
inc
xchg
cmc
insb
test
out
push
push
cmpsl
inc
outsb
dec
div
cli
pop
sbb
fucomi
cmp
xchg
mov
jp
pop
mov
rcrl
add
inc
adc
cmp
mov
dec
or
push
in
pop
fdiv
lahf
addps
lds
jb
lahf
inc
pop
dec
pushf
sub
push
pop
xchg
sub
out
out
mov
pushf
mov
in
pop
push
mov
or
jno
cmp
loop
pop
loopne
add
outsl
sub
inc
les
add
pop
les
sbb
in
adc
mov
movsb
xor
jmp
inc
cmp
bound
movsb
xchg
mov
popa
mov
std
xor
add
sub
mov
test
enter
xchg
sbb
clc
icebp
fdivs
or
cwtl
subb
or
cltd
mov
out
data16
sub
idivl
jno
pushf
cmpsb
cmc
push
xchg
gs
and
cmp
jo
pop
lret
in
stos
mov
gs
sar
dec
inc
lods
push
or
xchg
outsl
push
xlat
arpl
pop
sbb
cmp
sbb
jp
rorl
inc
movsl
cli
push
or
in
pop
mov
jmp
jae
xor
loopne
cli
enter
add
imul
cmp
fcompp
sti
jb
dec
and
dec
push
add
xor
ljmp
cmp
aam
mov
dec
cwtl
xchg
jnp
push
clc
xchg
pop
hlt
and
and
imul
mov
ds
and
push
inc
jne
filds
ljmp
pop
dec
std
cmp
mov
push
scas
xor
hlt
ss
xchg
pop
rclb
test
and
rol
stos
es
sub
fbstp
out
push
orb
mov
push
jne
xchg
push
mov
push
pop
pop
mov
into
lds
pop
movsb
lret
jle
daa
hlt
cmp
sahf
mov
cmp
xchg
ja
pop
inc
inc
ret
data16
mov
mov
lods
mov
shll
jbe
nop
lret
js
aam
pop
sbb
mov
lea
pop
xchg
sahf
pop
mov
insb
div
incb
into
inc
orb
lock
icebp
pop
in
lods
orb
or
lds
xchg
or
or
add
jo
enter
sarb
shll
pop
pop
xchg
lret
lods
repz
dec
fstl
mov
sbb
and
pop
dec
fistl
int
dec
lds
lret
add
dec
mov
jecxz
xchg
push
sub
in
xorb
sbb
rcrl
aas
push
jnp
lahf
xor
mov
mov
dec
test
aad
xchg
xchg
rcr
add
aaa
out
es
push
pop
rcll
xchg
in
jns
mov
fneni(8087
xchg
jg
leave
jecxz
add
cmpsl
sbbb
xchg
dec
xchg
int
and
mov
cmp
mov
iret
es
cmp
pop
pop
pushf
xchg
push
sbb
xlat
add
dec
dec
and
push
fnstcw
popf
add
imul
sub
scas
pop
pop
into
movsb
movsl
inc
movsb
adc
rcrb
add
cmp
lahf
pop
imul
cmp
stos
inc
xchg
push
scas
xchg
mov
stc
lock
dec
jnp
sbb
cmp
xchg
out
in
loope
push
outsb
sub
pop
imul
out
sub
test
stc
lea
aas
add
lds
enter
or
jns
sti
push
xchg
inc
mov
lods
cmp
pop
pusha
or
pusha
pushf
mov
cli
or
mov
adc
out
pushf
mov
xor
adc
sahf
fdivrl
and
or
jo
mov
out
adc
add
iret
lods
xor
leave
dec
fsubrl
add
push
ds
in
es
ja
arpl
add
dec
cmp
jb
test
add
dec
rol
mov
jmp
fcompl
cld
or
into
mov
jmp
pushf
pushf
push
dec
fsubr
hlt
cli
gs
repnz
les
outsb
xor
pop
fsubr
xchg
mov
and
add
lods
into
adc
repnz
sbb
mov
pop
out
in
fwait
popa
dec
sbb
cmp
push
lret
cs
cmpsl
push
or
jmp
mov
inc
push
sbb
imul
sub
dec
inc
outsl
popa
in
adc
pusha
adc
ss
mov
adc
add
or
aam
xor
mov
inc
sbb
out
cld
cmpb
ljmp
flds
lret
leave
mov
cmp
imul
imul
in
data16
fisubrl
jne
and
outsl
push
or
dec
push
lahf
enter
loopne
data16
xor
lahf
cltd
xchg
test
xchg
or
jmp
rcl
arpl
pop
out
ficompl
in
dec
mov
push
popf
push
jecxz
push
fwait
jl
fidivs
hlt
jns
loope
and
daa
jge
mov
imul
inc
pusha
mov
dec
dec
cwtl
shll
insb
xor
divl
cmp
xor
mov
daa
push
leave
pop
push
loope
sub
jb
addr16
and
inc
mov
in
cs
fsubrl
push
sbb
fs
ret
inc
push
es
xor
hlt
in
data16
push
mov
push
mov
xor
inc
dec
mov
std
inc
cmp
pop
sti
in
mov
es
cld
ficompl
fmuls
jge
or
sti
mov
cs
fnstenv
in
iret
cmp
sbb
inc
xchg
adc
in
cltd
aaa
mov
add
sub
jae
or
push
and
iret
in
mov
jb
sub
add
je
loopne
push
mov
imul
adc
lret
ror
lahf
mov
loope
push
push
inc
lods
clc
clc
es
mov
add
cld
lea
jp
lock
cli
shlb
and
inc
cmpsb
lock
and
inc
in
mov
jo
inc
xor
addr16
mov
in
sbb
imul
lret
jne
push
and
adc
pop
sbb
jmp
mov
cmp
lcall
jbe
jb
scas
es
xchg
xlat
mov
fsin
cmp
jmp
int3
or
adc
mov
loope
cld
mov
fildl
mov
jb
enter
cmp
ss
lea
pop
or
mov
lock
xchg
ret
mov
xchg
ja
dec
and
xchg
stos
cmp
cmp
aaa
in
mull
lods
psubsb
cld
and
push
loop
or
push
jecxz
jp
cmp
jo
jo
jne
sahf
out
and
xchg
inc
insl
sbb
lods
into
out
sahf
jb
cmp
mov
movsl
rorb
push
into
push
das
xor
je
lock
shrl
testb
jle
pop
ret
pop
sbb
cmp
or
ds
cmp
mov
cmpsl
imul
mov
or
inc
std
push
ds
dec
sub
dec
add
adc
cmpsl
or
mov
or
cltd
sarl
int3
je
push
fldl
sub
loopne
sbbl
lahf
ljmp
adc
fimuls
sbb
out
inc
cmp
in
mov
test
insb
adc
stos
movsl
dec
xor
and
inc
push
into
gs
inc
mov
fdivrl
jnp
loopne
ljmp
inc
pop
stc
loop
xchg
in
lahf
int
cltd
adc
mov
dec
test
pop
push
add
xchg
cmp
sub
test
push
jle
ret
and
push
bound
dec
adc
sub
cli
dec
stos
xchg
rcll
pop
leave
out
and
add
inc
imul
mov
fs
std
adc
dec
cmpsb
mov
push
push
loop
lret
xchg
fstpt
ss
cwtl
in
pop
lret
mov
ds
sub
jbe
out
insb
hlt
mov
or
inc
adc
je
xor
cmp
mov
xchg
lods
dec
cmpsl
aaa
xchg
movl
shlb
pop
push
or
mov
jb
popl
and
inc
aas
mov
pop
lea
mov
mov
inc
fsubr
push
and
ljmp
and
icebp
xchg
fsubrs
and
adc
sub
jmp
mov
and
xchg
xor
inc
dec
lods
sbb
rclb
mov
jnp
inc
mov
cmp
in
pusha
inc
xor
aaa
or
push
in
add
add
jae
push
lcall
lret
mov
test
inc
push
les
cmp
jns
test
push
popl
lret
sar
xor
cmpsl
push
pop
outsl
pop
xor
add
and
movsl
jmp
ja
sbb
ds
je
jne
xchg
aas
das
xchg
xchg
xor
mov
pop
push
jo
sti
int3
sarl
jne
sarb
push
cmp
add
push
cmpsl
sub
rcrl
push
pop
in
ret
mov
and
daa
pop
lret
aad
and
std
fisubl
push
adc
mov
mov
mov
mov
mov
cmp
adc
es
nop
sti
and
cmc
fcmovu
outsl
imul
mov
into
xchg
subb
push
push
pop
and
loope
sbb
stc
jge
mov
add
or
sti
push
jno
filds
inc
pop
adc
cmp
xlat
push
mov
cmp
mov
loop
jbe
xor
stc
mov
mov
push
push
xchg
pop
push
mov
mov
mov
leave
push
daa
clc
sub
or
jae
xchg
lea
les
js
mov
pop
inc
pop
mov
test
mov
or
sbb
sbb
popf
push
sbb
inc
pop
push
push
dec
push
das
xchg
stos
xchg
inc
repnz
sbb
cmpsb
ror
ljmp
push
xchg
fdiv
cwtl
stc
adc
pop
xchg
lahf
out
or
in
mov
movsl
addr16
ret
cmpsb
sti
outsl
add
jmp
xchg
fcmovnu
fwait
lock
adc
int3
repnz
mov
push
pop
adc
scas
ds
or
pop
cmp
jnp
xor
adc
das
cmp
dec
lock
mov
xlat
cmp
in
xchg
push
pop
add
mov
out
fcmove
add
sbb
enter
dec
mov
arpl
js
in
dec
mov
push
jbe
jo
movsl
fcomps
xchg
and
cli
cwtl
mov
ds
adcb
dec
xchg
rcrb
cltd
pop
mov
out
and
and
adc
sti
cmp
inc
adc
adc
and
or
das
add
or
mov
ljmp
pop
out
popf
gs
or
adc
mov
xchg
jecxz
mov
bound
mov
xor
lock
dec
rcrl
mov
add
and
jbe
sbb
xchg
lds
mov
or
mov
scas
push
sbb
cltd
push
jne
mov
or
jnp
mov
or
mov
in
mov
shlb
cmp
push
outsl
inc
adc
cltd
xchg
cmp
loope
repz
cmp
bound
rorb
push
mov
dec
insl
dec
fmuls
call
pusha
shl
inc
orl
aam
xchg
add
mov
aas
movsl
inc
xor
sub
std
pop
repz
lret
dec
pop
and
or
dec
xor
lods
es
stos
test
mov
mov
lahf
xlat
ret
mov
sub
jno
adc
sahf
loop
je
lods
loop
shlb
dec
out
xchg
push
insl
adc
shlb
and
addb
xchg
push
jne
and
mov
mov
xor
jns
or
fcmovu
push
mov
imul
xor
into
rcl
jnp
aaa
and
inc
repz
lods
push
mov
add
hlt
pusha
or
call
aaa
add
mov
mov
icebp
mov
mov
dec
push
or
test
jmp
mov
sarl
jno
notb
int
pop
scas
dec
mov
cld
repz
mov
xchg
jl
subb
sbb
xor
sub
dec
data16
inc
mov
cmc
mov
fildll
cmp
dec
aaa
inc
loope
negb
jecxz
inc
add
inc
mov
pop
outsl
shl
lea
push
push
lock
int
lcall
mov
inc
pushf
movsl
jp
bound
fs
ljmp
or
daa
loop
adc
cltd
ss
test
mov
mov
lods
push
sub
push
or
cli
jge
mov
or
popf
inc
push
sbb
and
sar
cmp
dec
push
pop
sub
stc
mov
sub
ret
xor
mov
xor
aas
ja
inc
adcb
add
push
mov
mov
inc
mov
stos
int3
push
xchg
cld
out
pop
jg
ds
cmp
repnz
lods
pop
dec
ljmp
lds
sub
pop
lahf
enter
fcoml
xchg
dec
arpl
jg
dec
mov
sarl
or
push
out
jne
cmp
repz
sbb
xor
outsl
aas
insl
arpl
mov
mov
mov
cmpsb
xorl
or
cli
or
sarl
adc
jb
mov
fwait
fwait
fwait
aam
push
jb
arpl
insb
push
mov
test
aaa
sbb
pop
add
pop
outsl
adc
xor
ret
cld
repnz
mov
push
jecxz
out
ja
mov
xlat
incb
popf
xlat
fisubrs
inc
mov
cmp
jns
mov
push
pop
jno
lock
and
shlb
and
call
ret
mov
add
xchg
xor
mov
into
push
inc
pop
pop
mov
inc
sbb
pop
or
and
xchg
inc
mov
or
sbb
fisubl
std
lahf
popa
filds
xchg
add
test
aam
or
pusha
mov
mov
imul
add
fxch
out
gs
adc
inc
mov
push
sbb
sub
shl
je
lret
cmp
xchg
sub
sti
mov
data16
push
inc
add
pop
xor
sub
push
adc
scas
pop
push
add
inc
xchg
jecxz
icebp
test
cmp
int3
negb
dec
jl
insl
ret
mov
mov
jp
jnp
xor
bnd
xor
addr16
or
push
xchg
pop
cmpsb
sahf
lods
leave
bound
push
mov
movsb
push
iret
mov
cmp
pop
inc
xchg
cli
mov
sbb
dec
jp
adc
testl
inc
arpl
sub
negl
push
xchg
insl
push
cmp
mov
cmp
loop
std
or
scas
in
sbb
loop
repnz
aas
jbe
cmpsb
pop
aam
fstpl
cmp
decl
push
filds
sti
mov
mov
cltd
sbb
mov
pop
fcmovne
pop
push
xchg
push
mov
xor
cmp
scas
jl
inc
stos
insl
loop
jp
push
push
rolb
ja
dec
in
mov
and
orb
mov
and
pop
cmp
xchg
call
mov
xchg
mov
sbb
test
stos
sbb
clc
mov
mov
les
mov
mov
xor
stc
jns
or
and
dec
daa
sub
jns
lock
cmp
mov
lcall
jne
test
sub
xchg
lret
js
dec
fstl
push
ficoms
orb
sbb
fisttps
pushf
outsb
stos
jbe
sub
dec
bound
test
mov
cmc
dec
xor
jmp
or
call
sub
or
mov
jb
mov
imul
lds
pop
cmp
mov
mov
cmp
popf
mov
rep
mov
out
enter
inc
inc
cs
pop
fwait
sbb
jp
sub
bound
sbb
hlt
in
sbb
rorl
pop
aas
fs
lods
push
mov
flds
xor
nop
cmp
fucomip
lods
adc
js
je
outsb
pusha
leave
and
scas
sub
jle
add
adcl
add
sub
das
push
in
pusha
mov
or
out
repz
pop
push
std
shll
shr
push
int
lcall
rcll
pushf
mov
sub
push
jge
and
sbb
or
rorb
cmc
jnp
in
and
mov
inc
call
ja
div
repz
aad
ret
pusha
mov
aaa
mov
repnz
lods
leave
pop
jecxz
and
je
sub
or
in
fadds
push
mov
inc
int3
dec
fmull
jo
pusha
and
insb
mov
xrelease
sub
cld
movsl
shlb
and
jnp
sti
mov
inc
or
pop
xchg
sub
fisubrl
mov
and
cmp
sbb
vmovdqa
sbb
lret
cmp
or
enter
ret
add
mov
mov
mov
jecxz
and
mov
scas
adc
pop
mov
loopne
dec
mov
aas
ret
fsubs
cmc
sub
sub
inc
jg
xchg
ret
sbb
push
mov
bound
sti
and
aaa
or
lret
fldl
inc
push
into
mov
pop
out
pushf
dec
cmp
out
fisubl
inc
loopne
adc
sub
mov
fsubs
xchg
stos
xlat
push
lret
add
cmc
outsb
push
arpl
lret
dec
xor
push
loopne
divl
add
mov
jl
mov
bound
adc
push
fcomps
dec
jmp
mov
xchg
addr16
fcoml
inc
imul
fiadds
call
in
pop
popa
das
inc
push
addl
mov
dec
cmpsl
xor
dec
aaa
cmp
cmp
int
or
xlat
push
mov
jae
sbb
iret
sbb
call
xchg
ret
inc
or
push
ja
pop
sbb
jecxz
inc
sub
popf
lds
scas
pop
adc
shl
cmp
sbb
ret
cmp
aas
xor
add
adc
negb
fadd
adc
jle
test
push
xor
xor
jmp
mov
inc
xor
sbb
push
imul
lret
ds
mov
xchg
pop
out
sbb
lahf
sub
mov
cmpl
call
pop
jp
decb
and
out
hlt
mov
and
inc
fnstcw
add
mov
mov
stos
or
push
stc
cmp
pop
aam
orl
or
mov
out
sbb
fcoml
lods
ljmp
xor
cmp
outsb
pop
es
data16
cmpsl
pop
daa
mov
jns
sub
int
sti
testl
fadds
outsb
jbe
xlat
and
mulb
adc
enter
cli
gs
loop
lea
ljmp
loop
pusha
cltd
dec
xor
cmp
xchg
jno
xchg
repnz
aas
jge
and
mov
clc
cwtl
cmp
push
gs
aad
lods
js
cmp
shl
pop
push
xlat
mov
das
loop
je
out
and
mov
aad
dec
mov
sbb
push
cmp
aam
mov
jmp
stos
aad
cs
rorl
clts
xor
movsb
xchg
je
stos
repz
and
fidivl
fs
cmpsb
lret
cli
xor
repz
inc
adc
mov
jae
and
test
xchg
adcl
dec
movsl
push
inc
xchg
data16
sti
adc
cld
push
or
les
lret
mov
daa
mov
aas
jae
inc
mov
es
and
xchg
ja
mov
daa
stos
mov
leave
lret
sets
cmp
sbb
sahf
aaa
fnsave
mov
xor
sbb
and
fucomip
push
jecxz
clc
out
pushf
mov
cld
test
jae
in
int
add
insb
or
mov
add
xor
xchg
jb
jp
jo
in
stc
adc
jae
inc
mov
pop
repz
cli
sbb
jecxz
movsl
icebp
jmp
and
sarb
test
jg
outsb
fcmovnu
cmc
pop
or
mov
xchg
and
enter
dec
aas
or
incb
cmc
push
fwait
inc
out
jecxz
inc
lahf
loope
dec
pushf
inc
out
cmp
in
orl
dec
cmpb
jnp
jb
mov
mov
sbb
and
ljmp
push
test
adcb
or
pop
xchg
movsb
test
adcl
pop
xchg
sarl
test
repnz
lea
push
mov
jle
add
mov
add
inc
cmpsl
xor
dec
scas
cmc
jle
into
les
aas
sti
ja
cmp
or
pop
or
lods
and
das
xchg
xor
or
jmp
fisttps
lods
pop
ror
movsl
mov
hlt
clc
rcr
loope
daa
cmp
mov
mov
call
fcomip
fsubl
pop
mov
repz
out
rcrl
lret
add
push
xchg
enter
and
adc
sahf
inc
cltd
inc
int3
fcompl
int
pop
fisttpl
into
push
pushf
mov
xor
ja
cltd
mov
ja
and
hlt
out
test
fnstenv
pushf
pop
test
add
dec
lds
fwait
lea
in
ja
pusha
out
xor
pop
pusha
aad
daa
jae
dec
dec
ss
jne
ds
xchg
sbb
sbb
flds
and
outsl
sbb
or
jbe
shlb
daa
xchg
xor
in
sbb
addb
mov
pop
jne
pushf
or
mov
and
test
ficoms
jl
out
pop
xchg
je
mov
dec
data16
sub
adc
or
ja
xchg
aaa
shrb
jle
and
popf
mov
cmp
sub
and
mov
into
dec
lcall
jmp
leave
xlat
xor
ljmp
push
pushf
adc
cmp
fs
cmpsl
or
adcl
mov
adc
mov
loop
sti
xchg
xchg
enter
pop
mov
add
enter
jno
popa
cltd
xor
sub
wbinvd
push
inc
mov
mov
xor
mov
rcrl
ss
repz
jno
jle
cmp
dec
or
repnz
fistpll
xchg
jbe
mov
test
inc
pop
int3
push
xor
and
or
adc
ret
sbb
pop
sahf
jbe
push
dec
pop
cli
cmc
mov
inc
mov
sub
lods
rdrand
xchg
ja
mov
pushf
mov
push
fcmove
roll
mov
push
push
iret
data16
int3
cmp
fstpl
or
fcomps
jo
dec
cmp
rorb
xchg
mov
cs
jmp
adc
mov
int
sub
loop
insb
sub
jns
iret
or
cli
jmp
and
inc
arpl
fcoml
mov
sti
xchg
push
pop
or
mov
out
cltd
cltd
sbb
cmp
lret
cmpsb
adc
inc
icebp
rcll
dec
lahf
mov
in
cli
scas
push
fdivrs
out
and
cli
and
mov
gs
icebp
ljmp
inc
dec
shrl
jnp
jne
pop
mov
cltd
scas
cltd
jmp
sbb
mov
lcall
std
lock
aas
lea
dec
pop
test
in
lock
bound
movsb
cli
shll
lods
inc
jo
or
jb
jmp
call
mov
out
xor
mov
xor
jnp
mov
sbb
mov
adc
inc
dec
cli
test
inc
or
rorl
mov
xchg
and
popf
dec
fistps
cmpsb
xchg
xor
cmc
mov
imul
popa
jne
mov
movsl
jmp
sbb
enter
sahf
dec
insl
xchg
add
in
in
inc
decb
popf
ljmp
testl
lahf
sbb
in
add
mov
cmc
icebp
dec
cltd
sbb
sub
negl
adc
aam
imul
or
sarb
ret
out
das
push
lds
je
vmulss
mov
fdivs
das
jmp
adc
mov
jo
pop
rorb
leave
sub
lret
and
inc
andl
push
ret
cmpsb
xchg
dec
add
mov
mov
imulb
jnp
idivl
lea
movl
sbb
xor
rolb
cmp
inc
in
xadd
push
pusha
mov
add
or
push
mov
pusha
clc
cmp
sbb
movl
add
int
std
push
push
sbb
inc
cld
mov
push
and
ret
mov
fisttpl
movsl
add
out
jae
mov
mov
cmpsl
pop
cmp
xor
das
mull
pop
jae
mov
cmpsl
cmp
out
mov
xor
sbb
das
mov
and
iret
rolb
sbb
xor
fwait
jno
mull
aad
dec
cmp
sti
fs
fs
cmpsb
or
outsb
les
mov
xor
daa
mov
sarl
imul
lret
mov
adc
scas
pop
lcall
aaa
repz
js
mov
cmp
ret
aad
int3
inc
arpl
xor
arpl
cmpb
mov
sbb
je
mov
test
jg
mov
inc
mov
push
sbb
incl
sub
popa
xchg
pop
mov
xor
daa
test
lds
add
out
in
mov
cltd
adc
insl
movsl
call
orl
test
addb
xchg
inc
clc
test
iret
mov
push
xchg
lods
mov
lock
lret
or
paddq
or
push
push
test
sbb
mov
and
aad
arpl
jmp
pop
add
lods
popf
mov
movsl
fcomps
sbb
jecxz
jle
xlat
push
xor
mov
mov
rolb
sbb
lods
mov
xchg
adcl
mov
not
add
add
xchg
or
mov
mov
xor
fwait
out
insb
push
xor
lret
add
xor
jno
sbb
lock
inc
sbb
loope
add
xor
pop
jmp
cltd
jns
aas
pop
add
daa
std
int3
xor
es
inc
xchg
popf
pusha
mov
imul
clc
les
pop
daa
add
jmp
xchg
insb
sub
xchg
ret
out
inc
push
fadd
int
out
xchg
or
jecxz,pt
inc
xchg
lahf
mov
mov
pop
daa
push
bound
imul
xchg
lods
aam
sbb
mov
mov
cmpsb
lcall
inc
mov
das
mov
stos
pop
filds
roll
aad
dec
lcall
or
push
fisttpl
fs
aam
ljmp
dec
dec
lea
pop
mov
hlt
or
jns
sti
xor
test
stc
xchg
mov
bswap
add
xchg
imul
jae
jns
xor
aad
addr16
cmpsl
sbb
inc
je
pusha
sub
push
sbb
lods
faddl
jmp
sub
mov
insl
xchg
sub
add
push
cs
push
dec
mov
loopne
out
lcall
cmpsb
test
mov
cmp
out
aas
inc
push
out
subl
out
xor
data16
push
lods
add
sbb
cmc
sbb
xor
stc
adc
fdivr
mov
test
nop
rorl
sbb
jno
mov
mov
jmp
int3
repnz
or
inc
stos
mov
aas
inc
jge
mov
cmpsb
cmp
sub
mov
sbb
clc
sub
aam
pop
mov
stc
loope
xor
hlt
movsb
cmpsl
jecxz
clc
sbb
aad
push
xchg
mov
aad
nop
test
loope,pn
fistps
jae
xchg
xchg
addr16
inc
stos
jmp
pop
jae
and
pop
inc
arpl
cmpsl
lock
jl
add
loop
movsb
ljmp
push
dec
push
mov
mov
push
and
mov
xlat
mov
xchg
mov
repz
ss
testb
fdivrl
or
push
mov
pop
adc
ret
aaa
jns
inc
clc
xchg
and
mov
push
cli
push
jbe
aad
orl
mov
test
insb
mov
movsl
pushf
sbb
or
stos
xor
call
add
mov
out
mov
cwtl
cs
stc
mov
mov
push
push
mov
dec
and
stos
ret
cmp
insl
ret
movsl
jbe
sub
adc
mov
adc
fidivs
xchg
pushf
fiaddl
in
dec
cmpl
fimull
pushf
aas
xor
add
lods
fwait
addr16
inc
out
pop
cmp
cs
mov
js
pusha
cmpsb
movl
mov
push
js
out
into
out
mov
jle
mov
mov
in
dec
or
ffree
pop
sahf
bound
data16
test
add
loop
mov
mov
pusha
icebp
dec
inc
cmp
sub
jmp
out
mov
lahf
lea
add
inc
pop
xchg
mov
push
xchg
or
mov
push
or
push
mov
scas
push
rcrb
or
push
in
in
mov
or
fildll
in
repz
jns
sbbl
xchg
sti
mov
xor
stc
ret
jbe
fwait
pop
mov
addr16
fwait
and
imulb
fdivs
movsw
or
addr16
add
inc
outsb
es
mov
sbb
jl
mov
jg
or
fwait
out
mov
aad
adc
pop
cmpsl
pop
jo
mov
adc
movsb
sbb
inc
xchg
push
and
lret
dec
cmp
mov
fimuls
icebp
pop
repnz
pop
bound
in
out
xor
mov
jae
repnz
fdiv
xor
rorl
pop
pop
jp
or
or
cmp
mov
lret
int3
adc
neg
sbb
jbe
xor
fdivl
adc
push
mov
sbb
inc
nop
fs
fs
mov
mov
mov
sbb
push
mov
jmp
lods
sub
xchg
sub
testl
in
cmpsb
mov
lret
push
push
out
push
jae
cwtl
cli
scas
scas
gs
xchg
xchg
in
lcall
rclb
mov
mov
pop
push
inc
ret
mov
adc
xchg
sub
cmpsl
xchg
xchg
xor
mov
xchg
dec
loopne
xor
inc
xor
lock
ficompl
test
push
jge
pop
cmp
testl
popf
mov
push
dec
mov
mov
jge
gs
pop
repz
mov
xchg
mov
xorb
int
divl
mov
sub
roll
shll
and
test
inc
or
mov
sub
insb
mov
out
test
xchg
and
sbb
push
dec
inc
push
xchg
pop
pop
lret
ret
or
push
xor
ret
out
jns
cmp
add
repz
mov
push
xchg
xchg
cmc
xor
loope
daa
xchg
push
arpl
xor
and
xor
inc
movb
sti
xlat
fstpt
jnp
inc
ljmp
divl
mov
addr16
je
xchg
push
test
rep
shll
out
nop
mov
sbb
and
xor
pop
jg
and
ret
add
xor
push
shrl
ficoml
pop
push
push
sbb
loope
jge
sti
xor
mov
pop
outsb
dec
aas
in
xchg
in
mov
push
sub
mov
pop
pminsw
mov
sbb
mov
sub
cli
popl
sub
cmp
mov
cmpsb
ss
arpl
inc
mov
cmp
or
cmp
scas
cmp
xor
cmc
mov
rolb
pusha
and
dec
icebp
push
adc
push
sub
xor
ret
loope
inc
mov
test
out
neg
inc
cli
dec
in
imul
ret
push
fildll
pushf
adc
or
sub
subl
sbb
push
stc
stc
movsl
in
cltd
dec
xchg
mov
rorb
int3
adc
fisttpll
fstl
testb
repnz
movsl
popf
mov
repz
cmp
ljmp
pop
mov
clc
je
hlt
fnsave
pop
popa
mov
cmp
lret
movsl
dec
in
sbb
lahf
cmp
test
and
fcmovnu
cmc
pop
xchg
push
dec
ret
xchg
add
loopne
mov
stc
loopne
cmp
shlb
mov
lds
dec
cmp
aaa
push
in
inc
insl
fadd
add
mov
jne
fisttpl
sahf
sub
mov
outsl
test
test
js,pn
mov
call
xchg
pop
aam
jp
roll
pop
adc
sub
push
pushf
mov
out
pop
and
mov
rcrb
pusha
dec
cltd
or
and
rolb
in
xor
clc
rorb
xchg
inc
pop
adc
js
notl
mov
jae
movsb
test
adc
mov
int
pop
jo
arpl
jg
imull
push
sbbb
mov
sbb
pop
test
sbb
hlt
xchg
call
push
pop
arpl
pop
stc
ja
jbe
repnz
jg
cmp
out
sbb
orl
push
ja
push
mov
mov
jbe
add
xchg
push
je
inc
ja
mov
mov
lahf
inc
xchg
lahf
pop
sar
subl
xchg
inc
lea
xchg
daa
inc
fwait
inc
mov
cli
fmull
jl
mov
movsb
jp
mov
lret
aad
outsl
cmpl
inc
inc
mov
scas
dec
test
adc
xchg
bound
inc
adc
or
sub
testl
addb
sbb
fnstsw
or
fmuls
xor
lds
lock
orl
repz
push
inc
jns
cwtl
xchg
addr16
mov
mov
bound
cltd
jo
je
int
lods
stos
sbb
lods
or
mov
sub
and
shrb
pop
cltd
fnstenv
push
xor
cld
push
xchg
packssdw
pop
in
pushl
push
test
inc
ret
sahf
sbb
out
ret
out
lahf
mov
sbb
arpl
sbb
jns
sub
mov
fwait
lahf
cmp
pop
cmp
cmp
lods
sub
popf
fcoml
mov
ds
test
pop
xchg
outsb
mov
test
xchg
out
mov
and
mov
in
and
lock
inc
mov
adc
or
imul
mull
js
jo
jge
push
je
lahf
xor
push
arpl
ret
insl
xchg
lock
data16
mov
mov
daa
mov
popf
jae
adc
push
mov
push
jae
mov
mov
dec
cmp
push
cmp
icebp
daa
aaa
mov
mov
ret
sub
push
sbb
test
out
ja
loop
ss
andl
add
xchg
icebp
jo
push
or
mov
dec
out
adc
pop
and
dec
jbe
or
xchg
lcall
push
adc
xor
and
xchg
sarl
cli
rorb
ss
je
cmpsb
push
adc
cltd
rcl
in
sub
sbb
pushfw
pushf
outsb
adc
icebp
pop
jb
mov
pop
inc
ficompl
sahf
cld
jg
ret
mov
lret
sbb
stc
lret
dec
sbb
iret
leave
mov
lds
inc
scas
lahf
andb
adc
bound
lahf
xor
lock
mov
pop
jge
jecxz
jne
incl
jo
xor
fistpll
jne
xchg
xchg
scas
scas
and
sub
jbe
cmpsl
sbb
push
or
inc
loope
xchg
sub
shll
or
daa
call
mov
call
push
fisttpl
pop
rolb
mov
sar
xlat
add
test
sbb
push
mov
xchg
mov
sub
inc
cld
iret
test
aas
cmp
cmp
ss
add
xchg
pushf
rol
push
in
pusha
or
cmc
shll
outsl
inc
cmpb
jb
jbe
rcr
xlat
into
int
push
lcall
cmpsb
add
add
inc
sbb
scas
dec
or
in
wrmsr
or
xchg
sub
cli
in
in
fs
cmpsb
push
adcl
loopne
repz
pop
xchg
mov
xlat
jne
pushl
flds
sbb
push
push
xchg
pop
fwait
sub
mov
mov
xchg
daa
add
dec
inc
mov
stos
in
adc
mov
aas
or
push
xchg
mov
in
pop
fimull
add
std
pop
xchg
js
cmp
push
adc
jb
jp
or
scas
orb
push
push
push
fstl
mov
lret
int3
outsb
mov
push
test
fucomip
and
pop
mov
dec
ss
in
mov
or
pop
ret
cmpsl
xor
jo
jb
in
repnz
dec
sbb
xchg
sbb
push
dec
repz
xor
adc
mov
inc
lods
push
faddl
dec
shrb
mov
hlt
mov
rorl
fldenv
pop
fldl2e
mov
jl
dec
cmc
pop
jl
push
add
arpl
jo
dec
add
push
stos
mov
into
pushf
push
sbb
and
xor
adc
orb
stos
lds
sub
cs
movsb
std
mov
jo
and
pushf
ljmp
fs
dec
mov
pop
and
mov
out
xchg
es
mov
test
pop
stos
nop
aad
in
cmp
in
xor
lcall
dec
mov
inc
es
stos
inc
mov
sub
ss
imul
jge
aam
fstps
mov
and
and
lret
inc
pop
js
pushf
mov
jmp
sub
push
popa
mov
rclb
das
inc
push
call
pop
cltd
rclb
hlt
inc
shlb
push
cmp
pop
push
adc
enter
sub
out
nop
pop
cmp
xor
dec
inc
xchg
das
dec
cmpsl
rcrl
leave
and
addb
inc
pusha
add
or
xor
cwtl
imull
js
xlat
adc
bound
xorb
out
call
or
stos
negl
ds
xchg
dec
cli
cli
pop
fistl
in
sbb
idivl
sub
add
aad
scas
sbb
gs
lods
and
gs
shlb
sub
dec
and
mov
stos
push
sbb
fnstcw
push
lods
pop
es
sbb
test
sbb
jmp
mov
sbb
jle
mov
sbb
jbe
cmp
stc
ror
lret
mov
scas
adc
mov
cld
or
cmp
push
pop
fdivr
out
mov
loop
mov
add
cld
push
adc
xchg
or
les
dec
mov
and
sbb
sarl
push
jmp
lods
pusha
cli
fidivrs
cltd
push
push
ljmp
repnz
adcl
rcrl
push
add
ja
jg
push
pop
testl
into
inc
mov
adc
repz
jge
dec
sub
cwtl
js
push
test
sbb
fstl
lahf
xor
add
mov
xchg
inc
mov
xor
sbb
in
scas
cmc
iret
adc
fisubrl
adc
xor
push
bound
popf
hlt
test
push
andb
jp
sbb
into
sub
inc
addl
cwtl
inc
and
lock
test
xchg
mov
mov
insl
dec
fistps
fnsave
xchg
cmp
insb
dec
fsubrs
mov
sbb
add
pop
cmp
cmpsl
stc
outsb
pop
cltd
mov
jle
xor
xlat
mov
fisttpl
out
scas
pop
mov
arpl
lahf
mov
mov
push
pop
enter
jno
movsb
pop
inc
out
popa
xor
add
xchg
data16
rorl
ret
cmp
sub
fwait
div
push
out
aas
or
xor
dec
sub
mov
jl
outsb
jno
dec
aas
sbbb
lret
nop
lods
icebp
inc
and
adc
pop
idivl
xchg
imul
test
xchg
and
dec
and
pop
push
push
daa
mov
add
adcl
fsubl
lcall
adc
data16
jnp
or
cmpsl
push
imul
cmc
cltd
repz
and
cmp
or
in
ds
pop
daa
in
repz
stos
or
fdivp
jb
in
pop
or
cmp
xchg
sbb
pop
test
fisttpll
testl
aad
xchg
push
push
or
in
loopne
sub
bound
clc
mov
inc
jo
filds
fsubr
cltd
leave
iret
xchg
or
mov
arpl
pusha
jle
cmpsl
popa
mov
pushf
sbb
ds
dec
mov
pop
mov
loopne
loop
je
add
aas
and
in
addr16
jne
or
adc
add
cmp
or
jmp
push
fldenv
sahf
inc
loope
lcall
sub
aaa
loope
inc
push
dec
adc
cmc
pop
out
xor
aas
pop
jecxz
mov
repnz
push
cmpsb
nop
cmp
dec
pop
mov
pusha
xlat
test
mov
ljmp
lahf
cmp
lahf
das
dec
and
and
sub
xchg
xor
cli
test
je
jo
adc
imul
rorl
xchg
xor
sarl
dec
push
cwtl
or
mov
dec
test
xchg
pushf
lcall
xchg
and
add
sub
xor
push
xchg
push
xchg
int3
or
pop
xor
lahf
jo
jle
adc
in
adc
stc
lret
mov
imul
stos
push
xorl
mov
add
push
sbb
add
sbb
xchg
and
jmp
fcmovu
enter
stos
imul
out
lods
mov
mov
aam
xchg
jecxz
xchg
sbb
inc
sbb
lret
xchg
mov
ljmp
cmc
inc
movsb
inc
loopne,pt
jp
adc
or
fcompl
jns
pop
mov
xlat
mov
out
xchg
dec
fs
out
mov
mov
xchg
and
mov
cs
test
pop
js
pop
sub
mov
fdivl
imul
mov
mov
xchg
xor
xchg
push
xchg
add
push
sbb
lock
adc
leave
sbb
inc
nop
jmp
push
js
ret
loope
add
push
fidivs
push
mov
inc
loop
ret
repz
test
adc
push
sub
dec
mov
aam
mov
cmc
insl
cmp
rol
push
insl
cwtl
dec
arpl
mov
sahf
adc
xchg
out
pop
xlat
dec
sub
stc
jge
movsb
push
xchg
mov
lret
sub
add
sub
stc
jnp
mov
flds
push
xor
es
nop
mov
and
fstpt
popa
test
xor
add
mov
jno
out
xor
pop
lahf
xchg
jg
push
cmpsb
pop
pushf
fsubrl
xor
lret
sarl
jo
jb
sbb
enter
xor
in
mov
ret
fisubs
or
xor
mov
sahf
int3
test
and
mov
incl
and
bound
push
jl
adcl
mov
push
jg
push
add
aam
inc
mov
sub
mov
rorl
inc
sti
xor
lret
into
adc
inc
jecxz
mov
test
cli
jnp
aaa
mov
insl
mov
fsubrp
mov
jmp
push
sbb
out
push
nop
lahf
lods
test
es
pop
or
xor
imul
test
sub
stc
subb
loope
dec
stos
scas
dec
mov
inc
adc
jl
sbb
add
sbb
ja
inc
repnz
inc
enter
sub
pop
sub
sub
mov
mov
inc
mov
jno
xchg
xorb
jae
jno
cmp
fs
or
sbb
sbb
mov
rorl
mov
aam
sbb
fists
movsl
mov
cmpsl
adc
icebp
cmp
cwtl
bound
mov
loopne
mov
push
stos
or
sub
movsb
imul
mov
cltd
shll
ja
aas
sub
lret
loop
pop
out
fwait
leave
mov
pop
mov
inc
mov
push
add
lret
cld
adc
movsb
dec
add
loopne
jecxz
sbb
adc
inc
divb
nop
adcb
gs
ret
and
push
mov
test
adc
je
js
stos
and
jns
popa
add
cmp
pop
scas
bound
int3
ja
mov
dec
inc
dec
add
test
das
mov
lahf
push
xchg
jp
fimuls
pop
sbb
mov
inc
ds
dec
add
stc
popa
adc
xorb
jne
test
xchg
je
inc
push
push
std
dec
out
in
movsl
jle
inc
sbb
dec
outsl
sti
lds
xchg
pop
xchg
andb
ja
jo
sbb
cmpb
xor
pop
popa
inc
mov
aaa
pop
inc
shll
andb
pop
sub
jmp
fwait
dec
dec
rcr
orl
out
pusha
dec
push
xor
cmpl
ljmp
mov
sub
add
xor
andl
sub
inc
jnp
adc
shll
inc
xlat
imul
cmp
pop
mov
outsl
and
inc
pop
xchg
mov
adc
cmc
test
cmp
sub
out
pop
adc
and
cld
ljmp
lods
xchg
or
mov
xor
cli
fsts
push
in
ficomps
data16
sbb
in
inc
das
movsb
jge
mov
rcrl
lods
pushf
xor
inc
out
dec
adc
call
push
addr16
std
dec
mov
push
push
in
pusha
dec
ljmp
xchg
clc
movsl
jno
xchg
ljmp
and
cltd
jnp
loope
mov
mov
aad
mov
insl
clc
lds
popa
bound
aad
and
push
out
nop
imul
bound
push
rcl
push
push
cltd
cmp
loope
enter
dec
lea
fsubrl
dec
or
push
test
sbb
ret
jle
fidivs
enter
jnp
ss
jmp
cs
fistps
pop
add
subb
sbb
mov
push
aaa
jge
pop
push
push
fstl
enter
jmp
and
push
dec
xchg
ret
cmp
mov
add
or
ret
jnp
test
scas
aad
cmpsl
sbb
sub
push
pop
inc
pop
jmp
and
int3
xchg
jne
nop
pop
jp
fdivp
dec
inc
mov
mov
sub
cmp
push
mov
in
mov
orb
mov
sbb
outsb
push
lcall
lods
fwait
mov
fstps
mov
xchg
sub
insl
mov
pop
call
push
jo
mov
mov
cmpsb
std
int
dec
sbb
scas
sub
fs
ja
cltd
lock
add
in
jnp
enter
jo
mov
jo
cli
mov
adc
push
dec
lds
cmp
or
dec
add
pop
test
sti
pop
pop
xor
test
sub
jp
push
inc
sar
in
pop
pop
imul
iret
loope
aam
inc
add
and
mov
or
sbb
dec
mov
and
sbb
cltd
test
or
sbb
nop
sbb
ja
mov
orb
jecxz
or
mov
inc
cmp
and
pop
cmpsb
xorl
jo
xchg
popf
inc
pop
jmp
enter
cmp
loopne
sbb
les
or
lret
mov
bound
xchg
cld
jle
push
test
push
xor
dec
dec
jge
dec
inc
inc
adc
fld
xacquire
test
mov
jp
ljmp
inc
sub
or
je
mov
cmp
addl
imul
cmp
sahf
dec
push
and
adc
inc
imul
inc
mov
push
cmpsl
add
lret
rorl
int
pop
mov
add
jbe
jg
jo
movsl
mov
rorl
ja
adc
fnstenv
push
hlt
pop
inc
fwait
loopne
daa
inc
repnz
into
adc
in
or
pop
push
mov
in
inc
push
dec
cmp
fdiv
pop
push
ret
or
sub
adc
ret
jge
jbe
xchg
or
cmp
pop
push
mov
arpl
mov
cmpsb
popa
and
xor
fstl
mov
xor
cltd
pop
push
clc
in
push
cmp
dec
das
popf
fildl
test
inc
popa
iret
xchg
lret
push
fwait
cmp
jne
ljmp
test
rclb
push
sbb
add
or
push
lret
je
adc
testb
and
cmpsb
mov
cmp
lret
inc
jo
mov
lds
popa
adc
rcl
adc
pop
aaa
data16
ret
test
in
inc
imul
jge
out
push
pop
push
scas
mov
push
sub
insb
cs
scas
adcl
inc
xlat
jp
mov
mov
icebp
xchg
rolb
dec
dec
cmpsl
jp
aaa
mov
push
rsqrtps
call
stos
mov
inc
xchg
push
sub
mov
sbb
mov
fcoml
pop
inc
xchg
fdivl
bound
mov
jo
pushf
sti
test
inc
lahf
std
incl
add
sbb
lock
movsb
mov
out
jnp
push
push
xchg
push
ljmp
mulb
xchg
dec
movsb
mov
leave
cmpb
cmpsl
rcl
and
decl
int
dec
inc
add
cli
mov
jo
sub
add
jns
sbbb
call
iret
stos
hlt
xor
sbb
fildl
add
jne
push
pop
mov
lods
aad
sub
mov
lds
adc
ljmp
fwait
dec
mov
movsl
cmpsb
imul
xchg
xchg
adc
test
lcall
or
cmp
lods
adc
stc
aas
push
mov
pop
xchg
je
jo
ret
inc
pop
mov
mov
data16
adc
scas
push
add
sar
cmovb
lret
std
jno
clc
insb
ljmp
pusha
movsl
cmp
push
add
rolb
aas
fdiv
icebp
inc
and
loope
cmp
mov
pop
fisubrl
push
mov
add
cmp
jae
ret
imul
dec
cli
mov
aam
mov
movsl
inc
lea
and
add
ret
adc
jae
out
adc
test
and
and
js
bound
nop
inc
xchg
mov
les
sbb
sub
add
dec
adc
lds
mov
gs
lods
aam
scas
cmpsb
and
fmuls
call
xor
cmc
lock
lea
jmp
bound
add
pop
cltd
cld
rcrb
mov
xorl
inc
pop
nop
notl
lock
stos
and
mov
leave
lcall
push
cmp
pop
jnp
repz
inc
push
lret
mov
fsubs
push
dec
cmp
rcll
push
xchg
sbb
lret
imul
sbb
jbe
std
sbb
mov
mov
sbb
mov
dec
sub
in
movsb
and
cld
fbstp
mov
dec
or
jo
mov
jmp
data16
push
mov
popa
mov
mov
mov
pop
je
pusha
pop
out
xchg
and
fwait
call
dec
pop
loop
xor
push
repnz
xchg
sub
mov
dec
mov
loope
lcall
cmc
sub
in
adc
sbb
outsb
dec
movsl
fsubs
stc
add
lea
stos
test
in
lods
pushf
and
and
sub
repz
cmp
loope
inc
jg
and
dec
loope
dec
and
inc
push
lods
lret
xlat
lcall
js
outsl
push
xchg
lods
sub
or
movsb
aas
cmp
inc
insb
scas
mov
cli
in
outsb
xchg
mov
lret
jb
popf
add
stc
push
xor
dec
sbb
pop
enter
js
inc
mov
ja
sub
daa
jge
outsb
aad
aaa
or
dec
mov
in
test
int
mov
sha256msg1
mov
sub
mov
fldt
iret
imul
shl
inc
js
je
push
dec
adc
cs
sub
stc
mov
pushf
mov
mov
aas
dec
std
daa
inc
mov
cs
insl
enter
rorb
xchg
mov
xchg
insl
cmpsb
or
add
xchg
cld
in
lret
aad
jo
jb
and
dec
cmp
add
pop
cmpl
out
fiadds
mov
dec
fwait
sti
xor
test
lcall
adc
jns
ficoms
xchg
pop
mov
jno
mov
adc
mov
or
gs
inc
mov
push
out
lods
cmp
cmc
es
mov
fwait
cmp
or
clc
nop
test
gs
mov
inc
add
pop
push
mov
mov
sub
adc
push
fwait
loopne
lea
aas
fistpl
popa
arpl
jne
pushf
and
lods
lods
inc
jmp
mov
xchg
sub
add
fiadds
in
mov
repnz
inc
outsb
call
push
jns
xchg
sti
mov
stos
mov
pop
sbb
test
jae
jo
xchg
mov
xor
sahf
pusha
mov
and
in
cmp
inc
adc
push
cmp
mov
mov
repz
fistpl
push
xchg
xor
ror
insb
je
aas
xchg
movsb
arpl
das
add
out
arpl
dec
mov
or
and
mov
fisubrl
in
js
cltd
inc
and
xor
dec
jle
lcall
mov
jg
mov
xor
fisttps
push
ret
pop
adc
mov
pop
push
jle
xor
in
xor
pop
xchg
aam
inc
push
jp
and
cmp
mov
movsl
mov
jmp
cs
out
outsb
shlb
mov
notb
or
xchg
jp
mov
loopne
push
or
arpl
ret
fisubs
imul
test
xchg
mov
aad
fisttps
push
sbbb
cmp
cmp
xlat
popa
mov
mov
repz
mov
loopne
imul
out
int
js
pop
mov
add
mov
pop
pop
or
sbb
xor
clc
je
xchg
mov
fdivrs
dec
sub
mov
sbb
adc
daa
adc
jb
pop
cmpsl
outsb
bnd
push
insl
addb
dec
repz
xor
aad
into
and
pop
sarl
push
shrb
pop
inc
mov
aaa
in
clc
movsl
addb
icebp
xor
adc
push
sbb
xchg
push
mov
insb
jb
test
loop
jmp
cmp
pop
iret
pop
repz
dec
mov
adc
ja
arpl
movsb
sahf
and
inc
outsl
je
fwait
or
push
push
add
xchg
pop
jge
xchg
das
jmp
lcall
jne
push
sbb
sti
dec
sbb
jge
jg
mov
in
jne
sub
call
dec
lods
sar
test
jmp
jp
push
lahf
mov
insl
outsb
mov
or
dec
inc
mov
and
push
cmp
cld
push
sahf
in
sbb
add
notb
pop
xchg
pop
sbb
aad
cld
mov
sbb
scas
pop
lcall
mull
es
inc
in
sbb
pop
addr16
push
lods
sub
dec
cmp
push
and
out
stc
adc
cltd
sub
mov
pop
mov
inc
or
xchg
scas
sbb
inc
les
popf
sti
jmp
push
popa
adc
dec
sub
xor
pop
out
xor
cmpsb
gs
mov
inc
push
jo
mov
pop
cmp
ja
add
pop
dec
sbb
pop
sarb
push
dec
jecxz
push
mov
dec
mov
mov
xchg
fstps
push
mov
jp
cmp
xchg
push
jnp
mov
sbb
jge
xor
movsl
jge
rolb
cmc
push
and
psrlw
and
out
int
arpl
sbb
inc
push
adcl
xor
or
pop
xor
outsl
fxch
sub
xchg
jbe
mov
int3
cld
loopne
fdivs
or
sub
jne
inc
adc
sub
push
adc
mov
pop
inc
mov
out
popa
dec
mov
sub
repz
jp
xchg
push
ljmp
and
or
adc
mov
dec
movsl
je
jecxz
ja
pop
gs
sarl
repz
sbb
add
imul
cld
push
push
or
fistpll
std
adc
push
push
pop
and
ljmp
popa
cmp
and
leave
xor
int
mov
xchg
pushf
pop
mov
jmp
into
mov
aas
leave
nop
stos
sarl
imul
xor
ja
fistpll
sbb
or
insl
mov
pop
xor
fistpl
dec
inc
mov
test
aad
lea
ljmp
pop
cmp
fdivrl
ret
or
inc
fcompl
adc
mov
fwait
scas
dec
jno
jl
loopne
pop
out
les
inc
xchg
test
pop
mov
jl
mov
pop
push
inc
int3
mov
jle
mov
inc
dec
mov
jno
repz
sbb
cmpb
push
ficompl
pop
push
data16
jb
mov
xor
pop
insb
in
stos
adc
dec
sti
pop
and
stos
daa
xchg
xchg
cmp
jmp
push
in
or
rcll
push
imul
cltd
dec
dec
push
dec
std
fsubs
sbb
and
mov
sbb
stos
jl
adc
mov
out
sarl
loopne
xor
sub
adc
push
aad
mov
jne
lahf
adc
out
add
pop
xchg
mov
adc
push
ret
stos
and
sbb
wrmsr
fidivl
add
outsb
imull
mov
jns
lsl
dec
xor
stos
dec
jle
dec
xor
adc
or
push
sbb
push
mov
sub
imul
cmp
mov
mov
inc
lods
dec
stc
mov
pop
lds
xor
addb
cmp
and
mov
mov
lret
sbb
xor
push
fstpl
aas
or
push
mov
or
int
dec
pop
clc
js
loopne
cltd
push
add
sub
fstpl
fwait
inc
icebp
test
cmp
jge
adc
fdivr
dec
xchg
mov
and
push
iret
hlt
sub
js
cmp
lret
adc
pop
jbe
jns
lret
adc
ljmp
lods
gs
push
pop
ds
inc
out
and
sbb
aam
mov
add
sahf
aaa
inc
xor
pop
jne
lahf
shl
xor
jecxz
test
pushl
daa
into
add
dec
push
inc
add
mov
inc
adcb
mov
pop
lods
lcall
ror
in
mov
cmp
lahf
pop
add
lea
adcl
leave
imul
ffree
inc
cmp
adc
xchg
pop
mov
fmull
mov
cltd
bound
push
push
mov
and
push
stos
cmc
addr16
lods
cmp
inc
test
sub
cmp
jo
pop
or
popa
addb
imul
xchg
pop
mov
ret
cmp
stos
jg
lcall
inc
insb
jb
dec
sbb
int3
adc
aad
and
adc
leave
dec
adc
mov
hlt
stos
inc
aas
cmp
sbb
push
add
xchg
adc
mov
mov
jp
mov
iret
mov
pop
and
adc
lea
or
sbb
outsl
movsb
mov
pop
and
test
jns
pop
push
dec
jno
andps
xor
sbb
or
mov
fs
rcrl
xor
pushf
dec
push
enter
icebp
inc
inc
sbbb
clc
mov
and
aam
xor
in
push
dec
mov
add
mov
jo
sbb
inc
mov
mov
xor
or
adcb
mov
cmp
es
cmpsl
mov
add
insb
je
adc
orl
jne
mov
mov
std
add
inc
aad
sub
inc
lock
cli
cwtl
pop
lret
fildl
mov
cmp
sub
test
cld
addb
jae
xchg
outsl
adcl
cmpsl
push
lock
es
mov
sbb
push
ret
daa
cmp
ja
cmpsb
or
popf
adc
xchg
mov
mov
push
sub
add
mov
add
rorl
popf
rorl
out
xor
xor
cld
cmp
xchg
les
push
pushf
xchg
xor
sub
imul
jno
js
xchg
or
or
add
repz
jae
mov
sahf
ja
mov
dec
adc
xchg
inc
stos
xchg
inc
jne
jnp
fisubs
push
outsb
insb
dec
mov
popa
imul
pusha
aad
das
xor
dec
mov
jp
mov
mov
push
xor
stos
movsl
jbe
jo
jbe
mov
add
imull
xchg
push
and
jge
mov
mov
inc
xchg
cmp
pop
movsl
push
xor
cmpl
jmp
cmpsl
dec
mov
mov
dec
dec
sbb
pop
repnz
and
push
es
dec
sahf
mov
push
xchg
and
mov
sbb
xor
jecxz
sub
and
mov
cltd
je
lcall
push
popa
addb
sti
std
mov
in
inc
mov
xor
lahf
mov
je
mov
mov
mov
mov
cmp
or
sahf
bound
test
push
mov
addb
cmp
sub
xchg
adc
ja
dec
outsl
orl
dec
jl
xchg
faddp
push
sbb
fs
jmp
test
xor
je
and
nop
ljmp
cld
push
push
ss
stos
mov
ss
call
roll
pop
imul
fwait
or
cltd
cs
mov
jmp
mov
ret
in
rclb
pop
shlb
mov
mov
cli
lcall
inc
dec
adc
mov
insb
cmc
and
arpl
cmpsb
data16
inc
add
rcrl
neg
test
fwait
les
subb
into
arpl
push
jns
jle
jo
outsb
aas
shrb
pop
pop
adc
or
arpl
xchg
out
add
cmc
in
jmp
mov
movb
jbe
or
je
push
stc
frndint
mov
mov
fnstsw
out
inc
ljmp
sub
and
jmp
adc
repnz
dec
pop
or
mov
test
and
cmp
in
orl
pop
or
out
pop
pop
sbb
test
scas
subb
xorb
pop
mov
xor
jne
testb
cmp
adc
pop
test
and
fbld
push
mov
xchg
inc
cmpsl
sbb
lods
sbbb
dec
xor
sbb
xchg
icebp
add
ror
dec
inc
and
jae
push
sub
cmp
movsl
les
lock
mov
adcl
sbb
inc
clc
and
cmp
lods
push
add
jle
sbb
xchg
push
outsb
push
mov
cmp
ret
repnz
push
jbe
mov
test
xor
daa
add
in
mov
inc
adc
mov
out
push
clc
inc
pusha
lret
aas
dec
mov
push
cmp
and
sbb
inc
mov
xor
test
test
lret
cmp
mov
filds
fildll
repz
shl
cmp
mov
into
sahf
mov
ret
lret
push
call
orb
push
std
stc
cmp
mov
ljmp
test
fbstp
dec
test
pop
pop
jecxz
filds
inc
push
jl
xor
or
bound
bound
sbb
les
mov
jmp
sub
repnz
and
jmp
cs
inc
daa
jmp
repz
mov
sub
mov
mov
add
aaa
js
jl
sbb
shrb
add
scas
adc
out
in
push
test
mov
data16
sub
xor
jbe
das
imul
push
jmp
filds
mov
and
ror
repnz
and
cld
bound
or
sub
call
xchg
dec
adc
cli
cli
dec
rclb
cmpsl
push
or
dec
sub
mov
mov
rolb
push
mov
sarb
sti
sbb
in
xchg
cmp
xlat
cmc
loopne
cmp
std
jmp
sbbl
lods
adc
fcmovnu
mov
dec
xchg
cltd
arpl
and
adc
xchg
rorb
les
insb
imul
loope
pushf
cld
stos
add
mov
inc
insl
clc
cmp
push
pop
test
push
ds
rcll
pop
mov
mov
popa
dec
mov
add
addl
insb
mov
add
stos
adc
nop
xchg
je
pop
and
das
mov
popf
jns
jge
daa
xchg
mov
add
add
hlt
adc
adc
pop
pop
in
sbb
adc
outsb
jle
inc
inc
adc
pusha
push
mov
xor
sbb
gs
sub
rorl
pop
mov
dec
movsb
lds
enter
rorl
fisubl
mov
sti
adc
pop
sub
xor
outsb
inc
jnp
gs
jecxz
outsb
inc
aaa
sbb
shlb
push
pop
into
lahf
das
scas
sbb
mov
xor
add
stc
mov
call
outsb
loope
xchg
push
ljmp
and
or
daa
or
daa
je
jmp
ret
push
mov
jmp
insl
cld
mov
imul
xchg
add
loopne
test
push
mov
pop
dec
mov
nop
push
adcb
rclb
inc
mov
icebp
or
outsl
out
hlt
mov
test
movhps
rolb
mov
movsl
movsl
pop
pop
lock
cmpl
sti
test
sub
xlat
leave
dec
sarb
jnp
mov
inc
lret
mov
hlt
sbb
aas
enter
sbbb
in
sbb
mov
push
leave
fsubrl
mov
pusha
dec
sbb
xlat
jno
mov
pop
xor
add
test
cmpsl
popl
lock
mov
xchg
push
push
inc
pop
xorl
pop
nop
inc
fwait
insl
dec
cmc
test
fstps
sub
jnp
scas
test
add
rolb
xchg
lret
and
push
nop
xor
adc
imul
inc
xchg
add
cmp
outsb
arpl
push
dec
pusha
cli
cmp
push
dec
lds
xchg
mov
js
jae
gs
cmp
clc
into
mov
ret
and
js
sbb
cmp
or
adc
jp
mov
push
cltd
imul
cmp
sarb
in
pop
dec
insb
xchg
lcall
insl
xchg
rep
mov
mov
sti
fwait
adc
lods
pop
lea
movsl
imul
mov
push
repnz
xchg
scas
xchg
sub
sbb
add
roll
cs
add
rorl
or
nop
data16
popf
mov
jne
or
mov
icebp
out
xchg
ljmp
pop
add
leave
xor
and
inc
fmul
pop
test
cmc
outsl
and
and
xor
in
mov
leave
adc
aas
ror
nop
into
into
enter
arpl
incl
movsl
shll
rolb
insl
jns
adc
fistpl
stos
mov
or
mov
or
sbb
movsb
insb
xchg
imul
call
sahf
pop
mov
mov
lods
dec
adc
jo
adc
jl
dec
test
xchg
negb
add
and
inc
lods
imul
mov
gs
jmp
xchg
int
clc
sbb
movsb
xor
cmp
das
in
outsl
in
push
stc
mov
dec
out
sub
jbe
rol
in
jle
stos
add
adc
dec
add
sub
rcrl
add
mov
sub
mov
inc
dec
movb
mov
xchg
idivl
aam
aad
add
jge
sub
mov
mov
je
sub
testb
xor
mov
fidivrl
dec
ret
jno
nop
das
out
ret
xchg
xor
fsubs
jnp
xchg
test
jb
add
lret
mov
stos
je
jbe,pt
punpckhwd
adc
scas
daa
loope
dec
in
lea
mov
mov
cmp
iret
sahf
loop
cs
test
push
push
loop
aam
mov
sub
inc
sbb
sti
hlt
jle
cmp
cmc
sbb
jo
push
and
and
stos
xchg
inc
adc
dec
push
leave
lcall
pop
push
jmp
jecxz
xchg
icebp
sub
push
push
imul
popa
lods
nop
add
add
imul
dec
fdivrs
cmpsl
bound
dec
mov
imul
or
fiadds
fpatan
daa
je
js
xchg
lcall
xchg
add
pop
in
in
mov
outsb
sbb
iret
jb
sub
dec
mov
test
movsl
loope
xchg
movsl
jae
stos
adc
or
inc
dec
mov
jmp
mov
insb
mov
arpl
inc
add
dec
fstpt
lds
pusha
pop
xor
xlat
cmp
push
push
mov
sub
aaa
mov
mov
cli
or
mov
fnstenv
mov
jne
shrl
in
lods
mov
jbe
lea
fldt
xchg
movsb
cld
repnz
jg
mov
int
sarl
jno
fs
cmp
xchg
xchg
jg
aad
inc
add
fstpl
cltd
nop
push
cmpsl
xor
mov
push
xor
xchg
jb
push
add
mov
and
loop
pop
lret
lea
xchg
pushf
dec
sti
push
cmp
dec
pop
add
xor
adc
imul
mov
mov
mov
mov
iret
imul
adc
inc
adc
es
imul
popa
xor
sbb
js
fs
mov
mov
in
in
sbb
ljmp
lret
xchg
jecxz
cwtl
mov
jp
out
mov
dec
mov
cld
xor
adc
aaa
xchg
cs
lock
cmp
in
sbb
ret
imul
inc
xor
xor
pop
inc
fiadds
cmp
sbb
addr16
adc
or
push
mov
cmp
inc
out
call
ret
mov
jo
pop
movsb
jo
mov
inc
ljmp
imul
adc
insb
pop
xchg
add
xor
sub
dec
dec
xchg
aad
push
subb
xchg
insl
idiv
pop
ficompl
push
inc
mov
and
sbb
inc
xchg
lcall
je
insb
cs
sbbb
ret
xor
dec
in
ficomps
adc
xor
ljmp
loopne
cmpsl
decl
xchg
lret
hlt
add
inc
divl
outsb
add
call
add
in
jo
lret
mov
mov
mov
rclb
cmp
pop
sbb
xor
andl
mov
push
ds
xor
and
ja
lods
cmp
aaa
mov
xor
mov
pop
daa
add
test
pop
shl
nop
cmpsb
and
rcr
shlb
clc
xchg
les
jmp
jns
rolb
neg
mov
mov
mov
lds
out
popa
sub
rcrb
out
popa
sub
cli
stos
orb
push
es
and
pop
hlt
xchg
shr
fdivrs
add
lock
sbb
sbb
push
jg
pop
push
adc
jle
arpl
insb
sub
sub
in
push
fisubrl
add
xchg
test
ss
or
cmp
cs
cmpsb
dec
mov
out
ja
jae
mov
pop
lock
sub
or
incb
je
xchg
jne
aaa
repnz
fwait
and
lock
roll
lods
xchg
xchg
lock
xor
jo
and
nop
xor
xchg
lret
cltd
add
lcall
fidivs
and
mov
jae
xor
push
mov
push
outsl
xchg
xor
pushl
popa
fs
adc
add
jne
push
aas
mov
in
and
roll
dec
xchg
les
jp
add
popa
fsubr
xor
fiaddl
add
iret
shr
jle
push
lock
mov
adc
test
push
adc
lahf
and
cmpb
loop
push
xchg
sbb
xchg
cwtl
push
mov
cmp
out
or
xlat
fisttpll
push
imul
inc
test
jae
popf
inc
xor
sti
sub
fucom
rcll
outsb
and
call
add
lock
int
test
fiaddl
mov
sub
mov
arpl
mov
loope
icebp
aas
xchg
jae
xor
sbb
mov
sbb
into
cmpsb
icebp
sub
arpl
adcl
or
test
xor
push
mov
pop
enter
sub
cltd
mov
add
test
addb
movsb
lea
cmp
mov
dec
imul
mov
and
push
mov
sbb
adc
pop
xor
cltd
dec
jg
push
aad
call
mov
jae
xor
mov
loop
mov
add
loope
outsb
jmp
mov
out
in
sub
in
sti
and
loope
xchg
fstps
push
pop
jno
jbe
jno
push
ja
xor
mov
call
lock
jae
and
xchg
inc
insl
sbb
mov
lods
cmc
loopne
es
lret
bound
and
inc
add
movl
popa
in
mov
scas
repz
ret
je
xlat
push
aas
jle
dec
add
aam
lret
aas
push
inc
sub
push
jo
into
push
jnp
inc
negl
xor
add
lock
fnstsw
imul
lods
and
fdivl
inc
lcall
or
incb
jecxz
sub
or
mov
fwait
push
les
les
or
stc
add
int
xchg
movsb
shl
inc
nop
mov
cs
dec
adc
xchg
outsl
mov
movsb
dec
jno
inc
cmp
popa
in
fnsave
lcall
or
xor
ss
neg
xor
mov
push
js
sub
jmp
lret
push
out
sub
push
ds
mov
mov
fnstsw
inc
mov
dec
mov
dec
lods
call
ljmp
xchg
daa
or
xchg
inc
or
mov
loope
outsl
iret
mov
fwait
cwtl
fwait
cmc
cmpsb
dec
gs
or
jl
or
push
pop
gs
xchg
add
icebp
inc
or
cmp
jb
js
je
adc
pop
push
lret
insl
push
push
mov
mov
loop
pop
les
adc
pusha
mov
outsb
xchg
popf
insl
mov
or
mov
data16
icebp
jle
sarb
shrl
pop
push
adc
arpl
les
dec
push
sahf
push
mov
cmp
and
xchg
push
mov
cli
push
xchg
iret
push
pop
cmp
cmpl
scas
in
loopne
jae
adc
mov
data16
daa
jmp
mov
in
std
pop
mov
insl
inc
movsb
or
jb
cmp
adc
divl
mov
imul
out
xlat
sbb
bound
cwtl
sub
mov
je
or
xor
mov
es
push
jns
pusha
adc
imul
sub
xor
loope
sbb
adc
gs
inc
adcb
aad
cmp
pop
pop
and
not
xchg
nop
adc
sub
cmpsl
cli
pop
cwtl
decb
push
xchg
inc
dec
out
fidivs
vmsave
xchg
sbb
push
add
pop
daa
sbb
je
mov
pusha
int3
cmp
shlb
sub
sub
pop
adc
adc
bound
mov
sbb
out
adc
sahf
mov
adc
mov
push
mov
scas
dec
cmp
mov
faddp
mov
sub
test
mov
push
clc
nop
jne
bound
cmp
outsb
fcmovnb
push
out
inc
pop
add
push
jno,pt
dec
add
inc
les
sub
add
repnz
sbb
push
test
stos
in
push
loopne
xchg
pop
aaa
fidivrs
les
stos
popa
jmp
add
mov
cwtl
sub
std
ret
mov
hlt
inc
mov
lea
lahf
add
sbb
shlb
push
fidivl
mov
add
mov
jne
bound
dec
aas
pop
sbb
in
xor
and
iret
xchg
mov
and
aad
sahf
adc
xchg
pop
adc
mov
out
out
ds
mov
mov
lods
bnd
dec
dec
xor
enter
jl
mov
and
fcmovnb
push
test
sub
js
jns
mov
loop
push
lods
popa
cmp
lret
lahf
pop
xchg
xor
stos
ror
popa
mov
push
test
xchg
sbb
xchg
mov
jns
repnz
imull
xor
lods
pop
pushf
subl
sbb
xchg
std
sbb
inc
adc
jnp
mov
shlb
add
sub
insb
push
rorb
xor
shrl
jae
ds
sub
fisubrl
adc
sub
cmpl
mov
jle
ret
insb
fnstsw
adc
arpl
popa
movsb
adc
sbb
sbb
sbb
clc
in
xor
xchg
rcr
push
xchg
mov
leave
lret
outsb
cltd
insb
sarb
and
mov
subl
scas
cs
mov
xchg
add
mov
inc
fisubl
mov
or
cmp
push
sbb
outsb
push
popa
mov
push
add
push
adc
adc
mov
into
test
pop
adc
xchg
add
scas
stc
gs
sti
outsb
push
mov
pushl
inc
divl
scas
mov
lods
pop
bound
jp
inc
inc
mov
in
jne
pop
sbb
dec
testl
pop
cwtl
fwait
jb
push
push
bound
shll
xchg
jg
test
lea
hlt
lds
into
mov
add
mov
pop
mov
faddl
mov
sbb
inc
xchg
add
push
enter
ret
inc
ljmp
pop
mov
out
out
jbe
sbb
xchg
mov
xchg
rcrl
out
jns
imul
push
js
mov
test
push
sbb
hlt
lret
fidivs
shll
mov
inc
xchg
outsl
inc
sbb
xchg
andb
jb
in
fidivrs
mov
add
into
adc
jecxz
hlt
or
imul
jne
pop
lods
lock
mov
mov
or
xor
inc
pop
nop
push
cmpsl
outsl
push
add
add
xlat
sti
sbb
cltd
cmc
inc
loopne
lods
int
jno
movups
mov
or
or
dec
add
inc
pop
cmp
sub
mov
int
cmp
popf
sub
mov
xor
push
xchg
xor
lds
jnp
adc
xor
and
mov
or
leave
push
gs
inc
call
sub
fucomp
pushaw
xchg
fsubrp
ret
jecxz
popa
mov
int3
push
loope
push
ret
daa
sbb
mov
sbb
xchg
inc
aam
cmc
mov
repz
xchg
popf
lret
sbb
sub
cmp
sbb
pop
fnstcw
lea
and
sub
adc
shrl
out
or
sbb
adc
call
add
sbb
xchg
and
pusha
pop
dec
insl
imul
data16
push
rcrl
ficomps
test
in
in
add
out
pop
mov
pop
call
lea
icebp
push
sahf
clc
jns
or
outsb
sbb
ret
std
divb
jmp
ret
dec
jl
leave
mov
cli
pushf
or
aas
xor
add
or
mov
or
add
ret
xchg
imul
pop
or
fwait
sbb
push
div
leave
and
add
lock
movsl
imulb
or
inc
push
push
repnz
lds
jne
xor
jns
ret
add
sub
mov
push
lods
xor
push
pusha
insl
in
jae
jmp
imul
fisttpll
ja
out
mov
xlat
fs
ret
mov
leave
mov
popa
pop
mov
sbb
fistps
fstps
pop
pusha
and
push
and
scas
lret
or
aaa
cmp
cmp
int3
ret
pop
int3
shlb
jge
xor
movsb
fwait
push
aas
sub
rclb
jnp
inc
repz
lock
sbb
js
jo
cmp
test
aam
stos
jae
mov
lods
outsb
and
cmp
jg
insb
repz
in
jne
xor
sbb
cmp
or
hlt
cli
sbb
andb
dec
push
sub
fisttps
pop
push
icebp
jo
push
sbb
mov
mov
xor
cmp
mov
pushf
pop
push
stos
add
pop
jl
arpl
add
sbb
lods
jb
scas
adc
insb
dec
int
and
std
jge
je
lret
cs
mov
dec
sahf
ljmp
xchg
mov
out
test
push
sub
cmpsb
into
mov
jg
push
cltd
inc
pop
test
popl
push
adc
mov
xor
dec
add
xorl
js
mov
adc
sbbb
and
add
dec
aam
movsb
gs
scas
mov
cli
push
xor
and
rcll
lds
jo
adc
adc
ds
rcr
push
std
mov
dec
fmul
stc
sbb
fcoml
jo
jnp
jecxz
insl
lods
cltd
mov
repnz
imul
negl
daa
loop
or
dec
int3
dec
test
call
cltd
jbe
in
pop
or
xchg
scas
test
rol
add
lock
cmpsb
decl
or
xchg
cld
pop
bound
pop
push
push
js
testl
in
xorb
stos
cmc
movsb
sub
ljmp
loope
or
push
leave
mov
test
leave
fists
idiv
addl
lret
pusha
loopne
mov
mov
cs
mov
enter
adc
ljmp
dec
in
int
into
jno
dec
and
mov
loopne
push
mov
shrb
pop
sbb
cmp
rorl
fisubl
fildll
push
iret
and
sbb
jl
test
mov
fistpl
xchg
add
dec
inc
adc
xchg
inc
fsubs
inc
adc
push
cmpsl
inc
dec
in
dec
loopne
je
mov
pop
addr16
jns
mov
scas
pop
pop
jb
xor
xlat
adc
es
ja
add
stc
inc
sbb
dec
addr16
mov
and
aad
stos
dec
dec
xchg
fs
cs
pop
xchg
push
inc
lods
sub
pop
mov
into
imul
pop
into
out
imul
fnstsw
xorb
inc
xchg
or
push
lds
cmp
ljmp
call
xor
or
xchg
aas
in
sub
xor
shrb
mov
jo
imul
pop
adc
sbb
and
daa
into
lds
sbb
push
sbb
sbb
jmp
add
mov
jg
cli
adc
or
cld
xor
int3
scas
jno
nop
push
mov
sbbb
out
mov
and
pop
roll
flds
shrb
jmp
add
outsb
sub
cmp
jae
lds
test
adc
out
mov
sahf
aad
or
je
cmpsb
add
imul
adc
and
scas
int3
cmp
gs
adc
imull
icebp
ret
sub
push
dec
out
nop
dec
and
xchg
xchg
xchg
mov
sub
sbb
movsb
and
jb
jae
jb
ret
jno
mov
xchg
aad
or
dec
push
push
jle
lds
adc
pop
push
mov
inc
push
cmc
jne
push
hlt
mov
pop
in
dec
pusha
sbbl
sub
xchg
push
mov
dec
jg,pn
mov
sub
adc
fcmove
mov
enter
notb
mov
shll
stos
faddl
xchg
sbb
inc
scas
in
std
aam
pop
xor
adc
fcmovnb
mov
dec
adc
or
lock
aad
in
dec
mov
push
sub
call
pop
push
mov
push
xchg
dec
jmp
or
mov
cli
sbb
mov
sbb
inc
push
inc
das
daa
shrl
cli
sub
fmull
sbb
out
xor
js
and
cmp
cmp
imul
sbb
sahf
push
cs
movsb
std
mov
fsubrl
in
mov
shlb
test
aaa
out
inc
insl
jle
xor
filds
sbb
cmp
add
adcl
xchg
dec
faddl
cli
fs
mov
into
cmp
arpl
push
jnp
mov
inc
push
incb
enter
mov
adc
jb
inc
mov
ret
stos
in
xchg
or
shll
xor
xchg
jae
jne
xchg
jb
mov
test
popf
ret
lcall
repz
sarb
cmc
imull
pushf
pusha
and
jle
fadd
add
push
popa
xchg
jae
cmpb
mov
cmp
xchg
hlt
loopne
movsl
sahf
sarb
clc
or
popf
movsl
xchg
mov
repz
pop
jge
mov
cmpsl
gs
mov
in
and
xacquire
push
push
aad
push
cs
cmp
push
fisttpl
adc
int
mov
mov
or
sub
enter
ds
push
mov
sub
inc
aad
pushf
popf
test
xor
mov
repnz
mov
scas
bound
or
xchg
xchg
cmp
jecxz
jbe
xchg
sub
jno
mov
sub
sub
je
arpl
adc
das
xchg
in
jmp
sub
jb
add
lods
sbb
adc
cmp
dec
xchg
mov
sbb
lret
mov
in
adc
enter
and
mov
add
add
daa
cmp
jo
cltd
mov
mov
test
push
push
pop
push
fiadds
sbb
bound
addl
shl
mov
fists
lods
mov
sbb
and
push
sti
lahf
sub
mov
dec
mov
dec
shll
sbb
lock
adc
push
xor
jg
idivb
cmc
push
xor
jg
xchg
in
das
and
shlb
insl
mov
pop
mov
xor
dec
sub
and
pop
mov
fsubrs
inc
lds
push
mov
mov
adc
cmp
adc
or
gs
insl
lret
mov
gs
pop
or
cmp
xorps
mov
xchg
pop
push
pusha
jmp
cs
jge
or
jbe
pop
mov
repz
imulb
xchg
and
fsts
test
lea
and
data16
or
or
es
mov
mov
incb
int
mov
jge
popf
jae
sbb
leave
mov
ret
dec
xchg
pop
popa
pop
lock
inc
jne
dec
sahf
mov
cld
jmp
stos
sti
cmp
mov
bound
pusha
out
into
test
loop
outsl
jl
pop
shlb
test
lret
out
test
jne
or
out
cwtl
imul
sbb
lahf
sub
sbb
js
cs
jmp
lcall
xor
movsl
cmp
inc
ss
out
xchg
or
imul
mov
shrl
cltd
jle
mov
push
loop
mov
sbb
pop
pop
and
notl
jle
jae
inc
xchg
scas
sbb
push
repnz
mov
push
sbb
pop
mov
sahf
mov
push
ljmp
out
sbb
xchg
cmp
xchg
mov
lods
out
scas
push
pop
lds
leave
fcomps
mov
push
cmp
sar
mov
push
lea
or
xor
int
in
aaa
aaa
imul
mov
mov
dec
mov
mov
push
add
cmc
ds
pop
jle
dec
daa
into
das
test
aam
ret
aam
inc
ret
fwait
push
popf
loope
sub
adc
dec
jae
adc
scas
xor
adc
or
mov
in
data16
xor
das
mov
xor
pop
dec
test
dec
scas
inc
std
cmp
push
jg
das
loope
mov
iret
xchg
andb
mov
push
sbb
and
mov
add
push
mov
jge
or
and
fcompl
cmc
and
sarl
sbb
ds
mov
mov
cmc
test
push
mov
int
or
or
adc
xlat
xchg
jle
and
aad
fs
add
lcall
jne
sub
stos
outsb
outsb
sub
mov
sbb
push
cmp
aas
mov
mov
iret
add
les
sbb
lods
test
in
adcl
push
jo
xchg
push
mov
or
notl
dec
cmpsb
pop
loop
dec
xor
movsb
stc
push
dec
es
aad
pop
imul
insl
aas
inc
inc
dec
pop
std
cmp
mov
jmp
cmp
pop
sahf
sbb
jl
test
xor
lds
push
cmp
mov
rorl
push
inc
sahf
lea
pushf
mov
mov
xor
sub
mov
lret
push
pop
xchg
xor
push
push
xor
adc
cmp
pop
or
data16
int
imul
and
push
mov
repz
lods
add
mov
fisttpll
cmp
and
fnstsw
mov
dec
fstpt
push
shll
test
or
call
repnz
sbb
mov
lret
jle
xchg
dec
add
dec
ds
pop
fdivrs
inc
mov
adc
sub
mov
xchg
inc
push
dec
pop
stc
pop
cli
aam
mov
mov
out
roll
adc
push
mov
push
loopne
add
test
lea
pop
xchg
cmpsb
mov
clc
pop
push
push
imul
xor
dec
hlt
cvtdq2ps
pop
imul
xor
addr16
xchg
jae
pusha
cli
je
arpl
mov
mov
gs
jnp
xor
arpl
enter
out
push
fistpll
push
fstps
pxor
sahf
mov
xlat
xchg
add
mov
jns
rclb
iret
mov
push
cmpsb
mov
ljmp
mov
roll
ja
or
fistl
je
outsl
inc
sbb
mov
movl
xchg
xchg
pop
pop
jecxz
int3
pop
shlb
test
dec
ret
add
mov
stc
sub
add
sbb
push
popf
xchg
dec
pop
or
or
out
fsubrl
sbb
pop
dec
mov
leave
ss
mov
mov
mov
cs
sub
push
ret
mov
shrb
mov
xchg
inc
ja
sahf
cmp
xchg
pop
cltd
xor
adc
push
or
xor
nop
bound
xchg
jle
inc
lahf
dec
lret
sub
repnz
dec
xchg
nop
test
adc
ss
push
jp
xor
mov
add
bound
jo
xchg
mov
les
inc
inc
gs
jecxz
nop
lret
and
jno
mov
pop
test
iret
xlat
cmpsb
shlb
popf
lcall
into
flds
sub
dec
pushf
test
or
pop
clc
mov
int
subb
rorb
cmp
les
bound
enter
ljmp
popl
mov
add
mov
leave
adc
xor
in
dec
data16
popl
ss
push
iret
xor
sub
add
fidivrl
jae
inc
divl
shll
push
int3
iret
adc
iret
inc
mov
pop
pop
xor
les
jb
cltd
loopne
shll
xor
dec
icebp
daa
jb
xor
test
adc
fldenv
dec
or
mull
add
js
xchg
pop
xor
into
sahf
lock
and
mov
out
lret
clc
pop
daa
xchg
sbb
dec
mov
lret
enter
sbb
pop
inc
ds
dec
jnp
test
shll
jmp
nop
in
push
loopne
cmp
dec
mov
push
add
dec
int3
sbb
sbb
inc
mov
ja
mov
scas
aad
fstpt
movsl
xchg
inc
xor
lahf
idivb
lods
ss
aas
inc
adc
pop
lea
lods
cld
adc
pop
stos
rcrl
ss
js
sahf
sub
pushl
push
inc
sbb
popf
sbb
push
leave
adc
dec
rorb
push
push
sub
fsubrs
aaa
jne
inc
popf
fisubl
pushf
dec
ret
es
mov
mov
mov
stc
fidivrs
aaa
scas
inc
adc
movsb
stc
xchg
in
xor
mov
pop
out
adc
mov
inc
ja
pop
push
aam
cmp
cmp
ret
ret
and
dec
add
fnsave
xchg
cwtl
lds
popf
mov
mov
pop
jns
pop
addr16
jne
adc
push
in
pop
pop
rorl
mov
and
push
adc
xchg
fisttps
cmp
mov
les
pop
stc
imul
inc
inc
iret
fdivp
or
jnp
mov
sbb
insl
lcall
test
sbb
loop
sbb
enter
inc
jne
xchg
push
jns
out
gs
cld
xor
mov
mov
and
nop
mov
roll
call
lret
jnp
cltd
stos
push
adc
adc
idivl
repnz
add
cmp
mov
sub
inc
lret
sub
mov
dec
outsb
addl
into
and
xchg
xchg
adc
xchg
jno
dec
sub
adc
test
imul
sbb
inc
push
xchg
movsb
scas
fwait
adc
fadds
sub
cmp
mov
xchg
dec
mov
aas
ret
lahf
mov
cmpsb
mov
aad
jb
movsl
adc
aad
push
mov
cmp
fsubrs
loopne
aam
or
jge
sbb
ss
jb
pusha
and
pop
inc
lods
cmp
out
jp
cmp
mov
add
insl
fmull
xor
cmpsb
ja
add
mov
cmp
test
mov
movsb
es
pop
sub
jmp
repz
ficoml
xor
and
test
aad
adc
mov
int
adc
and
fldcw
xchg
mov
mov
and
ret
cwtl
in
mov
xchg
cmp
cmp
sti
iret
mov
mov
add
jbe
stos
outsl
testl
in
push
dec
jle
mov
or
rorb
les
pop
sbb
xlat
aam
test
repnz
outsl
mov
daa
pusha
test
adc
lahf
paddw
popa
adc
pop
push
mov
inc
pop
loope
inc
ja
les
mov
jnp
cmp
out
pop
sub
xor
movsb
dec
xorl
psllw
xchg
orl
cltd
adc
cli
mov
or
mov
mov
addb
mov
and
fidivs
aam
dec
mov
nop
or
ljmp
jge
adc
gs
repz
pop
lcall
push
jae
mov
movsl
or
sbb
or
xor
in
dec
out
dec
xchg
inc
js
xor
lea
xchg
push
es
hlt
loopne
jae
lock
add
int
or
inc
jmp
mov
dec
stos
sub
inc
fiadds
ret
addb
and
je
es
xchg
jg
sarl
adc
pop
iret
cmpl
sub
cli
fnsave
cwtl
mov
rorl
mov
adc
fildll
pop
orb
icebp
lds
push
push
push
xor
sbb
sub
xorb
push
push
jne
das
stc
sub
adc
pop
or
pop
imul
jns
adc
rcrl
xchg
dec
mov
test
lock
adc
mov
xchg
mov
and
or
loop
push
add
pop
fdivp
data16
add
sbb
and
mov
adc
clc
and
js
enter
stos
int3
leave
movsl
cli
jb
loopne
cli
cmovle
ljmp
aaa
sub
adc
pop
mov
ja
pop
cld
cmp
xor
int3
ljmp
popf
mov
and
in
movsb
lret
cmpsb
jle
sbbb
ds
int
mov
cwtl
push
and
and
leave
fstl
sub
cmp
imul
out
fwait
xchg
pop
insl
lds
data16
add
pop
lea
add
sub
and
mov
iret
adc
mov
out
inc
jb
sahf
leave
cmp
sbb
shlb
out
sub
xlat
lods
cli
bound
sbb
pop
push
jle
jg
cmp
push
push
cmp
dec
daa
testl
stc
xchg
push
ljmp
sub
add
popa
jmp
aad
cwtl
loopne
movsl
xor
push
stos
js
pop
lcall
push
jp
cmp
sub
into
pop
sub
repz
ucomiss
pop
jns
mov
sub
cltd
sbb
jne
or
inc
cmp
fdivp
jns
stos
arpl
mov
fs
lret
add
gs
jnp
or
outsl
cmc
pop
mov
push
push
sbb
sub
shr
cmp
cmp
insb
pop
das
inc
pop
inc
scas
stos
and
adc
and
insl
mov
jne
aas
fbld
add
mov
insb
cltd
stos
loopne
pop
dec
imul
repz
xrelease
imull
inc
icebp
inc
cmpsl
adc
enter
push
adcl
push
scas
ss
lahf
fldl
adc
orb
mov
repz
xchg
imul
push
mov
repnz
or
inc
mov
dec
cltd
sbb
dec
pop
aaa
ja
sbb
shr
rcrl
ds
cwtl
test
imull
pop
test
pop
es
xchg
jno
lcall
inc
fcomps
popf
lret
ror
js
cmovne
pop
test
add
pushf
insl
test
je
push
pop
pushf
xchg
xor
mov
lods
add
mov
out
xchg
pusha
fwait
push
arpl
cmp
loopne
sub
cwtl
push
mov
cli
mov
fs
imul
cmp
lock
jno
orl
dec
mov
inc
pop
fdivrs
dec
sbb
dec
les
or
and
cmp
dec
nop
and
xorl
in
cs
adc
mov
ljmp
pop
and
enter
mov
ds
int
ficoms
mov
xor
jp
cmp
add
loopne
dec
or
pusha
insb
xchg
sti
push
push
push
cmp
lods
out
add
or
clc
or
loop
jmp
jp
push
lods
scas
xchg
xchg
add
or
or
cmpsl
popf
push
xor
xor
dec
in
sarb
es
cmp
and
mov
mov
bound
stos
pop
lods
add
pusha
jl
or
pop
ror
mov
jge
jl
lcall
ss
jecxz
enter
sbb
sahf
icebp
repz
or
mov
imul
xor
cmp
mov
in
xchg
cmp
adc
xchg
cmp
ret
pop
repnz
mov
cs
mov
pop
pop
fcmovnu
jge
pop
or
fsubrs
lods
aas
mov
popa
hlt
out
jae
insb
and
add
mov
add
and
push
sahf
push
outsb
lods
jmp
mov
fdivr
lock
sbb
rorb
inc
pusha
std
js
bnd
push
mov
push
jp
pop
test
fbstp
sbb
mov
pop
push
out
mov
das
add
xorb
and
xchg
cmp
pusha
js
mov
fidivrl
aad
fistpll
fistps
cmpl
push
jle
popf
sbb
adc
mov
jo
scas
leave
mov
cmp
rclb
sub
aam
pop
xlat
jbe
fmuls
mov
pop
repnz
ss
pop
xchg
push
mov
push
cwtl
pop
data16
jae
jb
or
xchg
mov
adc
fisttps
pop
pop
das
push
cmp
pop
pop
or
dec
pop
pop
dec
dec
hlt
sbb
je
jb
loope
movd
mov
dec
mov
xchg
sbb
adc
test
inc
test
cmp
ljmp
cs
andb
xlat
arpl
stc
stc
rorb
fs
mov
cli
mull
loope
ret
mov
mov
push
adc
insl
test
adc
lea
sub
inc
mov
or
sub
fistpl
mov
ret
repnz
push
mov
adc
inc
ret
cli
js
inc
xor
cmp
push
into
adc
xor
sub
dec
dec
mov
mov
dec
pop
or
sub
fsubrl
jae
adc
cmpb
jb
fmull
jb
les
ss
push
das
testl
cwtl
imul
inc
je
xor
xor
push
ss
mov
lods
xor
fbld
adc
cltd
mov
cld
jp
or
inc
mov
jae
fisubrs
add
push
in
imul
jg
scas
or
cmp
xchg
movsl
loopne
mov
orb
sbb
pushf
rorl
adc
push
dec
jl
push
out
roll
in
fstl
push
popa
pop
inc
jb
jno
jmp
sti
adc
adc
test
cmpsl
rorb
dec
mov
mov
adc
movsl
push
inc
mov
jp
add
lahf
rol
jp
dec
daa
daa
pop
aam
cltd
js
lret
or
cli
pushf
push
rorl
push
xchg
int3
jp
jle
insl
mov
jns
dec
mov
out
in
sub
and
je
mov
xchg
add
or
mov
xor
loopne
into
je
push
jmp
fsubrs
dec
sbb
das
sub
and
imulb
inc
sbb
inc
inc
pop
ja
and
es
xchg
ficomps
add
fs
push
push
adc
mov
cmp
pop
dec
dec
add
mov
dec
xchg
ret
and
jl
sahf
mov
jl
stos
jg
xchg
xchg
stos
hlt
mov
lea
jnp
dec
aaa
push
pop
pop
inc
out
shl
xor
sbb
out
or
push
pop
fdivrl
jp
lahf
dec
test
pop
ret
pushf
pop
aam
xchg
add
fldenv
rcr
xchg
in
xchg
and
les
inc
xchg
outsl
inc
lret
inc
fstpt
dec
pop
jno
pop
sub
scas
scas
mov
adc
jle
movsb
mov
shrb
inc
shll
outsl
rolb
scas
out
xchg
jmp
jg
movsl
xchg
fisubrs
xchg
dec
lods
jne
fisubl
and
lret
fcomps
inc
fstl
or
mov
loopne
std
pop
jge
in
mov
mov
pop
ja
jne
mov
adcl
adc
cmpsb
xchg
push
jnp
mov
push
in
mov
shr
cmp
insb
push
adc
add
sub
mov
add
cli
dec
pop
cmpsl
test
dec
dec
movl
sub
adc
xchg
mov
adc
mov
inc
out
addr16
fimuls
xor
fstp
roll
ret
mov
cmp
mov
mov
dec
nop
adc
inc
repnz
xchg
jb
repz
mov
in
mov
mov
sub
dec
sub
or
repz
xor
leave
aas
std
jno
inc
sub
mov
sarb
push
lods
aas
arpl
xlat
mov
movsb
in
xchg
xorb
sub
jno
mov
adc
fisubs
das
xchg
jle
in
push
imul
xor
mov
adc
js
inc
enter
cmp
and
leave
cmp
xrelease
jmp
pop
add
leave
add
out
xchg
mov
dec
dec
or
mov
in
cli
fisubs
cmp
fnstcw
sub
adc
mov
ds
loop
mov
pop
addr16
imul
mov
call
adc
sbb
push
mov
enter
sub
fsubrs
addb
push
roll
sbb
xchg
mov
repnz
adc
int3
and
xchg
cmp
sbb
jno
incb
or
sbb
mov
pop
js
sub
imul
cmpsl
cmp
bound
ret
outsl
sbb
addr16
mov
fs
cmc
xlat
seta
pop
mov
imul
movsl
mov
xchg
pop
add
add
fstl
daa
xchg
test
push
jns
jbe
gs
popf
dec
jne
shlb
xlat
mov
cmp
int3
jno
je
cmp
mov
cmpsl
icebp
mov
mov
lds
lea
xchg
lcall
inc
sbb
pop
cmp
pop
ds
stos
pop
push
cmp
cli
inc
cmp
js,pt
dec
fcoml
test
fcompl
aas
sbb
test
out
add
cli
insb
loop
stos
push
xor
stos
fld
dec
out
mov
cmp
push
pop
mov
push
mov
enter
jle
jg
inc
xor
add
movsl
dec
pop
dec
repz
add
in
dec
or
out
lods
pop
js
lea
adc
inc
repnz
mov
mov
inc
sahf
sahf
pop
lret
rcll
mov
push
xchg
sarb
out
jg
sbb
push
fldenv
xchg
jmp
bound
mov
fisubrl
xor
sbb
test
push
pusha
je
ficoms
add
jne
shll
lahf
jno
cmp
test
fisubl
cmpb
pop
jne
sbb
xor
pop
pushf
sbb
or
cmpl
cmp
and
int
push
movsb
pop
adc
cmp
push
rcrl
cmp
imul
cmp
jge
loop
mov
fucomi
fbstp
loop
fwait
or
sti
sub
pop
lret
enter
and
push
cmpsb
aaa
mov
inc
xor
jge
outsl
sar
popa
icebp
or
std
fstpl
mov
fmull
loopne
adc
or
cs
jmp
insl
pop
hlt
lret
les
sbb
push
mov
mov
xchg
repnz
aam
faddp
test
cmpsb
mov
fs
lods
push
out
test
jns
jmp
jb
jo
sbb
adcl
outsl
push
jns
inc
dec
sub
flds
jnp
jbe
or
push
xlat
and
cwtl
enter
fidivrl
cs
mov
in
xchg
sub
adc
stos
ret
sbb
mov
mov
andb
jno
mov
mov
mov
adc
dec
mov
stos
insl
cld
cmp
jp
out
add
lock
sbb
flds
pop
popf
mov
fwait
ljmp
pop
shll
cmpsb
addr16
aas
mov
lods
sbb
test
enter
test
aaa
adc
inc
inc
int3
sbb
repnz
push
cmp
push
sub
xor
xchg
mov
insb
push
jecxz
cmp
add
push
pop
cld
or
sbb
xchg
mov
xlat
dec
adc
xchg
pop
xchg
loope
dec
and
test
popf
ret
test
mov
shrl
ljmp
icebp
cmp
cmpsb
push
adc
shrb
leave
scas
cmpsl
jp
aaa
xor
in
or
movq
stos
ret
pop
mov
inc
data16
adc
dec
jbe
loop
mov
cmp
xchg
aaa
repz
in
mov
pop
scas
inc
or
push
lock
sbb
add
call
pop
dec
dec
dec
shlb
and
test
rol
lret
xchg
stos
jns
sub
jns
ss
iret
dec
cmpsl
out
adc
add
push
cmp
call
lock
jo
cmp
jne
scas
insl
jns
int3
das
movb
xchg
pushw
xor
scas
mov
pop
pop
lcall
es
inc
add
mov
and
sub
arpl
inc
sahf
les
or
mov
addr16
lods
and
out
mov
mov
sub
test
int
imul
pop
or
pop
addr16
jnp
test
filds
mov
xchg
push
mov
repnz
inc
addr16
test
pop
jmp
call
stc
in
subl
mov
fisttpll
out
push
jnp
sub
sar
inc
pop
lock
dec
negl
cmp
es
pop
pop
push
push
ljmp
jnp
jae
out
adc
xor
mov
orl
xlat
sbb
lcall
enter
sahf
fnstcw
test
aas
sub
add
lods
cmc
jns
sbb
sub
push
adc
pop
out
sub
mov
out
lods
adc
in
mov
and
add
stos
and
les
dec
sbb
shl
push
add
or
outsl
hlt
cli
sti
iret
and
add
mov
push
out
into
push
jmp
sub
xor
cmp
outsb
test
cmovg
xlat
cmp
jl
shll
aaa
sbb
imul
pop
je
popa
dec
sub
movsl
hlt
mov
fcmovne
adcb
and
inc
iret
mov
mov
and
xorb
addr16
sbb
out
xchg
icebp
loope
insb
rcrl
pop
adc
gs
xor
sub
out
rorl
imull
or
and
fisubrl
dec
daa
inc
dec
jg
dec
aas
and
inc
rcrl
dec
push
or
js
aas
adc
dec
loopne
aam
addr16
repnz
xor
fsubrp
push
inc
and
dec
aad
imul
int3
int
add
loop
or
jb
enter
and
and
aad
push
cmpsl
shlb
push
in
and
mov
jmp
mov
inc
mov
rcrb
sub
add
int3
lahf
xor
sbb
fs
mov
add
lds
test
pop
shll
lock
jb
cmc
add
push
or
xor
xchg
jae
xchg
sbb
dec
repz
incb
test
movsl
cwtl
xor
pop
cld
dec
sub
mov
inc
jg
xor
outsb
andl
xor
lret
es
jg
add
pop
lret
mov
cwtl
ud1
xor
jne
mov
out
cmpsl
fsts
movsl
paddusw
pop
shrl
xorb
mov
shrl
insl
jmp
mov
je
dec
and
dec
sti
std
cmpsl
jmp
dec
cmpsl
jecxz
aas
jp
cmpsb
xor
mul
jmp
repnz
lcall
push
jns
lahf
lds
adc
cmpsl
mov
jge
pop
jno
fistpll
pop
xchg
inc
negb
mov
je
cmpb
push
xchg
inc
rorb
rolb
in
lcall
lcall
movsb
jecxz
rorl
xlat
test
ds
fdivrs
gs
add
inc
popf
lahf
sbb
das
repz
loopne
jmp
imul
mov
sub
mov
mov
fcmovu
incl
out
leave
cmp
add
xchg
add
ffree
lahf
aam
fs
add
push
lea
push
mov
shll
clc
lock
mov
add
loope
clc
clc
mov
scas
sbb
cmpsl
xchg
push
idivb
adc
push
push
sar
stos
sub
adc
add
xorb
popa
inc
imul
js
cmp
arpl
lea
sbb
insb
adc
rcr
pop
cli
cs
pop
adc
lahf
movsb
sbb
pushf
decl
xchg
daa
shrl
pop
push
movsb
lahf
stos
dec
or
mov
mov
and
vorpd
js
and
inc
lea
adc
sub
lret
mov
repnz
in
cmp
roll
cltd
pop
mov
mov
ljmp
cmp
pop
sub
cmp
aas
adc
cwtd
fisubrl
jb
outsb
push
xorb
push
sbb
test
jbe
cmpl
loopne
mov
or
enter
mov
loopne
xchg
es
push
rcrb
lret
dec
in
aas
test
ficompl
dec
shrl
les
jb
insl
sub
or
aas
push
jmp
insl
fiadds
or
aas
jge
xchg
dec
mov
sbb
cmpsb
adc
jp
popf
xchg
mov
rolb
leave
jmp
inc
pop
sub
pop
push
imul
shll
sub
lock
outsl
ja
arpl
cmpb
and
jne
mov
aad
sldt
movsl
and
je
in
fdivs
or
test
popf
add
pop
or
stc
ja
jae
popa
push
sbb
push
cmp
dec
lods
and
mov
pop
shl
mov
add
and
sbb
mov
ret
push
adcl
push
testb
or
mov
xor
xchg
or
push
push
out
pop
dec
inc
pop
mov
or
rorl
xor
pop
pop
add
loope
cmp
mov
test
cmp
test
popa
stc
popf
xchg
adc
out
dec
fs
push
aaa
jmp
or
shlb
inc
pop
pop
push
adc
notb
std
mov
insb
push
jg
and
pop
cs
push
mov
jp
ror
icebp
dec
xchg
inc
in
fxam
adc
cmp
fnstsw
stos
iret
pop
and
xor
jmp
pop
jne
jmp
dec
arpl
fistl
push
push
insl
cmp
inc
add
dec
pushf
add
repz
sbb
push
xor
push
lds
fcom
cwtl
sub
mov
outsl
xor
pusha
xor
xchg
pushf
lds
int
push
sub
addr16
or
xchg
dec
lock
xorl
jp
sbb
std
stc
inc
addb
sbb
or
xchg
pop
cld
lret
or
mov
xchg
xchg
sbbl
inc
dec
adc
sar
bound
jne
add
testb
push
out
adc
iret
fwait
inc
dec
out
stos
aad
ret
rorb
test
dec
cwtl
inc
popf
icebp
into
xor
adc
mov
stos
push
mul
cmp
flds
mov
mov
adc
negl
xor
add
movsb
repz
sub
loopne
dec
sub
cmpsl
std
adc
and
and
js
popa
mov
cmp
inc
jl
mov
fdivrl
lret
gs
push
jg
fucomp
push
mov
stc
cmp
cmpsl
pop
cmc
mov
inc
lods
xchg
dec
jecxz
xchg
add
jecxz
lds
adc
lret
imul
les
mov
out
mov
ret
mov
jmp
inc
bound
gs
xor
and
add
xchg
adc
lret
lret
push
jae
ror
cmp
data16
jae
scas
sbbl
cmp
jmp
xrelease
clc
cmp
jns
mov
mov
hlt
xorl
pusha
push
sti
push
adc
mov
cmpsl
add
mov
cli
mov
sub
les
mov
lcall
xchg
sub
xor
rcr
cwtl
psrld
imul
std
movl
push
xor
mov
das
ja
push
and
push
pop
fisubl
lahf
leave
xor
pushf
mov
pop
aam
dec
sbb
pop
stos
jg
pop
out
push
icebp
sbbl
xchg
push
sbb
fistpll
call
push
push
push
mov
repnz
sbb
mov
bound
mov
ss
lcall
jmp
xchg
adc
mov
int
jnp
adc
pop
lods
outsl
gs
stc
mov
inc
xchg
push
xlat
sbb
mov
pop
add
push
aas
popf
ja
sub
in
test
cmp
cmpsb
shr
push
clc
lea
jae
inc
mov
popa
fwait
add
and
mov
xchg
nop
push
roll
fidivrs
cmc
insl
repz
or
loopne
sar
jl
jecxz
lock
lret
jle
pop
int3
mov
pop
pop
icebp
push
dec
mov
cli
enter
jnp
xchg
in
jbe
daa
xchg
mov
movsb
decb
sub
imul
imul
pushf
xchg
repnz
adc
and
mov
xlat
out
pop
fstps
dec
ret
rcll
in
xchg
dec
add
dec
fwait
pusha
pop
xor
xlat
inc
add
push
dec
mov
lahf
push
fwait
sbb
loope
jnp
fadds
jne
insl
shl
xchg
add
or
xor
scas
xchg
and
xor
scas
push
xabort
lcall
cwtl
movsl
gs
cld
fidivrs
in
loop
stos
aad
clc
mov
push
stc
jp
mov
dec
jge
movl
mov
fwait
jno
jl
sbb
imul
sbb
jp
push
add
xor
mov
into
and
adc
push
into
lret
repnz
or
jecxz
mov
or
sbb
test
cmpb
lcall
mov
cmp
add
cmp
lret
dec
out
data16
fstps
inc
leave
loope
mov
repz
jno
movsb
pusha
test
xchg
in
iret
repz
pop
ror
or
test
inc
inc
pop
ficoms
leave
lods
call
in
adc
stc
loopne
push
int3
add
mov
xchg
inc
inc
cmpsl
iret
xchg
mov
push
out
dec
cs
adc
cmp
lds
cmpsl
and
push
loopne
rol
adc
xchg
jecxz
test
dec
scas
out
into
int
fiaddl
pushf
test
sbb
add
loope
insl
test
fs
jecxz
ds
pop
push
and
cmpl
push
iret
into
mov
pop
mov
jbe
or
adc
outsl
xor
mov
jmp
inc
jno
push
repz
pop
mov
pop
push
inc
jg
loop
mov
push
xchg
push
adc
dec
popf
xchg
repz
loop
mov
jge
sbb
clts
mov
jecxz
and
rcrb
popf
mov
test
push
in
into
xchg
mov
pusha
bound
add
dec
sub
ss
sbb
aas
mov
jp
fadd
enter
dec
repnz
or
mov
repnz
cmp
xor
ss
pusha
fwait
sub
scas
mov
push
lock
jne
add
or
adc
fnsave
pop
or
mov
pop
xchg
mov
in
fnsave
pusha
sbb
nop
fldt
cmpsb
jmp
jp
inc
sbb
rolb
jbe
mov
push
out
lds
dec
icebp
and
cmp
icebp
cmp
cmc
in
adc
inc
push
bound
inc
dec
mov
fidivrl
adc
into
inc
rcrb
scas
xor
inc
rcrl
push
sub
and
sub
roll
inc
call
aaa
int3
arpl
and
shrl
andl
push
inc
int
inc
xor
int3
inc
cmp
inc
testb
clc
sub
fcom
dec
xchg
pop
lcall
xchg
add
call
hlt
out
xchg
inc
fstl
xor
pop
in
inc
std
sub
pusha
jns
arpl
pop
inc
outsb
xchg
stos
or
mul
and
and
push
adc
inc
in
sub
and
dec
arpl
in
xchg
ret
popf
jns
pop
mov
xchg
push
insl
push
imul
push
loopne
adc
leave
aaa
icebp
test
sbb
sub
xchg
add
pop
jecxz
jno
frstor
pusha
cltd
ja
mov
sbb
xor
pop
fmull
pop
push
loop
leave
cmp
adc
dec
mov
or
cmc
adc
mov
outsb
xor
imul
xor
adc
adc
pusha
pop
sub
fisttpl
lods
dec
sub
or
sub
stc
das
dec
adc
xlat
jbe
fsubrs
or
and
xchg
and
das
sbb
mov
dec
fsubr
mov
adc
adc
cs
and
xchg
adc
xchg
push
int3
outsb
xchg
shr
popf
repz
lahf
adc
test
inc
sub
lock
lcall
lea
mov
xchg
inc
pop
jns
popf
cmpsl
cmp
iret
mov
add
push
lahf
sbb
mov
mov
daa
repz
ja
scas
out
js
push
xchg
xchg
mov
and
dec
test
pop
dec
sbb
mov
xchg
icebp
push
aam
sarl
test
int
pushf
fdivrl
in
pop
std
ljmp
lods
cmpl
hlt
std
cmpsb
aam
cmp
xor
sub
jo
daa
cltd
rclb
js
scas
jp
pop
fisubrl
es
jp
dec
sub
lcall
push
loop
sarl
mov
lock
jecxz
mov
mov
pop
inc
push
push
cmp
movsb
loop
or
lods
loope
mov
or
jbe
out
cld
ds
add
or
push
cmpsb
jl
dec
packssdw
aas
loop
push
fisubrl
insl
xchg
mov
add
xor
inc
xor
rolb
sub
pop
leave
test
int
or
addr16
jp
fsts
sahf
fld
fmull
sti
pop
mov
daa
mov
rcll
aam
ds
bound
enter
push
mov
push
mov
std
and
je
ja
mov
stc
aas
jne
in
in
ret
loope
aam
jmp
cmp
sahf
imul
push
pop
xlat
loopne
cmp
pop
push
push
loop
mov
push
js
cmp
sti
rcr
dec
in
mov
call
push
push
xchg
adc
fwait
popf
popf
shlb
sub
jecxz
push
xchg
xchg
shll
outsl
mov
mov
sbb
std
insb
imul
jl
pop
mov
pop
leave
pop
ljmp
movsl
ljmp
scas
jb
and
push
mov
adc
into
cmp
xchg
cwtl
jle
jp
aad
and
inc
int
idivb
sub
jmp
loope
push
test
pushf
loop
into
cmp
mov
js
test
xchg
popf
inc
aaa
jp
shlb
gs
insl
and
mov
inc
hlt
outsb
loopne
addr16
sub
or
mov
inc
or
and
out
push
mov
xchg
pop
cltd
mov
or
jmp
pop
scas
test
adc
dec
pop
mov
rcr
shll
mov
cmc
je
pop
dec
push
add
mov
aaa
ficomps
lods
loopne
out
pop
and
mov
mov
xor
imul
and
iret
dec
addb
hlt
inc
inc
lods
mov
sub
stos
es
or
leave
loopne
pop
insb
jae
adc
fmul
les
fcmovnbe
scas
inc
repz
js
push
jae
mov
xchg
aam
pop
lods
mov
mov
sub
out
pop
mov
ja,pn
je
dec
stos
cmp
icebp
adc
or
sub
and
scas
jbe
sbb
gs
data16
adc
decl
mov
lea
aam
mov
in
cltd
and
inc
fwait
aad
xor
jge
enter
inc
sub
xchg
xchg
pop
dec
cld
out
adc
insl
jae
rolb
mov
sub
insb
sbb
fisubrs
stos
xlat
pop
pop
out
xchg
call
out
jns
mov
data16
cmpsb
fadds
stos
in
xor
push
imul
adc
cs
loope
and
mov
cmp
js
icebp
dec
fs
cwtl
ss
cmp
mov
mov
xchg
xor
hlt
insl
jmp
jl
call
cmc
rclb
xchg
cmp
cmp
push
adc
add
or
adc
add
jne
out
repz
mov
sub
inc
test
jb
jle
cmp
insl
push
push
jmp
pop
xchg
fxch
out
loopne
rcll
adc
jbe
stos
in
ds
lcall
fsubs
fldenv
fsubl
xor
add
and
cmp
scas
clc
push
test
sub
adc
stos
push
cmp
cld
cmp
mov
ficomps
orb
xor
popa
mov
lcall
insl
add
mov
or
out
xor
cmpsb
xchg
shlb
aam
insb
xchg
outsl
jecxz
lahf
outsl
add
rorb
inc
push
mov
mov
jp
sub
jmp
sub
hlt
jbe
pop
mov
sub
pop
shll
fwait
lret
sbb
push
adc
dec
mov
adc
sbb
lock
jbe
add
push
adcl
cmpsl
in
adcb
and
addl
sar
ljmp
jl
jae
cwtl
jmp
mov
je,pn
cmp
dec
xchg
fs
or
add
lods
ja
push
pop
cmc
pop
arpl
outsl
in
mov
std
lods
inc
push
xor
bound
dec
add
sbb
pop
dec
pop
loope
or
push
popf
xchg
add
jmp
xor
cmp
mov
lret
pop
mov
dec
fmul
movsb
fdivr
dec
add
dec
repz
pop
and
lret
or
cwtl
mov
push
jnp
sub
jg
pop
sti
imul
addr16
pop
mov
loope
add
cmp
ljmp
mov
jecxz
movsl
daa
int3
pop
sbb
in
and
inc
aas
aam
dec
and
imul
or
mov
loop
mov
mov
cmp
add
rclb
addr16
xchg
and
test
iret
xor
inc
scas
lret
xor
cli
push
pop
arpl
fdivr
jg
pop
insb
loope
mov
out
add
mov
jnp
dec
int
out
mov
push
popa
sub
aam
jns
testl
xchg
xchg
leave
pop
movsl
outsl
fs
sub
fisttps
dec
lds
or
mov
mov
fwait
xor
pop
ljmp
jbe
or
shrl
icebp
dec
or
adc
sahf
push
fs
mov
in
les
jge
scas
cmp
lds
add
pop
daa
pop
iret
sub
inc
sbb
cltd
push
dec
sbb
sbb
stos
inc
arpl
mov
aaa
dec
jg
sub
hlt
sbb
or
sub
xlat
xchg
jnp
and
mov
loopne
and
in
into
mov
std
add
lahf
fsts
lcall
es
cmp
mov
mov
ror
inc
scas
jmp
push
push
and
xchg
mov
sbb
push
std
xchg
icebp
mov
xor
lock
pop
and
js
pop
test
sbb
iret
fildl
xor
into
test
in
pop
aad
cmp
std
nop
int
enter
or
scas
xchg
int
xor
sbb
mov
adc
sldt
stc
movsl
inc
xchg
lock
cmp
push
gs
.byte
insl
test
adc
dec
push
ret
jnp
iret
idivb
inc
sbb
pusha
js
mov
dec
pop
push
enter
and
icebp
ret
shrb
fcomp
xor
in
fcmovnu
je
mov
lods
pop
scas
fcoml
ja
cmc
cmc
lods
xchg
push
dec
adc
xor
sbb
jmp
jb
ret
jnp
adc
mov
mov
dec
jge
outsl
jnp
out
hlt
loop
adc
ja
add
add
inc
or
mov
jnp
or
movsb
lea
mov
sbb
or
xor
mov
and
es
insl
jns
jnp
jecxz
in
cmp
push
sbb
add
jmp
sbb
xorl
mov
adc
xchg
push
out
jo
cltd
movl
loopne
cli
es
mov
jae
mov
cmp
dec
ss
sbb
testl
pop
or
icebp
orl
enter
mov
popa
cmpsl
pop
lret
int3
ss
xchg
push
sti
push
shll
push
fwait
icebp
adc
ds
dec
jmp
shlb
icebp
ret
adc
das
and
sbb
orb
cmp
in
in
jne,pt
cmp
in
adc
xor
jp
fstl
mov
mov
out
fdivrs
fs
cmp
push
je
dec
iret
rcrb
movsl
mov
imull
fisttps
lock
adc
jo
xchg
push
cs
push
bound
mov
addl
pop
ret
cmp
mov
mov
jnp
cltd
cmp
mov
cmpsl
jl
push
ss
insb
addb
int
fisttps
in
xchg
ds
sbb
lods
mov
cmpsl
add
or
js
fs
insl
adc
loopne
jnp
stos
lock
xor
fldcw
pushf
leave
xor
sbb
inc
inc
jecxz
pop
dec
xchg
scas
repz
cltd
mov
and
cmpsl
iret
out
dec
cld
or
fimull
movb
iret
cltd
orb
push
stos
stc
push
cmc
stos
mov
aam
dec
xor
mov
ljmp
loop
and
pushf
cmp
fdiv
mov
leave
xor
mov
adc
adc
mov
jnp
test
sarl
jl
dec
roll
sbb
xor
xchg
es
cwtl
jnp
lcall
out
and
add
test
and
test
in
mov
jno
xorb
adc
or
xor
add
in
enter
in
and
pop
ret
scas
stc
pop
loope
xor
mov
dec
mov
rol
jl
sbb
call
iret
dec
jl
bound
mov
shl
inc
jns
xor
jge
test
mov
outsl
jg
cmpsb
pop
dec
push
push
xchg
cs
mov
mov
xor
insb
mov
into
in
jbe
clc
dec
ds
mov
fisttpll
rcrb
cmpsb
fwait
xor
xor
out
sbb
imul
jnp
outsl
mov
std
pop
jmp
je
lret
inc
sbb
les
lret
xchg
in
and
mov
popl
xor
mov
mov
mov
jp
jecxz
gs
pop
jmp
sahf
fldenv
movsl
loopne
repnz
inc
js
clc
mov
cmp
xchg
dec
jne
mov
data16
mov
or
cmpsl
ror
mov
xchg
cmp
pop
pop
popa
iret
push
jae
iret
jnp
lds
cs
cmpsl
sub
push
lea
xchg
loop
adc
shlb
xchg
sbb
push
cmp
dec
jne
cmp
push
cmpsl
repnz
ret
adc
scas
leave
arpl
xorl
repz
std
xchg
sbb
lahf
adc
and
pushf
dec
sub
adc
das
mov
push
dec
mov
cmc
mov
js
aam
imul
movsbl
cmp
mov
sarl
out
mov
adc
jo
adc
xchg
cli
cld
cmp
mov
rep
mov
rcl
dec
leave
xchg
bound
imul
outsb
mov
jecxz
jl
out
int
jp
push
pop
hlt
or
aas
js
fiadds
flds
adc
jno
adc
fsubrs
pop
dec
or
aas
jae
pusha
adc
js
and
mov
mov
in
adc
or
xor
orl
mov
dec
std
fcoml
mov
outsl
dec
push
ret
jnp
adc
es
loopne
repz
or
mov
xchg
aas
sbb
mov
outsb
popf
cltd
and
lods
adc
cmpsb
inc
jns
clc
xlat
pusha
jne
fcmovne
push
mov
mov
movsl
cmp
sub
sarb
test
mov
popa
cmp
in
out
das
and
add
push
imul
xchg
push
mov
cmp
add
andl
fsts
imul
inc
xchg
ja
inc
ret
cltd
add
int
jo
xchg
jg
test
js
leave
xor
sbb
scas
jbe
push
les
cltd
adc
addr16
addr16
add
and
sbb
jo
test
orb
or
outsl
lods
int
cmp
repz
repz
dec
or
roll
push
mov
movsb
add
cmp
mov
loop
jp
lock
sbb
notb
and
sub
pop
adc
lret
pop
jnp
sti
addr16
xor
and
push
test
ss
dec
popf
cwtl
cmp
lods
sbb
ja
cmpl
adc
icebp
inc
adc
xor
in
call
cwtl
jge
test
adc
imul
cmp
push
sub
jnp
xchg
and
in
je
fdivl
cmp
mov
ss
jb
or
fists
jl
pushl
or
movsl
mov
sbb
in
mov
jae
jo
jne
int
xchg
sub
and
icebp
scas
xor
iret
and
xchg
fnstsw
inc
iret
add
dec
add
imul
fwait
fwait
cltd
cmp
sub
xchg
xorl
mov
dec
sbb
fsubrs
iret
lds
xchg
mov
jge
mov
push
mov
jge
mov
add
adc
orl
movsl
repnz
inc
test
clc
mov
cmp
xchg
lock
ja
aam
aam
imul
xor
xchg
lahf
add
push
mov
pop
jbe
cmp
in
push
mov
jae
jg
stc
pop
leave
lods
int3
imul
inc
sbb
push
aam
call
ret
test
outsl
jne
loope
ds
sbb
or
fdivs
jge
mov
cmp
sbb
jae
gs
sti
mov
xchg
in
lret
fnsave
jo
ret
sub
das
xchg
push
cs
lods
sbb
jg
mov
jno
jecxz
cmp
push
adc
test
xchg
lret
and
xor
push
mov
iret
inc
hlt
lds
mov
int3
push
or
push
nop
fstps
sbb
pop
clc
push
mov
fwait
in
dec
aam
push
fldenv
iret
mov
xor
push
xor
lret
leave
mov
out
imul
mov
js
sub
mov
cmp
push
adc
lock
ret
adc
sbbl
das
fstps
xchg
xchg
and
and
hlt
push
in
xchg
xor
data16
inc
loope
xchg
sti
push
sbb
mov
or
push
jge
xor
imul
xchg
mov
inc
adc
xchg
and
inc
inc
jmp
cli
inc
pop
lcall
loope
xor
push
shlb
or
idiv
add
cmp
dec
cmp
addr16
mov
mov
add
cmp
and
sbb
dec
into
mov
mov
loope
xchg
cltd
clc
sub
arpl
aas
jb
outsb
frstor
and
push
ud1
cmp
xchg
dec
xor
push
xor
adc
adc
scas
or
or
mov
pop
lods
mov
sahf
adc
cmp
sbb
or
dec
pop
loop
pop
mov
notl
lahf
adc
push
loope
scas
lret
scas
or
sbb
jbe
add
or
mov
and
popf
aas
sbbl
push
ret
lock
cmp
stos
ffreep
cmp
cmp
and
xchg
pop
fnstsw
sti
test
insl
cltd
cmp
jbe
cltd
data16
js
popa
cwtl
jnp
lret
dec
aam
mov
dec
mov
cwtl
jns
jb
fldcw
inc
and
div
movsb
jp
loope
mov
jle
xchg
sbb
ret
sarb
xor
fwait
aam
test
cmc
subl
dec
sahf
dec
jge
adc
ret
pop
pop
inc
inc
sbb
pop
arpl
xchg
and
cwtl
push
dec
jg
sarb
adc
in
popf
lret
cmc
or
js
das
xchg
push
push
cmp
in
arpl
test
pop
pop
repz
daa
shll
sbb
sub
push
orb
dec
mov
lock
aas
mov
jo
or
xchg
ret
fidivs
push
xor
fbld
push
testb
stos
mov
loop
iret
imul
or
jae
xchg
hlt
lret
adc
pop
push
std
test
xchg
scas
cmpsl
sub
or
cmp
xchg
out
mov
test
or
shlb
xchg
leave
xor
add
push
xor
pop
shl
xor
xchg
sub
inc
mov
push
cmpsl
vmovaps
push
or
movsb
xchg
jmp
add
mov
insl
cmpsl
jnp
mov
pop
loope
jecxz
adc
paddsb
mov
add
mov
or
sahf
fimuls
in
es
btc
test
pop
xor
stos
notl
mov
sbb
and
mov
aaa
andb
add
scas
out
insl
fldcw
addl
mov
ljmp
xchg
jge
cmp
jmp
push
mov
movsb
mov
lock
daa
pop
jge
orl
add
dec
mov
leave
data16
loope
mov
sahf
sub
addr16
push
aaa
jnp
cltd
test
sbb
pop
es
loopne
xchg
push
cmp
mov
jne
fists
jnp
dec
sub
xchg
xchg
add
adc
mov
cmp
mov
rcr
cmp
push
mov
dec
movl
fisttps
inc
repnz
ja
test
repz
in
enter
lds
lcall
or
je
movsl
lds
js
lods
inc
cmp
push
xor
in
adc
push
mov
jo
fldenv
xchg
int
mov
leave
pop
cmp
test
insl
test
insb
sub
push
incl
xor
inc
test
js
loopne
xchg
movsb
int3
ss
xor
mov
lods
adc
out
cmp
sahf
sub
or
adc
bound
push
fldcw
cmp
aad
sbb
std
cmpsl
mulb
rcrb
ret
cmp
add
dec
das
cmc
clc
lods
lahf
jnp
mov
adc
sbbl
mov
adc
mov
repz
inc
and
inc
inc
int
mov
daa
xchg
lahf
fadds
repnz
faddl
mov
mov
sbb
push
mov
ret
fnstsw
jnp
loop
sbb
add
lea
jge
inc
xchg
sarl
arpl
jnp
mov
out
jle
test
lret
loope
add
jecxz
ficoms
lds
mov
gs
icebp
fs
aaa
int3
jp
fwait
call
and
mov
lret
dec
shl
mov
push
cmpsl
mov
scas
in
cmp
jb
and
imul
cmpsl
or
cld
xor
lods
and
or
jg
mov
and
xor
jnp
cwtl
cli
call
mov
ljmp
loop
push
lods
inc
xor
fisttpl
mov
mov
iret
loope
lret
enter
aas
adc
nop
sub
fmul
imull
jmp
aaa
mov
in
push
lret
pusha
cld
jp
aas
xchg
fwait
mov
mov
shll
mov
push
sahf
cmp
cld
adc
mov
cmp
lods
jp
push
in
adc
dec
push
sbb
push
inc
pusha
orl
inc
in
test
inc
inc
stos
pop
jbe
out
loop
popa
shrl
jb
rorl
jle
adc
mov
leave
mov
push
inc
inc
xlat
adc
lret
xor
je
dec
inc
js
xchg
stc
sub
and
mov
adc
xchg
lahf
pop
inc
mov
aad
sbb
daa
push
cld
aaa
add
mov
mov
inc
idivl
sbb
fwait
xchg
push
aad
clc
ljmp
cvtps2pd
lds
mov
sbb
outsl
cmp
or
jle
mov
les
fwait
and
fnstcw
pop
in
pop
pop
xchg
test
xor
and
mov
cwtl
inc
xor
jo
xchg
jmp
xchg
add
cmp
jmp
or
outsl
pop
mov
adc
push
mov
cmp
jno
rolb
mov
out
out
push
enter
xor
loopne
jno
push
je
popf
sti
add
cmp
cmp
dec
inc
pop
push
aam
lcall
adc
jae
insl
lds
inc
jle
cmp
nop
jle
inc
pop
mov
fidivl
dec
dec
enter
insl
lock
popf
and
in
mov
cwtl
pop
sbb
leave
test
xchg
shlb
outsb
cs
mov
fwait
cli
and
testl
dec
mov
cmp
add
test
shl
cmpl
pushf
mov
stos
jae
out
xor
call
cli
mov
push
sbb
xchg
fwait
mov
add
inc
arpl
jp
add
mov
in
aam
xlat
sub
push
mov
add
mov
mov
xadd
sub
mov
jecxz
popf
jbe
sbb
add
leave
in
or
sbb
mov
mov
stos
mov
pop
jo
jb
andb
add
movsl
xor
push
cmp
in
inc
pop
push
sub
stc
sbb
dec
xchg
xor
cwtl
test
mov
sub
adc
loope
add
mov
bswap
sbb
pop
shlb
xor
ss
mov
popf
add
dec
nop
mov
xchg
jns
shrb
jmp
add
jae
out
mov
push
adc
dec
subl
cmp
adc
cmpsb
in
push
fs
sahf
xor
or
cmp
sahf
lods
js
aad
out
dec
loopne
mov
and
jo
hlt
jae
xlat
or
add
lret
repz
xchg
sub
dec
inc
mov
sbb
pop
jns
cld
mov
fs
pop
divb
pop
cmc
lret
popw
addl
mov
loop
and
xchg
xchg
mov
adc
js
lret
jnp
adc
test
cmp
fsubs
pop
das
daa
subb
iret
js
push
sub
push
lods
out
adc
mov
sub
out
sbb
rcl
enter
dec
pop
xchg
out
cmp
int3
and
mov
mov
sbb
inc
jns
insl
in
lcall
jl
dec
xor
ljmp
fucomp
scas
xchg
incb
add
mov
mov
lahf
xor
dec
and
int3
inc
subb
std
xor
mov
mov
js
fiadds
jp
push
push
test
add
ljmp
pusha
jb
ret
jb
fprem
jge
and
mov
jle
icebp
push
stc
jecxz
xor
faddl
inc
ss
adc
ss
pop
fistps
jl
sub
not
sub
jecxz
rcr
inc
in
loopne
lret
mov
lods
repz
popf
pop
jl
out
arpl
jg
test
imul
mov
inc
clc
jg
mov
pop
and
stos
imul
je
iret
es
jge
hlt
je
in
mov
dec
int
or
insl
arpl
jge
fcom
int
out
xor
cmp
mov
push
jge
repz
dec
rcll
dec
lea
add
pop
scas
lods
ret
adc
ret
mov
std
jne
adc
cltd
ret
bound
xor
negb
mov
aam
mov
cltd
or
in
cmp
cmp
cs
pop
out
lds
es
fnstcw
notl
push
pop
xlat
idiv
cltd
in
push
aas
insl
mov
jbe
add
arpl
jnp
cmp
push
xor
mov
xrelease
not
xor
or
inc
lds
pop
xchg
mov
mov
jmp
shlb
test
fwait
sarb
addr16
gs
fcmovne
test
mov
cmp
cwtl
sub
out
decl
and
inc
mov
jmp
inc
packsswb
push
xchg
repz
mov
fidivs
sub
mov
adc
xchg
adc
std
cwtl
and
clc
cld
inc
sbb
push
sbb
int3
test
xchg
movsb
and
and
sbb
or
jnp
pushf
idivb
das
sahf
cltd
outsb
stos
adc
cld
in
sarb
mov
mov
pusha
jg
sub
xor
push
test
in
mov
sti
arpl
mov
int3
loop
cmp
ds
jb
pop
sub
mov
sbb
jle
pop
dec
mov
xchg
clc
sahf
in
frstor
les
jo
loopne
call
popf
dec
lahf
sub
adc
daa
sbb
test
and
or
leave
mov
and
ljmp
repz
fadds
jmp
in
adc
push
inc
bound
add
lds
dec
push
testl
enter
icebp
movsb
xchg
jle
jb
pop
out
out
cmc
jge
mov
lret
gs
jo
adc
aas
dec
rcrb
lods
sarl
aad
and
jg
scas
movsb
xor
mov
mov
inc
adc
lods
mov
mov
imul
dec
int
push
xchg
xchg
mov
sbb
rcll
mov
int
sub
ret
cwtl
cmp
xchg
lods
inc
sti
clc
pop
loopne
sbb
daa
add
test
movsb
add
cmpsl
aas
sub
push
aam
jne
sub
jge
stos
xor
sub
lret
scas
bound
jmp
sbb
lds
pop
loope
ret
fmull
cmp
mov
mov
xchg
xor
sbb
fcmovne
cld
add
sbb
or
out
test
and
push
or
setns
ds
pop
mov
lea
rcrl
fadds
mov
aaa
cmp
mov
or
in
cmp
inc
xor
aad
test
xchg
js
xor
dec
pop
adc
sarl
mov
outsl
dec
sub
inc
shll
mov
cmp
dec
dec
aad
xor
sbb
aad
sub
cmp
xor
call
pop
sub
in
popa
iret
push
iret
mov
cmc
addr16
insb
lock
outsl
scas
bound
add
leave
and
movsl
push
jo
insl
pop
push
xchg
in
cmp
mov
out
fcmovne
mov
mov
enter
ret
xor
push
inc
pop
lea
je
jl
ret
fnstenv
adc
fldcw
xchg
pop
mov
add
xorl
mov
sar
insb
in
push
mov
adc
mov
adc
add
enter
xlat
imulb
sub
dec
lcall
and
test
popf
jo
jl
in
sahf
jp
jge
insb
xchg
adc
pop
and
fcos
or
jge
xlat
sub
mov
jns
std
push
push
daa
inc
mov
ja
stc
test
popf
add
shll
ficoms
stos
mov
scas
jno
push
jno
pushf
mov
ss
and
jl
jns
loop
pop
add
out
loop
rol
addb
push
xchg
jge
and
add
sti
in
leave
ret
lahf
cmp
add
sub
ss
fadds
mov
or
scas
lods
fcmove
fs
inc
push
imul
cmp
orb
mov
fisubl
add
mov
fisttpl
lret
mov
les
and
iret
jle
mov
pop
jp
js
cltd
movsb
xor
fiaddl
insl
jp
cwtl
dec
mov
lret
fcompl
fidivrl
pusha
pop
leave
sahf
push
mov
jns
pop
outsb
adc
aas
in
int
mov
mov
add
adc
subl
add
fwait
and
mov
or
xchg
jno
and
dec
test
mov
ss
lea
sub
aam
dec
sub
paddb
xchg
scas
pop
xchg
mov
sub
push
stos
scas
repnz
or
test
pop
jmp
inc
xor
mov
xchg
scas
or
adc
push
jecxz
xor
fdivrl
arpl
mov
cltd
mov
fucomp
fdivrl
mov
sub
scas
das
cmp
cmp
repz
negl
fmuls
stc
xchg
in
pop
dec
out
sbb
xlat
adc
add
pop
inc
fstl
dec
xlat
mov
pop
adc
push
into
in
movsl
cli
ret
cs
pop
mov
push
movsl
les
es
call
jmp
jge
fucom
and
in
xchg
xchg
or
test
push
popa
cmp
adc
or
sub
or
dec
aam
shrl
cmp
inc
or
icebp
shl
jae
sbb
dec
rcrb
xchg
jl
iret
cmpsb
aam
je
mov
adc
mov
rcll
pop
cltd
push
sub
xor
insb
fiaddl
add
sbb
call
sub
mov
dec
int3
aam
xchg
xor
sub
and
jb,pn
rol
xor
int3
dec
xchg
flds
adc
insb
push
into
push
loope
add
es
fiadds
lock
cld
into
aam
test
add
jmp
and
cli
lock
push
xchg
xchg
and
or
movsl
add
fcompl
cmp
incl
jns
in
xor
jbe
in
andl
jmp
dec
fldl
cli
add
mov
popf
pop
push
ljmp
inc
or
dec
sub
shrb
into
inc
dec
sub
mov
lahf
xor
inc
xor
xlat
or
mov
add
inc
jae
test
shll
jge
jg
fmulp
or
push
sub
lods
pop
cmp
adc
mov
lret
mov
jge
nop
and
push
out
and
inc
xchg
mov
sub
mov
jne
inc
scas
sbb
xor
sbb
cmp
adc
movsb
sub
mov
icebp
in
pop
dec
inc
sub
xchg
dec
adc
pop
sub
sbb
std
into
sub
adc
paddsw
rclb
mov
outsb
loopne
inc
scas
xor
jmp
add
mov
test
dec
pop
pop
push
mov
xchg
lret
push
aas
pushf
jge
shlb
ss
and
shlb
cmp
lret
xchg
ds
faddl
insl
test
out
mov
jp
pop
adc
adc
mov
push
out
test
das
jo
mov
push
test
imul
fdivrs
cli
mov
enter
aam
jne
xchg
fwait
nop
mov
fnstcw
push
outsb
jne
mov
fnstenv
xor
stc
fildll
mov
lcall
ja
inc
jg
mov
or
jle
xchg
js
xchg
ds
and
fsubrl
inc
out
inc
imul
add
xchg
subl
fsubr
push
lods
pop
leave
mov
push
cltd
into
mov
push
adcb
mov
rolb
std
ret
das
aas
xchg
imul
bound
jmp
pop
mov
cmp
cld
test
andl
and
xchg
push
sub
cmp
mov
test
movd
or
repz
loop
or
cltd
mov
push
xchg
and
xchg
mov
test
inc
test
mov
scas
in
fsubl
mov
jl
test
lds
shlb
repnz
add
decb
push
ljmp
lods
filds
add
xor
inc
dec
pop
out
lds
jl
jo
stos
leave
into
popf
push
mov
in
xchg
xor
pop
out
cmp
fisubrl
sub
mov
rolb
inc
cwtl
push
xchg
in
loope
cs
push
inc
xor
push
push
loope
ss
adc
or
cwtl
cmpsb
shll
xor
ja
rclb
mov
mov
cmp
es
mov
js
lea
jg
jmp
loop
test
and
mov
mov
xor
sbbl
shll
iret
sahf
stos
pop
popf
pop
or
xor
push
or
cmpb
and
lcall
into
xchg
mov
outsl
fwait
dec
lret
clc
xor
push
cli
inc
push
arpl
add
loope,pt
bound
xchg
pop
sbb
arpl
cmp
add
popf
mov
xchg
xlat
mov
jmp
and
pop
popf
addb
cmpsl
das
xchg
pop
cli
xlat
lds
fnstsw
jp
lods
inc
mov
xor
and
cmp
dec
loop
jo
enter
in
sub
test
orb
loope
cmp
sbb
in
adc
xchg
xor
mov
or
shll
notl
cmp
popa
mov
ret
mov
sub
sub
sub
stos
andl
jp
dec
lds
cmc
inc
mov
mov
aaa
add
jno
adc
jno
jg
mov
mov
mov
adc
leave
stos
aam
adc
shl
bound
aam
out
mov
mov
int
sub
pop
sub
unpcklps
jns
sbb
out
pop
sub
std
or
int
stos
pop
or
rorl
lcall
xchg
xchg
ss
hlt
cld
sbb
fwait
addl
out
out
push
aas
sub
push
sbb
add
sbb
dec
push
ficoms
jmp
aas
push
cltd
das
xor
push
mov
sub
xlat
adc
xorl
dec
and
xchg
push
cmc
jns
inc
cmp
stos
push
neg
sub
sub
mov
sub
and
repz
xchg
inc
pushf
ret
push
jo
or
adc
mov
mov
cli
out
add
sahf
lret
xor
stc
cmpb
or
xchg
gs
in
lret
and
scas
lret
sub
jb
mov
int3
xchg
fdivs
rcl
cmp
in
lock
insl
popa
pop
xchg
cmp
jl
fcoms
add
xor
xchg
imul
and
mov
jecxz
dec
mov
sbb
dec
inc
adc
inc
rcll
pushf
aas
mov
jmp
insl
xor
and
adc
loop
adc
insb
fsubrl
xchg
pushl
adc
aad
push
mov
adc
sub
push
adc
pop
mov
mov
add
adc
pushf
int3
add
loopne
enter
pop
cs
cmp
sbb
jnp
in
movsb
mov
add
flds
xor
jl
lea
and
dec
rcl
jle
push
daa
mov
repz
mov
imul
mov
fdivs
je
push
mov
xchg
iret
mov
flds
mov
filds
mov
inc
mov
adc
xor
imul
push
cmc
mov
cmpb
pusha
dec
out
in
inc
out
cwtl
xchg
jbe
adc
repz
jnp
push
push
adc
push
push
js
out
adc
fwait
inc
fisubrl
lcall
push
sub
mov
sbb
loop
lea
mov
sahf
mov
mov
addl
out
mov
mov
fisttpl
in
xorl
inc
jo
imul
pop
ficompl
nop
push
sub
ja
test
push
cmc
adc
mov
aam
pop
mov
enter
push
sub
push
add
jae
cmp
lret
mov
arpl
mov
arpl
push
push
fldl
loopne
mov
stos
mov
inc
inc
jns
pop
in
out
mov
push
scas
mov
sbb
mov
je
les
ss
xor
jb
adc
pusha
cs
test
mov
gs
inc
add
lret
jmp
pushf
inc
pusha
repz
clc
xchg
shrb
jp
lods
sub
push
repz
pop
cmp
insb
lahf
adc
mov
mov
mov
gs
inc
xchg
gs
jecxz
xchg
sbbl
test
cmp
inc
das
sbb
and
jmp
scas
test
or
cmpl
pop
mov
es
jp
mov
out
or
aas
test
inc
std
outsl
dec
addr16
icebp
jge
push
dec
in
je
cmpl
insl
mov
dec
int3
push
pop
roll
daa
mov
pop
icebp
push
ret
jp
lock
out
jo
mov
in
int3
jmp
mov
jl,pt
jmp
jbe
cmpsl
std
fldt
aam
mov
daa
lods
pusha
stos
das
sbb
lret
fisttpll
cli
outsl
das
outsb
pop
sbb
xchg
faddl
daa
adc
lds
insl
frstor
in
push
xor
xor
jbe
fs
js
stos
loopne
dec
add
ret
movsl
popa
sub
sbb
push
arpl
sub
pop
pop
movsb
pop
outsb
fisttpll
daa
inc
dec
sub
mov
inc
test
jl
mov
cmp
pop
in
repnz
or
cmpsb
dec
scas
daa
notl
or
jmp
cwtl
add
mov
mov
mov
cmp
iret
ljmp
adc
mov
adc
gs
sahf
jecxz
mov
fidivl
sbb
xor
push
ret
sbb
adc
mov
movsl
sar
in
stc
xchg
xor
shrl
push
ret
outsb
pop
xor
aad
sbb
test
mov
stc
les
ret
mov
scas
sub
push
sub
mov
mov
xchg
mov
ljmp
je
mov
add
loope
cmpsb
or
imul
aad
popf
xor
mov
pop
movl
sub
mov
leave
lret
loopne
sub
add
pop
add
jno
aad
xor
or
or
pop
inc
sub
test
rcrl
cmp
cmp
pop
mov
lea
fsubl
orps
movsl
jo
popa
cmp
ss
stos
mov
pop
rorb
fsubrl
dec
popf
xchg
mov
movl
sbb
mov
sarb
cmpsl
push
and
mov
hlt
push
idiv
fsubrl
int3
push
mov
pop
outsb
in
jb
insb
sub
xchg
jmp
push
addb
xchg
lahf
inc
movsl
rcll
and
mov
hlt
pop
adc
mov
lock
loopne
movsl
xlat
js
push
into
test
test
aaa
push
mov
mov
cld
cs
mov
or
ret
sbb
jne
into
mov
cmp
out
xchg
add
mov
xchg
pop
jecxz
std
pop
mov
stos
adc
or
test
and
cmp
mov
jno
int3
int3
jmp
push
jns
mov
call
adc
cmp
fdecstp
sbb
mov
iret
jne
inc
pop
sub
adc
es
xchg
cmp
cmp
popl
lcall
test
ret
push
mov
or
rcrb
inc
xchg
lods
pop
inc
adc
cmpb
or
mov
mov
shll
movsb
add
loop
std
sub
idivb
pop
cmp
cld
lret
mov
xor
sbb
test
inc
in
sub
jg
sub
in
jnp
push
sub
and
mov
out
mov
pushf
inc
xor
sbb
mov
inc
mov
cmp
push
xchg
and
mov
pop
dec
jmp
sub
ja
repz
dec
jg
test
sbbb
loopne
rolb
lods
inc
hlt
push
test
xchg
insb
mov
mov
shlb
dec
bnd
cmp
fildl
es
pop
mov
pop
inc
add
push
mov
xchg
cld
pop
aam
cmpsb
mov
fwait
mov
add
scas
inc
and
push
lret
pusha
jmp
pop
push
lcall
adc
out
inc
mov
dec
pop
cld
jmp
sub
sbb
push
and
inc
aas
movsl
imul
cmp
mov
std
jl
adc
sbb
xchg
cmp
lahf
outsb
mov
dec
sahf
ret
cwtl
jno
fmuls
xchg
lock
das
jno
cs
mov
mov
dec
fdivrp
mov
lcall
pop
cmpsl
loop
daa
cmp
push
lret
xchg
push
add
movzbl
inc
shll
push
sbbl
in
sbb
lcall
xor
xchg
cwtl
mov
xchg
lret
pop
out
in
xor
push
orb
repnz
xor
or
and
inc
push
xor
dec
xchg
sbb
add
pop
popa
or
ljmp
mov
jae
adcl
enter
rolb
pop
push
in
sub
hlt
orl
adc
lods
loop
xchg
push
sbb
jmp
mov
mov
push
push
shll
pop
cmp
cmp
lcall
mov
fimull
and
mov
leave
pop
and
fidivs
add
je
lcall
out
cmc
sub
out
jne
or
hlt
fpatan
popf
mov
pop
push
dec
pop
sub
push
hlt
mov
sbb
int3
and
adc
cmpsb
dec
out
imul
imul
mov
lock
pop
aad
mov
jl
jno
xor
nop
into
pop
fcompl
addr16
add
xchg
xchg
in
sub
test
mov
pop
pop
andl
xor
std
or
cli
xor
sbb
pusha
in
or
xchg
clc
xchg
and
or
jmp
push
fwait
jno
push
cs
push
je
movsl
hlt
push
fcomps
or
lods
jmp
mov
dec
mov
sahf
das
mov
movsb
jge
dec
subb
dec
mov
xor
or
pusha
and
jp
pop
inc
mov
lds
stos
xchg
cs
mov
je
ret
pop
sub
lahf
imul
mov
lret
cmovg
movsb
aam
mov
dec
jle
mov
cmpsb
popf
je
syscall
subl
mul
sub
insl
leave
repnz
jge
xchg
sub
addr16
loope
xchg
push
jo
sbb
mov
fnstsw
test
inc
and
loope
add
pop
xchg
jbe
popf
sbb
or
and
loope
mov
mov
xchg
mov
inc
aas
mov
push
sbb
lcall
adcl
sub
scas
sbb
dec
ljmp
dec
mov
cmp
pop
fsub
les
mov
dec
adcl
push
mov
and
bound
aaa
test
xchg
push
cmp
arpl
jae
jl
and
push
jl
sub
sub
cwtl
es
or
or
loope
xchg
jne
mov
add
sub
xor
and
dec
jle
test
popa
sub
xor
cld
fwait
inc
push
sub
dec
add
movsl
stos
jne
stos
pop
push
lret
push
push
add
movsb
xor
imul
sbb
cld
or
mov
je
out
pop
xchg
dec
int3
xchg
sub
std
cmp
push
fisubrs
gs
out
inc
dec
cwtl
xor
cmp
scas
lds
icebp
dec
sbb
or
lcall
shlb
ljmp
mov
lods
getsec
ds
test
xchg
daa
cmp
xchg
in
adc
pop
addr16
popa
fmuls
inc
cmpsb
shll
je
test
mov
dec
out
insl
out
rcr
inc
aaa
loopne
mov
ss
mov
out
adc
push
or
push
mov
ds
inc
mov
dec
add
cli
bound
js
mov
ss
shrl
cld
clc
iret
fwait
pop
in
mov
cld
stc
cmp
in
sti
call
mov
stos
aam
sbb
sub
jne
dec
jmp
ljmp
push
or
ljmp
loop
sbb
sub
fisubs
test
inc
push
fstpt
shll
mov
inc
dec
push
push
les
lret
gs
ror
cli
orl
and
xchg
cld
rolb
xchg
and
jl
push
stos
or
lds
fwait
addl
stc
or
lods
sub
push
ds
adc
pop
lea
cwtl
in
pop
fwait
and
mov
das
shl
repz
stos
cmp
xchg
ds
add
and
adc
ret
cltd
or
or
xchg
arpl
add
cltd
fadd
subb
arpl
loopne
cwtl
leave
xchg
cld
sbb
jbe
insl
mov
xchg
test
cmp
cmp
outsl
or
shl
movsl
dec
loop
push
scas
pop
test
cmp
push
sbb
enter
push
test
sub
cmpsl
leave
mov
dec
and
mov
xchg
int
shll
test
out
inc
inc
test
mov
fwait
lea
or
and
shl
outsb
into
sahf
mov
or
xchg
cli
sub
push
add
mov
insl
fwait
ss
mov
cmp
cli
jno
mov
jle
jae
lea
or
and
cmp
push
fld1
ficoml
mov
leave
frstor
mov
add
or
out
push
aad
insl
push
jmp
outsb
jae
test
adc
pusha
xorl
xchg
sub
hlt
sbb
adc
cmc
jae
lret
aad
out
fistpl
bound
and
stos
test
insb
mov
icebp
test
mov
lahf
inc
inc
movsl
shlb
repnz
mov
mov
pop
pop
sub
xchg
subl
clc
les
fistl
inc
push
ljmp
pop
xor
cmpsl
dec
push
in
dec
pop
jp
loop
pop
leave
push
adc
lods
std
cmp
subl
cmp
lret
xor
movsb
es
int
mov
pop
adcb
jno
mov
xchg
fsin
out
test
ss
mov
sub
and
pop
cld
ja
cwtl
mov
or
adc
lret
sub
mov
movsb
std
and
pop
xchg
push
js
sub
out
aam
add
cmc
or
and
ds
cli
push
andb
push
push
jns
sbb
cmc
mov
cmp
filds
dec
loopne
fidivl
call
ds
mov
or
jp
shll
bound
mov
inc
scas
mov
jmp
mov
xchg
stc
das
mov
mov
popa
mov
outsb
xchg
or
cmp
into
int3
xor
or
cmp
adcl
aad
incb
dec
ret
push
clc
jmp
rolb
andb
inc
repnz
pop
aaa
lret
sahf
mov
pop
aaa
ret
jb
mov
or
ja
bound
outsb
enter
push
cs
xchg
hlt
cmpsl
ficoms
movsl
fwait
es
pusha
rep
loope
pop
movsl
pop
xchg
call
pop
or
ret
cmp
cmc
lahf
mov
cmp
mov
sti
imul
mov
bound
mov
adc
jb
test
andl
out
sbb
xor
aas
ljmp
out
enter
stos
sahf
inc
xchg
sub
xor
addl
fdivs
mov
mov
push
sbb
dec
sarl
mov
add
cs
pop
lock
es
std
loopne
add
fcomps
mov
mov
outsl
jns
lds
std
clc
xor
cltd
out
jecxz
fsubrl
sbb
enter
cwtl
jge
and
fisubrs
mov
and
or
xchg
push
enter
clc
cmpb
jecxz
int3
mov
sub
pushf
mov
iret
in
sub
mov
mov
xchg
fcomps
repz
scas
push
out
es
sbb
popa
dec
sub
ds
and
aaa
int
jo
popa
xor
xor
sbbl
fcmovu
ja
lock
jg
pop
daa
popf
jl
adc
or
pop
mov
int
sub
nop
and
inc
out
push
mov
mov
pop
jae
btcl
shll
pop
pushf
sub
idiv
jns
jp
ret
outsb
adc
pop
ljmp
cmpsb
jne
lcall
lods
out
sub
in
repz
les
movsl
hlt
into
sub
add
idivl
loopne
pop
jp
stc
jecxz
pushf
repnz
add
mov
jmp
clc
adc
test
jg
mov
and
inc
stc
dec
rcrb
push
cmp
or
mov
sub
out
or
cmp
out
insb
lds
adc
lds
lock
clc
stos
fnstenv
andl
or
pop
jne
rcrb
pop
pop
les
cmc
adc
ret
adc
dec
or
mov
mov
dec
jg
mov
sub
stos
cwtl
xchg
mov
and
mov
and
es
add
mov
popf
bound
inc
pop
inc
call
insl
das
ret
adc
ret
imul
outsb
push
sub
ret
inc
jbe
mov
mov
shrl
ds
ret
inc
lahf
out
cmpsb
push
into
jo
mov
jmp
imul
mov
jnp
inc
lahf
out
int
jge
cmp
mov
cwtl
or
ret
jecxz
push
push
in
and
cmp
pop
cmpsl
xor
sbb
clc
leave
jnp
lret
scas
pushf
cmc
lock
adc
fwait
mov
idivl
jle
sub
scas
mov
push
cwtl
mov
jl
repz
rol
jae
pop
shl
inc
lcall
out
iret
ljmp
mov
adc
xlat
cmpsl
test
dec
mov
add
dec
push
push
leave
xchg
mov
add
xor
inc
xchg
lret
inc
je
jae
mov
cli
fsubrl
popf
int
mov
add
jae
and
mov
aaa
and
dec
movl
mov
in
xor
sub
bswap
push
xor
push
push
mov
push
push
addr16
inc
je
adc
imul
loope
jg
aad
mov
jl
outsl
ret
in
rol
pop
cmp
mov
dec
cmp
imul
xchg
adc
mov
pusha
dec
jmp
inc
imul
testl
mov
jb
xor
dec
sarb
movsb
cmc
dec
movsl
adc
pop
sub
jge
sbb
pop
mov
rcr
sbb
rorl
ffree
adcb
pop
sbb
mov
mov
repz
mov
rclb
xchg
dec
add
les
ds
jns
xchg
jb
les
dec
xchg
in
pop
ss
pop
pop
xchg
push
xchg
ds
test
push
mov
mov
mov
mov
imul
imul
nop
sub
popa
push
scas
xor
mov
sub
sahf
and
das
push
xchg
aad
shl
xchg
cmp
inc
ljmp
jo
xchg
mov
add
jg
cli
aaa
sub
mov
mov
jbe
inc
push
cmpsl
cmp
andb
mov
jno
cmp
int
iret
xchg
dec
mov
adc
push
fisttpll
shl
mov
pop
gs
jg
sbb
or
pop
xchg
xchg
ds
push
repnz
enter
clc
and
int
stos
lret
xor
ror
inc
lahf
mov
sbb
inc
lods
dec
shll
out
aaa
push
in
aas
ror
movsl
movsb
and
jge
push
cmc
adc
movsl
dec
test
push
mov
dec
mov
out
and
es
movb
stc
push
sub
fisubl
cwtl
and
int3
dec
icebp
loop
pop
dec
cmp
jmp
outsl
dec
and
push
xor
sub
outsl
loopne
icebp
ret
cmpl
movsb
add
lea
adc
jnp
into
dec
push
rcr
popa
cs
test
out
mov
mov
jbe
test
std
xor
jecxz
mov
xlat
mov
shr
xchg
in
jmp
insl
insb
ljmp
jb
cmp
cld
int3
jne
push
push
ss
pop
popa
data16
imul
rcrb
jno
fisttps
aam
jae
inc
loop
cmp
jmp
addr16
cmp
repz
add
jecxz
insb
mov
and
aad
subl
jl
mov
sub
cmp
xchg
cmpl
sti
adc
sub
inc
dec
xor
and
pop
mov
or
fwait
shlb
outsb
imul
enter
sub
inc
or
gs
xor
aad
add
pop
and
or
aad
push
or
mov
jl
popa
xchg
out
cmp
and
cmpsl
lds
cmp
dec
ljmp
adc
outsl
movb
in
scas
loope
cmp
push
pop
sarb
or
scas
movsl
mov
push
fs
mov
xor
leave
pop
xor
cld
lock
movb
mov
popa
call
fsubr
push
jmp
ja
fcmovnbe
add
adc
ljmp
mull
cmpsl
jle
shr
xchg
dec
rcrl
fisttpl
test
adc
pop
int
mov
mov
dec
fadds
loop
sub
loopne
add
es
js
and
rcll
fsubrs
repnz
in
and
rorl
dec
ds
mov
stos
clc
lret
rclb
pop
sub
imul
and
push
adc
dec
in
lea
loop
xchg
xchg
cmpsb
sbb
mov
mov
or
add
cltd
xor
dec
fbld
test
pop
lcall
fists
cmp
or
out
and
mov
pop
mov
cmp
test
stc
into
add
adc
lds
mov
pushf
mov
xchg
ja
ret
iret
cmp
in
mov
and
dec
xchg
add
mov
loop
sbb
jnp
jae
int
xor
inc
cld
xchg
xchg
xor
sahf
push
push
mov
pop
mov
xchg
fbstp
xchg
daa
mov
inc
push
sbb
sub
push
mov
addps
cmp
je
add
mov
fisttpl
sub
je
cwtl
and
inc
icebp
or
xchg
repz
push
enter
pop
xchg
xor
adc
push
rcr
cmp
xchg
add
xchg
push
out
stos
mov
test
adc
loope
pop
dec
js
jecxz
pop
dec
inc
rorb
addr16
popa
xor
dec
mov
jmp
jge
fldl
jb
jns
rcrl
pop
jge
rorb
stos
mov
or
adc
fsubrl
outsl
sub
mov
mov
or
and
and
or
pop
loopne
in
xchg
out
sbb
cmpsb
mov
clc
jns
dec
outsl
add
addr16
inc
test
rcl
lret
push
rclb
push
stos
lods
fadds
mov
pop
xchg
jmp
pusha
lods
add
stos
mov
mov
pop
xchg
pop
mov
dec
fs
push
inc
sbb
ljmp
sbb
stc
cmpsl
pop
mov
mov
xchg
stos
int
and
adc
inc
loope
lods
pop
shlb
mov
xchg
cmpsl
xor
add
ret
daa
mov
lea
icebp
leave
adc
and
jno
loop
aas
cmc
mov
sbb
out
mov
lods
fwait
pop
nop
test
cmp
xor
push
mov
xor
ret
pushf
aam
jbe
ss
jle
fwait
stc
aaa
popa
lds
pushf
iret
pusha
rcrb
xor
mov
dec
push
mov
mov
xchg
add
lods
ja
out
in
cmpsb
and
out
sbb
xchg
inc
testb
loope
fcmovnb
sarl
xchg
mov
adc
pusha
xorl
pop
cs
pop
loopne
subb
sub
mov
fs
dec
inc
xor
es
mov
sahf
addb
adc
subl
sbb
jmp
out
push
pop
xchg
leave
sbb
xor
inc
cmpsl
repz
jbe
and
pop
jae
out
jo
adc
mov
xchg
adc
clc
mov
out
push
shlb
push
and
inc
mov
inc
dec
mov
sbb
out
xchg
jle
or
dec
jbe
call
or
pop
fistpll
ljmp
mov
mov
xchg
cltd
lods
xchg
pop
add
adcl
data16
jmp
xor
test
shlb
pushf
and
insl
xchg
pop
les
and
loopne
sub
pop
lret
push
xor
out
or
pop
push
add
sbb
cmp
mov
test
inc
sbb
movsl
add
std
stos
fisubs
icebp
inc
insl
mov
xor
fnstcw
mov
push
addb
pop
imul
inc
xchg
sbb
xchg
dec
pop
int
in
jmp
loopne
jmp
mov
imul
mov
arpl
xor
push
stc
popa
lret
push
rol
pop
mov
dec
mov
std
shlb
cmp
loop
and
aaa
jg
movsb
and
mov
stos
int
pop
pop
adc
and
iret
pushl
fcoms
xchg
daa
scas
lret
outsb
fwait
cmp
dec
loop
cs
mov
sbb
lea
pusha
adc
dec
mov
lahf
sub
mov
or
out
sub
push
cld
xchg
xchg
lock
sub
mov
push
sbb
xor
test
jp
mov
jp
sub
loope
sbb
sbb
mov
ss
mov
mov
mov
xlat
cmp
or
jg
jno
mov
adc
pop
push
repz
add
ret
pop
es
mov
pop
jg
add
and
pop
mov
std
mov
adc
cmp
incb
push
rorb
cmp
and
xchg
aas
pushf
push
in
subb
stc
into
jl
daa
pop
ss
inc
and
and
mov
sub
fldcw
testl
push
xor
js
dec
dec
fwait
xchg
mov
mov
cmpb
sub
mov
ficomps
mov
or
out
xor
movsl
shll
in
pushf
fstpl
es
lods
in
scas
test
sbb
cmpsl
and
pop
xchg
loope
pop
mov
mov
dec
dec
icebp
es
pop
xor
mov
inc
mov
sub
in
lods
adc
addr16
inc
lods
ficoms
add
pop
dec
dec
or
sub
daa
out
xchg
or
sub
lock
mov
pop
aas
aam
das
std
out
ja
cltd
and
scas
xchg
gs
add
and
imul
aaa
sbb
push
popf
lcall
insl
hlt
cmp
xchg
js
mov
out
lds
daa
push
cmp
jo
mov
loopne
cmp
lock
mov
lods
add
xchg
iret
enter
mov
in
or
in
mov
divl
xor
push
in
pop
add
es
inc
cmc
push
add
fisubs
mov
mov
lds
add
push
loop
in
sub
push
or
and
popl
rorl
sub
push
sbb
rcrl
repnz
rcr
inc
xor
xlat
pop
inc
jbe
dec
stos
stos
sahf
mov
jp
mov
mov
lcall
into
dec
lret
adc
jmp
aad
lods
push
ret
test
xlat
pop
loop
pcmpgtd
xchg
enter
cld
cmp
rorl
fistps
int3
mov
rorb
aam
jmp
movsb
mov
pushf
icebp
stc
outsb
push
test
jne
ljmp
stos
sbb
cmp
repnz
enter
sar
nop
push
add
lret
push
and
or
jge
test
jae
fcmovnu
mov
pop
addr16
stos
or
sub
add
sarl
loopne
ss
push
scas
pusha
fadd
cmp
in
inc
sbbl
loope
rcr
push
dec
ret
outsl
sub
pop
jae
dec
repnz
cmpsb
int
out
mov
adc
rcl
cmp
sub
rcr
xor
mov
jns
pop
inc
nop
or
add
mov
cmpsb
icebp
adc
sbb
jmp
js
cmp
outsb
cli
dec
js
cmp
rcll
in
sub
jno
cmp
leave
pop
lret
cld
ja
xchg
sub
push
in
ds
std
sbbb
or
popa
js
inc
mov
cld
rclb
jecxz
into
inc
inc
test
shrb
or
adc
insl
fsubr
sbb
stos
and
xor
mov
cmp
fnsave
dec
jmp
sbb
sti
test
insl
arpl
in
shlb
aad
mov
mov
sbbb
mov
call
pop
sub
sbb
inc
fnstcw
inc
les
fisubl
xchg
xor
stc
and
add
in
movsl
jbe
std
fnstenv
xor
push
sub
inc
mov
jns
add
cmp
cmc
out
mov
push
mov
iret
scas
data16
or
negb
and
xor
or
rol
xchg
imul
jbe
fsts
mov
xchg
or
fwait
or
and
mov
mov
loop
mov
add
pop
pop
sbb
in
add
es
mov
jmp
mov
jg
repz
xlat
and
xor
inc
shrl
mov
rcrb
out
in
gs
sbb
adc
inc
mov
cwtl
mov
out
mov
mov
ret
and
xchg
or
aad
pusha
lock
xor
mulb
jae
jle
add
mov
into
mov
push
mov
mov
popf
cmp
push
js
and
popf
fstl
push
push
leave
mov
arpl
mov
pop
or
into
dec
jb
or
and
mov
jmp
cmpsb
outsl
inc
sbbl
mov
push
mov
daa
or
lods
sbb
inc
push
sahf
movb
repnz
iret
fsubrs
dec
sbb
pushl
pop
sub
iret
js
lds
test
sub
jne
xor
push
mov
repnz
ss
or
pop
or
add
jno
aad
cmp
sbb
xor
aam
sbb
loop,pn
sub
mov
std
rcrl
mov
cltd
decl
lods
nop
test
jae
dec
je
fildl
cmp
xchg
popa
xor
les
inc
sub
dec
push
or
dec
inc
or
sub
pop
lods
aas
push
adc
out
mov
cmp
icebp
lret
in
sbb
adcw
cwtl
mov
xchg
cmp
je
jecxz
stos
jnp
push
arpl
mov
loope
or
lcall
push
xchg
movsl
fimuls
enter
adc
pop
add
xor
jno
lret
rolb
mov
cwtl
xor
stos
inc
outsl
push
push
fsubrl
dec
bound
mov
pop
mov
or
andb
loop
es
jnp
mov
fstp
pop
adc
cmp
lods
xor
sbbl
out
rolb
and
daa
jb
insb
cmpsb
fbstp
push
mov
jle
and
pop
lret
sbb
jmp
push
and
push
ljmp
xchg
mov
inc
and
mov
inc
add
xlat
fildll
ss
or
mov
inc
in
sub
push
jg
mov
jecxz
jno
loopne
xchg
fdivl
in
out
pop
out
sarb
mov
jge
mov
inc
mov
fisttpll
push
mov
mov
sub
pop
loopne
sarl
xchg
in
daa
es
insb
jmp
jnp
std
mov
leave
fs
mov
out
rol
inc
cmp
push
adc
jb
or
pop
xchg
adc
mov
and
sbb
lods
dec
in
cli
dec
inc
fisubs
pop
cmp
push
std
and
fadd
hlt
inc
sahf
push
push
adc
jge
pusha
aad
fmull
jl
stos
jae
rorb
mov
xchg
lahf
xor
sbb
test
fistpl
mov
fmull
sub
outsl
call
arpl
sub
fwait
stos
inc
mov
out
ja
out
mov
movsb
sub
in
add
cmpsl
jnp
and
lds
xor
andb
in
test
adc
ljmp
notb
lret
orb
imul
stc
lock
push
cwtl
pop
push
scas
fninit
fs
cmp
jb
sub
mov
sub
icebp
sbb
mov
pop
es
dec
arpl
mov
in
dec
cmp
stos
insl
stos
xchg
pop
cmp
pusha
outsl
sbb
push
mov
sbbb
out
xchg
pop
imul
out
xor
popf
adc
out
or
fnstcw
into
loopne
add
push
cmc
test
cmp
jmp
adc
lahf
or
push
sbb
sbb
xchg
pop
jae
cmp
and
adc
ret
cs
stos
mov
and
mov
pop
cmp
fsubs
xor
mov
xor
and
xchg
push
push
mov
int3
fcompl
movl
mov
mov
repz
inc
in
jmp
sbb
jae
outsl
push
orl
daa
pop
nop
jg
mov
jle
pop
loopne
rcll
imul
or
call
sbb
shlb
mov
mov
mov
push
xor
mov
aaa
mov
loope
push
data16
xor
cmc
repnz
stc
cmc
jno
mov
mov
inc
faddl
push
pop
pop
adc
adc
mov
orl
add
int3
out
sub
and
aaa
ret
and
push
jl
adc
outsb
and
sbb
inc
add
add
mov
arpl
jmp
insl
mov
ds
dec
and
addr16
nop
push
pop
adc
push
sbb
movl
or
cli
or
flds
lahf
jb
stc
sarl
cmp
bound
push
mov
mov
mov
movsl
mov
fs
or
add
add
clc
inc
fwait
popa
add
push
lods
cmpsl
js
sub
mov
bound
ljmp
call
push
lcall
mov
ss
data16
cltd
cmp
add
pop
aam
pop
rorb
fsts
lret
mov
popa
push
xor
flds
ret
ror
addr16
push
jnp
jmp
mov
sbb
stos
int3
xchg
mov
add
loope
pusha
mov
lret
ja
stos
push
inc
pop
test
mov
cmp
pop
addr16
aaa
and
inc
out
and
sbbb
scas
inc
repz
or
add
xchg
mov
outsl
xchg
mov
mov
push
outsl
movw
jle
xor
fisubl
mov
test
movsl
outsb
jmp
ljmp
sub
inc
gs
idivb
les
ret
cmpsb
std
int
pushf
outsb
fcmovbe
scas
in
mov
shlb
dec
shl
pop
sub
jg
ljmp
sub
jmp
inc
push
test
cmc
subb
pop
lcall
outsl
inc
pop
clc
jbe
clc
lods
clc
pop
ret
sbb
popf
cmp
lds
mov
lcall
inc
xchg
pusha
mov
lcall
andb
loopne
xorb
cmp
out
aad
mov
sbb
cmp
jmp
cmp
jecxz
xchg
cmpsb
xor
lcall
das
sbb
mov
push
inc
push
adc
sbb
popa
movsb
cltd
push
mov
into
mov
pop
dec
jae
add
xchg
mov
inc
scas
jmp
mov
dec
lret
inc
imul
stos
call
sti
mov
cmp
mov
jge
std
rclb
icebp
xor
outsl
cmpsb
push
inc
xor
punpckhwd
inc
fstps
or
adc
out
lahf
mov
mov
cltd
push
push
push
rorb
dec
mov
clc
pop
outsl
mov
cmp
cld
add
push
xchg
inc
push
mov
pop
dec
inc
add
popa
loopne
inc
cmpsb
outsb
outsl
or
or
test
xchg
je
testl
jo
push
ret
jmp
insl
negb
pop
jp
out
adc
popf
sbb
andl
fs
mov
add
in
roll
stos
orb
pop
or
ja
fsubrs
std
adc
aad
repnz
pop
shl
lahf
stos
test
imul
outsl
adc
in
jg
insl
lahf
out
xorb
jp
leave
or
pop
push
push
popa
jne
test
repnz
sub
bnd
es
mov
cwtl
sahf
sbb
inc
bound
mov
xor
mov
inc
xor
inc
cld
sub
test
adc
sbb
push
dec
stos
popa
push
mov
xchg
mov
xchg
out
xchg
xor
push
sbb
repnz
jmp
sub
rcrl
std
jmp
adc
or
call
cld
or
fsubrs
enter
mov
fcomip
sub
cli
and
shlb
pop
push
leave
mov
jnp
fdivrs
adc
add
push
mov
outsl
cli
insb
sub
rcrl
push
xchg
sahf
push
fstpt
pop
push
es
test
lods
insl
xchg
jbe
fnsave
data16
ret
cmp
push
mov
les
jo
outsb
or
mov
in
xor
imul
mov
inc
jle
or
inc
pop
sbb
xchg
test
sar
cmp
out
sbb
jp
ror
divl
adcl
lret
and
pop
lds
repnz
lcall
mov
lret
mov
arpl
adc
adc
jl
int3
clc
mov
clts
mov
cmp
fisttps
sub
inc
imul
movsb
xchg
jmp
jp
or
lahf
pop
mov
ljmp
add
aam
bound
out
aam
add
xchg
mov
mov
and
mov
fsub
or
mov
cmp
xor
popf
incl
inc
stos
ret
imul
inc
mov
aas
jb
scas
addr16
and
lods
pop
cmpsl
xchg
cmp
dec
jne
dec
inc
jno
hlt
iret
les
rol
mov
push
out
cmp
xchg
adc
jnp
mov
fisubs
js
xchg
loope
in
push
inc
loope
and
adc
jbe
inc
loopne
mov
sarb
jb
sbb
or
addb
jb
sub
mov
iret
push
dec
jbe
pop
ja
adc
push
sahf
dec
dec
pop
pop
mov
push
insb
mov
push
rcr
mov
sarl
add
fs
ficoml
movb
insl
pop
dec
pop
jl
xchg
pop
xor
xor
mov
xchg
xchg
dec
inc
or
push
sbb
jg
and
adc
add
pop
mov
mov
push
cltd
dec
push
icebp
inc
jae
xchg
shr
pop
add
fcmovbe
repnz
cld
cmpsl
bound
push
inc
test
ljmp
loop
cmp
out
sub
mov
movsb
fistpll
jbe
out
or
out
fldlg2
xchg
cmpsl
jbe
push
mov
fcom
cmp
sbb
adc
sbb
fnsave
std
xchg
jp
xor
stos
jg
adc
inc
std
inc
mov
pusha
xlat
clc
je
test
aaa
mov
call
xor
xchg
xchg
mov
mov
daa
mov
filds
ficoml
das
stos
add
outsb
adc
in
and
test
sbb
mov
aad
imul
dec
add
sti
dec
mov
lcall
test
and
sub
lret
xchg
cmp
fwait
mov
xor
and
cli
fdivs
inc
and
or
xor
pop
lds
pop
sbb
adc
stos
call
fistl
lret
dec
aam
rorl
stc
cmpsb
je
rcl
imul
dec
lea
sbb
leave
push
jge
ret
sti
pop
pop
jmp
stos
dec
add
insl
or
or
sub
mov
xor
fists
add
ficoml
adc
mov
sbb
ss
lea
imul
pushf
or
cmpb
or
cmpsl
add
test
mov
fisubl
clc
lahf
gs
mov
mov
xor
add
or
add
pop
lods
sbb
lods
dec
std
js
inc
jl
adc
lret
adc
mov
stc
rorl
jnp
jle
enter
fwait
lods
xor
not
pushw
push
addr16
jmp
cmc
ja
popa
push
dec
out
enter
sub
test
xchg
cmp
xor
add
or
cmpsb
jl
lret
xor
xchg
pop
sbb
int
cltd
ror
push
rcrl
addr16
xor
cmpsl
jno
div
mov
lds
jg
jns
jmp
in
xchg
adc
and
sub
incl
jl
sub
xchg
lea
sbb
outsl
pushf
and
lods
repz
pop
fldt
inc
mov
movsl
fisubrl
xchg
lcall
fmull
jp
mov
add
rcr
dec
add
push
imul
push
test
je
xor
mov
fmull
xor
inc
mov
scas
pop
pop
push
xorl
aaa
icebp
aam
xchg
adc
cmp
mov
ret
fcmove
adc
sub
ret
int
pushf
jbe
xchg
or
sbb
ret
pop
inc
sub
pop
xchg
adcb
cmp
xor
push
jo
push
movsl
add
pop
mov
jp
and
sub
mov
pop
xchg
es
rclb
lcall
aaa
decb
stos
add
xchg
lahf
sub
shlb
mov
arpl
pop
mov
mov
xorl
xor
int3
add
mov
daa
or
cld
inc
flds
xorb
mov
cltd
add
add
or
or
mov
lds
stos
test
test
mov
imul
in
fmull
rcrl
addr16
adc
loopne
mov
xchg
ret
aaa
adc
mov
jl
mov
xor
fwait
or
stos
and
mov
insl
ljmp
mov
hlt
or
cmp
push
pop
mov
mov
sbb
shr
mov
rcll
sub
aam
mov
mov
repnz
sub
cmpsb
sbb
jno
or
push
hlt
lea
shrl
insl
pop
shlb
add
mov
jns
dec
js
ret
xor
lret
cli
fsubr
push
test
add
loope
inc
dec
sub
outsb
lahf
ret
sbb
or
cmpsb
popa
mov
clc
jbe
nop
popf
shlb
arpl
and
or
jbe
lods
push
push
loopne
push
fists
lret
pusha
aaa
fs
xchg
sbb
mov
push
mov
pop
imull
mov
mov
insl
jo
and
in
das
add
mov
push
daa
push
in
xchg
sub
mov
pop
sbb
mov
int
aaa
addr16
mov
mov
fistl
mov
jno
cmc
and
insl
mov
sbb
cs
sbb
fucom
movsb
jle
cltd
cmpsb
and
cmp
mov
push
sub
push
scas
cmc
adc
pusha
sbb
cmp
jge
cmp
inc
imul
jmp
jae
mov
or
cmp
lcall
cli
call
jle
xor
inc
cmp
popf
pop
loop
add
iret
icebp
sbb
inc
orb
and
mov
jo
dec
sbb
jo
cmp
pop
ljmp
push
popa
add
fidivl
cs
pop
fiaddl
mov
in
mov
adc
dec
divb
imul
les
jp
hlt
xchg
cmp
pop
test
xchg
mov
push
mov
ja
sbb
pop
loop
sub
cmpsl
shrl
es
imul
aam
jg
or
inc
mov
xlat
mov
dec
test
cmp
pop
sbb
push
in
data16
mov
dec
xchg
xchg
push
pcmpeqb
fcmovnu
push
inc
mov
or
sub
lock
mov
mov
dec
mov
inc
mov
popa
jae
dec
inc
icebp
xchg
or
cld
push
dec
in
push
or
add
mov
mov
cmp
cmpsb
rcr
jae
push
and
pop
sbb
cli
dec
cmp
outsl
jae
add
loope
cmp
xor
jmp
bswap
cmp
or
xchg
jge
push
or
adc
out
sar
jp
mov
add
dec
shl
sub
hlt
jmp
in
in
adc
and
loope
std
sub
sarl
outsl
int3
rorb
cwtl
repnz
or
add
mov
add
pop
in
sti
add
jno
hlt
repz
dec
push
add
shll
cmc
mov
adc
inc
adc
lods
int3
outsl
aaa
aam
or
ljmp
push
inc
sahf
or
jmp
lea
jge
mov
dec
scas
or
adc
roll
push
push
jmp
sbb
cwtl
inc
fiaddl
cmp
cmp
push
sbb
in
mov
adc
jg
mov
pushf
jnp
js
sbb
dec
adcb
adc
mov
jb,pn
push
jl
xchg
data16
aam
dec
repz
mov
dec
les
and
loop
jge
inc
push
in
out
mov
fwait
sub
loope
push
scas
aaa
daa
cmp
adcl
ja
es
stos
cwtl
enter
stos
js
test
jns
imul
sbb
mov
add
loope
xchg
pop
cmpl
bound
arpl
shlb
ljmp
lea
loopne
loop
movsl
aad
xchg
mov
push
jo
jbe
xor
mov
stc
inc
mov
pop
ret
idivb
mov
cwtl
sub
cs
into
dec
in
xor
scas
and
mov
stc
test
movsl
adc
ror
adc
fisttpl
and
pop
pushf
xchg
mov
cmp
popw
aas
sbb
push
test
add
gs
push
enter
imul
bound
dec
cmp
rcl
arpl
and
iret
loopne
loope
xor
ret
pusha
pop
cmpsl
out
scas
inc
cmpsl
cmp
and
adc
push
imul
mov
enter
or
sarl
adc
sahf
lock
jge
sbb
add
rcrl
stos
add
jp
fldl
jo
and
cmpsb
lahf
lret
rorb
jns
stc
dec
pop
insb
add
mov
sbb
das
push
xchg
es
fs
pop
sub
ds
adc
aam
cmp
insl
xor
loopne
mov
outsb
out
pop
pop
fldcw
mov
mov
inc
out
cmpsb
mov
xchg
mov
ficoml
pop
pop
cld
or
push
repnz
xchg
dec
jns
in
jae
int3
fimuls
rolb
xor
icebp
imul
nop
push
neg
cmp
and
cs
jbe
mov
iret
dec
arpl
lods
inc
and
xchg
mov
repnz
repz
cmp
mov
cld
sub
repnz
iret
test
scas
mov
cwtl
in
jmp
sahf
insl
mov
add
add
and
jnp
adc
arpl
push
and
push
or
mov
push
cmp
test
sbb
pop
and
mov
xchg
xlat
inc
adc
loopne
lret
adc
das
aas
repnz
test
or
scas
sbb
jae
cmp
cmc
mov
pop
pop
ss
adc
mov
pop
cmp
and
inc
andb
adc
cmp
xchg
mov
pop
pop
jle
insb
xchg
jmp
mov
add
jno
inc
addb
xchg
mov
push
bound
andl
push
push
push
jnp
ret
sub
fcom
cli
pushf
mov
mov
push
mov
sub
sarb
jo
cli
jae
insl
bound
mov
or
and
lock
out
jp
dec
add
add
or
cmp
iret
or
test
pop
jae
in
and
call
inc
out
adc
inc
imul
xor
test
scas
std
or
pop
cld
jae
pop
pop
xchg
leave
or
mov
test
rolb
sub
push
lret
xor
mov
or
aaa
push
flds
push
popa
out
sbb
mov
cmpsb
xor
movsl
add
mov
jle
cs
call
lret
loope
movsl
add
fadd
fs
mov
jns
jp
or
mov
pop
add
adc
xlat
jge
loopne
xchg
rorb
rcl
inc
daa
xor
inc
or
mov
jmp
call
repnz
outsl
xchg
cmpsl
ja
cmc
sub
jecxz
cmp
cltd
or
jnp
cs
cmpl
cltd
rcrl
lods
loop
out
stos
test
cmp
test
into
bound
outsl
or
cmpb
in
in
inc
and
into
sbb
jnp
jge
pop
xor
jo
shrl
pop
in
dec
movsbl
inc
js
mov
xchg
call
fs
jne
int3
pusha
lret
ja
insl
mov
leave
cmp
sbbb
inc
call
test
aaa
shl
and
mov
mov
js
push
aas
push
jno
into
sub
and
imul
cmp
mov
add
inc
inc
ret
ds
hlt
pushf
lret
nop
int3
inc
mov
out
xor
mov
mov
ds
xchg
in
add
mov
in
movl
jae
inc
sub
icebp
loop
jp
xchg
push
and
and
push
jns
jp
mov
dec
in
mov
dec
jg
and
cld
leave
lods
cmp
push
orb
filds
mov
popf
imul
loope
bound
mov
adc
dec
push
fucomip
fdivs
push
es
fdivl
mov
lods
loop
das
cld
xchg
xlat
inc
mov
jae
cmp
mov
call
sub
test
xor
ret
push
and
les
cmp
jno
jbe
inc
mov
adc
inc
lret
enter
inc
popa
sub
sub
push
into
pop
push
mov
push
xchg
nop
out
mov
cmp
pop
out
push
clc
int
ja
xor
push
push
mov
mov
dec
sub
hlt
mov
mov
push
repz
jno
or
lea
sub
or
xor
int
outsb
sbb
mov
pop
adcb
jle
mov
dec
dec
sub
mov
fwait
mov
add
or
nop
push
jl
loopne
dec
decl
cld
mov
test
and
or
add
shl
loope
jge
je
push
aad
rolb
nop
in
lods
inc
in
xchg
mov
dec
pop
in
enter
or
xor
lret
inc
stos
aaa
lods
sbb
icebp
push
insb
xor
inc
add
ret
pop
lea
scas
shlb
sub
imul
inc
rclb
cmp
fcomi
xor
jg
lea
mov
or
es
sbb
lds
push
jecxz
dec
xlat
ds
stc
int3
in
xlat
ficoms
or
jmp
inc
fwait
je
loop
inc
mov
jns
add
lahf
sub
xchg
rclb
popa
push
pop
in
ret
fisttpll
mov
ret
pushf
sti
jmp
jo
push
adc
ret
in
out
or
xor
dec
fistps
das
adc
popf
into
push
fcoms
test
nop
ficompl
rcrb
mov
leave
mov
adc
mov
mov
rcll
sub
ss
mov
and
hlt
dec
mov
add
mov
jns
ret
popf
inc
cld
data16
nop
lfs
mov
aam
outsl
pusha
or
jg
mov
lods
movsl
mov
inc
and
xchg
ds
popf
pop
xor
jnp
jb
pop
dec
adc
aad
mov
pop
in
inc
shlb
addr16
in
add
fwait
into
popa
jno
ret
xlat
mov
aaa
cli
aas
mov
icebp
cmpsb
lods
add
push
sub
ja
fldt
das
lds
push
pop
repz
notl
sub
mov
mov
leave
lods
inc
fistpll
outsb
jp
test
mov
sub
int
inc
fsub
mov
mov
mov
sahf
mov
dec
in
add
xchg
ljmp
mov
cmp
mov
in
call
sar
stc
mov
cltd
orb
push
cld
mov
imul
pop
dec
sahf
sbb
leave
dec
sbb
rol
je
mov
movsb
xchg
stos
mov
loope
and
pop
adc
xor
lret
inc
imul
sub
enter
ljmp
mov
mov
arpl
imul
add
mov
or
add
jne
fldt
movsb
int3
push
cmpsl
and
shrl
repz
movsb
test
sbb
sbb
dec
int
jl
jo
js
pop
shrb
data16
or
idivl
fistps
cmp
lods
cld
xchg
sar
enter
bound
jl
test
aas
jne
inc
pushf
xchg
push
sahf
cwtl
cmp
sbb
mov
sbb
daa
shr
or
and
jp
cwtl
pop
movsb
jns
aam
jo
jp
inc
daa
xlat
jbe
test
mov
mov
sbb
lock
pop
dec
lcall
ret
leave
nop
pusha
idivb
out
mov
push
test
ror
xchg
pop
mov
xor
xor
and
nop
lea
sub
push
icebp
xor
data16
dec
inc
lods
xchg
push
ss
lock
jo
xor
repnz
xlat
sbb
adc
add
testl
les
mov
sbb
or
pop
movsb
cli
outsb
jb
or
add
xor
push
xchg
inc
pop
inc
pop
ja
mov
xchg
xchg
repnz
rcrb
sub
jae
outsb
insl
jnp
push
or
push
insb
lods
mov
lret
js
insl
sbb
fcmovbe
data16
stos
scas
movsb
mov
pop
sbb
fcomps
mov
mov
sbb
clc
add
daa
mov
dec
inc
lods
jmp
gs
xchg
inc
push
and
push
xchg
hlt
rolb
scas
jnp
dec
dec
dec
add
add
xor
sbb
pop
inc
loop
sub
cwtl
aaa
and
mov
cmp
dec
scas
add
data16
rcrl
mov
sub
push
into
scas
mov
out
pop
sbb
outsb
mov
mov
cmp
rorl
scas
out
xlat
mov
jne
aam
int3
scas
xor
sti
icebp
mov
sub
adc
das
pop
dec
int
sti
or
test
sarl
add
dec
aad
fidivs
out
negb
lret
pop
mov
mov
jmp
mov
clc
fsubrs
lret
and
cmp
cmp
inc
test
ja
add
clc
pop
loop
fcoms
mov
jmp
push
outsl
iret
mov
mov
std
bound
inc
xor
pop
mov
imul
mov
idivb
fcomps
sub
inc
scas
mov
pop
jmp
fwait
mov
ret
in
jg
nop
add
adc
movb
arpl
pusha
fimull
sub
dec
jnp
inc
dec
out
xlat
cltd
mov
inc
and
loopne
je
mov
dec
pop
jg
das
xor
jne
iret
sti
or
sub
jns
cmp
test
mov
mov
movsb
mov
xchg
inc
mov
xchg
cmp
insb
push
inc
pop
repz
push
fcmovnb
pop
jg,pt
ret
fmulp
pop
cld
int
cmp
xor
xlat
mov
lret
sub
xchg
sahf
sbb
nop
xor
rorb
or
pop
add
mov
int3
imul
add
notb
inc
xchg
xor
cmpsb
dec
sbb
push
jne
mov
lcall
lods
lret
and
test
ret
mov
ja
lock
fwait
xor
cli
xor
fisubrl
mov
mov
push
push
or
push
ficoml
add
dec
sub
inc
insb
dec
push
icebp
mov
push
inc
les
xchg
rorl
dec
sbb
aas
xchg
fmul
add
inc
push
test
hlt
push
rcll
mov
test
bnd
stc
in
mov
jle
fcmove
push
cmp
fbld
or
cmp
push
pop
cwtl
mov
xor
push
push
das
and
xor
xor
inc
rep
outsl
adc
enter
pop
jae
roll
lods
adc
or
sub
enter
subl
cmp
int
sbb
shlb
push
ds
fmulp
das
mov
sbb
ror
fmull
cmp
inc
add
inc
jge
lcall
lea
fisubrs
adc
dec
push
mov
das
subb
sahf
rcl
inc
push
das
addl
mov
push
dec
inc
ret
sbb
jnp
jno
scas
cltd
bound
jge
sbb
imul
test
rcrl
cmc
in
aam
and
jne
cmp
xor
xchg
push
adc
out
loopne
stc
mulb
push
adc
xchg
lods
sub
out
jnp
hlt
xor
sar
push
push
sub
pop
pop
imul
push
mov
scas
push
add
mov
fiadds
mov
push
pop
add
add
push
in
fwait
aas
clc
xchg
orb
push
loopne
aam
subl
jne
in
popf
je
inc
xchg
dec
mov
mov
jae
pop
and
stc
sarl
repz
cmpsb
bound
idivl
push
fisubs
clc
hlt
mov
xor
insb
rol
add
mov
insb
in
ja
ret
add
sbb
mov
push
fmul
inc
pusha
pop
mov
nop
shl
pop
or
loope
outsb
mov
cwtl
popa
add
jbe
stos
xor
jg
xchg
inc
repz
call
or
inc
jmp
jecxz
dec
jne
fnsave
mov
int
add
pop
sub
push
cmc
in
hlt
aaa
addr16
push
xchg
jge
or
xlat
jmp
sbb
mov
add
call
mov
cmp
pop
sbb
jp
aas
jne
and
mov
add
xchg
push
std
test
sahf
repnz
pop
mov
mov
add
sbb
xor
push
mov
or
fcoms
lcall
loop
mov
mov
mov
imul
in
mov
fucomip
fmull
mov
jnp
sti
jb
push
out
add
insb
cwtl
mov
jbe
test
mov
bound
sbb
sbb
in
inc
xor
shrb
inc
push
leave
es
mov
movsl
insl
adc
and
add
jo
insl
cltd
xor
out
cmp
pmaddwd
jb
cmp
mov
lods
lsl
inc
or
jnp
cmp
lahf
gs
push
insb
xor
jns
lahf
rolb
jnp
xchg
add
dec
cs
dec
fnsave
mov
stos
mov
movsl
and
inc
cmc
call
out
out
add
scas
dec
or
xchg
sbb
iret
inc
adc
push
sub
loop
cli
mov
shll
mov
add
jg
adc
pop
icebp
outsb
daa
inc
in
daa
movsl
dec
mov
dec
into
xchg
js
loope
jmp
clc
in
int3
aam
and
dec
and
inc
and
ds
out
aaa
adc
add
sti
or
mov
xor
mov
insb
cmp
cltd
mov
jle
jmp
popa
push
aad
and
mov
sub
incb
push
push
into
fistl
mov
mull
inc
fsub
mov
jns
add
jecxz
jnp
lea
orb
mov
mov
bnd
gs
roll
dec
sbb
push
aam
pushl
push
shrl
insl
repnz
inc
rcrb
lret
shll
xor
sub
imul
adc
fs
pop
sub
jle
jmp
pop
bound
or
sbb
xchg
sti
iret
inc
out
pushf
pop
pop
and
aas
mov
mov
mov
mov
mov
pop
cmp
inc
roll
mov
mov
loope
mov
cmpl
addr16
mov
xor
stos
mov
ja
ja
idivb
cmp
cwtl
dec
pusha
jbe
adc
pop
ror
lds
ja
mov
mov
sbb
push
mov
call
mov
fstps
sti
hlt
jle
pushf
iret
insl
cmpsb
adc
sub
in
mov
addr16
repnz
adc
arpl
cmpsl
jp
mov
adc
int3
fs
dec
inc
test
insl
jns
out
push
xchg
mov
push
pop
mov
popa
dec
jns
xchg
push
icebp
cmp
filds
cwtl
push
inc
mov
in
notb
scas
xchg
out
imul
and
lahf
mov
in
xchg
xor
adc
xor
fwait
xchg
stos
add
add
je
ret
lret
enter
add
cmp
sbb
jecxz
cmp
aad
fcomps
and
jnp
fists
into
or
push
lret
and
aaa
lock
sbb
adc
clc
inc
les
and
adcb
mov
sub
leave
sti
adc
mov
push
out
jno
mov
adc
sbb
rclb
jno
jo
stos
lret
inc
lcall
push
sub
mov
push
fdivrl
xchg
fistpll
ja
ja
mov
imul
cmp
jmp
lock
cmp
in
jnp
mov
and
js
jb
mov
pop
mov
imul
es
in
fmul
inc
insb
cltd
mov
mov
dec
fs
jnp
js
movsl
xor
lods
adc
mov
adc
xchg
xchg
aad
jl
cmp
or
adcl
lds
and
or
out
jae
fisubs
bound
cmp
and
clc
cmpl
ret
cli
xor
push
dec
cmp
das
loopne
xor
fs
shll
jmp
ljmp
sahf
mov
adc
testl
ret
add
fstpl
int
shlb
lods
fdiv
xor
test
in
js
push
lahf
std
push
std
dec
dec
aam
dec
pop
sbb
movl
lcall
add
in
loope
aam
pop
or
or
lods
in
jbe
gs
adc
addb
xchg
repz
inc
push
sbb
cmpsb
mov
iret
js
cmp
push
sahf
imul
test
jnp
stc
dec
mov
rolb
push
mov
sub
inc
loopne
ss
aas
pop
mov
jle
inc
sub
negb
popl
inc
aad
movsb
sbb
jnp
rolb
rcll
mov
lcall
mov
jnp
mov
mov
lret
cmp
pop
mov
dec
int3
sub
fimuls
xchg
mov
cmpsl
std
add
jecxz
cltd
loop
mov
int3
je
or
aaa
push
fnstcw
mov
clc
in
insl
nop
xchg
mov
xor
or
outsl
xor
push
test
stos
repz
inc
mov
fistl
xor
mov
loope
fwait
sub
inc
jno
and
xchg
mov
hlt
mov
add
dec
add
and
jne
xor
jns
inc
inc
push
out
jle
inc
arpl
jecxz
push
lret
xor
adcl
into
dec
lcall
and
in
push
int3
xchg
test
jmp
inc
pop
mov
inc
dec
and
and
dec
mov
push
aad
push
inc
cs
push
jge
clc
shld
pop
dec
mov
sahf
incl
sti
shr
pop
add
inc
sub
sahf
push
push
hlt
sbb
out
sahf
ljmp
rcll
mov
xchg
jl
dec
and
cmp
sbb
fidivl
fdivs
push
ficompl
inc
scas
lret
xor
sub
ds
mov
imul
xor
loope
mov
arpl
out
sbb
sbb
roll
dec
cmpb
hlt
pop
lcall
mov
js
sbb
popf
pop
and
push
pop
cmp
jnp
imul
loop
mov
xor
xchg
mov
aaa
popa
adc
cmp
inc
mov
into
or
adc
jbe
xchg
fnsave
xor
pusha
sub
inc
test
sbb
jne
mov
stos
lods
in
add
mov
ror
repnz
and
das
int3
cwtl
idivb
sbb
mov
inc
in
ret
xchg
jmp
sarl
and
mov
popf
or
sbb
jbe
xor
xor
outsb
fsubs
shr
dec
xchg
rclb
jle
mov
gs
or
std
pop
sub
imul
cmp
adc
std
enter
and
pop
inc
cmp
pusha
sbb
mov
into
and
inc
add
nop
mov
and
pusha
das
push
jmp
int3
sarl
out
jo
in
jb
xchg
fwait
pop
cmp
mov
in
push
bnd
std
push
sub
dec
aad
and
cmpb
sbb
nop
add
jbe
out
ds
sub
out
sbb
es
mov
inc
cltd
dec
enter
pop
xchg
fsubs
cmp
mov
cmp
repz
lods
push
out
decl
pop
cmc
sub
inc
ret
js
xchg
dec
fmuls
inc
lock
xchg
in
cmpsl
or
cmp
inc
data16
jbe,pn
xchg
imul
lahf
push
jp
roll
sahf
dec
push
adc
mov
cmp
pop
wbinvd
jo
lret
jmp
cmp
jp
jecxz
cmpsl
adc
dec
je
jb
stc
hlt
xchg
in
xor
cld
jmp
out
jbe
pop
lods
mov
std
add
in
and
mov
lea
mov
sbb
sar
sbb
movsb
and
push
ja
mov
pop
mov
test
push
or
daa
jge
ret
mov
sti
lds
cli
in
sub
jnp
adc
add
xchg
scas
test
xchg
push
dec
mov
sub
ss
pop
cmp
scas
test
mov
mov
cmp
jmp
xchg
mov
pusha
mov
repnz
jg
jne
orl
out
sub
jno
jmp
add
psubd
adc
adc
pop
xchg
cli
clc
push
sti
lock
cmp
popf
fadd
pop
repz
push
subl
lea
add
cld
push
or
ja
mov
pop
mov
ljmp
rcrl
inc
loop
ljmp
pop
and
nop
push
rolb
jnp
setae
push
push
mov
imul
pop
sbb
sbb
lret
mov
push
hlt
mov
bound
ret
fbstp
imul
mov
sub
mov
inc
stos
pushf
dec
mov
insl
sub
in
int
lret
or
sub
bound
cmpsl
call
or
jnp
std
adc
cmc
arpl
and
jge
xor
in
ljmp
pop
ljmp
rcll
or
fldenv
stc
jns
aas
sti
cmp
add
stc
pop
aaa
or
jo
adc
adc
iret
repnz
mov
js,pt
int3
dec
inc
mov
and
mov
movsb
xor
or
push
add
lods
or
scas
movb
jno
push
add
push
pop
movsl
mov
sbb
mov
divl
icebp
jno
and
hlt
das
mov
cmc
scas
pop
mov
les
sarb
jb
fstpt
lock
push
sbb
lods
inc
insb
scas
dec
sbb
in
cmp
jno
lods
shrl
xchg
adc
mov
iret
jns
pop
fdivrp
cmp
cld
loop
sub
in
ficoms
jns
test
std
repz
xor
lods
xchg
repz
dec
mov
loope
out
out
mov
and
out
les
stos
dec
fldcw
sbb
pop
sub
icebp
shlb
lcall
rcrb
or
cmp
pop
cld
rcl
push
mov
lea
inc
call
xchg
int
mov
jg
push
insb
inc
aam
testb
shll
sbb
in
pop
cmpsl
imul
inc
loopew
in
mov
or
insb
bound
push
repz
mov
les
scas
out
push
adc
pop
push
pop
lret
add
xchg
xchg
rcrb
bound
pop
das
xchg
mov
movsl
in
or
xor
jbe
lock
mov
shll
hlt
roll
and
xchg
cwtl
lret
push
ss
xchg
notb
mov
adc
push
add
sbb
mov
push
adc
jne
adc
cmp
mov
mov
mov
loop
mov
repz
cmc
sbb
lret
sarb
adc
jmp
dec
adc
insl
mov
jg,pt
add
imul
outsb
inc
loope
mov
xor
fldenv
adc
push
enter
or
loopne
int3
test
rcrb
ds
faddp
ret
in
in
rcl
div
insb
mov
push
mov
cltd
mov
jg
in
std
jp,pt
mov
push
loopne
pop
aaa
js
mov
call
mov
cmpsl
inc
std
inc
and
mov
in
out
cmp
push
in
and
or
dec
incb
lahf
or
rcll
and
repnz
into
clc
rorb
add
and
sub
dec
adc
sbb
dec
xchg
lds
cmp
mov
in
jo
test
inc
or
pop
cwtl
pop
push
mov
fstp
int3
cmpsb
pushfw
idivl
iret
jne
sbb
push
pop
add
xor
into
or
rolb
dec
sbb
push
cli
cmpsb
aas
popf
out
inc
out
repnz
int
mov
les
cwtl
add
std
lcall
mov
pushf
cld
mov
adc
xchg
cwtl
fnstenv
xchg
pop
xchg
mov
mov
jns
pop
dec
fldcw
jg
enter
call
pusha
mov
push
scas
ljmp
dec
mov
sub
cmp
xor
sub
add
es
fldl
rclb
cli
push
dec
xchg
in
mov
pop
ljmp
lret
xor
mov
iret
mov
xorl
xor
pop
cmp
xchg
dec
outsb
lods
mov
sub
jo
xor
and
mov
sub
adc
and
outsl
fdivs
dec
jg
in
add
jl
jmp
int3
jl
shrb
xchg
sbb
imull
call
arpl
push
data16
or
fmull
andl
mov
inc
fwait
int
jl
test
das
cmc
insb
lods
enter
lret
inc
in
jne
sub
arpl
out
in
mov
std
and
or
xchg
shl
or
leave
cs
loop
jbe
jmp
jp
dec
push
cmc
add
addb
jae
or
and
fistpll
dec
cmpl
add
std
cmp
lods
lods
jns
inc
das
mov
add
mov
and
jb
jae
xchg
mov
iret
iret
lret
and
pop
add
pop
jl
movsb
int
cmpsl
and
jno
cli
xchg
sbb
mov
mov
arpl
mov
out
mov
inc
idivl
in
push
jne
mov
cmpsb
stos
int3
lret
add
sbb
xor
dec
xchg
add
movsb
jns
call
repz
pusha
pop
sbb
jle
lock
xchg
pop
cli
or
sub
lock
sbb
pop
test
push
loopne
cmp
fs
pop
aad
mov
lret
repnz
cmp
jle
fcmovb
sub
scas
aad
cmc
cmpsl
mov
pushf
and
lret
sarb
inc
xor
arpl
cwtl
imul
dec
xchg
sbb
and
out
arpl
lcall
adc
push
ret
jbe
dec
add
dec
repz
jg
negw
jb
insw
pop
js
mov
div
jmp
fadd
mov
fildl
add
inc
push
push
jo
in
or
pop
in
push
jl
into
outsb
mov
jg
daa
in
pop
popa
add
or
ds
jp
jle
or
mov
xor
jae
add
jg
cli
jle
jp
fidivl
inc
mov
lret
sti
lock
and
das
mov
sub
arpl
lcall
pop
and
cli
mov
es
jg
xor
or
bound
cwtl
dec
call
jb
fnstsw
dec
hlt
ljmp
cld
inc
aam
or
dec
mov
lds
dec
mov
and
add
jb
rcrb
imul
adc
and
inc
jbe
sub
or
in
xchg
or
pop
stos
pusha
fcmovne
pop
pop
xchg
cwtl
subb
dec
mov
pushf
mov
mov
popf
outsb
in
mov
mov
test
dec
sbbb
jg
ficoms
in
idivl
fistps
xbegin
push
test
repz
shr
scas
or
les
pop
fidivrs
popf
mov
sbb
mov
enter
outsb
push
insb
aam
xorb
int3
jns
loopne
popf
mov
jle
int3
sahf
popa
ret
push
imul
pop
loopne
pop
kmovb
mov
and
lea
pop
insb
sti
xchg
cmp
adc
loopne
add
and
mov
cwtl
or
roll
cmp
add
xor
add
cmp
pusha
xchg
jae
mov
rcpps
int
ret
cli
stos
pop
dec
sti
out
adc
pop
add
pop
jp
push
mov
or
test
test
dec
push
insb
out
cmp
mov
xchg
push
pop
shlb
xchg
pop
jbe
mov
push
pop
test
or
clc
jno
mov
sbb
imul
push
inc
pop
imul
add
sahf
jmp
outsb
sub
in
lods
outsb
int
scas
faddp
adc
inc
popa
jmp
dec
pusha
pusha
xchg
pop
in
mov
mov
out
shl
mov
sbbb
cmpsb
xor
mov
pop
dec
adcl
mov
popf
loopne
test
adc
arpl
mov
stos
repnz
movsb
lret
test
dec
call
or
add
outsl
cmp
rcrb
imul
mov
fdivrp
pop
add
adc
pop
push
dec
into
xor
ds
cmp
fidivrs
outsb
xchg
mov
mov
mov
sbb
lds
jne
loop
pop
adc
sbb
inc
sbb
shrl
xchg
movsb
mov
dec
or
cs
sarb
push
inc
or
sub
adc
pusha
aam
mov
jmp
jle
or
lret
mov
mov
psrlw
je
inc
lcall
xchg
sub
dec
pop
test
inc
ja
inc
cli
test
insb
add
pop
fnstenv
sbb
jge
push
test
jge
roll
mov
nop
push
push
fcoml
lock
cmp
lds
dec
sub
jle
mov
xlat
shlb
fcoml
fldl
imul
fwait
int
dec
hlt
mov
add
sbb
fucom
shr
cwtl
stos
xchg
movb
stos
sub
rcrb
and
pop
js
xor
mov
notl
pop
sarl
test
push
xchg
sbb
sarl
nop
sbb
out
fdecstp
and
loope
imul
dec
jnp
pusha
pop
mov
xlat
cmp
mov
jmp
outsb
mov
cmp
adc
lods
lods
out
mov
pop
mov
lds
cltd
daa
mov
sub
or
xor
loopne
mov
roll
cli
movsl
ds
pushf
and
cmc
lcall
cli
mov
cmpsl
xorb
adcb
mov
push
addb
xchg
fadds
mov
pop
jnp
or
pop
popf
fstpt
push
sub
js
and
mov
pop
fwait
roll
imul
inc
mov
sub
mov
or
stos
sbb
cmpb
dec
test
out
dec
int
adc
and
das
inc
mov
or
mov
jae
aas
or
add
and
xor
roll
lcall
sub
in
loopne
rcrl
std
adc
fwait
outsb
and
test
push
push
inc
push
popf
mov
scas
nop
mov
adc
aad
fstl
add
ret
pop
push
mov
pop
rcr
out
lret
mov
mov
inc
in
int
and
jae
jmp
mov
add
mov
pop
mov
or
test
and
push
xchg
push
call
movsb
xchg
adc
pop
mov
add
jbe
sub
call
xor
push
xchg
rorl
adc
stos
and
push
pop
xor
mov
xchg
bound
lret
push
jbe
cmp
incl
xchg
sub
test
add
add
iret
js
xor
je
jbe
pop
sarb
les
sahf
cltd
jle
xor
pop
add
ret
sar
pusha
pop
cltd
aam
cwtl
and
mov
int
ds
hlt
clc
mov
pop
add
add
mov
sbb
dec
mov
mov
inc
mov
lds
shr
mov
popa
add
jecxz
inc
stos
and
js
roll
mov
xchg
fists
jae
or
out
addr16
add
xchg
adc
dec
push
xor
rcll
movsl
movsl
inc
push
mov
dec
clc
cli
lock
cwtl
stos
cmpb
lea
mov
jp
int
mov
movsb
into
addl
push
add
pop
pop
mov
cmp
cmc
inc
outsb
add
pop
test
in
fidivl
xchg
stc
mov
jbe
cmp
mov
inc
pop
mov
testb
jecxz
nop
loopne
jae
faddl
aaa
jecxz
ret
lret
sbb
int
or
mov
subb
cmp
stos
push
cmp
mov
mov
mov
fisubrl
stc
dec
pop
xor
dec
sub
push
inc
xchg
insl
stos
sub
cmp
out
cmp
push
push
sbb
fisttpll
stos
jns
dec
inc
mov
insb
ret
idivl
cwtl
out
xor
notb
jp
je
ds
fwait
push
cmc
and
cmp
xor
outsl
add
mov
pop
popa
pusha
cli
leave
aad
xchg
mov
int
adc
or
lcall
aas
test
pop
cmpsb
enter
xchg
loopne
sarb
dec
push
push
push
dec
stc
imul
cs
jns
pop
sbb
jb
movsl
adcl
ficoms
int
aaa
lods
rcrb
jge
adc
mov
repnz
clc
in
mov
adc
or
sbb
mov
fnstcw
mov
push
in
js
lock
lea
sub
stos
ret
faddl
or
loop
inc
loope
lret
cltd
sarl
stos
shll
sbb
rorl
adc
mov
mov
mov
push
ja
ljmp
mov
mov
in
xchg
ljmp
cmp
subl
mov
cltd
pop
mov
push
inc
pop
lea
sub
dec
icebp
push
sub
jmp
xlat
sbb
adcb
enter
or
loope
push
icebp
iret
pop
xlat
cmp
loopne
test
pop
add
cmp
push
mov
inc
arpl
test
mov
or
into
clc
add
into
pop
inc
lcall
movsl
dec
cmpsb
inc
or
xchg
faddp
outsb
repz
push
pop
sub
fstl
cmp
out
ljmp
dec
cld
leave
add
xchg
sub
push
add
pop
pusha
test
lea
inc
icebp
sysret
mov
jne
cmpsb
or
xor
out
cs
inc
or
shrl
ss
xchg
in
sti
xchg
mov
push
inc
mov
dec
les
repnz
leave
sub
dec
ret
mov
mov
mov
pop
lret
dec
mov
add
mov
in
xor
in
jg
add
jl
add
mov
mov
enter
push
jbe
mov
xor
movsl
mov
js
sbb
push
ret
cmp
pop
dec
push
mov
push
jl
cwtl
xor
sub
jno
adc
popa
movsb
lret
push
pop
icebp
fcmovne
fucom
dec
xchg
addr16
dec
inc
test
jae
sarl
xor
pop
popf
inc
push
fcomi
mov
sbb
jno
sub
int3
pushf
inc
push
mov
mov
int3
popa
scas
mov
push
cmp
jmp
pop
mov
mov
xchg
inc
jns
lcall
push
push
mov
cmp
sub
clc
xor
and
cmpsb
aas
xchg
jae
cmp
mov
dec
lcall
jle
lcall
fistpll
test
loope
dec
push
push
mov
ljmp
add
pop
enter
inc
inc
ret
pusha
aad
lods
mov
mov
add
xor
mov
pop
lds
push
sbb
mov
je
lea
call
fwait
xchg
mov
sbb
jns
xchg
push
inc
cs
test
mov
inc
cmc
xor
inc
stos
pop
cmc
in
jne
stos
jns
add
popa
dec
pop
mov
jbe
inc
dec
lret
jae
dec
and
add
bound
aaa
xchg
dec
cli
or
or
and
cltd
imul
cmpsl
popf
pop
mov
lret
sarb
mov
push
jnp
movsb
or
cmc
pop
xor
add
cmp
jmp
imul
push
daa
push
mov
xchg
mov
xor
add
loop
subl
ss
xor
mov
mov
dec
fwait
add
sub
cmp
test
fdivr
fwait
xchg
mov
fistpll
dec
adc
or
dec
les
arpl
ds
sub
and
push
gs
leave
rorl
in
xchg
rcll
mov
faddp
push
mov
in
dec
dec
jae
jl
fsub
cs
or
stos
sbbb
pop
repnz
pop
aaa
in
pop
or
mov
sub
lds
into
scas
push
and
stos
sub
imul
popa
pop
adc
dec
push
xchg
imul
add
aam
insl
mov
lcall
adc
test
and
cltd
and
and
popa
and
popf
ss
dec
enter
lock
mov
pop
dec
mov
inc
aaa
les
aam
mov
pop
push
adc
sub
xor
leave
sarb
and
cmc
cmp
cmp
and
not
lcall
notl
lock
mov
insb
ret
push
sbb
mov
faddl
mov
out
pop
cld
in
sti
test
cmp
mov
scas
or
push
outsl
inc
rcr
mov
or
imul
inc
cli
aam
flds
pusha
adc
fisubrl
ss
mov
test
dec
lea
test
and
mov
aaa
aad
dec
jb
or
repz
mov
std
adc
mov
fucomi
xor
sub
mov
mov
jns
adc
sbb
pusha
jae
mov
mov
fnstenv
xor
mov
sarb
faddl
lcall
test
dec
test
in
int3
je
mov
jnp
aas
sbb
xor
test
test
inc
aas
les
jp
and
insb
mov
out
fisubl
out
aaa
mov
sbbb
pop
adc
movsl
sbb
add
leave
fldenv
fnsave
xchg
cmpsl
pop
in
mov
inc
cmpsl
iret
mov
outsl
ret
sbb
test
add
add
lahf
sbb
adc
xchg
push
ret
sbb
loopne
xchg
push
mov
mov
lock
jbe
add
popf
repnz
push
inc
lock
push
ficompl
pop
xchg
mov
mov
inc
divb
lods
pop
cmc
testl
sbb
je
fisubs
dec
ficompl
cld
pusha
aas
jg
xchg
pushf
adc
jl
push
scas
mov
pop
shl
cltd
scas
or
ss
inc
inc
pop
inc
dec
scas
test
adc
rol
sub
or
sub
sbb
mov
js
sub
mov
out
jne
add
movsb
arpl
xor
mov
xchg
push
jmp
xchg
ljmp
mov
test
mov
push
testb
xor
mov
pop
pop
shl
imul
js
fwait
bts
or
mov
mov
or
jmp
std
notl
sub
addr16
push
pushf
sbb
xchg
shll
xor
sbb
xor
or
mov
stos
xor
hlt
test
mov
in
push
mov
fsubrl
jg
cmp
mov
bound
ss
jge
test
sbb
add
jmp
imul
push
incb
fsubrs
jge
mov
adc
mov
stos
int3
inc
xor
push
and
mov
arpl
mov
mov
mov
negl
out
and
bound
mov
jno
loopne
rclb
pop
rcrb
or
pop
cmpl
jae
xchg
xor
xchg
sbb
lock
sbb
cmp
mov
cwtl
sbb
insb
fisubs
mov
rol
loope
dec
pop
stc
mov
inc
enter
dec
push
sbb
lahf
xchg
fimuls
cmc
arpl
or
mov
adc
and
data16
loopw
xchg
das
jo
jnp
mov
jae
inc
iret
sbb
mov
hlt
sub
push
hlt
cmp
jp
in
xor
sub
pop
sbb
out
adc
mov
popa
fildl
inc
inc
jle
roll
pop
sub
movsl
mov
add
mov
lret
fadds
inc
mov
lods
scas
in
in
mov
out
push
imul
movl
push
test
imul
and
adc
and
in
sub
jbe
push
or
test
dec
mov
sbb
cmc
jg
movsl
xor
pop
enter
clc
mov
xchg
lret
in
dec
cmp
loop
sti
push
stos
icebp
inc
jne
push
out
pop
outsl
fsubs
mov
mov
mov
lock
cmp
test
mov
jge
mov
xor
adc
jno
push
mov
cld
mov
insb
xchg
bswap
stos
mov
adc
fnstsw
adc
shl
mov
mov
repnz
ret
sub
sbb
pop
jno
sbb
int
es
jle
adc
inc
inc
push
cmp
imul
pushf
lea
push
xor
test
fbld
aam
cs
scas
adc
sbb
adc
sub
fcompl
pusha
aaa
and
add
push
insb
cmp
and
xorb
lds
push
out
pop
xchg
add
scas
fimull
mov
cmc
roll
dec
and
xor
arpl
jno
popa
mov
shrb
push
js
in
mov
repnz
push
xlat
test
in
fwait
jnp
sbbl
mov
dec
lock
pop
adcl
das
leave
ds
into
ret
bnd
out
shlb
repnz
xchg
test
mov
pop
into
mov
divb
enter
jo
test
mov
lfs
push
insb
mov
ja
in
adc
xor
dec
or
jbe
xchg
push
or
pop
sti
ret
or
adcl
jmp
lcall
sub
fistpl
sub
shrb
cmp
adc
mov
popa
cmp
sbb
xor
adc
notl
cld
ret
mov
adc
push
push
mov
inc
inc
cld
les
sti
in
lahf
add
push
popa
cs
pop
fildl
scas
push
loope
adc
sbb
cmpsl
sbb
mov
xor
xor
jp
fwait
out
cltd
pushf
lods
je
outsl
ret
inc
je
mov
or
rol
insl
les
add
fimull
paddd
cli
push
sbb
sub
xlat
mov
add
out
sub
sub
aas
inc
aas
cmp
fistpl
imul
push
and
aad
xor
shl
pop
and
mov
xor
fmul
ds
cmp
lods
or
dec
mov
mov
inc
xchg
sbb
adc
adc
pop
imul
pop
mov
pop
sub
or
pop
test
sub
and
int
faddl
into
cmc
inc
movsl
jns
sbb
hlt
mov
repz
sub
xor
fistpl
nop
jne
or
fists
js
fcomps
and
mov
adc
or
ret
lea
sub
mov
cmpsl
dec
adc
sbb
je
aam
stc
popaw
jb
rclb
sbb
jecxz
sub
in
mov
ret
xlat
popf
push
add
imul
sub
push
clc
mov
lods
jp
sti
xchg
sub
xchg
sahf
or
pop
adc
mov
sbb
and
sub
xchg
das
and
mov
fldenv
lahf
xchg
popf
dec
jns
jns
mov
aad
adc
dec
jno
xor
shrl
sub
add
inc
iret
inc
testb
and
test
dec
push
imul
fcmovnu
xor
pop
jbe
jne
in
jo
add
rcrl
mov
enter
push
loopne
pop
or
roll
daa
jno
divb
mov
int3
in
add
jo
outsl
sbb
fidivs
pop
or
sub
popa
insl
fmuls
dec
or
jl
js
xlat
lods
sbb
jmp
adc
mov
hlt
sub
inc
adc
mov
ljmp
pop
daa
int3
lock
and
out
cmp
ss
aaa
pop
or
add
fisubrs
les
cld
mov
fildll
xlat
push
and
xchg
lods
js
cmpsb
inc
cmp
push
add
mov
xor
mov
xor
xor
lcall
dec
mov
sub
aad
jg
adc
jo
lods
xor
push
in
pop
jecxz
ret
sub
sbb
outsl
call
ljmp
or
addr16
push
xchg
shl
inc
rcrl
ljmp
call
jle
mov
sti
imul
cmp
xchg
cmp
mov
inc
push
inc
mov
adc
jecxz
pop
repnz
mov
mov
mov
push
jp
mul
sahf
mov
mov
pop
adc
jl
mov
pop
pop
mov
pop
mov
enter
mov
inc
push
inc
std
aaa
jbe
jne
jp
mov
inc
leave
mov
mov
enter
repz
imul
cmp
into
sbb
stc
cmc
test
enter
data16
mov
jp
loopne
jae
mov
mov
push
loope
lret
nop
cmp
and
cmpxchg
fisttpl
test
and
adc
js
mov
nop
xlat
adc
scas
adc
pop
test
dec
pop
add
adc
test
jp
jecxz
pushf
or
adc
bound
adcb
shlb
jp
jl
in
lret
dec
pushf
out
lods
cmc
mov
scas
popf
ret
inc
xchg
add
jnp
outsb
and
aas
nop
xchg
xor
pop
mov
cs
mov
les
dec
add
popf
pop
mov
push
add
int3
popa
sub
add
pusha
mov
or
negb
xor
rolb
inc
dec
scas
xor
je
int
pop
movsl
adc
out
cs
popf
rcrl
pop
mov
jmp
mov
xor
ja
and
icebp
test
test
jns
jmp
add
push
into
pop
clc
dec
mov
push
fnstenv
ja
fcompl
sub
jnp
orl
test
shll
imul
jp
mov
sub
ds
repnz
inc
nop
add
andb
rolb
cmp
or
aaa
ret
sub
in
out
fnsave
xchg
xchg
jbe
rcr
sub
and
lods
jecxz
push
test
pop
imul
fucomp
pop
push
loope
addr16
scas
std
adc
add
mov
sti
pop
pop
jge
pop
mov
movsl
test
sub
sub
mov
sub
jnp
jns
ss
insl
inc
and
jg
std
or
or
push
mov
imul
inc
cmp
xchg
in
dec
lods
fdivrs
dec
mov
int3
lods
sub
int
imul
xor
stc
mov
out
test
sub
mov
testb
mov
mov
in
loope
inc
sub
or
fs
lret
scas
lret
sbbb
mov
cmc
ret
dec
outsl
pop
and
shll
xchg
sbb
fs
push
push
sti
and
outsb
scas
jmp
mov
cmp
sub
test
sub
lods
rorl
xlat
or
cmp
lds
fildll
ljmp
xchg
test
cli
and
push
cmpsl
inc
xchg
test
xor
adc
dec
push
addb
mov
push
in
ret
push
add
mov
pop
mov
jo
enter
or
mov
movntps
jno
dec
in
sub
xor
aaa
sar
jo
dec
enter
movsb
mov
cltd
bnd
xchg
sahf
test
icebp
in
sti
out
pop
lods
dec
sbb
adcl
inc
loope
mov
lods
add
inc
sahf
in
or
mov
divb
rcrb
sbb
cld
jns
xchg
xor
outsb
sub
adc
mov
push
jl
lds
test
sub
push
mov
inc
mov
inc
mov
push
dec
jbe
and
scas
add
pop
mov
inc
lret
push
push
rcr
setg
push
notb
ss
sub
and
or
hlt
cmp
cmp
pop
inc
aam
mov
in
fsub
inc
ss
test
mov
jae
or
mov
pop
aaa
dec
adc
and
xor
cmp
leave
add
negb
push
xlat
je
popa
iret
cltd
add
pop
sub
ret
push
add
imul
mov
jp
mov
add
inc
or
insb
sar
aad
adc
lea
adc
mov
xor
ret
mov
pop
stos
cmp
fs
fcomps
sbbb
out
test
adc
inc
add
jg
out
mov
mov
mov
sti
mov
sbb
xchg
jno
imul
shrb
xchg
les
mov
pop
add
or
test
sub
stos
jo
cltd
mov
insl
add
push
mov
out
mov
sub
in
es
lret
enter
xor
mov
xor
std
cmp
jle
jns
loopne
jp
push
push
bound
push
testb
sbb
sub
popf
int
shrb
imul
jbe
cld
std
ss
movsb
cmp
cmp
pop
jge
ret
cmp
mul
dec
xor
int3
pop
iret
scas
add
fistps
mov
mov
mov
mov
ds
in
rcll
jl
add
daa
int3
push
daa
xor
subb
sub
out
rorb
xchg
repz
lock
bound
mov
and
shlb
jmp
xchg
movsl
test
mov
jp
cmp
lret
xor
xor
stos
sub
fnsave
pop
pop
push
arpl
and
adc
gs
cmp
ja
mov
outsb
inc
pop
sub
inc
rorb
dec
sahf
adc
sub
cmpsl
push
cmpsl
xlat
dec
push
ljmp
sarl
inc
mov
sbb
pop
sub
in
sbb
lods
mov
and
jmp
sub
adc
pop
sahf
shll
enter
scas
sub
jle
rorl
or
shll
jp
push
movsb
inc
push
pop
out
clc
cwtl
mov
mov
xlat
xchg
stos
xchg
aas
jae
loop
fdivrs
jns
push
jmp
nop
inc
pop
jmp
enter
popa
test
inc
mov
call
jl
adc
pushf
aam
dec
popf
lret
cwtl
cli
fstpl
cmp
mov
mov
int
outsb
pop
loopne
pop
arpl
and
js
mov
cwtl
shlb
adc
test
xchg
cmpsb
push
xchg
repz
adc
jne
add
jp
lcall
inc
or
pop
jbe
dec
clc
es
lcall
loopne
and
jns
and
and
push
arpl
fdivs
cwtl
ja
bound
fidivrl
pop
and
std
scas
in
jmp
and
xchg
lcall
iret
and
pop
es
scas
aaa
ja
mov
lods
cmp
leave
sbb
push
out
inc
jle
xor
xchg
and
into
dec
inc
mov
insb
fstpl
jne
jb
sub
pop
mov
ljmp
mulb
push
jno
lods
or
mov
ljmp
mov
jp
xchg
xchg
repz
cmc
std
imul
lcall
or
pop
dec
pop
fistps
inc
mov
test
cmp
push
lret
adc
shll
mov
loop
cmpsl
aas
inc
xor
inc
mov
daa
lret
fstps
jo
pop
cltd
frstor
mov
mov
adc
repnz
cmp
nop
es
test
mov
mov
pop
dec
test
dec
icebp
sbb
push
inc
aad
out
int3
inc
xlat
jne
dec
pop
out
adc
fidivs
scas
daa
jae
rol
mov
sbb
add
mov
test
imull
lea
shlb
mov
das
invd
shrb
outsb
pop
and
test
into
or
dec
fprem
cmp
and
outsb
pushl
ret
pushf
and
aaa
xchg
push
jns
pusha
jmp
repnz
lea
jge
cmp
inc
inc
and
xchg
push
and
imul
mov
fstp
mov
mov
mov
dec
cmp
xor
jge
ret
inc
into
loopne
push
pop
inc
idivb
adc
adc
jecxz
fiadds
or
cmp
adc
into
push
test
cwtl
mov
xchg
mov
push
xchg
outsl
push
dec
push
mov
lods
add
into
jne
out
jo
jle
xor
xor
rcl
pop
jno
cltd
mov
bound
push
jp
mov
mov
pop
arpl
push
xor
js
push
add
aam
cltd
rorb
ja
add
jbe
pusha
dec
jmp
sbb
sti
mov
mov
out
mov
stos
fwait
inc
cli
adc
sbb
push
imul
push
dec
dec
jle
sbb
mov
or
shrl
adc
stos
push
jno
clc
xor
cmp
inc
daa
arpl
xchg
out
gs
loope
push
pop
dec
insb
aaa
cmpsb
push
std
mov
into
or
imul
loop
xchg
movsb
popf
dec
pop
jo
or
inc
inc
mov
shl
mov
out
xor
xchg
ret
push
cltd
fst
dec
cmpsb
inc
mov
cmp
push
movsl
lcall
pop
std
scas
movsl
pop
testl
adc
xchg
dec
aad
add
std
xor
pop
leave
and
lea
xchg
mov
and
inc
jmp
push
mov
fsubrs
roll
push
and
stos
stos
loopne
sub
popf
test
decb
sub
cmp
dec
add
popf
sub
add
push
repz
dec
mov
div
push
in
mov
repz
pop
es
xchg
iret
mov
lcall
mov
pop
cltd
push
iret
icebp
stos
jecxz
lcall
int
sbb
sti
or
adc
lock
into
pushf
jecxz
jnp
cwtl
inc
mov
movsl
bound
mov
and
je
dec
xor
sbb
testl
jecxz
inc
xor
pop
mov
test
add
xor
icebp
lahf
mov
or
jecxz
pushf
ret
jbe
jne
or
dec
data16
inc
jmp
les
pop
mov
cld
add
dec
pop
sub
pop
inc
xchg
clc
xchg
rep
call
adc
in
add
jle
lret
out
sub
dec
cmp
adc
ror
mov
outsb
cmp
dec
aad
aaa
ret
movb
mov
cld
and
mov
in
jle
outsl
rorl
aas
pop
lcall
dec
insl
mov
pop
mov
add
ror
pop
stc
mov
pop
rcr
pop
cmp
pop
daa
add
cmp
lea
nop
xlat
mov
mov
or
scas
xchg
inc
dec
cmp
lahf
jge
popa
push
shr
add
or
enter
incl
sbb
lret
pop
outsb
mov
pop
push
data16
and
sub
sub
mov
adc
pop
pop
daa
iret
fdivrl
xchg
les
add
es
ds
and
or
lds
cwtl
mov
jbe
pop
movhps
jnp
jge
or
lret
inc
push
mov
dec
movnti
inc
sbb
xor
sahf
mov
mov
jmp
add
inc
xlat
es
dec
mov
ljmp
xchg
fwait
pop
push
inc
nop
xchg
push
add
inc
cmp
push
mov
scas
clc
pop
cs
lret
or
andb
dec
fcomi
cli
outsb
les
into
xchg
mov
fstpl
pop
psrlq
aam
lds
test
mov
aaa
cld
js
insb
or
insb
dec
and
jns
mov
aaa
fs
and
loope
movsb
sbbl
fsubrl
dec
and
pusha
push
mov
inc
mov
fnstenv
insl
cwtl
xor
adc
jo
leave
lods
fsubs
add
das
cmpsl
sub
sbb
inc
push
push
pop
popf
hlt
ljmp
cmp
mov
sahf
ja
inc
add
push
leave
sub
dec
pop
dec
sub
and
add
lock
add
xor
sbb
pop
enter
lea
arpl
sbb
enter
out
or
mov
call
mov
pop
dec
mov
lods
jae
fwait
shl
and
and
mov
and
divl
mov
jmp
push
lds
movsb
cld
mov
jne
subb
jg
lcall
popa
ja
cld
or
add
add
shrb
xchg
insl
fs
sbb
nop
inc
mov
push
movsb
rolb
fdivs
dec
test
mov
shrb
or
stos
test
sbb
push
cwtl
aad
mov
sub
lock
cld
jp
dec
add
aas
out
inc
fcoms
je
lods
pop
xchg
scas
xchg
xchg
cmpsl
push
jno
adc
mov
addb
inc
cmp
or
mov
hlt
and
mov
fnstenv
adc
mov
xor
lea
cmpsb
pop
stos
fidivl
cmc
push
xchg
pushf
mov
clc
jg
mov
nop
push
sub
icebp
jno
mov
mov
leave
pop
fisttps
or
sbb
stos
sbb
jmp
xlat
jp
xor
or
out
and
andl
push
cmp
mov
in
clc
jecxz
cs
fdivs
xor
sbb
lods
xor
test
fidivrs
jmp
hlt
mov
arpl
inc
jg
jge
xor
dec
sub
shll
mov
out
add
fisubs
xorb
jmp
adc
pushf
push
sub
add
cmc
cmp
iret
mov
mov
lea
jb
push
mov
shrl
mov
movsl
scas
jbe
pusha
jg
js
ja
xor
outsb
mov
mov
sbb
fsub
mov
jmp
push
xor
xor
icebp
lock
imul
lock
es
push
shll
stc
sbbb
sbb
lahf
mov
jne
insb
hlt
sub
dec
xor
xor
dec
or
xchg
pop
pop
aaa
mov
jecxz
sbb
fldenv
sbb
mov
mov
xchg
aad
inc
sbb
wrmsr
or
xchg
sbb
lret
and
or
push
xchg
testl
ja
pop
fiadds
insb
inc
mov
xor
cmp
jg
mov
push
push
test
test
sub
pop
inc
cmpb
in
dec
sub
xor
xchg
ficompl
cmp
mov
xchg
dec
bound
xchg
nop
mov
sar
movsl
movsb
xchg
push
push
jg
repnz
into
int3
sub
xchg
fnstsw
and
test
roll
push
cmp
sarl
dec
out
repz
sbb
lahf
xor
mov
loopne
sub
push
test
mov
dec
push
sbbb
cld
popf
lods
inc
fs
push
xor
int3
lahf
xchg
into
push
mov
cs
jle
inc
cmp
addr16
popa
sahf
add
inc
mov
jecxz
mov
repz
inc
lcall
pop
movsl
push
leave
cwtl
int3
dec
lods
xor
or
inc
pop
dec
jo
mov
gs
sbb
test
stc
daa
aaa
ficompl
or
insb
test
mov
fsubrs
pop
in
inc
push
jp
daa
jnp
xchg
inc
testb
mov
les
aas
cmpsl
aad
or
lret
push
loope
add
fstpl
popf
pop
sub
scas
mov
enter
mov
inc
lods
fcmovnb
inc
sbb
cmp
adc
popa
rcrb
cmp
lods
loopne
mov
adc
sub
dec
dec
movsl
sbb
sbb
rcll
push
sub
push
xchg
ja
in
popa
enter
aas
cltd
xchg
lods
dec
pop
andb
jecxz
ja
sub
xchg
xor
cmp
icebp
insl
call
loop
push
mov
icebp
ds
mov
cwtl
adcl
xor
test
es
sbb
adc
setle
xchg
fsubrs
jle
out
into
mov
and
sub
or
cmpb
push
in
pop
sarb
inc
xchg
push
test
sti
aas
cmpsb
mov
jnp
je
aad
push
dec
aaa
push
mov
adc
or
mov
lret
mov
pop
cmp
adc
jne
das
adc
gs
xchg
inc
fildl
mov
ds
sub
dec
and
js
push
in
lds
push
rcl
out
adc
jp
dec
jmp
scas
std
out
mov
add
xchg
dec
hlt
lds
jne
shl
xor
xchg
shlb
push
movsb
fisubl
jmp
dec
ds
adc
ss
mov
mov
ret
ja
cmp
int
mov
jp
push
out
xchg
shl
pushf
pop
insb
outsb
loope
xor
ret
xchg
test
mov
mov
push
xchg
cmpsl
in
inc
lods
xor
stos
push
js
icebp
xor
push
sahf
fsub
lcall
mov
test
push
fisubrl
icebp
sbb
loope
lahf
hlt
dec
std
lods
dec
mov
cmp
jne
inc
jge
lahf
repnz
add
jnp
mov
dec
lret
int
cmpsb
mov
shll
faddl
push
inc
lds
ret
call
jp
fimull
cltd
push
mov
lods
scas
bnd
jmp
mov
mov
and
mov
xor
divl
mov
jle
jb
mov
cmp
and
pop
xor
addr16
jo
cmc
mov
xchg
lods
or
fmuls
gs
jmp
je
cmp
icebp
in
xorb
iret
push
xlat
decl
xchg
lcall
adc
repz
adc
lahf
test
jl
lods
push
fstpt
pushf
mov
dec
cmp
rcll
inc
mov
push
xor
mov
pop
xchg
cld
xor
mov
and
pop
pop
and
pop
cmpsl
jl
dec
lret
pop
mov
pop
or
int
js
nop
cmp
fildll
jnp
pop
cld
inc
sbb
js
pusha
cli
mov
aam
ljmp
mov
stos
in
test
dec
dec
cmp
andl
adc
in
inc
fwait
test
sti
xor
sub
scas
add
push
ret
repz
test
sbb
mov
cmp
pop
dec
or
ret
orb
or
sub
ret
cmp
adc
gs
sti
or
aaa
mov
arpl
test
pop
add
aaa
fwait
sti
dec
cmpl
sahf
mov
xchg
gs
ds
outsl
pop
push
mov
out
sahf
sub
dec
sti
xchg
jecxz
or
mov
add
cmp
fstl
loopne
mov
jg
mov
out
push
fnstsw
dec
mov
je
pop
cmp
inc
cld
cmp
mov
icebp
adc
lret
repnz
xor
and
leave
cmp
mov
int
inc
mov
stc
xchg
mov
cltd
es
mov
cmp
push
daa
push
test
push
iret
mov
insb
pop
push
fidivrs
fsubr
loope
outsb
cmp
jecxz
cltd
sbb
mov
xor
jg
je
mov
push
ret
call
movb
hlt
pop
adc
std
addr16
cwtl
sbb
lret
mulb
cltd
jp
imul
xor
mov
dec
cmp
lcall
cmp
push
rcrb
xchg
push
jbe
dec
jl
adc
pop
or
mov
push
fwait
jne
mov
je
decl
clc
rcrl
xor
cmc
push
and
shrb
stos
insl
jb
push
pop
push
sbb
jmp
pop
mov
cltd
data16
pusha
test
inc
test
lret
mov
sbbl
aas
sbb
imul
cmc
push
lret
and
js
sbb
mov
test
ja
movsb
mov
mov
and
es
jne
dec
fistpll
dec
jge
cwtl
jnp
enter
fmuls
lret
mov
mov
ds
mov
subl
xchg
mov
lret
fcomps
into
jl
xchg
and
test
stos
mov
loope
and
enter
inc
pop
dec
div
mov
dec
push
fldl
mov
repz
xchg
out
add
and
sbb
and
int3
adc
in
fisubrs
fsubs
sub
ja
add
xchg
dec
push
add
jle
xchg
and
xor
mov
hlt
lods
arpl
push
arpl
pop
xor
ljmp
jns
jno
imul
sarb
push
or
mov
cmp
sbb
xchg
or
adc
jg
or
push
sbb
ja
test
or
xor
push
imul
sbb
cli
pop
cmpsl
pop
aas
jle
into
sub
xor
xchg
jg
insl
add
adc
mov
or
add
mov
andl
lds
outsb
frstor
sub
push
popf
stos
mov
pop
mov
cmp
nop
and
adcb
test
or
cmp
dec
sub
lcall
xchg
push
mov
into
ds
cmpsb
or
mov
push
mov
sbb
mov
cmp
into
cmp
pop
inc
push
sbb
sub
popa
jle
pop
call
fisubs
inc
xor
pushf
adcl
xchg
hlt
mov
cmp
lcall
or
mov
call
dec
loope
lret
jne
leave
fbld
cli
ds
and
mov
adc
ret
fadd
jl
mov
dec
in
pop
add
jne
mov
mov
les
push
pushf
or
sub
xchg
lods
or
and
push
mov
dec
xchg
cmp
add
cmpb
xor
repz
cmp
fwait
cmovbe
adc
inc
in
jp
mov
and
pusha
jle
in
outsl
add
popa
dec
and
push
insb
mov
rolb
mov
jg
or
imul
gs
pusha
fstpt
or
std
mov
std
leave
or
fcmovnbe
mov
cmp
out
into
aaa
cmpl
push
fildl
in
lock
and
mov
test
lret
rclb
data16
sub
lcall
mov
fwait
cmp
mov
pop
cli
jl
pusha
xchg
sub
lds
sahf
dec
mov
iret
mov
or
outsb
ja
out
add
dec
out
xchg
lods
add
pop
fs
mov
pop
mov
xor
cmpsb
sbb
jl
add
and
lret
fwait
mov
sub
push
cmp
sub
xlat
or
int3
add
dec
fdivrl
jge
fsub
into
in
pop
or
jae
mov
das
dec
mov
scas
test
lds
shl
scas
ret
movsl
jl
ljmp
stc
xor
fchs
jle
jb
push
and
pop
cmpsl
dec
cmp
xchg
popa
mov
addb
notl
or
imul
stos
out
stc
pop
pop
mov
rclb
test
pop
shrl
and
mov
cld
push
mov
push
inc
lret
pushf
pop
xor
pusha
or
xorb
or
mov
cmp
mov
leave
adc
cltd
imul
and
jp
adc
scas
ljmp
lret
cmp
stos
outsl
out
incb
jbe
add
jno
mov
xchg
xchg
or
mov
stos
rcrl
bound
arpl
je
inc
in
int
jno
shlb
into
daa
or
popf
shl
cmc
ret
aam
mov
cmp
xchg
push
in
sti
push
dec
dec
rcrl
xchg
aaa
dec
bound
icebp
sub
sub
push
mov
xor
push
in
lahf
push
loope
or
xchg
fisttps
add
in
lret
sahf
fsubrl
inc
mov
outsl
push
ret
or
shll
dec
inc
xchg
sbb
adc
push
aas
add
mov
dec
outsb
ljmp
arpl
jns
adc
sbb
sub
scas
dec
rcrl
sarb
pop
pop
mov
jae
loope
xchg
rorb
xor
and
insb
jmp
xchg
mov
jae
push
outsb
sub
jecxz
ret
xchg
cltd
ja
int
fdivr
outsb
std
fwait
xchg
fidivl
push
cli
int
or
sbb
scas
into
mov
adc
sub
arpl
pcmpgtb
add
leave
mov
push
loope
sub
leave
jl
pop
jecxz
pop
jbe
shll
xor
loopne
pushf
push
cmp
fisttpll
pop
dec
mov
cld
xchg
sub
in
jne
push
imul
cmp
test
xchg
jno
xor
je
leave
cwtl
pusha
inc
roll
or
xchg
dec
or
add
cmpsb
jno
adc
sete
fcoml
xor
cwtl
lret
ja
in
setno
cmp
data16
mov
test
sub
rcl
divb
int
mov
and
cld
out
fdivrl
daa
jae
push
mov
push
test
pop
mov
cs
cmp
jmp
mov
movsb
rorl
adc
cmp
cmp
sub
dec
sbb
popa
mov
add
popa
int
mov
cmp
nop
xorb
and
mov
iret
jp
sub
pop
or
lahf
ds
sub
call
sub
inc
jo
adc
dec
shlb
and
mov
sub
enter
xor
repnz
fdiv
iret
dec
je
mov
mov
lret
xlat
sbb
div
pop
push
cmp
push
push
xchg
fbld
in
push
mov
andb
data16
js
in
mov
inc
xchg
bound
scas
aad
std
inc
adc
in
ret
sub
pop
scas
int
outsl
cmp
cld
inc
sar
mov
outsb
mov
and
sub
ficomps
cld
mov
mov
jno
gs
or
stos
test
js
and
xor
cpuid
sbb
mov
dec
dec
cmpsb
fdivs
dec
fs
inc
adc
adc
test
mov
cmp
push
adc
movsb
xor
gs
dec
add
fstp
in
adc
sbb
jecxz
cmp
jno
int
jg
aad
les
jle
jle
jp
xor
subb
jnp
fwait
jge
and
fstps
push
lret
popa
loope
cs
xor
mov
sbb
sbb
jno
in
pushf
pop
inc
ljmp
jnp
test
sub
cmc
aas
push
mov
clc
jns
pop
jg
ret
add
pop
dec
std
sub
popf
hlt
bound
add
jle
sbb
add
jne
push
sub
test
lock
inc
xor
setae
mov
lods
arpl
sbb
aas
inc
mov
test
or
dec
out
addr16
push
es
dec
dec
lea
or
lods
xchg
es
out
shl
lds
call
fstpt
int
sub
mov
lock
dec
daa
cmp
pusha
cli
jo
sbb
mov
lret
subl
lahf
int3
call
ds
xor
xlat
mov
iret
mov
jae
jle
mov
jns
pop
dec
outsb
out
cmp
cwtl
cli
faddp
sub
sub
lcall
notl
cmp
inc
shrl
cmp
push
sub
xchg
int3
dec
shlb
sub
xchg
test
adcb
out
scas
sbb
push
stos
in
add
sahf
cmpl
std
into
imul
adc
and
mov
push
cld
xchg
testb
add
outsl
pop
inc
xor
icebp
push
mov
push
xor
addl
fcoms
rcrl
sbb
mov
popa
stc
subb
adc
dec
lods
push
xchg
lret
push
fsts
frstor
xor
jbe
int
call
iret
add
mov
cmp
roll
jl
push
enter
in
mov
xor
mov
sahf
dec
js
jno
mov
add
dec
xor
xchg
mov
pop
or
push
lods
jns
push
jecxz
xor
xchg
aam
out
xchg
movd
and
cmpsl
test
cli
and
cmpsl
sbb
jle
mov
dec
mov
lods
sbb
xchg
inc
sbb
mov
xchg
push
pop
jmp
jl
push
xor
int
lret
lds
test
lcall
inc
lcall
sarb
push
or
add
out
fucomp
stos
mov
jmp
push
mov
cwtl
ja
out
jne
imul
add
outsl
mov
lcall
jl
ret
enter
cmpsl
sahf
jge
ror
dec
inc
lret
into
out
mov
jb
jmp
stos
lret
mov
cmp
mov
xchg
fistl
lea
xor
sbb
cltd
xor
or
sub
leave
jmp
aad
add
adc
bnd
dec
adc
inc
fmuls
sbb
lods
add
ljmp
adc
adc
mov
shlb
arpl
aam
das
xchg
add
xor
jo
xchg
mov
mov
js
mov
iret
mov
or
or
das
pop
das
jmp
inc
mov
sti
repnz
xchg
jno
lret
sub
les
hlt
pop
ret
jge
ja
inc
jl
xchg
cmc
pop
mov
aas
pop
ret
mov
lcall
cli
xor
ja
adc
jbe
cmp
mov
sbb
pop
mov
sub
push
sbb
andl
aad
pushf
push
das
sbb
cmp
mov
mov
popa
int
push
and
mov
dec
push
es
lock
je
push
xchg
mov
cmp
xor
sbb
lods
mov
lods
mov
jl
push
cmp
or
int
loope
test
xchg
nop
inc
into
or
push
cmpsl
jmp
ret
shl
clc
xchg
out
shll
sub
or
das
mov
fstp
adcb
xor
stos
xchg
in
cmpsl
sbb
push
lret
lret
adc
test
cwtl
jmp
call
aas
mov
in
sub
enter
test
aas
sar
push
fcoml
out
movsl
cwtl
jle
mov
jg
in
adc
testb
adc
jnp
test
sbb
cmp
ljmp
mov
stos
out
lods
fneni(8087
push
lret
nop
pop
or
nop
xor
arpl
xchg
rcr
fwait
test
insl
add
imul
testl
jnp
sbb
fdivrs
int
dec
mov
nop
mov
clc
fadds
lea
pop
sbbb
outsb
pusha
inc
jb
or
mov
js
cmp
cmc
pop
push
push
mov
jge
cmpsl
scas
lcall
push
push
pop
loope
mov
xchg
scas
inc
fidivs
push
jmp
loopne
mov
addr16
lcall
pop
pop
pop
test
add
out
bound
dec
data16
shll
ljmp
scas
pop
mov
and
add
test
arpl
rcrb
je
adc
mov
aaa
mov
pop
movsl
jno
xor
hlt
sub
sbb
icebp
stos
jmp
jne
xor
addb
mov
dec
cmp
lret
cltd
sub
aaa
lock
cmpsl
xchg
ljmp
dec
sub
xor
pop
insl
mov
xor
clc
mov
and
icebp
dec
push
jg
iret
dec
or
inc
xchg
jmp
lcall
inc
imul
aaa
add
movsb
jge
push
xor
dec
jmp
popf
sub
xor
lahf
lcall
in
xor
pop
fcoms
cmp
mov
sub
and
push
inc
mov
cltd
std
mov
mov
insl
and
sbb
sahf
aad
daa
iret
popa
jmp
out
cmp
mov
cmp
xlat
leave
xchg
or
ror
dec
daa
and
push
movsl
or
pushf
pop
lods
js
stos
out
fcos
sarb
sbb
pop
inc
cmpl
jg
xchg
scas
stc
int3
jb
loopne
test
out
pop
adc
fisubrl
lcall
pop
call
lods
pop
ds
cmp
into
shlb
xor
mov
adc
mov
ficompl
cmpb
in
repz
in
xor
lret
push
jns
push
mov
push
cmp
or
fcomip
movl
add
inc
sbbl
inc
push
scas
dec
jg
lret
dec
test
les
push
and
cmp
cmpl
mov
lahf
xlat
mov
ret
movsl
or
sub
mov
incb
xchg
popa
inc
je
in
mov
sbb
clc
outsb
pop
mov
insl
inc
fs
xor
jbe
adc
shlb
cmp
icebp
lcall
rorl
enter
mov
push
dec
xor
scas
cmpsl
cmpb
mov
stc
push
and
sti
or
mov
cmp
and
cmp
pushf
dec
sbb
push
notl
mov
and
or
mov
imul
push
sbb
jmp
std
int
andl
jo
dec
pushfw
cmp
cmp
mov
das
outsb
jle
das
add
pop
mov
mov
or
and
gs
fmul
dec
xchg
push
es
in
cwtl
mov
pop
cmp
arpl
push
ret
jp
rcll
jns
mov
inc
insl
repz
repnz
jge
test
mov
mov
jns
mov
shll
repz
mov
ljmpw
repnz
js
mov
mov
cmpb
shrb
fs
mov
pusha
out
pop
loop
and
sbb
int3
ljmp
in
pushf
and
fbstp
sub
push
hlt
scas
aas
cmc
loop
adc
dec
and
out
jl
loopne
call
mov
insl
xchg
adc
xchg
test
push
cmp
lret
xchg
cmc
sub
icebp
and
mov
mov
mov
mov
test
sub
dec
divb
pusha
int3
xor
or
mov
jecxz
xchg
xor
pop
pop
push
rclb
push
mov
jle
sbb
push
xchg
mov
fidivl
leave
or
outsl
lret
jnp
ljmp
fstl
cmpsl
insb
loopne
dec
lahf
pushf
cmp
adc
jb
std
aaa
stos
xchg
inc
and
xor
arpl
jno
sbb
test
daa
and
cmp
je
les
dec
jg
outsl
out
inc
dec
dec
repnz
lret
inc
xor
ret
xor
adc
xor
nop
gs
cmp
mov
leave
int3
cmpsl
fsubs
imul
or
dec
subb
and
aad
mov
daa
pop
jne
cli
or
xchg
mov
aam
stc
lret
repz
movsb
into
cmpsl
in
aad
fisttps
cmp
xor
jae
rcrl
mov
push
lock
enter
xor
rorb
xchg
inc
lods
mov
sti
movsb
std
pop
lret
and
rcll
je
jl
pop
push
mov
lods
roll
fldenv
sbb
sbb
cltd
imul
cmpb
repz
xchg
negl
clc
xor
shll
sti
rcrl
jp
adc
mov
pop
jle
xchg
cmp
jg
mov
jle
js
fs
adc
mov
xchg
push
sub
mov
or
insb
mov
add
stc
call
ss
push
sti
sub
xor
add
mov
movsl
jns
je
lcall
mov
fdivrl
lods
xacquire
add
test
jmp
daa
lods
sub
pop
jp
inc
push
in
jge
imul
popaw
in
incb
insb
push
ror
test
cs
std
inc
iret
push
add
dec
das
mov
add
mov
shlb
dec
loop
ljmp
jle
pop
mov
lods
xchg
cmp
dec
inc
shll
rorl
xor
and
mov
jnp
xchg
fnstenv
pop
push
fisubl
cmovs
lret
adc
mov
sbb
mov
je
sti
or
adc
popf
orl
push
mov
push
mov
sbb
pop
sbb
int
gs
ret
pop
or
andl
aas
dec
cwtl
push
fildl
cmc
rcl
push
lea
inc
aas
add
insb
imul
test
lods
loope
movnti
fmulp
jno
mov
push
push
lods
jmp
lock
shll
in
and
mov
popf
das
mov
inc
mov
gs
mov
stc
or
jno
adc
int3
mov
cwtl
dec
xchg
jns
shrl
aas
mov
fldcw
add
lods
clc
cld
in
gs
mov
jnp
xor
fnsave
adc
sub
xchg
ss
mov
je
and
pop
movsl
jns
mov
sbb
mov
inc
test
popf
notb
sahf
dec
cld
jb
cld
bound
test
popf
jne
cmp
call
jae
xchg
cmp
xor
xchg
mov
les
stos
xchg
bound
mov
into
scas
adc
or
sbb
mov
jbe
call
xchg
aas
movntq
popa
rcl
cmc
dec
cmc
cmpl
fs
cmpsl
add
aas
sub
mov
movsl
leave
rorb
fwait
cld
ja
add
cli
mov
shl
bound
rcl
adc
lock
jp
enter
hlt
push
cmp
test
loope
shrl
mov
adc
sbb
into
mov
mov
shrb
sub
sub
lcall
iret
xor
jge
inc
movsl
js
mov
aam
std
push
pusha
push
pop
mov
cmp
ss
je
ljmp
xlat
xchg
mov
dec
mov
jne
in
iret
push
inc
mov
jb
ss
enter
xchg
add
ljmp
dec
push
sahf
xchg
jo
ss
xor
sbb
mov
cmp
push
mov
mov
test
mov
loop
shrb
test
test
std
js
test
jae
inc
int3
jne
jmp
xchg
sahf
hlt
mov
ficoms
pop
mov
sbb
or
xchg
cmp
mov
push
lret
xchg
popf
in
and
mov
aad
insb
or
testl
sub
lea
nop
inc
mov
xlat
stos
mov
cmp
cltd
mov
xchg
xor
outsb
and
pop
xchg
loopne
add
ret
sub
sub
add
mov
mov
xchg
inc
sub
xchg
dec
rcrl
pop
lcall
jno
adc
jnp
mov
and
fildll
xchg
shlb
std
movsl
out
add
ljmp
jnp
lret
jne
sub
add
aad
add
addr16
pop
adc
cmpsl
imul
xor
add
movsb
jge
sbb
popa
or
jbe
adc
pop
cmp
sub
leave
pop
je
sub
leave
pop
pop
cld
cmp
jecxz
stos
adc
pop
inc
inc
lea
inc
sti
scas
ja
pop
and
xor
xchg
ds
pop
sbb
mov
fisubrs
inc
jo
add
xchg
push
enter
lds
adc
and
mov
cmp
pushl
dec
mov
bound
ret
xor
pop
inc
aas
cmc
scas
and
xchg
rorl
sub
add
xor
mov
mov
cmc
xchg
jge
daa
mov
and
out
out
ss
xlat
imul
imul
dec
test
roll
or
cmp
pop
out
push
test
rcr
sub
add
jecxz
in
ret
cmp
out
movsb
inc
insb
enter
leave
dec
stos
sbb
jnp
inc
in
imul
push
popa
test
ret
out
push
test
add
mov
dec
xor
sub
dec
and
mov
cmp
ss
jo
call
xlat
decb
inc
ds
test
inc
cltd
add
sbb
or
or
test
dec
inc
ficompl
push
xchg
sbb
dec
adc
das
xchg
adc
sbb
push
and
xor
lahf
add
add
addb
fisttpll
dec
fstpl
stos
push
cwtl
scas
adc
stos
dec
adc
cmpsl
adc
adc
jne
ja
sub
jns
push
pop
fiadds
cmpb
sbb
ficoml
or
mov
mov
jns
pusha
push
fistl
fistpll
add
inc
push
sti
cmp
dec
scas
fs
adc
ljmp
cltd
xchg
in
pop
mov
adc
je
xchg
cmp
mov
xchg
mov
inc
dec
push
jge
ficompl
test
movsl
push
les
pop
xchg
jnp
mov
dec
push
pop
cltd
or
push
mov
ja
xchg
mov
mov
mov
stc
aam
adc
pop
out
icebp
fadd
data16
inc
pop
popf
add
test
push
xchg
iret
inc
outsb
xchg
jne
dec
sub
mov
pop
or
push
in
pusha
gs
insb
das
bound
lahf
pop
jae
push
and
mov
mov
ficomps
and
jl
fadd
and
sub
filds
xor
cli
rcll
aas
incb
icebp
sub
jge
cli
and
scas
cli
push
xchg
mov
iret
sbb
sbb
std
sbb
pop
push
int
cmpsb
insb
sub
aam
pushf
cwtl
xchg
sahf
jl
xor
pop
xchg
or
inc
or
jnp
in
negb
push
shlb
ljmp
cwtl
fdivrp
lock
sub
cli
pop
roll
and
mov
adcb
sub
mov
adc
cld
std
fidivs
cmp
cltd
sti
xchg
addr16
arpl
adc
or
nop
lods
insl
ja
fs
xchg
cli
pop
lds
popf
mov
dec
push
outsb
into
or
test
push
lcall
xor
test
adc
xchg
xor
daa
cltd
jmp
addl
cltd
adc
and
lahf
ss
call
leave
sub
push
add
test
dec
dec
bound
cmc
pop
out
sub
mov
out
xor
rcrl
inc
pop
data16
cld
push
enter
outsb
mov
pushf
movsl
cmp
pop
pop
in
jecxz
inc
cmpsb
cmpsl
pop
push
sbb
mov
pop
mov
gs
and
loope
add
stos
or
das
cltd
mov
fnstcw
pop
adc
sahf
cld
inc
repz
add
adc
ror
fnstsw
rorl
push
dec
sbb
js
mov
xlat
sub
sbb
adc
lret
add
jns
xlat
xchg
fisttpll
add
sub
lods
cmpsb
int3
or
ret
lret
push
jp
pop
cmp
imul
ret
xchg
push
sub
or
inc
push
push
and
data16
xchg
rorb
mov
addr16
lcall
inc
aas
mov
loope
jns
xor
sub
out
hlt
or
add
dec
sub
jle
or
aas
notb
lods
mov
cltd
mov
sbb
or
push
adc
dec
cmp
sub
and
push
xchg
pop
dec
jge
inc
lret
xor
and
rcll
outsl
clc
push
xor
push
jns
les
dec
pop
out
mov
lcall
xchg
out
mov
mov
cs
pop
icebp
in
cli
scas
enter
mov
fists
pop
ja
pop
dec
lods
inc
inc
ret
push
scas
pop
cmp
sbb
sub
pop
pusha
das
int3
outsb
and
mov
pop
popf
lahf
icebp
pop
loop
xchg
leave
aas
aaa
scas
push
push
les
cmp
add
dec
fists
adc
mov
and
inc
sub
gs
jecxz
lds
test
dec
sub
dec
ret
pop
xlat
fistps
adc
inc
sbb
add
cltd
cmp
pop
lret
xchg
popf
loopne
jmp
into
fistps
pop
lds
pop
push
orb
lret
mov
popf
push
lahf
or
or
loopne
ja
movsb
mov
add
inc
inc
insl
dec
pop
aam
push
cmovnp
and
das
pushf
xlat
inc
aad
daa
mov
or
xlat
movsb
enter
mov
jo
iret
mov
fadds
sahf
rorl
mov
cld
repnz
and
add
sub
xchg
rolb
xor
movsl
jle
jbe
xchg
repz
cli
adc
cmp
sub
cmpl
call
mov
jp
sahf
add
arpl
or
nop
mov
lahf
xor
sub
jecxz
inc
and
mov
pop
sahf
cmp
add
xchg
nop
cmp
push
sub
xchg
xchg
leave
out
mov
xchg
fucomip
push
cmp
out
bound
test
cmc
adc
or
dec
adc
dec
addr16
lea
test
jecxz
push
cmc
mov
lahf
mov
incl
add
aad
pop
ret
cmpsb
lea
adc
and
mov
adc
mov
mov
ss
ret
lret
sbb
rcll
call
mov
cmc
or
repz
daa
xchg
adc
mov
loop
mov
or
xchg
pop
sub
jne
int3
xchg
movsb
or
or
pop
push
movsl
cmp
cs
push
fwait
movsb
push
fcom
mov
call
scas
ds
repz
push
repnz
fiadds
dec
ss
push
push
aam
gs
aad
mov
ret
inc
mov
fs
je
xchg
add
data16
mov
ljmp
loop
xchg
std
mov
xor
sub
or
mov
xchg
enter
push
cmpsb
mov
and
sbb
cli
pop
and
sub
andl
movb
jbe
jbe
cmp
lock
mov
out
mov
fwait
adcl
pop
scas
xchg
mulb
xor
push
or
jbe
insb
xchg
lock
sbb
ss
xor
lea
es
subl
rol
xchg
lahf
jns
cmpb
cmp
int
jne
pop
rcl
es
ljmp
add
mov
mov
push
xor
xorb
add
jne
sub
mov
xor
pusha
jns
mov
ret
repz
loopne
in
imul
xlat
loope
enter
or
jno
cwtl
cli
inc
jmp
mov
cmpsl
loope
inc
movsb
popa
jbe
pushw
cmpsb
jmp
push
xor
loopne
fstpt
dec
push
cmpsl
scas
clc
cmp
mov
adc
movsb
fiaddl
add
loope
push
sub
int
mov
xchg
jmp
nop
xlat
xor
sbb
in
rcr
dec
mov
cmp
lcall
fs
ljmp
out
ja
sbb
sbb
enter
push
push
inc
mov
ret
sbb
loop
xchg
leave
loopne
add
in
cld
xchg
out
imul
data16
out
pop
push
cmpsb
push
lods
repnz
cltd
in
and
inc
sahf
add
pusha
aad
lret
leave
ja
xor
iret
sbb
insl
sbb
xor
shrb
xchg
lret
decb
dec
sbb
jo
jb
into
adc
and
add
test
gs
sbb
dec
mov
sub
sarb
imul
push
std
loopne
fisttpll
jb
jge
and
dec
xchg
lea
sbb
lods
jo
pop
dec
xchg
cli
cmpsb
popf
cli
imul
ss
call
sub
jnp
jecxz
loopne
inc
mov
mov
xor
push
in
mov
insb
stos
out
xor
or
sub
mov
and
sub
test
xchg
add
out
cli
cmp
repnz
bound
jb
cli
rorb
insl
xorb
jecxz
scas
cmp
popa
aaa
test
push
cld
cwtl
aas
xchg
ret
lds
nop
into
ret
jp
add
aas
dec
jmp
adc
add
jbe
mov
mov
dec
adc
pop
mov
jbe
icebp
or
dec
subl
mov
mov
pop
mov
shrb
or
pop
mov
shll
cmpsb
pop
push
ss
out
in
out
cmp
inc
aam
xchg
lret
stos
nop
adc
pop
jno
test
pop
pop
cmp
inc
jns
pop
mov
inc
mov
sti
mov
jmp
and
add
add
or
add
add
add
add
xchg
imul
gs
lds
mov
jle
aad
inc
push
sub
xchg
xchg
cmp
jns
pop
sbb
call
cwtl
lea
dec
lret
sbb
or
sub
mov
ljmp
push
adc
test
lods
sahf
in
push
repz
sub
mul
push
sub
xor
fnsave
jns
mov
ret
lods
jg
test
and
jbe
inc
jae
rorb
add
cli
inc
je
fldt
mov
das
test
fstpt
in
push
lock
push
fstpt
incb
mov
mov
adc
adc
fstl
sbb
xchg
addr16
cmpsb
int3
mov
and
loopne
shrl
cmp
push
aad
jb
dec
lea
jle
fisttpl
add
jbe
into
inc
dec
and
jmp
and
pop
pusha
in
and
movsl
mov
es
xor
mov
or
out
loop
mov
mov
aad
adc
out
pop
push
push
fisubrl
fcoml
ds
pop
lods
je
add
dec
decb
inc
mov
test
mov
sub
and
pop
pcmpgtb
dec
pop
xor
mov
mov
ret
mov
and
xor
in
mov
pop
sti
fwait
jl
mov
pop
cmc
inc
sbb
and
out
dec
xor
push
test
ret
jns
push
mov
fstl
in
cltd
cltd
push
pop
sbb
and
mov
fistl
jne
mov
push
adc
ljmp
iret
push
imul
add
lods
into
fcomip
jge
and
test
push
mov
cmp
andb
shll
iret
or
mov
outsl
scas
aaa
push
mov
mov
js
ds
push
ret
fnstsw
add
push
xchg
mov
xor
xor
cmpsb
int
or
mov
push
pop
shrl
loop
pop
enter
mov
out
subb
jns
dec
push
out
mov
pcmpeqd
mov
ljmp
sub
lcall
xchg
fstp
js
sbbl
xorb
cmpsl
sub
xchg
adc
sub
xchg
es
decb
lcall
icebp
int3
lret
imulb
push
fistl
imulb
sbb
jbe
pop
pop
lds
pushw
pop
outsb
mov
sti
addr16
or
push
mov
adc
push
cmp
int
out
mov
cld
xor
pop
imul
test
fwait
mov
push
ret
inc
adc
xor
push
ljmp
filds
mov
mov
mov
les
xchg
jg
jmp
inc
aam
xor
adc
icebp
push
aad
fsts
jns
jmp
dec
adc
test
mov
fisubl
out
adc
les
popa
test
add
jmp
cmpsl
mov
xor
ret
xor
lahf
mov
or
shld
or
xchg
dec
push
push
neg
push
test
out
mov
adc
adc
xor
mov
mov
faddl
les
ds
pop
mov
sti
loop
and
rolb
in
mov
cmp
push
sub
pop
arpl
jbe
sub
lret
data16
loop
pop
ljmp
push
add
sub
fisubs
movsb
rcrl
xchg
stc
aaa
mov
dec
xor
inc
mov
add
fiadds
loope
inc
jb
es
add
gs
push
push
mov
xchg
pop
jecxz
and
mov
test
sbb
aad
jns
imulb
inc
decl
ss
cltd
dec
ja
adc
loop
iret
add
sbb
ret
xor
ss
jge
mov
es
push
cld
cwtl
icebp
ja
in
les
out
mov
lahf
pop
mov
add
es
cmp
je
push
xor
cmp
ljmp
into
push
addb
loopne
enter
sbb
xor
rorb
in
ja
sets
push
outsb
dec
sub
push
ljmp
cwtl
sbb
dec
and
dec
sub
out
lret
jmp
in
pop
int3
mov
lds
imul
dec
jmp
dec
fisttps
neg
aam
stc
jecxz
dec
adc
cwtl
icebp
in
inc
inc
and
mov
jle
push
mov
push
xor
add
rcrb
pop
cmp
add
xor
imul
sub
cmp
loop
ljmp
pop
mov
mov
std
mov
loopne
lods
sbb
lods
mov
popa
mov
inc
imul
pop
cmp
push
movsl
ret
jmp
ret
mov
dec
pop
sbb
jmp
ja
in
push
sub
fdivr
lods
mov
pop
jb
dec
in
jno
dec
or
out
cmp
loop
aam
dec
mov
pop
scas
ja
nop
fsubrs
pop
xchg
xor
pop
sbb
pop
sbb
pusha
jecxz
mov
out
pop
mov
push
mov
push
lahf
mov
leave
int
push
and
mov
cltd
jbe
push
mov
out
sbb
sahf
cmpsb
add
jb
subb
jbe
mov
sbb
testb
jno
lret
xor
call
mov
mov
dec
pop
sub
sbb
sarl
dec
or
adc
bound
add
nop
mov
pop
dec
xchg
push
leave
add
or
fwait
mov
mov
fwait
unpckhps
pop
xchg
pushf
out
mov
icebp
sub
cmp
test
dec
cmp
and
aas
inc
adc
subb
cwtl
bound
mov
ret
mov
jg
xor
dec
add
mov
shrl
call
xor
mov
pop
insb
or
fs
into
adc
mov
push
adc
mov
lahf
scas
enter
ss
adc
test
fisttpl
aad
inc
aam
scas
sbb
push
xor
and
and
in
inc
decl
lods
xchg
iret
mov
call
jo
aas
dec
xchg
aad
xor
fstl
jge
inc
aad
push
outsl
insb
xlat
hlt
and
or
insb
push
popf
mov
call
mov
scas
jae
arpl
mov
sbb
mov
cmp
cwtl
mov
inc
cmp
jno
fsubl
mov
sbb
push
ds
cmpsb
mov
mov
sti
mov
cmp
mov
mov
aam
ss
popf
ds
or
enter
cmp
stos
mov
sub
adc
std
pusha
insl
pop
pop
jp
lret
push
hlt
test
pop
add
into
and
popf
mov
fnstenv
lods
pop
dec
adc
xchg
popl
shll
int3
sub
cld
pushf
shll
mov
inc
rcll
fbld
rorl
lcall
subl
ljmp
nop
inc
sahf
test
ret
push
mov
jmp
in
out
sbb
in
mov
test
jno
fdivrl
sbb
adc
push
cmp
cmp
icebp
shl
rolb
ds
aas
and
lret
cmp
mov
adc
dec
add
and
std
lea
adc
sahf
cmpsl
jge
dec
int3
cmc
or
idivb
outsl
mov
jge
jl
int
cmc
cmpsb
jmp
sbb
outsl
jbe
mov
cmp
shll
lahf
jo
test
pop
mov
sahf
jae
xchg
rcll
xor
dec
addr16
sub
ds
pusha
mov
xor
push
xchg
pop
nop
cmp
test
addr16
mov
xchg
adc
shlb
inc
cmpsb
test
rclb
dec
push
cmpsl
popf
xor
adcl
mov
add
fxch
in
jnp
add
setle
jmp
sub
popa
jne
or
cmpsl
sbb
and
pop
lods
insb
int3
out
lea
mov
adc
mov
jb
sarb
inc
rcll
cmc
movsb
lgs
lods
mov
pop
push
jbe
mov
mov
lret
dec
int
push
cmp
cld
pop
adc
push
ret
add
test
pop
mov
xor
pop
fs
jbe
int3
mov
shlb
fdivl
xchg
sbb
xchg
insb
and
jge
inc
cmp
sub
fsts
ret
sub
ja
stos
std
loope
fsubrl
mov
clc
out
bnd
push
je
push
sti
fimull
stc
push
icebp
test
push
insl
aam
in
icebp
lods
xor
cld
rcl
mov
dec
mov
clc
imul
dec
mov
loope
cmp
cs
mov
movsl
lcall
mov
outsb
lea
inc
icebp
mov
cmp
nop
add
adc
lcall
mov
repz
mov
pop
sbb
push
pop
or
lods
call
movsl
push
jecxz
aam
sub
in
mov
mov
nop
jo
adc
jo
test
adc
jae
lahf
lret
cmpsl
xor
push
fsubs
insl
mov
jne
mov
sarl
mov
flds
push
mov
sub
shll
cmp
sbb
mov
icebp
cmc
frstor
cltd
loope
xchg
add
mov
fistl
je
aas
cmp
rcrl
xchg
popa
jno
popa
cmp
xchg
push
or
int
push
shl
aad
and
into
mov
xchg
loop
test
sub
cmp
popa
enter
and
data16
je
mov
das
push
out
push
test
fs
sub
lahf
lods
in
jbe
leave
int
shlb
push
insb
xorb
imul
pop
dec
add
popa
shll
subl
inc
inc
pop
movsb
pop
in
popa
std
test
or
pop
imul
cmp
jl
mov
pop
jo
xchg
jmp
sub
cltd
shrb
lods
ret
xor
dec
inc
jbe
lea
mov
movsb
or
sarl
bound
xchg
push
mov
xor
movsb
cs
push
mov
movsb
enter
lahf
inc
mov
dec
imul
es
scas
pop
das
xchg
outsb
add
loopne
or
aaa
xor
push
inc
icebp
dec
sbb
and
mov
mov
testl
popa
jb
pop
push
pop
xlat
inc
sar
aam
outsb
push
add
repnz
pusha
aam
jnp
push
mov
mov
pop
push
sbbb
lahf
mov
inc
cld
lock
dec
push
push
lret
xor
lea
arpl
mov
js
dec
and
mov
xchg
ret
andb
andb
fbld
stc
jl
jb
xchg
into
cwtl
xchg
pop
add
daa
cmp
push
out
push
or
mov
enter
lret
scas
sbbl
inc
rolb
xlat
sub
dec
jecxz
pushf
imul
gs
xchg
je
outsb
mov
or
push
bound
lods
mov
dec
stc
push
cmp
js
out
add
push
fwait
xchg
pop
jp
mov
or
daa
out
xor
cld
adc
jl
mov
int
add
cld
add
pop
cli
and
or
pop
movsl
mov
cmc
pop
insb
cld
and
mov
sub
inc
mov
push
mov
cltd
pop
rcll
xchg
test
adc
jg
and
movsb
adc
dec
negb
sub
xor
outsl
cmpb
fdiv
imul
jg
ljmp
and
imul
insl
mov
pop
jnp
xor
into
ficoms
mov
pop
xor
sub
cmpsb
inc
mov
or
ds
pop
std
pop
dec
push
dec
and
aad
gs
mov
nop
and
ja
nop
lock
mov
sub
jmp
xor
jl,pn
gs
rcrb
xchg
out
test
stos
mov
mov
mov
pop
mov
dec
sbb
lahf
mov
ror
cmc
add
mov
adc
jnp
dec
pop
mov
mov
mov
lea
sub
aas
jnp
inc
and
or
xchg
ja
je
fmull
inc
pushf
xor
out
cmpsb
std
pop
mov
jns
ja
jae
les
or
mov
popf
sbb
mov
pop
cwtl
lret
ret
popf
jbe
adc
mov
dec
lahf
ret
sbbb
dec
xchg
in
push
pushf
mov
testl
adcb
pop
pop
lret
dec
xchg
xchg
sbb
xor
neg
dec
ficoms
das
ja
int3
cmpsb
frstor
fidivl
mov
add
test
lcall
xor
loope
adc
mov
addl
mov
cmpsb
loop
cmc
sahf
and
fstps
rclb
inc
cmc
mov
jo
jne
sahf
icebp
mov
cmc
jbe
or
push
dec
sti
rol
and
sahf
js
shlb
repnz
popa
jmp
icebp
or
sub
sbb
jb
cmp
movsb
mov
out
cmpsb
mov
jne
xlat
and
and
lods
xchg
add
mov
add
popa
push
mov
add
cwtl
addr16
imull
iret
xlat
repnz
jp
sub
mov
vmwrite
test
jmp
js
jo
push
pop
fs
or
mov
lods
mov
fcoms
jg
lcall
mov
aam
pop
fcompp
stos
loope
test
mov
ret
pop
add
sbb
in
mov
cmp
je
out
add
shl
test
pop
mulps
mov
orl
pop
adc
data16
jmp
data16
mov
inc
pop
jp
push
imul
push
adc
dec
mov
or
xor
xlat
xor
out
mov
mov
movsb
xchg
je
push
mov
movsl
ret
inc
xchg
dec
inc
mov
mov
lds
rclb
jo
cwtl
rcll
aas
mov
jg
lods
pop
shr
push
mov
je
jg
bound
sbb
adc
movsl
adc
dec
push
lods
or
xchg
mov
or
gs
leave
cmpsb
pop
out
in
inc
sub
add
lock
mov
dec
and
sub
in
xchg
cmp
xchg
out
add
repz
in
and
pop
sbb
mov
mov
jl
clc
adcb
bound
fs
js
fidivrs
movsl
hlt
sbb
jns
arpl
mov
daa
scas
out
test
mov
mov
imul
mov
or
stc
lret
jp
cmp
adc
inc
push
cld
push
mov
aaa
inc
or
jne
xchg
xchg
cli
lret
nop
sub
das
fdiv
notb
sbb
test
les
std
cmp
push
stc
int3
xor
xchg
add
push
mov
pop
cmc
lea
sbb
sbb
in
cmp
loope
iret
movsb
clc
dec
push
daa
xchg
into
mov
add
xor
test
or
std
pusha
je
and
add
adcb
jge
sub
insb
lret
stc
and
ja
cmpb
test
or
into
lahf
jo
fildll
repnz
loop
add
or
icebp
cmc
dec
mov
push
sahf
sbb
sbb
mov
aad
xchg
notl
lret
pushfw
lahf
and
or
rol
into
imul
or
out
sbb
sub
popf
in
sbb
mov
sbb
xchg
stc
lea
js
test
xor
sbb
fldcw
add
imul
mov
sbb
xlat
out
xor
dec
cltd
sar
sub
adc
xor
add
movsl
or
mov
lahf
fwait
inc
in
mov
fisttps
pop
sbb
sub
addl
cmp
add
js
int
mov
popa
xchg
iret
push
xchg
stos
movsl
popa
mov
or
xchg
imul
out
jb
xchg
js
shll
andb
pop
fiaddl
ret
test
bound
int3
aaa
lret
add
xorb
jp
popf
fadd
pushf
clc
push
pop
dec
xchg
xchg
in
leave
scas
hlt
jg
loopne
cs
hlt
mov
out
movntq
jbe
xchg
inc
das
cmp
xchg
subb
adc
lea
cmp
ja
or
mov
inc
add
imul
imul
scas
jb
ds
jo
xchg
inc
and
out
inc
push
aas
stc
dec
lret
mov
dec
jnp
add
xchg
inc
lods
or
jmp
lret
inc
rclb
inc
test
das
adc
lahf
jo
pop
pop
lds
xor
mov
mov
mov
jno
test
xor
mov
mov
out
movsl
dec
push
sbbb
stc
cmpsb
pushf
add
pop
mov
and
stos
sbb
jns
iret
jmp
addr16
gs
or
pop
in
icebp
fwait
push
push
mov
hlt
and
iret
cmp
sbb
fildll
ret
cltd
fildll
mov
les
mov
push
or
lahf
bound
lahf
and
add
imul
add
jne
or
stos
add
lret
push
addr16
rcrl
pop
or
inc
jns
icebp
mov
sti
push
fldcw
mov
outsl
sub
add
test
push
add
dec
sbb
adc
or
jbe
lret
pop
hlt
out
mov
data16
adcl
cmp
xchg
lahf
shlb
mov
icebp
ret
dec
cld
in
clc
sub
mov
dec
or
push
xchg
inc
sub
aas
arpl
imul
adc
out
cmp
sbb
jecxz
xchg
push
addl
jbe
mov
imul
decb
std
mov
mov
pop
add
fcmovbe
test
cld
jns
cmp
mov
adc
rclb
push
add
int3
mov
ja
or
xor
pop
jmp
fisubrs
dec
ljmp
cmp
pop
fucom
in
fstpl
scas
scas
mov
adc
lcall
outsb
pop
jmp
or
add
push
pop
inc
jp
xor
sub
push
inc
and
out
and
and
xchg
inc
outsl
push
clc
pop
ja
popf
test
mov
mov
rcrl
sbb
fcoms
stc
add
dec
fstpt
gs
jnp
lcall
popa
jbe
add
mov
ror
lret
xchg
push
clc
outsl
jne
es
dec
insl
int3
out
xorl
cwtl
sub
inc
mov
push
in
enter
stos
aas
addb
mov
out
movsl
test
pop
inc
mov
int
in
movsb
pushf
push
sahf
gs
imul
icebp
push
mov
jb
fdivs
ret
lret
mov
adcl
subb
cmp
in
sub
gs
aas
jecxz
xor
mov
imulb
inc
adc
or
ficoms
cmp
push
loop
mov
pusha
jnp
mov
pusha
mov
lret
in
pop
dec
mov
adc
mov
repz
inc
push
and
xor
push
fstpl
mov
mov
outsl
inc
xchg
mov
imul
ljmp
js
in
or
xchg
push
cmp
adc
xor
dec
xchg
adc
fnstenv
adc
or
mov
loopne,pn
adc
or
ss
push
sbbl
cmp
mov
fildll
js
mov
pop
lods
inc
or
repz
pushf
cmp
fnstenvs
shll
cmpsb
lcall
pop
xlat
jbe
mov
mov
or
sbb
adc
push
mov
rcr
mov
rcr
rolb
adc
adc
fwait
xchg
lahf
add
or
xor
int3
jecxz,pt
xchg
cwtl
adc
sahf
clc
fcoms
ficoml
mov
and
or
lea
popa
out
loop
add
jae
add
sub
out
add
or
mov
aam
imul
push
cltd
push
push
mov
jp
fldcw
pop
loope
jo
add
ror
xchg
fucomip
pop
xchg
cmp
lea
js
xor
dec
mov
mov
cwtl
inc
in
call
je
pop
pusha
adc
outsb
aad
iret
popf
cmp
pop
xlat
cs
adc
loopne
pop
mov
imul
add
test
lret
ret
push
xchg
aas
iret
sub
push
inc
fidivrl
jmp
cmp
loopne
xchg
inc
mov
jbe
mov
push
cmp
jecxz,pt
adc
xor
aaa
dec
jg
mov
in
pop
int3
in
dec
jno
roll
xlat
idivl
loop
jae
int3
xlat
cmp
cld
pop
pop
daa
dec
add
push
stc
ret
sbb
xlat
add
add
je
jmp
jne
imul
pop
adc
inc
enter
adc
and
cmpl
out
mov
xor
ljmp
cmp
sub
cmpsl
cmp
fidivl
imul
adc
jb
adc
in
cld
push
rol
push
jmp
push
loope
inc
aaa
repnz
sbb
inc
sub
loop
add
subl
mov
sarb
mov
mov
push
imul
xchg
dec
mov
and
cmp
into
subb
or
jmp
roll
cwtl
addr16
or
pusha
mov
cmpsl
mov
push
sbb
cmpsl
pop
xor
push
aaa
sub
jbe
jne
test
mov
push
mov
cld
cmpsb
xor
in
xor
push
jp
push
push
inc
sbb
xor
xchg
sbb
mov
xacquire
aad
jge
outsb
mov
bswap
js
mov
loopne
popa
in
filds
cmpsb
aas
pushf
lcall
push
jl
daa
pop
scas
dec
and
scas
out
mull
lock
icebp
push
lods
fcompl
mov
mov
ljmp
pushf
sbb
rcrl
fwait
or
fcmovb
mov
jecxz
popfw
pusha
fimull
aam
cmp
out
call
add
inc
decb
scas
xchg
insl
popa
arpl
daa
add
stos
or
call
lea
sti
stc
lcall
aaa
push
out
in
out
enter
adc
push
stos
in
out
call
bound
cmp
lea
mov
shr
jbe
mov
and
pop
add
push
xor
push
add
adc
add
or
bound
dec
imul
popa
or
pop
inc
jl
xor
jbe,pt
cli
hlt
add
jle
dec
and
pop
int3
mov
push
and
cmpsb
cmp
cmp
imul
jg
lret
mov
sbb
shll
pop
fnsave
pushf
sti
mov
testl
sbb
or
xor
xor
sub
enter
cmp
gs
ret
mov
cmpsl
test
cmp
mov
ljmp
outsl
sub
push
mov
push
imul
sub
lahf
ja
inc
xor
mov
and
mov
mov
repnz
mov
daa
ss
loope
iret
test
sub
dec
push
mov
repnz
mov
lea
lret
add
ja
push
ret
in
repz
xchg
clc
pushf
sbb
gs
mov
sarl
incb
stos
lahf
pop
sbb
loope
mov
sahf
mov
fistl
pop
mov
int3
movsb
jbe
sbb
push
rclb
jle
push
mov
daa
xor
add
scas
mov
iret
rorb
in
lcall
jmp
xchg
fs
test
aaa
sub
inc
int3
mov
sbb
jno
dec
push
add
xchg
sub
iret
or
addl
push
ss
mov
ljmp
pop
aaa
jae
xorl
mov
inc
xlat
pop
push
dec
adc
and
rolb
inc
pop
lret
inc
sbb
jb
dec
add
lret
mov
or
xchg
or
and
jp
inc
adc
out
and
lods
sbb
mov
cmpsb
fsubs
pusha
lods
adc
push
faddl
rcrb
stos
add
imul
push
xlat
test
movsb
or
cwtl
xor
jmp
push
cmp
mov
adc
adc
inc
push
fisubl
mov
loopne
dec
aam
jno
mov
adc
push
or
orb
sub
jmp
addr16
xchg
es
hlt
mov
icebp
lds
xlat
sub
mov
std
sub
xchg
stos
stos
pop
inc
pop
jns
ja
int3
sbb
dec
loop
ja
pop
jae
pusha
rcrl
jnp
sub
leave
pop
jne
movsl
mov
call
notb
pop
out
cmc
into
roll
cmpb
pop
outsb
and
scas
ss
xchg
jmp
test
pop
das
rcr
dec
pop
dec
cmp
jmp
test
lods
xchg
and
test
pop
mov
fisubl
les
jb
pushf
dec
mov
mov
push
xorl
dec
arpl
test
push
jp
inc
adc
pop
loopne
icebp
out
les
mov
xor
mov
pop
loopne
outsb
fcoml
xchg
sbbb
scas
mov
push
subl
sbb
nop
sbb
mov
and
into
pop
imul
mov
sub
ret
enter
test
or
jae
cmp
xor
out
cmpsl
std
sbb
inc
sub
mov
push
mov
in
jae
fisubrs
pusha
cmpl
ret
out
cmp
mov
mov
inc
xchg
fsubrs
js
push
pop
insl
pop
ljmp
fsubs
nop
rcr
mov
popa
cmp
fistpl
inc
inc
sbb
jp
orb
sti
rclb
adc
mov
in
enter
adc
ds
cmp
ret
mov
mov
and
lret
inc
outsb
jae
push
push
fcmovnb
les
outsl
das
xor
xchg
sub
hlt
stos
mov
and
mov
dec
movsb
mov
pop
out
mov
xor
xlat
mov
mov
adc
lods
and
xchg
stc
mov
out
cmp
dec
and
out
or
cs
shll
cli
jb
sarl
cmp
loop
cmpb
fnstcw
lods
push
bound
mov
xchg
xchg
xchg
cli
cmp
into
movsl
sbb
dec
jl
fwait
orl
nop
cmp
int
call
and
mov
mov
inc
fstpl
cmpsl
aam
jmp
jl
mov
jb
repnz
mov
and
and
sub
outsb
adc
or
out
movsb
and
into
iret
je
into
xchg
pop
add
pop
in
jge
xchg
and
es
push
les
mov
rorl
dec
incl
jl
sub
jle
rolb
mov
outsb
out
cmp
and
dec
adc
cmp
or
lahf
and
ljmp
loop
out
cs
in
aas
cmp
mov
mov
add
inc
adc
push
xchg
cs
add
or
aam
mov
bound
ret
or
sub
push
rolb
or
mov
cmp
pop
mov
and
fsubl
and
cmp
decl
cmp
hlt
addr16
adc
dec
cmpsl
adc
icebp
popa
lods
lret
loope
mov
xchg
fldt
dec
shl
jbe
aas
addl
flds
lcall
adc
mov
push
mov
movsb
sbb
or
xor
add
hlt
and
or
insb
lcall
mov
pop
adc
in
pop
or
push
xor
mov
nop
iret
mov
cmp
test
jb
jp
jns
cmpsb
jecxz
daa
cmp
push
sbb
js
inc
add
cmp
inc
popa
xlat
imul
mov
jge
xor
jnp
add
aad
mov
mulb
out
outsl
inc
fisubrs
out
sub
mov
push
aas
jg
mov
xchg
lods
inc
push
jg
out
mov
leave
fwait
lcall
jle
xchg
and
stos
xlat
outsl
pop
es
out
mov
ja
mov
shll
pop
sti
cmpsb
sub
xor
popf
sub
xchg
jecxz
inc
mov
out
push
adc
in
cmp
bound
cmp
adc
ja
ja
lods
add
sub
enter
mov
in
incl
dec
repz
lea
pop
ficompl
rorl
push
lds
xchg
or
lahf
pop
push
xchg
mov
sub
xchg
rcrl
mov
lret
jne
pop
es
add
fistps
jmp
push
pop
cli
xchg
mov
xor
out
mov
stos
jecxz
add
cmp
fldt
and
rcrb
add
fstl
mov
xor
in
xchg
stos
mov
jo
sbb
stos
lods
mov
mov
mov
pop
mov
leave
das
sbb
fstl
sahf
dec
xor
movsl
iret
aas
or
in
test
test
pop
fcoms
jae
nop
test
rclb
jmp
repz
enter
adc
mov
or
jp
xchg
fprem
inc
vpmacssdqh
jecxz
imul
dec
and
imul
dec
cmp
std
push
movsl
in
sti
sahf
add
pop
icebp
sarb
stc
add
test
push
adc
dec
fiadds
ja
incb
mov
jp
add
jmp
xor
pop
data16
dec
sahf
sahf
mov
out
xchg
dec
jge
out
imul
lods
es
xor
enter
adc
push
sub
and
out
int3
sbb
mov
xor
sub
jmp
dec
mov
push
jecxz
lds
xor
imul
jl
test
mov
mov
lods
push
lds
xchg
pop
push
das
shlb
pusha
fcomps
addb
jnp
pop
xchg
add
testl
push
sub
push
push
scas
into
mov
out
data16
mov
inc
mov
dec
es
lcall
push
push
sub
adc
add
jge
cmp
jmp
jg
xor
mov
add
out
stc
test
mov
repz
repz
xchg
jp
fstpt
into
int3
inc
js
icebp
cmpsl
xchg
mov
jmp
es
in
rolb
outsl
cmp
inc
sub
leave
push
jne
aaa
int3
lret
xor
push
pop
lahf
pushf
sub
mov
imul
fwait
out
push
cwtl
enter
inc
lcall
push
aaa
pop
xor
int
add
lret
jo
push
pop
je
inc
and
cmp
sbbl
ret
add
xchg
cmp
sarb
cmpsb
aaa
inc
insb
push
sub
mov
out
xchg
popa
out
and
pusha
mov
cmp
fs
in
push
push
sbb
pop
xor
ret
lods
mov
stos
push
sahf
lret
flds
or
mov
add
loop
je
nop
cmp
cld
pop
mov
sahf
lock
ret
adc
fincstp
inc
jb
push
repnz
test
mov
mov
in
cli
nop
icebp
rcll
pop
inc
mov
add
pusha
xor
hlt
movsb
or
or
ja
mov
out
lea
pop
jbe
and
and
push
xchg
jne
xor
xchg
call
jp
mov
outsb
add
inc
mov
bound
jo
dec
push
xchg
rorl
push
pop
adc
pop
cmp
or
bound
mov
lret
push
inc
lret
insb
push
andb
hlt
cmc
int
mulb
pop
ljmp
push
jae
movsl
adc
rcrl
cli
dec
ret
popa
xchg
lahf
inc
and
ret
fisttpll
or
dec
xor
getsec
add
mov
xor
icebp
inc
das
hlt
clc
testl
clc
das
sub
pop
aam
inc
dec
xor
mov
sbb
lock
jmp
test
jne
adc
dec
cli
fadd
in
ja
imul
cmp
pusha
pop
push
in
lock
push
jge
jl
or
aas
mov
xchg
push
dec
lods
sub
adc
in
pop
stc
stos
mov
mov
add
test
je
xor
xor
je
std
jo
aaa
pop
fcomps
fdivrl
xchg
cmpsb
or
loope
push
sbb
or
mov
iret
adc
fnstcw
fmulp
adc
inc
pop
out
rdtsc
mov
xor
aas
pop
jae
loop
in
jae
lcall
cmp
mov
lods
push
push
ljmp
or
scas
movsb
push
mov
jecxz
repnz
mov
cmovne
scas
jle
stos
inc
insb
in
movsb
mov
xchg
adc
jbe
jne
daa
movsl
jne
icebp
dec
add
ficoms
lods
lret
add
test
data16
xchg
mov
mov
daa
sbb
push
je
out
lods
xchg
adc
pop
pop
pop
jno
ljmp
jne
sti
cmp
xchg
call
jg
mov
iret
in
movsl
ret
movsl
lds
jl
adc
cmp
sbb
loop
mov
fistps
pusha
lret
test
mov
sub
in
shl
pop
jp
pop
push
rclb
or
adcl
adc
fxch
pop
mov
lea
xor
jb
inc
cmpsb
mov
fdivrl
xor
js
stc
in
cmp
lock
cmpsb
push
inc
sub
fcomps
mov
xchg
sub
and
push
ret
inc
xchg
inc
into
inc
or
popa
pop
hlt
sub
sub
arpl
mov
dec
push
sti
cmp
or
jno
xlat
lock
push
push
shll
and
push
fs
cmp
adc
xlat
sbb
inc
and
mov
nop
pop
jne
or
mov
sbb
add
data16
es
call
jbe
cmpsb
dec
or
fmul
hlt
push
inc
fisttpll
and
dec
shlb
jge
push
dec
jae
scas
ret
inc
mov
sub
rol
cmc
stc
loope
push
xor
dec
fs
pop
bound
fstps
ror
pop
stc
jmp
and
imul
xor
das
lods
pop
es
inc
fidivrl
lds
cmpsl
inc
push
xor
and
sbb
cld
jle
je
pop
icebp
jle
mov
push
in
fists
xlat
ja
enter
mov
ja
insl
scas
and
shll
aaa
leave
arpl
faddl
out
mov
push
shrl
mov
xlat
ja
push
mov
xchg
pop
inc
mov
add
fsubr
jae
add
cli
jbe
dec
xchg
push
push
mov
aad
inc
ret
cld
cmp
das
mov
rcr
push
sub
sahf
test
dec
xchg
mov
fisttps
scas
sbb
out
out
cmp
add
adc
push
push
or
jge
pop
dec
adc
movsl
stc
addl
imul
push
xchg
mov
sbb
into
lock
dec
or
xchg
aas
dec
dec
dec
pusha
or
js
xor
or
stos
nop
sbb
or
fs
in
clc
test
sbb
dec
dec
imul
decl
sub
testb
fisttps
inc
js
mov
repz
test
mov
or
cmp
arpl
test
xlat
mov
std
pusha
out
cmp
mov
mov
insb
mov
iret
dec
insl
dec
dec
jo
jnp
push
and
imul
adc
int3
pop
xchg
rolb
sbb
icebp
aam
and
cwtl
aas
or
cmp
push
push
mov
fcoms
shll
fnstcw
cmpsl
jb
sub
js
fidivs
push
stos
cmpsl
xchg
jl
cli
pop
mov
jae
test
hlt
sub
das
push
xor
or
jmp
lock
xor
subl
jae
loop
or
pop
push
xchg
jl
add
xchg
lea
cmp
outsb
rclb
push
in
pop
and
fs
dec
bnd
push
sbb
mov
add
jge
aaa
xchg
jae
or
adc
std
inc
cmc
cmp
xchg
pop
in
pop
mov
mov
idiv
jb
scas
jp
cmp
dec
jp
dec
adc
jl
add
clc
mov
mov
out
ret
xchg
inc
push
push
xchg
push
jo
and
mov
pop
and
push
xchg
stos
aad
xor
andl
mov
sbb
test
mov
mov
cmpsb
aad
mov
inc
popa
xor
je
xor
mov
shrl
push
cmp
sub
aad
sbb
leave
push
and
sbb
sub
pop
data16
clc
add
icebp
into
pop
inc
push
int3
cli
in
outsl
loop
mov
cmpsl
sbb
lret
out
mov
fcomps
cwtl
lcall
loopne
adc
seto
dec
add
inc
mov
pop
pop
in
outsb
cmpsb
mov
or
cmpl
xchg
stos
xor
sbb
data16
lcall
mov
out
lea
das
cmp
push
pop
adc
push
mov
cmp
pop
js
adc
xor
adcl
outsb
neg
jns
add
cltd
xor
mov
jnp
lea
ret
fistpl
outsl
mov
inc
xchg
sub
push
outsl
mov
and
xchg
lcall
xchg
sbb
pushf
gs
mov
rorb
ret
pop
jne
adc
pushf
sub
aaa
sbb
in
pop
cmp
std
ret
daa
jo
in
push
add
push
jmp
orl
jge
xor
or
mov
dec
jecxz
out
mov
mov
movsb
data16
out
inc
out
nop
clc
repz
inc
inc
aad
test
nop
loope
je
ja
mov
sub
mull
and
cmp
or
cmp
add
shll
xlat
inc
andl
bound
mov
shl
popa
addb
or
faddl
aas
jp
dec
jg
push
mov
fcompl
sub
scas
jmp
dec
insl
cmpsb
testb
sbb
ljmp
stc
loop
add
push
and
pushf
loop
loope
fidivs
cwtl
push
movsb
add
dec
mov
pcmpgtw
pop
lock
adc
test
rcrl
gs
push
mov
clc
sbb
xchg
movsb
adc
adc
jnp
mov
inc
data16
ds
sbb
stos
popf
jge
je
leave
adc
cmp
shlb
loope
sti
loopne
les
scas
jmp
or
rcrl
mov
fldcw
jl
into
bound
push
lds
mov
repz
movb
mov
mov
cmp
dec
data16
loopne
cs
sbb
stos
aas
mov
xorb
sub
scas
mov
mov
imul
xchg
push
mov
jl
fisubrs
mov
push
mov
imul
call
ret
push
pop
subb
or
pop
daa
les
cmpsl
pushf
mov
cmp
sbb
stos
push
cmp
js
lods
imul
or
jmp
mov
pop
aaa
xchg
mov
dec
jo
inc
es
clc
fs
out
inc
adc
out
ret
or
dec
icebp
movsl
jbe
pop
bound
roll
pop
stc
in
icebp
in
jle
shrl
cmp
aam
imul
pop
sbb
in
mov
cltd
dec
int
movsl
aam
pop
inc
aas
mov
rclb
pusha
aas
lret
test
cmpsb
ficoms
xchg
stos
scas
mov
mov
ret
jmp
outsb
ror
int3
rcrl
pushf
cmp
fs
enter
fs
mov
addb
cmc
adcl
pop
adc
les
inc
mov
test
xor
daa
inc
in
fistpl
or
push
and
clc
push
mov
daa
jmp
lods
mov
xlat
add
mov
and
mov
cmpsl
push
jmp
in
push
mov
push
xor
insl
jecxz
inc
in
mov
jns
insb
cmpsb
es
out
outsb
inc
pushf
ret
sub
call
xor
leave
or
mov
add
arpl
mov
es
in
sub
mov
mov
jmp
mov
ds
lds
cli
loop
mov
mov
sub
push
dec
xchg
push
adc
lds
ret
sbb
xor
pop
and
stc
icebp
shll
jecxz
lcall
sbb
fildl
cmc
or
lods
jp
xchg
lret
xchg
aas
xacquire
mov
push
sbb
and
push
xchg
sbb
xor
in
jl
mov
pop
sahf
mov
inc
pop
push
in
jbe
mov
xchg
or
xchg
inc
add
push
jno
arpl
mov
push
xchg
jmp
push
jae
sbb
scas
aas
in
sbb
ljmp
dec
out
push
cmpsb
push
adc
dec
mov
ficompl
sbb
sub
imul
mov
jns
xchg
jmp
inc
mov
loopne
ret
aas
in
mov
jge
aaa
and
or
sub
repz
imul
sub
cwtl
popf
shrl
test
pop
dec
mov
push
fidivrl
pusha
jne
js
xchg
and
push
mov
inc
mov
jnp
mov
xor
inc
movsl
scas
pop
enter
imul
rolb
iret
pop
sbb
stc
loopne
sbb
pop
mov
stc
fwait
psllw
pop
incl
cmpl
and
cs
shll
test
ret
jno
lock
mov
in
imul
in
xor
jne
mov
loop
call
fsubr
rcrb
pop
sub
push
mov
xchg
in
sbb
data16
insl
pop
adc
and
jmp
inc
jle
out
sbb
mov
mov
add
out
hlt
test
sub
or
inc
lock
fisttps
mov
std
outsl
xchg
div
sub
mov
fadds
xor
stc
xor
jecxz
pushl
enter
out
inc
jne
mov
sarl
sub
jl
fdivs
xchg
xor
add
adcl
movsb
orb
cmpsb
xchg
movsl
sbb
cwtl
pushf
or
xor
xchg
pusha
adc
lea
mov
flds
mov
lods
stos
xor
iretw
rclb
ja
push
notb
push
jne
js
std
std
test
sub
stc
mov
xor
dec
out
mov
xchg
mov
cltd
xor
mov
jmp
nop
fbstp
mov
push
aas
ljmp
iret
xor
faddl
pop
cmp
mov
xor
data16
inc
jle
movsl
imul
fidivs
push
mov
jae
dec
aam
mov
pusha
add
divb
xor
fdivl
test
loop
push
lret
jae
mov
inc
je
aas
inc
imul
xchg
in
sbb
loop
iret
enter
fcmovb
cmp
push
int3
xor
xchg
adc
push
arpl
sbb
bound
sub
arpl
push
dec
sub
xchg
nop
xor
popf
add
mov
cmp
dec
pop
push
mov
xchg
adc
cli
inc
add
inc
cmpsb
fists
mov
loope
xchg
test
daa
mov
inc
orl
out
lcall
xor
pop
scas
pop
pop
in
adc
xchg
test
mov
mov
cmpsb
imul
sahf
jg
es
xor
icebp
pop
add
push
daa
push
mov
faddl
jbe
stos
ljmp
sbb
ds
or
mov
loop
outsl
xchg
out
ficoms
jge
or
and
lds
scas
and
adc
adc
rcrl
mov
push
sbb
xor
mov
jl
loop
mov
out
dec
cmpb
clc
cs
mov
in
xor
inc
dec
push
push
fcmovbe
test
fstps
push
adc
or
notl
lret
repnz
push
fsts
xlat
hlt
dec
mull
mov
mov
es
inc
fldcw
and
stos
bnd
xor
pop
ret
jnp
sbb
jne
into
mov
cmp
mov
cltd
and
mov
dec
and
pop
cmp
lods
cmp
add
jl
jl
in
xor
mov
repz
ja
test
xchg
adc
mov
lock
xor
ret
movsl
jae
in
sub
imul
lods
add
inc
mov
xlat
ljmp
daa
lock
mov
cli
lock
mov
loope
adc
pop
je
out
add
test
in
fimull
mov
xchg
or
mov
mov
mov
mov
loopne
jno
cmp
mov
int
stos
jb
push
pusha
push
mov
and
add
xor
ret
mov
sbb
xor
mov
or
lcall
xchg
loope
cmp
dec
add
in
in
adc
pop
pop
adc
fs
or
pop
aad
mov
fcompl
and
jnp
sbb
or
jnp
mov
inc
call
lret
xchg
inc
fsubl
cmp
push
adc
xor
cmp
rolb
std
ret
xor
cmp
or
mov
ret
mov
cmp
pusha
mov
jno
mov
popf
pop
pop
insl
stc
pop
dec
add
pop
mov
or
mov
xor
ficoms
and
int
fldl
or
stos
ret
in
sub
mov
adc
std
dec
jge
shr
mov
push
scas
aaa
jp
aaa
pop
pop
jae
pop
or
repz
pop
fcmovbe
les
or
repnz
gs
mov
sbb
xchg
bound
call
mov
xchg
sbb
jo
xor
pop
xor
out
pop
dec
lcall
sarl
mov
fmul
cltd
loopne
sbb
icebp
push
loope
add
sub
mov
xor
test
sbbb
jmp
or
dec
flds
xchg
pop
add
in
or
outsb
xchg
pop
stc
mov
fidivl
jne
and
fs
mov
outsl
push
jo
shll
ret
mov
mull
lds
or
mov
xchg
popf
pop
cmc
mov
add
out
sub
sahf
push
mov
pop
ret
push
cmpsl
popf
aaa
test
xor
mov
adc
dec
in
jae
jecxz
repnz
adc
xchg
fildll
inc
mov
mov
inc
ret
rolb
negb
xchg
jmp
in
icebp
xor
sbb
sbb
aam
mov
je
stos
dec
jnp
push
jecxz
push
into
lock
or
pushl
xchg
xor
and
imul
push
rorb
sbb
cmp
ds
fisttpll
pop
inc
fsubrp
sub
movsb
xchg
bound
addr16
stos
pop
js
arpl
cmpsl
sbbl
xchg
enter
dec
xor
mov
ror
adc
dec
jle
push
rorl
mov
clc
in
test
jg
inc
lds
mov
add
daa
or
pop
orb
mov
out
xchg
sarb
adc
arpl
or
dec
sarb
jle
pop
iret
jns
pop
or
test
sbb
cmp
cmp
push
sbb
xchg
int3
fbld
jns
mov
arpl
dec
mov
pop
mov
adcl
xor
mov
out
pop
sbb
movsb
stc
jge
mov
dec
jl
pop
out
and
sub
rcr
adc
jne
pop
cmp
lea
flds
aas
repz
test
mov
pop
cmp
jge
mov
sbb
mov
mov
pop
bound
cmp
xor
dec
xlat
lods
adc
das
mov
outsb
je
sbb
aaa
arpl
loope
sbb
test
add
faddl
xor
mov
xchg
sub
mov
sub
pop
and
rcrb
sahf
mull
test
sahf
mov
jmp
mov
or
bound
jo
dec
ds
push
cmpsl
xchg
push
call
inc
inc
movsl
dec
jmp
mov
pop
ret
mov
cld
lahf
insl
iret
inc
add
bound
enter
and
ds
mov
inc
or
dec
rcll
push
push
movsb
mov
jne
incb
fidivrl
notb
add
or
jne
iret
mov
sub
insl
rcll
push
pop
pop
rcrl
ret
ljmp
xchg
sbb
repnz
mov
mov
incb
or
adc
leave
inc
xchg
mov
inc
rcrb
lock
sar
cmp
out
andb
jae
shrl
ffree
jl
orl
add
xchg
nop
dec
mov
add
push
xchg
sub
cmpsb
icebp
testl
adcl
test
mov
pop
insl
pop
rcr
clc
mov
cld
in
push
pop
cwtl
mov
lds
cld
lret
fisubs
jae
mov
cmp
aas
inc
push
nop
roll
mov
cmpl
cmp
push
adc
nop
lods
mov
pop
add
mov
jbe
ljmp
leave
mov
mov
aad
xchg
pusha
int3
cwtl
js
push
lock
cli
cmc
repz
pop
jae
in
test
fs
into
mov
dec
jle
cmp
cwtl
xor
jnp
rcll
mov
inc
pusha
repnz
inc
daa
cli
loopne
dec
cmp
test
lret
fisttpll
enter
aam
jle
int
inc
inc
daa
xor
in
mov
xor
adc
mov
cli
adc
and
fistps
push
shlb
mulb
jnp
push
insl
fldt
and
xor
mov
push
or
pop
fucomip
jle
aam
mov
fcomps
sub
sar
mov
fmul
push
pop
cmpsb
fwait
xchg
imul
cli
add
mov
mov
pop
mov
js
or
and
jbe
xchg
ja
outsb
cmp
shlb
movsl
adc
mov
aad
clc
jmp
xor
mov
xlat
scas
lcall
and
mulb
mov
adcb
lret
push
fldenv
cmp
push
or
enter
or
add
in
gs
sbb
aaa
mov
push
dec
mov
sti
adc
inc
adc
add
rolb
inc
xor
lcall
xchg
stc
pop
imul
adc
adc
into
popf
xchg
adc
and
push
sub
fistl
sahf
jae
stos
push
and
push
lods
cltd
pop
dec
cmpsl
sahf
in
pop
out
and
repz
cmp
arpl
jne
adc
mov
call
rcrb
je
mov
aaa
push
movsl
imul
in
mov
repnz
cltd
add
ret
xor
push
jge
loopne
sub
cli
insl
add
add
sub
in
repnz
mov
dec
inc
pushf
into
pop
ret
inc
jmp
pop
xor
cmp
adc
pop
fs
jns
push
cmp
xor
lret
call
ja
sbb
iret
or
adc
push
nop
sbb
sub
hlt
test
pop
pop
cmp
repnz
pop
or
stc
in
subl
fiadds
test
mov
mov
mov
stos
mov
stos
call
in
xor
sar
pop
loop
popf
adc
push
or
mov
out
imul
sbb
sub
hlt
add
cmpsl
mov
dec
in
mov
xchg
xchg
or
jns
out
stc
int3
test
mov
lret
daa
cmp
test
imul
rorb
or
stos
scas
add
or
jbe
sahf
aam
loope
test
push
pusha
add
insb
arpl
aad
fwait
shrb
lods
es
fstp
mov
xor
dec
sarl
out
xchg
jne
lcall
mov
jbe
test
jle
loope
add
add
xchg
sahf
je
xchg
dec
cmp
push
mull
inc
shll
loop
pop
jle
je
mov
fisubl
and
push
out
ret
xchg
and
cmp
xchg
scas
jmp
aad
sub
lcall
cmc
adc
sbb
aaa
inc
imul
aad
fiaddl
test
push
or
dec
mov
jno
mov
mov
pop
pop
add
add
pop
push
neg
mov
add
rol
push
lods
sub
xchg
data16
hlt
roll
or
mov
stc
ja
mov
jae
pop
cmp
pop
imul
sahf
cmp
popf
xlat
mov
les
fldl
jb
pop
mov
xor
add
xchg
adc
dec
push
sub
inc
loop
add
hlt
or
cwtl
inc
xchg
dec
xchg
lcall
in
cld
stos
in
cmpsl
lret
hlt
insl
mov
popa
cld
mov
xlat
mov
pushf
lcall
push
stos
ficomps
mov
dec
mov
iret
pushf
pop
icebp
adc
fisubrl
mov
sub
jecxz
jp
jle
jb
popa
jbe
mov
arpl
inc
loopne
daa
xchg
fbld
xchg
push
imul
into
int
outsb
lock
daa
es
popa
imul
push
mov
loopne
sbb
and
clc
ds
mov
inc
mov
xor
or
test
sbb
pop
mov
subl
test
adc
js
mov
std
ds
repz
outsl
jecxz
lods
jg
ljmp
fstpl
movsb
push
xchg
mov
in
dec
and
lea
lock
leave
xor
xchg
add
mov
sub
bound
xor
jle
or
addb
jmp
dec
mov
mov
jle
mov
das
sub
sbb
ficomps
cmpsb
loop
das
xchg
pusha
push
or
mov
scas
mov
push
add
push
sub
jmp
fisubl
dec
mov
lods
movb
aas
xchg
rcll
sub
add
das
insl
cmp
ljmp
lahf
cmp
mov
stos
scas
iret
scas
cmpsb
and
ret
fstps
dec
fdivrs
fiadds
jp
mov
jno
pop
and
in
loop
and
fwait
sub
iret
arpl
mov
bound
aam
push
stos
jbe
mov
adc
xor
scas
push
mov
mov
sbbl
popa
in
cld
hlt
xchg
mov
sbb
and
scas
ret
dec
inc
mov
cmp
jno
or
and
andb
sbb
scas
push
sbb
outsb
or
clc
jno
mov
adc
xchg
jge
sbb
mov
cwtl
in
inc
or
push
adc
mov
repz
movsl
pop
jecxz
push
mov
call
in
pop
cli
mov
cld
adcl
pusha
xchg
in
std
aad
xchg
add
inc
fs
out
loop
push
pop
outsl
mov
fwait
sub
ja
push
fmul
lcall
aad
xor
pop
mov
std
adc
push
xchg
inc
and
push
push
lock
std
mov
pop
sub
mov
adc
pop
pop
and
sbb
js
pop
adc
loop
movsl
or
push
in
and
mov
add
jge
adc
mov
cs
pop
cmpsl
insl
test
lret
xchg
sub
or
jle
or
mov
push
xchg
xor
ja
cmp
sahf
std
inc
jnp
popa
xlat
jmp
mov
mov
fidivs
andb
adc
or
cwtl
mov
mov
sbb
push
cmp
fwait
out
ror
and
aam
in
pusha
cmpsb
sbb
sub
xor
iret
and
xor
clc
inc
mov
cmp
adc
sbb
mov
cmp
call
arpl
inc
xor
mov
inc
enter
popf
notl
cwtl
xor
push
fists
jge
and
fnstcw
pop
lods
lea
push
adc
sbb
add
dec
cld
out
pop
loope
or
ss
outsb
jecxz
xor
mov
pop
cmp
xlat
add
dec
sub
imul
xchg
add
xchg
popa
mov
pop
add
fildl
mov
and
inc
push
mov
mov
cmp
in
mov
fld
inc
sub
add
mov
sbb
push
outsb
test
std
push
mov
mov
push
mov
and
scas
sub
stos
dec
popa
cmp
insl
jg
xorl
jmp
xchg
cmpsl
in
pop
out
icebp
leave
dec
cli
sub
in
push
clc
cmp
adc
popf
call
jmp
push
cmpsl
pusha
pop
cmc
inc
push
adc
xchg
and
and
push
dec
lea
testb
test
shrb
aad
cli
mov
fcomi
into
ret
imul
xchg
add
add
fcom
cltd
mov
pop
es
cltd
adc
dec
sbb
and
arpl
cmpsl
sbb
cmp
ficoms
dec
call
and
shrl
cmpsb
jl
mov
sahf
cmp
push
sub
int3
dec
sahf
data16
in
test
arpl
stos
ds
roll
insb
int
popa
jnp
jle
rol
sub
xor
movsb
notl
in
xor
imul
movsb
jne
inc
sar
push
lock
decl
inc
xchg
adc
addl
cwtl
add
call
cwtl
xchg
cmpsl
mov
ja
inc
scas
fldl
shll
and
jb
adcb
jl
mov
cld
add
sbb
inc
aad
xchg
adc
pop
movsb
inc
xchg
add
popf
push
pop
lea
out
je
lock
dec
adc
loop
pop
jb
subb
mov
xor
scas
lcall
cmp
mov
jbe
mov
or
loope
in
pushl
jl
stos
pop
adc
mov
ret
sbb
fstpt
push
dec
movsb
mov
ss
mov
adc
cwtl
dec
outsl
push
pop
mov
push
add
push
jge
sbb
pop
pop
push
lcall
and
test
repz
enter
inc
pop
fiadds
cli
fildll
orl
mov
lods
cmp
jno
pop
loop
pop
mov
sbb
xor
ror
jg
pusha
xor
mov
cmpsl
lret
push
push
mov
mov
rcrl
in
xchg
mov
fisttpl
mov
shll
jl
xor
jecxz
xchg
push
or
repz
jnp
outsl
push
adc
pop
pushf
xor
sbb
in
dec
test
sti
jns
mov
orl
cmp
mov
shll
push
xchg
mov
cmp
shll
in
inc
cld
xchg
cld
popf
lock
call
mov
aaa
push
mov
push
or
rorl
push
adc
clc
pop
dec
lods
xchg
add
es
lret
sbb
dec
dec
mov
jbe
and
jmp
adc
and
test
inc
in
jge
pushf
test
rclb
outsl
and
incb
cmc
jae
xchg
les
aas
xchg
cmp
add
adc
test
mov
cmpsl
into
fidivl
xor
sbb
or
pop
bound
loopne
fwait
push
xor
adc
xor
push
inc
dec
xchg
stc
lock
and
sbb
push
out
or
stos
enter
lahf
stos
xor
fistps
mov
adc
mov
std
mov
js
daa
inc
leave
popf
sbb
push
sub
test
jbe
pop
hlt
stc
xchg
out
dec
push
stos
push
jmp
inc
roll
test
cmp
sub
rorl
je
dec
gs
xor
pop
mov
ret
sub
int3
js
and
in
fsts
dec
dec
xor
enter
jae
int3
mov
std
add
repnz
pushf
mov
pusha
inc
jnp
lcall
call
fs
sahf
xchg
and
push
cmp
xchg
cmpsl
div
dec
aas
loop
pop
or
je
mov
adcl
pop
shlb
sar
fistps
fdivs
jns
and
bswap
mov
cltd
fimull
pop
lahf
inc
mov
pop
je
sbb
mov
into
inc
pop
hlt
adc
in
sub
leave
push
jmp
xor
push
xor
mov
stc
xchg
jne
bound
addl
xor
sbbb
nop
pop
adc
push
pop
lcall
shll
push
hlt
jbe
pop
dec
lret
pop
or
icebp
aaa
sub
dec
pop
push
xor
jp
in
mov
subl
xor
sbb
pushf
xchg
xchg
add
xor
push
inc
cltd
jg
and
scas
ret
out
push
jae
mov
lahf
gs
dec
add
mov
bound
xchg
pop
adc
sub
dec
jo
mov
aad
fistl
push
andl
jmp
adc
dec
xor
mov
xchg
add
aam
cld
lock
add
jmp
cmc
sbb
adcb
mov
add
shl
lea
lods
cmp
enter
fnsave
dec
test
add
jle
cli
dec
int
out
mov
stos
pop
dec
xchg
das
mov
sbb
add
sbb
les
sbb
push
test
subb
mov
jns
stos
inc
adc
les
and
sbb
test
push
inc
out
sarl
cwtl
mov
cld
js
mov
or
add
push
repz
fwait
rcll
mov
cmp
push
push
popa
adc
cli
mov
xor
add
xchg
or
mov
inc
jp
int
aas
dec
daa
inc
mov
push
jl
dec
cmp
push
sub
std
idivb
fwait
aaa
mov
dec
push
popa
adc
cmpsb
test
mov
shr
mov
in
stos
cmpsb
stos
dec
push
bound
cltd
and
cmp
or
in
es
rcr
cmp
sub
iret
pop
mov
mov
mov
push
test
dec
cmp
adc
shl
test
xchg
cmpsb
xor
or
lods
jle
in
cli
or
outsb
push
test
xchg
and
add
in
cmp
xchg
pop
arpl
int3
cs
sub
mov
into
gs
in
lock
leave
jae
lock
mov
call
arpl
call
sbb
test
mov
ret
jmp
lods
lcall
stos
jbe
xchg
or
shll
lcall
adc
add
int3
popa
cmpsl
scas
subl
pop
notl
push
repz
and
push
push
mov
pop
sar
ljmp
stos
arpl
dec
add
xor
mov
lahf
movsb
or
popa
out
loope
fnstsw
or
leave
inc
test
shrl
sub
cmpsl
adc
cmc
in
cli
lahf
ret
ljmp
sahf
mov
or
mov
push
in
add
or
or
jne
pop
setge
dec
xchg
lods
test
fs
leave
mov
sarb
xchg
lcall
inc
sub
xor
cmp
stc
push
pop
cmp
int3
cmpsb
mov
test
loop
mov
adc
xchg
and
fisubrl
int3
mov
xchg
cmp
scas
outsb
sbb
push
sbb
ret
out
xor
sub
lret
sub
std
pop
cmp
cs
adc
rcrl
jne
sbb
out
out
cmp
addr16
or
or
jne
mov
xchg
xchg
sti
cmp
and
sub
sbb
dec
cmp
push
rcll
addr16
addr16
insb
push
xchg
pop
dec
sub
gs
icebp
cmp
push
xor
enter
xchg
subl
mov
test
adc
jns
and
loope
cmpsl
ds
push
stos
sti
pop
inc
test
pop
jmp
repnz
cs
loope
mov
jge
lock
scas
rcrl
jne
inc
add
sbb
in
jnp
xor
push
sbb
mov
push
out
out
stos
push
mov
jmp
sbb
sbb
ds
mulb
push
adc
jo
jmp
dec
into
mov
push
pushf
or
pop
lds
xor
out
and
add
stc
fcoms
dec
add
or
mov
sbb
mov
cmp
cmp
ss
xchg
scas
mov
movaps
cs
movsb
ret
addr16
call
jecxz
sbbl
testl
and
nop
shrb
fwait
xor
mov
mov
dec
inc
mov
sahf
xchg
push
aaa
imul
test
dec
sub
mov
iret
jbe
test
push
out
mov
aam
xchg
mov
inc
iret
jp
movsl
fdivrp
sub
mov
pop
xchg
rcr
mov
mov
cs
test
lock
imul
aas
addb
or
mov
dec
call
dec
xor
pop
insb
push
test
xchg
add
push
pushf
mov
imul
test
push
roll
outsl
xchg
push
xor
in
call
lret
jb
daa
cmp
test
nop
mov
mov
js
das
xor
or
ljmp
dec
push
mov
sbb
inc
repnz
pop
sub
lcall
fildll
out
add
imul
adcb
mov
movl
lea
jo
pop
lret
repnz
lods
cmp
xor
cmp
dec
std
xchg
out
pop
mov
gs
xchg
ret
lcall
and
dec
xlat
stos
dec
pop
inc
dec
cs
mov
dec
sbb
mov
jno
std
dec
jge
mov
insb
dec
setns
fcomps
sbb
push
jecxz
push
and
fiaddl
xchg
dec
clc
jmp
scas
stos
inc
lahf
xlat
js
shl
mov
popf
inc
stos
fldt
pop
daa
sarl
es
sub
or
repnz
testl
adc
xlat
cli
push
out
xor
mov
popa
loope
push
sub
mov
jmp
mov
adc
adc
jae
xor
stos
cwtl
add
les
and
rolb
fildl
lret
sahf
gs
test
andl
push
xor
sysexit
aaa
push
cmpsb
push
insb
in
jo
dec
fs
out
lods
ljmp
lret
dec
mov
mov
pop
mov
dec
insl
bound
jnp
dec
or
pop
cltd
movsl
aaa
sbb
shlb
insl
fwait
jbe
jp
mov
lcall
pop
dec
in
mov
outsl
adc
icebp
in
cmpsb
out
mov
xchg
or
cli
jo
cmp
aam
xor
pop
cmpsb
jle
dec
push
out
adc
push
js
xorb
sar
fistpll
mov
and
jne
data16
scas
jo
ljmp
rorb
aaa
insb
dec
sub
or
mov
inc
fisttpl
fstps
je
xchg
xor
pushf
push
mov
outsl
imul
fsubrl
ret
addb
fwait
push
stos
pop
jb
sbb
imul
negl
xchg
dec
daa
popf
sbb
imull
in
mov
setb
push
push
es
sub
jne
cld
cmp
mov
enter
lret
mov
lcall
xorl
push
sbb
les
mov
int
data16
subb
add
mov
xor
push
adc
mov
or
cmp
lret
out
icebp
sub
imul
movsb
mov
mov
int
inc
jae
and
cli
cmp
xchg
fs
iret
aam
pop
mov
clc
jge
xchg
sub
out
call
rcll
push
mulb
inc
test
and
out
and
pop
sbb
loopne
pop
cmp
add
rorl
movsl
add
mov
mov
mov
pop
jbe
stos
mov
sbb
xor
sub
inc
jno
and
imul
mov
jg
das
xchg
xchg
xor
clc
imul
mov
pop
cli
es
lcall
rcl
idiv
inc
add
addr16
lcall
lahf
adc
fdivs
push
push
mov
loope
cmp
or
jae
xchg
dec
adc
shrl
cs
out
test
int
add
xlat
push
mov
std
cmpsb
and
mov
iret
add
imul
mov
and
add
pop
xlat
rcrl
gs
mov
fcomps
push
add
mov
mov
mov
fimull
data16
ja
fdivrs
out
test
subl
int
cmpsl
std
or
dec
xchg
push
repnz
cltd
fisttpl
test
pop
push
push
push
stos
or
pop
mov
sarb
mov
arpl
data16
sbb
cmpsl
iret
pop
xor
and
sbb
mov
or
incb
mov
adc
inc
push
cmpsl
cmc
sbbl
in
testl
mov
xchg
dec
xchg
jbe
cmc
lods
cmc
cltd
mov
cmpsl
ljmp
or
pop
mov
xor
xchg
addr16
es
jge
mov
std
cwtl
xchg
enter
xor
popa
lret
movsl
mov
adc
xchg
pop
fisttps
pop
lds
add
push
sbb
pushf
sub
sbb
adc
lahf
hlt
outsb
or
lret
scas
pshufw
stos
es
pop
pop
sbb
sub
mov
and
xchg
jl
sbbb
sbb
into
mov
mul
andl
ljmp
cmpsl
cmp
mov
mov
xor
fstps
fisttpll
mov
xor
loopne
sbb
sub
mov
add
push
fnstsw
fsubrs
sbb
and
adc
pop
rclb
hlt
test
xor
jecxz
aam
pushf
mov
sti
inc
fdivrs
in
mov
mov
mov
scas
notb
xor
stos
adc
cmc
xchg
jno
fisubl
je
inc
or
dec
cmp
mov
stc
lret
shll
shll
and
mov
mov
xchg
cmp
cmp
mov
jp
shll
xchg
fnsave
fadds
loopne
cli
fcomps
addr16
loopne
test
stc
in
out
push
aad
fdivrl
mov
pop
mov
inc
sti
mov
pop
mov
add
dec
mov
add
push
add
lock
push
sahf
mov
sub
sub
pop
lcall
push
mov
sarl
andb
and
rcrb
sub
icebp
mov
mov
faddl
mov
scas
xchg
mov
fmuls
xchg
into
insb
mov
xchg
lea
out
jne
loopne
adc
jp
sbb
loope
pop
lods
mov
rclb
add
add
arpl
data16
sub
jbe
stc
mov
fldl
dec
loop
call
shrl
jae
and
aam
clc
out
sarl
mov
mov
or
add
ja
pusha
lret
xchg
negl
fldenv
lcall
ljmp
inc
movsb
adc
lahf
jns
repz
call
push
push
cltd
ljmp
movsl
or
mov
divl
xchg
movsl
push
dec
mov
push
aad
and
and
outsl
xor
loop
xchg
insl
stos
stos
xor
jae
mov
jnp
adc
fdivl
adc
inc
add
sbb
adc
push
lock
stc
push
xor
flds
jg
lock
cmp
in
push
in
ljmp
cmp
mov
fs
cld
add
dec
inc
mov
insb
adc
ffree
inc
rsqrtps
test
jae
xchg
jns
dec
dec
addr16
lods
ss
xchg
adc
cmp
das
xor
jb
repz
fs
mov
pop
mov
aad
push
or
scas
or
xor
xor
xchg
sbb
enter
push
fcmovne
inc
jb
daa
mov
and
push
mov
hlt
in
pusha
cld
fnstenv
pop
or
in
push
fwait
xor
fucompp
lods
daa
pop
lcall
sbb
inc
cmp
cld
inc
sbb
xor
dec
je
add
xchg
aaa
inc
call
push
pop
push
lods
das
or
mov
sti
mov
inc
pop
jb
pushf
ss
pop
pop
inc
pop
aas
cwtl
iret
push
nop
mov
push
shlb
je
stos
je
adcb
imul
jbe
jo
in
or
xor
in
xlat
nop
rorl
or
jae
fcmovu
cld
std
sbb
or
cs
rorb
inc
jns
int3
xchg
adc
adc
and
or
and
jnp
repz
leave
lea
cmp
or
mov
arpl
dec
outsl
mov
jp
cltd
lods
push
or
cli
add
sub
lods
enter
jo,pn
adc
divl
cmpsb
mov
pop
mov
mov
sbb
pusha
jl
out
mov
mov
addr16
jmp
hlt
icebp
jb
nop
arpl
pop
fdivrl
test
ret
and
cs
hlt
push
fnsave
addl
xlat
in
mov
notl
out
xor
xor
hlt
in
and
mov
andb
dec
cmp
add
or
jne
cmp
sbb
test
cmc
and
lea
mov
xchg
mov
fs
pop
adc
lcallw
adc
aad
arpl
fs
xor
addb
pop
adc
xchg
adc
sahf
into
mov
fsubrs
call
fwait
sarl
and
test
fisubrl
adc
iret
pop
enter
or
in
pop
shlb
xchg
fs
pop
mov
mov
and
push
fidivs
aad
inc
pop
ret
mov
test
ja
enter
pop
xor
imul
sub
and
cli
mov
push
out
mov
and
aas
pushf
or
dec
call
cmp
mov
int
aas
mov
loopne
mov
jns
inc
mov
and
in
mov
jl
divl
add
inc
nop
pop
lds
and
insb
mov
pop
lahf
pushf
call
push
test
xor
sti
into
cwtl
adc
sbb
xor
iret
push
out
push
jp
out
dec
dec
and
dec
inc
dec
cmc
inc
inc
sbb
cmpsb
mov
cmp
lods
lods
ret
repnz
xlat
dec
lods
je
cmpsb
push
in
jge
mulb
dec
xor
sbb
data16
popf
mov
jnp
sbb
mov
out
cmp
cltd
stc
outsb
jbe
mov
andl
pop
cmpsb
hlt
mov
rorl
rol
loopne
aad
sbb
pop
ret
mul
and
clc
jo
scas
mov
sahf
and
lret
lcall
out
mov
xchg
cmpsb
popf
mov
ja
mov
shl
orb
cmp
lds
into
test
lea
or
das
imul
repz
outsl
je
lahf
test
sub
sub
push
pusha
imul
rolb
scas
push
out
push
sub
std
andl
lcall
das
pop
pop
insl
outsl
or
scas
jl
mov
inc
aas
xchg
inc
cmp
cmp
ret
pop
pop
mov
pop
xchg
test
xchg
loopne
pushf
pop
dec
lods
data16
fidivs
mov
sub
push
bound
fsubl
shlb
pop
movsl
addr16
or
lds
shll
loope
adc
out
daa
arpl
push
xor
xchg
inc
dec
cltd
movsl
scas
cli
mov
popf
push
insl
sbb
les
in
data16
cmp
adc
sbb
movsb
pop
push
cltd
ret
dec
das
aad
xor
leave
pop
or
jl
mov
mov
xorl
add
dec
xchg
loope
movsb
push
xor
movsl
loop
pop
enter
sahf
es
movsb
jp
ds
aad
dec
push
call
popf
mov
and
cmp
cmc
leave
ffreep
cmp
jnp
rcrb
bound
cltd
pop
and
out
mov
pop
mov
dec
mov
test
cs
push
popa
jg
xchg
and
adc
xchg
loope
add
daa
cwtl
test
imul
cmpsb
sbb
push
adc
testl
mov
sbb
jae
flds
push
pop
or
stos
jp
fst
fisttps
dec
les
repz
inc
call
mov
mov
mov
int
jo
shr
loopne
and
jb
dec
dec
pminsw
or
sbb
adc
mov
js
imul
mov
lea
aas
jne
xor
mov
test
xlat
pop
aad
xchg
add
loopne
test
lods
sub
jle
pop
sub
sbb
popf
mov
hlt
in
add
ret
out
into
push
fstps
pop
loope
dec
sub
xchg
pop
sbb
sahf
emms
cmp
and
pcmpeqw
push
push
je
pop
mov
mov
bound
ljmp
cwtl
inc
add
jno
pop
stos
adc
mov
or
aaa
jb
iret
mov
imul
or
or
into
pushf
movsl
test
xor
mov
xor
mov
jbe
rol
shll
leave
push
nop
pushf
repnz
mov
pop
jge
bound
xchg
push
insb
add
cmc
adc
dec
test
imul
icebp
and
jno
fwait
push
cs
sub
jb,pn
sbb
es
insl
call
mov
popa
and
mov
dec
sub
and
adc
insl
push
call
pop
mov
push
hlt
cmc
xor
sub
sarb
mov
jb
dec
out
outsb
leave
je
pop
imul
push
popf
rorb
mov
cli
stos
or
fisttps
scas
xchg
lock
test
inc
paddb
cmpsb
mov
scas
mov
dec
in
xchg
lret
xlat
pop
jnp
mull
in
aaa
popf
imul
in
fdivp
push
and
loopne
inc
sub
jmp
sub
stos
add
out
hlt
xchg
je
cld
cmp
stos
sbb
iret
ljmp
stos
adc
cld
enter
inc
cli
jo
test
jl
call
and
rclb
imul
or
inc
push
jle
mov
mov
dec
shll
cmp
test
js
jecxz
out
mov
fwait
rorl
mov
and
dec
cmp
sub
pusha
outsb
shrb
cmp
push
mov
jp
dec
xlat
push
and
cmp
xchg
cltd
lods
xor
ret
dec
imul
adc
fadds
cmp
sarl
or
lcall
add
sbb
jecxz
ljmp
sub
push
adc
xchg
insl
or
xor
es
xorl
test
scas
sub
loop
fcomps
cmp
cmp
stos
or
cmc
maskmovq
hlt
mov
mov
push
scas
mov
sub
hlt
cmp
pop
aad
mov
test
out
sub
daa
cmp
xor
fwait
bound
iret
jp
stos
es
adc
cmp
mov
test
and
sub
dec
adc
mov
aaa
cmp
mov
and
add
xchg
push
sbb
mov
imul
or
pop
sbb
lods
cs
sti
lods
dec
test
push
in
sub
and
mov
dec
sbb
cwtl
push
fists
repnz
lock
mov
enter
mov
ss
or
mov
inc
and
sbb
mov
ficoms
je
movsb
call
ret
add
ja
aaa
dec
pop
mov
and
cmp
std
ljmp
mov
pop
imul
sbb
xlat
mov
cmp
pop
xor
addr16
mov
insl
and
sbb
adc
les
sub
inc
cmc
jb
fsub
push
cs
push
in
je
fiaddl
shlb
inc
test
push
mov
xchg
in
or
sub
mov
sub
xchg
enter
push
mov
inc
pusha
fcomps
jge
nopl
sbb
movsl
fwait
add
xor
or
inc
jg
sub
pop
sub
loope
add
fstps
les
mov
mov
push
and
das
pop
dec
int
pop
pop
push
sbb
pop
push
xor
jns
test
cmpsb
cmp
jle
push
mov
repnz
cli
stos
and
test
xchg
jb
rcr
je
mov
sub
cmpsb
je
loopne
push
add
dec
popf
aad
pop
sub
frstor
adc
dec
nop
and
subb
fsubs
jmp
and
dec
mov
xor
inc
xchg
into
pop
mov
mov
mov
dec
gs
aas
gs
cmpsb
outsl
scas
xlat
mov
ret
pop
pop
das
int
push
cmp
xchg
xchg
pop
push
insl
mov
dec
cltd
mov
dec
mov
cmp
gs
mov
dec
adc
insl
out
fimuls
aad
or
repnz
pop
cmp
mov
sbb
mov
mov
dec
daa
inc
iret
inc
sub
add
mov
or
mov
nop
mov
cs
xor
adc
xchg
scas
fnclex
mov
sbb
jge
and
into
xor
pop
in
repz
mov
out
jb
mov
add
xchg
xchg
xor
ljmp
shrl
cmp
pop
adc
sbb
mov
loopne
or
vcvtdq2ps
sbb
jg
mov
mov
imul
pop
jmp
lea
adc
mov
pop
jae
adc
xor
jg
push
mov
pop
mov
push
fists
dec
mov
push
in
inc
les
call
lds
out
aad
out
pop
pop
and
xor
xor
imul
mov
xchg
xchg
lea
mov
fiadds
in
push
and
pop
and
mov
sbb
mov
or
sbb
movsb
pop
dec
inc
cltd
xchg
fnstsw
jnp
add
out
bound
out
push
pop
mov
out
xor
mov
mov
inc
std
adc
dec
call
fwait
mov
add
cs
xchg
out
fsubl
jmp
or
lds
lds
push
push
repz
mov
in
nop
push
push
jp
dec
js
cld
subl
leave
test
cli
clc
and
dec
mov
inc
add
or
push
adc
out
mov
mov
cmpsb
rorl
and
adc
pop
push
pop
mov
out
out
mov
addl
mov
sbb
or
stos
shrb
fs
loop
lds
data16
aam
jo
in
push
daa
out
mov
pop
cmpsb
or
fcoml
aad
or
gs
dec
lea
mov
or
fwait
xchg
xlat
and
jg
hlt
jp
push
and
sbb
je
push
pop
gs
ficoms
xchg
movsl
mov
cmpb
cld
and
pop
dec
fstpl
xchg
push
iret
adcb
add
jg
jo
and
adc
cmp
adc
shlb
mov
add
mov
cmpsl
mov
arpl
pop
add
cmp
lahf
mov
insl
mov
pop
push
jbe
cmp
push
incb
test
push
rcll
dec
jnp
jae
rep
movsb
jp
fcomi
cmc
pop
add
mov
push
in
jg
sti
in
mov
push
hlt
sbb
add
cmp
sbb
inc
pop
movsl
inc
sahf
xchg
pop
cmpsl
ret
imul
in
cmp
aam
rol
inc
repz
cmp
jl
imul
sbb
push
sbb
cmpsb
mov
mov
mov
jl
sub
sarl
imul
sti
add
fnstcw
push
xor
int
jge
push
pop
or
add
cmp
aam
sbb
mov
clc
mov
iret
je
ret
sahf
stc
bnd
jb
cmp
cltd
movsl
mov
aam
testb
int
clc
in
test
loop
mov
cmpsl
popa
out
xchg
jg
scas
lock
pop
push
lea
or
sub
mov
aam
xchg
stc
mov
jmp
xor
pop
mov
sti
out
movsb
pop
dec
es
mov
cmp
push
shl
cmpsl
in
mov
ja
mov
neg
enter
ret
test
das
jge
sbb
sbb
je
test
mov
andb
xchg
mov
into
lret
iret
inc
leave
in
ficoml
adc
add
pop
sti
and
outsb
mov
xor
inc
movsb
gs
xchg
dec
mov
fisttpll
xor
push
subl
loope
lds
out
dec
dec
scas
push
popa
fldl2e
aas
sub
cmp
in
bnd
movzwl
or
dec
sbb
jle
adc
pop
inc
push
push
mov
jl
sub
loop
sbb
shrb
xchg
daa
cli
js
cmpsl
into
adc
mov
or
lcall
dec
cs
add
pop
mov
cld
lods
lock
push
psubsb
xlat
and
daa
icebp
into
push
or
clc
aad
jecxz
dec
subb
mov
ss
fwait
push
test
ljmp
aad
jbe
jnp
or
add
inc
cli
jecxz
imulb
xchg
fucom
jge
xor
into
sub
xchg
out
pushf
xchg
js
repz
stc
sub
fdivrs
pop
cmp
push
sub
mov
xchg
iret
dec
repz
dec
jg
xchg
int3
cltd
shl
mov
les
je
jo
cli
jecxz
mov
cmp
mov
dec
mov
inc
mov
push
push
push
and
pop
pushf
and
sbb
sahf
outsl
push
pop
mov
andb
xchg
lods
and
push
xor
mov
fisttps
pop
mov
xlat
pop
iret
inc
push
out
xchg
outsb
loop
mov
test
ljmp
into
push
sbb
ret
cmc
sub
or
push
aam
push
scas
jne
jno,pt
cltd
adc
pushf
push
and
push
jecxz
ret
lea
inc
ljmp
jns
mov
add
inc
xor
jp
in
imul
sbb
scas
sub
sub
jle
loopne
stos
jb
lahf
pusha
xchg
mov
mov
loopne
pop
mov
jo
leave
outsb
xchg
bound
ljmp
inc
cmp
push
jge
mov
add
xchg
mov
adc
sahf
nop
pop
lds
andb
adc
mov
icebp
mov
outsb
push
inc
imul
pop
add
cmc
popf
and
pop
push
mov
mov
mov
popf
mov
inc
ret
inc
inc
mov
or
sbb
dec
shll
pop
leave
sub
js
outsl
inc
dec
and
clc
dec
sbb
or
sbb
mov
repz
or
loop
gs
jge
xor
cmp
sbb
pop
inc
or
lret
cs
or
clc
cmpsb
stc
or
and
sbb
mov
xchg
jecxz
les
and
and
jge
jne
pushl
xorb
dec
xor
dec
lret
sbb
xchg
test
cmpsl
sub
fbstp
sbb
stos
and
dec
and
js
inc
and
gs
es
ja
icebp
push
int3
dec
and
sti
jbe
clc
mov
jp
iret
repnz
idivb
in
call
ds
or
or
dec
jg
cld
jne
fs
jmp
cmpsb
inc
push
dec
shll
jle
arpl
xor
hlt
dec
xchg
ljmp
and
mov
ja
test
mov
iret
fcomp
adc
cmp
andl
jb
lods
outsb
xor
insl
push
mov
ds
repz
sub
dec
pop
dec
jns
mov
add
xor
sbb
xor
into
mov
sub
xor
popa
movsb
mov
mov
inc
mov
or
xor
out
cli
sub
cli
pop
mov
jp
icebp
xchg
inc
sbb
mov
jge
sbb
iret
imul
ljmp
push
pop
and
pop
nop
mov
xor
mov
shr
sbb
lock
inc
mov
int3
loope
cmpsl
cmpsb
aas
jecxz
std
adc
out
fs
das
xchg
xchg
leave
xchg
in
or
sbb
xor
loopne
jp
pop
ds
add
je
addb
xchg
out
sub
inc
ret
lds
mov
subb
imul
push
cmp
shlb
addl
aaa
loopne
stos
mov
imul
aam
mov
lret
xor
adc
cmp
xchg
xchg
imul
dec
cld
pop
popa
icebp
xchg
push
or
mov
jle
inc
stos
adc
jnp
sbb
adc
mov
les
pop
std
cmpsl
adc
jle
insl
scas
pop
lret
mov
mov
lcall
mov
icebp
dec
sub
dec
outsl
push
sahf
loop
cmp
mov
popf
mov
pop
popf
push
test
in
insl
jo
mov
cmp
popf
mov
movsb
popa
mov
adc
orb
push
sub
xor
in
sub
icebp
jmp
push
fmuls
mov
ljmp
and
xchg
popf
pop
lods
mov
dec
mov
inc
mov
and
cmp
adc
fstl
and
repz
sti
mov
cmp
mov
mov
mov
mov
dec
repz
cmp
add
test
inc
mov
xorl
repz
sub
jno
in
mov
scas
adc
sub
popf
mov
cmp
dec
addr16
dec
push
movsl
mov
sub
pushf
incb
cwtl
push
int
rcrb
sub
adc
inc
in
cmpxchg
lret
push
divl
jno
lret
fstpt
sub
nop
inc
pop
ficompl
xchg
mov
data16
push
push
mov
lods
adc
fs
cld
sbb
inc
int
mov
scas
xchg
popa
je
inc
xchg
in
gs
outsb
stos
sti
iret
mov
ja
ds
lea
into
lret
add
scas
xchg
mov
xchg
pop
cmp
inc
sbb
and
int3
sub
fbld
or
jecxz
xchg
xor
and
leave
sub
mov
pop
jecxz
lods
mov
push
mov
mul
mov
inc
imul
repz
in
stos
fwait
and
push
test
aad
sti
mov
sub
mov
movsb
xchg
jmp
sub
push
scas
xlat
xor
adc
scas
pushf
rclb
subl
jno
sub
cmp
xchg
jecxz
aad
sub
push
lcall
sahf
arpl
call
scas
cli
xchg
xchg
pushf
hlt
mov
pop
hlt
jo
out
pop
out
fcomps
and
sarl
add
add
inc
dec
iret
mov
mov
and
xchg
adc
jno
xchg
int3
sbb
mov
addl
and
loope
xchg
ret
js
aas
sbb
mov
stc
cltd
inc
jecxz
jne
aad
and
push
jb
leave
jg
dec
inc
stc
mov
cmp
xchg
mov
sbb
xor
inc
sub
das
ficoms
inc
iret
lret
adc
push
xor
movsb
push
lret
and
pop
dec
inc
inc
add
les
or
adc
push
incb
into
inc
push
ret
jmp
sbb
sub
imul
ret
mov
cmp
jns
cld
xor
idivb
in
jmp
movl
mov
bnd
dec
add
shlb
ret
fprem1
xor
fmull
xchg
sub
cmpsl
sbb
les
pop
xchg
lds
es
popa
pop
xor
lods
lahf
cld
test
mul
adc
sub
push
or
fs
inc
pop
outsb
mov
jnp
xchg
jmp
insb
push
ja
dec
js
sub
filds
fistpll
fldenv
scas
cmpsl
sub
inc
xchg
adc
pop
dec
hlt
loop
sbb
in
js
mov
fiaddl
add
mov
pop
pop
pop
fdivl
daa
aad
and
insl
push
mov
fwait
lret
cwtl
mov
xor
sahf
test
into
ljmp
dec
jle
ret
cmp
fdivp
mov
xor
xor
mov
mov
inc
pop
jge
inc
out
jmp
pop
mov
inc
call
nop
push
add
ret
loopne
lret
jno
pop
mov
in
adc
aaa
mov
jl
arpl
cmp
clc
cmc
push
sbb
scas
jg
push
and
ret
inc
shll
push
andl
scas
lods
das
mov
addl
cmp
fbld
and
add
push
jg
mov
fcomps
sbb
hlt
jae
repnz
bound
xchg
iret
push
inc
adc
lcall
into
into
adc
test
push
jmp
adc
mov
fildl
dec
fildl
in
jg
mov
dec
pop
mov
jecxz
push
test
repnz
stos
sbb
push
mov
aad
lds
mov
test
out
mov
pop
pmaxub
jns
call
and
das
cwtl
mov
add
adcb
or
fwait
int3
jb
rcl
ret
in
dec
fdivp
sbb
xchg
pop
ja
inc
repnz
fldl
sub
lock
outsb
xor
add
jmp
push
dec
inc
leave
add
pop
test
xchg
lods
and
std
out
push
pop
add
repnz
out
mov
add
out
aas
jg
out
jg
insb
loope
lods
inc
repz
pop
push
arpl
stos
push
addr16
hlt
iret
rcll
mov
iret
fadds
or
iret
aam
cwtl
mov
pop
xor
sti
cmp
fstl
cmpsl
cmp
pop
adc
or
dec
sub
mov
ss
cmp
inc
inc
movsl
xlat
shr
push
adc
inc
mov
inc
jno
push
adc
inc
mov
adc
cmp
jecxz
movsl
enter
je
mov
insl
or
add
lahf
xchg
movsl
es
mov
aas
ja
lods
mov
cmpb
sbbl
lret
leave
scas
pop
mov
fs
fwait
jae
cwtl
je
xor
inc
pop
outsl
stos
in
dec
aaa
jns
ja
mov
add
jae
lds
and
hlt
out
dec
adc
leave
fidivl
push
jmp
cmpl
inc
les
add
push
sbb
pop
hlt
sub
push
inc
lret
pop
cmp
inc
insb
inc
int
adc
mov
push
das
mov
cs
pop
fnsetpm(287
pop
outsl
push
xchg
fidivrl
jo
dec
cli
sahf
aaa
roll
popf
fwait
inc
xor
cmp
roll
idivl
loop
sub
xchg
cmp
ds
pop
add
shll
je
adc
dec
xchg
aam
cmp
fstl
insl
cmp
test
out
mov
lea
mov
je
mov
outsl
inc
push
imul
mov
leave
mov
xchg
loop
and
or
pop
outsl
jnp
outsl
adc
cmp
pop
adc
lods
inc
ret
das
xchg
push
inc
stc
call
test
imulb
test
cmpsl
fcomps
inc
push
negb
pop
pushf
test
add
fsts
lret
aam
add
daa
xchg
popf
std
imul
xchg
repnz
cmp
push
and
fimuls
pop
jecxz
inc
sbb
add
int3
and
or
add
je,pt
xor
stos
inc
mov
or
stc
cmp
lcall
add
jge
mov
jno
sbb
rcll
push
inc
and
es
pop
jne
aaa
jbe
loopne
pop
push
outsl
shrl
sahf
sbb
mov
push
cmp
ret
js
mov
int3
pop
mov
add
mov
arpl
clc
or
mov
lahf
loopne
jns
and
insl
dec
mov
push
dec
jmp
xor
adc
or
sub
daa
lods
std
inc
dec
jb
sub
jp
sbb
data16
movsb
adc
xor
sbb
ja
sbb
and
push
enter
outsl
ficompl
mov
jecxz
push
movsl
rorb
jmp
or
out
aam
xchg
mov
mov
andl
pop
pushf
add
jg
jbe
push
mov
jmp
test
cltd
adc
inc
sub
sbb
mov
and
pop
mov
xor
sbb
cmp
rorb
xchg
js
arpl
push
ds
xchg
and
imulb
addr16
push
sub
fs
cmp
lods
pop
cmp
dec
or
mov
loope
mov
push
inc
aad
lret
test
das
insb
in
popa
or
adc
mov
ficoms
int3
arpl
nop
in
movsl
inc
stos
leave
push
push
leave
inc
js
mov
decl
popf
dec
test
or
mov
popf
inc
mov
insl
add
sub
sub
icebp
pop
aas
or
inc
or
push
inc
jbe
mov
aam
pop
les
imul
jo
loop
jmp
call
and
pop
jmp
jo
push
lret
xchg
xchg
data16
js
jbe
or
test
gs
sub
test
lahf
mov
mov
xor
test
jae
inc
mov
xchg
jecxz
push
sbb
inc
popf
or
popf
cs
cmp
push
jp
insl
push
and
cmp
push
and
lcall
push
inc
inc
lods
sbb
fiadds
lahf
jbe
sbb
fs
jecxz
cmp
inc
pop
cwtl
cmp
cmpsb
fstpt
mov
cmpsl
fstl
movsb
cmp
sarb
aas
pusha
inc
mov
stos
mov
or
jg
int3
add
les
stc
leave
es
dec
cwtl
xchg
pop
mov
sarb
sub
hlt
and
mov
loope
xchg
mov
xchg
inc
xchg
mov
and
mov
divb
adc
push
jnp
loope
jns
sbb
mov
xor
ret
fnstsw
add
arpl
lret
cmp
xlat
jnp
imul
scas
out
in
loop
push
inc
adc
out
cli
data16
push
jmp
xchg
mov
ja
or
add
or
mov
mov
outsb
inc
cs
or
push
sbbb
stos
data16
scas
fnsave
jecxz
cmp
lds
pop
sbb
mov
sub
inc
cmpsl
jmp
or
jmp
outsl
cmp
scas
stos
cli
xchg
xor
dec
jns
insl
sahf
mov
lods
lcall
repz
xchg
fldcw
sar
xor
xchg
and
inc
or
add
insl
dec
jae
enter
in
xchg
jmp
movsl
jb
mov
sbb
lret
icebp
xor
sub
pop
rorl
inc
mov
xor
jp
ret
or
jo
stos
testl
pushf
sbb
rcr
xor
mov
mov
nop
test
leave
mov
lock
push
jmp
xchg
ja
imul
out
lods
outsl
in
icebp
sbbb
jp
adc
popf
or
jmp
out
cs
lcall
fsubs
adc
orb
test
or
mov
rcll
mov
xor
roll
aam
jmp
adc
mov
xor
repnz
inc
pushl
scas
cmp
dec
mov
mov
sahf
adc
inc
add
and
inc
inc
sbb
push
jge
ss
out
stos
in
imul
aaa
jne
pop
rcl
jp
fisubrs
hlt
push
or
mov
jle
mov
pop
mov
cld
loope
out
sti
aaa
int
xchg
repz
enter
jge
jnp
jnp
and
gs
rorl
fstl
xchg
inc
jae
mov
cmp
and
push
lods
ret
add
xlat
fsubrl
bound
inc
and
sbb
xor
sub
xchg
dec
sub
xor
cmpsl
int3
xchg
cwtl
out
mov
xchg
test
scas
dec
mov
test
add
jmp
fldt
loope
mov
xchg
push
adc
pop
pushf
xchg
cmovl
push
push
out
sub
or
mov
push
mov
std
jno
sub
mov
xor
inc
push
push
add
add
das
scas
adc
out
mov
mov
out
jbe
xchg
or
xorl
adc
movsb
gs
cmpsl
vphaddwq
scas
ds
dec
insl
adc
add
mov
inc
jge
inc
loop
and
fdivrl
or
and
enter
addr16
jl
inc
out
insl
jle
icebp
cli
mov
mov
jbe
sbb
inc
inc
insb
nop
loopne,pn
bswap
jno
out
filds
and
subl
push
sbb
fbstp
nop
outsl
sub
inc
frstor
mov
fiadds
inc
loope
ffreep
pusha
pop
mulps
scas
stos
fchs
adc
push
cwtl
aas
mov
imul
pop
pop
mov
mov
stos
mov
les
mov
arpl
jge
adc
push
adc
pop
movsb
sub
shr
sbb
or
push
fldl
nop
and
pop
mov
dec
cmp
popf
or
pop
dec
cwtl
push
add
scas
ja
lods
jbe
xor
jno
lret
push
cwtl
sub
mov
popa
mov
cmpsl
add
mov
add
js
js
rolb
icebp
xorl
scas
xchg
jno
mov
lret
push
aad
pop
std
rcrb
mov
xlat
jne
ret
lcall
test
popf
add
lret
ret
sti
lods
add
ret
inc
out
out
shlb
pop
xchg
movsl
aam
mov
and
sub
mov
pop
adc
call
lods
repz
iret
fs
pop
mulb
test
jg
outsb
push
add
pop
es
dec
iret
ds
mov
fxch
js
loope
repnz
es
cmp
movb
cwtl
dec
xor
jmp
into
mov
mov
jae
cmp
jns
inc
add
lea
mov
popa
in
push
repnz
test
mov
mov
add
adc
adc
adc
adc
pop
into
repnz
sub
sbb
dec
adc
xchg
dec
daa
outsb
mov
fidivrs
xorb
mov
push
and
sbb
dec
mov
mov
sahf
cmp
repnz
js
fmuls
mov
ret
jmp
mov
in
cmpsl
nopl
mull
repz
pushf
mov
push
xor
push
mov
add
or
hlt
je
pop
sub
xchg
inc
and
adc
testb
lret
pop
negb
mov
pop
jbe
adc
js
in
inc
push
inc
push
jecxz
out
notb
push
pop
and
jge
xchg
adc
and
add
mov
sarl
dec
mov
fsubrs
sub
test
pop
call
sbb
or
cmp
fs
mov
push
mov
cmpsl
das
jno
fcmove
dec
pop
cmp
cld
loop
or
xlat
repnz
pusha
dec
pop
push
jp
adc
fstp
ffree
xchg
xchg
pushf
mov
lock
inc
fstl
popa
pop
loop
push
dec
sbbl
pushf
push
repnz
xlat
fldcw
mov
icebp
jmp
loop
dec
test
cwtl
xchg
sub
repnz
lret
sub
in
ljmp
sti
sub
jno
adc
ss
dec
xchg
std
add
mov
jno
ds
mov
test
sar
bound
pextrw
sub
dec
loopnew
scas
ljmp
daa
cwtl
in
mov
test
dec
sub
lods
lods
xlat
enter
mov
stos
je
ss
aam
cmp
sarb
jae
enter
pop
shr
imul
adc
outsb
fnstenv
pop
jmp
or
pusha
and
mov
inc
push
pushl
fcomip
add
in
xchg
in
lock
outsb
add
aas
push
les
mov
xchg
std
mov
push
insl
cmc
shrb
mov
pop
in
pop
jg
push
or
mov
mov
inc
mov
jno
mov
xor
mov
sub
lods
add
pop
pop
push
scas
cmp
pop
push
cs
dec
xor
push
and
stc
mov
sbb
sub
inc
sahf
sub
adc
sub
adc
add
adc
aam
in
stos
insb
sub
dec
mov
mov
xchg
inc
call
ljmp
jmp
cli
rorl
sbb
sbb
bound
shll
add
jecxz
push
pop
mov
mov
cmpl
mov
inc
push
lds
fidivrs
out
sti
xor
xchg
arpl
mov
pop
cmp
out
push
cmp
sbbb
nop
jb
xor
subl
jge
dec
call
test
lock
scas
test
dec
mov
aas
mov
mov
mov
dec
jno
xor
add
sbb
and
scas
sbb
push
jns
add
mov
mov
addr16
dec
daa
push
rolb
dec
fisubrs
stos
call
add
add
sub
push
stc
pop
xor
stc
mov
fsubrs
pop
and
icebp
jns
sub
push
je
push
xchg
xchg
sub
jle
stos
xchg
les
fisubs
ret
insl
in
inc
dec
add
xor
repnz
repnz
adc
shl
push
sub
pop
shlb
ficoms
cmp
lea
jbe
enter
mov
roll
add
pushf
stos
arpl
lahf
push
push
dec
jmp
jno
clc
or
add
incl
push
sub
xadd
or
pushf
sbb
je
out
dec
adc
sub
arpl
insb
sub
or
stos
add
ret
cld
sub
jp
shll
jae
addr16
add
pop
pop
test
sbb
adc
cwtl
cli
cmpsl
push
jp
dec
dec
test
mov
cmp
fwait
loopne
movsl
ss
sub
add
lcall
mov
pop
subb
test
dec
adc
cltd
push
cmp
push
add
mov
xor
push
sub
mov
rorl
dec
inc
cmp
insl
gs
hlt
push
pop
pop
int
sbb
jns
ja
mov
fs
xor
mov
fiaddl
or
mov
mov
or
cmp
pop
loop
xchg
lds
or
imul
lcall
adc
jo
mov
add
mov
mov
out
sub
pop
in
cmp
mov
jno
stc
shr
xchg
jns
push
jbe,pt
jae
mov
call
push
mov
xchg
mov
push
lods
mov
xor
jae
mov
mov
shl
and
icebp
ja
ret
mov
sbb
pop
cmpsb
xchg
lods
rclb
ss
mov
cmpsl
dec
popf
sarl
aas
mov
xacquire
jns
lahf
xorl
pop
dec
xorb
dec
adc
unpckhps
mov
sti
sti
gs
add
jle
loope
nop
or
pop
ljmp
shl
js
jg
hlt
mov
xchg
stc
push
cltd
xor
popa
jnp
mov
inc
mov
sub
jnp
sbb
loopne
loop
push
ret
xchg
inc
lock
test
mov
cmpl
lock
and
xor
xor
dec
pop
movsl
push
jmp
adc
popf
adc
xor
ss
stos
inc
lret
cmp
scas
ret
and
data16
dec
adc
ret
sbb
sbb
test
mov
pop
out
sub
lods
mov
adc
adc
mov
gs
push
loopne
scas
divb
xchg
ja
or
int3
enter
mov
cmp
mov
cwtl
outsl
pop
xchg
add
daa
mov
sbb
adc
call
or
mov
push
pop
les
std
in
pop
movsb
jne
mov
jne
inc
in
or
insl
test
cmp
mov
mov
sbb
sub
push
test
repnz
outsl
xor
addr16
cmp
popf
roll
jne
test
push
sbb
movl
xchg
xorb
je
loopne
cmp
pop
cmp
mov
scas
xor
mov
mov
xchg
and
dec
data16
cmpsl
iret
sar
mov
add
subb
ljmp
add
mov
jb
push
adc
lcall
xchg
inc
sbb
ljmp
mov
push
loop
leave
scas
mov
lds
jmp
mul
icebp
aaa
add
iret
iret
push
lahf
call
add
or
mov
cmp
inc
cmove
paddw
call
pop
aad
and
ss
aam
stos
repnz
mov
out
xor
mov
inc
divb
sbb
xchg
xchg
inc
enter
lods
and
pushf
sub
add
push
imul
shrl
xor
jl
out
aam
in
cmpsl
pop
das
jmp
pop
sbb
lods
lahf
gs
pop
pop
rcr
test
add
out
cmp
xor
enter
stos
xchg
sub
in
int
mov
dec
jp
into
or
inc
inc
aas
push
cmp
dec
hlt
loopne
stos
or
repz
loope
adc
popf
ret
enter
fimull
fs
jo
fdivl
int3
clc
pop
xchg
pop
pop
jb
std
cmp
repnz
inc
pop
call
scas
int3
sti
mov
inc
bound
sub
fsubs
push
mov
add
cmc
mov
ss
pop
xchg
jle
add
leave
xor
mov
push
mov
pop
inc
mov
xor
cltd
sbb
shrl
and
push
outsb
lret
out
or
push
push
int
ja
inc
add
js
jmp
aam
lcall
test
xor
adc
adc
adc
xchg
aam
cmp
adcl
stc
and
xchg
xchg
outsb
inc
jnp
insl
add
mov
lock
fnstenv
mov
adc
or
add
sub
cmp
xchg
je
int3
xor
mov
lods
add
push
test
insb
xor
add
test
jle
gs
push
loop
jle
arpl
shll
or
stos
mov
cwtl
imul
xor
mov
push
add
lret
gs
push
dec
sbb
mov
into
scas
les
xchg
pop
xchg
or
jo
jns
cmp
sub
outsl
xor
xor
lods
mov
lahf
pmuludq
adc
adc
out
pop
ss
mov
rolb
mov
pop
sbb
or
jle
mov
xchg
mov
sbb
pop
pop
xor
pop
add
arpl
shlb
imul
xor
adc
push
lcall
cmpsl
push
aam
cmp
inc
inc
xorb
rcrl
je
pop
xor
cli
scas
test
sub
adc
cli
pushf
xor
and
fstl
xchg
iret
inc
mov
test
mov
stc
or
push
or
mov
jl
jbe
lds
movsb
jb
push
inc
jae
jecxz
jecxz
dec
add
jp
insl
push
or
dec
jne
pop
xor
push
mov
shll
cmpl
fnstenv
xchg
stos
pop
data16
sub
cld
xchg
xchg
mov
xchg
cmp
or
xor
loope
pop
jecxz
mov
cld
pop
jp
adc
in
jecxz
cmp
jns
mov
repz
cmc
or
jecxz
addl
inc
inc
repz
sti
repz
sbbb
cld
fidivs
imul
xor
mov
inc
dec
pop
cmp
and
xchg
fwait
stos
and
mov
es
ja
lods
xchg
push
pop
lods
jg
sub
xchg
mov
ret
sub
shlb
lds
aas
dec
push
jmp
orl
ds
test
push
cwtl
in
imul
enter
sub
aam
mov
mov
int3
push
mov
and
or
rcl
xchg
and
xchg
sub
adc
push
adc
ds
mov
push
je
rcrl
and
rcrb
cmp
jne
pop
push
addl
sbb
or
popf
lret
add
imul
mov
push
aaa
mov
out
jg
in
xor
mov
imul
xchg
inc
inc
cltd
js
inc
out
and
mov
adc
shlb
lods
pop
pop
cmpsl
push
gs
hlt
inc
or
and
cltd
stos
ds
out
push
mov
push
jne
inc
js
sahf
mov
jle
negl
add
sahf
dec
outsl
movsl
aam
add
mov
fcoms
mov
cmp
stos
xchg
mov
ficoml
popa
and
cli
std
out
xor
icebp
pop
ret
lret
inc
test
nop
xlat
mov
es
sub
xor
xor
scas
loopne
xor
or
lock
mov
cmp
jae
ret
inc
gs
cltd
stos
and
jo
mov
dec
sti
push
push
push
addb
inc
aad
xor
push
fwait
push
sbb
scas
rolb
pop
ljmp
mov
sahf
xchg
jno
mov
insl
or
inc
out
add
xchg
test
jae
sarb
bnd
sti
mov
sub
popf
in
or
dec
test
xlat
inc
daa
cmpsb
ss
adc
scas
pop
jnp
inc
sub
stc
dec
inc
mov
adc
mov
loop
pop
xchg
stos
push
mov
xchg
daa
cmc
pushf
divb
or
movsl
and
mov
xor
xchg
ss
cmp
adc
pop
mov
fimull
orb
mov
jmp
lret
jle
popf
mov
repnz
cmpsl
lods
movsl
and
ficompl
int3
insb
ret
int
sahf
addl
rcrb
jg
push
and
out
adc
cmp
fwait
inc
mov
es
xor
int
inc
mov
xchg
cmp
push
lret
xchg
pop
loopne
data16
std
mov
and
lcall
stos
jae
inc
stos
sbb
jb
xor
sbb
and
pusha
shr
adc
cmp
cmpsl
nop
push
add
cmp
mov
fisttps
add
mov
and
jb
std
adc
imul
stos
cltd
adc
cmp
cmpsb
push
and
xchg
push
ja
sbb
stos
pop
jbe
push
pop
dec
cmc
mov
outsb
push
fldt
out
pop
pop
mov
mov
jg
scas
cmp
dec
cwtl
lods
inc
stos
loope
mov
pop
mov
pop
and
xchg
mov
xchg
jl
fdivrs
xlat
mov
mov
into
sbb
loopne
push
imul
mov
dec
mov
xchg
xorb
add
into
adc
cmove
addr16
pop
push
gs
mov
mov
add
movsl
or
addb
test
cmp
lahf
xchg
mov
xchg
outsl
iret
mov
mov
sbb
push
push
jno
or
xchg
mov
jmp
or
mov
inc
add
pop
cmp
push
call
sbb
mov
call
cmp
mov
fwait
jns
test
pop
sbb
cs
push
loopne
jecxz
das
xchg
cwtl
xchg
xchg
mov
push
add
or
cmpsl
xor
imul
les
inc
fsubs
and
sub
sbb
popf
adcl
insb
jb
rcrl
std
lret
aaa
mov
into
mov
add
sbb
mov
and
clc
out
add
fldl
mov
or
int
xor
pop
push
or
sub
pop
je
ss
add
dec
testb
jge
inc
sub
in
push
test
fisubs
push
sbb
xor
nop
repnz
jns
sbb
cmpsb
jl
scas
dec
fldl
or
mov
outsl
xlat
les
xchg
and
in
pop
std
add
outsl
jl
sub
mov
test
push
fnstenv
ret
cmpb
sub
iret
stc
aas
jp
mov
cmpsb
fucom
pop
insb
add
mov
pop
std
xor
pop
xlat
pop
pop
andb
push
jmp
ret
cmpsb
xlat
and
frstor
jo
add
aaa
fnstenv
fisubrl
pop
bnd
jnp
aam
mov
movsl
mov
addr16
mov
mov
mov
shll
scas
in
cwtl
ret
jnp
mull
daa
mov
std
jle
movsl
aam
das
sub
sbb
xor
stc
dec
mov
xchg
inc
add
pop
lods
fsubl
ja
and
pusha
pop
aas
shlb
jns
pop
and
rolb
aam
sbb
stos
adc
pop
fs
inc
lcall
add
pop
sbb
jge
dec
shrb
pop
frstor
in
popf
incl
mov
inc
pushf
push
fsubl
add
mov
mov
pop
outsl
cmp
sub
dec
bound
cmp
stos
sbb
test
in
ja
lahf
cmp
push
das
into
inc
inc
inc
aad
mov
repz
lahf
ds
sub
mov
stos
fcomps
jg
mov
mov
xchg
jns
push
in
xor
jns
mov
mov
xor
adc
inc
test
mov
fcmovnb
inc
dec
sub
inc
int
rcrb
mov
adc
pusha
xchg
shlb
or
rcl
sub
sub
hlt
add
popf
dec
and
loop
out
scas
sbb
xor
pushf
lea
cmpsl
pop
sub
push
and
data16
and
ss
dec
add
icebp
fstpl
in
lock
in
insb
cwtl
loop
xor
and
pop
aad
mov
inc
adc
scas
pop
outsl
lret
movsl
cmpsl
mov
stc
loopne
xor
xor
push
cld
jmp
fld
cltd
jp
or
rorl
dec
dec
cmp
jmp
popf
and
stos
mov
mov
add
jg
notl
ja
lds
sbb
push
scas
stc
pop
fists
jno
mov
dec
inc
jmp
clc
popa
push
adc
ret
cmp
dec
outsb
lret
imul
jmp
push
dec
clc
in
pop
mov
mov
out
or
ja
add
andl
cli
or
mov
pop
scas
shlb
jg
imulb
cwtl
jp
add
xlat
pop
xchg
cli
xor
fimull
add
lret
stos
xor
or
sub
jno
xor
mov
pushf
bound
sub
pop
lods
inc
and
cmp
mov
push
scas
aam
dec
fisubs
loop
cmpsb
popa
dec
pop
lods
mov
mov
fdivrs
sbb
das
and
ds
sub
jnp
jmp
test
pop
lods
mov
xchg
adc
aaa
subb
add
pop
aas
daa
mov
cmpsl
das
aam
add
cmc
test
jne
xchg
lret
js
aas
lcall
xchg
out
aam
and
rcll
push
fldenv
shl
lcall
sub
shl
lods
mov
movsb
push
pusha
std
jbe
push
mov
pop
cmpsl
and
stc
shlb
and
out
into
pop
and
jmp
mov
int3
xor
jno
bound
and
int3
cwtl
mov
xchg
pop
jno
cwtl
jnp
arpl
pop
pop
or
push
int3
jl
fldcw
add
dec
fldt
lret
ror
cwtl
and
mov
ret
fnstenv
int
sahf
xor
shl
dec
adc
sub
cmp
xchg
andb
cltd
mov
mov
cs
cmp
xor
mov
cmpsb
mov
test
shl
fcmovu
mov
jl
dec
sub
mov
and
xchg
enter
xor
in
into
push
inc
mov
shll
sub
mov
test
inc
mov
mov
push
ret
clc
mov
sahf
pop
ja
mov
jne
cmp
das
int3
pop
imul
push
and
cmp
xor
jb
and
xchg
or
cmp
sbb
jo
negb
mov
sub
pop
outsb
gs
or
and
aas
mov
push
cld
mov
xchg
dec
addr16
cmpsl
jl
xor
jle
xor
mov
inc
aaa
faddl
and
cli
add
jne
movsb
mov
test
imul
js
adc
xchg
pop
push
int
cs
inc
dec
lock
outsb
test
outsl
outsl
imul
jge
gs
inc
or
and
sbb
loop
dec
jbe
mov
iret
xchg
out
imull
mov
fldt
notb
andb
push
dec
push
inc
push
push
rolb
lahf
dec
cmpsl
inc
jle
push
xchg
pop
lock
nop
pusha
enter
dec
pop
xor
pop
pop
lods
add
insb
sub
mov
sbb
xor
mov
sti
lret
sub
mov
sub
int
sahf
fstl
in
add
loope
or
adc
scas
lret
out
lock
jge
arpl
cmp
mov
mov
in
icebp
pop
mov
es
xor
or
dec
add
mov
dec
cmp
sbb
iret
in
or
fisttps
and
pop
je
mov
sub
jle
pop
push
adc
inc
push
jno
xchg
lock
jb
nop
stos
lret
xchg
pop
adc
mov
enter
jns
mov
inc
jecxz
dec
xor
sbb
xor
inc
xchg
loop
les
or
pop
mov
outsb
repz
push
and
mov
jnp
or
gs
fmull
cmpb
outsb
pusha
pop
sbbb
sub
gs
mov
adc
les
jb
les
aas
or
adcl
or
mov
push
pop
int
mov
mov
xchg
mov
mov
adc
ja
dec
mov
jne
sbb
stos
movsl
fidivl
outsb
adc
dec
shll
cwtl
jl
sbb
mov
and
imul
mov
gs
sub
mov
adc
adc
jnp
push
mov
fildl
les
jnp
daa
pop
push
add
sbb
in
jp
lods
and
lods
dec
mov
jno
jns
sub
mov
rcl
out
ret
mov
pop
nop
into
pop
loopne
sub
mov
stos
mov
jmp
add
adc
adc
mov
mov
jmp
adcb
xorb
or
add
pop
data16
in
xor
xchg
xchg
jo
sbb
mov
mov
insb
push
in
dec
ljmp
xchg
push
add
push
push
mov
hlt
shll
inc
push
enter
mov
stos
in
dec
out
mov
imul
int3
sub
icebp
sub
dec
or
ja
shll
fs
jo
fsub
lret
or
repnz
jns
inc
and
sub
sub
cmpsb
pop
cmp
jle
in
push
jmp
push
adc
and
cmp
jmp
test
xchg
iret
insl
mov
jl
mov
lock
and
mov
fidivrl
sahf
ret
cmp
push
sbb
lods
adc
xchg
xchg
pop
movsb
sbb
or
xchg
stos
sub
jae
mov
jno
sub
inc
inc
mov
push
sahf
repz
nop
add
push
andl
int3
popf
inc
inc
in
jmp
frstor
mov
and
cmp
or
mov
mov
inc
sti
icebp
pop
or
mov
sti
cmp
inc
aad
aad
loopne,pt
push
out
sub
adc
adc
pop
cmpsl
adc
push
mov
or
cwtl
ljmp
fdivr
int3
jl
inc
inc
mov
mov
sbb
jnp
sbb
mov
nop
divl
test
sbb
push
imul
filds
mov
out
pop
daa
and
hlt
outsb
cmp
add
cld
fstpl
lea
int3
out
nop
fs
push
mov
mov
rcrb
push
in
xlat
lret
push
cmpsb
and
mov
test
dec
jl
push
xor
mov
fsts
dec
inc
xchg
fisttpl
adc
shr
rcll
cld
ds
filds
iret
into
xchg
ret
imul
push
jg
fistpll
into
decb
fimull
lods
das
and
fisttpll
addr16
es
mov
fisubrs
stos
pop
mov
nop
popf
iret
std
pop
mov
add
pop
inc
movsl
lods
dec
adc
cmp
push
int3
in
movsb
dec
jns
add
hlt
ljmp
xor
popf
sbb
arpl
bswap
jne
jbe
and
sarl
sti
mov
or
sub
adc
iret
inc
ljmp
rol
imul
sbb
mov
and
pop
clc
cmp
leave
or
addr16
or
insb
adc
jbe
xchg
js
sbb
into
push
sub
adcb
insb
mov
mov
es
xchg
push
out
inc
ds
cltd
mov
mov
adc
mov
mulb
shll
push
mov
test
or
ss
adc
push
lods
pusha
push
popa
stos
inc
xchg
ror
cmc
and
cmp
ret
test
scas
pop
cmp
out
inc
jne
lock
adcb
int
push
mov
test
add
inc
lods
cmpsb
pusha
cmp
sub
rorb
pop
call
bound
shrl
dec
push
lds
mov
mov
insb
cmp
jo
add
jae
xchg
and
lock
mov
sahf
insl
cmc
aas
xlat
or
jmp
mov
add
cmpsl
push
adc
inc
xchg
jmp
leave
popf
leave
cmp
push
or
mov
jae
hlt
popf
sub
dec
test
mov
ror
and
mov
jno
fcom
push
pop
adc
ret
ss
push
popf
daa
xchg
in
sub
aas
mov
jl
and
shll
mov
out
stos
in
mov
jno
rcll
jnp
pusha
pop
fnstcw
popa
ffree
iret
int
jo
insl
flds
shl
sub
cmp
mov
jnp
std
fistl
inc
or
cs
dec
jp
add
pop
inc
xor
lret
mov
insb
lret
arpl
fistpl
out
sti
jmp
aam
insb
fwait
xor
xor
jno
andb
fsubl
cmp
push
dec
fwait
cmc
jno
sbb
sbb
sahf
stos
jbe
add
jp
popa
hlt
xchg
imul
leave
int
jecxz
test
ljmp
lods
sbb
dec
mov
inc
gs
push
aaa
mov
mov
por
push
jecxz
aas
mov
pop
inc
mov
ret
mov
js
add
push
add
cltd
lret
xchg
xor
add
mov
fistpl
mov
mov
repz
inc
inc
jp
rolb
popf
insl
sub
push
aam
stos
pop
fmulp
shr
lahf
and
mov
cltd
mull
incb
pop
sarl
push
pop
rcl
push
fwait
jecxz
xchg
pop
jnp
inc
data16
stos
dec
aad
ljmp
orl
jmp
lock
mov
xchg
iret
les
and
test
push
jp
adc
push
push
pushf
mov
stc
or
cmp
adc
imul
adc
mov
mov
ret
push
pop
mov
mov
cmp
dec
or
jbe
outsb
push
jecxz
sbb
mov
sbb
xor
arpl
imul
sub
mov
xor
push
mul
cmp
xor
jle
int3
and
setge
push
add
movsb
sbb
inc
mov
mov
rolb
cmp
fsubp
lds
fistpl
ret
lahf
xor
push
leave
mov
inc
dec
pop
out
pop
add
js
jns
and
xor
mov
outsb
xchg
and
pop
or
mov
cmp
cmc
out
icebp
inc
fdivrs
dec
xchg
out
push
cltd
repz
cmp
sbb
mov
lcall
dec
sbb
inc
pop
cs
repnz
push
sub
or
and
sarb
xor
and
out
xor
mov
sti
xor
xchg
and
sbb
repnz
mov
sbb
shrl
xchg
inc
or
sahf
jg
sub
xchg
data16
adcb
sbb
out
cmpsl
fimull
stos
lods
mov
inc
ficomps
imull
ljmp
mov
add
popf
xchg
pop
xchg
imulb
sahf
stos
sub
jnp
rclb
inc
les
sub
add
dec
mov
fs
fisubrl
pushf
adc
adc
lahf
xor
fmull
sub
push
dec
outsl
int3
dec
out
icebp
pop
mov
in
xchg
cmp
jl
rorl
leave
test
push
test
cmp
adc
adc
fsubr
and
jbe
int3
jle
mov
add
rcrl
jo
push
imul
mov
dec
mov
pop
out
cwtl
js
aas
mov
cmp
int3
cmp
sub
stc
sti
je
xor
test
movsb
enter
repnz
adc
and
dec
stc
int
mov
mov
fildl
and
mov
movsl
cmpsl
mov
jns
cmpsb
xchg
sbb
repz
cs
xor
push
push
add
addb
ss
mov
push
dec
mov
fstl
and
test
out
adc
push
cmp
fistpl
pop
sub
imul
xor
push
sahf
dec
daa
mov
sbb
stos
xchg
mov
scas
pop
jne
add
std
je
in
sbb
xchg
mov
ja
push
imul
int3
pop
sub
push
js
hlt
jne
jl
repz
add
fs
or
hlt
mov
clc
or
out
mov
inc
stc
push
fidivrs
jno
js
aaa
adc
leave
add
add
pop
lods
test
cmpsb
addl
pop
push
fsubs
push
add
pop
fisubrl
cwtl
insl
xor
mov
idivb
dec
jecxz
xchg
fs
repnz
nop
dec
jno
add
das
bound
sbb
lcall
and
ds
xchg
jo
jae
movb
data16
sub
push
adc
sub
and
inc
cltd
xor
repz
dec
cmc
jb
pop
test
push
cltd
adc
in
and
adc
xchg
les
xchg
jl
mov
hlt
mov
mov
pop
out
rclb
cmp
stc
or
in
xor
fistl
pop
in
daa
movsl
out
or
mov
in
push
mov
pop
ds
or
mov
sbb
lret
loope
xchg
xchg
mov
pop
dec
cmpsb
mull
xor
jno
lea
add
adc
shlb
dec
pop
shl
sub
fcomip
or
cltd
adc
add
insl
and
ja
movsb
leave
jne
and
xor
mov
jne
repnz
xchg
dec
jnp
icebp
ds
dec
js
mov
push
mov
pop
das
cmpsl
lcall
test
pop
aas
mov
mov
enter
jno
cwtl
mov
lret
mov
push
jecxz
adc
and
das
rcrl
lret
jne
adc
xchg
je
int3
hlt
mov
dec
mov
mov
das
shll
xlat
xor
nop
mov
adc
rorb
xchg
ljmp
test
test
dec
lods
mov
push
in
cmp
lret
mov
sar
cmpsl
mov
pop
xchg
test
shl
and
ss
mov
jb
mov
jl
sub
cld
fnstenv
pop
or
dec
jg
xor
pop
jmp
ja
ret
lds
iret
in
aas
add
push
fdivl
ja
stos
cmp
pop
xor
clc
cmp
fstpl
mov
sbb
mov
pop
mov
test
push
mov
adc
push
jne
adc
movsl
lret
popf
adc
hlt
cs
cmp
sub
dec
cmpl
push
jge
bound
lock
adc
fwait
mov
outsb
int3
push
loopne
js
cmc
add
mov
popf
ret
pop
fmull
cmp
ds
std
pop
scas
adc
pop
push
rcll
xor
xchg
or
iret
in
andb
stc
roll
shrl
push
pop
test
aas
iret
cmpsb
nop
lods
movsb
lods
jbe
mov
in
out
cs
cmp
fidivl
jl
push
pop
bound
mov
sub
call
cld
mov
push
sub
fistpll
out
enter
push
cmp
fisttpl
jb
mov
jne
mov
adc
push
xchg
or
daa
jg
jae
lcall
xor
sub
pusha
bound
movsl
inc
xlat
adc
cmp
movsl
add
movsb
xor
xlat
clc
push
xchg
popf
and
xor
loopne
scas
addb
adc
es
out
mull
mov
je
dec
sbb
jge
cmp
mov
jl
in
xchg
adc
xor
xor
inc
dec
dec
xchg
dec
mov
cmp
sahf
dec
add
not
jo
test
test
repnz
arpl
inc
xor
aas
fisubrl
jbe
out
jae
inc
fldenv
stos
dec
or
out
sbb
inc
or
in
mov
push
stc
and
mov
test
std
push
dec
cmp
testl
sub
and
push
pop
push
pop
cmp
insl
je
cmc
or
cmp
repnz
sub
inc
ja
jl
push
sbb
add
push
xchg
add
insb
cmp
mov
or
ja
push
adc
sahf
and
add
sti
jp
movsb
xor
xchg
fcomip
outsl
dec
xor
dec
sub
jmp
out
icebp
jno
add
mov
fcmovnu
jl
add
inc
inc
sahf
xor
mov
sub
pop
shll
xchg
icebp
dec
cmp
xchg
mov
push
cmpsb
icebp
loope
or
lcall
adc
stc
dec
imul
xlat
jg
cwtl
sti
xor
enter
arpl
sub
mov
rep
cmpl
mov
inc
lret
push
xor
sar
addr16
or
dec
add
je
fsubl
xor
sbbb
dec
push
mov
bound
sti
xor
xchg
dec
and
pushf
adc
outsl
incb
lret
pop
mov
bound
push
xor
jae
xlat
jmp
rcll
bound
das
les
push
add
dec
addb
push
or
mov
pushf
adc
push
jb
fwait
sub
ret
xor
test
sub
or
mov
xlat
mov
sti
clc
hlt
inc
mov
mov
enter
mov
lods
pop
pushf
or
scas
lahf
test
xlat
pop
fwait
stc
orl
add
rcrl
jnp
jle
inc
fildl
rolb
rcrb
movsb
frstor
ja
test
pop
imul
jbe
or
jb
sub
cmpb
xchg
fldcw
sub
insb
cmp
outsl
jne
sbb
push
decb
jge
in
xchg
sbb
cli
sub
and
and
push
add
xor
sub
jg
aaa
xor
and
cmp
push
mov
std
mov
cmp
inc
out
add
loopne
mov
or
test
mov
pop
int3
cmp
cmc
mov
call
push
daa
scas
jne
aaa
negb
mov
or
popf
dec
in
add
aam
sbb
pop
cmpsb
fucomip
cmpsb
jp
movsb
add
push
jns
cmp
std
ficoms
ja
cli
cmp
mov
jg
mov
out
xchg
xor
mov
dec
push
ss
decl
xor
adc
rcll
and
mov
add
add
mov
jl
pushf
xor
lds
cvtpi2ps
out
lret
nop
js
dec
dec
lock
orb
ffree
mov
test
test
xchg
or
out
dec
jle
cmp
fldenv
sbb
xor
add
push
popf
ljmp
js
push
or
iret
ljmp
orb
add
xorl
dec
jb
fisubl
int3
dec
adcl
dec
adc
push
push
xchg
test
shll
icebp
sti
pop
xchg
push
insb
dec
inc
cmp
pop
aad
lcall
pop
jbe
push
jge
jecxz
imul
add
xor
and
adcb
xchg
add
fwait
lret
out
icebp
dec
mov
icebp
call
mov
ret
cmpb
push
stc
xchg
cmpsl
adc
repnz
fbstp
jo
push
push
xchg
sub
or
imul
in
adc
push
hlt
scas
mov
jb
jo
mov
in
push
add
mov
fldenvs
push
push
dec
icebp
dec
mov
test
add
leave
es
jg
sbb
sahf
lea
fsubl
cmp
ret
adc
pop
xchg
pop
shrb
jle
in
cmp
pop
jge
adc
ss
mov
add
dec
pop
sar
scas
dec
push
in
movsl
out
push
es
jae
push
sub
cmp
notb
mov
pop
cmp
mov
sub
jne
jge
sub
out
imul
sarb
sub
mov
jbe
jno
int
add
shl
cli
xchg
add
or
add
loopne
xchg
mov
enter
jmp
xchg
into
adc
xchg
fisttpl
aaa
iret
pop
xor
push
or
xchg
mov
push
popa
jne
cmc
test
add
push
cmp
dec
dec
loopne
mov
add
jbe
push
loopne
dec
popf
aad
les
stos
pop
dec
cmp
lret
push
jmp
into
cs
cmp
mov
movsl
into
mov
mov
adc
mov
mov
sub
mov
adc
push
fcmovnb
int
xchg
push
cwtl
add
lock
lcall
dec
les
xor
pop
and
or
sub
fldt
sub
lcallw
inc
and
cwtl
mov
xchg
popf
inc
dec
jg
fimull
inc
pop
pusha
call
pushf
mov
mov
in
hlt
mov
push
inc
outsb
mov
jo
cmpsb
aam
mov
std
out
int
flds
and
adc
in
ds
cltd
shl
pop
iret
adc
mov
cmp
scas
inc
mov
mov
testb
mov
lret
pop
or
dec
aad
add
jo
xchg
mov
push
adc
loop
sbb
lock
in
mov
cltd
pop
push
adc
repnz
jo
enter
xchg
jecxz
jno
xor
fisubrl
cmpsl
pop
rcl
push
sbb
mov
out
cmpsl
adc
fdivrs
into
dec
test
xchg
clc
les
sub
fbld
sbb
sub
pusha
pop
add
sbb
int
inc
fdiv
xchg
sti
fcompl
shll
jno
in
out
push
aas
xor
mul
idivl
mov
cmp
jns
insb
jl
inc
cwtl
pop
icebp
pushl
jnp
insl
outsl
roll
sub
sahf
jbe
jle
js
push
pop
sti
xor
hlt
aam
jb
idivl
xchg
xor
jle
daa
rcrb
mov
test
lock
add
dec
and
incl
jae
fmulp
jb
outsl
cmp
test
mov
outsl
mov
xchg
mov
scas
aaa
mov
inc
cmp
mov
fldt
pop
insl
mov
mov
or
dec
sbb
mov
jne
rcr
xlat
ss
jnp
pop
or
cmc
in
sub
cwtl
mov
lret
mov
aaa
cwtl
leave
inc
mov
or
xor
or
out
jecxz
lea
cmpsb
dec
mov
xor
sub
jns
iret
and
pop
hlt
lods
mov
mov
dec
pop
fsubrs
pop
mov
push
sbb
lret
xor
jae
movsb
pop
mov
push
lret
fisttps
xor
adc
mov
xchg
pop
test
adc
in
mov
mov
imul
pop
push
pop
adc
inc
add
pop
sbbl
cmp
cmp
push
ret
xor
mov
sbb
loope
dec
movsb
je
mov
mov
movsl
test
mov
mov
add
jb
insl
loop
iret
pop
test
push
lcall
xchg
adc
push
xchg
pop
cmp
xchg
lods
xchg
repz
lock
cmpsl
nop
adcb
shr
insl
orb
add
mov
inc
iret
hlt
mov
add
cmp
pop
adc
xor
cmpsb
add
in
into
ret
inc
outsl
bound
movsl
divl
push
bound
jae
negb
out
loop
cmpsb
pop
cli
adc
inc
je
or
lods
add
sbb
movsl
push
and
faddl
cmpsl
ret
ret
das
cmp
or
cmp
and
lds
fwait
fwait
outsb
lret
rcr
or
mov
fmuls
push
mov
fsubrl
fisttpll
ret
lret
std
jg
mov
push
dec
repnz
pop
xchg
and
xor
outsl
dec
mov
out
add
arpl
mov
sbbl
mov
clc
gs
or
lfs
loop
sbb
shll
aad
aam
xor
pop
xchg
cmp
sub
fidivl
ffreep
inc
popf
pop
mov
jecxz
inc
pusha
add
push
cmp
test
jle
nop
ss
es
negl
divb
faddl
xchg
outsl
xor
cmpsb
fbld
shll
push
lret
jl
jge
pop
shr
and
enter
push
outsb
mov
test
gs
je
popf
cmpsl
dec
les
into
sbb
outsl
ja
arpl
xchg
out
inc
dec
xchg
xchg
add
xor
shr
and
insb
cmpsl
popa
adc
xchg
and
mov
lea
es
add
cmp
imul
add
mov
mov
add
add
mov
dec
and
and
and
rolb
mov
push
pop
adc
test
xor
dec
sbb
adc
and
in
add
mov
xor
adc
andb
mov
pop
jns
cmpsb
mov
lea
dec
int
outsl
dec
out
lcall
orb
gs
pop
mov
adc
jae
mov
adc
shll
jbe
fistpll
adc
outsb
push
dec
in
mov
pop
push
stc
fdivrl
adc
push
inc
pop
mov
xor
and
mov
dec
add
mov
jno
push
aas
or
aaa
add
push
push
add
fildl
lds
inc
sub
push
aam
inc
testb
ret
outsb
data16
jp
dec
data16
adc
loope
loopne
insb
lcall
fiaddl
mov
push
push
popa
or
push
sub
push
out
lret
movsl
repnz
sub
xor
inc
repnz
fs
pop
ljmp
aam
std
jb
out
pop
pop
and
adc
hlt
push
out
jae
dec
scas
repnz
dec
call
ret
pop
fidivrl
mov
fstpt
or
sbb
cmp
inc
popf
js
push
cli
cmpsl
pushf
push
or
jl
sbb
or
dec
int3
insb
pushf
cwtl
das
pop
jb
and
sub
inc
inc
xchg
mov
andb
scas
loope
test
push
push
andl
xchg
jl
inc
mov
mov
xor
sbb
mov
lcall
iret
stos
clc
fiaddl
or
adc
out
and
jo
movb
js
mov
dec
adcb
push
xchg
lret
pop
shll
cmp
inc
mov
xchg
imul
fisttpll
imul
pop
sub
std
or
cwtl
cmp
ret
mov
loopne
mov
mov
jp
or
xor
cmp
test
les
int
in
sbb
inc
inc
add
inc
push
mov
adc
cltd
loopne
mov
sahf
xor
fwait
jne
cmpsb
mov
pop
pushf
pop
mov
orb
sbb
push
loopne
push
xchg
adc
pop
test
dec
mov
dec
jl
clc
inc
xor
mov
jp
outsb
not
inc
sbbl
cmp
shl
sub
xchg
or
jne
psllq
ret
test
stos
adc
ljmp
xor
mov
mov
test
int
out
insl
or
pusha
or
stos
xor
scas
jne
callw
int3
mov
push
jae
imul
jmp
adc
cwtl
popf
push
sbb
cmp
repz
dec
push
cli
add
nop
add
stc
hlt
sbb
insl
pop
gs
rorb
shrl
roll
pop
add
mov
add
mov
imul
ret
clc
jo
mull
cmpsb
icebp
lods
lahf
xchg
xlat
jno
cmpsl
jmp
gs
lock
xor
rorl
pop
dec
mov
xchg
add
inc
jbe
mov
js
lock
in
sub
in
xor
movsb
dec
adc
movsl
adc
in
or
jne
sbb
pop
adc
mov
repz
ror
add
mov
ds
nop
int3
or
imul
out
aad
cmp
mov
inc
mov
add
in
cmp
dec
add
mov
ja
out
cmc
test
and
in
adc
pop
add
push
mov
lds
imul
jle
ss
lret
sbb
loop
arpl
jae
scas
icebp
add
test
cmp
or
addr16
mov
std
pop
or
jle
adc
popf
lahf
cmp
push
lea
test
pop
lds
xchg
and
dec
xlat
stc
xchg
hlt
ja
aaa
mov
adc
ss
push
cs
push
xor
jg
inc
cld
mov
ds
imul
dec
andb
stos
push
or
cld
aam
fsts
xlat
subb
inc
call
inc
xchg
push
fcomi
dec
sbb
into
pop
cmpb
addl
adc
stos
rcr
cmpsl
jg
inc
mov
dec
mov
sub
ljmp
dec
mov
stc
hlt
xchg
inc
out
mov
mov
ja
inc
inc
imul
pop
loopne
push
pop
xchg
mov
push
call
aas
andps
in
adcl
mov
movsb
inc
repz
sub
pop
into
repnz
int3
gs
jo
pop
jbe
xchg
test
dec
xchg
rcl
jo
test
sbb
fsubs
es
lods
cmp
mov
jmp
push
imul
je
add
out
adc
jl
pop
cmp
cmp
ja
in
test
cmpsl
orb
jmp
in
js
imulb
lods
sub
ds
xchg
add
push
cmpsb
ficompl
enter
push
pop
cli
std
gs
sub
inc
dec
add
pop
test
pop
mov
mov
pusha
push
js
push
inc
mov
sbb
cmpsl
lret
fstps
mov
add
xor
es
repz
push
ret
mov
cld
test
mov
stc
xchg
mov
and
xchg
jb
jne
mov
xchg
jmp
cmp
es
sub
lret
test
push
sbb
and
xor
in
js
fwait
push
sub
sbb
shlb
lret
in
push
sbb
bound
mov
subl
and
add
sub
jnp
lock
js
lds
cmp
inc
outsb
jns
jecxz
inc
fidivl
or
jmp
mov
daa
ljmp
jnp
frstpm(287
insb
push
or
movsb
cmpsl
sbb
shll
pop
or
cli
insl
cli
add
cmp
inc
imul
jns
addr16
jle
fs
xchg
fisubrl
add
pop
in
sub
lock
mov
ret
jg
cmpl
mov
dec
xchg
xor
out
dec
push
test
xor
jle
test
push
mov
pusha
jo
add
int
fdivrp
inc
enter
andb
rcr
sti
sub
out
imul
sub
push
lods
je
call
inc
inc
add
loop
and
das
sti
mov
mov
andl
mov
mov
call
aaa
test
int
mov
adc
mov
aad
adcb
and
inc
push
push
loope
fldl
sarl
call
fimuls
jmp
dec
mov
jbe
into
nop
adc
cmp
sub
push
fisubl
cwtl
mov
mov
jbe
xor
jecxz
in
and
data16
insl
jno
cmp
mov
mov
mov
scas
out
int3
pushf
lret
adc
add
movsb
mov
sbb
shrl
cmp
pop
fadds
in
movsl
mov
pop
jge
push
fldl
pop
push
mov
lods
rcrl
or
sarl
fldenv
cmc
xchg
cwtl
add
int
sub
in
push
inc
mov
je
test
jb
sub
ret
mov
add
sub
popa
test
add
or
mov
push
ja
mov
fmul
push
imul
in
cli
mov
xchg
bound
inc
into
shrb
mov
pop
dec
cmpsl
sub
mov
cmp
sub
mov
fwait
aam
sub
fs
jns
pushf
jmp
out
xchg
rolb
dec
popf
xor
repnz
jnp
ret
jnp
fsubrs
push
jno
xor
stos
lret
pop
in
sub
pop
dec
repnz
mov
out
mov
xchg
xchg
iret
pop
repnz
xor
and
std
fiadds
jae
stos
out
and
mov
pop
daa
nop
jmp
sbb
xor
xchg
adc
dec
and
mov
testl
sbb
in
mov
arpl
inc
jle
jo
fiadds
pusha
mov
inc
ljmp
adc
jecxz
aas
jno
and
adc
ja
jge
aad
call
jmp
cli
fdivrl
addr16
cs
leave
mov
mov
sti
inc
xchg
fsts
xor
xchg
sub
outsb
dec
gs
dec
shlb
incl
push
pop
pushf
push
cli
stc
jae
or
out
stos
inc
addl
sbb
inc
fcoms
add
adc
inc
push
inc
test
add
lds
out
jmp
adc
dec
or
pop
xchg
or
mov
pop
adc
adc
nop
lret
in
shl
testb
repz
xor
lret
mov
dec
fistpll
adcb
mov
and
clc
cmp
bound
push
adc
xchg
or
or
lcall
sub
mov
aaa
and
lock
aad
pop
pop
mov
lret
std
push
sub
addr16
pushf
outsb
ja
mov
fsubs
adc
inc
lret
mov
imul
jp
add
clc
push
ret
push
nop
adc
mov
imul
sbb
jno
add
add
icebp
mov
sar
stc
cli
adc
orb
sbb
aaa
fadds
xor
adc
inc
mov
push
jp
call
mov
xor
aaa
in
je
popa
mov
xor
dec
lret
jo
lods
xorl
leave
xlat
sbb
dec
dec
scas
dec
jns
jg
std
loope
jmp
jne
dec
mov
imul
test
cmovg
arpl
frndint
cli
or
lea
jbe
mov
mov
inc
or
call
xchg
mov
cmc
or
int3
pusha
enter
call
sub
lock
clc
sub
outsl
mov
icebp
dec
xchg
push
and
pop
pop
cmp
icebp
mov
push
jo
or
sub
dec
dec
dec
push
fmull
inc
fnstcw
fstl
lcall
adc
js
outsl
andb
decl
lods
popf
sti
insl
cmp
loop
pop
cwtl
inc
adc
pop
add
repnz
dec
push
ds
add
leave
push
cmpsl
or
adcl
