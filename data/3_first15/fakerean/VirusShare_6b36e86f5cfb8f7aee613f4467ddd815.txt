lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
fwait
roll
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
roll
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
fldl
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
xor
dec
sbb
dec
sub
or
inc
and
add
add
xor
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
cmp
inc
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
rcr
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
stos
ret
lea
call
test
je
xor
cmp
mov
movsb
les
and
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
jno
inc
add
add
mov
and
cmp
jne
mov
mov
mov
add
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
add
inc
add
mov
jmp
mov
push
mov
mov
call
mov
loopne
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
sub
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
loope
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
neg
inc
add
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
inc
ret
mov
mov
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
mov
push
and
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
lods
out
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
in
inc
add
lea
push
mov
mov
rcl
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
lock
cmp
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
inc
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
filds
adc
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
roll
std
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
inc
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
cs
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
sub
push
push
push
push
push
push
push
lea
push
push
call
lret
jo
js
fmull
add
add
add
rclb
cwtl
roll
idivb
add
aad
outsl
add
pop
add
add
add
pushf
les
filds
jle
in
stos
lock
jecxz
in
jb
pop
jl
mov
push
addl
test
xchg
mov
sub
pop
popl
push
push
push
push
lea
push
push
push
push
push
push
push
call
loopne
roll
neg
add
jb
add
add
add
movsb
cmpsb
add
add
push
pushf
mov
pop
fildl
out
fbld
mov
stc
add
jge
mov
add
movsl
add
mov
pop
mov
mov
pop
lods
stos
lea
add
jge
test
push
mov
in
fcomps
push
push
lea
push
push
lea
push
push
call
fstl
stos
imul
popf
add
fs
mov
add
add
add
imul
add
jge
shll
je
add
push
add
add
add
sti
add
add
rcrb
add
add
add
out
push
add
mov
jae
add
test
out
lahf
int
add
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
out
add
add
out
cmpsl
leave
pop
mov
add
xor
sahf
popf
add
xchg
xchg
pop
add
xor
addl
add
mov
outsl
shrb
loop
rcl
add
cmpsb
add
add
hlt
jo
mov
pushf
imul
pop
call
push
push
push
lea
push
call
mov
add
add
add
scas
add
stos
xchg
fstp
pop
add
jmp
add
mov
xchg
cmpsl
add
pop
add
add
jmp
add
cwtl
popa
push
add
add
add
fildl
lcall
add
sbb
cmp
test
call
mov
add
jecxz
add
int3
mov
add
mov
add
stos
add
add
nop
mov
fwait
pop
lret
hlt
testb
add
add
add
lcall
mov
pop
add
loopne
add
jmp
push
push
push
call
fcmovnu
add
add
popa
fldl
int3
add
add
mov
out
gs
clc
roll
add
cld
add
add
ret
test
xchg
xchg
add
out
mov
js
push
stos
mov
add
add
xlat
add
sub
pop
ret
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
add
lods
gs
mov
lret
loopne
push
mov
xchg
ljmp
mov
jmp
fwait
add
add
bound
xchg
popa
push
add
roll
add
add
out
add
add
cmc
mov
ja
push
movsl
aam
add
push
scas
sub
pop
mov
push
push
push
push
push
call
movsl
xchg
mov
add
hlt
insb
out
mov
add
add
add
add
ret
add
fiadds
pop
add
into
out
lret
add
add
out
pop
add
xchg
iret
imul
ror
add
out
add
imul
add
in
pop
mov
add
push
push
call
add
lret
add
popf
mov
add
add
lahf
add
cltd
add
popa
add
add
add
add
add
push
push
call
add
jns
push
add
je
push
add
add
jp
int
add
mov
lret
cltd
clc
jnp
add
push
add
jmp
mov
add
cmpsl
add
jne
add
je
pusha
mov
mov
incb
push
push
mov
sahf
repnz
pop
add
push
push
lea
push
push
push
push
call
into
jp
add
add
jo
mov
jo
add
test
enter
add
add
stos
add
jp
xchg
add
add
add
add
bound
add
xchg
out
in
add
add
popa
testb
add
lds
add
add
loopne
fldpi
int3
add
in
in
call
mov
xor
push
push
sub
push
push
pop
add
sub
sub
pop
sub
pop
push
push
lea
push
push
push
push
push
call
jnp
xchg
jnp
jmp
incb
add
add
pop
push
data16
mov
add
mov
push
xchg
lock
add
add
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
bound
lret
in
add
rol
std
jp
mov
xchg
add
mov
add
push
add
ret
mov
xlat
gs
out
aad
add
lcall
ja
add
mov
push
lea
push
push
push
push
call
pop
rolb
lcall
flds
pop
jo
push
add
out
push
lds
add
jae
sti
into
add
mov
add
add
mov
add
jl
in
aad
rolb
ret
sahf
add
add
xchg
add
stos
sub
pop
movl
push
push
push
push
call
add
leave
add
imul
cli
add
enter
add
add
add
je
stos
add
test
aam
test
out
movsl
add
mov
addr16
fsub
cmc
arpl
add
std
add
add
lods
add
call
lock
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
lock
add
gs
add
push
add
add
add
push
mov
aam
arpl
pushf
mov
add
add
icebp
mov
add
in
fdivr
lcall
push
lea
push
call
pusha
add
mov
mov
les
jbe
add
xchg
mov
std
out
add
cmpsb
loopne
mov
sub
pop
pushl
push
lea
push
call
aad
cmc
enter
add
roll
add
push
call
not
imul
mov
add
mov
into
add
mov
js
mov
rcr
icebp
add
push
leave
jns
out
stos
add
arpl
add
add
xchg
mov
clc
add
jl
add
lcall
jne
push
push
push
lea
push
call
add
mov
push
lret
push
stos
add
add
stos
nop
mov
xchg
add
imul
testl
push
add
add
pop
mov
mov
add
mov
int3
add
addl
popf
lods
jmp
into
push
int
test
cmpsl
and
xchg
mov
jne
aam
in
lock
lcall
sbb
push
lea
push
lea
push
lea
push
push
push
push
push
call
shrl
pop
in
add
mov
xlat
add
les
xlat
shlb
mov
pop
lret
add
add
add
mov
add
xchg
jns
addb
add
lcall
jne
push
push
push
push
push
push
push
lea
push
call
mov
mov
push
add
ja
add
add
in
scas
mov
add
ljmp
movl
lods
mov
add
add
test
sar
add
lock
add
jne
add
mov
add
add
xchg
jne
into
add
add
pop
pushl
call
push
push
not
xor
xor
push
push
pop
add
add
sub
rol
add
pop
inc
dec
pop
push
push
call
mov
icebp
add
mov
add
test
fildl
cwtl
add
rclb
jmp
pushf
pop
xchg
roll
popa
stos
add
add
int
add
add
in
sarb
lods
je
std
mov
mov
clc
add
add
fucompp
test
je
sti
sub
pop
pushl
push
lea
push
call
add
call
add
add
scas
pop
sarb
pop
ret
lcall
insb
lods
testl
add
iret
jb
into
sti
rcll
mov
add
call
flds
add
mov
add
add
add
stos
push
in
add
add
add
in
clc
pop
call
push
push
push
sub
add
push
sub
add
inc
lea
rol
sub
sub
add
lea
pop
ror
add
pop
push
push
lea
push
push
lea
push
push
call
add
add
cmpsl
add
add
mov
pop
xlat
add
jecxz
sti
add
jnp
addl
stos
add
js
push
lcall
repnz
pusha
loope
add
mov
cltd
add
push
add
addl
add
rolb
add
pushf
call
add
cli
add
addb
mov
imul
xchg
add
clc
stos
add
loope
jmp
cmpsl
push
nop
mov
ljmp
lea
je
add
filds
movb
add
mov
add
jle
into
insb
sar
add
jbe
add
add
fisubs
add
add
push
add
jne
test
sub
pop
call
push
push
call
test
add
lods
add
lret
mov
mov
add
repnz
add
mov
add
gs
add
add
add
xchg
jne
add
mov
hlt
fadds
xchg
cli
jae
ror
mov
xchg
add
mulb
add
add
cmc
add
loope
aam
mov
jnp
in
clc
pop
mov
push
push
push
push
push
push
push
push
push
call
popf
shr
add
faddl
push
subl
pusha
out
jb
aam
add
orb
fmull
add
add
add
leave
add
lea
add
cmpsb
xchg
sahf
fisubrl
add
clc
push
add
mov
add
test
add
leave
jecxz
in
fdivr
lcall
push
push
push
push
push
push
push
push
push
call
jns
enter
add
xchg
data16
xchg
add
out
roll
cwtl
hlt
shrl
div
add
loopne
add
cli
in
add
add
add
add
ljmp
add
sub
pop
push
mov
push
push
push
push
lea
push
push
call
add
lds
icebp
add
add
arpl
add
add
xchg
lds
mov
add
cli
or
add
in
jne
lcall
lcall
pop
in
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
pop
lret
xchg
mov
insb
lock
add
loopne
aad
mov
leave
add
mov
add
out
cmpsl
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
repnz
add
xchg
mov
jo
add
iret
in
stos
add
add
add
pop
add
stc
out
add
pop
jb
lods
scas
add
add
int3
scas
add
pusha
xchg
mov
addw
mov
movsb
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
imul
add
lret
add
pop
lret
add
jecxz
pop
lock
in
push
push
add
xchg
in
add
roll
lcall
add
add
xor
int3
iret
iret
push
push
push
push
call
pop
test
pusha
pop
add
mov
push
std
pop
idiv
mov
xchg
pop
add
cmpsl
call
int3
arpl
idiv
jge
sub
pop
xor
push
push
push
push
push
call
movsb
lret
add
test
add
popf
popf
bound
mov
mov
add
mov
jae
push
mov
jnp
pop
add
popf
add
fmulp
jge
movsb
js
jecxz
int
xchg
jle
add
add
add
js
int
add
add
cmpb
add
push
push
push
push
push
push
lea
push
push
call
mov
int
add
rolb
cwtl
push
xchg
mov
mov
sbb
add
imul
pop
add
popf
lret
popl
add
add
add
enter
add
add
jl
add
lcall
jne
push
push
push
call
out
lcall
mov
xchg
add
movsl
add
add
add
jno
loop
fldl
push
nop
add
cltd
add
add
xchg
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jae
mul
in
add
icebp
add
mov
add
jno
cld
lret
data16
mov
add
add
add
add
add
iret
out
add
push
movsl
pop
add
lret
jb
stc
cwtl
xchg
ja
imul
mov
in
fdivr
lcall
inc
or
int3
iret
iret
push
lea
push
push
lea
push
push
lea
push
call
fdivs
jb
add
add
add
pop
ffreep
test
add
addl
nop
xlat
lcall
addr16
imul
add
mov
cli
jne
add
add
ja
jmp
pushf
test
fadds
push
test
add
sti
add
sub
pop
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
add
jl
std
add
in
fnstcw
mov
add
int3
add
jbe
xchg
xchg
cmc
add
ja
int3
fwait
sub
pop
add
push
push
push
push
push
call
jge
add
shll
in
in
into
fnstcw
add
jl
add
scas
add
add
mov
sarl
push
sub
pop
add
push
push
push
push
push
push
push
call
out
jmp
add
leave
mov
mov
add
pusha
xchg
mov
add
add
out
jge
add
add
fiadds
in
andb
add
ret
add
add
pop
pop
push
push
push
push
push
push
push
push
call
gs
add
les
lcall
out
add
xchg
add
mov
add
out
add
add
leave
lret
lret
mov
add
hlt
add
stc
xchg
mov
bound
add
jnp
in
mov
add
loopne
mov
xor
push
push
call
add
push
push
add
out
lcall
int3
add
add
add
add
roll
mov
leave
add
add
in
add
add
mov
mov
jb
jb
add
fsubrs
mov
imulb
or
xchg
add
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
std
mov
mov
aad
add
roll
add
into
add
add
mov
rcrb
loopne
fisttpll
std
pop
add
test
popa
add
add
jge
add
lods
add
add
sub
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
push
push
push
call
fwait
add
add
mul
lea
jmp
pushf
mov
stc
add
out
jo
add
add
movsl
fs
xlat
push
add
add
add
add
push
lods
mov
mov
sub
pop
sub
pop
push
push
push
push
lea
push
push
push
call
mov
fists
add
add
add
add
roll
add
je
add
fcmovnu
insb
out
add
jecxz
add
jle
add
lods
sub
pop
rep
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
fisubs
andb
lds
add
fsub
add
aad
add
jge
add
add
add
add
fadds
jp
pop
jmp
jb
lods
repnz
add
add
sti
je
icebp
cld
add
mov
add
lcall
mov
push
lea
push
push
push
lea
push
push
lea
push
call
jmp
mov
fimull
add
leave
in
jno
add
add
lcall
insb
cltd
mov
xchg
stc
shr
mov
add
scas
js
scas
insb
add
add
add
ljmp
cltd
pop
pop
int3
pushf
add
pusha
add
add
testl
sub
pop
add
push
push
call
mov
add
add
arpl
rcrl
mov
push
mov
popf
add
jle
jne
movsb
mov
push
mov
jne
add
into
add
add
push
not
inc
shr
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
addl
mov
add
add
rolb
add
mov
add
stc
loop
mov
repnz
mov
pop
add
jbe
test
add
clc
test
add
in
add
add
add
lcall
inc
and
int3
iret
iret
push
push
lea
push
push
call
add
xlat
push
mov
cmc
add
pusha
mov
add
cmpsb
aad
add
add
scas
stos
add
lods
jmp
jb
testb
add
add
add
jmp
mov
push
pusha
js
out
test
cmc
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
rcrl
subl
add
clc
jecxz
addl
add
stos
mov
in
fcomps
les
add
push
push
call
fwait
push
push
mov
mov
data16
add
js
mov
add
add
add
mov
pop
in
popf
add
add
sbbl
add
add
imul
push
clc
jbe
add
add
add
out
add
push
insb
add
pop
mov
xor
push
add
inc
lea
pop
mov
xor
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
jp
add
mov
add
fadds
mulb
add
rolb
add
nop
jae
ljmp
add
sarl
lret
jnp
add
out
in
fcomps
ret
inc
xor
pop
add
mov
push
push
not
sub
push
or
not
add
sub
ror
add
add
sub
pop
dec
inc
add
pop
push
push
push
push
push
push
push
call
add
loopne
iret
xlat
add
ffree
xchg
add
lds
pusha
mov
add
add
mov
add
out
mov
add
mov
arpl
aad
imul
mov
popa
repnz
add
push
sub
pop
pushl
call
push
push
push
push
push
push
call
icebp
xchg
stos
mov
fists
add
add
test
test
pop
fs
jo
adcb
out
add
add
push
push
lahf
mov
repnz
xchg
add
int3
xorl
add
push
fdivl
add
jns
add
repnz
sub
pop
push
push
push
sub
sub
add
push
push
pop
add
shl
sub
dec
ror
pop
ror
rol
shr
rol
pop
push
push
push
push
push
push
lea
push
push
call
jp
cltd
add
push
fs
popf
mov
add
cld
add
icebp
add
roll
add
lods
add
add
add
fwait
pusha
add
add
lea
mov
outsl
add
stos
lods
test
add
xlat
add
bound
push
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
loop
mov
add
xchg
stos
xchg
test
rcl
sti
mov
mov
add
add
pusha
leave
xchg
jmp
rolb
testb
lea
iret
add
push
add
fs
add
lods
mov
mov
test
icebp
mov
pushf
sub
pop
call
push
shl
pop
mov
push
push
push
call
lret
push
add
cmpsb
popa
test
mov
add
outsl
mov
lods
mov
add
rorb
add
mov
out
add
stos
add
sar
imul
mov
sbbl
bnd
add
xchg
add
movsb
add
pop
sub
pop
push
push
push
push
push
call
add
add
popf
add
add
test
mov
ljmp
add
mov
push
mov
out
ror
mov
add
jb
xchg
add
bound
lret
je
in
lock
push
mov
push
lea
pop
add
push
not
not
pop
add
push
push
push
call
insb
add
jbe
test
ljmp
add
pop
clc
mov
lods
ja
int3
add
nop
jmp
jle
xchg
add
mov
add
add
in
lods
add
jnp
in
hlt
lcall
ret
mov
mov
xor
push
lea
push
push
call
jle
cli
mov
mov
add
add
xchg
mov
mov
imul
iret
add
jno
sub
pop
add
push
push
lea
push
lea
push
call
cwtl
pop
mov
cld
add
add
test
pop
jae
add
pop
push
add
add
cli
add
xchg
pop
jmp
popa
xchg
add
add
out
stos
add
jle
cli
mov
loop
add
add
sub
pop
mov
xor
push
inc
pop
add
push
shr
pop
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
test
divl
rolb
lods
stc
add
pop
add
add
int3
lods
out
add
add
testl
outsl
lods
xchg
movb
add
push
add
add
add
add
test
ror
mov
sub
pop
mov
xor
push
rol
pop
rep
push
inc
xor
not
pop
mov
xor
push
rol
pop
or
je
push
lea
push
call
out
add
add
mov
in
cld
les
popl
mov
test
add
sub
pop
mov
xor
push
push
push
push
push
push
call
add
push
mov
rcll
fadds
add
pop
add
jae
loope
jns
nop
add
add
mov
mov
aad
add
add
pop
movsb
test
add
add
add
push
out
add
add
int3
jns
rcrl
add
add
in
call
mov
xor
push
dec
shl
not
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
call
jo
in
add
push
add
add
popf
add
add
add
pop
lahf
hlt
shl
xchg
add
clc
add
add
mov
int
add
call
mov
add
mov
mov
pop
scas
imul
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
fwait
movl
out
add
iret
add
mov
mov
ljmp
js
xchg
add
mov
cli
add
jno
rolb
pop
push
push
rol
shl
pop
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
iret
jno
lret
add
fucomip
add
pusha
add
mov
add
add
add
pop
xabort
lahf
add
je
pusha
pop
std
add
add
stos
push
fildll
push
add
mov
into
xchg
add
icebp
xchg
add
xchg
lods
add
mov
sub
pop
xor
push
push
push
lea
push
push
push
push
lea
push
push
call
hlt
jne
xchg
ret
add
jns
add
add
fistpl
jmp
mov
push
imul
add
lock
add
fildl
jle
add
mov
fsubr
add
cmpsl
movsl
add
les
not
shr
pop
add
pop
push
push
push
push
push
push
push
call
add
add
cwtl
in
int
hlt
out
notl
testl
add
add
mov
add
add
xchg
mov
add
rol
jge
mov
insb
hlt
add
push
add
aam
cld
push
popf
scas
je
xlat
pop
add
add
bound
mov
mov
pop
rep
mov
push
push
push
lea
push
push
push
call
fcmovnb
int3
add
pushf
rcr
jmp
mov
je
imul
outsl
mov
in
addl
movsl
add
mov
add
out
out
enter
lock
lods
add
mov
scas
jmp
je
lcall
rolb
js
stos
sub
pop
xor
push
push
lea
push
lea
push
push
call
push
add
add
pop
pop
lods
call
add
mov
add
add
mov
sarl
xchg
add
pop
mov
in
out
shll
in
pop
add
push
rol
ror
add
pop
or
je
push
add
ror
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
call
push
add
add
add
add
mov
mov
add
add
clc
add
add
popf
pop
mov
fiadds
sub
pop
add
push
push
lea
push
lea
push
push
push
lea
push
call
add
push
add
add
fisubs
hlt
in
xchg
push
jbe
pop
add
leave
shlb
mov
add
ret
fmul
roll
roll
cmpb
add
add
jbe
std
pop
add
shll
rclb
add
in
add
in
in
lcall
movsb
push
push
lea
push
push
push
push
call
mov
nop
movsl
add
clc
add
aam
ljmp
fiadds
add
add
mov
xchg
push
outsl
add
jns
add
int3
lret
add
cmpsl
cmpsb
add
fldl
mov
pop
push
push
dec
push
sub
add
add
sub
xor
pop
shr
pop
push
xor
lea
shr
pop
pop
push
push
push
push
push
call
mov
pop
in
gs
lds
leave
mov
in
xchg
add
ret
iret
fldl
add
cli
cmpsl
add
add
cmpsl
add
test
fcoml
scas
sub
pop
mov
push
push
call
add
push
mov
add
ja
fwait
loop
cmpsb
enter
add
rcl
mov
xchg
gs
mov
add
andb
pop
jae
add
imulb
sub
pop
mov
push
dec
add
pop
mov
jmp
push
push
push
push
push
lea
push
push
push
push
call
push
lret
add
fisubrs
add
add
add
rcl
popf
cld
pop
fmulp
add
jno
iret
shl
pop
aam
add
stc
hlt
add
mov
add
sub
pop
push
push
push
push
push
push
push
push
call
icebp
cltd
add
imul
add
add
lcall
stos
push
loope
out
mov
pop
cmpsb
add
lock
pop
andl
pop
jge
add
out
push
repnz
add
lcall
in
push
push
push
push
push
push
push
call
in
add
out
jo
pop
rcrb
mov
add
pop
lock
bound
movsl
add
jl
add
mov
pusha
add
add
add
fistpl
addr16
pop
add
push
lea
pop
push
push
pop
push
push
push
push
push
push
lea
push
call
fldenv
loope
add
xchg
lret
add
hlt
jp
mov
rolb
loop
mov
out
mov
add
jp
add
add
aam
popf
add
mov
test
popf
cwtl
add
hlt
aad
mov
pop
aam
nop
loopne
mov
add
push
std
mov
lcall
mov
push
dec
lea
pop
pop
push
push
push
push
push
lea
push
call
data16
jo
xchg
add
fcmovnbe
add
gs
in
lahf
add
out
add
fwait
add
add
add
xchg
add
add
add
mov
sub
pop
pop
pop
push
sub
ror
sub
pop
pop
leave
push
dec
pop
ret
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
push
add
mov
popa
sti
sahf
add
cmpsl
jnp
shlb
add
jnp
fstpl
ljmp
mov
pop
in
add
fstl
nop
roll
lcall
add
imul
add
out
add
jle
add
add
xchg
incb
add
add
pushf
sub
pop
push
mov
push
push
push
push
push
call
add
add
add
jmp
add
int
flds
jns
pop
push
mov
std
add
rolb
xchg
mov
add
les
loop
add
add
imul
jmp
rcrb
lret
sub
pop
add
push
push
inc
pop
push
push
sub
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
in
add
jmp
add
int
add
rorl
push
add
add
jo
insb
cwtl
add
ja
iret
add
lcall
push
lea
add
pop
movl
push
dec
pop
addl
test
je
push
lea
push
push
push
push
lea
push
push
push
call
out
imul
add
pusha
add
loopne
popf
mov
pusha
nop
mov
movl
push
add
add
mov
pop
movsb
add
jae
jnp
scas
add
jne
mov
test
bound
loopne
mov
push
push
push
push
call
mov
add
imul
jmp
jl
icebp
sti
cltd
cltd
addl
mov
xchg
jno
rcll
pop
mov
rcl
add
add
into
add
lret
add
in
lock
lcall
push
ror
lea
shr
pop
pop
pop
push
inc
shl
pop
pop
leave
push
sub
pop
ret
push
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
cltd
popf
jae
add
add
imul
add
add
shll
push
mov
add
jp
xchg
xchg
in
shrb
mov
in
test
push
add
in
push
lea
not
ror
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
roll
mov
add
pop
je
sahf
add
lahf
int3
jbe
rolb
add
add
iret
icebp
add
cmpsb
mov
cmpsl
add
lahf
add
lcall
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
sti
fadds
add
cmp
add
std
add
sti
clc
add
in
add
add
xchg
test
cli
add
add
add
add
add
sub
pop
push
push
push
push
push
push
push
call
aad
add
push
add
add
jmp
call
xlat
lret
add
add
pushf
jmp
out
ror
add
out
add
add
xchg
add
scas
mov
xlat
outsl
add
lds
addr16
faddp
add
pop
push
push
add
add
pop
testl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
jne
xchg
jnp
jle
jo
push
add
xchg
fistpl
iret
add
mov
push
iret
add
shrb
ja
add
add
scas
sub
pop
addl
push
inc
pop
push
call
push
add
pop
mov
push
add
add
rol
shl
pop
pushl
push
push
add
shl
pop
push
push
dec
pop
call
cmpl
jne
push
add
xor
pop
pop
push
sub
pop
pop
pop
push
shl
add
shl
not
pop
pop
leave
push
lea
push
lea
push
lea
push
call
gs
jl
push
add
mov
add
js
rorb
fidivrs
test
fdiv
out
add
movsl
rolb
into
idivl
movsb
add
mov
testb
add
add
push
push
push
lea
push
call
add
add
arpl
add
cltd
lret
add
add
xchg
add
aam
add
add
lds
mov
add
flds
int3
ljmp
fisubs
into
add
cltd
add
add
jno
and
pop
mov
push
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
fbstp
add
mov
fs
add
loope
add
mov
pop
add
nop
pop
add
add
add
add
mov
mov
add
cmpsl
mov
add
adc
in
add
add
test
mov
xchg
push
add
add
mov
lods
add
add
arpl
test
lcall
push
push
push
push
call
lea
lea
rcrl
movsb
add
add
mov
cmpsb
add
add
jp
push
movsb
add
lock
add
add
jo
add
pop
add
pushf
gs
sahf
roll
mov
xchg
add
add
test
xchg
outsl
add
add
popa
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
stc
push
mov
add
add
add
cmpb
add
add
fsubrl
clc
jnp
jmp
imul
add
pop
fisubrs
pop
mov
mov
push
add
add
mov
in
loopne
lcall
push
dec
pop
push
push
sub
dec
dec
add
pop
movl
push
push
push
push
push
push
push
push
call
add
mov
add
jns
add
js
add
xchg
faddl
add
add
test
xlat
fsubl
cltd
add
rorl
in
loopne
push
push
pop
call
push
not
pop
push
push
shr
add
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
call
push
add
jne
add
add
add
add
mov
add
arpl
add
sti
add
bnd
stos
add
mov
mov
mov
roll
add
add
clc
in
add
push
push
add
loop
xchg
jb
rcll
add
gs
je
add
lcall
insl
cld
add
xor
call
add
add
hlt
add
xchg
push
add
mov
rcr
add
add
add
ja
clc
mov
fiaddl
sahf
jp
add
add
test
add
mov
in
hlt
pop
cmpl
jne
push
push
lea
push
call
outsl
add
add
add
addr16
add
ret
fadds
add
add
add
cltd
add
push
jns
mov
test
push
push
push
push
lea
push
push
push
push
push
lea
push
call
pop
imul
add
add
add
mov
popa
add
leave
add
popf
add
mov
jnp
pop
cli
push
add
add
add
movl
mov
loope
mov
push
test
lret
loop
mov
popl
add
addl
outsl
popf
push
push
call
shr
add
iret
mov
in
fsincos
testb
add
add
in
mov
add
add
fistpll
jae
add
pop
pop
pop
push
add
pop
leave
push
shr
shr
sub
pop
ret
push
lea
push
lea
push
push
push
push
call
rol
je
add
add
addl
test
jnp
pop
out
shl
jne
flds
lret
lea
add
pushf
pop
add
add
add
movsb
movsl
jae
add
add
jns
add
lcall
push
dec
pop
mov
push
push
push
push
push
push
push
call
pop
jp
shlb
call
add
add
icebp
lcall
add
add
add
lret
add
jmp
flds
popf
add
add
pusha
imul
xchg
add
lret
in
in
lcall
cld
push
shl
not
pop
push
push
push
push
push
push
lea
push
call
add
mov
add
add
aad
push
mov
add
shll
movsb
add
add
add
fistps
jne
add
fiadds
lcall
push
push
lea
push
push
push
call
push
aad
jno
xchg
add
incb
add
test
push
pop
in
lahf
shrl
int
clc
mov
popf
mov
addl
push
push
lea
shl
push
and
add
shl
add
add
sub
lea
pop
add
xor
add
pop
push
shl
shl
pop
pushl
call
push
lea
push
call
mov
push
loopne
add
add
mov
mov
add
add
jmp
les
pop
test
add
iret
mov
add
add
add
bound
add
add
push
add
mov
add
add
add
add
into
add
xchg
xchg
add
jle
add
nop
in
xchg
add
sub
pop
call
push
push
inc
inc
add
push
sub
add
lea
sub
not
inc
lea
add
pop
ror
pop
push
lea
push
push
push
push
lea
push
call
call
imul
loop
add
pop
jmp
fwait
shll
add
add
add
add
int
test
incb
add
add
fst
pop
add
arpl
imul
add
push
leave
sub
pop
pushl
push
lea
push
lea
push
push
lea
push
call
rcl
add
add
fcoml
add
cmpsb
movl
std
fildl
jl
add
hlt
mov
push
add
mov
clc
pop
pushf
test
mov
sub
pop
call
push
lea
push
push
call
ficoml
add
jmp
add
outsl
stos
add
pop
push
mov
outsl
push
js
test
movb
mov
mov
pop
cmpsb
sti
xchg
lret
mov
iret
loope
add
pop
mov
push
into
sub
pop
call
push
push
sub
lea
shl
push
xor
add
inc
shr
sub
add
sub
pop
ror
pop
push
shl
add
shl
pop
pushl
call
push
shl
pop
call
push
shl
pop
mov
push
push
lea
push
push
lea
push
call
jnp
cwtl
add
add
bnd
add
insb
pop
add
add
pop
add
movsb
ja
int
add
push
iret
js
leave
jle
sub
pop
lea
push
shl
not
sub
pop
sub
push
push
push
lea
push
push
lea
push
call
data16
add
scas
xchg
addb
add
cwtl
mov
loopne
pop
out
add
add
push
pop
mov
add
mov
jle
mov
xchg
add
cmpsl
out
testl
call
mov
push
push
push
push
push
push
push
push
push
call
add
mov
add
ret
add
repnz
jne
mov
add
add
mov
add
add
rolb
add
add
sub
lcall
call
push
lea
push
call
push
add
add
lds
xchg
add
add
add
mov
add
sub
lea
add
cmc
mov
out
add
add
add
add
addl
add
in
lock
lcall
inc
or
lea
push
push
lea
push
push
push
push
push
push
push
call
jmp
cmc
add
fs
loopne
push
mov
xchg
rcll
add
enter
movsb
test
pusha
roll
hlt
mov
mov
repnz
add
clc
test
add
add
fisubl
add
inc
cld
push
dec
ror
pop
mov
push
push
push
push
call
mov
lahf
iret
add
add
mov
jge
mov
add
clc
cmc
add
jge
rcll
add
add
add
lcall
inc
or
push
push
call
add
mov
xchg
pop
cld
in
call
add
add
add
lcall
mov
xchg
pop
bound
xchg
out
add
in
jnp
add
add
jne
push
insb
add
add
mov
stos
add
mov
jns
mov
lock
push
roll
sub
pop
add
push
inc
pop
mov
push
lea
push
call
mov
lods
add
cld
mov
fwait
clc
fwait
add
add
repnz
cmpsl
push
add
add
add
ja
add
jnp
into
adc
lcall
nop
nop
nop
nop
cmp
jne
push
sub
rol
sub
pop
cmp
jne
push
sub
sub
pop
mov
movl
push
push
push
push
lea
push
push
push
call
pop
jge
mov
add
nop
addr16
fimuls
xchg
add
loop
xchg
xchg
jl
jne
popa
negb
test
push
add
stos
shr
add
xchg
js
jns
add
add
add
mov
add
add
add
jns
addl
add
in
in
jmp
mov
push
push
lea
push
push
push
push
lea
push
call
xchg
xchg
add
mov
add
jle
add
xchg
addl
rcll
add
add
cld
in
add
je
in
in
mov
sub
jne
push
dec
pop
mov
push
lea
push
push
lea
push
call
mov
icebp
mov
add
fucomi
addr16
add
mov
add
insb
nop
pop
mov
add
add
push
mov
push
mov
add
push
lods
fildl
add
add
roll
mov
in
lock
movl
jmp
push
add
pop
mov
push
push
lea
push
push
push
push
push
push
call
add
int3
jae
mov
mov
hlt
add
add
mov
add
data16
push
mov
lods
sub
pop
mov
cmp
jne
push
push
lea
push
push
push
push
call
add
add
push
addb
add
add
cld
fbstp
jns
add
out
mov
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
les
jmp
add
lcall
imul
testb
add
test
arpl
sub
add
mov
mov
call
jb
data16
leave
std
lods
jle
add
iret
sub
jl
xorl
fcompl
add
add
add
pop
push
add
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
mov
push
jmp
shl
add
movsl
aad
push
add
add
add
add
add
fldl
inc
cld
push
inc
inc
not
xor
pop
cmpw
jne
push
dec
pop
mov
push
sub
rol
pop
movl
push
lea
push
push
push
push
push
call
neg
js
xchg
add
add
add
rcl
pop
add
add
testb
clc
add
popa
lds
add
ret
popf
add
add
mov
add
add
call
add
pushl
push
push
call
imul
hlt
adcl
leave
lock
mov
add
add
stos
jb
push
add
lahf
add
add
mov
les
add
test
fdivrl
test
jmp
jnp
leave
pop
cwtl
push
stc
add
cld
jo
je
xlat
add
push
mov
jae
mov
pop
push
pop
mov
push
add
shr
dec
pop
mov
mov
push
push
ror
sub
add
push
and
add
shl
sub
sub
sub
shr
pop
sub
pop
push
lea
push
push
push
push
call
add
cmpsl
mov
vcvtpd2psx
add
add
fidivrs
pop
add
call
test
fildl
add
add
jl
jnp
in
movsl
je
scas
fcompl
cmpsl
jb
add
add
sbb
add
add
mov
add
test
mov
lcall
push
push
lea
push
push
push
push
push
push
call
mov
push
mov
rolb
loopne
lea
addb
push
add
in
fldenv
mov
add
iret
hlt
add
add
add
add
cld
addl
pop
call
push
ror
pop
cmpl
je
push
push
ror
push
or
inc
add
sub
xor
sub
pop
shl
pop
push
lea
pop
push
call
push
push
push
call
in
bnd
xchg
add
mov
stos
arpl
mov
push
out
add
add
mov
in
mov
div
mov
add
mov
add
les
jge
add
add
cmpl
je
push
push
shr
push
push
pop
add
shr
ror
ror
sub
lea
pop
lea
pop
push
shr
rol
pop
push
call
push
xor
pop
cmpl
je
push
push
sub
xor
not
push
or
not
add
sub
lea
dec
sub
shr
shr
pop
shr
pop
push
rol
pop
push
push
sub
pop
call
cmpl
je
push
push
xor
push
and
add
xor
rol
sub
lea
add
pop
add
add
lea
dec
pop
push
ror
rol
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
pop
rcl
iret
jne
add
add
add
add
add
add
mov
add
add
mov
ja
push
xchg
data16
add
add
mov
add
iret
xor
add
ret
test
cmp
shr
xor
add
push
sub
add
sub
shr
ror
add
sub
shr
pop
add
xor
add
pop
push
lea
push
call
add
xlat
add
test
fs
jb
mov
ja
jae
pop
into
add
add
cwtl
add
add
mov
add
sub
pop
push
push
xor
sub
shr
pop
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
ja
add
jo
add
je
fildll
mov
jnp
pop
add
pop
add
mov
add
add
add
jecxz
add
lock
pop
add
faddl
out
jmp
add
lcall
js
jmp
les
je
push
push
shr
rol
push
push
pop
add
sub
ror
sub
add
not
sub
not
pop
not
pop
push
shl
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
rclb
jge
add
add
xchg
fcmovnbe
imul
add
add
add
add
stos
leave
cmpb
xchg
test
jno
testl
mov
push
add
jge
movsb
in
pusha
nop
lahf
sub
pop
call
push
xor
add
pop
cmpl
jne
push
add
pop
mov
push
lea
push
push
push
push
push
call
loope
popa
lret
add
sahf
shl
adcl
xchg
mov
pusha
mov
sti
add
jb
add
pop
add
push
pop
jl
in
add
sub
pop
movl
push
pop
jmp
xor
push
sub
pop
pop
push
shr
not
pop
pop
push
shr
pop
pop
push
add
pop
pop
push
push
push
push
lea
push
push
lea
push
call
add
pushf
addr16
add
out
add
add
mov
nop
add
push
mov
ret
in
call
fstl
add
fsts
xchg
add
pop
add
ja
lret
add
add
add
add
push
sub
pop
leave
push
push
push
push
push
push
push
push
call
jle
repnz
cmc
add
cld
add
fwait
gs
add
popf
fwait
cltd
icebp
add
jecxz
mov
cld
add
mov
int
xchg
mov
push
fcoms
faddl
mov
add
cwtl
fucomip
icebp
add
mov
jo
fldenv
sub
pop
ret
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
mov
jmp
jge
insb
iret
pop
sahf
insb
xchg
pop
add
cmpsb
pop
out
mov
ja
add
in
roll
in
push
add
shl
pop
add
push
dec
add
pop
cmpl
jne
push
push
dec
xor
rol
push
or
inc
add
sub
rol
shr
add
sub
sub
add
pop
shr
lea
not
inc
pop
push
push
push
push
push
push
push
call
lds
add
fs
add
add
add
add
xchg
lods
mov
add
add
add
xchg
fbstp
add
int3
mov
lcall
mov
ficoms
insb
aam
iret
notb
add
sub
pop
pushl
push
pop
call
push
sub
pop
push
push
push
push
call
testb
add
add
add
add
add
fisttpll
pushf
stc
xorb
add
test
add
add
sbbl
add
mov
frstor
add
fsubl
nop
add
sub
pop
call
push
add
sub
dec
rol
pop
jmp
cmpl
jne
push
rol
pop
mov
push
xor
lea
pop
call
ret
push
lea
shr
pop
jmp
cmpl
jne
push
push
not
push
push
pop
add
rol
sub
xor
pop
inc
add
ror
pop
push
shr
pop
pushl
push
sub
dec
shr
pop
call
push
push
push
push
push
push
push
push
push
push
call
loope
lahf
mov
add
jno
shrl
bnd
jb
add
mov
add
pop
add
add
adcl
add
add
add
lea
push
aam
mov
add
data16
pop
call
push
push
push
push
push
push
lea
push
push
call
xchg
jne
add
data16
js
add
add
roll
jbe
aam
cmpsl
mov
arpl
int
out
add
xorb
add
add
add
rolb
jb
enter
add
add
fldenv
add
mov
lcall
pop
sbb
add
push
push
lea
push
push
push
call
xchg
shl
jle
jnp
sbbb
fistl
lret
mov
add
aad
popf
mov
add
sub
mov
push
imul
add
jge
add
test
add
add
call
pop
cmpl
jne
push
lea
pop
mov
mov
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
xchg
add
mov
loop
test
add
add
stc
add
jne
rol
mov
mov
add
jno
jb
pop
leave
jnp
stos
add
add
add
mov
push
idivb
add
cltd
add
add
mov
push
add
add
aam
pushf
mov
push
push
push
lea
shl
not
ror
push
push
pop
add
sub
sub
shr
pop
xor
shr
sub
pop
push
push
push
push
push
push
push
push
call
mov
jp
add
add
in
loope
mov
ljmp
push
xchg
mov
test
add
movl
lcall
jne
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
test
add
add
cmpsl
add
lods
xchg
scas
jle
pop
xchg
test
add
out
add
push
mov
fadds
mov
mov
loop
mov
loopne
in
fcomps
fldcw
add
push
lea
pop
call
push
push
shr
push
or
inc
add
ror
sub
add
shr
lea
pop
add
shr
pop
push
shr
rol
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
push
call
icebp
add
in
loope
xchg
add
mov
aam
in
add
movsb
rolb
aam
jge
add
in
scas
lcall
lods
loopne
in
pop
mov
imul
add
xchg
add
notb
xchg
mov
mov
add
sub
pop
call
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
fmul
add
add
flds
add
lret
pop
mov
test
popa
push
add
add
imul
andb
add
sub
fcomip
jo
ljmp
lods
lds
jp
add
jns
push
stc
xchg
sub
pop
call
push
push
add
push
push
pop
add
lea
dec
sub
xor
pop
dec
pop
push
push
push
push
push
push
push
push
call
jl
mov
add
push
add
ret
mov
push
add
outsl
add
mov
mov
insb
add
push
add
mov
out
movsb
cltd
mov
fsubr
add
mov
loopne
pushl
push
dec
pop
call
call
push
push
dec
add
push
and
add
sub
rol
pop
dec
dec
pop
push
sub
shr
add
rol
pop
pushl
call
push
xor
rol
pop
call
push
push
push
push
pop
add
ror
inc
sub
ror
pop
shr
lea
dec
pop
push
push
lea
push
push
push
call
lcall
add
arpl
add
xchg
mov
xchg
ret
rcl
add
xchg
cld
mov
add
add
out
add
add
testl
or
es
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
jmp
add
add
xlat
push
add
add
add
pusha
mov
add
in
loopne
call
push
push
add
dec
push
sub
add
lea
add
sub
inc
pop
lea
xor
pop
push
inc
pop
pushl
push
push
lea
push
push
push
push
call
add
add
push
add
not
mov
aad
jno
mov
ljmp
lods
cld
mov
je
xchg
pop
mov
retw
loopne
pop
push
mov
push
ljmp
push
jmp
sub
pop
call
call
push
push
push
sub
add
ror
sub
dec
shr
pop
add
add
not
shr
pop
push
xor
pop
pushl
push
push
push
push
push
call
add
call
add
add
addl
add
add
pop
loop
pop
fsubrl
xchg
add
push
add
roll
add
xchg
add
fiaddl
cwtl
mov
mov
add
pusha
fiadds
sarl
fildl
outsl
cltd
add
add
mov
rorl
xchg
add
sub
pop
call
push
sub
not
inc
pop
call
push
push
dec
push
or
inc
add
not
xor
shl
sub
pop
shl
pop
push
not
rol
not
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
aam
jb
add
mov
lods
fstpt
add
mulb
pop
popf
xchg
mov
pop
mov
add
add
add
pop
add
xchg
fiadds
movsl
push
add
add
cld
add
xchg
fsubs
add
sub
pop
call
push
push
push
push
push
lea
push
lea
push
call
add
add
add
jno
shlb
add
addr16
add
add
add
add
add
mov
jecxz
add
add
pop
pop
pop
loop
jl
add
popf
stos
xchg
ja
add
sti
add
fildl
mov
pop
add
lock
enter
pop
call
push
push
add
not
push
and
add
inc
sub
sub
shl
pop
add
pop
push
push
push
push
lea
push
call
bound
jecxz
jmp
jge
xchg
pushaw
add
cltd
add
neg
sar
pop
push
hlt
test
popf
push
add
add
mov
les
lcall
jne
push
xor
xor
sub
pop
call
push
inc
lea
pop
call
push
push
sub
sub
push
or
not
add
sub
sub
inc
pop
xor
pop
push
push
lea
push
push
lea
push
lea
push
push
call
addb
out
ret
add
sti
xchg
out
xchg
hlt
lods
imul
push
push
add
aad
icebp
add
add
test
add
nop
add
in
lcall
jne
push
lea
push
push
push
lea
push
call
add
add
pop
movsl
add
icebp
lds
sahf
mov
mov
and
mov
xchg
pushf
add
add
add
shl
leave
les
sarl
loop
add
push
push
lea
push
push
push
call
pushf
stc
fisubrs
pop
movl
mov
add
std
add
lea
add
in
in
pop
lea
push
xor
shl
lea
inc
pop
push
call
push
push
inc
lea
push
or
inc
add
inc
sub
dec
shr
pop
inc
add
shr
pop
push
push
push
push
call
add
imul
fstps
jp
js
fadds
popa
mov
add
jno
add
add
scas
scas
mov
lock
add
incb
testb
pop
fxch
add
add
sub
pop
pushl
push
shl
add
shl
pop
call
push
lea
push
call
add
add
mov
mov
add
mov
xchg
icebp
movsb
add
cmpsl
clc
lcall
jmp
add
rolb
fldt
pop
sub
pop
call
push
push
lea
push
push
pop
add
sub
rol
inc
pop
inc
add
pop
push
dec
not
sub
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
call
movsb
push
mov
popa
pusha
add
cli
shr
movsl
add
movsb
add
stos
add
addb
push
imul
mov
pop
fwait
data16
add
loopne
sti
lret
add
xor
add
push
push
lea
push
push
push
call
stos
in
mov
add
stc
aam
add
mov
cmpl
clc
add
sarl
add
add
jecxz
jnp
insb
out
mov
add
movsl
xlat
fs
xchg
test
loope
add
add
add
add
jo
in
in
pop
call
push
push
shl
add
shl
push
sub
add
shr
sub
sub
shl
pop
lea
sub
not
ror
pop
push
push
lea
push
push
push
push
push
call
add
out
push
add
add
add
add
add
xchg
cmc
je
out
incb
jns
add
jbe
add
add
pop
add
mov
add
je
xchg
ja
add
fildl
add
lcall
pop
flds
jae
add
jb
fwait
add
hlt
mov
movsl
aam
in
in
lcall
jne
push
rol
pop
call
call
push
push
ror
inc
push
or
inc
add
xor
dec
sub
xor
xor
dec
sub
pop
shr
add
pop
push
xor
sub
xor
rol
pop
pushl
push
push
lea
push
push
push
push
push
call
imul
lret
stc
add
scas
jle
jne
mov
xchg
lcall
add
lds
add
add
add
test
mov
stos
pop
add
add
aam
add
add
hlt
insb
andl
xlat
jnp
in
in
lcall
push
push
add
push
push
shr
sub
add
sub
push
and
add
xor
xor
sub
shr
not
inc
shr
pop
sub
ror
pop
push
push
lea
push
or
not
add
ror
sub
add
add
sub
rol
lea
pop
pop
push
push
push
push
call
add
scas
pusha
fadds
pushf
add
jmp
movsb
cmpsl
icebp
movsb
mov
lret
fldcw
cwtl
push
add
push
mov
push
mov
add
scas
add
add
add
add
add
add
sub
pop
call
push
add
shl
xor
pop
pop
dec
jne
push
push
rol
xor
add
push
or
not
add
dec
sub
lea
pop
add
shr
sub
pop
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
hlt
add
add
jns
add
add
add
add
pop
in
pop
pop
add
jne
gs
add
add
add
mov
add
shll
sub
pop
pushl
push
lea
push
push
call
clc
add
ret
data16
addb
pop
add
mov
add
xchg
jl
add
add
push
add
ljmp
int
nop
bound
add
pop
add
jno
sub
pop
call
push
push
push
push
push
push
push
lea
push
call
int3
insb
mov
in
add
lea
add
fdivs
sbbl
in
add
push
add
add
jno
add
scas
add
add
in
add
add
ja
insb
add
sub
pop
mov
lea
push
push
rol
shr
rol
push
or
inc
add
add
xor
sub
add
pop
xor
pop
push
push
push
push
call
out
popa
add
enter
add
add
jl
js
jno
add
cmpsl
add
test
out
add
jb
add
push
icebp
scas
mov
sub
pop
pushl
push
shr
pop
call
push
shr
pop
lea
push
push
pop
push
push
push
push
push
push
call
mov
add
add
mov
add
jne
fiadds
add
iret
cwtl
add
add
add
add
roll
stc
test
jmp
jmp
test
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
sahf
test
add
fildl
aad
in
add
jmp
add
je
add
js
pusha
push
add
clc
add
add
sbb
cmc
shrl
test
add
mov
lds
scas
add
fistl
lahf
insb
push
add
imul
pop
pushl
push
push
not
shr
push
push
pop
add
add
inc
xor
sub
dec
inc
shr
add
pop
xor
add
ror
pop
push
add
xor
ror
pop
push
call
push
push
lea
push
push
push
call
xchg
popa
jns
add
outsl
add
test
mov
std
add
add
add
test
add
out
test
mov
add
add
add
add
cltd
add
xchg
fiadds
xlat
xchg
add
add
jo
add
loopne
pop
fadd
mov
rolb
fcmovbe
add
imul
pop
sub
pop
call
mov
push
not
add
xor
pop
int3
push
sub
sub
pop
lea
push
push
lea
push
push
pop
add
xor
sub
sub
shr
pop
add
add
dec
pop
push
not
rol
xor
xor
pop
pushl
push
push
lea
push
push
call
add
data16
rcrb
xchg
lahf
ja
add
scas
add
idivb
mov
add
jo
shlb
add
stc
jle
rcr
je
lahf
jno
int
loopne
jb
stc
add
add
lahf
add
cmpsb
add
add
data16
jl
pop
sub
pop
call
push
push
dec
sub
pop
call
push
push
push
or
inc
add
add
ror
lea
inc
sub
dec
pop
xor
not
pop
push
not
lea
shl
pop
pushl
push
push
push
lea
push
push
push
push
call
add
out
add
lahf
fstl
add
add
jb
popf
add
add
popa
add
add
add
add
mov
mov
in
in
call
push
lea
dec
pop
call
push
push
push
push
push
call
pushf
push
in
add
add
lods
add
add
pop
jnp
pushf
push
pop
in
mov
fistpl
mov
std
rolb
mov
add
lret
mov
je
add
mov
add
add
lcall
inc
cld
push
shr
sub
pop
lea
push
push
xor
shl
dec
push
sub
add
dec
shr
sub
add
shr
pop
inc
lea
pop
push
lea
pop
pushl
call
push
push
push
push
push
call
xchg
add
push
push
notb
mov
repnz
xchg
je
add
add
add
sub
pop
lea
push
lea
pop
push
push
push
lea
ror
add
pop
push
push
add
pop
pushl
push
push
dec
lea
add
push
push
pop
add
rol
add
shl
add
sub
lea
ror
sub
pop
xor
pop
push
push
push
push
push
push
push
push
push
call
push
jecxz
stc
add
movsl
pop
push
add
pushf
test
add
add
add
pusha
add
add
lahf
mov
enter
fiaddl
idivb
imul
roll
cld
in
in
lods
fdivrl
jne
bound
lcall
lcall
call
push
push
dec
sub
inc
push
sub
add
add
sub
rol
lea
shr
pop
dec
xor
dec
pop
push
pop
pushl
call
push
xor
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
mov
enter
xchg
add
jns
leave
jle
add
icebp
stc
pusha
in
add
add
lret
enter
add
add
fcompl
shrb
lcall
sub
add
shl
dec
sub
lea
sub
sub
pop
shl
pop
push
rol
dec
pop
pushl
call
push
add
add
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
hlt
add
add
add
add
les
call
add
add
jge
sti
js
add
fs
movsl
mov
nop
pop
leave
mov
out
bound
test
mov
xchg
add
add
mov
call
cld
les
nop
push
in
fcompl
pushl
push
lea
push
push
lea
push
lea
push
call
jo
frstor
incb
xchg
ret
add
rolb
add
jmp
mov
add
add
add
add
xlat
add
add
add
add
cltd
add
mov
add
add
out
add
lcall
mov
jmp
push
push
sub
push
and
add
sub
rol
sub
shl
shl
pop
rol
ror
shl
pop
push
push
lea
push
call
add
andb
add
add
add
xchg
mov
mov
add
add
mov
mov
in
fiaddl
pop
mov
add
mov
shl
movb
mov
scas
mov
cmc
int3
xlat
lock
lcall
jne
call
push
push
lea
push
push
push
push
push
push
push
call
cli
mov
add
int
add
leave
add
pusha
repnz
addb
add
add
repnz
add
add
fdivr
lcall
add
lcall
shrb
sbb
or
inc
add
not
not
sub
sub
inc
pop
shr
add
inc
pop
push
pop
pushl
push
lea
push
push
push
call
pop
fiadds
add
push
test
xchg
mov
in
ljmp
loop
add
in
into
add
add
adc
enter
add
xchg
jmp
add
mov
scas
outsl
add
cltd
jb
pop
js
pop
push
xchg
mov
nop
ljmp
add
mov
lcall
outsb
adc
add
jge
repz
push
push
lea
push
call
bound
mov
add
filds
add
mov
lds
add
add
mov
out
leave
mov
imul
push
jns
add
out
jb
mov
into
ficompl
stc
add
repnz
add
mov
sub
pop
push
push
push
push
lea
push
push
lea
push
call
mov
les
cmc
mov
add
mov
add
add
outsl
aad
add
lret
add
nop
mov
add
add
add
push
call
lods
add
add
mov
pushf
mov
pushf
std
xchg
add
add
pop
add
rclb
into
mov
add
push
lea
push
push
push
push
lea
push
lea
push
call
pop
add
add
out
out
lcall
js
push
pop
add
fwait
mov
add
add
imul
mov
add
add
addl
lret
fisubrl
int3
add
lea
mov
cmpsb
mov
lcall
push
shr
sub
add
pop
pop
push
sub
shr
ror
pop
pop
push
sub
shl
rol
xor
pop
xor
inc
push
push
push
push
push
push
push
push
push
call
test
idiv
add
aam
add
movsb
cli
mov
test
add
mov
outsl
stc
pop
in
testb
call
call
scas
mov
rcrb
cmpsb
lods
movb
add
rcrl
add
enter
add
add
add
imul
mov
fcompl
or
push
not
pop
leave
ret
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
in
add
add
add
add
fcomp
push
iret
ljmp
aam
mov
pushf
cld
rolb
add
mov
add
xchg
add
jmp
add
int
mov
sub
pop
push
mov
push
lea
push
call
jmp
test
popf
stc
mov
jo
add
jo
fidivrs
popa
push
scas
xchg
mov
movsl
add
lret
xchg
mov
out
xchg
add
mov
movsb
lcall
fiaddl
jge
add
test
add
add
cltd
and
loop
push
push
push
push
push
push
call
ja
loope
outsl
ficoms
add
int
mov
cwtl
repnz
mov
add
add
rolb
rolb
mov
add
add
cltd
popf
add
cmc
shrl
lods
cmc
push
xchg
add
add
lret
ljmp
outsl
out
add
in
mov
jmp
push
push
push
push
push
lea
push
push
call
mov
mov
push
lods
xchg
add
scas
out
lods
stos
stc
mov
stos
int
mov
ljmp
add
ja
mov
sti
xchg
add
out
xchg
pop
add
lds
fsubp
loope
enter
add
add
add
lcall
inc
or
xchg
ja
test
jmp
hlt
movmskps
sub
add
add
add
push
add
add
add
jae
add
add
mov
push
fwait
add
hlt
pop
and
push
lea
push
call
cwtl
lds
add
add
add
add
icebp
mov
add
push
add
add
add
mov
mov
in
push
add
shrb
add
out
add
add
add
add
pop
xor
push
push
push
push
call
add
add
xchg
popf
mov
add
pop
mov
add
add
add
fadd
rolb
iret
icebp
in
imul
add
push
cmc
pusha
add
scas
shl
clc
mov
mov
fwait
loop
push
gs
push
add
add
lcall
push
push
add
push
lea
shr
ror
rol
pop
xor
push
sub
pop
dec
sub
push
push
push
push
call
stos
pop
add
push
or
add
add
add
jae
add
mov
rcr
addb
fldl
fwait
stos
xlat
xlat
add
fisttps
fldt
in
int
add
icebp
push
xchg
mov
ret
mov
xchg
mov
pop
jmp
push
rol
pop
sub
push
xor
add
rol
pop
pushl
push
dec
pop
pop
push
inc
sub
lea
pop
sub
push
push
push
call
add
mov
add
pop
push
add
add
enter
sti
push
lock
add
imul
mov
add
fiaddl
pop
add
add
cmp
jl
call
dec
adcl
mov
aaa
jl
push
lea
push
call
add
test
mov
icebp
add
ja
xchg
ficompl
add
fnstsw
scas
mov
mov
add
add
jne
shlb
push
in
test
sub
pop
mov
lea
push
push
push
push
lea
push
push
push
push
push
push
call
mov
subb
add
xchg
lahf
mov
add
std
outsl
add
popl
jle
add
add
add
mov
pop
ret
test
mov
push
add
jb
enter
addl
popf
add
cmpsb
xchg
add
add
add
not
pop
divb
fcomps
jmp
pop
pop
mov
push
lea
add
add
dec
pop
shr
push
push
push
lea
push
call
add
add
fwait
popf
add
cmpsl
fwait
stos
in
add
add
stc
add
lahf
add
insb
cwtl
add
fildl
jno
add
imul
mov
in
lock
add
push
push
push
push
lea
push
call
add
add
add
add
andb
add
test
jnp
add
loop
add
add
add
add
cmpsb
les
mov
add
imul
jl
filds
add
xchg
sub
pop
sub
pushl
push
add
inc
pop
pop
push
lea
push
push
push
push
call
mov
pop
jmp
add
add
shlb
mov
pop
add
add
mov
add
xchg
add
add
add
xchg
jge
lret
add
add
add
out
add
pop
fldl
out
add
xchg
movsl
sub
pop
shr
push
push
push
call
xlat
mov
rcr
add
add
int3
mov
xlat
add
movsl
scas
nop
js
jb
rolb
add
add
add
data16
test
cli
add
cltd
add
lcall
add
add
outsl
add
ret
lock
add
add
loope
incl
add
hlt
fwait
mov
pop
dec
lea
sub
arpl
push
push
lea
push
push
call
fldt
cld
in
add
add
mov
add
in
arpl
add
jmp
xchg
movsb
add
add
jnp
lcall
movl
mov
shl
fcmovu
add
scas
fiaddl
movsl
mov
je
add
add
add
lcall
jmp
push
sub
not
inc
lea
pop
cmp
jne
leave
push
push
push
push
call
lods
add
add
pop
pop
add
data16
mov
add
cmpsb
mov
test
stos
add
pop
add
cmc
je
push
les
add
add
les
std
flds
mov
shrl
add
add
mov
xchg
mov
lock
lcall
add
push
add
pop
push
push
add
sub
pop
mov
add
push
push
push
push
push
push
push
call
mov
cmpsl
rcrb
in
add
mov
jo
imul
flds
sarb
mov
cli
add
add
jl
outsl
mov
mov
shlb
xchg
lods
sub
pop
push
push
pop
push
push
push
lea
push
push
push
call
jmp
add
cwtl
jp
arpl
movsb
addl
mov
test
xchg
fiadds
push
add
in
jecxz
mov
in
lock
push
push
inc
pop
push
mov
push
push
push
call
xchg
add
add
shll
cmpsb
std
add
fildll
add
add
add
add
add
jns
push
add
add
jbe
popl
pop
in
lahf
push
add
sub
pop
lea
push
push
push
call
pushf
arpl
icebp
aam
add
add
insb
xchg
add
lcall
ja
add
filds
add
fcmovnu
jmp
in
add
pushf
mov
std
data16
hlt
lcall
ljmp
push
push
push
push
push
push
call
ljmp
rorb
add
shll
add
mov
add
roll
fimull
out
add
mov
test
xchg
add
addl
pop
lods
jp
out
sti
add
add
out
nop
xchg
add
test
in
in
lcall
adc
fldcw
push
call
mov
scas
pop
lock
pop
push
add
xchg
mov
push
shll
into
jb
add
xlat
mov
fildl
aam
add
add
add
jle
pop
loope
js
call
cmpsb
sti
add
add
mov
add
add
push
out
cli
add
lcall
ljmp
not
pop
add
push
rol
shr
sub
sub
pop
mov
push
inc
shr
sub
pop
add
push
add
add
pop
mov
push
push
push
lea
push
call
mov
out
pop
cmc
stc
fildl
loope
add
pop
jle
call
scas
add
add
fadd
push
add
add
loope
add
add
mov
jns
add
pop
xlat
flds
add
pushf
add
fsubl
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
pusha
add
add
gs
imul
fstps
loopne
add
lcall
xchg
add
sub
add
add
movb
pop
std
lock
add
in
loopne
xor
push
add
inc
pop
mov
push
push
call
lock
pop
push
jp
add
pushf
roll
add
add
add
add
cmc
lret
jecxz
sti
add
pusha
add
push
stos
insb
in
jb
add
pop
mov
xchg
pop
add
add
arpl
add
ficomps
pop
add
popf
arpl
xchg
add
jb
incb
add
lcall
loopne
push
sub
sub
dec
sub
pop
rol
rol
push
push
push
push
lea
push
lea
push
push
push
call
fidivrl
add
mov
enter
add
add
rolb
mov
add
pop
mov
in
cmpsb
xchg
mov
pushfw
mov
jp
fisubrl
movsl
add
aam
icebp
mov
mov
jp
add
xchg
mov
jmp
push
stc
jo
sub
pop
xor
push
inc
inc
pop
inc
cmpb
jne
push
push
lea
push
push
call
add
pop
jmp
add
jbe
add
add
mov
jno
lahf
fisubrl
stos
push
mov
xchg
add
movsl
add
mov
stos
add
addb
add
leave
pop
cwtl
add
imul
add
add
leave
out
clc
add
test
add
pop
shrb
add
lcall
inc
pop
ss
push
inc
inc
not
pop
cmp
je
add
push
push
push
push
push
push
call
test
mov
add
add
movsb
add
mov
add
mov
cltd
add
rcrb
roll
add
fcmovnb
add
mov
add
mov
mov
add
fwait
add
push
add
in
call
cmpl
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
movsb
pop
test
int3
add
flds
add
add
mov
lahf
shrb
aam
stos
movsb
in
add
add
add
add
xlat
add
add
add
mov
mov
add
mov
fwait
add
add
sti
movsb
sahf
xor
in
fcomps
rcrb
mov
add
push
add
add
pop
pop
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
pop
js
xchg
loope
pusha
add
xchg
arpl
pop
add
stos
add
add
std
stos
pop
movsb
in
out
push
cli
faddl
hlt
add
add
xchg
push
test
add
add
out
jp
sti
add
add
jnp
add
sub
pop
pop
push
pop
pop
push
sub
shr
dec
pop
pop
leave
push
push
lea
push
push
push
push
push
push
lea
push
call
pop
add
add
movsb
mov
add
in
cmc
add
add
outsl
out
enter
jle
mov
push
add
rclb
add
add
add
add
add
add
add
add
add
cmpsl
add
lcall
add
fdivrs
push
push
call
call
add
cmc
add
mov
lret
add
outsl
test
add
add
push
add
mov
add
add
shr
jnp
mov
fcmovnb
addb
fcomp
mov
add
add
add
in
cwtl
cli
jge
add
mov
stos
fistpl
add
sub
pop
mov
push
push
lea
push
push
push
call
add
add
addr16
outsl
add
add
add
add
add
push
jo
add
mov
jecxz
add
cltd
pop
jns
add
jb
mov
mov
add
add
add
add
lea
mov
pop
pop
add
loope
pop
lret
fldl
xchg
pop
add
add
add
push
or
cmc
lods
hlt
lea
push
push
push
push
push
call
jp
addr16
fildl
add
add
loop
add
out
add
pop
popl
andb
int3
mov
test
mov
mov
fldl
enter
add
xor
sub
pop
pushl
add
push
push
push
call
mov
mov
xchg
add
jge
pusha
sbbb
lahf
add
call
add
add
add
add
pop
mov
xchg
push
add
pushf
pop
add
hlt
lcall
push
xor
add
rol
pop
call
push
not
sub
ror
not
pop
xor
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
rol
add
add
adc
not
add
add
add
frstor
add
in
add
rolb
jecxz
popl
fs
cld
jbe
add
push
pop
push
sub
pop
pop
push
lea
push
push
call
gs
mov
add
add
cld
add
cmpsb
add
fists
in
fadds
add
add
add
iret
loope
call
int3
loope
sub
pop
pop
push
sub
sub
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
mov
add
sarl
push
js
add
mov
cmpsb
add
add
add
add
ficomps
cmc
add
lret
stos
out
add
ret
in
loopne
pop
push
lea
push
call
lcall
push
mov
jmp
mov
add
mov
add
orb
fidivrs
add
add
cli
leave
add
rolb
or
push
lea
lea
pop
push
mov
push
push
push
push
push
push
push
push
push
push
call
add
jbe
xchg
push
lods
lret
add
lcall
add
add
fiadds
movsl
add
aad
lret
in
add
add
pop
ljmp
outsl
add
popl
lcall
hlt
push
push
inc
pop
push
push
push
push
push
call
add
add
add
pop
add
jmp
roll
jbe
test
add
add
add
add
scas
popa
pop
mov
lahf
add
push
add
rolb
xchg
pop
add
in
hlt
lcall
push
not
rol
ror
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
icebp
loopne
add
stos
add
mov
pop
add
add
aam
add
pop
add
xchg
add
fiadds
xchg
xchg
add
push
add
add
adcl
add
push
add
add
fcmovne
add
add
sub
pop
push
push
sub
pop
pop
lea
push
add
xor
inc
rol
pop
sub
mov
push
add
pop
shr
add
push
push
push
push
call
jecxz
shrb
pop
insb
add
jne
xchg
mov
test
add
push
int
pop
test
lcall
pop
js
ror
xor
pop
add
pushl
push
push
push
push
push
push
push
push
call
add
add
js
jns
add
add
lret
add
pop
arpl
add
jns
mov
add
add
push
add
add
add
add
int
jo
mov
push
mov
jnp
test
rcr
add
mov
mov
ret
add
pusha
in
pushf
push
shlb
lcall
inc
clc
mov
push
push
push
push
push
push
push
push
call
jle
pop
imul
add
movsb
push
lret
add
fldl
add
add
add
jmp
add
scas
add
addb
add
mov
mov
mov
mov
shr
test
add
add
add
xor
push
shl
add
sub
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
call
add
ret
imul
lds
popf
mov
add
jo
pop
add
add
add
lcall
cmpsb
mov
xchg
push
add
fwait
add
sarl
push
fdivr
lcall
adc
sub
mov
push
call
icebp
clc
add
add
add
add
add
sbb
test
mov
jbe
mov
push
mov
add
in
in
lcall
rcll
lahf
fs
fidivl
push
push
push
lea
push
lea
push
push
push
lea
push
call
pop
testl
mov
add
pop
add
pop
jae
test
fisubs
add
add
add
ficoml
add
add
pop
add
jecxz
cmc
js
enter
mov
add
add
jge
je
mov
in
add
nop
pop
lock
in
fdivr
lcall
rclb
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
js
jmp
lods
scas
mov
cwtl
imul
popf
cmc
jno
add
repnz
leave
scas
and
jne
add
add
jne
add
movsb
add
xchg
xchg
add
push
add
mov
in
fcomps
rolb
push
sub
pop
nop
xor
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
cmc
int3
test
add
les
add
in
testl
fiadds
add
jae
shrl
fiadds
rcr
pop
mov
sub
pop
nop
nop
push
dec
add
dec
xor
pop
inc
push
ror
not
pop
nop
push
lea
push
push
call
in
add
stos
lret
pusha
mov
flds
add
loopne
fcmovne
mov
into
add
add
pushf
ja
jae
arpl
xlat
sub
pop
nop
push
sub
sub
dec
pop
cmpb
jne
add
push
push
push
lea
push
push
push
push
push
push
push
call
negl
filds
gs
out
jo
add
add
outsl
jmp
lds
add
std
roll
je
orb
call
in
fdivr
lcall
push
lea
push
push
push
call
mov
scas
add
mov
pusha
push
pop
push
add
bound
pop
pop
mov
out
lods
push
sar
pop
add
add
add
add
fldl
mov
add
rcll
mov
out
add
aad
in
lock
lcall
cmp
je
push
push
push
lea
push
push
push
push
lea
push
call
add
add
lcall
add
mov
cmpsb
add
add
nop
add
pop
add
add
arpl
add
add
imul
out
add
in
add
pop
pop
add
fwait
push
jl
cltd
jecxz
lods
add
mov
lcall
nop
push
push
lea
push
push
call
cmpsb
xchg
leave
pop
loop
add
lods
push
fiaddl
push
mov
pop
add
loopne
xlat
int3
mov
test
mov
push
xchg
add
popf
add
je
bound
add
mov
shll
add
out
pop
add
in
lock
inc
nop
push
lea
push
push
call
jge
mov
add
pusha
stos
xchg
add
imul
jb
add
add
flds
hlt
pushf
addl
out
add
cmpsb
add
mov
sub
pop
nop
push
lea
push
push
push
lea
push
call
add
js
jle
push
filds
test
add
mov
add
push
aad
jl
mov
int3
add
test
xchg
jnp
mov
jns
sahf
add
out
jl
mulb
add
push
lahf
andb
cld
hlt
add
mov
xorl
add
add
add
rolb
pop
sub
pop
cmp
jb
push
push
lea
push
push
lea
push
push
call
add
lret
loopne
cmp
add
add
add
push
push
std
add
xchg
jge
fisubl
add
mov
add
bound
add
add
int
mov
popf
push
pop
xchg
add
add
mov
add
ja
shll
push
add
ljmp
loopne
xchg
sub
pop
xor
push
push
call
lcall
add
add
jno
fcmovb
add
add
add
popf
mov
movsb
pop
movsb
mov
addb
add
add
add
out
into
add
jno
jbe
in
clc
lcall
mov
push
lea
push
lea
push
lea
push
push
push
call
mov
jecxz
xchg
pop
sar
mov
add
add
mov
cltd
xorb
fildl
xchg
cwtl
ffreep
mov
add
push
mov
add
add
orb
xchg
out
andb
mov
pop
repnz
add
pop
cmc
roll
lcall
push
and
rcll
addr16
dec
bound
push
call
sti
mov
testl
ror
cli
add
cmpsl
jo
add
lods
add
add
test
aad
add
ja
add
movsb
sub
pop
movzwl
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
stos
testl
jge
pop
add
out
popf
sti
in
add
mov
rcl
add
add
roll
add
add
call
nop
faddl
rolb
je
add
cmpsl
add
mov
cmc
cld
add
inc
sbb
rcll
inc
out
lret
sub
mov
xor
push
not
pop
xor
shl
push
pop
xor
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
xchg
lock
iret
int3
pop
enter
jns
mov
stos
jb
mov
xchg
mov
testl
cli
add
add
add
add
leave
pushf
stos
subl
test
fiadds
add
lcall
loope
push
push
lea
push
push
push
push
push
push
push
call
pop
add
add
bound
test
scas
adcl
mov
lock
mov
stos
add
imul
add
add
enter
pop
popa
cli
mov
pop
std
mov
in
add
fdivr
lcall
dec
nop
add
loope
push
not
not
pop
xor
push
sub
add
sub
not
pop
mov
push
push
push
call
add
xchg
sahf
mov
jecxz
mov
add
add
add
xchg
add
test
mov
clc
add
add
add
fwait
xor
sub
pop
add
push
add
rol
pop
pop
pop
push
push
lea
push
push
push
push
push
call
add
mov
add
push
pop
xchg
add
add
test
mov
pusha
ja
add
sahf
fyl2x
add
xchg
add
add
add
mov
in
in
pop
push
rol
sub
shr
pop
pop
push
push
push
call
add
add
push
push
xchg
jae
add
movb
add
add
iret
fs
test
stos
icebp
addr16
mov
fildl
xchg
pop
add
add
add
add
testb
pop
leave
push
push
push
push
push
push
lea
push
push
call
add
fbstp
add
movl
nop
add
outsl
add
rorb
add
mov
scas
clc
add
sub
pop
ret
push
push
ror
xor
add
shl
pop
mov
push
push
xor
pop
push
push
push
pop
push
push
not
pop
mov
push
inc
add
pop
mov
mov
push
lea
pop
test
je
push
push
lea
push
push
push
call
add
data16
add
mov
add
add
jnp
fnstenv
fildl
enter
test
mov
add
out
movsb
mov
in
lcall
jno
test
je
push
push
lea
push
push
push
call
lds
hlt
enter
add
lods
add
mov
push
rcll
cmpsb
add
add
mov
pop
loope
add
sahf
addl
xchg
add
mov
mov
add
ljmp
push
push
lea
push
call
add
mov
jecxz
add
shr
insb
add
mov
in
test
jno
test
insb
jp
fstpl
test
add
sti
add
lock
adc
add
add
sti
test
add
pop
popf
pop
push
ret
mov
into
push
mov
pop
sub
pop
mov
push
rol
sub
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
fistps
add
add
xchg
jne
add
push
loopne
add
fldl
mov
imul
add
add
imul
shr
imul
add
lcall
ljmp
xchg
arpl
in
in
inc
cmp
je
push
push
lea
push
push
call
add
clc
fcoml
add
cltd
add
cltd
mov
fcoml
rol
push
add
cmpsb
leave
mov
add
pop
add
icebp
push
mov
in
lock
lcall
rorb
pop
add
add
or
hlt
lret
push
call
in
int3
xchg
arpl
addl
add
outsl
pushf
rolb
add
mov
in
add
add
ljmp
cli
call
movsb
mov
add
js
add
push
pop
mov
out
mov
rclb
add
fcmovb
jp
add
jge
lds
mov
pop
cltd
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
nop
add
mov
stos
scas
ljmp
pusha
js
add
push
je
add
push
loopne
add
add
add
mov
pushf
add
add
add
sahf
pusha
repnz
push
pop
add
add
add
rcll
data16
lahf
insb
ljmp
in
fcomps
cmp
je
push
add
pop
test
jne
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
add
ficoml
add
add
lea
sti
cld
add
add
enter
mov
arpl
mov
pop
ljmp
lock
sub
pop
xor
push
push
push
push
call
mov
test
add
mov
repnz
add
push
mov
xchg
repnz
add
add
std
loopne
add
push
pop
testb
xchg
add
push
jns
ljmp
lcall
pop
push
lea
push
push
call
cli
add
cmc
les
add
push
add
pushf
stc
mov
add
add
mov
data16
add
push
add
add
add
popf
add
add
add
add
jae
pop
mov
mov
nop
add
hlt
lcall
push
not
inc
shl
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
call
push
test
add
add
lahf
into
mov
xchg
in
add
add
mov
incb
rcr
add
add
push
mov
add
cmp
adcb
nop
add
fsts
movsl
pop
mov
lock
add
sub
pop
leave
push
lea
push
push
push
push
push
push
call
jmp
shrl
out
test
push
mov
xor
lock
mov
add
mov
shll
lcall
or
mov
push
push
push
push
push
push
push
call
add
fldl
xchg
popa
add
jge
push
xchg
add
jl
jae
loope
add
leave
push
add
xchg
add
add
addl
in
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
out
xlat
movsb
add
icebp
add
add
hlt
mov
lock
mov
adcl
std
add
add
push
mov
add
ret
add
divl
add
mov
arpl
lods
add
sub
pop
cmp
jne
lea
push
lea
push
push
call
ljmp
loop
int
add
rolb
push
add
fst
int
rorl
outsl
add
mov
out
test
in
add
test
test
mov
sahf
jge
sub
pop
mov
push
lea
push
lea
push
push
push
call
testl
add
add
test
aam
imul
add
add
add
add
add
add
add
cmpsb
add
add
xchg
sti
fiadds
push
add
lcall
in
test
add
add
push
push
push
lea
push
push
call
imul
arpl
xchg
mov
fiadds
lea
roll
loop
jb
add
sbb
xchg
xchg
out
mov
add
lret
jbe
int
ja
shrb
cld
mov
outsl
cmpsb
in
jmp
add
cltd
sub
pop
mov
push
dec
pop
add
push
not
add
pop
cmp
jne
mov
push
dec
pop
test
je
push
not
lea
inc
pop
mov
add
push
sub
pop
cmp
je
push
push
push
lea
push
lea
push
push
call
insb
mov
pop
push
in
in
cwtl
xorb
mov
iret
cmpsl
add
jne
jo
xlat
into
loopne
scas
neg
add
add
add
add
pop
jmp
xor
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
sahf
add
mov
add
add
pop
add
add
add
movsb
add
add
pop
pop
push
not
inc
dec
lea
pop
pop
pop
push
push
push
push
push
call
add
test
xlat
shl
loopne
fldl
fxch
xchg
push
jnp
rolb
stos
push
xchg
fildl
add
add
fisubrl
in
icebp
add
jne
add
xchg
movb
fsubs
fistpll
jbe
add
add
add
add
test
in
in
pop
leave
push
rol
pop
ret
lea
push
ror
shl
add
pop
pop
push
push
push
push
push
push
push
push
push
call
jne
aad
add
movsl
xchg
add
pushf
jle
sti
repnz
mov
mov
lea
mov
icebp
add
add
add
push
add
mov
push
scas
mov
movsb
addr16
add
loop
add
fildl
aam
add
icebp
add
mov
popl
pop
addl
sti
jo
in
fcompl
push
ror
add
pop
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
add
xlat
mov
mov
cli
movsl
mov
mov
stos
add
add
in
fdivr
mov
xlat
icebp
add
push
push
in
sub
pop
leave
push
push
push
call
sahf
add
les
add
loope
into
add
fwait
add
add
add
pop
cmpsl
xchg
icebp
js
add
add
cltd
pop
add
or
mov
push
shr
ror
dec
pop
pop
push
push
push
push
call
leave
mov
insb
push
add
add
jl
xchg
add
nop
int3
push
pop
jne
mov
faddl
test
sahf
add
lret
addl
gs
add
add
std
shll
add
popf
mov
stos
nop
mov
add
add
pop
push
push
push
push
push
lea
push
call
add
add
add
add
cltd
into
addr16
ja
lcall
add
mov
push
scas
test
loop
movsb
gs
pop
jns
xchg
add
mov
add
xchg
add
pop
mov
cmpsl
pop
mov
add
add
mov
call
pop
pop
push
rol
dec
pop
leave
push
sub
xor
add
pop
ret
out
or
iret
out
jl
iret
pop
cld
iret
iret
out
mov
iret
iret
mov
iret
iret
int3
mov
iret
iret
out
fmul
iret
out
iret
iret
iret
dec
add
iret
xchg
icebp
sub
mov
xchg
or
std
daa
shrb
scas
sbb
rorb
mov
jo
push
sbb
cmpsl
loop
pop
pushl
and
push
xor
aas
pop
mov
repz
fcomp
sti
jp
jle
push
in
xchg
ss
mov
notl
je
aas
mov
ret
test
dec
fadds
call
lret
inc
jp
dec
shrb
nop
jg
in
and
lcall
add
shlb
and
push
xchg
pop
test
mov
cmp
pop
adc
pusha
push
cmp
add
or
sub
inc
std
in
jbe
push
sub
mov
mov
aam
mov
les
outsl
jo
inc
std
push
mov
cmp
dec
mov
lret
mov
or
hlt
test
mov
push
insb
push
lea
cmp
jbe
repz
sar
add
add
andl
and
dec
inc
sar
or
aam
sub
nop
movsl
jmp
pushl
in
push
push
lods
out
nop
lock
outsl
lea
in
loopne
mov
scas
cltd
aad
push
negb
test
mov
sub
mulw
mov
in
and
lret
mov
jle
mov
outsb
cmpb
gs
stos
sar
sbb
lret
scas
stos
aaa
pusha
mov
pop
in
pop
andl
int
repz
sahf
sub
jp
int3
out
fmul
inc
mov
dec
push
fimull
dec
sub
xchg
xor
pop
add
data16
sub
movsb
push
mov
mov
xchg
add
fisubs
push
jp
test
fbstp
xor
jl
gs
fwait
jnp
mov
in
sahf
mov
test
xchg
dec
jmp
xchg
mov
in
out
push
xchg
jmp
jecxz
pop
jge
sbb
into
pusha
lret
loopne
xor
pop
cmpsb
pop
lds
lock
cld
or
mov
sbb
orl
and
aad
add
pop
enter
or
fs
in
ret
push
or
xor
jl
xor
ret
xor
out
incb
push
and
pop
dec
xor
xchg
mov
dec
pusha
jnp
sub
lcall
push
cli
inc
pop
lcall
add
pop
sub
int
movsl
cmc
jecxz
dec
and
insl
sub
jle
dec
out
cli
mov
sahf
repnz
cmpl
lret
cmp
and
fidivl
xor
je
pop
mov
sbb
cmp
stos
mov
fcmovnu
gs
in
mov
cmp
xchg
mov
mov
xchg
adc
sahf
push
or
cmc
enter
push
cli
imul
cmp
sub
mov
orb
scas
fs
das
loop
mov
cltd
sub
lds
mov
decl
fldt
cli
pusha
mov
ret
cmp
sbb
push
xlat
and
adc
bndstx
dec
push
sub
mov
imulb
jnp
add
add
push
pushw
shrl
sub
aad
idiv
outsb
rol
push
xchg
aad
sti
in
scas
in
xchg
or
inc
xor
cmp
aam
lods
aad
adc
cmpsl
pop
mov
xor
insl
sti
gs
lods
adc
call
test
das
inc
push
jmp
ja
mov
mov
out
cmp
inc
mov
sbb
hlt
aad
movsb
loop
pop
xchg
nop
mov
aad
sbb
cltd
adc
jge
push
sub
adc
lock
xchg
roll
inc
sbbb
pop
xor
out
scas
xor
lahf
push
aaa
jne
or
pop
loop
push
ret
enter
lock
push
cmp
push
jle
sahf
testl
push
aam
ljmp
lock
xor
fstps
and
xor
xor
dec
sub
roll
imul
cmp
pop
fbld
and
mov
movsb
in
push
arpl
push
pop
push
or
popf
dec
cmp
xchg
lret
jle
dec
dec
repnz
adc
test
jae
cmpsl
sti
ds
adc
sub
out
rol
sub
and
pushf
jae
cmpsl
idivl
or
inc
mov
stos
sbb
aas
mov
mov
idivb
fs
cs
mov
stos
popf
and
leave
popa
xchg
out
lods
dec
mov
adc
mov
xor
sub
sbb
dec
scas
aas
int
cmp
mov
jno,pt
push
mov
and
mov
mov
fadds
mov
jb
andl
test
xorl
mov
or
xor
xor
cli
jge
ss
movb
sub
and
shlb
jp
add
lcall
lret
fidivrl
or
aaa
inc
pop
jecxz
mov
inc
cmp
pop
or
data16
sub
notb
lcall
into
pop
out
daa
sbb
add
xchg
stc
jns
cwtl
cmp
mov
and
xchg
push
dec
push
push
jb
push
jmp
pop
mov
or
mov
negb
mov
pop
push
fdivrs
mov
std
stos
loop
or
cmc
cmp
jmp
xchg
ret
out
xlat
inc
cmp
add
and
jno
test
jne
inc
xchg
les
jg
or
dec
or
iret
xor
adc
or
fcomps
stos
jecxz
xor
add
add
pop
insl
dec
push
push
mov
gs
into
loopne
xchg
or
call
fldl
jecxz
dec
roll
jecxz
sahf
int
cltd
or
cmp
push
cmp
jp
xchg
mov
stos
xchg
cmp
inc
fildl
sub
pop
jae
cli
pushf
push
mov
and
incb
sbb
cmp
jae
xor
and
je
adc
dec
xchg
rclb
mov
xchg
mov
pop
sub
std
jnp
pusha
jne,pn
into
dec
or
iret
push
rcl
pop
sub
stc
sub
add
js
in
adcl
stc
mov
sbb
sub
testb
sarl
inc
inc
pop
or
popa
push
sbb
cmp
dec
dec
and
insb
mov
lods
xchg
shll
push
push
aad
xor
iret
shll
scas
pop
aam
push
lea
xor
xchg
mov
inc
cmp
test
orl
or
inc
adc
cld
and
sub
and
push
dec
push
lret
jmpw
push
push
inc
out
or
je
sub
shrb
xchg
lds
pop
insl
sbb
mov
or
sbb
insb
les
mov
add
ja
test
pop
clc
xchg
cmc
push
out
mov
or
sub
test
or
mov
scas
ret
mov
cld
adc
into
adc
mov
in
inc
jne
js
add
hlt
mov
dec
je
jbe
mov
xor
inc
cld
push
xchg
inc
andb
ret
sbb
jb,pn
ret
std
clc
je
sbb
outsl
dec
adc
push
inc
outsl
daa
subb
lret
dec
mov
gs
lret
cld
loop
fwait
rcr
imul
inc
pop
leave
jp
mov
sub
out
int
pop
cmp
sbb
jns
js
sti
sti
lcall
loope
xor
ret
xchg
xchg
mov
push
mov
mov
jno
xchg
pop
push
imul
out
inc
pop
dec
insl
and
push
mov
jne
pushf
mov
imul
call
xor
pop
popa
fbld
add
dec
fdivrl
and
cmp
inc
sbb
cmp
jbe
xchg
pushf
sahf
and
jecxz
jo
rorl
repnz
add
lahf
mov
into
mov
mov
mov
test
xchg
mov
lahf
ds
xchg
push
inc
cmp
aas
negb
sub
lods
lods
pusha
das
addr16
and
mov
je
bound
in
xor
mov
adc
push
add
nop
push
jecxz
fstps
pop
in
sub
jmp
jge
mov
dec
jl
popf
lock
jmp
jae
pop
sub
pop
lret
js
mov
sbb
ds
mov
inc
mov
cmp
push
das
cmp
aam
pop
aas
or
cmp
icebp
mov
jge
into
sbb
out
clc
mov
pop
stos
movsl
and
aas
dec
stos
es
fiadds
ror
cli
dec
xchg
jmp
cmpsb
imul
jbe
add
rcrb
jl
loopne
xor
aaa
roll
xchg
or
rcll
dec
lret
add
mov
int3
adc
mov
sti
mov
das
or
jp
mov
outsb
xchg
jg
aam
lock
test
out
lret
sbb
or
xchg
bound
adc
jle
repnz
add
and
ds
jae
lcall
mov
push
xor
repnz
mull
xor
mov
cmc
adc
sbb
jp
aad
fidivs
rolb
movsl
inc
adc
cmpsl
fists
repz
adc
mov
cld
sbb
xchg
push
xchg
lahf
xchg
cmp
loop
repz
arpl
add
inc
pushf
mov
dec
sbb
and
loopne
mov
daa
pop
repz
inc
jp
pop
and
xlat
sub
ror
xchg
jl
loopne
jl
dec
cmp
push
hlt
mov
repz
jb
add
add
inc
lods
push
xchg
test
push
stc
mov
xchg
cmp
add
inc
jge
push
xor
xchg
femms
imul
and
mov
fnstenv
push
add
pop
push
lahf
fcom
pminub
or
jno
add
outsl
ret
roll
rcrb
aam
inc
jbe
xlat
enter
cmovae
pop
clc
inc
add
pop
in
outsb
mov
sbb
pusha
in
cwtl
pop
mov
jle
das
lcall
fadds
pop
repz
jne
dec
inc
push
and
pop
mov
addr16
jp
push
cmp
and
dec
mov
rolb
jmp
xchg
test
inc
cmc
test
out
stc
cmp
int3
dec
subl
and
jno
xor
in
mov
ja
movsl
push
das
push
ret
lret
es
or
or
fst
iret
mov
fwait
cmpsb
ret
popf
and
mov
and
or
stos
in
push
setb
jle
push
sbb
or
mov
test
rorb
sub
jb
fsubr
sub
hlt
mov
repnz
or
push
cltd
adc
sub
pop
ja
and
mov
out
adc
push
cmpsl
pop
test
mov
adc
xor
notl
cmp
cmp
imul
imul
adc
data16
mov
dec
pop
bnd
or
sahf
out
jp
lcall
pop
imul
cmpsl
mov
push
mov
jmp
jp
xlat
cwtl
cmp
jo
jbe
cmp
pop
shll
in
or
adc
xor
push
sub
arpl
iret
jl
addr16
sub
sbb
sub
adc
std
cmp
mov
cmp
mov
push
nop
lret
mov
loopne
out
sub
or
jns
add
cltd
jae
arpl
cmp
sbb
orb
ficoms
loop
rcll
std
sub
pop
aas
sub
shlb
mov
imul
mov
add
in
xor
dec
pop
cmp
push
pop
push
add
aam
repz
push
loope
sub
mov
add
add
mov
aam
cwtl
push
dec
and
orl
jns
mov
push
ret
std
fistpl
test
dec
pop
loop
pop
push
mov
int
cmp
pushf
adc
cltd
jo
in
mov
mov
js
es
mov
mov
xchg
aas
pushf
push
into
xor
sub
sbb
jl
cmp
popa
dec
rolb
jne
mov
jb
cmp
cs
and
ret
mov
fld1
std
outsl
push
sub
jbe
dec
dec
mov
and
lods
push
fiadds
add
movsl
std
mov
jp
les
imul
dec
aas
daa
jp
inc
pop
in
cld
xor
clc
and
hlt
add
mov
int
xor
ss
jecxz
pushl
xor
mov
push
mov
pop
dec
jnp
mov
pop
cmpsl
or
add
lods
pop
push
mov
lea
cmpxchg
push
mov
sub
leave
movsb
and
sub
or
dec
mov
mov
adc
data16
fldenv
leave
and
adc
xor
mov
sbb
jle
cli
pop
imul
push
loopne
lods
nop
push
mov
jne
adc
dec
sbb
sub
sbb
pop
xor
dec
loop
push
in
rcll
pop
xchg
lea
pusha
aad
fwait
lods
cld
xchg
test
sub
bound
dec
jae
push
cmp
xlat
and
fsubr
sub
scas
rcll
or
jmp
cld
and
lret
jmp
adc
leave
inc
and
aad
in
aad
les
roll
pushf
inc
mov
push
or
dec
in
sub
pop
data16
push
adc
sub
xor
subl
or
jo
ja
lret
jge
add
repz
fnstcw
addr16
mov
popf
push
outsb
pop
cld
cmp
inc
mov
mov
cmp
rol
mov
mov
in
mov
fnstcw
mov
pop
mov
sahf
and
dec
in
imul
pop
stc
xchg
rcll
sarl
test
dec
cmpl
adc
cmp
push
hlt
lea
test
cld
mov
jmp
inc
lahf
push
pop
sti
jns
cmp
stos
mov
or
scas
pop
sbb
stc
nop
mov
adcl
sub
mov
data16
ss
pop
dec
push
mov
das
lods
orl
sbb
cmp
mov
test
push
cmp
mov
mov
cmc
mov
add
xchg
notl
cmp
sub
jne
jecxz
cmp
imul
lea
and
adc
mov
pop
pop
andb
sbb
rcrl
add
adc
aaa
mov
popa
cmpsb
lahf
jb
mov
scas
subb
in
fisubrs
mov
xchg
add
mov
inc
popf
sbb
fisttpl
js
adc
mov
lea
rcl
pop
iret
sbb
adc
push
sbb
or
lea
and
fwait
pop
in
mov
in
jle
pop
subb
sbb
jge
test
or
insb
lock
fisubl
test
in
movsl
loop
push
or
or
mov
sti
faddl
and
mov
jmp
stc
xchg
push
push
hlt
das
sbb
mov
aam
jle
icebp
mov
iret
dec
loopne
xchg
lcall
push
xchg
mov
sbb
mov
cmpsb
or
cltd
cmp
mov
stos
call
out
mov
cmp
fwait
sbb
adc
test
shlb
jecxz
outsb
cmp
dec
xchg
ret
pop
sbb
lock
jg
stos
call
sarl
adc
pop
cmp
icebp
and
pusha
scas
mov
jge
repnz
dec
xchg
nop
add
sti
mov
lret
sub
loopne
cltd
xchg
mov
cmpb
cwtl
popf
stc
adcb
pop
pop
mov
sbb
aas
rcll
jns
xor
sbb
xor
arpl
pop
and
adcb
ljmp
inc
or
jecxz
pop
cld
pop
imul
xchg
cwtl
cmp
dec
jnp
jle
fs
dec
shlb
push
mov
xchg
lea
mov
xor
outsl
cmp
out
popf
outsb
pop
xor
xchg
sub
jmp
adcl
cmp
push
lahf
mov
lods
aaa
push
js
dec
and
lcall
push
fisubs
cmp
dec
jne
mov
xchg
add
push
gs
hlt
or
inc
mov
dec
mov
fdivl
dec
or
bound
inc
mov
adc
add
out
push
pop
fsubs
arpl
and
rcrb
push
pop
mov
mov
push
or
add
sbb
out
loopne
fildll
and
or
pop
jl
and
cmp
dec
push
into
xchg
negb
dec
dec
fcomip
pop
add
data16
movsl
pop
mov
clc
incb
shll
scas
scas
mov
ja
daa
pop
insl
fcmovu
sarl
ficoml
xchg
scas
test
xor
out
adc
test
out
inc
popf
cmpl
mov
or
cmp
inc
je
dec
out
xor
jge
xor
imul
fprem1
aas
sbb
loopne
xchg
jle
xor
inc
inc
push
push
mov
stc
add
sub
dec
mov
je
push
ljmp
lods
jbe
cmp
push
or
in
mov
pop
dec
xchg
frstor
add
test
dec
cmc
dec
jae
sbb
fidivl
stc
pop
iret
sbb
rolb
cwtl
arpl
leave
loopne
add
dec
fucomi
sti
int3
sub
adc
cmp
ja
jae
arpl
jb
add
cmpsb
sbb
pop
ret
push
popa
stc
adc
mull
mov
imul
es
lds
fcom
icebp
ja
push
xchg
mov
add
jns
jmp
roll
outsl
dec
hlt
jb
lahf
push
sbb
sbbb
mov
stc
shr
inc
push
jbe
mov
push
sub
lods
inc
pop
and
lahf
xchg
mov
and
xor
pop
push
mov
dec
sti
aam
insb
lods
jnp
pop
insl
add
or
jp
cmpsb
push
iret
xchg
scas
cmp
hlt
movsbl
daa
jmp
enter
inc
daa
outsl
adc
and
mov
or
push
push
fisttpll
fucomi
and
jae
cltd
cmpb
fstl
push
fldt
jo
dec
fsubl
icebp
adc
test
icebp
add
movzwl
push
push
mov
movsl
jmp
daa
cmp
leave
mov
lods
in
lea
pop
dec
sahf
pop
fwait
xor
dec
xor
imul
out
les
jbe
mov
out
ljmp
fiaddl
jle
loope
je
mov
jp
in
jmp
mov
pop
push
xchg
xor
ljmp
mov
jo
jmp
lahf
mov
inc
fistps
mov
mov
out
into
lret
cmpsb
mov
xchg
push
pop
xor
pop
rcrb
jge
test
scas
sub
jmp
cmpsb
mov
movsb
into
mov
int
or
pop
push
arpl
movsl
push
jge
mov
dec
sub
pop
mov
cmp
in
movb
fs
popf
push
inc
sbb
es
jae
sbb
and
negl
subb
push
or
xchg
dec
inc
inc
in
sub
ss
int
xchg
fisubs
test
loop
xor
inc
jmp
pop
sbb
insl
ljmp
fsqrt
sahf
sub
mov
add
xchg
sar
rcl
jmp
testl
adc
pusha
sbb
xor
int3
movsb
sub
xor
adcb
cmp
outsl
mov
fwait
pushl
xor
lea
leave
out
or
aaa
pop
negb
insl
in
test
add
jle
adc
push
or
in
jns
rcr
outsb
or
or
cli
xor
test
push
adc
mov
cwtl
leave
xchg
icebp
js
jge
ds
xchg
shrw
sbb
mov
incb
fisttpll
or
pusha
test
inc
outsl
adc
pop
mov
movsl
xor
je
jp
addb
mov
mov
aaa
xchg
call
inc
inc
jecxz
and
cmp
xchg
mov
aad
pop
sarl
mov
jge
lcall
mov
adc
call
add
adc
adc
mov
mov
mov
shlb
das
cmpsl
aam
cli
cmp
push
popf
or
cmpsl
push
pop
ret
movsl
addl
fmul
cmp
in
outsb
mov
or
outsl
inc
xor
jno
cltd
pop
dec
ret
mov
pop
imul
sbb
cmp
scas
fmulp
rolb
lea
pop
ja
add
adcl
jge
sti
stos
mov
sbb
js
add
pop
roll
cmp
adc
pop
add
sti
je
iret
sbb
xor
inc
rol
push
fbstp
xchg
dec
in
jno
inc
lds
mov
xchg
mov
xchg
repz
outsl
sub
jo
jb
int
xlat
adc
add
jg
add
cld
scas
loopne
mov
pop
enter
xor
cmp
cmpb
xchg
in
xor
mov
jo
insb
and
inc
mov
je
xchg
xchg
ret
mov
lods
shl
mov
das
test
xchg
jb
loop
popa
aaa
xlat
and
and
xchg
xor
mov
sub
jg
and
or
and
sarl
or
ds
fistpll
sub
and
pop
cltd
pop
xchg
xor
into
sbb
movl
inc
cld
int
mov
popa
sub
xchg
lret
ret
mov
mov
ret
add
dec
and
adc
imul
xor
mov
movsb
repnz
or
lret
jae
sub
sub
pop
sub
add
outsl
jnp
jb
mov
ljmp
loopne
pop
enter
aad
push
mov
push
outsl
lret
rorl
test
fs
adc
xchg
inc
inc
loop
pop
shl
pop
mov
gs
inc
sub
pop
pusha
std
jbe
aaa
cmc
fs
xchg
and
dec
ja
movsl
in
out
rolb
mov
hlt
shll
pop
jbe
call
faddl
push
adc
fdivrl
and
adc
mov
jb
insb
sub
and
jl
testb
push
inc
or
xlat
push
xorl
call
adc
aas
insl
mov
loopne
and
pop
or
je
pop
popa
aas
pop
cmp
jmp
aas
das
mov
andb
nopl
call
inc
call
dec
sub
xor
insb
adc
jno
lock
mov
mov
rorb
xchg
loope
push
lahf
mov
and
daa
pop
adc
mov
jmp
pop
cltd
push
mov
pop
sbb
aam
jge
mov
int3
lcall
int3
xchg
xchg
xorl
adc
inc
push
jle
xchg
std
addr16
adc
dec
aaa
test
incl
mov
push
cld
dec
mov
je
stos
ficomps
loope
sub
sub
dec
xor
push
fildll
rcll
mov
cmp
popa
nop
ljmp
sahf
ds
rorl
lock
push
out
jle
xchg
movsl
dec
mov
fstpl
push
fistl
bnd
cmc
fbld
cmp
push
ret
xchg
xchg
mov
mov
pop
repnz
stos
push
cmp
mov
outsl
cmp
and
repnz
testb
adc
dec
inc
jbe
fists
or
ror
pop
push
sbb
test
out
fs
mov
push
lea
insl
mov
icebp
mov
fsubrs
push
ds
in
in
add
mov
cld
mov
push
inc
pop
pop
ja
outsl
cltd
mov
das
jae
call
cmp
lret
inc
push
jae
xchg
sbb
xlat
xchg
inc
adc
outsl
mov
clc
inc
dec
bound
sub
xor
add
ss
pop
jmp
in
push
out
addr16
adc
add
push
rcrl
xor
mov
in
pop
mov
cmpsb
imul
sahf
int
add
xchg
mov
push
repnz
shlb
jmp
sbb
jns
mov
push
testl
xlat
cwtl
dec
aaa
insl
sub
xor
sbb
cltd
aaa
or
cmp
and
shl
dec
sub
leave
js
daa
je
jnp
mov
insb
call
rolb
rcll
cmp
sbb
je
ficompl
xor
mov
in
leave
inc
arpl
xorl
cmp
sub
push
insb
mov
leave
mov
xchg
and
inc
mov
pop
lret
push
lcall
xor
mov
sub
push
lret
in
adc
inc
ret
sbb
jmp
push
fwait
enter
pop
lahf
divl
mov
mov
xor
jns
or
mov
jl
add
ret
mov
mov
test
fwait
stos
fs
add
pop
testl
rorl
rorl
arpl
mov
dec
je
mov
fmul
int3
or
xchg
mov
fcmove
add
jo
mov
xor
sarl
pop
cmc
push
das
stos
popf
out
sti
mov
dec
or
push
test
push
sbb
xchg
mov
adc
adc
dec
jmp
nop
cmp
sub
dec
movsl
test
inc
xor
jmp
or
jmp
sub
fsubs
jge
and
xor
shll
inc
sbb
jg
imul
loope
push
cmp
and
dec
inc
xchg
arpl
imul
movsl
jecxz
or
int
xor
cld
and
mov
push
add
add
scas
pop
shll
loope
push
push
xchg
movsb
mov
in
cmp
sbb
cmp
mov
ss
popf
out
dec
mov
mov
jge
addr16
gs
callw
xor
lock
pop
and
loope
cwtl
jns
int3
or
fidivs
pop
xorb
stos
push
ss
or
inc
clc
sarl
or
aad
aas
mov
inc
in
pop
std
sub
stos
jge
loope
and
sarb
or
pavgb
pop
sarb
rclb
stc
out
jecxz
pusha
pop
insb
lahf
std
mov
scas
shlb
adc
mov
incb
cmpsb
xchg
test
sbb
add
fsubl
add
push
addr16
xchg
cld
mov
dec
rol
out
push
cmp
idiv
rclb
jne
pop
addr16
mov
mov
xchg
mov
rol
mov
shrb
pop
loope
cmpsl
sub
andb
or
imul
jp
pop
ficoml
cmp
popa
cmpsl
mov
popa
aam
mov
mov
pop
mov
adc
cmp
mov
add
mov
fnstenv
pop
ja
sbb
cmpsb
aad
ret
jbe
cwtl
mov
push
into
popa
hlt
sahf
mov
fdivs
or
js
jno
mov
xchg
sbb
jae
sub
in
ds
out
pusha
adc
dec
cmp
shrl
jp
sub
mov
mov
sub
xchg
fisubl
mov
push
loopne
mov
add
mov
repz
stos
adc
add
test
clc
add
jae
add
cmpsl
insl
stos
mov
mov
shlb
sbb
jle
xchg
adc
sbb
mov
sbb
movsb
sbb
add
repnz
mul
mov
aam
pop
sbb
movsl
jne
aam
outsl
sub
mov
out
and
mov
ret
test
or
adc
out
dec
mov
lds
mov
fs
jl
xchg
dec
movsb
outsb
jg
cmpsb
cmp
xor
push
aam
push
sub
popa
pop
sbb
fdivrs
fidivrl
jb
stos
rorl
jo
or
xor
imul
iret
mov
mov
push
push
out
aas
and
jle
imul
pop
pop
push
call
out
mov
mov
add
sbb
sub
into
jmp
xchg
out
out
jbe
out
lea
push
or
fcmovbe
ret
dec
and
jge
and
mov
push
repz
adc
insl
and
ja
add
pop
insb
or
and
stos
movsl
dec
in
lcall
aas
mov
sub
sarl
push
push
pushf
and
incl
loop
pop
pop
stc
sbb
push
adc
rorb
mov
cmc
fwait
ja
inc
fwait
push
popl
ret
fldcw
adcl
sbb
and
mov
pop
inc
mov
dec
mov
mov
sbb
sbb
sti
push
xchg
hlt
mov
push
sbb
enter
test
inc
jnp
in
push
scas
pop
xor
cmc
arpl
fwait
push
xor
leave
cli
lea
cltd
lods
pop
and
sbb
add
pop
sub
jle
jb
je
lods
cmp
adc
jmp
cli
lahf
jne
xor
jl
test
jo
popf
aad
pop
sub
imul
jnp
orl
imul
out
test
insl
pop
arpl
mov
inc
pop
add
cltd
je
mov
mov
push
add
daa
dec
loop
imul
xchg
arpl
shlb
or
cli
push
aaa
xchg
out
sahf
pop
jb
or
lds
pop
fisubrl
int
aaa
lock
mov
ret
add
sub
es
negb
jns
add
clc
out
xlat
movsl
lahf
cld
test
in
sahf
pop
adc
mov
fmull
stc
int3
lods
inc
imul
out
into
cmpsb
sub
divb
aas
lcall
cmp
leave
icebp
arpl
mov
popf
popa
or
popa
mov
jge
add
pop
cld
frndint
or
insb
and
fwait
jae
pusha
loope
repnz
inc
mov
cltd
sahf
xlat
push
and
or
cmp
test
dec
mov
iret
pushf
in
out
push
arpl
jbe
aas
fmuls
sub
mov
xchg
ret
push
dec
pop
xchg
jle
dec
scas
gs
or
mov
imul
into
push
dec
rorb
pop
bound
mov
js
fdivl
sub
adc
add
scas
mov
pushf
lock
sbb
lret
jle
clc
cli
mov
fsubl
jb
jnp
fcomip
lods
mov
xchg
xchg
cmp
and
cmpsl
sub
jmp
fdivrl
aam
inc
push
dec
adc
add
in
movsl
fidivrl
call
dec
hlt
in
push
shll
xor
dec
dec
mov
adc
add
imul
jp
lret
aaa
lahf
test
nopl
fwait
mov
mov
outsb
jns
jmp
lcall
cmc
lcall
dec
xor
movsb
cmc
xchg
shrb
in
jno
jno
xchg
or
mov
mov
and
add
and
cmpsb
jo
sub
push
out
adcb
das
sbb
jno
int
jno
insl
scas
js
rcll
test
mov
pop
ficomps
shrb
cmpsl
xor
pop
icebp
sbb
out
mov
inc
or
mov
out
adc
jb
dec
movsb
pop
cmpsb
insb
enter
pop
xchg
es
outsb
or
jg
add
rcrl
rorl
shl
push
insl
clc
xor
inc
dec
adc
leave
inc
int3
popa
sub
inc
adc
pop
and
enter
mov
jae
sti
xchg
mov
inc
std
jno
lahf
or
push
pusha
sarb
pushf
mov
or
xchg
jge
out
jnp
subb
outsl
fcmovu
fdivl
lea
out
sahf
adc
and
decb
loope
mov
adc
push
cli
mov
xchg
js
xchg
lahf
std
push
bound
ljmp
test
out
inc
loopne
lret
sub
jg
mov
sbb
pop
ret
jns
mov
xchg
xor
pop
push
leave
orl
jg
mov
leave
faddp
and
out
jo
cld
mov
ret
mov
rclb
aas
into
mov
pop
loopne
adcb
xchg
hlt
add
outsl
inc
testl
subb
loope
xorb
jl
cmp
int
adc
outsl
leave
pop
loopne
jno
pop
jae
fs
cwtl
xor
jbe
ljmp
mov
and
pop
adc
add
jb
mov
adc
inc
or
pusha
cli
loope
dec
lds
int3
add
lock
sub
sbb
hlt
les
rcl
or
mov
stos
cli
cs
cmp
push
addr16
cmp
dec
sbb
cmp
ret
xor
jle
mov
outsl
xchg
cmp
in
push
shrb
jle
mov
add
lock
pop
adc
inc
sbbl
cltd
pop
pinsrw
ja
stc
mov
mov
icebp
xor
adc
push
jnp
lds
adc
sbb
cmp
jmp
ficoms
hlt
dec
xchg
push
sti
mov
enter
inc
xor
xor
hlt
mov
cmp
xchg
cmp
mov
dec
insb
testb
or
shlb
andl
int3
mov
repz
sub
xor
xchg
adc
test
dec
insl
outsl
pop
mov
cmpsb
push
rcrl
sbb
push
shll
mov
or
leave
jae
jo
pop
mov
pop
ljmp
inc
xchg
popa
sti
xchg
lds
sti
push
jecxz
out
push
cld
pop
inc
into
mov
loopne
pop
stos
mov
push
out
iret
aaa
pushf
sahf
cmp
mov
and
sub
and
ss
pop
mov
scas
lods
fstpt
adc
pop
mov
push
insl
lds
push
fsubs
je
add
lock
ds
aam
out
jb
push
test
ret
cli
inc
jb
ss
inc
jno
xor
leave
push
and
stos
push
inc
loope,pt
call
jbe
dec
imulb
mov
out
dec
scas
sub
adc
mov
jl
mov
cmp
pusha
rcl
push
cmp
int
out
rcr
outsl
jecxz
ljmp
lret
repnz
sbb
and
in
push
add
testl
xor
mov
out
dec
test
leave
mov
inc
sbb
dec
std
out
out
fsts
jge
mov
dec
movsb
sub
sbb
icebp
stos
adc
add
add
mov
scas
jmp
pop
mov
mov
rolb
fstps
lret
mov
and
setae
popf
clc
jle
insl
in
popf
pop
je
jns
sbb
arpl
imulb
fs
daa
int3
aaa
mov
test
mov
ds
cmp
mov
adc
ret
jmp
jae
inc
pop
movsb
nop
cld
in
dec
fistps
ja
xchg
scas
call
mov
ret
mov
arpl
clts
xchg
loopne
sbbl
sub
dec
push
cmc
mov
mov
mov
pop
cmp
push
stos
and
adc
stos
mov
cli
leave
loope
cli
icebp
push
jne
test
and
xor
fst
in
and
jns
jo
dec
add
jle
xor
loopne
mov
mov
xchg
sbb
je
test
popa
call
mov
pop
mov
xchg
cmc
lods
test
jge
out
imul
pop
push
push
dec
cltd
incb
and
test
dec
test
and
mov
fnstsw
mov
jb
insl
movsb
jae
push
inc
xchg
loopne
mov
in
das
repz
add
test
lcall
pop
nop
mov
jg
pop
dec
jne
mov
loop
pop
xchg
hlt
call
inc
jecxz
xor
insb
xor
or
mov
dec
es
xor
or
add
flds
pop
pop
je
pop
cmp
sub
lcall
in
mov
mov
add
jp
lahf
imul
out
mov
cmp
pop
mov
xchg
mov
jno
and
fisttpll
mulb
jge
ljmp
loope
adc
arpl
addb
mov
pop
jp
dec
jecxz
push
jae
inc
cltd
push
movsl
daa
test
lret
jmp
inc
mov
arpl
add
jle
adcl
add
jne
and
test
push
jl
and
mov
sbb
shrb
sub
add
cmp
iret
xchg
adc
xorl
lods
xchg
iret
cmp
stos
call
sbb
repnz
mov
movsb
int3
and
imul
push
lods
xchg
popf
pop
lods
xchg
lods
or
adc
ss
repz
cmp
movsb
shrb
jecxz
jbe
out
punpckhwd
cmp
xchg
cwtl
mov
aaa
sbb
loope
cmp
mov
add
popa
push
pop
ss
jmp
xchg
sbb
in
ret
jg
push
mov
pop
jl
aaa
mov
repz
adc
mul
xor
aaa
xor
jbe
cwtl
mov
scas
loope
push
xchg
push
daa
mov
jle
faddp
or
dec
cmp
pop
xchg
bnd
loope
xor
divl
dec
mov
cwtl
movsl
aas
dec
shl
push
or
push
sarl
jno
or
push
dec
xorl
sahf
xchg
xlat
and
push
imul
ss
sti
int3
shrb
cmpsb
pop
push
sahf
mov
inc
loope
imulb
imul
pop
sbb
ljmp
xchg
out
push
cs
xchg
add
mov
add
shrl
or
push
adc
mov
mov
sti
cli
stos
cmp
xor
cs
icebp
arpl
ja
ret
mov
push
fstpt
adc
nop
pop
adc
jbe
ficoms
lret
dec
out
add
cwtl
push
pushf
push
mov
mov
gs
adc
jbe
add
jb
mov
aam
jb,pt
xchg
in
or
xor
cmp
subps
xchg
push
and
rcrb
mov
out
out
or
sbb
fimuls
iret
loop
jb
test
inc
and
rcrl
sbb
or
add
lret
lcall
jbe
loope
dec
testl
jb
test
inc
lcall
xchg
ret
pop
rcl
mov
sub
inc
push
pop
scas
mov
scas
jl
jae
sbb
cmp
inc
jecxz
fwait
pop
stc
imul
inc
lods
into
dec
sbb
in
sti
inc
bound
jg
shrl
roll
ja
xlat
pop
inc
mov
fiaddl
addr16
hlt
push
movsl
sahf
xorl
leave
bound
mov
clc
sbb
xchg
pop
inc
push
cmp
insb
stc
cmp
rcrb
jae
dec
nop
icebp
add
pop
or
adc
or
fadds
cmp
sti
repz
inc
les
jb
aad
push
inc
mov
pop
lods
sbb
adc
inc
mov
push
mov
mov
pop
gs
cli
add
clc
cltd
sahf
adc
mov
imul
push
cmpsl
rcll
xchg
jmp
test
popf
and
mov
fists
dec
lods
and
daa
mov
pop
mov
addl
ljmp
add
or
pop
xchg
and
push
test
dec
ret
enter
insl
sbb
add
or
jbe
push
mov
jb
into
cli
push
push
inc
xor
mov
dec
mov
sub
dec
xchg
fldenv
pushf
ss
imul
and
mov
loope
jnp
jbe
test
std
sbb
and
jno
pop
test
push
popa
cld
sbb
pop
pop
aaa
mov
stos
push
xchg
shll
das
mov
jae
dec
and
xchg
cmpb
push
xor
movsl
add
xchg
scas
add
xchg
negb
adc
pop
mov
mov
adc
add
das
jecxz
xor
xor
mov
push
out
dec
mov
movsl
decl
push
cmc
cli
fsts
push
movsb
daa
ret
gs
lret
addr16
lds
pushf
aas
fs
cli
sbb
sbb
pop
dec
push
rorb
ficompl
sbb
cltd
jle
mov
inc
dec
pop
nop
pop
adc
insl
ja
data16
pop
rcr
jno
pop
fwait
in
mov
leave
imul
icebp
mov
and
or
stos
pop
mov
adc
xchg
sahf
add
jbe
jle
imul
inc
sbb
in
pop
push
add
or
sbb
mov
dec
dec
insl
in
push
ljmp
xchg
push
jl
mov
pop
fmul
adc
adc
cmc
cmp
aaa
and
add
mov
pop
testl
xchg
dec
shrl
pop
inc
pop
and
mov
adc
out
std
rolb
adc
fistl
jno
aam
push
mov
call
out
mov
mull
mov
out
jl
pop
mov
pop
pop
pop
mov
ljmp
jle
clc
sub
jmp
bound
arpl
and
and
xchg
mov
movsw
scas
dec
or
jp
cmpsl
xor
das
cmp
mov
hlt
or
xor
pop
in
nop
adc
lret
mov
cmp
into
add
ror
out
std
xchg
out
mov
cmp
stos
push
pop
mov
xchg
test
stos
sub
in
dec
decb
fwait
push
nop
sub
cmp
push
mov
test
loop
sbb
jo
stos
sub
xchg
jae
and
jns
stos
mov
add
xor
inc
es
push
aas
and
xor
mov
push
out
push
idiv
sbb
and
xor
mov
int3
jne
negl
aaa
dec
mov
mov
push
dec
jmp
adc
in
mov
push
cli
movsb
pushf
mul
in
movsb
mov
sub
push
stc
inc
fcmovbe
and
and
shl
rolb
lea
in
sbb
xor
mov
loope
out
jecxz
imul
mov
ljmp
xlat
sbb
xor
cmpsb
daa
aad
and
and
out
pop
pushf
dec
push
push
fidivs
mov
pop
xchg
adc
pop
xchg
sub
imul
stos
mov
mov
test
pop
fistpl
hlt
xlat
mov
int3
jecxz
xor
sti
sbb
fmuls
cmp
xchg
test
sub
stos
dec
mov
sub
outsl
inc
or
sub
cmpsl
add
incb
test
lret
loopne
inc
or
add
aad
lock
movntq
test
xor
dec
in
mov
fldcw
aam
jl
sbb
outsl
in
sub
sti
aas
shlb
dec
inc
iret
pushf
loopne
pop
insl
rcl
das
dec
arpl
jnp
jno
ret
nop
pop
mov
inc
stos
cwtl
mov
push
pop
sarl
imul
int3
test
push
scas
push
jns
push
cs
inc
cmc
test
dec
rol
lret
sbb
mov
pusha
das
icebp
mov
nop
fsubrs
jecxz
fwait
adc
inc
in
shll
shr
cmp
or
mov
stos
dec
xor
fisubl
lret
mov
and
add
negl
mov
or
les
jno
dec
stos
push
add
mov
add
les
ja
mov
mov
jbe
mov
hlt
mov
push
add
pop
push
sbb
test
idivl
or
int
in
ss
hlt
add
and
enter
outsl
icebp
xchg
inc
push
mov
fbstp
jb
lock
popf
or
sarl
int
rcr
out
mov
dec
or
xchg
dec
out
cmp
push
sbb
ret
sub
push
ja
inc
mov
movsl
inc
adc
sbb
push
mov
or
mov
lds
jbe
dec
frstor
or
xchg
and
test
nop
inc
aas
int3
mov
insl
insl
adc
dec
shrb
xchg
mov
sbb
mov
mov
jp
in
or
rclb
push
imul
cmc
pop
ret
mul
in
fnstsw
stos
aaa
por
leave
mov
sub
lods
lods
scas
aaa
mov
fistpll
xor
jb
xor
movsl
inc
das
lcall
mov
arpl
push
enter
adc
sub
repz
jno
mov
in
jl
inc
int3
cld
mov
call
cwtl
hlt
clc
cltd
add
lods
cmp
popf
test
movsl
inc
out
rcll
or
mov
ljmp
gs
negb
cmp
mov
sbb
in
icebp
pop
cmpb
sbb
adc
fistl
add
aas
stos
mov
and
psubusw
cmc
aaa
mov
xchg
sbb
hlt
cmpsb
scas
cmpsl
xchg
adc
jo
subl
jo
les
mov
lret
dec
lret
pop
sahf
push
or
jbe
mov
out
leave
fisttpl
xchg
inc
jg
gs
cs
call
es
cmp
mov
sbb
pop
andb
cld
inc
rorb
test
bound
mov
pop
or
pusha
js,pn
push
xchg
aad
sub
xor
jae
leave
and
adc
or
ljmp
xor
test
les
sbb
dec
mov
popf
test
jecxz
sub
mov
jae
shrb
es
jnp
sub
les
sbb
mov
arpl
mov
sub
add
xor
out
and
jle
pusha
jno
and
cmp
mov
daa
jmp
cmp
cli
daa
dec
and
mov
mov
mov
cmp
xor
cld
and
insb
mov
sti
mov
jne
test
lods
mov
and
stos
mov
xor
xchg
imul
sub
pop
orl
xchg
and
xchg
xchg
jb
lcall
lret
mov
adc
jns
notb
xor
cmp
inc
xchg
test
or
dec
sbb
dec
daa
push
push
pushf
inc
lock
mov
rolb
call
and
outsl
xchg
xor
shll
or
ficoms
dec
and
jp
mov
sbb
mov
loope
or
jnp
outsb
mov
das
mov
mov
xchg
xchg
adc
pop
enter
push
pushf
add
test
lods
dec
test
add
loopne
scas
lea
mov
inc
mov
lcall
out
adc
bound
in
xchg
test
jo
jno
inc
daa
sbbb
int3
jae
test
aas
lods
add
aaa
sti
out
pusha
push
test
test
outsb
scas
jecxz
push
movsl
pop
pop
loope
sarl
xchg
fwait
movsl
mov
sub
je
push
and
mov
pop
std
mov
in
repz
pop
mov
and
mov
mov
lods
rorl
or
push
sub
cli
daa
movl
push
add
mov
icebp
mov
lea
pop
fists
xor
insb
mov
daa
popa
pop
fsubr
inc
xchg
mov
cld
push
sbb
lods
jecxz
out
add
jne
add
insw
je
xchg
mov
cmp
xchg
adcl
rdpmc
push
jbe
dec
jne
int3
inc
lods
ja
sar
les
inc
sub
test
jb
dec
sub
and
dec
out
sarb
xor
scas
jl
fwait
test
add
mov
xor
lods
cmovno
or
fimull
leave
add
jge
sbb
push
and
pop
dec
inc
dec
add
jae
mov
lret
repnz
or
fprem1
adc
addr16
nop
or
aaa
insl
mov
adc
jmp
aam
xchg
sub
sbb
xor
xor
sbb
or
pop
jae
pop
adc
lods
add
cmc
xor
inc
push
push
inc
stc
inc
pop
sub
mov
lock
scas
inc
pop
jg
dec
adc
movsl
push
lods
in
shrl
dec
fs
and
fwait
int
addb
jle
iret
fwait
jo
imull
inc
cmp
xor
sub
imul
testb
add
and
mov
in
cmpsb
push
cmp
pop
loop
cld
mov
dec
aam
dec
adc
sub
int3
push
sbb
jg
ret
in
mov
bound
cld
fdivrl
and
adc
in
dec
data16
adc
jbe
pop
mov
out
jp
push
push
out
iret
mov
or
sbb
popl
loopne
rcrb
add
mov
jmp
neg
scas
jne
cld
sarb
xchg
mov
int
sbb
in
test
sbb
push
ret
mov
hlt
pop
pusha
loop
sti
sbb
popa
inc
in
popa
dec
fs
push
cli
inc
xchg
inc
adc
sti
push
jg
adc
ret
or
negb
es
xchg
mov
shrl
loopne
cmp
sbb
jge
xchg
xchg
xor
mov
add
cli
addr16
cmp
push
sub
hlt
add
pop
dec
xchg
inc
and
mov
jl
push
loop
pop
mov
push
push
test
push
xor
jmp
lea
jge
cltd
pop
and
cmp
pushf
cs
xchg
aas
push
mov
xor
dec
mov
cmp
and
xlat
pop
je
ffreep
bound
leave
dec
cmp
jo
fmull
or
jb
mov
mov
inc
jle
jge
ja
xor
lea
push
scas
out
loopne
push
mov
xchg
pop
push
scas
mov
es
shl
mov
movsl
xchg
lcall
sbb
or
jmp
sbb
flds
ss
repnz
add
out
ret
pop
mov
lock
in
test
daa
out
das
ljmp
push
andb
mov
loop
xchg
loopne
imul
sub
inc
aad
and
mov
insb
cld
xchg
push
cmp
imul
add
insl
std
inc
repnz
jae
lods
cmp
negl
cmpsb
pusha
ficoms
mov
mov
jmp
push
mov
xor
jge
dec
jns
sbb
mov
lock
jno
sarb
repz
jle
daa
mov
add
out
lret
fisttpl
imull
inc
nop
mov
les
push
or
cmp
sub
jo
pushf
adc
mov
add
xchg
ljmp
xchg
es
inc
jo
out
sbb
mov
sbb
sub
adc
add
jecxz
inc
push
ret
shr
cmp
and
push
outsb
fucomip
cmp
cmpsb
dec
call
cltd
inc
mov
cs
out
or
shrb
outsl
adc
inc
lea
repnz
mov
es
into
mov
adc
push
mov
add
jle
or
aam
mov
pop
imul
stos
xchg
setle
jne
push
stc
add
dec
xor
les
cltd
sti
push
xchg
xchg
jecxz
dec
enter
jo
fucomip
adcl
stc
or
leave
div
and
pop
mov
xchg
insl
int
leave
je
scas
lret
out
jmp
pop
sub
shrb
mov
clc
inc
and
adc
adcw
dec
popa
mov
jb
insb
mov
pop
lret
shl
adc
data16
dec
stos
xor
mov
dec
inc
fwait
hlt
push
cltd
vphaddudq
ljmp
addb
stc
dec
inc
sub
insb
push
cmp
lret
push
test
adc
aas
jnp
es
pusha
gs
fdivs
pop
std
test
outsl
mov
or
inc
jns
sbb
xor
lret
add
jecxz
in
inc
dec
lods
ljmp
push
adc
push
and
test
pop
outsb
cwtl
rol
pop
cmp
push
add
and
je
cs
adc
xchg
xchg
scas
fidivs
cmp
aas
loopne
loop
ds
leave
clc
pop
and
inc
push
push
pop
mov
cmpsb
ret
jl
mov
jb
cltd
jno
or
pop
ljmp
sahf
stc
xor
cmpsl
push
outsl
xchg
aam
pop
repnz
cmp
push
in
sarl
mov
jecxz
jb
cmp
iret
jno
shl
arpl
loop
adc
into
inc
and
xchg
ret
das
inc
mov
cmp
jl
cs
dec
sbb
xchg
mov
add
jl
sti
pop
cmpsl
arpl
jnp
pop
popf
or
lock
push
jbe
jb
push
add
pusha
das
hlt
andl
cmp
mov
cmpsb
js
or
scas
scas
in
adc
dec
push
iret
dec
negb
jmp
dec
or
pmulhuw
add
mov
aas
lret
aas
mov
pop
or
int3
pop
or
mov
push
addl
lret
or
iret
xchg
or
int3
je
adc
jmp
inc
in
int3
rorb
test
mov
xor
and
xchg
sub
cmp
lret
inc
sarl
dec
dec
push
mov
notl
cmp
xchg
adc
rcr
outsb
mov
inc
add
pop
jae
mov
xchg
fcmovnb
loope
scas
push
loop
xor
and
pop
xchg
imul
sbb
mov
mov
sbb
int3
addr16
mov
and
push
mov
jmp
mov
outsl
mov
sub
and
push
pop
pop
fsubrl
mov
stos
pop
xchg
decl
aaa
xchg
cmp
jge
sbb
or
fsubl
xlat
sub
fimull
jns
lods
jg
mov
scas
lods
mov
jae
je
sbb
pop
cmp
adc
xor
xor
xchg
mov
mov
daa
fcmovnb
nop
mov
push
add
sbb
cmp
sar
pusha
xchg
cmp
je
scas
pop
xchg
mov
sbb
sbb
cli
mov
adcl
jne
fstps
jno
xor
clc
inc
rcrb
xchg
dec
xor
out
sub
aam
subl
imul
mov
add
jns
adc
ljmp
outsl
xchg
int
jbe
cmpsl
std
js
mov
scas
cmp
adc
inc
pop
push
outsb
fwait
nop
mov
stos
sbb
mov
and
les
add
inc
mov
push
cwtl
pop
mov
mov
mov
mov
xchg
movsl
xlat
cld
add
mov
dec
pop
xchg
jb
xor
int
pusha
mov
cmp
aaa
or
add
enter
push
cmpsl
fiadds
not
in
pop
or
iret
sbb
xor
push
pushf
xchg
cmpsb
mov
mov
ja
mov
subl
enter
or
xchg
mov
loopne
out
dec
xchg
imull
pop
pop
leavew
push
mov
or
ret
pop
push
sub
ret
fnsave
or
aam
inc
cmp
mov
mov
daa
adc
filds
pop
aad
lahf
in
notb
insl
out
jbe
aas
jge
dec
aas
mov
lds
loope
sbb
push
mulb
cmpsl
inc
add
inc
pop
out
scas
movsl
inc
dec
int3
dec
in
popa
inc
sbb
sbb
loope
das
dec
add
xor
adc
mov
adc
shll
push
xor
aas
sub
or
jg
aas
cmp
jle
pop
in
in
mov
jmp
dec
jnp
cld
jmp
dec
cmp
jge
int3
stos
rorl
bound
ds
dec
push
adc
xchg
lcall
shlb
mov
mov
movsl
fwait
cmpsb
cmp
adc
mov
and
dec
mov
jg
push
aad
mov
sub
fists
jmp
push
in
fdivrs
repnz
or
into
bound
dec
ss
mov
bound
sub
dec
out
stc
daa
aad
jne
icebp
mov
jmp
cmp
xchg
xor
loopne
jp
outsl
jnp
and
pop
gs
ja
rcrl
lcall
loop
xchg
sub
int3
out
pop
mov
pop
lcall
pushf
lods
mov
outsl
pop
call
js
pop
stos
and
lea
push
cmp
or
xor
adc
xor
jo
xchg
mov
mov
jp
popf
sbb
in
ficompl
lods
push
std
mov
ljmp
aad
pop
cwtl
mov
adcb
cmc
dec
inc
add
leave
into
flds
je
nop
jns
and
jnp
cmpsl
or
call
outsb
jp
cmp
sub
inc
xchg
mov
nop
out
pusha
push
mov
mov
roll
scas
fstps
dec
push
pop
sub
mov
mov
lret
popf
xchg
xchg
xlat
mov
bound
and
not
cld
sub
stc
dec
pop
mov
cmpsb
movsb
enter
jns
dec
out
mov
adc
lods
pop
icebp
and
mov
push
loope
neg
jmp
loopne
jmp
scas
inc
std
loop
jo
jl
jmp
sub
inc
fwait
inc
and
inc
bound
cli
and
sbb
lea
cmp
sub
lahf
jp
push
adc
daa
jle
mov
cmp
lock
int3
ss
rclb
sbbl
mov
insl
sbb
test
ja
mov
test
pusha
into
sub
jb
cltd
mov
add
cmp
push
fimull
shl
sub
jnp
adc
mov
and
mov
or
xchg
dec
add
sahf
pop
xchg
popf
popa
fldenv
mov
fucom
fistl
repnz
rorb
int
fcmovbe
stc
jg
pop
fldt
sub
aas
cmp
dec
in
adc
cmpsl
xchg
stos
aad
mov
popf
mov
jns
push
fimuls
cwtl
push
and
push
add
adc
mov
xchg
or
jg
jno
ljmp
scas
jmp
clc
aad
lcall
lds
ljmp
outsl
cmp
in
js
add
std
pop
jge
pop
test
jbe
pop
push
inc
push
add
mov
pop
rol
ret
mov
pop
xchg
in
popa
cmp
xchg
jmp
pop
lock
enter
js
in
es
sahf
out
mov
rcl
lahf
loop
stos
inc
shl
cwtl
aam
movsb
les
int3
cwtl
clc
rorb
out
and
sub
les
fcomps
push
pusha
shl
stos
pop
scas
sbb
test
jno
ffreep
pop
test
push
xchg
jl
fcmovbe
cmp
das
ss
jae
lods
mov
sbb
scas
and
repnz
add
lock
push
arpl
sub
cli
cmpsb
data16
inc
mov
jecxz
mov
adc
or
mov
test
xchg
mov
test
mov
adc
lea
inc
test
mov
pop
mov
xchg
and
sahf
add
sar
shl
in
inc
xor
das
mov
and
mov
and
aad
cld
mov
dec
into
sbb
call
movsl
mov
lret
or
aam
aad
and
lret
jae
xor
add
fistpll
dec
outsl
xchg
pop
push
insl
push
test
outsl
cwtl
rcrl
sub
fdiv
sub
adc
pop
pop
std
pop
outsl
gs
inc
out
popa
push
jg
mov
push
xchg
mov
dec
pushl
mov
inc
mov
cmp
sub
cmpl
adc
cmp
jg
rorl
cmc
out
dec
push
mov
add
fisubrs
insb
aam
mov
outsl
movsl
insb
push
pop
inc
sub
cmp
dec
inc
xchg
out
callw
int
jo
mov
inc
cltd
fnsave
shl
ret
sub
sbb
add
fwait
lgs
jns
cwtl
mov
and
fxch
stc
jo
stos
roll
out
lret
bnd
mov
int3
and
ljmp
push
in
xor
ss
das
dec
or
cmc
jae
pop
xor
and
arpl
jp
rclb
mov
and
jl
dec
dec
adc
add
outsl
fadds
cmp
inc
jnp
jg
popa
out
mov
xchg
inc
in
add
and
cmpsl
fcomp
jo
int3
cmp
xchg
dec
enter
sti
mov
gs
jb
testb
dec
or
mov
and
jg
mov
and
in
mov
ja
ljmp
dec
and
add
jmp
cwtl
ds
nop
insb
mov
inc
cmc
mov
cmp
lea
test
jmp
nop
fisubl
mov
and
shr
inc
mov
xchg
in
xor
xor
inc
int
lea
pusha
sub
call
xor
and
sarl
mov
push
fstp
ror
in
decl
lret
lods
add
inc
push
insl
iret
dec
mov
mov
inc
mov
mov
mov
and
mov
jle
hlt
adc
mov
pop
mov
hlt
jbe
mov
sti
test
addl
mov
test
aaa
lcall
ret
stos
xchg
aaa
push
pop
enter
leave
je
add
mov
hlt
lret
xor
jp
insb
or
mov
dec
outsl
sbb
dec
repz
out
mov
test
shlb
in
push
sub
iret
pop
push
int
movsl
aas
cltd
sub
mov
iret
add
repnz
out
sub
int
popf
jmp
mov
iret
dec
test
mov
mov
push
jl
jmp
push
int3
sbbb
xchg
mov
jl
xor
lret
test
jns
stc
int3
inc
jle
mov
fnstsw
adc
and
inc
fisttpll
adc
mov
push
add
add
cmp
clc
jg,pn
xchg
shrl
cmp
or
push
dec
mov
cmp
xchg
add
popa
mov
test
jo
dec
sub
and
push
loop
dec
loope
inc
pop
push
roll
mov
jno
divl
sub
mov
aas
dec
jne
fwait
inc
std
mov
gs
mov
push
mov
mov
int3
mov
adc
fdivrs
jp
repnz
sbb
mov
inc
shrb
xchg
loopne
lea
daa
bound
push
vmread
clc
bnd
lgs
adc
mov
sbb
dec
dec
mov
push
rol
mov
call
sbb
adc
sbb
lcall
jl
popa
xor
xchg
fists
testl
cmp
xchg
test
xor
cmpsb
mov
jecxz
jge
stos
jmp
test
mov
add
fcomp
fsubrl
sahf
xchg
jg
shll
ret
pop
stos
cmpl
shrl
jne
scas
lea
pop
out
in
fdivrp
adc
push
mov
or
dec
daa
pop
arpl
and
mov
test
ficoms
sahf
pushf
mov
cmp
jmp
mov
adc
adc
xor
jg
inc
mov
pop
xchg
or
fnstenv
inc
push
sub
loop
xchg
inc
inc
cmpsl
cmpsb
shrb
mov
pop
xlat
adc
popa
cmpb
lahf
add
sub
ja
hlt
inc
repnz
inc
test
in
mov
or
je
mov
mov
fsubrs
js
fstpt
seta
inc
cmpsb
and
cmp
jg
shll
stos
inc
push
pushf
pop
pop
and
loop,pt
sti
add
xchg
int3
stc
fmul
xchg
cmp
cwtl
jp
jecxz
or
inc
push
mov
push
insl
cmpsb
repz
mov
jnp
mov
mov
push
ret
fs
test
cmp
fildl
inc
xor
mov
bound
and
xchg
ficompl
movsl
lods
stos
mov
lahf
inc
outsb
cld
xor
hlt
adc
mov
sti
test
pop
cli
imul
dec
pop
repz
inc
pop
lds
mov
sti
add
xchg
mov
aad
cmp
sbb
add
aam
inc
push
dec
adc
aas
andb
and
push
dec
sbb
sbb
sbb
mov
cmp
xchg
je
pop
aas
jbe
aaa
fldenv
mov
xor
add
mov
dec
sub
pop
sbb
xor
cmpsb
sub
or
loop
pop
cwtl
test
repnz
iret
jnp
cmp
outsl
fcom
adc
leave
outsl
xor
lcall
xor
hlt
inc
int3
adc
ljmp
jbe
jl
mov
push
cmp
es
ficompl
loop
xchg
std
or
push
lods
xchg
mov
mov
xor
loop
push
and
insl
aas
inc
cld
push
add
xchg
and
insl
pop
mov
mov
push
xchg
lock
jle
in
inc
lret
fdivrs
inc
movhlps
xchg
enter
pushf
lcall
cwtl
xchg
insl
rep
das
push
jo
sub
shlb
insb
cli
int
out
movsl
inc
in
stc
outsb
push
mov
ja
sub
sbb
fimull
push
addr16
outsl
mov
add
mov
adc
jno
jmp
enter
push
stc
je
sarb
add
cltd
inc
add
dec
fnstsw
xor
push
sbb
or
enter
jo
lea
fsubr
mov
pusha
js
mov
sbb
ss
cmp
pop
pop
nop
shlb
andl
addl
mov
fs
sbb
pop
push
ficoms
cmp
inc
ret
hlt
mov
push
cwtl
xchg
pop
add
pop
scas
xchg
repnz
sub
fldcw
sbb
jle
mov
icebp
icebp
cmpl
sbb
dec
mov
jb
movsb
clc
sub
das
arpl
pop
mov
inc
mov
sub
incl
cwtl
aaa
push
inc
jns
inc
add
push
sbb
scas
mov
outsb
mov
xor
movsl
sarb
testl
pop
cmpsl
fidivrs
scas
xor
cltd
sub
pushf
mov
and
sbb
add
sbb
repz
mov
or
leave
nop
inc
cld
adc
push
jns
shll
data16
movsl
out
dec
scas
lods
stos
push
xchg
sbb
movsb
inc
jo
pop
mov
cmp
mov
std
fwait
les
ljmp
push
mov
je
xchg
pop
test
insb
sub
loop
inc
inc
and
pop
in
cmp
push
sub
das
push
mov
icebp
rclb
jb
leave
ja
out
das
rolb
cmp
jge
mov
stos
fistpll
mov
gs
ja
dec
aam
aas
cmp
push
jno
mov
xlat
xchg
inc
decl
mov
nop
adc
repz
stc
cmpsb
out
sbb
pusha
pop
dec
fmuls
popa
js
leave
xor
xchg
cmc
mov
daa
cmp
xor
add
or
pop
xchg
xchg
cs
test
pop
sub
icebp
stos
mov
pop
jg
in
shll
and
mov
push
repz
sti
ret
push
or
ror
mov
dec
sbbw
insb
lea
xchg
dec
mov
cltd
xchg
mov
ja
add
stos
jbe
push
inc
adc
ljmp
mov
and
push
mov
rolb
add
lea
pop
push
push
sbb
or
leave
into
outsb
pop
stos
dec
push
jl
in
mov
inc
xchg
stc
jns
es
test
test
sbb
push
int3
mov
sub
in
lahf
cli
fisubs
cs
and
jl
inc
sub
inc
mov
dec
pop
adc
jbe
roll
aaa
ss
xchg
cmpsl
fnstsw
sub
and
pop
nop
dec
adc
ret
fdivl
jne
fs
js
xor
cmp
inc
cmp
and
adc
or
cmp
movsl
ja
or
jge
and
lahf
xor
shl
ss
xor
cmp
inc
into
fwait
or
sbb
jecxz
adc
sub
push
inc
rcl
stos
push
or
adc
xchg
xlat
mov
xor
ret
cmpb
mov
in
push
in
cmp
sub
push
cmp
sub
add
mov
push
or
xchg
xor
clc
fmul
mov
add
pop
inc
sub
sub
ret
rorb
imul
hlt
incl
cwtl
out
nop
lods
pop
inc
pop
daa
sbb
add
mov
sbb
mov
and
or
adc
insb
cmp
add
shlb
push
nop
in
cltd
imulb
mov
push
fisubs
sbb
cmpsb
adc
add
mov
mov
push
pop
pop
xchg
frstor
outsb
adc
mov
dec
mov
leave
inc
mov
test
mov
jo
pop
cmp
mov
or
or
das
rcrb
andb
loopne
das
lret
fs
mov
cmc
inc
and
loopne
lods
and
add
push
test
mov
rcll
xchg
addr16
mov
stos
mov
rcll
int
les
sub
stc
push
dec
sbb
add
push
mov
shr
pop
mov
lods
data16
in
xchg
cwtl
pusha
sarl
pop
addr16
setne
std
xchg
and
les
dec
xchg
movsb
popf
ret
xlat
cwtl
pop
jnp
jne
int
shlb
dec
or
sub
test
fs
push
jmp
jae
push
sub
jge
int3
and
fisttps
dec
mov
dec
orl
iret
mov
add
shrl
movsb
dec
or
sub
enter
aas
cmp
push
ja
ret
mov
aaa
sbb
sahf
pop
sbb
sbb
cmp
popa
cmp
and
bound
sub
addr16
outsl
push
ret
dec
sub
mov
cwtl
idiv
dec
bound
cwtl
cmpl
lods
xchg
ds
mov
xchg
push
orl
inc
insb
mov
scas
jl
or
push
imul
into
mov
lods
lods
adc
adc
sub
in
lds
insb
jg
fiaddl
mov
sti
mov
hlt
mov
or
inc
push
mov
inc
pop
fucomi
jmp
and
mull
ret
stos
shll
inc
or
mov
movsl
xchg
pushf
outsl
cmpsl
pop
leave
scas
adc
mov
mov
lret
lahf
popf
fsubl
lret
dec
sbb
mov
sarl
push
mov
inc
cli
dec
lret
jecxz
in
cmp
lds
into
scas
insl
add
popf
testb
mov
and
loop
jl
sbb
clc
mov
lods
sbbl
fnstenv
sub
push
or
loop
dec
mov
mov
cmp
sbb
cld
push
rol
test
sub
ss
xlat
pop
loopne
popa
std
push
mov
mov
xchg
dec
sbb
jge
xor
jl
pop
adc
loope
or
add
push
leave
lret
and
sub
insb
insb
adc
popa
fcoml
push
dec
push
adc
mov
pop
cwtl
push
rcll
aaa
aas
mov
aad
into
outsb
add
push
test
sti
mov
repnz
pusha
arpl
pop
sub
es
jnp
xchg
mov
pushf
cld
ficoms
fdivrp
sbb
jb
pop
jecxz
xchg
adc
lods
pop
xadd
rorl
jb
sbb
aaa
adc
mov
adc
or
aaa
mov
adc
test
in
xor
shrl
xchg
mov
jae
js
out
jno
aad
mov
scas
push
lcall
sub
ja
ds
xchg
fcoms
ja
sbb
ds
sti
outsb
sbb
sbbb
add
leave
mov
bound
mov
aas
insl
scas
jbe
mov
lret
es
jnp
xor
push
dec
mov
insb
or
aaa
mov
in
lods
test
dec
dec
sbb
clc
jnp
dec
mov
mov
das
jnp
jmp
or
and
jle
lcall
clc
lret
jmp
loop
push
out
dec
and
dec
cmp
sub
int
push
adc
sub
shrb
fldcw
cltd
gs
mov
in
fsubl
testl
sub
xchg
push
into
jb
xchg
or
push
sub
cmp
xlat
idivb
jmp
mov
add
movsb
test
and
nop
test
inc
xchg
or
mov
cs
mov
xchg
subb
and
sbb
sbb
mov
inc
sbb
and
shlb
jns
mov
mov
in
xchg
mov
inc
push
repz
std
movsl
adc
stos
mov
jae
jge
mov
and
call
inc
gs
int3
hlt
xor
insb
stos
out
loope
mov
mov
and
test
fmull
mov
xchg
mov
push
jne
cli
fcompl
mov
jbe
push
out
push
mov
add
xor
mov
push
sub
insb
mov
out
cmc
or
stos
adc
pop
pop
mov
repnz
push
or
sbb
sub
lea
cmpsl
loopne
dec
dec
addl
adc
dec
out
pop
xchg
lods
pusha
jl
inc
fwait
and
xchg
sbb
mov
flds
or
mov
dec
std
sar
push
int
and
or
out
mov
cmp
mov
or
push
movsb
lods
lods
addr16
add
dec
add
insl
pusha
popa
mov
xchg
mov
pop
cmp
push
outsl
lret
les
sbb
push
xchg
les
sbb
movsl
or
jne
jne
aaa
lock
or
movsb
jns,pn
out
dec
incb
add
inc
les
sub
cwtl
addr16
sub
push
mov
cmp
in
sbb
fsubl
nop
lret
mov
jnp
movsb
sub
les
mov
ret
nop
scas
aas
pop
cli
inc
int3
or
test
stc
xchg
ss
xchg
xor
imulb
hlt
rcrl
or
aas
cld
stc
lds
adc
filds
inc
xlat
ficoml
lret
imul
push
mov
push
sbb
lret
addr16
cli
sbb
ljmp
inc
xchg
sbb
sbb
xor
adc
in
scas
test
or
negl
stos
lea
loopne
or
enter
popa
pushf
sub
mov
enter
cmp
ljmp
pop
cli
lea
xchg
xchg
std
push
lock
pop
pop
or
push
push
pop
fstp
cmp
lret
mov
pop
aas
lcall
out
jg
adc
or
dec
xchg
popa
in
push
mov
addr16
lea
sub
xchg
data16
push
and
cmp
outsl
inc
lret
lods
loopne
shl
dec
divb
xchg
mov
fwait
adc
xor
adc
inc
repnz
cmpsl
flds
lea
int
les
fdivrp
jge
ret
std
in
push
add
pushf
sub
rorb
mov
pop
leave
dec
mov
cmp
rcll
mov
and
xchg
lock
dec
mov
or
xor
xor
cmpsb
mov
mov
xchg
stos
lods
add
xor
stos
sub
out
pop
jns
push
inc
clc
fisttps
jmp
lock
pop
pop
std
jmp
mov
lds
push
fcoms
sub
push
data16
rcll
push
movsl
push
jb
mov
jns
popf
or
inc
icebp
insl
dec
hlt
sbb
shl
add
sbb
jl,pt
repz
pop
int3
aas
sbb
ret
je
gs
and
arpl
rorb
mov
scas
xchg
sub
fsub
xor
fcmovnbe
or
stos
outsl
jge
or
push
inc
adc
jae
insl
stc
outsl
sbb
xor
inc
inc
dec
loop
outsb
mov
mov
xchg
xor
es
xor
cmp
push
mov
lahf
and
dec
movsb
cmovo
adc
dec
rorl
push
pop
out
bound
outsb
iret
in
push
cmpsb
sbb
jne
test
adc
mov
aam
stos
dec
js
mov
fiaddl
pop
movsl
mov
pusha
xor
and
out
bound
ret
mov
scas
mov
xor
ret
adc
add
xorb
lret
andl
iret
xor
add
jecxz
leave
mov
out
icebp
mov
data16
divl
push
cmp
insb
ret
mov
jne
int
cmp
add
ss
mov
pop
call
fstps
dec
xlat
pop
dec
sahf
daa
inc
push
or
or
in
mov
xchg
mov
out
lds
ljmp
call
fdivrl
shl
pop
push
lret
push
insl
mov
enter
cwtl
or
pushf
xchg
les
cli
mov
addb
dec
test
xchg
mov
push
popl
jne
pop
ss
in
mov
movsb
scas
int3
cmpsl
stos
cwtl
call
mov
scas
movsb
jmp
or
out
mov
xor
sub
iret
lock
sti
jne
mov
pop
jecxz
dec
ret
insb
loop
xor
xorl
pop
sub
cwtl
sbbl
dec
bnd
fs
and
push
pushf
sbb
mov
push
jle
fwait
jae
imul
ljmp
lahf
xor
shl
sahf
andl
cs
hlt
std
sbb
fldl
jl
in
data16
mov
inc
mov
cmpsl
push
cmpsl
pop
mov
inc
dec
inc
shrl
cmc
popf
popa
imul
rclb
mov
sub
jne
mov
add
int3
sbb
shrb
or
into
out
enter
int3
loop
into
adc
jbe
int3
or
cmp
and
adcl
dec
push
add
mov
push
lcall
ss
lret
ficomps
push
test
popa
fstp
jne
adc
fs
mov
cmp
fprem1
sti
and
ret
mov
imul
fs
sub
dec
ret
pop
int3
mov
mov
xchg
lods
push
jno
cwtl
pop
xchg
fnstsw
inc
sbb
mov
xchg
jp
lock
adc
ds
daa
jl
cmpsb
lock
add
insb
mov
push
cmpsl
sahf
stos
mov
pop
xorl
ficomps
xchg
and
sbb
loop
adc
mov
mov
xor
push
lret
lock
push
mov
pop
push
sarl
add
xor
stos
mov
adc
jge
mov
pop
mov
or
inc
daa
or
push
pop
xchg
aas
mov
les
mov
cmp
popa
je
es
clc
and
jb
lods
jg
fcompl
data16
sahf
inc
xor
sbb
xor
ret
dec
je
lahf
cs
jecxz
cmp
push
bound
cmp
adc
jbe
add
dec
test
mov
clc
xor
push
in
sbb
cmp
xchg
imul
repnz
mov
daa
mov
lret
jle
lods
mov
fnstsw
jle
out
inc
cmpsb
cmc
pop
cmp
push
xor
lods
or
jmp
nop
lret
imul
push
shrb
repz
hlt
mov
insl
shlb
sub
sbb
pushf
lret
push
mov
mov
adc
push
vpavgw
dec
push
mov
xchg
sub
dec
shlb
push
or
xor
movsl
push
mov
xchg
imul
inc
rorl
xor
jle
push
mov
out
ss
mov
loop
in
push
out
jmp
aad
or
mov
cmp
bound
pop
cwtl
fwait
pop
jecxz
jmp
movsb
cwtl
push
push
sbb
loope
or
lds
mov
sub
fists
sbb
mov
jmp
ss
add
enter
scas
jp
lahf
push
xor
dec
jbe
call
inc
adc
aaa
xchg
inc
mov
pop
add
jp
lds
int3
mov
std
sub
mov
movsb
sub
outsl
aaa
cmp
nop
movl
testb
clc
xor
push
subb
stc
outsl
inc
adc
mov
cwtl
je
les
jbe
mov
outsl
lahf
stos
and
pusha
mov
xor
sbb
sub
pushf
mov
xor
mov
or
dec
inc
pushl
std
test
cwtl
push
inc
or
adc
mov
enter
sarl
add
jnp
pop
xlat
fcomps
add
cmp
mov
out
lcall
pushf
jge
cltd
testl
xor
dec
adc
arpl
jg
stos
mov
negb
dec
jl
mov
mov
out
insl
mov
adc
rcll
mov
dec
cs
cmpsl
add
cmpsb
outsl
and
daa
lods
loope
sbb
push
inc
in
das
push
and
jb
dec
pop
mov
jae
icebp
daa
mov
pop
data16
xchg
ret
mov
cmp
and
lock
xchg
mov
push
jnp
enter
xor
jnp
and
cmp
mov
pop
pop
insl
mov
push
adc
jp
mov
mov
lret
pusha
pop
jl
xchg
xor
mov
push
xchg
adc
test
mov
jbe
sbb
je
test
cmp
outsl
cltd
rcll
cmp
xchg
dec
xorb
mov
push
subb
adc
jp
push
loope
test
fldl2t
xor
stos
mov
mov
lds
inc
sbb
in
lret
mov
mov
lahf
push
add
adc
pop
clc
or
cmpsb
sbb
jnp
sub
xchg
mov
lret
jne
sub
stos
mov
ds
mov
or
dec
xchg
dec
arpl
cmp
stc
sub
sub
into
mov
lcall
fdivrl
dec
lock
pop
or
icebp
pop
xor
and
testl
les
push
push
sbb
rorb
sbb
jmp
test
loope
sbb
xorb
fadds
xchg
roll
lret
std
je
daa
xchg
outsl
pop
rcrl
movsb
xchg
jg
adc
test
mov
mov
pop
sbb
sub
lods
lcall
shll
ss
insb
bound
stos
pop
pop
shl
shll
push
dec
sub
jne
adcb
ret
out
or
inc
sub
jmp
add
rcr
imul
pop
mov
lcall
add
pop
or
jp
jb
xchg
lock
dec
adc
jle
jnp
pop
push
testl
xchg
lcall
xchg
mov
push
pop
ds
cmpsb
sbb
mov
js
rorb
adc
shlb
sub
jl
mov
jecxz
and
insb
xor
out
fwait
jle
inc
cltd
jp
jmp
jae
or
pop
repnz
add
lcall
pop
scas
adc
fabs
xor
mov
xchg
mov
adc
in
lcall
and
mov
movsb
jae
mov
pushf
jl
mov
pop
push
push
sbb
leave
add
std
pop
mov
mov
cli
sbb
sub
out
inc
pop
mov
inc
and
sub
xorl
sarb
cmp
ficoms
lcall
mov
jl
push
fisubrl
ljmp
or
pop
xchg
fwait
push
cmp
sub
das
pop
jp
rcr
jo
leave
add
test
out
aad
and
pop
cmp
pushf
push
shll
adc
out
andb
stc
xor
test
lock
loopne
xchg
or
mov
ds
adc
ret
mov
and
push
mov
jbe
ret
add
sub
mov
dec
or
int3
sub
fcmovu
stc
sub
push
imul
cmp
addl
in
dec
xor
sti
xor
jae
sahf
leave
dec
mull
popf
jnp
pop
cmp
call
push
sarb
sti
cmp
mov
adc
push
add
adcb
fucomi
in
xor
fdivs
and
lret
mov
sbb
adc
ret
adc
pop
xchg
mov
popa
leave
data16
inc
mov
sub
addl
jmp
and
sub
dec
mov
add
scas
xchg
push
jb
into
cmp
sbb
sti
mov
push
add
mov
mov
pop
and
xchg
imul
outsb
xchg
popf
dec
inc
incl
push
adc
stc
mov
pushf
pop
sub
je
ja
adc
adc
dec
leave
movsb
dec
sub
adc
xchg
dec
cmp
push
lcall
pop
lret
jae
cwtl
jg
int3
lds
and
popf
xchg
or
mov
lret
mov
lret
mov
fidivs
sbb
jmp
fistl
pop
ljmp
dec
lods
xor
add
fldt
rcll
fwait
int
scas
xchg
add
stc
imul
sub
pop
fwait
cmp
push
test
mov
daa
cmp
pushf
mov
dec
jae
lods
loop
push
mov
pop
scas
xchg
je
scas
lea
pop
mov
movsb
cld
mov
and
lahf
subl
data16
fwait
imul
pop
adc
sahf
add
dec
jge
pop
push
stc
xchg
inc
ret
enter
movsb
and
pop
loop
push
sub
jl
jmp
mov
daa
adcb
lock
pop
sbb
ljmp
jae
and
imul
aad
lods
jne
pop
insb
pop
jle
arpl
pop
mov
dec
shr
pop
outsl
push
jb
and
mov
cwtl
and
mov
jb
sbb
and
jle
mov
scas
mov
mov
fisubs
add
lods
movsl
imul
inc
jg
dec
sub
or
add
cwtl
jne
mov
test
add
leave
jne
cltd
pop
out
pop
sti
test
fidivl
cmpsb
adc
cmc
test
fiaddl
push
mov
inc
xchg
and
stos
xlat
imul
cmp
push
sbb
jbe
jae
rorl
sbb
push
sbb
in
sub
lods
rcrb
shrb
sahf
cmp
cmp
movsb
in
inc
sti
and
sub
mov
or
in
mov
fcoml
in
les
lret
inc
xchg
xchg
imul
cmp
sbb
mov
jbe
fbld
jl
jne
arpl
jo
fcoms
sub
sbb
mov
mov
jno
cmp
inc
add
jo
dec
and
or
lods
mov
jle
mov
push
lret
ficoms
into
inc
cmp
into
andb
adc
mov
add
xchg
nop
test
dec
scas
scas
js
mov
sbb
mov
dec
jns
adcb
sbb
jge
inc
lods
sahf
fnsave
cmp
inc
enter
inc
test
imul
aad
faddl
push
xchg
aaa
test
ficoml
push
jmp
push
cmp
out
or
dec
xor
pop
inc
inc
mov
sub
movsb
decl
add
inc
add
sbb
pusha
pop
inc
cltd
syscall
pop
pop
les
push
add
mov
dec
mov
mov
cmpsb
mov
subl
xchg
mov
lds
jnp
adc
or
into
loopne
rclb
sarb
test
call
cmp
jecxz
fistpll
icebp
fwait
pop
push
movsl
mov
push
test
pop
mov
scas
fsub
repnz
cmc
ljmp
inc
out
pushf
sub
xchg
mov
iret
ud1
mov
pop
mov
jmp
push
loopne
mov
hlt
jo
div
test
mov
imul
xchg
xlat
andb
lahf
adc
push
pop
inc
mov
sub
and
out
xchg
stos
shrb
aas
xchg
es
popf
inc
or
pop
xor
mov
enter
add
aad
mov
call
add
adc
ja
push
nop
ret
push
or
mov
xchg
and
fs
cmp
shll
pop
xor
adc
pop
sbb
repnz
push
jl
cmp
push
cmp
cld
leave
insb
mov
and
mov
repnz
mov
jmp
adc
adc
pop
mov
data16
in
dec
fists
std
incb
adc
adc
mov
and
mov
push
adc
push
sub
jae
lock
sbb
dec
aaa
jg
lods
fdivs
adc
mov
mov
push
mov
jle
cmp
xchg
ret
mov
ret
mov
aaa
in
negb
push
outsb
nop
sbb
fnstenv
lds
lahf
adc
in
adc
push
jmp
sbb
push
divb
cmp
cwtl
inc
insl
andb
pop
aam
jmp
adc
mov
mov
mov
cmp
jge
jle
gs
rclb
mov
dec
test
mov
xlat
and
addb
xchg
pop
inc
adc
adcb
mov
mov
out
add
std
je
cmp
cmp
rorl
fst
jle
xor
fdivs
dec
sahf
leave
mov
fdivrl
xor
xchg
nop
xor
push
arpl
cmc
insl
mov
xchg
mov
aad
fdivs
je
xor
xlat
ljmp
in
sub
js
imul
mov
arpl
add
ret
push
sub
and
mov
pop
jb
cmpsb
push
pop
ljmp
xchg
int
cli
push
dec
lea
jecxz
and
mov
lcall
xor
mov
inc
push
mov
mov
rcll
fcoml
mov
mov
xchg
dec
xor
jae
or
gs
jb
call
mov
cmpsb
dec
xchg
lock
mov
ret
or
dec
sub
cmp
call
test
divb
scas
repz
mov
pop
add
cmpsl
in
pop
ss
je
xchg
popf
das
adc
imul
fnsave
or
inc
xor
sub
sbb
or
insl
xor
dec
mov
add
mov
push
dec
dec
rep
cli
shlb
faddp
jmp
std
pushf
test
pusha
rorl
jnp
lea
jmp
cmp
rorl
pusha
lods
cmpsl
enter
sbb
jmp
stos
push
pop
jnp
xor
test
push
or
xor
scas
pop
jg
inc
js
sbb
jbe
xchg
mov
or
jmp
setnp
adc
rorl
push
jnp
dec
shr
mov
adc
xlat
mov
adc
mov
movsb
outsl
mov
sbb
test
add
sbb
push
mov
adc
mov
sarb
fs
mov
mov
data16
js
imulb
scas
lahf
add
sub
pushf
mov
sub
mov
sub
and
pop
es
icebp
pop
or
fisttpl
push
mov
arpl
mov
cmpl
dec
lods
inc
loop
cmp
push
dec
jg
rorb
shl
push
sbb
sub
and
inc
loope
out
fnstsw
cmpsb
inc
pop
and
mov
pop
sub
fsubr
xor
sbb
jne
sub
mov
push
stc
loop
push
inc
add
cmp
jmp
or
cmc
ror
ja
out
fs
and
sbb
xchg
ljmp
shlb
mov
out
scas
popa
filds
mov
bsr
sub
aad
aad
jl
das
xor
xor
jbe
loopne
add
jecxz
idivl
cmp
jns
aam
stos
mov
mov
and
imul
sub
aas
cmp
cmp
hlt
pop
inc
jb
jmp
rclb
inc
pop
in
lock
pop
cs
test
test
sub
jmp
mov
push
jge
mov
cmp
jb
dec
lret
pop
pop
push
orl
mov
dec
adc
enter
sub
mov
dec
push
or
fwait
cmpsb
pop
lods
les
mov
into
adc
mov
imull
das
xchg
dec
adc
in
fldl
aam
das
mov
roll
fucomip
xchg
scas
rclb
and
enter
jge
es
xchg
adc
cmp
and
lods
rcr
loop
sub
lea
leave
adc
mov
xlat
cmp
lahf
or
add
or
outsb
add
adc
das
mov
in
ret
fwait
jne
test
fstps
bound
push
inc
test
lret
pop
arpl
mov
mov
aas
mov
dec
xchg
cmp
mov
icebp
test
cmp
adc
inc
stc
aad
fadds
lea
leave
je
push
in
mov
cltd
stos
adcb
cmpsb
sub
loop
lods
pop
cmp
xor
xor
stos
in
rdtsc
jns
leave
dec
adc
incb
mov
in
mov
std
xor
push
nop
sbbl
fwait
stc
adc
repz
aaa
ljmp
jo
and
add
mov
sbb
pop
stos
or
outsb
insb
pop
or
cmpsb
scas
lret
scas
mov
jae
imul
std
shll
inc
out
pushf
xchg
adc
rcrl
insl
in
addr16
lret
or
mov
push
ljmp
fs
popa
jne
js
lahf
adc
fisttpl
xor
in
cmpsb
std
inc
mov
sbb
inc
in
and
movsl
dec
cltd
bound
fucom
or
push
mov
insb
jns
loopne
lods
mov
mov
sub
sub
push
add
shll
jbe
jle
push
lret
dec
lock
and
std
add
cmp
stos
inc
push
rcrb
addr16
dec
or
xchg
push
mov
dec
dec
cmp
adc
adc
mov
fimull
xlat
icebp
xchg
push
out
cmpsb
int
add
cmp
adc
pop
lods
adc
add
into
push
xorb
sar
cmpsl
ret
out
or
shlb
or
aad
xchg
lock
mov
pop
mov
jno
jbe
lahf
inc
ret
sbb
mov
pop
mov
mov
into
mov
call
adc
sbbl
xchg
and
push
sarb
dec
push
rcr
pop
jp
dec
mov
hlt
and
sub
pop
addl
adc
inc
push
xchg
mov
fmul
fistpll
mov
xchg
mov
imul
lahf
inc
cld
jns
cmp
outsb
ret
push
repnz
cmp
mov
shl
push
xchg
add
pop
jp
fldcw
xchg
mov
xlat
test
movsl
jecxz
outsl
and
pcmpgtd
insl
adc
or
dec
sbb
dec
iret
add
into
jp
mov
push
sbb
out
sbb
xchg
xor
out
jle
aaa
arpl
lcall
jbe
divl
push
fwait
xlat
fdivrl
adc
cld
sbb
or
pop
rol
pop
xor
jbe
hlt
adc
xchg
repz
ss
mov
sub
stos
sbb
push
outsl
in
std
add
and
jecxz
movsb
sub
add
das
fistps
xchg
int3
xchg
push
sarl
ss
fsubrs
xchg
mov
xor
mov
mov
jmp
mov
add
sub
jno
jne
dec
xchg
xchg
sbb
sbb
xchg
lahf
out
ja
gs
out
cmpsl
fs
jmp
jnp
inc
push
cmp
gs
or
lret
mov
inc
add
cmpsl
loop
mov
mov
jb
int3
mov
lret
insl
jge
mov
mov
test
xorl
adc
mov
cmp
cmpsl
push
rcl
test
ja
imul
cs
mov
lahf
and
adc
dec
pop
and
pop
rcl
shrl
jp
adc
adc
test
add
sbb
fistps
loope
pop
mov
and
sub
mull
push
andb
repnz
mov
rorb
aaa
sub
jmp
call
aad
jns
cmp
repz
les
add
ss
and
mov
push
out
out
shlb
jp
pop
xor
jae
cmp
pop
cmp
jns
lret
adc
adc
and
cmc
arpl
inc
les
je
cmpsl
pop
das
or
jo
sarl
sbb
xchg
rcr
stc
push
xor
push
mov
jnp
addl
or
ret
jg
das
aad
or
stos
push
jp
push
dec
inc
and
xor
mov
dec
or
inc
test
adc
jge
pop
mov
outsl
sbb
inc
stc
loopne
adc
pop
addb
movsl
addb
jecxz
out
fisttpl
jno
mov
testb
add
outsl
int
shrb
add
pop
mov
sbb
sbb
out
sahf
insl
push
into
ja
ret
fmulp
lock
movsl
fwait
in
dec
dec
or
aaa
xor
psrlq
adc
aas
sbb
and
out
and
fcmovu
repnz
aaa
sbb
inc
movb
movsb
fidivrs
dec
xchg
pop
fisubrs
pop
cmp
loope
mov
mov
sahf
sbb
lret
icebp
cld
pushf
outsb
repz
mov
mov
sbb
xchg
xchg
mov
fwait
fwait
sbb
pushw
fldt
aam
fwait
pop
mov
jbe
cmp
ds
mov
jne
lods
mov
lods
sub
lods
jo
mov
mov
cltd
add
pop
into
and
inc
push
sti
add
insl
insb
std
jecxz
shrl
aam
jae
imul
cli
push
dec
adc
sub
divl
xor
frstor
sub
fnstcw
jg
xchg
xor
push
xorl
xchg
dec
xor
add
xor
push
or
daa
cmpsb
fsubl
addl
aad
fwait
mov
inc
xor
fistpll
adc
lahf
or
sti
cmp
push
enter
inc
out
int3
jns
and
push
test
js
out
or
adc
jle
cmp
mov
sbb
and
insl
push
hlt
nop
mov
test
and
mov
out
mov
sub
mov
out
sahf
and
addr16
sub
mov
xchg
jg
sbb
loop
rep
ret
mov
loopne
push
pushf
dec
cmp
adc
push
add
cmc
cmpsb
in
push
fisttpl
pop
fdivrp
cmpxchg
lock
or
stos
out
or
dec
movsl
sbb
jns,pn
out
les
dec
test
stos
add
test
addb
daa
cld
mov
in
adc
xchg
popf
or
je
fidivl
cmpsb
loop
jg
imul
shrb
popf
lds
cmpsl
das
mov
sub
cmp
pop
lret
push
nop
movsb
sbb
es
into
in
add
mov
adc
addr16
ret
add
insb
jno
push
cmp
pusha
mov
rolb
mov
leave
push
pop
mov
mov
xchg
fs
lret
dec
push
and
mov
mov
lret
aam
addb
jmp
aad
cmp
or
adc
jmp
fldl
mov
cmpsl
loope,pn
sbb
lret
test
int
das
fs
pop
push
push
add
stos
pusha
test
or
stc
lods
jle
gs
mov
jae
test
test
lea
repnz
shll
jmp
pop
pop
jl
add
insl
inc
jns
mov
cltd
out
fs
sub
and
loop
ja
inc
andb
cwtl
notb
inc
ds
std
xor
mov
lea
adc
mov
inc
inc
loopne
loope
dec
pop
lret
adc
jbe
cmpsb
out
push
ss
aad
mov
scas
hlt
das
test
and
cmpxchg
inc
or
lret
andl
jg
add
test
test
mov
and
cmpsl
jae
cmp
adc
lods
dec
jbe
test
mov
mov
and
adc
mull
cmpsl
or
cmpsb
xchg
fwait
xor
popf
xchg
rol
test
sti
into
fs
ja
dec
add
fnstsw
sti
out
and
pop
outsb
or
pusha
push
mov
fwait
lea
dec
call
push
inc
popf
call
mov
adc
fnsave
mov
insb
sbb
stc
jno
out
sti
add
sbb
cmpsb
ret
dec
sbb
cmp
mov
push
xchg
movb
xchg
repnz
jmp
inc
sbb
ja
sub
xor
sti
pop
inc
ljmp
or
inc
mov
pop
gs
lea
pop
adc
shlb
mov
adc
les
and
dec
dec
movsl
dec
mov
ja
jo
addr16
movsl
aaa
or
cmp
outsb
and
mov
cltd
pop
mov
xchg
push
scas
mov
icebp
iret
mov
or
pop
jnp
and
or
das
mov
inc
mov
jge
add
push
or
dec
std
loop
shr
in
sub
fimull
add
mov
fnsave
add
popf
fsubrp
xor
sub
xchg
dec
scas
out
adc
xchg
gs
cld
push
loope
icebp
and
nop
xor
imul
int3
cmp
stc
lahf
test
jo
pop
cmp
iret
in
sbb
dec
and
mov
cwtl
cmp
int
xchg
xchg
jne
xchg
outsl
cmc
push
ud1
xor
jns
sbb
out
push
out
jb
mov
mov
dec
ds
mov
push
or
dec
inc
mov
and
out
sbb
call
cli
inc
mov
dec
gs
sbb
out
pop
cmpsl
out
jne
in
mov
dec
push
sub
mov
jns
cli
push
add
stc
shlb
hlt
cmp
xchg
lea
mov
push
gs
sarl
fs
lea
loop
stos
jle
fimuls
jnp
adc
sbb
xchg
jne
fiadds
mov
mov
sbb
push
ret
or
jnp
sbb
sbb
cmpsl
adc
fmul
jns
cmp
popf
inc
jmp
fldenv
hlt
addr16
stos
in
cmpsb
jnp
jg
adc
inc
lahf
jnp
mov
into
add
cs
cmc
sahf
out
sub
push
and
stos
outsl
cld
adc
jge
dec
js
and
inc
stc
fildl
sub
vmread
lods
lahf
hlt
test
aaa
nop
testl
out
test
xor
pop
push
lock
add
sbb
adc
push
stos
int3
push
inc
out
fidivl
addr16
jns
jmp
mov
xchg
adc
jge
ficomps
shr
push
jnp
add
aam
jge
movsb
std
fmulp
incb
data16
test
inc
negb
mov
inc
loope
push
das
mov
pop
cmpb
dec
or
aas
insb
sub
jmp
push
mov
int3
adc
mov
or
loopne
sub
add
cmc
cmpsl
cmp
sub
jg
aad
jl
jge,pn
mov
adc
mov
and
pop
sar
dec
aas
call
xor
inc
imul
movsl
loop
aad
js
cmp
out
clc
pop
jae
or
mov
mov
xchg
movsb
stc
and
call
add
insl
push
je
fwait
test
push
jmp
adc
ds
xchg
add
pop
nop
push
xor
xchg
repz
out
mov
popa
dec
dec
outsb
aaa
xchg
test
add
loopne
stos
jae
sbb
sub
repnz
sarb
mov
adc
jb
sbb
sub
aam
cmp
jbe
call
mov
mov
scas
orl
pop
mov
mov
out
out
out
sahf
sbb
mov
outsb
cmp
add
or
push
test
repz
pushf
loope
std
jp
adc
mov
jnp
out
cmpsl
lock
jnp
push
mov
insb
ds
pop
push
pop
out
hlt
inc
add
mov
and
jae
cs
in
sub
jb
data16
das
lock
aas
or
dec
mov
gs
add
mov
push
nop
movsl
dec
xchg
out
dec
push
jp
push
aam
jg
divl
cmp
push
loop
pop
xlat
fcoms
test
mov
sbb
fcomps
pushf
aam
dec
call
test
daa
shr
xchg
and
mov
and
push
into
sub
int
test
int
xchg
lods
les
stos
adc
push
push
fwait
sub
shrl
dec
cltd
je
mov
dec
sub
outsl
shl
inc
jno
sub
repnz
xor
or
incl
adc
mov
add
cli
dec
lea
out
adc
divb
sub
jl
mov
mov
test
dec
js
je
shlb
dec
test
js
lea
dec
jcxz
jp
pop
add
outsl
push
jge
adc
pop
outsb
mov
call
call
test
sub
jb
repz
and
cmp
mov
pop
cmpsl
mov
ret
push
push
push
imul
insl
push
sbb
and
sti
int
push
popf
mov
cmpsl
or
lret
mov
cwtl
cs
pusha
or
dec
ret
adc
outsl
pop
daa
out
cmp
fbstp
mov
mov
mov
inc
enter
cmp
fcomi
lahf
ljmp
jp
bound
loop
movsl
lahf
xchg
mov
jle
leave
sbb
mov
int
sub
and
jecxz
mov
sub
mov
xor
cli
jno
out
inc
xor
lret
cmc
mov
fbstp
jp
jmp
test
or
jl
pop
and
mov
and
xchg
cltd
sbb
sub
stc
filds
das
and
adc
out
mov
or
outsb
pop
pop
lret
pop
and
insl
arpl
cmp
add
outsl
or
and
pop
sbb
in
bound
add
cmp
adc
sbb
enter
test
cld
dec
ret
cmc
sarb
adc
nop
jg
arpl
hlt
out
ds
fadd
adc
scas
push
test
dec
and
sbb
pop
adcl
pop
aam
mov
add
mov
orl
mov
adc
stc
insb
mov
int
jge
adc
dec
push
cs
imul
test
pop
xchg
test
movsb
push
and
mov
fnstenv
and
jle
add
jbe
pop
int
lods
insb
pop
adc
add
adc
lock
pop
push
sbb
rorl
mov
stc
gs
test
push
inc
hlt
sub
pop
inc
adc
mov
cmc
loope
jae
and
jg
rcrl
adc
es
icebp
fbld
add
sbb
int
int3
push
xlat
mov
jge
adc
mov
or
push
in
data16
mov
outsb
daa
data16
in
ret
dec
dec
negl
mov
ret
ret
mov
sbb
jno
fwait
mov
pop
mov
arpl
adc
xchg
jp
test
mov
xchg
sub
push
dec
lcall
add
cmp
cmpsb
call
ret
mov
push
jae
inc
cwtl
mov
jecxz
and
daa
scas
cmc
pop
std
int
lods
out
int
sub
and
mov
pushl
cmpsl
inc
sarl
mov
and
cmp
and
rolb
jl
mov
faddl
add
or
and
lcall
dec
xor
inc
sub
and
cmp
mov
add
mov
in
mov
subb
pushf
lods
xor
fdivrl
aaa
sub
cltd
xor
push
movsl
push
icebp
inc
aad
pop
xchg
in
int
pextrw
sbb
repz
pop
sbb
mov
in
push
mov
or
push
jae
nop
push
loop
je
nop
push
in
aaa
sub
iret
idivl
cltd
jge
push
stos
mov
push
xchg
ret
mov
or
movsb
insb
xbegin
pop
nop
sti
push
xor
mov
test
mov
fmul
jmp
sub
xor
testl
fstp
mov
out
scas
pop
daa
and
cmp
fdivr
lcall
sbb
ffreep
icebp
pop
or
xchg
dec
lret
test
cmp
push
loopne
rol
mov
repz
notb
inc
dec
test
dec
mov
ja
xchg
lods
lds
mov
add
dec
cmpsb
and
int3
push
sahf
cli
mov
mov
cli
jbe
push
test
loop
push
inc
push
popl
jnp
pop
pop
and
in
rcrl
mov
nop
dec
push
stos
cmp
dec
push
mov
in
cltd
scas
push
test
cmpsl
lahf
pop
aas
sub
pop
jp
mov
cmp
ss
mov
stc
mov
scas
push
into
sbb
lret
sub
mov
or
push
test
sbb
insl
cmpsb
ja
lock
cmp
fxch
les
push
jp
sub
sub
cmp
jnp
les
cmc
inc
adc
or
lds
sbb
sti
out
ljmp
mov
dec
mov
jle
lretw
scas
inc
iret
cmp
aaa
dec
xchg
mov
fwait
dec
movsl
jb
mov
mov
jmp
xchg
sub
jae
scas
fs
sub
xchg
adc
in
clc
addl
cmpsb
inc
nop
xchg
jae
repz
add
fwait
dec
mov
aas
sti
and
leave
lock
loop
inc
rcl
ja
pop
scas
xchg
xchg
or
adc
test
mov
je
daa
aam
mov
mov
popa
and
adc
add
dec
int3
dec
adc
mov
push
mov
out
in
mov
or
sub
in
mov
aad
xor
pop
push
cmp
data16
mov
pop
in
out
shlb
add
dec
icebp
mov
pop
mov
cltd
in
sbb
in
jp
mov
sub
or
mov
cmpsl
xchg
aas
add
and
lods
mov
xor
sbb
add
push
dec
push
gs
xor
cs
mov
cmpsl
cmp
or
mov
mov
cmp
mov
mov
int3
aam
test
sbb
push
xchg
jmp
sbbb
sti
mov
fnstsw
mov
mov
pop
js
or
add
enter
mov
dec
cmp
xchg
addr16
fldl
les
dec
ja
sbb
lds
les
mov
dec
cmp
ret
sti
loopne
mov
out
ja
jg
lahf
bound
sub
stc
sbb
sbb
push
xor
xor
lea
cwtl
push
andb
inc
popf
sub
sub
sbb
fcmovnb
xor
add
fdivrl
pusha
xchg
in
clc
xchg
fisubs
fidivrl
arpl
sub
sahf
sbb
pop
push
loopne
or
mov
sti
cli
jg
jnp
repnz
mov
test
out
inc
stos
popa
add
nop
xchg
xor
sti
dec
adcb
xor
andb
push
out
mov
cltd
dec
mov
cmc
test
cmp
pop
pop
dec
dec
sub
andl
popf
add
dec
in
xor
dec
xchg
out
inc
sti
mov
jnp
enter
dec
leave
mov
mov
and
push
sub
test
mov
jl
ret
pop
cmp
test
push
push
inc
imul
test
stc
repz
inc
cmp
xchg
fsubrs
testl
dec
test
sub
mov
imul
movsl
cmpsb
pop
je
ret
dec
sbb
push
push
bound
or
mov
pop
fnstcw
sub
pop
sbb
and
imul
push
and
cli
sbb
mov
cmpsl
lods
lds
push
push
call
add
outsb
mov
mov
out
cmp
scas
popa
popaw
jnp
xchg
mov
mov
xlat
movsb
lods
cmp
gs
inc
andl
mov
inc
imul
incb
sbb
pop
dec
inc
adcb
pushf
shrb
popa
repnz
pusha
jg
out
push
sbb
fwait
cmpsb
cmp
fwait
dec
cmp
mov
movsb
sbb
mov
lcall
repz
subb
xchg
js
xchg
in
mov
scas
push
call
push
sub
cmp
in
add
mov
xchg
pop
loopne
inc
rcll
cmp
les
push
jle
addr16
jle
mov
pop
mov
adc
lds
cltd
clc
mov
adc
rcll
sub
sub
cmp
loop
xchg
add
fildl
jns
lods
repz
sbb
pop
xlat
ud2
rolb
or
sbbb
jae
mov
push
xor
aam
mov
es
stos
dec
xchg
xchg
fidivrs
dec
push
int
adc
jg
jmp
outsb
fsubl
push
push
je
xor
stos
jo
subb
mov
pop
in
mov
push
in
mov
aas
mov
adc
rcrb
jl
in
sarl
adc
fisubs
test
fisttpl
push
bound
pop
adc
pop
sarb
stos
test
jg
popf
div
add
xchg
mov
mov
adc
test
test
dec
adc
std
je
dec
jmp
jnp,pn
shl
into
fdiv
push
pop
cmp
lret
daa
stos
pop
push
sub
lret
pop
cwtl
or
fidivs
push
inc
hlt
pop
decl
shll
mov
jg
testb
jg
dec
lahf
push
pop
js
lcall
push
int3
xor
push
sbbl
repz
lods
pop
sahf
mov
push
fcmovbe
or
in
jbe
sbb
pop
data16
xor
fiaddl
push
xchg
sub
aam
cs
jno
inc
jne
cmp
fwait
dec
test
rcll
jbe
push
xchg
mov
fstl
popa
ja
scas
das
mov
fistl
loopne
inc
sbb
enter
sub
inc
sbb
repz
mov
cmp
lret
mov
out
imul
cmc
xchg
inc
mov
xchg
mov
cmp
pop
addb
mov
test
fs
dec
mov
fwait
adcl
or
pop
outsl
repz
lods
push
repnz
mov
rcll
ljmp
push
shrb
testb
add
rcl
incb
je
sbb
xchg
adcl
cld
xchg
adc
add
addl
stos
cmp
fisttpl
mov
adc
lret
mov
and
or
addb
push
es
rdpmc
push
test
es
fdivrs
dec
pop
add
stos
fnstenv
lret
shlb
inc
jbe
mov
cmp
lods
jbe
cmp
jg
lret
mov
popa
xor
xorb
jns
push
xchg
xchg
inc
bound
push
fsubrs
ja
mov
sub
out
inc
out
test
mov
cmp
mov
jecxz
sub
pop
push
push
stos
out
mov
xor
bound
sti
sub
and
fcomps
outsb
add
pushf
push
cmpsb
imul
jnp
mov
xlat
mov
repnz
jg
jns
in
insb
mov
adc
sbb
lock
mov
fldenv
or
mov
add
mov
or
and
hlt
iret
dec
sub
mov
clc
das
dec
sbb
jnp
imul
cmp
jae
pop
lret
rolb
push
pop
adc
daa
push
filds
cmp
pop
mov
cli
cmp
mov
faddp
das
mov
sub
sub
fcoml
fsubrs
fstl
and
add
push
cmp
ficompl
pop
and
adc
push
adc
dec
jmp
mov
smsw
test
mov
pop
add
out
jecxz
pop
int
movsl
arpl
std
or
push
push
in
sbb
lods
and
xchg
addb
sti
sub
xchg
xchg
in
and
mov
xchg
test
lock
mul
lahf
push
in
push
dec
lods
fdivrl
inc
sub
mov
stos
shll
inc
jns
stos
popa
mov
nop
fs
pop
je
cmc
scas
cmpsb
mov
mov
jge
cwtl
jne
rcll
and
cld
pop
fstps
add
cmpsb
and
iret
and
in
call
sbb
rcrb
and
cmpsl
mov
insb
fs
mov
pusha
fnstenv
mov
leave
adc
movsb
mov
cmpsb
dec
push
repnz
jle
jp
push
adc
testb
or
dec
dec
fwait
mov
mov
cmp
xor
cmp
outsb
inc
push
add
push
sbb
mov
and
dec
mov
xchg
lds
cmp
pop
dec
cltd
ret
imul
lret
add
pusha
mov
mov
xor
mov
and
sbb
incb
cs
or
loop
dec
pop
pop
icebp
lock
popl
int
cmpsl
add
inc
xorl
testb
jecxz
sub
xor
push
jo
insb
fcomip
test
sub
mov
insb
lea
jno
mov
sub
gs
mov
ret
stos
das
pusha
jle
dec
iret
pop
jno
push
js
cltd
mov
dec
lret
xchg
push
xchg
jbe
dec
jo
test
mov
imul
mov
mov
addr16
mov
pop
dec
ljmp
cltd
test
sbbl
jp
sbb
das
arpl
insb
pusha
or
aaa
mov
add
call
cmp
daa
andb
cmpl
push
push
xchg
outsl
jo
cli
movsl
bndldx
pop
sahf
or
outsl
outsl
xchg
push
add
xchg
push
dec
sub
and
sub
add
les
pop
cmp
shll
sub
mov
test
movsl
rcrl
mov
sub
out
mov
fwait
push
sub
mov
into
mov
call
mov
pop
outsb
jns
jnp
hlt
jmp
pusha
fiadds
jne
stc
addr16
fldcw
aas
pop
and
movsb
mov
vcvtpd2dqx
inc
pusha
push
orb
popf
or
dec
mov
sub
mov
insl
les
sti
aad
adc
mov
jle
or
pop
push
shlb
aaa
movb
adc
pop
or
sub
bound
out
in
push
dec
lahf
pushf
or
sbb
int3
add
jecxz
mov
stc
jnp
sbb
or
je
insl
fbld
push
enter
stos
add
js
insb
and
inc
push
xchg
and
or
mov
shr
jecxz
int
rcl
and
pop
push
pop
mov
add
adc
out
dec
and
add
repz
jp
add
shr
cmc
js
test
imul
jb
sbb
lds
xorl
imul
xor
or
dec
push
cltd
imul
fisttpl
pop
jp
test
ja
gs
mov
lods
adc
inc
or
stos
jb
ss
fsubrp
and
call
std
imul
or
inc
adc
enter
insb
mov
adc
jmp
in
movsb
push
ja
jmp
lods
inc
outsb
adcl
cmp
repz
adc
inc
sub
std
and
cltd
adc
mov
idiv
and
add
arpl
or
fdiv
std
fstps
aas
test
ret
inc
ja
popa
popa
cmpsb
inc
push
lods
jl
jp
and
outsb
test
cs
mov
outsb
jmp
inc
push
sub
xchg
testb
scas
outsl
and
add
jl
repz
inc
xchg
ljmp
xor
push
out
cmp
cli
sbbb
int
aaa
test
stos
sub
pop
add
scas
test
imull
inc
mov
jb
dec
pop
mov
gs
loopne
addr16
cld
mov
iret
fwait
push
out
dec
sub
bt
inc
loope
push
test
test
adc
inc
xchg
dec
outsb
sub
insb
mov
dec
mov
dec
pop
imul
bound
mov
push
ret
mov
es
arpl
mov
pop
mov
inc
jmp
xchg
adc
push
insl
pushf
sub
insl
dec
mov
insl
add
pop
xor
push
pop
into
xchg
daa
or
cmp
jns
mov
inc
mov
jl
mov
packssdw
jl
cmp
mov
cltd
mov
testl
lds
xchg
sbb
jg
cmpsl
fcmovu
mov
jg
mov
cltd
dec
pop
adc
push
and
repz
loopne
mov
or
adc
mov
jp
push
push
cmp
popf
jbe
cld
shrl
leave
shll
push
mov
divb
lahf
add
les
leave
fs
scas
pop
xchg
mov
sub
xor
push
sbb
fs
nop
fsubp
or
jne
movsl
sbb
push
pop
mov
inc
pop
out
push
sub
xor
xchg
push
rclb
xlat
and
dec
mov
stc
jl
scas
cmpsl
cmp
jl
addl
in
jns
jns
sbb
mov
decb
inc
jg
iret
andb
and
outsl
popf
pop
xchg
shrl
dec
push
push
adc
xchg
mov
iret
inc
cmp
test
fcmovbe
int
stos
xor
pop
mov
push
std
lods
sbb
and
push
ljmp
sbb
fisttpll
adc
lock
dec
nop
push
inc
test
or
sahf
hlt
das
cmp
testb
add
mov
lret
in
in
insb
mov
mov
push
nop
add
mov
pop
lods
shlb
es
push
sbb
pop
cmpsl
repnz
and
xor
in
or
xor
jecxz
sbb
fiadds
scas
inc
dec
and
and
aaa
out
stos
call
dec
sub
daa
out
xchg
mov
xor
sahf
ret
test
loopne
mov
aam
fwait
mov
xchg
pop
imul
mov
sub
sub
pop
arpl
arpl
std
push
in
sbbl
jp
sub
es
adc
lret
call
add
test
xor
scas
in
shrl
inc
sbb
pop
mov
dec
enter
inc
adc
pop
push
cmp
mov
insb
mov
sub
fwait
xor
arpl
dec
adc
insl
mov
jae
fsubr
jmp
jb
testl
out
mov
popa
push
inc
cli
xchg
movsl
leave
aaa
cmp
repz
stos
pop
notl
dec
mov
cli
lock
aad
dec
xor
loopne
dec
xor
iret
fsubs
or
dec
aaa
adc
ret
sbb
sub
mov
fdivrs
sbbl
shrb
outsb
push
xor
mov
mov
and
shlb
rcl
dec
cwtl
hlt
mov
fcmovbe
pusha
arpl
enter
mov
pop
xor
sbb
and
sti
or
jp
int
cmp
lock
mov
lret
and
mov
cmp
lods
pop
sbb
std
gs
pop
mov
lock
push
jno
mov
inc
js
jnp
cmp
sti
inc
loopne
pop
sbb
ret
jae
xchg
or
mov
xlat
mov
in
bound
pop
inc
pushf
and
push
sbb
inc
xlat
jns
shl
mov
dec
iret
xchg
in
nop
inc
ja,pt
jle
gs
sbb
jle
mov
loope
xor
iret
stc
or
jbe
in
ds
jecxz
std
add
dec
mov
mov
imul
add
adc
push
jge
fimuls
aaa
cmp
pop
jno
andb
outsl
fistpl
mov
lods
mov
jb
mov
test
je
push
push
fdiv
and
addb
jns
mov
or
shrl
dec
sbb
push
mov
push
pushf
xor
imul
ja
movntq
sar
js
clc
inc
out
test
pop
call
adc
mov
push
jmp
or
icebp
sub
sbb
dec
adc
add
xor
sahf
icebp
xlat
jns,pn
faddl
mov
mov
arpl
push
jne
xchg
jnp
loope
jae
mov
fidivrl
xchg
push
pop
fwait
popf
lods
imul
push
jecxz
movsl
inc
gs
jbe
xor
in
pop
dec
enter
aas
pop
in
pushf
pop
push
mov
fsubrl
sti
in
jg
jmp
pop
in
jge
or
addr16
test
outsb
and
jge
adc
or
test
or
je
mov
aaa
cmpsb
inc
push
xchg
or
push
cmpsb
aas
xchg
clc
iret
adc
in
cli
pusha
lret
cpuid
in
jb
mov
bound
pop
lods
cmp
stc
sub
sub
push
mov
mulb
fs
into
outsb
xor
int3
fiadds
push
int
repnz
mov
inc
leave
lods
rorb
push
dec
inc
add
xchg
cmp
stc
push
test
xor
jno
jb
add
aam
sbb
sbbb
mov
das
inc
adc
rorb
mov
jecxz
movsl
jne
adc
push
xor
lea
sahf
sti
mov
scas
cmpsl
jmp
es
or
ss
or
test
das
dec
pop
lods
movb
out
sub
mov
dec
push
push
jb
cld
daa
mov
push
inc
mov
fwait
rcrb
adc
mov
jnp
xor
xlat
stc
inc
ficoms
xchg
or
cmpl
dec
pop
nop
xorb
cmp
mov
dec
cmpsl
add
repz
jae
mov
inc
scas
xchg
cmpsb
sub
mov
push
mov
and
mov
in
mov
fucomp
mov
xchg
aaa
shrb
repz
or
xchg
mov
pop
mov
rol
fdivp
add
stos
ret
jns
mov
fwait
cmc
inc
mov
add
repz
mov
fs
je
jmp
fsubl
ja
int
mov
xchg
sub
and
lea
or
inc
imul
in
cmp
sub
mov
hlt
es
cs
das
icebp
movsb
mov
lods
mov
cmpsl
jmp
stos
xchg
push
imulb
cmp
xchg
fwait
scas
inc
ljmp
xchg
mov
rcrl
aam
jge
jne
out
cwtl
jo
insl
sub
and
and
dec
pop
leave
mov
cmp
pop
mov
or
dec
jecxz
out
jmp
sbb
sarl
mov
push
repz
cmc
push
dec
fcomip
inc
jo
sbb
xorb
int3
or
xor
cmpb
addb
or
mov
pop
push
fcoms
data16
cmp
xorl
roll
pop
cmp
arpl
hlt
loope
jb
sbb
jle
adc
int
cmp
add
daa
push
and
mov
pop
testl
outsl
and
mov
mov
js
scas
add
sub
cli
sub
outsl
es
sub
fwait
imul
xor
dec
js
jl
or
loopne
sub
push
dec
add
mov
cwtl
adc
xchg
cmp
push
out
inc
mov
push
inc
and
pushl
sub
xchg
std
stos
add
mov
push
cs
add
push
dec
stc
mov
sub
mov
add
aaa
daa
aaa
arpl
cmp
sbb
outsb
sbb
ret
cmp
jge
and
mov
jg
jo
rolb
iret
sbb
sub
jns
push
ja
mov
ret
jecxz
xchg
pusha
lds
test
and
mov
push
dec
repz
fsubrs
mov
inc
or
push
bound
push
or
daa
adc
sbb
dec
lods
mov
cmp
dec
jno
dec
xor
cmpsl
fstpl
sub
jp
push
shrl
into
xchg
mov
add
loope
push
daa
pop
mov
repz
or
ret
cmpsb
push
in
xchg
mov
push
cltd
cmpsb
and
rorl
movsb
or
outsl
xor
sti
push
mov
xor
jmp
cmp
mov
lea
fwait
and
ret
je
sbb
lret
je
leave
xchg
aad
jb
call
test
pop
mov
push
push
movsl
dec
jnp
in
movsb
add
ret
out
inc
fnstcw
sbb
testl
rorl
loope
call
xchg
inc
clc
jl
lock
insl
bound
sub
jg
pop
sub
rcll
sub
ja
enter
ja
cld
sbb
fcom
and
sbbb
ret
mov
inc
es
mov
call
int
push
jmp
out
jg
cmp
fwait
rep
sarl
dec
mov
jbe
cmp
xchg
xchg
sub
mov
and
fcomp
mov
mov
cmp
jb
jb
bound
or
outsb
fxch
dec
mov
fdivr
push
mov
inc
push
loope
dec
dec
sbb
cmp
loope,pt
std
ds
sub
pushf
data16
sub
aaa
and
cs
mov
inc
sub
sub
into
fildl
cs
ret
xchg
inc
arpl
ja
fsubrl
pop
mov
add
mov
xchg
es
gs
mov
mov
sbb
mov
or
sub
sub
xchg
test
lcall
movsb
fstpt
push
sbb
inc
aam
movsb
xchg
push
ret
sub
cmp
mov
fwait
int3
mov
xchg
fiadds
push
into
mov
push
push
je
fstpl
push
pop
je
xchg
sub
push
repnz
or
push
lret
sub
push
xchg
mov
cli
ja,pn
sahf
insl
xor
xchg
cmp
cmp
mov
pop
xchg
mov
aad
xorb
xchg
adc
xchg
cmc
pop
push
outsl
jnp
xchg
shll
lds
lock
push
data16
outsl
mov
sub
decb
pop
push
int
cmpsb
jl
pop
ficomps
movsb
shlb
inc
test
inc
push
enter
ret
dec
pop
sub
add
or
xchg
sbb
sbb
jns
add
mov
push
xor
stos
cmp
mov
jbe
sahf
std
int
btsl
ret
repz
jp
cmpsl
lahf
inc
lods
insl
rorl
adc
movsl
mov
cmp
and
test
or
fnstsw
xor
xchg
sbb
jge
cwtl
and
mov
inc
lock
push
jnp
lret
jno
push
je
ljmp
iret
leave
and
iret
je
and
scas
cmp
adc
pop
push
jo
nop
popl
js
mov
pusha
test
jp
stos
inc
adc
or
jecxz
je
movsb
sbb
mov
jmp
push
clc
mov
scas
in
stos
mov
xorb
gs
mov
inc
mov
sbb
xchg
daa
sub
addr16
dec
xchg
stos
jmp
test
xchg
adc
jge
pushf
xor
test
add
lds
scas
loopne
dec
clc
int3
iret
sar
stos
out
xchg
cmp
add
cmpsl
setno
lret
jmp
sbb
jecxz
idivl
pop
add
pop
ret
scas
popf
or
loop
lods
fadds
mov
lds
inc
orl
stos
mov
and
adc
lahf
adc
cmp
jmp
js
xchg
cli
sti
cmpsb
dec
add
mov
mov
lock
mov
mov
lret
out
xchg
mov
push
or
dec
inc
loopne
sub
outsl
mov
shlb
movsl
pushf
movsb
mov
out
cmp
sbb
sti
das
lret
add
outsl
outsb
dec
push
arpl
frstor
cmp
enter
in
aam
mov
add
xlat
movsl
pop
shrl
push
insl
out
inc
jo
cld
ljmp
in
divb
jmp
or
cli
jecxz
mov
gs
loopne
sub
movb
rol
ljmp
sbb
cmp
or
stos
dec
or
sub
push
push
xorb
mov
hlt
mov
dec
hlt
shlb
pushf
adc
mov
je
sub
inc
push
push
dec
lods
fcomps
mov
xor
jno
mov
push
or
sti
add
pop
loop
mov
cmp
push
push
push
jg
mov
add
outsl
insl
mov
outsl
sub
imul
popa
push
pusha
push
ljmp
adc
ljmp
dec
jns
pop
cs
jge
sub
lods
int3
loop
cmp
xchg
cli
sahf
test
jnp
hlt
aaa
pop
mov
mov
mov
jmp
subb
js
xchg
mov
xor
pop
into
push
sub
sub
mov
movsb
cmp
pop
pop
jecxz
and
bound
scas
idiv
push
sbb
lea
inc
jmp
aam
jp
add
xchg
mov
mov
fisttps
roll
and
mov
movsb
lcall
arpl
fcomi
mov
sti
xor
sahf
adc
aaa
and
iret
inc
mov
out
xor
in
stc
std
int3
xor
stos
xor
jecxz
add
mov
sbb
sbb
pusha
sbb
inc
fwait
sahf
inc
cld
or
shlb
mov
or
add
sub
fcmove
jg
dec
adc
int
ja
mov
cmp
sbb
dec
mov
jb
cwtl
sbb
push
in
add
insb
ret
shlb
inc
es
popf
xor
cwtl
adc
sub
mov
addr16
add
mov
daa
outsb
in
ss
adc
movsb
add
cmpsb
mov
add
sub
test
dec
mov
int
mov
shr
ljmp
push
mov
mov
mov
pop
sbb
insb
sub
movl
xchg
or
adc
js
xchg
outsl
dec
push
sub
add
dec
loope
scas
pop
outsl
xor
mov
push
and
inc
cmp
inc
mov
adc
fcomps
outsb
cltd
cmc
xor
shl
xor
or
sbb
xchg
sub
lret
je
push
push
stc
inc
sub
mov
jg
out
cmp
adc
pop
cmp
test
cmp
or
and
mov
test
mov
dec
pushf
push
fadds
mov
xchg
dec
shrl
add
mov
rcpps
mov
cli
jp
stos
out
xor
xor
mov
lea
data16
ljmp
sbb
scas
push
mov
imul
rol
data16
mov
cmp
sarb
fsub
test
into
push
enter
fs
in
mov
sbb
les
in
xchg
fdivp
pusha
cmp
or
mov
pop
bnd
ret
xor
pusha
push
addl
xor
lock
addr16
ret
fbld
xor
andb
pop
cmp
ret
aam
adc
or
push
pop
xor
sti
and
loopne
test
pop
or
rcll
iret
inc
pop
stos
dec
int
pop
movsl
dec
push
add
dec
add
inc
imull
ja
sbbl
popl
xchg
movsl
push
mov
sbb
fsub
je
fsubrl
outsl
pop
xchg
lcall
sbb
outsb
sbb
add
inc
xchg
add
mov
cmp
inc
dec
adc
or
pop
daa
cmp
clts
int
jno
cmpsl
fst
lods
mov
in
adc
in
dec
pushl
fstpt
mov
xchg
mov
jmp
sbb
sub
mov
mov
vaddsd
or
dec
popa
or
sub
push
bound
mov
aad
and
jmp
shll
lds
pop
mov
jle
lds
jnp
mov
scas
inc
mov
xlat
scas
out
pop
enter
push
mov
push
pop
xor
adc
test
ret
sub
pop
fcmovbe
fcompl
jg
int3
dec
fwait
and
xchg
mov
dec
pop
aad
cmp
push
add
xlat
push
divb
adc
lds
call
les
lods
insl
pop
gs
dec
jno
inc
sahf
stc
into
push
inc
sub
ficompl
xchg
mov
inc
cwtl
idivl
movsb
push
pop
test
test
daa
cmpsl
ss
add
shl
fninit
addr16
pop
xor
stos
je
incl
push
in
cmp
test
cwtl
jno
int3
dec
int3
mov
dec
xchg
scas
cmpsl
ret
push
ret
leave
xor
sbb
rolb
bound
pop
loope
adc
cs
enter
xchg
xor
mov
movsl
lods
rcr
push
test
in
jmp
jge
mov
or
cmpsl
adc
outsb
iret
inc
les
push
je
ljmp
pop
mov
callw
rolb
xchg
mov
push
fwait
js
adc
add
sub
and
daa
out
pusha
loope
int
addr16
push
mov
inc
push
ret
lcall
xor
add
add
and
lcall
scas
push
sub
lret
dec
xchg
arpl
dec
cmp
or
cmp
in
xchg
shrl
pop
mov
jl
add
gs
add
push
test
or
cs
fistps
icebp
add
add
cs
popa
ret
test
in
test
cwtl
sbb
fildll
or
sbb
inc
sub
mov
in
int
xchg
mov
mov
out
les
into
jp
push
xchg
mov
cmp
test
fistpl
push
into
dec
mov
jmp
pop
popl
mov
push
sbb
push
or
jg
rclb
in
push
pop
ss
pushf
sub
push
jbe
mov
xor
push
or
jp
fdivp
cmc
and
clc
jae
mov
enter
mov
stos
cmpsb
ljmp
xchg
imulb
fdivrl
mov
pop
movd
pop
or
jbe
cwtl
jle
shll
mov
call
sub
push
xchg
xor
xlat
test
fwait
int
popa
rclb
xor
lahf
sbb
xor
pop
inc
fnsave
adc
dec
jle
push
sbb
dec
add
loopne
mov
aad
call
mov
inc
lcall
aas
outsb
or
rol
cld
rcrl
test
fistps
xor
pop
xchg
mov
cltd
loopne
or
pop
outsb
push
ljmp
fstpl
sti
push
jmp
adc
jge
sbb
dec
roll
testb
mov
out
jg
cmpsb
xchg
scas
xchg
cmc
mov
ja
imul
add
pop
pushf
jecxz
or
and
xchg
sub
int
sub
push
pop
ret
repnz
cli
inc
jl
jle
test
das
adc
enter
imul
jo
mov
jmp
xchg
out
dec
adc
cmpsl
pushf
mov
jb
dec
aad
inc
movsl
scas
clc
cli
shll
mov
imull
sti
xor
add
jb
imul
sub
inc
add
jg
das
cmpsb
push
add
mov
in
mull
lcall
xor
cmp
in
and
xlat
inc
add
or
cmp
push
jns
fcoms
jmp
sbb
cmpsl
dec
pop
mov
mov
fdiv
mov
jge
xor
cltd
mov
rorl
inc
shrb
rcrl
xchg
xor
adc
add
mov
xchg
mov
pop
sub
or
mov
rcrb
js
test
shrb
pop
mov
sbbl
push
movsb
sbb
int3
inc
ror
push
xchg
mov
fdivrl
push
xchg
or
add
cwtl
pushf
xchg
sahf
in
cmp
cmp
shrl
adc
xlat
xchg
sti
dec
dec
and
fcomi
sub
testl
xor
inc
mov
repnz
dec
stc
or
sbb
jmp
xchg
jno
xor
push
lcall
and
adc
insl
lea
ret
lahf
and
push
sbb
stc
movsb
cmp
xor
xchg
std
inc
cmp
loope
into
outsb
daa
pop
adcb
int
xor
adc
fucomp
jnp
mov
fstps
popa
jg
jl
xchg
out
inc
xchg
mov
cmp
cld
daa
aad
out
push
pusha
or
adc
mov
subb
mov
pop
imul
mov
ret
push
dec
fcoml
xchg
fcomps
add
mov
aas
ljmp
jmp
rcrl
shrl
ret
js
test
xor
sub
mov
xor
sub
scas
data16
aad
mov
jecxz
fisttpl
inc
sahf
mov
add
xor
sahf
imul
cmp
lods
fdivrl
push
mov
push
jecxz
insb
xchg
xor
ret
cmp
mov
leave
aam
es
stos
add
xchg
or
fwait
gs
push
sub
in
movsl
int
out
popf
or
int3
or
dec
push
out
fildl
mov
cwtl
and
arpl
or
stos
push
cmp
pop
xchg
cmp
push
inc
pop
mov
js
gs
inc
pop
mov
mov
es
loop
les
pop
push
test
mov
and
xchg
sbb
daa
stc
fwait
enter
adc
ja
mov
sbb
rolb
idivl
jle
scas
stc
test
ficomps
idivl
inc
pop
add
mov
fldt
fistl
frstor
jb
add
mov
inc
jle
cs
inc
jg
testl
jne
pop
jbe
jp
pop
shll
ss
cmp
sbbb
adc
int3
stos
xchg
dec
enter
cmp
xchg
jmp
mov
sbb
jge
sbb
jbe
imul
pop
xchg
or
roll
push
inc
out
negl
cli
clc
add
xor
or
lods
fmul
movsb
jnp
rclb
sub
out
push
sar
mov
rcrl
jp
clc
sbb
outsl
xlat
stc
leave
cwtl
lea
cmp
aam
jno
loopne
jns
xor
scas
push
push
sub
pop
fnstsw
cmpsb
fisubrl
ljmp
mov
ja
xchg
cmp
repnz
enter
inc
stos
inc
push
or
and
sub
adc
mov
jne
pop
or
loop
lcall
int3
cmpsl
clc
repnz
lahf
mov
jecxz
sahf
out
jb
and
test
in
mov
push
gs
dec
pop
sbb
lahf
faddl
in
jo
mov
subb
rclb
pop
aas
mov
shlb
lret
arpl
xor
test
push
xor
inc
icebp
insb
mov
push
in
stos
inc
pop
inc
rclb
xlat
ret
outsb
inc
mov
mov
pop
push
cmp
xchg
subb
and
adc
jne
mov
int3
cmp
cli
scas
xchg
xchg
pop
ss
pushf
and
loopne
fbstp
xchg
fmuls
mov
fwait
adc
or
and
pop
jmp
add
shl
cmpsl
jg
or
inc
rcl
test
enter
dec
es
dec
sbbb
mov
fsubrs
lahf
dec
jnp
dec
les
ljmp
outsl
nopl
dec
jns
xchg
inc
aaa
inc
xchg
int
cmp
daa
jl
jo
es
leave
icebp
cltd
out
xor
fwait
nop
adcb
cmp
pushl
stos
lahf
or
pop
jge
jle
or
loope
jg
nop
aad
sub
jne
mov
hlt
pop
aaa
ret
mov
pop
in
fmulp
xchg
dec
push
test
push
je
rcrb
adc
ljmp
out
dec
adc
movb
clc
pushf
push
sub
pushf
dec
dec
push
pusha
xlat
cmp
loop
sub
ss
test
jp
sbb
or
hlt
imul
inc
push
das
subb
sub
adc
push
xchg
std
mov
jl
gs
cmp
adc
and
ds
lahf
add
or
inc
adc
mov
std
subl
scas
shl
push
pop
sub
inc
inc
cwtl
cmp
fnstenv
push
in
adc
arpl
cli
scas
mov
xchg
push
xchg
pop
sub
lea
push
xchg
test
xchg
pusha
fnstcw
dec
dec
ret
add
lret
xor
popa
cmp
pushf
jbe
jge
and
push
adc
sub
fwait
push
int3
inc
andl
icebp
mov
inc
cmc
pop
cmp
mov
inc
ss
aad
lds
rcl
jb
mov
sub
mov
sub
ret
inc
dec
fmull
and
inc
or
and
mov
lods
rcrb
push
fsubl
fs
negb
adc
mov
push
mov
push
insb
jnp
dec
cmp
cwtl
je
push
xchg
lds
mov
int
lods
ljmp
leave
lahf
bound
in
loope
stc
adcb
xchg
push
pop
loope
jae
adc
scas
and
xchg
mov
cmc
out
push
lcall
mov
jnp
sub
sbb
orl
mov
aas
js
inc
jecxz
test
rcr
or
dec
mov
push
and
sub
ret
pop
pop
jp
mov
stc
es
stos
sarb
fistps
xchg
fbstp
push
int3
xor
push
filds
ds
sbb
mov
push
frstor
pop
ret
xchg
nop
ljmp
jmp
loopne
iret
xor
fdiv
push
loope
and
and
loop
lods
es
shl
loop
iret
cmp
sub
mov
test
jno
and
push
aam
mov
push
pusha
xor
dec
adc
clc
jbe
add
dec
and
mov
int3
xchg
pop
jg
sub
and
dec
mov
outsb
scas
cltd
ret
jne
sti
pop
icebp
jp
xor
jae
jnp
jnp
sub
daa
fst
fcompl
andb
sbb
ret
lahf
je
xchg
test
mov
into
cmp
lret
jns
push
test
icebp
mov
jecxz
loope
dec
jge
xchg
into
mov
imul
cmp
mov
addl
lods
mov
or
mov
ja
mov
jg
or
mov
inc
push
ja
fisttpll
daa
lds
hlt
rcrl
out
and
sti
icebp
idivb
loop
adc
fistpll
inc
rcrl
inc
adc
pusha
pop
add
cmp
pop
or
push
fmul
ja
test
lea
xlat
jae
pop
xchg
icebp
pop
ja
insb
xor
in
sbb
sub
mov
pop
stc
mov
jbe
cmp
or
inc
mov
fbld
pop
lock
cmp
xor
push
push
data16
in
adc
gs
int
pop
rcll
xor
lret
insl
inc
mov
and
out
stc
adcb
mov
adc
andb
jbe
lds
fnstcw
bound
stc
xor
push
cmp
test
jecxz
arpl
jno
inc
pop
push
mov
add
sbb
inc
xchg
and
jo
pusha
push
adc
andb
and
in
push
int3
sub
cltd
xchg
mov
insl
pop
sub
aaa
aas
pop
call
mov
jb
push
xchg
mov
push
sarb
fisubrs
pop
sti
xchg
jmp
call
xlat
enter
cmpsl
jg
hlt
sub
mov
test
dec
cltd
jae
xlat
outsl
sbb
addl
cmc
jb
and
mov
jg
test
jmp
mov
jmp
inc
insb
stos
ss
pop
repz
and
mov
add
dec
repz
sbb
cltd
popa
mov
test
es
xor
and
adc
cmc
or
subb
arpl
mov
pop
fimuls
hlt
push
jg
out
popf
mov
or
cmp
mov
outsl
shl
add
stc
mov
ret
adc
test
push
jmp
mov
lock
jle
enter
out
in
scas
inc
vcvtdq2ps
mov
mov
dec
imul
outsb
cmp
pop
xchg
std
icebp
loope
out
sti
dec
mov
insb
push
sbb
in
adc
mov
shll
lods
push
push
int3
pusha
push
inc
jo
cld
ret
loope
inc
cmp
enter
sbb
mov
das
stc
mov
aas
cmpsl
push
mov
out
mov
int3
xchg
test
mov
sbb
pop
jl
jno
inc
push
pop
call
icebp
out
das
pop
daa
cmp
icebp
fadds
sbb
push
stos
movsb
cmpb
repz
int3
idivl
jecxz
adc
orl
ret
stos
xor
pop
or
push
stc
aam
fldcw
push
test
mov
fldenv
std
mov
xchg
repz
xor
add
add
aas
inc
add
cmpsb
ja
out
pop
pusha
jmp
xor
out
xchg
xor
dec
fiaddl
mov
enter
jle
jp
inc
mov
leave
cmovge
nop
std
in
pushf
push
xchg
xor
inc
std
push
insl
lods
sysexit
imul
lock
enter
or
jne
cmp
adc
add
out
aaa
int
adc
cmc
nop
cmc
out
iret
mov
into
add
or
sub
dec
movsl
add
mov
cli
inc
dec
jecxz
jl
ret
popa
xchg
push
ss
lret
pusha
ljmp
cmp
mov
cmpsb
sub
jnp
mov
out
cmp
adc
rolb
in
stos
mov
fdiv
sub
xor
enter
pop
addl
or
out
dec
arpl
mov
shll
pop
cltd
jne
dec
lcall
pop
cmp
pop
outsb
popa
xor
sub
dec
jno
push
pop
mov
movsl
fimuls
and
sub
out
jae
push
push
test
pop
sbb
pop
sbb
sbb
out
rorl
nop
loopne
movsb
sbb
aaa
cld
pusha
inc
in
cmp
mov
push
test
inc
jb
in
int3
out
adc
in
pop
out
cmp
insb
push
xchg
in
fs
adc
or
push
inc
push
sub
add
mov
or
cmpsb
aad
jp
cmp
mov
outsl
mov
fcom
push
adc
inc
loop
inc
sbb
mov
loopne
or
push
sbb
mov
enter
sarb
jmp
lcall
scas
mov
movl
pop
aas
mov
bound
mov
push
aaa
xchg
loop
ljmp
lock
ja
xor
testl
push
jl
mov
cmp
daa
pop
mov
aaa
jmp
testb
sbb
or
subb
mov
andb
and
cmp
xchg
test
cmc
test
test
add
andb
mov
rcrb
cs
loope
enter
jp
jo
push
or
fstl
dec
into
push
xlat
pushf
loope
mov
testb
or
lret
pop
aaa
sahf
pop
jecxz
sbb
out
pop
iret
cmc
ret
scas
adc
jmp
shrb
xor
sahf
nop
js
popa
cwtl
inc
and
push
cmp
test
dec
add
in
insb
or
jg
jp
mov
cmc
incb
jb
sarb
mov
pop
jno
jno
jbe
inc
jg
pop
ds
shll
out
stc
cli
push
sub
in
xlat
sub
pop
insl
rolb
sbb
pop
adc
and
add
sbb
lds
ss
repz
fwait
mov
clc
cli
arpl
pushf
push
dec
lret
aad
cmpsb
int3
jg
jp
in
mov
inc
ss
addr16
iret
divl
push
leave
push
mov
dec
jecxz
jo
imul
add
aas
or
push
inc
sub
pusha
cmpsl
and
adc
cmp
ja
testl
pop
add
mov
mov
or
dec
shll
xor
movl
into
add
aad
shrl
and
adc
shrl
test
aas
lock
rorl
or
add
arpl
flds
loopne
test
fwait
pop
das
test
rorl
mov
cltd
ljmp
and
cmp
ss
sbb
dec
mov
aaa
std
dec
ss
jnp
xor
imul
cmp
ret
roll
xchg
or
sbb
std
jle
pushf
sbb
jb
mov
stos
mov
mov
es
mov
mov
sub
add
cwtl
jge
adc
cmp
fdivrs
mov
fwait
dec
cmp
push
call
xor
inc
inc
mov
aam
mov
push
fistpll
push
xor
out
pop
addl
fcomps
xchg
pop
aad
mov
mov
jle
in
and
sbb
sub
mov
mov
cltd
frstor
push
popa
add
in
neg
or
xchg
pushf
aad
cmpsb
ljmp
adc
pop
push
ljmp
loop
jge
adc
pop
and
mov
jle
popf
mov
loop
xor
jge
inc
push
ret
pop
leave
jmp
push
lret
insl
icebp
jb
mov
int
mov
pushf
sub
lahf
add
push
into
pushf
mov
mov
idivl
ds
leave
sub
cmpsb
jnp
icebp
jl
or
mov
xorb
cmc
out
xchg
xor
sahf
fistpll
cld
push
mov
mov
cltd
loope
push
or
mov
sarl
fucomip
ja
lret
sub
shlb
adc
xchg
jns
notl
adc
xor
imul
sub
dec
pop
inc
sub
jb
cmp
leave
xchg
xor
rorl
cmpl
dec
es
fldt
dec
cmp
out
lret
sahf
and
sub
insl
ret
adc
push
mov
mov
fistpl
mov
mov
sahf
ficoml
and
sub
das
fcomps
sub
out
imul
movsb
int
xor
rolb
mov
mov
lahf
dec
mov
test
pusha
and
sbb
je
enter
xor
stos
and
mov
xor
rcr
mov
jl
into
add
popf
inc
xchg
sbb
and
push
aas
mov
xchg
ffree
xchg
jne
push
xor
adc
xor
add
pop
adc
or
sbb
jg
mov
mov
and
int3
inc
push
lcall
push
mov
sar
push
pop
push
clc
std
mov
popf
rorb
add
or
mov
push
mov
lods
leave
sub
xor
pop
sti
xchg
ss
cmpsl
mov
out
icebp
pop
loopne
push
out
rcrb
loope
mov
cltd
shll
xchg
shl
rcl
push
roll
sbb
imul
fwait
xorl
sbb
mov
push
xor
xchg
fwait
pushf
nop
pop
dec
inc
fsubrs
adc
cwtl
xor
inc
mov
repnz
xchg
push
aas
lret
dec
arpl
mov
mov
out
jne
loop
hlt
out
and
and
int
test
aad
dec
and
adc
sub
jge
imul
jmp
adc
push
adc
mov
fmuls
out
inc
push
lret
mov
in
jbe
popf
mov
push
insb
push
arpl
mov
rol
push
jle
fdivs
cs
sub
jae
dec
cmp
pop
jae
aas
xchg
movsb
jle
imul
dec
mov
lahf
out
sub
sbb
cmpsb
xchg
aam
or
and
int3
dec
xor
adc
push
sub
ja
pop
dec
dec
inc
push
and
sbb
or
and
mov
movsl
or
lods
roll
outsl
jnp
pop
jb
inc
pop
mov
xchg
push
dec
xor
and
push
push
lret
iretw
cmpsl
outsl
mov
adcl
daa
mov
or
ljmp
imul
into
sbb
lods
push
sbb
push
jne
das
cmp
into
mov
jae
cmpsb
cld
xor
and
jle
xor
mov
inc
mov
mov
jp
jmp
hlt
rolb
push
xor
into
lahf
or
cli
ds
iret
ret
push
out
cmp
sbb
sub
add
cmp
xor
lods
xchg
ss
cmp
scas
mov
mov
xchg
mov
icebp
ja
jecxz
outsl
icebp
int3
in
arpl
rolb
es
or
push
push
xchg
in
aas
mov
sbb
std
scas
aaa
xacquire
hlt
push
xor
inc
mov
cmp
and
adc
cmp
ficoml
js
jg
xchg
sbb
add
mov
inc
mov
push
adc
and
repnz
cmp
mov
or
mov
cwtl
xor
xchg
jge
loop
add
movsb
fcmove
in
adc
aad
add
sbb
cltd
fisubrl
inc
mov
jbe
mov
jg
mov
dec
cltd
mov
fcom
addr16
mov
xorb
cmc
fucom
pop
push
mov
enter
inc
faddl
xor
clc
sbb
jg
loope
das
mov
subb
jns
psubd
test
aad
cmpsb
sbb
jb
mov
dec
pop
adc
sub
ja
xor
jb
and
mov
xor
adc
inc
scas
mov
enter
xlat
out
das
shlb
adc
jp
inc
xor
loope
sbb
fnstcw
js
adc
subl
xchg
das
jp
jl
fdivr
dec
push
pop
jnp
sub
ror
movsb
and
sub
cmpsl
shlb
push
popa
ret
fimuls
movsb
dec
and
cmp
push
ret
add
pop
sub
loope
xor
fidivs
xchg
jne
pop
jnp
push
mov
les
adc
in
mov
xchg
xlat
mov
repz
aam
lcall
jg
push
sysenter
and
push
aad
hlt
sbb
mov
test
jge
cmpsb
jge
lret
and
inc
pop
andl
jmp
and
cmp
add
lock
sub
mov
mov
add
ds
popa
pop
mov
popa
popa
sub
jle
push
cmp
adc
aaa
dec
lret
push
movsb
lea
loop
and
imull
sub
int
add
mov
int
pop
outsb
push
push
mov
inc
call
cmp
mov
adc
mov
pop
data16
fs
imul
mov
aad
inc
aam
push
inc
pop
push
ja
adc
push
xchg
arpl
into
sbb
adc
in
pop
lcall
aaa
bound
mov
mov
leave
lret
je
inc
push
insl
fcomip
aas
sub
leave
int
fcoms
aam
jecxz
push
lea
cli
int3
push
add
je
enter
out
jne
push
cmp
mov
xchg
stos
sub
xchg
push
jge
mov
dec
je
ss
clc
mov
out
arpl
xchg
xchg
push
and
ss
and
sbb
jbe
and
mov
mov
and
pop
dec
sub
add
fs
test
cmpsl
push
sub
and
call
mov
add
mov
ds
adc
xchg
pminsw
push
mov
add
in
push
subb
add
roll
aas
pop
mov
cltd
cmp
cmpsb
add
lea
pushf
mov
sub
push
ljmp
repz
pushf
rcrl
jne
popa
dec
jg
fisttps
enter
and
cld
mov
and
jae
jge
popa
fdivr
add
pop
xchg
xchg
sub
jno
or
jge
push
xchg
movsl
arpl
dec
xchg
pusha
std
pop
iret
fistpll
aas
in
gs
clc
fwait
shrl
ficoml
movsl
push
fldcw
dec
gs
fists
cmp
ror
lds
into
repz
xlat
push
inc
fisttpl
shrl
xchg
xor
rol
xlat
inc
enter
mov
xchg
jo,pn
jp
push
and
mov
inc
sbb
and
adc
out
in
mov
stos
inc
adc
xchg
adc
pop
hlt
mov
int
cmpsb
sbb
lds
fwait
js
sbb
push
xchg
add
lret
add
lods
stos
fwait
scas
clc
mov
mov
js
test
xor
xor
aaa
mov
mov
adc
mov
lods
mov
lds
jne
cmpsb
dec
cmp
fisubs
cmp
sub
int
mov
inc
fldcw
add
pushf
adc
mov
xor
add
xchg
or
xchg
movsb
mov
enter
aad
ja
push
les
mov
popa
cmpsb
mov
pop
lret
pop
aad
dec
pop
or
and
arpl
or
jnp
push
mov
in
or
sbb
shll
mov
cmp
push
xchg
cmp
xchg
sbb
subl
hlt
out
mov
mov
std
dec
jnp
cmp
pop
mov
ret
mov
jl
and
jg
and
cmp
xchg
push
jmp
lock
imul
add
sbb
mov
fsubl
hlt
mov
ss
loope
adc
dec
outsl
dec
leave
std
lods
pop
andb
subb
jae
cmp
sub
rolb
adc
aad
mov
mov
movsb
fisubrl
push
mov
and
or
insb
mov
pop
aad
dec
and
inc
stos
cmp
pop
add
daa
mov
lcall
call
mov
xor
and
mov
push
shll
repnz
movq
test
push
push
or
frstor
mov
sbbb
add
jl
jp
mov
lcall
lods
cmc
cmp
pusha
push
mov
dec
and
les
sub
xor
mov
fisttps
outsb
jbe
movsl
xchg
push
test
pop
sbb
nop
mov
stos
dec
inc
popf
dec
mov
cltd
xlat
add
lock
negb
frstor
mov
jecxz
and
dec
stos
arpl
mov
lret
rol
sub
cmp
cmpb
loop
add
in
jge
xchg
sbb
negl
pop
pushf
out
mov
cld
pop
xor
push
mov
inc
pop
add
xchg
pop
dec
mov
mov
dec
repz
push
adc
in
test
daa
pop
arpl
xchg
inc
mov
dec
mov
sbb
inc
mov
out
or
push
pop
lods
and
inc
call
xor
sub
insb
lods
test
mov
mov
fisttpll
loopne
sbb
mov
push
popf
shll
insb
in
loop
mov
clc
ror
add
in
push
or
iret
mov
aaa
mov
imul
ror
mov
dec
mov
ss
sti
out
shlb
mov
mov
sbb
out
mov
mov
add
ja
lret
adc
test
out
into
adc
lods
mov
in
clc
xlat
jl
daa
ret
rorb
addb
nop
cmc
filds
and
mov
mov
mov
shl
or
and
push
mov
push
fiaddl
call
fs
mov
and
bound
roll
jnp
push
clc
inc
je
ret
add
or
je
jl
cmp
add
jbe
lret
inc
push
loope
inc
mov
push
pop
cmc
push
xor
mov
xchg
clc
insb
cmp
dec
push
icebp
xor
cmp
fdivl
fcomp
dec
jnp
in
jnp
loopne
push
jbe
daa
test
in
inc
cmp
movsb
pop
andl
lahf
mov
dec
mov
jbe
xchg
insl
mov
imul
cmpsb
leave
daa
lahf
mov
fbld
mov
adc
lret
leave
and
inc
sub
jns
dec
sahf
push
mov
pusha
xor
dec
mov
mov
sub
in
jno
stos
push
push
xchg
add
loope
push
fadd
lea
sub
or
mov
leave
or
push
adcb
and
ja
and
dec
pop
es
add
cmpb
pop
jnp
imul
pop
notb
shrb
ficoml
mov
xor
jl
cmc
je
mov
inc
in
mov
or
scas
lret
cmp
inc
fsubr
aas
mov
pop
mov
jnp
mov
shr
insb
mov
add
sbb
xor
jp
pop
xchg
add
das
andl
inc
mov
push
sti
jb
test
inc
jmp
mov
pop
mov
xor
jle
stc
add
lds
mov
adc
aad
mov
xor
adc
arpl
push
loopne
icebp
dec
les
mov
ja
iret
popa
lret
pop
push
dec
int
es
jnp
jno
cmpsl
cltd
and
cltd
pop
pushl
int
cmp
adc
xor
fwait
add
mov
out
adc
fld
sub
jbe
inc
in
lods
mov
inc
dec
push
fldl
fdivr
gs
loop
call
mov
hlt
aad
or
mov
inc
js
jg
xor
pop
mov
jo
inc
fsub
xchg
lock
cmp
jmp
or
test
rcrb
ret
cs
mov
cmc
pop
or
jbe
mov
pop
popf
imul
inc
in
movsb
push
xor
jmp
push
rcr
push
cmpsl
div
inc
incb
xor
add
movsl
int3
iret
cltd
or
in
icebp
fidivrs
pop
push
mov
inc
ja
xchg
dec
in
arpl
insb
gs
pop
cmp
cmp
addr16
fistps
jne
xor
mov
call
xor
jnp
fdivs
addr16
insl
pop
loope
addb
dec
or
push
push
std
std
sbb
dec
push
lret
push
lods
sub
test
cltd
pop
cs
icebp
mov
rclb
xor
xor
jp
fs
add
or
idivb
int3
mov
fadd
int3
xor
inc
loopw
or
pop
xchg
mov
pop
cmp
jns
sub
xor
into
xchg
cmc
jmp
mov
mov
push
inc
insl
fcmovbe
adc
orb
cmpsb
in
bound
add
push
lods
iret
scas
inc
inc
xor
jge
scas
hlt
test
mov
in
in
cmp
jge
adc
push
inc
mov
retw
sub
scas
mov
stos
in
das
ja
movsl
xchg
lock
lock
push
jno
add
stc
and
mov
inc
mov
mov
filds
mov
ret
push
sbb
mul
xchg
jo
lods
rorb
pushf
xor
pop
je
test
lcall
add
cld
or
sub
mov
dec
or
pmuludq
pusha
movsl
or
add
and
ljmp
dec
sahf
sbb
loopw
or
dec
dec
inc
in
cltd
call
jno
rcll
adc
movsb
sub
adc
cmpsb
arpl
and
int
xchg
scas
sub
rcll
jns
ficompl
push
inc
loopne
rol
sbb
cld
inc
sbb
xchg
fldt
push
scas
lock
push
pushf
rcr
push
movsl
cwtl
dec
insb
and
cmp
insl
pop
mov
lds
sbb
mov
idiv
dec
mov
sbbl
push
cltd
ljmp
pusha
sub
xchg
aam
out
or
jne
ja
jge
aam
pop
adc
bound
mov
fnstenv
xchg
rol
inc
cmp
ficoml
scas
cmp
or
testb
iret
add
xor
loopne
xchg
subb
push
in
dec
das
mov
fs
aam
dec
xchg
push
icebp
inc
or
xor
xor
repz
push
sbb
stos
inc
jo
imul
int
call
ja
cwtl
lea
pop
jp
aad
mov
cmpsb
push
xchg
into
xchg
jecxz
imul
sbb
inc
adc
cmp
mov
mov
cmp
stc
negl
scas
out
insl
push
das
push
outsb
cmp
xlat
pop
clc
cmp
fistpll
je
mov
xchg
and
jno
int3
out
addr16
lret
push
mov
mov
lods
sub
sbb
ror
scas
adc
leave
jne
push
push
into
icebp
pop
mov
adc
daa
and
jecxz
xor
jge
add
iret
jns
lahf
jge
lock
aad
andl
repnz
sub
xchg
xchg
test
sbb
stc
out
dec
pop
lods
dec
mov
cmpb
lock
adc
shrl
mov
mov
add
push
adc
bnd
mov
mov
jle
mov
inc
xchg
pop
jge
mov
xchg
fucom
enter
add
test
xchg
xor
push
sar
sti
out
sub
cli
sub
int
mov
mov
add
fiaddl
sahf
push
xchg
aad
pop
outsb
dec
adc
fsubrp
jle
inc
mov
adc
fistps
lret
cmp
das
jle
loop
mov
or
adc
cmpl
mov
jnp
int
pop
lcall
out
push
xorb
sarb
or
imul
xchg
sbb
mov
dec
addr16
mov
and
adc
cli
in
inc
xchg
xchg
xor
cmp
cmpl
inc
push
adcb
mov
imul
js
repnz
sub
inc
dec
rcrb
sbb
imul
stos
sub
loope
xchg
addb
pop
cmp
repz
or
insl
add
xor
scas
or
and
je
mov
mov
std
dec
xlat
in
dec
pop
gs
mov
mov
jnp
fildll
nop
inc
inc
add
sbbl
and
xchg
add
imul
mov
pop
jg
push
dec
xor
scas
in
lods
fcoml
stc
sahf
std
xchg
jnp
mov
push
or
fwait
loop
movlps
lret
cs
add
inc
sub
in
mov
jl
sbb
push
cli
push
mov
pushf
jne
mov
mov
les
loopne
mov
and
or
test
add
cmp
or
inc
repnz
mov
sub
aad
inc
ret
insb
dec
in
out
hlt
arpl
in
mov
fucomi
jecxz
lods
dec
into
out
dec
cmp
inc
mov
add
jb
psrlq
push
adc
out
mov
aaa
mov
sbb
jo
cs
adc
xlat
push
mov
test
add
cmp
and
jae
sub
xor
mov
movsb
jg
je
imul
aad
js
shrb
test
popf
jbe
mov
or
xor
fmull
fxch
or
inc
sub
xor
aad
add
jge
push
mov
ja
repz
test
test
cmp
push
fdivp
xchg
mov
xor
xchg
sbb
sub
stos
ja
dec
ret
mov
pop
add
loop
outsb
mov
xor
mov
pop
outsl
jle
dec
pop
sub
int
int
cmp
bound
fbld
aam
jae
cmp
or
cmpsb
in
push
mov
adc
aam
jl
fsub
pop
jbe
dec
jo
test
pushf
lds
jp
adc
sbb
fcomps
adc
aam
jecxz
int3
cmp
stc
add
and
scas
hlt
lods
adc
mov
in
jb
cmc
movb
fstpl
inc
stos
xor
out
dec
jg
insl
orl
es
stos
stc
lods
jbe
xchg
mov
cmpsl
cmpb
adc
jbe
inc
xchg
xlat
iret
add
mov
mov
jnp
pop
add
mov
adc
mov
adc
roll
daa
loope
popa
das
push
pop
inc
loop
jl
xor
test
mov
call
xchg
repz
inc
das
jne
push
jns
jle
xchg
add
mov
in
stos
pop
pop
inc
lret
movsl
add
stc
mov
xchg
mov
pop
test
adc
out
and
ja
push
sub
cmpsl
outsb
fsubs
fstl
daa
mov
imul
mov
sbb
mov
push
iret
xor
es
xorl
test
lods
imul
pop
or
mov
jbe
or
icebp
cmpb
lods
mov
cmp
xchg
aaa
dec
shlb
idiv
hlt
les
jnp
orl
int
mov
or
call
mov
jge
inc
cltd
clc
mov
mov
mov
inc
outsb
shlb
push
jns
or
cs
or
in
ret
dec
dec
cwtl
pop
dec
fdiv
cmpsb
popf
jns
cld
inc
cltd
shrl
in
stos
pushf
test
or
outsl
cmc
jl
dec
popf
es
mov
cmpsl
push
and
cwtl
out
fucomp
mov
push
jne
fwait
ret
mov
adc
and
fimuls
adc
ret
mov
jg
or
sub
sbb
and
daa
inc
push
enter
xor
mov
jo
dec
in
xchg
xchg
sub
mov
clc
out
fs
mov
pop
insl
jl
loope
cltd
bound
addr16
inc
cmp
movb
or
fs
or
and
fidivs
jmp
and
ss
pop
adc
in
push
mov
movsb
fstpl
subl
outsb
fcoms
cwtl
das
pop
mov
cltd
mov
stos
and
or
inc
push
mov
xchg
das
icebp
jmp
mov
fs
mov
fdivs
push
pusha
mov
pop
negb
aas
xor
movsl
jmp
in
jo
shl
and
sahf
push
sbb
jns
movsl
or
sub
out
jg
xchg
push
pop
inc
and
mov
sbb
inc
fstps
ljmp
mov
scas
cmp
cmpsl
insb
cmp
mov
adc
cs
mov
pop
mov
cmpsb
test
inc
xlat
jg
xor
mov
aas
mov
push
mov
lock
jno
les
xlat
or
and
xor
std
inc
pop
ret
popf
jo
in
lods
shl
neg
push
cmp
xorl
jae
mov
sub
mov
scas
pop
xor
jle
sahf
repnz
push
mov
mov
jge
add
cmp
xchg
push
scas
inc
stos
popa
out
fwait
jl
inc
lcall
jae
fmuls
or
test
or
pop
pop
lea
add
pop
pop
adc
popa
inc
idivl
mov
dec
imul
mov
push
and
pop
xchg
fs
test
sub
addb
mov
and
cmp
pop
xor
or
fiaddl
adc
lock
jmp
push
test
and
aam
mulb
mov
mov
into
mov
inc
push
mov
cmp
in
rorl
mov
sbb
test
stos
push
mov
mov
dec
movsb
sbb
orb
pop
jge
fucom
cmp
cltd
dec
push
mov
hlt
ss
push
std
add
adc
movsl
mov
cs
add
adc
add
movsl
imul
out
cmp
aas
push
movsb
jbe
pop
sbb
jns
pop
sbb
sbb
sbb
popf
call
mov
mov
rclb
movsb
mov
jmp
jle
jns
aad
das
mov
mov
dec
daa
jae
pushf
jmp
cmp
adc
and
ss
das
lret
sbb
insb
push
movsl
cmpsb
inc
add
cmc
push
data16
jno
jp
sbb
orb
jmp
sbb
mov
ret
lods
add
mov
icebp
jle
loope
lock
andl
lods
push
mov
lahf
jp
pop
clc
pop
cmpsl
push
les
sbbb
lods
fistl
xor
lock
xchg
push
pop
daa
popa
xchg
mov
adc
lret
xchg
fisttps
inc
outsb
push
push
cmp
mov
jle
idiv
pop
movl
sahf
push
aad
mov
test
add
lea
aam
lods
test
mov
jp
fistpll
mov
jne
and
add
stos
or
lock
push
jg
ljmp
add
xor
rcrb
mov
mov
jbe
pop
and
mov
dec
aaa
mov
movsb
movsl
ljmp
es
aaa
mov
xor
ret
sbb
mov
mov
xor
jmp
inc
cli
lds
mov
and
fdivrl
cs
or
push
in
add
pop
jnp
das
ret
jecxz
jge
pop
fcomps
scas
into
and
addl
xor
out
or
jne
xchg
pop
test
xchg
inc
stc
sub
jge
clc
adc
cmp
xor
or
mov
mov
jle
scas
mov
dec
ret
imul
mov
leave
outsb
mov
jno
dec
mov
mov
fcmove
in
cmp
inc
push
popa
mov
mov
inc
pushf
fnsave
push
or
cmp
push
push
mov
aad
cli
jge
cs
cwtl
js
adcl
clc
xor
push
cmc
jne
jl
jno
jl
dec
push
or
xadd
xchg
nop
xor
lcall
lret
cmpsl
jp
int3
jecxz
repz
femms
popf
adc
pop
and
cli
cmp
fsubrl
and
fldl
xchg
inc
adc
xlat
sbb
les
mov
lahf
mov
sub
ficoml
mov
cmpb
inc
ja
inc
cmp
inc
fldenv
inc
test
ror
cmc
daa
lods
movsl
push
adc
sbbl
push
cld
rcl
mov
je
fyl2x
adc
pop
lahf
sub
push
and
mov
test
test
shll
mov
cli
adc
xchg
inc
icebp
aad
adc
insb
cmp
sub
in
test
xchg
jg
mov
loope
dec
push
jno
leave
test
daa
inc
add
add
fisubrs
pop
mov
lods
adc
jb
inc
sbb
sarb
sub
add
in
cmp
cmp
outsb
movsb
shrl
pushf
enter
cmpsl
jg
bound
or
sbb
out
subb
cmp
enterw
test
mov
push
jnp
push
test
inc
push
jg
aad
ficoms
imul
cld
fisubl
sbb
dec
sub
aas
scas
loopne
repnz
xchg
adc
ds
xchg
mov
outsb
xor
inc
sbb
jo
and
mov
xor
push
jle
adcb
push
push
popa
cld
jg
jne
dec
dec
cmp
out
inc
insl
orl
adc
dec
pop
dec
jl
pushf
jl
nop
ss
or
inc
stos
mov
jo
lahf
adc
dec
imul
sahf
xchg
inc
inc
out
test
out
pop
cwtl
xchg
in
push
repz
sbb
add
fnstcw
lcall
stos
mov
adcb
sub
or
in
xchg
into
mov
cmp
popa
int3
and
cmc
and
cmp
xchg
mov
pop
notl
push
pusha
and
mov
lods
daa
sbb
js
mov
mov
cli
xor
insl
cli
popa
and
adc
inc
xor
dec
test
xchg
inc
ljmp
sbb
mov
adc
lock
adc
mov
and
push
mov
inc
aaa
cmpsb
cmpb
fisttpl
lret
insb
jecxz
xor
mov
sbb
scas
rolb
cli
movsb
daa
sti
popl
pop
jle
sahf
out
push
arpl
push
xor
pop
sub
outsb
xchg
push
sbb
push
lea
and
push
addr16
ljmp
out
inc
aaa
cs
dec
cmpsl
jmp
test
add
xor
jno
subb
jno
xlat
cltd
lds
ja
loopne
dec
fdivs
int
je
imul
xchg
dec
loop
xor
pusha
or
push
cmp
mov
pop
xor
scas
out
addr16
jl
xchg
adc
push
jg
out
lret
xchg
pop
imul
xor
mov
xchg
and
sub
xchg
out
int3
xor
sub
popl
sbb
add
pop
add
or
pop
adc
paddusb
sub
or
imul
arpl
add
or
xor
testb
cmpsb
dec
ja
xor
dec
rorl
stos
lret
jne
cmpsb
cmpsl
loopne
mov
stos
addr16
out
inc
sub
je
and
lock
loopne
aaa
mov
aas
push
mov
pop
into
jae
enter
cltd
fisttps
nop
cwtl
mov
popa
neg
jmp
adc
push
lahf
jns
or
ficomps
xor
add
jl
or
mov
push
inc
fstl
sti
dec
nop
xchg
sbbb
pop
sbb
sahf
fmulp
dec
pop
jl
call
test
xor
jbe
jg
xchg
mov
ljmp
popf
orb
sbb
mov
popa
xchg
lcall
lods
pop
fcoms
mov
xor
testb
sahf
push
out
add
or
mov
idivb
sbb
push
dec
mov
mov
inc
sbb
orb
pop
outsl
push
popf
jns
fnstsw
jns
jmp
out
pop
call
sub
aad
popa
popa
aaa
or
std
push
jnp
push
cltd
add
or
fldl
jbe
shrb
jb
das
dec
mov
push
rol
sub
push
jno
adc
aad
jl
popa
jp
dec
or
lods
ja
lcall
cmp
dec
inc
das
cmp
xor
rolb
aaa
or
mov
out
rcrb
repnz
ljmp
pop
xchg
mov
mov
gs
sub
dec
fxch
xchg
sub
cld
prefetcht1
xlat
mov
nop
ljmp
mov
cmp
or
push
xor
and
add
add
vpmacsdql
imul
xchg
addr16
or
jo
xchg
or
or
adc
mov
outsb
inc
stos
pop
adc
cmpb
call
and
dec
mov
in
repz
subb
add
jle
xchg
dec
mov
mov
pusha
ja
orl
xor
inc
add
push
rolb
gs
jne
pop
jecxz
adc
mov
inc
pop
sub
insl
sbbb
jp
push
fmuls
nop
adc
sbb
xor
mov
pop
mov
xchg
fwait
adc
xor
scas
add
cmpsb
cltd
lods
mov
xchg
jmp
dec
jle
out
sub
jle
push
mull
out
fwait
push
xlat
out
adc
dec
xchg
sub
push
lcall
jbe
in
fidivrs
in
pushf
imul
and
std
int3
mov
pop
xchg
arpl
jle
mov
fistpl
scas
pushf
int
push
mov
test
and
outsb
pusha
std
mov
les
pop
sub
jnp
mov
loop
sub
xchg
in
and
jl
push
test
out
push
xchg
sub
mov
add
sbb
stos
or
iret
push
jnp
mov
loop
insl
jl
cmpsl
js
enter
mov
pop
stc
xor
rolb
lret
stos
pop
nop
fisubrl
aam
pop
adc
xor
inc
xor
popl
nop
pop
dec
and
inc
push
pop
xchg
pop
inc
lret
mov
loop
pop
dec
mov
xor
lret
or
xchg
repnz
lods
jnp
adc
xchg
sub
mov
mov
int3
nop
std
out
jno
mov
les
ret
sbb
add
add
sbb
jbe
repnz
cmp
pop
cmp
mov
pop
pop
scas
mov
add
add
dec
dec
jb
adc
push
mov
sbbb
sarl
and
and
rcrb
imul
loop
mov
sub
or
loope
aas
imul
pop
and
rorl
and
movnti
jo
push
push
and
jbe
ret
jo
add
jge
mov
mov
sub
xor
fstps
add
mov
inc
orb
adc
in
mov
aad
int
cmp
and
mov
xlat
nop
insb
ret
std
cmpsb
imul
outsl
push
and
push
aad
and
mov
and
je
xchg
inc
test
xchg
sbbb
lea
lock
xor
adc
jle
mov
clc
aad
adc
pop
cltd
sti
popa
insl
lret
test
sub
fstpl
mov
insl
ss
sub
sbb
fidivrs
push
in
ja
loopne
xchg
lock
mov
cmp
scas
popa
dec
orl
pop
aas
notb
add
fcmovu
jo
inc
imul
mov
cmp
stos
aad
pop
fcmovnbe
mov
push
pop
add
jne
sbb
aam
aam
push
or
mov
adc
fiadds
outsl
dec
sub
add
jb
pop
adc
stc
aad
xor
mov
mov
cmp
xlat
imul
push
jge
mov
xchg
add
in
mov
inc
les
push
jmp
xchg
int3
push
and
xor
xor
mov
cmp
ljmp
or
sub
js
jge
xor
pop
rcl
sti
loope
and
jmp
in
sahf
outsb
addb
cmpb
xchg
bound
cmc
lods
outsl
lcall
js
rcll
shrd
mov
jecxz
push
jg
iret
inc
daa
stos
dec
cwtl
xlat
cmpsb
pop
inc
or
cli
xor
inc
lods
inc
inc
out
xchg
inc
jae
jbe
out
jno
add
sub
cld
std
pop
add
loope
jg
pusha
pusha
daa
hlt
shrb
and
cwtl
adc
push
test
stos
add
mov
pop
jbe
fldl
xlat
jp
cwtl
cmc
mov
dec
out
sub
imul
mov
loopne
mov
popa
jno
aaa
repz
lret
int3
lcall
lahf
push
fwait
sub
jb
and
pop
dec
clc
testb
cwtl
insb
mov
cltd
sub
mov
adc
dec
push
push
inc
aam
add
jnp
xchg
mov
adc
sub
loopne
aas
aam
push
ret
addb
stos
inc
inc
sub
sub
jne
xchg
cmp
cmc
or
mov
ds
lods
cltd
ret
add
les
rorl
push
add
mov
int
sub
sbbb
or
or
lcall
dec
out
testl
dec
mov
mov
stos
jae
push
movsb
sub
stos
lods
imul
cltd
pop
sub
add
mov
insb
enter
nop
lahf
popf
int3
imul
push
jle
mov
push
push
call
push
xor
call
fcompl
jp
xchg
hlt
ret
cmp
mov
sub
movsl
jecxz
loop
stos
nop
pushf
test
dec
int3
adc
rolb
sbb
push
xchg
add
and
fsubs
ss
std
jae
xor
push
hlt
ret
sbb
pop
pop
xor
ljmp
jp
adc
push
add
adc
adc
lret
lret
mov
xchg
xchg
jae
cmp
mov
mov
inc
jecxz
jnp
rclb
cmp
mov
mov
cs
cmp
in
push
mov
mov
scas
mov
push
fwait
scas
jbe
add
jnp
std
and
bound
pop
aaa
sub
arpl
dec
or
add
arpl
dec
adc
popa
xchg
nop
or
bound
es
mov
dec
popf
xor
ss
cmp
in
fcompl
popf
mov
mov
test
int
movsl
mov
loop
test
outsl
addb
movsb
call
jb
out
push
pop
sti
shrb
dec
lods
sub
rclb
jp
or
sub
jno
andl
push
push
clc
sbb
add
dec
ficoms
lahf
movsl
adc
ja
cmp
test
pusha
mov
lcall
call
fists
incb
lea
jp
pop
push
ds
xchg
outsl
les
cmp
bound
sbb
les
push
add
loope
imul
idivb
insl
je
xchg
popa
lea
fildl
push
fidivl
fldenv
pop
add
mov
test
push
jb
fidivrl
cwtl
dec
lock
cwtl
sbb
cs
adc
or
inc
ja
dec
mov
cmpsl
inc
push
push
cmp
loopne
icebp
ffree
sarl
xchg
sbb
mov
dec
mov
in
and
aad
xor
ljmp
mov
int3
les
icebp
or
mov
test
js
sub
rcrl
jbe
cmp
movsl
lcall
adc
jecxz
jg
xchg
and
loopne
push
adc
inc
in
out
inc
xorl
bswap
cmp
addb
ja
xchg
fisubs
fistpl
clc
in
rcrb
stos
fimuls
shlb
jge
jns
insl
cmp
stc
push
push
and
in
mov
cmp
and
adc
pop
jecxz
sub
jecxz
data16
cli
sub
insb
cmc
ret
jnp
lret
test
lcall
dec
ss
mov
or
nop
js
cmp
cltd
in
aad
inc
mov
js
mov
sub
mov
dec
outsl
xor
and
test
mov
lret
add
shld
pop
push
leave
or
pop
xchg
mov
rorb
mov
push
add
sbb
push
outsb
lcall
stos
xchg
out
pop
fcoml
rorb
icebp
sub
std
lock
andb
sbb
jp
jecxz
push
dec
jno
push
scas
je
lock
xchg
adc
pop
rcrb
sbb
cmp
std
int
push
inc
rcrl
push
rorb
icebp
ljmp
sbb
aad
test
jbe
pop
ja
sarb
add
mov
jecxz
mov
fdivl
or
lret
jl
enter
push
std
sub
or
ja
pop
inc
xchg
mov
test
test
mov
jbe
xor
ja
mov
xchg
insl
adc
push
cmp
inc
xchg
popf
cltd
push
cmpsb
adc
or
loope
jne
icebp
add
mov
sbbb
sbb
fisubrs
jb
adc
shr
cmp
insl
jl
scas
shlb
inc
insl
jns
add
ret
jg
pop
cmp
shlb
mov
inc
jnp
les
jnp
jl
lret
iret
push
mov
jg
scas
das
mov
and
mov
movsl
sub
enter
adc
sub
mov
xor
push
sub
mov
lret
movsb
cmp
push
cmp
cltd
inc
and
out
jg
mov
movsb
arpl
movsb
out
mov
push
nop
ljmp
iret
mov
incb
mov
mov
pushf
xchg
pop
in
xchg
mov
ljmp
loopne
inc
pop
mov
xchg
mov
add
mov
jmp
sbb
mov
leave
gs
imul
push
das
pop
xor
rorl
fisubrs
test
loope
dec
jne
sahf
inc
cmpsb
test
mov
movsb
mov
push
aaa
scas
add
mov
sub
xchg
xchg
lods
mov
mov
xor
outsl
je
xchg
pop
sub
sbb
test
adc
orb
jmp
jp
mov
sub
sub
cmp
and
and
jnp
pop
fcompl
or
adc
sarb
mov
sbb
sahf
push
xor
sbb
aam
psubd
imul
insl
sub
in
insb
clc
add
adc
push
xchg
mov
int
and
mov
mov
jmp
cmpsl
fisttpll
imul
ficoml
cmc
orb
scas
test
push
pop
out
fidivrs
in
rcrb
mov
sbb
dec
mov
inc
sub
ljmp
loopne
mov
xor
cmp
mov
xchg
in
push
push
push
inc
mov
adc
inc
icebp
ret
xchg
daa
cmp
push
outsl
je
stos
fmull
xorb
shrl
adc
jmp
mov
xor
std
les
push
sbb
stc
dec
negb
or
loope
inc
push
sbbb
movsb
mov
xor
fcompl
and
sub
lods
stc
out
cltd
jl
mov
js
call
adc
mov
jge
sub
sbb
ja
jno
dec
xchg
cli
addr16
insb
jns
mov
sti
mov
inc
pop
push
and
bound
sub
pop
insl
and
jmp
int
xorl
dec
sub
fnstcw
mov
das
add
icebp
daa
xor
and
mov
mov
in
fwait
mov
fninit
pop
mov
jne
fdivl
imul
les
push
jbe
iret
pusha
loope
add
sahf
xchg
fsubr
pop
loop
lahf
mov
cli
jp
sub
cmp
dec
push
rolb
stos
mov
dec
repz
std
mov
insb
mov
mov
test
xor
pop
and
cmpsb
xor
cmpsl
testb
in
adc
inc
outsl
sub
inc
aas
sub
ja
daa
xor
pop
pop
mov
shlb
xchg
shll
xor
mov
mov
or
add
lds
enter
and
bound
inc
jmp
lret
adc
je
adc
jp
cltd
dec
dec
xchg
xchg
inc
movsl
out
enter
pushf
iret
push
insb
pop
in
add
jno
fdivs
mov
sub
cld
aam
in
mov
loope
pop
lods
mov
pop
outsl
or
mov
iret
inc
les
sahf
xor
add
mov
lcall
xorb
fidivrl
in
out
into
inc
inc
imul
cmpsb
sbb
imul
in
test
nop
dec
jl
ret
push
dec
xchg
outsb
dec
icebp
cmp
test
and
imul
push
fsubl
xor
cmp
adc
outsb
nop
jg
lods
push
sbbl
dec
mov
in
jge
xchg
ljmp
jne
daa
mov
lahf
and
push
lock
fs
icebp
jae
aas
sub
in
aas
and
dec
loopne
mov
dec
pop
xchg
add
in
stos
jp
xlat
int3
inc
adc
sbb
push
fmuls
ljmp
adc
enter
cmpsb
clc
xchg
pop
outsb
inc
or
jbe
test
into
lret
mov
jmp
hlt
sub
aam
pop
js
hlt
pop
dec
fmuls
into
inc
and
xlat
dec
lret
push
sub
add
pushf
ror
ds
and
fisttpl
cmpsl
jnp
adc
pop
sub
dec
mov
insl
les
jmp
dec
push
pop
inc
jl
pop
dec
mov
repz
pop
movb
jmp
jle
jae
lret
lock
out
xchg
mov
inc
data16
ds
and
sub
xchg
pop
shl
test
or
ss
fisttpll
out
lea
movsb
add
mov
mov
idivl
xchg
xlat
test
adc
test
add
cmp
jb
insl
mov
add
jnp
into
clc
mov
shl
push
nop
fs
jmp
in
pop
leave
cmp
jle
adc
popf
xchg
mov
mov
adc
push
lods
fwait
cmc
sbb
cmp
sti
pop
loopne
cmp
or
lods
popa
sbb
jns
mov
adc
iret
pop
rolb
xor
mov
insl
add
push
and
or
addl
fdivs
fdivrl
repnz
lds
push
ss
sti
movsb
fucomi
imul
mov
dec
out
cmp
sbb
sub
sub
lock
imull
fistpll
les
enter
inc
subl
test
in
ljmp
cwtl
cli
mov
cmp
push
rolb
or
std
pop
cmpsl
and
sarl
and
lret
mov
lods
jl
or
ret
mov
push
les
dec
jne
lcall
movsb
scas
mov
adc
loope
push
push
andl
xlat
xchg
inc
jp
inc
jg
rcll
mov
mov
cmp
rcrb
mov
xchg
or
in
add
or
movsb
push
fistpll
push
push
fnsave
xchg
fdivrs
mov
dec
gs
sti
xchg
insl
push
mov
xchg
cmp
jnp
int
cld
pop
dec
or
adc
push
lds
and
hlt
lods
mov
jo
idivl
and
cmp
fcomps
sbb
adc
or
icebp
sub
aam
ret
frstor
incb
mov
adcl
in
insl
jl
sub
mov
or
dec
push
lock
mov
jge
insb
xor
pop
cs
xlat
xchg
push
test
sub
adc
cmpsl
push
cmc
repz
pop
and
stc
stos
testb
dec
shufps
adc
mov
repz
shr
fxch
ds
cmp
xchg
inc
sbb
cmc
or
adc
movsl
adc
pop
sub
jge
dec
jp
test
lds
pop
jo
movsb
or
jl
into
js
push
pop
lahf
adc
es
arpl
jle
push
fisubrs
outsb
cs
and
mov
loop
cs
or
mov
sbb
cmp
or
mov
addr16
ss
jge
pop
xorl
out
loope
pop
insb
cld
mov
loope
pusha
or
xchg
sub
pop
std
in
mov
mov
cld
in
repz
xchg
add
outsl
sbb
sub
mov
or
dec
rorl
shll
xchg
mov
scas
fxch
cltd
xor
ljmp
cmpsl
and
data16
rorl
xor
dec
add
dec
lock
nop
sub
cmp
cmp
cwtl
cmp
addr16
imul
cltd
ror
addr16
mov
sub
dec
mov
add
sbb
imul
pop
mov
pop
ljmp
inc
addl
adc
sbb
sub
or
out
xchg
jne
filds
inc
jo
dec
ss
fldt
mov
push
mov
arpl
pop
shll
sub
dec
in
mov
mov
pop
ja
or
cs
xchg
mov
lea
push
clc
xlat
fbstp
pop
dec
xor
jmp
sub
xchg
data16
push
cltd
popf
repz
rcll
or
imul
in
scas
jo
pop
dec
push
out
adc
sbb
jg
cmc
movsl
pop
popa
out
int
mov
movsl
push
adc
xchg
fisttps
in
sti
and
rorl
xchg
popa
xor
lcall
adc
mov
pop
pop
rol
daa
in
ja
add
imul
sbb
push
loope
push
pop
sarl
aas
mov
mov
into
fiadds
scas
loope
ss
add
call
pop
shll
push
aam
sbb
xor
out
push
std
push
in
mov
idiv
cmpsl
xor
inc
sub
bndldx
aaa
das
jg
pop
loope
xchg
pop
mov
clc
cmp
pop
jns
sub
mov
popa
mov
rcrb
fstps
sub
mov
jbe
dec
pop
xlat
mov
je
outsb
mov
xchg
mov
inc
jne
rolb
xchg
pop
or
jg
and
movsb
adc
push
sbb
inc
add
push
test
mov
out
pop
insb
adc
jae
hlt
into
push
inc
xor
fldt
out
sbb
push
js
daa
adcb
adc
adc
push
mov
sbb
test
mov
mov
mov
das
cmp
jbe
sub
sub
adc
ret
inc
je
dec
cmpsb
adc
xchg
dec
maskmovq
negl
sbb
je
movsb
mov
or
data16
mov
cmpw
iret
pop
es
mov
jmp
insb
popa
in
in
clc
xor
mov
push
cs
xchg
int
mov
or
xchg
movsl
and
pop
aaa
xor
repz
pop
fnstcw
out
in
rclb
pop
ficoml
movsl
xor
in
sbb
cmp
sub
stc
mov
inc
ds
sbb
shl
cli
sub
in
push
outsl
jns
dec
pop
adc
push
mov
mov
ret
jmp
or
ret
test
xchg
jle
push
inc
xchg
xchg
jp
mov
jp
or
aas
push
scas
mov
xor
icebp
cmpsb
aad
dec
pusha
bound
lcall
fs
xchg
hlt
dec
andb
and
adc
mov
jl
loop
xorb
xchg
xor
stc
aaa
push
mov
adc
iret
bound
out
cmp
inc
mov
jmp
xor
adc
pop
mov
adc
or
arpl
sub
xchg
mov
dec
jg
enter
or
pop
cmpl
ffreep
bound
lods
mov
scas
andl
push
dec
test
sbb
xchg
sbb
lret
xor
mov
and
sub
jl
test
jge
ret
lock
lcall
dec
loopne
mov
arpl
js
fnsave
shrl
ret
jl
aam
jp
cmp
rolb
xchg
shl
fiadds
dec
in
test
inc
mov
sub
call
and
mov
sbb
push
mov
aaa
pop
sbb
clc
inc
mov
mov
mov
mov
dec
mov
add
jge
jecxz
scas
jae
insb
add
fdivr
mov
int
jmp
out
cltd
iret
xchg
mov
lea
rcll
sub
ficompl
sub
mov
or
mov
sbb
in
sti
rolb
call
sbb
insl
xchg
push
xchg
mov
pop
or
enter
inc
aas
xchg
inc
jae
nop
int
lahf
lahf
inc
push
pop
std
enter
mov
imul
jne
ljmp
mov
adc
pusha
adc
and
mov
and
jae
xor
or
lds
xchg
movsl
mov
clc
lea
cmpsb
xchg
jecxz
xor
jmp
mov
cmp
xor
add
inc
jbe
adc
and
push
rclb
out
mov
ret
adc
sbb
pop
mov
imul
into
adc
jae
dec
cltd
cwtl
pusha
popa
or
mov
or
add
mov
rcrl
push
cs
lods
std
pop
sar
sub
dec
and
repz
icebp
add
cmp
fldt
lds
or
add
subl
es
std
bound
jae
div
mov
xchg
cmp
test
mov
fisttps
dec
mull
insb
fnstcw
stc
lock
lds
add
cmpsl
lret
cld
shl
in
cwtl
clc
mov
lcall
lods
mov
dec
and
add
das
out
fwait
dec
ljmp
xchg
sub
sub
ljmp
bound
aad
decb
and
out
cmpsb
jle
pushl
lret
ds
jg
roll
sub
lods
xor
cmp
cs
dec
loopne
shll
dec
loope
in
and
out
mov
jge
fcompl
dec
rclb
adc
xor
jo
test
cmp
icebp
mov
sbb
cs
cmc
pop
in
and
xchg
ja
xor
js
mov
into
aaa
or
xchg
lds
out
jnp
fwait
mov
jbe
mov
and
mov
mov
or
jb
ss
adc
add
imul
inc
push
aas
shlb
push
pop
xor
xor
push
xchg
lods
test
and
sbb
and
out
xor
jae
into
cltd
push
jle
icebp
jge
in
mov
orb
or
xchg
js
mov
adc
pminsw
push
xchg
add
adc
xchg
ja
mov
adc
jp
adc
out
in
cmp
orl
mov
lods
cmovl
mov
pop
popa
mov
loope
adcb
outsb
icebp
das
mov
add
in
xor
dec
hlt
lock
push
cwtl
int3
mov
out
lods
push
cmc
shl
dec
add
icebp
mov
push
jbe
fwait
and
mov
cmp
cmp
shl
pop
push
xchg
inc
mov
sahf
clc
mov
push
jns
inc
lods
mov
dec
and
xchg
pop
push
aaa
dec
cmp
pusha
lret
test
xchg
push
pop
sbb
xchg
or
xor
fisubrl
pusha
pop
mov
aad
data16
inc
std
mov
cmp
pop
add
jo
jge
xor
inc
lahf
pop
push
div
jne
and
mov
call
pop
fmulp
fisubrs
orb
sbb
fldl
mov
pop
incb
rcrl
scas
push
into
scas
and
jl
cmp
mov
cmc
in
lea
shr
and
jl
js
jle
loop
mov
and
mov
and
call
xlat
imul
in
ss
jg
pushf
cltd
es
and
inc
hlt
mov
mov
mov
bound
pop
adc
dec
cli
mov
mov
loop
fs
adcl
pushf
push
add
cmp
and
inc
filds
aas
cmp
test
fdivrl
inc
jge
lea
adc
rcr
pop
mov
mov
ja
pop
pushl
pusha
push
jnp
rcll
sub
pusha
add
loope
pop
mov
push
movsl
insb
xor
mov
stos
push
inc
or
pop
pop
adc
mov
scas
push
mov
ret
sbb
xor
lds
push
out
ja
das
jl
lods
in
xchg
lock
push
mov
mov
hlt
jl
pop
sarb
jp
xor
scas
and
sbb
inc
adc
or
iret
incb
push
out
push
lahf
or
cli
inc
movsl
sbb
mov
fs
std
movsl
mov
pop
xchg
div
cmp
in
mov
dec
loop
ja
lock
mov
add
loope
xor
mov
or
dec
mov
add
sub
jns
adc
mov
dec
jne
test
adc
int3
aam
insl
addr16
sbb
dec
lcall
test
push
fwait
pushl
push
xlat
xor
jmp
xor
bnd
mov
sarl
hlt
mov
inc
test
es
push
lock
jl
mov
lret
fcmovne
xchg
sub
ljmp
jns
push
jmp
bound
push
test
addr16
cs
adc
jnp
pushf
int
sbb
mov
jecxz
std
stc
fs
lds
out
lcall
sbb
daa
daa
push
adc
cmp
pop
jg
sub
add
inc
adc
pop
jecxz
xor
mov
sbb
fildl
pop
out
mov
xor
in
add
xchg
dec
fmull
in
out
fsubrp
out
push
sub
insl
xor
loope
mov
aad
and
xchg
sub
outsl
cmp
orl
jno
mov
mov
mov
in
jg
jge
xchg
orb
hlt
push
clc
loopne
jecxz
jno
xchg
cwtl
inc
and
pop
int3
int3
push
mov
mov
ret
inc
loop
mov
pop
movb
adc
inc
clc
sub
jg
enter
push
mov
div
lods
adc
xor
out
sub
or
in
cmpsl
lea
or
rcr
outsb
lds
add
mov
sub
loopne,pn
xor
loop
gs
dec
fwait
out
test
mov
pop
lods
fistps
mov
in
inc
inc
pop
sbb
and
js
popa
mov
sti
out
fnsave
out
lods
sarl
xchg
mov
shl
or
cmpsl
mov
popf
ret
inc
notl
xchg
push
inc
sarl
sbb
lahf
orl
xchg
and
jmp
iret
call
sbb
out
mov
aam
sbb
cmp
mov
adc
jns
sub
jns
icebp
scas
sahf
xor
incb
add
cmp
fstl
arpl
adc
lock
das
mov
loopne
sbb
push
aas
xchg
bt
adc
xor
mov
add
mov
push
push
sub
cmp
popa
jge
lods
imul
enter
addr16
sub
stc
add
clc
lea
mov
fistps
xorb
out
dec
std
xlat
out
cmpsb
inc
push
lret
xor
sbb
pop
or
xchg
loope
js
clc
inc
das
sbbl
call
orb
sbb
jmp
jne
mov
mov
adc
and
into
jb
mov
xor
push
push
jae
scas
in
enter
adc
jle
add
lea
mov
inc
in
mov
repnz
int
inc
jecxz
ljmp
fistps
mov
sub
mov
mov
mov
es
mov
popa
sub
inc
icebp
movsl
testb
xchg
pop
cmpsb
fstpt
xor
adc
dec
and
repz
xchg
and
jmp
jns
daa
fbstp
xchg
mov
sbb
test
mov
jns
and
jb
inc
shlb
ljmp
lods
adc
sub
mov
cmp
clc
cltd
cmpsb
test
mov
add
or
lds
adc
jno
lea
push
scas
out
jg
push
icebp
mov
enter
push
mov
je
rolb
in
mov
pop
bound
pusha
dec
or
mov
inc
jb
aas
sbb
xor
arpl
outsl
jecxz
dec
lds
cmp
aas
arpl
addr16
and
mov
popf
loopne
loopne
add
xchg
xchg
xchg
inc
sub
fisttpl
stc
rorl
mov
out
iret
nop
dec
xor
push
xor
jne
mov
xchg
into
fisubs
gs
rclb
inc
fstpt
mov
daa
jp
dec
jbe
ja
clc
imul
cltd
cmp
dec
jle
mov
xchg
lahf
pop
cltd
js
lds
xor
jns
xchg
mov
shr
push
inc
jecxz
sbb
jno
jmp
jns
rcrl
xor
mov
inc
cwtl
push
mov
push
pop
jp
sarb
push
fcom
scas
jecxz
inc
sbb
hlt
pop
dec
lods
mov
jb
adc
pop
mov
xchg
shrl
xor
je
push
sbb
fcomps
outsl
fwait
xor
jg
sahf
mov
pop
inc
mov
lds
jno
sahf
cmpsb
fadds
xor
icebp
jno
fnsave
xchg
jmp
sbbl
inc
push
rorb
sbb
add
push
xchg
sub
jle
in
sub
repnz
adc
sti
pop
cmp
pop
aas
call
std
hlt
jge
mov
cld
fcomip
bound
xchg
jnp
cld
adc
bound
out
scas
mov
sub
sub
rol
xor
sbb
add
or
xchg
out
cmp
xchg
loop
imul
fdivr
sti
imulb
xchg
jmp
ss
int3
add
sar
or
cs
movsb
lret
push
lahf
sbb
jae
insb
dec
nop
push
mov
mov
fists
lret
sub
pop
out
mov
js
pop
and
push
push
fldcw
rcr
sti
fcoms
jns
js
addps
inc
enter
mov
cmp
mov
es
xor
inc
mov
and
loop
cld
into
mov
pusha
and
jnp
sub
icebp
push
cmp
pop
cmp
inc
enter
sar
test
push
int
sbb
or
push
int3
xchg
pop
mov
mov
adc
xchg
cmpl
imul
jns
loopne
pcmpgtd
in
xlat
push
sub
fcomi
aad
push
adc
pushf
jnp
hlt
psubsb
movsl
test
rolb
and
xor
jecxz
sub
cmpsb
adc
cmc
pop
icebp
or
jp
and
pop
shrb
jns
nop
jne
or
cmp
stos
popf
out
push
cmp
cld
or
popa
negb
into
bnd
das
lcall
repz
jp
loopne
shlb
jecxz
stc
test
mov
sub
orl
shlb
dec
jae
mov
xor
xor
mov
mov
jae
sub
and
pop
pop
jecxz
ficoml
shrl
je
imul
repz
dec
pop
mull
mov
lods
leave
push
adc
cmpsb
push
sti
arpl
push
dec
out
mov
icebp
pop
roll
push
xchg
in
and
adc
fcom
xor
sbb
nop
bswap
adc
add
das
and
adc
cmpb
addr16
xchg
add
lods
andl
xor
mov
cmc
sahf
inc
sti
aad
mov
sbb
push
daa
inc
mov
les
mov
xlat
jecxz
scas
mov
addb
jecxz
out
stos
insb
push
les
scas
into
push
add
and
xlat
cmp
insb
and
pop
outsl
pop
push
ret
add
in
sbb
xchg
mov
stos
mov
push
les
adc
add
imul
les
nop
fs
aam
pop
or
mov
mov
fstp
test
xor
pop
push
out
mov
jno
xchg
fnstenv
push
adc
icebp
gs
inc
push
inc
clc
jmp
pop
jae
add
inc
dec
daa
xchg
sbb
mulb
mov
xor
loopne
xor
test
mov
jl
push
mov
fidivs
stos
push
jbe
add
inc
xorb
push
repnz
std
mov
mov
add
jge
mov
rcrb
insl
sub
rorb
ret
or
repnz
shll
pop
or
cmp
mov
insb
or
xor
push
xor
imul
mov
pop
lret
and
sbb
sbb
leave
sahf
inc
or
xlat
dec
jbe
xor
push
jmp
dec
jo
clc
pop
jp
mov
jns
or
and
andb
pop
jecxz
fistpll
pop
pop
mov
and
xchg
cmp
or
es
subb
pop
pushf
ret
or
sub
stos
xchg
fs
stos
sub
popf
add
xchg
and
mov
pop
cmpsb
out
frstor
xchg
inc
adc
pop
pop
xchg
ss
pop
mov
std
gs
push
sbb
popa
cmp
push
loopne
inc
inc
ja
xchg
pop
insb
lods
stos
jecxz
xchg
jne
outsl
outsb
jnp
mov
inc
cltd
rcll
inc
jp
loope
xor
or
fisttpll
mov
imul
dec
xchg
xchg
pop
repz
cmp
mov
ja
sbb
inc
sbb
xchg
jle
lret
adc
addl
mov
repz
sub
dec
jmp
arpl
jbe
mov
dec
xor
int
push
inc
push
jno
push
in
pop
mov
jne
fidivrl
or
mov
pop
jbe
lcall
imul
aaa
inc
outsb
into
cmpb
mov
adc
nop
xchg
test
rcl
xchg
add
cmp
jno
jne
imul
xchg
xchg
jmp
std
inc
and
cmp
pop
ljmp
push
cmpsl
xor
mov
add
mov
std
pushf
test
js
mov
pop
mov
dec
xchg
mov
in
xchg
in
mov
mov
jmp
movsb
push
cld
sub
mov
push
into
fs
pop
in
jno
jp
jge
test
fiaddl
xor
push
les
jge
push
sbb
xor
ss
jge
ds
jmp
pop
add
add
ret
dec
mov
repnz
pushf
push
lret
push
data16
mov
xorb
sahf
cmp
inc
push
sahf
jbe
fisubs
cs
dec
test
mov
and
push
lods
adc
adc
sbbb
inc
xor
test
lods
int3
movsb
or
lret
clc
mov
cs
fdivr
subl
mov
sub
fbld
sub
sahf
outsb
push
das
jne
adc
xor
arpl
in
push
sbb
cld
add
jae
fucomp
and
imulb
add
shlb
sbbb
call
or
adc
xlat
lods
cs
sbbb
orl
rcl
hlt
push
aam
fldenv
ret
out
call
xchg
int
lahf
xor
pop
xor
cmp
mov
loopne
mov
clc
jp
sub
fwait
push
xor
cmpsb
mov
mov
ja
mov
jg
cmp
outsl
mov
cld
mov
pop
into
gs
jge
ja
out
cmpl
clc
daa
ljmp
mov
out
jecxz
mov
out
or
int3
xor
je
cmc
leave
inc
mov
fwait
mov
aam
inc
mov
or
or
popf
leave
aas
pop
and
and
or
add
jae
fsubs
xchg
mov
ss
nop
xchg
mov
mov
and
std
xor
imul
xchg
repnz
sbb
popa
outsl
out
add
stos
rorl
loopne
lods
imul
xchg
sub
sbb
inc
sub
aaa
aaa
enter
out
pop
xchg
sbb
dec
xchg
jmp
repnz
cmc
mov
icebp
leave
lahf
xchg
aas
jns
bound
dec
sbb
and
scas
push
cltd
adc
inc
out
pushf
and
in
addr16
mov
xor
pop
sbb
loope
inc
or
dec
loop
sub
dec
sti
inc
mov
lock
clc
loop
pop
imul
pop
mov
and
adc
leave
stos
lret
stos
enter
mov
dec
jno
jg
iret
stos
aam
or
xchg
dec
ss
movsl
das
jge
std
pushf
pushf
pop
jge
stos
dec
xor
popf
test
stos
jmp
lret
cmp
and
inc
mov
out
sub
push
jle
adc
xorl
jge
daa
int3
ficompl
inc
jo
aad
mov
adc
vmovss
popa
jno
outsl
jle
sub
sub
inc
in
add
and
pop
shll
xor
ret
clc
pop
fs
fwait
rolb
mov
inc
movsl
stc
repnz
dec
jl
cwtl
mov
xor
into
sub
mov
cmp
lock
leave
cmp
pop
mov
push
cmc
cld
int3
and
sahf
int3
call
fistpl
or
ret
add
fidivs
shll
mov
xchg
pop
and
lds
cmp
lret
jmp
popa
ja
sbb
dec
ds
add
ljmp
jo
outsb
add
push
mov
in
jle
push
lahf
icebp
out
mov
rcll
mov
imul
out
xchg
push
sub
lcall
repz
jge
dec
dec
mov
jo
in
xor
loope
mov
dec
or
jnp
mov
inc
test
mov
pop
inc
fisubl
dec
cmp
sub
popf
and
cmpsb
lret
test
aaa
scas
div
lock
xor
mov
dec
mov
pop
mov
mov
movsb
sub
mov
imul
dec
es
or
rcl
dec
movsb
jp
ror
mov
lods
orl
add
fmull
inc
add
add
out
inc
dec
inc
outsl
xor
shr
mov
ljmp
ds
cmpsl
cmp
xchg
test
sbb
roll
mov
sub
addr16
push
add
out
mov
shlb
xchg
push
cltd
dec
pop
adc
rorl
addl
repz
mov
nop
fadd
push
mov
inc
pop
fdivs
jmp
pop
pop
call
xchg
push
jbe
sbb
ffreep
mov
or
sbb
pop
push
insb
les
mov
or
jae
outsl
cmp
xchg
or
jne
cltd
xor
push
inc
push
mov
cmp
imul
or
aaa
inc
inc
in
add
jp
mov
out
std
mov
testl
movsl
sbb
fcoml
mov
addr16
inc
add
add
data16
adcl
mov
or
or
hlt
push
inc
adc
std
negb
in
adc
dec
mov
sbb
jge
xorl
ds
jecxz
inc
xor
jno
scas
in
scas
jns
in
mov
call
push
movl
lcall
out
les
fistl
loopne
pop
xchg
or
mov
ret
mov
add
frstor
xchg
xchg
add
test
push
adc
adc
lret
pop
rorl
jo
leave
shrb
mov
and
sti
mov
cmp
and
jbe
in
mov
adc
jnp
clc
leave
adc
mov
int
imulb
mov
or
push
lods
pop
mov
loop
inc
mov
sbb
sbb
sbbb
fsubs
mov
or
fdivs
mov
out
mov
fmul
xchg
xlat
repnz
sbb
iret
xchg
dec
test
push
push
cmp
jb
cs
shlb
fs
and
add
mov
xchg
into
pop
ja
push
or
jge
sub
rcr
stos
pushf
push
dec
mov
xor
leave
mov
adc
sub
add
xor
sarl
scas
repz
or
fnsave
test
dec
xchg
loope
es
jl
mov
ds
repz
mov
mov
fimull
fstpl
cmp
cmp
add
mov
cmp
add
mov
sbb
and
cmp
mov
cli
sub
inc
cltd
sahf
scas
add
popa
ja
jb
push
movsl
add
mov
xor
repnz
mull
fdivrs
mov
mov
mov
push
fnsave
les
add
xor
bound
adcl
jns
sub
clc
movsl
inc
add
mov
scas
xlat
outsl
mov
sbb
incb
scas
aas
sbb
icebp
push
clc
mov
add
fisttpll
xor
or
aam
mov
call
xchg
dec
pop
sti
jns
or
pop
fisubrs
adc
jge
cltd
icebp
cwtl
sarb
push
popa
sbb
outsl
mov
sbb
cwtl
mov
pop
jne
stos
stos
bound
or
sub
xorb
push
sahf
mov
fmull
or
xchg
in
arpl
jae
sbb
out
stos
repz
stos
test
pop
test
inc
dec
xor
sahf
and
push
pusha
in
jg
sti
int3
push
lock
out
jne
je
fidivs
xchg
mov
push
push
lahf
mov
test
push
repz
repz
push
dec
cmp
rolb
mov
je
nop
xorl
add
and
fildl
movsl
xchg
mov
outsb
popf
mov
fistpl
nop
and
add
and
dec
orb
stc
test
call
mov
fwait
nop
dec
add
inc
nop
sbb
add
mov
aad
jb
int3
xor
inc
fs
sub
push
xorb
incl
sbb
sbbl
ret
ss
dec
fnstcw
mov
push
and
out
aad
inc
popf
maskmovq
divl
andl
push
mov
gs
push
nop
lods
dec
scas
push
jb
das
sub
push
test
hlt
shlb
clc
ljmp
ret
imul
in
xor
in
inc
xor
ret
adc
pop
jnp
inc
and
scas
push
push
dec
mov
fwait
jne
xchg
jg
push
inc
loop
cld
clc
cmpsb
cmp
loope
ret
dec
cli
sbb
mov
push
push
stos
xorl
jge
div
push
xchg
loop
nop
inc
sub
ljmp
sub
push
lods
insb
out
inc
cmp
mov
or
out
xor
shrb
xor
jo
in
push
and
jnp
push
insb
sahf
sbb
lods
cwtl
paddsb
push
and
arpl
cmp
mov
aam
xchg
repnz
out
outsb
dec
xlat
inc
pop
lods
jmp
into
mov
stos
out
outsl
push
push
filds
sub
adc
push
fpatan
lcall
sbb
imul
shl
loope
and
test
rorl
je
push
xchg
push
mov
dec
inc
cmp
in
outsb
jns
movsb
add
shll
mov
mov
lret
inc
xor
mov
mov
dec
dec
mov
xchg
xor
out
lea
fisttpll
out
movsl
out
inc
jb
adc
or
push
fmuls
aad
scas
jl
into
xchg
push
sahf
push
push
jmp
cmp
into
cmp
push
push
sub
jnp
das
enter
jnp
pusha
mov
ret
inc
or
sub
mov
mov
cli
inc
jp
xor
inc
call
fs
xchg
push
inc
and
inc
mov
leave
dec
pop
movsb
xor
dec
xlat
mov
fidivrs
fisubrl
jb
inc
xor
sub
cmp
xchg
push
sbb
sbb
and
sbb
in
inc
ljmp
lock
in
mov
xchg
lods
jl
fsts
out
das
mov
cmp
pop
pop
out
jle
inc
jne
inc
fimull
cmp
jae
rcrb
mov
xchg
sbb
dec
mov
movsl
inc
dec
and
jecxz
xor
or
fs
cmpsl
sbb
mov
je
cmpsl
dec
out
insb
xor
sub
inc
xchg
pop
loope
sbb
fstpl
mov
jge
inc
cmpsl
mov
ss
push
sarb
rcrb
add
xorb
jbe
and
jg
sahf
aam
pop
aam
jmp
xor
outsb
ror
popa
jns
jmp
fimuls
inc
icebp
fisttpl
cmc
fisubs
stc
nop
push
clc
xor
ja
xchg
out
jp
pop
rcrb
dec
test
cmp
mov
mov
push
or
pop
arpl
call
fldl
stos
out
mov
lahf
mov
adc
cmp
lds
cmp
inc
inc
sbb
add
jns
cmp
push
cmpsb
push
cmp
push
jae
adc
push
fs
xor
add
pop
aam
xor
sub
mov
push
jl
clc
xchg
jo
and
pop
in
addb
mov
pop
pop
aad
mov
add
jle
mov
sub
daa
clc
inc
fcompl
das
lahf
mov
add
xchg
bound
nop
je
insl
shll
jo
out
lods
push
adc
xchg
les
ret
or
fwait
xlat
cltd
clc
jo
sub
mov
xor
push
xor
cmp
push
lret
sub
xlat
ficomps
sub
xor
aas
leave
stos
cmp
mov
xor
jmp
adc
push
dec
pop
cmp
rolb
xchg
jne
daa
repz
push
jmp
inc
add
push
lods
mov
cmp
nop
call
pop
lods
xchg
xor
stos
cmp
push
fldcw
dec
push
or
cmpsl
out
jmp
mov
hlt
adc
out
dec
jae
mov
xchg
imul
dec
out
mov
out
rcrb
decb
pushf
mov
daa
pop
mull
popf
outsb
sbb
ja
scas
scas
cmp
or
lods
dec
fbld
pop
test
cmc
sub
pop
outsl
sbb
sub
and
fs
push
inc
rcrl
dec
push
lret
push
xchg
jmp
inc
aaa
mov
mov
out
push
sbb
fsubrp
mov
pop
icebp
movsb
xrelease
enter
mov
out
in
les
dec
mov
add
push
std
clc
mov
mov
pop
adc
add
outsl
or
adc
fdivp
leave
popf
lret
gs
popf
jle
inc
or
push
int3
mov
pop
daa
ja
sub
sahf
fcmove
loop
mov
push
pop
and
les
rorb
les
mov
rcr
push
sti
and
inc
mov
and
imul
stos
inc
inc
lret
dec
inc
dec
jb
and
fsts
insb
jno
pop
roll
sub
inc
lods
and
and
inc
xchg
sbb
and
es
fdivrl
stc
icebp
das
mov
inc
push
dec
ljmp
and
jmp
add
inc
dec
sti
jge
shll
cmp
fidivrs
popa
inc
fisubl
and
movsb
rcr
dec
jmp
and
jb
sub
pop
out
sbb
xor
pop
jnp
inc
lahf
xor
inc
jne
or
repnz
cltd
aam
test
mov
fldt
loop
cmpsb
test
and
daa
dec
cwtl
in
movsb
xchg
mov
or
push
sub
pushf
inc
jno
sbb
roll
xchg
test
imul
in
aam
in
stos
sbbl
stos
mov
pop
cmp
outsl
fsubr
out
das
sarb
cmp
mov
inc
inc
xor
sub
mov
cmp
adc
fldcw
int3
pop
icebp
rcrb
push
push
xchg
dec
cmpsl
and
in
icebp
or
fstl
outsl
pop
mov
push
mov
or
push
or
add
mov
insl
loop
outsl
in
sahf
jl
dec
pop
shl
outsb
vpcomb
jne
cld
sbb
pushf
pushf
repz
mov
pop
loope
cmp
ret
mov
fucomip
jp
sub
xchg
clts
fisubl
xchg
ret
inc
mov
imul
jle
data16
xor
std
xor
mov
js
mov
fcmovb
mov
stos
les
push
data16
and
bnd
fistpl
fisttpll
arpl
cmp
inc
xchg
inc
jns
lds
xor
cmp
ljmp
push
cmpsb
pop
lret
daa
inc
cmp
out
sub
mov
push
mov
add
addr16
push
mov
pop
jl
daa
fisubs
insb
adc
ja
push
push
lret
pop
cmp
xchg
repnz
repnz
pop
sahf
fsubr
jno
inc
imul
xchg
inc
push
aad
jne
imul
adc
mov
sbb
jl
mov
adc
outsl
adc
notl
loop
out
xchg
jb
leave
imul
push
sub
jbe
and
sub
and
mov
xchg
cmp
imul
inc
test
or
lcall
lods
ret
stos
pop
shll
inc
in
insb
mov
testl
test
dec
sbb
xchg
repz
xor
push
inc
iret
pop
pop
out
das
xchg
push
js
xchg
mov
test
into
je
xchg
xor
imul
pop
mov
fs
adcb
add
mov
push
lret
mov
mov
rol
add
lahf
in
cmp
push
stc
mov
adc
cmp
sti
sbb
or
je
xor
pop
imul
les
mov
subb
dec
sahf
push
mov
popl
inc
sub
push
cmp
push
xor
or
cs
push
cmp
sbb
addr16
jae
ljmp
dec
jae
rorl
std
mov
clc
stos
xorb
ja
add
repz
mov
imull
jb
sub
and
xor
push
ficoms
test
xor
mov
test
popa
xchg
ljmp
loopne
sbb
stc
hlt
pop
int
je
xchg
mov
cwtl
xlat
jnp
mov
inc
ds
test
outsl
imul
sti
ret
mov
cmc
inc
lahf
in
dec
inc
mov
ret
mov
jno
cs
adc
fcmovnb
or
xor
hlt
and
cmp
xor
or
add
subb
dec
mov
adc
sti
add
push
into
push
inc
cmp
lcall
mov
sbb
cmp
cmp
or
in
sub
and
dec
sarb
fcmovbe
sub
jo
xchg
mov
cmp
pop
push
outsb
inc
lea
jae
ljmp
adc
xor
fsubrl
nop
mov
add
incb
popa
lods
sti
push
test
lods
cmp
push
mov
jnp
mov
add
rolb
jg
jp
xchg
push
mov
push
fadds
data16
pushf
loopne
rorl
mov
dec
pop
into
popf
and
rdtsc
xor
dec
repz
in
andb
bswap
xor
jge
sub
sbb
dec
push
dec
inc
daa
xchg
fs
in
movsb
or
sub
aaa
mov
hlt
test
sub
repz
mov
out
arpl
loop
lods
push
jecxz
mov
repz
shr
adc
inc
fstps
mov
inc
jb
mov
push
mov
dec
jns
les
add
inc
aas
call
popf
popa
imul
inc
rcrb
xor
sarl
xchg
daa
in
mov
outsb
add
xchg
and
or
sahf
push
rclb
xchg
enter
fsubrl
fbstp
cmpb
dec
inc
mov
lea
or
int
and
xchg
clc
push
scas
xchg
cmp
cmp
lahf
lahf
mov
shll
mov
out
outsb
pop
inc
aas
movsb
cmp
ret
jg
imull
cmc
adc
mov
sarb
dec
pop
popf
enter
fsts
mov
inc
incb
icebp
or
mov
add
lods
in
or
or
jecxz
xorl
jno
fcmovnbe
xor
inc
data16
popa
sub
imul
push
lods
aaa
mov
out
mov
xchg
sbb
rorb
inc
and
inc
stos
inc
scas
fcmovu
mov
pop
outsb
sbb
jns
add
shrb
mov
sub
xchg
mov
adc
mov
js
mov
popf
bound
dec
movsb
cmp
xchg
jp
jb
lock
lock
pusha
outsl
ja
loope
leave
pop
fiadds
mov
cwtl
test
stos
sti
ret
into
push
into
mov
lcall
jp
loope
xlat
cld
pop
mov
and
mov
lds
cli
lahf
jnp
and
les
iret
scas
sbb
outsl
sub
push
jns
das
sub
mov
mov
ret
test
cmp
inc
mov
jnp
lds
popa
loope
or
subl
dec
bound
out
dec
cmp
pop
xlat
cs
push
add
inc
dec
fwait
dec
xchg
and
cmc
add
cwtl
out
xor
xor
arpl
shll
les
cmpsl
and
add
push
xchg
loopne
stos
int
mov
rcll
fisubrl
pusha
push
fimuls
add
call
add
mov
dec
cmp
xlat
arpl
dec
outsb
pop
inc
push
adc
adc
int
pop
inc
rorl
adc
mov
fidivrs
mov
shlb
mov
sahf
or
fidivs
mov
push
xor
jle
jmp
pop
iret
mov
outsb
inc
sbb
push
xor
xor
xchg
fisttps
cwtl
scas
das
push
mov
jecxz
adc
lea
shll
push
inc
mov
out
outsl
add
int3
and
mull
xor
popl
mov
into
addr16
popa
stc
iret
mov
and
stos
ret
xchg
das
cmp
repz
adc
push
push
outsb
sub
sbb
adc
ljmp
jle
into
cmp
xchg
inc
sarl
cmp
test
add
loopne
pop
pop
jg
test
clc
lods
test
jmp
mov
push
add
fidivrs
andl
mov
inc
dec
xor
jl,pt
out
in
add
lret
dec
and
sub
sbb
inc
ss
xchg
lahf
push
outsl
xchg
or
lock
rcrl
out
testb
inc
iret
lahf
adc
aas
or
mov
jo
loop
xor
mov
std
das
addr16
out
xor
cli
jp
aaa
sub
mov
scas
cmp
push
gs
mov
lods
cwtl
pushf
jns
dec
aam
xor
mov
rcll
lahf
add
aas
and
enter
mov
sub
jecxz
dec
pop
cmp
inc
fstpt
data16
adc
std
notb
fwait
je
pushf
js
jecxz
outsl
or
jbe
shlb
rcrb
xchg
lock
sub
rorb
cltd
sbb
mov
add
jl
push
shlb
ret
sar
jmp
loopne
jmp
loopne
and
arpl
lret
dec
sub
add
test
pop
out
mov
dec
or
paddq
fldcw
out
ljmp
xchg
pop
sbb
sahf
and
ds
mov
in
adc
jae
mov
mov
push
adc
mov
push
call
pop
xchg
test
in
ss
mov
hlt
fidivrs
rol
sbb
loop
adc
scas
inc
sbb
lret
sub
push
cld
in
mov
rol
dec
push
cmp
sti
sahf
sbb
xor
mov
adc
test
sbb
push
push
lret
and
das
add
add
hlt
xor
loope
sub
insb
jb
jns
call
lret
sti
sbb
pop
std
inc
push
lret
push
mov
testl
gs
add
test
lcall
push
je
in
adc
pop
bound
sub
int
addr16
out
cmpsl
xchg
pushl
add
sub
test
shl
push
mov
xor
lret
popf
adc
adc
ret
mov
cmp
ja
inc
dec
imul
out
mov
test
in
xor
add
lahf
push
rorl
jb
dec
shrb
mulb
ficoml
or
outsl
inc
add
pop
xor
arpl
jne
push
jno
das
std
inc
imul
adc
or
in
mov
add
ja
jge
fcmovu
fabs
scas
adc
cltd
and
mov
cmp
inc
adc
addr16
mov
insl
xchg
cmc
test
cmpsl
cli
lcall
pusha
and
fstp
adc
sub
jmp
xor
je
ljmp
push
mov
jge
outsb
lock
imul
jp
out
mov
rorb
and
cltd
mov
adc
push
mov
mov
jmp
xchg
sub
in
fcomps
sbb
cs
loop
lahf
push
aam
mov
inc
and
or
pushf
decl
in
sbb
ljmp
dec
xchg
inc
fwait
and
cmpsl
fistpll
movsb
addb
sbb
mov
jecxz
movups
add
and
cmpsl
push
loop
dec
jnp
cli
mov
icebp
xchg
push
and
add
adc
and
lock
lea
jmp
ret
cli
inc
push
lret
mov
cmpsl
sub
std
xor
xchg
xchg
outsb
jmp
add
hlt
in
lret
aad
push
sub
sti
push
lea
or
mov
fdivs
jl
adc
push
outsb
ds
mov
pop
dec
jns
cmpsb
cwtl
pop
mov
mov
adc
cmp
pop
adc
gs
loopne
push
jmp
fisubrs
shlb
iret
roll
xor
ss
arpl
in
mov
cli
aaa
inc
xor
inc
movsb
pop
sahf
cwtl
ja
lea
inc
fldl
adc
inc
ss
aam
sarl
cmc
in
out
xchg
fcomps
adc
jp
xchg
cmp
call
ja
sbb
mov
sub
sbb
imull
aaa
mov
mov
cltd
adcb
sti
call
into
mov
dec
inc
mov
xchg
cli
mov
mov
mov
jecxz
sbb
jge
lods
fcomps
nopl
mov
cmp
hlt
cltd
repz
imul
int3
dec
cmp
xchg
sub
push
cmp
jnp
mov
push
notb
inc
aas
xor
sahf
cmp
xchg
fsub
xor
lahf
mov
sub
jge
ss
cmp
cwtl
dec
hlt
push
mov
mov
mov
pop
push
pop
icebp
fimuls
icebp
dec
fdiv
ret
movsl
sub
test
fiaddl
test
or
pop
xor
and
cli
sbb
fs
adc
in
adc
sahf
push
dec
cmc
imul
inc
add
rolb
int3
pop
ds
xor
aas
popf
iret
pop
mov
fisubs
fstps
mov
push
sub
and
xchg
mov
or
les
or
imul
leave
sbb
fisttpll
inc
add
jo
inc
andb
push
in
or
int
pushf
dec
lcall
js
fs
xlat
lds
fldln2
decl
inc
mov
and
scas
jl
dec
gs
sub
inc
addr16
jnp
jns
loop
push
jmp
dec
push
cli
mov
xchg
push
push
mov
cmc
jne
cmp
lahf
or
das
add
mov
cwtl
loope
cmp
mov
mov
adc
push
lcall
or
notb
aad
ret
push
repz
out
lods
decl
repnz
lods
or
movsl
fistpl
inc
mov
push
fwait
cmp
ss
add
loopne
insl
inc
aad
stos
loope
mov
sbb
inc
dec
mov
mov
adc
jl
lahf
xchg
test
jnp
cmp
xor
and
inc
cli
int3
in
dec
dec
jecxz
adc
orb
sar
cmp
negl
push
adc
repnz
pop
add
les
xchg
int
stos
xor
push
xchg
dec
subb
mov
pop
ficoml
cmp
rcrb
add
mov
scas
or
mov
lock
mov
sbb
repnz
dec
fistps
hlt
fcoms
mov
das
loopne
xchg
push
scas
push
lods
les
fs
push
or
js
std
mov
test
lret
add
inc
enter
pop
shll
notl
stc
jbe
or
aas
push
mov
dec
test
inc
dec
int3
aaa
xchg
lock
or
pop
mov
orb
mov
push
mov
push
pop
xchg
jg
jno
in
mov
mov
xchg
ret
sti
aaa
insl
loop
add
cmp
sbb
adc
pop
add
rcrb
mov
rdtsc
cmpsb
rcrl
sti
call
xlat
rcrl
push
cmpsb
popf
popa
xor
or
mov
sahf
js
xchg
push
ret
fs
push
xor
fisubl
jo
xchg
push
and
ret
or
sub
cld
sub
inc
cltd
into
xchg
scas
jl
clc
sbb
push
mov
jbe
faddp
xor
cwtl
and
jmp
mov
repnz
movsl
popf
dec
fwait
aad
push
add
inc
push
cmpl
or
lds
jbe
jmp
mov
sub
mov
sahf
xchg
sub
dec
adc
cmp
mov
outsb
movsl
cmp
aam
jnp
iret
mov
enter
andb
dec
stos
movl
mov
inc
sbb
jo
fwait
push
repz
jmp
andb
pop
sbb
aaa
orb
fwait
push
fs
in
stc
int3
xchg
sub
es
or
shrl
and
ljmp
jns
dec
and
dec
neg
shlb
aam
enter
adc
lret
andb
jl
fistpll
or
jo
adc
adc
push
adc
and
dec
sysret
rclb
arpl
mov
mov
cmpsb
pop
insb
sub
mov
fidivrl
mov
or
xor
xadd
pop
dec
push
cmp
jnp
lds
inc
cmp
cs
addr16
int3
shlb
pop
pop
dec
or
aaa
std
dec
cmp
xlat
int
fnstcw
sbb
scas
repz
mov
mov
xchg
stos
ljmp
iret
jbe
lods
xchg
jmp
cmp
clc
out
imul
dec
and
mov
ja
dec
dec
pop
adc
mov
jns
iret
fcoml
mov
dec
xor
subl
inc
jae
and
and
xor
ljmp
sbb
test
hlt
mov
xchg
rcrb
addr16
test
ret
or
cltd
pop
data16
add
mov
leave
imul
stos
xor
pop
aas
xlat
mov
cmp
mov
jne
push
ret
js
mov
mov
mov
jb
addr16
push
mov
movsl
ret
xor
scas
jmp
loop
and
cwtl
inc
mov
sub
mov
cmp
mov
jecxz
dec
dec
popa
adc
shlb
adc
xchg
imul
outsl
jnp
lret
seta
js
aam
ficoms
ret
push
jne
popa
aaa
daa
xor
fstpl
sbb
or
stc
push
fnclex
out
cli
add
or
jnp
call
lds
pushf
cmp
pop
rol
in
jne
push
xchg
or
stos
fsubrs
lahf
sbb
rcll
and
inc
stos
lea
jl
test
mov
dec
push
int
cmp
cmp
aad
pop
lret
je
add
jns
jmp
idivb
add
imul
mov
fistps
scas
cmc
mov
insb
ret
aam
test
dec
mov
dec
insb
in
push
shrb
and
push
mov
repz
mov
cmp
push
cmp
imul
mov
add
add
cwtl
lahf
fsub
stc
rorl
das
xor
cmp
adc
mov
jmp
lods
sbb
ficoms
ja
out
js
add
inc
xchg
lods
ljmp
add
dec
jae
stos
in
xchg
pop
xor
dec
mov
pusha
std
cmp
xor
nop
mov
aam
scas
jbe
ss
fcomp
in
es
test
push
cmp
scas
xchg
lea
inc
adc
notb
pop
push
dec
or
pop
pop
inc
sub
mov
es
xlat
mov
sub
adc
adc
pop
imul
ljmp
xor
cs
cmp
enter
mov
shl
in
sbb
out
and
push
cmc
sbb
inc
sbb
fsubr
jne
pop
jb
mov
pop
or
add
cmp
jmp
sbb
push
pop
in
sub
sub
jge
cmp
loope
pop
adc
pushf
cmpsb
sbb
cmp
in
mov
mov
mov
lods
cltd
mov
repz
popf
xchg
pop
loope
and
lret
jbe
in
push
and
add
pop
arpl
arpl
scas
mov
call
pop
sbb
nop
lea
scas
push
dec
mov
movsl
icebp
insb
scas
lds
xor
mov
loopne
mov
jle
xor
jle,pn
lds
imul
movsb
ss
cmpb
mov
mov
js
push
popf
adc
jns
mov
jae
xchg
cs
arpl
xchg
cmpsb
pushf
add
popa
aaa
xorb
frstor
push
outsb
leave
pop
out
ljmp
xchg
mov
cli
push
dec
jle
sub
cltd
jg
stos
je
cwtl
lock
adc
rolb
lret
sbbb
cmpsl
into
inc
push
outsl
pop
jge
cld
dec
in
and
imul
subb
inc
cs
sbb
xchg
std
fwait
in
mov
mov
ss
dec
pop
or
and
sub
jo
rcll
cmp
xchg
jle
arpl
or
mov
repz
scas
xchg
mov
scas
dec
adcl
mov
and
pop
cltd
sub
jns
push
sarl
out
fstps
mov
je
rcrb
lcall
movsl
cmp
addr16
sub
lds
imul
jl
shlb
je
mov
push
dec
shll
js
mov
inc
test
xchg
clc
push
je
sbb
aas
cli
insl
fisttpl
insb
xchg
xchg
out
pop
fimull
aaa
mov
pop
addps
int3
cmp
jge
scas
push
fwait
js
cld
sbb
stos
push
cmp
mov
sbb
mov
mov
fsts
jns
dec
push
and
mov
dec
aad
jl
in
test
fstpl
insb
daa
in
xor
loop
push
mov
adc
xchg
adc
inc
and
in
push
gs
fcomp
je
jecxz
jl
and
stos
dec
sub
gs
inc
pop
sti
je
aas
int3
or
test
xor
push
dec
incl
stos
mov
sti
pop
fbld
mov
mov
jb
and
push
cmp
mov
cli
into
xchg
cld
xchg
and
pop
cmp
pop
lods
imulb
sarb
sahf
add
and
xor
mov
icebp
or
push
jp
inc
popf
sub
mov
sub
and
fsub
add
inc
pop
fld
icebp
ljmp
clc
fildl
lock
jno
hlt
pop
xchg
and
xor
xor
dec
and
ror
push
in
jmp
nop
fidivrl
lds
cmpsb
ljmp
mov
cltd
add
xor
lcall
jecxz
push
lahf
push
jl
int3
cmp
adc
fs
ja
push
adc
std
outsb
mov
adc
inc
and
lret
xor
dec
test
out
push
dec
mov
fdivrp
pop
sbb
jns
dec
test
cmp
out
cmpsl
xorb
cmp
xor
je
adc
cwtl
dec
repnz
lcall
jne
test
insl
cmpsl
orb
xor
push
les
jmp
insl
shll
inc
decb
jmp
popa
and
cmp
sub
mov
mov
xchg
and
fiadds
xchg
push
pushf
insb
pop
push
sub
loopne
negl
xor
inc
and
dec
fcomps
sub
lods
leave
cmp
xchg
imul
xchg
negb
hlt
popa
fadd
ds
ds
pusha
in
sarb
test
jge
ret
xchg
mov
scas
jecxz
out
addr16
mov
jl
pop
fwait
pop
aaa
cmpsl
insl
int
add
test
je
test
and
pop
sti
dec
fstpt
aaa
add
dec
and
jg
pop
inc
cltd
int3
and
pop
push
es
ja
xchg
cmp
inc
movsl
nop
cmp
in
mov
pop
aas
or
lock
mov
cmp
mov
inc
inc
cwtl
aam
mov
ljmp
setae
adcb
mov
cmp
loop
inc
dec
movsl
adc
repz
inc
dec
xorb
mov
fnstenv
sbb
fs
les
std
and
mov
dec
cmp
idivb
mov
xchg
ret
js
and
sbb
sbb
dec
pusha
arpl
xchg
xlat
clc
mov
fdiv
stos
inc
icebp
jb
push
pop
or
mov
xor
shl
clc
mov
inc
pop
sub
jmp
or
call
inc
scas
pushf
nop
mov
jl
xchg
jb
mov
into
jecxz
inc
sbb
out
push
lods
and
jl
adc
or
xlat
outsb
mov
insl
movsb
pop
xchg
jno
scas
popf
mov
in
sub
mov
push
mov
pop
popf
xchg
popa
ss
cmp
sbb
std
mov
ljmp
in
maskmovq
testl
jecxz
clc
loopne
mov
mov
jecxz
gs
cmp
fwait
test
stc
push
mov
dec
pop
fists
and
push
fnstcw
ss
cltd
mov
jle
push
sbb
addr16
stos
fwait
roll
mov
inc
ret
add
jecxz
nop
sarb
mov
jae
mov
scas
cmpsb
sub
je
stc
xor
popa
inc
push
sbb
into
jecxz
sti
push
jmp
dec
fadd
inc
jb
inc
lret
or
xchg
std
sub
push
dec
fidivl
testl
int
mov
dec
loopne
jg
or
fptan
out
xchg
pushf
icebp
pop
mov
popf
mov
mov
stos
stc
loope
and
jecxz
pop
bnd
nop
aam
out
scas
mov
aas
push
pop
sahf
sbb
push
xor
xchg
mov
dec
fdivrs
jo
icebp
or
sbb
jmp
je
out
and
push
movsb
sub
push
dec
popf
cmp
cmpsb
dec
sar
outsl
inc
ja
fwait
pop
in
push
outsl
pop
inc
mov
adc
sub
inc
cli
call
les
dec
scas
in
sub
mov
pop
movsb
aam
sbb
sbb
fs
pushf
push
ret
les
or
add
cltd
mov
popa
daa
xchg
adc
and
fxam
push
mov
adc
inc
and
push
xor
testl
pop
mov
sbb
push
out
push
inc
jae
out
add
stc
push
sub
xchg
mov
adc
cmp
mov
jae
push
sbb
sar
bound
adc
or
cli
pop
repnz
jmp
paddsb
ficoml
adc
ret
xchg
aas
inc
or
in
orb
cmp
mov
sbb
xor
ss
add
fdiv
fwait
mov
cmpsb
adc
call
jno
pop
jge
repz
fcoml
out
xchg
cli
shl
rcrl
push
leave
mov
ljmp
sub
flds
inc
or
rorl
leave
sbb
out
sbb
xlat
inc
in
sbb
sub
call
repnz
shlb
std
mov
xor
mov
push
xor
in
cmp
dec
sub
stos
std
pushf
stos
and
rcl
sbb
loopne
fcmovbe
mov
mov
sbb
sub
loop
movsl
add
mov
loope
mov
fsubrs
pop
add
in
adc
push
mov
sub
or
popf
cmp
add
nop
std
mov
push
cmc
cli
push
jmp
setno
jge
pop
pop
fistpll
and
adc
lcall
arpl
ret
mov
movsl
or
fwait
dec
repnz
mov
or
jbe
pop
mov
mov
sub
push
mov
or
fsubrl
mov
xchg
xchg
mov
inc
add
add
dec
adc
xor
jl
and
mov
ds
repnz
push
jo
jbe
xchg
mov
orb
sbb
adc
add
jle
std
sbb
addr16
aam
pop
jne
out
xchg
cmpb
hlt
loope
adc
daa
insl
pushf
mov
jmp
test
mov
sbb
pop
in
jae
popw
jb
roll
adc
clc
loope
fldcw
movzbw
add
filds
inc
lods
pop
sahf
push
cltd
mov
xchg
cltd
xchg
sub
outsl
dec
fdivr
inc
mov
xor
sub
jl
cmp
sbb
mov
pop
cmp
jo
imul
mov
in
inc
test
inc
cwtl
insb
out
xor
movsl
xchg
movsb
pusha
mov
mov
jns
jmp
test
loop
push
call
addr16
pop
aam
fdivl
and
cld
sbbb
adc
bsr
mov
fs
mov
inc
add
or
ds
imul
loopne
fnsave
out
sub
push
dec
sub
cmp
and
push
shl
aam
jp
pop
jno
mov
orb
mov
push
outsl
or
add
sbb
in
xchg
pop
addr16
push
hlt
mov
cwtl
push
jno
stc
jge
hlt
push
idivl
push
adc
std
out
repz
rcrb
scas
push
frstor
pusha
mov
inc
dec
mov
insb
mov
push
push
jg
fisttpll
aam
mov
mov
mov
fists
pop
cmp
shl
cmpsb
adc
dec
cmp
and
cs
jecxz
cwtl
mov
imul
mov
imul
adc
clc
dec
xorb
es
aad
mov
fisubrl
aaa
fwait
dec
sub
outsl
sahf
mov
sbbb
mov
add
xor
loop
nop
repnz
imul
xor
flds
sbb
cmp
in
or
js
xchg
stc
bnd
dec
data16
loope
pop
nop
repz
or
daa
leave
push
xchg
loope
xlat
loop
fmull
test
cmp
fistl
test
popf
clc
sub
xlat
push
loope
jmp
mov
cwtl
icebp
jb
sbb
jns
fiadds
mov
lds
call
mov
jns
call
sub
adc
xor
outsb
mov
xor
lret
xchg
cmp
push
lret
cmp
and
jecxz
inc
push
popa
cmp
inc
pop
pop
dec
cmc
out
ret
inc
outsb
inc
or
mov
test
mov
jmp
and
test
les
add
ret
push
mov
adc
rclb
in
push
dec
out
enter
push
mov
add
sub
dec
mov
fistps
xchg
xor
into
adc
add
cmp
cmp
adc
inc
jp
insb
sub
push
dec
fwait
pushl
push
adc
mov
jbe
cmp
mov
test
in
sahf
push
add
aas
sub
xlat
xchg
push
cmpsl
dec
movsb
jge
insl
xchg
ljmp
and
insl
jmp
loop
push
lock
adc
cmp
jp
test
repnz
lea
scas
ret
inc
pushf
sbb
fisubs
enter
sbb
stos
jg
inc
lea
and
addr16
addb
stos
test
jo
in
mov
mov
jge
cli
dec
mov
into
in
push
add
inc
test
and
sti
stos
fwait
or
in
mov
sarb
push
stos
xchg
inc
loop
mov
stos
adcl
mov
das
push
in
fisubs
das
repz
and
outsb
sub
cmp
cmpsb
in
push
aad
in
sub
dec
adc
push
aam
lret
xchg
sub
clc
cmpsl
jbe
leave
outsb
pop
push
sbb
mov
je
lcall
mov
notb
add
jge
xor
movsl
fisubrs
mov
xor
pop
fdivs
xchg
adc
pop
cmp
adc
mov
lcall
push
mov
cmp
call
notb
cmp
adc
mov
jmp
bound
mov
int
xor
sbb
in
out
push
mov
push
push
jl
adc
dec
out
out
jne
popa
andl
dec
dec
enter
sub
ljmp
notb
in
in
add
adc
adc
popf
ss
sahf
out
xchg
mov
lock
test
and
ljmp
decb
fnstcw
dec
xchg
xor
sub
xchg
daa
gs
movsl
dec
imul
or
push
hlt
dec
cltd
outsl
ret
jmp
jp
insl
and
arpl
imul
out
or
xlat
lret
dec
cld
nop
or
call
cmp
mov
cmpsb
xchg
dec
mull
push
sub
enter
xor
push
cwtl
dec
jl
popa
sahf
int
push
cld
popa
mov
outsl
std
jns
xchg
add
add
nop
dec
das
sar
xchg
lret
pop
ss
xchg
scas
and
pop
test
or
leave
pusha
mov
jge
add
scas
lds
fstpl
jo
adc
sub
mov
or
fs
mov
into
cli
pop
je
in
mov
cwtl
fldt
inc
push
mov
cmp
jno
je
hlt
inc
dec
or
or
sti
outsb
dec
aaa
fwait
xchg
xchg
dec
inc
push
ss
push
push
jae
inc
int3
adc
pop
fisubrl
ds
and
int3
jp
inc
das
pop
std
sbb
xchg
test
xlat
pop
inc
dec
pop
push
shlb
or
repnz
pop
mov
out
xchg
in
add
mov
sub
mov
imul
push
lods
insb
test
xchg
loopne
xor
xor
dec
nop
and
mull
mov
in
fisubs
inc
push
cs
adcl
ret
stos
addr16
sahf
cs
imul
push
push
int
shll
push
stos
push
in
shll
jae
mov
xchg
rcl
xor
test
lahf
mov
clc
lods
jnp
pushfw
pop
push
movsb
insl
in
cmpsl
mov
add
fldenv
std
ret
shlb
out
leave
mov
imul
inc
inc
in
test
push
push
stc
es
dec
or
jns
in
xchg
in
adc
lret
pop
sub
popf
sub
cmp
jns
pop
sbb
pusha
sbb
subb
xor
push
adc
jb
mov
stc
mov
out
cmp
movsl
stc
ficoml
xchg
cltd
fsubrl
jge
mov
cmpsb
jnp
popa
sbb
pop
push
cmpsb
xchg
scas
testb
mov
lods
xchg
or
outsb
pop
loope
outsl
repz
mov
xor
pop
das
mov
insl
or
and
jo
or
cmp
repz
mov
push
push
jle
adc
pop
push
rcrl
jmp
mov
out
sbb
cmpl
cmpsl
pop
sbb
xchg
push
jecxz
sahf
mov
dec
adc
inc
aad
fcompl
push
cltd
in
jge
xchg
fimuls
push
sbb
or
lods
test
jae
test
push
push
fs
xchg
out
addb
je
jmp
inc
sbbb
mov
add
and
vpavgb
aad
loopne
or
xchg
mov
lods
xchg
je
mov
mov
std
lret
inc
adc
lods
cltd
add
or
lds
fwait
decb
sbb
push
ds
or
outsb
test
push
icebp
stos
pusha
dec
negb
inc
test
out
out
pop
pushf
lret
mov
add
cmp
fmuls
mov
dec
stos
mov
sbbb
pop
pop
popa
scas
mov
inc
xchg
lea
in
add
fwait
push
adc
int
clc
test
std
sub
call
mov
repnz
aad
lcall
arpl
sar
out
push
scas
inc
arpl
notb
mov
fistps
add
push
femms
push
fwait
out
mov
arpl
cli
in
xchg
sbb
add
or
int
frstor
sbb
mov
jl
enter
jp
xor
ffree
js
fabs
and
mov
cs
fsub
imul
in
int3
xor
push
xlat
mov
jbe
xchg
lret
lret
sti
ds
adc
fistps
mov
int3
add
test
jno
or
rcrb
les
insb
add
je
int3
ret
fmul
fstps
sti
dec
into
jmp
outsl
push
mov
push
jg
data16
shr
popf
add
ret
adcl
cltd
pop
and
adc
out
cli
fistl
imul
test
aas
jnp
cltd
ljmp
cmc
inc
push
or
mov
addr16
bound
xor
sbb
mov
imul
jbe
fiaddl
cwtl
mov
sub
and
xor
push
xor
dec
outsb
in
push
jecxz
or
cmp
add
xchg
jb
fdiv
jno
imul
or
fimull
enter
add
pop
xchg
xchg
lret
ss
loope
jns
hlt
imul
fs
lret
mov
mov
mov
push
push
adc
add
pop
test
cld
add
xor
xchg
sub
shlb
mov
mov
adc
sti
test
aas
ret
adc
clc
ficompl
ret
xchg
lret
pop
aam
push
and
loopne
cmp
fwait
inc
mov
inc
pushf
sbbl
sbb
mov
push
arpl
shrl
jmp
dec
jae
jae
aaa
rcl
pop
negb
xor
add
jecxz
lock
or
inc
or
adc
pusha
lret
cwtl
jb
addr16
jmp
std
scas
sub
popa
jmp
jmp
sub
leave
sub
es
jno
inc
mov
loope
iret
shll
cmp
idivl
andb
in
mov
cld
pop
arpl
ds
and
arpl
mov
aad
and
push
test
mov
push
cmp
mov
jle
xchg
sbb
cmp
lock
mov
cli
test
mov
push
xchg
or
pushf
ret
lods
loopne
cmc
icebp
adc
stos
adc
mov
scas
icebp
and
neg
int
sbb
pop
sbb
aam
adc
and
sarb
pop
lods
in
adc
cmc
inc
lock
js
in
cmp
fsubl
test
mov
into
aas
add
cmp
movsb
cmpsb
in
loope
mov
mov
ret
test
cmp
rorb
pop
mov
insl
xchg
xor
mov
insl
call
inc
dec
cmp
arpl
sarb
adc
popl
or
add
add
cmpsl
js
push
lock
xchg
lcall
mov
ja
pop
or
inc
hlt
add
jmp
je
cmpsl
sahf
xorb
pop
pop
xchg
add
out
xchg
jae
dec
sbb
sbb
bound
imul
cmc
and
adc
orb
sbb
fistps
shlb
cmp
pop
sub
movsl
or
sub
xor
or
jge
adc
mov
jb
push
adc
jns
or
mov
ror
mov
icebp
inc
fiaddl
add
fs
outsl
mov
fcmove
jns
or
jne
icebp
aad
push
xchg
dec
lods
sbb
push
jp
repz
sub
scas
pop
aad
and
jp
subb
sar
outsl
push
cmpsb
cwtl
add
cmpsl
orb
push
pop
xor
jae
or
push
divl
push
push
jae
fistpl
in
test
popa
mov
cmp
and
sbb
pop
in
icebp
cs
test
pop
mov
sbb
pop
adc
inc
loope
xor
xor
and
iret
lahf
xlat
sti
push
sub
nop
insl
lods
cs
cs
shl
dec
jge
mov
lret
iret
movb
mov
pop
imul
xchg
cmpsb
dec
push
ret
adc
jno
mov
add
pop
shlb
hlt
xchg
sar
dec
fs
xor
mov
pop
test
xor
lea
adc
pusha
xor
cmpl
mov
loop
out
scas
mov
cmpsl
aad
or
xchg
mov
lods
and
cmp
and
pusha
pop
pop
sbb
mov
js
sub
cmc
sti
cs
lea
mov
sub
sbb
jl
jmp
inc
jns
sbb
out
ret
adc
dec
aam
js
push
lret
dec
pushf
icebp
nop
mov
inc
ret
fistpll
icebp
fadd
inc
push
sub
inc
jbe
or
sbb
cmp
data16
insb
pop
cmpsl
jno
mov
jmp
into
jne
rolb
cvttps2pi
push
aas
mov
push
xchg
rcrb
and
nop
cmp
js
arpl
testl
loopne
inc
sub
psubsw
push
clc
and
cmp
insl
mov
sahf
cmpsl
test
fwait
cmp
test
mov
mov
test
jns
inc
xchg
lock
xchg
ds
mov
mov
mov
arpl
call
push
mov
psrad
shl
pop
stc
dec
addr16
push
sarl
repnz
pop
mov
xchg
mov
add
test
jb
lret
roll
xlat
dec
cmpsl
push
push
cmpsb
jb
movsl
pop
inc
mov
or
push
xchg
or
mov
add
mov
xor
jno
repz
xchg
add
dec
and
push
jae
and
dec
fisttpll
popf
ljmp
mov
or
les
inc
clc
in
hlt
xor
shll
pop
lret
or
aaa
push
int
gs
ds
push
in
out
mov
leave
out
cmp
mov
rcrl
pusha
sahf
jle
push
loopne
push
lds
repnz
mov
cmp
popa
scas
movb
incl
scas
pusha
inc
in
adc
ja
bound
jecxz
out
mov
mov
or
loopne
jbe
lcall
mov
sbbl
fnstsw
in
mulb
mov
insl
loop
hlt
mov
cmpl
pushf
clc
movsb
js
daa
cmp
mov
aas
andb
pop
or
sub
enter
sarb
es
sbb
lret
aam
in
das
shrb
adc
jmp
sbb
xchg
xor
push
aas
dec
add
loop
mov
clc
xchg
push
lods
adc
test
scas
pop
popf
xchg
dec
leave
mov
adc
push
push
test
dec
mov
int
fsubs
xchg
aas
das
push
dec
les
dec
aas
and
filds
fcom
ret
gs
cmpsb
hlt
sbbb
fdivs
in
cld
xor
lods
adc
outsb
shl
sub
cmpsb
mov
jae
fadd
out
arpl
push
imul
in
daa
push
pop
cmp
sbbb
sub
hlt
mov
aad
cmpsb
xor
pop
sbbl
adc
xor
mov
dec
outsb
pop
call
cmp
jecxz
cwtl
aad
inc
pushf
mov
dec
xchg
xor
adc
in
out
xor
call
dec
pusha
iret
pop
mov
pop
ret
dec
mov
movb
sub
sbb
adc
lret
sbb
out
repz
jbe
dec
and
jo
mov
mov
pop
cmpsb
mov
adc
cmp
adc
mov
cmc
pop
adc
add
sub
jg
pop
daa
mov
adc
insb
aaa
xchg
pop
adc
mov
or
aam
test
push
popf
xchg
sub
divb
jns
and
fistpll
fistl
mov
stos
cltd
scas
mov
or
movsb
push
repnz
or
imul
popf
jl
or
jne
ljmp
dec
xchg
sub
jbe
mov
xor
xor
rol
test
insl
xchg
add
add
jb
ljmp
clc
mov
dec
pop
sbb
push
out
mov
xchg
sub
xor
ds
mov
xor
in
imul
adc
adc
jecxz
mov
subb
cmp
aaa
mov
cmc
xchg
or
adc
call
cmc
rorb
bound
xchg
and
mov
push
pop
das
enter
imul
fsubr
int
mov
and
mov
leave
add
sub
xchg
mov
jnp
push
mov
pop
pop
mov
out
pop
dec
call
jl
or
andl
cmc
cli
pop
or
addr16
xchg
mov
lock
es
shrl
inc
cmp
andb
rcrb
loopne
xchg
iret
lea
mov
shl
repz
pusha
mov
dec
cmp
adc
ds
dec
repnz
mov
pop
rcr
cmp
cmp
in
mov
aad
mov
hlt
stc
popf
stos
xchg
push
jp
in
push
out
jns
daa
sbb
xchg
outsl
ljmp
xor
jmp
jmp
jge
cmpsb
mov
mov
mov
sbb
mov
mov
sbb
adc
test
insb
mov
scas
ret
mov
cmp
sbb
push
test
repnz
arpl
push
out
adc
fisttpll
ret
mov
cwtl
fcoml
shr
out
enter
pop
and
mov
mov
ret
jle
mov
test
in
rolb
dec
mov
aad
out
addr16
fcmovnu
cli
jle
iret
pushf
sub
jno
fwait
addr16
out
xor
jp
dec
dec
gs
sbb
loopne,pt
jno
int3
std
mov
adcb
cmp
cld
cmc
xor
xor
in
cmc
push
nop
clc
push
pop
push
push
jae
test
stos
push
or
lret
or
popf
int
sub
cmp
or
xchg
mov
pop
xchg
movsl
adc
pop
lods
nop
loopne
mov
xchg
stos
sbb
xchg
xchg
pop
mov
sbb
lds
out
xchg
jmp
movsl
mov
fs
jae
enter
push
adc
xchg
push
sbb
popf
test
push
test
xchg
lret
pop
test
pop
adc
push
ja
sub
pop
lea
push
push
add
pop
adcl
fisubrl
bound
mov
xchg
or
fadd
mov
pop
or
ds
jg
pop
fistl
jns
rcll
sbb
push
xchg
pop
mov
sub
int3
xchg
push
jmp
cmp
dec
cmp
into
inc
lds
lea
and
outsb
add
xrelease
sbb
dec
and
sbb
scas
das
iret
jae,pt
das
daa
cs
adc
cld
stos
outsl
sub
pop
mov
cmpb
mov
mov
push
cli
pop
xchg
daa
push
sub
lea
sub
ljmp
scas
mov
add
inc
cmp
test
mov
lods
jecxz
nop
call
xchg
dec
sbb
test
pop
or
xchg
jge
dec
movsb
adc
cmpsl
rcrl
dec
out
lock
lahf
shl
std
lret
mov
mov
mov
dec
and
adc
jmp
dec
stc
int3
aaa
movsl
push
les
jp
sub
sub
decl
pop
push
cs
stos
jbe
mulb
pop
movsb
and
das
dec
lret
mov
adc
not
dec
int
aam
sarb
clc
sbb
mov
cld
mov
or
sub
rorl
adc
jb
test
leave
xchg
aad
pusha
xor
pop
imul
mov
sarl
adc
push
inc
mov
pop
pop
in
jecxz
cmp
stos
dec
lock
fwait
and
adc
jo
fisubrs
loope,pt
popa
scas
add
sub
dec
jl
movsb
cmc
pop
outsl
sbb
mov
lds
ficoml
sarb
dec
mov
lods
sti
out
or
mov
imull
and
jge
test
lock
ficoms
push
xor
arpl
jb
into
push
fidivl
pop
mov
in
pop
and
and
cmc
push
sarb
mov
mov
inc
pop
pop
ja
xor
xor
sub
sbb
mov
mov
add
jns
xor
mov
movsb
sub
and
pop
loopne
hlt
push
in
loopne
dec
and
ja
nop
mov
cmpsb
jmp
in
adc
movsl
cmpsb
push
cmp
xchg
jmp
inc
push
sbb
pop
cwtl
add
push
mov
fs
cmp
cmp
push
out
xchg
js
in
dec
cmp
and
pop
shlb
shll
jae
pop
andb
fistps
outsb
inc
test
scas
popf
fwait
cmp
popa
push
outsl
in
nop
es
cmpsb
adc
divb
popa
sbb
mov
jg,pn
push
adc
jecxz
aaa
sbb
dec
pop
mov
loopne
xchg
in
inc
jb
jg
add
dec
push
mov
xor
std
ss
xchg
lcall
jns
shll
daa
mov
cmp
inc
into
mov
push
ljmp
xchg
popf
ret
int
pop
push
or
loope
inc
inc
jge
clc
repz
cmpsb
dec
jge
or
mov
xchg
mov
jo
dec
mov
jne
shrl
inc
xlat
andb
adc
and
pop
add
pop
sub
mov
repz
push
test
imul
cmc
scas
dec
scas
icebp
stos
push
fs
arpl
cmp
mov
aaa
jnp
push
pop
push
mov
xchg
push
repz
sub
cmp
jbe
cmp
test
xchg
dec
arpl
jb
mov
and
xor
clc
rorb
dec
dec
jns
out
call
mov
jno
jl
lds
cmpsl
jns
int3
lock
add
mov
nop
je
fistpll
in
mov
xchg
mov
xchg
mov
push
ds
fs
mov
xor
add
xchg
xchg
xchg
push
mov
out
or
data16
add
push
mov
lods
sub
inc
jmp
sbbl
mulb
rcl
outsb
sbb
add
rcr
int
sti
lea
mov
mov
loopne
ss
loope
push
mov
add
mov
sbb
and
push
and
ja
fdivrl
xchg
mov
and
pop
inc
gs
gs
cmc
or
jo
addr16
mov
cmpsb
inc
outsb
pusha
push
or
ljmp
rorl
ret
sahf
orb
inc
mov
pop
loopne
jecxz
cmp
jg
xchg
pusha
in
xchg
sahf
push
mov
cmc
jmp
out
lods
test
mov
adc
xor
lods
add
add
bound
pop
xchg
pop
adc
mov
jmp
mov
sub
ds
jge
loope
push
cwtl
cld
jg
nop
or
divl
addr16
and
inc
mov
and
pop
sub
fimull
lret
pop
cmc
jmp
jmp
les
xchg
push
jbe
fbld
int3
xor
fisubs
fstl
sahf
push
sbb
xchg
and
cmpsl
mov
adc
mov
ds
mulb
adc
vpmacsdd
hlt
dec
lret
and
stos
movsl
jg
inc
outsl
mov
mov
mov
in
xchg
outsl
sub
out
mov
pop
lock
and
scas
pop
fs
je
lcall
xor
stos
inc
fistps
dec
dec
lea
mov
add
aas
and
pop
out
sbb
jge
testb
movsl
or
scas
mov
cld
jp
loopne
sub
and
inc
cwtl
lods
in
int3
movsl
cmp
in
push
pop
sbb
ret
xor
xor
insb
data16
test
dec
pop
stos
pop
leave
mov
adc
cld
add
xor
ljmp
ret
mov
outsl
mov
inc
jecxz
xchg
add
mov
jp
bound
test
js
adc
icebp
insl
pop
jae
outsl
stos
mov
mov
xchg
inc
and
dec
insl
jp
sarl
in
mov
push
repz
into
sub
mov
lods
es
aam
arpl
mov
dec
testl
xchg
pop
fucomi
aas
into
fstpt
pop
bound
icebp
inc
cmp
testl
lods
lock
stos
mov
es
and
mov
mov
xor
push
cmc
and
sbb
pop
add
or
pop
xchg
orl
je
loope
shll
xor
cmovno
jbe
dec
and
into
add
lods
sahf
lret
rclb
mov
adc
xor
cltd
ljmp
movsb
pop
les
aad
and
stc
push
and
setae
inc
scas
das
mov
mov
ljmp
push
leave
and
inc
decl
jecxz
gs
test
xlat
and
fs
mov
jmp
fstpl
xchg
mov
xchg
adc
mov
mov
sbb
scas
imul
lods
movsb
int
push
add
repz
andb
adc
sar
mov
fcmovb
out
xor
repnz
nop
cld
dec
jne
into
movsb
sub
xchg
push
push
pop
rcrb
repnz
addl
xor
imul
or
andnps
es
stc
sub
or
fists
sub
sub
sub
xchg
jg
and
mov
ret
jp
pop
pushf
dec
subb
adc
cmp
push
jne
test
addr16
stc
inc
lcall
pop
sahf
pop
inc
js
out
les
aam
insl
cli
and
or
sbb
adc
xchg
jns
mov
imull
xchg
sub
jno
out
addr16
xor
call
mov
jg
mov
mov
xlat
call
movsb
pop
push
lds
mov
and
sahf
mov
clc
scas
insb
stc
dec
jge
or
push
orl
stc
pop
sbb
lods
sub
or
pop
pop
xchg
fmuls
rclb
push
push
pusha
push
mov
aad
int3
inc
mov
shlb
cmp
push
pop
cmp
sahf
fcomi
jmp
lret
or
sub
test
imul
ret
dec
xchg
fldcw
push
xor
jmp
enter
and
mov
rolb
aas
cmp
in
push
dec
mov
outsb
cmpsl
or
xchg
sub
stc
and
xchg
and
in
dec
push
in
mov
int3
push
icebp
mov
or
add
push
aad
dec
addb
jns
mov
mov
adc
mov
add
test
ja
cli
nop
hlt
add
stc
nop
leave
mov
xor
data16
sbb
add
ja
push
ror
adc
pop
fisubrs
fisubs
or
mov
mov
push
repz
int3
sarl
lret
jns
bound
in
push
mov
cs
pop
inc
sarl
sbb
stc
scas
movsb
xchg
push
aad
dec
fucomip
dec
jb
outsl
jmp
or
in
mov
aad
ret
push
rcrb
xchg
adc
mov
adc
jle
arpl
pop
in
sub
lret
sbb
jecxz
pop
in
pop
ja
or
xlat
dec
mov
enter
mov
jbe
adc
enter
outsl
aaa
add
jmp
sbb
fldl
cwtl
jl
stc
xchg
jecxz
test
rcrl
pop
fldl
stos
mov
add
inc
daa
adc
movsb
stc
scas
aas
inc
sahf
jp
outsb
dec
inc
add
out
add
iret
push
xor
mov
movsb
sub
and
push
xor
repz
sub
bound
push
int
or
pop
jp
pop
add
sbb
pop
fwait
fs
jbe
fiaddl
dec
inc
divb
dec
adc
xor
push
jle
sbb
int
test
jbe
inc
mov
adc
movsb
xchg
sub
or
pop
scas
and
or
inc
imul
xorb
cli
push
outsl
imul
sarb
movsb
add
in
dec
fisttpl
cmpsl
fdivrl
movsb
or
ja,pt
dec
ljmp
cmp
jae
lahf
in
jno
leave
out
frstor
xchg
pop
hlt
add
push
lock
outsl
lods
sub
sbb
in
push
add
jno
adc
dec
bound
jg
dec
bound
sbb
push
popf
fimuls
xchg
test
hlt
push
call
push
push
mov
xchg
mov
movsb
int
sbb
or
sub
push
mov
out
shlb
loopne
andl
or
or
pushf
sub
popa
mov
xorb
push
loope
push
fstpl
hlt
pop
mov
pusha
frstor
sub
adc
mov
dec
hlt
stos
aas
insb
push
add
push
lret
adc
inc
loop
icebp
in
dec
pop
stos
mov
pop
sbb
loopne
addr16
out
or
mov
push
mov
jge
push
and
mov
pop
pop
orb
ds
push
in
jge
push
push
mov
lods
mov
mov
ficoms
sub
push
mov
mov
stos
mov
mov
test
add
fbld
aaa
shll
mov
insl
insl
xor
cmp
xor
xchg
sbbl
and
lret
pop
outsb
rcll
push
sbb
sub
adc
add
aas
clc
mov
mov
sbb
cmp
scas
movsl
repnz
popa
lds
sub
mov
and
and
out
and
mov
push
push
fdivrs
movsl
in
pushf
mov
pop
shrb
cld
cbtw
je
jle
mov
add
inc
add
sub
call
adc
mov
pop
das
dec
dec
sub
punpcklwd
aam
sbb
imul
cmc
xor
sbb
repz
add
pusha
sub
lret
mov
jb
mov
xchg
adc
outsl
push
sbb
leave
mov
jg
jmp
std
inc
xchg
pop
cld
push
lds
call
enter
cltd
jge
jle
popl
pop
sub
push
and
clc
xor
sbb
repnz
lret
loope
xchg
jno
loope
add
pop
cmp
ret
insl
fcmovu
xor
sbb
adc
lret
mov
add
dec
xor
test
dec
test
xor
into
add
xlat
cwtl
cmp
sub
je
mov
sub
and
jecxz
mov
int
out
lahf
loopne
movsb
es
pop
js
movsb
xor
int
repnz
mov
lret
or
adc
incb
push
dec
add
sub
xor
push
pop
aas
push
cmpsb
xor
into
push
inc
nop
insl
mov
shlb
adc
xchg
push
or
xchg
int
push
xlat
xor
xor
out
mov
testb
fistpll
inc
dec
pop
jnp
and
pop
movsl
sub
sub
cmpsl
lock
dec
xor
shlb
adc
aaa
jge
dec
repz
dec
xchg
outsl
sub
loope
pop
mov
imul
mov
divl
dec
sahf
mov
xor
aaa
subl
xor
push
push
dec
add
movsl
jp
es
sbb
subl
xchg
dec
cld
shrl
mov
gs
ret
int3
shrb
and
inc
fldl
push
cli
inc
mov
or
daa
inc
daa
mov
aad
add
jge
out
popa
int3
out
add
in
xor
xor
xchg
mov
cmp
push
xchg
cmp
jo
push
add
outsb
jge
fstpt
jg
xor
dec
mov
shlb
mov
scas
dec
sbb
andl
sbb
leave
xchg
pusha
loopne
lcall
divb
jno
mov
mov
clc
dec
push
pop
inc
movsl
dec
movsl
inc
cmp
lods
sub
outsb
sahf
mov
xor
mov
lahf
push
stos
push
xchg
push
lea
pop
jg
or
scas
sbb
pop
mov
hlt
xchg
aam
and
jne
mov
push
leave
aad
ret
cmp
fildll
pop
fsts
data16
repz
mov
cmc
sbb
dec
imul
xor
xor
or
into
flds
mov
in
inc
push
mov
xchg
loope
or
sbb
divl
test
push
push
dec
xor
fwait
pop
dec
jns
dec
mov
mov
js
lea
popa
and
testb
fisubrs
and
cmp
xlat
pmulhw
test
add
jg
pop
aaa
xor
popf
cmp
jg
in
pop
nop
jle
xchg
jae
adc
jl
mov
xor
xchg
jge
and
shll
jns
or
mov
mov
mov
ret
jnp
and
jge
stos
mov
js
cli
sub
cmc
push
xor
aas
or
test
xchg
xchg
push
adcb
cmp
push
mov
enter
loop
movsb
je
mov
mov
imul
jns
pop
lea
sub
cwtl
mov
arpl
cmpsb
cld
mov
push
push
or
and
sti
cltd
jle
or
push
inc
js
pop
fiadds
jb
cmp
mov
in
leave
lods
cmp
test
fwait
and
dec
into
jl
xchg
int
inc
sub
gs
cld
jbe
jl
sbb
loopne
std
sub
pop
jnp
cmc
stc
in
mov
inc
pop
rcll
in
cmp
jmp
outsl
mov
pusha
cld
inc
mov
inc
xor
jno
fadds
fwait
sub
fmuls
das
xchg
push
addr16
fidivl
sub
ljmp
jnp
add
xchg
repz
push
out
pop
out
lock
mov
mov
and
test
test
add
pop
out
adc
push
lock
pop
pop
lcall
test
repnz
jnp
movsb
xor
cmp
and
cld
push
inc
ss
fsubs
int3
adc
dec
ljmp
cmp
loop
outsb
in
cmp
adc
mov
lods
mov
scas
mov
mov
xor
or
stos
inc
stos
insb
sbb
les
pop
clc
mull
xchg
loopne
outsb
adc
cwtl
icebp
jno
push
jg
out
mov
ret
add
shrl
push
sub
test
shlb
adc
add
iret
mov
and
mov
jbe
jge
cmpsl
adc
sbbl
push
cmp
dec
push
jp
enter
cmpsb
ret
out
insl
jmp
and
sahf
xlat
jp
or
cmp
std
subb
sub
aam
arpl
pop
xor
or
hlt
out
mov
insl
in
dec
enter
cs
mov
leave
xor
cltd
cmc
pop
mov
std
sbb
pop
inc
dec
push
fwait
int
inc
and
in
jae
inc
fistl
ljmp
and
or
inc
pop
push
punpckhdq
repz
inc
xor
fdivrp
push
add
adc
loop
xchg
ja
gs
xchg
cmovno
inc
nop
lret
sub
push
mov
xchg
xor
jae
fnstenv
pop
push
mov
leave
xchg
jg
shl
pop
mov
push
in
gs
sbb
pop
idivb
jns
xlat
stos
lock
add
inc
out
je
push
adc
xor
mov
adcl
xchg
rol
out
mov
jp
pop
xor
ljmp
xchg
mov
decb
lea
xchg
add
cltd
idivl
pop
insl
xor
loope
fs
nop
mov
and
mov
add
fildll
mov
xor
jg
adc
dec
cmpsb
sub
arpl
stos
in
adc
mov
lods
xorl
dec
cwtl
push
mov
pop
cs
or
xchg
shll
jg
mov
jbe
outsl
mov
cld
and
sbb
or
push
sbb
fimull
mov
hlt
adc
outsl
or
mov
js
jbe
mov
jmp
sbbl
cmpsb
or
lcall
jnp
jnp
popf
rcrl
arpl
add
dec
movsb
les
push
cmp
dec
mov
mov
lret
sahf
xchg
add
push
shlb
push
sub
clc
ret
jb
movsl
inc
stos
inc
jl
push
cli
jmp
lcall
insb
in
scas
xor
test
dec
dec
nop
jmp
or
cld
int
cmp
stos
inc
or
ds
xchg
cmpsl
aam
xor
mov
out
xchg
cmp
cmp
inc
ja
aad
inc
dec
xchg
loopne
insl
je
lods
nop
divb
or
mov
scas
pop
add
test
xor
push
push
pop
sub
ror
cmpb
add
sahf
xchg
adc
imul
cmc
cwtl
mov
gs
lret
int
ret
fsubs
or
push
jge
fisubl
outsl
jle
push
jo
sti
outsl
insl
cwtl
fisubrs
lret
mov
push
arpl
pop
mov
fwait
mov
push
jg
cmp
icebp
cmp
negb
cmpb
mov
sbb
sbb
jp
bound
or
mov
or
mov
nop
jo
pushf
ret
mov
inc
aaa
xchg
repz
dec
push
loopne
xlat
jae
into
xor
adc
push
sbb
subl
adc
jno
lock
mov
mov
test
in
push
outsl
mov
mov
and
pop
outsb
cmp
test
mov
and
outsl
sar
jmp
jno
jl
in
dec
xor
xchg
inc
add
nopl
roll
dec
jl
cmp
cmc
mov
xchg
fs
fnstcw
ret
mov
jb
das
test
cmpsb
jae
add
xor
cmp
sbb
sbb
lahf
jne
test
aas
daa
imul
lea
mov
test
xchg
mov
fbld
mov
frstor
arpl
cmc
cmp
mov
add
das
xchg
arpl
out
into
add
lock
ret
std
push
mov
sbbl
fs
jle
movl
jno
sbb
fldl2t
das
out
sub
in
out
adc
sbb
lock
cs
mov
ljmp
push
pop
xchg
movsb
sbb
or
inc
cs
jb
test
or
xchg
jmp
out
pop
xor
popf
push
or
stos
std
ficoml
dec
jae
rcr
in
cmp
enter
sahf
fbstp
pop
xchg
fiaddl
inc
xrelease
mov
or
iret
fsubs
icebp
xor
adc
sti
cmp
out
xor
xchg
adc
test
mov
mov
pop
iret
lcall
ror
add
cli
ss
daa
xchg
mov
arpl
aad
and
neg
xchg
sbb
add
movsl
jb
lahf
lods
inc
in
mov
les
pop
movsb
sti
or
sarl
sbb
jnp
sub
mov
xchg
jne
mov
cmp
jmp
dec
mov
jmp
cmc
sbb
mov
or
pop
pop
imul
out
adc
jecxz
scas
adc
pop
jle
sahf
aad
push
fcmovnbe
pop
dec
and
sbb
cmp
or
jmp
mov
jmp
aam
sbb
mov
daa
icebp
test
addr16
fdivp
xor
inc
int3
adc
cltd
push
xchg
ds
subl
mulb
mov
fildll
rcll
jge
adc
dec
dec
rcr
iret
push
rorb
xchg
stos
in
push
mov
nop
inc
idivb
sub
jnp
ret
push
daa
lret
jle
jae
enter
cmpsb
pop
data16
dec
xchg
std
test
sbb
sahf
lcall
push
jp
jns
push
shlb
outsl
xchg
rorl
out
xorl
adc
jno
cmpsl
inc
jbe
shl
jo
out
mov
pop
fistl
mov
mov
in
imul
paddw
mov
pop
mov
cmp
pop
pop
xor
jmp
mov
cmc
call
pop
and
xchg
dec
push
clc
popa
or
clc
push
lahf
jns
jae
iret
sbb
pop
mov
scas
add
fmuls
xor
pop
inc
loop
and
fcompl
inc
mov
mov
or
daa
dec
mov
shl
into
jmp
test
nop
das
jle
inc
shl
pop
fdivs
aaa
sbbb
popf
fisttpll
mov
push
push
fdivs
rcr
pusha
fdivr
sbb
inc
xlat
aad
hlt
cmc
inc
aam
push
xor
sti
adc
aad
or
mov
mov
ljmp
flds
push
cmp
movsb
out
cld
push
xor
add
mov
mov
ret
jnp
test
sub
in
int3
outsl
jmp
pop
xchg
push
pop
aad
mov
mov
and
pop
inc
push
imul
popa
negb
xor
sbb
insb
mov
dec
cwtl
add
fildll
aad
loop
pop
cmpsb
jbe
lret
test
fidivs
xor
mov
cmp
stos
les
pop
jg
push
jns
dec
outsl
std
xor
je
mov
iret
je
jmp
aam
ret
ja
imul
pop
int
xchg
xchg
sbb
fdivl
addr16
cwtl
lret
xchg
sub
sub
sub
int3
out
stos
shl
mov
pop
adc
push
das
jmp
dec
orb
jae
mov
mov
jl
andl
in
mov
push
xchg
stc
pop
mov
das
add
dec
mov
mov
pop
sub
sbb
add
and
xor
xor
out
testb
cmpl
sbb
loop
adc
sub
mov
sbb
pop
scas
lods
push
cmpxchg
sub
lahf
pop
mov
lret
fwait
je
popf
jmp
js
out
test
sahf
lcall
bound
addr16
mov
push
xchg
rcrb
ja
push
lret
mulb
mov
repz
mov
adc
aam
cs
lea
jmp
jb
inc
dec
mov
fwait
lods
stos
int3
cmc
aam
lcall
ljmp
in
out
jne
in
mov
push
cmpsb
dec
movsl
fldcw
sbb
dec
std
dec
mov
scas
mov
mov
jno
aad
int
adc
pop
je
lea
and
aam
lock
fldt
fs
add
jb
stos
sahf
inc
xor
xchg
imul
ret
rclb
pop
sbb
mov
mov
outsb
sbb
pop
das
outsb
mov
bound
movsb
sbb
add
bnd
mov
ficomps
jo
sbb
xchg
loopne
cmc
stc
push
mov
arpl
je
imul
jl
mov
outsb
call
mov
addl
pop
das
jb
fsts
loope
test
out
loopne
das
arpl
push
xor
pop
push
xchg
scas
loop
xor
jp
sarl
fists
pop
sahf
lcall
xchg
pop
cmp
or
jnp
daa
push
sub
pop
and
je
inc
orb
enter
enter
inc
cld
push
out
dec
lahf
loop
sub
in
lret
movsb
add
push
sub
add
sbb
movsb
sahf
imul
push
and
sub
aas
out
lds
cmp
pop
lcall
orl
stc
mov
pop
cmpsb
dec
push
and
xor
es
fadds
or
dec
jecxz
push
fistpll
push
sub
daa
iret
mov
lock
or
insb
jns
ja
jp
fstpl
mov
stc
loop
nop
das
je
or
mov
mov
dec
cmp
mov
fcomps
imul
xchg
pop
sub
adc
xchg
cwtl
sbb
add
jg
push
shll
movsl
rorl
cmpsl
mov
cmpsb
mov
pop
pop
int
dec
arpl
popf
xchg
and
add
clc
sub
gs
les
out
sahf
inc
pop
loop
pusha
add
fadds
test
or
in
cmpl
add
mov
and
iret
sub
je
iret
sbb
pop
jno
cwtl
push
aam
jecxz
dec
mov
out
pop
mov
cld
lods
les
ret
mov
or
outsb
push
dec
push
mov
xor
cltd
and
xchg
test
mov
lret
cltd
push
mov
sub
xlat
call
fildl
dec
dec
mov
lcall
mov
pop
sub
pop
hlt
sub
adc
push
nop
xchg
incl
arpl
scas
inc
or
imul
jl
aad
mov
adc
pop
pop
lock
ficompl
out
sbb
aas
bound
mov
test
xchg
cmp
mov
fdivs
sub
xchg
popa
in
xchg
xchg
in
mov
popf
or
mov
adc
test
mov
push
xor
mov
cmp
or
xor
or
insl
sub
lods
enter
mov
loope
ja
imul
mov
adc
and
popf
jns
mov
movsb
int
ljmp
inc
cld
popf
jb
jb
xor
es
and
loope
add
loopne
xchg
stc
and
cmp
push
outsb
pop
mov
rcr
sub
in
subb
sub
je
jecxz
sbb
stc
scas
lcall
insl
lret
shrb
add
adc
sub
decb
lds
push
clc
cmp
imul
mov
test
pop
sub
lock
ljmp
lahf
dec
adc
in
sbb
add
out
xchg
repz
in
jecxz
inc
cmp
jae
stos
sbb
mov
fwait
sub
dec
inc
enter
les
lahf
xchg
or
xor
mov
iret
mov
loop
fs
ja
xor
aam
pop
repz
xchg
aad
loop
jo
mov
cmc
cmp
cmp
rcll
pushf
clc
sbb
fidivrl
movsl
and
and
ja
iret
jo
pop
lret
push
sub
xchg
jnp
adc
jg
gs
push
scas
mov
jne
and
cmp
pop
stos
lahf
xchg
mov
les
xor
jg
sub
adc
mov
dec
shll
push
mov
stc
cmp
push
scas
pop
mov
add
cmp
add
mov
sahf
push
cmc
mov
push
call
adc
xor
arpl
dec
sub
mov
stos
dec
mov
add
repnz
adc
fadds
iret
in
xchg
les
outsl
mov
fcomp
pop
test
mov
mov
inc
addl
pop
push
sti
cmp
add
fstl
push
stos
fs
outsb
add
jb
mov
fnstsw
push
sbb
lods
xchg
jnp
mov
cmc
and
mov
sub
adc
lds
andb
lret
dec
lret
push
inc
test
imul
jae
pop
das
cmc
into
fnsave
mov
mov
jb
fistps
xchg
mov
stos
add
test
lds
inc
test
fs
mov
into
push
xor
jecxz
pop
enter
dec
in
xor
jmp
js
jle
ret
and
movsl
pop
into
dec
pop
or
mov
outsb
dec
xor
jmp
loopne
mov
pop
popf
adc
inc
insb
adc
jmp
enter
xchg
or
mov
gs
push
scas
ss
js
ja
sub
fs
aad
std
add
pop
mov
or
loope
or
mov
popl
in
cmp
pop
mov
outsb
inc
fidivl
bound
xchg
add
scas
adc
scas
mov
xor
cli
inc
iret
lahf
rol
bound
dec
jb
shr
inc
adc
mov
out
cli
sbb
cld
xchg
popf
xor
cvttps2pi
pop
imul
rolb
shrb
sub
dec
dec
or
xchg
jnp
jge
cwtl
and
nop
cs
jno
push
jp
push
dec
pop
into
mov
xor
adc
in
ret
xchg
cmc
dec
je
orl
rol
test
in
sbb
test
outsl
pop
outsb
pop
mov
ret
inc
out
gs
xchg
mov
pop
movsb
sbb
ret
sub
fcoms
call
mov
pop
and
loope
jge
rorb
xchg
add
insb
mov
jmp
cmp
insl
lret
jnp
scas
iret
andl
fs
cmpsb
popa
aas
rolb
and
inc
jbe
and
ja
jp
stos
divl
mov
sahf
lock
jbe
sub
sahf
add
xchg
mov
negl
cmp
pop
lret
enter
ds
mov
inc
sbb
cwtl
stos
inc
sti
and
adcb
mov
inc
push
dec
mov
mov
js
xchg
into
adc
add
cmp
dec
add
jbe
loope
ja
mov
sahf
subb
sub
push
popa
adc
xlat
jg
fwait
cmp
lea
or
repz
adc
arpl
jmp
and
int3
popl
sbb
mov
jle
shr
leave
push
cmc
call
mov
push
loop
aaa
mov
sub
arpl
push
dec
add
lret
push
repz
sahf
fdivl
adc
repnz
ljmp
cmp
leave
and
pushf
dec
fisttpll
cmp
nop
pop
popf
adc
adc
pop
rclb
imul
mov
repnz
mov
xor
cmc
xchg
xchg
andl
outsl
and
xchg
lods
push
loop
in
pusha
hlt
call
push
mov
push
add
stos
push
pop
mov
push
inc
nop
popf
add
repnz
jl
les
sarb
and
mov
lret
pusha
div
or
outsb
jbe
xchg
cmp
mov
pushf
mov
inc
adc
sbb
hlt
sarb
jl
pmaxsw
setno
xor
insl
xorb
cmp
push
outsl
fidivl
and
and
push
stc
iret
sbbl
sti
pop
outsl
shlb
push
fimull
adcb
inc
popf
mov
mov
cmp
int3
lret
or
push
mov
xchg
negl
stc
and
sub
in
shrl
sbb
rolb
imull
je
or
icebp
mov
mov
mov
dec
or
jp
sub
mov
adc
push
lret
sub
jmp
jecxz
popa
out
mov
out
lods
js
fsubr
movsl
stc
add
mov
cmp
enter
and
push
shl
lods
cmp
mov
cmp
bound
mov
jg
roll
xchg
jno
bound
arpl
mov
idivb
pop
out
fistpl
neg
test
ljmp
aam
add
shll
lret
sbb
fwait
mov
in
jns
xor
and
sub
jp
fists
shl
adc
lock
sbb
cmpb
mov
mov
sbb
js
jno
fstpt
jl
lock
xor
mov
ja
dec
es
fwait
adc
mov
add
lea
jge
jnp
nop
mov
push
mov
stos
popa
cmp
addr16
mov
pop
jle
mov
xor
out
sbb
out
das
push
js
adc
insl
add
inc
sub
fsubrs
shlb
mov
add
loop
jmp
jg
sbb
xor
aaa
push
daa
cld
int3
out
ret
cmp
or
jnp
lcall
lret
fsubrl
addr16
dec
addr16
insb
rcll
or
or
push
movsb
jns
rolb
jmp
lds
push
mov
or
or
lret
imul
mov
mov
nop
call
ja
inc
nop
pop
fucomip
pop
std
stc
pop
mov
mov
in
pop
mov
in
scas
movsl
fstl
fidivs
mull
inc
repnz
lcall
fildl
ds
mov
mov
pop
nop
subl
inc
leave
pop
les
fsubrs
sbb
aas
push
mov
jo
jns
sub
pop
push
or
add
mov
sbb
inc
lcall
js
inc
mov
cmp
adc
jg
lret
addr16
pop
cs
je
jbe
in
pop
fsubrs
jle
xor
sbb
xor
mov
xor
dec
xchg
sub
clc
jnp
sbb
cmpsb
in
aaa
jns
lea
xor
jae
sahf
aad
addb
or
sahf
jmp
into
mov
shrb
stos
js
mov
push
sub
jl
ja
push
cmp
xor
aas
xchg
fs
inc
jo
fisubs
dec
xor
jecxz
mov
cmp
and
pop
into
lds
ja
add
into
cmp
fisubl
jns
lahf
insl
mov
xor
dec
push
sub
or
in
sub
mov
out
repnz
pop
aam
into
in
mov
push
jge
jo
nop
and
xor
lock
and
sub
push
sbb
hlt
sti
jp
xor
pop
mov
sbb
mov
iret
xchg
pusha
loope
popf
movsl
fst
iret
int
js
sbb
or
repz
shrb
mov
sbb
jne
jbe
test
outsb
out
or
rorb
pushf
in
scas
fidivs
cmp
test
das
divb
mov
out
in
in
cmp
push
popf
es
rorl
mov
sub
test
in
xor
lret
push
sub
cmp
pop
jl
pop
dec
pop
mov
insb
cmp
ret
jne
push
ja
es
ficompl
iret
pop
out
imul
add
mov
icebp
add
push
dec
loopne
mulb
sbb
aaa
sub
mov
cmp
int
cld
pushf
mov
dec
add
xor
mov
dec
jmp
and
psubsw
push
int3
jns
daa
cmp
xor
mov
movsl
inc
inc
mov
xor
pop
xor
lahf
fcomi
pop
mov
loopne
fwait
jb
test
aaa
dec
mov
mov
and
addr16
stos
stc
loop
sub
fisttpll
sub
int3
mov
cmp
inc
push
nop
push
mov
inc
xchg
xor
cmp
cmpsl
add
addr16
cmp
ret
cli
xlat
in
scas
lcall
adc
cs
push
pop
movsl
stos
dec
mov
outsb
aam
add
lods
int
or
sub
jmp
loop
xor
xchg
sub
lods
sahf
daa
popa
jg
ljmp
std
test
ja
sub
inc
mov
popa
leave
int
fmulp
lcall
or
ds
loope
lds
imul
fwait
dec
inc
cmpsb
and
rcrb
pop
mov
orl
je
pusha
inc
cmovbe
in
mov
aas
into
popa
bound
mov
mov
mov
add
mov
push
push
mov
pop
mov
jns
pusha
ds
pop
xchg
in
pop
dec
xor
jl
scas
push
adc
mov
stos
repz
cmc
mov
mov
mov
inc
cmp
dec
or
test
adc
clc
cltd
nop
out
es
cmp
add
xchg
lods
cmp
jl
pop
xor
sbbl
test
in
sbb
push
mov
insl
or
xchg
nop
rolb
xchg
or
dec
sub
into
fstpl
sbb
rol
add
cmp
pop
add
ljmp
mull
lret
adc
jns
test
xchg
popf
pusha
push
and
loope
out
jg
or
cmp
arpl
or
and
addr16
push
sbb
pop
cwtl
hlt
loope
pop
dec
stos
cli
fcom
xor
xor
shlb
lock
jb
movsl
cmp
push
loopne
lea
pop
test
into
push
in
xchg
outsb
dec
adc
popa
sahf
adc
imul
pop
jo
out
dec
jge
dec
mov
test
lods
or
dec
lcall
lret
push
push
lock
and
fnstsw
pop
out
xor
arpl
jl
andl
fsts
out
cmp
adc
jbe
les
jbe
mov
call
shll
push
enter
inc
icebp
cmpsl
cmp
inc
xor
mov
int3
aad
pop
and
rcl
or
adc
push
int3
rol
idivb
mov
test
pop
adc
stc
sub
inc
push
gs
pushf
gs
movsl
push
mov
sbb
aad
inc
xlat
xor
push
mov
mov
cmp
push
dec
pop
mov
cmp
lods
cs
fcomps
and
adc
adc
cmp
lret
je
lahf
and
fdivrl
inc
cmp
je
aad
mov
sub
fcoms
and
xchg
das
iret
scas
imul
xchg
icebp
and
xor
jl
movsb
orl
call
iret
test
xchg
sbb
pop
jecxz
jae
movsl
inc
jbe
adc
or
lods
shl
rol
popa
ret
and
pop
xchg
push
dec
jo
jmp
dec
out
xor
repnz
mov
push
insb
fldt
jns
int
and
add
insl
popl
stos
ret
mov
daa
cmc
outsb
cmp
dec
clc
pop
test
loop
ja
xchg
negl
xor
push
imul
shrl
mov
arpl
push
movsb
push
or
das
mov
jne,pn
rcr
mov
sbb
mov
int3
leave
movsl
adc
nop
mov
xor
fisubl
cmp
out
mov
shrb
mov
fadds
cmc
ds
push
mov
loopne
xchg
inc
orl
sti
cld
adc
mov
leave
mov
xor
sub
lcall
xchg
std
add
adc
pop
jle
and
clc
push
jmp
lcall
pop
xchg
xor
adc
dec
stos
inc
loope
int3
inc
in
test
call
test
add
inc
lret
xchg
arpl
mov
push
or
les
jb
aas
jge
pop
mov
xchg
push
and
daa
jg
test
insb
and
cmpsl
scas
lds
imul
sbb
mov
js
cmp
test
add
jne
cmp
sbb
pop
xor
inc
gs
adc
push
in
or
sub
lods
push
ror
cmc
mov
or
bound
pusha
leave
and
cmp
xchg
jmp
sub
push
out
mov
dec
sbb
stos
and
insl
sub
mov
add
xchg
pop
mov
mov
jb
cmc
mov
repnz
faddl
sub
mov
jmp
decb
mov
pop
xor
shll
lret
sub
das
push
addr16
gs
movb
cld
test
xchg
cmp
aas
pop
xchg
loope
enter
mov
cwtl
adc
cmc
movsl
pop
jo
clc
mov
lds
aad
cmpsb
outsb
xor
pop
mov
das
aam
jae
movsl
mov
jecxz
jnp
sti
dec
inc
cmpsb
mov
ja
sub
mov
arpl
mov
into
aam
mov
cmp
cmc
inc
mov
fistps
test
ja
mov
idivl
sbb
and
call
lds
xchg
xchg
inc
cmp
stos
mov
jnp
je
and
dec
aaa
notl
jae
pusha
xchg
xorb
sub
incb
and
cld
sub
lea
push
xchg
or
addb
or
push
std
pop
xchg
cmpb
mov
and
fs
cld
adc
inc
mov
popa
and
stos
out
mov
lcall
arpl
aad
adc
xchg
arpl
pop
mov
stos
loopne
xor
pop
paddd
imul
ret
pushf
mov
or
lret
lret
push
cli
movsb
mov
jno
xchg
in
xlat
loop
cltd
jge
dec
mov
mov
and
cmp
sub
das
inc
xor
xchg
insb
popl
scas
lret
pop
das
sub
or
das
cmp
jmp
pop
jno
punpckhdq
pop
push
cmp
xlat
and
aad
mov
jle
inc
cmp
jne
add
out
shll
mov
out
dec
mov
out
xchg
inc
dec
data16
mov
iret
push
popa
mov
pop
ljmp
sub
pusha
jne
xor
pop
xchg
push
or
adc
int3
jo
inc
cwtl
lcall
int
clc
xchg
lret
mov
call
jecxz
aaa
mov
add
inc
int3
jge
in
faddl
push
xchg
lea
enter
mov
aad
sub
xchg
std
dec
xor
scas
pop
mov
stos
mov
ficompl
and
fwait
or
pop
adc
mov
fistl
orb
outsl
push
mov
leave
xchg
shrb
push
jmp
push
cwtl
push
iret
add
xor
dec
push
fwait
mov
stc
push
cmpsb
in
out
mov
mov
push
jle
call
pop
and
xor
push
mov
ljmp
mov
daa
jne
sti
xchg
jg
cmp
in
dec
loopne
cmp
loop
icebp
mov
sbb
xchg
inc
pop
sbb
mov
mov
in
es
arpl
push
int3
ss
in
movsb
inc
dec
out
fimuls
std
jmp
lock
push
cmp
fwait
pop
jmp
jo
stc
fwait
mov
inc
imul
cltd
lcall
loop
stc
in
xor
mov
jp
sub
dec
ds
lcall
lahf
cld
cmpsl
cmp
inc
test
sub
cwtl
and
mov
data16
sub
sarb
ret
sub
cmp
sti
aaa
fs
jno
cwtl
inc
fs
pop
outsb
dec
mov
add
cmpsb
adc
mov
cwtl
xchg
mov
push
movsb
stc
or
push
mov
xchg
imul
popf
adc
fs
jns
and
fists
fsub
and
jecxz
inc
xor
inc
adc
mov
fisttps
cs
out
mov
div
int
ret
pop
movsb
ljmp
idivl
pushf
pop
or
mov
jmp
daa
ss
mov
mov
adc
or
push
or
icebp
dec
loopne
push
inc
and
and
js
shlb
addr16
mov
or
pop
lret
jnp
ja
ss
push
int
xchg
mov
call
mov
shlb
shrb
daa
pusha
push
xor
sbb
xchg
leave
add
shl
push
jge
sbb
adc
and
lea
push
sub
lods
jl
jp
dec
stc
je
imul
loopne
leave
mov
or
negb
mov
ss
pop
pop
in
cli
in
out
jl
add
lods
push
movsl
or
mov
xlat
lret
pop
fistpll
popa
mov
sti
jno
popa
push
leave
pop
jge
jge,pt
mov
mov
in
sub
in
daa
scas
stos
mov
jbe
dec
jb
inc
add
cmp
mov
and
cmp
popl
int3
dec
je
insl
dec
add
push
addr16
insb
sysexit
roll
xchg
push
loopne
test
outsb
jp
mov
arpl
in
mov
inc
lret
mov
ret
xchg
sahf
pop
cmp
xchg
das
jle
pushf
push
sbb
test
mov
mov
mov
es
add
mov
ljmp
mov
cmp
push
int
cmp
ja
lods
ret
mov
inc
loop
movsl
mov
xchg
loop
fs
fdivs
imul
pop
scas
sbbb
sbb
leave
mov
jmp
mov
and
test
jno
mov
push
pop
inc
mov
sub
ss
dec
rcr
fidivrs
dec
jg
add
add
pusha
int3
repz
inc
xchg
leave
mov
sub
aam
je
and
xorl
movsl
push
xorb
cmpsb
imul
mov
lds
jo
jg
mov
mov
xchg
mov
mov
ljmp
lods
jmp
fcoml
jne
adc
insb
xor
out
cmp
pop
xchg
xchg
mov
hlt
xchg
and
mov
fcompl
lcall
aas
or
addr16
mov
xchg
shll
push
faddl
pop
dec
das
adc
inc
inc
sbb
push
sbb
lcall
add
pop
andb
cmpsl
les
divl
inc
iret
loopne
into
xor
dec
addr16
or
data16
sbb
jb
sbb
movsb
add
sti
add
std
int
cmp
inc
pop
inc
or
dec
jne
inc
adc
and
push
mov
xor
add
js
xor
loope
out
inc
push
jne
pop
xchg
mov
shlb
mov
aam
cld
lods
cmp
xchg
imul
xchg
sahf
and
ss
sub
ret
mov
mov
popl
mov
loop
sub
adc
mov
pop
xor
sbbl
ss
or
ret
mov
jl
cmp
xor
inc
push
jmp
adc
ds
and
inc
loop
mov
dec
and
imul
inc
and
cmp
lods
mov
jb
in
adc
mov
inc
or
xchg
mov
inc
mov
lahf
fistps
cwtl
test
push
icebp
mov
add
and
adc
cs
ds
mov
loop
imul
mov
jnp
out
ljmp
mov
aaa
nop
mov
loope
rorb
push
and
dec
push
insl
mov
mov
fsubl
call
test
xchg
add
orl
cmc
add
lods
push
aaa
pop
or
movsl
mov
je
stc
lret
jecxz
dec
lods
imul
and
dec
cmp
test
bound
out
mov
movsl
sbb
adc
inc
fsubl
jns
ljmp
mov
or
frstor
fcomps
add
outsl
dec
test
and
adc
mov
inc
adc
dec
push
test
sub
fs
data16
mov
mov
add
imul
xchg
push
or
sub
push
shlb
dec
xor
mov
imul
inc
test
outsb
lcall
or
call
push
enter
dec
jnp
add
ss
mov
lods
fwait
in
pop
call
and
cld
jge
out
mov
mov
pop
and
mov
loopne
jo
cmp
ljmp
cli
xchg
mov
rcll
stos
scas
lret
out
mov
shlb
xchg
fsubr
push
subb
and
cmpsl
inc
repnz
mov
test
outsb
aaa
mov
add
mov
lods
addl
pushf
sub
dec
sub
inc
fisttpl
and
fdivr
mov
dec
xchg
inc
fsts
je
je
insb
ror
lock
clc
push
outsl
ljmp
imul
pop
cmp
sub
jmp
xchg
dec
mov
pop
lods
adc
rorl
inc
in
adc
pop
fistpl
jecxz
lahf
pop
dec
leave
in
sbb
pusha
push
in
repnz
xchg
aam
push
popf
jmp
lods
cmp
dec
leave
test
sbb
imul
push
in
add
cmpsl
jmp
test
add
fldt
fsts
icebp
mov
scas
test
push
xor
xchg
adcl
pop
cwtl
loopne,pt
mov
push
pop
push
ret
sub
daa
mov
inc
das
xor
push
and
adc
fs
add
jbe
int3
push
in
push
icebp
mov
fldl
sbb
test
call
dec
jno
push
mov
push
in
insb
adc
cwtl
scas
jmp
jecxz
arpl
dec
xchg
rorb
inc
test
add
xor
movl
pop
stos
int3
lods
dec
jmp
adc
frstor
je
fdivl
inc
pop
mov
add
xor
adc
ja
idivl
rclb
xor
dec
jo
add
inc
mov
cmpsb
mov
jb
shl
ret
mov
sub
inc
loopne
fidivrl
pop
fisubrs
mov
pop
iret
shrb
lods
mov
imul
cmpsl
push
add
outsl
inc
pop
dec
mov
es
je
std
push
push
xor
dec
into
lcall
xchg
mov
jg
clc
and
and
in
jg
outsl
scas
dec
mov
pop
jl
and
cmc
aas
mov
mov
cmp
or
or
add
pop
add
call
xchg
fadds
add
xor
or
sarb
outsl
mov
movsb
mov
repnz
mulb
loop
or
pushf
push
imul
xchg
test
xor
fwait
or
cli
inc
enter
iret
jge
inc
inc
iret
mov
mov
mov
and
in
push
inc
scas
xor
adc
adc
push
data16
cmp
pop
es
and
and
mov
es
test
pop
adc
push
outsl
clc
sti
les
dec
neg
or
loopne
jb
add
leave
push
push
and
pop
fcoml
jo
jno
ja
rcrb
jnp
imul
xorb
push
dec
mov
xor
lcall
fldl
or
jmp
clc
icebp
loop
push
mov
mov
xor
mov
lock
mov
mov
adc
sbb
cmp
push
pop
adc
idivl
add
fmull
xor
xor
dec
cmp
cwtl
pop
fdiv
faddl
xchg
bound
lea
call
insl
jnp
jo
out
rcll
rolb
or
push
push
sbb
mov
repz
dec
sbb
ret
rcl
xchg
xchg
cmp
cmpsl
es
lock
pavgw
fnsave
add
fisubl
clc
push
push
fsubs
pop
push
xchg
jl
popa
test
sub
in
ret
out
pop
js
aad
and
pop
movups
and
fs
sbb
push
lcall
int
fdecstp
adc
xlat
movsb
xorb
in
movsb
push
cltd
add
addr16
mov
fistps
pop
neg
add
fidivs
mov
push
push
sub
test
cmpsb
push
xor
xchg
out
movsl
fildl
jg
icebp
dec
push
mov
cli
shrl
ja
mov
jle
cmp
shrl
movb
or
mov
mov
jb
xor
inc
mov
pop
inc
pop
fucomi
fldcw
sarl
loopne
jb
hlt
mov
or
push
mov
imul
cmpsl
stc
repz
push
mov
lea
mov
add
rolb
cmp
ja
add
lret
in
cltd
add
lret
mov
adc
mov
pop
add
addr16
ret
inc
mov
dec
inc
cmpsb
loope
mov
adc
cld
push
push
mov
pop
cmpb
mov
fsubrs
inc
jb
adc
sahf
jge
cmc
dec
cld
sbb
out
jns
dec
bound
xchg
push
mov
mov
inc
sub
test
mov
inc
int
gs
fildl
and
or
sub
cmp
jnp
sbb
adc
pop
ftst
mov
jo
xchg
addr16
sub
dec
dec
adc
stos
scas
or
call
xor
mov
call
repnz
xor
and
jl
scas
jecxz
arpl
add
cmp
mov
inc
cmp
icebp
arpl
shll
cmpsl
cmp
pop
inc
pop
sub
push
jge
adc
je
adc
ds
pop
cmpsl
mov
jb
sub
adc
sbb
lahf
repnz
jo
mov
mov
mov
mov
popf
pop
add
and
gs
loope
pop
in
dec
or
aad
imul
push
in
jecxz
sbb
push
mov
lods
test
jmp
mov
mov
cmp
xchg
push
pop
adc
dec
lock
outsl
jbe
dec
jne
scas
cmp
cmpsl
mov
fisubrl
and
xchg
fs
cmp
sub
sbb
or
aas
js
sub
ljmp
pop
mov
or
out
jg
insl
mov
cmp
inc
fimull
jns
lds
mov
jl
out
xor
jp
cwtl
adc
xor
lods
lock
stos
add
rorb
add
pop
push
pop
testb
icebp
stos
ret
lods
in
inc
call
and
subl
xlat
mov
and
mov
xchg
xor
xchg
push
xchg
sarl
js
jecxz
push
cld
pushf
lds
push
adc
das
sbb
mov
cmpsl
stos
inc
xchg
cld
adc
int
or
test
dec
mov
movsb
test
mov
jo
dec
into
daa
xchg
xorb
pop
je
cmp
sbb
inc
xor
sub
mov
rorl
jne
mov
idiv
sarl
scas
mov
lcall
xorl
cmpsl
mov
aaa
xchg
aad
mov
pop
sub
adcb
and
and
push
sub
xchg
shlb
shll
je
cwtl
xor
out
out
popf
outsb
bound
xor
push
mov
fsts
sub
xchg
shll
outsl
out
jp
adc
push
cmpsl
cmp
scas
lea
out
fdivrl
push
fisubs
loope
inc
xor
inc
and
xchg
xchg
push
popl
popf
repz
pushl
scas
test
or
or
into
dec
mov
add
pop
cmp
mov
insb
xor
repz
pop
outsb
jmp
insb
jmp
out
mov
roll
xchg
into
out
mov
rcrl
dec
add
pop
push
push
pop
xlat
cmpsl
and
incl
loop
dec
stc
mov
jnp
pop
xor
inc
shl
insb
sbb
mov
mov
mov
xchg
cli
mov
andb
pop
jge
stos
xor
cs
scas
jg
xor
lret
push
push
hlt
ja
cmp
popf
lret
lods
adc
xchg
push
sub
rorl
dec
or
out
cld
cmp
add
push
into
fs
mov
jns
jnp
sub
cmp
mov
sub
xor
test
or
sbb
call
je
ja
lods
fnsave
adcb
dec
jb
aam
sbb
mov
cmp
sbb
mov
add
std
ja
test
mov
sub
lds
mov
pop
jp
mov
cli
fadds
call
fmull
mov
inc
jbe
into
push
icebp
inc
addr16
into
xchg
mov
mov
scas
adc
cmp
pushf
cmp
arpl
cmp
xor
add
std
push
fcomps
sbb
outsb
add
jle
mov
mov
shl
jne
and
bound
test
xorl
lcall
cs
in
mov
adcl
pop
js
or
dec
jmp
fstpt
in
in
jnp
push
imul
cmp
rclb
std
mov
inc
sub
adc
jnp
push
or
pop
xchg
mov
call
xor
stos
test
scas
dec
adc
hlt
jo
cmc
test
iret
lock
mov
pop
inc
ret
fstpt
mov
cmp
gs
fwait
gs
inc
jne
and
and
mov
popa
insl
shll
stos
jno
ds
xchg
mov
jno
push
mov
imul
mov
fsubl
insb
xchg
pop
jge
sub
cli
leave
loope
psubusw
mov
sbb
mov
data16
add
loopne
sub
hlt
iret
xchg
dec
adc
add
xor
push
xchg
push
cmp
push
addr16
fnstsw
clc
lcall
rclb
xchg
insl
lea
arpl
push
push
jge
inc
int3
lcall
out
dec
sub
sbb
push
adc
jne
cltd
fs
vcmpunord_ssd
push
cmp
addr16
mov
and
popa
hlt
loopne
pop
das
out
dec
outsl
fs
and
test
repnz
adc
cmpsl
loopne
adcb
xor
mov
nop
dec
vphsubwd
cmp
mov
mov
pop
inc
add
cmp
and
fidivrs
js
lods
ja
mov
or
dec
lret
fcoms
mov
lcall
mov
jns
hlt
in
mov
lcall
scas
mov
adcb
ss
cmp
repz
jns
jnp
sub
ljmp
imul
pop
leave
aas
cmp
and
ret
cli
pop
or
int3
in
stos
xorl
movsb
xchg
vpshldw
jecxz
mov
subb
lahf
mov
sub
jp
pusha
dec
pop
add
cmp
fdivl
test
ret
or
pop
ret
fsubr
aad
cmpsb
outsb
xor
stc
ss
lods
pop
shl
iret
mov
arpl
fsubp
xorl
or
add
cli
or
incb
xor
dec
xor
bound
jle
or
ret
fs
lahf
test
fiaddl
sbb
mov
ret
xchg
ss
mov
jge
mov
mov
rcrb
subb
jl
xorb
jp
ljmp
pushf
mov
xchg
and
sar
ljmp
push
mov
dec
pop
adc
test
jge
lret
aaa
dec
pop
add
xchg
das
out
sbb
pop
imul
inc
sub
std
in
test
pop
ljmp
mov
inc
aaa
push
not
or
jmp
mov
rclb
xor
push
dec
mov
pop
mov
pop
sahf
adc
jge
dec
xor
push
pop
iret
push
jne
push
push
xor
and
jb
hlt
hlt
push
dec
loopne
lea
in
mov
cmpsb
enter
insl
out
lods
repnz
test
or
scas
aaa
ret
push
bound
lea
jle
sub
nop
mov
inc
mov
xlat
ss
sub
mov
inc
aaa
ficoml
adc
ror
cmp
dec
in
mov
add
in
pop
jo
mov
pop
lret
aaa
aam
ret
or
cmp
nop
popf
shll
sub
add
sbb
push
into
repnz
and
icebp
pusha
dec
jb
aas
xor
sbb
cmpsb
out
and
gs
jo
orl
icebp
mov
popa
fnstsw
fbstp
xchg
mov
mov
cmp
ljmp
inc
in
pop
popa
std
xlat
dec
fldcw
imul
imull
jmp
or
lret
mov
mov
sti
mov
leave
adc
push
ffreep
mov
leave
dec
push
push
jae
mov
and
icebp
sbb
jle
lcall
add
mov
fsubrs
and
out
cltd
jg
jae
in
cmp
loope
icebp
jae
jecxz
jns
jmp
sub
mov
xchg
jne
pop
call
aad
ja
mov
icebp
cmpb
and
mov
mov
jp
pop
jae
lcall
test
lods
cmpsl
sub
nop
cwtl
pop
fidivs
fsubrl
jns
lcall
jge
adc
mov
fisubs
subl
push
adc
xchg
sub
jne,pt
pop
sti
loope
cmp
push
adc
das
fwait
or
push
clc
nop
cmp
jbe
mov
lods
enter
aad
cmpsb
or
dec
and
pop
jge
pusha
mov
xchg
xor
ror
pusha
pop
inc
adc
test
add
in
roll
add
into
das
sbb
rorl
lahf
xchg
ja
enter
push
jns
or
cmp
shrl
scas
aam
in
jmp
mov
jg
cmp
mov
or
fidivl
xor
fsubl
lock
div
cmpsl
xchg
les
sti
loopne
pushl
in
dec
iret
mov
mov
mov
add
inc
push
rcll
inc
sub
xchg
fisttpll
call
int
xor
popf
adc
mov
ds
inc
scas
das
fs
xchg
mov
mov
cmpsl
and
or
adc
cld
pusha
xchg
inc
imul
repz
pop
mov
mov
popf
clc
pop
sub
decb
push
xor
mov
push
push
xorb
lock
rclb
push
rol
push
out
sub
bswap
or
xchg
fwait
jmp
jnp
push
enter
cld
push
mov
repnz
dec
adcb
arpl
sbb
ljmp
push
test
ss
int3
jo
pop
dec
ljmp
push
add
pop
imul
jmp
mov
and
stc
mov
repnz
push
mov
mov
sahf
pop
loope
rcll
pop
enter
rorb
push
sbb
jnp
mov
dec
iret
outsb
cmpsl
mov
lcall
jp
xchg
dec
rcll
loop
xchg
int3
sbb
test
inc
xlat
push
sub
xchg
fsubrl
ret
pop
fdivl
js
aas
loope
push
xchg
adc
xchg
push
inc
in
pop
arpl
mov
mov
sbb
iret
and
inc
mov
stos
push
leave
add
push
inc
cmpsl
sub
loopne
add
push
jb
mov
lcall
xchg
lahf
lret
mov
and
jl
dec
cli
sub
mov
repnz
mov
mov
ljmp
aam
lahf
out
pop
inc
xchg
sub
dec
sbb
adc
fildl
inc
adc
outsb
xor
jg
mov
andb
cmc
mov
in
mov
movsb
stos
or
mov
ja
movsl
push
or
sbb
inc
lods
xchg
fyl2xp1
xchg
mov
sub
sahf
jg
xchg
mov
and
add
jb
sub
push
add
or
test
lea
or
pusha
lods
lahf
rcll
stos
xchg
pop
loope
sbb
push
popf
xchg
xchg
fsubrs
xor
adc
sbb
call
push
hlt
and
dec
sbb
cwtl
jb
sahf
fbstp
nop
sar
sbb
inc
lahf
jl
dec
jmp
cmp
mov
pop
add
adc
insl
lods
call
push
mov
loopne
sarl
xor
scas
imul
lret
jne
sub
stos
jg
xchg
movsl
and
dec
aad
sub
pop
cli
repnz
pop
inc
mov
sub
mov
repnz
loopne
inc
lret
rol
sbb
xchg
cmp
jae
adc
mov
xchg
out
jne
or
inc
aad
jbe
jle
iret
inc
or
in
mov
cmp
mov
mov
lock
pop
pop
inc
andl
sahf
stos
pop
inc
mov
sti
sahf
cmp
pusha
xor
sbb
sub
in
jg
stc
jp
shll
dec
fs
clc
xor
cmp
mov
int3
stc
xchg
sti
jbe
shll
sbb
lcall
mov
xor
pusha
push
fsubrs
sub
push
test
test
loopne
mov
sub
sarb
inc
jmp
aas
dec
clc
fcomps
and
out
and
sbb
mov
fimull
or
inc
jne
jbe
ljmp
push
add
push
dec
test
jle
inc
dec
push
push
nop
sub
out
pop
adc
das
loope
mov
bound
add
sub
sti
pop
mov
and
jbe
mov
in
sbb
jg
lds
scas
lcall
push
js
insl
push
ret
data16
repnz
sarb
roll
call
pop
sub
pop
cld
cmpsl
push
fisubs
push
pop
or
jo
ret
popf
frstor
ret
sbb
sbb
loop
pop
xlat
incl
xor
in
imul
cmp
xchg
lods
xchg
xchg
and
pop
out
popf
stos
shll
test
push
mov
iret
or
pop
sti
repnz
mov
cmp
mov
mov
adc
jmp
jmp
push
push
pslld
mov
or
and
outsl
sbb
inc
xchg
aam
ss
dec
xchg
imul
jecxz
mov
ds
and
ljmp
jno
stos
cmc
add
adc
cld
mov
jae
js
xor
movsb
out
je
mov
insb
and
cmp
orl
cmpsb
hlt
movsb
stos
hlt
shl
add
jle
lret
mov
ret
dec
data16
jo
loop
add
dec
imul
loopne
int3
or
js
shl
sarb
mov
cs
lcall
or
cmpsl
sarb
mov
fistl
cmp
clc
int3
test
xlat
mov
pop
push
loop
mov
xchg
repnz
cwtl
or
add
cltd
fiadds
mov
inc
rcl
add
test
aam
leave
cmp
mov
js
enter
pop
fists
push
pop
rcrb
or
stos
pop
fwait
cmp
dec
aaa
push
mov
push
or
add
cmpb
xor
int
push
out
repnz
jl
in
rclb
outsl
mov
stc
test
loope
cmpsl
pslld
stos
in
popa
push
cmp
leave
dec
adc
js
outsb
push
aad
out
or
sub
cltd
push
jmp
out
out
mov
and
popf
dec
mov
insb
fiaddl
and
adc
xor
mov
sub
fmul
movsb
fcmovu
int
test
cs
mov
insb
push
pop
pop
or
in
data16
mov
cmpsb
xlat
dec
xor
push
sarl
es
add
ss
sub
jns
xchg
les
pop
aad
dec
mov
cmp
add
in
add
xor
pusha
jo
arpl
addl
mov
cmp
pop
cs
cmpsb
xor
lea
repnz
cltd
cltd
pushf
ret
add
jmp
movsb
ret
dec
std
js
push
mov
in
addr16
out
ffreep
jae
js
or
cmp
stos
jb
fisubl
fldpi
lock
movsl
mov
mov
iret
mov
mov
cs
add
jmp
mov
aas
mov
xor
xchg
pop
jb
sbb
aam
fisubs
pop
pop
or
add
cmp
hlt
out
lcall
xor
mov
dec
jns
out
push
and
adc
inc
mov
or
sbb
cmp
ret
mov
testl
xchg
sub
adc
mov
pop
test
jmp
loop
lea
sub
mov
leave
dec
mov
sarb
push
push
dec
fisttpll
ret
mov
into
jne
pop
dec
jmp
sbb
push
sahf
mov
bound
cs
imul
mov
mov
stos
jb
lahf
mov
lods
push
lods
pop
jge
bound
add
nop
add
subb
sarl
xchg
lcall
lahf
xchg
fsubs
insl
ss
insl
and
lds
enter
xchg
insl
xacquire
jge
int
sbb
insb
dec
mov
or
pop
mov
orl
aas
and
mov
jb
leave
out
decb
add
fnstsw
cmp
dec
aam
jno
jnp
adc
add
bound
jno
mov
not
add
addr16
imull
sbb
test
or
movsb
or
in
aad
addb
mov
mov
xchg
xor
lahf
lock
out
lahf
lea
lods
jl
daa
sub
jae
repz
or
xchg
out
outsb
fstpl
shl
ja
scas
sbb
xchg
into
mov
dec
mov
ljmp
popf
bound
or
add
fcmove
lcall
cmpsb
push
mov
scas
cmpsb
xchg
in
push
aaa
mov
aaa
xorl
je
nop
testb
cltd
xchg
xchg
cwtl
pop
and
xor
mull
xlat
test
lods
pop
insl
inc
dec
lret
dec
loop
mov
lock
fldl
mov
pop
outsl
ja
push
xchg
dec
repnz
push
mov
add
ds
add
call
lea
sbb
pop
push
xor
mov
les
or
inc
mov
inc
xor
mov
fstpl
sbb
incl
xchg
mov
mov
push
fcompl
dec
jb
dec
xlat
out
jns
imul
sahf
stos
xchg
xor
pushf
pop
jbe
ret
adc
mov
movsb
mull
mov
adc
hlt
jmp
mov
fldl
xor
cmp
out
pop
leave
inc
int3
and
nop
fsubl
and
in
or
adc
cli
fwait
mov
dec
jnp
mov
test
mov
or
sub
lea
mov
adcl
sub
pop
loop
cltd
xchg
in
jle
mov
gs
xor
add
cld
dec
xchg
cs
pop
ficoms
psllw
js
cmc
xchg
loope
or
pop
scas
xor
fisubrs
clc
cmp
push
or
add
adcl
insb
push
mov
cltd
cmpsb
addr16
dec
aad
sbb
xchg
jg
mov
nop
aad
mov
cmc
dec
dec
sub
jecxz
test
cwtl
xor
div
pop
addl
jns
mov
adc
aas
cmp
and
and
movntq
out
es
mov
xchg
mov
or
dec
loop
in
inc
fisttpl
int
inc
cmp
cmpsb
push
and
nop
mov
sarb
ret
enter
dec
daa
inc
ret
mov
push
and
xor
mov
fcoms
andb
sbb
sub
mov
aam
imul
js
movsl
out
xchg
or
cwtl
jp
aaa
lock
test
jns
loope
inc
adc
jae
movsl
out
outsb
cs
idiv
shll
cli
in
pusha
inc
int3
push
or
xor
or
fcoms
adc
or
mov
lret
rorl
mov
int
sub
scas
pop
fwait
sahf
xor
push
fs
cmp
ss
rcrl
loope
sbb
xor
scas
and
jecxz
ja
rolb
jns
rorb
push
or
push
in
pop
aas
sub
mov
add
in
push
sub
scas
sbb
and
xchg
add
add
mov
jns
test
inc
hlt
mov
mov
inc
loop
push
ret
idivb
dec
aam
fdivp
sub
or
mov
and
les
mov
or
add
ljmp
xchg
aam
enter
mov
mov
mov
jecxz
shlb
incl
loop
push
ja
andb
and
sbb
scas
or
dec
mov
dec
cmp
lcall
dec
int
dec
pop
xor
and
push
adc
ja
xchg
jbe
stc
pop
call
popf
and
negl
dec
divb
add
mov
lods
ror
xchg
mov
insb
push
mov
dec
jne
jae
in
inc
insl
out
pushf
loopne
mov
sbbl
mov
int3
jle
dec
pop
jnp
out
dec
cmpsb
outsl
jp
aad
inc
xchg
inc
mov
mov
mov
pop
ss
lahf
out
jne
ret
rcll
push
mov
dec
cwtl
in
push
imul
and
pop
cmpsl
sahf
push
ds
or
mov
mov
sbb
out
sbb
sub
mov
and
in
push
jnp
sbb
jmp
insb
dec
xorb
hlt
jg
and
ret
std
jmp
lahf
in
sub
idiv
divb
pop
jae
mov
leave
fisttpl
jge
push
xchg
dec
ds
inc
pop
pop
or
push
cmp
or
in
inc
out
leave
scas
hlt
in
mov
insl
fs
inc
dec
lret
or
or
scas
dec
mov
outsl
pop
loopne
add
loop
aas
pop
pop
movsl
roll
and
loop
movb
inc
mov
fiadds
in
cltd
xor
or
fucomip
jno
mov
movsb
int
lret
pop
xchg
mov
cli
clc
sbb
imul
mov
push
mov
not
or
loop
dec
adc
dec
sub
cmpsb
jns
adc
push
mov
add
or
push
mov
aad
xor
push
xor
mov
ja
jle
mov
dec
movsl
out
loop
dec
xchg
jle
xchg
stc
int3
dec
and
aam
cmp
andb
outsl
add
push
cmp
loopne
jne
insb
dec
inc
sbb
xor
xchg
cli
iret
xchg
aam
in
ljmp
dec
dec
std
hlt
mov
pop
xchg
pop
cmp
add
adc
or
xchg
cmp
push
fiadds
add
sub
add
ss
imul
repnz
add
ljmp
idivb
push
pop
adc
jns
jns
aas
pop
dec
rcll
cld
ret
popf
mov
and
mov
enter
jecxz
push
out
ja
adc
dec
xchg
dec
inc
inc
in
gs
mov
xchg
andb
pop
add
xor
push
fyl2x
sarl
fistpll
jg
fstl
cmc
push
fiaddl
scas
ficoms
aas
mov
dec
fildll
sub
adc
pop
xor
lock
mov
aam
adc
push
scas
add
xor
add
mov
add
and
es
or
jne
add
xchg
mov
insb
ret
movsl
sub
repz
rolb
sti
inc
loop
dec
int
scas
std
into
mov
inc
xchg
ljmp
ss
push
cmp
fstpt
push
adc
add
fisubrs
mov
lock
jmp
sbb
and
pop
or
push
sbb
movsl
sub
pop
push
sbb
jae
loope
cmp
cli
xor
ja
mov
jns
and
mov
bound
test
mov
jns
jmp
gs
jp
xchg
pusha
adc
mov
loopne
xchg
in
loope
inc
mov
jns
mov
adc
sbb
push
punpckhdq
pop
dec
ret
cmc
mov
jb
dec
xchg
fs
pusha
lds
or
movsb
fdivrl
pop
push
lds
lea
jg
inc
arpl
push
popf
dec
mov
test
bound
sub
xchg
jmp
mov
pop
fidivs
cmpsl
pop
xchg
frstor
sti
and
inc
insb
push
out
das
push
push
outsb
add
mov
inc
cmp
push
pop
dec
sub
and
dec
repz
xchg
call
dec
inc
pop
sbb
ljmp
pop
pop
add
mov
repz
shlb
lds
jne
jno
adc
push
cwtl
std
add
and
daa
nop
sub
sub
outsb
pusha
inc
mov
rcll
xor
pop
je
sbb
adc
jmp
jl
push
btc
ss
push
lret
fmuls
pop
xor
xchg
adc
arpl
jmp
dec
enter
mov
mov
cmp
and
xchg
enter
mov
push
cmp
inc
insb
imul
adc
fdivs
sbb
mov
mov
jp
sub
mov
enter
push
jae
movsl
mov
jbe
mov
imull
jae
and
aas
pop
daa
mov
mov
xchg
jge
mov
dec
pop
mov
mov
lods
mov
sbb
scas
or
jne
mov
push
xchg
sub
mov
test
inc
mov
gs
push
outsb
lcall
mov
movsl
enter
cltd
loope
out
push
cmp
push
nopl
lds
cmp
in
fwait
and
mov
int
cmp
mov
mov
insb
hlt
fwait
xor
jmp
out
and
jg
cmp
xchg
fstps
sub
mov
lds
fs
hlt
sbb
lcall
mov
or
inc
pop
cli
xor
xchg
or
jb
mov
inc
xor
not
lods
mov
call
mov
faddl
inc
out
imul
or
inc
arpl
pop
lcall
add
add
repnz
dec
aam
addb
lods
mov
push
in
rcll
test
lahf
xchg
push
lock
scas
stos
cwtl
cmc
cs
dec
or
in
clc
push
repz
xor
lock
pop
test
or
add
adc
arpl
xchg
cmp
push
or
cmp
inc
cmp
je
cmc
loop
stc
jbe
pop
pcmpgtw
sub
fcomip
jg
in
das
mov
cli
cli
dec
addr16
cmp
ja
in
push
dec
repnz
mov
sti
adc
or
cmpsb
cmp
clc
mov
fwait
jge
inc
out
xchg
scas
cmp
subl
cmp
lret
xchg
mov
in
adc
cmc
inc
push
movsb
jb
mov
sarb
arpl
rorb
dec
mov
jecxz
imul
mov
sbb
int
outsl
test
sub
movsb
movsl
lret
js
push
mov
jp
fisttpl
test
call
mov
mov
adc
push
xor
xchg
pop
dec
sub
mov
and
add
mov
stos
sti
iret
xlat
cmpsb
dec
inc
xlat
fidivl
cmp
xor
andb
lods
stos
lcall
mov
icebp
cmc
cld
xchg
sub
push
sbb
inc
flds
lret
ljmp
adc
repz
add
nop
mov
sub
lods
or
jb
aas
les
lret
pop
stos
pop
or
test
jbe
mov
mov
lods
mov
in
jo
inc
add
xchg
pop
stos
push
sbb
cltd
jns
jnp
adc
fcomip
fsts
push
xchg
lahf
pcmpgtb
repz
jnp
or
jle
add
outsl
jle
lret
inc
sub
stc
aaa
pop
inc
mov
shlb
mov
rcrl
dec
sub
push
pop
pop
scas
mov
fs
and
mov
mov
insl
test
mov
std
cli
jns
shr
inc
andl
cwtl
mov
pop
js
aad
pop
pop
push
pop
inc
sub
mov
jecxz
out
in
mov
movq
mov
mov
pushl
daa
lods
in
lahf
jg
and
inc
dec
sub
pop
and
jle
mov
aaa
jo
aad
jae
inc
or
push
sub
jae
adc
mov
push
mov
and
and
lahf
or
das
jne
mov
dec
fcoml
xchg
fcmovne
jb
outsb
jb
rcll
push
fisttpll
push
dec
sub
enter
push
scas
daa
pop
les
push
leave
rcl
idivb
jecxz
push
cmpl
outsb
sub
inc
jmp
sti
xchg
xor
mov
adc
inc
mov
mov
rorl
push
cmp
aas
jmp
or
mov
aam
sub
outsb
mov
mov
cmpsb
pop
enter
cltd
js
push
xor
jge
sub
pusha
repz
dec
ds
mov
cmp
js
or
loope
icebp
jbe
lock
xchg
sbb
testl
fwait
pop
push
jl
dec
clc
inc
gs
sub
mov
or
or
xchg
push
cmc
or
dec
jecxz
jmp
imul
xchg
ss
test
inc
lahf
push
sbb
int3
aam
arpl
fwait
rol
dec
sbb
lods
sub
punpckhdq
jbe
jae
xor
or
sti
sub
xchg
pop
jb
out
adc
inc
jmp
inc
fstpl
mov
pushf
int
stos
sub
fsubl
push
data16
loope
sarl
adc
and
xor
xchg
stos
mov
lds
fst
push
fimuls
jno
mov
mov
ss
in
mov
adc
pop
jb
leave
in
repnz
jge
repnz
inc
mov
cmp
cmc
adc
shlb
inc
sub
scas
mov
out
repz
mov
repnz
pop
push
sahf
leave
or
jno
or
push
ljmp
mov
fstpl
add
jb
shrl
xchg
cmp
insb
mov
sbb
js
mov
and
adc
and
mov
pusha
xor
movsl
pop
xchg
cmpsb
ret
push
mov
mov
fldenv
fwait
sub
test
add
xchg
mov
int3
lret
mov
out
or
mov
pop
stc
mov
sbb
sbb
fsubr
insl
daa
aam
jmp
jp
and
mov
inc
nop
cld
cld
push
testl
lea
int
fldz
enter
adc
stos
cltd
out
add
cmp
lea
xchg
dec
and
mov
cmp
out
mov
sub
mov
xchg
xchg
mov
adc
cmp
jae
lcall
addr16
call
jne
push
cmp
add
pop
addr16
jb
insl
add
idivb
pop
fsubs
ljmp
imul
icebp
imul
adc
sub
dec
popf
addr16
call
sti
int
sbbl
idivb
ss
inc
push
mov
mov
push
jb
cwtl
fists
sahf
mov
aaa
sbb
cmp
insb
test
pop
push
jnp
push
inc
sub
test
sarl
pminub
mov
push
js
xor
inc
cwtl
icebp
repnz
clc
xchg
mov
fimuls
jle
mov
xlat
adc
or
loope
lret
cmc
popa
inc
mov
inc
out
bound
dec
and
mov
mov
cmpsl
sub
ror
ret
pop
ror
test
or
mov
jge
adc
mov
and
mov
adc
mov
xorb
sub
cmp
lret
pushf
xchg
dec
or
test
lea
pop
popf
pop
lea
mov
in
jne
rorb
mov
mull
inc
mov
fldcw
outsl
add
loope
fdivp
out
popf
movsb
loope
xchg
das
mov
dec
movsb
mov
cli
mov
or
fst
movsl
adc
xchg
aam
movsl
adc
aad
jae
add
in
cmp
sbb
loopne
outsb
push
adc
sbb
pop
pop
rclb
shlb
pop
jbe
sbb
xorl
cmp
pop
add
add
xchg
pop
inc
pusha
cli
push
xor
mov
cltd
adc
jns
icebp
push
je
add
orb
sti
sarl
enter
xchg
mov
sbb
jle
push
dec
sub
pop
repz
iret
lret
sti
pop
pop
pop
mov
and
call
push
and
adc
orl
sbb
arpl
lahf
rcrb
or
pop
sbb
cmpsb
test
jmp
sub
nop
inc
decl
ljmp
jg
xchg
adc
in
inc
lret
call
mov
push
cwtl
int3
lfs
das
dec
loope
and
enter
inc
add
xlat
add
and
out
jg
mov
call
repnz
lock
loop
cmp
mov
jno
faddl
jge
mov
sub
andl
cltd
stos
pop
nop
jp
aad
je
and
test
das
dec
test
pushf
push
in
jb
sbb
mov
outsl
mov
and
repnz
sbb
lods
sahf
cmc
mov
push
popa
cwtl
mov
or
xor
icebp
das
xchg
imul
and
mov
aad
cmp
cmp
pop
mov
aad
lds
sbb
mov
icebp
inc
pop
lret
add
jp
sbb
cmp
mov
push
inc
shlb
jns
cmp
xor
addl
clc
push
addr16
jno
inc
jnp
mov
fsubl
pop
push
pop
aaa
dec
inc
aad
rolb
cmp
xor
add
dec
pop
nop
push
xchg
jecxz
mov
jb
data16
dec
scas
and
test
sti
pop
push
lret
mov
arpl
test
inc
cmp
cmp
jmp
ljmp
xlat
and
mov
xchg
enter
add
add
push
xor
pop
mov
dec
test
dec
inc
ret
xor
adcl
push
xlat
test
js
test
xor
test
int3
cmp
pop
jl
int3
cmc
jno
sub
cmpb
jae
dec
or
or
aam
in
addb
stos
out
xor
xchg
jnp
jl
lods
in
inc
inc
outsb
repnz
in
ret
or
cmp
jp
sbb
inc
pop
pop
loope
fistps
ss
mov
cltd
pop
and
call
cmp
push
inc
and
push
lret
mov
mov
lret
aas
or
call
adc
mov
aad
cmp
xor
das
aas
cwtl
pop
add
nop
mov
mov
add
adcl
dec
sub
lahf
lock
and
les
or
nop
jg
ja
pop
incb
pop
popf
faddp
push
and
je
jb
mov
xchg
mov
dec
pop
push
sbbl
lea
push
xchg
jne
or
add
and
xchg
imul
stos
test
jmp
sbb
mov
cltd
cmc
dec
add
sbb
jnp,pt
repz
pop
imul
jp
dec
push
push
push
mov
orl
push
jle
push
into
jecxz
ja
int
stos
adc
cltd
sti
dec
or
dec
mov
pop
dec
jp
addr16
addb
loop
cmp
xchg
lahf
xor
addl
cmp
leave
push
or
push
xchg
fwait
sub
iret
imul
hlt
inc
into
jg
mov
xor
sub
nop
xchg
xor
push
inc
lods
mov
ret
jmp
loopne
iret
fs
pushf
jmp
inc
mov
fmul
pop
pop
daa
or
sub
mov
xchg
daa
aaa
add
lcall
loope
and
and
inc
in
outsl
xor
stos
data16
fstps
xchg
out
subl
and
pop
add
insb
or
mov
mov
jle,pn
dec
call
int
ficoml
push
or
ljmp
ret
call
cmp
in
or
and
arpl
shr
jns
push
ret
fucom
shlb
mov
push
or
insb
testl
or
cwtl
xlat
cmp
xor
fadds
lods
mov
xor
mov
push
xchg
and
dec
push
enter
and
in
fidivrs
cwtl
sbb
stos
popf
adc
inc
and
xor
xor
or
push
adc
outsb
add
rep
aas
jl
push
hlt
outsb
mov
pop
adcl
out
mov
adc
pop
movsl
imul
cld
lods
clc
loop
pmaxub
not
andb
add
pop
push
cmp
jns
add
push
and
dec
imul
mov
into
orb
pop
aaa
test
sahf
push
cmpsl
pop
stos
cld
andl
xor
repz
lcall
dec
add
mov
push
frstor
and
jp
scas
lret
dec
daa
ds
movsb
xchg
jecxz
js
mov
sub
sbb
mov
xchg
push
pusha
push
push
mov
inc
adc
imul
or
shl
subl
rcll
popa
nop
mov
mov
xlat
shlb
push
pop
cmpsl
pop
mov
mov
ds
fwait
xchg
outsb
sub
jg
and
fdivs
sub
add
sbb
scas
gs
adc
lret
fistl
adcl
sub
xchg
and
sub
cmpsb
mov
in
sahf
cmpsl
into
dec
imul
imulb
inc
rorl
mov
ds
mov
cmp
push
std
repnz
xchg
rcll
adc
fs
inc
mov
sub
inc
jno
pop
andl
sbb
xchg
sub
ret
cmp
mov
int
lahf
in
les
sub
push
mov
mov
jae
pop
push
inc
adc
xor
mov
and
mov
mov
pop
pusha
scas
mov
idivb
insb
add
xchg
ljmp
in
jns
cmp
mov
cli
inc
out
fnstenv
nop
daa
movsl
andb
jl
idiv
xor
jnp
mov
insl
les
xchg
out
xchg
out
push
xchg
add
sbb
dec
push
ret
fsubrl
out
into
arpl
inc
inc
dec
movsb
mov
and
add
dec
mov
cmp
outsb
dec
mul
mov
inc
xchg
or
bound
adc
sbb
dec
add
xor
push
aas
and
jle
mov
dec
add
jne
loopne
cmp
sub
dec
xor
pop
add
or
fs
and
xchg
pop
add
mov
mov
clc
push
push
bnd
loopne
mov
adc
pop
xchg
or
push
cmpsl
test
dec
push
dec
outsl
mov
addb
mov
daa
loope
stos
xor
jns
jns
insl
dec
stc
in
stc
imul
fnstsw
jae
xchg
adcl
ljmp
and
fldenv
aas
cmpb
mov
and
mov
dec
test
push
dec
lcall
mov
pop
cmp
ljmp
and
xchg
ja
lods
pop
pop
dec
lods
dec
dec
insl
test
into
jge
xor
mov
out
and
lods
mov
mov
xchg
xchg
sahf
xchg
fstps
faddl
or
pop
xchg
mov
mov
cmp
push
test
popf
int
add
mov
int3
add
mov
inc
rorl
bound
inc
push
ret
out
inc
hlt
jae
sub
pop
mov
mov
sbb
pop
sbb
xchg
jno
std
imul
xchg
sbb
mov
cmpl
in
and
addl
ret
cmc
xor
andl
aad
jb
fwait
pop
data16
sub
cmp
cmp
cmpsl
jo
pushf
cmp
mov
adc
mov
js
imul
arpl
pop
imul
push
xchg
xchg
stos
in
mov
pop
sar
and
movl
dec
jb
lcall
cmp
leave
sub
dec
fidivl
and
cltd
lods
les
pushf
jae
mov
mov
cs
sub
adc
sar
repz
xchg
xchg
js
lret
inc
movsl
int
jae
and
cmp
push
mov
shlb
add
mov
insl
fs
inc
push
sbb
push
lret
adc
test
mov
bound
mov
mov
xchg
out
stos
popa
pop
mov
inc
push
mov
jge
mov
mov
adc
cmp
ja
pop
fiaddl
repnz
mulb
mov
imul
sar
cmp
mov
lahf
jbe
dec
mov
inc
and
pushf
fidivrs
das
pop
add
lods
jne
bnd
loope
pop
movsb
aam
out
inc
inc
mov
jo
leave
mov
out
adc
out
fwait
add
lret
out
je
clc
scas
mov
int3
jo
loopne
rcl
into
pop
mov
xchg
push
add
loope
xchg
pop
sub
enter
adc
or
ret
lret
inc
data16
sbb
aas
call
push
mov
xor
xor
clc
popf
add
pop
xchg
cmp
test
imul
daa
iret
cmp
out
jecxz
and
lods
and
rcll
and
movsb
notb
jmp
jo
call
lret
ficomps
cmp
inc
jno
pextrw
push
addr16
es
ljmp
pop
pop
lods
lret
in
xchg
loope
inc
push
cmp
ja
and
dec
pop
dec
notb
push
mov
cmp
sbb
out
jl
mov
frstor
clc
pop
insl
mov
adc
movsb
or
movsb
mov
test
outsb
arpl
mov
add
ljmp
cmpsb
dec
sbb
or
rcl
aas
push
adc
pop
fnsave
in
push
rcrb
cmpsl
push
xchg
fdivrs
insl
mov
js
popf
stc
pop
test
loopne
mov
clc
push
test
insb
lock
dec
repnz
pop
sub
mov
sbb
or
cli
cmp
pop
ret
xor
pop
mov
cmp
dec
jge
mov
inc
mul
mov
jnp
or
and
gs
push
test
inc
imul
jmp
mov
sbb
mov
jmp
jge
lret
add
lods
popf
aam
stos
mov
push
aam
dec
sub
inc
mov
pusha
cmp
xlat
push
les
lcall
insb
fidivrs
inc
xor
cmc
fldenv
push
aas
mov
ljmp
lahf
jle
les
dec
outsl
in
leave
aam
aad
pop
pusha
inc
push
jp
movsl
dec
pushf
nop
inc
mov
leave
dec
dec
xchg
loop
mov
lods
cmp
int
bound
or
sbb
sub
enter
icebp
xor
mov
add
rclb
stos
addr16
scas
xchg
sbb
xor
mov
jmp
jno
mov
sbb
pop
mul
xor
push
jo
mov
ss
outsb
adc
gs
sti
fdivrs
pushf
pop
xlat
daa
pushf
jp
inc
rcll
pop
add
std
cmp
sub
mov
mov
cmp
rcll
xchg
fisubs
into
xor
bound
sbb
scas
push
int3
sbb
xchg
lods
ret
test
pop
das
ret
ret
jns
jmp
ret
int
pop
inc
inc
pop
sub
sub
push
mov
lret
test
dec
cltd
adc
add
jg
das
cld
sub
imul
jle
mov
test
fnstcw
shlb
mov
push
test
repnz
xchg
inc
cmp
xor
pusha
xor
je
and
push
xor
mov
in
sbb
clc
cmpsl
lods
and
in
hlt
push
mov
cmp
pop
rcll
ret
xor
sahf
lret
xchg
sub
mov
fldl
dec
sub
les
icebp
shl
frstor
ja
cmp
in
iret
enter
sub
or
add
cmpsb
pushf
stos
popf
repnz
cmp
jl
out
arpl
adc
repz
popa
push
fdiv
lcall
imul
enter
out
xchg
cmpsb
bound
inc
mov
stc
filds
push
ds
cmp
clc
push
ds
lret
outsl
in
cmc
pop
jecxz
push
xchg
or
cmp
mov
mov
mov
cwtl
or
scas
call
jo
cmpsl
loope
cmp
jbe
jbe
stos
sbb
xchg
sub
cmp
lahf
ljmp
cmp
inc
int
mov
xor
lock
cmpsb
clc
inc
decl
mov
mov
lret
sahf
pop
ficoml
rcrl
push
push
sti
add
mov
jo
roll
xor
or
icebp
jge
pop
je
xchg
bound
mov
sub
adc
enter
adc
imul
mov
xchg
inc
ret
adc
sbb
jae
xchg
into
in
xor
dec
iret
mov
rorl
lods
xchg
rcrl
aas
xchg
rcrl
jp
jle
adc
add
fisubrs
sarl
mov
and
or
int
dec
xchg
stos
dec
sbb
clc
aad
jle
add
mov
xchg
lods
add
pop
gs
leave
aaa
sarb
imull
cmpl
push
cmc
sub
mov
mov
into
aas
jecxz
sbb
cmpsl
cmp
into
aas
dec
dec
inc
lahf
and
outsb
jns,pn
setae
lods
imul
add
ret
inc
pop
add
int3
rcll
aam
movsb
outsl
shlb
mov
pop
data16
xchg
mov
and
rcr
loope
xlat
sbb
mov
aam
pop
push
movsl
xor
xor
repz
add
mov
mov
ljmp
out
jge
sub
ja
sahf
fimuls
ret
xchg
jne
adc
sti
xor
mov
push
cld
out
out
cld
jbe
subb
add
ja
push
lret
das
in
in
aam
xor
mov
mov
imul
cmp
mov
cltd
mov
sub
bound
and
out
stos
nop
mov
in
int3
sub
cmp
rcrl
fdivs
mov
dec
aam
pop
mov
add
frstpm(287
push
fcomps
mov
push
scas
push
loop
pop
lahf
mov
and
mov
ss
xchg
mov
and
xlat
dec
pop
jbe
inc
aaa
or
jmp
jbe,pt
ljmp
cli
push
jle
test
cmp
push
mov
gs
test
into
les
push
shr
xor
and
or
push
push
inc
mov
dec
mov
cmp
enter
sbb
outsb
bnd
std
rcl
mov
mov
mov
mov
mov
adc
cmp
jno
pusha
std
mov
shrl
inc
jno
outsl
pop
push
into
stc
outsb
hlt
dec
es
mov
shr
gs
and
outsb
add
sub
push
arpl
mov
std
pop
aam
in
push
sub
mov
loop
sbb
ret
aad
cs
std
dec
cmp
or
push
fxch
outsb
mov
dec
jb
nop
aaa
mov
jae
xchg
mov
mov
cmp
sub
push
orb
lret
lods
jg
mov
std
and
outsb
sub
ret
out
push
shlb
inc
xchg
pushf
outsl
sbb
mov
js,pn
xchg
dec
addr16
pop
push
jle
dec
jb
and
mov
jp
mov
into
jl
clc
lea
outsl
scas
lcall
jbe
add
pop
or
or
in
pop
fldt
pusha
imulb
xor
lea
cmpb
rcll
push
or
test
inc
cli
es
push
call
adc
add
xchg
mov
loop
aad
mov
int
add
cmp
stc
jne
rolb
dec
out
pushf
pop
lea
and
ljmp
lds
mov
pop
mov
push
cld
in
push
mov
cmp
push
mov
pop
or
repnz
jge
xchg
or
jns
dec
and
sahf
nop
dec
fnstcw
ficomps
lds
es
in
pushf
in
repnz
rcr
mov
pop
add
mov
inc
mov
add
add
lahf
xchg
aas
mov
lock
push
lods
scas
js
ds
xchg
add
gs
stos
je
push
add
mov
fiadds
mov
xchg
pop
pop
sub
movaps
adc
out
adc
mov
and
es
lds
imulb
xor
dec
sbb
scas
dec
shr
sbb
adc
subb
je
mov
data16
ja
or
add
jno
test
or
inc
mov
jne
push
xor
hlt
dec
adc
sahf
xchg
sbbb
push
in
add
pop
mov
jmp
mov
sbb
jnp
pop
mov
mov
push
cltd
pop
fisubrs
call
sub
test
xor
inc
mov
add
dec
jmp
out
dec
pop
fisttps
xchg
xor
mov
stos
into
pop
xchg
xorl
cmp
fdivrl
popl
xor
cmp
adc
outsl
int3
dec
fs
int3
mov
and
xor
pushf
add
xor
inc
call
subl
popf
xchg
fcomip
fcmovbe
data16
insb
pop
jbe
mov
jp
pop
in
fsub
push
iret
ret
pop
testb
pop
mov
rcll
push
add
cmpsb
fsubs
scas
xchg
cwtl
pop
call
add
mov
push
iret
jno
fimuls
mov
cs
lahf
mov
hlt
mov
pop
ds
inc
and
add
arpl
push
stc
pop
mov
ds
add
leave
xchg
jb
sub
rcrl
stos
jae
pop
jnp
adc
loop
fdivs
mov
inc
enter
push
pop
aas
loop
push
lods
xchg
rcl
cmp
in
test
inc
stc
and
jle
mov
pop
popf
and
loopne
xchg
dec
ss
loopne
mov
add
nop
inc
and
scas
nop
pop
aad
sbb
loope
scas
push
lock
cs
cwtl
les
iret
daa
mov
add
sub
jnp
aaa
bound
and
cmpsb
push
and
xchg
je
push
mov
outsb
aaa
jle
cwtl
mov
cmp
bound
jmp
ret
loopne
push
sbb
push
mov
aad
xchg
adc
in
inc
cmpsb
push
loopne
inc
adc
shrl
lret
test
and
add
pop
test
in
add
jne
fisubs
push
mov
call
pusha
sub
sarb
cmp
addb
push
aas
scas
fs
sbb
int3
fisubrs
sub
jb
pop
ss
rcl
scas
mov
sbb
xor
mov
pop
jle
addl
scas
xchg
fs
out
inc
fwait
cmp
and
rclb
adc
mov
jo
inc
push
pop
cmp
inc
dec
out
pop
data16
addr16
add
jno
or
xchg
sub
inc
cld
and
loop
mov
push
data16
lret
pop
cmpb
mov
inc
fstl
xlat
out
sbb
fcomi
je
jmp
xlat
pop
cwtl
sbb
xor
pop
loope
cmp
pop
loope
aam
push
push
mov
out
mov
add
mov
scas
cmp
jmp
in
inc
mov
mov
pop
pushf
push
repnz
push
push
mov
push
out
rcll
dec
jl
call
mov
cmp
mov
popa
push
push
aas
pop
xor
mov
dec
xchg
push
jmp
cmpsb
xchg
mov
cltd
mov
push
inc
fisttpll
cmp
ret
dec
adc
mov
in
popa
mov
icebp
loop
xorl
cmc
and
rcl
cmp
mov
sub
xor
lods
and
jno
add
addr16
enter
in
repnz
out
push
or
pop
std
push
outsl
sbb
pop
rcr
adc
sti
and
mov
in
and
pop
das
cwtl
xlat
add
pop
in
mulb
pop
arpl
mov
fistpl
inc
in
or
mov
push
fistpll
stc
mov
enter
sub
les
mov
dec
jg
dec
rcl
mov
jp
dec
lods
push
repz
jg
mulb
sahf
dec
jbe
xchg
mov
jbe
jge
jmp
loope
lcall
cmpsb
add
loop
inc
pop
mov
pop
jne
sbb
icebp
add
mov
imul
aam
dec
sarb
popa
lahf
mov
xchg
xor
mov
jae
pop
push
rcrb
dec
lods
cmp
dec
xor
ret
fidivl
insb
scas
jbe
test
loop
or
mov
mov
lcall
fucomip
and
loop
and
jp
dec
faddl
push
jl
inc
xlat
mov
leave
push
xchg
ss
int
aaa
push
icebp
movsb
dec
lret
nop
or
inc
shr
lcall
clc
sub
cmp
sub
adc
lods
iret
mov
int
test
dec
int3
push
test
pop
cltd
jecxz
movsb
sub
lahf
dec
rclb
cwtl
mov
push
or
cmp
lods
and
lds
subb
mov
idiv
imul
xchg
lock
cmpsl
fsub
in
stc
mov
idivl
test
les
cmp
idivb
fidivs
and
mov
or
adcb
sbb
inc
mov
pop
or
adc
fistps
repz
dec
mov
fucomp
push
mov
loop
stc
xchg
and
jmp
add
mov
ficomps
xor
or
adc
std
mov
cmp
addl
or
lea
movsb
xchg
or
sti
fbstp
hlt
add
push
int
insl
and
cmpsb
add
rcr
cmpsb
pop
xor
out
mov
mov
loop
icebp
sub
enter
cli
ljmp
dec
pushf
mov
cmp
push
jno
shlb
sub
inc
popa
fwait
test
jne
push
cmp
jecxz
out
pop
cmp
xchg
dec
test
xchg
sub
mov
pop
fldln2
rcll
shr
stc
test
xchg
loopne
outsb
fadd
sub
call
pop
sub
sbb
dec
push
mov
and
push
shrl
jge
mov
push
fidivs
icebp
sarl
pop
inc
adc
jne
jecxz
cmp
pop
ja
jp
js
jns
out
mov
sbb
cmpsb
adc
inc
pop
imul
les
lods
push
sahf
mov
jo
je
mov
cmp
fwait
inc
in
negl
push
test
jo
das
dec
iret
lret
xor
sbb
in
mov
mov
call
add
jns
xchg
roll
xchg
and
adc
test
xor
mov
stos
rorb
add
and
stc
and
negb
dec
mov
or
dec
mov
das
fimuls
xor
mov
mov
inc
xor
subl
addr16
dec
enter
pop
shlb
mov
outsb
shrb
clc
cwtl
rolb
int3
lret
jecxz
aas
hlt
or
mov
cli
mov
mov
add
jno
push
mov
jecxz
pushf
addr16
andl
faddl
scas
repnz
cmp
fsts
out
jp
test
mov
aam
adc
push
xchg
add
push
pop
sarb
je
popf
pop
int3
mov
mov
mov
mov
cmpb
popa
inc
subb
out
lds
xor
and
mov
sar
fwait
or
cld
dec
mov
cmp
ss
imul
popf
mov
lds
iret
je
mov
rclb
push
insb
sti
sub
inc
push
cmp
ret
shlb
int
and
aas
xchg
inc
xor
test
cmpsl
cmp
inc
in
adc
inc
neg
jle
fimuls
mov
push
or
mov
add
loopw
jmp
pop
enter
fdivrl
test
pushf
xor
out
clc
mov
es
aad
subl
pop
iret
jg
jl
fiaddl
lods
dec
and
cmp
out
gs
dec
xchg
push
mov
inc
push
repz
aad
adc
xor
ds
xorl
sub
cmp
stos
push
nop
loope
out
clc
mov
mov
pop
scas
adc
push
push
iret
jnp
imul
dec
aaa
cmp
in
xchg
pusha
dec
sbb
mov
mov
lods
or
out
pushl
test
outsl
shr
mov
lret
hlt
mov
clc
repnz
jp,pn
sub
loop
outsb
pusha
jp
sub
cld
mov
stos
mov
add
sub
lea
cmp
sub
rcl
mov
rcl
fnsetpm(287
out
insb
arpl
fstpl
jne
iret
shll
xor
dec
orl
adc
outsb
sbb
inc
dec
sarb
das
lcall
inc
add
add
jb
popa
sub
pop
mov
insl
int3
test
or
push
inc
mov
cwtl
pop
jp
cmp
test
fnstsw
jp
fistpll
and
jmp
outsb
cmc
or
mov
and
cmpsl
mov
ljmp
push
inc
mov
ds
inc
mov
pop
inc
push
jno,pt
and
cmp
cmpsl
cmp
div
imul
cmp
push
std
xchg
cmpb
adc
sarb
stos
mov
adc
rorl
in
xchg
jbe
jno
outsl
jmp
inc
add
jecxz
in
mov
and
push
fs
jg
add
add
pop
stos
outsl
enter
xchg
iret
pop
sbb
in
insb
fsubrl
cmp
fistl
mov
rclb
and
enter
xlat
lock
mov
jl
test
enter
mov
shrl
jg
and
dec
icebp
mov
ret
pop
negb
shll
fistpl
daa
or
cmp
pop
cmp
inc
mov
sub
push
prefetchw
rolb
in
xchg
dec
addb
mov
in
xlat
pop
repz
stc
xchg
mov
push
fistpll
cmc
lock
test
push
insl
add
inc
mov
rcl
and
cmp
xchg
jno
jecxz
scas
mov
jecxz
imul
jge
lret
mov
dec
sbb
jle
inc
ljmp
or
lret
pop
cld
rep
dec
cltd
insb
jo
push
rcll
mov
fwait
pusha
push
cmc
stos
mov
add
shll
adc
inc
xchg
es
mov
and
inc
popa
cwtl
sbb
mov
fs
cmp
and
jmp
mov
mov
push
mov
cwtl
adc
or
in
push
in
adc
clc
sbb
ret
jne
dec
sub
insb
in
jb
sub
jp
out
movsl
mulb
push
lods
fldenv
jecxz
xor
andb
xchg
jge
pop
imul
lcall
push
mov
adc
dec
xor
sub
pop
fcmovnu
mov
inc
xor
pop
insl
add
test
loop
jecxz
or
pop
fwait
sbb
into
mov
sti
sub
mov
sbb
push
daa
mov
sbb
inc
or
pop
sbb
enter
and
leave
rcrl
dec
cmp
loopne
adc
jg
dec
stc
popa
ss
xor
xchg
cmpb
imul
or
jp
mov
loope
lock
dec
cmp
push
insl
mov
rol
mov
xchg
jno
arpl
mov
pop
sti
jo
sahf
gs
jp
loope
leave
push
and
fnstenv
fdiv
mov
push
lock
mov
scas
fstpl
cltd
add
xchg
mov
push
imul
in
pop
mov
cmp
adc
mov
das
pop
ret
cld
mov
in
jmp
outsl
sbb
dec
fists
movsb
add
loope
cmp
ljmp
cmpsb
or
cmp
aam
jecxz
mov
xor
popa
push
pop
dec
jne
xor
jmp
cmpsl
les
cs
icebp
orb
xchg
addb
mov
es
cmp
sti
lahf
out
mov
xchg
sti
mov
loopne
in
dec
adc
inc
cli
sub
mov
enter
cld
xor
das
pop
xor
sbb
lret
add
jge
fisttpll
repnz
fs
mov
xchg
push
add
ffree
sub
cmp
jle
inc
inc
ja
arpl
jl
mov
sub
jge
push
movntq
out
fcmovu
fcomi
dec
sbb
pop
in
jb
mov
in
pushf
mov
fwait
vpsllw
jle
or
popf
pusha
jbe
xchg
pop
inc
and
sub
mov
sbb
push
loop
mov
cmp
and
ret
mov
icebp
popf
xchg
loope
mov
add
dec
repnz
cmpsl
es
inc
adc
fisubrs
mov
scas
aaa
dec
and
cmpb
loopne
dec
filds
mov
sub
lds
adcb
mov
mov
mov
pop
arpl
push
or
xchg
sarb
xor
repz
sbb
aaa
outsb
pop
mov
insl
push
mov
pop
mov
adc
or
xchg
bound
ret
cmp
add
test
repnz
xor
popf
cltd
xchg
pusha
mov
mov
dec
cmp
jecxz
rorb
adc
and
in
adcb
xchg
imul
out
je
out
sti
nop
std
pop
cs
xor
mov
cmpsb
orl
mov
jecxz
outsl
cmpb
ljmp
cmp
sub
adc
out
test
outsl
cli
mov
out
popa
int
pop
fimull
out
inc
testl
in
xchg
pop
xchg
and
mov
int
push
lea
mov
sub
push
xchg
xchg
repnz
xchg
ret
jne
sbb
pop
ret
repz
fsubrl
xchg
adc
lret
shlb
in
pusha
inc
or
fsubs
xor
push
movsl
push
pop
cmp
push
outsl
or
jp
inc
js
roll
xchg
sub
xchg
cmp
roll
mov
xor
mov
pop
mov
or
int3
movsl
pop
mov
daa
adc
sbb
xchg
roll
sub
stos
sub
hlt
in
fnsave
pop
mov
pop
dec
stos
mov
adc
repnz
pop
xchg
sub
orl
sbb
push
std
jg
dec
cmp
add
jno
dec
lcall
dec
mov
fcoms
sbb
movsb
jge
stc
xor
dec
adc
jmp
or
adc
lock
je
mov
orb
push
adc
aad
fisttpll
arpl
test
cmc
into
sbb
bound
iret
icebp
inc
fs
addb
ljmp
mov
sti
mov
mov
adc
cmp
cmp
mov
insb
push
inc
jmp
call
push
test
dec
dec
sbb
out
flds
addr16
jno
lcall
scas
jl
sarb
aas
push
adc
xchg
addl
jb
dec
xchg
clc
add
dec
mov
and
add
js
nop
xlat
dec
cmp
push
pop
ljmp
jg
push
pusha
jl
pop
jle
fildll
popa
ret
dec
shrl
inc
xchg
cmp
idivw
jb
cmp
mov
mov
or
pop
jbe
insb
cmpsb
xor
popf
mov
push
lret
lahf
ficompl
inc
lds
rclb
pusha
jns
ret
scas
ja
cs
ds
lock
adcl
aad
inc
lea
pop
movsb
insl
fsubrl
pusha
jg
sub
hlt
xchg
push
jnp
hlt
xchg
in
repnz
ret
push
jge
xchg
dec
pop
adc
mov
cmp
and
stc
lods
push
mov
pushf
pop
fidivl
fildl
dec
xchg
pop
inc
cmp
xchg
mov
in
jae
in
imul
ljmp
popa
sub
sbb
xchg
scas
stc
gs
and
mov
sbb
fisubs
cmpsl
ja
add
pop
sub
xchg
inc
mov
testb
shlb
shlb
dec
dec
cmp
movsl
rolb
jne
adc
mov
inc
or
jmp
out
data16
movsb
cmc
mov
popa
mov
cmp
dec
xchg
xlat
xchg
pop
xchg
xor
or
cmpsb
fwait
mov
imulb
std
or
popl
cmpsl
repz
imull
sbb
addr16
inc
lret
in
pop
mov
arpl
insl
inc
inc
mov
push
leave
xchg
xchg
imul
mov
aam
sti
rorl
cmpsl
push
icebp
and
and
inc
fld
in
lods
pusha
orb
jnp
xchg
out
cltd
xor
inc
sahf
sbb
xor
jecxz
shrl
mov
or
imul
mov
insl
sub
fnstcw
out
pop
adc
mov
xorl
sbb
daa
jne
sarb
mov
jnp
mov
daa
clc
fnstenv
or
rcl
arpl
dec
mov
outsl
xor
hlt
pop
pop
out
enter
dec
jl
add
shrb
loope
scas
lods
mov
stc
lahf
jmp
push
pop
dec
repnz
sti
fildll
jmp
xchg
inc
pop
scas
pop
fdivr
adc
sub
movsb
pop
push
cmp
adc
sahf
cmp
test
or
mov
cmpsb
push
and
push
push
cmc
rclb
mov
pop
jae
movsb
sti
in
pushf
sti
pop
loope
iret
mov
testl
adc
pop
cmp
or
repz
xchg
out
imul
sbb
addl
mov
testb
push
movsl
fs
inc
add
dec
into
jns
mov
movsl
mov
xchg
xor
lret
aaa
mov
sub
popl
mov
loop
pop
stc
std
xor
sbb
mov
jo
adc
aas
xchg
inc
jp
loopne
nop
sub
orl
adc
xor
das
xchg
sub
dec
in
dec
cmp
scas
push
ljmp
lods
fidivs
int
xlat
leave
push
js
dec
movsl
test
test
add
pop
cli
dec
mov
ja
fldt
mov
pop
clc
and
xchg
mov
xchg
pop
xor
lahf
xor
or
add
or
iret
ficoml
test
les
mov
ljmp
in
repz
and
out
push
shlb
pop
pop
cmpsb
pop
push
push
lret
out
mov
cmp
das
push
pop
repnz
push
loop
cmp
repnz
sbb
inc
iret
xchg
daa
loope
cli
mov
div
xor
fnstsw
ljmp
jb
xchg
sahf
rcr
cs
xor
mull
leave
xchg
xor
aam
popa
or
mov
sbb
or
cmpsl
sub
ljmp
pop
xor
pop
and
inc
xchg
jmp
pop
aam
daa
faddl
out
dec
stc
dec
sub
dec
mov
xor
sbb
filds
jg
xchg
adc
cmp
fnstenv
cmp
iret
push
pop
adc
mov
cmp
pop
xor
xchg
inc
and
outsb
and
arpl
mov
jg
mov
mov
mov
mov
aas
aaa
lock
lahf
fisubs
rcrl
xchg
imul
lods
and
fs
mov
imul
adc
mov
pusha
mov
int3
mov
mov
in
cmp
inc
inc
mov
and
jae
jmp
lret
movsb
jp
sbb
lret
inc
mov
popf
and
add
fldenv
sbb
add
shrl
frstor
bswap
negb
cs
xor
pop
test
call
pop
jnp
adc
mov
xchg
sub
jl
testl
enter
and
data16
arpl
lds
adc
aaa
jp
fs
mov
jb
ret
les
test
aaa
mov
xchg
inc
insl
mov
mov
sbb
fmuls
ds
outsl
aaa
add
sahf
pop
lcall
scas
xchg
mov
into
imul
mov
popf
xchg
fs
xor
push
xor
shrb
aaa
xchg
lret
mov
dec
cmp
sub
sbbb
stos
mov
cld
jb
or
imulb
sahf
outsl
push
lret
push
dec
cmp
jno
ret
xchg
jbe
cs
out
ljmp
cltd
lahf
outsl
and
gs
jge
push
push
mov
call
cmp
dec
cmp
lcall
or
ss
lea
inc
push
jb
sub
mov
lahf
xor
or
ds
xor
std
shrb
mov
push
mov
mov
xor
dec
mov
loope
mov
lret
ds
mov
sub
jns
stos
cmpsb
sbb
stos
lahf
ret
fistl
cmp
jle
out
test
add
pop
rorl
je
inc
xlat
fucom
int3
push
push
cmp
js
or
cmpsl
icebp
push
dec
stos
imul
lea
into
dec
rclb
xchg
js
inc
push
in
clc
in
dec
xchg
sub
mov
fidivrs
pop
mov
mov
std
jle
dec
pop
iret
ret
lea
gs
sbb
repz
fdivl
jmp
rcll
fldl
hlt
sbb
mov
jno
add
movsl
sarl
jnp
jo
xchg
sub
mov
and
mov
test
test
pop
sbb
enter
test
cmp
into
xchg
int3
inc
filds
popf
xor
xchg
out
insb
or
lret
repz
push
push
in
and
pop
pop
divl
push
add
dec
insb
sarb
push
scas
scas
jmp
fisttpl
shl
aas
pop
andb
sub
pushf
aaa
lahf
cmp
mov
and
inc
and
pop
jp
sub
loopne
cmpsl
mov
jns
pop
mov
mov
or
aas
mov
sbb
sub
pop
ficoms
push
stc
lahf
pop
gs
in
jmp
sbb
hlt
test
push
adc
stos
jbe
xorl
inc
xorl
push
je
mov
cli
or
insl
popa
out
or
jp
sbb
imul
cltd
push
call
mov
xchg
push
dec
dec
pusha
lret
call
mov
movsl
mov
push
mov
aam
pop
xlat
sub
rcll
adc
dec
jge
adc
mov
jns
scas
sbb
repnz
jmp
cmpsb
sahf
fidivrl
mov
filds
and
mov
aaa
cmp
mov
mov
mov
sbb
ret
mov
sub
shl
insl
dec
and
aam
jb
outsb
aaa
ret
daa
iret
mov
cmpsl
jnp
ja
pop
inc
gs
adc
imul
mov
ljmp
mov
into
imul
test
sub
xor
fmull
mov
in
std
mov
nop
lods
ljmp
mov
mov
fcmovnbe
jb
arpl
movb
scas
sbb
push
cmp
rcl
jno
inc
scas
ljmp
push
and
aaa
outsl
xor
les
dec
testb
xor
pop
inc
loope
in
and
mov
push
push
jnp
inc
xchg
xchg
cmp
jne
push
movhlps
out
out
bswap
push
sbb
or
xchg
je
jl
js
aam
xchg
adc
mov
shlb
sar
insb
push
into
es
int3
fcompl
mov
push
push
stos
les
mov
mov
pop
test
les
mov
sbb
aaa
movsl
pusha
mov
bound
rorb
pop
or
adcb
push
idiv
aad
frstor
adc
fst
movsb
loope
jl
xor
lock
dec
mov
es
xor
inc
xor
xchg
ret
jno
adc
mov
sbb
in
and
mov
in
out
inc
dec
call
fyl2xp1
nop
mov
shr
xchg
loope
inc
sbb
mov
pop
data16
lock
push
mov
divl
daa
fst
push
pop
or
dec
jne
fnsave
mov
lods
mov
or
rcrb
push
data16
daa
inc
xor
pop
xor
cld
adc
xchg
daa
in
scas
xor
jmp
adc
shll
out
andb
cmp
xchg
ja
or
imul
inc
sbb
mov
xchg
scas
idiv
sub
and
mov
ja
dec
jecxz
xor
mov
push
mov
es
lret
sub
adc
loopne
dec
xchg
jns
aaa
jl
cmp
in
mov
sub
mov
lcall
xchg
movsl
push
mov
push
cmp
and
and
fidivs
push
mov
sbb
mov
test
sbb
addb
pop
repnz
popl
jne
scas
mov
and
adc
cmpsl
jge
rcrl
in
xchg
les
pop
cltd
in
lock
out
lcall
insl
cmpb
lcall
sub
out
add
jp
lods
sbb
ret
mov
pop
test
sub
sub
fwait
or
or
movl
sbb
and
mov
mov
out
xchg
sub
pop
pop
add
movsb
daa
hlt
lock
push
lods
cmp
pop
fwait
adc
dec
adc
xchg
dec
inc
sub
outsl
dec
cmp
jns
sbb
mov
xor
aad
jg
pop
insb
faddp
lods
mov
in
scas
mov
sub
sbb
gs
or
imul
sub
xor
mov
fs
out
test
mov
pop
call
xchg
mov
out
mov
leave
fs
jp
xor
cltd
aad
and
and
lret
mov
test
divl
mov
stos
jbe
ret
or
in
dec
scas
adc
push
es
sbb
xor
mov
call
xchg
cmp
or
fiaddl
push
enter
ss
mov
repz
ror
in
mov
inc
push
cwtl
adc
jnp
pusha
adc
inc
cli
mov
arpl
and
setge
decl
dec
loopne
fstpt
loop
jmp
mov
repz
mov
sahf
enter
xchg
xchg
dec
cmpsl
and
cld
pop
add
enter
ret
cmpsl
push
sbbb
or
bound
pop
mov
dec
jl
sub
subl
mov
leave
lret
or
sbb
jle
jb
xor
adc
cmp
inc
or
mov
pop
mov
test
xchg
pop
jl
add
mov
sti
jg
push
push
jge
mov
xchg
xlat
test
add
push
lcall
pop
mov
outsb
out
sbb
aad
sub
cwtl
iret
add
ja
imul
dec
stos
dec
hlt
scas
push
imul
mov
pop
pop
or
cmpsb
aas
mov
adc
add
sbb
in
cld
xchg
cld
popf
cmp
imul
xchg
mov
dec
outsl
loop
push
shlb
pop
cltd
or
dec
cmp
jmp
and
cmp
cld
cmpsl
mov
adc
rorb
int
xchg
and
dec
adc
aaa
and
jne
fcoml
jecxz
cld
mov
cmc
and
mov
in
inc
xchg
dec
xchg
xchg
pop
mov
cmp
cmc
mov
dec
mov
loopne
lds
push
mov
out
or
mov
mov
jae
cmp
push
lea
repnz
add
xchg
aaa
xchg
ret
dec
mov
inc
dec
sahf
cltd
cwtl
xor
sub
sub
iretw
and
dec
jno
scas
fistpl
mov
and
hlt
mov
cwtl
jnp
addr16
call
leave
mov
push
pop
addr16
scas
xor
jl
mov
mov
xchg
pusha
xchg
scas
pop
into
in
mov
iret
push
xchg
clc
pop
add
ret
popf
imul
subl
outsb
xchg
add
inc
lea
xchg
sbb
push
pop
jo
and
lea
test
cmp
xchg
nop
imul
ficoms
enter
sbb
aas
inc
mov
aam
sub
lods
xchg
sbb
sbb
mov
xor
mov
inc
fiadds
mov
jmp
cmc
pop
inc
dec
or
and
cltd
add
adc
mov
push
hlt
aam
sbb
decb
cmp
inc
in
insb
and
stos
insl
aaa
in
adc
fs
mov
cmp
inc
jmp
xchg
lock
ret
xor
pop
sbb
stos
and
lret
and
data16
leave
lods
fmul
xlat
lea
dec
mov
ret
mov
dec
dec
push
xorb
std
push
and
add
mov
sbb
add
stc
xor
bnd
in
lea
push
ljmp
adc
mov
and
ret
or
imul
xor
jmp
in
and
stc
rcl
hlt
cwtl
and
ret
ds
inc
movsb
out
iret
scas
mov
add
lret
in
enter
inc
jo
jb
push
sbb
outsb
or
xlat
mov
rcrb
pop
push
aas
fstl
ret
dec
int3
andl
cmc
add
loop
mov
ss
aad
push
stc
mov
mov
xchg
clc
mov
bound
repnz
sbb
push
jae
nop
mov
xlat
mov
sbb
mov
xchg
mov
sbb
pop
xchg
push
xchg
repnz
test
and
imull
xchg
xchg
adc
popf
jmp
jae
loope
or
mov
adc
test
push
push
dec
mov
mov
repz
dec
call
cmp
in
movsb
imul
push
movsb
pop
popa
mov
mov
sbb
add
outsb
xchg
pop
dec
cmp
jmp
lock
das
pop
rcrl
jmp
xchg
sub
mov
mov
pop
jno
mov
push
pushf
fidivrl
pop
sub
icebp
mov
jp
mov
cli
xchg
cmp
pop
enter
mov
dec
lods
jmp
add
mov
adc
fs
mov
fucom
xchg
stc
sub
std
jle
lret
mov
loopne
jge
mov
and
dec
aad
cmp
in
js
in
leave
std
sbb
jecxz
arpl
xor
aaa
mov
insl
and
neg
add
mov
lds
imul
mov
jae
call
mov
fwait
insb
aam
mov
fucom
lock
shl
push
pop
jno
shrl
out
gs
pop
out
fcompl
fwait
xchg
js
test
jae
and
xchg
and
mov
and
insb
outsw
jp
mov
std
fimull
in
insl
shlb
dec
dec
and
bound
lahf
mulb
fisubs
imul
xchg
xor
rcr
nop
sbb
jnp
fdivrl
mov
cmpb
scas
lret
mov
push
dec
fiadds
ds
xchg
andl
popa
popa
js
and
aad
jl
fnstcw
inc
lret
push
adc
fs
xchg
cmp
out
push
or
iret
sbb
daa
dec
xchg
outsb
or
and
popa
cmp
lods
add
dec
je
bound
lret
insl
mov
adc
adc
mov
movsb
loopne
scas
cmpsl
mov
cs
shlb
mov
rorl
mov
leave
and
cmpsl
cmpsb
ficoml
sbb
je
adc
ret
sub
fst
xchg
fbstp
xchg
xchg
pop
into
or
sub
daa
add
mov
bound
inc
adc
lods
inc
adc
outsl
in
jbe
test
xor
aad
cltd
mov
sbbb
cmpb
outsl
sub
out
inc
fdivp
pop
inc
xor
inc
lahf
movsb
mov
enter
jecxz
lcall
aas
out
xchg
mov
sbb
movsl
dec
outsl
ja
popa
outsb
pop
scas
mov
jbe
lock
mov
jmp
and
sbb
test
cmp
jle
xor
dec
lahf
lahf
push
and
mov
push
cmc
dec
call
jge
lret
inc
and
inc
and
jnp
stc
ja
xor
pushf
shll
mov
lss
cmpsb
sbb
inc
std
sub
fldcw
dec
adc
add
mov
pushf
sub
icebp
pop
sbb
pop
push
stc
into
pop
xchg
cmp
push
xchg
cltd
push
push
push
add
xchg
addr16
in
and
jnp
into
inc
jno
xchg
mov
mov
icebp
add
daa
aad
lahf
sarl
adc
mov
sahf
add
mov
in
push
loope
mov
push
in
xchg
ljmp
mov
out
in
add
push
or
sahf
push
ret
pushf
sub
movsb
pop
sbb
xor
hlt
inc
cmpsl
pushf
mov
sahf
add
add
mov
lret
sahf
sbb
lahf
push
roll
arpl
lock
xchg
adc
push
add
outsl
aam
pop
mov
inc
sub
es
lret
es
push
aam
dec
add
fildl
mov
xor
lret
scas
dec
xchg
aam
xor
sbb
ret
aas
sub
dec
jle
loope
pusha
cmp
pop
es
jecxz
sbb
mov
jns
clc
cmp
xor
inc
mov
sbb
xchg
scas
sti
adc
dec
in
loopne
mov
mov
out
sti
aad
int3
sub
push
outsl
or
nop
jle
add
lret
aam
pop
insb
xor
pop
push
jbe
cmpsl
stc
xchg
sahf
push
mov
pushf
arpl
ljmp
sbbl
cmp
and
xchg
mov
imul
sub
out
ds
sbb
pop
mov
data16
cli
es
xchg
in
and
jae
lret
and
sub
pop
insb
jp
jno
repnz
adc
jg
fldenv
call
lret
jae
aad
lods
popf
inc
jecxz
aad
push
test
incb
fistl
dec
mov
and
mov
push
jg
sbb
push
ss
lock
pop
pop
mov
or
test
or
push
sahf
xlat
push
add
arpl
sub
mov
cli
push
mov
sub
and
jecxz
pop
push
pop
pop
cmpl
stc
push
shrl
pop
sbb
mov
nop
mov
test
hlt
dec
sub
dec
popa
push
js
nop
pop
add
mov
test
mov
cmpsb
lds
cwtl
mov
push
mov
nop
imul
sti
cmp
cmpsl
stos
lret
loop
dec
out
not
push
xor
cmp
mov
dec
jle
pop
mov
jae
mov
into
and
mov
xchg
fs
testb
mov
rcr
ret
pop
jbe
mov
pop
mov
mov
cmp
cld
sub
in
mov
adc
push
dec
mov
and
repnz
js
in
add
push
aas
xor
ror
ljmp
adc
mov
outsb
pop
jnp
mov
rolb
jns
mov
add
adc
xorl
jbe
inc
in
scas
ljmp
fmull
dec
cld
mov
sub
mov
mov
cmp
mov
call
lds
mov
aam
add
insl
aaa
inc
insl
jns
cmp
mov
outsb
xchg
mov
dec
or
push
mov
add
sbb
xor
sti
es
dec
int3
jge
xor
loopne
nop
ljmp
ja
jns
test
inc
call
adc
push
add
imull
fwait
sbb
ds
clc
roll
mov
inc
xlat
ds
cmp
pop
cmp
mov
xlat
clc
pop
jmp
cmp
cmp
mov
incl
pop
cmpl
mov
sub
cmp
xchg
and
in
jnp
and
mov
inc
xor
xchg
aas
add
pop
mov
jl
cmp
dec
sti
mov
add
adc
and
sahf
leave
sahf
pop
dec
push
shl
les
mov
mov
or
sbb
dec
xor
shlb
testb
mov
sbb
call
lcall
mov
movsl
xor
mov
sub
or
fldcw
sub
mov
aaa
pushf
lods
jg
das
mov
das
cmp
aad
loop
adc
jnp
adc
mov
rclb
and
pop
and
sub
pop
xchg
rorb
in
repnz
loopne
mov
mov
xor
decb
lds
lea
lods
stos
loopne
int
sub
aam
aam
mov
inc
aam
out
lock
sbb
mov
pop
cmp
iret
fbstp
pop
sub
pop
inc
aam
or
bound
dec
mov
mov
sti
sar
lock
loopne
sub
pop
dec
popa
fistps
mov
jmp
mov
aaa
adc
sub
pop
dec
sbb
test
iret
inc
adc
in
addr16
shlb
inc
out
and
push
jae
stc
mov
inc
fidivrs
ret
mov
and
popa
repnz
lds
mov
cli
jge
add
js
xlat
test
ss
fistpll
inc
imul
xor
push
pop
cmpsl
imul
sub
lahf
fcmovnbe
sahf
or
out
jecxz
and
in
adc
loop
aad
mov
loopne
fs
inc
adcb
inc
out
and
mov
aam
es
pop
pushl
push
push
iret
add
add
inc
cmp
fwait
cwtl
inc
or
cmp
push
add
imul
mov
fmulp
inc
add
adc
mov
push
shl
dec
fisubrl
arpl
add
lds
push
adc
add
jge
inc
cmp
push
mov
les
lock
sbb
adc
mov
dec
mov
imul
int
jne
in
sbb
jl
icebp
or
cmp
inc
and
dec
ret
je
ljmp
cmp
in
jle
out
mov
jl
cmp
mov
adc
out
adc
xchg
out
mov
fistpll
cmp
cmp
leave
hlt
icebp
aas
inc
cmp
mov
or
orb
frstor
stos
shrb
aaa
mov
jb
adc
sbb
cmp
shlb
cwtl
pop
xor
icebp
cld
daa
xor
mov
jo
daa
push
xchg
jnp
xchg
mov
xchg
jg
daa
arpl
xchg
mov
pop
loope
in
or
dec
or
ss
dec
jae
pop
jae
daa
daa
es
pop
iret
loope
pop
jbe
inc
mov
and
cmc
cmp
lods
mov
outsb
scas
rclb
cmc
or
out
cmp
mov
movsl
adc
pop
xor
xchg
rcrb
bound
adc
push
cmp
cmp
push
xchg
sub
pop
and
mov
js
pop
jae
pop
mov
xchg
inc
pop
jns
addb
test
jg
add
loopne
ffreep
les
sbb
nop
cmp
mov
sbb
xor
shl
loopne
lcall
or
lret
insl
pop
jae
es
stc
mov
mov
sahf
pop
test
adc
pop
ljmp
mov
ret
mov
push
daa
fbstp
and
pop
sbbl
clc
adc
jge
jb
mov
cmpsb
xor
pusha
call
pop
and
rorb
ds
mov
or
push
dec
pop
insl
dec
xchg
jg
jp
sub
mov
or
insl
xchg
or
insb
jb
push
repnz
adc
es
inc
stos
cmpsb
inc
outsb
mov
mov
mov
push
adc
pop
mov
and
adc
in
xchg
ud1
dec
ds
mov
dec
lock
xchg
loopne
push
insl
insb
gs
mov
das
xor
sahf
xor
add
bound
lret
push
adc
push
jle
bound
cmpsl
push
lea
push
pop
push
leave
aad
jle
push
cmc
and
jne
or
ret
js
push
mov
lahf
rcr
sbb
or
cmp
lea
stos
or
adcl
mov
dec
andl
cwtl
repz
imul
arpl
push
cmp
lods
divl
pop
icebp
lds
les
leave
add
sahf
lods
mov
sbb
dec
and
dec
fidivl
jbe
ja
inc
fisubs
or
fisubs
nop
inc
sbb
fwait
xor
adc
mov
pop
lds
xchg
popf
fsub
loopne
loope
xchg
pop
outsl
fwait
push
adc
stc
cmp
arpl
push
ss
cmp
xchg
add
and
les
dec
mov
cmpsb
add
push
mov
inc
push
lea
sub
jo
sub
mov
mov
xchg
sub
jmp
adc
aam
or
test
add
mov
test
sbb
int
push
outsb
fiaddl
push
mov
push
inc
adc
pop
imul
ds
stos
push
ja
push
inc
cmpsb
and
fnstenv
xlat
into
xchg
inc
lods
dec
mov
add
pop
cmp
aaa
xchg
pop
arpl
xchg
decl
aad
orl
add
and
roll
andl
push
nopl
outsl
frstor
sub
je
data16
pop
push
jb
adc
andl
sahf
mov
cmp
iret
jmp
test
or
scas
mov
adc
fucomi
sub
cmc
scas
dec
mov
pop
mov
repz
inc
rclb
or
stos
das
fcoms
xlat
jne
lea
arpl
das
sbb
add
fdivr
jo
orl
negl
dec
in
in
dec
lcall
sti
pop
or
ds
es
push
and
lcall
cmp
mov
push
insb
mov
outsb
xor
fdivrl
loopne
fmuls
into
pop
mov
sbb
in
xor
stos
add
sbb
jae
jno
bswap
xchg
lods
movsl
inc
jb
adcb
insl
ret
int3
in
in
sub
jl
add
xchg
jns
lahf
sahf
mulb
loope
cwtl
outsl
icebp
adc
inc
push
imull
ja
pop
sbb
movsl
call
xchg
movsl
jmp
leave
xor
test
adc
sub
inc
add
xchg
fcmovne
or
pop
mov
mov
inc
decb
lds
test
loopne
xor
sub
lahf
scas
or
stos
int3
call
shrb
cld
in
push
daa
jne
loop
jae
icebp
cmp
movsb
es
in
or
mov
fistps
inc
inc
cmpsl
das
sbb
jl
push
loope
sub
and
xchg
orb
insb
clc
out
scas
xchg
ljmp
jge
mov
cwtl
mov
adc
sbb
add
lret
test
pop
push
sarl
jo
and
mov
fidivrl
pusha
repz
imul
xor
insb
insl
sbb
lcall
dec
pushf
sbb
mov
mov
dec
jl
adcl
test
sbb
mov
std
jp
inc
mov
mov
jo
arpl
pop
repnz
lods
inc
inc
cwtl
sti
shlb
mov
fs
cli
pushf
cld
push
mov
xchg
lcall
xor
xchg
mov
sbb
stos
mov
and
xchg
push
test
or
idivl
mov
stos
ljmp
leave
int
push
cmpsl
mov
cmp
hlt
aaa
adcl
imull
jo
lret
std
idivl
stos
mov
jecxz
adc
add
nop
sbb
outsb
pushf
in
jmp
int3
add
jae
cld
adc
dec
sub
push
repnz
mov
sarb
test
lods
cwtl
shll
adc
sub
in
out
push
sbb
xor
mov
aam
adc
or
push
add
icebp
je
pushf
xchg
sub
lock
orb
js
rorb
das
int3
cmpsl
sub
add
lods
std
sub
xchg
shlw
outsl
stos
popa
mov
mov
fwait
popf
push
xor
mov
fidivl
xor
sub
sbb
mov
sub
pushf
mov
jae
cmpsl
xchg
std
aaa
xchg
xchg
adc
push
cmp
ds
pop
imul
in
jmp
data16
arpl
lea
mov
cmp
mov
xor
stc
lcall
sbb
cmp
push
cmpsb
sysenter
pop
bound
adcb
jae
filds
subl
aas
ficoml
mov
push
repnz
mov
xchg
sbb
mov
lods
mov
jp
arpl
fs
adc
stos
loop
xor
je
outsb
ja
add
adc
jp
aam
xchg
cmpsb
adc
xchg
push
aas
stc
xorl
popl
or
std
arpl
xchg
inc
pop
sbb
xchg
cs
mov
mov
push
or
jnp
es
xor
sbb
pop
orl
lods
outsb
mov
inc
mov
arpl
mov
decb
sub
iret
xchg
mov
dec
sahf
cmp
sub
push
jae
les
out
jl
push
push
push
hlt
xchg
jge
and
lods
mov
add
pop
ja
xchg
jo
pop
sbb
push
shr
adc
jae
pop
fsubs
mov
mov
inc
add
push
popf
mov
incl
push
push
xchg
add
mov
ds
cmp
or
loopne
cmp
idiv
xor
int
jle
push
lods
mov
lcall
test
inc
or
pop
lret
test
add
jmp
pop
faddl
sub
xor
inc
lods
and
push
mov
loope
int3
cmpsb
inc
aas
sub
or
ret
insb
popa
push
inc
insl
adc
int3
adc
xlat
xchg
mov
jmp
aad
cmp
push
xor
mov
cmp
leave
pop
adc
int
mov
mov
icebp
outsb
ds
aas
leave
mov
push
push
jg
inc
int3
js
jbe
jmp
mov
loopne
mov
inc
lds
fstl
mov
fidivl
enter
jns
das
out
pop
lds
mov
mov
jge
and
xor
sbb
shrb
pop
mov
std
mov
sahf
dec
fwait
push
sbb
xchg
outsb
and
jmp
imul
ret
es
sub
jmp
or
mov
into
xchg
fbld
sbb
mov
cmovb
pop
out
and
push
orl
sbb
dec
pop
xchg
bound
mov
imul
mov
jne
jge
cmp
mov
sub
mov
stos
adc
cmp
fdivp
stos
dec
ds
mov
lret
loopne
and
inc
loop
imul
jnp
xor
mov
adc
ret
xchg
xor
aaa
push
inc
sub
aaa
mov
fsubp
jb
sub
dec
aas
outsl
aaa
ret
cmpsb
sti
je
in
and
das
mov
inc
xor
pop
insl
sbb
push
pop
ret
xchg
cmpsl
mov
out
rcrl
mov
add
repnz
fcomps
sbb
pushf
sub
mov
test
in
jae
jne
lret
add
inc
gs
and
mov
adc
loope
push
sub
mov
roll
scas
and
mov
xchg
mov
mov
jmp
test
aad
mov
lea
es
pop
and
or
mov
jo
push
sbb
hlt
jbe
push
sbb
xor
movb
add
dec
push
or
andl
add
mov
movsl
movsb
adc
mov
popf
mov
pusha
iret
divb
sub
jge
pop
or
pop
and
push
sub
add
add
xchg
imul
in
mov
and
int
xchg
push
mov
and
addb
xor
repz
aas
dec
int
xchg
cwtl
out
push
sarb
pop
in
int3
clc
stos
cmp
imul
scas
cmp
jb
add
sbb
dec
shlb
enter
and
xor
stc
push
dec
mov
jle
jl
cld
adc
and
xchg
andl
imul
repnz
jnp
inc
jecxz
fcoml
out
push
jne
daa
fisubl
lds
jmp
mov
aam
and
mov
jae
ja
insb
push
test
stos
push
pushf
mov
mov
adc
add
icebp
lret
inc
ficomps
je
dec
sbb
ret
in
add
lret
or
lret
ucomiss
xor
aas
cmp
divb
in
jmp
jge
xchg
sbb
push
aas
nop
ss
daa
pop
sbb
and
dec
sbb
sub
sub
dec
lret
pop
repz
push
inc
ret
stos
pop
pushf
mov
aam
repz
mov
adc
test
es
add
mov
in
xchg
or
mov
fistl
xchg
xor
in
movsl
fildl
mov
jno
and
xchg
or
out
lret
lds
outsl
mov
or
jb
ret
dec
xchg
pop
mov
insl
ret
mov
std
jecxz
aam
jb
and
int
xchg
scas
adc
sub
or
xorb
into
mov
mov
lds
mov
push
jbe
pusha
mov
fwait
mov
scas
cli
cltd
inc
test
mov
and
add
xor
dec
fdivrs
lahf
mov
lret
pop
sahf
or
cmp
arpl
std
mov
inc
mov
mov
mov
add
xchg
lds
test
lock
icebp
xchg
push
fwait
pop
mov
les
ss
aad
stos
nop
les
mov
cmp
add
jecxz
sti
jo
mov
fidivrl
jne
fcomip
fidivrl
andb
outsb
es
mov
shrl
mov
in
divb
add
pop
mov
mov
inc
sbb
mov
adc
movsb
jnp
sub
int
shrl
inc
jge
xor
or
sub
mov
jg
pop
inc
xlat
adc
mov
or
jmp
add
add
jmp
dec
ja
fs
sbb
andb
rcll
jae
shr
test
pop
add
mov
pop
pushf
pop
fisubrs
stos
decl
push
xorl
push
scas
or
adc
fadds
arpl
pop
cmpb
mov
and
xchg
in
xchg
sti
mov
mov
inc
pusha
mov
push
push
jo
int3
les
dec
rcr
dec
lods
inc
outsb
loop
mov
pop
xchg
cmp
or
imull
sbb
hlt
push
xor
repnz
out
inc
shlb
icebp
sbb
mov
push
add
or
pushf
jg
add
mov
popa
push
scas
imul
sbb
mov
sub
sbb
neg
in
ret
inc
and
add
mov
jno
add
mov
xchg
push
dec
cmc
call
sbb
inc
fdivrp
or
int
sub
test
mov
and
and
xchg
sbb
inc
sub
push
adc
mov
jb
iret
pop
fcomip
cmp
adc
inc
sub
icebp
das
mov
or
mov
lea
mov
pop
in
push
rcrl
or
add
scas
pop
cmpsl
and
sahf
mov
adc
pop
js
jne
and
imul
inc
xchg
mov
add
inc
mov
out
pushf
roll
cs
xchg
jno
mov
mov
jnp
insl
add
fnstsw
or
mov
cmp
repz
fsts
faddl
adc
cwtl
adc
mov
xor
mov
jno
inc
sub
fwait
add
loopne
loopne
movsb
push
lret
hlt
xlat
lret
pop
pop
push
xor
rorb
and
outsl
xlat
sbb
dec
stc
mov
push
into
cmpsb
cmp
and
in
mov
nop
jecxz
mov
mov
xor
add
cmp
in
mov
js
push
scas
dec
add
inc
inc
mov
mov
jno
sbb
cmc
aaa
push
ret
mov
push
cmpb
and
lcall
dec
repz
xor
inc
cmp
xchg
dec
ja
test
xchg
xchg
xor
pushf
jge
leave
sarb
sahf
push
push
test
dec
outsl
insl
cltd
push
aas
fadds
mov
imul
mov
xchg
push
cmp
dec
icebp
sbb
test
mov
xlat
lcall
push
imul
xor
pop
inc
xlat
xchg
sar
popf
cwtl
popa
xor
mulb
xor
inc
pop
mov
cwtl
out
mov
jno
dec
notl
sub
in
pop
movsb
into
in
out
adc
and
cmp
sahf
dec
jecxz
mov
mov
xor
mov
aad
loopne
loope
repnz
push
push
inc
pusha
pop
mov
aad
test
mov
ret
into
addl
xchg
repnz
aad
xchg
leave
dec
out
mov
dec
dec
arpl
mov
fidivs
pop
pop
push
jge
sub
leave
jb
push
insb
and
cmp
pop
out
testl
dec
mov
xor
jnp
dec
outsl
and
mov
in
imul
xchg
pop
or
lods
aaa
mov
call
pusha
leave
lret
lcall
push
fidivs
push
mov
cmpsb
add
cwtl
mov
scas
dec
cmp
daa
jbe
shlb
and
xchg
cld
lret
mov
jb
inc
dec
cltd
mov
gs
shl
rcll
loop
outsl
fldt
adcl
imul
js
in
sahf
jo
cmp
daa
stos
decb
out
rcr
jo
xor
mov
mov
add
mov
sbb
test
pop
les
lds
aas
and
mov
jmp
pop
lahf
es
lret
jecxz
lock
xchg
leave
mov
sub
arpl
adc
mov
xor
pop
arpl
cmp
mov
mov
test
call
jp
lahf
popa
rcll
or
xor
xchg
and
out
nop
rcrl
mov
shl
stc
sub
adc
fadds
ja
jnp
mov
push
lret
adc
push
xchg
aas
icebp
sar
pop
push
inc
dec
das
rcll
and
mov
push
xchg
jne
dec
mov
cld
aas
pop
call
cli
mov
lods
cwtl
mov
and
or
fildl
xlat
fs
outsb
mov
xor
popa
xchg
insb
out
mov
jbe
fs
stos
cmp
and
insb
jp
inc
sbb
pop
gs
dec
fisttpl
mov
cmpsl
out
aad
pop
push
dec
inc
xor
shrl
cmp
test
and
xchg
push
sbb
lea
sbbb
lcall
cmp
fists
or
inc
bnd
rcll
mov
jbe
sahf
and
imul
mov
dec
psubsw
aad
sbb
dec
sub
clc
cmp
orl
mov
test
and
pop
aad
push
filds
push
pop
cmp
sahf
mov
xchg
sub
jmp
daa
sbb
cmp
sbb
push
sub
mov
cltd
xor
ss
sbb
inc
dec
repnz
or
loop
fcmovb
push
adcl
enter
xor
test
clc
mov
or
inc
fwait
es
push
sbb
fcoms
push
into
es
push
sarl
jbe
pop
cmovns
fisubl
das
ret
out
or
cli
decb
sbb
dec
dec
xchg
stos
inc
leave
jbe
and
dec
decl
out
cmp
push
orl
outsl
sub
sbb
and
in
ret
adc
mov
test
stos
jno
jno
and
in
jns
adc
dec
pushf
cwtl
scas
adc
xchg
movsb
leave
xchg
je
daa
sbb
ja
pop
xlat
rcll
push
in
daa
nop
ja
jp
hlt
out
push
sub
sbb
clc
lahf
addr16
pop
fisubs
outsl
mov
sbb
loop
mov
dec
xorb
add
out
jns
movsb
adc
jmp
xchg
lret
mov
pop
stos
lret
mov
sahf
push
bound
les
inc
fwait
iret
dec
decl
int3
nop
jno
mov
cmpl
mov
je
out
adc
mov
daa
lret
insl
mov
cmp
orb
loop
xchg
sbb
jae
imul
pop
aas
cltd
cmpsb
push
adc
mov
mov
sub
shrl
xchg
stc
mov
std
fcompl
test
jp
xor
adcl
sbb
pop
xor
and
adc
loopne
cli
mov
mov
enter
xchg
lds
lret
pop
add
out
inc
jle
jg
in
cmpsb
and
cmp
sbb
sub
xchg
mov
fidivs
mov
adc
mov
cld
mov
jle
mov
mov
loope
inc
scas
mov
mov
lea
mov
xor
clc
mov
insb
sbb
out
sahf
loop
std
jne
and
adc
nop
add
pop
ret
int
cmpsb
mov
stos
loop
sub
sbb
fstpl
xor
lds
lea
data16
push
shl
jecxz
push
call
xchg
scas
mov
adc
cli
jo
data16
shlb
dec
xchg
inc
cmp
jl
lock
and
cs
or
ret
lahf
inc
in
mov
sub
shll
dec
nop
in
fmuls
icebp
rcrb
cmp
stc
ss
mov
inc
dec
repz
mov
mov
bound
adc
lahf
ljmp
test
inc
dec
mov
cltd
imul
mov
stos
jecxz
mov
pop
jle
and
fs
push
dec
repz
cld
sbb
lret
mov
xchg
adc
movsl
cs
cs
lods
daa
pop
loop
or
sub
je
adc
push
xchg
sbb
add
xor
cmp
jbe
int3
in
fsts
ljmp
jmp
xor
add
dec
cmp
adc
mov
sbb
cmp
push
mov
jb
or
mov
out
push
fwait
adc
jmp
nop
subb
int
cmp
pop
ljmp
inc
jo
cmc
adc
ds
dec
outsb
mov
lea
dec
out
lret
mov
out
lcall
push
stos
outsl
iret
call
mov
notl
call
push
pop
je
icebp
jnp
dec
jns
sub
xor
or
mov
mov
mov
push
rorl
push
ljmp
movsb
mov
pusha
cmp
or
xchg
mov
adc
rolb
sbb
and
cmp
sbb
xchg
fldcw
lcall
data16
test
out
imul
mov
shr
mov
mul
pop
cltd
pop
std
outsl
neg
cmp
sub
test
sbb
inc
aam
dec
scas
ds
loopne
and
test
rclb
leave
repnz
push
in
sbb
popf
inc
push
int3
mov
dec
sub
les
in
insl
js
mov
shrd
outsb
mov
ja
or
and
lcall
repz
int
ljmp
mov
push
rcr
cmp
push
pop
data16
mov
jp
pop
adc
in
sbb
xchg
mov
inc
lock
push
loop
jmp
xchg
mov
add
jo
pop
sub
inc
movsb
xchg
sbbl
adc
inc
std
jb
sub
ljmp
hlt
jecxz
fpatan
fldenv
addr16
dec
add
xchg
ljmp
out
jmp
call
jmp
and
and
orl
pop
adc
lds
xchg
xchg
or
pop
xchg
push
addb
mov
ja
add
push
pop
pop
insb
int
xchg
push
or
or
or
jg
mov
enter
or
nop
inc
lods
push
and
inc
jno
xchg
pop
xor
push
js
jo
pop
fiadds
rcrb
mov
lock
pop
sbb
push
xchg
es
push
cs
add
mov
addr16
xlat
mov
leave
mov
nop
test
int3
ljmp
fmul
leave
push
xor
sbb
jl
lods
jns
movsb
popa
sbb
xor
sub
es
neg
pusha
push
dec
test
or
pop
lret
sbb
cltd
roll
jns
xchg
lea
outsb
sbb
sub
add
mov
inc
push
push
jb
fcoms
xchg
les
or
lahf
jae
notb
dec
sub
sahf
fxch
call
jecxz
fcom
outsl
sbb
in
cmp
push
lcall
mov
in
jns
add
xchg
lods
pop
mov
popw
cmp
push
movsl
repnz
pushl
out
sub
push
js
addr16
push
divl
jae
fistps
add
and
mov
js
mov
aaa
push
int3
neg
push
in
rorb
mov
mov
push
js
dec
ret
outsb
inc
inc
stos
jmp
scas
xchg
repz
scas
ljmp
and
in
sub
cmp
testl
aas
sub
cs
xchg
cmp
inc
mov
pushf
ss
xor
push
mov
sarb
jmp
add
cmp
shrb
adc
popl
enter
jle
out
ret
pinsrw
inc
repz
ja
push
push
repnz
pop
test
xchg
add
int3
mov
cmc
enter
lret
into
rcrb
mov
daa
sub
xor
pop
into
lret
ret
and
in
movsb
ja
mov
push
mov
mov
jmp
enter
push
push
stos
and
scas
addr16
jb
je
test
mov
or
sbb
sub
inc
jne
aas
insb
not
scas
fistl
mov
lahf
hlt
push
inc
fisttpll
jge
pop
es
push
inc
xor
mov
pop
jmp
add
cmp
lods
push
fbld
jecxz
pop
das
cwtl
movsl
out
aad
jne
in
test
adc
imul
stc
and
sub
or
cmpsb
mov
mov
insl
xor
js
stos
dec
pushf
addr16
lret
insl
pop
pop
mov
add
push
cmp
sub
add
mov
and
push
mov
cmpsl
adc
and
dec
push
int
scas
xlat
jne
sub
aaa
pushf
sub
lock
aas
mov
or
or
inc
jns
movsl
bound
dec
push
xchg
sub
sub
adc
shlb
push
ret
stos
lahf
sub
mov
insl
fstl
icebp
sub
cmc
dec
pop
enter
push
push
cmpsb
mov
shll
cmp
jp
sub
dec
cld
pushf
lock
sbb
pushf
mov
push
push
mov
push
shll
adc
xor
ror
add
call
sub
bound
addr16
mov
rcr
mov
push
cmp
lds
cmpsb
fwait
sbb
mov
test
loopne
fwait
lret
movsl
pop
push
or
out
xor
lret
pop
jecxz
inc
sub
push
cmp
ficomps
out
fistpll
cmpsb
repz
mov
or
cli
adc
jae
mov
pop
lret
mov
out
jnp
stos
dec
leave
in
jle
mov
mov
add
or
dec
scas
mov
ret
fdivl
data16
std
insb
and
bound
mov
dec
enter
bound
push
in
in
push
clc
into
xchg
popa
dec
rorb
lret
cmpsb
sbb
loope
mov
insl
popa
faddl
lret
dec
das
push
push
sub
jmp
push
sbb
int
sbb
sbb
push
insb
sbb
push
inc
pop
setb
sub
dec
mov
jns
lods
in
xor
popa
mov
scas
sbb
dec
jne
cmp
ss
add
stc
jnp
add
mov
inc
xorl
jecxz
or
data16
ret
out
mov
push
adc
hlt
xlat
mov
sar
sub
int3
inc
jecxz
adc
ljmp
pusha
or
xchg
pop
sbb
add
add
mov
cmp
adc
mov
sbb
add
repz
das
add
cmpsl
data16
dec
ljmp
xchg
or
mov
jno
fisttpl
dec
popa
mov
mov
mov
subl
outsl
sbb
jmp
mov
lahf
cmp
out
outsb
rcll
mov
ja
mov
sbb
hlt
xor
cwtl
loopne
jg
xor
xchg
ror
and
lods
sub
pop
jp
pop
cmp
orb
cmpb
sbb
xor
sbb
repnz
jg
xor
pop
mov
jnp
pop
mov
xchg
imul
mov
dec
mov
ret
mov
shll
rcrl
insb
add
mov
insb
adc
add
popa
pop
iret
hlt
pushf
pushl
ret
and
lret
clc
adc
mov
lret
mov
movb
lds
or
fnstsw
xor
sahf
inc
loopne
in
fmul
gs
arpl
cmpsl
ljmp
addr16
add
mov
mov
testl
mov
or
adc
mov
and
xlat
aad
test
stos
into
icebp
std
mov
sbb
xchg
test
scas
dec
cmpsl
push
push
imulb
mov
nop
das
fnstsw
ss
cli
js
enter
div
adc
adc
xchg
lea
jmp
scas
adc
data16
push
pushl
lret
add
mov
adc
es
mov
enter
mov
sarb
mov
cmp
loope
sub
sbb
jo
das
add
negb
stos
cmp
mov
dec
xlat
mov
cmp
or
push
outsl
inc
addr16
mov
dec
mov
pop
xchg
add
fisubrl
nop
cli
mov
shrb
je
cli
mov
lret
ret
pop
mov
xor
decb
insl
add
and
pop
inc
scas
cmp
dec
and
lea
push
xchg
pop
or
pop
xchg
cmp
pop
push
arpl
jno
push
faddp
xchg
mov
cmpsl
sub
inc
xchg
adc
cld
inc
cmp
repz
cmp
jno
popl
sub
lods
data16
dec
inc
addb
inc
jl
push
js
sub
jg
xchg
sub
cmpsb
or
test
popa
push
test
bound
cmp
insb
jl
pop
out
xchg
cmpw
out
pop
mov
testb
push
out
xchg
adc
rclb
mov
jl
cmp
imul
mov
mov
xchg
add
pop
dec
ds
inc
sbb
in
in
xchg
xchg
scas
jge
pop
push
pop
mov
fcmove
imul
sub
jnp
cli
inc
push
jle
stos
mov
adc
pop
dec
sbb
and
insb
loopne
cmp
lahf
sub
or
gs
mov
adc
xor
sbb
pop
daa
xchg
ljmp
aas
clc
mov
je
imul
sub
pop
cmp
xchg
loop
repnz
movsb
inc
pushf
repz
cmp
sbb
and
inc
sbb
outsl
sub
cmpsl
fwait
sbb
mov
jecxz
out
pusha
dec
mov
idivb
pop
inc
dec
lods
je
push
dec
sbb
mov
movsb
mov
push
lahf
divps
movsb
pop
cmpsl
notb
sti
xor
mov
jbe
sub
jge
data16
adc
xchg
cmp
mov
mov
inc
push
add
cmpsb
mov
cld
xchg
xchg
popf
sahf
push
daa
pusha
adc
mov
and
lahf
mov
xchg
ja
mov
out
xchg
mov
shr
and
lcall
ror
push
pop
aaa
mov
push
test
pop
cld
in
pop
add
jg
and
imul
jmp
shrb
int
sbb
movsb
loop
fcoml
sbb
cmpsb
nop
jecxz
and
lahf
lods
repz
xor
jno
rclb
inc
fiadds
push
mov
cmp
mov
fbld
mov
orb
mov
cmc
cs
and
and
sbb
leave
cwtl
adc
rolb
pop
push
mov
pop
pop
out
negb
adc
jp
dec
mov
jp
cmp
push
xor
out
and
les
mov
or
nop
je
in
arpl
xor
inc
xor
inc
ror
lea
arpl
dec
jae
inc
sti
jns
cmpsb
push
stc
mov
inc
mov
outsl
sbb
nop
xchg
stc
xchg
je
push
xchg
cmp
loope
pop
ret
jg
cmc
xor
push
push
subl
lcall
xchg
mov
mov
leave
inc
in
or
xor
cmpl
push
cmpsb
sbb
push
into
incb
and
pop
mov
ret
pop
cmp
nop
jo
lahf
jmp
movsb
lods
sbb
add
es
push
lcall
mov
jne
jecxz
and
sub
mov
mov
cmp
fdivrp
dec
xchg
inc
pop
or
jmp
call
lods
pop
xchg
xchg
lea
and
mov
or
xor
and
jle
fcompl
cmp
mov
pop
cmp
stos
inc
mov
mov
movsb
adc
push
insb
rorb
stos
cld
fndisi(8087
mov
sub
or
jg
pop
mov
enter
pop
jge
push
push
icebp
jmp
and
stos
xchg
sti
xlat
dec
sbb
xor
into
jae
icebp
in
jle
jns
popf
cmpsb
shll
iret
lods
mov
fmuls
xor
pop
xchg
loope
cmpsb
shlb
add
mov
aas
scas
xor
outsl
xor
sbb
imul
stc
cmpb
add
mov
xor
cmp
scas
in
sub
jno
jnp
fidivs
in
pop
push
imul
mov
rcrl
sub
cmpsl
out
sub
add
aas
xchg
fldenv
mov
std
and
std
bound
mov
sub
pop
out
je
push
clc
lock
imul
add
mov
cmpsb
arpl
lea
lock
xor
pop
inc
cmp
xchg
jb
inc
pop
xchg
cli
jbe
mov
lods
and
imull
clc
add
out
int3
pop
scas
lret
sbbl
fadd
dec
in
cmp
sbb
pusha
xchg
sti
arpl
adc
jb
mov
push
inc
lock
pop
es
pop
adc
fldl
lods
sbb
fstps
and
loopne
push
pop
idiv
arpl
or
mov
pop
fisubl
mov
jle
shlb
jmp
arpl
mov
leave
mov
ljmp
mov
mov
lret
scas
jbe
fildll
imul
xor
mov
in
mov
xor
popa
mov
test
adc
adc
arpl
call
pop
out
outsb
push
lods
mov
cld
cmp
inc
jecxz
mov
push
ss
sub
mov
repnz
aam
adc
int3
push
and
sbb
cmc
stos
adc
stc
into
shrl
cmp
sbb
mov
into
dec
mov
arpl
shrb
cmp
adc
mov
stos
movsl
rcrb
push
xlat
call
sbb
push
movsb
cmpl
mov
mov
cli
aas
ret
jge
mov
add
ret
jge
jg
mov
js
lea
mov
sbb
scas
xchg
sub
sbb
pushf
add
push
shr
jae
movsb
imul
or
sub
push
shrb
in
outsl
inc
mov
pop
int
inc
jae
and
inc
xchg
out
sbb
jl
ret
lret
inc
daa
in
xchg
add
loopne
pop
push
mov
push
mov
inc
aaa
sbbl
in
inc
in
add
shlb
inc
push
xor
push
add
shll
inc
insl
scas
orb
add
mov
and
aaa
push
sbb
pop
add
sub
nop
mov
mov
sub
mov
jge
xchg
inc
adc
in
notb
repnz
jmp
lcall
fmull
sbb
jno
pop
jae
add
mov
ret
aaa
or
shlb
fldcw
faddp
xchg
pop
cmpsb
pop
jb
cltd
push
or
pop
cmp
divb
fisubs
out
scas
out
jg
dec
adc
lcall
movzbl
cmp
sub
cwtl
hlt
adc
mov
xchg
mov
repnz
sbb
cmp
mov
jns
jo
or
outsl
jo
mov
add
cmp
add
iret
lods
out
inc
cmp
jmp
dec
ret
mov
jno
cmc
rcrb
outsl
xor
xchg
cmp
dec
xchg
std
pop
jb
rcl
aaa
mov
aam
cmp
out
mov
je
xchg
xchg
es
ds
decl
xor
xor
xor
and
xchg
jge
in
fmull
pop
cmpsb
xchg
xchg
jle
mov
push
mov
outsl
jecxz
mov
cmp
mov
inc
out
mov
jecxz
dec
xchg
xchg
sbb
test
das
hlt
sbb
ljmp
cmp
xlat
scas
adc
cld
sub
push
sbb
lret
xchg
jecxz
jle
mov
fiadds
ljmp
imul
pop
add
cmpsb
scas
sbb
inc
xor
aam
clc
adc
push
inc
lock
sti
cmp
adc
lods
adcl
sub
jno
aad
sbb
cmp
jo
sub
cs
out
jae
nop
mov
sbb
imul
popa
ljmp
add
scas
mov
mov
test
push
adc
mov
pop
shl
inc
pop
mov
cwtl
es
insb
rcll
mov
add
fstps
icebp
dec
add
mov
dec
mov
mov
sub
jl
js
pop
mov
xchg
dec
out
ljmp
inc
adc
jecxz
push
enter
icebp
int
cs
add
mov
and
jge
pop
push
jge
test
or
popf
arpl
ds
int3
mov
xor
inc
adc
xchg
test
sub
mov
push
rorb
rcl
mov
cltd
imul
in
pop
xlat
pop
jp
mov
mov
pushf
pushf
mov
mov
jae
js
jmp
adc
add
cmpsl
sub
push
push
ret
cld
mov
jg
fsubrs
jg
xchg
xor
xchg
push
push
imul
pop
inc
stos
in
mov
aaa
cli
fsts
jmp
adc
jmp
pop
int3
enter
mov
fildll
push
jnp
add
in
inc
jb
palignr
sub
jbe
cli
ficomps
das
inc
mov
dec
out
jg
jle
cmp
cltd
sub
sti
loope
rolb
loopne
nop
push
and
add
sbb
cmp
mov
inc
aad
push
jo
adc
lret
dec
or
mov
mov
mov
pop
adc
xor
call
and
and
popf
bound
mov
inc
add
push
pop
shlb
jns,pt
gs
sub
dec
add
repnz
into
repz
hlt
daa
punpckhwd
dec
adc
add
add
rorl
test
mov
fwait
or
call
push
sbb
in
aaa
xchg
cld
int3
shll
scas
in
cld
imul
mov
xchg
and
dec
movsb
xor
push
or
outsl
xor
pushf
cmpsl
push
cmp
nop
xor
fdivp
pop
and
inc
jnp
loop
div
dec
cmp
xor
in
sti
popa
mov
in
sbb
subb
push
mov
lods
shll
mov
mov
inc
je
js
cld
push
sub
lcall
lahf
and
cmp
iret
loope
or
roll
sub
mov
push
cmpsb
js
xchg
add
aaa
into
daa
xorb
cmpsb
pop
or
mov
repz
hlt
sbb
mov
mov
cmp
push
or
or
repz
pop
mov
imul
jl
xor
mov
xchg
cmpsl
add
pusha
bound
mov
inc
xor
jmp
ret
adc
loopne
mov
add
adc
mov
cs
mov
dec
test
fcmovne
enter
ret
rcll
pusha
inc
inc
mov
in
jo
cltd
stos
mov
lock
pop
repz
mov
mov
movl
cmp
mov
pop
out
das
sub
stc
push
leave
arpl
mov
call
dec
xor
icebp
stos
testl
xchg
in
xor
shl
sub
loope
jae
addr16
rorb
lahf
imul
gs
add
adc
sbb
dec
hlt
push
pop
sub
inc
rcrb
and
mov
jns
fs
loop
mov
add
sub
andb
rcrb
out
dec
or
inc
cmp
imul
mov
sbb
xchg
addr16
sarl
pop
push
mov
cmp
jns
mov
mov
shr
gs
push
xlat
ret
pop
cltd
cmp
cltd
aaa
mov
jecxz
enter
push
pop
push
out
shlb
outsl
mov
loopne
cmp
iret
push
and
setb
mov
lret
mov
ljmp
xor
sarl
shrb
mov
popa
shrl
je
and
loop
jg
gs
jne
cmp
int
mov
cmp
xchg
sbb
test
adc
or
sbb
bound
movsb
jge
test
sbb
mov
orl
cmpsb
push
mov
ret
ja
jae
pop
mov
scas
or
les
lods
scas
stos
fdivp
inc
inc
out
sub
sbb
cli
int3
adc
xchg
dec
push
push
xorb
cmp
clc
xor
mov
loop
adc
movsl
jecxz
jmp
mov
mov
and
adc
add
xchg
push
dec
shll
jb
scas
jg
xchg
out
test
add
insb
or
out
test
out
cmpsl
out
sahf
ljmp
adc
popa
pushf
or
xchg
lret
dec
jns
pop
xchg
bound
jns
les
fs
ret
pop
inc
or
push
push
das
fildl
push
mov
mov
or
lret
push
lahf
lods
fdivrs
jmp
out
dec
lahf
mov
mov
cld
cmp
dec
pop
mov
push
in
fs
mov
push
cmp
cli
jns
popa
lret
lret
mov
lods
movsb
loope
push
shll
pop
fisubrs
call
sbb
data16
out
aad
movsb
and
push
lods
mov
mov
xchg
addl
call
jb
jb
cmp
pop
and
xchg
cltd
xchg
call
xchg
cmp
or
xor
shll
imul
and
xlat
mov
pop
mov
iret
scas
jne
hlt
pushf
ret
jge
push
bound
testl
mov
cld
or
pop
outsl
pop
enter
insl
std
fs
call
xchg
mov
lahf
cmp
daa
adc
addb
xor
mov
sub
ficomps
fnstenv
mov
xchg
mov
lds
or
pop
add
xchg
xchg
lret
mov
xchg
cmp
jno
clc
ljmp
mov
pushf
inc
fdivr
in
and
mov
xchg
push
aam
test
sbb
mov
movsb
shll
inc
mov
mov
jo
dec
add
dec
xlat
dec
in
xorb
lods
xchg
imul
das
sbb
mov
add
dec
mov
mov
mov
lret
mov
pop
lahf
rclb
and
push
cmp
out
insl
pop
mov
test
cmp
pusha
repnz
sbb
jg
xchg
pop
jecxz
pop
ja
mov
sahf
std
insb
insl
or
sbb
cmp
out
or
sub
lret
sbb
outsl
cmp
mov
xor
cwtl
shrl
aaa
cmp
and
mov
inc
dec
and
aam
xor
pop
in
loopne
int3
fnstcw
xor
jmp
xchg
mov
sbb
jo
jl
xor
xchg
mov
sbb
inc
cmp
mov
int3
cmc
fsubr
mov
push
out
xor
jo
cld
std
into
adc
cmc
jb
mov
add
shl
pop
and
or
adc
loope
cmpb
loop
scas
jae
insb
xor
addr16
push
mov
test
ds
adc
lret
pop
cs
xchg
push
sti
xor
push
push
sub
xor
push
loop
adc
test
in
pushf
data16
es
outsb
adc
fs
cmp
add
lret
push
shll
mov
and
mov
scas
xchg
sub
sarl
pop
jecxz
cltd
add
adc
mov
jge
in
mov
shl
cmp
jae
inc
sub
pop
push
mulb
loope
mov
push
adc
dec
call
cmp
sub
sub
pop
xchg
push
int3
in
push
mov
mov
xchg
cmp
insb
scas
and
enter
xor
rclb
inc
mov
loope
ret
out
mov
enter
and
mov
stos
xchg
push
mov
inc
cmp
lcall
out
dec
and
mov
or
or
cltd
mov
push
jno
xchg
popa
bound
or
push
in
and
loopne
addr16
cld
mov
pop
sbb
loop
mov
sbb
frstor
je
in
rcll
jnp
iret
test
cmp
dec
add
fchs
lds
incl
xchg
push
movsl
mov
jmp
or
push
gs
scas
mov
inc
fcompl
sub
data16
cmpsl
mov
fs
les
cld
sbb
data16
movsl
push
rcr
sbb
sbb
sub
in
jb
mov
xchg
xor
pushf
xchg
adc
push
push
inc
adc
pop
dec
sbb
into
dec
aaa
pop
sti
bound
imul
xchg
or
sbb
jp
xchg
cmp
call
inc
add
movsb
aad
hlt
jmp
mov
fdivs
sbb
dec
mov
cli
cltd
nop
cmc
stc
subb
aad
test
and
fbstp
fs
sarl
xor
lods
cmp
pop
jns
lret
outsl
jg
lods
dec
into
aad
jl
fdivrs
dec
xchg
add
push
pop
or
jae
cmp
xor
lods
lods
and
or
fstl
pop
jns
jge
lahf
into
hlt
ds
cmpsb
and
and
pop
dec
cmp
mov
jns
popa
or
pop
lock
decb
outsb
mov
jmp
push
loope
sbb
xchg
aaa
add
xor
or
dec
adc
iret
jp
adc
ss
hlt
cmpsl
xor
adc
xchg
or
xor
shl
stos
xlat
push
movsb
add
mov
pop
ds
sbb
or
imul
cltd
sbb
push
cli
mov
into
test
inc
xchg
pop
jns
cwtl
sub
mov
fldcw
int
xor
jmp
xchg
out
rorb
pushf
std
negb
inc
ror
cmp
ret
dec
xchg
jl
jg
and
mov
push
aad
call
xchg
sbb
mov
lcall
iret
adc
imul
data16
clc
imul
mov
add
add
outsb
or
iret
cli
push
add
push
out
lods
es
push
clc
ret
fisubrl
fstpl
sbb
adc
out
mov
in
out
mov
cltd
or
lret
lds
in
iret
mov
jmp
rclb
dec
mov
add
mov
sbb
sub
mov
mov
xlat
repnz
mov
out
cmpb
sbb
xchg
mov
push
mov
je
mov
mov
fucom
ret
or
decl
dec
pop
inc
add
push
adc
sbb
and
or
inc
mov
ja
roll
ds
in
push
or
into
jno
inc
xor
in
test
push
loopne
sub
push
arpl
js
jecxz
sysexit
add
enter
repnz
xchg
in
inc
dec
adc
ret
mov
xor
dec
out
nop
popf
push
out
in
jae
adc
lods
add
push
fiaddl
sbb
adc
xchg
cmpsl
dec
push
imull
jl
xchg
jge
mov
sbb
dec
mov
adc
mov
sbb
ljmp
sub
sar
ret
loope
mov
mov
repnz
adc
pushf
outsl
outsb
test
lods
push
jne
and
jns
inc
pop
jge
jno
push
push
out
mov
cmp
leave
jecxz
fisttps
clc
data16
xor
gs
and
xchg
pop
lret
push
insb
out
inc
sbb
jne
sub
sub
mov
stos
adc
or
pop
aaa
fists
movsl
push
xchg
xor
pop
fwait
and
ds
cltd
xchg
and
add
sbb
jg
insl
loop
aas
push
ror
mov
hlt
adc
mov
into
jbe
push
pusha
repz
int
scas
stos
ret
and
mov
or
repz
push
and
out
and
cmp
arpl
mov
loopne
insb
mov
mov
xorl
lock
lock
inc
xor
inc
cld
mov
shrd
pop
pop
test
dec
mov
dec
int
imul
loop
aas
lret
rorl
sbb
xchg
pop
int3
mov
push
popf
mov
mov
xlat
insb
jl
cmp
jl
or
fcomi
ret
movq
mov
lcall
cmp
shrb
and
mov
adc
push
push
sub
cmp
sbb
sbb
stos
jg
pusha
cmp
inc
lea
push
inc
cmp
scas
stos
sbb
push
push
sbb
loop
mov
jo
cmc
mov
sub
pop
mov
test
loop
jle
xlat
ja
cmp
cmp
inc
cld
nop
xlat
call
test
inc
mov
sti
nop
xor
outsb
push
out
loope
sub
movsb
aad
mov
mov
jmp
lock
jne
mov
sub
jae
push
ljmp
inc
pop
ja
aad
loop
push
cmp
scas
jnp
cmpsb
popa
adc
aaa
xchg
inc
mov
lret
cmp
das
adc
push
cmp
xchg
test
jnp
mov
sti
sub
dec
pushl
jno
jg
ret
mov
sub
mov
lcall
addr16
in
inc
inc
fiadds
roll
adc
jae
and
sbb
jbe
xchg
orb
cmp
jecxz
test
rcrb
mov
xchg
cld
popf
subl
jmp
mov
mov
jge
jo
fadd
adc
push
sub
shll
ret
xor
jp
aam
insl
pop
das
sbbl
and
xchg
push
sbb
xor
arpl
sub
mov
adc
lret
pop
push
add
or
js
les
jbe
and
outsb
dec
push
or
divl
or
pop
mul
mov
or
lea
push
addl
sub
dec
and
in
and
stos
lds
inc
push
sti
sub
dec
pop
ret
outsb
mov
add
dec
push
mov
mov
es
pop
test
or
std
lds
leave
xchg
sub
push
imul
scas
hlt
xor
in
pop
in
push
xor
lock
mov
mov
adc
xchg
sbb
pop
add
mov
mov
rclb
add
push
lea
test
xor
xchg
add
xor
aaa
cmpsl
rcr
sti
xor
stos
mov
mov
ja
leave
sti
mov
in
test
test
fcoml
imul
fisubl
dec
loopne
xchg
xchg
pop
adcl
push
mov
mov
mov
nop
popa
xchg
fidivs
test
push
mov
test
pusha
test
sub
movsb
out
xchg
loope
cmpsl
data16
adc
ret
cld
cmp
pop
repz
sbb
daa
push
inc
test
xchg
jecxz
sti
cs
loope
dec
fisubs
xchg
les
insb
xor
int
fldt
lahf
jg
dec
xor
loope
jbe
jnp
sbb
cmp
sub
sub
mov
or
pop
cwtl
shr
pop
pop
jg
jb
mov
or
push
enter
test
push
pop
cmpsl
sbb
call
dec
and
neg
leave
cmpsb
pop
sahf
xchg
jb
nop
pop
adc
cmp
arpl
das
push
pusha
cmp
xor
mov
cwtl
fldcw
out
mov
sub
adc
pop
xor
das
fcmove
jmp
dec
and
cmpb
sbb
fs
aam
pop
mov
clc
hlt
or
in
or
sahf
pop
and
mov
pop
es
mov
and
movhlps
fsubr
subl
iret
xchg
dec
movsb
clc
aad
xchg
mov
push
imul
scas
cwtl
push
or
loop
inc
xchg
repz
lods
testl
fdivs
pop
insl
dec
sahf
shlb
cmpsl
add
inc
out
sbb
lds
outsb
pop
jno
mov
pop
xchg
sbbl
ret
cmp
fmull
push
mov
or
sarb
push
lret
add
test
cmpb
arpl
pop
add
jmp
lret
in
repz
push
jl
insb
insl
cli
mov
les
data16
jns
pop
in
mov
adc
jle
mov
adc
cs
or
or
loope
repnz
jne
fildll
pop
test
or
mov
jecxz
cmpsl
dec
pushf
les
or
pop
das
adcb
mov
sub
xchg
out
mov
mov
leave
stc
call
sbb
adc
push
rolb
xlat
mov
adc
fbld
shrl
fsubs
mov
mov
jae
add
leave
je
fsubrl
fnsave
inc
sub
mov
or
inc
cltd
enter
rolb
leave
adc
insl
cwtl
xorb
sub
or
dec
int
or
push
repnz
jae
inc
hlt
movsl
addr16
ret
adcl
xchg
inc
negb
dec
gs
out
add
pop
ljmp
loop
mov
push
push
add
sub
adc
popa
fldenv
rcll
mov
mov
jno
dec
je
lret
data16
push
sbb
rorl
imul
js
and
loopne
mov
jns
sbb
cmpsl
dec
movsl
and
and
lret
jae
jge
xchg
and
xchg
into
xchg
lcall
aaa
jge
fs
out
test
push
or
sbb
arpl
inc
dec
lcall
and
ss
stos
imul
fsubrs
imulb
aam
pop
rclb
mov
fcmovnbe
mov
shlb
in
jno
cmpsb
lea
xor
push
shll
pusha
pop
pusha
mov
xor
iret
adc
push
cmc
push
jl
add
xchg
imul
aam
cld
mov
cld
pop
add
jbe
and
pop
push
or
mov
dec
sub
add
mov
push
scas
rclb
sub
cwtl
pop
push
adc
aaa
add
outsb
mov
mov
aas
nop
div
xor
add
cmpsl
sub
sbb
xlat
xchg
pop
lret
pop
shlb
idivb
sbb
mov
push
push
adc
mov
popf
test
add
mov
sub
repnz
insb
pushf
inc
cmp
sbbb
and
aaa
jno
out
xor
and
sub
inc
mov
pop
gs
xchg
ja
add
fcmove
mov
insl
test
cmp
pop
fsubp
repz
sub
sub
dec
hlt
dec
push
xchg
mov
imul
inc
mov
imulb
pop
pop
cmp
add
push
mov
jecxz
sahf
loop,pt
outsb
add
repz
and
mov
negb
sbb
ficompl
dec
jbe
sub
repnz
add
inc
cld
mov
shlb
push
pop
sarl
ficompl
jmp
cmpsb
push
mov
out
pop
add
call
insl
mov
sub
inc
cmp
daa
loop
mov
test
inc
or
out
andl
es
jb
push
jno
jno
pop
scas
xchg
pop
aaa
mov
aaa
ja
imull
rorl
loope
dec
movsb
lahf
xor
cld
rcr
shrb
xor
dec
jne
inc
add
test
pop
dec
ret
add
xor
std
lret
adc
insl
mov
pop
dec
sar
insl
add
mov
xchg
lods
add
dec
xor
imul
and
loope
mov
les
shl
xlat
test
fidivrs
fs
ljmp
mov
in
mov
cld
fists
stos
jae
cs
pop
clc
daa
popf
xlat
sbb
sub
ds
mov
repz
sub
xor
sbb
out
jae
andb
jno
repz
jne
mov
fldenv
mov
pop
pop
fsubrs
in
addr16
adc
or
add
sbb
pop
sub
add
push
sbb
rcll
and
and
cmp
stos
dec
pop
scas
mov
and
pop
xchg
add
or
mov
jl
and
cmp
rorl
int3
xchg
into
pop
push
dec
sbb
sar
cmp
pop
push
add
sub
insl
cmp
insl
cwtl
pop
inc
sub
dec
and
loopne
mov
sbb
sbb
fstps
or
daa
test
fwait
data16
xchg
xor
pop
add
mov
mov
ljmp
xchg
mov
push
pop
push
fists
mov
ljmp
xor
sti
cmp
lahf
movsb
sahf
push
cmp
add
aam
enter
and
xchg
cmpsl
clc
push
inc
xchg
xchg
les
or
mov
loopne
incl
mov
sub
test
sub
xchg
in
pop
sub
into
icebp
and
cmpsl
ss
fwait
pop
or
lods
push
fldt
dec
pusha
hlt
mov
sub
aas
mov
cmp
mov
add
aam
pushf
int
jecxz
out
adc
xchg
pop
push
push
or
lcall
inc
or
clc
mov
sub
pop
push
jge
je
jecxz
lods
jo
fcom
jns
push
add
adc
pop
pushf
stos
jecxz
or
push
pop
jne
out
cmp
sub
sub
rorl
out
iret
pop
lret
aas
pop
imull
sbb
pop
mov
or
push
imul
out
or
mov
and
iret
push
mov
sub
sub
adc
sub
out
add
scas
sub
roll
test
movsl
imul
nop
or
adc
test
aad
test
pop
mov
aad
or
or
sbb
jns
xchg
lret
or
xor
and
addb
and
jns
mov
mov
dec
and
faddl
popa
loop
out
cmp
pop
mov
lds
or
gs
lcall
pop
ret
cmp
mov
dec
leave
inc
push
scas
mov
movsl
scas
mov
jle
jns
dec
into
movsb
add
movsl
popf
dec
mov
lock
js
and
test
stos
xlat
icebp
mov
icebp
leave
push
addr16
out
mov
subb
in
jne
js
push
and
xor
vpsraw
hlt
ja
in
jmp
xlat
mov
mov
je
loope
in
or
xchg
stc
stos
sbb
mov
into
out
xlat
xor
cmp
insb
loopne
enter
sahf
rcr
outsl
cs
jmp
stos
outsl
insl
imul
dec
ljmp
push
and
mov
push
cmpb
dec
mov
sbb
in
xor
push
inc
jns
push
push
out
jns
and
jmp
pop
insl
xor
stos
push
cmpsl
dec
push
or
sub
bound
mov
xchg
mov
les
int
imul
inc
stc
xchg
jl
cmpsb
clc
hlt
add
or
push
sub
jnp
lock
jmp
idivl
cmp
stos
mov
repz
insl
inc
scas
sub
ja
mov
clc
fs
aad
fwait
insl
cmp
push
jge
fstp
stos
testb
ret
scas
movsb
nop
das
clc
pop
or
sti
push
jno
mov
shl
mov
or
xchg
dec
jbe
in
mov
shlb
sbb
shlb
stos
into
or
mov
and
imul
lret
stos
mov
icebp
and
push
out
push
fsubrl
xor
pop
enter
pop
or
inc
ds
sub
fdivrs
xor
vdivsd
dec
out
sub
ja
xchg
cwtl
sbb
lods
repz
repz
inc
or
daa
stos
dec
arpl
pop
jnp
fs
cmpsl
inc
xlat
mov
repz
setge
push
lods
sarb
loop
mov
xchg
test
mov
sub
rorb
sar
test
into
xor
sbbb
lret
xchg
cmp
pop
testl
addr16
shlb
mov
fstp
mov
mulb
mov
mov
sub
xorb
and
cmp
sbb
xor
mov
mov
pop
xchg
decb
adc
mov
and
subl
mov
mov
das
sti
dec
bound
aad
fsubrs
cwtl
movsl
mov
es
jmp
int
negb
call
fs
mov
je
xchg
sbb
mov
mov
lcall
repz
clc
jle
adc
mov
or
and
insl
or
arpl
push
and
inc
xchg
sub
pusha
add
push
pop
mov
mov
fcmovu
xchg
gs
in
mov
push
dec
inc
mov
out
fisubrl
inc
push
cmp
ss
test
inc
xor
shrb
ret
add
lods
lret
cmp
push
ret
call
adc
arpl
push
sbb
pop
fistpl
lret
test
jg
icebp
adc
fdivrl
cmpsb
adc
jno
lahf
aaa
imul
in
pusha
fwait
push
roll
lahf
add
and
add
add
inc
dec
or
xchg
pop
push
fcoms
mov
mov
iret
imul
rcrl
test
xchg
sbb
ss
lods
inc
js
mov
sbb
mov
in
outsb
mov
xor
mov
xor
sub
cmp
out
movsl
and
fisubl
cs
loop
cli
push
test
mov
or
pop
xor
fwait
aad
fs
xchg
adc
push
clc
and
cmp
mov
mov
inc
and
cs
lret
pop
push
push
xor
fsubs
stc
cmp
push
sub
adcl
addb
mov
lea
inc
in
jae
add
mov
fsubl
sbb
pop
mov
int3
pop
mov
call
shl
subl
or
int
push
push
xor
sets
jns
adc
test
dec
or
loopne
cld
out
pop
jle
fisttps
aaa
pop
lret
popf
adc
pop
ficoms
lahf
adcb
iret
jl
xor
cmp
adc
inc
xchg
lock
lret
xchg
popf
addr16
mov
mov
push
mov
pusha
sbb
into
xor
or
dec
cmp
pusha
sbb
lods
fs
int3
add
dec
dec
mov
out
test
xchg
cmc
jecxz
sti
mov
mov
scas
xor
lcall
push
popf
or
jo
les
sub
mov
sbb
pop
jb
xor
xor
les
loop
sbb
test
dec
inc
arpl
in
mov
and
clc
push
xchg
mov
arpl
les
cmp
frstor
xor
adc
lret
adc
sbb
push
dec
add
ja
loop
fisubrl
movsb
pop
sub
cmc
aam
sahf
push
mov
addr16
stos
faddl
mov
rcr
js
and
inc
nop
push
push
or
addr16
rcl
loop
shl
lock
imul
mov
push
push
cmpsb
and
lds
ljmp
mov
movsl
aas
mov
or
inc
cmp
pop
pop
repz
jne
sahf
lret
in
push
jns
add
arpl
out
push
sbb
js
mov
es
ja
in
add
nop
call
mov
daa
add
icebp
push
repnz
in
aam
mov
iret
xorl
int3
loopne
cmp
jl
stos
shll
or
fisttpll
mov
lret
pop
lret
push
jmp
fidivs
xlat
jecxz
lret
push
cltd
xchg
sahf
sbb
jecxz
xchg
lods
pusha
xchg
stos
test
pop
dec
mov
mov
in
or
mov
mov
outsb
xlat
push
dec
push
or
movsb
testl
shr
arpl
dec
or
jge
pop
stos
pop
pushf
cli
or
or
sub
or
jg
jecxz
mov
push
jo
ror
mov
mov
outsl
dec
cmp
mov
lcall
lea
cwtl
clc
push
lods
sbb
add
add
mov
add
andb
mov
insl
push
jl
jmp
cltd
jnp
jno
mov
test
jbe
push
insl
cli
mov
push
xor
mov
mov
push
stos
fldl
mov
lods
adc
fsts
pop
addb
dec
js
mov
clc
cmp
outsl
pop
and
lahf
push
lcall
or
pusha
xchg
hlt
or
and
mov
jle
mov
in
fdivrl
test
push
cmp
mov
cmp
fstpl
in
mov
scas
sbb
pop
and
sub
adc
sub
add
in
mov
adcb
push
adc
rcll
int
pop
pop
mov
mov
mov
aam
and
es
sbb
push
pop
in
jecxz
gs
jg
scas
dec
test
scas
andb
sub
ljmp
add
cmp
stc
push
push
fisubrs
lcall
je
or
loope
mov
lcall
test
loopne
iret
xorl
push
and
mov
xchg
leave
pushf
push
push
psubb
stos
xchg
ss
xor
out
lods
cld
mull
int
test
pushf
dec
add
inc
and
xor
adc
mov
xchg
xchg
mov
jnp
js
push
xchg
fsts
and
subb
add
js
add
fcoms
outsl
jecxz
jne
filds
push
jmp
jae
cmpsl
xor
loopne
mov
inc
das
mov
xor
fldcw
jb,pt
imul
ds
push
in
ljmp
sub
xchg
cmp
mov
test
pop
pop
push
mov
pop
shll
inc
push
imul
sarb
sahf
imul
aaa
mov
inc
iret
inc
cmp
adc
sbb
add
sbb
addr16
cmpsb
pop
es
lret
fstps
insl
jnp
jmp
pop
imul
fdivl
jbe
movsl
in
popa
push
std
out
js
cmp
add
inc
push
pop
inc
xchg
pop
jae
movsl
ret
push
rorl
test
movsl
inc
mov
add
or
inc
mov
add
xor
roll
jmp
adc
out
es
xor
mov
repnz
ret
orps
sbb
insl
es
bound
jge
enter
sub
and
xor
xchg
gs
pushf
sub
adc
sbbl
dec
mov
lahf
push
dec
mov
fildll
lea
mov
rcrb
xchg
ljmp
lods
and
inc
cmp
push
cltd
xor
add
cwtl
scas
xchg
inc
mov
orb
push
std
shlb
iret
mov
cmpl
addr16
mov
lock
cmpsl
fs
sub
sti
mov
pop
es
fsubs
pop
dec
incl
add
xchg
ja
das
lret
push
mov
pop
sbb
int
repnz
movsl
fs
push
or
lret
xor
mov
daa
sub
jb
fs
mov
or
mov
dec
popa
sub
cmpb
sahf
jnp
jmp
inc
sub
xchg
dec
push
xchg
and
mov
es
fstps
mov
int
dec
call
jp
stos
fildll
test
mov
addr16
cli
shll
or
in
into
ret
cmp
into
jbe
dec
es
mov
out
enter
je
sub
inc
pop
mov
mov
add
lahf
jge
jnp
push
dec
dec
dec
or
les
stos
je
je
adc
fisttps
mov
or
test
and
or
jge
push
inc
je
shlb
mov
xchg
and
mulb
insb
adc
push
and
lods
and
mov
sbb
cmc
mov
outsl
pushf
cld
adc
jle
flds
xchg
je
dec
lret
fimuls
and
mov
push
push
iret
push
pop
sbb
notl
sti
rorb
sbb
pop
xchg
xor
dec
sbb
sbb
push
in
repnz
jmp
add
sbb
call
cmp
push
push
ljmp
add
add
insb
xchg
cmpsl
ret
or
movsl
dec
or
push
mov
sbb
inc
cmp
xchg
int3
jnp
pushf
shr
inc
push
fisttpl
dec
das
incl
iret
add
pop
out
xor
test
pop
mov
and
dec
mov
pop
inc
pushf
dec
mov
lcall
add
push
aam
or
lock
add
stc
fadds
popa
inc
leave
mov
mov
pop
std
jle
lods
pop
fcompl
pop
cmp
mov
cwtl
out
sbb
xchg
je
jmp
jb
dec
jmp
add
cs
jp
mov
cmp
or
out
sbb
jg
int3
xchg
mov
mov
xor
mov
sahf
dec
xchg
ss
fsubrl
dec
inc
mov
and
jle
roll
mov
pop
dec
inc
sbb
cmp
mov
sbb
pop
add
adc
fistpll
aam
sbb
hlt
jnp
sbb
push
jecxz
or
popf
loop
stos
sbb
popa
inc
add
roll
aad
and
push
fisubl
add
mov
das
cmp
push
add
imul
add
cli
out
rorb
lahf
xchg
insl
add
pop
lock
cwtl
inc
repnz
mov
add
icebp
sub
lcall
mov
out
xor
mov
jp
inc
and
mov
dec
xchg
adcl
mov
dec
mov
or
xchg
repnz
cmp
test
xor
idivl
fildll
inc
jno
xchg
in
push
and
mov
push
aad
cmpsl
sbb
xor
hlt
sub
dec
ds
outsb
out
dec
push
cld
stos
lahf
push
insb
cmp
sub
inc
ds
fstpt
push
lret
xchg
dec
dec
push
inc
cmp
cs
stc
and
push
dec
xor
ljmp
ss
int3
dec
mov
ljmp
push
cmc
stc
jge
and
add
enter
pop
jp
rcrb
adc
and
aam
rcrl
loopne
push
std
mov
data16
cli
add
test
sbb
push
pop
push
or
pop
stos
dec
std
scas
and
xor
leave
ret
and
cmp
add
sub
lcall
sbb
stos
cwtl
push
xchg
xchg
add
bnd
out
inc
jl
dec
inc
push
lock
lcall
aam
cmpsb
cmc
ss
xchg
adc
stc
test
rclb
les
jbe
repz
xchg
dec
cmpb
scas
out
xor
adc
je
pop
mov
in
or
ljmp
xchg
dec
rcrb
and
xor
iret
inc
jnp
lret
jge,pn
cmp
pop
mov
mov
xchg
vmulsd
push
mov
mull
das
insl
xchg
mov
in
xchg
inc
jl
pop
xchg
sbb
loopne
jne
push
mov
and
push
xchg
into
les
mov
xchg
inc
fcompl
int3
mov
icebp
add
out
sub
fidivrs
aam
push
std
mov
jne
ja
xchg
push
mov
lds
loop
mov
scas
dec
mov
xor
or
cs
lret
adc
les
add
sub
or
ljmp
add
divb
and
pusha
mov
test
enter
pop
loop
hlt
mov
sbb
jmp
mov
push
idivl
ror
jno
mov
enter
mov
lsl
ficompl
xor
dec
push
inc
add
das
cmp
repnz
push
xor
lods
fnstsw
dec
and
cmpsl
dec
or
or
jb
outsb
ficompl
push
mov
cmp
cmpsl
cmpsl
mov
lds
outsb
scas
sbb
xor
jle
push
out
or
insl
js
and
jl
pop
xchg
arpl
mull
mov
sarl
mov
mov
and
pusha
add
out
jo
stos
lret
cmp
mov
js
xchg
xor
xor
rcll
inc
inc
dec
mov
loopne
daa
rolb
lcall
loope
push
mov
sub
cmpsl
es
cmc
iret
shll
cs
push
mov
pop
dec
xor
or
nop
cmpsb
jecxz
cld
xor
ret
outsl
les
mov
jl
mov
flds
call
leave
pop
mov
movsb
add
stos
mov
loope
out
stos
out
mov
pop
repnz
in
ret
push
xor
daa
mov
cmp
stos
in
pop
pop
fwait
adc
jmp
cmp
stos
aaa
test
lahf
jg
mov
out
mov
es
sbb
or
jecxz
pop
test
aam
rolb
inc
outsb
xor
gs
lods
stc
scas
sbb
sub
sbb
aad
jae
out
aad
jno
mov
pop
add
push
inc
mov
jo
xchg
not
mov
cld
jno
orl
pop
cmp
shll
imul
push
jbe
mov
dec
sub
xor
sbb
mov
in
and
nop
sti
add
scas
xchg
inc
inc
jl
and
outsl
and
pop
cmpsb
sbb
movsb
inc
fcoms
hlt
mov
adcb
cli
insl
enter
aam
inc
int
add
push
mov
in
dec
fsubl
mov
test
lods
negl
cmc
insb
push
loope
icebp
add
mov
int
push
push
jae
and
nop
popa
lds
inc
stc
add
icebp
les
les
or
mov
mov
add
xor
das
insl
push
test
loopne
outsb
mov
dec
jbe
into
push
aam
pop
orb
mov
lret
mov
fidivrl
mov
add
mov
inc
outsb
incl
aam
pop
mov
sub
aad
or
pop
sub
daa
daa
stc
pop
clc
or
push
pop
ret
push
cltd
inc
mov
lods
gs
jecxz
out
sub
or
sbbl
shr
addl
pushf
and
leave
fbstp
scas
aam
pop
mov
add
add
icebp
imul
cmpl
xor
xchg
xchg
cmpsl
mov
je
mov
mov
pusha
lcall
inc
or
jle
pop
sbb
inc
add
sub
repnz
mov
sti
aad
popa
enter
xchg
inc
sub
cmp
fwait
pop
mov
sub
push
sbb
jg
pop
pop
inc
add
sarl
or
adc
jo
sub
jae
add
cmpsb
jl
dec
push
dec
jno
aas
sbb
outsb
or
mov
xchg
jns
clc
cmp
and
shll
or
fisttpll
pop
sbbl
js
sbb
enter
mov
jns
cmpsl
push
std
jmp
nop
imul
lret
push
mov
mov
push
into
adc
andps
cs
inc
mov
dec
ret
roll
sbb
test
fisubs
dec
jge
mov
jae
sbb
inc
mov
add
xchg
xor
push
sub
test
push
in
pop
in
cmc
or
add
enter
dec
pop
mov
ret
ret
cmp
adc
js
pop
xchg
insl
push
jns
ds
inc
cmp
popf
imul
adc
push
mov
imul
mov
cmpsb
iret
ss
popf
cmp
insl
idivl
pop
adc
fcomps
mov
imul
mov
outsl
mov
jg
hlt
push
push
lods
sub
xlat
imul
lcall
jae
inc
mov
jg
push
std
jmp
push
or
stos
mov
cmp
ret
andb
inc
adc
inc
mov
jecxz
ss
adc
sbb
and
pop
icebp
out
jb
sbb
cltd
jp
shl
cmpl
sbb
mov
pop
push
cmpsb
mov
insb
data16
ret
fidivs
negl
outsb
push
push
or
jns
idivl
enter
pusha
data16
lea
cmp
pop
je
mov
cltd
icebp
pop
int3
sub
in
ljmp
pop
cwtl
mov
and
addr16
shrl
add
insb
ja
cli
sub
xchg
daa
pop
push
pop
mov
add
sub
shrl
es
or
into
flds
dec
mov
jge
ljmp
popf
addr16
movsb
mov
out
or
sbb
lds
pop
in
dec
inc
fistpll
add
rcr
inc
mov
icebp
imul
xor
xchg
add
xchg
xchg
notb
push
pop
add
dec
test
and
push
pop
push
hlt
adc
lds
push
in
xchg
xchg
sub
inc
aaa
mov
cmp
out
aas
and
movsl
ficomps
mov
mov
pop
xchg
inc
push
mov
fists
lods
jb
jae
daa
mov
je
out
movsl
aam
xchg
repnz
sbb
xor
cwtl
jmp
adc
or
jb
js
jecxz
out
pop
fucomip
cmc
stos
and
inc
loope
jno
cwtl
push
cltd
outsl
int3
cli
cmc
inc
jmp
fs
loope
leave
lret
and
loop
sub
push
add
fcoms
add
addr16
push
jno
add
arpl
rcl
pcmpeqb
into
dec
in
xor
push
mov
cmp
mov
jmp
mov
jp
jg
dec
jle
imul
in
inc
mov
test
xchg
iret
loopne
jbe
pusha
push
add
testb
out
mov
rorl
jne
or
mov
dec
push
cmp
lock
cwtl
jecxz
push
imul
les
add
mov
sub
add
mov
and
sub
roll
inc
push
scas
jne
ljmp
arpl
nopl
xchg
inc
sbbb
cmp
fsubl
inc
cmp
xor
push
xchg
in
sub
scas
sbb
lcall
xor
sbb
stos
jecxz
xchg
lahf
add
jne
cmpsb
adc
jp
mov
sahf
icebp
and
dec
jle
adc
push
js
into
popf
xchg
shrb
scas
in
pop
and
mov
inc
jmp
into
cwtl
push
push
mov
inc
pushf
add
ljmp
sbb
ja
xor
repz
inc
jp
mov
inc
xor
sbb
mov
into
mov
shrl
test
imul
clc
out
mov
mov
push
jmp
call
repz
loope
icebp
movsl
movsl
int3
mov
int
inc
pop
sub
int3
pop
mov
pushf
xor
mov
aas
loop
fcoms
dec
mov
adc
jne
insb
xlat
jle
enter
jmp
inc
lods
mov
int3
lcall
pop
jg
jge
mov
xchg
sbb
ret
sub
mov
rcrb
lret
cli
out
lods
lret
jno
cmp
adcl
fs
enter
data16
mov
imul
mov
mov
add
lea
xchg
inc
cli
daa
es
and
pop
push
and
dec
push
rcrb
push
addl
pop
into
fisubl
sbb
pop
inc
mov
push
push
std
jno
jp
cs
lods
sub
lret
mov
xor
pop
sahf
pop
inc
cmp
mov
jmp
push
popf
add
xchg
addl
mov
sub
and
fisubs
push
dec
add
arpl
in
insb
outsl
loope
jmp
stos
aaa
mov
ljmp
imul
orl
gs
cmp
nop
jge
outsl
ljmp
ficomps
nop
add
mov
icebp
xchg
and
add
inc
cmc
vsqrtss
mov
jmp
lahf
mov
fs
fildll
jmp
int
jge
and
jne
lods
push
sbb
push
scas
lea
andb
xor
dec
movsl
cli
inc
dec
imul
mov
or
stc
sti
mov
nop
push
ja
shl
es
mov
xor
inc
push
test
fsubl
mov
push
or
stos
cmp
jns
sub
shl
add
ret
fdivs
popa
cmp
sub
push
insb
fstp
xor
push
add
sbb
mov
ret
or
ret
subl
iret
inc
inc
negl
outsb
adc
pop
gs
int3
lahf
insl
xor
xor
dec
dec
mov
xor
and
jl
ret
stc
pop
mov
mov
inc
cld
lcall
and
lea
add
jb
out
icebp
jmp
lahf
test
lock
loope
lea
dec
lods
fidivrs
mov
pop
mov
outsl
ret
dec
sub
cmc
or
xchg
sbb
xlat
xchg
loop
mov
xor
mov
sar
sbb
sbb
pop
cli
add
jmp
in
popf
pushf
ss
js
pop
inc
imul
xlat
fnstcw
test
cmp
in
jl
loope
xor
mov
sub
int3
mov
mov
movsl
rolb
cmp
xor
ret
fwait
push
nop
push
dec
mov
inc
mov
cmp
push
mov
xor
push
inc
push
pop
ljmp
mov
pop
and
jmp
pusha
jnp
ss
mov
xchg
mov
mov
sbb
arpl
xor
sbb
mov
ficoml
mov
xchg
out
mov
aad
jo
dec
jnp
push
insb
sti
and
pop
add
shrb
push
and
dec
sub
or
sbb
push
sub
and
aaa
cmp
imul
mov
xor
dec
mov
push
int
icebp
lods
add
jnp
les
sbbb
je
stos
sbb
mov
mov
xchg
fidivl
ret
sbbb
loop
push
shrl
rcrb
jns
inc
cmp
xchg
popa
dec
in
cmp
dec
pop
jno
xor
jge
push
and
orb
adc
jmp
inc
xor
loope
sub
or
cli
aad
sbb
push
inc
mov
movl
in
or
into
jnp
sbb
lret
gs
ret
cmp
imulb
dec
cs
dec
mov
pop
test
out
dec
push
cmc
adc
or
pushf
and
add
xor
add
and
lods
insb
bound
js
jg
mov
enter
sub
in
idivl
data16
iret
jnp
insl
and
mov
sub
repz
enter
jmp
sub
in
and
xor
and
cmp
cmp
add
rcll
lods
aad
sti
jmp
call
jp
imul
imul
add
dec
xchg
add
pop
sub
cmp
mov
test
push
call
sti
aas
sub
insl
outsl
sub
sti
loop
rcr
test
cld
pop
jb
inc
xchg
ficompl
popf
jge
or
jp
add
int
test
mov
xchg
add
incl
stc
icebp
mov
sub
pop
fwait
cltd
pop
sub
push
pop
adc
rclb
aad
lock
cltd
out
jge
adc
call
cmpsb
add
adc
orb
push
xchg
push
push
lods
pop
pop
jmp
repnz
decb
faddl
mov
add
pop
data16
call
scas
movsl
aad
mov
add
sbb
add
shlb
sbb
leave
adc
into
fdivs
push
shll
es
cmp
mov
and
in
bsf
or
repnz
adc
cmp
xchg
js
incl
jns
cs
fdivrs
adc
ret
xrelease
hlt
xorb
and
ret
test
and
mov
cmp
fmuls
push
les
mov
das
push
outsl
jno
xchg
les
lods
xchg
sbb
ljmp
mov
dec
nop
mov
int3
loope
lahf
adc
movsb
inc
cmpsl
xchg
mov
mov
xchg
test
jp
jno
dec
js
mov
mov
dec
lret
cwtl
mov
push
fistpl
sub
and
scas
bound
inc
adc
jle
mov
lods
std
mov
dec
sub
add
daa
fcomps
rcrl
lods
jl
xor
and
push
adc
mov
into
adc
add
iret
test
push
mov
sub
add
cmp
push
xorl
inc
cmovp
pop
lds
lret
in
pop
mov
xchg
xchg
aad
lret
fisttpl
sbb
je
incl
lahf
mov
jmp
data16
xor
pop
cmp
aam
clc
out
dec
cmpsl
add
or
pop
push
xchg
inc
xchg
ret
cmp
dec
cmp
js
lea
insb
jecxz
pop
pop
mov
fucomp
adc
sbb
push
mov
sub
and
xor
rcrl
outsl
sbb
or
add
repnz
sub
shll
les
jb
mov
lret
sub
pushf
outsl
jecxz
adc
mov
dec
daa
dec
lcall
pop
sarb
adc
cld
pop
or
test
adc
loopne
outsb
sbb
dec
mov
pop
in
push
or
jg
idiv
add
gs
loopne
lahf
jmp
cmpsb
shlb
outsl
or
shll
and
xchg
lods
aad
dec
popf
arpl
aaa
call
adc
jl
add
push
test
std
add
femms
pop
dec
xlat
sub
imul
mov
fwait
lds
pop
scas
cmp
dec
ficoml
shr
jle
fxch
iret
sbb
mov
push
pop
add
xchg
xor
gs
push
or
xchg
jp
jno
push
xchg
in
xorb
add
outsl
cs
mov
aas
cmp
mov
movsl
fcoms
add
aad
adc
incl
fcmovnu
test
pushf
adc
add
insb
test
jns
rolb
fwait
jp
mov
test
mov
sub
inc
mov
bound
inc
mov
add
test
lret
ja
addb
pop
icebp
mov
insb
shl
add
dec
mov
ja
sub
test
or
push
loope
arpl
stos
lea
scas
pop
or
adc
mov
mov
push
inc
mov
daa
jnp
inc
leave
lods
bound
pop
xchg
cmp
jg
lret
mov
loope
pop
mov
jmp
adc
jl
jg
aas
adc
sub
out
dec
xchg
in
data16
inc
xchg
adc
sbb
dec
sub
shrb
mov
cs
pop
xchg
in
fwait
and
xchg
adc
xor
cmp
or
call
jns
subb
pop
rcrb
shll
inc
loop
fcompl
jns
in
cmpsl
push
sub
test
ds
stos
add
pop
sub
mov
and
arpl
test
shrb
mov
adc
sub
inc
fdivp
mov
movsl
or
or
mov
jns
pushl
mov
xchg
int
sub
inc
add
mov
adc
daa
ret
icebp
pop
push
dec
mov
shll
loop
inc
aam
sti
sbb
xchg
inc
enter
fidivs
enter
mov
stc
aam
pop
dec
fbstp
push
test
pusha
mov
js
cmpsb
add
xchg
push
inc
lock
ror
mov
les
add
pop
test
int3
inc
jge
dec
and
mov
hlt
cld
cltd
mov
enter
rclb
pop
xor
outsb
push
dec
adc
jge
and
lahf
icebp
push
xlat
mov
loope
mov
ljmp
jo
add
insb
bound
das
cwtl
jne
roll
pop
pop
mov
xor
les
or
xor
subb
ds
lock
hlt
sub
inc
test
xchg
pop
xchg
pop
clc
cmp
sahf
add
or
add
sbb
sbb
lcall
aad
mov
ret
and
sub
mov
outsl
pop
popa
cmp
incl
sub
fisubs
dec
in
jns
testb
mov
pop
or
mov
scas
adc
data16
mov
pop
fmull
arpl
xchg
es
loope
push
adc
push
adc
push
pushf
jo
adc
stc
ss
fisttps
mov
mov
data16
and
lods
cs
xlat
mov
adc
pop
mov
push
pusha
stos
pop
outsb
pushf
xlat
pop
ds
mov
mov
ss
jl
cltd
movsl
cmp
mov
or
addb
sub
inc
pop
es
aas
add
popf
inc
jp
fbstp
jge
movl
mov
push
jg
xchg
std
mov
test
scas
les
lods
stc
pop
cmpsl
lock
sbb
xchg
shlb
nop
mov
fstl
das
add
in
jae
adc
ret
cmp
push
adc
push
sub
out
xchg
pop
mov
add
daa
mov
fstp
imul
jmp
add
lcall
fs
test
xchg
mov
ss
mov
mov
rep
adc
outsb
push
cltd
sbb
jne
es
and
pushf
fisubl
dec
stos
movsb
outsb
in
xchg
jp
inc
outsl
sbb
push
adc
xor
movswl
push
inc
adc
push
jbe
jae
push
popf
sbb
icebp
push
mov
inc
jae
mov
enter
in
jle
cmp
jae
xor
mov
shlb
hlt
bound
jecxz
xor
pusha
outsl
ret
cmp
mov
scas
adc
add
or
int3
pushf
inc
leave
and
cmpsb
loopew
mov
rcrb
scas
nop
fisttps
sub
ds
mov
int
push
into
jbe
sub
in
push
pop
mov
add
sar
lcallw
sbb
jae
add
rcr
fdivrs
lods
lret
lds
mov
jp
add
mov
push
mov
ret
add
arpl
mov
mov
jg
push
mov
add
cli
mov
pop
sahf
lret
xchg
dec
imul
cmp
sub
jge
mov
add
dec
push
mov
in
std
add
in
iret
cmp
pushf
ds
aas
stos
push
icebp
sti
loope
imul
or
push
cmp
cmp
push
fcoms
xor
filds
pop
cwtl
inc
cmpsl
mov
cmp
lods
out
jae
or
out
lcall
pop
lahf
mov
in
or
ret
xchg
lret
or
leave
aaa
inc
jno
out
shll
mov
push
leave
xor
mov
jl
dec
pushf
mov
xor
mov
lret
outsl
pop
mov
jmp
lahf
push
sub
aad
inc
xchg
xor
pop
sub
sub
popa
rolb
jne
add
add
and
mov
xchg
xchg
in
xor
sbb
xchg
cmp
enter
sti
and
cwtl
cmp
gs
or
push
pop
xor
push
inc
add
loop
xchg
jno
push
xor
jge
sub
insl
dec
mov
xchg
loopne
call
jae
mov
pop
outsb
shld
cld
aas
pusha
pop
ds
ficoml
das
pop
pop
rolb
mov
xchg
mov
mov
xchg
and
scas
mov
fadds
pop
dec
cmp
fs
loop
cmp
and
jl
adc
scas
or
fisubrs
add
inc
les
fstps
ror
mov
inc
leave
adc
jno
fisubrl
pop
bnd
mov
push
cld
push
jno
pop
jns
push
adc
push
addr16
xor
inc
push
xor
inc
lods
lea
mov
jge
imul
push
dec
cwtl
fidivrs
in
ret
or
ficoms
shll
push
pop
es
push
stc
cmp
int
ss
mov
sahf
lods
into
xor
and
push
add
pop
mov
cmp
out
cmp
xchg
es
iret
and
pcmpeqw
fwait
lds
push
xchg
ret
cld
pop
aad
loopne
sub
add
sub
addr16
push
seta
js
mov
orb
xorl
inc
mov
popa
inc
lret
mov
inc
add
loop
cmp
fsubrp
stos
mov
pop
xchg
vminps
shlb
sbb
mov
je
sub
es
sbb
push
leave
gs
mov
stc
jnp
mov
or
int3
adc
add
cs
mov
inc
sub
mov
pusha
jge
fwait
push
call
arpl
fidivrs
mov
setge
repnz
out
sbb
mov
push
dec
dec
loop
sahf
and
loopne
dec
and
xchg
frstor
out
mov
mull
inc
jo
andl
mov
dec
jmp
push
flds
push
mov
add
jmp
jp
mov
xchg
jno
sub
jno
out
pop
aas
mov
mov
addr16
icebp
je
push
shrb
aam
testl
sbb
lods
xchg
push
adc
xchg
cmp
dec
push
mov
les
jns
movsb
mov
push
cli
xlat
inc
and
ds
mov
imul
xchg
adc
adc
xor
sub
mov
xor
mov
or
in
xor
jl
xlat
test
xchg
js
ficoml
jnp
lcall
fsub
iret
mov
ja
or
ror
sahf
cmp
pushf
and
inc
outsl
sub
inc
push
idivl
mov
fldenv
mov
push
mov
dec
out
pop
lea
xor
int3
or
add
fbld
jge
xor
orl
push
cmp
out
adc
cmpsl
mov
or
lock
push
lds
lahf
jge
sub
xor
test
and
xlat
test
push
xor
out
xor
and
pop
add
cmpsb
shll
xor
pop
dec
jge
mov
push
xchg
cmp
fcmovbe
xchg
fwait
jmp
pop
cld
mov
jl
inc
fsubl
xchg
mov
push
lds
je
jmp
push
and
xor
dec
xchg
int
mov
js
xchg
stc
test
movsl
push
pop
aam
enter
add
sahf
push
in
dec
pop
mov
icebp
aaa
sub
xor
inc
inc
adc
mov
imul
call
pusha
or
ds
dec
imull
xor
mov
sbb
adc
stos
xchg
adc
rcrb
das
sub
push
push
das
repz
and
sub
mov
pop
loop
stos
ljmp
push
push
add
add
adc
push
iret
negl
add
fsubrs
jo
cwtl
inc
mov
aad
push
ljmp
in
popf
rcl
adc
lock
int3
push
lahf
dec
jge
sub
icebp
mov
push
push
testb
adc
sbb
add
cmp
inc
xchg
mov
lcall
loope
or
movsl
mov
inc
pop
mov
mov
xchg
add
sar
test
lea
mov
sub
stc
sub
rolb
das
mov
push
dec
pusha
push
mov
jle
aas
dec
push
cmp
and
inc
or
xchg
fnstenv
movsl
test
mov
jne
pop
mov
aam
jp
fs
stos
les
div
ds
test
test
das
dec
inc
or
bound
xchg
enter
and
jns
mov
ja
push
mov
push
stos
pop
clc
xchg
fisubs
lret
mov
int3
and
push
jmp
pop
lods
dec
fldt
mov
fwait
inc
xchg
push
dec
adc
mov
in
adc
push
jb
lcall
fidivrs
iret
push
es
hlt
cmpsb
add
lret
and
xor
xchg
pop
fildll
rclb
loop
fadds
outsb
or
sbb
js
add
cmp
pop
jecxz
js
jmp
outsl
jg
mov
adc
psrlw
mov
jnp
xlat
inc
adc
imul
and
cs
insb
pop
adc
adc
rorb
sarl
int
scas
xor
jle
mov
std
lds
sub
sub
das
ja
cmpl
add
dec
and
jecxz
pusha
cmpsb
std
pop
add
nop
mov
repz
mov
sub
mov
aad
mov
xchg
xchg
cwtl
icebp
or
test
loop
dec
shrb
push
ds
xor
push
rorb
push
dec
mov
inc
mov
ret
out
xchg
aam
adc
xchg
movsb
and
jb
sub
lret
dec
mov
pop
idivl
cmp
mov
sub
loop
inc
and
insb
cs
jae
sub
scas
jmp
add
int3
jg
stc
push
and
and
fwait
xor
fidivrs
inc
xor
or
mov
call
inc
adc
jp
mov
adc
inc
cmp
out
fidivrl
cli
aam
bound
pop
daa
xor
dec
xor
in
icebp
jecxz
mov
lret
cmp
icebp
push
stc
stos
lods
mov
jnp
fdivrl
je
js
imul
xor
loop
popa
mov
jb
xchg
ja
dec
adc
xor
mov
leave
aaa
lahf
xchg
bound
mov
shrl
cli
push
mov
test
loopne
hlt
mov
lods
data16
sbb
lds
dec
test
in
lods
imul
mov
stc
cmp
pop
xor
lods
mov
jecxz
repz
cmp
xchg
inc
lea
cli
sub
mov
fwait
js
gs
arpl
jb
dec
stos
mov
pop
pop
mov
cmpsl
and
popa
push
cmpsb
out
in
jmp
lret
call
cwtl
in
mov
inc
scas
test
fnstenv
ss
fs
lret
push
lods
rorl
sbbl
mov
lahf
sub
mov
or
pop
jnp
fildl
push
aam
icebp
orl
or
cmp
das
es
sahf
aaa
call
mov
cs
pop
push
movsl
cmp
xchg
fldl
mov
ret
push
xchg
adc
cltd
xchg
ss
dec
xchg
shll
cmp
xchg
imul
out
and
push
mov
daa
jne
adc
andb
jns
mov
inc
pop
ret
cltd
incl
insb
pop
xor
loope
dec
iret
jb
jno
lock
sbb
std
pop
scas
ss
leave
hlt
orl
cmp
mov
out
sbb
push
xchg
cmp
sub
jnp
dec
out
pop
jns
ja
mov
push
xchg
into
sub
add
lahf
bound
movsb
xchg
mov
lds
loop
mov
xchg
push
and
mov
movsl
std
jae
mov
pop
inc
jne
cmc
je
sbbb
push
cwtl
repz
xchg
push
test
or
cld
repnz
lock
in
push
push
sbb
and
insl
mov
ds
sub
pusha
add
bound
jecxz
popf
in
cmp
push
insb
jne
dec
inc
sbb
repnz
push
mov
cli
jmp
movsl
aas
pop
movsl
cmp
inc
add
xor
dec
test
push
add
insb
dec
popf
out
xor
xlat
mov
es
sti
aam
scas
sti
lock
and
fwait
mov
mov
rorb
sbb
lea
adc
jns
icebp
jb
test
mov
push
dec
out
adc
movsb
movsb
mov
les
push
fwait
mov
dec
adc
dec
mov
add
xchg
xchg
pop
inc
xor
fsts
xchg
lods
dec
fcomps
add
xchg
mov
jbe
dec
insb
or
or
push
mov
lcall
mov
mov
xchg
xchg
jle
sbb
xchg
stos
cli
les
lds
xor
push
add
insb
js
in
scas
imul
sti
lret
pop
mov
pop
shrl
add
and
mov
ja
iret
es
in
sti
xchg
jle
nop
xor
gs
lods
movsb
jnp
dec
negb
inc
sub
pop
sbb
es
adc
lea
mov
add
dec
mov
dec
sub
push
xor
neg
jle
stos
dec
dec
dec
mov
mov
sti
daa
inc
xchg
repnz
pop
stos
into
cmp
movsb
cmp
adc
xchg
lock
adc
hlt
pop
ja
dec
sbb
or
jmp
in
loopne
aas
sub
or
mov
cmp
scas
push
aas
out
int
sbb
arpl
loopne
dec
inc
or
xor
pop
mov
xor
iret
iret
adc
imul
sub
loop
cmp
mov
sbb
mov
mov
mov
fdivrs
xor
jns
add
jecxz
or
inc
fbstp
push
ljmp
les
jnp
subps
sbb
fs
sub
and
cmc
mov
pop
mov
test
fwait
lods
insl
out
aad
xchg
adc
sbb
push
push
add
in
push
cmp
shll
mov
sub
sub
stc
jo
add
mov
test
fwait
cmp
dec
jmp
mov
cwtl
mov
adc
out
cmpsl
ljmp
xor
dec
inc
jae
adc
or
orl
cmp
call
and
lahf
and
int3
iret
jmp
pushf
addl
notl
and
arpl
jns
dec
sahf
sbb
dec
ret
sbb
and
cmp
mov
insl
cmp
mov
pop
mov
pop
neg
js
cwtl
mov
jge
or
enter
add
imul
sbb
mov
test
dec
xchg
pop
xchg
das
add
mov
jecxz
pop
into
mov
mov
addr16
sbb
shll
jmp
jge
adc
xchg
ja
mov
adc
jecxz
push
aas
push
popa
bound
mov
pop
mov
dec
lds
xchg
push
mov
adc
jae
mov
push
cmp
xchg
pop
push
cmp
daa
test
pop
or
gs
dec
lods
mov
mov
jbe
inc
cmp
les
inc
mov
cltd
jp
fisttps
inc
cmpsb
add
xorl
xchg
cld
fs
sbb
push
and
sub
xor
lahf
dec
pop
dec
aas
gs
movsb
sahf
cmp
mov
mov
sbb
popf
or
ret
shrb
add
test
sub
negl
addr16
popf
in
cmp
mov
insl
pop
sub
loope
std
rclb
int
xchg
jo
mov
dec
inc
pop
xor
jno
cltd
adc
sbb
fwait
aaa
out
add
mov
push
dec
aad
mov
mov
jb
sbb
mov
xor
pop
xor
leave
adc
in
insl
sub
cmp
fsubl
shr
sbb
stc
dec
mov
pushf
and
ficoml
lods
rol
and
in
cmp
inc
adc
lahf
insb
rcr
sbb
lret
mov
dec
adc
popa
jne
mov
mov
addr16
mov
jl
mov
insb
sub
stc
insb
mov
jb
aaa
rcr
jno
mull
inc
clc
mov
dec
mov
aaa
aad
push
add
lds
mov
rcrb
sub
push
mov
jnp
mov
jno
test
pop
pop
xor
lahf
fiaddl
mov
xchg
sbb
sbb
lock
adc
push
lock
fnstcw
add
or
push
push
jmp
dec
mov
hlt
mov
adc
xchg
test
daa
fcoms
fcoml
repz
stos
lds
push
cmp
fs
sarl
mov
popf
mov
cmp
push
xor
lock
je
or
push
stc
fiadds
fs
cmp
and
es
cmp
push
and
hlt
in
stos
inc
cmpsb
addr16
scas
mov
inc
test
mov
out
pop
jecxz
dec
jno
adc
and
adc
fs
push
xor
mov
pushf
push
xlat
cmp
inc
arpl
and
sub
adc
fsubrs
std
int
mov
mov
inc
fwait
mov
jns
sbb
pusha
adc
mov
sub
lcall
or
pushl
orb
inc
push
mov
xor
insl
mov
mov
xchg
cmp
jmp
js
shlb
add
stos
jecxz
xor
jg
cmp
daa
cli
repz
test
imul
loope
xchg
mov
daa
aad
leave
lods
cmp
add
fxch
out
pop
stos
xlat
inc
lahf
xchg
sub
bound
cmp
xor
scas
push
fucom
scas
outsl
imul
cwtl
xchg
xchg
lods
icebp
push
inc
dec
add
cmpsb
push
mov
lret
mov
or
push
add
popa
rorb
sub
push
push
mov
jns
repz
aad
xchg
cmp
int3
frstor
or
push
fldt
test
dec
cmc
push
je
scas
in
xchg
sub
lock
sbb
xor
dec
into
jne
xchg
sbb
iret
notb
lods
fcom
inc
cmp
insb
dec
or
cmp
jmp
mov
addr16
push
sub
or
mov
lock
in
hlt
data16
add
sub
and
js
mov
cwtl
arpl
pop
inc
sub
neg
pop
enter
stos
pop
ret
mov
imulb
mov
push
push
cmp
icebp
jp
push
mov
imul
xchg
xor
push
fiaddl
test
ss
loope
filds
cwtl
fwait
sub
test
in
fsubs
sub
fwait
iret
inc
pop
add
push
lods
jae
xlat
push
mov
mov
roll
adc
sbb
js
push
out
sbb
shlb
into
add
or
xchg
mov
call
movaps
jbe
add
lods
stos
neg
jbe
dec
cmpsl
dec
jl
dec
mov
into
pop
scas
out
push
dec
cmp
sub
pop
movsl
je
ss
jl
lret
repz
repz
dec
fnstsw
hlt
leave
into
test
mov
and
mov
outsb
adc
sub
jecxz
fsubrl
jnp
ret
insb
inc
jl
jge
push
cs
push
jbe
cmp
xchg
and
repnz
push
mov
mov
xchg
std
orb
sahf
int3
mov
fstl
inc
mov
push
sub
xchg
dec
dec
inc
inc
pop
xor
pusha
xor
das
lock
int3
push
fistl
in
fcoml
test
fimuls
daa
lahf
pop
addb
sbb
push
adc
sti
clc
mov
imulb
xchg
int
rcrb
movsb
cs
or
paddusw
sbb
outsb
jg
ljmp
les
jg
addr16
cli
mov
andl
xor
jbe
es
push
or
stos
push
push
pop
push
xor
mov
aas
popf
jle
xchg
mov
and
movsb
xchg
lcall
in
imul
mov
push
insl
push
cltd
xor
ljmp
cwtl
fldcw
xor
sub
cmc
dec
cld
popf
adc
push
or
in
jmp
push
rcll
push
leave
cmp
fxch
ds
and
iret
ror
ja
xchg
jecxz
incb
and
insl
les
sbb
shr
mov
push
pushf
fucomip
xor
fstpt
scas
inc
fistps
lods
dec
repz
call
call
push
enter
movsb
mov
xchg
mov
or
add
das
aaa
cmp
stos
inc
push
loopne
mov
push
cmp
pusha
xchg
aad
cmp
je
lret
and
mov
xchg
push
mov
fsubrl
pushf
mov
call
inc
inc
push
or
dec
ret
jae
sbb
add
push
pop
or
dec
idivl
out
aaa
and
jge
mov
pushf
sbb
xorb
popf
jecxz
xchg
cmp
js
pop
addr16
jb
dec
arpl
cli
lret
fcmovnbe
idivl
pop
xchg
int
mov
push
dec
cmp
repnz
dec
xchg
mov
jl
sbb
pop
out
lret
in
leave
push
idivb
or
sbbb
dec
dec
pop
push
inc
or
clc
mov
adc
test
ret
push
cmpsb
cld
sbb
pop
dec
dec
arpl
and
or
cmc
mov
iret
sti
or
jle
push
cmpsl
sub
out
inc
lods
mov
mov
xor
lock
mov
cmp
imulb
mov
jb
ss
lock
inc
clc
cmp
lret
push
jmp
out
fidivs
scas
test
jecxz
flds
lcall
mov
daa
cmc
adc
adc
cmpsl
repnz
shrb
insl
stos
mov
fldenv
xchg
pop
aad
push
push
movsl
jl
push
fisubl
lods
inc
sbb
mov
dec
fwait
push
leave
out
mov
movsl
sarl
iret
inc
js
cmp
mov
lahf
insb
stc
flds
jno
xor
cmp
mov
sub
cmpl
iret
pushl
enter
lea
mov
lds
mov
lock
gs
xlat
mov
jo
sarb
sti
clc
jbe
out
xor
lock
sarl
mov
lret
inc
fcoml
xor
cmpsl
sub
xchg
sub
sbb
in
enter
inc
test
in
inc
idivl
aam
pop
pop
js
pop
jno
mov
out
pop
and
loopne
inc
rcr
xchg
inc
cmp
push
xor
or
jecxz
mov
cs
testb
fdivrl
les
ret
loope
or
call
adc
out
fldcw
xchg
das
leave
and
paddb
lret
xchg
adc
in
in
pusha
es
clc
add
stos
mov
push
scas
ret
pusha
sub
or
stos
pusha
xor
mov
mov
outsl
sti
mov
dec
arpl
aas
add
iret
mov
cmp
mov
sti
ret
push
pushf
jg
lock
jl
cmp
into
shlb
dec
pop
cli
loope
aas
xchg
push
inc
push
fadd
stc
je
hlt
mov
jns
sarl
dec
sarl
and
cmp
outsb
or
addr16
daa
fwait
aaa
mov
sub
loopne
and
movsl
idivb
call
ljmp
outsb
lock
dec
xlat
sarb
ret
leave
push
call
sar
ficomps
push
mov
cltd
jae
jecxz
pop
enter
sbb
test
sarl
xor
shlb
pop
push
je
fimull
or
rol
stos
mov
outsb
call
jge
add
std
ror
dec
sbb
sahf
jno
xor
xchg
inc
std
xchg
cmp
inc
int
jmp
sarb
ficompl
mov
hlt
cwtl
push
pop
mov
mov
jge
pop
and
cltd
xor
add
push
insl
enter
dec
fcomp
popa
iret
mov
test
mov
arpl
push
cli
xchg
cmp
mov
bound
adc
hlt
in
jno
mov
bound
push
mov
enter
adc
mov
dec
negl
and
or
in
pop
lahf
lock
mov
sbb
mov
jge
push
sbb
mov
ficompl
sahf
xor
call
rorl
push
clc
clc
imul
xchg
push
xor
inc
mov
mov
mov
and
fcmovbe
pop
mov
pop
sti
sarb
mov
adc
or
mull
xchg
mov
int3
inc
push
jbe
jo
das
sbb
aaa
and
push
xchg
jge
dec
jmp
sub
loope
les
fs
call
dec
dec
rcll
popa
sub
fs
inc
sub
adcl
lods
in
rclb
ss
pop
mov
jmp
test
inc
xor
sub
mov
incl
mov
mov
push
and
sbb
or
negb
mov
pop
inc
mov
adc
arpl
les
push
mov
es
mov
cmp
or
lods
sbb
sub
mov
xor
shrl
cmpsl
mov
cmp
nop/reserved
addr16
mov
int3
insb
filds
add
cmc
aaa
int
add
xchg
addr16
sbb
cwtl
sub
adc
jmp
adc
aas
imul
xor
imul
adc
xlat
cmpsl
test
push
sbb
std
lahf
idivb
les
hlt
or
xor
lock
push
inc
cmp
add
add
pop
subb
mov
jnp
and
sub
imul
rolb
mov
xor
addl
and
jl
pop
pop
lret
jl
addr16
in
out
pop
xchg
lds
and
adc
into
push
xor
popa
push
sub
or
jno
lret
xor
fnstsw
adc
cmpsb
mov
scas
mov
int3
outsb
insb
jnp
ja
cmp
sarl
adc
mov
lods
movsb
jnp
and
outsl
adc
xor
dec
fwait
aas
add
lea
ja
cmp
push
adc
lret
sub
push
shrb
cmpsb
insb
jo
adc
add
xor
pop
out
jnp
fisubrs
mov
xchg
xchg
test
jo
outsl
fs
stos
sarb
adc
gs
les
popf
arpl
out
jbe
mov
aam
test
notb
inc
adc
pop
mov
stos
scas
test
sar
add
mov
lahf
inc
push
dec
inc
test
pop
fnstenv
xor
pop
out
ficoml
and
or
xchg
push
sub
lcall
and
or
or
dec
fildll
push
xchg
pop
inc
add
nop
aaa
jge
popa
jg
and
sub
xchg
mov
int3
dec
push
insl
xor
push
mov
adc
das
adc
sbb
lret
insl
sub
icebp
mov
icebp
mov
jle
ja
mov
pop
pop
test
loopne
adc
add
xchg
mov
jge
icebp
mov
jmp
in
test
mov
mov
inc
sub
cmp
mov
and
sbb
movsb
movsl
mov
pop
xorb
in
imul
jp
dec
pop
mov
adc
nop
jmp
stos
psubw
mov
aas
sahf
pop
ficomps
inc
sbb
out
loopne
mov
das
jmp
dec
jne
inc
aam
pop
rcll
pop
push
cmp
mov
xor
jge
jl
pop
movsl
out
stc
imul
inc
test
mov
aaa
fldenv
mov
rclb
dec
aas
stos
mov
mov
cmp
sbb
loop
jae
xchg
das
mov
mov
aas
jnp
loope
mov
pop
sbb
in
push
xor
dec
enter
push
cwtl
fildl
cld
outsb
addl
popa
dec
loopne,pn
scas
xchg
pop
add
bound
pop
fwait
aas
imul
mov
xor
adc
sub
cmp
fildl
sub
loope
loopne
dec
add
sub
dec
jp
ds
sub
mov
push
aas
lret
pusha
pop
shlb
cld
dec
out
cmc
lcall
jmp
out
sub
sbb
mov
jle
aad
xchg
push
gs
out
jmp
insb
add
add
mov
inc
and
decb
data16
inc
stos
xchg
iret
outsb
xlat
push
cmp
mov
in
add
aad
outsl
cmp
jge
faddl
scas
imul
jmp
popf
xor
rcll
stos
jge
xchg
aas
imul
subl
mov
repz
mov
mov
js
push
mov
repnz
xor
jno
scas
mov
lcall
pop
mov
ret
subl
mov
sub
shll
jecxz
mov
push
in
aad
jnp
xchg
lods
pop
out
add
rcl
sti
xchg
or
stos
jb
fucomp
enter
mov
or
lahf
fdivrs
xchg
roll
fnstenv
fcoml
fisubrs
and
sarl
push
sbb
stos
pop
jb
sub
test
pop
mov
js
fucom
push
pop
fwait
cmpsl
dec
sub
lock
fcompl
push
ror
int
push
out
cmp
sbb
xchg
ret
mov
sub
shll
sub
ja
push
call
sub
into
dec
sahf
xor
mov
mov
add
movsb
mov
mov
popa
or
lahf
xchg
lods
lret
xchg
fnstenv
pop
sbb
mov
push
movsl
xor
test
rep
fidivrl
xchg
pushf
pop
scas
bswap
out
mov
in
lods
and
sub
cmc
ja
or
rcl
add
mov
and
inc
icebp
jl
test
mov
push
and
and
lods
incb
stos
scas
daa
cmp
cmp
mov
fldl
dec
push
dec
inc
lret
ds
fwait
insl
insl
out
bound
adc
arpl
seta
cmpsb
insl
adc
arpl
rclb
fmull
push
ret
ret
xchg
push
jle
clc
mov
arpl
jae
jl
xchg
jl
shrb
adc
stos
pop
outsb
test
push
inc
xchg
pop
push
mov
faddp
dec
fistpl
out
sub
adc
lcall
arpl
xorb
popf
sub
lcall
xchg
pushf
lea
or
shrb
add
lcall
or
outsb
jl
and
pop
hlt
cmp
aad
sub
ljmp
es
jne
sahf
lret
sbb
pop
inc
mov
mov
sub
sub
mov
ljmp
sahf
mov
or
or
xlat
int3
lcall
add
sahf
pop
inc
insl
imul
cmp
sub
push
rcrl
push
jmp
scas
popf
mov
cld
mov
pop
sub
sub
cltd
hlt
or
clts
push
jne
xor
push
fisttpl
xchg
push
inc
jnp
aad
xchg
sub
lods
pop
test
jo
js
dec
pushf
inc
add
dec
add
popf
pop
in
push
in
adc
fsubrl
xchg
and
mov
stos
out
jge
and
call
xchg
mov
xchg
pop
pop
xor
and
dec
add
std
sub
fs
out
push
lods
fildl
add
movsl
shrl
scas
and
scas
fnstsw
pushf
adc
scas
scas
inc
nop
in
mov
cmpb
nop
cmp
mov
xchg
adc
icebp
adc
dec
lods
push
lock
jae
cmpsl
add
or
test
pop
sub
fists
ret
roll
data16
mov
adc
in
mov
ret
call
xchg
dec
out
xorb
sti
pushf
stos
cmp
in
pop
xchg
or
inc
inc
scas
and
xor
loopne
mov
cmp
stos
fisubs
xor
add
fisubl
roll
adc
sub
jp
dec
xlat
sbb
stos
push
aaa
adc
jb
jge
mov
test
mov
cmc
ja,pt
pop
test
and
insl
inc
jae
das
mov
and
jns
jp
mov
js
xorb
std
roll
arpl
push
jbe
mov
mov
mov
push
scas
push
mov
jmp
cld
js
std
mov
sub
pop
pop
or
int3
flds
aam
push
mov
sti
sub
out
jle
mov
or
out
inc
test
mov
push
fwait
inc
lret
add
scas
push
mov
mov
dec
mov
and
cwtl
dec
pop
fstp
les
int3
inc
xor
dec
dec
ss
hlt
leave
movsl
pop
and
mov
xor
jne
loop
mov
cmpsb
jle
inc
adc
or
mov
inc
sti
jae
cmpsb
adc
mov
enter
pop
add
mov
sbb
xlat
adc
les
or
popa
xor
mov
enter
jmp
loope
mov
inc
ficoml
mov
mov
sbb
pop
add
shrl
fildll
lret
sbb
pusha
adc
push
dec
fucomip
dec
jecxz
mov
push
das
mov
sub
adc
bound
aam
mov
dec
pop
cmpb
mov
inc
stos
js
flds
jmp
daa
fwait
pushf
call
add
jb
loope
cwtl
sub
imul
mov
mov
call
test
xor
dec
imulb
push
ficomps
ljmp
lds
cmp
lcall
int
cwtl
inc
sbb
or
mov
mov
test
xor
xor
push
or
push
jns
bound
orb
mov
xchg
lock
pop
pop
int3
nop
in
mov
fsub
push
mov
pop
inc
lret
push
or
push
dec
push
cld
pop
pushf
xor
out
sti
shrl
push
nop
push
jo
ror
leave
push
add
sub
mov
push
sub
ja
sub
pop
cwtl
loop
scas
jle
or
pusha
outsb
adc
je
ficoml
jmp
push
cs
inc
sub
jne
cmp
adcb
xchg
ja
add
jno
sbb
and
aaa
xor
ja
sbb
mov
xchg
data16
xchg
pop
and
lahf
pusha
cmp
jae
mov
ret
push
mov
lret
scas
adc
cmp
jp
popf
rorl
iret
jno
push
lods
int
in
cmp
xchg
inc
mov
xor
mov
cltd
mov
ficoms
jbe
clc
lock
shlb
pop
iret
imul
aad
repz
dec
add
pop
pop
or
int
push
addr16
add
clc
lods
arpl
das
movb
rclb
aaa
sbb
cmp
dec
popa
xchg
mov
add
and
test
test
inc
nop
sub
sub
push
roll
clc
dec
dec
adc
fiaddl
ss
xor
mov
xchg
mov
out
lods
dec
push
cmp
or
adc
jle
xor
add
out
out
or
xchg
subl
inc
lcall
push
or
sti
faddp
lods
popa
cmpsb
push
dec
daa
test
popf
into
fsubrl
and
sbb
xchg
dec
incb
inc
push
xchg
popa
xor
mov
gs
or
adc
and
movsl
mov
add
mov
and
xor
data16
mov
fs
das
push
cld
mov
ret
push
sub
stos
sub
mov
lcall
adc
divl
xor
int
mov
loope
dec
inc
popf
aaa
inc
jecxz
mov
pop
mov
fsubl
cld
jb
cmp
mov
shrl
jb
add
sbb
push
lods
aaa
scas
out
pop
dec
lods
aad
mov
pop
out
add
mov
adc
lret
pop
in
mov
fs
mov
lds
mov
in
pusha
lock
aad
sub
xchg
idivb
dec
mov
ljmpw
xor
xchg
out
adc
jle
mov
aaa
les
or
jne
cwtl
subb
fdivs
jo
das
jle
ficomps
test
fisttps
adc
lock
int
fwait
clc
dec
loope
sub
hlt
mov
int
mov
cmpb
insl
xlat
lcall
or
mov
data16
imul
mov
mov
xor
mov
js
add
mov
pop
jb
js
fistl
dec
in
cmpsl
mov
in
shl
rcrb
sarb
shrb
push
ds
pusha
xchg
mov
push
adc
pop
shlb
and
mov
gs
jb
rorl
std
je
inc
out
sti
fcomps
xor
sbb
addr16
insb
push
jge
xchg
das
mov
dec
bnd
xchg
stc
ds
mov
es
insl
mov
into
clc
pop
cmpsl
jle
inc
insl
popa
cmp
or
inc
dec
jg
gs
pusha
cmc
fs
mov
push
mov
loopne
mov
inc
pop
sbb
cld
or
popf
std
pmulhw
mov
inc
jl
repz
and
pop
rclb
pop
or
pop
dec
addr16
pop
out
imul
mov
insb
shl
push
xchg
cmp
clc
sub
fistpll
cwtl
jae
sbb
stos
xor
jl
out
insl
jns
imul
add
mov
fsubl
mov
and
mov
hlt
int
fimull
xchg
dec
cmp
loop
pop
dec
dec
out
movsl
lret
and
mov
fmuls
cmpb
mov
inc
cmp
in
ss
stc
sti
popa
or
popa
lds
mov
sub
inc
push
mov
push
push
adc
xchg
xor
ljmp
cmp
push
or
or
add
xor
lods
jp
cmpsb
pushf
pop
pop
fs
or
rorl
mov
sbb
outsb
inc
and
fmuls
scas
data16
sub
sub
lods
sub
popf
call
jp
xchg
iret
call
insl
pushf
or
jecxz
dec
mov
pop
iret
sub
mov
jecxz
out
incl
rolb
pop
mov
push
int3
das
cmpsl
roll
xorl
iret
in
popa
and
in
gs
mov
sub
add
jb
fisubrl
adc
dec
dec
pop
into
xorb
dec
push
push
jle
or
addb
iret
std
mov
add
or
fildl
inc
roll
and
iret
loop
mov
or
adc
out
and
xchg
xor
enter
dec
inc
frstor
mov
lods
mov
pop
out
dec
mov
mov
jbe
xor
loop
inc
cwtl
or
xor
ljmp
cld
xchg
pushf
mulb
stos
mov
xor
cmp
adc
flds
and
jo
xor
push
dec
and
stos
cmpsl
inc
scas
pop
jno
out
adc
rorl
ficomps
leave
jg
js
pop
xlat
movl
pop
ljmp
aas
daa
scas
and
inc
leave
loop
or
xor
popf
lahf
std
dec
iret
jp
scas
add
out
add
in
push
ret
mov
mov
add
or
je
pop
int3
nop
adc
mov
push
in
mov
out
jecxz
lods
ljmp
out
aad
lret
dec
call
xlat
mov
aad
pusha
xor
stos
dec
inc
dec
and
aad
sti
adc
mov
xor
sbb
in
sub
push
movzwl
push
ret
mov
aaa
and
mov
pop
fists
sub
cmp
in
out
inc
cmp
in
jo
shrb
or
jb
shll
iret
sub
sbb
out
pop
rcll
sub
mov
pop
lods
push
fidivrl
cmc
testl
ljmp
test
jmp
adc
pop
mov
pop
add
ljmp
mov
cmp
mov
cmp
mov
and
ret
sub
dec
fwait
fldcw
stos
mov
je
and
scas
sbb
cmp
loop
mov
bnd
movsl
sub
mov
fmull
sub
or
or
jp
cmpsb
push
in
inc
push
repnz
dec
dec
mov
mov
cmp
testl
xlat
pop
mov
lods
iret
lock
mov
outsb
sti
clc
xchg
mov
cmp
lods
inc
iret
xor
cmp
xchg
mov
imul
js,pt
sub
popf
mov
test
roll
pushf
xchg
sbb
cwtl
lea
fidivs
arpl
gs
data16
and
push
pop
sub
insl
mov
addr16
ret
jge
push
xor
xor
pop
out
es
xchg
js
js
add
jnp
mov
push
decb
in
leave
lods
dec
daa
jle
jl
pop
hlt
and
and
lret
push
les
fsts
adc
scas
into
mov
mov
pop
sub
lret
hlt
inc
pushf
mov
mov
out
jns
cmp
fnstcw
movb
movsl
mov
in
jle
jno
pusha
lds
lods
lea
sub
xor
adc
add
xor
xlat
insl
test
mov
jecxz
or
dec
movb
and
inc
mov
push
jae
adc
movsl
or
stos
arpl
push
lods
jb
fs
fdivrp
push
mov
popa
xchg
or
loopne
aas
dec
shrl
push
jbe
jb
arpl
mov
jne
fucomi
add
clc
sahf
rcl
nop
xchg
pop
fsubrl
xchg
push
pusha
fnclex
mov
mov
inc
pushf
movsb
ds
std
mov
sti
push
xchg
dec
aam
xchg
iret
dec
add
add
add
pop
ljmp
inc
lretw
stc
into
cmpb
call
adc
and
mov
mov
inc
adc
or
cmp
lock
insb
addl
dec
lahf
xchg
loop
push
push
mov
push
ljmp
data16
push
xchg
daa
in
mov
mov
outsl
xchg
lods
jg
js
mov
push
push
sub
test
fiaddl
push
dec
xchg
xchg
adc
cli
test
jecxz
data16
and
daa
mov
jbe
xchg
andb
dec
lods
out
cmp
fdivrs
shrb
icebp
movsb
stos
xchg
enter
jnp
loop
gs
pop
xchg
fwait
pop
xor
rolb
mov
cltd
push
dec
inc
cs
fidivrs
fstps
xchg
jmp
add
dec
pop
mov
push
lods
shrb
or
cld
mov
xchg
fsubrl
pop
or
in
mov
insb
stc
inc
and
test
cmp
and
cmp
cmc
lahf
das
sahf
and
in
xchg
das
outsl
bnd
push
rorb
push
inc
dec
inc
add
sbb
mov
mov
addb
xchg
xor
shlb
adc
mov
xchg
push
cltd
ljmp
push
sub
hlt
bts
jmp
xlat
cltd
mov
je
adc
ja
sub
insl
add
scas
xchg
loopne
pop
ret
dec
ds
arpl
fnstcw
pop
dec
pusha
stos
mov
mov
mov
mov
les
iret
rcr
gs
nop
jmp
adcl
test
lcall
data16
jae
jle
jns
add
imul
push
je
loope
jmp
shrb
xor
iret
imul
xchg
cmp
pop
aam
cmp
adc
ds
outsb
xor
stos
js
push
mov
negb
add
and
lcall
mov
lea
sub
xor
sub
jg
xchg
jmp
ja
shll
sub
xor
insb
stos
icebp
and
sub
xchg
mov
sub
fldl
fldenv
repnz
stos
push
arpl
in
mov
movsl
mov
sub
in
mov
in
or
cwtl
fs
hlt
popa
cs
lea
testl
cmp
test
rorl
pop
ret
xchg
mov
pushf
hlt
sti
into
scas
inc
into
adc
inc
iret
dec
and
sub
imul
xchg
scas
pop
aaa
imul
add
sets
in
int
ret
scas
ret
push
sahf
negl
notl
or
inc
pop
jge
ljmp
mov
out
sahf
jmp
mov
push
push
jne
popa
dec
sbb
pop
ret
loopne
dec
cmp
call
jnp
fucomi
cmpb
adc
js
fucom
mov
test
push
pop
adc
xlat
adc
cltd
inc
adc
icebp
xchg
or
adc
clc
lea
xchg
data16
cmpsl
add
push
pop
add
out
lock
add
lret
jbe
pop
and
cmp
xor
test
mov
cmp
or
or
xorb
inc
in
in
add
lahf
xchg
in
scas
xchg
mov
mov
or
shrb
inc
popf
mov
sub
out
fcomip
dec
sahf
cmp
aam
fisubl
mov
ret
insb
sub
lea
jo
push
sbbl
in
jge
jnp
push
sub
iret
data16
dec
and
hlt
fstps
in
scas
addr16
testl
test
pop
or
andb
rcrb
je
xchg
cmpsl
mov
xor
adc
sbb
mov
cmp
push
not
pop
pop
imul
jbe
movsl
lods
mov
pushf
adc
push
push
pop
push
jae
std
test
cmpsb
imul
cmpsl
add
ss
push
xchg
pop
lret
add
pop
xor
int
out
pop
lcall
sub
inc
push
int3
jo
aam
fstl
stos
mov
xor
cwtl
push
xor
sarb
aaa
dec
xchg
enter
jbe
mov
mov
lcall
and
or
cmp
push
fistps
push
mov
or
in
jle
outsb
sbbb
das
dec
ljmp
add
inc
outsl
mov
and
add
or
cmpsb
jb
sub
inc
sbb
outsl
and
pop
daa
loop
movsl
cmpsb
mov
call
das
cli
incb
cli
ss
jae
mov
andl
or
cmp
jbe
mov
and
jge
mov
not
popf
push
cmpsl
xor
mov
jbe
pop
fmul
mov
mov
outsb
dec
fcmovne
shrb
mov
mov
xlat
nop
inc
ret
add
push
adc
mov
xlat
out
inc
add
pushf
jno
sbb
adc
out
dec
mov
mov
hlt
mov
xor
mov
popf
jp
repz
dec
loope
jle
push
add
mov
sbb
roll
bswap
cmc
pushf
mov
cmpsb
cmp
in
imul
mov
loop
xchg
mov
cmp
dec
dec
in
sti
pop
sbb
in
arpl
cld
fsubrl
cmp
mov
xor
dec
aad
jbe
pusha
jmp
outsl
idivl
dec
mov
je
lds
jnp
ficoms
cld
imul
call
rcrb
and
stos
in
sahf
or
mov
es
test
loope
rorb
mov
pop
sbbl
mov
adc
add
push
jmp
mov
dec
mov
push
cmpsl
push
loop
push
fbld
icebp
fistpll
xlat
and
dec
movsb
in
lret
fldlg2
pop
inc
stc
cmp
xchg
sbb
imulb
pop
add
movsl
inc
pop
jno
cmp
ret
pop
xor
rorb
mov
sub
aaa
and
sub
sbb
or
jb
sbb
aam
sbb
cmpsl
clc
adc
lods
cli
ljmp
mov
mov
int3
scas
shr
daa
adc
jge
nop
ret
repnz
adc
add
icebp
jecxz
push
jb
push
sub
aas
xchg
leave
call
jp
popa
popa
inc
cmpsb
aaa
sbb
mov
sbb
adc
out
add
popa
div
outsb
leave
imul
stc
in
add
lahf
je
lods
dec
jb
and
push
std
lcall
out
pop
fwait
dec
ljmp
mov
shrb
rcll
mov
rorl
jbe
pop
lahf
ds
ja
outsl
stos
push
add
cmpsb
loope
jle
lds
test
aaa
inc
xor
negl
pop
cld
scas
xchg
insb
lcall
mov
or
lahf
fidivl
xchg
xor
shrl
sbb
in
sahf
mov
sbb
andl
dec
push
in
scas
enter
push
push
mulb
aas
sti
dec
dec
fs
mov
inc
test
inc
mov
cs
insb
jl
cmp
push
adc
imul
pop
sbb
push
fsub
xchg
pop
cmpsl
pop
xlat
jne
push
jp
pop
fucom
fistps
imul
push
sbb
xchg
xor
jno
sub
adc
sti
lock
fldenv
clc
rcr
pop
rclb
mov
cld
sub
imul
lcall
shl
xor
dec
cli
sub
mov
dec
mov
out
cmp
fists
dec
adc
aas
seto
sarb
mov
movsl
and
xchg
in
sbb
in
repnz
insl
in
pusha
negb
out
stc
xor
xchg
xor
stc
test
add
lahf
jb
lret
in
dec
inc
cmp
push
push
icebp
sar
mov
push
push
sbb
int3
push
sub
frstor
insl
push
mov
ficompl
adc
insl
add
mov
lret
mov
mov
pop
sti
insb
rorl
xor
iret
in
push
inc
pop
mov
mov
fxch
ret
imul
mov
test
pushf
pop
or
jno
in
fnstsw
jp
jg
fucomip
inc
fnsave
dec
adc
mov
movsl
or
add
imul
mov
hlt
dec
pop
movsb
inc
dec
jmp
movsl
xor
xchg
aad
das
inc
lods
ss
mov
fimuls
ss
cmpl
mov
aaa
aaa
or
sub
lcall
inc
leave
repnz
xchg
sar
jp
sbbl
jge
push
pop
cld
xor
sub
hlt
les
sub
add
mov
sarl
stc
notb
or
mov
mov
add
mov
pop
mov
les
push
jp
jmp
cltd
fldcw
testb
xor
pop
arpl
push
mov
or
jl
negl
lret
pop
add
pop
fimull
out
outsl
jecxz
push
mov
add
popa
ret
jg
jnp
imul
pop
lods
sbb
sub
sub
sub
or
inc
insl
sti
stc
xchg
call
cmp
stos
out
mov
jne
and
mov
adc
stos
or
dec
xchg
inc
aaa
in
out
test
faddl
scas
mov
mov
std
lods
gs
outsb
divl
mov
out
jmp
push
iret
mov
or
inc
mov
es
dec
es
or
jo
mov
and
movsb
insl
popl
pop
and
inc
cmp
add
gs
mov
fs
rep
movsb
mov
inc
and
cmpsl
lods
aam
imul
fld
repz
inc
fwait
push
jbe,pt
xchg
mov
out
jns
repnz
xchg
subl
sahf
in
in
jno
sbb
testb
push
mov
rol
js
rorl
jge
cmpsl
push
sub
loope
das
das
pusha
popf
in
or
push
in
pop
sarw
inc
dec
ficomps
dec
mov
popf
dec
cld
mov
jge
loopne
dec
stos
je
sbb
movsl
pop
sub
mov
push
ret
cld
and
dec
inc
popf
adc
pop
scas
inc
inc
xor
movsb
sbb
cltd
repz
sti
js
add
clc
cmp
jnp
sbb
lds
mov
push
sbb
in
dec
sti
fisubs
xchg
add
fdivrs
lds
inc
loope
or
clc
aad
sbb
sbb
jg
std
mov
mov
stos
and
inc
mov
xlat
test
pop
out
ja
pop
sbb
insl
cmpsl
cli
in
cld
adc
repz
mov
mov
movsl
push
cld
xchg
aas
mov
leave
xchg
mov
cmp
rcrl
lret
xor
sbb
cmp
lea
sbb
fwait
cmp
out
sti
stos
push
sbb
adc
mov
push
ja
pop
xchg
dec
div
inc
xor
add
cmp
lods
out
sbb
push
and
stc
adc
sbb
clc
add
lret
or
lret
push
sbb
push
adc
aad
aas
mov
out
push
lock
jl
fadd
dec
push
lds
inc
fmull
dec
fcoml
and
rorl
dec
cmp
ret
xchg
sub
sbb
xor
mov
and
push
and
push
js
cmpsl
or
sbb
lock
dec
sub
jle
mov
mov
jns
jl
cmp
sub
stos
fbstp
xchg
jnp
scas
sarb
adc
sbb
jle
inc
cmp
or
in
adc
sub
or
sbb
shll
sub
and
loop
into
pop
mov
pop
xor
lcall
pop
ja
repz
mov
scas
xchg
loop
xchg
movl
pop
test
mov
mov
roll
out
call
jmp
lods
lock
adc
rcrl
cmpb
sti
add
jp
or
mov
mov
jmp
pop
sbb
je
popa
sbb
xchg
mov
ret
inc
jg
mov
pop
push
imul
mov
xor
rol
mov
bound
shlb
cmp
andl
inc
fs
daa
mov
popf
aam
je
pop
xorb
hlt
and
arpl
add
dec
xor
mulb
test
incb
fstp
jmp
sub
roll
mov
fdivl
scas
cmp
push
or
test
in
sbb
imulb
inc
addr16
dec
js
sti
cmpsb
add
shll
mov
icebp
jbe
fwait
or
mov
test
mov
mov
rol
mov
leave
int
lock
and
ja
or
xchg
and
or
xorl
dec
shufps
mov
mov
mov
movsl
rcrl
pop
ds
xchg
test
popf
push
mov
cmpsl
adc
outsb
shl
cmp
and
cmp
aaa
std
mov
loopne
aaa
fwait
pop
push
aad
fnsave
or
mov
cmp
into
pop
sbb
loopne
icebp
jae
mov
gs
daa
scas
sub
or
push
push
sbb
jne
loope
scas
inc
rcll
outsl
adc
mov
rolb
insb
sbb
inc
and
int3
dec
and
sti
adc
fmuls
loopne
push
pop
adc
ja
out
push
push
xchg
pop
fisubl
adc
jle
and
std
js
fwait
add
lret
mov
add
loopne
pop
test
mov
mov
daa
mov
out
pop
ret
or
fdivs
loope
das
in
push
xchg
mov
dec
scas
mov
cwtl
jnp
cmc
pop
mov
sbb
pop
push
cwtl
out
cmp
fsubp
and
lahf
rcrb
mov
test
pop
dec
lcallw
and
popa
mov
cli
es
mov
jbe
push
or
out
xchg
psrlw
and
jmp
push
or
jae
push
movsl
mov
cltd
sbb
sahf
stos
xlat
stos
lret
jecxz
mov
je
add
fwait
mov
insl
dec
push
or
mov
jle
aas
loopne
push
jb
add
repnz
add
fcoml
jecxz
out
push
push
mov
stos
fsts
mov
sbb
fwait
xchg
sbb
dec
fwait
sbbl
in
xchg
and
jb
out
mov
lods
push
es
sbb
hlt
sub
jae
fwait
rorb
xchg
mov
pop
mov
adc
cmp
stos
and
mov
pop
xchg
add
and
jge
mov
mov
pop
mov
cli
emms
and
ljmp
pop
mov
xor
fildll
sbb
in
mov
mov
cs
mov
sub
dec
mov
pop
rolb
sbb
nop
sbb
push
ret
add
jle
push
and
nop
xchg
fdivrs
ss
ret
into
mov
hlt
scas
add
out
leave
sahf
push
cmp
bound
push
in
jne
mov
or
lods
mov
adcb
iret
outsb
int
or
and
in
lret
loopne
dec
in
loope
or
inc
lods
leave
shl
push
pop
jmp
push
pop
jecxz
out
dec
repz
adc
ds
imul
mov
or
inc
loop
or
fisttps
sbb
loop
jno
data16
ja
dec
leave
dec
mov
arpl
add
sbb
lahf
cmp
rcll
call
jecxz
in
ret
pop
clc
jg
xor
lds
cld
push
pop
testb
adc
lock
lods
ss
or
pop
inc
fs
lahf
pop
loop
pop
jecxz
dec
out
pop
rclb
or
lock
out
fdivs
iret
hlt
imull
sbb
mov
or
fiadds
stos
lcall
cmp
dec
dec
jbe
movsb
adc
stos
dec
arpl
or
in
pop
ljmp
and
fdivs
movsl
imul
cmpsl
mov
movsb
pusha
xchg
jo
mov
call
mov
xlat
jl
jmp
dec
mov
into
ja
pushf
pop
in
ljmp
cld
jae
cs
lods
jecxz
ret
aad
int3
nop
movsl
jno
cmc
out
movsb
pop
cmp
into
stc
sub
lds
mov
jle
shlb
xchg
pop
lret
jae
nop
pop
pop
xchg
xchg
sub
popf
mov
cld
jge
mov
clc
cmp
shl
das
jp
mov
pop
stc
push
dec
sbb
stos
xchg
xchg
jnp
cwtl
pop
or
sbb
mov
and
cs
xorl
cld
cmp
cmp
xchg
mov
rorl
ret
cs
arpl
pop
cmp
xchg
movsl
add
scas
mov
mov
xchg
inc
add
jp
stos
push
fldcw
movsl
in
mov
mov
stos
inc
pop
jae
adc
stos
and
push
push
lods
aas
cmc
test
sub
je
popa
add
int3
or
imul
idivb
int3
test
mov
push
inc
adc
sub
in
push
movsl
ret
jmp
xlat
push
and
repz
dec
rol
lret
sbbb
and
pop
lcall
pop
or
jle
inc
mov
vshufpd
les
mulb
add
sahf
add
loopne
mov
xchg
aam
das
clc
sbb
mov
fistpl
aaa
sub
adc
inc
inc
mov
loopne
xchg
sub
dec
pop
out
nop
arpl
and
jne
cs
dec
ds
mov
jl
stos
dec
lods
out
aaa
sbb
cmp
mov
push
mov
ja
mov
inc
sahf
add
mov
mov
fistl
sub
nop
jne
fwait
mov
jb
pop
movsl
dec
jl
sub
stos
add
call
sbb
push
xor
or
in
int3
or
mov
aam
and
bound
xchg
and
testb
divb
mov
adc
lret
pusha
xor
shlb
sub
mov
pop
jecxz
or
sbb
xchg
mov
int
jle
jmp
xor
xchg
imull
ss
out
les
sub
fstps
xchg
push
push
cmpsl
xor
mov
sar
xor
orl
testl
aad
dec
je
push
dec
or
int3
sbb
sbb
mov
inc
das
insl
mov
push
mov
in
dec
add
jno
xchg
fucomi
mov
jl
and
fildll
in
jmp
or
jmp
je
pop
or
and
jb
or
sahf
mov
jb
ljmp
daa
adc
je
or
mov
lock
pop
ret
pop
adc
stos
incl
push
lret
jge
repnz
rcl
shl
cmp
inc
and
sbb
inc
jl
lret
lock
mov
dec
lea
jecxz
mov
push
lahf
pop
push
mov
inc
sahf
movsl
int
adcl
les
aas
mov
movsb
in
sbb
sub
adc
sub
dec
dec
mov
scas
out
mov
dec
and
xchg
mov
inc
mov
mov
pop
outsl
daa
push
push
lds
push
sbb
adc
aad
mov
dec
scas
jg
subl
xchg
xor
insb
pop
scas
sub
mov
scas
pop
icebp
and
outsb
sbb
popa
outsl
xor
loop
mov
outsb
cmpb
cmp
leave
sti
pop
push
and
pop
add
push
xor
xchg
lcall
insl
push
and
cltd
push
pop
inc
enter
les
add
add
aaa
mov
inc
dec
pop
in
sub
adc
test
fucomip
out
addb
pop
stc
cwtl
cmc
add
mov
jmp
loope
pop
sub
rcl
pop
aam
push
push
mov
pop
test
shll
aaa
push
push
mov
jnp
add
mov
xchg
sbb
sahf
cltd
loop
xlat
cmp
cmpsb
add
in
mov
adc
iret
pop
mov
adc
pop
loope
xchg
xchg
imul
mov
mov
xchg
pop
mov
push
add
jae
sahf
test
cmp
sub
adcl
jns
xor
cmp
sbb
jae
mov
pop
pop
lcall
push
mov
cs
in
out
xchg
punpckhdq
jae
dec
xchg
mov
ret
repz
lock
insl
or
sahf
dec
aaa
in
lock
jb
sub
xorl
and
das
hlt
mov
lds
imulb
addr16
cmp
jle
sarb
adc
into
test
mov
orl
mov
adc
pushf
jo
inc
out
in
xor
pop
cmp
push
jmp
imul
push
jns
push
fs
inc
xor
adc
jl
popl
pop
cmp
jne
push
push
sub
pop
xchg
testl
inc
rorb
add
arpl
push
dec
mov
mov
stc
add
push
inc
jmp
mov
sahf
in
mov
je
inc
sub
repz
xor
cmp
xchg
jnp
iret
push
inc
pop
ficomps
insl
ret
add
jbe
and
mov
sub
cld
cmpsb
stc
inc
popf
aad
ffree
and
movsl
cmp
jg
inc
iret
outsb
jp
int
je
jne
cmp
push
addb
shrl
push
push
mov
shll
xor
push
hlt
sub
pushf
jne
popf
shlb
jge
mov
shlb
roll
sub
sti
or
push
fadds
ljmp
lock
mov
xchg
xor
push
and
outsl
cs
cwtl
add
pop
mov
jb,pn
inc
leave
sub
push
test
mov
sub
pop
adc
add
fmull
jle
aas
fsubrs
cmp
inc
xor
pop
shll
pop
fisubs
lahf
imulb
popa
insl
out
jns
movsb
call
lcall
enter
mov
scas
lock
jl
pop
icebp
dec
push
sahf
cmpsb
jne
sub
fistps
cld
or
aas
clc
clc
xor
mov
mov
sahf
ljmp
shlb
outsl
push
mov
jmp
lea
mov
rolb
cmp
and
push
mov
in
fwait
xchg
icebp
mov
jge
mov
jno
inc
out
test
fwait
test
fisubrl
mov
sub
movsb
xchg
dec
fdivrl
movsb
xor
vmread
sub
repnz
adc
faddl
mov
inc
cmpsb
int
pop
pop
test
mov
int3
lds
stos
rorl
mov
push
imul
aaa
mov
xchg
bound
scas
out
movl
cmp
sub
fstpl
pop
out
daa
jecxz
xor
out
adc
cs
jo
dec
stc
sub
shlb
in
imul
mov
fidivl
pop
jo
jbe
push
and
ds
and
neg
dec
dec
mov
adc
iret
ror
imul
movsb
cld
push
push
jns
mov
inc
mov
out
jo
movsb
dec
mov
call
mov
inc
push
stos
subb
loop
adc
ftst
aam
test
movd
cmc
cwtl
lcall
mov
lock
test
shlb
insl
aas
clc
jne
out
jbe
push
push
cmp
xor
movsb
mov
repnz
inc
mov
pfmul
cs
jmp
xchg
sub
mov
cli
and
xchg
jmp
mov
or
xchg
mov
push
das
xchg
dec
pop
test
and
dec
cmp
pushf
mov
cmc
fdivs
movsl
jae
dec
scas
repz
loopne
lahf
ja
popa
jge
rcrb
push
dec
adc
test
dec
sti
pusha
imulb
jae
sbb
push
test
add
out
jp
push
pop
das
cltd
sub
adc
frstor
aam
or
ret
iret
jp
push
popf
jbe
mov
pop
or
adc
push
lret
sar
dec
pushw
cs
lods
add
mov
pop
imul
pop
inc
adc
mov
jb
fcmovnb
and
inc
ds
push
pop
leave
iret
and
cltd
stos
imul
aaa
subl
rcr
fsubrl
mov
fnsave
int3
lret
cwtl
or
loope,pn
nop
leave
pop
jge
pop
xchg
inc
mov
out
xlat
div
inc
fmuls
cmpsb
fcmovne
or
into
loop
mov
xor
jae
lcall
pop
mov
or
push
es
addl
ss
and
insb
hlt
or
xchg
jno
push
sahf
xchg
jge
sbb
rolw
rolb
push
mov
icebp
mov
stos
dec
scas
adc
mov
mov
test
jno
xchg
in
clc
sbb
movsb
roll
clc
xor
jle
testb
mov
pop
test
dec
stc
mov
imul
mov
dec
adc
pop
sbb
adc
orb
pop
fsub
push
sti
mov
imul
push
jo
icebp
call
imul
hlt
loope
lea
pop
jno
mov
pop
sbb
xor
or
adc
jp
push
add
or
xor
jecxz
sub
sahf
or
mov
lcall
add
mov
clc
aam
inc
inc
pop
jbe
scas
stc
push
xchg
cs
push
das
nop
adc
scas
dec
call
push
sub
sub
jb
cli
imul
insb
sbb
daa
daa
xchg
pop
ret
push
cmp
mov
sti
and
add
mov
xor
cwtl
pop
pusha
hlt
leave
iret
mov
add
mov
inc
or
jb
dec
jnp
fwait
popa
scas
adc
pop
and
aas
inc
fisttpll
cmp
lods
mov
lret
cmp
movsb
pop
movsl
pop
roll
cld
cwtl
fwait
out
push
add
mov
mov
aas
pop
hlt
idivl
cli
cmp
in
jbe
loop
or
repnz
and
repz
mov
adc
sub
mov
xor
adc
inc
stc
les
adc
jno
subb
rcrl
int
and
insl
xchg
pcmpeqw
shr
pop
jno
lock
and
subb
lahf
test
mov
je
or
outsb
pop
or
mov
or
xor
imul
inc
insb
adc
add
push
iret
stos
jle
lret
cmp
rclb
dec
cld
adc
sar
inc
aas
xchg
insb
out
arpl
pminub
out
es
jo
dec
mov
or
das
jno
add
outsl
dec
std
psrlq
push
sbb
outsl
in
jno
mov
int
dec
imul
test
pushf
mov
xor
sub
jle
fldenv
ljmp
sub
push
cmc
push
popf
daa
ja
adc
inc
adc
ret
xchg
inc
lock
adc
popf
test
inc
and
xchg
test
mov
add
aad
xchg
xchg
cmp
daa
sti
sbb
aas
insb
sbb
adc
fcoml
pop
dec
sahf
lret
pop
jne
outsl
aad
jae
lea
push
push
sbb
jnp
mov
cs
pmullw
ret
std
jne
roll
adc
xchg
jg
gs
test
push
xor
pop
cmp
dec
sbb
cmp
fcmovbe
jmp
lcall
mov
push
into
sub
and
in
inc
mov
fstpt
push
jne
data16
jmp
add
and
mov
pop
cli
inc
fs
divl
inc
int3
and
xchg
ffree
xchg
loop
dec
mov
pop
lods
jb
adc
mov
push
xlat
xor
pop
xchg
fstpt
mov
lcall
aaa
mov
adc
or
rcrb
add
cmp
aaa
movsb
jge
lretw
jb
loope
xchg
jb
push
int
dec
push
mov
ret
sti
mov
lcall
in
adc
ss
mov
in
ja
jmp
mov
fnsave
xchg
or
sbb
je
xor
xor
dec
xor
mov
push
mov
sub
imul
or
daa
repz
cltd
mov
add
cmp
jnp
sbb
sub
lahf
stos
lock
fisubs
inc
loope
pop
std
aas
sbb
sbb
scas
aad
push
repz
add
clc
jbe
test
adc
add
mov
add
or
mov
sub
push
cld
jge
test
pop
call
push
stc
sub
in
jmp
mov
mov
fs
jmp
data16
mov
jle
cmpsl
sub
adc
inc
and
pop
lcall
popf
cmp
inc
cmp
jge
add
lds
stc
mov
stos
mov
cld
das
mov
mov
stos
ds
ficomps
mov
lods
pop
mov
sbb
push
adc
ret
es
mov
xchg
inc
xchg
xor
push
and
cmp
cmpxchg
hlt
movsl
push
cmp
sbb
mov
jo
xor
pop
leave
call
pop
jg
xchg
rcl
les
in
aaa
adc
sub
sub
mov
shll
dec
jno
inc
or
or
or
aam
mov
jle
ds
push
sub
adc
jg
or
shrl
bound
xor
jp
aad
adc
pop
dec
dec
push
aad
xchg
pop
dec
dec
jnp
mov
jo
xchg
in
xlat
call
fwait
aam
mov
pop
adc
cmp
hlt
and
clc
jne
aam
fidivs
clc
adc
mov
mov
xchg
dec
mov
je
aad
adc
xchg
stos
jae
mov
enter
in
jg
imul
and
xchg
push
cmp
outsb
rcll
jb
clc
test
or
push
mov
xor
lcall
int3
insl
std
psubusw
mov
pop
fwait
cmp
in
stos
mov
push
jbe
aad
cltd
daa
cmp
pop
add
int
jmp
mov
jg
sub
adc
or
xchg
push
and
pop
mov
movsl
jns
and
popa
hlt
movsl
pop
insl
mov
inc
gs
out
mov
and
enter
mov
adc
mov
aaa
xchg
dec
add
lods
jge
pushf
pop
xor
or
enter
and
je
mov
bound
cmp
pop
fildl
xor
cmp
push
fisubl
mov
mov
adc
inc
scas
push
ss
cwtl
and
push
nop
je
jns
arpl
subl
xchg
outsl
mov
xchg
gs
in
lcall
dec
repnz
pop
shlb
xchg
sahf
xor
dec
and
dec
insb
mov
mov
mov
sub
mov
lds
and
cmp
enter
inc
mov
pop
enter
rorb
leave
dec
jge
test
sbb
enter
jle
lods
and
iret
js
sbb
lds
mov
popf
dec
arpl
enter
sub
lahf
xor
out
dec
sub
lret
repnz
push
nop
mov
push
outsb
sahf
adc
in
add
jnp
and
ror
sub
lods
mov
fdivrl
adc
mov
imul
orb
test
cld
cltd
push
jb
ljmp
ljmp
pop
es
and
fnstenv
mov
ss
and
dec
sub
mov
jmp
test
scas
scas
or
cmc
fcomps
test
lcall
xchg
jmp
mov
aad
rorl
jbe
jbe
leave
outsb
xchg
cmp
xor
aam
loopne
pop
fwait
movsb
jae
jle
int
or
movsl
pop
in
push
push
push
sub
cmp
dec
cmp
inc
jge
jecxz
fistl
cmp
call
fidivrl
xor
movsb
stos
mov
into
push
xor
je
insb
mov
je
push
pop
sub
outsl
xchg
push
mov
or
add
mov
xor
push
inc
ftst
insl
xchg
cmp
mov
lods
push
jae
cmp
inc
lahf
lcall
dec
ret
pop
inc
int3
inc
addb
shlb
pop
ss
push
lret
nop
pop
inc
adc
pop
nop
jle
adc
xchg
jno
xlat
push
xlat
ss
aas
xor
notl
cmp
gs
pushf
xor
sub
insb
dec
sbb
push
andl
out
cmp
mov
ljmp
and
fs
fcmovb
pop
lods
in
daa
cmp
subb
mov
pop
es
icebp
add
inc
fs
lods
add
hlt
inc
fsubrl
and
mov
movsb
jb
shll
inc
sub
xchg
lret
repz
add
in
rcr
pushf
nop
ret
enter
popf
mov
mov
mov
mov
neg
adc
repnz
cmp
cmpsl
rol
cmp
push
pop
lea
cmp
imul
loope
test
xchg
call
leave
hlt
in
mov
loop
fimuls
and
fistl
out
push
cld
enter
mov
push
cmpsb
adcl
fsubr
call
dec
aaa
sbb
test
bound
add
xacquire
xor
sub
push
dec
es
mov
inc
adc
sbb
xchg
jg
xchg
push
pop
or
xchg
enter
into
dec
pop
lods
sti
gs
or
in
fsub
and
and
sub
decl
stos
fnsave
imulb
jb
fdiv
push
vmovapd
sbb
mov
outsl
leave
pop
mov
fdivrs
scas
adc
adc
dec
sarl
sbb
xchg
xor
cmpsl
rcll
iret
pop
sub
lret
or
repnz
into
ja
dec
fadds
out
cmp
jge
jno
jmp
push
andb
ret
daa
enter
cmc
mov
out
imul
lea
sbb
jne
call
pop
jmp
out
mov
jbe
fs
dec
cmp
adc
enter
mov
fwait
xchg
jb
outsb
sahf
dec
sub
stos
insb
push
or
mov
and
lahf
sbb
push
dec
lods
mov
pop
add
cmp
mov
pop
or
fistpll
imul
outsb
sbb
xor
mov
mov
cmp
test
xchg
pop
sbbb
dec
xchg
pop
push
adc
push
aad
fwait
dec
xchg
lcall
nop
stc
ret
pop
ds
or
adc
mov
mov
fs
push
fwait
aad
jo
and
mov
mov
xor
std
mov
cmp
inc
inc
shll
jmp
mov
jp
jae
xchg
andl
cli
inc
mov
neg
testb
adc
mov
or
shrb
ljmp
das
xchg
fldenv
push
addb
add
and
sbb
out
sar
push
fisubs
fcoms
in
mov
fs
ret
pop
fwait
popf
or
hlt
xor
testl
push
mov
hlt
jb
and
in
mov
jl
adc
mov
gs
sbb
in
add
pop
ret
add
cmc
outsb
int
es
xor
repnz
clc
xlat
pop
sbb
xchg
lock
inc
les
cld
mov
jmp
cli
adc
shrb
movsb
mov
lret
sub
js
pop
push
repnz
adc
ret
jg
and
jl
xor
test
cmpb
push
popf
cmpsl
sbb
cmp
ss
push
mulb
repnz
xchg
add
dec
or
bound
xchg
test
daa
ret
iret
std
mov
fsubrp
cmp
mov
pushf
sbb
bound
aad
xchg
out
mov
push
loopne
cmp
xchg
jb
dec
rcll
dec
mov
pop
sbb
stc
xchg
rcll
leave
push
fucomp
cld
pop
or
aam
mov
cmp
or
mov
ja
cwtl
push
xchg
push
and
xchg
mov
subl
add
dec
push
mov
mull
adc
ror
cmpsl
cmp
pushl
fdecstp
jo
lods
xchg
jo
inc
adc
popl
dec
xor
mov
leave
jmp
jne
shrb
ljmp
test
sbb
in
iret
stos
adc
rep
push
push
xchg
fs
push
push
xchg
shlb
sbb
adc
push
or
das
mov
int3
push
add
cmp
adc
jb
loope
daa
cmc
mov
adc
bound
push
jo
movl
cmp
flds
sbb
xchg
jb
adc
adc
jmp
imul
popf
int3
aad
or
aad
or
mov
daa
pop
xor
inc
push
test
and
subb
cmp
mov
or
sahf
dec
mov
adc
dec
mov
insb
jbe
ret
sub
mov
stos
pushaw
imul
xor
mov
mov
and
xchg
sub
pop
or
sub
adc
nop
pop
les
xchg
jg
les
dec
js
sahf
adc
sbb
jg
jl
inc
fidivrs
clc
movsl
je
cld
adc
loopne
lret
scas
inc
fnstcw
inc
xlat
outsl
mov
loope
sar
iret
sti
leave
leave
aad
hlt
jae
push
push
adc
xchg
mov
scas
cmp
pop
xchg
repz
test
ljmp
pop
mov
lods
push
dec
or
push
iret
js
or
cli
mov
fwait
scas
mov
andb
inc
lock
add
and
jbe
mov
cmp
popf
cld
loope
sbb
stos
pop
movsb
mov
ja
push
lret
push
adc
xor
fildll
negb
pop
dec
mov
jae
loop
sarb
mov
cld
cmp
test
mov
pop
inc
lea
fildll
cmp
mov
out
repz
stc
out
jo
inc
mov
mov
imul
imul
lret
sbb
ljmp
xor
cmpsl
push
insb
mov
push
ds
dec
sbb
push
mov
andb
bound
add
xlat
sub
jbe
nop
mov
out
ss
loopne
imul
jmp
and
inc
xchg
hlt
in
test
loopne
sbb
add
pop
repz
cmp
lock
pop
fdivrl
sbb
ret
cmp
xor
mov
fcoml
fnsave
push
sbb
in
sbb
call
ret
jle
ljmp
rclb
repz
je
ds
out
fildl
mov
aaa
insl
xchg
sub
cmpsb
pop
pop
fiaddl
push
xor
mov
out
ljmp
push
pop
mov
mov
push
mov
cmpsb
xor
mov
cs
adc
in
inc
mov
into
add
jmp
fcmovnbe
scas
mov
dec
sbb
mov
adc
clc
inc
cmp
aaa
lods
loopne
cmp
inc
int
sub
fimull
out
sbb
imul
fwait
mov
cmp
jnp
lods
dec
dec
ljmp
sbb
rcrb
sbb
pop
mov
gs
cmp
aam
mov
lahf
cmpsl
sahf
fidivs
cmp
dec
fildl
dec
and
inc
mov
xchg
add
into
inc
mov
andl
js
scas
push
cs
negl
sub
aaa
icebp
sbb
faddp
mov
fldenv
xchg
daa
push
pushf
aad
cmpsb
mov
dec
popf
pop
xchg
lahf
sub
pop
pop
mov
dec
popa
insb
inc
push
fisubl
push
out
cltd
mov
inc
inc
inc
cwtl
jl
push
sti
loop
jo
adc
int3
nop
mov
push
add
push
mov
imul
jnp
xor
stos
jge
cmpsb
add
insb
repz
xchg
scas
mov
pop
sub
je
cmp
das
mov
popa
mov
lea
pop
cmp
and
fstps
jge
iret
add
sub
lcall
fcoml
or
push
dec
mov
mov
enter
lahf
fsubl
adc
je
inc
or
dec
int3
dec
xlat
daa
lea
push
push
inc
mov
push
xor
imul
pop
xchg
push
sub
clc
mov
cmp
sub
testl
push
mov
push
icebp
js
mov
xor
sub
and
push
push
lret
xchg
sub
fisttps
pop
scas
daa
mov
and
pop
aam
into
sub
ficompl
xor
shl
add
stos
lea
jle
insb
and
mov
xorb
bound
pop
cmpsl
dec
mov
shl
cltd
inc
fwait
and
fwait
lret
js
mov
pop
jge
shrb
mov
pushf
jo
fwait
mov
mov
mov
xchg
cwtl
pop
mov
mov
push
sbb
sub
jmp
add
xchg
dec
dec
nop
push
rcrb
imul
pop
rcrb
push
dec
mov
or
ja
mov
ljmp
in
push
xchg
notl
hlt
decl
pop
dec
sbb
mov
push
in
repz
mov
push
repnz
jle
jp
dec
int3
mov
ja
or
adc
popf
std
cli
mov
lock
mov
loop
and
sub
inc
dec
jae
inc
pop
ret
cmp
in
addr16
addl
fdivl
xchg
inc
xor
mov
or
sbb
mov
mov
loop
fstpt
adcb
testb
sub
bound
pop
int3
test
mov
cli
ljmp
and
push
mov
push
xchg
mov
dec
cmp
shrb
enter
push
xchg
sub
cwtl
das
cli
xchg
jo
cmp
sbb
push
fstpt
sub
pusha
xor
push
and
push
fstpl
nop
push
adc
nop
scas
jne
movsb
inc
pop
mov
dec
jmp
sub
xchg
scas
cltd
sub
mov
sarb
into
push
dec
push
push
push
or
and
shlb
lock
inc
push
dec
stos
add
lods
and
and
and
adc
cmp
jl
rolb
or
stc
mov
sti
movsb
fucomi
pop
push
sbb
fdivs
mov
jae
add
iret
iret
shrl
lret
jl
cmp
lret
jmp
xor
mov
movsl
cmp
inc
shl
mov
pop
jp
lcall
into
xor
clc
out
in
dec
imul
push
dec
or
xchg
enter
inc
jmp
sub
push
loop
ret
inc
pusha
jmp
or
push
mov
outsb
sahf
pop
dec
out
or
mov
push
mov
sbb
pop
jnp
mov
ss
xor
andl
in
xchg
in
aas
insb
mov
nop
mov
imul
outsb
fnstcw
jl
mov
jle
andl
push
leave
lods
jb
leave
int
insl
cli
sbb
js
pusha
cli
ja
or
das
inc
and
scas
cmp
pop
scas
dec
xchg
pop
jmp
out
repz
sbb
xchg
shrb
sbb
or
or
aaa
icebp
das
pop
lahf
bound
xor
adc
mov
jmp
xchg
sbb
lahf
cmp
mov
pusha
test
cmp
hlt
rorb
inc
push
ret
scas
pusha
cmpsl
shrl
jo
mov
mov
outsl
les
dec
pop
notl
pop
add
push
test
and
pusha
jecxz
jb
xchg
pop
cltd
xor
cmpl
mov
xor
jg
jl
jmp
mov
movsl
sub
repz
out
rolb
or
aam
sbbl
mov
xchg
outsb
dec
inc
mov
lret
xor
enter
jecxz
inc
jns
cmpsb
dec
adc
lahf
sbb
add
sbb
out
xchg
ljmp
call
adc
add
test
sub
xchg
xchg
test
ret
mov
in
pop
jb
and
cmp
clc
mov
xchg
loop
inc
push
ss
test
xchg
jl
xor
andl
jbe
sti
push
imul
sbb
pop
loopne
xchg
stc
dec
mov
repnz
dec
andnps
dec
add
rcll
xchg
scas
mov
sub
inc
mov
mov
incl
outsb
in
jne
mov
les
inc
sahf
xor
pop
xchg
push
pop
add
and
enter
sbb
and
rcll
and
loop
sub
push
push
jo
cmp
pop
negl
fbld
nop
cmp
out
add
xchg
pop
xor
int
dec
cmp
in
add
stc
xor
int3
xor
jnp
mov
xlat
push
or
mov
mov
fs
shr
sub
inc
adc
xchg
iret
test
shr
idivl
mov
cmpsl
nop
xor
out
cmpl
inc
jne
push
jns
lock
xor
cmp
fcmovu
movsl
outsl
push
aas
cmp
mov
or
jne
cmc
sbb
jp
xor
add
xor
in
in
mov
and
das
mov
sbb
jbe
jge
ret
out
movsb
pop
cld
mov
mov
jge,pt
cmp
insl
mov
mov
lock
sub
in
cld
add
and
jae
pop
sbb
cmpsl
hlt
mov
test
or
xor
mov
push
sbb
adc
in
icebp
out
loope
xor
adc
or
jno
mov
lods
push
sti
loopne
in
adc
lret
mov
loope,pn
adc
mulb
pop
xor
icebp
xchg
xor
aam
jb
add
cmp
fisubrl
cmpsb
or
xchg
popa
imul
setb
mov
scas
icebp
idivb
fcmovne
into
fadds
cmpl
cld
jl
out
paddb
mov
orb
mov
adc
mov
mov
es
add
gs
sub
inc
sub
or
call
mov
imul
mov
push
cmp
movsl
mov
ficomps
xor
loopne
dec
push
sahf
clc
in
mov
mov
jp
push
mov
cmp
shlb
mov
fcompp
inc
add
cmpsl
and
pop
sti
sbb
push
inc
mov
es
mov
mov
xchg
push
mov
jmp
xor
or
shll
outsb
cltd
pop
iret
icebp
jo
sbb
lock
lret
je
sub
orl
mov
jp
push
jne
test
ret
int3
dec
out
out
mov
das
lret
movsb
xchg
cmp
push
call
push
cmp
push
les
xlat
adc
int3
jns
sub
stos
mov
repz
dec
arpl
cmpsw
out
add
mov
cmp
std
fstl
lahf
push
and
pop
pop
sbbl
jno
das
test
and
mov
sub
inc
adc
clc
push
icebp
call
ss
mov
scas
out
jp
loopne
add
mov
mov
xchg
adc
lds
mov
dec
lcall
xchg
mov
jge
or
mov
and
mov
loopne
out
test
jbe
inc
pushf
rcll
sbb
and
rorl
push
mov
popf
jge
sbb
pop
call
aas
xorb
xchg
sbb
dec
out
jg
cld
push
jnp
cmpl
scas
adc
scas
push
addr16
cld
sbb
sbb
mov
add
in
sub
add
repz
lea
jae
fs
fisubrs
sbb
dec
fbstp
lret
push
mov
or
test
and
cld
nop
push
ret
lds
dec
sarl
sub
insb
dec
xchg
inc
test
stc
jg
mul
xchg
mov
outsb
pop
push
ds
pop
sub
push
pop
cmp
ljmp
lahf
in
lods
add
sbb
sbb
nop
aas
push
sbb
push
mov
mov
inc
jmp
mov
mov
sbb
iret
movsb
and
mov
or
mov
add
sbb
stos
test
inc
push
mov
decl
jle
bound
jno
and
loope
cld
out
adc
mov
jns
sahf
and
sub
mov
mov
mov
inc
xchg
mov
cwtl
add
jecxz
aad
mov
daa
push
out
cmc
in
jmp
xchg
inc
roll
int
decl
and
fbstp
sub
orb
das
adc
sub
pop
movsl
leavew
int3
mov
lods
jbe
clc
ret
outsl
nop
movsl
and
jne
add
aam
imul
ss
jae
pop
cmp
daa
jnp
sub
push
out
jb
subb
push
push
sub
add
dec
dec
sbb
mov
arpl
pop
xor
out
xor
or
and
cmp
jno
push
test
xchg
movl
call
test
push
cmp
push
and
js
xor
mov
in
shrb
rcrb
loop
inc
add
pop
fmull
pop
sub
in
dec
jge
xchg
dec
enter
jl
mov
popa
pop
mov
dec
mull
mov
enter
nop
lret
push
std
xchg
xchg
subl
adc
cmp
loopne
sub
push
incb
pop
scas
or
lcall
jp
push
ljmp
bound
aas
ret
cmp
sub
mov
jne
pop
scas
ficompl
adc
inc
sub
jg
test
add
fs
lds
mov
mov
add
mov
stos
or
mov
or
cmp
push
sbb
xchg
mov
stc
loopne
in
mov
cwtl
pop
aas
mov
test
sub
mov
ss
mov
and
iret
and
jecxz
sahf
fists
dec
xor
stos
sbb
mov
and
add
jb
and
add
loope
rcrb
lds
xor
scas
ret
popf
sub
inc
xchg
sbb
cmpsl
and
std
mov
mov
fs
lods
adc
inc
push
sbb
gs
xchg
push
xor
and
inc
jp
inc
or
out
pop
rcrl
stos
pop
ljmp
cmp
mov
mov
ss
and
loop
mulb
rcr
mov
lods
xor
jmp
or
mov
pusha
out
xor
iret
jge
daa
sbb
lcall
lds
test
inc
mov
and
out
in
mov
mov
mov
push
jle
lock
flds
hlt
fs
ja
test
lret
dec
out
xchg
nop
xchg
outsb
outsl
pop
adc
xchg
dec
push
xchg
jne
into
jecxz
lret
dec
fisubl
add
pop
outsb
insb
insl
lea
adcl
cld
push
sbb
and
cmp
jecxz
mov
pop
push
mov
or
das
cli
repnz
dec
or
popa
cs
jno
or
lret
sti
and
add
push
mov
or
xlat
xchg
scas
mov
lds
mov
cmp
push
dec
js
adcb
mov
inc
cltd
xchg
xchg
xor
leave
push
shr
popf
jecxz
cmc
lock
cmp
int
aam
dec
std
or
mov
fidivs
mov
sub
xchg
pusha
movsb
pusha
sbb
fadd
aam
push
fdivp
addr16
test
and
pushf
in
into
je
xor
fildl
mov
push
add
dec
inc
stc
popa
test
stos
das
sbb
fadds
jmp
outsl
negl
add
rcrl
das
ret
lcall
sbb
sarl
loope
mov
call
or
push
push
cwtl
push
cltd
fdivs
test
lds
mov
loope
mov
into
cmp
adcb
cs
or
jo
push
mov
jne
jecxz
out
cs
test
sarl
loopne
in
sbbb
xor
or
inc
jmp
out
icebp
mov
cmp
xchg
pop
shlb
push
clc
mov
bound
cmp
add
cld
lea
mov
mov
mov
lea
lock
mov
cmpsb
pop
cmp
cmp
loop
test
test
rol
fucom
dec
pusha
push
in
repnz
add
xchg
dec
mov
pushf
ret
icebp
ja
pop
stos
in
xchg
lcall
addb
scas
inc
mov
stos
sbb
and
fmulp
insl
lds
shll
stos
jmp
mov
mov
pushf
xchg
push
gs
mov
push
and
gs
push
movsl
cmpsl
push
hlt
enter
test
sbb
xor
or
aaa
pusha
popa
mov
xor
ffree
lret
ljmp
fstpt
inc
lds
imul
popa
push
inc
jnp
aas
or
mov
lds
lds
fidivrs
or
shll
lods
xor
jae
inc
xchg
push
int3
hlt
add
cmp
es
xor
push
push
inc
iret
test
mov
xor
fdivl
mov
and
xchg
movsl
das
push
daa
pop
not
pop
xor
pop
pop
sub
pop
mov
cmp
mov
push
lret
sbbb
mov
stc
pushf
dec
fdivl
or
cmp
stos
cmp
insb
xor
cmp
shll
fdivrs
push
pushf
ret
cmpsb
push
xor
push
insb
xlat
outsl
mov
push
loopne
cwtl
int
jle
and
in
movsl
cmpsb
cmp
dec
dec
push
and
mov
xor
inc
sub
jno
pop
shll
cltd
pop
mov
pop
ja
sub
frstor
insb
push
icebp
lahf
xorl
out
std
call
testb
test
mov
aaa
arpl
jecxz
mov
mov
jnp
enter
leave
pop
mov
and
fcmovu
gs
pop
in
pop
rorb
push
iret
xchg
cmpl
pop
jecxz
jge
pop
scas
cwtl
movsb
lea
out
cmp
mul
dec
sbb
shl
sub
pop
dec
mov
loope
pop
and
repnz
sbb
das
sbb
add
sbb
mov
add
bound
aas
mov
loope
lods
ja
das
adc
pop
shlb
and
mov
add
mov
repnz
scas
xchg
mov
sub
jne
sbb
mov
inc
in
inc
push
sub
jb
pushf
mov
cmp
shlb
fmull
loope
xchg
fs
pushf
clc
mov
ftst
push
je
mov
and
stos
notb
or
enter
addb
cmp
adc
jnp
cmp
mov
call
mov
dec
lods
or
xor
xchg
push
and
push
arpl
xchg
aaa
scas
movsl
daa
cli
mov
dec
cmc
sbb
stos
loopne
mov
xchg
xchg
push
lods
mov
mov
cmpsb
cmp
inc
scas
mov
out
mov
loope
xchg
leave
nop
cld
push
adc
fldcw
mov
movsl
or
aaa
add
shrl
outsb
dec
dec
lods
mov
jne
movsl
and
cmpsb
loop
cld
test
mov
mov
inc
jmp
mov
sbb
xchg
dec
push
daa
dec
in
push
fidivrs
push
je
lahf
xchg
or
dec
imul
adc
insb
and
lahf
lret
xor
popa
push
mov
mov
les
addr16
ss
jne
dec
pushl
pop
movsb
aas
push
fwait
jnp
jmp
add
rol
pop
mov
shll
sbb
jge
shlb
sbb
push
shrb
repz
js
push
andl
aad
pop
shlb
mov
adc
mov
stos
enter
int
push
sub
jno
add
xchg
fimuls
hlt
xchg
std
and
shlb
xor
sub
inc
mov
aam
mov
sbb
push
xchg
pop
mov
popf
cli
aad
repz
mov
pop
outsl
loope
ret
xchg
sbb
sub
insl
dec
push
cmc
xor
rcrl
sbb
xor
lock
movsb
popa
popa
or
repnz
jmp
testb
das
dec
es
pushf
xlat
dec
lods
jecxz
inc
stc
mov
jp
clc
lahf
adc
mov
adc
insb
repnz
imul
roll
fistl
ljmp
or
and
mov
lahf
lock
movsl
or
xchg
imul
push
inc
push
add
or
cmc
jno
pop
sbb
dec
inc
sahf
je
aaa
xchg
cmp
out
sub
loopne
addr16
jp
push
repz
dec
inc
dec
pop
or
daa
roll
aad
jae
in
int3
les
imul
inc
hlt
ss
mov
mov
repnz
fldl
scas
xorb
in
aam
mov
bound
shll
or
in
ljmp
in
and
test
popf
ds
push
xor
repnz
jb
xchg
xchg
xchg
sbb
xorl
dec
test
shrb
sahf
repnz
sub
jmp
mov
and
cli
add
pop
fwait
mov
imul
push
mov
cmpsb
inc
mov
sahf
cmp
mov
push
inc
rclb
jo
sahf
fnsave
mov
jns
mov
sbb
mov
xchg
mov
pop
or
sbb
mov
xchg
scas
or
rclb
jecxz
pop
push
and
fisubrl
jecxz
adcl
mov
mov
daa
sahf
mov
shrb
call
dec
repnz
cld
adc
outsb
ret
mov
nop
sbb
add
sbb
in
sbb
dec
sub
call
out
push
mov
sbb
inc
rcrb
roll
shll
sbb
js
mov
popa
aaa
mov
sbb
aas
ret
imull
lcall
pushf
cmpb
mov
and
popa
mov
out
xchg
aam
cmpsb
inc
icebp
shl
jmp
pop
nop
ret
xchg
and
push
pop
pop
pop
inc
popa
orl
xor
sbb
ret
daa
dec
fisubl
mov
and
rorb
cwtl
and
aad
adc
ret
aaa
js
cmp
dec
loopne
repnz
es
in
sbb
hlt
cmpsl
mov
aam
xlat
subl
pop
mov
or
mov
int3
xchg
push
into
xchg
ja
into
fldcw
or
sbb
add
pop
pop
inc
jp
sarb
rclb
xchg
imul
mov
daa
std
pop
aam
fsubrl
lcall
out
sbb
adc
pop
sbb
addr16
imul
in
loopne
push
xor
repnz
jmp
out
scas
test
xor
or
shl
adcl
push
testb
mov
jnp
rcll
xchg
aad
xorb
jle
ret
clc
or
les
jecxz
sbb
ds
scas
or
mov
and
push
cs
mov
mov
sbb
push
jle
dec
or
mov
stc
xchg
in
jmp
add
lcall
jb
jno
scas
adc
stc
push
int
icebp
cmp
jnp
jmp
inc
push
stos
xor
lods
cmp
mov
mov
xor
sub
cmpsb
fisubrl
sub
outsb
mov
fxch
in
push
call
jne
in
or
push
les
lods
addr16
xor
adc
enter
jb
push
xchg
jno
js
inc
or
mov
aad
cwtl
imul
ljmp
scas
mov
cmp
adc
lahf
adc
mov
cmpsb
cmp
jae
nop
xchg
xchg
lahf
xchg
add
push
dec
aam
leave
sbb
sub
xchg
pusha
inc
mov
lcall
adc
fwait
mov
jcxz
fimull
and
or
sbb
mov
fisttps
inc
ret
in
inc
cmp
subl
mov
repnz
mul
cmpsb
popa
mov
nop
loope
stos
xchg
dec
lods
or
rcrl
mov
aas
scas
fildll
mov
mov
inc
sub
repnz
jmp
adc
adc
int
pop
mov
ret
mov
lds
sub
pop
repz
push
in
or
mov
xchg
mov
mov
cmp
cmp
add
lcall
bound
in
jecxz
test
outsb
stos
adc
push
xchg
rclb
gs
shll
push
sbb
inc
sahf
stc
shrl
outsl
mov
popa
xchg
mov
pop
pop
dec
daa
roll
push
loope
outsb
dec
lds
inc
cld
leave
jns
repnz
lods
xor
mov
test
scas
or
outsl
fdivr
cmp
mov
xor
je
and
arpl
jo
fwait
jg
xor
or
cld
cmp
jl
rcl
scas
fwait
shll
jae
push
jae
mov
push
mov
cmp
cmp
ds
mov
aaa
ja
xchg
or
xchg
and
adc
dec
jmp
pop
adc
scas
repnz
sbbb
inc
sub
jp
outsb
adc
fs
mov
aam
aad
test
loop
sbb
gs
sbb
fidivrs
mov
in
int
add
rorb
cmpsl
addl
ret
inc
sub
icebp
dec
or
add
sbbl
enter
mov
xor
cwtl
mov
jecxz
sbbb
addr16
mov
aas
xchg
leave
xor
bound
mul
jp
stos
sbb
adc
aaa
mov
psubusb
mov
das
and
aaa
outsb
or
js
sbb
mov
xchg
add
add
inc
jl
push
xor
sub
int
sub
dec
or
std
roll
sar
stc
add
adc
cli
and
pop
add
stc
mov
mov
cltd
add
out
xorb
adc
jnp
incl
push
mov
addr16
sbb
lods
faddp
mov
hlt
loopne
repz
sbb
test
xor
inc
fiaddl
lahf
ss
int3
jb
test
xchg
cmpb
xor
nop
loopne
repz
fsubrl
mov
pop
testb
adc
push
cmpsb
inc
sti
in
add
sarl
sbb
das
sbb
push
xchg
jae
xchg
int3
jle
scas
xor
nop
dec
fmull
or
pop
xchg
pop
rorb
repz
roll
popa
cmp
dec
pop
sub
aaa
inc
ss
rcrl
imul
xor
jge
mov
aad
fcompl
arpl
fwait
rorl
mov
dec
in
jne
bound
or
fwait
inc
iret
cs
and
and
aaa
push
sti
ficoms
add
dec
lret
cmp
sub
sub
and
mov
mov
inc
adc
and
cmpsl
mov
lahf
aad
jmp
xchg
push
xchg
xchg
sub
add
jmp
arpl
hlt
xor
adc
lds
jb
testl
sarb
mov
push
aaa
add
fisubrs
sbb
sub
sti
sbb
addl
out
je
cmp
mov
pusha
xchg
andl
ja
cmp
xchg
push
jne
loopne
xor
mov
fidivrl
cmpsl
pop
stc
filds
mov
adc
xor
lret
cmpsl
mov
jp
add
add
jmp
bound
xor
shll
imul
call
dec
aas
scas
ret
mov
stos
movsb
shll
and
jae
jb
push
pusha
cli
mov
cltd
cmp
movsl
mov
aam
repnz
add
sti
dec
push
or
ret
mov
jno
jmp
loop
ret
lcall
ja
dec
es
fidivl
push
out
sbb
adc
push
in
negb
aad
int3
fildl
jns
stc
or
mov
iret
cmp
pop
cmpsb
call
shll
insb
mov
pop
pushf
aas
lock
pop
rclb
insl
cli
dec
cmpsl
daa
and
jbe
insb
imul
pop
mov
gs
cwtl
aas
pextrw
inc
into
ss
sbb
cmp
nop
pop
push
xchg
mov
aaa
push
xor
jmp
or
xchg
notl
fwait
or
les
shl
pop
lret
jae
jl
add
sbb
xor
push
fadd
inc
and
fiaddl
aad
mov
xor
rcrl
mov
daa
mov
push
loop
mov
stc
shl
stos
cmp
dec
pop
xor
cmp
in
jno
or
xchg
and
inc
in
jp
ja
dec
fistl
cwtl
aas
es
sbb
sub
pushf
movsl
cmp
jae
jne
cmp
outsb
scas
clc
xchg
adc
in
xor
outsl
std
add
push
mull
add
faddl
mov
jb
and
test
jae
add
bnd
xor
sti
adc
adc
rclb
adc
subl
dec
int
pushf
mov
jle
test
inc
loopne
mov
scas
dec
loopne
cmpsb
jle
mov
ret
jmp
cltd
mov
ss
insb
mov
leave
add
data16
jge
xor
mov
jle
xchg
pop
loopne
mov
stos
mov
jno
mov
mov
lods
enter
shll
scas
fdivrl
dec
pop
les
jl
jmp
inc
int3
jne
gs
outsl
xor
mov
into
shl
adc
mov
push
dec
push
rol
or
hlt
pop
repnz
lds
mov
daa
pop
mov
call
pop
cmpsb
shrl
mov
push
push
rcrb
test
cmpsl
push
cmc
rcr
pop
xchg
lea
ljmp
mov
jno
lahf
andl
pop
adc
mov
mov
inc
sub
pop
fstl
jecxz
dec
nop
pushf
and
in
push
faddl
pop
xchg
and
pop
xor
sbb
sti
imul
clc
shrb
and
test
dec
fisttpll
and
stos
dec
add
cmp
lods
pop
adc
aam
outsb
xor
mov
dec
xchg
jae
ss
xchg
jmp
aas
lahf
cmc
jno
cmpb
inc
ja
xchg
cmp
rol
sbbb
fiaddl
into
xor
rolb
and
dec
fdivl
sbb
mov
jb
outsl
stc
cmp
sarl
cli
mov
cmpsb
cmp
mov
lret
push
clc
or
sub
mov
or
or
push
inc
and
ror
or
xor
adc
pop
or
jmp
adc
jne
jne
jg
cltd
or
mov
jno
cmp
xchg
data16
insb
inc
mov
or
adc
sbb
push
or
lock
cmp
movsb
xor
frstor
repz
mov
jecxz
test
lret
mov
dec
lret
mov
fcompl
addl
rorl
nop
xchg
jne
mov
xor
fistl
outsb
les
or
test
mov
dec
lret
or
push
pop
jnp
cmpsb
xor
sub
lea
mulb
add
adc
fdivp
xor
ljmp
bound
frstor
repnz
pop
and
xchg
sbb
movsb
imul
sbb
jne
mov
gs
xor
mov
sbb
mov
xor
pop
jmp
cmpsb
sbbb
push
jp
lret
es
lret
bound
gs
imul
adc
out
sub
loopne
cmp
scas
lds
inc
into
mov
test
jmp
inc
cld
cmpsb
in
adc
rorb
mov
pop
shlb
xchg
enter
and
push
mov
and
mov
iret
fldenv
push
xchg
dec
push
and
push
push
add
dec
ss
scas
push
mov
mov
stos
xor
pop
icebp
repnz
ss
call
xor
lret
outsb
dec
push
or
adc
fmul
fdivl
xor
stos
mov
add
adc
sub
adc
mov
fsubrl
mov
dec
xor
icebp
push
jmp
push
xlat
js
mov
imul
std
test
mov
inc
testb
or
cmpsb
lahf
ds
test
jge
clc
adc
xor
and
shrb
sahf
mov
push
xchg
add
movb
pusha
hlt
loop
pop
fadds
stos
shlb
sbb
xchg
inc
fistps
push
mov
sbb
adc
xor
stos
cmp
push
outsb
jnp
add
cmpsb
icebp
inc
nop
jg
in
stos
mov
cmp
fwait
mov
adc
or
xor
repnz
sbb
adc
pusha
rorl
je
sub
mov
pop
daa
out
mov
roll
and
imul
jg
dec
or
je
es
mov
pop
mov
lret
add
rcrl
aas
in
sub
adc
mov
sbb
lea
xchg
push
sub
imul
jl
shl
lods
xor
pusha
sub
inc
call
inc
or
pop
sahf
cmp
aam
xor
lret
sub
clc
dec
pop
sbb
imul
push
scas
mov
mov
inc
mov
jns
push
test
call
xchg
fistpl
les
pop
jo
xor
xor
sti
leave
or
mov
sub
push
sbb
pop
lods
insb
add
ds
or
lds
xlat
dec
and
rclb
and
inc
cli
pop
and
repnz
in
sub
sub
and
ficompl
ficoml
xor
add
pop
sti
xchg
cmpb
testl
cmp
into
add
cmp
sub
inc
icebp
lds
lods
add
btr
js
mov
outsl
inc
mov
lea
sub
pop
out
test
xchg
outsl
mov
in
inc
ds
or
ljmp
aad
and
mov
movsb
jl
mov
mov
lds
pop
jle
jmp
mov
adc
xor
pop
in
insl
xchg
xchg
test
inc
ss
test
cwtl
clc
stos
inc
jae
jle
mov
mov
shll
inc
je
push
pop
dec
push
and
and
cmc
imull
cwtl
js
mov
or
and
sub
mov
notl
pop
xchg
push
rorb
arpl
jne
fwait
pop
repz
sub
mov
fcomp
clc
jmp
mov
je
inc
add
add
push
gs
push
jno
inc
lock
pop
decl
lret
xor
repnz
fsubl
rclb
dec
mov
lcall
or
out
mov
xchg
mov
mov
stos
mov
data16
pop
bound
mov
cmp
fs
lock
or
enter
std
out
jnp
iret
xchg
mov
dec
bound
xchg
mov
or
leave
sub
sahf
push
jno
cmpsl
cli
and
ljmp
ret
sahf
in
xchg
ja
mov
nop
push
mov
in
sbb
fmul
lods
sbb
xchg
imul
jnp
loopne
add
push
lcall
cmpsl
lock
push
dec
arpl
nop
int3
das
add
xchg
cld
mov
test
mov
lcall
xchg
and
scas
pop
int
xor
or
int3
test
and
pop
lea
push
cmpsb
les
scas
ja
sbb
pushf
lods
paddsb
cs
adc
shll
mov
mov
adc
mov
pop
xlat
cmp
mov
in
adc
dec
roll
cmc
push
mov
andb
jns
mov
inc
movsb
stos
xor
test
std
jae
mov
jge
outsb
or
sbb
xchg
xchg
jmp
push
or
add
in
pushf
in
inc
jb
bnd
mov
jge
inc
xchg
pop
push
pop
push
sub
movsl
cmp
xchg
imul
stc
sarl
jbe
mov
outsb
or
xchg
rorl
fimuls
repnz
push
addb
mov
incb
adc
loop
mov
sub
es
or
sbb
movsl
push
lea
stos
inc
jle
sub
xchg
rcl
inc
outsb
roll
pop
stc
cmp
lcall
dec
inc
pop
xchg
rorl
dec
rol
ss
sbb
in
call
xor
decl
cmc
jl
js
push
outsb
les
aas
in
sub
cmp
shr
or
mov
loop
fs
mov
addr16
pop
xchg
inc
test
inc
popf
ret
ds
out
je
clc
xor
in
mov
sahf
addl
mov
or
and
stos
sub
arpl
sahf
mov
xchg
pop
dec
sub
add
ss
shr
ljmp
stos
test
shll
sarb
loopne
ret
push
cmpsl
loope
pop
clc
xor
jmp
subb
rol
bound
test
cld
adcl
and
int
neg
data16
add
xchg
ljmp
push
incb
xlat
push
arpl
mov
jno
xor
or
push
loop
rorl
and
pusha
pop
sarb
