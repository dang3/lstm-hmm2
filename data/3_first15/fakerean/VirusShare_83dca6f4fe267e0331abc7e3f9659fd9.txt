sbb
add
outsb
cmp
faddl
test
sti
xchg
arpl
cmp
bound
outsl
enter
bnd
xchg
test
nop
fucomip
imul
jne
dec
repz
movsb
sbbl
bnd
xorl
mov
pop
xor
clc
test
push
outsl
jno
dec
push
and
lds
in
lahf
dec
add
lea
adc
adc
xchg
mov
loop
repz
push
aaa
or
dec
aaa
mov
sbb
xchg
or
cmp
scas
lret
sbb
jo
jg
pop
sub
bound
xor
div
fsubl
mov
mov
sbb
aas
mov
jb
xchg
push
out
lret
pop
xchg
push
push
or
xchg
mov
scas
pushf
hlt
adc
jbe
cwtl
cmpsb
sub
dec
push
jg
inc
dec
orb
flds
xchg
push
add
aam
jnp
sub
mov
pop
mov
int3
mov
adc
cwtl
fcmovnu
sarl
pushf
and
or
lret
push
pop
cmp
xchg
adc
stos
bound
add
xchg
ret
or
mov
shl
paddw
in
rcl
sbb
inc
movsl
cmp
inc
mov
push
mov
repz
arpl
ljmp
or
adc
mov
jae
call
in
lds
or
stos
pusha
xorl
add
bound
pop
test
dec
mov
pop
fwait
gs
mov
das
cld
mov
jecxz
cltd
add
outsl
fdivl
mov
dec
sub
mov
mov
or
cmpsl
pop
xor
in
cmp
pop
lahf
pop
mov
data16
pop
cs
pop
adc
cmpsl
rcrl
and
movsl
pop
pop
and
jg
pop
xchg
in
mov
mov
xor
std
je
sub
sub
push
xor
outsl
cmpl
push
and
jg
lock
test
dec
dec
jle
xchg
ret
icebp
xor
add
test
xchg
jge
mov
mov
jne
jbe
push
push
call
mov
or
mov
inc
scas
and
in
dec
xchg
xlat
movsb
cmpsl
ret
adc
orl
inc
cs
sbb
notl
mov
imul
adc
arpl
lods
lret
rolb
popa
sarl
test
or
imul
xlat
imul
incl
push
jne
dec
stc
lcall
in
sti
push
outsb
xor
fcmovbe
sbb
push
inc
mov
mov
lods
mov
popf
adc
add
out
shl
push
notb
push
jo
pop
push
dec
push
je
xchg
cs
and
test
rcll
rcrl
jle
fdiv
addr16
xor
out
subb
jp
cmpsb
mov
ss
cltd
shlb
btc
arpl
mov
mov
cmpsb
inc
or
push
lahf
mov
or
cmp
aad
clc
pop
mov
xor
inc
sbb
mov
mov
mov
loopne
fidivl
lahf
mov
fsubrp
hlt
and
divl
pop
sar
xor
test
jno,pn
shll
mov
mov
xor
or
mov
enter
mov
inc
in
pop
sbb
lret
pop
xchg
or
push
notl
adc
jb
mov
push
cmp
adc
xor
and
push
sub
xchg
loop
push
pop
nop
jae
sbbl
jge
and
sub
inc
mov
fisubrl
pushf
cmpl
movsl
adc
or
js
mov
sub
mov
pop
mul
lds
xorb
jecxz
sbb
loope
cli
or
xchg
jl
sub
push
sub
pop
inc
mov
fisttpll
jecxz
das
dec
into
enter
nop
pop
sub
and
add
jno
out
push
jge
loopne
popf
loopne
xchg
jno
and
lods
mov
mov
mov
shr
addr16
add
and
push
cmc
push
adc
lcall
inc
or
push
mov
mov
sbb
jge
cmp
popa
mov
clc
xlat
mov
mov
std
loop
sbb
icebp
add
and
out
icebp
pop
dec
mov
and
fisttpll
add
adc
xor
daa
mov
jge
int3
mov
lods
bound
inc
rcll
sub
shl
or
stos
clc
or
fimull
mov
scas
jne
add
mov
arpl
sub
ret
imul
je
test
pop
lahf
cmp
mov
dec
lret
and
jns
fcomip
mov
inc
inc
popa
cli
sub
bound
out
subl
ja
push
dec
sub
in
and
xchg
fimuls
xchg
jne
sub
pop
cli
pop
inc
jmp
mov
dec
ljmp
mov
lods
mov
out
mov
sub
mov
or
pop
das
inc
jmp
pop
data16
repnz
jp
fcompl
fmulp
push
adc
and
imul
enter
fs
mov
bound
inc
sub
js
leave
xor
sub
or
mov
jns
lods
dec
iret
pop
xchg
dec
mov
or
inc
clc
add
fcmovnu
out
xor
xchg
mov
jno
out
inc
psrlq
call
stc
mov
stc
jle
inc
dec
mov
xchg
mov
mov
loopne
fs
lcall
xor
push
in
sub
mov
push
mov
xor
pop
movb
movsl
pusha
jp
out
sub
sub
sbb
mov
cmp
fidivrs
add
sub
ja
jo
sbbb
sub
xlat
int3
andb
cmc
push
xchg
push
out
jb
fwait
mov
gs
jge
in
jno
idivb
pop
push
bound
xchg
cmp
sti
add
lret
ss
cmc
cmp
xchg
cmpsb
add
adc
mov
mov
add
dec
cmpb
js
enter
je
rcrl
hlt
pop
decl
add
or
sarl
push
mov
mov
nop
cmp
jno
dec
rorl
jp
clc
mov
dec
push
pop
xor
jecxz
mov
fisubrs
push
xchg
inc
or
jmp
xchg
insl
or
int3
rcrb
jno
xchg
mov
xchg
jnp
push
lret
daa
pusha
xchg
cmp
paddb
cmp
sar
icebp
out
jbe
aaa
sub
shlb
jle
jns
mov
cmp
jmp
mov
sahf
mov
ljmp
rcrl
sub
and
mov
xchg
ds
or
imul
lcall
xor
movsl
lock
orb
jnp
jbe
push
mov
aaa
mov
outsl
xor
mov
xchg
add
sti
scas
call
add
insl
sub
cmp
jae
imul
test
es
xor
mov
jmp
insb
sbb
mov
out
push
xchg
cmpb
cmpsb
mov
adc
leave
and
movsl
mov
cmc
sbb
ret
xchg
addr16
rcr
js
repnz
inc
lods
notb
cmp
scas
adc
cmp
add
testl
mov
push
dec
dec
dec
or
incl
mov
cltd
jp
push
mov
xor
mov
test
inc
jl
in
aaa
push
or
fcoms
test
faddl
and
mov
add
and
cltd
dec
sbb
icebp
mov
push
leave
lcall
inc
jl
push
daa
mov
xchg
inc
and
jbe
movsb
jg
push
inc
xchg
pop
mov
idivl
and
or
fs
xchg
mov
shl
sahf
mov
lock
push
or
int3
lods
jne
sub
xor
dec
mov
movsb
jg
push
aaa
ret
outsl
stc
ret
push
jno
sub
add
popf
icebp
and
sub
aaa
sub
xlat
mov
decl
lahf
xchg
or
xchg
into
int
orl
jge
jno
sub
sub
arpl
mov
nop
cltd
int3
sarl
cld
js
pop
pop
and
ja
push
push
loope
push
inc
jg
sarl
push
popa
fmuls
mov
push
mov
aad
fisubrl
adc
inc
bound
xchg
sbb
dec
and
push
lods
cmp
sahf
aas
mov
aas
add
call
cmp
movsl
rol
fdiv
xchg
or
mov
cmpsl
push
stos
lcall
mov
pusha
jo
or
or
lret
or
xchg
roll
xor
pop
aas
mov
jbe
aam
int3
jg
dec
pop
xor
in
notb
movsb
xchg
jle
lods
jb
xor
dec
test
xor
jmp
dec
cli
insb
fbstp
and
cmp
aam
sub
and
xchg
pushf
test
outsl
dec
mov
xor
dec
les
ja
inc
dec
cmp
dec
andl
ja
mov
xchg
rcrb
in
inc
adc
orb
mov
enter
sar
loopne
dec
lds
jp
push
xchg
inc
push
sbb
push
sub
mov
mov
lods
je
sbb
inc
sub
movl
or
scas
shlb
xor
cltd
and
xchg
sti
xor
out
insl
arpl
xor
movsb
test
test
bound
xor
sub
or
xor
mov
fisubl
xchg
stos
dec
inc
ficoml
je
mov
mov
and
and
arpl
push
out
cmp
enter
ror
xchg
pop
fwait
test
jb
xor
stos
xor
adc
or
adc
callw
test
lods
sub
dec
dec
jge
push
xor
xor
lds
xchg
insb
mov
aad
xchg
subb
cmc
pop
popa
inc
outsl
mov
xor
ljmp
in
mov
imul
movsb
mov
icebp
jbe
dec
iret
test
lret
mov
inc
sub
xchg
jge
mov
shrl
das
ja
shlb
push
mov
repnz
out
outsl
in
add
push
stc
push
js
xlat
stc
iret
add
push
fists
xor
adc
lods
push
xchg
jb
ljmp
mov
xchg
mov
and
test
and
nop
in
std
aad
inc
mov
jp
mov
jmp
lret
dec
fcoms
mov
in
mul
fucomip
imul
mov
adc
fcmovu
xchg
jbe
xor
xchg
je
xor
jo
or
data16
and
adc
cmpsl
lds
mov
addl
pop
mov
rcll
lds
enter
cmp
sbb
jns
mov
or
xchg
xchg
lods
xor
cmp
pop
int
sahf
xchg
inc
cld
sti
mov
out
ret
out
jecxz
ficoml
sub
cmp
jmp
out
adc
int
jae
xor
xchg
jecxz
cwtl
out
mov
mov
lea
mov
pop
aad
repz
pusha
repz
lods
cmp
jo
lds
dec
mov
insl
ss
mov
sub
out
fcoms
adc
push
xor
push
lcall
sar
or
lods
insl
mov
sub
pop
xchg
mov
movsl
bound
mov
cwtl
adc
dec
dec
sub
stos
lea
pop
adc
push
stos
dec
negb
push
cmp
jne
pop
mov
stos
lcall
fsubs
mov
hlt
xor
in
stos
in
loopne
leave
mov
in
es
add
mov
stos
and
arpl
mov
subb
fisttpl
cwtl
xchg
cmpsl
xchg
fisttps
repz
lahf
push
in
cld
test
dec
pop
push
gs
popf
stc
fs
inc
xchg
clc
stc
or
addb
pop
daa
pop
gs
inc
or
mov
and
je
mov
push
bound
jmp
inc
inc
or
daa
fwait
and
aad
dec
push
jmp
inc
sub
sti
int
sti
add
fisubrs
lock
push
lret
or
sbb
aam
insb
jne
shrl
sbb
inc
mov
loop
rcll
mov
call
jmp
shll
xorl
jp
jge
inc
in
fsub
fucomi
lods
pusha
movsl
xchg
mov
mov
scas
lret
scas
add
add
xor
push
shll
cmpsl
inc
xchg
dec
ljmp
add
fwait
add
pop
rolb
imul
loop
push
sub
xor
das
adc
ficompl
out
adcb
cli
rcrl
or
icebp
dec
jnp
fcmovu
adc
or
inc
aad
jo
aad
mov
insl
sbb
sbb
push
cmc
insb
push
fwait
roll
jg
insb
jae
ror
fisttpl
test
add
shlb
sahf
and
jns
popa
mov
adc
inc
mov
mov
mov
mov
mov
jge
icebp
jp
xchg
dec
mov
sbb
dec
bound
add
adc
mov
std
dec
fnstenv
mov
mov
pop
rorl
adc
xchg
rcll
cmp
cmp
clc
mov
and
pop
lock
scas
out
add
jbe
test
pop
lea
repnz
aad
loope
jb
inc
adc
jl
xor
inc
jg
cs
dec
das
fadds
jp
test
cmpsl
xor
dec
mov
jb
jae
xor
cmc
out
insb
mov
lcall
and
xor
stc
imul
adc
lds
mov
pop
push
dec
cmc
sub
cmp
imul
insb
push
or
wbinvd
xchg
xor
mov
loop
adc
dec
aam
daa
cmp
push
das
rcrb
xchg
stos
lods
stc
sbb
or
jae
clc
adc
int3
jno
xchg
and
pushf
addr16
pushf
sub
pop
stc
inc
inc
ficoml
decl
and
fwait
rcrb
ficoms
jbe
sub
mov
jge
mov
sahf
daa
mov
jae
jbe
jno
add
mov
pop
mov
sub
or
nop
testl
inc
rcrb
stos
out
insb
mov
xchg
adc
leave
mov
jl
cmp
cltd
jne
mov
lods
or
pop
int
fmuls
idivb
or
lods
jmp
ljmp
in
lock
jg
mov
jge
in
adc
or
cmp
pop
mov
pop
mov
sub
lret
jmp
inc
imul
lods
addr16
insl
aas
cmp
add
in
and
mov
pop
pushf
sarb
dec
mov
xor
cwtl
mov
xor
pop
cli
pop
inc
dec
roll
popl
gs
lock
outsb
movsl
adc
sti
cmp
aad
daa
push
popa
xchg
inc
mov
hlt
and
push
push
push
out
cmp
push
repnz
out
cmp
jecxz
add
das
pop
lret
test
fisttpl
mov
jbe
gs
push
ret
sub
iret
test
dec
fwait
sbb
add
popa
ljmp
ljmp
sbb
fprem
stos
pop
push
push
dec
movsl
xorl
rcrb
rcpps
outsb
push
xor
mov
std
pop
in
lods
sub
insb
stos
ds
mov
lahf
sti
dec
mov
sub
pop
xchg
lods
insb
shlb
xor
mov
and
dec
add
mov
fcompl
mov
mov
rolb
cmp
and
insl
int
outsb
add
orl
movsl
mov
mov
push
inc
rcrl
inc
xlat
cmp
pop
adc
or
inc
mov
cmp
sub
and
mov
push
jmp
push
jo
jb
insb
adc
fdivrl
mov
not
push
stos
push
adc
out
test
daa
leave
aas
xchg
into
imul
mov
pop
nop
push
pop
js
cmp
mov
push
xchg
dec
int3
or
jp
aad
xor
cwtl
add
pushf
push
xchg
cmpsl
mov
out
jae
jge
and
xchg
or
movsb
ljmp
xor
int
call
out
or
hlt
jle
jno
inc
xor
or
sbb
pop
mov
enter
mov
imul
jle
adc
lcall
out
test
in
and
xchg
cld
xor
pop
clc
sbb
icebp
sub
mov
fcomi
push
cmpsb
xchg
jns
jmp
hlt
push
insl
fistl
fidivrs
cmc
out
xchg
arpl
pop
arpl
cwtl
pop
divb
aaa
pusha
test
movsl
mov
push
loop
es
out
cwtl
incb
scas
es
ror
adc
fildl
mov
rcr
adc
negb
xor
std
mov
int
and
xchg
shlb
movsl
iret
inc
fucomp
ljmp
xchg
push
inc
xorb
jg
xor
lods
push
adc
pop
jge
cld
test
dec
sub
arpl
cmc
sbb
jg
test
jno
inc
sahf
pop
sub
orl
xchg
add
fiaddl
pop
mov
cli
and
out
or
clc
in
push
push
cltd
inc
and
jle
shrb
sub
enter
repnz
test
pusha
pop
push
cwtl
pop
xchg
cwtl
scas
ss
arpl
mov
hlt
out
movsb
test
add
pop
stos
ret
jle
dec
add
fwait
sbb
scas
or
dec
scas
cmpsl
sub
cmp
cmp
std
jnp
negl
mov
xchg
lods
mov
jns
sub
push
xchg
mov
scas
jbe
mov
or
dec
mov
xchg
fucomi
push
push
push
aas
iret
cmc
aam
je
mov
dec
mov
cwtl
test
dec
xchg
push
xchg
jns
jo
aad
xor
outsl
enter
mov
int3
add
mov
rclb
xor
jbe
sti
mov
outsb
repz
or
jmp
psubsb
mov
add
jb
scas
stc
in
lock
xchg
mov
out
mov
scas
and
mov
cld
jae
call
mov
inc
mov
mov
rorl
add
cltd
mov
rclb
jp
out
sbb
sub
push
mov
inc
fwait
xor
dec
xor
xchg
jbe
push
push
add
and
mov
dec
fsub
push
clc
xchg
push
leave
add
sub
dec
sbb
sahf
sub
hlt
inc
fwait
xor
sbb
inc
push
inc
pop
add
out
loopne
mov
movsb
xchg
or
out
rcr
dec
pop
dec
or
repnz
dec
cmpsl
cwtl
popa
or
sub
div
and
pushf
add
addl
pop
lods
shlb
xchg
push
loop
add
cwtl
inc
js
out
sub
addl
and
pop
pop
fs
addr16
mov
out
out
insb
sbb
outsl
mov
aaa
sbb
or
push
and
into
add
jnp
mov
cwtl
loope
movsb
les
sub
xchg
imul
rcrb
fsubrs
sub
mov
int
push
cmovl
xchg
xor
into
mov
andl
in
push
icebp
inc
leave
pop
stc
add
xor
les
xor
testl
cltd
stc
dec
or
sbb
cwtl
sub
cs
out
adc
push
out
ljmp
push
imul
or
push
loope
push
push
add
imul
or
in
inc
jns
mov
mov
repz
int3
fistl
into
cwtl
pushf
mov
push
cmc
nop
testb
adc
pop
cmp
jns
or
je
popl
jg
int
and
jl
mov
push
adc
mov
xchg
out
enter
rorb
jno
cmp
jno
sbb
leave
sub
into
rolb
and
stc
call
inc
addr16
add
fwait
popf
testl
sbb
aas
icebp
dec
orb
inc
mov
jge
mov
mov
bound
scas
mov
mov
sub
xor
xchg
pusha
cld
ja
mov
dec
mov
fmull
push
cmp
sbb
cld
dec
fstpt
cmp
xor
jns
cltd
dec
and
push
mov
jmp
xor
add
jmp
push
cmp
lret
iret
lret
jne
xor
aaa
packsswb
sub
mov
mov
dec
iret
scas
push
rorl
test
jnp
ret
out
adc
test
outsb
or
in
dec
scas
inc
mov
add
movsb
ljmp
xchg
add
xor
or
pop
jmp
xor
cmpsb
pop
addr16
dec
push
loope
icebp
xchg
sti
xchg
out
imul
xchg
ljmp
sbb
btr
xor
arpl
push
lahf
rcll
sub
mov
cld
push
std
add
ds
cmp
lea
leave
jmp
mov
push
enter
xor
je
lods
or
arpl
mov
push
ficoml
lret
sbb
or
jge
push
xchg
pop
xchg
xchg
test
mov
pop
mov
pop
dec
mov
dec
scas
in
pushf
scas
jno
sub
cltd
mov
sbb
jp
aad
xorb
ret
pusha
outsb
leave
shlb
gs
mull
sahf
imul
pop
or
or
add
xor
test
movsl
mov
movsb
push
mov
repnz
or
pop
or
stos
push
or
sub
mov
mov
xchg
cmp
sub
dec
decb
cmp
fbld
push
adc
into
hlt
lea
ret
mov
mov
mov
inc
mov
inc
and
ds
test
xlat
sbb
push
sbb
cmp
cwtl
cld
movsl
push
add
mov
jb
sub
cmp
outsl
jecxz
in
lea
ja
jo
cmp
jecxz
test
hlt
fidivs
repnz
scas
sub
cltd
rcrb
pop
mov
das
mulb
cli
sbb
ljmp
mov
test
call
sub
jno
push
dec
jle
adcb
cmp
roll
and
cltd
scas
sbbb
or
pop
mov
and
test
sbb
arpl
inc
and
pop
lods
dec
mov
xor
adc
mov
lock
in
fidivrs
cmp
mov
cmp
mov
leave
sub
or
cltd
leave
ret
lods
push
sti
pop
sbb
cmpb
js
ret
cmp
push
aaa
adc
xor
push
notl
xchg
or
add
jne
mov
js
push
mov
xchg
pop
shlb
xchg
push
jecxz
push
dec
push
xor
sbb
outsb
loope
pop
hlt
sbb
in
es
push
mov
xor
jbe
and
lds
jns
pusha
testb
mov
mov
inc
mov
cmp
push
jno
xchg
orb
mov
arpl
xchg
gs
loope
stos
cli
dec
enter
lcall
mov
out
mov
sbb
xchg
inc
mov
jne
mov
adc
scas
mov
sbb
adc
sub
jg
sti
pusha
sahf
hlt
fwait
mov
rorl
aas
sbb
fdivr
and
ja
jbe
cmp
sbb
in
push
and
je
dec
lea
jns
aaa
imul
or
push
xchg
icebp
testl
sbb
sahf
fxch
rcll
jns
add
push
cwtl
and
lock
xlat
dec
mov
sub
pop
dec
int3
jbe
push
xchg
lret
test
adc
fisttpll
mov
pmuludq
mov
mov
testb
insl
jg
ljmp
lea
leave
xchg
xchg
push
adc
mov
adc
dec
mov
push
jge
js
xchg
mov
or
and
mov
inc
adc
out
out
push
faddp
ljmp
das
out
jne
popf
jnp
push
pusha
xor
and
lds
xlat
fcoml
mov
fisttpll
pop
cwtl
push
gs
mov
pop
scas
call
lahf
adc
popf
cmp
insb
pusha
out
imul
or
sbb
inc
arpl
xchg
addl
ficoml
dec
xor
insl
stos
xchg
movups
les
add
subl
sti
in
cmp
add
js
pop
lods
sub
scas
mov
test
negl
xor
sbb
push
adc
jns
arpl
addr16
notl
pop
xor
fisubrs
lret
jae
lahf
push
dec
outsb
sub
sbb
hlt
pop
and
xchg
or
int3
mov
mov
mov
cltd
mov
notl
je
and
cmp
xor
mov
jo
pop
in
dec
dec
lret
add
xor
jecxz
xchg
bound
outsl
orb
lds
nop
sbb
xor
mov
in
adc
mov
je
std
adc
into
jg
pushw
inc
or
xchg
cmpb
jb
push
push
repz
nop
call
add
sahf
mov
xchg
mov
mov
pop
mov
gs
push
push
outsl
call
mov
xchg
pop
pop
and
lahf
inc
cmp
enter
loope
or
loopne
cwtl
mov
scas
jbe
mov
jns
mov
decl
shrb
and
mov
jl
inc
jbe
mov
add
push
sub
mov
sub
xchg
lds
mov
push
jb
cmc
lea
mov
iret
cli
cmc
outsl
xlat
pop
fisubrs
outsb
dec
inc
fucomp
cmp
mov
stos
jl
ret
mov
adc
cmp
ja
sarb
inc
lods
dec
fs
sbb
pop
lret
adc
jmp
dec
movsb
bnd
fcomps
dec
rcrb
push
sub
testl
add
jae
lock
jae
outsl
sbb
les
xchg
dec
inc
jge
mov
dec
movsb
mov
scas
mov
mov
cs
adc
in
and
mov
adcl
dec
in
mov
fcmove
movsb
lcall
add
mov
jecxz
test
data16
sbb
bound
mov
out
pop
loopne
mov
adc
popf
jo
in
or
std
xchg
add
divb
push
jmp
ret
stc
cmp
xchg
pusha
clc
dec
enter
pop
xchg
sbbl
xor
out
pop
movsb
dec
inc
loope
stos
push
fbstp
pop
ds
and
pop
mov
sub
jmp
insb
jmp
mov
dec
outsl
jmp
lahf
lret
lods
sbb
fsin
out
mov
aad
hlt
ret
nop
outsl
sbb
push
jg
enter
jo
in
enter
out
insb
dec
sbb
std
daa
pop
pop
mov
fisttpl
sti
je
mov
sbb
inc
addr16
icebp
lret
mov
xchg
jecxz
orl
outsl
fldl
lret
fisttpll
daa
addb
inc
xor
lds
insb
shrl
adc
movsb
es
pop
add
lods
inc
call
fidivl
imul
int
add
lret
fmul
sub
cmp
leave
dec
insl
fwait
jnp
pop
push
js
outsb
and
sbb
movsb
scas
sub
jbe
stos
sub
sbb
cmp
shll
add
add
mov
scas
inc
jns
loop
or
js
dec
inc
mov
outsl
pusha
std
and
pop
mov
xor
stos
cmp
jmp
fcmovbe
and
and
jecxz
sbb
scas
lock
mov
notb
push
les
xchg
shl
push
popa
add
inc
mov
push
stos
insb
xchg
fisubs
mov
mov
jae
lods
jecxz
hlt
pop
xchg
fcmovne
aas
inc
xor
push
and
jae
pop
cli
in
or
xor
push
ss
xor
sub
mov
mov
xor
in
jp,pn
test
push
lret
test
or
push
pop
jnp
jl
xchg
stc
mov
dec
clc
sbb
lods
pmulhuw
je
add
push
push
sub
lret
das
sti
xor
add
xchg
lret
mov
cmc
pushf
and
andl
in
xor
shr
dec
sbb
test
xchg
push
dec
les
sub
add
notb
jmp
lds
lods
jmp
jle
aaa
arpl
inc
sbb
pop
icebp
das
fdivrl
test
subl
cmc
inc
popf
adc
fs
repz
mov
pop
pop
pop
mov
adc
jnp
and
imul
sbb
xchg
bound
les
loopne
test
push
xchg
roll
push
mov
loop
hlt
into
push
andb
add
mov
jnp
mov
aaa
adc
imul
and
mov
imul
ret
adc
shrb
popa
fwait
push
movsb
pushf
mov
shrl
insb
mov
dec
loopne
mov
push
repnz
push
pop
fdivrs
movsb
adc
inc
xchg
bound
dec
adc
pusha
push
nop
and
cld
cmpsb
jmp
sbb
and
xor
scas
fsubr
bound
sbb
jno
movsb
sub
jno
xlat
xor
push
jge
rol
ror
lock
insb
popf
and
and
leave
push
loopne
cli
imull
aas
mov
adc
lcall
or
mov
ror
das
sub
and
in
ret
incl
loope
or
bound
push
inc
dec
pop
xlat
cmp
inc
popa
push
test
adcb
push
aaa
pop
in
repnz
push
mov
testl
mov
pop
popf
sub
push
fwait
pop
or
jae
pop
repz
cs
sub
sar
pop
cltd
and
cmpsb
mov
sbb
xor
fiaddl
inc
dec
out
sub
fiaddl
rcrl
pop
add
xor
aas
dec
xchg
or
jne
faddl
in
xchg
mov
movsb
adc
cmp
fcomps
mov
jg
out
iret
mov
sbb
dec
adc
test
adc
sub
loope
and
mov
sub
dec
ja
iret
or
dec
and
rorl
ja
xchg
iret
dec
jb
cmp
bound
ror
sub
dec
andb
xchg
adc
mov
and
sbb
sbb
mov
xchg
arpl
jbe
mov
dec
daa
inc
mov
cltd
es
inc
dec
xchg
rcrb
and
inc
lcall
jbe
xchg
aas
fnstcw
jnp
loop
push
mov
daa
in
or
stc
sub
jl
stc
mov
je
jne
xchg
pop
les
jmp
fwait
xor
push
in
fadds
jp
dec
dec
pop
incb
in
loope
xchg
out
ljmp
lahf
cmc
pop
test
leave
cmpsl
sar
aad
cmpsb
lahf
cmc
sub
pop
sub
pop
mov
add
jg
bound
sub
js
dec
jecxz
out
fstpl
pop
pop
shll
in
pop
aad
jmp
stos
stos
repnz
pushf
push
sub
fisubrs
aas
pop
push
cmp
and
aad
adc
sbb
push
xchg
les
xchg
stos
aas
mov
pop
in
inc
ss
inc
push
push
clc
pop
notb
cli
bound
push
xlat
in
ds
pop
lret
xlat
xchg
jle
int3
xchg
lods
frstor
pushf
push
mov
lods
add
jnp
gs
inc
xchg
test
lock
pop
pop
leave
sahf
ljmp
cmp
push
fsubs
iret
inc
lcall
adc
mov
sub
inc
out
xchg
sub
or
cs
int3
cmp
mov
mov
insb
or
movsl
add
addr16
and
dec
dec
fildll
lret
push
xchg
jb
sbb
pop
adc
xor
xchg
imul
rcr
out
add
adc
cmp
es
and
cmp
mov
xor
dec
push
dec
in
test
nop
loop
rcr
lcall
pop
jne
xchg
outsb
push
aam
ja
xchg
movsb
or
stos
lahf
xorb
or
and
gs
add
jb
jle
push
mov
jecxz
push
sbb
xchg
pop
inc
aas
sub
in
add
scas
test
loop
pop
ss
mov
or
sbb
xor
add
das
adc
fcomps
add
test
cmp
mov
mov
push
xlat
aad
lahf
movsl
or
mov
inc
cwtl
mov
inc
lods
cmp
push
bound
jno
ja
test
sbb
stc
in
lcall
pop
xlat
das
pop
fsubl
outsb
test
je
dec
add
fs
lds
negb
add
movsl
add
ja
dec
xchg
pusha
push
rcrl
lds
hlt
and
aaa
mov
pcmpgtd
out
xor
mov
pop
loopne
jns
dec
mov
enter
jne
movsl
dec
mov
cmpsl
ret
sti
pushf
xchg
imul
push
les
pop
jle
push
sbb
and
cmp
mov
js
pushf
dec
pop
cli
neg
hlt
jge
or
xchg
insl
aam
and
xor
mov
sbb
leave
pop
push
push
test
or
xchg
inc
orb
shrb
fcmove
and
cmp
nop
dec
sbb
dec
hlt
push
dec
cmp
xor
mov
mov
sub
add
push
fldt
xor
out
loopne
sub
pop
sub
adc
mov
push
adc
xchg
push
fmul
aam
out
sti
bound
and
xor
js
adc
ja
adc
jo
test
ret
test
iret
ss
or
jmp
and
mov
lods
cwtl
cmpsb
cmp
mov
subl
test
jle
mov
int
ret
pushf
lock
decl
mov
dec
imul
push
or
push
ljmp
negl
adc
movsl
leave
aaa
das
inc
out
call
or
push
rcrl
fimuls
or
mov
push
dec
jp
enter
push
inc
xlat
hlt
sbbl
cmc
jmp
js
lods
jno
adc
outsb
addb
iret
outsb
and
nop
test
cmc
bound
cld
shll
adc
xchg
inc
add
jb
outsb
jle
or
mov
cmp
jecxz
mov
mov
outsl
ret
flds
icebp
push
loope
outsb
inc
or
mov
loop
popa
int
xlat
popf
popf
mov
or
je
jne
fisttps
bts
cmp
clc
imul
inc
ret
push
cs
les
pop
sbb
pop
xchg
fdiv
dec
scas
fstps
pop
nop
jecxz
mov
ret
cmp
dec
and
cmpl
push
lahf
pop
jmp
pshufw
mov
jo
xlat
in
out
cmp
out
movsb
mov
xor
inc
lea
aam
cwtl
insl
loope
mov
das
test
mov
idivl
push
cmp
mov
mov
push
xor
and
mov
push
inc
pop
jbe
fldt
adc
push
dec
sub
pushf
push
in
ficomps
add
xchg
and
shrb
and
dec
dec
shlb
fisubs
adc
mov
int
stos
repz
out
daa
mov
in
lods
inc
jne
xlat
scas
and
scas
xchg
xor
jg
and
std
mov
mov
fdivl
lcall
mov
ljmp
cmp
repnz
push
mov
pop
rcll
cli
pop
int
push
lcall
adcl
cmp
push
out
sbbb
or
and
inc
cmp
xchg
mov
push
and
or
pop
push
ret
ret
insl
mov
ja
lret
xchg
aam
stos
push
jecxz
ds
pop
xchg
fstpt
mov
loop
repnz
aad
and
push
adc
jnp
jne
sti
cld
das
adc
pushf
scas
sbb
mov
repnz
jle
mov
and
imul
adcb
dec
fcomi
enter
push
rcr
pop
test
cmp
cmpsl
pusha
push
rcrb
ds
jmp
mov
dec
mov
pop
jmp
mov
cltd
fisttpll
cwtl
imul
jp
push
js
sub
xlat
fsubs
or
xor
mov
fdivp
push
loop
jae
in
stc
xor
xchg
push
push
pop
push
dec
add
loopne
dec
lods
in
xor
outsl
cld
sub
in
cmp
cmp
mov
inc
stos
push
fmulp
pop
or
jl
jae
xlat
xor
dec
pop
xor
dec
imul
fwait
jns
fdivrl
push
adc
dec
mov
mov
cs
iret
sbb
add
pop
inc
lahf
mov
jl
mov
test
insb
xchg
movsb
add
push
inc
jns
mov
xor
ds
insl
lods
mov
push
inc
adc
xchg
push
pusha
leave
inc
lods
into
adc
xor
xor
or
scas
mov
leave
scas
jge
leave
jo
or
xchg
sbbb
xor
popa
add
fwait
repz
inc
sbbl
and
push
das
inc
add
pop
dec
nop
xchg
xor
in
mov
mov
mov
cmp
dec
imul
fdivl
cmp
sub
dec
xchg
mov
sub
outsb
jmp
pop
cmp
or
pop
icebp
mul
out
or
push
sarl
inc
sub
push
lahf
movsb
stc
mov
adc
sub
xor
out
jb
cmp
push
loop
fidivrs
outsl
stos
xchg
inc
jnp
cmpsl
aaa
jecxz
inc
lcall
scas
add
inc
xor
cmpsb
pop
xchg
aam
inc
cld
sti
push
dec
dec
mov
or
sbb
cmp
stc
js
xchg
or
mull
dec
pop
in
mov
mov
mov
lret
ss
mov
scas
xor
push
je
pop
fwait
mov
xor
inc
inc
cli
jnp
mov
pop
sub
movb
cs
into
and
and
bnd
inc
movsb
pop
jl
aas
out
mov
sbb
dec
jbe,pn
push
and
push
adc
and
loopne
mov
nop
das
out
repz
dec
xchg
idivb
jmp
lret
inc
aam
dec
outsb
in
lods
movsb
mov
fmuls
das
dec
sbb
or
inc
mov
pop
loopne
cltd
imul
decl
mov
xchg
or
in
add
fldl
mov
and
xor
in
xorl
inc
mov
adc
loop
jne
lds
daa
out
fdivs
and
cmp
pop
data16
sbb
jnp
es
adc
dec
mov
sbb
dec
std
into
cltd
lahf
cmp
jge
mov
imul
push
repnz
bnd
ret
pop
xchg
adc
sbb
cmp
into
out
inc
movsb
ja
cwtl
push
jno
cmpb
sarb
mov
es
xchg
scas
andb
push
xor
jae
icebp
add
dec
repnz
and
lret
xchg
out
out
pop
sub
lahf
repz
int
scas
fildl
dec
stos
adcl
mov
aaa
dec
or
stos
into
mov
and
inc
xor
and
xchg
lcall
inc
fnsave
test
daa
lcall
mov
gs
sbb
es
int3
sub
nop
mov
fwait
ljmp
hlt
rorl
repnz
pop
fs
imul
ret
xor
scas
mov
pushl
mov
test
popf
cmp
mov
fdivs
dec
movsb
rep
mov
movsl
add
or
flds
sbb
xchg
fcompl
test
xchg
loope
in
pop
subl
sub
add
jo
ficoml
or
cmp
fisubs
hlt
mov
andl
int3
jno
jmp
jecxz
popa
push
adc
mov
insb
fdivr
inc
xlat
mov
adc
jge
in
sahf
fs
add
in
pop
fildll
inc
iret
ss
inc
into
xchg
adc
mov
pushf
xchg
inc
es
mov
jg
mov
mov
fldl
aas
xor
pop
je
or
jnp
push
into
add
and
xor
ficomps
sub
jp
push
int
iret
jae
int
add
rolb
iret
mull
push
mov
jns
ds
ljmp
inc
mov
out
inc
and
adc
add
mov
loope
mov
fidivrs
mov
sub
pop
and
cmpb
movhps
add
adc
pushf
adc
outsl
sti
sub
mov
mov
dec
sahf
adc
dec
imul
adc
rorb
and
push
stos
mov
negb
adc
fsubl
cwtl
hlt
sub
filds
cmpsb
sbb
jle
dec
adc
inc
fs
add
cld
push
lods
sbb
dec
add
xor
xor
inc
loop
add
iret
lock
out
and
insl
xor
xor
mov
lods
or
dec
shlb
les
add
cmc
movsl
int
push
xchg
jmp
xchg
jne
push
mov
les
lods
sbb
cmp
inc
rcrl
pop
dec
add
popa
movsl
bound
dec
loope
scas
add
xor
sub
sahf
pop
sub
mov
mov
push
out
mov
pop
fldenv
adc
les
push
and
gs
inc
lods
aam
xchg
in
pop
dec
pushf
sub
xor
add
pop
xlat
es
and
cld
mov
jne
add
test
sbb
clc
ret
fadds
aad
test
js
xchg
mov
test
inc
jb
pop
fs
jecxz
push
les
icebp
ja
push
mov
cmp
addb
push
cli
test
in
in
cmp
sbb
inc
ljmp
mov
mov
mov
mov
push
subl
add
and
and
xor
mov
addr16
sub
pop
inc
insb
outsb
fs
sbb
jg
cmp
lret
stos
call
arpl
movsb
cwtl
fcmovnbe
adcl
nop
push
mov
add
sub
movsl
es
out
mov
jecxz
jo
fistpll
or
inc
mov
mov
dec
sub
cli
ficompl
push
xor
or
inc
xchg
jno
stc
sbb
daa
dec
xlat
ds
stos
jmp
mov
pop
mov
pop
out
mov
or
push
sahf
mov
mov
cmpsb
cs
mov
imul
out
in
cmpsl
rcr
cwtl
xchg
js
pop
jge
mov
jno
cmpsb
pop
mov
pop
sbb
mov
stc
inc
out
xchg
xchg
int
push
mov
mov
out
xor
jns
or
in
adc
inc
add
xchg
outsl
mov
test
sbb
addr16
mov
insb
pusha
and
cltd
rclb
jmp
xor
sbb
jae
std
dec
pop
cs
lods
lock
arpl
inc
enter
lods
icebp
adc
lds
js
call
push
in
sbb
into
aaa
adc
dec
insl
test
dec
fcmovb
and
mov
and
in
sbb
aam
mov
push
and
pcmpgtd
addl
xor
aam
cmp
test
popa
jmp
loopne
call
or
stc
sbb
jb
inc
enter
ret
lahf
jp
xchg
outsb
aas
lahf
lods
imull
jns
inc
mov
mov
iret
jns
or
sbb
jge
test
test
sti
add
dec
inc
mov
xor
js
pop
fstl
mov
push
lahf
lret
xchg
xchg
inc
mov
jp
rorl
outsb
in
repnz
mov
jp
mov
pop
fisttps
fwait
sub
sbb
pop
jo
ret
sbbl
test
lcall
rcll
xor
sbb
inc
hlt
sub
inc
push
jmp
leave
pop
sbbb
popa
pushf
clc
xchg
daa
jmp
mov
nop
sub
xchg
push
cmp
leave
adc
test
cmpsb
xchg
mov
add
out
jg
fdivr
cmc
jnp
mov
push
sub
adc
repnz
cmp
push
jg
jg
cld
or
movsb
inc
mov
stos
mov
cmc
push
arpl
mov
xchg
pushf
nop
jns
pop
cmp
in
inc
inc
mov
imul
ljmp
in
xchg
sub
insl
sub
and
rcr
push
int
scas
dec
orb
sbb
cmp
lahf
repz
mov
sarb
add
scas
fs
inc
xlat
lahf
mov
pop
or
cmp
mov
inc
add
adc
pusha
fidivl
sbb
push
lods
mov
daa
loopne
cmp
icebp
data16
push
enter
xchg
sbb
pop
cmp
sarb
cwtl
notl
and
and
push
cltd
scas
mov
mov
xchg
and
inc
xor
int3
sbb
sub
mov
mull
aad
inc
ss
jbe
nop
es
mov
push
iret
adcl
add
addr16
popa
mov
jg
sub
jle
adc
cmp
jle
xor
pop
cli
aas
icebp
subl
test
lock
or
lods
xchg
divps
sti
cltd
xchg
mov
xlat
mov
sarb
inc
ljmp
sub
mov
pmullw
adc
ljmp
lea
ret
inc
cmp
cs
rclb
jg
push
push
push
les
inc
xchg
mov
arpl
sub
inc
sbb
mov
inc
push
xlat
inc
adc
or
gs
pop
jle
pop
xor
inc
dec
icebp
jno
xchg
and
dec
sbb
and
jg
adc
adc
jp
leave
imul
push
adc
adc
cmp
aaa
enter
pop
cli
xor
in
aaa
mov
negb
add
xor
hlt
scas
aam
test
jp
sbb
mov
xchg
pushf
fwait
jnp
add
jae
incl
icebp
lods
dec
out
sub
pop
jl
sub
mov
sarb
inc
cmc
repnz
push
push
push
and
sbb
mov
rcrl
fwait
xlat
xchg
adc
jae
adc
push
shlb
mov
lea
shlb
pop
cmp
adc
pop
push
inc
inc
mov
xchg
cltd
aaa
jae
and
dec
add
xchg
insl
cmp
dec
popf
in
cltd
das
lds
or
cltd
mov
cmovbe
emms
jns
xor
addb
dec
das
mov
jae
add
sbb
roll
jg
push
call
xlat
dec
popfw
sub
lea
push
cmp
inc
lods
bound
rclb
dec
filds
popa
push
adc
mov
pop
lds
or
cmpsl
add
cmp
xchg
push
sub
xlat
pop
adc
xor
movsl
or
and
and
in
jb
scas
cs
sbbb
lcall
sub
xchg
adc
sub
jle
loop
in
imul
xchg
bound
ret
push
cmp
gs
inc
stc
dec
xchg
mov
fs
or
mov
dec
xchg
push
push
mov
jmp
fidivs
pop
stos
fists
leave
mov
arpl
cltd
sbb
out
cmp
fwait
inc
fbld
fldz
out
xchg
dec
divl
cli
mov
mov
push
mov
jae
pop
sub
adc
mov
push
fs
xchg
dec
imul
inc
jne
scas
cmp
add
fucomi
sub
rcrl
fs
mov
sahf
add
andb
jle
aaa
adc
jo
add
cltd
adc
dec
jl
dec
add
sub
inc
push
int3
aas
imul
rorl
leave
nop
pop
sbb
jmp
lcall
jns
aad
movsl
shlw
jmp
push
pop
mov
or
add
gs
lods
cmp
loop
push
fnsave
adc
add
stos
and
pop
push
dec
jl
add
jnp
xchg
dec
inc
js
pop
mov
lods
cmp
mov
sub
aas
mov
push
sti
lea
and
cmp
mov
pop
dec
sti
dec
add
fs
mov
ds
cmp
out
and
or
adc
and
scas
cmc
insb
mov
fwait
jl
dec
mov
scas
mov
push
pop
xorb
aaa
pop
into
cli
das
or
pop
ss
in
mov
mov
mov
mov
and
fistps
mov
mov
adc
test
cld
lock
jmp
push
orb
or
pop
xchg
push
je
data16
mov
stc
fisubrs
outsl
xchg
lea
cld
test
or
dec
and
imul
rorl
cmp
mov
jmp
sti
sub
in
dec
nop
push
jbe
repnz
fwait
lods
jl
pop
push
lret
mov
pop
dec
mov
into
repnz
imul
daa
cmp
inc
xchg
add
in
push
jg
mov
xchg
arpl
addr16
out
pop
bound
add
movsb
cmpb
jmp
enter
popa
push
jge
divl
addr16
inc
push
xor
cmp
inc
lret
stc
or
popa
xor
les
inc
lea
xor
jmp
add
outsl
jecxz
mov
out
lret
dec
adc
leave
xchg
lods
int3
adc
into
fisubrs
popf
and
filds
fsubs
out
jbe
cmp
fsubrs
jle
call
mov
sub
push
xchg
stos
push
call
push
loope
shlb
popf
stc
mov
xor
adc
inc
andw
fsts
mov
or
call
test
inc
xchg
lcall
inc
nop
inc
lock
scas
daa
push
test
mov
xor
outsl
scas
mov
jne
cmp
xchg
rcr
lds
jns
inc
mov
push
aas
je
add
sti
dec
adc
fcmove
push
or
cmp
jae
jmp
iret
popf
mov
in
clc
xchg
xlat
mov
pop
dec
insl
push
add
je
jge
cmp
clc
push
cwtl
iret
inc
and
mov
add
push
movsb
xor
imul
mov
fistps
pop
jl
jmp
lret
or
push
loop
mov
in
ss
mov
jne
mov
push
sbb
pop
cmpsb
rcrl
pop
sti
bound
sub
imul
sub
jbe
jg
dec
fdivr
bound
mov
imul
ret
adc
and
and
sub
in
or
cltd
inc
sub
push
lods
cltd
inc
in
mov
test
fsubl
fwait
mov
lahf
and
and
jle
mov
add
dec
inc
adc
in
fwait
pushf
dec
pop
pusha
ret
jb
cli
insb
push
pop
in
lret
dec
push
into
and
push
dec
stos
mov
jg
dec
nop
cmp
mov
out
aad
or
enter
loopne
repz
push
cmp
imul
loopne
mov
push
xor
pusha
adc
mov
rorl
inc
scas
imul
ss
in
out
pop
loope
ds
mov
jmp
sub
insl
or
push
jmp
ror
pop
sub
rcrl
dec
jge
add
push
mov
inc
jecxz
into
sbb
add
push
insb
pop
lea
rclb
jg
add
imul
and
mov
ja
adc
test
mov
add
jge
scas
jnp
pushf
sbb
in
cmp
scas
repnz
pop
dec
aas
pop
outsb
repnz
int3
in
iret
pop
popf
pop
xor
mov
cmp
shrb
cltd
adc
or
pop
or
dec
js
mov
stc
in
pop
movsl
arpl
xchg
jp
inc
test
cmpb
xchg
call
adc
lock
add
jmp
xor
daa
scas
dec
push
or
jle
aas
shl
jg
xor
add
jno
jl
xchg
shl
mov
sbb
cli
repz
ret
js
lret
mov
jmp
stos
add
scas
repz
bound
jl
stc
test
mov
or
out
loope
mov
fisubrs
insl
hlt
pushf
addl
cltd
mov
pusha
sbb
jp
gs
and
fisubrl
jle
loopne
sub
sbb
jns
cltd
imul
cmp
mov
pop
outsb
lcall
pop
mov
mov
ds
ret
cld
fstps
jmp
push
loopne
jo
push
push
xlat
call
push
sbb
jg
or
push
dec
cmp
pushf
ret
xchg
std
add
mov
fidivrl
xchg
jo
push
add
pusha
add
adc
and
hlt
cli
data16
shll
fistl
stc
fwait
int
push
ljmp
gs
outsl
mov
pusha
mov
loope
xchg
fistl
jle
loopne
mull
xchg
cmpsb
iret
push
dec
inc
outsb
das
fidivl
pop
cltd
insl
fcmovnbe
int
ret
sub
imul
rorb
jp
mov
and
dec
lods
xchg
mov
sbb
add
ja
mov
popf
movsb
push
mov
adc
sbb
inc
inc
mov
mov
dec
nop
add
cld
ds
mov
xor
js
pop
mov
mov
loop
clc
dec
cwtl
cwtl
cmc
imul
mov
sbb
out
xor
sbb
or
daa
data16
pop
jns
inc
fisttpll
jmp
jb
mov
inc
inc
andb
pushf
add
int
add
mov
sub
movsb
mov
aaa
add
sub
jge
pop
or
jge
jl
sahf
mov
pop
rclb
aaa
and
mov
aas
cmp
pushf
push
popf
cmp
loopne
sti
scas
pop
dec
scas
jle
cli
push
and
test
jb
lcall
and
inc
sahf
cwtl
cwtl
lret
popa
mov
and
scas
adc
stc
add
jnp
or
mov
pop
add
push
fwait
dec
jne
inc
and
hlt
fbstp
outsl
pmulhw
sbb
jmp
sbb
cmpl
scas
test
sub
sbb
ficoms
or
pushf
dec
aam
pop
pop
xlat
cmp
inc
out
and
xor
daa
shl
int
dec
cld
in
jp
in
dec
or
inc
arpl
test
fcoml
and
mov
movl
cs
mov
xor
inc
arpl
stc
repnz
jmp
into
clc
lock
xor
xchg
or
outsl
cmp
sar
fisttpll
aad
jg
mov
pop
pop
mov
scas
or
outsb
cwtl
push
jae
addr16
mov
mov
dec
rol
dec
jmp
fs
sahf
xchg
cmpb
jg
mov
xor
shll
and
shlb
push
dec
mov
mov
ja
push
or
test
jbe
adc
fstps
add
add
das
shlb
cli
inc
cmpsl
ss
imull
stc
sub
xor
fwait
outsl
push
mov
xchg
std
cmp
ja
cs
repnz
pop
aaa
add
xchg
data16
dec
setns
jno
xchg
push
test
xchg
mov
cltd
mov
or
insb
shl
insb
sub
daa
mov
rol
std
jmp
xchg
or
stos
add
adc
out
add
xchg
pmuludq
dec
xchg
hlt
cmp
ja
sub
loopne
cwtl
jns
push
jmp
mov
dec
and
addr16
mov
sbb
cmp
js
mov
lods
jbe
in
cmp
inc
dec
mov
rcll
push
jno
sub
dec
push
pop
pop
pop
imul
shrl
cmp
fists
push
roll
filds
mov
jg
inc
jnp
dec
out
dec
loopne
sti
aas
movsl
std
test
aad
mov
shlb
scas
mov
jne
iret
outsb
inc
call
mov
lahf
jl
pop
insb
movsl
lret
push
xor
dec
test
inc
ret
aas
mov
jb
sub
jle
xlat
insl
insb
dec
inc
pop
adc
adc
filds
xchg
sbb
adc
enter
mov
scas
mov
jle
lds
mov
std
jg
dec
dec
mov
sbb
mov
cmp
cmc
xor
xchg
cmp
arpl
rorb
rol
cs
pushf
xchg
dec
mov
inc
test
sub
std
xor
out
outsb
int
and
imul
jp
push
incb
mov
sub
subl
das
mov
pop
call
ss
popf
loopw
push
xor
and
push
push
mov
add
cltd
gs
xor
xchg
sbb
add
cli
and
mov
adc
std
cmp
fiadds
dec
xor
ret
cwtl
lods
sbb
inc
inc
push
mov
lock
repnz
movsb
push
mov
pop
fwait
dec
std
xchg
icebp
add
mov
rcll
aaa
in
jne
sub
sub
cs
push
stos
and
xchg
push
push
jb
add
xchg
mov
push
movsl
ret
ljmp
icebp
nop
pop
mov
mov
mov
in
push
mov
xor
dec
aam
in
fs
imul
in
les
insl
out
inc
nop
lret
push
sub
mov
pextrw
in
ret
fisttpl
or
lret
cmp
xor
test
rcrl
std
scas
shrl
mov
jbe
cmpsb
and
out
xchg
or
data16
pop
pushf
push
pusha
stos
inc
mov
sti
insl
or
out
push
push
cmpl
dec
popf
popa
outsb
divl
or
push
mov
ja
xlat
push
dec
cmp
ja
pminub
aad
push
or
xchg
icebp
lcall
xchg
fcomip
jmp
mov
ret
mov
adc
sarb
cwtl
cmpsb
orb
pusha
pop
es
sbb
clc
das
out
pusha
sub
mov
pop
sub
test
jg
xchg
dec
and
and
inc
popa
inc
dec
lahf
add
sahf
cmp
dec
mov
aas
push
cmp
and
call
push
shl
call
cwtl
les
mov
push
cmp
test
movsb
sbb
mov
bound
pushf
mov
in
sbb
ds
sub
and
rclb
ret
mov
jp
out
xor
add
pop
dec
or
lock
fldl
mov
mov
push
dec
mov
dec
or
add
push
cmpsb
inc
loope
std
jecxz
mov
in
in
mov
mov
xchg
add
fisttpl
mov
imulb
sbbb
leave
dec
or
pop
add
xchg
sub
es
and
shrl
jp
dec
cmp
fcomps
nop
dec
sub
push
sbbl
lcall
push
sbb
popa
pop
fs
lcall
and
loop
in
lods
jns
inc
mov
add
stc
xchg
push
jl
sub
testb
sbb
mov
rclb
adc
push
pusha
adc
adc
push
push
je
xchg
dec
sti
mov
xchg
fidivrl
fists
adc
xchg
add
pop
neg
mov
mov
andb
jp
sarl
subl
adc
mov
cld
movsb
mov
je
dec
into
mov
cmp
lret
mov
mov
nop
out
imulb
in
lds
stos
in
adc
adc
xor
negl
jb
pop
fs
push
xchg
mov
and
push
ret
mov
das
scas
insb
sbb
jg
lods
pop
inc
rorb
fistl
dec
or
mov
ljmp
es
mov
pop
sbb
mov
aaa
popa
push
pop
sti
mov
push
bound
addb
jmp
stos
and
adc
test
mov
jge
fdivrl
addr16
fiadds
lock
sbb
sub
lods
cmpsb
ja
mov
cmpsb
jnp
xor
cmp
cmc
ljmp
cmpsb
cmp
push
fdivr
popa
mov
add
jne
dec
js
incl
mov
ror
js
leave
push
lock
movsl
hlt
cmp
add
mov
or
xchg
sub
negl
mov
or
lret
add
test
mov
mov
aaa
lock
push
testb
mov
jl
sbb
loope
scas
inc
inc
ss
lods
stc
pop
jnp
lods
inc
push
cld
pop
stos
mov
pop
or
xchg
mov
mov
jns
jb
mov
setg
rolb
fidivrs
inc
rorl
mov
repnz
and
cmp
andb
test
fwait
les
clc
out
mov
pop
mov
pop
loopne
mov
sti
push
leave
scas
incl
popa
pop
adc
and
or
leave
mov
pop
adc
add
aam
aad
xchg
addr16
out
xor
xor
mov
and
sbb
xor
pop
mov
jecxz
cwtl
mov
in
xchg
les
mov
jae
movsb
add
pop
hlt
mov
sbb
ret
adc
sbb
xor
inc
sbb
ret
test
adc
jne
in
pop
cmp
movsb
movsb
cmp
lea
push
out
push
or
jl
out
cs
inc
aas
das
jb
int
pop
and
mov
movsb
add
and
fcomps
cmp
in
sti
push
jbe
xchg
mov
xchg
addr16
add
out
icebp
or
aas
les
or
fs
lret
dec
out
popf
mov
xchg
jns
cmp
sarb
je
jle
adc
bnd
cmpsb
pusha
or
bound
adc
adc
or
outsb
addb
sti
xor
push
in
icebp
or
jae
insl
aam
jecxz
xchg
push
sub
jae
aaa
mov
or
xor
mov
mov
push
clc
add
mov
jp
inc
push
add
xchg
or
fs
icebp
test
addb
inc
ljmp
and
lods
insl
mov
cmp
and
dec
and
lahf
sbb
shl
out
mov
sub
sub
mov
sarl
lods
lret
testl
shlb
mov
ret
outsb
mov
cwtl
xchg
adc
ret
cld
fistl
mov
rcll
cmpsb
fcomp
fmulp
mov
push
test
lds
je
test
cmp
push
add
jp
mulb
pop
or
sbb
push
push
dec
fildll
jae
jo
into
sbb
repnz
iret
sahf
mov
sbb
mov
push
adc
mov
jne
call
orl
sbb
xchg
and
repnz
xor
je
aad
mov
lds
mov
sub
mov
iret
push
mov
int3
movsb
xlat
data16
inc
xchg
sub
sub
adc
jmp
out
rorb
lea
pusha
xchg
decl
xchg
and
ljmp
adc
jecxz
pop
push
lret
inc
movl
test
push
mov
ljmp
pop
jecxz
shrl
xchg
lock
addr16
cmpsb
cmp
mov
inc
aam
or
mov
and
scas
jp
jecxz
imul
add
or
sub
mov
shrb
cmp
xchg
adc
xor
sub
test
xchg
out
stos
out
scas
ljmp
mov
aas
adc
cmp
and
in
jge
mov
or
add
cmp
loopne
cmp
xchg
loopw
popf
cmpsb
mov
out
adc
in
add
xor
adc
stos
in
aas
and
in
insb
shll
pop
or
dec
dec
lahf
pop
sub
pop
mov
addr16
lcall
leave
sbb
xchg
inc
or
dec
xchg
loopne
adc
push
mov
cmc
es
cli
pop
int
and
lds
pop
inc
in
repnz
sbb
sub
sahf
push
insb
scas
lea
int3
xchg
icebp
es
lds
and
fcomps
xor
xchg
lahf
mov
loope
inc
lret
sbb
add
rolb
dec
sbb
cmp
inc
in
or
jp
jp
lret
or
mov
sub
sbb
jecxz
mov
or
stos
mov
movsb
sub
gs
mov
cmp
add
cmpsb
fwait
mov
cmp
mov
adc
pushf
negb
sbb
mov
jge
mov
vmwrite
push
int3
ret
pop
daa
enter
sub
stc
or
add
add
cltd
out
cmp
popa
filds
jge
sub
jno
lock
xlat
in
stos
sub
ficoml
cmp
jnp
dec
add
mov
cmp
sbb
cs
roll
in
xchg
into
test
jae
rcrb
mov
int
ret
push
mov
push
inc
push
xchg
in
aad
xchg
push
loopne
pop
test
je
scas
cwtl
and
mov
movsb
dec
insl
pop
mov
push
out
cltd
flds
mov
adc
xlat
shll
ficoms
daa
cwtl
pop
fsubs
pop
sbb
pop
roll
and
inc
or
sub
iret
push
and
push
not
addr16
lret
stos
icebp
lahf
mov
pop
fnstenv
xchg
bound
cmpsb
jl
add
fsubs
cmpsl
mov
and
dec
mov
xchg
pop
loope
xchg
pop
rorl
out
je
out
or
mov
mov
lcall
dec
fisubs
pop
mov
insl
adc
insb
adc
jle
inc
xor
les
out
mov
aam
rorb
and
adcl
into
push
cmpsb
and
je
and
sbbb
push
dec
add
add
sbbl
loope
pop
frstor
loope
aam
pop
call
xor
inc
sub
inc
arpl
scas
aas
xchg
jp
in
cs
xchg
imul
adcb
inc
aad
fldenv
fwait
xchg
sti
mov
inc
stos
adc
imul
push
ja
push
fcoml
and
rol
cmp
popa
je
js
cmpsb
push
mov
les
lret
add
pop
mov
and
lret
stos
inc
jecxz
repnz
movsb
pop
pop
insb
sbb
lahf
ret
mov
and
int3
test
cmc
lods
jb
imul
push
and
sub
xchg
das
mov
and
repz
enter
mov
and
mov
mov
and
inc
ja
jne
sbb
call
mov
bound
cltd
mov
roll
or
adc
test
cltd
mov
push
push
adc
ficompl
clc
repnz
inc
loope
jge
and
sti
rcr
hlt
enter
fwait
push
inc
das
jne
adc
sbb
sub
dec
cmp
mov
add
lods
cmpsl
lock
mov
jle
mov
inc
or
xchg
cs
sbbl
jp
mov
fnsave
in
push
dec
xor
xchg
mov
hlt
mov
iret
jnp
rcr
mov
pop
mov
cli
or
mov
es
pop
add
xorb
pop
mov
adc
dec
movsb
xor
enter
adcb
leave
dec
sub
movsb
cmpsl
xchg
add
in
lock
frstor
jnp
insl
xchg
mov
pop
push
out
fiaddl
jg
addb
pmulhw
out
mov
cmp
repnz
pop
decb
out
lods
insl
mov
popf
push
pushf
mov
cltd
sub
sub
or
into
rorl
cmpsb
xor
jl
adc
jmp
mov
icebp
jo
xchg
faddl
sub
jecxz
test
cli
lret
mov
mov
xor
shll
and
mov
jae
jl
push
mov
mov
mov
mov
shll
dec
dec
adc
lcall
in
jbe
jno
rcrl
inc
cmpsb
adc
lock
ss
push
adc
imul
nop
jmp
add
push
call
mov
mov
xchg
push
stos
mov
inc
in
lds
adc
and
or
loopne
notl
sti
adc
sub
sub
cmpsb
loopne
pop
mov
push
mov
mov
push
ds
scas
mov
cmp
in
mov
xchg
mov
xor
gs
pop
push
test
cmp
push
xchg
mov
adc
sbb
fwait
popf
scas
push
insl
orb
add
or
js
xchg
jge
push
and
jge
sbb
in
mov
xabort
ds
jns
push
sub
inc
jnp
dec
lock
push
sbbb
out
or
mov
xor
sbb
fmulp
and
pop
pushf
aam
mov
push
pop
cmpsb
fnstenv
lock
adcl
mov
push
sbb
mov
xchg
pop
insl
fwait
gs
loop
mov
lret
pushf
add
mov
sarb
mov
push
push
xchg
aaa
push
imul
pop
dec
adc
cmpsb
mov
pop
hlt
mov
pop
mov
xchg
repz
mov
push
test
jne
sbb
mov
jno
enter
cld
mov
mov
rcll
out
decb
jo
lods
repz
aas
sbb
mov
pop
cltd
xchg
fdivs
dec
movsb
and
shrl
xor
push
rolb
mov
or
repz
aad
bound
mov
stc
xor
aaa
add
push
inc
push
lds
stc
ss
in
sbb
push
xchg
pop
iret
xchg
rcll
loope
add
and
xchg
jae
mov
cwtl
insl
mov
adc
xchg
mov
mov
xchg
pop
mov
mov
mov
and
aas
push
mov
or
jae
pop
dec
mulb
mov
pop
mov
or
repz
pop
pop
shll
sbb
add
fidivs
das
lcall
sarl
std
jmp
pusha
sarl
jl
and
mov
xor
cmp
cltd
cmp
int3
in
xor
into
pop
das
pop
jb
inc
aaa
jmp
repz
lcall
aam
xchg
into
mov
pop
or
add
int
je
repz
sti
je
xor
mov
popa
je
jo
jae
inc
movsl
cwtl
rcrl
rclb
scas
add
xchg
and
test
inc
fidivrs
aam
fsub
jae
rclb
dec
sbb
lods
loopne
dec
sub
adc
incl
aaa
fwait
and
sbb
daa
shlb
inc
fnstenv
xor
loope
lret
fstl
daa
pop
xchg
into
std
inc
insl
fsubl
sarl
fsts
xor
mov
pop
inc
push
xor
testl
gs
mov
cmpl
fsubl
in
jns
and
mov
push
xor
xchg
xchg
or
lcall
sub
or
outsl
mov
inc
sbbb
addb
and
pop
insb
insb
xlat
rclb
mov
pop
pop
or
cld
sub
into
jb
int3
jmp
out
and
ja
popa
aas
and
fcmovnu
cwtl
int
js
into
into
cmpsb
das
in
imul
outsl
mov
pop
fucomip
mov
mov
xchg
jnp
cmp
lds
pop
and
pushf
jp
mov
or
scas
stc
mov
loopne
flds
inc
inc
fildll
jl
outsl
in
int
sbb
rclb
xchg
lods
mov
mov
out
mov
fs
mov
movsl
pushf
push
mov
std
insl
arpl
out
ret
xchg
push
jg
cmp
jae
ficompl
mov
inc
loope
jp
cmp
add
stc
test
mov
std
mov
cltd
pop
mov
sub
in
pop
fcomp
popa
testb
cmp
arpl
add
lods
sti
icebp
pop
mov
mov
test
test
cmp
aam
aam
and
out
dec
mov
pop
bnd
or
mov
lds
jns
jge
push
sub
das
dec
or
cmpsb
ljmp
push
test
cmp
push
mov
add
mov
jne
fstpt
sbb
mov
aas
fisttpll
ja
daa
inc
dec
dec
xorb
ja
jle
and
lcall
es
cmpb
ret
mov
mov
or
cmp
xchg
xchg
push
dec
icebp
and
push
and
and
daa
sbb
lds
rcll
icebp
jle
loope
stos
jecxz
fisubrs
movsb
and
sub
pusha
ret
jmp
lods
shlb
dec
adc
arpl
cmp
dec
sub
add
dec
mov
sub
mov
dec
lret
mov
rorl
outsl
pop
dec
jbe
push
mov
push
inc
lods
jge
jb
pusha
sahf
add
js
aam
mov
or
addl
test
pop
into
cmc
mov
xor
mov
bound
and
lea
inc
std
int3
sbbl
jp
insb
outsb
lahf
pop
fcompp
shrl
jle
shlb
ret
sbb
orb
mov
sbb
call
fidivrs
icebp
mov
icebp
inc
call
das
ficompl
jmp
ljmp
fwait
mov
fisubl
sti
xor
repz
add
out
xchg
mov
and
dec
out
xor
fnsave
push
mov
jo
sub
ljmp
jb
jns
sub
imul
adc
in
pop
inc
pop
mov
dec
push
mov
mov
adc
loopne
push
imul
sbb
sub
pop
add
and
adc
pop
mov
and
dec
shll
js
cmpsb
mov
pop
jle
add
in
xchg
in
add
dec
dec
inc
orb
imul
cmc
mov
sub
cltd
nop
inc
sbb
sub
xchg
or
push
pop
in
test
mov
repnz
lods
pop
lock
cmc
cltd
scas
jno
rcrb
sbb
jns
xor
inc
test
lock
arpl
add
roll
push
adc
std
and
jnp
leave
in
sub
pop
jns
add
mov
push
and
cmpsl
idivl
dec
lret
pop
dec
push
sub
jecxz
push
subb
inc
mov
stos
or
sbb
jno
pop
mov
int3
ja
addb
jge
jmp
pop
sbb
imul
loop
sbb
mov
adc
int
rcrl
enter
add
stos
repnz
sbb
fsubrl
jmp
jle
xchg
into
cs
sbb
pop
mov
lret
arpl
sti
mov
movsb
adc
loopne
mov
out
shrb
xchg
fdivl
out
xchg
popa
out
dec
xchg
popa
mov
mov
pop
ss
or
lods
aaa
sub
push
leave
popa
mov
xor
jg
sub
sahf
out
push
push
sub
cmpsl
mov
inc
fcmovnbe
or
sub
jb
mov
sbb
pop
shll
mov
inc
cmp
outsl
sbb
mov
aad
icebp
cltd
imul
lret
inc
mov
dec
adc
movsb
and
jle
lods
mov
cmp
lahf
js
cmpsl
fstps
nop
inc
mov
push
rorb
mov
xor
or
fistpl
movsb
ja
addb
push
pusha
sbb
test
bound
push
push
loopne
lods
add
xchg
stos
clc
shlb
neg
cmp
and
pop
cli
lret
and
negl
mov
test
movsl
insl
add
mov
mov
fimuls
jo
push
bound
fisttpl
push
loopne
mov
and
insb
mov
and
xor
dec
ja
fimull
jnp
xchg
lods
mov
or
mov
js
or
pop
push
popa
or
inc
into
inc
pusha
mov
lahf
sub
shl
pop
lods
repnz
sbb
mov
xchg
add
daa
or
push
inc
push
jne
cmp
xor
call
sbb
lock
cwtl
push
movsb
pop
pop
test
lods
push
ret
ret
jg
iret
mov
dec
xchg
in
xor
mov
mov
jmp
jl
xlat
or
scas
xchg
fs
fwait
outsl
loop,pn
sti
notb
scas
push
sub
mov
test
push
add
cmp
fists
jg
in
in
into
ret
mov
dec
push
xlat
int
xor
insb
mov
mov
inc
cmpsb
test
add
mov
mov
push
jecxz
jo
or
pop
lods
pop
pushw
sbb
jle
adc
stos
sbb
pop
jnp
mov
mov
dec
ror
je
scas
or
xlat
fcoms
mov
jns
out
das
and
cwtl
inc
pop
int
test
and
cwtl
mov
push
cld
bound
jne
push
outsl
out
mov
ret
pop
fcomps
jns,pn
aas
jl
sar
mov
push
cmp
pop
aam
and
dec
popf
arpl
dec
jecxz
push
mov
rolb
adc
mov
data16
jne
cmpsl
push
in
gs
outsb
ljmp
aaa
sbb
push
cltd
scas
and
jb
pop
rorb
pop
and
jno
jns
dec
repz
les
aam
push
xor
xchg
out
std
jnp
dec
xor
ret
sub
mov
arpl
das
jne
mov
add
or
pushf
add
scas
sbb
xchg
bsr
lods
mov
test
cmp
sbb
lret
inc
in
mov
lret
sub
lea
xor
and
out
pop
and
aad
popf
out
sbb
sbbl
loope
outsb
nop
cmpsb
dec
outsl
mov
data16
aas
mov
mov
xchg
sub
mov
dec
cmp
mov
xor
inc
xor
push
daa
int3
xchg
lds
mov
ds
jmp
mov
notb
cs
and
inc
jno
jbe
xchg
sahf
loopne
inc
insl
in
stc
jbe
jnp
and
mov
inc
cmp
xchg
cmpl
sub
and
and
ret
outsb
loopne
ret
adcb
xor
add
pop
pop
xor
lea
pop
lock
rcll
imul
adc
test
repnz
arpl
pushf
mov
ret
movsb
xor
test
nop
and
inc
mov
inc
xor
mov
lods
push
pop
sbb
orl
push
icebp
jg
jg
mov
adc
cmp
test
push
pop
ret
out
jmp
jb
ret
je
pop
and
xchg
add
xchg
mov
and
imul
adc
mov
movsb
xor
in
pop
aas
inc
sbb
mov
pusha
pop
sbb
cmc
dec
cmp
inc
push
xchg
sbb
into
call
pusha
or
ljmp
and
aas
fnsave
jp
shll
xchg
test
test
fisttpl
jge
sbb
add
sub
insl
lret
push
jo
xor
fwait
mov
pushl
popa
in
push
mov
add
push
and
test
jbe
mov
pop
push
mov
test
jns
nop
ret
lret
mov
adc
fists
xchg
or
loop
cltd
scas
inc
inc
xchg
and
add
jecxz
cltd
cmc
sub
repnz
push
into
rcrb
loop
test
push
loopne
xchg
or
dec
mov
outsb
pop
pop
jno
je
pop
or
pop
and
out
test
and
add
je
mov
add
adc
pop
pop
push
xchg
add
sbb
loopne
fimuls
xchg
jne
rorl
jns
sti
and
clc
dec
stc
test
dec
mov
dec
loope
inc
inc
nop
bound
pop
inc
int
in
cmp
mov
xchg
ljmp
shrl
cmc
sbb
mov
lods
repnz
rcll
stos
bound
stc
in
iret
hlt
or
mov
add
cli
fwait
out
arpl
cmp
or
or
push
and
repnz
sub
pop
das
jg
mov
pop
aas
arpl
ja
sub
fmuls
push
pushf
arpl
and
cmp
sub
jno
decl
jle
rolb
mov
pop
inc
xor
inc
lods
out
mov
repnz
push
xorl
out
xchg
adc
push
mov
stos
nopl
dec
lcall
test
cmp
lcall
loop
ds
cli
lret
mov
push
mov
mov
mov
cmp
aam
stos
and
gs
in
push
gs
ljmp
mov
scas
sub
or
movsb
imul
mov
mov
insb
nop
lds
or
lods
xor
dec
int
lret
enter
lds
push
daa
and
xorb
inc
gs
lahf
push
jge
cmp
push
adc
repnz
or
cmp
mov
stos
jg
jl
mov
gs
bnd
sahf
pop
jno
lret
rcrb
insb
daa
jns
sbb
cmpsl
je
fildll
movsb
insb
xchg
xor
or
test
inc
addr16
je
push
ljmp
les
adc
mov
push
push
gs
mov
sahf
push
out
sarl
xor
inc
add
jmp
jbe
pop
jp
inc
push
outsl
loopne
mov
xchg
inc
lods
insl
sub
sti
mov
xchg
je
cmpsb
sbb
es
xor
test
es
insb
mov
push
inc
int
xchg
push
or
mov
xor
cmp
push
mov
cmovns
loop
push
dec
es
pop
push
lods
mov
popf
aad
jmp
out
cmpsl
fsubrl
adc
and
xorl
call
lahf
cmpsb
mov
dec
xchg
lcall
aaa
imul
inc
xchg
movsl
pop
mov
shrb
scas
mov
pop
sub
push
or
clc
loop
mov
shll
sbb
sarl
popf
xchg
pop
mov
push
adc
pop
mov
fimuls
push
xorl
mov
dec
shl
jp
call
and
adc
das
comiss
jo
js
sbb
js
xchg
stos
aad
fdivs
popa
mov
fistpl
iret
and
pop
add
stos
xor
cmp
arpl
add
mov
fs
shlb
xchg
sahf
mov
cmp
fldcw
pop
flds
fstl
mov
adc
inc
lret
add
and
es
push
div
or
jge
mov
into
daa
and
lea
outsl
xchg
repz
ljmp
arpl
sbb
repnz
mov
xlat
gs
xor
aam
add
adc
es
ljmp
and
js
stc
aaa
stos
or
and
insl
out
daa
jl
xchg
les
int
sub
in
repz
jl
lea
cli
out
cmp
xor
mov
xor
fistpl
cmp
mov
pop
rorb
push
or
jo
in
mov
mov
push
movsl
sti
jecxz
fsubl
jmp
leave
or
mov
pop
jmp
loopne
or
xchg
jmp
stc
sub
and
pop
jns
push
push
sarl
or
addr16
mov
les
mov
mov
pop
mov
lret
scas
push
pop
hlt
jp
movsb
mov
orl
outsl
or
outsl
push
popa
mul
jp
mov
sub
jl
divb
je
fmuls
ja
cs
test
sahf
xchg
jae
xchg
sbb
mul
adc
jo
int
stos
and
jl
mov
cli
push
jb
mov
cmp
or
sbb
fisttpl
rcrb
jl
popf
insb
add
and
aaa
test
adc
je
imulb
pop
sub
bound
xor
sbb
scas
or
jl
or
push
aas
push
adc
iret
cmp
jmp
mov
mov
js
lahf
inc
pusha
aas
sub
lret
dec
movsb
fnsave
dec
movsl
je
dec
mov
mov
sub
repnz
adc
sbb
cmc
jmp
dec
xchg
mov
mov
enter
mov
imul
and
inc
lahf
outsb
negl
dec
cmp
and
je
mov
test
xor
imul
push
fcoms
insl
loope
ret
movsl
xchg
sbb
push
test
jb
mov
nop
popa
and
ret
lahf
cmpsl
pop
test
cmpsl
push
daa
jecxz
pop
popa
cmp
add
sbb
stc
in
sar
mov
push
pop
repnz
enter
adc
pop
jb
sahf
xor
sub
scas
jno
and
movsl
arpl
add
inc
sbb
and
and
popf
xchg
fisubrl
inc
insb
clc
fwait
pop
cltd
lods
cmp
xchg
hlt
pop
sbb
dec
scas
aam
loop
jge
xor
addl
das
out
imul
pushf
mov
sub
sub
mov
cmp
push
outsb
dec
loopne
jmp
arpl
sarb
fidivrs
sub
lcall
fists
leave
mov
out
test
jecxz
mov
adc
cld
arpl
hlt
push
or
sub
cli
inc
xchg
js
jmp
pop
pop
xlat
or
loopne
ds
xor
insb
cmp
sub
cmp
cmp
mov
jno
call
insb
stos
inc
add
arpl
repz
mov
out
jmp
jle
mov
push
xchg
fistpll
push
iret
mov
sti
aam
jne
xchg
fwait
mov
push
cmp
dec
adc
arpl
and
into
out
cmp
jne
xchg
and
pop
loop
push
pop
mov
fisubl
xor
adc
fimull
xchg
mov
ret
cmp
lods
ret
cmp
arpl
sbb
add
mov
mov
xor
cmc
icebp
inc
imulb
dec
lods
xchg
lods
adc
xchg
mov
aaa
adc
mov
xchg
adcl
mov
dec
aaa
or
aam
xchg
ret
cmp
shlb
sbb
xor
xor
adc
movl
fwait
lock
mov
ret
mov
mov
mull
xlat
xor
test
aad
adc
mov
inc
add
repz
xchg
cltd
das
sub
jg
xchg
push
dec
inc
push
mov
push
les
jl
aad
shrl
test
fists
add
lcall
inc
int3
cmp
insb
inc
icebp
mov
and
mov
das
mov
add
inc
jne
sbb
sbb
inc
push
dec
xchg
ja
cmpl
in
mov
int3
mov
testl
hlt
mov
adc
stos
jl
mov
nop
repnz
jecxz
das
mov
lret
pop
mov
inc
adc
addl
push
cltd
xchg
sbb
push
push
leave
addr16
adc
imul
aas
out
shrl
ss
aam
cmpsl
dec
sbb
and
setnp
sbb
mov
roll
mov
cmpsb
jns
aas
fwait
jne
cld
xor
cmp
jg
or
pop
dec
mov
pop
mov
cs
jmp
or
xchg
xor
add
das
inc
pushl
or
sub
in
xchg
movsl
into
dec
lods
xlat
addl
or
or
movsb
outsl
mov
mov
gs
adc
ja
pusha
sbb
mov
adc
jg
aaa
and
sarb
cld
push
mov
stc
insl
ret
or
scas
mov
inc
pop
cmp
rcl
sub
bound
cmpsl
mov
int3
xor
adc
iret
subb
rclb
cmp
in
pop
sbb
inc
aaa
stc
imul
adc
push
xor
aas
movsl
daa
rolb
xchg
ja
xchg
ljmp
mov
xchg
test
mov
aas
and
pop
push
pusha
mov
cmp
pop
adc
mov
jl
fimull
dec
pop
sub
push
pop
arpl
mov
int
outsl
fcmovnu
aas
insl
mov
add
mov
repnz
mov
or
mov
movsb
test
adc
jge
insb
mov
loop
dec
pushf
out
jmp
mov
or
fcmove
push
inc
push
xchg
mov
pop
add
adc
outsb
movsl
ds
sahf
cwtl
int3
and
push
call
int3
in
data16
data16
inc
push
imul
out
push
shll
mov
mov
fstpt
pop
cmpsb
sub
aam
orb
pop
push
sub
fildll
mov
cmp
jns
scas
in
test
inc
jne
std
fidivrl
push
jns
sub
out
sub
cli
cmpl
sub
int3
hlt
insb
popa
cltd
adc
flds
dec
cld
mov
and
adc
push
mov
sbb
xchg
nop
mov
test
dec
add
and
shlb
adc
hlt
stos
jmp
ret
mov
sub
mov
push
xor
or
dec
push
insb
dec
mov
push
stc
std
pop
ja
cmp
inc
jmp
cmc
jnp
add
and
mov
cmpsl
aam
jae
in
outsl
jnp
jg
push
xchg
push
pushf
mov
dec
and
sub
push
and
sbb
ljmp
pushl
sbb
sub
pop
adc
in
jo
dec
and
jno
inc
clc
xchg
jge
pcmpgtb
xor
out
in
push
into
call
cli
sub
inc
jmp
cmpsb
pop
pushf
rclb
mov
fstps
sbb
orb
jge
sub
jmp
sbb
add
and
ss
add
fsubl
ret
ret
xor
mov
ja
sub
mov
stos
adc
sub
in
stos
outsl
add
out
repz
lods
adc
pushf
popf
outsl
pop
aad
jge
add
lret
js
mov
pop
push
cmp
hlt
aas
aam
pop
mov
mov
mov
fadds
sub
in
jno
mulb
and
shr
or
push
pop
dec
pop
and
out
push
lahf
xchg
push
xor
mov
repz
mov
adc
jg
test
jb
dec
aad
inc
fbstp
mov
xor
xchg
out
lret
pop
jne
xor
testb
fidivs
call
mov
sub
pop
lret
js
movsl
sbb
mov
mov
repnz
dec
pop
fsubrl
jo
mov
clc
xor
mov
inc
and
sahf
ret
xor
cmp
cmpsl
lods
adc
sti
cmpsl
add
push
jmp
mov
test
mov
test
cli
jae
push
mov
mov
dec
test
mov
or
mov
iret
pop
out
inc
stos
xor
mov
add
mov
add
add
lea
mov
int
fdivr
jnp
ficomps
pop
jb
inc
push
pop
pop
sbb
testl
insb
and
loope
iret
sahf
pop
jmp
and
xor
lea
das
jno
adc
jnp
inc
cmp
add
jae
mov
add
scas
lea
cmpsl
dec
cmp
adc
adc
or
aad
cmp
jmp
push
xchg
sub
outsb
pop
cmpb
push
xor
loop
pop
sbb
test
je
xchg
mov
movsl
gs
adc
js
adc
mov
aaa
and
adc
frstor
out
pop
pop
cmp
sbbl
icebp
cs
xchg
mov
dec
cmpsl
leave
fisttpl
add
pushf
ds
nop
pushf
stc
push
test
outsb
out
andl
test
in
sub
sub
loopne
test
stos
cmc
push
sbb
push
or
repz
pop
dec
jmp
sbbb
xchg
sbb
andl
addr16
mov
push
mov
out
imul
mov
roll
jae
test
test
inc
and
cmpsl
fcoms
cmp
add
or
call
das
jecxz
enter
lods
cwtl
xchg
push
jno
push
and
mov
daa
cmp
sbb
mov
or
pop
pop
mov
cmp
pop
aam
xor
rclb
fmuls
mov
cmpsb
pop
mov
mov
notb
icebp
js
jne
cltd
jle
or
imul
lret
pop
sbb
mov
smsw
or
ss
fstl
lods
ficoms
mov
mov
outsb
cld
cs
jne
mov
lcall
roll
shl
xchg
aad
pop
dec
test
out
push
mov
mov
inc
inc
cltd
clc
movb
or
jne
pop
xchg
sub
inc
sahf
mov
xchg
es
aad
xchg
aad
rcrl
jno
adc
imul
inc
ja
imul
and
adc
push
loope
lret
cmp
add
mov
dec
std
xchg
out
dec
sbb
mov
lods
cmc
stos
push
imul
add
jne
adc
dec
in
mov
pop
xor
hlt
ds
insb
mov
push
movsb
jmp
lcall
pop
jecxz
pop
repz
inc
movb
push
lds
and
int3
inc
inc
cmc
xchg
adc
add
sti
xor
dec
cmp
cmpsl
xchg
mov
in
je
outsl
inc
push
rcrb
out
sahf
nop
insb
xor
jo
fcomip
xchg
dec
mov
sarl
cmp
ret
movsl
in
push
pop
cmp
inc
jae
iret
leave
push
jnp
jmp
or
dec
jo
push
mov
scas
xchg
sti
cld
icebp
mov
adcl
stos
orb
add
mov
jp
xchg
outsb
pop
push
lea
mov
dec
ljmp
inc
dec
inc
add
xlat
pop
fucomp
sub
push
mov
cmpsl
mov
and
pop
scas
rorb
loopne
insl
mov
cltd
fmuls
lods
lahf
dec
jnp
jbe
and
or
pop
movsb
dec
or
or
lock
and
scas
mov
jmp
div
pushf
xor
xor
repnz
addr16
dec
fiadds
out
fwait
push
push
icebp
mov
pop
notb
adc
adc
inc
jge
jne
fiadds
adcb
sub
in
sub
push
mov
js
hlt
popl
sbb
ret
jae
cwtl
dec
inc
leave
or
jnp
repnz
ret
adc
add
fs
lcall
mov
rolb
mov
push
arpl
in
mov
fwait
or
stos
and
aaa
mov
mov
sbb
jno
xor
call
sub
mov
pop
rcll
pop
xor
mov
fnstenv
mov
popa
push
or
jo
xchg
jp
sub
scas
dec
jb
test
xchg
outsl
test
cwtl
test
mov
pop
lods
mov
ret
stc
push
pushf
sub
or
pop
mov
popf
adc
imul
jmp
mul
fistpll
cs
ficompl
cmpsl
leave
xor
dec
andl
loopne
aaa
adc
ret
dec
inc
push
loope
xchg
sahf
inc
call
pop
mov
iret
jg
add
and
fs
cwtl
mov
popf
ja
bound
addb
push
leave
out
dec
shl
outsl
xor
inc
sub
rcrl
or
lahf
loope
sbb
sbb
jne
push
mov
adc
testl
nop
push
aaa
adc
xor
in
sarb
pop
sub
xor
lods
movsb
push
insb
mov
xorl
pop
cmpsb
lcall
dec
lock
jo
cltd
ret
ret
insl
inc
push
mov
out
sub
jge
lea
dec
cs
xchg
inc
cmp
mov
jbe
ror
test
inc
cmpsb
enter
ret
mov
jp
pop
test
and
imul
and
fwait
aas
icebp
sub
cmp
dec
movsl
lcall
jb
loopne
inc
mov
pop
lock
outsl
call
in
sbbb
sbb
lods
lea
mov
lods
or
hlt
inc
push
adc
insl
push
sbb
lcall
sbb
jle
sub
push
mov
mov
imul
sbb
gs
bound
push
ja
scas
dec
popf
push
cmp
nop
xchg
inc
push
fs
nop
mov
mov
and
mov
pushf
xlat
xor
push
sahf
sub
es
jne
jo
jnp
and
insb
dec
aam
lret
jl
jo
rcrb
jge
dec
sub
and
lret
jg
mov
imul
lods
rorb
mov
inc
xchg
sahf
int3
push
aam
jecxz
sub
lret
cli
lret
mov
scas
jne
addl
jo
jecxz
ja
push
das
cmc
mov
inc
jge
inc
add
mov
daa
xchg
psubsb
push
scas
js
in
and
push
and
push
cmpsb
mov
or
insl
sub
rolb
push
je
test
fstps
mov
sub
or
push
popa
fwait
movsb
ret
push
dec
jmp
ds
sub
push
mov
mov
lds
sub
push
adc
daa
sti
fwait
mov
mov
jno
pop
rcrb
add
cmp
daa
rorl
fsub
add
xor
and
cmp
test
imul
lret
or
mov
inc
add
outsb
movsb
pop
mov
mov
inc
cld
andl
pop
inc
in
testb
in
pop
int3
pop
xchg
pushf
add
insb
mov
add
add
xchg
rol
adc
testl
in
xchg
sub
hlt
les
shll
jb
mov
inc
sbb
xchg
jo
roll
enter
push
outsb
mov
mov
xchg
sub
fcmovb
cmpsl
jno
cmp
fsub
lahf
and
stc
add
jbe
loop
mov
push
lea
dec
add
loopne
or
or
gs
sbb
pop
loope
add
push
in
cmp
mov
out
loope
adc
ljmp
sub
and
leave
pop
sub
xchg
cli
add
push
mov
ja
jl
cli
sbb
enter
dec
pop
insl
sbb
dec
inc
lds
aaa
pop
sahf
fs
jmp
lea
test
and
lods
xor
inc
je
mov
call
pusha
cs
loop
add
adc
mov
js
adc
push
jmp
imul
jmp
inc
pusha
sbb
sbb
xlat
in
cltd
imul
add
jbe
dec
dec
sbb
xchg
pmaxsw
mov
xchg
sbb
in
mov
loope
sub
cld
inc
push
repnz
out
cmp
fsubrs
lock
mov
cwtl
add
fistl
f2xm1
lea
inc
jge
outsl
in
inc
mov
hlt
test
inc
pop
popf
mov
sbb
or
dec
xchg
aad
nop
cmpsl
jns
cltd
mov
push
testl
push
negl
outsl
loope
test
jae
lret
cmpsb
insl
cmp
loope
aas
pop
rcll
and
aaa
sbb
popf
xor
je
hlt
cmpb
shl
push
das
xor
fdivl
fstl
test
xchg
push
ret
push
cli
xor
rolb
pop
ja
jmp
in
outsl
mov
push
ficoml
cmp
jecxz
daa
nop
andb
lret
inc
jecxz
xor
insb
fists
test
dec
mov
cmpsl
or
push
std
or
jno
and
or
dec
outsl
jmp
cmc
int3
insb
inc
pop
push
mov
adc
inc
mov
push
loopne
stos
cltd
fisubrl
sti
inc
aam
pop
push
scas
aad
sbb
inc
addr16
popa
jecxz
in
pop
adc
or
dec
call
sbb
push
push
loop
xor
push
mov
jl
enter
or
add
leave
out
sub
jecxz
addr16
cltd
negb
jne
stos
inc
push
sub
sahf
pop
stc
pop
scas
in
rcr
idivl
bound
rolb
scas
and
repz
and
push
mov
cmc
fcmovnbe
pop
sbb
leave
popa
jl
add
gs
lods
iret
jecxz
lds
test
jecxz
icebp
dec
xchg
inc
aad
xor
loop
int3
or
add
adc
sub
sub
push
push
pop
add
loope
in
sub
pop
lahf
mov
into
push
js
mov
push
outsb
imull
jp
subb
icebp
imul
out
push
pop
xchg
sub
cltd
nop
xchg
dec
test
in
rcrb
sti
mov
mov
ret
fnstenv
rcr
fidivs
fs
mov
and
jge
inc
sbb
ss
push
sub
mov
push
popf
popa
sub
rolb
lods
dec
and
jo
adc
loopne
mov
xchg
pop
pop
test
xlat
pop
in
xchg
cmp
cltd
loope
sbb
xor
mov
cmp
aam
outsb
fmuls
adc
sbb
inc
iret
pop
dec
scas
xor
popa
xor
nop
dec
pop
pop
adc
pusha
dec
mov
pushf
aam
es
xor
dec
shlb
cwtl
int
xor
shll
stc
xchg
adc
arpl
es
add
insb
sbb
mov
jecxz
sbb
and
push
adc
das
shr
jno
negb
jp
adc
pop
lea
clc
dec
loop
lret
stos
js
xor
test
dec
dec
clc
leave
dec
cmp
sub
rcll
jmp
je
insb
and
mov
pop
and
jecxz
mov
xor
sub
stc
fmull
mov
push
arpl
push
mov
test
mov
add
ds
mov
xchg
or
int
loop
lcall
imul
sbb
je
sub
test
test
repnz
mov
mov
mov
movsl
lcall
enter
add
in
inc
test
testl
shr
pushf
out
inc
stos
test
or
dec
test
leave
aaa
es
ds
mov
outsl
aaa
cmpsl
sbbb
repnz
mov
fwait
test
aad
inc
dec
sahf
rorb
lock
jno
push
loop
je
sbb
in
jp
test
fistpll
movsl
inc
std
jg
jmp
xchg
mov
mov
call
fcmovb
jne
ljmp
dec
fcmovu
mov
mov
push
stc
xchg
cmp
xlat
lock
fidivl
adc
cmpsb
jo
adc
add
out
add
inc
int3
bound
dec
cmc
pop
mov
sbb
push
add
and
adc
sub
sbb
xlat
xor
xchg
lods
add
mov
push
stc
insb
loop
repnz
cs
out
add
add
sbb
outsb
or
in
adc
scas
sub
repz
or
cmp
ret
shlb
sbb
in
shll
adcl
test
insl
aas
cmovns
or
mov
mov
setns
fsubs
mov
dec
sti
adcb
rcll
jmp
mov
stos
inc
dec
mov
add
insb
lahf
fwait
lret
outsl
dec
sub
adc
daa
or
inc
bound
xor
popa
imul
xor
jbe
repz
fsubl
inc
and
mov
xor
addb
sbb
inc
sbb
cmp
fwait
ret
jnp
pop
sbb
pop
cld
xchg
mov
mov
clc
mov
mov
mov
fs
jae
xor
clc
sub
push
cmp
into
pop
imul
sti
fidivrs
xor
adc
jne
push
jns
sub
out
ss
iret
dec
fiaddl
test
push
movl
repz
push
addr16
and
push
push
push
cltd
mov
dec
jecxz
cmp
pop
or
and
adc
pop
and
adc
xlat
mov
mov
push
outsb
insb
cmpsb
cld
stos
and
mov
xchg
mov
aas
and
push
xchg
aam
popf
imul
in
pop
mov
pusha
adc
lret
bound
sbb
call
leave
cmp
hlt
dec
fistpll
cmp
test
xor
push
mov
aam
mov
adc
push
inc
xor
sub
hlt
cli
sbb
pop
mov
scas
pop
dec
xchg
rolb
repnz
das
jb
xorl
xorl
stos
out
inc
jns
xchg
fcmovbe
adc
and
call
pop
xchg
lret
cltd
lds
mov
pop
adc
sub
aas
dec
xchg
dec
cltd
hlt
stos
movsl
mov
add
or
push
in
data16
xchg
cmp
jne
repz
and
into
mov
sbb
aad
pop
idiv
sbb
add
jo
movsl
sub
frstor
xchg
mov
mov
loope
mov
fisubl
aad
mov
jbe
mov
lock
dec
fisttpl
in
mov
dec
out
stc
adc
push
loope
add
mov
lock
lea
int
xor
jnp
movsb
rcll
orb
push
imul
sub
pop
test
or
lcall
xor
xor
pop
mov
mov
cmp
dec
jne
loop
ljmp
aaa
rclb
stos
arpl
stos
stos
push
addl
fcmovne
push
les
sub
push
cmp
loopne
int
jo
jp
rcrb
xchg
lock
sub
add
out
lods
dec
movsb
jecxz
mov
lahf
pop
jle
jnp
divl
mov
pop
sbb
aaa
xchg
call
jbe
ja
ljmp
push
neg
jmp
dec
lret
cs
add
pusha
mov
rcl
push
add
outsl
cmpsl
jnp
shrb
pop
push
jno
lods
push
popa
mov
shr
xchg
neg
add
pop
shlb
std
cmp
repnz
jne
xchg
push
jnp
push
or
pop
subl
mov
stos
ljmp
xor
xorb
mov
aam
cmc
popa
cmp
aad
lcall
rcrb
lahf
jmp
add
std
pop
out
cld
testb
sbb
dec
jb
sar
out
mov
decb
out
div
or
inc
jb
jecxz
inc
xor
rolb
mov
fsubl
push
mov
and
mov
and
push
arpl
mov
xor
add
cs
add
lock
sub
stos
out
insl
loopne
std
sahf
and
repz
and
xor
int3
int
shl
iret
aam
popa
push
das
iret
outsb
es
aaa
jbe
and
cs
push
roll
jne
add
iret
pop
sub
dec
fcoml
orl
jmp
fcmovb
lds
repnz
idivb
and
dec
push
xor
adc
sbb
xchg
dec
cmc
or
adc
push
aam
loopne
cmp
mov
scas
pop
xchg
cmp
adc
popl
es
mov
ja
push
loopne
nop
out
in
xchg
mov
jl
cmp
jge
and
xor
inc
ret
sub
out
and
popf
lret
bound
cmpsl
test
scas
rorw
pop
ja
insb
and
mov
jo
or
pop
pop
jge
cmpsl
sub
flds
testl
fisubs
fists
jbe
stc
nop
movsl
scas
mov
pushw
imul
push
leave
xchg
jae
dec
out
xchg
mov
fildll
mov
mov
icebp
or
push
fimuls
xor
fsubrs
inc
jb
call
lds
mov
aam
fdiv
inc
lea
pop
mov
sbb
bound
jo
xchg
mov
ljmp
shrl
imul
dec
fidivrs
sbb
cmpsb
mov
loop
shll
cmpsb
orl
jl
pusha
clc
in
push
inc
hlt
xchg
xchg
mov
xchg
addr16
cltd
testb
mov
dec
xchg
sub
sbb
inc
xchg
xor
push
add
enter
add
jg
push
gs
cwtl
lahf
lods
in
int3
push
mov
mov
pop
inc
insl
or
push
jne
and
dec
lods
loope
and
ljmp
dec
pop
mov
pop
mov
leave
inc
sbbb
std
and
divl
movsb
ja
mov
hlt
in
in
pop
cmp
ss
call
adc
mov
add
insl
pusha
pusha
je,pn
xchg
leave
sub
jae
dec
ret
aam
cmc
push
movsl
adc
and
out
mov
les
pop
shll
jne
jne
popa
sub
bound
scas
mov
repnz
mov
push
popf
add
cmp
xchg
sub
lret
mov
xchg
in
int3
jno
cmp
inc
xchg
adc
rorb
in
pop
push
mov
push
out
and
lret
and
jns
push
in
insb
mov
add
mov
push
mov
movsl
mov
cmp
int3
jb
xchg
cli
cmp
mov
jae
mov
push
inc
inc
or
ret
xchg
lock
inc
mov
arpl
jb
repz
jnp
adc
test
and
adc
sub
test
adc
fcomi
push
cmp
pop
imul
jle
out
lcall
repnz
xor
cmpsl
xor
stos
mov
enter
dec
xor
es
fmul
mov
fxch
xchg
jne
push
cmp
movsl
insb
and
pushf
jg
dec
gs
fisttpll
xlat
xor
pop
sbb
hlt
stc
jno
jb
daa
add
jne
loopne
call
fildl
mov
or
sub
lahf
lcall
rcrb
movsl
sbb
dec
ret
cmp
int
mov
dec
rcl
subl
jno
push
test
imul
jp
test
mov
push
xor
push
aas
jbe
clc
push
hlt
imul
jge
sub
cmp
add
mov
or
nop
cmp
sub
cmpsb
rolb
sbb
loopne
xchg
add
rorb
xchg
mov
cmp
xchg
repnz
icebp
cmp
add
dec
jno
repnz
cmp
mov
cld
rcrb
xchg
sbb
pop
push
inc
push
jb
jecxz
iret
ljmp
mov
dec
xor
push
jg
adc
mov
popa
bound
sub
bound
enter
sti
inc
jbe
test
inc
mov
mov
xlat
pop
pop
jmp
mov
fsubrl
int3
incl
sahf
test
jo
in
xchg
push
imul
adc
sub
xor
sbb
ja
adc
lods
mov
repz
je
ficompl
cmp
mov
xor
out
pop
fsubl
cmp
mov
cld
jl
icebp
add
add
jns
movsb
mov
and
sti
add
insb
mov
loopne
shrb
lods
jmp
add
out
jae
or
aas
mov
jp
ljmp
stos
xchg
or
adcl
mov
in
inc
fstpl
add
sbb
push
hlt
dec
lds
xor
xchg
cmpb
xor
pop
pop
hlt
movsl
stos
dec
add
movsb
stc
push
loopne
in
mov
mov
cmp
iret
add
ds
dec
fisubs
mov
cmpsl
sub
mov
sbb
fnstenv
add
cmp
cld
xor
mov
sbb
pop
scas
cs
adc
mov
dec
enter
rolb
mov
dec
add
loope
pop
mov
push
cmp
std
and
mov
in
and
adc
and
dec
jae
cmp
xor
ds
fsts
int
dec
sub
jns
dec
fsubrs
and
xor
rcrb
jp
sti
cmpsl
cmpsl
mov
and
loopne
fsub
dec
xor
and
les
out
je
ljmp
ljmp
fsubrp
lds
jae
test
rorb
not
jae
sub
out
rcrb
das
and
testb
pop
in
xor
mov
mov
lcall
andl
push
add
pop
jb
xchg
out
enter
adc
or
or
fildll
popa
fdivr
fcmovnb
and
jle
aam
xor
arpl
roll
push
lods
xchg
inc
and
fdivrl
ds
pushf
jle
iret
jnp
sub
jb
dec
jo
popf
stos
cs
jbe
frndint
jmp
mov
mov
xor
dec
cmp
or
filds
inc
aam
cmpl
sti
repz
lret
inc
or
adc
daa
sbb
dec
push
adcl
arpl
addr16
mov
jmp
jg
mov
pop
popf
mov
or
aas
imul
xor
mov
lds
mov
mov
sub
rcl
nop
mov
mov
rclb
or
std
mov
nop
push
sbb
sbb
dec
xor
ss
shll
inc
fstpt
lret
rcrb
stos
popa
inc
stc
mov
jbe
jp
dec
sbb
xlat
mov
mov
push
sub
push
mov
cli
sbbb
mov
xchg
jp
gs
mov
nop
pop
xor
decb
nop
xchg
sahf
pop
pop
test
mov
jmp
in
les
cmpsb
mov
lock
scas
outsl
imul
and
or
in
fimull
xchg
sti
xor
bnd
mov
jb
pop
std
dec
push
jmp
lds
rcr
push
mov
sahf
dec
jmp
cmp
adcb
sub
inc
lret
gs
movb
push
movsl
xchg
mov
jg
imul
or
mov
inc
push
adc
std
stc
aad
adc
adc
mov
xor
fnsave
pop
insb
lods
aam
xor
cmp
std
push
and
fwait
arpl
nop
dec
sti
add
ja
push
xchg
fiaddl
adc
leave
push
mov
icebp
fdivp
sbb
popf
dec
mov
dec
fs
jno
out
sub
fimull
mov
ficoml
sti
and
push
mov
jae
push
addr16
int3
pop
mov
test
mov
cmpsl
mov
les
sahf
sbb
lea
gs
pop
jnp
jl
mov
jp
mov
xchg
mov
mov
icebp
mov
es
pop
push
and
xor
inc
jmpw
repz
sub
xchg
and
cmpsb
xor
cmp
inc
jns
xchg
rcll
ja
sub
movsl
mov
jecxz
mov
rcll
inc
cs
lcall
fdivs
jb
sbb
sahf
repz
push
xchg
xor
cmp
push
movsl
mov
test
or
ds
inc
jns
out
scas
xchg
ret
mov
fiadds
lahf
cmp
and
ficoms
cld
mov
adc
cld
ret
dec
stc
out
ret
inc
in
dec
xchg
mov
fidivrl
rorl
cmpsb
into
andl
xchg
loop
jae
frstor
ss
nop
mov
fldt
ret
icebp
rorl
mul
jge
add
test
js
mov
adc
pop
ljmp
jecxz
sbb
mov
inc
pop
inc
scas
movsl
or
xor
out
mov
repnz
pusha
sarl
add
cmc
out
test
stos
and
aad
inc
push
popf
or
sbb
pop
lock
mov
pop
loop
in
inc
pop
movsb
jbe
repnz
rolb
xchg
xchg
sbb
stos
sub
or
test
testb
mov
loop
fwait
push
mov
fs
mov
int3
addr16
in
jge
cwtl
lods
xor
mov
xrelease
and
outsl
mov
push
repz
jge
push
sahf
inc
or
pushf
adc
fimull
stc
xor
adc
cmp
shll
sarl
mov
loopne
add
pop
scas
push
addr16
aad
or
mov
xor
jp
outsb
and
repnz
clc
daa
popf
add
subb
mov
xlat
fimull
cld
arpl
add
pop
nop
lods
and
repz
loopne
verw
lahf
scas
push
add
push
loop
in
pop
pop
ss
aad
in
icebp
mov
mov
popa
scas
mov
mov
mov
adc
sarl
add
fldenv
adc
pop
pop
addb
mov
push
out
push
jmp
rclb
xor
ljmp
ficomps
std
aad
mov
nop
test
dec
mov
adc
sub
adc
lret
xchg
and
cmp
leave
sti
mov
xchg
push
push
mov
loop
aad
jle
mov
jno
jge
mov
push
dec
mov
mov
jno,pt
push
push
and
jns
jbe
jge
addb
jne
lock
adc
or
push
js
push
xchg
add
or
movb
mov
rcrb
pop
cs
shll
push
nop
xor
enter
jb
rolb
and
std
mov
cli
div
sti
jg
mulb
xorl
cld
fstpl
cli
jo
sub
mov
ret
and
mov
cmp
xchg
inc
daa
push
pop
pop
dec
xchg
sub
lret
xchg
cmc
push
aad
stc
cmp
dec
sub
push
clc
nop
imul
cmpsb
lea
pop
in
mov
pop
fistpl
jl
out
add
daa
xor
sub
pushf
rclb
push
fwait
or
pop
sbbb
xor
pusha
jge
pop
adc
sub
lahf
add
pop
adc
imul
lods
popf
test
cmc
push
rorb
ljmp
lret
out
inc
shrl
push
dec
xor
rep
jbe
sub
sahf
mov
inc
aam
cmp
push
xor
popa
cmc
xchg
push
les
test
aaa
mov
mov
mov
xchg
cmpl
scas
jg
cmp
mov
add
adc
sub
bound
jp
lea
pop
dec
pop
cmp
jo
fldenv
les
pop
mov
jp
adc
push
mov
mov
inc
dec
imul
int3
mov
arpl
sahf
pop
imul
jno
fisttpll
inc
fs
idivl
xchg
data16
cmp
and
push
fldcw
inc
inc
cmc
sub
test
push
pop
sub
enter
bound
xchg
or
add
bound
in
in
jne
adc
xor
lea
loopne
mov
dec
adc
pop
dec
int
lods
shr
xchg
test
in
lds
ret
or
xor
and
jbe
mov
mov
int
ret
xor
call
and
add
or
outsl
dec
pop
or
sbb
daa
bnd
jl
enter
xchg
xor
iret
add
fsubrs
cmp
sbb
xchg
mov
fbld
idivb
pop
cli
dec
inc
jp
arpl
mov
xlat
and
ret
psubsb
das
or
sti
hlt
jno
xchg
mov
fiaddl
sub
inc
mov
jb
or
xchg
inc
jns
jbe
mov
andb
inc
cmp
push
pop
add
and
jbe
xorb
fcmovu
push
sbb
outsb
push
and
mov
cmpsb
out
xor
test
xor
xor
aad
sub
and
repz
or
and
inc
fsubrl
lahf
xchg
xor
push
push
nop
and
mov
add
mov
adc
push
adc
popf
pusha
jg
addr16
push
mov
mov
test
sbb
jge
lahf
ljmp
cmpsb
leave
loop
int3
cmp
xor
pop
pop
mov
lret
in
jmp
lcall
lahf
inc
sbb
mov
sbb
push
adc
lret
mov
cmpsl
jne
ljmp
fisubl
subb
dec
icebp
xchg
push
ljmp
xor
test
ljmp
add
mov
xchg
jbe
in
call
sarl
lods
cmpsl
test
xorl
data16
loop
sbb
pop
jg
icebp
adc
test
mov
faddp
outsl
movsb
test
mov
rcrb
idivb
and
enter
pop
aad
mov
out
sub
dec
and
xchg
nop
xor
mov
xchg
pop
xlat
data16
cmpsb
repz
fdivrs
ficoml
dec
xor
out
dec
mov
dec
and
dec
dec
add
stos
add
jmp
cli
aad
mov
cltd
push
ss
je
stos
adcb
mov
xlat
push
into
hlt
adc
cltd
out
jmp
pop
lods
nop
test
repnz
jle
dec
insb
jae
rcrb
pusha
enter
rclb
pop
mov
sub
loop
jp
sub
fcoms
rorl
or
mov
mov
leave
sub
shr
push
pop
pusha
ds
outsl
mov
cld
stos
mov
jg
mov
jle
test
mov
out
lea
lea
rcrb
jg
mov
dec
fcmovnb
add
addl
out
gs
mov
out
dec
sti
xlat
or
bound
sub
sarb
repnz
sbb
loopne
stc
test
mov
lret
push
sub
lock
je
pop
cld
add
outsb
push
sub
into
orb
push
mov
fdiv
scas
aam
mov
xchg
insb
dec
roll
cmp
shrl
loope
pop
insl
inc
dec
cmp
ret
and
mov
push
gs
in
mov
dec
sub
push
cmpsl
mov
xlat
lea
std
scas
mov
add
dec
mov
cmpsl
jl
outsb
mov
stc
out
mov
std
pmulhuw
push
jno
in
mov
mov
dec
sbb
push
sahf
mov
or
popf
pop
adc
mov
push
add
mov
xchg
lcall
into
mov
stc
cmp
gs
or
dec
dec
std
pop
xchg
repnz
add
push
push
dec
stos
dec
movl
inc
fcomps
push
and
ds
int3
test
loopne
cli
mov
mov
sbb
pop
adc
scas
je
lock
pushf
daa
outsb
adc
fmull
push
nop
test
xor
jae
or
hlt
jge
mov
push
mov
xchg
bound
or
shl
jg
mov
push
xchg
ficoms
aam
fists
pop
push
cmpsl
mov
push
dec
scas
push
test
dec
jp
int3
inc
cwtl
or
or
jmp
xor
add
and
push
jmp
sub
and
mov
nop
inc
ja
repnz
sahf
xchg
fmuls
inc
mov
pop
outsl
push
push
adc
test
andl
dec
clc
xor
add
sbb
mov
lea
and
and
cmpb
pop
test
push
and
scas
fldt
fcmovnb
adc
xchg
inc
in
xchg
pop
cld
dec
ret
jge
fbstp
je
mov
xor
test
fcmovu
clc
icebp
sub
call
inc
mov
inc
idivl
repz
push
imul
mov
fs
add
xor
inc
sbb
shrb
sbb
fs
adc
call
push
dec
scas
lods
or
icebp
xchg
lcall
jno
cs
mov
jmp
jmp
push
mov
aam
mov
jp
lock
loop
pavgw
mov
arpl
in
insb
sahf
lahf
ss
inc
adc
cmp
lea
repnz
imul
in
mov
pop
mov
std
xor
mov
mov
push
rcl
xchg
data16
sbb
lock
mov
fwait
idivb
push
bound
call
pusha
adc
les
call
mov
aad
add
push
adc
mov
pop
cmp
jns
nop
sub
inc
add
mov
mov
xor
or
mov
mov
adc
cmc
and
test
js
xchg
roll
cmp
shrb
inc
bound
inc
addr16
xchg
dec
cwtl
movsb
mov
repz
mov
sub
add
sbb
pop
push
mov
scas
and
pop
insb
mov
xchg
pusha
or
add
pop
push
mov
push
bound
push
das
pop
jle
mov
fwait
mov
and
call
adc
add
lock
shrl
cmpl
jge
add
enter
mov
or
testb
cmp
and
push
outsb
pop
les
insl
push
cmp
jbe
inc
jle
insl
popf
mov
pop
insl
cmp
xor
fimull
cmp
jp
sbb
pop
nop
pop
fwait
aas
popa
shrb
rcrb
lret
jno
xchg
push
mov
daa
int3
testl
push
pop
rorl
mov
jns
jle
frstor
jno
cwtl
jecxz
repnz
inc
jo
and
or
fsubs
adc
repz
mov
daa
arpl
cmp
xchg
scas
jno
test
mov
int3
push
xor
mov
dec
rcl
mov
bound
ja
rcll
in
jo
or
xor
push
mov
pop
in
dec
mov
push
xor
push
daa
cmp
jno
add
and
mov
out
mov
aas
loop
inc
popf
adc
test
pop
mov
js
out
mov
fnstenv
mov
sbb
dec
push
jmp
sub
pop
adc
rcrb
leave
insb
rcr
leave
sarl
enter
out
xchg
mov
xchg
push
push
cmp
out
push
fisubl
je
pushf
mov
or
dec
xor
sbbl
pop
inc
dec
insb
cli
mov
cmp
daa
lds
enter
fnsave
push
cmp
xchg
inc
fmulp
nop
or
mov
jle
mov
jo
arpl
push
cmpsb
pop
inc
mov
rorb
es
stc
stc
cs
cltd
iret
dec
dec
out
cmp
or
in
mov
pop
cs
jno
mov
mov
push
adc
cmpl
ficoms
lods
jne
or
add
add
popa
pop
lret
jecxz
aaa
std
jmp
sub
imul
int
aam
addr16
push
mov
loopne
lods
cmp
push
push
lret
jge
in
in
dec
fimull
pop
or
xchg
hlt
test
push
pop
subb
cmpsl
and
cli
sub
mov
adc
insl
lods
jg
lahf
imul
sub
iret
or
inc
call
fmul
mov
pop
add
ds
cmpsb
nop
mov
negb
adc
sub
dec
dec
xor
sbb
enter
sub
and
mov
or
inc
daa
sbb
icebp
inc
push
data16
inc
aaa
pop
imul
xchg
sahf
js
dec
jg
shr
outsb
jle
or
push
fists
sbb
ljmp
popf
push
xor
sub
arpl
lea
mov
fmull
ret
hlt
push
loop
ss
inc
orl
and
sub
or
jns
test
cmp
pop
dec
in
call
fsubrl
cli
int3
pop
push
scas
add
mov
xor
sbb
push
popf
xor
cmpsl
jl
sbb
je
pusha
aam
popa
dec
cmp
xrelease
adc
test
fistl
pop
adcl
cmp
adc
in
xor
add
and
lcall
paddusb
sahf
push
mov
je
xchg
jnp
jg
inc
adc
add
xchg
loope
insl
dec
lret
pop
push
popl
outsb
jnp
js
add
ret
pop
jle
push
mov
or
loope
push
out
lds
pop
or
push
xchg
repz
lcall
and
sub
fsubrs
push
or
ret
and
pusha
mov
or
dec
insb
jl
xchg
cmpsb
fnstsw
jecxz
inc
ret
fwait
out
cmpsl
xchg
cli
jbe
in
pop
pop
mov
mov
mov
cmp
inc
cli
mov
outsb
ret
xchg
mov
je
stc
shll
dec
in
nop
in
add
xchg
dec
addr16
bound
xor
pop
add
jno
test
inc
popa
mov
int3
jns
inc
xchg
imul
cld
xchg
out
out
pop
lods
or
std
das
scas
ret
std
popa
mov
hlt
fmul
push
xor
sbb
lods
ret
sub
xchg
dec
inc
loope
scas
jl
fidivl
dec
jp
std
add
cmp
xchg
and
mov
add
addr16
test
mov
aad
subb
mov
lret
push
jecxz
imul
add
adc
sub
pop
add
lret
out
dec
inc
inc
push
and
in
or
test
or
mov
pop
cmpsb
test
jle
cmpsl
push
test
out
pop
insl
mov
and
cmovnp
cwtl
inc
or
mov
repnz
sbb
mov
pushf
jge
xor
mov
mov
mov
jle
fldenv
das
dec
std
and
jecxz
loopne
lock
sub
xchg
mov
dec
shll
shlb
sbb
out
neg
mov
xor
enter
push
sti
out
sub
aas
jbe
adc
insl
pop
jl
sbb
or
in
xor
or
sbb
aaa
fadd
cld
mov
cmpsl
mov
or
popa
addr16
dec
insl
imul
imul
xlat
xchg
shlb
and
adc
test
popf
and
lea
mov
xor
in
outsl
loope
arpl
mov
jo
ficoml
xchg
ret
enter
fnstenv
nop
mov
cli
push
jbe
ja
inc
jp
mov
pop
jmp
sbb
jb
jle
sbb
xchg
daa
lret
jnp
push
push
mov
fsts
xlat
xchg
jne
mov
adc
pop
add
or
stos
xchg
imul
mov
loop
insb
dec
aam
mov
push
sub
pusha
sub
lds
sub
push
jbe
jno
mov
movl
test
jg
bound
xchg
push
insl
aaa
enter
fs
pop
in
lods
sub
mov
mov
stc
sub
pushf
pop
push
jecxz
xchg
int3
pop
mov
and
daa
push
jp
inc
test
lods
and
push
sub
bound
sahf
cmp
jecxz
xchg
mov
pop
push
sti
jae
inc
add
dec
orb
divl
mov
mov
jbe
or
or
and
cltd
shlb
rolb
adc
outsl
lahf
hlt
ret
adc
adc
mov
out
sahf
mov
mov
push
orb
adc
jge
loope
mov
mov
pop
mulps
test
adc
dec
and
es
aas
stos
popf
mov
sub
jp
cmpsl
out
sbb
mov
sbb
mov
pop
jbe
mov
lahf
pop
icebp
adc
ret
out
mov
fwait
push
sub
xchg
stos
mov
stos
xchg
xlat
adc
mov
and
lret
sub
xchg
ja
push
push
inc
inc
add
adc
pushf
sbb
add
pusha
std
or
cmp
ja
and
sbb
mov
mov
test
add
jnp
scas
and
sahf
jle
es
cli
jmp
xor
in
das
dec
pusha
shll
movsl
fistl
mov
pop
in
into
mov
xchg
xor
cmp
notl
and
cmpsb
mull
add
pop
mov
lock
mov
cmp
out
sub
sti
xchg
aaa
cltd
xor
dec
negl
pop
iret
cs
outsb
jb
and
mov
data16
and
mov
mov
or
or
mov
sub
stc
test
sbb
inc
divl
inc
mov
pushf
mov
xchg
call
out
sub
pop
mov
add
int3
into
adc
sbb
fdivr
lcall
mov
cld
sub
xor
push
mov
cmpsl
mov
jl
mov
in
pop
dec
jp
push
adc
out
sbb
pop
mov
incb
mov
mov
inc
and
sub
jge
mov
fucomi
sub
jl
mov
pop
inc
mov
or
jl
push
xorb
cmp
cmc
mov
inc
aas
pop
dec
ret
aam
pop
jae
cli
mov
or
inc
xor
lods
jns
pop
push
mov
jbe
cmpsb
adc
sahf
or
fwait
pusha
and
ds
hlt
subl
clc
and
mov
adc
stos
mov
push
jecxz
cmovb
repz
icebp
mov
push
adc
mov
ljmp
sbb
fsubrs
imul
sbb
xchg
dec
xchg
sbb
mov
fdivrs
mov
dec
dec
sbb
inc
cmpsb
or
call
cmpsl
mov
push
lea
sbb
out
cltd
mov
push
jecxz
or
cmpsb
lahf
stc
jns
outsb
xor
aad
test
mov
push
jp
orb
xchg
rcr
push
push
push
and
pusha
dec
jmp
clc
or
enter
xchg
and
cmpsb
daa
sbb
mov
movsb
scas
push
subl
adc
jle
mov
xchg
sbb
jbe
xor
inc
lock
adc
adc
jae
mov
pop
push
mov
xor
pop
cmpsl
dec
xchg
push
and
test
fsts
enter
aaa
aad
cmp
int3
or
fistl
ret
dec
adc
cs
sub
adc
dec
fsubrp
jle
adc
pusha
ja
pop
mov
adc
xchg
xor
pop
and
shlb
pop
dec
js
ret
dec
outsb
mov
sbb
pop
enter
scas
enter
lcall
lcall
xchg
stos
fsubl
jno
xor
gs
mov
in
icebp
jecxz
mov
lahf
movsl
mov
adcl
add
sbb
clc
inc
inc
push
cmp
xchg
pop
loop
js
mov
aaa
rol
pusha
mov
in
jle
push
jmp
fwait
mull
xchg
ss
in
inc
push
lahf
or
mov
sbb
js
push
push
outsb
pop
cmp
movsb
enter
dec
mov
add
scas
stc
sbb
loop
xchg
xchg
sub
push
mov
pushf
rcrl
orb
popa
cmpsl
cmp
cmp
rcrb
adc
dec
xor
cmp
xlat
pop
mov
cwtl
lds
cld
cli
mov
call
into
cltd
xor
xor
push
jns
andl
add
mov
cmp
lcall
das
add
jb
out
mov
ljmp
and
jg
es
fdivrp
xadd
xor
arpl
in
mov
or
js
repnz
mov
push
push
data16
dec
mov
ljmp
dec
sub
shrb
jnp
push
xlat
ja
mov
mov
mov
in
sbb
jp
mov
aad
imul
sub
push
daa
or
mov
std
addr16
mov
xchg
mov
cmp
out
sub
sub
cld
inc
insb
add
loop
ja
inc
xchg
and
adc
sub
rorb
add
xchg
dec
or
repnz
cli
cmp
popf
mov
mov
insl
jnp
mov
xor
push
insb
cmpb
ret
sbb
shrl
pop
mov
notb
in
mov
popf
mov
stos
xchg
stc
in
push
inc
mov
or
or
rorl
lock
aaa
bound
cmp
lret
test
cmp
cmp
or
gs
mov
aam
sbb
xchg
sti
fldl
imul
pop
fstpt
cltd
jle
aas
jns
mov
js
xlat
gs
lods
or
hlt
inc
jmp
iret
movsl
imul
insl
pop
jnp
into
pop
rclb
pop
pushf
jle
in
lahf
push
push
icebp
xchg
je
xor
mov
mov
pop
sub
aaa
jecxz
scas
fld
ljmp
rcrw
aaa
and
mov
leave
nop
lock
mov
add
cwtl
xchg
mov
ljmp
leave
jb
xor
imul
idiv
popa
push
in
lahf
or
lods
into
cmp
jp
mov
ljmp
sub
sub
imul
jne
push
sbb
xchg
mov
push
and
push
sbb
inc
jns
add
ljmp
pop
add
push
mov
in
xor
mov
in
mov
movsb
not
jge
lods
add
pushf
mov
js
cmp
mov
ja
add
and
dec
push
mov
and
fstpl
push
test
and
pop
adc
mov
cwtl
cwtl
and
out
cmpsl
push
xor
mov
jmp
jg
nop
add
xor
mov
or
ss
pop
iret
repnz
and
dec
enter
test
fwait
je
sahf
jne
sbb
icebp
popa
es
pop
or
or
jg
sbb
call
add
push
fs
data16
cmp
dec
stos
insl
dec
cmp
bswap
dec
ret
aam
push
push
jmp
jle
inc
mov
push
js
cmpsb
or
cmpsl
call
mov
clc
push
test
add
repnz
into
and
test
data16
fnstsw
dec
pop
inc
rclb
add
add
dec
fidivrl
mov
popf
push
out
rorl
and
popf
jl
mov
jbe
and
cli
xor
aaa
jnp
sbb
not
imul
testb
pop
sub
cmc
enter
sbb
jmp
stos
xchg
mov
dec
dec
cmp
jge
mov
push
cmp
mov
outsb
xor
pop
pop
lods
mov
mov
insb
jl
call
sub
mov
and
fnstenv
aaa
scas
insl
pop
icebp
dec
add
lds
ljmp
imul
mov
es
pop
int3
xor
or
pop
cmp
pop
dec
mov
js
imul
mov
repz
mov
xchg
sub
add
lds
mov
out
inc
mov
cs
fneni(8087
mov
inc
push
data16
shlb
mov
mov
sub
sub
jl
jae
push
mov
mov
lds
stc
cmp
mov
shl
lock
out
hlt
push
nop
mov
cs
cmpb
repz
and
push
movsl
add
insb
aam
xchg
popa
lret
xchg
test
int3
cmp
fistps
cltd
add
cmp
push
or
hlt
leave
mov
xchg
insl
sbb
cs
cmp
and
lret
jb
push
stc
mov
shlb
mov
push
inc
mov
lds
dec
test
pop
mov
cld
inc
dec
fimuls
sub
sbb
mov
fiadds
inc
aaa
fsts
mov
jecxz
xchg
jge
pop
mov
addr16
sbb
mov
lcall
ja
adcb
loop
cmc
xor
cmpsb
dec
xchg
or
mov
jle
sahf
sbb
pop
mov
cs
inc
cs
hlt
xor
inc
xor
inc
mov
mov
in
sbb
dec
mov
dec
aad
fbld
ss
cmp
push
clc
cli
mov
mov
mov
jmp
jns
stc
in
pusha
out
insb
lea
gs
adc
adc
int3
adc
push
adc
addr16
add
jo
ret
pop
add
pop
push
jb
xor
xor
hlt
repz
out
xchg
in
inc
mov
nop
sahf
test
mov
dec
mov
loopne
dec
in
rorl
pop
xchg
add
clc
ret
rep
loope
dec
mov
insl
orl
stc
daa
mov
dec
xchg
lods
sub
push
jg
dec
dec
jecxz
add
xchg
pushf
xor
js
sub
out
arpl
push
repnz
mov
and
mov
daa
cmpsb
or
cmpsl
addr16
and
out
push
movsl
and
mov
roll
pop
pusha
mov
add
mov
mov
ja
test
roll
add
pusha
faddl
and
fidivrs
ljmp
test
loope
insb
jns
push
cld
out
push
mov
out
stc
test
aas
mov
cltd
pop
mov
je
fdivr
mov
xchg
fucom
jp
sub
jmp
sbb
mov
or
pushf
shll
int
lea
sub
inc
sbb
bnd
das
jne
out
xor
cld
or
fbstp
std
xchg
jns
mov
push
mov
sub
add
daa
pop
jae
jp
add
mov
sub
fiaddl
popw
cmp
cmp
mov
cmpsb
cltd
jp
mov
leave
add
jg
imul
fisttpl
aad
add
adc
dec
push
push
xor
cld
or
loop
mov
andl
test
mov
or
mov
jg
jnp
aas
mov
sbb
cmpsl
add
insb
lcall
or
fwait
dec
sub
xchg
aas
aad
cmp
jbe
lcall
jo
into
xchg
out
jmp
pop
mov
movsl
nop
push
daa
mov
jecxz
call
fcoms
fimull
mov
cmp
xchg
mov
lcall
sti
jne
testl
mov
stos
test
andl
popl
mov
mov
aaa
je
leave
lea
jmp
test
xchg
icebp
mov
ret
aas
mov
xor
jnp
jecxz
dec
in
xor
jmp
push
push
xor
movsl
sbb
and
mov
movsl
clc
mov
xchg
std
adc
addr16
inc
push
arpl
fwait
sahf
fdivs
lock
fs
mov
xor
mov
mov
sbb
pop
xchg
xchg
mov
mov
jae
rcrb
mov
adc
sub
sbb
out
sbb
and
sbb
push
aam
xchg
popf
push
add
arpl
cmc
xchg
push
dec
xchg
mov
jae
cmp
mov
test
add
sub
shll
and
lret
popf
xchg
jle
ror
dec
call
jno
inc
push
mov
pop
test
fsubl
jns
call
js
dec
test
push
popa
push
mov
inc
jne
pop
pop
and
test
jl
aas
ficoms
mov
mull
call
sbb
test
ds
cmc
sub
and
call
xchg
or
insb
paddd
out
push
and
push
sbb
ss
or
adc
icebp
fs
loope
repz
jmp
shr
or
iret
lods
aam
mov
arpl
push
daa
xchg
mov
mov
das
lcall
sbb
adc
adc
jg
test
pusha
pop
inc
pop
shrl
and
mov
jecxz
loop
sub
sti
add
add
fcompl
shlb
adc
or
das
lods
lret
les
int3
addl
adc
lock
or
or
cmp
rcr
mov
jp
je
bound
aaa
repz
outsb
mov
sbb
or
jae
xorl
in
fstpt
addr16
shll
out
cmp
repz
enter
mov
xchg
hlt
jnp
ss
pusha
ret
out
mov
std
popf
inc
fucomi
fsts
mov
inc
ret
push
imul
mov
lret
aad
js
cli
mov
repz
mov
lea
push
sbbl
cli
xchg
sub
cli
aam
mov
xchg
or
imul
or
and
cmc
push
out
mov
cmpsb
pop
into
ds
mov
addr16
push
mov
xor
or
mov
lahf
cmp
in
decl
and
negl
pop
scas
dec
jne
icebp
cmp
mov
hlt
xorl
ret
enter
loopne
adc
mov
repz
sti
insl
rorl
xchg
sub
lods
pop
or
lcall
and
lahf
mov
jle
test
idivb
out
inc
add
dec
fiadds
pusha
xor
int
jmp
std
mov
outsb
clc
pop
xlat
xor
mov
dec
sub
push
mov
in
pop
mov
add
cmpsl
mov
cmp
inc
out
xor
inc
xchg
xor
sbb
mov
sbb
aam
pop
or
scas
jge
xchg
push
dec
pop
lods
mov
inc
outsl
pop
add
cmp
jns
aam
push
jbe
push
push
and
ljmp
inc
pop
pop
test
test
inc
and
aam
inc
stos
xchg
iret
es
inc
daa
sahf
std
pop
sti
je
adc
jo
in
sbb
mov
mov
mov
into
dec
das
inc
out
outsl
sbb
add
dec
sbb
sub
jp
test
scas
and
cwtl
insl
lea
inc
ret
cmp
add
mov
outsl
mov
push
stos
cmp
add
cli
sub
mov
jns
push
mov
je
rcll
stc
int3
xor
sub
fst
mov
dec
xchg
test
mov
lahf
adc
repz
movsl
mov
lea
movsb
xchg
nop
in
out
scas
mov
jg
sahf
mov
xchg
xchg
stos
and
fwait
sti
pop
imul
jo
sub
leave
popf
data16
sub
sub
adc
sbb
xchg
loopne
scas
jecxz
enter
movsb
mov
repnz
jae
jnp
lds
sub
out
movsb
cli
mov
lock
pop
adc
inc
movsb
pop
cmpsb
xchg
sbb
push
xchg
sub
fsubs
jns
jmp
aad
loope
dec
pop
rcll
stos
xor
mov
lea
inc
cli
dec
insl
lds
stos
pop
gs
pop
hlt
jno
ja
ret
cmp
popa
lret
repnz
lahf
rcl
subb
pop
arpl
jns
xchg
xchg
bound
std
stos
mov
in
jns
fiadds
repnz
lcall
popf
cltd
das
movsw
lcall
fnstsw
cmp
stos
jns
imul
stos
push
pop
arpl
jnp
inc
test
dec
mov
cltd
sub
mov
jnp
sub
outsl
stos
xchg
aad
movsl
shrb
jp
test
xor
sahf
xchg
outsl
sbbb
in
out
or
movsl
loop
stc
dec
shrl
jo
fiadds
and
addl
xlat
lds
daa
adc
fadds
sbb
xor
cmpsl
fidivrs
jbe
dec
jo
mov
inc
jmp
or
xor
imul
push
icebp
sbb
push
mov
push
mov
pop
pop
mov
add
pop
push
ret
xchg
out
xchg
iret
rolb
lds
insb
shl
aas
push
lret
lds
and
lret
outsl
test
push
ljmp
dec
sub
repnz
adc
mov
setl
bound
pop
mov
inc
pop
fdivr
leave
pop
and
xchg
add
jo
in
adc
dec
icebp
pop
push
xor
jmp
setp
arpl
xchg
daa
add
xor
call
andb
lret
add
pop
mov
lea
mov
gs
or
loop
xor
pushf
dec
in
subb
mov
cmp
sbb
inc
and
jle
xchg
fsubr
jnp
dec
jecxz
mov
sbb
pop
pop
jne
mov
vmwrite
ss
icebp
dec
jge
or
lahf
mov
xor
jl
cmp
add
xor
and
das
lock
loope
sub
mov
mov
pop
mov
lods
dec
in
adc
in
pusha
mov
repz
rcrl
shll
rclb
enter
sbb
jae
aas
repnz
fs
add
sub
xchg
lods
mov
mov
mov
mov
sbb
adc
xchg
pop
add
das
imul
sti
lock
dec
mov
bound
cld
mov
or
leave
notb
test
cmp
ds
adc
ret
add
mov
insb
sbb
ljmp
lret
mov
scas
cmp
jmp
jle
loope
and
push
repnz
ljmp
xchg
xor
pushl
lods
push
jmp
pop
mov
gs
dec
dec
addb
cli
insl
das
pop
inc
jnp
push
jl
mov
cmp
jne
mov
flds
popa
mov
mov
in
arpl
in
mov
lds
ret
les
scas
cmp
xor
pushf
loope
insl
lret
inc
xchg
out
ret
mov
int
xor
lods
mov
iret
inc
jp
andb
int3
dec
sbb
loopne
mov
inc
mov
sti
jmp
insl
shll
xchg
mov
ja
pop
loopne
mov
cmp
aaa
cld
pop
test
ljmp
and
fcompl
cwtl
dec
xchg
mov
andl
jp
xchg
lods
in
mov
ljmp
mov
adc
fidivl
aam
mov
cmp
add
lret
fdivl
push
es
ret
lret
add
shrb
push
aam
mov
jl
fbld
push
fdivrl
into
hlt
stos
imul
fcoml
jo
xchg
mov
ljmp
shrb
clc
sarl
jmp
xor
or
add
inc
lea
cli
xchg
stc
call
and
lds
test
jnp
mov
movsb
or
jp
or
loopne
rclb
mov
mov
mov
xchg
mulb
push
ret
mov
mov
scas
mov
xchg
jmp
pop
insl
pop
je
dec
adc
andl
cmp
jbe
jns
mov
adc
jbe
pop
mov
pop
dec
fistpl
and
pushf
pusha
jecxz
xor
mov
pusha
jl
cmp
jge
loope
ucomiss
insl
jns
xchg
push
mov
mov
jmp
das
jns
mov
call
pop
bnd
add
repnz
test
out
ds
xchg
or
pop
ljmp
pop
jne
fimull
xor
sub
imul
aad
aaa
cmp
xor
cmc
lods
scas
dec
xchg
in
dec
addr16
cltd
mov
adc
lods
sub
push
in
add
cmc
pop
push
sbb
adc
leave
outsb
fcoms
stos
cld
mov
sarb
stc
sbb
orb
or
adc
push
dec
cmc
jo
mov
or
subb
cmp
mov
mov
js
icebp
mov
adc
dec
mov
rcll
jp
aam
inc
or
movl
jae
loopne
mov
inc
andl
mov
jl
rolb
dec
sahf
scas
jecxz
sub
inc
pop
gs
lcall
clc
xchg
test
mov
add
mov
xchg
add
cmp
lahf
aaa
and
mov
ds
sbb
push
mov
jmp
mov
imul
sbb
mov
out
or
fldt
adc
inc
add
rcrl
mov
fcoml
and
sub
mov
lods
inc
lret
out
movsb
test
pusha
aaa
pop
pop
orl
jl
loope
bound
cs
les
popf
pop
lods
std
shll
pop
push
insl
sbb
fimull
lods
jns
push
cmpsb
lds
call
mov
pop
popa
cs
cmpsb
aad
cmc
and
js
sahf
and
cltd
xchg
and
das
hlt
das
bound
inc
repnz
rorl
inc
xor
lcall
cmp
sub
fnstenv
lods
cltd
jecxz
and
cmp
mov
push
xor
pop
test
dec
lret
loop
lahf
pop
aam
xchg
jg
pop
repnz
push
insb
jl
cmpsb
xor
push
cld
mov
and
push
mov
or
mov
hlt
push
xchg
cmp
ret
fcmovne
lods
lock
adc
xchg
dec
andb
sub
mov
rolb
pop
sub
jne
sbb
shr
push
movaps
xchg
xchg
in
bound
in
cmp
cli
call
data16
mov
mov
inc
out
sbb
push
push
rcl
mov
loopne
jb
or
aam
xchg
sbb
add
sub
testb
and
daa
and
fwait
imul
or
cmp
adc
jo
adc
xchg
fsub
shld
repnz
insl
xlat
fdiv
leave
cld
mov
movsb
pop
loopne
jle
push
sub
decl
cmpsl
push
mov
sbbl
js
mov
xchg
out
int
in
pop
xor
lods
add
or
outsl
xor
ss
and
xchg
insl
sbb
insl
dec
add
insb
cmpsl
push
inc
jb
jbe
add
arpl
int3
adc
lds
mov
jle
pop
jbe
dec
jae
mov
cmp
das
movsl
bound
add
hlt
inc
aaa
adc
xor
lahf
in
lds
shlb
xchg
or
dec
sbb
push
xchg
sarb
mov
or
pop
das
pusha
pop
mov
scas
mov
cwtl
stos
call
and
jmp
fnstcw
fsubl
ds
ja
mov
or
cmpl
push
xchg
and
popf
pop
loopne
or
xchg
inc
in
dec
ret
ds
or
pop
push
insb
fsub
jae
add
dec
dec
aas
movsl
lcall
and
pop
pop
mov
jge
rcl
xor
loopne
imul
test
dec
mov
enter
cmpb
adc
daa
sahf
dec
les
push
daa
inc
and
aam
scas
adcb
cld
adc
sbb
lods
bound
and
jne
adc
icebp
jns
shrb
cmp
push
loope,pt
dec
shrb
push
mov
fdivr
addb
inc
cmc
mulb
and
fldl
sti
cmp
dec
std
js
pop
cwtl
imul
outsb
or
push
add
mov
cmp
xchg
cmp
mov
adc
mov
pop
mov
jb
ss
jb
movsb
push
jmp
fildl
push
sub
mov
push
cmp
dec
dec
sub
and
mov
inc
push
adc
push
sbb
xchg
dec
xor
jb
es
mov
arpl
cwtl
jmp
cmp
pusha
mov
lods
inc
test
lcall
push
push
push
dec
popf
lock
pop
popf
sbb
xor
sahf
int3
cmp
ret
pop
lret
sbb
pop
lock
into
out
imul
insb
adc
sarl
inc
add
fiaddl
and
int
mov
das
bound
or
mov
cmp
in
dec
push
fsubr
cmp
shll
and
clc
aam
inc
nop
cltd
jno
fidivrl
jp
xchg
out
aad
pop
and
sub
xchg
lea
mov
incb
inc
push
or
fiaddl
popa
add
xor
cmp
ss
dec
mov
jbe
ret
xlat
outsl
cmc
sbb
push
insb
pop
xchg
in
sub
sbb
dec
popa
push
test
jbe
inc
push
sbb
imull
test
mov
push
add
mov
fistpll
dec
movsb
icebp
mov
pop
clc
testl
les
mov
les
push
test
pop
xchg
and
jns
das
inc
sbb
sub
dec
inc
cltd
jo
rolb
jb
mov
movb
iret
xchg
add
mov
out
rorl
sbb
cmp
loop
mov
xchg
jecxz
ficompl
add
cmpsl
mov
lcall
push
cltd
push
sahf
mov
push
popa
adc
in
cmp
bswap
cld
gs
imul
stc
bound
mov
dec
imul
mov
dec
mov
rcrb
sarb
arpl
jge
cmc
shl
out
xchg
fadd
pop
mov
mov
fwait
cmp
lods
dec
jp
sub
icebp
pop
out
out
cli
test
inc
xor
cs
data16
sub
sub
lret
ljmp
ret
out
out
leave
mov
push
add
xchg
addr16
pop
popf
lahf
orb
push
pop
std
cmp
cs
or
lret
cmpsl
fildl
outsb
mov
idivb
pop
bound
cmp
mov
add
shl
xor
mov
gs
inc
arpl
stos
or
lcall
insb
dec
jns
jg
xchg
cmp
push
sub
add
pushf
sbb
mov
push
jmp
dec
insl
jge
xor
jae
js
dec
ret
ficompl
mov
mov
mov
imul
mov
push
les
dec
hlt
xor
add
cmp
imul
push
ds
lret
popa
movsb
add
leave
add
mov
in
lret
pusha
xchg
in
les
cmp
mov
jb
push
jg
xchg
add
and
test
mov
int
and
loopne
or
cmp
in
ljmp
xchg
cwtl
loop
jb
sub
sbb
rol
jbe
scas
add
pushf
pusha
jmp
lahf
out
call
sub
jge
pop
scas
std
repnz
std
cltd
shll
pop
inc
outsb
dec
pop
dec
or
insl
in
out
mov
pop
pop
int3
jnp
pop
pop
cmp
add
sarl
push
sbb
push
lea
sbb
sub
pop
jb
add
jmp
fisttpl
mov
popa
cwtl
dec
mov
dec
mov
subl
mov
mov
fists
cmp
cmp
mov
mov
push
sbb
dec
adc
adc
loop
adc
sub
or
int3
jbe
pop
test
leave
int3
jnp
adc
cmpsl
fnstsw
and
xor
dec
dec
cmp
repnz
out
add
inc
icebp
aas
loope
aaa
jp
aam
daa
ficompl
popa
mov
pop
cmp
pop
cmp
dec
ljmp
frstor
mov
fdiv
sar
add
xchg
fucomi
loop
loope
adc
aaa
jecxz
or
inc
in
mov
xor
add
inc
pushf
sbb
inc
adc
insl
sub
inc
mov
cld
dec
jecxz
mov
cmp
dec
int
jle
mov
shll
mov
pop
xchg
cmp
icebp
mov
outsb
add
jp
cs
inc
mov
mov
or
adc
and
and
aad
mov
pusha
sbb
andb
mov
outsb
fisttpl
outsb
test
out
sahf
dec
popf
sahf
xor
js
jb
add
rolb
lods
outsl
pop
push
jae
push
shl
in
jl
jo
xchg
aad
arpl
mov
sarl
test
faddp
int3
ds
dec
lcall
inc
cmpl
scas
test
fs
repnz
mov
loopne
pop
jae
fistl
or
xchg
mov
cmp
cld
adc
dec
sbb
out
fstl
dec
mov
test
mov
lds
pop
inc
push
and
xchg
mov
pop
fidivs
or
rcll
jl
sbb
mov
lret
test
add
cli
push
xor
mov
into
test
xchg
and
xchg
fstpl
xchg
sarb
stos
sbb
and
test
adc
adc
ret
out
int
into
pop
xlat
fsub
rorl
fcmovb
dec
push
sub
lock
loope
ds
dec
adc
pop
jbe
xchg
arpl
pushf
les
mov
pop
xor
aad
pop
or
data16
and
jmp
std
mov
into
or
xor
dec
jbe
push
std
push
les
stos
aam
int
lret
aam
xchg
xor
xchg
adc
lods
or
mov
fmuls
cmp
loope
cmp
in
lods
add
cmp
out
or
jnp
leave
cmp
sub
add
pop
mov
inc
lcall
xchg
movsb
fdivrs
fwait
stos
dec
movsl
rcrb
lcall
ret
mov
cmp
iret
xor
lret
inc
mov
lahf
mov
outsb
jmp
int3
scas
mov
push
mov
jb
das
mov
int3
cmp
push
push
scas
imulb
push
pop
ds
pushf
dec
push
test
inc
fsub
add
bound
add
pop
dec
mov
mov
fwait
mov
and
in
jae
inc
xchg
sbb
in
outsl
mov
mul
sbb
xchg
lahf
enter
mov
arpl
jg
test
ret
scas
scas
cs
aas
fisttps
sub
shll
inc
testl
jge
inc
inc
mov
cwtl
movsl
imul
lock
jmp
mov
xor
pop
jb
lods
and
or
lock
mov
cmp
add
out
mov
sbb
pop
ret
jb
cld
mov
stc
mov
shr
xor
or
cwtl
mov
jno
loope
idivl
in
orl
mov
aaa
or
jnp
pop
mov
lcall
add
push
cmp
out
inc
sarb
movsl
pop
jns
adc
aam
sbb
loop
push
pusha
xor
dec
mov
xchg
or
call
pop
rolb
mov
or
lcall
jge
dec
mov
mov
mov
inc
inc
sbb
xor
mov
mov
inc
jle
xlat
add
jmp
pop
dec
inc
adc
in
sbb
jbe
sbb
popa
test
and
pushf
mov
sub
test
adc
pop
push
lock
sbb
in
js
dec
mov
sbb
mov
mov
out
mov
test
movsb
sbb
cltd
mov
int3
add
pop
lds
bound
xor
mov
adc
dec
call
addr16
mov
cli
movsb
iret
imul
ret
dec
clc
fdivl
xor
data16
sub
fistpl
xor
xchg
call
pop
cvtpi2ps
jmp
testb
shlb
cmp
and
in
repnz
jecxz
push
adc
mov
in
xchg
lods
jb
and
cmp
arpl
js
jae
fstpt
fdivl
jne
in
dec
and
jae
fiaddl
pop
push
push
sub
mov
test
mov
in
insl
lods
mov
je
out
dec
inc
insl
cld
fsubs
lock
sbb
pop
call
movsl
sbb
bound
jns
push
mov
imul
pushf
outsb
lcall
sub
aas
repnz
decb
out
dec
pushf
mov
fucomp
push
sub
jb
jne
fnstenv
in
insb
pop
cmp
push
mov
in
movsl
and
ret
xor
repz
insb
popf
mov
loop
and
int
xor
cwtl
jecxz
enter
movsl
sbb
mov
xlat
jg
ss
jns
loopne
add
cs
out
push
fsubp
push
xchg
and
cmp
and
mov
in
andl
hlt
xor
hlt
cmp
loop
fldl
add
mov
iret
fistps
adc
push
mov
movsl
pop
icebp
sbbl
in
cmp
pop
adc
add
pop
es
mov
dec
jns
and
stc
jae
cmpsb
sbb
stc
loopne
jecxz
mov
icebp
shl
xchg
dec
cmp
push
mov
inc
adc
jnp
test
cmp
sbbl
outsb
push
in
addr16
in
shlb
lock
mov
or
mov
inc
xor
add
test
pop
rcl
jle
xor
sub
shl
sti
xor
decl
stos
dec
jbe
bound
lods
mov
testl
jmp
or
out
mov
sahf
lds
in
scas
mov
and
fdivrs
js
sarb
mov
es
push
push
fsubs
and
push
dec
imul
shrb
decb
push
fbld
lret
addl
stc
sub
jmp
mov
xchg
lahf
and
insl
sbb
jno
pop
mov
lods
cld
sarb
sbb
sub
or
jo
push
daa
pop
loopne
enter
rcrl
nop
xor
rolb
scas
jp
jnp
idivb
imul
cmp
xchg
cmp
fucomi
xor
xor
cs
and
sahf
icebp
sub
fsubs
or
xchg
and
es
shll
sahf
add
fs
in
insb
ror
jp
sub
mov
jne
or
pop
insb
in
scas
ja
mov
mov
hlt
add
dec
xchg
sub
and
push
das
addr16
cmp
jbe
mov
sub
insl
xchg
test
ret
movsb
filds
pop
mov
sbb
repnz
dec
or
popf
dec
popa
sahf
dec
jg
mov
in
jg
vmread
inc
aam
shll
sbb
pusha
call
lea
jmp
in
mov
mov
pop
fld
movsl
pop
xchg
sub
test
outsl
mov
xor
push
lret
xor
pusha
adc
jmp
push
aam
mov
push
mov
outsl
cmp
pop
push
dec
inc
pushf
xlat
out
jmp
addr16
push
sub
jmp
xor
and
mov
call
xor
dec
inc
test
insb
and
mov
mov
pop
insl
mov
lcall
aas
pop
inc
pop
adc
mov
jbe
insb
sub
js
push
stos
std
add
adc
xchg
jmp
lret
mov
push
aas
push
mov
mov
in
pushf
xor
or
cmp
jp
dec
cmp
cwtl
pop
lods
cmpsl
mov
orb
stos
sub
fistl
or
dec
sahf
pop
fcmovne
or
test
daa
cmp
and
mov
dec
cmpsb
lea
subb
cmp
nop
lea
adc
fwait
and
jl
and
xor
sbb
sub
fisttpl
loopne
or
or
or
les
in
push
xor
pop
inc
fistl
cltd
push
sbb
and
fsubrs
hlt
sub
daa
dec
inc
dec
mov
daa
out
push
mov
xchg
jmp
aam
scas
repnz
pop
pushf
mov
mov
and
push
inc
add
cmp
add
push
out
fs
dec
sub
inc
ds
lcall
dec
test
int3
sbb
push
stos
sbb
mov
and
fsubp
fs
jmp
dec
and
or
xchg
subb
pop
lahf
imul
sub
aaa
sub
shll
pop
pop
lock
nop
push
aaa
scas
mov
in
jl
data16
jle
add
jp
xchg
cmp
sbb
adc
adc
enter
rcrl
sub
mov
inc
leave
std
sbb
ds
inc
push
out
iret
jp
and
cld
inc
movsb
cmp
icebp
xorl
pop
mov
add
mov
mov
call
inc
int
jg
lds
sbb
mov
pop
xchg
sti
jbe
js
imul
pop
jae
insb
jb
pop
sbb
repnz
shlb
sbb
inc
mov
ja
sbb
push
lahf
inc
add
fildl
adc
and
movsb
dec
int3
push
push
clc
or
jne
int
inc
sbb
stos
sub
std
repnz
bound
mov
mov
inc
addr16
out
mov
mov
jmp
and
sub
js
jle
les
cmp
sbb
sbb
int
test
jmp
mov
sub
clc
test
out
mov
jmp
mov
mulb
fiadds
inc
in
add
icebp
shlb
jno
xchg
mov
in
xchg
or
and
ljmp
sub
sub
mov
fucomi
lcall
pop
in
jbe
loop
cld
fdivl
mov
and
dec
pop
push
pop
popa
aaa
mov
mov
or
pop
int3
es
cmp
xor
cwtl
and
imul
push
imul
push
inc
aam
cmpsl
fwait
sahf
movsl
adc
cmp
inc
cmp
lods
mov
scas
dec
data16
in
or
push
push
pop
inc
rorb
push
xchg
popl
cmp
xor
jl
nop
mov
or
push
fists
xor
dec
xchg
aaa
or
mov
and
and
cmp
enter
add
xchg
loop
inc
xorb
das
pop
imul
mov
xchg
adc
push
dec
das
loop
add
jl
and
std
inc
sub
xor
iret
negl
rorl
mov
xchg
int3
adc
fwait
lea
xchg
mov
or
push
ljmp
subl
xor
jmp
sti
movsl
jp
xchg
cmp
adc
adc
and
ja
jmp
pop
or
jo
addr16
out
mov
rclb
idivb
jg
fwait
retw
and
ss
outsl
inc
in
pusha
cmp
adcb
mov
fnsave
mov
jb,pt
xchg
stc
dec
cltd
leave
sub
in
mov
clc
xchg
push
inc
rcl
push
sbb
or
adc
sub
sarb
jecxz
xor
fnstenv
and
fsub
iret
adc
xchg
xchg
insl
inc
mov
jg
sbb
outsb
inc
clc
xor
nop
push
cmp
in
cltd
mov
sbb
das
jae
arpl
loop
nop
push
ret
sbb
or
and
out
outsl
stos
test
sbb
xlat
cmpsl
pushf
add
push
enter
stos
lret
jp
add
testb
add
or
gs
test
into
jmp
xchg
inc
jmp
rcrl
ds
insl
stos
mov
icebp
mov
scas
stos
push
sub
jmp
or
sub
jl
shlb
mov
outsb
xor
insb
jg
add
shll
xor
ja
inc
and
mov
int
cmp
xchg
ljmp
push
cltd
out
iret
out
mov
pushf
dec
push
ret
and
adc
inc
pop
insb
and
push
mov
inc
cs
addr16
cmp
jae
pop
mov
mov
out
subl
adc
jne
lods
inc
lahf
popf
jbe
hlt
addb
stos
loop
xchg
lret
and
dec
clc
xchg
mov
sbb
fisubs
fnsave
push
sbbl
inc
hlt
pop
xchg
xor
div
adc
sbb
pop
pop
or
jl
inc
lds
jns
xchg
lds
cmp
cltd
sbb
mov
jge
nop
cmp
sbb
mov
mov
cmp
sbb
popf
out
add
cmc
bound
mov
sbb
movsb
or
inc
mov
roll
out
and
cmc
lahf
pop
mov
inc
jmp
ret
icebp
sub
mov
pop
adc
or
mov
gs
adc
out
xor
inc
test
fadds
jp
jbe
movsl
testb
pop
ljmp
cltd
pusha
xor
dec
neg
push
lods
inc
data16
xchg
das
scas
push
add
mov
call
or
rorb
aas
pop
adc
xchg
out
pop
jnp
cmpsl
and
pop
test
pop
icebp
mov
mov
mov
xor
les
test
mov
fldl
jno
cli
je
sub
loop
push
push
mov
add
addl
lea
cltd
mov
lahf
cmp
loop
sbb
imul
sbb
push
mov
data16
push
jbe
or
sbb
rcrb
and
xchg
and
nop
aad
adc
cmpsl
jg
cltd
jmp
popa
jg
lea
dec
sbbl
lds
and
data16
jmp
adc
ret
sarl
xor
jb
lret
and
out
aaa
sub
data16
or
into
out
ss
incl
fldt
fisubrl
cmp
jbe
mov
pusha
movsl
or
push
xchg
fisubrs
xor
aam
mov
inc
inc
sub
cmp
call
add
shrl
mov
inc
sahf
sahf
jns
aaa
mov
cmp
sbb
inc
test
and
imul
ret
sub
sbb
pusha
mov
aaa
ret
xchg
pop
pop
xchg
in
mov
inc
loope
mov
rcr
sbb
arpl
pop
adc
int3
mov
sub
or
sub
inc
inc
pop
scas
xchg
sub
leave
addr16
mov
cs
cmp
sub
sub
shrl
nop
pop
ret
cmp
add
mov
popf
inc
jmp
mov
iret
imul
clc
inc
xchg
cld
sub
jmp
push
pusha
jb
jae
mov
lods
lahf
cwtl
xlat
dec
add
mov
sahf
jecxz
hlt
xor
out
addr16
cwtl
pop
mov
dec
aad
stos
dec
insl
push
testl
mov
mov
les
lods
shlb
push
jne
push
jne
jecxz
mov
loopne
sub
or
xchg
bound
in
sbb
rcl
add
int3
scas
push
cmp
pop
div
xchg
ret
mov
inc
mov
dec
insb
fsubp
sbb
add
jl
data16
les
inc
movsb
mov
cmp
push
add
dec
or
mov
fistpll
mov
cmpsb
pushf
add
fildll
jg
or
xor
and
stos
xchg
mov
xor
push
das
or
lahf
popf
inc
insl
cmp
push
aad
lds
push
jl
subb
dec
fdivl
xchg
aam
dec
dec
push
sub
adc
pop
pop
repz
daa
sbb
fwait
jg
shll
fistpll
add
loope
into
cmp
or
imul
rcl
fisubrs
mov
xor
xchg
xor
lea
outsl
mov
ja
rolb
test
xlat
fs
xlat
pop
sub
jecxz
jbe
fdivp
in
stos
pusha
test
clc
stos
clc
out
hlt
jns
sub
clc
cltd
mov
ret
jns
pop
nop
loopne
push
mov
sbb
or
sbb
cs
cmp
xchg
jns
xchg
sahf
add
add
cmpsb
idiv
out
add
sub
jmp
icebp
ljmp
shrl
or
jp
test
aad
pusha
or
insl
push
dec
js
and
dec
jg
stos
fptan
ljmp
cltd
sub
cs
and
sub
aas
push
test
ja
cmc
aam
sbb
jb
aad
xchg
add
rol
inc
push
xor
cld
stc
ljmp
fldenv
mov
jo
in
nop
sbb
nop
pop
mov
inc
xchg
jle
iret
out
rcrb
adc
int3
stc
es
xchg
aad
rcrl
fwait
out
push
jecxz
loop
insb
ret
sub
sbbl
in
xchg
jno
sub
mov
pop
add
gs
xor
add
inc
add
xor
repz
mov
ljmp
or
mov
push
sarl
roll
and
push
fistps
ret
inc
pop
xchg
or
jge
mov
inc
mov
xor
xor
andb
inc
fbstp
mov
xor
int
push
shlb
insb
mov
insb
or
lahf
push
push
cmp
push
push
jmp
test
push
sub
or
xchg
lds
in
xchg
push
adc
or
pop
xor
mov
mov
bound
push
xor
mov
pushf
cmp
rorb
pop
xchg
jbe
inc
jbe
scas
addr16
fdivs
addl
in
mov
jle
lods
xor
aaa
divb
lds
rcr
in
mov
dec
cmpsb
xchg
mov
sub
cld
xchg
sahf
lods
xlat
xor
pusha
sbb
mov
outsl
aaa
mov
ljmp
and
dec
adc
push
mov
cmp
ret
adc
xchg
aaa
or
out
ret
out
es
out
and
pop
out
sub
jl
push
pop
xor
cmp
adc
int
and
sbb
add
or
packuswb
nop
popa
mov
mov
dec
aam
ljmp
or
mulb
mov
pop
lahf
je
fstpt
mov
mov
out
sub
cmpsb
xor
cmpsl
cs
imul
enter
pop
mov
pusha
movsl
mov
andb
lods
pop
aad
cmpsl
xchg
pop
in
mov
or
push
pop
fucomp
mov
scas
xor
movsb
ljmp
dec
out
mov
mov
stos
aas
daa
jb
xor
mov
jne
or
aam
gs
xchg
xlat
aad
arpl
sbb
cs
jle
xor
int
jl
mov
mov
sbb
sub
adcl
arpl
fwait
enter
mov
xchg
sub
clc
dec
jecxz
jmp
mov
mov
dec
or
ja
inc
and
jns
sbb
pop
push
cmc
jg
mov
push
pop
sbb
sub
sub
imul
fsubs
les
xor
int
imul
ds
cmp
outsl
cmp
inc
sbbl
jnp
and
add
mov
pop
scas
inc
loope
icebp
test
inc
adc
cld
test
movsl
data16
dec
scas
jmp
jg
std
cli
pop
sti
or
inc
mov
lret
sti
lret
lods
sub
pushf
jp
sti
sbbb
clc
cmp
pushf
cmp
inc
std
pop
shlb
es
sub
mov
leave
lock
adc
ret
subl
xor
mov
loope
push
ja
mov
mov
shlb
or
push
fwait
lret
inc
cmp
aam
dec
jmp
mov
jp
or
dec
dec
add
fwait
and
movsb
sbb
add
incl
movsl
icebp
adc
dec
int3
sub
inc
pop
or
jnp
into
xor
jle
mov
push
fadd
mov
inc
xchg
addl
in
or
shll
push
inc
or
std
push
lds
fs
xor
aam
std
jecxz
jb
lcall
xor
ret
xchg
mov
fwait
aam
dec
mov
cli
subb
clc
out
cs
cmp
pop
jg
sbb
jnp
lea
jge
jo
div
hlt
mov
adc
mov
mov
sbb
sar
mov
repnz
int
fildll
adc
das
adc
dec
add
pop
push
out
movsl
iret
and
cld
jecxz
push
insb
cwtl
mov
popa
jbe
ja
xor
inc
lret
adc
data16
idivl
push
push
pop
aaa
ss
ds
push
or
add
push
pop
ret
jl
imul
sub
add
in
es
stos
sub
cwtl
mov
fwait
jmp
sub
clc
push
mov
in
mov
sbb
cmpsl
fistl
ds
dec
add
or
enter
add
jns
inc
jle
movsb
stc
push
ficoml
out
or
xor
sub
dec
mov
fsubrs
movsb
int3
std
mov
push
insl
add
cli
xor
or
pop
lret
loopne
lahf
mov
mov
jnp
inc
or
inc
dec
inc
js
in
adc
lods
ss
sahf
fildl
out
or
lock
xor
dec
mov
dec
out
cmpsb
sub
cltd
lds
hlt
sahf
jg
cmpsb
test
add
inc
mov
lea
mov
cld
roll
xor
mov
and
jl
mov
pop
imul
sbb
adc
mov
inc
mov
inc
mov
sbb
push
mov
stos
sbb
test
mov
cmpsl
sti
jns
mov
jno
shl
adc
rcll
cmp
xchg
loopne
cmp
xlat
cmp
cmp
int3
push
lret
ficomps
and
cmc
stos
icebp
out
stos
lret
gs
add
pop
sub
pop
in
fcomps
divl
pop
add
or
ja
mov
cmp
jnp
inc
bound
mov
fs
pop
push
sub
adc
add
mov
inc
mov
add
out
xor
jp
movsl
fidivrl
sbb
push
in
sub
fisubrs
popf
jp
add
push
pop
movsw
shl
fists
lock
push
cmc
sbb
push
mov
xlat
movsb
sub
push
sbb
in
mov
mov
clc
adc
sbb
dec
jmp
push
cs
roll
xchg
xor
icebp
sbb
stc
aaa
xor
and
pop
add
aas
repnz
xchg
pop
pusha
int3
dec
jbe
lea
or
push
repnz
jae
fdivs
mov
xchg
stc
sub
mov
sbb
popa
nop
xchg
push
push
je
mov
mov
jae
rcll
cmp
notl
sti
popf
add
mov
and
xchg
jmp
lods
fucomp
outsl
and
int3
daa
mov
in
pop
pop
insl
push
and
andb
xor
xchg
lcall
cmpsl
inc
mov
pop
std
out
and
xchg
push
ljmp
xchg
mov
dec
jnp
inc
mov
popf
jnp
pushf
inc
lahf
aam
push
test
scas
ret
add
mov
sbb
cmpsb
dec
scas
popf
dec
adc
leave
in
mov
sub
pushf
pop
pusha
icebp
lcall
jns
or
mov
jae
or
test
in
or
aam
lret
pop
xchg
and
push
sub
loop
mov
mov
jl
adc
jo
jmp
xlat
sub
popf
and
sbb
dec
push
push
add
ss
loopne
shll
call
pop
mov
mov
mov
mov
mov
or
mov
jae
or
xlat
push
shl
stos
dec
ja
push
negb
pushf
or
pop
das
out
and
xlat
xchg
push
out
xor
rolb
push
sub
rcll
fisttps
mov
dec
fcmovbe
test
dec
xchg
push
clc
lea
ja
divl
ss
mov
addb
jecxz
outsb
cltd
rorb
mov
mov
loope
cmpb
test
lret
xchg
insb
fidivl
jge
ds
out
add
and
pusha
sahf
shll
arpl
lcall
testl
test
fstl
mov
and
negb
test
inc
sub
dec
aad
push
jnp
cmp
push
insl
mov
sarl
cmpsl
sbb
mov
xlat
subb
and
xor
and
or
jae
xchg
sbb
push
xor
add
mov
pop
lcall
daa
shrl
sbb
lock
inc
xchg
mov
lock
adc
gs
les
movsb
loop
dec
jne
addr16
dec
movsb
dec
mov
xchg
inc
jecxz
pop
jecxz
nop
out
xor
jne
mov
imul
loope
xor
cmc
add
pop
sahf
fs
pop
inc
jnp
out
cli
dec
lret
cmpsl
mov
jns
mov
in
gs
das
hlt
jg
cmp
sub
ds
xor
xchg
adc
or
add
in
sbb
andb
cwtl
ja
sbb
or
or
push
sti
int
add
lea
out
fnsave
in
cmc
mov
mov
imul
inc
xchg
xor
xchg
addl
sub
mov
pop
outsb
mov
lret
insb
sbb
mov
cmpsl
cmp
inc
push
xlat
adc
mov
pop
add
icebp
bound
push
sub
pop
mov
cltd
pop
mov
lock
xchg
inc
adc
shl
mov
add
test
jecxz
les
or
jle
jae
push
testl
mul
bound
mov
outsb
mov
jnp
sub
push
inc
flds
cwtl
inc
xchg
sahf
hlt
mov
shll
xor
lods
out
xchg
ret
cmovns
aaa
popa
arpl
push
sbb
add
sub
mov
aas
add
aas
xlat
sarb
and
sbb
sub
sub
aas
cmp
inc
iret
jbe
or
aad
sbb
push
cmp
call
clc
dec
jb
pop
mov
jns
xchg
dec
roll
scas
int
inc
ficoml
jns
pop
or
dec
fadds
sahf
xchg
mov
pop
aas
jnp
add
xorl
xor
arpl
jmp
scas
daa
push
xlat
sub
pop
inc
cmp
mov
sahf
xchg
xchg
cmp
lock
and
mov
in
inc
cmc
lret
je
mov
cmpsb
outsb
test
notl
shll
lahf
jae
int
add
shll
data16
fbstp
int3
dec
inc
cmp
mov
pop
repnz
sahf
mov
sub
sub
push
sub
test
jae
sub
xchg
pop
pop
mov
inc
jbe
fsts
push
mov
ljmp
scas
and
fstps
insb
pop
fnstcw
sarl
arpl
add
jl
xor
mov
xchg
daa
cmp
roll
pop
xor
pop
stc
cld
sbb
sub
loopne
and
imul
add
mov
subb
aam
mov
cmp
fwait
dec
mov
pushf
jmp
mov
xchg
out
pop
mov
scas
and
and
adc
push
lahf
pop
movsl
adc
mov
push
shl
push
js
dec
lret
rcrl
mov
test
inc
and
cld
sub
dec
mov
sahf
loop
jecxz
je
test
adc
ja
sub
xchg
or
xor
icebp
aam
cs
add
lods
sub
lret
scas
sti
dec
push
gs
ljmp
add
aad
test
shrb
lea
jae
sahf
add
subl
daa
push
add
test
fxch
cld
mov
push
xor
push
sahf
repnz
cmp
loope
dec
mov
jmp
dec
xchg
push
adc
insb
aas
notl
sbb
cmp
sbb
jg
insl
jge
mov
in
push
ljmp
ja
mov
fcmovb
rclb
or
stos
loopne
mov
rcll
das
adc
xchg
mov
push
pop
xor
mov
aad
jb
pop
dec
fcoms
fistl
and
test
inc
mov
jle
fwait
jg
movsl
pop
sub
xchg
lret
inc
lea
or
scas
jo,pt
xorl
sbb
dec
cmp
shll
push
imul
xchg
imull
pop
pusha
data16
imul
xchg
and
sbbl
mov
or
cmc
jmp
mov
or
jae
adc
mov
mov
jbe
cmp
in
cmp
ljmp
jo
aad
js
dec
jno
addr16
xchg
hlt
lods
fiaddl
jl
aam
xor
sbb
xor
rcrl
lds
pop
adc
mov
loope
and
xor
adc
mov
dec
stos
sti
pop
xchg
cs
push
out
xchg
jo
cmp
subb
adc
and
out
dec
xor
push
in
das
jno
test
icebp
shr
fucomp
jne
outsl
gs
push
in
cmc
aas
iret
add
jmp
clc
cmc
xchg
xor
les
push
add
icebp
adc
adc
bound
stos
rclb
test
loop
push
xchg
sbb
inc
movsl
jge
out
adc
sti
inc
das
test
std
sarb
jb
cli
jmp
orb
notl
pop
shrl
dec
mov
xchg
lcall
jge
cmp
sbb
jb
aad
arpl
stos
call
pop
test
mov
cld
ret
mov
push
and
jns
scas
shl
push
push
cmp
aaa
ret
dec
or
xorl
cld
lock
jmp
mov
sbb
fnstcw
das
xor
xor
mov
xor
hlt
test
adc
clc
sub
dec
inc
lahf
cs
orl
mov
sti
and
inc
adc
mov
add
jno
loope
or
push
jae
jecxz
inc
jmp
rorb
lds
inc
incb
fcmovu
mov
sbb
jle
arpl
dec
pop
and
scas
jecxz
push
xchg
xchg
je
outsl
enter
mov
mov
xchg
cmp
or
aad
xchg
lds
xchg
iret
aas
ret
enter
and
fcoml
pop
xlat
imul
mov
mov
push
sub
movsl
sti
nop
es
dec
shl
mov
mov
and
bound
mov
push
push
lret
stos
xchg
movsb
or
lods
insb
mov
dec
sbb
push
loope
cmp
aaa
add
xor
jp
inc
andb
aas
xchg
mov
js
orl
or
lret
xchg
push
mov
jbe
aaa
mov
push
ret
mov
push
incb
mov
sbb
adcl
jns
push
xchg
cltd
out
jmp
mov
rcrl
ss
or
cmpsl
jno
cs
test
mov
stos
rcll
mov
int
sub
pop
mov
mov
ss
or
ljmp
push
cmpsl
xchg
xchg
adc
je
jno
jb
pop
insb
repz
mov
test
xchg
stc
inc
or
imul
ja
xchg
fidivrs
mov
dec
dec
or
add
dec
push
ja
mov
arpl
push
push
out
ljmp
or
lret
add
inc
lock
addr16
jno
adc
imul
inc
repnz
aas
cmp
xchg
jnp
test
js
flds
cwtl
jp
lcall
into
in
popa
and
jns
mov
inc
ss
in
and
xor
out
xchg
pop
pop
mov
mov
push
pop
mov
sbb
cmp
dec
inc
ljmp
loope
dec
jmp
dec
mov
aas
shl
mov
mov
xchg
fxch
rorb
sub
inc
sub
movsl
fdiv
pop
jg
mov
lret
imul
push
xchg
inc
test
mov
mov
mov
sahf
hlt
dec
mov
aad
jbe
cmc
mov
aad
push
imul
dec
inc
sub
hlt
cwtl
mov
xchg
push
add
cmc
faddp
xchg
dec
xchg
pop
cmp
mov
add
dec
mov
pop
xchg
hlt
lods
out
shr
sbb
pop
adc
loop
or
mov
fucomp
sub
jne
outsb
sub
inc
sub
mov
ret
cmpsb
jmp
movsb
mov
mov
jno
push
sub
punpckldq
xlat
test
mov
ud0
test
repnz
stos
pop
add
and
test
imul
pop
lret
or
and
lcall
xor
iret
popa
pop
call
fst
mov
pop
and
mov
mov
mov
fwait
movsl
mov
push
push
pushf
and
push
mov
xchg
xchg
sub
lcall
lea
and
sub
pop
scas
fmull
cmp
pop
out
sbb
push
sbb
scas
loope
insb
fldl
repnz
or
adc
jle
jnp
mov
cli
or
outsl
sub
dec
xor
lret
testw
mov
sbb
cltd
test
xchg
mov
sub
sub
sub
daa
movsb
pop
xchg
jmp
scas
push
movsl
aaa
adc
mov
adc
mov
mov
out
sti
jecxz
push
rorb
out
pop
pop
int
adc
push
pop
loope
or
xchg
dec
mov
mov
faddl
fs
mov
jns
pop
stos
lock
movsb
fbstp
dec
add
dec
cmp
add
push
inc
sbb
xor
inc
inc
stos
loope
pop
outsb
sbb
into
xchg
mov
imul
mov
cmpsb
fldt
jmp
aas
xchg
lret
cmp
aam
cwtl
cmp
cmpsl
cmp
push
mov
sub
fnstsw
sbb
les
repnz
sub
or
sbb
ret
mov
xor
bswap
dec
jecxz
and
and
lcall
daa
outsb
mov
sub
hlt
mov
fldt
sbbl
sub
movsl
das
or
sub
push
adc
cwtl
popf
xchg
lahf
fbstp
addb
adc
dec
cmp
mov
in
and
jbe
mov
int
add
data16
dec
int
aad
sub
loopne
mov
out
shl
jmp
sub
ret
in
out
sub
repnz
cs
stc
or
dec
nop
pop
add
arpl
push
clc
lret
cmpsl
sbb
enter
or
jae
ja
add
mov
fwait
push
jne
xor
cmp
push
fistl
pop
int3
mov
push
mov
or
mov
adc
pshufw
pushf
outsb
pushf
divl
shl
repz
xchg
or
les
push
leave
scas
test
les
pop
adc
loopne
lahf
ror
add
mov
xchg
test
in
sub
and
int3
mov
inc
fstps
push
jbe
shll
test
movsl
and
xor
push
int
lret
xor
inc
fwait
or
dec
mov
mov
incl
lock
jne
sbb
sbb
dec
fistpll
pop
lods
pushw
inc
add
add
add
mov
xor
mov
mov
rcl
sub
js
or
mov
sahf
in
cmpsl
mov
outsb
pop
adc
icebp
shr
jl
adcl
jno
sbbb
dec
into
add
xor
jnp
or
mov
dec
stc
jp
or
mov
adc
mov
in
adc
and
and
aad
int
or
filds
cwtl
jg
xchg
setns
and
imul
sbb
sub
frstor
adc
fldt
in
js
dec
sahf
sbb
fsts
sbb
push
dec
mov
in
fldt
ds
push
push
xchg
pop
lcall
add
and
jecxz
lea
mov
das
orl
jnp
mov
sub
movsb
adc
movsl
clc
ss
cs
push
jbe
push
rol
add
jne
les
andl
pusha
imul
jmp
xchg
mov
mov
fcmove
lret
repnz
imul
out
lds
inc
repz
sti
stos
pop
mov
mov
mov
mov
inc
xcrypt-cfb
cmpsl
movsb
mov
jecxz
sarl
jb
shrl
push
mov
rorb
cmp
pop
aas
or
imul
jge
out
add
or
data16
jnp
scas
out
popf
push
jmp
dec
imul
ljmp
jmp
jl
push
out
add
cltd
push
ss
jnp
mov
xlat
cmpb
enter
dec
movl
insl
push
inc
rcrb
test
cs
popa
xchg
sbb
mov
xor
sub
jno
mov
rcr
cmp
xor
dec
sbb
mov
mov
xchg
sbb
insl
mov
sti
iret
imul
sbb
ficoms
fdivp
aaa
lcall
or
cltd
adc
inc
rcll
adc
loop
lret
mov
sarb
cmp
inc
adc
adc
std
testb
push
jne
mov
cmpsl
stos
jne
jne
pop
mov
inc
and
cs
nop
inc
js
add
adc
fs
stos
data16
inc
lcall
xchg
stos
adc
fs
inc
or
mov
push
xor
sbb
shlb
and
cmc
dec
cmp
mov
cs
jne
xchg
out
add
movsl
adc
dec
mov
adc
adc
mov
arpl
mov
mov
mov
lcall
test
push
test
loopne
ja
in
in
add
push
mov
sbb
loopne
aaa
cwtl
sub
fucomi
cmc
jp
adc
or
ret
xor
lcall
and
fs
lret
sbb
push
mov
mov
adc
and
ljmp
ret
sbb
mov
aas
push
cmpsb
xchg
adc
pop
js
fsubr
inc
stc
or
arpl
xchg
out
cltd
or
nop
push
mov
shll
xor
subl
int
sbbb
push
pop
xchg
outsl
loope
push
add
cmpsl
ja
push
inc
std
ret
ds
out
aad
mov
std
lods
dec
or
daa
out
cwtl
ficoml
fs
adc
ret
inc
shl
pop
dec
mov
outsl
mov
mov
cmp
in
dec
ret
xchg
lret
mov
xor
mov
and
cld
sbb
sub
ss
lcall
test
inc
jg
pop
inc
stos
mov
ret
mov
pusha
dec
mov
fsubs
das
push
sbb
outsl
push
outsb
jo
cmc
in
std
jno
outsl
fdivs
xlat
add
ret
or
pop
dec
push
dec
rorl
push
mov
movsl
inc
shl
rorb
aam
and
in
jne
jno
ss
lret
scas
roll
mov
ds
test
dec
repnz
sbb
sub
lods
faddl
xchg
ljmp
aam
pop
adc
push
gs
lods
aad
out
add
push
stos
out
out
scas
sti
lock
test
push
loopne
xchg
xchg
shlb
pop
pusha
sbb
push
push
push
loop
in
adc
ret
xchg
lahf
shrb
out
push
loopne
lahf
push
sub
push
jno
out
repnz
sbb
sbb
lds
mov
push
shlb
mov
push
mov
xlat
mov
mov
or
sbb
daa
fistps
inc
call
mov
xor
add
ret
mov
imul
pop
mov
pushf
jo
repz
nop
sti
imul
lcall
mov
fucomp
dec
lods
rdtsc
gs
push
cmpsl
gs
arpl
iret
xchg
repz
push
mov
jb
fcoml
and
imul
jb
imul
in
sbb
aas
call
adc
icebp
mov
daa
mov
inc
enter
ljmp
roll
push
xor
xorl
cmpsb
jnp
xchg
inc
int
pop
sahf
jl
jo
and
sahf
mov
std
je
sub
repz
mov
or
xor
out
or
lcall
daa
adc
push
ret
and
push
or
jmp
addr16
sub
jmp
add
inc
mov
dec
mov
out
xchg
xor
arpl
movsl
push
or
movsb
inc
popa
add
shrl
stos
fildll
addr16
mov
xchg
pop
cmovno
cmp
push
push
imul
stos
cs
aaa
cmp
ficoms
es
pop
sbb
jle
test
inc
and
stc
and
jno
vcvtsd2ss
or
pop
jo
cmp
jno
mov
inc
rol
mov
sbb
xchg
test
dec
gs
dec
adc
inc
testb
mov
int
or
cmpsl
lcall
push
sbb
divb
insb
xchg
jg
addr16
shlb
je
aas
xchg
jp
add
xchg
icebp
inc
arpl
arpl
es
mov
fdivs
lcall
inc
loopne
rclb
imul
pop
hlt
jge
jmp
jge
add
lods
sub
mov
jo
pop
sbb
lods
leave
mov
mov
jnp
cmp
insl
xchg
pop
adc
mov
add
loope
dec
fs
mov
adc
mov
cmp
pop
inc
and
mov
nop
divl
mov
enter
pop
out
out
repz
cmpsb
jecxz
cmp
jp
inc
dec
add
das
lcall
xor
fs
xchg
pop
adc
mov
and
adc
cmp
and
aam
xchg
sbb
and
mov
testl
push
int3
clc
adcl
int3
stos
xor
insb
lods
imul
clc
in
sarb
xor
mov
pop
out
dec
jmp
mov
xor
frstor
add
jg
mov
add
and
mov
mov
xorb
jl
into
fwait
lods
out
dec
aad
add
daa
scas
cmp
roll
xor
insb
pop
push
mov
loop
mov
sbb
es
cli
mov
jo,pn
mulw
movsb
mov
inc
pop
rcl
jecxz
add
mov
xor
pop
jg,pn
movsl
shrl
shl
xor
xor
jle
mov
sub
xor
mov
lock
pop
adc
in
es
xchg
fidivrl
or
push
jb
pop
sub
imul
aas
pop
add
pop
dec
iret
sbb
cwtl
mov
loop
fwait
pop
jbe
mov
ds
xchg
xor
xchg
inc
pmaxsw
sub
sbb
adc
scas
mov
lock
out
cld
xor
add
pop
mov
pop
inc
xchg
pop
lret
xchg
and
movsb
adc
out
jns
fs
cs
leave
stc
dec
dec
and
mov
mov
add
push
inc
inc
xor
test
pop
andl
ja
sub
fnstenv
scas
fstpl
or
sbb
mov
loop
clc
out
mov
xor
addr16
pop
test
into
cvtdq2ps
mov
loopne
dec
and
les
push
xchg
arpl
cli
lret
sub
cmp
dec
cmp
and
xchg
push
and
into
mov
and
mov
dec
stos
pop
or
xchg
cmp
sbb
cli
dec
sub
add
iret
mov
in
and
add
push
cmp
pop
mov
aad
xchg
push
pop
add
mov
iret
dec
mov
subl
jge
stc
pop
vmovupd
sub
mov
out
scas
mov
add
pop
pop
pushl
cmp
xchg
iret
das
iret
out
insl
dec
insl
push
fcmovne
jp
inc
orl
adc
sub
push
sbb
scas
push
lcall
jnp
jecxz
sub
fsubrp
mov
fistps
push
stos
cmp
mov
fimull
ret
or
es
pop
daa
add
xchg
xchg
repz
rcr
pop
xchg
sbb
mov
sbb
fnop
loop
xchg
out
loopne
sqrtps
or
cmp
mov
fcomi
es
arpl
mov
sbb
lahf
cmp
aas
jle
mov
jno
mov
push
push
ja
jmp
call
in
sti
adc
mov
mov
mov
push
pushf
lods
std
lds
adc
stos
aaa
or
dec
out
and
lret
cmp
push
mov
jmp
cmp
orb
inc
cmp
xchg
push
insl
inc
out
inc
imull
icebp
test
subb
push
sub
pop
xchg
test
add
mov
pop
push
pop
xor
imul
mov
movsb
mov
pop
mov
aam
or
int3
sti
mov
mov
cmc
cmpsl
or
mov
add
xor
stos
xor
jl
imul
xchg
jne
in
mov
cmp
arpl
pop
sbb
jns
cwtl
add
cmp
in
popf
pop
orb
dec
adc
in
faddl
in
mul
dec
out
shlb
lock
int3
pusha
jbe
iret
gs
cmp
movsb
jmp
inc
jb
jecxz
fsubrs
mov
xor
mov
adc
inc
sbb
push
stos
mov
jecxz
sub
push
pop
adc
jnp
xchg
pop
in
mov
cmp
in
mov
int
insl
fcompl
cmpl
stc
jnp
popf
and
jnp
ljmp
popa
xor
push
into
cmpsb
je
jle
dec
and
lea
enter
aam
shlb
ret
sub
push
outsl
fsubrs
mov
imul
add
popf
dec
test
dec
shrl
or
daa
inc
push
retw
mov
xor
jmp
mov
ds
cmp
jo
popa
pushl
sbbl
lods
hlt
aaa
in
or
add
sbb
std
in
int3
adc
in
mov
sbb
mov
fdivrs
jl
push
pusha
imul
test
lahf
lret
cwtl
in
dec
repnz
sarb
xor
xlat
xlat
add
js
adc
lds
int
dec
add
add
out
ljmp
add
int3
fnstenv
jne
aas
repnz
jecxz
dec
out
inc
adcb
mov
ljmp
pop
add
xor
xor
cmpsl
cwtl
pop
repnz
fsubs
lret
outsl
pop
lcall
and
jb
cmp
sub
addr16
pusha
mov
test
jno
xor
adc
cmp
pop
add
mov
bnd
sub
or
loop
push
dec
daa
jbe
idivb
mov
popa
and
imul
inc
fmull
cmpsl
mov
popf
xchg
xchg
fimull
jbe
jno
fcmovbe
cmc
mov
imul
das
ficomps
mov
xlat
jmp
adc
or
jbe
xchg
add
adc
push
ret
adc
xor
or
jge
add
sbb
xchg
in
and
sar
pop
mov
xchg
popa
arpl
hlt
std
xor
sbbb
aaa
aaa
or
cmpsl
movl
imul
xchg
cmp
fdiv
icebp
enter
icebp
xchg
clc
sbb
ja
int
jns
jo
aaa
loopne
dec
icebp
adc
and
je
pop
sub
xchg
repnz
and
in
cmp
xchg
sub
loopne
pusha
mov
outsb
stc
pop
push
shll
xchg
mov
and
insl
pop
add
and
clc
stc
fistpl
sbb
lret
mov
int
dec
mov
popa
jno
add
push
movsb
sbb
mov
push
fistps
inc
dec
rorb
insb
call
mov
cmp
fisubrs
iret
cmc
fists
sub
cltd
into
or
iret
jo
xlat
mov
sahf
mov
lods
cmp
push
icebp
mov
dec
sbb
divb
xchg
stos
das
mov
mov
nop
in
cli
push
push
or
hlt
bound
cmpsl
cwtl
addb
and
inc
test
movb
test
sub
ret
push
lods
or
inc
mov
sbb
sub
sarl
cmp
mov
inc
jo
outsb
cmpsb
lret
push
in
lock
or
mov
popa
mov
out
mov
in
adc
fwait
xlat
sbb
ds
xlat
dec
sub
push
andb
mov
cltd
jmp
adc
jne
outsl
test
and
push
icebp
js
aas
das
jle
sti
fwait
iret
iret
push
mov
xor
ja
jo
xor
pop
push
ss
and
jmp
rcl
movsl
dec
and
fdivrp
sbb
mov
test
add
push
insl
or
mov
out
pop
add
xchg
dec
in
cmp
xchg
jne
out
mov
mov
sbb
int3
cmpl
mov
push
push
sbb
popf
cli
push
ret
repnz
xchg
mov
pop
daa
and
insb
repnz
cmp
pop
jae
fisttps
mov
fcomps
push
lahf
loopne
out
outsb
ljmp
mov
pop
inc
and
xor
pop
jmp
imul
mov
push
fmul
pop
or
int3
vpcomub
sbb
ficoms
push
and
jae
hlt
push
push
mov
stos
ret
mov
sub
pop
lret
rcll
and
cmpsb
loopne
notl
cmp
sahf
and
arpl
sbb
das
in
pop
fchs
mov
outsl
push
repz
push
cmc
pop
fistl
dec
int3
mov
ret
mov
hlt
push
jae
add
cmp
mov
push
sub
test
es
popf
pop
sbb
sbb
jns
clc
pusha
xchg
sbb
dec
and
lret
out
arpl
mov
test
shll
cmp
or
sbb
ja
mov
adc
push
inc
mov
push
sti
ds
mov
mov
add
rol
sub
pop
xor
jmp
mov
repz
dec
and
sub
xor
push
jnp
scas
push
mov
orb
aad
inc
movsb
mov
push
enter
add
and
push
and
movsb
sub
cmc
add
xor
sbb
mov
cmp
mov
test
fistps
or
and
loop
sbb
je
pop
mov
add
inc
ljmp
push
jge
into
xor
mov
pop
aaa
mov
cli
out
je
js
sbb
es
inc
ror
cld
lcall
ja
add
inc
fs
mov
jmp
inc
and
test
scas
mov
js
pop
or
xor
addl
pop
fwait
outsb
jmp
adcb
out
das
lods
push
pop
sbb
mov
cs
pop
cltd
repz
mov
xchg
inc
sub
insl
sbb
pushf
mov
loopne
pshufw
dec
sarl
les
das
popa
sub
mov
cmpl
lcall
sarl
shrl
pop
dec
xchg
addr16
mov
addr16
and
jo
addr16
or
addl
push
mov
push
push
cltd
cltd
push
jbe
mov
bound
pop
pop
and
ds
jg
mov
clc
repnz
or
add
loop
jg
adc
out
lods
scas
lahf
mov
or
xchg
push
push
push
fs
aas
push
jmp
and
push
xor
insl
and
inc
mov
sub
add
fistps
aad
dec
jp
insb
sbb
sub
push
aad
je
mov
sbbb
dec
addr16
sub
dec
push
dec
les
push
cmpsb
push
shll
and
pop
mov
xor
inc
xchg
nop
in
fstp
inc
addr16
and
leave
adc
and
fbstp
mov
scas
cmpsb
sbb
dec
mov
mov
loop
sbb
mov
adc
test
jmp
adc
jmp
sub
jge
ja
or
add
ljmp
xor
negl
and
xlat
stc
idivb
adc
pop
ficompl
add
loop
test
pusha
stos
aad
iret
aam
and
push
jbe
push
adc
pushf
in
pop
orl
inc
test
jnp
push
inc
out
jge
mov
or
in
insb
fnstcw
aaa
mov
and
jns
add
lods
shrb
arpl
xchg
ret
ret
sub
lahf
movsl
test
jecxz
ret
mov
sbb
jo
icebp
inc
cmc
lahf
pop
jns
mov
sbb
loop
flds
or
pop
ds
mov
or
push
into
xor
and
sbb
xchg
mov
enter
dec
mov
xor
imul
pop
cmpb
jnp
in
pop
cmp
mov
lds
test
mov
addr16
cld
push
popf
mov
in
cmp
adc
mov
mov
xor
pop
arpl
out
idivl
cmp
jmp
or
cmp
mov
mov
les
pop
popa
out
mov
clc
sub
and
xchg
mov
shl
mov
inc
and
adc
icebp
push
shrb
xor
fwait
inc
xor
in
inc
inc
or
mov
lock
stos
in
loopne
xchg
in
js
or
cmp
aam
int
orb
jo
pop
inc
mov
pop
out
cmpsb
std
adc
lods
adc
leave
jmp
jae,pn
mov
ja
inc
stos
cmova
call
push
sti
mov
ja
dec
or
mov
push
lds
mov
clts
adc
mov
stc
mov
xchg
add
mov
push
fistps
into
hlt
fstl
test
sub
sub
cmpsl
jnp
insb
push
add
xchg
movsl
mov
es
jecxz
push
push
iretw
mov
scas
xchg
sub
push
test
loope
xor
mov
cltd
add
fucomi
sarb
jns
test
mov
xchg
sti
sub
or
int3
mov
inc
cltd
mov
movsb
lcall
rcrl
mov
nop
clc
lock
sbb
sbb
mov
shlb
in
jnp
jmp
mov
jmp
loopne
ret
in
xor
enter
xchg
icebp
incl
lock
xor
mov
pop
fs
fadd
pop
cli
mov
rcrb
xchg
mov
push
lods
scas
into
adc
dec
ret
push
jmp
push
xlat
mov
js
mov
xor
dec
icebp
pop
jmp
gs
cmp
sbb
adc
cmp
lods
push
jmp
xchg
insb
ficomps
jmp
mov
lods
insb
dec
push
cmp
cli
dec
jmp
mov
rcrb
test
jb
pop
mov
adc
fcomps
sbbl
mov
daa
fldt
icebp
test
lret
flds
cltd
ret
shr
rcrb
mov
push
or
cmc
add
test
mov
imul
push
sarb
mov
sub
or
adc
pop
ja
mov
cmp
adc
xor
out
fs
pop
loopne
pop
ja
ljmp
pop
bound
popf
cmp
movsl
jle
jbe
loope
xchg
add
cmpsb
fisubs
cmp
mov
hlt
push
fs
mov
outsb
cld
xor
push
inc
jg
scas
cmp
xchg
mov
ja
rcrl
insb
cmp
outsb
sub
jae
dec
xor
sarl
sub
lcall
mov
and
shr
gs
push
in
xor
sbb
cmp
adc
and
mov
mov
xorb
add
pusha
in
xchg
mov
mov
jecxz
sbb
in
lea
repnz
pop
push
aas
rcrl
jp
push
les
sbb
xor
imul
leavew
negb
cmp
jnp
inc
mov
mov
in
dec
aam
jl
xchg
imul
lcall
test
std
stos
sub
loop
aaa
mov
jae
mov
sub
sub
sbb
push
push
dec
repz
or
stos
in
push
loope
out
jnp
lahf
mov
stos
repz
jnp
adc
mov
ret
mov
lret
lods
sbb
jmp
xchg
and
cmp
pop
icebp
mov
pop
stc
inc
cli
push
loope
pop
jl
inc
and
sub
jp
fisttps
xchg
xchg
in
mov
add
sub
or
sbb
lods
cmp
js
mov
jg
or
dec
or
scas
push
gs
dec
xor
ja
mov
jmp
or
mov
inc
push
xchg
pop
insl
leave
aaa
mov
aam
push
push
mov
inc
pop
mov
data16
jle
stc
push
push
lods
sbb
lea
adc
jmp
ja
fcmovu
aas
fnstsw
popa
and
insb
mov
test
outsl
xchg
cmp
rclb
js
into
andl
mov
idivl
mov
xchg
jp
popa
and
dec
movb
push
xchg
loope
jae
jmp
mov
mov
and
mov
mov
jmp
and
dec
mov
fwait
insl
xchg
nop
adc
lods
stc
repnz
dec
pusha
jae
mov
xchg
mov
rorb
lods
mov
xchg
test
inc
bound
in
jl
add
sarl
mov
xchg
out
movsb
push
cltd
out
enter
lret
fsubs
data16
lahf
imul
add
adc
arpl
jge
std
sbb
popf
filds
ljmp
jecxz
inc
mov
mov
mov
in
mov
ret
out
sub
sub
push
xchg
imul
test
mov
lea
enter
inc
and
cwtl
xchg
shlb
xchg
add
mov
and
adc
mov
cltd
mov
mov
cs
dec
sbb
jle
rcl
cmpsl
in
inc
std
push
push
int
cmp
xlat
cmpsb
add
int3
jne
pop
insl
sarl
dec
xchg
lret
push
pop
scas
mov
cltd
push
lods
into
movsl
repz
sbb
push
adc
cli
jne
leave
test
lret
sbb
cli
and
cmp
dec
aam
leave
sub
pop
mov
dec
loopw
add
dec
xchg
imul
xor
aas
outsb
cmp
pop
push
mov
sahf
push
xchg
loope
imul
xchg
jmp
out
dec
adc
fcmovnbe
xor
movsb
jmp
pop
ja
mov
fimuls
sbb
mov
add
push
mov
movsl
xchg
push
cmp
push
loop
mov
mov
push
pop
mov
aas
push
dec
mov
stc
dec
pop
popa
fs
pop
bound
bnd
mov
ret
xor
push
int
and
mov
sbbl
cmpsl
scas
jb
mov
arpl
aaa
add
adcl
mov
sbb
cmp
inc
cmp
xchg
nop
mov
int
jmp
out
xchg
push
xor
mov
pop
xchg
or
das
movsb
add
call
xorl
pusha
push
aas
addr16
in
mov
adc
insb
daa
movsl
scas
xchg
sub
or
rcll
roll
arpl
add
scas
outsb
ret
pushl
dec
rol
aad
jns
loope
mulb
loope
lcall
and
icebp
mov
xchg
loop
mov
stos
xchg
lods
ds
cli
mov
lahf
in
clc
xchg
jne
movsb
mov
popa
mov
rcrb
adc
sti
adc
lods
jno
xchg
gs
inc
xor
sbb
xor
mov
ret
out
pop
xchg
aam
xchg
jg
xchg
insl
es
add
or
andl
cmp
and
adcb
jae
adc
add
fwait
mov
dec
out
cmpsb
cld
jp
cmpsb
cmc
fnsave
pop
fwait
mov
dec
xchg
xor
or
xchg
lds
repnz
loope
lods
int3
and
mov
adc
xchg
outsb
sub
mov
movq
pop
ret
fcmovne
and
push
mov
adc
inc
out
rcr
leave
jge
mov
daa
je
shll
mov
fsubr
rorb
push
lret
or
push
pop
push
xchg
inc
jnp
mov
adc
adc
fs
sahf
enter
jo
inc
xchg
xchg
daa
fdivrl
rorb
fcomi
stc
pushf
jge
aad
jg
sbb
mov
dec
push
mov
mov
icebp
cmp
mov
sbb
jno
test
out
in
mov
repnz
daa
andb
inc
push
jb
mov
insb
mov
test
push
mov
aaa
pop
sarb
pushf
scas
sub
movsb
addl
lds
xor
jp
cmc
dec
add
cltd
cwtl
add
fmulp
test
pop
dec
mov
xchg
lods
leave
lret
xor
mov
iret
loop
js
pop
in
scas
cmp
scas
cwtl
test
xor
mov
roll
or
lods
pop
loop
mov
sbb
shrb
or
int3
incl
and
xchg
pop
lds
jns
inc
fs
iret
pop
adc
stos
in
sbb
ret
incl
sbb
or
out
rolb
sub
iret
and
cmpsl
pop
adc
mov
or
mul
fs
cltd
clc
sbb
cmp
cmp
mov
outsb
cs
scas
icebp
cs
and
into
sbb
rcr
orl
daa
sub
stos
add
lcall
cmpsl
insb
enter
sub
mov
xchg
mov
adc
pop
clc
mov
pushf
jecxz
xchg
jmp
pop
in
and
icebp
out
testb
popf
aaa
cmp
mov
lds
neg
jns
mov
fisubrl
sysenter
mov
addr16
xor
into
xor
test
shll
out
rcr
xchg
jnp
imul
and
cmp
js
xchg
xor
ficompl
loopne
call
mov
cmp
std
pop
hlt
jns
fwait
push
cs
test
enter
loopne
enter
fimull
into
dec
pop
mov
dec
and
fwait
js
mov
xchg
pop
ds
push
mov
and
out
or
fs
cld
mov
dec
mov
adc
dec
mov
js
mov
jl
js
xadd
ret
xchg
in
leave
dec
pushf
sbb
jns
out
adc
or
mov
mov
sahf
push
fdivrl
add
mov
jne
hlt
fidivl
arpl
add
and
imul
leave
and
pop
jl
ja
inc
mov
lock
sbbb
inc
out
cmp
add
enter
mov
push
daa
pushf
xor
hlt
pop
cmc
mov
inc
fucomi
mov
iret
aaa
inc
mov
shll
in
and
xabort
jl
xchg
cwtl
es
popf
xchg
pop
fldt
fs
loope
stos
xchg
sbb
xor
dec
into
sub
insb
pop
dec
mov
jno
aaa
cmp
lds
xchg
test
push
mov
imul
filds
cmpsl
loopne
ja
push
movsb
nop
mov
adc
sbb
sti
mov
push
daa
je
adc
and
sahf
out
mov
sbb
mov
cs
mov
xchg
or
mov
inc
xchg
or
ds
gs
mov
mov
clc
inc
jecxz
rcrl
xchg
jge
pop
in
out
mov
sub
push
mov
mov
and
jg
xchg
push
xor
popa
lea
test
mov
divl
jecxz
dec
movsb
push
sub
fstl
push
cmpsl
xor
aam
arpl
jmp
jp
clc
xchg
je
loopne
or
mov
sub
inc
ljmp
rolb
dec
xchg
dec
popa
push
or
pop
fnstenv
daa
not
adcb
mov
pop
subl
lret
bound
cltd
mov
mov
sahf
add
mov
in
fcmovnu
into
mov
sub
xchg
or
adc
mov
mov
loopne
or
mov
test
popa
xchg
scas
and
pop
int
cmpb
repnz
loop
cmp
mov
pop
int3
ljmp
dec
enter
fsts
in
xchg
and
pop
insb
mov
ja
mov
int3
push
ja
cmp
or
and
insb
adc
push
xor
mov
sub
stc
adc
xchg
lock
filds
xchg
mov
mov
test
mov
lock
mov
aam
fildl
fbstp
insb
adc
aad
lds
std
mov
ret
mov
mov
mov
fs
or
fs
adc
mov
bound
pop
push
shlb
sub
xor
ficomps
test
cmp
out
cmc
mov
loopne
sub
mov
ret
jns
outsb
icebp
mov
std
sbb
ret
das
cmpsb
ja
cmp
xor
outsl
mov
mov
fnclex
jg
das
mov
loope
inc
addr16
push
outsb
adc
fmul
scas
dec
add
cmpl
adc
bts
pop
pop
adc
shll
ret
mov
mov
or
sbb
js
xchg
dec
dec
lds
push
xchg
mov
cmpb
jmp
mov
xor
or
js
dec
hlt
lea
inc
mov
adcl
xor
jbe
xchg
push
mov
jmp
jbe
xchg
mov
xchg
pop
or
mov
mov
adc
cmp
jae
rorb
orl
outsl
mov
pop
jmp
loop
add
jne
scas
int
xchg
mov
jg
sti
sub
movsl
test
pop
jbe
insl
dec
jecxz
lock
cmp
lahf
mov
inc
repz
push
js
adc
out
cmpsl
mov
mov
cmpsb
mov
xchg
pop
dec
add
cmp
bound
in
icebp
xchg
xlat
cwtl
aad
jecxz
aaa
mov
and
aaa
mov
nop
push
hlt
sahf
int3
popf
add
or
orl
popf
lods
iret
pushf
lods
jns
add
push
shrl
fxch
lock
loop
xchg
movsl
mov
stos
lods
push
js
dec
sub
dec
adc
mov
cmc
dec
add
or
jecxz
mov
and
push
pushf
xchg
lods
addr16
xchg
adc
pusha
insl
cwtl
xchg
mov
lea
sub
push
xlat
push
ljmp
mov
cld
pop
fidivrs
mov
cli
lcall
push
lea
mov
cmp
stos
mov
sahf
add
and
push
loope
xor
xchg
clc
jno
ljmp
mov
mov
aaa
incb
into
das
mov
push
xchg
scas
mov
jg
jmp
pusha
or
inc
push
push
orb
lods
push
out
das
pop
movsl
cli
fs
outsb
adc
sub
out
aam
int
fidivs
insb
stos
xchg
ds
sbb
aad
cmc
jge
stc
stos
inc
mov
cmpsb
enter
mov
in
mov
pop
int
jecxz
repz
ret
jne
les
int3
mov
push
mov
in
xchg
sarb
pop
jp
push
mov
push
adc
bound
rolb
jge
mov
imul
pushf
fistl
mov
cmp
jge
out
xchg
xchg
fdiv
pop
xchg
or
push
sub
mov
pushf
push
pusha
test
jo,pt
and
aaa
fcoms
imul
xchg
fdiv
mov
dec
xchg
loop
dec
add
divl
cltd
mov
add
cmc
cmpsb
aad
jae
xchg
cmp
pop
jp
cmp
pop
jge
fcomip
fstps
stos
mov
ds
dec
and
jp
and
adc
fnsave
gs
push
pop
fcoml
stc
adc
push
je
dec
mov
mov
push
test
pop
movsb
aaa
push
pop
adc
aas
int3
das
pop
adc
jp
pop
dec
ja
icebp
lret
outsw
mov
xor
or
test
das
std
mov
ret
and
xor
or
pop
jo
lods
icebp
push
dec
lret
push
jmp
xchg
repz
sbb
in
jne
xor
xchg
or
add
xchg
les
xchg
popa
push
jns
xchg
loope
loope
xchg
lret
inc
or
dec
es
mov
addr16
adc
mov
aaa
mov
aaa
out
popf
push
adc
pop
push
sbb
aas
push
push
out
inc
loope
push
ja
xchg
inc
sarl
mov
sbb
xor
jno
in
pusha
jg
and
xchg
sub
iret
inc
fadds
mov
outsb
ss
mov
adc
jo
xchg
outsl
leave
mov
js
jle
inc
or
imul
and
pushw
lea
push
inc
adc
mov
mov
adc
ret
test
mov
mov
dec
cld
data16
xchg
gs
rcrl
hlt
sbb
pusha
push
mov
jmp
mov
imul
pop
lods
sahf
daa
lea
fisubrl
jae
jnp
lcall
sbb
dec
push
pop
lahf
cwtl
ss
mov
repz
jb
pop
or
mov
sbb
and
jno
and
mov
nop
or
jp
jmp
enter
stc
test
lret
ret
rcll
and
sbbb
adc
mov
movsb
pop
mov
xchg
rcll
cmpsl
mov
dec
nop
push
pop
movsl
mov
pop
push
fisttps
mov
jp
inc
lods
dec
repnz
pop
sti
jmp
vcvtsd2usi
roll
jns
fiaddl
es
stc
popf
and
sar
pop
sbb
cmp
or
outsb
imul
pop
push
aaa
ret
paddusb
and
sti
fistpl
xchg
test
outsl
in
lods
fsts
into
jno
mov
sub
imul
fildll
xor
inc
ret
push
and
push
inc
push
outsl
stos
pusha
js
in
cltd
xor
std
fsubl
mov
pavgb
in
test
mov
inc
dec
lods
and
mov
out
push
mov
ror
aas
pushf
loop
inc
jb
clc
or
xlat
pop
sub
sbb
or
mov
aam
fidivl
repz
cmp
dec
fucom
push
sbb
jge
clc
aas
jno
pop
sub
push
loope
mov
gs
leave
ret
pop
xchg
or
fisubs
jl
dec
cmp
nop
adc
push
push
cmpsb
mov
mov
out
fst
inc
dec
mov
push
or
mov
out
and
jmp
pusha
jmp
in
push
test
cs
orb
push
out
mov
subb
sbb
insl
je
push
dec
or
mov
xor
inc
stc
add
pop
mov
mov
outsl
adc
ss
enter
jo
addr16
adc
xor
pushf
popf
sub
mov
push
or
test
hlt
enter
test
test
lahf
fdivp
cmp
out
stos
clc
cs
xchg
sbb
test
loop
mov
xchg
mov
popa
bound
bound
mov
push
lea
inc
fs
xor
cmp
fwait
jb
jg
arpl
data16
cwtl
adc
mov
movsl
push
rorb
sbb
xor
adc
gs
inc
sub
push
xabort
xchg
lcall
das
out
jnp
enter
hlt
sub
fidivl
mov
bound
cmpsl
out
fwait
es
or
push
sub
mov
add
add
jo
jle
sub
mov
xchg
dec
fcmove
mov
mov
jmp
call
loopne
mov
jg
lahf
sarb
test
je
mov
xlat
dec
stos
lock
dec
and
jns
clc
pop
or
cli
in
arpl
sub
cli
jmp
inc
cld
shlb
mov
xchg
or
mov
fidivl
stc
adc
into
inc
mov
mov
aad
mov
cmp
std
jae
or
out
dec
cwtl
dec
add
sahf
sbbl
mov
cmpsl
les
into
aam
ja
cmp
push
sbb
adc
ss
or
lds
aam
add
hlt
movsb
dec
pop
ds
cmpb
cmpsl
jmp
add
sbb
add
rorl
xchg
aad
or
int
jg
clc
jns
mov
imul
xor
out
cs
enter
fimuls
stos
cmp
mov
loopne
adc
dec
or
push
insb
mov
pop
ds
cmp
or
pop
sbbb
mov
lods
inc
and
pop
adc
rorb
push
mov
add
mov
xchg
adc
add
mov
push
cmp
out
jno
ja
int
push
mov
add
aaa
cmp
jl
arpl
dec
testl
xchg
lcall
icebp
xchg
inc
adc
mov
arpl
pop
cltd
sbbl
scas
fcoms
test
int
inc
mov
icebp
xchg
repnz
push
and
push
iret
loope
sbb
ss
mov
lods
jl
cmpsl
aam
cli
popa
popa
push
fsubl
dec
push
sub
js
mov
test
add
or
xchg
push
cmc
add
fisubrs
mov
insb
aas
dec
mov
and
pushf
pop
sarb
aaa
cmp
test
cli
mov
lods
das
testb
jo
aaa
in
push
jl
xchg
dec
ja
fisttpll
or
mov
loop
mov
dec
cmp
pop
jg
cmp
lds
inc
adc
std
adc
mov
sub
mov
aas
sub
adc
aam
add
xchg
cmp
push
scas
cltd
dec
jnp
outsb
loopne
add
jb
test
jmp
push
pop
add
cmp
mov
mov
fs
dec
jae
dec
sub
sub
mov
adc
push
sbb
or
xor
popa
int3
cmp
mov
outsl
lods
add
jns
dec
and
std
push
shrl
lahf
sbb
jae
in
subl
insb
jo
dec
cli
imul
xchg
mov
xchg
xchg
sbbl
ret
jmp
roll
negb
and
cmp
add
mov
pusha
in
push
jae
add
mov
shll
mov
fcoml
fs
sbb
into
sub
jae
in
cmc
xor
cmpsb
bound
clc
add
shrl
inc
sbb
dec
scas
pop
xchg
xor
lods
or
dec
add
xchg
push
mov
push
pushf
popf
std
mov
adc
pop
arpl
and
je
int3
out
pop
xor
and
pop
xor
call
add
aas
pusha
lret
test
or
jg
dec
fidivrl
imulb
lcall
pop
add
jnp
test
lods
cmpsb
jbe
addr16
stc
popa
lds
add
sub
inc
ds
repnz
call
xor
inc
popa
add
lock
and
or
daa
adc
dec
aas
mov
pop
cmpsb
lret
jbe
or
cwtl
lds
loopne
pusha
sub
dec
mov
mov
jb
repz
mov
dec
js
inc
xor
push
sub
movb
sub
fwait
inc
fidivl
mov
fcmovbe
repnz
mov
loop
jmp
fwait
dec
adc
std
in
sbbl
jnp
xchg
mov
ljmp
lods
push
dec
inc
pop
dec
or
dec
adcl
cwtl
lahf
cmc
shl
sbb
mov
mov
jbe
loopne
jecxz
mov
push
pop
fldl
inc
in
insl
mov
cmp
fisttpl
add
inc
fldt
mov
add
jno
test
dec
or
dec
enter
adcb
sbb
loopne
add
adc
xor
sahf
mov
jle
jbe
and
ret
cld
mov
sbbb
push
stc
inc
cmp
sarl
outsl
out
jnp
jecxz
fwait
rclb
cltd
stc
mov
dec
push
pop
mov
lock
mov
mov
pop
xchg
mov
cmp
xchg
or
sub
mov
stc
sub
dec
test
stos
in
jae
sub
cld
dec
cld
mov
mov
movsb
jge
mov
mov
pop
clc
leave
sbb
test
mov
je
jecxz
jbe
pop
pop
aaa
push
int3
cmpsb
mov
cmp
adc
outsl
imul
mov
push
pop
mov
out
sbb
cmp
pop
dec
mov
cmpsb
pop
pop
jp
xchg
add
sub
inc
sub
mov
lods
mov
dec
sbb
repnz
daa
mov
or
repnz
mov
xor
scas
pop
add
pusha
xor
outsl
inc
movl
push
cmpsl
dec
pop
lahf
mov
leave
loopne
lcall
aas
pusha
jbe
jne
dec
or
xlat
sub
jae
dec
stos
lret
sub
cmp
push
mov
jnp
cwtl
aad
pop
into
dec
cwtl
daa
fsubs
mov
pop
pop
fsubrl
jp,pt
add
pop
sbb
ret
inc
sbb
pop
mov
mov
mov
jg
xor
mov
mov
inc
enter
jmp
hlt
xchg
sbb
pop
mov
aas
repz
popf
bound
mov
pop
dec
xor
int
sahf
mov
add
test
pop
cmp
push
test
pop
xchg
push
mov
ljmp
add
call
fdivp
dec
mov
jg
sahf
repnz
cltd
sub
mov
out
pop
mov
xchg
in
lock
jecxz
inc
and
loope
je
cmp
lret
xchg
orb
ljmp
jge
arpl
fiadds
jg
arpl
cld
outsl
jg
xor
jl
sbb
add
push
fidivrs
fstps
mov
sarb
mov
adc
loop
fndisi(8087
and
in
lea
push
lods
aas
mov
shll
insl
stos
pusha
mov
sbbb
ror
jmp
add
pop
mov
in
lods
ret
sbb
clc
add
cli
clc
lea
ss
loope
inc
cmpl
repz
imull
jge
dec
dec
fcoml
adc
sub
mov
ss
fdivrs
scas
in
in
dec
test
lea
adc
addr16
movsl
and
pop
xor
fimull
sbbb
jae
mov
sub
mov
fisttps
add
push
mov
cmpsl
shr
addb
imul
jg
nop
stos
pusha
push
cmpsl
out
jnp
add
ljmp
sub
lods
pop
xchg
jns
movsb
test
stos
cmp
mov
inc
fdivrl
jmp
fisttpll
repnz
rcll
out
rcrb
rcrb
cmc
mov
leave
dec
sbb
outsl
and
pop
cmp
fildll
in
std
cmpsb
mov
xchg
in
sub
and
jmp
lea
inc
lods
js
lahf
mov
test
ficomps
lea
jo
push
cwtl
pop
ds
jo
mov
sti
push
cmp
lret
mov
xchg
push
jmp
xchg
push
pop
inc
lahf
mov
sub
cmp
lret
repnz
pop
xor
pop
in
inc
pop
jno
xchg
insb
shl
pop
popa
mov
lea
sbb
push
xor
jg
lods
test
fisubl
addr16
inc
sub
inc
cmp
ficompl
xchg
mov
mov
xor
or
pop
cmp
xlat
jbe
and
cmpsb
outsb
adc
movsb
lahf
in
and
xor
cmp
cmp
out
int3
lds
or
push
loope
push
inc
cmc
mov
nop
lret
push
roll
stos
sub
in
sub
popf
ds
mov
pop
pop
sbb
test
sti
rcrl
add
inc
inc
jno
cwtl
movsb
cmp
arpl
ret
dec
or
push
mov
cmp
ficoml
mov
and
ret
adc
adc
xchg
scas
jl
fmulp
rolb
or
and
push
jne
js
dec
sti
jne
test
pop
mov
xor
out
movsb
push
jno
test
push
hlt
insl
cs
test
cmpsb
mov
sbb
sbb
sub
cmp
dec
sub
aaa
or
test
in
cmpsb
lods
loope
dec
xchg
jns
fnsave
icebp
sbb
lods
or
mov
jle
xor
je
insl
add
leave
test
dec
gs
sbb
data16
sub
xchg
adc
inc
mov
ljmp
cmp
enter
pop
insl
mov
push
in
and
jnp
fldcw
ljmp
test
push
cld
inc
pop
jno
push
sbb
aam
pop
loop
adc
push
pop
scas
xor
je
pop
inc
movsl
or
cmp
push
lret
les
mov
fimuls
jp
js
xchg
sarb
sub
aas
mov
jb
mov
mov
loope
loopne
adc
cld
lods
jo
int3
sub
mov
mov
xor
pop
ds
int
mov
push
dec
into
mov
nop
es
mov
lcall
jg
mov
xchg
mov
jge
mov
rorb
js
xchg
das
mov
lahf
out
sub
mov
les
push
mov
pop
movsl
rcr
or
adc
ror
stc
mov
push
out
mov
repnz
sub
stos
loopne
lcall
adc
xchg
mov
sub
stos
jmp
pop
xchg
hlt
lret
push
insl
iret
jle
lcall
pop
sub
nop
adc
lahf
or
cmp
inc
add
xchg
cld
mov
push
sbbl
jns
sbb
dec
mov
out
push
adc
movsb
in
gs
call
mov
cld
xchg
add
mov
sub
ret
push
test
cli
out
loop
cmp
xchg
mov
nop
test
and
cld
adc
mov
and
push
mov
fnstcw
mov
mov
lods
cmc
mov
or
sbb
push
aad
mov
sub
js
mov
out
pop
imul
ret
nop
mov
xchg
fsubs
mov
repz
sub
cmpsb
push
and
push
and
fwait
xchg
pop
pushf
dec
inc
ds
les
xchg
pop
and
shl
push
xor
pop
inc
mov
in
int3
mov
mov
imul
mov
jecxz
or
push
sbb
ss
mov
mov
int3
cmp
and
push
int
ja
mov
scas
jbe
push
mov
daa
std
jl
xchg
sub
xor
inc
jle
jae
in
lea
sbb
les
jg
push
nop
adc
dec
sub
imul
cmp
popa
iret
shrl
daa
nop
mov
add
pop
popa
aad
lret
inc
mov
push
sbb
int3
xchg
icebp
lcall
push
out
imul
sub
dec
stos
fiaddl
lock
loope
cmp
or
pusha
push
mov
loop
ds
cli
dec
xlat
and
pop
mov
inc
scas
movsl
in
negb
inc
ret
sbb
sarl
pusha
pop
ret
xchg
jg
aad
push
es
sub
int
ja
xlat
mov
sub
dec
add
scas
sbb
int
bound
fadds
stos
sub
dec
jecxz
xchg
lret
jb
mov
jl
or
xor
push
xchg
filds
dec
fcmovu
pusha
aaa
or
loope
mov
loop
jnp
les
fsts
repz
ret
hlt
in
jp
ja
inc
xchg
ja
movsb
icebp
inc
jge
jno
mov
aaa
push
outsl
push
jp
and
dec
fisubrl
mov
sti
adc
sbb
into
loop
cmp
fcmovnbe
dec
sub
sub
add
xor
setb
xchg
ja
sub
cmp
cmpsl
mov
dec
jl
dec
stos
cmp
push
mov
mov
xchg
mov
ret
jg
and
inc
xor
iret
jecxz
add
add
test
mov
adc
pop
add
ds
and
cld
jns
xor
jl
hlt
add
push
jne
rorb
jne
cmp
add
clc
cmc
xchg
xchg
sub
cltd
mov
xor
test
aas
rol
fidivrl
xor
data16
xor
lods
sbb
jp
dec
lds
xchg
push
and
mov
into
aas
loope
xchg
jne
xlat
std
sarl
nop
push
ss
outsb
mov
jmp
shll
mov
ljmp
rep
cmp
dec
dec
mov
out
mov
sub
std
lds
popf
add
lretw
out
jmp
fldenv
mov
imul
in
adc
stos
movsl
sub
clc
leave
hlt
sti
and
adc
rcr
push
pop
popf
push
call
or
repz
mov
aas
xor
fsubrs
inc
out
lock
sbb
jl
or
iret
sar
mov
jae
pop
sub
jae
test
jl
jp
and
popf
and
push
dec
in
flds
or
jge
enter
js
call
sub
loop
daa
jl
mov
sub
pop
xchg
popa
inc
and
mov
cmp
sub
and
mov
dec
daa
fidivrl
or
add
cli
in
inc
and
rolb
enter
lods
into
pop
cmp
cld
js
push
pop
mov
cs
data16
and
mov
sarl
pusha
cmpsb
inc
xchg
mulb
sub
xchg
push
jge
or
insb
lcall
inc
popa
or
pusha
pop
loope
jae
or
test
mov
test
mov
mov
pop
lret
pushf
mov
stos
mov
leave
xchg
outsb
sub
jno
bound
dec
xchg
out
mov
int
dec
mov
mov
mov
lcall
cltd
pushf
insl
leave
pop
into
push
and
cmp
arpl
into
dec
testl
push
jg
gs
pushf
dec
xchg
mov
fmull
and
xor
ds
sub
cwtl
call
test
jns
lods
std
jg
push
fidivrl
mov
mov
daa
push
cmp
ljmp
out
inc
and
daa
outsl
inc
or
rol
or
mov
and
stos
in
jnp
mov
push
pusha
cmp
movsl
mov
mov
mov
into
nop
sbb
or
cli
mov
pusha
dec
in
lods
mov
jecxz
mov
cmc
or
dec
pop
sbb
mov
js
out
and
and
into
xor
mov
test
push
mov
lcall
rclb
pop
loopne
inc
jb
jp
fcompl
jmp
in
sbb
sbb
clc
insl
lock
sbbl
aad
sbb
mov
fldcw
enter
jbe
cs
add
in
mov
gs
mov
cmp
sub
aam
imul
mov
mov
cmp
or
inc
stos
mov
fdivl
jmp
xorl
dec
es
loopne
adc
lahf
ja
mov
loop
cmpsl
xor
and
adc
xchg
shll
mov
push
adc
mov
mov
inc
mov
push
and
mov
push
xchg
std
xor
scas
jg
std
lahf
aam
mov
push
mov
xlat
sub
aam
mov
outsb
fistps
pop
loope
mov
repz
sbb
arpl
movsl
add
fadds
add
jle
adc
mov
and
and
inc
iret
cmc
test
fidivl
rcrl
lea
test
out
sbb
push
add
loopne
cld
cmp
pop
cltd
icebp
sahf
add
mov
push
jo
inc
adc
push
rorb
sahf
xor
imul
lds
push
inc
add
scas
mov
xchg
js
js
cmc
mov
xchg
loopne
sbb
das
sub
dec
mov
inc
jae
push
sbb
sub
pop
dec
sbb
add
enter
stos
push
cld
ljmp
mov
sbb
incl
mov
inc
repz
adc
movsl
mov
mov
shrl
sub
enter
mov
dec
shrl
into
in
xchg
test
bound
into
xchg
add
cmpsb
aaa
mov
xchg
mov
mov
in
pusha
push
jg
lea
int3
lahf
add
lahf
in
push
sub
ds
call
adc
xor
push
mov
cmp
lock
lcall
cld
jmp
and
dec
xchg
mov
pop
sub
mov
dec
push
pop
mov
scas
out
mov
lock
jnp
sub
jno
sbb
call
and
outsb
jg
repnz
imul
insl
push
addr16
in
dec
pop
outsl
sarl
add
jp
or
push
xchg
sbb
inc
jo
ss
cld
jge
icebp
pushl
push
enter
sbb
loop
pop
or
cld
andl
adc
in
cld
fiaddl
fmulp
xorl
shl
jns
sbb
test
imul
sub
in
adc
inc
insb
add
mov
lahf
ljmp
outsl
sub
xor
dec
fwait
jg
imul
jo
sbb
dec
pushw
jg
scas
das
push
and
jmp
pop
lods
jl
stc
shll
sbb
imul
mov
sbb
rorb
add
sbbb
loopne
out
dec
lds
notb
push
jle
mov
outsl
mov
lret
mov
jp
jnp
not
push
fiaddl
dec
jmp
int
jne
pushf
sub
insb
es
push
adc
bound
and
repz
mov
mov
and
mov
lods
mov
das
xchg
mov
lret
lret
movsl
mov
jp
inc
mov
mov
push
aam
test
xchg
in
xor
push
fcomps
aaa
ret
add
xor
jnp
mov
mul
bound
push
pop
loope
inc
lock
xor
inc
idiv
jge
xchg
mov
xlat
mov
mov
mov
hlt
cli
movsl
out
sbb
xor
daa
call
mov
ss
stc
mov
mov
cmp
sub
and
xchg
movl
pop
inc
lahf
ret
xchg
and
xchg
es
vmread
fildll
addb
or
out
stos
cli
pop
jmp
pop
push
mov
mov
mov
imul
enter
sub
mov
inc
pusha
inc
cld
dec
push
ja
mov
insb
mov
lret
xchg
mov
push
loopne
jp
pusha
ss
push
cs
add
dec
sub
int3
cmp
jl
cmp
jnp
fidivrs
js
call
dec
adc
pop
and
sub
jae
xchg
cli
fldcw
push
btl
fnstsw
dec
mov
cmp
dec
lret
mov
jnp
fwait
xchg
cli
cmp
idivb
adcl
out
mov
lock
adcl
iret
sbb
inc
mov
inc
mov
fincstp
cmp
mov
jl
xlat
shl
jae
orb
scas
lock
movsb
sbb
dec
push
sti
loop
call
inc
pop
inc
push
test
lods
lret
fidivl
cmp
mov
mov
dec
scas
inc
in
ret
dec
and
cmp
roll
je
inc
sub
add
cmp
divl
ret
cmp
mov
mov
ret
sbbb
movsb
test
imulb
test
sbb
xchg
or
loopne
xlat
pushf
mov
stos
lds
dec
dec
fld
ja
mov
ret
stos
lahf
outsb
and
leave
cmc
mov
jno
cmp
inc
push
push
test
inc
inc
stos
adc
in
dec
insb
inc
scas
insb
add
add
inc
mov
mov
add
in
testb
test
dec
adc
push
sub
push
xor
add
test
jb
testl
shlb
xor
push
cld
sbb
mov
mov
repz
test
cmp
pop
fbld
call
cmp
mov
les
jnp
in
add
aam
fs
pop
push
ljmp
ret
sahf
enter
mov
dec
or
or
xorb
int
rorb
cmpsl
dec
int3
mov
scas
mov
sub
inc
cmp
push
dec
es
aad
jo
mov
xchg
sarl
stos
outsb
pusha
inc
fisubl
or
push
xorl
movsb
push
push
and
jnp
divw
cmpsl
xor
and
arpl
daa
cwtl
sti
and
add
test
std
sbb
or
dec
mov
std
and
mov
push
test
push
nop
dec
cmp
jb
fistpll
ds
push
sbb
stos
lock
loopne
inc
data16
dec
fcmovnu
pop
xor
or
cwtl
mov
push
and
dec
ds
mov
add
out
pop
cmpsl
test
into
pop
pop
xchg
sarl
jae
push
divl
cmp
shlb
es
sub
gs
jns
imul
push
mov
shll
or
cmc
fdivp
fldl
mov
pop
jnp
daa
add
cmp
mov
push
dec
push
lahf
xchg
inc
xchg
lods
mov
pop
mov
adc
lea
fs
jne
and
inc
adcb
leave
adc
push
imulb
and
in
stos
leave
movhps
jmp
sub
mov
dec
inc
pop
aas
test
lcall
out
ret
pop
shll
adc
mov
mov
cmp
fildl
aad
push
lahf
add
pop
pop
inc
pop
sti
sbb
scas
add
inc
jb
adc
xchg
out
xor
mov
xor
repz
or
es
jb
mov
ss
sti
mov
mov
dec
mov
xor
or
imul
adc
test
mov
jo
sbb
mov
pop
repz
cmp
shrl
xchg
testb
adc
push
movsl
ficompl
push
add
out
jg
mov
int
cmp
sbbl
or
and
jo
push
cmp
movsb
xorb
inc
testb
mov
outsl
inc
jns
enter
int3
pop
pop
lods
or
arpl
sbb
loopne
cs
add
dec
cmp
jb
xor
test
sbb
and
or
lahf
push
fxtract
jns
xor
jg
scas
xor
and
xchg
mov
pop
lds
mov
inc
push
in
sbb
pop
and
xor
xchg
xchg
rorb
shl
xchg
pop
add
lret
cs
add
xchg
stos
inc
dec
mov
fdivrl
jne
popf
push
inc
and
dec
or
test
leave
lods
dec
leave
arpl
aam
pop
out
push
sti
call
pop
mov
les
enter
mov
scas
jns
in
je
ret
add
mov
sbbl
cmp
and
sub
jg
sti
es
push
and
test
push
dec
int3
xchg
ret
adc
push
fwait
sub
mov
out
fbstp
leave
dec
mov
jbe
mov
lret
inc
pop
jnp
adc
xor
jnp
dec
push
lods
push
pop
mov
push
dec
out
repnz
pop
std
mov
xchg
lret
cmpsb
pusha
push
pop
call
push
in
adc
pop
sbb
mov
mov
dec
jb
shll
mov
lock
inc
xlat
mov
lea
repnz
mov
cmp
mov
arpl
test
jae
pop
sti
repz
xchg
sub
mov
or
pop
push
cmpsb
movsb
or
shll
or
mov
jbe
fdivs
cmp
push
lea
ret
xlat
imul
mov
jp
adcb
sbb
or
leave
mov
dec
dec
mov
dec
inc
stos
xor
xchg
dec
js
das
in
adc
xchg
cmp
mov
and
jne
push
add
push
out
ja
pop
ret
pushfw
lret
and
mov
and
les
inc
cmpsl
mov
insl
cmp
pop
idivl
outsb
mov
hlt
std
jg
or
repz
add
adc
push
out
lods
call
dec
mov
sbb
adc
movsl
cltd
movsb
push
aam
repz
or
jne
aam
aas
mov
and
and
pusha
daa
mov
out
lcall
xor
inc
xor
mov
loop
inc
addr16
dec
sub
and
cli
pop
jp
gs
popf
loopne
mov
adc
fwait
or
lods
mov
sub
jp
mov
pop
rcll
lea
ficoml
ljmp
add
push
int3
movb
fs
fistl
inc
jae
mov
xchg
gs
rorl
fists
jmp
inc
or
or
popf
aad
ds
push
mov
add
mov
push
mov
xchg
add
fs
push
xlat
xchg
push
lahf
sub
push
lods
lea
cmp
xchg
lret
insb
rdtsc
fs
push
cs
out
in
rclb
xor
and
and
fdivr
insb
xor
test
pop
pop
xchg
mov
pop
sahf
sbb
xor
jmp
jp
out
sbb
mov
mov
or
dec
int3
fmul
cwtl
dec
adc
aam
inc
pop
jle
stc
in
test
popa
inc
jbe
enter
add
fdivr
cs
add
ja
add
outsb
movsl
push
add
sbb
push
inc
mov
stos
xchg
bound
insl
push
or
sbb
add
inc
jns
int3
es
sub
aam
or
xor
pop
jbe
fcomps
sbb
add
xchg
xchg
mov
int
lods
popa
hlt
cmp
push
pop
ret
mov
loope
push
dec
lods
sbb
or
and
push
push
nop
sub
stos
cld
adc
add
iret
hlt
repnz
loopne
mov
mov
scas
adc
imul
jbe
fwait
mov
cli
push
cmp
jg
adc
xchg
jl
mov
xchg
out
mov
or
ljmp
xor
mov
stos
push
or
adc
jb
pop
xchg
out
adc
mov
jo
xchg
mov
mov
pop
mov
sub
pop
xchg
sub
fs
pop
or
sub
aas
mov
scas
rcll
lret
sbb
fucom
in
iret
lret
je
daa
dec
scas
inc
leave
sbb
inc
xchg
xchg
xorb
xchg
sub
loope
add
pop
ds
jne
inc
pop
mov
pop
jbe
cltd
pusha
push
cmp
push
loope
hlt
jno
mov
mov
jle
adc
dec
ret
loope,pn
popa
std
adc
or
push
into
xor
push
inc
insb
cwtl
out
mov
fldt
int
ret
adc
in
inc
iret
in
ret
sbb
sbb
int
pop
lret
pop
cmp
rcrl
int
or
loop
ljmp
mov
add
mov
xchg
sbb
jle
mov
mov
movsl
and
fcomps
cltd
lcall
ja
ret
scas
jne
cmp
cmp
clc
xchg
or
test
addr16
hlt
sarl
int3
lret
daa
popf
inc
inc
in
inc
fmull
pop
pop
or
int3
jmp
pop
and
nop
shll
lods
mov
cmp
imul
loopne
cmp
xlat
or
xchg
cmpsl
jno
xlat
fsubrs
add
sarb
inc
pop
pop
mov
push
cwtl
test
dec
mov
mov
bound
xchg
pop
addl
push
stos
push
jo
pop
pushf
das
ret
xchg
lock
out
mov
into
sti
mov
fs
shl
and
and
or
jne
xchg
sti
mov
movsb
mov
popa
gs
mov
dec
sbb
cld
dec
or
sub
inc
push
pusha
insl
mov
pusha
mov
xor
addr16
mull
push
hlt
mov
mov
out
dec
fisttpll
scas
ds
inc
xchg
jne
test
das
dec
sbb
pop
jbe
jp
adc
cmp
pop
mov
pushf
jge
xor
or
xor
mov
scas
pop
inc
cwtl
arpl
jmp
push
mov
add
dec
stc
lods
dec
xorb
and
insl
push
roll
mov
jbe
jo
das
xor
xchg
fcmovne
mov
xchg
out
sbb
imul
jnp
adc
sti
push
shlb
adc
mov
sbb
adc
sbbl
cwtl
dec
sub
mov
fs
lcall
loop
adc
adc
mov
repnz
pop
clc
cmp
ret
rclb
xor
push
dec
popa
mov
or
dec
aas
push
in
fxch
jle
add
pop
dec
inc
mov
or
mov
or
in
inc
scas
pop
stc
xor
inc
imulb
or
icebp
out
out
scas
data16
mov
pop
mov
sti
fdivs
hlt
xor
push
pop
xor
mov
ret
test
lcall
sub
mov
push
bound
sbb
add
mov
mov
mov
dec
mov
sbb
insl
test
cmp
ljmp
sub
loop
push
pop
pop
mov
jne
jb
decl
adc
ljmp
sbb
data16
add
ret
ds
or
sub
stos
enter
dec
jge
jg
push
inc
dec
lock
pusha
es
outsb
mov
cmp
lahf
mov
movsl
jecxz
dec
jle
sbb
ljmp
sbb
stos
sti
inc
cmp
insb
in
mov
mov
dec
jne
popf
jmp
aaa
xor
and
xor
jns
mov
or
add
xchg
in
push
and
mov
xchg
ja
ficomps
pop
ss
dec
adc
mov
inc
pop
adc
outsb
mov
sub
je
xor
push
not
mov
sbb
gs
jne
jge
data16
mov
bound
not
xchg
add
data16
out
in
sub
dec
aaa
dec
ret
sub
out
or
fcoms
sti
xorb
ret
dec
aad
mov
and
jne
push
fsts
adc
inc
loop
inc
pop
lcall
lods
lahf
shlb
lahf
push
inc
imul
iret
xlat
jns
rclb
stc
aad
push
jb
and
xchg
icebp
push
xchg
add
iret
bnd
dec
inc
xor
lcall
xchg
push
lods
sub
fldl
cltd
cmpb
sbb
fwait
nop
stos
sub
or
mov
mov
jae
and
insb
test
add
scas
shlb
push
imul
add
movsb
xor
inc
rcr
pop
leave
jae
or
jns
cmp
mov
loopne
dec
pusha
repz
imul
sub
popf
pop
ret
in
out
out
push
outsb
nop
mov
pop
cwtl
push
ja
sarl
cs
inc
cmc
sbb
fidivs
and
add
iret
fwait
add
movsb
sarb
clc
jne
dec
jb
xlat
rorb
and
mov
dec
je
cmp
mov
test
ret
or
dec
test
and
mov
pop
push
jmp
xor
push
stc
inc
daa
in
sbbb
cmpb
inc
lahf
mov
bound
jae
mov
sbb
and
fwait
xlat
ret
sub
das
icebp
sub
mov
xor
sbb
ljmp
sub
jge
in
mov
lcall
das
or
jne
pop
xor
scas
and
and
push
pop
icebp
jo
sti
push
add
shlb
movsb
inc
pusha
sub
or
mov
mov
xor
cmp
cltd
cli
movsb
pop
out
sbb
adc
jne
pop
mov
pusha
lret
in
mov
sbb
fsubrl
mov
int
adc
stos
insl
xor
lcall
repz
pop
repz
call
in
mov
push
pop
mov
sti
mov
orl
and
mov
lock
mov
sbb
int
imul
dec
aaa
popa
xchg
cmc
mov
mov
jbe
sub
push
pop
jae
pop
dec
push
and
loop
jb
enter
loopne
mov
cmpsb
mov
jl
jg
fstpl
mov
inc
mov
mov
fbld
or
push
xchg
add
push
xor
rolb
mov
and
test
or
das
lods
jecxz
sti
mov
clc
rcr
adc
inc
pop
pop
xchg
push
hlt
cld
mov
rcrb
dec
rcll
pop
inc
loopne,pt
lock
ss
out
xor
xchg
push
sub
call
mov
fistps
mov
inc
sub
xchg
jae
mov
mov
adc
scas
cwtl
jp
mov
xchg
outsb
sbb
test
insl
fsubrs
cmp
cmp
cmp
add
imulb
xchg
out
pop
and
push
adc
insl
inc
pop
adc
imul
jg
mov
int3
mov
movsb
cld
cmpsl
call
sub
pop
outsl
movsl
mov
inc
pop
mov
jle
out
sub
adc
add
lock
adc
mov
add
clc
cmp
push
sbb
sub
lret
out
loop
rcr
ss
dec
sub
rolb
dec
push
ds
dec
xchg
xchg
and
mov
lea
in
lds
loope
jge
cmp
pop
les
inc
dec
mov
xlat
rcll
bound
xchg
popf
sub
lret
stos
out
fcmovnbe
jae
scas
mov
je
test
sahf
sub
cld
cmp
dec
into
lret
inc
mov
cld
inc
jecxz
jb
cmp
es
repz
inc
rcll
in
jne
jge
dec
test
pop
pop
fsubrs
aam
cmpsl
push
daa
xchg
pop
cmc
cwtl
adc
xchg
cwtl
pop
pop
hlt
jl
lods
xor
and
pop
dec
mov
fcoms
shrl
addr16
out
cmpl
or
jno
ljmp
push
xchg
jecxz
rcrb
in
mov
mov
rcl
mov
push
popa
leave
out
repz
nop
pop
xchg
pop
sbbl
sub
xchg
es
fld
orb
or
mov
loop
pop
jle
xchg
lods
inc
adc
hlt
jae
ror
lea
adc
or
fdivrl
push
dec
mov
les
cmovns
push
je
mov
iret
push
sub
mov
outsl
lock
rol
mov
orl
bound
jecxz
xor
subl
addr16
push
ret
psraw
and
xor
jo
push
lcall
cmpl
fidivl
cmp
xor
popl
pop
out
add
mov
pop
mov
sti
jge
ja
xchg
call
fwait
imul
aam
pushf
mov
es
leave
sbb
leave
shrl
leave
divb
mov
call
sub
inc
data16
sarl
add
sahf
or
mov
ret
fs
cli
scas
insb
insb
outsl
lea
std
sbbl
push
cld
cmp
pop
aaa
cmc
sub
mov
adc
mov
leave
insl
jb
stc
dec
test
dec
or
sbb
inc
push
pop
test
clc
mov
sbb
push
cmp
cld
out
mov
pop
aam
sub
pop
xor
mov
mov
shlb
mov
sub
mov
sti
jnp
and
push
insb
jo
push
movsl
ret
mov
inc
flds
xor
out
adc
gs
icebp
mov
les
test
cmp
pop
pop
out
stc
sub
ljmp
xchg
pop
les
leave
aad
testb
jp
cmp
or
imul
dec
xchg
dec
adcl
mov
jo
and
xchg
xor
mov
orps
and
add
loope
adc
popa
mov
cmovno
rcr
mov
aam
lret
xor
cs
lcall
inc
cld
test
jmp
xor
jecxz
fcoms
mov
mov
fcoms
jmp
jecxz
in
sbbl
test
es
and
repnz
pop
mov
adc
lcall
inc
test
mov
pop
js
mov
stc
xor
push
fdivs
les
mov
hlt
sti
fdivl
adc
and
xchg
adc
inc
sbb
ret
cmp
bound
shll
mov
mov
lea
cli
xchg
ret
fistl
adc
outsb
test
cs
adc
xor
xchg
lods
out
sti
gs
push
inc
movsl
push
add
jno
sbb
fsubrl
out
jge
push
in
sti
addl
jnp
arpl
push
lods
adc
push
rcll
jge
inc
push
jl
cmp
popl
aad
daa
ss
xchg
adc
push
pop
cmp
adc
push
adc
pcmpgtw
test
scas
or
adc
mov
adc
push
sbb
push
cmp
lds
fistpl
and
scas
xchg
nop
cmc
scas
in
into
out
and
push
push
jbe
xchg
sbb
sbb
xchg
test
mov
addl
push
call
mov
mov
mov
ret
and
jns
jl
test
aam
xor
in
pop
out
call
mov
cli
pusha
jbe
jbe
jecxz
jle
mov
repz
jo
or
mov
push
push
xor
aas
outsb
jmp
popf
mov
xor
dec
sahf
mov
sahf
inc
mov
or
push
mov
push
in
inc
mov
sbb
jnp
data16
pop
nop
mov
lods
cmp
arpl
loope
ret
out
or
cmp
and
lods
or
cld
lock
xor
xchg
xchg
jecxz
pop
pop
aad
rolb
loope
bnd
push
jmp
bnd
adc
mov
add
xchg
aaa
dec
and
pop
ret
es
xor
inc
loopne
xor
inc
gs
push
lea
mov
jo
mull
out
push
xor
cwtl
adc
push
and
sbb
sub
jns
scas
sbb
ja
mov
test
or
fisttpll
daa
mov
push
ret
sub
push
dec
outsb
pop
add
insb
add
cmc
cli
sarb
adc
xor
xchg
mov
enter
loopne
mov
test
jb
mov
sbb
and
pusha
xor
scas
addl
lcall
ja
fdivrs
and
pop
sbb
nop
loopne
and
cmp
inc
mulb
mov
and
int3
test
mov
inc
fadds
sbb
sahf
aad
cmp
enter
in
fcomps
outsl
into
test
mov
cmp
fists
xchg
and
in
fucom
in
inc
popa
clc
pop
lods
or
mov
fistl
mov
andl
jmp
scas
xchg
rol
loope
sub
jnp
pop
xchg
dec
ret
xchg
cmpsl
xchg
inc
leave
das
popa
adc
jne
idiv
push
fsubrs
leave
pop
das
dec
mov
test
lea
into
mov
int3
scas
iret
xchg
stos
sbb
stos
or
stos
mov
sub
call
cld
or
pop
scas
or
mov
add
mov
xor
xlat
repz
addr16
rcrl
inc
or
or
repz
pop
sub
ja
jle
sub
add
ret
fwait
movsb
inc
adc
push
or
add
pop
scas
push
in
pop
and
lods
dec
mov
test
push
and
mov
cli
sahf
stos
sarl
or
dec
insb
lods
iret
fs
mov
pop
or
dec
mov
mov
ret
pop
loop
add
ret
jne
pop
cmp
xchg
je
lea
dec
jle
cmp
mov
add
push
daa
insb
fbld
dec
ret
or
scas
and
rcrb
repz
dec
popf
lods
mull
lcall
xchg
in
xorb
and
lahf
mov
outsb
imul
and
cwtl
or
push
icebp
dec
inc
sbb
aaa
or
and
xchg
test
mov
mov
and
cmc
push
xlat
jbe
xor
cltd
lods
shr
aaa
test
dec
aaa
inc
xchg
mov
shlb
addr16
add
or
or
into
shlb
stos
test
stc
mov
jmp
add
movsb
je
dec
std
addr16
repnz
push
sahf
insl
stos
rcr
lds
insl
mov
cmp
mov
aad
lahf
add
fs
movsb
fisubl
fisttps
cmp
nop
push
lcall
adcb
shl
dec
pop
and
std
adcl
cwtl
fadd
inc
aaa
lcall
inc
sub
add
test
clc
out
out
xor
sbb
sarl
cmp
fistpl
movsl
pusha
adc
clc
je
sarl
add
mov
mov
insb
test
cmp
lea
ss
dec
movsl
mov
cmp
adc
or
cmp
jns
pop
mov
ret
setb
imul
test
jle
pop
repnz
dec
dec
mov
popa
lock
mov
sbb
xorl
repnz
iret
mov
fs
push
jp
cmp
xorb
aas
jne
add
sbb
fadd
cld
xlat
daa
lcall
inc
gs
arpl
sbb
push
cmc
lea
fmuls
pop
mov
sub
mul
and
into
sti
call
inc
mov
decb
hlt
scas
sbb
add
jmp
adc
cmp
pushfw
inc
int3
push
lea
mov
xor
jo
cmp
les
ret
cmp
in
lcall
inc
in
icebp
dec
sbb
outsb
inc
mov
mov
ret
ljmp
mov
mov
ja
movsb
push
pushf
rcl
aad
lods
jbe
les
adc
andl
mov
mov
je
adcb
sbb
call
je
loope
lock
pop
enter
loopne
xchg
icebp
pop
lahf
je
mov
pushf
xchg
and
pushf
movsb
lret
sarb
insl
xorb
call
xchg
push
dec
cmp
jecxz
xlat
iret
or
sahf
cmpsb
sahf
fs
scas
or
jmp
jno
pop
and
shl
je
jmp
fisubl
push
pushf
pusha
and
jp
data16
lret
mov
aad
lcall
icebp
mov
std
push
inc
daa
test
popa
in
push
or
jno
dec
aad
fildl
iret
insb
cwtl
jmp
mov
jmp
adc
ss
xor
inc
dec
and
xchg
or
ss
clc
orb
lcall
addr16
out
movsl
jne
ret
inc
adc
add
mov
push
daa
inc
or
sbb
jecxz
lock
jg
inc
add
sub
adc
push
test
icebp
movsl
dec
mov
dec
out
sahf
cwtl
push
popa
cs
lock
sbb
cmp
push
or
jne
and
aam
sub
ffree
icebp
cld
mov
sub
out
pop
jo
or
dec
inc
aaa
push
adc
out
xchg
lret
fldt
sbb
cmpsl
sahf
movsb
cmp
stos
adc
or
jo
jnp
jl
cmp
mov
rolb
xchg
test
mov
add
jle
sub
lods
adc
xchg
inc
aaa
pusha
ret
cmp
nop
adc
dec
gs
stos
clc
jb
cwtl
ds
sbb
loopne
fisttps
cmp
fmuls
mov
push
jae
xor
mov
dec
out
lods
out
mov
dec
js
push
pop
je
cmp
hlt
addb
mov
hlt
cmc
fwait
push
push
cmp
cli
push
push
sti
lcall
add
mov
neg
push
addr16
cmp
jnp
cs
shrl
xchg
mov
dec
insb
addr16
jb
cmpsl
xchg
xchg
sub
lahf
mov
pop
outsl
ds
test
cmp
rorl
and
jg
test
pop
sbb
fprem1
sarl
arpl
mov
sti
nop
out
shll
dec
push
push
or
add
out
inc
insb
xor
outsb
inc
rcrb
or
sub
mov
dec
aad
add
ret
insb
repnz
fcmovnbe
loope
sti
and
aad
stos
int
jge
cltd
mov
imul
and
mov
inc
insl
mov
daa
mov
jge
sub
not
xchg
loope
fsubrs
insl
scas
mov
cli
jbe
pop
mov
pop
lods
out
dec
lods
push
and
add
push
push
popf
mov
xchg
jmp
push
aam
mov
push
out
aaa
or
pop
andl
push
fstpl
jne
push
jl
insl
je
jg
push
jg
rcll
inc
scas
fsubl
jns
stos
icebp
test
hlt
adc
mov
mov
cmp
dec
push
mov
mov
add
dec
pop
mov
dec
cltd
mov
movsl
loop
fldcw
push
mov
fstpl
mov
gs
addb
leave
and
nop
mov
inc
or
subl
pop
push
inc
shl
pop
loope
jecxz
mov
push
or
cmp
imul
imul
and
scas
mov
push
cwtl
pop
nop
fidivs
aas
scas
arpl
push
or
push
sub
test
ljmp
mov
xchg
cmpsl
push
sbb
mov
pop
bound
xor
dec
loope
icebp
sbb
stos
icebp
sub
out
sbb
leave
xchg
or
xchg
add
enter
pop
push
add
jmp
pop
mov
icebp
cmpsl
gs
and
pop
inc
loop
lcall
in
push
pop
cltd
dec
fcoms
adc
sbb
or
fldt
mov
jo
movsb
xor
mov
cltd
test
ljmp
mov
sub
cmp
inc
pop
sar
xchg
jns
dec
sbb
fcomps
pop
cmpsb
and
cld
inc
hlt
jnp
dec
stc
lods
add
pop
mov
aaa
dec
es
imul
test
mov
cmc
cmp
ss
imul
inc
sbb
cmpb
mov
stos
mov
sbb
fidivrs
sub
pop
mov
inc
in
cwtl
mov
repz
fldenv
push
cld
xor
sub
aas
xor
push
inc
mov
aas
jecxz
gs
in
adcl
sbb
mov
std
js
mov
imul
and
and
mov
lds
mov
test
and
mov
inc
jecxz
int3
xlat
pop
stos
jl
xor
mov
push
pop
pop
pop
jo
jmp
inc
xor
out
push
or
ja
sbb
dec
pop
jbe
add
daa
dec
xor
es
sbbl
loop
xor
stos
ficoms
push
js
push
xor
xchg
mov
dec
hlt
sbb
push
pop
shl
cmpsl
js
push
mov
jle
jecxz
xorb
push
nop
test
mov
dec
icebp
fisttpll
inc
mov
mov
xor
ja
ficoms
cmpl
mov
xor
xor
adc
adc
enter
add
or
jae
dec
push
inc
adcb
mov
add
mov
mov
ja
pop
cmp
jno
jo
add
jge
jnp
into
stos
test
inc
and
push
mov
fwait
mov
repz
dec
fwait
sub
add
jmp
adc
adc
jle
xchg
ret
ret
mov
cmp
push
mov
xlat
fsubl
dec
lods
gs
jne
dec
fstps
xor
in
test
xchg
jno
fistps
sub
mov
dec
dec
pop
int
and
xor
test
push
sbb
cld
cs
or
mov
mov
scas
fdivrs
jb
call
pop
lds
sub
sahf
ljmp
dec
or
les
fisubrs
jnp
sbb
sbb
and
mov
lahf
and
cmp
and
mov
add
pop
aas
pmaddwd
testl
mov
dec
push
jbe
mov
and
and
mov
in
adc
test
cmp
mov
cmp
xor
xchg
mov
std
test
or
inc
sahf
mov
lock
mov
and
or
or
pop
out
mov
inc
addr16
jge
jnp
test
or
outsb
pop
popa
aad
inc
in
fcomps
popa
pminsw
mov
jno
scas
sub
movsb
xor
dec
fcmove
jo
aad
std
outsl
mov
adc
cmp
lahf
pusha
cmp
sub
cmp
outsb
scas
imul
lea
pop
mov
inc
cmp
pop
out
inc
mov
mov
mov
mov
sahf
shlb
dec
push
movsb
xchg
mov
cmpsl
movsb
push
rcll
push
gs
cli
fisubs
adc
iret
addr16
mov
testl
lock
pop
pop
mov
cmp
mov
jbe
cbtw
or
inc
and
sti
mov
fidivrl
jo
jae
pop
mov
fldenv
rclb
int3
pop
fimull
cmpsl
xor
add
mov
shr
lea
xchg
xor
lret
addb
out
int3
or
int
dec
cmpl
or
dec
dec
std
jp
fadds
ss
xor
mov
fisttps
adc
aaa
andb
fdivs
pusha
pop
fistpll
icebp
inc
sub
inc
rorl
rorb
and
xchg
fsubrs
push
push
xchg
mov
xor
sub
adc
jno
cmp
testl
in
icebp
rcll
mov
hlt
mov
jl
xchg
flds
cwtl
mov
cmpsb
fwait
dec
cmp
out
sbb
push
pop
les
mov
fidivrl
sub
mul
sbbl
enter
pushf
push
popf
inc
pop
ds
movsl
xor
pop
aas
cmpsb
adc
daa
andb
cli
lock
aaa
push
or
sub
mov
arpl
ffreep
cmp
or
ss
dec
jbe
jbe
jbe
bound
out
xchg
jmp
mov
js
js
dec
or
mov
or
mov
push
sub
xchg
add
mov
push
push
xchg
aad
popa
aas
push
leave
rorl
into
je
arpl
cmp
pop
bound
and
mov
xor
sbb
sub
pop
mov
xchg
cltd
sbb
mov
loopne
push
xchg
in
mov
cmp
mov
lea
cmp
and
lret
inc
xchg
mov
xor
loopne
pop
xlat
outsb
fimuls
xchg
fidivrl
jae
arpl
mov
push
aam
cltd
ds
lahf
xchg
adc
and
pop
sarb
jno
push
ljmp
imul
adc
jae
jbe
outsl
insb
dec
mov
xchg
stos
mov
scas
stos
nop
lock
insb
leave
lea
mov
or
aam
lock
sub
inc
mov
adc
lahf
hlt
jp
adc
jnp
cmp
jbe
add
leave
jno
pop
cmp
loop
rcll
xor
xor
xchg
fyl2x
nop
pop
bnd
fdivrs
sbb
jnp
xor
cmpsb
mov
and
fcmovnb
rorl
dec
or
aad
cmp
mov
or
int
fmull
sub
jb
mov
push
and
mov
fwait
jbe
loope
push
and
ficompl
stos
mov
sub
pop
sub
fildl
push
cmp
sbb
cmp
test
es
mov
or
pop
fs
out
mov
popf
loopne
jno
push
int3
add
addb
jne
xor
inc
repnz
addr16
insl
insl
testl
adc
lret
xchg
xor
out
mov
add
sbb
or
insb
dec
cli
ret
mov
jle
fsubl
adc
pusha
mov
adc
cmc
fldl
shll
pop
sub
sub
inc
push
shrb
xchg
cmovne
js
les
and
add
dec
ficompl
imul
xor
in
dec
xchg
ds
js
jno
test
mov
ss
mov
inc
in
xchg
adc
xor
mov
mov
lcall
xor
pop
sub
int
lcall
shl
arpl
mov
ret
icebp
or
lret
cmc
sub
mov
outsb
pop
jcxz
mov
sbb
and
sub
daa
lret
sbb
adc
or
jns
pop
add
js
dec
add
ja
lcall
scas
add
imul
lcall
leave
int
sub
je
push
inc
das
inc
aam
or
inc
mov
xlat
cmpsl
inc
pop
xabort
sbb
gs
inc
add
cld
scas
mov
dec
pop
mov
mul
or
sbb
jmp
pop
mov
xchg
jecxz
inc
in
out
xor
ret
loopne
cwtl
jne
dec
sub
add
or
jo
shrl
cmpl
mov
dec
insl
dec
sbb
xor
in
push
test
mov
pop
stos
ja
pop
or
xor
leave
adc
add
imul
lsl
xchg
stos
test
sahf
fcomip
jnp
mov
add
jae
insl
cmp
inc
dec
mov
shll
cmp
and
leave
jae
cmpsb
mov
inc
sbb
insb
sahf
mov
add
dec
enter
xchg
dec
cld
scas
jnp
scas
pop
or
inc
shrl
sub
and
mov
ret
mov
negb
lcall
icebp
loope
ss
mov
inc
js
mov
mov
sub
xchg
xor
push
test
cld
pop
sub
adc
add
enter
mov
mov
push
movsl
aad
push
pop
jno
fdivrl
xchg
rorl
loopne
push
mov
or
int
adc
or
xchg
adc
ds
jae
pop
push
xchg
aas
out
push
movsb
icebp
test
mov
ss
js
xlat
mov
hlt
ret
xchg
das
mull
aas
scas
inc
adc
xchg
sub
je
in
std
dec
mov
dec
aam
cltd
in
popa
lock
push
test
fucomp
ds
rep
xchg
or
iret
and
es
mov
jns
push
dec
sti
rcrl
push
in
icebp
ja
push
adc
sub
pop
xlat
icebp
out
sub
cmpsl
sahf
lods
adc
adc
mov
mov
dec
jl
daa
jp
xchg
mov
push
add
add
lock
mov
insb
mov
jae
jecxz
mov
push
inc
xchg
adc
inc
mov
add
adc
imul
test
pushf
fidivrl
fldl
mov
push
or
dec
lea
inc
scas
xor
jb
sbb
mov
mov
push
les
and
mov
mov
fsubrs
sbb
cmpsb
rcll
add
push
cmp
gs
adc
cmp
cld
mov
dec
repz
popa
in
arpl
subl
mov
movsb
mov
mov
lds
mov
inc
mov
jb
pop
orl
cmp
jns
or
shll
add
jbe
push
pop
andl
data16
mov
or
adc
adcb
es
rorl
and
xor
icebp
dec
sub
daa
fwait
mov
sahf
push
lret
fxam
inc
neg
fcomip
jge
pop
dec
lret
gs
into
mov
add
jmp
lock
pop
out
push
arpl
jle
add
bound
ljmp
mov
bound
jp
mov
aam
aaa
fdivrl
mov
addb
jmp
mov
jle
pop
push
mov
outsb
mov
in
fisubrl
pop
pop
ss
adc
das
sbb
aaa
gs
sub
cmp
adc
and
dec
insl
jg
pop
std
or
iret
pop
mov
fstpl
xorl
inc
mov
popl
movsl
xlat
ret
out
movsl
out
add
xchg
arpl
xchg
cwtl
pop
mov
xlat
in
es
enter
cmc
in
sti
xlat
cmp
xchg
imul
cmp
push
outsl
jno
xchg
mov
or
fnsave
testl
cmp
shlb
stc
inc
and
cmp
outsl
inc
icebp
pop
push
mov
shll
jnp
imul
lahf
cli
testl
sub
xchg
adc
sub
test
cmp
jo
push
cmp
xor
lea
or
into
mov
and
cmp
sar
or
sbb
lods
out
stos
xchg
andl
add
xor
mov
inc
xchg
mov
push
and
jl
push
std
sti
xchg
cmp
shr
fmuls
insl
addb
inc
add
loopne
adcb
daa
loop
out
mov
cmp
add
add
les
popa
ret
push
lock
push
inc
jb
popf
or
test
hlt
sbb
jmp
pop
mov
outsb
loope
mov
push
shrl
pusha
test
lret
push
pop
or
loopw
or
inc
in
mov
fistpl
mov
sbb
shl
aad
push
push
ror
mov
push
mov
pop
out
pop
lahf
sbb
out
std
int
mov
in
test
pop
ljmp
rcll
adc
imul
add
inc
cmp
jb
fcomps
push
mov
mov
ljmp
push
push
ds
pushf
js
mov
jmp
mov
fsubs
dec
hlt
mov
cmp
es
adc
push
pop
shrl
mov
enter
lret
jp
xor
aaa
lea
dec
js
pop
mov
iret
lock
push
xchg
icebp
int3
mov
jmp
imul
icebp
gs
inc
or
cmp
je
xchg
adc
mov
dec
dec
in
sarl
in
inc
pop
xor
mov
fbld
mov
cmc
jbe
pop
jle
xchg
cltd
cli
fisubrl
push
sbbl
pop
add
leave
out
xor
subl
cmpsb
and
icebp
xor
fistl
mov
pop
fisubrl
cltd
divl
push
push
pop
lock
pop
and
pop
cmc
pusha
loope
out
dec
add
sbb
int
lds
rcrl
pop
mov
out
pop
popa
add
lcall
cmp
repz
sub
cmp
xchg
adc
cmpsl
xchg
aad
insl
sbb
aaa
mov
lods
sarl
fsub
xor
xor
mov
hlt
mov
hlt
sar
push
and
std
push
jno
test
pop
ljmp
xchg
std
aaa
pop
or
xchg
lds
mov
popf
add
pop
inc
pop
mov
adc
shrb
push
push
lcall
ja
push
cmpsl
push
sbb
inc
adc
inc
insl
adc
xor
int
std
xchg
lock
loopne
mov
gs
add
mov
cmp
in
imul
mov
push
loopne
cwtl
cmp
lods
mov
adc
add
mov
loopne
ljmp
sbb
cmc
mov
mov
fcom
mov
in
sub
cmp
xchg
or
icebp
cmp
clc
lret
jbe
lds
fisttpl
jp
rolb
lret
xor
adc
xchg
or
hlt
jno
jne
xor
sahf
ljmp
jle
test
inc
mov
add
and
mov
mov
xor
add
adc
icebp
jle
push
jge
dec
cmp
push
mov
insb
jne
xchg
dec
cmp
xchg
add
leave
int
xchg
and
cli
leave
pop
xor
test
call
jecxz
repz
and
gs
das
popa
das
clc
xchg
cmp
lahf
mov
jo
xchg
orl
insl
sub
jecxz
fistl
inc
sub
loop
mov
cmp
mov
push
out
loopne
movsb
dec
sub
insl
das
sahf
pusha
data16
mov
xor
pop
ss
dec
lret
adc
ja
push
lea
and
jb
ljmp
inc
fadds
insb
sbb
mov
mov
ret
ja
mov
negb
outsl
inc
lods
lret
add
lcall
stc
lea
jecxz
movsb
inc
das
in
and
cmove
data16
test
sbb
imulb
fmuls
cmpl
enter
lahf
xchg
mov
jmp
rol
mov
push
xor
gs
imul
aad
test
mov
std
outsl
or
mov
and
push
and
or
sub
mov
ret
inc
xor
and
sub
iret
xor
push
lret
aaa
mov
in
and
sbb
and
call
pop
sub
in
cmp
add
inc
add
jae
pushf
add
dec
and
push
pop
sbb
mov
mov
mov
sar
lock
push
pop
sarb
mov
arpl
and
movsb
ljmp
dec
push
ficompl
and
sub
jnp
pusha
push
fs
jns
sbb
inc
pop
loopne
push
inc
fildll
incl
sbb
cwtl
push
sub
cmp
call
sbb
push
outsb
das
stos
aad
je
xor
push
xchg
hlt
mov
aaa
test
icebp
xlat
inc
out
add
stc
in
shl
inc
xor
dec
lahf
sub
arpl
arpl
outsl
add
add
adc
sahf
xor
dec
hlt
ficompl
or
mov
aaa
lea
clc
jmp
mov
lea
xchg
inc
pushf
pop
inc
out
sarb
lret
cmpsl
int3
push
add
icebp
pop
fcomps
pop
in
fxam
outsb
shl
sbb
mov
loop
mov
cmpsl
lods
mov
inc
daa
in
fwait
push
jle
sbb
repz
mov
push
ror
popa
mov
push
mov
xorb
add
ja
jl
int
sbb
jecxz
pushf
mov
cld
pop
bound
or
adc
pop
or
scas
out
xchg
insl
adc
adc
xlat
je
or
call
or
cmp
sbb
lret
and
xor
ss
jge
cltd
ja
jo
mov
jne
int
and
jbe
jle
cmp
pop
inc
and
subb
shl
in
xor
test
dec
jl
jno
xchg
stos
adc
pop
es
aam
or
jae
fwait
jmp
dec
cli
std
ja
fs
and
ds
bound
lods
outsl
repnz
fcoms
push
cltd
or
leave
out
pushf
scas
add
stc
sbb
push
cmp
movsb
lods
xor
data16
fists
push
in
mov
or
aas
pop
fsubs
add
xchg
mov
loope
pop
push
mov
xchg
xor
ljmp
loope
adc
out
bound
and
and
add
call
in
sbb
loop
ds
pop
sti
aaa
cmpsl
ds
mov
xor
aas
mov
cld
idivb
clc
and
xchg
inc
cmp
test
test
cld
jo
sub
jb
dec
ja
jle
xchg
sbb
lahf
xor
push
orl
lahf
inc
in
mov
add
test
add
test
sub
and
mov
push
imul
jnp
ljmp
in
push
cmp
push
and
arpl
push
or
cltd
adc
pop
imul
testb
lea
push
mov
pop
jmp
rolb
jle
sarb
lock
ljmp
cs
loope
xchg
mov
dec
jg
dec
push
test
sahf
int3
lret
add
test
jbe
lock
les
ficompl
add
jl
cmp
sbb
add
cmp
lods
or
in
hlt
lret
mov
add
test
adc
fs
jle
shr
xor
rcrb
pop
mov
test
push
fsubrs
in
and
loope
and
and
shlb
popf
dec
mov
dec
mov
xchg
xchg
loop
push
xchg
sbb
sahf
mov
inc
push
add
rcr
pop
push
jg
pushw
jmp
test
xchg
fnsave
pop
jbe
pushf
pop
cltd
outsl
dec
ret
cmpl
mov
addr16
sub
shlb
icebp
push
dec
std
sbb
jnp
xchg
repnz
or
dec
cmp
notb
push
mov
mov
inc
scas
fwait
test
in
mov
fisubl
call
ja
aas
sbb
imul
imul
cmp
push
xor
loop
call
mov
or
iret
notl
gs
sbb
in
hlt
xchg
xchg
or
lods
jge
pop
jae
test
fadd
mov
mov
sub
or
repz
push
int
push
les
mov
adc
sub
cwtl
mov
mov
insl
shrb
and
inc
dec
out
mov
inc
add
lret
lret
mov
outsb
sub
fwait
mov
mov
mov
and
inc
icebp
rorl
outsb
cmp
mov
xlat
popf
push
mov
cmp
sbb
sbb
jb
lods
mov
sub
xor
mov
outsb
incl
sbb
sub
aam
jb
and
mov
test
xor
jle
inc
xchg
mov
dec
and
pop
add
in
std
sub
movsb
das
ret
aad
add
sti
push
cmp
pop
andl
js,pt
xor
loope
xlat
add
dec
ss
cmp
fcmovnu
pop
sbbl
fwait
cmp
cmpsb
jae
shlb
out
mov
mov
faddl
daa
or
push
pop
pop
pop
and
call
mov
scas
cs
jo
fiadds
lcall
call
subl
int
sub
icebp
jg
adc
sbb
shr
aaa
pop
jns
into
fucom
test
mov
fs
or
mov
mov
xchg
sub
cmp
push
in
into
scas
stos
out
loop
push
addb
lds
dec
insl
xchg
les
cmp
jecxz
ret
out
inc
sti
inc
daa
push
insb
cmp
xchg
shl
mov
inc
pop
dec
icebp
lret
pop
int
and
sbb
inc
repnz
dec
mov
xor
gs
mov
repz
rcll
mov
xor
dec
shr
roll
out
and
or
adc
pop
sbb
iret
inc
lret
sbb
cmp
inc
sub
out
lahf
addr16
stos
cltd
sahf
jl
mov
push
pop
psubq
pop
scas
mov
or
jne
xchg
ret
js
fstl
in
test
addr16
imul
ljmp
fstpt
mov
dec
add
leave
mov
mov
xor
cmp
jae
inc
movl
mov
imul
jg
cmp
dec
or
cmpsb
push
in
repz
dec
add
lret
push
inc
lods
add
arpl
dec
push
movsb
loop
add
stos
rorl
je
dec
scas
ljmp
xchg
sub
add
ret
sbb
arpl
data16
mov
mov
ficoms
sub
or
bound
adc
in
inc
xor
xlat
mov
sub
push
ljmp
add
xchg
push
test
movsb
sti
arpl
push
xor
mov
pop
jg
leave
dec
imul
jne
mov
pusha
dec
sbb
inc
xor
dec
dec
cmp
in
mov
popa
mov
cld
scas
push
mov
dec
mov
mov
mov
addr16
movsb
ljmp
in
dec
out
mov
ja
jno
mov
je
arpl
nop
xor
adc
jecxz
insl
add
cmc
sbbb
cmc
scas
fnsave
pop
pop
jae
inc
xor
movsb
out
pminsw
stos
sbb
aam
inc
cmp
pop
xchg
js
lret
inc
pop
test
enter
xor
adcl
adcb
sub
test
and
push
daa
ret
push
adc
mov
mov
push
and
adc
fcompl
mov
pop
add
xchg
dec
sub
jl
push
out
ficomps
hlt
aaa
outsl
rcrl
push
cmpsl
mov
mov
fists
mov
movsl
adcl
lahf
inc
dec
mov
in
push
fdivs
dec
adc
stos
sbb
push
mov
idivl
and
or
insb
or
push
jno,pt
scas
fcoms
adc
lret
fcompl
push
call
sub
jo
insb
mov
incb
cmpsl
call
lcall
loop
push
mov
adc
daa
sub
sub
inc
movsb
mov
sbb
repnz
push
sub
enter
ds
int3
scas
aas
pop
test
dec
mov
mov
jns
xor
push
dec
xor
push
pop
mov
dec
divb
inc
inc
jp
add
cld
jp
jg
mov
inc
cmp
mov
insb
hlt
cld
sbb
jecxz
rorl
jle
mov
and
fidivrs
mov
add
xor
aad
imul
pushf
cld
pop
xor
xchg
imul
and
cmp
push
lret
jg,pt
or
dec
shl
stc
imul
lcall
je
rcl
xchg
fisttpll
std
int3
jae
sti
je
outsl
insb
ljmp
xor
hlt
dec
mov
dec
push
imulb
jb
insb
addr16
mov
nop
and
adc
and
push
xchg
xchg
adc
mov
jp
mov
ficoms
add
pop
add
sbb
pusha
sbb
add
cmp
push
sub
daa
mov
jecxz
jne
test
push
inc
mov
cwtl
lea
sahf
sbb
dec
mov
addl
lcall
dec
loopne
aas
inc
fstpt
mov
mov
and
cli
call
and
in
aas
jecxz
push
dec
and
ja
or
ljmp
sub
fisttps
mov
sub
mov
bound
test
jmp
cmp
mov
enter
push
mov
fwait
rorb
call
adc
sub
les
jbe
aam
stos
xor
nop
sub
pop
xor
jns
movsb
in
int3
inc
lods
pop
lds
adc
aas
insl
lcall
mov
dec
lock
test
lock
ss
xor
cwtl
out
nop
dec
fsubrl
add
std
xor
inc
xor
jb
pop
add
jl
loop
movsb
sub
pop
test
add
and
inc
ret
pop
aad
popf
xchg
repnz
sahf
repnz
xchg
andl
sub
es
insl
sbb
xchg
adc
fwait
test
scas
dec
popf
mov
movsl
adc
arpl
addr16
mov
dec
cmp
les
jb
and
mov
cmp
nop
pusha
add
cmp
pop
es
cmpsl
fwait
mov
pop
cmp
ds
lds
outsb
add
mov
int3
lahf
cld
fxch
loope
dec
jb
aam
cmp
push
in
sub
mov
aad
and
popf
aaa
and
push
mov
and
roll
sub
and
pop
jp
jnp
mov
adc
mov
pusha
inc
cld
xchg
cmpsb
and
mov
sahf
orb
or
jecxz
mov
les
lahf
or
test
sti
in
lods
push
xchg
shlb
subb
push
popa
fs
mov
jb
pop
insb
sub
in
call
or
loop
mov
dec
lcall
shll
lcall
dec
ljmp
inc
adc
mov
jmp
cmp
ds
push
ds
les
or
mov
push
xchg
out
dec
xor
adc
push
negb
dec
push
lea
cmpsl
push
negb
leave
mov
gs
cmp
outsl
adc
in
xchg
xor
or
xchg
std
jge
push
cmp
jmp
pop
loope
fcoms
fstl
stc
stos
cli
xchg
test
and
lods
mov
jmp
scas
jo
mov
fldl
jae
dec
iret
sub
es
push
popf
scas
loop
lock
aad
test
push
out
push
insb
fs
clc
xor
shrb
jae
or
lock
jae
sbb
leave
add
outsl
sbb
mov
scas
add
cwtl
aaa
cmp
xchg
dec
jge
daa
mov
fucomip
jp
xchg
cli
inc
mov
sbb
movsl
or
push
fdivrl
roll
sahf
cld
lods
cmp
jb
loope
mov
mov
clc
sbb
lret
aad
lahf
ljmp
dec
in
xor
in
jnp
aam
repnz
outsb
xchg
lds
xor
data16
xchg
lret
popa
repz
int
iret
jecxz
jae
jo
mov
lods
into
enter
sub
adc
sub
pop
mov
push
mov
xchg
mov
test
movsl
xor
inc
or
mov
or
imul
jo
iret
out
out
sti
testl
outsl
xchg
xchg
fcmovnb
jmp
sarb
insb
daa
loopne
mov
add
mov
xchg
je
sbb
xchg
sbb
ds
sbb
jno
add
inc
add
sbb
ret
stc
movb
cld
pop
int
adc
adc
jge
stos
sti
in
ret
imul
mov
fsub
call
and
add
sbb
jno
xor
int
sub
psadbw
out
ret
jecxz
andb
mov
jecxz
je
lods
call
cmpsl
mov
adc
push
jp
test
out
out
jg
dec
cmp
jmp
mov
dec
or
sub
push
mov
add
pushf
pop
inc
pop
lcall
mov
mov
pop
jns
xor
jns
rolb
lret
dec
addl
mov
lahf
aam
inc
js
pop
mov
mov
mov
sbb
mov
mov
outsl
fnstenv
lea
insl
and
mov
addl
inc
add
mov
ror
adc
ljmp
insb
popf
test
push
std
je
ret
imul
sbb
and
bnd
repz
subb
enter
xor
mov
or
stos
sub
cli
dec
sub
mov
jmp
stos
and
or
xchg
pushf
mov
icebp
adc
in
pop
jae
mov
jns
das
xor
push
pop
xchg
xor
xchg
jno
add
psubq
icebp
push
mov
mov
rclb
inc
pop
ja
ret
in
add
loope
and
jge
inc
sbb
xchg
roll
push
repnz
sahf
push
nop
adc
insb
in
cmc
adcb
int3
sub
xchg
ja
mov
pop
dec
dec
lahf
xchg
inc
shrl
sub
push
pop
push
mov
mov
clc
push
pusha
sbb
or
adc
dec
out
dec
test
xchg
sbb
cmpsb
add
pop
add
lahf
iret
in
cmp
or
jmp
or
in
sub
popf
adc
fildl
pop
iret
dec
xchg
lds
push
cwtl
enter
pop
dec
xor
enter
mov
and
rorb
dec
aaa
jl
pop
mov
mov
repnz
repnz
test
repz
mov
jl
nop
dec
rorl
push
cmp
int3
dec
jmp
mov
iret
mov
adc
lods
or
cmc
jmp
mov
dec
pop
sahf
pop
jp
inc
cli
push
cmpsl
mov
cld
jo
and
jbe
jle
aaa
pop
add
push
out
ljmp
jb
dec
pop
cli
inc
stos
daa
pop
push
dec
and
jg
push
popa
sub
incb
push
or
inc
pop
pop
adc
adc
xor
insb
loope
pop
and
inc
shlb
add
cs
xor
xchg
push
mov
sub
jmp
dec
arpl
mov
cmp
push
stos
push
mov
sub
mov
icebp
sahf
loop
dec
test
arpl
dec
cmp
push
mov
lret
rorl
inc
out
mov
inc
xchg
adc
cmpsl
into
popa
or
xchg
dec
mov
aas
or
push
sub
sbb
test
les
push
fsubl
inc
pop
scas
inc
sub
xor
mov
call
pop
lods
icebp
fsubl
stc
rclb
test
jns
stc
adc
dec
mov
xchg
inc
xor
adc
cs
cmp
pop
xlat
xchg
xor
mov
ret
xchg
xor
lret
sub
jo
orb
ret
push
adc
ret
inc
gs
fisubl
adc
sbb
idiv
jl
adc
mov
insb
pop
xor
xor
mov
jnp
aaa
cmp
pop
shlb
sbb
pop
xchg
pop
sub
dec
movsb
add
and
subl
jl
shr
inc
pushf
cmp
cmp
xchg
daa
dec
pop
mov
test
adc
lods
push
dec
test
adc
push
sub
xchg
and
gs
clc
enter
xor
fidivl
or
imul
stc
hlt
stos
pop
adc
mov
mov
frstor
cmp
test
aaa
mov
stc
or
mov
in
insb
je
xor
ret
sbb
out
les
cwtl
call
mov
pop
leave
xchg
mov
lret
inc
or
jbe
fstpl
mov
pop
stc
ss
dec
jno
shrl
sub
jnp
adc
or
ljmp
decl
or
dec
xchg
pop
mov
mov
sti
stc
repz
cmp
and
mov
push
mov
mov
addr16
out
dec
movsl
mov
xor
mov
add
cld
sub
push
repz
cld
adc
outsb
daa
fnstsw
mov
push
mov
sub
sub
mov
and
addr16
jne
iret
mov
push
les
sahf
aaa
insl
leave
jp
enter
push
cmpb
std
jle
andl
outsb
add
fbstp
stos
mov
sub
pop
repz
or
mov
sbb
fucom
dec
dec
mov
push
xor
inc
lods
scas
sti
xchg
rclb
adc
out
addr16
sbb
add
xchg
imul
cmp
xchg
das
push
pop
imul
inc
lods
pushf
adc
sbb
or
jb
cld
imul
dec
in
push
loope
loopne
in
dec
lret
cmp
std
insl
lock
dec
xchg
mov
loope
mov
xchg
ds
add
mov
das
cmp
push
outsl
push
fcmovnu
clc
lcall
imul
jmp
cmc
and
push
jg
mov
push
add
and
inc
xor
pop
je
mov
lcall
les
jne
jo
dec
jg
cmpsl
shlb
push
loope
and
out
mov
js
add
adc
mov
mov
inc
scas
insb
push
insl
rorl
mov
vmovlpd
shrl
pusha
mov
mov
or
dec
popf
push
sbb
xlat
mov
or
popa
jne
imul
lds
xlat
pop
cmp
mov
cwtl
into
cmp
sub
std
pop
insb
loope
and
xchg
fnstcw
imul
add
cmp
les
inc
xchg
mov
cmp
int3
sub
sub
mov
mov
es
xchg
add
mov
pusha
jge
jno
push
lds
sbb
mov
and
mov
xchg
stos
push
out
js
jecxz
fwait
lcall
and
push
xchg
fistps
push
out
jmp
add
hlt
push
pushf
aas
mov
loop
or
xor
add
decl
ss
mov
flds
fnstsw
add
sahf
or
into
mov
jns
popa
dec
pushf
stos
hlt
mov
mov
or
sbb
push
or
movsl
push
rcrb
je
mov
gs
jp
mov
jbe
jmp
pusha
and
fmul
int3
repz
push
and
nop
push
out
xchg
cltd
pop
xor
sti
dec
addr16
mov
cmpsb
xchg
sarl
inc
inc
inc
setle
sub
inc
scas
sti
pop
mov
loope
inc
jle
pop
aas
mov
cmpsb
gs
mov
mov
sub
pop
fmul
sbb
loopne
popf
lret
cld
hlt
sbb
adcl
iret
pop
or
lcall
mov
xor
hlt
mov
xchg
and
dec
popf
je
enter
cmp
sub
bound
inc
inc
icebp
adc
jbe
xchg
sbb
outsb
stc
repnz
shlb
fmull
mov
lods
ds
sub
mov
popa
adc
scas
mov
daa
les
nop
aaa
sti
pop
outsb
sbb
arpl
decb
cwtl
jae
call
mov
outsl
aad
xorb
cmp
mov
xor
inc
sub
fs
mov
test
mov
inc
mov
call
loopne
ljmp
sub
mov
xor
xchg
inc
sbb
icebp
push
les
fstl
mov
pop
sbb
cmp
and
ret
dec
dec
imul
push
jo
popf
les
dec
daa
nop
ror
shl
jb
dec
xchg
jne
imul
lds
cmp
nop
sbb
mov
loop
or
pop
push
inc
mov
and
test
outsl
lods
push
jle
mov
pop
loope
cltd
xchg
loop
fwait
dec
mov
fstps
icebp
sbb
test
push
sahf
aam
and
ljmp
das
ret
push
sbb
xchg
mov
xchg
loope
int
adc
das
mov
or
cmp
popa
push
icebp
scas
test
das
or
push
int
dec
push
add
pusha
pop
mov
and
and
lock
lcall
mov
jnp
js
mov
test
sub
xchg
lds
sbb
repnz
sti
mov
std
xchg
das
push
sub
ret
sbb
pop
mov
cld
lret
imul
xor
cmpsb
mov
xor
jns
int3
je
adc
mov
fisubrs
shlb
pop
idivb
pop
xchg
inc
xchg
xor
mov
fldt
sbb
sub
clc
jb
es
inc
xchg
and
lds
test
push
push
stos
dec
adc
insl
xor
jb
sub
test
sbb
pop
rep
sub
shl
imulb
lods
pop
fisubs
push
fsubrl
ja
sub
add
fisttpll
mov
hlt
mov
inc
nop
add
popf
and
push
lods
inc
lcall
or
sbb
cmc
push
xchg
inc
pop
daa
ret
mov
popf
mov
stc
xchg
mov
test
stos
xor
push
iret
insb
mov
mov
add
cltd
mul
fimull
adc
cmp
fchs
and
daa
dec
int
cld
lahf
push
fstl
adc
inc
dec
aad
sub
lahf
sbb
lcall
dec
add
add
sub
dec
push
cmpsl
mov
in
push
hlt
push
inc
aam
cmp
out
xchg
mov
fcomps
adc
xor
mov
std
test
repz
or
dec
push
ss
xchg
stos
push
mov
xor
and
pop
dec
lods
adc
mov
jns,pn
or
dec
data16
jle
sbb
xchg
xorl
fs
lock
pop
insb
pop
int
in
out
lret
sub
stos
es
mov
repnz
sbb
ret
call
jo
jmp
enter
or
test
mov
wrmsr
pop
xor
jmp
push
jecxz
test
jb
inc
cs
inc
adc
fwait
icebp
ret
or
hlt
mov
lret
aad
movsl
lret
lahf
orb
or
mov
adc
sbb
add
ss
dec
sbb
pop
cmc
and
add
andl
test
dec
xchg
xor
dec
fistl
jae
imul
jp
sub
cmp
loope
adc
sub
add
test
push
xor
xorps
jnp
xchg
pop
aad
loopne
fidivs
push
add
cmp
and
gs
and
jb
sarl
testl
shll
popf
adc
aaa
xor
push
inc
xchg
cli
fstpl
add
jl
sub
jne
mov
jmp
push
loop
add
dec
inc
jno
lcall
mov
mov
clc
or
in
dec
xor
popa
mov
sbbb
test
lock
movsl
std
adc
xchg
in
std
jno
sbb
mov
shrl
jnp
clc
or
popf
inc
adc
or
inc
xor
test
call
sub
mov
sbb
push
movsb
les
or
cmp
or
sub
mov
xchg
adc
ds
sub
fistps
loopne
jmp
cwtl
jmp
mov
and
xor
and
imul
cmp
out
rol
push
sbb
shll
pop
js
dec
lahf
out
lret
in
daa
xor
push
mov
mov
rep
push
jne
jge
in
imul
dec
or
int3
cmpsl
pop
decl
in
push
iret
xchg
push
out
or
adc
mov
cmp
sub
nop
icebp
add
pop
push
lds
dec
inc
out
pusha
adc
push
lods
fcompl
loopne
mov
fnstenv
fisttpl
and
das
ret
cmpsb
cmp
call
dec
ret
mov
out
cmpb
mov
testb
sbb
mov
inc
popa
mov
mov
push
xchg
sti
scas
jbe
xchg
mov
jmp
jmp
leave
xchg
and
enter
je
dec
xchg
inc
sbb
stc
mov
sbb
push
sti
int3
mov
daa
stc
icebp
aas
and
mov
js
inc
les
lea
inc
enter
dec
int3
scas
bound
filds
outsl
test
push
int3
aam
lret
stos
jge
and
sbb
mov
push
shll
pop
enter
ds
or
or
dec
fsubl
enter
test
add
pop
fists
pop
inc
jg
cmp
leave
cmp
xchg
enter
dec
mov
fdivl
scas
inc
jnp
cmc
sbb
jbe
jp
stc
ljmp
das
add
cli
and
adc
int3
xchg
mov
mov
loop
insl
aas
inc
addr16
andl
cwtl
nop
lret
rcrb
pushf
sbb
cld
lods
mov
inc
test
repz
sbbb
in
xchg
ljmp
andb
cs
aaa
push
add
mov
jmp
loopne
ja
hlt
lods
mov
mull
inc
xchg
push
aaa
mov
push
jge
jge
mov
xor
mov
push
stc
jecxz
sbb
sub
and
ds
loope
dec
rcl
test
jno
leave
jnp
fadds
xor
xchg
xchg
xchg
add
fcomps
addb
jg
loop
in
loope
das
in
sarl
fs
add
and
pop
sbb
and
lret
in
in
rcrb
shlb
jbe
dec
xor
jbe
lret
scas
xchg
scas
pop
add
ss
or
mov
cmpsb
mov
xor
in
add
mov
cmpsb
push
mov
mov
jge
mov
push
into
hlt
xchg
popf
test
and
adc
inc
outsl
xor
mov
sub
pop
sbb
sti
fstpl
pop
test
dec
cmp
xlat
mov
pusha
lahf
sbb
dec
arpl
ds
adc
pop
push
lcall
push
pop
mov
xchg
roll
loopne
sub
xchg
bound
or
jno
mov
sarl
cmpl
insb
out
call
xchg
add
fistl
cmpsb
jb
jbe
pushf
adc
rorl
sbb
xor
pop
ljmp
in
xchg
sbb
sub
test
cmpsl
add
imul
xor
andb
sbb
out
pop
cmpsb
xor
aam
rcl
sbb
call
mov
sbb
dec
mov
outsl
mov
enter
dec
pop
aam
cmp
cs
pop
dec
ss
push
add
test
cmpsl
push
push
sub
addr16
dec
cmp
or
adc
imul
or
lahf
in
stos
pop
data16
rorb
movsb
jb
mov
dec
xchg
push
or
xchg
mov
mov
mov
std
mov
push
es
je
dec
lret
dec
idivl
mov
test
cmpsb
call
cmpsl
idivb
fsts
push
cltd
xchg
hlt
iret
push
movsl
xchg
xlat
movsb
mov
mov
test
push
push
pop
out
pushf
test
adc
mov
jp
pop
mov
xchg
jecxz
xlat
mov
jle
outsl
test
dec
dec
mov
lret
add
xor
adc
repz
ror
xchg
push
repnz
jo
nop
lret
scas
pop
mov
push
xor
mov
ljmp
insb
jnp
mov
fstps
push
rcrl
push
adcl
nop
add
mov
loope
push
daa
adc
imull
cld
mov
mov
dec
and
cld
fimuls
jmp
cmp
idivl
mov
aaa
fs
xchg
outsb
pop
ds
push
jmp
aas
lret
lret
push
out
scas
in
pop
mov
movsl
rcr
scas
pop
adc
lret
mov
arpl
mov
lret
lods
and
pushf
pop
pop
adcb
inc
sub
or
insb
adc
inc
inc
nop
xchg
mov
mov
aad
and
and
sub
ljmp
testl
mov
xchg
dec
pop
mov
sbb
pusha
ret
xlat
inc
std
cmpsl
lea
jp
sbb
mov
aas
aad
fcoml
mov
rorl
xor
sbb
lret
out
out
das
jmp
into
test
outsl
aaa
and
pop
mov
jle
inc
mov
mov
shl
sub
mov
in
leave
or
dec
sub
nop
sbb
les
clc
ja
pop
mov
dec
pop
jmp
and
mov
addr16
cmp
and
leave
clc
sbb
jae
lcall
jbe
fwait
dec
jae
pop
and
cmp
int3
xchg
adc
daa
mov
xor
sub
inc
xchg
push
lods
sti
push
sub
repnz
out
push
xchg
scas
popa
out
cmp
lret
xor
test
sbb
lds
call
and
dec
jl
pop
jae
xchg
sub
push
inc
xor
or
ss
enter
sub
jo
das
js
ret
ret
push
int
mov
mov
data16
mov
inc
addr16
aad
pop
btr
add
fucomip
fldcw
pop
xor
mov
out
push
into
aam
jno
cmpb
ljmp
pop
mov
lret
pop
iret
shrl
add
mov
adc
sbb
outsb
cs
cmp
enter
and
jno
push
mov
bound
packssdw
cmpsl
pop
sbb
cmp
mov
dec
pusha
sbb
sub
push
dec
lcall
push
and
ficoml
sbb
push
jae
jb
sub
fsub
iret
std
fucomip
imul
fstl
adc
in
stc
test
rcll
jmp
cmpsl
inc
popa
lock
insl
jle
dec
and
push
push
and
pop
inc
cmpsb
ud0
add
divb
pop
fnstsw
add
adc
adcl
sub
daa
adc
nop
fxch
lds
gs
rclb
out
adc
js
pop
stos
jne
sub
inc
inc
mov
lds
cmpsl
jecxz
fld
bswap
rep
jne
xchg
imul
xchg
jl
leave
popf
scas
cs
jecxz
dec
lahf
leave
mov
pop
inc
pop
pop
repnz
adc
loopne
jle
mov
and
adc
push
sti
push
inc
adc
pushf
and
push
dec
push
cli
sbb
fiaddl
testl
or
or
push
int3
jo
mov
mov
repz
ss
mov
filds
jp
xor
pushf
sbbl
aad
add
std
and
push
add
pop
pop
and
inc
jno
adc
fs
xor
int
mov
fiadds
notb
jnp
dec
fwait
sbb
rcrl
mov
or
ret
fdivl
leave
xchg
out
mov
rorb
jp
mov
in
add
cltd
mov
out
ja
xor
sub
in
inc
sub
add
in
mov
pop
in
outsb
repnz
call
fcmovbe
popf
inc
pop
out
mov
cmp
mov
dec
xchg
stos
jecxz
xchg
sub
icebp
lcall
ljmp
out
dec
fiadds
sub
sbb
inc
test
cld
lret
jne
push
dec
push
rcrl
jb
into
rcll
ds
add
add
xor
rol
push
mov
xchg
add
pop
je
and
mov
cmp
mov
jb
mov
push
scas
adc
cmp
or
mov
sub
push
pop
mov
push
loope
sbb
cmc
mov
pop
sub
cli
fidivrs
lahf
movsl
xor
out
sub
shlb
mov
mov
popa
jg
lea
xor
cmc
cmp
xor
popa
push
jbe
pop
ja
adc
mov
popa
dec
push
ja
aas
jg
ret
inc
aad
pop
sub
cmp
fadds
inc
lahf
ss
xchg
jl
imulb
push
in
sub
sub
and
jge
sbb
jns
cmpsl
cld
mov
xchg
pop
fs
ret
sub
adc
daa
adc
or
idiv
add
mov
ret
divl
pop
icebp
mov
inc
sub
sahf
rcll
sahf
out
sub
ret
jbe
movsb
inc
push
inc
pop
daa
push
lret
inc
jg
aas
xchg
ss
add
dec
pop
dec
or
call
cmp
pop
rolb
sub
dec
fbstp
push
and
sbb
sub
in
push
lea
add
xorb
xor
idivb
je
sub
cmp
or
inc
jmp
int
mov
dec
cmp
jo
cmc
mov
pop
cmp
adc
mov
int3
sbb
es
imul
ficoml
sub
pusha
xor
jmp
xor
add
mov
repnz
fistpl
daa
mov
inc
popa
sub
and
icebp
scas
sub
cmpl
mov
call
push
cmp
push
in
std
sub
aaa
lret
pop
jge
jae
push
adc
ret
or
in
dec
mov
mov
fistl
stc
movl
xchg
xchg
pop
or
popa
mov
sbb
std
mov
dec
scas
jl
xchg
repnz
aam
inc
aaa
jne
mov
shll
dec
iret
popa
addr16
dec
cmc
es
popf
lds
xchg
mov
sahf
or
jb
dec
mov
scas
pop
mov
push
mov
push
xor
sub
sbb
test
adc
xor
push
fmuls
mov
mov
cmp
imul
lcall
mov
push
mov
jmp
int3
and
xchg
pop
cwtl
ja
push
jno
lods
leave
ds
jg
or
stos
ja
push
sbb
lods
jmp
xchg
mov
pop
fcmovnbe
fbld
cwtl
mov
xchg
inc
jo
xor
insl
ss
jns
xor
and
cs
xor
hlt
mov
sub
push
cmp
push
idiv
stos
xlat
stos
rolb
adc
xchg
hlt
sbb
insb
sub
jns
repnz
aaa
mov
fadds
enter
mov
in
xor
outsb
adc
or
sti
jnp
xchg
push
jb
fdivr
lcall
or
lahf
add
mov
js
ficompl
sti
push
adc
rcrl
repz
mov
loopne
jge
and
loop
ficomps
xchg
mov
and
dec
inc
imul
and
jecxz
sbb
cmp
fisubrs
addb
jecxz
adc
jle
fcmovne
rorl
mov
call
push
pop
aad
xor
sbb
mov
adc
cltd
push
popf
lret
dec
pop
inc
arpl
ss
push
mov
jp
xchg
imul
fwait
dec
popa
sbb
add
lahf
jp
mov
fmull
scas
and
mov
mov
fisubrl
test
fstl
roll
imul
orl
imul
xor
inc
push
sub
mov
repz
leave
inc
imul
mov
or
aaa
jne
lahf
push
fwait
mov
decl
sub
mov
add
xor
mov
dec
push
jnp
sub
xchg
mov
repnz
ljmp
sahf
insb
lods
add
popf
xchg
cmp
sbb
lcall
push
add
cmpb
mov
imul
lods
push
adc
mov
rclb
test
subb
push
loop
popa
mov
mov
pop
gs
push
aaa
sub
gs
fcmovb
rolb
in
inc
sbb
scas
jmp
stos
hlt
mov
xlat
cmp
cmp
mov
or
sub
mov
push
mov
lahf
pop
mov
ret
sub
jb
mov
insl
int3
mov
std
cld
cs
idivb
adc
xchg
and
inc
das
push
test
mov
ret
rcrb
inc
mov
imul
jb
stos
push
jae
and
inc
and
stos
mov
and
mov
pusha
sti
jo
in
mov
mov
add
stos
insl
sub
testb
ret
pop
jno
in
imul
in
adc
pop
mov
inc
push
loope
jne
inc
cmpl
stc
adc
and
mov
popa
push
jecxz
ss
sub
cmp
push
addr16
jne
lahf
sbb
test
sbb
pop
scas
sti
arpl
xor
push
loope
int
and
int
fwait
adc
push
fsts
push
sbb
pop
mov
jns
insl
mov
adc
mov
pop
jae
imul
rorl
cmpsl
sahf
jne
aad
jecxz
dec
addr16
jl
addr16
enter
leave
sbb
pop
repz
out
xchg
out
pop
mov
je
into
push
push
cmc
stos
out
jae
cmp
dec
mov
dec
push
mov
cmp
imul
sti
fdivrl
sub
mov
fiaddl
sahf
cmp
lret
xchg
fbstp
loopne
push
xchg
jne
mov
test
inc
and
pop
in
aad
and
test
incl
jmp
into
out
jp
outsl
hlt
movsb
jno
sbb
adc
repnz
shl
rorl
dec
xchg
ds
fnstcw
cmp
imul
pop
ja
test
inc
xchg
test
inc
push
xchg
cmp
fldcw
and
add
inc
jle
in
icebp
pop
pushf
loop
jno
lret
sbb
jo
stos
inc
sbbb
push
ret
outsb
jmp
mov
add
cmp
lret
cmpsl
or
xor
cld
or
data16
out
adcl
test
movsl
jae
xchg
test
rolb
jp
dec
push
adc
sub
stos
out
out
cld
or
stos
sub
int3
adc
ja
add
divb
pop
push
sbb
pop
shlb
shll
popf
stos
and
jge
xor
sbb
repnz
dec
pop
xor
mov
test
call
sbb
sub
and
mov
mov
int3
leave
std
rcrb
mov
pop
sbb
mov
xchg
in
jl
cli
add
dec
or
jle
sbb
mov
adc
and
xchg
pop
mov
mov
sbb
jne
rcll
push
mov
push
outsl
jb
hlt
in
add
bound
jns
out
pushf
push
dec
xchg
jecxz
jecxz
ss
jecxz
pusha
gs
push
cmpsb
das
jl
mov
jp
aaa
jle
jae
ret
xlat
addl
movsl
xchg
and
test
and
dec
out
jge
push
adcb
and
push
stos
add
cmc
add
dec
inc
sub
out
cmpsb
mov
push
shrl
aas
or
out
pusha
imul
enter
xchg
jnp
loopne
ds
ds
xor
repz
xchg
adc
add
inc
jnp
in
xchg
mov
cmp
push
cwtl
cmp
subb
mov
pop
jmp
sbb
cli
or
aam
loopne
insl
sbb
cmp
popa
push
clc
ret
push
dec
outsl
ret
outsl
or
mov
xchg
cmc
mov
loop
gs
push
cwtl
push
mov
jge
insl
repz
sub
int
lret
js
je
sub
mov
or
iret
fwait
and
je
mov
int
stos
nopl
aam
pop
fnstcw
lock
xchg
jg
push
rcll
icebp
sbb
xchg
loope
xchg
and
add
mov
cli
push
jp
or
cwtl
in
xchg
sbb
push
ljmp
rclb
push
scas
loope
sbbb
cmp
fldenv
ret
mov
call
inc
or
push
rcl
outsl
cwtl
test
int
ss
jg
inc
xor
xchg
jge
sub
adc
and
mov
scas
nop
gs
mov
lods
pop
adc
push
pop
es
in
pop
jmp
and
mov
outsb
pop
mov
jl
roll
xchg
cmp
aam
popa
jge
pop
stc
ficoml
push
shlb
cltd
cmpsb
imul
out
loop
jmp
dec
cs
mov
imul
dec
out
shrd
pop
sub
jp
testl
dec
xor
fsts
aad
pop
cmp
xor
or
aas
test
mov
loope
aaa
sbb
pop
xchg
xchg
call
jnp
mov
pop
lock
repz
cmp
mov
push
lcall
mov
shr
lock
cwtl
push
xchg
clc
push
inc
inc
cmp
cld
jnp
nop
sarb
fisttpl
ds
mov
fisttps
sub
inc
or
mov
in
push
sub
icebp
adcb
loop
popa
out
or
cmp
mov
cmc
stos
fisubrs
adc
pushf
jo
lret
shlb
jl
inc
test
adc
mov
adc
scas
mov
mov
cmp
sarb
cmpsl
dec
cli
cmp
dec
jns
fisttps
pop
xor
les
inc
inc
jo
jns
iret
pop
push
icebp
and
fiaddl
mov
mov
lret
aam
ret
clc
add
out
push
mov
push
inc
pop
sbb
pushf
imul
xor
lods
pusha
push
mov
add
fisubs
out
rol
loope
out
jnp
adc
or
mov
lock
inc
push
fnstenv
lret
in
or
or
inc
pop
inc
and
jne
ds
int
in
adc
into
cmp
sbb
cmp
outsl
pop
sub
xchg
or
test
repz
dec
pop
stos
add
jnp
cmpsl
das
add
xchg
inc
dec
icebp
fidivrs
loopne
add
je
lahf
lea
xlat
xor
fdivrl
jl
xor
ja
fwait
mov
jl
xor
in
xchg
inc
repz
popa
addr16
or
sub
add
adc
add
pop
mov
push
mov
inc
arpl
sbb
mov
cmpsb
notb
loope
xchg
lret
and
iret
mov
dec
test
adc
std
and
in
xchg
xchg
ret
sbb
call
xchg
jb
enter
aad
push
fwait
xchg
ret
ljmp
jno
stos
xchg
mov
je
jnp
icebp
loop
int
scas
cmpsl
push
pop
dec
jno
or
mul
aaa
and
dec
sub
jae
mov
sarb
imul
in
test
mov
out
enter
out
sub
pop
andl
sbb
imul
fsubl
or
movzwl
jne
inc
lea
push
je
pop
inc
mov
mov
mov
sti
xchg
push
aad
pushf
sbb
mov
xchg
fadds
loop
xchg
mov
lahf
jne
push
push
dec
push
mov
into
nop
out
xchg
scas
xchg
dec
push
ja
test
imul
out
loop
stc
jmp
inc
movsb
mov
jae
mov
jle
sbb
push
adc
or
clc
sbb
and
mov
fimull
int3
cmpsb
push
rorb
dec
jo
add
in
sbb
lock
xor
jmp
inc
xor
sbb
adcb
pushf
insl
push
rorb
xor
mov
clc
or
mov
lret
or
or
sub
sbb
bound
pop
mov
mov
sbb
stos
iret
loopne
iret
or
lret
mov
enter
push
mov
lods
mov
adc
pop
inc
and
fimuls
out
mov
clc
dec
xchg
or
or
jl
xor
mov
ljmp
roll
jp
or
adc
ljmp
loopne
dec
adc
mov
aad
adc
push
mov
retw
out
mov
scas
add
jmp
shrb
cmpsb
shll
ss
cld
daa
xor
pushf
lret
aas
cmpsl
jge
cmpsl
pop
cmp
push
icebp
out
mov
decl
arpl
repz
jmp
mov
cs
or
hlt
and
push
push
push
popa
outsl
and
stc
inc
add
test
push
outsl
xchg
lahf
das
call
jae
xorl
iret
and
fwait
pop
adc
and
loope
dec
bsf
aam
jbe
push
pop
xchg
pop
movsl
popf
xchg
add
mull
subb
dec
xchg
or
in
mov
andb
test
xchg
mov
ret
sub
push
or
fbstp
xchg
inc
lods
adc
cmpsl
js
mov
mov
adc
push
dec
aad
cli
cmpsb
sub
adc
lds
sti
pop
daa
stos
imul
sahf
data16
movsl
fldl
jo
mov
outsb
xchg
mov
aas
test
and
fcompl
pop
pop
lock
popf
pop
aad
xor
cld
inc
pop
pop
sahf
loop
and
lods
xor
cmpsb
fiaddl
mov
sbb
test
pop
in
ja
mov
into
cmpsl
jnp
lret
lahf
xor
pop
aad
adc
sbb
dec
popf
clc
mov
add
sbb
cmc
inc
jns
out
out
in
sbb
push
xor
enter
arpl
add
inc
movb
shll
jl
xlat
mov
ljmp
dec
incb
popf
sub
xor
js
add
test
mov
or
push
dec
dec
pusha
fnstenv
cs
sub
push
stos
xchg
add
dec
sub
shrl
mov
into
add
imulb
mov
cmc
inc
xchg
pop
mov
orl
cmp
stc
inc
aas
mov
pop
sub
pop
push
pusha
or
movsb
test
unpckhps
xchg
rcll
dec
sbbl
dec
sbbl
sub
add
flds
adc
xor
xor
in
mov
mov
jo
insb
sbb
sub
add
pop
dec
ss
add
subl
mov
jl
push
mov
xor
jns
pop
mov
cmc
and
sub
stos
jge
aas
shlb
jnp
bound
rclb
xchg
pushf
push
bnd
cmp
inc
andl
lds
cmpsb
and
add
inc
stos
ss
inc
call
mov
pop
add
mov
arpl
xchg
enter
pop
cmpsl
lea
mov
or
mov
cltd
mov
mov
xor
ljmp
outsb
sbb
jae
les
inc
in
cmc
jo
lret
fstl
das
bound
sar
xorb
and
shrl
je
cmp
jno
shll
int
sub
and
cli
or
mov
pop
mov
nop
stc
xor
xchg
inc
out
popa
daa
or
or
subb
inc
pop
adc
inc
dec
mov
fdivl
pop
rcrl
adc
out
lock
cmpsl
add
adc
out
orb
mov
mov
mov
jg
add
aas
xor
sar
jp
push
fdivl
pop
mov
sbb
adc
dec
mov
cmp
fnstcw
cmp
sub
imul
push
mov
and
jo
mov
lcall
frstor
jbe
lret
insl
cmp
xchg
mov
inc
lret
pusha
bnd
pusha
int
mov
jle
cmpsl
addr16
add
xor
pop
inc
cli
inc
and
pop
mov
insb
and
inc
xchg
subl
decl
xlat
popa
lret
into
push
cmc
sar
loopne
cmpsl
xchg
add
mov
sbb
mov
mov
pop
push
daa
or
inc
jb
adc
mov
push
add
and
jl
jae
jbe
dec
enter
fs
enter
add
push
mov
lods
mov
in
mov
add
push
and
js
call
cmp
scas
je
scas
lcall
sub
in
rclb
xchg
add
movsl
data16
popf
jg
push
jo
insl
mov
pop
sub
push
cwtl
sti
shll
push
lods
xchg
or
js
pop
ficomps
mov
sahf
push
add
cmpsl
xchg
push
pop
cmp
ds
push
push
ret
popf
es
dec
in
push
es
and
getsec
xor
cwtl
xor
add
and
std
addr16
sbb
push
mov
push
in
into
mov
repnz
ret
jmp
inc
subl
cmp
cmp
jne
lret
hlt
cmp
push
xchg
cs
pop
inc
add
pop
out
rolb
or
out
jcxz
mov
mov
dec
cmp
dec
cmp
outsb
data16
xchg
out
sahf
mov
icebp
outsb
jae
shl
mov
inc
sbb
or
pop
dec
push
jg
xchg
fidivs
inc
aam
jp
add
movsb
aas
mov
dec
pop
rcr
cmpps
push
push
dec
cld
popl
popf
hlt
xorb
rcll
out
mov
push
cmpl
inc
lahf
fisubl
sub
clc
stc
ds
sub
cmp
je
fsqrt
cs
jne
addr16
stc
mov
mov
and
sbb
inc
and
push
jbe
enter
test
xchg
xchg
cli
call
xchg
iret
pop
sbb
call
test
xchg
jb
lret
popf
enter
out
fidivrl
int
add
mov
jp
xchg
mov
fidivs
add
xchg
imul
mov
push
jp
test
mov
stos
pop
das
insb
push
pop
insb
into
mov
arpl
xor
rcrl
daa
push
daa
ss
sbb
pop
add
enter
inc
dec
cwtl
jbe
and
sub
xor
lret
jns
dec
sub
sbb
lods
cs
add
cmp
mov
add
enter
ds
pop
mov
mov
mov
mov
cmpsl
aad
pop
pop
sub
outsl
ret
sub
imul
mov
mul
mov
cli
in
mov
or
mov
test
mov
test
stos
ret
test
adc
push
push
pop
sbb
or
mov
in
sub
mov
negl
and
mov
gs
push
daa
cmpsl
or
push
adcb
mov
les
xchg
dec
stos
lcall
adc
pop
cmc
push
mov
addr16
dec
adc
lret
jmp
pop
mov
lock
mov
push
dec
cwtl
jg
aaa
mov
int3
push
test
mov
inc
cld
add
fildl
xor
shll
pop
aad
push
repnz
mov
mov
ret
pop
scas
daa
push
pop
lock
mov
pop
notl
cwtl
push
or
imul
inc
ret
jne
and
and
inc
xchg
pusha
and
push
xchg
in
std
cltd
or
lret
fwait
pop
je
xor
xor
mov
insl
rorl
lcall
gs
mov
int
or
mov
push
xor
mov
inc
mov
sbb
push
ds
cmpsl
jb
fsubr
call
daa
jne
gs
lret
out
mov
xor
cwtl
dec
mull
sbb
or
mov
cmp
subl
shrb
or
sub
sub
mov
inc
push
jl
mov
ficoml
xlat
movsb
push
push
or
inc
mov
jecxz
sbb
loopne
inc
data16
jl
xor
out
xor
pushf
add
inc
notl
scas
pop
inc
in
mov
xor
addr16
push
out
mov
xchg
push
mov
jo
stos
inc
push
xchg
jmp
dec
loop
sub
insb
test
cs
adc
add
push
movsb
and
les
and
sub
mov
dec
cmp
xchg
out
daa
cmp
push
call
xor
inc
cld
xchg
jno
push
xchg
repz
les
cli
sahf
incb
idivl
outsl
fidivl
mov
leave
mov
and
iret
xor
leave
xor
inc
popa
bound
push
call
out
outsb
aas
dec
sbb
sarb
fsubr
or
mov
xchg
sub
jmp
into
mov
adc
subb
jb
or
in
mov
mov
rolb
addr16
and
neg
adc
inc
xor
xlat
mov
in
mov
and
cltd
add
in
mov
mov
adc
jnp
ds
fs
clc
in
mov
jge
dec
loope
shll
xchg
lret
pop
inc
push
jbe
nop
in
cmp
adc
std
pop
loop
ret
shr
inc
xor
jge
stc
pop
cmp
cmpsl
or
xchg
jmp
cmpsb
outsb
xchg
pop
daa
xchg
or
push
jp
inc
add
push
dec
adc
lret
subb
mov
pop
sarl
in
cmp
ds
mov
dec
pop
js
inc
mov
xor
push
out
push
inc
and
and
xor
lret
sbb
xor
cmp
insl
inc
or
mov
jno
sti
data16
gs
insl
jb
sub
push
add
or
mov
sub
cld
pop
insb
or
jo
bound
cmpsl
xchg
sub
inc
jmp
mov
xor
jmp
loope
inc
pop
test
adc
test
mov
sbb
jmp
sub
jg
adc
insl
jne
mov
add
gs
gs
and
ret
inc
xor
cltd
or
mov
rcll
cmp
or
sub
push
sbb
mull
jae
aas
repnz
jbe
stos
sbb
jo
cld
scas
das
cmc
pop
xchg
and
scas
mov
jno
jp
in
dec
or
xchg
xor
pop
out
jo
mov
sbb
add
xchg
std
scas
lahf
or
or
icebp
lods
pop
cmp
int3
jne
es
aas
adc
out
lret
cmp
ret
pop
push
mov
pop
push
inc
inc
aad
adc
data16
icebp
ja
lds
adc
xchg
mov
jecxz
jo
cmpsb
or
stc
pop
jne
or
imul
ret
mov
rcl
mov
sarl
out
incl
adc
aam
icebp
mov
and
or
mov
test
xchg
push
sbb
sbb
popa
mov
or
js
jbe
inc
jbe
xchg
cli
call
insb
push
popa
mov
je
icebp
fisubs
pop
cmpsl
pop
or
test
fcmovnb
in
daa
out
xchg
jb
movsl
pop
int3
xchg
cmc
dec
in
jp
cltd
or
stos
out
es
out
movb
and
mov
inc
mov
leave
jb
cwtl
das
test
xchg
xchg
mov
mov
imul
inc
jge
mov
imul
ss
js
cmp
inc
sti
fisubs
mov
dec
sahf
sbb
fiaddl
ja
movsb
stc
jo
or
jo
mov
js
loop
int3
fsubrp
nop
insb
or
add
and
iret
test
out
sbb
xlat
ljmp
push
outsb
data16
lea
lcall
push
adc
and
xlat
xchg
xchg
in
es
popf
sbb
sbb
mov
andl
stc
xor
push
subb
or
mov
mov
mov
fs
xor
pop
and
daa
js
das
outsl
cmpl
jno
pop
mov
aas
sbb
dec
insl
nop
pop
std
stos
ss
cmpsb
fsubrl
sub
mov
scas
and
mov
outsl
or
adc
xor
jae
fdivrp
jp
push
mov
fcoms
out
xchg
or
pop
xchg
mov
mov
adc
lods
sub
pop
mov
xor
jno
popa
pop
call
mov
lcall
pop
shll
and
sub
mov
mov
sti
xor
xchg
jb,pn
sbb
xchg
inc
ss
test
ss
pop
xor
out
rcr
inc
xor
pusha
mov
and
add
xchg
jecxz,pn
mov
mov
sbb
push
jbe
pop
cmpsl
orb
iret
andl
test
fmuls
inc
mov
cmp
pop
cmp
push
jbe
je
scas
sahf
and
sbb
pop
add
cmc
xchg
cltd
clc
movl
imul
dec
dec
mov
sub
aaa
mov
les
pop
call
pop
jl
insb
cmp
out
jb
mov
stos
inc
cmp
nop
cmovo
outsb
add
mov
lea
testl
mov
fstpl
add
sahf
dec
add
add
pop
dec
or
adc
mov
push
loop
cmc
fildl
jo
into
aaa
dec
and
shl
jnp
jl
cmpsl
pusha
cmp
jns
repz
add
into
pop
cmp
inc
test
adc
dec
inc
aaa
xchg
icebp
or
cwtl
mov
in
je
dec
push
sbb
dec
inc
push
mov
cmpsl
jge
sbb
adc
lcall
push
cmp
mov
lahf
add
clc
cmp
fbstp
dec
fdivrl
pushf
inc
adcl
lock
bound
dec
out
shl
out
bound
jecxz
int
pop
daa
jne
das
rclb
sbb
cmp
std
scas
arpl
mov
cli
inc
dec
mov
dec
sub
es
lods
mov
inc
or
scas
inc
out
lods
jo
fisubrs
stos
mov
popa
adc
push
and
xchg
mov
test
je
mov
out
lds
dec
inc
or
test
push
push
insb
repnz
shll
in
jmp
fwait
test
fnsave
push
daa
imul
stc
fmuls
ret
test
jg
and
jl
pop
pop
push
sbb
dec
fidivrl
repz
mov
sbb
jmp
hlt
les
inc
pop
xchg
cli
ljmp
xor
mov
movsl
lods
add
jae
addr16
inc
lcall
push
inc
lcall
lcall
int3
int
fists
stc
stos
sti
xchg
or
mov
ds
mov
daa
test
adc
inc
mov
imul
jae
into
push
fcomps
dec
push
lock
repnz
test
sub
hlt
ficomps
add
sub
pop
loope
scas
stos
aaa
mov
cmp
outsb
fs
mov
lock
mov
imul
cmpsl
enter
jmp
divps
std
pop
in
int
mov
pop
es
lods
lcall
shlb
sbb
jecxz
push
inc
cmp
sbb
clc
icebp
fnstcw
and
jb
stos
test
jp
pop
cs
jae
xchg
jle
aas
xchg
sti
sbb
dec
iret
data16
stc
cli
cmp
xchg
pop
pop
dec
inc
xorb
cmp
xor
adc
repnz
inc
ja
fadd
jbe
divl
push
and
inc
dec
jecxz
or
jo
add
bound
dec
int3
addl
mov
xchg
add
or
aam
and
mov
sbb
mov
mov
pop
xor
stos
movsl
out
sbb
cld
mov
movsl
mov
and
dec
jo
stos
mov
test
mov
rol
test
xchg
jbe
mov
movsb
jno
or
mov
jne
jmp
in
cmpsb
push
or
mov
repnz
mov
pop
lcall
notb
mov
push
cmpsb
in
cmp
imul
mov
pop
push
push
leave
pop
xchg
mov
gs
xchg
stc
pop
cmp
xor
add
ret
lahf
xor
add
mov
pop
xor
or
adc
es
rcr
loope
lcall
pop
pusha
add
ds
test
lea
push
cmp
mov
mov
or
mov
push
xchg
xchg
sbb
xchg
dec
adc
or
daa
xlat
ret
add
sub
fildll
and
rorb
mov
xchg
push
xor
fs
cmp
xchg
in
mov
dec
and
mov
push
ja
pop
lahf
addr16
adc
out
mov
dec
lds
sub
mov
push
or
leave
xlat
mov
sbb
andb
shlb
pop
movsb
in
fidivrs
dec
scas
lahf
lds
shrb
mov
leave
je
incb
xchg
xchg
idivb
mov
cmpsl
aas
mov
jb
jecxz
repz
sbb
xchg
aas
gs
out
mov
sbb
mov
sub
dec
pop
push
lret
outsl
lahf
imul
dec
fs
and
cmp
xor
ss
addb
sti
jns
inc
inc
mov
es
fnstsw
les
xchg
out
adc
imul
and
pop
stos
cmp
repnz
mov
imul
cmpsl
push
aas
jne
popf
pop
mov
movsb
lock
mov
mov
std
in
mov
dec
xchg
and
xor
pop
add
and
sub
call
mov
inc
mov
bound
es
cmp
out
jmp
das
xchg
push
rolb
jo
cmpsl
sub
push
cmpsb
jecxz
pushf
add
jmp
push
add
or
xor
sub
stc
add
push
cmpsl
and
repnz
inc
xor
dec
jbe
add
nop
jno
xchg
repnz
roll
sub
xlat
in
cmp
xchg
push
lods
jle
mov
xchg
pushf
xorl
xlat
jne
cltd
or
je
push
xor
pusha
call
aad
lds
cs
inc
push
jle
shl
xchg
pop
cli
loop
inc
or
subb
movsl
daa
xchg
xor
lahf
sti
cwtl
sub
or
popf
cs
pop
sbbl
or
popf
daa
push
adc
int
mov
cs
popa
or
xor
cmpsl
xor
sub
cwtl
sub
add
shlb
adc
add
test
mov
dec
popf
mov
add
int3
daa
cmpsl
inc
push
sbb
shll
add
in
cmp
and
ret
sbb
dec
or
jp
test
test
or
cmp
sub
in
enter
jnp
xor
add
aam
mov
or
nop
cwtl
daa
push
lret
leave
mov
jb
mov
gs
xchg
dec
ret
aas
jmp
movb
mov
test
sub
dec
test
test
mov
xor
dec
orb
and
sub
pop
pop
mov
push
add
adc
sbb
jge
insb
inc
xor
pop
add
or
stos
out
cmp
rol
movsb
push
pushf
mov
push
mov
mov
xchg
xor
ds
sahf
arpl
pop
repz
push
insl
ss
push
mov
cmp
mov
arpl
out
sub
fwait
es
lcall
loopne
pushf
loope
out
mov
mov
andb
mov
ljmp
or
stos
pop
sub
lcall
jns
mov
call
adc
clc
dec
stos
btc
jbe
xchg
fsubrl
lea
and
hlt
lods
jo
and
cmp
mov
repnz
lahf
sbb
das
xor
aas
xor
fbld
inc
jg
movsb
adc
push
dec
enter
iret
xor
mov
inc
push
sbb
xlat
push
ret
cwtl
xchg
mov
cmp
stos
es
das
fwait
nop
dec
fucom
jp
push
pop
js
pop
push
jo
pop
cmp
cmp
shrb
pop
mov
sub
jb
inc
jp
cmp
push
jno
push
mov
sbb
pop
mov
gs
hlt
cmpsb
sub
stc
stos
push
sbb
popa
xchg
jno
cwtl
xlat
cmc
push
rolb
fcmovb
jmp
pop
addr16
fists
repz
lods
sbb
movsb
ret
lret
mulb
fdivs
fildll
fcoms
xchg
mov
imul
rorb
sahf
push
dec
cwtl
adc
pop
movsl
ss
inc
pop
or
enter
and
aad
or
in
cmp
fimuls
pop
loope
add
lods
stos
pop
scas
mov
popa
clc
lods
adcb
movsb
cmpsb
in
ret
mov
stos
dec
inc
push
jns
sub
cwtl
imul
ja
outsb
lret
shll
rorb
into
pop
mov
pop
repnz
daa
clc
das
dec
dec
mov
pop
int3
mov
pop
adc
out
out
cmp
dec
add
leave
and
mov
cmp
sub
pop
jno
jno
out
sbb
dec
jb
pop
out
xchg
mov
jge
pop
push
jbe
xchg
icebp
jnp
jnp
adc
sbb
aaa
push
sbb
mov
int
shlb
jl
lret
dec
xchg
adc
push
orb
mov
pop
dec
push
jo
in
dec
and
call
scas
out
mov
xor
ret
outsb
aas
scas
xchg
push
inc
inc
add
adc
mov
movsl
adc
aam
mov
loope
and
ret
push
pop
xchg
stc
les
mov
je,pt
pop
loop
pop
stos
fidivrl
ficomps
or
lcall
xchg
sub
jp
mov
outsb
mov
xor
mov
fnstsw
or
lods
sbb
in
faddl
and
or
dec
imul
mov
jl
orl
scas
icebp
push
fnsave
jae
xchg
mov
lods
cmp
xchg
pop
cmp
xor
xchg
mov
mov
xor
and
je
mov
ror
into
mov
daa
mov
dec
lret
ljmp
sub
inc
in
int3
mov
pop
jbe
inc
sub
dec
loopne
test
mov
push
pop
jecxz
xchg
dec
insb
pop
fstps
stc
lahf
inc
add
aas
rclb
push
nop
fsubrl
int3
imull
pop
popa
clc
ja
lcall
adc
shl
ljmp
fstl
fscale
mov
int3
lock
mov
nop
icebp
adc
jne
pop
xor
and
ds
ss
inc
mov
jne
shlb
fisubrs
sub
xchg
int3
mov
out
mov
shlb
mov
outsb
iret
fbstp
xlat
push
lcall
inc
das
aas
push
fiadds
mov
sub
mov
dec
sarl
jge
sti
out
xlat
sbb
add
fimull
mov
jge
xlat
repz
orl
mov
cmp
adc
inc
in
filds
push
das
mov
jmp
mov
int3
jo
mov
add
fldenv
inc
test
aam
pop
cmc
push
add
mov
xor
insl
inc
out
adcl
rclb
imul
push
aas
mov
sbb
ja
adc
jbe
and
insl
lret
daa
sbb
fidivrs
pop
loopne
pop
xchg
mov
and
adc
mov
xchg
mov
or
cwtl
mov
gs
jg
jae
xor
les
sbb
xchg
test
bound
xchg
arpl
mov
cmp
loope
push
movsl
andl
mov
and
out
and
dec
lock
jmp
push
loope
in
inc
sbb
mov
insb
pop
xchg
add
mov
int
push
push
adc
ljmp
test
push
mov
test
and
xor
dec
dec
push
nop
sub
or
rcr
or
fmuls
cli
push
lea
sbb
sub
lods
test
stc
add
and
jne
push
push
inc
xchg
mov
or
fcomi
push
test
dec
outsl
scas
xchg
mov
out
sahf
and
insl
xchg
popf
cmc
or
ds
cmc
aas
aas
test
push
sbb
xchg
push
jle
hlt
xlat
adc
mov
movsl
stos
and
sahf
adc
mov
insl
insb
bound
fdivr
sbb
push
push
leave
cmp
mov
mov
sub
nop
loopew
outsb
jmp
jmp
inc
jmp
inc
or
mov
popa
mov
popf
sub
inc
jp
cmpsb
imul
xor
and
fsubl
test
push
cmp
das
mov
daa
lea
sbb
cmp
cmc
or
and
lret
or
ret
aam
sbb
lods
pop
cmpsb
int
mov
sub
sub
mov
cmp
fwait
xchg
fistl
or
jg
subl
stos
pop
loop
adc
shl
rcrl
mov
or
inc
sbb
or
dec
aam
mov
dec
mov
add
sbb
lret
in
lock
cmp
push
outsb
mov
xchg
test
cld
std
mov
mov
mov
addr16
mov
xchg
into
push
sbb
sbb
or
or
mov
insb
jb
push
xchg
fildl
xchg
add
pop
into
push
dec
ljmp
sub
outsb
rcrb
lock
shr
ret
lret
mov
fwait
and
es
inc
inc
sub
mov
out
xor
dec
cwtl
outsb
in
add
mov
iret
mov
lds
jmp
jo
sbb
mov
and
cmp
push
lahf
sub
rorb
push
call
pop
mov
jno
nop
sbb
aas
mov
push
andb
outsl
mov
xchg
in
test
gs
or
outsl
sub
shl
sbb
push
mov
frstor
adc
aad
sub
xchg
push
ret
inc
xchg
leave
fs
stos
pop
dec
andl
jl
xor
add
mov
dec
push
add
out
cmc
and
mov
nop
aas
call
fsubrl
leave
enter
test
or
adc
add
loopne
mov
or
pop
in
insb
rolb
pop
insl
pop
xchg
inc
inc
sub
iret
stc
bound
xchg
jns
mov
pop
or
arpl
adc
add
mov
fstpt
push
data16
sbb
cmc
xor
loopne
shrb
or
pop
mov
rorl
jns
test
cld
sub
jae
push
sbb
or
pop
sub
push
addr16
dec
xchg
aam
mov
mov
sahf
fidivs
loop
les
pop
adc
sbb
sub
push
xlat
das
xchg
mov
adc
mov
push
adc
pop
inc
or
loop
cmp
icebp
cmpl
mov
icebp
daa
xor
rolb
xchg
ja
sbb
push
shl
xchg
xchg
es
sti
cmp
xor
outsl
movl
pop
scas
insb
subb
xchg
faddp
inc
jb
out
sub
lods
push
mov
jbe
xor
cmp
out
pop
push
outsl
repz
add
les
ds
adc
fnstenv
dec
cmp
inc
popa
fwait
cmpsl
or
repz
mov
push
popf
pop
outsb
cmc
add
and
pcmpgtd
jae
outsl
test
jmp
pop
adc
ficomps
mov
int3
into
cwtl
daa
insl
daa
push
add
es
out
ret
fmulp
pushf
jmp
ds
adc
cli
inc
cmp
push
loopne
and
cmp
push
fstp
dec
std
inc
dec
ret
dec
mov
add
icebp
clc
imul
ret
cli
mov
adc
xchg
icebp
lea
dec
adc
das
test
popf
push
mov
adc
outsb
fstl
je
test
in
cmp
and
dec
lods
scas
jge
pop
dec
cmpl
out
adc
add
xchg
sbb
popf
in
pop
mov
out
sub
xchg
xchg
xchg
fwait
repz
xor
dec
cmp
adc
jecxz
push
aaa
mov
popf
imul
dec
mov
ljmp
orb
pop
and
mov
xchg
addr16
pop
push
push
into
ja
inc
ds
mov
sub
repz
nop
mov
inc
cmp
sbb
push
in
cmp
xlat
lods
sbb
out
and
and
inc
rclb
pusha
ds
jno
fwait
imul
pop
sbb
cmpsl
cmpsb
adc
aas
sbb
mov
jp
cmp
lds
pop
inc
add
inc
pop
xor
mov
imul
aas
cs
dec
in
shlb
mov
fnstsw
sub
mov
fildll
sub
popf
mov
fdivs
clc
outsl
mov
les
std
dec
cmp
popf
loop
jecxz
sbb
or
arpl
loopne
xor
pop
aaa
subb
mov
loop
loop
stos
fwait
push
and
sub
jno
mov
mov
pop
cwtl
lret
or
xchg
outsb
jae
xchg
sbb
pcmpgtb
pop
test
cmp
xchg
in
pushf
dec
jmp
mov
jmp
sub
sahf
ret
mov
dec
bsf
adc
repz
insl
push
out
je
dec
and
sub
test
mov
pop
out
fcmovne
mov
pop
adc
orb
test
xorl
cs
ss
or
jbe
adc
dec
ds
stos
xchg
cmp
sbb
shlb
mov
fbld
das
and
js
dec
shl
aad
and
or
loopne
dec
sub
stos
push
in
xchg
jecxz
push
sub
push
je
push
pop
in
pop
push
mov
jns
pop
jmp
mov
lahf
cmpsl
idivb
dec
jno
roll
and
inc
mov
inc
cmpsl
das
xchg
popa
aas
xchg
mov
mov
iret
dec
inc
pop
push
dec
arpl
in
or
negl
jge
push
call
sub
xchg
and
in
sub
cld
xchg
jecxz
movsl
xchg
out
leave
push
nop
repnz
ljmp
sub
and
mov
lcall
lea
pop
mov
mov
push
cmp
jecxz
in
xor
mov
jge
inc
sahf
push
pop
inc
data16
adc
lcall
xchg
mov
cmp
shlb
outsb
fiadds
fbld
jmp
loop
xlat
lea
pop
repz
adc
pop
sbb
pushf
sub
xchg
mov
cltd
or
in
mov
insb
out
jp
lds
add
xor
jno
dec
jae
imul
shrl
jp
pop
loope
stos
gs
jge
cld
jno
movsl
cs
lcall
rorl
sub
xor
popa
mov
dec
jb
sub
cmc
jg
jns
mov
sbb
nopl
les
mov
aaa
sub
sbb
xor
xchg
pop
add
push
stos
ljmp
mov
icebp
pop
and
inc
leave
push
andb
push
pusha
in
mov
dec
fadds
jg
mov
daa
inc
push
pop
add
xchg
icebp
mov
rorl
lds
movsl
stc
mov
mov
popf
popf
mov
movsl
jg
out
mov
je
int
mov
aad
test
pop
inc
cmp
xchg
and
aam
test
add
sbb
in
pop
pushf
lret
aaa
outsb
push
cmp
inc
js
mov
pop
aaa
add
sbb
xor
std
lret
pop
jae
pop
and
mov
insl
outsl
and
jle
daa
or
jo
aad
aad
lock
dec
adcb
push
or
xor
mov
mov
pop
sti
xchg
lahf
fisubrs
repz
sbb
lods
ret
mov
out
lock
dec
pop
daa
cmp
test
adc
sbb
inc
lea
mov
or
jns
in
ror
loop
jb
insl
iret
jbe
pop
jge
popa
cmc
pop
jg
or
cmc
into
add
loopne
mov
imul
jmp
adc
jp
lods
inc
pusha
mov
pusha
sarb
add
mov
xchg
push
fptan
test
add
imul
lock
cli
testl
out
repnz
sti
sbb
call
pop
fistl
xor
mov
lods
adc
addr16
xchg
call
jnp
mov
mov
scas
jbe
popf
lock
iret
lods
inc
fwait
ljmp
mov
add
or
sub
cmp
shll
test
cmc
dec
sbbb
inc
add
stos
xchg
imul
xchg
fs
push
xor
js
pop
stos
dec
mov
or
inc
mov
mov
pavgw
jle
xchg
pop
stc
dec
mov
add
xchg
pop
popa
sti
imul
xchg
and
xchg
xchg
xor
pushf
inc
loope
fisubrl
fisttpl
outsl
es
js
ret
repz
shll
lret
inc
cmc
lods
xor
arpl
bound
imul
jge
divl
gs
loop
adc
adc
gs
mov
mov
push
out
xor
enter
mov
or
lret
outsl
pop
mov
pop
push
cltd
and
xchg
repz
bound
and
mov
cli
inc
adc
les
lock
cltd
cs
ljmp
lds
sbb
sub
xchg
push
add
int
cld
mov
arpl
pushf
push
cli
xchg
and
or
jle
lahf
cmpl
aas
lods
jecxz
mov
push
outsl
push
xor
popa
jmp
lea
lds
or
lods
sbb
push
pop
adc
inc
xor
into
cltd
or
sbb
popf
and
inc
lods
in
add
mov
or
xor
mov
xchg
adcl
adc
addb
push
xor
scas
xor
sarb
push
fcmovnb
push
out
pop
pop
je
popa
push
fidivs
test
movsb
mov
cli
mov
outsb
clc
cmp
mov
push
loop
cmpsl
pusha
mov
fstp
add
jns
sarl
outsl
test
sub
movsb
int3
jecxz
loopw
insl
inc
mov
scas
cmp
add
mov
mov
pop
out
xlat
and
xchg
push
jo
mov
loopne
int3
xchg
out
stos
jl
pop
pushf
iret
xchg
xor
mov
out
ljmp
test
cmpsw
cwtl
mov
push
or
pop
jp
sahf
inc
mov
and
dec
sbb
add
ret
orl
pushf
addr16
jl
gs
icebp
cmp
add
fsub
out
mov
fdivrp
jl
das
rorb
inc
cmp
sbbb
mov
loop
mov
push
int3
cltd
fs
ja
inc
dec
loope
fucomip
mov
fidivrl
fldenv
pop
nop
pop
sarb
ret
pop
shll
inc
sbb
movsb
and
in
push
mov
xchg
add
push
dec
fwait
cwtl
les
mov
push
pushf
scas
dec
xor
add
mov
repnz
jecxz
fwait
push
jne
jo
jne
add
ja
push
loope
aaa
dec
ret
mov
cmp
cwtl
add
pop
mov
push
lret
push
rcrb
lock
adcb
push
sub
inc
mov
push
loop
sbb
push
mov
sbb
push
pop
xor
nop
pop
fisubs
cmp
and
inc
cmp
inc
movsb
sahf
arpl
push
push
lret
inc
push
sub
push
push
in
subl
incb
dec
sbb
mov
jle
stc
stc
pop
mov
xor
or
mov
xchg
into
xchg
mov
movsl
insb
push
jbe
hlt
adc
or
outsl
or
test
mov
mov
fsubr
or
mov
int3
jmp
adc
cmpsl
mov
test
rorl
sbb
mov
sahf
movsb
mov
add
shll
xchg
ret
or
push
pop
insl
outsb
mov
push
sub
mov
ret
sbb
loopne
imul
mov
pop
or
popa
ljmp
jmp
fidivl
xchg
or
loop
pop
cmp
pop
and
ljmp
add
mov
jmp
jmp
test
jae
pop
mov
loop
mov
js
subb
je
addr16
lcall
mov
xlat
add
cmp
movsb
push
in
sub
out
out
xor
divb
loope
pop
cmp
repnz
loope
cmp
test
daa
jo
std
jg
inc
and
lds
lret
inc
jnp
dec
enter
scas
fmuls
fiaddl
stc
mov
jmp
js
xchg
test
add
mov
fmull
push
adc
or
cmp
sub
push
add
cmpsb
divl
js
mov
add
push
mov
cmp
outsb
sbb
add
pop
das
push
insl
dec
fldt
inc
mov
sub
push
push
cmp
insl
test
pop
popa
int3
xor
out
mov
outsl
pop
sub
orl
cli
add
push
jbe
adc
out
std
scas
repnz
std
fstpl
xor
aam
or
push
inc
test
mov
stos
repnz
inc
mov
jae
pop
std
jecxz
rcrl
cmp
mov
cmp
in
add
ret
push
xchg
out
dec
insb
into
mov
outsl
jne
into
hlt
adc
and
loop
nop
dec
test
push
jge
shlb
dec
sub
aas
cmp
xlat
or
jne
add
and
out
out
clc
out
mov
jns
cmc
xchg
add
rcll
dec
jp
data16
ret
sub
xchg
pop
inc
sbb
pop
dec
arpl
mov
rcrl
cmpsl
out
mov
jo
or
sbb
adc
das
pop
mov
repz
xor
es
cli
jo
pop
movsb
mov
out
sub
fwait
and
add
sbbb
addr16
mov
xchg
leave
pop
jae
fs
and
cmp
pop
jg
jg
push
sub
jecxz
dec
jmp
in
repz
lret
iret
or
iret
cmp
cmc
into
add
enter
popf
mov
daa
loopne
lods
pop
jno
outsl
pop
pop
inc
mov
mov
fwait
mov
mov
clc
jne
push
mov
mov
jg
lock
repz
mov
fnsave
sbb
pop
cs
sbb
gs
xchg
mov
xchg
out
lahf
inc
add
mov
aas
fistps
call
xor
mov
jmp
mov
iret
ds
xor
rcrb
xlat
xchg
pop
xor
push
xchg
sarb
cmp
es
in
xchg
stc
imul
sahf
hlt
imul
pushf
out
push
push
xchg
popa
test
cld
adc
das
jecxz
push
out
push
sbb
dec
xor
les
lahf
cmp
adc
out
adc
jne
xchg
fucomp
int3
or
add
and
daa
mov
pop
into
push
cmp
ficomps
test
rolb
fwait
inc
push
push
aad
int
stos
popf
jl
cmp
mov
or
fstps
lcall
insb
pusha
adc
push
pop
icebp
js
push
hlt
push
inc
mov
sbb
mov
ret
mov
fpatan
imul
movsl
mov
scas
and
out
sub
pop
inc
xor
pushf
adc
push
stos
inc
push
cmp
enter
push
inc
mov
jnp
and
daa
leave
fcomps
rclb
dec
int
es
rcr
mov
dec
inc
lea
not
in
cmp
pushf
loop
mov
stc
pop
or
xchg
push
push
scas
push
mov
testb
mov
mov
cltd
hlt
mov
dec
outsb
in
cmc
and
aas
push
cmpsl
imul
pop
dec
jnp
sbb
sub
lret
inc
jns
or
or
inc
pop
in
ja
mov
inc
in
jmp
inc
loope
or
enter
loopne
shl
mov
inc
xchg
movsw
and
lahf
fistps
sub
dec
dec
imul
rorb
hlt
imul
cmpsl
jp
ds
pusha
es
jno
pop
push
shrb
jl
dec
rorb
arpl
insl
movsb
push
mov
jecxz
xchg
mov
xlat
inc
xchg
xchg
pop
jb
js
stos
mov
icebp
mov
mov
push
mov
add
loop
cmc
cmp
daa
pop
push
dec
cmp
inc
mov
ficomps
test
cmp
loopne
sub
cmp
xchg
push
test
in
inc
jl
and
shrb
leave
add
cmp
dec
movsl
int
call
cmp
mov
push
add
loope
xor
and
mov
jo
push
xor
pop
sarb
rolb
xchg
adc
icebp
addl
mov
push
pop
out
cmp
sahf
jge
movsl
add
sbb
ret
pop
pushf
std
push
pop
add
stos
pushf
or
xchg
inc
aaa
sbb
gs
pop
mov
sub
pop
js
pushf
push
out
push
adc
ljmp
in
or
mov
jmp
or
mov
mov
and
std
jns
shl
xor
das
sub
xlat
test
loope
hlt
sbb
push
pop
sub
loope
mov
jmp
sub
aas
dec
daa
inc
jecxz
push
shl
divb
sub
rolb
jae
adc
or
fisubrl
cmp
es
push
jl
and
mov
ja
mov
test
in
xchg
repnz
sub
push
jb,pt
pop
sbb
mov
lock
jne
and
and
test
dec
das
pushf
neg
sbb
lods
xor
push
mov
fidivs
in
cmpsl
mov
cmp
pop
gs
dec
pop
inc
in
icebp
call
pop
notb
jmp
test
xor
push
lock
jo
and
fwait
or
notl
mov
lods
stos
fisubrs
out
cmpl
data16
addl
adc
mov
shll
dec
or
cmpb
cld
dec
imul
push
jno
jnp
lds
lock
pop
mov
sbb
and
dec
adc
or
fstpl
push
pop
lods
push
icebp
test
sub
add
cmp
pop
repnz
xor
imul
xchg
imul
test
pop
hlt
add
scas
inc
mov
push
outsl
jmp
and
pop
out
inc
repz
dec
cmpsb
sahf
nop
mov
addl
pop
jnp
lret
xor
mov
mov
mov
icebp
insl
mov
pop
mov
mov
push
sbb
cmp
and
push
mov
mov
mov
cmpsl
add
bnd
fnsave
xor
pop
mov
inc
outsb
outsb
imulb
add
aam
sub
add
stc
pop
sub
loopne
pop
mov
jg
daa
ds
mov
dec
mov
cmp
rep
push
movsb
les
lret
jp
xor
or
imul
inc
add
dec
cli
int
sub
fmul
fisubrs
mov
jle
sbb
or
push
jecxz
outsb
out
push
jne
cs
dec
jb
outsl
xor
sub
mov
test
scas
jmp
pop
xor
sbb
shrl
cmp
in
iret
push
mov
or
push
dec
stos
push
dec
dec
sahf
out
fidivs
ret
or
lret
add
clc
mov
or
into
lahf
test
fistps
push
je
mov
outsl
push
jo
sub
inc
xchg
mov
stos
mov
sbb
or
lahf
test
jo
test
mov
mov
fldt
std
jmp
pop
xchg
clc
adc
fidivl
stos
sub
mov
pop
stos
fwait
push
pop
and
fisubs
jge
xor
test
pop
sbb
mov
fists
mov
pop
sbb
mov
jae
int3
inc
cmp
pop
cmp
xchg
pop
imul
in
jg
fs
inc
adc
loop
pop
lock
pushl
lds
jecxz
lods
je
stos
mov
adc
xchg
or
fsubp
cmp
pop
mov
mov
iret
or
cld
adc
lea
xchg
gs
jne
adc
or
mov
add
push
lods
dec
cmp
rep
mov
push
jge
adc
call
push
pushf
repnz
arpl
pop
mov
mov
push
aad
popa
inc
cmpsl
pop
aaa
ret
imul
int
xchg
into
dec
mov
xchg
xchg
pop
mov
aad
jae
lret
stc
push
xor
fimull
pop
mov
and
idivl
mov
cmpsb
adc
mov
lahf
shrb
lods
stos
mov
mov
xchg
jne
fwait
dec
fld
push
insl
add
adc
adc
lds
stos
xchg
fdiv
push
jns
mov
fwait
jp
add
push
fidivrl
popf
xor
adc
imul
push
pop
mov
ljmp
add
xchg
notb
cmc
cltd
jbe
dec
stos
scas
jne
aas
lret
rclb
jle
pop
mov
rcrl
imul
pop
sahf
rcll
dec
mov
rorb
insb
adc
cmp
popa
xchg
test
jb
mov
push
lea
lcall
shlb
sub
repz
adc
mov
js
das
aam
push
mov
xor
or
sbb
es
sub
sbb
mov
mov
out
mov
leave
popf
int
scas
push
fs
jo
push
aam
out
mov
inc
add
aam
mov
icebp
sub
iret
mov
push
mov
popf
pop
je
xchg
pop
and
sub
out
and
xor
and
jo
dec
xor
nop
mov
lods
or
inc
jmp
cmp
add
adc
dec
xchg
ljmp
stos
dec
add
sbb
cmpsl
call
popa
sbb
jp
aad
mul
ret
cltd
arpl
adc
sarb
jns
and
and
pushf
xchg
dec
xor
ljmp
nop
sub
dec
xor
lret
push
mov
xor
mov
sub
lret
movsb
mov
cld
sbb
sub
rcrb
int
es
add
add
inc
je
pop
stos
pop
jne
dec
adc
xlat
xchg
data16
rep
scas
and
xor
call
add
push
ja
mov
pop
add
inc
dec
xor
cmp
xchg
jae
test
cmpsb
xchg
movsl
dec
movsb
cmpsl
test
in
pusha
pop
pop
or
cltd
xor
sub
arpl
call
jb
inc
adc
out
dec
fisubl
lods
mov
cmpsl
jle
jne
shlb
icebp
mov
jmp
or
lock
iret
sbb
fmuls
sbb
mov
sub
push
dec
sbb
out
addr16
das
rcll
add
and
mov
add
stos
inc
loop
jmp
lea
pop
dec
lcall
out
and
outsb
flds
mov
stos
add
add
mov
or
mov
scas
and
subb
fisttps
xchg
mov
pop
xchg
lahf
insb
and
dec
jecxz
xchg
jg
mov
mov
xchg
roll
nop
sarb
cs
fdivrs
pop
dec
pusha
add
addb
jno
jo
pop
and
mov
sub
push
xchg
or
fwait
add
mov
int3
out
in
adc
dec
xor
dec
jg
cmp
scas
jge
inc
stos
dec
or
xlat
jo
push
loop
inc
loop
clc
rclb
sub
test
push
dec
pop
push
mov
xchg
xchg
mov
jge
scas
sbb
mov
add
pushf
sti
out
inc
adc
pop
aas
sub
jmp
cli
hlt
mov
fidivrl
shrl
jmp
jbe
xchg
mov
adc
mov
add
mov
mov
and
sarl
sbb
stos
push
mov
out
jecxz
lahf
lods
inc
jge
ljmp
leave
fmul
lock
jg
rolb
cmp
int
push
pusha
and
and
jno
cwtl
lods
mov
xchg
cmpsb
ss
lret
cmp
mov
out
jle
jo
into
aad
sub
jle
dec
movsl
in
cmovne
or
mov
mov
int3
sub
cmpsb
ss
xor
mov
adc
sahf
pop
shl
sbb
pop
jb
mov
inc
xchg
mov
fbld
push
pop
and
aaa
out
add
mov
dec
adc
mov
cmp
push
lods
sub
sbb
scas
sbb
dec
pop
movsb
scas
sbb
ljmp
std
xchg
or
push
xchg
push
mov
cli
aad
imul
xchg
lret
enter
insb
pop
out
add
inc
jae
stc
xchg
lea
jge
icebp
mov
inc
shll
gs
xchg
punpcklwd
cs
popa
push
dec
pop
inc
cwtl
sbb
mov
add
cmp
fdivs
aas
in
jecxz
jl
mov
and
repnz
repnz
xor
pop
adc
hlt
outsb
dec
mov
pop
pop
movsl
fdivp
orb
inc
stos
mov
dec
pop
jecxz
shr
mov
jo
lods
dec
and
push
jmp
loop
loopne
inc
rcr
cltd
cltd
cmc
adc
add
mov
pushf
bound
imul
aaa
push
ss
call
mov
mov
push
popa
sub
cmpl
cmpsl
faddp
lcall
fisubs
sbb
pusha
cmp
sbb
arpl
fs
pop
push
jns
lea
push
outsl
and
outsl
xor
pop
dec
inc
jecxz
xor
clc
iret
call
dec
pusha
loopne
into
loopne,pt
fdivl
icebp
mov
clc
mov
jecxz
mov
sti
cmpsb
das
pushf
and
mov
ds
sub
sbb
sub
mov
mov
add
cmpsl
imulb
dec
xlat
gs
andl
add
rcrl
mov
gs
outsb
test
lahf
sub
aam
bound
cmp
leave
lods
pushf
sbb
int3
mov
push
xchg
mov
jp
mov
jne
incb
loopne
jmp
sub
ss
pop
lock
es
cmpsb
mov
dec
testb
leave
inc
lock
pop
sahf
and
outsb
mov
shlb
mov
mov
mov
inc
or
aam
aam
fs
mov
mov
sbb
adc
jg
cmp
call
out
or
cmp
push
ret
mov
cmpsb
xor
jb
lret
jl
jo
ja
pop
or
scas
or
jmp
push
fcmovu
cmp
adc
sbb
mov
sbbb
enter
push
cltd
mov
lods
loope
mov
jecxz
jmp
mov
rcrl
sbbl
out
sub
lods
and
push
rcll
sub
add
imul
mov
add
stos
xor
loopne
cmpsb
xor
mov
lea
and
jg
mov
push
adc
dec
mov
dec
mov
mov
add
in
and
rclb
cmpsl
mov
xor
adc
je
ret
andb
or
adc
enter
jno
cmc
nop
data16
je
sub
mov
out
cmp
xchg
mov
push
loopne
or
sub
ja
fimuls
int
jne
imul
test
lret
xor
fwait
sbb
das
dec
movsl
jb,pn
adc
pop
shlb
pushf
push
lds
add
scas
aad
jle
dec
push
mov
enter
std
jecxz
arpl
jns
pop
xchg
lock
test
nop
add
cli
cmpsb
jb
in
mov
pop
xchg
cmp
shlb
movw
ja
popf
or
ss
cmpsl
in
in
mov
sbb
in
or
dec
inc
in
fs
mov
cli
mov
leave
push
outsb
jmp
outsb
dec
lds
nop
shrl
aaa
cs
lahf
jae
arpl
int3
inc
xor
add
dec
add
sbb
mov
aas
fisubs
xor
aad
gs
sbb
and
mov
jge
jae
je
adc
cltd
adc
sub
inc
jbe
and
sbb
sub
outsl
mov
push
cmp
hlt
inc
cli
outsb
js
sbb
fisubs
test
mov
pop
test
xlat
outsl
push
sbb
cmpsl
arpl
mov
push
mov
cmpsl
adc
jge
andb
mov
cmpl
test
imul
lea
int3
sbb
sbb
sbb
sub
fcmovnb
insl
ds
dec
rorb
addr16
daa
adc
lahf
xbegin
test
cli
add
push
push
mov
test
rclb
out
ficoml
and
sub
popa
push
jle
and
pusha
daa
add
jne
fildl
xor
pusha
fwait
ja
xor
and
xchg
dec
push
push
dec
in
pushf
sub
pop
icebp
movsl
rcrl
xor
inc
data16
lods
sub
xchg
ficoml
xchg
enter
xorb
and
gs
je
mov
enter
add
scas
out
sbb
inc
xchg
nop
mov
js
in
inc
jnp
insb
lcall
aam
mov
adc
mov
in
inc
sbb
mov
cwtl
xor
enter
sub
mov
out
je
jae
push
imul
das
in
es
push
out
pop
push
lds
dec
mov
mov
daa
call
mov
mov
pop
jb
adc
cwtl
dec
jno
sbb
or
xchg
out
mul
xchg
mov
xchg
sbb
mov
out
addr16
dec
shlb
in
inc
sbb
cld
test
sub
push
sbb
and
mov
dec
cmp
jnp
xchg
xor
push
jb
jmp
cmp
jno
ja
arpl
lea
gs
icebp
repnz
pop
in
fiadds
jns
ss
jp
pop
imul
pop
pushf
pushf
call
inc
sbb
in
outsl
pop
sub
mov
pop
icebp
in
add
pop
sbb
stos
xchg
testb
aam
insb
mov
loop
stos
adc
adc
push
adc
int
ud2
test
iret
shlb
aas
add
adc
jno
xchg
sbb
push
xor
fwait
out
add
cmc
jno
sbb
repnz
pop
call
lods
xor
dec
jae
lock
and
and
inc
lcall
xor
sub
jg
mov
std
sub
out
jmp
cmc
xor
jb
dec
xchg
roll
push
lods
loopne
sub
aam
xchg
xor
and
pop
xchg
pop
jecxz
mov
mov
jmp
xor
enter
or
rolb
scas
lods
lock
or
push
adc
fcoms
mov
sbb
lods
sarb
ss
ds
sub
nop
jmp
fmull
sub
rcrl
addr16
std
inc
dec
add
cmp
popf
pop
enter
dec
ja
dec
clc
and
mov
mov
int3
iret
xchg
xchg
test
cwtl
inc
sahf
add
add
dec
dec
mov
and
shrb
dec
mov
mov
rclb
pop
pop
sbb
cmp
mov
jl
loope
pop
cld
outsl
inc
test
mov
mov
icebp
adc
ret
and
or
fwait
jecxz
mov
dec
outsb
fsubs
in
cmp
push
push
dec
mov
roll
inc
mov
movsl
lret
pop
mov
addr16
aas
test
outsb
pop
lods
cmpb
cld
rorl
adc
dec
add
cmp
ljmp
int3
fidivrs
mov
jno
sahf
push
dec
popf
movsl
lret
cltd
mov
fisttpll
shl
mov
jae
fsubrp
jne
mov
inc
xchg
in
adcl
lcall
lock
fsubrs
push
xchg
xor
add
jb
mov
jmp
pushf
and
cld
arpl
gs
jg
push
and
ret
test
lcall
mov
daa
pop
movsb
sbbl
pop
clc
imul
in
ds
jp
mov
lods
cmpsl
mov
into
fwait
mov
cmp
aas
fimull
or
ret
test
scas
js
inc
inc
pop
int3
xor
mov
rorb
adc
cmp
cwtl
lret
mov
test
pop
and
dec
add
add
lods
addr16
adc
imul
mov
cmp
cmp
cmpsl
dec
cld
mov
ds
cmc
pop
xchg
mov
xchg
mov
mov
mov
pop
int3
aad
xchg
push
mov
clc
sbb
jecxz
jg
and
and
cmp
mov
fisubrl
into
scas
jns
cmc
lock
jecxz
insl
jp
lret
push
ljmp
jae
dec
in
loop
xchg
jp
push
pop
jg
cli
sub
in
mov
cmp
xchg
pop
mov
xchg
jo
mov
std
aaa
ret
stos
or
out
ds
dec
imul
and
paddusb
add
xor
imulb
xor
xor
out
jns
pop
mov
adc
data16
xor
stos
jno
mov
xor
or
out
leave
repnz
in
push
shr
sub
scas
pop
add
dec
bound
xorb
xchg
inc
lock
ror
xlat
gs
sbb
add
inc
xchg
dec
and
ret
cs
push
dec
mov
pop
lods
outsb
loope
in
pop
fdivs
test
cmpsb
xchg
imul
ja
bound
outsb
sahf
push
mov
pop
lahf
mov
or
in
ret
cwtl
outsb
imul
mov
push
or
push
pop
xchg
rcll
sub
stc
aas
scas
das
or
daa
loop
mov
pop
leave
mov
add
repz
ss
cmpsb
or
xchg
daa
jmp
int
es
push
aam
pusha
loop
push
and
push
cmp
ljmp
jbe
rcll
jns
jmp
in
repz
adc
xchg
subl
movsb
mov
adc
inc
movsl
mov
lods
aad
adc
inc
cmc
cmp
mov
loopne
push
pop
jns
xor
out
fdivrp
push
inc
je
sub
pop
negl
add
daa
test
xor
mov
jmp
push
push
cmp
adc
adc
jnp
fists
push
subb
ds
jno
add
ret
inc
stos
outsb
inc
cs
aas
je
adc
xor
imul
sbb
fdivrl
aam
dec
scas
sub
test
lock
push
jno
mov
sub
rcll
pop
adc
add
xchg
jl
pop
ret
or
dec
xlat
push
xlat
test
push
sub
xor
add
adc
mov
push
mov
movsb
cmc
mov
out
jnp
mov
pop
cltd
clc
and
rcr
xor
jecxz
push
jle
push
inc
out
testb
jne
mov
dec
testb
jge
lock
pop
xchg
or
scas
sub
movsl
es
movsl
push
mov
mov
xchg
clc
ds
aad
jae
sbb
das
push
shll
aad
cmp
psubb
inc
es
cmp
gs
mov
mov
bound
push
and
or
lret
inc
add
loopne
std
push
fisubrl
jp
and
mov
dec
mov
and
push
jb
cltd
push
sbb
ds
rolb
aad
fcomip
sbb
pop
cmc
int3
inc
stos
cs
push
mov
pusha
imul
xchg
test
stos
or
mov
out
fiadds
loope
cmp
xor
popf
mov
xor
jle
jl
adc
cwtl
or
jle
outsl
ds
int
test
lahf
std
fisubrl
dec
jnp
subl
arpl
out
imul
insl
lods
xor
mov
arpl
jbe
sbb
jle
mov
mov
faddl
dec
and
test
gs
and
lock
cmpsl
dec
outsl
subl
jns
fdivs
in
hlt
dec
hlt
jne
paddsb
movl
push
sub
std
mov
repz
addr16
jb
jno
pop
pushf
stos
bound
sub
add
outsl
pop
pusha
es
jns
psrad
lods
into
les
shll
ret
sub
jecxz
or
xchg
in
sub
js
nop
xor
sub
mov
dec
push
stc
sbb
aad
and
ss
sbb
loopne
ja
iret
shrl
in
push
xor
jmp
jge
jecxz
fwait
aas
je
xchg
fists
push
daa
cmpsl
fcom
jge
sahf
mov
push
mov
fwait
xchg
icebp
sub
out
call
insb
inc
add
pop
and
xchg
push
aaa
lock
add
push
xchg
push
rol
sti
cmp
aad
jnp
and
dec
repnz
mov
mov
iret
inc
mov
sbb
lret
lds
xor
sbb
push
fisubrl
repz
cmp
push
sbb
and
insb
push
inc
sbb
jne
sub
jbe
rcll
xchg
stos
stc
add
push
popa
rcll
mov
das
jnp
hlt
jp
lods
jg
and
nop
jp
movswl
inc
push
int
xchg
movsb
sbb
es
inc
repz
mov
xchg
aaa
fmuls
push
dec
pop
mov
sbb
mov
push
mov
xchg
mov
test
add
push
mov
aam
pop
sbb
adc
xlat
add
jmp
add
pop
xor
mov
mov
cld
xor
cmc
pop
push
mov
fldt
imul
xor
mov
test
add
push
sub
jo
popf
push
addr16
data16
mov
movl
ret
aas
loopne
popa
mov
add
in
mov
ljmp
mov
adc
popa
movsl
fisttpll
lods
sti
pop
jae
and
mov
cwtl
ret
ds
cmpsb
out
mov
bswap
mov
dec
test
paddw
icebp
lods
push
jmp
xchg
ret
adc
mov
arpl
sbb
xchg
std
js
in
xor
ja
sahf
dec
add
cltd
mov
ss
and
or
test
cld
imul
push
or
mov
int
inc
stos
sub
cmp
bound
gs
sbb
sbb
and
cmp
jbe
les
push
movswl
ret
iret
mov
dec
jb
mov
jecxz
inc
mov
push
push
pop
cmpsl
xor
add
outsl
add
jmp
rorb
xor
das
data16
inc
xchg
arpl
stos
xchg
mulb
ljmp
or
sbb
aas
or
stc
sub
cmp
sub
lods
mov
lret
ret
insl
jle
popf
inc
jns
leave
add
xchg
test
jecxz
cmp
adc
imulb
push
jmp
push
cmp
push
int
int3
cmp
fisubl
xchg
or
loopne
xchg
push
mov
push
dec
push
aad
mulb
pushf
call
in
adc
jb
pop
xchg
adcb
and
push
adc
cmp
rol
insl
jecxz
inc
sbbb
xchg
sub
aaa
dec
jbe
or
subb
das
ret
mov
pop
xchg
orl
insb
es
inc
or
cmpsb
inc
popf
adc
ror
es
insb
stos
xor
insb
vpshaq
jge
dec
adc
adc
mov
loope
and
pop
adc
dec
jle
addb
inc
jge
fidivrs
popa
fchs
inc
jmp
in
adc
nop
adc
push
adc
leave
cmpsl
pop
pop
into
neg
movsl
mov
adc
in
scas
rol
mov
rolb
pop
mov
inc
jnp
movsl
je
jbe
jmp
push
sbb
fdivrp
inc
leave
aad
cwtl
cmp
cli
pop
cld
outsb
or
xor
mov
dec
xlat
jmp
mov
lahf
cmpsl
dec
xlat
cmpsb
cs
push
sahf
stc
popa
sbb
inc
fstpl
shll
daa
iret
mov
fisubrl
pop
push
jl
and
ret
dec
jns
imul
cmp
sbb
xor
and
push
inc
popf
jmp
add
out
test
or
push
popf
rclb
xor
xchg
dec
fcomps
add
jmp
pushf
push
lods
sti
test
mov
mov
jo
ljmp
push
cmp
xor
stos
push
test
jge
rcll
xchg
add
xchg
xor
notl
xor
mov
cli
dec
in
inc
pushf
icebp
jbe
aas
mov
out
pop
fwait
adcb
xor
mov
push
sub
jnp
adc
nop
push
jmp
mov
xorb
jns
inc
ds
jmp
xchg
cmp
mov
iret
popa
mov
stos
pop
imul
or
dec
das
or
sbb
bound
add
test
cwtl
xchg
iret
pop
pop
cmp
cmp
cmc
xor
sbb
or
test
mov
test
sub
inc
fucomp
add
jl,pt
mov
pop
and
movsl
dec
sub
push
hlt
stc
int3
xchg
dec
arpl
int
inc
jno
inc
inc
push
fsubrl
lea
cwtl
mov
insb
pop
mov
xchg
xor
pop
jmp
dec
add
lock
lcall
loope
sub
or
insb
clc
clc
inc
xor
sbb
mov
dec
das
cltd
add
hlt
adc
test
loopne
push
inc
stc
xor
imul
add
in
stos
pop
in
push
inc
mov
aam
push
fnstenv
mov
xlat
lock
mov
lcall
sbb
xor
xchg
or
leave
pop
inc
mov
out
lods
pop
aad
xchg
and
pusha
cmp
das
sub
test
jge
add
push
add
outsb
scas
ds
inc
mov
lahf
mov
cmpsl
pop
negb
bnd
shlb
sub
push
mov
dec
stos
push
adc
int
jg
shll
pop
sub
in
imul
rcrl
cmp
aad
ret
adc
stos
inc
xchg
sbb
les
lcall
mov
shrl
push
fisubl
dec
pop
mov
jno
xor
xor
lret
jl
or
stc
dec
test
sub
inc
call
xchg
fisubl
fimuls
cmp
sub
andl
push
mov
ret
ljmp
pop
mov
pusha
hlt
fnstcw
mov
lds
xchg
in
rorb
incl
js
adc
lods
out
inc
cld
sub
mov
xlat
insl
push
dec
lret
adc
clc
xchg
sub
je
cmp
push
cmp
rorb
add
mov
sti
or
push
pop
fsubrs
pusha
cmpl
sub
jnp
fnstsw
sbb
cwtl
jmp
dec
aam
daa
xchg
out
in
mov
inc
sbb
push
les
scas
push
and
push
mov
push
scas
sub
mov
jl
xchg
mov
mov
jno
fs
xor
dec
mov
pusha
sub
and
pop
cmc
shr
lea
jbe
push
bound
dec
push
scas
mov
add
mov
divps
mov
jmp
fisubs
in
gs
icebp
add
mov
setnp
subl
cltd
dec
nop
cmp
sbb
mov
dec
jae
fwait
dec
cwtl
and
js
mov
rcll
mov
push
push
mov
cmpsb
mov
jmp
push
fwait
in
or
push
adc
dec
loop
arpl
cli
sub
clc
bound
sti
gs
fadds
mov
sub
mov
pushf
and
imul
orb
and
into
lea
fwait
xchg
aam
ds
gs
pop
sbb
inc
out
fadds
or
cs
shr
lock
mov
xsavec
mov
jp
push
sbb
ret
incl
xchg
cmpsl
jns
xor
adc
jecxz
ds
fs
mov
loopne
xchg
cmp
xchg
inc
pop
out
dec
mov
xor
ror
inc
loope
std
cmpsb
jne
sub
mov
mov
jo
xchg
xor
lret
or
into
mov
dec
add
popf
dec
or
adc
dec
movsl
icebp
push
lret
in
xor
sbb
dec
jb
testb
fidivl
fistpl
jbe
mov
shrb
enter
xlat
lea
cs
inc
mov
add
popa
push
or
cmp
sbb
stos
outsb
push
and
movsl
movb
out
mov
into
insb
negb
lahf
imul
sti
jg
jmp
xchg
ror
xchg
mov
mov
out
sarb
inc
cmp
or
adc
jmp
mov
leave
pushf
sbb
sbb
or
pop
ret
add
push
xor
dec
mov
fidivl
push
and
mov
mov
xchg
ret
add
lahf
inc
push
mov
jno
int
push
mov
mov
xchg
fsubl
xor
sarb
add
xchg
pop
lahf
std
jle
xlat
or
xchg
dec
iret
mov
mov
inc
push
xchg
rcrl
cs
mov
mov
aam
mov
adc
pop
gs
mov
ds
push
jae
xchg
leave
push
jne
cmpsl
fidivrl
and
pop
mul
aaa
pop
enter
xchg
cmp
rorl
cmp
pop
dec
test
aas
lock
stos
xchg
bound
dec
and
jns
test
cmc
push
push
cltd
scas
inc
sub
ret
mov
adc
inc
pop
mov
sub
out
dec
add
sub
fildl
jnp
mov
and
out
cli
push
pop
clc
pop
adc
jmp
icebp
out
add
enter
sahf
enter
sti
pop
pop
testb
sti
adc
jmp
inc
xchg
adc
xchg
xchg
pop
mov
mov
stos
xchg
dec
fstl
xchg
aas
test
xchg
push
hlt
and
push
jns
jae
orl
loopne
leave
mov
push
shlb
push
mov
push
cmp
adc
das
lock
in
adc
xchg
idivb
xchg
mov
out
mov
or
mov
xor
add
fisubrl
jge
in
or
cmp
idiv
jb
adc
cmp
sahf
dec
insb
stos
ret
rcll
loop
push
cmc
push
adc
out
cmpsb
nop
sub
out
add
pop
fwait
lods
fildll
cmc
cmp
inc
enter
ss
xor
iret
dec
pop
inc
pop
cmpsl
push
cmp
push
adc
add
lret
fsincos
inc
imul
and
push
popa
mov
aam
cmp
or
int3
sub
in
pop
or
jmp
mov
bound
mov
sti
xchg
push
inc
loop
mov
push
rorl
sbb
dec
mov
outsl
gs
loope
sub
cs
mov
lods
stos
cli
lods
popf
cltd
pop
sbb
stos
cmp
pop
mov
push
or
sbb
sbb
mov
scas
stos
dec
addr16
mov
insb
inc
adc
push
pop
inc
ds
nop
jns
flds
xor
cmpsl
push
inc
mov
repz
mov
sbb
jecxz
aaa
repnz
jne
into
inc
cli
sbb
lds
imul
inc
test
loope
pop
sub
lret
sub
fcompl
xchg
cwtl
sbb
nop
adc
loop
cs
adc
or
call
jns
cli
xchg
imul
pop
pop
jo
fisttps
sarb
mov
jne
cmp
mov
repz
inc
dec
xlat
jbe
callw
mov
and
lret
mov
mov
in
popa
mov
adc
repz
xchg
or
cwtl
ret
mov
add
mov
push
push
inc
dec
sti
jmp
dec
and
in
lcall
and
clc
fiaddl
fidivrl
and
pop
cmp
scas
into
push
push
pop
ficomps
and
imul
fstl
cmp
pop
ret
xor
jnp
enter
cmpsb
cwtl
sub
pop
call
lock
cs
add
mov
mov
mov
sarb
xchg
cs
loop
dec
sbb
pushf
mov
mov
out
fsub
out
pop
ss
arpl
xor
mov
push
cli
cltd
adc
mov
inc
jecxz
xor
pop
xor
addr16
push
xorl
sbbl
add
in
lea
movsb
push
push
ficomps
inc
and
sbb
stos
sub
decb
inc
push
pop
lods
popf
imul
adc
daa
in
mov
sbb
jbe
adc
rorb
push
jo
fs
mov
jno
mov
aas
mov
bound
push
test
cmp
stc
repnz
mov
push
out
sti
fsub
jae
push
push
mov
psrlq
ret
stos
bound
lock
addl
inc
jge
add
push
lods
mov
xor
sahf
sub
pop
sarb
in
dec
and
add
das
in
pop
iret
js
or
and
push
mov
imul
mov
mov
push
inc
insb
adc
xlat
adc
cmp
imul
sub
jns
pusha
filds
mov
or
test
xchg
lods
mov
sbb
lea
push
shll
ja
repnz
popf
fmull
mov
cmpsl
pop
push
out
test
montmul
cmpsb
ret
popa
xor
ret
movsb
mov
push
frstor
loope
mov
pop
xlat
lcall
fisttps
jecxz
pop
dec
mov
or
lret
adc
and
and
mov
fdivr
and
and
and
inc
test
dec
lcall
mov
jb
add
adc
mov
loope
inc
pop
popf
inc
adc
sub
xor
stos
mov
pop
leave
or
stos
mov
bound
jb
pop
inc
xlat
mov
pushf
test
and
out
or
int3
in
pop
data16
mov
or
mov
rclb
pusha
push
adc
cmpsb
into
aad
xor
jge
mov
mov
lock
jo
addr16
lds
pop
push
sarb
and
add
icebp
jmp
add
mov
cwtl
pop
lahf
ret
gs
dec
xchg
cld
repz
inc
xor
mov
jmp
movsl
loope
test
push
popf
inc
sub
jno
aas
clc
aam
pop
push
pop
xlat
shlb
pop
cltd
shrl
cld
into
fidivrs
mov
jg
imul
pop
push
mov
fwait
xor
mov
mov
adc
mov
push
ret
mov
or
in
push
flds
sub
xchg
addr16
div
mov
mov
push
pop
dec
adc
jmp
lahf
and
test
dec
push
pop
inc
dec
bound
mov
sbb
bound
jg
or
adc
hlt
rolb
mov
xchg
es
aas
cli
cli
ds
cmp
fldt
mov
mov
or
pop
mov
mov
test
add
enter
dec
pop
aam
jnp
stos
das
inc
inc
lods
sti
sbb
std
lcall
pop
inc
dec
cmp
idivb
pop
push
jle
insl
ret
jmp
cmp
pop
mov
add
stos
call
adc
dec
xchg
lds
outsb
out
jno
fidivl
in
cmp
fldt
or
das
push
out
scas
or
in
pop
pop
pop
mov
sbbl
xor
mov
pop
dec
imul
in
sbb
lcall
jmp
mov
pop
xchg
mov
or
popl
and
andl
xchg
mov
sbb
outsb
cld
add
jg
stos
cmp
jle
ljmp
mov
xrelease
mov
add
rcll
inc
lods
and
aaa
sahf
add
gs
sub
push
pop
mov
sub
and
lods
adc
jp
inc
adc
add
lods
nop
js
scas
sbb
les
repz
push
pop
lods
or
adc
jp
in
cmpsb
out
adc
inc
lods
mov
aam
pop
mov
pop
lcall
imul
xchg
pop
xchg
es
rclb
aaa
mov
add
sub
dec
cmp
fs
mov
fstps
jge
jne
out
in
fwait
movsl
mov
inc
sbb
shll
ja
sub
sbb
jae
test
jge
add
jg
into
lahf
lcall
sarb
pop
pop
mov
or
pop
outsl
sub
data16
ljmp
jg
add
push
mov
neg
push
jns
mov
sub
pop
popa
movsl
mov
jmp
and
push
mov
pop
pushf
addb
add
imul
out
jns
aad
mov
insl
stc
aam
lea
add
dec
mov
xchg
inc
dec
adc
mov
ss
shl
cmpsb
mov
mov
jne
inc
cmp
pop
sub
in
jg
lds
lret
out
or
test
stos
pop
or
lds
mov
jnp
pop
push
les
adc
jo
das
cmp
cwtl
mov
pusha
ljmp
cld
call
movsl
adc
cwtl
icebp
loop
sub
js
pop
rclb
jo
sbb
mov
inc
xchg
jns
popf
mov
inc
mov
push
xor
bswap
or
sbb
hlt
mov
xchg
cmpb
rclb
arpl
sub
sti
sahf
xchg
push
pushf
mov
push
movsl
mov
jl
add
stos
xor
lods
psubsw
clc
adcb
inc
mov
fucomip
cmpl
rol
mov
fsubrs
xorl
stos
nop
out
push
inc
jne
mov
mov
add
hlt
inc
lahf
cwtl
cmpsb
mov
xchg
fwait
pusha
mov
push
rolb
out
xchg
or
ds
pop
push
pop
cmp
push
dec
jecxz
dec
pop
je
mov
jl
clc
popa
stos
ret
sub
mov
fsts
ud1
dec
shrd
jge
negb
movsl
cmpsl
add
jmp
jb
add
pop
icebp
inc
scas
cmp
hlt
mov
scas
jb
mov
shll
mov
fsubrl
pop
sub
fldl
mov
mov
cld
xchg
cmpsb
leave
push
pop
dec
inc
jecxz
dec
pushfw
fwait
xor
mov
stc
icebp
jb
movsl
xchg
xorl
push
cmp
in
jae
inc
push
mov
pop
mov
in
pop
lds
fisttps
mov
iret
mov
xchg
fldt
xlat
gs
ja
std
cmp
dec
xchg
movsl
adc
pop
cmp
jb
jl
and
cmp
out
cli
mov
call
xor
mov
jp
pop
lahf
outsb
cmpb
nop
notb
and
add
lret
lods
loopne
xchg
shr
mov
aaa
cmp
inc
and
cmc
mov
or
xlat
jb
fs
xor
test
clc
je
and
mov
sub
mov
mov
xchg
aam
jge
xlat
mov
dec
push
inc
mov
inc
inc
ficompl
sub
repz
lahf
daa
cmpb
sub
jmp
lahf
in
mov
jo
pop
lods
stc
jb
jg
cmc
jne
mov
call
mov
pop
push
xchg
in
sub
cltd
or
mov
rcll
cmpsl
sbb
fisttpl
test
iret
cld
or
insl
loope
mov
sbb
push
mov
adc
fiadds
xchg
sbb
loope
xor
lds
inc
mov
add
adc
leave
mov
cmp
fwait
popf
orb
test
inc
rorl
push
ret
in
adc
repnz
pop
push
jno
add
xchg
or
cmp
jae
mov
jae
cmp
aas
xor
push
idiv
push
testl
sub
cmp
sti
je
lahf
jo
xor
out
mov
pop
dec
sbb
imul
cs
lea
ds
xchg
cmp
xchg
sub
shl
push
pushf
aad
or
dec
push
popf
outsb
mov
mov
sub
jae
mov
jl
lret
dec
test
scas
filds
push
lahf
addr16
sub
outsl
pop
shrb
add
inc
das
fistpll
mov
leave
sub
mov
add
mov
mov
ret
pop
adc
push
pushf
clc
jbe
ja
in
xor
cmp
or
jl
push
push
xchg
std
sub
dec
daa
mov
pop
cwtl
mov
cmp
sbb
addr16
adc
sti
fsubs
test
stos
jae
cmc
add
das
mov
gs
lcall
mov
sbb
in
pop
and
mov
jae
jb
mov
and
and
mov
fidivl
fcmove
aas
lcall
pop
cmp
shll
insl
loop
dec
jo
sub
push
mov
icebp
jge
in
xor
cmc
push
or
xchg
in
cmp
test
popf
adc
pop
mov
shll
das
jg
sarb
cmp
rcll
inc
fcmovb
pop
out
and
out
dec
test
lock
arpl
fcomps
pop
mov
bound
or
mov
fldcw
inc
jne
aaa
and
aaa
pop
ret
xchg
cmp
push
mov
rolb
testb
pusha
dec
pop
cmpsb
pop
push
push
outsb
dec
cmp
lea
lahf
add
sbb
pop
jno
orb
pusha
dec
adc
test
jbe
and
movb
or
add
shlb
loope
cmpsl
cmp
push
pop
call
xor
ds
cmovo
push
xchg
inc
mov
xlat
incl
jae
and
xchg
mov
lods
add
mov
pop
ficomps
dec
fdivrl
jge
push
or
xchg
pusha
mov
sub
fnstcw
cmc
xchg
jecxz
out
out
and
fldcw
inc
das
inc
dec
adc
jg
addb
push
mov
bnd
fs
lret
mov
or
rcl
or
movsl
mov
sub
cmc
sub
inc
push
sbb
cmp
sub
aas
ficoml
stc
leave
pushf
fs
sahf
or
pop
mov
and
cs
xchg
mov
call
mov
stos
repnz
pusha
lds
mov
scas
mov
in
jnp
jp
rorl
adc
int
test
xchg
dec
dec
shrb
insb
fistl
jp
fiadds
pop
add
lock
or
js
notb
aas
subl
or
jno
jmp
popf
pop
fwait
dec
nop
insl
lret
and
sub
sti
movsl
icebp
out
sbb
xchg
fcoms
orl
ret
lahf
mov
out
int
rol
fstpl
insb
inc
jge
icebp
xchg
test
push
adc
mov
je
and
loopne
dec
stc
and
fpatan
stos
adc
imul
std
jecxz
fildll
xchg
mov
ret
or
push
jae
adc
or
lret
lea
sub
and
loop
fwait
cmp
pop
inc
adc
push
mov
aam
cmpsb
cmp
mov
mov
dec
decb
js
pop
pop
test
inc
add
push
push
mov
test
pop
pop
mov
mov
fwait
in
push
cmp
cli
popf
mov
aaa
dec
jne
inc
test
xchg
sbb
scas
push
faddl
outsb
jae
dec
pusha
sub
xor
xchg
dec
pusha
xor
fisttpl
jl
push
push
pop
mov
mov
mov
push
std
pop
jmp
cmp
repnz
sub
sbb
pop
mov
jle
daa
and
das
fisubs
out
pusha
rolb
mov
ljmp
les
jo
dec
mov
scas
and
inc
push
pop
dec
cmp
pop
out
push
jbe
imul
mov
dec
cltd
outsl
adc
cmp
subb
sub
mov
mov
adc
mov
fsubl
mov
enter
out
in
sub
arpl
xchg
or
cltd
xchg
es
and
mov
mov
push
sbb
es
into
fistpll
repnz
jge
dec
popa
push
sub
rorb
cwtl
lahf
xor
cmp
lcall
into
imul
add
bnd
jb
inc
data16
jo
popa
push
aaa
adc
inc
mov
jns
jp
cmp
inc
les
push
lock
insl
inc
cwtl
hlt
sbb
bound
mov
push
dec
sbb
push
shrl
lret
fnsave
aam
mov
ds
fnstenv
cld
addb
mov
arpl
push
ss
or
mull
xchg
jg
or
push
lds
fdivs
adc
sahf
aam
add
and
xor
jbe
mov
mov
mov
pusha
mov
ja
push
push
lods
test
sti
pop
jno
pushf
rcl
hlt
pop
and
clc
test
sbb
cmp
stos
stc
orl
shll
cmp
push
mov
subl
repnz
cmp
jecxz
into
fsts
repnz
test
lret
pop
xchg
pop
sbb
pop
fwait
mov
or
popa
pop
cmp
lea
scas
pusha
mov
dec
sub
sub
lahf
shll
inc
cld
sub
adc
lods
in
dec
fcompl
mov
push
dec
cmp
cmp
cmp
nop
sub
add
xchg
jb
xchg
movsl
dec
stos
xlat
push
pop
xchg
xchg
sahf
jb
and
jno
cmc
add
xor
movsb
rorl
bound
in
jae
jp
cmp
xchg
cli
or
fmuls
push
loope
les
dec
iret
mov
xor
add
push
popf
cmp
ror
mov
xchg
adc
mov
pop
and
pop
std
inc
sti
fimuls
flds
fwait
cmp
xchg
cltd
add
repnz
shll
cltd
dec
xor
xor
scas
std
mov
outsb
and
dec
cmp
je
rol
mov
cmpsb
and
add
add
jmp
cmpsb
add
cmp
test
test
mov
dec
xchg
pop
adc
aas
jmp
pusha
jne
cmp
pop
lsl
and
ret
pop
cltd
mov
pop
mov
scas
xor
movsl
imul
cmp
iret
xor
push
jg
sub
sub
mov
iret
jl
data16
in
lret
xchg
arpl
lock
ror
add
jb
ss
xchg
mov
inc
cltd
lock
cmp
add
xor
loope
inc
sbb
pop
enter
sbb
outsl
dec
mov
mov
and
cltd
jge
cltd
fs
shll
dec
clc
xchg
hlt
mov
pop
jmp
mov
and
outsl
arpl
sbb
mov
daa
mov
cmc
adc
roll
adc
jno
sbb
mov
sub
aaa
lods
pop
jp
xchg
or
mov
sub
loope
and
and
add
arpl
mov
xchg
mov
testl
pop
xchg
cmp
dec
popf
imul
sub
int
push
test
lahf
cmc
ret
fisttpll
mov
mov
jbe
in
xchg
stos
cmpsb
sbb
out
das
roll
pop
cmp
push
mov
jnp
shrb
sbb
and
xorb
adc
sub
and
ret
jge
pop
jnp
lahf
jmp
cli
or
addr16
scas
jmp
icebp
aas
cltd
mov
mov
and
push
lock
pusha
push
sub
arpl
pop
fsubs
push
mov
add
dec
mov
dec
leave
jl
jbe
aaa
lods
push
sar
repz
fcmovbe
movsb
aaa
jne
int3
pushf
dec
in
mov
inc
dec
push
mov
out
push
mov
aas
insb
or
movsb
sbbb
test
stos
lcall
mov
int3
repz
inc
jle
sub
aad
ret
cmp
xor
sbb
lret
sub
imul
jo
add
pop
int3
popa
push
xchg
insl
push
inc
sub
push
nop
inc
les
out
rclb
or
xor
jl
int
sub
aas
mov
out
jl
test
pop
notl
or
cmp
xor
push
movsl
add
mov
cld
xchg
jl
add
and
dec
in
sub
push
inc
sbb
cmc
push
lahf
adc
adc
loopne
movsb
in
push
or
pop
jg
mov
pop
jns
imul
lock
add
mov
or
push
adc
pop
ja
mov
addr16
addr16
jo
dec
inc
mov
fsts
or
sub
dec
pop
inc
xor
fisttpll
pop
jecxz
push
add
test
inc
aas
or
pushf
push
leave
inc
sub
int
mov
lods
push
js
ja
cmp
dec
adc
mov
addl
cmp
push
or
fidivs
pop
pop
mov
in
inc
dec
repnz
call
push
inc
je
and
xor
scas
sbb
xchg
jno
cs
mov
ja
push
xlat
or
xor
add
lods
adc
mov
push
pop
lret
inc
adc
dec
rcrb
mov
ret
popf
cwtl
fdivrl
jecxz
es
leave
shrb
mov
cmp
shlb
lods
xlat
sub
xor
test
xor
dec
pop
jne
pop
call
sahf
fcmovb
jae
loopne
inc
mov
push
nop
dec
xor
sub
jp
xchg
adc
jecxz
mov
or
inc
dec
decl
add
dec
fldenv
xor
mov
aas
jmp
mov
lcall
add
loope
mov
cmpsb
icebp
mov
divb
push
sub
push
imul
and
or
adc
inc
sbb
dec
adcb
fs
sub
jnp
mov
mov
sbb
sarl
mov
insl
ds
je
push
cmp
fcomip
js
mov
divps
jge
jmp
jmp
cmc
popa
sub
push
inc
imul
sbb
mov
aaa
mov
loope
test
sbb
cs
scas
push
pop
cs
mov
lahf
cli
aam
out
adcb
mov
mov
jge
dec
test
mov
pop
rep
mov
xchg
call
lea
or
cmp
rol
cs
cwtl
and
sbb
daa
push
xor
out
add
xchg
mov
adc
in
insb
fisttpl
les
cwtl
addr16
iret
stos
cltd
or
clc
fildl
push
push
push
or
jno
jno
lock
sbb
sub
movsb
js
sarl
push
mov
cwtl
movsl
mov
mov
cmp
push
xchg
lock
lods
sbb
jo
aas
aas
addr16
dec
sbb
fmul
sub
jecxz
mov
sbbl
mov
adc
inc
or
sbb
jo
mov
out
dec
cmp
sbb
jo
call
sub
jne
and
inc
test
loopne
xor
cmp
or
lock
movsb
daa
adc
sbb
mov
test
pop
add
aam
sub
sti
cmp
xor
mov
or
sub
stos
push
push
rorb
sarb
mov
add
mov
push
std
mov
xchg
stos
pxor
fwait
jg
aam
or
int
leave
jecxz
mov
int
inc
sub
jne
mov
mov
mov
cmpsl
xor
loopne
mov
test
in
imul
xchg
push
jo
xchg
fldenv
enter
xchg
cmpsl
gs
adc
jnp
mov
pop
ja
outsl
adc
wrmsr
fnstcw
aam
sub
pop
repnz
sbb
popf
mov
cmp
push
rorl
mov
inc
and
loope
std
push
lock
push
cwtl
mov
pushf
loopne
xor
dec
adc
mov
movsl
inc
icebp
cmc
and
pop
and
and
jge
in
add
mov
add
dec
imul
clc
dec
xchg
mov
jg
lret
cmp
xchg
pop
call
popa
inc
call
out
cmp
cmc
scas
movsb
daa
xchg
sub
or
and
call
repnz
adc
out
push
int3
cmp
cwtl
imul
pop
push
jns
dec
enter
mov
dec
push
push
xchg
nop
insb
sub
sbb
mov
loopne
sbb
cltd
out
cmp
jne
rcll
pop
rcll
xchg
mov
mov
jo
push
fldl
shlb
lds
pop
loop
mov
hlt
lock
sub
xor
add
dec
push
add
aad
dec
xchg
shrl
pusha
adc
mov
jb
inc
and
jno
nop
sahf
cmp
cmpsb
repnz
mov
inc
jmp
xchg
loope
xchg
mov
inc
enter
push
loope
inc
out
aas
jg
mov
pop
mov
fsubrs
fwait
rcrl
push
pop
scas
mov
add
arpl
ss
mov
loop
iret
inc
fcom
sbb
lcall
adc
mov
sbb
sub
add
and
adc
sub
test
lahf
xorl
sub
bound
out
in
or
loopne
gs
aad
pop
les
add
fldl
in
push
jno
and
fwait
mov
xchg
push
stos
movsb
test
mov
test
andl
add
push
pusha
dec
or
js
cli
test
negl
test
xadd
cmp
xchg
gs
cmp
leave
fs
in
jbe
mov
and
loop
lret
sbb
lds
leave
pop
pop
in
nop
fbstp
and
ret
cli
lcall
fdivrl
les
sbb
ljmp
mov
ja
fisubl
push
xor
mov
jb
aad
push
or
xchg
push
cmp
inc
pop
lods
and
inc
sbb
pop
ss
mov
and
mov
mov
sub
test
icebp
push
das
pop
shlb
jns
xchg
jl
sbb
fimull
xchg
iret
cli
popa
cmpsb
sub
mov
stos
lcall
dec
add
or
dec
cwtl
mov
int
add
into
int
je
lret
lret
mov
les
jbe
or
lods
xchg
cltd
rcl
aad
fcoms
lret
jg
stos
into
sbb
insl
mov
push
das
lock
call
pop
mov
ds
leave
popa
int
or
jle
idivl
push
lea
cmp
gs
dec
or
test
pusha
xor
dec
lods
shrl
jns
xchg
dec
add
adc
int3
xor
jno
fisubrs
and
pop
std
lahf
out
cmp
pop
mov
fcmovne
fists
and
sti
xlat
xor
out
lock
sub
jb
cmp
inc
mov
popf
ljmp
or
cltd
pushf
xchg
and
xchg
jl
add
pop
mov
push
mov
dec
push
out
xlat
xor
addr16
vpunpckhwd
mov
data16
fdivs
dec
dec
mov
add
xor
fldt
add
jge
xor
push
jnp
adc
popf
aad
insb
fnstenv
mov
mov
mov
jecxz
push
mov
mov
scas
jns
mov
mov
adc
test
xorb
outsb
ljmp
push
sbb
fdiv
add
insb
and
pop
insl
ss
xorb
fsubrs
and
xchg
push
ret
adc
push
cs
pop
cmp
lock
push
incb
cmp
xor
dec
pop
sbb
xor
mov
fcmovnbe
std
and
jno
pushf
int3
push
repz
add
dec
or
std
jne
jmp
mov
dec
mov
lds
hlt
mov
das
fsubl
cmc
int3
loope
sub
adc
adc
rcrb
xlat
cmp
ljmp
lds
sub
push
adc
jg
mov
je
repnz
sbb
adcl
adcl
ljmp
dec
mov
or
and
cmp
scas
stc
mov
sub
or
xchg
mov
pop
dec
fistps
xchg
push
push
ljmp
mov
jmp
sbb
mov
pop
adc
push
xchg
add
pop
pop
jne
sub
test
scas
inc
shll
popa
jne
mov
and
out
jle
es
or
jb
mov
iret
fwait
sub
cmpsl
shrb
jns
adc
cmpsb
lea
lods
pop
xchg
bound
addr16
xor
add
test
push
xchg
sub
sbb
incb
cmp
mov
fildll
enter
mov
inc
dec
sub
fwait
add
out
push
mov
sbb
jg
gs
call
xor
push
dec
lods
or
das
outsb
ja
movsb
push
cltd
pop
mov
xchg
daa
pop
jmp
add
std
mov
xor
sbbb
push
and
push
sti
mov
ds
subl
pop
sub
cmp
cwtl
pop
scas
pop
mulb
out
iret
cmp
mov
lea
fnstenv
dec
sbb
inc
and
out
fcoms
and
push
cmpsl
add
and
xor
addl
jg
test
mov
lds
jo
jo
js
outsb
cwtl
mov
mov
filds
daa
int3
and
dec
sub
xchg
mov
cld
mov
sub
jae
dec
cmp
push
sbb
jl
push
nop
inc
sub
repnz
adc
pop
shl
mov
push
mov
rcrb
cmpsl
mov
cmp
and
andl
ret
into
pop
xchg
mov
push
pop
movsl
scas
loop
out
jnp
mov
data16
cld
jl
mov
mov
push
pop
xchg
in
xchg
xchg
adc
jmp
lret
sar
fldl
sub
xchg
daa
mov
cmp
mov
lds
movsb
mov
mov
jne
sub
adc
je
mov
repz
loopne
lds
cmp
xchg
fadds
xchg
sub
je
or
repz
outsb
and
sbbl
mov
xor
dec
and
dec
fisttpl
sbb
in
popa
cmp
fldt
jnp
bound
jecxz
and
xchg
and
push
cli
enter
fwait
jnp
cmp
push
repnz
popl
loope
mov
call
and
scas
in
mov
jge
mov
or
aas
push
push
cmp
clc
sub
or
dec
mov
xchg
shr
popf
sti
test
mov
push
sub
inc
fadd
int3
rcll
push
enter
mov
sbb
insl
lods
sbbb
scas
ret
xchg
xchg
inc
cmp
decl
lock
dec
gs
push
mov
sub
movsl
push
pop
inc
cs
sub
mov
aaa
add
cmp
rcrb
cs
mov
and
push
sbb
mov
in
sbb
fwait
xor
hlt
aad
aam
repz
add
scas
out
repz
xchg
mov
xchg
pop
adc
jmp
mov
adc
pop
stos
aad
psubusb
andl
mov
jmp
pop
cmp
sub
cmp
inc
repz
sbb
adc
lret
in
sbb
mov
incb
mov
fbld
ret
loop
dec
fs
lahf
mov
push
or
mul
addb
push
dec
push
xor
jbe
mov
dec
call
pop
lods
inc
adc
xor
or
jbe
jne
add
ds
push
push
xchg
mov
les
add
jmp
test
mov
repnz
insb
mov
jne
jnp
cmpsl
cld
sub
addr16
jmp
out
lret
sbb
jbe
jno
subl
arpl
imul
push
xor
mov
mov
cmp
jecxz
shlb
das
lods
xor
sub
push
fisubl
lods
rclb
mov
jo
adc
push
rolb
mov
popa
mov
push
icebp
sarb
test
xchg
cmp
in
and
and
cli
loop
fdivs
inc
lcall
cld
pop
mov
sbb
mov
mov
jmp
ret
fcompl
cmpsb
stos
jecxz
add
cmp
jg
in
cli
cmp
movsb
mov
add
int
aas
leave
insl
cmp
push
add
add
scas
mov
mov
xorl
push
mov
adc
jl
inc
das
pop
insb
mov
add
or
ja
divl
hlt
insl
pop
mov
bound
push
add
sbb
mov
adc
enter
loope
outsl
shll
mov
xchg
mov
sbb
pop
mov
fmull
dec
xlat
mov
cmp
and
flds
mov
dec
inc
mov
mov
cmpsb
mov
scas
cmp
sub
clc
xorb
test
push
sbb
mov
dec
mov
mov
mov
pop
scas
lea
mov
push
or
cld
test
orb
arpl
cmp
test
xchg
sub
pusha
data16
mov
mov
mov
adc
inc
fdivr
pop
loop
and
jmp
arpl
jecxz
lds
inc
or
scas
add
test
mov
pop
insl
arpl
adc
pusha
roll
in
mov
fsubl
and
cwtl
mov
fmull
ret
shl
and
or
cmp
mov
mov
and
mov
push
xor
xor
sub
sub
xchg
and
outsl
das
push
or
sub
insb
lods
loop
mov
sub
mov
pop
mov
or
xchg
sub
js
jb
and
es
inc
inc
mov
mulb
mov
inc
mov
sbb
mov
cltd
lret
aam
int3
and
pop
mov
push
or
sbb
or
adc
cwtl
sbb
cmp
push
xchg
pushf
jecxz
cmp
xor
das
sbb
sar
cs
mov
jge
cwtl
fwait
jbe
dec
ret
push
lret
mov
or
fwait
fs
dec
call
add
addb
mov
out
push
fwait
dec
mov
out
sub
mov
cli
fcmovb
aam
sub
mov
faddl
push
adc
mov
mov
jno
sahf
cmp
ret
outsb
arpl
imul
adc
or
lret
imul
cmpsb
stos
xor
push
popf
xchg
push
xor
cmpsb
sti
xchg
mov
adc
mov
mov
inc
stos
lds
js
or
pop
adc
pop
cli
inc
mov
cmpb
stc
jb
xlat
pop
inc
mov
call
mov
es
push
fld
pop
sahf
addr16
imul
popa
xchg
imul
loop
pop
adc
lcall
movsb
cwtl
je
adc
xor
out
in
stc
push
out
das
sub
mov
stos
loope
outsb
xchg
push
imul
jge
cltd
adc
into
sub
ss
inc
jae
add
imull
add
mov
fists
adc
nop
scas
pop
sbb
into
lds
cwtl
inc
nop
fcomp
adc
stos
negb
dec
or
movsl
mov
cmp
or
sub
push
adc
pusha
mov
mov
adc
xchg
jbe
insl
inc
adc
sub
add
xor
xor
faddp
cmp
dec
push
mov
int
cmp
push
cmp
outsb
push
and
pop
stc
xchg
dec
daa
xor
in
ja
fs
movsl
xchg
sbb
adc
add
es
js
inc
add
xor
lock
add
jge
cli
repz
inc
inc
xchg
cmp
push
push
rol
xchg
call
mov
arpl
aas
stos
adc
orl
aam
mov
popa
inc
cmp
cmpb
aam
frstor
push
xbegin
lret
pop
gs
inc
push
xchg
mov
cmp
jo
into
pop
push
mov
sub
cmpsl
pop
pop
adc
add
cmpsb
in
push
xchg
hlt
sbb
nop
push
add
sub
or
xchg
and
nop
fdivl
or
pop
sub
int3
add
in
jecxz
call
pop
shrb
enter
and
subb
mov
jmp
pop
jae
and
fildl
pop
xchg
in
inc
cmc
arpl
fnstenv
add
test
xlat
and
hlt
xchg
push
das
scas
push
lock
push
push
xor
pushf
movsb
xlat
push
test
sub
out
pop
fnstcw
jge
jp
pop
lcall
push
dec
inc
cmp
ds
les
lcall
hlt
test
and
insl
sub
test
std
jno
push
fcompl
mov
enter
call
push
enter
ds
sub
push
jle
and
cmp
add
pusha
sbb
int
pop
xchg
jae
mov
jmp
xchg
inc
sub
out
orl
sub
daa
pusha
inc
mov
xchg
xchg
mov
jle
iret
lret
or
xor
lea
mov
les
jmp
jno
xchg
adc
push
daa
imul
inc
sahf
aaa
jge
xlat
fisttpl
cmp
imul
dec
fisttpl
loopne
scas
or
xor
xor
add
jns
addr16
iret
ss
cltd
push
sbb
movsl
enter
or
test
pop
outsb
popl
ror
cmp
and
dec
ret
iret
jbe
jnp
add
jge
pop
cmp
jg
test
xchg
out
xor
in
add
inc
xchg
adc
dec
mov
jns
addb
leave
cmpb
loop
pop
jns
push
pop
cmp
inc
dec
sbb
fimull
addl
lock
adc
lcall
fs
loopne
loope
xchg
lock
cmc
and
das
gs
dec
mov
ret
shll
xor
mov
dec
popf
mov
cli
test
jge
scas
outsl
xchg
idivb
jne
jl
or
inc
aad
dec
pop
les
sti
loopne
sub
cmp
adc
sub
sbb
cltd
push
lret
xor
and
lret
sub
fwait
and
mov
cmpsb
jmp
xor
test
jne
jge
or
cli
stos
hlt
xor
cmpsl
arpl
repz
fcmovbe
jbe
pop
add
xor
pop
sbbl
aas
cmp
rcll
cmpsl
xchg
pop
inc
out
test
dec
pop
push
and
mov
fdivrs
mov
and
push
int3
je
sti
pop
addl
sbb
outsb
fldl
xchg
push
jo
sbb
pop
push
ds
cmp
jbe
outsl
cmp
out
add
sub
mov
sbb
divl
fsincos
int3
bound
inc
jg
mov
mov
fcmovne
popa
sbb
cmc
mov
xor
insl
mov
fidivl
loopne
pop
adc
imul
out
jle
imul
insl
push
lds
mov
jmp
cmc
sub
into
movsl
popf
popl
fld
xor
fxam
dec
dec
sub
sub
fimuls
negl
inc
mov
pop
fnstenv
and
imul
jmp
jge
xchg
mov
adc
enter
jne
lods
loopne
fdivrl
mov
ljmp
mov
std
out
add
in
pop
fcom
xor
adc
mov
and
mov
pop
sti
lcall
add
insb
inc
lods
sub
lahf
xor
jne
pop
adc
cmp
leave
fs
push
pushf
in
jns
inc
aad
xor
pop
mov
stc
mov
lret
sbb
ja
loop
arpl
add
ret
jns
sub
jns
and
mov
jl
loop
pop
cmp
movsb
dec
flds
cmp
outsb
push
lock
mov
mov
rcl
aas
cmc
les
xchg
jmp
cmp
push
int
mov
mov
or
and
pop
sbb
and
out
out
cmc
inc
mov
sarb
cmp
std
adc
mov
lahf
ja
cmpsl
pop
pop
out
jnp
and
push
scas
lods
jno
lahf
or
lock
loope
sub
mov
cmp
mov
dec
std
sti
mov
out
fiadds
sarl
mov
xor
imul
add
rorb
sti
ss
adc
test
jo
dec
push
fcmovb
cltd
into
dec
adc
add
cmpl
call
pop
cmp
mov
sahf
cmp
insl
xchg
xchg
fisubrl
icebp
sbb
mov
roll
fnsave
sub
sbb
jo
pushf
and
mov
xchg
jne
mov
jnp
out
xchg
pop
cmp
add
push
dec
fbstp
pop
xchg
aaa
pop
xor
push
pop
jo
jae
out
shlb
scas
xchg
mov
loop
fstl
aad
sbb
adc
loop
push
sbb
cmc
jb
jbe
or
pop
ljmp
jecxz
mov
jl
inc
pop
gs
and
pushf
test
rorl
nop
jo
rcrb
rorb
xor
xor
test
fdivl
dec
sahf
js
xor
xchg
sub
push
out
fcoml
ss
fldl
dec
dec
xor
outsb
push
cmp
mov
mov
add
jge
jmp
incl
and
pop
add
outsb
dec
testb
xlat
mov
lret
push
aas
jp
data16
pop
xchg
pop
xchg
push
nop
mov
je
mov
xchg
fistl
sub
xor
je
push
cld
push
pop
in
lea
pop
push
inc
fistl
push
xchg
cmpsb
adc
fsts
cli
incb
test
rcrb
and
lds
or
sti
mov
jae
pop
add
mull
mov
dec
fcompl
jb
rcrl
movsl
fidivrs
mov
dec
lret
adc
ljmp
cmp
dec
lahf
ja
push
cwtl
or
hlt
ja
dec
push
sub
sahf
pusha
pop
into
lods
add
popf
xchg
push
lcall
popf
stc
ja
lret
mov
add
inc
mov
xchg
xacquire
and
pop
aas
jp
iret
popf
mov
or
leave
dec
jl
mov
sub
adc
xchg
fwait
popf
mov
aad
sbb
push
xchg
out
into
push
jbe
shll
dec
dec
xor
movsl
sbb
dec
ret
enter
push
push
lea
inc
fldl
and
mov
mov
jnp
mov
lds
and
or
fxtract
ljmp
mov
pop
dec
sbb
repz
insb
mov
inc
cmp
lcall
rorl
inc
test
mov
or
nop
push
sub
cmp
mov
shlb
test
mov
and
out
mov
xchg
push
sub
in
xor
ja
xor
jb
xchg
lods
dec
jae
idivb
dec
bound
ds
shll
mov
xchg
pop
push
mov
mov
loop
aas
adc
pop
fdivrs
inc
cs
lods
jbe
sub
push
jae
test
popa
mov
and
xchg
jecxz
pop
xor
test
fwait
loope
mov
lock
mov
xor
pop
sub
ss
sbbb
hlt
mov
ds
imul
push
sahf
xor
incl
or
stos
and
cmp
push
xchg
insl
xchg
sbb
aad
inc
mov
fcoml
sbb
rcll
xchg
stos
fbstp
inc
inc
pusha
jae
addr16
dec
sbb
imul
sub
jl
or
lods
mov
les
ret
popa
mov
pop
mov
jp
sub
and
ljmp
pop
xor
cmp
push
daa
xor
cwtl
ljmp
leave
xor
fisubrs
xor
shrl
jecxz
xchg
enter
sbb
in
mov
pop
testb
mov
push
addl
stc
sub
mov
push
in
mov
in
pop
add
mov
test
leave
pop
scas
pop
cmp
loop
push
pop
sarl
rorb
push
enter
lock
cmp
fiaddl
push
push
xchg
nop
fs
mov
divl
cld
cmpsb
sbb
and
mov
iret
ret
xor
jmp
outsl
fldenv
mov
decb
add
jo
push
dec
pushl
stc
mov
data16
mov
movsb
imul
subl
fidivs
insb
stos
in
cwtl
mov
shl
inc
mov
pop
jo
das
imul
rcll
ss
mov
shlb
jb
jecxz
mov
js
dec
hlt
and
xor
outsl
loopne
popf
mov
mov
cmp
xchg
dec
push
mov
ficoms
dec
mov
sti
in
fistps
test
push
aad
xor
sbb
aad
decb
decb
add
cmp
jno
xor
push
lock
jnp
popf
mov
pop
sbb
jno
push
add
mov
inc
cmp
mov
add
lds
cwtl
dec
sub
out
add
cmc
mov
and
outsl
pop
push
add
out
pop
mov
jg
lock
rcrb
cld
imul
add
test
cld
inc
pop
xor
rep
scas
call
data16
sbbb
pop
jb
jge
sub
sahf
or
dec
jl
test
xchg
lcall
sti
adc
sub
inc
dec
loope
lahf
test
dec
dec
jmp
shr
movsb
xchg
orl
pop
lret
scas
popa
jle
andb
pop
inc
aam
stos
fcoml
inc
xlat
fists
jo
push
xchg
mov
mov
adc
pop
sti
fwait
call
andl
jbe
inc
testl
mov
xor
mov
pop
jno
xor
fistpl
in
lcall
xor
mov
mov
punpckhbw
inc
xor
stc
or
xor
lds
loope
clc
test
out
int
mov
inc
and
popa
call
mov
loope
fidivs
add
cmp
fsubrs
pop
xchg
or
dec
insl
fisubrs
pushf
aas
fistps
dec
jle
clc
inc
fucomp
push
insb
aaa
movsl
in
adc
pop
movsl
mov
sub
popa
imul
adc
arpl
jmp
in
adc
fstpt
sub
mov
das
es
fwait
aas
ret
cmp
sbb
andl
dec
sbb
sub
jbe
inc
mov
cmp
aaa
mov
push
lock
cmc
les
push
add
pusha
inc
jl
cmp
fs
cmpsl
and
lcall
push
ret
lods
fcomp
jmp
insb
cmp
push
or
jge
or
add
ds
pushf
int3
jecxz
xchg
or
int3
cli
or
leave
cmp
cmp
lahf
in
stos
push
outsb
fisttpl
shll
mov
mov
jae
mov
fisubl
sahf
push
mov
jae
iret
outsb
out
pop
xchg
push
stc
cmpsb
fsubs
stos
iret
aas
bound
mov
jecxz
repz
shl
fldenv
jns
jo
aaa
pop
cmp
adc
lcall
or
filds
mov
jne
mov
enter
mov
inc
stos
insb
push
pushl
adc
adc
xchg
xor
cmp
fistl
sub
int
inc
pop
ljmp
ret
shlb
nop
movsb
int
fcoml
mov
and
or
cmpsl
out
xor
scas
ret
ret
sub
hlt
pop
xchg
lds
cmp
and
push
xchg
mov
sarl
xchg
cmp
or
pop
notb
orb
jl
fsubrs
dec
repz
gs
sbb
push
adc
mov
inc
das
xor
pushf
fcoml
jle
sti
jns
cmp
cmpsl
orl
add
andl
out
bound
mov
pop
fxch
mov
call
sahf
xchg
jl
imul
clc
das
andl
rcll
rcr
fdivp
push
add
inc
aaa
sub
jle
mov
sub
lods
mov
into
pop
mov
pushf
xor
xchg
stos
pop
rolb
aas
mov
adc
push
mov
movsl
test
mov
stos
fs
movsl
cmp
jae
mov
push
or
dec
add
je
xchg
and
movsb
aam
add
add
cmpsl
popa
pop
adc
adc
psllw
push
loop,pn
inc
popf
add
adc
jae
add
xor
or
int3
cld
aad
xor
dec
inc
adc
dec
out
and
cmp
jmp
das
movsb
push
mov
lods
iret
inc
sub
jp
js
mov
and
imul
ret
outsb
jo
dec
add
rep
cmp
int
adc
push
jnp
cmp
lahf
mov
std
or
jo
clc
int3
stc
mov
pop
cbtw
or
jmp
mov
repz
jg
mov
out
call
icebp
addr16
movsb
mov
pusha
enter
jns
mov
push
mov
outsl
std
into
outsl
stos
andl
push
and
add
push
ret
xchg
fldcw
mov
inc
mov
jmp
add
les
pop
es
loopne
pop
jg
mov
daa
mov
cmp
mov
cmpsl
in
add
scas
clc
push
shlb
cmpsb
inc
xor
adcl
cmp
cmp
jns
imul
xor
rcrb
and
jl
int3
mov
test
addr16
outsl
jecxz
in
dec
mov
divb
push
adc
ds
inc
sub
es
push
push
loope
cmp
inc
dec
cmp
xor
addr16
lcall
mov
cmpsb
ret
leave
arpl
lahf
ljmp
out
test
and
sbb
push
nopl
out
fimuls
dec
push
fstl
mov
sbb
dec
cmp
into
pop
cmpsb
arpl
out
loope
mov
das
aaa
lods
rorb
xorl
inc
fisttpll
fdivs
mov
mov
xor
jns
and
cwtl
bound
stc
xchg
jb
adc
cs
mov
test
imulb
stos
or
xor
test
rorl
fisubs
notl
andb
das
testb
pop
scas
xchg
scas
je
inc
jle
gs
daa
aas
sub
and
add
mov
sbb
aaa
test
push
dec
rcll
jne
xor
adcl
push
xchg
adc
or
add
mov
arpl
movsb
out
into
lods
jns
xchg
shl
push
cmpsl
stos
cmp
dec
xchg
pushf
dec
in
divl
adc
jmp
push
pop
leave
mov
add
test
or
addr16
call
mov
loop
xchg
adc
and
cmp
add
xor
sub
xchg
cwtl
js
fs
in
mov
and
or
ljmp
xchg
sahf
fldenv
mov
notl
jo
mov
mov
push
jecxz
jle
mov
sub
pop
cltd
outsl
lods
mov
dec
mov
in
movsl
fdivs
adc
sub
inc
aaa
fdivrl
mov
jmp
sub
imul
loopne
cmpsl
es
mov
ret
mov
jb
fdivrl
jne
inc
add
push
xor
inc
je
xor
or
test
enter
std
hlt
je
pop
std
and
test
inc
mov
shl
bound
xchg
test
jno
push
mov
jne
scas
test
mov
pop
xor
mov
sbb
fistps
add
mov
fisttpll
sarb
scas
xlat
xchg
and
scas
test
add
insb
dec
movsb
jp
ja
repz
push
dec
add
adc
xchg
outsl
inc
mov
push
dec
imul
mov
outsl
jae
add
out
insb
into
inc
imul
ret
enter
stos
imul
or
in
fwait
or
ss
fmuls
rcrb
xchg
or
cmc
scas
shrl
cmp
add
in
call
adc
insl
scas
inc
xor
out
push
xor
loopne
push
int3
test
adc
sbb
pop
mov
rorl
loop
dec
and
loop
mov
lods
rcr
dec
push
cs
repz
mov
jbe
mov
lods
int
xchg
or
das
or
in
sbb
in
mov
mov
push
int
fmull
sar
jno
inc
and
sub
add
outsl
movsb
add
sub
aad
lahf
mov
mov
lret
sahf
push
mov
sahf
mov
jge
jp
int
cmp
ja
mov
inc
mov
adc
mov
mov
push
cli
xchg
add
jle
push
aam
lcall
adc
push
adc
push
pop
cwtl
jp
add
dec
movsl
scas
stos
popf
aad
inc
imul
or
xchg
mov
xchg
adc
lods
jno
mov
dec
scas
add
mov
stos
mov
sub
loope
pop
cs
call
add
inc
adc
cld
es
sbb
cmp
ret
loop
inc
sub
push
cwtl
and
in
mov
jmp
nop
xchg
sbb
or
xchg
mov
std
add
and
fstl
pop
loopne
push
pop
mov
mov
ret
cvtps2pd
rcrl
or
fdivrs
mov
push
dec
loopne
jne
inc
rorb
lods
in
fldcw
mov
push
dec
cmp
xor
push
jle
jp
in
xor
lret
insb
int3
mov
pop
xor
bound
repnz
sbb
out
xor
jp
mov
jle
call
adc
mov
loopne
outsb
ja
mov
nop
negb
sub
and
sbb
and
out
mov
xor
inc
shrl
mov
aas
dec
inc
adc
ja
xor
test
stc
cmp
sbb
jmp
pop
or
adc
mov
jns
push
xor
xor
and
inc
ja
push
xorl
ficoml
xchg
push
cltd
loopne
sub
int3
jbe
xchg
je
push
stos
sbb
sti
ja
push
mov
mov
cmp
lods
cmp
or
sarb
imul
imul
adcb
adc
xchg
adc
pop
daa
out
cmp
imul
fistps
mov
xchg
fstpt
pop
sub
xor
loope
jmp
cmp
cld
lahf
or
add
clc
lret
fstps
mov
jmp
hlt
mov
push
push
sub
or
adc
fdiv
sbb
add
das
faddl
jae
push
jmp
fldl
out
pop
mov
push
cld
jmp
mov
arpl
xor
mov
insl
mov
inc
out
icebp
cmpsl
movsl
out
jns
lahf
loope
cmp
and
sbb
outsb
dec
sub
sub
dec
cmp
pop
mov
cmpsl
jae
rol
mov
mov
sub
push
mov
xor
mov
jge
test
rcrb
icebp
mov
xchg
into
xor
or
cmp
aaa
sub
ret
xchg
test
add
sbb
cli
inc
jge,pt
es
fidivs
or
mov
cmpsl
cmpsl
and
jno
sbb
jmp
cs
in
jge
popf
mov
jae
repnz
mov
lods
and
clc
push
fstps
xchg
cmp
mov
jmp
xlat
sub
jle
dec
stos
pop
jmp
fcmovnbe
pop
outsb
js
mov
aam
cld
pop
je
sbb
ficompl
movsb
aad
xchg
cltd
xchg
mov
out
addb
push
jno
sub
stos
or
scas
or
das
push
imul
out
push
push
push
sbb
xor
adc
inc
cmp
sub
mov
cmc
cmp
cwtl
adc
xchg
loopne
ret
inc
jno
fstpt
cmpsl
sarl
sub
adc
dec
mov
push
fwait
scas
aaa
add
mov
mov
pop
stos
mov
aaa
cmp
lds
ret
stos
es
mov
push
pop
or
cli
ja
dec
dec
enter
lods
mov
sub
jl
arpl
ljmp
mulps
cmc
andb
fists
xor
mov
arpl
sub
repz
inc
cmp
rorl
add
push
int
add
lods
adc
addr16
mov
and
ja
and
adc
add
mov
and
cmc
aas
test
lret
scas
sbb
mov
xchg
aas
inc
pop
jle
lahf
data16
repz
inc
testl
in
and
call
push
and
popa
push
pop
fisubl
mov
fistps
xor
cltd
push
xchg
movsb
test
loop
push
clc
shlb
cmp
push
mov
dec
mov
push
xor
jnp
aad
jp
pop
dec
mov
and
jne
daa
xor
out
jp
stc
xor
fst
dec
mov
mov
xor
xor
loopne
fs
pop
loop
jb
xchg
xlat
push
rcrl
jbe
mov
inc
out
bound
push
dec
xor
test
pop
sub
call
lret
xchg
pop
xchg
and
adc
pop
shl
push
dec
mov
mov
stos
jns
mov
xchg
sahf
clc
inc
pop
cmp
push
or
aas
mov
push
stos
shlb
or
xchg
scas
fstps
inc
sti
gs
adc
aaa
lock
nop
push
insl
cwtl
xchg
push
in
sub
pop
adc
push
imul
into
cld
xchg
jmp
insl
aas
addr16
loop,pt
sbbl
jecxz
inc
lods
std
test
mov
outsl
and
sbb
or
lods
rorl
int3
shl
pop
faddl
addr16
pop
xchg
in
pushf
inc
stos
call
adc
dec
lods
out
dec
mov
mov
fdiv
dec
mov
mov
push
faddl
or
inc
orl
dec
int3
xor
fisttpl
inc
sub
mov
cmc
lahf
dec
cmpsl
dec
pop
xchg
jbe
pusha
dec
inc
rorb
push
outsb
out
adc
cmp
mov
mov
test
in
arpl
pop
inc
call
fcompl
cmpsl
jmp
sub
ret
cmc
fimuls
imul
scas
sbb
aas
lahf
cmp
imul
or
xchg
mov
insb
test
ret
clc
cmp
into
sub
shlb
aas
xor
cmp
lret
add
and
jge
icebp
or
push
fisttps
push
ficoml
adc
loopne
aad
or
sbb
test
sub
int3
fisubrl
aam
push
lahf
movb
je
sbb
push
push
lcall
jge
add
movb
addr16
mov
sbbb
or
adc
mov
mov
imul
push
outsb
mov
pop
in
test
jg
shll
adc
add
push
scas
movsb
push
mov
or
push
cmp
mov
cli
and
outsl
outsl
xor
dec
cmc
cs
xor
dec
xor
divl
insb
mov
stos
push
fwait
adc
or
jl
rolb
loop
outsl
loop
sbb
cmpsb
iret
push
aad
ret
push
fwait
or
adc
loope
mov
jmp
lods
xor
mov
jl
addr16
mov
dec
sub
inc
scas
mov
movsb
push
cmp
ss
sub
add
lcall
sbb
inc
fwait
sub
inc
test
xor
mov
and
enter
push
push
push
cmp
xor
mov
rcl
inc
push
push
mov
push
mov
xchg
inc
dec
movsb
and
cmp
dec
xchg
xor
aaa
adc
es
push
in
dec
xchg
push
mov
cmpsl
shll
push
adc
push
push
or
jo
lret
fs
aad
idivl
mov
push
jl
stos
mov
sub
adc
cwtl
test
pop
sub
stos
and
enter
jmp
orl
sub
lods
pop
add
scas
stos
dec
int
arpl
mov
gs
pop
pusha
pop
mov
pop
cmp
cwtl
lods
mov
push
imul
cmp
pop
sbb
jne
bound
loopne
incl
sbb
pop
xor
test
inc
pushf
cmp
rcrb
call
adc
fld
and
dec
pop
stos
fwait
outsb
fucom
or
or
divl
jmp
ja
test
sbb
xor
aad
mull
push
out
jmp
inc
popf
out
mov
lcall
in
jae
js
sbb
jle
mov
cmpsl
imul
ret
ss
addr16
ret
pop
xchg
lods
pop
fstpl
mov
das
ljmp
sti
pop
jnp
push
inc
movsl
mov
adc
sub
stos
jle
rcr
mov
stos
data16
ja
or
push
int
sahf
mov
sub
sbb
jbe
push
adc
cmpsb
xor
std
ss
pusha
add
xchg
ss
xor
test
lret
jo
inc
shll
cmp
mov
js
es
mov
ret
shl
or
out
push
imul
mov
xor
sbb
cwtl
adc
push
cld
inc
jecxz
in
xchg
in
xchg
cmpsl
inc
mov
aad
dec
dec
popa
and
push
dec
mov
push
xor
cmp
pop
push
not
push
push
lds
jle
ret
popl
mov
nop
das
icebp
pop
rcr
xchg
lds
adc
aam
int
loope
mov
dec
in
orb
in
pop
fwait
jae
mov
sbb
push
jmp
add
sub
gs
sbb
sub
mov
or
mov
jb
push
pop
pop
push
jl
jb
jl
push
xchg
jne
lock
mov
loope
cmpsl
js
insl
fs
mov
sub
clc
adc
mov
iret
lret
push
out
das
xor
xor
cs
out
cmp
and
frstor
mov
xchg
and
decl
insl
cmp
adc
cli
nop
mov
and
cmp
pop
insb
inc
jmp
jle
rcrl
fstpl
pop
flds
dec
xchg
ljmp
dec
enter
mov
pop
rcl
pusha
lods
sub
sbb
fadds
cmpsl
sub
aas
in
lods
leave
mov
mov
add
push
mov
pop
test
push
jnp
mov
adc
sub
add
mov
or
or
mov
lea
fs
xchg
mov
push
jmp
or
aaa
cwtl
test
xchg
fiaddl
lahf
or
outsl
rcll
out
clc
dec
cld
repnz
pusha
add
add
jge
dec
mov
fildll
out
mov
mov
push
dec
and
clc
xchg
pop
cmp
xorl
stc
lods
fadds
aaa
ljmp
dec
and
xor
and
push
mov
mov
push
mov
pop
xchg
push
xor
mov
out
imul
jne
mov
xor
and
repnz
push
sti
js
mov
enter
loope
xlat
xchg
sub
xor
inc
pop
xchg
pop
adc
inc
enter
imul
loope
cs
loop
xchg
xchg
repz
cmp
xchg
scas
hlt
mov
or
insb
adc
enter
jno
xchg
lcall
pusha
ret
xchg
js
shlb
mov
clc
scas
jg
mov
sbb
add
inc
xchg
jo
fstl
stc
cmpsl
pop
jp
xchg
imul
fscale
cmp
pop
ret
aam
mov
push
ss
imul
ss
imul
push
mov
idivl
mov
lret
mov
cmp
out
movsb
mov
xchg
jae
mov
lahf
inc
jne
jp
and
rcl
add
and
pop
push
test
xchg
cltd
xor
aad
cmp
dec
cmpl
dec
aas
sar
or
ret
xchg
enter
repz
jle
cmpsb
adc
mov
fmull
imul
pop
jg
cld
jne
add
repz
sbb
into
jno,pt
mov
jno
or
lcall
incb
pop
inc
inc
inc
fcmovnu
andb
addb
fstpl
jmp
cmp
ror
sbb
das
cmp
pop
iret
hlt
ret
pop
pop
pop
popa
or
add
fwait
stc
xchg
les
scas
lret
mov
test
in
jbe
repz
mov
mov
stc
dec
adc
in
rolb
in
add
fstp
dec
cmp
pop
sub
mov
lods
push
jg
rorl
fcomps
push
dec
cmpsb
mov
jns
xor
dec
cli
jl
xor
dec
mov
add
negb
cld
int
mov
mov
xchg
dec
in
iret
jne
daa
sarb
add
test
std
das
cs
arpl
xchg
es
mov
or
in
xchg
out
test
dec
pop
cmp
cmpsl
xor
sbb
or
mov
bound
mov
xlat
into
inc
fimull
lods
pop
fcoms
sarl
cmp
lcall
xchg
icebp
stc
mov
mul
jnp
xchg
into
sub
xchg
jge
pop
aam
shll
mov
nop
pop
xchg
pop
xchg
in
cmp
xorl
mov
inc
out
fsubrl
aaa
dec
xchg
aam
push
inc
add
sub
fcoml
mov
mov
je
xlat
notl
in
sar
pop
out
mov
inc
jbe,pt
out
fisubl
push
dec
dec
mulb
xor
ss
movsl
inc
daa
push
std
pop
mov
or
add
mov
xor
lahf
gs
leave
sbb
adc
aam
mov
or
gs
adc
jl
shl
stos
pop
mov
jecxz
inc
ja
test
scas
cmpsl
pop
xorb
sub
scas
lods
lret
dec
cmpsl
jo
mov
mov
jl
cli
dec
fsubr
ret
mov
adc
cmc
xchg
enter
jns
sub
pop
and
sub
pop
and
js
cmp
xchg
sub
sub
fimuls
push
pop
sub
xchg
lcall
test
xchg
mov
fcompl
push
cwtl
mov
push
inc
inc
or
iret
pop
fldenv
je
out
imul
add
adc
jecxz
dec
xchg
out
mov
inc
icebp
inc
mov
arpl
cmp
scas
pop
or
sub
cmp
clc
loop
outsl
pop
fisttpl
popa
lret
loope
scas
rcll
mov
mov
addr16
push
leave
adc
inc
aaa
ret
inc
and
popa
repnz
xchg
shll
addl
mov
add
enter
sub
mov
inc
scas
aaa
ljmp
cld
push
in
push
iret
pop
aas
lock
inc
lock
inc
ss
scas
sub
push
pop
jnp
nop
sbb
pop
mov
mov
sbb
popa
mul
cwtl
pushf
pushf
and
push
pop
dec
je
xchg
cmp
pop
push
fistl
stos
mov
jo
stos
push
xchg
psllq
push
mov
inc
dec
mov
sbbl
push
dec
loopne
psubq
xor
pushf
dec
and
cmpsl
sbb
jb
jge
jp
into
std
loopne
inc
loope
test
clc
sar
lret
test
sub
pop
daa
shr
mov
xchg
push
sbb
mov
lea
cmpsl
jb
mov
xchg
and
ds
xor
outsb
icebp
rclb
push
subb
mov
loop
cmp
adcb
jl
lock
repnz
sub
loop
repz
dec
pop
add
or
jae
inc
movsb
and
cwtl
lock
bound
sbb
lret
ret
xor
scas
jp
and
repnz
mov
lret
repz
cmpl
mov
inc
mov
push
push
out
jnp
jle
push
pusha
jb
shlb
xchg
sub
cmp
mov
orb
jmp
cmp
mov
loope
negb
mov
mov
and
int
dec
sub
shll
xadd
jo
popf
mov
xchg
and
popa
shlb
jecxz
sbb
jl
lahf
push
push
and
push
adc
push
jle
xchg
jle
mov
outsb
jnp
xor
pop
xchg
test
leave
int3
divb
jp
push
sbb
mov
mov
divb
xchg
pop
inc
mov
mov
add
push
lret
jge
sbb
repnz
cmp
mov
test
jg
mov
bound
inc
jb
frstor
mov
sub
iret
sti
pop
in
lods
mov
cmp
xchg
loop
jle
push
add
es
inc
lock
ret
loopne
xchg
out
out
sub
test
stos
add
or
add
sub
pushf
rorb
sbb
std
lods
jne
push
aas
xor
paddb
push
pop
cld
cltd
dec
and
dec
sub
insb
es
ss
sbb
into
pop
jp
inc
dec
or
gs
leave
popf
inc
or
inc
aaa
mov
stc
sub
sbb
sbb
je
push
mov
ss
bound
mov
in
or
dec
repnz
addl
xor
dec
cmp
inc
test
and
xor
roll
repnz
inc
test
or
add
inc
int3
xchg
idiv
mov
xchg
ret
ret
inc
pushf
mov
lahf
mov
adc
mov
inc
mov
dec
xlat
mov
pop
jmp
lods
xchg
pop
stos
mov
mov
loop
jae
pop
inc
xlat
push
jmp
inc
orb
pop
movsb
adc
ljmp
cmc
mov
adc
out
popa
mov
mov
xor
jmp
ja
adc
dec
test
lcall
xor
mov
imul
xor
jne
loope
mov
popf
and
fst
add
cmp
enter
xchg
mov
sub
lahf
popf
js
jp
pop
pop
insb
imul
push
test
fincstp
movsb
sub
scas
outsl
je
pop
movsl
fmulp
push
inc
jbe
lahf
mov
lea
sarl
in
fstpt
push
push
in
xlat
mov
xchg
push
add
cmp
cmp
icebp
cmpsl
adc
fwait
mov
sbb
fidivs
pop
test
outsb
mov
mov
loope
addr16
push
mov
sub
mov
pop
mov
mov
lret
ret
mov
testb
xlat
and
add
lods
gs
mov
fstl
lret
cmp
pushf
inc
add
aam
dec
and
mov
jnp
mov
sbb
arpl
xchg
mov
cmp
or
icebp
int3
and
mov
fcoms
sar
xchg
ret
sbb
lret
enter
cmpsl
sub
in
mov
out
bound
pop
stos
js
cli
and
lcall
mov
mov
or
mov
sbb
pop
insl
out
sub
jge
imul
enter
int3
add
stos
jae
adc
out
adc
shlb
mov
sbb
sub
out
cmp
inc
jno
adc
aas
mov
cmp
dec
inc
fnstcw
pop
sbb
xchg
pushf
pop
enter
outsl
sbb
push
or
outsl
out
mov
push
cld
ret
mov
xchg
adc
ja
push
push
mov
pusha
ss
dec
movsl
cmp
and
in
mov
negl
fldt
jnp
inc
lock
cltd
xchg
ret
mov
sbb
xchg
ret
add
popa
xlat
cmpsl
or
push
mov
mov
inc
pop
add
or
cld
test
ljmp
sub
inc
js
add
jmp
add
call
or
jae
cmpsl
iret
out
lret
shlb
xchg
and
sahf
rclb
xor
daa
sti
pushf
add
ds
out
push
pcmpgtd
in
in
stos
dec
mov
mov
cmp
rcrb
inc
dec
fldl
xor
mov
cwtl
test
jle
dec
std
outsl
xor
out
or
cmc
fisttps
dec
movsb
sub
inc
shrl
addr16
pusha
iret
xchg
enter
rorl
test
push
mov
jo
shll
aaa
and
lods
call
scas
repz
push
cs
jle
mov
fwait
push
dec
cmp
je
mov
mov
cltd
pop
pop
sbb
and
lods
sbb
sbb
xor
lret
xchg
sbb
mov
dec
inc
mov
dec
mov
mov
rorb
cmp
adc
jl
leave
test
out
push
mov
ja
mov
dec
cwtl
cmp
clc
jle
and
or
test
insb
les
push
je
adc
pop
popa
sbb
jo
js
jecxz
dec
call
and
lods
inc
jl
add
clc
xorl
push
loopew
aas
mov
or
inc
roll
add
inc
ret
jp
addl
lods
pop
lret
sub
inc
and
fisttpll
sbb
and
jae
stos
pop
xor
insl
jb
xchg
xchg
add
mov
xor
fadds
jnp
out
sahf
add
inc
jne
and
ret
mov
jae
fcmovbe
fbstp
jo
inc
das
orl
jl
das
sbb
dec
into
dec
ss
imul
mov
mov
sbb
fiadds
into
push
dec
mov
aaa
jg
and
adc
xchg
psubsb
lcall
in
mov
and
or
stos
stos
push
push
jo
xchg
in
mull
popf
scas
ja
scas
out
into
and
xor
xchg
in
cmp
jae
aas
dec
mov
fimull
and
js
xchg
and
in
cs
aaa
sbb
cmpsl
data16
jo
aaa
jp
push
mov
pop
jecxz
stos
stos
addr16
mov
jae
pop
aaa
arpl
push
dec
test
jns
faddl
or
mov
xor
mov
lret
cld
scas
jo
sub
jns
jne
int3
jl
mov
mov
adc
aad
in
mov
inc
jge
loop
lea
in
les
leave
xchg
xor
push
xchg
scas
or
sbb
aaa
cmp
ss
xor
int3
or
fwait
push
push
ficoms
or
repz
je
adc
fdivl
jge
jmp
stos
sbb
dec
fcoml
add
enter
adc
dec
xor
pop
fisubrl
popf
xchg
movsl
mov
rcrb
inc
jb
mov
and
jecxz
inc
out
sub
mov
mov
lret
adc
pop
or
popa
jne
or
xchg
jbe
jmp
test
jne
jmp
cs
inc
push
daa
arpl
or
jmp
std
movsl
pop
xchg
loope
lahf
xchg
mov
sbbl
sbb
and
dec
push
sbb
fadds
lock
dec
push
and
imulb
es
add
test
cwtl
hlt
mov
mov
pushf
push
mov
adc
sbb
and
pushf
aaa
mov
cmpsb
lods
pop
adc
cld
lods
sbb
dec
fidivrl
sub
sahf
mov
movsl
inc
add
pop
js
dec
push
lret
cmp
xchg
outsb
dec
adc
push
fldt
mov
fwait
mov
pusha
sub
sbb
pusha
inc
push
fistps
or
jle
outsb
pusha
shlb
jl
std
ja
fwait
inc
mov
lds
push
mov
push
insb
mov
mov
test
lods
and
lret
xchg
mov
adc
sub
and
add
mov
and
add
lcall
mov
xchg
mov
lret
test
stos
es
inc
dec
pop
adc
inc
js
mov
adc
sbb
xadd
push
or
mov
es
xchg
mov
fwait
pop
cli
int
mov
sbb
lret
sub
les
and
sbb
or
jl
aad
push
insl
dec
stos
cmp
pop
adc
imul
addr16
outsb
lods
cmp
mov
mov
inc
call
mov
stos
arpl
xlat
cli
xchg
outsl
mov
and
lahf
sbb
xchg
push
aaa
xor
push
jle
inc
out
jno
pop
dec
xchg
out
fsts
js
mov
mov
movsb
push
lea
sbb
cmpsb
jle
fnstenv
xor
cmp
mov
pop
pop
incb
mov
pop
add
imul
mov
loopne
lret
sub
fwait
iret
push
imul
dec
xchg
mov
ds
mov
and
cld
iret
sbb
std
jecxz
lahf
lds
sbb
mov
jb
cwtl
dec
lret
fwait
in
dec
lcall
fisttpll
lock
ja
dec
xchg
and
sub
and
sbb
popa
adc
test
mov
fucomi
js
imul
jmp
push
aam
cmp
dec
fistpl
jg
cs
pop
mov
aad
ret
mov
inc
xor
out
mov
sub
xor
or
sahf
cmpsb
xor
repnz
aad
xchg
mov
push
lahf
jae
and
roll
shrb
inc
daa
out
mov
roll
out
adc
outsl
mov
mov
outsb
loopne
outsl
dec
sbb
jnp
push
xchg
sbb
adc
mov
jg
cmpsl
add
arpl
and
in
xorl
pusha
nop
jmp
out
and
femms
insl
jne
and
mov
nop
loope
mov
xchg
dec
sbb
movsl
fdivrl
dec
lods
mov
lret
jne
or
lock
or
ret
out
or
fisubrl
arpl
aad
outsb
mov
inc
mov
lock
pop
mov
push
sbb
stos
lds
insl
adc
jp
int3
mov
enter
inc
je
orb
inc
out
cmp
aas
imul
fsubrp
in
mov
shr
push
rcll
dec
sub
pop
mov
cmc
stc
lods
mov
pop
out
gs
clc
jae
pop
rcrl
test
int3
fwait
sti
sub
in
cmc
pop
int3
inc
sbb
jae
fisttpll
pop
xchg
std
call
mov
inc
pusha
adc
jmp
call
shll
jmp
daa
adc
mov
pop
mov
pusha
mov
dec
cmp
push
lret
or
lcall
loop
push
or
jmp
sbb
mov
inc
push
cmpsb
loope
fnstenv
mov
repz
mov
movb
add
adc
dec
jns
and
out
and
into
mov
test
mov
ljmp
cs
mov
repnz
jb
imul
mov
or
dec
je
jns
sti
rorl
mov
dec
jbe
sub
jae
pop
es
notl
scas
rcr
mov
mov
adc
insb
sub
push
ljmp
out
sahf
aad
lret
cld
sti
push
std
push
movsb
push
divb
adc
inc
cmc
add
clc
cs
sub
inc
and
jns
inc
push
and
xor
pushf
adc
xchg
insl
sub
push
or
fists
nop
push
adc
xchg
into
out
mov
cld
mov
cwtl
fstpl
scas
adc
add
jno
insl
or
xor
xor
inc
and
inc
push
scas
inc
pop
gs
outsb
scas
mov
mov
xor
jb
shrl
gs
xchg
stos
paddb
in
pop
mov
fnsave
dec
arpl
es
sbb
outsb
add
and
pop
fidivl
int
xor
scas
fildl
xor
push
mov
push
or
sbb
mov
mov
outsl
sbb
or
ja
in
testb
xchg
add
mov
outsb
dec
xchg
daa
xchg
cld
cwtl
xchg
jl
jae
sub
mov
push
andl
jecxz
pop
in
inc
adcl
arpl
adc
xlat
and
push
inc
out
and
pop
das
jb
xlat
cmp
sarb
cmc
cmp
sub
jae
sub
pop
adc
mov
xor
movsb
inc
sbb
push
fdivr
mov
aas
repnz
sbb
lea
imul
repnz
or
dec
icebp
rorl
push
xchg
push
sbbb
out
mov
mov
mov
ljmp
push
cvtps2pd
pop
outsb
bound
and
dec
sbbl
imull
in
fstps
and
out
cmp
lcall
loop
setne
adc
imul
mov
or
outsb
sarb
mov
lret
popf
push
sbb
push
inc
movsl
shl
inc
mov
sbb
mov
dec
xor
mov
addr16
lds
adc
pusha
mov
and
mov
stos
sub
mov
imul
bound
xchg
cmp
add
data16
sub
clc
jo
dec
clc
sbb
adc
rcl
pop
jl
push
push
rorl
lds
sub
cld
in
mov
push
movsb
xchg
dec
test
mov
jne
cmp
add
xchg
mov
mov
hlt
fadd
inc
dec
out
dec
stos
jmp
ret
jns
jbe
into
test
push
sti
mov
or
cmpsb
outsb
xchg
ja
aam
fnsave
mov
aad
jg
dec
and
enter
pop
test
and
fsubrl
call
mov
fdivl
dec
inc
adc
cmp
cmc
je
push
sub
fs
adc
inc
pop
xchg
out
loope
pop
mov
pop
xchg
fiaddl
orl
ficompl
mov
fcomip
push
aas
jl
leave
xor
mov
inc
test
jno
scas
jecxz
movsl
or
hlt
rcrb
aaa
xor
arpl
sbb
cmp
lcall
pop
pusha
test
jne
push
cmpb
scas
cmp
mov
and
shrl
sub
pop
into
imul
or
sbb
stos
adc
inc
dec
lahf
lret
xchg
dec
dec
dec
shlb
ror
aas
xchg
push
cwtl
push
dec
fs
fstps
jle
add
dec
push
mov
cs
fldenv
and
push
adc
test
inc
popf
insl
cmp
push
sahf
les
imul
xchg
add
dec
mov
jb
fs
jo
fs
bound
pop
jecxz
js
push
push
lds
call
testb
gs
xchg
dec
popf
adc
out
scas
test
divb
xor
and
pushf
int3
push
stos
sar
outsb
xchg
notb
addb
inc
or
sbb
mov
adc
repnz
into
xchg
mov
and
push
jns
leave
aam
iret
mov
shl
xchg
outsl
je
out
push
sti
sbb
daa
loop
js
xchg
fistpll
dec
sbbb
cmp
les
icebp
std
addl
mov
outsb
incb
lds
repnz
jl
cmpsb
fcomp
cli
scas
fdivrs
xor
insb
pop
fisubrl
dec
lss
mov
aad
or
or
fidivrl
inc
push
push
fidivs
les
sub
out
ss
test
mov
sub
mov
pop
imul
adc
sarb
iret
imul
inc
cmp
sub
lods
adc
cmp
loop
mov
enter
stc
scas
pop
lahf
jne
js
inc
rcll
jecxz
jbe
ds
jl
or
push
ret
fidivrs
je
js
or
pop
dec
mov
cmc
push
fbstp
fiaddl
and
rcll
push
out
dec
lcall
mov
pushf
test
fwait
mov
int
ret
scas
add
push
push
clc
mov
jg
clc
adc
inc
insb
fsts
pop
addr16
sbb
ficomps
fs
xlat
push
or
sub
mov
int3
mov
inc
sub
add
mov
mov
es
pop
in
sbb
enter
call
aam
xchg
fistps
mov
push
jl
in
jmp
xchg
mov
movsb
sub
or
inc
pushf
sub
nop
iret
adc
pop
and
dec
lock
loop
stc
xor
sub
mov
mov
and
mov
stos
dec
scas
mov
arpl
cs
fcmovnu
lods
aad
cmc
fldcw
mov
dec
daa
mov
movsl
aam
lcall
mov
aam
sahf
lahf
neg
adc
sahf
adc
daa
push
sub
xchg
jmp
out
jns
ljmp
jbe
push
mov
aaa
xchg
cmpsb
into
es
adc
cmc
fdivs
in
scas
movsb
call
aas
test
insb
pop
add
mov
stos
push
sub
pop
aad
dec
cs
or
or
mov
xchg
shr
fisttpll
sbb
xor
xor
inc
mov
adc
cmovle
out
mov
pop
xor
hlt
out
data16
popa
dec
pop
add
lock
sti
mov
aaa
sbb
mov
mov
sub
pop
xor
aad
mov
subb
pusha
push
in
push
xchg
js
add
inc
hlt
hlt
jne
xchg
push
aam
stos
into
jae
pop
xor
movd
mov
hlt
andl
lods
mov
aad
out
cmpsl
sub
in
adc
sbbb
mov
int
and
imul
jmp
xor
idivl
in
jge
call
dec
cs
fldt
mov
jae
sbb
pusha
pushf
push
loop
mov
iret
cmp
imul
xor
dec
pop
xchg
adc
aad
push
jl
and
add
loope
adcl
mov
das
fistps
adc
sbb
xchg
cmp
call
pop
dec
and
cltd
pop
adc
cmpsb
rol
xchg
and
ret
pop
hlt
loopne
xchg
xchg
insl
call
jae
push
ret
sub
repz
xor
cmp
mov
push
cmp
push
mov
mov
repz
lods
push
push
and
adc
movsl
loope
dec
inc
adc
bound
mov
pushf
repz
insl
and
inc
int3
cwtl
in
jmp
pushf
pop
scas
int3
pushf
mov
rolb
cwtl
cld
xchg
xchg
fidivrs
js
push
adc
and
scas
push
cmp
popf
scas
add
ficoml
daa
or
pop
lcall
xchg
xor
mov
out
jne
or
stc
popf
xor
inc
out
dec
adc
stc
es
or
repnz
jo
out
and
clc
mov
jg
jns
or
fdivs
push
sahf
ss
lcall
sbb
xor
sbb
and
fldl
mov
pop
js
into
lcall
out
sbb
sub
hlt
pusha
xchg
jnp
push
fnstsw
xorl
stos
sub
xchg
cmp
bound
xor
bound
test
lcall
loopne
mov
jle
cmpb
adc
test
add
stos
test
nop
in
in
stc
cli
shll
mov
pop
jp
and
mov
mov
xor
mov
out
mov
jmp
push
mov
push
mov
mov
xor
add
or
xchg
add
mov
sub
stc
jno
xchg
fcmovbe
sub
add
xchg
rcrl
jbe
dec
or
jmp
clc
xchg
jl
call
cmc
sub
push
shl
push
nop
push
mov
decl
lcall
mov
cmpl
fildl
inc
jb
ret
icebp
inc
xchg
cwtl
push
xor
inc
cmp
dec
xor
stos
sahf
cmp
jmp
scas
lcall
adc
cs
mov
dec
jnp
add
pop
xchg
and
xor
xchg
jmp
stc
cmpsl
sti
dec
sub
adc
adc
cs
mov
cmp
inc
dec
fcmovbe
xor
adc
fistpl
fcomps
icebp
gs
or
cmp
push
adc
aas
mov
leave
movsl
xchg
scas
in
mov
cmp
outsb
sub
jecxz
xchg
add
es
jns
inc
and
bound
xchg
cmp
pop
mov
cmpsl
inc
in
adc
roll
cmp
in
xchg
andb
xchg
cs
or
mov
int
jg
dec
push
mov
and
pop
leave
jns
mov
stos
pop
add
xor
loopne
sti
pop
ja
jp
pop
mov
pop
mov
ja
pop
outsb
sbb
imul
cmp
jge
jp
out
loop
mov
adc
jne
push
jmp
repnz
ss
cmpsb
sbb
popa
stc
in
clc
inc
sti
and
lret
mov
nop
sub
cmp
add
stos
cmp
stos
lret
push
inc
fs
pushf
sub
sbb
int
fists
mov
sbb
loope
inc
out
sahf
lea
popf
in
dec
dec
enter
js
push
mov
aaa
sbb
cwtl
xchg
adc
or
dec
push
orl
inc
cmp
mov
xchg
into
stc
inc
dec
aam
pop
push
xchg
aad
xchg
jb
and
xor
scas
and
mov
fisubl
loopne
daa
mov
jmp
fidivl
icebp
pop
stos
or
xchg
jmp
loope
dec
mov
rcrb
sbb
movsl
lcall
loope
add
mov
mov
cmp
mov
scas
ror
and
cmp
int3
leave
sbb
shll
pushf
ret
imul
jl
nop
bound
cld
cld
lods
mov
push
lcall
repnz
bound
jle
call
cmc
je
mov
and
cmpsb
xor
dec
out
scas
and
jmp
xchg
outsl
xor
pop
sub
pop
push
xor
aam
lds
sbb
jl
adc
dec
dec
movb
enter
movsl
xor
loopne
leave
xchg
aaa
mov
cmp
inc
pop
lock
sbb
shll
test
test
push
push
mov
shll
testl
fistl
dec
cmp
scas
outsb
push
insl
add
add
gs
mov
sahf
xchg
dec
mov
fcomi
adcl
jmp
cmpsb
aam
lods
sub
test
sbb
sbb
dec
adc
xor
std
push
test
orl
mov
inc
xchg
pop
dec
mov
std
push
shlb
mov
cmp
ja
data16
shlb
fdivrs
push
js
xor
inc
mov
jno
rcrb
orb
fidivs
jnp
adc
bound
add
imul
ja
jns
add
and
dec
mov
fmul
out
inc
enter
fsubrp
sbb
or
fs
jae
and
xor
out
cmp
or
mov
lods
in
in
xchg
dec
dec
adc
out
push
mov
daa
imul
test
pop
stc
jl
and
jno
jle
pusha
ja
xchg
add
stos
push
jae
and
fidivrs
pop
fimull
enter
cli
jbe
mov
fld
lret
rolb
sahf
arpl
jb
pop
aas
addb
aam
mov
jp
movsb
adc
mov
ss
and
fnsave
sub
sub
mov
sbb
andb
pop
out
ljmp
test
mov
xorl
jb
push
aaa
mov
aas
ret
sbb
notl
sub
fwait
inc
jo
ljmp
or
jle
imul
paddsw
mov
dec
adc
xor
fdivr
jbe
stc
or
or
scas
cmpsl
hlt
fidivrs
es
pusha
inc
outsl
jae
es
add
cld
cmp
andl
sbb
sahf
stos
inc
notb
out
icebp
aaa
insb
loopne
mov
push
loope
sbb
testl
fwait
push
jo
ret
clc
jno
jae
and
push
add
sahf
mov
add
test
pop
sbb
data16
mov
pop
popf
int
enter
and
ficoml
push
enter
jae
imul
adc
rclb
push
cmp
lcall
cmp
jb
push
ret
pop
inc
daa
mov
jns
sub
cmpsb
icebp
mov
jns
lea
fistps
xor
lock
pusha
cltd
or
fdiv
insl
dec
je
pop
jmp
imul
outsl
inc
sbb
mov
push
mov
inc
sub
js
xchg
xor
and
rcr
stos
inc
pop
inc
sub
fdivrp
mov
movsb
or
lds
fistpll
add
mov
gs
inc
inc
sub
pop
aaa
es
inc
jle
ss
in
push
dec
mov
mov
iret
iret
xchg
nop
sub
pop
dec
imul
js
and
jl
sub
pushf
ja
xor
repnz
js
jae
dec
clc
push
shrl
movsb
lds
sti
popf
sbb
int3
aad
inc
mov
mov
xchg
fsubrp
fs
sub
stos
fisubrl
jle
iret
xor
testb
pop
into
mov
mov
mov
test
push
pop
xchg
dec
jp
lret
icebp
mov
push
icebp
jne
push
out
popa
and
andl
test
dec
adc
pop
ja
cltd
dec
pop
jnp
xchg
or
mov
jecxz
into
fisubl
push
or
imul
aam
iret
or
jne
add
cli
pop
leave
dec
ret
push
cltd
dec
pop
jbe
pop
mov
fdivl
js
enter
aam
lahf
pushf
out
add
mov
outsl
jne
inc
sub
cmpsb
pop
daa
pop
pop
pop
int3
mov
lock
xor
jae
mov
sub
jecxz
popa
cs
cs
iret
repz
dec
ret
mov
jo
jae
mov
jns
push
shll
xlat
insb
xchg
or
jmp
adc
stos
push
daa
popa
into
data16
cmpsl
inc
ret
into
or
push
mov
stos
imul
fxch
inc
outsb
mov
in
jne
hlt
push
jecxz
push
cmpb
dec
lods
jmp
insl
xor
outsl
dec
pusha
sahf
push
loop
scas
xchg
dec
scas
adc
ficomps
scas
in
push
mov
adc
sahf
rcrb
repz
push
jns
fadds
cmp
inc
daa
cmovge
nop
pop
xor
iret
lea
jnp
xor
leave
out
or
ja
jge
sub
sub
cmp
cmp
mov
dec
ret
mov
or
ss
test
leave
pop
test
mov
in
mov
ds
loop
mov
lock
lret
and
push
out
jp
jl
shl
push
pop
jge
pop
aaa
enter
push
jp
xchg
aas
pop
sub
sbb
stos
int3
jne
mov
and
or
shrl
sub
scas
mov
cs
ds
cmp
mov
add
adc
push
push
and
leave
inc
or
js
fildll
sub
adc
xchg
loope
loope
fists
rclb
xlat
dec
test
dec
mov
cmc
dec
sbb
pop
inc
pushf
popa
mov
pushf
leave
push
mov
inc
jbe
or
paddsb
nop
push
aad
mov
inc
popa
mov
sub
and
mov
cmp
dec
cmp
xchg
or
repnz
icebp
xor
jmp
xchg
enter
dec
xchg
adc
in
scas
shll
mov
test
adc
outsl
movsl
mov
pusha
pop
adc
pop
cmp
inc
mov
pop
dec
xchg
pop
gs
add
xlat
test
sub
sbb
pop
test
push
jp
cmp
fdivp
cmp
sub
jne
lea
xor
jo
mov
mov
sbb
pop
fucomip
adc
ds
xor
call
hlt
scas
test
mov
jne
jno
pop
xor
stos
leave
fwait
daa
xchg
inc
das
sahf
add
dec
loope
push
cmp
fisttps
mov
fbld
bound
and
call
mov
je
int
sbb
add
mov
jmp
or
mov
and
jo
clc
outsl
or
push
jl
adc
movsl
fwait
or
icebp
dec
jle
cmp
aad
cmp
xor
jecxz
test
fstpt
stos
or
cmp
insl
push
stos
jo
xchg
inc
sbbl
mov
jge
add
and
push
outsl
icebp
xor
stos
cld
loope
inc
adc
test
cmc
xchg
insb
mov
fdivr
push
xchg
lods
lcall
movsb
cmp
xchg
aad
sub
or
mov
sub
pop
pop
dec
pop
movsb
lock
adc
ss
xchg
enter
jb
mov
and
jecxz
adc
adc
cmp
or
jo
xchg
push
xchg
sti
jle
pop
rcr
pop
mov
scas
shl
int3
incb
mov
cld
lcall
add
sub
loop
or
fnstenv
inc
loopne
scas
out
push
lret
imul
dec
xchg
test
repz
stos
dec
pop
fimuls
fidivrl
inc
test
jg
inc
xor
sub
movsb
int3
andl
and
sahf
jle
mov
mov
insb
movsb
lahf
in
jns
out
lods
inc
jecxz
loope
subb
mov
rclb
pop
pop
inc
jmp
mov
push
lds
mov
fisubrs
lods
mov
stos
lea
mov
lds
les
add
add
and
jo
or
test
mov
inc
nop
inc
mov
gs
pop
adc
pop
push
xor
cmp
add
pop
enter
push
fcmovb
sbb
daa
add
sti
pop
int
adc
inc
dec
test
fwait
aas
mov
test
sar
lock
in
pop
sub
pushf
aaa
dec
mov
dec
xor
jns
mov
je
cmp
adc
mov
outsl
icebp
pushl
push
addr16
sti
outsl
lods
arpl
xchg
ret
adc
and
std
pop
lock
pop
rcrl
lret
push
clc
in
test
adc
std
ds
push
mov
mov
mov
jne
idivl
mov
and
push
jbe
mov
dec
cmp
inc
dec
out
push
jecxz
pop
das
or
jle
pop
inc
xor
mov
fsubs
out
std
aaa
int3
je
das
popa
test
bound
pop
movsl
hlt
insb
js
pop
clc
clc
and
pop
adcl
pop
or
jge
shll
in
imul
dec
xchg
mov
je
movsb
jmp
lcall
inc
mov
jle
inc
push
iret
push
jmp
lods
shrl
into
mov
mov
adc
sbb
adc
bound
mov
add
xlat
pop
xor
leave
negl
xor
out
aaa
movsb
mov
lahf
lods
push
or
jecxz
or
cli
outsl
mov
cltd
test
push
dec
fisttpl
enter
int
add
out
adc
jae
sub
cli
mov
scas
dec
add
inc
dec
cmc
cld
push
push
fdivs
xor
jg
xor
ja
inc
dec
or
or
xor
dec
mov
dec
outsb
xchg
jl
daa
int3
cmp
sbb
inc
cmp
and
fcoml
mov
xor
jno
sbbb
dec
sahf
inc
js
scas
and
adc
sub
adc
cs
test
gs
cmpb
mov
jecxz
faddl
xchg
and
cmp
ja
jl
cmc
push
mov
mov
pop
insl
sbb
clc
out
aad
pop
ljmp
push
out
fcmovnb
aam
jne
push
cmp
sub
mov
fcmovnb
xor
arpl
out
sti
dec
cmp
add
lods
mov
xchg
fists
push
in
test
mov
cwtl
mov
in
pmaxub
dec
sbb
pop
pop
jecxz
roll
hlt
mov
pop
lods
lret
aam
xor
xchg
arpl
sbb
pop
in
and
sti
outsb
jbe
lahf
inc
sti
xchg
mov
pop
mov
imul
inc
mov
clc
lret
clc
inc
or
mov
pushf
popa
mov
mov
mov
push
dec
cmpsl
jnp
std
jge
loope
pop
xchg
in
arpl
xlat
inc
mov
and
xor
sti
cs
or
outsb
sahf
test
imul
hlt
mov
faddp
add
inc
in
xor
sbbb
cli
push
mov
rorl
in
jle
sub
outsb
sbb
je
jno
mov
and
jecxz
fdivr
push
dec
jge
mov
cmp
outsb
pop
sub
ret
or
pop
mov
loop
jg
cmp
or
jecxz
pop
xchg
out
mov
xor
loop
arpl
int3
outsb
inc
cmp
inc
xlat
sub
mov
pop
or
xchg
sbb
pop
push
jge
add
adc
cmc
ja
scas
int
pop
dec
jl
daa
sub
pusha
outsl
jecxz
test
ror
push
in
sahf
sub
call
pop
mov
mov
lods
xchg
lret
sbb
pushf
iret
push
rorl
push
stc
inc
mov
add
aas
jge
pop
and
mov
xchg
cli
dec
inc
inc
mov
sbb
mov
out
daa
mov
adc
icebp
adc
jge
sbb
inc
push
or
add
and
jge
subb
scas
testl
ret
in
shr
inc
xlat
aam
mov
stc
das
adc
and
outsl
xchg
and
cli
js
or
adc
dec
push
xchg
lods
pop
lea
popa
jle
movsl
popf
mov
mov
js
loopne
sbb
out
js
jp
xchg
mov
cwtl
xor
test
jae
ret
cmove
sub
jg
mov
sahf
adc
inc
xchg
adc
sub
jl
adcb
pop
dec
repz
sbb
pop
jo
sarb
je
or
daa
inc
push
arpl
and
sbb
cld
ret
inc
aad
fimull
les
or
lcall
pop
negb
jg
addr16
dec
mov
fcmovnbe
out
push
mov
and
lret
cmc
loopne
inc
sbb
out
jmp
xor
jbe
sbb
outsl
fistps
imulb
push
jecxz
pop
aas
repnz
into
out
xchg
xchg
mov
and
and
in
sub
fistl
mov
xchg
pop
and
mov
jge
sbb
sbb
xchg
xchg
cmp
aad
push
cltd
or
sarl
adc
xchg
sbb
and
jbe
adcb
mov
add
subb
jno
fimull
mov
das
loop
sbb
je
paddw
pusha
sbb
xchg
sbb
mov
xchg
mov
sbb
and
jo
out
mull
and
inc
imul
inc
popf
sub
lcall
aas
shrb
das
cwtl
inc
add
lahf
xchg
cli
and
mov
jecxz
jae
ret
test
inc
adc
out
xorl
ret
insb
mov
sub
dec
sbb
shll
dec
jecxz
icebp
push
add
add
push
loop
rorl
inc
lods
ss
shll
ljmp
int3
and
in
pushf
enter
mov
push
sarl
jge
mov
pop
subl
rolb
xchg
stos
pop
pop
testb
mov
add
inc
add
shrb
mov
xchg
push
push
mov
sub
adc
pushf
push
cmc
sub
test
in
inc
fmuls
xchg
xor
rcrl
call
sub
lds
add
lods
test
dec
insl
cmc
jno
mov
and
cmc
pop
adc
cld
nop
push
cltd
sahf
adc
and
mov
xchg
push
jl
insb
sbb
xchg
loope
ficoml
dec
ret
bound
cld
jge
fsts
or
push
or
aam
mov
sahf
pop
icebp
fwait
pop
or
in
sub
fcmovbe
inc
hlt
pop
mov
and
bnd
sub
push
sbbb
push
or
add
pop
fwait
mov
xorl
jns
push
mull
out
mov
daa
adc
cmpsl
and
mov
xor
in
movsb
mov
aad
test
pop
inc
jge
lret
mov
pop
push
mov
scas
mov
das
aad
xchg
ja
pop
and
sub
icebp
or
jnp
or
fstpl
pavgw
add
dec
mov
fmull
xorb
mov
or
ret
mov
or
add
out
ret
jbe
dec
sub
cmpsl
je
call
push
pop
clc
sub
xor
pop
dec
mov
dec
sahf
mov
mov
sub
mov
inc
sbb
sub
testb
rorb
shrl
jl,pt
and
or
shlb
jns
inc
sbb
push
cmp
cmp
dec
fldenv
mov
outsl
inc
imul
mov
or
dec
cmpsb
ss
xchg
int3
into
test
lahf
pusha
push
or
incl
lret
jle
inc
mov
push
adc
dec
add
xor
add
inc
mov
mov
and
xlat
dec
mov
sbb
daa
popf
sbbl
popf
xor
out
xor
adc
shrl
push
adc
xchg
decl
cs
mov
push
outsb
aas
pop
call
movsb
cmp
fstl
cmp
and
mov
icebp
mov
cmpb
jnp
leave
cmp
mov
imul
sbb
cmpsb
ficomps
shl
add
inc
mov
repz
pop
shlb
cwtl
test
xchg
fcmovnu
insb
sub
test
test
daa
xchg
adc
out
fs
pop
mov
jmp
movb
pop
cmp
addr16
in
push
cmpsl
rcl
inc
imul
pop
sub
pop
jg
cs
pop
mov
mov
mov
in
push
xor
test
sbbl
inc
movsl
xchg
imul
inc
or
call
cmp
lret
mov
sahf
or
in
in
or
pop
xor
xchg
sub
test
arpl
pop
mov
cmp
in
lods
ja
sahf
mov
cltd
inc
mov
adc
subl
arpl
xchg
mov
and
or
push
std
mul
lahf
push
sahf
je
jge
nop
mov
mov
push
jle
mov
jo
js
jg
adc
int3
sub
out
leave
outsb
lods
in
shll
mov
pop
mov
xor
mov
cwtl
cmp
add
sbb
int
sub
mov
xor
pop
rorl
test
mov
jnp
inc
xchg
int
subb
test
inc
push
in
sub
pop
sbb
add
add
pop
sbb
xchg
call
fistpll
fistpl
aaa
std
pop
jns
mov
adc
test
unpcklps
popa
inc
lds
ficomps
dec
pop
shl
dec
jno
bound
cmp
idivb
loopne
fucom
sub
pushf
add
cld
les
arpl
in
gs
ljmp
cs
fwait
mov
idivb
push
mov
mov
and
push
sbbl
pop
fwait
sbb
inc
mov
mov
cltd
mov
incl
or
emms
cmp
stos
int3
mov
es
inc
jb
sbb
or
sbb
pop
aaa
cmp
inc
mov
mov
xchg
and
push
stos
cmpsb
mov
inc
jnp
pop
enter
jmp
and
sbb
aad
sub
cmc
dec
lahf
xor
jge
sbb
jae
adc
xchg
stc
sahf
loopne
cmc
cmc
and
cmp
roll
and
jbe
daa
cmc
mov
jmp
out
sbb
push
data16
das
jmp
daa
rcrl
es
iret
roll
xor
xchg
out
les
sbb
xor
inc
xor
cmp
insl
mov
adc
lcall
inc
je
inc
loop
inc
hlt
arpl
lds
jmp
add
push
iret
shll
mov
sbb
sbb
adc
mov
and
lea
sbb
cmp
cld
fisttpl
aas
xor
and
out
mov
insl
jnp
xlat
mov
divb
sbb
ss
mov
jl
icebp
and
int
ss
adc
lcall
mov
pop
leave
push
add
pop
outsl
pop
pop
xlat
sbb
gs
jnp
dec
sbb
mov
shll
sbb
mov
decl
fcompl
sub
push
dec
shl
gs
inc
gs
outsb
loopne
adc
call
add
xchg
push
aam
fiadds
shrl
adc
addb
xchg
xor
add
push
ljmp
les
dec
pop
les
arpl
push
divb
dec
add
out
inc
and
daa
shl
pop
shlb
lods
out
mov
mov
xchg
push
movsb
mov
push
adc
mov
add
add
dec
xchg
arpl
sbb
jns
inc
dec
jo
in
jmp
fdivrl
jns
lahf
dec
addb
jnp
mov
int
pushl
pop
mov
es
das
mov
pop
sbb
add
fbld
movsl
mov
mov
fidivs
mov
xor
sub
in
cwtl
nop
iret
in
insl
fistpl
lret
push
lahf
pusha
mov
jae
lret
pop
add
in
adc
call
mov
pusha
inc
jbe
addl
int3
mov
inc
adc
mov
mov
xor
test
sub
xor
xor
adc
xchg
fcmovbe
or
push
adc
stos
mov
jne
mov
xchg
movsb
or
mov
test
jnp
imul
loopne
pop
leave
loop
lods
jns
xorb
dec
ret
xchg
inc
and
jne
pop
mov
add
dec
push
mov
icebp
fdivrl
mov
sbb
adc
push
and
jge
fstl
aam
mov
jno
in
data16
fdivl
shrl
lcall
in
dec
lds
mov
int3
ret
out
cltd
mov
push
lret
sbb
mov
add
jle
adc
push
ljmp
mov
inc
movsl
cli
insl
sbb
jge
xchg
and
sbb
testb
pop
test
add
ret
roll
jecxz
negb
mov
daa
add
out
in
xchg
xchg
dec
inc
dec
mov
cmp
xor
test
push
add
hlt
sbb
adc
sub
push
les
and
test
jo
cld
jo
inc
add
jmp
and
xlat
loope
mov
add
push
cmp
mov
xor
lods
mov
in
iret
lret
or
cltd
mov
mov
mov
adc
lcall
popf
add
jl
in
inc
mov
sub
fldenv
lcall
adc
dec
inc
fldenv
mov
xchg
mov
mov
mov
cli
xor
and
loopne
movsb
scas
jae
fbld
leave
mov
jo
mov
jbe
push
jbe
ja
js
push
and
mov
out
or
loop
movsb
dec
lret
add
cmp
pushf
in
or
cltd
xlat
in
dec
enter
mov
xlat
sahf
scas
lret
lret
push
ds
add
or
inc
int
pop
outsl
loope
inc
xor
fwait
movsb
mov
mov
cli
mov
arpl
cmpsl
dec
and
adc
mov
cmp
sbb
pop
xlat
mov
push
cmc
mov
xor
rcrb
cmp
sbb
fstpl
cmp
xor
mul
fnstsw
fsts
enter
outsl
ss
ljmp
shlb
clc
push
loope
sbb
push
inc
push
ret
call
sub
fimull
hlt
mov
subb
pop
inc
pop
sub
call
mov
in
sahf
sub
sub
jl
fnsave
jae
jecxz
mov
call
push
sub
fcoms
cltd
mov
lock
in
rclb
mov
lcall
gs
mov
iret
fiaddl
repnz
sub
out
dec
aas
xlat
and
stos
aam
pusha
mov
xor
push
in
sbb
mov
mov
lock
mov
jecxz
lret
orl
jbe
or
pop
fidivl
movl
sub
in
mov
jle
jge
dec
mulb
scas
sahf
test
decb
lock
cmp
in
stos
cwtl
notb
mov
out
pop
pop
inc
aas
jecxz
add
add
arpl
jp
pop
ja
add
ret
or
inc
lds
lock
cmp
jle
sbb
mov
fstpt
adc
xchg
mov
jae
leave
iret
dec
jecxz
inc
test
pushf
in
jp
dec
xchg
adc
add
pop
ret
jp
insb
mov
mov
mov
push
jp
shlb
fucomip
jne
decb
or
fsubl
jle
dec
jo
add
movsb
cld
outsb
scas
fcmovne
xlat
fildl
sbb
mov
hlt
imulb
cmp
pop
int
in
push
adc
ss
xchg
ret
mov
popa
mov
stc
inc
das
test
xor
xor
mov
jne
in
daa
shrl
and
stos
push
jns
divb
inc
sbb
push
stos
jl
push
lock
pop
aas
add
push
test
lret
sbb
clc
aam
ja
test
and
adc
idivb
out
dec
aaa
push
loop,pn
jno
mov
test
sub
jge
jge
adcb
fst
jb
ret
dec
aad
dec
loop
push
pop
mov
aad
pusha
loop
pop
fsubs
icebp
pop
bound
mov
or
pop
insl
pop
xor
cwtl
les
add
push
dec
popf
je
inc
mov
mov
cmp
xchg
inc
cmp
test
or
xor
pushf
je
xor
jmp
inc
std
inc
push
xor
outsb
imul
fwait
mov
push
in
mov
or
hlt
js
in
adc
pop
stc
gs
xchg
aaa
add
inc
lret
jge
das
jae
sahf
scas
jno
outsl
xor
sbb
ss
clc
mov
mov
push
mov
popf
sahf
ss
and
cmp
lods
adc
mov
dec
popa
ficoml
hlt
xorb
adc
xchg
or
jnp
add
adc
es
mov
add
mov
stos
xchg
mov
into
add
jo
or
push
cli
int
stc
add
inc
flds
sub
repnz
insl
push
push
imul
cli
leave
dec
sbb
bswap
loope
aad
push
lcall
or
gs
aad
iret
pop
test
jno
dec
mov
push
adc
scas
push
push
sub
lock
popf
ja
add
push
xchg
scas
shr
inc
subb
jns
or
out
rorl
or
mov
fsts
cmp
aas
idivl
push
sub
xor
sbb
cmp
fdivrs
jmp
fstl
dec
and
pop
and
into
or
lcall
sub
sbb
mov
fs
out
mov
shll
add
adc
test
mov
adc
sub
cmp
lcall
pop
aad
add
xchg
push
ret
fldt
mov
xor
jne
movsl
xor
xchg
inc
rcll
test
sbb
movsl
cmp
jbe
jl
in
lcall
ret
das
jmp
add
int3
pop
ja
mov
cmc
in
cltd
inc
inc
ret
dec
xor
or
shl
in
xor
xchg
sub
sbb
push
mov
repz
inc
xchg
jp
hlt
add
push
lock
fscale
or
and
test
sub
dec
dec
test
pop
in
mov
shrl
cli
inc
jp
adc
test
cmp
sub
ds
cmc
pop
adc
imul
loopne
lea
das
cld
outsl
std
add
leave
sub
push
fisttpl
repnz
jg
outsb
popa
cli
push
mov
xchg
xchg
and
rolb
sbb
sub
std
push
or
add
add
fstl
ret
mov
lock
or
jp
movsb
mov
aas
dec
fiadds
out
subb
pop
xor
inc
push
lods
adc
sahf
cmp
pop
mov
pop
push
sub
mov
push
adc
ljmp
insb
xlat
mov
cmp
and
mov
cmpsb
ror
inc
pop
add
pop
push
sahf
xor
lea
loop
bound
lahf
cwtl
dec
xchg
int3
push
and
les
jbe
xlat
inc
out
js
inc
insb
stos
and
ret
subb
and
in
out
mov
rorb
xor
lret
call
les
and
icebp
or
jb
dec
push
mov
fisttps
cmp
pushf
xorl
mov
jbe
dec
lahf
inc
das
and
mov
notl
repnz
jne
xor
cmp
loope
mov
mov
int
ljmp
mov
mov
push
insl
add
popa
sub
xchg
push
fistps
xor
push
dec
xor
xor
or
fidivl
sarl
add
hlt
pusha
icebp
add
fimull
popf
pop
pop
xchg
sbb
push
cli
sbb
mov
sub
mov
mov
call
xor
and
imul
mov
aad
mov
cmpsb
lret
push
cmp
lahf
or
in
inc
mov
jo
push
mov
or
cld
mov
sbb
sarb
mov
jns
mov
cmc
aaa
jnp
mov
das
mov
pop
or
enter
movsl
lock
sub
or
push
jg
and
push
cmpsb
scas
mov
mov
sti
pop
pop
repnz
push
neg
sub
sub
and
test
negb
mov
cmpsb
xchg
sarb
pop
and
jl
dec
jns
sbb
pop
inc
ret
inc
movsl
lods
adc
push
scas
mov
push
notl
cmc
xchg
add
sbb
inc
in
jbe
push
ss
je
lods
mov
xor
outsl
pop
mov
mov
sbb
es
jp
adc
in
lods
and
aaa
xchg
xchg
push
shlb
push
sub
dec
xor
adc
pop
mov
mov
mov
leave
aaa
lret
and
aas
movsb
or
jecxz
inc
addr16
jle
cmp
add
add
ljmp
mov
cmpsb
sbb
jecxz
jnp
int
ret
je
ds
test
sbb
lds
test
rclb
cmp
fwait
lock
jmp
div
mov
test
inc
call
cmp
out
fcomi
jp
out
adc
mov
sub
mov
adc
xabort
insb
xor
push
and
shrb
cmp
mov
aad
stc
aaa
jo
cltd
stc
xchg
rorl
ljmp
lahf
mov
icebp
les
lods
enter
aaa
je
xchg
aad
lods
jo
addb
xchg
into
inc
sbb
cmpsl
ja
add
ret
insb
popf
cld
add
scas
sub
gs
sub
push
pop
aam
adcb
fucomip
xchg
dec
lods
shlb
std
lahf
mov
ja
mov
mov
enter
inc
jge
out
popf
lahf
inc
dec
out
jae
fcmovne
popf
mov
xchg
push
addr16
nop
les
sub
rorb
inc
push
inc
leave
sti
jg
shll
je
andl
mov
jl
movsb
xor
xchg
clc
loopne
imul
mov
mov
aam
in
mov
jl
pusha
inc
fcoml
xchg
mov
adc
lea
xchg
outsl
stc
xchg
divl
shrb
adc
mov
pop
add
fdivrl
ja
mov
das
dec
div
push
inc
cmp
push
mov
push
adc
mov
insb
scas
nop
xor
dec
dec
out
xor
iret
stc
mov
roll
rolb
lret
push
test
pop
jle
push
sub
add
inc
add
cmpsl
inc
fnstcw
push
std
arpl
cmpsb
scas
fildl
clc
pop
and
cmc
fwait
lods
arpl
fcompl
inc
mov
movsl
cltd
inc
test
or
fbld
cld
std
push
test
xchg
out
rcrl
clc
cmp
movsb
jb
dec
inc
jle
cs
aad
das
mov
adc
insb
and
mov
les
das
dec
push
test
cmc
and
in
loop
xor
mov
dec
or
xchg
outsb
imulb
mov
add
pop
lcall
add
popf
push
push
xor
fstpt
in
jge
fndisi(8087
popa
lahf
lods
add
jl
imul
mov
addr16
clc
nop
int3
aad
inc
pop
xchg
cmc
fwait
je
jle
popa
cmpsl
loopne
into
in
push
idivb
push
nopl
cmpsb
push
enter
cmp
inc
imul
inc
inc
fidivs
mov
outsb
xchg
jbe
ret
add
xor
mov
xor
mov
xor
dec
sub
mov
bound
dec
mov
cmpsl
xchg
repnz
push
sub
lret
shr
lcall
xchg
xchg
jae
out
push
inc
sbb
cmp
arpl
dec
gs
dec
nop
test
jae
mov
xlat
fwait
push
lea
call
popa
rcll
fisttpl
push
adc
add
inc
xor
xor
xchg
or
stc
fnstsw
sub
clc
and
add
xor
jle
movsb
and
dec
cmp
add
lret
aad
js
adc
xor
les
mov
xchg
inc
add
out
int
add
outsb
enter
mov
out
adc
pop
icebp
clc
jno
pusha
out
and
insb
testb
add
mov
push
or
jge
xchg
cwtl
xor
jl
xchg
gs
add
imul
dec
mov
in
nop
addb
jno
lcall
int
mov
mov
jbe
add
lret
lods
inc
jns
adc
nop
mov
test
and
aaa
rcll
cld
mov
push
lods
mov
pop
mov
repz
adc
in
jecxz
push
out
sbb
or
or
push
stos
push
rcl
mov
jge
mov
inc
and
lret
leave
ja
or
inc
arpl
mov
pop
mov
or
and
xchg
inc
mov
jns
mov
repz
js
mov
jp
rclb
sub
sub
push
jnp
sub
lods
sarl
mov
xor
xor
xor
xchg
push
xor
cmc
test
dec
rep
cld
pop
cmp
lahf
ret
mov
push
pop
adc
or
fsubs
jns
ljmp
sub
lock
sbb
shrl
adc
sahf
insb
shlb
scas
jg
js
dec
push
in
lock
mov
aad
mov
jae
lods
xor
arpl
imul
and
fs
dec
cmpsl
dec
mov
add
dec
je
testb
xor
sbb
lahf
rorb
daa
push
divb
mov
jp
jae
fwait
loope
jnp
sti
push
dec
sarb
push
mov
adc
adc
arpl
lahf
push
adc
icebp
outsb
pop
cmpsl
cmp
aad
pusha
push
adc
cmp
dec
shll
inc
cld
mov
sahf
dec
adc
fisttps
push
aaa
jb
jbe
xchg
shl
mov
push
lock
std
sbb
sub
add
ja
pop
jge
push
out
jle
rorb
nop
xor
mov
mov
sarb
jp
cmp
push
sahf
lret
cmp
sahf
rcl
dec
mov
fwait
adcl
mov
out
lahf
jne
push
sub
push
or
sahf
xlat
in
das
adc
sbb
push
iret
push
adc
hlt
or
sahf
filds
push
test
cmp
jle
jecxz
loop
pop
dec
cmp
push
jge
clc
or
popa
test
xchg
into
ss
or
and
lea
outsl
enter
mov
ss
mov
push
sub
dec
jg
out
cli
adc
mov
xor
mov
ljmp
and
ss
ret
insb
pop
imul
std
stos
mov
fcomps
inc
xlat
jns
addr16
cmp
imul
dec
pop
hlt
xchg
mov
test
insb
xchg
xor
cmp
ret
into
inc
ret
lahf
sbb
or
addr16
sbb
lds
andb
mov
test
adc
jnp
aas
jg
scas
dec
pop
add
popa
dec
mov
out
int
loopne
mov
scas
cmpsb
dec
push
push
sbb
cmp
mov
mov
clc
add
cmp
mov
add
cmp
adc
stos
shll
das
adc
dec
dec
xchg
sub
arpl
add
call
imul
cmpsl
ret
add
repz
dec
scas
icebp
sub
pop
xor
les
mov
lcall
mov
dec
shll
shrl
lds
aas
roll
jbe
and
sbb
xchg
xor
roll
xchg
sub
pop
mov
pop
jecxz
and
pop
adc
subl
xchg
mov
les
dec
repnz
pop
mov
xor
add
pop
mov
lea
sahf
pushf
xor
fidivs
jno
aaa
pushf
mov
sbb
scas
les
dec
test
icebp
movsb
xchg
or
in
dec
pop
push
loopne
movsl
dec
jbe
sub
sub
xlat
das
movsb
push
sbb
stc
test
pop
enter
cli
leave
push
lret
inc
sub
or
xchg
jl
mov
push
jg
pop
mov
pop
jecxz
in
popl
test
out
pop
mov
jnp
jo
movsl
hlt
in
jge
imul
bnd
mov
rorl
test
xor
inc
sbb
cmp
test
jg
test
fadd
test
mov
pop
popa
cmc
jmp
out
add
les
shlb
subl
mov
enter
jecxz
notl
adc
std
xchg
cmp
xchg
jne
loop
ss
pop
jbe
test
pusha
cmpsb
inc
insl
sub
shrl
xchg
sbb
mov
mov
mov
daa
lea
imul
push
lods
stos
call
scas
mov
cmp
push
lock
cs
pop
jnp
scas
mov
cmp
jmp
push
out
cwtl
pop
ja
mov
dec
data16
lahf
jmp
lock
out
test
jnp
push
das
xchg
sti
popf
cs
insb
fdivrs
clc
and
mov
jmp
int
loop
xchg
stos
pop
or
pop
mov
sbb
and
sbb
mov
jp
lods
sub
mov
stc
pop
arpl
mov
cmp
arpl
ret
hlt
adc
adc
jne
fldenv
and
dec
lret
imul
xchg
lret
jl
out
movsl
insb
pusha
xor
lds
cmpsl
sbb
sub
idiv
mov
out
insb
iret
stos
lea
icebp
scas
mov
xlat
and
mov
add
mov
pop
adc
jp
pop
imul
imul
or
scas
xor
popa
dec
into
cltd
enter
leave
enter
sbb
loopne
shr
gs
dec
popa
out
rol
sbb
call
dec
loope
fscale
fs
cmpl
xchg
mov
mov
pop
and
ja
pop
or
fildll
out
ds
and
sbb
daa
cltd
adc
fbld
outsl
mov
push
mov
pop
mov
pop
aad
stos
aad
sub
leave
int3
jb
push
xor
pop
add
lahf
xor
sti
outsb
pushf
inc
pop
push
fisubrl
out
jmp
pop
inc
addr16
fwait
push
ret
fwait
orl
movsl
sub
cmc
negb
mov
and
jno
ret
push
lods
push
pusha
clc
mov
mov
into
or
fdivrs
pop
test
nop
add
lahf
bound
mov
sbb
cwtl
cli
inc
dec
aaa
and
lods
mov
mov
cmp
sub
mov
bnd
call
scas
cwtl
and
in
inc
or
push
mov
bound
popa
cmpb
jo
add
pop
fwait
xorl
sbb
fidivrs
jo
adc
add
xchg
sbb
mov
cmc
setne
icebp
xchg
sub
pop
xlat
cmpb
imul
and
jns
and
ss
dec
xorb
adc
sbb
out
ds
cmp
push
fcoms
gs
push
inc
lea
scas
rolb
cld
jae
jl
imul
enter
icebp
loop
mov
add
xor
mull
mov
movsl
mov
cmp
mov
imul
pop
mov
out
les
xchg
popa
jbe
jp
sbb
dec
lret
sub
out
lret
leave
je
fs
nop
leave
imul
sbb
enter
test
xor
pop
sahf
std
or
test
out
sbb
ja
jno
xor
inc
hlt
cmpsb
stc
cltd
adc
pop
rcrb
ficoml
sbb
adcl
adc
inc
inc
in
jno
mov
sbb
int3
add
pop
out
cmpsb
mov
btc
test
pop
adc
or
sub
jo
data16
insb
clc
ss
push
iret
cmpsb
mov
adc
mov
in
and
mov
jo
mov
mov
cmp
or
loope
sub
sbb
inc
adc
inc
out
push
xchg
push
sub
jge
daa
fsubr
sub
cmp
je
mov
scas
sbb
xor
push
and
aad
fdivs
xlat
xchg
or
stos
lds
push
dec
and
mov
movsb
inc
mov
scas
mov
and
lret
sbb
and
lock
loop
inc
ss
mov
xchg
mov
mov
xlat
mov
fdivr
rcrl
fwait
retw
addb
adc
sarb
out
xor
cld
pop
push
cmp
or
push
jno
cwtl
cmovl
add
arpl
inc
and
fnstsw
xchg
inc
mov
pop
repnz
int
mov
fcmovnu
cmpsl
adcl
leave
pop
insb
ja
xchg
cltd
mov
xchg
cmp
dec
icebp
xor
out
push
inc
test
mov
and
mov
outsl
ja
int3
cli
int3
into
xchg
jle
xor
mov
push
jbe
xor
lds
mov
dec
cld
mov
push
cmc
outsl
push
lock
icebp
data16
cld
lods
fs
pop
rcrb
popf
out
insl
xchg
lock
sbb
xlat
aad
popa
jae
or
mov
stos
jge
cmc
mov
push
push
push
cmc
jp
push
sbb
andl
stc
cwtl
imul
mov
ds
mov
rcll
out
xchg
call
fidivs
xchg
inc
jbe
or
es
mov
test
xchg
inc
pop
mov
xchg
cmp
imul
mov
outsb
pop
std
adc
mov
adcb
mov
aam
mov
sub
clc
in
add
mov
dec
out
jmp
orl
cwtl
adc
inc
std
movsb
adc
cmp
scas
ss
cmp
mov
mov
rol
pop
sarb
sub
mov
mov
rcl
stc
in
in
int3
jnp
push
sbb
aam
out
xor
call
pop
fildll
pop
sbb
xchg
or
jno
stos
xchg
adc
xchg
mov
leave
and
loopne
or
mov
xlat
cmp
enter
push
sub
mov
cltd
stc
shll
xchg
out
sub
negl
lock
mov
gs
mov
xor
dec
cld
xlat
xchg
xchg
pop
jg
cld
jns
add
cmpsb
in
add
fwait
scas
gs
xchg
cs
in
dec
in
or
push
inc
lods
xchg
mov
xchg
sbb
push
push
push
fnsave
sub
and
pop
sub
movsb
andb
outsb
jo
add
aad
dec
mov
adc
cmp
cltd
fcompp
jno
movsb
cmpl
and
out
jle
in
hlt
mov
rol
mov
push
bound
push
xchg
gs
sub
loopne
mulb
adc
push
fsubl
adc
addr16
sar
movsl
xor
stos
enter
lods
fnstcw
fbld
test
xor
test
cmp
aad
lahf
xchg
mov
sbbl
cmpsb
and
adc
cmpsl
adc
xorb
dec
inc
cmp
test
addr16
test
jne
push
ret
insb
mov
cmp
jg
std
pop
in
pusha
pusha
les
xor
les
rclb
int
fadds
inc
ret
cs
mov
stos
enter
out
pop
out
test
or
fiaddl
std
adc
add
test
rorl
out
and
jp
fldt
mov
rclb
add
mov
or
sbb
mov
lods
mov
iret
sub
and
add
in
cwtl
and
and
nop
aam
push
into
xor
add
add
js
or
rcl
ss
ljmp
add
repz
xor
sti
ja
in
loopne
lods
dec
cld
js
mov
fnstenv
loope
mov
cmc
inc
push
pop
loopne
add
call
sub
cmp
jo
push
sbbl
rcrb
or
jecxz
jbe
icebp
mov
jl
pop
mov
in
arpl
lahf
sub
lret
ljmp
rol
sub
imul
or
shlb
out
jge
idivl
dec
clc
xchg
mov
sub
push
and
or
movsb
andl
pop
inc
js
pop
movsl
movsb
sbb
lea
int3
mov
adc
jp
fadds
das
lock
loope
lahf
dec
lret
or
shrl
jmp
dec
mov
icebp
lahf
rolb
lahf
inc
or
mov
loope
imul
es
scas
aaa
pop
mov
std
jbe
sub
testb
mov
jecxz
sub
scas
sbb
mov
cwtl
xchg
mov
mov
imul
pop
mov
ja
fsubrp
jae
dec
inc
inc
nop
push
jp
push
mov
movsl
push
outsl
lret
es
and
loopne
daa
cmp
sahf
insb
fucomip
fdivr
jmp
pop
jge
add
mov
mov
test
ss
pop
pop
inc
pop
push
xchg
sbb
xor
mov
outsl
lret
insb
and
xchg
imul
and
inc
sti
push
sbb
cmp
adc
adc
push
xor
stos
movsb
adc
fisubrl
cmc
push
pop
xor
test
cli
daa
out
push
xchg
stc
pop
data16
cmp
fs
pushf
vcvtss2sd
es
inc
stc
mov
and
lahf
leave
push
and
pop
cmp
cs
fistpl
pop
lahf
mov
jg
dec
jmp
xchg
mov
mov
movsb
dec
jae
shrl
xchg
sahf
inc
out
add
adc
dec
push
mov
xor
jno
dec
pop
sbbl
idivl
xchg
add
test
push
and
sbb
xchg
sahf
lret
inc
cwtl
pushf
stos
mov
dec
sbb
sbb
xchg
xchg
sub
xchg
js
xor
xchg
adc
dec
add
xor
add
das
int
adc
mov
xor
dec
enter
add
dec
mov
mov
je
jge
mov
xchg
sub
jge
sbb
jmp
es
decb
call
lods
cmp
ss
cmp
pop
jns
mov
out
mov
clc
xchg
xor
adc
or
jp
lret
push
fsubrs
xor
int
rcll
pop
push
jo
sbb
cmpsb
jnp
adc
pushf
inc
mov
and
xchg
push
js
sbb
dec
mov
andb
push
pop
daa
es
and
cmpl
mov
xor
mov
mov
xor
cli
daa
mov
fs
add
movsb
inc
out
xor
add
aam
in
jbe
jle
jecxz
sub
push
test
gs
rcrb
imul
outsl
push
imul
aas
sub
lods
imul
sub
inc
shll
or
in
mov
test
sub
sub
mov
fs
aas
xor
std
jle
add
ja
idiv
cmc
rcr
mov
mov
cmpsb
xchg
jmp
into
fnsave
orl
mov
inc
pop
sub
hlt
leave
xchg
movsl
fcmovu
outsb
jo
mov
cmpb
shll
push
pop
mov
outsb
inc
or
cmc
mov
icebp
rorl
mov
dec
cmp
or
xor
xchg
mov
test
shlb
lods
pop
scas
cltd
add
jae
lret
stc
lock
pop
mov
or
mov
add
aas
mov
adc
push
sbb
inc
mov
rcll
sbb
dec
mov
push
xor
js
insb
pop
push
lret
push
push
out
addr16
cwtl
out
xchg
pop
iret
and
shrb
xor
mov
fimuls
mov
fisubrs
mov
cltd
cmc
mov
push
mov
outsl
xor
enter
add
xchg
dec
hlt
or
mov
push
clc
xchg
cmp
push
scas
divl
mov
pop
inc
call
inc
leave
into
cltd
jecxz
or
dec
lret
int3
sbb
sbb
lds
or
add
push
pop
inc
cltd
aaa
or
cmp
outsl
xor
push
or
and
cmp
aas
jo
jae
iret
data16
inc
lods
lcall
mov
xor
daa
out
notb
jecxz
inc
pop
pop
lods
mov
mov
or
pop
ret
pop
mov
or
cmp
cli
and
enter
loope
lods
mov
xchg
cld
jmp
dec
hlt
pop
sbb
push
dec
faddl
int3
dec
je
lock
ljmp
sbb
shlw
test
mov
add
pop
std
fdivp
pop
loope
das
inc
push
xorl
popa
fsubp
pop
scas
sbb
gs
movsb
pop
xchg
sub
dec
push
aaa
and
mov
sub
cltd
sti
add
fs
xchg
in
hlt
cmp
sti
mov
scas
xchg
sbb
js
ljmp
ss
out
fimuls
rclb
sti
push
cmp
aaa
out
sbb
cwtl
std
push
sub
and
push
sub
push
dec
jmp
add
cmc
or
mov
ret
ss
std
or
mov
mov
jbe
mov
cmpsb
mov
push
mov
inc
fdiv
xchg
xlat
or
lods
inc
lds
out
test
lcall
loope
repnz
lea
mov
pop
pop
jge
cmp
pop
push
dec
ret
mov
scas
in
jecxz
ret
xor
sti
mov
sub
xchg
orl
mov
cmp
icebp
sbb
add
and
aad
adc
pop
inc
fcmovbe
loope
lret
cmp
test
push
fnstenv
mov
or
pop
insb
cmc
sbb
sub
xor
push
jmp
rcrl
pop
push
dec
stos
dec
aas
pop
ds
outsl
or
xchg
xor
mov
imulb
dec
mov
or
inc
mull
add
ret
ret
addb
ljmp
inc
sub
fldl
arpl
repnz
movsb
fcom
leave
pop
inc
loope
iret
lock
ficoms
aaa
mov
dec
loop
mov
add
mov
jae
data16
xchg
add
test
mov
stos
mov
push
inc
sub
xchg
xor
push
ret
aaa
stc
aaa
push
mov
push
add
sbb
push
jmp
pushf
vmwrite
pop
inc
push
xor
and
scas
inc
jmp
out
cmc
pop
es
cli
push
inc
loope
aad
and
sbb
jno
mov
adc
adc
fstpt
jg
inc
mov
cmpb
xchg
aaa
jg
jp
aad
outsb
sbb
outsl
sarb
pop
inc
rclb
pop
orl
mov
jno
lahf
jae
and
xor
scas
aam
leave
xor
repnz
add
pushf
sysenter
push
sti
push
cmp
or
inc
cmp
iret
inc
cmpsl
enter
xor
std
movsb
iret
cmp
jge
jae
adc
pop
mov
and
iret
dec
cmc
dec
lahf
daa
add
rorl
and
mov
imul
cmp
lds
mov
xchg
rolb
lfs
insl
mov
and
bound
jge
inc
push
xor
push
movsl
push
call
fwait
mov
adc
incb
mov
dec
mov
mov
inc
lret
add
lock
lds
adc
std
dec
inc
pop
roll
fdivl
mov
enter
inc
into
es
aad
fcom
adc
test
movsb
dec
dec
lret
sub
loope
lahf
mov
jno
xchg
clc
insb
nop
ja
jb
es
fmull
pop
sbb
and
jb
je
sbb
pop
imulb
into
cmpsb
outsb
lret
pop
or
and
clc
out
and
push
cmp
push
ret
sub
int
jmp
arpl
pop
mov
push
xchg
and
jge
stos
enter
jp
fmuls
movl
cmpsb
loope
push
popa
mov
sbb
fadds
lds
push
dec
xchg
push
mov
mov
rclb
mov
lcall
sub
je
les
div
cmp
rcrb
jo
imul
adc
inc
push
dec
push
aaa
push
jle
aaa
xchg
fldcw
insb
jg
push
jo
in
stos
shll
pop
nop
outsb
jae
xchg
pop
and
cmp
adc
xchg
cmpl
jl
mov
push
jno
jnp
loope
cmc
and
dec
jge
ds
arpl
js
jmp
je
sbb
dec
xchg
pop
or
add
push
push
and
mov
iret
mov
aam
sub
inc
mov
adc
shl
fcomip
pop
sbb
or
pop
jecxz
int
sti
dec
jg
stos
and
repnz
lcall
push
pusha
push
pop
mov
and
sti
addr16
mov
cmp
lea
andb
jle
xchg
stos
push
scas
or
jmp
or
mov
xchg
cmp
add
xchg
pushf
dec
fwait
cmc
cld
lock
leave
outsl
inc
mov
lods
arpl
cmpsb
jbe
insl
jmp
ficompl
cmp
push
sbb
mov
push
mov
push
in
cs
jle
mov
sub
cmp
xor
stos
push
or
xor
scas
int3
pushf
inc
lret
pop
inc
mov
pop
mov
xor
push
mov
vphaddbd
mov
mov
jge
clc
mov
push
dec
stos
xor
ret
push
add
push
cmpsb
pop
les
add
sarb
xlat
aam
mov
test
and
pop
push
insl
std
stos
and
xchg
adc
pop
add
jge
test
mov
push
faddl
test
jnp
lret
jge
and
int3
xor
sub
jbe
test
mov
mov
jg
push
ret
les
or
lods
add
dec
fs
and
or
adc
jle
lods
dec
xchg
push
or
movsb
jns
or
fcmovb
leave
lcall
jae
cmp
jno
xor
or
mov
out
cwtl
add
push
and
pusha
jg
fcom
arpl
loop
lcall
push
push
loopne
pop
pop
sarl
jne
inc
pop
push
into
inc
lret
enter
xchg
aam
adc
outsl
fidivl
xor
xchg
or
and
push
push
loop
es
movsl
and
repz
mov
jg
xchg
or
rcrb
dec
cwtl
mov
cmp
insl
mov
sub
shl
pop
push
xor
pop
stc
jl
or
mov
lea
pop
sub
mov
mov
or
into
xchg
std
stos
cmc
push
aam
inc
jbe
mov
xchg
cld
gs
fsubrs
pop
pop
cli
shll
scas
dec
lods
pop
jno
xchg
push
add
cmp
bound
cmp
insb
sub
std
cmpsl
loope
jnp
pop
mov
arpl
adc
inc
cwtl
sbb
or
sbb
push
flds
sti
jbe
sub
shrb
push
repz
les
xor
fiaddl
mov
test
fs
movsl
xor
jns
push
js
dec
mov
repz
pop
pop
sbb
out
mov
hlt
or
rcrl
xor
das
cmp
push
pop
hlt
xor
mov
mov
mov
xor
jl
int
loop
mov
push
or
cld
out
shl
fistpl
mov
push
add
sahf
inc
push
cmpsl
xchg
push
pop
pop
aad
or
adcb
mov
mov
dec
test
cmp
in
out
loop
sub
mov
inc
xor
inc
fsubs
cmp
cmp
cmp
jge
imul
in
mov
add
insl
adc
adc
xor
mov
dec
push
fst
repnz
stos
xor
adc
lret
cmp
adc
subl
xchg
push
addr16
aad
sub
inc
sub
jb
mov
ja
mov
imul
push
aam
cmc
pop
or
addr16
mov
fbstp
jge
inc
or
pmovmskb
add
idivb
jno
daa
imulb
movsb
mov
js
add
cs
pusha
dec
and
push
add
mov
xor
out
fcomi
lods
jl
inc
insb
inc
in
xchg
cmp
adc
aad
fidivl
inc
sti
rcrb
pop
aas
leave
nop
xlat
sub
enter
mov
and
cmp
insl
sub
daa
out
pop
dec
cmpsl
mov
jp
and
mov
lds
lret
xchg
loop
push
sub
mov
loopne
or
pusha
sahf
andb
int
and
aad
xlat
inc
mov
cmpsb
push
cmc
xchg
and
fidivrl
insl
mov
ss
scas
sub
stos
or
dec
xlat
xor
cmp
xchg
cmp
repnz
xor
xchg
aaa
rol
les
cmc
lock
or
add
sbb
es
push
sar
popf
pop
inc
mov
mov
imul
inc
movhlps
cmp
std
addl
jecxz
mov
add
xor
dec
mov
into
mov
lahf
sub
push
loopne
icebp
lahf
add
in
cmpsl
out
pop
xchg
xor
aad
push
repnz
aas
mov
fldenv
mov
out
cmpsl
stos
xor
inc
xchg
out
jmp
dec
cmp
enter
sbb
sub
cmp
clc
jecxz
aaa
mov
push
js
lcall
pop
inc
pop
add
data16
xchg
add
paddsw
or
push
adc
lret
stc
ret
pop
fcompl
nop
pop
xchg
dec
mov
sbb
cmp
dec
mov
sbb
fists
and
add
xchg
sbb
mov
roll
mov
mov
push
cmp
push
jnp
fdivl
dec
sarb
push
jo
xchg
rcl
inc
pop
push
or
arpl
add
loope
push
sub
xchg
fldenv
mov
enter
push
jl
mov
sar
inc
cmc
in
gs
mov
adc
push
orb
mov
pop
lods
cmp
mov
call
add
into
loop
mov
aaa
pop
int
movsb
in
sti
pop
mov
repz
cld
sub
jno
cmp
fs
insl
and
sarl
push
mov
push
scas
push
pushf
mov
aas
pop
and
pusha
idivl
mul
insl
xchg
repnz
sbb
arpl
xchg
adc
mov
inc
repnz
ds
pop
xlat
pop
into
movsl
rcrb
add
or
pop
dec
xchg
add
cmpsl
mov
jbe
pop
outsb
movsb
scas
push
testb
jg
enter
sahf
mov
jmp
adc
ss
loop
std
jge
loope
jae
push
push
test
loope
sub
sahf
xor
mov
insb
adcl
sub
fsubr
pop
mov
push
xchg
decb
xlat
or
mov
inc
lret
js
push
xor
xchg
les
imul
dec
lods
inc
push
jns
imul
cmp
test
divb
sbb
cltd
leave
rcrb
fdivr
adc
push
mov
es
aaa
sub
jae
aam
dec
jbe
sbb
repnz
popl
push
mov
lret
xchg
and
lods
mov
xchg
lea
mov
push
and
jnp
call
mov
pusha
addl
imul
pop
jns
aas
xchg
out
ret
dec
sub
and
into
xchg
std
mov
mov
xor
push
inc
call
xchg
sbb
das
sti
xchg
dec
lods
mov
lock
gs
incb
adc
sbb
cs
push
cmpsl
lods
stc
sub
mov
mov
out
mov
aas
dec
mov
and
out
js
cmpsl
xor
scas
mov
pop
repz
aaa
push
int3
pop
out
xor
xor
shlb
jae
mov
loop
mov
inc
ds
mov
push
insb
cmp
dec
insb
popa
aam
pop
loopne
pop
shrb
repnz
mov
nop
pop
mov
jecxz
mov
sub
xor
out
sti
in
test
scas
in
iret
push
dec
lods
test
fmulp
mov
add
and
stc
repz
jo
pop
int3
and
cmp
pop
mov
je
jb
mov
adc
adc
jne
mov
cltd
pop
pop
loopne
dec
sub
rolb
call
xchg
lock
sti
jbe
sbb
or
in
inc
fistpl
mov
lret
xchg
xchg
mov
mov
mov
dec
iret
scas
adc
shll
enter
push
scas
pop
sub
cltd
nop
and
int3
sbb
dec
jge
pop
outsb
jno
ret
je
pminsw
popf
pushf
fcomip
dec
xchg
push
mov
data16
pop
jl
lock
sub
mov
lcall
mov
mov
cmp
shrl
test
addr16
clc
lret
and
dec
xor
stc
jmp
push
xlat
push
inc
jae
das
ror
mov
lods
pop
mov
ret
addr16
xor
sub
test
bound
int3
cmp
les
pusha
jle
sbb
sub
sub
testb
call
ljmp
xor
data16
je
loope
mov
xor
test
and
sub
cmpsl
and
stc
xor
jge
dec
ret
dec
cs
mov
fsubl
js
xchg
xchg
imul
imul
cs
jb
push
mov
insl
dec
enter
jmp
js
or
fadds
xor
sub
dec
leave
daa
jmp
sub
gs
aas
rclb
mov
sahf
sbb
adc
nop
sarb
rolb
add
ret
push
add
cmp
xchg
sbb
cmc
mov
out
or
mov
sub
push
mov
lods
xorl
cmp
dec
ret
push
nop
add
ret
fmuls
cmpsb
fisttpl
adc
iret
les
into
mov
mov
cmp
mov
pusha
cwtl
lcall
imul
int3
cmp
fdivr
std
adc
ret
rclb
imul
cli
xor
sti
xchg
imull
scas
cld
sbb
mov
mov
push
jnp
in
data16
jle
xchg
dec
mov
mov
mov
push
loop
mov
arpl
jae
mov
sub
mov
insl
push
fwait
in
xchg
bound
sbb
dec
js
cmpsb
pop
fildll
jae
pop
inc
pop
les
and
fwait
jmp
in
frstor
or
aad
jne
xor
add
ds
negb
adc
pop
insb
mov
loope
fwait
cmp
cmpsl
xchg
mov
inc
lahf
and
xchg
emms
lds
bound
and
push
paddsw
sbb
rclb
adc
adc
out
outsb
enter
mov
frstor
and
dec
ss
cmp
popa
divb
sbb
ljmp
ja
pop
mov
pop
loope
hlt
sub
dec
loop
add
fmull
push
add
pop
clc
inc
jns
add
cltd
sbb
movsb
xchg
mov
and
or
add
mov
adc
xor
xchg
jno
and
shr
mov
lods
mov
cwtl
jne
lea
rol
push
add
add
std
out
jno
fcoml
shr
cld
cld
rol
insb
pop
mov
out
mov
sub
loope
sarl
mov
lret
sub
sahf
dec
xor
or
popf
inc
ss
out
and
xchg
jno
sub
push
xchg
ljmp
scas
dec
cmp
mov
pop
jmp
repnz
dec
shlb
shlb
mov
inc
stos
lods
cld
jb
addl
cmp
pop
icebp
add
cli
pop
mov
aas
cmpsb
add
sub
setge
and
adc
sub
mov
mov
adc
dec
jg
mov
adc
add
popf
inc
jae
stos
pop
leave
xchg
out
mov
dec
or
js
xlat
sbb
fwait
icebp
out
bound
jo
mov
imul
icebp
push
js
sbb
fisttps
daa
int
rcll
jne
pop
dec
mov
inc
gs
lret
fcomps
mov
add
xchg
sub
cmp
fucomp
movl
ss
xchg
clc
pop
push
clc
dec
jb
sub
jp
pop
movsl
lods
xor
cmp
lods
cmp
ja
aam
jp
mov
scas
inc
inc
fldl
cvtdq2ps
mov
imul
lock
mov
or
mov
inc
stc
test
mov
ret
adcl
popa
and
mov
pusha
in
je
adc
jo
jmp
and
push
mov
je
jnp
sbb
dec
movsb
xor
mulb
push
add
or
rorb
inc
cmc
dec
mov
je
jmp
and
into
cmp
mov
inc
in
rorl
cs
jns
jmp
jg
loope
xchg
testl
or
cmpsb
xor
pusha
aad
test
dec
inc
rcll
mov
insb
pop
mov
cmpsl
imul
inc
les
xor
add
shrl
dec
rcrl
sbb
mov
rcrb
jno
push
xchg
xchg
dec
insb
das
inc
faddl
inc
and
push
fs
sub
push
out
mov
dec
das
pushf
je
sub
adc
or
scas
std
pop
rcll
fcoms
pop
jle
push
sub
insb
and
adc
sbb
rcr
loopne
dec
jp
roll
mov
xchg
sub
mov
pop
cmp
jl
dec
idivl
pop
jle
push
xchg
xchg
and
and
mov
push
sti
jne
loopne
sub
jp
add
into
jmp
fcoml
lods
push
xchg
mov
sbb
add
repz
sti
lea
adc
jo
fdivl
pop
test
popa
sub
ds
mov
jle
inc
push
sbb
popf
adc
xchg
mov
scas
fimuls
ss
test
cmpsl
into
cwtl
sahf
in
outsl
fcompl
mov
add
out
daa
addr16
pop
sbb
les
mov
or
cmc
mov
neg
mov
xor
fidivl
arpl
jge
sbb
dec
int3
sarb
mov
inc
lds
xor
stos
insl
mov
dec
push
arpl
mov
daa
fsubrl
jne
js
rcrb
sub
sbb
cmpsl
mov
dec
fnstcw
add
lock
jl
mov
pusha
in
js
push
adc
pushf
push
lret
addr16
cmpl
ficoml
pushf
dec
mov
jle
pop
mov
mov
fdivs
ds
mov
test
xor
wbinvd
mov
repnz
int3
sub
nop
aad
mov
add
push
loopne
loop
adc
pop
fistpll
sub
pop
jge
pop
jb
cltd
jae
sbb
and
pop
cmpsl
or
mov
pushf
out
daa
inc
push
mov
push
inc
push
jo
push
mov
push
clc
xor
sahf
adc
je
nop
mov
neg
mov
jns
aas
flds
ljmp
add
test
jno
dec
and
ret
aas
mov
jne
scas
or
loop
enter
mov
push
pop
xlat
pop
and
sub
sub
shll
loop
ss
mov
sbb
push
sarb
sbb
push
lock
jnp
push
cmp
sbbl
push
outsb
das
and
inc
pop
fistpl
rclb
notl
in
call
push
and
jmp
rcrl
pop
sbb
addr16
dec
fcomi
mov
xchg
popa
sub
push
push
xchg
cmp
enter
jp
jns
cld
add
xlat
ljmp
xorb
add
in
inc
pop
inc
lret
inc
sbb
aad
push
div
jo
cld
mov
xlat
jne
mov
fsubl
mov
sbb
cs
jmp
aas
cmp
nop
mov
push
sub
out
jp
cwtl
jecxz
xchg
aas
into
add
xorb
dec
add
bound
mov
shrl
mov
out
repnz
jno
sbb
jo
lock
clc
push
sbb
and
add
adc
pop
jb
ss
mov
popa
out
pop
testb
dec
or
ss
insb
jecxz
psubd
test
and
pop
jmp
cld
adc
or
movsl
push
addb
insb
fldl
pop
into
adcb
test
movsl
lret
cmp
add
stos
dec
sub
movsl
out
xchg
ret
push
repnz
sub
lcall
jae
int
pushf
ret
imul
xchg
std
rol
mov
push
xchg
push
mov
xor
or
aas
out
pop
push
shl
jbe
pop
sub
fisttpl
into
stc
out
push
sub
cmp
mov
or
loope
stos
and
jo
in
push
sbb
xchg
testl
xchg
adc
sub
fwait
xchg
jbe
imull
fdivrp
sbb
mov
ss
loop
xor
fstl
fwait
xor
dec
dec
or
cmp
scas
jo
lcall
addl
inc
hlt
jp
bound
cltd
jnp
dec
int3
mov
imul
cmp
fbld
xor
in
imul
inc
aad
pushf
ret
lods
cmp
lods
clc
xlat
sbb
push
lret
mov
out
cmp
je
mov
outsl
mov
or
mov
dec
sub
movsb
mov
or
cli
and
mov
jnp
pop
cmp
mov
pop
call
or
mov
mov
dec
mov
cmpl
pop
scas
adc
std
push
xchg
inc
leave
jle
mov
jb
lods
aas
adc
jle
jbe
test
add
dec
push
adc
or
popf
inc
hlt
pop
pop
mov
icebp
ret
inc
cmc
cs
pop
fdivrs
xor
test
xchg
stos
outsb
xor
popa
push
dec
add
xchg
mov
fstpl
mov
cld
adc
mov
mov
push
or
lock
imul
add
test
sbb
lret
cld
shlb
cmp
sub
sbb
adc
movsb
mov
loope
mov
jmp
addr16
jbe
or
push
pusha
lods
inc
or
out
jmp
cmp
test
mov
rolb
jge
jmp
inc
or
cmp
cmp
push
aas
es
and
jae
ljmp
clc
retw
adc
imul
int
xchg
insl
inc
sbb
jle
and
or
insb
std
das
and
cmp
xchg
ret
xchg
es
pop
ficomps
mov
mov
inc
inc
in
lods
movl
cs
cwtl
push
mov
ret
xor
jge
out
js
insb
and
add
stos
xchg
push
mov
push
push
xor
scas
xor
pusha
icebp
jmp
rorl
sbb
xorl
sbb
cmp
pop
mov
dec
xlat
rcrb
test
lods
jle
cmp
test
mov
inc
sub
clc
jg
into
lea
jae
dec
call
sbb
add
ds
xchg
mov
add
xchg
adc
jmp
mov
cmpsb
mov
sub
mov
mov
mov
jnp
daa
jmp
aam
cmp
pop
xor
pop
and
std
aaa
dec
and
test
in
push
sub
and
andl
or
fistpll
push
pop
mov
jle
out
mov
inc
das
jns
outsb
jb
pop
push
mov
jl
jle
mov
repz
push
cmc
jae
push
inc
xchg
subl
ficompl
test
lret
lds
mov
std
mov
repnz
jge
jp,pt
push
aad
add
and
nop
pusha
in
gs
xor
pop
xor
jmp
jo
jge
out
sub
arpl
mov
std
imul
fsubr
and
in
int3
and
adcb
out
inc
jb
cmpsb
rol
mov
pop
jo
arpl
push
stc
push
push
mov
leave
mov
adc
outsb
movlps
lea
xchg
jecxz
lods
jle
nop
jge
inc
and
sti
mov
xlat
pushf
fdivl
pop
fcom
pushw
add
loope
icebp
mov
mov
jbe
pop
outsb
sub
push
dec
mov
adc
adc
adc
and
pusha
mov
mov
out
in
inc
fists
sbb
lcall
sbb
testl
shrl
movsb
lret
dec
inc
out
fcomps
or
jecxz
jne
inc
cmp
cli
adc
test
in
sahf
sub
ljmp
dec
cmpsl
outsb
sbb
fcmovne
enter
push
mov
testb
mov
pushfw
jno
aaa
pop
xor
mov
lret
fdivr
scas
int3
push
jae
push
les
popa
je
lahf
fdiv
lret
js
inc
ds
and
stos
cmpsl
ja
shll
mov
dec
pop
and
shlb
pop
dec
cmp
mov
fmuls
xchg
pop
dec
je
mov
outsb
sub
cld
out
mov
ret
xor
leave
mov
in
mov
push
dec
stc
jno
repnz
mov
pop
cmp
pop
inc
test
mov
mov
and
mov
lahf
xor
add
les
les
adc
add
test
ljmp
and
pop
mov
fists
pop
aaa
push
adc
insl
mov
sahf
push
rcrl
hlt
add
orl
xlat
cli
imul
adc
cwtl
and
push
and
mov
mov
xor
popw
dec
aaa
test
jne
jge
clc
mov
fcmovu
lea
mov
or
ss
call
add
stos
jb
xchg
mov
jecxz
movsl
xchg
inc
imul
cmpsb
lods
pop
sub
push
cmc
pushf
and
or
add
mov
mov
lock
lcall
outsl
aas
jnp
int
inc
mov
mov
gs
adc
lahf
mov
and
mov
xchg
inc
ljmp
test
jne
cmpsl
daa
jp
in
or
fwait
int3
xor
ret
or
lcall
adc
mov
add
shll
pop
cmp
or
test
jns
mov
mov
std
or
in
mov
dec
fs
outsl
es
fucomip
and
test
ret
xchg
mov
roll
je
divb
adc
push
int
mov
mov
and
ret
loope
out
mov
lret
pop
adc
lods
or
adc
test
mov
es
movsb
xchg
cmpsl
xchg
mov
adc
fldenv
leave
pop
in
push
imul
sbb
mov
in
xor
loope
clc
add
lds
shrl
arpl
mov
in
xor
cvtpi2ps
outsb
sub
cmpsb
nop
ss
adc
sub
jns
or
pusha
push
push
data16
inc
mov
jbe
mov
insl
fsubl
jnp
arpl
mov
mov
mov
xchg
cmc
cs
mov
lock
xor
pop
push
test
mov
adc
mov
pop
std
into
xlat
mov
mov
cld
pop
push
divb
add
out
inc
in
lock
out
lods
inc
jb
mov
jbe
loopne
leave
cs
inc
out
lods
and
aaa
mov
sub
jnp
xchg
rcl
sub
adc
adc
mov
sbb
imul
cmpl
pop
ljmp
repnz
mov
inc
mov
in
inc
adc
dec
push
dec
push
jge
test
scas
or
ljmp
xchg
pop
and
and
paddq
cmp
adc
ds
xor
cmpsl
jb
mov
push
outsb
xchg
imul
roll
repz
or
or
mov
mov
rcrb
jmp
sub
imul
nop
push
push
cmp
cmpb
loope
dec
mov
ret
adc
cltd
sahf
pop
jge
jl
cltd
jmp
xlat
fstl
xchg
lcall
push
arpl
add
jb
leave
mov
dec
sti
push
xor
mov
pop
adc
lods
rorl
ss
push
sub
cmpb
dec
dec
add
inc
hlt
mov
sbb
sbb
aam
rcr
aaa
les
mov
jmp
aas
xchg
cmp
negl
ret
add
notb
sub
jno
and
subl
ficoml
iret
lret
in
fs
jecxz
or
insl
call
aad
mov
ret
or
into
js
fistpl
xor
xchg
mov
insl
adc
roll
xchg
mov
and
xchg
in
sub
imul
dec
xchg
mov
sbb
shr
test
adc
stc
call
in
mov
add
gs
and
pop
lahf
push
mov
dec
stos
lret
aad
ss
cmpsl
rorl
add
inc
or
cmp
mull
sarl
hlt
cld
xchg
xchg
add
ret
pop
outsb
cmovg
and
dec
stc
push
pop
repnz
repz
inc
les
mov
in
mov
aam
push
flds
int3
xchg
out
scas
mov
cmc
fimuls
jl
ds
lock
add
jo,pt
or
inc
xchg
inc
je
or
pop
test
nop
mov
aaa
not
out
or
scas
xor
fs
testl
mov
mov
adc
test
fbld
or
cld
pushf
das
xchg
mov
leave
cli
test
sub
call
mov
cmp
jmp
xchg
out
out
sahf
pop
mov
inc
sbb
push
push
fwait
and
out
cmp
popf
aam
adcb
jne
ds
loope
es
je
out
clc
lds
imul
ret
and
mov
mov
dec
cmc
xchg
bound
enter
push
lfs
loop
repz
or
loop
mov
fistpl
inc
cltd
movsl
lret
sbb
mov
pop
xor
add
cmp
push
dec
fwait
xor
dec
ret
push
rolb
pop
ljmp
movsl
shlb
cmp
xor
pusha
mov
call
and
dec
or
sbb
pushf
adc
and
cmp
test
adc
mov
xchg
mull
mov
pusha
and
sbb
xor
fadd
lahf
ret
sti
sub
test
cld
push
sbb
sbb
mov
int3
aas
push
andb
or
leave
pushf
mov
inc
enter
mov
jne
cmp
aam
adc
aam
cwtl
orl
and
push
add
mov
daa
dec
cmpsb
mov
dec
mov
nop
xchg
notl
iret
loop
lea
pop
clc
jnp
cltd
jnp
ds
fimull
xchg
sbbl
stos
mov
and
mov
add
push
ljmp
adc
and
addb
dec
and
mov
insl
loopne
pop
xchg
mov
pop
mov
or
cmpsb
jbe
pop
xchg
ljmp
dec
sbb
outsl
in
adc
stos
xor
cmc
and
jmp
and
mov
fmull
rorl
test
mov
imul
es
and
or
sub
fisttpl
push
shrl
std
roll
sarl
lods
sbb
xor
dec
stc
test
xchg
ret
in
inc
push
ret
push
push
in
xor
mov
add
loopne
fst
repz
push
enter
sbb
enter
mov
cmpsl
nop
lods
pop
cmp
out
jns
inc
ja
rolb
adc
pop
popf
push
daa
jle
stos
and
push
and
xchg
out
out
pop
pusha
lock
xor
or
je
addr16
sub
test
mov
subb
xor
mov
inc
push
out
aam
jge
inc
notb
fsubrl
adcb
dec
adc
mov
adc
jno
pushf
fildl
ss
lcall
inc
divps
mov
jl
rolb
inc
cltd
fisttps
mov
pop
lahf
sbb
loope
mov
pop
lahf
sub
dec
bound
jl
shlb
sub
mov
fsts
sub
add
mov
lock
lahf
pop
or
popf
adc
cli
mov
dec
xor
xchg
mov
xlat
popa
int
pop
cmp
mov
mov
movsb
inc
mov
push
outsl
push
jbe
sarb
insl
scas
and
jecxz
in
test
fstpl
xchg
cltd
out
ja
pop
shrl
ds
xor
adc
xchg
xor
pusha
sbb
orb
sbb
out
es
and
test
jno
xchg
inc
xchg
lret
push
and
fisubrs
out
adc
inc
xchg
mov
push
test
cmp
popa
dec
popf
int3
add
jns
push
pop
push
scas
gs
push
inc
sub
cld
idivb
lcall
mov
adc
pop
jecxz
cs
in
std
mov
push
jle
or
or
test
test
fstpt
test
pop
ret
je
mov
stos
adc
or
add
rorl
sbb
lods
xor
dec
mov
mov
mov
sub
xchg
call
insl
test
std
test
mov
shr
faddp
je
pop
xor
xchg
mov
fs
sbb
ret
sbb
movsl
sbb
xor
inc
mov
mov
or
psrld
stos
jmp
mov
int3
data16
movsl
rclb
rorb
andl
push
inc
mov
scas
movsl
cli
xchg
sahf
out
and
js
mov
pusha
out
lods
inc
mov
cld
movsb
inc
in
inc
jge
xchg
cli
push
adc
add
pop
jne
mov
inc
adc
movsl
sub
test
cmp
jmp
aas
jo
repnz
push
add
lock
lods
std
in
sbb
fisubl
icebp
loopne
jo
movsl
push
inc
pushf
xchg
and
loop
es
cmc
lcall
clc
shr
push
add
in
jp
mov
int
stc
fnclex
dec
pop
or
repz
pushf
imul
jmp
out
mov
sub
ret
cmp
dec
out
fadds
mov
and
and
sub
iret
pop
mov
jo
add
mov
xor
xchg
push
fwait
loope
test
into
xchg
sti
ds
faddl
xchg
pop
inc
lret
sarl
mov
adc
mov
pop
pop
in
rcrl
rcrl
fcomp
sub
xorl
sub
xor
add
sub
pop
and
mov
sub
out
test
in
xchg
mov
cs
and
repz
repz
xor
push
push
fiaddl
push
or
push
dec
jb
cmp
test
sarl
adc
leave
pusha
xorb
push
xchg
movsl
jmp
pop
or
stos
xor
xor
sbb
xchg
jae
es
pop
xor
pop
jns
and
shrb
aaa
dec
fnstsw
dec
jne
movsl
mov
xchg
sbb
js
push
xor
cltd
arpl
jbe
in
xor
outsl
xchg
cs
in
pusha
pop
adc
ljmp
inc
popa
icebp
mov
lret
aad
push
fisubrl
loopne
movsb
test
cli
inc
or
pop
std
push
iret
insl
and
mov
mov
inc
cltd
mov
jnp
lea
add
fsubl
add
cmpsl
push
xchg
scas
cli
mov
lea
jp
in
xor
hlt
test
imul
mov
and
cmpsl
jae
idivl
add
std
adc
int
add
iret
cmp
rorb
push
es
es
stos
cwtl
or
into
std
pushf
jmp
ror
mov
and
lods
lock
test
mov
cmc
loope
cmp
cmc
test
rcl
jne
inc
sahf
add
pop
jae
cmpsl
in
xchg
lea
lcall
inc
push
and
jb
gs
bound
rolb
out
or
sbb
imulb
scas
jns
cmp
inc
jns
in
jb
or
gs
pop
push
lahf
dec
jae
mov
sbb
shlb
fwait
add
sub
xchg
bound
push
addr16
jge
stos
pop
jne
dec
xchg
jmp
test
cmp
ret
jecxz
testb
mov
es
push
jne
adc
js
mov
pop
popa
clc
orl
popa
nop
xor
in
dec
pop
cmpsb
outsl
xor
in
sub
cmp
or
pushf
stc
bound
ret
xchg
stc
out
fwait
test
mov
adc
mov
adc
pushf
icebp
mov
adc
adcb
popa
out
dec
in
mov
in
lret
mov
cli
cmp
loopne
ret
mov
sbb
lea
xor
jnp
ret
rcl
lret
cmc
repz
fs
lret
cmp
dec
popa
mov
push
xor
add
mov
addb
mov
repz
test
cmp
stos
mov
mov
push
sbb
push
pop
das
data16
push
fisttpll
xchg
jnp
lret
mov
pop
enter
cmpsb
xchg
leave
leave
cmp
or
push
cmp
xchg
dec
lea
lahf
pop
int3
mov
fildll
int
ds
aas
cmp
test
pop
mov
mov
imul
push
incl
mov
pushf
mov
fisubrl
sbb
cmp
cwtl
xor
gs
add
aas
xor
in
pusha
inc
sbb
ret
jne
push
lods
push
jae
xchg
and
hlt
stos
insb
and
sbb
insl
repnz
or
or
sahf
rorl
movntq
dec
push
xchg
in
push
or
or
or
mov
pop
adc
mov
int
pop
fsubl
scas
rol
cmpsb
pop
jl
jno
sub
popw
xchg
rcrb
jle
enter
push
arpl
dec
imul
jno
xchg
aad
mov
sahf
pop
mov
sub
in
loop
inc
xor
adc
cmp
mov
sub
dec
pop
dec
repnz
es
out
insb
clc
ss
mov
adc
xor
hlt
xchg
stc
xchg
lods
xchg
daa
mov
mov
pop
sar
inc
arpl
mov
je
aaa
inc
testb
call
and
stos
push
jle
sahf
xchg
fisubs
xor
xor
enter
xor
jl
popf
mov
sbb
fsubrl
lods
sbb
stos
jge
sbb
mov
or
mov
int3
call
in
enter
stc
lods
mov
sub
in
rcrb
lret
std
movb
rorb
mov
mov
cmpsb
inc
call
dec
lea
out
dec
pop
xchg
pop
out
test
mov
ret
mov
lea
lods
sbb
mov
out
add
dec
dec
pop
addr16
ret
mov
ret
cmp
into
rolb
xor
mov
enter
dec
test
data16
dec
std
rcr
mov
std
je
mov
xlat
xor
mov
ds
cmpsb
dec
mov
jne
mov
imul
cmp
in
out
in
or
dec
jmp
fisubs
popf
aaa
popl
push
or
sub
stos
pop
xor
cwtl
int
stos
xor
jns
jb
push
mov
inc
adcb
cmpsb
mov
bound
or
aad
iret
hlt
pop
popa
xor
scas
into
sbb
fsts
shlb
mov
pushf
mov
mov
outsb
inc
int3
repz
jbe
jb
adc
cmp
lcall
fdivs
push
bound
je
xchg
sub
outsb
mov
mov
cmp
mov
addr16
mov
mov
bound
and
push
mov
pop
push
push
adc
cmp
mov
enter
or
subl
inc
push
in
and
jg
and
dec
filds
and
data16
mov
aad
call
flds
movsb
mov
mov
mov
cs
cmp
cs
adc
int
jp
pop
bound
ss
pushf
jp
cmp
pop
pop
cmpsb
mov
flds
inc
stos
pop
je
in
fwait
inc
and
imul
or
popf
lock
lret
adc
xchg
shll
xchg
sbb
shrb
xchg
into
jecxz
inc
adc
fwait
xor
fwait
pop
mov
out
into
pusha
mov
sbb
mov
and
fisubrl
jg
xor
test
inc
sahf
call
test
jbe
dec
fsubl
scas
nop
inc
fcmovnb
pop
and
fdivs
mov
xor
mov
insl
mov
xchg
scas
fistps
fbstp
inc
adc
dec
sbb
cli
loope
push
ret
pop
loopne
lock
insb
and
cmc
mov
shrl
leave
test
lea
cmp
mov
sahf
push
outsl
das
loopne
mov
cltd
sbb
mov
dec
idivb
xor
pop
inc
int3
or
cmp
or
push
pop
dec
fwait
repz
mov
mov
shll
cmp
sti
push
add
sbb
push
push
jns
xchg
mov
mov
cmpsl
push
sbb
mov
xor
test
test
aad
leave
shl
fisubl
ljmp
jle
loope
pop
dec
fwait
sbb
push
and
jmp
mov
insb
lea
dec
cmp
push
xchg
mov
divps
cld
add
push
mov
jl
out
lahf
mov
pop
enter
push
bound
aaa
ret
push
inc
das
push
test
push
hlt
hlt
pop
or
pop
std
fbld
rorl
mov
pop
push
cmp
das
and
ret
iret
dec
jg
sub
pop
dec
in
push
js
inc
scas
cli
shrb
or
pop
cld
mov
sub
mov
push
in
xchg
and
push
push
stos
outsl
push
aam
call
mov
imul
jecxz
loope
ljmp
pop
movsl
imul
dec
imul
gs
mov
ja
xchg
xor
fmuls
sahf
dec
or
outsb
lods
pop
std
jmp
pop
mov
das
push
mov
stos
ja
mov
adc
ss
jns
pop
sub
sub
aas
std
sbb
cmp
stc
cmpl
scas
mov
mov
mov
in
out
push
mov
sti
cli
sbb
dec
jbe
fs
and
jmp
push
pop
sbb
lods
out
outsb
test
aas
sbb
shr
jns
dec
scas
ficompl
xchg
outsl
das
pop
fadds
cmc
lods
lahf
lahf
push
xchg
mov
sbb
or
add
xchg
xchg
inc
xor
ret
cli
outsl
mov
pushf
mov
out
push
push
cwtl
xor
not
mov
ret
test
cltd
insl
sbb
mov
and
hlt
push
or
inc
popf
mov
xor
cmpsb
cli
pop
jbe
mov
mov
movb
pop
add
mov
lahf
loopne
jmp
lahf
rorl
icebp
or
out
scas
xorb
outsl
lret
jnp
aaa
popf
jno
push
jl
arpl
jns
cwtl
mov
and
daa
lcall
inc
mov
xchg
mov
lcall
mov
lret
push
sub
push
xchg
das
xchg
in
ljmp
popa
test
adc
and
push
stc
push
add
insb
leave
jne
ljmp
imul
ja
ljmp
jbe
add
jae
adc
sub
add
xor
rolb
cmpsl
pop
sbb
jbe
mov
enter
data16
mov
cmp
lods
ds
arpl
xor
jp
push
cltd
push
cmpsl
loope
pop
aam
push
cltd
lahf
cmpsb
mov
movsb
into
cli
aam
int
xchg
push
add
jge
repz
dec
lcall
shl
lea
mov
xor
cs
testb
iret
jp
negb
int
add
add
test
in
cmpb
popa
pushf
xchg
ds
adc
inc
fists
push
mov
ja
mov
lahf
popf
lret
icebp
add
into
inc
push
insl
sub
jno
daa
ja
in
adc
frstor
pushl
mov
lret
inc
imulb
mov
push
icebp
bound
sub
dec
mov
notl
mov
xchg
in
aas
and
in
addr16
mov
popf
adc
imull
jb
rorb
lds
aad
in
das
testl
test
data16
mov
mov
call
addr16
aad
adc
sub
add
ss
mov
sub
sub
push
xrelease
or
adc
icebp
mov
lods
ds
push
test
cli
mov
ret
imul
scas
cmpsb
pop
jge
cli
sbb
ds
dec
into
adc
add
jle
dec
inc
or
sti
sbb
xor
in
jecxz
in
out
add
ljmp
fidivrl
ljmp
fwait
call
aaa
sbb
or
add
pop
and
xor
or
mov
int3
fists
cmp
add
lcall
mov
jo
enter
daa
int3
adc
pop
pop
sbb
cmpsb
mov
addl
outsl
into
xchg
inc
sbb
jbe
ror
mov
test
inc
mov
out
mov
sub
mov
loop
xor
mov
gs
inc
inc
xor
jo
cli
in
or
push
inc
jge,pt
push
lods
mov
mov
je
rol
clc
inc
test
mov
add
test
cmc
cmp
xor
adc
mov
frstor
pushf
hlt
push
rcll
mov
ret
lods
in
sub
xor
xchg
es
outsb
jmp
jno
inc
popf
mov
bound
jmp
movsb
enter
pop
sbb
fs
adc
xor
dec
ljmp
stos
cwtl
leave
inc
push
jbe
lret
das
dec
cli
rorl
rclb
mov
fisubl
adc
test
pushf
push
adc
or
lahf
mov
xor
insl
cmpsb
jae
cltd
aas
xchg
or
mov
pusha
fwait
pop
aam
xor
pop
insl
jge
xchg
movsb
pop
dec
push
pop
jae
int
or
pop
nop
cmpb
test
pop
int
push
mov
cmp
push
leave
dec
lret
jl
popf
ficoms
add
rol
repz
jmp
mov
jecxz
cmp
push
adc
xchg
cmpsl
inc
push
jp
decl
lahf
incb
push
stos
pushf
xor
jecxz
mov
jp
adc
cli
xchg
subl
adc
mov
repnz
jns
test
bound
jmp
adc
ret
idivb
rep
xchg
pop
loop
or
clc
add
xlat
pop
andb
mov
arpl
pop
outsb
and
in
xchg
bound
fstpl
cli
mov
mov
adc
or
ret
mov
gs
mov
push
bound
lods
mov
xchg
jno
lock
cmp
and
shr
call
jne,pn
push
pop
pop
js
outsb
adc
mov
inc
movsb
cmp
mov
int3
movsb
test
mov
imul
jnp
push
je
mov
xchg
fstpl
inc
inc
into
lahf
lods
jecxz
sub
add
nop
movsb
inc
outsb
jle
push
int3
stc
cmp
js
scas
cmp
std
js
test
xchg
leave
mov
inc
mov
xchg
test
aaa
cmp
add
lods
xor
fisubrl
xor
jne
cmp
xor
inc
xchg
xchg
int
jno
mov
lcall
pop
pusha
jo
and
repz
xchg
subb
pop
or
xor
mov
movsb
gs
mov
out
fwait
fwait
xchg
jne
mov
add
push
xor
test
fcoms
out
icebp
lea
mov
cmp
mov
push
fiaddl
cmp
jb
inc
ret
cltd
bound
in
filds
fwait
clc
jle
iret
add
sbb
mov
xor
or
dec
test
inc
lret
push
in
aas
xchg
out
and
xorl
pop
scas
xorb
popf
push
lret
out
je
dec
cmp
jne
ret
or
mov
push
inc
shrl
jge
sub
or
dec
dec
ds
ljmp
xor
je
imul
cmp
mov
inc
rcrl
xchg
sbb
fmuls
negl
insb
in
sbbb
out
xor
pop
int
mov
mov
lods
cmc
jne
add
mov
mov
cwtl
out
mov
stos
icebp
pop
gs
jb
xor
add
movsb
jae
and
cmpsb
or
cwtl
das
add
sahf
jnp
pop
pop
jmp
adc
dec
pop
push
jge
ds
test
lods
dec
rorb
mov
sub
dec
mov
jmp
jge
push
push
icebp
mov
cmp
cltd
adc
xchg
incb
mov
mov
push
add
mov
jle
xchg
sbb
xchg
mov
xchg
imul
xlat
pop
add
push
push
inc
fists
adc
push
popf
add
sbb
or
inc
push
insl
push
int3
scas
out
subl
xor
mov
mov
lret
insl
mov
mov
sub
mov
test
dec
adc
call
dec
popf
jge
adc
xchg
arpl
cld
sbb
ss
or
or
gs
jmp
cmc
mov
fbstp
sarl
aas
mov
push
lods
or
sub
inc
dec
lds
push
sbb
das
rcrb
sti
push
popf
imulb
int
adcb
dec
xor
fcomip
dec
sub
shrb
xchg
pusha
mov
xchg
jnp
mov
mov
jae
and
jns
cli
fwait
movsl
popf
imul
rorl
enter
mov
sahf
xor
movsb
mov
aas
mov
cmp
in
sahf
iret
push
iret
adc
dec
rcl
cmovae
push
mov
mov
pusha
fistpll
xchg
xchg
int3
pop
clc
adc
dec
cmp
cmp
clc
fnstsw
out
scas
add
mov
and
ficoms
push
into
mov
movsl
cmpsb
mov
sti
mov
imul
xlat
dec
daa
adcb
movsl
std
sbb
stos
lea
inc
into
jmp
push
pop
add
aam
arpl
lods
arpl
add
les
dec
and
jbe
das
stc
jmp
clc
ljmp
xor
xchg
arpl
adc
adc
jne
insl
xor
and
mov
or
icebp
pop
pop
sarb
cli
ja
jmp
or
sub
shl
movsb
cld
loop
xorl
ret
mov
push
fwait
or
pop
or
fists
xchg
test
jg
enter
das
stos
movsb
push
in
and
idivb
in
loopne
lock
mov
aaa
and
xor
stc
mulb
and
addr16
jl
js
cltd
push
add
pop
cmp
pop
xchg
addr16
fistpl
ret
cmpsl
rcrl
cwtl
jbe
out
inc
aam
cwtl
dec
lret
outsb
inc
sbb
mov
or
or
push
loopne
xor
in
cmp
mov
mov
dec
jb
jmp
xor
dec
sub
xchg
push
sti
gs
nop
flds
les
mov
mov
test
mov
push
mov
dec
out
les
adc
ret
sahf
es
shll
fs
lcall
pop
in
adc
ficoml
aad
add
xchg
xor
dec
mov
or
mov
rorb
push
xchg
pushf
lds
jmp
sub
push
add
pop
xchg
jo
mov
icebp
mov
clc
ret
dec
jae
inc
jns
sbb
pop
or
imul
aad
test
sub
inc
pop
cld
je
sub
adc
lods
into
in
inc
dec
sub
mov
push
int
out
push
sub
repnz
mov
stc
mov
sbb
ss
out
in
sub
xorb
out
and
dec
add
adcl
mov
mov
aad
mov
test
xchg
repz
pop
stc
jb
jb
or
pop
faddl
xchg
iret
cs
dec
ds
mov
int3
shll
arpl
aaa
out
test
push
stos
sub
mov
dec
ss
out
icebp
xchg
cltd
add
aaa
xchg
lods
call
loope
fidivrl
popa
cmpsb
sub
push
mov
lea
aam
lret
dec
outsb
mov
or
xchg
sbb
loope
cmpsl
xchg
call
lretw
sub
mov
inc
cmp
fprem1
repnz
fldl
xor
jecxz
test
cmp
or
inc
imul
jne
fisubl
pop
sbb
mov
addb
and
push
push
mov
jnp
and
subb
jl
addb
push
daa
rclb
repnz
mov
scas
outsl
stos
dec
mov
popa
enter
fbld
fnstsw
cmp
and
into
cli
sarb
setne
push
nop
mov
arpl
xchg
adc
inc
lcall
pop
orb
dec
inc
orb
dec
loopne
mov
xchg
je
js
pop
call
mov
xor
adc
shll
fwait
rorb
shl
ret
ret
outsl
push
sbb
pushf
cwtl
frstor
jle
pop
inc
add
push
popa
add
mov
pusha
pop
xor
pop
xorl
fiadds
fidivs
push
xchg
rorl
loope
jbe
lret
fsqrt
aas
dec
push
pusha
and
pop
jnp
inc
imul
jmp
ja
push
mov
push
ljmp
jb
in
mov
sbb
aam
or
mov
pop
and
mov
xchg
je
cmp
scas
scas
jae
dec
push
and
mov
and
scas
gs
test
xor
aaa
inc
mov
clc
pop
add
sub
xor
test
jmp
or
pop
sub
ljmp
mov
into
jne
push
stc
sbb
adc
add
cs
stc
arpl
sub
xchg
scas
xorb
dec
mov
out
out
jb
pop
push
push
loop
in
dec
sbbb
negb
jmp
xor
push
xchg
inc
int
int3
popf
jle
jnp
popf
imul
lcall
sub
dec
ret
daa
insl
sub
mov
jmp
pop
lods
push
je
inc
call
inc
js
pushf
rolb
sbb
sub
aaa
xor
mov
fsts
andl
add
es
xorl
shld
aas
dec
cs
aaa
inc
and
xor
shl
lea
inc
xor
stos
sar
mov
jo
jle
ficompl
lahf
dec
xor
mov
xor
jns
mov
jnp
push
and
jl
mov
add
arpl
bound
aad
lret
bnd
clc
mov
sbb
insb
out
lds
mov
sbb
mov
pop
jp
adc
mov
add
mov
jbe
push
push
subl
adc
cmp
fsubs
std
outsl
and
lock
test
imul
out
dec
loop
push
pop
pop
or
xor
adc
sub
adc
daa
pop
ud0
or
xor
pop
jl
sahf
loopne
cmp
mov
jmp
push
lret
sub
shl
and
xchg
out
mov
incb
sub
mov
and
pop
lahf
scas
add
mov
sub
and
daa
mov
jle
es
mov
stc
push
mov
or
dec
adc
jge
outsb
inc
nop
cs
mull
xchg
mov
pop
inc
dec
repnz
add
push
sahf
xlat
mov
cmpsb
or
xchg
xor
sbb
cmc
mov
xchg
in
sarl
imull
pop
js
test
addr16
or
push
dec
repnz
xor
cs
shll
jns
lcall
push
test
das
mov
lcall
fwait
sbb
push
jbe
pop
cli
push
fs
popa
mov
cs
push
inc
repnz
clc
test
inc
fistl
out
sbb
lret
popf
sahf
subb
jl
mov
out
adc
rcrl
clc
add
jo
gs
add
pop
sets
ret
aaa
push
test
lds
imul
mov
inc
test
add
mov
mov
or
sbbl
mov
sub
lcall
sub
xchg
mov
dec
or
jge
cmp
subl
cmpsb
imul
popf
popf
loopne
and
in
enterw
data16
xor
inc
fwait
shrl
xchg
movsl
into
ljmp
mov
lds
push
test
aas
sub
cmp
out
enter
into
ret
mov
mov
cmp
inc
cmpsb
outsl
icebp
jo
cmp
mov
or
lods
lods
mov
pusha
insl
jecxz
push
enter
cmpsl
sbb
dec
ds
or
dec
push
mov
inc
jecxz
mov
xchg
xchg
fistpl
xlat
in
scas
xchg
xlat
and
adc
push
adc
mulb
and
cmpsb
scas
pop
or
sub
mov
jns
das
push
pop
cmp
nop
out
mov
dec
aam
iret
push
mov
fmul
aad
stos
or
into
fwait
and
mov
test
mov
pop
test
sbb
into
mov
push
push
pop
movsl
sub
inc
movq
je
sub
gs
ja
add
mov
je
push
sbb
mov
jecxz
and
pop
cli
mov
xchg
inc
pop
sti
shl
aaa
and
stos
jecxz
out
ja
call
adc
pusha
outsl
jle
enter
hlt
cmp
or
data16
and
mov
mov
xorl
jo
insb
fwait
pop
sarb
loopne
ret
mov
add
fwait
popa
fnstenv
mov
lods
adc
mov
dec
push
inc
xchg
sbb
pop
jg,pn
enter
neg
repz
loopw
mov
or
jne
add
into
push
sub
xor
mov
loope
test
das
bound
cmpsb
push
leave
mov
or
adc
out
cmp
fadd
cmp
addb
jecxz
dec
xchg
push
gs
sahf
daa
push
fdivr
test
ss
mov
pop
enter
shl
rorb
mov
push
or
loope
jae
rcrl
lock
out
jb
mov
xlat
push
dec
inc
mov
pop
mov
scas
nop
psrld
jns
shr
scas
mov
jbe
rolb
orl
push
pop
mov
dec
jp
cmpsb
test
jnp
mov
in
dec
enter
dec
mov
and
mov
je
fisubs
daa
mov
ljmp
sub
pop
mov
mov
mov
loope
push
stos
test
jo
sbb
xor
sbb
test
ss
adc
add
nop
lcall
adc
jecxz
loope
push
xchg
xchg
sbb
pop
push
or
adc
jle
mov
pop
ja
mov
inc
filds
inc
push
add
imul
pop
jmp
and
dec
cltd
movsl
lds
stos
rorb
inc
shlb
mov
fisubrs
std
dec
or
jnp
push
mov
sub
ret
ljmp
cmpsl
test
div
in
out
pop
jge
les
adc
das
cltd
jge
sub
sahf
mov
xchg
and
outsb
pop
xor
mov
pop
in
addr16
xchg
inc
je
mov
push
lea
lret
mov
cmp
div
test
lcall
sub
test
xchg
mov
stos
dec
dec
mov
mov
inc
cmp
out
pop
imul
hlt
cmp
unpcklps
and
jo
sub
dec
jae
sub
jno
shlb
jne
into
cld
test
dec
or
pushl
pop
outsb
out
mov
cltd
jmp
aad
cwtl
sti
cmp
nop
jg
mov
shlb
mov
pop
ret
pop
loopne
scas
das
sbb
cs
cli
in
adc
push
pop
jb
xlat
stos
sbb
mov
mov
mov
out
sub
iret
xchg
out
repnz
inc
mull
jnp
cmp
fnstcw
js
push
dec
in
sbb
xlat
push
ret
cltd
xchg
and
pop
push
pop
ret
sub
jle
mov
aas
pop
push
les
adc
push
jmp
call
dec
adc
scas
imul
adc
pop
outsb
or
xor
or
xchg
out
mov
enter
dec
insl
cmp
pop
push
xlat
jge
addr16
shll
pop
cmp
scas
ss
lahf
add
mov
cli
lret
sub
xchg
insl
out
cmpsb
sbb
dec
pop
lret
mov
cmp
mov
push
nop
fisubl
jg
in
mov
cld
testl
test
dec
xor
xor
push
imul
lds
or
das
adc
sbb
push
cmpb
mov
hlt
outsl
inc
pop
lret
test
jg
sub
bound
push
fmulp
push
xchg
jo
inc
adc
lahf
je
aaa
xchg
pusha
or
push
ficomps
cmpsb
addr16
and
cmpsb
insb
gs
mov
adc
clc
sbb
popf
sar
jo
xchg
scas
mov
inc
lret
movsl
rorl
add
add
mov
jnp
push
dec
jmp
icebp
xlat
repnz
mov
inc
mov
int3
orb
andb
cwtl
jle
ret
xor
xor
mov
push
popa
rclb
push
stos
push
push
add
xor
scas
inc
mov
jnp
cmp
arpl
arpl
fbld
dec
inc
das
in
subl
sub
testl
je
and
cld
or
push
dec
push
jae
lret
pop
aaa
adcl
sbb
or
and
addr16
pop
iret
fwait
mov
orl
scas
sbb
add
push
inc
xchg
mul
pop
xchg
lcall
ss
lods
xor
sbb
scas
sbb
or
ret
jbe
inc
repnz
jl
std
push
iret
pop
clc
outsb
decb
out
dec
fwait
cmpsb
cwtl
push
es
jle
pop
or
insb
xchg
repnz
xchg
jnp
ret
in
jle
mov
clc
pop
inc
lock
mov
fadd
ret
cmp
or
insl
test
ja
jmp
fistpl
add
pop
mov
and
xchg
fwait
outsb
testl
popa
inc
and
shlb
out
movsb
sbb
push
aam
dec
cli
insl
popa
sub
xchg
push
dec
jmp
dec
addr16
vmwrite
lods
xor
or
mov
je
out
rcrl
mov
and
xchg
adc
mov
enter
ret
data16
jne
sub
shll
xor
sub
sarl
cmp
and
add
xchg
mov
dec
cltd
jg
sbb
sub
adc
lahf
stc
dec
adc
pop
jecxz
jae
dec
and
jge
repz
in
mov
add
movsb
xor
into
aad
daa
jp
rcl
fisubrl
sarb
inc
daa
cmp
sbb
cli
xor
and
mov
lods
adc
dec
pop
stos
rcrb
dec
sbb
sub
sbb
xchg
cmp
fisttpl
ret
lea
push
outsb
movsl
push
add
xchg
fistps
sbb
mov
push
pop
imul
or
out
lods
sub
jg
in
data16
xor
jne
adc
mov
xchg
imul
sub
dec
xorl
je
lock
pop
cmp
les
ja
mov
imul
cld
stos
xchg
jbe
pop
cmp
mov
jb
test
andl
xor
mov
rcrl
xchg
mov
sub
push
adc
cmp
xchg
adc
cli
add
push
xor
mov
out
mov
orl
and
pop
cmpsb
fstl
sub
pop
fstl
mov
pop
cs
inc
mov
mov
rclb
jno
cmp
imul
mov
sarb
xor
dec
in
popf
sbb
push
sbb
gs
cmp
iret
sub
shld
loope
mov
push
or
in
sub
jnp
mov
mov
clc
shrl
pop
xchg
push
add
lahf
fcmovbe
cmpsb
add
fcomp
inc
xor
in
loop
nop
dec
lock
push
cmp
and
mov
mov
mov
mov
fxch
sahf
mov
adc
xlat
sub
repnz
pop
xchg
mov
xchg
sub
add
je
dec
add
subl
es
pop
mov
mov
jb
test
mov
and
adc
cwtl
xchg
repz
lods
mov
lods
gs
add
popl
imul
xor
push
fcmovne
sbb
es
dec
lcall
dec
pop
mov
mov
xchg
test
sub
aam
add
inc
fisttpl
mov
push
fldcw
pop
lahf
dec
push
pop
dec
mov
or
push
pop
fcoms
jae
stc
pop
mov
push
in
mov
ror
xchg
adc
test
jb
xchg
pop
mov
imul
imul
jbe
lret
pusha
clc
pop
mov
iret
xor
addr16
or
add
sbb
mov
cmpsl
bound
inc
add
jp
mov
mov
scas
dec
loope
sub
add
stos
mov
cmp
and
outsl
adc
mov
cmp
cmp
pop
xor
jg
outsl
dec
fistl
or
pop
pop
int
test
push
loop
arpl
xchg
cmp
lahf
addr16
popa
mov
fcomps
jg
jmp
and
dec
ljmp
aad
cld
popf
call
mov
and
cwtl
mov
faddl
mov
loopne
mov
inc
aam
sub
test
and
or
or
xor
cmp
insb
sub
imul
pop
xor
vphaddbw
push
jle
loopne
fs
mov
pop
rcrb
pop
ret
lea
xchg
int
iret
adc
pushf
out
test
roll
pop
push
xor
les
out
push
and
in
fildll
daa
mov
add
mov
aas
sub
into
push
sub
pop
dec
stos
shlb
jne
fucomip
mov
mov
insl
test
sub
mov
cmpsb
mov
cwtl
sarb
cld
jle
xlat
xchg
loope
rolb
ja
aad
xor
mov
add
jmp
cli
jae
hlt
jp
push
pop
push
mov
sti
sub
fstpt
arpl
fcoml
xor
xchg
clc
rcl
test
lret
or
mov
mov
stc
movsl
add
jno
sub
mov
data16
ds
test
cmp
mov
push
les
lods
sbb
andb
xchg
fimuls
jb
xor
jle
or
jb
add
sub
cmp
sbb
shrb
stc
aam
lods
mov
aam
cwtl
dec
mov
dec
sub
pushf
mov
cmp
fnstenv
js
cwtl
mov
adc
jecxz
or
or
cmp
xor
loope
cmpsb
int3
sub
jno
shll
out
sahf
loope
sub
and
xlat
xor
mov
ret
in
push
sbb
pop
addr16
notb
jno
xor
mov
dec
mov
rcr
cmp
imul
pop
cmc
jbe
cmp
out
and
movsl
cs
push
rolb
sub
add
iret
out
fcmove
xor
out
stc
sahf
sbb
std
pop
add
jl
adc
xchg
pop
mov
sbb
or
dec
nop
call
dec
mov
mov
sbb
adc
push
xor
mov
sti
xchg
adc
sbb
cmc
push
mov
clc
test
call
bound
test
jecxz
sub
xchg
fdivrs
sbb
stc
xlat
jnp
mov
enter
scas
lret
gs
in
in
movsl
orb
outsb
jno
lods
cmp
cmp
fwait
out
sbb
pushl
ret
mov
arpl
mov
xorl
roll
ja
mov
imul
fcompl
lds
int3
mov
adc
mov
mov
sbb
addb
lock
xlat
jne
xor
mov
leave
je
jecxz
sbb
lcall
mov
pusha
mov
fists
xorb
jns,pn
pop
ret
mov
cmp
pop
rcrb
cmp
mov
aas
test
jnp
lret
adc
jbe
cmp
adc
mov
les
sbb
or
xchg
xor
addr16
jp
push
aaa
mov
je
leave
mov
xchg
sbb
push
ret
outsb
adcl
adc
mov
mov
inc
int
les
lahf
int3
sbb
out
sub
inc
xchg
mov
cs
sub
or
lahf
mov
aam
push
fbld
pop
fcmove
movsl
pop
or
subb
pop
in
add
sbb
loope
js
sbb
cmpsl
movsl
jb
and
mov
idivl
popl
es
inc
inc
test
jbe
nop
out
dec
stos
jno
push
sbb
mov
scas
mov
push
stc
push
xchg
shl
xchg
dec
dec
dec
xor
ss
es
aad
lock
jmp
jl
dec
dec
cmp
add
cmp
add
pop
rcl
jns
pop
shrb
outsb
mov
pop
mov
push
mov
fwait
scas
pop
mov
or
inc
xchg
pop
ljmp
aad
jmp
test
addr16
int3
out
jb,pt
dec
decl
sub
mov
inc
mov
cwtl
and
push
mov
sub
into
cmpsb
jmp
stos
std
jae
notl
push
jge
in
ret
mov
outsb
es
mov
jns
in
dec
iret
push
test
xchg
cmp
dec
aam
rcrb
scas
push
or
ret
arpl
je
shll
sahf
test
mov
mov
inc
jb
stc
sbbb
push
call
push
test
fs
ret
or
pop
mov
mov
in
cmc
dec
in
out
pop
inc
cld
in
mov
movsl
inc
mov
mov
xchg
decb
insb
stos
push
xor
in
inc
lds
pop
xchg
and
imul
lcall
in
cltd
push
push
scas
out
js
outsl
out
jo
jbe
xchg
push
pop
push
xchg
shll
bound
pop
dec
pop
sbb
xchg
xchg
ret
pop
or
mov
mov
sub
mov
mov
das
mov
cmp
and
dec
ljmp
pop
sub
dec
std
mov
push
dec
pop
xchg
mov
fcomps
xchg
test
sub
fcmovnb
jbe
shr
pop
xchg
stos
sbb
andl
xchg
arpl
mov
xor
popa
pop
push
mov
jecxz
lret
adc
pop
adc
test
cmp
or
dec
lret
call
out
ljmp
cmp
sub
lahf
vmwrite
lock
dec
dec
stos
lcall
fucomip
push
adc
daa
std
sub
jns
pop
lods
lock
push
cmp
and
or
loope
aas
dec
lods
jo
sbb
or
sti
xor
and
xchg
mov
xchg
inc
cmpsb
sub
inc
fistpll
xor
xchg
test
lock
jl
mov
scas
xchg
adc
insb
shlb
jecxz
add
daa
or
cmpsl
mov
push
std
sub
iret
aaa
cmp
in
lods
xor
sub
pop
out
cmpsl
iret
jecxz
and
mov
mov
in
xchg
jae
int
fs
and
dec
nop
loopne
orl
adc
push
lods
xchg
push
adc
in
lea
sbb
mov
nop
mov
cwtl
popa
ljmp
mov
jbe
lds
mov
jae
cmp
add
test
shlb
mov
mov
mov
dec
jmp
xchg
jo
in
movsl
mov
call
adc
mov
int
stos
dec
aaa
mov
out
xor
sub
inc
repz
iret
add
push
lds
xor
adc
out
inc
mov
mov
fs
cld
aam
jnp
popa
sbb
mov
xor
std
xor
xor
pop
pusha
adc
mov
mov
add
or
das
push
dec
jp
pop
fiaddl
sahf
jno
test
jno
aas
xchg
lret
xchg
mov
xor
mov
gs
mov
xlat
mov
xchg
sarl
add
lret
mov
cwtl
mov
rorl
push
out
lods
out
lcall
adc
filds
ds
add
je
mov
cltd
jno
push
sbb
bt
or
mov
daa
and
and
fnstenv
shrb
jo
push
repz
or
fcmovne
into
std
cwtl
dec
mov
mov
mov
shrl
mov
icebp
bound
imul
rclb
iret
nop
leave
mov
sbb
push
inc
add
mov
cmp
imull
shll
jnp
cvtpi2ps
push
rep
mov
push
loop
mov
push
insb
mov
in
dec
push
xlat
sti
rclb
popa
mov
adc
mov
inc
dec
inc
shl
sub
pop
in
outsl
ret
stos
ja
jne
lods
xchg
shll
jae
cmpsl
sti
mov
mov
xchg
lret
pop
std
das
mov
inc
mov
pop
loop
daa
sub
lret
fsubs
push
adc
loope
mov
mov
mov
ret
jl
out
sbb
cmp
bound
push
enter
add
mov
cmp
add
add
lcall
adc
sub
enter
push
inc
or
in
call
hlt
sub
int
add
in
add
sbb
cmp
loop
fs
ffree
call
mov
cmp
cs
pop
hlt
jne
lcall
out
gs
pop
enter
loopne
cmp
decb
xlat
sbb
leave
lds
orl
push
out
jnp
lds
push
mov
and
cmpsb
or
movsb
pop
push
cmp
adc
mov
fsubs
in
mov
push
test
test
cmp
mov
lds
aad
and
pop
xchg
xchg
in
rcrl
insb
cmp
jae
notb
fisttpl
cmpsb
outsb
sbb
adc
cmpsl
lcall
cmpsb
and
push
es
out
and
pop
mov
ror
out
cmp
sbb
int3
cmovns
and
jle
arpl
test
imul
ffree
mov
cwtl
orb
push
pop
popa
mov
sbb
fwait
sbb
fwait
cmpsl
xchg
add
jg
sbb
xlat
pop
cmp
pusha
xchg
dec
inc
push
clc
sbb
inc
and
lods
fdivl
sub
push
dec
scas
sub
mov
sub
sub
jg
leave
add
dec
sub
pop
test
jo
xor
les
dec
mov
adc
cmp
xor
lret
xor
cmp
add
out
pop
or
loopne
in
xchg
mov
adc
les
jl
sti
inc
dec
cltd
fiadds
add
arpl
cmpsb
adc
lcall
arpl
ret
lret
or
push
mov
lcall
push
mov
mov
fidivl
dec
or
mov
pop
pop
inc
mov
in
add
es
lret
push
xchg
or
xlat
ret
inc
jb
div
leave
lds
mov
sub
xchg
and
inc
jmp
and
ljmp
xor
ret
sbb
mov
sub
insb
mov
fmul
push
cmc
hlt
dec
nop
out
fldenv
xchg
ss
pop
cs
mov
fldcw
insl
out
jle
jae
jmpw
ret
fldt
leave
sub
int3
mov
fst
incb
lcall
adc
mov
sahf
lods
sub
fcmovu
cs
nop
out
xor
icebp
enter
cmp
jnp
adc
adc
inc
cmp
adc
pop
data16
addl
repz
leave
jae
jbe
or
dec
jl
push
into
push
mov
rcll
lret
int
sti
pop
jle
xlat
push
lret
push
xchg
notb
int3
shr
xchg
jno
pop
mov
insl
and
lods
ret
imul
icebp
movsl
fistps
lods
jb
cld
mov
sbb
pop
xor
ret
adc
jl
xchg
hlt
inc
sbb
xchg
jns
fisubl
daa
int3
xor
add
outsb
test
and
fdivs
inc
xorb
out
inc
int
in
pop
mov
test
and
jecxz
xchg
jle
stos
pop
cltd
add
inc
sbb
mov
fsub
scas
arpl
xor
call
xlat
imul
adc
jmp
xor
xor
loope
clc
imul
xor
mov
sub
sbb
xchg
and
call
out
mov
adc
shlb
mov
add
or
sti
or
push
ds
xchg
xchg
cltd
or
mov
cmp
mov
mov
push
in
mov
testb
int3
jne
pop
clc
orb
lds
xlat
lret
pop
mov
jg
lret
je
mov
std
xchg
sahf
lahf
xchg
jecxz
cmpsb
lret
repz
mov
iret
scas
pop
dec
imul
jae
pop
xchg
clc
outsl
mov
fisubrl
jns
cwtl
or
push
sbb
cmpsl
mov
dec
arpl
imul
loop
cli
sbb
nop
adc
clc
push
sbb
add
mul
lcall
and
out
or
out
push
clc
pop
cmpsb
aas
imul
push
leave
push
push
dec
add
mov
dec
outsl
sub
into
setae
xor
inc
dec
sbb
aas
push
sbb
mov
test
jb
movsb
mov
bound
or
jmp
xchg
lcall
imul
sub
cmpsb
dec
arpl
inc
push
push
mov
fisubrl
insl
fsubl
sarb
adc
imul
mov
outsl
jnp
cmp
lret
and
fadds
dec
mov
lock
sbb
and
pop
gs
pop
adc
nop
cltd
subb
cmp
lret
or
sbb
cmp
sti
cmpsl
push
lret
jns
jbe
out
cwtl
fiaddl
data16
mov
lock
inc
pop
int3
sahf
clc
dec
xchg
sbb
mov
or
jecxz
iret
jne
pushl
sbb
dec
roll
cmp
cmp
in
jb
inc
or
sbb
sbb
adc
lods
pop
jns
xchg
test
dec
cmpsl
add
in
cmp
std
pop
insl
orl
lods
divl
dec
mov
int
mov
into
cmpl
mov
xchg
cmp
in
add
xchg
mov
jl
fs
leave
test
sbb
jecxz
mov
sti
push
mov
aam
cmpsb
lods
inc
iret
das
cmpsb
xchg
repnz
mov
rcr
leave
ret
pop
out
in
mulb
jo
inc
call
xchg
into
movb
adc
adc
insl
mov
imul
pop
lock
pop
xor
and
cltd
sub
ficoml
lods
sti
in
jno
jp
ficomps
pop
cmp
popf
divb
add
js
ret
popa
lret
mov
xchg
stos
dec
leave
clc
pop
mov
adc
mov
sbb
xor
dec
lds
adc
mov
adc
fmuls
dec
lods
push
fcoms
fadds
push
add
cmp
in
sub
bound
dec
cmpsb
pop
jae
mov
movsl
fdivp
and
or
or
arpl
push
cmp
pushf
shlb
je
dec
scas
mov
jo
or
or
pusha
jo
xchg
fsubl
popf
imul
dec
test
mov
mov
je
loop
enter
repnz
clc
imul
inc
and
testb
mov
in
in
inc
into
mov
inc
mov
rclb
lret
into
or
push
pop
icebp
xor
ljmp
addr16
cmp
imul
hlt
fimuls
fbld
jge
lea
xchg
jl
stos
gs
enter
pminsw
xorl
lret
dec
adcl
cmp
dec
test
daa
test
clc
dec
test
loopne
lea
and
lock
push
loope
repnz
jge
push
insb
fldcw
cmpl
stos
jb
fistps
popa
dec
inc
ds
ljmp
mov
test
cmpsl
mov
lock
add
sub
andb
adc
xor
sbb
outsb
pop
sahf
and
mov
lods
idivl
cmp
sarb
push
and
xchg
mov
call
mov
repz
xchg
mov
lret
jecxz
les
enter
pop
add
mov
cld
mov
fsubrs
xchg
pushf
mov
cmp
jnp
dec
aas
ret
or
clc
xorl
jg
scas
hlt
sar
gs
cmpl
lods
add
inc
pushf
jp
push
and
fucomp
outsb
push
xchg
or
add
sbb
dec
lcall
add
pop
inc
int
mov
pusha
inc
xchg
enter
nop
add
les
mov
fidivs
mov
loopne
and
xchg
pop
cltd
dec
mov
stos
ja
das
or
push
mov
or
jmp
adc
cmpsl
out
mov
inc
mov
fs
repz
rep
mov
sbb
cmc
mull
jbe
outsb
jbe
cld
sti
dec
mov
jl
jl
aam
push
xchg
push
lahf
and
ret
jle
aam
addb
stc
popa
aam
popa
aam
inc
fldenv
inc
adc
pop
lret
add
arpl
mov
push
and
ficoml
push
adc
popa
jge
cltd
inc
sub
xchg
add
xor
es
cmp
xchg
push
mov
sarb
xchg
lea
fs
push
cmp
arpl
aas
insb
or
aas
jns
adc
jle
sub
cmp
xor
aaa
adc
aaa
pop
dec
pop
jo
ljmp
cmpsl
push
test
add
add
adc
shll
sbb
lods
mov
adc
aad
or
loope
push
mov
mov
xchg
scas
enter
adc
int3
orb
outsl
mov
or
lahf
loope
push
cwtl
sbb
push
test
je
sbb
pop
push
dec
xchg
jge
aam
cltd
jne
dec
jp
push
push
filds
inc
cmp
push
mov
mov
push
mov
adc
dec
push
incb
push
push
mov
movsl
push
cmc
fnstsw
mov
lds
and
push
jno
and
pop
movhps
call
sub
call
fdivrl
inc
cli
push
inc
mov
jecxz
push
sub
push
jns
or
add
or
sub
or
xchg
call
adc
fidivl
in
ret
les
mov
dec
xor
xor
xchg
inc
pop
sbb
jne
push
inc
call
add
adc
insl
lods
testb
out
pop
sbb
xchg
cs
leave
movsb
mov
add
jle
cltd
aaa
xlat
xlat
hlt
test
enter
ja
movsl
faddp
adcl
jp
mov
push
mov
mov
cmp
pusha
push
clc
icebp
jmp
scas
cmp
jle
push
jge
xor
imul
andb
xchg
inc
pop
loopne
cmpb
out
pop
out
lock
add
jae
cld
mov
and
mov
repz
dec
pusha
sbb
or
xchg
fmull
add
jl
popf
xor
pop
inc
mov
scas
add
out
inc
mov
push
mov
xchg
notb
pop
xor
pop
jg
enter
dec
cmp
sub
lret
jmp
sub
adc
inc
repnz
js
cmp
test
aaa
xor
iret
dec
int
push
fcoms
arpl
mov
fcomip
add
xor
xchg
pushf
idiv
mov
push
and
fcmovne
cs
lds
pusha
leave
rorb
sbb
pop
sbbb
push
sub
int3
ljmp
cmp
lret
mov
mov
xor
inc
dec
jae
test
mov
sti
mov
stos
dec
shlb
mov
dec
sbb
cmc
mov
cmp
sub
les
sbb
dec
adc
jle
stos
insl
pushf
xchg
or
inc
in
cli
es
fcoms
sbb
mov
and
pop
scas
out
pop
je
outsb
out
ss
mov
mov
negb
aam
das
inc
adc
pushf
push
xor
lret
lcall
in
jae
inc
out
data16
dec
loop
jb
add
xor
jns
and
mov
jmp
xchg
pop
xchg
mov
jge
mov
jo
pop
and
fisubs
out
je
sar
int
mov
inc
or
daa
cld
or
and
pusha
add
roll
lock
addr16
sti
pop
pop
int3
xor
push
mov
jmp
movsl
stos
jae
mov
pop
push
fnsave
popa
jecxz
add
jl
popa
sub
stos
xor
adc
dec
jg
cmp
testb
sbb
pop
add
cmp
dec
push
add
jmp
gs
repnz
hlt
loopne
pop
xor
insl
loopne
scas
cs
addl
call
xchg
dec
int3
and
jne
jmp
cmp
inc
icebp
sub
movsl
out
mov
mov
bound
filds
sub
movsl
mov
mov
int
xchg
jge
push
int
sahf
mov
dec
mov
pushf
or
orl
aad
subb
mov
nop
es
jbe
clc
leave
subl
repz
or
imul
cmp
sub
int
mov
adc
pop
ja
mov
arpl
add
pop
xchg
cmp
mov
lock
imul
push
add
inc
cmp
sbb
sub
inc
or
scas
fnstenv
xchg
out
mov
sbb
sub
mov
mov
sbb
sub
jbe
ja
mov
outsb
adc
jge
das
movsb
loopne
lock
clc
in
iret
and
js
push
xchg
push
cmpsb
ss
cwtl
stos
and
jne
lret
mov
jo
sbb
lret
cmp
vmulps
cltd
js
in
push
nop
sub
dec
pop
pop
movsb
push
frstor
mov
pop
std
test
mov
ja
cmp
bound
in
push
lock
sbb
mov
dec
cmpsl
adc
xor
mov
push
mov
call
jmp
insl
dec
add
mov
out
ds
insb
aas
xchg
int3
outsb
mov
push
inc
xor
add
and
fnsave
jmp
lahf
and
js
add
cmpl
cmp
mov
push
cmp
push
shlb
pavgb
sub
sti
xor
aaa
mov
fwait
or
pop
repnz
call
inc
adc
cmpsb
mov
xchg
out
iret
xchg
imul
cmp
adc
mov
icebp
mov
in
xchg
cmc
fs
enter
cli
adc
xchg
aam
inc
pop
sarl
bound
mov
push
push
jae
mov
add
xchg
xor
push
scas
push
es
loop
idiv
fdiv
push
hlt
push
imulb
cmp
mov
inc
arpl
ret
aam
es
rolb
pop
cmp
sbb
pop
xchg
cmp
mov
or
pusha
jae
jle
and
pop
fmull
mov
pop
pop
xchg
cmpsl
adc
je
aam
inc
mov
mov
imul
jle
mov
jnp
lods
hlt
cmp
xchg
add
in
xor
stos
mov
xor
or
lods
mov
inc
sti
repz
ret
dec
inc
inc
nop
leave
call
jp
mov
lret
push
das
sbb
std
push
popa
mov
in
rcl
jp
adc
lds
push
mov
fmull
fdivl
add
loop
sbb
pop
int3
out
lea
lea
aad
and
and
inc
fwait
popf
add
add
pop
or
push
cmp
push
je
fisubrl
xor
xor
mov
xchg
icebp
fucomp
sbb
cmp
jne
das
inc
push
dec
mov
loope
mov
add
mov
dec
mov
or
sbb
lret
fcoms
pop
and
std
fwait
sarb
jnp
jo
movsb
add
adc
es
std
push
sub
pop
push
and
popa
aad
bound
mov
fs
xchg
adc
add
test
scas
cmp
sbb
int
adc
int
mov
test
cmp
sub
cmpsl
in
pop
pop
and
pop
mov
cli
jmp
shlb
pop
pop
pusha
pop
call
nop
shll
and
popf
cmp
mov
icebp
mov
sbb
out
xchg
or
sbb
or
sti
dec
js
pop
mulb
inc
shlb
push
nop
cs
xchg
loope
and
lock
sbb
fldenv
incb
orb
into
jecxz
fstps
out
push
hlt
es
push
das
rorl
in
lds
mov
cli
mov
push
adc
push
xchg
and
aad
or
push
jo
push
ficomps
adc
imul
mov
jno
or
rolb
scas
lahf
dec
out
adc
mov
push
add
shll
andb
inc
cmp
sahf
stos
test
stos
pop
push
fistl
rcrl
hlt
or
repnz
jmp
out
xchg
int3
and
call
aaa
sbb
mov
or
ja
sbb
lea
push
push
xor
adc
sub
xchg
pushf
jmp
pop
and
in
jnp
cmp
or
fsub
fcmovnbe
mov
mov
mov
mov
adc
clc
andb
jge
mov
ljmp
fstps
dec
xor
mov
xor
repnz
in
flds
stos
push
lds
jle
loop
jg
and
dec
out
cmp
adc
cmpsb
cmpsb
inc
inc
ficomps
jmp
jmp
sbb
cmpsl
sti
adc
rcrl
mov
pop
xchg
push
mov
iret
test
adc
sub
push
or
push
fildl
out
pop
push
ds
pop
mov
out
in
xchg
jns
aad
jne
adc
aad
xchg
push
ljmp
dec
mov
int
pop
mov
mov
mov
jmp
enter
mov
fisubl
iret
aam
and
jg
sbb
xor
dec
dec
xorb
out
jmp
xor
mov
push
fs
addr16
sub
inc
xchg
xchg
adc
stos
shlb
lcall
dec
sub
jmp
adc
mov
stc
xchg
xor
insb
mov
arpl
or
nop
jmp
shr
nop
push
lcall
adc
inc
sbb
test
inc
adc
pop
loope
aaa
xor
and
gs
push
or
test
push
mov
push
xchg
divl
jns
icebp
insb
pop
add
int3
inc
push
arpl
movsb
in
call
mov
adc
pushf
push
pop
xor
xor
push
mov
sub
and
nop
pop
or
xchg
pop
jmp
insb
aas
pop
je
cltd
pop
out
leave
xor
mov
fsub
into
jno
lret
cld
and
and
mov
jmp
add
dec
pop
loopne
mov
repnz
lahf
aam
imul
ffree
push
popf
pop
lock
into
inc
sub
cmp
and
xlat
sarl
insl
stos
in
shll
out
iret
cmc
fwait
jne
push
pop
enter
dec
cli
dec
and
lcall
sub
mov
add
push
sub
inc
sbb
les
dec
push
xor
adc
test
repz
out
dec
cmp
sub
insl
jnp
shrb
outsl
inc
shlb
dec
movsl
push
sar
stc
sbbl
cmp
andl
mov
sub
inc
add
sbb
jle
mov
xchg
jge
fiaddl
sbb
push
dec
dec
push
test
cmp
out
lock
dec
test
inc
test
mov
jne
jge
adc
cmp
fists
adc
add
xor
cmp
mov
arpl
fcomi
scas
and
inc
jns
das
jne
mov
push
es
and
or
iret
lock
mov
imull
fistpl
adc
pop
icebp
mov
sbb
outsb
orb
jb
inc
xor
add
loopne,pt
cmp
pusha
imul
xorb
pop
loop
jl,pt
jmp
dec
lret
jo
jmp
enter
int
stos
push
rcl
xchg
mov
inc
imul
cmpsl
push
inc
xor
xor
clc
nop
and
jecxz
pushf
dec
test
insb
bound
lahf
mov
out
inc
push
cs
add
add
push
cmp
cmc
xchg
enter
add
lahf
addr16
icebp
mov
fnstenv
out
or
or
rol
sbb
mov
sub
mov
or
pop
and
add
pop
xchg
mov
pop
iret
stos
rclb
dec
enter
ss
lea
and
stos
mov
xor
xor
push
xor
mov
loopne
mov
fstl
push
xor
out
xchg
popa
ret
dec
sahf
enter
es
fdivs
stc
das
xchg
mov
in
subb
xor
lds
shlb
sbb
dec
jl
mov
push
aaa
clc
imul
pop
into
inc
cmp
mov
stc
inc
xchg
lahf
fdivrs
and
inc
iret
mov
popa
pop
and
nop
mov
rcl
stc
ljmp
jno
pop
in
add
ficomps
loop
xor
inc
sub
pop
fs
pop
push
fwait
into
out
xchg
cmc
std
sahf
rclb
xor
loop
mov
cld
scas
sahf
pop
sbb
divb
stos
imul
cmp
mov
test
dec
pop
inc
sub
into
loope
xchg
push
jbe
movsb
rclb
stc
add
push
xor
out
aam
inc
divl
jle
push
adc
and
fists
dec
inc
pop
push
sbb
adc
clc
sub
loope
push
xorb
lods
pop
je
pop
int
sahf
jmp
jge
and
push
pop
xchg
call
adc
pusha
cmp
test
shlb
inc
out
inc
jmp
call
jl
pop
jmp
mov
dec
cwtl
ds
jle
shll
out
movsl
jle
mov
sahf
inc
pop
and
xor
jb
movsl
jbe
mov
mov
rcl
ffreep
sub
iret
out
xchg
mov
dec
fidivrs
adc
in
cmp
push
lahf
es
xchg
dec
dec
cmp
mov
mov
lret
lret
es
lock
cmp
or
testb
out
andl
add
outsw
xchg
iret
mov
or
pusha
xor
push
jbe
sub
imul
stos
inc
inc
pop
test
adc
dec
mov
clc
inc
pusha
cmp
sti
insl
fmull
out
push
int3
iret
push
bound
lods
lcall
jne
out
sub
pop
aad
sbb
shlb
jbe
enter
or
jg
lods
sbb
imul
cltd
mov
bound
jecxz
xchg
ljmp
std
jns
xor
fs
jmp
inc
outsb
mov
mov
mov
xchg
pop
stos
std
enter
pop
imul
inc
jmp
cmp
into
xor
fs
pushf
pushf
scas
out
jnp
sbb
push
ljmp
or
les
pushf
mov
inc
pop
lea
out
dec
push
fs
and
dec
movsb
jae
add
xor
xor
shl
lcall
sub
xor
ss
cmp
adcb
sbb
test
dec
ljmp
and
int
arpl
sbb
jne
lret
sahf
leave
dec
mov
shr
add
js
pop
mov
xor
push
dec
adc
jno
gs
push
jg
clc
sbb
mov
test
sub
add
por
and
cmp
mov
stc
js
lods
pop
cmp
adc
mov
mov
or
mov
pop
push
xor
add
sub
repnz
cmp
roll
xchg
das
movsb
pop
pushf
jg
icebp
cmp
pusha
add
es
hlt
stc
ret
call
push
push
test
int3
aaa
add
adc
push
push
sub
xlat
and
leave
mov
jne
lcall
stc
pop
jg
inc
mov
sub
pop
mov
adc
xor
mov
loopne
outsb
or
and
add
insl
and
lahf
sub
sahf
adc
iret
cmpsl
xchg
inc
sbb
sbb
and
cmp
mov
int
dec
push
pop
xor
xlat
ljmp
jb
fisubrs
inc
dec
fnstenv
dec
pop
cwtl
adc
jmp
sti
divb
scas
in
xchg
lods
aas
and
sahf
sub
lcall
add
in
mov
pop
fwait
and
xchg
jne
add
sahf
adc
lcall
das
sub
cmp
arpl
pop
faddl
jge
xchg
pop
test
mov
stos
sahf
cmpsb
nop
popf
mov
loope
jae
mov
dec
repz
push
fcmovnbe
enter
paddq
out
xor
cmp
jmp
xchg
jb
lods
test
cli
and
jmp
jle
and
mov
add
inc
fwait
ss
std
jl
cmp
ficoml
xchg
andnps
dec
in
cmpsb
gs
into
and
pop
hlt
add
sbb
pushf
std
jl
adc
in
push
les
xchg
orb
mov
jne
mov
sbb
sbb
cli
add
mov
pop
push
jns
mov
push
int3
push
shll
inc
daa
pop
add
test
loopne,pt
pop
cmc
push
jecxz
ret
adc
pop
mov
aam
movsl
pop
lcall
lret
repz
daa
sbb
cltd
dec
xor
and
enter
xor
mov
mov
jnp
xchg
mov
mov
cmp
jae
or
inc
int3
mov
or
unpckhps
cmp
or
in
push
and
stos
add
xchg
mov
rorb
pop
in
sbb
xor
data16
push
xchg
insl
scas
sahf
xchg
pop
mov
jb
push
mov
xor
out
push
shlb
rcll
insl
test
sub
outsb
sbb
jle
push
imul
pop
je
dec
scas
cmp
adc
inc
push
repnz
jne
jge
sub
inc
les
movsb
add
in
push
dec
les
imul
fstps
mov
cmp
testl
dec
imul
bound
cld
sbbl
imul
adc
lret
cmpsb
adc
lock
cmpsl
lea
movsb
push
mov
popf
pop
out
iret
pop
in
pusha
dec
pop
inc
push
push
mov
test
xor
inc
jnp
pop
pop
pop
and
and
dec
aaa
pop
gs
js
mov
sahf
mul
mov
add
div
dec
popf
sbb
mov
push
leave
sub
into
pop
dec
nop
mov
pop
test
into
jo
inc
sbb
and
jns
xor
popf
lods
shlb
cmp
jle
inc
sub
push
add
inc
cmp
pusha
out
cmp
xchg
jae
pop
fwait
js
in
pop
fldenv
inc
mov
out
jno
pusha
dec
test
rclb
pop
loop
mov
int
in
jmp
jne
add
out
lahf
add
or
hlt
mulb
ss
and
cmp
jl
movb
xor
std
test
stos
cmpsl
frstor
mov
xchg
and
inc
mov
xchg
pop
cmpsl
inc
mov
mov
jg
add
xchg
inc
sub
adc
push
iret
leave
jle
xchg
imul
push
cmpsl
xchg
xchg
divl
popa
orl
icebp
inc
cmp
add
sbb
mov
mov
xchg
lahf
ja
ficompl
mov
jmp
sub
lods
jbe
adc
stos
testl
mov
nop
movsb
faddl
loopne
mov
loope
testb
jo
bound
roll
arpl
lods
mov
inc
or
xlat
out
call
outsl
jg
sbb
mov
cltd
xchg
cmp
sbbb
add
xchg
cmc
and
or
test
add
clc
pop
push
pop
shlb
cmc
cmp
fimuls
notl
fists
pop
movl
les
xchg
push
sti
pop
fidivrs
add
aaa
out
or
out
add
inc
scas
je
vmaskmovdqu
nop
mov
mov
shrl
sbb
push
push
test
hlt
movsb
dec
inc
andb
out
fstl
pushl
sbb
movsl
scas
enter
shrl
adc
xchg
xchg
mov
jno
sbb
dec
add
sbb
decb
adc
sbb
std
mov
jl
or
jl
shll
test
out
or
test
ret
adc
shrl
xchg
ret
je
sub
outsb
pop
dec
popa
lret
test
cmp
movsl
jp
repnz
inc
les
rorl
enter
stos
and
sub
inc
scas
aam
je
pop
inc
mov
pop
dec
sbb
bound
adcl
mov
push
push
sub
lock
dec
adcl
sbb
dec
mov
push
dec
je
xchg
or
or
xchg
loop
push
jne
imul
je
pop
and
cmp
pop
mov
mov
test
inc
lds
into
test
outsl
enter
fabs
sub
sbb
test
fsubl
sub
pop
ja
and
add
ds
inc
jae
add
cmp
mov
jb
pop
jle
sbb
stc
inc
divl
movsb
mov
xchg
sub
pusha
dec
je
push
subb
add
rolb
outsl
ljmp
lret
mov
push
ret
mov
dec
push
insb
shll
nop
push
mov
lods
incb
mov
repnz
lods
ret
mov
pushf
stc
and
popa
cbtw
repnz
jmp
push
fcmovbe
sahf
sbb
jne
inc
or
jnp
jmp
lods
dec
sub
nop
xchg
jbe
or
sbb
ljmp
fsubrp
jno
xchg
test
test
push
or
mov
xor
or
pop
jp
add
mov
test
inc
je
aad
and
ficompl
cmpsb
or
or
mov
pop
and
cs
pop
insl
ljmp
test
sub
clc
lods
and
pusha
inc
pop
cli
fistpll
cmp
outsb
or
cltd
mov
in
dec
sbb
pop
fcmovbe
movsb
pop
std
aaa
ja
lahf
jp
aaa
ret
jno
add
sarb
adc
movsl
sbb
int3
inc
lcall
shlb
push
jbe
adc
push
xchg
push
mov
rsqrtps
into
inc
clc
es
jmp
fcomip
or
cmc
jne
xchg
xor
out
inc
pop
in
hlt
jns
push
nop
cmovs
push
jno
mov
xchg
cmpsl
stos
pop
jecxz
imul
pop
add
movsl
cmp
outsb
cmp
iret
seto
sbb
push
and
subl
dec
out
push
sti
out
jo
pop
ret
inc
jg
sub
stos
lods
inc
rorl
xchg
int
xchg
rcrl
sbb
and
popa
enter
jns
xlat
popa
outsb
mov
je
push
xchg
inc
fisubrs
add
nop
push
pushf
cmp
pusha
cmpsl
mov
in
pop
dec
cmpsb
jle
push
imul
adc
mov
ret
mov
pusha
mov
mov
call
push
lahf
imul
loop
pop
repz
and
clc
push
add
test
jo
bound
lret
or
and
scas
test
adc
jbe
clc
insl
push
pop
push
mov
lds
xchg
mov
mov
popa
xchg
xor
stos
cwtl
ret
subl
sub
pop
inc
sbb
push
push
push
lock
dec
test
push
dec
mov
inc
jns
dec
cli
mov
fistpll
popa
jnp
and
sbb
xor
sub
cltd
popf
clc
das
add
jp
stos
in
and
sbb
movb
xchg
dec
jecxz
push
in
cli
shll
jnp
mov
add
mov
int
fcoml
repnz
xchg
loopne
cmp
sti
sub
xchg
sbb
pop
mov
sbb
addr16
mov
and
pop
repnz
mov
inc
int
jecxz
cmc
cmp
pop
daa
mov
adc
adc
cld
mov
pushf
daa
movsl
jmp
mov
jg
xor
jo
loope
jl
dec
mov
mov
pop
aas
jge
jno
inc
sti
xchg
dec
lret
cmc
push
movsb
push
jmp
ret
pop
pop
fnstcw
je
testb
push
cmpsl
stc
outsb
pop
xchg
dec
cli
cmp
mov
leave
add
jmp
and
push
pop
add
clc
mov
imulb
pop
mov
push
out
sbb
das
scas
xchg
aad
jb
inc
jbe
ljmp
inc
scas
fsubrl
sar
add
frstor
adc
movsb
lret
sahf
aaa
push
xor
sarb
nop
push
lods
xchg
pop
push
xorl
stc
fsubrl
mov
insl
movsl
sub
mov
sbb
movsb
inc
aam
ds
push
stos
push
and
call
or
mov
lea
cmp
outsl
push
popf
lds
jne
mov
inc
cltd
xor
mov
in
mov
clc
aas
adc
xor
jp
mov
cltd
and
mov
rcrb
xorl
test
je
xchg
test
jbe
jp
push
pusha
adc
mov
sbb
outsb
lds
sub
pop
leave
push
add
in
mov
mov
push
push
int3
xchg
scas
scas
movsl
xchg
cmpl
mov
mov
shll
pop
and
xor
sbb
xchg
xchg
into
stc
ljmp
adc
pushf
mov
in
stos
mov
pop
insl
pop
call
es
xlat
cli
fwait
es
pop
cmc
popf
mov
outsb
fwait
imul
pop
pop
inc
mov
lcall
shll
sbb
cmpsb
icebp
pop
rcrb
shl
dec
jecxz
push
jle
cwtl
xchg
adc
pop
push
pop
and
add
jp
push
xchg
jmp
mov
and
lcall
jno
cs
or
mov
sbb
cld
or
and
orl
loop
ja
test
iret
cs
xor
sbbl
and
xchg
pop
test
data16
add
emms
add
jnp
and
pop
loopne
push
nop
cli
insl
cmp
cmp
xorb
insl
shlb
jo
fnsave
mov
xor
loop
sti
xchg
cmpsl
push
rcrb
sub
stc
rcl
addr16
adc
jecxz
cli
or
bound
call
ss
ja
inc
adc
mov
pop
pop
popa
cmp
xlat
jbe
outsb
sbb
sbb
push
dec
mov
hlt
pop
pop
pop
xlat
hlt
dec
xchg
test
movsl
loop
fcoml
rclb
dec
pushf
inc
dec
aam
cmp
adc
xchg
add
mov
movsl
mov
dec
mov
call
icebp
mov
pop
xchg
mov
loopne
daa
in
fdivr
mov
and
mov
jmp
or
dec
ror
dec
mov
mov
dec
repz
adc
fldl
ljmp
jmp
jno
repz
popf
add
fwait
xchg
sbb
mov
mov
mov
loop
ja
jmp
jl
enter
add
or
int
inc
je
or
push
push
pushf
sbb
mov
jns
mov
or
sub
xor
movzwl
test
jne
ds
scas
ret
xor
movsb
add
std
xor
jbe
jmp
xchg
dec
and
cmp
jno
and
sub
sarl
cmc
fadds
data16
mov
mov
push
dec
ljmp
flds
sbb
fs
cmp
shll
sbb
fdivrl
mov
sub
nop
mov
call
xor
dec
iret
aad
sar
mov
in
in
xorl
jle
test
enter
and
mov
xchg
shlb
in
ds
insl
xor
loope
add
test
dec
cmpsb
xchg
cmp
inc
push
cmp
fs
js
aad
stos
inc
adc
pop
mov
and
cmpsl
dec
movsl
bound
dec
jb
fisubrs
daa
ret
int3
lea
aad
iret
cmp
movsl
es
push
dec
nop
inc
and
aaa
xchg
sbb
pop
popf
and
push
cmpsb
mov
cwtl
xchg
xor
push
addb
push
ja
aas
xor
or
sbb
arpl
mov
in
push
outsl
and
push
cld
popf
jge
sub
mov
push
dec
loope
xchg
pop
stos
jo
inc
in
mov
inc
sahf
scas
cmp
pushf
or
jns
sarl
int
fcomp
sbb
ss
ljmp
scas
es
cmp
jmp
or
outsl
mov
cltd
pop
xor
inc
mov
inc
aam
js
out
in
dec
arpl
add
cmpsb
pop
out
ret
sbb
ret
mov
inc
jle
xchg
fiadds
test
sbb
xchg
pop
sahf
mov
mov
rorl
out
xor
adc
stc
xchg
jb
sbb
loopne
push
bound
mov
fadd
bound
hlt
test
mov
add
js
adc
rcl
sbb
pushf
rclb
or
imul
sbb
movsb
pop
jp
mov
repz
cmpsl
icebp
or
dec
mov
sub
aas
jmp
cmpsl
dec
lcall
lret
cmc
bound
add
hlt
and
or
cwtl
scas
jmp
adc
xchg
insb
sub
adc
shr
sub
lea
mov
or
xchg
or
inc
mov
repnz
pusha
xor
lods
inc
mov
daa
je
ja
in
cld
xchg
jo
inc
xchg
popf
and
or
fs
testb
add
popf
shrl
xchg
clc
xchg
jmp
imul
add
test
push
lds
sti
lds
repnz
adc
imul
mov
and
mov
jne
push
sbb
push
jo
stos
pop
xchg
es
pop
inc
sbb
rcl
cmp
clc
or
cmp
cmp
sbb
aas
pop
ljmp
mov
sub
inc
imulb
xchg
adc
dec
adc
sbb
and
call
lea
nop
inc
imul
mov
adc
and
daa
les
fs
imul
adc
int
and
mov
icebp
mov
mov
or
mov
dec
mov
aam
pop
cmp
push
cmp
inc
dec
or
fsubrl
popf
in
daa
cwtl
imul
int
cmp
mov
jl
sub
aad
ret
pop
std
inc
add
ss
mov
xchg
shrl
cli
stc
sbb
rcr
outsl
fdivrl
add
xchg
insl
scas
inc
mov
inc
jnp
lds
push
mov
pop
jge
insb
push
mov
or
mov
cltd
lret
xchg
test
xchg
mov
loop
lds
or
cmc
sub
out
mov
sub
fmuls
jno
test
or
inc
decl
push
mov
pop
mov
mov
hlt
sbb
into
sub
cmp
out
jge
hlt
cwtl
aas
ljmp
pop
lret
pop
add
inc
push
mov
pop
into
cmp
sbb
ljmp
cmp
cli
mov
fincstp
filds
mov
scas
jle
aas
inc
icebp
push
dec
jecxz
movsl
enter
sbb
lcall
sbb
mov
sbb
fld
jno
inc
fnstsw
mov
mov
cmpsb
pop
xchg
inc
or
jno
push
loop
dec
sbb
lret
cs
push
jg
movsb
and
aas
cmpsb
ss
in
xchg
pop
sbb
leave
add
jne
bnd
inc
test
outsl
sbb
stos
rcll
popa
xor
ja
xchg
inc
jle
cmp
cmpsb
push
repnz
fwait
xchg
fcmovbe
add
add
push
mov
int
xchg
sub
pop
mov
insb
dec
loope
lods
mov
add
sub
jo
std
ja
dec
dec
sub
xchg
push
std
mov
pop
lods
imul
cwtl
rsqrtps
or
dec
sbb
orb
or
adc
lahf
push
scas
fsts
push
repz
xchg
adc
push
push
mov
add
add
xor
xchg
push
pop
icebp
mov
pop
dec
mov
clc
mov
dec
push
repz
cmp
dec
cmp
and
jne
sbb
jl
sbb
and
push
ds
dec
inc
stc
mov
sub
ror
mov
repz
dec
mov
insb
jnp
std
pop
inc
pop
fnsave
out
adc
pop
fidivs
movsb
inc
pop
std
xor
pop
cli
popf
or
jl
xchg
jno
in
mov
push
add
shlb
lock
jg
push
push
inc
lods
jp
imul
jecxz
cwtl
arpl
jle
icebp
and
inc
leave
arpl
jb
xchg
cmp
mov
ficoml
jmp
int
add
pop
loopne
mov
mov
jg
test
mov
add
fisubl
pop
stos
ljmp
lock
inc
cmovle
lcall
in
sub
xchg
push
push
cli
fstl
dec
mov
fldt
sbb
xchg
xchg
adc
clc
add
fldl
cld
push
push
lahf
inc
inc
in
scas
ret
xlat
mov
and
push
and
sub
dec
sub
pmullw
inc
ret
ds
cmp
sub
popf
jns
jecxz
inc
or
xor
mov
pop
in
sbb
adc
pop
orl
pop
jns
push
xor
test
pop
cmpsl
popf
cld
inc
sbb
dec
adc
and
std
pop
int
ror
ljmp
and
or
in
xor
ret
mov
xchg
rcr
adc
mov
and
cld
call
int
cli
pop
repz
sub
dec
pop
stc
xchg
imul
clc
sarl
jno
adc
ds
mov
out
aas
roll
mov
aas
popa
push
mov
push
dec
stos
mov
lds
fwait
cli
bound
loop
xchg
mov
push
or
jno
mov
pop
or
jbe
xlat
xorl
or
push
or
adc
inc
jecxz
aaa
add
sti
lods
jle
arpl
sbb
outsb
sub
je
insb
dec
movsb
sub
test
cs
and
jbe
rcll
ret
lahf
pop
ds
leave
or
push
or
aas
rcll
adc
aas
out
out
dec
jns
adc
loope
pusha
outsb
jns
mov
xchg
push
movsl
sbb
adc
and
xor
add
xchg
and
loop
sub
dec
or
adc
xlat
inc
jle
icebp
outsl
cli
into
mov
imul
stc
mov
jo
sar
cmp
push
mov
jge
jecxz
dec
mov
in
inc
push
insl
repnz
imul
sbb
mov
test
xchg
ficoml
pop
push
mulb
rcll
mov
mov
inc
adc
call
sbb
inc
pop
in
or
cs
jge
add
jle
scas
dec
mov
into
sub
lahf
mov
cld
xlat
push
scas
dec
mov
and
xchg
mov
test
aaa
aad
mov
jl
xchg
test
leave
cli
push
jae
insb
andl
repz
lea
insl
pop
mov
insl
mov
mov
dec
mov
mov
sub
jmp
iret
das
add
push
out
xchg
sbb
pusha
aas
mov
repz
cmp
fidivrl
negl
jnp
mov
dec
adc
and
fwait
int
mov
mov
xchg
sbb
fmull
jae
pushf
ret
sbb
mov
pop
sbb
sbb
insl
aam
scas
pop
nop
das
xor
inc
mov
mov
int
fmul
mov
in
femms
pop
std
scas
and
xor
insl
repnz
call
xor
pop
cmp
ret
jbe
cs
push
pop
dec
cmp
jnp
outsl
andb
xor
cmpsl
es
add
fwait
mov
mov
test
or
jle
in
inc
outsb
xchg
pop
mov
out
outsb
sub
out
js
aaa
jp
sahf
ja
cmp
mov
test
movsl
push
hlt
inc
xchg
orps
dec
sbb
add
cmp
or
in
mov
stos
xchg
pop
notl
sub
sarb
lods
pop
lahf
movsb
stos
out
add
ror
negb
push
xor
jno
sbb
decb
push
add
pop
push
cmp
in
jmp
dec
cmp
shrb
js
addr16
pop
lret
adcb
call
xchg
arpl
pushf
and
lods
sbb
ja
lcall
out
mov
ja
cli
dec
mov
lock
mov
push
mov
mov
cli
cltd
inc
xchg
enter
mov
mov
pmulhw
jns
add
js
notl
lcall
add
add
adc
movsl
leave
iret
ret
imul
lods
pop
and
mov
mov
mov
test
xor
xchg
aam
mov
movsl
sbb
and
xchg
fwait
lods
mov
xor
cmpsl
bound
fdivrs
orl
nop
out
jge
push
cli
test
push
mov
xor
sahf
dec
inc
jmp
xchg
pop
mov
shl
pop
cld
icebp
inc
cmp
jecxz
sbb
xor
sbb
mov
or
stos
adc
test
add
xchg
or
test
test
mov
pop
xchg
lock
leave
xadd
je
adc
clc
lods
add
dec
inc
jp
ret
insb
pop
sahf
dec
mov
mov
outsb
test
je
js
sbb
out
mov
adc
das
dec
gs
sti
cmpsb
jl
push
pop
or
dec
scas
mov
mov
cmpsl
sbb
and
xor
data16
aaa
or
xor
and
lahf
int
cltd
pop
movsb
int
mov
pop
sub
mov
push
jecxz
mov
mov
sub
cmc
adc
or
lods
mov
loop
mov
loop
in
xchg
inc
mov
pop
inc
push
ret
out
pop
lret
cmpsb
inc
incb
movsl
in
aad
or
iret
pop
push
adc
mov
adc
out
pop
xor
xor
sub
insl
mov
pop
mov
and
push
out
incb
push
jp
xor
pop
add
push
out
dec
cmpsb
mov
jle
stc
dec
ret
cmp
dec
xchg
fs
nop
sub
sbb
rclb
mov
icebp
mov
jmp
in
pop
pop
nop
jmp
out
adc
pop
cmp
das
xor
cwtl
sub
xor
mov
mov
aam
cmp
cwtl
dec
icebp
das
fmull
xchg
xchg
jnp
test
mov
aaa
addr16
dec
adc
mov
sarb
and
lret
mov
fstpt
sub
pop
cltd
mov
pop
xchg
test
jns
cmp
psubd
xchg
cli
inc
out
test
scas
in
or
iret
push
dec
in
lock
or
roll
jle
adc
dec
mov
dec
rcl
inc
push
cld
nop
push
jne,pn
adc
cmp
and
mov
push
mov
dec
call
adc
sahf
out
hlt
dec
and
stos
movsb
filds
out
mov
repnz
and
subl
inc
mov
in
lret
add
imul
out
mov
dec
ljmpw
sbb
pop
adc
out
cli
popa
cmp
lods
sbb
pusha
push
sbb
push
pop
pop
push
adc
shrl
pop
loop
scas
idivb
mov
testl
lcall
cli
push
loopne
pop
and
enter
cmp
xchg
stos
sub
clc
cmp
mov
testb
mov
sub
std
pop
mov
ds
adc
loopne
xor
mov
xchg
loop
movl
daa
mov
mull
xchg
sbbb
bnd
faddp
and
mov
adc
xchg
or
sub
push
sub
adc
and
jmp
stos
lods
outsb
fwait
adc
mov
xchg
imul
mov
jno
gs
push
jp
fidivrl
ja
leave
sbb
xchg
xchg
ljmp
and
jecxz
push
adc
ret
xor
mov
es
lock
popf
xchg
adc
fs
jns
dec
or
lods
iret
pop
pop
lods
insb
das
mov
xor
fcmovu
mov
inc
test
push
pop
push
lock
loop
pop
pop
lea
es
addr16
and
clc
leave
and
dec
cwtl
ljmp
mov
mov
inc
add
lods
add
mov
shll
shlb
cli
outsb
neg
dec
push
push
popf
pop
push
loop
sbb
rorb
hlt
test
xor
cmpsb
call
imul
pop
je
pop
adc
sub
sub
es
cmp
jne
pop
inc
stos
and
imul
std
das
push
pop
jo
es
pop
movsl
call
in
cmp
mov
push
fisttpl
fcoml
xor
mov
sarl
jno
aad
lods
xor
sub
cmpsl
test
aad
enter
inc
xchg
pop
push
fildl
jge
push
sub
add
xchg
xchg
mov
andl
out
jp
call
add
inc
lret
or
mov
pop
aaa
mov
adc
sarb
push
lods
roll
sub
dec
or
adc
jns
jne
pop
and
stos
add
and
rclb
int3
sbb
mov
sub
jp
das
jl
pop
ss
shrl
inc
and
adc
ret
test
sti
pop
jne
test
leave
fidivl
ret
mov
test
insb
sub
xchg
adc
xchg
lcall
aaa
add
mov
sub
push
idivb
jns
inc
push
bound
daa
repz
and
and
imul
scas
push
sahf
add
les
sarb
dec
sub
add
adc
dec
jne
inc
out
cli
lret
out
dec
pop
xor
test
enter
fsubrs
push
pop
pop
xor
jns
mov
add
mov
xor
lods
pusha
or
xchg
inc
sub
gs
ss
into
mov
sbb
rcll
jl
aas
cltd
mov
and
daa
int3
repz
es
mov
bound
dec
fs
fsubrs
pop
jmp
inc
arpl
repz
pop
inc
sub
ret
pusha
mov
mov
mov
and
push
rolb
mov
add
sub
aas
pop
mov
xchg
mov
push
mov
jg
movsb
lea
jno
inc
mov
insl
cld
movsl
and
lcall
pop
mov
push
into
arpl
mov
jae
enter
cltd
push
cmp
jnp
rep
je
sub
mov
addl
sub
pop
outsb
xor
xchg
push
mov
jbe
cs
cltd
adc
test
rorl
inc
jbe
sub
rep
sbb
ja
lahf
inc
fisubrl
push
pop
dec
ss
jmp
insl
int3
inc
out
mov
ja
test
ss
pop
sbb
add
jg
lock
dec
std
dec
inc
outsl
loop
scas
loopne
clc
lret
cld
loope
inc
in
subl
andl
loopne
xchg
das
or
aas
inc
lret
or
jnp
mov
cmp
insb
test
inc
enter
mov
add
push
and
push
adc
ljmp
pop
out
aas
aaa
mull
sub
push
xchg
cld
cltd
enter
aam
dec
xchg
mov
jnp
xchg
xor
jge
lea
add
fbstp
push
addr16
fbstp
inc
les
jae
or
les
cs
les
mov
scas
sbbl
stos
inc
pop
lock
mov
inc
mov
lret
lock
push
ja
inc
mov
push
shrb
lock
ret
sbb
pushf
jo
shll
pop
sarb
lret
dec
lods
rcrb
pushf
add
shl
mov
adc
js
mov
mov
int3
add
push
jns
inc
cwtl
xor
mov
and
jmp
bound
arpl
mov
dec
and
adc
mov
es
out
lea
lcall
fcoml
adcb
sbb
mov
movsl
js
sar
mov
lds
lods
enter
cmp
sbb
jns
out
test
in
movsl
dec
sbb
gs
pop
shll
xchg
mov
dec
ja
sti
and
out
fdivl
mov
cmc
sbbb
mov
test
sub
and
add
sub
lock
aad
orb
xchg
xchg
out
mov
out
inc
jbe
loop
nop
scas
xchg
pop
push
adc
lds
stos
xchg
aas
out
pop
xor
ret
lret
dec
les
jl
mov
or
fisubrs
push
sub
sbb
sbb
dec
sbb
xchg
lds
movb
int
xchg
loop
push
mov
es
out
pop
push
xchg
xor
repnz
xor
lock
addr16
lea
xlat
xor
sbbl
or
in
imul
jp
nop
sbb
sub
call
jb
fwait
in
sub
outsl
jmp
mulb
lock
ja
and
push
dec
and
inc
in
jbe
mov
es
std
insb
adc
sub
orl
inc
lret
movsb
movsl
in
repz
lods
imul
adcb
sub
mov
or
test
lds
lret
dec
movsl
adc
fildl
dec
ja
inc
stc
pop
mov
push
aad
es
das
movl
mov
mov
push
ret
fistps
dec
pop
jge
inc
xchg
push
cmp
dec
pop
jmp
mov
loope
jno
mov
pop
jno
mov
aam
sbbb
and
sbb
inc
jns
or
andb
push
push
mov
push
cmpl
cmp
or
into
mov
cmp
bound
xchg
ds
test
stos
fnsave
stos
mov
insb
mov
out
and
add
pushl
xchg
clc
imul
inc
popf
xor
int
outsb
dec
and
fbstp
pop
scas
leave
push
mov
or
mov
outsb
mov
ret
jae
pop
pop
insb
popf
adc
add
rcrb
cld
sbb
mov
int
cmpb
sbb
adc
inc
jl
xchg
cltd
adc
pxor
mov
int3
aam
push
xor
inc
cmpsb
iret
iret
call
mov
xor
cmp
outsl
out
jmp
and
dec
outsb
dec
into
sbb
movsl
push
aad
call
js
mov
pop
lds
loop,pt
push
xchg
dec
or
movaps
push
push
call
jns
shrb
pop
clc
mov
fsincos
sub
mov
jne
test
addr16
stos
cmpsb
mov
mov
xchg
cmp
lea
mov
pushf
jge
fwait
xor
std
cmpl
sub
pop
sub
hlt
pop
cmp
dec
push
mov
add
push
testb
push
mov
mov
cwtl
inc
mov
push
mov
mov
rcrb
push
lea
sbb
push
rcll
fsubrp
push
xchg
jecxz
cmpsb
mov
jl
ficompl
sbb
ficompl
mov
or
cmc
movsb
push
xor
or
or
mov
xchg
push
push
pop
mov
test
ss
lock
mov
and
fcoms
call
bound
outsb
repnz
mov
push
stos
cmc
or
xchg
push
push
mov
inc
adc
dec
daa
dec
fcomp
in
cld
dec
inc
add
ss
mov
aas
cmp
gs
xchg
fstps
adc
icebp
iret
cltd
addb
jo
int3
cmpl
xchg
fsubrp
sub
push
aad
mov
andb
stos
repnz
pushf
leave
dec
in
test
inc
pop
jp
fldt
jbe
xchg
fisubrs
mov
lcall
inc
enter
or
push
inc
dec
pop
es
jns
inc
sub
jl
push
mov
xlat
inc
ljmp
or
das
sub
stc
sub
mov
adc
loopne
into
mulb
cmp
aad
lods
xchg
dec
push
jo
jp
cmp
cwtl
mov
cmpsl
and
jecxz
repnz
add
mov
lret
fwait
sbb
jg
sbb
pop
in
lock
outsl
mov
inc
add
pop
jecxz
loopne
popa
out
xchg
adc
xchg
cmpl
sbb
fucom
clc
add
cmp
xchg
in
and
fisubl
aad
stc
inc
pop
push
xor
scas
test
inc
aam
popl
test
notl
aaa
lods
pop
dec
inc
xor
dec
add
or
xchg
outsb
inc
and
xchg
xchg
loope
inc
dec
or
addl
bound
add
aad
and
out
sub
aad
aas
mov
ret
sub
mov
jnp
sahf
push
jo
xchg
jb
lods
inc
es
add
out
into
insl
cmp
ds
mov
shl
push
cmc
pop
mov
pop
add
icebp
push
arpl
mov
cmp
sbb
mov
sub
ljmp
jp
xabort
or
hlt
mov
or
sub
mov
cwtl
push
lret
je
or
push
mov
scas
pop
sbb
jl
sub
ret
xchg
pop
jae
pop
jp
cmp
out
pop
rcrl
lret
fisttps
ret
pop
mov
cmpsb
jns
andl
cmp
iret
icebp
mov
enter
inc
mov
lcall
mov
add
adc
dec
mov
enter
ss
test
out
jg
xor
nop
add
sbb
inc
shll
or
aam
loop
and
cmpsb
cmp
in
add
jg
mov
in
arpl
imul
add
pop
aad
test
add
imul
aad
mov
loop
jmp
ret
aam
push
sub
pop
pop
rcll
push
test
mov
outsb
cmpsl
add
mov
sub
mov
inc
mov
and
or
idivb
je
test
mov
cld
aas
xchg
xchg
jmp
enter
into
cmp
mov
arpl
inc
les
loop
ret
pop
int3
mov
mov
pop
cmpb
ret
cmp
push
sbb
add
ja
lret
or
dec
mov
fsubl
inc
xor
xchg
pop
jbe
push
cmpb
mov
lcall
adc
cmp
shlb
pop
sti
lods
cld
xchg
outsb
xchg
push
cmp
jecxz
xor
addl
cld
inc
or
mov
incl
scas
jns
stc
fdivrl
jnp
jge
enter
and
lret
mov
ja
int
mov
rcl
pop
xchg
mov
mov
je
jne
cmp
pop
xlat
aam
arpl
push
fildl
mov
pop
pop
dec
aam
inc
and
fmull
mov
addr16
cmp
loop
stos
in
adc
add
cli
bound
cmp
mov
xor
dec
and
dec
fistpl
sbb
movsb
sbb
inc
rol
fcmovbe
jb
push
add
in
cmp
dec
sti
xchg
pop
out
imul
es
xchg
cs
add
lret
cmp
and
or
add
lcall
push
pop
xor
jg
pop
rcll
push
cs
cmp
in
mov
cmp
adc
jae
xchg
inc
loop
shlb
push
add
outsb
cmpsl
arpl
out
push
daa
shlb
dec
and
jo
shlb
mov
adc
aaa
and
mov
ret
mov
mov
mov
push
sub
jae
push
aas
mov
xlat
lahf
popf
in
xchg
daa
scas
sub
sbb
lods
mov
mov
fnstenv
mov
mov
into
pop
pop
mov
cs
std
ret
or
loope
movsl
sub
mov
test
orb
dec
loope
dec
data16
jg
jge
insb
mov
es
out
sub
jg
sbb
jb
shrl
std
pop
lock
xchg
lds
xor
mov
scas
mov
mov
rorl
cmpsb
clc
or
or
movsb
std
in
fsts
jmp
push
sub
cmp
mov
imul
dec
fsubrl
xor
imul
jl
out
test
mov
jb
xor
mov
sbb
stc
in
push
dec
inc
cltd
rorb
mov
pushf
movsb
pusha
jl
sbb
mov
mov
jo
mov
mov
mov
jl
inc
sub
adc
lret
push
sbb
fnop
sub
push
into
adc
or
mov
call
fwait
pop
jmp
or
xchg
int
lret
std
out
dec
or
mov
call
rclb
pop
lods
rolb
sub
xchg
nop
jae
test
movsb
inc
out
pop
in
out
and
adc
mov
push
jo
movsl
pop
push
push
pop
adc
scas
jb
in
jg
pop
and
lods
push
xchg
or
in
jno
loopne
xor
mov
push
xor
jge
les
sbb
sar
sub
lods
push
ds
push
adc
imul
in
sbb
notl
gs
popa
ret
add
loope
sub
mov
sbb
dec
mov
out
roll
hlt
cwtl
rorb
xchg
sbb
add
push
xchg
push
jl
push
lret
scas
or
adc
pop
push
js
xor
enter
nop
cmp
movsb
in
lds
aam
pop
pop
jle
cli
cmc
or
cmc
cltd
fisubrl
jo
mov
sub
mov
jg
arpl
mov
dec
inc
nop
sbb
push
mov
mov
jbe
iret
std
and
lock
clc
mov
cld
stos
dec
imul
fdivl
movsl
mov
mov
bnd
fistpll
dec
hlt
and
push
sub
mov
out
ljmp
sub
leave
repnz
cmp
xchg
mov
loop
fisttpl
or
xchg
mov
fwait
test
inc
loopne
sti
mov
mov
das
daa
daa
jmp
mov
and
out
pop
ds
and
or
and
cld
movsb
mov
inc
shrl
fsubp
gs
test
lret
in
xlat
jle
cli
sub
mov
leave
push
test
scas
cmc
bound
mov
mov
xor
mov
je
inc
push
clc
xchg
stc
out
orl
push
xor
add
push
push
and
jns
scas
enter
and
lcall
sub
andb
enter
lahf
adc
mov
dec
inc
pextrw
orb
inc
iret
or
sbb
fwait
jno
in
sbb
mov
cmp
pushf
lods
pmaddwd
stos
mov
test
sbb
dec
bnd
fists
test
cmc
push
ja
imul
and
fldcw
add
hlt
loopne
int3
xchg
adc
fs
fistl
outsl
test
jno
out
loopne
pop
insl
jbe
jo
es
pop
push
ds
dec
add
sbb
or
fstps
leave
push
fs
add
shrl
dec
xchg
lahf
ljmp
je
orl
mul
frstpm(287
filds
mov
gs
and
and
push
cwtl
pusha
pop
outsl
std
in
jb
push
or
mov
xor
push
das
pushf
jge
fwait
sti
adc
into
repnz
ljmp
mul
push
out
int3
aas
dec
fcompl
outsl
testl
das
cmp
dec
and
or
mov
cs
mov
xchg
lods
xchg
call
xor
xchg
rcrb
gs
push
inc
jo
or
mov
add
fcompl
gs
lock
test
jp
jmp
and
jo
adc
xor
mov
mov
iret
movsl
ret
xchg
out
push
and
out
jne
inc
or
mov
lret
push
movsb
push
or
mov
lea
push
sub
cmp
nop
push
pop
mov
cmp
insl
jnp
mov
mov
aam
sub
xchg
xor
xor
xchg
ret
in
sbb
or
adc
mov
bound
jge
fdivs
shlb
sbb
pop
pop
or
clc
jb
rcrb
xor
outsb
fildl
xorl
test
inc
sti
mov
icebp
inc
fwait
call
sub
ret
cmp
mov
pop
cli
loop
movsl
sarb
push
in
loop
rcr
pop
jne
and
neg
mov
fisubrs
sbb
es
sarl
movsb
out
ret
int
adc
fsts
add
or
and
jnp
fisubrl
and
adc
mov
push
fcmovnb
loop
xchg
adc
in
outsl
pop
pop
lods
push
andb
push
inc
int3
outsl
decl
inc
lock
outsb
cwtl
rcrb
pop
add
out
mov
pop
sbb
xor
imul
pop
aas
in
sub
iret
add
add
pop
and
dec
sbb
mov
hlt
lds
inc
inc
add
outsl
push
stos
jle
mov
je
sti
inc
lds
pop
rorb
gs
and
xchg
lcall
push
clc
mov
sbb
pop
ja
insl
shrb
push
rcrb
mov
fld
stos
repz
aam
sub
cmpsl
mov
rolb
popa
jns
push
icebp
push
sub
fbstp
xchg
aad
lds
sbb
mov
fsubrp
push
pop
mov
jbe
adc
or
push
out
popa
xchg
sahf
inc
test
popf
or
ret
xadd
rclb
push
jns
mov
shll
scas
sub
insl
mull
mov
mov
xlat
ret
push
and
inc
int
push
add
lds
sub
mov
leave
xchg
je
ljmp
mov
test
and
lret
inc
mov
andl
into
lods
imul
push
dec
nop
sbbl
fisttpll
jmp
repz
mov
lcall
inc
pop
imull
dec
inc
fdivr
lds
lods
aam
cmp
mov
pop
adc
jns
push
adc
cmc
or
shlb
sti
shr
mov
add
stos
add
inc
mov
or
fidivs
hlt
and
sbb
xor
out
mov
movsb
test
adc
xchg
pop
dec
loope
fcmovb
mov
dec
rcrb
test
push
fnstcw
push
nop
mov
push
push
sahf
cmp
pop
mov
mov
popa
mov
jbe
adc
fstpt
fisttpl
repz
xchg
sub
dec
out
loop
pushf
lea
ss
lods
cmp
pop
adc
sub
aad
cmp
inc
adc
hlt
jge
repz
sbb
cmpsb
popl
sub
jns
or
imul
mov
xor
push
aam
in
call
inc
arpl
jecxz
insl
dec
dec
pop
mov
and
insl
leave
nop
das
jnp
mov
iret
inc
outsl
xor
adc
lret
rcrb
jp
pop
add
decb
leave
push
inc
mov
cmpsl
imulb
adc
pushl
xor
add
pop
loope
cld
repz
xorb
mov
pop
iret
divl
inc
fwait
jge
cmp
pop
sti
sub
dec
divl
pop
leave
fidivrs
pushf
pusha
fidivs
mov
fcmovnbe
xchg
mov
and
daa
sub
xchg
jnp
or
push
cli
fimull
and
sbb
cmp
insb
rcll
xchg
shr
jno
inc
cmpsb
imul
add
lods
dec
ret
sub
inc
sti
roll
cmpsb
sub
pop
int
and
out
mov
pop
xor
pop
lds
es
pop
adc
mov
xchg
inc
xchg
push
cmp
pop
sub
push
sub
jne
push
xor
dec
cmp
push
sbb
and
cmpsb
jmp
add
mov
mov
jp
int3
mov
mov
jecxz
cmpsb
fiaddl
ret
push
aas
subl
sub
daa
pop
leave
sahf
xlat
xor
insb
or
xor
xchg
stc
push
and
scas
popl
fiaddl
dec
mov
lods
stos
fistps
cmp
shrl
adc
les
sbbb
dec
jl
push
xchg
fimuls
imull
jb
es
roll
and
pop
mov
jno
inc
faddl
out
xor
sbb
sub
xorb
lret
and
aad
mov
or
xor
cmp
or
mov
adc
xchg
inc
aas
mov
lds
mov
lea
leave
cs
xor
ljmp
bnd
add
outsl
cmp
xchg
mov
jbe
inc
mov
xchg
cs
or
add
sbb
out
mov
das
in
ljmp
mov
push
fcomps
mov
or
xchg
outsb
rcrl
xchg
lret
mull
sub
lds
pushf
js
xchg
push
jl
inc
push
push
or
mov
sbb
cmpsl
shlb
dec
push
mov
pop
enter
dec
subl
je
arpl
sbb
push
mov
in
cmpsl
sub
mov
lret
cmp
adc
imul
mov
pusha
addb
jmp
out
fsin
pop
push
dec
rolb
sbb
cmpps
inc
pop
fwait
cmp
ljmp
in
adcl
xchg
jg
mov
xchg
cmpsl
sti
imul
stos
flds
clc
scas
push
add
rclb
inc
lock
push
mov
cmp
popf
push
xor
gs
pop
mov
iret
rcrl
addr16
icebp
ljmp
push
sub
sub
dec
test
push
inc
inc
ret
jno
out
lcall
add
lods
fwait
loop
clc
sbb
incb
or
jo
pop
push
or
jle
jb
mov
out
pop
push
popf
mov
mov
int
xchg
pop
mov
fs
ficompl
adc
mov
fnsave
dec
add
xor
das
ljmp
je
dec
imul
fstpt
mov
in
test
je
inc
ds
add
and
pop
fwait
cwtl
adc
arpl
orb
cmp
xchg
jne
mov
push
sbbl
jbe
push
repnz
jge
ljmp
addr16
inc
xchg
repz
fstpt
sahf
jg
and
ficoml
mov
xchg
outsb
out
nop
jno
arpl
dec
inc
sub
dec
cmpsl
stos
pop
insl
data16
scas
andl
stos
mov
repz
mov
lods
adc
mov
sub
sub
mov
movsb
gs
xchg
neg
in
push
subb
jnp
inc
mov
fwait
add
pop
pop
jae
mov
mov
adc
leave
mov
pop
shrb
es
aam
jb
push
sub
adc
arpl
cmp
call
dec
adc
xor
fwait
mov
mov
cmp
ljmp
jle
into
in
adc
stc
xor
xchg
int
and
loope
or
ja
sub
popa
jecxz
in
stos
push
sbb
inc
or
movsl
mov
fadds
or
iret
ss
fdiv
add
filds
jo
mov
mov
dec
inc
lret
imul
mov
add
jmp
adc
cmpl
test
dec
pop
shlb
es
dec
jb
sub
add
push
lahf
cmp
rolb
mov
or
sbb
cmovge
sbb
aam
xchg
push
dec
int
mov
into
sub
ror
add
test
fnstcw
xchg
or
dec
push
mov
iret
and
mov
mov
pop
mov
pop
clc
mov
dec
roll
adc
lcall
jp
into
pop
lret
aad
cli
or
movsl
mov
jno
call
inc
sub
sbb
jg
lret
jp
stos
int
repnz
and
cld
mov
add
sbb
mov
enter
xor
insb
mov
lea
mov
ja
insb
je
scas
loope
popa
jb
enter
sbb
imul
lret
mov
clc
aam
popf
sarb
je
mov
repz
mov
fadds
leave
mov
sub
and
inc
loope
pop
mov
movsl
cmp
xor
xchg
inc
sub
add
mov
out
jecxz
xor
pop
push
sbb
jle
les
or
and
mov
sub
sub
arpl
aad
ror
scas
sub
dec
outsl
bound
dec
jnp
jns
addr16
dec
mov
sarb
mov
rcll
lea
or
ret
stos
sets
stos
mov
arpl
iret
pop
pusha
test
add
or
dec
xor
mov
popf
jp
cli
cmp
ret
out
pop
in
cmpsl
push
push
push
jns
pop
pop
sub
inc
cmpsb
xlat
sub
mov
cmovp
cmpsb
add
out
ss
call
lret
pushf
xchg
add
dec
sub
mov
lds
sahf
xchg
pop
cmc
pop
or
xchg
mov
cmp
cmp
xorl
aad
dec
outsl
push
inc
mov
cmpsl
sbb
stos
stos
xchg
xor
adc
les
and
xor
jns
movsb
jl
fsubrl
xor
inc
xchg
std
mov
xchg
dec
cmp
mov
xlat
jg
arpl
push
push
sbb
in
xchg
scas
imul
inc
sbb
cmpsb
repz
mov
jl
inc
in
int3
xor
ds
xor
push
inc
cmp
aam
push
nop
idivl
int
aam
add
mov
xchg
fs
mov
lcall
rclb
sbb
cmp
out
jle
pop
sbb
pop
xlat
or
imul
out
fisttpl
inc
jae
hlt
cmp
loop
add
or
mov
je
mov
movsl
stos
outsb
pop
add
mov
xchg
lret
daa
and
pop
pop
ret
xchg
xlat
test
inc
and
sub
insl
lods
pop
jo
jno
or
leave
aaa
aam
repnz
fidivs
repz
leave
pusha
add
pushl
jecxz
jecxz
xor
sti
pop
nop
je
and
cltd
fildl
lods
mov
mov
cmp
jae
sahf
or
loop
or
dec
fs
aaa
repz
mov
sbb
inc
mov
cmp
test
mov
jne
in
dec
and
dec
imul
mov
inc
mov
push
pop
or
fistpll
push
dec
jo
fistps
lock
ljmp
pop
scas
dec
mov
pop
cli
xor
mov
inc
and
hlt
clc
xor
ret
xchg
call
xchg
repnz
xchg
cwtl
jle
lods
mov
xor
lahf
mov
inc
pop
mov
cmp
int
mov
lahf
das
inc
mov
loopne
les
mov
cs
sahf
sbb
idivl
popa
mov
push
fs
push
dec
jne
cld
out
inc
push
cmp
ret
sbb
mov
xor
xchg
add
sub
push
clc
push
shlb
push
adc
into
rorb
jecxz
aas
lret
pop
sbb
mov
rolb
in
stos
sbb
jmp
daa
dec
daa
test
add
addr16
divl
stos
pop
jg
adcb
jae
adc
inc
adc
jl
fmul
push
mov
stc
push
movb
mov
and
mov
xor
jge
jecxz
xchg
xchg
push
and
clc
iret
jne
popf
or
dec
icebp
jnp
mov
popa
insl
dec
insl
fsubrl
push
inc
cmpsb
out
arpl
pop
mov
gs
testl
bound
mov
sub
cld
sub
cmp
stos
inc
jmp
jl
add
inc
adc
mov
jmp
sbb
xlat
lock
adc
xchg
jns
cld
mov
into
xchg
and
rorb
adc
movsl
cltd
xor
dec
jmp
scas
mov
lret
test
sub
pop
aaa
xchg
xlat
sbb
lret
bound
les
push
icebp
jae
sub
popf
adc
dec
scas
scas
sub
jne
xchg
loopne
sub
pop
lcall
out
mov
pusha
mov
repz
mov
ss
jnp
jns
aas
inc
pop
das
faddp
cmp
mov
ds
shlb
popa
out
or
mov
test
out
daa
sarl
push
arpl
subl
dec
aad
js
aas
out
add
setle
adc
mov
add
add
xor
jo
fnstcw
xchg
or
push
pop
mov
dec
fsubp
pop
dec
and
rcrl
push
jg
nop
pusha
pop
out
add
negl
mov
lea
mov
sub
jns
outsb
push
mov
inc
push
push
jno
jno
mov
int
out
subb
xlat
xchg
clc
cmp
aaa
sbb
pusha
ret
xchg
movsl
cmp
aam
mov
fwait
inc
mov
lret
mov
or
mov
aas
lea
fucomp
mov
mov
push
pop
movsl
sub
ds
js
push
or
sbb
push
js
push
push
imul
stos
call
outsl
inc
mov
movsl
xchg
mov
mov
jae
lods
mov
in
sbb
mov
dec
mov
push
mull
ja
jecxz
add
sub
or
cmp
sarb
or
out
add
pop
cmp
subb
cmp
stos
xchg
add
movsl
cld
sub
mov
mov
into
mov
dec
ret
pusha
mov
int
in
in
std
fldenv
or
int3
loope
add
and
cmp
aam
xchg
shll
or
jae
cmp
in
pop
or
dec
sbb
lea
insl
int
imull
jl
mov
imul
movsl
mov
mov
push
loop
and
add
enter
call
mov
mov
jmp
andb
rorl
dec
ss
filds
ja
rcrb
loop
mov
mov
and
add
fildll
in
xchg
sbb
mov
mov
mov
sbbb
jbe
jo
adc
mov
mov
push
mov
hlt
and
lea
pop
dec
or
sub
rcll
sbb
cmp
fnsave
rorl
xor
andb
test
fwait
out
jbe
movsb
xchg
jno
mov
loop
sbb
add
dec
sub
gs
cld
mov
jg,pt
call
push
sub
hlt
lds
mov
insb
shll
cmp
clc
pop
sbb
push
dec
icebp
mov
pop
jne
xlat
lds
add
insb
out
mov
stos
mov
sbb
cmp
push
dec
push
aas
stos
xchg
call
cmc
sahf
enter
jmp
xchg
cwtl
jl
int
push
xor
fdivr
repz
mov
out
push
lret
xor
push
add
je
lods
cmc
push
and
push
and
lds
inc
pushf
ret
rorb
push
or
push
jo
rcr
jae
js
loopne
xchg
rorb
jge
pop
pop
sub
dec
mov
das
xor
cltd
pop
pusha
loope
push
repnz
xor
mov
adc
loopne
std
fcoml
jns
mov
jmp
pusha
sub
out
sbb
icebp
xchg
xor
cmpsl
or
fcompl
cwtl
mov
adc
ret
push
mov
aam
test
push
xchg
ret
xlat
shll
push
cmpsl
ficoml
lods
and
inc
aam
push
icebp
jno
sbb
xchg
sbb
repnz
jo
sub
and
adc
push
dec
subb
pop
push
rorl
aaa
mov
mov
xchg
sbb
or
add
push
cmc
testb
lods
cmp
push
scas
pop
data16
loopne
inc
imul
in
int3
outsl
add
std
pop
int3
cmp
fucomip
add
mov
hlt
dec
mov
andl
lahf
mov
or
add
xchg
out
inc
adc
cmc
jnp
jmp
jo
cltd
or
xor
xor
aaa
rcrl
sub
xchg
nop
lahf
stos
jl
stc
mov
enter
loop
sbb
mov
push
lcall
jle
cltd
imull
inc
int
jmp
out
lea
in
mov
or
roll
mov
mov
imul
out
je
sahf
dec
cmpsb
jg
cmp
mov
mov
cltd
enter
test
dec
or
xor
js
cwtl
je
sub
subl
cld
xchg
sahf
add
push
sarb
sbb
sub
mov
cmpsb
jg
xchg
stos
sarb
push
std
ret
jmp
cmc
and
test
push
jae
pop
mov
aad
filds
push
lods
cltd
movb
in
inc
cld
outsl
adc
mov
mov
test
mov
fsubp
jl
andb
sub
insl
testl
xchg
sub
stc
inc
mov
call
or
push
push
and
and
in
lcall
mov
jp
dec
clc
scas
aad
adc
dec
popf
jbe
pushf
sub
adc
mov
pop
pop
rolb
ljmp
mov
push
push
push
out
mov
mov
test
mov
push
push
mov
cmc
clc
lret
push
jns
mov
pop
cmpsl
or
cld
sbb
cmpsl
jno
inc
shll
pop
inc
and
cs
jb
ds
iret
inc
mov
jno
xor
ds
cmpsl
xchg
xchg
or
sbb
fs
icebp
popl
xchg
nop
mov
or
pop
or
inc
cli
push
jns
mov
inc
int3
popa
or
out
in
clc
shl
or
dec
inc
sbb
cltd
mov
les
mov
mov
negb
xor
call
sahf
pop
jb
sbb
dec
sub
and
pop
insl
cltd
cwtl
scas
sub
loope
mov
arpl
pop
inc
lahf
lcall
pop
jge
or
js
inc
or
repnz
loope
mov
cmc
aad
icebp
sub
mov
mov
jp
int
mov
xchg
scas
stos
push
push
mov
dec
repnz
loop
int3
js
js
cwtl
or
xchg
cltd
cs
pop
pusha
pop
idivl
mov
fs
repnz
xchg
mov
outsl
nop
lcall
pop
fdivrs
movb
add
addl
cmp
pop
and
dec
jnp
dec
dec
pop
lds
sbb
jnp
pop
cmp
shll
andl
xchg
inc
or
les
push
jnp
mov
mov
in
inc
aad
and
pop
inc
mov
int
inc
insb
imul
cmp
shl
xchg
inc
movsb
mov
outsl
jno
push
ss
mov
mov
adc
idivb
push
stc
adc
data16
pusha
sbb
push
cmc
mov
dec
aas
push
cwtl
xlat
mov
sub
adc
jae
inc
arpl
stos
mov
xchg
fldl
fbstp
and
pushw
inc
push
imul
les
fiaddl
mov
xchg
insl
popf
mov
in
mov
jmp
jg
gs
mov
mov
cmp
lahf
mov
mov
sti
iret
mov
add
iret
add
mov
lcall
scas
and
loop
sbb
adc
or
sub
daa
shlb
enter
xor
push
push
sub
in
out
and
mov
out
out
or
push
fnstenv
lea
fidivl
push
ret
xor
mov
data16
pop
fldcw
stos
inc
mov
mov
lods
out
outsb
je
cmp
insl
lret
sub
dec
jmp
pop
mov
test
or
repz
lea
push
jmp
and
aam
sub
cmc
int3
xor
xor
xchg
mov
push
in
mov
jl
adc
mov
out
lock
fidivrl
push
xchg
xchg
das
sbb
test
inc
xchg
add
adcb
loop
sbb
cmpsb
fldenv
addl
fcompl
inc
insl
and
mov
xor
xchg
into
mov
sbb
int3
aas
mov
adc
jmp
mov
stc
pushf
lock
add
push
pop
xor
inc
mov
push
imul
sub
neg
int
cwtl
jg
into
ljmp
sbb
jae
mov
xchg
icebp
jp
data16
scas
lret
cmc
or
repz
pop
mov
in
push
sahf
fnstenv
fcompl
out
dec
sub
dec
cmc
loopne
ret
jmp
ljmp
in
adc
movsb
mov
jb
jns
into
neg
popa
xor
lods
frstor
test
or
sub
pusha
jp
in
push
xchg
jo
xor
xchg
jp
xchg
mov
fsts
push
xchg
das
lahf
imul
cli
std
cmpsb
pushl
lds
dec
addr16
cmpsl
test
pop
sub
and
mov
icebp
stos
mov
or
push
repz
jae
sub
lcall
push
dec
je
inc
subb
ret
cmp
and
dec
mov
clc
pop
loop
pop
sub
cmpsb
adc
ficoms
pop
push
fiaddl
pop
push
or
daa
daa
or
cmp
push
or
test
loope,pt
arpl
sbb
iret
push
fisubrl
dec
pusha
or
and
sub
scas
xor
in
cmc
cmp
inc
pop
iret
cmpsl
dec
popf
xchg
cmp
hlt
movsl
xor
lret
or
shrb
orl
xor
cwtl
push
js
mov
ljmp
or
lcall
xchg
popf
mov
shlb
sub
in
call
insl
aaa
xor
sub
jp
loope
cmpsb
js
xor
dec
and
push
rcrb
pop
test
mov
add
aaa
mov
lds
cli
sub
mov
inc
dec
add
ret
std
dec
cltd
std
testl
xor
orl
push
sbbb
cmpsb
lds
int
push
push
mov
ss
add
dec
std
push
mov
repnz
or
and
shlb
cmc
lock
out
push
call
fdiv
mov
sahf
push
or
jnp
pop
xchg
push
cmp
mov
push
cltd
jne
into
repz
mov
mov
push
lock
push
popa
jnp
aas
push
out
addr16
xchg
cwtl
xchg
lods
cmpsl
xor
cmp
xchg
mov
cld
adc
mov
bswap
out
adc
movsl
out
cmc
mov
into
and
sti
pop
mov
push
mov
fiadds
shll
cmp
push
xor
fldl
cmp
std
dec
cmc
xacquire
jne
mov
cmc
dec
gs
fsubr
cmp
loop
cs
movsl
xchg
rcrl
jmp
sub
xchg
dec
aad
inc
pop
aam
test
push
insb
or
in
sub
lock
add
fldl
pop
and
pop
xor
pop
rcrb
cmp
outsl
data16
cld
stos
inc
pop
mov
pop
and
push
stos
lds
xor
dec
and
sub
mov
pop
sub
pop
mov
sub
arpl
lods
jg
add
cs
pop
mov
shr
mov
jl
ret
inc
je
ss
insb
or
insb
mov
ret
mov
mov
cmp
dec
lret
out
bound
lret
ffreep
mov
push
test
cmp
xchg
lahf
loop
mov
insl
lock
out
push
rclb
mov
arpl
push
jno
jne
mov
xor
push
cmc
add
iret
loope
imul
adc
mov
or
aas
js
ljmp
fisubrs
into
cmpsb
add
inc
mulb
push
inc
adcl
ljmp
pop
mov
imul
or
in
or
xchg
shrl
std
enter
addb
scas
out
mov
xchg
jb
push
push
lds
mov
scas
inc
push
lret
cld
ljmp
scas
aaa
out
daa
push
jnp
cmpsb
dec
int
aad
sbb
fildl
aad
sub
int3
mov
cmc
dec
enter
ja
repnz
lcall
add
iret
dec
shlb
mov
sub
sub
sbbl
xor
mov
dec
xchg
dec
push
ljmp
lret
les
mov
adc
in
cmpsl
inc
cmp
inc
stos
xchg
addr16
mov
out
test
sbb
dec
add
js
mov
mov
xchg
cmp
iret
adc
mov
and
out
mov
dec
push
jnp
movsl
push
sub
mov
stos
fcmovu
mov
test
add
aam
std
loopne
jae
push
or
add
inc
push
push
ljmp
cmp
shlb
arpl
inc
cmp
out
mov
lds
push
scas
iret
jnp
fbld
mov
andb
je
jecxz
cmc
jecxz
adc
dec
sbb
inc
fldcw
and
fwait
jl
sbb
and
pop
inc
inc
dec
cs
adc
mov
xor
lret
popf
and
js
addr16
mov
notl
xor
incl
dec
in
xor
push
fwait
inc
stc
add
jge
cmpl
rorb
stos
mov
imul
jae
mov
ret
mov
rcl
fcomps
pop
xchg
nop
lret
call
xchg
outsl
popf
scas
inc
push
aad
pop
or
negl
dec
mov
cmp
jno
outsb
mov
xor
push
lret
int3
jbe
cmpsb
or
xlat
cmp
ljmp
mov
jno,pt
clc
outsb
rolb
jbe
inc
mov
mov
fistl
mov
lock
lods
int3
in
and
cmpb
adcl
jo
lods
addb
or
sarb
mov
jne
fcomi
pop
jbe
maxps
xchg
mov
jmp
push
jnp
sbb
mov
test
xchg
sub
pop
test
xchg
sbbl
add
or
mov
sbb
sub
xlat
cs
andl
cmp
call
cltd
mov
outsb
dec
dec
dec
insb
clc
int3
lcall
rcl
xchg
xor
adc
jecxz
daa
cmp
pop
push
imul
mov
sub
dec
jge
dec
xbegin
mov
adc
test
sbb
jg
daa
mov
sub
mulb
inc
lea
shll
mov
fxch
addl
xchg
xchg
mov
adc
loope
or
jno
fs
pop
pop
lock
mov
cmc
jns
pop
xor
or
jle
adc
jge
add
sbb
jnp
call
xor
jne
mov
sub
sbb
jae
bound
inc
dec
mov
cli
inc
xchg
jno
shll
cmp
dec
or
push
inc
fwait
nop
incl
lahf
into
testb
imul
sbb
cmp
int3
cmp
fistl
push
cmpsb
int3
jne
pop
or
rcr
enter
add
fstps
fsubrp
call
leave
sub
dec
sahf
jmp
push
arpl
jae
fs
invd
push
shlb
jle
das
jge
inc
push
xchg
push
pop
aaa
loope
jb
scas
xor
mov
orl
cmc
das
inc
mov
lods
and
dec
pop
dec
jge
mov
fcmovnbe
lret
mov
enterw
pop
je
mov
adc
mov
fwait
pop
mov
or
inc
jno
int3
je
push
aaa
or
mov
mov
out
lret
rcrb
mov
repz
test
add
push
mov
test
inc
and
push
dec
push
dec
data16
fwait
gs
or
jns
add
fdivs
push
xor
in
arpl
sub
mov
adc
in
pushf
rorb
or
push
xchg
adcb
or
xlat
mov
and
fcoms
and
push
mov
adc
je
daa
push
mov
jns
and
decb
jecxz
push
sub
shr
jle
mov
das
filds
jno
test
adc
outsb
aad
dec
mov
add
push
jg
push
xor
inc
xchg
push
mov
push
insl
lods
arpl
mov
mov
inc
sbb
roll
fimull
jnp
nop
jl
push
or
push
popf
lcall
lods
xor
jl
mov
iret
xchg
or
push
inc
ret
les
cmp
sbb
test
and
popf
aam
sbb
xorl
pop
into
xor
sub
jb
dec
pop
outsl
popl
pop
xchg
out
lods
mov
call
sub
cli
outsl
xchg
bound
inc
sbb
rolb
or
xchg
push
stos
jno
es
push
jae
in
push
cmp
out
sbb
jno
xor
cmp
fistpll
icebp
adc
ret
jbe
dec
mov
mov
pushl
inc
mov
test
bound
ss
insl
std
lret
call
pop
loopne
cmpsb
jae
pop
sub
lods
lods
jg
mulb
mov
pop
adc
or
popf
pop
xor
dec
or
xor
mov
dec
push
in
add
cmpsb
xchg
mov
daa
inc
jb
orb
push
mov
adc
lret
call
jne
push
rcll
and
sbb
xchg
clc
js
loope
ja
test
or
dec
dec
sub
jecxz
popf
mov
popa
mov
pop
dec
out
rorl
mov
in
dec
dec
lock
hlt
jo
xchg
jecxz
mov
loop
jp
stos
std
mov
fmul
xor
mov
ret
mov
and
pop
imulb
sub
out
cmp
mov
in
sbb
mov
movsb
rclb
dec
jb
sbb
or
sbb
rcrl
dec
sbb
xor
xchg
inc
and
xor
ret
mov
lret
cmp
sub
cmp
ja
rorb
inc
out
mov
imul
fwait
fwait
gs
add
pop
enter
or
rorb
subb
lock
mov
pusha
sbb
jae
imul
mov
test
mov
addr16
mov
mov
add
outsb
and
iret
jbe
dec
mov
js
add
dec
shl
jmp
mov
aas
test
stc
jge
jne
inc
movsb
xor
inc
mov
pop
movsb
xor
fadd
fs
roll
aad
push
mov
add
daa
push
cmp
hlt
jns
sahf
hlt
aam
data16
bound
repnz
in
fbstp
popf
add
popf
jnp
mov
cwtl
sahf
jns
pusha
cmpl
int
sbb
xor
inc
lea
lret
sub
dec
pop
inc
jnp
xor
cli
icebp
insl
mov
cmp
leave
je
pop
add
dec
push
and
lahf
movsb
cmp
sbb
movsl
les
sub
lret
mov
inc
jle
ljmp
rcr
scas
cmc
adc
rcl
sbb
mov
mov
cld
inc
sub
stos
pop
icebp
negb
test
lret
or
stc
mov
sbb
js
leave
js
scas
sbb
nop
addr16
jl
mov
cs
stos
mov
push
das
es
jg
mov
test
cli
popa
lcall
push
xor
dec
jmp
lret
or
jp
or
fcoml
sub
push
int
push
sbb
push
call
pop
sub
mov
dec
stc
mov
and
aaa
scas
dec
mov
xor
mov
mov
xchg
lods
jmp
push
addl
repnz
dec
cmp
dec
lock
call
je
pop
mov
repz
idiv
cs
lods
enter
test
out
sti
jle
push
fwait
fwait
adc
mov
cmp
repnz
lret
mov
inc
jne
in
repz
hlt
or
jns
rol
xor
jae
xor
sarl
sub
push
sub
gs
mov
pcmpgtb
call
fisubs
aad
mov
cmp
cmp
sti
dec
rdmsr
jne
dec
jnp
adc
adc
add
mov
mov
jmp
adc
add
mov
outsb
xor
xor
pop
in
xor
sahf
pop
daa
dec
push
cmpsl
jl
test
xchg
jo
shlb
dec
dec
pop
iret
inc
inc
out
insl
dec
dec
stc
and
mov
push
xor
xchg
xchg
clc
repz
fcmovne
sarb
shrl
add
cwtl
inc
mov
les
mov
cltd
add
cmpsb
dec
or
aaa
adc
xchg
sub
ret
dec
sub
and
inc
fdivl
in
les
test
jmp
push
and
cmc
insl
dec
stos
pop
gs
into
movsb
lea
lret
int
popa
int3
outsl
sahf
jg
out
cli
lock
push
jmp
mov
adc
xor
mov
cmp
ret
sub
loopne
cli
dec
orb
add
pop
imul
mov
dec
mov
jno
sub
leave
adc
and
repnz
repz
test
sbb
adc
out
jl
pop
div
mov
adc
and
or
pushf
pop
iret
arpl
pop
repnz
enter
pop
into
rcrl
sbb
stos
and
aaa
leave
sbb
dec
repz
mov
imulb
mov
push
inc
sti
sub
jmp
popa
adc
mov
insb
jp
xchg
mov
push
test
daa
push
arpl
mov
daa
xchg
add
repz
ffree
stos
inc
xchg
mov
sbb
dec
or
insb
xor
fisubs
gs
adc
sti
pop
xchg
ja
cmp
mov
mov
jo
loop
fwait
push
pop
sub
inc
jmp
cmp
pop
scas
lea
pop
in
add
in
shlb
mov
scas
imul
sbb
jle
jl
mov
sarb
scas
cmp
jp
cli
push
mov
jne
lret
dec
aam
push
xlat
jbe
ja
popf
mov
inc
test
adc
pop
jl
imull
les
mov
jno
xorps
inc
jae
outsb
imul
jb
test
mov
inc
lea
rorb
shl
and
arpl
mov
sbb
mov
mov
ja
fbld
fwait
sbb
fcmove
inc
dec
fisubrl
loop
rcrb
jecxz
jne
jge
xor
jns
jl
mov
xor
push
xor
lock
xchg
lods
jp
and
mov
mov
out
and
cmpsl
add
popf
dec
lock
sub
stos
jne
rcrb
scas
nop
call
stc
jo
push
sub
push
xor
jb
pushf
enter
adc
dec
push
push
fidivrs
and
in
inc
xchg
push
dec
sbb
pop
repz
push
inc
cwtl
int
shr
cmpsl
jo
cmp
fisttpl
rcr
fcoms
mov
out
jl
bnd
sub
stc
push
imul
mov
clc
call
rcr
mov
ret
xor
dec
popa
jg
mov
or
push
xor
and
jns
rcrl
add
repz
pop
lock
shlb
or
mov
mov
adc
fs
shlb
pop
enter
mov
mov
cmp
pusha
emms
sarb
mov
hlt
push
fcmovnu
aam
daa
subl
push
sahf
repnz
xchg
out
out
xchg
pop
cmpsl
mov
mov
stos
xchg
inc
push
push
and
inc
nop
pusha
jle
pop
insb
in
add
orl
push
in
rolb
aam
mov
pop
sbb
mov
rclb
jb
or
movl
inc
lock
les
sahf
shlb
sub
jmp
cltd
lods
jl
jmp
mov
dec
scas
test
adc
xchg
ret
arpl
dec
cmp
jp
pop
jmp
in
xor
ret
push
lock
or
lret
jnp
imul
shlb
push
sbb
test
bound
mov
lods
out
lock
sti
cmp
in
and
int
adc
idiv
adcl
loope
push
movb
loope
mov
inc
daa
xor
mov
pop
ret
fsub
xchg
testl
popa
lock
repnz
aaa
movsl
jo
jnp
and
outsl
jmp
add
fmuls
mov
scas
or
and
or
xchg
decl
lds
loopne
popl
add
test
mov
lods
insl
sub
and
push
push
or
mov
not
mov
or
mov
mov
int3
adc
call
pop
js
leave
jae
cltd
outsb
pop
les
idiv
jnp
and
and
out
add
jge
jo
or
lods
or
pop
inc
jmp
popf
adc
push
sbb
imul
and
inc
idivl
and
mov
out
cld
in
mov
sbb
orb
pop
xchg
push
arpl
inc
jb
cli
shrb
push
dec
lods
xchg
inc
ljmp
imul
inc
ja
lods
jl
clc
mov
jge
jnp
or
out
xor
pop
adc
sub
pusha
push
and
jmp
push
xlat
mov
inc
ret
lock
and
mov
lods
adc
lcall
push
mov
ffreep
out
and
clc
notb
sbb
jg
mov
mov
xchg
sbb
sub
lahf
fwait
outsl
out
lcall
and
cmpsl
movsl
insl
std
ljmp
xchg
lahf
xor
mov
mov
sub
mov
cmp
sbb
loop
add
push
loopne
sbb
in
je
cmp
mov
out
fsubr
pusha
insl
scas
bound
out
int
je
xor
push
cmpsl
dec
jmp
pop
repnz
sub
push
pop
loop
cmp
andl
int
mov
in
xchg
cmp
insl
in
mov
repnz
dec
jle
subl
jmp
insb
cmc
push
das
mov
stos
and
mov
mov
pop
out
insb
adc
arpl
mov
push
nop
sub
and
fisubs
imul
push
out
cli
mov
loop
push
ret
lea
inc
cmp
xlat
add
out
xorl
xor
mov
stos
cltd
push
cmpsl
outsb
jge
cmp
mov
rcl
dec
sub
negb
or
in
roll
push
fisttpll
or
xor
in
inc
pop
lds
cmp
aaa
mov
adc
xchg
pop
fstpl
or
popf
cmp
insb
je
movsb
sarl
adc
sbb
push
sub
lock
iret
jnp
xchg
lods
outsl
add
lahf
imul
sub
ja
cmp
test
jmp
add
popf
outsb
pop
jmp
stc
push
pushf
call
push
pop
fcomps
pusha
fwait
sbbl
xchg
and
xchg
movsl
in
aad
inc
mov
inc
icebp
cmp
ficomps
xchg
scas
in
cmp
adc
inc
add
pushf
mov
sarb
bound
cld
adc
jo
rcrl
js
ja
jle
mov
cmp
add
loope
popf
sbb
and
outsb
stc
imul
loopne
dec
popa
insl
negb
mov
cmp
or
mov
jae
sub
mov
into
inc
push
dec
int3
mov
adc
ret
inc
lret
in
mov
js
fistpll
jecxz
cli
in
or
pop
inc
and
leave
mov
iret
mov
or
mov
pop
xchg
sbb
int
pop
and
clc
pop
dec
ja
fmul
push
jns
fs
push
add
sar
xchg
out
out
or
pusha
repnz
lods
push
stc
mov
adc
cltd
sahf
adc
stos
jmp
inc
mov
fisttps
mov
sub
xor
and
pop
ja
sub
std
inc
in
into
push
dec
push
lods
mov
jbe
lcall
mov
adc
ds
inc
cmp
or
aas
sub
dec
ficoms
fiadds
adc
xchg
or
xor
mov
push
sbb
xchg
daa
idivl
dec
jge
push
push
cmc
daa
xchg
add
push
xchg
outsb
mov
jo
les
push
out
inc
popf
cld
mov
pushf
mov
mov
cmp
in
pop
cli
mov
scas
rcrb
popa
ja
repnz
jecxz
sub
outsl
lret
sub
mov
out
jno
pushf
mov
and
mov
aam
jno
jno
jne
add
and
movsl
icebp
addr16
aam
ret
mov
mov
lods
sbb
push
mov
std
mov
mov
ret
ss
and
jne
xorb
or
or
inc
inc
lcall
add
in
mov
into
pushf
adc
inc
mov
out
lods
push
xchg
mov
xchg
repz
out
push
sub
scas
stos
ss
out
or
adc
ret
xchg
sbb
gs
lods
outsl
inc
orl
es
mov
and
dec
loop
xor
jmp
pop
or
ljmp
lock
clc
scas
and
test
imul
mov
pop
shrb
mov
sbb
jl
jp
add
jecxz
push
stc
add
xchg
dec
adc
aad
int3
pop
js
mov
mov
pop
js
movsb
into
pop
pop
mov
xchg
jnp
xor
push
add
push
enter
xor
test
xor
mov
xchg
ret
fnstsw
adc
repnz
sub
cmp
addr16
adc
aam
cwtl
add
xchg
sub
and
imul
cli
out
push
loope
sub
mov
push
xor
lret
lock
xor
ljmp
stos
sub
shlb
jae
les
inc
push
daa
cli
sbb
xor
sbb
shl
xchg
test
call
push
push
mov
mov
mov
insl
cmpsb
insl
pop
dec
inc
jle
packssdw
movsb
sub
jo
stos
fstps
mov
and
sub
jo
dec
idiv
insb
cltd
js
inc
loopne
sti
mov
js
add
fildl
xchg
shll
mov
add
jae
movsl
xor
pop
enter
jns
lock
jp
or
and
stos
cltd
xchg
pop
stc
mov
push
aaa
xlat
inc
pop
mov
mov
jnp
pop
pop
sub
xchg
outsl
jbe
xchg
out
sbb
gs
jo
in
bound
sahf
mov
adc
mov
pop
test
fiaddl
int3
call
pop
scas
aas
repz
das
pop
sahf
fs
inc
jmp
and
int
ror
and
push
xor
mov
xor
xor
in
fdivs
sbb
mov
cmove
push
cld
scas
cltd
and
sbb
dec
pop
add
aaa
es
mov
repnz
push
xlat
pop
mov
andb
aam
cmp
in
add
outsl
into
mov
jns
sub
adc
or
jnp
shll
out
fs
push
jmp
fs
push
in
adc
jnp
sbb
pop
and
out
std
mov
rorb
enter
dec
or
and
ja
sarl
push
push
dec
mov
rcr
out
mov
dec
leave
in
hlt
fcmovne
sbbl
stos
or
or
jl
aas
sbb
cmp
xlat
daa
cmpsb
and
cli
sbb
outsl
push
cmc
mov
dec
addb
xor
and
in
pop
in
rcrb
xchg
xlat
sti
xchg
in
ljmp
adc
pushf
adc
add
into
push
inc
shll
ljmp
ljmp
sub
imul
add
jp
jnp
cmpsl
adc
xor
ja
push
sub
add
push
enter
sub
lods
in
add
pop
loope
jnp
testb
adc
in
xlat
fmull
fdivl
xor
sahf
mov
leave
js
xor
or
test
outsl
and
mov
jno
outsl
clc
mov
push
push
pop
cmp
xor
mov
aad
xchg
test
out
cld
pop
add
and
in
flds
sbb
xor
aad
mov
mov
sbb
push
jmp
lea
mov
xchg
mov
mov
xorl
jle
lret
fidivl
outsl
ret
dec
pushf
push
in
dec
lods
aaa
arpl
test
out
ljmp
xor
mov
movsl
push
pop
in
in
lods
mov
sub
xchg
cmp
js
sub
cmp
loopne
push
cmp
push
and
xor
popfw
jmp
in
sub
sub
mov
jnp
mov
dec
imul
pushf
jle
xchg
sbbb
push
mov
dec
call
stc
or
test
adc
enter
sub
stos
pop
out
loop
or
jmp
int
jae
ja
fwait
cld
cwtl
mov
insb
popf
cmpsl
inc
dec
inc
pop
cmp
mov
dec
int
addr16
into
add
loope
pop
call
pop
loop
mov
pop
pop
inc
cli
and
es
mov
and
jg
pusha
jb
dec
jle
cli
mov
dec
mov
fldenv
mov
in
lret
sub
stos
and
sub
jl
fbstp
push
decl
ljmp
fs
xor
jg
popf
lock
or
pop
dec
and
jmp
std
cmc
sub
das
and
mov
fildll
push
pop
sahf
cmp
lret
das
cmp
sub
cmp
jmp
mov
adc
pop
arpl
or
sbb
xchg
pop
cmpsb
inc
fimuls
in
or
add
bound
pusha
fwait
push
cmpsb
cli
xchg
cmp
roll
sbb
rorl
add
sbb
enter
orb
in
jo
inc
lock
mov
or
shlb
adc
push
cmp
loop
std
cmp
mov
into
sub
or
int
lgdtl
jae
xor
clc
cmpsb
test
cmp
and
and
push
dec
fldt
fistps
mov
out
xchg
daa
xor
pop
rorl
pop
fnstcw
dec
or
loope
ja
iret
outsb
mov
mov
sub
mov
test
popa
xor
sub
ret
test
push
xor
es
sar
test
nop
xchg
mov
arpl
arpl
mov
std
adc
scas
inc
in
xor
fisttpl
and
xchg
sti
lret
dec
jmp
push
inc
mov
adc
insl
push
stos
cwtl
cli
sbb
mov
fwait
xchg
mov
mov
jl
pop
pushf
mov
repnz
inc
pushf
lret
pop
mov
dec
or
or
js
loop
push
mov
mov
daa
mov
mov
cmovg
loope
sub
mov
shr
push
and
or
jbe
jne
xor
test
sub
mov
fbstp
outsl
stos
push
pop
loopne
rcll
pop
mov
test
xor
inc
sahf
les
mov
jmp
out
push
shl
rcll
push
fiaddl
jne
dec
sbb
sahf
mov
outsb
pop
push
xor
or
push
out
pop
adc
jbe
es
bound
cmp
inc
cmpsb
lods
mov
push
mov
mov
popf
mov
orb
jnp
mov
xchg
push
adc
xor
inc
sbb
stos
int3
inc
pop
je
mov
pop
cli
inc
ds
cmc
outsb
enter
icebp
lcall
or
leave
pop
mov
imul
dec
js
out
incl
shrl
cmp
ficomps
nop
dec
mov
or
xor
cwtl
pop
outsb
add
push
test
mov
iret
cmpsb
mov
sbb
xchg
out
sub
sahf
or
into
ret
xor
push
shl
aaa
dec
jne
imull
inc
shrl
dec
xchg
or
xorb
adc
ror
pop
adc
adc
cwtl
jecxz
push
push
imul
cmpsl
imul
pop
xchg
jno
xchg
idiv
in
gs
in
or
pop
mov
mov
sbb
adc
mov
ljmp
adc
cmp
test
mov
jmp
cmpsb
sbb
sub
out
mov
mov
into
inc
dec
fcomip
push
push
and
or
mov
stc
in
pusha
stc
push
pop
jne
or
and
insb
jmp
adc
push
mov
cmp
add
or
into
pop
jecxz
mov
aam
xor
jbe
mov
add
js
mov
add
addl
stc
ret
jo
pop
shlb
jae
pop
repnz
notb
dec
ss
jb
loope
mov
repz
add
insl
mov
dec
mov
jle
add
xchg
imul
or
enter
ja
sub
pop
dec
jbe
iret
sbb
rcll
jg
push
pop
mov
std
cwtl
jecxz
dec
and
pop
push
and
adc
sbb
js
jl
add
inc
std
push
push
arpl
and
loopne
mov
aam
icebp
daa
jne
std
sub
mov
arpl
lea
aam
pop
testb
mov
fcmovnu
aas
sbb
aas
stos
and
jae
inc
adc
mov
ds
adc
xchg
lods
cwtl
xchg
stos
sbb
inc
mov
add
shrl
xchg
or
cmp
mov
jo
jecxz
cmp
es
mov
jnp
xchg
pop
dec
js
fdiv
and
mov
and
sbbl
xchg
push
cltd
daa
mov
and
std
xchg
jmp
movb
jmp
popf
jae
mov
int
in
xlat
movsb
lock
dec
ret
into
ljmp
adc
in
or
call
cmp
jo
adc
insl
sbb
push
push
repz
xor
xchg
add
xor
movsb
imul
cmc
inc
stc
in
lds
xchg
and
xchg
inc
or
mov
jmp
push
pop
sbb
iret
cmp
loop
call
dec
test
imul
loope
push
or
mov
les
cld
mov
ret
dec
sti
xchg
test
popf
push
cli
push
sub
fisttps
adc
outsl
scas
nop
push
xchg
push
cli
sbb
jmp
daa
test
jecxz
mov
inc
push
or
xor
adc
mov
mov
inc
xchg
mov
in
push
out
addr16
jle
push
mov
sub
sbb
push
shrb
enter
sub
mov
jp
inc
scas
fistps
xchg
cmp
orl
bound
pushf
inc
stc
leave
in
xchg
movsl
mov
bound
pop
aas
dec
in
outsl
jmp
mov
addr16
icebp
imul
jo
mov
sbb
std
and
pop
pop
mov
pusha
xor
icebp
js
cmpsb
fldl
pushl
add
lcall
jl
int3
mov
dec
insb
xor
lods
xchg
mov
cs
mov
and
lea
push
fisttps
sub
mov
mov
cli
outsb
ret
xchg
sbb
fadds
mov
pop
sub
loope
lahf
push
adc
xchg
out
mov
stc
mov
fadds
mov
mov
inc
imul
xchg
and
push
push
mov
push
mov
cli
clc
fisttpl
decb
lods
cmp
dec
mov
stos
or
mov
add
pop
xor
scas
loopne
loopne
clc
cmp
push
es
sub
inc
sbb
shl
mov
xlat
inc
push
mov
les
jmp
sub
ret
pop
mov
jae
ds
pop
scas
ficoms
in
and
jae
loopne
xchg
pop
cmp
and
scas
loop
lahf
pop
int3
ss
cmp
hlt
out
lret
xor
out
sub
pop
inc
nop
fs
jp
mov
sbb
cmp
cmp
mov
inc
and
in
inc
loopne
popw
xor
lcall
pop
leave
mull
dec
outsb
xchg
or
push
xchg
imul
push
xchg
lds
rcrl
jne
xorl
xor
loop
out
inc
sub
in
inc
push
nop
and
pop
pop
mov
sub
jecxz
pop
ljmp
pushl
outsl
inc
out
aaa
outsl
xchg
xlat
mov
sbb
fmull
push
imul
nop
leave
in
or
inc
repnz
adcb
or
ret
sbb
rolb
imul
jle
pushf
inc
test
xor
int3
push
mov
push
int
cmp
jno
call
cmp
sub
sbb
mov
and
stos
dec
push
out
or
pop
xchg
fldenv
adc
push
ret
push
jl
loope
inc
cmp
ds
mov
push
adc
stc
push
loop
mov
inc
test
ss
or
jecxz
pop
mov
mov
adc
dec
or
pop
mov
cmp
or
push
mov
arpl
mov
addl
test
mov
repz
sahf
fcoms
pop
mov
or
adc
xchg
adc
and
fs
shl
into
sub
sbb
fdivr
adc
arpl
lret
stc
jmp
ret
ret
sbb
hlt
lahf
icebp
xchg
es
xor
xchg
fnstenv
ret
movsb
mov
push
cmc
test
sbb
outsb
adc
mov
gs
iret
arpl
arpl
sub
jns
mov
cmp
mov
fidivrl
arpl
into
mov
les
xchg
lahf
std
and
add
test
dec
xor
sub
scas
nop
mov
mov
lcall
jge
push
lock
pop
xchg
aaa
push
sbb
cmpl
jbe
lahf
call
pop
xchg
notb
mov
enter
xchg
movsl
adc
es
xor
cmp
outsl
jne
jecxz
pushf
lock
iret
lahf
mov
push
jmp
push
mov
push
aam
sbb
and
jo
imul
pop
pop
dec
xchg
out
aaa
dec
push
not
scas
cs
daa
xor
pop
dec
mov
dec
test
mov
mov
and
flds
and
into
add
jge
push
xchg
and
loope
adc
andl
scas
dec
pushf
mov
push
and
frstor
pop
sbb
mov
jle
cmp
push
jo
push
mov
add
dec
loope
ds
out
jge
pop
sbb
imul
push
dec
dec
and
dec
xor
cmpsb
cli
mov
cmp
out
imul
dec
shrl
movsb
js
xchg
dec
xor
test
and
sub
inc
sbb
leave
outsl
hlt
adc
jecxz
popl
ror
push
mov
fidivl
and
sbb
sbb
or
fildll
sbb
jle
pop
push
movsl
add
rcrb
lods
jae
mov
inc
fcmovnu
xchg
sbb
imul
add
inc
inc
loopne
js
je
shll
mov
mov
in
imul
mov
bound
mov
pop
fs
sti
lock
loopne
mov
mov
pop
add
jmp
fidivs
jns
rcrb
lock
inc
mov
ret
std
ret
insl
or
cld
cwtl
cmp
pop
icebp
pusha
or
imul
mov
mov
add
add
dec
xchg
pop
mov
in
mov
lock
cmp
arpl
rcrl
xor
aaa
fildll
pop
dec
push
jae
pop
hlt
xchg
mov
rcll
push
ret
dec
int3
insb
stc
pop
scas
out
cwtl
cwtl
xchg
sub
into
repz
call
push
xor
hlt
stos
dec
dec
cmpsl
push
int3
adc
popf
bound
bsr
cmpsb
inc
test
and
xchg
push
inc
mov
arpl
ljmp
adc
test
xchg
stos
imul
out
mov
iret
cltd
clc
sub
ja
enter
jmp
sub
call
sub
pop
sbb
jle
js
mov
out
lds
out
sub
cmp
push
cmp
nop
test
cs
pop
push
xor
cmp
cwtl
push
jnp
shlb
cmp
sub
mov
faddl
movsl
and
rorl
xor
or
and
and
jl
xlat
sub
repnz
push
push
inc
add
xchg
jns
insl
movsl
cmpsl
jb
inc
xchg
cmpsb
test
jge
fs
insb
iret
out
xor
movl
mov
cmpl
xor
iret
sahf
test
add
inc
stc
pop
outsl
out
xchg
jge
les
add
lcall
push
rdpmc
cmc
aas
loope
or
fisubl
adc
sarb
lahf
lea
or
mov
dec
cs
or
outsl
sub
call
test
orl
mov
jbe
fstpt
rclb
aam
pop
sub
or
dec
push
pushf
push
push
push
jge
jnp
jae
rorb
push
dec
sbb
cli
insb
lret
movsl
aam
mov
fsubr
stos
adc
mov
movsb
ret
repz
ljmp
cmp
add
std
inc
int3
cld
adc
stos
lock
iret
push
mov
push
lcall
scas
imul
and
dec
scas
xor
mov
int
in
xchg
xor
movsb
cmpb
std
cmc
pop
cli
icebp
andl
push
sub
cli
xlat
pop
cs
mov
popl
sbb
pushf
pusha
push
out
test
loop
aaa
mov
cmp
mov
aaa
cmpsb
insb
fisttps
pop
mov
pop
scas
dec
add
jnp
jle
fstl
outsb
loope
inc
push
sbb
dec
jle
inc
ljmp
adc
sbb
lods
push
cltd
push
stc
dec
fisttps
cltd
xchg
sub
xchg
mov
out
pop
cwtl
in
mov
mov
lock
mov
pop
cmp
subb
and
sarl
and
jo
sbb
xchg
adc
fisttpl
xor
rolb
enter
sub
jnp
pop
jae
aaa
in
pop
test
aad
jnp
arpl
dec
mov
cmp
clc
ret
clc
mov
mov
inc
push
inc
mov
adc
jmp
jbe
xchg
lret
out
outsb
incb
xor
out
ljmp
mov
jmp
jp
mov
xchg
jb
data16
xchg
mov
clc
ds
adc
addr16
inc
or
sub
xchg
loope
push
mov
pop
xchg
mov
push
pop
insl
add
mov
mov
sarl
add
xchg
xchg
leave
mov
or
mov
jbe
jne
dec
js
mov
mov
int3
popa
adc
xchg
dec
stc
mov
pushf
dec
mov
cli
cmpsl
inc
cmp
mov
cmpsb
sub
mov
insl
add
jae
push
pop
sub
shr
aam
inc
mov
add
and
adc
js
adc
inc
mov
movsb
push
pop
cmp
push
iret
sub
xchg
incl
pop
lock
cmp
mov
lock
xchg
pop
and
insl
adc
jg
mov
xlat
xchg
inc
mov
sarb
adc
push
out
icebp
mov
xchg
andl
pminub
add
mov
dec
push
cmp
mov
test
in
movsb
sbb
pop
subl
lea
ret
dec
lcall
call
cmp
stc
mov
jge
inc
add
xchg
iret
jg
out
adc
loop
into
cli
ss
jmp
dec
std
cli
lods
inc
jnp
imul
pop
mov
pop
add
in
mov
stos
test
jo
or
ret
sub
out
jmp
mov
xchg
cld
dec
rolb
es
call
xchg
dec
lret
xchg
cld
mov
xchg
fists
in
jge
rcr
je
dec
mov
pop
xchg
aaa
pop
dec
in
inc
add
sbb
cmp
dec
loope
mov
jl
xchg
ljmp
jle
ret
inc
ja
pop
test
insl
sbbl
mov
orb
iret
adc
inc
and
lahf
push
bnd
inc
inc
lcall
add
test
mov
add
in
jns
std
bound
mov
mov
jp
sar
dec
xor
add
loop
iret
out
insl
push
add
fwait
aad
jl
shlb
adcb
pop
fwait
outsb
push
testl
ljmp
adc
addr16
jne
out
stos
fldenv
leave
mov
mov
mov
mov
push
shll
test
fs
jg
ljmp
jo
adc
and
cmp
jmp
or
cmpsb
mov
pop
imul
rorl
jg
jne
negl
cwtl
add
jbe
mov
inc
or
int
pop
xchg
sub
mov
fsubrs
loop
mov
push
mov
loope
lret
jmp
jecxz
imul
xchg
rcl
xchg
sub
out
cmp
add
or
negl
ret
mov
push
sub
fcoml
rclb
adc
xchg
in
push
jo
add
out
insb
mov
inc
push
cvtps2pi
cmp
mov
push
mov
stos
aaa
pop
sub
popf
or
es
repnz
mov
out
aaa
cld
adc
add
mov
or
int3
nop
or
cmpb
arpl
dec
loope
mov
mov
mov
loop
pushf
add
adc
pop
fiadds
jb
or
mov
mov
dec
lahf
das
sahf
and
mov
sbb
imul
jge
clc
loope
xchg
ja
dec
pop
lret
mov
popf
les
in
sub
jl
dec
add
lock
and
scas
push
mov
lea
cmp
andb
dec
and
decb
jmp
test
fidivrl
sub
and
dec
pop
ret
mov
or
adc
sbb
sbb
das
mov
testl
std
cmpsb
or
iret
test
fiaddl
adc
mov
mov
movsb
inc
sbb
jnp
adc
pop
sbb
mov
inc
jle
inc
es
loope
test
xchg
rclb
pop
pop
subb
or
or
in
adc
sub
adc
xchg
rolb
sarb
shr
sbb
imul
jl
cwtl
addr16
adc
insb
lods
jmp
sub
aad
or
add
mov
mov
inc
push
rolb
mov
and
xorl
fwait
cmp
cmp
repz
mov
outsb
scas
inc
ljmp
push
popf
movsb
orl
mov
cmpl
lcall
mov
test
push
and
adc
mov
mov
and
fimull
xor
fldt
rclb
ret
popa
xor
aaa
mov
and
stc
xor
add
adc
arpl
dec
mov
add
lahf
mov
in
jns
or
cmp
dec
adc
xlat
stos
mov
imul
gs
dec
xor
sub
jl
cmpsl
and
cwtl
push
out
loop
cwtl
and
insl
insl
sbb
add
cmpsb
shr
sbb
sub
add
int3
out
das
and
mov
sbb
aas
cltd
dec
test
test
adc
dec
repz
loope
nop
in
pop
test
adc
out
div
ljmp
shlb
push
addr16
xor
and
xor
jno
sub
and
aad
outsb
loop
jecxz
jmp
outsl
ds
scas
mov
arpl
lahf
add
in
addr16
dec
dec
aas
or
int3
push
xor
xor
xchg
sub
sub
pop
xor
xchg
dec
mov
xchg
data16
in
clc
call
insb
shrl
icebp
mov
cmp
in
jl
fwait
stos
sub
pop
adc
fiaddl
dec
pop
mov
cmovs
das
iret
and
sbb
fdivl
xor
popa
jle
addl
jne
sti
pop
sbb
aam
lods
lret
cmp
shr
arpl
hlt
ljmp
inc
fnstsw
cmp
int3
iret
sbb
daa
sub
sub
pop
pop
xchg
into
mov
sarb
sub
movsl
lret
adc
mov
sbb
and
movb
iret
and
dec
mov
pop
ficomps
cmp
lds
ret
mov
lods
test
add
les
jns
dec
xchg
or
mov
lcall
adc
cld
dec
mov
arpl
jp
test
mov
inc
bound
jg,pt
add
sbb
inc
jle
outsl
push
dec
lods
daa
mov
fiaddl
or
pusha
jl
inc
inc
push
push
lock
fcmovu
aad
xchg
cltd
sarl
cmpsl
pop
xor
and
jb
push
xor
cmp
movsl
test
jge
gs
repz
and
call
loope
mov
pop
xchg
or
sub
cmp
jle
addl
out
add
hlt
inc
push
fcmovu
jbe
or
sub
outsb
je
imul
xchg
sahf
cmp
pop
push
shll
aas
cmp
lahf
adc
inc
js
mov
jnp
decb
mov
cmp
mov
mov
sub
or
pop
mov
xchg
cli
xchg
jae
imul
cmp
arpl
push
sub
mov
xor
jmp
dec
dec
dec
movsb
pop
xor
inc
mov
arpl
jns
and
orl
jge
mov
out
in
lahf
movsl
pop
clc
mov
and
sbbl
js
ficoml
sub
frstor
sbb
sbb
xchg
jle
xor
add
lds
or
dec
inc
fs
pop
or
add
pop
sbb
cwtl
cmpsl
aad
mov
push
jle
cmp
daa
sub
fs
test
faddl
aam
dec
fwait
lock
mov
add
adc
and
ljmp
stc
and
ds
fimuls
imul
fidivs
push
sub
adc
sbb
aas
dec
push
in
popf
ss
aad
and
push
adc
inc
incb
ret
adc
cmpsl
jle
push
add
push
mov
orl
inc
push
jns
in
clc
push
xor
adc
pop
imulb
and
in
pop
sub
or
mov
mov
push
push
mov
cltd
mov
inc
push
scas
add
mov
pop
vpshufd
mov
cwtl
add
lods
mul
jb
adcl
jns
sub
jl
push
mov
or
sbb
or
sub
and
das
mov
fnstsw
rcrb
scas
stos
lret
xorl
xchg
sbb
js
scas
hlt
adc
movsl
cmp
addr16
div
xchg
xlat
pusha
sar
dec
cmp
mov
jae
inc
pop
cmp
jle
push
popf
dec
je
adc
add
mov
adc
sub
popf
xor
in
fcmove
jne
xchg
nop
dec
popl
sbb
insb
mov
add
sub
mov
add
lock
aad
xchg
or
cmp
mov
shll
jle
fsubs
push
lea
sarl
dec
aas
mov
fmul
rcl
imul
or
loope
mov
push
cmp
cmp
pop
xor
adc
sarl
test
xchg
xor
dec
push
ja
mov
jp
xor
jne
push
sti
andb
add
in
dec
push
adc
xchg
jmp
int
mov
add
pop
arpl
je
sahf
adc
add
xchg
outsb
xor
mov
xchg
sbb
jge
and
add
xor
xchg
pop
movl
stos
int
or
add
sbb
sub
dec
dec
nop
mov
push
adc
scas
out
out
and
sbb
sarb
in
pop
fidivrl
sub
pop
data16
xlat
jb
sbb
mov
mov
repnz
adc
lahf
jecxz
outsl
pop
jecxz
fnsave
push
mov
aaa
loop
imul
jb
sub
jp
enter
push
rcrb
sub
icebp
loop
lea
into
cmc
push
das
jb
push
cli
and
mov
mov
sahf
or
int3
clc
loope
mov
sbb
in
imul
inc
ja
icebp
jecxz
xchg
cmp
xchg
xchg
dec
sbb
mov
inc
cwtl
and
adc
adc
je
cld
xchg
add
push
add
fwait
push
and
std
scas
test
paddw
mov
iret
inc
fidivs
int3
mov
in
clc
inc
insl
push
out
xchg
lds
cmp
xlat
out
fsubl
jecxz
es
int
imul
out
out
or
outsb
xchg
mov
mov
aaa
jl
xchg
cmc
pop
jp
jl
jne
les
ljmp
cmp
adc
cmp
dec
jo
inc
out
mov
cmc
xchg
nop
mov
shlb
mov
sub
dec
ror
push
movsb
mov
and
mov
mov
and
sub
pop
sahf
aaa
add
shrb
in
std
push
jne
dec
cwtl
mov
adc
cltd
cmp
push
lods
and
add
xchg
jl
jbe
inc
mov
push
mov
mov
sbb
addr16
push
pop
sahf
daa
leave
lea
push
mov
inc
movsb
out
outsb
push
adc
iret
lods
push
pop
jg
xchg
shr
xchg
into
xlat
jle
mov
aaa
xor
rclb
jns
xlat
lods
lock
stc
mov
cwtl
sub
jmp
cmc
xor
mov
lds
int3
inc
pop
fs
call
mov
cmpsl
arpl
ja
dec
imulb
mov
push
pop
frstor
xor
enter
dec
jg
outsb
mov
sbbb
mov
dec
mov
jne
mov
stos
insb
sub
add
test
std
aad
dec
nop
pop
shll
adc
push
adc
pop
and
fsubrl
ss
mov
in
arpl
test
faddl
test
inc
adc
test
lods
pop
pop
out
cmp
jb
and
jo
jl
jge
lock
inc
adc
data16
in
leave
bound
dec
movsb
addr16
and
add
sbb
mov
je
outsl
inc
and
add
or
push
std
leave
and
fbstp
and
sub
xor
cmpsb
aam
push
fwait
inc
and
lock
push
rcr
mov
sbb
andb
call
inc
ljmp
incb
push
stc
sbb
setb
jae
popf
sub
dec
pop
ds
in
stc
test
pop
pop
ljmp
sti
popa
dec
xor
shlb
push
sbb
jge
mov
sbb
add
mov
test
jmp
dec
sub
lods
inc
gs
push
ja
dec
dec
push
and
mov
sbb
xchg
cmp
hlt
mov
shll
scas
test
iret
scas
imul
mov
daa
mov
cmp
in
push
leave
lea
push
lcall
sub
cmp
cmp
movsb
cmp
mov
bound
aad
mov
dec
mov
push
mov
push
add
cli
stos
hlt
jl
add
xlat
sub
int
std
loope
inc
movsb
aam
arpl
push
push
test
mov
mov
fisubrs
inc
xor
inc
jmp
arpl
aaa
mov
adc
leave
sbbl
or
mov
and
jne
std
push
sub
gs
adc
out
aas
push
xchg
push
and
mov
xchg
imul
xlat
icebp
clc
push
outsl
xchg
xchg
cltd
imul
shll
push
adc
je
inc
inc
jecxz
cmp
aam
push
jbe
adc
inc
pop
mov
dec
repnz
pop
stos
int
mov
in
pop
rorb
pop
push
jg
mov
or
testb
addl
dec
cmp
ljmp
stc
adc
jb
push
negl
dec
mov
cmc
out
pop
es
jb
out
or
fidivs
jno
xchg
mov
mov
clc
lret
ficompl
push
push
cmpsl
jge
negb
cmp
xchg
and
jno
inc
test
lds
dec
dec
push
inc
add
sub
mov
dec
sbb
push
outsl
pushf
in
lods
mov
push
inc
test
xor
dec
lret
add
fdiv
push
mov
pusha
xor
mov
sbb
xchg
lods
in
push
lods
jmp
popf
fcmovnbe
or
mov
dec
loopne
xchg
xor
cmpsl
inc
xlat
xchg
out
mov
cmp
loop
ss
cmc
repz
dec
cwtl
jge
pop
jmp
and
sbb
hlt
xor
ds
push
sbbl
cmp
and
adcb
std
inc
fwait
imul
cmp
cmpsl
sbb
cmpsl
cmpsl
pop
pusha
push
pop
rorl
je
push
jbe
xor
jns
cld
dec
mov
dec
dec
clc
bound
push
mov
jns
cld
dec
into
clc
xor
aaa
mov
loope
imul
jns
testb
cmp
shr
add
sahf
push
push
dec
add
xchg
out
fldl
outsl
js
jae
test
dec
add
jg
xorb
jo
xchg
or
daa
sbb
sbbl
adcb
rcl
push
mov
dec
ljmp
jne
cmpsb
mov
sub
mov
lret
sbb
pop
lods
imul
cli
inc
inc
imul
fildl
or
rolb
ljmp
notl
add
icebp
push
pop
pushf
dec
dec
into
xor
jnp
and
xor
jge
movsb
adc
dec
or
cmp
sbb
xchg
imulb
lret
xchg
jo
pop
cmc
xchg
call
scas
mov
and
fs
cs
pop
sbb
dec
shrb
in
pop
cs
sbb
mov
fs
mov
inc
jno
movsl
movsb
dec
fsub
dec
iret
in
inc
inc
jno
loopne
repz
and
mov
mov
pop
movsl
in
loope
add
lretw
mov
add
adc
test
add
xor
mov
mov
xchg
jo
movsb
push
dec
dec
mov
lahf
bound
imul
jno
dec
test
xchg
addr16
jmp
push
rcrl
cmp
push
sbb
test
addr16
out
mul
jae
jnp
arpl
and
dec
cs
cmpsl
mov
cmp
movsb
or
inc
push
cmpsl
sbb
enter
mov
jle
mull
jge
xchg
cmp
mov
mov
test
add
pushf
arpl
xchg
sub
lret
subb
cmp
insb
xchg
mov
mov
push
test
mov
addr16
pop
mov
adc
fisubrl
leave
scas
faddp
mov
cld
outsb
inc
xor
dec
enter
aam
push
lahf
pop
pop
sub
cmp
xorl
vminps
test
dec
scas
shll
icebp
aaa
inc
jne
in
jnp
inc
adc
sub
xchg
imul
rcrl
popf
jnp
lds
popl
or
shlb
push
adc
movsb
cmp
inc
outsb
je
into
sbb
je
xchg
stc
and
inc
or
sbb
and
push
mov
enter
addr16
sub
js
sbb
mov
dec
mov
aas
lcall
dec
dec
mov
imul
das
repnz
mov
shl
lcall
and
xchg
push
rol
push
insb
jecxz
cmp
sbb
jg
in
inc
push
jae
mov
mov
adc
dec
sub
aad
je
add
das
sbb
xor
xor
pop
xor
push
int
sbb
stc
lock
pop
enter
sub
mov
fdivrl
cld
inc
outsl
outsb
jne
mov
das
jae
addr16
cwtl
popa
lea
mov
inc
into
or
lret
fisubrl
xor
scas
repz
mov
inc
repz
jbe
cwtl
loop
pop
inc
mov
mov
cmp
aad
subb
cmpb
enter
jge
mov
dec
in
mov
subb
stos
add
add
jb
adcb
adc
cltd
ja
xchg
jns
andb
jbe
decl
jge
adc
mov
inc
pop
xchg
inc
cmc
jns
sahf
pusha
push
lods
subps
leave
pop
ja
dec
mov
mull
aad
lock
adc
imul
daa
inc
test
mov
addr16
aaa
pop
sbb
xor
mov
jg
fmull
loope
or
mov
push
ja
push
xchg
test
lds
ss
cwtl
lsl
sti
das
push
popa
add
jg
sbb
mov
mov
jmp
pop
adc
ror
push
and
dec
cs
mov
dec
and
lcall
mov
add
xchg
mul
pop
push
cwtl
jge
or
jbe
xor
pop
in
jbe
test
adcl
js
lds
dec
jle
xlat
and
arpl
enter
jl
and
pop
xchg
xchg
hlt
addr16
push
shll
or
rcr
outsl
out
es
sub
jbe
stos
test
mov
lods
aas
stc
pop
xor
cmp
push
mov
insb
and
xchg
sbb
add
or
pop
add
cmp
and
shll
test
add
ja
dec
jbe
jmp
test
enter
adc
xor
mov
xchg
and
xchg
jne
idivl
pop
pushw
addps
and
fisubrs
ret
lret
test
dec
mov
lds
stc
insb
push
push
cmc
xchg
inc
mov
cmp
scas
dec
int3
adc
shr
dec
cli
pop
mov
push
fsub
fcomps
scas
jge
incl
int
xor
xchg
sub
js
into
imul
sbb
insl
cmp
dec
pop
xor
stos
xor
out
andl
xchg
mov
push
jge
adc
mov
cmp
lret
and
outsl
and
popf
enter
cli
popa
ljmp
sbb
cmpsl
divl
jg
push
fnstcw
lds
pop
mov
or
inc
sbb
ficoms
inc
mov
mov
lea
cmpsb
push
pop
push
jmp
inc
dec
inc
insb
dec
mov
xchg
das
and
add
sbb
test
arpl
ds
inc
stos
jg
fwait
test
lods
xor
js
pop
or
push
out
mov
cmpsl
and
jp
push
test
fwait
sbb
testl
sti
cwtl
fadds
rol
int3
fmul
mov
fisubs
aaa
adc
xor
negb
push
out
push
popf
mov
insb
dec
pusha
mov
pop
mov
loop
dec
mov
jo
clc
dec
shll
fsubrl
lock
sub
add
cmp
out
das
cwtl
in
push
lds
sbb
repz
pop
test
and
jle
fsubs
xor
cmp
and
pop
shll
xchg
mov
xor
push
out
sbb
jne
jge
adc
int3
sub
test
repz
or
add
bound
aas
loopne
test
push
sti
fisubs
cmc
mov
cld
mov
adc
add
leave
ds
out
inc
popf
lods
jns
push
mov
leave
lds
or
stos
sbb
ljmp
orb
das
lcall
xchg
sub
sbb
jne
in
dec
loopne
and
ret
ss
leave
jne
adc
mov
mov
push
mov
bound
jae
sbb
inc
cltd
mov
sbb
roll
das
sub
xchg
add
cs
mov
xor
mov
xchg
sbb
repz
cwtl
add
or
mov
sarb
aas
lret
dec
dec
mov
int3
imul
outsb
or
mov
js,pn
fsts
dec
insl
cmp
mov
mull
push
pop
xchg
inc
push
mov
enter
hlt
pop
mov
mov
push
inc
push
insb
into
dec
or
cmp
mov
daa
xor
inc
adc
mov
mov
mov
in
in
xchg
sbb
jge
adc
pop
push
pop
inc
ljmp
xor
dec
int
sub
stc
bound
fcmovnbe
jmp
movb
pop
sar
arpl
add
addl
insb
icebp
xor
pop
xchg
cli
mov
dec
push
push
loopne
movsb
nop
mov
dec
xchg
hlt
les
stos
sub
fcoml
insl
mov
mov
push
and
out
iret
mov
sbb
in
xor
or
jmp
shlb
mov
jge
pusha
fcoms
bound
xchg
dec
aam
es
xchg
mov
rcrb
mov
sub
stos
pusha
in
pushf
dec
xchg
push
push
jo
ja
pop
rclb
ljmp
mov
jo
mov
bound
and
cmp
scas
inc
add
out
sub
lds
cld
jp
jno
cmp
ljmp
adc
xlat
push
sub
pop
imul
scas
xor
sub
sbbb
mov
cmpsb
negb
imul
scas
and
cwtl
leave
jle
or
fists
rclb
pop
and
sub
sub
fsubl
xchg
mov
ficoml
mov
imul
out
mov
in
add
sub
fistpll
lds
and
cmp
sbb
shll
pushf
mov
cld
dec
mov
sbb
xor
mov
rolb
subl
fcomps
dec
xchg
test
ss
dec
mov
add
pop
mov
js
xor
sub
jg
sub
test
sbb
stos
cli
xchg
and
mov
cli
ret
inc
ficoms
cltd
mov
mov
jle
xchg
mov
dec
rcll
jne
mov
sbb
sub
inc
xorl
addr16
xchg
mov
insl
push
enter
addb
leave
mov
mov
fsubrl
adc
fnsave
inc
inc
test
dec
pop
push
dec
jo
insb
jbe
aad
loopne
and
adc
push
sub
bsr
sub
int
pop
sbbl
adc
dec
fnstsw
popf
jmp
mov
int3
xchg
mov
push
add
das
stos
jo
and
mov
shl
jno
adc
sbb
ds
or
pop
lds
xor
push
daa
shrl
sti
xchg
aaa
imul
push
rol
and
xchg
jbe,pt
sub
inc
call
sbb
push
jp
addr16
and
idiv
jno
pop
dec
mov
xchg
shlb
popf
arpl
out
test
xor
inc
lret
mov
pop
into
fisubl
rcrl
add
cmpsl
icebp
mov
xor
sbb
cmp
and
lods
lcall
std
push
or
xor
xor
call
iret
mov
dec
rcrb
adc
mov
sbb
fstpt
adc
dec
and
inc
jl
push
jne
add
adcl
jmp
call
and
mov
pusha
mov
sub
push
jns
and
and
fistpll
mov
hlt
ljmp
dec
sahf
fcoml
cmp
fisubrl
xor
ret
pop
pusha
push
mul
into
ret
sbb
xchg
add
pop
sbb
sbb
fisubs
shll
push
stos
push
push
add
mov
negb
inc
ljmp
popf
mov
mov
loop
cmp
xchg
mov
xchg
mov
xchg
jae
les
out
lods
fxch
addr16
sbb
add
mov
mov
cs
jmp
cwtl
jl
popw
sbb
pushf
into
test
loopne
cmpsb
cmp
insb
pop
aam
fidivs
cmp
and
lds
shlb
xorl
leave
mov
push
shll
dec
std
enter
imul
mov
test
es
mov
ja
and
call
ljmp
inc
icebp
es
mov
std
cmp
sub
jl
mov
sub
sub
loop
sbb
cmc
mov
and
xor
push
icebp
cld
mov
lret
mov
idivl
fs
mov
fstp
insl
sbb
jnp
test
repz
out
pop
xchg
jae
aaa
xchg
ret
xchg
mov
mov
dec
push
mov
outsb
lea
int
jl
xchg
addr16
or
divl
lds
gs
cmp
mov
fucomp
mov
int
xchg
mov
shrl
aas
sarl
pop
notl
into
or
in
movsb
shr
stc
in
dec
pop
or
hlt
and
mov
push
push
fldt
shlb
jl
or
xor
sti
insl
jns
lahf
imul
outsb
addr16
cld
leave
cli
roll
mov
cmp
pop
jmp
call
sahf
inc
and
mov
loop
in
shll
es
ss
daa
inc
lea
jne
je
or
inc
sbb
cmp
loop
sbb
mov
imul
jae
leave
lcall
sarl
arpl
movsl
inc
push
fs
movhps
and
mov
push
mov
push
movsl
lret
push
cmc
sbb
push
movsl
in
sarl
ljmp
lock
dec
mov
out
nop
and
xchg
std
nop
pop
dec
push
call
jb
in
gs
or
cmpb
mov
mov
fdivs
or
jne
mov
movsb
popf
adc
outsb
dec
push
pop
sbb
aam
mov
and
add
jne
mov
add
loop
in
dec
loope
xchg
pop
mov
sbb
rorb
push
bswap
pop
int3
jmp
mov
mov
mov
pop
clc
add
jo
mov
jnp
icebp
dec
adc
js
xchg
lds
stc
sahf
insb
sbb
or
add
mov
sub
stc
push
aas
mov
sub
ss
test
sub
ja
jmp
xchg
jmp
cwtl
mov
adc
shl
push
in
fnstcw
jg
cmc
mov
sbb
das
xor
ds
lods
scas
ret
xor
inc
leave
or
scas
in
add
adc
push
push
push
push
pop
adc
add
xchg
jnp
loopne
cmp
mov
xor
jae
out
or
bound
xor
push
adc
cmpsl
cmp
adc
pop
jecxz
pop
movsl
js
sbb
inc
lahf
mov
inc
in
adc
cmp
out
xchg
or
rcrl
imul
cmp
dec
adcb
sbb
popa
clc
sub
enter
pop
fs
mov
das
jle
dec
xchg
cwtl
pop
sbb
pop
cld
pop
mov
pop
pusha
sbb
test
lahf
jne
into
fisttpll
mov
aaa
popa
test
stos
into
pop
iret
sbb
mov
scas
push
in
mov
aas
jp
push
fsubr
jecxz
mov
inc
rorl
mov
add
lea
ljmp
adc
test
shlb
inc
inc
test
and
outsl
mov
out
repnz
and
addr16
jnp
jo
adc
test
out
arpl
loope
xchg
mov
cmp
sub
inc
insl
cwtl
xchg
lcall
scas
or
cmc
shll
das
adc
adc
addr16
or
or
shll
mov
clc
pop
aaa
and
fcmovnu
fimull
add
cmc
pop
inc
test
and
gs
test
inc
mov
mov
or
data16
dec
mov
mov
xor
outsl
inc
ret
or
loopne
dec
cmp
aaa
inc
jl
xchg
fsts
ret
mov
lcall
inc
fsubrl
clc
or
xchg
xchg
add
and
aaa
dec
bound
pop
imul
test
push
fidivl
fcompl
icebp
aam
out
push
push
xor
xchg
mov
fildll
pop
cmpsb
jne
cmp
mov
jge
jns
mov
fcmovne
loope
fildl
jbe
shll
sub
frstor
fistpl
loop
push
call
rcrl
pop
fsubs
xor
or
ja
cmp
sarb
enter
out
dec
sub
roll
add
sub
xchg
cli
cwtl
clc
insb
lret
addb
xchg
sub
call
adc
orb
sbb
mov
cli
jp
adc
mov
js
mov
xlat
ret
mov
cmpsb
sahf
sbb
loope
xchg
in
dec
sub
add
repz
lret
add
cmp
jo
fwait
outsl
jns
sbb
xor
dec
icebp
xchg
and
sub
sub
pop
int
push
movsl
xchg
sub
int3
pop
fwait
push
mov
mov
cmpsb
dec
mov
loope
outsb
call
lret
sbb
jae
loope
jnp
out
dec
xchg
inc
cmp
insb
stos
inc
pusha
cmp
dec
idivb
push
jmp
pop
pop
jb
and
xchg
scas
repz
inc
mov
mov
std
xor
rcrb
xor
cmp
daa
sahf
mov
imul
lock
in
lods
xlat
jmp
ss
mov
pop
xchg
or
xchg
xchg
lahf
sbb
inc
or
dec
or
ret
jb
cltd
inc
mov
jo
sbb
mov
jle
stos
jae
repnz
adc
pushf
inc
xor
jns
sarl
into
xchg
lea
fnstcw
sub
push
jg
and
rorb
push
ljmp
sub
sub
sub
addl
pushf
pop
stos
lahf
icebp
pop
decb
daa
jbe
mov
inc
ss
mov
or
adc
dec
and
sar
inc
sti
rol
mov
into
adc
leave
mov
dec
lret
fisubl
dec
jl
repnz
or
sbb
adc
mov
xchg
push
lret
xchg
sahf
xchg
pop
cmpsb
push
pop
push
aam
jg
mov
jb
hlt
int
out
mov
ds
cld
hlt
push
and
loop
or
mov
mov
ds
inc
sarl
inc
ror
rorl
add
mov
inc
or
ss
push
sbb
xor
out
mov
xorl
cmp
ret
rclb
test
stos
dec
sub
rorb
movb
jl
insb
jnp
inc
push
hlt
test
int
mov
push
stc
push
cmp
in
in
xchg
movsl
mov
sbb
and
fidivs
jmp
mov
pop
jp
push
and
mov
clc
xor
jecxz
clts
call
sbb
mov
or
into
jmp
or
fcompl
sbb
mov
mov
dec
js
xchg
popf
scas
xor
inc
dec
dec
and
insl
cmp
in
adc
js
ret
in
dec
cmpb
fidivrl
call
push
fbld
test
dec
mov
out
outsb
pushf
bound
jg
lock
pusha
lods
jle
mov
aad
sbbb
pop
fdivrl
jns
out
pop
imul
add
mov
fs
ljmp
push
ds
mov
fadd
fiadds
jg
test
clc
jg
in
dec
stc
leave
push
pop
shlb
jo
aam
daa
cmpsb
fnsave
jecxz
enter
xchg
mov
jb
push
xchg
mov
sbb
cmc
jge
xchg
adc
shrl
push
and
and
add
xchg
add
int
sbb
das
mov
jge
jp
sub
stos
pop
or
sbb
sarl
mov
mov
xchg
dec
lcall
jns
movsl
or
mov
subb
lahf
lret
jno
das
aam
lcall
push
xchg
fldt
sti
xor
cmp
dec
or
inc
xchg
dec
pop
cwtl
push
or
leave
sarl
mov
jnp
outsb
inc
cmp
mov
pushl
pop
cmp
scas
or
lods
pop
adc
lret
and
or
lcall
xor
cltd
andl
out
mov
aam
jo
push
and
add
pusha
divl
xlat
add
xchg
icebp
ja
adc
push
and
mov
push
insb
test
testl
jno
bound
xchg
les
pusha
xor
cmpsb
push
mov
js
out
add
cltd
add
cltd
xor
xor
xorb
add
jle
mov
bound
pop
dec
jl
dec
notb
add
xorl
push
sub
xchg
push
data16
movsb
xor
or
dec
dec
mov
sub
xchg
ret
cmp
adc
scas
sub
pop
dec
dec
push
xor
fbld
pop
push
dec
lret
lcall
or
jg
adc
adc
jbe,pn
loope
adc
add
aad
in
mov
pop
mov
push
mov
push
leave
and
adc
mov
nop
push
cmp
imul
mov
pop
testl
in
pop
dec
jle
and
into
adc
mov
test
or
inc
jne
inc
jno
adc
xor
add
mov
adc
cmc
jo
cmp
out
jo
lahf
cmp
cmp
mov
cmp
insb
mov
leave
and
push
in
shrb
popfw
fbld
xorb
das
pop
xor
les
repnz
mov
fwait
leave
jns
bound
pop
or
inc
ds
leave
loope
ja
call
xchg
fwait
outsl
lods
jno
adc
lods
fsubrs
jg
adc
bound
xor
jp
arpl
pop
or
jmp
les
mov
cmp
nop
ret
add
dec
cmp
pop
loope
fiaddl
push
out
jmp
jne
mull
lock
stos
pop
mov
sbb
cmpsb
pop
adc
inc
ficoml
into
mov
xor
shl
mov
xchg
lods
mov
je
xor
mov
shrl
sbb
and
cs
dec
int
mov
rcll
les
movsl
xchg
xchg
xchg
fdivrl
jo
jno
data16
call
sbb
jo
test
xor
dec
inc
int
mov
jl
shlb
jl
inc
lds
insb
push
jl
sbb
hlt
inc
xchg
inc
mov
ret
js
mov
push
sahf
pop
dec
push
iret
sarl
aam
ss
mov
mov
aaa
in
jns
mov
outsl
test
les
sub
xchg
inc
and
mov
and
jmp
nop
cltd
add
popf
sub
inc
jo
aam
mov
sub
sbb
dec
sub
jmp
or
std
ffreep
leave
sbb
sbb
jb
push
mov
lret
mov
add
in
add
jmp
mov
pusha
jns
test
aaa
ficompl
les
jnp
sbb
ja
fnstcw
inc
insb
sbb
insb
repnz
cmp
int
stos
pusha
sbb
fisttpll
jg
xor
lds
data16
push
xchg
outsb
or
insb
mov
shlb
cmp
sbb
mov
inc
ss
inc
in
fwait
cmp
stc
push
notb
data16
aad
push
ret
lcall
mov
sub
in
mov
cwtl
jns
push
movsb
loopne
cli
or
sarl
adc
mov
sub
pop
or
dec
repz
lret
or
adc
sub
pop
lahf
sbb
mull
or
mov
bound
jne
fwait
pop
sub
addr16
shrb
sar
dec
cmpb
pop
push
add
std
ret
js
outsb
inc
dec
mov
mov
add
cmpsb
xchg
lods
andb
push
cmp
cmp
or
and
outsb
cmc
jecxz
sti
fstps
imul
jl
xchg
xchg
dec
pushf
push
adc
je
cmp
sub
adc
ret
or
stos
lods
xor
inc
xchg
xchg
mov
filds
inc
cmp
lahf
inc
jno
cltd
addr16
fisubrs
bound
xor
mov
push
insl
mov
mov
fldcw
repnz
dec
gs
shr
gs
sub
dec
jle
jle
scas
rolb
cmp
or
test
pop
ja
ret
pusha
sbb
out
arpl
cmpl
lret
lret
jbe
popf
sub
or
mov
mov
fnstcw
or
jmp
add
jbe
in
and
iret
testl
adc
orb
jle
sub
push
pusha
lods
test
lock
mov
popf
jmp
sub
in
push
inc
mov
addl
jo
sub
sub
movsb
mov
jns
mov
mov
push
jb
add
bound
sbbb
mov
insl
sub
data16
push
inc
fadds
stos
mov
ljmp
incl
cwtl
negl
push
leave
mov
scas
fldt
call
ficomps
leave
xchg
adc
mov
xor
imul
addb
mov
ss
aad
sbb
dec
or
test
add
js
add
sbb
mov
or
repz
fwait
mov
out
lret
pop
sub
mov
ror
xchg
fdiv
dec
roll
out
cmpsb
cmpsl
mov
xor
mov
xchg
dec
inc
pop
dec
dec
jge
cmpsb
ds
out
fs
sti
and
dec
sub
fs
adc
into
or
mov
and
test
mov
lcall
mov
mov
shrl
jne
sub
mov
loope
xchg
lods
sub
and
int
dec
test
inc
mov
mov
cli
aad
rcrl
pop
or
cmc
call
pop
fists
jns
lock
jbe
movsb
popf
andb
jne
mov
lds
xchg
xchg
adc
or
rcrl
xchg
sbb
stos
sbbl
shrl
dec
outsl
and
icebp
and
fldl
fnstcw
lods
xlat
mov
jmp
les
ret
push
jne
inc
add
into
xchg
jo
xchg
and
inc
rol
mov
jmp
dec
ss
mov
xchg
add
jmp
sbb
xor
mov
ret
mov
mov
adc
or
sbb
int
inc
xchg
lock
sbb
in
pop
hlt
inc
push
std
loop
xlat
jns
cmp
xchg
cmp
icebp
sti
push
push
fadd
or
pop
arpl
imul
jne
ja
pandn
call
jno
mov
fidivrs
push
sbb
xlat
cltd
dec
dec
mov
loope
imul
mov
outsl
hlt
out
add
push
pushf
and
mov
enter
xchg
idivl
rcr
bound
ja
mov
and
inc
out
es
xor
pusha
add
adc
clc
pop
pop
cmc
cmp
xor
sbbb
stos
cld
outsb
cmc
dec
push
and
push
xchg
out
add
dec
das
or
pop
ds
andb
adc
push
fdivs
add
enter
loope
ljmp
add
fistpll
xchg
mov
mov
jb
pop
cmp
mov
pop
xor
mov
jp
or
lahf
rclb
ss
outsl
jp
sub
sbb
pop
inc
sbb
xor
out
mov
xchg
jl
dec
pusha
divl
rcl
daa
mov
jno
or
cmpsl
mov
sub
dec
iret
jbe
jp
or
lods
push
inc
sbb
xor
jg
loopne
cmp
lock
mov
addl
loope
xchg
dec
sbb
imul
repz
imull
out
xchg
jmp
pop
inc
adcl
js
out
inc
stos
and
lret
cmpsl
cmpsb
es
out
jnp
in
mov
in
dec
lcall
dec
add
push
mov
addb
mov
ss
push
popa
and
outsl
sub
dec
rclb
mov
in
mov
fstps
mov
rcrl
popa
in
lahf
pop
lds
out
jecxz
out
pop
test
push
xchg
inc
mov
insb
or
adc
jge
mov
xor
mov
and
das
imul
rcl
sbb
or
aaa
addr16
jne
jnp
cs
idivb
mov
mov
out
xor
outsl
mov
pop
add
inc
sahf
fmuls
scas
and
stc
movsl
xchg
push
cltd
add
xchg
ljmp
or
jbe
pop
mov
mov
popf
cmp
mov
jecxz
mov
push
orl
test
add
push
ret
ficomps
stos
cwtl
xor
mov
fs
pop
adc
jl
fwait
outsb
addb
xchg
andb
fucom
sti
cmpb
lret
push
adc
dec
insl
fldcw
xor
test
ja
jge
pop
or
xor
mov
inc
fimuls
add
mov
aam
cltd
testb
inc
sbb
and
sbb
cmp
rcr
mov
xorb
popf
push
imul
cmp
adc
xchg
test
cmp
out
jp
jnp
test
int
sbb
cli
add
sahf
jl
adc
pusha
or
sub
adc
repz
jno
jo
mov
adc
cmpb
mov
inc
xor
pop
adc
mov
xchg
sub
jns
imul
xchg
xor
rorl
out
sbb
mov
xchg
ret
cmp
mov
in
sub
pop
arpl
lcall
bswap
mov
aam
xchg
fldt
cwtl
pop
push
mov
repz
jbe
rol
or
mov
and
xchg
cmpl
sbb
outsb
sbb
inc
test
sahf
push
xchg
aad
mov
and
inc
dec
mov
dec
add
pop
push
sbb
pushf
aam
sbb
jnp
dec
movsb
jae
dec
enter
loop
pop
mov
bound
inc
sub
imul
das
xor
std
cmp
and
fcomip
dec
inc
and
jne
rorl
mov
dec
push
dec
imul
mov
jp
aam
fnstcw
jg
mov
imul
lret
jp
sarb
cli
ds
decl
pop
pusha
shlb
mov
out
jb
stos
lock
repz
push
jb
add
sbb
add
pop
test
jo
add
roll
dec
mov
ljmp
inc
xchg
gs
xchg
inc
shrb
mov
dec
lcall
mov
or
pop
in
lods
xchg
jo
leave
dec
rorb
mov
sbb
pop
pop
mov
mov
push
imul
ret
and
add
frstor
xchg
shlb
ss
sbb
in
sahf
sbb
popa
mov
xchg
dec
sbbl
insb
mov
fisttpll
imul
movsl
jns
pop
push
fninit
mov
jg
rcrl
ljmp
jmp
pop
pop
shlb
push
pusha
cmp
push
xchg
inc
push
mov
push
inc
movb
popa
jl
lahf
enter
fldcw
sti
int
cwtl
dec
push
pop
inc
cmp
bound
in
cltd
sbb
xor
adc
shlb
add
sbb
enter
xchg
push
sbb
addr16
add
xlat
in
dec
movsb
rclb
outsb
stos
push
mov
inc
xor
xor
stos
mov
loope
cmp
mov
pop
insl
mov
rol
jne
or
aam
sub
adc
mov
dec
int3
sbb
fisttpll
lcall
pop
shlb
sub
imul
add
in
pushf
and
cltd
call
sub
adc
adc
mov
subl
push
test
cmp
push
push
cmpsl
sbb
std
lods
pop
ret
push
pushf
mov
or
out
fiaddl
xchg
lret
mov
lds
aad
mov
stos
jl
das
mov
nop
sahf
mov
xchg
xchg
sbb
cmp
inc
mov
mov
int3
in
inc
sub
jns
mov
sub
repz
mov
mov
fsts
xchg
or
mov
les
stos
inc
loop
repz
sub
gs
mov
mov
scas
adc
decl
push
jecxz
pusha
jbe
xchg
push
inc
cmp
add
sahf
cmp
pop
jge
call
or
pop
inc
inc
xchg
fisubl
addr16
mov
shrb
repnz
xchg
pop
mov
out
xlat
mov
xchg
mov
shl
push
jg
push
dec
subl
mov
addr16
lea
sbb
or
push
pop
jmp
xchg
mov
int3
push
mov
xchg
jp
idiv
mov
leave
cli
movq
cmp
mov
aam
xchg
sbb
push
mov
nop
sahf
mov
mov
insb
test
mov
gs
popa
loop
out
dec
cmp
test
inc
mov
ret
enter
pop
jb
test
pop
shlb
call
adc
mov
jmp
inc
je
and
sub
xor
add
ja
xchg
mov
or
and
xor
scas
enter
xchg
mov
lds
push
nop
sbb
test
inc
mov
jmp
mov
push
pop
ds
loope
fisttps
jne
push
mov
xor
js
ret
sub
sub
pop
pop
cwtl
sbbl
cld
and
fmull
xor
xchg
fmul
mov
movsl
negb
adcb
add
aad
jmp
sub
lcall
repz
mov
fstpl
and
outsl
out
in
ss
iret
lods
mov
inc
or
loopne
jmp
adc
leave
push
in
cmp
ja
ljmp
pop
int3
jbe
sahf
add
je
fnstcw
inc
or
push
mov
ss
fcoml
cmp
xor
push
cwtl
shl
push
lock
xchg
mov
inc
scas
gs
repnz
rolb
pop
jmp
and
imul
xchg
sub
xlat
fnsaves
lcall
popf
out
imull
stos
jnp
xlat
lret
xchg
out
sahf
idivl
pop
mov
out
clc
inc
mov
xchg
cmp
mov
push
adc
sbb
dec
add
andl
iret
rclb
pop
mov
mov
scas
inc
dec
cmp
movsl
sub
or
pop
mov
mov
cmp
sub
imul
xchg
push
cmp
xchg
lret
aad
inc
mov
xor
push
adc
clc
mov
push
xor
inc
adc
js
adc
les
leave
pop
xor
dec
andl
jp
aaa
enter
dec
mov
or
xor
push
mov
push
xlat
and
popa
leave
cmpsb
mov
and
ret
rcll
ficoms
pop
jno
andl
hlt
xchg
nop
pop
add
gs
pop
ret
jne
sub
mov
repz
fwait
nop
cli
sahf
pop
aaa
mov
sti
jbe
mov
sahf
out
and
dec
and
cli
out
repz
mov
into
mov
insl
cmp
xor
xchg
pop
nop
xor
jmp
idivb
inc
inc
iret
int
dec
jbe
pop
fs
call
sbb
loop
inc
inc
or
in
in
xor
mov
inc
mov
and
pop
loop
jp
xor
xchg
sub
in
mov
mov
in
clc
mull
aaa
nop
lods
xchg
sbb
arpl
lods
je
jmp
fldcw
mov
cli
xor
adc
xchg
subb
das
call
xor
sub
xor
jo
insb
pop
pop
icebp
inc
cmp
mov
mov
jle
daa
outsl
mov
pop
mov
cmp
push
jns
cmp
sub
cwtl
or
jb
cmp
mov
int
sub
cmc
dec
pop
cmp
xchg
inc
das
jno
lea
dec
sahf
js
xor
mov
and
or
jbe
lcall
pop
jmp
pop
mov
pushf
fstps
bound
ret
roll
mov
ret
add
push
cmp
dec
cmp
xor
fwait
push
sarl
test
and
imul
jne
push
ja
pusha
pop
lods
gs
clc
sbb
push
sahf
aaa
push
je
pop
adc
jnp
mov
stos
inc
dec
mov
cld
aam
mov
int3
cwtl
fisubrl
imul
nop
popf
dec
clc
scas
push
jg
movsb
scas
std
int
mov
adc
cmp
movsl
subb
enter
les
dec
sbb
mov
out
push
lahf
call
loope
outsb
popa
out
inc
aad
sbb
mov
jno
outsb
das
inc
xchg
dec
xor
repz
aad
add
mov
test
cmp
imul
ljmp
push
push
sub
dec
and
out
jl
add
stos
cmp
dec
push
cmp
mov
cmpsb
add
in
dec
mov
test
xchg
cmp
aam
in
lcall
push
aad
icebp
leave
or
push
js
inc
add
dec
cmc
cmpsl
jg
icebp
jmp
cmp
mov
in
push
scas
mov
fadd
fnstsw
dec
pop
mov
add
adc
mov
xchg
pop
adc
popf
in
push
in
lret
mov
mov
scas
jne
arpl
xchg
aad
push
sub
aaa
dec
insb
push
aas
loope
sub
out
inc
lret
xchg
adc
decb
into
push
scas
hlt
inc
and
lock
pop
imul
adcb
in
in
int3
outsl
xor
test
lret
jg
dec
arpl
nop
push
popf
lret
mov
lret
fwait
das
adc
ror
cmpsb
xchg
fwait
sbb
jmp
inc
inc
popf
clc
test
fmull
push
aad
frstor
movb
or
or
aaa
mov
sub
aam
jbe
mov
sub
mov
or
cmp
stos
sbb
adc
xor
xchg
enter
ret
out
ret
add
pusha
and
fmull
cs
sbb
inc
nop
mov
fsubrl
andl
mov
pop
sbb
out
xchg
enter
inc
sub
jge
aam
insb
dec
pusha
push
leave
xchg
mov
dec
xchg
lret
xchg
cmpsb
cwtl
fwait
pop
mov
adc
in
repz
xlat
je
aad
sahf
es
or
testl
jp
and
mov
aaa
sub
repz
mov
std
lahf
test
iret
test
fcomip
movb
sub
cmp
pusha
dec
mov
jne
loop
mov
dec
add
dec
fiadds
movsl
sbb
pop
test
nop
or
je
or
dec
std
popl
mov
dec
mov
cmp
sbb
mov
dec
out
js
push
leave
and
xor
shl
push
fnsave
cmp
xchg
mov
hlt
imul
repnz
bound
mov
and
add
fildll
int
das
push
incl
out
xchg
xchg
sbb
add
push
ret
xchg
mov
addl
mov
xor
sti
cltd
repz
add
in
shr
test
popf
fiaddl
cmp
mov
inc
mov
stos
aam
imul
fnstcw
xchg
jp
mov
inc
call
stc
xchg
ds
cmpsb
dec
divb
push
mov
mov
push
jno
dec
lods
cmp
rcll
push
and
aam
mov
adc
mov
ljmp
adc
adc
in
icebp
test
movsb
cmp
repz
push
mov
push
push
pop
push
cmpl
sbb
popa
push
adc
mov
subl
pop
xchg
stc
xor
xor
daa
in
xchg
sub
test
rorb
jge
ret
and
inc
es
popf
cmp
pusha
pop
mov
add
xor
lds
cld
scas
mov
sub
loope
push
cmp
push
aad
mov
cmpsb
movsb
cmpl
xchg
inc
pop
jmp
aad
xlat
push
mov
mov
or
int
dec
xchg
jno
rorl
fwait
je
inc
cmp
xor
pop
call
mov
outsb
mov
shrb
js
xchg
insl
enter
and
sahf
cmp
div
ret
mov
push
ja
add
dec
aaa
mov
push
sti
lock
aad
cmp
cmp
pop
xchg
loopne
rcrb
push
pushfw
inc
fmuls
sbb
sbb
push
dec
in
jp
call
int
sub
call
lret
in
test
jg
and
xlat
mov
imul
inc
mov
negl
stos
shll
pop
jae
test
xchg
lock
push
sbb
inc
xchg
cmpsl
xchg
scas
loop
push
jno
pop
sub
int3
sub
push
xor
iret
insb
push
rorb
add
mov
cmp
bound
pop
cld
idivl
pop
rcrb
inc
aaa
add
popf
daa
adc
jns
ds
mov
cs
dec
js
imul
pop
leave
push
lea
dec
aad
cwtl
push
cmp
lods
adc
lcall
test
mov
jge
sub
add
or
nop
mov
lret
xchg
xlat
or
les
push
xor
add
cmc
ljmp
test
adcl
jecxz
jno
xchg
jbe
mov
fst
adc
cmp
sbb
mov
pop
lock
dec
leave
jecxz
pop
imul
pop
mov
adcl
adc
push
lret
xchg
pop
movsl
dec
dec
push
pop
mov
mov
lock
xor
jmp
out
inc
add
jb
clc
adc
inc
xlat
jle
cmpsl
loope
dec
in
dec
pop
cmp
dec
out
pop
or
clc
mov
pop
mov
push
das
cmc
dec
fmuls
in
je
inc
and
dec
popa
inc
xchg
jo
shl
lods
shrl
test
aas
test
jb
xor
lret
xchg
or
test
mov
sbb
xor
dec
xchg
clc
fnstsw
lret
pop
sbb
ljmp
mov
orl
adc
cmpsl
mov
lahf
and
xchg
clc
mov
mov
or
daa
imul
adc
iret
mov
aaa
lcall
pop
push
or
pop
out
ja
mov
outsb
jnp
jl
xchg
lret
pop
and
mov
mov
adc
pop
daa
push
dec
adc
inc
push
cmp
pop
inc
jge
adc
lahf
ja
pusha
pop
sbb
push
lret
pop
add
stos
inc
dec
outsb
push
ds
cmc
pushf
cmp
push
test
mov
dec
flds
repnz
xor
mov
lahf
in
mov
or
repz
sarl
aad
pop
push
dec
adc
stos
dec
adc
lds
and
pop
sub
jmp
scas
je
pop
sahf
out
push
sbb
push
sbb
jae
pop
inc
mov
and
cmc
sbb
les
pop
dec
push
dec
sub
add
rclb
pop
enter
mov
pop
or
in
mov
jne
sub
test
inc
loopne
sti
cmp
pop
mov
in
mov
out
gs
pop
shll
insl
dec
pop
mov
pushf
or
xchg
clc
call
push
jecxz
xor
mov
mov
pop
add
data16
out
loope
xchg
ret
cmpsl
add
xchg
and
dec
loopne
xor
adc
push
loope
or
ja
pop
insl
add
push
dec
sbb
mov
int
fdiv
loopne
xchg
in
add
or
xchg
dec
mov
test
cmp
pop
mov
and
ret
pop
insb
xchg
mov
jb
add
ficoml
cmp
and
sub
leave
dec
mov
out
mov
fstl
jno
jmp
sub
cmpsl
mov
das
dec
ljmp
arpl
pop
mov
ret
outsl
adc
jg
rcrl
push
je
aaa
into
jns
mov
lea
jmp
jne
jmp
in
test
or
add
push
shlb
sub
or
and
hlt
mov
popf
aad
mov
mov
and
bound
sti
adc
cli
and
out
sbb
movsb
xchg
push
jg
xlat
sbb
fdivrl
movsb
std
sub
insb
cmpb
pop
test
or
sahf
loopne
adc
fs
jmp
sub
rorl
insl
jo
ss
mov
in
xchg
xor
cmpsb
lock
movsb
pop
xor
mov
add
cmp
sbb
sub
dec
pop
lea
or
shll
das
cmp
in
pop
pop
out
sub
les
imul
movsl
icebp
jp
pushf
loope
outsb
inc
out
cmpsb
xor
push
adc
stc
xor
jge
mov
dec
jae
fsubp
add
imul
sbb
cmpsl
movsl
push
ds
fmuls
jle
fwait
loopne
aaa
push
inc
mov
mov
pop
shll
pop
mov
or
dec
pushl
insb
or
insb
xor
mov
pop
mov
enter
sarl
or
or
add
sub
sub
jge
jo
adc
call
out
outsl
fcoml
lcall
mov
add
fucom
and
fildl
jmp
aam
push
lahf
jns
inc
pop
inc
fistpl
test
mov
sbb
dec
sub
outsb
add
out
fsub
repz
pop
pop
push
mov
shrl
sub
mov
cmpsl
dec
lahf
jae
daa
das
stos
jne
dec
into
rcr
das
xchg
add
rcrl
in
push
push
inc
movsl
lahf
xchg
xchg
loop
pusha
push
xor
roll
jl
jmp
js
fcmovnbe
cs
or
pop
sub
push
inc
jle
fldcw
sub
pop
lock
xchg
rorl
clc
xor
lea
roll
ds
addl
notl
aaa
call
rclb
sbb
daa
jecxz
in
test
dec
jg
test
inc
jns
out
into
fldcw
inc
push
outsb
jmp
mul
popf
cmp
sub
pop
and
ret
lock
in
insb
cli
inc
sahf
jnp
iret
mov
or
mov
and
jbe
jns
adc
push
mov
fsubrl
pavgw
xor
adc
sbb
push
jb
repz
cmp
push
and
jmp
mov
pop
ret
or
andl
lock
loop
inc
mov
cmpb
aas
scas
fdivrs
dec
push
outsb
aaa
mov
jmp
sbb
mov
inc
ja
cmp
and
push
rcrb
cli
mov
rcrl
dec
pop
fs
xor
dec
fdivp
cmovle
movsl
pop
in
pop
nop
test
pop
inc
bound
pop
dec
test
gs
repz
je
jo
xor
and
mov
aad
push
xor
jns
jno
into
mov
xor
idivl
push
pop
sahf
sbb
icebp
jae
xor
xchg
cwtl
mov
aad
aam
xchg
bnd
orb
sbb
insb
sbb
mov
sbb
dec
das
sbb
sub
insb
dec
lea
into
mov
jnp
jmp
push
lahf
call
cwtl
cmp
pushf
nopl
scas
insb
outsl
pop
adc
push
fstpl
mov
fs
mov
lcall
pop
mov
stc
nop
clc
jns
sahf
loope
push
mov
dec
out
inc
fcompl
mov
sbb
les
shrb
shrb
imul
ret
in
jae
jae
add
scas
mov
push
aas
sbb
cs
add
inc
cli
adc
popa
or
and
call
aam
mov
lods
sbb
mov
test
lods
inc
out
and
fcos
add
mov
dec
xchg
lret
push
mov
mov
aas
inc
mov
repz
out
push
mov
fsubrl
js
adc
mov
or
int
out
out
cwtl
fs
add
add
arpl
jg
jmp
ret
sti
lret
outsl
cmp
imul
andl
cmpsl
cmp
fmulp
test
fdivr
lock
inc
addl
dec
scas
or
xchg
mov
lods
scas
pop
enter
clc
push
sub
inc
adc
test
dec
mov
add
sti
in
add
jg
jnp
in
es
lods
dec
sbb
loop
push
mov
lods
loop
push
or
into
push
sbb
and
idivb
popf
pop
aad
andl
insb
daa
out
shll
in
cmpsl
enter
inc
mov
aas
xchg
scas
mov
test
rcrl
or
push
xor
mov
dec
inc
xor
scas
cmp
dec
aad
cmc
ljmp
pop
aas
lret
decb
mov
push
or
and
loope
mov
icebp
mov
jp
inc
rorb
xorl
jno
loop
fildll
sbb
pop
mov
jbe
or
inc
sbb
mov
mov
ror
notb
mov
sbb
idivb
jmp
dec
aas
icebp
mov
pop
lods
add
enter
push
add
mov
push
adc
ror
push
test
jne
and
push
push
dec
mov
xorl
xchg
push
pop
xor
mov
push
inc
add
mov
imul
push
adc
neg
insb
hlt
dec
sbb
adc
push
aam
push
xor
les
cmp
into
mov
pop
in
mov
inc
mov
cmp
pusha
imul
rcll
push
push
adc
jae
xchg
std
sub
lret
lea
sbb
or
fildll
ret
dec
je
mov
imul
call
out
push
jno
rclb
sbb
cmc
cmp
adc
andb
test
scas
lret
push
pop
adcl
mov
fldcw
iret
mov
cld
rorb
sbb
cmp
fs
inc
lods
aas
aaa
cmp
jno
nop
mov
ficomps
ds
xchg
sti
mov
addl
jg
rcll
jl
jb
pop
js
sahf
mov
xchg
rorl
out
xchg
add
fs
loope
sub
imul
aad
repz
mulb
cmc
iret
fistps
out
lds
lock
and
sub
sub
cwtl
adc
jp
mov
stc
je
rolb
imul
push
and
in
fs
mov
sbb
cmp
xchg
bnd
sbbl
inc
sub
push
mov
lods
icebp
lods
into
xchg
mov
push
fcoms
fimuls
shll
outsl
jle
fcomp
paddusw
fisttps
sbb
add
mov
mov
pop
or
xchg
out
fists
imul
push
pop
cmp
or
pop
inc
push
xor
push
push
xchg
jecxz
push
cs
cmp
or
rcr
jb
hlt
fisttps
ljmp
adc
shlb
lock
sahf
jnp
jae
iret
xchg
and
mov
dec
call
cmp
jmp
add
sbb
dec
add
mov
sub
repnz
adc
cs
into
in
xor
popf
mov
pop
pop
pusha
movsb
leave
hlt
jnp
jnp
inc
mov
pop
out
mov
mov
loop
shll
mov
scas
push
jle
jbe
cmpsl
inc
cs
inc
push
xchg
xchg
jnp
test
fnstsw
mov
inc
mov
mov
mov
and
dec
pop
insl
cmp
cmp
adc
rcl
pop
incl
sbb
cmp
mov
lds
cmp
popf
daa
xchg
scas
sbb
xchg
or
cmove
fsubrl
dec
xchg
in
dec
sub
loope
stc
leave
shrl
int3
inc
mov
inc
movsl
enter
aam
shll
sbb
jmp
add
cmpsb
or
xchg
sbb
cltd
xchg
inc
or
xchg
jle
sbb
lea
int
push
inc
fstps
mov
test
iret
pop
mov
push
sbb
dec
jne
popa
mov
test
or
addr16
out
lret
inc
adc
lds
clc
nop
cmp
ret
jecxz
das
xchg
notb
dec
movsb
andb
das
xlat
int
stc
std
cmp
imul
mov
xchg
sbb
cmp
mov
jae
xor
fwait
mov
and
mov
fsubrs
sub
fwait
stos
clc
jg
jl
in
int
dec
out
xor
lahf
dec
pop
cld
xchg
rolb
aam
sbb
incb
lock
jl
xchg
mov
popa
push
dec
aaa
das
js
jo
pushf
mov
icebp
cmpsl
in
sub
movsl
shll
xor
add
jecxz
fists
xchg
jne
daa
push
mov
xor
mov
test
lods
icebp
adc
jno
arpl
or
add
adc
call
or
cmp
sbb
and
loop
sub
lret
dec
mov
test
fiadds
mov
inc
loop
aas
pop
push
or
dec
shll
loope
rorb
leave
sahf
cwtl
aad
out
pop
lds
loop
mov
es
in
add
xor
mov
sahf
lret
mov
lret
pop
leave
jbe
inc
daa
loop
lods
add
fwait
dec
je
mov
pop
pop
dec
jl
test
mov
or
jecxz
and
nop
cmp
pop
push
pop
mov
xor
pop
sti
adc
iret
repz
scas
pushf
jge
inc
push
or
out
jns
inc
push
stos
insl
mov
out
lds
mov
dec
jp
sbb
mov
mov
stos
rcrl
arpl
outsl
mov
mov
sbb
jge
xorl
add
test
jb
push
divl
xor
aam
gs
fwait
imul
pop
adc
jecxz
test
shll
fs
cmpsl
setne
movsb
cld
mov
fwait
jge
push
mov
fwait
ljmp
jl
mov
jne
pop
add
add
push
push
mov
push
xor
into
aam
vcvttps2dq
fmulp
jp
movsl
lcall
arpl
sahf
lods
jmp
mov
cmp
iret
mov
push
hlt
pop
mov
lods
sbb
insb
gs
push
or
lds
es
sbb
inc
adc
cmp
fsub
mov
dec
inc
mov
push
test
xorl
insl
movsb
fs
or
add
cli
xchg
xlat
pop
dec
sahf
lock
clc
rorl
cmpsb
jno
or
outsl
sub
xchg
inc
testl
leave
mov
cmc
call
loopne
jns
add
nop
pop
ret
lds
xor
test
addr16
xor
mov
adcb
shrb
sbb
inc
pop
cmp
bound
cwtl
adc
and
push
rorb
lds
stos
ss
ret
outsl
lcall
mov
test
lcall
jle
xchg
stc
ds
enter
js
xor
dec
lock
ljmp
cmp
ss
dec
in
cmp
add
lea
jp
inc
push
push
aam
hlt
orl
dec
mov
aas
inc
add
loopne
fistps
insl
xlat
enter
pop
sub
dec
pop
test
sub
jno
out
mov
and
sbb
out
push
mov
lods
pop
cs
cmp
ljmp
fistps
add
gs
sub
gs
ffreep
mov
mov
adc
xchg
je
mov
ljmp
push
and
loopne
cmp
loopne
pop
add
lcall
jl
fisttps
es
stc
push
jns
popf
mov
xor
cld
test
mov
cmp
sub
push
and
daa
cld
into
bound
jns
int
ret
mov
je
imul
fs
ja
loopne
mov
push
push
cmp
std
dec
xchg
inc
cwtl
fidivs
mov
repz
xchg
addr16
pop
fnstcw
pop
sbb
scas
pop
enter
push
pop
jae
mov
orl
or
inc
xchg
adc
pop
or
in
mov
sbb
shl
sbb
loop
mov
sub
mov
aas
cwtl
ror
pop
into
xchg
pushl
mov
xchg
jns
mov
adcl
push
cli
jg
cmpb
lcall
cmp
push
mov
push
jle
jmp
cmp
imulb
push
xchg
out
data16
mov
pop
out
repz
xchg
clc
xor
not
mov
xchg
fldl
adc
mov
jge
jle
hlt
xchg
inc
inc
out
xor
shll
jecxz
das
xchg
enter
clc
cld
add
test
push
outsl
rcl
or
sub
jno
pop
call
aad
mov
add
jmp
sub
cli
jnp
mov
add
aas
push
mov
in
jo
pop
call
loopne
mull
fcoms
fcoms
inc
addr16
xor
push
sub
pop
add
cli
int3
mov
incl
repnz
outsb
push
mov
addr16
ljmp
cltd
hlt
push
roll
lds
mov
jns
cltd
mov
das
outsb
sahf
pop
orb
jns
test
inc
push
jbe
daa
xorl
mov
sbbb
inc
sub
mov
push
inc
xor
inc
cwtl
mov
cmp
lea
es
iret
pop
loop
xchg
jmp
sbb
mov
dec
fistpl
orl
mov
push
loope
sub
sub
push
jge
adc
xchg
dec
mov
jecxz
xlat
sbb
sub
ja
sbb
out
icebp
test
adc
mov
and
fs
cmc
adc
divl
mov
aam
dec
fldt
lret
dec
push
jno
xchg
lret
dec
jnp
test
and
mov
mov
add
mov
cwtl
inc
out
xchg
ret
out
out
mov
in
sbb
cltd
cmp
sub
out
in
mov
lods
jnp
pop
cmp
mov
adc
sbb
sbb
outsb
lea
shr
mov
push
enter
pop
push
insb
fcompl
imul
push
fcomps
das
in
mov
mov
xchg
aam
lcall
imul
nop
hlt
adc
test
test
pop
inc
dec
push
jmp
jb
add
imul
pusha
dec
mov
xorl
jns
xchg
mov
mov
loop
mov
cmovo
aam
adc
push
adc
aas
repnz
inc
out
xor
mov
int3
adc
outsl
mov
mov
divb
jno,pn
loopne
adc
mov
jmp
add
add
sbb
in
cmp
pop
sbb
cmc
lock
loop
xor
mov
insl
lcall
add
inc
push
mov
mov
pop
push
movl
outsl
gs
inc
mov
pusha
pushf
aad
and
lcall
gs
rclb
jb
hlt
div
or
cmp
out
std
ror
mov
aas
insb
jnp
in
test
xchg
add
jno
pop
pop
mov
fstpt
cmpsb
dec
adc
push
jnp
iret
aam
fs
sbb
icebp
or
dec
mov
andl
xchg
mov
xor
xor
nop
mov
mov
mov
ja
mov
pushf
cwtl
jo
sub
push
std
popa
or
mov
mov
cmp
outsl
movsb
cld
xchg
adc
mov
sbb
xor
adc
enter
test
sbb
adc
sub
mov
popf
sbb
push
sub
cli
adc
cmc
mov
mov
loopne,pn
jo
data16
mov
iret
push
pusha
shll
divb
push
mov
cltd
cwtl
fistpl
xor
int
add
adc
dec
dec
xor
cmp
jb
inc
aas
add
sub
bound
adc
jae
ret
and
punpcklwd
dec
out
stc
jo
cmc
out
push
sahf
loopne
imul
test
mov
inc
clc
int
fisubl
or
and
mov
pop
dec
pushf
sbb
pop
xchg
aaa
mov
test
idivl
adc
and
mov
adc
xchg
into
jns
insl
mov
xchg
mov
lea
and
aas
dec
push
sub
les
mov
stos
bound
lods
out
ret
xor
ss
test
ljmp
jle
insl
adc
sub
add
xchg
inc
adc
cmc
jne
js
je
and
shrl
xchg
add
mov
jbe
jl
das
mov
outsb
adc
in
jmp
movsl
loopne
sbb
arpl
test
xchg
inc
adc
cltd
movsb
call
aas
cld
add
cwtl
mov
data16
pop
mov
iret
jne
movsl
xchg
xchg
mov
fwait
movb
pop
out
xchg
negb
ret
pushf
rcr
inc
xor
test
icebp
loope
jecxz
push
pop
pop
xchg
cltd
pop
loope
mov
lret
dec
hlt
jge
push
xchg
addl
lret
stos
push
out
mov
les
cmc
mov
data16
call
cmp
loop
and
mov
ds
std
mov
xor
test
mov
sub
mov
sbb
loope
jae
dec
pop
ret
add
adc
iret
pop
inc
push
les
enter
into
pop
fdivrl
outsl
test
aad
adc
jge
mov
rolb
inc
mov
mov
mov
pushf
cmp
sub
aam
je
mov
pop
xchg
aas
sbb
push
daa
jae
lahf
loope
cli
mov
inc
sub
out
mov
mov
cmp
cmpsl
mov
add
jge
repz
cmp
js
outsb
cmpb
add
inc
jo
pop
pushf
les
xlat
popa
in
jle
popf
adc
mov
mov
les
cs
push
xor
aaa
cmp
movl
cmpsl
cmpsb
jl
cld
mov
fsubrs
push
sub
cld
push
cmpsl
test
mov
mov
mov
orl
xor
jge
adc
inc
pop
adc
mov
inc
int3
outsl
out
lods
mov
shl
and
mov
mov
out
dec
mov
xchg
movl
jb
js
gs
sub
adc
adc
sub
ljmp
push
dec
jle
mov
inc
std
ljmp
repz
decl
mov
in
jmp
shll
mov
adc
fisttpl
scas
mov
and
ret
imul
popfw
imulb
mov
les
push
dec
xor
in
sahf
jecxz
jae
mov
jg
pop
pop
lcall
mov
test
enter
or
popf
stos
sbb
jecxz
xchg
push
aaa
clc
shr
rcpps
push
divb
lret
cmp
push
insl
cmp
fadds
cmp
jne
les
cmp
cmp
or
jp
cmc
mov
mov
insl
dec
inc
cld
popf
jmp
test
and
leave
xor
icebp
cmc
ss
int
out
mov
cs
jne
out
out
icebp
and
aad
andl
dec
cld
xor
mov
mov
dec
aam
gs
ds
xlat
xchg
jne
jae
ret
jno
adc
mov
pop
xchg
lock
cmpsl
dec
sub
adc
movsb
fcmovnbe
and
faddl
push
cmp
fldcw
mov
fnstcw
out
sar
fs
xchg
mov
sbb
jae
push
stos
int3
adc
leave
sbb
orl
fsubrs
call
pop
sbb
pop
push
xor
adc
dec
pushf
pop
repz
ss
xchg
mov
push
aad
push
adc
sarb
inc
sub
jl
roll
push
add
adc
jno
loopne
adc
push
add
ficoms
sarl
xor
dec
pop
sub
loope
sbb
sbb
jnp
xlat
mov
xchg
adc
cmp
xor
dec
ja
pop
pop
lea
popf
push
xchg
rcrl
pop
pop
push
dec
sbb
push
sub
jle
or
adc
xlat
xchg
add
ljmp
insl
scas
data16
lods
pop
dec
les
sub
mov
mov
xor
in
loop
out
stc
xor
and
push
sbb
sbb
int
daa
lahf
fisubl
push
ret
mov
pop
iret
les
xchg
mov
ror
sub
mov
jle
push
inc
and
add
mov
std
adc
out
andb
push
pushf
incb
dec
mov
aaa
shlb
add
out
mov
lret
xchg
in
lea
lret
push
imul
xor
push
jle
sbb
xor
sahf
jp
test
cmpsl
icebp
add
add
lock
jmp
out
mov
pop
cwtl
add
mov
lds
mov
loopne
sbb
cmp
cld
neg
push
arpl
insb
cmc
nop
ljmp
jecxz
dec
inc
xor
jge
arpl
adc
mov
lock
loop
stc
jecxz
jo
mov
jb
es
mov
mov
hlt
sar
js
shl
add
cmp
cmp
fidivrl
outsl
mov
add
xlat
pop
sub
js
push
or
pop
pop
shr
mov
shl
adc
in
xchg
adc
add
lds
push
test
loop
mov
jge
xor
add
mov
popl
pop
and
testb
out
sbb
sub
mov
in
sub
add
sbb
mov
dec
push
test
pop
ffree
mov
dec
push
fadd
into
xchg
nop
test
mov
dec
jo
sahf
cmp
inc
push
inc
jge
rol
mov
xor
push
fwait
mov
sti
mov
add
jmp
nop
lds
push
enter
xlat
mov
outsb
adc
aaa
and
xchg
xor
sub
mov
mov
mov
sbb
rorl
pop
sbb
pop
or
sbb
lods
xchg
xor
mov
fnstenv
jge
mov
mov
jbe
enter
jo
xchg
mov
popf
fidivrs
dec
pop
fldenv
test
dec
mov
or
dec
repnz
stos
pop
pop
lods
dec
cmp
mov
out
pop
mov
mov
fwait
call
pop
pop
mov
cli
mov
xchg
cmp
outsb
aas
add
cmp
dec
sbb
xchg
fiadds
lock
test
int3
dec
arpl
into
nop
cmp
push
mov
push
mov
leave
push
iret
aam
mov
xor
movsl
popa
jne
leave
inc
inc
inc
daa
pop
mov
lea
fwait
stos
cltd
inc
in
lods
xchg
push
cli
adc
stc
or
add
xchg
in
xor
sub
push
mov
dec
cmp
shrb
rcrb
into
cmp
subl
stos
adcb
loope
aaa
ds
inc
fidivs
adc
insl
repz
mov
inc
or
dec
andl
mov
das
gs
iret
jecxz
mov
mov
jae
mov
stos
ret
test
lds
into
or
xchg
sarl
jns
loope
mov
xlat
fldenv
xchg
popa
xlat
ret
mov
das
mov
daa
lods
outsb
inc
inc
mull
xorl
int3
ja
in
pop
subb
mov
adc
push
jb
clc
and
cld
fisubl
or
out
push
add
and
scas
dec
sub
ljmp
pop
mov
cwtl
outsb
imul
and
mov
push
adc
stos
cmpsl
gs
ror
testl
es
xor
fbld
and
stos
gs
rcrb
rorl
jno
jne
pop
mov
lret
repnz
jle
clc
aas
pop
xchg
jp
cwtl
lods
push
int
repz
and
out
xchg
stc
pusha
cmpb
mov
rorb
sti
adc
mov
push
sbb
sbb
pop
popa
add
cmp
adc
test
or
pop
test
xor
in
xor
jmp
xchg
inc
mov
std
pop
mov
sbb
push
inc
int3
sbb
ds
dec
push
out
cmp
std
js
cmp
test
pop
insb
lock
xchg
or
ja
ds
hlt
mov
bound
rcll
add
scas
ret
or
lret
jecxz
frstor
lds
mov
or
sub
push
push
testb
repz
loope
mov
movsl
dec
xor
push
nop
jp
xor
rcr
add
adc
cltd
adc
xchg
inc
insl
xchg
popa
mov
out
iret
aad
lods
sbb
cltd
enter
cmc
and
ror
jns
sbb
jge
je
dec
rorb
and
ret
add
popa
dec
xor
imul
jb
jne
mov
addr16
or
aaa
shlb
fcomps
cmpsb
dec
mov
jg
mov
add
mov
cmc
push
lock
std
mul
icebp
mov
repz
jecxz
mov
int
add
aaa
incb
sti
jge
into
xchg
jp
nop
cmp
jae
repnz
add
jge
adc
sub
add
lock
shlb
es
cmp
cwtl
aas
dec
and
pop
mov
mov
pop
cmp
xor
out
pop
insb
pop
out
test
xchg
adc
add
mov
dec
cmp
pop
data16
test
repz
xor
pop
sub
dec
orl
push
mov
incb
push
inc
mov
into
or
js
and
clc
das
xchg
in
mov
hlt
dec
pop
push
out
jbe
dec
mov
add
rcrl
push
inc
and
push
repnz
mov
into
pop
pop
jle
es
dec
mov
inc
je
call
movsb
mov
inc
sub
aad
dec
inc
pop
sbb
push
push
jns
scas
xchg
xchg
jo
rcrb
inc
lret
mov
cld
repz
int3
mov
cmpsb
popw
out
mov
mulb
jo
xchg
in
mov
insb
push
adc
insb
in
dec
jp,pn
adc
push
shlb
loop
sub
cld
add
rorb
push
fsubr
cmp
rclb
add
and
sarl
inc
or
mov
lds
test
sub
xor
ljmp
nop
pop
xchg
arpl
mov
mov
add
push
add
leave
lcall
and
shll
push
mov
jbe
pop
mov
leave
or
sbb
pop
rorl
lea
xchg
cmp
cmp
jle
mov
je
test
scas
mov
test
test
sti
add
cmc
shrb
fistpll
inc
push
in
lcall
fisttpl
jl
stc
fidivl
out
sub
testb
xchg
dec
cmpsb
ss
rol
ret
adc
mov
inc
mov
push
scas
adc
mov
clc
adc
or
push
mov
cmpsw
cmpsl
rcl
pop
pop
aam
push
add
xor
xchg
jp
cmp
xor
adc
inc
xor
push
inc
imul
add
adc
paddusb
imul
mov
shrb
jb
adc
jp
xor
cmp
scas
cwtl
mov
gs
cli
sbb
adc
pop
and
ret
je
shll
or
add
dec
divb
xor
jbe
jmp
arpl
test
je
leave
imul
mov
adc
xchg
push
fs
lds
in
pop
sbb
xlat
stos
rcrb
shl
ret
cwtl
adcl
shlb
dec
pop
xchg
fisttpll
jmp
dec
sahf
cwtl
dec
lcall
pop
jmpw
and
je
xchg
mov
adc
repnz
adc
ja
data16
scas
in
pop
pop
xchg
sub
test
mov
xchg
jns
add
insl
cmp
sbb
and
cwtl
mov
iret
or
sub
in
jo,pn
and
test
popf
push
add
push
fsub
jp
lock
repnz
cmp
out
push
xor
mov
adc
mov
out
rol
or
lahf
mov
lock
inc
or
push
add
add
push
jp
pop
sbb
insb
mov
fwait
loop
call
xlat
repnz
mov
mov
out
sbbl
xchg
mov
xchg
sbb
cmpsl
or
shlb
pushf
push
shrb
cwtl
sbb
jno
iret
cmp
push
rcrb
push
repz
flds
into
xchg
mov
mov
das
imul
pop
or
pop
lds
out
cmp
xor
mov
int3
mov
test
in
sbb
dec
and
lcall
hlt
lods
shlb
or
mov
adc
mov
jl
ffreep
insl
int3
mov
ss
xlat
and
imul
loope
mov
adc
je
pusha
mov
add
stc
movsl
add
es
sarl
xchg
in
jne
nop
mov
xor
cmpsb
aaa
in
mov
sbb
mov
icebp
mov
je
ja
mov
sub
jecxz
fdivl
mov
addr16
or
loop
or
outsl
jge
dec
mov
add
inc
adc
mov
inc
mov
addr16
or
mov
jns
mov
test
jmp
mov
jbe
les
ja
add
or
fmull
testl
add
cmc
divl
mov
imulb
or
aas
cmc
repz
jne
mov
je
cmpsb
loop
je
insl
jae
movl
mov
cmpsb
jmp
stos
cld
xchg
jg
gs
jbe
sub
push
push
les
sbb
jl
rcll
jp
test
push
pop
inc
imul
xchg
sub
repnz
addl
daa
popf
js
and
xor
mov
adc
mov
clc
popa
push
xor
sarl
inc
and
cmpb
and
jmp
ss
out
fmul
xor
int
cmp
cld
test
imul
test
add
loope
xchg
xor
sub
popf
and
or
hlt
neg
inc
arpl
dec
cld
mov
or
push
push
je
mov
jge
stc
in
adc
pushf
lods
in
and
in
sub
xchg
mov
cld
xchg
insb
cmc
xorb
loope
push
test
lds
push
jb
mov
push
sahf
pop
push
lcall
cmp
fists
roll
test
jmp
hlt
cmp
in
push
mov
push
repnz
lds
push
inc
addl
pop
adc
adc
cmpsb
sub
shll
in
cmp
sbb
mov
fst
mov
outsb
rep
stc
adc
cmp
lret
xor
sbb
jbe
push
mov
push
push
ds
xchg
mov
add
pop
push
push
mov
pop
xchg
in
mov
rcr
xchg
jl
mov
xchg
lods
xchg
jl
xchg
cmpsl
mov
xchg
sbb
movsb
xchg
lahf
push
lods
xor
dec
add
test
push
enter
pop
jg
jmp
fstpt
pop
mov
xor
shll
push
lds
xor
movsl
loop
ret
xor
fs
nop
repz
inc
arpl
fsubrs
popl
fiaddl
xchg
sub
dec
sbb
shrd
and
jle
adc
int3
cmc
and
stos
cmp
cld
push
sbb
lahf
jo
lea
icebp
pop
adc
dec
std
ret
and
cmc
aas
pop
repz
hlt
call
aaa
jae
xchg
sbb
cmp
sub
push
scas
inc
aad
dec
xor
pop
sbb
in
push
add
mov
jae
cmc
adc
push
cmp
int
cli
ds
sbb
bound
jle
mov
and
std
fdivs
imul
repz
add
test
repnz
and
mov
adc
mov
rolb
into
fs
jle
nop
add
sub
movb
and
mov
in
mov
mov
imul
pop
cs
in
push
jl
adc
or
arpl
call
xchg
es
and
es
adc
dec
ret
hlt
push
jl
insl
dec
imul
cwtl
mov
nop
push
xchg
insb
cli
mov
pushf
lds
arpl
fs
push
adc
pop
jge
mov
fwait
inc
scas
sbb
cmpsl
fsubp
push
pand
aas
mov
dec
push
into
mov
cmpl
subb
rcrl
pushf
ficoml
and
test
loop
cmp
xchg
mov
inc
stos
shl
ret
jbe
dec
arpl
mul
sub
sub
or
and
and
adc
leave
dec
push
dec
out
push
jge
add
scas
scas
cmp
mov
repz
dec
mov
cmp
call
cwtl
sub
jp
fucomp
and
data16
jb
pop
js
rclb
jnp
aas
mov
cmp
mov
push
jmp
ja
cmpsl
bound
cmc
mov
or
lea
clc
add
mov
into
or
repz
orl
cltd
adc
sar
ss
rcr
ret
jl
mov
pop
mov
mov
pusha
mov
popa
push
adc
inc
outsl
or
lds
in
stos
je
jae
mov
mov
bound
enter
lahf
mov
xchg
sbb
lcall
pop
enter
and
shlb
push
push
rcll
mov
sbb
pop
xor
push
sahf
pop
pop
cs
fst
mov
xchg
mov
fisttpl
add
adc
jl
lods
cmpsl
jmp
es
cs
aaa
xor
add
sbb
aas
push
std
mov
or
mov
es
cmp
push
add
mov
negb
push
icebp
mov
outsl
mov
popf
cld
into
scas
call
xlat
mov
aas
jno
or
inc
cmp
div
pop
mov
xor
inc
adc
push
pop
mov
sub
xchg
bound
push
xchg
aas
inc
sub
push
cmp
into
pop
cwtl
mov
mov
fcompl
sahf
aad
cmp
push
push
dec
pop
sbb
xchg
cwtl
fs
mov
inc
mov
testb
inc
push
arpl
xchg
or
sub
mov
std
mov
out
push
daa
mov
fsubl
gs
lret
jp
or
add
xchg
movsb
out
arpl
jne
into
dec
mov
fdivrs
sub
dec
out
mov
js
fwait
clc
shll
add
test
cmp
ret
clc
or
cmp
xchg
dec
inc
insb
icebp
cmp
idiv
sub
cmp
pop
cmp
sub
enter
dec
or
sbb
daa
es
inc
insl
hlt
cmp
pop
or
push
int3
sub
and
mov
rcll
jo
shll
mov
sub
inc
sti
push
cmp
inc
in
mov
xchg
sbb
lcall
push
imulb
in
adc
cltd
ret
add
sbb
sbb
jge
jne
stos
in
outsb
jo
push
loope
cmpsl
out
je
inc
or
sub
popf
lret
sbbl
push
push
call
test
add
adc
adc
push
adc
clc
gs
inc
pop
fs
daa
jp
pop
faddp
cmp
sub
ds
mov
test
adc
in
js
mov
cmp
icebp
mov
loopne
sub
mov
mov
lods
mov
jle
call
lods
pop
push
sbb
insb
mov
add
imul
jp
sarb
sub
pop
arpl
leave
mov
inc
add
shrb
fiadds
sub
sub
and
cmp
jg
sub
and
sbb
mov
sub
pop
ds
xor
jmp
imul
out
cmp
out
mov
add
je
adc
mov
mov
and
in
outsl
mov
jmp
jno
xlat
js
xor
faddl
push
cltd
xor
jbe
add
test
add
test
cmp
pop
dec
cmp
lret
mov
lods
scas
cmp
pop
stos
jp
out
sub
aas
aam
jno
push
mov
mov
sbb
ret
inc
xchg
clc
sub
jl
in
mov
aam
mov
push
test
mov
mov
sbb
pop
jl
iret
idivb
les
mov
aas
cmp
push
sbb
cmc
nop
dec
int
into
rcl
adc
lahf
push
test
mov
in
leave
adc
jp
outsb
cmp
cli
mov
or
test
insl
fisttps
pop
mov
and
add
sbb
sub
fidivrl
cwtl
testl
mov
imul
dec
mov
cmpsb
push
cmpsb
push
pop
shll
and
push
int
xlat
das
movsb
mov
xor
or
ficoms
imul
test
fdivs
fsubrl
mov
mov
sub
div
xchg
fdivs
shrl
popf
lods
sahf
popf
aas
mov
mov
xchg
test
lock
in
out
adc
pop
xchg
scas
dec
mov
stos
mov
pop
divb
adc
mov
lret
int3
or
aaa
adc
fbld
mov
in
jle
pusha
cltd
sbb
or
xor
aad
outsb
icebp
sbb
rclb
cs
pop
out
jb
push
add
repz
push
cmp
inc
iret
pop
jmp
push
maskmovq
cmp
popf
xchg
fistpll
xorl
xchg
stos
cli
in
cmpsb
lret
data16
outsb
or
pop
lds
je
xlat
cmpsl
dec
dec
daa
inc
and
ret
inc
popf
cwtl
jg
push
cld
movsl
mov
outsl
cld
ret
aas
xchg
mov
mov
inc
cld
push
pop
mov
inc
add
stos
xor
ror
xlat
test
ljmp
in
mov
insb
lods
or
push
lods
int3
cwtl
repz
pop
lret
pop
add
test
outsl
push
sbb
mov
aaa
hlt
xor
xlat
adc
insb
repz
addb
jns
mov
or
sahf
or
sahf
lahf
fcomps
aad
scas
fyl2xp1
fnstsw
xor
shlb
xchg
adc
popf
repz
sahf
mov
mov
lcall
dec
ja
ss
cli
pop
jle
cli
imulb
in
mov
jnp
mov
xchg
gs
bound
notb
push
dec
push
sbb
jo
sarb
in
sbb
or
call
or
jmp
and
loop
sub
insl
push
mov
mov
mov
leave
jp
sti
xchg
shl
mov
imul
lods
xor
daa
lcall
mov
adc
movsb
xchg
into
repz
lods
lods
ret
cmp
aaa
push
xchg
roll
in
push
pop
or
daa
pop
icebp
das
imul
int3
aad
dec
mov
push
mov
rcrb
rcr
jno
push
mov
jg
std
cmpsb
dec
inc
sub
stc
dec
in
pop
jl
inc
dec
jl
fldl
pop
repz
es
fwait
or
in
mov
lcall
ja
inc
sbb
or
xchg
adc
sti
loop
je
mov
xchg
in
pop
xor
or
xorl
sbb
pop
mov
outsl
sub
aad
sub
push
roll
xor
mov
push
pop
mov
jmp
imul
fists
daa
loope
sbb
ljmp
test
arpl
pop
inc
mov
xchg
cmpsb
pop
out
out
cltd
xor
cwtl
jmp
stos
dec
movsl
cmp
jecxz
int3
lds
sti
arpl
testl
xchg
cmp
adc
pop
out
fsubr
pusha
in
sbb
adc
xchg
pop
or
test
push
or
enter
cmp
jae
sub
or
ret
sbb
rcr
dec
or
hlt
xor
or
mov
cmp
mov
push
push
aas
mov
inc
divb
outsb
mov
dec
jno
xchg
lret
xor
adc
xchg
push
cld
hlt
cmp
xorb
adc
mov
enter
lods
test
mov
jbe
icebp
and
inc
aam
scas
out
aam
ret
adc
mov
sbb
adc
sbb
xor
jnp
xor
cmp
loope
add
mov
jb
sub
jae
add
loope
xchg
or
sar
pop
push
or
loope
shll
mov
inc
or
inc
cmp
mov
push
mov
mov
pop
push
bound
cltd
imull
mov
inc
into
hlt
xor
xchg
lahf
push
dec
or
sbb
leave
sbb
push
jg
pop
mov
lahf
sub
fistl
mov
sbb
jmp
jne
mov
mov
aas
cltd
push
stos
mov
loope
add
and
enter
sub
dec
lcall
adc
jle
rcr
mov
sbbl
mov
adc
cmpsb
jne
add
mov
cmp
push
outsl
jns
out
repz
mov
sti
and
shrb
gs
pop
jp
dec
int3
xor
lcall
orl
lret
push
push
pop
leave
movsl
add
mov
test
mov
cltd
out
repz
mov
stos
inc
pop
mov
mov
and
mov
movsb
push
sub
jo
mov
cld
aam
cmp
mov
push
je
mov
movsb
fwait
insb
fs
int3
xlat
add
pop
pushf
sbb
mov
mov
movsb
mov
jecxz
fnstsw
jg,pt
imul
jl
in
jbe
xchg
test
xor
dec
jns
outsl
pop
inc
mov
push
cwtl
pop
out
push
mov
loopne
push
cmp
rclb
sahf
add
adc
sbb
dec
movsb
xor
pop
stc
outsb
icebp
inc
push
mov
test
lahf
and
fs
mov
cmp
mov
insb
mov
out
sarl
orl
mov
inc
mov
aaa
fsubr
in
mov
scas
xor
jle
je
test
adc
loop
push
loopne
jp
jo
mov
or
dec
scas
sub
xchg
mov
mov
jne
rorb
std
xor
cmc
repz
or
dec
jbe
repz
mov
mov
add
push
add
dec
xchg
cs
mov
mov
in
js
xor
mov
ficomps
call
push
sub
mov
cmp
fcomp
or
push
push
aaa
cmp
test
push
loope
out
shll
push
sti
lret
cli
inc
cmpsb
insb
add
add
repnz
test
mov
mov
scas
xlat
push
addb
cmp
ja
bound
xchg
jecxz
mov
jp
inc
inc
sub
addr16
test
sub
fs
pop
sbb
cmp
mov
jne
push
mov
nop
ficomps
push
pushf
pushf
jmp
dec
cmp
sbb
xchg
push
push
jbe
sub
mov
mov
int3
loopne
jns
jl
lods
leave
push
cmp
rcrl
js
insb
and
mov
sub
imul
lock
vphaddubw
add
cs
sahf
loopnew
sbb
cmpsb
das
sahf
in
mov
cmc
fsubr
nop
mov
push
fldenv
cmp
lahf
clc
decb
nop
cmc
sbb
push
ljmp
sbb
es
jae
jo
fildll
or
imul
adc
pop
push
pop
sbb
js
in
ljmp
cmpsb
sub
inc
pusha
out
inc
aas
adc
rol
lahf
or
sbb
or
lock
xchg
dec
push
aaa
add
mov
clc
bound
xchg
adc
imul
sbbb
aas
loop
pop
fstpl
incl
fiadds
ret
push
fildll
and
jge
inc
sbb
xchg
hlt
mov
push
sub
clc
cmp
insb
lods
lahf
or
adc
shl
jg
inc
dec
pop
imull
lock
aaa
inc
cmpb
into
cmp
es
repnz
xor
je
es
xchg
leave
inc
stos
aad
ret
xor
xchg
adc
jbe
dec
insb
leave
jge
rcrl
sbb
dec
xchg
cli
xor
inc
clc
leave
jae
pop
lret
jle
xor
dec
insb
js
pop
or
dec
mov
add
cmp
xchg
xlat
inc
pop
jmp
mov
lods
fwait
dec
mov
mov
int3
js
sahf
test
scas
dec
icebp
jp
lcall
xor
pop
out
insl
mov
neg
sub
repnz
sti
ffree
cmpb
arpl
movsb
xchg
sbb
jno
addr16
pop
mov
movsb
add
outsl
stos
xchg
adc
push
adc
jecxz
mov
sbb
arpl
push
mov
jnp
arpl
sbb
xor
scas
sub
push
rorl
notl
ret
ret
sbb
push
mov
ds
push
xlat
cmp
jo
ss
inc
ret
cli
mov
fs
ljmp
fmull
push
xchg
fcomi
call
mov
xchg
jl
dec
insb
jno
nop
inc
inc
cmp
dec
fidivrs
sbbb
jns
dec
in
lods
imul
test
mov
pop
lods
enter
lock
mov
mov
jbe
lret
inc
popa
adc
mov
xor
inc
sbb
add
es
loope
rcl
js
cli
out
mov
imul
mov
ja
sbb
xchg
xor
negb
add
leave
inc
jmp
flds
sar
leave
pop
dec
cwtl
ljmp
mov
adc
xchg
adc
movsl
imul
sbb
cmp
pushf
and
clc
sub
jle
popa
and
mov
push
inc
loopne
in
adc
imul
jmp
ljmp
add
cmp
mov
push
rolb
mov
xlat
cmp
pop
jg
or
in
sbb
and
jp
push
sbb
sub
sbb
in
xchg
pop
sahf
adc
xchg
xchg
nop
push
in
les
pop
filds
mov
mov
movsl
stc
xchg
pop
lcall
mov
jbe
push
daa
xlat
sahf
shrl
out
dec
lret
ja
sbbb
xchg
nop
sti
std
std
dec
xchg
xor
out
jmp
adc
push
aas
rcrl
inc
rcrb
adc
leave
jo
in
ds
popa
sub
fcomps
adc
xchg
xchg
in
fwait
sbb
push
jge
fwait
mov
mov
ret
aam
inc
xor
or
repnz
and
mov
push
xchg
fisttpll
pop
mov
cli
jle
mov
bound
pop
lds
fs
out
jb
mov
mov
lcall
fucom
test
jp
dec
in
aas
push
or
dec
ljmp
adc
into
hlt
leave
dec
sub
inc
daa
aas
cmp
shll
and
sbb
mov
push
sbb
xor
jno
mov
cmpsb
ret
dec
sahf
cmp
cmp
jne
lret
mov
xorb
xor
in
sbb
fildll
fcomps
and
mov
sbb
push
mov
loopne
pop
cmc
mov
cmpsl
sbb
inc
js
mov
pop
dec
xchg
mov
and
movsl
and
mov
adc
into
pusha
shll
adc
fwait
and
sub
cmp
cltd
add
loop
xchg
inc
sub
sub
xchg
repz
xor
shrl
test
cmp
loope
jne
jns
mov
xor
pop
movsl
fdivp
mov
ret
push
push
xlat
js
lea
adc
pushf
aaa
movsl
outsb
mov
lock
push
adc
iret
movsl
dec
gs
cmp
pop
push
dec
lret
rcll
pop
push
lcall
adc
inc
pop
dec
or
fcmovb
adc
xlat
rcll
sbb
repz
test
sub
lods
jns
out
inc
jle
mov
fidivrs
add
mov
das
push
push
add
and
mov
fdivr
jg
fbstp
mov
dec
mov
out
mov
rorl
mov
inc
add
pop
sub
push
ljmp
mov
les
xor
jno
jno
lea
pop
aaa
hlt
sbb
cmp
ret
and
jecxz
dec
push
mov
pop
sbb
dec
mov
lret
push
loop
repz
out
outsb
in
daa
ja
mov
out
and
dec
xor
movsb
xor
icebp
lcall
pop
jmp
jmp
push
das
dec
xchg
std
xchg
popf
sbb
movl
dec
cwtl
add
add
fistl
jno
nop
sub
cmp
loop
leave
pop
scas
xor
and
xor
cltd
adc
xor
xchg
sahf
clc
scas
aaa
mov
cmc
shlb
or
push
cltd
add
call
imul
inc
addr16
shrl
sub
gs
push
jg
es
lahf
sti
rcrl
jnp
imul
loopne
dec
imul
in
and
cwtl
dec
stos
addb
push
mov
push
push
jbe
inc
cltd
rcll
mov
xor
lret
add
lret
lods
mov
lcall
sbb
ret
data16
aam
iret
lds
shrb
mov
leave
dec
xchg
pop
dec
sbb
negb
add
outsl
cmp
adc
cmp
es
shrl
cmp
hlt
cli
test
gs
outsl
addr16
inc
das
push
lods
mov
test
and
loope
fcmovnb
adc
push
into
cmp
mov
xchg
int
leave
mov
xchg
pop
pop
gs
push
mov
jp
xchg
cld
lock
js
xlat
xor
addb
dec
adc
xchg
jae
lds
leave
int
loopne
ja
jae
push
fadd
adc
inc
popa
or
mov
fwait
lock
lods
sub
push
repz
repz
popa
mov
sub
and
inc
push
daa
sub
xor
mov
jb
aad
jmp
dec
mov
push
repnz
data16
adc
cmc
pop
pusha
addr16
in
mov
fcomip
in
addr16
fildl
push
and
into
add
mov
push
cmp
and
mov
pop
imulb
cmp
jge
xchg
or
or
adc
popf
jae
das
sub
fldcw
es
pushf
xor
pop
sub
fs
pop
cmpb
into
cmpsl
lret
std
jo
nop
imul
leave
cmpb
push
mov
out
mov
jnp
xchg
lcall
popa
push
and
adc
loopne
daa
jo
out
sbb
daa
pop
push
dec
push
fisttpll
scas
jae
int
push
mov
in
test
lret
xor
in
aaa
repnz
add
stos
xor
dec
cli
inc
fnstsw
cmp
jb
cwtl
mov
dec
dec
insl
xchg
inc
sbb
into
xchg
pop
mov
jge
fcomip
inc
xchg
imul
or
cmp
xchg
push
hlt
push
pop
sub
xor
iret
sub
out
ljmp
aad
sbb
pop
int
data16
push
sti
add
das
dec
pop
fdivs
jo
cmpsb
popa
cmp
jns
rorl
xor
stos
add
xlat
mov
arpl
dec
cmp
cmc
push
mov
test
pop
pop
add
push
mov
jg
repnz
into
cmpsl
dec
sti
repz
mov
push
hlt
out
fs
incl
in
pop
fdivrs
gs
jmp
rolb
test
fimuls
cs
and
sub
pop
mov
outsb
and
push
sti
call
movsl
inc
iret
popa
cmp
adc
mov
ret
and
imul
push
dec
cld
push
mov
repnz
fdivrl
and
mov
jp
add
mov
sti
inc
in
jns
xlat
add
dec
pop
dec
push
arpl
mov
iret
int3
leave
leave
cli
pop
sub
loopne
mov
test
xchg
or
arpl
mov
scas
or
cmp
jmp
sub
aam
aas
popa
bound
adc
imul
shlb
or
jno
repz
sbb
pop
cwtl
aas
pop
xchg
cmp
xchg
shrb
cmpsl
ret
jg
mov
ret
push
daa
bnd
inc
push
mov
sahf
jecxz
sbb
xchg
mov
cli
add
and
xor
cmpsl
sbb
hlt
subl
xor
shlb
mov
and
push
xchg
test
aas
popa
push
fsub
ljmp
push
mov
std
add
and
imull
out
cs
lock
scas
pop
outsb
into
mov
out
sbb
aaa
cmp
dec
mov
orl
fcmovu
test
jg
cmp
adcb
out
loope
testb
dec
add
pop
or
add
movsl
push
pop
jb
mov
cmc
mov
test
rolb
sbb
rcrl
mov
lds
outsb
fcmovu
xchg
popa
cli
jecxz
aaa
rcrl
sbb
ds
ror
and
int3
out
push
jnp
fs
xchg
lret
xor
mul
clc
dec
cmpsb
sbb
fsub
cmp
push
js
cmp
mov
inc
mov
in
pop
cwtl
rolb
mov
pop
sub
jne
and
dec
mov
sub
push
fstpt
mov
push
cs
pop
sbb
aaa
imul
inc
push
call
xchg
inc
sbb
jns
inc
lock
push
sbb
les
lret
cwtl
push
dec
jmp
push
fdivl
jl
mov
leave
mov
repz
into
sbb
adc
in
mov
fstpt
outsl
xchg
cmp
push
fwait
jl
and
inc
fidivrs
ffree
movsl
mov
adc
add
movups
fwait
cmpsl
hlt
ds
add
mov
sahf
inc
adc
iret
lods
mov
clc
xchg
in
dec
cltd
sub
out
and
sub
mov
shr
int
movsl
fbstp
xchg
gs
add
ret
cmp
test
scas
jg
addr16
mov
push
pusha
pop
call
mov
iret
sbb
in
push
aas
rcrl
cld
pop
insb
scas
pop
scas
movsl
xor
push
xlat
and
in
jecxz
sbb
jl
nop
and
out
cmc
subl
mov
inc
mov
neg
pop
add
inc
pop
outsb
pop
fucom
ds
sub
ss
lret
jo
cmp
push
mov
adc
mov
mov
lods
xor
ljmp
stos
out
das
jge
stos
ds
int3
sti
sbb
xor
addb
adc
jecxz
push
inc
cmp
push
lret
pop
cmp
rcl
mov
inc
inc
mov
push
pop
sbb
inc
fsubs
push
loope
and
pop
ds
push
mov
lahf
or
stos
lea
mov
js
dec
mov
xchg
jae
test
sti
push
sahf
add
add
mov
push
push
jmp
insl
hlt
scas
in
jbe
aam
pop
cmp
adc
dec
and
pop
xor
adc
jl
xchg
popf
mov
arpl
test
push
lock
jo
stos
and
xor
stc
pop
repz
mov
sbb
xor
imul
or
push
and
pop
loop
add
pushf
mov
int
in
int
jb
lods
jmp
jmp
xorb
mov
scas
pop
fnstcw
fs
pop
cmp
and
xor
mov
xchg
or
mov
imul
sbb
mov
popf
cmp
lret
pusha
push
jb
addr16
jmp
notl
mov
in
push
cs
add
adc
mov
pop
pop
add
imul
or
xchg
ficomps
sub
in
arpl
jae
mov
lret
cwtl
lret
addr16
je
xchg
xor
mov
ret
and
or
jp
popf
ja
iret
int
insb
push
push
mov
ret
dec
add
bnd
adcb
cld
push
inc
inc
and
loop
or
out
dec
push
sbbb
mov
mov
adc
jge
fs
jge
inc
jl
sbb
xor
sbb
adc
xor
lret
mov
ret
dec
push
xchg
imul
pop
jno
sub
icebp
fildl
xchg
lods
pop
mov
shrb
sub
js
int
dec
adc
inc
mov
sbb
dec
fdivl
push
fsub
paddsw
push
adc
stos
cmpsb
xchg
ret
xchg
clc
es
ficomps
lret
adc
mov
xchg
push
cmpsl
mov
push
dec
xchg
int
clc
jae
adc
fsts
mov
subb
shlb
outsb
mov
mov
or
in
cmp
jmp
xchg
jle
jb
shl
push
pop
cwtl
sub
xchg
sbb
fwait
and
adc
pop
xor
push
das
adc
sarl
lcall
sti
movsb
in
and
xor
clc
test
shlb
pop
into
lcall
mov
dec
out
xorb
js
mov
dec
rcll
add
adc
adc
lcall
inc
mov
repnz
inc
pop
add
push
and
popf
js
cwtl
inc
cmp
dec
sbb
adc
rcrb
loopne
push
jb
imul
jno
inc
jb
stos
xor
adc
push
push
insl
sbb
inc
jo
int3
loopne
lret
int3
pop
inc
out
pop
arpl
lock
adc
dec
add
cwtl
and
xchg
std
mov
bound
add
lahf
pusha
dec
cmp
jns
and
jno
ljmp
insb
mov
pop
imul
dec
xor
dec
jns
push
popf
inc
sahf
test
add
cmpsb
add
cmpsb
fcoml
xor
xchg
mov
jp
xor
fs
adc
lods
sahf
sbb
jle
clc
aaa
mov
or
xor
aam
aad
sbb
inc
out
ficoml
icebp
orl
popa
mov
movsl
jecxz
dec
xor
cmp
cmpsl
mov
mov
inc
cmp
rep
rorb
sbb
testl
test
in
daa
and
mov
pop
sbb
push
cmp
fwait
push
movsl
mov
hlt
cltd
fbstp
mov
sbb
mov
jle
popa
or
lret
sbb
inc
jne
cli
pop
jnp
adcb
mul
mov
incb
pop
xchg
mov
mov
addb
arpl
les
mov
mov
into
cmpsb
push
out
icebp
dec
jge
iret
out
jno
fidivs
scas
push
movl
fstps
pop
inc
popa
fstpt
push
mov
loopne
hlt
xchg
adc
shll
stc
xor
mov
cs
xlat
loop
inc
cmp
cmp
adc
xchg
xchg
mov
sub
jecxz
jecxz
dec
add
sbb
add
imul
pop
lcall
pop
jb
cs
adc
add
add
pop
or
std
js
dec
inc
adc
fcomp
rcrb
cmp
fstp
inc
mov
call
jl
fidivs
add
std
stos
mov
jmp
rorb
xchg
mov
pop
dec
add
clc
pop
push
jo
shll
and
insl
shrb
xor
inc
inc
lcall
sub
or
orl
adc
pop
popf
insb
sbb
push
xor
mov
ja
std
mov
ret
cwtl
mov
cmp
xchg
ds
addr16
mov
subb
outsl
stos
inc
frstor
adc
pusha
stc
pop
in
xor
ljmp
add
xchg
nop
mov
or
sbb
rcr
pop
xchg
sbb
and
and
dec
mov
sbb
popf
les
ds
push
les
popa
and
push
cmp
int3
fmuls
inc
lahf
inc
popf
mov
leave
call
sbb
inc
lea
and
filds
imul
xchg
sbb
out
leave
pop
popa
xchg
adc
lds
mov
mov
jo
test
add
leave
xchg
mov
jg
lahf
sub
scas
lods
xlat
dec
xor
add
dec
jns
mov
add
imul
imulb
mov
mov
pop
adc
push
sub
adc
pop
xchg
mov
cmpsb
jo
into
mov
rorl
jns
pop
jbe
roll
mov
mov
leave
sbb
in
push
ret
loopne
xchg
out
xor
nop
ljmp
insb
jle
js
jle
pop
aaa
xchg
mov
call
push
lea
inc
sub
jae
cmpsl
sub
mov
jnp
xchg
push
leave
pop
cmc
inc
mov
loope
dec
sub
insl
or
xor
andl
cltd
cmpsb
or
outsl
add
aam
fwait
jnp
cmp
or
aam
pop
inc
push
scas
mov
cwtl
mov
add
adc
sahf
ljmp
negl
pop
andb
push
jnp
jp
mov
mov
daa
iret
sbb
sbb
shr
leave
mov
pop
loope
iret
push
mov
sbb
insb
popa
sub
movlps
dec
gs
cmc
and
cs
movsl
aas
arpl
sub
ja
sub
jbe
popa
xchg
insl
dec
sub
hlt
sbb
adc
sbb
jo
sub
js
fwait
mov
jmp
jo
dec
or
mov
push
jecxz
push
sar
out
mov
clc
movsl
aam
pop
sub
mov
add
push
mov
adc
into
push
jg
mov
js
mov
mov
cs
lret
add
jae
ljmp
xor
popf
push
jb
out
enter
push
sbb
jns
in
addr16
mov
roll
insb
lcall
xorl
outsl
addr16
jecxz
pop
inc
lods
cmp
jnp
rolb
aad
repz
std
jo
movzwl
fisubs
jns
loope
js
jl
cmp
mulb
arpl
cli
je
xlat
flds
sub
add
int3
cmp
jne
and
mov
and
pop
dec
stos
push
mov
aam
fidivrl
mov
mov
mov
cmp
or
mov
insl
xor
pop
jg
inc
into
dec
mov
inc
jne
lock
mov
xor
dec
aaa
jns
cmp
arpl
inc
iret
cmp
and
cmpsb
jae
movsl
ja
pop
fisubs
cmp
mov
clc
fucom
cld
je
or
xchg
stc
mov
cmp
or
sbb
or
lcall
in
push
leave
fdivr
rolb
fistpll
or
inc
rcrl
cmp
rorl
std
jbe
adc
and
push
mov
pop
mov
fcoml
pushf
jle
pushf
mov
sub
add
push
or
int
push
xchg
lahf
sub
jne
mov
lods
sbb
mov
add
add
jg
adc
arpl
push
int3
adc
stos
mov
mov
lret
shrb
test
sbb
fnstcw
xchg
inc
xor
ja
addl
ds
lret
jno
add
andb
std
dec
mov
dec
lods
cltd
sbb
mov
push
nop
sub
mov
add
test
jl
nop
and
addr16
pop
std
and
and
push
shrl
mov
sbb
lahf
fdivs
gs
and
ror
nop
add
test
mov
inc
lret
cmpb
jp
gs
out
stos
inc
imul
arpl
sbb
mov
mov
movsb
or
mov
pop
hlt
testl
mov
jl
dec
or
and
push
cmp
divb
cmp
mov
pop
out
or
shrl
popa
cs
test
cltd
adc
fyl2xp1
cltd
xchg
jbe
push
pushf
xor
icebp
adc
xchg
push
cli
adc
test
daa
lret
in
fisubrl
cmp
adc
inc
dec
dec
lock
popa
daa
add
xchg
cltd
cmc
lods
loope
xchg
daa
test
dec
or
or
nop
addr16
js
out
inc
push
sbb
lods
ds
mov
scas
lret
cmc
jle
xchg
mov
dec
mov
mov
xor
pop
adc
add
test
mov
ret
jp
movntps
test
pusha
sbb
push
repz
test
insl
mov
mov
pop
mov
mov
addr16
dec
mov
in
or
push
aaa
sub
pop
pop
xor
sahf
mov
call
ffree
jmp
xor
add
xlat
jmp
xor
test
jge
pop
subl
jnp
xchg
mov
jb
es
sbb
lret
mov
in
jmp
sbb
cli
testl
lds
bound
roll
decl
mov
pusha
add
into
sub
cmp
xor
push
xchg
aam
inc
dec
xor
push
or
mov
mov
add
xor
dec
cmp
adc
adc
mov
lods
pop
sahf
push
adc
cmp
xor
pop
mov
xorb
push
add
xchg
mov
jmp
and
add
cmc
mov
jp
dec
movsl
mov
lahf
bound
mov
test
jne
push
xor
dec
xchg
push
leave
push
push
cmp
lea
andb
mov
mov
enter
pusha
std
pop
rcrl
pop
fbld
sub
cmpsl
adc
pop
fs
adc
inc
adc
or
sub
sbb
cmp
jb
fmuls
jae
shl
jge
mov
lds
fsubrl
cmc
fnstcw
pop
push
or
push
cmp
mov
das
and
sarl
jle
loop
shll
iret
out
jno
in
clc
adc
pop
es
aam
mov
out
fdivl
or
sub
push
or
pop
fistpl
dec
das
fldl
fldl
pop
xchg
push
xchg
mov
fsubrs
mov
add
mov
mov
je
enter
push
and
pop
mov
invlpg
rolb
mov
insb
push
sbb
fnstenv
push
pushf
or
rcr
pshufw
int3
cmc
jp
mov
mov
testl
stos
cmp
pop
loopne
test
xor
repnz
sahf
pop
pop
inc
sbb
repnz
out
and
sub
daa
movsl
fsts
fists
insb
jecxz
push
dec
sub
rcrb
jo
arpl
dec
cltd
int
dec
xchg
pop
adc
push
es
xor
fwait
jg
mov
xor
hlt
pushf
jecxz
fisttpll
fldenv
and
add
imul
sub
adc
movsb
lods
mov
inc
or
mov
ja
inc
xchg
mov
and
dec
dec
je
pop
fldcw
jne
sbb
xchg
rcrl
pop
out
mov
lock
mov
jmp
out
lahf
subb
push
sub
pop
std
ljmp
ret
loope
das
jnp
xor
js
bnd
lret
or
cmc
outsl
lds
sbb
sub
in
dec
inc
add
sti
xor
dec
dec
push
in
je
fiadds
insl
inc
aam
aas
pop
dec
mov
outsb
cli
pop
or
pop
cli
sub
dec
and
imul
sbb
add
aas
scas
sbb
mov
sbb
sub
or
mov
push
cld
rcrl
lcall
xor
cmc
loop
sub
xor
and
pop
cltd
loope
out
push
mov
adc
add
das
xchg
and
inc
fwait
aas
movl
mov
inc
clc
add
add
in
inc
addr16
stos
mov
or
cmp
or
push
addr16
test
mov
lock
mov
or
cmp
mov
sub
imul
clc
cmp
popa
lahf
cmp
test
dec
insb
mov
dec
fs
and
aam
rcl
mov
xchg
jae
mov
mov
test
stos
add
and
adcl
stos
sbb
xor
add
jp
sub
and
inc
call
in
cmp
push
or
je
xchg
fs
mov
cmp
ljmp
inc
mov
mov
add
xchg
and
aam
jmp
mov
js
fcomps
push
jns
inc
cmp
cmc
mov
push
adc
ret
push
cmp
out
stos
imul
jp
xlat
cmp
mull
test
faddl
pop
test
int3
jns
sti
xlat
js
pminub
out
jp
sub
pop
xchg
fsubs
inc
fnstenv
fbstp
loopne
insb
add
pop
cmp
push
addr16
daa
das
xchg
add
mov
sub
imul
stos
dec
mov
rcll
popa
jo
movsl
dec
ljmp
cmp
insb
mov
mov
push
sbb
lcall
mov
mov
ret
shrb
push
movsl
inc
dec
pop
dec
repnz
adc
inc
pmaddubsw
loopne
dec
sbb
push
stos
lods
and
arpl
outsl
ja
inc
das
jnp
out
jb
or
mov
fldcw
xchg
lret
repz
std
jmp
add
stc
pop
iret
std
jno
inc
insl
subb
push
inc
mov
mov
xor
dec
out
lret
mov
cli
adc
data16
add
nop
loopne
xor
or
cmp
and
push
sahf
into
xorl
in
dec
int3
cmp
sub
out
cmc
push
fs
xchg
sbb
mov
andl
dec
scas
lods
test
sub
mov
xor
sahf
shl
mov
loopne
add
imul
and
shr
push
xlat
divb
test
outsb
aaa
repnz
inc
pop
into
sub
test
cmp
ficompl
lods
mov
int3
dec
pop
add
xchg
dec
roll
or
mov
stos
aam
jecxz
jno
xor
jge
mov
adc
xchg
test
shrb
add
es
rcr
lahf
scas
arpl
fnstcw
add
mov
push
leave
int
cmp
pop
rorl
xchg
mov
or
jo
lcall
jg
adc
lea
lret
ret
dec
sub
lret
cmp
cld
cmpsb
adc
dec
pop
inc
jae
sbb
cmovnp
movsb
push
testl
jmp
ljmp
xor
je
adc
stc
mov
jbe
rcrb
cwtl
insb
adc
out
xor
insl
rcr
mov
mov
cld
inc
orb
sbb
jnp
lcall
and
pop
cs
cld
sarb
imul
jno
rclb
jo
test
negb
dec
outsl
ljmp
push
daa
loop
mov
clc
sub
mov
mov
inc
pop
xchg
scas
jecxz
mov
dec
inc
push
jbe
or
lods
jbe
dec
pop
mov
cmc
aad
jne
lahf
stc
scas
std
mov
out
rclb
xchg
jns
mov
mov
mov
loope
pop
push
hlt
sbb
cmpb
scas
inc
sub
testl
adc
dec
pop
mov
xchg
pop
push
insl
inc
leave
mov
lock
or
xor
inc
dec
outsb
cmpsb
pop
pop
push
push
std
dec
mov
cmp
aaa
bnd
dec
jne
push
mov
mov
insb
mov
sub
inc
clc
aam
mov
nop
and
or
in
dec
ret
outsb
push
add
test
pop
xrelease
aaa
daa
and
cmp
push
push
sahf
aad
xor
push
or
jbe
test
and
jp
sub
xchg
ret
jecxz
push
or
or
pop
outsb
or
dec
mov
aaa
insl
jecxz
sarl
add
dec
cmp
xor
out
xor
xchg
push
add
dec
daa
sbb
stos
test
popf
fwait
sub
mov
cwtl
mov
and
idivl
cmp
ja
sub
add
or
sahf
pop
adc
and
test
xchg
movsb
and
or
ja
lods
sub
icebp
loop
je
sub
and
in
bound
inc
push
in
pop
lea
fnstsw
cmpsb
dec
mov
sbb
jae
mov
ds
xchg
fldl
fwait
dec
popa
mov
scas
shlb
loope
xor
add
je
or
push
mov
movsb
out
inc
add
rcrb
lea
repz
test
cs
jp
and
lock
aad
stc
mov
mov
leave
and
repz
dec
jp
or
sub
fistpl
cs
ds
push
out
sbb
xchg
into
mov
jne
lock
adc
popf
out
test
mov
enter
jecxz
repz
imul
subl
add
fsubrs
cli
adc
loopne
pop
imul
xchg
add
and
mov
mov
rclb
or
mull
aaa
jge
mov
add
ja
lods
sbbl
cmp
ljmp
pop
push
das
shll
shll
mov
or
pop
pusha
adc
mov
lods
sub
push
stos
and
cli
in
xchg
jo
pop
inc
sarb
lea
mov
shrb
test
sub
sub
sbbl
fcomip
aas
jns
repz
cmp
stos
jb
adc
cs
sahf
or
xchg
int3
adc
arpl
adc
daa
or
sbb
in
ret
pushf
mov
cli
aad
loop
cmp
shr
andb
or
pop
filds
pop
push
out
mov
dec
aad
cmc
std
mov
inc
leave
and
inc
mov
cmpsl
repz
out
filds
jbe
add
dec
push
in
pop
jp
jno
orb
sbb
or
mov
xorb
jecxz
jns
inc
sub
setl
sahf
jp
xchg
adc
rolb
mov
add
jo
mov
sar
call
pop
jns
mov
gs
or
push
test
mov
sbb
out
negl
dec
sahf
jae
fisttpl
daa
dec
lcall
pop
adc
dec
repnz
or
xor
mov
lods
es
xchg
adc
fists
xchg
adc
sarl
sahf
icebp
rorl
adc
out
and
lods
mov
mov
fmulp
sbb
inc
xlat
movsb
lret
insb
jge
jbe
stc
dec
mov
mov
sub
mov
cli
push
inc
xor
push
inc
push
adc
aam
cld
insl
add
xchg
mov
scas
stos
sbb
outsl
cmp
out
js
lahf
stos
es
mov
out
loop
lret
jo
dec
push
jb
dec
fsubrp
repz
fdivrs
inc
outsl
pusha
mov
sbb
testl
fsin
xchg
dec
imul
jno
cmp
outsb
push
rcl
leave
mov
fdiv
jno
xchg
inc
sbb
cli
xor
test
and
aad
repz
stos
out
faddp
mov
insb
pop
in
pop
shl
test
push
sahf
mov
arpl
pop
fisubrs
popf
dec
rcr
adc
cmp
xor
sub
push
cmp
pop
leave
xchg
mov
cmp
adc
clc
insl
pop
iret
into
and
xlat
dec
adc
cmpsb
cmp
gs
fst
pop
push
in
jp
jecxz
fmuls
push
mov
push
pusha
mov
xlat
leave
jl
lods
data16
sub
fdivrs
mov
mov
scas
mov
jnp
xlat
adcl
nop
repnz
inc
nop
cmp
loop
pop
mov
push
lock
fnsave
dec
dec
add
loop
fcomi
and
and
xlat
loopne
add
or
jno
push
jmp
adc
xchg
inc
cmp
mov
jle
push
in
xchg
mov
daa
sub
cmp
ja
leave
out
sbb
shll
mov
xlat
pop
pop
xchg
movsl
fimuls
fs
xor
or
mov
fisttpl
scas
punpckldq
jle
sbb
cli
mov
out
outsl
xor
int3
daa
add
ss
dec
das
jecxz
or
cmpsl
or
movsl
lcall
xchg
jp
jae
sahf
aad
nop
push
test
xchg
mov
xor
or
or
xor
adc
int
loope,pn
adc
jp
jne
sub
shrl
ret
popa
das
in
cmp
pop
popa
mov
xchg
movsb
jle
aas
push
aad
cmp
inc
mov
lods
cli
xchg
mov
adc
push
outsb
ljmp
imul
cltd
arpl
lds
into
ret
ret
testb
daa
rol
je
movsb
leave
push
mov
in
sub
inc
cmpsl
mov
xor
mov
ss
inc
mov
fwait
rcrb
sub
inc
and
adc
xchg
frstor
lret
pop
cmp
out
test
arpl
es
jge
push
test
cmpsb
dec
ja
or
inc
and
push
lea
cmp
push
mov
jg
push
cmp
icebp
mov
icebp
sub
sbb
mov
aam
add
setnp
mov
push
ja
inc
cwtl
push
ljmp
ret
ror
push
sbb
xchg
das
xchg
push
xor
add
jno
cwtl
fwait
add
mov
popa
jae
test
xor
aam
push
loopne
push
jmp
mov
cmpsb
sbb
adc
lahf
sarb
cmp
dec
dec
repz
sbb
popa
push
je
xchg
pop
xchg
mov
pop
pop
or
xor
push
daa
cmp
daa
and
inc
pushf
and
daa
mov
jno
jg
ljmp
mov
out
inc
pop
lock
insl
dec
mov
mov
inc
dec
clc
out
jne
mov
xor
aas
out
fsubr
andb
inc
sub
mov
pop
dec
aas
addr16
sbb
dec
pop
cmpsl
rdtsc
sbb
add
lock
push
inc
sbb
mov
mov
jnp
pop
push
pop
outsl
jnp
mov
xchg
ja
pop
mov
or
dec
inc
mov
movsb
push
out
or
bound
xor
in
mov
outsb
popa
sbb
sub
push
sbb
stc
in
mov
cwtl
fcompp
mov
pop
ds
imul
push
and
ret
pop
fwait
iret
sbb
pop
xor
or
xor
xor
mov
mov
addr16
cwtl
call
mov
ja
lcall
lret
pop
or
roll
cmpsb
mov
lds
pop
fidivrl
push
mov
fmul
dec
inc
aaa
es
lods
lret
or
vpandnd
pop
scas
jo
push
sub
cli
pop
xor
sbb
pop
jg
cmp
aas
add
daa
and
ds
jns
add
fisubl
jae
lods
std
or
insl
or
fdivp
jbe
dec
or
lock
cmp
xchg
cmp
cmp
cmp
divb
mov
sub
xlat
pop
cmp
shlb
es
aam
or
icebp
and
mov
sub
loope
xchg
pop
mov
loop
cs
add
mov
push
sub
in
les
outsb
cmp
jo
add
mov
or
mov
shrl
aas
daa
inc
loop
push
out
out
lea
lahf
arpl
rclb
std
std
pushf
xchg
dec
mov
in
xchg
adc
jmp
rcll
loopne
aad
into
sbb
xor
out
or
sub
xchg
nop
repnz
fwait
push
je
mov
mov
mov
nop
xor
cmpsl
mov
mov
lahf
mov
mov
stos
add
bound
mov
fisttps
icebp
sub
aam
mov
sub
leave
sub
pop
pushf
push
jnp
push
addl
or
cmp
je
stos
xor
mov
insb
cmc
mov
xor
lods
mov
ljmp
lahf
xchg
xchg
cmp
dec
inc
jnp
das
mov
out
je
or
ret
cld
mov
jae
add
out
movsb
push
inc
adcb
and
xor
jo
jmp
test
outsb
popa
into
push
adc
fs
repz
jbe
movsl
pop
xor
out
stos
mov
sub
mov
mov
pop
sbb
mov
mov
fidivs
cwtl
adc
into
fisubrs
sti
xlat
je
cltd
pop
leave
lea
mov
daa
aad
dec
or
loope
xchg
in
orl
adc
repnz
into
jmp
dec
xchg
das
ja
subl
lcall
xor
or
aaa
cmc
subl
int
dec
cmp
cmp
pushf
ficoms
ds
outsl
in
sub
sbb
repnz
pusha
fsubs
cmp
stc
xor
mov
pop
arpl
imul
jmp
cmp
stos
xor
sets
in
add
arpl
jmp
pop
jmp
sub
jns
fstpl
add
aas
dec
sub
or
mov
stc
fcoms
icebp
push
repz
lret
jle
push
xor
aaa
inc
inc
dec
ret
push
test
mov
and
adc
into
cmp
pop
or
inc
test
loop
fwait
mov
adc
lret
gs
add
loopne
jp
xorl
dec
jge
popf
sub
test
sbb
pop
add
cld
hlt
repnz
call
iret
fldcw
push
into
enter
mov
adc
arpl
and
cwtl
sti
mov
arpl
out
or
nop
push
inc
add
mov
pop
mov
mov
fldl
and
aam
mov
ds
and
fwait
rol
sbb
stos
lea
dec
mov
mov
aad
subl
xchg
push
in
jl
xchg
sbb
hlt
dec
out
cmpl
pop
cmp
and
cltd
pop
sub
pop
jnp
xchg
dec
mov
popf
jg
mov
mov
pop
in
push
adcb
ja
jne
std
in
sbb
and
repz
and
shll
pop
jmp
xchg
mul
mov
dec
insl
jge
mov
pushf
iret
mov
xchg
xchg
out
xor
mov
fcmove
cmp
xchg
aad
xchg
in
ja
inc
dec
pushf
cld
out
jo
xor
inc
jbe
and
dec
test
xor
sbb
dec
mov
fsubrp
repnz
push
mov
sti
mov
out
cmpsb
addr16
add
push
out
enter
icebp
inc
test
pusha
pop
xor
idiv
jo
lcall
dec
fstps
lcall
jae
jecxz
sub
fdivs
fnstenv
dec
jns
je
xor
pop
sbb
xchg
pusha
jg
mov
jnp
add
in
push
mov
cmpsb
pop
in
xor
mov
xchg
pop
mov
movsl
jge
jl
mov
mov
cmp
push
add
mov
addl
das
push
dec
pop
dec
and
in
push
dec
inc
dec
and
pushf
sub
loopnew
in
rcl
mov
flds
xor
mov
fdivl
inc
jne
popf
inc
xchg
sbb
sbb
mov
cwtl
xor
fcoms
dec
push
lock
dec
xorb
add
sub
xlat
pop
cmpsl
cwtl
ds
and
in
iret
pop
enter
xchg
test
aad
mov
dec
lods
aam
outsb
icebp
adc
cwtl
dec
mov
mov
in
aad
mov
pop
repnz
imul
add
aad
jne
lods
repz
adc
push
xchg
xchg
or
xchg
mov
mov
loope
stc
cmpsl
xchg
xor
adc
mov
cltd
fistpll
notl
and
idivl
xchg
ret
jne
enter
lahf
insb
mov
mov
rcrb
mov
pop
cmp
add
pushf
push
jecxz
rolb
into
mov
dec
mov
leave
repz
push
in
fmul
arpl
xchg
sbb
xchg
es
stos
adc
and
call
gs
jle
mov
mov
dec
jmp
dec
xor
mov
movzwl
pop
iret
xchg
mov
nop
mov
rcl
sbb
fnstsw
cmp
xchg
lahf
test
sub
dec
jl
lods
imul
fwait
cmp
sub
cmp
fcomps
fsubs
pop
dec
repnz
sbb
inc
add
fnsave
and
ss
lcall
out
push
dec
push
or
cli
shlb
fbstp
jb
xchg
and
loopne
lods
cmpsb
loope
jle
call
nop
js
lret
add
sbb
cs
lods
jno
shrl
lret
loop
movb
push
pop
and
es
or
das
jg
sub
dec
pusha
cmpsl
bound
dec
pop
dec
push
outsl
pop
test
loopne
aas
and
lahf
push
and
dec
mov
popf
inc
add
pusha
outsl
cmp
cltd
mov
inc
cli
sbb
loope
sub
and
rorl
inc
mov
inc
mov
cmp
test
xchg
sub
mov
jne
fwait
xlat
or
mov
stos
leave
pusha
inc
repz
aam
int
xchg
mov
stos
jbe
pop
fadds
into
in
xchg
das
cmp
rcl
fwait
push
daa
pop
xchg
add
insl
das
rcll
or
inc
adc
test
and
inc
in
mov
int3
in
imul
syscall
mov
sbb
nop
dec
lods
stc
repnz
pop
popf
in
mov
adc
les
bound
sarb
mov
outsb
shrl
test
hlt
jg
adc
fdivs
sub
aam
inc
xor
or
mov
jp
push
pop
pop
or
flds
movsl
pop
test
pcmpeqw
jne
gs
push
hlt
jmp
sub
inc
and
clc
aas
adc
mov
flds
aas
ja
mov
sbb
jecxz
add
xchg
cmp
adc
loop
mov
movsb
sbb
clc
or
aad
es
inc
inc
jb
pop
scas
and
jae
cltd
addr16
push
jbe
mov
pushf
test
jp
dec
xor
das
cltd
aas
and
imul
flds
adc
jl
dec
sub
cmp
dec
pop
and
dec
daa
adc
call
xor
fdivrs
push
repnz
lods
dec
jns
xor
cmp
and
lods
mov
dec
mov
xchg
mov
inc
mov
test
sbb
clc
ret
lret
mov
dec
loop
jns
stos
notb
mov
jg
xchg
cmc
push
fucom
pop
cmp
scas
cmpsw
jnp
adc
sbb
pop
ds
repz
cmc
inc
imul
in
fisttps
dec
in
in
fnstsw
inc
or
add
test
add
fucomip
dec
jecxz
ds
xchg
fs
jmp
call
mov
outsb
out
jns
jp
mov
push
xchg
call
push
stos
and
pushf
sarb
mov
xchg
sub
fstpl
mov
lds
lret
sbb
les
dec
jb
mov
addr16
les
xor
inc
mov
pusha
sbb
xor
rcrl
sub
push
test
adc
cmpb
sahf
movsl
cltd
push
fdivrs
xor
jecxz
jecxz
inc
rcrl
pop
sbb
hlt
shlb
sbb
or
and
push
xchg
cmp
testb
ficomps
cmp
int3
cmp
cmp
pop
add
xchg
aaa
xor
cltd
cwtl
mov
inc
cmp
xchg
pop
lods
push
inc
lcall
mov
sbb
scas
fildll
stos
js
cmp
jnp
rcrb
xchg
mov
sub
scas
in
call
add
mov
test
ret
and
xchg
sub
add
sub
mov
xor
fnstcw
repz
xlat
xor
into
pop
jp
mov
xchg
cwtl
cmpsb
aaa
adc
outsb
or
cs
mov
pop
mov
ljmp
enter
or
push
add
scas
push
call
pop
out
cltd
divl
adcb
mov
imul
jbe
jp
fwait
push
sub
scas
imul
cmpb
ficomps
pop
jg
jl
jae
daa
jb
aam
jo
jns
orl
pop
inc
fimull
xchg
push
xchg
insl
adc
or
sub
hlt
test
pop
jmp
add
mov
push
inc
andnps
jae
jae
jb
pop
jmp
popf
mov
test
cmpsl
push
popf
iret
pop
test
je
fs
xor
jb
stc
and
mov
mov
jo
xor
inc
leave
xchg
mov
jmp
into
dec
nop
push
test
inc
sbb
sarl
xchg
push
inc
rorb
test
mov
outsb
fbstp
test
daa
int3
lea
iret
cli
sbb
daa
mulb
push
pop
repnz
add
adc
out
imul
pop
cli
sti
mov
jnp
daa
in
inc
lea
lods
ret
inc
insb
jle
sbb
add
or
push
insl
into
sbb
dec
cwtl
fistps
fadd
loope
movsl
orb
repnz
mov
rcrl
shll
cs
xor
pop
fstpl
inc
sub
fstpt
adc
data16
jmp
out
cmp
cltd
and
cmp
mov
xchg
enter
xlat
cmpsl
testb
sub
inc
out
sub
std
cmpsl
mov
fs
pop
icebp
out
dec
sbb
inc
xorb
in
inc
cwtl
cmp
iret
fstpl
pop
aaa
outsb
adc
xor
mov
pop
mov
pushf
faddl
inc
xchg
inc
push
into
sub
cltd
adc
jmp
cmc
aam
sahf
arpl
out
test
fisubl
movsl
xor
sahf
fstpl
popa
fnstenv
jmp
pushf
stc
shll
out
xor
push
std
or
pop
imul
loopne
pop
repz
bound
cmp
push
lret
jae
outsl
push
and
pushf
stos
xchg
xor
pusha
loope
iret
mov
test
movsb
cmp
cli
and
inc
xchg
in
push
xor
sti
xlat
push
ret
xchg
stos
lret
jnp
xor
mov
dec
cmpsb
aaa
push
sbb
add
push
cmp
shr
mov
jb
mov
nop
cmc
stos
rcrl
mov
and
or
dec
and
pop
xchg
int
jo
fsincos
sbb
dec
andl
in
frstor
inc
mov
in
or
call
lcall
insl
sub
add
into
test
xor
les
sbb
icebp
cmpsl
jmp
aas
addr16
scas
sbb
je
cmp
clc
push
fs
xchg
cmp
ljmp
or
sub
sbb
fiadds
outsl
nopl
rorl
and
mov
rcr
xchg
scas
lock
mov
dec
mov
xchg
mov
add
pop
mov
psllw
inc
sub
and
mov
enter
pop
pop
shlb
pop
pop
sbbl
sbbl
mov
mov
add
pop
and
pop
movsl
or
imul
movb
push
lret
jle
shll
popf
out
sbbl
xchg
hlt
lods
pop
sub
stc
sbb
pop
fisttpll
cmpsl
sbb
insb
cmp
cmp
daa
push
mov
sbb
jl
xchg
mov
repnz
inc
sbb
int3
pop
mov
xchg
inc
lods
std
pop
pop
mov
repz
in
call
icebp
push
push
push
jne
inc
push
xor
adc
orb
sbb
xchg
insl
sti
outsb
test
adc
cmp
mov
push
mov
inc
int
ss
lcall
inc
push
push
mov
dec
leave
iret
sub
mov
subl
notb
adcb
out
pop
jmp
out
mov
cwtl
ljmp
bound
sbb
scas
pop
in
push
mov
je
inc
test
sub
sub
inc
imul
shll
mov
sti
mov
or
pop
outsl
ss
out
les
call
js
rclb
in
jge
cmp
mov
jg
stc
and
ret
fistpl
mov
mov
faddl
add
adc
adc
and
dec
gs
cmp
mov
cmp
jle
dec
notl
stos
adc
jb
cmp
leave
jecxz
add
outsl
mov
sarl
and
cwtl
pushf
push
mov
xchg
scas
dec
int3
adc
pop
in
addr16
jb
add
mov
cmp
out
ja
sbb
jo
movsb
xor
mov
int
xor
sub
ljmp
push
push
fldcw
push
out
lea
mov
jnp
push
incl
mov
inc
sub
pop
dec
ds
ret
add
adc
mov
jmp
loop
mov
dec
cwtl
aas
int3
dec
cltd
rcr
pop
pop
pop
cmp
je
icebp
push
loop
push
pop
pop
add
loope
je
cmp
mov
ret
jp
ror
js
lods
add
push
mov
arpl
mov
jecxz
sbb
adc
arpl
std
push
xchg
jno
and
xor
xchg
jg
mov
dec
inc
xor
mov
insl
stos
pop
test
jge
repnz
std
sbb
iret
cmc
or
in
pop
push
xchg
mov
and
dec
imul
dec
pop
mov
adc
mov
xor
jae
scas
mov
inc
xchg
ss
jp
out
insl
push
lock
aam
popa
adc
cmpb
inc
scas
dec
test
jns
and
orl
mov
dec
in
addr16
inc
mov
jno
and
cltd
pop
dec
mov
sbb
fsubp
mov
mov
or
push
call
fisubrs
adc
int
imul
movsb
iret
cmp
cmpsb
inc
popf
sub
sbb
or
inc
adc
sbb
mov
fs
pop
cli
out
loopne
jmp
mov
jmp
add
mov
loope
scas
repnz
in
xchg
cmpb
adc
mov
ret
fdiv
jns
sbbl
dec
mov
test
pop
test
cmp
push
stc
push
adc
jge
int3
nop
xchg
mov
repz
fldcw
xchg
std
test
add
popa
push
ds
add
jnp
sbb
incb
xchg
lds
imul
int
and
jmp
in
pop
rolb
fwait
sub
cmpsl
sarl
out
outsb
push
out
jecxz
sti
ret
ljmp
cmp
xor
lahf
inc
mov
mov
cltd
xchg
fists
push
jle
push
adc
sub
movsl
jbe
fucomi
mov
cmp
iret
ljmp
add
mov
inc
std
enter
mov
push
push
arpl
push
aam
dec
pop
mov
adc
pop
stc
insb
movsb
jge
outsl
cld
mov
mov
cmp
testb
aad
ljmp
repz
mov
sub
and
lock
data16
loopne
mov
and
in
gs
xor
stos
sbb
push
cli
andl
pop
xor
dec
sub
pop
ret
cmp
mov
jno,pt
ret
push
adc
cmc
stc
xchg
push
dec
jae
shlb
mov
stos
rolb
jno
bound
cld
ljmp
out
adc
mov
cmpsl
inc
pop
adc
xchg
fistps
sub
bound
filds
jnp
cmp
cmp
nop
jb
sub
insl
xchg
push
mov
mov
cwtl
jbe
mov
in
jmp
imul
movsb
push
inc
test
cmp
xchg
lods
shlb
push
lods
cwtl
loope
add
hlt
sbb
sub
ficoms
shll
pop
and
mov
repnz
inc
xor
fnstsw
setge
dec
and
mov
xor
push
mov
or
mov
dec
lods
imul
add
push
jge
pop
adc
cld
mov
jno
in
int3
mov
cwtl
push
push
jle
push
scas
cwtl
imul
push
push
xor
mov
jmp
mov
outsl
movsb
addl
mov
pop
xchg
push
test
outsb
sbb
mov
adc
lcall
imul
sub
cmp
pop
pop
orl
dec
dec
pop
lahf
pop
movsl
push
in
mul
out
inc
mov
imul
cmc
ljmp
jl
movsb
sbb
mov
pusha
sub
pop
out
ret
sahf
in
jns
cmc
jl
fnstsw
or
stos
sub
and
sub
and
xacquire
in
mov
insl
dec
push
cmpl
dec
xor
mov
ljmp
pushl
das
sbb
cld
imul
aaa
pop
push
hlt
jg
jb
push
push
aam
int
pop
cmp
dec
subl
xchg
leave
sbb
cmpsl
mov
aaa
cmp
xchg
mov
dec
fisubs
sbb
shlb
jae
push
add
scas
aad
hlt
mov
cmp
push
daa
xor
mov
xor
jp
mov
sub
adcb
cmp
loopne
xor
jne
lds
dec
dec
inc
mov
adc
lret
enter
pop
sahf
pop
jns
pop
sub
or
mov
insl
xor
shlb
ja
push
push
and
int
lcall
adc
jno
outsl
mov
lea
push
mov
push
push
outsl
fisubrs
call
jmp
inc
ljmp
dec
ret
mov
push
repz
cs
sub
hlt
and
push
scas
lret
repz
pop
scas
out
cmp
mov
xchg
sub
test
mull
aam
ljmp
pop
outsb
mov
ror
cmp
mov
mov
jmp
push
add
pop
mov
frstor
cmp
add
jb
or
jns
sub
je
dec
and
push
rcrl
mov
popa
fstpt
ljmp
xor
out
fs
and
xchg
ljmp
mov
cmp
sbb
popa
push
daa
icebp
push
test
jge
add
popa
mov
mov
mov
xchg
push
mov
adcl
push
ljmp
sarb
ja
jns
ret
movsb
ficompl
mov
cli
icebp
jge
xchg
ja
arpl
add
mov
inc
rorl
push
adc
mov
jns
inc
fcoml
int3
dec
aaa
xor
arpl
imul
sbb
sbb
sub
dec
clc
dec
test
shll
adc
mulb
jmp
fs
dec
sub
mov
repz
insb
mov
roll
xchg
mov
fcompl
add
and
and
arpl
mov
test
adc
arpl
ret
mov
lret
aaa
xchg
push
arpl
arpl
mov
popf
mov
nop
add
adc
xchg
popa
jle
test
out
hlt
fsts
out
arpl
pop
push
js
mov
jbe
push
xor
icebp
cmp
xor
push
icebp
out
and
sub
pop
js
jmp
insb
inc
mov
rorl
mov
xor
into
bound
mov
lock
lret
pusha
iret
mov
fidivs
std
mov
data16
push
mov
or
ret
divb
movsl
ret
test
rcrl
jne
and
dec
jl
or
aad
pop
test
xchg
in
nop
bound
repz
hlt
mov
mov
mov
ljmp
mov
adc
bnd
in
and
popa
mov
clc
jnp
sub
in
stos
lret
jle
and
test
push
in
imul
in
add
jne
ljmp
outsl
mov
mov
jns
mov
stc
mov
shll
mov
roll
sbb
adc
add
xchg
mov
push
sbb
lods
aad
outsb
mov
mov
mov
mov
lcall
rolb
jg
and
inc
xor
test
jnp
pop
add
repz
jg
or
sbb
jle
js
ja
and
mov
cmp
push
mov
lods
mov
mov
test
adc
add
enter
out
cmpb
sarb
xor
es
sarl
stos
pop
test
mov
jle
cmp
jo
and
adc
std
cmp
daa
push
xor
lods
dec
jne
sub
stc
dec
es
sarl
xchg
and
popa
ret
xchg
jno
fnsave
ljmp
push
aaa
lds
jne
push
push
cmpsl
dec
fdivl
test
insb
xchg
and
jne
mov
mov
popa
das
jno
xchg
jnp
shlb
loope
test
pop
je
jb
pop
xchg
xchg
lock
faddl
dec
adc
xchg
sub
pop
dec
and
cmp
mov
pop
sub
pushf
sti
out
adc
rolb
subl
mov
les
jbe
jmp
mov
cmp
pop
push
stc
sbbl
mov
sahf
push
pop
movsl
das
xor
xor
mov
sub
in
add
jmp
jnp
jg
mov
lahf
stc
test
adcl
dec
adc
xor
and
push
jbe
jnp
mov
daa
out
je
jno
orb
adc
pop
jmp
sbb
fmull
and
adc
lods
dec
pop
mov
ror
sub
arpl
imul
and
in
enter
mov
test
cltd
mov
mov
push
mov
ficoml
sbb
lret
pop
adc
xchg
push
enter
inc
mov
inc
and
iret
push
pop
push
and
xor
in
cmpsl
push
je
push
mov
sbb
dec
ficomps
fisubrl
nop
push
lgs
xchg
sbb
dec
jg
aaa
mov
pop
dec
std
insb
or
cmp
pop
sub
lods
ds
jmp
cld
sbb
out
add
repz
mov
adc
lret
push
int3
mov
inc
jno
aaa
clc
fisttpl
xor
in
rcrl
and
adc
pop
cmp
push
push
mov
inc
or
push
iret
push
int3
std
ret
sti
add
lea
clc
xor
shl
pop
push
in
gs
stos
pusha
pusha
inc
xor
loopne
lcall
push
inc
mov
and
fnsave
and
jge
pop
jbe
outsl
inc
insl
cld
and
pop
push
and
cmp
dec
je
or
mov
insb
sub
aas
add
cmp
subl
rcll
loop
lret
fsubs
ljmp
rolb
push
sub
xor
cmpb
mov
dec
xchg
cmp
mov
and
xor
in
cld
mov
sub
jge
insl
imul
xchg
dec
repz
or
add
pop
push
mov
mov
add
ljmp
pop
cmp
stos
movsb
pusha
jno
aad
lret
adc
nop
cwtl
mov
mov
xchg
lahf
push
inc
mov
push
cli
xlat
jbe
pop
mov
dec
jo
dec
jbe
leave
adcb
sbb
ss
std
jle
sub
nop
jmp
arpl
dec
test
or
inc
loop
cmp
add
xlat
insl
and
mov
cmp
imul
push
sub
cmpsb
xchg
rcr
sti
mov
jb
daa
push
cmp
lcall
jns
mov
lret
int3
cmp
push
pop
inc
inc
imulb
cmpsl
or
jno
add
cmp
in
jbe
subl
mov
inc
mov
push
mov
ljmp
xlat
push
sub
jnp
dec
not
sahf
enter
test
mov
mov
cld
inc
jns
mov
test
inc
dec
cmp
mov
and
loope
adc
popf
jp
daa
aas
mov
pop
outsl
jbe
std
pop
lds
inc
fnsave
insb
cmpl
ljmp
jecxz
outsl
dec
jb
in
sahf
pop
jge
cmp
push
push
push
in
mov
shrl
mov
sub
pusha
into
jge
adc
xchg
push
shl
xchg
pushf
inc
out
mov
nop
xchg
inc
pop
ja
js
out
jp
shrb
pop
std
and
push
mov
shrl
xchg
and
popf
divl
or
adc
and
es
prefetcht1
dec
xchg
leave
test
pop
cmp
mov
imull
dec
stos
jo
sub
and
outsb
dec
outsb
ss
pushf
popf
cmp
xor
es
jl
jmp
enter
fsubrl
out
in
pop
mov
lock
ret
nop
out
lret
and
add
add
jg
xlat
ror
cmp
outsb
adc
arpl
push
mov
jne
fsubrp
xor
and
pop
flds
and
mov
cmp
loop
sahf
fwait
je
add
jg
jae
sbb
stos
lret
pushf
in
push
movsl
rorb
mov
jge
daa
mov
lea
in
outsl
ret
jo
xchg
sub
xor
dec
rcrl
push
inc
jl
incb
or
xor
addb
fs
ljmp
inc
xor
cmpsb
jno
mov
jb
mov
jmp
lock
dec
das
out
scas
fadds
shrb
idivl
adc
jb
cmp
std
call
xchg
fs
in
add
fstpl
jo
sub
xchg
into
mov
push
xchg
and
out
jmp
outsl
loopne
xor
je
pop
stc
cs
insb
xor
xor
cmp
xor
xchg
mov
pop
sub
sub
subb
pushf
repnz
xchg
ja
xor
mov
mov
mov
repnz
pop
scas
cmpsl
mov
cltd
subb
adc
mov
sbb
test
ret
rclb
shrl
inc
xchg
icebp
adc
loopne
scas
mov
iret
rcrl
addr16
lahf
sbb
push
mov
or
cmc
dec
mov
sub
das
call
scas
insb
mov
push
lods
je
shlb
mov
out
and
sbb
jg
mov
add
test
add
adc
ret
jmp
mov
mov
xchg
das
cmpxchg
js
sub
ret
sbb
pop
add
mov
js
daa
sar
mov
xlat
mov
andl
mov
push
adc
jae
mov
out
cmp
or
das
scas
mov
in
rcll
pop
lods
clc
popl
mov
mov
sub
pop
lret
dec
jb
push
mov
push
cmp
test
pop
outsl
sahf
dec
pop
xor
xchg
int
enter
pop
jae
adc
push
dec
xor
mov
pop
fdivrs
aaa
test
inc
xchg
ljmp
jp
sub
aas
push
je
in
cmp
test
mov
cmpsl
and
int
xchg
xor
xlat
mov
sbb
push
sub
test
fcmovb
shrl
fwait
jp
add
mov
pop
cmpsl
mov
icebp
mov
adc
in
sahf
aad
mov
fldenv
adc
jnp
sti
fimull
inc
cltd
mov
mov
fucomip
xchg
stc
add
adc
push
xchg
jmp
xchg
lret
push
xchg
pusha
sub
and
repz
mov
fists
push
jecxz
or
loop
icebp
cli
inc
push
add
les
in
xchg
insl
dec
dec
sub
loope
mov
and
dec
lcall
jmp
sbb
mov
fisubl
add
stc
outsb
and
int3
jno
inc
add
cmpsb
or
aad
insl
stos
sub
aad
ret
sti
enter
fs
jb
xchg
ljmp
test
pop
imul
or
mov
in
sub
inc
dec
ret
adc
popf
bswap
fs
xor
fdivrs
inc
je
jg
cmp
or
jns
rolb
lcall
pop
icebp
test
out
sbb
cltd
jp
fbstp
repnz
mov
enter
cs
outsl
rcrl
mov
movsl
and
push
out
push
mov
lahf
nop
push
gs
mov
push
mov
movsl
cmpsl
adcl
repnz
push
jmp
add
mov
sbb
jae
daa
repnz
popf
int3
xlat
xor
nop
fwait
test
insl
insb
adc
stos
push
xlat
idivb
sbb
adc
aaa
cmp
cmc
cltd
push
movsb
cli
jns
xchg
sub
js
lahf
pop
cmpsb
mov
mov
aam
mov
repnz
mov
mov
inc
jbe
mov
mov
imulb
lods
test
test
in
fisubs
push
inc
test
cmp
push
jnp
dec
and
xor
push
rolb
xchg
out
adc
or
test
adc
adc
xor
adc
dec
jmp
movsb
cmp
mov
cmp
sti
add
and
pop
xchg
or
adc
fstl
xlat
leave
fwait
sub
push
or
or
ja
jbe
jmp
jno
sarl
fstpt
xorb
sub
test
push
ja
mov
scas
divb
add
mov
sbb
sbb
cs
add
cmpsb
or
imul
fldl
shr
sub
scas
dec
inc
adc
push
push
mov
outsl
cli
repnz
pop
push
int
aas
inc
les
rcrb
js
hlt
std
bound
cmp
add
or
fstps
jge
sub
sub
jne
mov
inc
sbb
sub
jg
add
pop
imul
pop
and
int
dec
movnti
imul
cmp
push
add
cmp
or
lea
xchg
and
mov
sahf
jb
dec
xor
mov
pop
frstor
xlat
pop
les
jmp
roll
fs
adcl
aaa
les
ja
add
das
adc
jl
xor
push
pusha
fwait
aas
push
adc
fsubrl
fs
jmp
xor
jns
ds
and
call
xchg
scas
cs
out
push
repz
test
or
add
dec
ds
mulb
jno
out
sub
hlt
mov
inc
lahf
arpl
adc
adc
repz
push
adc
sahf
and
aas
and
es
xchg
iret
mov
mov
push
push
jo
sbb
add
and
pop
out
fwait
cmp
mov
notb
pop
push
inc
loope
add
lea
jb
inc
int3
test
mov
push
dec
in
push
lock
fidivrl
movsb
test
ja
jge
mov
push
pop
xorb
aad
out
and
pop
pop
xlat
shll
mov
scas
out
adc
xchg
ds
ljmp
dec
das
int
loop
jle
jmp
and
ljmp
and
push
cld
mov
cmp
mov
test
mov
das
ret
popa
dec
lods
push
std
out
fidivrs
imul
dec
adc
add
mov
or
stc
mov
pop
aam
daa
sarl
pop
dec
loope
cmp
cmpsl
aad
sbb
int
jl
fst
test
in
add
push
imul
push
or
adc
xor
call
add
movl
mov
cmc
jecxz
inc
cmp
sub
inc
xchg
iret
sti
icebp
lds
push
xor
pop
xor
das
movsl
inc
sbb
insb
nop
loop
jg
sbb
cmc
scas
in
movsb
aaa
sub
les
and
and
out
ret
or
ror
enter
push
and
xlat
inc
fildl
inc
pop
adc
mov
into
cmp
vmovdqu
push
sub
sbb
dec
sub
ficoms
mov
out
mov
pusha
mov
aas
push
aas
int3
jp
imul
in
sbb
mov
pop
leave
xchg
stc
cmpb
push
or
push
dec
jge
push
xor
xlat
popa
dec
inc
cmp
addr16
add
push
lds
iret
leave
mov
cwtl
adc
enter
mov
push
in
pop
scas
jl
mov
lret
or
and
out
mov
push
push
add
rep
icebp
fmull
add
jns
pop
imul
or
ret
and
or
mov
mov
ret
or
cmpsb
mov
pop
sbb
ret
xchg
pop
sbb
mov
out
jne
hlt
cwtl
dec
inc
sbbl
nop
pop
mov
jge
cli
xor
mov
fldenv
shrb
inc
xchg
and
loop
sub
or
lcall
adc
sbb
or
add
sub
fcomps
daa
sbb
loop
sub
inc
into
jle
mov
or
ficoml
in
sub
sub
xor
jl
std
mov
mov
cmc
push
xchg
mov
adc
jecxz,pn
pop
dec
xor
jecxz
lret
scas
out
push
mov
jb
jg
mov
icebp
pop
fnstsw
fldl
mov
fsubs
adc
out
ja
and
inc
cmp
mov
ljmp
lahf
in
repnz
repz
fwait
push
in
xchg
xchg
jae
rclb
lcall
cmpsl
pop
inc
icebp
xchg
dec
lods
jge
lds
cltd
idivl
in
push
jne
popf
jne
jp
xor
jb
inc
iret
roll
lret
cmpsl
add
add
movsb
and
mov
testl
jl
dec
ret
roll
dec
push
sbbl
push
pop
lods
pop
lret
fsubrl
cltd
sub
int3
mov
and
xorb
sbb
in
mov
push
xchg
into
test
in
or
jmp
push
fsubp
bnd
or
hlt
mov
lret
jb
mov
mov
bound
test
mov
data16
sbb
loope
or
bound
sbb
push
push
cltd
rol
add
js
ss
mov
dec
shll
dec
test
jle
dec
inc
hlt
xlat
stc
jle
movsb
mov
jnp
pusha
loopne
shlb
data16
cmpsb
push
rcrl
add
in
int
sbb
movsb
sbb
pop
dec
xlat
mov
xor
cmpsl
pushl
movsl
pop
mov
mov
mov
and
bound
mov
stos
add
add
xor
insl
add
mov
js
enter
pop
and
pop
xchg
stos
mov
jl
push
mov
cmpsl
push
adc
adc
push
jp
mov
out
popf
cltd
je
adc
mov
rolb
out
aas
adc
dec
and
out
call
mov
pop
insb
out
pop
pushl
test
xchg
sub
ss
cmp
push
pop
jno
and
imul
xor
jp
dec
mov
stc
or
out
gs
mov
dec
dec
mov
dec
jge
repz
aam
insl
pop
rolb
pop
inc
push
movl
cs
sub
cmp
sub
daa
and
pop
inc
mov
pop
adc
cmp
jmp
push
subb
repz
jns
push
call
shll
ficoml
cmp
sub
xor
add
sub
stos
test
iret
shlb
sbb
adc
call
es
mov
jecxz
inc
pop
out
adc
jl
stos
into
into
mov
andl
mov
xchg
fisubrl
jne
mov
in
in
je
addb
int
mov
test
inc
or
lds
cltd
scas
or
mov
fisttps
push
mov
and
xchg
mov
sbbl
adc
mov
scas
xlat
es
idivl
pusha
jno
xchg
hlt
dec
inc
mov
fildll
cld
fistpll
pop
dec
call
pop
in
mov
cs
pop
xor
inc
out
and
pop
aam
cmp
fmul
popf
xor
lods
mov
jg
ss
fmuls
cmp
je
mov
imul
and
fucomip
adc
dec
and
pop
add
cwtl
push
xchg
mov
xchg
sub
cld
mov
inc
sbb
sub
pop
cwtl
and
xlat
fnstsw
in
xchg
in
xor
xchg
jnp
adc
ljmp
push
stos
adc
fscale
shrl
roll
gs
mov
xchg
into
insb
jno
test
push
push
ljmp
xchg
sarl
orl
and
icebp
xor
fcoml
in
rol
sub
nop
lods
jb
and
aam
js
hlt
lahf
stc
pop
dec
aas
lret
adc
or
pop
adc
pushl
mov
mov
insb
movsb
aam
push
mov
mov
push
cmc
sbbb
xor
fsts
mov
das
push
lods
xlat
jbe
push
sbb
dec
push
cld
lcall
dec
imul
mov
je
test
pop
mov
in
imul
fdivr
lret
lahf
push
or
decl
pop
xchg
out
mov
add
mov
mov
dec
pusha
leave
test
inc
sbb
dec
inc
pop
xchg
not
push
shrl
sub
call
jb
jb
jae
icebp
add
sub
push
cli
inc
dec
mov
jo
filds
in
sub
dec
rorl
mov
clc
mov
sahf
lea
aas
icebp
xchg
scas
out
push
scas
xchg
sub
push
xlat
and
adc
pop
or
cld
sub
mov
loopne
insl
mov
pop
fstps
inc
inc
dec
int
repnz
cmp
movsb
pop
lock
mov
xor
mov
out
mov
adc
mov
arpl
lds
rcll
mov
push
mov
or
jge
push
push
mov
add
push
ja
stos
pop
pop
jg
cmp
clc
mov
in
mov
jns
pop
mov
loop
ss
and
les
mov
mov
mov
ror
pop
pop
scas
in
push
popf
in
roll
std
sahf
cld
ja
mov
sbb
pop
mov
mov
cmc
jge
imull
ds
fdivrs
push
jo
xchg
addr16
outsl
cmpsl
das
lds
sub
das
xchg
or
xor
fbstp
xchg
fidivrl
mulb
aaa
push
fisttpl
push
lods
daa
cwtl
icebp
or
mov
adcl
movsb
sub
in
inc
pop
mov
dec
lahf
loopne
cmpsb
push
or
ret
cltd
fsubrs
add
ficompl
lds
xchg
outsb
jns
ljmp
sub
push
push
ljmp
xor
out
adc
fisubrs
mov
dec
js
xor
sarb
jns
outsl
dec
jbe
addr16
mov
push
sbb
xor
xor
fs
daa
or
xchg
fdiv
push
mov
outsl
call
loope
and
bound
imul
sarb
dec
mov
shlb
mov
push
or
mov
sbb
dec
mov
add
or
not
or
sub
roll
jl
xchg
sti
shrl
mov
xchg
xchg
add
push
or
andl
mov
add
mov
dec
xor
jp,pn
popf
and
sahf
loop
outsb
jle
fwait
xchg
adc
mov
xchg
lea
lahf
int3
inc
xor
jno
or
lcall
jb
add
xchg
repz
adc
aam
or
and
loope
outsl
ds
leave
bound
adc
loope
jnp
inc
movsl
sti
jmp
inc
clc
pop
f2xm1
xor
xchg
mov
jbe
push
add
lret
clc
idiv
scas
out
mov
loope
imul
pop
inc
es
pop
iret
sbb
push
fdivrs
cmpsb
xchg
jmp
loop
arpl
out
insl
je
aad
sti
icebp
sahf
jb
lahf
fucomp
movsb
test
jl
sahf
aad
ja
add
mov
je
std
pop
jle
mov
mov
jl
dec
pop
inc
cmp
jg,pt
add
pop
je
das
bswap
stos
push
push
out
sub
call
loope
mov
mov
fisttps
jns
pop
or
mov
dec
das
push
call
xchg
fmuls
mov
je
push
jne
pop
mov
dec
adc
sbb
fdivr
xchg
fadd
gs
adcb
adc
cmp
inc
ret
adc
inc
lods
jo
lahf
andl
push
sub
sbb
push
adc
cmp
pop
loop
arpl
and
mov
xchg
mov
repz
icebp
test
sarb
mov
and
mov
pop
clc
mov
dec
jb
push
sub
addr16
mov
jle
outsl
and
xchg
mov
xorb
sbb
push
aad
xor
and
in
sub
cld
ds
cmpb
test
mov
shrd
jle
sti
rol
stos
push
fiadds
movsb
mov
arpl
ja
inc
pop
push
dec
pop
andb
fimuls
stos
pop
dec
add
mov
int3
mov
cmp
stc
dec
and
sub
mov
sbb
bound
cli
test
mov
stc
daa
adc
xor
mov
mov
xor
jmp
call
mov
mov
int
xor
shll
mov
aas
mov
popa
in
inc
pop
sbb
push
test
jl
jns
bnd
jne
in
movsb
mov
inc
sub
cs
repnz
jmp
jne
add
sbb
mov
cmp
inc
lods
sub
stos
mov
sahf
push
mov
popl
add
dec
scas
hlt
in
sub
pop
mov
add
cmpsb
repnz
out
and
scas
pop
mov
mov
pop
je
lahf
dec
sbb
leave
jge
push
ja
adc
mov
cmp
lea
cmpsb
and
ror
negl
loope
push
xor
xor
xchg
scas
mov
sar
add
pop
cli
or
or
in
aaa
ret
cmpsl
pop
jle
push
lcall
inc
fldenv
leave
aam
cs
das
push
mov
dec
xchg
out
imul
lock
aad
hlt
xchg
dec
pop
sbb
fwait
fwait
insb
popa
jp
fs
sti
xor
pop
adc
xchg
push
add
mov
jecxz
es
insb
sbb
lret
out
inc
mov
outsl
pop
les
scas
int3
mov
scas
daa
ss
cli
les
cmpsl
leave
xor
mov
xorl
es
int
es
aad
popa
and
pushf
xchg
stos
test
mov
cli
dec
jmp
popa
mov
cmp
hlt
xchg
in
aas
pop
test
fwait
sub
scas
lret
inc
mov
sahf
add
ret
push
sub
push
push
cmp
xor
adc
into
add
mov
mov
sbb
lret
jge
mov
pushf
or
fwait
xchg
jno
sahf
cmp
das
daa
nop
pop
imul
test
movsl
ficoml
ret
ret
call
adc
movsb
ror
adc
xchg
outsl
inc
es
popa
jl
dec
mov
testb
jae
out
mov
adc
or
mov
push
adc
sbb
lcall
push
mov
sbb
adc
pusha
pop
xchg
cmp
sti
dec
stc
fcoms
pop
xlat
and
cltd
jl
mov
stos
mov
into
sbb
fistpll
xchg
fbld
xor
repnz
sarb
out
or
nop
fsubl
cmp
fdivrs
sbb
jmp
or
repz
shll
out
cld
and
pusha
dec
outsl
out
cltd
sbb
push
in
sbb
mov
mov
pop
jno
mov
into
shlb
popf
xor
add
ljmp
mov
idivb
je
push
push
out
sbb
and
or
mov
dec
push
mov
add
gs
stos
sub
fwait
imul
push
inc
sahf
std
vfmadd132sd
repnz
push
rorb
inc
mov
je
jb
pop
cmpsb
gs
ds
inc
xchg
sahf
or
daa
pop
pop
sti
push
pop
es
scas
dec
jbe
mov
shll
sbb
pop
out
pop
aaa
mov
clc
cmp
dec
pop
filds
not
inc
stos
arpl
jns
sbb
mov
call
int3
cmp
dec
pop
outsl
inc
push
mov
je
jae
repz
insl
loop
idiv
jge
sbb
stos
push
hlt
outsl
push
pop
movsl
cmp
push
jge
test
repz
dec
sarl
mov
shlb
cmp
adc
fcmovu
jb
inc
cmp
fucomp
xor
pop
fisttps
push
rorl
xchg
scas
sub
mov
orb
jmp
jle
sbb
bound
inc
in
dec
cld
and
or
pushf
xor
addr16
mov
add
adc
flds
int
pop
icebp
adc
lret
xor
dec
lds
push
mov
sbb
cmpsb
push
push
or
push
cmp
out
push
xchg
push
jmp
push
lahf
xchg
shll
adc
test
int
dec
repz
mov
mov
iret
xchg
mov
sbb
gs
sbb
lret
rcrb
negb
ds
pop
sbb
push
or
mov
sbb
test
cmpsl
push
je
add
mov
push
pusha
sbb
daa
sbb
pop
push
push
or
xchg
add
mov
fcoms
mov
mov
xlat
jmp
xchg
xchg
xchg
mov
sbb
into
inc
xchg
scas
pop
pop
cwtl
mov
dec
add
les
pusha
dec
fs
ficompl
dec
ds
xchg
jmp
dec
adc
fs
xor
bound
mov
js
test
jle
add
xchg
in
cmpsb
inc
or
std
push
jb
jp
pop
movsl
mov
test
xchg
ds
dec
xor
stos
insl
leave
clc
cmp
aam
mov
pop
aas
mov
lock
int
lock
mov
pop
pop
xchg
or
das
jbe
mov
and
popa
test
out
out
mov
aas
sbbb
clc
cli
out
jle
jmp
out
lds
out
xchg
popa
andl
xor
adc
push
cmp
je
mov
dec
lcall
jne
insb
punpcklbw
subb
or
mov
mov
pop
xchg
sbb
mov
xchg
ljmp
adc
push
fdiv
cmp
lret
loopne
gs
mov
cltd
xchg
out
push
jne
cs
mov
in
jno
pop
in
rep
cmp
shll
push
enter
aad
roll
pushf
or
mov
aad
call
insb
inc
shrb
hlt
movsl
or
fisubrs
lret
fwait
decb
and
inc
aam
in
cs
xor
fwait
in
xchg
dec
imul
push
push
loopne
lahf
cmp
out
and
ret
add
aad
dec
imul
test
sti
pop
lcall
nop
sar
clc
push
jp
mov
adc
add
dec
fidivrs
int
add
mov
mov
pop
nopl
xorb
xchg
mov
lds
jp
inc
mov
leave
out
popa
jbe
dec
push
xorb
xchg
pop
loopne
incb
mov
fcoml
push
leave
ss
lahf
and
nop
mov
push
push
jne
jecxz
outsb
repnz
fmuls
pusha
sub
mov
jno
inc
pop
xchg
jb
mov
cmpsl
pushf
loop
cmp
dec
push
fmuls
loop
cmc
sbb
aaa
out
js
or
jns
mov
in
xchg
and
jnp
test
arpl
xor
hlt
push
cmp
xchg
outsl
and
push
sbb
or
stc
ret
push
add
test
mov
fmul
hlt
loop
cmp
inc
inc
enter
jge
in
rcll
push
or
dec
lock
cmp
out
repz
fstpt
gs
sbb
mov
and
vsqrtsd
movl
inc
lcall
shl
jp
rorb
pusha
mov
loopne
inc
mov
push
lcall
les
rorb
xor
jo
fstpt
mull
and
mov
mov
xor
push
int3
jns
lods
xor
imul
mov
pop
aad
imul
in
jmp
repz
out
mov
and
mov
pop
punpcklwd
cwtl
cmc
or
aas
or
in
scas
mov
rclb
fucomp
dec
cmp
mov
lret
out
mov
mov
jmp
mov
jnp
aas
test
cmc
int3
mov
xor
lret
test
sbb
jecxz
mov
jns
push
adc
out
cmp
adc
jg
rorb
stos
pop
adc
mov
scas
jmp
push
dec
popa
xor
push
add
fistps
sbb
sub
dec
daa
jnp
clc
jl
outsb
sub
fildll
adc
push
xor
inc
gs
dec
in
clc
pop
aam
mov
sbb
pushf
adc
std
and
mull
jecxz
sbb
shll
xchg
xor
pop
pop
mov
negb
mov
mov
xor
scas
into
xchg
pop
dec
mov
mov
push
push
push
mov
jl
subb
dec
in
mov
lods
add
and
sub
addr16
or
fidivl
xchg
cmp
fs
jbe
lds
insl
icebp
xor
mov
out
clc
cmpsl
mov
push
imul
je
xor
mov
std
lret
lea
ljmp
mov
jns
daa
push
shlb
push
pop
or
leave
xchg
hlt
inc
lock
adc
mov
pop
sub
adc
test
dec
mov
sbb
ja
push
pop
pop
pop
in
hlt
enter
int3
ret
pop
loopne
movsl
jnp
and
arpl
gs
jo
push
fnstcw
pop
or
stc
mov
inc
and
test
jmp
sbb
mov
add
add
and
pop
push
ficoms
sub
cmp
mov
pop
clc
test
cmpsl
add
adc
jge
shlb
cwtl
xor
jp
cmp
hlt
call
sbb
xchg
je
xchg
enter
stos
adc
outsl
sub
jg
mov
xor
push
inc
int3
lods
rcrb
push
sub
mov
sti
add
lea
mov
push
icebp
and
fcoml
lea
lods
adc
or
cwtl
flds
lods
cmp
ret
push
jp
xchg
sub
mov
push
test
and
loopne
imul
or
sbb
outsl
sbb
and
push
aad
dec
push
call
add
pusha
add
pop
ret
mov
jnp
les
cld
push
leave
ss
adc
pop
fs
sub
xchg
out
sub
pop
add
roll
pop
cmpb
sti
ret
add
sbb
fs
mov
movsb
in
iret
jge
and
xchg
push
push
mov
test
jp
mov
mov
push
xchg
sub
lock
dec
xor
loope
mov
mov
jge
sbb
fnstsw
loopne
lods
xor
cmp
inc
repnz
pop
jnp
inc
std
cld
inc
leave
cltd
insb
fwait
sub
gs
jnp
cmp
test
jl
dec
cmp
cld
inc
mov
shll
out
cltd
push
hlt
push
jl
xchg
xchg
dec
xchg
and
xchg
pushf
mov
les
push
sub
dec
fsubr
mov
lds
lea
pop
imul
jbe
jg
pop
lcall
stos
jo
pushf
lods
mov
mov
jo
mov
mov
pop
test
mov
into
push
mov
sti
adc
ja
fistpll
mov
stos
daa
int3
test
fdivrl
dec
stos
in
je
je
andb
xchg
movsl
ror
lahf
inc
push
jl
dec
sbb
jns
test
lcall
ret
push
inc
scas
fldl
fldcw
test
js
xor
ss
test
fsubl
dec
sbb
cmp
insl
mov
inc
shrb
insl
pop
jnp
pop
jge
orb
fsubl
enter
cld
lcall
les
adc
dec
incl
push
arpl
out
adc
mov
mov
and
out
and
mov
push
ss
xchg
or
mov
aaa
jo
xor
mov
xor
sti
daa
cmp
jmp
cli
js
lret
cmc
aaa
sbb
aas
orl
aaa
pop
jno
xchg
mov
call
adcl
sub
les
sbb
cmp
pop
adc
out
lods
aaa
daa
mov
sahf
jno
leave
jnp
das
inc
test
shlb
cmp
cmpsl
aad
jo
cmp
lds
add
jne
cmc
sbb
mov
repnz
jns
lret
and
push
mov
push
or
std
sub
sub
dec
xor
aas
jbe
mov
mov
xchg
adc
adc
xor
ljmp
adc
mov
add
inc
cld
dec
aas
test
mov
shlb
inc
or
xchg
mov
ljmp
roll
loopne
pusha
clc
aam
xchg
leave
adc
add
es
mov
mov
rorl
imul
xor
pop
es
push
cmp
jecxz
xor
aad
lret
mov
adc
pop
xor
and
cmpsl
fistl
dec
push
sbb
mov
ret
loop
mov
sbb
ror
lahf
fisubrs
fs
jmp
into
out
int3
scas
jb
enter
add
les
mov
fisttpll
movsb
ret
enter
push
subb
mov
adc
add
push
lret
adc
jb
xchg
jno
xor
push
out
mov
daa
test
lods
loopne
out
jb
xorl
shr
jg
stc
add
jp
nop
xor
fwait
cmp
int
js
movhps
cld
dec
push
cmp
adc
push
inc
in
mov
pop
iret
mov
and
mov
icebp
fsubrs
push
pop
jno
push
pop
loopne
addr16
repnz
jns
or
pop
adc
jl
add
and
xchg
mov
or
cmp
negl
test
in
fadds
test
mov
clc
jae
jo
fisttps
mov
mov
jb
ret
push
sahf
test
jb
fwait
pushf
xorb
int3
inc
adc
call
sbb
movsl
add
add
lret
push
loopne
xchg
repz
push
mov
jo
outsl
dec
xor
mov
mov
cltd
cmp
add
sub
mov
sahf
fsubrl
sti
and
fnsave
mov
and
jae
fisttpl
cmp
dec
jnp
cmp
fs
lods
mov
pushf
sub
push
or
jg
mov
std
add
lahf
jno
jge
inc
movsb
dec
fsts
in
mov
sbb
arpl
sbb
push
fisttpll
cmp
mov
add
loope
clc
jnp
cld
aaa
fmul
in
mov
fldcw
enter
jmp
or
mov
push
fwait
stos
sbb
hlt
pop
out
add
xchg
or
mov
cli
or
push
inc
dec
and
aam
int
mov
mov
xchg
xor
imul
cmp
daa
dec
imul
adc
inc
icebp
ror
ret
adc
leave
add
addr16
mov
dec
aam
mov
cmpsb
mov
mov
inc
mov
scas
stos
pop
pop
inc
add
push
dec
xor
cmpsl
in
shll
push
sub
leave
incb
xchg
adc
fdivrl
loopne
js
lds
mov
lods
jg
sbb
nop
mov
je
pop
dec
fldt
cmpb
popa
stc
mov
cmpsb
neg
cli
lahf
xor
mov
pop
movsl
movsl
inc
sub
jmp
lahf
rcll
and
mov
push
cmc
popa
and
mov
mov
xlat
xchg
in
out
or
push
out
test
lods
mov
into
push
xchg
imul
incl
gs
sti
xor
shl
pop
pop
add
bound
leave
fiaddl
out
jp
add
sbb
inc
xchg
xor
loop
out
cld
aaa
or
sbb
jp
and
push
jle
fisttps
icebp
aad
fwait
stos
rcr
sarb
js
nop
repz
mov
les
ss
cmpsl
mov
push
imul
xlat
repnz
fsubrl
sub
dec
jmp
hlt
push
call
bound
add
mov
pop
push
fsubl
and
sub
and
cmp
dec
mov
cmp
xchg
pop
cli
clc
dec
dec
inc
addr16
fstp
mov
in
dec
imul
mov
jl
stc
pop
sub
xor
mov
pop
imul
rclb
push
pop
xor
and
cmp
xor
xor
loopne
movl
cld
in
fcompl
jo
xchg
sahf
subl
inc
mov
or
lcall
push
int3
movsl
dec
sbb
movsb
xlat
mov
test
pop
sbb
sub
jle
sbb
scas
mov
add
dec
inc
enter
jp
in
popf
cwtl
xor
xor
xchg
fistpl
test
gs
out
pop
cltd
loope
ja
add
repnz
ret
pop
xchg
adc
fcomps
andb
and
push
test
push
jae
sub
cld
shlb
mov
pushf
out
insl
mov
and
mov
or
ficoml
sbb
xor
arpl
dec
xor
fcoml
and
xlat
fnstsw
dec
jl
out
loopne
xlat
mov
and
pop
jnp
mov
notb
clc
inc
insb
loopne
test
xor
inc
dec
mov
flds
in
gs
jb
adc
outsb
das
push
nop
lret
sub
es
and
sysexit
cmp
in
out
add
jge
fstps
in
push
cmp
inc
inc
ret
cmp
mov
jne
jp
in
xchg
outsb
sub
dec
test
mov
cltd
mov
sub
sub
outsl
push
mov
loopne
jl
dec
test
or
aad
into
std
push
mov
out
jmp
out
xor
out
test
imul
adc
stos
push
sbb
fldt
nop
mov
daa
inc
bound
jg
subb
sbb
out
cwtl
add
je
mov
js
fimull
mov
pop
xchg
sbb
push
inc
clc
dec
xor
xlat
jmp
movsb
jle
lods
fiadds
jbe
cmc
neg
sahf
jne
lret
lret
mov
mov
in
adc
in
add
mov
movsl
outsb
cltd
sbb
pusha
adcl
cs
cli
push
add
push
inc
sti
dec
sti
xchg
adc
mov
mov
cmp
cmp
or
lods
pop
add
jae
jmp
imul
mov
stos
and
mov
sbb
dec
lea
cli
and
dec
rol
mov
loop
xlat
or
cmp
out
add
pop
mov
add
xor
and
mov
inc
rcl
pop
push
sbb
adc
adc
push
push
sbb
pop
lahf
repnz
out
loope
pop
fcompl
popa
or
stos
xchg
outsl
pushf
push
add
xchg
or
push
cmpsl
gs
test
out
pop
lcall
call
shrl
sub
pop
sub
jo
or
push
and
pop
dec
push
in
xor
mov
sahf
jmp
in
addr16
mov
pop
lret
dec
shrl
xchg
xor
sti
dec
inc
add
out
aaa
or
daa
incb
add
mov
xchg
mov
movsb
fsubs
sbb
or
mov
dec
cmp
in
jnp
insl
dec
or
ds
mov
mov
mov
or
loop
movsb
sub
add
add
or
fdivrs
iret
aas
mov
add
stos
data16
push
out
add
xchg
mov
pop
fcmovbe
pop
xchg
ret
mov
inc
add
out
stos
incl
mov
cmc
mov
add
push
or
xchg
dec
and
sti
pusha
fsubp
xchg
add
inc
pop
bound
out
push
cwtl
leave
mov
cltd
mov
mov
mov
mov
mov
jbe
test
mov
dec
sub
aam
cwtl
sbb
stos
lods
xor
je
and
sub
xor
push
rol
sbb
mov
adc
xorl
xchg
mov
iret
scas
xchg
and
push
inc
rcl
repnz
jmp
enter
push
cltd
out
out
not
bound
out
arpl
fwait
jae
das
inc
or
and
idivb
icebp
mov
aad
popf
push
pop
xor
xorb
and
test
and
ret
sbb
mov
adc
adc
mov
push
push
lahf
xchg
sbb
sbbb
jno
loopne
loope
sbb
loopne
jecxz
pushf
enter
xlat
mov
mov
stc
pop
lcall
jg
ficoms
add
movsl
mov
test
fs
push
sbb
bnd
andl
fildl
nop
leave
sbb
cmp
iret
stc
xor
cwtl
jo
xor
sub
in
adc
mov
cmp
sbb
mov
xchg
adc
pusha
dec
mov
loopne
test
jnp
inc
shrl
or
mov
lds
push
cmc
or
cmp
push
add
xchg
sub
jno
mov
cmp
sbb
jns
jb
jae
out
xchg
fldl
or
std
popa
aad
pop
adc
inc
aaa
cmc
mov
xor
inc
loope
mov
xchg
rcr
pop
scas
jecxz
rcrb
mov
fisubl
scas
lods
inc
cwtl
jmp
sti
xorl
out
add
and
sub
dec
adc
incl
push
mov
pushf
push
xor
gs
test
mov
jge
fisubs
aas
lret
cld
testb
or
in
or
jg
mov
xchg
ds
inc
jg
cmc
adc
sbb
xor
call
and
pop
dec
mov
fsub
mov
sub
sub
and
cmc
add
pop
sbbb
cmp
jle
cltd
cmp
into
test
add
mov
and
int3
xlat
pop
out
fwait
subl
adc
cmpsl
push
fiadds
repnz
push
xchg
mov
mov
xor
xchg
adc
lock
pop
insb
sbb
pop
sbb
cmpsb
adc
inc
adc
pop
inc
sbb
mov
iret
jo
xchg
mov
mov
roll
mov
cltd
jns
push
insl
into
dec
scas
jns
push
inc
inc
jns
cmp
sbb
mov
lahf
movsl
enter
aam
fiaddl
pop
fsts
fisttpll
cmp
mul
pushf
sti
int3
adc
popa
jp
dec
out
cmpsb
dec
decb
in
fists
pop
aaa
clc
test
lahf
je
loop
fimull
rorb
pop
cs
cmp
mov
push
dec
cmp
stc
inc
stc
jg
enter
push
xchg
in
dec
pop
movsl
mov
cld
pop
pop
adc
stc
shll
cmpsl
mov
enter
pop
xchg
push
push
xchg
adc
mov
xchg
xor
push
dec
in
frstor
je
ss
jns
jmp
jl
fstps
aam
xchg
lock
lods
out
mov
sbb
movsl
sub
repz
in
cltd
sti
loopne
jbe
xchg
fildl
js
stos
pop
addr16
pop
push
daa
jbe
addr16
inc
lret
xor
lods
mov
xchg
dec
xorl
sub
mov
mov
orb
inc
dec
inc
add
idivb
jmp
jge
pop
out
cwtl
enter
jmp
sbb
adc
adc
bound
std
aam
cmp
push
xchg
or
sbb
hlt
inc
clc
jg
gs
and
ja
leave
pusha
jnp
push
mov
xor
daa
dec
mov
jno
mov
cmpsl
xor
data16
test
pop
push
add
or
xor
and
or
jge
push
clc
mov
leave
add
xchg
mov
inc
imull
xchg
push
movsl
js
aaa
sbb
push
fisubrs
icebp
mov
test
ret
xchg
das
ja
mov
dec
je
sub
mov
je
inc
sahf
xchg
add
dec
jp
dec
ss
lock
test
pop
mov
test
cmp
mov
mov
mov
cmp
gs
cmpsb
cmp
cmp
sub
xchg
inc
push
rcr
pusha
push
sub
xor
iret
or
stos
imul
adc
cmp
push
dec
mov
add
mov
and
in
xchg
outsl
imul
push
es
hlt
lods
sbb
shrb
sub
adcb
add
xchg
inc
push
add
int
popf
ljmp
shlb
jbe
xlat
xor
adc
shr
push
mov
sti
mov
or
andl
lret
jge
mov
shlb
push
add
loopne
movups
mov
push
outsl
xchg
movsb
stc
clc
jmp
lcall
mov
outsl
in
outsb
int3
and
dec
aaa
bound
xchg
pop
mov
mov
add
push
bound
mov
stos
dec
or
test
mov
jge
fstpt
mov
cmp
stos
push
stos
arpl
xor
inc
dec
adc
adc
movsl
dec
test
sub
adc
dec
inc
sbb
xlat
sub
mov
jecxz
jmp
push
jmp
add
pop
xchg
mov
add
mov
mov
mov
xor
add
scas
jnp
inc
std
pop
mov
nop
out
mov
jecxz
rcrl
insb
xchg
pusha
adc
dec
adc
cmp
sub
mov
mov
aas
mov
andl
mov
push
mov
pusha
jb
push
jl
sahf
push
inc
fiadds
addr16
pop
mov
jae
sbb
xor
pop
shlb
loopne
imul
cli
inc
call
mov
fs
dec
mov
shll
and
sti
call
push
cli
lahf
sub
mov
fwait
pop
lods
push
mov
mov
rcrl
insl
or
insb
stc
icebp
add
mov
sub
ljmp
js
lock
mov
lcall
js
mov
inc
out
ret
iret
sub
dec
push
call
faddl
fwait
es
ja
mov
mov
orl
jmp
enter
cmp
sti
sbb
push
fwait
dec
mov
jl
data16
or
xchg
das
and
add
sbb
int3
lret
pop
cmp
fdivs
fsubrl
popf
jns
lcall
out
movsl
lret
lea
push
xor
sbb
adc
cwtl
or
inc
xor
mov
dec
pop
sub
lods
mov
fs
sbb
cmp
popf
dec
cwtl
subl
fwait
sbb
lods
outsl
inc
push
sub
stc
mov
pop
or
leave
test
xchg
xor
fmull
rcrl
dec
iret
int
lcall
pop
mov
pushf
loop
inc
mov
lret
sahf
add
popa
mov
dec
leave
insl
and
and
std
call
push
gs
add
lahf
xor
loopne
inc
push
adc
inc
inc
sub
mov
xchg
push
dec
mov
jns
jg
pop
pusha
andb
shrb
aad
jne
pop
pop
je
data16
mov
std
lahf
mov
cld
loopne
ljmp
in
test
enter
adc
je
jae
add
ss
stos
lods
mov
xor
sbb
call
xor
push
lods
cs
out
test
cltd
pop
test
dec
lds
cwtl
xor
xor
jle
arpl
scas
xchg
insb
out
popl
and
mov
flds
xor
fucomp
sub
out
scas
mov
std
test
jl
mov
outsl
push
lret
cs
test
aaa
pop
aad
lea
fiaddl
xchg
cs
andl
and
dec
or
mov
pop
call
cmc
push
popf
lea
pop
inc
mov
jbe
div
sbbb
mov
sbbl
cmpsl
pop
aam
inc
push
fs
sti
mov
out
jge
jne
pop
loop
adc
mov
and
rol
add
mov
sub
mov
jns
adc
mov
and
cmp
push
cmp
mov
push
sub
ret
jae
jp
cmp
ds
pop
or
enter
mov
sbb
add
jb
pop
cmp
gs
cs
mov
jg
dec
mov
xlat
aam
ljmp
dec
xor
inc
enter
inc
and
inc
cmp
xchg
and
push
or
push
lret
add
and
sub
push
lret
cmpsl
in
aaa
lahf
xlat
lea
cmp
inc
stc
jp
aas
mov
mov
sub
fstpl
add
rorl
sub
das
mov
sub
loop
sti
dec
clc
xlat
jbe
popa
inc
aaa
add
inc
pop
jp
jbe
jnp
fiadds
push
test
lret
sub
das
sub
inc
cmp
hlt
imul
enter
in
xor
shlb
push
inc
fbstp
cwtl
data16
bound
xchg
imul
adc
adc
cmpsb
ds
ja
jge
push
daa
add
adc
and
cmp
addr16
jle
or
lods
jle
bound
popf
mov
mov
inc
daa
ret
fnstsw
add
pop
lock
clc
jno
cmpsb
sub
loope
mov
sbb
jmp
ja
call
in
mov
shr
cltd
ret
push
cmp
lock
fiadds
push
in
xchg
shll
js
aad
cli
push
int3
xchg
jo
push
loope
lret
ret
shrb
outsb
outsl
imull
push
cltd
push
test
jbe
stos
inc
test
std
rol
push
addr16
mov
insb
xchg
outsb
stos
lret
test
mov
cmpsl
fldt
ja
int
stc
mov
mov
fiadds
mov
cmp
in
outsl
add
xchg
cmp
push
jge
testb
arpl
out
gs
mov
mov
test
or
lahf
mov
js
push
repz
aaa
lea
xchg
ss
sub
cwtl
jne
xor
mov
mov
clc
push
stos
cld
cmpsl
xor
fldlg2
mov
push
sti
xchg
push
loop
iret
neg
call
ds
cmp
lods
inc
jb
dec
and
jmp
jle
sub
std
jecxz
add
pop
fsubrs
loopne
inc
ds
xchg
arpl
adc
mov
mov
mov
lahf
pop
and
loope
inc
pusha
ja
pop
jg
lock
stos
cltd
cmpl
pop
pop
sarl
in
xchg
inc
adc
push
add
pusha
in
mov
cmc
lods
dec
pop
jbe
mov
sub
inc
imul
lcall
push
xor
dec
fcoml
hlt
insb
mov
addr16
or
pushf
jle
push
pop
testl
test
lds
hlt
sub
or
pushf
fdivs
fnstenv
enter
pop
bound
jne
or
hlt
cld
adc
mul
xor
push
sahf
adc
sbb
add
push
sbb
cmp
in
fisubl
stos
pop
xchg
ds
jb
add
insl
in
xor
xchg
pop
aas
fstpl
push
mov
and
orb
fildl
fs
add
add
xor
and
dec
cmpsb
adc
mov
clc
into
aas
aaa
aaa
mov
int
addl
ja
les
xor
dec
or
jl
pop
add
mov
xor
jecxz
sbb
ror
out
loop
test
sbb
int
cmp
mov
push
pop
or
push
dec
stc
push
cmpsl
sbb
dec
imul
inc
idivb
stos
dec
daa
mov
sbb
sub
mov
or
les
cmp
jns
inc
dec
dec
cld
cli
lret
mov
jne
stc
lock
cwtl
push
or
fs
nop
xchg
xor
inc
xchg
adc
jl
push
add
pop
mov
sarb
xor
mov
aas
dec
popa
xchg
leave
sarb
leave
lcall
imul
xchg
sbb
dec
inc
addr16
mov
fcoms
mov
push
fists
popa
cmpsb
ljmp
add
test
out
movsl
pop
lret
sub
in
cwtl
cld
ds
mov
sub
sbb
ss
insb
dec
arpl
or
fwait
adc
adc
cmp
xor
mov
pop
int3
or
xchg
loopne
shll
orb
mov
mov
mov
sbbb
and
add
dec
mov
pop
xchg
clc
adc
dec
adc
add
add
inc
and
arpl
ret
adc
adc
aaa
cmp
xor
and
mov
sbb
pop
rcr
jmp
divw
sahf
call
dec
or
pop
cltd
cwtl
rol
mov
out
scas
and
int3
lds
test
test
ljmp
jge
aad
lods
mov
cmp
mov
or
adc
push
add
mov
push
inc
pop
shl
mov
aam
pusha
mov
mov
out
insb
add
sub
and
mov
cld
or
incl
lcall
inc
or
mov
js
repz
hlt
mov
repnz
xchg
out
aam
or
mov
fildll
ret
adc
fidivs
loop
sub
dec
mov
scas
xor
notl
cs
dec
mov
inc
jl
sbb
pop
mov
loop
or
int
pop
pop
std
and
pop
aaa
fwait
mov
xchg
sub
dec
dec
adc
push
aad
xor
arpl
push
mov
add
in
cmp
adc
sbbb
arpl
das
fiaddl
adc
insl
into
sub
bound
sub
rclb
jle
jne
mov
xlat
lods
jne
jecxz
or
scas
fwait
movsl
dec
int
imul
push
mov
pushf
ficompl
lcall
loope
xchg
xor
jne
jae
fcomps
sub
outsb
fcoms
lcall
addr16
add
add
test
ficomps
xchg
fisttpll
das
jae
add
aam
insl
xchg
test
push
cli
adc
push
jbe
jp
mov
and
push
mov
sbb
mov
lret
xchg
push
mul
enter
xor
cmpsb
mov
xor
push
mov
jnp
xor
xchg
pop
pusha
clc
push
inc
mov
aad
and
movsl
lcall
pop
mov
cltd
in
xchg
aaa
mov
jne
out
mov
dec
and
divl
jae
sbb
pop
in
ret
mov
fwait
test
testl
mov
push
cltd
and
or
adc
push
lret
push
pop
sub
cmpsl
call
jp
cmpsb
or
xchg
inc
fimull
mov
call
fwait
imul
mov
cld
push
pusha
movsl
cli
or
add
pop
or
pop
stc
jecxz
mov
cmp
push
inc
insb
xchg
insl
mov
stos
pushf
imul
or
add
xchg
mov
jecxz
dec
cmp
jo
in
cltd
scas
jge
or
movsb
and
int3
push
push
pop
or
pushf
repz
mov
mov
das
jge
cwtl
test
mov
lods
cmc
fdivs
inc
shlb
cmpsl
mov
lods
and
pop
cmp
jge
rolb
loope
jmp
ljmp
mov
xchg
jbe
mov
mov
adc
or
dec
iret
movsb
sub
test
jno
daa
add
insl
push
sub
scas
test
sub
movsb
fcoms
mov
add
or
dec
cld
sub
adc
cs
daa
adc
icebp
mov
insl
repz
mov
push
sbb
outsl
adc
ljmp
rol
adc
push
aad
mov
mov
cmp
jg
pop
jne
adc
xchg
pop
sahf
int3
imul
dec
adc
sub
in
jnp
adc
dec
sbb
mov
mov
mov
andl
xlat
adc
rcrb
aas
bound
or
xor
add
push
sub
push
lock
ss
testb
mov
stos
adc
push
inc
jns
dec
push
add
iret
jge
rolb
mov
push
fdivs
es
xchg
sub
xor
insl
sbb
andl
cmc
push
push
jg
das
push
jnp
hlt
add
pop
xor
sbbb
push
jmp
pop
fldt
mov
test
jp
add
xchg
mov
push
mov
loopne
fnsave
push
std
rorl
ret
sbbb
mov
cmc
mov
int3
adc
popfw
stos
push
fidivrs
bound
inc
mov
add
push
dec
mov
or
les
lock
xchg
pop
or
sub
or
inc
sub
out
push
push
cmp
sbb
xor
fs
xchg
dec
mov
and
fwait
arpl
mov
xchg
jmp
sub
ror
push
mov
addl
fwait
imul
xor
sub
nop
aad
out
lcall
xchg
pushl
shll
xor
cmpsl
cmp
out
mov
inc
mov
in
call
lahf
hlt
adc
fcomps
push
das
ficompl
add
rcrb
pop
dec
sub
cmp
ret
sub
lcall
int
dec
push
and
jne
data16
cmp
jmp
add
scas
cli
cwtl
rol
fdivrs
push
push
cli
filds
fwait
lods
lret
lock
call
sub
subl
outsb
pop
in
inc
xchg
out
dec
or
fucomp
mov
popf
mov
dec
dec
xor
sub
lret
aas
xlat
cmp
fidivrs
mov
xor
scas
shl
dec
test
aad
pop
div
ja
lods
ds
push
sub
out
jmp
mov
pop
out
push
test
into
jle
icebp
sub
cmp
xchg
testl
jo
mov
aas
add
xor
mov
outsb
xchg
stc
fcompl
sahf
loope
sahf
aaa
mov
cmp
vmwrite
loope
std
cmp
hlt
xchg
dec
cmpsl
push
mov
mov
iret
les
sbb
mov
xor
or
fcoms
cs
inc
add
ss
iret
ja
jnp
or
ret
in
adc
mov
inc
mov
nop
popa
add
push
add
adcb
mov
insb
and
jmp
push
negb
gs
rclb
and
pop
sbb
jecxz
xor
fiaddl
sbb
pop
jmp
setge
inc
and
sbb
je
mov
je
bound
lret
add
std
fistpll
aam
test
fdivl
push
or
out
imul
outsl
mov
inc
out
xlat
pop
aas
imul
and
mov
addb
pushf
mov
repz
icebp
int
daa
cmp
mov
push
sbb
and
mov
mov
pop
sbb
popa
cmp
sbb
xor
lcall
js
aam
add
push
sbb
icebp
test
mov
push
movsl
enter
inc
mov
cmc
out
lods
cmpl
dec
nop
bound
in
loop
add
roll
pusha
aad
or
jne
psubd
imul
sbb
dec
inc
arpl
iret
ret
inc
jne
out
frstor
cmc
js
push
scas
and
lret
lret
cmp
add
rcrb
mov
cli
outsb
mov
and
mov
or
pusha
jp
scas
int3
cmp
add
icebp
pop
fstl
rcl
pop
push
ret
inc
sub
cmp
xor
sbb
sahf
fidivrs
popa
mov
push
fcmovnbe
mov
pusha
test
bound
push
data16
cmpl
lret
mov
in
push
pop
push
in
xlat
pop
mov
das
fmuls
lret
dec
jge
repz
test
ja
not
ds
leave
push
addr16
sbb
fdivr
in
adc
stos
ret
gs
jle
dec
ss
inc
sti
data16
xchg
sub
cs
dec
insb
sub
lcall
mov
stos
adc
iret
pop
pop
testb
pop
negb
hlt
enter
dec
je
fdivs
ret
insb
test
test
adc
sub
cld
mov
sbb
popf
shll
or
mov
das
dec
inc
push
lock
enter
push
mov
jbe
js
aas
test
mov
cmp
scas
push
jae
xchg
add
xor
xchg
out
mov
jns
and
push
jl
je
and
lret
popf
daa
mov
sarl
push
popf
loope
test
mov
mov
jb
and
mov
sub
pop
push
or
cmp
orb
ljmp
xor
mov
lret
imul
xor
lret
outsl
and
sub
mov
mov
cwtl
push
imul
iret
mov
out
clc
out
int3
sub
fbstp
inc
jo
out
xchg
int
icebp
sbb
sbb
out
or
popf
es
push
or
add
incb
add
add
imul
out
shll
das
adc
inc
int
and
fadds
mov
fimuls
mov
arpl
and
sarb
adc
mov
xchg
dec
xchg
call
xchg
stc
lret
fnsave
or
mov
mov
aam
xchg
insb
cld
rclb
xchg
rol
inc
popf
movsl
inc
dec
lcall
adc
jbe
test
js
pop
mov
mov
and
lret
sti
pop
sahf
mov
pop
lret
dec
cmp
adc
repz
out
pusha
adc
test
sub
movsl
js
pop
int3
in
xor
mov
sbb
xor
and
lods
push
adc
aaa
hlt
dec
cltd
pop
add
xchg
xor
or
adc
xor
mov
and
out
shl
jns
pop
sbb
mov
cld
mov
xchg
scas
movsb
mov
xlat
inc
fnstenv
call
cmp
sbb
sbb
ja
xor
cwtl
hlt
movsb
and
shll
subb
or
aas
adc
xor
mov
pop
fdivr
and
addl
popa
std
out
xchg
sbb
xchg
push
mov
or
xorl
adc
shr
jns
scas
out
jne
mov
in
lcall
and
call
cld
popa
imul
push
add
sarb
jnp
es
jae
inc
out
imul
out
int3
jne
sti
xchg
pop
in
pop
and
std
mov
pop
or
scas
repz
xor
pop
sub
stos
pop
dec
fdivrs
addb
inc
or
leave
lds
rcrl
mov
out
and
inc
xor
inc
cli
call
push
lds
push
jns
add
lock
push
cmp
dec
leave
xchg
cmpsb
push
push
dec
cmp
jbe
in
mov
imul
push
outsb
mov
or
in
cltd
scas
repnz
popa
push
jle
cmc
outsb
push
or
jae
xor
mov
sub
lock
les
jge
pop
xchg
repnz
jns
jmp
lret
add
mov
sub
mov
aad
mov
out
shlb
mov
dec
xchg
pop
jl
pop
jns
int3
stc
rol
pop
xchg
push
jl
mov
sbb
adc
xchg
mov
mov
sub
mov
jno
sub
aas
hlt
adc
cmpl
adc
insl
jge
in
lcall
jno
xchg
dec
test
arpl
stos
ds
xchg
lret
es
add
stc
iret
and
sbb
mov
mov
add
adc
mov
push
mov
inc
stc
call
int
push
inc
mov
cs
mov
lock
mov
insl
insl
cmp
loope
add
mov
iret
aad
iret
inc
aad
and
mov
fucom
xor
jmp
clc
sarb
nop
out
lea
push
xchg
and
jns
push
sbb
mov
nop
pusha
nop
leave
fcoms
incl
cs
or
loope
aas
and
adc
repnz
vmovhpd
in
ljmp
jbe
fsubr
test
mov
push
bound
test
loope
add
fisubrl
mov
test
mov
pop
mov
pushf
adc
push
in
ror
mov
inc
int3
and
or
xchg
adc
mov
mov
fistps
aas
pop
inc
add
dec
sbb
fisubs
mov
bound
and
in
data16
test
cmp
lock
insb
mov
je
pop
nop
jp
push
outsb
std
cmpsb
pop
and
xchg
cmp
in
jae
negb
pop
aad
and
ret
xchg
xor
cld
jp
repnz
jmp
mov
xor
in
xlat
cmp
inc
xchg
insl
mov
loope
roll
shrl
pushf
out
div
in
aad
lcall
into
pop
adc
mov
aas
jmp
rcll
outsl
fdivp
insb
hlt
pop
cmp
call
fisubrs
bnd
outsl
push
arpl
int3
sbb
sbb
push
sbbb
daa
das
cmp
addb
xchg
aad
mov
mov
divb
lret
pop
out
dec
loopne
ret
dec
or
cmp
xchg
sahf
sbb
jne
testl
adc
inc
fdivrl
cmp
sbb
or
cmpsb
shlb
sub
pusha
pop
or
aaa
cmp
cmpsb
cmp
dec
push
sbbl
cmp
push
cmp
add
jge
sub
jg
mov
push
arpl
outsl
lods
cmp
fptan
mov
or
incl
inc
adc
lret
in
xor
lds
mov
or
mov
push
xorl
cmc
push
stos
pop
fisubs
push
aaa
lds
sub
or
jmp
fstpl
fistpl
add
jno
bound
jbe
mov
out
xlat
and
lds
addr16
test
addr16
pop
or
stos
cmp
xor
or
test
fildll
subb
mov
ret
push
inc
sub
enter
push
cld
inc
notb
jne
add
or
jbe
xor
cltd
lcall
cwtl
add
jl
xor
xchg
adc
xor
fdivrl
inc
pop
lcall
out
repnz
mov
shl
mov
add
daa
adc
cli
or
pusha
jbe
mov
test
dec
lods
pop
cmpsb
psllq
rorb
aam
fbld
mov
flds
pop
mov
addr16
xor
movsb
ss
sbb
lods
ss
xchg
in
in
add
dec
notb
xchg
or
outsl
subl
push
clc
imul
addl
pop
xlat
test
test
lods
cmp
loopne
push
fidivl
popf
mov
jbe
xor
and
xor
mov
mov
out
push
aad
mov
and
or
xor
scas
push
fs
testb
das
xor
loopne
aam
iret
loope
jb
ja
leave
icebp
test
pop
inc
mov
or
jmp
aas
neg
lods
mov
mov
in
sbb
pop
aad
les
or
cmpsb
sbb
sarb
ret
add
sbb
mov
das
mov
mov
mov
pop
cltd
lret
sbb
or
jne
stc
in
cmp
outsl
test
push
xchg
or
aad
pop
mov
xchg
cli
sub
pop
rclb
aam
cmp
xchg
pop
mov
daa
repz
repz
cmpsl
jno
fistl
jnp
jae
and
and
lods
fidivrs
cwtl
mov
and
sub
dec
cli
rcrb
xchg
cmpsb
lods
lds
gs
pop
jae
aas
add
xchg
adc
repnz
adc
inc
mov
sbbb
cwtl
sbb
adc
ljmp
mov
mov
push
mov
push
mov
pop
or
xchg
sahf
xchg
test
jbe
enter
shll
add
add
xchg
or
shrl
push
inc
in
cmp
or
lds
incl
jp
pusha
sub
pop
or
pusha
fcoms
adc
adc
cmp
cmpsl
dec
test
cwtl
in
xor
dec
mov
outsb
lret
dec
inc
rorb
clc
outsb
fcmovnbe
xchg
xor
loop
mov
mov
mov
mov
pop
sti
xchg
lods
and
push
cmp
jp
sbb
xchg
inc
adc
es
bound
pusha
inc
outsb
mov
jo
lock
js
jle
or
mov
and
lret
cmpsb
gs
ljmp
xor
push
cmp
push
mov
inc
test
xor
das
sahf
dec
jecxz
xchg
cld
mov
ja
test
pop
inc
dec
cmpsb
sub
rorb
push
daa
cmpsb
push
mov
test
or
push
incl
jno
xor
outsl
jne
imul
and
adc
xchg
je
jae
xchg
adc
je
dec
push
out
out
mov
fistl
fdivs
and
inc
jae
aam
push
xchg
sub
jecxz
and
cmp
lea
jo
cs
xchg
inc
mov
dec
inc
pop
aam
fldl
test
adc
or
sarb
lahf
pop
cmp
add
cmp
stc
jl
pop
popa
icebp
adc
jle
iret
idivb
dec
xchg
or
arpl
add
mov
xlat
mov
loope
xchg
xchg
xorb
jge
fsubrs
test
adc
out
int3
ss
dec
lret
adc
inc
dec
add
aad
in
cmp
jns
in
or
arpl
aam
in
xor
outsl
gs
jge
nop
dec
imul
add
mov
sub
imul
sbb
push
push
out
jo
xchg
test
sbb
cmp
xor
push
inc
gs
xchg
adc
sub
mov
sbb
rorl
les
test
ds
or
cmpsb
dec
aas
pop
xor
inc
xchg
push
cmpsb
sarb
sbb
jl
fsts
cltd
ss
sbbl
or
jb
iret
xchg
sub
xor
adc
adc
pop
xchg
rolb
std
xor
push
cmpsl
cmp
inc
or
or
pop
mov
sbb
stc
cmpsb
cmp
inc
movb
and
mov
aam
inc
cmp
stos
orl
push
out
xor
addr16
clc
shrb
sti
shll
push
add
movsb
sub
push
mov
dec
movsl
add
cld
and
sahf
xor
fdivr
int
lcall
pop
out
imul
xchg
mov
push
dec
dec
ret
push
arpl
daa
mov
js
sub
cmpsl
test
dec
adc
nop
mov
call
shrl
aam
shrl
mov
mov
add
lahf
dec
adc
or
add
cmpb
inc
lea
cwtl
jge
jle
xchg
mov
loop
repnz
or
cltd
xlat
xor
jnp
inc
adc
aam
testb
add
mov
add
sbb
jg
loopne
fadds
push
and
inc
lcall
pop
sub
dec
inc
enter
push
mov
aas
push
adc
add
mov
jbe
xor
xlat
das
sub
push
lahf
add
out
dec
movsl
rdmsr
and
div
scas
pop
cmc
xor
push
fistpl
cmp
mov
call
outsb
nop
cld
and
popa
out
jg
cs
aam
pusha
sbb
addb
pusha
pop
xor
dec
lods
adc
repz
jae
adc
out
jle
es
cmp
dec
pop
mov
clc
pop
into
jge
inc
jl
addr16
mov
cmp
and
push
aam
orb
enter
scas
fadd
in
ror
push
and
mov
lea
test
test
shlb
cmp
mov
insb
cmp
test
and
cmpsl
mov
sahf
stc
cs
pop
jne
mov
mov
push
cmpsb
inc
cmp
jb
sbbb
jne
sarb
cmp
loopne
movsb
mov
and
out
pop
push
sbb
inc
dec
jns
cmp
jecxz
leave
lahf
leave
pop
and
sub
push
jmp
sbb
mov
add
fists
enter
scas
push
mov
xchg
les
jp
lock
ds
clc
xchg
iret
bound
dec
jle
or
flds
mov
adc
mov
cmp
fs
and
pop
out
cmp
sbb
aaa
cmp
xchg
jo
daa
fwait
sbb
jmp
ljmp
or
push
dec
mov
imul
xor
add
divl
nop
loope
andl
addb
popa
out
adc
addr16
stos
adc
and
push
test
cmp
adc
iret
cmc
adc
mov
int3
mov
and
fs
adc
je
push
int
into
loop
mov
aam
xchg
jg
mov
sti
shlb
mov
ljmp
inc
int
push
mov
mov
cld
inc
in
xchg
inc
add
sbb
loope
sub
mov
xchg
aaa
pop
cli
bnd
scas
xchg
sbb
mov
sub
inc
sub
jne
mov
cmpsb
push
or
dec
shll
lods
movsb
fxch
jmp
sbb
lods
mov
movsl
incl
jo
nop
lcall
loop
insb
sub
aaa
daa
mov
jge
sbb
push
xor
stos
and
les
shll
hlt
sbb
mov
ds
ds
sub
in
in
incl
mov
mov
adc
ljmp
push
aad
push
mov
mov
lret
xchg
fs
rol
mov
xor
sti
fsub
roll
pop
jb
and
jg
aas
scas
mov
rolb
aas
pop
stc
dec
outsb
jl
pop
xor
popa
aaa
cmp
mov
test
mov
icebp
jo
xchg
pushf
das
fsubl
call
cmp
push
ret
icebp
adc
jo
outsl
std
push
mov
pop
ljmp
push
lock
movsb
mov
cmp
movsb
dec
add
stos
pop
mov
out
adc
ret
mov
add
pop
aad
ss
pushf
sub
pop
sarl
jp
dec
or
lea
dec
xchg
ret
ret
dec
mov
jno
mov
loopnew
jecxz
test
mov
push
push
stos
sahf
and
lock
and
and
jecxz
ficompl
popf
pop
insl
pusha
scas
arpl
js
in
outsb
ja
dec
xchg
stc
and
cltd
adc
loop
dec
inc
cltd
fwait
sbb
pop
loopne
cld
mov
bound
pop
push
adc
stos
pop
idivb
mov
push
movsb
dec
lock
lret
repz
push
and
adc
pop
leave
pop
adc
dec
cmp
std
arpl
out
fimull
mov
ss
outsl
mov
imul
dec
pop
sub
shr
push
movsl
mov
and
pop
mov
adc
mov
mov
push
icebp
out
aaa
fsubl
push
ja
xor
cmp
cmp
xchg
stos
adcl
aaa
or
inc
or
cmc
sbb
stc
add
cmpb
rol
jmp
lods
test
mov
sti
cli
cmpsb
rclb
cmp
iret
mov
stos
mov
lea
xchg
lods
push
lods
dec
dec
cli
and
jmp
shlb
sbb
fiaddl
test
jb
xchg
dec
dec
je
sub
outsl
xchg
cwtl
sbb
sahf
cmp
sbb
pop
das
mov
or
dec
and
inc
mov
lds
dec
push
idivb
iret
lret
sbb
adc
dec
icebp
cmp
pop
clc
call
xor
mov
mov
insb
sbb
xchg
sbb
dec
sub
or
xchg
or
stos
ficoml
fisttpll
dec
loope
xchg
mov
jecxz
dec
mov
je
add
aam
jns
popa
inc
popf
sub
dec
fstpt
dec
bound
outsb
adc
std
and
add
in
jge
dec
xor
pop
lods
outsl
aam
cmp
xor
lahf
mov
xchg
adc
lds
je
push
add
ret
sbb
add
hlt
jb
or
leave
dec
mov
push
cmpsb
fistl
pop
xchg
sub
js
and
test
add
xor
pusha
add
or
adc
jp
push
jo
dec
ret
insb
adc
jle
cmp
lret
cmp
and
mov
insb
xchg
cmp
aam
or
adcl
dec
sbb
adc
out
insb
stos
js
xlat
adc
cmp
mov
dec
les
mov
inc
fwait
cmpsl
hlt
lret
pop
aas
adc
cmpsb
aaa
scas
and
mov
js
push
xchg
add
pop
leave
stc
push
or
dec
dec
aaa
sub
pop
in
mov
decb
pop
xchg
add
in
xchg
sbb
outsb
pop
stc
sub
das
cli
adc
cs
cld
xchg
mov
or
imul
js
out
lock
aam
cmp
pop
icebp
sbb
mov
or
inc
sbb
jbe
sbb
pop
lea
mov
clc
incb
mov
xlat
adc
lcall
bound
fisubrs
outsb
sub
mov
in
mov
adc
mov
adc
addr16
arpl
shll
call
cmpsl
xor
lods
lret
and
mov
cmp
adc
paddusb
popf
add
pop
rorl
cwtl
push
dec
repz
movsl
mov
data16
cmp
sbbl
cmpb
aaa
nop
or
xchg
ja
and
pop
fdivrl
out
test
aam
xchg
movsl
jmp
adc
xchg
add
push
jmp
pop
xchg
adc
call
xchg
inc
mov
jo
inc
aad
icebp
mov
mov
out
scas
pop
add
cltd
popl
shlb
adcl
js
jbe
inc
adc
lret
pop
jo
xlat
mov
lret
loop
mov
mov
inc
in
out
dec
into
push
insb
bound
pop
in
pop
in
cmpsl
inc
or
mov
repnz
xchg
icebp
pop
sbbl
lods
test
out
aas
dec
lahf
push
loope
lret
add
add
imul
push
cld
jg
jp
hlt
je
js
push
mov
sbb
gs
dec
out
shll
pusha
add
shll
cmpsb
pop
mov
add
xor
aas
inc
xor
aaa
mov
fwait
add
mov
sub
arpl
shl
lret
mov
push
stos
pop
mulb
jnp
mov
lret
pop
pop
push
cmp
jae
push
inc
cmp
push
and
sub
jno
sub
ret
mov
aam
insl
jno
jp
daa
jp
dec
frstor
adc
shl
cs
xchg
and
and
dec
bound
scas
leave
stos
shrb
fistps
int
push
push
aas
push
cmp
sub
in
sbb
dec
mov
lea
imul
and
xor
lock
and
pop
sti
sbb
mov
xchg
dec
jmp
sbb
shl
popa
lahf
iret
loop
sub
mov
jecxz
outsb
mov
jl
push
shlb
aas
cmp
jg
movsb
pop
mov
and
lock
or
jbe
or
aam
loope
cmp
jb
clc
test
push
sub
inc
dec
sub
mulb
and
mov
data16
inc
mov
sub
fstpl
popf
aad
and
mov
push
pop
fcomps
push
pop
addl
cmp
mov
pandn
add
add
lret
hlt
mov
sahf
jge
cmp
shr
pop
cmc
fisttpll
sbb
sbb
or
push
xchg
dec
fimull
add
test
xchg
inc
xchg
out
xchg
int3
bound
jbe
mov
movsl
sub
rorb
or
push
inc
sub
sub
ja
jbe
negb
mov
cmp
test
fwait
shrb
mov
push
dec
shr
ja
xor
sbb
adc
call
sar
adc
jmp
cmc
cld
add
xor
cltd
cmp
pushw
inc
or
hlt
pop
loopne
jmp
repnz
in
mov
lcall
add
mov
mov
cli
arpl
add
loop
dec
jbe
dec
aad
jp
fbstp
insl
movsl
jmp
imul
push
cmp
fnstcw
hlt
gs
mov
xchg
mov
std
lret
and
and
and
leave
xlat
push
in
xchg
enter
sahf
bound
arpl
je
pushf
bound
push
xor
sarb
dec
push
popl
or
sub
mov
insl
adc
mov
lods
je
mov
mov
mov
gs
pop
ds
jmp
sbb
fiaddl
push
icebp
xlat
into
pop
repz
jecxz
adc
add
test
mov
mov
adc
lret
xorb
je
add
mov
out
mov
sbb
mov
hlt
das
in
ja
loop
push
and
pop
mov
or
icebp
test
xchg
cli
test
mov
xchg
pop
pop
pusha
inc
cli
gs
aaa
mov
test
enter
jns
jne
iret
jno
jns
sub
or
popf
or
and
xchg
mov
inc
rcrl
push
mov
cmpsl
fcomip
dec
movsl
subl
lods
and
aad
jg
repz
inc
xchg
lock
test
rol
out
ret
fdivr
or
cmp
xor
data16
jecxz
jecxz
repnz
into
cli
mov
cltd
mov
jg
dec
out
stos
mov
push
mov
pop
fucomp
lret
sub
mov
fstps
enter
repnz
ficoms
sub
dec
sub
dec
clc
je
fldcw
push
mov
test
push
loopne
flds
je
adc
ret
shll
mov
adc
loopne
loop
dec
les
jns
lret
sub
or
dec
imul
hlt
test
pop
push
fcmovne
and
push
mov
inc
xor
cs
cmpsb
repnz
addr16
neg
dec
ja
pop
adc
mov
fistpll
xlat
add
mov
scas
xor
sub
jnp
scas
add
mov
dec
mov
push
jg
fiadds
out
imul
inc
lea
int
push
mov
shrb
mov
jp
and
lds
jb
inc
mov
aam
lock
sbb
xlat
and
inc
in
or
adc
adc
ret
rol
xchg
icebp
gs
adc
pop
iret
addr16
out
sbb
jo
ljmp
loop
hlt
sti
push
dec
adc
or
push
outsl
sub
ficompl
push
push
cmc
test
jg
sbb
adcl
pop
push
fsts
push
rcrb
fistps
negb
sbb
cmp
aaa
jmp
add
xchg
push
jl
cmp
jl
adc
cmp
leave
cmpb
adc
dec
shl
test
add
mov
out
pushf
ljmp
push
fisttps
imul
push
mov
pop
push
fldl
jno
lret
dec
jae
jle
ljmp
incb
inc
icebp
pushf
cmp
xchg
and
mov
jae
out
insl
dec
sahf
imul
stos
insb
jno
inc
sbb
fidivrl
pop
pushf
into
cwtl
mov
jg
push
sti
mov
mov
enter
popa
enter
push
movsl
jmp
mov
xchg
loop
fisttpl
lcall
push
rol
ficoml
arpl
scas
add
xchg
cltd
gs
and
pop
cs
sahf
mov
pop
pop
adc
jmp
xchg
mov
sahf
jle
out
jecxz
sub
mov
push
insl
xchg
out
and
mov
xchg
aam
sub
adc
in
xor
sub
xor
adc
sbb
and
add
dec
cmpsl
ror
add
sbb
ja
inc
arpl
sahf
rcrb
cmp
jne
inc
out
loopne
out
outsb
addr16
and
sahf
and
jmp
sbb
adc
inc
sub
sub
fidivs
imul
or
cmp
mov
mov
sub
cmpsb
mov
icebp
sub
or
mov
mov
cli
pop
lea
or
es
jae
testb
dec
mov
xchg
lods
add
rolb
arpl
out
push
sub
adc
inc
push
sbb
xor
add
pop
leave
or
nop
leave
gs
icebp
inc
adc
pop
daa
daa
lret
enter
loope
xchg
cmp
lock
fldenv
daa
dec
in
arpl
cmp
push
xor
popa
mov
sub
lcall
adc
cmp
mov
inc
loopne
xchg
imul
jl
iret
jmp
and
xchg
sarl
fwait
int3
ja
sarb
mov
mov
cwtl
xor
fsubp
je
sbb
mov
cmp
xchg
pop
jo
sarl
andb
fadd
sbb
cmp
movsb
pop
cmp
popa
repnz
dec
xchg
xchg
lods
xchg
dec
mov
xchg
lahf
sub
add
out
setg
lea
rcl
mov
push
add
lret
loop
cmp
adc
jno
adc
xchg
adcl
popf
pop
pop
notb
sarb
addl
pop
sbb
sahf
orb
pop
outsb
and
cwtl
ret
jne
sbb
movsb
outsb
popf
jae
xchg
dec
adcl
ljmp
mov
sbb
push
repnz
aad
sahf
leave
xor
sbb
subb
test
add
test
sub
es
jl
imul
cmp
add
loopne
cmp
lret
and
cmp
and
adc
pop
lock
fs
aad
push
cmp
mov
and
mov
pop
jge
jno
int
movsb
sub
cs
pop
imul
xchg
out
lcall
in
fbld
ja
in
inc
or
jno
mov
sbb
push
int
sbb
aam
adc
jo
imul
in
les
xchg
out
dec
daa
sbb
adc
sub
in
add
test
sbbl
inc
jnp
sbb
xor
fwait
rorl
fisubl
loopne
sbb
dec
fildl
push
xlat
fidivrs
inc
cmc
mov
lret
in
lret
inc
in
int3
jp
lea
ja
push
in
fs
pop
stos
daa
and
push
adc
int3
sub
sar
lcall
sahf
aad
dec
ja
or
aas
cmp
xchg
lds
aad
out
mov
lds
xor
test
jo
rcrb
or
mov
sub
pmaxsw
aam
je
and
neg
jnp
push
in
loope
jne
lret
or
test
pop
xchg
pop
shlb
js
push
fisubrl
mov
cmpsl
dec
scas
mov
adc
fbld
adc
and
daa
dec
icebp
cmp
sbb
jecxz
push
cmp
inc
push
cmc
mov
jg
cmpsl
sti
lds
stc
jbe
shrl
mov
mov
xchg
push
jmp
sarl
stos
sub
mov
cmp
sti
and
lret
pop
pop
xlat
and
bound
push
xor
mov
adc
ss
inc
movsl
ja
nop
sti
sbb
call
negb
arpl
xor
pusha
ret
out
adc
xchg
xor
in
movsl
pushf
lea
mov
mov
test
flds
data16
in
rclb
mov
inc
mov
mov
xchg
mov
int
mulb
mov
loope
or
mov
lcall
cmp
aad
push
sbb
or
pop
push
xor
xor
pop
test
in
sub
gs
or
sub
and
addr16
loope
out
dec
or
test
cmp
sahf
in
test
mov
out
cltd
mov
pop
aad
mov
inc
loopne
fnstcw
cmp
mov
xchg
insb
and
jo
push
lds
mov
aaa
rol
gs
mov
sahf
out
sbb
mov
mov
lea
xchg
jg
jle
loop
or
insl
adc
es
lahf
xlat
and
mov
adc
in
scas
in
jo
fisttps
mov
pop
and
mov
cmp
das
fldt
cmc
leave
daa
mov
not
stos
push
adc
pop
pop
xlat
mov
cmc
fidivrl
fnsave
hlt
addr16
js
inc
and
cmpsb
scas
repz
pop
lock
loope
sub
jp
xor
xchg
add
imulb
jns
icebp
jl
sarb
mov
add
push
mov
pop
fiaddl
aaa
mov
cld
lock
repz
jle
cmp
fistl
push
loope
mov
sub
cltd
roll
test
inc
or
mov
les
sub
loopne
incl
pop
xlat
push
addl
fmull
aaa
mov
fwait
shlb
jp
push
and
hlt
push
mov
add
in
push
jne
or
les
add
out
mov
mov
insb
leave
inc
xlat
mov
mov
mov
es
sub
movsb
sahf
rclb
outsl
ficoml
and
or
idiv
iret
ret
imul
es
fsubs
and
xchg
insl
aad
sbb
and
test
imul
mov
or
sbb
jge
cmp
insl
mov
cmpsb
sbb
dec
stc
inc
int
sub
loope
insl
and
out
jp
insl
push
insl
mov
stos
or
sbb
mov
sub
mov
ljmp
cld
and
mov
mov
loop
pop
neg
mov
mov
xor
or
or
xchg
out
and
std
jmp
mov
mov
out
cmp
mov
in
dec
mov
and
sbb
xchg
lret
jb
and
stc
xchg
mov
or
sarb
aaa
cmpsl
out
cmp
xorl
aaa
jecxz
movsl
sub
pushf
insl
pusha
fs
scas
adc
in
push
imul
xchg
mov
mov
enter
xchg
add
sub
fsts
stos
idiv
mov
popa
mov
jmp
dec
adcl
pop
mov
sbb
cld
inc
add
inc
out
xor
pop
fwait
jl
jge
jg
fwait
clc
in
aas
stos
sub
repz
jl
aad
mov
int
mov
enter
mov
sbbb
adc
inc
or
pop
mov
gs
les
pop
push
pop
mov
jp
cld
add
rcll
push
adc
add
sub
jns
cmc
and
push
test
aad
pusha
lcall
ret
add
mov
scas
pop
jle
pop
rcl
xchg
outsb
xor
adc
and
test
pop
stos
mov
mov
jb
inc
mov
cmp
xchg
filds
cmp
movsl
cmpsl
sub
dec
ret
sub
js
mov
pop
popa
jle
push
test
cwtl
fisubrl
cmp
lds
stos
and
iret
lods
lds
dec
shll
stos
das
cmp
push
popa
es
jns
in
jnp
sub
mov
cwtl
cli
push
mov
adc
out
dec
lcall
cs
mov
sbb
fwait
jae
idivb
mov
and
stos
out
mov
out
lret
sahf
gs
jne
mov
test
dec
sub
sahf
and
pop
scas
out
lods
jae
mov
mov
or
out
test
or
fidivrs
xor
mov
cmp
addb
sahf
cmc
add
mov
les
dec
dec
dec
and
ds
mov
lret
lods
cltd
insb
sti
hlt
nop
adc
mov
xchg
push
mov
mov
pusha
lahf
adc
not
push
fwait
push
dec
ret
mov
sti
sbb
insb
or
mov
adc
cwtl
pop
fucomip
enter
shr
fidivrl
inc
test
xor
stos
js
add
repnz
stos
push
push
es
outsb
cmp
dec
cmp
jmp
cmpsl
xor
movsb
movb
xchg
jno
sbb
clc
adc
adc
cmp
dec
jge
and
das
cmp
mov
rolb
xchg
lahf
mov
cmpsb
mov
jp
push
mov
ficoms
daa
imul
jle
mov
mov
incl
push
xorl
fdivl
cld
dec
push
lock
enter
sbb
mov
fmulp
call
mov
daa
cltd
in
adc
out
or
aad
pop
push
loopne
aam
lahf
ljmp
fsin
jp
pop
jb
mov
pop
arpl
dec
xor
insl
mov
mov
jle
mov
ss
jnp
shll
mov
and
cmp
pop
xchg
ljmp
cmp
pop
roll
daa
mov
loope
call
cwtl
imul
fidivl
pushf
xchg
loopne
xor
mov
fadds
fwait
ss
stos
dec
mov
sub
and
jb
pop
jge
cli
cltd
jo
add
pop
xor
jp
nop
aam
lods
out
mov
lea
bound
pop
insb
nop
andb
and
jno
adc
jl
jbe
pop
bound
pop
xchg
mov
fiaddl
jae
pop
push
fistpll
xor
xchg
mov
inc
mov
add
call
xor
cli
mov
test
cmp
shll
clc
stos
adc
pop
mov
pop
pop
test
xchg
in
mov
lods
xor
repz
jecxz
add
nop
shrb
cltd
jns
jge
rol
mov
addr16
ljmp
aad
xchg
cmp
add
aad
dec
pop
jae
int
inc
push
ficoml
sub
sub
mov
and
ret
xchg
fs
jp
shlb
shrl
icebp
sub
or
scas
outsb
shlb
jg
pop
pcmpeqw
and
fldl
dec
int
test
cwtl
dec
pop
cwtl
leave
inc
jae
mov
movsb
pop
sub
sbb
add
mov
addr16
sub
cmpsl
insb
popa
es
mov
and
stc
das
shlb
cmp
jl
xlat
stos
sbbb
mov
jnp
ret
mov
aam
adc
loop
jecxz
or
enter
or
arpl
aaa
enter
push
mov
jmp
sub
sbb
inc
xor
mov
inc
lods
jbe
cmp
es
push
push
es
jp
fisttpll
mov
mov
rclb
call
pushf
push
mov
xchg
dec
push
xchg
xor
rcrb
out
hlt
aaa
insb
or
mov
scas
xchg
sbb
fld
sti
sbb
xlat
mov
js
cld
sbb
xchg
jle
pop
icebp
addr16
insb
xor
es
das
mov
adc
cmp
mov
sti
or
xchg
mov
xchg
xor
pop
dec
push
pop
dec
lret
scas
gs
pushf
inc
vmovdqa
pushl
enter
fdivrs
jl
push
sbb
cltd
out
hlt
xchg
mov
popf
cmp
imul
push
xchg
and
rcr
dec
push
or
and
dec
adc
popa
push
je
clc
and
shll
mov
into
mov
xchg
cmpsb
dec
lock
stos
sub
and
jno
fisubrl
divl
mov
rcrb
repnz
hlt
nop
daa
mov
daa
arpl
xchg
mov
add
pop
cmp
fistl
popl
or
icebp
and
je
out
outsl
sub
sbb
push
int
out
addb
loope
js
repnz
mov
in
xchg
gs
stc
cmc
or
and
cmpsb
lret
sahf
rcr
je
xor
sub
adc
mov
add
pop
lcall
int
push
jecxz
pop
fwait
add
xchg
shlb
stos
cmp
jge
ds
pop
sbb
test
adcb
cmc
mov
jnp
jne
xchg
sub
dec
ss
lret
iret
adc
inc
xchg
out
fimuls
fcmove
push
push
imul
fists
cmp
xor
push
shlb
jp
in
shlb
jecxz
push
test
lds
or
jne
pop
mov
or
dec
enter
push
rorl
jp
idiv
shll
test
lea
mov
add
lahf
xchg
xchg
or
inc
ret
xchg
sub
pop
and
mov
mov
cmp
mov
mov
sbb
adc
inc
pusha
addl
or
popa
call
xchg
pop
xor
push
cmp
fprem
loop
xor
cmp
stos
gs
jne
outsl
inc
das
dec
int3
add
into
sbb
pop
arpl
orl
jbe
lock
movsb
imul
arpl
mov
adc
mov
shl
testb
out
inc
pop
cmpsl
mov
xor
adc
aas
lahf
pushf
add
jmp
dec
lea
and
mov
fisttpl
push
ljmp
ljmp
add
in
xchg
daa
mov
or
pop
sbb
xor
sbb
test
adc
sub
push
jno
stc
xchg
inc
fwait
call
stc
lock
jecxz
jle
fnstsw
sbb
ror
lds
jo
or
into
inc
push
fmull
jmp
imul
jae
mov
and
repnz
clc
add
call
jne
and
cmp
outsb
cmpsb
sbb
in
shrl
mov
rol
sub
pop
mov
mov
dec
icebp
jmp
into
push
jp
add
xchg
xchg
call
pushf
call
lods
mov
icebp
sub
add
jne
mov
lahf
mov
cli
jns
jbe
fmul
call
ret
iret
jmp
mov
mov
jae
imul
xchg
ror
outsl
inc
bound
xchg
mov
inc
mov
cmp
clc
test
xor
mov
lock
pop
mov
mov
jno
dec
stc
pop
adc
jecxz
aad
dec
push
cmpsb
lea
mov
enter
or
loopne
aaa
iret
int3
jg
test
and
push
jp
inc
roll
push
icebp
mov
cmc
movsb
fidivrs
push
insl
nop
xchg
pop
popf
in
test
lods
sbb
push
movsl
mov
stc
frstor
mov
loop
test
ret
sbb
stos
addr16
xbegin
mulb
lcall
cmp
xchg
int3
pop
pop
mov
add
or
dec
lret
out
or
test
out
jmp
pusha
jecxz
rcll
sbb
jno
test
loop
xchg
lahf
sbbl
pop
loope
push
lods
push
mov
int
mov
js
leave
pop
es
and
mov
pushf
lods
das
jns
lods
mov
jl
leave
pop
xchg
dec
testb
mov
push
sbb
cmp
fidivrl
adc
xchg
dec
xchg
xchg
add
mov
inc
cmp
sbb
push
sub
adc
scas
nop
jne
fldenv
mov
pop
movsb
sub
out
jecxz
sarl
fs
stos
sub
je
lds
lods
push
mov
xor
aas
pop
jl
pop
pop
jno
mov
adc
dec
mov
into
xor
or
adc
insb
or
mov
loopw
lret
pop
mov
xchg
dec
inc
test
int
push
das
rcrb
cltd
mov
xor
jg
lahf
xchg
clc
sub
jmp
cld
scas
xor
lods
mov
aad
mov
stos
adc
pushf
or
jecxz
inc
cli
pop
imull
and
jmp
hlt
push
xchg
jle
or
out
pop
mov
clc
imul
sub
sbb
mov
push
cmpsb
jle
mov
cmc
int
jno
pop
fldl
addr16
jns
jp
es
lret
jmp
mov
cmp
pushf
mov
std
in
sti
leave
inc
dec
jecxz
xor
outsb
lock
push
push
sarb
jo
ror
pop
lods
or
dec
inc
mov
in
xor
pop
mov
movb
popa
adc
sbb
add
pop
sub
ret
add
setne
ficoms
dec
and
fsub
xor
xchg
adc
cltd
sub
fstps
mov
notl
sbb
cltd
xor
lods
enter
inc
sbb
dec
insb
jmp
bound
jo
fstp
ds
dec
or
jg
xchg
in
jecxz
pop
cmpl
lret
jg
pop
pusha
inc
orb
shl
test
pop
dec
jp
fcmovu
lea
stc
mov
test
addl
lds
jmp
shll
cwtl
jae
xlat
repnz
mov
adc
aas
jecxz
sbb
mov
push
shl
push
xor
int3
pop
push
rcrb
inc
cmc
push
clc
sbb
add
jp
adc
adcl
pop
pcmpeqb
dec
pop
mov
pop
xor
sub
neg
push
outsl
add
movsl
push
in
test
inc
and
cmp
and
cmp
cmp
aad
int
mov
rclb
outsb
xchg
push
xor
mov
fdivr
mov
pusha
jbe
cmp
xlat
mov
loop
add
in
cmpb
hlt
push
loope
fwait
cmpsb
addr16
std
sahf
adc
loope
addr16
jp
jo
pushf
push
add
dec
aas
jmp
outsl
pop
and
loop
push
lcall
cmpsb
xchg
mov
repnz
mov
xchg
shlb
jo
leave
aaa
dec
inc
xchg
ja
jo
test
lcall
pop
sarb
mov
mov
dec
cmc
pop
imul
pusha
daa
xchg
shll
and
imul
inc
idivl
aam
subb
adc
inc
inc
cltd
in
mov
sub
in
leave
sbb
cmp
push
int
sbb
adc
sbb
mov
in
lahf
mov
xor
popf
ljmp
jns
rcl
push
test
jns
es
jo
add
xor
std
add
mov
loop
xor
sahf
dec
cs
mov
pusha
cmp
dec
add
std
icebp
xchg
scas
loope
fcoms
or
setl
scas
test
push
orl
and
mov
and
adc
test
inc
sbb
ret
popa
je
rcll
jo
xor
or
inc
or
cmp
adc
xorb
sub
sbbl
je
daa
std
fcoml
out
adc
popa
push
sub
lcall
dec
fs
cmp
dec
jmp
fcoml
cmc
sti
add
bound
out
jmp
jg
cmp
push
cltd
cltd
jg
push
dec
ficoms
push
jecxz
add
ljmpw
cmp
out
xchg
cmp
adc
mov
call
add
jg
inc
stos
adc
inc
ret
dec
gs
lahf
jecxz
add
gs
inc
jo
jge
daa
into
in
aad
xor
mov
xchg
adc
lcall
xor
cli
add
pop
shr
xor
ret
push
cli
adc
cmp
mov
rolb
mov
jmp
arpl
insl
dec
push
bound
sub
imul
scas
fildl
push
lret
scas
loope
jl
inc
jb
lahf
pop
mov
mov
xchg
xlat
imul
into
fdivrp
push
mov
int
push
jle
lahf
bound
lcall
out
push
jle
int3
add
movsb
fisubs
push
dec
cmp
insb
xor
repz
inc
fdivl
shlb
into
icebp
loopne
popf
lock
mov
sub
outsl
lock
roll
add
push
pop
sbb
aas
adc
enter
inc
loopne
add
lret
loopne
mov
lea
dec
jo
les
cltd
js
fimuls
or
mov
frstor
pop
jge
out
or
in
mov
push
sub
dec
ja
add
das
adc
fldenv
cmp
mov
mov
pop
xor
sbb
btcl
push
mov
mov
lret
ja
pop
ret
xchg
movsl
xchg
js
lods
fiadds
loopne
lds
cmp
xor
fisttpl
incb
xchg
cmp
push
mov
aad
shll
sub
push
inc
sub
lock
in
jle
pop
fnstcw
and
pop
mov
push
jg
hlt
jae
adc
mov
mov
loope
dec
stos
push
sub
notb
loope
mov
mov
ds
loopne
fbld
mov
orl
jp
filds
sub
cmp
cltd
sub
nop
frstor
cmp
fisubrl
addl
ljmp
xchg
shlb
inc
enter
add
cmp
sub
andb
lea
fistpl
push
push
lret
dec
mov
int3
pusha
or
cmp
mov
insl
addr16
pop
inc
out
pop
stos
inc
cmp
out
icebp
xor
jl
sarl
aas
cmp
xchg
lahf
lods
xor
divl
adc
fcoml
call
adc
fcoml
arpl
stc
mov
sub
icebp
nop
cmp
xlat
call
sbb
cld
push
sub
dec
scas
xchg
hlt
cs
sahf
jo
xor
lahf
inc
into
bound
and
int
int
cmp
std
int
loope
push
movsb
mov
fildl
enter
or
push
sub
test
cmc
push
arpl
pop
rcrl
push
sub
cmp
xor
add
mov
inc
js
lock
popa
fdivp
movsb
dec
mov
test
lahf
stos
dec
aam
mov
test
movsl
adc
call
mov
call
cwtl
xor
push
add
arpl
mov
data16
mov
cmp
pop
into
mov
and
inc
adc
int
cli
lret
das
das
jae
testb
dec
push
jbe
adc
cld
iret
lcall
leave
arpl
inc
cli
aam
popl
sub
mov
popf
mov
mov
mov
repz
je
test
xor
mov
xlat
push
lods
and
jmp
inc
mov
sbb
mov
imul
sti
test
xor
sbb
jg
adcb
xchg
dec
lock
pop
je
orb
inc
xchg
es
out
int3
mov
jae
push
out
std
cmp
sbb
addr16
xor
dec
and
jmp
push
add
aaa
ret
shll
stos
scas
sub
adc
fsubl
pop
add
mov
mov
fisttpll
xor
pusha
inc
and
in
imul
sbb
xchg
jne
xchg
push
les
jg
jae
negb
clc
frstor
xor
add
lret
inc
sub
fsubl
push
sub
mov
xchg
popf
aaa
mov
shlb
popl
sbb
mov
mov
inc
or
mov
pop
hlt
lret
decl
add
or
sbb
inc
inc
rclb
cwtl
xor
outsl
xor
in
and
jecxz
sbb
lret
xchg
mov
inc
xchg
daa
jns
daa
cmpsl
pop
sbb
dec
jg
adc
shll
int
in
incl
daa
sarl
dec
adc
inc
cmp
push
cmpsb
pcmpeqw
fs
and
clc
fists
sub
out
out
arpl
sbb
jmp
add
outsb
cmp
inc
cli
push
roll
jns
loopne
pop
addr16
popf
out
jb
and
mov
mov
int3
sbb
lret
jl
add
and
mov
sbb
fisubrs
xchg
sbb
test
test
or
jnp
jmp
xor
xor
cmp
call
fstps
mov
dec
xchg
xor
repz
pop
pop
or
adc
sti
ja
add
aaa
insb
lret
push
and
out
arpl
cmpsl
dec
cmp
imul
adc
mov
popf
int
add
pop
mov
aas
sub
int3
xchg
xchg
int
sub
and
adc
scas
and
inc
sahf
cld
adc
loopne
jnp
nop
fildl
add
xchg
mov
jg
mov
enter
xor
inc
xor
xor
adc
sub
inc
fwait
push
leave
fcoml
dec
push
nop
outsb
inc
jge
into
flds
mov
stc
xchg
sbbb
mov
aad
mov
jle
pop
push
sub
xchg
jae
cmc
sbb
movsb
orl
das
and
jno
inc
xchg
xor
inc
pop
xor
xchg
cmpsl
in
out
cld
repnz
xchg
jno
das
xchg
divb
fdivp
xchg
mov
add
movsb
das
movsb
pop
mov
shl
cmp
test
subl
or
sub
xchg
es
mov
imul
rcrl
mov
push
lds
mov
mov
mov
in
mov
popf
sahf
pushf
dec
add
xor
lods
pop
xchg
arpl
mov
movsb
xchg
mov
aad
sub
cmp
out
cmp
xor
xchg
inc
outsl
into
sbb
test
cmpsb
xchg
add
daa
sbb
xor
push
shr
popf
test
aam
fimuls
aad
mov
xor
gs
add
or
icebp
aaa
jg
cmp
cmp
fnstenv
leave
sbb
insl
add
inc
in
in
xchg
mov
rolb
and
sub
jo
dec
sbb
push
mov
fists
ds
push
in
or
cmp
pop
sbb
aaa
ss
negb
cmp
push
cmp
sub
and
sub
push
addb
inc
test
sbb
adcl
ret
or
divl
test
test
mov
mov
lcall
xchg
fwait
cwtl
iret
xchg
xchg
jecxz
dec
lret
jb
ret
stc
cmpb
and
inc
sti
mov
iret
ficomps
fsts
fisubl
stos
xor
jbe
xor
add
imul
xlat
cmp
std
sbb
clc
subl
into
sbb
aaa
scas
int3
cltd
movsl
cwtl
sub
movsl
jne
test
out
stc
adc
out
movsb
jl
sahf
lret
mov
loopne
mov
mov
sub
dec
out
adc
and
jno
jge
repnz
ds
pop
inc
mov
addb
sbb
and
jecxz
fbstp
int3
pop
sbb
movsl
fs
std
inc
and
xchg
sbb
mov
and
scas
sub
mov
mov
mov
and
dec
mov
fcoml
mov
mov
cs
in
stos
ffree
aaa
mov
jo
jp
xorl
ss
sub
and
cmp
sub
fisubrs
xchg
adc
cltd
push
dec
scas
push
or
xor
xlat
and
ret
pop
jl
pusha
jo
and
inc
or
dec
mov
mov
out
popl
push
into
dec
mov
inc
subb
push
shll
mov
sub
mov
xor
xchg
ljmp
adc
pusha
insb
pop
pop
xlat
fcmovnb
in
imul
fisttpl
adc
divb
leave
inc
xor
push
insl
clc
clc
leave
inc
int
xor
add
add
sub
cmc
fstl
out
mov
fcomi
les
mov
shll
sarb
push
jge
lahf
popl
xlat
hlt
shl
pushl
lock
add
loop
das
xlat
sahf
repz
xchg
push
xchg
pop
inc
out
test
or
add
or
aam
xchg
push
mov
aas
repz
cld
std
pop
addr16
pusha
inc
adc
shlb
dec
or
push
pop
aas
mov
mov
fmull
sbb
cmp
cwtl
faddl
or
cmp
in
cmp
insb
push
test
xor
mov
loopne
mov
cmpb
mov
pop
filds
repz
xor
out
xchg
add
mov
xchg
loopne
cmpl
shlb
scas
cmp
leave
add
je
mov
sub
pop
jno
xchg
mov
fsts
xchg
pop
inc
mov
popl
imul
cmpsb
sbb
add
pop
std
js
adc
ret
in
imul
pop
xor
ljmp
xchg
xchg
daa
repnz
les
xchg
in
pushf
cmp
loope
inc
fcmovbe
or
jl
push
jge
fsubrs
push
push
stc
scas
outsl
pop
adc
mov
es
cltd
test
sbbl
sub
lds
xchg
xor
arpl
enter
stc
enter
dec
mov
sub
ret
arpl
jno
push
outsb
push
outsb
lret
les
mov
jne
or
and
mov
mov
mov
push
or
sarl
jno
rcr
out
and
ja
sub
xor
pop
mov
xor
xchg
orl
mov
pop
test
cmc
lcall
loope
add
cmp
filds
out
cmp
xchg
sub
fcoms
testl
fcomi
pop
lods
fildll
pusha
adc
mov
ret
inc
aaa
dec
mov
dec
ret
lock
fsubrs
loop
test
fmull
dec
fldenv
aad
push
sbb
jne
mov
cmpb
jle
xor
jo
mov
adc
push
fwait
jo
in
fs
gs
and
xor
lods
jns
jecxz
data16
iret
mov
xchg
out
in
dec
fcoml
and
lea
or
std
mov
cmpsl
jae
sub
sti
stos
shrb
loope
fisubl
inc
rorb
pop
roll
int3
cwtl
gs
dec
cmp
sti
lret
adc
inc
scas
lahf
out
faddl
mov
push
cs
ja
mov
icebp
fidivs
pusha
or
in
hlt
fsubrl
ret
dec
push
test
mov
lock
pop
xor
stos
int3
or
popa
fisubrs
mov
add
mov
mov
cmp
xor
call
loop
jecxz
jl
pusha
fidivrs
add
les
push
xchg
mov
stos
clc
icebp
dec
mov
adc
paddusw
loope
sub
test
push
loop
roll
mov
imul
pushf
adc
or
add
pop
add
les
lret
stos
mov
mov
repz
mov
xchg
dec
dec
dec
mov
sar
push
pop
repz
jb
out
sub
xor
sub
jp
fisttpl
ret
bound
je
sarl
int
adc
es
cli
sbb
sti
push
cmc
xchg
idivb
test
add
mov
std
push
sub
xchg
loopne
stc
lret
addb
cltd
xchg
jp
xor
rol
xor
add
rcrl
cli
jns
push
push
or
xchg
mov
aaa
arpl
xor
or
sbb
test
mov
pop
sahf
scas
inc
movsb
and
xchg
aaa
jecxz
inc
das
fnsave
enter
and
add
jnp
xchg
xor
xchg
loopne
ret
call
bound
js
mov
out
loope
push
and
das
mov
fstpt
sub
enter
jbe
push
pop
push
xchg
popl
jmp
mov
das
icebp
pop
imul
xor
je
addr16
sbb
pop
push
cmp
lret
cld
lret
mov
xor
mov
faddl
dec
sbbb
leave
test
sti
negl
notl
xchg
movl
out
sbb
cmc
popf
sahf
lcall
sub
adc
cltd
outsl
mov
push
push
je
adc
cmp
cmpsl
arpl
popl
insl
shl
subl
and
fidivrl
dec
jne
jbe
or
rcl
les
jae
jne
adc
xchg
nop
push
pop
inc
scas
shl
fsubrs
and
mov
jle
cmp
insl
mov
jbe
mov
add
jmp
jns
arpl
fstp
mov
in
mov
out
idivl
xchg
fnsave
inc
xor
xor
cmp
xor
pop
arpl
data16
test
les
lcall
lock
mov
cmp
xchg
cmpsl
cmp
enter
pop
xchg
sti
das
outsb
jge
ja
add
loope
xchg
adc
loope,pn
and
aaa
daa
pop
repz
sub
mov
mov
mov
cmp
cmp
push
xor
insl
xchg
out
data16
jl
sub
out
mov
insb
sti
fs
mov
ss
mov
push
leave
xchg
pushf
call
mov
in
clc
sbb
or
int3
adc
jns
jl
xchg
xor
out
jecxz
mov
sub
stos
xchg
cmp
xchg
jne
mov
ljmp
bound
or
push
xchg
mov
push
or
pop
add
mov
roll
jle
add
mov
out
add
leave
push
out
xchg
fcompl
mov
mov
fucom
mov
jno
jl
pop
inc
ret
push
or
dec
fwait
sbb
mov
sti
pop
pop
pop
xchg
out
repz
movsl
mov
lahf
call
push
mov
leave
lret
cmp
insb
pop
pop
mov
popf
mov
icebp
daa
lahf
dec
ret
mov
dec
cwtl
and
aas
andb
adc
arpl
stos
dec
out
pop
sbb
test
pusha
movsl
out
push
or
iret
push
cmc
subl
cmp
xor
insb
cmc
push
cmp
sub
lret
in
in
das
push
push
mov
xchg
cmc
inc
sbb
out
movsb
mov
jl
cltd
outsl
adc
mov
jae
imul
pop
int
push
xor
xchg
pop
pop
pop
stos
data16
pop
int3
inc
das
add
int
mov
or
push
test
add
loopne
clc
sub
loop
rorl
out
popa
and
stos
or
hlt
jge
and
sbb
repnz
or
push
sbb
jae
iret
sbb
andb
jb
xor
add
popa
jp
pop
add
mov
rclb
shrl
test
cmp
add
mov
mov
add
icebp
push
inc
xchg
enter
fisubs
das
in
jns
inc
lods
pushf
inc
push
sbb
push
in
enter
xchg
int
aad
rorb
push
loop
jmp
adc
es
push
enter
inc
pop
addr16
hlt
fiaddl
push
stos
cmp
mov
clc
sub
out
in
jecxz
adcb
pop
pop
sub
adc
stc
loopne
push
push
pop
cmpsl
xchg
lds
fiaddl
imul
or
imul
outsl
push
xlat
add
mov
popf
sub
cmpsb
out
les
mov
loopne
lahf
push
sub
dec
test
fnsave
add
mov
imul
mov
mov
mov
cli
addb
dec
jo
fwait
adc
jmp
movsl
sahf
mov
pslld
mov
pushf
jno
pop
jae
imul
mov
ja
loope
mov
insb
mov
sbb
jae
aam
arpl
neg
cmp
mov
int3
or
daa
adc
insb
mov
mov
xor
cmp
test
and
and
sbb
mov
mov
cltd
cmp
cmpsl
or
pop
neg
faddl
insb
cmp
imul
inc
inc
jge
push
dec
sbb
je
push
xchg
adc
call
movd
into
push
fdivr
fiaddl
mov
xor
adc
dec
popa
pushf
dec
sahf
outsb
js
push
rorl
loop
pop
and
movsl
adc
test
inc
xlat
je
sbb
loop
pop
out
dec
xchg
xor
popa
orl
push
mov
add
ret
and
fcomps
loop
fnop
ds
adc
adc
js
or
mov
sbb
outsl
mov
sti
orb
xor
cs
in
jae
push
xor
mov
clc
jbe
das
fcoms
jno
inc
jge
andb
sbb
xor
sarl
repnz
sub
push
out
adc
fistl
mov
int3
shll
lret
push
mov
cs
adc
pop
loopne
pop
push
adc
sbb
scas
fists
mov
rorl
mov
and
sbb
push
and
int
fldt
dec
fwait
cmpsb
jbe
int
jno
and
shl
adc
push
std
add
jmp
in
jne
add
arpl
lods
fs
nop
or
lret
test
mov
xchg
outsl
es
xlat
or
push
cmp
mov
lock
fwait
push
push
mov
fists
mov
rolb
loopne
stc
jge
pop
adc
call
cmp
loope
stos
cmp
and
adc
push
mov
icebp
gs
push
xchg
shlb
or
mov
jno
ret
lret
mov
pop
pop
adc
das
pop
pop
lods
xor
outsl
xchg
decb
push
xchg
dec
and
dec
dec
aas
push
mov
ja
sbb
pop
loope
fimuls
or
aas
out
mov
ds
out
fsubs
jae
mov
fiadds
scas
lcall
xchg
adc
mov
mov
insl
mov
pop
jecxz
cmp
hlt
sbb
pop
add
sarb
in
fadd
ds
outsl
scas
add
sub
cwtl
dec
xchg
pop
shrb
mov
mov
sbb
dec
ds
loop
cmp
sbb
aad
sbb
mov
xor
pop
mov
mov
mov
xor
mov
out
inc
outsb
xor
inc
rorl
lahf
push
nop
xor
adc
cmp
fimull
enter
notb
mov
xor
testl
or
int
mov
popf
dec
mov
inc
orl
cld
mov
jns
jecxz
and
lock
pop
in
push
mov
ljmp
pop
lret
std
aaa
inc
adc
xchg
clc
in
mov
adc
pop
mov
mov
mov
aam
pop
insb
adc
jno
inc
mov
xchg
cld
mov
jle
call
repz
sti
gs
add
in
call
add
sar
adc
jne
sbbb
sbb
mov
cmp
jge
in
mov
sbb
pusha
push
and
sbb
mov
insl
jno
mov
int
xchg
mulb
cmp
test
loope
sub
lock
leave
gs
adc
test
adc
mov
ja
out
mov
lock
es
test
jle
shlb
push
insl
push
xchg
and
pop
or
ljmp
jbe
scas
std
cli
jno
leave
imul
andb
mov
std
imulb
push
in
xor
inc
rcrl
jbe
arpl
mov
jae
and
adc
sub
mov
hlt
adc
sbb
cltd
mov
loope
mov
adc
lcall
push
mov
cs
fists
daa
repz
xchg
iret
stos
xchg
cmpsb
les
and
mov
cmp
leave
mov
outsb
mov
jno
shll
addb
xor
cwtl
pop
pusha
scas
andb
sti
sub
push
pop
aam
js
lcall
sub
add
lock
leave
cltd
lret
jns
jp
neg
test
jmp
xor
jl
sub
cmp
into
xor
clc
pop
pop
push
sbb
test
xor
mov
vsubsd
cld
dec
movsl
push
adc
mov
bound
add
incb
out
pop
sub
iret
shrl
lcall
in
mov
mov
jbe
scas
stc
mov
subl
lock
sahf
loopne
cltd
in
or
push
scas
push
sub
jge
loope
rolb
loop
rcrl
pop
shlb
movsb
mov
loope
adc
mov
and
cmpsl
idivl
push
repnz
push
adc
repz
lahf
sbbb
pushf
leave
addr16
add
cmp
aaa
xchg
fldcw
dec
mov
or
imul
add
inc
shlb
add
push
shll
cmpsb
loope
lret
fldl
jmp
leave
fistl
data16
xchg
adc
aad
ss
ret
arpl
jbe
mov
push
sub
iret
fdivrl
lods
pop
nop
repz
add
push
fcoms
data16
mov
dec
dec
scas
push
shld
mov
mov
mov
js
cmp
add
mov
xlat
xor
xor
bound
pop
stos
pop
sbb
inc
add
mov
inc
adc
inc
add
jge
stos
add
sbb
pop
mov
jnp
decl
jecxz
call
pop
jb
aam
xor
movq
push
loope
fwait
mov
push
fadd
stos
or
sub
inc
push
bound
xchg
jo
mov
jb
mov
or
xchg
std
mov
adc
loop
mov
push
lea
push
jo
call
jo
inc
ss
cwtl
daa
cmp
sarb
rol
out
int
jl
pop
mov
mov
adc
or
sub
nop
movsl
mov
fcoml
aas
inc
cmp
and
push
mov
mov
adc
cwtl
jge
daa
dec
push
ds
pop
jmp
xor
in
aam
cwtl
push
xchg
sarb
ret
sub
xor
xchg
jp
into
sti
jge
jo
movsb
mov
cmp
jb
in
jno
mov
loopne
adc
hlt
push
in
mov
dec
call
cmpsb
push
scas
mov
and
mov
daa
aaa
mov
sarl
push
cmp
repnz
cmp
or
movsl
repz
js
loop
xchg
add
stos
jg
outsb
ret
ljmp
cltd
push
sub
in
fisubs
stos
add
cltd
push
and
ret
adc
cli
xchg
movsb
and
pop
mov
adc
push
lods
aad
test
dec
pop
fs
add
repnz
or
push
andl
add
xchg
mov
mov
dec
mov
xchg
daa
outsl
roll
add
shrb
xor
push
clc
adc
xchg
call
or
jle
test
mov
adc
neg
shll
scas
sbb
in
call
dec
leave
xchg
pop
clc
scas
repnz
int
iret
push
ret
insb
sbb
imul
call
push
inc
fiaddl
pushf
stos
xor
sub
bound
getsec
mov
xor
xchg
gs
gs
dec
and
hlt
lret
inc
jbe
lds
sbb
adc
xchg
xor
pop
call
jl
aad
or
xchg
bound
lock
cwtl
mov
sbb
aaa
and
jb
xchg
fldt
shrb
sub
aad
sub
adc
int
jg
jecxz
xchg
mov
jnp
hlt
cli
out
call
icebp
xchg
inc
xlat
fadds
rcl
lods
inc
pop
loope
shll
sbb
pushf
scas
andb
aaa
cld
movsl
or
cmpsl
mov
lods
or
mov
mov
adc
cltd
mov
cmpl
cwtl
into
mov
sub
cmp
cmp
mov
enter
test
xor
into
lds
cmc
xchg
adc
jnp
xor
in
sub
in
fmul
rol
push
adc
mov
loope
adc
mov
sbb
lock
cmc
pop
xor
inc
rclb
mov
imul
cmp
xchg
dec
jns
inc
add
arpl
xor
mov
repz
addr16
lret
sub
pop
scas
pop
xor
xchg
jno
sub
inc
adc
in
std
out
loop
push
adc
cmpps
cmp
xor
add
add
jmp
dec
sbb
cmp
fisttps
xor
lods
pop
test
movsl
push
mov
ja
mov
and
popf
lea
int3
pop
xlat
adc
int3
ljmp
fwait
mov
cmp
sub
divb
cld
or
fs
push
push
mov
rcrb
aam
lock
leave
outsl
fisttps
sarl
pop
bound
adc
mov
adc
test
cmp
pop
sub
xor
test
push
pop
jg
adc
cmp
ror
imul
fsubp
cltd
push
cltd
orl
movl
mov
jge
adc
push
rorb
lock
fwait
popa
aam
jo
fistps
pushf
mov
push
aas
addr16
jg
fwait
pop
mov
mov
push
popf
xchg
loope
leave
fldenv
bnd
xchg
jmp
xchg
lcall
dec
nop
push
dec
cwtl
sub
mov
es
dec
lock
mov
cmp
dec
in
ljmp
cli
int
inc
push
or
pop
and
adc
xchg
mov
hlt
add
out
jbe
je
loope
je
add
fs
int3
mov
push
sbb
push
cltd
inc
roll
cbtw
dec
icebp
mov
repz
mov
lock
repz
and
into
push
loope
sub
lret
pop
sub
jno
insl
filds
mov
fadd
xchg
mov
push
fnsave
inc
in
pop
mov
movsb
xchg
pusha
pop
and
lea
push
xchg
adc
ror
push
mov
cmpsl
jnp
aad
stos
repnz
lcall
clc
pop
pop
jg
xor
and
pop
cmp
adc
movntq
fstps
mov
xor
dec
xorb
mov
mov
jecxz
jne
xchg
sub
push
repnz
icebp
outsl
insl
push
pop
imul
fdivrs
sbb
ret
cli
aas
dec
mov
mov
repnz
in
fucomi
ljmp
ja
leave
mov
cs
xorb
cmp
cs
inc
and
sbb
jg
test
sahf
clc
xchg
xlat
sbb
lock
int3
aaa
xor
aam
and
push
push
scas
je
shl
enter
ja
or
jo
sub
in
adc
shll
ret
cs
push
stos
rclb
andl
mov
popf
out
lahf
mov
sahf
rcrl
cli
push
xchg
xchg
int
and
xchg
add
jne
inc
das
ja
pushf
add
xchg
test
adcl
jae
push
pushf
or
fiaddl
push
sbb
or
jb
ja
and
les
loopne
popf
enter
inc
xchg
and
stos
adc
in
imul
inc
fsubrs
xor
add
jbe
cmp
mov
das
xor
jae
test
mov
sbb
cmpsl
jle
out
dec
dec
cmc
xor
push
adc
add
xor
jo
add
shll
pop
pop
jns
adc
testb
or
xor
cmpsb
and
xor
loope
repnz
fmull
cli
outsb
inc
and
jns
add
mov
insl
into
repnz
inc
int
xor
decl
les
xlat
hlt
mov
add
pop
pop
stc
dec
xor
imul
mov
les
adc
ret
xor
repz
addl
or
sarl
movsb
jae
mov
sub
add
and
dec
jmp
sbb
xor
and
pop
lahf
insb
mov
jbe
and
sbb
jbe
mov
popa
adc
lods
sahf
mov
xor
int
push
leave
sbb
mov
std
or
lods
rcrb
cmp
imull
pop
rclb
cwtl
clc
sbbb
mov
add
xchg
scas
outsb
dec
insl
dec
mov
js
aam
fwait
stos
movsb
into
jo
jo
mov
shl
call
je
punpckhwd
pop
xchg
jb
icebp
xchg
int3
inc
insb
cltd
movsl
mov
aas
sub
aad
push
mov
nop
repz
pop
in
pop
repnz
rorb
inc
ficoms
mov
or
inc
push
pop
icebp
scas
pop
or
mov
packsswb
dec
fwait
mov
das
imul
xlat
push
push
lea
and
test
dec
inc
mov
sub
idivl
add
mov
push
xchg
sbb
loopne
ds
push
leave
ja
add
aad
cmc
je
imul
sbb
insb
ja
mov
mov
lahf
ja
add
jne
js
outsl
xchg
dec
cmpsb
push
push
mov
or
out
fdiv
nop
pop
mov
xor
sub
in
cwtl
mov
icebp
sbb
out
int
and
inc
shll
xchg
adc
jae
dec
push
into
aaa
pop
jp
and
sbb
cmp
mov
lahf
push
loopne
mov
or
lret
adc
pop
ss
decb
add
testb
dec
mov
jle
sub
sub
aaa
push
cld
repnz
push
imul
push
xor
or
les
xchg
xor
fcompl
je
sahf
cmp
jg
pop
iret
inc
es
in
js
insl
xchg
jns
adc
xchg
addr16
xor
sub
mov
mov
sahf
dec
imul
in
jns
or
cmp
add
fldcw
rorb
or
loopne
sub
jge
dec
lock
jbe
aam
inc
mov
xchg
mov
aad
xchg
pusha
lea
lahf
mov
fstpt
and
add
movsb
imul
inc
repnz
xor
or
mov
sti
cmpsb
dec
inc
xchg
xchg
mulb
imul
inc
ret
sub
add
or
xchg
mov
cmp
add
call
test
in
mov
cmc
mov
xchg
mov
lods
repnz
cmp
rcpps
in
jecxz
mov
or
into
fsubp
jbe
jg
mov
pop
ja
out
lds
pusha
and
mov
ret
pop
and
mov
sahf
iret
dec
hlt
adc
cmp
or
mov
call
stc
push
shrl
test
pop
cwtl
xchg
aas
stos
scas
cmp
sbb
push
xor
xor
mov
push
adc
mov
testb
mov
xlat
xor
cwtl
stc
inc
ss
inc
ja
into
popa
mov
add
push
aam
mov
es
mov
and
and
icebp
mov
and
call
sub
push
pmovmskb
sahf
jno
shrl
add
pop
lods
sub
cmpsb
sub
add
andl
out
add
aas
mov
ret
sar
leave
push
orl
lret
xchg
cmp
fldlg2
mov
divl
mov
adc
aaa
scas
mov
test
and
cmp
lcall
adc
jns
mov
jmp
sub
jb
lods
mov
sub
pushf
rclb
addr16
addl
cmp
aam
fldcw
pop
movsb
dec
sub
and
rorb
shlb
inc
mov
cmpl
inc
push
sbb
inc
into
mov
add
rolb
aaa
popa
testl
repz
adc
push
das
gs
xchg
add
fisubl
scas
cmpsb
daa
je
jne
std
imul
sbb
inc
push
pop
shlb
repnz
jmp
push
ss
iret
xor
inc
pop
std
jle
leave
lock
adc
pop
adc
call
sub
fs
addr16
inc
mov
xor
popa
adc
xchg
cmp
jge
cltd
cmpsb
ret
and
sbb
mov
push
sub
xchg
ds
cwtl
inc
movsl
cwtl
adc
and
and
in
shlb
mov
insb
rcrl
enter
cmpsb
mulb
shl
frstor
je
cmpsl
clc
cmc
sub
es
loopne
xchg
fistps
xorl
xor
movsb
popf
stos
pushf
mov
ljmp
adc
xor
adc
popa
inc
cmpl
mov
repz
test
xlat
outsl
hlt
mov
jge
in
and
and
lahf
push
daa
sbb
imul
fisubrl
ret
push
fistps
into
aas
imul
dec
sub
scas
mov
call
insl
loop
pop
push
and
or
jle
push
lods
jo
lahf
in
sub
imul
and
movsl
stos
adc
xchg
xchg
jnp
pusha
mov
popa
jbe
add
sub
xchg
xchg
shlb
xchg
adc
das
lock
fs
mov
xchg
repnz
sbb
xchg
xor
xor
push
push
sbbl
and
adc
bound
popf
dec
scas
sub
pushf
in
cld
sahf
mov
or
adc
push
fists
pushf
jb
fimuls
lcall
lods
mov
dec
jg
lods
inc
sub
test
xchg
add
mov
sbb
aaa
cmp
mov
cli
pushf
fildl
nop
push
nop
sub
mov
jbe
mov
mov
int3
or
cs
adc
xorl
adc
loopne
pop
pop
sub
mov
mov
mov
fiadds
cmc
cmp
mov
push
sub
inc
shl
xor
cs
pop
xchg
out
daa
adc
adc
mov
adc
pop
hlt
outsl
lahf
mov
push
fcmovbe
adc
and
aas
jo
je
mov
into
test
movsl
rolb
mov
push
es
mov
leave
mov
rcll
nop
dec
xchg
jecxz
adc
push
mov
lret
mov
nop
sbb
xlat
shlb
xchg
mov
pop
jns
hlt
sbb
jg
sub
or
or
sbb
mov
xor
cld
mov
test
xor
pop
adc
lods
push
add
add
mov
pxor
arpl
jb
xor
js
insl
add
pop
xor
imul
add
or
push
cmpb
and
mov
leave
cmpsl
mov
sub
outsb
adc
test
addr16
sub
cli
inc
lods
and
pusha
add
cmp
clc
sbb
testl
das
jmp
push
mov
js
push
mov
mov
or
or
jp
insl
sub
push
mov
jbe
in
dec
pop
dec
ds
fcoms
dec
pop
jmp
mov
gs
es
dec
mov
ficompl
cmp
pop
pop
out
xlat
pusha
jmp
sub
fidivrl
pushf
daa
mov
mov
js
loope
fisubrs
jne
outsb
in
enter
loopne
jno
das
jmp
lock
and
sbb
push
scas
andl
lock
and
adc
and
and
movsb
sarb
xlat
movsb
inc
mov
je
push
push
xchg
cmp
in
xor
sahf
das
cs
mov
inc
fstps
mov
int3
xchg
xor
jle
mov
int
mov
fistpll
gs
ret
add
push
jns
xor
or
xor
in
ja
rorl
rclb
xor
cmp
fneni(8087
or
pop
scas
xor
mov
dec
out
lea
es
sbb
pop
inc
cmp
bound
jle
cli
out
mov
pop
mov
pop
jmp
out
insb
pop
push
dec
sti
call
lea
hlt
movsb
xchg
sbb
jmp
xor
mov
popa
pop
xor
daa
cmp
daa
or
pusha
in
loopne
mov
jno
jge
mov
stos
xlat
adc
push
pop
pop
lods
mov
mov
insb
in
mov
xchg
mov
pop
jecxz
insb
mov
clc
lret
xor
into
sarl
loopne
out
daa
shll
sub
lods
sbb
sbb
test
inc
adc
loope
ja
xchg
pop
fsubs
inc
sbb
insb
lahf
push
pushf
pop
or
iret
sbb
adc
cmc
pop
in
shlb
imul
in
pusha
xchg
dec
or
in
test
mov
inc
cmp
clc
push
jg
push
pop
imul
fs
pushf
mov
sbb
or
pop
xchg
icebp
adc
mov
mov
cltd
shll
imulb
push
out
pop
hlt
out
dec
in
adc
adc
leave
push
dec
nop/reserved
mov
dec
out
mov
jbe
shl
sbb
or
adc
scas
jecxz
aad
fsts
scas
int3
loop
mov
mov
mov
in
push
lods
int
sti
popf
inc
push
neg
xlat
scas
jo
iret
scas
cmpsl
sbb
or
push
xlat
in
mov
inc
jo
and
xchg
push
dec
sbb
test
add
mov
or
push
inc
in
enter
or
lods
test
dec
mov
pop
inc
jo
icebp
push
push
jl
fs
movsb
movsb
add
imul
xchg
sbb
dec
jle
mov
pop
rorl
icebp
add
ss
shrb
movsl
outsb
jno
sbb
push
pusha
in
lret
xchg
fildll
test
subl
mov
or
or
inc
mov
ret
aad
pushf
fstpt
jl
or
sub
pop
in
je
data16
pop
pop
movsl
xor
mov
icebp
addr16
jne
outsl
leave
add
shl
push
xchg
adc
popa
outsl
mov
push
xlat
nop
fucomi
dec
in
ljmp
divb
pusha
pop
jns
jb
popa
leave
add
adc
sbbb
fs
fbstp
enter
mov
push
loop
ss
faddp
dec
sbb
cmp
lock
gs
xor
lock
outsl
push
iret
or
rcrl
push
mov
and
inc
imul
mov
jmp
dec
aaa
jl
mov
and
mov
inc
mov
scas
and
lods
loop
mov
out
and
call
cmp
jg
out
inc
push
mov
cmp
pop
inc
sbb
push
incl
fistps
sti
cmp
inc
inc
repnz
cmp
mov
pop
cmp
jae
mov
pusha
pushf
out
sub
or
mov
or
into
sub
fwait
loope
jmp
xor
lahf
and
ret
pop
adc
sbb
pop
scas
in
ficompl
adc
dec
xchg
jge
enter
fmul
int3
pop
push
lods
jae
xor
jns
dec
loopne
jne
pop
aaa
jecxz
sub
rcll
push
pcmpgtd
mov
and
cmc
jnp
push
cmp
in
and
cli
jae
mov
pop
jp
sbb
mov
movzbl
ret
jbe
gs
es
fnsave
mov
fwait
pop
popa
ljmp
pop
mov
cmp
jmp
in
jnp
push
aaa
loop
lahf
cwtl
pop
add
sub
mov
sub
adc
ffree
ds
sub
add
mov
enter
shrb
or
push
jl
fsts
iret
fdivs
cs
or
rcr
sub
es
jmp
and
push
shlb
sbb
data16
jo
ja
in
sbbb
pusha
test
inc
cmp
mov
sti
jle
push
inc
xor
push
mov
push
lock
mov
lock
shll
dec
xor
mov
ljmp
ret
xchg
and
aas
jne
insl
adc
pop
and
js
jb
std
shrb
lds
push
lods
fs
push
dec
fcmovu
or
lock
inc
int3
dec
or
int3
lahf
sbb
shlb
xchg
punpcklbw
sbb
cmp
ds
mov
addb
stos
mov
mov
cmpsl
push
push
mov
dec
mov
pop
in
add
sahf
adcl
push
mov
test
xchg
push
fwait
std
lahf
jno
add
mov
sub
imul
sub
mov
add
xchg
or
iret
lcall
dec
mov
pushf
pop
lea
sahf
iret
pop
jne
cs
jp
and
ret
scas
mov
scas
sub
stos
pushf
pop
push
sbb
loope
dec
in
pop
xchg
add
out
pop
lock
rcrl
adc
pop
scas
repnz
jns
xor
push
or
jecxz
aas
sbb
lods
add
repnz
icebp
loopw
ret
out
fistpl
xchg
mov
mov
icebp
dec
lds
cwtl
lahf
and
or
mov
push
pop
mov
fstpt
ljmp
test
inc
ja
aam
fwait
popa
xchg
cmp
inc
adc
mov
mov
inc
sbb
addl
sub
mov
mov
insl
mov
std
rdtsc
sub
lahf
dec
in
jne
lret
stos
push
cmpsl
mov
or
lea
jecxz
mov
imul
call
repz
inc
push
inc
xchg
mov
out
cmp
sahf
iret
lcall
popa
sbb
xor
out
gs
bound
test
jmp
mov
sbb
inc
jb
aad
out
cmp
mov
cld
ss
imul
stc
or
push
dec
scas
mov
mov
cmp
and
inc
imul
push
push
in
lret
fdivl
lcall
mov
inc
adc
pop
loop
ret
sub
daa
int
cld
dec
into
repz
jo
xchg
xchg
or
int3
outsb
and
sub
or
mov
js,pt
cmc
jg
ja
jmp
js
xchg
pop
into
enter
shll
out
push
inc
fldl
pop
add
mov
cs
xchg
sahf
mov
cwtl
jge
jne
jl
xor
dec
fnstcw
cmp
hlt
sbb
xchg
stc
cmpsb
sahf
sub
inc
push
inc
imul
fmul
lret
out
cltd
mov
lcall
rorl
repz
gs
mov
adc
dec
push
ja
pmaddwd
pop
scas
call
push
xchg
push
ds
cli
and
jle
andb
inc
dec
popaw
jmp
adc
xchg
fdivs
mov
pop
adc
mov
pusha
xor
int
scas
inc
aad
lea
jecxz
rorl
mov
mov
adc
imul
loope
pop
push
xor
or
jmp
ds
outsb
sub
iret
mov
dec
decb
in
test
pusha
adc
mov
ja
out
test
iret
mov
or
outsb
jns
sub
in
dec
xchg
lcall
out
lret
mov
push
imul
aam
movl
nop
outsb
push
lahf
pop
call
mov
repz
xorb
ss
mov
mov
arpl
fsts
pop
dec
arpl
call
adc
xor
loope
mov
pop
arpl
movsl
push
jnp
dec
ret
lahf
popa
push
jge
frstor
aaa
xor
call
js
push
sbb
scas
cmpsl
sub
rorl
sub
out
xor
mov
mov
xor
mov
push
jnp
push
jp
mov
cmp
lret
xor
xor
fistpl
mov
mov
iret
inc
inc
call
push
push
inc
addr16
clc
mov
sub
pushf
push
pop
add
mov
inc
mov
xchg
pop
add
int3
inc
dec
inc
mov
xchg
fcoml
stos
lret
test
imul
pop
mov
cmp
ds
push
mov
jl
add
mov
push
call
mov
or
sub
mov
addr16
popa
mov
jg
fcoms
xchg
cmpsl
lret
enter
dec
shl
stos
xchg
mov
or
fs
mov
mov
dec
pusha
out
xchg
stos
mov
stos
in
leave
pop
shll
xchg
or
fcmovnu
ret
popf
je
mov
inc
cld
iret
adc
xor
mov
pushf
xorb
into
jecxz
out
sahf
std
int3
mov
or
or
push
dec
inc
mov
rclb
repnz
adc
test
lret
xor
or
and
leave
out
mov
xor
inc
popl
or
in
adc
adc
fdivrs
aaa
xor
scas
adc
mov
xor
mov
and
add
push
rcl
xchg
and
les
push
xor
cltd
push
push
into
jge
inc
dec
divb
push
pop
mov
mov
or
sub
inc
rep
mul
enter
enter
dec
push
decb
lret
cmp
loopne
jp
jmp
shrl
push
xchg
jne
sub
jbe
test
cmp
stc
outsb
pop
and
mov
jbe
leave
xchg
insl
jo
cli
xor
adc
aas
pop
and
fwait
aad
dec
aas
fst
inc
movsl
xchg
inc
dec
call
cwtl
test
jae
push
lret
popf
pop
mov
push
cmp
cs
and
sahf
cmp
xchg
dec
inc
pop
scas
push
add
loop
mov
cmp
pop
cmp
push
sub
mov
lods
xchg
inc
icebp
test
pop
or
xor
push
push
push
jno
mov
loop
into
ds
or
dec
jb
test
fidivrs
xor
or
cwtl
xorb
mov
pop
and
addb
xchg
mov
cwtl
mov
jg
xor
or
test
jg
jmp
dec
loope
outsb
daa
xchg
movsl
mov
aaa
inc
sbb
add
lahf
mov
pushl
ja
mov
ds
push
adc
rclb
aad
fildll
out
and
sbb
push
push
adc
adc
sbb
mov
sbb
xchg
xchg
inc
dec
push
xchg
push
lret
fstl
or
mov
test
mov
push
mov
fldenv
jl
pop
or
dec
test
sub
into
mov
cmp
inc
aam
push
xor
test
in
sbb
stos
bound
pop
push
push
sub
xchg
jb
mov
xor
or
pop
repnz
xor
shll
je
leave
pop
mov
out
add
inc
sbb
push
test
lcall
push
imul
or
int
stos
fisubl
xchg
mov
imul
roll
fmuls
enter
mov
pop
test
jbe
out
es
sbb
mov
frstor
movsl
addr16
dec
test
mov
dec
mov
daa
imul
cltd
popa
xchg
imull
roll
mov
sub
cmp
test
sarl
ret
fstp
xchg
sbb
ret
dec
stos
gs
stos
mov
mov
ds
inc
imul
ret
arpl
jmp
sti
xchg
add
sub
mov
loopw
jno
jmp
lahf
movsb
mov
icebp
mov
pushf
adc
out
ss
push
test
cwtl
adc
jmp
xchg
repnz
sbb
lcall
xor
push
out
xchg
notl
xor
dec
cwtl
add
mov
dec
sbb
arpl
xchg
inc
push
fadd
lds
and
or
mov
pop
insb
xor
or
in
adc
cmp
cmc
mov
jmp
lock
icebp
adc
and
repnz
lret
mov
fs
std
cmp
ljmp
dec
sti
jo
jo
aas
fisttpll
lret
enter
jle
and
mov
pop
push
sbb
sub
sub
je
mov
xchg
push
call
pop
out
movl
mov
xlat
sbb
xchg
sbb
xchg
pop
pop
addr16
mov
inc
mov
stos
jle
xchg
dec
add
clc
pop
pushf
iret
lahf
cmp
pop
jle
bound
jge
xchg
in
xor
nop
inc
hlt
xchg
rorl
scas
pusha
inc
mov
xchg
test
xor
jns
subb
iret
push
stc
movsb
into
lods
fwait
shll
mov
imul
or
add
dec
or
and
test
cld
sbb
lods
xlat
cs
xchg
lods
cmp
xchg
stc
loopne
pop
dec
push
and
jo
pusha
int
lret
cmp
pop
xchg
inc
jns
xor
xchg
ret
jo
cmpsb
or
fabs
xchg
jg
inc
xchg
lcall
fwait
ja
mov
fcoms
push
lds
xchg
mov
jl
dec
rorl
pop
sbb
and
push
xor
lcall
mov
out
pop
add
dec
out
mov
daa
rcll
ss
out
loop
add
enter
cwtl
enter
add
jg
pop
mov
icebp
movsb
cmpsl
int3
jg
pop
insl
stc
or
aaa
pop
int3
ja
pusha
inc
push
stos
call
fists
jne
mov
lret
lea
repz
add
xor
dec
jmp
js
push
add
cs
incl
pusha
push
xlat
aad
aam
sbb
push
jbe
inc
loop
aas
sub
popa
sti
and
sbb
push
xor
mov
out
cmpl
and
adc
les
jp
jae
pop
stc
dec
ret
mov
aaa
add
leave
dec
pop
mov
mov
jbe
scas
dec
jl
int3
adc
dec
lret
test
mov
mov
hlt
sbb
and
and
mov
mov
imul
mov
std
mov
test
imul
and
or
sbb
rcll
popf
add
inc
fbld
sub
int
adc
sbb
push
sub
jp
out
cld
sbb
or
jns
sub
aad
xchg
adc
xchg
in
inc
lock
jb
dec
jo
mov
and
mov
and
test
jbe
in
sahf
cld
pop
sbb
loop
pop
push
leave
cld
dec
add
inc
mov
adc
pop
pop
dec
pop
sahf
and
out
and
sbb
iret
pop
mov
fwait
mov
outsl
jbe
clc
mov
in
sarl
jl
adc
inc
jmp
jne
mov
stos
gs
pusha
icebp
push
icebp
into
pop
mov
clc
pop
repnz
jl
mov
lcall
sub
cmp
sbb
xchg
xchg
ja
outsb
push
mov
and
negb
jbe
add
pop
jge
sub
aam
cwtl
movb
push
bound
scas
arpl
fsubrs
inc
mov
testb
jmp
rcll
cmp
or
mov
mov
repnz
mov
xchg
xchg
xor
and
sbb
rcrl
pop
sub
add
hlt
and
ud1
cli
mov
mov
outsl
mov
orl
popa
gs
scas
add
jg
fnstsw
and
les
inc
jge
lods
stos
xor
pusha
es
sub
or
mov
jmp
mov
or
or
out
mov
lods
outsb
ljmp
jle
leave
test
jle
push
push
push
adc
add
out
push
jmp
sub
ljmp
int3
arpl
lock
repnz
cwtl
xor
cltd
ss
jmp
out
jge
mov
sub
cmp
xor
lret
mov
subl
or
jne
cmc
enter
fisubrl
inc
std
mov
insb
xor
jbe
jnp
test
dec
repz
test
popa
out
jb
mov
test
jle
add
or
lods
daa
sti
rcrb
xchg
arpl
mov
mov
scas
xchg
and
pop
rep
adc
jl
push
arpl
mov
insl
daa
rclb
movsb
add
push
xlat
inc
jge
in
lahf
mov
mov
into
aas
js
dec
fidivs
mov
pop
pop
lods
cmpsl
pop
cltd
cmp
outsl
ret
loope
jmp
and
pop
ljmp
jbe
lret
orl
push
int
and
mov
mov
loop
xchg
movsb
and
into
xor
adc
dec
mov
nop
pop
movb
dec
lahf
mov
hlt
loop
mov
or
lds
push
dec
add
sbb
jns
add
mov
rorb
push
mov
in
lret
inc
gs
leave
stos
mov
loope
mov
neg
rolb
dec
es
aam
push
add
lar
adc
into
jg
push
idivb
dec
and
jp
mov
mov
push
add
stos
mov
jecxz
mov
pop
mov
add
push
and
in
dec
in
push
push
mov
mov
ret
scas
add
ss
push
cmp
xor
or
pop
call
rcl
ret
aas
sbb
outsl
insb
out
xor
outsb
or
outsl
addl
dec
dec
fisttps
jno
mov
push
pusha
rcll
hlt
std
cmp
sti
ja
mov
sbb
cmp
push
pop
mov
popa
cmp
addb
test
test
sbb
or
testl
xor
ficompl
loope
pop
scas
or
fsubrs
adc
leave
xor
ja
loopne
xlat
nop
mov
push
push
mov
add
mov
popf
fsubs
pop
xor
negb
dec
xchg
xchg
mov
sbb
lret
imul
loop
pop
fcomp
jle
mov
ret
aad
adc
dec
in
mov
pop
push
popf
pop
pusha
bound
pop
push
push
jmp
incl
nop
aaa
xchg
jbe
lea
jns
icebp
ret
insb
clc
and
or
adc
mov
mov
sbb
aam
int3
sbb
ret
mov
xor
mov
ds
mov
js
test
adc
repz
in
xchg
and
pusha
imul
fwait
mov
cmc
fstpl
add
aaa
cmp
xor
add
or
dec
cmp
mov
or
or
aad
scas
out
jnp
icebp
xchg
fwait
scas
mov
sbb
lcall
and
mov
stos
clc
decl
mov
adc
pop
pop
sub
loope
push
das
in
js
pop
les
mov
rcll
ljmp
and
popa
or
pushf
iret
mov
fdivrs
push
lods
stc
out
sbb
mov
cmpsb
pop
fnstsw
insl
cld
sarl
aad
repz
imul
out
mov
js
fadd
imul
pop
cmp
sbb
sub
jmp
push
movsl
orb
stos
iret
mov
push
shlb
test
std
jne
das
pop
je
cltd
jmp
cmc
jg
jl
or
aas
sub
sbb
jp
mov
xchg
or
cmpsb
repnz
jne
sti
out
or
cmp
and
or
aam
push
xor
std
sub
scas
scas
mov
adc
pop
enter
jno
jne
or
repnz
dec
add
cltd
fwait
in
add
and
or
test
pusha
out
sbb
arpl
xor
leave
mov
leave
or
mov
test
xor
push
mov
xchg
mov
and
fs
mov
stc
xlat
fdivrp
mov
nop
pop
push
out
or
lret
or
sub
push
stc
fwait
mov
inc
sbbb
lret
in
mov
lock
and
aam
ljmp
test
xchg
push
sbb
out
add
inc
mov
add
aam
rolb
pop
adcl
and
lock
push
test
pop
movsb
add
jecxz
in
loop
in
mov
or
or
loope
ja
push
dec
adc
pop
xlat
mov
inc
adc
repz
sbb
ds
add
cmp
clc
jl
jb
or
stos
das
lock
fiaddl
outsb
push
sbb
roll
or
pop
imull
outsb
ret
data16
pop
ss
cwtl
pop
push
jle
sbb
out
inc
push
pop
test
mov
and
fsubl
push
push
andb
pop
mov
mov
push
mov
and
add
int3
push
ficoms
les
mov
pop
xchg
ja
ljmp
jne
xor
dec
data16
imul
das
and
xor
sbb
sbb
push
add
ret
out
cmp
sbb
mov
lock
and
lahf
outsl
jns
je
dec
inc
imul
ret
or
xchg
inc
or
rorb
xchg
pop
and
std
bswap
inc
inc
xchg
call
push
jbe
loop
jle
in
outsb
pop
gs
popa
ret
xchg
lock
scas
push
mov
dec
mov
orl
adc
jo
rorl
insl
pop
pop
stos
mov
movl
mov
adc
sub
subl
scas
mov
es
fstp
xor
fistps
fsubs
or
testl
cmpsb
ds
mov
xchg
arpl
or
mov
out
pusha
xchg
ds
mov
fwait
arpl
inc
lods
rolb
sub
cmp
pop
mov
xor
sbb
clc
nop
icebp
je
addr16
and
or
cmpsl
es
inc
in
rcrb
repz
ds
inc
pop
add
dec
mov
and
fsubs
mov
jns
xchg
or
call
pushf
aam
rol
mov
xchg
lods
sarb
pop
aam
movsl
arpl
jle
dec
cmp
cmp
cmp
repz
cmp
dec
mov
pop
sub
daa
gs
mov
pop
fdivrl
mov
and
push
lcall
dec
gs
and
sbbl
inc
icebp
pop
in
push
adc
pop
dec
leave
cltd
mov
in
test
stos
outsl
lods
pop
outsl
and
outsl
mov
push
daa
test
inc
lods
jns
inc
push
stos
cltd
aad
cmp
shrl
jg
sub
jp
xchg
pop
jmp
jmp
shr
lea
out
xchg
push
fnstenv
bound
or
push
cmp
nop
inc
lret
cmp
scas
stos
out
ret
push
out
adc
jl
nop
push
repnz
dec
imul
arpl
lock
add
xchg
adc
pop
test
or
rcll
les
mov
ret
jne
mov
cmp
iret
mov
mov
js
fsubl
push
ficoml
pop
fsubrp
xor
add
mov
mov
dec
mov
lret
loop
adc
adc
adc
mov
mov
into
push
ljmp
data16
arpl
sarl
inc
shlb
nop
jmp
out
cld
sbb
popa
andl
cmp
xchg
insb
xor
adc
sti
fsubp
lds
in
outsl
ja
sbb
lea
lods
push
ret
push
cmpsl
mov
mov
add
out
orl
pop
adc
std
sub
mov
stc
inc
xor
pop
sti
out
or
add
jnp
test
mov
call
jae
sub
add
fidivs
insb
mov
mov
repz
push
mov
jne
or
mov
cmp
stos
xchg
mov
sub
ljmp
dec
std
mov
cmc
pop
loope
aas
mov
mov
lret
enter
aas
mov
loop
fstpt
jg
xor
cwtl
jns
movsl
clc
mov
mov
mov
adc
add
repz
dec
dec
push
mov
jmp
jg
in
lea
lea
les
lods
btr
cmpsl
inc
jmp
xchg
pop
cmp
sbb
jno
pushf
in
push
fadd
mov
ret
cmpsl
mov
mov
mov
leave
xchg
and
and
dec
adc
mov
ss
sub
dec
push
mov
ds
pop
popf
imul
fnstcw
aam
adc
fdivrs
dec
arpl
jg
xchg
push
addr16
shrb
sbb
mov
jecxz
pop
lods
pusha
pop
pusha
push
stos
jle
sahf
cmp
out
cmp
es
aad
dec
xchg
sub
cwtl
sub
or
test
push
dec
and
movsb
gs
ret
bswap
sbb
cmp
loop
inc
xor
cmpsl
pop
adc
push
stc
pop
lods
shlb
dec
lds
sti
test
test
shlb
sahf
ljmp
cld
cmpsb
clc
movsl
adc
push
jae
jb
xchg
mov
add
pop
add
mov
sbb
add
js
jge
push
shrl
test
inc
mov
xchg
adc
or
loop
push
ljmp
idiv
xor
out
rclb
nop
and
scas
mov
xor
jne
out
inc
mov
mov
pop
test
call
iret
hlt
push
sbb
int3
gs
and
pop
xchg
in
call
inc
or
push
sub
mov
pushl
add
movl
or
pop
push
sub
outsb
inc
adc
shl
pop
loopne
pop
in
or
adc
mov
arpl
adc
into
jle
inc
mov
movsl
xor
sub
xchg
cmp
xor
or
push
hlt
push
cmpl
sub
jbe
inc
clc
imul
insl
je
cld
shll
and
loopne
sbb
sti
pop
in
iret
dec
xchg
loopne
lods
mov
rcll
mov
sbb
dec
mov
inc
out
mov
pop
pop
std
out
xchg
out
aas
jns
pop
fimuls
and
sbbl
sub
jmp
aam
mov
dec
outsl
insl
push
pushf
mov
lahf
push
cmp
push
pushf
cmc
push
arpl
xchg
ds
fnstsw
loop
andl
lds
out
pop
mov
push
ffree
adc
sub
xchg
gs
out
mull
leave
push
xchg
aam
in
dec
shll
pop
stc
jecxz
leave
add
sbb
daa
test
aaa
mov
or
mov
pop
popf
pop
or
aas
dec
dec
sub
test
pop
addl
cmp
iret
add
mov
xchg
iret
inc
adc
cwtl
lods
test
cltd
stos
pop
dec
shll
ljmp
mov
leave
int3
scas
pop
lea
fnstenv
jecxz
pop
cmp
scas
push
jle
imul
xor
sbb
test
add
pop
xchg
dec
pop
stos
pushf
jns
mov
mov
outsb
mov
mov
sti
or
lahf
lock
push
pop
push
sub
sahf
stos
fistl
jbe
sarl
das
inc
ret
cmc
mov
and
sarb
mov
ret
in
cmpsl
dec
xor
mov
pop
out
aad
push
lods
dec
push
inc
je
lods
out
sbb
mov
je
ret
cmc
sbb
stos
add
mov
xchg
scas
xchg
or
push
and
int3
das
sbb
mov
jmp
xchg
cmp
sti
fsubrp
add
int
int
mov
mov
add
sahf
add
lahf
ds
xor
push
jne
insl
loope
sbb
add
pushf
xchg
movswl
sub
mov
jle
mov
lcall
push
mov
mov
cmp
cmp
addb
into
fistpll
mov
jns
xorb
push
fdivs
ret
mov
adc
mov
mov
pop
dec
mov
mov
icebp
pusha
cmp
imul
aaa
sahf
aaa
pusha
jge
or
aaa
movsl
nop
sbb
pusha
stos
add
pop
adc
sub
cmpsb
dec
cmp
out
jbe
daa
sbb
ss
faddp
repz
mov
and
add
mov
movsb
mov
test
xor
loop
loop
stos
sub
jg
cmp
ss
ljmp
std
imul
das
iret
adc
out
js
ror
lahf
lods
pushf
mov
test
ret
nop
fwait
or
cmc
inc
or
dec
test
mov
sbb
pusha
loop
fwait
push
mov
std
lret
adc
addr16
adc
xchg
mov
mov
lea
or
xchg
leave
push
in
mov
mov
insb
jno
add
sub
aad
pop
mov
fidivl
cwtl
mov
sub
dec
adc
push
aam
jbe
sbb
xor
mov
decl
and
ds
jp
imul
dec
out
or
pop
sub
lahf
hlt
fwait
leave
mov
loopne
in
ret
pop
mov
inc
push
add
and
pop
mov
xor
gs
push
lcall
jns
xlat
xchg
push
cli
inc
scas
lock
cmp
and
dec
popf
movsb
daa
lret
or
dec
cmp
div
dec
movl
jne
or
dec
lods
int
data16
movsb
xor
ja
mov
mov
jae
into
insb
lret
in
addr16
dec
xor
fists
inc
jl
subb
test
out
sbb
cmpsb
rol
pop
mov
enter
pop
ret
ficompl
adc
rolb
xchg
sub
mov
outsl
xchg
push
test
cmc
lods
jnp
filds
cli
xchg
mov
inc
adc
cmp
das
ret
je
or
loop
inc
jb
in
add
repz
mov
cli
cwtl
inc
or
nop
push
lods
sbb
lock
sbbl
stc
pusha
xor
push
into
sbb
fsubp
rorl
out
jg
out
dec
add
mov
in
aas
cmpsb
cmp
daa
lret
mov
inc
sarb
add
jae
dec
and
fistpll
jno
adc
lods
or
jle
dec
lds
xchg
fistpll
arpl
call
aaa
sub
push
dec
fldcw
lea
pop
adc
mov
ds
add
ret
xchg
sbb
ljmp
push
add
jp
call
mov
inc
inc
pop
ss
push
enter
iret
add
iret
sub
cmpsb
fmuls
insb
test
push
jg
sbbb
mov
mov
pop
mov
cmp
int3
adc
or
jb
pusha
imul
pop
shlb
pop
or
or
sub
hlt
lock
jnp
xchg
ret
loop
push
rcrb
or
popa
or
adc
test
pop
les
mov
mov
std
lock
cmp
mov
je
lds
mov
push
pop
xchg
pop
insb
xchg
mov
clc
shrb
pushf
pop
mov
push
js
in
cmp
stos
xchg
mov
sub
adc
outsb
and
hlt
add
fimull
sti
movsl
arpl
imul
sbb
ret
push
fnstcw
pop
orl
and
rol
ficompl
and
and
mov
inc
lock
pop
mov
or
push
and
fcoml
cli
fdivrs
cmpsl
int3
or
jle
ret
jge
sarb
jne
in
mov
mov
in
mov
mov
dec
mov
pusha
cmc
xor
xchg
xor
xor
sbb
test
cmpsb
adc
push
mov
inc
int3
pop
xchg
jl
test
jp
jecxz
xchg
lret
outsl
mov
mov
iret
jmp
cmpsl
cltd
or
sub
dec
mov
and
std
jl
arpl
mov
dec
mov
insl
inc
mov
mov
cmp
into
fnstcw
sbb
adcb
jl
mov
jle
xlat
mov
jo
rclb
aad
mov
fsubl
jl
and
fs
and
loopne
andb
pop
int3
lds
lock
lods
iret
mov
add
fsubrl
pop
xchg
dec
pop
into
sbb
int3
xor
addr16
mov
cli
mov
add
pusha
mov
scas
lea
mov
add
xchg
xchg
cmp
xchg
ja
stos
sub
sbb
sub
stc
sub
sti
cmpsl
jno
or
in
out
inc
int3
mov
ja
mov
outsb
mov
add
call
icebp
negl
aaa
push
adcl
sbb
leave
repnz
cmp
loopne
adc
es
shlb
imull
jo
aam
fnstsw
xchg
cmp
dec
adc
lret
push
addl
mov
push
fsubl
test
jge
stc
inc
bound
mov
lret
pop
fidivrl
mov
popf
ficompl
sahf
mov
repz
pop
dec
subb
xor
pop
inc
test
push
jle
add
or
and
add
push
adc
add
or
pop
nop
mov
push
gs
cmp
pop
mov
sub
outsb
shrl
adcb
mov
sbbb
push
mov
xor
mov
test
cltd
jle
test
mov
and
ss
out
ss
int3
in
inc
flds
aad
xchg
xchg
xor
ds
addr16
jl
stos
mov
push
mov
or
repnz
cvtps2pi
stos
jbe
es
out
arpl
je
ds
xchg
enter
mov
mov
pop
je
mov
xor
pushf
aas
mov
sbb
add
dec
sub
lea
inc
pop
into
pop
adc
xor
inc
cwtl
jae
addl
and
xchg
cs
out
or
sti
xor
ja
push
inc
push
ljmp
in
dec
mov
add
mov
bound
icebp
in
lock
push
push
test
push
das
pop
insl
out
outsl
dec
les
stc
loope
or
stos
pushf
ljmp
mov
xchg
xor
iret
or
arpl
mov
add
or
jl
cmp
add
jnp
mov
mov
in
lock
scas
ds
xor
cmpsb
jns
xlat
push
insl
int3
xor
xchg
fwait
shlb
fwait
pop
mov
je
stc
xor
mov
cmp
lods
sbb
mov
sahf
inc
nop
mov
mov
adc
int
push
mov
outsb
cmc
into
sbb
sbb
repz
jne
popf
jbe
movsb
mov
xchg
pop
push
inc
mov
push
push
test
jp
push
scas
push
mov
inc
add
stc
push
xor
js
mov
aam
aad
jg
inc
repnz
lcall
pop
inc
and
sahf
mov
xchg
lcall
add
pop
and
cli
add
inc
dec
pop
dec
repz
or
pop
add
cmc
nop
loopne
repz
adc
jb
dec
pop
inc
and
loope
dec
arpl
subb
hlt
stos
cmp
dec
mov
mov
mov
clc
test
ljmp
cmp
fwait
ljmp
arpl
outsb
dec
add
lods
fnstsw
cli
sahf
shll
xor
shlb
jge
xor
dec
mov
xor
fdivl
push
mov
roll
mov
lods
mov
sti
lods
loopne
in
push
mov
xchg
jns
sub
sub
jae
outsb
inc
std
rorb
push
fiaddl
sti
jle
add
pop
dec
das
mov
dec
mov
decb
cld
jno
sbb
fdivs
fidivrs
pop
cmp
pop
lcall
pop
sarb
pop
mov
scas
add
test
aam
shl
pop
mov
test
iret
add
mov
push
dec
pop
pop
nop
push
cs
lcall
sbb
xchg
fsubl
fwait
ret
imull
fisttpl
es
sbb
sbb
mov
out
pop
outsl
mov
test
mov
pop
push
xor
imul
pop
int3
jge
out
xchg
push
or
mov
rorl
and
daa
or
sub
mov
inc
std
aaa
scas
rep
fs
cmp
icebp
mov
xor
jb
in
cltd
pop
mov
xchg
mov
inc
lcall
dec
and
dec
icebp
outsb
fmulp
addr16
cmpsb
sbb
rolb
xchg
pop
daa
cwtl
xor
aam
mov
or
into
mov
or
mov
push
mov
add
repnz
xor
mov
push
pop
mov
imul
add
popa
and
lcall
and
jl
jmp
xchg
dec
dec
mov
xchg
out
imul
filds
ret
adc
lcall
sbb
sub
push
enter
cmp
pop
and
xchg
pop
sbb
mov
adc
je
in
idiv
rorl
mov
mov
into
or
out
fdivrs
leave
dec
popa
push
mov
mov
addr16
fdivs
in
mov
mov
push
jle
mov
mov
movsl
sti
ljmp
jge
xchg
cmp
cmp
and
mov
push
imul
xchg
fs
out
andb
ljmp
mov
xor
jno
fdivrl
add
sub
scas
push
mov
adc
in
loopne
xor
pushl
cwtl
divl
push
mov
shl
xchg
pop
cmp
fcompl
gs
and
int
pusha
dec
mov
into
dec
bound
adc
sub
out
xchg
mov
aaa
mov
mov
xchg
popw
outsl
out
cmp
adc
jo
xchg
push
fnstcw
xor
xor
push
mov
or
rclb
sbb
push
dec
inc
pushf
push
mov
dec
lahf
xor
lahf
mov
push
pushl
xor
div
mov
std
fs
or
push
pop
jg
enter
adc
lds
xchg
loope
cmpsl
out
jmp
in
mov
std
fcompl
imul
mov
ficompl
in
or
scas
jle
repnz
daa
cli
adc
cli
in
into
les
stos
fwait
iret
aad
cwtl
cmpsl
fs
leave
loop
movsb
mov
stc
adc
sbbb
xor
std
lahf
adc
dec
fdivs
push
push
mov
jbe
call
imul
push
ret
popa
test
add
push
pop
jmp
sbb
inc
jp
or
pop
rcrl
mov
notb
ret
out
and
push
inc
sbb
fcmovbe
xor
cwtl
rcrb
mov
push
cmpb
pop
mov
jo
push
adc
xchg
pop
dec
jbe
jo
pushf
or
popa
test
push
data16
ljmp
cmpsl
xor
cltd
jb
andl
out
mov
aam
into
inc
and
mov
cmovbe
andb
xchg
jge
or
das
fisttpl
nop
and
in
mov
outsl
xchg
popa
pop
xlat
jae
lret
cmp
push
xor
icebp
push
adc
cmp
test
jnp
add
xlat
mov
xor
xchg
pusha
pop
js
sub
repnz
inc
lea
jb
add
andb
adc
scas
xchg
aaa
loope
pop
mov
adc
or
dec
dec
mov
jb
enter
int3
push
repz
repz
cmp
mov
inc
add
iret
push
jmp
jmp
movsl
fwait
xor
xchg
xchg
jnp
fisttpl
mov
cmp
adc
cmpsb
enter
les
xor
lea
pop
dec
idivl
jl
push
xchg
repnz
ss
arpl
jno
push
out
jb
jmp
pop
das
adc
cmpsl
add
pmullw
pop
test
lahf
call
and
jae
adc
sbb
mov
cli
add
mov
xor
lock
cld
into
push
cmp
xchg
ret
cmp
stc
fldcw
cmp
andb
push
cwtl
add
and
lods
jo
mulb
outsl
lock
adc
call
sbb
add
jl
cwtl
push
sbb
mov
insl
sub
dec
js
pop
cltd
fbld
add
cld
outsb
andb
lds
insb
push
rep
jecxz
rorl
add
inc
xor
push
daa
mov
das
arpl
xchg
fsts
loope
lods
adc
or
test
jl
mov
rcl
jecxz
or
mov
push
inc
dec
xchg
pop
inc
cmp
aad
sub
test
sahf
xchg
push
inc
ss
idiv
mov
pop
add
jge
mov
mov
lcall
test
loopne
add
xchg
jnp
adc
mov
push
sti
add
cld
push
push
pop
sti
stos
aad
jbe
add
cmp
inc
jg
adc
sbb
hlt
jne
stos
popf
js
dec
adc
or
iret
pop
mov
sub
push
mov
xor
outsl
lret
mov
jl
cmc
push
ds
cld
cmp
pop
rcr
jecxz
mov
fsubp
inc
xor
xchg
push
ficompl
scas
imul
loopne
fiadds
sub
inc
ret
std
mov
outsb
fidivs
push
ljmp
sub
outsb
mov
push
test
stc
lods
test
xchg
fdivs
cmp
lahf
adc
mov
repz
call
xor
mov
nop
stos
shll
cmp
add
xchg
pusha
cld
xchg
jns
lock
je
repnz
push
mov
btl
or
mov
lahf
or
les
jno
jae
and
push
aad
pushf
sub
out
push
pop
xor
lock
jge
xlat
cwtl
aaa
pop
jne
push
pop
cmp
fwait
in
hlt
mov
test
lret
subb
mov
mov
sub
rclb
jle
pop
lret
sbbl
jbe
enter
dec
xor
jecxz
and
push
loop
jle
insb
scas
mov
cmp
xlat
xchg
xchg
ljmp
adc
jae
cwtl
psraw
dec
pop
cmp
pop
push
fisubrl
sbb
scas
popf
cmp
mov
cmpsl
fxch
xor
dec
cmpsl
pop
dec
test
jecxz
mov
aam
outsl
dec
bnd
pushf
cmp
xchg
jbe
insl
or
cmp
fidivs
aaa
xchg
dec
jp
mov
sub
sbb
sbb
mov
lcall
push
adc
push
sub
pushf
inc
sbb
inc
adc
sub
je
cmp
cmp
sbb
inc
cli
out
mov
cmp
adc
into
test
inc
cltd
in
cmp
fwait
xor
sahf
ss
fildll
in
aad
inc
and
push
push
cmp
cmp
mov
mov
repnz
inc
mov
mov
mov
and
jge
dec
and
sbb
mov
xor
out
inc
jl
add
lock
cli
gs
dec
leave
icebp
sti
mov
cmc
fcmovu
jne
sti
cmp
ss
js
add
pop
adc
iret
in
or
push
adc
lret
xchg
sbb
adc
add
xchg
cld
cmp
addl
in
or
in
add
popf
out
cltd
adc
in
pop
in
jge
xor
shlb
and
mov
fwait
clc
jbe
int
jno
insb
dec
sub
adc
add
inc
lahf
mov
fwait
pop
mov
push
push
enter
sub
dec
mov
pop
imul
jns
dec
xor
cli
dec
jae
imul
and
push
xor
test
cltd
mov
incl
adc
outsb
mov
push
call
addb
add
jg
enter
pop
push
fdiv
sub
fwait
cli
loope
ja,pt
xor
or
adc
insl
mov
hlt
adc
in
inc
int3
js
xchg
call
pop
dec
mov
jecxz
push
xor
pop
inc
jo
pop
addr16
je
nop
dec
cmp
jmp
stos
push
cmp
push
lea
sbb
in
add
fcmovnu
sahf
push
les
pop
or
xor
aad
lret
push
fildll
outsb
test
add
xorb
mov
add
adc
das
fldl
addr16
js
stos
into
outsl
cmc
sub
mov
lock
insb
add
mov
dec
jl
loop
nop
mov
cli
xor
aam
pop
insb
aas
cwtl
popa
je
js
inc
mov
out
stc
jecxz
in
sbb
xor
mov
inc
xchg
inc
push
push
jge
or
dec
insb
pop
xor
rclb
popf
sbb
movsb
out
sub
mov
aam
ret
js
dec
lahf
fwait
xlat
scas
mov
xor
in
sub
popa
fnstsw
pop
xlat
outsb
xchg
imul
bound
ja
and
push
lahf
lret
cli
jno
add
cmpsb
xor
int
fbstp
mov
push
outsb
push
scas
test
jmp
push
mov
mov
xchg
leave
dec
aam
jl
fisubrs
mov
ja
arpl
cmp
and
jns
stos
setbe
adc
push
nop
sub
mov
scas
adc
scas
adc
sbbb
ja
stos
lret
es
rcl
imul
repz
out
cs
adc
cld
call
fst
fisubrs
push
and
scas
jne
and
push
adc
jns
js
sbb
cli
ficoms
add
pop
stos
outsl
dec
or
jbe
jle
in
fldl
stos
int3
call
rorb
int3
pop
jnp
call
jb
movsl
adc
cmp
mov
rcrb
dec
cmp
sub
and
pop
loope
sarb
and
or
mov
adc
arpl
xor
adc
ljmp
stos
cmp
addr16
pop
mov
xchg
out
xchg
das
rorl
imull
insb
xor
rcl
les
push
jae
add
push
js
jle
cmpsl
and
pop
jmp
and
stc
arpl
jecxz
imull
adc
pop
test
sahf
push
stos
testb
xlat
xchg
data16
out
pusha
adc
push
fstps
pop
daa
mov
pop
lods
stos
test
scas
jne
xor
inc
inc
out
nop
xchg
out
sub
arpl
add
out
and
cmp
or
mov
mov
stos
cmp
push
cmp
ss
iret
pop
mov
push
mov
inc
and
lods
pop
cmp
mov
xchg
std
shl
movsl
jg
pop
mov
mov
aad
cmp
dec
and
add
in
cmp
lcall
dec
mov
xchg
or
jae
inc
scas
imul
sub
adc
aaa
ficoms
test
inc
inc
sub
je
movsb
insb
jbe
xchg
inc
mov
xchg
push
push
push
sti
jp
push
lds
inc
mov
push
ds
test
in
push
xlat
dec
xchg
popf
adc
sahf
mov
add
iret
popa
int3
sar
adc
pop
dec
mov
or
pop
mov
aas
test
xor
push
lds
sbb
pop
xor
insb
mov
div
fnstsw
into
lahf
or
mov
sbb
and
push
andl
or
mov
gs
xchg
and
sbb
sub
or
fdivrl
ss
lahf
out
add
jno
movsl
mov
ds
xor
xchg
jg
pop
loop
xor
bound
cli
test
not
or
xchg
cmp
cmpsb
mov
test
les
xor
jo
cmpb
add
dec
or
repnz
sar
popa
dec
jno
cmpsb
mov
daa
xchg
imul
xchg
cwtl
xor
roll
or
push
test
jae
inc
pop
jg
into
hlt
lret
rcr
cmp
inc
dec
orb
cli
inc
lret
mov
mov
push
push
pop
cmp
pop
xlat
push
push
cmp
sub
inc
or
scas
add
outsl
mov
xor
fnstenv
arpl
jne
or
add
push
dec
pcmpgtw
pop
sub
lods
les
int3
pop
push
lock
push
mov
and
pop
dec
cmc
test
lock
gs
xchg
or
cmp
orl
lock
xor
shrl
xchg
insb
insb
jae
pop
add
flds
jo
fwait
mov
inc
pop
inc
stc
cmp
xlat
rol
ss
jecxz
mov
mov
sub
rorb
loopne
inc
jbe
cmp
jo
leave
mov
ficompl
repz
xorl
js
mov
xor
mov
push
sbb
repz
mov
mov
mov
test
xchg
popf
loopne
leave
clc
and
pop
loopne
push
sbb
fdivl
jmp
sahf
push
idivb
mov
jbe
fimull
ret
mov
mov
inc
rcr
pop
iret
push
fistpll
xorl
lahf
jnp
bound
push
lods
lods
jae
push
test
adcl
fcoms
out
pop
dec
jbe
inc
sub
rol
push
lret
sub
push
and
fimull
iret
add
icebp
aaa
gs
mov
lret
out
xchg
xchg
cmp
jbe
push
inc
cmp
gs
xchg
mov
ja
add
mov
nop
pop
orl
call
push
lods
sbb
jb
iret
mov
inc
rcll
daa
cmp
insb
shll
outsb
add
cld
push
aam
sbb
test
add
mov
pop
xchg
xchg
jle
cwtl
out
dec
inc
mov
ss
lods
inc
pop
int
lret
or
xchg
adc
pushf
inc
movsb
fstps
imul
mov
mov
iret
mov
jo
adc
and
pop
sbb
inc
lea
notb
repz
dec
sahf
stos
dec
inc
add
test
loope
push
adc
pop
push
dec
rcll
adc
sbb
int3
push
dec
test
mov
enter
jno
push
or
mov
mov
mov
ljmp
or
xchg
fstps
addr16
pusha
mov
adc
fldcw
out
and
cli
jl
push
les
or
ljmp
inc
dec
sub
inc
cmp
sti
cmpsb
decb
add
in
loop
lods
push
inc
jecxz
insl
ret
xchg
test
add
imull
aam
xchg
jg
cmpl
imulb
pop
sahf
sti
pop
mov
dec
push
mov
jp
jae
inc
jae
scas
cmp
mov
pushf
in
xor
addr16
call
cs
dec
jle
or
sub
jge
adc
into
lcall
orl
aas
xchg
xor
dec
aas
mov
jle
shrl
int3
dec
jecxz
test
mov
xchg
int
pop
lcall
ss
testb
push
testl
in
sbb
les
and
dec
xchg
add
cmpsl
jl
movsl
ds
jbe,pn
out
pop
or
call
andl
je
in
or
fldl
aaa
jmp
into
aaa
xchg
cmp
cld
popf
push
sbb
testl
mov
sub
outsl
rorb
mov
mov
cmp
loop,pn
lcall
add
test
xchg
hlt
iret
jecxz
test
push
les
test
mov
loopne
mov
stc
and
push
pop
insl
lret
xor
jg
iret
rclb
sub
jg
mov
xor
popa
fwait
nop
adc
xchg
sub
rorb
sahf
cmp
mov
mov
test
jge
adc
add
stos
pop
jno
sbb
or
repz
scas
push
subb
mov
mov
xchg
call
sar
push
roll
or
test
in
xor
adc
insl
fdivrl
pop
insl
rolb
sub
push
test
mov
aaa
lret
shrl
int
lea
imul
lea
hlt
movb
cmc
pop
ja
fisttpl
in
cmpsl
add
jg
nop
cmpsl
repz
adc
scas
aaa
stc
sbb
out
adc
lcall
in
jns
or
sbb
test
xchg
dec
in
push
movsb
outsb
xchg
sub
jmp
popa
int
scas
xchg
aad
test
out
fistpl
arpl
pop
mov
sti
push
sti
lret
mov
xchg
cwtl
mov
mov
cs
mov
shlb
cli
add
sarl
in
mov
cltd
xchg
ja
dec
lea
je
add
pop
mov
and
fisttpll
in
and
xlat
adc
lret
rcrb
cmp
popa
sub
pop
jno
ljmp
je
sti
cmc
stos
push
stc
icebp
and
push
mov
cld
xchg
cmpsl
jae
jnp
or
or
inc
fisubrs
std
xor
lret
push
testb
dec
and
sbb
scas
push
aam
in
inc
loope
cmp
sub
lea
pop
out
lods
jno
pop
xchg
filds
and
sbb
out
fdivr
mov
mov
daa
mov
add
ljmp
pop
push
add
jle
push
mov
pop
das
stos
into
je,pt
add
call
sbb
loope
cltd
adc
xor
add
pop
stos
popf
xchg
stos
cltd
out
ljmp
push
xor
jo
sub
or
push
leave
sub
fmuls
fstpl
imul
push
fcoml
mov
mov
sbb
jno
bound
imul
and
jmp
adc
cs
mov
cmp
add
rolb
and
adc
dec
dec
mov
cmc
pop
push
jbe
test
lret
aas
xor
push
divb
pushf
cmp
mov
cmp
and
add
push
push
and
pop
lret
in
fsubs
out
and
jb
lods
je
mov
aad
addr16
mov
sub
push
inc
mov
sbb
inc
in
or
lcall
outsb
pop
mov
xchg
add
and
out
inc
and
arpl
jecxz
jl
adc
imul
movsl
mov
mov
or
lret
daa
inc
inc
jl
xchg
in
xchg
mov
jp
sub
xchg
inc
imul
lcall
es
pushf
adc
sti
outsl
cld
loope
test
mov
imul
ja
call
stc
adc
jb
fildl
ficoms
cmp
xor
dec
dec
push
add
sbb
or
mov
cmp
sbb
mov
cwtl
js
sub
cmpsb
fdivr
adc
lret
flds
push
push
test
daa
inc
push
inc
iret
imul
sbb
or
cltd
aam
jnp
lods
pop
in
lcall
or
dec
nop
je
add
fldt
fcomp
dec
je
push
cmp
in
add
mov
mov
sti
cmp
mov
rcrb
adcb
insb
push
jno
fmull
mov
adc
xchg
inc
mov
adc
lods
iret
sub
scas
aam
enter
rorl
sbb
pushf
div
in
cltd
cwtl
scas
pop
repnz
push
push
out
imul
repz
lcall
fimuls
lea
out
mov
cli
lahf
or
adc
pop
fmull
mov
mov
into
sbb
addb
pop
or
mov
adc
in
adc
push
movsl
dec
inc
and
es
xchg
vmread
mov
into
and
mov
cmpl
xchg
test
push
neg
pop
lock
mov
mov
aas
xor
or
or
push
test
cmp
jmp
mov
ss
cwtl
and
enter
repnz
imul
mov
jne
pop
inc
fldcw
mov
mov
add
mov
bound
cltd
dec
pop
cmc
and
lahf
fisttps
sbb
add
lcall
inc
out
cltd
jecxz
jbe
push
or
inc
sbb
xchg
or
cmpsl
icebp
sub
mov
push
cld
data16
sub
push
test
sti
cmp
pop
xor
pop
data16
push
fsubs
add
push
xchg
mov
xor
in
push
jl
or
pop
sub
xchg
nop
xchg
lea
or
ret
aad
push
push
in
std
lcall
dec
sbb
ror
push
mov
loope
insl
ret
loopne
outsb
rcrl
adc
adc
psubb
jo
jmp
or
cmp
jae
fsubs
enter
or
sub
push
mov
ret
inc
xor
or
xchg
pop
cmp
cwtl
sub
jnp
rorb
int3
fdivr
in
sub
int
push
rcl
mov
fdivl
rcr
pop
es
sub
fisttpl
mov
subl
mov
pop
pop
outsb
movsl
mov
cmp
dec
in
adc
fwait
fs
addr16
mov
push
push
mov
enter
out
mov
cmp
ljmp
negb
xor
inc
jae
cmp
mov
jle
or
mov
xchg
inc
xchg
in
sbb
xchg
loopne
pop
dec
arpl
outsl
xor
xchg
fs
pop
mov
rcll
mov
xor
out
push
outsl
push
outsb
pop
dec
xchg
push
jns
dec
pop
icebp
and
notl
loop
test
jns
movsb
fucom
add
xor
sti
testl
jae
jg
and
iret
scas
or
loope
or
jns
and
dec
pop
mov
pop
xor
mov
popa
mov
sub
push
inc
sbb
push
push
fsubrl
jle
aaa
je
in
inc
cwtl
sub
adc
xorl
mov
dec
out
sub
and
push
movsl
push
in
mov
jmp
add
jp
cmp
notb
push
adcl
mov
inc
ror
je
push
dec
and
aam
jb
and
call
cmp
push
push
sti
outsb
mov
daa
enter
cmpl
int
test
es
clc
push
mov
or
jecxz
mov
rcrb
enter
cld
out
inc
mov
jb
add
in
cmp
push
sbb
push
cmp
ljmp
insl
inc
sarl
mov
xchg
xchg
mov
dec
dec
scas
xchg
pop
and
cmp
cs
sbb
les
std
mov
and
add
xchg
sbb
sub
add
pop
push
mov
pop
mov
enter
shr
fstps
mov
lods
incl
sub
es
loope
sbb
fsts
adc
test
imul
test
dec
sbb
jge
fdivp
sub
inc
outsl
icebp
jb
xchg
jp
popf
jb
inc
cli
sahf
arpl
loop
sub
dec
xchg
inc
and
rorl
or
nop
dec
fcoml
out
add
leave
icebp
cs
fidivl
jae
cmp
fidivs
or
mov
mov
mov
mov
dec
dec
sbb
add
daa
dec
mov
lret
js
pusha
xchg
fildll
sub
and
xchg
insb
das
rorb
ds
lret
fcmovnbe
jbe
dec
fcomip
xor
dec
push
js
repnz
jo,pt
xchg
xchg
dec
sub
mov
or
pusha
sub
mov
or
xchg
mov
in
gs
ret
pop
adc
shrb
andb
add
adc
pop
sub
ljmp
in
xchg
test
mov
fsub
push
sub
push
out
ljmp
insl
jecxz
daa
push
sub
jns
sbb
cmp
or
icebp
xor
dec
xlat
inc
loope
insb
fldz
mov
push
cmpsb
xor
repnz
jb
cmp
inc
cmpsb
add
ljmp
xor
or
cmp
and
js
in
xchg
stc
imul
fwait
pop
dec
outsb
and
std
push
mov
adc
ja
insl
fbld
xchg
in
sbb
popl
mov
mov
jl
dec
dec
out
push
jnp
imul
cli
es
dec
shrl
stos
popf
in
mov
jno
cmp
inc
negb
enter
sti
popf
inc
pop
in
fnstenv
ret
lret
push
or
push
pop
jbe
dec
adc
aaa
decb
sub
lock
stc
lods
int3
call
rol
push
aam
add
stos
ljmp
ds
ret
lahf
sti
enter
adc
sbb
xor
mov
mov
or
xor
or
int
roll
mov
shrb
out
mov
mov
lock
int
cltd
lcall
and
push
pop
mov
test
and
mov
cmp
ljmp
mov
test
dec
pop
cmpsl
push
popa
std
push
pushf
xor
ds
xchg
push
loopne
shrb
into
call
or
xor
mov
test
adc
out
ficoml
xor
rolb
or
inc
or
add
fwait
sbb
jecxz
std
cmp
test
pop
mov
jno
jnp
add
jecxz
mov
ss
js
push
and
rclb
mov
gs
incb
lock
insl
lcall
xchg
addr16
jns
and
repz
repnz
mov
xchg
fsubr
aaa
fidivrl
gs
add
jno
arpl
jmp
inc
std
mov
jb
push
jae
icebp
jmp
and
cmc
popf
repnz
mov
lock
int
mov
mov
xlat
mov
sub
jmp
ljmp
pop
repnz
leave
mov
xor
inc
pop
rorb
xchg
fiaddl
insb
sub
adc
movsb
popa
rclb
mov
popa
rcll
fcoms
cmpl
cmpsl
push
test
sbb
lret
push
ja
fcmovbe
je
lods
ss
test
cmp
test
nop
fdivrl
adc
jmp
xor
cmp
neg
lcall
leave
cmpsb
or
in
sub
cs
push
push
adc
fldenv
adc
jecxz
in
fbld
dec
cmpsl
xor
jg
jmp
lret
sub
pop
lahf
push
sbb
daa
rclb
push
mov
add
out
xchg
ljmp
cmc
xchg
int
pushf
pusha
jl
mov
dec
mov
mov
mov
sbb
xorb
mov
sbbl
mov
mov
mov
add
mov
lahf
jg
and
fwait
popf
xor
pop
rcrl
loopne
jbe
xchg
les
mov
mov
dec
pop
push
mov
dec
inc
adc
leave
sub
cmp
sti
cmp
push
dec
cmp
mov
es
pop
dec
mov
jge
into
repnz
enter
pop
mov
sub
lret
lret
lret
inc
mov
lds
sub
jns
je
lcall
stc
cmp
repz
jno
fs
inc
std
popa
in
pop
pop
loope
mov
xchg
xchg
push
mov
fs
add
dec
iret
mov
out
popf
sti
xlat
inc
mov
adc
fdivs
xlat
movsl
jb
test
dec
and
push
push
mov
lods
psubb
fldenv
out
sub
mov
jae
cmp
mov
push
push
mov
outsl
xor
pop
sbb
popa
or
mov
adc
in
lock
gs
xchg
pop
cmp
sbb
in
sbb
cmp
cmp
add
cmp
sub
jmp
inc
daa
push
cwtl
inc
mov
lahf
outsb
xchg
dec
movb
pushf
mov
mov
loop
sbb
mov
mov
xchg
and
sub
inc
shrb
mov
and
push
xchg
mov
test
jge
inc
or
adc
push
sbb
adcl
xchg
and
jb
cwtl
push
jecxz
inc
mov
jnp
sar
mov
shlb
cmp
push
jae
dec
inc
sub
negb
mov
xor
push
stos
add
sbb
sbbb
and
and
imul
dec
ljmp
push
jmp
and
or
push
lret
pusha
or
call
in
cltd
mov
xor
fucom
into
cmp
cmp
inc
icebp
xlat
mov
sbb
cmpsl
sub
or
cmpsb
shll
mull
push
mov
add
fdiv
inc
and
push
mov
push
test
enter
ss
fistpll
in
jg
and
or
add
pop
sub
mov
adc
addr16
mov
pusha
movsl
pop
push
mov
mov
and
pusha
lds
imul
add
icebp
in
sub
push
mov
dec
fists
dec
lods
lcall
mov
ret
lret
ja
or
in
ffreep
leave
jb
fnstsw
jle
push
in
in
mov
mov
and
mov
or
test
mov
sarl
push
pop
sbb
sarl
cmpsb
add
imul
movsl
push
jecxz
xchg
xchg
xchg
xchg
stos
mov
dec
dec
dec
fcomi
jg
mov
cmpsl
jmp
mov
std
push
ret
shrb
push
rorb
out
mov
pop
iret
xor
lods
xchg
xchg
fwait
andb
inc
jae
mov
and
or
aad
call
bound
sbb
jle
testb
movsl
mov
in
fcomip
add
jge
push
popa
sahf
daa
out
or
fs
pop
lret
int3
imul
lods
mov
sbb
inc
mov
mov
in
mov
jo
les
push
sub
xchg
add
jg
pop
repz
xchg
push
push
xchg
in
movsl
shlb
out
mov
pop
sahf
xchg
mov
push
pushf
sbb
testl
daa
push
and
out
icebp
jg
jmp
loop
push
cld
fsubl
pushf
mov
or
pop
sti
mov
dec
xor
mov
sti
movsl
mov
push
xchg
sahf
mov
stc
enter
sub
inc
sub
lock
std
pop
mov
jge
fbstp
mov
and
lock
mov
jne
mov
sbb
pop
jle
mov
cli
or
cltd
scas
xor
push
push
popa
hlt
add
cmp
cmpsb
or
aas
mov
out
cmp
in
loopne
pop
lock
mov
daa
ret
gs
test
xchg
jo
loope
stos
inc
mov
pop
cmpsb
pop
jnp
aaa
ja
push
insl
jg
mov
in
mov
sbb
dec
bound
iret
mov
mov
jbe
mov
mov
ljmp
data16
mov
popa
addl
xchg
adc
push
sti
or
push
mov
mov
push
loope
or
outsl
pop
inc
daa
cmp
out
adc
fs
and
sbb
xor
jle
fsubl
ffree
dec
cmp
xor
fistpl
das
inc
bound
xchg
add
xor
mov
insb
pop
popa
aad
ljmp
add
ja
sbb
inc
pusha
leave
bound
mov
out
pop
fucomip
jl
cmp
xchg
and
jecxz
pop
fidivl
and
inc
mov
sbbb
sbb
ret
aam
xchg
sbb
lcall
hlt
and
pop
cmpsb
fmull
xor
jecxz
cs
les
loopne
call
inc
cmpsl
adc
cmp
xchg
jp
ja
mov
cltd
cmp
inc
imul
mov
aad
xor
mov
lea
add
out
mov
out
imul
cltd
lock
ret
rcrl
pop
adc
mov
mov
ja
ret
jge
and
cmp
jecxz
fsubs
int
out
inc
sub
stos
mov
cs
push
push
mov
mov
push
jp
insl
ss
cmp
adc
sbb
popf
pop
shl
cmpsb
xchg
pop
pop
sti
dec
xchg
je
or
cmp
mov
lcall
movsl
sti
mov
daa
addr16
into
clc
and
ds
cmpsb
mov
mov
and
jmp
ja
loop
js
mov
push
icebp
loop
mov
add
icebp
insb
push
test
cmp
nopl
std
push
xchg
sub
cmp
inc
or
jns
rep
js
adc
into
add
scas
pusha
adc
mov
adc
int
test
dec
mov
fucomi
out
mov
jae
push
jb
testl
out
cmp
out
movsb
push
push
sbb
jge,pt
fxch
pop
addr16
int
repnz
adc
mov
xchg
into
xor
outsl
fs
aaa
ljmp
outsl
loop
inc
or
xor
lock
addr16
mov
and
test
fcomip
insb
icebp
mov
stos
pop
outsb
mov
xchg
imul
mov
bound
stos
xchg
sbb
lock
daa
mov
jne
xor
fwait
ljmp
push
enter
cmp
sub
jl
in
shll
stos
pop
add
push
imul
sbb
je
jae
push
rcrl
ss
es
cwtl
sbb
sbb
call
psubw
lahf
adc
mov
fs
pop
push
lods
xchg
mov
fs
scas
test
sbb
jg
pop
sbb
push
das
xor
sub
imul
insl
lcall
lods
push
outsb
cmpsb
aad
pop
cs
jecxz
cmp
icebp
pushl
shlb
dec
cmp
mov
js
or
inc
cmpsb
cmp
dec
int
iret
jle
into
call
outsl
mov
and
andb
mov
jnp
mov
sub
xor
mov
lret
push
or
cmp
sbb
sub
imul
jle
test
adc
add
pop
imul
sarl
or
sub
mov
pop
xchg
pushf
mov
fst
add
fsubr
adcl
cmc
cli
lods
clc
out
xlat
sub
or
mov
sbb
rclb
aas
and
jnp
sub
add
pop
dec
adc
xchg
out
mov
rolb
mov
mov
mov
aaa
jns
and
dec
jmp
insl
data16
sub
cmp
xor
jge
rol
sbb
dec
call
jp
push
push
std
jb
or
cld
ss
pop
loopne
pop
hlt
mov
sbb
icebp
scas
hlt
cld
mov
mov
icebp
adcb
push
sub
and
fldt
push
jno
lods
rclb
mov
leave
xchg
push
jmp
gs
in
mov
je
std
sbb
cmpl
mov
push
cmpsb
add
dec
or
xchg
dec
sub
push
cltd
lret
imul
cmc
adc
std
cmc
loopne
enter
push
lea
adc
ret
and
add
pop
fists
push
rcr
aaa
das
fcoml
pop
ljmp
or
ss
pop
jg
fisubrs
les
and
out
lret
push
mov
push
ja
add
pop
shll
rolb
inc
jo
mov
lahf
adc
sbb
cld
push
add
scas
mov
lcall
mov
or
pop
mov
dec
fidivrs
mov
sbb
mov
ljmp
and
dec
push
xchg
sti
fsubr
jo
lods
sti
dec
mov
pusha
test
sbb
stos
mov
faddl
jnp
shll
or
fidivrl
out
cmp
loop
add
mov
jmp
push
jne
jmp
shll
cld
fdivs
add
jns
adc
xchg
cmp
aam
push
je
mov
out
jne
jne
mov
cs
cmpsb
mov
pop
rorl
bound
sarl
xchg
xor
lds
xor
stc
addr16
sbb
int3
and
push
hlt
xor
out
cs
pop
mov
jae,pt
cmpsl
inc
jno
push
cmp
pop
mov
push
ljmp
xor
jmp
out
test
rcll
out
mov
popf
imul
or
cli
icebp
ror
cmpsb
cmp
push
sub
add
and
xchg
xchg
sbb
ds
and
popa
popa
loop
mov
push
cwtl
in
out
ss
or
mov
les
data16
cli
lds
cli
pop
xor
imul
jp
ljmp
dec
sahf
roll
mov
sbb
adc
mov
push
cmp
push
cli
aam
ja
and
jnp
pop
sbb
cld
jg
jp
addl
std
clc
pcmpeqb
and
cmp
dec
aam
ret
iret
mov
sub
sbb
or
addb
or
push
js
arpl
sbb
jp
jmp
je
mov
push
scas
dec
push
iret
dec
gs
mov
fnsave
sub
aas
jge
cmp
rcl
cltd
lret
dec
xchg
arpl
fistl
xchg
add
xor
popa
and
cmpb
orb
call
arpl
pushf
scas
fdivs
pop
mov
sbb
jmp
fnsave
xor
add
pop
inc
movsl
loop
jg
mov
aam
into
scas
insb
mov
adc
and
stos
addl
outsb
dec
jp
mov
pop
xlat
inc
lock
inc
aam
pop
js
std
pop
or
and
sti
lret
xchg
pop
dec
cltd
sbb
sbb
cmp
xor
cmpsb
ret
sub
movsb
xchg
cltd
jb
in
mov
jns
shrl
call
out
sbb
push
les
fdivp
pusha
movsb
insl
push
sbb
cmp
cmc
into
ds
les
adc
sbb
mov
lahf
loope
bound
js
cmp
stos
jl
adc
shrl
or
rolb
cmp
pop
dec
ret
hlt
test
enter
loop
mov
stos
lahf
jecxz
lret
stos
mov
fwait
and
pop
mov
mov
mov
stc
lods
test
cld
in
xchg
in
ss
icebp
hlt
xchg
test
je
pop
sub
insl
test
mov
jmp
cmp
bound
leave
add
sub
push
lock
and
aad
cmc
add
mov
sbb
enter
rolb
pop
sub
xlat
push
out
jae
push
xchg
mov
leave
call
adc
cwtl
mov
into
out
nop
mov
sahf
push
dec
jnp
fldcw
adc
jb
push
lcall
jecxz
imul
ss
loopne
addb
mov
gs
fmuls
mov
push
lds
cmp
stc
push
stc
enter
sbb
das
cmp
mov
xor
loopne
sbb
shlb
jns
inc
fistl
push
int3
scas
fldenv
pop
mov
and
or
outsb
xor
mov
enter
push
js
lea
push
cmp
and
xchg
pop
sub
jbe
adc
xchg
test
jg
mov
add
pop
test
xchg
or
adc
ja
xor
ljmp
insl
loop
aam
jecxz
add
adc
pushf
push
scas
cmp
fwait
jmp
add
fisubrs
jle
movsl
adc
add
xor
mov
gs
push
mov
loope
jmp
mov
das
pop
mov
fnsave
dec
filds
fsts
dec
cmc
push
dec
loope
loop
addr16
movsb
mov
scas
cmp
aas
mov
adc
cmp
xchg
xchg
and
push
pop
les
cld
add
out
sub
mov
xor
flds
push
jo
push
push
mov
pop
xchg
dec
jp
shll
ds
jmp
in
arpl
or
adc
jge
pusha
sbb
mov
mov
pusha
dec
push
adc
sbb
inc
sbb
lods
cmpb
out
xor
pop
stc
mov
mov
xor
dec
jecxz
shl
mov
mov
inc
pop
or
rcl
aad
sbb
movsl
cs
sahf
push
roll
and
fadds
ret
push
cmp
and
xchg
icebp
and
sbb
stc
outsb
mov
int3
out
push
loopne
mov
ds
in
jmp
rcr
pop
cmc
and
dec
aas
ror
cmp
jmp
jns
jne
sub
add
iret
lret
jecxz
add
fxch
push
pcmpgtb
sub
or
sub
xor
pop
popf
jp
std
dec
leave
inc
fisubrs
out
xchg
sbb
shlb
mov
fnstsw
in
add
inc
insl
pushf
out
xchg
jg
arpl
scas
cld
sbb
into
jno
fsubs
lods
push
add
xchg
jo
test
cmpsl
addl
clc
pop
outsl
movsb
sbb
les
arpl
mov
pop
sbbl
mov
add
push
cmc
fnstcw
gs
xchg
rcr
push
sub
sahf
dec
push
mov
xor
xor
and
filds
add
xor
jge
data16
or
cmpsb
inc
jle,pn
lea
mov
jp
loopne
xor
gs
mov
ja
outsl
jmp
push
sbb
mov
outsb
hlt
std
arpl
add
loop
mov
ja
ds
inc
inc
mov
clc
xchg
mov
cli
inc
scas
iret
adc
add
xchg
pop
in
gs
out
out
cwtl
bound
and
cs
add
aas
jge
and
imul
loope
inc
cwtl
push
and
mov
mov
fwait
rcrl
sbb
sub
and
lods
in
or
repnz
stos
pop
cmp
lods
jge
inc
xor
into
cmp
enter
xor
jp
fimull
inc
or
mov
mov
fsts
outsl
xor
xchg
int
rcll
mov
and
loop
es
nop
fdivr
mov
pop
and
pop
inc
je
xchg
inc
xchg
testb
daa
test
sbb
out
jp
mov
shlb
add
cld
lret
cs
icebp
fcmovnu
call
outsl
daa
insb
adc
cmpsb
cs
pop
pop
mov
scas
jl
repnz
dec
cltd
xchg
mov
push
js
popa
fcmovbe
mov
sub
fisubs
mov
inc
int3
lock
dec
outsl
push
mov
or
cmp
int3
jbe
push
dec
sub
sub
fcmovnbe
repnz
cmp
in
lds
mov
popa
mov
aam
fwait
cltd
push
xor
daa
cmpsl
cmpsl
nop
test
test
cmp
push
mov
add
xchg
mov
addr16
inc
or
rclb
or
pop
jl
pushf
xor
add
xchg
jo
flds
call
clc
roll
pop
dec
sbb
pop
add
xchg
leave
test
xchg
add
addl
dec
imull
pop
sbb
ret
mov
loope
jle
dec
inc
jecxz
and
add
popf
mov
bound
mov
adc
pop
stc
push
rcrl
mov
and
arpl
test
fmulp
addl
xor
xlat
loope
push
sub
push
sub
push
xor
sub
popf
enter
push
xchg
pop
push
iret
and
mov
cs
fbstp
inc
movsb
addr16
gs
loop
cmpsb
ret
and
mov
rorb
addr16
fnstcw
iret
jno
cs
outsb
push
sub
sahf
xchg
das
outsl
fldenv
pop
xchg
lds
clc
jmp
out
pop
inc
or
sbb
inc
leave
dec
jns
addb
clc
pushl
ja
inc
daa
stc
cmp
cmpsb
cmp
or
cmp
call
ja
push
push
lods
dec
jne
je
negl
push
outsb
and
popa
inc
mov
in
push
test
je
cltd
jo
fs
popf
xchg
add
add
inc
cwtl
les
fwait
push
jns
fcomps
sub
fs
cwtl
dec
into
inc
sbb
xchg
or
pop
es
push
push
mov
xchg
jge
into
shl
adcb
mov
mov
leave
fdivrl
jg
loope,pn
shl
pop
jo
aas
rolb
jle
xchg
div
cmp
xchg
orl
in
mov
dec
push
mov
dec
push
adc
or
dec
fldcw
xchg
pop
cmp
out
pop
jnp
dec
xchg
divl
dec
icebp
xchg
lds
pop
ljmp
loope
call
test
test
mov
aad
bound
pop
xchg
into
dec
clc
dec
push
stc
sahf
jb
adc
cmc
aam
push
cltd
iret
inc
or
scas
mov
movl
xlat
pop
cmp
int
shl
les
add
in
into
test
lret
in
inc
popf
sbb
icebp
push
jbe
out
hlt
test
sahf
inc
add
or
lock
cli
mov
mov
arpl
push
fwait
sbbl
cmp
push
push
imul
cmp
neg
test
decb
movsl
xor
bound
xchg
leave
mov
imul
testb
cmc
cmp
jne
cmp
mov
mov
mov
cmp
or
out
ss
sbb
js
stc
mov
mov
lahf
mov
ds
fnstenv
out
repz
xor
test
movl
lret
ret
outsl
out
clc
dec
divl
mov
add
xchg
xor
roll
ret
inc
gs
jp
dec
fcoms
jbe
orl
pop
or
dec
xchg
sub
imul
cmp
push
mov
add
push
repnz
je
int
mov
and
cwtl
mov
popf
mov
push
xchg
in
mov
mov
inc
repnz
insl
imul
daa
sbb
popa
int
sbb
xor
mov
cwtl
cmc
cmp
mov
lret
and
or
mov
mov
push
lods
push
and
jle
push
fwait
inc
jbe
push
movsb
icebp
in
jbe
lahf
dec
lea
xchg
push
test
cmp
add
cli
sub
push
cmpsl
add
cvtdq2ps
xorb
xor
push
push
out
sbb
aaa
push
or
sub
xor
ficomps
inc
pop
xor
mov
sbb
movsl
adc
outsl
stc
addb
mov
shlb
mov
push
lods
ds
mov
fucomi
inc
aaa
xchg
cli
orb
insb
ja
shlb
xor
test
insb
int
js
sub
and
dec
je
jg
inc
in
jl
jg
ljmp
sub
xchg
lods
fs
rcrb
adc
ss
xor
aaa
aaa
xchg
test
add
and
dec
sub
cmp
cmp
mov
xchg
mov
and
stos
test
xchg
icebp
xchg
pop
fs
cmc
lods
into
insl
addl
xchg
in
add
xor
pop
fwait
inc
xchg
das
dec
cmc
sub
stc
add
mov
inc
ret
into
push
push
dec
int3
cmpsl
imul
loope
js
lret
cmp
inc
sub
mov
mov
popa
popa
mov
clc
or
into
fadd
xchg
nop
lcall
movsl
pop
push
jnp
dec
xchg
in
loope
lcall
mov
mov
lahf
sahf
or
mov
scas
prefetch
push
mov
into
jmp
push
mov
stc
cwtl
add
inc
lret
xchg
fcoml
out
push
jecxz
fwait
test
add
adc
leave
inc
mov
in
stos
cmp
pushl
xchg
pushf
mov
mov
or
dec
pop
cmp
int
push
jmp
out
inc
sahf
sbb
ret
xlat
mov
testb
lea
pcmpgtd
pop
xor
pop
xchg
shrl
cld
imul
pop
sub
mov
int3
jg
and
shll
xor
cld
add
lcall
rolb
inc
xchg
or
push
dec
test
xchg
push
sub
out
jp
dec
stos
mov
cmc
add
or
pusha
loope
jae
mov
pusha
daa
add
ljmp
cwtl
imul
mov
cld
rcr
int
adc
or
insb
jmp
cmp
and
movsb
das
decl
movsl
ret
inc
aam
add
xor
enter
dec
dec
imul
push
mov
cmp
vcvttss2si
int3
xorl
outsb
xor
lret
fwait
inc
outsl
dec
inc
dec
push
les
rcrb
lcall
mov
in
mov
ss
xchg
xchg
aad
stos
test
sbb
shrl
sahf
je
xchg
pushf
out
rcrl
hlt
sub
in
or
mov
fildll
test
nop
stos
and
sub
cmpsl
mov
les
pushf
pop
push
inc
lea
addr16
mov
movsb
inc
pop
push
adc
mov
outsl
mov
fsubs
pop
inc
popa
icebp
mov
xor
and
enter
cwtd
scas
pop
dec
and
rdmsr
mov
stos
in
push
lea
cvtpi2ps
addr16
xchg
mov
jb
push
nop
jge
xchg
divb
leave
in
movsl
lcall
or
outsb
rorl
mov
sub
ss
xchg
gs
xchg
cmp
jbe
lret
sbb
aaa
clc
pop
sar
shlb
ljmp
push
mov
or
add
mov
aam
sbb
add
mov
jne
sar
pop
push
mov
scas
xchg
ficoml
out
aad
mov
sub
mov
push
adc
push
mov
inc
push
sti
inc
jl
stc
ret
jbe
mov
lcall
inc
dec
inc
bound
push
pop
pop
xchg
data16
cwtl
stos
testl
out
add
push
cwtl
jle
fdivrl
push
mov
and
ds
popa
stos
add
das
mov
test
cmpb
cli
ret
pushw
xor
dec
popa
test
andl
jno
pusha
aam
pop
iret
sbb
outsb
jno
icebp
ds
daa
scas
fwait
add
inc
jge
xor
push
push
stc
test
inc
lods
shll
mov
out
push
aas
insb
dec
stos
mov
cmp
or
mov
xchg
nop
jns
fs
stos
test
sbb
aam
or
jmp
loopne
jns
mov
xlat
loop
and
push
or
aaa
shl
orl
mov
xchg
test
test
mov
xchg
add
jb
pusha
xor
jno
xor
add
and
das
test
push
repz
xlat
sub
repnz
pop
mov
xor
out
out
mov
cmp
and
fs
mov
sbb
and
jle
gs
mov
and
cli
mov
mov
stos
cmpsl
pop
xchg
push
enter
add
push
xchg
dec
addr16
inc
test
push
ret
and
mov
nop
fisubrs
xchg
sbb
insl
scas
pop
aas
mov
fucomip
out
inc
sbb
int
mov
pop
imul
push
sub
cmp
sbb
ss
je
xchg
xchg
test
inc
pop
mov
and
or
cltd
push
sub
stc
jno
test
xchg
xchg
add
scas
add
mov
jo
out
int3
fsincos
dec
mov
sub
aaa
mov
jge
sbb
sahf
ljmp
fstl
cmpsb
pop
push
sbb
rcrl
dec
lods
add
push
inc
mov
test
pop
jnp
sbb
add
mov
hlt
or
jo
fnstsw
push
pop
jnp
mov
xorl
cmpsl
push
mov
push
xchg
aam
in
pop
hlt
loope
sti
repz
lods
jle
test
mov
into
lcall
jl
jl
cltd
out
mov
jnp
lea
mov
mov
fsubs
sti
xchg
ja
jle
lds
test
adc
jl
cwtl
decl
jo
dec
aam
int
jmp
imul
lcall
out
aam
and
fnsave
and
jnp
adc
jge
addr16
add
shrb
sub
int
mov
daa
loop
sbb
pop
mov
or
jns
jg
jo
jbe
adc
sar
dec
inc
xchg
push
mov
les
dec
jne
call
xor
repz
mov
test
js
sbb
pop
and
pop
repz
mov
movsl
sbb
std
out
mov
aas
adc
cmp
aad
xlat
inc
pop
adc
lock
adc
hlt
jbe
sti
rorl
ds
jo
adc
sbb
stc
data16
cwtl
ljmp
push
xchg
insb
cs
push
call
xchg
and
push
jno
adc
inc
lcall
jno
jle
imul
aaa
sbb
push
adc
xor
pop
inc
jp
xchg
test
test
cmp
test
add
pop
pop
xchg
add
adc
sbb
sub
adc
rolb
rcrl
shrb
testb
fwait
mov
psraw
mov
into
mov
out
iret
sub
cltd
shl
sbb
push
je
push
cli
pop
adc
push
xchg
shlb
arpl
adc
aad
add
mov
jecxz
mov
test
ljmp
mov
jge
out
jecxz
mov
jp
add
loop
xor
push
decl
jecxz
mov
cmpsb
or
lods
rclb
ret
pop
and
xor
pop
dec
mul
aas
xor
movsb
leave
cmpsl
lret
dec
or
addr16
jo
and
int
mov
xor
ret
push
mov
aam
xchg
push
fs
push
out
mov
aad
or
test
lods
mov
pop
in
cs
std
mov
sbb
cmp
jl
xchg
test
cmpb
sub
pop
xchg
push
mov
jle
rorb
push
cwtl
les
and
cltd
xchg
xchg
ret
ljmp
scas
cmp
push
dec
add
aad
pop
test
jp
mov
mov
sbb
mulb
cltd
movsl
mov
cmpsl
addr16
cli
arpl
ljmp
shll
push
cmp
push
mov
sbb
cwtl
rcrl
fld
sub
xchg
sbb
mov
jle
addr16
fisttpl
hlt
outsb
fsubrs
ljmp
sahf
and
add
xor
shrb
mov
shr
popa
test
mull
enter
out
cmp
cmp
rcrl
mov
shrl
inc
dec
xor
fdivl
fs
add
rolb
xor
push
push
jbe
out
jbe
out
loop
sbb
pop
xchg
inc
test
push
or
ja
dec
add
cmp
adc
mov
push
movsl
je
xchg
dec
clc
dec
lods
sbb
dec
testb
jp
xchg
add
data16
xor
mov
mov
pushf
sbb
dec
movsl
and
rcl
rclb
aas
mov
adc
xchg
push
aam
push
or
xchg
andl
mov
xchg
in
sub
in
cmpsl
xlat
xor
and
mov
jne
push
pop
and
mov
xchg
or
test
popa
and
cmp
fisttpll
fwait
lds
test
jnp
gs
daa
adc
ljmp
sub
jbe
dec
and
gs
xchg
cmp
dec
lcall
xchg
insl
rol
xor
aaa
fistl
stc
mov
repnz
outsl
hlt
int
add
mov
mov
and
mov
ja
mov
jb
shr
inc
xchg
dec
xchg
xor
mov
jmp
cmp
pop
in
out
filds
jne
mov
adc
mov
push
int3
push
adc
lahf
pop
add
jns
mov
xchg
mov
mov
xor
loop
and
out
rclb
loopne
xchg
ficomps
dec
scas
sbb
sub
jno
das
or
mov
pop
push
sbb
scas
xchg
sbb
sub
stos
addr16
cs
adc
push
mov
lods
jge
enter
or
xchg
stc
sub
iret
xor
jp
push
rol
xorl
fwait
decb
fcmovb
cmc
dec
test
mov
sub
int
mov
push
aad
sub
jl
psubusw
push
jno
into
shll
sbbl
mov
fnstenv
aaa
lcall
adc
jne
loope
dec
test
push
mov
mov
add
ja
adc
sub
enter
pop
divl
mov
sbb
addr16
addps
and
and
and
nop
std
sub
jns
shll
adc
mov
mov
jo
jbe
daa
jge
mov
out
mov
add
inc
repz
mov
sub
lock
jl
into
stc
adc
out
pop
cmpsb
lea
xchg
mov
mov
jge
aam
jge
lods
xor
ficoms
cmpsl
mov
popa
xchg
mov
push
ret
xor
jg
push
sub
dec
insl
out
mov
jmp
mov
inc
adc
or
int3
das
mov
test
mov
dec
xorb
push
mov
ljmp
shrb
jb
jecxz
enter
stos
andl
mov
ja
ret
addr16
lcall
dec
cmp
xchg
and
pop
push
in
add
ljmp
ss
lcall
jle
hlt
add
cltd
int3
xchg
out
inc
fisttpl
or
and
mov
js
pop
ja
cwtl
mov
orb
fnstsw
xor
ljmp
lcall
pop
rcrb
lock
xchg
add
sahf
cltd
cwtl
cmpsl
or
cwtl
xor
dec
dec
sbb
xchg
sahf
bound
jle
push
add
aam
pop
push
or
pop
movsl
iret
lret
cmpsl
sar
les
ficoms
mov
fcomps
pop
icebp
mov
cltd
rcr
mov
mov
sbb
xchg
loop
adc
insl
jb
lcall
or
mov
jnp
lock
je
imul
pushf
aam
rol
fldcw
jg
stc
and
mov
sub
repnz
out
mov
xchg
cld
sahf
inc
cmp
pop
jne
fisttpll
int
data16
jbe
cmp
and
pop
rcr
in
mov
js
push
mov
push
sub
inc
cmp
stc
es
scas
pop
lock
jmp
pop
loope
out
movsb
popf
xor
adcl
enter
repnz
add
stos
lea
push
inc
leave
mov
shll
popf
movsb
iret
pop
ja
mov
mov
inc
ds
adc
xlat
pop
pop
and
inc
xchg
scas
adc
add
aaa
filds
or
out
cmc
jo
lock
dec
sub
inc
or
out
imul
lcall
mov
cmp
shrl
popl
xchg
jae
sub
add
mov
xchg
sub
jg
les
jmp
gs
iret
jo
mov
loopne
scas
or
imulb
lock
push
or
fistl
aas
out
rcl
imul
outsl
jae
mov
fs
sub
mov
dec
pop
jmp
mov
ss
outsb
adc
lods
mov
jmp
aaa
sub
mov
js
pusha
cmp
inc
aas
movsl
xor
pop
cmpsb
icebp
test
adc
sbb
sti
pop
add
call
outsb
imul
and
fimull
fsubrl
cwtl
inc
push
fdivrl
or
jmp
icebp
or
xchg
bound
in
rclb
xor
or
add
xor
dec
and
pop
inc
roll
dec
jge
add
inc
mov
push
push
or
pop
jb
lret
add
xor
cmp
mov
inc
js
lret
xor
sub
push
popa
fildl
xor
imul
dec
sbb
mov
cmp
mov
jl
xlat
jle
sbb
xlat
sub
jns
hlt
nop
inc
dec
roll
xchg
int
ret
in
sahf
fs
call
mov
call
sub
jge
sub
idivl
sub
xorb
stos
sbb
mov
push
adc
shlb
cmp
xchg
mov
divl
xor
rorb
int3
movsb
inc
loopne
pushf
sbb
lods
repnz
jnp
mov
pop
aaa
mov
movsb
xor
dec
fistps
mov
xchg
les
repz
das
jg
mov
mov
sub
add
and
jle
out
insb
outsl
loopne
mov
in
into
mov
lea
jle
lock
insb
push
mov
xchg
sub
jo
stos
call
cmp
aad
imul
ja
add
lret
lods
sahf
mov
pop
push
dec
es
and
sarl
cli
dec
pop
lcall
inc
xchg
imul
jo
xchg
icebp
lahf
outsb
and
mov
push
fsubrs
pop
pop
test
or
and
iret
nop
xor
mov
aad
sub
lcall
cmp
cmpsb
aam
rcll
fnstsw
xor
pop
xor
adc
inc
shl
pop
lcall
cwtl
inc
push
push
dec
inc
inc
cmpsl
loope
ds
jecxz
jne
inc
mov
out
add
inc
ret
cmpl
inc
dec
sbb
ja
in
mov
add
jmp
inc
push
sbb
sub
jae
out
nop
pop
mov
adc
pushf
or
add
notb
pop
les
mov
imul
out
xor
add
mov
push
xor
das
addb
mov
mov
lea
jmp
xor
movsb
leave
loope
sub
xor
adc
lods
or
gs
jecxz
adcl
adc
enter
and
shr
cmp
or
pop
mov
sub
mov
in
push
insl
nop
xchg
lock
inc
and
lock
cld
mov
ret
mov
sbb
es
jo
add
sahf
test
or
ret
dec
icebp
pop
mov
adc
aaa
mov
sbb
pop
test
dec
iret
aaa
imul
fdiv
pop
jno
mov
lret
and
cld
push
les
and
adc
mov
cmp
ret
pop
cwtl
aad
xchg
jbe
jge
ffree
or
mov
dec
arpl
gs
add
or
sbb
jbe
fsubs
sbb
add
or
jg
iret
and
pusha
xchg
pop
sbb
outsl
cmp
xor
repz
lcall
push
adc
cmp
sub
pop
imul
mov
jp
nop
adc
mov
in
push
insl
push
xor
push
cmp
pop
enter
push
dec
arpl
jmp
pop
adc
out
adc
xchg
mov
dec
stos
mov
jmp
mov
repz
loope
mov
fcoml
sbb
outsl
xor
jecxz
push
xor
test
add
pop
ds
clc
fincstp
das
and
mov
xchg
les
mov
das
mov
cli
out
or
mov
cvtdq2ps
push
pop
popl
add
xchg
dec
enter
popa
shl
loop
lretw
es
lret
jns
rcr
inc
rolb
aaa
ds
repz
xor
mov
xor
mov
or
ljmp
sbb
mov
addl
pop
xor
mov
loope
lock
out
jle
sbbl
cmp
rcr
xlat
sbbl
jp
pusha
arpl
pop
push
aaa
repz
jbe
loop
inc
mov
sahf
jmp
stc
shlb
dec
push
outsl
lret
adc
ret
or
xchg
xchg
outsl
mov
or
lret
ss
fcompl
arpl
mov
push
xor
sahf
aad
mov
inc
mov
pop
cmp
xchg
popa
loope
dec
push
movsb
mov
clc
mov
pusha
pop
add
in
andb
call
loopne
gs
pop
mov
push
xchg
cmp
lcall
testb
mov
mov
pop
scas
iret
push
add
jbe
std
inc
adc
dec
push
push
cmp
xchg
jecxz
inc
xor
cmp
ret
sub
adc
pusha
mov
aad
cmc
sub
fucomp
popa
je
repz
jecxz
sbb
lret
in
mov
popf
sub
fucomp
loope
or
call
xor
jbe
pop
test
sub
mov
enter
pop
ds
sbb
ds
in
inc
loopne
daa
stos
cli
enter
pop
fistps
push
cli
adcl
in
cmp
jge
add
and
mov
and
into
inc
dec
adc
cmp
nop
aad
pop
jns
lcall
clc
mov
pop
mov
fldcw
and
daa
xor
xchg
dec
pusha
adc
das
enter
inc
ret
sbb
lods
ja
jo
jl
in
stos
loop
mov
insl
dec
lods
mov
sub
xchg
loope
ret
and
mov
and
lret
lret
test
mov
out
or
xor
cmp
jbe
negb
fwait
pop
sbb
js,pn
sbb
inc
test
sbb
cld
mov
mov
fldl
enter
push
dec
jb
divb
sbb
ret
ja
shrb
sahf
xchg
vandnps
stc
aam
pop
pop
cs
or
sbb
mov
daa
mov
inc
dec
sbb
nop
jg
or
sub
push
cmpsb
daa
outsl
sub
jno
sarb
pop
push
pop
ret
add
mov
xchg
hlt
aam
iret
xchg
push
loope
or
jo
out
lds
in
fbstp
js
xchg
adcb
push
aaa
popf
mov
xchg
fstpt
lds
jecxz
pusha
in
add
flds
int
sub
mov
sub
ret
js
push
cltd
movsl
dec
in
jecxz
test
lret
cmc
out
popf
adc
xor
sahf
mov
push
frstor
fisubl
lock
xor
push
dec
std
mov
jg
mov
popf
mov
xor
inc
jle
jecxz
imul
mov
subb
mov
xchg
mov
loope
insb
in
cmc
pop
lret
sti
push
sbb
pop
aaa
mov
and
sub
jo
imul
xor
add
insl
mov
xor
push
cmp
loopne
adc
sbb
mov
pop
push
fdivl
and
cwtl
pop
pop
push
insl
inc
jle
negl
lods
dec
arpl
mov
mov
jp
ret
cld
stc
lock
out
addr16
xchg
dec
leave
mov
das
pop
mov
je
shl
mov
out
pop
add
scas
or
int
popf
pusha
iret
popa
cld
and
popa
lea
mov
push
in
jmp
adc
jbe
bound
fst
pop
push
jnp
mov
inc
dec
daa
sar
rclb
sub
pop
adc
popa
dec
pop
stos
mov
xor
cmp
jo
call
jl
jecxz,pt
pop
xchg
cmp
mov
push
ds
jmp
jmp
das
mov
cmp
add
jo
pop
cli
ljmp
lods
pop
sub
aad
lahf
fs
inc
adc
inc
xchg
ja
call
sub
xchg
int
sbb
mov
jmp
jmp
xchg
insb
mov
addr16
dec
xor
mov
mov
cmp
add
add
jmp
jae
mov
js
sub
lret
mov
js
add
mov
outsl
push
cmp
fldenv
push
push
ret
pop
cmp
or
cbtw
cwtl
mov
into
or
fiadds
js
inc
mov
add
or
dec
repz
in
or
daa
mov
adc
lock
movsb
fcmovnbe
idivl
jle
add
int
inc
inc
mov
xor
jno
push
inc
or
dec
adc
sbb
pop
push
or
jnp
xchg
and
push
popa
addl
mov
sbb
mov
push
cltd
xchg
mov
mov
mov
jge
or
mov
or
xchg
mov
fmull
pop
std
std
lods
in
js
jecxz
mov
jl
imul
adc
stos
mov
movsl
enter
shl
test
mov
stc
xorb
jno
adc
cli
mulb
pop
fwait
mov
rep
lret
sub
daa
lret
mov
lret
and
jecxz
ret
in
sbb
xor
jo
sbb
lods
xor
fnstcw
lahf
aas
cmc
decb
xchg
push
addr16
mov
lods
jmp
xchg
dec
push
jmp
mov
stos
jnp
push
fwait
mov
das
sbb
and
inc
fdivrs
cmp
hlt
push
mov
push
sub
add
fsubrs
sbb
mov
fwait
adc
in
orb
jo
or
repnz
cmp
xor
add
into
sbb
jg
fsubr
jno
aas
pop
dec
mov
fbstp
test
insl
gs
test
mov
cwtl
xor
jb
xor
mov
add
push
jno
add
ss
sub
nop
test
adc
add
fdivrs
sbb
dec
xor
outsb
jnp
mov
ret
mov
inc
ret
fldl
pop
cmc
fcomip
mov
xor
lret
or
xlat
lock
sbb
cmp
push
negb
inc
push
add
add
pop
pop
push
cmc
jne
xchg
add
rorb
inc
cbtw
daa
mov
and
add
jns
mov
xlat
jle
stc
cmpb
pop
inc
adc
push
movsb
adc
adc
mov
jl
test
fisttps
push
sub
push
cmp
sub
les
ret
jle
rolb
or
mov
fld
popa
mov
dec
js
mov
xor
push
pop
movsb
push
test
mov
cmp
stc
ljmp
ss
mov
outsb
push
popf
shrb
mov
cwtl
sub
ljmp
or
add
mov
push
sbb
dec
imul
cmc
dec
push
adcl
mov
mov
cmp
fwait
test
push
xor
or
aam
inc
jl
addr16
mov
dec
sub
orl
fnstsw
dec
xlat
inc
pop
fwait
jbe
fiadds
adc
test
mov
or
cmc
xchg
xor
roll
ja
mov
mov
ljmp
and
imul
sub
sub
stos
or
in
add
leave
into
inc
mov
mov
orl
repnz
mov
mov
mov
dec
sahf
sahf
pop
or
ja
popa
imul
cmpsb
xchg
lahf
dec
pop
dec
gs
int
stos
push
jle
and
aas
int
xchg
lss
mov
pop
lret
sub
call
ljmp
jle
mov
cmp
sub
cmp
imul
mov
cwtl
mov
outsb
mov
add
bound
xchg
xor
cld
iret
lret
mov
push
cmp
or
rcrb
testl
loop
pop
outsl
sbb
and
insb
dec
adc
ret
xchg
mov
fnstsw
adc
in
test
fsubrl
and
lock
int
add
jl
and
sub
out
mov
xor
adc
cld
jo
test
mov
roll
mov
jnp
aam
sub
xor
push
rorb
test
aaa
inc
subl
fs
inc
lcall
push
out
cmpsl
adcl
sub
mov
aaa
popa
lret
insb
xorb
inc
jb
xchg
roll
xchg
mov
add
push
pusha
push
outsb
fisttpl
mov
sahf
das
pop
cmp
mov
imul
fwait
xor
int
mov
adc
dec
dec
cmpsb
adc
cmp
and
fdivrl
into
mov
mov
lahf
jp
jnp
sub
ficoms
push
lds
adc
das
cmpl
scas
cld
jb
pusha
mov
dec
fldcw
adc
ret
xchg
sub
int3
adc
scas
aam
rcll
pop
jns
push
pop
add
dec
sbb
fnclex
loopne
jae
xchg
or
lds
leave
test
daa
repz
mov
les
push
pop
mulb
jne
js
loop
xor
and
icebp
cwtl
fcomi
and
ss
xchg
add
pop
imul
ss
jae
xor
aam
fcmovnu
push
pop
xchg
cli
ss
aaa
cltd
inc
aam
bound
jb
ds
jns
cmp
mov
sub
jp
sub
iret
lcall
pop
imul
pusha
jne
daa
xchg
fildl
stos
push
push
sub
mov
inc
stos
ret
imul
push
movsl
inc
ret
dec
and
nop
test
aas
sbb
out
lea
or
adc
sub
dec
sbb
xor
shr
jle
pop
jns
adc
push
movsl
mov
aaa
lea
xchg
or
jg
xor
adc
int
mov
mov
into
xchg
outsl
imul
mov
pop
fcompl
movsl
insb
push
jg
mov
mov
xlat
mov
cmc
cltd
loop
stc
testl
push
mov
jno
std
fistpll
cli
lret
mov
addl
xchg
faddl
test
jae
repnz
inc
rclb
mov
cmp
or
sbb
push
int3
xor
lahf
xchg
pop
jg
ss
sti
cwtl
out
lods
adc
push
mov
xchg
pop
push
int
mov
data16
idivb
out
xchg
jecxz
popa
mulb
xchg
imul
movsb
lret
jnp
add
push
aad
out
push
mov
pop
dec
mov
push
popa
sahf
fsubrs
insb
jbe
cli
loope
aas
shrb
or
xor
inc
cmp
push
mov
jo
das
in
out
jp
nop
xor
fstcw
sarb
pusha
jno
ret
add
inc
dec
fcomps
push
cltd
jns
xor
cmp
add
add
insb
ret
fs
dec
sti
add
pop
pushf
mov
je
xor
and
jl
jecxz
insl
sbb
pop
ss
push
mov
inc
mov
xlat
sbb
cmp
mov
sub
lret
jbe
jbe
dec
mov
mov
stos
push
mov
cmp
sub
enter
out
in
mov
mov
mov
sub
xor
cmp
mov
into
jne
or
and
or
lock
add
push
icebp
int
in
or
rcrl
lea
and
popl
cmp
and
lret
mov
xchg
pop
dec
popf
stos
sub
inc
adc
xor
add
nop
xor
test
jo
xor
loop
xchg
sbb
jno
mov
lock
and
push
fcmovne
leave
in
in
aaa
ljmp
dec
iret
inc
jo
mov
repnz
adc
scas
lcall
mov
mov
daa
ss
mov
in
xchg
nop
push
xor
push
or
es
cld
scas
ljmp
pushf
and
enter
loop
fcoml
rcrl
push
shlb
ja
adc
xchg
scas
adc
sbb
dec
mull
mov
sbb
sbb
inc
sarl
orl
add
jmp
rep
pop
inc
cld
mov
subb
ljmp
pop
sarl
pop
jp
cmpl
and
test
cmp
lods
ja
lret
int3
jo
fst
sub
iret
xchg
add
mov
jmp
seto
aad
push
pop
dec
pop
mov
loope
daa
cltd
and
push
xor
in
ss
popf
out
dec
pop
pop
in
popf
push
cmp
aas
dec
add
shrl
sbb
js
in
mov
repz
cmpsb
ds
add
xor
das
add
push
cld
lods
mul
xor
jns
aad
sub
and
aam
sub
add
and
jbe
mov
jp
cli
push
arpl
mov
mov
mov
nop
loope
insb
mov
shl
movsb
fidivs
into
jb
movsb
jo
mov
popf
inc
dec
jne
mov
mov
xor
cmp
inc
ret
and
lods
cmp
sub
sbb
jne
or
mov
movl
mov
icebp
mov
das
mov
cmovbe
mov
insl
add
mov
addr16
loop
xchg
sahf
mov
scas
movsl
pop
pop
xchg
pop
xchg
sub
mov
jge
ds
pusha
pop
cltd
xor
jge
mov
sub
lea
repnz
dec
ja
outsb
sbb
mov
outsl
pop
cs
jmp
std
and
outsl
fs
add
jo
adc
fisubl
xchg
jg
out
mov
imul
cld
and
xchg
mov
push
and
rol
andb
jecxz
mov
or
test
xchg
dec
std
adc
or
cmp
cs
data16
or
xchg
hlt
int3
lcall
cmpsb
xor
mov
out
cmpsb
addr16
jb
adc
xchg
mov
aad
push
in
popf
negl
jg
inc
inc
nop
dec
rorl
jne
popa
pslld
adc
jae
jge
or
sub
es
inc
fcompl
jnp
sbb
xchg
lods
lret
sbb
iret
cmpb
cld
arpl
imulb
ja
add
popa
sub
add
mov
mov
lret
call
add
adc
mov
iret
pusha
les
pop
fstl
stos
data16
cwtl
mov
aad
mov
pusha
pop
adc
fnstenv
js
insl
pop
jg
stos
cvttps2pi
mov
mov
mov
mov
add
mov
in
lods
cs
int3
pop
cmpsl
lods
popa
shr
mov
jmp
aas
and
sub
adcb
sub
adc
ljmp
mov
pop
inc
ficoml
cmp
mov
fdivs
ret
fmuls
xor
lret
sbb
movsl
lods
adc
arpl
int
jge
xor
fdivrs
aad
inc
sbb
dec
dec
test
xchg
pop
rcrb
jl
adc
aam
pop
pop
jmp
dec
pop
lods
mov
or
jo
stos
test
mov
sbb
jnp
inc
ficoms
add
sub
repz
sahf
lcall
inc
inc
pop
ficomps
sub
mov
sti
mov
lods
ficoms
sub
out
mov
imul
ret
add
stos
sub
mov
test
mov
cmpsb
stc
inc
inc
xlat
xchg
lea
mov
repnz
add
insl
mov
insb
mov
popa
mov
mov
mov
aad
or
inc
out
outsb
out
roll
sbb
cld
push
pop
test
in
test
or
lcall
mov
test
xor
notb
fidivl
pop
mov
inc
mov
xor
and
mov
xchg
sti
jns
xorl
jne
or
sub
das
fwait
repz
pop
push
mov
xor
ds
stos
mov
inc
sbb
cltd
dec
fs
insb
ret
outsl
sbb
repz
mov
pop
add
adc
and
sub
daa
adc
fldcw
sub
sarl
and
cmpsb
stc
jnp
aad
fists
sub
jle
pop
push
jge
inc
lret
mov
cmpsl
popa
stc
int3
and
out
fidivrs
fmul
aad
imul
call
push
popf
mov
jecxz
pop
mov
xor
and
je
popl
out
ja
mov
jbe
pop
jnp
jns
or
dec
lahf
push
sahf
sbb
mov
push
leave
sbb
jno
mull
aad
pop
dec
jnp
mov
adc
into
sti
add
inc
push
push
and
lcall
or
pop
jle
pushf
mov
push
outsb
pusha
add
sbb
ds
in
popl
sbb
and
jmp
push
sbb
push
add
cmp
decl
lods
mov
mov
jl
sbb
lret
mov
jl
mov
out
push
or
das
jo
outsb
mov
repnz
jae
push
out
enter
jg
scas
shr
fcmovb
inc
fs
repz
scas
outsb
subl
lods
bound
sbb
cmp
jp
sbb
decl
and
mov
jge
dec
sbb
sbb
xor
mov
imul
in
inc
cs
mov
pop
and
xor
push
jnp
fisttps
aaa
cs
aam
pop
testb
mov
or
or
mov
jp
add
stc
ret
fsts
inc
and
add
out
mov
call
dec
dec
jmp
pop
push
out
xchg
sbb
je
xchg
sbb
lock
add
and
adc
xchg
push
andb
arpl
call
sub
sub
sbb
hlt
cmp
andl
add
jbe
loop
outsb
sbb
inc
out
xchg
adc
aas
xor
icebp
push
scas
inc
push
mov
repnz
stos
mov
sbb
lods
add
add
xor
mov
xchg
mov
arpl
xchg
xchg
lds
pop
jnp
pause
test
pop
mov
jl
fstp
fisubrs
enter
int3
mov
mov
xchg
mov
inc
test
shlb
adc
iret
dec
sbbb
aad
call
adc
movb
aad
js
cmpb
std
rclb
adc
cmp
rcrb
xor
int3
push
dec
fistpll
adc
xor
lods
ret
adc
cmpsl
and
push
xchg
or
mov
lret
decl
xor
test
mov
fstpl
scas
data16
xor
dec
sbb
fdiv
and
push
inc
jle
cltd
leave
push
mov
fimuls
outsb
push
mov
into
subl
and
rorb
das
movsb
adc
in
scas
xadd
cs
xor
adc
mov
xchg
cmc
ljmp
cmp
xlat
xchg
jmp
pop
test
push
adc
jge
dec
sub
pop
sbb
popa
xchg
mov
jo
jmp
nop
pushf
push
push
aaa
xchg
mov
sub
cltd
and
sub
pop
dec
jecxz
sbb
xor
std
test
sub
mov
fidivl
add
and
mov
xor
hlt
add
sbb
sbb
aas
mov
jl
cmpb
pop
scas
insl
sub
sbb
push
aad
cmp
xchg
cmpsl
movsl
mov
rorb
iret
mov
inc
and
and
jbe
mov
js
mov
dec
in
andb
mov
in
cmp
xchg
int
push
inc
pop
mov
sbb
mov
sahf
and
jge
cmp
lods
mov
pop
xchg
ss
push
and
mov
push
cmp
ret
pusha
mov
mov
inc
packsswb
mov
je
mov
lock
jge
xor
inc
mov
inc
insb
fmull
sbb
mov
mov
xchg
fstps
sbb
push
push
int
jle
stos
lods
lods
loopne
lcall
xchg
bnd
dec
cmp
sub
fucomi
mov
jo
lcall
cmp
push
inc
cmp
fistl
lcall
imul
rcl
lret
lahf
dec
xchg
addl
or
pop
insl
xor
fnstsw
popa
pop
scas
inc
and
int3
sbb
fpatan
xor
ss
cmp
rcll
and
xor
sbb
xor
sub
mov
mov
int
cli
mov
test
lret
xchg
mov
int
leave
loop
pop
add
sub
mov
lock
inc
xchg
pop
dec
mov
mov
pop
push
testb
xor
lds
out
pop
mov
icebp
jbe
repnz
mov
jae
lea
jmp
js
jno
orl
ljmp
mov
imul
outsb
shl
orb
jge
push
ret
jne
jns
sbb
dec
pop
mov
std
jp
lods
loop
cwtl
add
sarl
xchg
fwait
sub
mov
jo
xor
pop
or
cwtl
call
jg
iret
jne
add
je
loop
sub
jmp
sub
bound
stos
cltd
jmp
push
test
jne
add
divb
pop
into
bound
in
adc
insl
rcll
jg
test
add
mov
mov
mov
into
mov
jb
jne
push
fwait
xlat
mov
jmp
push
or
cmp
in
out
shr
popf
add
xor
sub
and
cmp
lock
int3
push
xor
repnz
push
dec
xchg
xchg
in
insl
out
mov
dec
jns
je
je
add
mov
push
mov
push
test
or
sbb
inc
fwait
pushf
and
mov
mov
out
and
add
ret
stos
mov
rclb
lock
pop
xor
or
sub
and
push
xor
jne
lea
jle
xchg
rcl
mov
push
test
xchg
adc
mov
clc
cmp
call
sub
push
or
and
mov
lds
push
xor
andb
mov
xchg
cmpsl
out
jo
in
loopne
xchg
je
cs
push
int3
inc
aad
in
mov
fisttps
push
jns
test
jp
pop
push
fcomps
in
les
push
cwtl
movsl
pop
mov
sbb
stos
sbb
lods
pop
call
repz
dec
mov
dec
mov
lret
fsub
add
pop
pop
xchg
or
shl
sahf
out
lret
lds
add
jo
adcw
cmpsl
mov
adc
in
fwait
inc
xlat
xor
cmp
std
out
pop
loopne
mov
imul
sbb
add
data16
mov
or
add
adc
jns
cli
cmpsb
xchg
inc
inc
sub
mov
in
jae
insl
adc
xchg
imull
cmc
pop
add
mov
jecxz
imul
dec
inc
pop
adc
inc
ret
mov
int
and
sahf
nop
and
sar
cmp
in
or
bound
iret
pushf
popf
lods
mov
dec
inc
adc
mov
add
push
xor
push
data16
mov
test
fmuls
movsb
ss
add
outsl
add
bnd
sbb
jp
and
push
sub
mov
xor
push
dec
pop
sub
ret
xchg
not
aas
xchg
xchg
inc
ljmp
jnp
push
jo
aas
test
lods
pushf
mov
lods
xchg
xchg
and
adc
fdiv
leave
jbe
and
out
pusha
or
and
dec
lret
cmpsl
mov
sbb
ret
in
and
jns
loopne
into
popf
cmpsb
mov
pop
insb
mov
or
push
loope
dec
jo
repnz
test
pop
push
in
xor
negb
shrl
hlt
jb
popf
or
das
mov
les
fstps
dec
or
push
sbb
rclb
leave
fstp
dec
out
lds
fmull
cwtl
fs
sub
in
into
jp
into
pop
in
repnz
aam
insl
sbb
test
push
test
add
lcall
shlb
sti
ret
fcomp
enter
clc
xchg
add
dec
dec
adc
aad
lods
orb
mov
icebp
shrb
rorb
and
fnsave
jge
std
add
mov
inc
fimuls
sub
sbb
cld
mov
stos
out
mov
push
imul
pop
movsb
push
mov
xlat
cmc
shll
mov
jb
pushf
gs
push
mov
out
lcall
imul
pop
ret
xorb
mov
ljmp
or
dec
mov
cltd
out
fmull
cmp
insl
lods
mov
in
loopne
cs
or
ja
add
push
push
xor
xor
rclb
adc
mov
sti
push
cmp
mov
pop
shr
outsl
dec
outsb
aad
sbb
lret
out
sti
pop
dec
push
addr16
daa
mov
cmp
popf
push
cmpb
pop
arpl
mov
adc
jnp
cmp
es
pop
mov
sar
add
adc
aam
out
rclb
push
cs
adc
or
mov
adc
pop
adc
push
sar
pop
adc
xchg
loop
xchg
pop
movsb
dec
jl
je
out
sbb
popw
aad
pop
push
pop
mov
cwtl
jnp
mov
arpl
pop
add
sbb
xlat
fnstcw
mov
cltd
push
and
push
adc
es
sbb
out
ljmp
leave
scas
xchg
aas
adc
das
lods
aad
pop
sbbb
cmpl
sbb
push
or
shl
dec
xchg
lock
addr16
lock
insb
jge
mov
mov
shll
jp
push
cmp
inc
outsb
xorb
pusha
lret
mov
loopne
arpl
call
adc
push
push
mov
int
dec
jo
arpl
in
xor
int3
jns
ret
aas
in
fwait
pop
inc
inc
test
cmpsl
in
scas
lret
faddl
or
lock
sbb
jle
mov
cld
adc
rorb
push
in
xor
xor
jae
loop
movsl
lar
ret
dec
leave
leave
push
xor
mov
mov
push
mov
add
jle
pushf
out
das
jno
or
ds
inc
inc
cmp
arpl
aas
das
cmpsb
mov
popf
pop
ljmp
imul
pop
push
mov
pushf
data16
loopne,pn
or
jbe
movsb
int3
and
js
mov
mov
movsb
push
add
xor
pushf
push
aad
cmp
inc
push
stos
xor
pop
hlt
pop
fs
or
xor
jg
dec
sbb
incl
push
jge
or
je
cld
sahf
and
inc
jo
test
sub
lcall
imulb
test
xchg
ficompl
arpl
mov
pop
out
cmp
sbb
ds
imull
mov
inc
adc
xchg
xchg
shlb
jp
cltd
mov
mov
test
xor
repnz
mov
or
pushf
ja
aad
rcl
dec
setno
sub
sub
jo
fcmovnb
inc
mov
into
dec
mov
jo
mul
pop
lods
out
cmpsb
aad
dec
add
cmp
dec
aas
sub
aad
mov
popa
aas
pop
add
ret
ja
js
aam
out
pcmpeqd
xlat
dec
out
inc
in
leave
icebp
dec
xchg
in
clc
loopne
fsubl
test
mov
push
xor
sahf
enter
scas
pop
arpl
rcrl
movsl
sub
shl
mulb
jp
jbe
xchg
jle
sbb
or
mov
mov
or
or
rcrb
adc
sub
sub
aas
pushf
sbb
mov
mov
popf
mov
test
push
insl
repz
andb
jmp
fcmove
add
dec
imul
jno
jno
mov
stos
add
xor
bound
aad
aaa
insl
leave
subl
outsb
in
sbb
mov
cwtl
int
mov
mov
cmpsl
fdivs
or
jns
mov
and
pop
fists
or
daa
imul
jmp
xor
inc
pop
das
movsb
jmp
in
jns
fwait
scas
lret
push
mov
arpl
sub
dec
push
lret
call
in
or
sti
cmpsb
mov
jbe
addr16
fbld
adc
mov
push
fmulp
push
xor
fmulp
cltd
adc
addl
pop
sti
repz
js
dec
neg
mov
lods
adc
lock
or
pop
jnp
xchg
lds
cmp
scas
sub
and
fdivrs
xor
xlat
xor
pop
bound
out
arpl
jne
pop
or
data16
mov
and
cmpl
mov
push
stos
int3
sti
fists
push
imul
and
jge
movsb
cld
gs
pop
outsl
mov
cld
mov
mov
fdivs
aad
xor
jbe
cltd
lods
jb
add
aas
push
fs
inc
push
lcall
out
cmpl
pop
imul
out
clc
push
fistps
mov
pusha
jge
pop
xchg
lock
iret
mov
xor
hlt
ss
or
mov
pop
cmp
ret
inc
mov
cmpsb
mov
pop
adc
ljmp
add
fwait
or
and
cltd
std
in
lods
popf
shrb
in
xor
dec
bound
enter
xchg
xlat
test
out
push
or
mov
into
mov
sarl
aam
xor
in
fcompl
jo
and
mov
femms
int3
dec
les
inc
jp
mov
andb
push
jle
mov
enter
sahf
insb
mov
call
call
out
fcomp
insl
mov
fucom
pop
and
jl
out
mov
and
xor
jns
mov
cwtl
jbe
scas
flds
mov
daa
cli
sub
cmpsl
stc
mov
cli
push
cmpsl
out
mov
mov
and
cmp
shr
fnstsw
pushf
cltd
mov
jmp
and
dec
rcrb
mov
and
add
les
shl
dec
mov
push
imul
test
nop
sbb
and
mov
xchg
xor
in
mov
and
lods
lods
es
xor
inc
ljmp
jb
mov
setne
shl
xchg
imul
cmp
cli
jns
inc
hlt
xchg
data16
repz
ljmp
lea
jne,pn
push
addb
fwait
dec
loope
mov
pop
add
fsubs
frstor
lret
outsl
roll
popa
lea
pusha
push
imul
lods
adc
xor
dec
aas
or
shrb
or
imul
stos
jne
adc
xchg
sbb
adc
loop
jmp
jns
test
mov
mov
adc
cs
inc
push
jge
fimull
insb
repnz
mov
sub
sub
std
sahf
das
pop
mov
or
pushf
xchg
int
dec
sbb
adcb
hlt
aam
ret
xchg
cltd
mov
dec
das
pop
and
dec
in
arpl
or
adcb
dec
lahf
int3
stos
pop
bound
stos
insl
test
xor
dec
adc
mov
je
and
ds
es
sub
jo
fnsave
lds
mov
movsb
adc
push
fisubrl
and
daa
data16
adc
mov
sbb
mov
pop
mov
int3
insl
gs
and
repz
add
daa
mov
xchg
and
cmp
push
js
xchg
mov
test
cmp
sbb
out
imul
rcl
jg
in
sahf
or
sub
mov
mov
cltd
popf
and
mov
inc
pop
pusha
repz
pushf
in
fwait
leave
xlat
ret
movsb
jl
fcmovb
popa
aad
pushf
aaa
movsb
xor
in
cmpb
or
arpl
lods
sbb
lea
les
mov
lahf
or
inc
mov
stos
push
add
pusha
push
push
dec
inc
ror
pop
aas
jae
lcall
add
lods
js
shll
rcrb
pusha
dec
pand
sub
dec
addr16
outsb
fadds
push
xor
daa
xchg
scas
sub
jb
pop
push
pop
aas
in
push
pop
mov
jecxz
mov
add
cld
jne
inc
test
sahf
pop
cmp
or
pop
popa
add
icebp
test
stos
cs
push
mov
push
push
ret
pop
fs
pusha
fucomi
scas
cmp
inc
adc
test
movsb
std
sub
cmp
push
mov
pop
imul
cmpsb
push
pop
xchg
adc
adcl
pusha
xorb
dec
dec
add
sarb
lret
lret
jae
shrl
inc
dec
aaa
or
iret
push
push
or
aas
fwait
daa
dec
adc
fcomps
adc
jno
jns
and
jmp
xchg
jge
lahf
mov
or
sbb
jb
mov
stc
xorb
cltd
jmp
adc
cmp
stc
cld
clc
sub
es
or
insb
pop
addr16
jmp
jns
ljmp
lcall
loopne
lahf
dec
mov
mov
cmp
outsl
repz
fdivs
daa
jb
add
push
in
mov
imul
sbbl
mov
hlt
xchg
std
mov
add
jnp
dec
mov
lahf
cltd
aam
frstor
fiaddl
jbe
jecxz
dec
arpl
sbb
inc
loop
loopne
push
mov
push
scas
push
mov
sbb
jns
rcrb
call
mov
and
or
incl
mov
in
xchg
pop
adc
jge
outsl
rorb
add
jecxz
mov
jp
mov
adc
push
inc
nop
leave
dec
xor
adc
sarl
enter
add
sbb
iret
push
nop
rcl
cmp
lret
loop
pop
push
sub
mov
push
into
movsl
std
cltd
fdivrl
mov
loopne,pn
push
adc
xor
dec
ret
fwait
add
mov
mov
ss
pop
sbb
icebp
mov
cltd
pop
fs
ret
mov
hlt
add
push
out
sub
cmpsl
std
dec
rorl
push
adc
mov
daa
cmp
ljmp
xor
pop
xchg
call
xor
pop
push
and
jae
pop
mov
pop
int
jl
rclb
ret
jbe
pop
outsl
imul
adc
je
push
dec
mov
push
repz
push
xor
insb
xor
add
out
xor
sbb
or
xchg
or
push
loope
dec
subb
dec
nop
xchg
out
pop
loop
sub
pop
and
lret
loopne
sub
arpl
shl
mov
nop
sahf
xchg
ret
shll
jg
xorl
mov
sahf
movl
fdivs
cmp
push
std
cmp
repnz
jbe
inc
or
std
push
ret
lret
fcmove
sub
pop
js
idiv
push
mov
adc
pop
rorb
inc
shlb
jmp
jno
push
sbb
push
movsl
fisubrs
sarb
jae
mov
rcll
lret
aam
push
movsb
cmp
test
jne
js
ret
data16
fidivl
cmp
in
bound
xchg
ret
sbb
sub
je
sub
sub
jae
daa
xchg
adc
arpl
cmc
in
int
xchg
leave
stc
cmpsb
repnz
jb
jmp
imul
xor
imul
icebp
pop
sub
inc
imul
in
xor
fwait
xchg
or
das
mov
das
dec
lds
dec
adc
mov
aas
pop
int
fimuls
out
push
mov
inc
push
shrl
fists
xchg
in
sbb
inc
inc
inc
jnp
mov
int
fxch
adc
gs
ja
xor
imul
push
xchg
std
pop
push
pop
cld
mov
mov
stos
jp
xor
xor
and
out
cltd
push
cmpsl
or
test
cmp
cmpsb
fisubrl
cmp
or
enter
lds
inc
psubsw
or
orb
pop
je
fiaddl
mov
push
jmp
or
scas
pushl
out
or
int
mov
mov
xchg
adc
cmp
xor
xlat
shrl
push
and
lret
hlt
test
insl
ss
aaa
add
rcpps
xchg
les
xor
xor
or
orl
bound
loopne
fldenv
pop
push
xor
test
mov
jbe
adc
lea
dec
sbb
add
cmp
xchg
popa
outsb
push
imul
out
jno
cmp
sbb
aas
mov
in
jp
cmpsl
pop
cmp
xchg
sbb
jmp
or
xchg
xchg
pop
inc
stc
into
adc
repnz
leave
pop
sbb
xor
std
mov
pushl
lahf
ret
jp
jp
pop
das
mov
push
insl
sbb
std
mov
fstp
mov
inc
mov
sbb
enter
mov
xor
hlt
iret
xor
popf
push
daa
jo
hlt
jne
ljmp
xor
xor
leave
jp
jecxz
fadds
and
sbb
rcrb
cmp
mov
mov
adc
or
inc
pop
test
ljmp
pop
pop
jo
add
imulb
das
clc
fwait
jo
inc
mov
cld
mov
and
lret
jl
lahf
scas
pop
rcl
sbb
adc
mov
fs
arpl
lret
jl
ret
imul
inc
iret
add
mov
or
adc
sbb
repz
adc
push
aas
mov
pop
add
xor
shl
addr16
adc
or
xor
sarb
and
mov
push
mov
icebp
xchg
shll
loope
xchg
jmp
or
sar
adc
outsb
ja
loop
dec
mov
fnstsw
icebp
andb
and
xchg
mov
and
fwait
icebp
pop
xchg
xor
and
jmp
in
aaa
pop
fidivs
pusha
mov
mov
aad
mov
sub
sub
sub
xchg
cltd
arpl
loop
cmpsb
mov
cmp
test
sub
dec
addl
adc
mov
clc
pop
add
push
ficompl
stos
inc
jns
pop
mov
dec
ljmp
bound
xor
pushf
add
sarb
mov
js
add
frstor
addr16
adc
add
rcrl
push
jnp
rol
in
mov
rcrl
lock
mov
loopne
jp
incb
xchg
and
movsl
mov
imul
int
dec
aas
mov
mov
cmpsb
adc
fnsave
push
xchg
test
shl
mov
ror
or
daa
add
mov
xbegin
data16
cmc
jbe
mov
add
mov
stos
pop
mov
jne
push
push
jmp
fs
leave
or
xchg
stos
push
mov
and
bnd
insb
pop
loopne
and
dec
jns
incl
cmpl
or
xchg
and
arpl
cmp
fsubrl
outsb
pop
jbe
out
movsl
push
cs
adc
add
or
repnz
das
xchg
cmp
ss
fdiv
mov
adc
imul
pop
dec
xor
pop
inc
mov
cmp
dec
cli
into
fldt
push
mov
popa
xor
rolb
or
mov
fcmovbe
dec
and
ds
test
in
sub
mov
or
mov
dec
call
add
mov
adc
movsl
fistpll
pushf
scas
je
dec
mov
loopne
sub
pop
adc
mov
dec
mov
dec
jae
call
int3
mov
inc
cwtl
outsl
subl
insb
les
pop
test
add
lock
lds
pushf
fimull
nop
jp
mov
sbb
cmpsb
dec
bound
push
outsl
fstpt
xchg
jle
lea
push
xor
and
int
jno
cvttps2pi
pop
enter
mov
and
out
fcomp
ficoms
sub
outsb
stc
call
sub
pop
lret
cmp
inc
dec
hlt
adcb
pop
inc
inc
test
push
sub
sti
movsl
mov
rolb
pop
xor
dec
mov
xchg
inc
outsl
xlat
mov
loop
mov
add
adc
outsl
icebp
in
shl
jno
fdivl
cmp
arpl
lods
or
leave
int
sbb
xchg
scas
in
adc
or
shlb
lret
sbb
mov
and
dec
call
or
push
test
int
repnz
in
and
sbb
sti
inc
lods
sub
jmp
add
pop
jns
push
imul
push
movsl
push
sbb
adc
or
mov
lea
ds
dec
pop
int3
in
push
jno
and
mov
mov
test
out
and
push
bound
xchg
pushf
test
pop
orl
inc
sub
mov
call
dec
pop
jmp
xor
notl
shlb
mov
pop
sbb
popa
lcall
lods
in
inc
and
callw
imul
or
xor
push
inc
mov
out
ljmp
imul
stc
insl
adc
and
sbb
cmp
jmp
iret
add
call
jbe
cmp
xchg
or
cmpsl
pop
roll
inc
imul
lea
dec
dec
xchg
mov
ret
sub
mov
shrl
push
jnp
negb
push
jmp
fistpll
adc
lods
insl
stc
dec
pop
jmp
and
std
inc
pop
hlt
ficompl
imul
aam
adc
cmp
leave
mov
in
enter
mov
xor
jmp
loop
stos
or
mov
shlb
cmc
push
push
xchg
sub
dec
cmp
decl
mov
flds
pop
dec
sahf
in
nop
imul
aad
ret
jge
popa
ret
pop
pop
lock
addb
inc
mov
negb
cltd
mov
adc
and
dec
mov
popf
in
fwait
mov
pop
jnp
call
daa
sbb
fstps
push
add
inc
mov
popa
mov
fsts
sub
add
int
dec
aad
aas
sbbl
sahf
xchg
js
sahf
sbb
pop
sub
std
test
fsubl
sbb
mov
cs
jnp
js
int3
inc
rorl
dec
lcall
mov
loope
pop
pop
xchg
cmp
dec
mov
lcall
mov
mov
cmp
out
xorl
jmp
jae
cld
nop
xchg
add
popa
nop
cwtl
push
cmp
mov
sbb
pop
leave
mov
scas
push
clc
stc
sbb
rolb
mov
jge
sub
fwait
jmp
cmp
xlat
ror
push
clc
out
mov
mov
mov
ljmp
addr16
sbb
xor
std
push
xchg
push
adc
push
push
jbe
insl
arpl
and
insl
sub
adc
shlb
imul
mov
mov
adc
jmp
aam
sbb
pusha
and
loope
xchg
je
push
out
pop
jbe
movsb
xchg
in
test
fwait
sbb
imul
push
pop
mov
or
push
int
add
js
jns
mov
jmp
push
sub
stc
je
pop
jmp
xlat
sub
ja
mov
rorb
test
insb
shlb
les
inc
cltd
frstor
adc
lret
jb
inc
xor
jecxz
xchg
lock
in
and
mov
dec
shll
sti
sbb
cmp
push
jne
outsb
fnstenv
pop
int
mov
inc
cltd
jmp
daa
pop
js
out
aad
mov
pusha
mov
dec
shr
inc
dec
int3
ja
out
hlt
ss
cmpsl
push
mov
test
mov
mov
inc
pop
and
adc
push
aam
fisubl
inc
insb
pushf
inc
mov
ret
adc
lock
push
and
mov
push
inc
pop
sbbb
inc
jmp
aam
xor
pop
movsl
std
xor
jns
inc
insb
cmpsb
cltd
adc
adc
imul
test
data16
int
sbb
push
adc
lahf
push
pop
stos
iret
pusha
xor
fadds
test
in
dec
sbb
subb
push
mov
push
cld
jno
or
cld
mov
adc
sbbb
and
or
out
loopne
mov
sub
jo
fisttpl
imul
test
cli
test
orl
test
test
fwait
mov
lods
mov
aas
sahf
inc
cmp
and
jbe
or
aad
fwait
jae
sahf
out
push
sahf
push
cs
or
sub
sub
lods
dec
jo
outsl
mov
jo
into
mov
xchg
es
jmp
popf
js
adcl
inc
cli
mov
add
xchg
dec
xchg
push
les
pop
ja
push
push
lock
adcb
xchg
xlat
out
cld
pop
cwtl
pop
mov
ficompl
mov
mov
adc
nop
sub
jmp
rorb
out
sub
or
or
mov
lds
pop
xor
push
aam
xor
push
adc
cltd
shrb
jne
push
sub
inc
sbbb
push
loop
or
int
iret
jge
test
cmp
loop
add
iret
push
jo
test
dec
in
xor
aad
push
mov
add
cmp
sub
cwtl
aad
jo
jo
roll
mov
lret
pop
movsb
sbb
cmc
cmpsb
mov
fs
jns
xor
push
xchg
imul
xor
cmpsb
push
jmp
or
sub
jns
sub
dec
sahf
mov
add
scas
mov
xchg
data16
in
sbb
in
inc
push
ljmp
adc
pop
das
leave
icebp
lret
int
out
mov
push
aam
rolb
inc
pop
popa
mov
scas
bsr
add
mov
daa
or
call
icebp
call
mov
inc
mov
mov
sarb
pop
aas
loope
dec
fimuls
and
mov
mov
sahf
dec
imul
pop
cmc
filds
mov
je
jg
mov
dec
xchg
adc
stc
mov
and
arpl
xchg
cmp
test
jmp
je
or
sbb
ret
int3
and
aas
hlt
ds
stos
dec
cli
dec
stos
dec
mov
mov
cwtl
pop
repz
mov
sbb
arpl
pop
in
jo
inc
xor
sbb
dec
cmpl
insl
mov
ret
xchg
inc
jbe
lods
mov
into
aad
imul
pop
dec
mov
sti
out
loope
mov
in
mov
push
push
fistpll
rolb
pop
adc
mov
outsl
popf
insb
jb
in
ljmp
loopne
rcll
jp
js
enter
movsl
xor
aad
leave
les
jbe
push
xchg
aas
stos
hlt
sbb
jae
mov
out
mov
push
movsl
insb
mov
arpl
sbb
add
xchg
rclb
arpl
stc
sbb
push
lock
sub
mov
mov
mov
out
std
pop
sub
jne
or
imul
mov
push
iret
loopne
dec
stc
cmp
jl
pusha
and
cmp
fucomp
adc
jle
lods
dec
insl
in
lcall
and
push
icebp
mov
or
andb
rcll
xchg
lcall
fsub
mov
test
fs
les
fs
nop
and
push
fbld
mov
push
push
ficompl
jecxz
bound
sbb
add
mov
dec
cmp
lods
dec
imul
and
sarb
cli
mov
mov
adc
stos
out
dec
ret
mov
sbb
jecxz
and
mov
dec
inc
repnz
dec
scas
xor
push
js
mov
test
push
shll
ret
sub
ljmp
or
or
fadds
sbb
cmp
daa
fwait
add
orl
dec
xchg
cmp
pop
std
push
popa
arpl
push
mov
cmp
mov
mov
push
and
ds
or
push
fisubrs
push
mov
mov
or
inc
cltd
add
es
call
push
push
sub
hlt
jp
sub
into
and
push
jmp
push
mov
mov
inc
xchg
lods
test
or
cmp
or
scas
outsb
mov
icebp
xchg
lret
les
mov
pop
pop
inc
fildll
dec
mov
add
inc
jl
pop
jns
mov
xchg
in
inc
pop
mov
dec
outsl
add
xor
cltd
aaa
mov
add
pop
lcall
dec
adc
and
or
sub
stos
sub
cmp
lods
cmp
aam
pop
xchg
inc
stos
adc
xorps
lcall
fdiv
and
inc
iret
icebp
mov
xor
out
add
adc
test
push
outsb
adc
or
inc
stos
xor
jnp
xchg
add
add
scas
lcall
mov
and
inc
rcr
ljmp
mov
xor
psadbw
push
xchg
add
rol
mov
cli
stos
push
and
add
mov
out
addr16
je
nop
push
cmpsl
lea
jl
aas
push
roll
pop
adc
cmp
jae
mov
fs
fyl2x
in
in
mov
lds
repnz
mov
mov
adc
pop
daa
vorpd
push
pop
shrl
leave
sar
pop
and
push
push
sahf
pop
jo
ss
test
add
dec
sarb
xchg
testl
inc
lret
add
clc
sub
mov
frstor
rcll
imul
repz
jmp
ret
jnp
sub
insl
fwait
movsl
in
scas
aas
call
cs
mul
cli
pand
test
dec
jmp
movsb
insb
xor
dec
test
repnz
ja
adc
daa
sbb
repz
les
push
adc
ror
dec
ja
mov
or
push
pop
mov
imul
inc
and
int
xor
test
and
jge
icebp
xor
test
xorb
xchg
shl
xor
addr16
adc
cmp
push
nop
cli
jg
push
dec
sub
cmp
mov
filds
push
push
cmpsb
popa
xor
aas
sbb
stc
xchg
cld
fcoml
xchg
dec
push
pop
fisubrl
pop
jge
in
cmpsl
repz
xor
or
push
daa
popa
es
in
scas
push
out
cmp
fwait
cmpl
pop
es
or
mov
jo
adc
imul
iret
cmp
in
in
das
sbb
lock
aad
mov
cmp
adc
ds
jle
cmp
add
stc
sub
pop
aaa
lods
sarb
std
push
gs
adc
or
jp
inc
jp
outsl
lret
jl
fsubrs
push
rep
aaa
sub
fwait
xchg
sbb
inc
movl
mov
push
lahf
in
test
xchg
push
jg
xchg
adc
rol
cmp
inc
pusha
inc
imul
pushf
and
lret
gs
movsl
xor
xor
jecxz
push
jge
sub
mov
cmp
cmpl
and
mov
test
mov
imul
jp
andb
pop
mov
mov
call
ret
ffree
adc
sub
mov
inc
cwtl
sub
test
xchg
mov
jne
sub
fnstsw
lods
cwtl
fidivrs
sbb
lahf
pop
nop
add
push
push
mov
in
and
mov
push
sub
adc
iret
mov
lcall
push
bnd
fs
or
scas
lea
xchg
xchg
cmp
cmp
xor
dec
cs
dec
push
lods
inc
stc
xor
sub
inc
std
cs
ds
xorl
scas
mov
je
mov
or
call
and
movsl
mov
pop
mov
mov
nop
sbb
inc
popf
jmp
jbe
mov
scas
mov
iret
lret
lahf
pop
aad
xchg
repz
std
or
dec
dec
mov
and
mov
sti
cmp
cmpsl
ss
jmp
in
add
mov
scas
addr16
clc
sub
ds
cwtl
sbb
ljmp
jmp
aas
sub
mov
jl
cmp
into
pop
adc
js
test
mov
dec
push
sahf
in
sub
push
mov
jge
gs
inc
fldenv
cltd
push
and
fdivrl
lcall
dec
fsubs
in
fwait
adc
iret
mov
adc
push
movsb
mov
sbb
jbe
jle
aad
loop
pop
bound
vpxor
cmp
lcall
sbb
mov
fwait
push
int
mov
mov
and
aas
mov
push
sub
sbb
jae
fucomip
lcall
jp
lret
aad
jns
mov
and
mov
pop
lret
test
lods
lods
es
pop
inc
mov
nop
ljmp
adc
fcmovbe
js
lods
jnp
mov
push
je
ret
dec
mov
fmull
subl
cwtl
pushf
in
push
mov
dec
xchg
inc
or
push
sub
faddl
mov
filds
dec
mov
shrb
imul
orb
popf
jg
pop
int3
test
sbbb
inc
push
dec
cmpsl
push
shrb
imul
push
push
cmp
jmp
outsl
sbb
aam
jl
in
add
mov
jne
rorl
pop
push
in
xlat
bound
push
push
jno
mov
inc
jp
cmp
dec
adc
je
jbe
lea
arpl
mov
xchg
lods
mov
nop
and
mov
push
add
push
nop
jge
scas
cmp
scas
shl
or
loopne
shrb
mov
loopne
cmp
pop
jg
std
je
sahf
out
pop
aam
pushl
loope
js
add
pop
sti
lret
adc
loope
cmp
or
leave
into
push
out
imul
inc
cmp
cwtl
add
mov
inc
bswap
lock
fiaddl
outsb
dec
xchg
xor
cmc
inc
aaa
out
mov
dec
fadds
cli
sbb
adc
mov
popa
sub
inc
or
sbb
inc
loop
in
mov
xchg
pop
imul
call
shlb
aam
or
xor
sub
mov
call
addr16
or
adc
int
jo
aaa
mov
mov
js
cmc
shlb
jae
gs
inc
xor
dec
dec
fcompl
jge
pop
pop
sbb
stos
dec
call
and
mov
jb
ret
xchg
dec
adc
xor
arpl
cmp
or
sub
mov
mov
mov
add
ficoml
test
push
daa
sub
add
fsts
mov
sarl
pusha
imul
clc
dec
ja
ud1
or
call
fadd
sbb
test
insb
pusha
cwtl
jecxz
dec
mulb
sbb
and
lods
mov
xor
jnp
cmc
scas
xchg
sbb
rolw
pop
pop
ljmp
lea
cmp
scas
fimull
cmp
dec
jno
sub
mov
in
pop
lea
add
aad
adc
sahf
movsb
pop
ret
lahf
enter
add
popa
shll
cmp
stc
cli
inc
xor
js
adc
loope
adc
mov
out
and
icebp
and
mov
sahf
in
sub
lret
jne
lods
repnz
mov
aad
shrl
cmc
std
inc
cmp
xchg
jb
out
in
adc
in
imul
add
gs
push
shrb
xlat
jl
call
int
mov
jge
xchg
les
out
enter
shrl
lahf
push
enter
sahf
lcall
xor
xchg
lea
add
ret
mov
push
push
adc
punpcklwd
fsubs
dec
mov
mov
or
test
sub
lret
divb
xlat
cmp
adc
adc
xor
mov
scas
push
adc
out
xchg
stc
test
cmp
xchg
xor
pushf
stc
jg
push
xlat
out
mov
or
fnstcw
out
sahf
clc
addb
int3
mov
pop
jae
mov
push
rcrl
jnp
mov
scas
popf
dec
sub
fldenv
mov
sub
push
dec
std
mov
in
fisttpl
xchg
lahf
cltd
jmp
mov
and
mov
stos
add
daa
ret
pushf
pop
xorl
leave
dec
adc
out
int
pushf
les
pop
cmp
daa
sbb
out
fists
push
xor
sbb
or
cmpsl
out
fwait
repnz
test
push
lahf
jmp
aad
shll
cmp
cmp
jle
add
in
sbb
imul
daa
dec
ljmp
stos
pop
arpl
fcoml
cli
ja
fcomip
pop
ret
into
dec
shr
cmp
jmp
and
jne
loope
sub
test
xchg
out
sbb
adc
xor
ret
push
mov
rcr
dec
cmp
jo
pop
cmpsl
inc
test
test
and
repnz
testb
xor
jle
adc
aad
add
jl
lds
dec
xor
and
push
incb
fwait
dec
stos
test
xor
inc
shrb
notl
push
and
fwait
push
inc
popl
pushf
pop
leave
xchg
fidivl
call
pop
fcoml
push
mov
mov
stc
je
mov
cwtd
imul
int3
mov
mov
xchg
js
fs
pushf
mov
xor
stos
stos
je
icebp
bound
in
jo
inc
icebp
dec
imul
repz
fimuls
ds
icebp
add
xchg
xchg
rolb
testl
popf
out
inc
mov
loopne
les
iret
cmc
int
ret
stc
outsb
xchg
mov
cmp
popa
lcall
pop
dec
arpl
jmp
jnp
je
gs
xchg
dec
fsubrs
addr16
mov
jecxz
xor
jmp
rclb
pushf
jle
lahf
fadds
mov
push
dec
pmaxub
test
pop
push
sub
in
fisubl
and
jb
cmp
xor
cmpb
out
dec
xor
mov
pop
and
sbb
jnp
loopw
sar
add
jo
icebp
mov
int3
inc
pop
cmpsl
dec
jge
test
daa
icebp
negl
cmp
sbb
fisttpl
pop
insl
scas
dec
test
push
rol
pusha
or
cli
cwtl
pop
mov
inc
repz
adc
push
push
dec
sti
cld
push
push
cmpsl
leave
jl
popf
xchg
js
dec
enter
mov
cmp
push
loop
push
stos
test
out
inc
mov
inc
sahf
sbb
dec
out
xchg
repz
out
add
lar
dec
push
and
mov
sub
cmp
ds
or
sbb
add
andl
cltd
insb
jb
enter
jns
push
jnp
jl
in
outsb
xor
ret
sbb
mov
xchg
sbb
and
push
xor
mov
dec
push
shlb
mov
or
xchg
imul
or
adc
pop
or
test
push
mull
sub
adc
sub
push
xlat
mov
dec
aas
std
push
loope
pop
mov
sbb
or
sbb
lcall
stos
fsubp
test
shr
cltd
sbb
xchg
and
cmp
call
sub
xchg
push
push
mov
xchg
add
ret
addl
cmp
xchg
mov
lock
je
roll
notl
dec
test
aad
fdivrl
nop
repz
xor
jp
sar
stc
xchg
fsubrs
je
outsl
je
aas
sti
ss
mov
fdivl
lret
adc
fldl
mov
jecxz
push
mov
lods
pop
pop
or
lods
mov
xchg
pop
cwtl
and
and
mov
xchg
lret
xor
inc
es
arpl
push
test
dec
mov
in
lret
sbb
push
pop
or
jecxz
cmpsl
icebp
adc
lods
in
mov
mov
sahf
sarl
fs
test
insb
pop
mov
sbb
orb
scas
test
loopne
pusha
mov
in
sarl
inc
push
mov
xchg
mov
in
sahf
mov
cmpsl
xchg
addr16
push
add
push
mov
out
idivb
cmc
push
xchg
jbe
repz
pop
inc
test
mov
dec
dec
or
xlat
add
and
in
subb
dec
imul
je
dec
cltd
pop
jmp
sbb
hlt
jae
add
sbb
or
jae
mov
mov
cmp
cmp
mov
rorl
pusha
jae
mov
pop
add
xlat
aas
hlt
sub
xchg
or
out
jbe
movsl
test
test
or
in
or
jmp
adc
push
cmpsl
ja
adc
mov
jbe
cs
dec
notb
in
aam
sbb
call
inc
and
call
cmp
push
out
jmp
jnp
arpl
dec
out
jae
in
sbb
loope
or
dec
mov
cmp
mov
int3
adc
pop
cltd
lcall
sub
mov
aas
sar
notb
arpl
xor
jns
jl
mov
cltd
lret
add
and
out
das
div
test
fistl
idivb
and
gs
sub
mov
repnz
or
add
sbb
ret
mov
jle
jbe
or
out
ja
clc
add
lods
in
out
and
jns
xlat
adc
imul
mov
add
stos
adc
lock
jp
fcmovnb
push
mov
push
dec
cld
icebp
sbb
dec
pop
lcall
in
mov
rclb
mov
in
mov
adc
imulb
xchg
xor
stos
ss
sbb
orb
push
add
cmp
dec
mov
inc
dec
or
pusha
es
dec
clc
test
pop
push
lahf
popa
lds
xor
lods
jecxz
add
mov
xlat
mov
lds
push
jo
and
shrb
mov
test
rcrl
jo
or
xchg
mov
pop
xlat
pop
leave
adc
dec
ss
mov
ret
and
loope
lods
dec
sbb
pop
orb
pop
dec
int3
nop
fcmovb
add
test
xchg
test
sbb
fcmove
add
je
popf
mov
pop
repz
lret
mov
xchg
pop
shlb
push
movsb
mov
cli
imul
fdivrs
jge
shl
or
in
cli
sub
mov
push
lret
xor
sbb
jp
cmp
in
fstps
push
sub
cmp
insb
ss
pop
mov
sub
std
popf
jb
or
insb
pop
pop
sub
jecxz
mov
scas
mov
mov
into
addr16
cli
pusha
jge
or
mov
push
adc
pop
loope
lds
imul
adc
std
test
mov
pop
and
inc
mov
cmp
ficoms
xchg
dec
lret
push
mov
pop
push
jo
pop
shll
lcall
aaa
and
jo
jae
add
test
mul
mov
fildl
ret
sbb
mov
pop
divb
mov
mov
data16
and
loope
movsb
ret
scas
mov
mov
mov
loopne
inc
call
inc
dec
sub
push
inc
in
dec
in
sti
xlat
test
hlt
shl
adc
lea
iret
add
pop
lret
out
push
inc
mov
jbe
enter
inc
jg,pn
insl
rcrl
xor
lahf
dec
mov
mov
ret
ss
test
pop
or
and
push
aam
cwtl
data16
aad
pop
fldenv
test
into
mov
clc
bound
mov
ds
pop
xchg
cli
or
popf
fbld
call
xchg
push
mov
inc
inc
fimull
js
ja
bound
lock
dec
iret
pop
sub
sub
xchg
sbbl
psadbw
outsb
push
or
sahf
sbb
sub
test
pushf
jp
mov
push
push
in
and
or
sub
add
fwait
push
nop
mov
jo
pop
clc
adc
adc
cmp
fs
jp
cmp
xchg
paddusb
jno
int
andl
or
lret
movsb
push
sbb
pop
xchg
cltd
inc
scas
mov
inc
ds
loope
test
pop
or
cmp
mov
nopw
xchg
in
mov
sti
dec
mov
xor
sub
sbb
jae
stos
mov
xchg
lods
lret
cmp
lds
xchg
xlat
into
aas
imul
inc
test
mov
pop
push
pop
in
and
test
push
bound
adc
cld
sub
or
arpl
out
orb
mov
adcl
push
dec
sbb
add
mov
outsb
xchg
pop
add
xchg
cmc
lret
dec
sub
or
or
stc
test
in
and
sub
mov
and
loope
inc
xchg
subl
mov
dec
pop
scas
xor
cli
cmp
dec
push
jo
leave
std
sbb
aaa
sbbb
xor
enter
xchg
jp
xchg
inc
mov
xchg
jnp
cmc
add
lods
mov
pop
jle
inc
inc
fucomp
scas
lock
mov
dec
pop
jl
xchg
dec
cltd
cmp
stos
sbb
inc
fstpt
cli
daa
cltd
fcmovne
xchg
sbb
hlt
out
mov
pop
sub
push
sub
lock
iret
push
mov
adc
mov
pop
ds
inc
data16
loopne
and
hlt
cld
scas
mov
push
xor
scas
xor
sbb
int
sar
xor
adc
fsubrl
sbb
add
add
aam
xchg
push
js
xlat
cmp
cmc
or
add
inc
mov
pop
lods
jge
inc
push
push
pop
adc
cmp
jae
addr16
pop
jge
jecxz
int
add
or
pop
xor
cmp
or
adcb
shrl
test
mov
dec
push
sub
mov
mov
jo
jno
incl
cltd
aam
and
or
and
out
loop
loop
sti
mov
add
dec
sarb
repnz
dec
ds
adc
or
push
inc
insl
mov
js
cmpsb
popf
movsb
in
pop
repz
pusha
repz
out
and
cmp
mov
in
push
jmp
rol
jnp
insb
mov
xchg
test
xor
mov
testl
test
jbe
push
xchg
andl
dec
repnz
adc
nop
mov
mov
sub
pop
xchg
test
sbb
mov
sbb
sahf
or
stos
fldenv
and
shrl
xchg
loop
inc
sbb
nop
mov
aam
cli
sbb
jmp
mov
pop
in
das
jge
pop
sub
or
loope
jp
xlat
push
je
shlb
mov
mov
clc
cmpl
sarb
in
loop
in
repz
cltd
arpl
sbb
inc
xchg
xor
mov
mov
adc
pop
inc
mov
push
cs
mov
ljmp
sbb
jno
es
cld
jno
loope
aad
inc
mov
ljmp
sbb
lods
shlb
mov
dec
addb
mov
arpl
push
fs
jae
test
xor
ss
dec
lods
pop
and
cmp
or
inc
adc
lret
pushf
das
in
sub
cmp
push
and
xor
mov
mov
jp
sub
mov
push
in
push
push
cli
and
arpl
jns
cmp
push
cltd
inc
lahf
push
dec
xor
jne
addb
dec
push
popa
gs
lods
xchg
mov
dec
aam
and
xor
add
mov
fcmovnu
mov
xchg
xchg
or
pop
add
ret
adc
ds
and
and
js
outsb
mov
cmp
divl
in
leave
mov
mov
roll
dec
inc
ret
pop
fisttps
add
and
mov
sub
inc
add
push
adc
jle
adc
pop
cmp
pop
cli
mov
out
test
or
nop
sahf
jns
fsqrt
cmp
das
xchg
lcall
jg
jb
fisubl
xchg
push
mov
cld
loop
int3
jo
in
xchg
xchg
jne
insl
pop
mov
orl
int3
imul
test
xor
push
pop
nop
push
in
int
inc
popf
xchg
cmp
cltd
fiaddl
arpl
fbstp
jp
mov
add
in
xchg
xor
mov
dec
jae
mov
or
out
sbb
fs
into
add
xbegin
popa
dec
aaa
aam
cld
mov
pop
cs
inc
inc
adc
daa
popf
popf
cmp
add
dec
shrb
pop
sti
push
lock
das
lcall
xor
ljmp
cld
je
pop
xor
mov
stos
push
add
jmp
cmp
mov
and
cmp
pop
adcb
jb
das
sbb
and
cmc
jg
mov
cmpsl
mov
add
cltd
fucomp
mov
ljmp
test
xchg
scas
pop
ret
sub
mov
cmp
mov
hlt
xchg
orb
pusha
xor
sbb
cli
movsl
lods
imul
movsl
jbe
leave
aaa
cmp
sub
adc
and
and
jns
sbb
xchg
sub
cmpsb
mov
xchg
or
xchg
pop
jle
daa
add
std
loope
fildll
icebp
arpl
or
lcall
mov
mov
mov
popl
sarb
clc
mov
std
sub
test
fisttps
pushf
or
fwait
andb
jnp
and
fdivrl
xor
bound
mov
loop
scas
int
or
jno
and
xchg
cmp
ficoml
inc
push
push
pop
mov
movsl
movsb
je
mov
push
imul
sbb
mov
pop
ret
xor
icebp
adcl
sbb
inc
push
test
movsb
xchg
rolb
and
add
sub
dec
mov
mov
iret
jnp
or
pop
loop
sbb
and
outsb
icebp
mov
cmp
adc
ljmp
mov
ret
sub
and
jbe
repnz
insb
push
fnstsw
fisubrs
xchg
adc
mov
dec
ret
or
sbb
scas
push
mov
xor
mov
jl
ficoms
faddl
xchg
pop
jge
or
push
cwtl
std
lcall
mov
insb
push
and
leave
xor
rcr
test
inc
mov
inc
ds
ds
pusha
popa
loope
test
loope
pop
repnz
inc
sub
test
pop
js
lods
popa
jno
jns
outsl
rolb
cmp
sub
push
stos
fcoms
loop
cmpsb
pop
outsl
subl
jg
mov
or
mov
or
cmc
sti
mov
stos
aam
inc
int3
incl
cli
inc
loop
adc
shlb
hlt
jae
xor
add
mov
mov
push
adc
je
adc
mov
icebp
nop
pop
mov
push
fildl
add
mov
xor
jmp
mov
aam
dec
sbb
xchg
leave
xor
xchg
sub
sbb
dec
test
push
and
mov
lret
imul
out
ficompl
iret
mov
shll
push
gs
push
imul
flds
decb
mov
mov
pop
cmp
mov
add
jne
int3
pop
loop
into
fs
cld
xchg
call
and
test
pop
inc
repz
fwait
lea
data16
inc
iret
jb
inc
cld
adcb
sbb
adc
dec
add
aad
mov
cmpsl
mov
xor
cmp
fldt
adc
pop
out
aad
dec
xor
ror
push
insl
out
ret
bound
data16
mov
shlb
cmp
clc
shlb
sbb
pop
sti
fs
sarl
mov
sub
mov
rorb
pop
les
imul
xchg
sbb
dec
cmc
jge
dec
add
mov
inc
fmulp
jecxz
jle
fs
orb
nop
inc
pusha
mov
addb
push
ret
xor
mov
ret
aaa
in
pop
xchg
inc
or
push
inc
xlat
mov
loope
adc
cli
cld
or
inc
rolb
sahf
movsb
xchg
pop
push
pushf
cli
fs
inc
inc
sbb
fnstcw
lret
cmpsl
pushf
pop
mull
dec
mov
and
lret
push
pushf
stos
mov
mov
loope
vmaxss
mov
jmp
cmp
xlat
add
lods
test
mov
mov
mov
mov
inc
hlt
scas
inc
pop
call
pop
ja
repz
add
scas
add
xchg
dec
sti
mov
inc
cs
lcall
stos
int3
add
mov
sub
jecxz
iret
fmul
std
mov
or
loope
lods
out
pop
add
pop
fisubrl
test
mov
jbe
shrl
lret
ret
hlt
lret
mov
add
xchg
mov
fiaddl
inc
stos
out
or
data16
cli
dec
push
in
stos
and
lret
mov
adc
jmp
mov
stc
and
sbb
jecxz
adc
mov
and
ljmp
je
testl
add
js
mov
xor
and
loopne
sub
in
rorb
and
dec
sub
push
ss
js
cmp
clc
fimull
push
int
adc
dec
cmp
sti
not
jg
jle
arpl
mov
xor
out
and
jns
jo
pop
roll
mov
or
push
jns
mov
out
pop
loopne
ljmp
addr16
xor
dec
addr16
sbb
adc
enter
dec
iret
enter
cs
mov
sub
xor
loope
sub
and
out
jmp
sbb
mov
xchg
lret
fimuls
divb
popf
xchg
pushf
mov
mov
pop
xor
imul
pop
js
add
pop
mov
test
cli
adc
sahf
lcall
xchg
enter
dec
incl
pop
add
mov
xor
shlb
mov
xchg
xorl
inc
xchg
loope
mov
jae
jge
outsb
bound
and
shrl
xchg
jnp
stos
cmpsl
pop
xchg
andl
shrl
pop
sbb
cltd
imul
cmp
pop
dec
clc
test
add
mov
sbb
std
sbb
pusha
popa
adc
roll
sti
test
mov
in
fstpt
sahf
pop
fldenv
inc
movsb
xor
cli
addb
in
nop
sbbb
cltd
push
sub
mov
pop
dec
add
repnz
or
outsb
mov
pop
decl
inc
outsb
dec
test
xchg
push
js
enter
out
dec
addb
mov
push
or
lods
rol
movsb
cmpsb
repz
push
and
jp
sub
adc
pop
push
mov
fdivs
ret
cs
int
xlat
jo
mov
inc
stos
mov
inc
lods
call
jp
jg
in
aad
pushf
lods
out
sahf
push
in
fldenv
cmp
dec
cmp
mov
in
pop
lahf
outsl
mov
addr16
test
xor
bound
sbb
inc
cmc
cmp
mov
subl
rcrl
dec
inc
rolb
sti
das
es
mov
nop
scas
in
sbb
push
pop
add
repz
sti
bound
push
mov
loopne
jb
lods
pushl
sbb
pop
mov
cwtl
inc
sahf
imul
lahf
push
sbb
in
mulb
sub
cmp
inc
xlat
loope
xchg
mov
inc
dec
mov
imul
movsl
sbb
mov
shlb
shl
hlt
repz
in
aas
inc
jo
pop
mov
add
or
leave
cmc
out
jl
inc
jno
mov
xor
ja
pushf
cmc
inc
adc
imul
lret
stos
movb
jno
push
mov
cwtl
xchg
loopne
pop
test
push
add
push
andb
mov
das
dec
lds
dec
sbb
sbb
lcall
lcall
in
fs
test
push
xchg
ljmp
push
mov
lds
vmovaps
test
sbb
mov
shlb
jb
add
add
bound
mov
xchg
loop
sub
adc
loop
mov
repnz
cmc
mov
in
je
repz
mov
sbb
sbb
push
arpl
mov
btcl
ds
add
add
adc
movhps
mov
jmp
fldt
pop
add
popa
aas
cs
les
cmp
dec
mov
push
into
stos
imul
rcrl
out
dec
or
inc
xor
ror
mov
in
xchg
mov
faddl
dec
mov
out
mov
jns
and
pop
test
jb
insb
out
enter
decb
sub
push
mov
icebp
fistpl
leave
xor
push
cli
cmp
mov
mov
push
dec
insl
inc
mov
filds
push
add
ret
sahf
or
orb
sub
sub
mov
fistl
pslld
lods
inc
push
fisubrl
sbb
pop
popa
xlat
cwtl
cld
mov
sub
jmpw
mov
xor
push
mov
pop
in
mov
sub
adc
xor
filds
and
push
bound
out
pop
movups
test
xor
sub
xchg
insl
cmpsl
fcomip
int
subb
adc
rclb
orl
xchg
mov
mov
xor
test
pop
mov
cwtl
sbb
pop
add
pop
jns
out
inc
rcrl
stos
lret
or
inc
ret
sub
pop
mov
xchg
push
mov
lea
cmp
xchg
repnz
sti
mov
sub
test
and
popf
movsb
adc
cli
push
xchg
lgs
xorb
test
lahf
or
fsts
adc
iret
daa
xor
jmp
or
in
ficoml
cs
popa
stos
inc
out
cmp
pop
repz
test
jge
jge
out
sub
or
mov
mov
inc
aaa
mov
test
fxch
pop
shl
mov
icebp
push
inc
lds
jge
mov
jae
icebp
enter
mov
loop
xor
pop
cmp
jl
ss
int3
pop
inc
mov
sub
jo
loop
lods
cs
and
filds
jp
popf
jno
fimuls
lods
cmp
push
push
cmp
divl
sbb
outsb
ficoms
push
pop
mov
push
mov
pushf
or
subl
lods
pop
xor
sarb
sub
mov
jae
rcll
xor
rorl
cmp
lea
pop
cmp
dec
xchg
pop
sub
testl
and
inc
and
daa
aad
movsl
cwtl
xor
jp
stos
hlt
push
dec
xchg
add
mov
out
push
loope
in
mov
adc
xchg
mov
jecxz
jb
sahf
jle
inc
out
loope
test
mov
in
icebp
out
subb
xchg
popf
and
in
imul
int3
fldcw
sub
popf
loop
cwtl
imul
mov
nop
jb
test
push
push
fs
xchg
xchg
push
fldl
mov
dec
std
pop
pop
xchg
mov
adc
mov
lods
imul
aam
loopne
fidivrl
and
lods
jg
jmp
and
pop
pop
subl
fs
add
jae
mov
mov
inc
rcrl
jp
es
mov
sbb
mov
fs
sbb
sub
fs
arpl
mov
lods
mov
jge
mov
popa
or
call
adc
cmpsb
insl
mov
shrl
xchg
adc
and
mov
dec
sbb
xchg
push
jecxz
out
jno
xlat
rcrb
pop
mov
fldl
mov
rorb
outsl
test
cmp
push
cmpsl
xchg
sbb
imul
stos
ficomps
fstl
cmpb
pop
and
pop
push
cmp
ja
out
mov
cmc
pop
std
and
xor
mov
mov
add
cmpsl
pop
test
aas
and
jg
pop
je
mov
std
mov
adc
mov
jg
xchg
mov
xchg
or
cmc
cmpsl
pushf
mov
xchg
mov
adc
push
add
fistps
pushf
loopne
dec
cmpsb
repnz
xor
lcall
cwtl
mov
xorl
lods
jl
lea
mov
fcomps
lods
cli
sbb
mov
rolb
mov
sub
loopne
xchg
xlat
sub
cmpsl
mov
jg
sub
jnp
insl
jbe
xchg
xor
inc
sub
in
rorb
sub
rorb
negb
sti
cmp
aam
movb
in
in
xor
and
dec
hlt
pop
popf
daa
cld
and
jmp
cmp
cmp
pushf
mov
fildl
outsb
ficoms
dec
mov
jnp
cmp
push
pop
std
aad
pop
pop
sbb
ds
mov
iret
add
xor
in
or
and
lret
sahf
jbe
sub
push
pop
push
cmpsb
imul
xchg
sbb
xor
mov
adc
shlb
outsb
add
outsb
pop
jne
insl
int3
loop
xorl
ljmp
cmp
pop
popa
jecxz
fwait
cmpsl
fs
or
bound
cli
dec
pushl
sub
fsubr
xchg
jge
xchg
repz
push
in
lcall
jl
cmp
int3
jnp
adc
xor
sub
loopne
sub
mov
pop
sub
out
or
pop
push
insb
jo
jbe
inc
sbb
push
dec
push
scas
add
sub
lock
sti
add
iret
pop
mov
dec
cmc
mov
cmpsb
xor
enter
pop
pop
enter
push
adc
jb
xor
cs
or
std
pop
mov
shl
movsl
js
dec
sbb
cmp
into
jecxz
xor
inc
iret
insb
lods
xor
leave
adc
sub
push
dec
fsts
pop
lret
pushw
dec
adc
icebp
lret
jle
xchg
mov
push
outsb
sarb
addr16
and
movsl
xchg
add
enter
loop
mov
flds
cmp
cmp
xor
inc
iret
mov
mov
mov
cmp
sbb
aad
cmpsb
out
popa
dec
in
sbb
es
and
adc
or
push
pop
add
xor
mov
pop
lret
cltd
xor
dec
in
pusha
loop
in
rep
mov
push
fbstp
xchg
js
mov
xor
pop
pop
insb
stc
dec
lret
addr16
popf
fstp
dec
ror
out
int3
fs
or
pop
or
cmp
dec
inc
js
mov
cmpsl
inc
fisubrl
jp
inc
push
sahf
popa
pop
lea
lods
cmp
std
enterw
jns
iret
mov
dec
cltd
popa
add
jmp
add
jecxz
shrw
and
pop
pop
push
shll
add
in
sub
dec
dec
mov
fidivrs
xlat
andb
sub
out
inc
call
cmp
push
fdivrs
sbb
sub
stos
pop
jns
and
cmpsl
fcomi
aam
ljmp
mov
mov
mov
sbb
decb
sub
pop
pop
lds
movsb
scas
out
pop
inc
out
inc
dec
mov
inc
dec
fisubs
pop
push
out
rorb
lret
lea
xlat
adc
inc
je
iret
subb
stos
ljmp
lret
pop
mov
xchg
rcll
push
loopne
jbe
push
jmp
leave
das
loope
jne
jne
add
out
sub
jne
inc
xor
ret
add
adc
repnz
pushl
stos
cmp
mov
loopne
jns
popf
sub
jle
mov
sbb
or
mov
lds
mov
movsl
mov
mov
jecxz
int3
das
ss
dec
mov
out
cmp
xor
enter
shlb
dec
push
inc
adc
lcall
mov
imul
jecxz
add
mov
cmp
in
xor
xchg
mull
test
repnz
mov
shll
mov
jmp
cltd
pop
jecxz
xchg
sarl
loope
int
popf
mov
mov
ret
mov
xor
push
fcomp
push
cmp
jle
adc
iret
push
enter
addl
xor
xchg
xor
lcall
push
jno
or
xor
rolb
inc
mov
sbb
andl
jo
adc
push
loop
mov
xor
stc
and
adcl
fs
stos
stos
lret
data16
cld
jne
lahf
mov
popf
repnz
xor
data16
adc
add
orb
sti
and
cmpsl
addb
jg
dec
or
mov
fidivrs
fistl
jmp
pop
idivb
jmp
jmp
icebp
pushl
lahf
sub
pushf
fs
cmc
inc
push
dec
lds
sbb
inc
xchg
mov
cwtl
inc
ljmp
add
rcrl
and
inc
push
inc
xchg
inc
in
or
frstor
sar
dec
cmp
adc
imul
mov
adc
sbb
mov
jp
inc
ret
dec
dec
dec
pop
jnp
cmp
faddp
enter
jle
push
xchg
fidivl
in
lret
or
adc
cmp
xchg
xor
jp
mov
cmp
push
push
cmp
jge
push
pop
mov
cmp
jns
jbe
fsub
shl
fs
fdivrs
imul
push
shl
or
ljmp
shll
scas
lret
inc
mull
sub
xor
lods
add
push
imul
mov
sbb
rol
mov
mov
cli
adc
mov
dec
aad
mov
jmp
fstpl
xchg
jp
dec
cmp
push
iret
mull
stos
or
inc
shll
jl
xchg
ja
lds
push
push
shrb
pusha
jp
and
stos
fstpt
xchg
add
pop
sbb
repnz
jl
addb
outsl
pop
out
xlat
pop
jmp
movaps
ss
dec
inc
popa
push
push
cmp
seto
cld
int
cmp
mov
out
mov
mov
bound
dec
out
inc
xchg
movsb
mov
adc
mov
mov
fldcw
cmp
mov
gs
pop
stos
and
daa
pop
add
sti
mov
cld
ja
out
aam
cmp
jecxz
sbb
jge
dec
sbb
or
es
ret
stc
int3
jg
adc
or
leave
sbb
fdivrs
test
test
cmp
push
call
scas
push
or
or
mov
daa
out
dec
inc
fisubrs
and
aad
xlat
popf
test
dec
cmp
push
cmp
inc
test
jmp
lcall
adc
add
fnsave
push
punpckhbw
decl
xlat
inc
call
inc
ss
loop
sbb
fstpt
xor
clc
dec
jecxz
dec
fnstcw
fidivrl
sbb
fstpt
cmpsb
test
inc
fsts
int
fwait
sti
sub
jbe
shl
add
js
repz
mov
icebp
adc
aas
jge
inc
in
xchg
cli
mov
sarl
dec
or
push
sbb
jns
fadd
arpl
loop
addl
in
cmp
push
aas
sub
int3
cmp
js
mov
and
ds
inc
lods
js
dec
dec
dec
ss
add
pop
in
jbe
jp
sbb
mov
or
fstp
in
outsl
and
insb
mov
xchg
jmp
pushl
xor
adc
imul
dec
add
iret
clc
lods
enter
nop
pop
pusha
in
cmp
dec
jnp
xchg
inc
cmpsb
sti
pop
mov
js
sbb
int3
nop
lcall
sbb
push
push
adcl
sub
push
or
and
jle
mov
push
rorb
and
add
lds
int
rcr
jge
mov
cmpsl
popa
mov
fldenv
push
mov
mov
lds
push
inc
std
mov
push
mov
xor
adc
mov
rep
push
pop
ret
hlt
jmp
outsl
mov
add
loope
bound
fcomi
js
xor
add
cmp
out
je
jnp
mov
cmpsb
outsb
or
movsb
test
scas
xchg
ret
dec
fwait
daa
push
into
push
mov
dec
lahf
or
xchg
js
sti
test
xor
mov
push
mov
int
or
push
add
les
pop
add
aad
shll
lahf
out
or
das
mov
pushf
clc
outsl
xchg
pop
xor
sbb
push
fcmovnb
jmp
sarb
xor
leave
mov
sub
push
fsubrs
jp
push
cwtl
mov
movsl
push
fcompl
sbb
adcl
movsl
add
popf
std
push
icebp
fdiv
xor
negl
popf
mov
pop
jo
dec
dec
inc
shlb
and
xlat
popf
mov
into
mov
or
mov
lret
popa
push
sahf
out
mov
hlt
pop
sub
fistl
insl
adc
cwtl
enter
cmp
and
sbb
adc
hlt
aad
pop
push
sbb
xor
fdivrs
mov
inc
cmp
fiaddl
mov
mov
cmp
pop
mov
test
pop
mov
mov
and
in
sbb
pop
and
jne
inc
xchg
push
lret
fsubs
dec
in
dec
je
lods
sub
xorl
mov
insl
jno
out
mov
pop
pop
in
ret
data16
xor
jae
scas
ja
inc
or
mov
push
sbb
mov
pop
arpl
paddd
sbb
sbb
loop
sahf
xchg
enter
xor
arpl
sarb
sub
and
xchg
iret
std
xchg
cmpsl
jle
push
sub
xor
mov
jns
js,pn
lds
shufps
subl
movsb
add
stc
cmp
push
jnp
aas
mov
out
lds
mov
stc
std
outsl
addr16
test
test
push
cmp
pop
stos
loopne
mov
and
dec
faddl
and
ret
push
dec
cmp
movsb
mov
jge
test
push
jns
and
mov
nop
or
jmp
inc
cmp
jmp
bound
sub
call
es
das
inc
fistpll
cmp
dec
in
and
rorw
pop
or
movsb
pop
inc
push
test
mov
sub
lret
inc
push
fidivrs
movsl
xor
and
push
rcll
roll
dec
and
call
sbb
sbb
cmp
test
inc
scas
add
mov
pop
stc
imul
call
mov
pop
sub
inc
out
xchg
dec
dec
jecxz
into
and
lock
add
pop
pop
nop
xchg
cmp
xor
orl
push
mov
cmp
enter
sub
insb
xor
outsb
or
sbb
cmpsl
xchg
dec
imul
imul
and
mov
sbb
sub
cmc
icebp
mov
and
sbb
fcmovb
adc
ja
and
ds
inc
cmp
dec
sbb
lock
dec
pop
lcall
aad
mov
in
in
and
mov
andb
ss
mull
jnp
dec
xor
in
lcall
outsl
dec
enter
bound
push
sbb
leave
sbb
mov
lods
cmp
hlt
ss
mov
add
mov
stc
mov
testb
popa
dec
insb
out
and
sub
out
in
aaa
pop
test
sti
and
bound
aad
negb
cmp
jmp
dec
push
sti
jge
jae
les
rol
push
xchg
cmpsb
or
dec
add
add
js
adc
test
mov
push
hlt
jne
mov
and
fs
js
insl
inc
jae
xor
popa
push
les
adc
fwait
rcl
push
xlat
push
jmp
sub
push
repz
fxam
dec
lcall
out
fldt
daa
fists
cmp
repnz
mov
and
dec
dec
add
jns
cs
ja
aas
xchg
mov
cmp
xchg
sbb
pop
sti
jae
jp
jl
xchg
dec
stos
outsb
inc
pop
into
je
ljmp
pop
mov
scas
sbb
push
in
push
pop
roll
insl
outsl
jno
mov
insb
add
loopne
std
push
movsl
in
pop
cmp
mov
popa
mov
fnstcw
push
gs
test
dec
mov
in
or
jmp
cmpsb
mov
ja
mov
xchg
adcb
paddusb
int3
push
mov
dec
push
test
mov
inc
and
xchg
xchg
iret
sub
mov
dec
fdivl
mov
inc
add
int
jo
add
jl
add
adc
ficoms
test
sbb
xchg
test
xor
icebp
inc
pop
ljmp
xchg
sbbb
add
pop
dec
movsl
add
mov
mov
and
push
mov
aam
fs
adc
dec
xor
ss
jecxz
pop
sub
enter
loopne
xchg
ds
sub
fsub
inc
mov
dec
repnz
jnp
leave
fwait
dec
jp
or
pop
repz
push
sub
xor
mov
shlb
leave
xor
fldt
test
cmp
daa
mov
and
addr16
sub
repz
aas
inc
pop
push
stc
inc
clc
sti
add
movsb
or
cmp
test
mov
js
loopne
cwtl
jo
xchg
push
cmp
or
rolb
mov
xchg
rcrb
ss
dec
js
jg
andl
data16
into
movb
push
rcl
xchg
cmp
movsl
out
jno
cmpsl
int3
dec
jnp
je
push
sbb
js
popf
sahf
jnp
mov
xor
jns
negl
andl
sbb
sub
movsb
xor
xchg
pop
push
in
arpl
les
jmp
out
sbb
rcll
jns
mov
ficompl
rcrl
loope
mov
jne
add
sub
cli
cmp
cli
fdivl
mov
adc
push
xchg
xor
dec
inc
pop
lods
xchg
cmpsl
in
xor
test
pop
mov
push
mov
cmp
sbb
gs
js
int3
dec
lds
lods
cltd
push
pop
lea
jecxz
mov
sahf
xchg
mov
mov
bound
imul
cmp
ret
xor
jo
cltd
pusha
cmpsl
add
push
mov
jnp
loopne
loop
popa
andl
inc
pushf
sbb
mov
mov
mov
jns
and
or
and
xor
fcmovbe
shrl
and
pop
sub
cmc
or
xor
in
inc
adc
cmp
dec
inc
or
or
inc
and
xor
adc
adc
xor
je
or
jb
fidivl
dec
hlt
inc
or
xchg
mov
fisttpl
icebp
lock
mov
in
adc
push
out
andl
push
into
data16
out
push
loopne
push
mov
mov
arpl
insl
stos
jae
fwait
pusha
cld
sbb
jge
adc
mov
cld
sub
xor
dec
orb
mov
sbb
pop
adc
mov
mov
cmp
sbb
ret
ss
push
imul
test
in
xor
fcmovne
das
in
cmpsl
push
test
loopne,pt
cmpsl
pop
sub
les
sub
push
pop
adc
fmul
call
rorb
and
pushf
add
pop
outsb
adc
add
xchg
mov
or
or
mov
xor
jne
inc
iret
pop
fisttps
push
cmp
dec
and
sub
pop
pop
rcrl
mov
inc
pop
std
cs
lret
cmc
nop
add
rcr
and
das
jne
push
push
shlb
outsl
sbb
mov
subps
dec
cwtl
test
pushf
mov
mov
in
sub
push
notl
out
aad
incl
in
adc
dec
stc
adcl
cmc
or
int
pop
mov
pop
inc
xchg
aaa
xor
mov
out
sub
aad
and
mov
imul
call
movsl
in
inc
sbb
lret
adc
sahf
mov
or
test
imul
das
cmp
aad
inc
testl
in
daa
in
pop
in
push
and
test
rolb
sub
jp
inc
pop
jge
mov
out
inc
adcb
fimuls
outsl
pop
mov
cmp
shlb
pop
or
shrl
out
and
pusha
xchg
push
pop
jo
or
loop
shlb
and
bound
es
in
std
call
push
ljmp
push
inc
xor
sub
mov
pop
mov
pop
enter
pop
push
pop
jo
cs
loope
adc
pop
dec
jo
mov
fcmovu
cmpsb
mov
jle
xor
arpl
iret
xor
popa
add
arpl
ja
fwait
xchg
shrl
mov
and
sbb
inc
cli
inc
out
mov
xchg
into
sti
jno
cmpb
in
jge
lea
lock
adc
or
aas
bnd
imul
xchg
jge
adc
dec
imul
sub
das
xchg
mov
pop
mov
andb
xor
inc
pop
sub
xlat
pop
add
hlt
cltd
pop
or
std
cmp
mov
jno
repnz
xchg
sub
xor
iret
dec
aam
mov
jmp
mov
mov
jne
test
popa
sti
popa
fistl
addr16
inc
fdivrs
jo
popa
pop
scas
cmpsb
mov
mov
pop
int
iret
mov
imul
pop
sahf
and
and
pop
call
lret
sub
and
jg
mov
mov
jae
jmp
mov
and
dec
aaa
jl
stos
cmc
in
insl
add
or
out
sub
dec
in
cmp
mov
and
scas
loopne
push
aaa
adc
or
jae
cli
push
or
and
out
cmpsb
or
mov
addl
push
inc
mov
xor
out
sub
adc
rcrl
dec
mov
rclb
push
fistps
rolb
fcomps
mov
mov
dec
in
enter
add
cmpsl
jle
mov
cmp
frstor
and
aad
mov
mov
sub
cli
stos
sub
mov
add
fcmove
in
xchg
out
xlat
push
mov
jge
cwtl
dec
jg
cltd
int3
fucomp
fnstenv
test
cli
and
xchg
pop
pushf
fistl
xor
mov
lcall
cmp
and
sti
cmp
movsl
je
push
cmpsb
jnp
lcall
imul
jae
rorl
loop
sbb
mov
mov
icebp
or
pop
push
pusha
cmp
das
cmp
add
cmp
imul
or
dec
fisubrs
sub
push
lret
int
jge
mov
push
cmp
add
lcall
lods
test
dec
fwait
add
shll
mov
xchg
les
in
dec
inc
sub
sbb
push
cmp
stc
add
sub
lret
xor
jmp
sub
out
push
pop
test
inc
adc
test
push
mov
xor
shl
and
lds
fwait
jl
movsl
pop
loopne
in
cld
lcall
jmp
sub
add
sahf
jl
or
cmpsb
hlt
jno
lret
in
push
inc
mov
inc
cwtl
dec
jno
mov
mov
jmp
xchg
mov
pop
pusha
mov
loop
jl
aam
jne
mov
int3
fdivs
ja
fldcw
pop
sub
adc
into
jmp
xor
loopne
dec
dec
test
lahf
lods
fnstenv
pop
mov
mov
shlb
mulb
pusha
popf
or
jmp
mov
loope
mov
outsb
mov
js
or
or
jae
add
pusha
js
adc
adc
xor
jmp
std
xchg
add
outsl
jg
mov
or
shll
jl
fwait
dec
sbb
stos
fnsave
or
mov
mov
cmp
movsl
sbb
ja
sub
js
test
jne
data16
add
lahf
cmp
shll
fimull
lret
cmp
push
sub
pop
push
push
lods
scas
push
mov
leave
mov
fwait
add
sub
push
jecxz
and
lods
shll
loope
lds
in
sarl
xchg
data16
mov
pop
or
hlt
jp
inc
movsb
popa
push
push
sbb
stc
mov
add
jge
in
fstps
dec
loope
ljmp
in
mov
aam
sub
sti
fwait
mov
pop
lods
nop
pushf
dec
subb
fwait
lock
add
jb
xor
insb
mov
fdivp
cli
loop,pn
push
subl
pop
mov
mov
sti
test
cmp
xor
jge
stc
mov
lcall
arpl
daa
mov
in
push
xchg
mov
jle
test
pop
jl
add
lret
sbb
mov
adc
fstl
lcall
or
test
inc
imul
pop
or
sub
dec
outsb
jns
test
xchg
add
pop
or
sbb
fdivr
subl
fidivs
sbb
jg
aad
jno
ljmp
jl
movsb
aas
adc
aas
mov
cli
rcr
jg
push
mov
mov
sbb
sub
in
int
jg
pop
addl
into
push
cmove
test
jne
and
lret
cs
pop
push
movsb
xor
mov
insl
cmpsb
cs
push
cmpsb
xlat
fcmovnu
shlb
ret
enter
into
xchg
sub
mov
scas
xchg
stc
imul
outsb
stc
movsb
lahf
xchg
into
pusha
xlat
fnstsw
pop
pop
std
mov
dec
lret
pop
fwait
jae
ficomps
push
jno
sub
cld
out
iret
call
iret
repz
pop
pop
lea
xchg
ret
ljmp
push
fmull
imul
shlb
jecxz
add
cmpl
inc
adc
dec
fs
push
stos
push
jne
lret
lds
cltd
inc
test
mov
ret
push
scas
sub
test
sub
jae
lret
sub
mov
pop
jne
shlb
aad
pop
in
sbb
ret
or
out
xor
ret
loope
sbb
xor
push
clc
mov
dec
iret
push
mov
in
pop
push
in
pop
and
xlat
icebp
pusha
sbb
adc
or
or
xchg
push
jne
pop
gs
mov
enter
push
decl
inc
sbb
jl
sbb
int3
dec
pop
insl
mov
push
addb
pop
mov
pushf
pop
test
in
add
sahf
shll
adc
push
and
push
out
pop
inc
push
cmpsl
add
rorl
sti
pop
sub
stc
add
in
dec
ja
scas
dec
popa
mov
pop
inc
and
cltd
mov
cmp
stc
icebp
subb
fldcw
push
jbe
pusha
das
jb
xor
in
xor
fsubrs
jne
repz
fcomip
mov
cli
dec
bound
decl
jmp
dec
scas
es
es
pop
lods
sarb
adc
test
aam
adcb
and
mov
in
test
xchg
mov
stos
aam
add
cmc
pushf
test
dec
lcall
mov
lcall
or
outsb
rclb
ds
sub
xchg
je
movsl
sbb
mov
gs
mov
fsubrs
fstpl
push
xor
fstl
xchg
cltd
xlat
int
mov
pop
xor
jl
pop
mov
mov
out
fsts
in
sti
cwtl
adc
and
scas
int3
movsb
data16
inc
push
lcall
xor
xor
sbb
dec
or
pop
mov
mull
dec
test
adc
inc
sub
sbb
push
mov
fcomps
rcll
push
cmpsl
jp
ficompl
mov
mov
loopne
mov
scas
ljmp
sarl
fisubrs
pop
sbb
out
mov
test
mov
pushf
outsl
adc
vpshld
and
sbb
jb
outsl
push
inc
arpl
dec
or
xor
mov
scas
in
lods
fiaddl
scas
stc
xorb
jmp
and
in
inc
mov
pop
or
inc
andb
cmp
jbe
das
lock
or
std
xchg
xor
outsl
hlt
and
xchg
into
mov
dec
stos
dec
or
mov
and
sti
push
mov
lods
pusha
sub
stc
mulb
imul
cltd
jle
aas
jae
sti
and
or
sbb
gs
adc
sbb
fdivr
call
in
xor
cmp
jle
std
mov
fwait
add
mov
inc
adc
mov
and
stos
aad
cmpsb
js
les
lret
pusha
popw
mulb
iret
leave
scas
push
notb
std
lea
fidivs
scas
popa
test
test
pop
jl
mov
test
jb
negl
scas
push
push
adc
in
call
ud0
adc
mov
pop
adcb
or
pop
cmp
fidivrs
and
icebp
mov
loope
mov
stc
pop
fwait
stos
inc
outsl
mov
jle
sbbl
dec
fadd
daa
addr16
xor
sub
push
rol
jbe
or
aad
dec
sahf
or
push
mov
pop
mov
xchg
mov
fmull
pop
sub
rcll
fildll
sti
popa
loop
popf
test
mov
addr16
pop
cmpsl
inc
scas
lret
cmp
xor
mov
fstl
dec
xor
test
ret
test
aad
pop
adc
inc
xlat
addb
iret
lcall
sbb
outsl
add
xor
jno
test
xchg
mov
cmp
cmc
push
cltd
jnp
test
mov
idivb
lret
mov
cmp
inc
adc
mov
cmp
test
xor
xor
xchg
arpl
mov
pop
xchg
xchg
fld
lock
inc
incl
jge
scas
xchg
lods
sub
sub
dec
push
ja
ds
test
jecxz
sub
mov
cmpl
lods
push
push
mov
fistl
aas
es
ds
popa
jb
and
lods
inc
leave
mov
outsb
mov
push
sbb
xor
imul
fsub
mov
shll
push
jecxz
mov
pop
inc
push
rolb
sub
mov
or
dec
push
sub
out
and
pop
jo
dec
aaa
lahf
sub
scas
adcb
mov
sahf
adc
cmp
mov
pushf
add
sub
ret
add
ljmp
andb
loopne
sub
sarl
cmp
pop
sub
dec
lea
mov
cmp
jmp
lcall
pop
fldenv
loopne
adc
in
jge
shl
push
inc
popf
fisttpl
push
add
cmp
in
jbe
push
mov
mov
std
inc
sbb
sbb
pop
cmp
outsl
pop
sahf
mov
push
fs
lods
popa
std
repnz
jmp
mov
mov
mov
mov
pop
cmpsb
aas
add
jae
sahf
hlt
jle
jb
xchg
push
repz
pop
push
and
pusha
dec
scas
fisubrs
mov
xor
push
cmp
rolb
cld
lcall
cmovae
mov
aaa
push
aas
cmp
dec
xor
out
pop
or
xchg
or
movsl
pushf
fwait
or
add
add
cmp
int
testb
addl
cmpsb
jecxz
out
fisubrl
popa
shl
out
mov
inc
mov
int3
jae,pn
adc
and
ds
pop
mov
cmovae
jne
or
cmp
and
iret
cld
fs
xor
aas
addl
pop
jnp
aam
sbb
leave
adc
jae
sub
dec
mov
mov
lods
push
lcall
repz
mov
mov
inc
fs
in
or
rorl
pop
into
mov
push
imul
pop
inc
daa
jp
add
xor
lret
adc
sub
shl
jno
cmp
ret
sub
ss
inc
jg
mov
xchg
cmp
negb
cmp
jmp
fisubs
stos
adc
adc
or
jecxz
daa
ret
jmp
sbb
add
loope
test
pop
out
pop
aas
pop
idivl
push
incb
repnz
popa
icebp
scas
sub
popf
xchg
gs
jle
push
dec
sub
ficoms
ret
xlat
jb
daa
das
cmp
jb
stc
sbb
xor
cmp
sub
mov
push
fisubrs
mov
popa
cmpsb
push
xchg
jp
lret
bound
fwait
scas
xor
xor
into
pushf
xchg
outsl
xlat
int3
pushf
dec
aaa
loop
enter
insb
outsl
inc
inc
dec
dec
orb
xchg
outsb
ret
pop
aad
icebp
outsb
mov
pusha
and
mov
int3
inc
xchg
jl
xor
add
ljmp
test
or
sbb
sub
jae
cmp
xor
sbb
push
xchg
and
ja
inc
out
jns
mov
or
pop
pushf
insb
jg
cmp
or
imul
dec
movsb
nop
repnz
inc
inc
jns
mov
js
or
sbb
fnstenv
sbb
xchg
or
push
jl
xor
mov
es
adc
dec
jb
lcall
mov
popf
lahf
xor
lods
push
and
out
jbe
sub
adc
stc
mov
push
sbb
push
jae
in
jbe
pop
and
aad
fdivrs
xor
sub
adc
jp
lods
enter
cmp
sbb
xlat
inc
les
fdivrl
sahf
loope
xchg
sahf
lods
dec
inc
add
dec
dec
addr16
mov
ss
and
scas
inc
test
pavgb
jl
out
in
sbb
xor
pshufw
mov
sub
por
xchg
adc
jb
push
or
js
bound
in
mov
das
sub
xor
cmp
cmp
push
popa
das
in
out
pop
mov
popa
pop
in
push
fwait
add
xchg
dec
mov
add
add
inc
lret
and
outsl
stc
adc
pop
sbb
jno
push
cmp
adc
cmp
xor
fsts
sub
adc
add
imul
ret
jmp
movsl
jnp
das
jbe
push
mov
pop
pop
addl
sub
xchg
lahf
push
std
mov
pop
repz
leave
sbb
push
lds
in
cmpsb
adc
and
mov
jmp
or
or
inc
rcll
clc
in
les
loop
loop
or
dec
add
gs
shl
push
and
pop
outsb
sahf
test
xor
mov
lcall
mov
imul
push
int
or
dec
addr16
or
jb
fwait
add
ret
or
push
pop
jnp
iret
repz
sub
add
fistpll
mov
jge
push
cmpsb
je
jnp
test
stos
shrb
push
outsl
out
fcompp
int3
out
imul
adc
cmp
pushf
xchg
popf
gs
inc
jmp
idivl
add
jbe
xchg
dec
adc
pop
xor
push
cmp
push
daa
loope
lcall
lret
jne
pop
rcrb
inc
inc
or
shll
pop
xchg
popa
loopne
test
push
inc
add
popf
push
inc
pop
dec
mov
out
and
out
arpl
jo
leave
int
xor
ds
jb
or
nop
inc
and
testl
add
pop
mov
sar
mov
adc
test
popf
aad
out
sub
xchg
cmpsl
adc
cld
bswap
loop
arpl
ret
jns
cmpsb
dec
je
imul
daa
addl
jle
dec
in
mov
loopne
mov
stc
mov
sub
mov
pusha
adc
shlb
lret
jge
nop
or
inc
mov
cmpsl
jl
inc
mov
mov
jb
stc
and
scas
dec
cmpl
shl
mov
adc
cwtl
leave
mov
jecxz
add
rcrb
xor
lret
adc
outsl
jo
incl
fcmove
push
ss
inc
sub
jb
fldenv
sarl
dec
mov
fisubs
ret
mov
mov
push
jle
cmpsl
subl
movsb
shl
dec
dec
mov
mov
xor
mov
leave
imulb
pop
push
std
lods
fldenv
arpl
cmp
add
jecxz
mov
xchg
jg
cwtl
dec
test
mov
dec
pop
test
push
mov
fidivl
xor
adc
sbb
andl
inc
pop
push
cli
pushf
decl
jne
xchg
fnsave
cmp
lea
xor
out
ja
ljmp
lea
in
cwtl
jnp
shlb
sbb
fnstcw
adc
addr16
xchg
sub
aad
cs
std
jg
aad
mov
jne
and
xchg
mov
mov
xor
icebp
out
add
mov
or
cltd
adc
jp
les
outsb
loope
mov
sub
add
in
and
sbb
xor
andb
push
cmp
mov
aam
sub
stos
pop
jge
stos
mov
push
insl
sbb
mov
outsl
inc
pop
and
dec
mov
mov
xor
scas
sub
leave
aad
call
scas
mov
sub
add
lcall
xor
cs
jge
insl
mov
pop
inc
jnp
dec
add
inc
mov
movsb
in
in
push
cmp
lret
mov
stos
dec
cmp
fcmovnb
mov
add
or
xchg
ss
cmpsl
fisubs
divb
and
repnz
jne
sbbl
add
mov
gs
xchg
inc
cs
and
mov
mov
xor
jo
mov
les
and
push
xlat
cwtl
es
jno
dec
icebp
notl
and
lea
cwtl
into
mov
cs
out
mov
dec
ja
push
lods
mov
jne
iret
cmp
jg
fcomi
mov
sti
inc
inc
dec
and
cld
test
icebp
xlat
popa
push
push
test
sbb
test
dec
or
sub
sub
mov
mov
gs
or
addr16
adc
mov
xchg
lret
adc
fwait
aam
xor
inc
mov
ljmp
mov
xchg
out
mov
ds
ss
lds
pop
mov
insb
dec
lea
jbe
mov
insb
iret
xchg
iret
xor
stos
pop
sbbb
int3
pop
push
add
in
mov
mov
nop
movsl
push
ljmp
jl
lds
cmc
shrb
repz
fists
scas
lds
mov
pop
lods
movsl
test
repz
mov
sahf
cmc
and
mov
mov
movsl
pop
and
mov
gs
sahf
cltd
sbb
sahf
gs
andl
insl
not
mov
int
sahf
test
loopne
nop
daa
jnp
sub
dec
fcompl
and
sub
loopne
adc
andl
cmc
cmpl
mov
or
in
iret
jge
add
dec
orb
xchg
cmpsb
and
call
adc
int3
int
pxor
and
data16
outsb
mov
inc
scas
mov
dec
cld
jne
jne
pop
adcl
add
add
ss
pushf
push
cmc
fmull
inc
sbb
insb
orb
loope
in
sub
adc
and
in
dec
push
std
mov
clc
xor
add
and
je
iret
lea
insb
movsb
inc
repnz
cmp
in
lods
movsl
pop
data16
shlb
in
inc
mov
into
pop
es
lret
pop
add
andl
das
jb
jo
mov
mov
mov
or
out
shrl
lret
aas
cmc
fidivrl
cld
jo
xchg
jns
mov
and
cmc
push
imul
movsb
xor
push
or
mov
imul
xor
aad
sbb
sbb
push
cmc
inc
mov
or
cmp
xchg
xor
sbb
sub
das
jg
mov
jnp
lcall
lods
outsw
add
ja
lea
in
mov
fs
icebp
mull
xor
es
shl
xchg
lahf
stos
dec
cmp
inc
pushf
push
adc
or
xchg
or
icebp
std
xlat
cs
fst
bswap
adc
aaa
sub
pop
jmp
das
gs
loope
aam
jecxz
pop
xchg
cmp
fcmovnbe
and
sbb
mov
clc
daa
dec
jp
xchg
xor
enter
dec
adc
xchg
adc
jbe
cmp
pop
cmp
mov
hlt
test
pushf
adc
jmp
xchg
xor
sti
js
and
mov
pop
cltd
shll
xchg
jbe
in
fstps
pop
mov
jns
icebp
rcrl
jne
dec
jno
rolb
dec
pop
imul
ficoms
leave
push
outsl
sbb
addl
shll
scas
sub
test
adc
aaa
fcomip
sahf
mov
push
add
into
adc
insl
sub
cmpsb
mov
mov
dec
rolb
scas
xor
test
int
dec
add
loope
call
data16
xor
out
andb
lcall
jae
stc
jl
cld
nop
ja
andl
adc
enter
cmpl
jb
xlat
ljmp
aam
insl
mov
pop
jl
insb
mov
adc
data16
fwait
mov
xchg
call
push
popa
or
inc
fcompl
dec
ljmp
mov
mov
inc
andb
xlat
test
fdivr
inc
lods
fwait
pop
sbb
imul
loopne
push
into
or
add
mov
jo
xor
or
dec
mov
sub
fistpll
aaa
mov
cli
dec
xchg
mov
pop
rcr
outsb
sub
jnp
imul
ds
lock
mov
push
dec
mov
pop
sti
mov
insb
mov
add
popf
or
ret
inc
test
jns
inc
dec
inc
lds
scas
cmp
and
les
std
cld
add
dec
adc
push
inc
sub
pop
lahf
jmp
jl,pt
add
dec
dec
shr
stc
jno
jecxz
lcall
jp
sub
pushf
imul
cmp
clc
push
push
cmc
adc
rolb
cmp
cltd
stc
jge
cwtl
lock
push
scas
mov
ljmp
aaa
faddp
stos
js
lea
idivb
cmp
adc
mov
sbb
and
xor
mov
jbe
sarb
pushl
and
ret
sub
clc
pop
mov
shr
sti
pop
mov
adc
inc
shld
fstpl
inc
adc
jecxz
in
xchg
mov
push
push
push
lock
cli
jo
sbb
or
dec
aas
jg
xchg
cmpsl
xchg
daa
nop
push
scas
or
repz
cmc
and
into
mov
mov
and
repnz
mov
ret
xchg
add
sub
xor
inc
inc
inc
lods
push
insb
cmpb
xor
cmp
arpl
pushf
out
dec
movsl
mov
push
push
dec
inc
jb
scas
lret
fdivp
add
daa
xor
and
mov
sbb
inc
pop
pop
fneni(8087
notb
dec
and
out
loop
outsb
fcom
xchg
sbb
mov
stos
int
mov
fisttpll
jl
sahf
fistl
fistps
inc
adc
or
test
in
xor
mov
dec
xor
repz
dec
test
lea
std
movsb
jne
inc
sarb
test
out
into
int3
notb
or
insl
rol
and
and
fadds
ja
mov
mov
push
ds
les
xchg
or
jo
jmp
cltd
loope
loopne
adc
jnp
pusha
jecxz
add
inc
push
stos
call
mov
cmp
pushf
sbb
mov
adcl
das
adc
mov
mov
dec
stc
jb
fistpll
insl
out
ds
add
sbb
jg
bound
xchg
mov
lret
outsb
sbb
dec
das
lods
inc
mov
ret
push
push
movl
inc
cmc
push
lods
sbb
cmp
mov
pop
ret
pop
xchg
push
mov
xchg
pop
icebp
mov
out
lds
imulb
mov
fadd
test
pop
sbb
into
outsb
xchg
xor
inc
sbb
and
hlt
shrb
mov
push
mov
mov
or
jmp
ret
shl
pop
add
xlat
addr16
jecxz
fs
es
pop
out
jae
repnz
popf
xchg
test
dec
push
sub
ficomps
xchg
push
dec
cmp
sarl
jo
ss
pusha
xor
sbb
mov
movsl
pop
sti
popl
into
imul
xchg
jno
xchg
iret
imul
mov
loop
shrl
adc
sbb
int3
pushf
and
dec
gs
lahf
mov
fwait
cmpsb
repnz
ds
and
iret
iret
loope
cmp
rclb
push
and
sahf
inc
mov
lret
rcr
ss
mov
fidivs
subb
mov
test
mov
sub
xlat
and
push
or
sub
jbe
es
das
mov
ret
test
push
mov
stc
popa
dec
ss
push
in
lock
dec
dec
cmp
mov
xchg
in
je
sub
gs
mov
jno
arpl
insb
int3
mov
cmpb
in
in
xchg
xor
in
add
jb
loopne
pop
mov
lds
jns
popf
push
sub
icebp
lret
or
sub
repnz
nop
repnz
iret
cmp
insb
test
jo
mov
xor
push
mov
rclb
xchg
outsl
add
loope
pop
enter
stos
add
lcall
out
sbb
lcall
xor
scas
mov
and
or
pop
dec
add
test
jecxz
hlt
fisubrs
mov
repz
icebp
mov
pop
jmp
fbstp
add
and
xchg
mov
push
dec
inc
daa
pcmpgtd
movsl
cmp
xchg
mov
jns
mov
jg
cs
or
in
and
pop
xchg
inc
fcomip
enter
dec
or
das
jmp
jns
aaa
push
scas
mov
and
in
adc
pop
test
fwait
mov
sbb
mov
or
ss
push
arpl
mov
int3
popf
add
cmp
ds
stc
repnz
aad
iret
xchg
pusha
add
or
mov
cmc
inc
hlt
ljmp
adc
jb
push
inc
clc
iret
cmc
dec
fisttpl
addr16
repz
cltd
fisubl
add
push
nop
aas
fistl
movsb
stos
test
out
in
cmp
mov
mov
xor
loopne
inc
movsb
push
shll
mov
or
leave
loopne
jae
and
hlt
push
test
rcll
loop
je
ds
sub
enter
xchg
lea
mov
aam
pop
push
popa
andb
pop
sbb
inc
sahf
out
xchg
scas
scas
mov
lahf
dec
push
dec
inc
dec
out
ss
mov
add
fcmovnu
les
inc
je
adcl
int3
popf
loopne
fstpl
add
sbb
fldenv
inc
fimull
mov
mov
fldcw
mov
imul
js
out
movsl
dec
pop
out
enter
sub
lahf
insb
outsb
push
and
fsubrs
xchg
inc
xor
fwait
in
xchg
pop
aam
out
xor
xor
xchg
mov
mov
and
repz
cmp
movsb
mov
sbb
pop
test
mov
rol
dec
sub
and
adc
clc
pop
push
mov
sbb
js
add
pop
std
cmc
sub
sbb
sub
out
ret
or
cmp
lock
in
sbb
mov
or
push
lods
in
test
xlat
ror
cmp
outsb
leave
sbb
test
sbb
xchg
hlt
cmpsb
jae
and
push
fistl
mov
and
push
mov
add
inc
push
xchg
lret
fs
mov
or
push
insb
jl
sahf
ljmp
test
pop
in
add
sub
test
lods
shrl
fcmovne
mov
pop
pushl
in
fcmovb
jecxz
sub
jp
aad
cmpsb
xchg
test
xchg
and
data16
pop
lahf
adc
ret
add
lret
lret
fidivl
in
jecxz
dec
dec
xor
or
add
cmpsb
dec
je
clc
test
pop
iret
ss
pop
push
repnz
push
push
mov
in
test
add
test
or
outsl
lods
and
daa
pop
jl
mov
jl
in
add
sub
cltd
mov
mov
arpl
call
pcmpeqb
pop
mov
jmp
lods
loope
aas
pop
mov
or
inc
scas
aaa
mov
xor
push
sbb
test
mov
nop
les
push
addb
cltd
push
cmp
mov
mov
fiaddl
inc
adc
mov
lea
pop
cmpsb
dec
imul
subl
add
sub
data16
or
nop
jmp
sti
les
mov
int
fwait
push
filds
pushf
jmp
rolb
lock
int3
mov
inc
xor
mov
mov
mov
insb
mov
adc
into
push
nop
cld
add
loop
popa
aas
ja
cld
and
mov
fstpt
mov
popa
or
jmp
in
cmpsb
orl
lds
xor
mov
jecxz
xlat
fidivrl
push
inc
jl
mov
push
mov
jbe
and
addr16
popa
inc
popa
call
cmc
sbb
jecxz
inc
addr16
mov
jno
inc
pusha
imull
nop
mov
jge
jle
jecxz
jp
dec
arpl
pushf
push
negl
subb
sahf
jbe
jns
adc
ljmp
dec
add
dec
arpl
xchg
sbb
out
shlb
pop
int
push
pusha
jo
data16
mov
jno
cmpsb
push
xchg
push
push
cmpsl
rclb
bnd
dec
into
inc
inc
xor
mov
insl
sbb
ficoms
dec
add
sbb
dec
mov
out
push
lods
dec
cmpsl
pop
out
push
xor
addr16
lods
std
ljmp
lret
nop
mov
or
xor
mov
xor
addr16
jmp
hlt
leave
mov
int
cs
scas
cwtl
mov
xchg
inc
pop
pop
push
arpl
pop
xchg
pop
xor
pop
sub
push
je
prefetch
aad
mov
jbe
push
adcl
cmovge
shrb
xchg
xor
ficomps
and
dec
popa
ja
fldcw
dec
add
bts
lret
pop
ret
aad
dec
cmp
dec
adc
push
loope
adc
jmp
imul
repnz
and
fimull
in
or
jo
inc
fidivs
lea
cmp
xchg
xchg
jb
add
movsl
xor
inc
xlat
cmp
mov
adc
push
cltd
mov
mov
xorl
call
int
adc
jmp
pop
jmp
mov
and
neg
ja
add
jge
jb
mov
cltd
lcall
lret
mov
or
and
lahf
add
ss
mov
push
xor
fsub
and
xor
pop
dec
aam
in
mov
cmp
mulb
mov
inc
jns
test
into
in
jns
inc
icebp
mov
cmp
shrl
xchg
int
clc
xchg
sbb
stos
cmp
les
lods
mov
xlat
xor
pushf
pop
mov
mov
fistpll
scas
mov
sub
mov
adc
mov
bound
xor
and
or
push
insl
add
xchg
push
rcr
cmp
ret
rcrb
fcmovbe
jecxz
inc
mov
test
push
cmc
rorl
mov
and
cmp
lcall
lods
push
dec
cmp
xchg
arpl
sbb
cmpl
jmp
jnp
call
test
std
jne
out
mov
pop
mov
loop
pop
lret
push
and
push
fnstsw
lahf
push
rcl
rcrb
aaa
add
push
imul
mov
cmp
inc
sbbb
adc
insb
cld
loop
xor
inc
or
dec
out
mov
dec
mov
ficomps
fdivl
lcall
ret
jp
mov
scas
inc
mov
adc
dec
sub
mov
jge
bound
sbb
add
pop
xchg
push
js
insb
rorl
mov
inc
pop
lds
inc
ds
shll
fs
fcomi
pop
data16
scas
xchg
mov
rep
cmp
mov
lock
out
in
cmpsb
arpl
orb
dec
nop
repz
movsb
scas
icebp
test
lret
jl
loop
test
push
push
rclb
lock
xor
mov
sub
lahf
mov
fmuls
mov
inc
ljmp
mov
movsb
add
popf
mov
pop
xchg
mov
mov
push
xchg
jle
sbb
out
xchg
jnp
iret
mov
loopne
aas
ljmp
or
scas
cs
lcall
rcll
and
dec
sub
lcall
inc
push
int3
aaa
orl
jmp
push
je
mov
call
xor
ret
pop
lds
call
and
add
pop
jmp
and
test
add
imul
xchg
leave
jns
icebp
mov
data16
push
xchg
icebp
jnp
lods
add
pop
bound
daa
lahf
cmp
sub
adc
jge
inc
daa
cmp
mov
stos
arpl
icebp
adc
mov
scas
ljmp
sbb
mov
rorb
xlat
adc
cltd
mov
mov
es
insb
cmc
pop
push
jo
and
fidivrl
xchg
push
push
ja
mov
inc
lock
in
loop
add
fnstsw
aad
out
popa
mov
inc
and
inc
mov
jae
mov
pop
lods
push
mov
dec
mov
xchg
or
ds
sub
cmpsl
sub
inc
pop
xor
mov
xchg
cmp
xchg
call
loop
mov
insl
fildl
add
jbe
push
out
xor
xchg
add
sub
pop
lcall
push
dec
pusha
push
call
and
pop
dec
xchg
add
sub
aad
pop
fucomp
sub
jle
stc
dec
popa
in
popf
pop
push
inc
shll
ljmp
popa
loope
cwtl
js
jo
cmp
cmp
mov
pop
mov
mov
dec
and
lods
xchg
xor
mov
add
pop
pop
dec
lock
ljmp
xor
rorl
push
push
fstps
sbb
imul
xchg
in
shrb
mov
adc
pop
es
sti
inc
pop
lds
int3
mov
data16
xchg
cld
or
pop
test
add
imul
in
jmp
test
fdivrl
std
xor
xchg
sbb
jbe
cs
mov
dec
push
mov
xlat
mov
faddl
sbb
js
movsb
movsb
mov
outsb
lret
dec
icebp
outsb
gs
aad
pusha
icebp
inc
cli
pop
adcb
fdivp
shll
fcoml
sub
mov
cs
jg
push
jg
xchg
cmp
or
sbb
dec
add
jp
pop
sub
call
add
xor
popf
loope
popa
int
aam
push
mov
cmp
xchg
mov
fisttpl
enter
xchg
mov
push
mov
and
adc
je
jg
data16
test
std
fimuls
mov
inc
into
push
sbb
jb
jp
aas
mov
in
fnstcw
inc
mov
push
insb
jmp
push
dec
and
repnz
mov
repnz
push
std
dec
add
jl
jno
dec
cmc
pusha
repnz
enter
lds
jge
and
or
pop
mov
cmpsl
xchg
mov
daa
and
mov
xchg
jl
adc
xor
mov
xchg
es
insl
cmpl
call
sahf
imul
addr16
add
pop
xchg
test
mov
aad
mov
add
subl
loopne
fsub
cs
lcall
mov
xchg
push
popa
push
jnp
fs
or
jge
cmp
inc
mov
inc
iret
cmp
jb
out
test
dec
out
inc
rcrb
stos
outsb
js
into
je
lock
mov
fnsave
data16
mov
das
data16
pop
stc
jno
sahf
cmp
jnp
push
or
lahf
addr16
repnz
mov
stc
mov
loop
dec
sbb
push
aad
sbb
aad
xchg
leave
nop
dec
lods
and
in
mov
jecxz
les
jbe
pop
push
lcall
call
cmc
push
dec
dec
in
jnp
int3
adcb
lods
sbb
or
pop
mov
inc
sub
mov
int3
add
lret
daa
jbe
mov
mov
inc
lea
in
loope
sahf
jbe
std
loopne
stos
das
out
in
xchg
jno
xor
xchg
inc
sub
test
xor
mov
jb
jl
mov
cmc
into
fcomps
mov
sub
mov
push
sti
mov
jno
je
sub
in
insl
pushf
or
cmpsb
lds
add
lahf
sahf
cmp
mov
pushf
push
cld
cwtl
jno
add
test
push
cld
inc
lret
jecxz
cli
out
mov
pop
jmp
mov
xor
mov
subl
sahf
cmp
lea
mov
cmp
icebp
xor
pop
pop
enter
repz
push
xor
aas
andl
test
test
pop
fcomps
and
outsb
call
scas
jp
add
pop
in
or
pop
jecxz
cld
data16
out
cmp
xchg
cmp
insl
push
sub
inc
ficoms
mov
pop
add
xlat
adc
adc
sbb
dec
xchg
and
mov
inc
loopne
pop
mov
add
test
pop
insb
pusha
adc
cmp
sbb
mov
and
popf
movsl
scas
jbe
fs
mov
lahf
push
mov
lret
pop
nop
xchg
lds
outsl
adc
and
bound
out
int
mov
loop
scas
add
fdiv
popa
dec
jb
hlt
cmpsb
cmp
adc
stc
data16
xor
aam
ds
jmp
scas
mov
lods
lods
jle
mov
test
xchg
ret
or
pop
pop
cmp
mov
andl
push
pop
sti
adc
lret
xchg
push
roll
push
push
mov
sub
sbb
repz
add
pop
out
je
and
cmpsl
fwait
test
pop
add
clc
mov
testb
das
dec
pop
ljmp
pop
and
call
dec
movsl
mov
pop
pop
dec
orb
das
push
fsubl
movsl
cmp
xchg
push
jb
rorl
enter
dec
xchg
sbb
imul
xchg
fcmovu
insb
scas
jbe
or
aam
rorb
insb
jecxz
test
cli
pop
clc
imul
add
rcrl
pop
out
lock
test
hlt
lret
pop
cmp
push
mov
mov
mov
ret
clc
cli
insl
iret
xor
pop
nop
sti
shll
cltd
xchg
push
ss
test
push
cli
loope
push
mov
mov
pop
scas
cmp
and
pushf
mov
lods
aam
lret
mov
icebp
add
xchg
pop
enter
scas
push
sti
dec
repz
mov
movsl
xchg
adc
subb
xchg
xchg
aam
fstpt
or
lcall
std
aam
or
out
push
xchg
jp
das
out
in
scas
dec
jecxz
movups
cmp
int3
or
repz
and
cmp
lret
jo
testb
pop
cmp
pop
stos
fisubl
rcrl
rcr
std
test
daa
push
arpl
mov
or
fstps
xor
in
xchg
dec
scas
loope
je
testb
xchg
repnz
mov
jbe
in
repnz
out
cmpsb
jne
cld
xchg
scas
fisubrs
mov
imul
fbld
cwtl
ret
cmpsb
xchg
mov
clc
inc
push
lcall
push
jl
pop
in
in
in
cs
dec
mov
lea
xchg
cmp
cmpsb
pop
popa
lods
or
xchg
leave
mov
gs
inc
mov
scas
fstp
xorl
f2xm1
and
daa
pop
test
xor
rorl
xchg
lds
mov
in
or
into
sbb
dec
mov
fcmovbe
jbe
inc
pop
pop
sarl
stos
das
add
pop
iret
in
ja
pop
inc
inc
push
jg
mov
lret
dec
std
rorl
iret
rcl
out
ljmp
ja
ret
and
mov
xchg
leave
jmp
test
pop
and
mov
decl
les
addl
dec
data16
fimull
call
cld
fdivs
lcall
lret
cmp
add
pop
xor
and
add
mov
xchg
dec
gs
nop
jle
movsb
daa
and
ss
leave
cs
ret
and
pop
into
jg
mov
pop
xchg
or
dec
jl
and
mov
out
les
popf
pop
lock
cmpl
and
adc
mov
nop
or
icebp
dec
xor
sub
cltd
or
xor
popa
mov
jl
loop
sahf
scas
shrb
mov
sub
xchg
sbb
push
nop
xor
inc
out
and
xor
inc
cmp
sbb
mov
daa
insl
inc
mov
pusha
jge
pop
dec
or
nop
fildll
xchg
push
sub
rcrb
test
inc
jl
dec
nop
in
xor
push
aaa
push
test
add
inc
cmpsb
push
call
mov
xchg
mov
or
or
rcrb
fwait
aad
insb
pop
jbe
movsl
insb
pusha
in
pop
pop
inc
jle
jl
cmp
xor
and
mul
repz
pop
jp
sub
in
insl
or
sahf
and
xchg
pop
in
cltd
jns
mov
push
aad
jmp
mov
and
mov
pusha
add
stc
dec
or
aaa
stc
in
xchg
dec
in
aad
add
pmaxsw
je
out
and
scas
das
bound
out
sub
fildll
jl
push
aaa
fwait
sub
pop
dec
pop
movsb
cltd
call
sbbb
pop
pop
cmp
push
push
and
add
data16
dec
and
mov
movsb
imul
jmp
lcall
test
in
data16
or
jb
sti
cmpsl
sub
jo
dec
std
mov
outsb
enter
lods
and
sub
sbb
push
lds
cmp
mov
push
icebp
iret
into
je
push
in
mov
fadd
pop
fbld
lret
cmp
cltd
imul
jg
addl
mov
mov
clc
push
mov
add
addr16
add
repz
sbb
nop
test
jecxz
push
adc
loop
in
add
sbb
pop
push
cmp
dec
lods
jle
test
lods
mov
sbbb
push
dec
repz
daa
sub
mov
add
add
sub
insb
sub
pop
fbld
or
cmp
stos
inc
js
into
daa
sbb
jnp
mov
xchg
orb
daa
jnp
int3
int
jl
das
inc
fucom
sub
mov
shl
mov
mov
pop
fidivrs
std
cs
jg
aam
ja
fsubrs
push
js
xchg
popl
addr16
out
test
inc
repnz
scas
pushf
jns
mov
pushl
scas
sub
negb
xchg
xchg
popa
jle
out
jmp
mov
sbb
mov
dec
xchg
xchg
push
cmpsl
test
pop
addl
sahf
sub
mov
gs
mov
push
and
hlt
push
inc
scas
mov
loope
test
stc
sub
outsl
adc
mov
sbb
mov
lods
das
dec
push
add
cwtl
int
inc
jns
divb
dec
ret
out
push
pop
sub
mov
inc
movsb
and
jecxz
push
push
or
push
cmovo
mov
repnz
pushf
jge
cmp
cmp
jg
fsubs
in
and
pop
inc
movsl
cltd
dec
movsl
dec
push
aam
pop
push
sbb
out
popf
xor
cltd
sub
mov
je
stos
cmp
arpl
pop
outsl
ret
and
push
add
pop
sbb
adc
push
xor
lock
mov
clc
mov
sbb
out
add
nop
mov
xlat
adc
mov
inc
mov
les
xchg
xchg
and
negl
inc
cmp
fcompl
cmp
push
mov
push
inc
mov
iret
seto
xor
sbb
icebp
cmpsl
add
xchg
lock
cs
xor
dec
fcomp
push
adc
in
scas
pop
sub
rclb
ret
cmpsl
outsb
jo
stc
int3
dec
fisubs
sub
push
mov
pop
test
fnsave
bound
dec
scas
mov
pusha
inc
in
icebp
testl
fdiv
outsl
mov
mov
ds
pop
int
push
outsb
and
cli
loopne
inc
addr16
stc
mov
mov
cltd
das
lea
fnstcw
dec
mov
arpl
leave
sbb
loopne
addr16
and
pop
out
xchg
insb
movsl
je
push
pop
je
fdivs
sbb
pop
add
nop
mov
sbb
scas
dec
cmc
sahf
cmp
add
xlat
ds
mov
mov
ljmp
test
xor
shl
setno
mov
mov
add
out
push
das
xchg
je
das
mov
dec
dec
into
or
sub
sbb
add
inc
sbb
inc
in
jp
sbb
lcall
lock
sub
inc
or
insl
pop
pop
jle
sub
outsl
loopne
icebp
ret
and
lea
sbb
mov
test
pop
pop
push
inc
mov
rorl
dec
xor
ds
lcall
pushf
xor
dec
add
adc
and
fcomip
sub
cmp
xor
sbb
lock
lea
ljmp
xchg
inc
jmp
mov
mov
inc
dec
lret
push
and
repz
lods
out
leave
inc
es
out
je
lret
in
and
popa
push
pop
popa
inc
sti
cmpl
pop
xchg
push
leave
divl
dec
sbb
jae
repnz
or
cld
dec
adc
int
xor
pushf
insb
push
ljmp
lock
jge
push
js
mov
push
cmp
xor
inc
push
mov
addr16
in
mov
imul
inc
int3
test
out
sub
inc
sbb
mov
mov
ljmp
mov
cmp
nop
dec
loope
cmpsl
pop
add
rolb
mov
stc
dec
sbb
sub
adc
sahf
mov
inc
and
mov
ror
mov
dec
lds
inc
sbb
jne
popl
cltd
ret
pop
sub
out
or
add
xorb
insb
push
lds
iret
in
das
jg
push
jmp
inc
jl
adc
xor
hlt
push
movsb
mov
call
dec
lcall
stos
mov
xchg
ficoml
hlt
inc
lret
mov
insl
sbbb
jnp
lods
pushf
xchg
jbe
les
mov
add
push
sbb
pop
xchg
and
mov
pop
insb
mov
and
mov
ret
ss
mov
add
jo
mov
xchg
lret
cmp
or
popa
push
dec
cmp
xchg
stos
cmp
xchg
jg
loope
dec
ss
cmp
add
scas
insb
push
in
aas
cmc
add
xchg
int
dec
mov
arpl
dec
imul
mov
mov
in
call
movsl
aad
sub
sub
lds
jns
mov
lea
stc
sub
icebp
sti
adc
les
fsts
jecxz
xchg
inc
pop
aam
inc
les
xor
xchg
cmp
out
dec
adc
lock
pop
test
cmpl
cmp
cltd
int
xchg
popa
sub
mov
add
lock
aaa
shlb
xor
fstpl
xchg
hlt
xlat
in
cmp
mov
in
repnz
addl
cmp
or
int
mov
dec
iret
clc
xchg
pop
jl
xchg
jmp
xchg
out
jecxz
cltd
gs
mov
in
xor
sarb
dec
dec
lea
cwtl
dec
jnp
lods
mov
dec
lea
enter
sub
decl
insl
pop
pushf
pop
jne
sub
addr16
sahf
mov
mov
repz
inc
sub
fbstp
adc
fcomps
push
mov
ret
sub
out
and
stos
xchg
pop
clc
jne
rcrl
push
xor
or
fimull
cmpsb
add
cwtl
mov
data16
test
and
pop
mov
repz
jnp
mov
mov
mov
push
ds
fcomip
inc
jo
rep
pop
outsb
out
les
in
addr16
lmsw
mov
cs
xlat
xchg
push
ja
adc
aas
push
add
push
int3
sbb
daa
mov
jae
popl
cmc
scas
ror
adcl
imul
stos
mov
adc
xchg
cmp
cmp
loop
je
inc
sbb
ss
add
xchg
ss
mov
daa
popf
pop
scas
jbe
or
ss
mov
dec
pop
je
xchg
cld
ret
in
jne
stos
aas
lret
sbb
jmp
lods
mov
sub
sahf
push
loopne
lods
lahf
add
mov
daa
push
idivl
mov
pop
aam
adc
mov
push
jp
clc
add
adcb
negl
mov
sbb
adc
lahf
adc
cs
jne
aas
push
sub
sub
ss
repnz
jne
fstps
xor
stc
push
into
mov
cwtl
mov
mov
mov
lods
push
mov
pop
loope
xlat
or
test
pushw
cmp
push
fwait
cmp
push
dec
in
ds
cmc
cmpl
xchg
xchg
push
clc
or
fstl
inc
inc
pop
ja
pop
add
or
mov
lret
stc
js
jp
fildll
pop
bound
or
nop
push
pop
adc
sbb
mov
lods
mov
flds
xchg
jge
jbe
add
enter
sub
mov
scas
sub
mov
sub
add
lock
adc
adc
push
fnstcw
push
jle
xchg
mov
sti
jmp
mov
xlat
pop
out
adc
test
xor
sbb
push
into
test
lret
and
pop
and
mov
cmp
arpl
add
out
mov
out
shlb
mov
imul
enter
ja
or
add
repnz
callw
mov
or
dec
loope
mov
cmpl
loope
xlat
nop
dec
mov
xorl
lods
adc
mov
test
jne
addr16
mov
roll
aam
dec
fcmovb
daa
cmp
repnz
pop
addr16
pop
fimull
jnp
push
mov
mov
inc
neg
sub
stos
jno
lds
push
sbb
fsubrl
or
or
sub
add
pusha
scas
mov
adc
outsl
mov
test
mulb
fstpl
ja
lahf
or
dec
mov
call
pop
lods
and
mov
shrl
fwait
sbb
jb
mov
cmpsb
rcrl
je
icebp
cmp
cmp
adc
or
xor
xchg
dec
jnp
mov
daa
sti
adc
dec
pop
test
dec
in
aaa
out
pop
add
pop
xchg
inc
lcall
push
mov
jmp
lcall
decb
dec
pop
js
sub
mov
xchg
push
mov
insb
out
stos
xchg
mov
inc
dec
inc
lock
in
push
inc
pop
push
lret
in
fsubrs
je
mov
stos
mov
jnp
stos
fistpl
es
or
stc
sub
xor
rorl
ja
lret
ror
inc
sbb
mov
xchg
testb
loopne
mov
mov
sub
sbb
cmp
sbb
mov
adc
fwait
sub
lods
sub
lods
mov
mov
es
icebp
arpl
or
mov
cwtl
push
jb
cmc
sbb
fdivr
call
xor
jge
ret
and
into
or
frstor
jae
movsl
sahf
xchg
jnp
cs
dec
rcr
pop
xor
icebp
movsb
cmpsl
adc
mov
add
rclb
dec
dec
jo
out
push
loop
jnp
mov
push
in
jne
sub
out
scas
and
cmp
adc
in
or
scas
call
add
mov
jl
sbb
inc
mov
mov
dec
arpl
jp
fdivs
pop
adc
xlat
repz
fisttps
test
out
ljmp
pop
mov
loop
pop
scas
mov
aad
cmp
test
in
imul
mov
inc
sub
notb
pop
test
xor
and
pop
cmp
jp
js
ja
add
cs
push
in
pop
scas
cmp
gs
insl
mov
repz
cmpsb
in
jl
push
enter
shll
pop
inc
mov
sbb
std
add
or
dec
xchg
xchg
movsb
sbb
mov
sub
mov
add
aas
fistpl
ret
mov
sbb
cmp
sbb
dec
in
inc
mov
and
stc
out
inc
jae
mov
jp
sub
sbb
outsb
je
rcll
sti
imul
mov
inc
cmp
icebp
int3
dec
test
enter
xchg
mov
push
push
fucomp
int
pop
bound
std
lock
or
in
outsb
add
push
xor
sub
sti
pop
ljmp
dec
js
dec
cmp
pop
add
xchg
imul
inc
or
cmc
leave
fdivrl
mov
stc
inc
aad
rol
subb
mov
or
outsl
shl
dec
mul
xor
ret
bswap
push
dec
mov
jns,pn
add
jbe
into
sbb
cmp
movsl
jg
sbb
loop
cltd
rorl
sbb
outsb
imul
jno
lds
call
cmp
dec
outsl
inc
ja,pt
pushl
jno
jbe
jno
iret
adc
adc
icebp
mov
jns
in
push
testl
mov
mov
lcall
mov
push
push
mov
push
jecxz
imul
mov
orb
push
sbb
inc
push
xorl
mov
lea
inc
jb
icebp
and
adc
pop
mov
xchg
adc
cwtl
add
shlb
lea
repz
mov
fwait
lahf
cmp
push
lea
dec
mov
std
dec
idivl
mov
ret
mov
mov
nop
mov
mov
loope
adc
fistpll
lret
push
fcomps
mov
rol
out
xchg
push
cltd
pop
std
or
dec
and
vmwrite
add
stos
or
pop
add
fcmovnb
fs
testb
xor
insl
cmp
adc
enter
aad
add
sbb
sbb
rcrb
std
es
mov
std
iret
inc
adc
mov
inc
call
std
mov
sbb
cmp
cmc
sbb
mov
mov
inc
sti
js
sub
stc
popa
or
sbb
sbb
pop
jbe
movsb
inc
xor
mov
inc
fldt
mov
lret
inc
sub
decb
call
fldcw
mov
sbb
xchg
cmpsl
cmp
xor
push
movsl
mov
xor
cmp
stc
inc
mov
push
push
stos
jge
adc
and
dec
daa
in
ficomps
sbb
sbb
add
mov
xor
sbb
scas
jnp
loop
xor
ja
pop
sub
in
dec
lds
mov
jns
pop
imul
mov
xchg
gs
xor
aas
add
inc
scas
sub
cmp
hlt
repnz
dec
je
add
pop
or
sub
sbb
aad
xor
jge
sbb
jge
jnp
rcr
test
lods
cmp
ljmp
enter
or
pusha
fmul
ja
xor
test
dec
loop
es
ret
fadds
jge
into
inc
icebp
push
fbstp
test
adc
mov
fs
lret
push
add
scas
xchg
cli
pop
and
mov
push
jo
mov
idiv
mov
lds
sub
shlb
or
inc
and
lret
sbb
pop
faddl
push
and
lahf
or
xor
cmc
mov
xchg
in
xchg
mov
cmpb
jnp
ds
and
jle
lcall
in
mov
and
inc
pop
rolb
dec
xchg
aas
jne
jnp
adc
cmc
bound
aad
sbb
call
dec
ss
add
imul
xchg
leave
mov
stos
lcall
xchg
dec
jmp
and
mov
pusha
sub
jb
jp
out
std
sub
addr16
ffreep
cwtl
cmp
pop
lock
or
mov
adc
and
gs
mov
cmpsb
inc
leave
ret
adc
test
push
mov
div
imul
pop
dec
movsl
sub
jge
mov
add
imul
cmp
lret
dec
lds
sub
in
das
jmp
push
add
mov
mov
mov
mov
cli
jmp
gs
lret
jns
popf
xchg
xor
les
loopne
dec
mov
sbb
pop
dec
mov
or
stc
add
lret
sarl
ret
cmc
retw
cmc
and
iret
mov
sbb
mov
lcall
inc
mov
sahf
push
xor
mov
jl
push
pop
cli
push
dec
mov
ret
push
repz
and
icebp
cmp
paddq
cld
mov
les
sbb
ja
add
sbb
dec
or
dec
and
xchg
hlt
adc
jmp
add
jge
std
mov
dec
scas
mov
mov
add
lods
or
hlt
and
sbbb
jp
jnp
repz
sub
rcll
stos
test
popa
adc
sbb
out
fs
pushf
push
mov
push
scas
pop
mov
insl
push
cmpsl
jmp
scas
call
mov
dec
mov
and
test
int
sub
fs
adc
cli
pop
jno
inc
enter
scas
mov
out
push
pop
cmpsb
rcll
inc
and
sub
xchg
dec
mov
and
sbbl
add
aad
scas
and
cmpsb
loop
stos
jo
outsb
fimull
movsl
jl
pop
inc
xchg
cmpsb
mov
sub
lods
je
push
pop
or
int3
push
test
cmp
daa
mov
pop
loop
bnd
or
pop
enter
mov
adc
lret
loope
addl
pop
mov
dec
repnz
in
xchg
add
sbb
or
mov
clc
xchg
push
sbb
sub
sub
jmp
pop
or
inc
push
sub
sbb
das
mov
test
aam
push
std
mov
xor
movsb
jle
rcll
in
imul
add
pop
jns
mov
std
test
dec
mov
jg
sbb
xchg
addl
inc
adc
jmp
fwait
mov
xor
sbbb
mov
bound
pop
divl
pop
inc
and
in
jae
out
test
nop
inc
dec
fisttps
iret
jp
push
push
lret
pusha
push
or
popa
mov
dec
test
ss
test
jnp
int
not
mov
lea
xor
push
ret
dec
xor
xchg
dec
jl
pop
iret
mov
inc
shl
das
xchg
stc
inc
dec
xchg
add
or
jae
dec
pop
imul
mov
sbb
movsb
xchg
cmp
push
loope
mov
sarb
sahf
or
pop
nop
sbb
and
inc
jmp
loope
or
mov
and
or
adc
sbb
xor
push
cmpl
adc
shr
je
dec
outsb
cli
dec
das
subb
pop
sbb
test
xchg
mov
xor
inc
push
das
mov
les
sbb
inc
cltd
and
rep
ret
push
mov
test
ret
jle
insb
push
cmp
sub
jmp
mov
divl
jbe
sub
cwtl
jle
insl
push
imul
xor
ja
mov
mov
cmp
sub
stos
addr16
into
push
or
mov
push
jo,pt
pop
inc
out
add
imul
or
and
clc
inc
mov
test
xchg
scas
xchg
inc
scas
adc
lods
mov
shll
into
mov
mov
stos
jo
stos
outsb
in
jo
stc
push
or
mov
pop
pop
adc
pop
xor
roll
pushf
sbb
lods
sbbb
andb
mov
fcom
pop
enter
test
enter
mov
std
loop
push
int
adc
jp
shlb
pushf
xor
inc
aaa
xchg
sbb
data16
inc
mov
out
inc
inc
rcrl
cwtl
pop
stos
cmp
mov
test
ret
inc
mov
insb
jae
push
xchg
and
dec
adc
jns
lea
dec
cmp
in
xchg
movsb
or
sub
in
pop
imul
xor
in
push
jecxz
jmp
mov
lret
data16
gs
jecxz
sbb
xorl
inc
outsl
pop
pop
mov
xchg
repz
pop
fcomps
mov
rorl
or
in
fs
pop
addr16
test
mov
nop
adc
test
clc
imul
out
push
jbe
jb
jmp
jb
int
sub
stc
int
xchg
je
adc
daa
jbe
adc
sbb
mov
jle
inc
sub
adc
xor
fxch
xchg
aad
xlat
and
shrl
and
sbb
pop
inc
or
hlt
loop
cli
test
pop
loopne
jg
sbb
mov
sbbb
and
xchg
loope
shll
mov
ret
cld
and
push
mov
stos
jg
mov
mov
lcall
mov
add
dec
mov
push
clc
jmp
out
mov
mov
enter
sub
pushl
sbb
fs
rcr
xchg
das
sbb
cmpsb
push
and
sbb
xchg
sbb
lock
bound
mov
cltd
loop
ret
scas
pop
into
sbb
nop
test
cmp
adc
mov
loope
cli
xchg
xor
push
jge
adc
and
fnsave
outsl
jae
aaa
mov
add
movsl
adc
dec
mov
in
mov
stos
or
hlt
jge
nop
mov
xchg
cmp
sub
or
or
sbb
pop
pop
push
or
mov
pop
adc
ljmp
adc
push
xchg
push
mov
es
or
xchg
sub
and
push
push
aam
jmp
iret
cmp
lock
lcall
enter
sbb
and
mov
mov
jmp
popf
ss
mov
dec
arpl
mov
clc
cli
fs
cmc
push
sub
cmp
fiadds
enter
sbb
xchg
mov
aad
sbbb
fcomp
bound
dec
orl
test
pop
sbb
std
adc
mov
inc
sbb
or
fisubs
cwtl
mov
stos
or
js
and
and
not
adc
scas
addr16
adc
lret
sbb
xor
xor
push
insb
popa
mov
pushl
sub
sarl
jbe
mov
xchg
push
leave
pop
ret
jp
pop
mov
adc
push
lds
add
nop
je
mov
cmp
mov
fisubrl
mov
mov
test
lcall
call
pusha
xor
push
pushf
sub
mov
xor
xorl
cmpsl
ret
dec
sbb
arpl
enter
fisubs
xor
sub
jge
dec
pop
lcall
fneni(8087
mov
cltd
test
push
mov
ljmp
lret
cmp
adc
repz
add
or
pop
mov
pusha
pop
dec
add
xstore-rng
cmpsl
les
xchg
xchg
int
hlt
je
addr16
xchg
enter
loope
rol
mov
lret
or
sahf
sub
push
andb
aaa
lods
loop
int
testl
sub
pop
mov
ret
mov
test
xchg
outsl
cmp
shll
dec
mov
jg
push
xchg
pusha
notb
jns
sar
lods
jg
loopne
dec
std
das
sbb
and
stos
jecxz
in
mov
xorb
jecxz
jae
add
mov
insl
out
addr16
xchg
mov
push
insb
decb
lret
mov
loop
in
jl
jo
adc
pop
jl
dec
stos
inc
lods
jnp
jns
mov
ds
insl
stos
xor
int3
jmp
push
shlb
mov
cli
cmpsl
dec
nop
xchg
mov
push
adc
push
std
or
popf
mov
roll
je
stos
dec
rcll
add
pushl
out
incl
test
mov
fs
lret
xor
aaa
dec
push
dec
hlt
ficompl
in
push
push
aad
int
icebp
outsb
enter
aad
adc
sub
jb
adc
push
and
test
sub
stos
or
jp
rcll
pop
jp
add
jge
popa
xor
mov
decl
int
cld
inc
inc
rcrl
mov
lock
dec
cmpsb
in
mov
repnz
xchg
sub
shrb
mov
or
lea
mov
ret
addl
dec
adc
ror
cmp
xchg
dec
movd
xchg
xchg
test
aam
stos
cmp
js
pusha
inc
jle
insb
mov
or
ja
movsb
xchg
and
push
mov
mov
xchg
mov
cmp
in
dec
push
jnp,pn
or
cltd
inc
insl
adc
es
inc
ds
dec
lods
shll
cmp
dec
cmp
sbb
pusha
fidivrl
fldenv
inc
push
sub
sbb
in
cmpsl
rorl
cltd
pop
or
test
pop
dec
lea
insb
lods
mov
sub
daa
or
dec
jb
xor
adc
fnstsw
fwait
outsb
popl
arpl
in
sbb
ja
pop
int3
and
cmc
and
sbb
mov
or
jle
fs
mov
stos
xor
mov
sti
bound
fsts
jmp
out
jns
roll
test
add
test
fcomp
ja
xchg
aaa
out
mov
mov
cmpsb
test
loopne
mov
notl
negl
pop
movsl
fnstenv
lret
cmp
stos
dec
cmp
loop
cmp
pop
push
inc
cmp
add
cs
scas
sub
add
push
stos
mov
cmp
out
je
ret
adc
cmc
mov
ds
shrb
in
cmc
fldl
mov
or
pop
mov
adc
ja
push
in
lds
xchg
cmp
sub
int3
arpl
and
sbb
mov
popf
scas
cld
and
xor
push
sub
sbbl
adc
lret
sbb
sbb
out
jne
dec
sbb
loopne
jg
insb
mov
es
jae
aam
js
cmp
decl
dec
and
idivb
rolb
cmp
aas
js
mov
add
out
pop
fucomip
es
int
cmc
cli
in
cli
xor
sbb
pop
pop
inc
mov
xchg
xchg
xlat
lea
adc
and
adc
push
aas
push
jbe
lods
movsb
jno
mov
loopne
mov
or
push
mov
stc
jg
mov
jno
lcall
iret
int3
xor
adc
out
or
cmp
call
cmp
rorb
sbb
add
ret
jb
jae
xchg
push
sbb
outsl
or
add
daa
subl
or
xchg
sub
jnp
inc
adc
fldt
cltd
lods
stc
xorl
mov
mov
push
push
pusha
or
cmp
adc
bnd
jb
pop
dec
cmpsl
add
and
dec
mov
fcomp
pushf
into
xchg
mov
repz
test
add
pop
push
addr16
jo
sub
fnsave
gs
ljmp
jmp
inc
es
loope
daa
cmp
roll
popf
hlt
mov
push
mov
pop
sub
pop
lret
cmpsl
shrl
shll
lds
add
push
mov
loope
call
shll
shl
pushf
je
add
lret
rcl
lahf
sahf
mov
mov
jecxz
pop
test
mov
shll
push
lock
jp
shll
adc
hlt
ret
dec
scas
push
rcrb
fsubs
jns
mov
fmulp
jp
leave
cld
rorl
jl
jne
adc
push
push
inc
mov
sub
js
fadds
push
mov
lds
imul
or
push
xor
push
lods
mov
cs
xor
mov
out
cmpl
mov
cli
cmp
pop
jne
dec
jbe
fwait
push
inc
sti
mov
inc
lea
sub
xchg
les
mov
and
lea
jb
mulb
lea
loope
pushf
pop
push
test
aad
jns
mov
add
inc
inc
insl
adc
lods
out
mov
add
out
aam
into
adc
leave
sbb
insl
fwait
bound
nop
push
daa
push
sbb
mov
leave
xor
jbe
mov
inc
es
js
mov
add
xchg
jle
and
jecxz
div
mov
lea
cmpsb
idiv
outsl
and
sarb
das
ret
insl
mov
inc
mov
adc
xor
jns
inc
hlt
pushf
fmull
dec
ljmp
dec
adc
rcrl
lds
add
pop
testb
movsl
lds
stos
nop
mov
xchg
jle
mov
inc
pushf
mov
mov
push
je
cmp
das
push
adc
pop
in
pop
mov
rep
adc
push
pusha
push
push
pop
jnp
jne
outsl
dec
addr16
pop
ja
xlat
xchg
fwait
fwait
ret
lock
test
and
repnz
cmp
push
shll
jg
int
mov
popa
or
mov
mov
mov
pop
int
xchg
jo
testb
sub
mov
cmp
sbb
movsl
cmpsl
fldt
movsl
cmp
jp
test
push
sub
shll
dec
std
ss
push
rcrb
pop
loope
out
dec
lods
pop
test
push
sbb
push
xchg
in
loopne
out
sbb
fs
popf
aad
ficompl
test
inc
pop
mov
rcl
test
testb
xchg
divb
inc
fs
movsl
sbb
mov
in
enter
outsl
pop
aam
pop
jmp
xor
loop
in
pop
xor
in
mov
rcl
sub
sbb
jno
sbb
sti
pop
and
mov
popf
orb
xor
xchg
sti
aas
or
sahf
xchg
pop
aam
and
inc
adcl
frstor
imul
clc
adc
aam
mov
and
pop
dec
repz
jbe
inc
mov
or
aad
hlt
or
scas
inc
out
rcll
jne
jl
pop
pusha
cmp
inc
mov
cmpsl
loopne
das
sub
shl
loop
shll
enter
dec
sbb
test
pop
jne
pop
pushf
shr
fstl
mov
mov
jle
aam
jae
jns
jne
test
cmpsl
testb
and
push
cli
or
adc
sbb
jmp
and
scas
jo
sbb
or
adcl
xchg
ret
sub
call
or
dec
imul
sub
and
das
xor
pop
inc
iret
sub
inc
sbb
and
lds
fnstsw
xlat
jg
cli
repz
push
fs
push
mov
out
xchg
in
xor
ja
push
adc
jl
xlat
jb
sub
popf
icebp
mov
jo
add
aaa
add
and
loop
inc
fsubl
sahf
into
add
dec
mov
xor
pop
lcall
mov
test
out
push
dec
or
insb
xor
in
ljmp
cwtl
ja
mov
dec
sub
pop
mov
mov
lock
ds
fcompl
and
fnstcw
sbb
test
jne
sub
dec
scas
xchg
add
add
insb
inc
lock
cmpsb
sbb
pop
fs
aad
sub
lock
fstpt
push
mov
mov
push
push
sub
lret
adc
jmp
lea
orl
jmp
scas
jae
adc
daa
pushfw
add
test
push
cwtl
cmc
xor
or
fistpll
xchg
inc
in
pop
imul
push
sbb
dec
repz
ds
bound
mov
call
into
adc
leave
xor
sub
aad
push
mov
insb
dec
or
arpl
jns
imul
andl
out
and
xor
rorl
lds
mov
repnz
sub
sub
mov
xchg
out
jecxz
fwait
rcrl
inc
ljmp
pop
fadd
dec
cmp
push
shrl
inc
ret
pop
ljmp
pushf
jb
lock
mov
into
jne
add
push
ljmp
movsb
popa
cltd
lods
data16
jle
xor
test
add
dec
scas
sti
mov
pop
mov
cmp
cwtl
inc
mov
cltd
subl
adc
inc
push
shl
js
xlat
dec
xchg
mov
cld
jl
stos
mov
push
add
mulb
push
cmp
xchg
movsl
adc
sub
pop
or
loop
xorb
int3
adc
mov
lods
andl
push
dec
inc
popf
in
adc
cmp
pop
inc
cli
xchg
add
test
mull
pop
fiadds
cwtl
push
or
inc
push
pushf
mov
jle
xorps
cmc
repnz
and
out
fcmovnb
sbb
in
icebp
int
mov
xchg
repz
pop
xchg
shrl
mov
ja
cmp
lahf
or
dec
je,pn
loop
adc
rcrb
dec
mov
call
lret
cmc
daa
scas
xchg
test
dec
mov
push
pop
push
ret
mov
or
xchg
or
pop
repnz
sbb
cmp
mov
ds
add
loope
sub
data16
movsl
push
mov
aam
sbbb
pop
jl
aam
in
mov
mov
jp
fisttpll
jmp
xchg
jno
sti
stos
sub
stos
int
or
xchg
or
int3
test
stc
loopne
aam
std
insb
andb
add
or
nop
adc
jg
psubb
lea
mov
loopne
xor
pop
sarb
mov
sbb
mov
into
jns
insb
and
fwait
adc
outsl
add
xchg
fdivp
xlat
sbb
pop
sub
jne
outsl
fcomps
ja
rcl
packssdw
xlat
ljmp
pop
xor
pop
or
mov
pop
bound
fcoms
negl
out
xchg
xchg
ss
pop
out
cmp
jecxz
ljmp
sub
das
jle
jne
shll
out
cmovae
jmp
sahf
mov
push
popf
shr
icebp
fwait
jp
cwtl
push
popa
mov
pop
lock
add
add
xor
cmp
jno
pop
cltd
sbb
xor
call
mov
test
jecxz
scas
jg
xchg
bound
jmp
repnz
jge
pop
cmp
pop
inc
xlat
dec
ror
fnstenv
xchg
inc
movsl
repz
and
add
test
repnz
sti
stc
shll
adc
rolb
cmpsb
push
mov
adc
push
and
das
fstpl
das
movsl
loop
cmpsl
int3
clc
leave
dec
in
cmp
and
test
imul
aad
js
shll
dec
push
push
mov
nop
xchg
hlt
movsb
xchg
clc
fsubrl
jnp
in
cmp
xlat
cli
scas
repz
dec
xchg
popl
loope
push
out
and
pop
push
mov
lret
add
cmpsl
add
cli
in
js
sub
divl
movsl
loop
iret
cs
cmc
inc
test
js
in
pop
sub
imul
fldenv
cmp
stos
pop
leave
cmp
inc
sbb
in
adc
bound
clc
aad
lea
sahf
mov
out
or
cmpsl
out
pop
sbb
arpl
scas
pop
in
inc
adc
aaa
add
push
inc
mov
mov
cmp
sbbb
lret
sahf
xchg
pusha
fs
inc
jo
jb
jnp
incl
push
lret
sbb
jecxz
movsb
jnp
lods
push
push
xlat
sbb
test
mov
mov
insb
subb
insl
in
outsb
push
push
ja
negl
ficoms
pop
add
xor
mov
xor
adc
cwtl
pop
jae
push
xor
sub
xchg
leave
mov
jne
jp
mov
lret
test
test
mov
adc
mov
fcompl
or
aas
cli
aad
adc
jb
out
add
push
inc
mov
add
dec
jp
cmpsb
mov
push
cmp
inc
dec
mov
gs
pop
xor
bound
push
int
das
mov
or
ja
shll
mov
orl
imul
mov
inc
add
fstps
pop
gs
outsl
xchg
sub
test
in
rcll
lods
and
jae
dec
xchg
idivb
jno
mov
ret
imul
and
enter
sbb
xor
and
pop
mov
mov
lret
fwait
outsl
or
mov
ja
xchg
and
loope
lock
mov
pop
or
sbbb
sbb
adc
sbb
cmp
lds
lahf
dec
aam
xchg
mov
in
aaa
ljmp
js
inc
orb
cmp
xor
test
or
lock
and
xor
pop
sub
lahf
push
add
and
dec
mov
xchg
fs
cli
cmp
inc
cmp
fldl2e
shrl
cwtl
scas
xchg
mov
out
mov
test
aaa
mov
sbb
ret
mov
fldt
ja
adc
xchg
xlat
lret
sbb
push
sub
xor
cmp
xor
loop
mov
mov
sbbl
lret
jb
rcrb
sahf
call
icebp
jo
fisubl
in
push
push
ljmp
push
lods
iret
loop
arpl
rcrb
jbe
or
cmp
sub
pop
pop
cwtl
loope
mov
insl
popf
lret
shll
sbb
jo
in
add
jg
add
loopw
enter
or
mov
sbb
loopne
cmpsl
pushf
xchg
cmp
adc
mov
movb
cld
rorb
es
add
jl
into
mov
fisubrs
ds
les
movsl
pop
dec
fs
add
std
movsl
test
js
pop
jne
fldenv
subl
sbb
mov
xchg
xor
jmp
dec
sub
or
mov
xor
mov
shll
je
es
cmp
adc
sbb
pop
stos
or
xor
rolb
into
xor
or
xor
lock
add
jecxz
or
pusha
pop
roll
push
int
dec
jnp
mov
enter
xorb
lahf
adc
jle
orl
jecxz
movsl
xchg
rolb
sti
nop
test
stos
sub
clc
xor
jne
das
lock
pop
pop
insb
cs
adc
shlb
fldl
stos
sub
mov
bswap
mov
je
add
fs
and
jne
test
ficoml
sub
jne
xor
out
mov
shll
mov
mov
data16
lret
ja
or
insb
addr16
pop
jbe
sub
int
andb
insl
mov
jne
push
data16
mov
in
cmp
insl
xor
mov
pop
mov
push
bound
lods
and
or
dec
mov
mov
xchg
aas
pop
rcll
xchg
pop
push
fmull
test
int
rclb
mov
sbbl
je
rcrl
and
push
xor
decb
mov
push
ret
and
push
icebp
leave
mov
dec
mov
sbb
cmp
sti
test
icebp
cmp
dec
sbb
dec
push
aad
hlt
push
mov
mov
cmp
stc
inc
aam
mov
and
movsb
xor
jg
test
sub
jmp
paddsb
ret
cmpsl
mov
adcl
xchg
xchg
cld
imull
xlat
inc
outsl
pushf
test
mov
jge
sahf
enter
push
add
mov
ss
imul
or
fldenv
push
mov
adc
aaa
add
push
mov
sub
mov
ret
add
push
hlt
mov
test
test
mov
in
popf
into
pavgb
sub
cmp
add
inc
mov
icebp
mov
pop
cmp
repnz
rorb
inc
ret
add
and
or
push
js
mov
adc
mov
add
mov
daa
mov
dec
dec
mov
and
sbb
mov
xchg
daa
imul
dec
xchg
add
jb
lods
aaa
mov
insl
mov
sub
mov
sub
mov
addr16
stc
test
or
insl
scas
loope
inc
add
jo
fstpl
enter
add
push
jge
ret
mov
jbe
call
insb
xchg
int
int3
hlt
jl
sbb
and
sub
mov
mov
insb
cmp
iret
add
mov
adc
xlat
divb
pop
vmovq
mov
hlt
push
xchg
jecxz
and
imull
mov
jmp
xchg
mov
arpl
sbb
jnp
int3
xchg
xchg
loopne
xor
mov
repz
sub
leave
mov
hlt
mov
aas
mov
cmp
pop
cmp
cmpsb
sbb
jl
ret
sbb
mov
dec
insb
sti
and
lcall
addb
cs
cmc
jge
or
push
outsl
lahf
lods
rcll
and
xor
daa
push
pop
pop
xchg
in
mov
cs
jo
or
and
sahf
sbb
fdivrs
enter
inc
int3
xchg
mov
ja
es
push
inc
sahf
fsubrl
pause
in
scas
testl
sbb
iret
outsb
sahf
adc
cmp
sti
add
addr16
sbb
push
mov
push
adc
repnz
nop
insb
subb
into
gs
sub
mov
fs
adc
xor
addl
push
shlb
bswap
aam
pop
int3
xlat
xorl
lock
lcall
ds
clc
push
and
inc
sbb
mov
shl
sub
sbb
sbb
outsb
add
ss
push
mov
ret
pop
mov
movb
cmc
mov
mov
xor
pop
inc
mov
xchg
daa
aaa
fdivrs
ja
sub
ficomps
lahf
repz
sbb
add
in
mov
xchg
cmp
jle
gs
into
add
test
fstps
inc
aam
movb
cmp
test
out
incl
out
xor
pop
subl
sbb
pop
xor
and
popa
imul
clc
xor
xchg
shlb
pop
cmp
sub
and
mov
add
icebp
mov
aam
rcll
pop
push
mov
pop
pop
xor
push
adc
fmulp
roll
fstps
leave
sub
xor
test
int
out
jl
in
sub
mov
fisubrl
je
dec
inc
mov
lods
or
les
mov
into
mov
sub
movsl
lret
mov
adc
mov
dec
shrb
das
cmp
push
push
push
dec
push
push
out
cmpsb
or
mov
cmc
xor
shll
pop
out
inc
incl
shrb
cmp
jno
sub
in
dec
sub
sub
leave
mov
fisubs
movsb
mov
xchg
pushl
testl
stos
out
scas
iret
out
mov
jb
aad
push
icebp
ret
test
xor
lods
xor
xchg
insl
mov
cmp
push
pop
call
cwtl
sub
rcl
lock
push
xchg
dec
gs
xor
jnp
pushl
icebp
and
push
hlt
mov
push
ret
daa
dec
mov
mov
mov
cmp
pop
xchg
and
in
movsl
loopne
lret
adc
cmpsb
js
hlt
insb
and
push
cld
shll
sti
sub
aas
fwait
push
push
inc
ret
fldt
cmp
xchg
cmp
xchg
sahf
mov
adc
sbb
push
jmp
push
fimull
lret
shlb
fsubrl
xchg
jl
jge
mov
dec
je
das
out
out
mov
popa
cmp
or
jmp
addr16
sub
nop
rorl
dec
mov
dec
jle
fs
pop
mov
js
sub
or
inc
int3
std
xchg
mov
mov
or
or
fbstp
cli
mov
movsl
mov
outsb
dec
out
stos
cmp
test
loopne
sub
cwtl
sbb
xchg
aas
jecxz
mov
adc
fidivrl
cmpl
jno
xchg
insl
cmp
mov
fscale
mov
inc
or
ja
xor
lock
jp
dec
jg
addr16
sub
mov
lret
sarl
cmp
std
mov
fst
scas
fiaddl
test
cmp
adc
jno
hlt
sbb
jp
mov
xchg
in
mov
sub
and
sub
sbb
adc
sbb
sahf
fstps
test
mov
out
jle
sbb
cmp
std
inc
mov
dec
out
pusha
mov
mov
and
fistps
xorl
scas
fadd
cmp
lret
cmp
xchg
xlat
sahf
test
jmp
pop
outsl
out
cmpsl
fisubs
jl
es
xchg
mov
and
int3
sub
stc
jp
push
inc
dec
lret
orl
xorps
rclb
push
mov
leave
mov
fstps
gs
pop
test
jle
pop
rcll
inc
mov
cmpb
dec
cwtl
mov
rorl
das
or
lods
mov
pop
stos
xchg
scas
testl
and
pop
cld
cmp
shrl
movsl
sub
adc
mov
scas
ret
je
xchg
call
cwtl
jno
int
push
mov
adc
in
push
jno
and
mov
pop
mov
cmp
clc
cmp
xchg
and
pop
aam
scas
xchg
add
mov
push
xor
shl
xor
pop
imul
test
enter
and
lock
or
repz
dec
sub
jbe
xchg
mov
pop
push
inc
fdivrl
inc
lcall
insl
sbb
jne
xchg
es
dec
dec
roll
stos
inc
in
add
push
sbb
or
iret
call
sbb
xor
mov
mov
pop
stos
push
fcmovnu
xchg
lods
cld
xchg
and
fstpl
dec
stos
inc
xchg
jb
sub
push
jle
mov
xor
sub
loope
jge
pop
gs
out
in
xor
mov
pop
mov
dec
xchg
push
in
and
and
pop
aam
dec
pop
jmp
dec
push
sub
rcrl
fbstp
dec
mov
pop
lahf
test
pop
adc
push
fldt
int
pop
dec
cmp
xor
lea
loope
pop
aas
in
mov
mov
jne
stos
loopne
in
repnz
xchg
shlb
adc
scas
fwait
outsb
dec
repz
xor
jg
pop
into
and
sbb
cmp
or
fldl
mov
adc
testl
fidivl
push
and
aam
pop
ljmp
call
inc
stos
movsb
lahf
pop
sub
jge
leave
adc
idivl
out
sbb
sbb
les
scas
mov
insl
lret
push
sti
mov
mov
movsl
cld
inc
fidivrl
mov
sar
mov
push
je
int3
lds
mov
or
cmc
or
fdivrl
mov
popa
fcompl
sub
cmpb
shlb
push
dec
pop
stc
or
es
dec
mov
pop
xchg
inc
and
hlt
std
lock
cwtl
xor
popf
add
outsl
pushf
cmpsb
scas
aas
xor
push
je
mov
shrl
out
add
outsb
mov
add
xchg
hlt
addr16
sub
addl
lock
cmpsb
popf
xchg
pop
mov
mov
pop
shrl
sbb
js
ss
xlat
jnp
sub
pop
xchg
lods
rcl
jb
sbb
icebp
inc
out
lret
mov
mov
ljmp
pop
pop
jnp
mov
js
jge
cmc
int
jae
mov
and
aad
mov
push
dec
pop
repz
popa
fisubl
jnp
jb
clc
inc
lahf
xchg
repz
mov
xchg
fnstcw
sub
add
repnz
mov
imul
inc
fmul
jns
clc
adcl
cmp
testb
fcmovb
ror
push
jae
insl
imull
or
adc
cmp
loopne
shrb
adc
loop
imul
call
pop
jb
mov
dec
cltd
int3
loopne
jle
imul
push
inc
dec
es
inc
mov
ret
or
or
jl
cmp
cmp
and
push
adc
push
insl
adc
test
mov
lret
mov
movl
adc
inc
adc
mov
dec
js
jns
sub
push
lock
pop
push
movsl
cmc
sti
lds
addr16
pop
inc
mov
push
xor
mov
int3
es
pop
syscall
test
lret
lahf
inc
sbb
push
cmpsb
mov
lods
fcmove
dec
mov
cmpsb
insb
xchg
and
sbb
xchg
pushf
rcl
mov
sti
out
xlat
into
icebp
xor
sbb
mov
cmpsb
pop
add
mov
popa
sbb
les
sti
push
or
enter
je
dec
repnz
int3
loopne
sbb
imul
stc
sub
xchg
jg
jg
xchg
or
jae
mov
or
push
mov
rorl
shlb
pusha
call
aam
loope
mov
cs
icebp
mov
adc
movb
mov
sub
jp
loop
icebp
add
fwait
inc
dec
mov
rorl
or
mov
xor
movsl
lcall
lcall
inc
and
push
mov
pop
movsl
lock
pop
add
cmp
lret
leave
out
inc
dec
sti
enter
add
xchg
mov
arpl
pop
jle
sbb
pop
and
push
jle
sarl
dec
nop
dec
xchg
xchg
sbb
xchg
mov
cmp
iret
xchg
jg
clc
and
lret
cltd
or
int3
data16
jo
fisubl
unpckhps
pop
nop
sahf
rcl
xchg
jo
out
jo
sbb
out
cmpsl
ret
mov
dec
decl
lahf
int3
push
xor
inc
fisubl
test
icebp
push
vmaxps
xchg
in
enter
int
mov
inc
xchg
test
and
adc
stos
push
mov
xchg
or
jp
fsts
cmp
xor
les
stc
inc
and
imul
inc
je
dec
out
fs
sbb
jecxz
adc
mov
and
js
mov
int3
leave
cltd
mov
decb
sub
add
cs
out
loope
jmp
and
sbb
jo
sbb
repnz
lds
mov
orb
leave
lcall
dec
enter
lods
xchg
ds
jle
mov
mov
pushl
fwait
out
lret
lahf
cmp
mov
std
imul
ja
xor
ficoml
push
aas
cli
xor
rcrb
jne
imul
pushf
dec
fcmovbe
adc
cli
scas
stc
mov
sbb
xor
je
js
adc
pop
subb
movsb
lds
add
pop
scas
mov
xor
inc
adc
sub
jb
or
imul
cmp
dec
push
sub
ja
lahf
int3
push
loop
test
scas
jecxz
orl
sbb
jge
jmp
push
dec
push
sbb
shll
loopne
sbb
jne
icebp
sub
pop
jp
pop
dec
lcall
cmc
inc
or
call
std
imul
std
jle
shl
mov
pop
push
xor
cld
cs
dec
dec
pusha
lds
xor
mov
add
push
jmp
ja
xchg
adc
es
lods
mov
fstpt
sub
sar
adc
pop
leave
jno
sbb
mov
test
std
push
mov
test
cmovnp
orb
and
mov
test
fidivl
clc
in
push
xchg
stos
jge
rorl
ror
hlt
xchg
jae
popa
sub
int3
lahf
dec
mov
inc
sti
add
pop
cmpsl
pop
mov
dec
pop
addr16
mov
or
mov
adc
cmp
in
movsb
mov
mov
lea
mov
pop
stos
jb
sbb
inc
leave
shrb
push
dec
adc
loop
mov
out
push
push
mov
cli
mulb
sub
or
jno
push
push
cltd
add
xchg
loope
outsb
cmp
jmp
and
cwtl
sub
adc
in
fstpl
cmp
dec
mov
rorl
add
loop
push
mov
push
push
fsubs
push
mov
cwtl
out
xor
xor
and
pop
into
push
lahf
ljmp
ljmp
fisttpl
mov
aaa
call
fimuls
add
in
and
mov
add
sub
cmp
push
cmpb
test
int3
mov
dec
add
add
mov
inc
arpl
xchg
mov
bound
cld
popa
ret
pop
fsubrl
mov
test
sar
mov
bound
push
mov
das
mov
shll
addr16
je
mov
adc
fadd
mov
and
jge
xchg
repz
and
inc
andb
shrb
ja
xor
xor
icebp
imul
lea
jae
ret
mov
test
je
pop
cltd
mov
lret
sbb
xchg
pusha
fs
cltd
and
std
sub
loopne
cmpb
mov
lret
fisubrs
ret
jb
cmp
repnz
pop
sub
lret
dec
xchg
xchg
loop
dec
push
cmp
popf
cmp
add
xor
je
dec
adc
pushf
bound
cmpsl
mov
mov
jnp
inc
jns
jne
stos
sti
jp
lret
xor
int3
ret
jo
je
xchg
xchg
push
fwait
jmp
sahf
push
out
push
mov
movsl
mov
lods
jno
add
pop
mov
cmpsb
jo
mov
ss
or
push
sbb
js
push
xchg
pop
mov
test
pop
es
sbb
addr16
mov
or
insb
imul
mov
insl
xchg
mov
jp
jo
lahf
sbb
cli
mov
adc
fstpt
mov
xchg
fisttpll
stc
iret
je
mov
cli
push
test
push
pop
pop
mov
ljmp
popf
pop
ss
pusha
ret
pop
fildl
cld
aas
int
scas
sti
sti
push
jmp
sbb
jno
aas
insb
imul
mov
and
repz
add
lcall
pop
push
test
ficoms
into
and
rcr
fs
iret
inc
call
xchg
int3
movl
mov
and
mov
cmp
inc
sub
bound
dec
sub
stos
lahf
pop
and
push
push
sarl
push
int3
shr
aam
push
pop
sbb
lods
pop
pop
stos
loope
fistl
cwtl
aas
mov
push
cmp
cli
push
dec
movsl
adc
test
cmp
mov
out
sub
popf
mov
mov
outsb
xor
pop
push
ret
mov
insl
insl
mov
popf
dec
jmp
shll
iret
mov
pop
xchg
and
sbb
jae
sub
fcmovnbe
pop
je
rclb
cmpsl
mov
xor
jecxz
add
jle
aas
iret
je
dec
push
aam
fcmovb
sti
outsl
das
jo
insb
test
mov
mov
mov
xchg
or
nop
mov
rcrb
jno
out
nop
shr
hlt
jl
loop
leave
pop
cs
jbe
stos
fwait
addr16
aam
jg
movsb
jg
jge
out
ds
sub
test
in
sub
push
cmpsb
pop
out
jmp
mov
and
enter
mov
arpl
ret
pop
mov
fstl
sub
iret
pop
pop
xor
push
fwait
subb
in
pop
push
push
mov
sbb
mov
mov
cmp
fstl
rcll
insb
jo
cmpsl
cmp
jae
and
cmp
inc
clc
sbb
xor
fwait
hlt
fsubl
orb
and
lock
in
xor
cmp
je
and
clc
mov
popf
push
scas
cmpsb
push
xor
inc
mov
inc
cmp
xor
xor
xor
mov
out
dec
aas
and
pop
xor
loope
mov
lahf
leave
iret
test
jp
sub
pop
imul
adc
jns
cmp
mov
mov
mov
andl
push
adc
add
and
jmp
mov
mov
mov
fstl
hlt
mov
and
pop
repz
adc
outsl
lret
gs
push
clc
into
jo
aam
push
test
pop
push
daa
insl
shlb
xor
or
push
addb
pop
imulb
sub
and
pop
cmp
xchg
jne
call
daa
pop
pop
jle
dec
rcrl
scas
icebp
icebp
lods
dec
data16
cmpsb
test
cli
lock
mov
adc
mov
push
inc
add
fldenv
jle
mov
mov
and
in
test
pop
xor
cwtl
jecxz
insl
repnz
scas
rcl
fidivrl
lods
lcall
rcrb
call
xlat
int
pusha
ljmp
xchg
pop
daa
test
repz
test
mov
jnp
lcall
pusha
popa
movsl
mov
push
mov
pop
and
cmp
das
sbb
mov
fldt
test
adc
push
ljmp
shlb
pop
pop
inc
pop
in
mov
push
jo
test
dec
push
add
or
into
xor
shlb
cwtl
rorb
mov
dec
cli
jnp
inc
jnp
mov
or
outsl
addr16
clc
cmpsb
mov
and
xlat
andb
jb
jmp
arpl
subb
dec
shlb
add
pop
lock
sub
sub
xchg
leave
cmp
imull
cmpl
fs
push
outsl
aas
call
imul
mov
push
add
push
dec
jns
pop
xor
push
outsb
mov
push
pop
mov
jbe
and
shll
pop
and
fsubrl
nop
jno
jge
enter
sbb
out
mov
sub
xchg
ja
add
mov
test
fidivrl
xor
sbb
out
sbb
cmp
das
xor
pop
lock
jg
inc
push
shr
call
mov
subl
ret
push
nop
cmp
in
leave
mov
test
mov
push
cmp
test
insl
jo
sahf
and
xor
push
xchg
and
enter
ret
sbb
rolb
scas
xchg
add
pop
and
pop
pop
jge
loop
lods
call
pop
cmpsb
mov
add
dec
lahf
cmp
je
inc
bound
cmpsl
pop
jb
ja
repnz
push
call
adc
mov
xchg
lods
and
js
nop
lahf
add
push
xchg
fisubl
leave
xor
adc
sub
cmpsl
cwtl
stos
lret
jle
jecxz
ficompl
lcall
push
call
cmp
push
or
mov
packsswb
int
scas
xchg
je
shrl
cmc
pop
shrb
inc
or
mov
mov
ds
insl
mov
movl
in
sbb
mov
shlb
imul
fldl
mov
pop
repnz
in
jne
jge
cmp
dec
add
inc
mov
mov
add
push
adc
andb
mov
push
xchg
icebp
jmp
fisubrs
dec
inc
and
sbb
icebp
add
sub
stos
dec
arpl
pop
aam
rcrl
test
imul
mov
mov
mov
inc
cli
insb
loop
xchg
mov
lret
test
dec
movsl
lcall
rclb
into
xchg
loope
mov
dec
push
dec
adc
lcall
xchg
clc
and
lahf
sub
andb
sub
mov
bound
jle
nop
xor
cmp
push
test
push
shr
push
fnstsw
cli
jae
in
pusha
sar
mov
push
cmp
out
lods
and
mov
mov
cli
stc
adc
inc
xor
ljmp
std
aad
pop
push
cmp
call
ljmp
jne
stc
push
mov
sub
sbb
loope
fiaddl
and
pop
imul
or
aam
or
lock
push
call
cs
into
xchg
dec
cmp
cli
es
mov
mov
movsl
shl
mov
mov
mov
push
mov
sub
cmp
mov
mov
mov
fistpl
adc
out
sbb
and
out
cmc
lcall
or
sbb
add
add
mov
mov
pusha
stos
ljmp
add
cli
iret
lret
jno
inc
mov
or
addr16
adc
xor
jbe
mov
adc
push
outsl
mov
es
jle
movsb
add
adc
mov
cmp
icebp
mov
inc
aaa
jnp
lods
sarl
pop
push
sub
enter
outsl
push
rcl
add
fisttpll
xchg
repz
pop
push
jl
push
fsubs
dec
jg
push
jbe
sbb
in
sub
dec
mov
pop
fwait
aas
xor
jo
insl
add
pushf
or
cs
scas
repz
scas
test
jo
aaa
les
push
inc
lret
add
dec
leave
fldl2e
lea
fcmovnu
dec
dec
bound
or
sti
xchg
jmp
sbb
add
jg
in
lret
pop
xchg
sub
std
popl
inc
cmp
mov
and
sub
jne
cmp
loope
stos
jl
sbb
mov
movsb
cmp
popf
inc
aad
xchg
cmp
sbb
push
pop
mov
outsl
rcll
popa
xlat
ljmp
mov
push
arpl
cld
xor
jae
and
or
shl
dec
adc
dec
out
imul
out
add
scas
pop
jae
pop
rclb
push
mov
jmp
in
movd
or
dec
lods
jb
pop
dec
stos
jle
sbb
sti
sub
test
xchg
das
inc
or
xchg
pop
pop
test
rorb
enter
lods
and
scas
cmp
mov
or
loope
in
test
scas
mov
aad
lods
rcr
mov
dec
in
jecxz
roll
adc
mov
js
popa
push
fsubl
ret
mov
imul
push
int
sbb
pop
dec
stos
arpl
dec
mov
dec
sub
xor
icebp
imul
push
mov
scas
mov
cmpsb
shl
cmp
aas
std
push
jg
stos
icebp
dec
jl
mov
mov
push
pop
pop
mov
iret
push
cltd
repz
or
arpl
mov
mov
jp
cmp
in
stc
mov
xchg
or
lcall
cmp
das
inc
ja
xor
xor
addr16
in
dec
fs
aaa
cmp
mov
lock
sarl
ja
or
out
inc
lret
push
adc
std
jno
or
dec
inc
push
loopne
fadd
xlat
into
movsl
addr16
dec
mov
ds
mov
fwait
cmp
popfw
pop
popf
dec
leave
stc
mov
icebp
sub
ss
push
push
push
and
nop
out
mov
in
mov
xchg
or
mov
std
sbb
gs
push
sbb
mov
pop
out
or
lcall
fistpl
cmp
imul
clc
push
xchg
daa
shll
fdivs
add
sub
lcall
sub
or
xchg
aad
std
jo
cmpsl
stos
test
jmp
icebp
stos
add
insb
pop
addr16
mov
test
nop
inc
loop
mov
push
outsb
inc
ljmp
in
cmp
daa
xchg
insb
xchg
cmp
cmp
pop
jmp
adc
jbe
aad
or
imull
xchg
jl
push
add
lock
add
pop
hlt
fnstcw
pop
or
cmp
mov
and
sbb
sti
adc
subl
aam
push
fistpl
pop
mov
pop
out
inc
test
sbb
in
dec
sub
test
popa
mov
nop
pop
insl
loopne
sub
dec
jecxz
push
cld
jg
aam
shrb
xlat
lock
pop
testl
pusha
test
call
push
pushl
add
cmp
pop
lret
subl
or
or
stos
mov
xchg
cmpsl
stos
ljmp
or
ss
lea
fisubl
andb
xor
je
xchg
or
sub
fcomp
xor
mov
into
mov
mov
les
int3
div
pop
in
add
hlt
mov
mov
stos
pop
sar
mov
lret
cltd
or
jp
and
sbb
or
inc
aaa
iret
sub
jmp
xchg
ffree
xor
shr
scas
pop
inc
sti
in
add
push
xchg
add
sbb
outsb
shlb
jmp
cmc
js
pop
mov
lcall
and
mov
pop
mov
scas
rolb
icebp
or
loopne
lcall
inc
pushf
or
cld
mov
xchg
cmpsb
dec
mov
in
pop
lcall
cmpsb
fdivl
loop
xchg
mov
mov
pop
test
out
out
leave
mov
fxch
jae
and
movsb
in
int
lock
mov
jl
aaa
add
aam
xor
shl
imul
xor
outsl
and
cltd
dec
pop
mov
push
adc
xchg
inc
cmp
mov
mov
xchg
lods
ds
fiaddl
rcrb
movsb
pop
ja
rol
js
repz
sub
iret
push
cmc
xor
mov
mov
rcl
fwait
daa
test
rclb
xor
xor
stos
sbb
mov
xor
sbb
sub
mov
int3
outsb
dec
leave
dec
inc
inc
dec
add
aas
mov
xchg
mov
dec
stos
jne
sbb
mov
sbb
mov
adc
fldenv
cmpsl
jge
fsubr
jns
xchg
xchg
add
test
inc
int
push
int
inc
loopne
sbb
daa
out
sbb
nop
lds
lods
aaa
xor
popf
xchg
mov
mov
cmp
adc
sbb
push
sbb
cld
or
out
aaa
xchg
fdivl
push
hlt
mov
pushf
ljmp
mov
jno
loopne
mov
pop
fnsave
cmp
cli
ja
loopne
inc
aad
test
test
or
inc
add
in
aas
pop
inc
repnz
sub
orl
fwait
repnz
jns
dec
adc
js
jo
subb
jne
ljmp
add
jle
test
mov
fdivl
call
fwait
inc
movb
cmpb
stos
ljmp
lret
jae
or
out
mov
rcrl
mov
pop
sbb
cmp
fmuls
sti
movsl
adc
into
outsb
fcoms
mov
daa
nop
inc
insb
mov
mov
in
xlat
push
or
int
inc
jge
scas
mov
aas
sarl
adc
dec
shll
cmp
fldcw
sub
xchg
daa
fistpl
mov
test
jecxz
dec
and
outsb
divl
mov
jb
stc
ss
or
cltd
sbb
jmp
pop
mov
je
js
cs
push
xor
mov
adc
in
icebp
xor
xor
jge
test
jae
aas
cwtl
jae
lahf
addb
sbb
cmpsb
xor
inc
mov
mov
lods
sbb
pushf
mov
int3
pop
scas
mov
xchg
imul
js
and
jmp
test
dec
cmp
ja
jno
xor
and
pop
push
mov
cmp
adc
in
mov
sbb
mov
leave
mov
adc
pop
jmp
jne
fldl
ja
scas
mov
mov
fucom
mov
cmpsl
cmp
dec
cwtl
add
pushf
stc
sub
xchg
pop
mov
mov
mov
imul
shr
push
movsb
rcr
leave
and
bound
andb
xchg
orl
or
xor
lods
call
push
dec
or
or
clc
sbb
lret
or
xlat
and
xchg
pop
stos
ret
adc
sbb
inc
mov
insb
cmp
test
icebp
jo
inc
in
push
pop
add
repz
inc
out
push
adc
pop
cmp
sarb
sub
xchg
cmp
std
cmp
js
mov
jmp
out
dec
aas
subb
pop
jb
or
fldenv
out
jecxz
mov
or
scas
out
nop
fwait
gs
lahf
ja
pop
sbb
shll
fwait
in
daa
inc
inc
insb
sti
sti
mov
test
jmp
xchg
inc
and
stos
add
xchg
mov
cld
ret
andb
sub
fisubrs
lahf
jnp
imul
or
push
testb
sbb
test
cs
or
out
inc
adc
and
mov
jb
shll
push
loop
mov
xlat
notb
hlt
imul
mov
decl
mov
xor
push
sub
cmpsb
lahf
cwtl
fnstenv
jl
inc
repnz
mov
lods
hlt
inc
adc
pusha
loop
out
sbb
pop
roll
add
mov
sub
push
or
bound
nop
mov
mov
sti
dec
scas
setno
cld
pop
std
subl
xor
cmp
dec
add
dec
sub
push
and
fwait
inc
adc
repnz
ljmp
jae
cmp
or
sbb
loop
cmp
fwait
push
inc
xchg
ja
mov
movsb
mov
insl
or
jg
insb
ficoml
lods
je
ljmp
mov
jbe
sbb
bound
or
pop
int3
pop
js
sub
adc
int3
ret
sub
or
sbbl
lds
popf
push
cmp
fisubs
fidivl
cmp
pushl
out
lods
sbb
adc
sbb
cmpsl
call
sub
xor
lea
jbe
inc
xor
or
push
aaa
sbb
dec
ljmp
jecxz
mov
fwait
xchg
out
xor
mov
dec
outsb
subb
inc
mov
xchg
mov
add
andl
jmp
popf
push
adc
adc
push
mov
dec
call
scas
jle
mov
jp
js
out
stc
cmpsl
sbb
fmulp
cmp
mov
sti
js
xchg
outsb
insb
or
jno
add
mov
sbb
jae
sahf
fwait
adcl
sub
iret
adc
test
cltd
or
nop
sub
fldpi
in
dec
rcl
mov
jecxz
xchg
je
testl
dec
dec
pop
jnp
cltd
imul
fimull
lahf
push
sbbb
jns
xchg
mov
mov
jl
andps
test
sub
cs
jne
jnp
jne
clc
xor
out
xor
aaa
mov
or
clc
rclb
insb
movsb
mov
cmp
repnz
pop
rcr
and
stos
xchg
xor
mov
inc
sbb
inc
push
in
xor
sbb
pop
dec
jns
mov
add
push
or
mov
lock
push
popa
test
mov
je
jb
shrl
ret
cmp
loopne
roll
mov
mov
cmpsb
and
xchg
insl
jns
push
in
ret
jns
adc
xor
cmp
je
push
outsb
mov
inc
leave
std
subl
push
cmpsb
jbe
jne
cmpsl
in
xchg
insb
xorb
insb
pop
xchg
push
out
cmp
sub
dec
sub
push
cmp
jmp
loop
xchg
insb
and
aad
dec
sti
pop
repnz
scas
lahf
jbe
push
lods
cmp
pushf
lods
sahf
dec
jnp
and
mov
xorl
push
mov
or
nop
jae
mov
push
xor
pusha
fucomp
jne
dec
adc
aad
adc
ud2
or
mov
jae
cmpsl
out
loope
sbb
or
push
xchg
jle
adc
out
push
jne
sbb
jnp
icebp
fstps
std
jge
push
push
dec
cli
dec
mov
mov
xchg
jl
aaa
and
int3
insb
push
ja
iret
mov
je
inc
sbb
adc
les
jae
xor
test
xor
adc
lret
sub
int3
xlat
add
jge
dec
and
mov
push
test
dec
pop
sub
push
flds
xorl
in
imul
jg
cmp
mov
dec
scas
push
sub
sbb
es
add
sahf
insl
ja
rdmsr
stos
mov
cs
in
cmp
movsb
mov
fwait
adc
add
jae
arpl
aad
push
mov
fs
outsb
and
xchg
sub
xchg
mov
jns
adc
in
popa
add
dec
pop
into
jb
mov
push
mov
sahf
arpl
sub
arpl
fnstsw
popa
mov
jg
lods
data16
push
loop
scas
cmp
add
or
push
movsl
std
repz
push
xor
push
mov
mov
push
jp
mov
xor
enter
jo
mov
inc
in
mov
stos
lods
mov
pop
das
push
or
xor
cvtpi2ps
sub
stos
inc
rorb
aad
cld
jg
movsl
or
cmpb
inc
pop
aas
push
and
enter
out
push
or
stos
loop
dec
outsl
inc
sbb
frstor
add
add
push
cmc
out
dec
mov
push
mov
scas
aad
das
fimull
fnstcw
pop
hlt
pushf
sub
movsl
in
adc
pop
cld
or
dec
shrl
pusha
addr16
dec
lods
movsb
mov
inc
das
mov
pusha
jne
shrb
inc
addr16
data16
into
push
or
and
je
sbb
jne
xorb
jge
cwtl
movsl
push
sub
mov
pop
stos
les
adc
push
les
pop
pushf
sbbl
mov
call
jns
xor
mulb
mov
sbb
jo
mov
mov
in
jl
xor
pop
std
and
in
mov
jb
rolb
int
pop
mov
mov
xor
mov
jb
xchg
scas
mov
punpckldq
shl
xor
push
testl
fists
mov
jno
ljmp
dec
lahf
inc
mov
scas
mov
pushf
popa
cltd
jmp
dec
jno
and
jo
popf
data16
xchg
outsl
push
jg
and
xchg
fs
and
mov
mov
or
or
ljmp
cltd
aaa
aas
inc
cli
cs
and
shll
jecxz
mov
loope
dec
notb
mov
sub
xor
cmp
flds
cs
les
and
lock
hlt
xchg
push
push
mov
movsb
cmp
popa
lahf
sub
push
and
or
testl
cwtl
hlt
mov
mov
or
std
pop
iret
xchg
push
aaa
sbb
movsb
mov
dec
rcrb
xchg
out
lahf
clc
xor
mov
pop
xor
jno
nop
les
sarb
pop
jmp
jbe
adc
inc
jbe
ja
cs
aaa
aas
rcl
movsb
jmp
push
loope
insl
push
mov
mov
iret
sub
in
mull
ret
repnz
int3
stos
outsb
mov
pop
filds
pusha
jnp
jb
cwtl
loop
dec
mov
push
jne
adc
or
roll
fldl
mov
push
xor
xchg
lea
xorl
jbe
sti
arpl
mov
sbb
pop
gs
js
adc
mov
mov
cmp
in
scas
jmp
pop
imul
mov
test
push
or
pop
mov
insl
adc
xlat
sub
out
inc
xor
lds
je
sti
pop
hlt
jmp
sti
fsts
hlt
in
or
ljmp
jb
push
mov
hlt
jmp
xchg
and
bswap
imul
sub
mov
push
out
lods
xchg
mov
pop
mov
sbb
cmpsl
and
leave
ret
ljmp
loopne
mov
xchg
cmp
jg
in
push
add
arpl
add
addb
or
mov
jbe
jb
sbb
das
jl
push
pusha
popf
mov
cli
add
push
cmp
sbb
add
mov
pop
insl
sti
adc
mov
push
inc
and
fcoms
nop
fucomip
adcb
nop
mov
jmp
fistl
xchg
bnd
and
loop
imul
and
or
out
leave
fistpl
push
out
jp
xor
nop
std
add
sbbl
cmp
mov
jmp
ficoml
int3
ret
xchg
cmc
test
es
std
test
jmp
or
hlt
lcall
cs
jg
popf
ficomps
popf
sub
adc
push
push
icebp
inc
push
jb
bound
push
cmp
mov
pop
cltd
add
xchg
mov
inc
pushf
xchg
or
dec
push
sub
imul
mov
je
sbb
sti
loop
addr16
mov
cli
divl
jg
test
mov
lods
rclb
test
push
pushf
dec
mov
cmp
jb
xor
xor
xchg
test
push
push
in
xchg
data16
jg
mov
xchg
mov
lahf
pushf
mov
jl
ja
sahf
ss
jnp
iret
jb
iret
dec
push
xchg
xor
xor
test
stos
cmc
das
in
dec
clc
sbb
lret
nop
push
and
dec
hlt
aam
fisubs
aaa
fnsave
fiadds
dec
jecxz
mov
stos
adc
or
lret
movsl
xchg
push
lods
push
jecxz
es
cmpsl
enter
xor
sbbl
mov
cmp
jge
idivl
in
dec
dec
adcl
cmp
sub
push
aam
pop
sbb
arpl
jp
outsb
call
pop
ret
rcrl
insl
lods
xchg
pop
pop
and
inc
test
push
mov
mov
push
fbld
pop
js
mov
and
cmp
nop
push
addr16
xchg
ds
gs
jns
cmp
mov
mov
roll
jne
and
pop
jns
rolb
out
mov
int3
xor
cs
dec
ret
cwtl
bound
add
mov
mov
mov
cmp
scas
hlt
insl
push
data16
mov
push
rorl
ja
add
or
aaa
cwtl
cmc
in
fstp
in
fstl
lods
push
sbb
int3
mov
outsb
xchg
ror
std
dec
xchg
je
mov
lret
sbb
lret
fwait
movsl
adc
gs
lods
jno
popf
mov
jge
xchg
sbb
cltd
int3
insl
int3
lret
orl
das
push
adc
sbb
dec
cmpsb
hlt
enter
inc
dec
daa
ljmp
pushf
add
loop
add
dec
xchg
sbb
add
out
jl
or
lea
pop
push
xor
out
andl
test
fisttpll
jp
jg
or
pop
xor
inc
mov
iret
cmp
sbb
out
les
out
ljmp
xchg
add
mov
inc
sti
clc
std
fldl
fildll
sbb
lret
shl
sub
cltd
loop
roll
sub
mov
mov
call
je
rcl
nop
pop
test
pop
cwtl
ret
fidivrs
int
or
sti
ficoml
and
mov
cwtl
inc
icebp
test
add
mov
push
dec
push
stos
cmp
hlt
test
out
inc
add
push
adc
jge
insb
out
imul
mov
xor
or
jle
cmpsl
mov
mov
subl
lock
aad
data16
inc
sbb
data16
enter
push
pop
lcall
adc
dec
fwait
lahf
jmp
lods
xor
mov
inc
cwtl
lret
add
adc
push
test
add
enter
and
xor
out
add
sahf
add
in
scas
or
and
xlat
jno
or
mov
inc
out
xchg
adc
int
cltd
jae
sub
xor
test
sub
jne
test
and
aam
mov
xor
fcompl
scas
jne
das
jae
adc
mov
mov
sub
into
int
dec
aas
inc
cli
xchg
frstor
loopne
arpl
and
call
xchg
sbbb
gs
cwtl
aad
js
lods
notl
mov
stos
lret
and
push
movd
adc
mov
incb
mov
xor
push
inc
ret
stos
addr16
inc
pushl
inc
or
sbb
stos
pop
jecxz
dec
clc
inc
pop
xor
rorl
popf
ss
sub
insl
mov
repnz
shrl
movsl
prefetch
or
lods
mov
dec
lock
push
out
mull
mov
iret
adc
push
loop
movsb
ret
je
and
call
addr16
dec
lds
cltd
jo
or
fiaddl
bound
repz
out
lock
out
mov
jb
cmp
xor
addr16
xchg
inc
rcrl
push
stc
out
pop
sbb
repnz
dec
xor
mov
mov
outsl
mov
jb
mov
scas
xchg
push
add
dec
stc
repnz
imul
stos
jecxz
mov
xlat
scas
mov
xchg
mov
cwtl
int
lcall
sub
add
ja
stos
ficoms
popa
push
add
insl
test
mov
out
mov
inc
jp
mov
inc
xor
cltd
mov
fcmovnb
mov
pushf
push
lock
lcall
popf
xchg
ss
dec
test
sbb
cmp
icebp
push
movsl
sbb
add
xor
mov
das
or
mov
aam
enter
mov
std
aaa
cli
stos
into
dec
mov
nop
pop
jnp
call
cmp
or
add
ljmp
jmp
imul
inc
popf
push
sub
nop
aas
sub
rol
cli
jbe
out
mov
shll
lods
mov
push
stos
int
jno
mov
lea
addl
xor
sahf
jmp
push
push
dec
lock
xlat
rolb
out
xchg
push
mov
xlat
js
gs
cmc
outsb
push
adc
cmpsb
cmpl
fstl
cmp
cmp
cli
push
sub
mov
dec
push
inc
rolb
pop
pop
subl
out
sub
or
push
jae
ljmp
xchg
inc
xor
sbb
mov
xor
sarl
out
js
pop
out
jmp
in
mov
std
pop
in
sbb
and
mov
int3
mov
add
and
cltd
sbbb
dec
leave
mov
out
popa
movsb
jle
repnz
ret
data16
lods
sub
sbb
fnstsw
enter
shll
mov
mov
insb
imul
sahf
mov
push
mov
xchg
les
outsb
leave
insb
jecxz
cli
stc
aaa
mov
xor
div
cmc
fstpt
xchg
pop
fs
movsl
mov
cmp
fsubrl
sbb
sbb
out
stos
lods
pusha
popa
cmc
xchg
popa
pop
xorb
adc
jg
xlat
sbb
sbb
pop
or
push
and
mov
loopne,pt
data16
mov
push
inc
mov
les
das
jle
ljmp
add
jg
sahf
mov
lcall
sub
lock
fwait
sbb
lahf
rcll
lret
mov
ja
cmc
push
mov
add
fwait
outsb
fucom
orb
hlt
sbb
mov
scas
ror
fnstcw
push
add
jecxz
daa
inc
nopl
enter
jne
jnp
andl
clc
dec
push
fs
and
pop
shlb
cs
loope
pop
dec
adc
lahf
add
fcomps
int
shlb
popf
es
lahf
sub
shll
xchg
xor
scas
inc
sub
test
pop
cmp
imul
adc
addl
xor
push
cmp
xchg
push
mov
and
in
aam
ja
pop
sti
or
in
pop
bnd
lods
adc
aad
fwait
push
test
sbbl
lds
cmp
pushf
nop
and
inc
dec
loope
int
int3
mov
xlat
sbb
stos
test
or
loopne
icebp
push
movsb
lods
das
test
or
aas
imul
lret
xchg
push
cli
mov
cwtl
mov
xor
inc
daa
roll
xchg
scas
xchg
xor
lahf
popf
ret
shr
jbe
cld
cmpsb
jp
xchg
xchg
inc
sbb
movsb
mov
push
jecxz
adc
es
mov
jne
sbb
jg
jecxz
test
cltd
dec
js
push
mov
jmp
pop
mov
add
pop
jno
jmp
xor
lods
fsubl
aam
mov
ret
inc
stos
fisubrl
loope
mov
in
jle
xor
mov
sub
lret
incl
addr16
cld
mov
xchg
fcoms
and
pushf
lcall
and
sub
inc
inc
loope
std
lahf
lods
sahf
fistl
and
lea
shll
jb
xchg
lahf
add
jae
pop
fprem1
rclb
dec
out
lahf
cmc
sbb
or
xchg
pop
cmpb
ds
xchg
push
inc
push
pop
out
lock
lock
lds
bound
repnz
pop
pop
aad
xor
fsubrs
div
jmp
into
pop
std
lea
sbbb
lods
adc
mov
cli
sbbb
push
sbb
faddp
jno
ficoml
call
inc
sbb
jl
jno
or
lds
inc
sub
mov
scas
mov
mov
sub
in
xchg
and
or
sub
push
or
inc
push
xor
ljmp
jp
mov
inc
adc
stos
dec
cs
dec
sbbb
popa
or
insl
xchg
mov
dec
and
ds
movsl
push
and
orl
sbb
mov
icebp
pop
and
sti
xor
or
insl
sbb
pop
inc
pop
js
add
jnp
mov
iret
lret
rorl
adc
cmp
jl
mov
inc
mov
mov
cwtl
mov
pop
ljmp
loopne
dec
mov
in
or
aam
jns
cmovp
ds
jp
fcompl
jp
shll
ds
imul
add
shlb
fcmovb
ljmp
or
inc
es
sbb
sbb
mov
mov
out
aad
rcll
pop
call
xor
jns
sub
inc
lds
icebp
mov
pusha
fidivs
sub
mov
jl
ss
in
ds
popa
cmp
sbb
daa
das
jmp
fwait
sub
iret
xchg
push
sahf
and
sub
ja
pop
sub
jmp
outsl
dec
lcall
mov
lret
mov
out
int
mov
negb
mov
jle
cmp
mov
cmp
mov
insb
xor
dec
addr16
inc
pop
test
ja
sub
js
mov
outsb
mov
adc
jp
insl
pop
pop
stc
pmaxub
andl
aam
pusha
dec
and
mov
xchg
xchg
mov
sub
popf
fidivs
xlat
lea
jg
cmp
arpl
in
movsl
ds
or
pop
dec
lods
xchg
xchg
adc
xor
add
pop
ja
pop
cmpsl
or
sti
jno
dec
push
das
cli
push
push
popl
mov
push
cmpsb
cld
add
std
popf
lcall
je
push
mov
fidivrl
jge
addb
dec
mov
mov
xchg
and
mov
adcl
xorb
mov
xor
mov
movsl
cmp
push
push
mov
in
jecxz
mov
jne
dec
sbb
dec
test
push
js
sub
add
push
and
xor
xchg
ja
mov
lods
pop
inc
jae
loop
xor
push
enter
in
sarb
sbb
jne
sub
mov
xor
xor
dec
es
shl
call
cmp
ljmp
pop
repnz
or
lds
jl
inc
dec
push
decb
cld
and
add
cmp
cmp
push
adc
lods
dec
or
ss
test
mov
mov
pusha
mov
negb
std
mov
mov
xchg
sub
jne
jae
push
shrb
ja
cmp
xchg
xchg
dec
dec
adc
loopne
pop
repz
jle
xor
push
cmp
ss
xor
in
adc
jnp
ljmp
inc
cli
sub
jmp
repz
addl
test
pop
xchg
add
push
aam
dec
int3
and
loope
and
and
sub
xor
idivb
cmp
popa
xor
stos
pop
ss
and
pop
ret
inc
lahf
and
adc
cmp
sub
stos
xchg
mov
sahf
je
daa
sub
mov
shrb
out
scas
sub
push
xchg
mov
sbb
dec
push
dec
jno
mov
push
add
and
xor
enter
imul
rcrb
lret
pushf
cmp
std
xor
fdivs
call
mov
dec
jne
fstpl
push
push
popa
sahf
add
pop
xor
pop
or
push
and
sub
test
push
out
dec
fldenv
inc
sub
add
jo
addr16
jge
pop
aad
lcall
loopne
and
aaa
pop
or
jae
rolb
xchg
int3
mov
sahf
stos
inc
fwait
sub
jl
test
dec
jl
out
inc
popf
jbe
popf
in
cs
in
mov
nop
adc
clc
mov
and
dec
cmp
and
out
pop
clc
stc
into
inc
ret
leave
cmp
out
add
lcall
int
xchg
mov
cli
aas
insl
or
stos
xor
repz
fdivs
into
cmp
xchg
and
flds
mov
mov
cmpsb
lret
jo
sub
insb
cmpb
nop
bound
cmp
sbb
cmp
imul
add
mov
jne
mov
xchg
inc
mov
mov
fs
sarb
xchg
jecxz
sarb
jbe
fstpl
mov
jl
jge
ret
fsubr
popf
push
mov
push
add
xor
xchg
push
aam
and
dec
xchg
in
scas
adc
push
movsl
xchg
or
mov
or
nop
jmp
lret
es
cmp
adc
popa
xor
inc
stos
pop
and
insb
and
mov
ja
xchg
hlt
mov
adc
cmovne
xchg
mov
xor
xchg
out
out
mov
mov
add
mov
out
xor
jbe
out
bound
push
cmp
xchg
inc
cli
insl
push
mov
dec
xchg
jg
xor
fidivrl
in
pop
xchg
arpl
mov
sbb
add
mov
sbb
mov
sbb
push
call
xor
pushl
imull
insb
mov
test
lahf
xchg
lea
inc
and
test
clc
inc
xor
sbb
scas
or
loopne
jns
mov
roll
lods
jle
push
bnd
fwait
add
sbb
mov
cmp
mov
add
mov
push
add
xor
push
idivl
adc
adc
xor
jns
push
arpl
subl
jmp
ret
push
or
out
jb
cmp
sahf
out
repnz
mov
pop
lret
xor
lahf
jbe
xor
push
dec
sarl
push
push
call
dec
pop
mov
out
xor
jae
aas
mov
test
jp
sbb
mov
cmp
imul
mov
fimull
fs
or
adc
dec
pop
dec
mov
pop
pop
add
jg
lcall
pushl
lds
add
add
cwtl
push
jl
imul
inc
dec
mov
mov
sub
sub
mov
bound
std
pop
mov
jmp
inc
mov
cmp
leave
daa
mov
or
movsb
das
pop
xchg
push
inc
sbb
int3
add
imul
pop
mov
leave
into
dec
sahf
dec
into
imul
adc
sub
sub
outsb
imul
push
inc
lods
movsb
std
dec
into
ja
add
fs
je
fistl
cmovle
addr16
iret
aas
jp
call
addr16
adc
mov
jne
cltd
pusha
fs
out
nop
ja
fdivr
roll
sub
mov
dec
cmp
or
xchg
xchg
sbb
pushf
pop
sub
cmp
out
pop
push
push
and
js
mov
stos
fldt
xor
sbb
xchg
lods
add
roll
or
cmp
rorl
cmpsb
cmc
outsl
mov
fdivl
mov
rcr
hlt
pop
jno
mov
dec
inc
cld
mov
mov
sbb
sbb
rol
mov
or
jb
lcall
and
jmp
cmc
aam
add
inc
or
mov
jmp
cmpsl
sub
xor
mov
fidivs
mov
nop
andl
aam
adc
pop
xorl
pushf
cmp
inc
or
aam
push
cwtl
pusha
add
and
loopne
enter
xlat
sub
jno
test
dec
and
shl
xor
xchg
mov
fistps
sti
or
xor
orb
pop
pop
dec
cmp
push
push
int
call
ficoml
add
xor
out
and
dec
dec
add
pop
pop
ljmp
jnp
mov
mov
outsl
divb
and
cli
mov
rorb
lcall
sbb
xor
or
loopne
add
inc
xor
pop
cs
cmp
pop
adc
mov
cmp
repnz
dec
pop
jns
icebp
mov
jg
mov
jne
insl
mov
xchg
mov
sub
mov
mov
add
fisubl
cmpsl
jp
mov
je
gs
cli
rclb
lods
pop
bound
hlt
xor
dec
mov
adc
pop
fistl
es
sarb
jne
push
fsts
jnp
mov
jmp
pop
clc
add
pop
test
jmp
add
push
pop
ss
test
jno
call
jne
xor
sti
mov
aas
out
cmp
jns
loop
add
sbb
adc
mov
insb
clc
push
gs
sbb
inc
outsb
pop
fists
jmp
ret
jb
push
ret
adc
inc
xor
and
jl
xchg
outsl
incb
arpl
imul
fists
mov
adc
in
add
inc
inc
and
cmpsb
mov
lock
inc
pop
jmp
and
and
rorl
sub
fildl
pop
and
inc
mov
jmp
xchg
jns
rorl
xchg
push
mov
into
dec
adcb
jge
jns
fidivrl
push
mov
add
inc
pop
xchg
stc
arpl
scas
pop
mov
adc
pop
push
repz
repz
ja
les
inc
adc
cmc
mov
and
cld
std
out
int
xor
adc
shlb
add
mov
and
fnstsw
mov
cmp
aaa
xchg
pcmpgtb
xchg
insl
inc
idivl
or
cwtl
rol
mov
cmp
pop
mov
mov
push
xchg
stos
pop
pop
fwait
inc
ss
sbb
sub
jle
daa
negl
adc
ds
out
cmp
outsb
outsb
js
addl
leave
or
push
stos
mov
mov
dec
jle
dec
jmp
add
fldl
test
loope
movsb
mov
fwait
ret
push
test
das
sub
mov
inc
jmp
add
decl
aam
xchg
add
aas
out
ficoms
stos
mov
pop
arpl
dec
or
les
call
inc
jl
subl
iret
test
xor
add
dec
jecxz
cltd
mov
hlt
int
test
outsb
push
lea
and
cmp
aaa
loope
cmp
jb
das
shl
pop
das
add
scas
sarb
out
and
pusha
dec
cmc
push
mov
dec
sub
cmpsl
sub
xlat
out
cmp
push
and
dec
xor
sbb
dec
mov
sahf
jg
xor
pop
popl
xchg
jecxz
dec
in
inc
mul
imul
sub
sub
cli
xchg
je
add
mov
lds
js
repz
in
adc
cmpsl
int3
mov
push
gs
int
nop
aas
loope
push
icebp
mov
mov
mov
adc
sub
pop
mov
cmp
mov
sahf
jp
add
add
stc
or
in
fbstp
push
xchg
ret
mov
sbb
xor
and
movsl
mov
sub
insb
mov
scas
sbb
and
icebp
outsb
jmp
clc
add
and
dec
jmp
fdivrl
jbe
push
addr16
inc
mov
aad
lahf
push
pop
arpl
inc
xchg
scas
outsl
mov
gs
jge
test
jge
paddw
dec
xorb
pop
pushf
int
ljmp
loopne
or
outsl
out
shl
inc
or
and
stos
dec
cwtl
fldcw
cmc
xchg
pop
pop
sub
pushf
sub
fnstsw
and
cltd
or
add
testl
sti
test
popf
sbb
sbb
xchg
sbb
push
gs
push
hlt
out
icebp
test
or
pop
aaa
fildll
inc
xor
mov
dec
cmp
dec
mov
mov
mov
out
pop
add
jmp
sbb
adc
pop
lods
idiv
in
mov
bound
cmp
inc
cmpsb
hlt
mov
sbb
sbb
add
pop
ficoml
gs
jns
cltd
daa
mov
dec
mov
pop
mov
popf
lahf
push
mov
inc
xchg
lret
js
jmp
mov
dec
mov
lahf
sub
enter
lret
lar
addr16
xchg
fiaddl
fisubrs
xchg
xor
jge
or
cmp
pmaxub
jne
andl
cmp
mov
div
addr16
nop
pop
mov
xor
ret
lcall
test
cld
ss
imul
mov
push
repz
bound
inc
adc
mov
cmp
fwait
add
stc
xor
or
pop
adc
negl
pop
push
adc
cs
cld
movb
add
fwait
sub
push
sbb
push
sub
fsubrs
call
bnd
addr16
pushf
mov
or
mov
sub
push
ret
push
outsl
popf
mov
stos
inc
dec
inc
cwtl
jbe
fxsave
ret
out
inc
test
mov
cmp
mov
in
imul
enter
sar
fistpl
loope
add
mov
mov
out
fwait
adc
xor
dec
aas
jo
add
jne
lcall
push
push
mov
lea
in
shlb
cmpsl
mov
ret
xchg
dec
bound
subb
scas
jb
in
cmpsl
add
in
gs
cmp
out
std
push
sti
aaa
sbb
fwait
cmp
shrl
push
cwtl
ds
stc
xchg
and
aad
ja
iret
mov
je
pop
gs
cltd
pop
mov
mov
sahf
es
adcb
hlt
andl
add
fsubrs
xor
adc
fisttpl
pop
cmpsl
jle
int3
addb
and
lock
mov
sub
test
cmp
xchg
pop
add
in
cld
fwait
sbb
lret
fdivrl
mov
cmp
cmp
mov
fimull
in
pop
xlat
test
mov
scas
cmp
add
ret
dec
jne
fcomps
das
jmp
add
and
lcall
repz
in
movsl
add
lods
add
pop
mov
addl
inc
js
fnstcw
sub
sti
or
leave
inc
scas
mov
or
inc
sub
xchg
sub
xchg
mov
jmp
pop
ror
imul
divb
ss
dec
jle
cmp
xor
loop
movsl
jo
cmp
sub
les
mov
add
mov
std
jo
inc
and
cld
lea
and
xchg
adc
dec
jb
scas
roll
int
inc
mov
ja
xchg
inc
jecxz
aas
loope
dec
cmpb
hlt
and
dec
inc
inc
mov
addr16
fnstcw
mov
iret
and
out
push
je
sbb
sub
arpl
pop
outsb
cmp
push
push
mov
stos
daa
dec
fadd
cmp
mov
test
repz
test
cmp
cmp
jge
call
mov
push
mov
push
int3
popf
lock
iret
aad
adc
xchg
sbb
mov
cld
les
or
je
or
mov
shrl
fwait
mov
inc
into
push
add
arpl
pop
popa
mov
mov
pop
cmpsb
pop
pop
and
jge
cmpl
pushf
pop
out
hlt
movl
iret
and
and
rcrl
adc
add
add
mov
inc
stc
pop
jmp
push
test
jmp
cmp
roll
inc
stc
sbb
xchg
pop
inc
out
add
jg
inc
pop
je
incl
pop
pop
dec
or
mov
lds
xor
fcomps
mov
pop
iret
rclb
push
add
rcll
push
lcall
loopne
ds
mov
jnp
sbb
mov
mov
lods
les
mov
in
or
pop
in
inc
test
cld
cmp
jg
sub
lock
outsb
scas
call
sti
pop
jp
gs
xor
add
cld
mov
cmpsl
out
inc
jne
cmp
loope
int3
sbb
xor
mov
lret
jns
adc
fdivl
mov
pop
or
movsl
jne
mov
das
add
inc
jge
call
movsb
test
pop
adc
pop
push
pop
jo
loopne
sbb
fwait
sbbl
mov
adc
in
xchg
int3
loop
mov
add
divb
inc
lret
clc
call
pop
out
stc
push
pushf
mov
dec
in
scas
lock
dec
into
arpl
out
cmp
popf
inc
sbb
add
mov
gs
xchg
mov
push
popf
mov
in
notl
dec
and
aad
xchg
scas
cmc
inc
lea
push
xchg
mov
aad
lahf
jne
mov
xor
nop
in
jns
das
sbb
loopne
leave
or
mov
clc
inc
xor
std
jmp
xor
lcall
in
or
ror
cltd
push
cmc
xchg
lcall
aas
popa
cmp
push
mov
test
push
jbe
cmp
lea
pop
jns
or
sarl
ffreep
out
call
adc
xor
js
and
daa
xor
push
cmc
cmpsl
mov
mov
mov
xor
fsubl
fwait
sub
pop
std
and
push
jmp
xor
push
fwait
shrl
xor
push
lret
es
std
leave
dec
mov
mov
ret
adcl
clc
or
rcr
mov
pop
cwtl
es
out
out
repz
sub
mov
pop
mov
sbb
inc
push
fists
repnz
and
sbbb
ds
jo
adc
ret
jbe
xchg
mov
int3
mov
hlt
cmc
push
daa
in
scas
xchg
popl
jle
push
popf
xor
pop
stos
fnstcw
and
faddp
xchg
push
pop
repnz
lret
xchg
mov
jle
push
cmpb
push
es
mov
int
push
or
push
js
push
push
int
sub
mov
in
cltd
sbb
push
ret
ret
mov
inc
push
xchg
xor
mov
cmpsl
push
shll
dec
add
cli
cmp
and
or
daa
inc
pop
add
pop
sub
add
lock
fdivrl
jp
sub
aam
or
mov
pop
fcmovnu
shlb
jnp
or
jge
fs
cmpsl
subb
xor
std
jmp
das
and
push
in
lret
xchg
bound
push
mov
loop
mov
das
insl
std
xor
pop
mov
jp
rol
sbb
cmc
adc
xchg
cmp
mov
and
pop
sbb
and
sub
ds
sub
xlat
mov
jl
scas
xchg
mov
jae
movsl
call
insb
sbb
imul
or
jecxz
out
decl
xchg
movsl
jl
out
fisttpll
jno
jne
fwait
xchg
test
int3
aam
dec
jae
mov
movsl
inc
adc
std
mov
inc
in
mov
popf
cld
cwtl
mov
cmp
repnz
or
popa
sub
cmp
lock
dec
fwait
add
mov
or
rcrl
jg
lods
ret
addr16
outsl
and
mov
mov
push
in
std
push
mov
jne
inc
enter
pop
lea
push
shll
add
cmp
inc
outsb
xor
mov
dec
loop
pop
rorb
push
add
dec
cmp
fcomps
push
ror
inc
ret
pop
pop
mov
cld
push
hlt
scas
push
add
sub
mov
repnz
adc
mov
inc
inc
push
imul
cs
mov
adc
loope
or
in
dec
imul
push
sub
je
mov
sub
out
vpaddb
push
jge
negl
mov
push
add
repnz
mov
scas
or
dec
jae
outsl
and
adc
add
mov
dec
fisubs
test
jle
cmp
add
into
xchg
outsb
pop
mov
pop
js
push
bound
mov
inc
leave
in
insb
inc
or
lcall
cli
movl
jns
pop
sbb
in
inc
push
clc
sub
inc
adc
mov
adc
fucomip
sbb
mov
cmp
push
xor
clc
xchg
lea
das
sbb
lods
xchg
gs
aaa
push
std
rolb
push
push
outsb
aaa
sub
mov
mov
cli
das
push
call
ljmp
xor
cmp
mov
in
fsubr
pusha
or
mov
call
cwtl
xor
and
jb
push
cltd
xlat
out
push
push
orl
lcall
dec
bound
jle
mov
dec
out
mov
loop
xlat
lret
testb
in
mov
pop
or
add
mov
push
lods
out
jno
mov
mov
mov
sbb
ss
and
jae
addl
fnstenv
push
ljmp
out
dec
add
or
mov
mov
ss
in
dec
dec
and
les
mov
push
sbb
fcmovbe
and
or
adc
out
movsb
push
pushf
adc
push
pop
leave
ss
and
dec
hlt
pop
sti
jge
jae
jp
push
test
cmp
and
lret
dec
stos
pop
inc
loop
sub
push
bound
stos
in
and
and
popa
in
ja
repnz
movaps
sub
stos
fs
loop
adc
jecxz
jge
test
mov
xchg
es
fdivrl
mov
dec
xchg
cli
or
mov
lods
cmp
push
xor
adc
nop
stc
loop
imul
out
xchg
fistl
cltd
lcall
or
inc
sarl
nop
pop
cs
dec
adc
jecxz
fcom
dec
scas
fucomp
add
testl
imul
insl
cmp
cmp
pop
pushf
adc
data16
fcmovne
lret
mov
lock
mov
and
fs
dec
decb
mov
xchg
sbb
movsl
sub
mov
push
mov
fnstcw
or
rclb
mov
rdtsc
cmp
dec
adc
lock
jo
pop
andb
sarl
mov
xchg
je
test
push
mov
insl
fnstsw
in
xor
shrl
mov
and
add
pop
mov
mov
addr16
dec
sub
sti
sub
lret
stc
outsl
pop
mov
pop
inc
dec
sar
jl
and
adc
push
or
imul
xor
push
sarl
mov
icebp
ljmp
pop
lods
bnd
inc
fdivrs
adc
lods
jno
jl
push
add
negb
sahf
push
es
imul
addl
dec
movsl
repnz
aad
bound
sub
mov
cmpsl
cmp
js
inc
std
xor
mov
dec
push
shll
dec
jno
jmp
and
cmp
adc
and
or
pushf
popf
test
outsl
lea
cli
mov
shlb
mov
cmpsb
inc
or
mov
out
add
or
fwait
adc
mov
pop
lods
or
sti
call
fadds
jo
nop
jp
imul
dec
mull
mov
mov
xchg
lds
add
fisubrl
mov
sub
ss
push
push
andb
je
clc
jp
fnstsw
test
movsb
cld
mov
cld
bound
aaa
dec
cmpsb
ret
inc
jne
adc
hlt
sahf
xchg
mov
aam
out
mov
add
pop
adcb
lahf
mov
mov
pop
jne
icebp
push
jb
sbb
xor
cwtl
out
xor
push
adc
or
imul
fsub
daa
adc
icebp
sub
pop
dec
mov
add
test
test
mov
repz
inc
insb
adc
push
dec
add
rcrl
stos
sti
std
push
mov
xor
sub
ficomps
sbb
dec
loopne
pop
push
iret
push
inc
ret
stos
aad
mov
nop
rcrb
sub
add
mov
inc
cltd
movsl
mov
lret
fs
js
addr16
cmp
cs
out
push
pop
in
popl
adc
loope
negb
xchg
imull
fldenv
inc
fiadds
mov
gs
add
mov
cmpsb
cmp
ja
adc
test
test
sbb
xchg
push
inc
push
cwtl
out
xor
js
leave
adc
push
mov
scas
push
cmp
pop
sub
or
xchg
push
inc
mov
inc
out
xchg
pop
aas
scas
sarb
jge
adc
in
adc
cld
out
jns
pop
and
sti
loope
xor
loopne
es
sbbl
xor
sub
mov
out
push
and
testl
dec
dec
ret
vmovups
rcrb
jbe
fs
jns
xor
mov
aam
fcmovu
iret
push
in
das
sbb
mov
or
shll
mov
pop
pop
popf
or
xchg
pop
jl
aad
outsb
push
add
pop
cli
jbe
cmp
scas
outsl
test
cmp
mov
jne
dec
mov
push
xor
test
cmc
adc
imul
adc
arpl
lods
daa
stos
mov
push
filds
sub
add
les
mov
cmp
aam
inc
ret
aaa
mov
cld
xor
mov
inc
sbb
mov
aas
and
or
push
cli
xchg
xchg
lds
jbe
icebp
fisubrs
inc
push
mull
lret
or
sti
mov
loopne
fadds
push
js
loope
push
adc
xlat
mov
popf
out
lods
mov
ss
push
inc
leave
xchg
loop
and
lret
adc
test
negb
cltd
fmuls
int3
sbb
aas
pop
test
fidivrs
xlat
and
leave
cmpsb
xchg
cwtl
jle
mov
pop
and
cli
adc
sbb
mov
push
sub
outsb
in
xchg
andl
pop
orb
jnp
sub
mov
jbe
orb
mov
inc
sub
push
mov
pop
and
add
cmp
mov
mov
inc
ja
xchg
out
stc
popa
mov
pop
add
jbe
jp
sbb
lods
mov
testl
in
jmp
fs
sub
out
imul
fimull
add
xor
mov
mov
scas
mov
xor
push
push
add
fdivp
data16
mov
push
push
in
mov
inc
xor
das
insb
loop
push
clc
xor
lods
add
cmp
js
call
loope
adc
and
dec
ja
pop
mov
pop
or
cmp
int3
sub
mov
in
in
push
adc
stc
cmp
in
cmp
xor
shrb
cmpsb
mov
mov
mov
shll
mov
leave
je
shlb
add
das
xor
add
rclb
mov
sbb
mov
out
xchg
out
sbb
inc
jo
ds
mov
arpl
cmp
pop
push
jnp
testb
mov
hlt
aaa
cmc
ja
cmp
inc
cli
jl
movsl
xor
sti
cmpsl
lret
dec
pop
lahf
cmpsl
fwait
and
stc
and
cli
outsb
shlb
popa
and
or
lret
in
ret
mov
and
dec
inc
xchg
adcl
out
test
push
lret
out
sub
sub
int3
push
scas
sub
lret
test
push
movsb
in
inc
enter
jp
xchg
mov
mov
jns
inc
xchg
pop
test
imul
jg
fwait
stos
decb
add
imul
andl
dec
pop
stos
push
mov
js
dec
ret
push
xchg
negb
ss
mov
pushf
jmp
icebp
filds
test
lods
pop
adc
xor
add
mul
push
sbb
xchg
int
sbb
inc
add
cs
pop
dec
xchg
test
loope
sar
jo
sbb
fnstsw
dec
pop
jb
popl
lods
pop
inc
test
sarl
mov
xchg
push
sbb
mov
sarl
inc
in
xor
mov
xor
mov
testl
ss
outsb
pop
cmc
ret
and
lret
adc
pop
roll
add
or
inc
and
pop
pop
loope
sub
mov
jecxz
das
fs
test
mov
fwait
inc
fcom
enter
testl
mov
rorl
sub
mov
mov
sbb
mov
dec
idivl
xchg
jle
stos
and
and
sub
adc
jle
sti
outsl
insl
ja
inc
sbb
pop
je
push
mov
sub
insl
mov
testb
xchg
scas
pop
fst
xchg
ret
nop
les
es
and
adc
adc
out
push
push
mov
cmp
dec
add
inc
fldl
lahf
fucomi
inc
add
inc
cmp
jg
sub
sub
sub
pop
insl
add
repnz
xchg
sbb
loop
push
push
xor
push
dec
insb
dec
sbb
pop
jmp
leave
sbb
add
cmpsl
push
int
mov
xor
ret
or
fwait
dec
sub
cmpl
dec
push
cmpsb
push
test
xchg
stos
push
mov
cmp
pushf
test
mov
and
add
mov
out
jb
loope
push
cmp
es
mov
sub
dec
ret
sub
push
jae
sbb
orl
scas
jb
in
lret
test
xchg
jb
pop
repnz
lea
cwtl
scas
push
mov
lds
cmp
popa
sbb
mov
sub
pushf
cmpsb
out
xchg
aam
or
mov
out
mov
cmp
notl
push
int
cmp
xchg
dec
xor
aaa
lret
mov
pop
sbb
out
iret
pop
mov
or
xor
rcl
sbb
es
push
fucom
aas
jbe
mov
mov
push
pop
divb
lahf
or
cmp
test
mov
adc
mov
xlat
loop
dec
les
mov
mov
loopne
insl
out
jle
out
xchg
sbb
ss
int3
imul
shlb
ficoms
lret
aas
mov
adc
mov
or
cmp
xchg
jmp
imul
push
popa
insb
sub
jb
call
xor
lahf
mov
xor
pop
xchg
or
popf
pop
dec
shrl
out
mov
out
adc
fldt
and
xchg
shlb
mov
into
arpl
dec
add
mov
xchg
jbe
add
xlat
int3
pop
pop
test
test
xchg
test
stos
cs
test
jle
pushf
mov
xor
imul
and
mov
lahf
add
jb
addr16
or
out
lds
xor
test
pop
mov
push
decl
jl
stc
orl
jbe
int
lods
subl
xor
lcall
std
loope
fs
arpl
sub
and
add
insl
sub
iret
test
shlb
dec
outsb
push
add
vmwrite
jo
sub
xchg
jno
jb
outsl
adc
in
sub
fisttps
outsl
aaa
in
in
repz
jmp
xchg
push
lahf
je
jno
cli
test
pusha
aam
cwtl
mov
movsb
ror
inc
pop
and
movsl
cmp
pop
aad
stc
xchg
mov
inc
dec
adc
cwtl
sar
test
aad
bound
out
jmp
sub
fidivl
aas
cmp
test
out
jl
and
and
inc
mov
dec
fwait
jecxz
push
scas
jae
loope
xchg
add
push
pusha
mov
cmpsb
ds
arpl
or
inc
into
fs
cmc
movsl
hlt
push
into
in
jp
sbb
sub
scas
enter
and
adc
je
out
sbb
fwait
xchg
and
mov
out
sahf
add
xor
cmp
daa
cmpsb
out
test
lahf
div
inc
test
popa
adc
roll
mov
mov
adc
mov
push
into
repz
popa
xchg
leave
data16
rcrl
pop
popa
add
das
dec
fstpt
shlb
daa
pop
cld
mov
int
xor
pop
mov
divl
pop
mov
outsb
insb
js
cmpsl
xor
insb
add
push
xor
dec
shl
cmp
mov
testb
fs
pop
lods
repnz
add
jno
andl
mov
xor
outsb
cmpsl
dec
in
cltd
movsb
sbb
jns
mov
push
inc
mov
xor
stos
dec
leave
aaa
jecxz
xlat
pop
xor
and
jns
and
rorl
dec
pushf
jno
sub
or
mov
ret
cmp
xlat
mulb
or
decb
xor
sbb
xor
xchg
and
cmp
call
stos
in
jge
and
lahf
xor
hlt
fimull
in
xchg
mov
fs
enter
sbb
pop
sarl
jle
leave
jo
cmp
sbb
xchg
jmp
addl
inc
in
es
cmp
mov
mov
rol
and
mov
mov
aam
dec
sub
fiadds
dec
enter
and
xor
aaa
pop
adc
push
lret
rorb
mov
popa
subl
jle
jnp
das
xor
arpl
inc
and
dec
cmc
mov
pop
sbb
aam
pop
cwtl
push
mov
pop
rcrl
sti
popf
dec
push
ficoml
or
dec
xchg
ret
jbe
data16
push
rclb
inc
into
pusha
ret
jmp
jne
xor
inc
xchg
jae
fdivrl
sbb
cltd
cmc
xor
mov
lret
test
cmc
ds
adc
pop
adc
push
scas
fnstsw
push
movsl
inc
lock
mov
outsl
mov
ss
out
out
les
test
inc
pop
and
mov
jne
cmp
sub
dec
cltd
enter
push
mov
jns
aaa
sbb
in
pop
and
pop
pop
and
add
mov
pushf
les
mov
int
loop
and
lods
xchg
int
push
mov
inc
das
arpl
fiadds
xchg
pop
sub
pop
lahf
pop
add
fisttpl
mov
pop
jne
cmp
mov
inc
int3
jae
imul
add
sbb
inc
xchg
int3
mov
ljmp
inc
mov
lcall
mov
mov
leave
mov
inc
and
int3
dec
dec
jae
mov
jne
add
sub
inc
add
repz
jo
mul
xchg
testl
pop
sub
leave
adc
das
mov
push
out
ret
in
mov
test
mov
icebp
orb
and
mov
and
sbb
add
and
shll
sbb
insl
mov
fsts
insb
cs
push
nop
pop
add
fimuls
imul
iret
pusha
sub
aam
xchg
aas
mov
dec
or
xor
and
add
add
pop
dec
cmp
pop
out
adc
je
dec
adc
adc
test
push
ret
mov
push
lahf
inc
jge
push
cmp
inc
lahf
cltd
int
fsubrs
mov
add
dec
in
cs
push
or
or
cmp
std
mov
dec
and
lretw
fwait
pop
add
int
hlt
pop
mov
jo
inc
push
es
test
shrl
add
mov
xor
fistl
jbe
xchg
data16
cli
pop
push
adc
hlt
aad
int3
and
pop
mov
xchg
jp
push
fildl
adc
das
xchg
ret
ret
and
xlat
adc
repz
daa
das
rcll
jmp
lret
hlt
or
lock
inc
jns
ss
shll
mov
fimull
imul
notb
ret
jne
push
sub
lods
lahf
call
jno
aam
filds
cmp
push
jmp
xchg
xor
cmp
loop
and
pushf
xor
addr16
test
jmp
xor
push
pop
xor
js
dec
lods
movsl
faddl
jne
ss
xchg
pushf
push
cltd
in
cmc
and
sub
jecxz
les
mov
in
pushf
add
cmc
inc
aas
icebp
stc
xor
add
xor
pop
jmp
fnstsw
imul
cld
cmc
dec
push
cmp
pop
xchg
dec
mov
or
add
and
enter
xor
push
xor
xor
push
into
sub
push
arpl
cmpsb
sbbl
scas
cmp
jmp
std
loope
cld
pop
les
xor
cmp
adc
mov
aam
jl
push
ljmp
jb
addr16
out
jns
mov
aam
rcrb
and
les
stc
iret
jmp
push
push
movsb
mov
mov
add
clc
ret
dec
xor
inc
add
bound
inc
addl
push
ror
add
and
fs
jae
or
lods
xchg
push
movl
jns
bound
xchg
shll
popa
sub
ss
shrb
cmp
push
repnz
cmp
out
andl
insb
das
bnd
xchg
gs
or
cmpsb
pop
mov
and
xchg
inc
cmpl
or
sub
fwait
clc
jp
inc
sub
xchg
push
pop
mov
and
cvtps2pi
mov
add
pusha
ret
pop
add
pop
int
mov
mov
pusha
stos
xor
and
xchg
xchg
lods
inc
testl
int3
pushf
repz
push
bnd
mov
in
mov
jle
rcll
arpl
cmpsb
pushf
ret
cmc
imul
or
mov
in
sbb
mov
add
cs
mov
or
xchg
insb
repz
subb
je
push
and
idivb
idiv
mov
cmpsl
iret
rclb
sub
mov
lahf
cli
rol
movsb
les
cmp
fwait
mov
or
bound
mov
xor
dec
loope
inc
xchg
hlt
ret
xchg
mov
mov
lds
mov
push
jle
mov
mov
xchg
push
jp
adc
in
jg
mov
mov
js
orl
push
cmp
mov
cmc
mov
mov
ret
cmp
jae
cltd
nop
ss
lods
call
into
dec
adc
mov
rcrb
pop
ja
cli
pop
imul
test
daa
ja
push
sbb
inc
lcall
pop
das
test
repz
mov
sahf
cmp
xchg
cmpsb
xchg
jl
stc
mov
insb
jecxz
mov
fsub
sbb
int
push
and
jb
nop
mov
dec
inc
jg
fistps
or
xor
lods
cs
add
jle
test
das
imul
sub
lods
mov
sub
lock
sti
iret
mov
inc
adc
lods
jno
scas
rolb
mov
pop
fdivl
fstps
aam
push
sub
je
adc
pushf
and
push
loopne
mov
inc
add
xor
inc
aam
fsub
shlb
pop
repnz
fmul
bswap
loop
push
mov
outsl
mov
cmpsl
aaa
mov
pop
adc
push
scas
jbe
imul
test
jg
add
or
add
push
push
mov
pop
push
add
mov
mov
sub
aam
leave
lret
jecxz
addr16
movsl
shll
cltd
mov
jmp
loopne
mov
aas
cmp
add
out
push
xchg
gs
loopne
sarl
cltd
inc
lods
dec
sbb
ljmp
pushf
push
jb
dec
mov
mov
cmp
fwait
jge
out
cmp
dec
ret
or
ret
test
js
or
repnz
adc
fwait
jle
mov
shr
mov
add
mov
push
fs
push
ror
ljmp
pop
or
push
push
pusha
popa
sub
mov
ret
push
mov
push
scas
add
clc
dec
mov
sub
jge
jae
icebp
rcrb
and
loope
cwtl
pop
in
or
outsl
cmp
jl
and
push
fwait
pushl
add
inc
iret
std
inc
aam
out
fmuls
sub
loope
mov
dec
sbb
and
mov
daa
or
xlat
shll
sbb
test
xchg
inc
inc
movsl
out
mov
push
jecxz
or
fldt
pop
dec
dec
push
mov
inc
add
and
mov
cmc
aas
push
or
insl
xchg
cmp
bound
sbb
out
mov
int3
pop
or
add
rcrl
dec
sub
cmpl
sub
inc
or
sbb
sub
movsl
dec
mov
xchg
es
mov
rorb
mov
jmp
lods
xor
sub
and
mov
das
sbbb
and
andb
mov
push
cmp
jecxz
fldt
outsl
rclb
push
inc
outsl
add
mov
mov
xor
sbb
loop
lea
test
fcmove
das
push
mov
sbb
ss
paddd
adc
fdivl
es
mov
popa
test
cwtl
push
shlb
lcall
push
nop
outsb
jbe
aaa
jecxz
dec
ja
pop
sahf
push
je
pop
mov
and
popf
addb
add
aad
jecxz
xchg
out
push
sub
nop
addl
cmpsl
cmp
leave
cmpb
ljmp
sub
add
test
insb
mov
sbb
test
popf
push
es
sbb
sub
mov
inc
mov
jle
cmp
cmp
daa
push
push
inc
adc
repz
pushf
loop
fwait
or
xchg
in
add
aas
cmpsl
sbb
mov
cmp
std
scas
ss
or
mov
sbb
sahf
xor
clc
sti
adc
loop
mov
lods
sbb
shl
push
ja
shrb
inc
dec
rcl
fsincos
mov
lsl
shrb
ja
call
add
or
mov
repnz
out
mov
mov
scas
inc
xchg
lock
out
das
fistpll
inc
das
xlat
mov
push
negl
enter
iret
std
jecxz
dec
test
in
out
xchg
ss
iret
xchg
push
call
outsb
cmpsb
imul
or
mov
pop
mov
bound
out
mov
sub
dec
test
out
adc
cwtl
addr16
mov
ja
clc
mov
cmp
sub
xlat
xchg
sbb
push
shrl
mov
loope
and
pop
sbb
lret
push
sub
lcall
adc
fistpll
out
and
rorl
pop
ljmp
loop
ficompl
and
popa
mov
stos
data16
daa
or
xchg
pop
notb
addr16
push
pop
divb
xlat
fstp
and
xlat
push
mov
outsl
int3
sbbb
int3
lock
popf
fmulp
and
lcall
adc
jns
ds
notb
mov
jp
xor
adc
test
pop
ret
and
push
mov
jmp
mov
test
cmpsl
fstpt
xor
sub
cld
jns
mov
mov
jmp
enter
popf
sbb
mov
ss
jno
jo
leave
sbb
fs
jl
popa
ds
dec
cmpsb
cmp
cltd
mov
sti
push
ds
in
in
inc
jg
inc
push
lea
idivb
adc
add
std
fs
lock
in
mov
add
pop
mov
dec
aaa
jno
pop
lret
mov
inc
rorl
jge
push
cltd
pop
sbb
jb
sub
mov
sbb
cmc
leave
mov
push
cmp
ss
push
andl
pop
add
or
xchg
xor
cmp
les
adc
mov
xchg
js
mov
mov
and
fmuls
mov
test
mov
out
cwtl
xor
jb
pop
jno
mov
dec
mov
inc
mov
add
dec
les
adc
cld
testl
push
inc
inc
or
sahf
pusha
adc
hlt
gs
mov
push
fidivl
cmp
stc
inc
aaa
and
pop
dec
mov
mov
lock
out
push
xor
cmp
lds
mov
pop
xlat
bound
insb
mov
lahf
add
jne
inc
xor
icebp
add
not
testl
repz
push
loope
insb
mov
xchg
or
je
mov
pop
das
push
outsl
popa
pushf
aas
loop
sbb
es
mov
lds
mov
cltd
xor
mov
and
cltd
pop
lahf
pop
jp
movsb
and
ja
dec
fsubrl
movsl
stos
dec
lcall
scas
out
mov
pop
pushl
jecxz
push
sbb
sbb
inc
mov
push
repnz
cmp
scas
adc
push
sbb
pop
cmp
stos
movl
lcall
cmp
enter
adc
stos
mov
scas
sub
enter
inc
loope
cmpsl
mov
ljmp
cs
dec
xlat
outsb
lods
jns
inc
adc
test
ja
std
mov
ja
lock
loopne,pn
or
ss
shr
adc
scas
push
sbb
repz
in
dec
cmp
sub
popf
shrl
sbb
xchg
das
push
fwait
xor
pushf
shrb
jp
call
fs
nop
pop
xchg
stos
mov
pop
mov
mov
inc
out
pop
cmc
sub
iret
aam
test
fs
mov
push
hlt
cmc
mov
jbe
push
cli
xor
cmovs
addl
cli
mov
and
mov
in
das
jnp
sub
fistpl
xchg
mov
push
addr16
test
jmp
data16
fwait
mov
hlt
fs
leave
mov
out
stos
ret
movsb
outsb
push
dec
into
ret
outsl
mov
pushf
jno
adc
mov
and
cmp
arpl
int
jecxz
pop
add
push
add
mov
pop
fisubrs
mov
cmp
mov
mov
jns
mov
jo
pop
lds
repnz
mov
add
push
aas
push
sti
xchg
add
int3
movsb
mov
lcall
jae
pop
dec
or
orl
or
rep
outsl
mov
nop
xor
sub
mov
repnz
adc
shll
lds
decb
aaa
shll
add
jg
add
jns
in
inc
mov
popa
jb
shlb
push
ret
imul
xor
push
aas
mov
shl
movsb
roll
or
ret
icebp
xor
rorb
and
push
adc
leave
push
mov
pop
push
jno
push
adc
push
cmpsl
nop
or
or
pop
inc
or
jge
add
movsl
arpl
mov
clc
sub
hlt
mov
and
mov
lds
xchg
add
xor
push
mov
sbb
mov
dec
xchg
push
popl
and
mov
jno
mov
push
adc
dec
loopne
test
mov
or
mov
mov
jecxz
sub
jecxz
xchg
jnp
mov
pop
xor
add
mov
xchg
and
mov
jne
sbb
and
sbb
lret
add
sti
sbb
int3
push
push
xchg
cld
out
pop
lahf
jg
add
outsb
int
and
mov
push
mov
dec
rcr
push
xchg
jb
stc
cmp
push
push
and
div
sub
push
stos
or
outsb
icebp
insl
aam
pusha
out
push
outsb
addr16
movsb
loop
ljmp
mov
cmp
out
lahf
adc
mov
les
xchg
inc
movsl
jp
pop
xlat
xlat
lcall
sub
add
push
xchg
and
fdivrl
mov
lcall
mov
jbe
data16
inc
jbe
fwait
out
rcrb
mov
mov
mov
pop
scas
sbb
leave
test
ret
out
addb
mov
push
xchg
sti
cmpsb
xor
mov
jns,pt
aas
xchg
mov
sbb
adc
imul
cmpsl
sbbl
mov
push
xor
cmc
mov
pop
fwait
jno
cmc
mov
jp
push
insl
add
xor
out
add
sub
les
les
test
mov
fisubrl
cmpsb
jle
or
dec
mov
mov
std
mov
xchg
fwait
pop
pop
out
repnz
pop
inc
popf
out
aam
lods
repnz
pop
push
push
mov
ds
cmp
pusha
daa
jmp
pop
cmp
stos
pusha
cmp
orb
mov
sbb
push
jmp
sti
shlb
push
mov
andl
adc
lods
cmp
pusha
dec
sub
clc
mov
repnz
mov
jle
sti
push
pop
mov
ljmp
jmp
jg
mov
addr16
pop
cs
add
xor
cli
push
mov
in
lcall
xchg
jmp
add
outsb
iret
adc
sbb
mov
sbb
mov
push
adc
mov
leave
inc
xor
or
mov
fs
adc
cs
lahf
xor
cld
and
pop
or
movhps
mov
fstps
mov
fadd
or
imull
mov
add
add
rcrl
out
pop
rclb
out
add
xor
lret
add
fsub
and
pop
inc
andl
sub
or
jne
cli
and
mov
loopne
push
jne
or
xor
mov
xor
mov
andb
lods
adc
rorb
stc
mov
nop
int
or
rol
xchg
mov
call
lock
dec
xchg
les
inc
mov
nopl
push
xchg
adc
xchg
test
std
and
in
add
push
or
negl
in
cmp
cmp
mov
dec
dec
and
sbb
adc
inc
divb
int3
dec
mov
jmp
mov
cmpsl
push
dec
mov
subl
outsl
adc
sub
repnz
stos
pop
in
test
and
fsubs
gs
pusha
cmp
mov
aam
int3
push
inc
cmc
jae
jbe
inc
jb
in
jns
stos
jle
fs
jno
lds
mov
jbe
lock
scas
int
push
dec
mov
xor
jns
outsb
adcl
adc
in
out
push
lock
sub
gs
inc
cmp
and
jnp
mov
xchg
jmp
enter
pop
pop
outsl
add
pop
call
push
inc
cmp
aas
xor
loopne
fwait
add
cmp
push
cmp
push
test
lock
mov
cmp
rcrl
scas
and
pop
cmp
imul
sbb
push
sub
gs
fmull
mov
das
clc
pop
insb
stc
and
test
roll
inc
icebp
jp
mov
repz
inc
mov
sbb
mov
xor
pop
loopne
repz
pop
daa
repnz
stos
pop
mov
pop
mov
clc
mov
push
jmp
les
push
pop
stos
movl
arpl
inc
xchg
sbb
fsubrs
cmp
pop
push
popf
or
sarl
ffree
mov
jne
add
cmpsb
jo
scas
mov
out
clc
push
stos
fisubl
test
mov
std
and
ret
jb
ljmp
int
loope
aad
mov
mov
push
mov
aas
loope
push
and
imul
mov
push
sbb
movsb
addr16
cmp
mov
cwtd
mov
sbb
sbb
jo
jge
ret
pusha
aad
mov
or
push
cltd
jle
jmp
test
pop
imul
aad
cmp
cmp
aas
dec
xchg
repz
xchg
shrl
std
sbb
mov
mov
syscall
stos
mov
jns
bound
je
pop
test
xchg
push
cmp
xor
cmp
rolb
leave
cmp
aas
in
pop
add
sub
dec
cmp
or
rorl
xor
loopne
mov
sbb
sub
or
mov
iret
bound
inc
rclb
loopne
in
adc
test
loope
stos
rcll
js
sbb
adc
jmp
or
jo
push
mov
lret
dec
test
jae
mov
lret
push
jecxz
lods
ja
out
call
stos
inc
pop
les
or
pusha
mov
inc
add
lcall
std
test
sbb
insb
cmpsl
mov
icebp
pop
jns
xchg
mov
sub
negb
add
adc
push
scas
sub
cmp
mov
cs
inc
xor
out
pop
clc
orb
bound
push
push
std
push
mov
sbb
mov
jmp
pushf
xchg
mulb
in
push
loope
ret
mov
jle
push
mov
xchg
addr16
sti
mov
jmp
sahf
daa
ret
pop
dec
icebp
lret
les
lods
or
lret
sub
push
fcoml
test
jmp
xor
enter
jp
mov
fidivrs
clc
or
scas
lret
cld
pop
lods
sub
mov
xchg
pop
daa
pop
std
std
dec
dec
scas
xchg
lods
cmp
or
fisubrs
out
mov
sahf
je
pop
stos
jnp
add
sbb
push
jnp
fs
add
icebp
insl
jl
push
daa
fsubrp
icebp
lds
dec
add
xor
icebp
sub
and
std
mov
enter
push
fisttps
push
inc
mov
pop
ficoml
pusha
pop
mov
mov
ljmp
jg
fldt
inc
mul
loope
mov
mov
mov
xor
mov
or
icebp
icebp
inc
jl
loopne
or
jecxz
mov
mov
ret
sbbb
sub
shlb
mov
mov
pop
mov
test
cs
dec
dec
clc
xchg
pop
lret
mov
mov
add
mov
push
inc
jnp
out
js
xchg
add
cwtl
call
ret
push
dec
and
cli
leave
mov
movsb
or
js
add
mov
push
ds
xor
jne
jle
lret
lea
mov
stc
cld
sbb
push
imul
dec
roll
cli
rcrb
xlat
shlb
stos
and
cld
leave
cmp
out
pop
je
hlt
pop
xor
inc
cmp
lret
mov
bound
out
lcall
int
popf
push
pop
and
lods
adc
faddl
mov
inc
fcmovnu
addb
rcl
inc
sub
jnp
sbb
push
xchg
loop
les
dec
in
mov
test
adc
mov
ret
mov
rolb
imul
dec
jne
dec
mov
fwait
and
pop
loop
sbb
aam
pop
add
andb
mov
and
int
popa
scas
scas
adc
mov
cmp
das
loopne
jb
imul
add
jne
pusha
addr16
mov
shll
scas
jo
add
and
push
lret
push
ret
mov
sub
adc
xor
dec
clc
popa
flds
adc
lahf
mov
mov
movsb
adc
mov
push
lret
icebp
adc
ljmp
cltd
hlt
outsl
test
xor
xchg
je
mov
fnstcw
pop
js
jb
ljmp
xchg
xor
dec
sbb
dec
out
lock
and
cmp
xor
cmp
fsubrs
rclb
mov
dec
sti
cmp
gs
jmp
mov
jmp
das
xor
aas
inc
mov
mov
mov
cmpsb
test
mov
stos
jl
in
out
pop
in
aaa
rorl
in
cmp
push
test
call
cmp
icebp
cmp
aaa
dec
cltd
cmpsb
add
imul
xchg
into
push
mov
or
mov
jp
pop
arpl
mov
xchg
push
push
xchg
adc
int3
pop
or
cld
in
aas
sti
xchg
dec
and
testb
fldcw
arpl
sbb
dec
dec
dec
jle
lret
pop
test
out
mov
xor
out
ss
iret
and
mov
xorl
mov
pop
movsb
xor
mov
add
mov
fwait
daa
out
pop
or
out
leave
pop
out
cli
push
jb
or
test
mov
mov
cmc
rcrb
xor
lret
push
in
and
fwait
sbb
lock
jb
sar
in
je
rol
mov
dec
fsub
lcall
inc
jecxz
xchg
in
mov
mov
insb
xchg
jne
lcall
shl
push
jle
popf
or
xchg
insb
sub
das
cwtl
and
das
mov
hlt
inc
lret
sub
xchg
mov
mov
adc
fucomip
sbb
out
dec
adc
xchg
lahf
lret
push
sbb
stc
inc
rorb
out
push
loop
mulb
jno
xchg
cmp
and
pusha
jbe
js
or
mov
std
sarl
mov
fisttpll
lods
daa
and
sarb
mov
cmpb
mov
icebp
jnp
sbb
mov
aas
shl
mov
cwtl
and
stos
jmp
push
cmpsb
mov
xorb
repnz
push
pusha
dec
and
xchg
repnz
push
imul
aaa
push
rorb
xor
lcall
cmpsl
leave
jbe
jp
cli
and
in
insb
mov
dec
cmp
dec
mov
cwtl
fsubrl
lds
outsl
cmp
fs
xor
cmp
es
jl
insl
fidivrl
pushf
mov
inc
jbe
xor
inc
addr16
pop
inc
push
rol
pop
cs
arpl
and
addb
and
adc
ds
adc
pop
ret
or
sbb
sahf
pop
jecxz
pushw
or
lret
int
sub
push
inc
mov
jle
lods
xchg
cs
test
inc
arpl
and
mov
into
sbb
or
and
dec
in
lods
hlt
cld
and
inc
movsl
mov
ss
sub
shll
sahf
jb
sbb
mov
pushf
lods
pop
leave
sbb
repz
or
xor
out
je
mov
out
lods
dec
das
inc
sub
pop
pop
shrb
aas
cwtl
fs
hlt
or
pop
lods
or
fdivrl
shl
sub
pop
mov
jb
jl
pop
in
xchg
arpl
stos
cs
add
int3
addr16
jb
xor
push
and
neg
jecxz
jnp
pushf
fs
sarb
push
leave
in
movsl
aad
xchg
xchg
push
cltd
pop
fistpl
inc
xchg
bound
aad
ljmp
dec
or
shll
mov
dec
mov
xchg
adc
and
add
lret
into
cmp
enter
out
clc
das
adc
cmp
insl
aad
push
out
les
pop
xchg
repnz
mov
cmc
shrb
fnstsw
jecxz
pop
in
mov
adc
jns
inc
scas
adc
xor
ljmp
push
idiv
inc
inc
repnz
loop
mov
ja
rol
inc
shlb
sub
xor
bound
or
cmp
sbb
repz
stos
jl
inc
ficoml
aam
test
pop
xor
cld
iret
mov
notb
stos
or
stc
lods
cmp
jnp
inc
lock
pop
pop
cld
or
movsl
xor
fwait
inc
inc
les
stos
aad
test
test
test
adc
mov
negb
call
andb
adc
lods
push
xchg
scas
push
lahf
sbb
leave
xor
and
sbb
shr
adc
cltd
ret
add
pop
jns
sbb
fwait
cmp
popa
enter
cmpl
lcall
sarb
push
sbb
imul
ds
jmp
jecxz
pop
mov
cli
dec
mov
cltd
lods
lea
les
xor
jle
or
popf
fidivl
sbb
lods
mov
cmp
leave
ret
jmp
btr
cmp
lret
lcall
jnp
inc
stos
sbb
pop
in
mov
and
jno
xor
push
in
jle
push
cld
daa
out
push
jno
mov
adc
xor
aad
adc
xchg
stc
jb
sbb
nop
outsb
xchg
inc
sub
sbb
jecxz
in
iret
or
test
popa
dec
push
scas
ret
sahf
pop
sub
and
pop
addr16
je
iret
loope
mov
testl
enter
mov
fdivrl
dec
jl
push
and
stos
lock
xchg
repz
inc
and
data16
es
adc
imul
and
rolb
xor
in
loopne
adc
clc
addr16
lret
pop
add
dec
cmp
jle
push
movsb
daa
js
es
or
or
mov
and
popa
sbb
cli
adcl
stos
shlb
enter
loop
adc
mov
test
outsb
inc
movsl
out
jae
loop
mov
outsl
mov
movsb
xor
shrb
pop
inc
ficompl
jl
cmp
mov
mov
jnp
mov
add
xchg
inc
arpl
adc
adc
add
lcall
inc
pushf
loopne
xlat
sub
into
push
dec
xchg
pop
fcmovnbe
lret
mov
jecxz
icebp
mov
adc
es
pushf
jecxz
jmp
mov
dec
adcb
and
aad
add
add
ret
adc
or
insl
jne
dec
stc
and
stos
in
cmc
stc
pop
scas
and
jle
insl
jbe
popf
cwtl
xchg
xor
inc
pusha
lahf
lods
mov
pop
daa
mov
push
dec
cld
stc
cmp
lcall
add
push
gs
stos
jecxz
mov
xor
insl
lea
or
fdivrl
sbb
mov
shll
cmp
mov
mov
inc
leave
call
lcall
faddl
lea
popa
ret
fsubs
sub
icebp
enter
or
sub
testl
push
pusha
test
sbb
int3
sub
mov
fists
inc
ds
mov
xchg
mov
in
adc
mov
pop
xchg
dec
mov
outsb
repz
add
push
ret
scas
sarb
and
adc
jge
xlat
sub
cmp
sub
mov
sbb
push
pop
push
or
outsb
psrad
mov
mov
push
aam
mov
aam
dec
insl
sarb
sahf
enter
dec
jne
nop
inc
lock
bound
sub
fsubrs
rolb
dec
lds
dec
and
lcall
pop
clc
mov
mov
mov
pop
push
test
inc
pusha
sub
mov
ja
pop
adc
sbb
stos
or
daa
push
sbb
loop
ja
dec
pop
das
dec
jle
adc
jge
int3
dec
pop
sahf
mov
nop
jb
mov
out
js
sub
repz
pop
clc
test
ja
filds
pop
xchg
mov
sbb
popf
mov
sub
repnz
or
insl
jne
sti
pushf
and
jne
push
addr16
notl
add
push
sub
jle
xchg
ss
xchg
icebp
nop
jmp
shl
inc
clc
movsb
pop
call
mov
or
test
cmp
imul
movsb
sbb
cli
xor
mov
sbbl
outsb
mov
jb
ret
cmp
addr16
ret
pop
popf
lods
sub
nop
jmp
xor
pop
and
push
and
push
and
insb
mov
test
insl
jb
lods
adc
rcrl
push
cmp
xchg
out
scas
sbb
xchg
stos
popa
xlat
inc
inc
xchg
and
pop
sbb
add
push
nop
push
sbb
outsl
jmp
jne
mov
shrb
sub
push
jbe
push
bound
mov
aaa
add
mov
mov
add
jg
sub
xchg
js
xlat
repz
sub
pop
inc
into
or
jno
pop
lods
ret
fiadds
fdivr
pop
fdivl
cltd
iret
hlt
or
sti
popf
or
gs
in
or
and
sahf
or
popf
arpl
xchg
adc
rorl
sub
je
test
out
xchg
sbb
mov
pop
push
dec
pop
jecxz
repz
mov
je
xchg
in
lret
mull
nop
adc
imul
loop
repnz
cmp
xor
jle
mov
xchg
daa
cmp
movsb
inc
loopne
dec
push
pop
leave
sbb
imul
cli
sbb
sub
fstpt
pop
ss
sahf
addr16
pop
addr16
add
arpl
and
jne
xor
orb
das
xchg
xchg
and
jne
pop
test
cs
ljmp
xchg
js
aaa
lea
lcall
dec
push
add
lahf
cmp
jo
sbb
mov
push
out
mov
xor
xor
sub
xchg
pop
stc
cwtl
movsl
sub
dec
mov
inc
popf
push
xor
hlt
rol
push
in
pop
pop
rorb
push
outsb
aaa
fwait
cmp
dec
sbb
mov
std
pop
cld
push
sub
cmp
dec
xchg
xor
into
jge
adc
mov
sahf
pop
test
push
into
in
push
jne
pushf
ja
add
cmp
push
loope
sbb
push
jmp
mov
inc
out
push
and
addr16
leave
scas
dec
pop
cmpsl
sbb
divb
inc
pop
mov
mov
in
mov
mov
pop
dec
and
lock
das
sub
mov
scas
push
and
xchg
fwait
popa
push
adc
sub
mov
sub
add
inc
mov
sbb
or
xor
xor
push
insl
loop
movsb
stos
shll
imul
cwtl
scas
inc
mov
in
lods
or
dec
inc
cmp
pop
fidivrs
inc
inc
in
push
mov
push
cmpsb
idivl
scas
das
je
sarb
out
and
iret
and
aad
mov
outsb
test
adc
dec
rcrl
in
mov
jne
ret
sarl
mov
dec
insl
jge
xor
jne
inc
jnp
lods
pop
sub
and
jae
stos
push
repnz
lock
xchg
mov
aad
scas
lods
addl
fwait
daa
mov
daa
shlb
out
add
push
dec
mov
sbb
js
inc
cmp
cmpsl
mov
adc
lret
mov
out
arpl
adcb
sbb
or
sti
or
mov
lret
mov
mov
mov
aaa
sbb
push
xor
jbe
pop
push
push
scas
xchg
or
jecxz
sahf
adc
dec
ret
addl
daa
lods
inc
push
sbb
inc
outsb
loope
mov
enter
push
sub
adc
cltd
movsb
dec
push
test
mov
mov
fmull
push
test
icebp
sbb
mov
clc
push
jmp
popl
in
jne
jmp
shlb
sub
xchg
jae
icebp
movsl
aas
lods
movb
jge
mov
enter
insl
loope
mov
loopne
pop
dec
lret
xchg
das
add
jg
push
xor
jb
sarl
insb
cmp
sub
dec
xchg
jbe
test
and
cmp
jmp
ds
xchg
pop
cltd
mov
mov
add
adc
loope
in
adc
pop
jle
movsl
sub
and
je
sub
jne
sub
cmp
fstpt
popf
jl
sarl
xor
xchg
xchg
sub
jbe
cmp
adcb
jbe
andl
dec
aad
cmpl
mov
insb
sti
push
or
cld
mov
pop
outsb
jle
mov
mov
push
jmp
aad
shr
rcrl
popa
push
jl
add
fsubrp
or
dec
push
push
shl
testl
iret
push
xchg
sub
nop
sub
imulb
jae
push
add
and
adc
inc
add
cmc
sbb
jecxz
or
test
jae
lcall
inc
push
push
in
ret
daa
jns
adc
popa
lcall
hlt
dec
cmp
fwait
inc
test
testl
xchg
inc
das
cwtl
repnz
mov
mov
dec
mov
mov
sbb
inc
shlb
mov
mov
sub
sbb
jp
je
cmp
dec
and
xchg
inc
xchg
cmp
xchg
cmp
cmp
push
mov
arpl
inc
call
sahf
cmp
in
mov
cmp
sub
push
xor
in
pop
inc
mov
inc
lods
popa
shl
xchg
pop
or
and
stc
ret
adc
mov
inc
xchg
sarl
es
pushf
mov
imul
fdiv
pop
cmp
inc
testb
icebp
push
add
ror
hlt
insb
add
stos
out
xorl
aam
rcl
daa
rolb
hlt
add
jecxz
sti
jne
xor
mov
bound
mov
pop
pop
mov
sbb
add
std
pop
jne
pop
pop
add
addr16
shll
test
incb
jne
dec
adc
lods
rcrl
orb
jne
enter
lcall
sub
dec
lds
mov
fs
cld
push
subl
xchg
int
pop
and
bound
jnp
push
repnz
mov
test
pop
in
cmp
jmp
outsb
mov
int3
or
mov
cli
and
adc
xlat
lcall
jno
cld
int
and
popf
jmp
rorl
aad
nop
pop
das
adc
push
stc
xor
insl
or
jno
jbe
xor
jle
jmp
push
dec
sbb
cld
nop
rclb
mov
dec
cwtl
sub
adc
iret
lret
repz
mov
pop
xchg
adc
cld
mov
mov
imulb
in
push
or
push
nop
lret
or
mov
xchg
imul
out
pop
pop
jb
mov
stos
loope
pop
jno
mov
stos
sarl
mov
xor
pop
dec
les
mov
pop
rol
inc
rep
and
jo
push
scas
mov
repz
cmp
dec
scas
incl
dec
mov
inc
test
lock
cmp
xchg
sbb
or
arpl
cmp
xchg
dec
repz
or
sub
ja
ljmp
roll
cs
fimull
mov
xchg
dec
lds
filds
pop
ds
xchg
mov
test
dec
pop
mov
stc
add
jge
shll
mov
xchg
pushf
popf
mov
lret
lret
adc
shlb
lcall
invlpg
lods
es
fisttpll
idivb
out
xchg
mov
xorb
mov
rolb
out
in
and
jmp
ret
gs
or
lcall
adc
scas
clc
fcmovnbe
xchg
jbe
imul
pop
shrl
xor
push
sbb
rcll
mov
mov
cmp
cmp
dec
and
push
test
xchg
mov
adc
repnz
imul
inc
xor
scas
mov
movsb
xchg
xchg
sbb
push
xlat
stc
mov
out
sbb
dec
jns
int
xchg
daa
jl
mov
cmp
mov
bound
rorb
imul
pop
test
mov
dec
pop
fcoml
sub
add
sbbl
cltd
repnz
std
xchg
and
xchg
test
or
fildll
sub
cmp
pushf
je
inc
mov
mov
mov
fidivrl
mov
adc
mov
sbb
cmp
dec
lock
fcmovnbe
pop
scas
add
pop
in
ja
pop
lahf
xchg
adc
push
sti
xlat
in
sub
arpl
jmp
je
jle
scas
lret
mull
testl
mov
pop
daa
out
int3
push
pop
scas
dec
xor
add
mov
lcall
jmp
popf
fldl
loope
or
mov
or
insb
aad
add
ja
loope
idivl
in
mov
mov
cmp
mov
mov
pop
add
add
nop
add
sub
jo
jns
mov
xchg
push
mov
sbb
leave
shrl
scas
sub
mov
cmpb
push
xor
out
roll
xchg
cs
sbbl
push
mov
outsl
in
push
jmp
pcmpeqd
test
dec
lds
mov
or
dec
or
bound
sub
test
mov
bound
lods
dec
sahf
pop
leave
push
enter
inc
cmp
push
das
test
sub
cmc
cld
dec
pop
inc
push
test
sbb
or
fdivl
or
or
sub
scas
cmp
ja
dec
mov
lods
fdivl
xchg
pop
xchg
add
rorl
outsb
sbbl
icebp
sti
add
jns
scas
or
std
mov
ja
sbb
xor
sub
sarl
cwtl
lcall
and
xor
test
sbb
xchg
push
cmp
insl
mov
imul
lods
dec
jnp
sbb
adc
pop
push
push
or
decb
lods
iret
dec
xchg
test
mov
fdivrl
push
pop
mov
xlat
out
loopne
loop
cmp
cmp
add
dec
mov
add
nop
jle
pusha
push
test
das
bound
and
outsb
adc
jge
fidivrs
ret
jg
movsb
add
push
xchg
add
and
jl,pt
push
in
pop
movsl
mov
xchg
arpl
ljmpw
pop
mov
fucomip
fstp
fwait
xchg
fidivl
and
sarb
into
mul
movsb
dec
das
pop
mov
testb
psrlq
dec
call
add
repz
add
addr16
cmp
pop
clc
sub
lods
imul
jmp
cld
jl
aas
rcrl
addr16
add
inc
push
mov
xchg
hlt
hlt
mov
dec
fcompl
xchg
or
push
test
jns
aas
cmp
xor
push
clc
xchg
mov
roll
xchg
pop
pop
or
mov
inc
sbb
mov
dec
push
pop
xchg
stos
loopne
loopne
push
sbb
dec
dec
mov
jne
mov
push
lret
mov
nop
rol
or
ja
cs
js
add
mov
call
stos
aad
push
out
icebp
mov
jno
ret
xchg
cmp
das
fistpl
add
out
mov
inc
fisubs
mov
mov
xchg
bound
movsl
out
and
add
lods
cmp
std
shlb
imul
mov
fnstsw
push
push
divb
sbb
dec
sbb
adc
cmpsb
push
jne
or
push
orb
lahf
mov
mov
push
push
data16
jp
lods
pop
jge
mov
and
in
jns
jb
push
push
jg
jmp
testb
ss
sti
lahf
push
push
and
cmpsb
imul
dec
cmp
mov
sub
arpl
and
gs
leave
clc
push
dec
adc
dec
jno
stos
aam
neg
mov
hlt
shrb
rorb
aaa
push
popa
and
ljmp
jne
pusha
adc
pop
stc
jge
je
and
je
push
jb
lcall
scas
lret
cli
xchg
or
fiaddl
imul
rcrb
fs
cmovo
add
or
in
mul
orb
dec
ja
pop
imul
psrld
xor
push
aas
lcall
shrl
xor
push
jl
cmpl
insb
outsb
push
xchg
lcall
dec
aam
mov
idivl
sub
test
or
aas
mov
out
mov
cld
daa
pop
pop
xor
addl
lea
es
out
das
shlb
rolb
sti
sub
mov
add
pop
jp
fstpt
dec
fmulp
shll
add
cmp
push
sub
lcall
sub
and
aas
cltd
ljmp
xchg
dec
daa
outsl
mov
xor
ret
sub
mov
mov
or
scas
push
clc
rclb
cwtl
popf
dec
or
and
pop
in
and
xorl
test
inc
les
int3
inc
mov
andl
xchg
rcrb
sarl
mov
xchg
popl
xchg
lcall
sbb
push
pop
cmp
popaw
lods
nop
loopne
aad
push
mov
icebp
jle
and
mov
int3
call
in
cmp
xor
or
sub
mov
arpl
bound
cmp
jg
fistl
lahf
mov
mov
xorl
testb
mov
les
adc
xlat
push
cmp
lea
dec
movsl
scas
and
aad
mov
test
out
cld
mov
mov
les
add
rcll
leave
push
test
mov
pop
into
pop
lock
adc
or
fwait
test
and
in
ljmp
out
push
outsl
inc
mov
or
sub
sahf
pop
rclb
popf
xlat
insl
xchg
cmpb
insl
andb
daa
mov
sbb
jnp
shlb
xor
int
push
jno
jg
mov
mov
hlt
sub
aam
dec
pushf
rclb
aaa
cmpsb
adc
inc
je
lahf
push
xor
dec
ret
and
xlat
sarl
stos
andl
jb
data16
outsb
push
mov
movsb
lret
sbb
jl
fldenv
enter
lahf
mov
jecxz
mov
dec
popa
push
add
les
push
xor
or
sub
inc
pop
int3
int3
cmpsl
sbb
scas
mov
add
adc
inc
mov
orb
in
les
mov
xchg
je
cmpsl
stc
js
pop
fnstcw
fmull
xchg
lret
cmp
cmp
mov
pushf
int3
cmp
push
add
push
mov
repnz
fldenv
stc
ja
cmpl
jge
mov
cmp
shrb
dec
daa
sbb
cld
loopne
je
cmp
out
insl
int3
xor
cld
fistpl
leave
lret
jo
lea
std
push
and
outsl
adc
xchg
and
cmp
mov
adc
jno
rcl
lock
inc
out
fcompl
adc
mov
mov
out
pop
icebp
dec
test
jns
xlat
popa
cmpsl
int
push
pop
mov
cmc
push
inc
inc
add
push
out
fucomip
int3
push
bound
je
scas
pop
or
mov
add
ja
mov
subl
rorb
dec
out
jbe,pt
adc
or
and
pop
sbb
sub
xor
cmc
jo
inc
sti
dec
hlt
dec
push
inc
inc
xchg
cmp
adc
adc
lahf
lea
adc
loop
rcr
jmp
xchg
stos
outsl
sub
scas
push
jbe
mov
adc
popa
xchg
push
pop
jp
jle
sti
jns
sub
imul
ja
in
orl
mov
xchg
jl
sub
sub
lods
lahf
fidivrs
sub
jge
inc
lea
js
xchg
inc
jns
sbb
add
mov
mov
imul
and
pop
fcomp
negl
jbe
and
jmp
cmc
scas
sub
jne
das
shlb
in
or
testb
sbb
push
xchg
xchg
mov
call
inc
sbb
das
pop
int
push
test
sbb
cs
inc
out
xlat
xchg
xchg
in
mov
into
js
stc
nop
add
mov
cli
cmp
sbb
movsb
cltd
cmp
mov
push
jae
lods
cmp
push
or
gs
or
std
cli
xlat
nop
aas
repnz
jae,pn
sbb
roll
gs
ret
gs
sbbb
sbb
pop
sbb
push
into
repz
jge
cmp
push
jae
jp
jg
es
nop
pop
push
push
cmp
pop
dec
ja
and
xor
mov
add
cmpsl
xor
js
lcall
jp
dec
leave
in
pop
ljmp
aad
lcall
jb
inc
fldl
sub
test
and
aam
jb
cmp
sbb
ret
fsubrs
outsb
hlt
lds
sbb
sbb
mov
mov
mul
pusha
xchg
mov
jno
sahf
push
rcr
dec
fs
mov
and
divb
stc
lods
hlt
cld
add
jmp
out
out
adc
mov
cld
jge
fistpl
or
xor
sbb
daa
fldenv
fwait
scas
sub
clc
or
out
in
xor
mov
in
lods
mov
popa
mov
and
adc
pop
mov
jl
repnz
lods
mov
in
xor
int3
imul
fwait
add
aam
mov
xor
jle
loopne
imul
orl
cmp
ja
shll
mov
add
js
test
xor
pop
cltd
fdivl
movsb
rolb
clc
clc
sub
rorb
mov
daa
lock
xchg
repz
xchg
xor
aaa
pop
mov
pop
sahf
push
out
sub
aam
xchg
out
pushf
es
adc
testb
jnp
sti
movsl
mov
scas
adc
bound
mov
mov
mov
jno
out
dec
ret
sbb
mov
rolb
push
inc
ja
inc
int3
shll
imul
out
pop
inc
pop
mov
push
popa
mov
mov
scas
enter
rcl
xchg
rclb
cmp
dec
sub
cmpsl
stc
mov
jnp
cmp
xorl
and
push
jo
sbb
lcall
cli
pop
dec
leave
cs
mov
std
inc
call
push
je
stc
dec
cmp
inc
xor
insb
add
shrb
aam
inc
mov
in
adc
push
jo
lock
insb
push
aad
mov
sub
hlt
pop
adc
int
push
lcall
clc
fildll
sbb
insl
mov
mov
jmp
ja
mov
and
fisubrl
bound
mov
jecxz
adc
stos
push
inc
add
mov
shlb
shr
push
imul
scas
xchg
stos
test
jae
inc
sub
jb
in
add
xchg
xor
imul
xchg
das
xchg
fists
push
insl
xchg
ljmp
pop
inc
out
fdivrl
xchg
jae
mov
dec
xchg
sbb
fadds
or
lock
std
fcoms
notb
ss
mov
xor
out
pop
pxor
sub
in
inc
mov
or
mov
mov
or
and
movsb
std
fiaddl
aam
hlt
ljmp
mov
pop
fcompl
mov
in
notl
orl
xchg
fs
scas
push
pop
loopne
push
adc
es
shrl
xchg
cmp
adcl
loop
adc
adc
dec
outsl
sbb
dec
jno
or
pop
lahf
jge
je
xor
les
sub
add
sub
pop
insl
ficomps
gs
movsl
repz
mov
cltd
adc
pop
dec
stc
inc
jnp
mov
cmpsb
push
add
xor
jmp
rcl
mov
mov
dec
add
jnp
jge
dec
ja
cmp
add
cli
daa
sub
bound
push
ficompl
rdmsr
jle
mov
arpl
mov
daa
and
popf
inc
ret
das
push
jmp
rcll
lret
push
shlb
pop
call
repnz
mov
sbb
xchg
lret
pusha
stos
fwait
lcall
lods
xchg
push
pop
daa
jno
daa
push
mov
pop
add
push
mov
adc
cltd
xchg
adc
pushf
push
xchg
push
push
lcall
mov
mov
push
jmp
fistpll
mov
movsb
nop
jno
mov
mov
mov
pop
mov
mov
xor
mov
lcall
insb
cmp
scas
xchg
fs
xlat
or
and
or
enter
or
ljmp
or
dec
repz
add
push
push
xchg
sub
lds
jnp
push
pop
jmp
out
icebp
inc
lods
dec
push
bound
ljmp
mov
insl
jl
sbb
sub
sti
call
push
addr16
sbb
adc
xchg
rolb
or
daa
hlt
cli
adc
je
imul
xchg
add
inc
push
inc
repz
lret
cmp
jmp
and
add
mov
sbb
insb
out
or
sub
sbb
mov
sbb
push
xcrypt-cbc
cmpsl
push
inc
jmp
push
xor
ljmp
lods
jle
daa
rcrl
repnz
cmp
cmpsl
xor
fcomi
sub
imul
or
lea
mov
mov
enter
sbb
loope
dec
fdivrl
daa
adc
ficompl
jmp
adc
cmp
inc
daa
ret
das
in
sub
fisubl
cmp
pop
and
mov
cli
xchg
ja
fcoms
int
or
dec
dec
loope
dec
inc
fstpt
mov
inc
adc
xor
mov
jle
fs
pavgw
pop
mov
adc
cmpsl
pop
out
xor
lods
mov
add
inc
xlat
fidivl
lea
cltd
adc
lea
js
dec
push
pushf
shl
outsb
iret
mov
sti
and
out
cld
out
test
outsb
add
call
or
js
pop
aam
mov
mov
add
enter
cs
inc
xor
cli
xchg
mov
cmp
mov
shll
pop
add
dec
repnz
leave
std
or
jl
mov
and
dec
imul
pop
push
jo
push
pusha
dec
aas
mov
in
add
cmp
sti
out
mov
mov
scas
jmp
js
icebp
push
fisubrs
pop
and
pop
in
out
ss
add
jle
fwait
insb
cmp
sbb
shrb
mov
rcrb
orb
outsl
mov
sub
lods
ja
ret
push
ret
xchg
fucomp
clc
xchg
mov
arpl
xor
sbb
or
pushf
jecxz
adc
js
addr16
into
mov
test
dec
mov
sub
lcall
mov
mov
or
inc
push
push
test
xchg
push
int3
mov
dec
push
pusha
dec
repz
push
roll
inc
jae
lcall
and
push
bound
jno
lods
inc
mov
and
push
pop
movsb
sbb
lock
sub
pop
or
in
dec
call
enter
hlt
in
cmpsb
xchg
push
out
pop
lds
ret
test
popa
stos
std
jae
ret
cwtl
mov
inc
or
and
stos
push
mov
or
icebp
stos
dec
inc
addl
inc
insl
test
int
clc
cld
add
jmp
lret
ret
push
in
or
shrb
testb
fnstsw
pop
std
mov
push
jb
mov
cmp
aas
rcrl
inc
cmpsl
mov
push
mov
sub
dec
dec
adc
je
mov
and
dec
call
lods
lds
dec
or
test
cmc
lock
push
sub
mov
js
mov
and
push
aam
xchg
push
inc
inc
lret
bound
mov
ja
shlb
jae
push
add
sbb
push
inc
pop
sbb
repz
push
push
mov
sub
pop
lea
jo
mov
pop
xchg
xor
inc
push
loopne
stc
jb
sahf
adc
iret
push
mov
xchg
xchg
mov
andb
shrl
xchg
stos
popa
in
sub
outsl
adcb
inc
push
jp
int3
loope
inc
cwtl
add
jge
jnp
jmp
jge
fimull
mov
sub
push
loop
adc
cwtl
sub
int3
in
pop
xchg
xchg
stos
cmp
scas
mov
and
push
push
sub
outsb
jb
mov
sub
and
inc
push
out
lock
and
icebp
push
rcll
xor
lcall
inc
insb
mov
test
sub
cmp
in
bound
cwtl
aam
jo
imul
and
xchg
out
std
inc
mov
out
pop
xor
adc
push
jbe
imul
in
pop
jp
mov
jl
int
sbb
fucomi
loope
punpckhbw
test
push
add
repnz
cmp
movl
dec
test
aas
or
cli
int
fisttpll
fs
push
cmp
xchg
mov
jne
sub
in
mov
insl
es
xor
lds
mov
dec
jns
ss
ret
daa
cmp
inc
fiadds
out
pcmpgtw
jne
lock
dec
jge
icebp
dec
push
ja
adc
mov
mov
not
mov
cmc
stc
mov
push
add
fimull
mov
pop
iret
cli
sbb
pop
iret
sub
rclb
jl
outsl
stc
clc
xchg
mov
jae
sub
push
enter
mov
scas
out
pushf
pop
adc
pusha
adc
add
cmp
jp
pushf
or
ss
test
jnp
cmp
pushf
cmp
das
xchg
mov
xchg
jl
cmp
leave
push
xchg
mov
dec
pop
and
or
or
rcrb
jmp
xor
cmp
movsb
mov
pop
mov
xchg
mov
out
push
cmp
scas
or
fmul
xchg
jno
lcall
mov
iret
xchg
negb
outsl
mov
decl
mov
aas
insl
testl
into
fwait
jne
jp
xchg
lahf
addl
xchg
jbe
xor
lcall
orb
mov
cwtl
jne
jp
sbb
ja
aam
push
inc
aaa
jnp
jnp
xchg
adc
inc
cmp
push
fdiv
jmp
scas
mov
inc
ja
ljmp
push
push
push
sub
sti
mov
jecxz,pt
dec
divl
into
out
je
frstor
je
loop
icebp
and
push
or
cmpsb
js
jbe
xor
iret
inc
leave
dec
pop
arpl
push
xor
push
pop
add
pop
sbb
repz
add
lea
sarl
in
inc
repz
jecxz
sbb
sub
jb
sub
adc
into
push
dec
das
or
sub
push
fdivs
pop
inc
jmp
cmc
adc
ret
out
divl
fstps
out
dec
push
into
cld
inc
popf
aas
pop
mov
aad
xor
out
cmp
push
outsl
mov
mov
jl
aad
mov
ficoml
sub
or
mov
repz
mov
aas
sbb
div
and
mov
lods
mov
imul
push
mov
dec
cmp
add
test
movsb
in
xchg
cs
dec
lret
ds
loope
adcb
stc
inc
inc
cs
cld
insb
jle
cmpsb
push
ret
xor
xchg
ja
stos
inc
jns
xchg
and
and
add
fs
out
jae
dec
iret
push
out
ret
imull
or
ficoml
call
inc
popf
lods
je
inc
daa
lock
and
lds
aas
dec
and
pop
pusha
dec
xchg
xor
jge
leave
pminub
dec
xor
push
push
cmp
adc
lahf
aad
sbb
lock
xor
jmp
mov
mov
inc
iret
enter
jnp
push
add
pop
pop
shlb
and
pop
pop
cltd
je
js
mov
cmp
pop
or
pop
jb
fimull
dec
ud0
mov
hlt
cmp
lret
lock
nop
cs
push
jmp
sbb
fists
aam
inc
mov
mov
imul
xor
bound
fistpl
imul
add
negb
les
or
add
jno
mov
add
xor
mov
arpl
mov
mov
mov
and
sub
stos
mov
outsl
das
lahf
std
inc
mov
repnz
pop
adc
inc
adc
mull
paddd
test
sub
in
push
jnp
scas
call
sbb
test
sahf
mov
sbb
dec
insb
or
mov
call
jg
mov
repz
mov
jo
movsb
inc
pop
lock
pop
cmpsb
and
mov
add
out
imul
and
lock
add
push
dec
cmp
xor
pop
inc
pop
out
pop
xor
aas
popa
and
dec
cmpsb
lahf
test
or
xor
mov
mov
into
push
fs
leave
mov
fadds
je
jp
jno
jg
jae
xchg
fbld
les
mov
or
mov
add
sti
add
lret
enter
ja
imul
mov
int3
cmp
cwtl
sub
jmp
dec
outsl
add
cltd
push
push
fistps
pop
nop
iret
dec
mov
sub
ss
add
or
aas
cmp
dec
or
sub
cwtl
mov
jmp
aam
dec
test
pop
lock
inc
mov
repz
out
ljmp
rolb
pop
mov
xlat
insb
mov
push
inc
cmp
cwtl
pop
idivb
pop
test
ljmp
pop
cmpsb
inc
dec
loope
sbb
pushf
inc
jo
mov
sahf
sbb
dec
or
je
pop
outsb
test
push
xchg
dec
lret
xor
dec
push
xor
ss
loop
popa
adc
lret
and
jb
pop
outsl
lea
into
jmp
faddp
in
push
mov
gs
mov
push
shlb
sub
xorb
lret
int3
iret
arpl
fwait
sbb
and
xchg
jbe
int3
outsb
arpl
xor
loope
and
les
jmp
sahf
push
in
arpl
xchg
dec
scas
pop
ret
ret
idiv
cmp
outsl
in
int3
push
aas
or
repz
out
jecxz
lahf
xor
jo
sbb
sub
mov
cmp
data16
jg
decb
push
dec
or
cmp
out
jecxz
fcoml
sub
cmp
jb
ret
mov
mul
inc
dec
push
xchg
inc
ret
dec
mov
scas
aad
adc
xchg
in
testl
rcrb
sti
aad
adc
out
movsl
push
inc
fidivs
nop
and
sub
bound
mov
cmp
cmpsl
jnp
cmp
pop
loopne
adc
jo
lret
dec
out
mov
xor
pop
cmp
lret
mov
ljmp
popf
arpl
xchg
shl
inc
adc
in
mov
in
out
xchg
fidivrs
fdivr
movl
dec
or
imul
pop
icebp
rcrb
xchg
mov
loope
aas
jo
sbb
push
mov
test
imulb
mov
jb
xor
jne
aaa
adc
test
xchg
cld
inc
inc
iret
test
mov
stos
sub
add
and
sub
push
mov
lds
xchg
pop
stos
loopne
int
notl
popa
sub
push
fbstp
fdivrs
test
mov
xchg
test
push
mov
and
inc
push
dec
cmpb
jne
adc
dec
pop
sub
cmp
cmp
adc
clc
or
mov
mov
mov
and
jo
addr16
stos
push
push
pop
xchg
int
mov
mov
cmpb
and
call
imul
dec
xor
test
mov
inc
imul
cs
inc
jg
mov
jbe
out
loopne
daa
scas
sub
adcb
outsb
xchg
jmp
dec
into
in
shll
adc
jle
pop
adc
xchg
xchg
lds
in
or
ret
cmc
mov
test
pop
idiv
xor
cmp
popf
negb
cmp
outsl
sub
inc
xor
mov
stc
hlt
mov
mov
sub
pop
pop
test
aam
addl
fisttps
icebp
lods
sbb
mov
sahf
out
lret
mov
imul
inc
cmp
sub
dec
sbb
scas
jne
movsl
dec
dec
lock
iretw
mov
les
dec
push
aam
ret
gs
push
push
and
lcall
inc
movsl
popf
and
sbb
dec
ret
sbb
push
into
and
mov
add
cmpsb
aam
mov
adc
xchg
pop
iret
ljmp
jne
fs
adc
stc
fimuls
popf
sbb
insl
inc
mov
mov
push
sbb
inc
ja
loopne
pushf
les
dec
jmp
and
sti
cs
cld
movsb
ss
pop
jae
loop
sbb
push
add
xchg
or
inc
dec
mov
dec
push
mov
dec
scas
popf
mov
scas
xor
or
mov
cld
movsl
loopne
aaa
push
loop
aad
aad
fcomp
pop
iret
or
xlat
mov
popa
pop
jb
mov
sbb
push
fisttpll
cld
push
inc
pop
mov
lods
sbb
jmp
int
cwtl
mov
pop
enter
and
fstpt
pop
push
jmp
push
mov
cmp
mov
mov
push
push
xor
inc
rcrl
jle
rcl
cmp
mov
jnp
cwtl
lock
andb
test
sub
sbb
dec
stos
jl
mov
xor
lcall
shll
xchg
push
cmp
push
push
jnp
jmp
adc
mov
mov
or
cmc
add
jbe
mov
sahf
js
adc
xchg
pop
and
in
pop
fisttps
inc
mov
sbb
mov
imul
jp
mov
dec
fistps
push
mov
lret
out
test
and
cmp
jno
ja
mov
sub
xor
xor
cmpsl
lods
in
mov
mov
enter
cmpsl
and
inc
movsl
ret
nop
shll
stc
fcmovnu
bound
jne
mov
inc
push
sbb
std
inc
mov
adc
pop
in
js
mov
mov
daa
lea
inc
aaa
outsl
inc
test
mov
movsb
push
mov
in
sub
imul
xor
cld
sbb
add
mov
xchg
in
inc
push
pop
mov
push
test
xchg
mov
ds
mov
cmp
push
pop
dec
and
clc
jp
pop
sub
push
stc
sub
sub
dec
push
popf
dec
ret
ret
sub
jmp
push
dec
loopne
js
pushf
mov
cmc
xorb
movsl
dec
jnp
cmp
jne
push
pusha
cmpsb
jl
ret
pop
out
push
mov
lret
push
adc
or
movsl
xchg
notl
lcall
pop
mov
mov
dec
mov
dec
pop
push
hlt
imul
mov
sub
lret
or
les
cmpsl
pop
das
inc
call
jnp
lret
shl
dec
inc
sbb
shl
jno
inc
jl
mov
xor
sub
ss
or
popa
lret
mov
mov
add
mov
sub
iret
cmp
repnz
jno
jbe
ret
sarl
xchg
jne
loop
idivb
in
add
or
inc
stc
sub
test
jg
ret
and
xchg
sbb
push
insb
outsl
popf
pop
mov
cmpsb
inc
clc
in
hlt
sti
ret
repnz
lock
adc
test
out
aad
roll
rolb
jl
dec
mov
adc
loope
pop
pop
fwait
pop
aam
pop
mov
notb
int
or
js
adc
outsl
inc
arpl
jp
imul
push
pop
ja
jno
xchg
xchg
sub
pop
mov
mov
sub
je
push
sub
xor
loope
cli
sbb
xchg
mov
xchg
cmp
imul
rcll
sti
xchg
ret
cmp
pusha
stc
pop
loop,pt
sbb
lcall
loop
data16
repz
push
ljmp
adc
popa
aas
mov
fcmovne
dec
sbb
jl
or
movsl
mov
and
mov
das
pop
movsl
icebp
mov
sbb
xor
or
add
pop
enter
xor
adc
add
test
inc
jg
adc
mov
ss
pop
int3
test
push
rclb
xchg
xchg
out
mov
or
arpl
sub
mov
in
sbb
popf
jbe
sahf
lret
lcall
test
adc
insb
add
scas
pop
nop
iret
push
scas
xchg
out
dec
aas
rcrl
mov
fwait
lahf
rorb
mov
scas
sbbb
test
push
sahf
mov
stos
fistps
mov
sti
pop
lods
cmp
test
add
sbb
pop
sub
lock
or
ficoms
sarb
push
inc
loope
push
dec
lahf
arpl
in
fsts
shlb
ss
jno
sub
pop
addb
or
add
daa
out
or
popa
in
mov
enter
lret
dec
fwait
popl
xor
rclb
je
imul
out
sbb
sbb
repnz
std
cmpsl
pop
ret
dec
mov
sbb
fadd
lea
mov
dec
into
pop
scas
xchg
add
fistpll
gs
andb
es
xor
pop
sub
pop
jne
mov
fdivp
mov
fildl
int
ret
push
ret
cmpsl
mov
mov
enter
xor
mov
sahf
repz
das
cmp
aam
push
jne
pop
mov
dec
cmp
sbb
jle
or
inc
pop
push
xchg
dec
iret
movsl
jb
mov
mov
push
pop
sub
out
test
out
popa
fwait
ljmp
add
push
xlat
inc
mov
sub
outsl
or
push
xchg
add
stos
xlat
or
mov
cmp
mov
jnp
pop
dec
or
loope
inc
jo
jle
ficoms
inc
inc
push
sbb
inc
in
push
mov
test
xor
test
cs
sub
bound
sti
xor
aam
pop
and
pop
push
add
sbb
mov
sbb
cs
inc
pop
es
ret
sub
into
shll
outsb
cld
push
cmp
mov
push
add
dec
or
int3
lock
pushf
sbb
mov
sbb
add
leave
in
and
xchg
adcb
lret
push
add
mov
stos
stc
scas
mov
adc
cmp
popa
fstpl
cmp
clc
or
enter
dec
scas
cmovns
pop
cmp
repz
jns
inc
mov
mov
xor
lods
jne
xor
imul
cltd
dec
lret
rorb
popf
inc
shlb
push
sub
popa
imul
js
push
jne
jmp
pop
js
or
push
shrl
pop
ljmp
pop
ret
divb
sti
call
fs
xorb
sub
ljmp
mov
and
dec
push
sbb
push
hlt
xor
call
mov
mov
icebp
inc
bound
mov
cmpsb
push
push
xchg
int
push
sti
mov
pop
or
mov
lea
jmp
inc
outsb
mov
inc
pop
lret
sub
jmp
or
mov
into
stos
movsl
mov
push
jnp
jnp
mov
lods
lods
mov
scas
in
aas
pop
lcall
sbb
loopne
rol
stos
out
aas
test
imul
xchg
dec
jl
leave
jecxz
bound
sti
fisttps
repz
pop
dec
pusha
dec
negb
pop
sar
mov
sbb
arpl
pop
dec
cld
adc
pusha
pop
fnsave
mov
cpuid
rol
inc
frstor
cmp
mov
sub
jle
ds
fnstcw
jnp
ss
push
iret
popf
movl
mov
add
test
mov
pusha
xor
lock
fidivrs
cmp
lcall
mov
out
add
jecxz
pop
adc
sub
mov
aam
lds
push
jecxz
dec
mov
out
xor
or
lcall
inc
pushf
xor
aaa
dec
xor
xchg
arpl
fildl
fiaddl
inc
mov
push
or
jns
in
jne
pop
add
xlat
out
mov
push
jo
push
mov
fistpl
int3
xchg
jp
pop
scas
aad
fidivs
in
ss
sbb
leave
add
add
popl
xor
sbb
stc
fdivr
aaa
lahf
push
mov
orl
sub
jne
or
subl
xor
push
pop
mov
inc
push
popa
shlb
push
aad
xor
call
xchg
mov
test
fsubl
aaa
adcl
scas
addr16
faddl
gs
push
push
jmp
or
adc
pusha
fstl
mov
mov
xor
lret
mov
jg
xchg
leave
jno
sub
cwtl
test
mov
mov
xchg
clc
imull
inc
ja
in
cli
xor
lods
in
fs
js
dec
mov
mov
mov
adc
jne
mov
pop
ja
xor
loop
mov
clc
lea
inc
push
stos
das
in
scas
out
int
push
add
xchg
mov
incl
repnz
aaa
testl
lods
jne
loop
movb
or
call
sbb
mov
xchg
fisttpll
jg
out
in
fisttpl
das
cmc
jne
inc
mov
jle
mov
cmp
lret
mov
or
insl
shr
ljmp
pop
and
popf
push
adc
mov
push
fidivrl
and
in
loope
sub
mov
out
leave
xchg
add
aaa
clc
push
jae
mov
jb
pusha
bnd
mov
aam
adc
mov
fnsave
ds
nop
imul
mov
pop
push
cmpsl
loope
mov
push
sub
sbb
nop
in
push
push
bound
ss
pop
lods
aad
dec
push
inc
mov
das
fisttpl
insb
sub
xorl
pop
out
cmp
sbb
inc
fsubs
xor
jge
lahf
add
jge
test
popa
ret
push
push
dec
or
and
psubd
adc
push
inc
push
mov
and
xchg
ucomiss
cmpsl
inc
sub
addb
insb
pusha
cmp
movsb
adc
dec
sub
stos
rorl
xchg
jp,pn
mov
fcmovu
add
lret
rcr
test
xorb
lock
add
cmp
mov
mov
shl
lcall
mov
and
mov
pop
xor
imul
je
sub
movl
jecxz
fwait
sbb
sbb
adc
jno
sbb
jl
xchg
cmp
dec
fildl
mov
sub
push
sbb
mov
cltd
xor
dec
mov
scas
test
cmp
out
or
pop
mov
hlt
jmp
es
mov
xor
rorb
into
push
mov
cmp
loop
clc
dec
lret
cmc
imul
mov
movsl
leave
out
lahf
mov
and
push
xchg
cmp
das
xchg
push
fdivrs
dec
fistps
xorl
insb
mov
pop
test
out
xor
loopne
icebp
test
stos
push
icebp
mov
bound
out
shll
mov
cmp
sbb
fisubl
insl
inc
mov
mov
test
sub
loopne
and
outsb
sarl
mov
sbb
insb
cwtl
ret
push
int
dec
outsb
sbb
sahf
xchg
shll
or
lret
and
fldt
sti
push
fisubs
xchg
fcmovnbe
arpl
mov
cld
loope
mov
fs
add
test
mov
push
mov
cmp
mov
imul
popa
inc
cmc
xchg
xchg
jmp
arpl
sbb
xchg
sti
mov
mov
loopne
jmp
xor
js
xlat
ds
pop
push
cmp
int
ficompl
fwait
adc
or
fs
sbb
add
ret
loop
or
pusha
dec
xor
popa
push
mov
lods
and
sbb
cmp
cld
cwtl
mov
cmpsb
mov
in
xor
dec
or
repz
xor
push
mov
hlt
repz
or
dec
mov
cli
add
mov
push
sub
mov
data16
pop
dec
inc
mov
mov
xor
jns
dec
lgs
xorb
jl
ret
repz
jle
adc
loop
add
and
jne
leave
adc
dec
shlb
jne
mov
push
stos
dec
loop
cmp
push
mov
clc
mov
lcall
xor
popa
daa
jnp
jo
mov
mov
lods
in
xor
push
imulb
movsl
icebp
jae
shl
dec
adc
inc
in
jno
mov
js
lods
jmp
sub
arpl
dec
cmp
mov
aam
insl
xor
ret
fstps
repz
mov
aas
xor
in
in
dec
xor
and
loope
aaa
int3
icebp
mov
adc
orb
ret
cmpsl
cmp
jo
mov
jl
movsl
repz
mov
repnz
jnp
or
mov
aas
cmc
fmuls
dec
cmp
test
fmul
mov
push
mov
push
dec
out
movsb
dec
call
adc
sbb
lcall
int
pop
mov
xor
ja
movsl
inc
inc
xchg
test
das
scas
out
idivb
lods
in
das
repz
mov
dec
jns
fdivrs
shl
out
inc
loope
es
mov
int3
sub
mov
sub
or
xchg
xchg
movsb
js
fcmovnbe
dec
pop
dec
bnd
adc
cmc
xlat
mov
mov
push
push
in
popa
mov
and
jo,pt
xchg
mov
mov
stos
xor
movsb
and
mov
push
inc
insl
fistl
mov
jle
xchg
cmpsb
popf
in
out
mov
fidivl
sub
test
push
jp
inc
xchg
push
inc
stos
lds
sub
test
ret
test
jecxz
mov
fbstp
cli
pushf
inc
das
fdivs
lods
mov
sub
sbb
jbe
out
xchg
push
jmp
arpl
lods
or
inc
fsts
cmp
mov
mov
sub
scas
xor
and
loop
lcall
ss
and
push
jge
and
or
add
sbb
pop
notb
fcomi
stos
loopne
dec
fucom
jmp
pushf
jmp
jg
fnsave
mov
pop
ja
sub
pop
sub
jmp
movsb
adc
or
push
test
addl
les
pop
jle
push
cmp
lods
sub
mov
sub
push
sbb
outsl
mov
pop
je
orb
mov
mov
inc
fcoms
std
jmp
lds
xchg
mov
sub
sub
push
jg
jbe
loop
push
xchg
push
int
fldcw
sahf
add
cmp
inc
xlat
and
aam
addl
inc
add
inc
and
adc
into
pop
sbb
inc
dec
loopne
or
imul
mov
xor
pop
scas
mov
mov
add
and
iret
out
xchg
xchg
sbb
das
dec
jecxz
cmc
xchg
and
fcmovb
les
in
push
ror
test
out
les
in
cmpl
idiv
jbe
stc
mov
mov
lods
loope
dec
imul
fldt
mov
sub
insl
xchg
test
or
scas
mov
jo
cld
cmpsl
or
movb
jo
push
rorb
loopne
mov
pop
cmpsl
sub
fs
pop
lret
dec
lods
xor
or
mov
lret
ljmp
into
xor
sbb
sub
dec
cmp
or
in
mov
ret
in
and
xchg
inc
push
rcll
xor
mov
dec
loop
test
clc
add
adc
in
sbb
rol
mov
and
sub
inc
ja
jg
mov
pop
nop
cmp
and
les
dec
dec
push
jmp
mov
testl
mov
mov
std
push
stc
mov
mov
push
stos
mov
sbb
cltd
jp
cmpsb
jo
xchg
in
loopne
inc
cmp
pop
mov
stc
test
lret
add
mov
dec
lret
sub
mov
into
mov
sbb
pop
mov
lods
inc
ret
sub
jl
adc
push
or
xor
mov
daa
out
mov
cld
adc
call
sarl
nop
jp
lods
inc
ja
das
jle
mov
or
dec
mov
mov
cli
push
std
lret
mov
mov
push
add
aas
dec
out
cs
pop
add
or
and
cwtl
dec
pop
mov
cmpb
jl
jno
addr16
push
ja
sarl
loopne
or
jno
jp
popf
add
jb
jb
sbb
cmp
rorl
mov
jge
mov
inc
dec
mov
sbb
inc
popa
dec
dec
sbb
leave
dec
xlat
mov
sbb
adc
lcall
enter
aas
cmp
fsubrl
and
int
add
lods
popa
jno
hlt
lds
push
inc
pop
rcrb
pop
pop
sub
pushf
imul
adc
jne
sub
pop
sbb
jae
mov
or
ret
adc
jmp
sub
daa
call
dec
orl
dec
outsb
dec
mov
adc
or
mov
mov
addr16
push
fucomip
shrl
jne
add
cwtl
into
lret
adc
add
in
mov
rol
mov
arpl
stos
cmp
sbb
test
rclb
sti
cltd
cmpsb
mov
dec
loop
loop
sbb
mov
leave
jno
repnz
push
fwait
cmpsb
mov
cmp
lods
xchg
in
push
cmc
mov
jmp
or
out
add
shll
jnp
push
jle
push
stos
mov
push
dec
lret
pop
push
lahf
enter
pop
jmp
mov
mov
lods
sub
dec
cmp
mov
ret
and
add
mov
ljmp
mov
and
sub
popf
push
es
repnz
mov
mov
mov
adc
dec
outsl
stos
inc
out
gs
xlat
sbb
add
fwait
cld
ret
cmpsb
je
push
cmp
call
push
sub
inc
mov
xchg
std
push
xchg
cmpl
lahf
jge
aad
sbb
nop
mov
fnstenv
nop
cmp
dec
dec
pop
inc
push
xor
dec
adc
lcall
daa
cmp
stc
cmp
pusha
cmpl
xor
fdivrs
adc
mov
adc
insb
cmp
inc
in
or
aas
jns
repz
dec
ret
mov
ror
mov
mov
pusha
pop
int
sbb
cmp
sbb
leave
and
je
jmp
add
mov
and
push
jo
insb
push
in
jo
push
outsb
xor
push
in
popf
cltd
out
fwait
or
data16
in
fistps
gs
or
xor
popl
into
pop
and
inc
adc
clc
das
stc
frstor
test
pop
stc
rorb
fnstsw
fnsave
push
xchg
das
xlat
cmp
push
xchg
fistpl
aam
test
cli
jge
add
sbb
pop
test
jmp
or
shrb
add
mov
pop
dec
andnps
fisubrl
lea
jge
xor
test
pop
add
mov
or
aaa
lea
minps
pop
mov
ljmp
scas
or
fs
mov
addr16
sub
push
adc
sub
inc
adc
sub
add
add
mov
mov
xor
les
or
push
flds
lods
sub
and
mov
or
dec
or
pop
mov
cmp
xor
icebp
adc
mov
cmp
sub
push
ret
sahf
mov
lret
repz
ficomps
jb
jbe
cmp
inc
push
dec
dec
add
sbb
cmp
stos
pop
inc
int
loope
in
ret
pop
or
inc
call
fcoms
jno
je
inc
cmc
mov
inc
mov
push
push
jnp
or
inc
sbb
mov
add
jmp
es
popa
mov
mov
scas
inc
aaa
mov
sub
sub
sbb
ret
shll
cs
fmuls
inc
hlt
outsb
into
push
stc
push
gs
test
popf
jge
pusha
jg
lods
pop
stc
outsl
xor
mov
das
lahf
adc
pop
ficompl
mov
test
std
push
or
mov
sub
sbb
sbb
ror
mov
idivb
inc
inc
mov
loopne
test
add
xor
pop
daa
je
inc
iret
jl
test
add
out
int
pop
mov
adcl
shrl
int
ret
lret
cmpsl
add
repz
jecxz
sbb
adc
sbb
jmp
mov
mov
and
movb
push
popa
mov
sub
sbb
repz
out
fsubs
inc
lret
sbb
idivb
mov
xchg
jmp
scas
sub
movsb
shll
mov
push
call
lahf
push
or
jle
daa
jno
jl
mov
xor
mov
adc
mov
push
outsl
cmp
out
loopne
pop
jp
jnp
mov
jns
jle
scas
out
or
sti
js
mov
call
mov
jp
das
mov
mov
mov
adc
inc
mov
jg
fdiv
data16
pop
out
xlat
popa
dec
out
adc
jne
ljmp
mov
adc
in
es
jmp
xchg
pop
leave
fs
xchg
push
add
xlat
movsl
push
mov
or
cmp
pop
xor
fdivrl
lods
push
ret
mov
je
out
adc
fs
int3
push
loopne
adc
pop
shlb
and
sbb
xor
mov
push
xchg
push
adc
mov
sub
sbb
dec
cmc
add
jno
sub
mov
or
xor
mov
sbb
out
push
xchg
inc
or
mov
pop
stc
stc
sub
fcoms
or
sub
movsl
push
sub
adc
aaa
imul
movsb
or
mov
sahf
pop
arpl
flds
neg
inc
lea
shr
push
mov
sub
lret
adc
and
jle
cmc
mov
fwait
insb
fisttps
enter
mov
push
pop
cmc
xor
xor
outsl
ljmp
test
or
pop
add
mov
clc
dec
js
or
and
das
stc
xchg
inc
adc
jle
add
xchg
dec
stos
insl
and
or
pop
ret
sbb
pop
add
or
dec
icebp
rcll
jecxz
xor
push
sub
in
mov
cmpsb
and
xor
test
push
nop
sub
inc
push
and
popf
add
xchg
or
cwtl
push
lcall
cmp
jno
dec
shl
fstps
out
repnz
push
loopne
dec
pop
repnz
pop
cwtl
ss
test
inc
jns
int
add
pop
mov
das
clc
fstpt
test
fildl
xchg
movsb
inc
cld
divb
out
mov
lahf
sbb
addr16
mov
pusha
ss
xchg
repnz
sahf
aad
insb
and
andb
fs
popf
icebp
int
jp
enter
and
add
pop
lret
fwait
pop
xchg
pushf
lcall
leave
push
test
mov
sbb
imul
out
cmp
daa
pop
rcl
shl
test
lahf
rcrb
mov
adcb
mov
orl
xor
out
xor
cmp
cmp
inc
andb
ss
mov
push
pop
cmp
enter
out
xchg
push
or
sub
lods
inc
in
pop
ret
lret
jo
adc
jno
repz
or
clc
cmp
pop
push
fstl
push
and
out
loopne
xor
mov
addr16
mov
push
adc
adcl
mov
aaa
jnp
arpl
add
mov
push
or
mov
or
ret
and
lds
jl
xchg
bound
jb
mov
or
and
mov
mov
adc
jnp
and
aad
pushf
pop
aaa
push
movsb
cmpl
imul
jle
test
jne
outsb
pop
xor
sub
or
xor
stos
mov
push
popa
mov
push
cld
clc
inc
or
fmull
aaa
mov
jbe
jns
mov
rorb
add
lahf
inc
hlt
test
arpl
adc
fdivrs
mull
clc
int
stos
mov
out
out
xor
inc
adc
pop
cltd
dec
rclb
sarb
addb
push
cmp
push
in
pop
jns
mov
lret
lret
mov
push
jb
add
repnz
sbb
xchg
inc
mov
jne
xlat
repz
inc
lahf
mov
outsb
lds
or
mov
push
ret
insl
fdivrs
arpl
mov
jb
or
dec
repnz
cs
inc
dec
mov
hlt
jmp
insl
in
sub
stos
jecxz
pop
cmpl
mov
dec
jge
mov
dec
roll
lods
jae
push
add
xor
in
or
idiv
mov
out
add
dec
sbb
mov
xor
pop
adc
and
es
in
dec
fwait
dec
inc
and
dec
push
xchg
mov
and
jle
mov
sarl
mov
ret
mov
pop
cs
or
mov
pop
inc
mov
cli
repnz
movsb
xchg
pop
sub
jecxz
test
jle
sub
cmp
aas
pop
inc
notb
or
cli
sub
js
in
rorb
xchg
int
mov
xlat
xor
aas
daa
insb
cmpb
inc
jns
mov
pop
sub
sub
add
std
sub
push
xor
shlb
dec
pop
mov
sbb
push
xor
into
adc
lret
pop
cwtl
jle
pop
push
sub
jmp
fstpl
cltd
sti
icebp
out
repz
decl
jmp
cmpsb
xor
push
mov
insl
rolb
or
hlt
insl
into
insb
arpl
push
pushf
jg
xchg
and
xor
mov
idivb
stos
push
dec
popf
mov
bnd
xor
in
in
mov
push
lret
inc
rolb
fdivs
fwait
je
jge
pop
push
mov
lret
loopne
pop
inc
mov
dec
dec
aam
in
nop
rcl
or
vprotq
or
aas
test
testb
or
and
les
mov
lds
xor
mov
cmp
push
jns
inc
out
pop
sar
jns
jo
push
or
rolb
adc
cltd
push
outsl
xor
shlb
into
ret
adc
lds
hlt
test
adc
mov
push
les
int
aaa
ret
out
aam
mov
fldcw
sar
fldenv
popa
add
push
dec
pushf
jl
xor
mov
jge
mov
repnz
mov
jnp
mov
mov
pushf
adc
and
adc
add
mov
jns
imul
pop
test
push
adc
sbb
subb
mov
jb
lret
mov
add
sbb
rcr
popa
subl
jbe
add
pusha
xlat
addr16
ficoml
dec
pushf
sti
xchg
jp
or
cmp
icebp
ljmp
insb
adc
cmp
jbe
inc
fst
ljmp
daa
cmp
dec
xchg
inc
aad
add
addl
xchg
outsl
push
xchg
mov
push
mov
pop
jbe
mov
jmp
mov
sarl
sbb
jmp
push
dec
cmp
push
add
shll
add
and
repz
in
add
insl
out
dec
inc
or
js
xchg
mov
inc
xchg
std
popf
dec
sti
pop
test
cmp
adc
inc
stos
inc
push
add
pop
aaa
sub
lret
xchg
xor
lret
mov
int
sub
or
push
xlat
int3
lcall
es
or
xor
inc
aas
fidivs
mov
mov
out
mov
imul
in
pusha
or
inc
cli
xchg
sub
mov
lea
jg
fildl
or
test
add
jge
call
rclb
outsl
sbb
leave
int
lret
fstl
hlt
sbb
ficoms
jl
lods
adc
sub
mov
imul
xchg
iret
lea
sbbl
lds
sub
arpl
and
pop
scas
xchg
mov
inc
shl
sub
clc
xchg
push
add
jnp
stos
xlat
jmp
cmpsl
pop
sbb
xchg
outsl
sub
test
dec
cmpl
daa
push
xlat
mov
andb
in
test
add
bnd
les
call
sub
sub
and
fnstenv
push
push
clc
inc
mov
jmp
cmp
xor
push
jge
dec
sub
cmp
dec
jl
dec
aad
and
std
dec
sbb
stos
roll
shrb
push
insb
popa
mov
pavgw
push
es
test
pop
mov
mov
mov
adc
imull
inc
idivl
push
mov
mov
push
jo
std
shll
nop
inc
arpl
xchg
pop
xchg
push
call
sbb
in
lret
or
push
or
lahf
into
pop
movsl
jae
sbb
lods
and
mov
push
jbe
insl
or
in
dec
out
cmpsl
lods
shll
ret
xchg
insb
mov
jmp
push
sub
loop
adc
mov
xchg
or
adc
aas
lret
lcall
xlat
adc
push
insb
pop
test
push
push
push
inc
movsl
lods
cmp
xor
leave
mov
mov
mov
jo
movsl
push
xchg
mov
fiaddl
cmpsl
les
test
shll
mov
enter
jmp
cmp
push
adc
mov
rep
daa
jbe
xor
stc
push
adc
stc
filds
jle
pop
mov
or
pop
inc
pop
sbb
cld
sti
sbb
mov
test
inc
dec
rcr
fbstp
add
pop
xor
add
inc
test
movsb
xor
adc
test
mov
cmp
int
call
ja
push
sbb
icebp
ss
jecxz
pop
jp,pt
add
clc
pop
or
or
aam
inc
sbb
dec
push
fnsave
pop
xor
xlat
jecxz
mov
sub
cmp
lret
push
stos
add
jp
daa
cmp
mov
add
push
daa
jne
fidivs
sarb
cs
int
push
dec
cmpsl
in
dec
hlt
rcll
and
jmp
enter
push
lcall
mov
pop
stc
invd
pop
jecxz
mov
int3
imul
aaa
xor
dec
mov
mov
repz
mov
lret
xchg
sub
cmp
cmp
lret
jbe
out
mov
pop
sub
xchg
add
lods
mov
fistps
imul
pop
mov
push
stos
mov
jp
fistpll
inc
fildl
pop
pop
or
push
into
fsubp
fsts
pop
aad
inc
xchg
lcall
or
lret
jecxz
xorl
mov
xchg
jge
cmp
mov
pop
pop
xor
pop
and
dec
sbb
mov
aas
dec
cmp
mov
bound
movsl
adc
movsl
lret
cmpb
das
jne
mov
loop
icebp
jmp
push
js
data16
scas
xor
push
mov
enter
int
adc
mov
dec
inc
fcmovnu
aam
int
stc
fwait
dec
mov
fnstenv
out
adc
pushf
jo
and
sub
js
add
xchg
out
sbb
add
cmp
push
or
test
adc
scas
bound
incl
dec
test
cmp
xchg
inc
dec
fcmovu
inc
add
in
push
in
nop
ret
iret
mov
xchg
jne
incl
hlt
sub
lods
pop
daa
repnz
bound
lcall
sbb
into
dec
or
dec
sub
dec
cld
inc
mov
mov
sarb
push
out
out
popa
and
mov
rcl
iret
test
mov
call
mov
pop
rcl
cmpsl
xchg
fwait
push
aas
enter
popf
sub
mov
xchg
sub
sbb
xchg
into
xchg
add
push
dec
das
pop
fistl
test
in
dec
push
test
push
jb
in
push
jo
xor
cltd
out
ss
jnp
mov
cmpsl
lds
loope
lret
andb
pop
popa
xchg
xchg
push
icebp
imul
fdivrs
popa
mov
cmp
xor
pop
inc
xor
and
iret
rcll
mov
cli
stc
dec
out
pushf
dec
dec
aaa
loop
ret
sbb
dec
stc
fs
data16
clc
pop
and
aad
xchg
adc
movsl
cmp
push
mov
jecxz
lcall
cmc
pop
insl
faddp
xchg
or
cli
pusha
cltd
add
push
cltd
dec
dec
leave
add
scas
push
add
xor
stc
loop
nop
xor
inc
repnz
xor
mov
fiaddl
mov
popf
xchg
cli
pop
fadds
and
mov
psubsb
js
fisttps
lret
mov
addr16
adcl
push
mov
cli
and
mov
xorl
data16
xor
adc
add
sub
mov
roll
jb
imul
push
ret
inc
cltd
lods
pop
in
fdivrl
inc
jno
mov
jge
lret
xor
outsl
popfw
xor
mov
lods
loop
cmp
xchg
ja
fmuls
pop
adc
shl
test
in
das
lea
pop
mov
add
enter
jns
cld
out
adc
and
movsl
inc
mov
and
mull
test
incb
mov
fsubrl
pop
or
mov
push
xlat
xchg
push
fsts
rolb
movsl
leave
or
pop
loopne
cmp
jge
sar
in
lret
sub
jg
in
pop
jnp
jle
outsb
hlt
cmp
xchg
cltd
cs
mov
inc
aas
jecxz
scas
cld
mov
pop
push
mov
jge
call
adc
and
and
xor
ret
test
ja
mov
stos
push
or
adc
mov
lcall
inc
jo
fdivl
sbb
add
cmpsb
adc
cmp
outsb
jns
jno
addr16
sbb
arpl
adc
icebp
sarb
loopne
cld
sbb
loopne,pt
dec
aad
xchg
pop
out
cwtl
jg
loope
icebp
add
mov
jge
cmp
sahf
push
jb
sbb
or
sbb
or
add
push
addl
dec
dec
mov
adc
iret
jns
mov
jne
fadds
sbb
pop
mov
and
mov
xchg
mov
push
aad
sub
pop
shrb
lds
fildl
push
les
aaa
std
jmp
aam
cld
test
jl
pop
int3
mov
das
xchg
dec
aad
or
aas
cmp
loopne
fadds
push
lds
ja
outsb
mov
clc
pop
jbe
call
mov
mov
dec
and
decl
loope
xchg
add
imul
or
xor
mov
popl
mov
jmp
pop
das
push
sahf
fisubrl
xlat
popf
inc
mov
xchg
xchg
cld
in
mov
xchg
cmp
jo
loop
sbb
cmp
sbb
mov
fistpll
push
xchg
pop
dec
cwtl
mov
shlb
mov
test
push
lods
jmp
and
jne
jge
xchg
popa
xor
ljmp
shll
adc
xchg
push
ljmp
addb
mov
dec
lcall
xchg
ds
popf
mov
add
aas
lds
and
or
fmull
jne
clc
mov
lcall
xlat
mov
stos
mov
fiaddl
popa
pop
int3
and
xor
lds
cmp
pop
fstpl
int
mov
addr16
mov
imul
jnp
pop
shlb
mov
and
out
dec
sbb
add
dec
xor
cmpsl
clc
pop
in
xlat
fldcw
mov
std
in
cmp
add
fs
pop
adcb
filds
add
or
or
enter
hlt
mov
mov
push
out
cmp
pop
jno
clc
adc
xor
and
pusha
stos
jae
xchg
movsb
das
add
arpl
outsb
mov
sub
jnp
xchg
aaa
out
inc
aaa
test
jmp
int
xchg
pop
add
mov
xor
movsl
adc
and
push
mov
inc
cmp
movsb
mov
faddp
push
or
sbb
or
icebp
in
dec
sub
lock
mov
jmp
inc
cmpsb
shrl
mov
fldt
cmc
cmp
sub
inc
cmpsb
andl
dec
jno
mov
push
xlat
movsl
inc
fstps
sbb
in
lods
lea
stc
pop
dec
lds
adc
shl
dec
loope
jb
jns
jno
or
cmc
xchg
adc
jo
or
sub
out
int3
inc
fwait
mov
mov
mov
cwtl
stos
insb
jp
sub
dec
int3
or
or
pop
or
cld
inc
ret
stc
sbb
xor
push
inc
pushf
bound
shl
out
in
or
mov
cli
test
add
shll
pop
aam
xchg
je
repnz
iret
cmp
adc
add
lret
push
or
sbb
add
ljmp
loop
cld
lea
ljmp
dec
cwtl
sbb
jmp
stos
jl
cmpsl
andb
and
xchg
in
push
add
inc
in
pop
jmp
pop
or
rolb
aad
insl
imul
push
test
xchg
adc
cld
cmp
repz
cmc
hlt
push
cmc
mov
inc
out
inc
mov
or
incb
in
pusha
and
aam
and
movsl
jae
lahf
lods
cltd
cmp
mov
and
and
pop
cwtl
inc
sti
cld
cli
stc
cmpsb
dec
aas
es
xchg
inc
pop
inc
in
fs
lret
dec
push
cltd
push
movsb
das
sub
arpl
call
inc
sbb
cmp
std
adc
pop
test
movsb
in
sub
inc
ror
add
pusha
add
adc
push
xor
xchg
lcall
and
in
pop
jo
mov
adc
xchg
sahf
or
in
mov
mov
lods
dec
adc
jns
xchg
test
ljmp
fsts
xorb
nop
pop
pop
push
jp
xor
sub
mov
pop
dec
sub
in
and
xchg
ret
sahf
inc
nop
sub
xchg
xchg
push
mov
pop
loop
aam
in
sbb
mov
incl
in
jb
loope
dec
js
pusha
int
adc
arpl
xchg
fcompl
pop
nop
push
sbb
mov
int
andb
in
mov
shll
jge
pushf
cmpsb
shr
fld
and
ljmp
pushf
lods
fucomip
push
out
jb
add
data16
sti
sub
not
jl
add
cmp
pop
inc
and
adc
addb
add
fwait
mov
jnp
stc
loope
dec
aas
ljmp
push
jp
and
aaa
lea
mov
mov
dec
and
popa
orb
pop
or
xor
sub
dec
cmp
jne
sbb
shr
push
imul
stos
mov
sub
ds
aad
out
jne
ficompl
stos
cmp
cmp
and
scas
out
scas
std
or
add
xchg
adc
pushf
stc
xor
in
xchg
andb
push
adc
int
sbb
xchg
inc
out
in
mov
mov
mov
pop
shr
pop
cmp
movsb
inc
stc
js
mov
jecxz
mov
bound
adc
mov
mov
xor
mov
jne
add
iret
sub
pop
cli
cmpsl
inc
dec
xchg
pop
in
xor
imul
pop
dec
add
loop
xor
add
ror
mov
jmp
jns
cmpsb
popf
sbb
insb
js,pn
push
inc
jp
loop
insb
sbb
cmp
out
subl
or
gs
jmp
add
xorb
scas
xchg
jmp
mov
cmc
jecxz
xchg
rep
imul
rcrb
mov
push
sub
and
orl
push
nop
ja
lret
imul
sbb
ficoml
fnstcw
repz
mov
imull
inc
mov
fst
mov
or
js
ss
mov
pop
jb
and
inc
cwtl
push
cmpsl
xchg
sti
push
sbb
inc
cmp
fs
ss
add
xlat
push
jb
add
jp
and
adc
dec
loopne
sbb
je
push
xor
sbb
int3
mov
and
fs
or
cmpsb
aam
mov
push
xchg
sub
scas
testb
mov
sbb
push
mov
enter
mov
sub
dec
push
cmp
int3
stos
hlt
mov
leave
and
in
inc
cmp
nop
jge
mov
jo
and
lret
add
xlat
lods
lods
cli
popa
addl
sbb
fs
hlt
xchg
lea
out
jl
fistps
shrl
sbb
sbb
cmp
push
cwtl
mov
or
dec
add
hlt
xchg
in
pop
je
adc
xor
in
sub
dec
aad
jbe
out
outsb
dec
and
push
cltd
pop
andb
leave
xlat
mov
movsl
daa
cmp
es
add
and
aam
xor
and
xor
lods
lret
loope
cmc
jge
cli
mov
sahf
xor
mov
mov
lods
fidivrl
dec
dec
inc
les
mov
movsb
shufps
cmc
pop
xor
data16
test
jle
daa
enter
movsb
leave
pop
adc
daa
ret
adc
push
ret
cmp
shlb
sbb
or
push
in
push
push
xchg
push
xchg
sbb
repnz
iret
cmp
jae
fadds
ss
sbb
xchg
push
roll
out
mov
shr
outsb
fs
out
insb
sti
sarl
jne
test
arpl
les
push
fldcw
cld
shll
fnstenv
shll
movsb
mov
ret
ret
out
dec
and
lahf
dec
mov
popa
insl
repnz
sbb
cmpsb
inc
push
popa
mov
dec
add
lods
sub
mov
rol
and
rclb
sub
out
loopne
sub
mov
dec
push
pop
out
mull
in
test
das
mov
dec
fistpll
sbb
jmp
hlt
das
sub
or
fildl
sbb
incb
fisubs
pop
sub
out
cmp
repnz
shrl
sub
dec
mov
jae
inc
ja
insb
or
jae
cmpsb
mov
mov
shlb
dec
imul
xchg
push
addl
repz
inc
sti
mov
xchg
adc
call
fisubrs
push
xorb
movsb
add
xor
enter
xor
adc
ret
pop
pop
push
out
cmc
int3
jmp
nop
sarl
mov
in
subb
icebp
or
popf
xor
push
xchg
ret
pop
xchg
add
mov
mov
aaa
mov
ss
call
mov
mov
in
jbe
mov
jle
mov
leave
sbb
jbe
adc
stc
xor
push
jg
popa
push
out
subl
xchg
pop
iret
or
push
pop
mov
mov
or
roll
mov
sbb
mov
sbb
sbb
xchg
test
xchg
push
xchg
mov
xchg
cld
mov
sbb
bound
lea
fmuls
movsl
push
adc
push
cmp
insl
xor
lret
mov
push
mov
stos
dec
mov
dec
mov
xor
in
loope
dec
lock
cli
pop
sub
icebp
mov
ljmp
mov
push
or
inc
adc
mov
xchg
arpl
pop
in
sub
dec
or
bound
and
mov
orb
shlb
dec
push
sti
int3
mov
cltd
jae
and
inc
lock
jg
test
push
sbb
rol
mov
and
call
or
data16
test
movsb
add
lahf
inc
pop
mov
inc
cmp
imul
mov
sub
pop
mov
stos
out
aam
js
bound
ds
jb
int
popa
inc
and
xor
dec
sti
and
popl
sbb
lods
pop
mov
push
fxch
pop
roll
sub
ret
or
xor
sub
cli
ljmp
jne
ljmp
add
add
lds
xor
xchg
add
xchg
loope
jbe
jnp
push
xor
outsl
shlb
fwait
xchg
pop
das
add
and
sbb
fdivrl
jl
adc
add
pushf
push
int
lods
leave
repnz
test
scas
xchg
xor
adc
addr16
fstl
push
or
clc
push
jo
adc
int3
out
xchg
movsl
sub
adc
popa
jge
fsts
lret
adc
repnz
subb
dec
add
sub
adc
adc
movl
addl
mov
mov
mov
aaa
pop
mov
popf
xor
mov
jnp
ret
arpl
fwait
shll
bnd
roll
mov
mov
aam
outsl
test
and
mov
cmp
cmp
inc
dec
stos
pop
cmpsl
hlt
cwtl
mov
cmc
cs
and
lret
cmpsb
ret
xchg
xchg
jl
rol
sbb
loop
mov
popf
and
je
scas
dec
mov
insl
cltd
sub
frstor
nop
repnz
sbb
and
stos
dec
out
adc
or
fs
pop
cmc
rcrb
pop
jbe
int
pop
lods
xor
sarb
call
pop
and
push
mov
mov
in
jns
pop
mov
add
ljmp
iret
mov
mov
flds
gs
aas
out
push
ret
inc
fs
inc
out
or
cmpsl
xchg
dec
out
rorb
lods
pop
and
jg
mov
pop
out
inc
inc
inc
imul
incl
jecxz
or
mov
jo,pn
clc
dec
or
fisubs
pop
fdivs
push
movl
inc
je
or
aaa
add
push
testb
mov
mull
or
jnp
dec
scas
ds
int
nop
adc
add
rcl
mov
js
cmp
addr16
add
inc
gs
scas
es
subb
mov
or
mov
jmp
mov
outsl
lock
add
sbb
push
lret
mov
dec
pop
inc
imul
jae
outsl
push
icebp
lea
xor
cli
mov
stos
xchg
dec
lret
shr
cmpsl
lea
lcall
xor
or
out
xchg
out
das
lods
repz
pop
dec
lahf
testl
sbb
ds
and
pushf
and
arpl
loop
mov
outsl
es
jno
mov
mov
cmpsb
je
sbb
sub
xor
xchg
jbe
mov
shrb
jns
outsb
jno
int
repz
in
ja
idivl
fs
fwait
sub
mov
mov
jg
dec
xor
cli
jge
jne
dec
ret
xchg
ja
or
push
xchg
cld
out
xor
or
add
fwait
daa
imul
mov
enter
adc
mov
jmp
inc
rcl
rcrl
mov
push
mov
out
pop
push
fsubr
adc
pop
xor
adcb
lods
orl
pop
xor
sub
test
xor
sbb
inc
sub
dec
pop
leave
xlat
jecxz
jns
pop
fnstenv
test
lcall
and
mov
xorl
mov
inc
cmpsl
push
mov
push
movsl
cmp
jnp
out
insb
push
or
enter
lods
xor
js
mov
aam
std
mov
call
xor
nop
mov
lds
mov
mov
andb
mov
cmp
lret
dec
cmp
icebp
dec
push
bound
inc
push
lret
push
lods
outsb
imul
xchg
adc
test
mov
push
jmp
mov
pop
subb
xlat
sub
adc
imul
data16
negl
bound
int
jb
mov
test
rorl
in
rorb
mov
sbb
pop
xchg
dec
scas
fiaddl
xor
mov
and
or
inc
adc
icebp
pop
pop
add
icebp
sbb
cmpsl
std
cmp
popf
mov
test
js
out
insb
cmc
rcrl
inc
dec
push
push
daa
inc
pop
gs
lods
iret
andl
js
fstps
out
mov
inc
mov
mov
adc
stos
xor
xchg
pop
sub
pop
mov
sub
ret
rcll
push
sbb
push
xchg
xor
test
jno
std
add
std
mov
jl
into
repz
andl
addr16
mov
xor
aas
test
lcall
add
jg
out
xchg
jecxz
sbb
mov
or
fstl
or
test
and
test
pop
lret
dec
clc
xor
call
jl
lcall
mov
jge
scas
xchg
dec
loop
jne
mov
pop
push
enter
inc
rcrl
sbb
in
sub
out
cs
pop
xchg
sbb
mov
or
and
adc
pop
jo
fwait
cmpsb
iret
imul
adc
and
sbb
jbe
adc
into
pop
fidivs
aas
or
mov
add
rcr
and
lock
sub
xor
cld
xchg
cmp
popf
jmp
lods
mov
adc
test
lcall
ret
movsb
sbb
fisubs
ret
adc
jns
sub
inc
iret
out
fldcw
iret
loope
sub
cmc
cmp
inc
mov
mov
inc
popa
mov
mov
repz
loopne
sub
bound
inc
aas
inc
pop
mov
mov
lods
aad
sti
dec
das
jmp
addr16
sbb
sbb
aad
mov
sub
inc
mov
test
jecxz
and
call
out
loope
outsb
push
sub
cmp
das
sub
adc
subb
adc
lcall
mov
mov
mov
flds
sahf
mov
pop
sub
push
or
cmp
jb
cmp
insb
mov
adc
xor
jo
les
inc
pop
leave
add
andb
jmp
push
xchg
jp
repnz
lock
adc
inc
movsl
pop
stos
xor
and
std
pop
or
sbb
xchg
jne
jbe
ret
jbe
in
movsb
push
mov
rcrl
push
lds
cmp
or
pop
push
insl
mov
push
or
sub
jmp
daa
and
push
dec
stos
cmp
xor
mov
jge
xorl
mov
sbb
stos
fincstp
rorl
jae
lea
repnz
lock
pusha
call
jmp
cltd
repz
add
sbb
pop
and
mov
addr16
test
insb
xchg
in
movsb
push
in
decb
ds
xorl
adc
adc
cwtl
mov
jb
mov
jno
addl
dec
out
cmp
enter
mov
loope
mov
iret
sbbb
sbb
mul
cmc
dec
inc
mov
repz
es
icebp
fstpl
push
loop
xchg
sbb
int3
dec
mov
adc
out
push
push
jecxz
sahf
mov
popf
add
jns
mov
in
aam
test
dec
jbe
roll
xor
mov
cmpsb
adc
jmp
sbb
aam
loope
outsl
enter
stc
shl
mov
add
sbb
pop
out
cmc
jg
pop
sti
sbb
incl
inc
sub
sahf
sub
fsts
movsl
push
idivl
ret
sbb
popf
aaa
ffree
adc
hlt
mov
popa
add
fwait
pusha
xor
cwtl
in
adc
out
test
dec
ljmp
push
adc
lret
add
jle
test
xchg
sbb
data16
jle
fcomp
jl,pt
add
fisubs
xor
pop
and
dec
shr
push
fisttpl
jge
mov
scas
test
jl
movhps
push
adc
jl
fwait
or
xor
jne
xchg
push
das
int3
mov
ret
ljmp
insl
fistpll
cmp
xchg
cmp
mov
jae
push
loop
mov
not
pop
mov
mov
add
xchg
movsl
cli
data16
cmp
ja
leave
jnp
std
cmpsb
shrl
insb
sbb
bound
mov
into
xor
movsb
push
popf
jae
out
dec
adc
pop
test
mov
pop
aaa
daa
iret
es
or
incb
pop
test
das
add
pop
test
pop
sub
or
adc
add
stos
cmp
xor
mov
xchg
push
roll
xcrypt-cbc
cmpsl
push
pop
ja
mov
mov
jnp
aam
pop
adc
jno
sbb
loope
push
lret
idiv
les
ret
repz
fbld
dec
xor
insb
lods
call
push
jno
xor
jg
jge
mov
sbb
or
das
loop
inc
mov
xor
xlat
add
push
imul
and
cltd
mov
push
clc
stos
and
or
out
repnz
ret
or
stos
cmp
xor
shl
loopne
rolb
fisubs
rolb
rclb
jle
mov
into
jmp
or
sbbl
jns
pop
aam
jno
pushf
jl
mov
dec
push
mov
popf
jg
inc
adc
sub
dec
mov
js
ja
popf
rol
fyl2xp1
jg
xchg
mov
clc
mov
sbb
mov
pushf
cmp
cmpsl
mov
xchg
add
insl
xchg
out
cmp
fdiv
pop
mov
mov
in
insl
leave
dec
adc
add
scas
or
pop
fcoml
dec
inc
imul
ror
mov
sub
lea
lcall
push
test
lock
ljmp
hlt
popf
pop
sbb
repnz
inc
bound
js
lds
inc
jbe
sub
sbb
in
pop
jae
push
mov
add
lds
idiv
inc
jmp
sub
test
adc
jo
repnz
jae
pusha
mov
scas
xchg
xorb
movsb
cld
enter
mov
pop
popa
mov
leave
jecxz
pop
addr16
mov
orb
xorl
int
std
sbb
mov
inc
mov
cmpsl
ljmp
cmp
cs
lds
and
pushf
xor
loop
icebp
xor
cmp
ret
out
inc
rclb
pop
cmp
inc
addr16
dec
adc
xor
ljmp
and
jp
pusha
jns
leave
popa
sbb
push
sti
outsl
mov
inc
add
or
adc
scas
mov
lcallw
pop
in
sti
pop
mov
negw
test
push
rclb
xchg
add
cmp
fldenv
in
adc
and
inc
inc
incb
add
iret
out
add
mull
filds
aam
mov
cmp
mov
ja
pop
fistl
clc
mov
pop
cmc
push
push
ljmp
stos
pop
inc
mov
sub
leave
sub
cmp
cmp
pop
sqrtps
xor
andb
ljmp
movsl
inc
jge
imul
enter
xlat
aam
sbb
pushf
test
arpl
xorl
pop
pusha
jmp
adc
mov
mov
out
xchg
jmp
sarb
nop
mov
stos
inc
mov
mov
adc
xor
mov
jo
mov
cmpsb
lret
mov
icebp
out
dec
cld
aas
mov
or
scas
mov
lcall
mov
jb
jns
fdivrl
adc
xlat
cmp
add
ret
mov
mov
fcompl
cmp
mov
sbb
into
pop
pop
jl
mov
inc
pusha
add
shlb
mov
mov
mov
mov
cld
jbe
dec
lret
xchg
nop
and
mov
adc
repnz
repnz
inc
cmpsb
ret
fistpll
ja
bound
inc
iret
lcall
daa
mov
dec
rolb
call
dec
and
insl
xor
outsb
mov
aad
ljmp
repz
push
mov
outsl
cwtl
jae
scas
out
popl
pusha
int
iret
push
test
push
cltd
dec
add
xchg
std
pop
adc
and
mov
aam
fwait
sbb
mov
sahf
xor
sahf
or
or
jno
adc
dec
mov
jp
iret
add
push
cli
lret
jg
es
sub
loopne
add
jg
loope
or
loopne
cmp
mov
movsb
test
mov
test
push
ret
pop
sub
repz
sti
cmc
popa
mov
push
aas
int3
fstl
lret
data16
mov
inc
mov
xchg
or
inc
nop
rorl
push
sbb
inc
mov
mov
lock
mov
adc
dec
sahf
pop
movsl
sbb
in
sub
add
mov
and
das
ficoms
mov
cld
mov
cmp
scas
jo
inc
lods
xor
sub
frstor
pushf
xlat
jb
push
mov
add
inc
dec
ret
lds
dec
cmc
fcom
xor
xchg
sti
pushf
fstpt
lds
repnz
popa
push
cwtl
cmp
adc
or
std
inc
push
mov
push
fs
rorb
add
inc
push
shrb
cmp
sahf
push
push
add
pop
outsl
scas
mov
mov
out
lea
or
dec
xchg
sub
sub
mov
mov
testl
or
cmp
jle
clc
jmp
dec
ss
addr16
icebp
lock
xlat
faddp
adc
js
fstpt
pop
inc
push
ljmp
sub
push
mov
xor
loope
mov
lret
dec
or
xor
adc
nop
pop
sub
xchg
imul
mov
out
cmp
loop
lahf
push
cmp
xor
mov
cmp
out
test
dec
jae
sub
fcmovnu
jne
xchg
rcr
jns
insb
xor
out
fcmovnu
cmp
in
inc
imul
cltd
mov
jge
outsb
lods
cmp
push
je
mov
cmc
and
mov
in
push
out
jle
out
jnp
fnstcw
xor
sub
add
out
push
test
ja
cmc
mov
or
cmp
out
xor
mov
push
mov
fidivs
push
in
mov
das
shrl
insl
inc
ret
push
add
packuswb
int
push
arpl
pop
jae
mov
fisubs
leave
repz
sub
imul
mov
add
xor
sbb
loop
lods
imul
mov
xor
cmp
pusha
sahf
mov
sub
fwait
mov
jne
inc
inc
jmp
lods
das
out
lret
and
cwtl
dec
cwtl
cltd
jae
sub
mov
mov
fnsave
pop
imul
or
negl
jno
push
enter
out
mov
or
push
xor
or
aas
or
repnz
loop
pop
mov
outsb
mov
pushf
push
mov
lea
mov
add
pop
jecxz
popa
ret
cmp
and
pop
jnp
pop
out
cmp
mov
cli
mov
inc
add
adc
sub
out
inc
inc
out
loope,pn
mov
inc
dec
cmp
pushf
xchg
xchg
dec
movsl
dec
add
bndldx
push
ds
movsl
xchg
adc
clc
adc
xchg
dec
fmuls
ja
jp
push
adc
scas
imul
jg
jge
leave
inc
mov
mov
in
mov
roll
inc
xor
jmp
xchg
mov
mov
mov
or
and
lods
shrb
test
xchg
loopne
jbe
test
loope
sti
fsts
cmp
cltd
sahf
mov
subl
and
iret
dec
adc
sbb
lods
ret
push
pop
cwtl
or
mov
mov
test
imul
mov
dec
je
xorl
adc
push
and
sub
ds
das
xchg
and
cmpsb
call
sbb
repz
cmp
mov
negl
jne
inc
inc
pop
xor
cmp
in
lret
je
lds
xor
adc
push
or
sbb
dec
addl
cmp
lods
push
lds
fcmovnbe
push
push
sahf
push
mov
jb
getsec
sbb
inc
or
pusha
popf
pop
std
nop
mov
in
mov
pushf
sub
ja
shrb
inc
or
movsl
pop
imul
jg
mov
insb
xor
mov
mov
and
test
rolb
clc
mov
mov
in
mov
xchg
test
out
sbb
sbb
xor
inc
push
sub
ss
xor
movsl
push
nop
xlat
mov
cld
cmp
repnz
icebp
mov
lret
mov
daa
pushf
push
sbb
out
or
ljmp
cwtl
adc
lret
daa
stc
int3
out
insl
andl
ret
orl
jle
pop
xor
adc
stc
mov
inc
cs
lods
xchg
sbb
cmp
xchg
rcl
loop
arpl
leave
test
mov
pop
imul
and
pop
xchg
daa
inc
movsl
mov
inc
dec
iret
aam
mov
jecxz
rol
into
pop
lds
rcrb
or
ds
ljmp
out
xor
ljmp
std
pop
push
push
in
or
push
test
and
ret
jae
cmp
jg
cmp
jl
sbb
pop
xchg
das
rorb
popa
push
in
jmp
xchg
ljmp
dec
enter
adc
mov
jmp
lods
aad
aad
std
dec
loop
jno
lcall
lods
mov
pop
sbb
imul
loop
out
pop
push
mov
pop
xor
push
fcomp
push
dec
dec
xor
jne
cmp
jp
in
out
cwtl
jno
jmp
int
push
cmp
cltd
adc
into
adc
hlt
insb
lret
and
divb
lret
mov
scas
jge
lods
dec
das
dec
jp
bound
sbbb
lahf
jmp
mov
xchg
xchg
stos
and
rol
add
mov
jns
mov
rol
xlat
sahf
rcrb
cmpsl
lods
jns
cmp
outsb
adc
sub
jmp
stc
sbb
push
sub
mov
xlat
sub
lock
sarb
dec
in
xchg
loope
add
cmp
sub
sbb
stos
int3
and
dec
popa
pop
sbb
cltd
dec
popf
lahf
dec
lret
mov
xor
jge
cmc
add
mov
incl
scas
ret
mov
cwtl
fnstenv
ss
add
addr16
stos
pop
lods
dec
pop
sbb
dec
dec
adc
outsl
mov
ret
pop
cmp
je
das
fcomps
in
jp
jae
jbe
sub
sbb
mov
leave
jnp
mov
int3
sub
adc
inc
ret
add
push
dec
inc
ja
xor
sbb
rcrb
int
mov
inc
out
push
fidivrl
subb
mov
in
add
mov
test
jb
stos
sub
xchg
mov
out
xchg
push
add
xchg
mov
jge
iret
aaa
lods
dec
cmp
flds
pop
or
mov
aam
mov
lods
sub
sbb
xchg
mov
repz
shl
in
mov
cmp
pop
cli
ret
iret
jmp
add
lea
sbb
test
xor
sbb
out
xor
fsts
adc
or
dec
jl
call
push
andl
inc
rcrb
lcall
pop
pop
lds
push
push
lret
insl
jns
add
lcall
pop
cmp
mov
pop
xchg
lds
cltd
lock
aam
push
test
sbb
fsubl
sarl
jbe
jae
inc
js
ret
jecxz
popf
jbe
sbb
andb
pop
movsb
sub
and
mov
cmpsl
adc
movsb
xchg
loope
testl
sub
push
daa
rolb
in
stc
imul
pop
xchg
stos
mov
cmp
jo
rcl
jne
rcrl
insb
outsb
and
add
imul
pop
adc
jecxz
divl
sbb
decb
scas
stos
es
pop
mov
enter
cmc
in
repz
icebp
mov
std
or
xlat
out
xor
mov
sbb
fnstsw
in
jne
pop
adc
inc
in
fstpl
in
or
jmp
adc
imul
fwait
ss
and
mov
jp
pop
movsl
sbb
sbb
bnd
int
cmp
daa
arpl
aam
loop
flds
mov
lret
ss
mov
mov
or
fwait
jmp
ficompl
mov
adc
inc
scas
jge
and
mov
cwtl
out
lret
sbb
pop
std
ljmp
leave
sub
mov
mov
cs
pop
loopne
mov
hlt
in
push
push
mov
cmp
mov
fnstsw
testb
jb
pop
fsts
inc
mov
and
sub
xchg
and
addr16
inc
mov
out
mov
xchg
mov
std
lods
imul
xchg
aad
jmp
ret
inc
mov
fiadds
push
xchg
inc
jmp
outsb
or
dec
cmp
loope
scas
rcrb
popa
fstl
sbb
and
loope
jmp
insl
je
jle
in
aaa
xchg
dec
les
cmpsb
adc
dec
jge
push
pusha
inc
sub
imul
push
subb
mov
and
shrb
pop
jne
or
adc
icebp
mov
lret
push
int
pushf
es
out
mov
pop
lahf
testl
xchg
dec
mov
shlb
lahf
xchg
and
call
mov
adc
aas
out
add
jnp
xor
xchg
loope
rol
xchg
outsb
in
lret
dec
mov
call
leave
xchg
iret
xor
sub
or
lds
test
je
shll
mov
mov
mov
inc
mov
cmp
aam
fsubrl
aam
lds
hlt
lcall
fwait
xchg
stos
inc
icebp
xchg
mov
dec
push
fbstp
pop
cmp
fsubrp
adc
lea
sbb
xchg
inc
stos
or
ja
or
popf
and
outsl
in
inc
insb
xor
popa
jl
push
outsl
jbe
sbb
adc
xor
or
xchg
jmp
jns
sub
sub
push
pop
sub
mov
out
mov
mov
add
loop
mov
clc
and
scas
mov
in
and
vcvtdq2pd
sarl
mov
xchg
lods
add
enter
arpl
cmp
add
add
pop
fcmove
fistps
add
out
dec
xchg
insl
adc
test
icebp
js
lcall
jge
fisubrs
mov
inc
aad
insl
jns
add
inc
push
sbb
adc
push
xchg
icebp
mov
dec
movsb
mov
jge
gs
cltd
bnd
rorl
pop
inc
popa
cmp
js
hlt
addr16
xor
test
fldl
cld
cmp
arpl
data16
mov
daa
xchg
loopne
imulb
dec
mov
iret
andl
orb
cmp
inc
ficoml
or
mov
ss
mov
pusha
in
and
gs
movsb
imul
orl
lods
iret
hlt
jbe
mov
jge
fnstcw
mov
pop
sahf
cmpb
cli
add
test
test
push
ss
jmp
sahf
aad
mov
cwtl
fwait
pop
in
fldcw
sbb
adc
mov
xchg
arpl
xor
test
or
bound
ljmp
or
adc
inc
adc
pop
or
mov
icebp
mov
es
mov
jnp
sub
lea
fisubrs
fisttpl
fists
dec
mov
repz
sarb
jmp
scas
cmc
cli
xchg
inc
inc
into
cmpsl
sub
lds
or
and
inc
stc
lcall
inc
adc
je
sbb
js
stos
xor
sub
inc
js
jno
adc
cmp
es
sbb
xor
push
pop
hlt
jmp
adc
and
movsl
mov
cmp
xor
mov
push
cmp
shr
xchg
mov
or
stos
sahf
pop
bound
fstpl
pop
cli
lret
jp
fnstcw
outsl
mov
aas
frstor
sbb
ja
fdivrl
aad
fs
ljmp
push
lret
dec
or
cwtl
jp
vmovshdup
sub
cmpsl
test
xchg
ret
dec
jecxz,pn
xor
hlt
inc
xor
jae
aaa
mov
pop
pop
nop
add
pushf
sbb
cmp
dec
push
xor
jns
push
repz
daa
ficomps
sar
mov
imul
mov
test
inc
inc
hlt
in
cmc
pop
jns
sti
jae
mov
stos
xchg
repz
add
push
and
and
fists
pop
stc
jg
fcoml
pusha
jns
sub
fidivrl
popa
and
mov
push
or
and
pusha
xor
adc
icebp
fldl
fldcw
out
mov
lods
and
nop
inc
ss
and
push
iret
jnp
jmp
push
in
xchg
mov
sub
repnz
pop
push
outsb
cmp
popf
lds
icebp
mov
out
in
mov
negb
loop
and
mov
mov
cmc
fmuls
fwait
inc
adc
subl
adc
mov
xchg
rorl
adc
add
cmp
movsl
and
stc
bound
iret
js
cmp
adc
sbb
fiadds
rcrl
aaa
and
xor
pop
or
outsl
mov
andb
sbb
cs
or
push
dec
mov
repz
test
inc
bound
mov
imul
mov
fbld
mov
cmp
divb
adcb
mov
ljmp
pop
sbbl
mov
or
cmpsl
pop
mov
xchg
inc
movsl
fisubl
enter
sub
outsl
jge
stc
sbb
dec
ljmp
mov
subb
into
movsl
mov
int3
sti
dec
addr16
dec
dec
mov
mov
les
mov
mov
dec
jl
sub
xchg
dec
sbb
decl
push
lahf
xchg
and
push
dec
fsub
aaa
cmc
lret
add
icebp
push
inc
test
push
cmpl
lods
xchg
adc
xor
sub
lcall
out
jmp
addl
divl
jne
imul
xor
push
pop
jecxz
testb
jmp
sahf
jns
xchg
xchg
mov
repnz
xlat
fsubs
and
pop
xchg
fldl
jmp
sbb
std
int3
sub
in
out
push
aad
in
ss
sub
insl
mov
loop
dec
popa
jo
stos
mov
sub
xlat
test
push
jb
mov
inc
or
movsb
mov
pop
mov
cmc
insb
push
sub
clc
xchg
xchg
dec
sbb
fs
jnp
lea
xorb
lods
adc
mov
sahf
mov
mov
sbb
cmp
stos
es
cmp
xchg
xlat
sbb
fsubp
setbe
mov
popf
andb
add
cmp
pusha
xlat
xor
pop
jnp
mov
cmpsb
arpl
sbb
aam
mov
mov
stc
ja
aad
xchg
jl
mov
movsb
pop
std
or
dec
movsb
repnz
ja
iret
push
pop
loopne
mov
jnp
imul
mov
cmc
lods
mov
inc
mov
cmp
lock
inc
stos
enter
fstpt
lods
dec
loope
aam
jno
mov
test
into
add
cmpsl
and
ror
arpl
int
sub
cmpsl
outsl
enter
lea
jne
push
push
jne
mov
cld
xlat
ret
pop
or
cmp
icebp
dec
pusha
mov
scas
data16
inc
cmpsb
add
push
fdivs
cmp
inc
cs
mov
je
pand
ja
dec
add
dec
ss
push
fisubrl
ljmp
lahf
jne
push
flds
mov
pop
jp
test
mov
mov
add
rcl
fs
sub
push
sub
loop
sbb
das
ljmp
xchg
adc
addr16
insb
or
cmp
jnp
stos
sub
pop
push
xchg
jnp
sub
push
dec
pop
js
push
imul
xor
inc
jbe
hlt
or
sbb
les
fisttps
inc
push
movsb
dec
mov
inc
fbld
dec
orl
mov
jno
adc
jb
shlb
add
mov
popf
inc
dec
in
mov
stos
cld
out
fsubrs
pop
sub
lods
inc
xor
xchg
fsubrl
push
pop
jg
sbb
std
or
push
roll
das
adc
mov
gs
loope
decl
xor
or
stos
inc
int3
adc
stos
push
and
loop,pn
imul
jb
push
es
xchg
shll
mov
sbb
mov
mov
sub
mov
jne
gs
mov
shll
addr16
cmpsl
sub
mov
add
notl
les
jb
sbb
push
in
sub
nop
push
sbb
push
sub
mov
or
mov
xchg
outsb
sbb
mov
inc
xchg
cmp
push
mov
sub
jmp
or
enter
inc
xor
mov
jae
add
lods
xchg
pop
outsl
gs
nop
out
test
mov
test
out
mov
loop
aad
leave
jbe
scas
incl
popa
rclb
rcll
jbe
inc
or
dec
sbb
mov
xchg
cs
mov
or
lock
jns
pop
bound
inc
pop
xchg
push
test
sahf
lret
cmpl
jp
and
movsl
test
orb
dec
and
sub
subl
daa
fucomi
sbb
test
nop
mov
pop
sbb
mov
iret
andl
xchg
sbb
inc
push
cld
mov
dec
aam
inc
outsl
out
xchg
fs
das
movsb
ss
cmp
pop
addr16
jmp
sti
dec
and
dec
rolb
roll
inc
push
je
sbb
shl
add
inc
jnp
adc
fnstenv
mov
mov
sub
pop
xchg
mov
cmp
ja
sbb
popa
int
jl
and
outsb
xchg
cli
cwtl
cmp
movsl
loope
sbb
repz
push
out
pop
in
call
ss
mov
push
into
mov
lahf
daa
sti
inc
fcmovb
into
clc
sub
inc
jbe
mov
xlat
mov
mov
sbb
cld
adc
movsl
mov
std
repnz
jno
leave
mov
mov
xchg
sbb
fcompl
and
lahf
rcl
nop
pop
xchg
lret
jp
xchg
push
mov
stos
mov
pushf
dec
jmp
lahf
and
ja
jle
mov
and
test
pusha
xchg
xor
sub
xchg
sahf
cli
sbbb
mov
dec
pop
adc
clc
filds
out
add
out
stos
dec
jmp
pop
sbb
xchg
fdiv
or
xor
cwtl
cmp
sbb
rcr
xor
lcall
dec
addl
in
or
or
jo
and
ret
jmp
imul
push
data16
in
movsb
ret
mov
stos
pop
inc
loopne
insl
data16
lret
mov
repz
adc
jne
insl
fidivs
adcb
sbb
add
jnp
lds
push
add
sbb
xchg
fisubl
daa
mov
mov
out
mov
clc
int3
repnz
dec
out
sbb
mov
pop
in
mov
test
push
clc
lahf
mov
lock
and
xchg
mov
mov
xchg
outsb
add
xchg
mov
push
mov
mov
rcll
stos
and
sbbb
leave
push
jp
pop
and
and
in
scas
out
mull
sub
test
addr16
loopne
jne
aam
call
and
lods
addr16
xor
xchg
mov
xor
mov
dec
fmul
sbb
idiv
xor
push
adc
push
mov
mov
mov
sbb
sbb
pop
int3
jnp
loop
stos
pop
lds
jo
inc
jae
xchg
fdivrl
pop
aaa
jne
adc
nop
ja
hlt
in
dec
aam
test
jae
lods
imul
inc
sbb
out
and
mov
scas
pop
aam
fildll
js
scas
aad
pop
or
jl
inc
cmpsl
lock
in
mov
rol
sub
xor
jp
sbb
nop
mov
test
add
pop
les
push
inc
fbstp
mov
sbb
cmp
inc
loopne
dec
and
out
cmp
notb
or
bound
jb
sbbl
rcl
fwait
and
rcrb
aas
xchg
into
outsb
xlat
in
lds
mov
or
movsl
movsb
es
insb
or
or
push
scas
shrb
mov
test
out
icebp
or
in
add
int
xchg
cltd
xchg
sahf
push
sbbb
jl
int
push
inc
dec
jg
repz
pushf
pushf
sub
imul
call
pop
dec
stc
outsl
leave
jge
adc
je
ds
xor
lret
push
jp
jne
jno
js
lcall
or
mov
push
push
push
aad
cmpps
push
incb
inc
mov
mov
add
inc
ss
mov
stos
xchg
sub
aam
ss
xor
sbb
sub
xor
jp
stos
pusha
pop
call
push
js
cmpl
loope
push
std
xor
xor
icebp
daa
daa
jnp
sub
lock
cmpb
fistpl
fidivrl
in
call
fmul
loop
dec
out
push
and
imul
inc
sbb
jno
push
pop
andb
jbe
std
mov
inc
data16
dec
cmp
ret
cmpsl
repnz
mov
mov
aas
pop
std
cli
ficoms
xorl
movsl
das
xchg
mov
or
adc
fs
sar
mov
adc
sbb
stos
adc
and
shll
test
xor
lea
rcll
int3
insb
pusha
mov
push
push
adc
addr16
cmp
das
jle
pop
cmp
mov
in
popa
and
fnsave
or
outsl
ret
out
cwtl
or
ds
out
pop
and
aad
mov
dec
in
adc
rcll
test
in
xchg
jp
sub
sub
lahf
ret
test
mov
push
fnsave
jae
shlb
pop
mov
push
jnp
xchg
sub
popa
mov
lret
in
inc
shl
xchg
dec
jg
adc
add
lret
imul
add
loop
jmp
fdivs
dec
adcl
jns
sub
aad
movsl
xchg
jecxz
jp
xchg
roll
and
cwtl
xchg
fbld
jb
dec
and
xor
shll
test
cmp
xor
jmp
jae
inc
mov
mov
imull
xchg
and
popf
enterw
pushf
sub
mov
int3
xlat
cld
test
clc
push
or
or
mov
cmpsb
in
xor
mov
mov
stc
movsb
xchg
xor
cmp
jl
sub
cmpsl
pop
aas
divl
xchg
sub
sti
pop
aas
cmp
nop
ljmp
adc
loope
movsl
das
iret
cmp
sub
clc
rclb
ss
cmp
cmp
cs
and
dec
mov
dec
repnz
out
jno
inc
mov
jp
jge
push
mov
mov
adc
inc
jmp
and
jns
cmc
or
xchg
scas
cli
lods
fsubr
push
xor
fistps
out
cltd
sbb
fimuls
cli
inc
add
add
pop
jmp
fs
cli
es
adc
imulb
call
adc
bswap
mov
andb
sub
mov
or
jle
push
dec
adc
cmp
sub
je
icebp
arpl
fucomp
lock
dec
lea
mov
lds
aad
and
jo
jbe
jnp
mov
popa
ret
out
lcall
clc
xchg
fwait
repz
xchg
jnp
cmpsb
xor
mov
cmp
into
pop
out
bound
adc
rolb
push
xchg
sub
xchg
lahf
sar
stc
fdivrp
orb
or
sbbb
pop
xchg
xor
pop
and
jge
add
inc
mov
xchg
andl
lods
sysenter
xchg
stc
cld
rcrl
in
dec
mov
loope
cmp
test
lret
cmp
mov
out
jmp
mov
fidivl
mov
jbe
les
scas
mov
push
movsb
and
mov
test
bound
js
or
pushl
into
mov
or
aaa
xchg
loopne
dec
aas
lret
fs
imul
test
mov
push
icebp
mov
and
in
lahf
fwait
loope
push
pop
insl
xor
das
xor
adc
gs
mov
mov
pop
test
dec
cld
or
dec
shlb
or
test
xor
mov
jp
and
jb
js
fwait
ja
fadds
aad
stos
and
xchg
jne
ficoms
jg
pushf
pusha
aas
pop
je
mov
lods
mov
or
or
push
mov
jae
in
jne
sub
xchg
or
cmp
cwtl
js
nop
iret
lcall
dec
imull
jb
xchg
loope
and
sub
sbb
jmp
movsb
jbe
jnp
shlb
cmp
out
ss
push
mov
sbb
movsb
rcr
jae
xchg
loope
xor
dec
lea
mov
leave
shrl
add
lahf
cld
sbb
clc
out
cmpsl
adcl
std
das
fwait
pop
mov
pop
aas
dec
jne
push
orb
loop
xchg
mov
jne
xor
rorb
data16
sbb
sub
pop
sub
pop
push
sub
shr
dec
xlat
pushf
push
jecxz
gs
test
and
insb
addl
mov
cmp
xor
loopne
jmp
cmpsb
repnz
out
mov
pop
mov
sub
ljmp
test
push
push
popa
clc
pop
sbb
popf
call
mov
out
pop
cmp
and
das
jo
jmp
fcoml
iret
sahf
ljmp
lcall
jb
or
push
xlat
jmp
data16
jecxz
push
subb
and
movsl
mov
pop
out
push
int
dec
mov
xorl
scas
dec
cmp
mov
jo
out
jno
clc
mov
mov
mov
pop
leave
lret
out
test
leave
bts
ficomps
xchg
sub
hlt
dec
inc
aas
mov
add
cltd
loope
xchg
int3
or
inc
adc
push
inc
cmp
pop
stos
mov
add
inc
add
xorl
xchg
and
call
lods
cmpsb
neg
ljmp
gs
sbb
arpl
icebp
addr16
or
push
aam
cmp
data16
sub
pop
dec
aas
lahf
iret
lea
imul
pop
xchg
pop
popf
iret
call
jmp
fistpl
jb
xchg
aas
stos
mov
pusha
pop
pop
push
ret
dec
jle
xchg
lds
lret
daa
lea
ficoml
mov
shll
cmp
xor
scas
pop
cs
data16
xchg
sub
shrb
inc
sub
shrl
inc
lret
testb
test
lods
push
adc
int3
sbb
cmp
data16
sbb
sarl
in
xorb
mov
sbb
stos
add
fidivl
inc
movsb
sar
lods
jo
int3
cmp
push
leave
mov
mov
fsts
jno
xor
jo
int
mov
jb
mov
sub
cmpsb
push
push
mov
pop
sub
pop
stc
cmpsb
pop
jmp
push
and
int
adc
mov
xchg
mov
xorb
xchg
aam
lahf
divl
xor
mov
pop
push
aam
pop
and
lds
lock
sub
fisttpl
sub
inc
out
stc
dec
loop
sbb
mov
mov
sti
or
jge
mov
mov
inc
cmpl
add
test
and
jne
std
xor
pop
rcr
out
dec
mov
cltd
aaa
jb
js
dec
xchg
cmp
lcall
xor
popa
cmp
dec
sbb
xlat
mov
scas
rcrb
lods
pop
and
add
jno
loopne
pushf
push
dec
mov
jnp
ss
out
cmpsb
adc
mov
ss
and
mov
cmpl
inc
inc
sub
mov
push
mov
xchg
sub
pop
jns
imul
out
jge
lea
push
in
aaa
push
pop
dec
fadd
arpl
pop
scas
fimuls
xchg
cmp
and
mov
and
jge
cmp
ret
jmp
jo
xchg
xlat
push
aas
loop
xchg
imul
leave
call
mov
adc
mov
pop
xor
adc
pop
cmp
addb
loop
inc
and
dec
scas
in
lds
inc
int3
dec
push
lds
cmp
push
cltd
cmp
mov
xchg
pop
and
popa
or
xchg
cli
sbb
xchg
xor
int
fs
rcrl
in
mov
pop
adc
std
aas
push
jle
ret
ficoml
aas
out
mov
mov
cmp
mov
dec
cmpsb
xor
xchg
or
scas
sbb
cli
push
int
mov
xchg
xchg
mov
lahf
shr
push
mov
test
xchg
into
jmp
cmp
clc
mov
mov
lea
add
hlt
icebp
mov
cwtl
fisubl
cli
inc
fwait
das
adc
inc
les
and
sub
dec
fmuls
sub
ficompl
cli
dec
lock
mov
xchg
cmp
popa
pop
pop
lods
dec
jae
vfnmadd213ss
repnz
inc
push
rcr
fwait
cs
fidivl
jo
lods
cmovne
fcmovbe
cmp
aad
adc
mov
lods
das
enter
push
pop
push
dec
jp
xor
lods
inc
movsb
cld
mov
call
cs
inc
btr
cmp
test
fnstsw
jnp
mov
lret
sub
movsb
pop
jle
sub
lods
clc
hlt
mov
mov
aaa
data16
fisubs
mov
cmp
sub
iret
xchg
xlat
repnz
lock
mov
pop
cltd
fstp
insb
movsb
adc
subb
inc
jp
cmp
loopne
adc
xchg
in
repz
pusha
aaa
dec
xor
ret
cmp
lret
aam
sarl
lcall
xchg
movsb
push
inc
jl
sub
rolb
fsubrs
scas
sub
push
lahf
mov
imul
dec
inc
sbb
out
ficompl
es
xor
popf
lds
jmp
mov
inc
std
test
jecxz
xchg
popf
movsl
adc
imul
sbb
or
add
push
ljmp
sbb
repnz
sbb
aad
or
std
fdivl
add
ljmp
sbb
mov
enter
into
lret
xor
ret
pop
lds
jae
cmc
aas
jmp
cmc
mov
cmp
mov
adc
push
cmp
call
dec
loope
addl
icebp
push
fiaddl
mov
inc
outsl
stos
xor
and
sbb
jge
xchg
xchg
xchg
mov
jp
xorb
lret
inc
movsb
clc
mov
les
pop
fwait
add
cmp
mov
shrd
xchg
push
fcmovnbe
or
mov
gs
xchg
mov
pushf
mov
cli
mov
jbe
xlat
iret
jmp
inc
and
adc
ds
xor
inc
pushf
mov
test
push
pop
pusha
xchg
xchg
or
je
mov
sbb
loope
ret
cmp
xchg
lods
call
dec
ret
pushf
test
dec
daa
mov
pop
dec
sub
loope
cli
iret
fidivs
jl
mov
icebp
das
add
out
leave
imul
mov
adc
push
jb
mov
stos
imul
stos
sub
and
lcall
bound
loop
std
xor
mov
xchg
imul
jle
ss
jne
arpl
movsb
icebp
movsl
mov
stc
js
cmc
into
inc
mov
lock
pop
pushf
mov
sub
cmp
and
arpl
mov
cmp
repz
data16
adc
mov
leave
lahf
dec
jo
outsl
cltd
inc
dec
dec
mov
nop
xlat
lahf
pop
sahf
cs
aam
xor
jno
or
addb
mov
out
into
or
call
adc
mov
lret
orl
jae
in
xchg
push
cmpsl
sub
sub
enter
mov
cmp
movsb
cmpsl
mov
mov
or
mov
loop
mov
lods
xchg
inc
test
and
lds
out
adc
andl
adc
scas
dec
loop
out
punpckhwd
xor
and
aad
stos
adc
xchg
inc
inc
cmp
push
mov
out
inc
pop
out
push
push
ds
insb
jb
fwait
xor
sarb
out
and
lods
scas
mov
rcrl
or
cmpsl
jb
add
insb
jae
rcll
inc
fisubl
sarb
test
imul
mov
les
pop
xchg
dec
sub
movsb
fwait
cmp
insb
push
lock
jnp
hlt
fistpl
mov
mov
out
jge
xchg
jle
mov
imul
xorl
push
jo
push
pop
mov
loopne
inc
in
aas
push
cmpsb
xlat
andnps
fldcw
or
mov
mul
call
cmp
or
popf
push
mov
lea
jne
mov
or
scas
push
sarb
xchg
test
pushf
std
rorb
cs
or
jle
decl
xchg
int
sub
push
sbb
add
jae
int3
imul
aam
mov
in
scas
dec
lea
aaa
aaa
out
push
mov
loope
loop
cmp
and
inc
mov
fadd
jmp
test
test
in
rorb
lock
pop
inc
and
jl
test
call
lds
push
cmc
jge
mov
push
sbb
dec
pop
jnp
scas
scas
jg
iret
jl
rcl
call
adcl
ja
jb
inc
xchg
mov
bound
lock
sub
jno
icebp
adc
ds
xchg
mov
jg
mov
mov
dec
cmpsb
inc
mov
lret
ficoml
cmp
cwtl
pop
xor
xchg
mov
lds
in
xchg
aaa
out
lods
or
xchg
nop
xchg
push
or
mov
lret
loopne
inc
adc
sbb
xor
sub
dec
xchg
or
xchg
mov
mov
push
jl
icebp
adc
outsl
shll
xchg
sahf
inc
jae
call
pop
mulb
cli
mov
xchg
add
mov
xor
lods
sub
in
lret
mov
fstpl
inc
outsb
and
outsl
jl
inc
and
inc
subl
fs
lahf
jmp
push
icebp
push
cmc
inc
stos
jmp
mov
cmp
mov
lods
mov
lcall
push
or
sbb
push
movsl
pop
pop
enter
xor
inc
idivb
jle
fisubs
inc
lcall
leave
xchg
jg
sbb
jg
pop
sahf
or
lock
xor
lahf
inc
mov
ljmp
bound
imul
inc
jnp
jo
imul
shll
inc
or
mov
je
inc
or
jle
dec
repnz
std
aad
inc
jg
add
mov
data16
cmp
ret
stc
inc
je
popf
sbb
mov
outsl
fidivrs
jp
popa
cli
sbb
cmp
mov
sbbl
imul
lcall
nop
jne
aaa
lahf
hlt
pop
lcall
in
xchg
push
in
mov
ljmp
and
sub
push
adc
into
push
inc
leave
orl
push
push
fsubs
cltd
mov
lds
xor
pusha
jge
out
mov
push
adc
cmp
xchg
insl
mov
xchg
out
shll
movl
xchg
add
dec
lods
sbb
jae
call
pop
dec
into
orl
and
inc
jnp
test
test
sbb
fisubrs
inc
sub
inc
add
jbe
stc
popf
jecxz
orl
andb
dec
stos
push
xchg
cmp
sarb
or
mov
cld
int
xchg
push
aad
inc
loope
sub
scas
aaa
mov
mov
cli
inc
mov
push
shll
xchg
jne
rol
xlat
adc
pushw
inc
lds
xchg
idivl
out
aas
mov
push
popf
sbb
inc
movsb
test
jnp
rol
nop
in
in
adc
mov
mov
fxch
ret
vpmacsww
or
stos
mov
fsubp
mov
call
lcall
incl
mov
dec
scas
hlt
pop
add
out
xchg
mov
xor
cmp
push
loope
dec
push
xchg
ss
mov
ret
fidivs
push
and
sahf
add
lods
outsl
mov
lret
jne
xor
ss
aam
movsl
roll
cmp
or
movsl
icebp
xchg
push
std
movsl
mov
push
mov
int3
mov
jge
mov
dec
pop
pop
pop
cmpsl
cld
cltd
out
cmpsl
lods
push
fnsave
in
add
push
jo
gs
aaa
pop
call
inc
sbb
sbb
into
sbb
mov
cmpsb
xor
xchg
mov
mov
es
pop
fcom
inc
and
dec
enter
xchg
mov
lcall
push
loopne
jae
test
enter
in
jnp
sbbl
and
stc
adc
xchg
negl
push
dec
insl
gs
out
fldl
cbtw
fdivrl
cmp
lods
in
jbe
or
sub
out
arpl
rcll
adcb
mov
cmpsb
inc
adc
cwtl
es
xchg
das
pushf
call
jg
je
fcmovbe
lock
pop
sub
cltd
cmp
push
mov
lret
or
repnz
movb
mov
leave
push
sub
and
cmc
mov
jp
negl
dec
mov
push
pop
test
fdivs
stos
icebp
or
pop
enter
cmp
icebp
std
stos
mov
pop
inc
scas
inc
mov
jae
dec
dec
adc
mov
xchg
mov
fucomip
out
and
and
pusha
js
test
int
dec
push
js
mov
dec
jmp
pop
int3
cmp
jmp
insb
xor
lea
test
pop
and
into
xchg
inc
imul
loope
dec
sub
inc
mov
dec
pushf
cwtl
adc
pusha
fcmovnu
sbb
ficompl
ss
mov
test
sub
lds
sub
add
jle
repz
push
in
push
mov
rcrb
stc
nop
pushf
pop
out
mov
sub
dec
fdivrl
adc
inc
pop
mov
cmc
pop
add
ss
cli
add
cmpsl
out
cld
insl
lret
fiadds
repz
ds
jge
or
mov
xchg
lods
enter
cmp
push
pop
push
dec
and
pop
movsb
loop
adc
stos
mov
ds
xchg
dec
sub
es
int
movsl
jmp
cli
out
shlb
dec
jns
scas
cli
shrl
add
jne
sbb
addr16
dec
enter
sbb
je
std
mov
jbe
xor
push
lahf
test
fcomip
stos
jns
mov
das
or
imul
pop
push
inc
arpl
mov
pop
push
ret
mov
shll
xchg
cmp
hlt
arpl
or
adc
int
into
add
xor
ljmp
push
cmpsl
and
pop
pop
mov
call
sti
push
cld
ret
sub
jl
jmp
movsl
lret
push
add
jg
add
in
imul
aas
push
adc
xor
int3
ljmp
sbb
daa
imul
lret
mov
sbb
addr16
les
gs
dec
out
aad
stc
in
mov
hlt
scas
movsl
push
push
loopne
cmpsb
ret
pop
mov
arpl
shr
test
mov
fnstsw
mov
xor
shll
iret
xchg
add
loop
out
sbb
sub
rcl
fisttpl
mov
scas
lods
loop
jmp
mov
mov
stos
cmpsl
pop
add
add
and
add
mov
push
imul
repnz
mov
aas
rcl
test
mov
lahf
xchg
jb
xor
std
loope
and
mov
push
movsl
scas
mov
mov
dec
rcrl
jle
rolb
sar
pop
mov
xchg
dec
test
fcoml
test
adc
xchg
adc
repnz
in
or
lcall
pop
inc
mov
push
scas
inc
mov
xchg
cs
cmp
xor
iret
out
fsubs
addr16
clc
pop
adc
out
lret
imul
je
stc
ljmp
movsb
fucomip
sbb
sub
test
sti
leave
or
xor
mov
into
and
fcomps
jle
repz
stos
sbb
xchg
in
jge
mov
int3
xor
pop
je
dec
dec
test
cli
movsl
pop
cld
mov
les
adc
push
sbb
push
inc
inc
call
push
lret
rorb
in
mov
mov
leave
movsl
xorb
pushf
xor
pop
jge
loope
sub
or
push
pop
sub
xor
xor
test
mov
xchg
roll
adc
imul
push
jae
int
jno
mov
insb
mov
scas
inc
lods
pop
or
imul
adc
mov
jmp
out
jp
bound
jnp
mov
xchg
cmpsb
cli
mov
jns
jne
out
lods
dec
cmpsl
fidivrl
xchg
jge
stos
jle
lahf
aad
cli
mov
repnz
fwait
inc
mov
nop
lret
sbb
mov
pop
leave
dec
sub
add
out
fldl
fs
and
xchg
roll
insl
cmp
fbld
cld
ret
push
xor
popa
push
dec
adc
inc
lds
xor
or
in
sub
add
pop
inc
xlat
push
pop
xchg
lahf
aaa
inc
fistpll
jl
sub
sbb
inc
mov
cld
mov
jg
pop
jns
xchg
test
popa
and
mov
out
adc
dec
xor
sbb
popf
push
inc
xchg
out
xor
stos
add
lret
mov
inc
cmp
xchg
xorb
sub
dec
cmp
shll
xchg
pop
mov
test
sub
test
jmp
nop
xchg
mov
cmp
inc
pop
push
call
mov
adc
mov
lret
jae
xchg
dec
rcrl
iret
repnz
pop
push
xchg
mov
scas
sub
fisubrs
xchg
nop
xchg
les
mov
dec
fldt
inc
cmovg
cld
xchg
fwait
pop
pop
push
movsb
repnz
mov
xchg
daa
mov
ljmp
jp
inc
repnz
movsb
jno
aas
sub
daa
cmpl
movsl
mov
cmp
mov
movsl
imul
cmp
mov
hlt
int3
out
inc
inc
scas
xor
pop
adc
jle
add
fnsave
adc
xor
jno
adc
fdivp
pusha
jge
sub
or
imul
lahf
lock
out
ss
clc
cmp
mov
jne
push
mov
sahf
aas
cwtl
sub
das
jae
push
lahf
cmpsb
sahf
decl
jge
xchg
nop
jecxz
popa
jbe
mov
aaa
and
pop
insl
xorb
shr
xchg
add
cwtl
pushf
inc
mov
enter
mov
out
xor
decb
pop
sbbb
jp
jne
aas
mov
mov
inc
test
xchg
mov
sbb
pop
sub
es
add
sub
pop
ljmp
out
call
push
sbb
fs
ds
push
mov
mov
bound
push
sub
and
imul
push
lea
sub
xorl
and
in
xor
mov
jne
stos
mov
decl
orl
pop
lret
bound
ds
xorb
test
lret
std
xor
jp
mov
add
mov
clc
mov
add
sahf
sbb
orl
mov
pop
and
jecxz
fcmovu
adc
jle
fdivrl
jg
sbb
xchg
jb
aam
outsb
ss
xorl
rcl
es
jno
in
mov
xor
lds
daa
lcall
cwtl
js
mov
daa
popf
xor
sbb
dec
xlat
and
frstor
ret
inc
mov
jecxz
pop
xorb
cmpsl
in
jns
test
mov
mov
and
inc
dec
lret
and
test
stos
movsl
jnp
sub
mov
je
loop
xor
add
cmpb
xchg
push
pusha
mov
clc
ret
pop
add
jp
xchg
les
mov
xchg
pop
insl
cli
loopne
pushf
cmpsl
dec
pop
imul
push
or
in
std
push
je
add
andl
mov
jno
imul
addr16
cmp
and
fwait
stc
add
add
mov
addr16
push
jg
mov
xchg
sub
jg
add
cmp
jns
jno
popf
in
mov
int3
loopw
lea
push
dec
sub
repz
cmpsb
or
insl
sub
test
adc
lahf
lret
je
xchg
rcll
xor
inc
addl
cmpsb
insb
test
imul
pop
and
jne
aam
popa
push
pop
jno
xor
fcmovu
jl
mov
lea
cwtl
cmp
loope
inc
sub
xor
insl
xor
jge
testl
or
inc
inc
out
push
dec
mov
inc
jmp
fists
es
cmp
lcall
scas
fld1
and
stos
or
sub
sub
outsb
pop
pop
aam
aam
out
pop
hlt
jmp
test
scas
mov
pop
enter
jno
mov
ljmp
push
xor
jno
inc
imul
jge
xor
lods
jg
imul
ljmp
mov
scas
outsl
ds
sbb
xchg
bound
mov
jbe
cmp
or
mov
pop
sub
fiaddl
scas
pusha
orb
loop,pt
xlat
push
lock
add
push
out
gs
cmpsb
add
sti
mov
mov
add
xchg
inc
mov
cmp
sub
insb
and
push
sub
and
xchg
data16
mov
sub
sub
js
xor
in
mov
lods
adc
adc
or
std
cld
testl
adc
int3
cmp
pop
popa
loop
push
add
mov
fmulp
insl
das
lea
shlb
xchg
out
pop
xor
jo
sbb
out
hlt
inc
dec
mov
aaa
mov
adc
imul
xchg
repnz
push
cmp
outsb
fld
xor
push
pusha
mov
or
or
ficoml
les
dec
insb
mov
pop
es
test
push
sahf
pop
movsb
testl
hlt
and
fldenv
and
cld
dec
dec
rclb
lods
dec
and
fcomp
in
fs
adc
lret
inc
movsb
cli
aas
mov
cwtl
cmp
clc
or
pop
pop
mov
lea
sub
mov
in
jo
shll
aaa
cli
jle
fiadds
stos
add
sub
into
ja
mov
cmp
in
sub
and
roll
push
mov
int3
aaa
stc
std
pop
fsincos
mov
sbb
sbb
and
mov
sub
dec
or
jmp
dec
inc
mov
jge
jge
and
pop
pop
pushf
jbe
or
pusha
out
pop
fs
mov
adc
xor
insl
pop
fbld
ficomps
pop
inc
arpl
fwait
sbb
cmp
xorl
addr16
lock
js
cmp
and
sbb
mov
xchg
sbb
in
mov
jg
lcall
add
xchg
push
addb
and
rorb
roll
push
stos
jecxz
adc
aas
or
hlt
push
lock
and
cmpsb
sbb
or
testb
jno
dec
and
push
xchg
cmp
dec
nop
out
jae
ja
sub
pop
outsb
lcall
cld
rclb
lret
jne
sub
pop
pop
inc
jo
stos
add
jp
aas
fsqrt
mov
ljmp
push
inc
push
add
xor
orl
sub
push
sub
ja
adc
inc
xchg
arpl
cltd
mov
nop
and
aad
dec
int3
dec
inc
adc
stos
mov
push
xchg
mov
add
jmp
stc
lahf
outsb
push
push
push
push
pushf
rcrb
mov
jns
shrl
loopne
ja
cmp
or
dec
in
xchg
inc
adc
lret
cmpl
fdivrl
mov
fsubs
leave
jno
movsl
inc
dec
in
push
lret
jae
cltd
mov
sub
sbb
cmp
sub
jge
dec
test
and
sub
sti
add
pop
dec
pop
fs
jns
and
jno
push
sbb
inc
mov
sbb
lcall
insl
loope
fisubrl
xchg
push
pop
mov
sub
inc
lods
push
out
ds
dec
fcmovu
repz
mov
mov
adc
push
sti
push
test
rorb
sub
pop
std
sbb
das
in
mov
inc
mov
mov
xchg
loope
push
inc
imul
push
push
scas
popf
sbb
out
inc
shl
push
dec
xchg
xchg
js
xchg
or
jmp
adc
cmp
fistl
jno
jnp
inc
mov
pop
adc
out
sbb
test
or
mov
roll
stc
push
dec
insb
rcl
call
inc
test
mov
hlt
mov
pusha
lods
shll
xchg
xchg
stos
pop
mov
cmp
push
lret
enter
sbb
xchg
pop
repnz
ret
aam
not
jecxz
jl
aas
scas
xchg
dec
movsb
daa
lods
pop
jns
xchg
mov
mov
in
xlat
loop
mov
push
fs
lods
sti
in
ret
outsl
hlt
add
pushf
filds
iret
jg
sbb
add
mov
popa
or
loop
sub
mov
jecxz
flds
dec
adc
js
jno
pop
test
fwait
orb
shrl
push
xchg
dec
xor
repnz
imul
gs
xchg
out
mov
out
fcoms
xchg
sbb
arpl
lahf
enter
jne
repnz
lods
mov
clc
ret
call
mov
jge
pop
bound
mov
jne
and
jnp
or
rclb
push
lods
mov
subb
inc
ljmp
fxch
mov
stc
mov
mov
insb
mov
sti
sbb
ficoml
std
aad
mov
dec
push
jnp
lds
cmpsb
mov
mov
mov
repz
call
mov
sbb
xchg
mov
and
mov
push
test
and
mov
movsb
adc
out
dec
nop
rcrb
nop
enter
inc
not
dec
jp
push
push
mov
or
fsubl
ds
mov
pop
lret
inc
pop
cwtl
and
dec
xchg
xchg
leave
xchg
fadd
sbb
imul
mov
aam
les
imul
insl
mov
outsb
jae
fnstsw
mov
cs
mov
mov
scas
adc
movsb
xchg
in
push
sbb
enter
mov
jl
push
fisubl
movl
rorb
mov
in
mov
sbb
sub
test
pop
icebp
sahf
mov
in
fidivl
sbb
or
adc
xor
shrl
hlt
xchg
aaa
add
out
xor
xor
mov
xorb
dec
jns
jge
test
in
inc
jno
mov
in
push
and
jle
into
cmp
jmp
push
daa
jmp
add
adc
sbb
ljmp
scas
push
in
xor
xlat
mov
test
mov
cmp
fstp
incb
pop
or
add
dec
fstps
jae
shrb
xchg
int3
test
mov
push
test
mov
mov
int3
lods
sub
out
decl
rcrb
pop
mov
jge
cld
lds
mov
add
cs
cmp
or
insl
mov
jbe
sub
adc
jne
add
imul
lahf
ret
movsl
hlt
adc
int3
std
nop
aad
shlb
lret
dec
bound
ficomps
cmp
cld
xor
xchg
xor
cmp
sub
into
and
aas
imul
mov
enter
cmp
in
cmp
clc
movsb
push
in
repz
or
jge
movsb
jl
jmp
imul
xchg
out
and
cmp
pop
hlt
pop
dec
jo
mov
sub
cli
jle
add
lds
orl
notl
test
xchg
inc
sub
movsl
mov
push
cmc
out
aas
scas
xor
int3
adc
push
and
dec
pusha
mov
rcrb
add
mov
mov
add
mov
sarl
sub
daa
or
in
sub
enter
xchg
xchg
cmp
scas
or
inc
mov
loopne
add
or
cmp
iret
repz
addb
out
and
add
hlt
sbb
dec
aad
lcall
mov
or
jmp
lock
repz
stos
aas
lret
mov
arpl
out
or
xor
sbb
lahf
movsl
lcall
dec
inc
xchg
and
pop
fsubl
shrl
push
mov
data16
inc
mov
iret
lds
hlt
inc
fbld
ret
mov
idivl
xor
dec
pop
mov
inc
insl
adc
mov
cmp
cmc
push
cmp
out
cmp
jb
cmc
xor
outsb
inc
dec
into
rcl
lahf
or
jg
jmp
pusha
mov
sbb
lods
xchg
pop
pushfw
add
stos
pop
sub
sbb
outsl
add
xchg
aad
jbe
add
std
jl
or
sub
fsubl
inc
adcl
das
clc
stos
out
jbe
les
dec
pop
cld
mov
arpl
add
es
in
inc
gs
xchg
push
movsb
inc
pop
ja
xchg
or
nop
test
icebp
sti
and
or
out
mov
xchg
pop
lcall
cwtl
cmp
push
imul
sbb
xchg
fwait
aaa
pop
inc
lea
adc
shl
daa
jno
dec
imul
sub
xchg
aas
fldl2t
push
test
jne
adc
xchg
pop
and
bound
mov
ss
mov
xchg
fistps
push
dec
push
cmp
sub
imul
rcrb
add
cmp
xlat
add
cmpsb
pop
ja
and
push
push
fld
jnp
cmpsb
xor
ss
fisubl
fldenv
scas
cwtl
sub
mov
pop
jno
cmp
inc
in
movsb
inc
push
shlb
and
dec
cmp
inc
inc
pop
loope
loope
movsl
mul
aas
sbb
jae
xchg
sub
mov
insl
sahf
mov
sub
js
test
push
pop
xchg
pop
xchg
xor
jmp
xor
ja
mov
mov
xor
dec
addr16
fcom
bound
inc
xchg
pop
lahf
xchg
cld
cwtl
cmp
gs
mov
adc
rol
addr16
mov
push
mov
inc
test
test
sbb
call
lds
sub
dec
jge
pop
out
addr16
test
repnz
dec
andl
es
pop
jae
loopne
inc
lock
cmpsb
insb
repz
and
and
inc
push
es
fcmovne
movb
lahf
movsl
mov
cmp
push
push
sbb
xchg
cmp
mov
xchg
scas
lret
sub
outsb
push
aad
stos
sub
cmp
dec
lea
push
sbb
fcomp
nop
cmp
clc
pop
xlat
push
jae
mov
adc
sahf
in
pop
or
sub
adc
int3
xor
push
pop
dec
aam
addr16
popf
or
lea
addl
or
into
adc
add
test
mov
cwtl
icebp
push
inc
xchg
in
dec
bnd
add
inc
gs
jl
inc
xor
inc
test
pop
mov
mov
js
cld
int3
call
cmpl
jae
mov
xchg
pop
mov
pusha
mov
ss
push
jno
scas
das
xor
inc
xor
push
ss
sbb
pushf
mov
cmc
sub
daa
pop
jnp
sbb
push
inc
and
not
lcall
jnp
mov
mov
lods
mov
cmp
pop
pop
jne
adc
add
fabs
cli
mov
int
adc
pop
fisubrl
xor
data16
push
inc
push
sub
mov
shll
and
inc
cmp
add
lods
subb
add
js
fwait
jmp
add
and
pop
push
sbb
mov
pop
nop
adc
dec
xbegin
mov
sbb
mov
pop
out
pop
fwait
cwtl
sbb
lret
les
icebp
xor
xchg
mov
fldenv
mov
sbb
mov
hlt
adc
notb
cmp
sub
and
imulb
outsl
mov
xchg
outsl
push
cmp
or
pusha
or
push
lds
cmpsb
lods
push
sarb
fs
call
add
fadd
or
or
fdivrl
mov
scas
jmp
pop
pushf
inc
fcmovu
xlat
gs
sub
ss
add
and
mov
and
aad
test
sarb
outsl
jnp
mov
jne
mov
and
dec
iret
ds
dec
adc
push
inc
cmpl
test
mov
jno
cwtl
xchg
cmp
mov
mov
sti
cmp
adc
or
lods
add
lret
or
inc
into
xor
cmpsl
pop
pop
outsl
push
mov
fwait
sbb
pop
and
sbb
outsl
xchg
sbb
fadds
jno
insb
out
and
dec
mov
add
dec
add
push
sub
jo
ljmp
dec
and
mov
xchg
ret
jle
lcall
ret
stos
mov
cmp
lret
mov
xchg
test
inc
in
cmpsb
add
inc
mov
jle
out
in
add
scas
adc
insb
jae
adc
push
leave
out
repz
repnz
mov
mov
mov
jo
lds
pop
imull
jo
push
lods
or
ret
sbb
cmc
daa
movsl
adc
mov
mov
push
shrd
xor
int3
sbb
and
pop
mov
push
push
lahf
cmp
pop
adc
mov
pop
data16
es
mov
dec
xchg
or
loope
sub
mov
imull
dec
js
push
enter
jmp
out
cld
dec
scas
cmpsb
roll
call
adc
sub
jae
mov
les
outsl
movl
rolb
int
rorl
jb
imulb
inc
pop
loop
fldt
stos
mov
inc
mov
sbb
loop
xchg
test
int
arpl
cli
cmp
add
mov
int
pop
mov
mov
or
cmp
sbb
repz
sar
jno
fidivl
fistpl
inc
xchg
out
add
xchg
pop
inc
dec
or
hlt
movsb
xor
pop
sub
addr16
dec
popf
popf
push
push
add
imul
pushf
aam
push
push
insl
mov
mov
cmp
jle
pop
adc
aam
orb
aam
mov
repz
mov
inc
lahf
jl
int
sbb
insb
xor
and
adc
cmp
xchg
pushf
sub
daa
daa
adc
mul
mov
in
and
ficoms
xor
stc
arpl
inc
ret
insl
cmpsb
sbb
mov
daa
in
test
sub
mov
lock
xchg
in
das
hlt
inc
pushf
mov
add
cs
aas
fs
int3
aad
sub
sbb
stos
or
mov
outsl
stos
in
cmpsl
sub
pop
and
divl
and
stos
dec
scas
loope
rclb
pushf
addr16
adc
jb
ljmp
pcmpgtd
mov
cmpsl
inc
pusha
cmp
lret
jno
jae
pop
lods
out
lods
adc
cmp
shr
mov
lock
ror
inc
mov
xchg
xor
jae
mov
push
pop
jle
loop
std
add
jae
sub
pop
test
jge
inc
and
xor
shrl
popf
loopne
ja
jge
dec
dec
jmp
call
dec
hlt
stos
ds
out
imul
push
push
jo
jne
in
ret
clc
xchg
pop
ret
sbb
bound
jmp
sub
imul
jmp
add
mov
sahf
xchg
je
mov
stc
cmp
adc
inc
mov
jg
push
xchg
repnz
cmp
inc
xor
fs
inc
cwtl
int
jp
outsb
xchg
dec
push
pop
mov
mov
xchg
push
jb
addl
lock
cmp
dec
xchg
ret
xchg
and
push
xchg
cld
outsb
push
shrl
js
inc
jmp
xor
push
pop
notl
mov
jbe
roll
sub
mov
popa
cmp
xor
icebp
jmp
pop
pop
or
sub
sbb
inc
mov
js
sub
adc
mov
mov
lods
movsb
dec
mov
lahf
xor
idivb
into
xlat
jbe
jne
cmc
jnp
dec
xchg
subb
and
clc
sub
bound
lods
cltd
jmp
jno,pt
mov
jae
ret
test
and
jae
mov
jae
and
cltd
arpl
lea
sti
adc
ljmp
fucom
insl
and
sbbl
rol
clc
mov
aaa
mov
mov
dec
stc
or
mov
pop
stos
in
fdivp
mov
enter
add
push
fcompl
or
mov
push
jmp
pushf
xchg
push
sub
es
fnstsw
rorb
test
mov
inc
icebp
push
mov
mov
mov
push
in
pop
shr
jno
jmp
sbb
xchg
test
inc
jno
fbstp
lahf
cmp
scas
xchg
cmp
cld
jg
xor
clc
jnp
jle
or
les
dec
xor
cmpsb
hlt
shr
cmpsl
jl
sub
and
test
mov
int3
adc
push
mov
mov
jecxz
in
lds
and
sbb
pop
movsl
lret
dec
test
scas
and
rcr
insb
sub
adc
mov
shll
cmp
sbbl
jmp
clc
push
int
fsts
push
clc
inc
inc
dec
mov
pop
test
insb
jmp
xlat
xchg
add
inc
sub
outsl
jp
fbstp
mov
adc
and
inc
mov
cwtl
cli
push
int
stos
dec
dec
data16
xchg
ds
ljmp
iret
incl
out
jno
rorl
xlat
inc
les
pop
xor
ret
and
mov
inc
test
xchg
jmp
lods
ret
jle
xchg
icebp
push
jnp
arpl
or
xchg
daa
loopne
cmp
ret
cmp
add
xor
push
cwtl
outsl
jp
xchg
jmp
adc
xchg
jp
in
test
std
daa
std
ja
xor
ret
push
imul
push
lock
pop
and
dec
ret
loopne
repz
push
movsb
and
in
xchg
and
adc
cmp
push
sbb
cmc
push
push
jle
push
adc
jg
add
dec
push
mulb
mov
cmpsb
mov
and
adc
pop
xor
xlat
sub
pusha
cltd
mov
push
xchg
jecxz
int3
pop
sbb
inc
or
and
mov
lret
mov
jg
int
fisubrs
cmpsb
popa
xchg
fimuls
mov
sbb
push
add
fidivs
daa
jo
xchg
ret
sahf
faddl
dec
inc
pop
lea
dec
mov
sub
js
dec
cmp
mov
cmp
fwait
sbb
mov
int
sbb
jp
jecxz
add
leave
mov
or
int3
pop
sti
inc
jmp
pop
xor
push
inc
mov
pop
gs
dec
add
xlat
test
push
adc
xchg
cltd
pop
cmp
push
jmp
push
imul
adc
loopne
je
pusha
inc
lods
lcall
fdivl
lret
sub
mov
jg
sub
addl
fprem
mov
icebp
push
fsubrl
mov
dec
aam
jne
sbb
aad
leave
in
pop
loopne
es
and
ss
sub
or
jnp
insl
iret
jmp
sub
mov
ja
sub
inc
sub
daa
ss
add
aas
js
cld
mov
movsb
adc
mov
cmpsb
sbb
inc
adc
popa
lods
sbb
inc
jmp
lea
shrl
xor
xchg
and
dec
ljmp
in
je
xlat
dec
mov
dec
sbb
mov
sbb
pop
dec
push
nop
inc
jg
and
push
fists
fwait
jecxz
push
sbb
mov
ficoml
in
faddl
sub
sub
ljmp
repnz
jl
or
lret
ds
and
xlat
jecxz
pop
pop
sbb
mov
dec
ret
xchg
sbb
jg
jns
adc
sbb
mov
es
sub
push
mov
test
notb
xchg
jnp
jae
mov
repnz
inc
mov
add
add
fsubrl
inc
in
in
jle
cli
lock
outsb
inc
imul
pop
mov
dec
adc
xchg
jb
fs
jae
fldcw
add
xchg
mov
mov
jnp
call
xchg
lahf
sti
es
pushf
das
sub
push
jmp
jmp
push
pop
jp
scas
xchg
shl
ss
push
int3
jp
mov
cmpsl
lods
fwait
or
cli
hlt
and
push
mov
push
out
inc
inc
xor
and
test
jb
and
sub
jb
repz
ss
outsl
in
test
das
sti
sbb
xchg
insb
sbb
jns
xchg
jp
cmp
lahf
mov
sbb
mov
adc
int3
mov
cmp
roll
jge
inc
faddl
lods
cmpsl
xor
mov
pop
or
sub
jb
add
mov
ja
fdivrs
out
inc
cld
rcl
sub
filds
or
pusha
arpl
ljmp
mov
mov
mov
loop
dec
shll
cli
push
mov
mov
ja
cmpsb
rcrl
cmpsb
pop
stos
iret
jp
fmull
mov
lods
and
pop
sub
xchg
in
aam
sbb
adc
xchg
mov
icebp
mov
xor
mov
add
mov
jmp
pop
or
in
push
repz
loope
mov
lods
ret
jp
popa
fwait
xchg
push
into
xor
xchg
pop
scas
sbb
arpl
in
out
sbb
mov
sti
add
dec
call
mov
cmpsl
jns
sub
rcrb
or
ds
mov
jmp
inc
dec
lret
and
lret
rcrl
inc
shrb
nop
xor
mov
mov
xchg
lcall
aas
mov
mov
mov
cmp
sub
pop
jecxz
iret
pop
jbe
aaa
gs
sub
mov
jnp
cmc
out
clc
mov
xchg
jge
jnp
xor
push
mov
loope
adc
arpl
mov
xor
mov
hlt
mov
jmp
mov
aas
adc
mov
mov
imulb
popf
mov
mov
ss
xlat
ret
and
mov
sbb
mov
mov
arpl
fwait
sub
xor
or
adc
cltd
xor
dec
jns
repz
popa
pop
les
mov
cmp
mov
mov
sbb
adc
insl
xor
mov
outsl
mov
push
sub
mov
lods
mov
pop
cmp
mov
mov
pop
mov
and
outsb
add
mov
int
sti
pop
addr16
jle
add
ss
push
loopne
push
pop
sub
bound
lods
outsb
mov
pushf
sub
mov
xchg
pop
setnp
and
jbe
ds
in
ret
cwtl
adc
mov
mov
add
sbb
aam
jnp
push
lods
cmpsb
xchg
cli
rcll
cmp
aam
fidivs
fwait
pop
push
push
sbb
and
pop
jno
and
hlt
divb
mov
les
mov
lret
rclb
pusha
popa
mov
dec
jno
jns
ja
hlt
cmpsl
mov
push
sub
test
les
scas
mov
sbb
mov
imul
dec
mov
stos
pushf
lahf
scas
inc
loopne
ss
in
shrl
mov
adc
pusha
jno
out
add
cmp
arpl
xor
or
pop
imul
sub
stc
stc
jbe
notl
scas
pop
in
fldt
fs
call
popa
push
push
rolb
cmp
sub
mov
fisttps
call
cli
mov
ss
popf
std
cmp
scas
jns
es
ds
ret
push
ja
nop
shl
adc
xchg
xor
stos
jnp
mov
fcompl
jl
out
call
mov
sti
xchg
inc
lods
cs
xchg
sbb
fstpt
loop
jb
cld
sub
repnz
leave
je
insl
or
or
rcr
pushf
xlat
mov
mov
xor
sbb
cmp
movsb
in
jecxz
add
loope
addr16
sub
xor
and
mov
adc
rolb
jecxz
push
jg
scas
loopne
xchg
pop
inc
fidivrs
sub
testl
sti
sub
adc
fcmovnb
popf
push
cmp
stc
gs
movsl
mov
adc
add
fnclex
sbb
push
les
insl
cmpb
repz
mov
or
in
pop
sub
add
sub
add
lret
test
adcl
int3
mov
sub
push
pop
pop
js
and
lret
mov
pop
jae
or
sub
lods
mov
cwtl
movsl
sbb
push
cmp
sub
lahf
sarb
shrl
int3
xor
jns
adcb
into
ret
jecxz
jae
and
dec
sub
lahf
fcoml
push
mov
bound
jmp
loopne
les
xchg
xchg
hlt
fnstcw
cmp
xor
into
fisttpl
mov
cltd
xlat
rolb
xchg
jns
fisttpll
xor
jns
cld
std
and
sahf
mov
xchg
cmc
insb
pop
jnp
in
and
xchg
insb
ss
movsb
lret
push
jmp
lods
xor
lods
push
add
adc
xchg
bound
sub
push
nop
int
fwait
adc
add
dec
stos
jecxz
push
push
test
leave
or
test
loop
xor
mov
mov
pop
push
outsb
xchg
mov
popa
push
adc
movsl
rcr
packuswb
xchg
mov
push
sub
push
xchg
mov
loop
add
add
pop
fs
sahf
enter
sahf
cli
outsb
sbb
jecxz
xchg
out
mov
cld
mov
in
add
sbb
enter
inc
pop
jmp
inc
xchg
mov
out
cmp
adc
in
insl
mov
int
xor
scas
int3
out
or
push
daa
pop
mov
in
push
mov
xchg
add
ret
loopne
fistpl
inc
imul
rcrb
cld
xlat
inc
push
sbb
dec
jg
xor
add
ja
subb
or
cmpsw
add
lret
inc
cmp
idivl
mov
pop
cmpsb
pop
addr16
push
sub
inc
mov
mov
bound
pop
add
push
or
and
dec
push
inc
mov
mov
push
sub
les
cmp
mov
cmp
mov
dec
cmp
daa
add
mov
out
pop
push
sub
pushf
mov
jo
sbb
xchg
pop
jne
adc
push
sbb
pop
out
in
pushf
xorb
decb
add
and
cmpsb
sub
push
ret
and
cmp
inc
fwait
cld
sti
jne
jmp
mov
mov
ficomps
pop
mov
lahf
addr16
je
dec
and
movsb
insb
out
mov
inc
arpl
inc
in
add
pextrw
jnp
jmp
inc
mov
xchg
add
push
data16
cld
xchg
and
cs
push
sbbb
sti
add
ja
pop
jbe
push
sub
mov
xchg
scas
outsl
adc
popf
pop
pushf
dec
mov
test
mov
rorl
sbb
lret
xor
or
xchg
mov
jne
push
mov
rcr
into
ret
mov
div
adc
xchg
std
cmp
lret
and
dec
push
push
lea
insl
pop
dec
stc
movsl
cmp
testb
aas
lret
dec
xor
gs
fs
fiadds
out
mov
data16
lds
cmc
test
nop
mov
push
adc
push
push
add
popa
lods
mov
and
ja
push
testb
dec
fisubs
cltd
sub
dec
inc
sbb
cmp
dec
pop
inc
lods
sbb
cmp
pop
lock
cmp
sub
xchg
xor
inc
sub
shrb
out
loopne
inc
pop
inc
jge
iret
pop
es
cwtl
testl
jo
xor
call
sbb
test
in
jnp
bound
push
jns
add
lret
xchg
mov
jno
or
aaa
mov
mov
fcmovb
fsubs
xchg
cmpsb
adc
inc
das
push
cmc
mov
out
filds
loop
pop
imul
in
arpl
cli
pusha
cli
scas
loopne
adc
pushf
into
pushl
inc
sti
inc
mov
mov
icebp
sub
fwait
dec
push
dec
or
cmp
rolb
push
sbb
inc
out
les
inc
add
sub
orb
js
shlb
dec
mov
xchg
cmp
adc
test
add
enter
or
mov
es
stos
pop
add
popa
enter
leave
add
iret
jae
and
jecxz
fs
aas
xorb
cmp
lret
addb
xor
sbb
outsb
pop
out
sub
mov
and
pop
imul
dec
mov
aas
loop
out
loopne
cmc
ds
lahf
xor
imul
lahf
sub
out
lods
daa
pop
inc
mov
nop
inc
pop
jns
lods
xchg
push
adc
jo
xchg
push
xor
mov
int
add
push
jnp
push
notb
loop
in
pop
movsl
pop
fildll
pop
sahf
inc
rol
xchg
stos
ljmp
cmpsb
xor
arpl
push
pusha
call
dec
iret
mov
ds
popa
or
pop
pop
cmp
inc
jnp
xor
data16
ret
fstps
mov
jl
jp
dec
adc
std
jl
cmp
bound
sbb
jae
es
or
add
ljmp
pop
mov
sbb
mov
pop
sbb
adc
jl
std
mov
insb
shr
pop
insl
testl
std
out
test
movsb
scas
inc
sub
sub
cld
mov
loope
push
add
push
add
xchg
inc
jno
in
xchg
popf
push
ret
add
insl
sub
mov
pushf
or
andb
ss
inc
loop
in
cltd
ss
mov
push
xor
sub
lock
push
aaa
rclb
or
cmp
cmp
pushf
sub
xchg
mov
push
adc
movsb
pop
dec
pop
or
and
mov
bound
push
pop
jbe
js
dec
mov
test
xor
sbbb
or
fstps
sbb
add
and
aas
int3
xchg
mov
adc
cmp
test
and
pop
ficoml
andl
stos
insl
fisttpll
adc
test
inc
lret
ss
fiaddl
and
out
popf
bound
push
pop
xor
inc
mov
loopne
shr
sbb
lock
std
mov
cld
mov
aad
dec
add
loope
loop
or
sub
cmpsb
test
mov
cmp
pop
addr16
bound
popf
mov
push
sbb
pusha
popa
xor
push
dec
lock
leave
jae
aam
add
pop
add
popl
sbb
mov
push
cli
ret
push
pop
pop
in
jb
imul
fisubl
push
pop
xchg
repnz
das
movsl
inc
jne
xor
sbb
int
mov
push
cmc
xor
pop
push
fxch
into
mov
sbb
push
pop
inc
imul
cld
movsl
pop
fnsave
setp
mov
add
negl
mov
fdivs
mov
sahf
aas
inc
fildl
push
jle
enter
mov
clc
hlt
andb
cli
mov
test
dec
je
push
adc
and
mov
xor
mov
pushf
sbb
gs
stc
xchg
js
pop
cs
jne
push
or
fildl
lcall
or
inc
mov
lock
jne
mov
in
movsb
or
int3
bound
out
aam
test
and
xchg
sub
mov
popa
sub
push
inc
out
orb
insb
mov
or
mov
mov
je
mov
xor
mov
ret
xchg
dec
popa
loope
imul
cmc
daa
mov
scas
mov
or
jp
out
sbb
jle
xchg
and
sbb
hlt
adc
fimull
fists
imul
pop
push
pop
adc
jmp
cmc
icebp
or
jbe
lret
inc
je
insl
enter
push
and
xor
test
and
roll
sub
int
cmp
xchg
dec
enter
pop
xor
inc
insb
scas
inc
lds
scas
inc
call
inc
ljmp
nop
or
sub
imul
cmp
sbb
icebp
adc
mov
adc
adc
fildl
fisttps
stos
sbbl
pop
xchg
dec
nop
pop
mov
push
into
dec
or
mov
nop
fildl
sahf
mov
cmpsl
outsb
inc
test
into
dec
inc
inc
cmp
mov
dec
xor
adc
add
dec
xchg
cmp
int3
fdivrp
jg
repnz
xor
popf
bswap
js
push
sub
fdivrl
xor
pop
aaa
add
rcr
mov
add
jae
sbb
pushf
inc
int
jo
push
mov
ss
dec
adc
push
sbb
sub
add
hlt
pop
xchg
pop
nop
inc
loopne
xchg
and
sub
sbbl
sub
and
or
xlat
xor
negl
sub
movsb
cmp
add
jmp
sub
mov
push
pop
add
sbb
stc
xchg
test
jmp
aaa
shr
call
jns
and
out
clc
mov
stos
loope
aaa
insb
mov
popa
clc
sbb
inc
push
sub
ss
mov
adc
loopne
mov
flds
pushf
movsl
shlb
lahf
int3
xor
dec
rolb
jae
dec
xchg
ret
mov
dec
clc
lds
inc
or
enter
xor
popa
loope
shll
fwait
mov
addr16
sub
sahf
jns
outsb
pop
pop
scas
xchg
inc
scas
fadds
in
pop
ss
aam
daa
mov
jl,pn
test
loope
loop
pop
sub
rolb
cmp
adc
shlb
lods
cmp
mov
sti
dec
lea
mov
or
inc
stos
pop
mov
out
fwait
push
rcrl
push
jecxz
sub
jecxz
leave
daa
lds
leave
repz
pop
xor
cld
xor
xchg
dec
cmp
fmul
mov
inc
fwait
in
push
xchg
push
xchg
pop
stc
xchg
icebp
jnp
xchg
shl
popa
mov
leave
sbbb
fwait
call
xchg
les
scas
cmp
cld
jg
xor
dec
hlt
mov
stc
inc
scas
dec
sbb
add
push
fwait
pop
prefetch
pusha
push
cmp
lea
pop
loopne
cltd
xchg
inc
jo
movsb
imul
jnp
stos
push
clc
pusha
rcrb
sbb
out
adc
ds
or
add
cmc
fdivl
fisttps
outsl
outsl
lea
enter
jns
inc
push
xchg
fisttpl
sar
push
leave
jno
jmp
mov
mov
loop
in
add
push
pop
out
xor
fidivrs
push
mov
fldcw
or
add
push
xor
sub
outsl
pop
jno
push
mov
dec
stos
mov
sti
jne
lea
fmuls
add
ficoml
push
pushf
or
loopne
hlt
or
repnz
pop
subb
sub
cmp
mov
and
jno
fcomps
insb
call
xor
dec
xlat
lds
cmp
xor
sbb
mov
jns
fldcw
xor
pop
pop
jmp
pop
sbb
aas
push
push
add
add
dec
pop
lods
js
cmp
cli
imul
mov
mov
sub
mov
outsb
xor
mov
xchg
dec
fadds
mov
dec
dec
dec
faddl
xchg
add
xchg
shll
mov
shrb
jge
icebp
push
cli
and
movsb
mov
jmp
movsb
shll
aad
rclb
in
in
jno
popf
sbb
push
addr16
imul
ja
addr16
add
sbb
in
imul
imul
pop
add
xchg
repz
ja
aaa
inc
sbb
loop
xor
mov
cmp
xor
jge
dec
mov
push
cld
mov
ljmp
addr16
mov
push
insl
out
mov
std
and
mov
jnp
mov
xor
ds
mov
inc
sub
inc
push
popa
leave
repnz
xor
cltd
xor
pop
lret
pop
xchg
lret
push
pop
js
pop
daa
call
aas
test
insl
ja
mov
xchg
mov
adc
adcl
aad
dec
cmp
clc
dec
fdivr
in
in
dec
add
adc
insb
jge
xchg
gs
stos
dec
addl
mov
lods
jb
fwait
dec
inc
or
out
xor
lret
movzwl
jl
mov
sub
fiadds
jae
hlt
mov
add
push
daa
push
dec
cli
cld
adc
sahf
mov
mov
pop
addr16
sub
repz
sbb
gs
pop
cli
mov
inc
cli
cwtl
ljmp
pushf
orl
xchg
jbe
gs
xchg
pop
and
inc
addl
daa
xchg
xchg
pop
ret
mov
mov
xor
aad
adc
movsb
lret
cmpsl
sub
sub
jge
js
mov
pop
sub
rcll
lcall
sub
jnp
ret
into
shlb
fs
fnstcw
adc
es
adc
mov
test
push
cmpsb
pop
mov
test
or
out
repz
push
mov
call
and
mov
testl
enter
popf
or
sub
sbb
je
addr16
cmpsl
cmp
aad
xor
and
mov
ss
cmpl
fisubrs
iret
daa
clc
in
test
cmp
scas
test
jbe
dec
fists
mov
addr16
cwtl
xchg
fwait
cmp
push
cltd
push
sub
loopne
imulb
jb
jge
lcall
bound
out
or
cs
arpl
mov
cwtl
mov
sbb
xchg
xchg
mov
test
ret
stos
stos
adc
pop
out
push
cmc
or
mull
imul
es
sub
int
aaa
mov
mov
rcrb
rclb
decl
scas
mov
out
repz
aaa
dec
cld
push
xchg
popf
and
sbb
mov
mov
push
ljmp
shlb
sub
push
cld
lret
fcomip
sub
out
mov
les
and
xchg
sbb
out
inc
sub
sbb
movsl
aaa
cmc
jmp
adc
cmc
pop
data16
sub
lret
cmp
icebp
jmp
mov
hlt
cmpsl
sub
ljmp
sub
cmp
imulb
push
xor
xor
mov
divb
xchg
lods
stos
outsb
fisubrs
into
aam
or
dec
xor
rcrl
lahf
test
xor
cltd
adc
adc
int3
aad
cmc
lods
push
mov
icebp
aam
cmp
stos
mov
push
or
pusha
sub
sub
imul
insb
add
push
popf
mov
push
push
and
adc
popa
lahf
sbb
fldl
loope
push
rorb
in
testl
dec
sub
add
jns
or
ljmp
leave
push
sbb
mov
pop
xor
add
dec
out
adc
addb
sub
mov
stos
jb
jno
lret
mov
adc
stos
ljmp
test
enter
adc
repz
fcmovnb
jno
adc
push
cmpsb
addr16
cltd
push
shll
sahf
inc
jle
mov
lahf
jbe
mov
inc
xchg
movsb
jmp
and
cmp
pop
icebp
cltd
mov
rorl
xor
in
hlt
imul
mov
cmp
jno
insb
fnstcw
sub
or
xchg
cwtl
xchg
ret
jae
lock
daa
fisubrl
cmp
mov
ror
mov
add
push
push
cmpsl
sub
add
dec
pop
imul
iret
sub
mov
jg
stos
out
mov
xchg
sub
out
adc
or
adc
mov
inc
rclb
ss
rcrb
fisttpl
adc
out
or
mov
and
inc
jbe
push
sbb
pop
lcall
cmc
mov
loope
ficomps
aaa
cli
push
pop
or
push
int3
pop
ja
cmp
aad
pop
and
cmp
push
or
and
not
xchg
les
rclb
jae
daa
movsl
cmp
out
sti
nop
adc
outsb
pushf
or
mov
push
mov
sub
jo
scas
mov
in
xchg
add
mov
jno
inc
inc
mov
xchg
andb
in
nop
je
push
cli
xchg
mov
mov
aaa
stc
aad
mov
mov
push
jno
mov
sub
xchg
dec
inc
decb
movsb
in
cmpsl
inc
cs
mov
jmp
leave
lcall
pop
mov
mov
xor
mov
loope
cwtl
mov
mov
test
negb
push
or
jo
fildll
pop
sbb
jns
dec
ret
and
int
add
or
cmp
dec
push
sub
fidivrs
aaa
loopne
xor
movsb
mov
int3
sub
cmp
test
int3
or
nop
pop
or
mov
jmp
mov
dec
jecxz
and
adc
adc
out
mov
inc
adc
push
cmp
add
jns
pop
call
cmp
clc
hlt
aam
sbb
cmpb
movl
sbb
push
mov
jne
iret
scas
vpgatherdq
push
jae
dec
ja
popf
or
hlt
jp
lcall
pop
sub
loop
inc
pop
or
sub
test
jle
loopne
stos
mov
adc
enter
lods
hlt
push
mov
ss
insl
rcr
stos
rol
inc
adc
pop
jmp
arpl
mov
enter
push
sahf
and
popf
cmpsl
pop
aam
sub
in
scas
out
fnstenv
mov
sti
negl
cwtl
and
cwtl
rcrb
fldl
fs
mov
aad
push
and
jnp
sbbb
xor
cmp
add
jo
std
fs
xchg
lret
sahf
jl
sbb
jo
mov
dec
hlt
mov
pusha
test
or
jle
fbstp
sub
jne
xlat
and
push
idivl
ffreep
in
xchg
fstpt
repz
fmull
xor
pop
add
gs
fmull
jl
cmc
into
lods
push
notl
insl
shl
mov
stc
and
imul
rep
or
push
inc
add
mov
hlt
jecxz
stc
xor
push
or
mov
dec
dec
das
jo
adc
xchg
test
mov
fsubrl
dec
test
lret
push
push
popf
popf
outsb
rcrb
dec
mov
mov
xchg
mov
xor
push
adc
pop
push
pop
in
mov
mov
les
push
out
adc
mov
xchg
dec
adc
loopne
or
insl
inc
dec
loopne
adc
fmuls
xlat
loope
in
mov
sub
outsl
xchg
test
int3
nop
jae
push
and
aas
fnstcw
jle
test
xchg
jecxz
pop
aas
outsl
mov
pop
iret
out
mov
out
in
xchg
not
cmpl
sahf
sub
xchg
inc
add
jl
leave
jge
dec
lret
sub
clc
add
xchg
rcrl
cli
out
andb
leave
int3
into
sbb
mov
sub
push
je
in
jl
icebp
xchg
mov
aam
push
clc
ds
std
sahf
aas
out
in
xchg
jmp
test
dec
sbb
or
mov
movl
push
ljmp
mov
dec
sub
cvtps2pi
cmpb
push
test
or
addl
imul
shl
cli
mov
std
pop
frstor
repnz
vcvtps2ph
into
loope
cltd
pop
xor
sti
and
jmp
cmpsb
and
inc
push
outsb
xor
mov
mov
push
push
repz
int3
ss
mov
decb
or
insb
inc
inc
adc
sub
push
fs
stos
inc
mov
mov
ret
sahf
test
mov
loopne
cmp
xchg
lret
push
add
inc
lock
sbb
xchg
pushf
mov
repz
adc
xchg
adc
in
push
mov
pop
sarl
jo
clc
mov
and
lahf
jo
and
sub
xchg
cmp
sbbb
mov
sbb
inc
clc
or
sbb
mov
xor
sbb
sub
xor
loopne
into
loopne
lret
jae
lock
sbb
push
dec
shll
aaa
pop
or
mov
shrb
shlb
outsb
popa
xchg
adc
ljmp
push
adc
dec
push
mov
test
clc
push
fadds
inc
subl
jo
mov
xor
push
fisubs
pop
sbb
stc
xor
xchg
sbb
mov
iret
mov
cmc
rolb
mov
pop
jns
cmp
inc
addr16
adc
inc
insb
test
and
fistpl
cmpsb
or
push
repz
in
or
loopne
test
mov
sub
mov
mov
mov
jb
in
into
sub
imul
cltd
subl
loope
jbe
and
sub
and
push
dec
xchg
xor
adc
pop
lret
jb
cwtl
xchg
or
ljmp
in
xlat
pop
mov
pop
fidivl
nop
lock
lcall
push
aas
jp
xchg
lret
and
adc
inc
push
das
andb
mov
add
xchg
fwait
std
jo
das
outsl
or
push
xchg
test
ret
push
jno
cmp
dec
fnstenv
push
imul
in
xchg
add
sub
jmp
mov
lret
fbld
push
int3
sbb
shl
out
xchg
push
lahf
daa
mov
into
jg
cmp
add
mov
imul
lds
stos
push
xor
sti
mov
sbb
xchg
push
pop
add
jns
xlat
aaa
dec
daa
and
movsb
jae
mov
mov
lods
and
pop
rcrb
xorl
mov
or
in
in
cltd
sub
dec
cmp
sti
repz
xrelease
adc
mov
jl
imul
lret
les
stc
fisubrs
aad
fnstcw
mov
cwtl
or
push
cmp
sbb
xchg
rcrl
mov
shrl
pushf
shrb
jg
push
int
lcall
jmp
cltd
imull
sub
cmpl
pop
outsb
pop
jecxz
shl
sub
data16
call
jnp
push
movsl
cmpsl
loopne
push
les
xor
mov
sbb
bound
mov
fwait
movsl
cltd
add
xchg
and
arpl
jl
outsl
filds
aaa
jo
lods
dec
lea
clc
jle
leave
push
mov
jae
fstpt
xor
fistps
sti
and
sub
int3
inc
imul
pop
movsb
xchg
mov
test
int
es
mov
div
mov
fists
mov
xor
js
jl
ss
or
xor
pop
pop
push
mov
iret
dec
mulb
cmp
fistl
stos
or
out
shll
cmpsb
int
sub
dec
cmpsb
mov
loopne
ret
dec
xchg
sbb
push
or
shrb
jb
movsl
mov
jl
scas
cld
xchg
adcl
jecxz
int3
fidivs
mov
xor
in
rcr
fisubrl
loop
test
lret
scas
rclb
mov
jbe
xor
aad
loope
xchg
cmc
jp,pn
jmp
lods
hlt
in
jge
dec
push
movsl
sbb
push
sarb
jo
fs
mov
push
jae
repnz
xchg
out
inc
add
popf
cwtl
xchg
mov
push
lods
stc
xchg
dec
pop
xchg
sbb
or
xor
dec
jbe
cmc
nop
pop
push
aam
and
in
in
sub
lods
lods
adc
xchg
inc
mov
dec
arpl
fmull
and
cmpsl
adc
cmp
out
out
imul
jg
push
fsubrl
iret
push
sti
les
popa
push
sbb
ror
call
jle
and
ljmp
sbb
leave
push
mov
test
sub
xor
mov
jmp
inc
inc
lods
aad
leave
es
push
mov
mov
cmpsb
xchg
adc
cltd
ja
pop
dec
lahf
sbb
mov
call
fidivs
jmp
mov
mov
pop
sub
pop
std
cmp
ja
test
dec
push
imul
pop
mov
fisubs
repz
xor
adc
sub
in
and
pop
pop
mov
lock
inc
stc
into
add
fucomp
push
test
push
jne,pt
mov
out
xchg
lret
in
icebp
out
adc
dec
inc
sub
lret
jnp
lods
insb
inc
rol
pop
lds
and
push
outsb
sbb
es
pop
add
mov
iret
neg
lcall
pop
inc
arpl
stos
jo
push
sti
and
ljmp
test
jp
sbb
and
jne
clc
ja
pushf
jne
mov
nop
popa
xchg
pop
or
movsb
jecxz
iret
sahf
je
inc
mov
addl
shrb
cmc
push
ret
sbb
lods
sarb
pop
sahf
addr16
bnd
cwtl
push
push
push
mov
push
popf
test
jge
fs
push
pop
lods
xchg
loopne
jb
fldt
pop
cmpsl
test
cs
cli
jecxz
jb
das
push
mov
jge
mov
popf
orl
pushf
jg
sub
xchg
in
sub
lea
add
sub
xor
in
bound
and
and
fnsave
orb
inc
and
popa
lret
inc
mov
push
stos
cmp
pop
lcall
sbb
jp
pop
andl
out
dec
or
adcl
sahf
inc
mov
inc
movsb
mov
mov
enter
add
lret
cld
in
add
imul
stos
dec
mov
and
lods
mull
cmp
loopne
cmpb
pusha
sarl
add
adc
stos
jecxz
ss
iret
adcl
pop
jg
lds
sub
xchg
insb
sub
mov
sub
cmpsb
repz
mov
test
xchg
pop
shrl
mov
add
or
nop
cmpsl
stos
stos
loope
fs
push
mov
ss
adc
xlat
xor
mov
les
cs
sbb
push
iret
mov
or
mov
jl
jle
or
cmp
sub
mov
scas
stc
lcall
aas
and
mov
dec
divb
xchg
add
repnz
aam
push
popa
or
out
outsb
or
or
in
mov
cli
hlt
imul
out
int3
cmp
pusha
push
xchg
xchg
out
ja
ds
pop
pop
loop
lret
add
insb
xor
dec
jbe
inc
out
jnp
mov
ljmp
add
jl
add
sarl
loope
roll
sub
cmp
les
mov
loop
mov
adc
rolb
mov
dec
loop
ficompl
imul
push
pop
aad
sbb
dec
pop
in
xor
adc
loope
sbbl
xlat
enter
sahf
mov
xor
mov
mov
dec
lock
in
jne
pop
mov
movsl
popa
or
std
mov
mov
mov
mov
pop
dec
cmp
xchg
push
ret
aad
adc
call
mov
mov
mov
push
in
mov
fucomp
inc
pop
aad
inc
add
add
lods
lret
mov
sahf
and
xor
sbb
out
push
movsl
lret
cli
lret
vpmovb2m
xlat
and
loop
lea
cmp
out
aam
scas
int3
lret
jnp,pn
sbb
mov
fwait
call
rcrl
mov
xchg
aad
sarl
xorb
pop
bound
addr16
add
add
fsubrl
sub
add
std
int3
push
jp
xchg
aad
bound
jl
pop
and
cmp
cmp
pop
iret
mov
sbb
dec
fdivs
inc
mov
movsl
push
push
fildl
and
stc
inc
xchg
lods
stos
sarl
adc
js
jno
les
dec
mov
lock
nop
mov
add
fldcw
mov
and
add
dec
out
inc
scas
insl
mov
xchg
test
call
jge
int3
lea
rcr
out
sub
es
loopne
inc
cmp
ss
daa
mov
sti
pop
xchg
notb
data16
adc
int3
cmp
out
pusha
test
push
mov
test
pop
push
stos
in
jb
cmpsl
movsl
pop
nop
mov
add
and
jg
xor
insb
jge
push
dec
repnz
or
inc
mov
subb
mov
out
and
out
scas
xorl
or
int
or
jb
fsubs
bound
adc
inc
sbb
mov
mov
fcompl
pop
jl
aas
fistps
push
aam
out
fistl
and
cli
out
loop
mov
pop
jb
insb
pop
add
xor
mov
out
sbb
ss
jge,pt
sbb
rclb
mov
out
mov
pop
sub
in
rcrl
lds
inc
jge
pop
shlb
mov
hlt
sub
js
push
sbb
mov
fs
mov
sbb
mov
add
loop
call
aam
xor
push
fdivr
add
inc
sahf
outsb
push
sub
mov
les
jp
jb
mov
xlat
scas
loope
sub
and
loope
in
in
xchg
jne
adcb
and
mov
lret
ffree
scas
jae
je
mov
xor
add
jp
jbe
in
fwait
sub
mov
mov
dec
mov
mov
sbb
iret
add
scas
das
popa
dec
dec
cld
imul
inc
jl
mov
mov
scas
outsb
cmpsb
mov
jns
fwait
aaa
ret
dec
push
adc
mov
lods
inc
cmpsl
lock
incb
pop
dec
adc
popf
das
call
stos
in
and
xor
dec
jb
fiadds
fs
and
mov
pop
jecxz
cltd
clc
int3
sub
in
or
dec
lock
cmc
xor
jmp
mov
inc
adc
push
push
adc
cld
popf
rclb
mov
pop
andb
mov
add
ret
xchg
add
push
push
pop
jg
push
jnp
and
call
mov
loop
or
xchg
es
in
rorl
lahf
notl
cli
nop
dec
loope
stc
out
jno
mov
dec
lret
push
fs
in
or
aas
sub
pop
out
test
in
js
dec
dec
xlat
test
and
mov
mulb
and
test
dec
std
jmp
repz
popa
ja
and
xchg
ljmp
xacquire
jo
in
mov
or
call
mov
lods
cmpl
cmpsl
repz
stos
cmp
dec
add
rcrl
sbb
clc
mov
je
imul
ss
mov
inc
mov
fcoms
mov
push
fnsave
stos
repz
movsl
push
fadds
imul
cltd
inc
mov
sbb
sub
hlt
xor
nop
push
xor
mov
dec
popa
push
or
jne
push
ds
mov
xchg
int3
mov
xchg
inc
je
xchg
cltd
inc
sbb
cmpsb
pop
shr
popa
lods
or
xchg
cmp
dec
movsb
mov
xchg
mov
xor
or
xor
add
imul
jae
and
xchg
int
adcb
lock
repz
mov
insb
adc
xor
fsubrl
nop
ret
xchg
ljmp
xlat
andl
mov
sahf
or
daa
mov
rolb
jbe
insl
jmp
xor
inc
push
push
lods
push
out
pop
push
cltd
ja
imul
nop
into
fmul
ss
push
pop
mov
cmp
cmpsl
fstl
and
push
std
sub
out
in
pop
xchg
jne
out
sbb
sub
lahf
cmp
int
or
mov
adc
or
inc
xchg
cmp
out
out
mov
jecxz
cwtl
inc
aad
movsb
add
mov
les
daa
push
cmp
decb
push
and
scas
scas
outsl
clc
jo
aam
sbbb
pop
daa
popf
pop
push
mov
aad
add
xor
jle
lret
pop
out
mov
jecxz
adc
push
jle
loopne
mov
jmp
mov
adc
outsl
repz
jg
cmp
lret
aaa
xchg
idivb
ljmp
cmp
mov
dec
push
push
not
or
cmpsl
outsl
pop
mov
adcb
mov
and
lahf
daa
sub
and
loope
sahf
clc
int3
sub
sahf
int3
sub
sbb
insb
jne
loop
aam
cwtl
cmp
lods
lds
dec
push
or
dec
xor
xor
in
enter
xchg
push
jb
fisubrl
adc
xchg
jg
adc
lock
mov
ljmp
faddl
adc
cmpsb
mov
add
adc
movsb
mov
pop
adc
jns
repnz
dec
push
sbb
leave
mov
xchg
aas
in
pop
inc
and
push
aas
sub
inc
mov
jno
fisubrs
jl
adc
cmp
add
sbb
flds
pop
xlat
call
outsb
mov
pushf
out
cs
cli
dec
divb
cmpsb
xor
inc
add
andb
jecxz
repz
je
movsb
fidivrl
mov
mov
add
pop
mov
xor
pop
fwait
std
mov
inc
out
sti
mov
cltd
sub
loop
push
cmp
imul
or
daa
jnp
add
pop
mov
ljmp
aaa
bound
lahf
pop
inc
add
bound
sub
and
sbb
or
popl
sbbl
dec
pusha
or
icebp
test
push
push
clc
jnp
pusha
and
pop
adc
xor
ja
and
add
sbb
fdivrl
repz
inc
inc
jnp
jae
sub
push
and
repnz
xchg
add
and
sbb
ss
jp
test
add
bound
cmp
repz
pop
and
dec
insl
xchg
icebp
add
push
fnstcw
xchg
sub
pop
incb
add
mov
pop
sbb
daa
pop
popa
jnp
shll
loop
lret
dec
lret
mov
fnstcw
adc
insb
jb
hlt
mov
inc
mov
stc
mov
js
rep
mov
adc
push
shr
push
fldcw
and
xor
sub
fdivrl
cmp
mov
xchg
push
into
sub
ljmp
stc
jp
sub
lds
pop
or
js
push
iret
movsb
sub
mov
scas
das
fdivr
xorb
scas
dec
hlt
sbb
icebp
adc
push
or
insl
sahf
aaa
nop
rorb
lea
inc
aas
mov
cmp
pop
leave
loop
test
pop
fbld
mov
pusha
negl
and
mov
lds
adc
sub
or
in
repz
cmp
scas
xor
cmc
lahf
or
mov
cs
dec
mov
outsl
sub
xchg
mov
dec
jo
sbb
jmp
icebp
jl
mov
iret
cmp
and
popf
mov
jnp
jecxz
call
popa
or
fadds
fwait
push
xor
mov
push
inc
push
ja
pop
mov
xor
sub
jno
ljmp
lret
iret
inc
xor
add
mov
cmp
xor
mov
lcall
imul
adc
sti
dec
lods
aaa
push
fsubs
mov
lcall
pop
loopne
loopne,pn
mov
lea
xchg
sub
pop
dec
xor
sbb
mov
mov
imul
ss
jmp
xor
insl
rorb
rcrb
or
test
sub
into
stos
pop
mov
xor
stos
cmp
pop
imul
and
inc
adc
sub
mov
sbb
aad
in
lret
sub
jns
mov
lahf
fldt
and
mov
push
adc
scas
icebp
xchg
sub
addr16
lahf
in
js
out
out
mov
setp
scas
or
cmp
callw
std
arpl
adc
aaa
xor
aaa
sti
or
aam
mov
mov
test
loop
stos
jmp
cmp
cmc
jecxz
mov
ret
mov
sahf
in
add
cs
movsl
push
pop
cmc
call
add
push
aad
leave
xchg
push
out
push
mov
dec
icebp
push
push
stc
push
jns
jns
ljmp
rcll
add
push
push
popa
stos
xchg
sub
xchg
movsb
dec
in
inc
add
ja
loop
sub
xchg
clc
scas
and
into
jg
pop
pop
lods
out
mov
adc
imul
aam
mov
jecxz
pop
in
lahf
adc
pop
sbb
movsl
xor
jae
adc
and
addl
dec
mov
pop
je
hlt
stos
lods
ljmp
les
pop
outsl
fdivrl
ret
loope
fisubrl
mov
in
pusha
jl
jae
mov
shr
push
sbb
fmuls
ret
and
jle
and
jp
pop
into
bound
lock
xchg
ret
pop
pop
test
jno
jge
pop
or
inc
mov
movsb
iret
addr16
ret
lret
cmp
cmpsl
movsl
fs
mov
pop
ror
mov
sub
push
in
xchg
mov
cmp
inc
not
jge
jg
jne
out
cld
and
mov
pushf
and
or
sarl
xor
pushf
add
xchg
popf
dec
adc
and
and
cmpsb
loopne
or
mov
mov
xchg
sbb
cmp
sbb
mov
addr16
cmp
and
inc
lret
jo
mov
jg
push
cli
xor
fs
lods
adc
mov
xchg
inc
xorb
xchg
mov
or
jns
cmc
inc
cltd
js
inc
mov
xchg
fdivl
outsb
dec
mov
push
fdivl
or
inc
scas
push
xchg
pop
in
adc
rcrl
ret
ds
and
jb
jno
push
jp
jae
mov
stc
mov
sbb
adc
mov
mov
mov
adc
enter
cld
cmp
adcl
fildll
clc
mov
adc
sub
aaa
adc
iret
adc
sbb
push
sti
cwtl
or
xchg
sbb
jg
mov
andb
bound
mov
push
enter
pop
mov
incb
daa
xchg
sub
push
loopne
or
and
push
lahf
icebp
dec
mov
stc
jo
xlat
sub
nop
push
mov
jno
or
xchg
fwait
movsb
jnp
addr16
mov
dec
pop
inc
addb
push
fstpt
sbb
xchg
sbb
lock
xor
subl
cmp
inc
pop
pop
or
pop
or
sub
mov
cli
push
mov
lods
idivl
push
jmp
stc
scas
sahf
scas
sub
jmp
shl
or
jp
mov
xchg
rcrb
popa
pop
xchg
out
mov
ds
cwtl
sahf
mov
mov
add
fstl
js
mov
mov
dec
jmp
ja
mov
jge
arpl
lret
xchg
movsb
lods
add
jl
sub
jnp
adc
xorl
jo
rclb
incl
push
ljmp
adc
shrb
lock
sbb
aaa
mov
aaa
push
ss
gs
push
jb
int
push
out
or
and
adc
fdivrp
adc
push
loope
xor
add
sub
ret
inc
and
test
inc
mov
popa
insb
test
not
je
icebp
test
jnp
mov
or
jmp
repz
mov
pavgw
mov
push
inc
lahf
mov
jo
mov
and
das
xlat
lock
out
call
add
adc
inc
xchg
out
fnsetpm(287
xlat
xchg
inc
jl
jge
add
push
imul
les
cld
out
repnz
and
jg
xor
adc
divl
in
out
or
aam
xchg
xor
jmp
or
dec
push
sbb
or
add
xor
mov
pop
js
xlat
out
popa
fptan
mov
scas
in
cli
mov
push
jnp
sub
pop
nop
enter
fsub
xor
dec
add
fs
out
clc
int3
dec
push
push
out
xor
ja
subl
mov
mov
pop
xchg
test
cld
cmp
lcall
jns
xor
imul
ret
dec
inc
iret
mov
iret
arpl
jb,pt
or
dec
shl
inc
idivl
mov
inc
shll
add
clc
repz
test
scas
data16
push
mov
cmp
pop
xchg
jo
pop
enter
or
xor
outsl
dec
subb
sub
std
pushf
cmc
sbb
repnz
outsb
loope
sbbl
adcl
mov
and
xchg
ss
into
out
xor
pop
sub
add
ja
jmp
pusha
out
mov
loopne
sahf
jnp
mov
in
adc
add
andl
dec
adc
add
mov
popa
rclb
fwait
test
test
mov
popa
outsl
inc
outsl
mov
sbb
into
xor
mov
test
popf
je
fsubp
and
bound
ficompl
fsub
sub
fnstsw
adc
dec
scas
sbb
cmp
adc
addr16
inc
inc
lret
adc
push
mov
loop
and
mov
pop
adc
jecxz
lock
leave
xchg
popf
push
lds
push
je
cmp
dec
jbe
sbb
mov
push
shll
fs
pop
ret
repz
pop
scas
push
stos
pop
cmpsb
xchg
shll
cs
pop
aas
jbe
mov
fnstsw
int3
pop
in
mov
decb
sub
push
push
add
xor
jns
push
je
sub
mov
jne
repnz
fnstcw
inc
pop
dec
jne
push
cs
inc
sbb
push
sub
adc
pusha
mov
pushf
lock
out
cmp
add
aad
or
stc
lds
pusha
fidivrs
scas
sti
cmp
or
adc
push
push
xor
fsubrs
sti
jbe
sub
inc
xchg
and
ret
inc
sbb
lods
push
sbb
and
stc
cmp
icebp
dec
ja
std
inc
ss
cld
mov
movsb
test
lret
scas
loopne
jmp
int
sbb
adc
popa
fwait
jae
adc
leave
mov
in
xchg
sub
popf
push
add
and
sbb
sbb
xchg
or
movsl
arpl
add
lret
shr
pop
mov
xor
inc
jmp
cmp
or
jle
dec
repnz
ja
lods
adcb
push
mov
mov
inc
xchg
jle
pop
into
aam
pop
xor
std
add
repz
pushf
in
xor
inc
jns
jns
mov
data16
sbb
loope
cmp
insb
nop
push
loop
rcl
jns
cwtl
outsl
ret
dec
pop
or
pop
push
jb
lahf
and
push
sarb
pop
pop
adc
into
loopew
add
jge
xchg
and
fsubs
movsb
adc
call
push
sub
aad
mov
cmpsl
jecxz
xlat
lds
and
add
loop
mov
orb
push
inc
ds
mov
lahf
ficoml
popa
add
hlt
cld
arpl
das
loope
adc
cmpsb
adc
sti
and
jp
jmp
push
sbb
les
into
push
push
sarl
sbb
int
sub
push
jae
mov
jb
inc
pusha
mov
mov
fisubs
jne
pop
es
lock
cwtl
scas
push
in
mov
in
sti
jnp
mov
insl
jl
mov
and
aaa
test
loopne
mov
cmp
repnz
push
test
lods
add
imul
out
jbe
mov
sahf
mov
in
popa
pop
xor
xchg
sbb
push
inc
filds
addr16
inc
pop
sbb
scas
movsb
loop
or
and
rcrb
jb
xlat
push
pop
mov
mov
cmc
xchg
aaa
stos
sbb
icebp
pop
loope
pop
aas
push
pop
pop
aas
jg
shrb
loopne
dec
mov
orb
xchg
in
scas
mov
clc
ret
jecxz
mov
sub
rclb
ret
pop
testb
shll
scas
into
or
out
ret
pop
dec
into
lea
nop
jmp
cmc
int
pushf
js
sbb
mov
fwait
push
cld
das
and
fidivs
outsb
cmc
loop
orb
cmpsl
fcmovnb
pop
push
test
les
add
test
mov
mov
mov
sub
dec
jbe
push
jge
cmc
dec
push
dec
ffreep
mov
cmc
adc
jl
mov
inc
fdivs
pop
pop
mov
mov
mov
je
sbb
sbb
in
cmc
pop
pop
loop
sub
fisttps
mov
adcb
dec
mov
sbb
cmp
or
dec
loope
daa
mov
out
xchg
xchg
pusha
imul
cwtl
into
subb
mov
scas
xchg
fwait
mov
ja
pusha
inc
dec
sbb
inc
and
push
dec
or
inc
mov
dec
dec
mov
sub
push
jo
mov
adc
lods
xor
sahf
push
enter
inc
out
sahf
pop
jns
dec
mov
aaa
iret
pop
enter
add
fdivrs
mov
xchg
add
add
in
iret
pop
pop
int
and
inc
movsb
popl
xchg
leave
push
call
inc
or
ret
sub
out
daa
ljmp
xchg
jnp
stos
out
pop
in
dec
mov
aaa
scas
pop
call
sbb
mov
out
xlat
dec
cmp
in
fwait
lret
and
es
test
adc
dec
mov
lahf
jb
scas
mov
pop
nop
sub
inc
shlb
adc
dec
bound
and
push
int3
jp
cmp
jb
jmp
mov
icebp
pusha
mov
andb
loopne
xor
xchg
sub
and
jb
cmpsl
ror
jno
enter
movsb
cmpsb
out
mov
and
mov
jmp
icebp
push
imul
lods
in
jl
mov
cmpb
sub
test
and
call
mul
dec
clc
xor
sub
fwait
xor
xor
cwtl
aas
and
pop
pop
push
outsb
or
push
push
sub
imul
mov
int
mov
sub
fldenv
es
outsb
xor
in
jne
out
test
shl
xchg
fsubl
mov
adc
mov
mov
sahf
xor
test
and
mov
cmpsb
nop
aas
jecxz,pn
loop
stos
out
dec
xor
xor
test
xchg
and
xchg
lock
lret
inc
push
and
push
mov
out
mov
jns
inc
movsl
decb
mov
fsubs
sub
xlat
mov
bswap
dec
mov
xor
xor
sbb
jle,pn
inc
dec
mov
fldt
xchg
adc
and
adc
ret
mov
in
subb
insb
xchg
add
fistl
icebp
dec
mov
movl
js
jle
dec
shlb
std
je
xor
fstpt
insb
jae
lods
xor
pop
sub
rcrl
shr
sarb
ret
jno
arpl
js
adc
adc
arpl
cmp
push
repnz
push
lods
inc
leave
hlt
mov
popf
pusha
adc
and
bound
loope
imul
cmp
jne
cltd
cltd
pop
and
fwait
mov
add
and
xchg
push
aad
xchg
xor
aaa
pop
dec
jb
mov
sbb
fildll
fwait
lods
nop
jns
repnz
lods
out
jae
dec
add
cmpsb
into
mov
fxch
add
xor
xor
mov
xor
jmp
sbb
scas
cwtl
pop
pop
and
mov
test
jmp
dec
inc
or
mov
mov
out
cmp
adc
or
nop
popa
jns
in
cs
mov
incb
sahf
push
push
add
xchg
jbe
sbb
nop
mov
xchg
dec
lret
repz
mov
in
in
lock
dec
mov
mov
cltd
mov
fstl
mov
ss
mov
enter
jns
cmp
outsb
scas
data16
out
pop
imul
cmp
mov
call
add
ror
pop
int
inc
mov
sub
mov
and
dec
in
add
mov
mov
push
fstpl
mov
mov
jmp
mov
out
fildll
loop
push
cmpsl
cmc
fwait
jbe
xchg
loop
add
nop
ljmp
add
inc
sub
pop
out
je
int3
xor
call
cli
movsb
add
insb
enter
pop
push
js
js
into
sub
jecxz
nop
pop
aam
jne
xchg
lret
pop
in
pushf
hlt
jb
dec
jae
jg
adc
mov
cmp
repnz
jns
cmp
jmp
fs
outsb
inc
cli
lcall
je
jge
mov
xor
test
shl
or
adc
std
add
xor
xchg
pop
rcll
addr16
cmp
adc
jg
jl
dec
cmp
cwtl
inc
xchg
aam
cmp
cltd
jb
mov
nop
rol
lcall
jnp
stos
cwtl
pop
push
sbb
push
pop
ficoml
mov
add
idivl
dec
shll
fcmovb
sbb
mov
mov
lods
pop
aaa
mov
mov
push
mov
in
mov
jmp
adcb
cmc
out
pop
mov
jae
shll
adc
lods
ret
shll
push
nop
mov
dec
cli
mov
and
std
mov
icebp
sbb
ds
out
out
sbb
jge
test
je
pop
or
test
jb
leave
shlb
out
dec
cltd
or
inc
jmp
mov
dec
mov
add
cmc
jmp
push
xchg
xchg
mov
adc
jg
xor
jnp
pop
mov
enter
pop
jg
loope
test
cmpsl
mov
dec
xchg
sub
xor
or
mov
inc
xchg
jge
xor
or
stos
call
jle
mov
jmp
lcall
and
test
adc
pop
jmp
or
cld
daa
fwait
pop
scas
mov
mov
adc
das
adc
or
jmp
push
stc
test
push
mov
ror
rorb
mov
pop
mov
sti
movsb
add
lods
sbb
dec
aam
mov
add
insl
repnz
push
aam
popf
push
pop
sbb
ljmp
inc
xor
mov
lods
jmp
push
mov
outsl
inc
jo
push
mov
fsts
push
fmul
add
sbb
in
inc
xchg
adc
imul
fs
sti
cwtl
mov
imul
and
pusha
int
push
push
enter
dec
xchg
into
and
in
pop
add
jo
inc
shrb
mov
nop
inc
ljmp
push
fiaddl
mov
add
mov
cltd
pushf
jo
mov
loopne
xchg
pop
sub
adcl
xchg
jg
cmp
fidivs
ror
xor
jp
or
rcll
fwait
inc
fsubl
pop
mov
ret
xchg
jecxz
cwtl
mov
ljmp
repz
test
gs
leave
xchg
cmp
cmc
test
xchg
ja
xor
jecxz
jg
sbb
push
cli
data16
dec
lahf
jmp
inc
sub
in
pushf
lds
and
jge
add
inc
sub
outsb
and
loope
xor
xchg
nop
jne
adcl
test
inc
inc
cmp
mov
inc
mov
add
adc
dec
test
mov
pop
xchg
imul
or
addb
bound
adc
mov
rorl
pop
inc
movsb
not
mov
gs
js
push
cmp
push
popa
imul
adc
mov
inc
xor
sbb
inc
add
ret
mov
and
mov
sbb
add
push
mov
xchg
mov
test
jecxz
aad
lret
or
add
pop
aaa
inc
or
imul
les
loop
mov
sub
cltd
mov
ret
inc
sub
int3
dec
lods
cmc
hlt
xlat
cs
sarb
outsb
jb
rcll
jne
mov
data16
push
xchg
adc
mov
cmc
add
mov
add
je
cmp
mov
es
mov
cmp
sub
mov
incb
cmp
sbb
jmp
fistpll
aam
std
pop
mov
ss
ss
js
dec
ljmp
in
dec
inc
dec
div
dec
sbb
xor
jle
hlt
iret
ds
mov
jge
pop
sbb
mov
rorb
sbb
ret
mov
movsb
xchg
pop
push
jae
add
call
js
pushf
pop
dec
push
cmp
mov
xchg
push
mov
je
movsl
repz
push
insl
pop
pop
enter
mov
sbb
pop
fcompl
divb
mov
inc
aaa
or
adc
xor
stc
xor
fsubp
loopne
fldenv
repnz
negl
adc
shrb
or
add
outsb
bound
cli
and
and
aam
jno
mov
sub
jmp
aam
cmp
mov
jge
in
scas
push
lret
ljmp
xor
jae
test
sarl
scas
mov
ljmp
mov
not
pop
pusha
xchg
jb
and
xor
push
das
mov
xchg
mov
jp
arpl
push
fwait
sub
inc
jge
push
testb
push
cmp
or
gs
test
fsubrs
add
add
ja
repnz
inc
fwait
out
test
sarl
aad
fwait
lret
bound
dec
stos
sbb
push
scas
push
cmp
jg
inc
jl
jne
icebp
icebp
sub
sbb
fdivrp
cs
sbb
fmull
lcall
out
or
mov
or
cltd
xchg
es
movsl
nop
pop
add
fnstcw
jl
imull
dec
aaa
mov
imul
mov
popa
push
add
loop
mov
call
loop
and
push
xor
popa
and
cli
xchg
and
pusha
and
orb
mov
push
sti
and
jbe
xchg
stc
inc
cmpsl
sbb
inc
pop
inc
dec
mov
mov
xor
and
cmp
arpl
aas
lock
mov
lea
adc
mov
mov
mov
lods
rorb
xchg
out
mov
jecxz
pop
adc
mov
leave
jmp
adc
std
shlb
decb
andb
sbb
and
pop
aas
sbb
sbb
and
ret
inc
push
icebp
divb
sub
aad
xchg
loop
jle
enter
and
xlat
sbb
je
jnp
cltd
or
int
test
mov
push
fcoml
xchg
ret
call
and
dec
inc
mov
outsb
xchg
ja
adc
test
push
movsl
pop
push
mov
push
xor
into
jge
mov
mov
xor
xor
push
cmpsb
dec
xchg
jbe
lock
mov
icebp
fs
jo
sbb
dec
test
mov
test
xor
adc
imul
cmp
push
icebp
add
xor
into
push
int
dec
aas
pushf
sbb
adc
xchg
or
xchg
aas
push
icebp
pop
mov
push
jb
iret
lea
or
inc
mov
aam
xor
mov
jne
bound
pop
movsl
pop
cmp
fcmovb
adc
outsl
pop
shlb
xor
pop
mov
pop
xor
arpl
fiadds
ret
mov
filds
sbb
inc
sbb
pushf
add
stc
mov
mov
xchg
dec
mov
mov
frstor
xlat
sbb
and
ret
mov
nop
arpl
test
jg
xor
or
push
aam
push
fnsave
adc
push
out
jecxz
xchg
js
xchg
cli
xor
mov
push
aas
out
and
add
mov
sub
fistl
fsubrs
in
mov
add
mov
sub
ficompl
imul
lods
fdivs
cmc
and
cltd
test
mov
inc
push
pop
movsb
mov
lods
hlt
adc
hlt
mov
add
pop
sbb
adc
or
je
cli
inc
int
sub
mov
mov
jl
push
mov
gs
dec
adc
and
mov
xchg
ret
jp
aas
in
push
mov
mov
stc
push
mov
jne
jle
subl
orb
fimull
aad
leave
test
mov
clc
mov
rol
mov
sub
enter
pop
rcrb
jo
test
cmpsl
push
jp
dec
sbb
mov
cwtl
jp
adc
loopne
add
pop
cmp
push
xor
rorl
shlb
mov
pop
jge
mov
and
xor
mov
or
inc
cli
in
addr16
add
fs
dec
lahf
aas
cmp
enter
loope
test
fistpl
addr16
pop
cltd
jmp
div
femms
xor
or
aaa
xchg
leave
dec
divb
ret
call
fwait
lods
fisubrl
mov
dec
enter
test
and
xchg
ss
pop
ficomps
test
xchg
andb
push
cmp
sub
out
arpl
fsts
mull
sub
movsb
popa
hlt
push
popa
pop
push
fst
or
fstpl
sub
sahf
shrl
nop
inc
dec
pop
inc
adc
jbe
mov
xorl
jl
dec
shl
mov
ja
mov
xchg
and
or
movsl
pop
add
loop
sbb
sub
sahf
fcompl
and
testl
fs
push
daa
push
stos
in
pusha
jnp
mov
mov
sti
repnz
pop
mul
loope
mov
das
lret
out
or
mov
xor
das
xchg
jb
sub
je
mov
push
jp
fstpt
repz
jg
test
lret
stos
dec
xchg
pop
dec
fs
les
cmpsb
push
imul
inc
out
mov
cmp
inc
jbe
cmp
add
jmp
push
mov
cmp
mov
outsl
adc
cmpsl
outsl
cmp
push
mov
sbb
sbb
pop
mov
xchg
cmp
into
movsl
fmuls
popa
or
sbb
xchg
cmp
push
xchg
mov
cmp
xor
or
xchg
lret
lcall
ds
movsl
int
popa
cld
scas
lret
mov
jae
scas
outsl
leave
cmp
fsubrs
mov
imul
sahf
fidivrs
sti
mov
fwait
xchg
das
xor
or
stos
cmpsb
jg
and
jne
inc
jne
or
imul
insl
ret
inc
pop
inc
or
test
lret
jne
mov
int
lahf
mov
mov
mov
shrl
js
roll
jp
enter
fnstcw
data16
adc
and
jbe
cmp
push
out
adc
mov
xchg
or
mov
mov
imulb
pop
ljmp
test
adc
xor
add
mov
inc
dec
mov
mov
aad
out
or
dec
ds
mov
lahf
jo
inc
adc
bound
aas
std
mov
dec
arpl
dec
ret
or
aam
sub
mov
add
das
add
push
mov
pop
loop
aaa
repnz
rcl
ror
mov
push
pop
mov
adc
jg
jno
lret
or
call
jmp
jg
jae
mov
iret
fstpt
mov
or
jae
mov
sub
repz
jae
dec
fdivr
idivb
mov
imul
sbb
dec
or
pop
dec
imul
repnz
jno
aaa
ror
jnp
test
lods
mov
inc
sub
mov
loopne
push
add
dec
push
sar
repz
jecxz
repz
hlt
out
test
shl
aas
xchg
ffree
mov
aas
das
add
enter
bound
lret
fldt
cwtl
push
or
dec
sbb
cli
loope
repnz
xchg
gs
hlt
push
jno
xor
sbb
cs
lret
dec
xor
jbe
lods
scas
sub
rcl
mov
xchg
xlat
stos
adc
rcl
fdivs
sahf
hlt
xchg
dec
mov
add
pusha
adc
aaa
lock
pushf
and
pop
fs
sarl
pop
pop
add
rorb
loope
mov
and
addr16
ror
popf
out
aas
and
test
pushf
ss
adc
bound
sub
pop
dec
push
jecxz
cmp
push
and
pop
les
aaa
pop
add
loope
fwait
jmp
idiv
out
xchg
mov
int3
push
dec
mov
hlt
lret
movsb
cmp
shrb
pusha
dec
fistps
aaa
xchg
mov
clc
sbb
lock
outsb
or
in
mov
push
loop
andl
js
popf
or
dec
mov
and
test
test
gs
mov
mov
jne
test
sahf
cmpsl
sbb
clc
lret
mov
loope
mov
mov
dec
subb
inc
js
hlt
lcall
pop
lcall
sub
adc
call
adc
adcl
and
jnp
bnd
add
xchg
aam
dec
xchg
stos
add
pop
mov
pop
les
call
xchg
xchg
faddl
bound
lcall
imul
cmp
mov
sahf
fdivrl
cs
cwtl
adc
insb
ljmp
pop
ficompl
jnp
nop
in
jnp
loopne
fdivrp
cmp
cs
aaa
inc
sti
xor
stc
push
mov
insl
pop
add
push
nop
cmp
hlt
outsb
mov
sbb
filds
mov
outsl
mov
sub
cs
les
sbb
stc
cwtl
inc
jmp
mov
jb
pop
dec
ret
in
sbb
pop
into
call
ret
mov
sub
aas
or
xor
adc
bound
cli
aas
inc
test
and
pop
cmc
cli
dec
in
int
sahf
ret
add
lods
into
mov
mov
cld
pushf
fstpl
fwait
es
test
inc
imul
repz
inc
xlat
lret
add
sub
xor
bound
imul
std
jae
xchg
fcmovb
cli
jp
aaa
mov
mov
fsubr
es
cmp
popf
jecxz
insb
lods
lret
test
fisubrs
iret
adc
loopne
cli
out
sti
cld
mov
sbb
pop
out
movsl
into
jle
fstpt
adc
lret
ja
pop
push
inc
dec
or
mov
scas
mov
cmpl
lock
aam
stc
jp
clc
mov
or
cmp
mov
daa
or
cmc
cwtl
add
add
mov
mov
jle
jle
imul
or
jmp
call
frstor
dec
loop
xchg
test
ss
cmpb
sti
in
je
jne
mov
inc
jo
fucomp
xchg
sub
xor
loopne
adc
adc
test
out
dec
add
out
fidivrs
ret
fbstp
cli
mov
pop
test
addl
pop
mov
fnsave
iret
call
add
ds
dec
lret
sbb
jo
int
mov
and
movsl
sbb
test
sbb
push
shll
js
aad
ds
pop
addr16
in
mov
mov
mov
negb
ljmp
pop
pop
mov
roll
mov
clc
aaa
adc
push
and
sbb
or
dec
sbb
inc
cmp
mov
xchg
push
mov
inc
lret
sahf
call
dec
les
adc
sarl
ljmp
add
fnsave
aaa
and
nop
loope
es
push
mov
push
je
mov
dec
into
cmp
fildll
in
outsl
pop
dec
rcrl
jne
mov
cwtl
lahf
pop
jns
jge
push
mov
rcl
orl
mov
out
adc
in
add
scas
clc
idiv
push
add
call
mov
std
movsl
ret
sbb
outsb
nop
stc
pop
push
fs
cld
push
fstpt
and
out
das
push
nop
cmc
pop
jbe
add
xor
sub
in
clc
cli
cld
push
xchg
adc
mov
loopne
into
jae
push
arpl
lcall
fistpll
mov
outsl
mov
dec
addr16
pusha
add
aas
pop
dec
sub
pushl
pop
mov
push
adc
jbe
mov
leave
sbb
shlb
mov
mov
push
and
les
jo
ss
cmpb
push
and
jmp
in
cmp
add
xchg
call
inc
lret
mov
clc
jb
or
push
lods
xchg
mov
add
arpl
pop
insb
shll
xor
icebp
sbb
pop
push
mov
or
xlat
sbb
adc
jnp
popf
movsl
sub
jb
addr16
pusha
jo
imul
add
repz
lret
leave
sub
dec
dec
and
push
popf
mov
ret
addl
pop
mov
mov
jno
mov
or
inc
sbb
int
and
not
dec
clc
mov
xor
cltd
das
xor
cmp
idivb
ss
add
stos
mov
ds
aad
dec
sub
pop
push
insl
xchg
dec
lret
loope
mov
or
test
pop
mov
lret
inc
loop
dec
mov
jge
sub
neg
or
jbe
lret
imul
movsb
fisubs
lea
in
add
das
int
xchg
testl
hlt
cmpsl
icebp
je
cmp
dec
lods
mov
sbb
mov
loopne
adc
cmp
in
mov
push
cli
sbb
stos
pop
scas
movsb
sbb
lea
ret
xchg
ret
ror
loop
mov
sub
imul
pop
lcall
and
imull
cmp
int3
out
movsb
rcl
pop
inc
mov
ret
aad
out
jp
jmp
sub
mov
inc
aad
enter
jg
fsubrs
pop
cmc
pop
pand
mov
int
or
daa
cltd
std
fdivrl
xchg
aas
add
popf
in
lods
fcoml
mov
xorb
pop
loop
dec
iret
inc
test
pop
adc
cmp
xchg
adc
and
ja
mov
pop
mov
bnd
outsb
push
out
in
jo
mov
lods
bswap
dec
addb
jns
cmc
aas
xchg
mov
cmp
cmp
sbb
sub
push
and
imul
js
aam
mull
push
sbb
xor
jnp
cmp
sub
mov
inc
andb
shr
inc
lock
jne
mov
aad
xor
aas
jge
jno
mov
cwtl
or
add
dec
mov
popf
jge
adc
jno
repz
bound
xchg
jle
subl
ret
mov
pop
aas
jo
xor
pusha
test
das
enter
mov
and
inc
ja
pop
dec
shr
xor
fwait
mov
movzwl
fildl
xlat
fmuls
movsb
xor
dec
fdivr
fisubrl
outsl
rorl
cmp
mov
cmp
cmp
adc
inc
pusha
jg
jecxz
mov
xchg
pusha
adcb
or
je
stc
lcall
pop
jmp
add
popa
sbb
cmpsb
arpl
cmc
mov
aam
and
push
adc
add
jne
fwait
adc
sub
inc
push
pmullw
mov
fdivrs
shrb
addr16
daa
cmp
hlt
mov
dec
mov
daa
jle
mov
popf
jmp
push
jg
outsl
ficompl
data16
mov
pop
lds
stos
jg
and
rorb
divl
mov
loopne
push
xchg
daa
push
jg
pop
test
push
je
lea
inc
lods
dec
inc
mov
dec
mov
ljmp
mov
pop
movsl
sub
notl
iret
xchg
jo
mov
mov
adc
sbb
mov
out
inc
dec
lea
inc
pusha
ret
fistpll
out
sbb
fs
mov
mov
push
leave
lock
popl
jge
mov
xor
pop
loope
mov
aam
sub
push
leave
mov
or
jbe
dec
cmpl
add
mov
sub
ret
cmp
cmpsl
cwtl
mov
mov
sahf
or
or
test
and
stc
test
cmp
pop
cld
push
dec
es
rorb
mov
in
stos
sub
sbb
repnz
mov
cmp
mov
lcall
sub
lea
add
inc
ljmp
mov
inc
arpl
push
imul
call
xchg
push
push
mov
sahf
push
pop
add
xor
add
ljmp
rorb
inc
inc
add
and
cwtl
sbb
out
aam
and
mov
int3
push
or
lock
in
xchg
stos
xor
xor
mov
cmp
ret
xlat
inc
cmpsb
dec
dec
sub
incb
xor
inc
shrb
lahf
sub
test
and
pop
loop
test
mov
lods
pop
cmp
aas
push
fdivl
push
or
dec
mov
sub
loopne
pop
and
mov
push
sbb
lcall
xchg
cli
mov
adc
aas
sbb
pop
pop
cmp
out
lock
mov
adc
sarl
enter
jae
mov
adc
jmp
sub
test
sarl
jl
push
or
popa
ffreep
sub
stos
mov
and
cli
jbe
cmpsl
call
popa
rcrb
loop
dec
xor
cmp
jmp
int
cmpl
or
or
lds
imul
pushf
call
push
lods
push
clc
arpl
pop
dec
lock
out
pop
stos
and
addr16
fdiv
call
sub
outsb
pushf
dec
sbb
test
mov
insl
je
dec
pop
out
fstps
mov
pop
aam
push
mov
fstl
sub
cmc
cld
cltd
mov
or
je
and
cmc
pusha
ret
ror
enter
xor
scas
xor
jecxz
lods
mov
jge
pop
in
cmpsl
sar
fcmovnu
fistpll
mov
jno
ss
sub
push
xchg
jle
je
shlb
cmc
aad
icebp
adc
dec
sbb
and
scas
sti
pop
in
sub
les
dec
inc
sub
fs
push
call
xchg
mov
daa
add
adc
pop
jp
dec
lret
pop
xor
push
adc
or
add
inc
cmp
nop
add
jo
cli
xchg
inc
sub
pop
addr16
jge
subl
jne
out
pusha
and
lods
jmp
xor
adc
sbb
xor
sub
in
andb
arpl
lret
loop
push
test
xchg
stos
adc
scas
into
xor
mov
ret
push
mov
add
xor
nop
stos
lods
ficomps
hlt
mov
fidivs
pop
dec
mov
cld
inc
insl
lods
sub
leave
popf
cmp
call
int
int
mov
inc
loope
pop
sub
shll
pop
lods
iret
fsts
dec
daa
int
ss
xchg
out
mov
inc
andl
add
push
ficoms
aad
test
gs
adc
sub
je
mov
andb
dec
das
jns
pop
icebp
sbb
cmp
or
and
ret
js
stos
push
mov
sbb
dec
xchg
mov
outsl
stos
cmp
fucomp
aas
imul
sbb
lea
addb
inc
add
lock
imul
mov
xchg
inc
rcl
mov
xchg
push
or
lds
mov
and
daa
test
loopne
cmp
cmpsb
lods
mov
popa
pushf
jo
mov
pop
notb
mov
in
rorl
outsb
mov
daa
fistps
cmc
push
xchg
cld
push
shll
add
fcom
mov
mov
push
jne
jg
mov
bound
bound
outsl
int
mov
repz
movsb
push
jge
add
sbb
sbb
mov
mov
fucomip
adc
sub
lahf
mov
out
outsb
lret
mov
mov
test
es
aas
test
mov
fbld
jno
push
repz
or
push
xchg
push
outsl
jmp
adc
dec
je
cmpsl
aaa
loope
sub
loopne
mov
or
push
popf
xchg
outsl
push
cmpl
add
in
sbb
dec
mov
outsb
out
inc
int3
ret
mov
xor
xor
outsl
push
sub
lods
fcmovnu
pop
adc
or
cmp
xchg
jecxz
xchg
mov
loop
hlt
scas
cs
clc
cmp
lret
lods
mov
aaa
xchg
pop
add
pop
rolb
js
sbb
mov
stos
hlt
mov
ficoms
mov
leave
xchg
mov
add
inc
rcrl
pushf
ss
push
cltd
insb
mov
popa
mov
mov
ds
enter
ret
sub
icebp
add
outsb
jnp
mov
leave
push
mov
mov
pop
xchg
mov
lea
rclb
and
mov
mov
mov
stos
jle
outsb
jne
mov
push
pop
and
popf
xor
adcl
pushf
cmp
mov
mov
jecxz
lahf
xchg
sub
sub
inc
in
mov
push
jl
xchg
lods
out
pop
aaa
lds
lcall
lods
js
les
sbb
jg
push
loop
cltd
pop
aaa
mov
movsb
jbe
mov
outsl
scas
sbb
int3
pop
sbb
orb
imul
dec
push
xchg
xchg
xchg
inc
inc
lods
cmp
shr
sbb
sarl
cmpsl
push
xor
out
dec
inc
leave
repnz
loop
js
rcrl
ret
pop
cmp
loopne
cmp
jg
mov
inc
loope
rcl
push
and
stc
jbe
inc
mov
outsb
pop
fsubrs
and
cmp
cmpsb
enter
rorb
and
inc
jno
sbb
cmp
stos
sahf
push
je
xchg
sbb
jns
jg
ss
push
or
sbb
cmp
push
loope
hlt
fcomps
ret
test
aas
jns
rep
mov
icebp
lahf
outsl
notl
mov
out
out
das
pop
pop
and
mov
inc
mov
lahf
inc
sub
lock
pusha
movsl
xor
xchg
sbb
xchg
in
pxor
inc
mov
nop
aaa
into
hlt
loopne
repnz
sub
jno
jg
icebp
lds
sbb
test
out
and
lods
sub
testb
jnp
shll
adc
push
arpl
movsl
repz
loop
insb
rorl
fcoml
jl
or
mov
js
cmp
inc
mov
sbb
and
push
sahf
jecxz
and
fsubr
outsl
insl
mov
dec
sbb
testb
push
nop
jo
jmp
repnz
lea
popf
add
sub
jge
aad
cmc
push
and
xor
xchg
xchg
andb
add
mov
adc
loope
cmp
xor
pop
xchg
jns
repnz
lea
add
mov
xchg
adc
cmp
or
jge,pt
or
popf
dec
int
sti
jns
mov
lock
negb
xor
jle
adc
leave
xor
and
sbb
in
outsl
aaa
fucomip
into
inc
sbb
bound
cmp
mov
into
xchg
fwait
data16
xchg
popa
lods
inc
dec
xor
out
pop
idivb
jb
inc
cmpsl
fnstsw
stos
mov
rorb
movsl
pop
pop
out
add
dec
mov
call
jl
dec
add
xchg
stos
cs
cs
scas
jns
cmp
sbb
sbb
stc
out
jl
cmpsl
sub
aaa
les
sub
add
icebp
or
insb
stos
mov
stc
sub
dec
push
lret
rolb
fisubrl
pop
pop
mov
cs
push
xchg
xor
adc
and
jns
loop
adc
cld
sub
popf
test
lods
ret
jle
sub
lret
aam
mov
aaa
stc
xchg
data16
push
add
cmp
mov
insb
mov
mov
jp
dec
mov
test
push
push
fcomp
jp
jge
fwait
pop
lds
push
sub
repz
xchg
or
mov
inc
add
adc
pop
sub
iret
fisubrl
mov
jb
cmpsl
adc
or
outsl
lea
jno
cmp
push
push
in
outsb
and
insb
das
xor
sub
pop
inc
enter
add
out
mov
adc
mov
mov
insl
std
mov
xor
mov
pop
pop
das
jne
fwait
imul
mov
clc
jb
mov
mov
ljmp
mov
cli
icebp
push
fwait
fs
xlat
push
mov
xchg
adc
mov
mov
adc
cmp
or
lea
mov
out
jecxz
xchg
hlt
out
xchg
push
jbe
mov
rcll
adc
clc
popf
lea
pop
and
pop
repnz
adcb
mov
sub
jge
or
pop
jnp
mov
jg
mov
lods
xchg
cmp
aas
sbb
and
lods
cmp
nop
inc
jae
ret
lds
dec
rorl
and
mov
xchg
inc
xor
or
lods
adc
cmc
xchg
sahf
and
sbb
add
insl
ror
scas
mov
paddw
pop
and
aad
xchg
and
xor
xchg
xor
leave
mov
pop
cwtl
cld
enter
adc
jp
mov
jns
es
sub
sub
mov
inc
xor
mov
gs
jns
jnp
insb
and
sub
jno
mov
jle
push
outsl
pop
lahf
lcall
jl
cld
fwait
or
mov
and
push
es
and
movsl
cmp
call
imul
cmp
and
jecxz
xchg
int
mov
xor
xchg
push
mov
je
mov
push
jmp
clc
out
aad
xor
xchg
cld
add
adc
mov
jmp
push
test
cwtl
mov
aas
jp
ja
jge
vpmulhw
mov
leave
push
mov
push
es
sub
sub
jmp
jle
and
add
mov
stc
rorl
push
out
js
dec
js
sbb
jg
jg
fidivs
cld
js
mov
push
pop
jb
shlb
adc
test
imul
jnp
sbb
push
mov
cmp
out
lock
jne
pop
mov
push
in
mov
movsb
mov
xlat
mov
aas
adc
or
adc
pop
enter
push
pop
dec
insl
lods
or
jg
jecxz
add
xlat
push
out
nop
adc
xorb
lods
imul
mov
call
add
pop
int
cmp
imulb
jmp
movsl
cmp
or
cld
fimuls
push
mov
adc
or
mov
sub
lret
cmp
shll
add
test
andl
rorb
cli
repnz
cmc
and
ret
ds
xchg
or
xor
adc
or
in
negb
les
adc
pop
push
int
aam
mov
dec
bound
ret
lods
push
inc
aad
dec
jl
aaa
rorb
dec
ljmp
mov
repz
std
sbb
movsl
mov
pop
add
fidivl
sbb
xchg
cmp
sbb
inc
ljmp
mov
dec
cwtl
ret
fs
call
sbb
lock
xchg
jb
push
dec
out
push
mov
inc
mov
cli
leave
push
lock
or
adc
loope
xor
xor
aaa
arpl
mov
add
jmp
ljmp
movups
mov
dec
mov
aas
mov
adcl
testl
nopl
movsb
push
adc
mov
lods
int3
push
mov
sub
out
rolb
pop
dec
push
jbe
pop
aas
je
divb
stos
or
inc
sbb
or
sbb
test
shll
pop
ficoms
gs
xchg
imul
sti
in
add
iret
imul
stc
xchg
mov
call
lret
ds
pop
ljmp
mov
push
inc
add
sbb
jb
cmp
xchg
aaa
sub
cmp
or
cmp
jge
ss
cmp
lds
lods
inc
xchg
fimuls
rol
push
clc
popa
and
mov
fucomip
es
jmp
jno
cltd
mov
shr
js
xchg
rorb
iret
les
dec
and
mov
ja
cs
pop
lcall
push
or
jmp
cmp
imul
xor
cld
mov
jnp
imul
mov
xor
dec
mov
js
rcrb
jo
push
inc
jle
or
and
das
push
jge
ds
loopne
cld
adc
lds
fs
pop
inc
and
out
sahf
pop
jp
xchg
inc
outsb
dec
rorb
jmp
lret
push
or
jle
adc
sar
or
pop
sti
pop
sbb
cmp
jo
add
xor
pop
shr
dec
cli
pop
inc
xor
mov
and
xchg
push
mov
dec
push
xor
adc
xchg
xchg
je
cmp
pop
les
sti
and
rcrl
sbb
jp
add
je
dec
or
sbb
repnz
pop
ja
jp
pop
sub
cmpsb
aas
jecxz
add
mov
aaa
push
mov
jle
daa
jae
mov
or
and
test
pop
add
jg
pop
push
mov
fcomip
sbb
and
jnp
pop
pop
push
lock
mov
jne
std
xchg
inc
test
push
pop
in
or
add
cmp
shlb
mov
sti
shll
pop
sbb
add
jecxz
cmpsb
testl
add
outsb
rorl
pop
out
cmp
xor
xchg
add
jne
add
mov
sbb
in
mov
pop
loopne
push
dec
sahf
icebp
dec
sub
test
insl
mov
movsb
mov
xchg
xchg
loop
fisubrs
add
and
ret
or
mov
outsb
movsb
stc
lock
pop
fisubl
jns
es
popf
ret
cmp
adc
fwait
aam
add
addr16
aam
test
cmp
add
adc
sub
iret
mov
push
rorb
mov
mov
push
add
pop
ljmp
xlat
pop
xchg
shrb
pop
dec
inc
cmp
or
pop
mov
pop
jle
pop
fidivrs
mov
xchg
repnz
and
fdivrp
bound
push
and
sbb
jge
fstl
lcall
adc
adc
test
mov
clc
and
push
ja
mov
ret
and
bnd
bound
add
xlat
cmpsb
push
push
int
mov
sub
adc
pop
test
icebp
jno
popa
cli
xchg
mov
aas
test
mov
mov
das
cmp
inc
sub
mov
mov
push
xor
test
inc
rclb
xor
pop
push
adc
add
aaa
dec
xchg
or
fisttps
lock
not
add
xlat
push
add
mov
popf
add
mov
test
inc
adc
repz
jns
cmp
mov
push
aam
sti
mov
fwait
add
jp
cwtl
ja
mov
pop
pop
adc
xor
jo
inc
lods
or
dec
and
or
mov
test
cli
push
out
mov
in
or
shrb
aaa
and
or
push
cmpsb
dec
test
aad
inc
pop
enter
pop
pop
lods
andb
mov
or
mov
and
out
xor
leave
adc
cld
mov
mov
ds
cmp
repnz
lods
dec
sub
adc
cmp
or
cmp
push
push
arpl
dec
mov
xchg
xchg
sbb
mov
push
in
pop
cmp
and
fiaddl
ret
int3
push
push
das
xor
xchg
sub
or
xchg
rolb
dec
aad
push
imul
data16
add
mov
mov
stos
sub
lret
stc
not
popa
dec
pop
push
fnsave
add
push
imul
out
sahf
pop
sub
test
sahf
mov
cltd
mov
je
adc
ficompl
aas
out
jae
push
sub
jge
sub
stos
xchg
imul
mov
add
inc
mov
inc
xor
mov
fprem1
lods
clc
xchg
pop
hlt
mov
in
adcl
mov
push
add
aam
xor
jns
jno
xchg
and
cltd
xchg
cmp
add
cmc
outsb
daa
repnz
mov
mov
sbb
stc
or
or
mov
out
push
decl
les
ret
or
aas
scas
movsb
push
mov
dec
fcompl
enter
lods
enter
aad
insb
push
pop
sbb
lock
sbb
push
mov
fneni(8087
call
mov
mov
or
dec
dec
jp
inc
push
mov
push
xchg
fwait
push
pusha
or
pop
sbb
xchg
dec
or
enter
int
dec
sbb
pop
bound
xchg
sub
lock
stos
test
ja
int3
insb
jge
cmp
stos
mov
outsl
cmpsb
mov
adc
pop
jl
push
pop
in
cmp
or
pop
or
and
loopne
dec
or
sbb
mov
push
xor
fisubrl
insb
jle
xchg
jge
dec
xchg
mov
mov
adc
push
ret
lret
clc
pop
xor
movsl
mov
ja
aaa
sbb
int
adc
lods
je
mov
mov
pop
sbb
ja
dec
rcll
test
ret
dec
mov
jg
xor
inc
shl
and
orb
push
dec
aad
in
push
sbb
popa
fldenv
mov
adc
dec
fcoml
fs
push
xor
xlat
jb
pop
shlb
mov
and
imul
dec
loop
mov
sub
mov
add
in
andb
jp
lds
outsl
xchg
jo
mov
add
mov
mov
mov
push
or
stos
xchg
xchg
inc
fisttpl
insl
hlt
adc
pop
loop
lahf
jmp
sub
fdivrl
jl
and
xchg
repz
or
add
and
fsubrl
push
stos
into
dec
fsubrl
pop
push
dec
pop
call
fisttpll
mov
adc
cmp
cmp
rcr
fisubrs
mov
movsl
and
mov
popf
mov
xor
mov
stos
clc
lahf
sbb
sbb
pop
push
push
fiaddl
sahf
push
shll
add
sti
adc
mov
dec
cmp
xchg
sti
jp
js
stos
sbb
mov
orl
jnp
jl
sbb
mov
sar
push
out
gs
jge
cmp
mov
mov
inc
jmp
pop
cmp
add
dec
addb
jo
decb
add
pop
jle
aaa
mov
int3
cmpb
add
push
xchg
add
cld
and
cmc
pusha
rcrb
adc
sub
or
lock
sti
test
cmp
hlt
pop
and
push
push
mov
or
insb
out
push
fcmovu
xchg
outsl
lods
adc
insb
push
scas
arpl
or
xorl
adc
stos
out
push
loope
ret
push
sbb
fs
push
outsl
and
mov
inc
hlt
push
lret
arpl
ja
or
mov
sub
cmpsl
dec
xor
fdivr
lods
and
push
testl
push
xchg
fimull
inc
mov
mov
leave
imul
jbe
repnz
and
and
out
test
test
shrl
pop
cmc
inc
xor
mov
int
mov
sbb
test
lds
push
mov
frstor
and
xchg
setne
je
hlt
daa
enter
inc
pop
adc
mov
jl
xchg
cs
test
out
and
mov
or
push
xchg
cmp
ret
mov
arpl
test
arpl
mov
cs
out
repz
pushf
xchg
xor
pop
fildll
jnp
pop
push
div
imul
pop
jl
out
punpcklwd
into
xor
sub
push
out
add
inc
sti
rcr
xchg
ja
or
fadd
dec
cmpsl
mov
loop
mov
shl
mov
inc
mov
scas
movsl
test
paddd
inc
cmpsl
movsl
aaa
lds
jmp
cmp
or
cmpb
call
push
xor
xor
jecxz
cmc
push
push
mov
adc
cld
addl
ja
jae
adc
xchg
bound
enter
les
test
mov
loop
xor
lea
mov
in
les
pop
push
or
nop
push
fiadds
pop
jb
cld
jg
xchg
lea
hlt
push
aas
mov
mov
xor
pop
fdivrs
fsubrl
pop
ja
cmc
sbb
push
repz
xchg
xor
cmp
adc
mov
fmull
jb
add
sub
imul
nop
out
mov
lds
inc
adcb
shlb
or
shll
inc
xor
jge
lahf
stc
int
xchg
xchg
dec
mov
js
ret
cmp
cmp
scas
int3
lods
push
cmc
mov
inc
test
cwtl
inc
fisubrs
add
daa
ljmp
push
leave
push
cs
stos
idiv
fcompl
mov
pop
imull
dec
imul
jo
fcomi
and
call
sbb
inc
xchg
in
push
int3
jmp
push
iret
pop
dec
mov
jbe
das
loope
sbb
add
or
push
jbe
adc
mov
pop
int
stc
lcall
dec
aas
sub
std
roll
fnstenv
lods
in
fstpt
xor
or
pop
and
adc
cmp
jmp
jp
fdivs
add
xchg
mov
mov
xlat
push
mov
mov
jl
repnz
int3
ja
insl
mov
adc
cmp
lret
add
add
daa
sub
sub
adcl
out
push
cmc
xor
je
jnp
mov
sub
sub
ja
cld
inc
add
sahf
fs
mov
fwait
or
js
cmpsb
lods
sbb
lahf
sub
sbb
xlat
hlt
icebp
clc
mov
mov
cmpsl
and
lcall
subb
ja
scas
mov
cmpsb
push
push
sbb
into
mov
jo
push
push
rorb
cs
push
js
test
sub
test
pop
subl
rol
pop
roll
mov
xor
jl
stc
loopne
sub
pushf
xor
test
leave
jns
pusha
popf
insl
mov
flds
dec
sti
ja
test
outsb
push
mov
movsl
mov
jno
sarb
ljmp
mov
sub
mov
add
adcl
mov
cmc
inc
jno
adc
cli
bound
adc
repnz
pusha
andl
sahf
push
popa
je
mov
or
and
arpl
aam
lcall
add
or
in
pop
xor
push
jge
or
pop
lret
jb
or
or
fsubl
sbb
paddw
lcall
aam
int
popa
cmp
dec
pop
mov
pop
out
jg
xor
icebp
or
shll
ds
or
sbb
testl
pushf
sub
pop
or
fcoml
mov
push
xor
addr16
cmp
jp
inc
es
xchg
testl
fstpl
push
xchg
dec
out
es
leave
rorb
rcr
push
cmpsb
jmp
loope
cvtpi2ps
ljmp
jmp
iret
inc
push
rclb
or
inc
mulb
xchg
in
xlat
xchg
jle
push
push
std
sub
dec
or
pop
sub
aaa
loopne
add
mov
cmp
addr16
dec
add
cmpb
in
xchg
adc
dec
lds
push
dec
cmp
scas
jg
int3
jno
inc
mov
add
mov
add
inc
inc
inc
les
cmpsb
mov
fisttpll
push
ljmp
pop
push
mov
cmp
jmp
loopne
cmp
sti
shlb
sub
roll
rcl
inc
hlt
ret
repz
in
or
jae
fwait
sahf
push
dec
dec
jmp
xchg
mov
orb
pop
mov
push
ud2
fisubs
out
add
jb
fbld
mov
gs
fistps
fwait
xchg
push
orl
insb
or
xchg
js
jmp
movsb
or
xchg
sahf
cmp
push
sub
mov
mov
pop
fs
and
pop
fdivrs
sti
idivb
mov
call
dec
dec
movsl
test
addl
sbb
int3
sub
pop
out
cli
sbb
push
jecxz
push
or
imul
pop
jns
or
jg
cmp
pop
inc
icebp
std
pop
bound
mov
clc
dec
mov
pop
add
mov
outsb
xor
movsb
push
fisubl
or
jbe
add
ljmp
fsub
pop
adc
pop
xchg
xor
mov
mov
pop
cmpsl
lea
and
ret
subb
sbb
sarb
or
sbb
lock
lea
stos
mov
inc
jp
add
xor
das
stos
movsl
dec
cmp
fcmovnbe
and
fdiv
cmpsb
or
or
sbb
sti
stc
rorl
pop
push
ljmp
mov
lea
sahf
outsb
or
aam
sub
test
mov
sbb
imul
cli
jl
xor
popa
out
stos
sahf
pop
or
mov
std
cmp
fdivl
movsb
mov
pop
add
push
rsqrtps
mov
ret
xchg
iret
mov
jne
jne
loopne
adc
mov
inc
out
pop
sbb
push
dec
cwtl
mov
bnd
or
inc
into
int3
jo
stos
testb
inc
pop
pop
pusha
pop
mov
push
cmp
into
clc
sahf
notl
mov
pop
scas
sbb
xor
xor
invd
das
jns
xchg
mov
or
test
sub
sbb
ljmp
call
mov
lsl
dec
insb
mov
fstpt
jge
jbe
test
dec
pop
and
jle
icebp
and
jbe
mov
test
fistps
lret
mov
es
push
fadds
or
xor
xor
xor
or
test
popaw
pop
test
cmp
and
pop
sub
mov
arpl
lret
xor
sub
cmp
and
pop
push
into
pop
int3
xor
cs
sti
lret
ret
xchg
mov
fiadds
cmp
ja
cmp
sti
sub
xor
mov
and
xchg
push
lods
movb
inc
pop
adc
call
adcb
push
ret
pop
or
push
outsl
cmp
mov
and
or
jp
and
sub
inc
mov
cmp
iret
push
stos
and
popa
pop
imul
ljmp
mov
in
xor
loop
hlt
fsubs
sbb
xchg
xchg
fistpll
sti
nop
data16
jne
pop
clc
lcall
in
mov
mov
test
add
or
cwtl
test
or
pop
adc
mov
bound
in
mov
push
cmp
dec
gs
sti
or
add
sti
lds
sub
cmpsl
andl
xchg
adc
jmp
inc
loopne
les
xchg
sub
mov
es
dec
dec
gs
dec
jo
xchg
pop
pop
sub
enter
pop
or
lret
addl
xchg
push
jnp
push
jg
mov
aad
mov
rorl
sub
stos
test
js
adc
ljmp
sub
lock
sub
inc
mov
xor
mov
aas
jo
lds
and
rcrb
mov
adc
dec
js
mov
clc
push
fistpll
dec
jo
insl
movsb
xchg
lods
xor
jecxz,pt
mov
nop
inc
ret
sub
dec
rcr
mov
int
lcall
add
rclb
cld
adc
push
push
inc
mov
cmp
subl
movsl
push
fst
and
push
cmp
sub
add
ret
cmp
mov
adc
sahf
fucom
lods
sub
xor
test
inc
jg
mov
rcll
push
popf
and
notb
les
add
pop
gs
loope
mov
clc
imul
scas
xor
add
mov
in
jb
leave
push
mov
mov
cwtl
shll
push
xchg
imul
cltd
xlat
insl
push
and
pop
cmp
sub
outsb
stos
ret
adc
mov
dec
fwait
mov
repnz
jne
out
jl
mov
adc
repz
into
test
pop
pop
out
pop
pop
cmpsl
adc
out
in
es
jb
mov
sub
xlat
xchg
call
sbb
cs
push
sub
fldcw
sbb
push
pushf
cmp
inc
push
adc
lahf
sub
pop
and
lcall
mov
rcl
pop
xor
add
push
test
dec
ret
jp
mov
push
sbb
xchg
jmp
outsl
pop
fnstenv
pusha
nop
pop
icebp
vmovaps
inc
fcompl
fstp
xchg
pop
iret
imul
mov
xchg
sbb
fnstenv
mov
mov
lock
add
clc
mov
mov
rol
f2xm1
leave
or
push
xor
rolb
push
cld
and
push
dec
movsl
pop
push
add
cmp
push
loope
out
in
cwtl
movsb
in
bound
xchg
addr16
mov
or
popa
mov
and
jl
cmp
sbb
in
leave
sbb
mov
enter
icebp
call
ja
inc
xchg
add
xor
fistpll
push
imul
ds
scas
fdiv
lods
lods
mov
mov
test
push
push
fsubrs
mov
mov
cld
test
jne
hlt
xchg
push
dec
sahf
mov
fisttpl
in
add
mov
push
mov
decb
in
xchg
or
xchg
pushf
sbb
lcall
scas
leave
icebp
and
cs
jmp
rorb
lret
adc
jmp
outsl
cli
adc
insl
scas
addb
les
sub
xchg
pop
pop
pop
add
inc
inc
lods
cmpsb
bnd
xor
nop
call
popa
and
test
fidivl
cmp
dec
cwtl
xlat
outsb
cmp
dec
inc
dec
mov
daa
sub
shll
mov
jecxz
ljmp
scas
pop
test
and
and
xor
mov
mov
or
inc
adc
outsl
pop
mov
cmpsl
dec
pop
mov
cmp
out
or
cmp
push
jo
imul
dec
lods
jl
sbb
mov
mov
mov
insb
mov
push
in
cmpsb
sub
fsubrl
test
mov
pop
xchg
and
lea
xchg
cmc
mov
faddl
cld
inc
cwtl
adc
cmp
test
mov
xchg
faddl
sub
adcl
sub
vmaskmovdqu
leave
imull
mov
xchg
pop
int
cmpsl
jns
or
insl
lret
xchg
cltd
xchg
mov
push
stc
imul
xor
faddp
push
jle
in
scas
mov
add
pusha
ljmp
mov
xor
test
dec
xchg
fcomps
mov
push
jp
pop
enter
cltd
cmp
imul
fldln2
ljmp
push
jecxz
jl
mov
jno
mov
movsb
jecxz
xchg
cmp
mov
gs
cmp
add
addb
adc
out
and
sbb
cmp
insb
or
repz
mov
js
aaa
jno
iret
pushf
dec
sub
fcomip
jmp
dec
lock
jo
insb
rolb
mov
mov
std
push
pop
cld
adc
cmp
pop
sbbl
push
adc
ja
sbb
mov
scas
sub
and
and
test
insb
rorb
out
subl
push
movsl
mov
nop
lret
cmp
aad
xor
lods
sbb
js
xchg
data16
icebp
repnz
mov
mov
mov
cwtl
sbb
and
jns
sbb
loope
fsub
inc
cwtl
clc
adcl
mov
or
pop
sub
inc
inc
xchg
mov
cmpl
or
mov
loope
sbb
cmp
ds
xor
ret
mov
jno
jnp
cmpsl
jmp
pusha
cwtl
mov
in
stc
out
push
test
fsubl
pop
sub
and
ss
mov
sbb
mov
mov
mov
cwtl
dec
mov
cld
test
mov
sbb
das
aas
cmp
mov
stos
popa
push
jae
popa
cmp
pusha
xchg
popa
icebp
mov
dec
jg
jae
out
lahf
insb
mov
adc
aad
loop
dec
shrd
inc
cmp
jns
mov
pop
data16
call
sti
jns
and
add
jns
cmpsl
adc
clc
jecxz
add
sub
xchg
insb
shrl
hlt
insb
sbb
push
push
mov
mov
iret
xor
pop
popa
lods
mov
outsb
out
or
sub
aam
mov
pop
mov
pop
mov
and
lret
adc
push
sbb
pop
mov
xchg
in
cli
mov
inc
je
xor
idivb
dec
push
jbe
cwtl
cmp
inc
xor
sahf
leave
fwait
xor
ljmp
adc
nop
imul
sti
or
aam
or
mov
dec
mov
mov
outsl
inc
pop
rolb
pop
aaa
je
jg
lret
popf
xor
in
mov
jb
rcl
or
xlat
pop
movb
sbb
sbb
and
xor
pop
push
fisttpl
movsl
mov
jl
add
pop
mov
ljmp
js
stc
pop
xchg
enter
fnstsw
mov
pop
and
imul
nop
ret
adc
push
das
sbb
arpl
jp
fstpt
fstpt
loope
mov
xor
dec
cmpsl
aad
and
jp
inc
mov
dec
fisubrs
pushf
mov
iret
pop
push
ret
cwtl
insl
fs
popf
mov
and
or
fistpl
rol
aad
push
je
es
iret
lcall
mov
jl
mov
cmp
mov
cmp
jle
push
or
and
jle
call
adc
mov
sbb
mov
mov
pop
lods
sub
out
add
adc
dec
in
das
iret
stc
aaa
and
adc
inc
rclb
pop
cmp
mov
mov
fcomps
sahf
imul
nop
in
aam
mov
aas
pop
jge
push
jae
sub
int
vpsubsb
dec
movsb
xor
xor
sub
ficoms
in
cmp
outsl
pushf
popf
aam
shrl
push
inc
popf
mov
push
lret
mov
outsb
jle
cmp
negl
mov
test
inc
roll
or
mov
cmp
mov
test
fpatan
lcallw
mov
xchg
and
push
testb
sahf
push
std
adc
add
lds
in
jns
sub
pop
test
pop
adc
inc
les
cltd
hlt
leave
in
adc
fnsave
xlat
sub
fstpl
xlat
and
imul
in
jnp
and
sar
and
sahf
aam
jl
lret
jne
mov
aad
sub
lock
add
push
loopne
xor
jecxz
push
push
das
das
jns
jg
mov
cmpsl
enter
mov
aam
ljmp
popa
rcr
cmp
and
add
out
repz
cli
lret
dec
sbb
or
xchg
jno
adc
pop
in
clc
xchg
cwtl
pop
jle
ret
add
scas
lock
repz
int3
adc
jne
sub
xchg
iret
add
sarb
flds
xchg
ret
pop
xlat
add
cmp
stos
inc
mov
or
and
test
adc
sbbl
or
cmp
dec
or
mov
inc
sub
leave
sbb
aam
sahf
xchg
pop
mov
lods
xor
xor
mov
cld
jle
jno
mov
pop
fsubp
stc
cmp
outsl
sub
js
jns
and
arpl
cmp
in
fdivrs
in
jge
sbb
std
push
mov
in
and
lods
test
int
sahf
xchg
fcmovnu
push
icebp
pusha
inc
inc
daa
mov
and
je
inc
nop
mov
pop
push
mov
negl
inc
call
jg
mov
ret
mov
sbb
xlat
push
into
testb
lret
scas
xlat
xchg
jg
dec
pop
mov
xor
rcrb
lcall
or
adc
xchg
icebp
mov
in
in
jge
dec
shl
sbb
idiv
lods
shll
pop
insl
sbb
mov
jo
xor
cmp
fldt
push
jno
push
mov
clc
sub
jns
add
pop
sti
mov
int3
or
cmc
dec
jne
and
push
jns
jb
xlat
ds
mov
ljmp
repz
fnstsw
fs
arpl
mov
out
inc
pop
adc
iret
cmp
adc
loope
outsl
hlt
js
xor
dec
scas
or
or
movsl
adc
data16
out
cmp
pop
sub
jne
push
xor
and
xchg
pop
lock
jl
movsb
pushf
mov
sub
and
sub
add
repz
pop
stos
lcall
inc
sahf
fisttpll
outsl
dec
or
aad
pop
push
ret
sbb
add
adc
lahf
jbe
jne
fbld
xchg
xor
xchg
jno
shlb
cmpsb
cmp
sbb
es
test
cmpb
je
jmp
clc
das
xchg
popf
aas
cld
xor
push
lret
dec
enter
lret
shl
mov
hlt
xchg
jge
mov
pop
ds
cld
fwait
pop
push
mov
in
movb
add
cmp
and
dec
sbbl
adc
jno
test
je
sbb
inc
jl
or
jnp
aad
push
sub
mov
mov
pushf
enter
hlt
pop
mul
loop
test
xchg
jp
sti
shrb
mov
loope
push
out
push
daa
sbb
xor
sub
ljmp
lods
cld
pusha
popa
jl
js
out
mov
sub
imul
aad
pop
popa
cmp
cwtl
mov
jne
aas
dec
andl
push
mov
mov
mov
lcall
fstpl
or
ljmp
arpl
ds
xchg
xchg
sbb
adc
sub
insl
jae
or
movsl
lds
xchg
mov
adc
scas
movl
out
inc
jg
xlat
jne
push
dec
insb
out
mov
dec
js
lock
sub
or
inc
mov
mov
in
mov
stc
int
lcall
leave
jle
dec
stos
std
js
cmpsb
cmp
sbb
repz
mov
fildll
xchg
daa
sub
lods
into
jmp
xor
data16
adc
mov
cmc
adc
jae
xchg
dec
orb
flds
ret
dec
jle
jno
in
outsb
inc
sbb
loope
pop
sar
cwtl
fldl
clc
dec
adc
fiaddl
inc
lods
fadd
push
or
test
popa
push
lds
cs
dec
mov
outsb
std
lahf
or
int
xchg
mov
sbb
xchg
and
aam
xor
nop
arpl
push
ret
pushf
jno
or
lea
adc
loope
andb
xor
jbe
aas
sbb
cmp
push
mov
movsb
xchg
sub
ljmp
mov
in
or
popf
xchg
test
in
cmpl
shlb
jns
ljmp
test
adc
xchg
lcall
gs
stos
mov
jbe
pop
fwait
add
add
sbb
mov
inc
iret
aas
or
inc
inc
call
jno
xor
inc
xchg
add
addb
adc
push
idivl
pop
bound
push
xchg
addr16
leave
out
imul
push
out
in
jo
sahf
push
jge
mov
std
dec
jo
pop
xchg
sub
jp
ss
xchg
add
sub
mov
test
shr
fwait
jne
inc
test
pop
mov
xor
inc
sbb
movsb
mov
inc
dec
cmp
les
or
rcrl
psllw
rorb
mov
push
insl
xchg
shrb
icebp
cmc
fisubs
out
mov
cli
sub
negl
lret
xor
dec
pop
adc
rcll
and
push
inc
sub
out
pop
mov
jl
xchg
daa
xchg
aam
mov
jns
mov
inc
push
cmpl
repnz
xor
lods
add
scas
xchg
fdivs
xchg
stos
mov
lret
iret
testl
add
fisubrs
lods
inc
rol
dec
or
ds
scas
and
or
sbb
fnstcw
jno
lahf
mov
pop
push
fisttpll
jbe
mov
orb
mov
jg
into
mov
mov
aaa
dec
and
mov
lods
cs
in
mov
xchg
inc
push
or
mov
int3
and
cmp
sbb
loopne
add
add
lds
sub
sbb
lock
dec
adc
add
push
push
ret
add
adc
aas
dec
pop
and
loopne
sbb
clc
lock
mov
int3
jnp
mov
push
and
imul
push
inc
aaa
inc
sbb
jle
adc
jns
sti
xor
cmpsb
je
aad
cmp
and
pusha
ret
mov
pushf
push
aaa
jp
idivl
hlt
pop
mov
nop
xor
das
adc
dec
push
cwtl
imul
and
movsb
sbb
rcll
xor
subl
mov
mov
mov
out
test
into
jno
jp
mov
lret
cmp
push
mov
adc
leave
popf
jg
int
xor
movsl
cwtl
pop
mov
sbb
test
cmp
mov
add
sub
xchg
inc
mov
rorl
sub
sbb
arpl
jnp
fcoms
jno
insb
sbb
xchg
fsubr
int3
es
adc
cmp
mov
xlat
cli
inc
mov
xchg
pushf
push
shr
push
pop
mov
mov
orl
mov
fiadds
mov
rolb
aas
insb
aam
add
ror
aas
ret
pop
mov
pusha
sbb
inc
jg
mov
insb
rcrb
jecxz
jnp
push
mov
test
mov
xchg
push
cmc
fnstenv
div
xor
arpl
ret
adc
dec
movsl
sahf
jge
movsb
ja
gs
inc
mov
xor
test
lret
hlt
or
inc
testl
push
test
mov
cwtl
cmp
sub
xchg
popf
add
pop
lahf
push
cmp
mulb
or
popa
daa
push
mov
or
adc
je
std
lahf
stos
mov
cmp
mov
pop
loopne
insl
iret
mov
cli
jo
sub
pop
push
fsubl
jle
out
pop
in
or
cltd
xchg
mov
stc
inc
mov
sti
mov
stos
dec
push
mov
inc
sub
cmc
sub
add
dec
inc
push
lret
repz
jg
mov
inc
jmp
cmp
lcall
adc
mov
fucompp
push
mov
cmp
sub
out
sbbb
enter
loope
dec
adc
in
inc
dec
adc
out
data16
cwtl
push
iret
dec
mov
mov
xchg
pop
sarl
jle
cld
cmpl
repnz
mov
pop
add
adc
pop
mov
fdivrl
std
push
out
pop
in
mov
sub
and
inc
or
rolb
or
inc
cli
lret
ds
imulb
icebp
aaa
ss
cmp
and
lock
icebp
push
aad
sbb
cld
pop
sbb
or
iret
sub
rcrl
mov
push
xor
popa
sbb
stos
into
outsl
dec
jne
sub
push
lods
xchg
mov
in
mov
mov
lock
int
dec
sarw
aas
inc
imul
sub
jge
punpckhwd
jne
ret
xchg
pusha
inc
lret
jl
push
aad
sar
pop
xor
mov
cmp
and
enter
push
fsubrl
ret
jno
outsb
aas
push
cmp
shld
imul
xor
and
cltd
cmp
in
jle
mov
jns
pop
add
push
push
mov
pop
aas
into
jns
jae,pn
aam
xchg
jbe
push
dec
inc
sbb
push
fsts
mov
cmp
test
pop
and
adc
pop
sub
imul
test
mov
push
fcompl
cs
add
push
fnstenv
push
insl
sbb
pop
push
hlt
int3
imul
fisttpll
loopne
jbe
dec
and
push
push
xchg
imul
mov
or
inc
sbbb
mov
fs
mov
push
dec
popa
mov
push
std
pop
movsb
xlat
add
sub
aad
mov
sub
cli
popl
movsl
add
test
ret
bound
es
cmp
pop
test
in
shrl
arpl
insl
je
pop
xchg
jle
mov
repz
daa
out
sahf
in
clc
mov
out
mov
gs
xchg
sbb
inc
jmp
adc
outsb
dec
push
mov
ret
push
inc
jg
jnp
fldenv
dec
in
jmp
pushw
movsl
gs
add
mov
cmc
jbe
push
or
in
cld
inc
xchg
sub
dec
lcall
mov
flds
inc
shll
sub
pop
dec
adc
jbe
inc
jp
hlt
jno
mov
dec
add
negl
push
or
and
xor
aas
lcall
jns
cmpsb
jp
mov
sahf
hlt
jbe
lods
mov
jmp
jo
sub
xor
jl
rcl
mov
notb
outsl
in
mov
mov
repz
cmp
jne
push
add
sbb
mov
dec
dec
aad
pop
jnp
lret
shrb
mov
sub
jno
lods
ret
fs
dec
hlt
or
jbe
cmp
icebp
lds
enter
sbb
mov
stos
jae
xchg
adc
cwtl
lea
push
scas
aas
inc
push
xor
sub
call
inc
ficompl
fadd
adc
sub
xor
pmullw
sub
insl
mov
out
ljmp
cmp
in
cs
mov
xchg
xor
sbb
mov
in
mov
add
pusha
sbb
sbb
ret
outsl
and
test
and
sub
fistpll
inc
shrd
cld
push
jne
inc
sub
loop
lods
fneni(8087
or
lret
test
aad
out
aas
push
dec
xor
ja
call
repnz
ja
mov
and
stos
or
or
push
cmpsb
das
ffree
js
dec
dec
popa
inc
adc
mov
fmull
movsb
and
pop
enter
jnp
dec
jns
dec
or
mov
adc
jb
sbb
xor
jmp
movsb
push
les
lods
ret
int3
fstps
shlb
mov
vmovss
adc
aaa
sbb
fwait
mov
cmp
repnz
mov
lret
fisubrs
rcrb
fdivs
cmpsl
xlat
mov
cmpb
jb
xor
jle
and
jp
jbe
adc
mov
call
popf
aam
push
imul
mov
cmp
push
pop
mov
outsb
pop
testb
xchg
push
dec
xchg
adc
stc
xor
jge
pop
imul
das
js
push
ret
ljmp
pop
dec
rorb
imul
adc
gs
lea
in
cli
pop
push
xchg
and
dec
inc
cld
and
jnp
or
cmpsb
jge
les
int
dec
lcall
scas
in
push
in
mov
push
ret
pop
xor
shrb
adc
push
enter
imul
test
cs
test
and
dec
add
and
pop
stc
ds
loop
cmp
js
push
test
imul
jmp
scas
or
aam
dec
mov
popa
cmp
bound
push
mov
loope
pop
rclb
xor
or
lock
arpl
mov
and
fdivrs
cmc
dec
xor
mov
push
sub
in
pop
fisttps
sahf
or
outsb
and
cmp
cwtl
rorb
mov
jp
lret
pushf
mov
clc
stos
cwtl
mov
jg
movsl
mov
pop
or
cmpsl
sub
xchg
add
push
and
push
ljmp
rcrb
icebp
es
loopne
jl
cld
adc
arpl
cs
sbb
and
loopne
cmp
sub
pop
mov
fidivrs
mov
dec
leave
inc
sbb
roll
shlb
aad
mov
gs
push
mov
lods
add
sub
pop
mov
movsb
clc
mov
dec
xor
sbb
test
adc
cwtl
mov
pop
ret
xchg
cmp
inc
jnp
sub
in
dec
popf
out
push
cmp
sub
push
jg
cmpsb
fmuls
add
add
push
rcl
lret
rcrb
in
sub
or
test
inc
js
mov
xchg
dec
xorl
lcall
cmp
xor
fimull
dec
inc
into
mov
mov
gs
std
pusha
sbb
popa
add
or
push
and
pop
loope
mov
dec
pop
mov
or
repnz
repnz
enter
shrl
js
dec
cwtl
scas
jecxz
lret
jno
add
loope
ret
dec
pop
push
scas
stos
aas
add
push
jge
test
scas
mov
adc
in
cmp
ljmp
mov
cli
pop
jno
lret
jns
sbb
xchg
ret
imul
aam
movsl
and
cmp
mov
dec
fidivs
insb
cmp
lret
jp
jns
lret
mov
jae
js
sbb
pop
sbb
jmp
test
loope
loop
lcall
cmp
stc
mov
aas
loopne
dec
sbb
jge
inc
mov
daa
divb
mov
shll
lods
mov
xchg
push
movsl
enter
pop
fst
sub
inc
out
add
xor
push
pcmpeqw
lret
clc
out
jae
mov
mov
or
cltd
sub
fldt
fucom
push
xor
sahf
xchg
dec
jle
sub
jae
les
outsl
xchg
insb
or
lret
mov
insb
and
in
mov
sbb
or
dec
cmp
inc
push
insb
pop
mov
mov
orb
jl
xlat
rolb
xor
leave
pop
push
pushf
pop
inc
clc
push
push
daa
push
jg
leave
pop
inc
mov
enter
cwtl
xchg
jb
movsl
sbb
scas
xor
popa
mov
add
sub
imul
repnz
mov
int3
shlb
repz
cs
les
mov
push
cmc
jp
jl
je
ja
ror
adc
sbb
pop
pop
shr
je
fs
add
add
push
into
lods
in
xor
push
jno
inc
sti
hlt
mov
scas
pop
mov
cmpsl
fiaddl
inc
mov
lahf
xor
push
leave
and
out
cmp
push
push
mov
pop
testl
enter
fisttpll
dec
jo
dec
mov
xor
inc
pushf
xor
bound
stc
loop
push
jecxz
inc
sub
call
sub
jae
mov
mov
jo
mov
rcrb
xchg
scas
jbe
andl
xor
fcom
imul
pop
stos
scas
inc
lea
cmp
dec
inc
jne
repz
test
mov
cmp
cwtl
addl
xchg
jae
mov
popa
or
push
xchg
mov
push
sub
sub
ret
mov
incb
pop
adc
xchg
outsb
into
xchg
stos
add
inc
add
sub
cmc
iret
lea
shl
bound
mov
jg
cwtl
lcall
fcoml
sbb
sub
arpl
sub
aad
scas
xor
std
or
xchg
fwait
cmp
push
fs
push
sbb
sar
mov
jnp
sub
ss
jecxz
jo
cmc
dec
jae
arpl
mov
lret
cmp
mov
js
stos
jb
mov
and
pop
sub
cs
sub
cwtl
mov
lds
lahf
ficomps
aad
rcl
gs
pushf
mov
ja
cmpsl
lret
and
and
sbb
aas
mov
mov
hlt
cmp
push
imul
sti
xor
or
into
sub
shl
cmp
sbb
popl
inc
fmulp
dec
push
jno
ror
outsb
xchg
push
mov
stc
pop
scas
pushf
movsb
push
bound
and
mov
std
push
loopne
sub
xor
psubb
repz
jg
adc
fistpll
adc
mul
sub
or
lods
cld
cld
and
pop
sbb
mov
pop
into
test
negl
subb
loop
sarl
pop
push
mov
jno
mov
jno
cld
in
cltd
mov
cmp
jo
addr16
pop
mov
cmp
xchg
sbb
pop
ds
or
cmc
lock
shll
daa
repnz
push
pop
inc
bound
push
in
add
outsl
dec
xchg
xchg
in
lds
dec
insl
es
sti
fs
imul
jecxz
mov
test
xchg
into
push
outsb
fsubl
repz
mov
push
inc
jno
fldl
xor
add
fisubrl
sub
bound
pop
in
aas
cld
int
popa
das
out
sub
dec
lock
pop
pop
subb
imull
sub
push
xor
hlt
mov
mov
ret
and
aas
cmp
dec
icebp
or
xchg
js
test
movb
mov
enter
add
lcall
or
pop
dec
test
mov
cs
mov
jno
xor
lret
push
mov
add
leave
ret
mov
imul
das
or
dec
js
repnz
jnp
dec
mov
cwtl
pop
jge
pop
fs
sbb
jg
xchg
lea
cli
sbb
add
stc
sbb
lea
mov
pop
dec
shrl
inc
cmc
cli
inc
sbb
sub
jns
mov
sti
xor
shlb
or
lods
in
jge
stos
xchg
ret
dec
mov
ret
lods
in
pusha
roll
push
mov
pop
and
jnp
out
int3
pop
test
and
pop
xchg
clc
out
in
ds
sbb
and
push
aaa
ret
jp
pushf
xor
mov
sub
xchg
gs
loope
das
aas
adc
mov
and
xorl
mov
movsl
fstpl
lcall
sub
rolb
daa
pop
pop
jnp
and
jb
aaa
push
mov
xlat
add
mov
cmp
cmp
shrl
in
nop
cwtl
xchg
and
push
dec
mov
push
lds
push
mov
aaa
outsb
loopne
shll
dec
jge
inc
cmpsl
data16
mov
loopne
add
add
or
xor
jmp
ja
ret
stc
loope
in
daa
int3
adcb
divl
add
mov
pop
cmp
pop
xor
xchg
mov
int3
ja
lret
repnz
mov
lds
pop
push
int
xchg
jle
fsubl
or
pop
scas
mov
mov
xchg
lods
sub
jbe
jno
mov
xor
ljmp
mov
and
jo
adc
jl
cs
sub
mov
pop
btc
imul
and
dec
inc
mov
adc
pop
roll
dec
pop
xchg
shrb
call
push
cmp
test
add
in
jne
fwait
mov
or
or
xor
jle
imul
dec
xchg
or
aam
fisubrl
and
test
into
repz
les
rol
dec
mov
fwait
or
and
mov
ljmp
sub
push
xor
lret
xchg
dec
add
inc
outsl
and
jne
or
cmp
loope
insl
sub
pop
and
add
adc
mov
pop
jns,pt
mov
mov
lahf
stos
out
cmpsb
outsb
addb
dec
push
adc
pop
jl
xorb
jbe
ljmp
xchg
pop
xchg
call
or
sti
adc
mov
dec
adc
sahf
in
lret
sti
xor
in
xchg
fnstenv
xchg
lea
sbb
pop
mov
out
push
cmp
mov
dec
jno
and
test
icebp
inc
push
mov
loop
stos
inc
cltd
add
dec
pop
ficoms
bound
maxps
dec
sub
sarb
stos
push
mov
cld
dec
imul
jo
scas
aad
jecxz
fsubrs
out
adc
lcall
ja
loope
fsubp
sbb
or
loopne
mov
daa
cltd
jnp
imul
sarb
cli
xchg
rolb
loop
jnp
or
mov
push
or
out
mov
repz
pop
inc
mov
aaa
sub
aaa
ja
dec
sub
inc
cmp
jle
insb
xlat
iret
add
mov
adc
xlat
int3
mov
jl
das
sub
sub
and
les
outsb
xchg
pop
ret
mov
aad
das
dec
out
js
ja
xchg
mov
pop
aaa
pop
in
test
pop
cmp
cli
enter
mov
das
sub
cmp
or
mov
adc
movhps
frstor
mov
sbb
jp
dec
jne
xchg
mov
push
add
arpl
add
fcoml
dec
pop
sub
mov
dec
pop
jae
iret
rcrl
mov
add
in
jb
xchg
adc
addr16
cli
and
push
add
test
mov
or
cmpb
xor
push
mov
sub
in
inc
xor
xor
int
mov
adc
sub
sub
dec
inc
push
pop
das
jo
repz
xchg
fldcw
dec
cmpsl
stos
sahf
rcll
cmpsb
sbb
and
mov
and
enter
mov
loope
idivb
outsb
sub
dec
nop
loopne
data16
jmp
int
hlt
test
inc
and
ret
jge
jg
enter
in
imull
add
jg
mov
arpl
imul
addl
or
fdivrl
fidivrl
pop
lret
adc
mov
jmp
adcb
stos
int
adc
decb
jns
add
stos
loope
out
adc
push
xchg
cmp
xor
pop
sbb
int3
repz
dec
ja
test
mov
test
fstpt
leave
inc
or
jp
lret
aam
dec
adcb
addr16
jnp
pop
xchg
repnz
aad
pop
int3
aad
ret
ljmp
scas
frstor
inc
pushf
xchg
or
int
and
pop
inc
fwait
pop
inc
ja
testl
pop
push
push
adc
std
dec
pop
mov
add
lcall
mov
mov
and
and
xchg
mov
loopne
push
test
cmp
cmp
fisttps
adc
fldl
inc
loope
cs
dec
lea
mov
lret
mov
int3
shrb
jge
add
adcl
in
xor
iret
cs
jnp
std
sbb
repnz
mov
mov
inc
shrl
inc
xchg
dec
daa
mov
xchg
in
fs
adc
ret
cld
incb
add
mov
ljmp
loopne
mov
icebp
bound
imul
movsl
jmp
sub
jg
incl
add
xchg
test
subb
shl
repnz
or
movsl
sub
mov
mov
mov
mov
sbb
sub
and
enter
xchg
popf
add
jge
int3
and
out
cmc
cli
mov
xchg
ja
fsubr
pop
loopne
xchg
push
decb
mov
rclb
fisubrl
add
mov
fisubrs
aas
mul
jg
pop
out
sbb
mov
adc
stos
ss
out
sbb
sub
addl
notb
push
jecxz
arpl
xchg
pop
lock
xchg
jecxz
mov
out
pop
and
pop
imul
ja
loope
cmp
inc
shrl
arpl
cld
sbb
lahf
repnz
xchg
or
int3
sbb
push
imul
push
mov
cmp
lret
fs
pop
jle
test
insb
xor
sbb
movsb
out
sbb
sub
mov
add
icebp
call
nop
ljmp
gs
push
add
jae
repz
fisubrl
mov
jno
and
pushf
jae
push
push
xor
pop
das
js
mov
push
and
xchg
repnz
cli
je
push
int3
movb
sarl
scas
imul
and
and
and
jp
es
sbb
fnsave
dec
sbbb
xchg
jbe
fcomps
adc
in
xor
jb
sub
add
sbb
jmp
pop
mov
popa
in
fidivs
scas
adcb
xchg
out
test
ret
daa
push
pop
frstor
ljmp
into
add
ret
cmp
daa
jle
pop
inc
mov
inc
lods
lods
mov
sahf
iret
dec
adc
aad
imul
sbb
call
fbld
es
and
in
mov
sbb
stc
inc
cmp
mov
xor
sbb
jmp
adc
repnz
pop
dec
outsl
daa
xchg
fiadds
push
jge
in
in
adc
pop
cltd
cltd
ds
daa
outsl
pop
adc
cltd
imul
add
pop
sbb
les
jmp
test
fists
lds
pop
out
pushf
push
jle
inc
and
dec
jg
incb
je
mov
test
out
fdivrl
jno
pusha
mov
rcr
adcl
inc
xchg
push
and
sbb
fdivs
andb
js
ficompl
lea
out
cmc
out
pop
ficomps
test
mov
sbb
xchg
cld
xor
and
mov
jle
dec
xor
or
mov
scas
cwtl
jmp
xchg
mov
lods
imul
push
push
in
mov
pop
icebp
xor
in
imul
repz
sbbb
fisttps
adc
gs
loope
movsb
enter
fisttpll
sbb
xor
pop
xchg
and
cltd
jle
movsl
aas
aas
andb
out
dec
sbb
xor
out
xor
cmpsb
xchg
cld
cltd
fldl
sub
sub
jmp
xchg
lret
mov
sbb
je
pop
cmp
mov
lods
movsl
sbb
les
push
sbb
push
pop
jmp
outsl
stos
mov
cld
and
stos
mov
jae
dec
mov
add
and
inc
mov
mov
or
jmp
dec
and
lcall
cmpsb
dec
sahf
inc
push
mov
sbb
fs
popf
mov
adc
pop
push
sbb
xor
scas
out
xchg
jmp
add
popa
mov
arpl
add
outsb
mov
or
xor
and
xchg
pop
jb
add
stos
jg
xchg
push
js
adc
lret
push
adc
je
fldenv
fsubl
cmp
mov
sbb
out
push
mov
stc
xchg
adc
and
fwait
cwtl
paddd
inc
inc
pop
in
adc
push
pop
test
pop
ss
jmp
iret
popa
test
push
out
loop
int3
push
enter
adc
cwtl
or
jnp
ret
ret
mov
sbb
xchg
cmp
push
jmp
je
push
ret
cmpb
adc
push
rcr
or
mov
xchg
mov
or
or
add
xchg
in
jmp
mov
cmp
insl
mov
in
pop
push
add
jmp
or
add
jg
push
aad
int
or
pop
jecxz
jl
or
and
add
mov
outsb
xor
xor
add
stc
int
ljmp
mov
pop
push
mov
or
rolb
mov
mov
popf
clc
test
fistpl
test
lret
in
pop
sub
sub
fwait
aam
push
test
add
cwtl
mov
jne
outsl
cli
fmul
pop
ror
sbb
insl
mov
jg
mov
sbb
jb
push
fisubs
fwait
cmp
leave
movsb
jecxz
inc
mov
insl
es
jns
xchg
xchg
xchg
scas
stos
sbb
mov
outsb
jae
sbb
xchg
cmpl
pop
jb
ret
dec
add
jp
in
lea
push
xchg
inc
in
nop
sub
int
push
cmp
push
fisttpl
fmull
jne
lods
dec
lcall
test
mov
lea
sub
xchg
imul
jl
out
xchg
adc
pop
iret
gs
and
dec
mov
xor
fsqrt
sub
add
popf
dec
pop
mov
pop
and
cld
pop
mov
into
pop
fistps
pusha
hlt
sbb
cmc
popf
push
push
mov
stos
xchg
out
sub
xchg
push
aad
xor
pop
fincstp
std
or
xchg
jle
mov
pop
and
imul
cmc
push
movsb
sbb
jg
or
xor
and
dec
jecxz
cmp
shr
sub
pop
imul
xchg
and
pop
xor
inc
push
fnstsw
dec
sub
push
fldcw
std
pushf
xor
xor
or
lods
adc
jbe
data16
inc
sarl
or
xchg
add
inc
rorl
andl
in
das
insb
mov
sbbb
mov
out
test
leave
xor
push
movsl
or
push
insl
fisubrs
pop
or
sub
xchg
xor
jo
jl
shl
pop
pop
repnz
das
jne
int
fildl
push
mov
mov
jns
movsl
shl
sub
cmp
mov
or
cld
icebp
cmp
in
cmpsb
jno
or
mov
stc
xchg
cmp
xchg
xor
ds
imul
push
into
cmp
pop
fwait
sub
out
loop
add
cmpsb
inc
fildll
movsb
dec
inc
pop
cmpsb
cltd
mov
ss
arpl
pop
xor
movsb
mov
in
push
jmp
mov
push
lret
dec
popf
les
nop
movsl
movsb
divb
xchg
rorb
jp
out
adc
adc
add
data16
mov
mov
inc
lods
scas
sti
sbb
or
and
add
add
pop
pop
pop
push
scas
cmp
adc
out
jnp
nop
and
jbe
movsb
aaa
sbb
test
mov
movsb
nop
dec
dec
pushl
push
lea
rorl
or
jo
int
mov
xlat
add
stc
ret
jge
imul
dec
adc
jbe
cld
mov
inc
cwtl
lcall
pop
mov
mov
jae
mov
out
int3
adc
test
inc
in
les
sbb
in
test
sbb
daa
jbe
pop
adc
stc
cmp
les
mov
pop
jae
imul
xor
pop
push
xlat
jae
mulb
js
pusha
cld
mov
sub
cmp
adc
push
fstpt
or
inc
fldl
adc
or
lea
jns
mov
xchg
push
or
adc
por
push
or
mov
aas
sahf
jo
mov
inc
out
mov
xchg
xor
rolb
xor
xchg
xchg
and
sub
fimull
lahf
out
and
add
or
pop
mov
xchg
and
cmp
sub
repnz
pop
pop
mov
dec
fld
das
push
lods
das
fwait
add
xchg
sar
lea
fstps
rcll
mov
clc
lahf
nop
testl
data16
idiv
sbb
les
push
stos
mov
insb
inc
push
mov
ret
pop
out
test
std
and
test
and
shlb
adc
xchg
mov
jmp
filds
fiaddl
xor
cmp
push
jne
cmp
in
imul
pop
mov
cmc
clc
ja
insb
jle
ret
push
mov
shr
iret
cs
mov
lock
jne
sbb
sbb
popa
sbb
inc
push
xchg
fidivl
xchg
fisubs
jmp
movsb
insb
and
arpl
cwtl
pop
add
jp
xor
or
outsl
pop
xchg
adc
gs
gs
xacquire
test
ds
or
inc
xorl
outsb
and
leave
jae
cmp
pop
xor
roll
outsb
mov
xor
ret
pop
shlb
stos
mov
aas
jp
mov
cs
test
mov
jb
sti
je
jecxz
cmp
add
shll
jmp
xchg
mov
cltd
add
push
cli
faddl
cmpsb
aad
sub
imul
push
call
sub
sahf
or
sbb
push
inc
aad
hlt
mov
clc
in
mov
jecxz
or
jns
int
leave
and
cmp
push
push
xchg
add
ret
push
jp
sti
sbb
xchg
in
sbb
jo
test
add
xchg
int
mov
test
negb
arpl
fistl
dec
adc
or
cwtl
jnp
jb
mov
add
sbb
gs
test
mov
xor
data16
jo
cmpsl
mov
iret
mov
pop
xchg
mov
dec
push
cmp
pop
push
lret
pop
daa
fldenv
or
xor
push
cld
fwait
loope
mov
jae
jle
test
add
jg
or
arpl
loope
loop
cmpsl
js
adc
cltd
pushf
push
fcomps
xor
rorl
jb
xchg
cli
add
sbb
jae
daa
push
cli
jecxz
cmp
enter
push
pop
sbb
push
test
outsb
and
and
pop
or
int3
shll
lcall
jg
iret
dec
sbb
insb
jg
and
dec
sub
push
sarb
mov
nop
inc
xor
add
pop
in
xchg
jecxz
es
sbb
fs
jb
es
int3
mov
fdivrp
pop
jmp
repnz
sub
or
mov
loope
popf
xchg
lock
lcall
repz
movsb
sbb
sbb
jl
sahf
inc
lods
xchg
std
lea
pop
sar
addr16
loopne
scas
mov
mov
lea
sbbl
pop
jb
in
jecxz
mov
xchg
popa
movsb
aad
adc
mov
lcall
idiv
xor
sub
push
xchg
icebp
fisubrs
fbld
lds
iret
pop
jns
xchg
fstpt
pop
or
cmp
pop
sub
or
adc
and
lock
shll
jb
rcll
mov
sub
cmpb
js
arpl
pop
jle
lea
shrl
push
movsl
pop
mov
jle
jg
cwtl
add
test
ljmp
notl
ja
shl
lahf
mov
xor
mov
in
jne
testl
adc
loope
cmp
inc
adc
popf
adc
pop
fsubrp
jl
es
std
mul
gs
bound
pop
pop
rorb
sbb
xchg
sbb
inc
cmp
push
and
and
jbe
sbb
je
mov
ja
xor
in
ss
sbb
mov
out
bswap
ds
cwtl
in
movsb
sub
or
xchg
cli
jl
cmc
popa
movsb
inc
jmp
nop
in
mov
jmp
mov
shrb
inc
adc
xchg
sbb
mov
out
les
or
push
sub
scas
cmpsl
or
xlat
ds
or
and
in
sub
stos
lret
out
xchg
icebp
int
gs
adc
dec
push
xor
xor
fisttpll
or
mov
pop
sahf
roll
cmp
pop
mov
xchg
xor
jns
ror
pushf
mov
out
das
movsl
test
cmpsl
lods
inc
pop
cmp
lds
and
dec
adc
jbe
test
aam
xchg
push
stos
xchg
mov
pop
stos
scas
scas
pop
sbb
and
mov
sbb
out
scas
mov
or
pushf
in
push
cmp
cli
adc
jno
mov
dec
popf
add
jle
mov
add
test
fcoms
push
addl
fmull
add
xor
sub
push
sbb
fsubrs
add
xor
mulb
jecxz
add
scas
insl
int
and
faddl
mov
call
mov
or
daa
xlat
sub
fildl
mul
outsl
inc
mov
dec
push
cmp
push
pop
adc
add
mov
or
divl
inc
sbb
push
testb
movsb
xchg
shlb
lret
jecxz
inc
mov
lods
ss
xor
push
ds
push
enter
or
inc
or
push
ss
lret
sbb
rol
js
test
mov
in
icebp
test
das
xlat
jge
aam
push
mov
orb
pop
aas
int
fmuls
daa
in
dec
add
in
jg
push
dec
sbb
cmp
cld
mov
push
leave
mov
jnp
pop
dec
cwtl
and
pop
in
orb
add
fsubl
in
mov
fwait
pop
mov
sub
inc
pusha
inc
push
in
mov
enter
xchg
adc
aaa
subb
push
mov
fldcw
test
and
insb
add
sbb
out
test
mov
pop
or
inc
push
lret
mov
mov
test
push
push
notl
jno
ljmp
pusha
xchg
push
movsl
xor
rclb
lock
cmp
lcall
sbb
cmpsl
cwtl
jle
repz
add
subb
dec
xor
jbe
imul
jne
and
loope
stos
xchg
ffreep
repz
pop
in
dec
shl
cmp
repnz
les
mov
cmp
fwait
arpl
les
pop
subb
lods
lahf
inc
adc
jg
in
or
xchg
in
lahf
dec
or
es
insb
sar
js
push
lret
jmp
pop
mov
das
shlb
rcrl
jecxz
mov
or
pushl
rcrb
cmc
mov
pcmpeqw
aas
mov
aad
test
popf
sbb
jo
jg
push
jno
pop
mov
mov
and
arpl
cmpxchg
fistps
xchg
push
repnz
mov
fildl
lret
test
push
mov
xor
mov
pop
fs
mov
mov
xchg
add
clc
xchg
xchg
cmc
pop
adc
push
sub
lcall
pop
push
xchg
add
sarb
test
es
mov
or
sbb
xor
shlb
jbe
mov
loop
pop
push
dec
xchg
adc
fs
push
cmp
pop
jmp
repz
es
inc
pushf
add
mov
in
pop
mov
push
jne
movsb
xor
mov
sub
subb
orl
adcb
aam
cmc
ljmp
mov
xor
test
icebp
inc
pop
in
cli
adc
sbb
push
sub
xchg
adcl
push
sbb
sbb
mov
mov
push
cwtl
pop
adc
cmp
out
dec
and
test
stc
sub
imull
popl
mov
xchg
call
adc
xchg
addr16
xchg
pop
pop
pop
leave
outsb
bound
testl
sbbl
push
dec
push
adc
ja
daa
inc
dec
adc
sbb
sti
push
jmp
and
cmp
push
xchg
cmpsb
dec
xor
mov
frstor
pop
lods
dec
xor
imul
push
dec
mov
jne
push
mov
mov
inc
fldenv
dec
ds
ret
daa
cmp
jae
and
xchg
adcb
loope
or
out
das
xor
bound
lret
std
pop
xchg
cmp
push
leave
add
mov
nop
add
out
in
dec
push
or
dec
outsb
in
sbb
mov
addb
pop
ret
subb
cld
mov
in
pop
lahf
idivb
sub
scas
cmp
mov
cmp
mov
sbb
dec
mov
mov
insb
cli
aam
clc
cmpsl
cld
mov
push
mov
mov
daa
sub
inc
mov
mov
inc
imul
jne
inc
mov
sub
out
aad
movsb
mov
mov
lret
hlt
xchg
or
lret
add
lret
shrl
push
push
imul
or
pusha
cltd
call
push
nop
ror
cltd
aam
lcall
push
xor
xorb
hlt
sbb
aaa
int
cmp
push
shll
out
xchg
mov
test
and
aad
jp
sub
xchg
dec
icebp
mov
outsb
ret
sbb
mov
lahf
dec
idivb
jecxz
xor
mov
jno
sub
testb
or
jbe
push
inc
js
das
ret
and
add
push
into
cld
adc
leave
fs
stos
cmp
scas
push
push
xchg
ss
sbb
pop
mov
dec
loope
mov
test
mov
cmp
and
inc
cmp
mov
mov
adc
stos
bndldx
jecxz
cmp
xchg
jo
jbe
dec
or
loop
pop
repnz
sub
adc
mov
push
out
add
push
inc
cmp
bound
mov
test
pop
mov
lahf
sbb
jg
pop
xchg
and
ret
jns
ret
jl
pop
sbb
scas
sub
stc
imul
mov
data16
push
addl
push
pop
mov
dec
sbb
pop
rol
outsb
cmpsl
xor
xor
xchg
test
js
inc
adc
push
lahf
jno
stc
mov
cli
cmpl
lret
fisubs
aad
scas
mov
push
aam
sbb
pop
mov
and
arpl
sti
inc
pushf
inc
cmp
call
pop
inc
adc
mov
ljmp
daa
add
xchg
sbbb
and
popf
movsb
shr
les
jmp
sub
sub
cwtl
in
mov
jne
aaa
xor
in
dec
inc
xchg
jmp
btc
push
test
ds
or
sbb
jmp
cs
adc
jb
push
jmp
outsb
cli
xchg
jmp
jle
lret
adc
or
and
dec
sub
iret
xchg
test
pusha
dec
jmp
push
push
pop
jns
sti
xchg
repz
js
dec
in
shlb
dec
out
dec
jbe
xchg
cmp
inc
jns
movsb
xor
xchg
and
jno
cld
mov
mov
iret
adc
popa
jns
jecxz
and
mov
push
addl
popa
mov
sti
and
repnz
cmpsb
push
out
push
cmp
dec
sbbb
lods
ss
jmp
sub
inc
adc
pop
inc
lret
aaa
adc
cmp
pop
inc
mov
mov
subb
js
cmp
aam
jbe
push
inc
sbb
xchg
mov
leave
arpl
out
cltd
dec
popf
fsubrs
sub
pop
cmc
inc
addr16
and
mov
mov
add
sbb
out
add
sbb
cmp
ret
pop
in
dec
push
xchg
dec
fisubrs
or
jg
test
or
aas
mov
andb
popa
repz
call
stos
xchg
adc
loop
sarl
jge
inc
bound
xchg
inc
jmp
test
jns
int
add
cld
xor
mov
add
test
nop
pop
xor
jmp
adc
es
aad
dec
popa
insb
or
mov
jge
sub
loop
jl
lock
jecxz
aas
leave
dec
xor
dec
loope
repnz
sti
cld
push
sbb
add
push
rcl
mov
stc
fistpll
add
fdivrp
push
out
pusha
int3
pop
lods
or
fwait
mov
mov
pop
and
or
mov
cmp
cmp
lahf
add
cli
test
cmpsb
pusha
xor
mov
out
push
scas
out
mov
fwait
inc
mov
ja
adc
pop
pop
jne
or
loop
sbb
sub
xchg
sarl
or
into
cmpsb
mov
push
fwait
repz
arpl
ret
mov
cmpl
mov
add
scas
sub
mov
add
mov
mov
mov
shll
adc
xchg
int
scas
or
jne
adc
mov
fists
imul
es
mov
popa
mov
aam
imul
adc
std
fildl
dec
lds
int3
fwait
or
in
stos
sub
ja
push
scas
std
sahf
inc
dec
mov
iret
pushf
aad
cmp
push
inc
sbb
pop
sub
test
ja
lret
call
sub
cwtl
int3
sbb
sbb
data16
pop
out
fiaddl
imul
hlt
dec
jge
sbb
jns
in
xchg
mov
js
fisubs
fwait
lahf
add
jp
and
xor
jecxz
mov
in
or
icebp
push
jl
je
lock
cmc
pop
jae
scas
cld
lret
repnz
mov
mov
mov
daa
arpl
and
push
imul
stc
pop
xchg
xchg
cmp
xor
xchg
jl
addl
fadd
shll
mov
outsb
dec
movsl
adc
movsl
add
jae
rcll
push
outsl
jge
inc
out
or
jmp
pop
pop
pop
inc
inc
in
dec
jge
adc
add
int3
insb
insl
jge
imul
xchg
dec
add
popl
int
inc
mov
adc
popa
popf
jg
jns
aam
orl
add
cmpsb
mov
clc
movaps
sbb
mov
push
inc
daa
movl
cld
lea
popf
push
scas
mov
cld
call
add
mov
pop
lahf
jbe
aam
inc
int3
mov
in
pop
mov
das
and
clc
div
cmp
jns
add
movsb
movsl
pop
jg
xor
xor
xor
add
jae
add
push
dec
adc
push
sti
xchg
icebp
movsb
movsb
mov
jl
lea
cmp
int3
sub
xchg
push
ficompl
js
cmc
adc
xchg
push
pop
pop
mov
and
and
rclb
call
dec
adc
out
mov
push
fdivp
addr16
pop
dec
adc
inc
sub
aad
pop
in
sub
mov
into
imul
outsb
push
hlt
movsb
fldt
out
enter
push
mov
jae
scas
or
add
rcrb
mov
sahf
cmp
sub
daa
and
stc
jno
lock
not
jns
or
inc
mov
mov
addr16
test
sub
mov
cli
mov
sti
or
or
jo
pop
leave
rcrl
xlat
jb
int
fldcw
enter
scas
jno
data16
cld
rclb
nopl
add
fildl
mov
ja
imul
push
xor
daa
shl
jae
sub
adc
adc
enter
rcr
inc
lahf
pop
sub
jo
aad
movsb
out
aad
in
lds
clc
rcrb
popf
imul
mov
add
imul
clc
std
or
ss
fs
jecxz
cmc
push
into
into
andl
ljmp
pushf
push
js
mov
cmp
sub
mov
jno
push
mov
jns
daa
lret
push
mov
push
stos
lock
orl
sbb
leave
pop
loop
scas
adc
pushf
sub
leave
in
aad
lods
jnp
sbb
xorb
sahf
mov
push
out
cmpl
pop
lock
adc
jo
jo
mov
aas
insb
out
jne
arpl
rcrb
jae
push
push
jnp
cmpsb
arpl
popf
addr16
cli
push
mov
push
sub
out
cmc
jl
jbe
loop
pop
inc
test
pop
cmpsl
lods
sub
xor
xchg
sbb
out
lds
add
mov
xor
cli
and
mov
push
cli
pushf
inc
pusha
icebp
mov
jb
add
add
inc
inc
cld
jmp
dec
or
cld
mov
gs
lea
ja
addps
mov
sub
hlt
jmp
inc
loopne
fisttpll
or
xchg
mov
and
mov
ljmp
aaa
add
xchg
mov
imul
xchg
ds
mov
int3
mov
es
mov
and
cmpsl
or
dec
aad
pushf
push
xor
out
insb
fbstp
cmp
mov
mov
jb
fidivl
mov
lds
stc
outsb
cwtl
add
or
pop
mov
xchg
test
xor
stc
jae
adc
test
mov
mov
cli
sub
mov
data16
push
movsb
xchg
icebp
ds
and
sahf
push
pop
jp
mov
inc
nop
mov
movsb
pop
add
pop
jbe
or
dec
mov
xor
add
lds
cmpsl
add
jp
imull
stos
jle
pop
jmp
enter
ss
mov
arpl
jle
das
mov
loop
mov
sub
inc
cmpl
cwtl
fdivrs
add
and
jmp
mov
jnp
lcall
outsl
jecxz
jno
jmp
lods
xor
mov
cmp
dec
fs
and
adc
push
out
mov
lods
fxch
cmp
inc
ja
xlat
movsl
fs
cld
jecxz
out
pop
or
push
push
mov
dec
cmc
add
dec
mov
mov
cmp
clc
mov
dec
int3
std
and
adc
jle
adc
lods
js
insl
xchg
fstps
pop
mov
jmp
add
fistps
jbe
push
ja
sbb
sbb
fadds
cld
pop
repz
das
arpl
out
push
pop
fxch
pop
mov
iret
insb
repnz
and
sbb
test
pop
or
fdivs
jl
icebp
sbb
ljmp
or
push
mov
out
jge
shlb
mov
mov
lods
call
clc
rorb
jle
and
or
or
adc
xor
movsl
lahf
push
push
pusha
pop
loope
sahf
mov
pop
fnstenv
push
push
js
fwait
xchg
rcl
mov
cs
ja
nop
fisttpl
mov
imul
fs
int
or
push
mov
xchg
mov
push
push
outsl
sbb
mov
ljmp
xchg
aas
jae
js
mov
push
enter
cmp
ljmp
or
pop
mov
adc
data16
xchg
pop
push
test
test
jl
xchg
push
lcall
mov
push
and
push
sbb
icebp
xchg
pop
jecxz
sbb
push
sarl
dec
insl
dec
imul
push
add
jge
pop
or
mov
mov
mov
push
push
das
mov
xor
addr16
adc
mov
jmp
out
popf
je
sbb
loopne
inc
mov
sbb
sub
jbe
xor
jle
fcompl
pusha
or
cmp
loop
loop
inc
imul
adc
pop
pop
out
cmc
pop
lods
or
add
fistps
push
lea
stos
mov
pop
push
mov
mov
pusha
lds
mov
mov
pusha
enter
jmp
add
shrl
mov
mov
loop
and
outsl
mov
adc
cmpsl
or
add
mov
lahf
jmp
les
sbb
imul
fiadds
xor
orb
mov
mov
fld
dec
fwait
stc
adc
xchg
stc
or
ret
mov
jbe
mov
repnz
hlt
or
dec
mov
cs
jg
pusha
jl
jecxz
dec
sahf
int3
popa
or
sti
scas
adc
jae
popa
fisubl
cwtl
sbb
cmp
ss
sbb
repz
insl
pop
stos
dec
jl
xor
mov
cwtl
inc
jne
lret
shrl
adc
test
out
js
adc
cmp
inc
rcll
test
mov
ja
rolb
cpuid
rclb
xchg
movsb
sub
jmp
push
lea
mov
loop
mov
enter
add
add
xchg
sbb
or
xchg
icebp
mov
lods
scas
fcomp
and
cmp
adc
leave
mov
popf
stos
js
mov
mov
js
cmp
cmp
dec
and
mov
mov
mov
in
es
inc
ret
outsl
mov
cmpsb
mov
and
arpl
repnz
jno
popa
loope
sbb
cwtl
popa
aam
xchg
sbbl
adc
fwait
or
or
mov
test
icebp
pop
mov
pop
mov
mov
dec
xor
xorl
icebp
or
in
cmp
lock
and
dec
cmp
push
clc
mov
xlat
xlat
les
jg
push
cmpl
mov
movsb
pop
sub
cmpsl
test
mov
adc
mov
cmpsb
push
in
sub
cmp
jle
dec
stc
adc
mov
pinsrw
sub
mov
mov
fcomp
fwait
idivb
and
mov
adc
out
js
imul
cltd
sarl
rorl
push
jo
or
mov
cmovns
repz
in
pop
insl
push
mov
sub
out
mov
jb
sbb
aam
loope
mov
ret
mov
in
adc
jge
movsl
xor
mov
fdivs
or
cmp
fistl
jmp
jg
stos
mov
std
sbb
cmp
ljmp
mov
pop
dec
push
cli
out
arpl
sbb
pop
push
or
pop
mov
xor
rolb
cmp
cltd
jg
mov
xor
ljmp
ret
adc
xchg
pop
test
aas
pop
sub
out
insb
inc
loop
arpl
sub
dec
ds
imul
push
mov
ffreep
fimull
mov
mov
stos
ds
mov
add
push
mov
and
std
mov
sub
testl
jg
sbbb
push
loop
inc
cmpsl
add
mov
ret
mov
outsl
sbb
dec
jbe
scas
fisttps
daa
test
jb
inc
and
js
in
enter
adc
ds
leave
jp
out
xor
push
cmp
dec
ds
fs
and
sub
gs
xor
cmc
pushf
arpl
mov
dec
push
xchg
xor
cltd
push
dec
ja
insb
cmpsb
test
mov
mov
loopne
jg
cld
dec
xchg
inc
cmc
fs
mov
notl
call
int3
cmpsb
in
and
or
ror
movsb
movsb
sub
stc
aaa
mov
jmp
mov
mov
adc
cmp
dec
dec
stc
jno
cmp
xchg
mov
je
cmp
jecxz
xchg
mov
shrb
negb
cmp
xchg
inc
pop
mov
ret
cmp
add
dec
mov
mov
add
sbb
pop
es
pop
xor
in
out
jnp
std
dec
jge
incl
mov
testl
sbb
fcoms
xorb
pop
mov
ss
mov
pusha
pop
mov
xchg
jnp
fisttps
and
ja
mov
mov
inc
ja
jno
add
mov
inc
cwtl
jmp
sahf
push
rolb
and
sub
mov
mov
pop
jo
cld
push
push
mulb
xchg
xor
sub
and
or
push
or
mov
jl
outsl
mov
push
dec
clc
inc
jecxz
xlat
outsb
mov
pop
sbb
xchg
inc
jecxz
sbb
push
xchg
lds
cmp
dec
dec
imul
addb
mov
adc
jae
jecxz
in
sbb
daa
das
dec
imul
aas
sbb
jbe
fisubrl
mov
inc
push
fninit
loopne
fbld
xor
add
repnz
clc
sbb
jle
int3
add
xor
inc
cwtl
int3
jne
adc
xchg
hlt
jge
mov
pop
shll
into
sti
push
add
std
pop
mov
testl
ja
ret
data16
mov
test
pop
or
push
push
sub
sub
int
pop
inc
scas
sub
fwait
int3
mov
andb
mov
ret
mov
mov
lds
int3
pop
dec
sub
les
rcrb
lods
add
mov
popa
jg
loop
mov
gs
shll
pop
jb
sbb
imul
cli
mov
mov
or
sub
ret
aad
aas
out
add
add
call
mov
insb
push
cltd
in
mov
mov
adc
adc
cltd
mov
xchg
ljmp
adc
sbb
and
sub
inc
push
xor
aad
adc
pop
mov
add
les
adc
das
lds
idivb
sub
orb
jno
pop
mov
cli
insl
cmp
cmp
jge
fmuls
jno
leave
shll
js
jmp
fwait
mov
jg
js
lcall
cmpsl
push
dec
push
fstps
insl
repnz
xchg
or
add
mov
sbb
push
call
or
dec
movsl
push
test
out
and
daa
dec
les
mov
adc
add
out
adc
cmp
mov
mov
insb
fsubrs
mov
fmuls
mov
cmp
movsb
insl
push
and
rclb
ljmp
scas
adc
popf
cmp
pusha
out
cmp
cmp
stc
adc
fmuls
fiadds
cmc
lahf
scas
ret
in
lds
push
pushf
push
fdivr
lret
out
jmp
fninit
xchg
std
clc
jae
fisubl
gs
add
inc
aas
ljmp
repz
sub
add
push
xor
mov
mov
mov
xchg
test
xchg
pop
sub
inc
lcall
jnp
push
daa
adc
dec
addr16
fcoml
cmp
xchg
mov
sbb
sbb
imul
xor
jnp
in
imul
lcall
pop
sub
fstpl
push
sbb
cwtl
fcomps
mov
enter
mov
pushf
jns
notb
ja
dec
pop
test
clc
fisttpll
lcall
loopne
je
mov
cli
xor
push
int
gs
insb
xchg
sub
and
and
xchg
in
lock
iret
mov
dec
lret
xchg
adc
inc
cltd
lods
in
dec
xchg
call
mov
inc
divl
pop
std
cmc
clc
sbb
cld
shrb
add
jl
sbb
fimuls
mov
jne
mov
push
out
pop
ds
push
inc
or
sbb
repz
mov
adc
xchg
jne
lods
sahf
mov
sub
loop
adc
mov
fs
scas
xor
ss
inc
mov
sub
adc
and
sbb
mov
add
cmp
push
ret
mov
sbb
sbb
addr16
and
addb
pop
push
mov
loope
add
add
pop
in
lret
inc
test
sahf
rcr
test
sbb
shl
stc
loop
xor
call
mov
aad
popa
push
xchg
and
es
sub
add
mov
test
dec
jno
punpckhwd
pop
pop
mov
ds
gs
cmp
int3
dec
dec
stc
add
dec
xchg
ficoms
mov
mov
bound
cld
sbb
mov
adc
clc
mov
insb
scas
fwait
xor
mulb
cmp
pop
fadds
lahf
xchg
xor
lahf
push
cmp
push
and
push
in
dec
aaa
inc
scas
pop
movsb
push
fidivs
add
mov
push
and
jl
in
shrb
movsb
jnp
test
mov
sbb
roll
jge
adc
pushf
scas
insb
lahf
lret
xchg
dec
dec
dec
cmpsb
xchg
mov
push
or
or
enter
adc
or
push
cmc
fisttpl
stc
pop
sub
outsb
subl
push
mov
sub
ret
mov
or
mov
xlat
mov
dec
push
aaa
push
inc
sbb
pop
mov
xchg
dec
sbb
add
loop
ret
push
ret
adcl
jno
sub
les
fisttpll
cli
cmp
lret
test
lods
and
ret
fimuls
push
fcomi
dec
popa
aas
cmp
xor
sbbb
cmpsl
test
dec
push
cmc
sub
sbb
dec
xor
xchg
sub
add
lret
mov
cmp
sbb
push
je
cmp
mov
pop
push
repz
mov
movd
pop
cmp
jg
jbe
inc
add
cmp
ret
mov
sub
lock
xchg
nop
insl
cmp
fistl
insb
icebp
gs
movsl
push
shll
add
test
insb
mov
push
adcb
std
mov
ljmp
push
cmp
and
cmp
cmp
pop
fst
add
mov
js
jmp
jne
add
sub
dec
pop
mov
dec
cmc
or
mov
inc
mov
adc
mov
loopne
sbb
push
xchg
ja
adc
jno
movsb
icebp
jb
or
jle
or
popf
inc
push
adcl
ds
cs
inc
jb
cmp
cmpsb
popa
xlat
and
jmp
lock
mov
and
lahf
rcr
sub
pop
or
xchg
loop
lret
or
and
add
push
stc
iret
push
fcompp
pop
mov
aas
daa
popf
movsb
xor
das
sub
pop
mov
cmp
daa
or
sbb
mov
xchg
and
repnz
dec
pop
ficomps
mov
pop
push
inc
mov
cmpl
scas
push
push
sbb
mov
or
cmpsl
push
iret
jnp
mov
std
sub
stos
and
cmp
jge,pn
sub
and
loopne
mov
stos
loop
mov
mov
xor
xor
in
add
sbb
mov
xor
jecxz
push
mov
add
inc
mov
mov
rolb
mov
inc
mov
sbb
add
pusha
in
sbb
mov
sub
imul
xlat
mov
test
cli
sub
fdiv
daa
iret
rcr
xor
test
fidivs
scas
divps
cmp
and
outsb
data16
xchg
adc
loope
jae
scas
enter
adc
fxam
das
in
push
outsl
sbb
mov
xlat
stos
icebp
pop
int
fsubrp
shrl
in
cmpsl
lods
xchg
hlt
xlat
arpl
mov
adc
inc
lcall
fsub
push
mov
inc
jmp
idivb
insl
fdivrs
cltd
fnstcw
jl
daa
pop
nop
pusha
fcoml
mov
cmc
roll
push
adcb
xchg
mov
jmp
ret
push
shrl
enter
or
insl
pop
sbb
inc
int3
leave
xchg
cld
mov
sub
div
in
shlb
adc
pop
xor
flds
insb
push
in
mov
mov
out
jle
adc
pusha
ror
aas
imul
mov
and
mov
push
xlat
mov
xchg
test
inc
mov
xchg
adc
mov
leave
jecxz
and
jbe
sub
mov
mov
int3
push
les
xchg
add
or
mov
pusha
xor
mov
fisttps
rorl
and
cmpsl
or
sub
push
cwtl
push
imul
test
lds
out
adc
repnz
pop
and
out
sbb
rcrb
pop
mov
dec
cmp
popf
add
mul
aas
mov
mov
ret
xchg
fildll
mov
sbb
data16
mov
add
out
lea
ja
cld
js
mov
in
pop
ljmp
js
mov
jns
ret
jg
pop
mov
call
jns
es
mov
sbb
xor
ret
xchg
fsubl
inc
hlt
inc
stc
andl
fstl
test
cli
or
xlat
cmpsb
add
push
call
mov
xchg
push
inc
mov
cmp
add
mov
loop
dec
in
loopne
fs
loope
sub
jg
enter
sub
imul
sbb
cmpsl
scas
int3
and
xor
cli
iret
push
or
xor
in
je
sbb
hlt
mov
dec
sbb
xlat
push
and
push
aas
xchg
sbb
dec
push
fs
adc
js
arpl
nop
aam
adc
lods
add
imul
or
das
adc
push
syscall
dec
sbb
imul
in
popf
in
pop
jnp
cs
fwait
pop
sbb
fadds
lret
jne
mov
sahf
mov
mov
jmp
dec
out
shlb
xchg
addr16
in
mov
mov
sub
daa
testl
scas
es
or
pusha
sub
sbb
pop
inc
dec
mov
jo
aad
addr16
xor
mov
cmpsb
je
aas
jns
ja
fidivrl
bound
pop
cltd
xchg
movsb
rolb
mov
cmp
or
gs
xchg
clc
pop
cli
mov
or
pushf
popa
rcr
add
xchg
xchg
dec
push
clc
imul
push
movsl
dec
mov
in
mov
movsl
scas
loopne
sub
fsubrs
mov
aaa
mov
pop
xor
les
pop
pop
pop
rorl
and
clc
sbb
fstps
push
xchg
addl
jp
and
int3
pop
jne
jle
out
mov
cwtl
xchg
sbb
add
dec
cli
or
inc
jp
xlat
cmp
jae
repz
sub
jmp
imul
idivl
test
ja
xor
in
flds
inc
sub
jecxz
fcomps
or
andl
mov
lods
ds
cmpsb
mov
sbbb
mov
loopne
adc
dec
sub
out
rcll
div
repnz
xor
jp
fs
xor
es
hlt
stos
outsl
push
jbe
movsb
daa
mov
fistl
test
dec
and
fwait
ds
or
mov
rcrb
outsl
loope
ss
fcomip
loope
dec
jo
lods
mov
dec
sbb
inc
imul
push
xor
mov
cltd
int3
test
lds
sti
lods
adc
jl
into
mov
std
leave
push
scas
and
jle
lods
and
pop
inc
idivb
dec
loop
arpl
sarl
shll
test
mov
popf
repnz
test
push
cmp
or
stc
jns
mov
mov
movb
stc
adc
rclb
jne
movsl
dec
push
pop
mov
or
scas
ja
push
add
in
loope
outsb
xchg
or
test
xchg
inc
sbb
aaa
js
cmp
jg
mov
adc
out
mov
or
mov
push
add
outsb
pop
xor
sarl
into
pop
sbb
repz
jmp
adc
or
inc
pop
jnp
rcll
cmp
mov
push
aam
das
test
test
add
mov
mov
jns
sbb
rclb
sbb
inc
mov
inc
cmp
in
sarl
mov
es
icebp
out
rorl
sbb
mov
jb
out
add
cmpsb
sub
lret
inc
scas
fcomp
lcall
mov
jg
mov
or
es
js
pop
dec
push
xchg
imul
sbb
mov
test
int
nop
sub
leave
pop
xchg
lds
pop
stos
xor
roll
and
or
faddp
repnz
cmp
into
sbb
scas
test
out
andb
mov
xor
stc
pop
mov
mov
push
mov
hlt
int
imul
dec
lcall
fwait
xchg
xlat
aaa
sub
pop
rcl
fcmovnu
jbe
stos
sub
adc
outsb
jmp
leave
add
out
xchg
sub
mov
scas
imul
subb
test
and
pop
cmp
push
adc
loope
add
clc
adc
sbb
sti
subb
hlt
int
jecxz
int
sahf
mov
jle
mov
in
popa
loop
in
ret
and
add
push
mov
xlat
lea
out
movb
test
insl
pop
fisubrl
xchg
mov
cld
arpl
push
push
sub
das
lret
jns
fmull
inc
pop
sti
mov
cmc
mov
addr16
rcrb
in
pop
in
inc
stc
sub
sbb
cmc
stc
add
jae
andl
hlt
out
push
or
mov
mov
cli
jg
push
test
xchg
push
lods
test
aaa
xchg
notl
inc
sub
arpl
hlt
pop
test
call
cmp
stos
xchg
fisubrs
in
mov
push
es
and
mov
jae
fsubs
lds
xchg
or
mov
mov
aas
push
popa
lss
inc
fadds
subl
xor
jb
in
cmp
gs
ret
push
and
sbb
rorb
push
add
daa
fcmovnu
pop
xchg
shl
xor
call
xchg
imul
popf
cmp
cli
sub
std
push
push
cmp
mov
jg
popa
fimull
mov
pushf
fsubs
jns
mov
jg
outsb
xchg
inc
sbb
jmp
push
popa
in
into
fbld
and
nop
dec
rcrb
xor
inc
push
movsb
loope
imul
mov
push
sbb
xor
and
loop
fcomip
inc
add
pop
mov
outsl
dec
push
push
mov
fistpll
ds
rcr
das
bound
push
dec
mov
adcl
in
dec
lods
loop
lods
lods
mov
dec
pop
add
sub
loopne
lock
into
sbb
mov
lret
fidivrs
lret
je
rcrb
ja
sahf
mov
sbb
inc
push
push
dec
mov
test
dec
fbstp
mov
fwait
mov
hlt
in
lcall
icebp
fstps
das
lret
iret
adc
sbbl
iret
inc
dec
mov
pusha
addr16
push
xchg
and
or
lock
mov
iret
dec
shrl
mov
dec
push
sbb
jecxz
cmp
inc
stc
mov
das
inc
xor
push
pushf
bound
mov
mov
lds
orb
jp
stos
xchg
out
cmc
mov
cmovl
mov
pop
inc
arpl
ss
jne
xor
mov
add
add
mov
jmp
add
out
test
mov
dec
mov
or
mov
push
jmp
mov
sbb
mov
mov
popa
call
into
jl
loope
shll
lea
xchg
or
lods
mov
int3
xlat
push
fnstcw
pop
jns
jl
stos
dec
push
sub
or
mov
mov
into
and
int
fidivrl
imul
jge
jl
xor
stos
das
or
inc
cmp
mov
push
pop
adc
mov
mulb
int
or
lea
jecxz
push
and
pushf
test
adc
or
and
or
test
xchg
or
push
mov
mov
adc
cmp
and
mov
adc
inc
pop
or
bound
pop
lret
push
test
sub
sbb
xchg
adc
xchg
sbbb
fcom
push
sub
fsubr
leave
adc
popf
add
add
pusha
push
push
sub
scas
mov
loop
push
clc
xchg
fwait
mov
dec
mov
xchg
push
fisttpll
pusha
cmpsl
cmpsb
mov
popa
xchg
pop
xor
cld
dec
mov
sbb
int3
cmp
jmp
push
cli
push
test
fneni(8087
mov
adc
jnp
or
mov
adc
in
inc
in
dec
icebp
in
addl
jns
add
test
pop
in
jne
and
sub
test
xchg
cmpsl
outsb
jge
jmp
sahf
mov
movsb
sub
in
adc
sbb
cmp
pushf
inc
cltd
cmp
sbb
push
add
lret
cmp
sub
mov
aas
das
jle
je
dec
cmp
dec
stos
shrb
jb
mov
ret
jge
dec
out
into
test
or
fistpl
pop
add
jp
dec
insb
outsl
cltd
jle
add
xchg
sahf
adc
push
mov
push
add
push
out
pusha
sub
aam
arpl
xor
test
mov
mov
jo
xor
jmp
cs
xchg
fcmovb
cmp
idivl
js
aam
or
inc
mov
or
cwtl
cmp
push
mov
pop
xchg
cmc
call
lret
in
mov
inc
push
lods
sub
push
push
mov
aam
mov
jge
lods
pushf
pop
mov
cmp
test
clc
mov
cmpsb
mov
imul
jae
lods
add
cmc
mov
and
addr16
mov
insl
mov
push
push
push
mov
jle
cmp
je
mov
inc
iret
adc
repnz
jb
mov
push
outsl
sub
ret
das
cmp
arpl
adc
mov
repz
idivl
mov
mov
inc
mov
daa
add
add
push
sbb
and
mov
icebp
dec
loopne
cmp
enter
addb
inc
sub
jb
sarl
push
dec
cmpsb
cmpb
dec
pop
ljmp
rcrl
ret
dec
xor
inc
mov
inc
not
loope
das
repnz
loope
mov
sbb
pop
out
gs
lods
xor
or
out
jg
mov
call
xor
xor
outsl
xchg
dec
dec
mov
mov
jmp
fcmove
out
push
pop
xchg
repz
sbb
stos
xchg
sub
mov
je
inc
repz
inc
movsl
pop
inc
mov
data16
add
pop
push
test
xchg
pop
test
cmpl
dec
mov
lods
cmp
jge
fnstcw
sti
cmpsb
out
and
mov
jecxz
jbe
loope
xor
xchg
cmpsl
add
incb
xlat
push
outsb
hlt
ret
daa
pushf
cmp
and
nop
pop
mov
test
orb
dec
test
lret
fcmovnu
fcomps
insb
cltd
mov
xchg
mov
addl
js
xchg
orl
adc
into
cmp
cmp
push
push
xor
sarb
aam
inc
xchg
aaa
loopne
or
clc
jp
xor
cli
mov
sbb
test
rcl
scas
loope
mov
test
mov
push
inc
out
hlt
aam
loop
sbbb
pop
stos
js
into
xor
push
xlat
fsubl
stos
cmp
dec
dec
pop
cmpsl
pop
imul
sub
sbb
sub
mov
popf
pop
sub
cmp
cmp
push
add
mov
mov
mov
sbb
gs
repnz
push
test
mov
pop
add
mov
xor
add
ss
mov
and
iret
jmp
mov
stos
sbbb
push
adcb
out
fldt
push
mov
inc
jb
bound
push
inc
insl
sahf
popa
aaa
leave
xor
lods
insb
jge
lods
and
cmp
adc
cld
andb
dec
icebp
pop
outsl
lahf
add
lea
push
movsb
adcb
inc
jno
mov
and
mov
pop
lods
mov
movsb
xchg
ss
jge
dec
mov
jne
push
add
mov
xchg
scas
pop
insl
and
dec
and
movsb
and
ds
scas
and
out
out
fs
mov
testl
jne
push
mov
sbb
pushl
mov
mov
dec
push
push
movsb
int
enter
sub
pop
inc
in
jb
mov
mov
inc
mov
and
les
int3
mov
jmp
xor
in
xchg
mov
cltd
int3
cmp
inc
lods
scas
jbe
lods
cmp
aam
inc
loopne
xor
dec
sbb
jb
xor
mov
add
clc
paddb
pusha
nop
stc
sbb
ds
xchg
xchg
mov
shl
cmp
push
xchg
and
test
movsb
gs
xchg
mov
mov
mov
lock
stos
inc
stos
pusha
aam
enter
mov
pop
push
pop
dec
xor
dec
rorl
cmp
pop
rcl
out
cmc
lock
cmc
lea
lods
sub
mov
dec
insb
push
adcl
out
lret
mov
adc
es
xchg
data16
flds
out
cmc
push
mov
push
inc
stos
add
pop
test
mov
rcll
scas
dec
imul
push
pop
js
sti
mov
call
pop
arpl
lea
cli
dec
test
xor
leave
sti
mov
fs
mov
lret
adc
inc
loope
jnp
int
fists
std
mul
stc
loop
push
outsl
ret
data16
pop
sbb
push
fcmovnu
push
and
in
fbld
push
mov
or
nop
mov
xchg
mov
sub
push
insl
cmp
nop
orb
add
cld
daa
xlat
incl
es
dec
and
mov
mov
out
jl
data16
mov
pop
sbb
mov
fisttpll
jnp
mov
sub
out
sub
jge
sbb
push
add
inc
sub
inc
syscall
jge
in
and
inc
aam
loope
sub
pop
add
cwtl
hlt
jno
in
or
in
sbb
xchg
cmp
lds
lds
dec
cmc
je
inc
lret
jl
mov
clc
icebp
out
jbe
loopne
push
mov
xchg
scas
les
fwait
das
lds
mov
and
cwtl
sbb
sub
and
in
cmpsb
adc
cs
dec
xchg
roll
jo
sub
out
inc
push
in
cmp
add
cwtl
xchg
or
or
loopne
clc
mov
mov
mov
and
sub
mov
int
repz
andb
mov
cmp
push
fidivrs
fcomi
call
ja
pop
dec
pop
cli
jns
inc
sbb
or
addr16
test
cs
dec
xor
repz
shll
sahf
pop
add
jg
sub
mov
push
ljmp
loopne
sub
fwait
cmp
mov
mov
cmp
imul
cmp
mov
idivb
push
lret
in
lock
push
movsl
das
subl
call
push
cmpsl
test
test
jb
xchg
stos
pop
movsl
je
pop
or
xlat
pop
rol
aaa
lea
kshiftlq
push
mov
insb
mov
mov
push
fstl
mov
test
cmp
cmp
xlat
ljmp
sbbb
hlt
jne
pop
sbb
jno
xchg
xchg
mov
rcl
sti
dec
pop
faddp
and
orb
in
loopne
lahf
sub
in
stc
or
pop
jl
push
sub
sbb
int3
outsb
pop
enter
scas
push
ror
fdivrs
imul
jecxz
cmp
int
popa
out
adc
jne
popa
ficoml
out
sarl
push
pusha
imul
adc
lcall
mov
lods
mov
pop
sbb
cmp
frstor
aam
push
inc
dec
mov
stos
jnp
sti
xor
jle
push
ja
arpl
arpl
push
adc
pop
sbb
and
popa
stc
lret
stos
xor
adcb
rclb
cwtl
xchg
xchg
outsb
imulb
ljmp
push
mov
sbb
addb
xchg
subb
std
push
add
test
or
jnp
and
iret
bound
xchg
jecxz
int
dec
ret
sub
mov
shll
pop
sub
sub
xor
and
dec
fs
ds
pop
jo
or
arpl
mov
mov
es
call
pop
xchg
fcoms
xor
mov
push
push
rorb
cmp
call
shrl
lock
addr16
sub
dec
jg
jg
test
int
mov
adc
inc
testb
aas
dec
pop
fisubrs
pop
mov
pop
gs
pop
sbb
jle
outsb
mov
jae
jno
loopne
add
cmc
repz
scas
dec
xor
movsl
sbb
leave
leave
lret
xor
leave
jmp
xor
scas
cmpsl
addb
or
mov
insb
add
dec
repz
lods
sti
lret
sub
mov
dec
pop
jle
mov
jecxz
sub
ljmp
notl
sbb
mov
fs
jmp
push
dec
ds
sbb
mov
jp
add
xchg
mov
out
push
mov
add
fdivrl
stos
out
fneni(8087
mov
adc
dec
es
jae
test
aad
jmp
nop
mov
loope
jmp
sub
fcoml
out
and
ret
in
cmp
out
mov
push
ja
jno,pt
push
out
sub
sbb
sub
ret
lea
sarb
inc
out
mov
sub
adc
sbb
xor
shr
push
jge
dec
fcmovne
cwtl
mov
sub
sbbl
sbb
ja
stos
xchg
add
cmp
aad
sub
xor
xor
insb
sbb
sbb
jo
cmc
ret
aad
mov
sbb
jl
icebp
lods
push
fwait
testl
rcrl
xchg
xchg
mov
xchg
sbbl
xchg
fidivrs
mov
add
xlat
add
sbb
sti
xor
jno
dec
add
cld
and
xor
shll
xlat
adc
mov
lods
outsb
gs
jecxz
scas
cmp
fwait
out
mov
idivl
lahf
into
adc
jne
iret
mov
inc
mov
les
cmp
popa
jecxz
pop
cmp
jl
aad
test
ja
mov
jmp
ss
sub
xchg
jno
cld
ret
sbb
inc
mov
add
loopne
adc
iret
pop
sub
cmp
cmc
dec
cmp
dec
pop
test
andb
repz
dec
pop
mov
out
fwait
es
cmp
and
loop
and
push
jnp
inc
xchg
adc
cwtl
add
xchg
pusha
test
incb
aad
mov
and
es
mov
mov
insl
stos
push
add
cmp
mov
sub
and
ss
push
mov
stos
dec
neg
movsb
cmpsl
loope
lods
gs
nop
test
insb
popf
inc
and
mov
jnp
add
adcl
cli
xchg
dec
clc
sub
mov
push
mov
jg
sub
inc
add
rcrb
fistpl
enter
xor
pop
jle
mov
loop
mov
jecxz
les
decb
pop
jns
fadds
or
std
push
and
push
xchg
shl
xchg
xchg
mov
jo
xchg
cwtl
mov
aam
sbb
loopne
imul
cmp
jecxz
xor
sbb
daa
out
push
push
sbb
test
inc
in
dec
arpl
push
xchg
push
adc
inc
enter
fwait
addl
mov
push
es
ret
cld
jmp
mov
andl
stos
inc
push
icebp
add
adc
and
push
sub
xchg
inc
xor
lds
xchg
add
mov
imul
dec
dec
test
xchg
cli
jmp
push
adc
test
scas
fwait
movsb
xchg
jg
test
lods
cmp
fldenv
xchg
mov
fsubr
dec
dec
aaa
test
leave
rorb
cmp
inc
ret
dec
ljmp
lock
mov
outsb
cmp
mov
add
push
push
adc
pop
repnz
mov
ret
inc
xchg
add
and
dec
ja
movsb
sbb
sub
jp
xchg
cltd
out
mov
xor
jmp
rclb
shlb
in
roll
jmp
insb
cmp
xchg
shrl
pop
cmp
aas
test
mov
add
and
mov
mov
rcrb
jmp
push
mov
dec
mov
in
xlat
cmp
mov
mov
jmp
into
lods
das
jae
xchg
rcr
and
out
and
aad
add
xchg
in
rol
orl
rcrb
push
jo
in
cmp
pop
sarl
dec
aaa
das
adc
mov
add
nop
mov
mov
pop
arpl
test
mov
jl
or
pop
movsb
or
roll
fistps
les
pop
inc
int3
mov
sub
ljmp
cmp
dec
fadds
inc
inc
addr16
xchg
test
in
lahf
ljmp
add
xchg
add
fdivr
shll
xchg
xchg
mov
and
imul
jne
lret
in
lahf
imul
arpl
mov
dec
mov
in
pop
shrl
sub
sub
adc
lds
lea
cmpsb
or
mov
jecxz
fs
insb
rorl
jmp
mov
lcall
adc
loopne
jne
gs
jmp
je
lret
das
mov
stc
data16
sub
push
cltd
es
pusha
rcrl
push
mov
aas
mov
std
push
je
sub
add
inc
shr
repz
mov
mov
sub
sub
push
mov
mov
or
xchg
dec
xlat
mov
push
ret
call
fildll
fisttpl
rorb
adc
insl
cli
enter
adc
das
sbb
inc
lret
cmp
xor
iret
fnsave
leave
pop
cmp
xor
test
jo
ret
cmp
test
sub
icebp
mov
int3
int3
out
mov
add
push
xor
dec
daa
lret
xchg
loope
and
dec
cmovo
xorl
lret
gs
cmp
into
lods
mov
xchg
inc
pop
insl
cs
leave
inc
nop
sahf
pop
lret
bound
andl
hlt
pop
pop
insb
sbb
pop
aaa
mov
cmp
mov
jbe
repz
push
inc
lods
in
adc
push
inc
push
jecxz
aas
mov
dec
cmp
push
push
cmp
gs
xchg
cmc
leave
std
jp
and
jae
push
ljmp
test
fstl
lahf
ret
mov
out
or
insb
pop
nop
arpl
arpl
out
inc
and
mov
jmp
mov
sarl
mov
sub
aaa
mov
out
and
test
mov
inc
sarb
insl
lods
push
xlat
sub
loopne
xchg
dec
mov
lds
jne
loopne
and
ljmp
mov
adc
add
sub
aas
xlat
or
add
test
je
rorl
add
cmpsb
imul
mov
ss
dec
insl
or
mov
pop
xchg
cwtl
add
xlat
arpl
popa
cmp
sahf
push
inc
mov
xor
enter
pop
jo
cmpsb
xchg
mov
cli
cmpsb
cmc
mov
aam
in
and
mov
test
xor
add
hlt
leave
xor
insb
cli
mov
fiaddl
add
mov
xlat
dec
pop
scas
add
inc
ficoms
push
cmp
adc
mov
mov
dec
fldl
xchg
cmp
outsl
jb
mov
in
jno
inc
add
jg
stos
pop
push
cmp
adc
iret
scas
mov
dec
jp
adc
pop
jg
fadds
push
cwtl
pop
jb
xchg
fistl
rcrb
mov
sub
imulb
shrb
in
dec
xchg
sti
push
cmc
cmp
inc
jne
mov
adc
xor
or
adc
xchg
lods
lods
adc
shll
xor
stos
jns
cmc
xor
xchg
sbb
xor
into
mov
hlt
mov
in
ja
push
adc
icebp
mov
add
xor
xchg
dec
rclb
lcallw
cvttps2pi
loop
mov
cmpsb
cli
pop
inc
xor
xchg
mov
cmovnp
das
sub
mov
in
testl
imul
add
push
mov
and
push
mov
mov
and
cmpl
mov
pop
adc
sub
mov
jne
aam
adc
stos
add
dec
mov
mov
insl
mov
mov
out
popa
jle
dec
mov
dec
outsl
fisttpll
jge
in
loope
cwtl
mov
sarb
fidivrl
out
jb
inc
in
mov
mov
dec
lock
and
insl
cmp
popf
and
imul
into
int3
xchg
ficoml
mov
cwtl
fsubrl
mov
ss
loope
xlat
jae
mov
scas
out
fadds
push
pop
cmp
out
sbbl
stos
sub
fnstenv
ret
aaa
jge
jne
jge
cmp
adc
sbb
decb
push
repnz
jle
loop
pop
or
sub
stc
mov
call
add
out
imul
stos
pop
sub
sub
and
add
inc
cmp
adc
xlat
std
adc
sar
or
je
and
enter
mov
insb
int
cmp
gs
popl
and
cmp
fisubl
push
iret
cwtl
or
xor
sbb
cmp
sti
lods
cmpsb
sbb
mov
cld
xor
sbb
sub
lods
or
xchg
pop
sbb
lods
xchg
mov
pop
xorl
jl
or
and
hlt
jns
push
fstps
jg
in
icebp
xor
fisubrs
jo
inc
lock
sub
cli
adc
lahf
test
pushf
adc
div
fldcw
xor
and
inc
adc
sbb
out
mov
push
fldcw
pushf
xlat
cmp
popa
pusha
cld
shlb
imul
lea
push
das
lods
mov
sub
jp
mov
lods
mov
lcall
xchg
adc
iret
out
pop
mov
jg
lods
sarl
aam
xchg
pop
mov
test
sub
add
pop
daa
mov
sub
mov
jg
jg
jmp
jns
stos
cmp
and
jge
ja
movsb
shr
mov
lds
roll
add
popa
add
notl
push
lahf
in
inc
add
mov
sbb
pushf
icebp
fmull
or
repnz
cmp
es
mov
jnp
mov
and
jecxz
lea
addl
cmp
push
movsl
and
outsl
push
and
mov
add
call
mov
jns
mov
mov
push
popl
push
loope
push
lret
ss
and
iret
sti
es
cmp
ja
mov
stc
pop
dec
pushf
mov
in
je
sub
mov
pop
sarb
insb
mov
arpl
cli
xchg
sub
rorb
pushf
movsl
addr16
sti
mov
andb
sbb
and
pop
repnz
andb
jmp
push
cli
popf
fsubl
push
jge
mov
imul
inc
push
mov
cmp
ja
mov
inc
lods
or
scas
orb
xchg
and
jo
inc
adc
cld
pushf
nop
push
hlt
jae
add
mov
lods
push
sub
orb
divb
adc
mov
push
adc
mull
and
stc
pop
andb
out
or
cmc
stos
lcall
cltd
sbbb
lods
arpl
jno
roll
cltd
push
mov
aad
inc
cmp
mov
aad
das
jns
test
fiadds
sub
jae
vlddqu
xchg
xchg
cmp
jge
push
xor
movsl
out
cltd
jae
dec
mov
stos
or
xchg
int3
lds
imul
cvttps2pi
pushf
mov
ljmp
xor
fs
push
iret
dec
insl
adc
je
fisubrs
icebp
xor
xchg
in
lock
outsl
mov
push
mov
mov
xor
loop
in
aad
sbb
mov
test
push
popf
movsb
sti
xchg
jne
dec
leave
pop
add
cmc
addr16
sub
jns
fistl
xchg
mov
sub
mov
fsubs
mov
pop
std
add
hlt
mov
mov
or
ss
cmc
and
cld
jl
inc
dec
stos
das
cmp
dec
mov
mov
in
mov
lret
pop
jge
imulb
lods
xlat
jae
rorl
sahf
sub
cli
mov
ret
and
test
leave
jg
xor
mov
fucomp
leave
push
shlb
enter
cmp
and
enter
fnstsw
pop
cmp
dec
fucompp
cmp
lahf
xchg
xor
push
jp
fwait
add
enter
push
ret
lahf
pop
xor
das
scas
jns
les
punpckhwd
add
lahf
cmp
in
push
pop
xchg
adc
and
stos
shrb
lea
ljmp
mov
and
xchg
popa
in
mov
and
lcall
add
pop
test
je
push
rcrb
add
or
adc
loop
es
pop
popf
mov
and
pop
xchg
xor
adc
push
and
mov
lock
inc
adc
mov
ret
add
pop
aaa
aam
xor
push
mov
aaa
add
cmp
and
mov
insl
and
and
sbb
out
cltd
adcl
sbb
cmp
stos
ljmp
fsts
roll
mov
xor
push
shll
test
xchg
ja
stos
jo
xor
addr16
push
loopne
lahf
pop
jne
xor
adc
das
sub
ss
jg
pop
or
push
stc
xor
push
fs
lahf
out
ds
mov
sbb
mov
imul
stos
xor
cs
stos
icebp
inc
addr16
and
scas
scas
push
loope
sbb
jne
test
mov
divl
mov
inc
test
push
mov
or
outsb
mov
call
jle
sub
cmp
jo
pop
addb
addb
aad
pop
cmp
lret
mov
dec
add
xchg
cltd
xor
inc
pop
pop
bnd
divl
sbb
sbb
imul
das
sub
pop
or
or
inc
out
imul
xor
or
scas
jge
mov
xchg
mov
jae
iret
fidivrs
sub
pop
insl
sub
in
mov
popf
je
out
pop
or
leave
xchg
lods
negl
push
fcomi
lods
fstpt
cmp
mov
jmp
in
insl
out
jne
cmp
cs
loopne
sarb
shlb
lods
push
scas
pushf
cli
push
in
or
ja
xchg
push
add
ja
dec
jp
aad
lods
std
out
stos
stos
rcrl
sti
sbb
aad
sarl
dec
push
fldl
adc
adc
mov
mov
mov
ljmp
dec
pop
xchg
inc
add
pushf
inc
inc
cs
scas
test
mov
pop
popw
inc
icebp
jl
xchg
adcl
add
out
or
adc
leave
and
xchg
fwait
jmp
cmp
stc
sbb
fildll
push
adc
div
pop
fidivl
push
jp
xor
fst
loopne
or
adcb
imul
mov
int3
mov
loop
mov
dec
xor
xor
xchg
sbb
aaa
lods
mov
sti
ret
loop
inc
int
jp
cmpw
dec
push
int
int
not
mov
jae
sti
repz
mov
mov
outsb
out
test
cmc
inc
jg
popa
xchg
jl
dec
lea
push
cmpsb
jno
mov
in
insl
push
xchg
pop
mov
cld
xor
jle
roll
add
ret
push
sbb
pop
outsl
neg
mov
inc
repz
mov
je
push
mov
in
fcoms
ss
mov
int3
daa
leave
je
xchg
div
cmovg
repz
inc
dec
popa
or
pop
fimuls
jnp
in
xchg
mov
adc
mov
xor
ror
sti
aad
fst
push
daa
aaa
pop
rcl
cmpsb
xor
mov
xchg
mov
cmp
les
fadds
and
add
cmp
jo
inc
sub
sbb
add
dec
es
pop
das
mov
mov
and
push
xor
push
push
fucomp
push
jne
cli
lret
fidivl
jl
jecxz
popa
jge
push
mov
cwtl
mov
jle
dec
pop
jb
sbb
mov
lds
outsb
sbb
scas
sub
stc
mov
leave
adc
out
sbb
lret
aaa
call
clc
into
ds
dec
and
sbb
aaa
movsb
cwtl
arpl
sub
sub
mov
jge
mov
xor
adc
xchg
xchg
sub
lds
cmpsl
jne
test
add
mov
jg
push
dec
lea
and
and
pop
sti
out
dec
fisttpl
push
test
lods
cmp
jle
call
in
loopne
mov
inc
mov
jbe
fiadds
pop
xor
jg
out
cmp
fcoml
pop
push
loopne
pop
or
push
jge
or
jo
push
decb
mov
popf
sub
cmpsb
inc
imul
fildll
cs
mov
xor
jmp
pop
mov
pop
std
cld
subb
sub
ds
jbe
data16
sub
sbb
gs
cmp
adc
xor
xchg
mov
inc
adc
add
xchg
pop
push
mov
scas
sbbb
stos
out
dec
mov
out
aas
in
sub
push
cwtl
adc
mov
rcll
lret
push
cmc
aaa
cmpl
jge
loopne
and
fwait
stc
jl
daa
sahf
ss
ficoml
mov
loop
push
cmpsl
xchg
xchg
outsb
add
pop
cmp
sbb
push
add
xacquire
dec
push
and
mov
imul
mov
popa
cmpsl
insl
clc
jb
lds
mov
pop
lret
push
mov
mov
cwtl
ljmp
cmp
jne
xor
std
push
imul
push
or
pop
insb
ret
xchg
adc
jno
loopw
fnsave
push
shlb
and
loope
dec
mov
inc
jmp
data16
or
inc
push
inc
pushf
pop
mov
xchg
cmp
lret
sub
mov
arpl
mov
test
mov
negb
mov
insb
cmc
sub
mov
fisttpll
jg
xor
sub
sbb
aad
cld
cli
fs
daa
mov
sub
loopne
ret
jp
cmpsl
pop
imul
jl
cmp
mov
xor
int3
and
pop
movsl
sub
push
lock
inc
jno
jecxz
in
mov
mov
outsl
pop
lds
stos
push
push
inc
xlat
jns
jecxz
ja
inc
xor
xor
mov
sar
cwtl
testb
jae
mov
ss
ror
lock
dec
cli
test
jp
add
bound
fs
cs
adc
pop
mov
mov
adc
xor
lods
lret
fwait
jne
jns
push
add
je
push
pop
lret
aad
test
sub
scas
nop
jno
aam
dec
or
pop
or
cltd
ss
icebp
lea
fmuls
or
addl
gs
dec
imul
mov
or
aaa
inc
ret
pop
mov
lods
mov
test
loopne
push
xor
aaa
mov
jmp
adc
clc
in
imulb
mov
adc
inc
es
dec
add
dec
mov
push
push
bnd
cmp
sub
insb
rcl
mov
cmp
pop
andl
in
sarl
divl
lcall
sbb
aad
aad
es
rcrb
or
inc
shr
push
into
leave
in
inc
aad
cmpsl
pop
pop
push
lea
mov
and
fsts
dec
mov
and
arpl
push
lods
jo
sbb
dec
push
gs
adc
ret
test
ljmp
pop
ja
adc
sahf
lock
testl
jno
add
movsl
cmpsl
ds
shlb
lds
push
insl
in
int3
add
outsl
add
cmpb
bound
mov
jg
clc
into
repnz
adc
or
jns
push
jne
jb
mov
popf
mov
adc
mov
adc
cmpsl
outsl
je
cmp
mov
movsb
pop
loopne
add
jbe
leave
dec
aad
mov
in
adc
movsb
add
sub
inc
rcrl
or
dec
mov
dec
jmp
addr16
xchg
xchg
sbb
enter
out
pushl
std
add
and
mov
mov
adc
clc
add
xchg
pop
addr16
je
in
dec
mulb
adc
push
bswap
cmp
fidivl
outsl
xchg
inc
inc
fsubrs
sub
inc
scas
ss
shlb
dec
aas
lea
inc
loopne
inc
xor
lea
mov
xchg
adc
jge
cmc
pop
xlat
mov
ss
es
imul
stc
scas
aam
cld
push
mov
lods
inc
orb
pop
test
test
ret
add
or
or
stos
dec
add
and
fld
in
mov
cmc
sub
negb
dec
shrl
aad
xchg
in
mov
dec
rorl
shll
in
mov
mov
pop
or
pop
sbb
inc
sbb
cmp
les
int3
adc
aas
dec
mov
mov
fwait
icebp
icebp
sarl
lret
sub
sbb
cltd
into
cmp
push
js
gs
out
xor
iret
iret
mov
stc
xlat
or
mov
jmp
pop
sahf
lret
xor
push
sbb
sub
repz
mov
and
andb
jo
pop
push
stos
adc
mov
mov
xor
pop
mov
int3
test
in
push
cli
cmp
js
and
sub
repnz
into
repz
pop
mov
shlb
adcl
add
pop
repz
push
fisubrs
mov
adc
sarb
mov
scas
xor
add
jecxz
xchg
into
xlat
imul
shlb
inc
lret
jbe
stos
pop
pop
mov
xchg
addl
iret
inc
mov
cmpl
pop
sub
jb
aam
ss
ret
lahf
adc
pop
xor
xchg
or
scas
push
movsb
imul
pusha
pop
pop
repz
lahf
xchg
or
sti
mov
fdivrp
sbb
pushf
psllw
mov
in
pop
or
pop
xchg
or
test
jg
push
xor
sti
dec
sub
push
insl
xchg
mov
sub
and
adc
scas
jo
clc
sbb
cld
push
icebp
mov
std
add
pop
enter
fs
push
mov
int
lods
in
cmp
sbb
ja
jo
cmp
mov
lods
roll
in
mov
test
idivb
mov
add
inc
ds
or
outsl
mov
jb
je
mov
mov
or
out
pop
push
decl
mov
mov
cmp
hlt
ljmp
sti
pop
sbb
add
out
ds
sub
adc
insl
call
dec
cmpsb
aad
mov
mov
inc
mov
pusha
movsb
cmp
cmp
mov
sbb
xchg
loopne
cli
jle
aas
push
push
dec
push
pop
movsl
dec
cltd
repnz
xor
dec
jle
cmp
mov
sbbl
lcall
adc
fs
fnstsw
pop
xor
les
arpl
push
and
cmp
push
jne
add
add
jg
cmc
adc
push
lret
mov
adc
mov
rol
fdivl
loop
adc
sbb
test
jo
lahf
std
pop
dec
xlat
add
rcl
lcall
sub
repnz
insl
scas
fwait
aaa
jmp
movsb
sbb
mov
pop
and
int3
mov
cmpb
pop
add
mov
inc
js,pt
out
add
mov
movsb
repz
adc
xor
in
fadd
cli
push
sub
or
push
mov
test
jne
scas
daa
adc
out
dec
lret
and
inc
fsts
out
adc
cltd
shrl
sbbl
mov
xchg
cmp
data16
jmp
ret
jne
pop
xor
add
cmp
sbbl
movb
test
push
and
orb
push
iret
push
mov
js
sub
and
push
mov
cmp
fxam
xchg
cld
xchg
js
mov
mov
mov
shl
cmp
sbb
and
fdiv
inc
hlt
cwtl
in
fabs
test
jns
andb
loope
sbb
in
shr
mov
call
mov
lret
mov
mov
add
jge
jp
xchg
xorb
ret
ret
mov
shll
jmp
jg
ss
jg
jp
cltd
pop
xchg
xchg
jno
in
out
push
xorl
xchg
add
repnz
adc
in
test
mov
dec
mov
data16
lods
or
sbb
inc
mov
js
leave
mov
aam
mov
pop
pop
lods
stos
add
sbb
xchg
lds
mov
pop
sti
mov
inc
inc
xchg
aam
add
mov
inc
and
adcb
shrl
sub
and
pop
loopne
rclb
dec
aas
push
idivl
dec
repz
push
mov
test
es
nop
out
lcall
fistpl
jno
cs
movsbl
sahf
mov
int
sbb
jp
cltd
cwtl
inc
jnp
fisttps
icebp
cmpsb
adc
dec
faddl
adc
pop
xchg
push
sub
sbb
xor
jge
inc
in
xchg
hlt
cli
jns
pop
lahf
bound
pop
jmp
push
ficompl
cltd
cltd
ret
jp
imulb
in
jne
jae
popa
mov
cmpsl
aas
push
addr16
popa
repz
jp
xchg
mov
xor
lret
inc
jecxz
pop
mov
or
mov
repz
lods
cmp
outsb
popa
ds
cmp
fdivl
inc
pop
pop
dec
push
imul
aad
dec
fldenv
push
int3
fldenv
scas
cmpsb
push
dec
mov
orb
ret
adc
push
add
sbb
mov
dec
je
dec
sbb
std
in
mov
or
dec
pop
sub
push
jae
sbb
pop
int
mov
roll
mov
fwait
jns
fsubr
sub
outsl
or
sbb
ss
pop
xor
stc
mov
fildl
cmp
fnsave
and
mov
mov
xor
lods
movsb
and
dec
rcrb
hlt
lods
xchg
lret
lcall
cli
pop
dec
and
insb
mov
mov
ret
pop
pop
jg
sub
adc
jl
hlt
loopne
sbb
leave
inc
mov
repz
and
bswap
add
outsl
pop
inc
rcr
scas
jmp
mov
xchg
push
mov
fwait
mov
ret
add
int3
in
sbb
popf
orb
inc
into
add
ljmp
ja
cmp
sbb
mov
adc
xor
dec
leave
add
loope
sub
jecxz
sbb
push
push
pop
push
cmpsl
test
or
test
pop
and
cmp
ja
call
iret
xchg
inc
dec
mov
push
rclb
dec
ja
or
lds
js
out
leave
lahf
fcom
push
xor
movsb
pop
mov
xlat
sub
inc
fistpll
xchg
fstpt
fistpl
adc
xchg
jae
lret
adc
and
or
mov
or
scas
push
loopne
shrl
aaa
ret
dec
lea
sbb
fidivl
sbb
push
jns
jne
test
jae
movsb
movb
loopne
shrb
jecxz
xchg
popl
sbb
loopne
mov
inc
pop
pop
jmp
fsubs
sub
fcomip
mov
popa
pop
or
cmp
add
ljmp
add
leave
dec
lahf
and
insb
push
ss
sti
aas
sbb
add
mov
rolb
jp
mov
inc
xor
adc
sbb
dec
sbb
in
mov
das
jmp
or
stos
cmc
xchg
mov
jecxz
aad
add
push
xchg
bound
inc
mov
shrb
lcall
sub
or
sub
ljmp
and
jecxz
lea
iret
mov
shll
bound
popf
xor
sahf
adc
xor
and
popa
push
mov
hlt
aaa
push
ret
divb
popa
sub
test
sti
imulb
cmp
movsb
test
pop
pop
jmp
inc
bound
or
jbe
mov
jno
stc
fidivrs
repz
cmp
ja
push
mov
jecxz
mov
insl
mov
js
std
push
pop
or
test
std
xor
vrcpss
pushf
inc
mov
push
into
push
dec
xchg
aas
iret
pop
xchg
cmova
and
xchg
mov
inc
or
cmpsb
repz
aam
lods
pop
ja
inc
xor
rorb
cltd
es
in
popa
insb
xchg
orb
push
mov
inc
mov
jo
pusha
xchg
sub
icebp
ja
enter
cmc
stos
push
int
xchg
jecxz
loopne
mov
fdivs
xor
call
push
pop
sahf
xlat
inc
push
in
mov
push
mov
sbb
adc
pushf
xor
add
add
popa
lods
adc
push
pop
xor
enter
bound
add
notl
push
stos
dec
cmp
adc
int
pusha
add
mov
push
ds
inc
cwtl
jne
pushf
repnz
stos
lea
mov
pop
das
mov
mov
jle
pop
adc
cli
aas
sbb
jp
add
arpl
push
rcr
popf
mov
movsb
leave
stc
out
sbbb
mov
inc
nop
sbb
and
scas
pop
es
cmp
lcall
in
repz
add
cmc
into
insb
jns
inc
cmc
inc
jae
lret
lock
mov
or
sbb
iret
mov
xlat
hlt
sahf
inc
cmp
pop
pushf
mov
outsl
xchg
pop
cwtl
repnz
or
mov
dec
mov
jnp
test
xchg
push
sub
jb
imul
cmpsl
scas
out
or
mov
imul
jb
out
jnp
add
and
inc
ljmp
xchg
mov
or
in
push
inc
mov
lods
pop
fisttpl
inc
inc
ljmp
in
xchg
and
into
mov
outsb
loopne
mov
loope
mov
or
andb
cmp
mov
add
decl
enter
mov
xor
ret
cmp
add
cmp
sbb
fcompl
enter
xor
lock
cli
jae
or
insl
addr16
mov
xchg
enter
jbe
mov
mov
mov
js
pop
jno
lock
push
movsb
or
hlt
mov
sub
in
in
push
cwtl
sbb
lea
mov
testb
push
jns
push
dec
ljmp
mov
mov
pop
add
ss
lock
pop
mov
imul
mov
and
div
aaa
pop
imul
popf
in
or
mov
cwtl
adc
mov
pop
out
and
sbb
jecxz
mov
sbb
daa
jge
jg
rorl
push
fldenv
xor
cmp
mov
push
dec
pop
imul
add
rorl
mov
xchg
mov
ss
pop
xor
xor
das
nop
scas
cmpsb
popf
add
insb
lock
and
mov
hlt
shll
mov
gs
cmpsl
or
and
push
lret
arpl
pop
cmp
mov
je
imul
repnz
call
push
imul
inc
arpl
jno
push
stos
adc
inc
stos
push
push
inc
mov
addr16
mov
pushf
pop
popf
nop
jmp
mov
push
sbb
enter
ss
and
stos
out
je
dec
or
mov
mov
inc
adc
dec
adc
push
lret
mov
mov
addr16
inc
cli
sbb
les
adc
xchg
idivl
jbe
aaa
nop
mov
xchg
cmc
sub
clc
outsb
stos
push
push
push
fmull
push
test
push
test
pop
xchg
xchg
movsl
repz
lods
mov
hlt
cmp
aam
or
sbb
in
std
jge
mov
std
dec
push
mov
mov
ror
sbb
jl
mov
sbb
push
dec
in
scas
xor
inc
fadds
enter
push
fdivr
push
movsl
mov
sub
in
popa
sub
jmp
js
push
mov
mov
leave
inc
call
jae
or
imul
jns
cmp
popf
push
imul
aad
sub
shlb
rcrb
mov
js
push
fisubl
sub
into
cmp
push
addr16
shrl
or
scas
mov
cmp
inc
push
stc
ja
in
adc
pop
repz
or
pop
cmpsl
test
jne
push
push
hlt
or
sbb
xchg
push
shll
shll
imul
jb
outsb
fwait
cli
std
mov
push
pop
sub
inc
jb
xchg
cmp
mov
fisttpl
and
pop
cmp
mov
out
inc
js
imul
repz
jbe
mov
ret
mov
lods
mov
enter
and
mov
cmp
aas
push
imul
add
fs
xchg
mov
in
cmp
pop
imul
add
add
xor
nop
mov
into
xchg
cmp
aad
sub
adc
xchg
js
jno
lahf
addr16
into
dec
fwait
pop
cmp
and
cltd
jns
jae
vmread
clc
sahf
dec
leave
pop
test
andb
pop
lret
dec
fadd
xchg
dec
dec
xor
repnz
loope
dec
push
imul
pop
xor
pop
xor
out
push
jb
mov
rcll
dec
lcall
ror
xor
mov
movl
stos
and
hlt
cs
fmull
scas
in
inc
add
loop
out
mov
scas
fs
mov
mov
xchg
jl
test
rcrl
or
insl
or
add
pop
adcb
movntps
insl
or
mov
das
scas
sub
mov
inc
sub
or
stos
cmp
adc
lcall
arpl
ja
mov
bound
loope
push
jns
test
inc
sbb
rclb
push
add
hlt
and
cmc
push
xor
xor
not
leave
adc
test
push
dec
ret
dec
sub
xchg
dec
out
dec
pop
push
adc
cmpl
or
ret
mov
bound
cmp
push
jge
clc
pop
orb
fsubl
add
mov
aaa
xor
inc
add
mov
pop
mov
sbb
cwtl
icebp
pop
mov
stc
dec
das
jg
in
sub
xor
aam
mov
std
test
fsubs
bnd
fcomps
mov
addl
insb
ljmp
inc
xchg
sbb
arpl
out
inc
xor
add
movsb
mov
out
push
mov
int3
xchg
jecxz
loope
or
inc
jbe
mov
inc
push
aad
movsl
mov
push
ret
jnp
pop
sbb
add
movsl
bound
sbb
mov
inc
or
lds
push
jns
repnz
mov
jle
xchg
mov
jnp
test
ljmp
xchg
pop
enter
andb
mov
mov
jae
repz
mul
xchg
aaa
orb
xor
pop
mov
mov
adc
mov
lods
ds
andl
push
ljmp
or
movl
das
mov
js
pop
dec
sahf
fsubp
xchg
test
mov
dec
inc
and
in
dec
inc
and
test
iret
bnd
lret
or
loopne
push
sub
pushf
adc
pushf
mulb
and
pop
pop
aaa
out
push
cmp
add
loopne
nop
jb
add
mov
xchg
popa
adc
sahf
pop
push
test
mov
jge
cmp
mov
out
shlb
sub
jmp
arpl
pop
popf
or
add
ds
mov
sub
xchg
addr16
bound
aam
dec
or
popf
inc
lcall
gs
push
mov
jl
pop
insb
mov
das
js
inc
mov
pop
jo
add
scas
mov
cmc
mov
shlb
adc
dec
mov
mov
mov
xchg
xor
push
sbb
int3
les
aad
repz
dec
pop
mov
add
dec
push
mov
sbb
and
imul
dec
cmp
jbe
and
jbe
cmpsl
xor
mov
dec
in
rcll
mov
popa
out
jp
adc
ret
lods
add
cmp
mov
push
adc
test
iret
xor
aas
scas
xchg
jae
sbb
jle
pop
pop
adc
mov
sbb
and
bndstx
jnp
insb
mov
xlat
gs
add
sbb
dec
pop
dec
push
insb
push
xchg
pop
pop
lock
das
notb
fisttpll
jo
je
mov
mull
sub
test
das
fldl
outsl
jg
icebp
sbb
lret
movsb
ljmp
int
rolb
fs
pusha
dec
lods
loopne
sub
icebp
adc
xchg
fidivrl
mov
xchg
aas
mov
mov
mov
call
xchg
xlat
jae
outsb
or
add
cld
fiaddl
cmp
pop
mov
push
push
lahf
rclb
nop
lret
fnsave
dec
add
aas
cmp
add
nop
cmp
gs
inc
mov
xorl
fs
or
neg
negl
and
mov
icebp
loope
mov
xchg
push
adc
int
pusha
xrelease
in
jb
push
or
sbb
cmp
ds
inc
jge
jmp
mov
mov
popf
sub
inc
sahf
xor
ret
cmp
in
js
insb
nop
cmp
sbb
fs
rorl
sub
mov
pop
add
dec
cmp
mov
sub
inc
adc
popa
and
cmp
push
cmp
loope
mov
mov
and
inc
adc
lds
xchg
loop
mov
and
mull
testb
mov
faddl
fstpl
aad
sarl
pusha
stos
in
fcomps
mov
adc
and
inc
out
dec
popa
bound
ds
cmp
call
mov
mov
push
scas
fists
pop
and
scas
xchg
aas
cmp
ss
ljmp
and
fdivrl
push
fimuls
add
xor
pop
dec
aas
fisttpl
and
dec
lods
mov
scas
push
push
rcl
mov
inc
sub
sub
cwtl
daa
not
cmp
popl
outsb
rcrb
jns
or
cmp
fmuls
pop
add
mov
std
inc
sub
or
mov
data16
lcall
adc
mov
jmp
adc
leave
dec
std
or
or
inc
sarb
ret
not
ret
sarb
add
and
cmc
cld
fbstp
rorb
mov
mov
lret
std
mov
xor
cmc
mov
arpl
or
pushf
mov
cli
jns
les
push
adc
xor
push
inc
push
jge
in
or
setle
xchg
je
pop
jge
je
xchg
inc
xchg
test
jb
aad
push
add
lret
jmp
and
mov
loope
daa
dec
or
arpl
cli
ret
push
inc
push
mov
mov
sarl
pop
dec
jno
out
rcrb
inc
mov
adc
ss
fnstcw
inc
addb
push
push
sbb
xor
ret
pop
cltd
add
cwtl
fildll
hlt
js
cltd
and
add
mov
add
rorb
loopne
jecxz
test
mov
ds
icebp
pop
xchg
sub
jle
movsb
lret
inc
pop
movsb
subb
lret
mov
mov
add
idivb
repnz
mov
fsubrp
and
aaa
pop
addr16
repnz
loopne
push
mov
pop
xor
fidivrl
loop
mov
addr16
or
orb
mulb
jmp
rcl
out
dec
mov
pop
mov
adc
decl
and
mov
hlt
xor
xor
fld1
mov
inc
mov
aaa
and
cmp
push
iret
mov
xor
sahf
mov
xchg
cmp
mov
mov
add
mov
fcoml
cmpxchg
mov
mov
mov
jae
cmp
mov
es
sub
rclb
and
sbb
add
loop
cmp
stos
push
inc
pop
sbb
cmp
out
sub
test
fwait
pop
pop
mov
sub
push
mov
xchg
loopne
add
inc
test
adc
mov
std
aad
xchg
out
jg
cltd
sbb
into
pop
xchg
and
ja
and
mov
and
cmp
rolb
xchg
sbb
adc
dec
repnz
es
mov
out
lods
xlat
cmp
pushf
loopne
imul
or
sub
and
ljmp
in
mov
cld
xchg
movsl
xor
aam
push
mov
aas
fcmovnb
les
data16
push
push
xor
mov
stos
jp
ss
outsl
mov
pop
int
push
pop
lock
or
out
stos
jne
mov
mov
in
sbb
test
inc
inc
pop
rcrl
or
das
addr16
mov
and
mov
addr16
inc
shrl
enter
sbb
pop
scas
pop
sahf
jp
subb
scas
mov
jp
lds
cld
imul
outsl
dec
and
scas
cmp
add
push
mov
xchg
out
std
inc
sarb
movsb
je
in
push
push
popf
std
or
dec
ds
xchg
es
adc
stos
dec
in
xchg
jo
andb
ret
hlt
add
inc
xchg
cmpsl
and
xchg
adc
or
mov
stos
cmp
add
push
lods
shlb
mov
add
ret
mov
pushf
or
stc
adcl
imul
cmp
add
cmp
rorl
sbbb
push
jg
ljmp
loopne
lods
ja
jmp
inc
push
add
subl
lcall
les
and
pushf
mov
inc
xchg
cmpsl
push
insl
lret
xchg
cmp
jmp
rorl
icebp
push
jg
ss
mov
xor
imul
mov
sub
xchg
dec
xchg
frstor
ss
test
xchg
test
sub
inc
jo
xchg
mov
test
add
inc
or
bnd
js
push
andl
testb
aam
pop
shll
mov
in
call
mov
xchg
pop
aas
or
jmp
pop
mov
outsl
mov
in
dec
jo
dec
pop
sbb
xor
dec
ljmp
or
fmull
xor
rol
repz
fmulp
xor
jp
sbb
cmp
mov
cs
clc
or
cmp
jg
lea
inc
inc
out
xchg
mov
in
insb
cli
aaa
out
clc
shlb
movl
add
jns
mov
scas
icebp
ret
in
and
pushf
mov
fdivs
mov
jg
or
loopne
das
popa
dec
pop
xchg
pmaddwd
adc
dec
fimull
pushf
bound
inc
mov
imul
sbbb
shll
jnp
xchg
lds
dec
shl
xchg
cmovns
or
add
jle
ja
leave
push
test
push
lods
adc
xor
out
jge
jb
ret
arpl
sub
adcl
mov
mov
mov
cmpsl
daa
cli
shll
push
push
ret
js
mov
repnz
pop
imul
and
sub
xchg
mov
lret
dec
mov
mov
fsts
inc
xchg
mov
xlat
dec
sub
add
sub
loope
cmp
lret
dec
mov
cmp
or
dec
jecxz
add
xor
repnz
pushf
pop
inc
and
mov
sbb
inc
inc
aam
movsb
mov
rol
shlb
jo
mov
shl
adc
lret
pop
mov
lods
lds
adc
rcl
pushl
faddl
inc
icebp
add
pop
fists
les
sub
jg
mov
mov
ret
push
xchg
inc
xor
std
sbb
or
and
pop
mov
das
insl
dec
les
je
rcll
mov
test
mov
insl
icebp
lock
data16
das
cld
mov
pop
dec
popa
dec
and
subl
data16
jge
sub
sbb
add
xchg
repnz
iret
mov
das
jb
jecxz
or
fsts
mov
loopne
mov
cltd
ljmp
xor
addr16
xchg
lods
mov
test
aaa
dec
scas
repz
popf
push
fimuls
in
sub
cli
inc
pop
lret
inc
cmp
out
mov
pop
ljmp
mov
lea
popa
xor
xor
fdivl
pop
mov
fsubs
cmpsl
fsqrt
mov
adcb
aaa
cld
fnstsw
mov
push
sub
loopne
int
pop
push
sbb
fcomps
sbb
ret
sbb
popf
xlat
lret
inc
push
dec
fsubrs
jne
add
or
sub
imul
dec
mov
scas
or
and
mov
xlat
daa
in
cli
pop
je
dec
cmp
mov
rclb
addr16
loop
and
xchg
mov
inc
aas
insb
mov
xchg
iret
or
xor
mov
in
inc
popa
cmp
pop
scas
inc
push
adc
jnp
jecxz
mov
push
inc
mov
push
mov
fnstenv
dec
into
fwait
dec
inc
data16
in
ja
cmp
pop
inc
push
jl
ret
rcr
inc
push
nop
push
sbb
pop
cs
or
mov
add
pop
cmpsb
test
mov
je
add
sbb
adc
sub
push
movsl
test
sbb
jp
jl
popl
stos
jo
adc
inc
sbb
mov
jp
hlt
aad
sub
xor
dec
stos
fbld
adc
insb
repnz
ljmp
ja
jge
mov
add
push
add
jmp
jl
xchg
dec
fabs
xchg
rcr
push
cmc
push
into
sbb
stc
push
and
jo
fstpl
sub
cmpsl
subb
fdivp
xchg
pop
int3
mov
xor
fs
shll
ja
bnd
add
ss
shrb
ficompl
or
push
neg
jne
jnp
add
pop
incb
mov
test
movsl
sbb
fdivl
aas
cli
rorb
jg
sbb
repnz
repnz
jp
movsl
insb
xchg
out
iret
mov
testl
outsl
filds
push
adc
xchg
int
into
sub
movsl
dec
js
cli
push
stc
add
psllw
push
sbb
push
dec
outsb
fwait
aam
test
repnz
lea
scas
pop
pop
add
bnd
dec
adc
lret
movsb
cmp
and
test
dec
mov
shrl
pusha
sbb
add
loopne
and
or
insl
dec
cmpsb
sub
movsb
mov
loopne
bound
and
xchg
fmull
gs
push
inc
in
mov
jno
es
jns
fnstcw
lcall
mov
push
sbb
jb
notb
jne
xchg
xorl
imul
mov
ret
dec
icebp
imul
or
mov
and
outsl
nop
jg
ss
xchg
cwtl
inc
icebp
sub
pop
cmp
mov
sbb
jbe
inc
lahf
int3
testl
enter
rcrl
in
jle
dec
or
test
fisttpll
jae
fcompl
inc
dec
jno
jae
mov
push
cli
pop
mov
mov
sbb
pop
repnz
lock
rorl
mov
ds
mov
imul
xchg
jbe
pop
and
insb
shll
daa
sti
es
jne
adc
fcmovbe
mov
adc
add
xchg
sarl
pop
adc
outsb
stos
imul
aad
lods
sbb
push
sbb
and
adc
mov
or
call
xor
or
sahf
xor
sbb
pop
cwtl
sbb
ret
or
push
sbb
cmp
xor
jnp
int3
mov
pop
jecxz
cwtl
subb
mov
push
shrl
in
and
pop
aas
and
mulb
xor
popf
and
nop
lods
enter
das
mov
jno
xchg
lock
sub
dec
int3
jle
repnz
and
mov
xor
push
lret
mov
or
data16
leave
add
enter
and
inc
das
shl
rorl
in
out
xor
sahf
adc
xchg
mov
push
lea
shrb
cmpsl
fcos
into
xor
and
xchg
xor
scas
and
pop
mov
sub
fcmove
shll
gs
stos
pop
int
into
cld
scas
mov
push
imul
pop
or
scas
sub
cli
add
sub
sub
xor
xor
cmp
sub
mov
sub
in
mov
pop
xlat
add
xchg
gs
sbb
mov
xor
rcll
xor
icebp
cmp
fdecstp
cmpsb
xchg
mov
subb
icebp
inc
pop
dec
lahf
mov
mov
sub
inc
es
or
jmp
sahf
mov
xor
and
or
icebp
in
dec
aaa
faddl
push
lcall
aas
inc
stos
inc
cmp
push
fs
adc
scas
out
mov
in
cmc
sbb
idivb
mov
sub
dec
fiadds
sbbb
hlt
test
into
movsl
xor
fucomi
fstp
arpl
cmp
int
push
mov
ret
xchg
pop
or
cmc
cltd
scas
stos
cmc
imul
adc
sub
insl
popf
xchg
xchg
fwait
pop
in
lock
test
ds
push
addl
out
repz
out
mov
cmp
addb
repnz
int
sub
push
out
addr16
xor
push
push
mov
mov
inc
mov
ret
in
loope
push
and
movl
iret
mov
in
call
or
out
push
outsl
lds
in
stos
jne
pop
and
inc
cmp
jge
mov
fmuls
shlb
inc
or
fstps
pop
jmp
lea
pop
jl
dec
add
enter
mov
jp
mov
jge
test
xchg
fcmove
cwtl
mov
cli
or
or
hlt
in
add
stos
jg
xor
jl
xor
pop
in
mov
pop
out
pop
rclb
sbb
cmpb
jecxz
lds
pop
mov
xorl
jl
movsb
jo
pop
in
push
sub
mov
lret
movsl
mov
push
std
iret
mov
pop
lods
mov
test
pop
stos
or
xchg
out
add
mov
or
mov
lods
test
mov
movsb
push
adc
scas
loope
fwait
xchg
pop
cs
jle
sahf
push
outsb
rcrl
cmc
push
lcall
mov
lods
pop
out
fcmovu
and
aad
xor
push
addr16
orl
mov
loopne
xor
xor
and
std
inc
jmp
lock
jg
push
aas
bound
ffreep
seta
pop
add
mov
or
insl
xchg
dec
add
adc
lods
subb
xchg
sub
and
stos
iret
fldcw
sbb
xor
leave
ficompl
in
stc
imul
push
mov
imul
fcomp
fldt
iret
ds
jp
test
jnp
out
cmp
cmpsl
sbb
jle
mov
push
push
jl
rclb
xor
mov
bound
dec
mov
shl
jbe
daa
jnp
add
lods
shrl
loopne
dec
adc
insl
xor
jle
push
push
adc
sub
jne
fisubrl
fwait
jne
mov
mov
mov
and
repz
movsb
adc
test
scas
and
mov
mull
dec
xor
jp
jg
inc
mov
call
test
dec
scas
inc
stos
ds
inc
push
popa
jb
jg
xchg
mov
xor
js
shr
xchg
cmp
pop
rol
sbb
add
lret
or
push
ljmp
or
and
ljmp
and
cld
adc
xor
mov
stc
pop
inc
xchg
sbb
sbb
and
leave
xchg
arpl
std
jno
mov
jl
dec
popf
je
jns
test
mov
outsl
xchg
push
or
in
mov
iret
leave
or
mov
and
ds
jns
popa
lret
test
sbb
psubq
xchg
out
pop
idivl
mov
push
stc
or
xlat
adc
xor
pushf
adc
pop
std
sbb
and
fsubrs
cmpsl
daa
into
cmpsl
stos
dec
xchg
lock
push
lods
xchg
cmp
imul
xchg
push
aaa
jge
mov
je
cwtl
xor
adc
in
xor
jns
jns
push
rolb
mov
cmp
jle
loope
fsubr
add
push
pop
aad
add
sbb
xor
sahf
fnstsw
popf
add
repz
lret
and
mov
fwait
cli
imul
stc
jle
dec
test
inc
sahf
mov
push
jns
lret
insb
cmp
push
mov
or
repz
imull
addb
js
fimull
aad
loop
stos
or
pop
shlb
adc
das
pop
loop
gs
pop
jl
mov
test
and
shll
sarl
push
inc
adc
adc
rclb
mov
xor
or
cmp
inc
mov
add
dec
dec
stos
out
movsb
cmp
jb
jp
call
aad
pop
mov
adc
push
arpl
mov
push
dec
xchg
jecxz
xor
inc
cld
pop
into
popf
mov
and
orb
fdivp
adc
insb
dec
cmp
push
movsl
inc
mov
cmp
cmpsb
jg
aam
test
das
xor
movsl
dec
jl
out
in
iret
inc
jbe,pt
add
enter
inc
dec
imulb
sbb
lea
fwait
push
xor
adc
xchg
out
or
or
arpl
add
jo
add
ret
scas
xchg
repz
ret
xor
fisubrl
mov
mov
jp
dec
pop
stos
dec
in
mov
repnz
xchg
sbb
sub
les
jg
popf
das
push
mov
push
cmpsl
jnp
mov
sbb
push
movsl
cs
fsubrl
jbe
rcrl
in
lret
andb
cmpsl
addr16
adc
mov
push
jo
imul
outsb
scas
push
pop
ret
pop
push
aam
repnz
leave
mov
add
imul
xor
push
xor
mov
mov
fs
xchg
icebp
enter
filds
sahf
nop
stos
xor
lret
pop
jp
cmp
shlb
and
je
and
jno
mull
cld
outsb
add
test
mov
sbb
je
push
and
aas
les
cmc
jecxz
jl
in
rorb
add
sbb
roll
scas
clc
js
jbe
sub
popa
push
repz
dec
out
push
and
and
push
cwtl
out
out
or
inc
inc
jle
inc
xor
popf
xchg
in
mul
lret
mov
xchg
les
lret
mov
fs
pusha
dec
sbb
sub
leave
enter
push
jno
out
sub
mov
dec
lds
out
jne
leave
mov
lods
popf
stos
xor
imul
pop
mov
lret
pusha
hlt
frstor
lock
cmp
pop
lods
pop
mov
or
idiv
and
or
test
sahf
mov
in
add
mov
xchg
cmp
mov
cmc
movsl
add
stos
jmp
push
cmovbe
ret
sbb
xchg
or
sbb
pusha
and
jne
cmp
movsl
xlat
xchg
xor
cli
scas
aad
adc
inc
inc
jmp
cmp
or
lods
and
mov
sbb
inc
xor
xlat
pop
adc
fisttpl
sahf
std
pushf
loopne
mov
xchg
lret
sbb
push
insb
sbb
leave
xchg
sub
aaa
mov
jg
repz
lret
mov
cli
inc
or
cmc
fcoms
push
adc
rcrl
mov
add
or
ss
inc
push
idivl
popf
data16
and
int3
push
out
subb
cmc
or
cld
mov
xchg
outsb
mov
rorb
aas
aaa
es
add
add
faddl
fwait
nop
mov
arpl
mov
mov
ret
add
fsubrl
mov
dec
into
lea
rcr
adc
dec
sbb
add
hlt
pop
dec
dec
lods
nop
jle
enter
push
imul
dec
adc
pop
adc
jg
dec
mov
and
out
xchg
or
dec
fcmovu
xchg
fbld
fucomi
mov
fldenv
pop
std
mov
test
pop
in
sub
int3
hlt
pusha
cmpsb
out
lods
dec
pushf
mov
add
pushf
out
xchg
out
dec
cmp
std
push
sarb
loop
das
addr16
outsl
mov
push
mov
adc
ret
gs
int
jns
mov
mov
neg
sub
scas
loopew
hlt
and
adcl
jmp
and
cmc
pop
cmp
int
mov
lds
fcomp
sbb
mov
push
jecxz
mov
cmp
clts
sbb
arpl
addr16
sbbl
mov
inc
mov
shlb
sbb
repnz
and
insb
gs
jp
mov
outsb
cmpsl
ret
hlt
lods
inc
les
pop
mov
ljmp
adc
push
call
ljmp
lds
movsb
cmc
incl
mov
fisttps
ja
repnz
icebp
mov
rclb
loope
ror
push
test
push
scas
sbb
stos
jl
ja
jbe
shlb
pop
sbb
inc
dec
and
push
shlb
add
xchg
xchg
cmc
fldl
jmp
mov
sahf
push
scas
add
andl
push
push
dec
fwait
mov
scas
sub
pop
cli
loop
aas
call
push
fsubr
js
lods
les
push
shlb
cmp
outsl
int3
lds
jae
xor
cmp
cmpsb
jmp
mov
pop
jo
jle
bound
jnp
adc
pop
mov
fsubl
lcall
mov
aad
adc
shl
add
xorl
fsubl
loope
dec
mov
xor
ds
enter
sub
adc
testl
lahf
add
or
dec
fs
popf
dec
insl
xor
cmp
cmp
xor
or
xchg
cltd
int3
sub
jns
addr16
jae
int
jge
fucom
popf
enter
lahf
std
push
cmpsb
aaa
mov
ja
ret
lods
sarl
push
testb
and
in
or
push
cmp
fwait
in
bound
outsl
xor
mov
loop
lock
popa
shlb
xor
fistpll
mov
jg
sub
or
xor
into
push
add
pop
gs
dec
xchg
daa
pushf
movsl
or
mov
in
fwait
es
and
dec
daa
lods
cltd
out
add
mov
test
fsubrl
icebp
mov
mov
jno
gs
add
aad
dec
fwait
and
adc
xor
inc
fwait
mov
xor
cmp
cmpsl
adc
xchg
setno
xor
imul
and
and
out
jl
dec
cli
out
enter
adc
mov
xlat
jo
out
icebp
cltd
pop
xchg
scas
cmpsb
inc
mov
adc
mov
pop
ljmp
jge
rclb
fcoms
mov
in
pusha
mov
mov
in
xchg
in
aaa
pop
pushf
fs
shll
int
cltd
jno
mov
sbb
cmp
mov
orl
xor
add
test
inc
jns
mov
fisubrl
inc
test
test
data16
push
mov
fadds
mov
inc
mov
call
aam
add
scas
cwtl
ja
aad
and
sub
or
cmp
sbb
sub
add
lret
sub
xchg
cmpsb
push
add
lea
sbb
mov
mov
push
xchg
or
pop
lahf
aad
ret
sarl
sbb
push
push
mov
lret
scas
mov
cmpsb
lods
add
and
mov
jno
adc
sbb
sub
scas
ljmp
jp
xor
mov
paddusb
fimuls
jle
mov
dec
cs
sbb
push
mov
stos
gs
push
ljmp
hlt
jns
xchg
lret
inc
push
and
jge
rcll
add
cs
dec
rcll
adc
xchg
pop
pop
dec
mov
rolb
gs
lret
pop
inc
mov
scas
pop
add
out
xchg
push
mov
aam
mov
push
jmp
or
sbb
arpl
jg
dec
test
pop
jge
icebp
fmul
pop
xadd
push
lea
mov
ficomps
js
cmc
xor
mov
fiaddl
dec
or
inc
push
mov
stos
aaa
fisttpll
xor
pop
rorb
jp
cmp
cmp
adc
jae
inc
lods
gs
das
or
jnp
mov
adc
nop
test
or
jg
paddsb
pop
sbb
inc
push
fs
jbe
enter
cltd
orb
ljmp
jo
out
shll
or
push
add
nop
add
cmp
out
aad
aam
mov
mov
shlb
insb
leave
cld
push
sub
int3
sub
imul
sarb
adc
es
adc
dec
mov
dec
xorb
mov
or
cwtl
xor
dec
mov
fidivl
jge
shll
test
inc
jp
out
scas
fcomip
mov
mov
lods
push
jecxz
shll
sarl
add
mov
fsub
or
inc
shlb
lret
jo
xorb
mov
dec
stos
in
gs
cmp
inc
jns,pt
imul
mov
lock
imul
xor
fidivs
mov
cmp
rorl
or
pop
fs
test
adc
outsb
pop
sub
into
mov
push
outsl
dec
addr16
mov
pop
jl
scas
aaa
leave
xor
mov
aas
xchg
mov
add
int3
cwtl
cmpsl
cmp
in
push
popf
je
out
cmp
push
fldl
or
addr16
fistpll
loopne
xchg
jp
movl
sub
and
mov
popa
das
push
in
cwtl
mov
xor
movsb
mov
stc
pop
add
popf
movsl
in
leave
and
mov
pop
cmp
cmc
movl
jb
bound
ret
and
lea
sub
fisttpl
in
or
popf
pusha
sbb
jbe
divl
mov
repnz
aad
jmp
cwtl
jb
out
stc
dec
scas
cli
pop
inc
xchg
mov
push
pop
ljmp
test
cmp
rcrb
add
jl
push
mov
or
out
in
jecxz
les
dec
ja
inc
shl
adc
ss
lret
mov
mov
aas
enter
adc
jae
test
mov
das
loopne
mov
jno
arpl
and
pop
mov
fcompl
icebp
leave
repnz
mov
inc
sub
popa
insb
dec
cs
jbe
lea
xchg
dec
lods
incb
mov
push
das
xchg
movsl
popf
add
div
adc
jle
sbb
or
mov
das
dec
fdivl
and
push
shrl
jle
jecxz
mov
lods
add
mov
les
filds
mov
cmpsl
mov
dec
ret
das
mov
jle
push
sar
dec
sbb
insl
pop
jecxz
lret
out
rcrb
stc
lods
push
in
adc
mov
cmpsb
lock
xchg
mov
add
roll
decl
fdivs
pop
cltd
fisubs
lea
stos
mov
or
adc
jns
mov
je
xor
rcl
cmp
cli
jbe
inc
push
push
rolb
xchg
ss
mov
jbe
dec
mov
in
ret
xchg
or
lds
mov
jg
dec
aam
out
jmp
xlat
bound
popf
call
in
stos
pop
lods
xor
and
xchg
mov
jne
out
adc
push
pop
mov
icebp
xchg
fimuls
pushf
push
jp
mov
neg
push
push
xor
xor
repnz
pop
mov
jg
xchg
jno
cmp
fwait
cmp
push
sahf
lret
jnp
add
cmp
dec
xor
sti
jae
cs
xchg
imul
adc
int3
pop
sbb
xor
test
data16
pop
insb
jae
leave
loope
mov
mov
inc
sbb
popf
inc
shll
adc
cmp
fwait
je
mov
imul
psubd
aam
pop
and
and
adc
movsb
mov
mov
int3
adc
push
test
mov
jne
cs
xor
and
jmp
daa
dec
in
push
push
sbb
jno
pusha
pop
jno
outsb
sub
adc
dec
sub
fdivr
mov
scas
push
scas
cli
fdivl
cmc
adc
pop
xchg
test
xchg
dec
jae
add
ljmp
inc
int
lock
stos
push
push
or
ja
mov
mov
lock
xchg
and
ss
push
outsl
pop
sub
in
jnp
mov
sbb
add
leave
or
daa
jecxz
inc
cmpsb
dec
lcall
and
xchg
cmpsl
jns
in
lods
add
test
adc
shrb
push
int3
imul
mov
xchg
mov
test
in
roll
mov
mov
inc
mov
shll
xor
push
mov
test
pop
sub
test
cmp
mov
ret
pop
cmp
test
je
in
out
ficomps
lea
mov
dec
cmp
std
xor
jb
fcomps
leave
hlt
andb
pop
pop
push
or
repnz
dec
iret
les
jae
inc
cli
jnp
mov
adc
jecxz
sbb
xchg
push
xchg
jns
ret
dec
and
xchg
sbb
sarl
mov
push
xchg
mov
fistpll
and
mov
je
sbb
mov
in
lcall
mull
nop
push
mov
loop
jmp
sbb
lods
push
lahf
lea
adc
sbb
push
jmp
xchg
bound
mov
and
mov
adcl
out
push
and
xor
mov
shlb
add
mov
dec
adc
in
popa
roll
aaa
pop
mov
add
adc
mov
fbstp
testl
orb
jno
mov
or
dec
or
les
imul
andb
pop
xchg
repz
jl
jae
push
pop
mov
pop
sbb
adc
dec
mov
cmpl
les
or
sub
aaa
out
or
xor
jne
and
add
or
push
jns
dec
clc
xor
stos
xchg
scas
sub
outsb
xor
xor
shl
jmp
add
hlt
shll
aaa
xchg
pop
pushf
dec
mov
or
adc
adc
subl
call
mov
cli
insb
shr
dec
cltd
lods
adc
out
arpl
in
mov
pop
gs
adc
pop
push
testb
sbb
cmpsl
sub
imul
and
out
sbb
gs
cmpsb
testl
push
les
jb
jge
stc
lods
dec
xor
mov
mov
les
orb
ljmp
mov
and
imulb
push
adc
popa
cs
mov
cmp
sbb
mov
mov
int3
pminub
mov
lods
roll
xor
adc
or
inc
in
and
dec
pop
out
pusha
mov
inc
faddl
dec
je
dec
inc
in
call
dec
imul
dec
pop
pop
mov
adc
sbb
bswap
jecxz
adc
inc
jb
test
pop
insl
lock
fld
in
test
dec
enter
xlat
lcall
sarl
xlat
mov
idivb
sbb
mov
popa
addr16
xchg
sti
imul
adc
xorb
xchg
mov
sahf
jb
pop
ss
add
je
insl
push
xchg
adcb
arpl
mov
out
push
std
pop
and
wbinvd
cld
mov
sbb
ret
adc
out
adcl
in
push
in
enter
shl
jmp
in
pop
movsl
rorb
sub
xorl
xor
lods
xchg
and
sub
fcoms
adc
fcoml
shll
mov
pop
divl
psllw
testl
pop
shll
ljmp
push
scas
sbbb
fadds
mov
cmp
sub
mov
or
lcall
dec
ret
mov
jg
test
lods
and
add
or
iret
test
add
movsb
mov
jg
mov
test
subl
mov
shll
inc
scas
jno
fwait
gs
ror
int3
fists
cmpsl
sub
imul
dec
fwait
addl
adc
mov
sub
leave
repz
arpl
les
rolb
and
jnp
or
sub
sub
push
and
cmc
sub
inc
lcall
rorb
mov
movsl
sahf
leave
mov
and
ja
mov
inc
sub
xor
test
mov
outsl
iret
jge
fldt
fnstcw
adc
jne
pop
add
out
jle
test
xor
icebp
imul
leave
shrl
lret
stos
fstl
icebp
push
scas
bound
xor
in
popa
hlt
mov
mov
test
mov
bound
dec
call
pop
pushf
les
into
shlb
out
popf
out
iret
mov
inc
int
sub
mov
push
push
lock
sbb
xor
daa
dec
push
xchg
xchg
dec
cmp
nop
sbb
scas
movsl
out
adc
xchg
jle
loope
mov
cmp
fsubrl
pop
out
inc
aaa
dec
jl
inc
pop
push
jge
add
dec
xchg
int
data16
sbb
cmp
add
loopne
xchg
int3
jb
sbb
push
fwait
push
xor
orb
jb
jmp
xorl
push
int
lahf
imul
mov
cltd
pop
mov
dec
idivl
and
pop
jae
out
iret
cmp
and
bound
push
in
mov
call
jae
mov
mov
sbb
jge
addr16
xchg
outsl
test
and
or
ret
hlt
leave
mov
dec
jp
int3
sbb
clc
sbb
push
mov
xor
lahf
dec
lea
sub
sbb
mov
popa
addr16
notb
out
push
es
adc
sub
xchg
ljmp
imul
loop
lock
rorl
fcompl
xor
in
dec
setle
mov
and
fs
mov
push
mov
push
pop
xor
mov
js
adc
ljmp
cmp
push
lret
jae
cmp
xor
pop
iret
js
daa
bound
test
push
movsb
pop
mov
hlt
adc
negb
lret
fwait
mov
sbb
sub
xor
mov
push
inc
je
add
dec
insl
or
sbb
dec
fisttps
adc
sub
shlb
cmpsb
jb
iret
xor
insl
out
jne
std
psubd
data16
testb
xchg
aaa
sahf
sbb
in
xbegin
int
jp
dec
enter
popa
cld
mov
push
dec
xchg
and
xor
jmp
xchg
xchg
jecxz
push
inc
jbe
dec
push
dec
fs
test
sar
jmp
std
ss
pop
shll
inc
dec
cmpsb
push
out
movsl
jmp
sbb
rclb
test
dec
lods
add
enter
pop
dec
lcall
nop
dec
shl
cltd
pop
mov
pop
add
enter
inc
pushf
pushf
dec
pop
cmp
xor
loop
enter
push
dec
sbb
mov
aad
nop
xchg
push
sbb
add
cmp
in
cmpsb
rcrl
loop
xchg
cmp
xchg
push
movsl
loop
jno
shlb
cld
or
out
push
pop
iret
push
jp
aas
push
out
imul
setne
scas
mov
inc
jae
push
sbb
pop
int
icebp
clc
dec
into
jl
in
mov
jle
xchg
mov
shlb
pop
mov
mov
popf
inc
push
es
adc
pusha
aad
push
dec
sbb
mov
popa
pop
ss
mov
xor
pusha
popa
lahf
jecxz
pop
sbb
hlt
subb
aaa
dec
or
std
lods
mov
pop
push
rorl
test
les
pusha
shrl
orb
sahf
movl
jb
shrl
or
dec
insl
or
scas
pop
dec
mov
sub
mov
xlat
popa
loopne
call
loopne
jl
sbb
xchg
into
and
mov
and
daa
push
dec
push
mov
mov
out
and
int
mov
fists
pop
dec
mov
ss
in
add
sub
sbbl
shlb
lahf
mov
addr16
ds
inc
xor
push
xor
int
push
stos
cmp
pop
lcall
xchg
push
ss
fsubrs
push
cmpl
sub
mov
popa
push
iret
mov
push
pop
iret
dec
inc
sub
pop
mov
scas
repnz
lods
leave
sbb
out
and
loope
push
pop
xor
test
ljmp
push
hlt
movsb
push
sub
pop
into
xchg
loopne
jmp
std
mov
pop
adc
jg
pop
mov
ficoml
bsr
sbb
lds
xor
test
test
cmp
fimuls
xchg
xchg
arpl
or
inc
sbb
shlb
mov
lods
mov
aaa
cmp
popa
push
mov
out
xor
xchg
cmp
pusha
mov
repnz
ss
mov
pop
jmp
inc
sar
pop
sub
add
or
sub
orb
lods
in
push
cmp
rorb
adc
enter
ja
xor
jecxz
jns
mov
push
push
iret
daa
nop
jno
rolb
decl
cmp
nop
scas
jp
and
jnp
mov
mov
jne
sub
je
fiadds
rcll
push
icebp
dec
das
cmp
jae
mov
cmpsb
icebp
jg
mov
js
aas
repz
js
pop
push
mov
xchg
lcall
arpl
or
int
add
push
or
mov
cmp
jle
xchg
fwait
mov
sub
mov
push
in
push
in
fisttpll
push
mov
pop
movsb
lods
cld
mov
enter
lea
jg
push
int
shlb
xor
stc
add
pushf
inc
jns
dec
push
inc
gs
dec
addr16
insl
out
in
pop
inc
jp
out
test
add
jne
aad
ja
adc
mov
pop
fimuls
xchg
mov
movsb
leave
jo
sar
pop
js
mov
add
lock
loope
cmp
incb
jb
xchg
pop
std
push
in
popf
shlb
aam
outsb
loop
sbb
pop
arpl
mov
mov
adc
or
jl
push
dec
sbb
xlat
mov
add
jle
imul
dec
xor
inc
and
cmp
sub
xchg
jo
cmpsb
push
jnp
lcall
inc
orb
jb
pop
iret
int3
mov
adc
out
add
push
pushf
and
andb
fwait
xor
add
adc
inc
xor
xchg
repz
repz
inc
dec
sub
adc
jb
aas
inc
push
jbe
dec
adc
scas
xor
cltd
mov
xor
cmp
xchg
lcall
or
xor
icebp
or
mov
add
sti
sub
jge
or
lret
call
int
outsb
imul
test
imul
sub
ret
cmp
fisubrl
aad
and
pushf
cld
int
addr16
loope
xchg
push
mov
outsl
add
rorb
repz
rorl
or
mov
push
lds
stos
loope
lods
pop
lcall
push
in
shld
int3
xor
ljmp
dec
cmpl
and
or
gs
stos
cmp
xlat
dec
mov
mov
sbb
lcall
and
data16
aam
lds
por
jg
arpl
outsl
mov
mov
mov
out
xchg
incl
outsb
lods
push
and
out
icebp
add
cmp
test
pop
push
or
testl
sub
or
and
sub
cmc
lahf
pop
adc
sbb
subb
push
ret
fiadds
std
sub
popf
cmp
outsb
jg
cmc
xor
jge
sub
and
push
inc
or
cs
sub
mov
mov
aas
cmp
js
mov
lds
test
lret
inc
aad
add
pop
and
mov
mov
pop
loope
mov
lahf
iret
xchg
xlat
jecxz
or
and
mov
jle
xor
mov
movsb
dec
lock
cmpsb
mov
repz
cmp
inc
fiaddl
mov
cltd
mov
lret
xor
lret
sbb
lcallw
mov
push
cli
cmp
repnz
shrl
jle
mov
in
popf
cli
test
addr16
out
lock
fcmove
add
mov
sub
sbb
pop
arpl
pushf
ret
push
movsl
test
fstpl
fs
loop
push
push
mov
into
inc
jmp
push
icebp
and
and
js
insl
bnd
add
pop
iret
mov
pusha
xchg
cmp
xchg
stc
xchg
xchg
mov
inc
ljmp
mov
out
imul
push
xor
and
call
outsb
nop
mov
jmp
xchg
rolb
leave
lock
aad
xor
add
scas
sbb
inc
loopne
jecxz
mov
cld
push
cltd
cmp
sbbb
pop
jp
mov
out
or
shrl
call
sbb
push
pop
mov
pop
xchg
popa
iret
cmpsb
insb
imul
jnp
repz
mov
lods
clc
jmp
cltd
mov
icebp
jo
push
aam
and
cmpsl
stos
clc
outsb
subl
lods
sbb
stc
pop
aam
sbb
adc
icebp
jnp
fidivs
mov
pop
in
les
mov
push
dec
iret
enter
mov
test
mov
pop
or
lds
aam
iret
cmp
xor
shlb
lahf
loopne
push
push
jge
mov
and
flds
out
adc
mov
mov
xor
int3
sbb
mov
arpl
cwtl
dec
scas
dec
mov
je
dec
pminsw
cmp
mov
cmp
mov
aas
sub
mov
fwait
xor
mov
aas
jmp
scas
mov
cli
mov
cmpsl
jns
es
xchg
movsb
pop
push
pop
add
cltd
hlt
pop
into
subl
int
fisubrl
or
in
pop
mov
cmpsl
jb
cltd
jge
cmc
xchg
adc
and
iret
in
jg
addr16
sub
shlb
repz
pop
rcrl
fidivs
mov
in
add
incl
lcall
pop
or
je
inc
or
mov
dec
mov
outsb
sub
pop
push
mov
test
pop
and
adc
fsubl
inc
jne
daa
rcl
push
loope
popf
stos
pushf
aad
sbb
mov
addr16
xlat
mov
lret
and
jge
mov
and
pop
push
test
sub
push
enter
aaa
fnsave
shlb
fstpt
jg
fmuls
pop
nop
sbb
lcall
xchg
sbb
cmp
xchg
fistl
cwtl
cmp
xchg
je
sar
outsl
es
imul
dec
inc
je
dec
scas
lret
mov
pushf
loope
fwait
cmpsl
mov
loopne
scas
int
push
mov
es
ret
ja
or
test
sbbb
adc
loop
push
shl
add
adc
inc
pushf
loopne
sub
xor
xor
popf
cli
loop
jge
lods
in
or
es
and
push
nop
dec
inc
lret
cmc
mov
dec
test
out
popa
xchg
das
lock
xor
sti
es
push
sbb
and
fistpll
mov
enter
dec
loopne
sub
mov
fldt
fbld
hlt
push
pop
mov
jge
dec
std
add
add
jno
mov
cmpsb
fimuls
jp
add
outsl
adc
pop
xchg
scas
push
pop
fisubrl
or
pop
pop
sbb
rorb
or
test
repnz
data16
cmp
mov
pop
inc
xchg
neg
jb
add
jl
ja
daa
addr16
cmpsb
mov
lea
push
inc
mov
dec
jae
test
mov
cmp
pop
sub
push
xchg
push
int3
mov
es
sti
jns
les
mov
ljmp
sub
cmp
mov
push
cltd
cmpsl
mov
add
jmp
or
imul
jne
ds
test
iret
cli
imul
sbb
divb
pop
xor
fildll
and
or
push
pop
and
pop
cmp
test
cmpl
pop
xchg
xchg
push
clc
inc
dec
xchg
hlt
inc
inc
aad
sub
mov
repz
out
fcoml
cmp
subb
xor
sbb
jg
movsb
sbb
push
mov
lahf
cmp
add
fwait
ror
or
sbbb
cmpsb
movsb
dec
movsl
fcomps
sti
push
out
cwtl
lcall
lea
bound
xchg
cmp
sub
mov
mov
jle
push
mov
lock
stos
or
cmpsl
in
ljmp
pop
push
mov
mov
aad
iret
arpl
std
enter
mov
dec
inc
out
pop
call
mov
or
push
scas
mov
pop
es
dec
shl
andb
ret
into
les
pop
pop
loope
cld
jo
insl
inc
xchg
dec
jno
dec
xor
dec
hlt
sub
mov
pop
cmp
insb
adc
adc
pop
xchg
pop
cwtl
jecxz
stos
insl
andl
das
aaa
aad
addr16
dec
sbb
fldenv
gs
add
arpl
data16
cmpb
out
cmp
sub
mov
pop
cs
lds
mov
mov
push
aas
push
push
mov
mov
test
and
or
push
addb
aaa
int
jecxz
ficomps
pop
ljmp
xchg
xchg
push
aas
dec
cmc
add
sbb
dec
aaa
inc
cmp
or
push
data16
lock
xchg
xchg
subl
mov
jae
sbb
lret
cmp
test
test
mov
push
cmpl
jnp
push
insb
adc
add
popf
pop
lcall
mov
or
ja
mov
pop
ret
repnz
pop
push
or
mov
sti
addr16
repz
mov
sub
cmp
inc
aaa
cmp
test
loop
and
or
push
mov
mov
xchg
fnstsw
pop
hlt
pop
std
sub
add
cwtl
into
push
mov
add
jl
adc
inc
pushf
and
sub
movb
insb
fninit
jg
pop
or
stos
adc
in
loope
loope
out
xchg
xor
push
cmpsb
fwait
hlt
xchg
and
mov
cwtl
jle
mov
push
in
push
push
and
or
pusha
call
cmp
stc
push
clc
or
or
xor
and
pop
pop
xlat
popf
fwait
ljmp
pop
movsl
mov
int
xlat
popa
loopne
out
out
adc
pop
dec
das
xor
movsb
pop
or
mov
dec
mov
sahf
mov
movsl
cmpsl
pusha
loop
adc
stc
in
enter
cmp
jnp
jle
mov
dec
sbb
sub
push
mov
adc
pushf
jp
push
test
fidivs
ljmp
and
jecxz
jmp
frstor
in
mov
and
adc
push
sub
lock
and
sbb
mov
les
scas
mov
fcompl
jno
sbb
dec
movsl
mov
push
jnp
and
jbe
sbb
sub
insl
lcall
shrb
jne
sbb
movl
lods
fucom
iret
pop
jmp
dec
lret
lds
jle
idivl
mov
dec
gs
jp
lea
dec
lret
cltd
xor
and
shrb
mov
pushf
mov
mov
cmp
inc
xchg
push
hlt
inc
fld
rorl
rorb
add
push
mov
adc
int
mov
inc
ret
movsl
jnp
mov
cmp
fucomp
rcll
jns
add
jnp
sbb
call
mov
mov
arpl
adc
adc
idivb
aam
insb
pushf
ds
cmp
loop
in
aad
jmp
lods
xchg
dec
fsubrp
mov
pop
out
dec
mov
mov
ljmp
and
cmp
dec
sbb
pop
jns
mov
sti
test
ljmp
jae
fnstenv
adc
dec
sbb
dec
loopne
outsb
mov
adc
xor
aam
test
xchg
fs
loope
leave
cmp
sub
dec
arpl
pop
jb
cmp
in
jge
jb
mov
mov
rcl
dec
clc
xchg
je
or
in
test
push
sbb
pop
adc
jecxz
sbb
stos
or
xor
or
ret
icebp
bound
aaa
add
mov
loop
cltd
mov
xchg
fstps
add
sub
lret
adc
xchg
xchg
xchg
int
jne
pushf
repz
xchg
mov
sub
call
inc
scas
pop
mov
mov
les
loope
sub
sarl
lock
push
sti
int3
dec
orb
mov
xchg
dec
mov
lods
test
and
scas
mov
inc
repnz
inc
cmc
inc
add
lock
and
pop
outsl
mov
jg
jo
out
xor
and
xor
or
int
push
pop
hlt
jnp
inc
repz
daa
xchg
pop
pop
add
mov
sub
test
xchg
mov
imul
sahf
mov
xorl
xor
and
test
into
cmpsb
pop
mov
scas
dec
mov
sub
or
ret
cwtl
inc
jae
jns
mov
popf
cmc
stos
inc
mov
pop
lret
or
add
fs
jmp
xor
jg
inc
call
test
data16
imul
mov
jnp
in
push
adc
mov
dec
popf
and
sar
cli
addr16
and
jge
je
xorl
adc
adc
ljmp
cld
jne
pushf
lds
pop
xchg
outsl
std
pmulhuw
stos
lea
clc
sub
out
xor
pop
dec
jo
push
lret
imul
gs
scas
sarl
movsl
xor
bts
pop
sub
dec
int
cmp
pushf
std
xchg
cmp
popf
sub
notb
enter
push
pop
clc
adc
mov
pop
mov
in
out
lcall
dec
adc
sahf
add
pop
rep
dec
ret
aad
iret
repz
es
or
imul
in
cs
out
test
js
mov
sub
ficoms
xor
arpl
sub
loop
movsb
xchg
pushf
call
fucomi
push
add
insl
push
xchg
pusha
pop
mov
adc
popf
ret
fcomps
jmp
xchg
rcrl
adc
out
pusha
out
sub
adc
int3
jle
xchg
aas
pop
adc
aas
in
call
mov
inc
jge
pop
dec
pop
frstor
lods
adc
sbb
jmp
nop
lea
or
and
xchg
roll
mov
mov
cmp
dec
movsl
ret
sub
push
fidivrs
xchg
popa
pop
lahf
lds
sub
dec
xor
dec
and
cltd
pop
jb
jno
pop
sti
out
push
pop
sbb
movsb
xlat
mov
into
mov
sbbb
or
in
arpl
shl
lods
mov
cwtl
aad
scas
jl
and
scas
mov
adc
and
shll
sub
lcall
add
fsubp
mov
jnp
lock
jno
sbb
sbb
and
mov
and
inc
dec
repz
add
stos
in
push
dec
pop
cmc
adc
xlat
imul
inc
push
mov
negl
outsl
xchg
inc
repnz
push
scas
jge
jbe
adc
mov
pop
jbe
jns
xor
insl
xlat
jle
sar
int
sbb
rcrl
mov
in
push
mov
cmp
lods
mov
sub
insl
repnz
sub
lds
xorl
movsb
adc
jnp
fbstp
imul
xchg
out
fisubl
pop
inc
and
pop
aaa
sahf
lcall
ja
inc
fsubrl
pop
je
push
out
repnz
xchg
cmp
pushf
mov
stos
xchg
movsl
sahf
out
sub
xor
mov
and
cmp
dec
inc
sub
ss
and
sbb
adc
in
add
mov
jl
add
pop
mov
mov
hlt
addr16
mov
jmp
mov
movsl
into
js
rol
fildll
insl
hlt
das
push
pop
clc
mov
sbb
mov
mov
rcl
cmpsb
dec
push
test
dec
fsubl
mov
scas
dec
sub
repnz
mov
cltd
push
cmp
dec
xor
pop
and
out
sbb
push
inc
aad
shll
lahf
sub
push
push
sbb
mov
jg
test
bswap
inc
out
pop
sub
mov
and
sub
xchg
pop
mov
pop
mov
mov
push
rcr
mov
lahf
mov
mov
rorl
xor
cmpsl
xor
jns
fs
dec
movsb
inc
xchg
mov
push
out
push
cmp
inc
push
pop
je
enter
adc
sahf
sub
dec
add
jmp
cmp
sub
cmpsl
or
adc
jae
je
cwtl
hlt
outsl
pop
out
test
das
cmp
dec
fisubs
or
scas
xchg
sahf
hlt
scas
sub
cltd
sub
repz
fisubl
cwtl
pop
subl
inc
pop
sbb
pop
test
movsl
out
out
dec
or
mov
out
popf
cwtl
hlt
inc
sbb
insb
into
jl
mov
xor
lea
std
lahf
ja
xor
pushf
cmp
out
sbb
fdivl
add
fcos
in
mov
sbb
ja
dec
nop
xorl
and
bound
adc
iretw
pop
jo
aam
and
sahf
pop
in
or
pop
push
inc
jecxz
push
jns
test
orb
sahf
lret
mov
fwait
mov
dec
fisttps
push
lock
xchg
int
add
lret
sahf
or
mov
addr16
fstps
jns
dec
pop
push
push
movsb
mov
fnstsw
cmp
sub
add
je
xchg
mov
lea
jle
test
or
jge
imul
mov
xor
or
clc
mov
cli
dec
call
lods
sti
ds
divb
mov
lods
shlb
push
cmp
lcall
add
icebp
sbb
es
outsb
dec
push
cs
adc
aaa
test
pop
int3
pop
push
loopne
add
lret
ljmp
hlt
sub
push
andl
mov
iret
inc
shl
adc
jmp
cmp
dec
pop
ljmp
inc
pushf
push
out
add
pop
add
cmp
add
jb
cmp
push
scas
out
xchg
insb
adc
pop
xchg
jle
pop
lods
das
pause
xor
pop
fwait
jns
pop
sbb
push
pop
dec
mov
xor
ret
jns
add
xchg
inc
mov
lcall
push
inc
cmp
push
jb
les
xor
cpuid
xchg
add
jo
movsb
mov
mov
cmpsb
repz
int
cs
pop
loope
mov
mov
dec
add
pushf
or
xchg
add
dec
sub
inc
jno
jnp
leave
inc
stos
das
dec
inc
xchg
sub
mov
dec
pushf
cmpl
xchg
in
mov
mov
mov
repz
aas
xchg
dec
or
inc
call
or
sbb
dec
stos
testb
push
pop
lds
mov
xchg
xor
sbb
and
in
sti
mov
adc
dec
aad
jp
gs
sbb
mov
cmc
push
push
int
sysexit
push
cmp
insl
cli
ret
aam
xchg
inc
jnp
in
pop
sarl
push
loopne
cmp
leave
out
fisttpl
sbb
xchg
fstps
out
push
push
xor
sbb
shlb
ret
cmpsl
sub
rolb
push
nop
xor
fists
or
add
xchg
lret
insl
mov
cmp
push
push
insb
lret
rcll
insl
sbbb
mov
xchg
push
test
les
in
mov
iret
push
ja
dec
mov
stc
bound
jae
xchg
nop
xlat
pushl
mov
lods
stos
lcall
pop
outsb
pop
jmp
inc
in
or
sub
ret
cmp
test
adc
and
pop
push
in
ja
push
les
jg
push
inc
push
dec
loopne
mov
pop
daa
fwait
adc
pop
test
hlt
mov
and
jle
push
cltd
dec
lahf
jmp
sahf
or
repz
inc
std
mov
mov
clc
imul
sub
push
rorl
es
fildll
inc
jbe
aas
les
lds
fwait
cmp
arpl
divl
dec
mov
outsl
sbb
or
adc
add
push
mov
out
test
popa
clc
cmp
jae
test
xchg
in
pushw
xor
push
inc
into
jmp
enter
sbb
cmp
jno
and
jae
or
and
push
or
mov
cmp
adc
outsl
hlt
sub
jns
popf
cmp
and
pop
xchg
fdivr
mov
inc
mov
push
jmp
sahf
mov
daa
inc
mov
xchg
xlat
movsl
fcmovnu
dec
fistpll
mov
dec
test
pusha
bound
xor
xchg
out
push
inc
sbb
mov
sub
pushf
mov
mov
test
outsb
lcall
push
pop
mov
pop
gs
repnz
roll
mov
mov
lcall
jge
pop
cld
inc
mov
out
int
mov
imull
scas
lahf
add
jmp
aad
add
mov
mov
faddl
and
push
jmp
or
push
jecxz
lcall
sub
push
test
add
and
add
clc
xchg
popa
push
daa
jae
lret
lds
inc
mov
in
adc
cmp
lods
into
ja
out
cmp
pop
test
add
incb
aaa
mov
test
ret
stc
jge
mov
lcall
and
add
push
adc
pop
mov
mov
pop
mov
sub
jb
or
or
mov
inc
aas
push
daa
hlt
sub
scas
mov
xchg
lret
push
mov
sub
pop
jo
call
lods
or
in
lods
xor
gs
mov
out
mov
pop
iret
mov
movsb
arpl
add
mov
sbbl
adc
fisubs
and
mov
or
rol
and
lahf
gs
ffree
mov
scas
cs
sub
jl
pop
mov
stos
data16
gs
test
mov
cmp
daa
pusha
inc
cmp
inc
or
push
xor
push
es
lret
hlt
add
mov
mov
sbb
fcom
repnz
pushf
in
loopne
rolb
cli
and
bound
test
jb
cmp
int
jns
sbb
sbb
test
and
mov
icebp
push
sub
push
lret
add
mov
rcl
inc
flds
xor
lods
xor
insl
enter
rorb
bound
loop
inc
push
mov
popa
dec
rcl
lods
loop
arpl
aam
or
sbb
fldl
inc
push
test
push
add
push
les
sbb
shlb
imul
mov
gs
adc
add
mov
leave
out
push
mov
push
pop
test
addb
jae
push
push
inc
roll
xchg
and
lret
jecxz
sbb
mov
or
clc
pop
adc
jl
xchg
addr16
cltd
xchg
jl
shlb
xchg
cmp
add
dec
pop
xchg
inc
jle
mov
push
xchg
imul
dec
adc
sbbl
cld
jecxz
mov
scas
notl
cmpl
adc
adc
test
mov
pop
push
push
pop
mov
xchg
mov
and
adc
pop
or
rclb
sbb
sub
sbb
repz
fidivrs
es
insl
repz
mov
adc
outsb
sbb
insl
out
sbb
mov
icebp
push
sar
sbb
shlb
imul
aas
shrb
mov
add
fistpll
daa
orl
jnp
loop
mov
adc
fld1
ljmp
arpl
cs
and
add
mov
add
movsl
jle
je
jmp
mov
imul
pop
stos
add
jmp
pop
sub
outsb
mov
push
inc
sti
xchg
dec
stos
sbb
dec
scas
test
sub
dec
sbb
mov
pop
dec
xchg
cld
or
call
fsubrl
outsb
xchg
test
out
or
adc
xlat
fs
rclb
fsub
das
out
jp
popa
jbe
negb
notl
cmp
stos
jo
push
dec
xchg
pop
in
lods
popa
jmp
inc
mov
add
xor
cmpb
fnsave
lds
or
pusha
push
push
xchg
movsb
fadds
cmp
sbb
mov
jnp
rcll
lahf
or
xorb
out
jp
push
jo
adc
dec
jp
movsb
mov
sarl
out
ret
adc
out
mov
xor
push
dec
inc
cwtl
out
lock
adc
leave
out
imul
frstor
repz
hlt
mov
imul
mov
xorb
sbb
sub
push
mov
in
xchg
xchg
popf
test
stos
jg
test
fs
and
fidivl
sub
mov
scas
lahf
repz
arpl
lea
lret
lret
rolb
ja
cwtl
dec
mov
popf
pop
popf
fcoml
inc
test
insl
jmp
jae
scas
ficompl
mov
sarb
dec
out
cmp
xchg
xchg
mov
arpl
clc
cmp
xchg
xlat
shlb
dec
adc
inc
arpl
push
bound
shl
jl
push
call
inc
pop
sub
lcall
jne
mov
mov
mov
xor
mov
sub
jno
sbb
pop
mov
pop
imul
xor
test
sbb
outsw
test
push
pusha
fidivl
xor
jno
sub
rolb
leave
rorl
fbstp
mov
push
xor
vmlaunch
sar
outsb
pop
outsl
fdivl
inc
mov
pop
cs
ljmp
push
xor
mov
int3
popf
mov
adc
ja
clc
adc
mov
push
mov
divb
jae
stos
lret
sarl
sub
mov
lock
cwtl
repz
call
iret
leave
add
and
daa
push
rorb
loopne
push
mov
aaa
sub
cli
lods
add
jno
dec
das
lret
xor
call
mov
cmpsb
insb
adc
xor
insl
xor
dec
fildl
and
scas
shlb
into
out
cmp
in
jno
clc
inc
ljmp
jle
jmp
popf
xor
dec
mov
scas
loope
andl
dec
je
js
adc
in
lea
xorb
insl
fstps
jnp
cwtl
sbb
call
adc
cmp
iret
repnz
push
add
fbstp
repnz
lds
dec
or
mov
es
push
cmc
xchg
mov
or
or
daa
mov
mov
data16
call
mov
lcall
mov
cmpl
mov
jae
jae
mov
popf
mull
loopne
lret
stos
clc
xchg
xor
icebp
or
add
or
bound
inc
int3
xchg
sbb
inc
enter
push
inc
mov
push
pop
mov
dec
mov
cmp
add
ljmp
or
xor
cmp
lcall
mov
aaa
mov
es
cli
dec
out
fidivl
pop
std
dec
dec
popf
insl
sti
pop
mov
test
aaa
sub
test
xchg
add
scas
mov
addr16
mov
mov
std
mov
add
scas
dec
out
cmpsl
dec
or
dec
adc
jns
int
pop
stc
stos
sarb
out
or
lahf
repnz
fcoml
push
stc
adc
shlb
push
sti
repnz
and
cwtl
push
mov
stc
push
call
es
in
out
push
lcall
or
adc
out
outsb
mov
addr16
shll
xchg
ret
call
add
mov
sbb
or
es
out
push
sub
out
popa
pop
test
pop
inc
insb
push
cmp
in
or
fwait
sbb
into
push
lret
bound
testl
jge
and
lret
hlt
dec
adc
pop
repnz
sbb
bnd
mov
inc
mov
sbb
enter
add
loope
mov
xchg
push
outsb
jb
ja
pop
adc
jecxz
scas
in
arpl
cli
loope
popf
cmp
and
mov
xchg
push
adc
out
sub
iret
bnd
jmp
aas
fistpl
fldenv
iret
inc
push
sub
aaa
mov
out
adcb
cmp
xchg
pop
add
sbb
or
out
cmp
imul
mov
adc
sub
scas
std
cld
or
sub
ljmp
ja
pop
pop
shll
loopne
xorb
add
imul
push
dec
xchg
inc
pop
rcll
mov
in
xor
xchg
je
cmp
dec
sbb
cli
movsl
cmp
jbe
aad
fisubrl
cli
out
lods
jge
jl
push
cmp
jne
xor
outsl
add
mov
push
cmp
xchg
cmpsl
aaa
lahf
jle
push
sbb
add
ret
sbb
fcoml
sub
lock
test
fnstcw
jne
adc
rorb
pop
add
mov
push
dec
dec
xchg
mov
idivl
mov
push
arpl
gs
int3
mov
sub
sub
sub
inc
dec
aas
sbb
arpl
lcall
push
js
and
out
gs
daa
cmpsl
jb
fmull
push
std
inc
and
cwtl
sbbl
movsb
cmp
imulb
adc
mov
sbb
inc
shrb
xor
cs
js
popf
cmp
jo
push
stos
fld
movsl
bound
cmp
xor
shll
pop
and
ficompl
sbb
dec
inc
fcoms
push
addr16
lret
rcl
or
out
mov
leave
jle
scas
xchg
dec
aas
orb
xor
jle
iret
xchg
jecxz
fidivs
mov
test
aas
loopne
adc
lds
bound
cwtl
and
aaa
lods
push
aam
add
test
fiaddl
xchg
fidivl
xor
movsl
rclb
mov
mov
ljmp
outsb
and
shr
and
mov
push
data16
aam
mov
nop
push
jo
xlat
mov
adc
xchg
call
inc
fbld
push
dec
rcr
jbe
mov
jno
lds
pop
add
xchg
imul
push
ret
sub
mov
sarb
js
add
clc
inc
mov
outsl
dec
adc
sbb
pop
adc
adc
jb
xlat
push
sbb
in
psllw
rcl
jmp
inc
imul
inc
aad
cmp
sbb
push
pusha
cmp
push
pop
mov
movsb
mov
xor
push
orl
push
xchg
daa
fistps
popa
xchg
std
movsl
or
ss
mov
xchg
cmp
push
pop
lret
pushl
pop
push
or
outsb
xchg
xchg
aas
xchg
pusha
ss
fnstenv
enter
jle
sarb
outsb
aaa
and
shrb
lret
xchg
lahf
pop
dec
lahf
mov
dec
rorb
inc
cltd
inc
test
or
shrl
push
push
xor
lahf
xor
fs
jge
lock
pop
pop
je
lods
mov
inc
pop
sub
fimuls
icebp
int3
dec
inc
mov
mov
decl
rcrl
cmp
test
jae
adc
das
cltd
pop
jmp
and
push
adc
dec
push
popf
jp
jae
mov
mov
icebp
inc
nop
xchg
push
loop
sbb
stc
ljmp
nop
dec
in
into
cmp
movsb
mov
cmpsl
lret
xor
mov
popa
fnstsw
inc
shl
icebp
dec
dec
jb
test
ret
jg
mov
in
repnz
mov
cmpsl
inc
push
movsl
sbb
add
pop
xor
and
popa
stc
push
cmp
inc
and
xchg
adc
cmpl
in
fisttpll
test
xor
sarb
shl
mov
xchg
xchg
dec
sti
fnstenv
out
jno
mov
out
mov
xlat
sub
sub
sub
push
dec
add
add
and
cmp
cmp
xchg
sub
shl
stos
sbb
cmp
jne
ror
xchg
popf
mov
cmc
jmp
xor
pop
jno
sub
cmp
lea
ficomps
cmpsb
inc
sbb
test
ss
addr16
lea
hlt
fsubs
cltd
clc
nop
call
dec
inc
pop
xor
movsb
fucomi
ret
notb
ja
push
ds
push
sbb
mov
jo
cmp
stos
lahf
adc
add
xchg
subb
in
test
mov
push
mov
shl
es
cmp
or
push
push
lret
iret
dec
add
xor
das
pop
adc
push
mov
enter
xchg
or
jg
sbb
inc
push
imul
xorl
sbb
xchg
lcall
iret
mov
daa
dec
cmp
movsb
ds
and
jae
add
call
addb
cmpl
inc
in
add
shlb
jbe
jmp
dec
pop
adc
lcall
notl
xchg
jne
xchg
and
pop
pop
into
jecxz
iret
cmc
adc
adc
je
sbb
add
mov
loop
fidivrl
fmull
sub
fucom
testb
clc
or
mov
inc
leave
xor
xchg
adc
test
aas
cmp
popa
leave
testl
push
fistl
xchg
add
jb
dec
cmp
add
xor
enter
jae
sub
dec
push
pop
loopne
push
out
dec
xor
daa
jns
and
call
insl
testb
lret
and
sbb
adcl
dec
repz
cmp
in
out
mov
xchg
sbb
lahf
mov
sbb
aam
jbe
leave
or
inc
sub
xor
mov
inc
cli
xor
and
inc
pushf
enter
mov
xchg
and
pop
int3
loop
mov
dec
pusha
or
pop
sbb
pop
clc
cmp
fs
jle
lahf
mov
sub
xorl
jne
pop
inc
push
cltd
lahf
stos
dec
daa
insl
insl
cmp
xchg
arpl
or
jae
and
sbb
sbb
adc
fisttps
test
add
sbbb
aad
in
jo
or
push
into
mov
push
ret
jmp
jle
mov
aad
inc
xor
push
aas
ljmp
sbbl
xchg
inc
add
xchg
adc
pop
insl
sbb
dec
shll
nop
stos
push
sub
imul
aam
or
sahf
lods
aad
xor
in
call
pop
pop
dec
inc
add
int3
orl
mov
lret
lret
pop
popf
mov
in
popl
xchg
ret
cltd
imul
inc
sub
out
faddl
mov
sbb
inc
dec
push
mov
xor
xchg
mov
xchg
mov
sbb
adc
mov
push
cmp
cmp
ds
pop
jge
mov
scas
sarl
lahf
jne
and
shrb
sti
cmp
loopne
aam
lea
push
sub
xchg
cli
sub
push
or
mov
insl
mov
nop
mov
lret
mov
inc
jg
mov
lods
pop
or
dec
pop
sub
stc
xlat
rcll
sub
or
adc
loope
scas
mov
jo
cwtl
sub
jl
insl
mov
sbb
sbb
pop
test
xchg
fidivrl
mov
das
lds
test
mov
loopne
and
ret
fisttpll
sbb
sub
aaa
jb
arpl
rol
stc
sbb
mov
jb
pop
cli
mov
popa
out
aad
sub
sbb
mov
sub
int
cmp
movsl
js
jp
ss
mov
test
mov
popf
repnz
cmc
jecxz
inc
xor
imul
notb
jbe
push
enter
mov
jle
or
jnp
jno
pop
xchg
insb
scas
arpl
fdivl
push
leave
inc
loop
xchg
insl
adc
pop
das
sbbb
dec
fisubl
add
ret
lret
ss
out
sbb
xchg
pop
xlat
rcrl
iret
imul
push
jmp
mov
and
push
xor
xor
fcompl
popa
mov
lods
decl
jmp
imul
pushf
and
mov
stos
stos
fidivrl
jg
test
pop
add
test
aam
push
ret
inc
call
lock
sub
iret
out
inc
xor
mov
test
lods
cli
cmp
out
out
iret
jmp
and
jo
mov
xor
xchg
xor
cmpb
lret
mov
ret
das
jb
ljmp
mov
mov
sbb
cmpsl
shll
mov
jns
pop
cmp
mov
clc
or
push
sbb
mov
loop
sahf
sbb
aas
sbb
cltd
imul
pop
shlb
push
or
jno
add
jl
je
add
rcrl
fldcw
aad
mov
repz
sbb
mov
outsb
adc
orb
ja
push
sbb
out
jg
movsl
jns
add
clc
stc
idivl
xor
add
xor
stos
mov
mov
add
adc
lret
pop
and
adc
fdivs
push
jge
movsb
jnp
pop
sahf
in
mov
and
fwait
dec
movsl
repnz
pop
cmpsb
aaa
aaa
insb
leave
into
xlat
add
push
hlt
cs
xchg
mov
push
repz
gs
jae
jb
inc
in
in
pop
stos
in
fwait
mov
jo
dec
out
pop
das
fs
jg
subb
xor
push
jb
hlt
fsubp
punpckhwd
jge
lods
push
scas
mov
pop
mov
xchg
arpl
aam
fidivrl
cmc
and
aad
out
mov
cmp
and
mov
jmp
cmp
push
cmc
xchg
xor
mov
sbb
scas
mov
sub
movsl
stc
cmp
mov
xchg
or
mov
out
xchg
mov
ret
push
fildll
clc
xor
gs
stos
xchg
fwait
push
sahf
cli
cmp
scas
outsb
dec
sub
mov
jbe
notl
jle
xchg
enter
inc
dec
movsl
aam
sub
outsl
test
cld
jne
out
repz
stos
dec
pushf
into
stos
inc
sbb
data16
jecxz
lods
sub
adc
loopne
out
test
mov
inc
xor
in
inc
inc
fwait
mov
xor
out
mov
push
cmp
in
push
mov
out
mov
outsl
popf
inc
fs
fwait
insl
imul
sbb
xor
or
in
fnstcw
and
aad
xlat
inc
mov
sarb
loope
and
push
lods
popf
cmp
or
sbb
in
push
aad
fidivs
fildl
fimull
sbb
pop
cmc
cld
jle
xor
enter
jnp
adc
outsl
shl
inc
sub
js
push
inc
notb
inc
aaa
mov
and
arpl
mov
aad
out
fnstsw
lcall
inc
jb
pop
cmp
ja
les
fcomps
jns
add
int3
adc
add
sti
mov
sub
jo
pop
test
jp
icebp
in
dec
adc
pop
push
or
shl
test
mov
jmp
shl
std
push
push
inc
sbb
cmp
and
or
pop
dec
or
adc
dec
xchg
das
iret
cmp
enter
shll
adc
je
sbb
xor
out
stc
jb
push
sti
inc
cmp
es
mov
xchg
adc
cli
dec
push
sbb
pop
and
rcrl
imul
dec
cwtl
push
mov
mov
stc
jmp
scas
cs
or
call
aam
or
fdivl
cmp
addl
jge
xor
xor
push
or
add
jns
addr16
rolb
inc
outsl
and
aam
loop
out
cld
inc
add
sbb
fldcw
sub
push
adc
xchg
and
inc
ficoms
pop
sahf
sbb
in
push
sub
movlps
or
and
mov
popa
out
and
loop
adc
int
je
ret
scas
lret
shlb
fwait
lea
arpl
sbb
testl
lahf
aaa
or
jg
jo
mov
mov
mov
pop
pop
push
jno
xchg
pop
dec
repnz
testb
add
push
add
xchg
inc
cs
mov
pop
cmp
in
in
add
adc
les
call
out
imul
mov
in
ds
clc
roll
add
inc
dec
pop
bound
mov
and
push
pusha
fmuls
iret
and
lret
jae
popa
insl
and
lea
sbb
xor
lds
mov
mov
dec
push
mov
pop
stc
and
xchg
dec
jmp
insl
out
sbb
daa
mov
ja
ds
rorb
inc
out
lret
int3
mov
mov
mov
addr16
mov
enter
mov
testl
icebp
jmp
inc
iret
add
mov
cmc
aam
sbb
sbb
or
daa
out
or
push
xchg
jmp
ficomps
fisubrl
ljmp
cmp
fbld
mov
sub
mov
sub
sub
push
pop
loope
in
jnp
mov
popf
push
xchg
or
fmulp
mov
ljmp
loop
push
pop
mov
aam
xchg
sti
lret
addr16
pop
adc
outsb
shlb
add
sub
stos
push
int3
mov
dec
pop
jl
into
or
mov
into
lcall
sahf
push
stc
stc
jl
mov
mov
test
frstor
into
xor
je
adc
adc
repz
add
mov
lret
outsl
inc
clc
and
push
inc
sbb
dec
ljmp
jae
push
stos
out
cld
fidivl
and
xor
int3
push
or
cs
xchg
xchg
adc
and
pop
jae
mov
out
in
jno
dec
popa
sub
inc
aaa
shlb
test
or
jp
out
mov
cmp
jne
ror
jbe
mov
cmpsb
leave
popa
mov
mov
and
pushf
xlat
or
add
adc
loop
dec
ret
sub
mov
mov
aam
mov
in
mov
loop
mov
sbb
test
subb
xchg
cwtl
mov
xlat
int
imul
clc
xor
jae
movsb
ds
or
ret
fldl
jb
in
aas
mov
inc
movsb
xor
xchg
clc
cmp
mov
loop
loop
sub
xchg
mov
pop
vmwrite
loopne
mov
setnp
pusha
mov
ds
sub
xchg
lods
nop
ds
int3
les
mov
xor
nop
stc
jns
daa
es
dec
jmp
add
shl
cltd
or
imul
nop
inc
mov
push
stos
push
add
mov
pusha
jmp
enter
mov
jge
cwtl
daa
js
or
mov
and
test
jne
test
bound
ret
mov
ljmp
and
stos
and
or
or
incl
sub
fbld
mov
push
push
cli
imul
push
aad
adcb
stos
testl
ds
dec
cltd
bound
jmp
loope
out
push
aam
sbb
push
inc
mov
inc
ljmp
and
push
pop
rorl
mov
dec
xor
into
cmp
sti
pusha
jnp
std
repz
setle
stos
dec
mov
pop
mov
mov
mov
add
adc
mov
xor
xor
lret
push
jp
lret
adc
push
inc
popf
sbb
pop
jg
push
lea
mov
fsubp
xor
arpl
in
dec
mov
xchg
call
pop
ret
mov
add
mov
xor
adc
imul
mov
in
aam
adc
mov
ss
push
push
pop
fidivs
add
and
xor
fisubrs
scas
enter
test
out
sub
push
fs
jns
mov
cmp
dec
stos
clc
mov
mov
fstpl
out
fnstsw
sub
mov
xchg
mov
cmp
pop
jecxz
scas
ret
jl
ret
lds
mov
std
adc
xchg
data16
xor
ja
adc
push
mov
jo
test
movsl
jns
popa
add
xor
ja
addr16
sub
lcall
pop
sub
in
imul
sub
stos
ret
test
push
cltd
out
xchg
imul
loopne
dec
repz
add
test
or
pop
std
and
pop
std
test
adc
inc
mov
fwait
and
push
pusha
les
lret
fstpl
in
jns
data16
pop
inc
test
adc
xchg
dec
mov
pop
fisubs
add
ret
push
negl
cmp
xor
scas
inc
repz
stos
mov
mov
pop
pop
pop
dec
ljmp
pushf
imul
pop
xor
cwtl
in
leave
call
add
xor
js
movsb
insb
adc
pop
mov
loope
movsb
movb
lcall
movsb
adc
addr16
scas
push
adc
inc
and
test
xlat
das
mov
inc
mov
cmpl
js
push
sahf
mov
or
push
and
sbb
mov
mov
sbb
jae
in
ss
and
inc
pop
not
loope
mov
popa
jle
sbb
les
jle
mulb
jns
lods
adc
jecxz
lock
int
insl
adc
add
bound
insl
xor
das
cmp
or
leave
vpmacsdd
mov
mov
cmp
cmp
cmp
lret
je
sub
dec
adcb
lret
inc
fs
jae
and
icebp
rolb
pop
pop
data16
lea
fldt
dec
sahf
aaa
add
pop
xchg
jne
mov
shl
and
sub
push
push
adc
js
into
fwait
xor
pop
imul
sbb
pop
lock
sub
shll
scas
inc
aaa
and
pop
inc
push
sub
fcomi
aas
fs
xchg
mov
insb
stos
pop
cmp
aaa
lret
cld
xor
int3
cmp
xor
jg
in
cmc
data16
cltd
xor
mov
jno
jl
mov
out
sbb
pop
fstpl
push
push
jge
jmp
pop
movsl
xor
inc
dec
cmp
xor
inc
leave
mov
inc
flds
cmp
cmovnp
sbb
and
aaa
je
dec
repz
adc
out
scas
icebp
inc
mov
gs
inc
cmpsl
cmc
faddl
xchg
fidivrl
lea
loope
shlb
data16
dec
or
xor
fmuls
mov
shll
test
inc
pop
ja
pop
popf
dec
sbb
cmpsb
les
xchg
push
std
mov
scas
push
jmp
push
adc
jmp
fcomps
push
jle
cmpsl
sub
movsb
and
ljmp
into
pop
cli
add
out
xchg
test
push
lea
call
loopne
xor
xchg
ljmp
adc
gs
or
mov
sarb
std
cmpsb
out
mov
jne
pop
inc
add
ds
lcall
or
pshufw
es
push
cmp
cmpsb
insb
iret
pop
mov
and
pop
iret
sub
mov
mov
mov
outsl
enter
test
xchg
mov
repnz
sbb
lahf
daa
mov
xor
pushf
cmp
test
pusha
outsl
insb
stc
pop
es
outsb
and
adc
repnz
dec
decl
jg
clc
arpl
or
add
dec
aas
fdivr
dec
xchg
scas
xchg
jne
dec
push
ficoms
clc
push
and
adc
outsb
dec
jno
push
xlat
aam
xchg
push
rcrl
xchg
adc
repnz
jns
jecxz
push
adc
mov
xor
jb
in
mov
pop
bound
jae
cwtl
leave
cld
push
mov
cmp
comiss
aaa
jecxz
sub
mov
or
or
or
ja
dec
mov
mov
mov
pusha
mov
mov
pop
xchg
cmp
push
shl
mov
dec
adcl
outsb
les
inc
lret
das
jb
cld
sub
addb
fs
js
lds
fucomi
mov
pushw
cs
mov
lahf
lock
pop
xor
pop
ficomps
mov
mov
dec
enter
out
in
or
mov
je
jmp
fsubs
mov
loope
cmp
movsl
pop
dec
in
enter
mov
out
xor
fmuls
add
iret
rcrb
fisubrs
inc
or
sbb
aaa
bound
inc
shl
js
sub
sbb
ficoml
mov
test
inc
add
add
clc
jge
jle
test
int
and
push
paddusw
xor
xor
nop
cmp
scas
xchg
lahf
jmp
arpl
sbb
xor
cltd
mov
mov
jl
notb
jbe
xor
sub
push
sbb
insl
testb
das
cmp
shll
sub
ror
lock
je
xlat
push
dec
add
adc
pop
cmpsl
cmpsl
hlt
adc
mov
mov
into
negl
adc
mov
stos
loope
or
xchg
inc
shlb
aas
loope
jp
cmp
out
jecxz
sub
and
mov
sub
cmp
sahf
mov
fisubrl
sub
mov
sub
lock
jl
sub
sbb
les
xor
xchg
stos
cwtl
and
rol
das
mov
sub
mov
ss
push
add
cltd
pop
push
dec
mov
popa
xchg
shlb
adc
xlat
inc
cld
outsl
fdivrs
push
loop
push
aam
pop
ret
jl
push
inc
and
cmc
repz
add
pop
adc
scas
xor
loop
dec
adc
mov
xor
push
ss
mov
fstpt
jne
je
lret
shlb
cmc
or
jo
scas
cmp
cmp
mov
sub
ret
inc
pop
enter
pop
or
push
ja
pop
stos
leave
pop
les
sti
jmp
pushf
cmp
fimull
sub
arpl
loop
inc
push
push
nopl
xor
cmp
add
outsb
scas
decb
push
mov
cmp
dec
fwait
stos
sub
sub
jno
repz
imul
cmp
and
jl
addl
call
ret
dec
insl
js
jge
outsl
lahf
cmp
add
jnp
jp
xor
in
sub
fsubl
in
mov
imul
addr16
pop
pop
ds
adcl
push
xor
xchg
js
jno
sbb
push
pop
push
sub
stos
xor
insl
jnp
insb
jo
add
push
lcall
mov
out
imul
cs
mov
loope
mov
int
mov
jae
inc
sbb
mov
das
popf
pop
pop
outsl
mov
mov
mov
test
pop
jle
loopne
jecxz
ret
mov
inc
xchg
inc
push
test
dec
ss
pop
jg
cmp
pop
sbb
and
mov
sub
lcall
fdivr
mov
mov
sub
xchg
pop
imul
arpl
jbe
cmc
pop
in
sbb
mov
xchg
mov
sub
push
ja
aad
add
shrl
pop
testb
or
pop
repz
mov
push
xlat
fistpl
jo
jge
cs
jle
jmp
adc
std
mov
jb
cmp
dec
and
add
addr16
aad
movsl
mov
push
das
dec
mov
pop
pop
ret
xlat
iret
mov
jo
jno
dec
data16
nop
push
mov
lds
jge
mov
push
dec
out
stc
push
push
dec
loope
push
push
pushf
nop
cmp
out
aas
xor
pop
cmpsl
rcl
push
fstpt
mov
xor
or
add
inc
dec
add
popa
out
adc
loop
adc
inc
insb
int
fwait
ret
les
push
rcr
push
out
cmp
out
push
clc
aad
and
test
pop
cmp
or
out
fstpt
jae
in
xchg
jbe
arpl
cmpsb
ret
aaa
adc
ret
xchg
inc
out
out
inc
mov
cmp
pushl
decl
lea
jb
leave
cld
fisubs
fs
bound
sbb
or
nop
mov
cltd
jno
xchg
sub
loope
jnp
mov
jmp
dec
popf
ficompl
inc
test
jne
sub
push
xlat
lods
mov
adc
fildl
xor
out
lcall
or
cs
cmpsl
dec
imull
xchg
rorl
push
and
push
lock
pop
imul
arpl
add
popa
loop
insl
sub
hlt
jl
add
test
xchg
mulb
popw
fwait
or
jb
push
xchg
adc
popa
fists
mov
dec
fwait
xchg
xor
jnp
outsb
fiaddl
loopne
je
cwtl
aam
bound
xchg
cmp
adc
adc
xchg
dec
insl
push
shlb
add
push
adc
push
cmp
sbb
nop
es
fs
xor
je
lcall
sahf
dec
mov
cli
popf
fstpt
imull
inc
push
push
sub
sbb
lods
lock
pop
and
movsl
push
and
or
popf
fsubl
fldcw
pop
push
or
and
and
rorb
push
mov
sbb
xor
fildl
pop
sub
and
popf
sub
pop
xchg
fmull
and
lret
subl
test
cmp
xchg
ja
out
add
push
jns
mov
xlat
pop
cltd
loopne
mov
test
inc
je
aas
test
sub
loop
icebp
jno
mov
in
mov
adc
enter
add
mov
lahf
xor
jae
sbb
xchg
leave
lahf
fs
lds
xchg
call
outsb
nop
xlat
dec
in
fwait
loope
and
mov
dec
lock
ret
js
xor
mov
inc
and
pop
cli
imul
cmc
inc
ljmp
cmp
bound
xchg
inc
ljmp
into
ficoml
add
std
inc
inc
repz
add
pop
stos
push
dec
popa
popa
lock
xor
add
test
jle
test
mov
dec
add
mov
lock
lock
push
out
scas
jo
sarl
push
rolb
out
xchg
iret
outsb
xor
test
push
pop
jo
dec
lods
jne
mov
adc
nop
xchg
loop
imul
popf
push
jno
mov
in
clc
out
cwtl
shr
cli
push
add
and
out
inc
xor
cwtl
dec
jnp
mov
pop
imul
push
jno
inc
popf
pop
push
jnp
subb
daa
cmpl
out
int
call
mov
jb
xlat
push
lods
outsl
scas
aam
notl
mov
dec
test
cmpsb
repnz
cmp
repnz
pop
push
jae
jp
js
jecxz
fnstcw
cmp
fmull
jno
ret
jl
or
pop
jg
out
scas
and
jbe
mov
dec
cmpsb
fsubs
movsb
in
lods
mov
hlt
movsb
push
jg
rorb
lods
movsl
cmpl
push
ljmp
xor
inc
sub
dec
pop
xor
sub
ret
sti
std
mov
mov
pop
push
fcoms
sarb
lods
sub
lahf
cmp
notb
xchg
in
mov
push
dec
insl
test
rorb
mov
push
jp
and
js
rcrl
ja
sbb
jne
in
imul
jg
mov
jg
or
loope
xchg
idiv
mov
and
imul
test
lret
dec
pop
int3
ja
xor
mov
loopne
xlat
add
push
fmul
adc
lahf
sahf
xchg
push
cmp
into
sbb
and
xchg
adc
push
fadds
push
mov
mov
dec
insb
nop
push
mov
mov
leave
and
pushf
xchg
mov
in
gs
in
test
push
inc
aas
test
push
jmp
jg
fdivr
pop
and
xchg
in
jp
out
pop
aas
stc
test
in
loop
test
jle
lahf
add
pop
xor
cld
push
sarb
in
push
out
orl
or
cmp
and
cmp
test
in
xor
inc
jo
mov
gs
sti
scas
data16
cwtl
cmpsb
fsts
add
jno
adc
sub
cmp
insl
cmp
js
adc
pop
popa
shlb
dec
cmc
pop
dec
cmp
push
enter
cli
loope
xchg
fs
bound
clc
sub
shlb
out
stos
in
notb
leave
cmc
roll
fdivl
test
mov
adc
pusha
in
or
xchg
adc
stos
xor
movsl
fstp
xchg
jnp
push
mov
insb
pop
dec
xchg
mov
aaa
mov
and
js
pop
adc
cmpsl
ret
jmp
in
shrl
stos
jecxz
orl
pop
loope
jae
or
enter
push
jnp
lret
daa
and
test
insb
mov
out
add
jo
mov
or
xorb
xor
mov
add
rcll
or
inc
insb
or
popf
sub
mov
int
push
push
mov
shl
sahf
mov
mov
lock
push
mov
xor
fidivl
add
push
fwait
cld
push
sbb
sbb
stos
out
pop
jne
lock
inc
cmp
jmp
add
cwtl
aaa
and
pop
sarb
insb
dec
sbb
mov
cmpsl
dec
repz
imul
add
dec
add
cld
and
push
mov
mulb
push
imul
or
sbb
lcall
mov
xchg
add
xchg
mov
cmpsb
adcl
sti
xor
adc
inc
add
shl
jle
cltd
pushf
add
insl
sub
fcoms
pop
orl
mov
and
inc
xchg
push
jne
je
jne
lods
insl
and
mov
cmp
mov
fildll
shlb
xor
xor
cltd
in
or
mov
insb
js
cmc
aad
push
sbb
push
into
dec
xchg
pop
pop
pop
outsb
pop
in
loopne
orl
in
push
pop
sub
ror
and
pushf
push
mov
mov
cmc
inc
jmp
data16
imul
jg
addl
scas
jecxz
in
xor
xchg
and
or
jle
movsb
mov
jl
lods
jb
scas
pop
mov
aam
arpl
aaa
in
push
lds
inc
loop
cmc
out
dec
jno
sbb
xchg
jmp
xchg
xor
sub
push
push
xchg
xchg
xor
lods
dec
pushl
in
push
mov
jno
push
ds
divb
outsb
mov
mov
shlb
push
sub
and
popf
sbb
or
adc
add
mov
ret
add
sbb
mov
jmp
std
and
adc
repz
jl
xchg
outsl
sub
inc
sub
je
dec
jl
xchg
int3
cld
int
test
mov
mov
shrb
mov
xchg
in
jbe
inc
inc
xchg
hlt
add
vmread
vaddss
mul
in
jnp
hlt
mov
push
sbb
ror
out
add
shrd
mov
mov
mov
int3
notb
xor
jnp
mov
dec
pusha
sbb
lock
pop
stos
cmp
pusha
adc
es
in
or
and
ljmp
push
sub
test
xchg
in
sbb
add
nop
sbb
push
std
adc
fs
push
insl
out
sahf
pop
in
and
inc
mov
test
fcmovne
mov
jne
sbb
dec
pop
in
jo
lock
sbb
add
push
cwtl
popa
jge
mov
enter
ljmp
ljmp
iret
fwait
adc
pop
pop
mov
mov
mov
sbb
ss
jns
fcomp
das
out
cmp
xor
mov
and
mov
jns
fdivs
test
dec
and
cmp
in
and
test
adcl
sbb
and
addl
jecxz
jo
loopne
jo
push
xchg
and
dec
popf
inc
push
jp
sbb
push
aad
aad
scas
ljmp
add
push
clc
inc
push
cs
fdivrs
push
loope
out
sahf
mov
mov
stos
push
add
dec
cmp
shlb
orb
insl
lret
or
pop
sbb
les
xchg
inc
cmp
lahf
cltd
pop
popf
sbb
or
ss
dec
dec
mov
mov
test
cld
inc
or
sbb
in
push
pop
scas
jp
mov
push
sub
xchg
mov
and
jbe
xor
inc
faddl
xor
sub
roll
cmp
aad
aas
addr16
scas
loope
lds
in
mov
mov
shr
push
pop
ret
test
ja
push
jmp
push
mov
xchg
sbb
popf
inc
sbb
fwait
popl
decb
out
out
stc
xor
in
lcall
jno
pop
xor
subl
jb
pop
jo
mov
sbbb
and
jl
and
dec
mov
aam
rcr
movsb
xor
je
push
scas
fidivrs
and
loop
out
adc
or
loope
sahf
mov
add
push
enter
mov
jae
add
cmp
mov
xor
test
fists
sbb
add
clc
leave
pusha
adc
mov
sti
fisubrs
std
sub
xchg
add
dec
and
ret
push
adcb
xor
mov
mov
mov
daa
addr16
hlt
nop
or
sub
xor
inc
jb
loop
add
ret
push
xor
cmpsb
cld
push
push
je
jne
sub
jnp
adc
out
cltd
je
pusha
bound
dec
lret
rcrb
mov
cmp
js
shlb
les
xor
dec
adc
or
out
ja
inc
stos
ljmp
mov
pop
and
out
fstps
notl
jmp
add
movsl
mov
lahf
fndisi(8087
shll
pop
repnz
jns,pn
inc
jg
js
pop
in
imul
push
aas
adc
sbb
inc
cli
mov
pop
fnsave
mov
pop
repz
mov
add
ret
int3
aam
push
dec
xlat
int
mov
jne
dec
pop
pop
mov
andl
in
pmulhw
mov
mov
stos
adc
pop
rcr
ja
int
ret
adc
push
adc
hlt
lock
lds
add
out
mov
es
fdivs
mov
push
and
xor
out
mov
add
movsl
call
cmp
test
sub
lock
or
fnsave
in
xlat
shlb
ds
or
inc
push
pop
pop
fildll
and
ret
les
xchg
jg
dec
sarl
mov
out
push
mov
jmp
inc
dec
pusha
rorl
cmpsl
fnstsw
xor
cwtl
aas
or
adc
in
movsb
pusha
loope
cld
fimull
or
icebp
push
mov
mov
and
xchg
push
rorb
fiaddl
in
and
std
adc
adc
sub
xor
mov
mov
cmc
inc
mov
lods
or
cmpb
inc
andb
mov
aad
stos
shl
mov
and
xchg
das
fildll
aam
fdivrp
shll
adc
pop
das
sti
jne
daa
pop
mov
movsl
in
mov
loopne
mov
jg
popf
mov
lret
xchg
sbb
and
push
popa
or
inc
and
push
jbe
inc
adc
pop
pop
add
jmp
mov
pop
ret
test
icebp
push
pop
ds
push
outsl
jmp
sbb
int
cmp
inc
ja
fldt
xor
adcb
in
adc
mov
sbb
pop
push
jbe
pop
imul
or
mov
and
ret
int
jle
jl
rclb
roll
jmp
mov
mov
mov
adc
push
sbb
push
lcall
ror
in
inc
mov
fldcw
inc
xchg
dec
jecxz
arpl
add
es
mov
or
push
cltd
push
leave
jge
and
out
dec
mov
ret
pusha
pop
fsubs
popf
pop
out
xor
pushf
jmp
push
fabs
jbe
xchg
gs
xchg
lret
cs
sub
jno
dec
jge
sahf
dec
and
xchg
cmp
gs
fs
out
int3
leave
test
mov
cmc
fdivrs
mov
xchg
pop
add
dec
and
xchg
push
mov
popa
ficoms
shll
les
enter
nop
ficompl
dec
push
and
sbb
sub
or
fnsave
pop
repnz
das
add
cmp
je
xchg
adc
pop
and
mov
aam
sbb
pop
lretw
shrb
movsl
adc
mov
jmp
push
xchg
imul
movsb
fwait
sbb
rcll
cli
ret
cmp
adc
xchg
xor
loope
pop
cmp
test
pushl
or
icebp
sbb
pop
push
std
les
mov
push
into
push
daa
les
xchg
mov
std
lods
punpckhdq
lods
sub
insb
xchg
inc
shl
fwait
in
pop
mov
push
push
xor
leave
das
push
lea
test
adc
pop
into
xor
dec
rcll
mov
pop
jmp
enter
adc
fiadds
adcl
cmp
int3
outsl
sbb
dec
js
pushf
cmpsb
lret
and
out
stc
dec
inc
mov
out
dec
cmp
sti
adc
push
mov
dec
push
xchg
ja
sub
jns
or
adc
nop
or
nop
mov
mov
or
adc
cmp
inc
es
mov
les
push
ljmp
insl
jae
leave
or
les
inc
leave
add
mov
gs
in
mov
mov
xor
and
aas
popl
enter
sub
cmpsb
rolw
xchg
daa
add
jge
fiaddl
and
gs
cwtl
loopne
mov
sub
fs
push
orb
shlb
push
fmul
dec
roll
and
cmp
sti
out
sub
inc
mov
popf
in
dec
ja
cld
outsw
xlat
mov
jno
or
xchg
fcoml
xchg
mov
pop
pushf
add
dec
sbb
cmp
mul
sbb
cs
divl
js
leave
mov
leave
mov
xorl
inc
pop
cmp
test
lods
mov
push
xchg
ficomps
pop
repnz
lea
shlb
lret
mov
mov
inc
in
mov
mov
sub
mov
pushf
inc
jnp
out
push
leave
aas
test
adc
pop
out
addr16
fisubs
push
mov
out
add
mov
pusha
push
dec
notl
das
mov
add
sarb
int3
push
pop
test
pop
and
cld
inc
je
jbe
js
repnz
cmp
mov
ror
pop
movsl
sbb
push
je
movsb
or
pop
lds
or
data16
int
cli
push
ja
cwtl
xor
sbb
mov
mov
lea
or
and
adc
inc
cmpb
std
call
scas
cmp
pushf
mov
adc
stos
popf
push
test
ds
mov
and
push
imul
ror
jb
add
dec
sub
jno
lock
sub
into
xchg
jmp
mov
xchg
test
daa
pop
xor
imul
jg
dec
fucomip
into
inc
into
inc
loop
push
xchg
addr16
gs
xchg
stos
dec
shll
pop
adc
jl
jg
or
mov
inc
les
orl
add
xchg
add
adc
cmp
mov
popa
das
cmp
lret
rcll
das
je
insl
jecxz
or
xchg
and
aaa
mov
das
push
mov
sub
shrb
lcall
sahf
dec
inc
js
mov
cmp
mov
jl
popa
adc
jecxz
into
dec
test
push
bound
popa
stc
in
mov
and
mov
repnz
scas
push
and
adc
adc
cmc
fs
orl
or
or
inc
paddd
xchg
xchg
jae
pop
ret
inc
or
jge
or
les
ds
pop
fdivrp
test
add
add
test
mov
or
lcallw
ja
push
push
out
push
cmp
mov
cmp
aas
mov
sub
cli
orl
or
dec
loope
cli
mov
sbb
mov
xchg
adc
mov
xchg
test
jnp
adc
fstpl
jbe
mov
cmpsb
pop
repnz
shrb
mov
pushf
pushf
stos
fisttpl
mov
into
mov
lahf
icebp
fldl
xchg
andb
and
in
lods
stos
adc
fldl
repnz
movsl
nop
pop
testb
addr16
cs
neg
in
dec
aaa
lods
push
push
aam
int
inc
inc
push
lds
out
daa
outsl
ret
push
mov
ja
sbb
mov
mov
and
inc
xor
lret
cmp
sub
popf
fildll
xlat
ret
push
dec
cmp
cwtl
or
pop
movsl
icebp
mov
mov
iret
mov
jne
movntps
out
cld
aad
push
sub
push
cmp
outsb
repz
or
int
push
cmp
jno
les
addr16
and
cmp
mov
xor
sub
mov
in
push
lods
and
les
lds
jp
cmp
jecxz
test
lahf
xchg
jp
xchg
dec
scas
or
jae
lock
fmuls
cmp
incb
jge
dec
mov
mov
fwait
pusha
cmp
add
pop
sub
mov
sbb
and
fdivl
jl
pop
mov
bound
aam
cld
scas
inc
pop
stos
pushf
pusha
fwait
les
xlat
adc
cmp
cmpsl
jnp
shrl
fwait
add
cmp
ficoms
lods
pop
ljmp
jnp
fidivrl
icebp
movsb
dec
int
push
enter
js
cmp
lods
jge
addr16
movsb
dec
cmp
jns
lods
push
pop
xchg
jb
dec
lea
cmpsb
dec
mov
jmp
push
jb
adc
loope
push
add
xor
cmpsb
mov
mov
jp
cmp
pop
subb
pop
dec
xchg
sub
push
aaa
ljmp
sub
ret
popf
push
dec
pop
mov
jg
push
adc
inc
das
mov
and
mov
mov
scas
sbb
pop
stc
lcall
out
gs
cwtl
jmp
int3
pushf
mov
bound
pushf
daa
mov
cmpsb
aaa
cmp
lcall
mov
dec
lea
and
lahf
jo
dec
sub
lds
into
or
ss
stc
fsub
rclb
push
xor
push
push
adc
dec
ds
mov
cmpl
push
xor
pop
and
jge
adc
cmpsl
hlt
sbb
xchg
or
out
rcrl
fmuls
fs
cmpsb
jecxz
mov
cmp
test
xchg
icebp
mov
inc
cld
fidivl
or
lock
repnz
sub
or
aas
add
add
jecxz
negb
or
pop
adc
ss
nop
mov
rcr
mull
pop
sbb
mov
dec
jae
jns
jns
popf
rol
mov
repz
pop
scas
iret
iret
mov
mov
sbb
mov
lret
sub
aaa
sbb
aad
pop
add
stc
out
mov
icebp
dec
bound
cmp
adc
fcmovu
pop
aaa
stos
mov
repz
cmpsb
fbld
inc
cs
into
xor
lock
inc
cmpsb
or
or
insl
and
fsubs
outsb
and
popa
rcl
mov
daa
ljmp
adc
mov
fdivl
or
xchg
pop
xor
icebp
push
jp
sbb
and
xor
loop
cmp
xor
dec
out
pop
dec
addr16
ljmp
mov
insl
into
sub
aad
mov
fmuls
push
mov
lods
out
pushf
arpl
lcall
out
inc
pop
sub
mov
inc
dec
xchg
mov
cmp
leave
ljmp
lret
jnp
rolb
outsb
mov
nop
mov
aad
xor
push
insb
repz
cmp
fs
aas
jmp
push
push
sbb
xchg
or
add
cltd
jns
aaa
push
jb
xchg
push
imul
push
shrb
cmpsl
std
cltd
fwait
inc
cmp
cmp
jp
jp
jb
push
xchg
cltd
popa
das
jnp
movsl
add
cmp
push
loopne
mov
fs
or
clc
inc
inc
dec
mov
jno
xchg
cmp
mov
and
cmp
rcl
in
in
sub
mov
add
xor
addr16
inc
addr16
xor
mov
pop
lods
mov
push
xadd
mov
pop
ret
xor
jg
dec
mov
divl
lret
ljmp
in
push
push
sub
xor
ret
fdivrs
xor
sbb
mov
daa
in
sarl
dec
mov
daa
xchg
lret
lods
popa
sub
shll
or
adc
pop
popf
pushf
cld
cmp
lods
mov
mov
mov
int3
push
in
or
dec
test
mov
dec
fwait
sub
lret
lret
or
xchg
and
cmp
jb
es
cmp
das
mov
ret
icebp
movb
and
popa
adc
outsl
sbb
fstps
dec
and
cmp
xor
scas
out
xchg
adc
in
dec
pop
pop
xchg
test
dec
mov
adc
or
mov
icebp
enter
jg
lret
fcmovnu
fwait
ret
fnstsw
or
subb
out
notl
sbb
or
rcrb
pop
pop
les
popf
add
pop
mov
jge
cmp
fdivl
cld
popa
movsl
xchg
int
das
test
insl
push
or
and
mov
inc
xchg
out
cmp
das
nop
arpl
pop
out
adc
mov
xor
addl
je
in
and
pop
adc
arpl
dec
int
dec
mov
lock
fstpl
js
stos
xchg
pop
xchg
cltd
mov
sub
enter
cmp
pop
adc
cmp
push
repz
mov
mov
repnz
xor
repnz
and
jp
cmp
or
xor
test
mov
adc
mov
adcb
or
push
adc
fbld
mov
call
roll
inc
fiaddl
push
stc
add
popa
fstps
jne
leave
std
and
xor
pop
test
das
mov
cmp
in
or
lret
or
jle
test
pop
cmp
jns
cwtl
fistpl
rcr
std
cmp
add
test
aas
rcrl
mov
testb
outsb
sub
inc
imul
mov
das
dec
inc
inc
daa
pop
jecxz
sbb
test
daa
mov
dec
mov
jne
jno
ds
push
mov
imul
aad
test
jg
add
fxch
mov
pop
pop
repnz
add
inc
inc
stc
cmp
mov
cld
movsl
stos
clc
xchg
xlat
mov
lret
test
and
lods
push
das
jnp
out
mov
sub
xchg
fucom
rorb
leave
std
call
popa
call
mov
popf
and
shrl
push
inc
mov
pop
and
loope
jbe
pop
lods
push
or
mov
and
cli
or
js
sbb
mov
rcr
and
out
in
sarl
repz
js
mov
push
jmp
imul
lods
mov
inc
movsl
pop
ljmp
pop
and
nop
test
fldt
movb
add
xor
sub
xchg
jo
movsl
adc
loop
daa
pop
scas
out
sub
mov
in
xchg
xchg
jae
mov
jp
jo
dec
inc
sbb
fldz
dec
scas
add
cmp
cmpsl
and
stc
push
mov
cmp
adc
push
mov
xchg
movsb
mov
movsb
sbb
push
call
fdivl
movsl
mov
dec
mov
test
add
push
xchg
lahf
sub
out
xchg
cld
fcoml
hlt
cmp
loopne
imul
daa
das
push
xchg
jns
jo
pop
addr16
scas
mov
xor
mov
mov
dec
pop
setno
jo
pop
pop
shrl
test
mov
cmpsl
mov
pop
cmp
scas
pusha
mov
insl
xor
jbe
xchg
pop
dec
jae
pusha
hlt
clc
lcall
inc
addr16
pop
vmaxps
push
repnz
sbb
ljmp
scas
in
pop
lret
jnp
dec
or
push
sahf
arpl
shrb
aad
int3
mov
cmc
cld
popf
xchg
and
ret
push
lods
fcoms
jnp
cld
sbb
dec
lods
sarl
jge
mov
add
les
aad
mov
add
daa
arpl
fsub
movsl
xchg
ret
xor
xchg
and
dec
rcrl
inc
jg
add
mov
sbb
mov
nop
enter
sbb
insl
movsl
out
sub
push
cmp
fs
sti
sub
and
mov
cmp
test
pop
adcl
sub
fidivl
xchg
fwait
xchg
dec
or
jp
mov
les
adc
pushf
add
fbld
dec
jge
pusha
pop
movsl
ljmp
loopne
nop
cmp
xor
mov
stos
lcall
pop
sbb
popa
dec
mov
push
mov
into
hlt
fmull
cmp
dec
push
jns
cmp
add
orl
and
data16
adcb
loope
lock
shl
out
lds
shll
rcrl
pop
pop
mov
aaa
out
add
jae
decb
out
imul
outsb
jle
call
mov
xchg
lcall
push
dec
fs
xor
pop
mov
cmp
add
ficoms
cmpsl
fsts
out
andb
leave
mov
sahf
cmp
dec
dec
test
addl
mov
push
pushf
mov
int
ret
sbb
pop
movl
inc
adc
fiaddl
shld
adc
bound
das
push
fisttpl
lcall
lods
mov
xchg
sbb
jb
and
jle
imul
xchg
xchg
inc
leave
push
dec
jecxz
mov
push
mov
sti
pop
push
leave
fdivs
xor
cltd
pop
sti
sbb
pop
xor
push
mov
add
push
sbb
cld
add
pop
push
pop
or
pop
mov
mov
pop
ret
push
je
push
ds
mov
leave
or
lods
shlb
icebp
xchg
mov
insl
fsubrl
mov
sub
pusha
dec
jg
aas
testb
test
push
js
inc
fldcw
repz
sbb
jp
pusha
push
or
mov
outsb
and
dec
std
inc
jns
repz
ficompl
inc
xchg
iret
dec
leave
jbe
ss
test
add
in
jbe
mov
cmp
inc
movsl
add
mov
jp
dec
lahf
inc
push
lods
sbb
add
mov
jg
inc
out
js
mov
dec
mov
cli
cmpl
outsb
mov
iret
fsts
cli
sarl
adc
dec
xchg
and
jbe
lods
enter
into
in
sti
push
mov
and
ret
jl
adc
mov
mov
pop
test
stc
mov
mov
adc
and
pop
fstps
jnp
jmp
inc
je
jge
jae
and
call
mov
adc
inc
add
dec
adc
push
neg
in
jp
cmpsl
roll
pop
in
sub
mov
arpl
mov
push
clc
insb
sub
imul
xchg
ss
test
std
out
shll
push
xlat
jae
cltd
arpl
dec
jno
ds
aad
cmp
arpl
adc
sub
xlat
xchg
mov
add
lcall
push
xchg
xor
out
jb
std
jmp
xchg
mov
push
repz
pusha
inc
lahf
shlb
sub
call
cld
sub
inc
jne
dec
out
ss
andb
icebp
xchg
aas
dec
mov
mov
xlat
jae
dec
out
xor
std
popf
cmc
fstps
add
jo
frstor
pop
push
rorl
cmp
inc
dec
adc
cmpsl
sahf
cmp
rol
dec
shr
sub
in
inc
mov
test
sti
mov
into
adc
sbb
and
cmp
clc
mov
in
arpl
mov
lret
scas
iret
sbb
jnp
outsb
lock
xor
lds
jmp
mov
out
dec
ret
sub
jns
mov
into
jl
or
pop
add
lcall
aad
mov
mov
enter
cmc
dec
scas
sbb
push
cwtl
loop
inc
jecxz
jmp
js
stos
ss
mov
arpl
mov
inc
ret
insb
sbb
addr16
pop
add
mov
push
push
mov
mov
jecxz
sbbl
mov
xor
icebp
ss
movsb
fs
and
xchg
mov
sub
mov
jp
pop
out
adcl
jge
mov
mov
sbb
popf
sbb
into
fidivl
jo
jno
repnz
sbb
in
iret
mov
je
outsl
lret
xchg
repnz
jns
or
in
inc
jo
outsl
outsb
das
pop
fadds
mov
xrstor
pop
loop
adcl
ds
dec
xchg
push
pusha
stos
adc
inc
ja
rclb
jecxz
ss
shll
adc
jb
push
mov
cli
dec
or
scas
mov
sbb
in
in
imul
pop
sub
idivl
cld
outsb
sarl
clc
outsl
add
mov
xchg
push
adc
outsl
fisubl
xchg
push
add
mov
or
cmp
das
pusha
sub
and
and
test
repz
subb
ficompl
rcrb
xchg
lock
sbb
jp
inc
add
out
jg
in
ljmp
dec
inc
pusha
stos
lcall
mov
cmp
dec
mov
daa
add
and
pop
and
adc
mov
jg
dec
and
dec
fldcw
and
jle
xchg
jl
test
push
lock
cmpsl
daa
jmp
xchg
incb
jge
lcall
lock
jge
or
cltd
popf
fimuls
mov
pop
lcall
inc
nop
repz
fnsave
add
bound
xchg
pop
pop
icebp
mov
mov
call
mov
cmpsl
ror
negl
sub
jmp
inc
push
imul
fs
and
xor
mov
fwait
clc
cmc
loop
test
loopne
inc
xchg
mov
movsb
cmp
pop
or
or
and
in
rcrl
inc
nop
push
pop
cmc
stos
fcoms
hlt
pop
loopne
or
cmp
pop
cmp
pusha
andb
fidivrs
lock
cmp
xchg
iret
add
and
cmc
xchg
je
test
outsb
xor
mov
dec
mov
adc
test
mov
sbb
add
sub
dec
fwait
gs
popf
sbb
inc
pop
jbe
ja
adcl
push
idiv
out
bound
cmp
sbb
xchg
js
mov
lods
pop
dec
push
fstl
mov
or
sahf
sbb
add
aad
and
movsb
dec
jae
lea
push
into
nop
cld
and
out
mov
xlat
out
je
out
push
mov
inc
push
and
test
ret
fcoms
daa
ljmp
add
mov
mov
lods
arpl
in
popa
in
inc
pop
push
adc
inc
stos
xlat
inc
xor
aaa
xorl
xor
mov
mov
fldl
sahf
pop
shl
xor
cwtl
inc
pop
push
mov
mov
cmp
or
rclb
or
and
push
mov
sub
addr16
mov
and
fucomip
inc
lods
add
pop
lea
scas
sbb
roll
cli
adc
xlat
sub
pop
mov
hlt
scas
insl
pop
mov
ja
pop
inc
inc
and
and
or
out
cmc
ljmp
outsb
or
push
arpl
xchg
pop
loope
xchg
adc
jp
jle
mov
cld
xchg
xor
cs
mov
stos
inc
sbb
jge
mov
or
rcll
jne
test
hlt
mov
roll
mov
imul
aad
xor
mov
sub
lret
lret
clc
shl
adc
test
xor
jl
mov
push
ficoms
jnp
hlt
sub
ljmp
jns
xchg
enter
bound
cmp
jnp
mov
pop
mov
inc
mov
test
out
lahf
mov
pop
mov
jb
jbe
fucom
out
mov
test
add
adc
xchg
inc
loop
or
add
mov
ja
in
adc
xchg
lahf
adc
cmp
mov
insb
insl
pop
lret
mov
pop
in
add
bound
xor
aas
fnstenv
cmp
pop
xchg
nop
sahf
xor
push
out
mov
sbb
test
fxch
sbb
shl
int
add
les
add
push
fcmove
std
mov
mov
xor
icebp
mov
lods
out
es
cmp
mov
fidivs
insb
push
les
inc
mov
rcrb
insb
out
fwait
jmp
cwtl
ror
sar
and
sub
pop
addr16
push
pop
xor
loop
adc
stos
dec
outsb
pusha
pop
dec
hlt
sti
jle
sbb
and
pushf
data16
hlt
adc
cwtl
mov
lret
sbb
cmp
out
movsb
cmp
adc
loope
fidivs
xchg
arpl
popa
call
push
or
repz
enter
and
mov
dec
cmp
xor
push
jae
mov
push
xor
and
repz
arpl
sahf
ljmp
lods
xor
add
mov
xor
xchg
jno
aas
adc
iret
mov
or
iret
mov
add
fiaddl
pop
inc
cwtl
and
ret
xchg
or
iret
fldl
ret
or
out
outsb
sub
push
insb
stos
inc
imul
dec
test
loope
outsb
sbb
inc
push
testb
dec
out
out
add
bound
pop
pop
or
xchg
cmp
cmp
xor
cmp
and
jo
sarl
pushf
adc
ret
jo
adc
jo
mov
sub
jo
xor
roll
inc
sti
cmp
cmp
subl
jb
js
jge
or
adc
xlat
pop
dec
and
jns
cmc
cli
sti
daa
mov
repz
jo
jae
sub
mov
fiadds
xchg
sarl
pop
clc
xchg
sub
push
mov
sub
add
lock
jmp
outsl
icebp
clc
push
iret
or
pop
jbe
das
add
dec
mov
mov
mov
adc
mov
mov
rcll
movsl
push
pop
add
shl
mov
dec
xlat
loopne
sbb
xor
jge
iret
push
push
xchg
add
jecxz
sub
hlt
pop
xchg
jbe
rclb
imul
out
dec
dec
aam
mov
shl
stos
rcl
fwait
mov
adc
add
sbb
lcall
push
mov
cwtl
test
mov
sbb
sarb
xchg
dec
mov
fwait
jae
pop
jne
push
add
loope
shlb
mov
addl
lahf
stos
fstpl
pushf
mov
fsubrs
lret
js
xchg
jmp
fisubrl
mov
call
mov
mov
push
jno
lahf
dec
push
xchg
sbb
stos
rcrl
into
lods
jle
fisubl
fistpll
test
sbb
leave
leave
dec
leave
pop
fs
lods
icebp
dec
das
dec
icebp
fisubrl
inc
gs
mov
pop
mov
stos
clc
movsl
xor
push
cmp
sbb
movsl
pushf
adc
push
xchg
je
clc
rcrb
loopne
jnp
cmp
xchg
lods
stos
negb
cmpsb
sbb
xchg
xchg
scas
xchg
cmp
add
xchg
test
mov
inc
test
xchg
addr16
pop
push
in
mov
sahf
push
out
rolb
jns
stos
jge
xor
mov
push
rorl
pop
sbbb
sbb
daa
cmp
ret
dec
addr16
test
leave
faddl
outsl
cmp
cmp
shrl
outsb
xor
pusha
and
mov
or
cli
mov
hlt
xor
fmull
xchg
mov
psubusb
lret
inc
dec
cmp
sub
cltd
call
scas
sub
mov
daa
and
xchg
sahf
and
jb
fdivl
or
movsl
shrl
leave
fldl
dec
cmp
sub
imul
mov
repnz
mov
mov
pushf
aaa
iret
cld
test
mov
or
lcall
mov
imul
sub
jne
and
mov
enter
inc
ret
insb
das
cmp
outsb
xor
mov
inc
adc
lahf
jne
es
cwtl
mov
movsl
pop
xor
fisubs
inc
sub
mov
pop
data16
out
lret
jbe
notl
or
push
rcl
xchg
sbb
mov
xor
call
add
dec
xchg
rorb
lock
dec
xchg
cmp
sarb
das
dec
push
scas
les
repz
arpl
xchg
xchg
lods
pop
out
pop
lods
mov
push
int
in
lcall
out
jbe
push
lods
xor
add
sahf
adc
xchg
cltd
pushf
lahf
movsb
push
pop
cmpb
mov
addr16
mov
mov
add
pusha
ret
into
dec
insb
cli
mov
fldl
mov
imul
cli
dec
sub
bound
lret
cwtl
lcall
fcoml
xchg
push
mov
fcomps
xor
push
ljmp
push
xchg
mov
out
push
cli
push
test
and
sub
popa
adc
mov
fs
or
fistpl
js
sub
sbb
mov
lcall
aas
pop
sub
push
mov
pop
adc
imul
adc
loop
gs
mov
popl
lea
mov
adc
fmul
mov
and
and
or
leave
jmp
xchg
sub
lcall
sarb
push
and
ret
fmull
or
fstl
pop
subl
std
cmpl
dec
mov
ljmp
push
xlat
xchg
test
int3
gs
sbb
push
popf
out
inc
loope
movsb
push
ror
lods
shrb
ret
jno
fucomp
lahf
scas
clc
adc
xchg
sti
mov
mov
xlat
fwait
nop
fs
jp
adc
ljmp
sub
mov
jg
xlat
add
pop
je
sbb
test
lds
clc
add
mov
leave
mov
add
inc
xor
dec
cwtl
fdivr
push
test
mov
pop
stc
mov
mov
mov
mov
or
fs
rclb
push
and
mov
cmp
and
sahf
out
fs
fistps
sub
stos
mov
pop
lret
sbb
mov
aad
jno
sub
loope
shlb
xor
jbe
cmpsl
movsb
xchg
push
push
leave
and
xlat
add
je
cli
aas
shlb
xchg
rcll
xor
xchg
repnz
scas
popf
xor
iret
aas
negl
ja
add
fldenv
cmpsl
fwait
dec
jb
inc
xlat
test
adcb
sarl
jbe
mov
dec
jp
push
gs
jne
mov
lods
ljmp
push
les
int3
push
mov
fcomps
xor
in
fisttpl
std
aad
push
xchg
std
pop
add
int
xchg
cwtl
hlt
xchg
sub
in
add
mov
outsl
cs
sub
dec
adcb
in
repz
stos
mov
repnz
pop
and
fs
mov
xorl
lret
cld
mov
mov
xor
mov
arpl
test
push
pop
mov
lds
rol
hlt
or
hlt
mov
mov
aaa
dec
and
repz
loope
mov
leave
jmp
add
pop
lds
xchg
pushf
lock
adc
insb
test
hlt
mov
push
ret
and
ret
push
testl
xchg
les
jo
pop
out
mov
push
popf
pop
dec
add
cmpsb
push
mov
test
pop
fstl
sbb
mov
pop
enter
mov
xchg
pusha
pop
jge
xlat
int
pop
or
repz
hlt
mov
iret
imul
iret
pop
mov
sbb
mov
dec
sbb
sub
dec
fisttpl
push
pause
pop
rorb
cmpsl
divb
jmp
int3
mov
xor
cltd
je
test
mov
in
push
sub
js
addr16
gs
cs
xor
fmuls
sarb
push
jge
push
cmp
fistps
jno
push
and
pop
mov
hlt
mov
adc
pop
decl
scas
cmpsb
add
xlat
test
pcmpeqw
inc
push
inc
push
out
arpl
pop
arpl
xor
repnz
mull
imul
movsl
or
adc
add
and
rorl
mov
enter
mov
mov
cwtl
movsl
in
inc
arpl
rcr
loopne
fbstp
or
repz
mov
adc
fsts
jb
clc
lret
fsubrl
lcall
sub
lods
mov
loop
sbb
mov
cmpsb
sub
lret
cmp
leave
clc
push
mov
ror
mov
cmp
sbb
test
and
ss
mov
and
mov
sbb
stos
adc
mov
in
xor
adc
cwtl
push
push
jno
jl
andb
pop
pop
hlt
xlat
les
pop
sbb
xor
sub
adc
iret
repz
jbe
insb
leave
cmp
das
sub
negl
addr16
fstps
ljmp
in
push
test
sti
mov
dec
mov
out
cmp
mov
xchg
lods
rolb
pop
stos
pop
add
repz
movsb
nop
mov
jge
loopne
mov
das
mov
fstps
call
push
adc
rcll
icebp
addr16
xchg
cltd
cmc
cwtl
mov
push
mov
shll
popf
mov
jne
jnp
jp
jl
pmaxsw
nop
mov
fwait
push
test
pop
or
pop
inc
cmp
insl
mov
and
mov
mov
jne
or
push
inc
or
scas
flds
rcl
xchg
and
fsubrs
clc
aam
xor
loop
test
push
ljmp
out
insl
dec
bswap
aas
addb
enter
jns
push
inc
test
push
imul
rolb
cmovne
jo
imul
dec
xchg
lock
adcl
mov
pop
cmp
fcmovu
mov
hlt
jg
ret
jb
mov
xchg
xchg
out
inc
dec
lcall
or
inc
fisubl
xchg
cld
inc
push
dec
shll
mov
test
lea
pop
imul
inc
shlb
sub
sub
insl
imul
in
imul
mov
stos
iret
sbb
pop
fistpll
imul
jnp
inc
in
add
sbb
mov
mov
pop
call
push
adc
dec
jge
lock
dec
mov
pop
add
dec
xchg
xor
cmp
pop
shll
adc
dec
mov
rol
xchg
or
repz
sbbb
pusha
movsb
leave
mov
adc
push
imul
in
pop
sbb
sub
jle
pmuludq
push
sub
int
divl
into
insb
popa
fwait
les
jnp
inc
mov
push
mov
jb
adc
jg
test
xorb
xor
dec
ss
sub
and
and
or
mov
add
push
push
sub
fimuls
das
loope
inc
popf
dec
sbb
adc
cs
push
imulb
push
repz
pushf
xor
lds
add
fimull
lods
xor
cltd
xor
push
jmp
les
movsb
jnp
inc
mov
js
test
or
daa
out
mov
add
gs
mov
push
mov
inc
outsl
aad
imul
jae
adc
xorb
cmp
sub
jp
sbb
mov
push
out
adc
or
cmp
loopne
push
mov
fs
sub
movsl
hlt
xchg
push
sbb
pop
popa
rclb
push
push
movsl
cli
mov
ss
stc
cmpsl
sub
cmp
lea
out
jmp
cmpsl
je
sarb
adc
jae
roll
cmp
and
mov
cmpsl
fildl
inc
and
stos
outsb
int
inc
movsb
cwtl
jge
or
cmc
xor
mov
pop
loop
jbe
jne
lahf
fs
and
lcall
cli
clc
in
pop
cmc
in
fsubrl
pop
xchg
push
push
and
xchg
or
dec
jl
cmpxchg
call
test
push
xor
fmuls
int3
add
fwait
cmpsb
test
jbe
inc
xor
fiadds
pop
mov
or
stos
hlt
push
xor
jnp
stc
pop
xor
and
sub
sahf
jge
dec
jnp
ljmp
sbb
add
out
dec
aam
cmp
repz
add
adc
stos
nop
add
jns
movsl
pop
stc
loop
repnz
mov
add
jno
push
rcrl
sub
jecxz
jmp
jecxz
pop
scas
jle
movsb
fs
es
lret
dec
fstpt
mov
mov
sub
loopne
adc
xor
push
pop
rclb
imul
imul
hlt
inc
pop
inc
mov
pushf
data16
inc
xchg
sbb
mov
frstor
ja
and
xchg
lret
and
and
ret
ror
jl
out
jl
jns
sub
mov
jp
fmuls
scas
pop
push
repnz
pushf
push
or
ret
push
push
inc
add
cmpsb
or
fucomip
mov
xchg
addr16
movsl
out
push
repnz
xorl
dec
dec
mov
test
sbb
into
ja
aas
xor
pusha
and
std
mov
imul
mov
or
mov
test
xchg
fisttpll
and
arpl
push
ja
or
repnz
incl
subb
xor
out
cld
add
or
clc
rcr
into
inc
shr
jge
xchg
loope
aaa
das
out
outsb
xchg
add
jo
addl
aam
cmp
add
test
insl
in
push
aaa
in
xor
notb
adcb
sbb
or
pop
dec
lret
insb
loop
xor
jge
pop
lret
add
jecxz
js
adc
outsb
and
xchg
inc
clc
dec
and
cld
push
mov
movsl
sbb
adc
and
jle
sub
flds
sbb
sub
mov
jl
out
jnp
fidivrs
adc
pop
xchg
fildll
mov
and
mov
or
dec
int
stos
outsb
jge,pt
mov
mov
test
pop
dec
ja
sub
dec
pop
mov
mov
cmp
fstps
dec
arpl
and
push
or
cmp
bnd
out
data16
rcrl
les
pop
stos
popf
hlt
xor
out
adc
fwait
or
pop
out
fsubrs
push
rclb
add
inc
xor
addl
stos
pop
dec
jge
fisubrl
stos
xchg
pop
dec
js
int3
je
cli
mov
ss
sbb
test
fwait
inc
movsb
stos
sbb
jmp
push
shll
fldt
mov
stos
add
and
lods
xchg
and
pop
mov
inc
xchg
cmpsl
pop
jecxz
gs
arpl
sub
add
and
mov
bound
mov
push
out
add
out
adc
popf
stc
js
xor
jns
ret
cltd
sbb
ficompl
jno
sahf
popa
fmuls
cmp
les
adc
xlat
jns
cmpsb
dec
push
adc
in
cmp
pop
ljmp
rolb
ficoml
fnsave
sbb
lahf
sbb
scas
add
stos
inc
adc
or
adc
xchg
pop
loopne
stos
pop
les
ljmp
in
sbb
out
mov
clc
push
dec
subb
fiaddl
cmp
or
mov
fbld
inc
int3
je
mov
xor
sub
outsb
jle
movzwl
divb
xchg
imul
idiv
sahf
push
dec
dec
mov
jns
idivb
loop
sbb
mov
into
daa
pop
cmp
cmpsb
mov
sbb
mov
xchg
cmp
mov
cltd
mov
fstpt
sub
mov
aad
outsb
jecxz
push
cmp
clc
outsl
inc
cli
mov
lret
int
out
and
shl
test
mov
mov
sub
xchg
mov
test
iret
sahf
xchg
loope
and
les
add
xchg
push
mov
jno
push
frstor
sbbl
xchg
sub
daa
dec
xchg
mov
in
sub
sbb
jg
xchg
sub
or
lret
insb
negl
or
shr
mov
cmp
add
add
lahf
add
inc
js
push
popf
and
and
push
imul
fcmove
into
ss
fstpl
or
nop
ss
dec
or
push
call
sub
push
shll
or
mov
xchg
xchg
lret
test
or
repnz
outsb
nop
jg
in
cltd
fcompl
roll
shlb
or
enter
mov
jnp
imul
pop
jp
push
xor
sbb
pop
test
mov
add
xchg
mov
mov
add
insl
test
divb
push
negl
jecxz
mov
sahf
mov
fmul
mov
dec
popa
cld
adc
push
cmpsl
addr16
jecxz
movlhps
sbb
xchg
cmp
push
mov
jle
loope
push
and
stos
test
pop
outsb
xor
lret
and
in
mov
push
adc
xor
test
pop
cmp
xchg
movsl
dec
and
movl
out
jl
sbb
dec
stos
cltd
dec
dec
icebp
repnz
xchg
sbb
jnp
inc
into
push
pop
sbb
sbb
push
outsl
sbbb
mov
dec
jg
inc
xchg
pop
cmc
filds
xchg
mulb
leave
jo
push
push
cmc
cmp
enter
imul
and
in
or
fwait
push
jecxz
sbb
inc
icebp
jg
push
insb
mov
scas
out
cmp
jne
lods
or
je
mov
pop
dec
cltd
loop
lock
push
test
push
pop
sub
mov
mov
mov
inc
cmp
or
in
test
mov
add
mov
inc
dec
mov
xor
lock
mov
push
pop
jle
nop
jo
xor
leave
ficoms
cwtl
mov
cmp
es
cltd
and
jnp
adc
jae
pushf
xor
test
lds
sub
xor
into
xchg
inc
je
xchg
shlb
dec
jne
mov
add
mov
add
movsl
jmp
js
add
mov
call
mov
or
or
pop
jle
js
cmp
dec
out
jle
mov
pop
test
int3
movsb
cmp
enter
jle
cltd
jecxz
xor
ja
insb
sbb
stc
lock
sub
mov
jb
lret
dec
cmc
fwait
cmp
add
pushw
leave
dec
out
sub
xor
dec
popf
xor
inc
adc
add
ret
movsl
mov
pop
lea
push
and
outsb
lea
jbe
pop
and
je
fmul
mov
pop
cmp
push
or
rolb
xor
lret
sbb
mov
xchg
repz
jmp
fmull
scas
and
inc
sti
call
aad
adc
test
cmpsl
jne
sahf
jle
in
popf
sti
out
cmpsb
rolb
outsl
dec
adc
test
popf
lea
dec
imul
mov
cmpsb
cmp
push
add
daa
leave
lret
dec
sbb
repnz
xchg
adc
mov
push
rol
cmpb
out
aam
cwtl
xchg
sbbb
hlt
mov
sub
cmpsl
sarb
inc
push
out
call
cmc
mov
insl
and
mov
mov
es
dec
and
ja
roll
push
inc
test
movsl
ss
inc
xchg
mov
jo
sbb
xor
in
cmp
xchg
jne
lret
lea
pop
orl
loop
dec
push
or
jo
jmp
push
fxam
jg
or
pop
ret
dec
iret
jno
inc
and
fisubrl
test
rcrb
lahf
aas
add
cwtl
shrb
fadds
daa
dec
sahf
jp
jo
ret
add
enter
leave
in
mov
mov
test
xor
push
lock
add
addr16
xchg
lret
xlat
cmp
mov
push
mov
ja
sbb
mov
add
pop
mov
adc
iret
in
les
test
sbb
fsubrl
aas
scas
ljmp
dec
stc
sub
dec
push
aaa
sbb
fcmovu
mov
cmp
subb
mov
mov
addr16
sahf
adc
pop
ficoms
or
fadds
mov
ljmp
pusha
pop
mov
out
bound
xor
xchg
scas
jp
fucomi
and
xlat
cli
fdivp
jae
cmp
xlat
mov
sbb
inc
mov
lods
call
in
push
daa
inc
mov
xchg
jecxz
push
and
dec
ret
loope
mov
jp
adc
or
xlat
sbb
push
pop
push
mov
aam
hlt
xor
push
sub
js
ret
pop
out
add
lcall
negb
mov
pop
push
xchg
rcrl
pop
test
popa
xchg
xchg
mov
xor
push
xchg
cmc
pop
cmpsl
push
push
sti
mov
popa
mov
fnstcw
mov
ja
or
jge
jo
dec
iret
es
out
pinsrw
add
in
jb
jmp
xor
jb
push
jo
adc
bound
lods
addr16
adc
ja
and
xor
adc
fdivrl
sub
repnz
inc
std
arpl
adc
push
xchg
lahf
les
movsl
push
cmp
sarl
repz
xchg
daa
leave
or
inc
push
sub
je
or
pusha
fisubrl
dec
imul
gs
outsl
adc
in
sub
lcall
aam
adc
cli
sbb
aam
fisubrl
mov
jmp
out
add
jecxz
dec
xor
xchg
adc
mov
imul
scas
cltd
psrlw
mov
sbb
mov
outsl
jbe
lods
ljmp
inc
or
hlt
jnp
jmp
xchg
cli
add
das
je
or
mov
shlb
mov
js
jl
or
pushf
dec
mov
shlb
pop
mov
mov
xchg
push
add
clc
dec
out
imul
sub
or
adc
out
mov
add
sbb
ror
xchg
and
sahf
cmp
cwtl
into
adc
in
inc
or
movsl
fistpll
test
push
outsl
push
and
xchg
fidivs
ret
push
adc
bound
cld
andl
sub
xchg
stos
jns
jmp
push
and
or
enter
idiv
rorl
push
inc
xorl
inc
addr16
movsb
lcall
xchg
mov
xchg
or
jge
mov
cmpsl
sbb
stos
daa
xchg
je
pushf
push
movsl
xor
fsts
shr
fisubs
adc
sbb
aaa
inc
pop
push
test
mov
std
jmp
push
adc
hlt
fsub
repz
add
mov
pop
add
sub
mov
mov
popa
mov
xor
xorb
dec
sbb
add
sti
stc
fs
mov
fstpt
popl
lods
adc
pop
xchg
push
cmp
dec
mov
cmp
shl
js
hlt
pushl
sahf
jb
pop
ja
mov
pop
inc
push
and
bound
ja
inc
loope
cltd
or
jb
sti
pop
mov
fxch
lock
mov
mov
ljmp
mov
add
cmp
and
cmpsb
aas
and
hlt
cs
cmp
mov
pushl
cmpsl
or
push
cmp
adc
jno
cmp
cld
call
loopne
mov
mov
mov
or
aas
outsl
fstpl
rcll
xor
lret
leave
cmp
pop
gs
mov
fstpl
adc
and
add
mov
mov
mov
enter
sahf
mov
cltd
jecxz
mov
in
or
xchg
sub
mov
mov
push
int3
push
movsb
gs
xor
mov
out
icebp
add
movsb
insl
mov
cmc
clc
fs
xor
divl
mov
cltd
insl
push
fsubs
insb
push
pop
dec
in
dec
inc
sub
in
outsl
cli
loope
xor
add
in
mov
les
mov
xor
or
in
into
dec
inc
sub
dec
insb
xor
or
sub
adc
shr
movsl
enter
lret
inc
das
xor
push
push
loope
leave
mov
lods
insl
cwtl
inc
enter
mov
and
push
mov
ljmp
in
movsb
push
mov
fwait
add
dec
xchg
mov
out
and
adc
cmp
std
mov
bound
imul
iret
adc
xchg
ficoms
jmp
outsb
inc
pop
in
cltd
cmp
orb
cmp
xchg
sbb
pusha
cmp
and
adc
enter
adc
xchg
mov
pop
cmpsb
inc
fwait
or
mov
lea
in
sub
repz
push
mov
jne
ja
mul
call
popl
gs
jge
mov
mov
sub
mov
xchg
dec
jle
jg
out
mov
push
fwait
pop
lock
mov
or
jne
mov
repnz
inc
add
pop
cli
ss
pop
ret
insl
scas
mov
push
das
mov
imul
fildll
mov
dec
dec
inc
loop
pop
les
ljmp
roll
pop
dec
jge
sbb
movsb
xorb
ffree
addr16
stos
repz
test
inc
stc
mov
fistpll
mov
inc
sahf
out
aas
jnp
add
mov
outsl
lods
in
adc
push
int
pop
push
sarl
aaa
addr16
push
das
dec
and
mov
mov
mov
push
ja
rep
or
pop
mov
jns
xor
mov
xchg
bound
xor
xchg
push
dec
xor
divb
repnz
pop
mov
stos
or
leave
mov
adc
jle
adc
mov
loop
ret
sti
dec
jge
data16
cmc
sub
imul
movsb
pop
call
out
iret
xchg
xchg
cltd
lret
jl
and
cmp
js
fistl
jmp
sub
add
je
clc
loopne
sub
jb
dec
aam
xchg
xor
inc
xchg
xchg
cmp
push
dec
pop
adc
adc
jnp
mov
push
sub
xchg
jno
and
add
adc
mov
scas
addr16
xchg
or
stc
mov
dec
fildl
and
ds
and
sub
insb
sub
xchg
cmp
xlat
mov
pop
xor
adc
push
mov
pop
shlb
mov
insb
sbb
ficoms
lock
das
out
dec
xor
in
loop
scas
xchg
stos
int
iret
fwait
xchg
leave
sbb
mov
push
les
mov
xor
or
sbb
xchg
cmpsl
stos
mov
jl
fcmovne
inc
ja
mov
dec
inc
leave
scas
xor
std
mulb
je
jne
outsl
and
mov
push
ja
xchg
or
mov
sbb
mov
repnz
jecxz
cmpsb
cmp
hlt
dec
xor
cmpsl
mov
lds
ucomiss
pop
add
xor
daa
mov
test
add
dec
mov
jo
jl
xlat
sahf
inc
cmc
enter
pop
mov
mov
ret
js
jmp
jp
movsl
xchg
or
push
aad
and
lods
lods
pop
inc
test
fldl2t
int
pop
pop
stos
dec
js
out
cmp
pop
aad
fidivl
mov
loopne
shlb
add
cmp
add
sbb
cmp
mov
in
es
pop
xchg
inc
adc
in
dec
adcb
bound
inc
mov
pop
pop
imul
xor
sti
stos
clc
mov
push
mov
cmp
or
fmuls
fs
outsl
adc
jg
leave
and
sbb
cmp
out
inc
lock
cs
sub
mov
lods
mov
repnz
and
call
mov
hlt
jns
inc
fcmovnu
repnz
dec
xorb
js
pop
pop
aas
aaa
test
sbb
sub
cmp
lods
xor
mov
push
and
dec
out
outsl
negl
pop
cltd
mov
test
or
xor
or
outsl
dec
mov
sarb
cmpb
std
insb
xor
data16
and
mov
popf
lret
and
jl
add
inc
imul
ret
icebp
subb
pop
pusha
mov
jbe
ret
aad
inc
stc
fucom
xor
inc
iret
fabs
lahf
inc
icebp
push
xor
sahf
jecxz
jge
ljmp
cld
and
testb
repz
or
mov
arpl
mov
popa
or
test
pushf
xor
in
xor
outsb
jge
xchg
xor
out
gs
cld
pop
mov
sbb
out
sub
sub
fstl
jb
mov
push
xchg
cmpsb
mov
lods
repnz
pop
pop
sub
aad
ficomps
pop
pop
orb
js
shlb
pusha
push
xor
orb
jbe
pop
pop
cwtl
out
cmp
divl
push
pop
out
lcall
mov
notb
ret
inc
loop
push
or
mov
fldenv
hlt
xor
stc
pop
mov
clc
outsb
es
cmp
xor
add
dec
jb
mov
je
repnz
jnp
loop
sbb
mov
into
mov
push
xor
inc
xchg
outsl
xorl
lock
cltd
jnp
dec
fdivs
lcall
mov
ret
pop
sub
or
push
jge
sbb
sbb
ss
or
ja
bound
and
or
lret
fldl
or
insl
sub
dec
inc
xchg
sbb
mov
stc
push
cmp
push
cld
fmull
stc
pop
and
lea
loop
jae
add
mov
xor
mov
cmp
or
movsb
outsl
ret
cmpb
lret
add
xorb
fs
xchg
jp
push
mov
pop
adc
cwtl
pop
jbe
data16
xor
sbb
insb
cmp
test
jle
lock
enter
pop
add
pop
or
sub
dec
mov
sub
jbe
sahf
imul
outsb
add
pop
push
jge
mov
int3
jge
xchg
aad
je
jae
inc
repz
sub
dec
cmp
out
push
ret
nop
push
sub
pop
mov
adcb
bound
xor
pop
addr16
icebp
shlb
cmpsl
sub
imul
fisubrs
cmp
rorl
test
add
ds
testl
iret
cmp
int3
shrl
in
jae,pt
rclb
lock
sub
test
popf
icebp
inc
push
lahf
cmpsl
cmp
dec
out
das
dec
jb
adc
jmp
addb
lods
cli
pop
addr16
mov
push
and
mov
push
daa
mov
lahf
orl
pop
push
jnp
das
loopne
adc
clc
lods
bound
rolb
push
jne
jg
stc
jle
addr16
cmpsb
sub
cmpsl
dec
out
insl
mov
cwtl
sar
fcmovnb
jg
pop
jno
jno
jnp
push
pop
add
xlat
mov
in
int3
lahf
jns
pop
xorb
mov
mov
pop
xor
push
jmp
sarl
fldcw
inc
mov
clc
pop
loopne
outsb
cmp
addr16
lahf
xchg
lcall
lahf
mov
cmpsl
dec
or
cmp
cmp
out
jl
xor
xor
xor
cmc
inc
in
daa
test
sub
nop
cmp
dec
lods
fcompp
adc
aam
dec
test
std
movsb
hlt
mov
lea
loope
adc
gs
push
std
inc
pop
xchg
cli
fdivrs
mov
ds
mov
in
test
jne
ror
xchg
out
addr16
cwtl
jmp
add
enter
mov
fldenv
push
inc
sahf
pop
jl
xor
aad
stos
out
or
jb
jge
xchg
jae
shl
adc
cmp
xor
movsb
mulb
arpl
jnp
jae
iret
cmp
mov
cmp
and
pop
test
sub
mov
cmp
xchg
enter
outsb
ds
jge
fmulp
and
mov
daa
popf
pop
add
mov
loop
pop
or
push
mov
outsl
cmp
pop
fcoml
add
addr16
pop
hlt
aad
repnz
cmp
mov
mov
xor
inc
call
pop
imul
dec
sbbl
in
lock
jmp
mov
popa
push
repz
xchg
push
xlat
xchg
pop
mov
dec
adc
loopne
dec
fnstsw
jae
or
or
xchg
adc
push
dec
ret
push
push
int3
sub
dec
cmp
cmp
xadd
pop
sub
pop
fwait
pushf
pop
inc
out
ljmp
push
cmp
imul
push
mov
add
jno
dec
ljmp
lock
inc
popa
call
push
jg
jo
inc
lcall
cltd
lret
xlat
push
jmp
popf
gs
nop
sub
cltd
push
loopne
mov
sbb
sbb
daa
push
xchg
pop
xlat
inc
push
andl
loope
jo
fstpt
imulb
enter
test
movsb
gs
addr16
push
nop
fidivs
aas
sub
and
lret
imul
pop
or
ss
cmp
push
xor
mov
jmp
cmpsb
ficoml
xchg
insb
addl
jmp
push
jmp
in
cmp
fcomps
int
pusha
aam
xchg
push
jge
ljmp
cli
push
cltd
filds
mov
rorl
mov
mov
or
add
and
cmp
xchg
shr
push
jb
dec
insl
shll
jbe
dec
call
add
mov
sbb
push
loope
in
xchg
stos
mov
mov
ficompl
dec
pop
movsl
dec
loope
loop
cmp
aam
cmp
xor
enter
addr16
jecxz
xor
jno
dec
xchg
call
cmpsl
dec
jns
and
mov
adc
mov
mov
aad
mov
lea
lods
aas
aam
in
jno
aad
or
mov
dec
jb
jo
xchg
scas
sbb
pop
mov
mov
and
cs
xlat
add
push
cmp
jns
std
lods
inc
sub
scas
ret
push
int3
sar
pushw
mov
ds
adc
outsb
and
add
test
jle
daa
push
mov
ja
mov
popl
cmc
lret
push
jl
stos
mov
in
cltd
mov
scas
xchg
sbb
rolb
pop
mov
pop
push
stos
jno
out
mov
push
sbb
cli
push
push
cmp
addl
cmc
cmc
out
sub
or
data16
sbb
dec
js
mov
ds
xor
mov
add
test
adc
add
add
ret
pusha
mov
andl
mov
pop
push
xor
push
sti
cmp
jno
mov
mov
sub
push
jnp
cmp
push
hlt
xchg
rclb
sbb
and
add
inc
push
icebp
in
sub
shlb
and
sbbb
lcall
bound
in
or
add
call
lods
insb
add
in
jge
mov
icebp
stos
and
outsb
cwtl
add
push
ds
lret
jnp
xchg
shr
push
xor
shl
push
jge
add
test
fs
nop
ds
in
dec
pop
fiaddl
or
xchg
adc
imul
and
jp
pop
lock
inc
ja
add
fmuls
rorb
in
and
nop
out
push
testl
sbb
in
ljmp
mov
mov
sub
cmpsb
adc
arpl
fistps
bound
pop
and
out
push
push
push
xchg
int
sbb
mov
sub
cmp
lock
push
mov
stc
mov
clc
push
cmp
mov
nop
dec
fsubl
roll
add
xor
insb
lahf
scas
ret
xchg
sub
addr16
aam
push
repnz
mov
cwtl
aad
mov
mov
enter
icebp
cmp
dec
lea
mov
sbb
mov
mov
and
icebp
pop
pusha
push
xor
mov
xchg
or
pusha
pushl
scas
jb
and
xor
jne
insb
xchg
dec
add
add
jmp
xchg
jbe
push
mov
adc
mov
sub
mov
mov
arpl
addr16
jecxz
insb
pusha
mov
repnz
loope
ja
clc
add
loop
inc
ss
sahf
dec
mov
adc
lcall
es
pusha
push
add
lds
adc
sarb
jecxz
jmp
addb
xor
std
cmp
icebp
in
xchg
stc
mov
in
fmuls
out
or
aas
ja
pop
test
repnz
push
pop
dec
push
pop
pushf
repz
sbb
nop
inc
jl
xor
jbe
cmp
pop
fcoml
xchg
push
ss
jne
push
in
pop
stc
pop
das
mov
int
mov
mov
jne
jbe
out
mov
jnp
addr16
pusha
popa
rcrb
pop
and
mov
in
ljmp
push
lahf
scas
push
mov
or
repz
adc
out
rolb
mov
jb
sub
pop
add
cmp
stos
test
test
pop
outsl
popf
cmc
add
je
xchg
in
push
push
test
cmp
dec
out
pusha
xchg
pushf
shll
sub
dec
movsb
mov
or
test
push
cmp
push
xlat
rclb
lds
lods
cmp
mov
outsl
add
jo
cmpl
aad
mov
pop
in
fcoms
add
jmp
subl
inc
aaa
pop
js
add
fisubl
push
inc
cmp
jne
enter
jg
pop
push
add
pop
add
mov
jb
cli
pusha
ret
lcall
fstpl
outsb
ljmp
mov
inc
xor
andl
outsl
not
sbb
add
aam
adc
dec
mov
insl
fisttpll
loope
mov
pop
test
std
pop
test
fs
sub
push
cmp
push
int3
xor
lret
or
ret
sub
push
ss
jns
arpl
mov
enter
filds
sbb
mov
call
mov
jbe
mov
movsb
mov
xor
mov
int3
or
xor
cmp
cmpsl
sub
fmuls
jmp
mov
mov
push
xor
popa
cmp
adc
pushf
in
lret
mov
push
xchg
and
outsl
jp
test
aam
and
insb
cmp
movsb
mov
js
scas
je
pop
iret
cmpsb
mov
in
popa
push
loope
fisubrs
sub
fstpl
nop
mov
scas
mov
mov
pop
scas
fistpll
leave
pop
cmc
mov
test
pop
cmp
inc
jbe
jmp
rcll
movsb
push
xor
and
pop
lcall
push
sub
cmp
rol
out
sub
shl
mov
and
add
outsb
push
mov
push
fbstp
mov
jns
cwtl
xchg
addr16
jns
inc
mov
dec
lods
mov
aaa
push
xor
xor
mov
jge
jmp
rcll
test
into
enter
jmp
sbb
data16
sub
adc
lods
add
mov
mov
sbb
push
jge
pop
sub
jmp
dec
iret
lahf
sub
or
mov
ret
lea
mov
sub
jp
cmp
adc
into
jge
cs
xchg
push
inc
inc
pop
pop
daa
adc
push
lcall
push
mov
and
sbb
inc
stos
in
sub
jp
dec
cmp
xchg
push
sbb
jnp
lea
loope
inc
mov
add
cmpsl
push
dec
lock
fisttps
cs
fdivr
xlat
push
adc
fwait
inc
dec
fstp
pop
add
inc
call
mov
and
fisttps
lods
fnstcw
adc
pop
adc
inc
inc
cld
sbb
mov
mov
mov
shrl
shlb
filds
pop
fucomi
cli
add
loop
push
add
lods
insl
and
lret
or
jg
cld
xchg
andb
ljmp
sbb
jno
add
out
push
mov
cmp
sub
dec
or
and
testb
insb
mov
inc
cmp
inc
cs
adcb
outsb
lcall
ja
sbb
divl
lds
lret
adc
pop
xchg
insb
xchg
dec
jae
xor
mov
test
aas
cltd
xchg
je
or
lock
stos
add
sbb
inc
pop
jmp
xchg
test
push
push
out
mov
ret
lret
movsb
lcall
cli
into
insb
shll
fldenv
ljmp
jne
popf
cmp
cmp
rcr
outsb
jge
fdivl
add
jbe
xchg
call
test
mov
loope
sbb
in
dec
push
push
pop
lahf
adc
add
lock
or
cwtl
xchg
pop
jb
adc
call
ret
sbb
xchg
inc
test
inc
xchg
pop
cmp
mov
mov
mov
or
xor
sub
dec
cmp
mov
jnp
rol
mov
sarl
fwait
pop
rcrb
loope
daa
mov
inc
movzbl
dec
ljmp
cmp
xchg
lods
lret
imul
cmp
movsl
in
sbb
pop
cld
add
scas
push
xchg
ljmp
or
sub
out
pop
rorb
imul
xchg
mov
pop
iret
pop
lds
dec
inc
sar
fcmovnu
fstpt
sub
stc
inc
push
ja
adc
repnz
mov
add
xor
and
jnp
fwait
sub
mov
aas
out
pushaw
mov
mov
jmp
rclb
push
xlat
idivl
jnp
ljmp
je
push
jmp
jnp
push
dec
jae
lahf
pusha
xchg
push
add
cmp
xor
xlat
push
mov
lahf
pop
shrb
xor
jb
pusha
in
fsub
sarl
pushf
xchg
ljmp
cltd
insl
adc
xchg
inc
shll
mov
push
xor
xchg
cltd
jno
arpl
mov
mov
xchg
mov
adc
and
sarb
lods
xchg
xor
out
sbb
cmp
lret
insb
repz
or
adc
xchg
pushf
andb
add
loopne
cmpsb
scas
sub
jb
idivb
inc
and
sub
fcmovnb
sahf
xchg
test
daa
gs
insb
mov
cmp
pop
imul
mov
lea
mov
mov
lock
pusha
pop
sbb
jmp
test
rorl
out
sub
ucomiss
jbe
add
inc
or
movsl
or
and
push
pusha
jmp
cltd
mov
es
scas
xacquire
xor
popf
aad
inc
mov
inc
inc
mov
and
fxch
incl
lcall
pop
cmp
loope
jge
aas
loope
jne
mov
mov
mov
out
push
outsb
jle
jns
push
les
lahf
xor
es
jmp
jl
xor
add
lds
rorl
loope
or
lret
add
fisubl
ss
es
lds
rcr
add
sbb
or
and
div
jbe
das
insb
popa
sub
sub
subb
pop
aad
ss
sbbl
jno
adc
in
fstps
add
mov
mov
xor
xor
pop
jbe
mov
sbb
jnp
add
es
jne
inc
pop
add
hlt
repnz
cmp
inc
adc
or
mov
dec
cmp
pop
jbe
hlt
push
mov
adc
xor
movsl
test
inc
int
inc
arpl
stos
cwtl
xchg
xlat
rorb
or
mov
lahf
ficomps
fcmovu
imul
out
arpl
add
aas
js
sub
test
cmc
mov
pop
add
xchg
popa
stos
or
mov
xchg
xor
lcall
out
mov
loope
mov
sub
jl
lock
add
xlat
push
mov
scas
adc
cld
cmc
call
xor
mov
mov
sub
fldl
xorl
dec
jp
mov
int3
xor
fcom
into
dec
cmp
pop
jmp
xchg
imul
addb
pop
test
std
fsubs
pop
pop
sub
adc
push
insl
adc
push
bound
test
mov
mov
xchg
in
int3
mov
insl
jmp
gs
mov
jmp
fsubrs
cmp
sub
addb
aad
cmp
loopne
dec
pop
out
loope
std
lret
cli
nop
icebp
cli
push
push
fwait
es
pop
dec
js
gs
mov
xchg
xchg
sub
cli
aam
jl
into
movsl
xor
lret
in
cmp
xchg
pushf
and
mov
fsubrp
pop
inc
mov
pop
jnp
mov
shr
mov
add
ss
mov
sub
ljmp
aam
outsl
mov
mov
cmp
inc
mov
sbb
icebp
pushf
push
decl
xchg
ficoml
xor
int
sub
push
fxam
pop
dec
xchg
shlb
mov
in
mov
lcall
inc
xchg
test
es
or
cmpb
outsb
lcall
loopne
mov
hlt
clc
movsw
pop
dec
sub
and
sub
sbb
lea
jge
fdivs
repz
cmp
add
test
and
xor
call
pushf
es
divb
adc
cmp
inc
daa
mov
stos
xor
popf
xchg
mov
test
mov
pop
pop
xlat
popa
stc
daa
adc
mov
xor
ljmp
mov
jge
scas
dec
dec
xor
push
idivl
hlt
in
or
pop
not
movsb
push
imull
cmp
jg
repz
je
cmp
fistl
push
jo
dec
stc
popa
or
fimull
cs
jp
jns
push
xchg
push
outsl
aam
cmpsb
mov
fldl
sbb
addr16
iret
and
mov
repnz
daa
lcall
test
dec
mov
xor
mov
mov
out
push
scas
push
jecxz
hlt
out
xor
mov
idiv
push
aam
jmp
xchg
xchg
std
lret
mov
movhlps
cltd
insb
std
xor
lret
mov
lds
sub
adc
insl
ret
cmp
shl
push
test
push
shlb
icebp
bound
into
adc
leave
loop
mov
test
sbb
sub
js
pop
jp
push
mov
cmc
stc
xchg
pop
sarb
cmp
push
stos
std
adc
push
les
mov
mov
cld
cmp
sti
adc
push
popf
sbb
int
xchg
mov
scas
stos
or
xor
js
lea
ja
mov
movsb
adc
loop
mov
and
imul
lods
pop
fcmovnbe
add
adc
pusha
js
outsb
stos
outsl
push
popf
mov
and
or
cwtl
or
or
pop
stos
add
jecxz
push
cs
daa
call
mov
int
or
xor
fiadds
cmovae
dec
ds
sub
xor
cmp
pushf
sub
mov
daa
test
imul
inc
lds
adc
xor
xchg
cmp
cli
add
mov
jmp
xbegin
std
and
enter
mov
shlb
jae
lcall
dec
das
adc
aaa
adc
movsl
imul
mov
loope
bound
idivb
inc
cmp
xor
inc
jle
xor
loope
adc
test
and
xor
mov
add
stc
jmp
jmp
js
add
xor
scas
push
enter
negl
mov
hlt
fsubrs
popf
jo
xor
and
push
jl
pusha
push
sbb
jg
ds
adc
inc
ljmp
and
rorl
cli
loopne
jb
mov
pop
clc
ret
adc
sub
into
testb
mov
adc
dec
sub
ljmp
lods
es
jmp
ss
push
adc
push
mov
pop
mov
add
cmpsb
sub
mov
iret
adc
cli
test
test
test
and
pop
shll
pop
out
decb
aad
jns
or
or
daa
mov
and
jno
pop
insl
loopne
mov
mov
cli
lds
cli
mov
inc
mov
and
xor
lcall
aam
push
add
jbe
mov
scas
push
pushl
or
pop
sub
insl
dec
mov
jnp
subb
lahf
sub
push
ret
outsb
das
cld
in
add
push
xchg
fstp
dec
and
shll
cmp
mov
daa
jb
pop
movsb
mov
arpl
jg
push
sbb
adc
mov
negb
mov
shrb
aas
iret
and
or
xchg
mov
push
sub
mov
mov
cmc
push
adc
negl
movsb
sbbl
std
xor
xchg
fisubs
push
cmpb
std
mov
push
adc
test
cmpsl
inc
inc
aaa
test
mov
loope
ficoms
loopne
test
and
shrl
jge
add
dec
xchg
pop
popf
es
push
dec
xor
movlps
mov
xor
in
xlat
inc
mov
push
jb
rorl
lahf
sbbb
popf
mov
rclb
roll
mov
mov
call
rcll
sti
jnp
add
fs
out
dec
mov
imul
ss
stos
cld
sub
sub
stos
test
fnsave
icebp
xchg
hlt
aas
or
sbb
inc
test
out
pop
jns
je
icebp
inc
pop
mov
jp
ja
pop
mov
ret
iret
dec
out
lcall
ss
fnsave
sub
xchg
fimuls
inc
push
mov
cmpl
add
xchg
and
incb
mov
adc
push
adc
popf
ret
jecxz
sbb
mov
inc
ljmp
movsl
pop
pushf
push
jns
outsl
xchg
cli
and
cmp
fcmovnb
push
sbb
inc
xchg
decl
xchg
pslld
fildl
or
bound
sbb
sub
into
dec
gs
roll
fs
cltd
jo
cmpsb
mov
lret
jo
test
or
lock
nop
pop
leave
jbe
testl
push
mov
cmpl
std
iret
push
xor
dec
mov
out
pusha
xchg
inc
or
cmp
fsubs
xchg
ret
push
insl
js
fldcw
daa
or
rol
cmpsb
es
mov
divl
cmp
xor
sahf
lcall
xchg
push
xor
movsb
xchg
hlt
dec
loop
cli
sub
stos
lret
ds
test
psllq
inc
cmp
sbb
dec
and
xor
xlat
cmp
push
or
push
mov
inc
and
push
jecxz
pop
dec
std
mov
aaa
pusha
jnp
nop
popa
jge
xchg
in
cmp
mov
jle
frstor
mov
repnz
js
sbb
jle
jecxz
sbb
inc
push
or
xchg
sahf
mov
insb
xor
pop
and
mov
sarb
sub
cld
mov
push
out
iret
rcl
lock
adc
pusha
jg
xor
push
sub
jge
jne
out
pop
push
dec
repz
and
cld
mov
lock
fmuls
dec
aam
js
les
clc
ficomps
cwtl
mov
loope
xchg
fcomp
cmpsb
xchg
mov
lods
enter
out
cmp
cwtl
les
imul
les
xor
sti
sub
push
fdiv
loop
les
jl
cmp
rorb
pop
imul
movsl
insb
js
xor
cmp
repnz
xchg
cmp
fdivrs
jne
add
and
cwtl
jb
jno
jns
mov
andl
push
cmp
mov
or
mov
jno
mov
in
out
mov
inc
xor
jae
xor
lock
fwait
mov
lret
test
lea
mov
mov
xchg
xchg
sub
insl
xchg
sbb
out
int
fnstenv
fadd
xchg
dec
xor
fistpll
xor
shrb
pop
fdivp
ret
pop
ja
adc
inc
jmp
popa
push
loopne
adc
cmp
cli
scas
popa
jnp
mov
xchg
push
xor
push
mov
mov
and
out
lock
or
clc
out
add
pushf
stos
test
push
jo
cwtl
cmpsb
xchg
cltd
aaa
jge
xchg
icebp
xlat
or
xor
loop
pop
insl
jnp
sbb
shll
and
dec
adc
push
mov
and
lar
sbb
pop
xor
inc
stos
outsb
movsb
loope
adc
push
cwtl
adc
mov
cmp
xor
lock
mov
add
or
fsubp
cld
push
and
pop
gs
int
dec
inc
cmpsb
adc
mov
adc
sbb
ret
xchg
and
movsb
cmp
arpl
fsubl
repz
mov
mov
fisubrl
orb
xor
add
insb
out
dec
lock
adcb
mov
jle
push
dec
insb
inc
repnz
nop
in
pop
inc
popa
stos
ret
pushf
mov
mov
adc
pop
and
pop
addr16
cmp
cmp
pop
test
test
cmp
ds
sbb
adc
imul
xor
in
mov
imul
aad
pushl
xchg
dec
push
dec
jmp
inc
jns
cs
aas
lret
xchg
mov
shll
push
fsubrs
add
popa
mov
jmp
push
addr16
xchg
fcomip
mov
xchg
push
xchg
adc
xor
cmp
jp
outsb
jle
add
cs
add
dec
jbe
in
mov
sbb
xchg
cld
sub
pop
xor
icebp
xchg
popa
jb
inc
inc
xor
mov
mov
aas
in
mov
xor
stos
in
xor
pop
out
push
in
arpl
dec
mov
mull
in
dec
sub
sub
push
aam
pop
inc
rorl
mov
fs
lock
into
mov
jae
pop
gs
xor
and
pop
test
inc
mov
test
inc
loopne
scas
lods
dec
jo
fists
xlat
fisubs
cmpsb
int3
data16
jle
adc
mov
enter
mov
jns
push
jle
cmp
sbb
mov
push
stos
fnstenv
cmc
addr16
or
test
xchg
enter
xchg
or
push
setno
fldcw
mov
xchg
aam
push
int
inc
cmp
pop
test
out
cmpsl
lahf
sti
jge
cmpsb
mov
mov
arpl
mov
jle
fs
sti
mov
fnstcw
xchg
sub
int
sbb
mov
xchg
mov
fucom
andl
icebp
xchg
out
mov
xchg
jne
and
jg
fisttps
fs
shrl
add
repnz
mov
sub
std
into
cmp
std
or
jns
mov
adc
jg
lds
push
pop
mov
movsb
subb
popf
mov
das
notb
ja
inc
push
mov
pop
orl
xchg
fldl
int
adc
pushf
rol
and
inc
or
adc
xor
movsb
cwtl
arpl
mov
in
jmp
pop
test
mov
jno
mov
jno
xchg
dec
cmpsl
jno
mov
and
sub
mov
repnz
inc
das
jns
xlat
stos
cltd
jb
stc
pusha
fdiv
lock
fs
xor
inc
inc
imul
sahf
mov
lock
mov
mov
pushf
stos
mov
cmp
lahf
xor
xchg
divl
je
scas
jle
sbb
stos
xlat
adc
dec
dec
cltd
xchg
sub
xlat
repnz
adc
inc
adc
sarl
popl
mov
imul
addr16
cmc
push
mov
clc
ljmp
repz
adc
lahf
add
add
cmp
cmp
dec
mov
insl
jp
inc
pop
movsb
ljmp
sub
std
dec
lods
sub
out
sbb
cmp
rep
mov
jne
jnp
ljmp
outsl
incl
cmp
sub
pop
arpl
aam
xor
jae
nop
push
ds
in
mov
pusha
push
mov
dec
mov
jg
sbb
mov
sub
xchg
cmpsl
insb
inc
in
xlat
aam
por
pop
sub
lock
iret
mov
aas
or
inc
and
xchg
popa
pop
mov
inc
cmp
pop
jne
daa
adcl
xchg
inc
cld
and
and
outsl
daa
push
stc
lahf
jne
pushf
mov
aas
mov
cmp
in
call
leave
nop
xor
mov
push
sbb
jae
icebp
inc
dec
gs
dec
sti
and
cmp
sbb
xor
cltd
mov
lea
add
cwtl
xchg
inc
pop
dec
cwtl
lahf
lods
sbb
xchg
ret
cmp
fistl
push
inc
pusha
jmp
mov
enter
clc
mov
loopne
pushf
inc
dec
aaa
mov
in
push
setg
sub
jg
xchg
ja
out
push
rcll
aam
jo
push
popa
xlat
pushf
orl
inc
cmp
lcall
icebp
call
das
gs
push
jecxz
cli
gs
xchg
and
mov
mov
idivl
pop
adc
addr16
cwtl
out
ljmp
aas
or
sub
sbb
jl
or
ja
dec
pop
xor
sub
mov
push
mov
mov
int3
mov
push
lods
into
xchg
pop
cmpsl
js
or
jecxz
inc
aam
add
sbb
pop
inc
push
and
es
mov
dec
lds
fists
xor
jns
daa
push
xchg
cmp
fwait
test
ss
dec
jmp
jno
ds
adc
fnstcw
sbb
mov
je
xchg
stos
das
mov
or
and
adc
cmc
aas
jbe
sub
in
sbb
and
inc
adc
dec
call
movsl
cmp
jl
call
pop
adc
pop
fnstsw
sub
arpl
pop
out
mov
scas
dec
ret
stos
imul
sti
scas
xchg
mov
and
or
inc
jo
jno
and
shll
pop
sbb
mov
frstor
gs
jg
inc
mov
cmp
adc
dec
jmp
les
pop
add
js
mov
int3
repz
je
dec
xlat
int3
cmpsb
jp
enter
cld
in
cmp
mov
repz
pop
test
js
cmp
add
repnz
popa
ds
dec
imul
inc
cld
inc
lahf
nop
nop
andb
inc
loope
shll
adc
and
mov
sbb
test
sbb
dec
cmp
jp
push
cli
out
push
pop
nop
pop
call
insl
xor
and
or
add
inc
dec
sbb
push
insl
jne
cmp
mov
hlt
mov
mov
das
in
sbb
mov
jl
ret
aad
insl
icebp
das
inc
push
clc
pop
iret
out
aas
rol
and
push
call
pop
shlb
mov
push
insl
popf
cltd
shl
cli
add
test
sub
push
mov
push
add
cld
sbb
cltd
mov
pop
iret
movsl
push
add
loope
insb
mov
mov
fcoml
jg
call
pop
sarl
xor
mov
push
add
fidivrl
dec
or
add
cs
xor
adc
cmp
shrl
and
xlat
sbb
push
and
or
lret
xchg
adc
add
out
loope
or
add
shlb
int
fs
push
stc
ror
cmpsb
inc
dec
dec
outsb
inc
fstl
fists
adc
add
jge
lret
lods
je
sbb
clc
lahf
push
ljmp
cmc
aad
xor
addl
cmp
push
xlat
push
repz
mov
ds
inc
in
xor
cmc
bound
in
out
jl,pn
push
adc
shlb
fisubrl
dec
jne
cmpsl
inc
and
sbb
sub
dec
cwtl
push
mov
pusha
mov
sbb
je
popf
push
movsb
add
ret
mull
xlat
cmc
lods
setbe
scas
mov
xchg
xchg
imul
jb
mov
outsl
jp
sbb
notl
lea
outsb
aad
push
scas
adc
and
or
test
jmp
adc
pop
and
hlt
cmp
movsl
les
sbb
inc
movsl
cmc
insl
hlt
test
add
xchg
pop
dec
and
icebp
xchg
sahf
shrb
pushf
out
pop
imull
shll
cltd
dec
sub
js
ds
add
int
testb
ret
and
or
jne
mov
movsl
bound
push
push
xor
pop
or
js
loope
dec
sbb
dec
sub
call
insb
inc
mov
cmpsl
xor
add
push
add
fadd
jns
xchg
test
sub
xor
jb
jmp
int
mov
xor
rcrl
or
pop
xorb
insb
hlt
xor
add
dec
popf
sahf
sbb
add
jno
sub
inc
jmp
jb
sbb
test
push
int
jb
popf
jge
sub
pop
lcall
mov
int3
xor
jb
stos
int3
or
sbb
out
mov
das
cmpsb
mov
push
iret
push
loopne
clc
cmp
mov
call
bound
addr16
sbb
inc
push
sbb
xchg
jg
jl
fcoml
test
and
or
sbb
lcall
fcomp
outsl
int3
mov
lods
push
sub
mov
nop
cld
push
xlat
mov
mov
add
repz
aas
sub
out
push
test
popa
outsb
add
adc
xchg
lahf
fcoms
outsb
jge
and
push
pop
in
mov
pop
fwait
aad
jmp
xchg
jbe
xchg
fbstp
pop
dec
mov
mov
mov
push
lods
inc
in
sbb
xor
out
fildll
mov
cmp
cmp
and
sbb
in
aad
lcall
je
mov
fstl
sub
sbb
cmpsl
sub
push
xchg
xor
sbb
pop
jb
inc
sub
pop
jns
jmp
mov
jae
std
movsb
mov
xchg
pop
inc
aam
sub
jns
shlb
cmpsl
stc
xchg
les
mov
pop
rorb
push
inc
xor
imul
cmp
popf
rdpmc
push
jge
adc
movsb
dec
mov
or
popf
push
cwtl
sub
sub
dec
add
jmp
inc
adc
std
jbe
adc
cmpsl
xchg
xchg
jmp
shrl
andl
push
pop
in
sbb
and
add
fwait
mov
and
daa
push
sub
mov
outsb
dec
xchg
xchg
pop
xchg
mov
int3
popf
faddl
or
lret
xor
inc
xor
lret
jne
mov
sub
inc
adc
dec
cmp
xchg
or
or
and
test
sub
jle
mov
inc
or
add
xor
sub
pop
mov
inc
mov
or
dec
adc
aaa
xchg
add
add
or
int
sarb
repnz
xchg
stos
jp
or
or
js
lahf
mov
adcb
or
loopne
int3
out
aad
int
mov
shrl
xor
clc
repz
and
stos
fdiv
imulb
push
jp
flds
test
push
mov
jne
lds
ficoml
xor
js
mov
pavgw
clc
pop
pop
inc
lods
imul
inc
loope
mov
pop
out
and
cmp
imul
shlb
out
fistl
pop
or
jb,pt
jle
das
mov
ficompl
fstpt
ret
bound
test
pushf
push
out
xchg
sbb
sbbl
divb
clc
and
sub
and
outsl
mov
mov
mov
and
add
pop
jno
pop
lahf
popa
out
popa
lret
lods
loopne
repnz
jl
cmpsb
push
add
sbb
pop
cmp
jge
ljmp
lods
lahf
and
xchg
mov
loop
daa
int3
in
inc
ja
jl
xor
arpl
mov
xor
mov
into
adc
mov
dec
aam
fucomi
fwait
scas
pusha
stos
cmp
enter
jle
repz
xchg
fldt
xor
pop
cmp
mov
add
add
aad
push
mov
inc
rcll
push
pop
stc
jnp
sub
loope
jge
aad
lcall
push
in
out
hlt
mov
cmpsl
loope
mov
mov
mov
mov
or
movsl
das
or
mov
sub
imul
out
adc
out
mov
movsl
lds
xor
or
dec
clc
jne
push
and
outsb
pop
or
scas
xor
sbb
fcoms
pop
mov
loop
inc
fwait
ja
add
sahf
add
inc
dec
mov
bound
rcrb
xlat
rol
ja
inc
into
mov
push
scas
ss
fstpl
outsl
xchg
testb
gs
lods
jnp
ljmp
xchg
mov
movsb
cmp
imul
xor
adc
lock
pusha
mov
aam
mov
ffreep
mov
mov
sub
inc
jmp
inc
cmp
mov
clc
into
call
shr
jbe
push
and
test
push
fsubr
mov
movsl
or
outsb
shrb
cmp
add
or
or
push
push
movnti
gs
xchg
mov
dec
dec
les
and
js
shrl
shlb
aaa
out
push
pushf
xor
lret
pop
jp
test
inc
mov
sub
xchg
jae
rcr
and
xchg
aaa
cwtl
test
jo
nop
push
popa
icebp
inc
imul
mov
lret
pop
mov
aam
out
lahf
add
jp
mov
xchg
jns
mov
insl
out
aad
fnstenv
fldenv
mov
mov
or
test
xlat
adcb
xchg
cmp
neg
loop
sbb
fidivl
mov
or
xchg
cmpsb
cmp
add
test
adc
es
iret
adc
sub
cli
xlat
xchg
jo
sbb
xchg
pushf
push
sub
mov
adc
mov
cmp
clc
pop
push
sbb
jbe
inc
and
fs
cld
xlat
or
aas
push
adc
rcl
cmp
push
in
push
lods
pop
sbb
cmp
sub
in
xchg
inc
xchg
lds
es
aaa
push
fcoml
inc
lahf
and
xor
cmp
sbb
popa
sub
sub
ds
out
das
call
in
shl
notl
and
fbstp
popa
mov
mov
xchg
cwtl
mov
es
sub
xor
add
pushf
inc
fwait
sbb
mov
leave
iret
lahf
xor
pop
dec
cmp
sbb
or
pop
mov
add
jl
lahf
mov
inc
sub
mov
mov
push
pop
lret
inc
or
out
pop
jle
jg
mov
xchg
lods
mov
leave
pop
aam
xchg
mov
fbstp
jg
jne
xchg
je
sbbl
sti
pushl
xchg
loop
pop
test
mov
mov
lcall
mov
popf
inc
inc
mov
fcom
dec
stos
shr
gs
shll
mov
movsl
movsl
lret
mov
push
mov
adc
jg
repz
and
iret
sbb
int3
jecxz
enter
cli
mov
pop
adc
rorl
fiaddl
filds
cmp
out
push
pop
pop
in
out
loop
or
pop
testl
cmpsb
adc
test
in
pop
inc
dec
mov
iret
push
push
sub
orb
fs
add
fildl
sub
mov
int
movsl
xchg
rcrb
jno
sbb
fldcw
jecxz
fistl
cmp
cmpb
popa
sahf
ja
sbb
fnstcw
in
jl
fmull
pop
mov
jne
jge
insb
std
imul
or
notl
mov
arpl
xor
inc
jbe
mov
and
sub
fdivr
jecxz
jg
cmp
push
sbb
mov
mov
int3
cmpsb
adcb
mov
popf
out
xchg
jae
jmp
mov
mov
lret
icebp
xchg
jge
push
cld
je
push
mov
data16
lret
inc
enter
dec
ds
mov
sub
sub
lea
xchg
push
xchg
pop
bswap
sbb
out
stc
add
dec
ret
or
cld
inc
sahf
fisubl
les
call
xchg
jmp
lds
sti
leave
pop
lock
xchg
and
and
shr
adc
repz
out
aam
xor
popa
cld
push
lea
or
sub
das
sbb
mov
pushf
and
pushf
xchg
rcrb
out
jge
fsubl
jbe
movsb
mov
mov
enter
xor
adc
or
mov
pop
and
sbb
ror
sub
stos
push
test
sbb
mov
sbb
mov
and
cmp
lods
insl
jg
xor
int3
lods
mov
pop
lahf
loop
xor
in
mov
push
jp
sbb
and
mov
dec
sbb
outsl
fwait
insl
clc
imul
out
das
pop
and
cmpb
adc
aaa
jle
addr16
rol
cwtl
push
je
mov
push
je
lds
fdivrs
sub
push
pop
dec
sbb
xor
sbb
int3
jb
cmp
adc
imul
xchg
adc
and
jbe
sbb
xchg
leave
sbb
jl
jno
shr
pusha
jmp
mov
xor
sub
sbb
jp
mov
jne
aaa
cs
adc
adc
adc
or
stc
mov
push
jmp
xchg
mov
lcall
dec
mov
cmp
inc
int3
mov
push
xchg
out
lcall
and
mov
pop
cmp
punpckhdq
sbb
push
push
push
dec
sbb
insb
mov
push
repz
jb
and
adc
out
push
cmp
add
jnp
rcll
cmc
adc
fnop
arpl
out
popf
mov
dec
lcall
jno
inc
ret
lret
inc
in
lret
xlat
shrb
cvtps2pd
stos
enter
sbb
nop
bnd
dec
leave
push
push
sub
adc
mov
adc
inc
adc
or
mov
stos
test
adc
inc
bound
inc
push
xchg
sbb
loopne
or
xor
mov
iret
jo
out
shr
pop
sbb
or
mov
notl
push
mov
pop
mov
lock
fsubrp
cmp
imul
adc
or
ret
popf
mov
push
cmp
dec
mov
ljmp
cli
push
add
adc
adc
sub
lret
lock
xchg
sbb
js
stc
jg
cmp
sub
mov
and
mov
and
mov
jl
and
ds
mov
orb
out
mov
mov
ret
lock
push
fidivl
enter
xor
mov
shll
mov
shlb
xor
sti
add
in
sub
pusha
xor
adcb
test
lods
fiadds
mov
bound
sbb
bound
xchg
fldl
nop
orb
cmpb
xor
imul
loopne
ret
jo
mov
jecxz
lret
hlt
mov
lret
dec
push
pop
lods
mov
popa
xlat
cmp
xchg
jns
push
xorl
mov
addr16
shrb
cli
js
mov
popa
rcrb
mov
popa
sub
in
cltd
loop
push
mov
insl
mov
adc
xchg
adc
mov
gs
dec
add
mov
jbe
xor
stos
dec
mov
mov
push
scas
adc
xlat
out
jmp
popf
jno
sbb
in
jo
iret
jp
bound
mov
jb
cltd
sub
xor
daa
adc
inc
jo
mov
xor
mov
and
loopne
adc
cld
insl
loop
push
fwait
sarb
push
outsb
cld
std
mov
xlat
and
pop
add
adc
or
lods
xchg
or
xor
pop
sti
popf
adc
scas
ds
adc
shrb
pop
nop
mov
sub
xor
pop
and
popa
sbb
shr
cmc
incb
or
dec
popa
push
cmc
dec
cli
fidivrs
ss
lret
aad
xchg
fstl
shr
repz
aaa
shr
stc
es
mov
mov
pop
push
xlat
xchg
jo
outsb
imull
loop
and
mov
jmp
xchg
pushf
es
pop
inc
test
mov
mov
mov
repz
ja
adc
mov
shll
in
dec
fcoml
push
sti
mov
inc
jo
xchg
add
mov
xor
inc
fistpl
xor
cmp
test
test
adc
push
push
push
xchg
push
sub
pop
shll
adc
add
rorb
mov
hlt
xchg
test
jmp
adc
cmp
movsb
cmp
xlat
xchg
aam
xchg
movsl
mov
xor
adc
fdivrl
ds
out
fnstsw
jne
push
je
mov
lea
mov
mov
pop
aaa
adc
loope
and
jae
arpl
mov
mov
sbb
cmp
rorl
cmp
inc
rcrl
mov
pop
or
sbb
es
sbb
lcall
inc
cmp
adc
xchg
push
in
push
lret
outsb
jbe
cmp
ja
jp
lods
icebp
sub
dec
rolb
mov
cs
fwait
push
mov
lds
inc
lret
or
pushf
into
jns
add
mov
fsub
mov
imul
das
jecxz
addl
out
and
loopne
subl
icebp
outsl
insb
mov
and
sbb
insl
xor
cs
insb
jb
loopne
lret
test
into
daa
ljmp
push
mov
nop
rol
sub
add
mov
stos
gs
into
enter
lods
xor
fs
aam
xor
lahf
sbb
cmpsb
mov
xor
jle
push
into
lret
test
and
stos
std
xchg
iret
xor
or
popf
jg
mov
dec
xchg
dec
out
adc
dec
mov
aas
sbbl
add
cltd
pop
pop
inc
pushf
popf
sbb
jns
sbb
mov
mov
mov
sbb
out
adc
imul
leave
into
xor
in
sahf
fdiv
addb
int
or
jno
sti
adc
cmp
sbb
lds
and
shll
cli
add
in
aam
daa
push
sub
or
pop
pop
xlat
call
scas
out
addr16
popa
neg
incb
mov
test
mov
jb
xchg
aad
jle
fs
and
jle
sbb
xlat
cwtl
xchg
jl
xchg
loopne
jnp
out
dec
ficompl
mov
pop
xlat
adc
ljmp
inc
xor
mov
inc
in
mov
push
adc
dec
andb
shll
mov
xchg
rcrl
push
jne
inc
loop
and
icebp
jb
call
xor
sbb
mov
es
mov
mov
int3
and
test
sbb
dec
adc
jbe
out
mov
sarb
ret
aad
cwtl
and
and
scas
xor
mov
inc
fwait
nop
adc
xlat
ljmp
and
shlb
daa
pop
push
adc
jp
std
dec
in
lods
movsb
fcmove
push
js
push
outsl
jnp
xchg
cmp
push
lods
cmp
mov
mov
sbb
incl
xor
aas
ret
xchg
inc
cmp
xor
aad
pop
mov
adc
rclb
stos
xchg
inc
loop
add
adc
cmp
pop
cmp
mov
shll
cltd
push
lods
mov
movsb
push
out
push
push
in
clc
and
mov
gs
cltd
push
and
movsl
es
dec
and
dec
daa
inc
cltd
aaa
and
push
repz
ss
xlat
mov
lods
into
dec
cltd
mov
loop
mov
cltd
jle
jbe
push
mov
jg
cmp
lds
mov
push
add
sahf
aad
popa
pop
je
jl
shl
cmpsl
les
dec
pusha
icebp
lods
out
fists
pop
outsb
xor
arpl
inc
jno
cmp
fistps
repnz
push
mov
jno
rcll
mov
in
lcall
mov
cli
xchg
xchg
fwait
ja
das
je
xor
test
dec
leave
sbb
jge
sub
ljmp
inc
iret
repnz
pushf
enter
xchg
xchg
jg
mov
loop
into
fiadds
call
lcall
pop
xchg
out
ja
push
mov
mov
scas
mov
mov
mov
gs
test
in
pusha
and
xor
mov
sub
hlt
dec
cld
jl
mov
lcall
jp
ficomps
int
jno
scas
pop
outsl
cmp
popf
hlt
imul
out
fdivs
cmp
popf
sbb
xchg
mov
mov
iret
rorb
lretw
mov
push
sbb
pop
sub
loop
rcrb
push
adc
bound
cld
outsl
test
jg
int
cwtl
cltd
push
dec
jne
jl
movsb
insl
mov
inc
pop
xchg
xchg
mov
xor
pop
cld
or
push
lods
jp
sbb
sub
jmp
xor
movlps
add
sub
cmc
pop
aaa
stc
rorb
mov
call
xor
push
fmul
jle
sahf
mov
out
in
sbb
inc
enter
ret
sub
es
cmp
mov
jo
xchg
sbb
dec
push
aad
xchg
jg
mov
jmp
dec
pop
sbb
push
ret
add
and
popf
lret
jae
sub
mov
jmp
insl
jl
das
fildll
jmp
shrb
lcall
push
shlb
fiaddl
cmp
xlat
test
mov
stc
imul
mov
jb
aam
mov
stos
fildll
sarl
cli
imul
in
repnz
seta
dec
fsubs
pop
xor
mov
jl
lds
add
lret
rorb
lods
divl
sti
js
mov
xchg
iret
cmpsb
mul
ljmp
sbb
clc
imul
add
rorl
xchg
in
or
in
movsl
mov
insl
add
inc
xor
sub
loope
cmp
push
fstpl
mov
out
aaa
dec
mov
imul
sbb
add
hlt
mov
push
mov
mov
popf
xor
push
xchg
push
ss
push
int
mov
jo
out
mov
dec
addb
pop
mov
out
mov
imul
push
mov
leave
mov
push
stc
jb
and
jbe
insl
daa
lods
loop
add
je
jg
push
sub
jge
push
pop
lret
dec
bound
pop
add
lea
ret
push
sub
inc
rsm
and
add
das
mov
mov
out
cmp
ficoml
push
or
push
out
fsubs
push
ja
xchg
jno
adc
mov
ret
mov
fnsave
jle
in
sahf
jp
pop
jmp
add
cmp
icebp
das
adc
test
lret
inc
fists
clc
dec
adc
jmp
fistl
pop
or
lods
push
push
or
cmpl
cltd
sti
pusha
cwtl
mov
add
adc
repz
jnp
iret
push
lods
mov
sub
addr16
sub
mov
repnz
mov
mov
and
out
sar
adc
aas
enter
cmpsb
cmp
in
pop
out
dec
dec
add
enter
test
subl
adc
dec
lahf
pop
ret
push
inc
and
mov
adc
adc
lds
aam
sub
ljmp
repz
clc
nop
sbb
sti
pushf
outsl
in
lea
rolb
dec
xor
hlt
jns
hlt
push
jge
pop
cmp
clc
and
mov
or
xchg
sub
mov
adc
mov
sbb
or
pop
stos
pop
xor
jne
data16
pushf
xor
into
sbb
cli
sbb
mov
int
inc
jle
fnstsw
cltd
lret
call
test
test
add
aam
xor
or
add
inc
movsl
filds
add
test
mov
adc
push
adc
in
in
pushf
sbb
mov
pop
pop
inc
pop
mov
fisubl
cmp
jg
loop,pn
lret
push
jle
std
addr16
scas
cmc
icebp
push
ljmp
mov
mov
inc
dec
xor
sbbb
popf
icebp
inc
or
xchg
ljmp
inc
xchg
sahf
fidivl
sub
pop
addb
insb
ja
mov
mov
mov
aad
sbb
fisubrs
xor
push
mov
out
lods
xchg
stc
pop
mov
mov
jae
lret
pushl
lahf
daa
xor
and
xchg
js
icebp
jno
sbb
sub
push
addr16
push
sub
jne
sahf
push
int3
cmovl
inc
cmpsl
test
inc
ljmp
push
pop
dec
jg
fcoml
in
ret
xchg
int
enter
and
in
icebp
mov
push
arpl
lcall
sub
inc
sub
fnclex
mov
js
out
push
mov
fldl
je
decl
pop
jg
loopne
jns
xchg
push
inc
sbb
sbb
xchg
pop
pop
repnz
cmpb
jo
xchg
xchg
push
lea
xor
call
push
cmp
out
rcrb
jge
stc
push
and
mov
and
adc
in
imul
loope
adc
dec
sub
iret
bound
inc
inc
push
test
add
sub
fdivl
pop
add
mov
mov
pop
adc
xor
imul
aad
clc
ja
push
push
or
adc
xor
mov
jp
test
loope
dec
jbe
mov
leave
mov
call
je
sarb
mov
mov
test
pop
pop
imul
push
popf
mov
cmc
dec
jge
mov
sarb
cltd
xchg
out
push
stos
or
mov
fsubrl
cmp
fwait
xchg
sbb
mov
stos
ja
or
shrl
push
add
sbb
std
je
aas
mov
cwtl
dec
or
dec
hlt
lcall
pop
cmp
jle
sbb
inc
stos
jbe
jb
sub
xor
or
jo
inc
hlt
sbb
notl
add
rcrb
testb
push
mov
and
inc
xchg
dec
test
mov
push
xchg
xor
test
movsl
fwait
mov
dec
cmp
xorl
mov
add
mov
add
lahf
sub
push
inc
pop
lods
pop
outsb
mov
sub
adc
xor
xchg
movsl
push
sarl
int3
in
aam
lahf
addr16
sub
rol
push
mov
jbe
xlat
lcall
xchg
mov
and
into
int
mov
push
cmp
mov
add
jns
mov
iret
loopne
jl
cwtl
adc
push
incl
mov
pusha
xlat
pusha
push
mov
mov
cmp
push
and
sbb
lock
pop
cmc
std
and
mov
and
xchg
mov
cmp
mov
scas
inc
lea
inc
movq
xchg
xor
xor
mov
or
mov
repz
or
cmp
pusha
dec
adc
pop
loope
test
or
cs
out
ljmp
orb
or
in
push
mov
pop
xchg
or
mov
inc
xorb
mov
inc
inc
adc
bound
sbb
sbb
push
and
and
cld
mov
flds
inc
in
into
es
out
movl
dec
pop
jl
dec
push
in
mov
out
push
cmp
and
ret
aas
mov
mov
add
aam
inc
outsl
ret
aas
mov
sbb
loope
fildl
ret
sub
mov
sbb
jbe
es
or
dec
pop
mov
push
and
sub
push
hlt
inc
aad
pop
movsb
and
adc
mov
enter
xchg
sub
js
out
bound
pop
cwtl
icebp
xor
js
dec
sub
or
pop
adc
mov
push
jbe
aam
inc
into
bound
inc
sbb
pushf
enter
mov
daa
lds
inc
sahf
dec
xchg
mov
shll
stc
jle
cmpsl
mov
lret
sbb
adc
sbb
ja
mov
loope
popf
es
cmp
pop
sub
push
push
insl
loope
xor
sub
into
mov
jmp
or
and
out
mov
jbe
adc
sbb
rol
cmp
inc
sub
fnstsw
aad
push
test
lods
lahf
fs
imul
int3
inc
add
push
pop
sbb
adc
push
cli
push
ficomps
mulb
icebp
sub
icebp
dec
std
xchg
xor
pop
sbb
lea
xor
mov
cmp
fmuls
push
cs
mov
imul
xchg
out
insl
adc
sbb
test
popa
push
dec
push
pop
mov
jge
push
daa
mov
in
or
ja
pop
push
push
cs
enter
imul
test
aad
cmp
hlt
mov
mov
xchg
in
add
in
ss
mov
jl
mov
or
xor
cli
push
stos
dec
dec
cmp
cmc
insb
fstpt
jg
sar
addl
repz
mov
cwtl
arpl
jl
cmpsl
adc
invd
sub
xor
roll
ficoml
test
ljmp
sbbl
int3
sub
aam
jg
cli
cs
popa
mov
jae
mov
mov
nop
mov
push
testb
sbb
cwtl
cmp
inc
dec
out
sbb
out
sub
mov
lods
lret
mov
push
xchg
dec
int
push
ja,pn
push
scas
mov
xchg
add
mov
cld
insl
mov
pop
out
mov
push
jns
js
mov
jb
mov
adc
mov
lea
pop
in
sbb
in
sbb
stc
clc
dec
mov
movsl
mov
mov
cmp
cmpsl
pop
and
cli
xchg
ss
or
sub
iret
fnstcw
jb
test
fstl
imul
pop
cwtl
xchg
push
movsb
dec
les
jnp
jb
pop
cmp
mov
jmp
fwait
adc
cwtl
aam
aad
fdiv
clc
aam
outsb
sbb
jp
add
mov
popa
dec
sti
push
lods
mov
jb
in
stos
int
inc
jl
xlat
inc
jge
push
lea
mov
xor
cmp
xor
rclb
fdivrs
mov
inc
outsl
repz
fcmovne
add
cli
sub
push
ljmp
imul
lcall
js
rcr
inc
stc
dec
pop
shr
fimuls
mov
jae
outsb
test
cmpsl
xor
push
xchg
sub
pop
dec
add
popa
movsl
scas
mov
les
sahf
jmp
mov
lret
lods
push
mov
adc
fisubs
inc
jnp
cmpb
adc
jmp
ss
jns
or
test
mov
movsb
mov
push
dec
lret
dec
mov
push
data16
push
sub
xchg
xchg
jg
push
pop
loope
lock
scas
inc
jecxz
mov
dec
xor
pop
xchg
sub
scas
fcom
add
inc
sarl
gs
pop
pusha
inc
xchg
mov
cmp
mov
movsl
shr
stos
or
stos
or
rorl
cwtl
iret
push
mov
dec
pop
xchg
je
popa
imul
cli
into
ficoms
pop
cmp
xchg
shr
bound
aaa
or
jb
scas
push
xor
leave
mov
inc
dec
xchg
clc
cwtl
push
stc
jmp
sub
test
lcall
xor
nop
popf
das
mov
js
in
jb
push
add
cwtl
or
outsl
jns
jecxz
fimuls
cli
mov
mov
test
pop
pop
lds
leave
cli
xchg
mov
dec
inc
outsl
iret
pop
movsb
jmp
inc
cltd
push
pop
ret
inc
mov
call
sbb
sbb
icebp
and
mov
mov
sbb
ret
lods
fbstp
mov
cld
lcall
cmp
push
push
pop
sarb
ss
add
insb
dec
jns
iret
and
mov
adc
jmp
fxam
jbe
testl
pop
or
mov
rorb
rep
dec
daa
loopne
mov
xor
mov
ret
mov
bound
push
lea
push
mov
cld
mov
mov
push
cmp
xchg
inc
push
mov
push
sub
xchg
xor
adcl
or
jo
and
dec
mov
xchg
fsts
outsb
adc
movsb
xchg
std
push
int
mov
mov
into
in
cltd
lret
mov
les
sti
sub
mov
clc
pop
movsb
insb
orl
inc
push
shl
ja,pn
fisttps
mov
das
push
into
test
pop
sub
cltd
mov
or
imul
loopne
add
xor
xor
mov
dec
pop
xor
fnstcw
mov
sbb
movsl
dec
jno
cld
pop
xchg
push
lcall
ss
sbb
inc
xor
and
mov
mov
cmpsb
sbb
ja
sti
push
push
jmp
out
adc
std
into
mul
lock
aad
jecxz
cmp
push
cmp
cmp
insl
sbb
xor
jg
int
pop
imul
xchg
mov
mov
xchg
scas
repnz
jle
imul
sub
stc
jle
cltd
lea
xor
xchg
inc
ds
adcb
sbb
addl
mov
dec
in
dec
data16
fucomi
lds
add
lds
jl
jp
add
mov
inc
xchg
nop
mov
sahf
mov
fidivrl
cmc
rcrb
aas
adc
sti
xchg
aaa
outsb
repz
outsb
pop
adc
push
push
xlat
mov
movsb
fwait
push
pop
das
xlat
jge
and
or
pop
orb
add
or
or
pusha
loopne
jae
stc
iret
mov
bound
lret
decb
lahf
movsb
out
fsubrs
push
iret
mulb
sbb
push
dec
aas
aam
es
sub
pop
xchg
push
imul
lret
andl
fdivrs
push
lahf
sahf
inc
jne
ja
int3
push
pop
adc
int
orl
jp,pn
in
popf
test
call
adc
test
xorl
mov
bnd
ljmp
cld
and
sbb
push
idivb
cmp
inc
pop
mov
pushf
aam
mov
rol
testl
in
mov
cltd
xchg
sarb
test
shll
lods
repz
mov
cli
arpl
ja
mov
and
lcall
outsl
or
cli
fcmovnbe
movsb
mov
cmp
imul
xor
cmpsb
int
adc
inc
add
cmp
fwait
sub
popa
js,pt
mov
sbb
je
nop
leave
sbb
push
test
ffreep
push
pop
mov
or
lods
rcl
mov
dec
divb
or
push
loope
sarb
out
push
jg
adc
sbb
pop
mov
in
mov
xor
cmpsl
inc
pop
shll
pusha
fsubl
mov
xchg
push
mov
cltd
out
jns
and
loop
cmp
ror
sbb
loopne
push
mov
mov
dec
xchg
insl
lods
or
xchg
cs
mov
jp
loopne
lods
mov
cmp
push
imul
pusha
mov
ja
push
inc
adc
dec
icebp
fisubrs
and
or
add
pop
movsb
cmp
aaa
mov
mov
loop
cltd
mov
pop
movsl
mov
push
dec
mov
lds
popa
bound
or
loopw
cwtl
shr
inc
das
add
mov
and
push
jmp
or
outsb
pop
dec
sbb
icebp
mov
data16
cwtl
jne
sub
push
lret
std
rclb
fildl
lcall
add
cmp
notl
fdivl
loop
jb
pusha
fnstsw
loop
inc
mov
leave
add
pop
ret
dec
push
imul
popa
ds
dec
test
outsb
sbb
jecxz
mov
dec
jns
and
shll
cmc
or
rorb
stos
dec
rol
pop
xchg
or
xor
xchg
cmpsl
push
lock
mov
cmc
imul
lods
dec
inc
scas
mov
sub
lahf
dec
gs
and
mov
sar
movmskps
push
stos
inc
push
lcall
mov
and
les
js
cmp
cmpsb
jg
xor
fwait
nop
les
jmp
sub
movsb
cwtl
sbb
lods
js
xor
cmp
add
popf
pusha
out
jg
mov
subb
sbb
dec
or
mov
test
jo
sar
push
mov
nop
ror
and
push
aaa
jne
popf
xchg
fwait
les
pop
vmovss
js
lahf
jmp
jp
add
push
jns
jo
xchg
std
in
push
or
dec
lcall
sbb
andb
enter
and
inc
gs
cmp
pop
scas
pop
and
inc
sbb
les
js
fimull
mov
imul
jle
mov
mov
aam
pusha
cld
testb
pop
lret
or
insl
cmp
pop
fmuls
stos
sbb
adc
idivb
mov
stc
jg
js
cmp
jo
loop
inc
adc
jecxz
cs
xchg
sahf
inc
add
cwtl
mov
lcall
pop
sbb
fidivrl
sub
or
iret
jl
sbb
cmpsb
push
push
leave
into
pop
dec
ja
aad
mov
inc
jae
jae
pop
test
xor
jg
dec
and
aad
pop
mov
jecxz
xor
xchg
push
xchg
and
les
xor
or
pop
das
xor
dec
arpl
mov
dec
mov
out
out
mov
jnp
sub
or
stos
jl
pushf
mov
adc
xor
mov
lds
dec
das
xor
lahf
dec
inc
scas
pop
dec
adc
sub
or
mov
mov
inc
jns
adc
std
or
jle
cmpsl
mov
lds
push
xchg
cmpsl
shl
lahf
jo
in
int
push
lods
imul
lds
test
dec
sahf
or
les
out
scas
cwtl
mov
dec
push
xchg
xchg
xor
jmp
mov
rcrb
sub
ret
add
fistpl
popa
push
fisubrl
or
xchg
and
ret
xchg
movsl
jo
mov
cmpl
insl
dec
enter
push
mov
xchg
in
out
das
shrl
out
iret
test
mov
jecxz
cmp
mov
hlt
cmp
pusha
sahf
sub
push
xchg
add
and
push
or
cmp
sbbb
add
repz
xchg
adcb
mov
bound
cmpsb
push
push
in
mov
cli
aad
mov
enter
xor
popa
repnz
in
push
adc
pop
and
ret
cli
sub
and
imul
jae
mov
sub
cmp
out
jg
push
jbe
mov
cmpl
ljmp
sub
sub
adc
cmp
mov
and
lds
popa
ds
das
addr16
mov
dec
dec
pop
xchg
add
xchg
push
inc
stos
xor
adc
mov
pop
les
push
fs
dec
mov
jnp
add
xchg
loopne
push
addr16
bound
cvtdq2ps
fldenv
xchg
xor
dec
sub
and
icebp
mov
mov
out
inc
mov
cmp
insb
cmp
cmp
dec
xor
mov
mov
jbe
add
repnz
repz
mov
adcb
xchg
test
out
or
fidivrs
mov
testl
pop
inc
or
popf
adc
daa
xor
rcrb
mov
pop
pop
je
mov
mov
cmp
xchg
dec
xor
fldl
xchg
clc
lcall
lcall
addr16
push
fisttpll
ret
testb
sbb
add
jns
sti
adc
dec
adc
test
decl
push
sbb
pop
add
sarl
addr16
leave
push
cltd
mov
xchg
mov
dec
mov
icebp
jmp
repnz
push
cmp
inc
inc
inc
xchg
out
daa
fnstsw
mov
mov
popf
pop
lods
stos
insb
fcoms
mov
or
cmpsl
mov
lahf
xchg
push
fisubs
arpl
mov
sub
mov
in
ja
sbb
and
sahf
mov
testb
jmp
shl
xchg
mov
xlat
add
outsl
mov
mov
push
mov
iret
scas
push
push
adc
push
and
fucomp
xchg
sub
cwtl
xchg
int3
lret
lret
pop
adcb
mov
sub
test
jo
ljmp
mov
std
mov
push
or
pop
ljmp
faddl
cmc
in
cmp
cmp
sbb
cmp
fsubrs
shll
fwait
or
mov
push
add
mov
dec
scas
stc
enter
stc
loopne
movsl
pslld
push
jb
or
out
bound
std
inc
fwait
mov
aas
xchg
test
push
pop
mov
xor
fisttpll
jge
mov
sbb
addr16
xchg
and
adc
imul
hlt
jge
aaa
xchg
fidivl
push
repnz
xchg
mov
xchg
sub
adc
aaa
fidivs
je
fld
ds
inc
cmpsl
ret
or
rcrl
pop
movb
test
mov
aam
ds
add
push
dec
dec
mov
test
icebp
fnsave
repz
call
add
in
mov
xor
or
add
inc
das
in
sarb
mov
call
mov
in
add
lods
test
aaa
inc
arpl
dec
and
filds
test
shrl
imul
cs
pop
or
fadds
mov
jb
mov
fs
movsl
adc
sarb
add
mov
fsts
into
mov
lock
bound
insb
out
aam
sbb
or
in
pushw
xor
xor
jno
and
jecxz
adc
rcrl
bound
je
pop
mov
daa
data16
mov
pop
icebp
xchg
xor
scas
dec
in
int
inc
inc
push
pop
call
xor
mov
ja
stos
icebp
jl
enter
mov
or
add
mov
push
add
push
xlat
jge
mov
fwait
and
push
lds
out
and
pop
in
sbb
hlt
cmp
lret
mov
jg
jcxz
in
jbe
push
push
add
call
push
jge
je
mov
repz
cltd
les
pushf
or
lock
je
outsl
repz
repz
xchg
sbbw
mov
nop
cmp
xchg
fwait
inc
fmull
pop
call
fldenv
xchg
jno
xchg
xchg
imulb
cmp
inc
mov
ret
jo
and
push
mov
xchg
enter
ror
das
inc
lds
vandps
push
int3
and
mov
mov
pushw
and
stc
test
shll
pop
jb
test
mov
mov
ret
pop
cmp
dec
iret
iret
cmovne
sub
mov
gs
or
jno
and
jl
xchg
jnp
out
add
imul
jnp
pop
push
enter
xor
inc
rorb
push
xchg
cld
stos
inc
mov
add
testb
pop
jns
stc
out
mov
aad
je
xchg
fimuls
mov
cmp
inc
xchg
dec
das
mov
lret
insl
mov
mov
mov
xchg
in
scas
test
cmp
aas
jno
inc
stos
in
pop
pop
cld
jbe
hlt
pushf
in
mov
fidivrl
movsl
pop
mov
popa
jp
and
mov
mov
push
into
and
mov
pushf
jle
jp
xlat
add
hlt
inc
lods
ja
ds
inc
xchg
push
movzbl
bound
and
lcall
adc
leave
jmp
push
popf
push
pop
movsl
lds
jle
fcmovu
movsl
mov
inc
pop
sub
pop
sbb
sub
repz
std
jle
push
pop
add
cmp
and
ret
dec
pusha
loope
adc
out
inc
lea
ja
jne
int
pop
xchg
push
popa
cmpsb
or
jge
cli
sbb
pop
adc
mov
test
jmp
jno
sbb
jle
out
cmp
and
ret
push
insl
lcall
pop
sub
inc
dec
idiv
or
nop
aas
stos
nop
and
or
imul
lock
mov
xchg
into
insb
inc
std
or
ljmp
push
push
xchg
add
xor
or
adc
mov
push
cmp
jp
push
push
outsl
or
in
aam
pop
mov
pop
xor
jns
mov
bound
sar
jp
fisubrl
popf
mov
jae
sbb
sbb
sub
bound
jp
mov
mov
pop
mov
movsb
addb
ljmp
add
out
inc
adc
out
dec
add
cmp
jo
jp
push
popf
jmp
and
dec
pop
js
adc
sub
mov
inc
adc
dec
jae
xchg
mov
push
stos
test
fsubrs
xor
or
inc
pop
and
mov
or
arpl
mov
cmp
dec
push
dec
pop
or
inc
pop
pop
iret
adc
or
mov
scas
in
lds
imul
lea
rcrb
push
cmp
insl
jecxz
mov
sub
push
pop
scas
mov
mov
shl
scas
into
aas
mov
rcl
stc
sbb
sbb
mov
push
jb
xor
aaa
push
dec
push
fbstp
in
loope
push
mov
mov
movsl
in
mov
int3
fstps
je
iret
mov
into
push
jge
stc
mov
scas
push
add
ja
inc
std
and
jo
xchg
adcl
imul
mov
cwtl
in
push
mov
jle
inc
inc
mov
addr16
jbe
fiaddl
fadd
in
jl
push
push
lods
mov
sbb
mov
cmpsl
scas
sbb
mov
cmpsl
sub
loopne
lds
aaa
push
dec
shr
pop
ljmp
sbb
aam
pushl
push
xchg
cmp
mov
mov
xchg
push
inc
jge
outsb
ds
push
and
mov
je
sub
aam
insl
clc
push
sti
out
or
imul
fldt
xchg
andps
cmpsb
mov
inc
enter
pop
outsl
divl
inc
icebp
sahf
stos
mov
shlb
cld
lods
frstor
ljmp
xor
in
add
data16
jle
push
sub
add
stos
xlat
lret
or
mov
xchg
fimull
jnp
pop
loop
mov
jmp
outsl
lahf
lds
incb
cs
inc
fistl
lods
push
inc
fidivl
jecxz
out
out
or
or
push
out
arpl
pop
gs
sahf
cmp
mov
mov
pop
add
xchg
mov
lods
mov
and
lret
mov
sbb
and
sbb
push
pusha
daa
mov
xchg
and
pop
ja
xor
movsl
adcl
xor
scas
pop
pop
jne
xchg
scas
lock
insb
dec
lcall
cmp
xchg
jp
pop
mov
iret
or
xchg
jg
sub
addl
mov
sbb
pop
push
mov
mov
jbe
cltd
dec
imull
sbb
mov
adc
faddl
mov
addr16
stc
dec
hlt
hlt
pop
mov
adc
cmpsl
ljmp
dec
and
mov
les
insl
cli
or
xor
push
call
jmp
or
out
insb
pop
or
fmuls
jae
or
lods
orb
nop
or
mov
cmp
cwtl
dec
inc
jno
and
xlat
in
jb
push
xor
xchg
insl
adc
or
mov
cmp
dec
adc
or
cwtl
fildll
jnp
shrb
lcall
and
dec
and
test
sub
leave
mov
push
pop
cwtl
mov
lock
les
inc
repz
push
sbb
jmp
repz
iret
in
jnp
cltd
faddl
in
dec
leave
add
jl
fs
fwait
sub
rorb
imull
and
xchg
cmp
out
in
cmp
push
icebp
pop
mov
adc
xchg
in
or
out
mov
sbb
cmp
nop
int
or
aaa
add
inc
adc
xchg
sahf
out
mov
shll
mov
push
mov
mov
lcall
shr
or
and
sub
push
adc
pop
rol
pop
out
into
leave
add
adc
imul
fcomip
popf
sbb
fwait
rcl
xor
mov
rol
cli
pop
push
xor
pop
and
adcb
cwtl
inc
mov
sahf
aas
ljmp
inc
mov
test
or
adc
cmpsl
dec
sarl
push
bound
or
or
adc
dec
rorb
xchg
adc
outsb
mov
jbe
inc
leave
clc
mov
gs
or
xchg
cmp
sub
add
push
cld
pop
nop
push
or
mov
mov
dec
rol
sbb
pop
int
pop
out
jmp
mov
aad
aad
jge
fucompp
mov
test
je
push
sub
xchg
rcrl
mov
loope
pop
dec
jae
sbb
adc
enter
movb
jmp
stos
mov
inc
mov
cmp
test
sti
adcl
test
jle
dec
fcoml
push
cwtl
mov
mov
sbb
lods
adc
sub
sub
jmp
aad
leave
daa
pop
xor
sub
sbb
hlt
xor
or
mov
fsts
das
dec
sub
aam
dec
test
push
mov
xchg
imul
adc
mov
inc
mov
shr
pop
jnp
dec
rcr
cwtl
inc
jb
push
pusha
sub
adc
outsl
and
mov
sbb
push
insl
pop
je
out
test
out
notb
out
xor
fsub
aad
jp
xchg
xlat
fbstp
xchg
lods
mov
pushf
jns
xchg
enter
and
addl
ja
push
cld
imul
pop
jecxz
jo
fisttpll
or
out
jno
xor
cmp
add
aas
dec
and
or
fistl
jns
jle
push
mov
adc
pushf
inc
add
push
add
neg
sbb
ret
cmp
out
mov
lret
aas
cmp
push
ja
out
rol
pop
test
dec
xchg
je
or
out
adc
push
sbb
jg
jle
pop
xchg
lods
jp
inc
gs
addr16
jb
adc
sbb
shlb
and
xor
xchg
and
or
leave
out
add
pop
inc
sbb
jo
and
js
add
je
shrl
lods
jno
mov
mov
xor
ljmp
xchg
pop
mov
pusha
arpl
ss
mov
test
lahf
adc
outsb
lahf
inc
mulb
add
ret
movl
pop
mov
das
into
xor
or
xor
mov
scas
and
jle
fcmovbe
cmpsb
out
popf
bound
into
and
pandn
cmp
pop
sti
test
xchg
add
sub
popf
insb
dec
out
jne
pop
outsb
pop
flds
call
mov
lock
pop
out
arpl
pushf
adc
add
cmp
int
inc
rcl
cmp
pop
loope
push
scas
mov
out
aad
mov
mov
mov
jnp
jg
pop
and
xchg
push
pop
mov
addl
adc
test
xchg
xor
insb
push
sbb
or
mov
or
push
cs
mov
pop
mov
pop
scas
dec
add
sbb
push
pop
arpl
mov
xchg
sub
or
inc
mov
pop
mov
xchg
aad
pop
mov
jmp
or
sub
out
cmpb
lock
loopne
sub
push
push
jae
mov
dec
dec
rclb
mov
sbb
loop
int3
cmpl
dec
loope
mov
fldt
add
sahf
faddl
les
arpl
adc
lds
push
call
rcrb
dec
out
jno
adc
xor
and
jg
lret
xchg
cmp
cwtl
add
mov
in
sbb
jae
into
sar
andl
inc
cltd
inc
and
lret
mov
or
movsb
mov
xchg
xchg
cmpsb
cmpsb
loop
pop
xchg
and
xchg
lock
xchg
mov
xlat
loopne
pop
push
ja
push
mov
pop
rcl
cmp
adc
int3
shl
push
loopne
insb
cmp
insb
mov
mull
sub
push
pop
scas
mov
push
mov
imul
cld
das
repnz
xchg
icebp
outsl
mov
mov
add
mov
insb
subl
imul
jecxz
sub
das
mov
cltd
adc
test
mov
adcl
mov
mov
icebp
mov
iret
xchg
in
pop
mov
xor
cwtl
sbb
and
xor
dec
les
pop
mov
cs
jns
mov
sbb
jb
ss
sub
adc
sar
xor
mull
mov
sbb
cmpsb
push
test
mov
and
pop
xchg
pop
inc
push
stc
cld
in
sub
mov
pop
add
push
movsb
inc
push
sub
or
les
jge
push
xor
je
pop
loope
jno
mov
mov
int
mov
insl
sti
test
jne
push
into
jnp
gs
ror
jbe
ret
or
mov
adc
mov
dec
shl
xlat
push
int
and
push
add
cmp
pop
inc
insb
leave
insb
fsubs
clc
dec
jnp
sbb
cmp
dec
cmc
fsubr
loop
int
push
rcrl
sbb
leave
or
jp
push
sub
loopne
add
push
mov
gs
mov
daa
and
imul
rcrb
pop
rcrb
test
mov
in
mov
cmp
push
repnz
bnd
pop
dec
jbe
add
mov
jmp
pop
loopne
xchg
xor
scas
stc
lds
out
das
scas
pushf
ss
lahf
mov
mov
stc
mov
and
or
push
sbb
in
adc
bound
push
mov
xor
mov
add
xorl
mov
adc
dec
xor
ss
and
test
ret
push
ret
dec
cwtl
int3
lcall
pop
push
imul
or
ret
call
shrb
das
inc
jnp
idivl
pop
pop
aam
xchg
dec
inc
mov
fs
push
in
xor
cmp
dec
xchg
adc
ss
icebp
adcl
inc
iret
pop
jb
add
cmp
xchg
cmp
loop
inc
xchg
cmpsb
pop
lret
mov
leave
scas
jl
stos
testl
pop
pusha
mov
out
scas
pop
adc
dec
arpl
inc
rorb
je
jle
cmp
repnz
out
and
lahf
out
insb
jecxz
mov
cwtl
shlb
and
sub
pop
movsl
push
or
adc
xchg
sub
push
pop
and
outsl
mov
fucom
cmp
bound
lret
and
mov
out
cmp
jno
mov
mov
mov
popa
mov
push
mov
arpl
cmpsl
ret
pop
mov
add
add
xchg
mov
outsl
or
or
jecxz
dec
push
inc
rorl
movsb
xchg
sbb
pop
cmpb
div
jo
jae
sub
mov
jge
cmc
std
out
xor
aas
adc
mov
mov
and
das
xchg
enter
add
arpl
mov
inc
dec
push
push
xor
xchg
or
fsub
ja
cs
pop
scas
mov
inc
inc
sbb
sbb
popf
filds
pusha
xor
cli
fbstp
out
adc
pusha
js
ss
dec
aaa
lea
sti
cmp
and
jb
push
mov
sti
aas
mov
mov
shlb
push
insb
les
adc
dec
push
mov
mov
popf
mov
mov
movsl
stos
pop
add
mov
lcall
andb
dec
xchg
insl
dec
mov
out
sbb
xlat
add
popf
jecxz
mov
ljmp
mov
sbb
nop
jp
adc
sbb
jo
jmp
and
lods
push
lods
stc
gs
nop
dec
cmc
loop
push
adc
js
rcll
xor
xor
sbb
or
inc
add
arpl
mov
out
cmp
mov
xor
sub
fidivrs
iret
pop
jbe
sbb
xor
gs
fsubs
int3
ds
mov
push
ds
sub
xchg
insl
je
sahf
cltd
into
mov
roll
shll
frstor
mov
lea
subl
or
lret
push
inc
into
popf
adc
dec
xchg
sub
daa
sub
fimuls
fidivl
inc
jns
sahf
cmp
dec
sbb
rcl
push
xchg
fisubl
or
adc
mov
das
insb
sahf
enter
lret
test
mov
cwtl
add
push
sbb
pop
lret
addl
xlat
pop
repz
adc
loopne
add
jg
push
loopne
imul
mov
dec
and
loopne
sbb
outsl
enter
xchg
cmpsl
mov
jae
bound
lea
dec
sbb
xor
push
or
test
inc
xchg
cwtl
sti
hlt
int3
lods
movsb
mov
ljmp
sbb
xadd
shlb
mov
fnstenv
push
ss
push
jp
mov
sbb
or
mov
loop
les
mov
lods
pusha
lods
push
jne
sahf
fistps
iret
pop
mov
cmp
xor
stos
xchg
jno
and
jp
cmp
mov
scas
xchg
dec
xchg
dec
adc
mov
lret
or
xchg
push
in
inc
loop
add
xor
flds
push
lods
or
xchg
popf
shl
mov
shlb
inc
fcmovb
lds
dec
fwait
mov
cmp
mov
and
repnz
mov
fwait
ret
fld
and
ja
cmp
leave
inc
xor
sbb
fs
cwtl
aaa
insl
inc
jle
rol
inc
leave
xor
loopne
xchg
or
scas
js
repz
xchg
inc
jo
inc
popa
add
xchg
pop
push
pop
add
and
add
pop
add
jnp
out
test
fwait
pop
nop
out
mov
mov
nop
mov
cmpsl
add
xchg
popl
outsb
sarl
imul
pop
fcomps
hlt
jmp
cli
lds
pushf
je
add
adc
mov
leave
pop
mov
push
xchg
loopne
sbb
push
push
lret
sub
and
push
cmp
push
fldenv
aaa
ljmp
cld
enter
sbb
call
cli
aam
and
or
pop
dec
out
sub
pop
lret
fisubrl
out
jl
or
dec
jl
xchg
mov
es
lock
mov
sub
xchg
and
sbb
shll
sub
fldcw
enter
jno
xchg
popf
xchg
fistpl
sub
aam
dec
pop
sbb
in
gs
mov
mov
and
sbb
dec
enter
stos
sub
dec
sub
orb
mov
dec
das
jmp
mov
add
in
push
mov
mov
mov
mov
push
push
outsl
mov
xor
push
ss
movsb
push
andb
cmp
xchg
jb
clc
movsb
xor
int3
push
mov
add
dec
ffree
call
jns
addr16
dec
xchg
hlt
fidivl
adc
cwtl
or
add
push
ja
int3
es
nop
sub
aaa
shrb
insb
mov
iret
or
push
ds
scas
mov
add
icebp
stos
repz
xor
repz
and
and
gs
mov
xor
out
lods
push
outsb
fbstp
stc
test
enter
sbb
dec
mov
loope
fucomp
pop
aad
rorl
jge
std
std
inc
inc
sub
das
dec
ficoms
mov
jne
test
xor
jp
xchg
loope
pop
fisttps
loope
pop
sti
cltd
sub
xor
jge
into
sbb
add
sbb
fs
adc
add
lds
sub
push
or
test
add
jmp
jno
sbb
ret
out
cmpsl
rcrb
mov
insb
jl
testb
sbb
cmp
je
gs
mov
test
addr16
xor
dec
mov
jnp
shlb
pop
loope
pop
fwait
iret
leave
cltd
mov
dec
or
daa
and
je
int3
and
out
xchg
cmpsb
pop
jge
push
push
or
lods
cltd
or
aad
mov
push
sub
adc
fwait
das
mov
xchg
sti
mov
mov
shrb
adc
push
repnz
inc
jns
dec
lcall
fxam
stos
add
sti
movsb
sub
sbb
add
rcrb
xchg
xor
popf
sub
jbe
jmp
jle
enter
faddp
add
nop
xchg
pop
fwait
mov
lcall
jmp
pop
fwait
sarl
fs
sti
lahf
lahf
pop
cmp
and
leave
add
ret
test
mov
cmp
cltd
aad
or
aad
in
sub
inc
icebp
mov
roll
inc
xor
dec
movsb
sbb
add
je
repnz
add
repnz
mov
xchg
addr16
dec
inc
xchg
nop
pushf
leave
mov
orl
cmp
push
loope
cmp
cltd
mov
lods
mov
lods
pop
jmp
mov
iret
adc
jo
or
dec
jb
lret
jbe
mov
add
pop
mov
ss
mov
popf
jp
sbb
xchg
push
xchg
aam
add
or
mov
sub
dec
rclb
test
loopne
aad
repnz
jmp
cli
loopne
cmp
loope
jp
out
adc
and
pop
jge
push
push
xor
inc
push
or
jae
pop
push
sbb
inc
ret
subb
sbb
pop
imul
dec
xchg
pushf
mov
aaa
inc
hlt
shll
negb
xorb
imul
icebp
in
inc
xlat
xchg
pushf
add
daa
mov
xchg
repnz
popa
inc
inc
add
hlt
push
adc
push
mov
fistpl
push
fucomp
cmp
pop
and
mov
push
rorb
xchg
call
mov
cmp
out
imul
nop
jb
clc
mov
sbb
lahf
push
adc
sub
lods
mov
pop
cmpsl
mov
inc
in
push
sub
mov
xor
mov
jne
push
arpl
inc
inc
cmp
addr16
adc
mov
in
xchg
out
arpl
adc
inc
push
lods
and
push
pushf
mov
xchg
lcall
xchg
stos
test
adc
or
sub
sbb
jne
fs
mov
in
mov
pop
dec
push
std
push
jae
sub
jecxz
subl
filds
daa
mov
push
dec
push
call
negl
enter
mov
push
imul
cltd
dec
add
xor
pusha
pushf
fwait
pop
clc
or
jp
jmp
rol
jnp
mov
arpl
push
sub
xchg
nop
or
mov
call
dec
cmp
dec
sub
jecxz
push
push
inc
test
rorl
push
fsubs
jl
loopne
aaa
outsl
add
xor
and
pop
mov
pop
xlat
mov
cs
jmp
sahf
dec
inc
rclb
pop
jbe
push
insl
push
and
mov
jns
in
mov
mov
rcrw
adc
xor
test
cli
pop
sub
and
sbb
jb
lret
scas
aam
test
repnz
sbb
js
xchg
xor
andb
ret
insl
cmp
inc
fildll
ret
cld
cmc
lock
mov
fiaddl
sahf
mov
push
push
xor
jne
arpl
sbb
adc
cmp
sbb
sub
test
inc
push
jg
shlb
loop
scas
dec
jmp
mov
sub
add
fldcw
or
and
pop
sbb
jae
xchg
divl
data16
sub
adc
out
fistps
and
push
out
das
sbb
mov
xchg
outsb
out
ffree
jno
cmp
out
inc
dec
loop
orb
cmp
mov
jp
adc
jne
jge
add
in
cmp
mov
adc
push
adc
shll
inc
test
gs
sbb
cld
popa
pusha
xchg
in
out
insb
out
and
js
aam
ja
jecxz
sub
mov
mov
pop
push
mov
cmpsb
and
int3
fwait
andl
cmp
pop
dec
ja
popa
pushf
repz
fldenv
sbb
in
fsubrs
mov
not
add
addr16
jns
and
add
std
cmp
enter
push
test
insl
lret
rcrb
jmp
dec
adc
sub
cmp
pop
sti
or
lret
xor
loopne
adc
add
or
dec
fldenv
cltd
addr16
mov
loope
ret
hlt
jle
dec
mull
imul
jle
adc
mov
sbb
jne
std
push
hlt
mov
push
xchg
or
test
inc
aas
mov
andl
and
int
jnp
das
mov
adc
fdivrp
inc
mov
es
push
in
repnz
imul
ja
cwtl
movsb
data16
xor
and
push
mov
mov
int
out
cmp
call
aam
test
out
sbb
sub
push
es
outsb
movsl
adcb
or
stos
ja
jo
push
ret
add
and
std
xchg
pop
daa
sahf
fistl
jae
pusha
xor
inc
add
xlat
test
sub
rcrb
cmp
adc
pop
fidivs
adc
pop
dec
push
mov
sbb
pop
mov
pusha
mov
sub
adc
ljmp
inc
cmpb
popa
adc
das
dec
scas
adc
ficomps
mov
or
in
adc
xchg
push
xchg
inc
sub
hlt
push
jb
sub
push
ja
imul
or
outsb
adc
adc
cmp
mov
call
or
push
xor
andl
lods
imul
mov
pushf
xor
push
repz
sub
pushf
cmp
push
and
sub
xchg
or
dec
mov
cmpsl
cli
lcall
fisubs
test
dec
aas
mov
sub
xor
or
jnp
stos
mov
fisubs
mov
jno
push
lret
ja
add
push
xor
add
inc
and
movsl
fildll
mov
dec
lret
and
mov
or
jnp
in
pop
adcl
repnz
out
inc
bound
dec
lock
jecxz
push
push
popa
pop
shlb
in
out
mov
sub
mov
sti
insl
inc
or
ret
sub
cs
xchg
jecxz
ficomps
shrb
jno
cli
pop
movsl
pop
scas
add
ror
sbb
ljmp
dec
out
aas
jg
lods
cmp
adc
outsl
rclb
sbb
fbstp
jbe
cmpsl
xor
jns
cmp
rclb
add
aam
mov
sbb
lock
js
scas
pushf
dec
cwtl
cmp
inc
mov
mov
mov
insl
jle
loop
mov
movsl
fisttps
sub
cli
adcb
adc
gs
jmp
fisttpl
cld
dec
push
pop
push
mov
data16
pusha
jp
sub
xor
adc
mov
fs
in
inc
sarb
pop
push
movsl
adc
and
push
pop
idiv
pop
out
and
xchg
lea
mov
mov
es
lea
insb
into
push
dec
les
xor
ja
mov
fiadds
insl
lods
inc
sti
dec
pop
cmpl
sbb
outsb
les
mov
fcomps
cmc
lcall
xchg
inc
and
inc
and
mov
and
sbb
fcompl
sahf
es
add
and
lcall
xchg
mov
jo
cmp
test
inc
in
inc
push
jne
sub
scas
dec
and
insl
scas
push
jns
sbb
adc
test
sub
mov
ja
cltd
mov
mov
ljmp
pop
loop
es
jne
pop
addr16
aad
jb
add
dec
js
insl
jne
or
mov
scas
jbe
pop
lods
push
cmp
or
jmp
mov
vandps
adc
imul
sbb
shlb
jnp
xor
mov
pushf
push
sbb
leave
xor
shr
aaa
loope
jecxz
sahf
iret
mov
insl
pop
in
sbb
insb
dec
mov
pushf
fdivrl
ljmp
insb
cld
and
fistpll
lods
inc
fs
sub
xchg
and
shll
dec
sti
popa
sub
sub
sub
lret
or
cmc
pop
outsb
adc
lret
xlat
xlat
cs
loopne
and
sbb
push
popf
fsubrs
pop
lcall
lods
stos
or
in
cli
call
cmpb
jnp
out
into
popf
sbb
push
imul
nop
into
push
sub
add
adc
or
fistpll
or
jmp
in
fisttps
fcmovne
pushf
pop
push
into
sbb
je
add
mov
xchg
dec
fadds
aam
add
inc
sti
pushf
adcl
das
dec
xchg
add
lahf
push
mov
lods
push
scas
add
movsl
jecxz
inc
cltd
pop
cmp
xchg
int3
mov
out
sbb
outsb
gs
fwait
das
fildll
dec
inc
add
pop
aam
dec
sbb
cmpsb
mov
cltd
cmp
inc
sub
push
adc
out
lds
cmp
cmpsb
cmp
shrl
cmp
pop
arpl
sbb
adc
sub
rorl
mov
push
add
xchg
std
pop
rcll
cmc
popf
out
fists
sub
jg
into
scas
xor
sub
jns
sbb
hlt
lds
hlt
push
bound
out
add
daa
test
mov
loope
ljmp
aad
push
movsl
das
int3
mov
fwait
movsl
fchs
jno
sub
mov
add
movsb
mov
fcoml
frstor
jecxz
sub
pop
jge
pushf
cmp
pop
xor
rol
sbb
mov
or
mov
lcall
ljmp
mul
mov
lods
rcrb
daa
inc
in
or
movsb
idivb
testl
in
into
decl
lock
push
push
push
loop
inc
std
xchg
int3
xchg
mov
pop
mov
test
xchg
add
mov
lock
int
push
pop
subl
lahf
xor
pop
jne
mov
mov
mov
out
int
add
enter
jmp
out
mov
mov
sbb
xchg
pop
repz
pusha
mov
jmp
or
jp
mov
xor
xchg
sub
les
sub
pop
push
pop
and
mov
mov
stos
push
fistpl
xchg
sbb
subl
fisttpl
inc
cmp
aam
or
sub
icebp
outsl
push
cltd
sub
jo
xlat
mov
fiaddl
push
lods
mov
mov
mov
jp
xor
mov
add
jmp
jne
mov
arpl
int3
mov
mov
in
push
adc
icebp
mov
dec
mov
ljmp
pop
imul
lcall
adc
sub
out
mov
lret
jg
nop
outsl
subl
movsl
cmp
pop
xlat
mov
xor
rcll
xor
xor
pop
bound
or
fnstsw
sub
push
or
rcrl
sbb
cmpl
mov
loopne
addr16
je
insb
sbb
ret
jnp
mov
stc
outsb
clc
je
ja
icebp
icebp
gs
mov
bound
jg
aaa
xlat
in
mov
mov
mov
popf
iret
fisttpll
ja
cmc
xchg
mov
les
pop
mov
idivb
arpl
ret
lahf
jl
out
mov
rorl
mov
test
ss
fbstp
lods
push
cmc
mov
jbe
mov
lods
je
push
pushf
lds
xor
ret
add
test
and
enter
loop
mov
xor
pop
dec
ss
dec
outsl
shrl
scas
or
mov
fidivl
pop
ret
lret
sbb
mov
aaa
nop
mov
rorl
jo
clc
xchg
mov
pop
negl
enter
push
sahf
mov
push
rorb
inc
ficompl
rcrl
imul
or
faddp
gs
lcall
movsl
xor
loope
push
mov
lret
mov
cmp
push
fs
mov
cmpsl
jo
lret
and
filds
and
into
ficompl
add
mov
and
jecxz
shll
inc
ds
stc
xabort
sti
sbbb
je
sbb
sub
cmpsb
cmp
dec
jno
push
push
push
adc
add
std
fistpl
lret
test
mov
mov
dec
int
rcrb
xchg
loop
iret
clc
testl
ss
mov
sub
fs
xor
push
lahf
cmp
hlt
xor
or
add
fisubrl
mov
jecxz
jg
dec
imulw
cs
cli
enter
dec
cmp
inc
mov
scas
and
adc
mov
sbb
dec
std
jo
jmp
cmpsb
mov
lods
push
mov
and
mulb
sbb
xor
fucomp
xchg
aad
movsb
enter
add
pop
call
jp
popa
jle
inc
addr16
shl
dec
mov
jp
inc
xchg
inc
pop
repz
jle
inc
pop
or
mov
xor
add
sbb
pop
mov
pusha
pop
jns
fstpt
adc
mov
push
jae
pop
fcompl
in
jmp
sbb
pop
xor
and
add
jb
push
cld
sub
sub
push
xor
mov
ds
xor
je
outsb
decl
int3
mov
sbb
outsb
mov
adc
enter
imul
or
push
cs
cmp
pop
inc
insb
cmc
sti
loope
push
lcall
sub
cmp
mov
dec
cmc
cld
sahf
idivb
sti
pop
les
mov
push
push
das
push
mov
sub
dec
sub
bound
mov
jne
cld
adc
shl
jg
cmp
lahf
push
je
sbb
lds
push
test
cltd
popf
jle
mov
mov
iret
loope
loopne
adc
imul
mov
push
out
pop
insl
in
js
out
loope
dec
sbb
xchg
adc
out
mov
je
add
add
sub
add
lock
lahf
push
inc
jne
sub
xchg
das
ss
sbb
imul
mov
sub
je
cmp
xor
arpl
mov
push
mov
dec
imul
bound
aaa
dec
mov
test
xchg
push
ja
or
or
pop
out
insb
inc
sub
jb
scas
mov
xchg
and
jp
jp
ret
jp
xor
test
or
xchg
popa
pop
sti
xchg
imul
mov
jnp
or
mov
dec
add
jg
hlt
sti
imul
movsl
negl
test
xor
fsubrl
test
sbb
sarb
pop
add
xchg
cmpsl
add
rcrl
and
out
mov
lods
mov
int3
sub
mov
pop
or
sti
inc
mov
sbb
popa
dec
call
mov
out
lock
mov
decb
xchg
add
outsl
movsb
push
push
int
dec
inc
sbb
cli
scas
adc
les
adc
push
std
mov
and
ljmp
jns
jne
xor
or
aas
push
test
and
ret
mov
push
push
dec
xor
arpl
dec
ljmp
pop
xchg
or
lahf
sub
sub
lods
rcll
aad
pop
push
arpl
mov
sbb
pop
test
fisttpll
ds
gs
push
leave
dec
shr
or
mov
mov
es
lahf
mov
mov
and
repz
mov
sbb
push
mov
sub
xor
jge
mov
clc
aam
xor
sub
lea
cli
pop
out
sbb
mov
xchg
pusha
setbe
out
mov
push
das
dec
ds
jne
sub
bound
cmpsb
jae
sub
push
sahf
loopne
xor
mov
movsb
push
mov
leave
jb
mov
dec
aas
into
xor
std
arpl
outsl
daa
dec
jne
stc
inc
fcomip
add
xlat
scas
mov
pop
lcall
lahf
xchg
cmp
xlat
js
cwtl
into
stc
ret
test
shrb
hlt
xchg
lds
je
pop
mov
or
iret
addl
fldcw
insl
mov
cmpsb
loopne
lret
cmp
jo
jl
or
popa
dec
jo
mov
cmpl
aad
inc
xlat
and
cmpsb
repz
aaa
pop
scas
shll
dec
sbb
test
in
insb
pop
pop
loopne
or
jge
mov
loope
push
lea
sahf
dec
jmp
jbe
cli
dec
push
or
lds
or
cmp
loop
pop
xlat
inc
pusha
dec
mov
jl
jno
stc
sub
cmpsl
xchg
dec
xchg
inc
sbb
faddl
lods
pop
aas
jb
popa
jmp
in
daa
or
sbb
insl
scas
push
enter
loopne
jl
xchg
add
add
pusha
cmpsl
scas
arpl
inc
lods
mov
test
das
add
call
sub
es
xchg
cmp
jne
in
js
xchg
dec
incb
jecxz
inc
xchg
insb
loop
push
ja
in
inc
jae
gs
inc
inc
es
test
mov
aaa
dec
enter
jecxz
sub
xchg
push
sahf
xchg
out
fscale
lret
jns
shl
pop
fmuls
inc
rcll
cmp
popf
popa
dec
shrl
cmp
or
push
cmpsl
jne
pop
adc
rcrl
or
sub
jae
jo
in
sub
nop
adc
rol
mov
sub
addr16
cmp
add
std
scas
mov
addr16
notl
push
jmp
mov
cwtl
cs
repnz
xchg
mov
outsb
js
sub
je
popf
jne
mov
or
mov
int3
rcr
lret
push
and
add
mov
mov
dec
mov
inc
data16
stc
mov
or
push
insl
mov
xor
pop
sub
xchg
fdiv
xor
xlat
xchg
add
les
imul
add
mov
xor
jno
cld
jno
jecxz
sahf
push
mov
aad
mov
in
xlat
xchg
adc
mov
mov
sub
jl
sub
fs
cmpsb
dec
cmp
pop
mov
jo
inc
xchg
xchg
mov
testl
dec
mov
dec
sub
cmp
repz
fadds
inc
scas
rorb
fdivrs
mov
or
or
in
inc
mov
fldl
add
mov
leave
and
pop
dec
ss
push
jb
loop
cmp
cld
shll
sub
mov
out
lea
adc
xchg
xor
mov
jmp
sbbl
mov
stos
lahf
jnp
mov
jge
add
xchg
sub
pop
std
mov
pop
sub
push
js
xor
ss
mov
sub
sbb
jp
dec
add
pop
in
pusha
mov
sub
in
jmp
and
mov
xchg
cmp
data16
ret
or
ja
sub
jmp
inc
mov
ret
std
sbb
mov
sbb
enter
je
adc
xchg
mov
bound
test
xchg
loop
cmp
cld
sub
fwait
xchg
enter
mov
dec
cmc
gs
gs
adc
xchg
arpl
push
popf
clc
dec
fadd
xchg
push
mov
mov
push
sbb
pop
inc
mov
lcall
inc
inc
xchg
lret
sbb
addb
xchg
lret
pushl
je
pusha
roll
mov
lock
sbb
subb
cs
outsb
ret
ds
shlb
xor
daa
or
sbb
mov
fiadds
pop
add
icebp
dec
pop
daa
xor
mov
lret
push
xchg
adc
pop
inc
nop
pop
jp
leave
dec
cmp
or
inc
in
xor
jae
pop
ret
sbb
pushf
cmpsl
sbb
aaa
xor
xlat
stos
out
adc
or
pop
sbb
sub
fldenv
clc
xchg
mul
mov
pop
jno
sub
lret
inc
xchg
dec
lods
loope
mov
pop
daa
xchg
pusha
fcomip
addr16
mov
sbb
push
shrb
sub
test
push
push
imul
cmp
cmp
arpl
into
cmp
aam
loope
roll
pop
sarb
loopne
testb
movsb
rcrb
cli
and
into
dec
sbb
nop
stos
jb
repnz
loopne
mov
shrb
data16
popa
sbb
stc
scas
sbb
jae
cmpsl
mov
pop
jg
shll
aaa
add
xor
jl
cld
xchg
fs
cmp
insb
and
add
ret
mov
out
xchg
or
and
mov
ret
push
sbb
cmc
daa
mov
xchg
scas
gs
sub
mov
jo
scas
cmc
test
fwait
fldcw
pushf
cmpsb
or
mov
jle
xor
sub
ret
outsl
adc
inc
stc
shrl
loope
shl
inc
pop
mov
pop
das
mulb
and
jmp
imull
cld
shl
movsl
enter
pop
jnp
cmp
sub
outsb
int3
xchg
aam
jge
jae
mov
sub
frstor
pop
popf
xchg
mov
add
orl
loop
popa
aad
out
sbb
push
push
inc
ror
out
fildll
or
jmp
jno
xchg
mov
insl
aam
in
jae
rol
jnp
push
ss
dec
add
clc
std
sbb
cld
bound
loopne
sub
push
popf
mov
jbe
enter
js
popf
inc
adc
dec
xchg
cmpsl
arpl
mov
lock
lods
gs
movsl
enter
arpl
add
loopne
xchg
imul
dec
cmp
and
cmp
loopne
pxor
sarl
ret
stos
mov
xlat
cli
mov
xchg
add
cli
mov
xchg
shlb
xchg
sahf
movsl
fisubrs
pop
jle
movsl
ja
and
ret
mov
nop
mov
stc
mov
lock
sbb
std
insl
aam
fbld
gs
and
lods
push
loop
hlt
sub
les
push
inc
xchg
jne
shll
nop
mov
cli
or
out
mov
dec
adc
das
mov
inc
out
testl
repz
int3
subb
xchg
leave
lret
inc
fstl
pop
jmp
test
les
scas
mov
enter
out
shll
fimull
add
mov
jbe
xchg
mov
xor
cmp
rolb
jecxz
jae
je
mov
outsl
lock
js
and
dec
mov
dec
in
ror
xchg
mov
fwait
test
loop
xchg
xchg
leave
sub
mov
and
adc
je
or
sub
mov
adc
decl
out
daa
aas
std
jle
lods
loope
inc
aas
push
sbb
lea
mov
mov
push
sbb
push
and
ror
add
aas
push
aaa
mov
dec
xchg
mov
lahf
mov
mov
shr
popa
cmc
sub
mov
adc
in
dec
aam
fldt
and
mov
pushf
clc
mov
daa
fs
cmp
adc
pop
movsb
sbb
xchg
subb
cmc
xchg
jge
fidivrs
jecxz
ret
aas
and
mov
cmpsb
xor
scas
ds
mov
jnp
repnz
dec
push
add
jb,pt
movsb
or
fwait
pop
stc
inc
adc
and
aas
in
notl
stos
repnz
xchg
lods
fstpl
es
js
aas
fisubrl
dec
cwtl
in
dec
pushf
gs
dec
stos
aaa
dec
out
cmp
outsb
mov
dec
push
push
sarl
add
mov
mov
stc
mov
or
movsb
mov
or
enter
mov
ljmp
sub
lea
movsl
enter
loope
xchg
mov
cmc
jbe
sbb
or
cmp
lret
testl
jmp
lahf
dec
add
sarb
mov
in
pop
ss
inc
push
les
mov
or
and
hlt
int3
mov
vmread
pop
je,pn
push
jp
sub
scas
pushf
sbb
inc
das
loope
fiadds
es
push
or
cmpsl
repnz
mov
ret
in
sbb
aaa
xchg
jp
pop
xchg
mov
stc
mov
pop
scas
or
adc
shll
das
lcall
sub
jnp
orl
push
mov
mov
jno
daa
sub
cmp
ja
fnclex
adcb
mov
xchg
insl
cs
lods
scas
int
mov
add
jns
or
lcall
push
pop
pop
adc
das
push
inc
testl
sbb
scas
sub
gs
dec
arpl
pusha
sbb
cld
push
mov
repnz
insl
mov
movsb
shrl
and
dec
test
sub
je
repnz
sete
or
or
popf
xor
mov
and
push
scas
or
cmp
adc
adcb
mov
add
sahf
lret
in
lahf
out
sub
xor
sub
xchg
cmp
inc
push
std
icebp
clc
pop
jbe
xor
cmp
inc
add
insl
xchg
fdivrs
or
fucomip
dec
imul
xchg
sbb
mov
cmpsl
sti
jo
loop
inc
fmuls
mov
ret
jne
mov
mov
lock
sbbl
mov
fidivl
pushl
movsl
xchg
add
inc
adc
test
ja
mov
int3
sbb
mov
repnz
clc
inc
mov
std
jns
pushf
adc
jns
mov
sub
ret
int
xchg
inc
cmp
imul
mov
inc
gs
xchg
sbb
mov
cltd
mov
jg
or
or
mov
test
std
int3
dec
inc
xlat
xchg
xor
int
movsl
mov
js
inc
shll
and
inc
stc
adc
xlat
push
repnz
cmp
sbb
add
adc
out
lahf
nop
xorb
andl
pushf
iret
stos
cmp
and
push
adc
scas
jg
push
jo
cmc
dec
mov
mov
cmp
lret
test
ljmp
inc
jmp
dec
shr
lods
jne
outsl
fldpi
cmp
mov
repz
and
popa
rcr
dec
xor
pop
xchg
pushf
out
ja
mov
cmc
fcompl
iret
mulb
mov
cltd
jg
pop
sub
mov
xor
mov
in
lea
sbbl
sarb
cmp
mov
pop
adc
daa
sub
jae
cmp
dec
cmpsb
xchg
iret
sub
inc
lcall
test
test
daa
mov
pop
xchg
xchg
popf
rcl
cmpsl
lret
int3
jmp
int3
mov
addb
jae
mov
inc
jg
bound
rcll
in
pushf
mov
push
lock
enter
mov
push
aaa
dec
es
sub
test
mov
repnz
pop
mov
pusha
mov
cltd
add
xor
stos
daa
mov
rcrl
adc
fsubl
mov
xor
pop
and
sti
loope
div
mov
adc
and
out
sub
cmp
clc
sbb
iret
mov
lcall
push
xor
stos
cmp
adc
lcall
arpl
sub
repnz
push
shl
in
sub
fsubr
ja
fbstp
fimull
cmp
jl
cs
push
xchg
xor
jmp
pop
call
mov
cmpl
daa
adc
mov
sub
mov
sbb
add
lea
xor
aas
cmpsl
jmp
test
adc
xchg
imul
jbe
push
sti
test
std
dec
sarl
decb
mov
test
aaa
cmpsb
mov
mov
or
mov
inc
xor
popa
pop
inc
mov
sbb
faddl
adc
mov
or
jae
sub
adc
and
jo
sbb
pop
fdivl
sbb
inc
lds
add
es
lea
xchg
xchg
lds
stos
adc
mov
fimull
bound
add
pop
andnps
xchg
movsl
lods
into
aaa
add
orb
call
pop
cmp
xchg
ret
sbb
mov
lret
scas
adc
xchg
int3
scas
jne
jo,pn
sub
popa
enter
jl
jno
sarb
addr16
pusha
jge
inc
das
hlt
mov
jb
cmp
outsb
cmp
cmp
fimull
mov
in
jmp
nop
push
fimuls
inc
pop
pop
jmp
add
xor
sub
addl
xchg
call
fcom
lret
jae
pop
sbb
mov
pusha
fisttpl
inc
cmpl
or
jp
lods
loop
lret
cmp
add
dec
das
out
and
mov
cs
mov
fdivr
mov
gs
dec
shl
ret
mov
popa
dec
inc
scas
lret
scas
cmp
test
aaa
dec
xchg
in
rcll
test
dec
sbb
sub
cmp
lock
dec
push
xchg
daa
push
rcrl
imulb
mov
insl
add
mov
repz
je
mov
js
jae
xorb
pop
ds
pop
fdivrp
pop
roll
jl
pop
cmp
insl
fildl
jnp
mov
in
push
xchg
adc
repz
fldl
pop
push
fwait
inc
arpl
dec
cmp
push
jp
into
in
inc
rcrl
pop
fsubl
mulb
ljmp
pop
in
test
iret
dec
adc
aaa
daa
mov
lret
shll
xchg
xchg
loopne
les
mov
sbb
fiaddl
mov
dec
test
je
jbe
les
stos
insl
cmp
mov
imul
jl
adc
xchg
jl
or
adcb
loope
push
lods
lds
outsl
lds
mov
mov
decb
addr16
stos
jge
pop
cmp
mov
adc
lret
lret
adc
gs
mov
jns
fwait
cld
icebp
add
xlat
mov
and
dec
das
in
sub
loope
xchg
daa
popf
sbb
leave
movsl
mov
pop
pop
pop
clc
mov
sub
scas
push
add
int
cmp
inc
arpl
ss
and
hlt
jb
or
push
sub
pop
mov
mov
fwait
dec
jmp
js
pop
push
out
sbb
fidivrs
sarl
pusha
xor
adc
mov
adc
fmuls
movsl
mov
popa
cli
sub
inc
fwait
cmp
mov
dec
nop
lods
push
push
fldt
mov
jmp
test
imul
stc
call
fmul
test
mull
jle
jmp
lods
sub
xchg
inc
and
leave
stos
and
add
imul
jae
mov
jmp
adc
hlt
cmp
daa
popl
inc
rcrl
mov
mov
push
lds
out
pop
push
pop
pop
das
addb
leave
cmpb
ja
lcall
mov
shlb
rcll
inc
ja
not
mov
les
std
sbb
sete
push
bound
mov
adc
add
pop
repz
pop
add
push
or
mov
popa
jne
and
out
leave
daa
mov
jmp
dec
aaa
test
pop
int3
add
mov
stos
fidivrl
int
pop
and
in
push
lahf
cs
sbb
mov
xchg
pop
icebp
jno
push
mov
mov
fmul
sub
dec
mov
lds
out
add
in
add
mov
cmp
cs
jle
sbb
sub
adc
add
orl
cmp
dec
lock
mov
cmpl
inc
movsl
addl
mov
lret
lds
xor
ret
or
cmp
enter
lret
sbb
xor
add
movsb
jecxz
jmp
push
xchg
pop
sub
lret
add
je
insb
inc
mov
fnsetpm(287
in
shll
test
fcmovbe
dec
push
cmp
inc
loopne
testb
rorb
inc
jmp
jmp
repnz
mov
and
or
stc
sbb
inc
int
jne
xchg
inc
insl
dec
mov
nop
push
fisubs
out
ss
jno
sbb
jo
inc
mov
rcl
jmp
lret
shlb
sahf
inc
nop
addr16
lds
and
inc
ja
xchg
mov
bound
adc
cmpb
cli
insb
jae
lea
and
out
call
outsl
sbb
cwtl
lahf
jp
mov
mov
es
inc
xor
cmp
push
das
sub
jmp
incb
and
and
or
call
cli
xor
dec
aaa
out
ret
aas
clc
and
lods
pop
sub
shlb
mov
adc
fcoml
or
dec
mov
and
xchg
jl
testl
mov
pop
iret
mov
gs
jmp
lret
jo
out
negl
aas
sbb
sbb
lea
ja
nop
fdivrs
test
enter
decb
xor
mov
mov
loope
ror
cmp
rolb
xor
push
jl
push
pop
or
lds
cmp
xor
pop
jecxz
jo
adc
repnz
fxch
add
push
dec
sub
add
xchg
push
adc
scas
or
popf
mov
dec
push
push
out
push
and
inc
dec
pop
movsl
mov
pop
jne
jbe
std
cli
fstpt
leave
add
mov
pop
mov
popl
out
jae
add
sbb
ret
jno
lahf
loope
mov
mov
add
add
sbb
jmp
jns
out
shl
es
xchg
lock
push
xchg
lock
fdivs
imul
fwait
sbbb
scas
jmp
mov
fisubrs
adc
daa
push
lret
pop
bound
cmp
out
mov
outsl
dec
hlt
orb
bnd
lock
dec
cmp
inc
sbb
and
and
daa
pop
and
jno
or
push
jno
rcr
mull
lret
int
pop
nop
xchg
jmp
mov
rorl
push
sbb
lcall
jmp
jge
add
test
ret
mov
shlb
xchg
mov
addr16
cli
xor
cmp
pop
cmp
je
xchg
shlb
in
cmc
or
movsb
sub
mov
mov
pop
add
or
add
mov
sti
lds
in
pop
pop
dec
in
cmp
mov
imul
jbe
orl
inc
push
pop
lods
idivb
aam
mov
xchg
sbb
ja
out
cs
int3
lret
xchg
cld
sbb
rcrb
push
repz
ja
mov
lret
repnz
sub
fwait
bound
add
push
xchg
and
mov
push
ja
sahf
xchg
jg
jge
xor
imul
shl
xorb
stos
fs
mov
sarl
push
loope
mov
out
push
cmp
mov
jl
add
dec
mov
pop
xchg
pusha
ss
pop
aam
aad
mov
dec
aas
pop
push
cmp
test
stos
or
scas
rolb
jo
xor
outsb
pushf
jecxz
test
scas
sbbl
lods
mov
mov
push
shrl
push
cmpsb
sbb
aam
iret
je
into
push
cs
mov
sub
movsl
cmp
test
xchg
mov
pop
mov
mov
push
xchg
sarb
movsl
inc
test
movl
inc
inc
scas
shll
leave
jle
fwait
scas
shll
lret
std
aam
inc
lret
int
mov
cmp
ja
dec
xchg
testl
ljmp
xor
scas
insl
das
lds
jecxz
jg
insb
xor
or
lcall
dec
lret
ss
leave
lcall
jo
aad
xchg
mov
lock
add
ror
xlat
cmp
fnstsw
nop
or
clc
xchg
cmovl
das
lock
sub
xorl
test
mov
push
outsb
mov
xor
push
mov
mov
jge
jecxz
sub
mov
sub
sbb
mov
in
mov
gs
clc
xor
stos
inc
stc
fisttpll
dec
xor
mov
lcall
lds
out
std
mov
pusha
mov
lods
mov
lahf
jo
xchg
ds
fs
jae
test
cli
xchg
mov
add
sbb
push
fidivrl
insl
mov
pop
idivb
addr16
mov
xchg
in
xor
bound
sbb
dec
enter
das
repz
jecxz
in
jnp
pop
loopne
into
inc
sub
push
mov
sub
lock
dec
adc
xlat
mov
mov
fs
push
dec
or
adc
jbe
push
insb
push
arpl
mov
jmp
scas
inc
cmp
sti
pop
inc
je
outsl
push
push
adcl
fdivl
sbb
shl
std
lahf
loope
pop
andb
int3
pop
jb
pushf
daa
out
mov
hlt
xchg
mov
iret
cmp
nop
mov
jecxz
pusha
fcomps
fnsave
cld
addr16
into
jl
sti
imul
push
and
sbb
inc
pusha
adc
sbb
sub
pop
jmp
or
enterw
pop
jg
mov
sbb
mov
scas
sti
sub
icebp
xlat
hlt
fcomps
push
cld
or
adc
aad
popf
es
xor
dec
jecxz
add
test
call
fmull
mov
rcrl
mov
out
mov
xchg
jle
arpl
and
cmc
out
inc
pop
or
sub
fcoms
cmpsb
call
call
data16
dec
jecxz
mov
xchg
mov
stos
mov
cmp
es
adc
test
mov
inc
scas
xlat
lret
punpcklbw
cmp
lcall
addl
sarl
mov
movl
leave
mov
sbb
xchg
mov
xor
pop
mov
daa
mov
neg
add
int
pushf
pop
xlat
nop
sbb
mov
roll
mov
sbbb
sahf
aaa
stos
insl
pop
lds
pop
sbb
sbb
outsb
int3
into
mov
cmpsl
es
and
dec
add
sub
mov
icebp
mov
js
out
pushf
stos
sbb
loope
bound
cmp
sahf
sbb
test
lods
outsb
in
push
mov
nop
inc
mov
push
in
adc
repz
inc
push
push
sahf
lret
mov
cmp
inc
ja
add
int3
lahf
jb
xor
loope
sahf
cmpsb
sbb
or
or
adc
std
rclb
ds
mov
enter
and
and
mov
mov
adc
dec
stc
mull
lret
nop
aaa
pop
into
addr16
data16
pop
in
lods
jg
push
xor
icebp
mov
xchg
jp
xlat
sar
adc
sbb
outsw
pushf
pusha
sbb
ds
xchg
cmp
aad
adc
into
mov
fcmovb
lea
shlb
xor
ret
xlat
fcoms
mov
ffreep
add
fldcw
imul
fidivs
lret
adc
movsb
cli
or
xlat
mov
pop
loope
out
stos
test
pop
cmp
push
sarl
pop
cltd
mov
xchg
fiadds
int3
shlb
push
mov
scas
aad
aam
pop
jmp
out
sub
pop
lods
sub
cmpsl
imul
add
pop
in
addr16
fisttps
ja
lcall
scas
lods
xchg
cmp
xor
fisubl
shlb
dec
mov
insl
push
test
jae
dec
inc
movsb
popf
and
enter
lret
push
sbbb
addb
sub
cmp
imul
adc
ss
cmp
cmpsb
sarb
popa
imul
mov
lret
call
ret
out
loop
sbbb
cmp
sbb
xchg
es
rcl
or
imul
xor
mov
and
mov
iret
rolb
in
in
stc
push
push
xchg
icebp
jbe
xchg
mov
insl
outsl
dec
data16
sbb
xchg
pop
cmp
sbb
mov
xor
mov
imul
bound
xchg
cmp
outsl
in
fcmovnb
lret
fnstenv
sbb
xor
xorl
pushf
dec
out
das
clc
push
cmp
xchg
jle
outsb
mov
or
adc
and
shlb
shll
aam
mov
jbe
bswap
and
in
std
js
fisubrl
cwtl
xor
xchg
loope
push
xchg
addr16
rorb
dec
xor
sub
mov
jecxz
fcoms
icebp
xor
add
negl
ret
push
push
mov
and
sbb
into
and
add
pop
pop
pushf
inc
sbb
xchg
out
je
push
mov
xchg
sbb
pusha
and
push
hlt
jno
adc
popa
popf
ja,pt
mov
std
stc
test
and
or
sub
out
xorl
fst
push
faddl
gs
cmp
xor
xchg
sbb
cs
rolb
sbbl
push
add
jno
jmp
hlt
addb
jg
stos
iret
jmp
sbb
or
dec
xchg
xchg
adc
sub
mov
sub
and
fmull
in
mov
popf
push
popa
cli
adc
shrb
pop
daa
sub
xor
xor
xchg
mov
lods
fidivrl
out
xchg
popa
mov
cwtl
leave
add
pop
xor
lods
pusha
xor
lock
jo
sti
insl
adc
aad
ret
addr16
xchg
imul
jg
mov
in
and
inc
xor
mov
lcall
negb
pop
lock
sbb
xchg
imul
in
cwtl
dec
mov
inc
movsb
mov
jp,pn
xchg
out
sub
sub
mov
jmp
cltd
mov
push
adc
inc
pop
push
jmp
gs
inc
pop
mov
fidivs
cltd
sub
rcr
sarl
stc
dec
sbb
cmpsl
mov
and
xor
jmp
mov
pop
xor
arpl
stos
add
inc
or
dec
jge
jp
xchg
rol
jg
ljmp
xchg
and
push
jo
push
cwtl
pop
adc
fcompl
cmpsb
sbb
insb
loopne
push
outsb
adc
cmpsl
inc
jb
jo
lods
and
mov
mov
imul
xor
jecxz
fadds
mov
leave
cmpsl
lret
aaa
aam
fbld
test
or
mov
cmpsl
addr16
mov
movsl
stos
aad
cmp
andl
xchg
or
loope
in
mov
aad
dec
ud2
push
mov
mov
test
adc
in
xchg
mov
outsl
mov
mov
scas
js
loopne
rclb
jnp
fcoms
loopne
add
mov
addr16
test
mov
icebp
jecxz
leave
cmp
cmp
rcr
jp
in
insb
push
addr16
fsubl
shrl
iret
push
into
add
hlt
out
push
jge
sbb
ss
je
mov
jnp
mov
mov
loope
jno
popf
mov
aad
jae
xor
pop
std
cmp
mov
cmp
pop
inc
fiaddl
mov
jbe
jb
lret
xchg
sub
mov
bound
out
out
mov
push
xlat
dec
ret
leave
mov
dec
mov
enter
leave
shl
sbb
cltd
cmc
outsl
movsb
adc
cld
nop
repnz
pop
std
bound
adc
loop
adc
and
dec
jg
cld
imulb
inc
fwait
repz
adc
mov
fs
cmp
movsl
daa
mov
repz
push
or
mov
icebp
dec
jle
test
popa
sub
sbb
xor
dec
loope
lock
decl
outsb
lock
or
mov
mov
xchg
or
push
push
es
mov
pop
xchg
cmp
fcom
cmc
outsb
daa
cmp
xor
mov
xlat
hlt
inc
sub
jo
push
scas
xor
xor
lret
xchg
mov
outsl
cmpsl
lock
sub
mov
ss
bound
in
inc
mov
mov
ja
sbb
int
cmp
xchg
popf
cs
or
aas
and
and
in
adc
pop
sti
xchg
sti
and
jno
sti
add
adc
mov
adc
addr16
add
int
sbb
sub
orb
test
decl
pop
jo
lods
cmpsb
lock
push
push
push
dec
fisubs
in
or
jbe
and
in
mov
cltd
add
inc
dec
sub
test
inc
jp
in
movsl
stos
pusha
or
bound
or
call
test
in
fdiv
and
xchg
pop
scas
dec
push
leave
xor
and
lahf
les
movsl
repz
pusha
jg
jge
and
and
repnz
js
xor
sbb
fistps
in
xchg
push
pop
ja
outsb
aas
lahf
mov
sbb
outsl
push
and
pop
inc
fisubrl
push
lahf
scas
add
decb
in
jae
mov
scas
dec
adc
sub
adc
dec
pop
dec
popa
ftst
pop
inc
std
mov
fwait
stc
mov
sbb
bound
adc
es
pop
xor
std
lods
xchg
cli
mov
fdivrs
push
call
ljmp
add
nop
push
jl
sub
mov
lahf
mov
push
cmp
or
push
mov
xchg
fdivrs
sbb
sub
mov
dec
mov
pop
mov
xlat
adc
sti
pop
sub
rcrb
scas
iret
push
ljmp
inc
rcrl
push
int
xchg
xor
out
pop
mov
push
sub
and
into
mov
pop
cs
adc
aas
inc
arpl
fisubrl
mov
cmp
xchg
int
cmp
cwtl
inc
je
or
cmc
les
mov
enter
push
sbb
or
cltd
or
sbb
mov
mov
xor
mov
int
lcallw
andb
fsts
cmp
add
loop
scas
dec
and
xchg
mov
inc
inc
out
enter
movsl
pop
and
sbb
and
sub
push
pop
adc
imul
jmp
push
sbb
xor
or
mov
bound
inc
jmp
dec
mov
fsts
popf
jecxz
leave
movsb
inc
stc
ficoms
repz
sbb
dec
loope
push
inc
push
sahf
dec
inc
imul
insb
pop
or
into
dec
testl
in
fisubrl
adc
lods
out
xor
test
dec
nop
das
pop
ja
test
jb
imul
push
and
fs
dec
cmp
lret
mov
pop
xlat
xchg
pushf
jl
cmp
pop
rclb
mov
sbb
movsl
add
pushf
xchg
add
add
mov
lret
push
call
out
inc
loope
in
dec
lret
cmp
xor
popf
faddl
mov
jne
push
aam
or
sbb
push
cmc
xor
sub
add
jle
push
jnp
cld
je
mov
aaa
add
rorb
jge
nop
fsubrl
sbbl
std
and
inc
ss
pop
mov
jae
add
jge
loope
mov
cmc
fsubs
add
mov
cwtl
lock
add
jecxz
jg
test
hlt
sub
pop
adc
sub
mov
std
xchg
mov
mov
adcl
pop
push
addl
shlb
sbb
imul
push
dec
loope
sbb
sub
pop
and
sub
sub
or
jg
in
aaa
dec
fsts
or
sbb
stc
and
mov
jp
mov
ror
mov
jns
std
fidivrs
daa
push
bound
sub
mov
sub
push
and
orb
xor
lret
mov
mov
popf
arpl
scas
out
sbb
sti
aas
shlb
and
xchg
stc
mov
jae
xlat
sub
pop
xchg
addl
jno
daa
ret
xchg
push
fwait
xor
sbb
mov
cmp
insl
add
sub
sub
push
in
add
xchg
jns
out
dec
pop
pop
xchg
and
mov
jg
outsl
ljmp
push
mov
adc
lods
push
cmc
push
pushf
or
jnp
lock
add
mov
or
mov
fsubl
es
lods
add
jmp
scas
insl
mov
push
lds
sub
mov
pop
scas
push
jno
shrl
rorb
dec
and
decb
bound
roll
cmpl
out
mov
popf
stos
lret
rclb
sti
pop
ret
int
lret
adc
popf
les
and
outsb
notl
add
testl
lcall
arpl
cmc
cmpb
jmp
sbb
lcall
xchg
mov
cmp
cmpsl
leave
adc
dec
into
dec
mov
adc
mov
sbb
jne
je
loopne
add
idivb
mov
movsl
sbb
pushf
inc
cmpsl
subb
into
xor
jne
cli
mov
jne
daa
or
mov
stos
lret
js
popf
mov
hlt
inc
cmp
out
mov
in
lock
test
test
dec
mov
idiv
or
and
pop
leave
icebp
push
sub
cwtl
cli
gs
mov
popf
shll
push
mov
rclb
sub
pushf
lahf
out
jb
mov
cmp
test
mov
cld
or
arpl
mov
sahf
ret
stos
sub
bound
pop
cli
scas
or
fidivrl
add
inc
rorb
adc
pop
push
xor
scas
sub
and
jns
mov
scas
xchg
mov
rcr
mov
movl
nop
out
in
fwait
orl
and
mov
mov
add
aas
cmp
inc
js
les
sbb
ret
sar
mov
jbe
pop
addb
imul
jmp
mov
mov
xchg
or
leave
pop
cmp
pop
outsl
fcoml
lods
inc
adc
shll
data16
xchg
shlb
lods
push
lcall
jp
add
repz
xorl
xchg
movsl
inc
jno
dec
bound
or
arpl
inc
cmpsb
outsl
mov
push
es
xor
cld
cmp
inc
pop
xor
into
mov
xlat
xchg
stos
rorb
loopne
scas
addb
pop
fwait
test
inc
pop
add
push
xor
inc
mov
dec
fwait
das
xor
cmp
pop
inc
lahf
adc
int
lds
or
lahf
fiadds
enter
fwait
out
js
sub
cmpsl
les
jle
dec
xchg
repz
mov
sub
movsl
das
xor
adc
add
cwtl
sub
pop
sbb
testb
movsb
pop
xor
mov
pusha
xchg
pop
icebp
cmp
dec
negl
fisubrl
cmp
xor
test
xor
xor
mov
fcom
fst
fistpl
cmp
sbb
test
int3
xchg
fdivrl
or
lods
cmc
insb
sbb
mov
mov
arpl
jp
mov
in
sbb
sub
test
pop
cmp
ss
xchg
add
cwtl
out
loop
mov
and
icebp
jno
jp
inc
add
and
sub
lods
ror
arpl
and
pop
pop
mov
sbb
mov
sbb
addr16
insb
push
sti
sbb
dec
idiv
inc
pop
rol
out
adc
nop
push
leave
dec
loope
cld
sbb
testb
and
pop
ffreep
xlat
jp
mov
pusha
cmp
and
cmp
movsb
stos
in
in
or
les
push
xor
aas
into
adc
out
fwait
scas
mov
push
xchg
push
or
icebp
xchg
push
add
cmp
or
ss
mov
lret
rcl
pop
faddp
xchg
inc
int3
push
cmp
adcl
jg
cld
cmp
and
shl
clc
jp
dec
dec
jnp
orb
xor
mov
es
lods
popf
xlat
lds
push
cmpsb
test
pop
cltd
das
or
mov
je
mov
xorl
shrb
inc
dec
inc
sub
fldln2
mov
mov
dec
inc
int3
sub
arpl
and
dec
jle
xchg
sbb
stc
mov
and
int
mov
mov
testb
mov
imul
mov
push
and
xchg
adc
cmp
pop
into
push
pop
popa
adc
adc
daa
lock
mov
sub
mov
insb
jg
pop
inc
pop
cltd
lds
loop
ds
or
adc
insb
pop
sub
andb
xlat
call
pop
adc
icebp
pop
xchg
pop
and
pop
dec
sub
imul
movsl
dec
sub
xchg
nop
push
mov
jmp
repnz
jbe
add
sarb
repnz
push
sub
sbb
mov
add
mov
mov
add
insb
daa
xor
aaa
mov
mov
add
push
or
mov
push
loope
sbb
fildl
adc
pop
cmp
repnz
xchg
orl
pop
xor
push
xchg
lret
cmp
rcrl
rolb
inc
pop
pslld
add
inc
or
add
lds
fildl
inc
inc
cmc
ljmp
cmp
dec
je
jno
je
adc
in
mov
cmpsl
out
dec
jb
movsb
and
dec
daa
mov
fucomp
xchg
dec
mov
jae
andb
mov
mov
outsl
inc
jno
pop
xchg
dec
aaa
cmp
jge
mov
into
jns
ja
enter
jae
into
cld
xchg
repnz
sub
roll
stos
stos
les
jmp
mov
add
mov
adc
movl
aam
inc
xchg
dec
cmpb
push
mov
sbb
mov
sbb
cmp
xchg
hlt
cld
mov
lahf
push
je
sub
repz
push
loop
cmp
adc
aaa
es
inc
dec
mov
inc
sub
xchg
movsb
xchg
xchg
fcmovnu
into
cmpsb
sub
loop
mov
lret
lret
sub
lods
movsb
testb
stc
mov
adc
out
jg
stos
xlat
pop
dec
lods
or
mov
mov
scas
or
xlat
pop
pop
jb
pop
jecxz
inc
jg
pop
test
in
daa
jg
inc
inc
adc
push
pop
insl
or
jp
push
sahf
popa
in
push
add
xchg
addr16
mov
xor
pop
stos
int3
cld
loop
ljmp
and
je
fcomps
scas
pusha
adc
push
or
mov
insb
in
popa
xchg
lods
imul
sbbl
ror
xor
shrl
aam
leave
cmp
jl
stc
nop
jns
mov
xor
mov
mov
lahf
fdiv
out
in
xor
sbb
xlat
ficoms
shl
jge
les
not
adc
xchg
xor
lods
lret
mov
mov
and
xchg
xorl
aas
sbbb
cmpsb
sub
lock
xor
in
lods
int
jnp
sbb
or
mov
movl
xchg
shl
sbbl
push
mov
hlt
cwtl
push
pop
pop
sbb
xchg
adc
push
loopne
test
ffree
and
or
adc
xchg
sahf
xchg
mov
mov
rcr
or
jmp
or
in
ss
das
in
pop
int3
mov
clc
inc
jnp
cld
outsb
movsb
mov
or
pop
inc
mov
pop
xor
push
xor
pop
cwtl
mov
inc
out
sbb
inc
or
or
fcmovnbe
andl
jo
or
sbb
dec
mov
out
jns
mov
cli
stos
mov
inc
scas
loop
pop
aaa
ss
sub
orl
mov
xor
pop
fdivp
mov
enter
mov
xor
lods
fdivl
push
cld
dec
jb
sub
rol
xchg
pushf
mov
cmp
cmc
repnz
notl
sub
cmp
mov
inc
or
flds
js
in
add
lods
ja
add
mov
push
cmp
insl
mov
call
sub
std
xor
fdivs
inc
and
xchg
xlat
stc
nop
push
ljmp
lcall
dec
mov
cmc
in
cld
jp
fisubs
add
sbb
pop
or
dec
cmp
fidivs
pop
dec
cmp
pusha
jbe
mov
add
pop
rorl
loope
add
dec
mov
sahf
fwait
lret
ljmp
jg
rcrl
sarl
scas
pop
and
jge
cld
icebp
bound
aaa
mov
jae
xlat
rcrl
ljmp
or
push
into
adc
dec
ss
xor
xchg
notl
push
dec
sub
dec
out
test
lret
fisubrl
adc
jg
mov
lret
out
xlat
jg
push
push
fistpl
loope
adc
push
mov
adc
xchg
cmpb
cltd
fidivs
push
xor
icebp
pmulhw
popa
rcl
mov
mov
jge
or
fnsave
in
sahf
aam
addr16
mov
mov
cmp
sub
or
adc
out
je
adc
lea
mov
popl
in
out
add
js
inc
sbb
xchg
lahf
stos
popw
or
mov
divb
push
mov
hlt
inc
jo
les
shlb
cmp
cli
lds
push
data16
fadds
cltd
lds
pop
popf
cmpsl
je
inc
in
sarl
fbld
adcb
cmpsl
pop
les
aam
dec
push
xlat
xchg
push
xchg
adc
mov
push
andb
ret
out
loope
push
movsl
xor
jge
jae
add
shrb
mov
push
pop
sub
jns
out
fiadds
fcmovnbe
dec
pop
aaa
dec
xlat
push
js
add
pop
out
mov
mov
nop
sbb
cmp
insb
ret
mov
pop
cld
notl
add
push
push
repz
push
adc
adc
add
imul
lret
jbe
stos
mov
lds
cmc
xlat
xchg
push
sub
mov
cmc
shrb
push
test
xchg
dec
in
test
xor
sbb
lahf
out
jg
jp
push
or
into
outsb
jns
loop
icebp
or
fucomip
jo
fadd
addr16
cmp
rclb
sub
xchg
mov
xchg
aaa
sub
push
inc
fistpll
jp
std
sti
cmp
ja
stos
sahf
out
mov
daa
fs
push
add
clc
ljmp
jle
adc
pop
enter
cmpsl
js
leave
dec
arpl
enter
cmp
mov
cmpsl
ja
or
das
or
clc
lods
sahf
cmp
dec
pop
cltd
sbb
inc
adc
div
add
mov
cltd
bound
dec
sbb
lea
fdivr
pop
or
and
sbb
cmpsl
inc
sbb
mov
pop
in
les
and
out
rcrl
out
cltd
mov
pop
jae
and
insl
pop
pop
push
nop
adc
ficompl
adc
xorb
jnp
xchg
mov
pop
mov
fwait
icebp
mov
repz
pop
mov
mov
push
xlat
sub
push
sbb
mov
mov
int
mov
orl
lods
pushf
lcall
addr16
mov
mov
stos
enter
sbb
jl
inc
push
lock
cmp
sbbl
cs
dec
mov
scas
cmp
jg
add
ss
imul
add
data16
pop
lock
call
dec
mov
addl
out
lret
dec
xchg
inc
push
push
xchg
pusha
or
pop
stos
mov
or
bound
fisttpl
jl
jo
cmp
pop
xor
repz
mov
rcll
jnp
loopne
cmp
mov
or
jl
lods
aas
sub
jl
and
xchg
mov
rcll
xchg
xchg
in
test
adc
dec
incl
sbb
divb
xor
cmp
jge
dec
ror
ror
inc
lods
xchg
bound
mov
inc
fsubs
int3
inc
dec
or
pop
cmp
push
cld
inc
mov
cltd
arpl
xor
loop
cmp
mov
inc
movsl
add
movb
in
mov
cld
insb
mov
out
fsubrs
mov
pop
subl
orl
scas
cmp
in
imul
loopne
xchg
cmp
mov
loop
sub
pushf
ficoml
lret
lret
adc
jo
jno
xchg
repz
arpl
and
ret
xchg
mov
std
ret
loope
rcr
ljmp
cld
and
push
decb
mov
sbb
mov
mov
sub
cmp
bound
sbb
insl
popf
sub
mov
outsb
mov
mov
jle
add
test
scas
sahf
or
lahf
out
cltd
fdivs
pop
pusha
leave
mov
mov
push
jno
lds
mov
lock
sbb
lret
xchg
pop
je
fsub
enter
arpl
dec
jmp
call
jl
rorl
jae
push
inc
xchg
fistpl
mov
in
push
movsl
pop
cmp
jecxz
adc
mov
les
dec
jns
add
repnz
and
scas
xchg
or
add
cltd
insl
mov
mov
xchg
dec
ret
inc
xor
jb
mov
inc
pushf
cli
lcall
lea
add
sbb
lcall
pop
jle
aas
xor
xchg
into
mov
movzwl
inc
dec
or
subb
pusha
ja
ss
dec
sbb
add
xor
push
pushf
in
loop
in
je
sbb
mov
popa
mov
shlb
mov
mov
arpl
js
adc
pop
imul
in
push
inc
in
push
in
dec
inc
cmpsb
cmp
or
mov
mov
int
push
aaa
push
mov
cmpsl
mov
push
sti
or
out
or
aad
ljmp
pop
xor
push
movsl
push
adc
bound
cmpl
rcl
dec
push
inc
icebp
stc
jne
xor
pop
mov
loopne
popa
push
daa
loop
aas
inc
mov
data16
or
sub
xchg
add
and
mov
jno
mov
push
xor
mov
call
popl
jl
and
mov
mov
in
or
int3
sahf
js
mov
loopne
dec
inc
add
rcr
sarl
and
fcoml
popa
test
inc
pop
int3
adc
xor
pop
xor
flds
jne
loop
adc
xchg
sbb
mov
outsl
ja
adc
ja
jb
sbb
insb
xchg
sub
lock
or
mov
push
mov
addr16
jle
pop
push
or
pop
mov
pushf
and
inc
fs
leave
jbe
jae
repnz
xchg
jns
aad
or
roll
out
call
pop
jle
mov
lret
xlat
cwtl
cld
cmp
mov
dec
sbb
arpl
rcrb
push
xchg
mov
aaa
out
cmp
xlat
repnz
nop
js
scas
xor
lcall
data16
ljmp
pop
push
rol
sbb
inc
sbb
pop
inc
dec
fadds
and
lret
add
mov
ret
mov
xchg
push
lcall
pop
dec
or
inc
jo
popf
and
inc
mov
idivb
imulb
xchg
in
jns
add
adc
mov
xlat
cmp
xor
inc
icebp
popaw
pop
or
test
into
pop
data16
loopne
xlat
xchg
mov
xchg
sub
inc
aaa
mov
sbb
inc
rcrb
lods
outsl
xlat
jae
nop
in
jp
cmp
ljmp
sbb
mov
insl
sub
pop
adc
in
xchg
pop
aad
movsb
push
out
testl
cmc
pop
or
cwtl
pop
ss
lods
xor
mull
xor
push
mov
repnz
push
sub
add
les
loop
adc
lods
popf
out
mov
dec
adc
aaa
test
mov
lret
jbe
pop
aad
pop
xchg
cs
subl
out
xor
hlt
scas
sbb
mov
jp
rclb
jae
jecxz
cltd
imul
adc
lods
out
shr
inc
fisubl
imull
lods
mov
or
push
cmpsl
cmp
push
lret
mov
fs
js
test
pop
lods
xchg
rol
ja
lds
jle
xor
test
add
xchg
sub
stc
test
cmp
mov
test
orl
jg
sbb
in
enter
or
cmp
hlt
fnstcw
daa
or
jo
fisubrs
dec
pop
adc
xchg
xchg
aad
dec
into
aad
xchg
mov
inc
shlb
sbb
test
outsb
or
loop
loope
subl
push
stc
notb
xchg
xor
sbbl
mov
add
sarl
pushf
leave
jns
hlt
xchg
scas
in
out
dec
mov
js
inc
test
aas
and
outsb
rcrb
mov
pop
out
jmp
movl
std
mov
sahf
inc
cmp
push
mov
push
daa
cld
cltd
imul
pop
in
dec
jg
xchg
adcb
outsl
fwait
pop
lahf
pop
pop
in
and
or
inc
imul
jp
aam
adc
imull
sub
test
mov
imul
push
dec
mov
mov
pop
jnp
imull
ja
rorb
adc
fisubrl
rcl
push
push
stos
test
sahf
sub
jns
fildll
push
jl
xlat
fldcw
jne
sub
sub
and
fdivs
imul
xchg
je
outsb
cmp
mov
aas
mov
lcall
adc
and
add
mov
and
orl
in
push
dec
dec
push
js
ret
adc
test
mov
dec
push
mov
xorl
xor
cmp
add
test
adc
test
ja
push
adc
test
ficoms
test
fsubs
jne
shlb
pop
or
push
dec
xchg
mov
inc
lahf
mov
test
stos
sbb
xor
inc
popa
xchg
jae
es
adc
push
outsb
pop
xor
sti
lea
jmp
mov
sub
fptan
divb
add
shlb
je
je
mov
mov
icebp
rolb
or
shlb
xor
jne
push
or
mov
test
pop
mov
cltd
in
clc
inc
cmp
push
jle
mov
xchg
adc
or
movsl
imul
mov
ja
adc
mov
scas
fwait
lret
sub
fstps
push
mov
mov
pop
jb
pop
outsl
rcl
out
dec
and
ljmp
push
sub
repnz
fdivrp
stos
mov
cmp
sub
cmc
dec
push
mov
xchg
jne
mov
js
add
xor
xchg
jnp
push
shrl
std
cwtl
xor
jae
outsl
outsl
popa
xchg
add
ss
shr
fstps
std
or
lock
lea
ja
pushf
jae
mov
jge
xchg
or
add
jmp
je
xchg
fdivr
xor
inc
dec
scas
cmp
mov
jmp
rcl
notl
mov
pop
andb
xchg
cs
test
cmpsl
ficompl
pop
popw
movsb
mov
jae
rol
lock
jmp
lea
in
cmp
rcrb
pushf
lret
mov
mov
lods
and
add
lea
ja
inc
mov
fwait
push
xorl
jne
rcrl
das
and
cmpsb
or
out
insb
test
add
dec
add
jns
sahf
dec
mov
cltd
enter
cmp
mov
mov
mov
push
inc
push
pushf
jnp
test
push
mov
dec
pusha
and
clc
aam
rcll
popa
pop
inc
mov
subl
sarb
out
jp
rcrl
mov
jl
cs
sahf
cmp
shlb
ret
es
adc
daa
xlat
inc
push
shl
inc
or
dec
sbb
mov
pop
in
xor
sub
pop
sub
loope
inc
dec
out
adc
pop
sub
dec
mov
sbb
mov
jns
push
icebp
sbbb
out
lret
es
lcall
hlt
daa
adc
dec
cltd
je
movsl
orb
inc
scas
ljmp
jg
fimull
popa
nop
inc
aaa
je
mov
addr16
inc
cmp
pop
inc
push
mov
arpl
xor
push
and
sti
bswap
and
pop
mov
mov
pushf
sahf
cli
and
adcb
popf
mov
mov
arpl
adc
cwtl
shr
xchg
aad
mov
push
lods
inc
out
xchg
add
sahf
xchg
cmp
movsb
lods
mov
cld
mov
jae
cmp
jne
loop
dec
data16
rorb
jnp
jb
xlat
or
popa
imul
mov
gs
and
mov
cmp
add
push
call
xlat
cmp
jle
nop
pushf
cmc
movups
mov
dec
mov
jne
mov
push
mov
xor
aad
adc
dec
jmp
pop
jmp
pusha
mov
adc
lds
fstps
add
mov
push
cltd
xor
xor
loopne
les
xor
jae
sub
jb
mov
sub
das
cmp
testb
cwtl
stc
mov
es
push
cmp
pop
mov
lods
popa
fisttpl
and
inc
in
mov
inc
jo
and
or
sub
lds
jne
xchg
jne
xor
cs
pop
adc
jge
cmc
mov
sub
lock
fadds
cmp
xor
mov
lds
mov
pop
and
es
cwtl
repnz
mov
mov
jne
jbe
sbb
xor
call
decl
and
mov
out
les
ja
lock
dec
jb
mov
sub
fcmovnu
jnp
or
stc
std
fisttpl
faddl
xlat
mov
pop
adc
nop
test
push
clc
shrb
scas
loop
and
pop
cmp
adc
pushf
and
jns
stos
scas
mov
ss
out
test
inc
push
mov
push
and
inc
repnz
pop
fwait
dec
shrb
lock
mov
mov
in
mov
fidivl
adc
nop
xchg
sub
mov
int
lods
or
fiaddl
andl
neg
jp
repz
addr16
in
add
stos
jmp
adc
aad
push
icebp
add
push
xor
xor
cmp
pushl
mov
push
xor
cmp
adc
mov
fcoml
into
repnz
mov
inc
cmp
push
imul
loop
lods
xor
outsb
gs
or
in
jae
in
push
fisttpl
and
ficoms
dec
cmp
add
lcall
mov
test
gs
push
sbb
mov
test
push
ja
movb
lret
mov
push
movb
mov
repz
fstp
push
mov
fiaddl
jns
lds
lret
xor
jae
sbb
pop
push
inc
sbb
clc
repnz
lods
jl
sbb
daa
movsl
jg
pop
push
lods
enter
and
jge
mov
lea
xchg
push
dec
out
out
sbb
mov
jp
cmp
addr16
adc
fcomp
xchg
popf
add
pop
push
pushf
jecxz
xchg
cmpsl
xor
cli
lcall
add
out
idivb
lea
or
ljmp
inc
or
add
cmp
add
dec
jno
call
jno
mov
call
push
lds
dec
sbb
mov
iret
push
jbe
insb
and
and
daa
adc
fbld
jl
sahf
daa
pop
cmpsl
sub
test
cmpsb
dec
je
jno
testb
loopne
cmp
xor
sub
cmp
mov
imul
test
movsb
sbb
xor
pop
stos
outsb
fs
test
mov
push
out
or
mov
adc
scas
cltd
mov
inc
and
xchg
mov
inc
cwtl
fwait
push
in
ljmp
xor
test
push
mov
xchg
jle
cmp
mov
add
add
js
lret
cmp
pop
add
ds
lret
out
adc
leave
js
add
or
mov
jb
mov
rcrb
js
lods
adc
xlat
pop
cwtl
cs
std
jns
or
aas
adc
jnp
cmpsb
mov
movsb
pop
xchg
push
xlat
sbb
jbe
sbb
es
bound
mov
xchg
xchg
push
jns
dec
xor
xor
loop
adc
int3
cltd
lret
jbe
sahf
pop
inc
loopne
mov
xchg
cmp
or
and
das
call
iret
aaa
enter
mov
jns
adc
je
mov
das
lret
ljmp
cli
es
lret
cwtl
nop
ficoms
div
or
pmuludq
ds
arpl
lods
sub
inc
mov
lods
xor
popf
cmp
xchg
sub
add
nop
call
add
mov
repnz
sahf
mov
ja
addl
mov
out
add
sub
jae
fadds
cmp
addr16
adcl
std
jo
push
pop
xor
push
shl
andb
adc
outsl
lds
xchg
std
sub
shl
cmpsl
loop
imul
das
test
sbb
xor
fbld
ss
dec
cs
mov
adc
pop
rolb
ljmp
fdivr
dec
jp
daa
add
iret
cli
in
xor
pop
adc
je
push
cmp
sbb
add
push
lds
rcll
imul
cmp
bound
xchg
icebp
lcall
leave
xorb
std
xchg
sub
adc
jge
fucomip
ret
inc
mull
push
lret
cmp
xchg
sub
fstpl
test
dec
out
jp
gs
jl
je
dec
push
out
adc
and
scas
push
mov
movsl
jl
fnstenv
xchg
outsl
push
inc
bound
and
mov
jbe
pop
das
test
ret
popa
mov
inc
andl
movsb
pop
jb
js
stc
rcrl
sub
dec
sbb
fwait
xchg
cmp
scas
hlt
imul
fidivs
inc
lahf
sub
xchg
inc
out
pop
sub
xor
repz
je
das
xchg
mov
fadd
lret
imul
and
arpl
and
outsb
add
cmp
jns
mov
andl
aaa
and
or
pop
leave
nop
sub
xlat
mov
call
ja
lods
ret
jnp
cmp
mov
xchg
cmp
scas
icebp
addr16
sbb
mov
push
mov
arpl
xchg
mov
out
push
add
pop
inc
div
jbe
adc
in
xor
mov
cmpsl
ret
loopne
repz
pop
lock
push
xor
hlt
mov
cmp
test
and
sbb
or
mov
jnp
cmp
xor
lahf
jno
rclb
dec
lds
loop
sarb
iret
xor
sbb
in
push
pop
stos
leave
xchg
rclb
mov
or
in
out
inc
or
add
lods
cwtl
push
jns
sub
test
loope
lcall
sub
repz
std
push
pushf
es
ja
test
xlat
dec
pop
jg
add
pop
jae
je
push
iret
or
mov
test
sahf
test
fs
xor
add
pop
mov
push
les
sbb
jle
adc
mov
xchg
lret
mov
and
sub
push
sti
and
ror
xor
push
or
dec
dec
mov
loope
movb
push
push
mov
lds
push
jne
inc
mov
nop
mov
push
inc
adc
add
loope
out
shll
inc
fistpl
movsl
and
pop
das
pop
inc
add
pop
and
or
add
in
add
mov
movsl
mov
cmc
add
fwait
sbbl
xor
ret
mov
xchg
mov
sarl
pop
xor
out
pop
mov
fnstenv
add
pop
jae
mov
inc
jle
jp,pn
add
pop
jg
xchg
mov
xor
or
push
xor
faddp
clc
fimuls
mov
mov
xor
inc
mov
push
add
outsb
mov
push
lods
mov
sbb
cld
mov
mov
dec
jl
movsl
cmp
mov
sub
and
mov
arpl
movsl
push
test
int3
insl
cmpl
dec
cmp
in
popa
fadds
addl
leave
lds
scas
clc
and
and
fstpl
insb
fdivs
pop
xchg
push
cmp
sarb
jecxz
cmp
pop
mov
push
sub
mov
mov
pop
mov
test
jmp
loope
xchg
outsb
shl
sbb
insb
sub
mov
movsl
and
out
adc
sub
loopne
out
cwtl
daa
mov
add
subb
pop
push
sub
lret
xchg
inc
mov
sbb
call
faddp
lods
mov
push
notb
and
adc
adc
add
sbb
mov
shlb
lods
daa
mov
cwtl
xor
sahf
ds
fs
jmp
jne
dec
fsub
mov
jmp
adc
imul
sbb
mov
subl
ss
dec
cmp
mov
xor
inc
scas
icebp
test
jmp
cli
int3
adc
jecxz
push
jle
or
push
mov
iret
rolb
ret
sub
mov
aad
das
mov
test
outsl
mov
mov
adc
insl
push
dec
icebp
push
fidivrs
lds
fucomi
scas
in
jae,pt
push
xchg
mov
call
lea
fucomp
xchg
sbb
push
cmp
jg
daa
mov
xchg
adc
arpl
jae
std
rolb
lock
fidivrs
add
stos
mov
inc
fistpl
and
inc
mov
test
push
inc
mov
test
loopne
pop
sbb
push
inc
test
lock
test
in
pop
mov
mov
jb
call
mul
jns
lea
outsb
xchg
xor
loope
das
sub
and
jns,pt
mov
js
scas
adc
lods
cwtl
repz
and
jnp
arpl
xchg
add
nop
or
sub
adc
divl
inc
stos
ret
jge
movsl
sbb
sarl
cmp
test
jb
and
push
lds
xchg
outsl
loope
imul
pop
mov
push
cltd
inc
mov
outsl
jge
inc
sub
in
or
lock
cwtl
shlb
jnp
out
lcall
cs
stos
in
cmpsb
sbb
jmp
ss
mov
aad
jo
xchg
in
ret
mov
pop
js
inc
outsl
imul
mov
inc
push
push
ja
ljmp
imul
mov
adc
dec
icebp
mov
in
xor
cmpsl
push
and
repz
cmp
xor
xchg
xchg
in
push
or
lahf
cmpsl
mov
jb
inc
adc
jb
or
addr16
add
dec
pushf
xchg
dec
pushf
inc
mov
aaa
mov
sub
jo
rcr
adc
cmp
adc
fcmovu
sbb
stc
mov
lret
movsl
sub
xlat
adc
sub
cld
js
pop
test
xchg
popf
out
jle
shll
rcl
jbe
mov
jb
pop
mov
aas
fs
enter
mov
sub
sub
lahf
xor
jp
pop
stos
adc
ja
add
pusha
imul
iret
add
cmp
jo
js
call
jb
xlat
js
xor
sti
add
sbbb
sarb
aaa
add
pop
test
test
mov
or
in
xchg
xlat
sar
insb
cld
mov
scas
lret
cli
das
lcall
fstpl
xchg
mov
push
aaa
add
lods
push
mov
je
cmp
in
jge
imul
fcomps
or
mov
imul
inc
in
mov
popa
dec
icebp
push
cmpsb
sub
jbe
cmc
jg
cmp
adcb
mov
adc
test
stos
or
push
mov
push
push
out
adc
ret
jno
popa
xor
cmp
call
inc
push
push
enter
repz
fdivrs
aaa
sbb
xor
sub
imul
jp
push
pop
and
xchg
xchg
out
pop
sti
pop
xchg
loop
jae
jmp
add
inc
int3
fsubrs
shr
mov
call
pop
clc
cmp
out
push
aaa
popa
filds
xor
pop
jl
push
and
xor
outsb
int
jbe
imul
sbb
push
xor
pop
and
mov
mov
lahf
cwtl
insb
addr16
xchg
mov
inc
mov
int3
jmp
inc
or
or
fs
addl
divl
pop
loopne
and
jecxz
pop
jl
dec
pop
pop
push
out
adc
imul
fidivrs
cwtl
jge
mov
sti
std
and
add
push
mov
dec
aad
popf
add
pop
mov
inc
or
stos
insl
mov
fisttpll
inc
mov
insl
xor
mov
and
lock
cli
ds
mov
mov
gs
cli
scas
test
ficompl
inc
jae
sbb
or
les
adc
add
pop
out
cmpl
jae
dec
ljmp
jl
or
lcall
ds
in
aad
jmp
push
iret
cwtl
test
into
xchg
mov
orl
mov
xor
icebp
repz
adc
mov
in
adc
jb
arpl
aaa
adc
push
arpl
int
lahf
pusha
and
divl
or
div
dec
push
and
fdivrp
add
lds
mov
push
insb
mov
and
inc
ret
mov
sub
call
xchg
roll
popa
popf
xchg
ficoms
scas
cmc
add
sarb
sbb
movsb
jo
arpl
movsl
adc
inc
xchg
ret
xor
addr16
movsl
outsl
clc
arpl
xlat
loopne
dec
pop
ficoms
mov
jne
je
mov
jbe
inc
in
jg
fisttps
cmc
sbb
hlt
xlat
test
xor
push
lock
pop
jl
and
dec
fwait
lar
sbb
cmp
and
stos
rcrb
xchg
cltd
pop
jo
mov
in
push
cltd
cmp
jnp
aam
mov
es
lea
inc
inc
ljmp
cs
fstps
rcr
pop
andl
int3
jo
daa
dec
stos
jp
ret
pushf
nop
lcall
cli
mov
xor
jne
call
out
jg
fldcw
cmpsb
icebp
fcomps
xchg
sarl
xchg
push
ror
mov
cmpsl
hlt
push
mov
or
jbe
ja
sbb
aam
adc
mov
ss
mov
or
outsl
rorb
cwtl
add
rcrb
push
loopne
ficoml
pop
xor
xchg
sub
sbb
bound
mov
push
daa
fistpl
faddl
add
jnp
pop
mov
xchg
pop
dec
inc
addr16
push
cmpsw
add
ljmp
cltd
jne
in
fstp
aam
xorl
mov
aad
lret
inc
jbe
popf
lds
jp
push
pusha
xchg
push
adc
mov
aad
data16
ljmp
rcr
mov
imul
es
add
rorl
rcrl
clts
or
mov
rolb
lea
sbbb
es
scas
xchg
sbb
lret
lods
fbstp
push
jns
jb
mov
icebp
scas
cmp
adc
jmp
add
mov
inc
cwtl
fs
pop
push
rcrl
and
add
mov
jno
cwtl
pop
sub
mov
mov
faddp
push
jg
push
ja
clc
adc
mul
inc
fwait
xor
insl
lahf
bnd
sbb
fisubrs
fiadds
pop
insb
sub
cmpsb
pop
xchg
pushf
rorb
add
test
sub
sub
mov
and
xchg
sbb
sbb
adc
jo
pop
test
lret
inc
adc
out
xchg
xchg
xchg
dec
mov
bts
les
pop
or
pop
out
movsb
out
push
ss
mov
aas
aam
das
adc
fimuls
mov
cmp
push
dec
xlat
sbb
xchg
imul
icebp
in
mov
test
sarl
sbb
outsl
cmpsb
call
lods
call
fcomi
fwait
nop
subps
mov
outsb
sub
add
shrb
xor
fcomi
aaa
scas
adc
and
jns
rorb
push
scas
and
dec
daa
ljmp
push
aas
call
fstpl
mov
cmpsl
or
sbb
pop
sbb
fdivp
bnd
xor
push
sub
sbb
stos
sub
mov
pop
ret
add
mov
jp
stos
cmp
jnp
in
pop
fsubs
divb
xchg
mov
push
xchg
fiaddl
xor
aad
jecxz
add
sub
jmp
orb
cmp
add
push
out
xchg
inc
fstps
movsb
outsl
adcb
push
clc
inc
aad
rcl
out
mov
lret
jns
cmc
stos
fwait
sub
popa
cld
fisttps
test
faddl
adc
add
or
sub
dec
mov
jle
sbb
in
add
mov
test
sub
lret
jmp
shll
das
add
into
out
std
push
les
insl
cwtl
test
xor
sbb
sbb
outsb
sbb
jg
fidivrl
inc
lock
and
pop
xchg
test
mov
mov
int3
cmc
mov
orb
aas
popf
std
jle
ja
cmpsl
lods
int3
inc
lcall
enter
addr16
adc
aad
cmc
fsubrl
test
pop
ja
mov
sub
mov
sti
pushf
mov
push
iret
mov
adc
addl
pop
xchg
dec
scas
std
mov
inc
in
or
loope
outsl
jbe
mov
and
jno
rcrl
inc
mov
outsl
cmp
mov
das
cmp
int3
mov
jns
pop
xor
mov
pop
cmp
push
adc
pop
sbbl
int3
aam
mov
jns
sbb
in
bound
loop
adc
push
pcmpeqd
jo
mov
loopne
movsb
cmp
mov
loopne
addr16
pop
icebp
out
push
or
testb
dec
push
test
mov
and
sbb
in
inc
ret
adc
je
jmp
mov
push
inc
pop
inc
cld
inc
sar
lea
in
movsb
jb
pop
cs
aam
lock
pop
xor
cmp
mov
adc
and
data16
mov
lock
repnz
inc
scas
into
insl
pusha
inc
or
sbb
outsl
mov
adc
jae
js
adc
pop
jno
shll
iret
addb
sub
xchg
fs
jge
or
sahf
xchg
sub
xor
data16
inc
push
iret
filds
adc
xor
addb
jo
xchg
lock
fimuls
int3
std
pop
mov
pop
fnstenv
outsb
lock
hlt
nop
stos
jne
aam
mov
lods
jae
mov
cmp
js
mov
mov
dec
push
out
mov
repz
inc
xchg
negl
fidivl
xchg
jge
mov
mov
jnp
fistpll
and
fwait
and
leave
push
cmp
stos
xchg
mov
sahf
cmp
loop
gs
fisttpl
in
and
jp
les
rorl
shll
jns
lcall
sahf
jae
and
movsl
stc
mov
xor
je
cmp
push
mov
cmp
out
mov
roll
inc
mov
outsb
push
in
mov
push
fwait
mov
sub
add
adc
out
shlb
fildll
sbb
popf
stc
hlt
mov
in
sti
pop
mov
cmp
push
out
sbb
cmpsb
push
iret
xlat
aad
imul
jmp
test
gs
dec
jle
cli
fadd
out
aam
dec
mov
lds
xchg
pop
ret
and
inc
das
push
cmc
stos
or
jno
ljmp
fidivrl
lock
inc
in
dec
es
xchg
mov
sub
jg
xchg
mov
loopne
mov
adc
bnd
mov
jns
dec
mov
cmp
in
xchg
mov
cmpb
or
icebp
add
jnp
aaa
push
sub
jnp
xchg
bound
ret
addr16
fdivl
insl
stos
ds
xchg
add
lret
dec
cltd
fxch
mov
xchg
test
mov
test
push
push
js
inc
push
mov
dec
cmp
cld
dec
jbe
xchg
loopne
mov
xor
mov
aam
mov
int3
not
lea
xor
add
in
mov
fsubrl
jle
push
xor
dec
push
and
pop
mov
inc
pop
sub
jecxz
mov
and
dec
imul
mov
sub
fcmovne
aad
mov
cli
addr16
pop
test
mov
lcall
bound
es
xor
add
rorb
popf
jge
fadd
fadd
pop
fadds
push
add
or
dec
in
mov
cmp
pop
insl
mov
inc
ret
cmp
cmp
xor
mov
movsb
pop
mov
test
cmc
fwait
je
cmp
mov
mov
inc
cmp
stc
mov
push
pop
in
test
mov
inc
dec
xchg
mov
adc
test
xchg
push
cmp
sbb
cmp
fsubl
mov
mov
jge
lock
add
xchg
adc
imul
js
jp
out
andb
jno
popf
notb
aad
test
sub
popf
loope
stos
sub
test
and
imulb
xchg
mov
inc
add
outsb
out
and
adc
pusha
and
lret
popf
push
fildl
push
imul
push
mov
test
dec
add
push
testl
icebp
sbb
in
fcomi
and
or
cwtl
movsl
pop
fcoms
inc
stos
imul
jno
call
pop
sbb
pop
das
xorl
loopne
inc
iret
sbb
sbb
js
adc
jg
xor
out
test
ljmp
push
fldt
lods
jecxz
shrl
xchg
xchg
movsb
sub
push
mov
add
stc
flds
loopne
lds
or
lock
imul
jp
pop
cmp
mov
mov
test
mov
js
popa
cmp
pop
push
or
xchg
test
lods
shrb
adc
cmp
adc
into
cmp
lahf
testl
sar
jecxz
out
insl
push
xchg
rcrb
mov
ficompl
jmp
in
hlt
and
aad
and
call
loop
mov
inc
roll
nop
dec
inc
dec
xor
inc
and
lcall
xchg
scas
pop
shrb
arpl
cltd
cmp
leave
push
mov
push
or
scas
sbb
xchg
xor
mov
mov
movsb
sub
das
out
xor
fsubrp
and
std
clc
xchg
sbb
fucomp
mov
imul
dec
test
pop
xor
lret
cwtl
movsb
imul
mov
rsqrtps
das
mov
js
ret
stos
insl
scas
test
pop
pop
dec
fwait
addr16
pop
or
clc
xchg
pop
je
imul
mov
gs
mov
push
sbbb
outsl
inc
dec
pop
loop
mov
dec
mov
push
xor
sbb
mov
sub
imul
cli
fbld
iret
or
xor
sbb
in
mov
leave
or
nop
dec
pop
mov
inc
cs
movsb
cmp
pop
dec
dec
xchg
es
sbb
pop
popa
xchg
lcall
and
xor
enter
dec
add
testl
jbe
out
test
lods
imul
push
sub
out
mov
enter
test
sub
test
push
ds
cmp
cmpsl
test
adc
daa
mov
movzbl
mov
sub
and
push
loope
sti
fwait
sahf
cmp
push
fldt
insb
pop
inc
sbb
out
mov
stos
notl
dec
data16
inc
insl
out
shrb
inc
mov
fistpl
sub
xlat
pushf
aam
mov
fistps
pushl
repnz
dec
cmp
cmpsl
xor
inc
or
jo
sub
push
mov
aad
cs
pusha
ret
ja
pop
add
pop
movsl
jge
sub
push
mov
std
sbb
xor
nop
jo
out
xor
push
push
xchg
sbb
enter
test
imul
ret
popf
jno
call
mov
movsb
pop
add
dec
add
sti
lahf
cmpsl
mov
dec
mov
mov
fldl
icebp
mov
stc
rcrb
bound
jle
popa
mov
add
mov
push
rorb
jle
fdivrl
test
inc
incb
pop
mov
aaa
xchg
adc
stos
addb
jge
jl
push
and
enter
rorb
jecxz
nop
lea
rcrb
sbb
stos
je
jecxz
ljmp
xor
xchg
cltd
mov
mov
or
cwtl
jb
ja
int3
mov
call
ss
std
push
inc
fwait
jecxz
insb
subb
push
cmp
in
jmp
mov
inc
icebp
stos
lret
pop
dec
inc
mov
sti
sub
fcmovb
dec
dec
icebp
push
xor
mov
idivl
arpl
jae
insl
lahf
popa
movsb
out
push
push
lock
xchg
subl
ljmp
and
pop
pop
inc
adc
and
pop
test
hlt
jbe
lahf
xor
mov
scas
out
fs
faddl
mov
gs
add
mov
jns
popf
adc
hlt
dec
pusha
xchg
cmc
push
pop
stos
pop
nop
jmp
aad
or
and
int3
bound
or
outsl
or
rcrl
leave
or
pop
push
and
or
adc
mov
repz
dec
sub
sub
sub
cmp
mov
ja
mov
mov
shll
outsb
push
mov
or
out
adc
loop
adc
sbb
mov
push
push
pop
roll
pop
js
mov
call
imul
and
push
cmp
xor
sbb
mov
js
xor
push
cmp
fsubrs
insl
mov
scas
ror
clc
mov
jne
insl
sbb
and
mov
jmp
fcmovu
idivl
in
pop
pop
es
das
inc
clc
jp
out
in
mov
jl
adc
push
cli
sbb
fucom
pusha
test
dec
std
idivb
ljmp
xchg
es
xor
and
cmpsl
mov
rorl
cmpl
sbb
mov
add
mov
or
sbb
sbb
mov
pop
lcall
aaa
cmp
jmp
loopne
je
lods
jmp
dec
orl
add
pop
mov
clc
push
fidivl
subl
sbb
sbb
xor
mov
test
std
das
cmp
or
mov
enter
jp
or
mov
test
xor
cli
rol
in
in
sub
fsts
popa
in
cmp
pop
dec
int
cld
push
or
pop
jg
jbe
imul
jnp
in
jmp
jbe
mov
xorl
outsl
in
xor
out
push
pusha
mov
add
outsl
xchg
cmp
fld
fcoml
inc
loop
pop
ljmp
shrl
and
mov
lcall
lcall
fwait
adc
in
xchg
sahf
lea
jnp
fnclex
mov
outsb
insl
dec
addb
cmpsb
fwait
dec
mov
negl
xchg
push
inc
sub
push
test
rorl
popa
fidivrs
sbb
pop
das
ret
xorl
xor
mov
jne
jecxz
jle
mov
sub
xchg
rcll
push
cmp
inc
je
pop
lahf
pop
dec
inc
or
call
xor
cmp
in
jmp
xor
jge
xchg
xlat
pushf
ss
and
out
fsubs
hlt
or
push
push
pop
dec
test
mov
jne
cmpb
in
sbb
add
aad
mov
cmp
push
repz
mov
int3
add
mov
ja
cmp
xor
inc
fs
mov
cmp
or
icebp
out
cli
mov
push
sub
loope
pop
lods
cmp
lods
sub
bound
sub
loop
stos
bound
sub
jne
pop
mov
hlt
push
repnz
fmul
les
and
imul
fildll
mov
lcall
add
shrb
cmp
iret
jmp
loopne
add
cmp
cld
data16
dec
cs
cs
outsl
mov
mov
push
mov
cmc
shrl
sub
lcall
mov
add
and
mov
addb
sbb
add
inc
push
mov
mov
pop
mov
in
sub
loopne
daa
ds
sbb
xor
push
das
nop
sub
mov
mov
lret
negb
mov
pop
popa
mov
ljmp
cmpsb
dec
jmp
add
dec
sbbl
and
mov
ret
testb
int3
mov
pop
cmp
ljmp
push
fcoml
in
adc
adc
cmp
imul
sub
stc
outsl
xor
pop
adc
mov
jae
xchg
cmpsb
mov
ret
insl
mov
int
shrl
pop
mov
sub
in
jbe
mov
or
fwait
push
dec
pop
lea
xor
shll
into
insl
mov
ret
pop
scas
mov
popf
push
xchg
out
xor
jmp
dec
inc
test
push
cwtl
cmpb
pop
add
ret
movsl
ret
pop
cltd
sbb
bound
xor
les
adc
lds
in
xor
push
sbb
dec
pop
inc
adc
pop
nopl
jmp
pop
mov
push
push
hlt
ljmp
sub
repnz
cmp
sbb
mov
mov
ror
call
lcall
roll
mov
shl
fstpl
mov
jae
push
mov
adc
fdiv
push
sub
sbb
into
in
inc
xor
cmp
ficompl
repnz
test
sbb
mov
lock
and
push
cmpsb
fwait
and
orl
iret
notl
mov
push
jmp
hlt
fldenv
out
push
push
sbb
xlat
inc
out
mov
sbb
popa
pop
mov
mov
mov
xchg
sahf
push
ret
and
xor
mov
daa
std
cmp
int
sub
jbe
push
and
daa
or
inc
sub
hlt
hlt
lea
cwtl
inc
mov
lods
pop
test
bound
stos
mov
and
or
mov
adc
xchg
sti
and
jl
pop
js
loopne
or
imul
dec
pop
mov
add
adc
add
mov
sbb
jmp
mov
sub
dec
fistps
nop
xchg
sub
fisttps
push
pop
dec
add
rorb
jae
adc
call
or
xor
push
inc
mov
shrb
sub
fisubrs
and
hlt
adc
adc
rorl
jae
jbe
jae
mov
pop
rorb
decb
stos
ljmp
test
lret
cmp
cmp
mov
enter
xchg
cs
cmpsb
cld
leave
sub
adc
fs
shrb
xlat
fisubrl
push
sub
xor
sti
outsb
sbb
mov
data16
dec
mov
xor
in
cltd
fs
insl
daa
sub
mov
push
clc
xchg
or
hlt
pop
adc
mov
inc
xchg
mov
test
xor
sti
out
pushf
addr16
inc
ja
or
adc
dec
data16
xlat
insb
pop
mulb
push
daa
std
divb
daa
xor
cmp
mov
test
add
cmp
clc
das
xchg
fs
mov
xchg
add
adc
push
or
adc
popa
or
lea
test
dec
std
mov
prefetch
fwait
sub
decl
loopne
sbb
ljmp
enter
pop
stc
and
adcl
mov
sub
pop
aad
js
push
rclb
jmp
mov
cmovb
insl
fmull
mov
mov
or
stos
shll
add
inc
loope
pop
sbb
xchg
adc
adc
and
cltd
imul
movsl
rep
sbb
push
jnp
mov
mov
add
inc
popa
mulps
rcrb
cmpsl
lcall
sub
add
and
xor
mov
mov
mov
add
aas
push
inc
sti
test
ucomiss
xchg
popf
imul
push
sbb
pop
mov
pop
mov
push
fcmovne
pop
push
push
das
sbb
inc
scas
add
inc
das
mov
mov
mov
push
xchg
call
or
ret
jl
pushf
sahf
cltd
stos
andl
xchg
loopne
and
mov
sbb
mov
fstp
push
sbb
loope
je
js
lods
dec
mov
test
test
loope
jl
shll
insl
lea
lret
sub
inc
es
movsb
pop
cwtl
sub
loope
mov
loopne
pop
mov
lret
dec
js
xchg
mov
stos
jb
sbb
in
add
pop
dec
mov
test
add
or
push
out
repnz
fcmovnbe
mov
js
sub
cltd
clc
adc
sbb
mov
std
in
aaa
push
call
jno
cmpsl
out
sub
insb
xchg
add
test
aam
mov
sub
idivb
in
inc
mov
scas
pop
xor
add
cmp
adc
mov
int
inc
loopne
inc
in
nop
xchg
aam
add
push
movsb
and
pop
sahf
fs
cmp
sbb
int
jo
ds
scas
push
into
in
or
xchg
daa
dec
mov
test
cmp
sub
in
fdivr
mov
leave
jno
lods
cmp
xor
dec
add
add
out
mov
xorb
or
push
mov
pushl
rcll
sub
add
cmpsl
std
int
pop
sarl
mov
inc
scas
in
sarb
aad
sti
sbb
mov
ds
insl
xor
nop
add
adc
inc
xor
loopne
mov
inc
mov
pop
mov
cld
dec
adc
hlt
mov
popf
pop
nop
sub
jl
aas
sub
lret
mov
imul
push
mov
cld
mov
xchg
inc
adc
jnp
xlat
and
pop
mov
jae
fldcw
rcll
lods
arpl
jno
mov
repnz
fimuls
and
pop
dec
iret
cmp
add
jns
push
movsb
xor
sub
in
sti
mov
sahf
jb
mov
in
and
jle
or
ret
sti
icebp
mov
cmpsl
js
lods
jnp
addr16
int3
mov
lock
xchg
dec
push
dec
ljmp
dec
dec
cs
jp
dec
insb
sub
push
sbb
and
movsl
mov
pop
pop
sbb
fwait
test
loopne
adc
xchg
das
outsl
sbb
sbb
add
mov
mov
mov
xchg
adc
fists
es
adc
dec
stos
mov
imul
inc
aam
adc
hlt
pop
repz
pusha
ljmp
insb
pushf
sbb
jno
std
in
lock
int3
cmp
mov
sbbl
xchg
xor
and
adcb
mov
add
xchg
mov
xchg
cli
aaa
mov
ret
testl
daa
int
jo
pushf
test
out
es
mov
adc
inc
les
inc
cltd
pop
or
shlb
sub
fldt
cmpsb
ss
push
testl
mov
in
cld
cmc
cmpsb
movsb
clc
or
nop
sub
sub
pop
jmp
mov
cmpsl
cmp
enter
mov
and
push
and
pop
jbe
bound
movsl
jecxz
and
fidivrs
or
movsb
mov
inc
leave
jb
aam
push
xor
mov
nop
or
and
insb
idivb
sub
scas
mov
mov
mov
mov
mov
mov
lock
sub
xor
ffreep
mov
xchg
ljmp
push
aas
loopne
addl
lcall
mov
fidivrl
das
imul
jae
sbb
add
outsl
stc
mov
jnp
add
test
ljmp
daa
dec
sbb
fnsave
and
cmpsb
lea
mov
out
inc
imul
add
xchg
shrl
xchg
movsl
pop
xchg
aad
movsb
pusha
push
mov
xchg
push
in
and
mov
out
add
jge
movsb
aad
decl
hlt
arpl
cmpsl
icebp
arpl
push
cmpsl
test
lea
nop
out
jle
sub
push
xchg
or
lods
movsl
les
xchg
mov
ficoml
aam
notl
lcall
mov
in
mov
sub
sahf
fwait
push
jbe
jmp
or
int
stos
leave
lahf
sahf
lea
imul
mov
jl
push
or
sub
jp
or
sub
dec
dec
mov
jecxz,pn
js
pop
xor
jae
and
dec
cmp
dec
xchg
subb
fwait
xor
or
test
rol
add
sub
xchg
mov
loopne
sbb
mov
mov
adc
sub
xlat
push
nop
cmp
bound
std
xlat
gs
lcall
dec
repnz
jae
xchg
mov
cmp
inc
stc
out
mov
das
pop
shll
dec
dec
jae
xchg
xor
and
add
iret
dec
imul
movsl
fstps
cmc
dec
sbb
stos
test
mov
inc
ss
mov
popf
sub
notb
addl
dec
or
jbe
test
lds
lock
push
push
insl
test
push
xchg
cmpsl
cmp
adc
pop
ret
mov
cmp
gs
xor
idivl
imul
aas
in
inc
mov
cmp
cli
or
jmp
call
gs
mov
push
out
mov
sub
inc
inc
adc
ret
hlt
cwtl
mov
inc
mov
fwait
test
movb
jp
mov
and
fcmovbe
jle
cs
lret
js
inc
dec
out
ja
push
mov
adc
jno
and
add
jmp
pop
mov
add
arpl
mov
pop
mov
call
cmc
ds
repz
mov
arpl
bound
nop
outsb
xor
inc
mov
mov
shrl
ret
add
ds
adc
jge
push
jl
fcompl
rcr
icebp
out
mov
add
push
xchg
in
and
mov
std
mov
mov
jns
cmp
jno
and
cmp
dec
push
jb
arpl
ds
dec
lds
adc
jl
lods
std
sub
adc
pop
js
xchg
ret
jl
repnz
inc
sbb
cpuid
adc
sbb
andb
inc
push
cmp
sub
xor
fld
hlt
fldcw
in
out
ss
loopne
das
je
inc
scas
dec
xchg
jp
mov
sti
xchg
push
stos
test
or
mov
push
adc
sub
pop
adc
mov
mov
ret
addr16
in
in
adc
mov
inc
mov
aad
gs
inc
aad
movsb
xchg
inc
clc
mov
adc
jmp
pushf
jg
int
push
mov
test
adc
aaa
test
repnz
shll
mov
scas
mov
cmp
mov
xchg
cmp
and
enter
jo
pop
jg
mov
lds
sub
std
dec
pop
dec
sub
andl
sub
and
sarb
xor
adc
xor
les
inc
enter
test
not
pop
in
xor
adc
in
notb
xor
add
cmp
fs
out
lret
jne
push
movsb
or
aas
add
mov
movsl
imul
push
nop
pop
adc
clc
inc
dec
xor
sahf
xor
xchg
xlat
xchg
js
shl
iret
insl
lret
pop
js
adc
mov
mov
inc
add
jg
ror
or
sbb
lods
xlat
xchg
rcll
ret
push
add
pushf
xchg
sub
mov
add
xchg
scas
fcoml
out
dec
sbb
cmpsl
test
cwtl
repz
loope
cmp
pusha
or
in
pop
adc
test
or
mov
sub
das
loopne
lahf
push
inc
cmp
or
fistps
mov
or
pop
cmp
pop
nop
jnp
mov
mov
and
pop
xor
lock
js
jg
sahf
ret
sub
mov
jb
push
stos
mov
je
repnz
push
ljmp
mov
arpl
jns
sbb
push
xchg
push
mov
repnz
cmp
push
mov
mov
call
aaa
xor
lahf
xorl
in
mov
mov
push
icebp
popa
out
lock
mov
push
sub
je
inc
xlat
sub
inc
push
push
jbe
lret
push
xchg
es
aas
push
mov
imul
push
lahf
push
rcrl
cwtl
dec
das
xor
in
hlt
adc
sub
arpl
xor
mov
in
sbb
mov
sti
shrb
imul
or
push
pop
sub
insl
xchg
mov
fnstcw
ljmp
inc
int
imul
xor
jae
imul
push
out
and
pop
out
in
fistpll
inc
pop
in
sub
add
jl
mov
and
push
mov
shll
test
cmp
push
int
add
push
pusha
call
add
mov
mov
addr16
push
js
add
and
mov
add
push
sub
stc
mov
aam
or
imul
stos
repz
cmp
call
scas
mov
shlb
xor
xchg
js
inc
sbb
out
in
sbbl
and
out
push
ljmp
push
cmp
inc
adc
or
bound
inc
adc
adc
adc
xchg
ss
adc
mov
adc
push
sub
scas
imul
mov
jnp
sbb
and
test
dec
gs
xorl
mov
cld
xor
adc
jg
cmpsb
inc
imul
test
movsb
add
adc
mov
add
popf
and
xchg
xor
xor
xchg
xchg
imul
pop
xor
push
das
jp
pop
push
sub
ret
cmp
leave
inc
or
into
cmpsb
push
xchg
nop
add
pop
xchg
xchg
adcl
and
jbe
pop
pop
dec
inc
inc
push
mov
mov
cld
sbb
jmp
xor
jb
cwtl
lods
mov
xchg
scas
xchg
test
imul
and
or
enter
cmp
ret
arpl
mov
ss
pop
xlat
das
cltd
jns
jno
fsubs
add
xor
sbb
push
push
cmp
outsb
ret
lret
pusha
cmpb
mov
sbb
mov
cmp
and
fiadds
movl
dec
jmp
mov
lahf
lock
add
jmp
repz
loopne
push
push
push
insl
mov
out
mov
insl
ficompl
push
push
and
push
push
repz
sbb
leave
out
into
stos
or
mov
add
dec
stos
loop
jnp
cld
mov
or
outsl
dec
cltd
pusha
dec
aam
ror
jl
lcall
push
aaa
addr16
pusha
insb
fstpl
lcall
arpl
ret
mov
rorl
dec
inc
repz
pop
dec
ret
push
imul
and
mov
movsb
xchg
pop
cwtl
jne
sbb
ds
insb
mov
adc
dec
out
outsb
inc
fsub
sti
ret
cmp
sbb
cmpsb
mov
add
adcl
gs
imul
mov
ret
add
lret
jno
sahf
out
mov
mov
cmp
push
dec
or
or
popf
mov
adc
clc
inc
add
fs
roll
xchg
xchg
hlt
inc
push
mov
pop
jle
mov
std
lods
popf
jge
je
std
icebp
cld
cmp
dec
and
xchg
sbb
cld
mov
pushl
pop
je
aas
mov
js
pop
fwait
xchg
xchg
mov
pop
pop
mov
into
dec
mov
xor
mov
lret
pop
xchg
fwait
aad
cmp
fwait
out
sub
cs
enter
fldl
cmp
jns
testb
xor
dec
lret
dec
mov
insb
cltd
xchg
jb
or
ja
rorb
popa
cmp
bound
in
cltd
cli
inc
xchg
imul
icebp
fxch
or
repnz
nop
ljmp
cmp
jge
mov
pushf
pop
sub
cmp
into
push
sub
sbb
xor
ljmp
out
loopne
fldl
or
repz
mov
sub
rol
and
pop
lods
jecxz
ret
dec
cmc
mov
or
call
cs
inc
and
xor
mov
xchg
or
jbe
rcr
cmp
mov
int
add
mov
mov
ja
pop
rolb
mov
aas
repz
inc
fucomip
or
cmp
imul
or
pop
mov
out
sbb
cmp
sub
add
sahf
pop
stc
xor
cmpsl
pop
or
dec
mov
cmp
jbe
jae
je
imul
inc
out
adc
and
mov
inc
sub
js
lock
pop
mov
test
and
inc
jno
testb
mov
adc
add
popa
insl
sarl
cmp
adc
bnd
sub
lahf
dec
dec
dec
nop
ss
cmpsl
orl
pop
sbb
push
cmp
scas
pop
test
cmp
cmpsb
cmp
cmp
mov
or
jnp
out
adc
mov
ja
add
test
mov
mov
push
into
test
jp
lcall
push
in
ljmp
js
in
outsl
mov
xchg
dec
xchg
aaa
pop
lahf
leave
out
push
push
cltd
fnstsw
es
add
xchg
xlat
add
sub
in
pop
inc
sub
push
inc
cmp
les
sbb
or
fwait
xchg
jo
cld
cmp
sbb
mov
adc
mov
xchg
inc
dec
xchg
aam
cmp
push
sub
iret
cwtl
aas
push
push
push
inc
or
cmp
jecxz
in
xlat
jbe
dec
arpl
pushf
pop
and
rcr
call
mov
xor
inc
cmpsl
or
mov
movsb
mov
and
or
and
add
mov
adc
sbb
inc
cmp
movsb
push
sub
pop
aaa
or
push
inc
sub
push
int
cmp
std
int
out
inc
repnz
cwtl
jb
fdivrs
mov
push
fdivrs
sub
pop
shl
push
stos
mov
add
es
into
aad
inc
pushf
test
mov
lds
rcl
inc
mov
jp
stos
in
mov
ret
adc
rcrb
push
dec
dec
stos
lcall
outsl
mov
dec
rcrl
pushf
stc
sahf
enter
push
sub
jno
imulb
push
movsb
cmp
mov
cmp
subb
add
and
dec
iret
inc
and
add
loope
sub
adcl
add
or
push
sbb
add
aas
mov
into
jb
mov
aam
repz
clc
push
ret
inc
bound
unpcklps
pop
sbb
es
push
in
pop
mov
ja
rcr
stc
cmp
adc
ja
out
rcr
in
lods
lret
pusha
inc
outsl
inc
shl
mov
xadd
jae
dec
sub
cmp
push
mov
xchg
gs
sahf
cmc
outsl
mov
loope
inc
jl
mov
dec
jl
jecxz
xchg
jne
push
adc
test
mov
or
jns
cs
pop
and
jmp
jge
shld
or
xchg
pop
shlb
xchg
push
mov
inc
mov
loopne
jne
imul
lods
xchg
jl
shl
or
dec
adc
adc
leave
push
mov
sub
or
stc
sub
or
adc
call
sar
lret
push
clc
mov
loopne
or
test
add
xchg
fs
adc
daa
and
sbb
sbbb
push
lret
cli
mov
xchg
xchg
mov
cwtl
sbbl
xor
cmp
pushf
rcl
jmp
push
movsl
pop
mov
loop
cwtl
push
mov
cmp
xor
ret
mov
xor
loopne
mov
mov
enter
push
mov
mov
mov
mov
mov
shlb
add
lock
movsl
push
and
mov
and
cmp
fxtract
cmp
mov
add
add
sub
ljmp
idiv
or
lock
orb
fadds
or
sbbb
xchg
cs
sub
insb
outsb
cmc
add
add
push
int
es
out
jno
hlt
pushf
shl
shll
xor
xchg
dec
pop
int
sbb
cmp
mov
test
xchg
cmp
mov
outsb
mov
pop
subb
fsubrp
je
lahf
cmp
add
fsubr
fsub
cmp
iret
loopne
inc
call
push
pop
xchg
pop
adc
aas
dec
dec
pop
stos
mov
inc
jecxz
popf
shll
pop
pop
cmc
mov
outsl
xchg
lcall
cmp
push
or
ret
and
jae
inc
fs
push
popa
mov
out
outsb
pop
out
xchg
ljmp
stc
imul
xchg
jmp
out
imul
test
mov
push
mov
dec
fldenv
enter
mov
jle
push
fs
dec
inc
mov
aad
and
jo
ret
dec
sbb
dec
jg
mov
in
dec
daa
push
mov
subb
fidivs
mov
or
jnp
or
sbb
xlat
dec
dec
push
dec
xchg
ja
dec
je
mov
lds
out
lds
das
mov
lds
pushf
pop
adc
imul
arpl
jmp
sbb
mov
and
push
fidivl
lret
fstl
int3
fcmovb
sti
dec
xor
xor
sbb
xor
jb
lock
xchg
or
pop
test
xchg
mov
inc
cld
xor
fildl
or
lods
push
repnz
xlat
sbbb
mov
mov
cwtl
imul
cmpsb
jmp
repnz
dec
lods
pop
sahf
arpl
mov
pop
sbb
cmp
nop
sbb
mov
fwait
std
inc
cmp
push
inc
dec
aad
mov
arpl
fldl
dec
int3
adc
jns
push
test
ffree
fists
mov
daa
and
xor
fucom
or
cli
repnz
inc
mov
mov
fdivrl
push
outsb
nop
mov
rclb
xor
adc
aaa
clc
popa
ss
sbb
in
stos
out
cmp
push
js
xchg
bound
xor
fistps
cmp
pushf
and
sahf
xchg
or
dec
push
pop
icebp
xchg
data16
mov
dec
ret
test
les
mov
cmp
outsl
jbe
add
aam
mov
scas
dec
int3
fldenv
loope
or
push
xchg
mov
pop
ud1
icebp
dec
inc
pop
dec
ljmp
push
mov
mov
fmuls
mov
in
aaa
fcoml
loopne
clc
pushf
leave
xchg
cmp
inc
cmp
mov
out
jmp
adc
int
xchg
jmp
jge
lea
decb
fwait
xor
lds
xlat
pop
mov
ret
mov
sub
inc
jp
mov
scas
cmp
cltd
repnz
sbb
cmpsl
jnp
and
xchg
sub
and
pusha
cmp
shrl
test
push
imulb
fisttps
shrb
scas
pop
ja
add
jbe
fidivrl
test
or
sub
shl
cmpsb
and
mov
les
mov
pushf
xchg
fwait
xlat
add
mov
cmp
pop
js
out
push
aam
xchg
and
es
aam
call
sbb
push
dec
sbb
out
test
mov
pop
shlb
cwtl
sub
pop
push
inc
nop
scas
push
lds
jmp
mov
lcall
inc
ficomps
sbb
mov
sbb
cwtl
lahf
fcom
push
in
rcrb
sbb
mov
aad
shl
out
inc
xor
mov
in
cld
mov
xchg
mov
lahf
sbb
repnz
das
mov
rorl
shrl
or
shrb
cmp
or
sarb
vmread
or
outsl
sub
push
adc
stos
inc
pop
jno
jl
lock
in
movsb
dec
dec
aad
push
inc
cmp
xor
add
and
adc
sbb
enter
dec
or
cmp
jmp
in
jb
lea
ret
loop
pop
sti
divb
mov
jp
into
or
call
pop
mov
inc
dec
arpl
xor
mov
loop
cli
dec
clc
pop
pop
mov
jl
inc
ljmp
std
les
mov
cs
push
int
fnstcw
push
cmp
cmp
cmp
push
sub
imul
outsl
in
push
pop
flds
scas
lcall
in
mov
fsub
leave
aam
test
cmpsb
jp
pop
adc
mov
clc
cvtdq2ps
jecxz
xlat
out
mov
iret
lret
push
mov
xor
iret
icebp
stc
movsw
lcall
mov
mov
inc
rcrl
dec
gs
xor
hlt
xchg
stos
push
adc
inc
pop
subb
cmp
cmp
adc
sbb
sbb
jae
xchg
es
cmp
add
inc
push
xor
push
mov
sub
das
bound
jmp
push
pushf
mov
popf
sbb
pop
nop
pop
pop
cmpsb
call
aas
mov
or
into
ja
movsb
jmp
aas
jno
mov
js
aam
daa
scas
cmp
mov
jecxz
lock
leave
leave
mov
inc
loope
std
add
mov
cmp
xor
addr16
loope
ret
push
mov
mov
add
mov
fs
xor
inc
lcall
or
out
roll
or
pop
mov
mov
sbb
push
cmp
ljmp
es
push
push
out
sub
or
out
fs
in
xchg
out
jle
stos
add
out
mov
stos
sbb
out
das
xor
jg
sub
inc
fdivrl
pop
pop
nop
inc
mov
and
lret
push
cld
add
mov
bound
out
nop
adc
push
add
push
mov
fs
xchg
ds
or
sub
and
sbb
mov
pop
cmc
jmp
ffreep
imul
mov
mov
xlat
pop
cmc
fsubrs
cwtl
aas
mov
bound
xlat
in
jnp
push
mov
sbb
sbb
daa
and
adcb
mov
aaa
xchg
rcll
mov
add
mov
xchg
dec
adc
xchg
jmp
cmpsb
aam
sub
cwtl
rcr
lcall
das
sub
popa
mov
dec
stos
push
add
mov
or
inc
mov
xchg
imul
mov
ficoms
movsl
je
mov
dec
inc
shrb
ud2
and
lock
sbb
lret
test
in
data16
jmp
lret
mov
aas
mov
sub
mov
iret
push
jge
out
dec
jge
testb
or
push
imul
sub
cmpsl
and
arpl
sbb
and
or
xchg
xchg
or
orb
jb
repz
imulb
sbb
sbb
inc
lods
mov
jmp
daa
call
mov
add
ds
cmp
inc
outsl
xchg
mov
mov
shll
enter
inc
movsb
push
ret
in
push
or
ret
js
iret
test
xchg
xchg
inc
mov
js
cli
stos
or
push
cs
stc
test
or
fidivl
in
mov
std
xchg
subl
xchg
xchg
test
aad
out
mov
jle
add
bound
jecxz
pop
pop
and
ret
xor
jae
fdivrl
sbb
hlt
mov
pop
mov
rorb
push
aam
or
es
lcall
dec
and
insl
xor
test
dec
mov
jno
adc
xchg
mov
daa
stos
pop
mov
cmp
push
pop
push
cmp
jne
adc
dec
clc
sar
dec
loopne
mov
ljmp
mov
pushf
fcompl
xor
cmp
mov
mov
xor
pop
adc
cld
or
inc
incl
ret
outsl
jne
xchg
ja
cmpb
leave
dec
sub
dec
fcomps
cmp
jne
mov
shrb
test
mov
loope
xchg
stc
pop
dec
adc
add
loopne
clc
es
shll
js
dec
test
xchg
lea
sub
stos
ret
fnstsw
inc
cmp
push
mull
leave
xchg
jns
dec
sbb
cmp
adc
aam
mov
int3
lcall
inc
fnsave
pop
roll
push
lea
pop
in
dec
mov
mov
movsb
sub
jnp
and
inc
rcll
lret
sub
xor
adc
mov
add
inc
cli
outsl
subl
rcrl
fcomps
fisubl
inc
jp
in
inc
mov
pop
lods
xor
sbb
fnsave
inc
fisubrs
mov
test
repnz
dec
out
pop
cs
xor
adc
jno
fwait
add
je
loop
imul
push
enter
or
ret
int3
inc
jno
xor
dec
sub
call
push
test
sbb
sub
int
cmp
jle
mov
pop
scas
fs
push
repz
mov
lret
jmp
and
lods
ret
addr16
dec
jmp
jne
cmpsl
in
data16
pop
ss
jmp
adc
push
stos
lods
sub
aaa
or
addl
cmc
xchg
icebp
into
push
in
mov
ds
test
mov
mov
pop
ret
nop
push
nop
fcmovu
bound
ficoml
pop
push
outsl
test
sbb
pop
jno
add
jg
jno
sub
xchg
lods
mov
mov
xor
add
xchg
dec
lret
add
or
sbb
sbb
shlb
mov
cmp
cltd
out
adc
xchg
inc
lret
push
and
sbb
mov
add
in
imul
outsb
adc
sbb
xorl
pop
mov
xchg
push
mov
insl
aad
fcomps
popa
mov
cmpsl
jne
rcll
nop
ret
mov
xorl
mov
pop
test
call
mov
pushf
ret
frstor
aad
arpl
mov
inc
add
or
je
pop
mov
cld
pop
adc
sbb
sarl
or
in
pop
data16
call
arpl
cmpsb
pop
pop
dec
sbb
lds
aaa
cmc
mov
out
or
push
push
test
xor
fisubrl
aas
mov
cld
imul
lods
add
and
mov
xchg
fsub
mov
dec
out
sub
hlt
inc
shr
mov
mov
sub
out
lea
xchg
loope
stc
decl
call
mov
rcrl
pop
inc
je
pop
mov
xor
push
mov
int3
movsb
call
pushf
dec
iret
add
add
xor
mul
push
stc
mov
jmp
jne
rclb
jmp
mov
stos
sub
shrb
test
lret
aas
pop
imul
adc
adc
cmp
mov
mov
fnstcw
mov
mov
xchg
or
add
inc
ljmp
push
sbbb
andb
in
pusha
push
mov
cmc
dec
xchg
adc
outsl
xor
xor
daa
mov
cs
inc
rorb
ret
daa
fistpll
cmpl
loop
scas
lret
inc
xchg
pusha
jb
ret
jge
or
aam
xchg
jg
xchg
iret
mov
loopne
pop
hlt
mov
mov
jno
push
xlat
add
mov
ja
inc
pop
fsubs
lret
lret
adcl
leave
sub
sub
cmpsb
fsub
mov
push
mov
mov
aad
and
push
jmp
adc
mov
xchg
mov
sub
mov
xchg
sahf
pop
xor
ret
clc
inc
jb
fwait
leave
sbb
stc
sbb
int3
lret
or
fs
and
adc
mov
cmp
lds
xchg
jne
sub
push
dec
fsubrs
mov
mov
sub
or
ds
pop
outsl
inc
sub
out
mov
jne
push
aam
nop
mov
push
test
xor
leave
xor
jmp
test
inc
dec
adc
mov
xchg
std
in
les
cmp
xchg
mov
out
shrl
fcomps
es
cmpsb
movb
lods
mov
sbb
es
test
int
mov
xchg
inc
leave
fiadds
push
ss
bswap
loope
vrsqrtps
rorl
or
mov
cltd
clc
rcrl
push
negb
cmp
sti
pop
pop
cmp
call
inc
gs
arpl
arpl
decl
add
sub
jmp
lods
subb
je
pusha
fdivrp
sbb
inc
daa
sub
push
inc
sub
cmpsb
or
in
ficoms
clc
daa
push
into
push
and
mov
pop
push
sahf
push
loope
mov
and
stos
outsb
push
xchg
push
mov
sar
in
insl
or
pop
dec
mov
js
ljmp
jg
movsw
adc
dec
loope
jno
les
arpl
inc
fadds
fsubl
xor
fbld
repz
push
outsb
dec
out
xchg
addr16
cmc
cmp
js
xlat
popa
xchg
sub
ljmp
rcll
loope
xor
nop
int3
add
ss
out
mov
mov
push
pop
adc
adc
sar
push
or
cwtl
gs
outsl
dec
or
adc
cmp
xchg
inc
into
adc
pop
adc
jb
popf
mov
outsl
jle
inc
add
sbb
adc
cmp
dec
jnp
and
shll
jl
mov
cwtl
in
cmp
in
imul
adc
test
xchg
es
call
jge
je
push
lods
jbe
jle
and
or
jp
xor
jle
rcll
not
pop
cmpsl
xor
mov
mov
orb
xor
cli
scas
add
orb
testb
mov
adc
cld
clc
dec
mov
out
shr
loope
pop
add
adc
cli
mov
rclb
adcb
std
daa
ja
jo
cmpsb
jg
pop
xor
lods
lods
pop
pop
cmp
mulb
cwtl
cmpsb
arpl
out
jns
pop
sub
push
cmp
enter
inc
jmp
scas
imul
and
add
jle
add
jbe
movsl
dec
adc
inc
adc
add
cmp
jp
leave
loop
shrl
adc
sub
lea
decl
xchg
dec
hlt
lahf
or
pushf
mov
push
scas
cmpsl
imul
cmpsl
cli
mov
mov
test
into
repnz
or
scas
ja
mov
jno
dec
pop
popf
sti
dec
or
aas
movsl
cmp
adc
int
fst
mov
sti
dec
fiaddl
and
dec
gs
lea
jecxz
mov
sbb
sbb
in
inc
mov
jmp
jl
adc
lcall
ficompl
xchg
leave
movsl
insb
adc
sbb
jmp
push
cli
fdivrs
xor
movsb
stos
mov
push
mov
shll
dec
sub
dec
enter
adc
mov
outsb
aaa
sbb
pop
push
js
icebp
sbb
hlt
dec
scas
sub
ret
fcmovbe
or
and
add
xchg
fstl
test
adc
pushf
mov
xchg
int
in
jnp
inc
pop
jmp
inc
or
or
mov
shrb
pop
sahf
cwtl
inc
jecxz
lahf
test
das
test
add
and
inc
data16
es
pop
rol
fiadds
cmp
loopne
std
imul
aad
ss
pop
in
aam
sarb
pop
pop
incb
ljmp
sbb
aad
call
jbe
jmp
push
addl
mov
add
inc
sbb
fldl
aas
hlt
sbbb
add
in
pop
or
push
mov
les
rorb
popf
push
enterw
out
fnstsw
add
mov
cmpsl
scas
sub
xlat
rcrl
jmp
pop
cmp
pop
mov
insl
fwait
in
jecxz
sbb
pop
addr16
loop
cmp
addr16
fiaddl
jg
ret
out
outsl
push
mov
jl
mov
pop
das
aaa
mov
xchg
xchg
push
cmp
hlt
jecxz
les
arpl
inc
fistps
sbb
push
fisttpll
cmp
xchg
push
cli
sub
cmpsb
rcrb
mov
xchg
das
sub
xor
arpl
stos
jne
fsubrl
push
in
inc
mov
cwtl
mov
or
cmpsl
pop
mov
add
das
aad
inc
sub
pop
adc
mov
jp
insl
mov
push
arpl
adc
ret
xchg
push
fcomp
movsl
and
push
pop
lods
icebp
mov
pop
xor
dec
mov
imul
inc
xor
pop
in
or
repz
mov
mov
insl
push
inc
xchg
inc
lds
cld
sub
push
das
std
cmp
mov
nop
mov
dec
fs
pop
add
test
adc
ffree
out
dec
pop
sub
jl
adc
mov
or
cmp
fisttpl
and
lahf
loope
jb
push
xchg
int
fwait
adc
fmul
lahf
sbb
lods
lods
lret
jbe
sti
add
gs
or
add
repnz
cld
int
addr16
mov
jns,pn
int3
xorb
mov
cwtl
mov
pop
test
iret
int3
xor
idivb
cmp
xchg
push
lods
lahf
repnz
dec
rorb
add
js
jnp
dec
cli
jle
xor
fldt
jge
mov
lret
in
pop
sahf
jl
xor
push
cmp
pop
movsl
and
fcomp
test
inc
add
cmc
mov
mov
xchg
cmc
dec
fiadds
popa
pop
pop
daa
out
jge
xor
jg
in
les
pop
outsb
or
pushf
mov
das
xchg
push
xchg
jecxz
sti
bound
mov
mov
xor
mov
dec
cmp
call
fistpll
cmp
dec
push
xchg
mov
popf
call
push
in
in
push
dec
mov
xchg
jbe
xlat
scas
dec
mov
mov
cmp
sarl
daa
icebp
jne
shl
pop
mov
ret
inc
cs
mov
jne
pop
sarl
ljmp
jecxz
cmp
sar
ja
xchg
inc
idiv
stc
mov
mov
sti
idivb
orb
xchg
movsb
adc
inc
rolb
push
cmpsb
scas
adc
insb
push
in
xchg
lcall
pop
int
xchg
cld
pop
jl
mov
mov
cwtl
add
cmp
xor
adc
lock
dec
inc
hlt
and
addb
and
sub
add
dec
push
or
sub
repnz
iret
imul
std
lret
lret
ds
push
mov
out
jbe
xchg
mov
mov
mov
lods
pushf
cwtl
pop
jle
xchg
jae
sub
test
mov
adc
shr
pop
or
out
aas
pop
add
ljmp
inc
fcompl
imul
pushf
adc
stos
mov
cmp
push
cld
mov
sbb
push
test
xchg
pop
idivl
mov
pop
ljmp
xchg
fidivrl
pop
pop
jmp
dec
in
insb
sub
mov
mov
xchg
pop
and
outsl
imul
jae
xchg
loopne
enter
in
lcall
cmp
sarl
mov
lds
sbb
add
adc
xor
dec
ror
int
adc
mov
mov
jns
les
add
add
xor
adc
mov
fistpll
and
addb
mov
or
pusha
dec
sub
lret
inc
mov
aam
js
add
push
adc
nop
scas
inc
ja
xchg
fwait
inc
pop
dec
fistps
adc
add
leave
and
aas
xor
add
dec
inc
or
aad
and
fimull
je
movsl
scas
inc
dec
mov
dec
mov
sub
mov
mov
cmp
cmp
lahf
out
mov
mov
pop
sarb
or
pop
and
inc
mov
jns
jle
out
jg
testb
cmp
cld
mov
push
pushf
gs
push
push
cwtl
dec
sub
imul
loop
imul
add
insl
aam
push
fdivl
stos
aaa
push
cmc
push
and
pusha
pop
xor
stc
aaa
sbb
std
lock
in
or
les
jge
jb
insl
andb
daa
pushl
add
ja
arpl
xchg
xor
dec
mov
xchg
sub
mov
cwtl
dec
fbstp
testb
push
lock
xchg
int
push
mov
repnz
push
adc
ljmp
push
mov
rcrl
push
jns
sbb
jge
mov
xchg
xchg
sti
leave
sahf
hlt
mov
xlat
add
or
xchg
shrb
cmp
andb
ja
jmp
push
add
cmova
pushf
lods
out
dec
in
int3
enter
fbstp
or
imull
push
cltd
shl
outsl
push
and
rol
arpl
shlb
fistpll
mov
pop
and
cmp
jns
mov
jo
mov
lret
xor
out
loopne
sbb
jae
dec
arpl
xor
or
popa
adc
adc
inc
push
mov
sbb
adc
cmpsb
jns
lret
push
add
aam
sub
mov
sbb
insl
push
and
mov
xor
fwait
or
jp
aad
popl
mov
push
in
or
imul
or
call
jnp
insb
and
mov
into
ret
in
mov
mul
mov
push
jg
shrb
xchg
xor
scas
cli
cli
ds
cltd
inc
icebp
clc
dec
andl
mov
push
dec
scas
arpl
or
pop
loopne
fidivl
or
enter
sbb
jns
int3
jp
inc
hlt
mov
std
bound
xchg
in
lds
das
mov
sub
mov
inc
pop
mov
nopl
xchg
mov
popa
mov
fdivl
mov
cmp
or
cli
fnstenv
roll
fistpl
int
in
mov
test
mov
dec
imul
push
shll
orb
sti
and
jl
cld
sub
mov
adc
call
insl
movsb
jl
pop
outsl
mov
cmp
jmp
push
add
into
jno
adc
cli
lods
mov
jl
rcrl
xor
into
cmpsl
cmp
idivl
ffreep
lock
ljmp
mov
outsl
mov
mov
inc
adc
fcom
xor
adc
fsubs
mov
pop
out
fwait
stc
nop
out
int3
inc
or
lods
pop
stc
or
fstl
sbb
call
push
sti
or
pop
jne
xchg
outsl
dec
push
add
mov
dec
mov
cld
icebp
sub
loop
add
cmp
adc
sahf
cmp
nop
scas
pop
loope
push
push
test
pop
and
cmp
xor
add
mov
cmpsl
dec
cmp
out
xor
mov
mov
sarl
or
add
cwtl
dec
pop
rol
push
int3
xor
jmp
sahf
jmp
push
aaa
popf
mov
adc
dec
pop
dec
enter
mov
or
mov
loope
mulb
cmpsb
lods
jns
xchg
fistpl
push
pop
lock
jg
out
mov
daa
sbb
aam
subl
out
xor
test
int3
adc
and
xchg
cltd
es
cmp
or
and
adc
aam
sub
hlt
in
mov
mov
sbb
push
push
mov
sbb
add
mov
jp
cmpsb
cmp
xchg
sbb
cmp
xor
jmp
jp
xchg
mov
lock
adc
js
mov
xor
xor
sub
mov
mov
mov
mov
sahf
sbb
pop
ljmp
xchg
cmpsb
cmp
roll
into
scas
testl
fmul
repnz
gs
mov
xchg
daa
lcall
test
sub
mov
aad
xchg
fnstcw
ja
push
out
pusha
sahf
stos
repnz
cli
lods
fmul
cmpb
dec
daa
scas
out
xchg
jbe
or
xchg
xchg
and
mov
mov
pop
adc
mov
push
add
lret
lods
lods
shlb
push
inc
shll
test
imul
cs
and
mov
lods
jo
adc
push
rcr
inc
pusha
sub
dec
mov
mov
jae
iret
orb
or
popa
mov
sahf
mov
push
sub
xor
sub
aam
xchg
loope
push
xchg
int3
push
push
loop
xchg
push
das
mov
mov
sbb
push
or
loop
sub
jle
jb
leave
popa
bound
cmpl
and
je
inc
out
mov
push
pop
push
icebp
ret
out
fildl
frstor
sub
pushf
jno
les
cltd
aam
sub
icebp
and
dec
jl
cwtl
adc
and
shrl
loope
vfmsub231ss
xchg
lock
dec
dec
leave
insb
mov
shll
jns
sarl
add
enter
inc
inc
xlat
lret
mov
call
rcrl
mov
inc
das
jo
jge
leave
or
xchg
enter
test
xchg
sbbb
xchg
lcall
sar
shrb
pop
cmpsl
push
add
pop
add
loope
movsl
adc
nop
mov
adc
inc
pop
jne
push
sahf
cwtl
cmpsl
push
mov
insl
inc
mov
popf
push
pop
mov
push
leave
sub
in
cmp
ret
mov
add
arpl
scas
push
jmp
orl
jnp
jle
mov
push
push
in
shrb
fdivr
stos
mov
es
jl
scas
cmovg
cltd
sbb
movsl
repnz
jbe
inc
cli
in
mov
daa
out
aas
sub
in
xchg
insb
aad
in
enter
fnstenv
fildl
std
mov
hlt
push
or
or
xor
dec
pop
clc
bound
repz
call
addr16
push
cmp
adc
mov
stos
xchg
push
hlt
cmpsl
pop
jnp
mov
stc
sarl
gs
jp
subb
push
cmpsb
sbb
adc
jb
push
jnp
or
push
sbb
idivb
jp
cltd
mov
dec
jb,pn
mov
xlat
lahf
pop
sti
lods
pushf
push
sub
xor
cmp
jp
mov
inc
outsb
popa
sbb
jae
ret
movsb
clc
and
fstl
adc
stos
imul
pop
mov
movsl
xchg
mov
add
add
lcall
mov
sub
fcomps
push
ja
lock
cmpb
fstpt
incl
adc
enter
cmp
xor
add
dec
das
add
outsb
mov
jmp
cld
test
mov
adc
xorb
inc
sbb
cmp
in
xchg
jne
in
pusha
jg
push
jg
mov
push
pop
iret
mov
jbe
loopne
inc
jge
ficomps
rcrl
out
push
scas
call
imul
jmp
mov
adcb
mov
ljmp
aad
add
shr
call
mov
in
int
and
inc
adc
xchg
fwait
mov
xor
or
push
xor
or
dec
pop
jmp
mov
out
add
pop
shrl
inc
andb
cli
sbb
movsl
leave
mov
add
and
mov
push
sbbb
add
xchg
xor
incb
jae
ljmp
dec
adc
adc
icebp
jo
push
fstps
xor
sbb
in
inc
clc
jge
add
cmpl
pop
dec
mov
enter
and
fldcw
stos
clc
add
fsubrp
hlt
jns
iret
inc
dec
aas
and
sbb
push
dec
addr16
mov
dec
hlt
out
jle
test
mov
imul
pop
iret
adc
shrl
fistpll
mov
stos
lret
fstpl
mov
mov
adc
sub
outsb
jae
movq
addr16
push
cmp
insb
pop
adc
fldenv
pop
mov
adc
lds
test
mov
mov
adc
sti
and
mov
cltd
xor
push
and
pop
jmp
mov
push
enter
bound
lds
cmp
xlat
mov
xorl
fcoml
lcall
add
sarb
stc
outsb
cmp
bound
xor
lds
in
insb
jecxz
in
test
pop
fwait
stos
mov
mov
sbb
push
test
add
sub
mov
insl
int
rolb
pop
adc
ljmp
push
addb
push
insb
loopne
jns
xchg
inc
mov
lea
xchg
cmp
and
jg
pop
push
fcoms
jnp
imul
fiaddl
sub
xchg
xor
mov
out
push
inc
mov
or
sub
leave
popa
sub
insb
xchg
xchg
and
jp
in
int
cs
jnp
cmp
and
mov
xchg
add
out
shrb
adc
mov
cwtl
icebp
lea
jb
aaa
pop
dec
mov
popa
add
mov
fmul
sahf
addr16
and
mov
sub
mov
mov
sbb
data16
adc
int3
cs
addr16
mov
adcl
mul
sbb
adc
bnd
sub
inc
or
inc
fucomip
mov
or
xorb
inc
int3
stos
pop
rclb
fwait
add
aad
sub
or
xlat
mov
fwait
sahf
lcall
add
cs
out
fisttps
movswl
sub
addl
js
push
hlt
sub
sbb
or
inc
jnp
mov
sbb
repnz
pop
sahf
aas
adc
add
jb
cmove
es
push
and
enter
je
test
movsb
fcomps
fnstsw
jle
daa
addr16
stc
rorb
nop
aad
jmp
out
push
mov
push
pushf
mov
jg
jno
insl
sbb
mul
popf
cmp
scas
jg
xor
pop
in
pop
rcr
xor
sbb
dec
cmp
adc
and
mov
daa
test
pop
inc
cmp
stc
cmpl
repz
adc
mov
cmc
mov
insb
movsl
loop
enter
sbb
cwtl
pop
or
mov
jecxz
out
movsb
or
aas
xchg
mov
fnsave
mov
mov
fs
test
icebp
xchg
adc
cmpsb
pushf
in
lcall
mov
out
xchg
loope
adc
addr16
jnp
in
fcmovb
popf
aaa
pushf
in
pop
adc
jp
fcompp
cmp
ss
xchg
ficomps
gs
lret
lock
scas
xor
sub
lret
mov
movb
idivb
das
call
aam
cmp
loop
sbb
push
cmc
fldcw
stc
sub
xchg
out
mov
fisttpl
push
push
jb
sbb
nop
inc
cmp
call
jmp
inc
bound
mov
and
pop
xchg
fisttpll
sub
call
xchg
orb
sti
jne
shll
or
xlat
into
imul
insl
pop
xor
mov
inc
aam
pushf
repnz
sbb
addr16
push
adc
fmuls
bound
pop
pop
shrb
scas
dec
test
dec
xchg
jle
orl
punpcklbw
jecxz
xchg
adc
dec
mov
movsb
inc
push
or
sub
outsb
insb
ret
push
bound
sub
mov
dec
mov
sub
sti
pusha
fisubrl
dec
xchg
mov
inc
pop
mov
cmpsl
test
mov
xor
stos
pop
popa
xchg
clc
aad
sub
and
dec
movsb
and
out
push
add
cld
lahf
std
xchg
cmc
xchg
je
push
xor
mov
inc
sub
dec
or
xchg
push
xchg
shl
jmp
sbb
shrb
xorl
loop
js
jo
movsb
pushf
shll
inc
mov
sub
call
je
lahf
mov
sub
lds
jp
or
cwtl
stos
pushf
js
ja
pop
push
push
dec
adc
sti
push
cmp
push
subb
popf
sbb
test
cmp
mov
push
push
jb
test
mov
lock
cmc
add
nop
xchg
jg
or
push
push
mov
jns
pop
and
fstpl
mov
dec
inc
shll
lahf
jp
xchg
jne
lods
jb
lret
xor
outsb
xchg
adc
scas
push
shrb
call
add
or
mov
rcrl
sub
lock
mov
inc
mov
addr16
push
mov
xchg
mov
fnstcw
mov
inc
xchg
mov
movq
mov
mov
call
or
lods
cmpsb
mov
inc
out
or
enter
sub
fwait
pop
dec
repnz
leave
mov
jmp
stc
out
fxam
xchg
and
and
inc
cmpsb
inc
int3
jnp
rcll
cmpsb
and
test
decl
subb
out
in
or
mov
dec
push
orb
or
lds
stos
pop
subb
adc
xchg
movsb
mov
lea
ffreep
pop
lods
mov
cmpsb
pop
mov
mov
hlt
or
mov
xlat
inc
jg
lret
cmp
pushw
fcmovnu
pop
inc
cltd
mov
into
cwtl
mov
pop
lock
scas
xor
pop
mov
push
ljmp
insl
hlt
stos
mov
and
sub
lret
std
pop
scas
pushf
jbe
push
xchg
jecxz
xor
inc
stc
push
ret
dec
hlt
jae
arpl
mov
lahf
adc
les
lcall
in
adc
rcr
and
dec
jae
mov
ja
cmp
lret
mov
pop
push
sahf
add
inc
mov
lcall
sub
sbb
mov
mov
cmc
mov
jne
inc
rol
pop
push
mov
add
mov
push
dec
lret
clc
repnz
jns
rorb
push
imulb
pop
push
push
jnp
je
shlb
mov
ja
push
mov
pop
cmp
es
je
jne
mov
sub
push
mov
repz
icebp
or
mov
mov
shll
add
adc
arpl
pop
loopne
push
insb
xchg
out
xor
shlb
mov
push
divl
out
or
imul
mov
add
dec
dec
into
test
push
jle
mov
pop
movsb
lods
add
sbb
xchg
jnp
sarb
loop
pop
pop
movsb
add
push
test
imulb
scas
push
pop
mov
jp
inc
mov
movsb
xor
jno
adc
add
fnstenv
xchg
aas
loope
mov
jge
mov
aas
mov
std
push
or
xor
xor
mov
sahf
push
mull
cwtl
sub
cmpsb
shlb
xchg
test
sub
inc
sbb
push
loop
lret
mov
mov
xchg
ss
nop
mov
int
push
push
and
std
or
mov
orl
inc
mov
cs
adc
jb
rcrl
mov
test
test
cltd
and
lock
push
pop
cmp
lods
insl
push
lcall
into
pop
sub
add
sahf
pop
cmpsb
fnstcw
mov
sub
ljmp
pop
adc
sbb
bound
xchg
lret
lcall
and
mov
mov
and
xchg
lds
mov
movl
cli
or
rcrl
pop
add
out
enter
test
cmpsl
or
pop
adc
or
inc
xchg
jmp
pop
xlat
cli
notb
mov
jp
daa
into
fs
imul
insb
xchg
cmp
sbb
push
mov
rolb
cs
pusha
fwait
int3
jnp
test
aad
mov
imul
lret
mov
int
push
inc
hlt
pop
cmp
aam
adc
jae
jl
mov
fwait
xchg
lods
mov
mov
ror
fidivs
pop
lret
aas
dec
shll
pop
stc
cmp
mov
jns
data16
adc
nop
out
stos
outsl
sti
xchg
repnz
sub
lods
lahf
pop
dec
movsl
shl
fwait
adc
jle
out
stc
cmpsl
in
filds
mov
mov
nop
and
fistl
sub
lea
loope
daa
or
lods
inc
push
fisubs
je
ret
ret
xlat
rcrl
mov
mov
pop
push
fnstcw
repz
cwtl
lds
or
cmpsl
mov
pushf
out
add
scas
rolb
imul
or
jmp
repnz
stos
pop
adc
stos
cmpsb
push
inc
cmc
cmpsb
adc
pop
inc
subb
outsl
add
lock
int3
stos
movsb
dec
aas
xchg
or
aas
ja
movl
imul
push
pop
adcl
add
stos
in
dec
pop
or
inc
movsb
frstor
mov
int3
jge
jle
sbb
mov
roll
cs
sbb
lods
add
sub
lods
cmp
mov
dec
push
negl
cmpsb
cltd
fistps
pusha
adc
mov
mov
fwait
push
add
ret
fs
mov
fs
clc
loope
mov
mov
mov
lahf
sbb
jae
push
adc
mov
or
popf
cmp
out
clc
out
das
outsb
pop
mov
ret
ss
xchg
inc
in
pushf
inc
test
bound
int3
sbb
mov
add
jmp
mov
fwait
jp
inc
jl
imul
xlat
sbb
push
fnstsw
rep
or
arpl
inc
xor
mov
cld
imul
ja
or
sbb
dec
mov
lret
dec
dec
pop
xor
mov
adc
xchg
add
push
test
insb
jl
int3
add
out
xor
insl
popa
inc
cld
pop
nop
mov
adc
test
adc
mov
dec
aam
mov
test
mov
into
int3
idivb
xor
out
lods
mov
mov
jne
dec
stc
pop
negb
sbb
out
pop
orl
add
test
mov
cmp
add
out
outsb
or
scas
ja
aas
mulb
lods
inc
ss
and
dec
xchg
sub
enter
and
adcl
fdivrl
fdivs
jl
stos
sti
sub
daa
xlat
fwait
jb
add
mov
jo
jns
and
sub
dec
in
and
mov
faddl
sarl
add
xchg
inc
shrw
pop
and
stos
test
testl
loope
inc
fnsave
cmp
dec
or
xor
dec
pop
je
xchg
jl
xchg
sahf
out
xchg
cmp
add
mov
mov
inc
dec
add
and
or
enter
mov
pop
std
data16
stos
ja
jne
push
push
fstpt
decb
mov
mov
adc
jnp
jge
and
xor
add
sub
inc
popa
stos
adc
or
xor
ds
out
jo
fists
pop
cmp
ljmp
or
sbb
scas
add
inc
or
cmp
mov
xlat
imul
roll
dec
outsl
adc
dec
lea
inc
pop
nop
repz
cli
push
mov
stos
repz
xchg
loopne
jns
fimull
mov
mov
out
xchg
pop
call
push
popa
outsl
fidivrs
cmp
push
and
xchg
bound
xchg
sub
scas
xor
inc
dec
push
pop
lret
pop
loope
lcall
adc
movsl
xor
cld
mov
mov
fs
lock
call
fistpll
sbb
in
cmpb
int3
push
push
lret
sbb
out
imul
ja
lods
inc
adc
dec
pop
call
xor
fcompl
sbb
inc
adc
in
adc
outsl
cmpsb
xchg
push
fnop
aad
out
pop
movsl
lock
mov
fwait
hlt
mov
ja
mov
xchg
test
loope
mov
sbb
sbb
mov
pusha
or
lods
inc
mov
lea
cmp
hlt
cmp
mov
push
push
jbe
mov
cmpl
xlat
dec
sub
cmp
pop
push
fdivrp
push
add
orb
cmp
insb
mov
and
daa
ret
adc
pushf
or
mov
icebp
jge
mov
and
xchg
mov
mov
pop
pop
inc
add
inc
rclb
das
jns
shll
jl
pop
fistpl
iret
stos
int
dec
xadd
or
mov
hlt
xchg
push
lods
jge
inc
into
adc
add
push
xchg
mov
xor
inc
xlat
adc
push
pop
sbb
inc
inc
fistpl
xchg
jno
mov
outsl
ds
int3
stc
test
loope
fimuls
fmull
addr16
sahf
and
les
aam
test
aad
je
add
mov
and
outsb
js
add
jp
loope
push
mov
lahf
aaa
mov
jl
jne
ja
or
pop
xchg
sarb
dec
jg
stos
push
out
adc
stos
add
jbe
adc
or
outsl
jns
adc
fst
mov
das
cmpsb
into
push
mov
inc
jmp
enter
cmpl
inc
jnp
movsb
movl
lods
pusha
xchg
pop
xchg
inc
jae
lahf
or
fnop
ds
int
sbb
xchg
jns
mov
adc
jo
push
push
mov
sbb
cltd
icebp
jmp
cmp
in
icebp
jns
cmpsl
gs
rorb
xchg
mov
in
fnstcw
icebp
inc
std
repnz
add
push
pop
xlat
fnstsw
and
jl
xchg
sbb
jns
or
push
cmp
sub
in
shl
add
fs
pop
sbb
and
sbb
cwtl
xchg
jle
cmp
stos
sub
mov
pop
iret
adc
sbb
fistps
int
dec
mov
scas
xor
mov
jns
mov
div
repz
xchg
or
push
fstp
aaa
fs
push
clc
subb
popl
ret
cmp
lret
test
jno
shrl
jle
xor
xchg
fimuls
arpl
sbb
nop
aaa
and
dec
cmc
adc
sbb
or
ret
test
popf
fiadds
hlt
shlb
test
inc
pop
imul
ds
sahf
fs
imul
je
in
pop
mov
cmp
aas
and
pop
mov
adc
sbb
sbb
inc
mov
cmp
sub
movb
xchg
and
push
xor
gs
fsubrl
inc
pushf
sub
xchg
and
out
mov
add
inc
in
mulb
cltd
fbstp
loopne
imul
fnstenv
imul
add
adc
loope
dec
das
int3
push
mov
or
dec
xchg
jae
jp
pop
pop
mov
pop
pusha
push
test
cwtl
jmp
jg
jmp
xchg
arpl
ja
cli
inc
aas
pushf
cmpsb
mov
ret
or
and
cmc
bound
or
adc
inc
sub
loop
xchg
jle
jp
jcxz
stos
jecxz
xchg
and
bound
xor
add
xor
iret
mov
inc
jno
mov
jae
les
outsb
test
dec
repz
insl
lret
lock
cmp
mov
test
je
in
and
inc
dec
adc
aad
xor
inc
test
push
adc
xchg
pop
jge
inc
dec
add
flds
dec
xor
enter
mov
adc
rcll
stos
shll
jnp
mov
adc
fstps
sub
adc
inc
imul
addb
add
mov
cmp
sbb
dec
mov
ja
arpl
add
call
test
movsl
inc
or
jmp
lock
inc
imul
ss
mov
cmp
adc
push
imul
pop
ja
ljmp
pop
sub
repz
xchg
jmp
pop
cmp
push
xchg
fs
mov
icebp
push
jmp
adc
xor
dec
xor
jae
pop
aaa
daa
icebp
jge
arpl
sti
loope
addl
mov
push
adc
mov
repnz
out
clc
cmpsl
mov
loop
test
sub
call
inc
loope
mov
sahf
pop
jecxz
push
aaa
mov
int3
jns
jns
mov
iret
je
sub
enter
mov
mov
cmp
pop
mov
push
stc
ja
xchg
mov
lret
lret
popf
call
jp
sub
test
xor
aam
ljmp
data16
cmp
mov
dec
ljmp
pop
xchg
mov
mov
adc
or
push
mov
ret
mov
cmp
dec
adc
add
aad
mov
iret
fsts
popa
out
xchg
rdpmc
ss
add
sub
cld
movsb
pop
pop
xchg
test
xchg
movsb
aam
xor
adc
xor
or
movsb
neg
push
push
xchg
pop
pop
jne
push
call
cmp
aaa
rclb
jg
xchg
outsl
pop
jnp
xcrypt-ctr
cmpsl
pop
daa
jbe
fldl
xchg
clc
movsb
int3
les
pop
adc
lcall
out
mov
mov
or
test
js
xchg
cmp
fcomps
mov
pop
adc
cs
push
lds
add
inc
cmp
test
push
sbb
cmp
mov
es
scas
jecxz
out
jnp
mov
mov
lea
mov
xchg
push
mov
nop
xor
pop
or
jno
in
jnp
inc
aaa
sub
or
xlat
aam
cmp
sti
jge
or
daa
sub
jbe
loope
mov
cmp
test
je
je
sbb
mov
sbb
pop
insb
mov
adc
stc
ffreep
dec
cmpb
cs
clc
push
mov
cmpsb
inc
jg
jb
gs
jmp
lcall
sub
xor
pop
cmp
or
dec
sub
pop
pop
jl
or
and
jp
inc
aas
xor
out
cld
xor
and
jb
jbe
add
push
addb
lss
push
push
ds
xor
push
push
jmp
jns
in
dec
sti
negb
xor
xor
imul
pusha
or
les
mov
jbe
jb
push
xor
stos
shll
and
int
xchg
mov
imul
sbb
jp
cmp
pop
or
outsl
jo
jle
jo
in
mov
pop
dec
and
fistpl
pop
mov
pop
in
leave
cltd
addr16
ja
repnz
sub
aad
jecxz
mov
cli
mov
mov
insl
test
pop
icebp
jmp
ja
testb
mov
mov
jbe
and
lret
les
jmp
mov
int
mov
shrl
cmp
movsl
fstpt
pop
mov
pop
in
sub
and
rcrb
dec
fwait
cmp
jbe
dec
movsl
fwait
push
je
and
jle
dec
nop
pop
test
dec
mulb
out
movb
cmp
in
add
push
popa
jmp
sub
sub
ljmp
mov
aaa
rorl
mov
cld
mov
mov
lea
repz
imul
movb
repz
scas
cwtl
sti
clc
mov
or
mov
dec
in
jno
mov
or
stos
mov
clc
jmp
mov
js
xchg
ljmp
mov
test
aad
cmpsb
in
add
lret
push
push
push
insl
test
sarb
cltd
arpl
loop
lds
jmp
add
inc
mov
jl
pop
cmpsl
push
clc
cmp
loop
inc
push
ljmp
je
popa
xor
fbld
xchg
stc
dec
add
in
xchg
dec
es
push
sahf
xchg
dec
je
mov
and
dec
jbe
mov
mov
js
jae
pop
sbb
jmp
daa
sbb
mov
mov
jmp
iret
pop
je
cmp
sahf
dec
sarb
ficompl
cmp
mov
loopne
jbe
movsl
pop
aam
outsb
or
or
cmp
sti
pushl
imul
rcrb
sub
movsb
in
inc
mov
dec
and
pop
bound
adc
sbb
incb
lds
dec
cwtl
aaa
mov
push
test
jp
in
xchg
pop
push
jns
cmp
or
pop
xchg
mov
fisubs
cmp
cmpsl
fs
jae
shr
iret
in
mov
ret
loopne
or
stos
or
mov
jmp
jo
sbb
rcll
add
jl
mov
nop
mov
jnp
add
jge
inc
cmp
icebp
adc
lds
sub
push
imul
mov
dec
pop
sti
and
cmp
in
and
aaa
mov
jb
outsl
add
mov
clc
iret
out
cmpsl
fwait
xchg
add
imul
xchg
xor
ret
in
xor
sub
hlt
mov
push
aam
int
xlat
mov
fwait
cmp
insb
std
repz
iret
popa
std
enter
mov
cli
mov
popa
inc
outsl
das
in
xor
aad
adc
push
lods
das
lret
pop
add
icebp
xor
mov
mov
decl
jns
inc
je
call
and
lret
xchg
jbe
dec
cmp
lcall
ljmp
sbb
mov
lock
dec
in
jl
mov
mov
fs
pop
pop
pop
jns
out
lds
aam
and
es
jecxz
mov
xor
adc
je
adc
inc
fdivr
pop
mov
push
pop
loopne
sub
outsb
sbb
std
repz
sbb
fwait
fs
sub
jp
mov
mov
insb
mov
mov
adc
fsubs
sarl
imul
jbe
ja
shll
bound
imul
mov
ss
sub
arpl
jne
es
push
xor
and
call
sahf
xor
push
pop
inc
out
clc
ja
imul
cwtl
movl
jmp
push
push
je
sub
aas
inc
sub
stc
xor
pop
jo
sbb
ds
out
xchg
xchg
lahf
jne
lods
fs
xchg
mov
mov
or
stos
call
shrb
push
sbb
add
outsl
dec
jmp
and
call
cmp
je
fwait
mov
pop
mov
sub
testl
inc
dec
push
arpl
fs
and
mov
enter
or
scas
rcrl
xchg
push
dec
fmuls
aas
outsb
push
jo
sub
repnz
adc
or
mov
or
ss
dec
in
sub
push
out
test
rolb
mov
iret
repnz
pop
xchg
mov
sti
sbb
std
fmuls
add
incl
inc
adc
jbe
cmp
sub
add
test
push
mov
sub
dec
nop
bound
cwtl
xchg
pop
pop
sbb
popa
xchg
aam
jmp
testl
sbb
lock
adc
cmp
and
xchg
iret
adc
ret
daa
add
lret
sbbl
adc
jno
out
test
push
and
ss
movsl
cs
inc
mov
cld
jmp
inc
cmp
cltd
test
aad
mov
fsts
ja
mov
out
jbe
lcall
mov
mov
js
insl
sub
mov
int3
mov
sahf
das
push
cli
inc
cmpsb
jmp
fdivl
js
mov
mov
push
outsl
inc
mov
mov
mov
dec
jne
mov
xlat
bound
into
mov
inc
adc
out
test
popf
cmp
cmp
data16
inc
mov
inc
pop
mov
mov
in
sar
aas
dec
scas
mov
mov
enter
mov
bound
push
js
dec
dec
out
inc
adc
repnz
mov
jns
sbb
lock
shl
insb
mov
pop
rcrl
fists
fcomi
pusha
shll
inc
mov
fucomip
inc
in
jp
addr16
int
stos
clc
mov
pop
and
sub
jbe
cld
rcr
sbb
outsl
jle
sbb
lds
imul
in
adc
pop
add
lock
rorb
into
cmp
sbb
sar
arpl
loope
cmp
sbb
cli
xchg
lea
pusha
sub
or
imul
lahf
xor
push
push
stos
push
pop
pop
fstps
scas
enter
mov
xor
jmp
mov
push
inc
testl
ljmp
dec
cli
out
repz
sub
xor
jp
repz
and
or
dec
into
dec
jae
or
jle
xor
mov
pop
es
jbe
roll
sub
nop
dec
jp
xchg
jnp
nop
les
push
test
mov
push
clc
jecxz
jle
jecxz
ret
fwait
aas
je
loopne
scas
aad
lds
push
push
test
adc
into
jns
jbe
repnz
jmp
sub
enter
or
jnp
call
xor
int3
test
inc
jl
pop
mov
pop
scas
pushf
aas
rclb
imul
xchg
int
sti
test
sub
stos
sbb
push
in
push
mov
jo
or
add
add
inc
sti
mov
push
dec
ljmp
jg
pop
mov
cmp
push
jo
push
addr16
add
jae
sbb
aas
cs
xchg
aam
xor
jno
nop
in
imul
ficomps
cmp
inc
xor
xchg
sub
and
es
inc
adc
inc
mov
add
ss
nop
cltd
mov
add
ret
jp
mov
sub
jp
sub
jnp
jmp
jnp
fisttps
jb
arpl
scas
inc
cmpsl
adc
mov
sub
xchg
sbb
mov
and
and
jl
int
jne
mov
xchg
jno
packuswb
rolb
ret
cmpsl
push
pop
xor
pop
pop
pop
std
cs
xchg
jge
xor
into
cli
xchg
fistpl
sub
stos
cs
jge
jno
jno
je
imul
cli
leave
xchg
loop
test
add
mov
addr16
push
inc
sub
insl
jno
test
jp
push
adcl
imul
gs
mov
xchg
imul
mov
mov
fptan
xor
mov
mov
push
decl
lahf
subb
mov
pushl
into
jbe
add
jle
dec
lods
mov
mov
movl
jcxz
je
loop
push
movsb
js
outsb
mov
call
sahf
fdivrp
out
test
fisttps
imul
ss
rcl
jns
dec
fcmovb
jb
cmp
jb
inc
cli
and
and
mov
cmp
movsl
or
jb
divl
xchg
sbbb
xor
dec
addr16
inc
rcr
cmp
fdiv
cmp
push
repnz
pop
push
mov
mov
loopne
cltd
inc
and
pushf
nop
or
mov
or
loope
shr
aaa
std
daa
push
cmc
add
push
aad
int3
out
jmp
mov
mov
shrb
inc
in
adc
push
jg
mov
mov
test
jl
pop
and
jno
test
loop
outsl
pop
sbb
lds
outsl
scas
imul
outsb
xchg
loopne
adcl
jno
lods
add
test
and
icebp
loop
pop
sub
lahf
dec
imul
inc
sub
scas
in
jge
adc
jmp
xchg
test
shll
sub
sbb
dec
mov
mov
add
cmp
dec
inc
gs
jb
adc
or
in
sub
mov
and
mov
xor
fdivs
loop
and
mov
shll
faddl
ja
push
int
mov
sbb
iret
adc
aad
mov
jne
fnstcw
pop
xor
inc
ret
cmp
negl
iret
out
out
pop
xchg
or
ficomps
mov
sub
or
or
je
adc
push
dec
cltd
cmpsb
xchg
rcrl
lea
and
pusha
es
or
sub
xchg
mov
dec
mov
and
mov
xor
das
pop
insb
xchg
adc
pushf
dec
push
or
lods
mov
xor
cmp
cmp
xlat
push
addb
mov
int
wbinvd
cmc
mov
sub
sbb
pop
xchg
scas
jbe
test
push
lret
loopne
pop
sub
mov
push
dec
insl
pushf
shll
repnz
jecxz
sub
mov
sbb
and
push
sti
loop
out
fistpl
addr16
pop
das
xchg
push
pop
and
out
ja
cmp
pop
mov
lret
faddl
sbb
dec
in
xor
mov
lock
cmc
or
aaa
push
jl
add
outsl
ss
and
cmp
scas
mov
xor
loopne
and
in
mov
mov
cmpsl
push
bound
scas
sbb
mov
loop
int
inc
data16
mov
mov
fwait
cmp
push
ds
or
sub
cld
loop
dec
dec
test
push
aad
data16
and
rorl
pandn
repz
cltd
popa
jnp
or
cmp
mov
out
or
xor
imul
popf
fisubs
sub
mov
xor
sbbb
or
cltd
rorb
mov
ret
aaa
lret
add
lret
scas
jnp
jno
jl
push
adc
movsl
mov
inc
and
mov
lret
add
jle
icebp
mov
and
push
js
scas
outsb
icebp
cmpsb
jbe
fmuls
xor
mov
pop
jo
fildl
jns
sbb
push
xlat
add
adc
sbb
fwait
in
data16
cmp
mov
add
sbb
fildl
push
xor
cmpsb
test
mov
add
xor
test
or
lea
loope
loop
pop
pop
rcrb
scas
mov
mov
pop
clc
push
icebp
hlt
mov
popl
mov
xchg
pop
cmp
or
or
outsl
inc
mov
arpl
ja
mov
mov
dec
lods
xor
nop
fcoms
push
mov
sub
xor
repz
and
in
mov
push
ja
jg
out
imul
fyl2xp1
pushl
jge
adc
cmp
add
jg
push
mov
repz
test
jo
popf
push
inc
cmp
jl
jecxz
or
xchg
test
and
mov
lcall
out
stos
sar
pusha
loopne
andl
jns
in
dec
rcll
enter
std
loopne
mov
in
inc
mov
lahf
mov
xor
cli
movsl
push
popa
clc
cltd
loope
nop
pop
lods
lods
pushf
pop
pop
mov
sbb
inc
daa
mov
fdivrl
or
inc
out
pop
jno
test
out
mov
call
scas
lcall
dec
int
xor
pop
test
les
adc
repz
mov
push
push
and
mov
sahf
xchg
push
jns
dec
push
addb
ret
std
dec
inc
mov
sub
pop
movsb
push
std
sbb
jp
cmpsb
ja
inc
push
push
sti
push
mov
repz
movsb
jecxz
push
mov
inc
mov
pop
in
insl
movsl
dec
sub
stos
or
mov
in
push
and
jb
dec
sbb
nop
and
inc
cld
mov
mov
lret
or
dec
cwtl
mov
ret
insb
fscale
mov
jns
mov
lods
pop
push
loopne
sbb
lock
pop
xchg
inc
incl
jo
push
adc
pop
iret
mov
add
pop
out
leave
mov
leave
cmpsb
mov
imul
fldcw
ljmp
jge
mov
mov
lahf
xor
imul
and
xlat
rdmsr
aad
xor
pop
sub
clc
jge
pop
inc
xor
jp
sub
sub
and
mov
lret
jp
jg
dec
fcomps
dec
ss
dec
mov
mov
mov
xchg
xor
mov
negb
xor
scas
shl
cmp
or
loopne
mov
in
aaa
test
push
push
stos
jmp
push
jns
mov
pop
rcll
sub
jcxz
outsl
push
pop
repnz
idivl
loop
loope
ret
mov
sbb
pop
adc
jge
cs
jno
fdiv
xchg
outsl
sub
icebp
sub
rcl
divl
lret
lock
outsl
and
add
insl
fnstsw
aas
std
xchg
shlb
dec
addr16
ret
push
sub
rcrl
lcall
push
mov
adc
mov
mov
out
inc
popl
fucompp
sub
sbb
in
rcrb
es
add
sbb
sub
cwtl
scas
outsb
shrb
jecxz
negb
stc
xor
xchg
cld
mov
nop
cwtl
jmp
shlb
fisubs
xor
mov
mov
push
fwait
pop
ret
popf
xchg
movsl
repnz
or
lods
jns
push
imul
outsl
sbb
sub
sbb
xor
mov
movsb
mov
ss
iret
sbb
lock
or
and
pop
repz
pop
and
aas
fnsave
pop
cwtl
call
stos
or
or
and
sub
sbb
movsb
dec
pop
sbb
repz
push
cmc
cmpsb
in
bound
sbb
push
bnd
test
or
dec
cmpsb
push
repz
clc
inc
in
cmp
pop
repz
jnp,pt
cmp
lea
add
pop
inc
or
std
cmp
adcl
repnz
push
add
pushf
cmp
push
xor
ret
xchg
test
fisttpll
adc
push
add
xor
call
and
xchg
sub
mov
xlat
sub
jp
int3
cmp
sub
mov
push
hlt
sbb
call
sbb
mov
cwtl
adc
or
add
or
inc
mov
xor
addr16
jo
int
dec
sbb
dec
dec
test
jnp
call
mov
sub
movhps
cmp
in
insb
push
or
and
fnstenv
adcb
sub
ss
adc
lahf
shl
enter
ret
mov
cmp
jl
jecxz
jp
test
mov
cwtl
ljmp
mov
and
pop
shlb
fsubl
push
dec
or
out
mov
sub
icebp
cs
mov
cmp
jae
pop
ljmp
ljmp
push
pop
mov
sti
sbb
aam
pop
pop
xchg
aaa
call
out
test
fdiv
idivb
into
push
mov
imul
xor
ja
inc
adc
xchg
lea
lea
jmp
cmpsb
jne
add
push
fsubs
int3
xchg
inc
jbe
push
adc
push
int
push
jmp
repz
add
adc
push
mov
xor
sub
mov
jecxz
push
sar
sub
push
mov
arpl
jae
jo
push
inc
dec
jbe
filds
adc
mov
adc
cmp
or
add
sub
icebp
fwait
xchg
dec
jbe
je
xchg
test
repnz
ret
std
push
pop
popf
out
in
imul
sub
jmp
gs
inc
loope
pushf
lret
subl
aaa
dec
inc
mov
jmp
inc
xchg
add
ja
jno
mov
std
fs
xor
jge
mov
pop
sbb
xchg
pop
mov
insb
out
test
xor
sbb
ljmp
push
pushf
scas
aad
mov
int
mov
xor
filds
push
fisubrs
mov
imul
add
sbb
lahf
dec
dec
inc
pop
in
jge
scas
shll
push
ss
pushf
mov
inc
and
das
out
push
mov
jle
adc
add
stos
js
pop
mov
js
nop
jecxz
jmp
inc
aas
ficoms
gs
mov
xchg
test
lcall
add
mov
mov
adc
test
lods
aas
fisubrs
cli
cmpl
push
add
pusha
push
faddl
dec
mov
mov
out
dec
mov
bnd
pop
mulb
jno
adc
in
inc
imul
inc
adc
mov
repnz
mov
xor
clc
xor
sbb
sub
jecxz
sahf
xlat
fscale
inc
imul
cwtl
and
sbb
das
or
test
sbb
int3
push
stos
fmul
cmp
dec
movsb
scas
add
sarb
xchg
lods
mov
test
es
adc
lcall
jmp
pop
fisttpl
mov
ret
subb
mov
aad
cmp
xchg
mov
cmp
sti
push
jns
mov
popa
inc
dec
in
xchg
mov
in
jno
cmp
dec
pop
jecxz
push
xchg
scas
inc
cmc
loope
cmp
es
mov
or
and
xor
push
xor
pushl
orb
out
sbb
gs
cmp
testl
imul
dec
cs
pop
icebp
dec
xchg
scas
aad
push
inc
pop
xchg
repz
aad
xchg
icebp
outsb
popf
mov
in
adcw
cmpsb
sub
pop
push
mov
fsubl
jnp
sahf
and
mov
loope
push
and
hlt
jl
clc
test
and
std
pop
mov
loope
daa
cmp
dec
dec
push
adc
add
ja
adc
mov
or
inc
sbb
jge
shll
into
cltd
sbb
mov
adc
inc
popa
jnp
cwtl
test
fdiv
adc
or
dec
xchg
pop
add
or
icebp
jno
rorb
aad
add
movsb
pushf
rol
in
adc
nop
pop
push
push
pop
cmp
loope
jg
bound
lcall
xor
ficoms
repnz
cld
ret
mov
adc
cli
fwait
mov
xor
cld
cmp
mov
mov
or
xor
cmp
repnz
loopne
sar
fists
mov
xor
cmc
loopne
out
out
leave
mov
subl
jmp
popa
adc
pop
aaa
lea
push
sub
in
and
in
jp
iret
loopne
xor
xchg
push
jbe
pop
xchg
mov
pop
fcomip
ljmp
jecxz
adc
jp
aam
rolb
popa
push
fdivl
xlat
fnstcw
xchg
shlb
insl
or
mov
pop
scas
push
sbb
dec
sbb
xor
dec
sub
mov
test
push
lcall
rcrb
xchg
sbb
or
leave
mov
in
fdivl
xor
jae
push
lock
cltd
aaa
mov
scas
fsubl
push
xor
mov
ds
add
sub
out
lods
sbb
popa
hlt
sub
push
or
fwait
test
pop
repnz
cwtl
std
xor
pop
fcoms
xor
mov
movsl
jmp
fmul
and
xchg
mov
cmp
cmpsb
or
dec
enter
test
inc
test
pop
mov
pop
cwtl
daa
fs
std
sbb
mov
fdivs
adc
jbe
push
in
push
or
jbe
loopne
repz
xchg
pop
das
lahf
jo
testl
mov
mov
nop
add
mov
dec
jns
in
rcll
fucompp
push
xorb
cld
fwait
mov
push
mov
add
cmp
sub
scas
jno
test
leave
inc
sub
xchg
add
ficoml
xorl
or
divb
mov
mov
and
sbb
mov
pushf
mov
mov
fidivs
inc
mov
push
or
jo
mov
inc
lea
pop
cwtl
cli
xor
jecxz
dec
cmp
xor
jbe
jb
outsb
sti
mov
push
add
lock
pcmpeqw
push
imul
imul
inc
jbe
add
cmp
jmp
push
and
mov
repnz
inc
fcoml
es
hlt
add
pushl
xor
mov
aaa
cmp
mov
jl
out
and
popf
or
movsb
pop
int
aas
scas
and
mov
jle
popf
stos
das
mov
out
loopne
mov
test
mov
lods
in
mov
xchg
cmp
add
mov
sbb
lds
sub
push
aam
pop
mov
sub
addr16
sbb
js
pop
mov
xchg
leave
xor
nop
mov
cmp
cmpl
sbb
push
aaa
pusha
or
and
push
imul
imul
addr16
mov
lret
inc
ret
adc
and
pop
outsb
sbb
repnz
sbb
outsb
loopne
or
adc
int3
add
test
or
xchg
push
mov
jp
mov
mov
xchg
sbb
iret
xor
push
mov
xor
jmp
out
out
jb
lea
and
out
iret
dec
ja
mov
jno
sahf
ja
and
loop
xchg
adc
inc
outsl
push
dec
adc
mov
dec
mov
ret
xorb
mov
sbb
mov
mov
xchg
and
out
inc
mov
out
cmp
pop
loope
push
sub
test
cmc
mov
pop
push
xchg
stos
jo
test
dec
iret
repz
push
add
xchg
dec
nop
adc
jge
inc
aas
xor
sti
or
jg
xor
xor
mov
add
cmpsl
mov
adc
sbb
mov
add
mov
mov
cmc
or
cltd
cmp
jle
add
bound
mov
xchg
xchg
jmp
push
mov
push
arpl
and
adc
sub
lock
mov
es
add
sub
adc
add
xchg
fwait
push
cmpsb
mov
xor
aam
mov
inc
xor
lods
fstl
push
scas
add
neg
pusha
leave
xchg
push
mov
adcb
out
inc
jns
ja
xchg
xchg
adc
movsb
in
dec
inc
ret
faddl
repz
sbb
lods
mov
ja
fwait
stos
dec
xor
jae
test
sbb
andl
pop
dec
loopne
xor
mov
out
cmp
xchg
mov
pop
arpl
jae
mov
notb
lods
mov
cmpsb
dec
fstpt
scas
adc
dec
mov
xchg
xchg
jbe
pop
es
mov
adc
negl
xchg
jnp
push
adc
push
insl
lret
cmp
sub
cmp
cmp
aaa
push
testb
mov
sbb
jp
out
cmp
add
pop
fildl
mov
pop
and
scas
mov
stc
arpl
add
hlt
rcll
push
inc
adc
cmpsb
xchg
sti
dec
pusha
mov
test
scas
lods
out
mov
movsb
loopne
add
lods
in
icebp
jbe
xlat
fwait
das
pop
fcomp
enter
out
popf
cmpb
adc
es
and
pop
jno
in
mov
fisubrl
adc
mov
sahf
movsb
imul
dec
xchg
sbb
mov
scas
xchg
pop
out
negl
inc
scas
lods
repnz
test
add
lea
icebp
jae
add
xor
testl
sbb
jnp
les
shl
mov
pop
imul
and
mov
scas
shrb
cmp
stos
pop
lcall
push
or
fbstp
pop
jp
and
dec
add
int
mov
inc
xor
pop
xlat
cli
int
lea
nop
popa
je
mov
test
sbb
jo
sub
nop
sbb
mov
icebp
imul
and
jle
lcall
mov
subb
inc
lret
fwait
scas
jne
icebp
jns
mov
iret
les
cmpsl
hlt
shl
push
aas
hlt
cld
les
out
popf
inc
sbb
adc
push
pop
rcrb
adc
sbb
in
sti
sub
lret
jp
sahf
shll
dec
addb
mov
out
sbb
sub
lcall
addr16
pop
ret
cltd
stos
loop
xchg
dec
out
pop
mov
loope
mov
jb
ret
push
call
ret
inc
inc
inc
bound
insl
aad
dec
or
cwtl
xchg
loope
outsl
push
aam
pop
xor
push
lods
shlb
cwtl
and
cmp
jnp
dec
test
cmp
mov
mov
test
fs
std
add
cmp
push
stc
jle
callw
enter
sub
scas
jnp
movsb
jecxz
std
mov
outsb
mov
cmp
mov
jp
jge
aaa
inc
inc
inc
aad
dec
loopne
and
push
mov
pop
into
mov
in
mov
cmp
jge
push
movsb
cmp
test
or
orl
inc
out
mov
enter
popf
test
xchg
cmpsl
pushf
ja
jmp
or
dec
cltd
jcxz
push
or
or
mov
loop
mov
clc
inc
add
dec
aas
xchg
fnsave
aam
inc
ja
mov
push
add
lock
push
and
jbe
aam
mov
pop
std
scas
popa
jbe
xchg
mov
scas
mov
sub
sub
cmp
jle
out
inc
push
push
out
fisubrs
and
mov
leave
ret
loope
xor
repz
imul
and
and
jb
in
das
sub
popa
mov
mov
test
pop
ret
xchg
jmp
jg
scas
ret
insb
push
dec
inc
or
into
addr16
xchg
icebp
mov
mov
inc
xor
push
shll
fmuls
std
dec
cmp
lret
cmc
fstl
test
dec
pushf
sbb
or
push
cli
aas
inc
xchg
cmc
cmpsl
inc
out
mov
ss
movswl
dec
iret
mov
lahf
addr16
jl
scas
adc
and
hlt
int
pop
aas
test
mov
inc
jns
shr
mov
adc
test
push
dec
cmp
inc
xor
pop
or
xlat
or
inc
int
pop
dec
mov
enter
dec
add
hlt
pushf
sub
sbb
mov
xchg
mov
into
leave
lods
xor
mov
movl
xchg
sbb
sub
call
pop
outsb
push
adc
lods
jnp
aas
jbe
and
stos
sub
push
adc
dec
adc
sbb
inc
xchg
adc
add
insl
xor
ds
jns
sbb
jne
aad
ss
arpl
adc
mov
ret
dec
cmpsl
stos
shlb
dec
es
shll
lcall
lret
xor
xor
or
filds
cmpsb
and
sbb
pop
jns
jnp
jg
pop
sti
jmp
jmp
in
ret
sub
icebp
lock
ss
in
fldcw
adc
sbb
lcall
dec
xorb
fnstcw
out
push
push
dec
xchg
xor
out
outsl
jl
add
fimuls
sbb
cltd
lock
insb
xchg
sti
sbb
pop
push
cpuid
mov
incl
in
mov
sbb
mov
add
nop
xchg
cmp
and
movsb
shrb
insb
xor
or
xor
jbe
incl
in
mov
scas
mov
aas
adc
jge
movsb
mov
cmp
pop
adc
lcall
xorl
rcrl
nop
test
inc
xor
mov
into
les
cmp
dec
adc
lret
mov
dec
xchg
pop
mov
or
lcall
xchg
mov
pusha
clc
adc
fldenv
and
mov
cltd
push
adc
sbb
imul
pushf
jge
ss
mov
cmp
aas
dec
pusha
inc
repnz
bnd
aas
mov
data16
mov
call
roll
mov
stos
cltd
rorb
inc
adc
mov
call
pusha
ss
out
or
or
outsb
jmp
std
adc
pop
rclb
sbb
dec
pusha
push
inc
inc
cs
cmp
sbb
mov
subb
and
push
sub
loopne
jp
ret
mov
fdiv
add
mov
xchg
pop
fstl
cmc
inc
js
mov
mov
or
rorl
sahf
lret
mov
sbb
ja
push
fnsave
mov
mov
jle
dec
jbe
scas
int3
pop
aam
add
fbstp
cmp
dec
xor
mov
xlat
push
shlb
int3
pop
incl
add
push
mov
js
push
lret
adc
out
js
push
std
cmp
mov
ss
push
insb
addr16
jmp
fisttps
mov
jbe
xor
inc
aam
out
or
fidivrs
mov
xor
into
das
cmp
popf
or
mov
lock
das
mov
mov
xor
push
test
push
cmp
jg
scas
packssdw
and
je
addl
xlat
pop
inc
popf
aas
hlt
movsl
popf
insl
cmp
addl
inc
pop
inc
cmpsl
sbb
insl
in
mov
gs
in
xchg
daa
fstl
and
cmp
out
jo
mov
adc
inc
jne
cli
jns
ljmp
ror
scas
jle
and
repz
std
fimull
out
push
push
adc
stos
add
dec
add
lcall
adc
inc
inc
call
pop
mov
lret
and
out
and
jb
cmpsb
xchg
mov
mov
je
and
pop
test
or
fiaddl
rcr
idivb
and
xor
aaa
int
pushf
data16
bts
inc
push
cmp
flds
arpl
test
sbb
mov
xchg
in
pop
stos
cmp
sbb
pop
jg,pt
jecxz
popf
add
fwait
scas
mov
jo
cmc
in
adc
stos
gs
push
mov
sarl
pop
xchg
cs
fwait
out
js
int
mov
lods
sub
fnstcw
inc
js
adc
aas
cld
pushl
jno
and
call
push
mov
sub
aaa
loope
sarb
fists
jnp
xor
cld
dec
sbb
sub
fwait
imul
inc
or
xor
not
xor
aam
pusha
and
push
int
lods
add
cmp
mov
add
xchg
mov
es
dec
ja
jne
in
dec
repnz
test
pushf
je
imul
and
shl
ret
out
test
xchg
xor
sbb
mov
loop
scas
mov
cli
int
dec
add
xchg
pop
aad
ret
mov
sbb
sbb
inc
add
push
sub
xchg
jmp
data16
mov
mov
or
sbb
or
imul
call
dec
sbbb
cmc
sarb
mov
sbb
inc
mov
xor
xchg
and
push
and
jno
xchg
out
das
into
or
pop
xchg
stos
out
push
jns
fstpl
inc
frstor
insb
mov
mov
hlt
xor
xchg
jle
insl
add
lods
scas
aad
inc
sbb
adc
jg
gs
ja
dec
jo
cmpl
mov
jno
daa
ss
dec
jg
lret
imul
sub
addl
sbb
insb
pop
xchg
jge
rcl
and
sub
sbb
mov
ja
xchg
js
imul
shrb
push
push
inc
mov
mov
ss
xchg
xor
push
in
ret
fsubs
adc
adc
cmpsb
or
cmp
adc
fwait
mov
mov
outsl
cli
pop
outsb
xchg
add
pop
mov
pop
mov
xchg
shrb
jo
lock
mov
jne
sub
mov
pop
adc
sub
cli
stc
pop
fisttpll
lea
mov
and
bound
jbe
imul
or
jo
es
cmp
or
cmp
jo
pop
test
cld
push
out
dec
sbb
rcll
int
add
cltd
cmpsl
stos
push
fisubs
push
fistl
inc
xchg
mov
ds
in
push
movsb
inc
jo
xor
mov
fwait
sub
pop
movb
nop
es
ret
test
aas
enter
adc
dec
xor
fnclex
mov
mov
sbb
push
in
cmpsl
sahf
nop
push
mov
push
mov
adc
pop
sub
inc
int3
lret
fmull
push
aad
mov
cs
sub
cmp
js
xchg
sub
cli
popf
sbb
cwtl
ret
shrb
inc
sbb
xchg
mov
outsb
lock
out
jne
scas
pop
imull
lret
jl
and
push
stos
subl
dec
jge
and
sbb
in
or
sti
add
ja
push
xchg
mov
outsb
inc
int
ja
xorl
add
add
and
xor
incl
mov
sqrtps
jecxz
loop
mov
mov
int
fcomps
pop
inc
sbb
xchg
lahf
add
test
or
add
push
inc
movsl
sar
push
inc
in
adc
push
dec
pushl
dec
ljmp
cmp
arpl
push
js
xor
sub
jne
sub
sti
mov
mov
shlb
inc
mov
shlb
cmc
fadd
cmp
enter
sub
je
cmc
test
dec
cwtl
mov
dec
mov
dec
sbb
inc
adc
mov
jmp
loope
pop
daa
push
sub
pop
inc
inc
movsl
sbb
and
frstor
xchg
cmp
and
or
and
lcall
mov
mov
sbb
mov
and
push
cwtl
cmc
mov
and
mov
mov
adc
sub
mov
add
out
adc
lea
add
ficoms
mov
gs
outsb
sbb
and
sbb
pop
xchg
push
jg
in
pop
fwait
push
sahf
inc
dec
dec
int
testl
pop
dec
imul
mov
lahf
mov
ds
mov
mov
cmpsb
and
testb
popf
loope
mov
jle
inc
pusha
enter
aam
add
rcrl
inc
aaa
push
push
jge
sbb
aad
in
hlt
in
fistpll
or
ds
or
jns
insl
and
in
sub
loope
add
cli
adc
sub
adc
jbe
jns
sub
inc
outsl
insl
or
imul
testl
or
xor
ds
adc
xlat
sbb
add
ljmp
ja
push
leave
gs
out
inc
mov
jno
and
sbbb
pop
adc
loop
jns
dec
scas
adc
dec
jecxz
mov
and
add
test
cmp
std
inc
mov
mov
xor
test
xchg
pop
inc
loopne
inc
fadds
or
add
mov
sbb
shlb
adc
jecxz
popa
mov
jecxz
lret
jle
pop
dec
imul
hlt
bound
pop
pop
jae
dec
mov
sahf
out
dec
add
mov
sub
or
lea
jecxz
mov
dec
push
fstl
push
and
dec
cli
xor
movsb
pop
and
test
mov
push
pop
arpl
dec
dec
pusha
outsl
inc
push
hlt
ds
mov
xchg
jnp
dec
pop
pop
ret
sahf
jp
xchg
data16
out
push
test
mov
fdivs
popa
or
adc
jne
sahf
push
out
mov
mov
enter
lods
lahf
sub
jmp
mov
jmp
shll
adc
sub
jnp
pushf
add
cmp
cwtl
test
xor
mov
jae
inc
and
mov
cmp
dec
aam
add
mov
loopne
push
test
inc
movsb
and
into
or
jp
push
sbb
dec
in
adc
popf
gs
mov
fdivrs
push
pop
add
adc
repz
sbb
add
adc
ret
xor
jo
stc
lock
daa
hlt
jp
mov
cmpsl
pushf
stos
mov
movsb
outsb
aaa
aam
insl
mov
inc
pop
xchg
loope
hlt
jle
mov
xchg
sub
and
call
jns
push
add
sti
lods
stos
cmp
imul
xor
pop
push
dec
dec
dec
and
out
cmp
mov
add
hlt
insl
cmp
loope
cwtl
aas
fimuls
dec
xchg
xor
or
adc
les
add
movsb
dec
push
sub
pop
or
fidivs
lret
xor
sub
mov
mov
hlt
push
hlt
or
jns
add
addr16
es
add
mov
pop
sbb
daa
outsb
add
rcl
jge
ljmp
addr16
mov
mov
call
loopne
mov
fimuls
jl
cmp
js
jp
inc
mov
es
push
orb
add
push
clc
out
dec
icebp
out
lcall
adc
ljmp
lret
ja
and
push
aam
cmp
outsl
pop
stos
rclb
dec
mov
imul
push
mov
inc
loope
mov
fimull
jp
stc
add
pusha
cmp
push
movsl
or
daa
xchg
ds
xchg
mov
add
je
sub
push
adc
pushf
push
mov
xor
jmp
das
lret
jp
xor
pop
rcr
aas
stc
inc
mov
adcl
sub
pop
lds
icebp
inc
sub
inc
shrb
adc
mov
sub
in
or
sahf
jecxz
and
adc
xorb
add
cli
divl
mov
push
out
push
push
pop
cwtl
test
sarl
aad
adc
jns
pusha
movsl
std
add
lds
addr16
pop
adc
sub
and
cmp
mov
popf
pop
mov
pop
xlat
push
or
std
dec
movsl
dec
xchg
std
cmpsl
xor
xchg
outsb
or
icebp
push
test
pushf
xchg
adc
hlt
out
sub
arpl
insb
add
inc
ret
lcall
xlat
pop
sub
adc
rolb
add
js
in
pop
jle
jae
icebp
into
inc
xchg
sub
dec
cwtl
dec
inc
in
pusha
dec
add
mov
and
push
addb
cmpsl
jp
add
icebp
add
ss
in
arpl
jmp
dec
mov
out
mov
ds
push
insb
scas
nop
insb
lods
std
xchg
pop
sti
cli
in
pushf
cld
roll
clc
call
inc
cs
and
pop
lcallw
sub
andl
and
dec
insb
cmc
iret
inc
popa
stos
call
mov
sbb
test
mov
dec
cmp
xchg
inc
xor
arpl
cmp
and
jnp
daa
fdivl
orb
jle
push
adc
pop
jo
jnp
fldt
psubw
xor
mov
pop
adc
jg
xchg
cmpl
sbb
pusha
sub
mov
xchg
xchg
lahf
lcall
ds
lds
jmp
adc
jns
fisubrs
aas
cwtl
movsb
push
mov
mov
das
xchg
mov
pop
jne
repz
cmpsl
das
mov
push
push
inc
pop
es
ja
hlt
pop
pop
lret
arpl
xchg
fimull
inc
lods
cmpl
xor
mov
cs
mov
jne
or
mov
inc
out
lods
mov
les
dec
mov
and
iret
adc
xchg
cld
xchg
in
add
ss
shrl
inc
cltd
sahf
cmp
cmp
shll
inc
dec
cwtl
jae
arpl
adc
xlat
scas
jmp
cmp
inc
nop
cmpsb
dec
rcrl
scas
push
push
xor
jne
les
ja
stc
sarl
sbb
int
xor
addl
xor
mov
mov
jle
push
pop
mov
das
and
sbb
jbe
push
mov
add
nop
in
mov
data16
cltd
negb
fdiv
mov
pop
add
rorb
jb
test
dec
sub
sbb
mov
fdivrs
insl
daa
mov
mov
fdiv
or
repnz
int
xor
lods
test
in
pop
lea
jecxz
cli
adc
pop
lcall
loop
sbb
jge
dec
pop
push
mov
sbb
inc
dec
movsl
aam
mov
mov
pop
mov
aam
test
orl
mov
cmp
push
add
xchg
jg
lock
and
out
addr16
dec
mov
testl
adc
rcrl
adc
les
fcompl
xchg
sub
sbb
stos
xor
xchg
add
jbe
push
jp
sbb
movsb
arpl
fisttps
cmpsb
and
lods
movaps
mov
add
sub
pop
mov
ret
mov
call
hlt
scas
fwait
cmp
jbe
pop
fadd
dec
sbbl
push
pop
mov
dec
jl
outsl
fdivrs
dec
mov
repnz
jle
inc
pop
push
and
push
push
xchg
ja
jp
mov
xchg
dec
or
daa
rclb
jge
int
fs
popa
fistps
loopne
stc
repz
add
test
out
enter
fsubl
mov
mov
enter
lcall
inc
add
push
xor
pop
and
stos
xor
adc
sub
insl
jl
in
inc
nop
ljmp
pop
mov
dec
push
add
push
scas
push
and
xchg
push
out
sbbl
cltd
testb
in
fbld
inc
xchg
gs
dec
js
sub
inc
test
fcoml
ret
loopne
add
mov
cmc
aaa
lds
and
pushf
mov
jp
dec
insl
icebp
pop
inc
push
fsubl
in
adc
ss
mov
lea
popl
mov
inc
aad
movsl
inc
je
fsubl
jno
mov
sbb
xchg
cvtpi2ps
dec
imul
inc
mov
cmp
enter
xor
in
and
sub
mov
in
jp
mov
add
xor
fadds
ficoms
push
cwtl
enter
and
jnp
inc
outsb
cltd
sbb
jnp
push
sbb
repnz
inc
jecxz
into
xor
fsubs
jb
in
fsubl
scas
lods
jbe
sbb
out
fildl
lock
cmp
mov
shlb
inc
sbb
pusha
sbb
lea
adc
shlb
dec
jne
movsl
fwait
add
or
pop
jno
cmp
in
xchg
mov
add
sub
sarb
cmp
ljmp
jmp
xchg
sbb
jp
inc
cwtl
orb
sbb
xchg
outsb
popa
pushf
xlat
add
dec
xchg
fsub
inc
cmpsb
or
out
push
inc
test
inc
pop
and
cmp
mov
pop
in
lea
out
clc
scas
sub
or
mov
jmp
jge
fidivl
out
es
shrl
test
mov
mov
and
xchg
cmp
leave
push
cmpb
dec
jns
test
scas
mov
xor
jns
pop
xchg
pushf
pop
ficoml
ja
ss
push
mov
stos
or
dec
ret
adc
push
ret
jecxz
sbb
sub
ds
iret
mov
dec
fdivl
addr16
fcmovnbe
or
es
insl
loop
sbb
jns
pop
cmp
ror
cmp
bound
adc
mov
adc
rcrl
mov
dec
push
or
sub
push
sar
js
push
lea
sub
pop
cmp
int
cmp
fmull
addr16
jecxz
cwtl
mov
or
divb
test
fsub
cmc
mulb
in
inc
loopne
cmpsl
dec
mov
xorb
push
aas
clc
xchg
shll
jmp
icebp
sbb
xchg
aam
mov
cld
repz
int3
lock
mov
pop
cltd
or
dec
sub
push
aam
xchg
cli
scas
and
cmp
stos
mov
lcall
cmp
aas
call
mov
sub
dec
inc
and
push
scas
inc
fbld
popa
in
out
cmp
sub
in
cmp
movsl
xor
fcmovb
or
movsl
movsb
hlt
fidivl
push
xor
pop
and
mov
mov
add
adc
cld
mov
sbb
adc
adc
bound
cmc
pusha
pop
jle
rcrb
cmp
mov
and
jno
fnstsw
pusha
in
push
fmuls
jmp
pusha
ljmp
dec
je
dec
rolb
lret
mov
adc
cld
adc
push
int
int
pushl
pop
dec
cltd
or
pop
inc
sbb
mov
dec
lds
jge
into
cmpsb
add
cmp
mov
pop
pop
push
xchg
cmp
or
inc
mov
sbb
sbb
out
mov
push
shlb
aas
or
jecxz
cmp
jae
pop
int
xor
mov
in
enter
icebp
test
jne
pop
and
mov
and
ficomps
mov
jae
pop
idivl
outsb
or
dec
push
sub
jbe
addr16
inc
out
loop
cmp
rolb
popf
clc
movsl
inc
outsb
dec
ljmp
mov
sbb
stos
movsb
add
aas
sub
rorl
or
iret
inc
jns
xlat
fsubrl
pop
je
aas
pop
mov
loop
fnstcw
jae
addr16
jne
jp
pop
fmull
fstps
jge
jecxz
jle
sub
mov
int
or
mov
mov
mov
sbbb
jmp
idivb
sti
dec
sub
dec
scas
test
mov
jo
scas
lahf
adc
jbe
xlat
in
ficoms
add
xor
push
out
xor
mov
inc
fs
loope
mov
sahf
adc
pop
xor
add
and
inc
out
outsl
js
movsb
test
adc
fs
hlt
cmp
outsb
data16
es
add
dec
pop
dec
adc
mov
test
aaa
xchg
iret
cmp
xchg
jae
xchg
inc
shr
xor
adc
xchg
js
pop
and
jg
jne
mov
lcall
pushf
icebp
lcall
stos
xlat
mov
int
lods
push
mov
cltd
adc
ficoml
cmpsl
jg
mov
inc
pop
pop
jnp
adc
mov
aaa
imul
and
sbbb
sti
test
out
pop
or
stc
adc
add
lret
dec
pop
sahf
xchg
adc
adc
inc
loope
inc
ret
pop
scas
and
xor
aam
pop
into
xor
inc
cmp
cmp
jl
or
rcrb
cmp
daa
xchg
xchg
loop
xor
add
cltd
test
xorb
test
popa
mov
push
and
mov
or
outsl
sub
jl
mov
stc
lds
ds
lods
adcb
es
cmp
sbb
mov
int3
mov
das
test
icebp
inc
push
pop
push
mov
mov
sbb
mov
adc
push
loopne
clc
les
mov
stos
mov
test
test
inc
fisttpll
lock
out
sub
push
incb
mov
pop
aam
pop
sar
mov
pop
mov
stos
or
xchg
mov
mov
outsb
pop
pop
jnp
repnz
pusha
or
jo
lret
dec
push
ja
std
shl
icebp
adc
lcall
fcompl
mov
jbe
or
push
mov
mov
jl
add
movsb
and
int3
push
sti
push
cmp
mov
movsb
mov
fimull
mov
jmp
pop
cmp
adc
movsb
aam
xlat
movsl
inc
inc
iret
pop
repnz
sub
xor
jo
inc
rorb
sbb
psllw
xchg
cli
shl
out
test
jge
sub
bound
dec
dec
les
ret
in
sbb
shlb
push
and
add
out
inc
and
in
xor
xlat
sarb
mov
sub
mov
xchg
popa
les
movsl
ljmp
ror
xchg
pop
xchg
mov
xchg
mov
mov
in
stos
pop
lods
xchg
rolb
jp
xor
es
jp
dec
into
enter
pusha
arpl
fistl
jle
out
popf
sahf
mov
aad
add
push
and
lret
push
cmp
add
dec
mov
movsl
repnz
in
flds
insb
or
aas
and
sbb
testb
std
out
push
sbb
cmc
xorb
jbe
or
out
cld
xchg
iret
mov
jbe
subl
out
jne
lret
sub
test
add
arpl
push
test
cld
xor
sub
loope
mov
xor
inc
mov
xor
dec
mov
mov
scas
sbbl
cmpsb
cmpsb
ret
inc
xchg
imul
mov
imul
mov
lds
and
cmpsl
ret
push
sub
fstp
mov
loopne
sbb
adc
mov
cmp
into
sub
mov
cs
lcall
insb
mov
adc
dec
add
push
in
iret
leave
icebp
popl
sbb
dec
in
jae
subb
lods
push
pop
or
jns
scas
sub
add
or
movsb
xchg
stos
mov
out
and
test
scas
test
test
ficoml
push
cmpsl
fbld
fcmovnb
xchg
fstpt
pusha
push
mov
lods
push
aas
test
js
loope
or
out
addl
dec
loope
loope
dec
dec
aam
pop
inc
and
shld
jo
push
push
ja
dec
les
inc
je
xlat
movsl
inc
push
sub
dec
arpl
adc
gs
push
leave
dec
or
inc
jmp
cmp
icebp
movsl
or
add
pop
shll
push
jg
test
inc
xchg
cld
or
cmp
add
inc
mov
push
mov
xorl
cwtl
cmp
iret
loop
mov
leave
sbb
mov
cmc
jg
subb
push
sub
inc
mov
into
lahf
imul
fisttpl
fsubl
mov
mov
mov
sub
cmp
or
push
sarl
xlat
lock
and
adc
pop
out
pop
nop
adc
sub
xchg
jbe
rorl
xchg
ljmp
lcall
out
jp
cmp
fwait
xor
sbb
and
mov
test
pop
xchg
push
call
aam
popa
add
mov
mov
sbb
sub
scas
in
sti
inc
inc
mov
push
xchg
dec
cld
add
bound
push
imul
cmc
jo
test
xchg
les
sub
and
sar
inc
push
repnz
jle
jecxz
int3
cmc
mov
in
fcoml
call
inc
inc
ljmp
and
clc
jge
leave
fisttpll
adc
lea
call
bound
in
add
cwtl
call
jmp
adc
aam
hlt
repnz
sbb
in
jae
leave
add
or
mov
mov
jno
push
xchg
add
mov
enter
dec
cmp
inc
js
ljmp
dec
out
loope
sbb
mov
sti
loopne
rcrl
fildll
sbb
mov
stc
inc
cmp
mov
idivl
mov
mov
mov
stos
cmpsl
pop
inc
lea
and
enter
cmp
adc
mov
and
inc
scas
lock
loope
aam
popf
pop
pop
mov
dec
shlb
sbb
push
test
roll
and
ret
loope
inc
jne
into
outsl
sbb
cmpsb
icebp
mov
pop
bound
or
push
jne
ret
fstpt
inc
sbb
popa
cmp
jns
xchg
or
rcl
outsb
sbb
ss
out
mov
subb
in
mov
xchg
dec
pop
or
xor
xchg
mov
mov
test
and
push
xchg
push
stos
adc
lea
fimull
sbb
call
das
mov
outsb
fs
scas
add
dec
inc
fwait
xchg
mov
mov
sbb
sub
pop
sub
dec
hlt
dec
inc
ljmp
sbb
pop
dec
sti
xchg
dec
sbb
fldenv
pusha
pushf
dec
into
sbb
js
xor
mov
push
and
mov
popf
mov
sbb
push
lods
imul
push
jb
cmp
jp
xor
flds
mov
stos
jnp
dec
loopne
inc
sbb
repnz
pop
lods
int
dec
xchg
lods
xchg
xchg
push
push
cmp
ret
arpl
cmpsl
int3
xor
cmc
aam
sub
pop
fmul
scas
jl
pop
add
cld
mov
ss
cmp
out
adc
xor
or
add
add
pop
rorl
sub
xor
fstpl
sub
mov
aas
lods
fnsave
loop
and
jl
xlat
cmp
in
cmp
int
stos
popf
pop
mov
test
mulb
xor
jp
push
test
js
std
sub
jg
call
imul
scas
jge
mov
mov
dec
mov
gs
cmpsl
mov
pop
adc
dec
mov
sbb
int
ret
inc
sahf
add
xchg
inc
add
mov
pop
jns
sbb
mov
mov
popa
xor
rorb
dec
sbb
imulb
mov
or
and
addr16
cltd
fdivrl
icebp
pop
in
or
and
and
add
cmp
js
mov
dec
xorl
loop
xor
pop
inc
js
pushf
cmp
stos
leave
pop
std
pop
mov
fdiv
xchg
jne
shll
popa
into
xchg
mov
ja
dec
push
mov
hlt
sti
into
sub
xchg
inc
rol
imul
mov
fsubrl
out
daa
mov
adc
mov
sbb
and
or
iret
or
mov
adc
dec
ljmp
jae
jge
out
fstpl
xchg
testl
mov
jecxz
inc
jmp
mov
adc
insl
or
push
fcomps
push
push
push
loopew
inc
mov
out
int
pop
jp
xor
repz
into
push
cmp
and
cmp
mov
mov
dec
pop
test
and
cmp
add
shrl
xlat
jg
out
aam
insl
pop
outsl
cmpsl
inc
jae,pn
divb
repnz
lret
in
enter
push
lahf
daa
mov
leave
testl
in
pop
xor
rcll
fwait
or
mov
push
std
gs
pop
scas
mov
pop
arpl
repz
and
and
or
xor
in
or
mov
jae
inc
sbb
jae
les
mov
fwait
out
pop
out
rclb
inc
aas
scas
popa
in
jmp
cmp
stc
push
jno
sbb
or
loop
sti
xchg
adc
sub
push
mov
add
or
jbe
imul
push
pushf
jecxz
push
push
jne
push
sub
xchg
mov
xor
adc
outsb
mov
fidivl
sbb
add
pop
in
and
push
mov
in
push
cmp
jl
das
jne
arpl
faddl
inc
div
push
dec
and
mov
orl
popa
sbb
mov
mov
aaa
mov
fs
mov
lret
cmc
mov
and
lock
push
cld
xor
xchg
push
lods
xor
aam
test
movsb
inc
add
gs
loope
push
es
shlb
outsl
shlw
mov
push
sahf
aad
jg
addl
mov
sbbl
dec
les
clc
ljmp
mov
cltd
push
test
mov
clc
sub
rorl
inc
push
js
int
hlt
inc
jle
fimuls
enter
cwtl
sub
xor
aad
mov
mov
icebp
sbb
subb
inc
mov
arpl
mov
pop
add
fadds
pusha
in
or
lds
sbbb
jp
ds
add
mov
fisubrs
sbb
xor
xor
test
jmp
jp
test
push
dec
mov
fisubrs
sub
sti
and
cmp
push
pusha
dec
or
add
add
popf
sbb
add
jmp
imul
cli
les
cmpl
dec
fcoms
and
cli
inc
dec
into
mov
xor
lock
or
leave
inc
xor
shrl
jg
dec
pop
push
push
imul
sar
bound
jmp
adc
dec
cmpsl
pop
stos
decl
jl
cmp
and
mov
push
jp
popf
scas
inc
sbb
repnz
lods
lcall
xor
dec
sbb
fucomi
or
cmp
xchg
inc
aaa
pop
dec
cmp
inc
mov
and
dec
xchg
xor
mov
or
jg
mov
adc
sub
jl
mov
add
shll
imul
loop
cmp
xlat
inc
popa
dec
pop
movsl
mov
xchg
setg
les
or
mov
mov
es
mov
adc
aad
repz
inc
or
das
inc
lret
add
xchg
mov
ret
sub
and
mov
pop
lahf
adc
dec
push
fsubs
outsl
jmp
jo
fnsave
xchg
rcrb
mov
ljmp
insl
pop
mov
adcb
adc
jg
enter
aam
and
repz
aaa
lret
ss
xchg
xor
mov
or
inc
stc
enter
movsl
xchg
xchg
ss
add
ja
cltd
loopne
orl
xor
scas
sbbl
ss
lret
fs
push
out
sbb
shlb
or
les
jae
out
pop
fnstenv
iret
sub
mov
pop
mov
push
and
adc
ljmp
das
cmpb
add
shll
cmp
mov
mov
out
pop
les
scas
inc
sarl
inc
add
pop
jno
pop
inc
cmpb
rclw
push
xchg
call
rorb
fnstcw
aaa
daa
test
enter
mov
imul
fs
loop
and
rclb
or
dec
fldt
scas
mov
or
cmpsb
scas
push
mov
adc
mov
fidivs
int3
fldt
add
lret
jmp
sub
jae
xchg
adc
ret
xor
pcmpgtb
dec
insb
rcll
cmp
lret
out
adc
jae
mov
rol
std
pushf
icebp
pusha
xor
add
inc
adc
call
lods
popa
outsl
mov
jno
sub
mov
adc
sbb
add
pop
mov
roll
sbb
jbe
pusha
aaa
out
cmp
dec
pop
das
mov
aaa
call
lcall
and
push
dec
push
incl
fwait
cmp
xchg
icebp
outsb
jg
xlat
iret
cmp
lahf
in
out
jnp
aam
push
push
jmp
es
ss
cwtl
inc
jg
lahf
mov
jne
lret
fstpt
mov
adc
pop
mov
popa
mov
cmpsl
loop
mov
pop
addb
sahf
in
div
popf
icebp
test
fldenv
pop
and
push
popf
lahf
in
add
mov
repz
ret
jae
stos
and
cli
sub
mov
or
mov
push
stc
sbb
and
dec
mov
jns
cmp
loop
sbb
xor
push
and
jne
lcall
mov
mov
mov
fs
mov
pop
gs
pushf
aas
fcompl
adc
loope
push
dec
mov
lock
int3
push
mov
arpl
push
into
mov
push
mov
mov
push
xchg
pop
ds
stos
lret
cmp
inc
clc
and
out
clc
dec
sub
fildl
xor
call
sub
ret
xor
jo
jecxz
outsl
sub
call
and
in
push
sbb
repz
mov
cmp
loope
dec
lock
mov
mov
aam
mov
in
rorb
nop
pop
cmpsb
fisubrl
sbb
movsl
dec
jl
lret
push
adc
lds
jbe
xor
mov
xchg
mov
sahf
push
testl
jo
ss
out
jno
addr16
inc
dec
push
pop
dec
sbb
push
and
jbe
mov
xchg
jnp
movsb
div
push
and
dec
insl
jb
cmpsb
aas
cmp
sbb
popa
or
enter
lods
dec
mov
shll
mov
dec
dec
mov
scas
stos
pop
sub
mov
push
sbb
mov
adc
clc
sub
jge
jmp
sbb
sub
pop
sarl
jle
std
sbb
out
adcb
mov
bound
sahf
sub
sbb
movsl
arpl
lret
int3
cmc
decb
sbb
xchg
rcrl
mov
aam
mov
pop
outsl
rcr
shrb
cmp
leave
inc
es
ljmp
movsb
es
lds
iret
inc
jmp
cmp
cmp
xchg
add
or
je
push
addb
or
adc
add
clc
cmc
enter
shr
or
loop
out
sbb
dec
xor
add
icebp
lret
int3
inc
out
sub
and
adc
imul
jno
push
mov
jmp
loop
sbb
jge
inc
inc
sbbb
and
das
jae
mov
dec
mov
gs
in
movsl
push
dec
lret
and
add
jne
adc
stc
in
movsl
std
je
lcall
cmp
cs
jge
sti
xor
mov
mov
push
jb
jae
add
inc
les
hlt
cs
xor
daa
push
or
jecxz
repz
jbe
movl
fidivl
push
or
lret
sti
or
add
mov
mov
xor
aaa
sbb
adc
mov
adc
dec
mov
lahf
push
cmp
ljmp
scas
pop
push
insl
loopne
add
jno
test
decl
lods
jecxz
insl
cmpl
pop
cli
xchg
mov
jecxz
or
jb
xor
imul
inc
shl
cmp
rolb
sbb
inc
subl
das
cmp
cmp
sbb
jle
push
push
jle
and
fsub
cmp
mov
shll
add
pop
xor
pop
cltd
mov
insl
mov
sbb
sbb
lods
int
les
sbb
rcl
xchg
fdivs
pop
mov
pop
shll
imull
lahf
and
mov
push
je
or
sti
jmp
pop
push
jg
icebp
mov
jbe
es
lret
push
ljmp
cmp
cmpsl
jae
mov
icebp
andb
xlat
in
and
nop
jnp
jnp
xor
test
sub
je
mov
jbe
scas
mov
pop
xchg
ret
pop
dec
xor
pop
out
or
lcall
lahf
inc
mov
or
fcomip
hlt
push
repnz
out
in
add
loope
mov
cld
lret
lcall
xchg
xor
je
es
orl
mov
shll
xchg
adc
xchg
xor
aaa
xor
loopne
pop
stos
mov
popa
int3
push
rcll
cld
ds
push
sub
adc
push
cld
cmp
xor
cltd
xor
mov
mov
lods
mov
jmp
mov
cmpps
pop
loop
faddl
jl
mov
mov
xchg
jp
and
cltd
mov
cwtl
push
cmp
lods
bnd
dec
fstpl
scas
ss
or
insl
out
push
xchg
lds
sbb
push
nop
jle
xor
add
adc
stos
je
sbb
pop
jns
cmp
jo
out
push
mov
fs
jae
pop
jge
imulb
ss
adc
add
add
xlat
xor
dec
stos
popf
adc
or
stos
dec
in
imul
and
aas
pop
xchg
outsb
sbb
xchg
mov
inc
rcl
shl
scas
sub
dec
or
out
pushf
and
cmc
pop
repz
dec
sbb
push
push
pop
dec
xchg
out
cmp
daa
xor
mov
imul
push
adc
xchg
mov
outsl
xor
sbb
jmp
xor
cmp
push
and
pop
mov
pop
pop
xchg
movl
and
xchg
sbb
jae
mov
mov
test
push
inc
sub
sub
loope
icebp
es
and
das
adc
push
insb
in
adc
test
fwait
cmp
add
aaa
call
bound
pop
loop
add
push
cmpsb
scas
std
jmp
push
inc
enter
jne
pop
inc
sbb
mov
ja
nop
sahf
xchg
loope
in
cmp
stc
sbb
fdivl
xchg
and
mov
xchg
fcoml
fwait
pop
sbbb
popf
popa
mov
je
adc
sbb
sub
out
stc
push
adc
fs
es
int3
into
jne
adc
jge
sbb
adc
xor
push
outsl
adc
and
jnp
add
ljmp
jge
divb
or
gs
mov
fdivrl
cld
mov
dec
mov
xor
cmp
or
jp
add
mov
in
loopne
pop
mov
dec
loope
lcall
sbb
fs
mov
cmp
mov
ss
push
xlat
sub
leave
mov
adc
dec
jb
pop
mov
clc
mov
lret
or
add
into
pop
jecxz
xor
push
add
pop
rcll
jp
dec
mov
mov
mov
add
cld
loop
cmp
add
lret
add
xchg
test
in
inc
pop
sub
inc
add
cld
push
dec
clc
push
inc
scas
mov
add
jge
xor
xor
push
xchg
inc
mov
push
aas
sub
xchg
pop
test
test
gs
xor
sbb
jp
je
fdivl
push
test
popa
leave
pop
sub
fcompl
in
in
adcb
scas
in
mov
daa
jg
test
mov
adc
test
inc
mov
aas
inc
fisubrl
mov
in
dec
sub
mov
or
loop
pop
xlat
test
mov
les
xrelease
adc
push
dec
clc
pop
shl
insb
aad
cli
lcall
lods
or
mov
push
test
jl
push
cmp
jns
shl
mov
mov
sub
sbb
inc
mov
into
aas
pop
push
cs
add
dec
aaa
fldl
cli
fstpl
inc
icebp
push
int3
mov
or
jnp
xchg
sbb
pop
mov
dec
cwtl
nopl
stos
cmp
jmp
aaa
rcll
dec
aas
popf
lahf
scas
imul
dec
add
lcall
mov
mov
sbb
arpl
nop
xchg
push
loopne
mov
js
xor
mov
mov
mov
cmp
push
pushf
jns
testb
arpl
push
aas
out
sub
hlt
lcall
or
jo
mov
xor
dec
aam
ret
inc
pop
mov
lcall
sbb
and
sbb
mov
lock
std
cmp
stc
pop
or
nop
fcmovne
cmp
sub
push
lahf
jbe
add
push
push
ds
es
add
fdivrs
push
std
mov
je
push
out
fidivrs
or
sbb
mov
pop
fisttpll
sarl
mov
sbb
insl
fcoml
xchg
icebp
sub
jp
xor
lret
addr16
add
sti
lret
clc
cmp
cmpsl
dec
inc
test
pop
mov
imul
dec
test
dec
decl
jae
stos
into
sahf
int
push
rolb
push
pop
neg
cmp
mov
mov
out
movsl
fwait
push
push
and
lret
xorb
aas
sub
mov
mov
dec
mov
inc
jb
sbb
pop
repnz
insl
lock
mov
rorl
cmp
sbb
mov
lods
movsl
lret
test
sti
shrl
ljmp
add
bound
jo
mov
add
pop
pop
push
ficompl
addr16
aad
invd
jo
es
cmp
or
mov
lea
lods
add
insl
jge
adc
pop
out
mov
out
stos
jmp
fs
mov
mov
or
cwtl
shrb
pusha
jmp
jb
pop
push
or
or
pop
mov
repnz
bound
out
fiadds
les
sub
sbb
fs
mov
loope
xor
mov
rcr
jle
mov
sub
incb
cwtl
and
fnsave
pop
push
jbe
jle
push
inc
add
xchg
push
popf
popa
and
jne,pt
cmp
in
lcall
add
outsb
push
inc
lock
ss
mov
adc
push
stc
inc
ljmp
dec
xchg
js
or
push
push
mov
dec
push
cmpsb
jbe
sbb
iret
clc
mov
jle
fcmovnbe
int3
icebp
sbb
and
jge
ret
fdivl
sbb
jmp
sbb
cmpsl
and
pop
push
mov
lahf
sub
dec
inc
daa
inc
arpl
idiv
loop
into
dec
into
test
repz
mov
shrb
or
pop
push
std
ret
sbb
sub
pusha
lds
stos
es
out
mov
dec
cmp
int3
add
out
mov
xchg
adc
loop
repnz
add
dec
rol
movsb
jl
out
pop
push
inc
add
dec
dec
jp
sbb
mov
mov
inc
fcoml
std
data16
ret
test
fwait
out
sub
insb
ss
in
movsl
cli
cli
adc
cmp
loope
xchg
jg
and
out
js
mov
cltd
cmp
push
mov
jno
fwait
cmpsb
insl
jno
jp
and
inc
cld
fidivrs
push
or
pop
or
mov
sub
sub
cli
clc
mov
mov
mul
in
scas
lahf
cmp
in
sub
sub
loop
xchg
xchg
push
bound
or
fninit
rcll
fnsave
mov
xor
jno
inc
xlat
adc
or
xchg
jne
sbb
and
add
xchg
aam
data16
mov
cbtw
cmpsl
mov
vpaddq
cmpsl
mov
les
xchg
or
js
scas
std
lods
jo
cld
add
inc
ss
xor
ja
dec
jne
mov
jmp
jb,pn
sub
push
mov
mov
pop
fwait
dec
outsb
mov
push
test
cmp
repnz
into
call
das
mov
icebp
mov
arpl
std
outsb
sahf
push
sbbl
sarb
lock
movsb
fstpl
xchg
push
arpl
fs
push
icebp
xchg
xchg
fsubl
push
cmp
setge
sub
adc
mov
repnz
movsl
jae
adc
cmp
fwait
stc
jl
bound
test
pop
addr16
xor
or
ss
mov
mov
js
jecxz
jbe
inc
jge
push
inc
push
mov
xchg
sub
and
clc
push
mov
and
negl
dec
pusha
mov
loope
leave
repnz
adc
mov
pop
adc
pop
mov
mov
add
mov
lods
jle
cmpsb
test
push
jno
insb
ret
xor
and
adc
xchg
or
popa
fisttps
ljmp
mov
daa
stc
mov
lcall
dec
and
in
jne
leave
sub
push
sbb
sahf
sarl
ss
xchg
movsb
mov
push
fdivl
cmp
xchg
rcll
mov
mov
and
pop
call
lods
pop
sti
fs
xor
jo
popa
sti
push
and
push
or
pop
testb
and
ja
ljmp
pop
es
jno
inc
scas
sbbl
call
movsb
mov
outsb
push
scas
or
out
fimull
test
fsubrs
mov
hlt
dec
jle
cmpsl
xchg
mov
lods
jo
aas
pop
sahf
popf
jno
lret
mov
pop
testb
push
scas
cmp
jg
ss
mov
push
in
xchg
sbb
push
repz
cmp
cli
cltd
das
mov
dec
cmpl
or
jns
mov
les
call
sar
xchg
cmc
inc
stos
sub
or
in
and
fwait
push
sahf
out
divb
jg
out
test
jl
outsb
push
or
mov
ret
fsts
adc
aam
andb
lret
mov
je
leave
xlat
sahf
jae
and
adc
jmp
xor
inc
mov
add
out
divl
stos
mov
inc
daa
add
jle
xchg
ja
in
pop
mov
daa
imul
add
cmp
daa
stos
push
add
dec
mov
push
ret
outsl
shrl
add
rcrb
xchg
cs
orb
jns
push
pop
in
and
jnp
jmp
ret
xchg
idivb
andb
push
roll
in
inc
int3
outsb
cli
and
mov
pop
lds
js
cmp
lock
clc
add
add
push
cmc
cmpb
mov
mov
in
daa
and
lods
fsubrs
xchg
aaa
in
mov
insb
dec
shll
test
cltd
outsb
cwtl
inc
jno
xchg
cli
or
loopne
add
cwtl
add
push
sbb
int
jl
pop
or
sbb
fldcw
sahf
lds
jnp
push
cmp
sub
clc
add
mov
sbb
out
leave
addr16
add
xchg
jl
sub
add
int
push
data16
mov
movsl
mov
lret
cli
scas
stos
inc
stc
add
mov
push
das
jo
add
enter
inc
imul
or
inc
or
aam
mov
mov
data16
dec
and
out
jge
sbb
rolb
jmp
nop
mov
ja
jnp
fldl
enter
aaa
xor
aas
mov
inc
push
xchg
jb
ficompl
and
aam
adc
loopne
mov
in
fstl
dec
push
aad
mov
rcrl
jb
data16
mov
das
bndstx
jecxz
lea
in
pop
nop
xchg
stos
clc
mov
and
in
mov
add
lahf
sbb
lock
jbe
push
scas
adc
push
in
dec
sahf
pusha
xorb
push
xchg
adc
loope
ss
sub
aad
pop
cmp
cmp
lods
add
adc
jl
push
int3
mov
and
test
add
jg
ret
mov
mov
and
add
and
ss
xlat
dec
in
rorb
cmp
ja
sbb
mov
inc
out
jbe
pop
mov
enter
lods
sbb
add
outsl
jg
jmp
mov
jo
adc
cmpsb
jg
rcl
push
mov
sbb
cltd
add
lahf
aaa
cwtl
mov
cmpsb
xorl
rol
adc
pusha
xchg
mov
lret
fwait
xchg
jp
outsb
adc
lock
push
icebp
hlt
mov
and
popf
gs
mov
xchg
mov
jl
add
js
xor
dec
in
sbb
call
pop
cmp
push
jle
sbb
or
pop
jp
sbb
mov
dec
jnp
jmp
sub
maskmovq
mull
inc
cmp
sbb
jecxz
insb
bnd
xchg
or
or
mov
jl
mov
enter
mov
aas
mov
jnp
lea
ficompl
fwait
insb
aad
aas
icebp
sbb
rcll
rcrl
xchg
aaa
xor
mov
dec
dec
mov
fs
xor
jecxz
decb
inc
inc
sar
aam
adc
enter
insl
push
and
movsb
arpl
aaa
cmp
ret
repz
inc
nop
outsb
mov
xchg
pop
inc
cltd
gs
in
lcall
movsb
and
mov
les
insb
add
lea
or
fistpll
pop
cmpsl
mov
mov
push
pop
xor
dec
jb
mov
inc
dec
add
adc
jecxz
pop
lds
shll
xchg
push
repz
pop
cmc
push
sub
or
mov
xor
jmp
icebp
jp
mov
int
jnp
sbbl
scas
pop
xor
jle
enter
jp
fiadds
iret
mov
fs
sbb
xchg
xchg
adc
cmp
mov
add
add
sub
adc
dec
sub
cmpsb
gs
sub
cwtl
or
jecxz
inc
mov
inc
incl
pop
test
push
aam
sub
outsl
mov
popf
rclb
ds
sub
ret
in
mov
pop
leave
in
fldlg2
mov
inc
gs
pop
mov
sbb
push
popl
xor
rolb
ja
cmpsb
lea
dec
shrb
or
xchg
lods
je
jno
outsb
and
lods
pop
adc
sub
insl
cmp
cmpsb
pusha
xchg
scas
repnz
add
push
push
inc
addr16
pop
aaa
sbb
add
out
xchg
sbb
pusha
inc
jp
arpl
xor
test
call
adc
cmp
mov
insb
or
cmc
push
imul
iret
add
pop
mov
test
or
aam
pop
out
mov
sub
jbe
andb
add
dec
ds
test
inc
aaa
hlt
push
test
dec
fisttps
outsb
xchg
fiadds
popa
and
lock
inc
adc
aad
cwtl
test
sub
mov
imul
or
into
dec
dec
out
dec
mov
hlt
das
xchg
movl
mov
ds
fwait
stos
pop
loop
mov
jo
fistpl
mov
ja
dec
aaa
push
mov
aas
add
cmp
jmp
xchg
pop
sub
mov
pop
sub
jns
arpl
in
and
js
mov
fcompl
push
jae
les
sbb
adc
int3
mov
fadds
xchg
inc
xchg
fs
jg
test
pop
mov
mov
jns
xchg
mov
ret
mov
test
test
fdivs
dec
jle
lahf
fbld
push
scas
push
xor
sub
nop
out
xchg
aam
repz
insb
packssdw
movsl
xchg
add
cld
add
dec
add
sti
jle
pop
lods
dec
rorl
adc
add
or
and
or
inc
jecxz
in
je
cld
fcomps
cli
dec
jno
in
stos
sbb
cmpps
and
pop
xor
out
pop
push
sub
xchg
dec
add
insl
xchg
sub
sub
push
xchg
pop
adcl
xor
jae
lods
loop
dec
inc
xchg
mov
or
pop
lds
mov
and
pushf
cltd
shll
dec
or
and
fildll
xor
lcall
jl
or
and
fs
or
sbb
mov
and
lahf
mov
mov
pusha
pop
pop
imul
jnp
sbb
and
fisttps
int3
sub
filds
inc
cmp
or
testb
fs
push
fmuls
pop
jnp
mov
push
nop
dec
sub
sahf
xor
cwtl
push
ljmp
aaa
loop
movsb
adc
in
lret
cld
mov
mov
jnp
fidivrs
mulb
sbb
repz
and
stos
sbb
sub
sahf
and
sbb
aad
add
cli
outsl
or
mov
sub
add
xchg
cmpsb
lret
scas
pop
mov
pusha
mov
ret
adc
and
cltd
jecxz
aad
addr16
popa
call
in
or
mov
adc
add
notl
mov
adc
hlt
lcall
mov
mov
mov
cmp
xor
pop
xchg
or
lret
outsb
sti
dec
xchg
push
push
inc
push
cld
push
fcompl
dec
mov
add
mov
dec
fldenv
mov
sub
pop
push
push
jnp
cld
dec
and
out
ljmp
adc
push
push
fidivl
out
aad
cmp
outsb
mov
in
fadds
call
fimuls
popf
pop
xacquire
mov
mul
sarb
repnz
sbbl
lea
sti
add
pushf
mov
movsl
loop
loop
in
in
cmp
roll
inc
ret
add
ja
inc
loop
sub
sbb
into
mov
cmp
repnz
mov
ljmp
mov
and
and
jb
add
addr16
ss
sbb
ret
loopne
cli
mov
enter
jns
fwait
mov
and
cmpsb
or
push
shl
add
xchg
sahf
shll
fidivrl
pop
movntps
or
and
pop
dec
push
repnz
call
xor
out
add
bound
sbb
xor
rol
in
test
movsl
test
inc
push
mov
mov
sbb
sub
outsb
xchg
insl
jg
xlat
lock
inc
xor
xchg
push
ljmp
ss
push
pop
jle
or
xlat
xor
leave
out
dec
int
xlat
xchg
filds
lret
xchg
inc
mov
test
aam
shrb
push
popf
sub
push
dec
fwait
mov
or
mov
je
nop
icebp
out
push
xor
mov
in
fistpll
ss
fcmovu
jo
pop
xor
pop
xlat
hlt
subb
pop
dec
aad
adc
outsb
jl
out
sub
sub
push
cwtl
das
cmp
fnsave
sahf
xor
and
sbb
repz
sbb
test
push
pop
daa
int
aam
push
lgs
inc
jge
idivb
push
insb
push
or
mov
mov
add
subb
mov
push
or
loop
out
jl
push
mov
mov
or
mov
push
out
hlt
ljmp
shrl
scas
dec
fdivrp
sub
mov
cmpsl
pop
enter
pop
ret
sub
test
bound
movsb
insl
push
sbb
or
mov
negl
add
lcall
cmpsb
cwtl
lock
sub
sbb
in
lcall
lods
and
mov
cmp
add
popf
lret
xchg
and
push
inc
clc
sarl
cwtl
fcoms
lahf
push
dec
in
inc
jge
enter
fisubl
jl
dec
add
dec
xlat
insb
adc
adc
lods
shlb
xor
popl
add
pop
and
sbb
mov
push
stos
ljmp
cmp
das
out
lret
pop
pop
ret
xchg
lock
sbb
insl
sti
push
mov
lcall
rcr
nop
mov
dec
nop
shll
and
call
sub
dec
xchg
popf
ljmp
jle
fbld
pop
xor
xor
daa
leave
add
lahf
add
mov
aad
inc
punpcklwd
test
movsb
mov
dec
stos
or
sbb
xor
dec
out
imul
sti
xchg
lret
enter
xchg
push
xlat
dec
in
lahf
lods
adc
lea
pop
jl
inc
push
hlt
inc
mov
daa
xor
addb
ficoml
gs
xor
jns
xchg
lods
pop
adc
add
pop
inc
std
push
int3
stc
mov
fsub
dec
cltd
lds
jp
adc
call
dec
fidivs
loope
push
xchg
fcmovne
inc
cmp
add
repz
adc
mov
mov
jno
ds
scas
mov
out
fcmovnu
je
andb
int
pop
aad
or
push
outsb
jp
int3
push
sti
or
testl
lods
loope
daa
sub
testb
mov
cmpsl
push
mov
xchg
bound
imul
sti
insb
inc
pop
call
icebp
in
out
pop
sti
repnz
xchg
inc
cmp
sbb
jp
pop
pop
push
gs
xchg
lea
test
jmp
pusha
enter
adc
lahf
inc
cltd
lcall
repnz
xchg
iret
stos
repz
sub
call
mulb
arpl
les
sub
cmpsl
out
xor
inc
dec
daa
jo
inc
lods
int3
loop
xchg
aad
sub
imulb
fnstenv
push
aam
mov
lcall
push
mov
dec
into
icebp
inc
xchg
jge
mov
pop
jecxz
inc
fimull
push
outsl
rcrl
mov
mov
stos
mov
mov
loop
cwtl
pop
add
roll
incb
out
or
or
popa
dec
add
aad
push
xor
cmpl
mov
fucomip
or
push
imul
lret
test
repz
mov
fcompl
xchg
popa
cmp
mov
cmp
or
hlt
pop
lret
and
mov
inc
xchg
jge
jp
jns
cmp
cmpsb
push
pushf
push
mov
dec
cmpl
pusha
push
fucomp
pop
push
adc
repz
lcall
inc
push
nop
mov
xor
mov
repz
mov
or
mov
shlb
adc
test
fcoml
cld
fsubp
ja
daa
push
scas
cmp
and
sar
cmp
cltd
das
popf
jg
xchg
xchg
fistpl
shrl
call
in
and
pushf
fdivl
insb
arpl
sahf
dec
mov
pop
mov
ljmp
push
sbb
cwtl
xchg
pop
mov
cmc
in
iret
adc
lods
mov
je
repnz
loopne
loope
mov
sbb
and
jbe
and
fiadds
dec
xor
sub
add
dec
movsl
mov
push
imul
add
cmp
push
frstor
jo
bound
dec
xchg
repnz
or
jg
lcall
cltd
popf
add
repz
fdiv
jg
mov
sbb
outsl
add
neg
cmpsb
push
jae
xchg
jp
aam
add
jecxz
das
and
leave
dec
dec
out
outsl
out
or
test
dec
bound
dec
cltd
mov
add
dec
dec
cwtl
addr16
aaa
fimuls
ljmp
mov
mov
imul
dec
jo
xor
push
repnz
add
out
icebp
pop
jno
movsb
xchg
push
cwtl
popa
addb
mov
fwait
adc
out
shlb
in
int3
std
loop
daa
cmp
movsb
lea
stc
pop
and
lea
ds
shl
sub
xor
sub
and
mov
nop
aas
xor
cld
mov
or
iret
mov
push
dec
adc
mov
sub
fcomi
jle
xchg
push
or
sbb
and
adc
pop
push
cld
mov
out
xlat
pop
divb
xor
int
mov
lds
jl
insb
adc
and
lcall
add
nop
mov
int3
jle
pop
ljmp
mov
aad
repz
flds
cmp
movsb
dec
pop
scas
ljmp
out
mov
cmpsb
pop
dec
andl
outsl
jo
les
frstor
inc
fsubrl
aaa
int
mov
mov
shrl
aaa
ss
pushf
add
cmp
xorl
sbb
mov
add
sbbl
lret
arpl
mov
dec
mov
jae
xchg
sbb
pop
ja
dec
pop
aam
fs
push
fbstp
mov
mov
xor
call
sar
fs
xchg
sub
pop
adc
adc
inc
cmp
dec
xchg
cld
inc
lahf
mov
xchg
sti
xchg
sti
cmp
jp
not
icebp
jo
adc
popf
mov
xchg
cltd
sarb
arpl
rclb
lret
add
loopne
push
mulb
lods
xchg
test
xor
jns
dec
in
mov
nopl
cmp
loop,pt
push
add
jae
or
mov
loope
sbb
in
xchg
adc
xchg
jb
jg
cmp
or
sbbb
xor
dec
mov
stc
and
lcallw
ret
pop
inc
mov
or
pop
lret
lds
add
jmp
xor
fisubl
insl
adc
inc
fcmove
mov
mov
mov
mov
mov
in
fisubrs
fdivrs
gs
mov
xlat
rorb
repz
add
loope
pop
shlb
mov
daa
fnstcw
add
les
sub
xchg
lea
mov
mov
and
mov
sub
repnz
imul
jl
loop
mov
mov
dec
mov
adc
push
xor
mov
inc
ffreep
xchg
fwait
inc
mov
shlb
sbb
sub
xchg
cld
aad
loop
mov
call
mov
push
xor
dec
loope
fdivrl
ret
sub
idivl
add
lock
adc
out
cmp
jne
or
adc
add
ror
andb
pop
lods
mov
divb
xor
and
test
inc
add
out
xchg
jne
test
cli
daa
dec
inc
outsl
je
adc
lcall
push
fcomi
mov
in
ds
es
aad
jo
in
xor
icebp
gs
stc
aad
sbbl
xchg
repnz
in
mov
jg
mov
add
inc
jnp
in
outsl
or
cltd
add
mov
pop
addb
mov
mov
ds
mov
mov
sub
ljmp
adc
jno
inc
jmp
movsb
mov
adc
jge
es
nop
sbb
jnp
push
insl
jl
cmc
je
cmp
lret
test
pop
shr
xchg
xchg
test
mov
cmc
pop
lahf
out
cmp
scas
ret
mov
xor
pop
aam
mov
es
push
pop
xchg
fiaddl
lds
nop
add
pop
jmp
daa
loope
adc
clc
cli
daa
jno
adc
iret
mov
call
or
adc
mov
ja
adc
test
cmp
call
add
and
mov
mov
adc
mov
in
out
icebp
enter
xchg
test
xor
popf
cwtl
movsl
dec
adcl
cmp
jno
cli
sbb
mov
aaa
jne
adc
xor
push
icebp
sbb
aaa
xor
rorl
pop
cltd
scas
int3
push
xchg
cmp
xor
mov
push
daa
stos
mov
iret
mov
cmp
popf
aad
ss
pop
xchg
fists
mov
frstor
pop
jecxz
sub
xchg
pop
arpl
mov
dec
xchg
cs
mov
fcoms
push
subb
cwtl
fiadds
sbb
xor
push
jge
add
jns
mov
xor
inc
sbb
roll
add
je
bound
adc
or
push
scas
scas
mov
lds
imul
loop
or
sbb
cmp
jno
or
sbb
pop
push
mov
xor
rolb
in
adc
dec
or
mov
sti
jge
repnz
pushf
add
push
es
dec
and
and
and
sub
in
inc
sub
popa
push
add
xor
pusha
pop
call
shl
aad
jecxz
arpl
pushf
aad
add
iret
icebp
inc
xorb
adcb
adc
dec
cmp
cltd
xchg
jo
cmp
mov
add
cmpsb
lods
mov
mov
mov
aam
clc
rep
push
ret
fldt
mov
push
mov
shl
testb
mov
jp
inc
xchg
dec
jns
shrb
sub
pusha
push
cmp
push
stc
mov
push
xor
mov
jnp
andl
push
stc
xchg
jno
mov
sti
popf
fnsave
and
cmpsl
arpl
mov
mov
ljmpw
cmpsl
sbb
loopne
jno
das
fwait
jb
pop
leave
pop
pop
clc
sahf
adc
xchg
pop
jge
or
dec
repz
jmp
sbb
dec
mul
test
movsl
lea
mov
outsl
mov
fcompl
std
pop
mov
mov
mov
inc
cmp
add
faddl
lods
out
xlat
mov
ja
cmp
add
mov
ljmp
jp
nop
xlat
imul
xchg
and
es
mov
popa
scas
jp
lret
xchg
sub
xchg
sbb
mov
fildll
mov
push
mov
sbb
add
jno
mov
adc
sbb
push
fbstp
xchg
leave
test
xchg
mov
mov
xchg
fs
out
fidivl
mov
pop
adc
xlat
xor
loopne
insl
xor
lds
sub
mov
sbb
test
pop
out
pop
inc
aad
mov
test
movsl
mov
cmp
ja
add
stos
aad
mov
jecxz
mov
lods
roll
sbb
add
add
ret
outsl
out
push
hlt
bound
push
jge
and
idivb
sub
fwait
pop
in
aaa
addr16
cli
ds
lret
inc
xchg
add
addb
addb
mov
add
or
and
inc
cs
push
mov
lods
pop
pop
arpl
mov
mov
sbb
mov
jnp
lahf
xchg
push
or
movsl
jge
push
pop
dec
enter
xchg
cs
sbb
cmp
add
int3
ficoml
or
mov
xor
ret
pusha
adc
bound
or
leave
ficompl
decb
aad
daa
js
cwtl
sbb
mov
jnp
xor
sbb
push
pop
mov
loope
or
daa
sbb
mov
pop
sarb
loope
jne
std
push
jns
adc
jbe
or
cli
mov
mov
fwait
jg
xor
test
cli
jne
add
shll
inc
ret
mov
jbe
arpl
cmp
das
bound
sti
aam
lock
add
inc
pop
jecxz
add
adc
mov
jae
mov
cmp
pop
pop
add
hlt
xchg
and
js
push
lods
inc
xor
outsl
dec
push
test
mov
outsb
in
mov
add
pop
sbb
into
cmc
add
jmp
mov
mov
push
xchg
jmp
xchg
mov
int
push
stc
fs
int
push
in
es
sub
dec
sbb
loopne
or
cmpsb
lods
hlt
and
andl
jle
push
dec
cwtl
pop
xchg
jge
loopne
push
mov
add
orb
addr16
es
or
popa
add
lahf
mov
dec
and
jp
jne
push
push
push
and
cmpsb
push
popf
fiadds
icebp
push
jge
loop
icebp
mov
push
orb
insl
add
out
push
sub
push
jmp
or
xchg
xor
test
sub
lret
mov
sbb
sub
jns
push
jge
mov
lahf
xchg
xchg
imul
lahf
aam
push
inc
xchg
inc
lods
int
mov
jg
mov
enter
lret
mov
dec
lret
adc
cs
adc
xchg
aaa
ja
cmovbe
shlb
mov
add
pop
xchg
test
push
in
je
cmpsl
fnstenv
lahf
jns
dec
sar
push
or
stos
sbb
out
push
adc
lcall
push
add
js
sbb
popa
mov
add
lods
push
mov
rcrl
test
outsb
jno
pop
shll
mov
jno
hlt
jle
cwtl
jl
xor
push
mov
jno
cmp
or
or
adc
xchg
data16
sub
adcl
out
jno
pop
out
dec
js
lods
leave
dec
xchg
add
ds
pop
fs
push
adc
push
bound
push
out
jecxz
sub
pop
leave
jge
jecxz
mov
push
mov
fimuls
pushf
dec
inc
daa
inc
adc
dec
cwtl
fisttps
adc
dec
addb
dec
jge
mov
pop
mov
loopne
sbb
xorl
cmp
sbb
popf
and
xor
xchg
loopne
iret
pop
pop
mov
mov
andl
ds
pop
call
mov
mov
add
and
shrl
jl
movsb
dec
insb
inc
mov
popf
leave
fisttpll
popa
js
lds
lcall
push
mov
gs
mov
xchg
xchg
daa
in
mov
divb
enter
sub
push
leave
out
popf
jb
push
mov
jno
push
in
mov
xchg
lea
dec
lret
ficoml
xor
ret
scas
enter
xchg
adc
das
cmpsl
sub
dec
roll
or
jb
int3
jb
out
mov
pusha
adc
adc
outsl
adc
jo
test
out
mov
cmpsb
add
imul
rcr
xor
adc
dec
testl
mov
sub
sub
or
idivl
inc
shrb
sahf
pop
jge
iret
sbb
ds
cmp
inc
mov
call
dec
push
hlt
xchg
pop
cmp
and
or
cmp
pop
rcrb
and
and
xchg
jl
orb
scas
movsb
push
jg
cs
xor
inc
xchg
cmp
inc
ss
dec
adcl
aad
mov
outsl
mov
pop
jo
daa
fs
add
cmp
sti
ja
cmp
inc
fdivp
xchg
jne
out
mov
lods
mov
aad
insb
leave
jnp
jle
shlb
in
sbb
dec
dec
sbb
push
mov
dec
outsb
jo
cmp
call
insb
popf
ret
out
push
xchg
dec
shll
pop
nop
lret
push
sub
mov
gs
int3
jle
ja
adc
sub
add
ret
jb
sbb
cmp
ljmp
or
jge
cmpb
add
and
mov
fcmovnbe
sub
inc
sbb
cld
mov
cmp
mov
divl
mov
clc
mov
or
adc
arpl
iret
sbb
enter
cltd
mull
out
jmp
pop
arpl
clc
sub
ret
pop
fimuls
push
or
sahf
add
and
into
jecxz
cmp
xchg
daa
dec
out
pop
ss
fisubl
sbb
shr
push
imul
inc
xor
adc
cli
mov
les
cmc
fisttpl
in
cmp
push
ret
mov
je
or
jb
dec
movsl
jo
cmp
sub
inc
mul
or
bound
fsubs
mov
in
jg
jmp
cmp
push
mov
xorl
shr
jne
movb
icebp
pop
jb
das
xorb
adc
dec
lock
out
dec
aaa
aas
and
adc
clc
loope
fidivrl
and
mov
insb
jl
out
dec
pop
jnp
cmp
bound
jbe
aam
orl
xor
rol
jge
sbb
scas
mov
notb
mov
push
pop
hlt
pop
into
jmp
pop
sti
add
jp
leave
cmpsl
dec
pushf
mov
repnz
mov
lods
mov
sub
ss
mov
mov
inc
push
mov
dec
imul
xlat
jb
mov
sahf
cmp
inc
out
xchg
rcl
jns
sub
cwtl
inc
add
or
js
ret
clc
stc
sbb
js
movsb
mov
jge
in
push
enter
outsl
and
cli
inc
pop
dec
xchg
lods
ss
aas
push
mov
popf
xor
imul
aam
push
and
push
push
fs
dec
cs
pushf
movl
ds
hlt
nop
mov
adc
xchg
sbb
jne
xor
mov
cli
xor
je
sbb
sbb
andl
push
jno
adc
outsb
push
pop
js
rcr
leave
or
push
xchg
sbb
mov
cmp
adc
jbe
dec
cmpsb
sahf
cmp
push
dec
movsl
sarb
fsubl
test
mov
cwtl
mov
lds
enter
shlb
mov
daa
push
outsl
dec
jle
mov
sbb
mov
push
repz
dec
pop
pop
int
jle
jmp
mov
popa
mov
cld
add
jmp
testw
ficoml
int3
add
fwait
mull
jge
add
pop
hlt
jb
das
in
adc
mov
or
stos
adc
pop
int
mov
ljmp
mov
in
subb
pop
lods
bound
das
clc
cmp
ficomps
sub
icebp
sub
pop
jecxz
cwtl
iret
adc
out
pop
jle
pop
cld
pop
pushw
cmc
movb
xor
add
int
addl
movsl
aad
add
fldcw
imul
nop
inc
dec
mov
mov
lret
in
mov
mov
aam
dec
pop
push
sbb
paddq
ret
xlat
ret
divl
mov
stc
or
inc
mov
mov
popa
in
inc
dec
mov
cmp
aam
icebp
pushf
fsubrl
add
push
inc
pop
add
cld
sbb
scas
or
fistpl
flds
fdivs
jl
in
dec
scas
nop
arpl
jmp
push
cmp
loop
movsb
divl
push
push
aam
mov
xor
add
push
xchg
mov
outsb
push
jl
or
cmpsl
mov
jnp
fstpl
std
xor
lret
xor
rorl
dec
bndstx
mov
sbb
mov
lcall
sub
pop
addb
inc
notb
insl
aas
rcl
outsl
push
push
in
push
sub
mov
jnp
ret
jle
fdivr
cmpl
int
int
mov
adc
inc
pop
jecxz
dec
negb
enter
cmp
push
and
stos
inc
push
stc
pop
test
xchg
gs
pop
cmpsl
sub
xchg
cmp
dec
ja
inc
fstp
movsl
mov
xor
jb
int3
mov
test
adc
cmp
sbb
jmp
jmp
insl
pop
sub
stos
pop
sarb
les
fwait
notl
in
mov
in
push
iret
sub
dec
and
ret
and
adc
enter
stos
call
dec
mov
int
cmp
lock
insb
cmp
sub
dec
mov
jmp
into
mov
iret
leave
test
jle
inc
and
xchg
mov
lret
fwait
mov
popa
mov
in
test
cmp
leave
jb
popl
fcmove
shlb
mov
fs
mov
cmc
pop
mov
imul
repz
inc
clc
pop
or
mov
cmp
int3
gs
mov
sub
mov
inc
movsl
lahf
pop
mov
mov
jae
mov
roll
dec
outsl
add
jo
adcb
jo
add
adc
push
adc
xchg
test
roll
sbb
cmp
jmp
mov
pop
mov
sbb
je
sbb
jle
into
das
fidivs
mov
or
and
leave
adc
andl
subb
mov
aad
je
lods
leave
cmp
push
sub
xchg
int
xchg
test
mov
iret
mov
lcall
xchg
xor
into
inc
xchg
repz
jg
mov
divb
inc
popf
dec
dec
mov
xor
cmp
push
test
pop
jns
cwtl
shll
pop
push
sar
popf
cmp
dec
sub
mov
or
stos
daa
adc
sbb
pushf
ret
xchg
and
sbb
push
cmp
test
dec
loopne
cs
jg
jnp
jl
xor
cmpsb
mov
dec
scas
inc
fsubrp
mov
sbb
jne
ret
ret
lret
imul
mov
dec
and
add
imul
jle
pop
inc
popa
xor
imul
outsl
subl
or
mov
fidivrl
es
jecxz
sbb
xchg
sar
dec
mov
ljmp
aas
repnz
add
jg
fisubrl
scas
loopne
sub
jb
or
imul
mov
jmp
or
xchg
xchg
fs
sub
push
or
or
or
jae
bound
adc
jne
push
ljmp
sbbl
lods
sub
pavgb
arpl
inc
and
outsb
mov
lret
jnp
sbb
mov
jmp
loopne
xor
repz
dec
int3
insl
out
sub
out
jmp
add
dec
cmp
and
sbb
movsb
stos
add
xchg
addl
inc
jbe
lds
dec
xor
inc
push
mov
dec
sbb
enter
and
insl
in
cs
jecxz
mov
mov
or
lret
add
int
test
mov
jne
and
test
stc
sub
scas
or
loope
mov
mov
aas
push
pop
cli
pusha
sti
or
jo
push
mov
roll
mov
in
sbb
arpl
dec
loop
enter
jg
les
mov
rolb
out
sub
or
mov
sti
stos
cwtl
xchg
out
int
mov
push
je
jmp
mov
inc
mov
xchg
dec
arpl
ret
ret
imul
push
lea
sub
mov
dec
pop
jg
pop
and
and
inc
clc
pop
mov
adc
ret
ja
test
shrl
inc
insb
das
out
push
shll
lcall
rolb
iret
or
out
fwait
sub
out
stos
dec
fiaddl
or
fcmovbe
pop
mov
adc
push
ss
add
pushf
add
aas
int
inc
sub
or
pop
shl
stc
push
mov
ficoml
jmp
insl
mov
inc
loopne
xchg
mov
or
lret
stos
pop
inc
stos
jnp
fdivs
mov
sbb
dec
imul
and
cwtl
sub
std
fs
or
adc
and
ss
push
push
jnp
movsb
adc
in
repnz
xchg
xor
outsl
dec
je
repz
pushf
lahf
gs
xchg
iret
dec
std
fdivrs
and
xor
lret
xor
jg
sub
mov
rolb
lret
xor
add
daa
sub
ljmp
cwtl
add
fs
data16
cmpsl
jno
popa
sub
sub
push
mov
aad
cwtl
insl
add
jp
pop
xchg
push
pop
and
mov
add
xlat
outsl
xor
imul
xor
in
jmp
imull
lcall
inc
xchg
and
aaa
cmpsl
fucomip
lods
adc
adc
mov
mov
fmull
pushf
cmp
jae
in
jnp
pop
ret
cli
repnz
mov
inc
pop
ficoml
je
ja
enter
dec
mov
xchg
push
push
lds
addr16
jge
movsl
ljmp
cmp
leave
jae
cs
mov
addb
mov
sbb
movsb
dec
addr16
negl
imul
mov
jle
lcall
ret
xlat
mov
lret
test
test
out
inc
or
psrld
bound
inc
jae
call
xchg
js
mov
push
insb
in
jmp
nop
dec
pop
sahf
ja
adc
movsb
and
pop
scas
stc
jle
pop
and
rorl
les
andb
pop
sub
ss
dec
test
rcll
adc
test
push
mov
jns
and
andl
divb
incb
int
into
cmpsb
loopne
mov
into
sbb
rorb
inc
movsl
inc
push
xor
xchg
dec
into
xorl
mov
dec
ja
inc
fistpll
and
data16
int
push
rcll
enter
add
test
shlb
pop
in
cmpsb
addl
xor
mov
inc
dec
inc
in
sbbb
fcompl
push
cwtl
in
sbb
adc
daa
jae
cmp
daa
and
mov
scas
call
jnp
mov
cs
inc
cmp
nop
clc
xor
icebp
shrl
and
shrl
test
cwtl
xchg
cmp
mov
jmp
movsb
dec
mov
fisubrs
push
pop
inc
aas
jg
push
jle
mov
xchg
fisubs
mov
mov
inc
arpl
add
cmp
repz
in
stos
popa
push
push
and
data16
dec
xchg
pop
pop
dec
ret
pop
mov
sbb
and
dec
aad
gs
pop
pusha
push
sub
push
inc
lret
js
xor
test
push
cmp
je
cmp
mov
call
aam
insl
xchg
dec
jmp
sub
xchg
mov
ljmp
ret
repz
add
jne
xchg
idivl
inc
xlat
repnz
std
xlat
adc
jmp
mov
jae
mov
push
sbb
jle
cmp
push
cmp
outsl
fistpl
stc
cmp
aad
fnstcw
pop
jp
mov
cld
out
jle
add
jo
mov
sahf
push
es
pop
jge
jno
aam
lds
jnp
jge
mov
cmp
sbb
add
xchg
cmpsl
dec
jnp
iret
add
mov
popf
outsl
push
hlt
and
scas
cmp
stc
loop
out
mov
jl
scas
jae
stos
add
inc
and
or
mov
add
andl
sahf
aad
jg
fwait
mov
loopne
dec
xchg
cmp
jo
in
out
and
pusha
out
mov
pushf
pushf
inc
xchg
das
mov
xor
mov
sahf
mov
notb
cmc
das
cwtl
divb
cmp
fisttpll
pop
aaa
imul
int
outsl
pop
sbb
loopne
in
and
mov
faddl
das
adc
mov
rcrb
xchg
enter
cmpsl
cmpsb
or
out
sbb
scas
out
adc
sbbl
xchg
jle
push
das
inc
lret
jo
stc
insl
out
fdiv
cwtl
lock
inc
xchg
adc
push
outsl
or
xchg
xor
loop
popa
pop
gs
dec
divl
scas
jno
loopne
adc
sub
pop
loopne
xchg
pop
and
dec
and
and
inc
add
inc
fyl2xp1
xchg
mov
cmp
movsb
add
ret
xlat
popa
repnz
pop
pushf
dec
lds
mov
adc
jo
test
pop
xchg
loop
or
stos
fidivl
cmp
filds
dec
mov
fbstp
aad
cmp
adc
mov
inc
sbbl
int
sub
repz
rcrb
je,pt
add
jl
jb
std
negl
testb
xchg
lcall
jo
sbb
shlb
ss
jl
add
cmp
mov
insb
ljmp
lcall
adcb
movsl
xor
fsts
popa
hlt
aas
pop
icebp
in
fildl
mov
scas
ret
cmp
dec
jbe
int3
push
test
loop
add
in
cmc
pop
mov
push
push
lods
test
jo
pop
or
sbb
test
cmpb
lds
jmp
in
fsubl
pop
int3
xor
ret
das
scas
cltd
xor
inc
fimuls
and
dec
jmp
or
ljmp
push
loope
or
pop
or
imul
sub
iret
push
dec
push
aad
outsb
push
roll
inc
out
inc
insl
jno
pop
stos
outsl
icebp
xchg
bound
adc
cmp
pusha
dec
mov
jge
pusha
mov
mov
and
test
out
out
pushf
and
adc
in
notl
dec
scas
and
sarl
xchg
aam
inc
fld
es
mov
outsb
adc
ljmp
nop
dec
lds
popf
pushl
andb
in
ret
jbe
popa
cmp
popl
push
push
and
js
lret
leave
int3
pop
mov
xor
xorb
fstl
push
jns
push
mov
dec
mov
xor
gs
sbb
lock
jbe
xchg
andb
inc
adc
xor
out
inc
xchg
mov
insb
iret
xchg
push
push
fistpll
sub
ljmp
add
sub
test
adc
lock
mov
inc
repz
xchg
push
adc
outsb
subl
cwtl
out
or
dec
xchg
and
out
notl
enter
push
inc
xchg
mov
and
ret
or
outsl
mov
inc
enter
repz
mov
addr16
sub
sti
fcomps
les
dec
clc
ja
mov
das
fsts
lea
aas
cs
xor
mov
movsl
mov
jae
sbb
pop
ret
scas
xchg
add
pop
inc
adc
scas
stc
jmp
sbb
dec
sbb
aad
int
pop
jns
cli
push
xor
test
aaa
jno
or
mov
lock
lock
push
inc
pop
mov
jnp
lods
add
loop
lret
push
enter
cmp
jno
push
mov
rcrl
or
mov
sahf
jne
into
xchg
dec
lcall
daa
sbb
jbe
daa
xor
mov
fildl
mov
mov
test
stos
or
jbe
outsl
mov
mov
fimull
mov
xchg
sarb
stc
dec
sub
pop
sbb
push
jmp
mov
or
enter
xchg
mov
dec
mov
mov
sub
imul
outsl
test
pusha
cmpsb
sbbl
roll
jle
bound
inc
cmp
imul
test
mov
mov
xlat
sub
add
inc
jb
popl
jne
lods
das
imul
je
mov
aad
mov
jp
das
cmp
scas
insl
push
pop
fcmovu
add
repz
mov
call
lds
and
dec
jl
dec
ret
repz
imul
aam
mov
jbe
or
call
and
rcrb
es
sub
and
and
dec
pop
push
mov
inc
shufps
mov
add
push
out
and
push
std
mov
mov
mov
testb
mov
push
test
loop
shll
push
add
pop
loopne
pop
out
inc
or
or
cltd
loopne
movl
icebp
in
bsf
or
test
mov
and
pop
aaa
xchg
outsl
jmp
dec
inc
icebp
xchg
loopne
pusha
ss
lock
xchg
mov
cltd
outsb
and
jle
data16
jl
cld
sub
rorb
test
cmp
mov
shll
xchg
sub
sbb
and
adc
in
mov
cmp
ret
ja
sub
js
pushf
mov
pusha
cmp
sbb
std
or
sub
sub
inc
decl
andl
lods
xlat
in
push
sbb
std
daa
ds
xchg
mov
push
into
sbb
cmp
sahf
mov
bound
push
je
loope
mov
out
mov
xor
in
jns
je
paddb
mov
js
psubsb
cmpsl
inc
inc
adcb
sarb
lret
xlat
insl
mov
loop
test
xor
or
mov
inc
and
mov
rclb
sti
push
sti
mov
insl
mov
and
into
hlt
push
sub
dec
mov
pusha
add
or
sub
add
incl
enter
pop
icebp
pop
sarl
jo
jnp
xor
test
or
jae
xor
stos
add
cwtl
mov
jmp
data16
aas
bound
hlt
cmc
pop
addr16
adc
xchg
xor
pop
or
sub
negl
dec
dec
in
jp
push
fstpl
cmpsl
lds
test
bound
movsb
insb
mov
jo
lods
inc
test
sbb
add
or
ja
mov
inc
push
into
inc
aad
je
mov
in
xchg
les
int3
mov
subl
add
nop
jno
gs
shrl
popf
pop
push
push
xor
dec
repz
inc
xchg
es
mov
inc
xor
out
push
fdivrs
cmp
pop
sti
push
lahf
mov
mov
lret
xchg
sbb
xchg
insl
push
mov
bound
aam
xor
sub
enter
subl
add
pop
add
xchg
xor
imul
cmpsl
loop
call
push
repnz
addb
mov
pop
add
add
aaa
cmc
cmp
test
push
nop
inc
sahf
lret
push
dec
pop
decb
stos
sahf
cmp
mov
cmpl
test
cmp
or
or
cmp
jecxz
je
jae
dec
mov
or
push
call
es
mov
jb
int3
out
adc
aam
inc
daa
xorb
xchg
dec
stos
xchg
pop
or
adc
movsl
cmp
inc
pop
stos
fcoms
sbb
mov
or
cmp
leave
lds
aas
bound
adc
push
leave
test
fildl
insl
or
and
je
cmp
mov
dec
arpl
cmp
add
cli
mov
inc
mov
mov
xchg
dec
mov
xor
sub
adc
js
adc
fwait
es
mov
lcall
xchg
lock
inc
and
fcomp
dec
lods
arpl
je
jle
and
cmp
mov
movsb
jns
pop
mov
add
jmp
jmp
icebp
or
dec
sub
pop
adc
into
mov
ret
mov
lods
in
mov
jno
mov
in
xlat
ja
std
jle
mov
cmc
jbe
out
loop
push
cltd
inc
xchg
imul
cld
lahf
mov
xor
push
loope
idivl
or
dec
int3
push
cmp
push
clc
sub
negl
andl
cmp
jae
repz
pop
pop
test
mov
test
shrb
mov
dec
sti
les
scas
cmpsl
pop
sub
sbbb
xor
in
cli
add
loop
mov
ror
dec
cs
subb
les
push
adc
bound
jb
push
call
push
iret
out
arpl
and
lds
lods
push
cmp
mov
xor
xor
lret
sti
dec
cwtl
cwtl
mov
cmpsl
arpl
adc
clc
add
inc
sub
push
test
lods
jb
loope
sbb
xchg
dec
cs
and
mov
jo
xor
xor
scas
repnz
xlat
pusha
mov
sub
into
mov
inc
popa
xor
pusha
jge
jge
repz
into
in
pop
inc
jge
and
cli
arpl
outsb
rcrl
cmp
pop
mov
and
sbb
xchg
ljmp
pushf
pushl
lahf
sbb
mov
dec
lcall
fnstcw
mov
out
test
adc
xor
aad
mov
xor
jbe
pop
sbb
shl
xchg
cwtl
dec
test
ret
push
lods
sbb
jns
rcr
repnz
sbb
sub
sbb
hlt
sbb
aad
loopne
arpl
xor
mov
or
aaa
inc
insl
enter
popf
sbb
push
pusha
pushf
mov
pop
addb
push
mov
and
sbb
adc
jecxz
pop
movsb
jl
sbb
out
imul
lods
or
fildl
or
test
xchg
das
xchg
push
ret
stc
das
shl
jg
and
gs
xorl
nop
iret
jnp
dec
jns
stos
lods
add
push
pop
fisubrs
sub
int
lock
roll
nop
iret
inc
in
insb
loop
inc
cmpsl
cmpsl
hlt
mov
orl
or
or
pop
call
xor
cmp
push
stos
xchg
movsb
mov
push
mov
fwait
pusha
sub
fldt
sbb
or
rcl
dec
mov
jne
mov
inc
mov
rcr
into
rorl
lods
sbb
dec
xor
sahf
inc
icebp
in
and
fnstcw
insl
pop
push
push
dec
movzwl
arpl
sbb
stos
push
outsl
adcl
fldt
mov
dec
jb
pop
mov
lret
and
sbb
pmaxsw
or
lret
out
xchg
jo
inc
add
movups
xchg
aas
rcrl
xor
mov
out
mov
ret
nop
lods
xchg
sti
fnstsw
lea
lret
cltd
dec
in
jns
sahf
cmp
lahf
sub
push
movhps
bound
lret
adc
ljmp
daa
shrl
add
adc
cmpsb
shrd
nop
inc
test
hlt
pop
nopl
and
movsb
aam
inc
out
movsb
dec
dec
sbb
loopne
sbb
outsb
dec
int3
lcall
jg
sbbb
popa
mov
hlt
xor
inc
fistpll
lea
push
inc
jmp
call
inc
mulb
add
stos
addr16
insl
push
mov
test
test
fs
hlt
push
push
xchg
mov
inc
aam
mov
pop
jge
jp
mov
jae
xor
ljmp
xor
inc
fildll
fldl
jbe
popa
cs
in
outsl
adc
fstpt
jg
das
sub
pop
jge
mov
mov
lahf
inc
test
scas
jge
scas
cltd
sbb
inc
mov
mov
repz
sbb
shrb
or
mov
lea
bound
shll
xor
adc
inc
into
movsb
enter
cwtl
jecxz
jl
cmp
divb
stos
scas
jmp
mov
fisubl
xor
out
xchg
sub
insl
jp
rclb
inc
sub
mov
and
insl
out
cwtl
inc
push
cltd
popa
icebp
sti
pusha
inc
dec
out
dec
add
outsl
xchg
pop
test
pop
adc
popa
cmp
int
lods
dec
jne
sbb
mov
shll
sbb
pushl
pop
stos
mov
shlb
lret
leave
xchg
cmpsl
and
jp
mov
jbe
ficomps
outsl
inc
jmp
in
inc
fsts
xor
jne
rcrb
leave
xchg
sahf
outsl
pop
es
into
mov
push
dec
sub
mov
cs
iret
jne
xchg
in
mov
adc
mov
mov
pushf
push
lret
cmp
or
bound
mov
shll
xor
pushl
cli
insl
imul
mov
psrld
dec
in
push
or
mov
fiaddl
mov
push
rorl
mov
in
pop
lcall
es
in
popa
mov
vmovlps
sbb
add
push
testl
clc
test
sub
ret
arpl
rclb
mull
xor
je
jo
bound
mov
push
lret
mov
sbb
inc
add
cmp
inc
shlb
cltd
imul
cld
add
xchg
or
jge
aad
inc
loopne
scas
pushl
out
addr16
fmull
push
aaa
rclb
stos
sub
sbb
jge
mov
inc
in
loope
fnstenv
out
jle
fst
out
inc
push
stos
mov
jle
cmpsb
es
push
mov
daa
out
int3
clc
pop
stos
in
sub
mov
cwtl
leave
jne
push
test
push
xor
das
aam
lahf
push
int3
mov
popa
jg,pt
cmp
sub
jg
aad
aad
xor
xlat
hlt
mov
jmp
push
inc
xchg
cmpsb
mov
sbb
cmpsw
adc
cltd
ds
lcall
sahf
stc
dec
cmpsb
xorl
enter
stos
push
stos
es
pushf
pop
and
aas
sub
mov
test
or
pushf
mov
ljmp
cwtl
push
cli
inc
insl
sbb
ljmp
mov
jl
shlb
mov
jp
and
dec
outsb
repnz
jge
fstps
nop
sti
cli
mov
push
xor
es
int3
imul
sub
pop
and
ss
xchg
outsb
inc
shr
pop
bound
xchg
cmp
movsl
cs
or
movsl
movsl
out
ja
xor
jecxz
ret
jbe
jmp
inc
test
mov
rorb
dec
jns
aas
xor
out
ss
js
pop
jl
xor
adc
sub
les
les
jns
btr
dec
or
dec
ja
and
xchg
xchg
jno
add
fdivp
jg
aas
jl
mov
je
sub
je
mov
adc
sti
mov
inc
cwtl
int
insb
xor
mov
int
fbld
lahf
cmpsl
negb
mov
orl
and
sub
sahf
xchg
adc
cmp
lods
pop
lret
aas
stos
jns
xchg
or
loopne
and
jne
cmp
aam
sub
fstps
test
fstp
mov
xchg
or
popa
mov
call
and
sar
loop
dec
xor
sbb
imul
sbb
addr16
clc
pop
dec
shr
insb
sbb
adc
adc
ret
cmp
je
test
xor
push
shr
jmp
push
inc
cmpsl
push
mov
test
jbe
in
pop
into
jb
adc
arpl
shll
sti
jns
and
sbb
mov
movsb
lods
stos
push
fists
aaa
jne
mov
repnz
push
in
sbb
popa
sbb
or
dec
fisubrl
push
dec
fmuls
inc
adc
test
sahf
pop
shl
mov
push
push
mov
jecxz
sub
int3
jb
jno
out
inc
mov
scas
jp
mov
add
popf
mov
xlat
icebp
cmp
push
mov
push
mov
add
mov
mov
push
pop
aam
jecxz
sub
pop
popf
gs
shrl
aad
pop
daa
add
pop
ljmp
test
sbb
push
outsb
mov
add
jp
sbb
insb
push
lock
in
lock
cmp
jns
add
pop
jecxz
push
fcomps
pop
dec
and
std
sub
pusha
jecxz
jmp
fdivr
xor
inc
test
ja
push
shlb
inc
dec
pop
iret
adc
mov
inc
hlt
dec
ss
das
mov
inc
or
inc
adc
dec
incl
enter
in
jmp
sti
push
dec
aas
pop
pushf
dec
pushf
cmc
mov
lahf
test
add
scas
mov
sar
test
xchg
hlt
cli
push
data16
out
ret
jmp
xor
loope
jg
mov
pop
cmp
push
das
add
cmpsb
arpl
sbb
pusha
inc
dec
jp
cmc
mov
push
jnp
fwait
or
pop
sbb
out
mov
pushf
dec
scas
and
jge
adc
xchg
out
je
aas
mov
adc
jbe
cmp
pop
repz
adc
push
inc
pusha
testl
test
sahf
iret
sub
ljmp
aas
jge
or
xchg
adc
jl
and
mov
hlt
stos
jo
ljmp
push
jl
pop
insb
mov
notl
sub
not
aas
lahf
ret
xchg
testb
lret
dec
out
lcall
test
sub
in
cld
inc
adc
test
mov
mov
lock
mul
cmp
inc
fistpl
loope
movsl
inc
ret
push
xor
jp
sub
and
jle
mov
dec
xlat
mov
or
ret
test
inc
cmp
repnz
push
shl
test
jbe
xor
inc
cmpsb
mov
movsl
sbb
fwait
jg
loopne
pop
insl
shrl
loope
mov
mov
add
mov
ret
jmp
mov
mov
mov
stc
insb
or
push
test
push
cltd
je
push
unpcklps
jmp
orl
loopne
ficoml
fs
and
fcmovu
add
xchg
imul
idivl
imul
adc
leave
jmp
add
outsl
mov
or
dec
int
push
inc
insl
inc
inc
shlb
stc
daa
daa
vcvtpd2psx
add
xchg
icebp
icebp
xchg
insb
inc
pop
push
icebp
xchg
push
in
test
cmp
ret
jge
mov
cmp
push
dec
jb
fadds
mov
pop
pop
lret
cmp
adc
enter
std
or
cmp
repnz
inc
es
inc
or
cmp
or
loopne
icebp
sbb
add
nop
ja
mov
cs
or
jnp
movsl
outsl
stc
into
push
mov
push
and
jno
jge
lock
or
inc
and
xchg
push
ds
loop
jp
lcall
xorl
jae
add
jnp
arpl
add
in
arpl
pop
in
sub
sub
out
sbb
shll
nop
pop
and
stos
push
pop
inc
hlt
fwait
int
cmpsb
jae
fsubs
mov
mov
int
dec
sub
mov
push
or
jbe
xchg
push
push
fs
stos
inc
fnstenv
mov
mov
shlb
adc
xlat
inc
in
dec
and
rorl
dec
adcb
imul
pop
mov
push
add
aaa
jp
pop
enter
dec
sar
mov
mov
shrl
sbbl
pusha
add
insl
dec
adc
mov
sbb
mov
pop
lea
push
pop
or
popa
out
mov
xchg
cmp
push
mov
test
popf
pop
test
dec
shrl
jae
imul
shlb
mov
jb
femms
ret
and
dec
loopne
scas
aaa
adcb
mov
push
fadd
jnp
std
ss
mov
enter
jmp
inc
imul
dec
dec
add
adc
inc
mov
cmc
dec
push
pusha
gs
mov
inc
rcl
adc
pop
cmpb
shrl
cwtl
in
nop
cmp
stos
sti
ja
insl
and
mov
outsl
ret
push
or
mov
cmpsb
pop
xchg
mov
cmc
dec
jle
dec
lret
int
addr16
jmp
clc
jo
xchg
lret
clc
stc
scas
jge
imul
orb
add
mov
scas
mov
pop
fistps
or
mov
lcall
std
inc
loope
adc
jge
scas
adc
mov
mov
push
cmp
or
push
push
sbb
sarl
push
jl
rcl
iret
push
xor
push
push
dec
jnp
dec
pop
jp
cmpsb
push
enter
push
outsl
out
es
mov
jne
adc
sbb
stos
jecxz
and
test
subb
insl
cld
sbb
ret
rolb
outsb
pop
dec
hlt
pop
in
jns
mov
xchg
scas
jge
fdivrl
mov
int
push
mov
clc
jmp
sti
bound
xor
das
mov
cltd
mov
test
pop
insb
or
and
scas
sbb
adc
mov
ja
rolb
mul
stc
in
lret
pop
and
cmpsb
inc
push
xchg
ret
pop
add
outsb
xchg
int
pop
loopne
xchg
lahf
outsb
fstpt
stc
aaa
ss
leave
or
cwtl
pop
cmp
jne
in
stc
cli
inc
popf
mov
sub
cmp
sti
sub
mov
fnsave
sbb
xor
inc
inc
sbb
mov
sub
sub
inc
jo
rcrl
jno
fnstcw
jg
xor
push
xlat
mov
adc
sti
ss
pop
out
sbb
lds
sub
lret
xor
lods
je
loopne
int
repz
or
add
jg
cmc
jbe
jp
enter
adc
pushf
int
ret
inc
arpl
shl
stos
sub
in
incl
gs
mov
push
adc
aas
adc
pop
out
mov
repnz
out
loop
dec
mul
mov
jl
aad
out
sbb
cmp
roll
test
fidivrl
add
sbb
test
popf
and
and
or
add
enter
lods
in
add
test
sub
rcrl
sarl
or
push
mov
les
into
add
enter
push
and
out
mov
icebp
repnz
shrl
xor
ret
jae
mov
dec
jge
arpl
lds
or
mov
and
mov
and
cmp
cwtl
cmovne
cltd
repnz
mov
movsl
out
in
xor
mov
jnp
mov
mov
in
fistps
xchg
jns
aam
sbb
out
enter
mov
insb
shlb
es
loop
dec
mov
addr16
cmp
arpl
clc
idivb
pop
ja
aam
inc
mov
ja
or
je
inc
or
cld
push
andb
in
dec
cmp
cmp
push
aad
xor
les
jo
std
xchg
addb
test
nop
pushf
adc
xchg
and
and
xor
or
pop
ljmp
mov
stos
lcall
sahf
add
test
dec
cmp
xlat
mov
cmp
sub
call
jmp
fdivr
enter
ret
mov
loope
data16
idivl
mov
fidivrs
stos
int
repnz
mov
mov
test
xchg
jne
int3
in
fldcw
imul
in
dec
pop
outsl
enter
mov
add
xchg
mov
push
inc
ret
mov
or
xor
pushf
mov
imul
mov
pop
dec
leave
fxtract
icebp
lds
sbb
out
pushf
xchg
leave
int3
lcall
daa
fsincos
fnstsw
inc
imul
lret
pmulhuw
or
push
insl
jns
cmp
cmp
mov
clc
outsl
sbb
loop
xor
rorl
push
push
gs
xchg
adc
push
xchg
test
sbb
sbb
cmp
mov
leave
lods
pusha
pop
inc
mulb
adc
fsubl
or
popf
mov
mov
dec
add
push
jne
sbb
xor
sub
add
cmp
xchg
repnz
sbb
push
popa
cmc
mov
inc
adc
movsb
hlt
mov
push
sbbb
inc
xor
mov
std
mov
jne
out
lahf
insl
sarb
adc
mov
mov
or
cmovno
test
sub
jnp
jbe
lret
sti
mov
loope
mov
jmp
inc
mov
mov
fprem1
scas
cmp
lret
enter
repz
pop
iret
mov
jns
test
nop
insl
fnstsw
pop
aas
ret
js
sub
fidivl
movl
adc
xchg
sbbl
dec
mov
call
push
xor
test
jmp
pop
out
or
adc
mov
movsl
and
jbe
push
xor
lds
cld
jl
mov
inc
nop
sbb
pop
mov
mov
lock
mov
jge
cmpsb
mov
popf
test
test
xchg
adc
popa
xchg
popa
xchg
mov
sbb
inc
lret
jns
test
fadd
mov
xchg
adc
in
push
in
repnz
mov
je
and
loope
pop
jmp
rcrw
pushl
xchg
test
ffree
fnstenv
dec
inc
ja
add
and
mov
rcll
sti
int
push
push
adc
in
jg
jp
xlat
cmp
movsb
xchg
push
adc
and
xchg
mov
push
cmp
mov
cs
aas
cmpsl
and
cmovs
sbbl
nop
add
jmp
push
push
jle
sti
fimuls
hlt
scas
xorl
mov
sub
cmp
mov
repz
pop
sbb
push
pop
call
movsl
or
les
lods
pusha
in
fs
jecxz
mov
pushf
lret
rcr
scas
dec
xchg
jmp
pmaxsw
std
cmp
nop
sbb
ror
loop
add
xchg
lods
sbb
xor
mov
fcoml
and
daa
rcll
dec
shlb
gs
pusha
pusha
outsl
test
add
aaa
mov
jno
and
test
arpl
pushf
mov
pop
mov
and
imul
loopne
lcall
mov
iret
pushl
in
inc
aas
in
cmpsl
rorb
enter
sub
scas
movsl
inc
add
adc
sbb
inc
cmp
mov
mov
sbb
leave
loop
jns
in
push
xchg
test
stos
roll
dec
out
scas
push
enter
xchg
add
adc
imul
cmp
jns
add
mov
stos
mov
pusha
test
and
sahf
imul
in
push
jg
dec
sub
jbe
incb
int
cmpsb
mov
iret
mov
icebp
jnp
mov
in
mov
add
xor
test
jg
sbb
push
jp
push
mov
jge
enter
out
add
shll
mov
sti
aaa
and
push
xchg
xlat
fwait
pusha
lds
xor
outsb
jae
pop
rcrb
xchg
cmc
inc
mov
loopne
shll
sub
gs
push
xor
out
jecxz
xchg
cs
mov
scas
or
inc
add
adc
or
or
and
cld
mov
test
jp
dec
cmp
pop
push
push
push
dec
scas
xor
jb
out
dec
pop
fnstcw
xor
mov
sahf
dec
fwait
cltd
inc
fwait
dec
mov
cmp
jge
daa
xchg
dec
pop
or
add
inc
xchg
sub
or
jl
mov
test
xor
and
or
jae
call
mov
fcoms
pop
cmp
lods
and
outsb
add
lcall
and
call
mov
lret
call
popf
lds
pop
pop
adc
add
mov
shll
fbstp
fmuls
jecxz
or
xchg
jne
xchg
pop
cmpsb
mov
fcompl
incb
adc
or
pop
ljmp
ja
mov
imul
push
mov
xor
lret
jg
sub
mov
dec
jbe
test
repnz
fcom
in
filds
popa
scas
test
outsb
push
mov
icebp
jns
test
sub
es
inc
stc
jo
movd
ret
enter
inc
test
pop
push
pop
jge
sbb
add
dec
xchg
xchg
into
bound
adc
inc
aad
aad
or
leave
cmpsl
stc
jle
jg
insl
mov
frstpm(287
pop
les
sahf
sbb
hlt
jb
fwait
xchg
adc
stos
sub
jns
lahf
cmc
jae
in
jge
xchg
arpl
out
fsubp
xchg
stc
daa
sub
dec
hlt
mov
mov
mov
pop
xor
jne
sbb
and
dec
imul
test
fs
movsb
mov
je
mov
subl
dec
scas
push
mov
js
mov
aaa
lret
adc
loop
push
ret
hlt
cmp
loop
loop
cmpsl
aas
mov
aad
ss
push
or
in
xor
popa
inc
jns
popf
cmp
shlb
test
ss
push
outsb
cmpl
mov
icebp
xchg
mov
mov
lret
cmpsl
sub
sub
and
aaa
and
mov
cmp
out
rcr
ljmp
push
aam
pop
mov
sub
mov
popa
fstps
fwait
stc
sub
jne
fdivrl
xor
mov
jmp
pop
dec
pop
daa
stos
inc
push
pop
xor
sbb
adc
mov
ret
cmp
in
imull
stc
push
mov
inc
movsb
cmp
lcall
jge
lahf
mov
enter
fs
pop
hlt
sbbl
inc
pop
cmp
sub
cmp
or
aas
and
mov
cmp
ds
xor
push
pushf
outsb
je
aam
add
xor
mov
fcompl
int
les
outsb
test
fsts
mov
sbb
ss
jmp
call
xorb
xor
mov
push
movsl
jnp
jb
iret
pop
in
or
lahf
sub
mov
cmp
movsl
inc
sbb
insl
add
push
jne
add
push
lea
xchg
adc
ds
jns
adc
outsb
dec
or
jo
mov
es
ja
lock
mov
popa
sbb
push
pop
fwait
push
stos
cmpsb
addr16
adcl
repnz
gs
jb
mov
inc
pop
mov
or
mov
flds
nop
loopne
mov
test
mov
icebp
sub
mov
cli
pop
push
add
inc
out
mov
fwait
push
xlat
and
out
cwtl
inc
notb
cld
mov
and
jne
jmp
mov
xchg
cld
rolb
pop
cmp
cmpsl
int3
cmp
xor
sub
mov
clc
inc
jo
mov
bound
mov
xchg
lcall
and
fdivs
fidivl
shrb
lea
mov
stos
ret
arpl
xor
mov
pop
popa
int
popf
inc
mov
xor
and
pop
addr16
xchg
push
mov
fldcw
iret
cmp
cmpsb
outsb
mov
mov
test
js
rolb
or
dec
mov
repnz
mov
aas
mov
fnstenv
dec
movsb
movl
sbb
jno
cmc
outsb
jle
sbb
add
daa
mov
test
xor
aam
cld
into
inc
icebp
inc
cmp
cmp
xor
fsubl
inc
outsl
enter
not
xchg
xor
push
sub
mov
ds
mov
xchg
push
std
fwait
and
push
std
gs
rcrb
inc
sahf
scas
jge
test
lock
aaa
mov
add
cmp
jmp
dec
mov
es
cmp
xchg
push
push
xor
add
mov
repnz
cmp
lock
pop
push
push
cmpsl
fsubp
jne
ret
xchg
icebp
out
jmp
mov
mov
xchg
popa
push
filds
dec
pop
sub
xor
icebp
bound
icebp
add
addr16
out
mov
loopne
xchg
add
and
add
lahf
add
pop
idivl
cltd
sbb
aad
pusha
jno
pusha
jecxz,pn
mov
stos
add
mov
repnz
je
or
add
or
int
mov
scas
mov
add
jo
mov
insb
push
mov
les
pop
mov
imul
push
call
inc
int
or
lret
push
xor
mov
iret
push
stos
inc
lea
aas
std
in
aad
das
rclb
push
jb
add
ret
pushf
mov
add
ljmp
outsl
cmp
dec
andb
hlt
xchg
arpl
aam
lods
lock
cmp
cmp
mov
outsb
xchg
cs
dec
and
movsl
push
xchg
xchg
aad
pop
lahf
adc
outsb
js
lods
movsb
adc
adc
leave
cli
aaa
outsb
pushf
outsb
ss
pop
xor
mov
sbb
mov
dec
sub
out
in
aad
insl
orl
cld
in
cmp
sahf
and
stc
fstps
mov
mov
push
pop
cmp
gs
sbb
adc
push
mov
add
es
std
jle
pop
aaa
mov
pop
addr16
pop
xchg
imul
cltd
pop
das
xor
pop
jbe
jg,pn
call
lds
add
cli
push
out
mov
jg
fs
xchg
dec
xor
mov
mov
stos
icebp
xchg
dec
hlt
push
test
sbb
mov
inc
add
int3
mov
mov
cmp
adcb
dec
xchg
and
cld
lea
jns
ss
pop
pop
ror
mov
outsb
icebp
add
jns
enter
bound
arpl
ret
cmp
cmp
int3
jecxz
lcall
xchg
inc
mov
cli
or
jp
cwtl
jne
pop
pop
fstps
loopne
mov
jo
fwait
je
js
ds
jbe
dec
jg
ret
pop
mov
sub
cmpsb
movsl
inc
and
push
mov
or
xor
cld
jno
lret
fsts
and
js
push
cli
test
jae
or
movsb
or
into
js
aad
mov
movsl
cltd
and
dec
mov
push
inc
fsubrl
inc
enter
mov
sub
fsubl
jge
lret
xchg
test
sub
imul
in
out
add
enter
cs
mov
pop
into
test
icebp
insl
inc
addr16
loope
in
inc
es
sub
repz
sbb
repnz
pop
ss
popf
addb
in
push
hlt
sub
inc
ds
dec
jmp
inc
add
add
loope
sbb
cmp
push
test
and
in
mov
into
rorl
lcall
or
fs
stos
and
popa
js
loopne,pt
mulb
inc
sub
inc
mov
mov
inc
adc
push
dec
test
icebp
xchg
enter
inc
inc
ror
cmp
cld
mov
dec
les
mov
sbb
mov
push
std
lock
int3
lods
jno
pop
movsl
inc
leave
jmp
jmp
pop
push
dec
shll
fists
jnp
lea
inc
shlb
test
aad
jo
or
mov
test
sub
test
in
jno
or
push
pop
pop
xchg
xor
rcll
pop
mov
push
mov
jl
in
mov
imulb
mov
pop
mov
aad
out
jnp
in
jmp
and
add
loope
xor
lcall
mov
add
adc
imul
insb
out
push
cs
xor
push
push
in
sbb
lea
in
je
iret
stc
nop
inc
mov
pop
mov
mov
jp
xorb
sbb
lcall
shlb
orl
mov
js
push
inc
bound
fs
or
xchg
cmp
daa
ja
loope
add
mov
das
stos
movsb
insb
or
in
lds
sub
stos
fisttps
mov
cmp
sub
aad
push
or
jbe
push
xchg
and
add
popf
std
movsl
xchg
mov
add
test
adc
mov
mov
int
push
mov
mov
test
push
leave
fists
imul
mov
shlb
cmp
pop
push
sbbl
test
clc
je
jmp
xchg
jnp
faddl
stos
cli
push
imul
lcall
mov
pop
inc
mov
add
fcompl
enter
lods
mov
sub
ror
mov
subl
push
mov
scas
aam
pop
popa
movsl
fists
mov
mov
clc
es
xor
add
push
aad
push
sbb
dec
sub
inc
mov
test
or
rorb
cmp
es
dec
push
sub
mov
and
mov
jp
addl
mov
dec
arpl
xchg
shl
cmc
mov
add
in
mov
lds
jg
add
mov
out
xor
es
and
pusha
sub
leave
dec
pusha
add
cmp
or
add
sub
mov
pop
andb
jb
ret
pusha
inc
mov
dec
jne
bound
movsl
sub
add
dec
push
dec
jecxz
outsl
roll
leave
hlt
jnp
rclb
aam
inc
and
mov
push
xchg
mov
mov
and
daa
test
ds
gs
les
call
in
pushf
push
add
shld
add
mov
lods
into
lcall
sbb
lods
and
call
push
mov
jne
cwtl
and
adc
sub
lds
aas
lahf
pop
pop
mov
rcll
push
test
testl
pop
js
add
inc
in
or
jnp
pcmpgtb
in
dec
add
sbb
in
jmp
or
inc
pusha
sarb
enter
dec
add
cmpsb
das
popf
lods
cmp
fiadds
call
popf
mov
enter
xchg
mov
cltd
subb
jle
mov
dec
clc
mov
int
outsb
imul
xchg
pop
add
mov
das
jp
sub
xchg
push
pop
repz
add
cmp
leave
cld
lret
xchg
jmp
in
pop
jmp
std
push
sahf
cwtl
adc
mov
in
sti
call
pop
inc
pusha
add
jmp
mov
sbb
mov
xchg
jp
insb
mov
sub
repnz
data16
int
out
pusha
or
lds
popf
pop
aaa
xchg
mov
mov
andl
repnz
cmp
mov
mov
sti
fnsave
rorb
inc
mov
stos
stos
adc
test
data16
push
cwtl
adc
and
lcall
es
mov
cwtl
aam
movsb
jo
and
jge
data16
stos
add
movl
mov
dec
shlb
xor
xor
in
insb
outsl
nop
mov
pop
jmp
jbe
dec
test
call
and
loope
faddp
mov
aas
loop
shrl
push
out
inc
pop
xchg
movsb
xor
and
sti
jne
inc
cmc
sbbl
bnd
cwtl
pushf
xchg
and
add
enter
scas
sbb
pop
jge
inc
xor
shlb
pop
push
cltd
pop
fsts
dec
pop
xchg
jae
pop
pushf
int
sbb
test
or
xchg
jae
inc
cwtl
imul
mov
inc
bound
je
sbb
xchg
lea
shlb
shll
andb
jo
test
push
dec
inc
inc
xlat
xchg
stos
movsb
push
sub
imul
xchg
sub
jg
popf
mov
and
sub
xor
lods
jl
jbe
shll
hlt
or
pop
mov
lret
ficoms
cltd
andl
mov
and
clc
iret
mov
cmc
pop
xchg
or
xchg
fwait
pop
sar
xchg
adc
jmp
or
add
leave
push
into
mov
dec
lcall
or
repnz
es
repz
pop
xor
gs
lods
xchg
xlat
sar
cmp
lea
int
testb
adc
inc
in
lret
sub
ja
hlt
scas
dec
outsb
clc
daa
fsubrs
lds
mov
mov
push
add
popf
jl
jle
jl
pop
out
movsl
push
cmp
lds
mov
cltd
sub
pop
xchg
push
xor
mov
jge
popf
jmp
imul
fs
pop
xchg
and
mov
and
rcrl
push
and
std
jae
roll
movsb
push
lods
dec
and
sbb
mov
xchg
aaa
cmpsb
fxtract
sbb
adc
push
xchg
shlb
pop
push
loop
nop
sbb
and
lahf
add
mov
jp
cmpsl
bound
shll
adc
pop
popa
orl
jb
inc
aad
out
jmp
fadds
xchg
imul
fists
movsb
or
jecxz
das
push
or
mulb
stos
mov
fnstcw
xchg
dec
and
outsb
cs
cwtl
pop
inc
xor
inc
mov
stos
movl
push
loop
or
daa
adc
mul
cmp
fistl
xchg
lret
pop
pop
jae
test
adc
inc
mov
andb
push
jae
inc
adc
jg
jbe
push
xlat
pop
lret
mov
jp
fs
adc
repnz
mov
mov
mov
pop
adc
xchg
rolb
or
pusha
das
sti
xor
repnz
ret
mov
insl
arpl
add
jecxz
inc
fbld
or
popa
in
fsts
leave
adc
mov
bound
and
adc
xor
andb
dec
push
jle
int3
in
jo
stos
push
cmc
inc
mov
adc
dec
lds
inc
das
pop
mov
out
enter
cmp
push
inc
stc
pusha
fadds
loop
int
mov
xor
add
jo
pusha
ret
xlat
add
mov
pop
pusha
int
pop
fcoml
data16
push
dec
popf
inc
fwait
out
inc
and
mov
jge
fmuls
inc
add
in
xchg
test
add
xchg
out
mov
int
xchg
lods
pop
push
mov
js
and
jnp
lods
in
inc
scas
aas
jns
int3
adc
shlb
xlat
adc
mov
push
xor
lea
aad
inc
mov
xchg
xor
push
push
adc
lahf
stc
ja
rcr
dec
xor
out
dec
popa
inc
pusha
fiadds
jne
test
clc
jo
mov
adc
xor
stos
pop
pop
mov
in
rcll
cld
xchg
jae
scas
mov
stos
clc
out
pop
ret
popa
jnp
dec
xchg
cli
push
or
psubusb
sub
dec
jb
out
pop
and
or
repz
dec
lret
mov
rorb
inc
addb
or
push
aad
hlt
xor
mov
scas
mov
jp
mov
mov
xor
and
jge
or
mov
sub
adc
testl
rcrl
dec
out
std
vpsllq
data16
mov
push
loop
cs
iret
stos
bound
jno
mov
pusha
movsl
icebp
movsb
add
xchg
pop
rorb
sbb
and
cmpsl
push
jb
lret
idivl
lret
hlt
sarl
insl
adc
mov
xchg
popf
adc
outsb
mov
movsl
fstpl
ds
cmpsl
shr
outsl
mov
sub
mov
jmp
xchg
icebp
je
or
sub
enter
ja
lods
push
loop
sbb
and
sbb
out
cmp
movsb
pop
test
nop
test
sbb
mov
pushf
push
push
push
movntps
cli
shlb
lods
jo
or
arpl
dec
push
jecxz
inc
sub
sub
adc
iret
pop
xchg
push
pop
daa
xchg
jge
xor
shrl
jbe
lea
pop
cld
mov
out
test
and
xor
ret
sub
shlb
ljmp
dec
cs
adc
push
ficomps
add
lock
mov
cmp
mov
push
add
mov
jl
stos
loope
xchg
fldenv
cmp
push
roll
cmpsl
jnp
js
pop
pop
and
aam
sbb
add
fs
fcmovbe
jae
inc
add
mov
sub
fistl
cmpsl
fimuls
adc
push
xor
inc
add
mov
cs
adc
popf
add
jp
fsubl
lods
popf
jno
out
sub
cs
mov
sub
jb
movsb
mov
loopne
in
jmp
push
push
xor
testb
daa
pushw
shlb
push
cmpsb
xchg
mov
sub
sub
aam
jnp
addr16
sub
add
aam
sub
or
cmpsb
dec
pop
mov
loope
dec
push
xchg
dec
or
std
fucom
add
cmpb
add
enter
sbb
xor
cld
dec
test
imul
in
inc
aaa
into
dec
pop
pop
fst
mov
dec
scas
jbe
xor
mov
jmp
mov
cmc
adc
sub
push
push
mov
lret
cmp
lcall
in
inc
mov
fs
or
in
or
sub
add
lea
divb
rorb
cmp
jecxz
stc
dec
aam
dec
xchg
mov
fs
stc
xchg
mov
jl
or
xchg
jmp
sbb
add
mov
imul
pop
sti
cli
push
jle
dec
push
test
lahf
mov
loopne
and
add
push
leave
and
adc
sub
jl
cmpsb
out
pop
fdivs
cld
cwtl
or
lods
mov
xor
std
rolb
cwtl
mov
mov
jp
cli
pop
and
enter
xor
pop
aam
data16
or
stos
jo
rolb
lahf
mov
xchg
push
popa
nop
jecxz
and
xor
sbb
dec
sbb
add
iret
adc
mov
pop
adc
mov
in
test
lahf
jno
adcl
iret
jecxz
aaa
adc
adc
ja
xchg
mov
orl
ja
in
dec
lret
sub
lret
or
sub
lods
loope
pop
gs
pop
mov
cmp
cmp
cltd
movsl
scas
add
xor
daa
ljmp
sbb
push
test
insl
push
lret
inc
jae
mov
int
out
pop
mov
push
into
jge
sbb
subb
out
arpl
movsb
add
sbb
sub
xchg
cs
bound
outsl
or
test
add
jle
sub
stos
sbb
inc
pop
lcall
jge
int
inc
insb
adc
fcmovbe
bound
icebp
inc
lahf
arpl
test
jno
sbb
jo
test
bnd
add
add
lds
in
leave
clc
jns
iret
popf
jbe
jp
push
sbb
in
int
cwtl
loopne
sub
mov
and
adc
pop
in
adc
roll
iret
and
and
in
and
pop
in
int
ja
popf
xor
pop
cmpsb
push
insl
scas
shll
adc
scas
add
addr16
imul
mov
adc
nop
mov
fs
mov
fs
mov
lods
aam
loope
test
mov
ss
fnstsw
sbb
lahf
xlat
iret
in
pop
mov
dec
inc
in
cmpsl
push
or
adc
hlt
sbb
int3
cwtl
mov
mov
inc
mov
test
cmp
xchg
jp
mov
mov
inc
mov
lock
test
mov
in
fiaddl
js
les
fmul
xchg
mov
mov
mov
xor
mov
sub
push
add
push
mov
xor
sbb
push
xchg
xor
mov
cmp
cld
movsb
into
aad
shrb
push
sub
push
or
xchg
repz
pop
add
scas
or
pop
cli
mov
mov
fwait
cmp
into
ret
addr16
push
and
les
push
rep
push
mov
push
imul
mov
cltd
sbb
mov
cmp
push
leave
pop
jae
xchg
pop
enter
gs
dec
push
sub
mov
imul
xchg
xchg
sbb
pop
sahf
add
push
push
inc
mov
dec
ret
jg
cltd
sub
xor
pop
mov
in
aaa
mov
sti
arpl
add
jl
push
insl
and
or
sbb
cmp
sbb
hlt
cmpb
push
stc
mov
and
and
mov
mov
movsb
or
sti
or
mov
sti
pop
jno
sbb
inc
icebp
push
and
dec
jl
ret
movsb
push
xchg
fldt
and
pop
lock
lea
push
leave
arpl
pop
into
dec
xchg
and
or
or
test
lret
jne
stc
push
sahf
xlat
or
jmp
mov
cli
ds
lretw
xlat
xor
hlt
mov
mov
cli
or
mov
fidivl
mov
adc
sub
xchg
adc
fiadds
addr16
xor
scas
das
jp
enter
inc
cmp
js
mov
popf
shlb
lret
xchg
pusha
jno
push
ja
mov
push
popa
cmp
scas
in
pop
mov
je
pop
and
cwtl
cmpsl
je
inc
cmp
ret
dec
adc
lods
insl
mov
repnz
cmp
or
sub
or
xor
push
adc
mov
or
add
cltd
cwtl
dec
loope
jmp
bound
mov
mov
or
stos
xchg
mov
lret
dec
lret
es
sub
loope
cld
fwait
mov
cmp
imul
or
cmp
mov
aad
mov
sbb
sarb
mov
mov
int
adc
insb
mov
and
adc
xlat
inc
inc
mov
loopne
dec
stc
mov
cwtl
adcl
out
xor
dec
loopne
mov
fwait
xor
mov
sbb
pop
xchg
mov
ret
adc
cmp
scas
mov
add
jb
mov
sbb
pop
xor
dec
sbb
add
lods
mov
ds
jno
mov
cmp
jecxz
and
pop
cwtl
dec
push
in
pop
stos
sub
aam
jo
sahf
xchg
lret
test
cmpsl
nop
inc
sbb
out
pop
rcrl
push
pop
outsl
or
inc
inc
into
out
out
mov
cmp
xorl
test
popa
sub
pop
cmc
aam
pop
xchg
into
mov
ret
fisubl
mov
call
sbb
fimuls
add
imul
int
push
cmp
cli
arpl
arpl
push
sbb
cmp
push
insb
lcall
jmp
cmpsl
mov
or
addr16
mov
cmpsb
sub
movsb
fs
cmp
enter
mov
inc
xchg
xchg
or
test
adcl
or
rorl
mov
aad
or
gs
push
xlat
mov
dec
xchg
ds
xlat
or
arpl
adcb
fs
fsts
sub
fbstp
xchg
fidivl
gs
cld
imul
aad
mov
adc
cmp
mov
push
or
xchg
bound
add
cltd
scas
add
cmp
call
in
pop
push
call
sub
and
pusha
sarl
mov
push
mov
in
push
lods
mov
mov
popa
movsb
scas
add
and
lret
add
lcall
mov
cmp
icebp
xchg
cmp
mov
das
push
in
test
and
push
jmp
cmp
dec
movsb
and
jle
ret
lahf
adc
xor
push
loopne
fs
adc
jb
loope
mov
sub
push
or
adc
xchg
cmp
push
test
push
jp
add
dec
aad
pop
xchg
loopne
dec
insl
in
add
mov
dec
int
cld
or
fwait
shlb
ficompl
outsl
sub
shl
mov
add
mov
rorl
pop
xlat
push
popa
aas
xor
js
out
fs
xchg
lret
jg
and
adc
fsincos
and
loope
clc
gs
pushf
inc
testl
pusha
leave
sarl
cltd
sti
push
sub
and
popf
inc
mov
movsb
scas
movsl
cltd
sbb
xchg
cwtl
sub
testl
pop
jg
repz
fwait
jp,pt
int
lds
in
dec
lods
dec
pop
jg
movsb
ss
add
and
test
sbb
pop
nopl
das
xchg
mov
test
xlat
imull
xchg
mov
xchg
jg
add
mov
mov
fcoms
fcmovnbe
mov
adc
pop
stc
cmc
add
jge
or
or
push
mov
mov
jno
enter
shl
sbb
mov
neg
inc
add
lret
cmpb
or
lahf
cmp
jecxz
and
clc
dec
and
shlb
cwtl
pop
shll
int
testb
lods
jmp
mov
fmuls
mov
inc
lahf
filds
fxch
adc
inc
fsub
mov
inc
xchg
push
fcoms
jmp
mov
mov
dec
fsts
aad
sub
js
imul
xchg
enter
testb
js
int3
push
push
mov
test
and
subl
mov
out
add
mov
lret
or
pushf
cli
add
sbb
jne
push
push
mov
je
lret
pop
pop
imul
push
addl
clc
ss
vmulsd
cmp
mov
loope,pn
sti
push
pop
jbe
adc
cld
cli
add
push
or
gs
fildll
jns
imulb
lcall
shlb
inc
add
fwait
clc
roll
je
mov
xor
shll
stos
jg
or
xor
and
xor
stc
mov
loope
jne
jg
insl
into
mov
in
mov
bound
cld
addr16
dec
icebp
cmpsb
jb
jns
jno
sub
into
adc
cmp
dec
push
jmp
cmpsb
mov
arpl
dec
mov
cli
ret
daa
dec
test
dec
test
scas
add
mov
xor
xor
mov
sbb
mov
movsb
negl
inc
cmp
push
cmp
imul
jbe
lea
scas
pop
or
rol
outsl
or
sahf
rol
jnp
les
imull
and
or
fidivrs
rol
nop
add
adc
mov
sub
imul
hlt
mov
rolb
add
push
cmp
push
js
add
cmpsb
mov
pop
int
xchg
ficomps
xchg
int
clc
fs
adc
out
shll
fxch
lock
sub
test
mov
int3
xchg
or
stos
sbb
mov
jbe
loope
mov
mov
cmp
popa
jecxz
inc
jne
inc
or
pop
je
pop
mov
jmp
fs
in
imul
leave
cs
rclb
test
pmulhuw
jno
mov
movsb
out
cmp
hlt
cmp
mov
cmpsb
mov
mov
imul
xchg
test
xchg
inc
jne
pushf
jg
rorl
sarl
imul
cmp
dec
gs
adc
sbb
dec
adc
mov
mov
stc
ret
iret
xor
lahf
fists
cmpb
rolb
int3
cmp
test
xchg
incb
push
xlat
mov
movsb
cli
les
jmp
lret
mov
loop
lock
jae
inc
nop
lret
push
mov
mov
sarb
sbb
push
pop
dec
inc
inc
mov
and
jl
sub
sbb
cmp
jno
mov
mov
adc
loope
aad
daa
nop
gs
push
movsl
addr16
out
adc
les
lahf
mov
mov
repnz
xchg
sbb
fwait
cmpb
mov
test
and
out
cmpsl
lret
nopl
lods
add
jmp
call
mov
jmp
outsb
test
push
mov
data16
mov
mov
iret
out
repz
lret
rorl
aam
fadds
ja
scas
jecxz
pop
dec
and
faddl
enter
test
xor
jecxz
push
jmp
mov
lea
or
in
shll
cltd
loope
mov
and
mov
fistps
rcrb
outsb
xor
hlt
fs
push
sbbl
ds
loopne
jne
jb
lock
sub
addr16
pop
jnp
repnz
fimuls
adc
cld
cmpsl
lods
mov
mov
lods
leave
xchg
test
flds
in
inc
shl
jp
pop
sbbl
test
popa
xchg
and
cmc
stos
jns
xchg
repnz
imull
sub
aas
cmp
jl
cmp
das
mov
jns
mov
fldt
gs
mov
xchg
in
jmp
ret
mulb
and
int
in
shlb
or
mov
idivb
loopne
nop
mov
xor
sti
in
aas
xchg
adc
sub
jnp
sbb
mov
aam
cvttps2pi
mov
mov
in
xor
movsb
aam
in
mov
add
add
out
jbe
cld
mov
scas
push
pop
cmp
mov
ret
adc
add
jne
sbb
adc
push
or
out
insb
sub
imul
repnz
pop
les
inc
add
clc
in
popa
sub
xor
push
cmp
sahf
inc
leave
push
push
insl
or
jge
jbe
push
push
pop
mov
fcoml
notb
mov
negl
call
pop
xor
in
cmpsb
xor
xlat
fs
pushf
idiv
jb
out
pop
mov
dec
or
cmp
subl
les
adc
inc
rcl
dec
xchg
xchg
ret
inc
outsb
icebp
ljmp
in
or
sub
loope
pop
mov
lahf
retw
xor
add
push
mov
pop
repnz
and
mov
pop
stos
ja
push
addr16
sub
adc
scas
clc
ss
ret
popf
fwait
mov
mov
fimuls
fs
jmp
mov
dec
imul
xchg
add
dec
call
jns
mov
xor
dec
cmpsl
adc
jne
mov
jle
pusha
jle
insl
xor
add
aaa
or
dec
das
ret
mov
cli
pop
mov
iret
and
imul
push
or
xlat
xor
data16
pop
ds
xor
sbb
shrl
mov
dec
mov
lock
xchg
cmc
add
or
mov
stos
inc
jne
pop
call
jge
stos
and
xor
sub
bound
fdivs
sbb
pop
mov
xchg
sub
ret
das
add
call
jnp
pusha
push
sub
and
sahf
iret
das
add
loopne
lds
dec
mov
xchg
and
xchg
xor
sub
scas
loop
lea
push
sbb
movb
cli
push
mov
adc
jae
mov
mov
mov
inc
mov
fs
fsubrp
fdivrl
add
or
adc
out
mov
or
mov
clc
int3
fisubl
jle
xchg
and
xor
sbb
pop
push
arpl
push
jecxz
test
aas
adc
ss
cmp
push
test
jns
movsl
mov
cmp
mov
jo
es
lret
sbbb
mov
mov
test
cmp
int
test
sub
aaa
negl
cs
mov
jecxz
movsl
adc
mov
test
in
mov
push
loope
dec
xor
loop
fiadds
into
pop
push
jns
cmp
sbb
pop
pop
and
jb
fistpll
addr16
mov
enter
mov
pusha
xchg
mov
scas
and
test
popa
mov
sbb
pop
inc
les
xor
lret
push
rcl
leave
push
aam
test
dec
add
xor
in
sub
inc
in
loope
xor
dec
inc
gs
jo
push
and
fcoml
je
sti
fldt
pushf
xchg
loopne
in
fcmovnu
dec
adc
aaa
jl
and
aad
pop
ret
daa
scas
mov
imul
or
xor
aam
gs
lcall
jge
hlt
xchg
cmp
ret
dec
fdiv
rcrl
into
insl
inc
cmp
movsl
pop
out
jge
sbb
into
mov
daa
movsl
pop
cmpsb
ja
sbb
test
and
rorb
sbb
push
imul
push
adc
pop
push
imul
inc
imul
imul
imul
adc
jnp
out
or
adc
mov
jb
sbb
or
sub
mov
or
arpl
sub
fistps
mov
or
lods
popa
rclb
popa
adc
jecxz
mov
loopne
fwait
xor
cld
js
icebp
jg
pop
cmpsb
stos
std
insb
cwtl
inc
out
fisubl
movsb
dec
icebp
stos
out
pop
test
mov
cmp
or
jo
pop
xlat
add
and
and
inc
pushf
add
adc
fwait
add
xchg
mov
mov
xchg
out
in
push
adc
sbb
lahf
xor
jb
and
in
das
mov
push
jg
mov
jo
gs
imull
testb
fldcw
es
shlb
imul
pop
xor
adc
nop
adcb
jo
int
repz
aam
mov
inc
mov
out
fldt
shlw
pop
jne
or
mov
sub
inc
lcall
fists
sbb
and
and
arpl
or
lahf
push
sbb
sub
push
and
adc
inc
out
mov
les
adcb
dec
sub
xor
cwtl
xor
lea
and
pop
sbb
add
xorl
and
pop
push
test
out
mov
sahf
mov
xchg
xchg
xchg
scas
adcl
nop
das
add
add
fcmovnb
pop
movsb
movsb
mov
out
lahf
mov
mov
shl
lret
sbb
or
dec
xchg
in
fwait
je
testl
and
push
into
jl
sbb
xlat
lods
pusha
xchg
stos
int
les
lahf
pop
aad
test
dec
imul
daa
push
repnz
pop
add
pushf
dec
repnz
push
out
xchg
pop
fcomps
mov
cmp
bound
repnz
setne
sbb
lret
push
sub
outsl
xlat
pop
sbb
pop
sbb
push
lahf
repnz
icebp
int
add
add
adc
lret
aad
cmp
pop
lret
or
clc
es
cmc
das
xchg
sbb
fcomip
mov
jns
mov
test
ss
xchg
or
mov
jl
js
mov
sarb
adc
in
cmc
jg
cli
add
test
cmpb
fistpl
fcoms
mov
adc
push
hlt
push
outsl
iret
sub
out
out
mov
sbb
hlt
es
ss
adc
xlat
jmp
xor
test
cmpsl
xchg
out
mov
aas
cmp
jp
je
fidivs
xor
les
dec
loope
adc
pop
cmc
cmp
inc
rcrb
imul
pop
pop
xchg
ds
xchg
lods
xchg
jp
cmp
dec
jne
cli
jl
push
call
imul
aad
sbb
push
add
mov
jmp
cmpsb
dec
and
pop
xchg
xor
fs
fldenv
xchg
je
push
inc
rcll
inc
fwait
push
fadds
test
ljmp
movsb
mov
xor
fsubp
inc
fsubrs
mov
sub
dec
mov
push
dec
or
jmp
mov
jb
aad
andl
cmp
repnz
cmp
xchg
dec
push
imul
cmpsl
movsb
or
adc
push
adc
rclb
enter
sbbl
pop
xlat
mov
mov
in
xor
mov
lcall
arpl
xchg
aam
ret
leave
inc
cwtl
imul
mov
shr
lret
dec
jecxz
push
ret
sbb
mov
dec
cmpsl
js
notb
jbe
mov
jbe
add
je
lcall
and
out
add
mov
jne
mov
push
sahf
test
addb
enter
xchg
xor
inc
mov
daa
sub
and
out
lds
fwait
adc
and
and
cmpsl
inc
js
in
in
das
sbb
push
int
jbe
push
jge
insl
out
lods
push
movsl
mov
mov
out
nop
packsswb
cwtl
das
mov
jge
in
xchg
jbe
pop
sub
inc
lea
mov
daa
stc
stc
jne
and
push
repnz
push
out
sbb
aad
insl
hlt
repz
loop
shll
fildl
mov
mov
lods
pushf
sbb
and
insl
sarl
mov
or
adc
mov
rorb
fcoms
popa
add
in
xor
cmp
rcrl
iret
jmp
inc
repnz
pushf
jge
enter
push
mov
push
jmp
es
jle
lret
inc
clc
scas
pop
cmp
mov
popa
cmp
and
or
test
adc
inc
inc
imul
xchg
add
xchg
repz
inc
jno
fs
dec
mov
and
in
sub
lret
scas
popa
addl
adc
add
pop
lret
mov
ss
xor
xchg
push
movsb
cmp
ret
and
dec
inc
xabort
rcrb
ja
popw
jp
lahf
fcompl
xlat
pop
inc
inc
daa
repnz
mov
cmp
and
fdivl
sub
divl
push
push
xor
ds
push
sti
ljmp
cld
jo
lea
cltd
lret
jo
xor
cmp
pop
mov
push
fwait
inc
xorl
sub
pop
lock
inc
aam
inc
test
cmp
mov
cmpl
or
shr
mov
aad
nop
jecxz
push
mov
push
scas
jmp
mov
enter
add
or
das
mov
call
push
cmc
cmp
ret
add
cmpsl
or
stos
mov
fildl
jmp
push
push
cmc
add
cmp
rol
pushl
frstor
or
dec
jne
dec
scas
rcrb
or
sbbb
lahf
movsl
iret
push
push
data16
xchg
xchg
test
adc
scas
cmp
and
mov
repz
sbb
aam
sbb
and
insl
sbb
or
xor
loopne
dec
das
popf
pop
jmp
sahf
push
sub
dec
icebp
mov
orb
addr16
cmp
loopne
popf
and
les
ja
std
and
sub
fs
inc
jmp
and
fwait
cmpsl
cwtl
outsb
insl
push
int
popa
jbe
std
mov
fsub
dec
and
int
mov
ret
imul
fcom
fnstcw
xor
xlat
inc
test
mov
imul
adc
lods
xchg
lds
cmc
add
movsb
jbe
xchg
rorb
fnstcw
and
test
sub
inc
js
inc
cwtl
adc
insb
gs
out
ficoml
push
push
imul
push
cmp
data16
in
mov
imul
xchg
std
cmp
popa
arpl
jb
push
sub
lea
cltd
imul
lods
pop
mov
maskmovq
testl
cltd
mov
jb
repnz
cmpl
nop
push
sbb
bound
std
jno
xor
scas
sarb
xchg
rcl
push
cmp
clc
push
mov
fsubs
jp
jno
movsl
adc
stos
add
mov
add
dec
popa
outsb
mov
mov
test
repz
pop
inc
mov
lret
jns
hlt
push
imul
mov
cmp
cmpsl
cmpsl
outsl
ss
cmp
xchg
icebp
mov
arpl
mov
xor
nop
inc
add
ss
push
jecxz
pop
stos
daa
gs
aam
loop
sub
sti
push
test
jg
pushf
and
mov
adc
incl
loopne
jae
hlt
inc
cmp
jmp
sbb
push
int
daa
jnp
dec
pushf
sbb
xchg
xor
ds
adc
adc
in
sbb
es
sub
xchg
sub
pop
adc
xor
daa
popa
cmpsb
inc
inc
xor
cmp
cmc
fs
stc
imul
addr16
outsl
fdivr
add
sbb
int3
test
pusha
jmp
pop
jo
inc
pop
mov
dec
imul
adc
shrb
mov
das
lret
xchg
lods
pop
pop
clc
xor
ds
fldcw
lds
xchg
js
sbb
jns
mov
mov
add
push
mov
pop
push
and
dec
roll
inc
pop
xchg
loope
stc
add
dec
ret
pop
loop
xchg
out
daa
pop
pop
push
imul
and
inc
mov
push
adc
nop
cmp
movsl
repz
or
in
pop
add
dec
or
pop
push
adc
push
xchg
shl
cmpsb
push
clc
xlat
push
cmpsl
rclb
jg
add
notb
leave
rcrl
scas
xor
cmovbe
das
adc
in
sahf
jnp
call
and
jno
imul
xor
xchg
add
stos
and
fstps
out
jno
in
lods
clc
test
xlat
lahf
push
or
adc
sub
aam
mov
dec
ja
leave
mov
jecxz
pusha
push
push
loope
add
push
mov
xchg
mov
inc
xchg
dec
shll
out
rol
and
adc
push
ret
insb
inc
cmp
xchg
jb
insb
sub
loop
inc
roll
add
add
jle
mov
mov
push
addr16
xlat
sarb
pop
inc
je
lcall
popa
fisubrl
movsb
mov
xor
imul
sbb
sbb
jne
divb
cli
nop
nop
hlt
sub
adc
bound
daa
mov
add
stos
lea
mov
out
das
lret
cltd
sbb
insl
sub
pushf
push
cmpsb
lds
arpl
cmc
xchg
xchg
jecxz
leave
cmpsb
xchg
outsb
popa
pop
out
test
mov
imul
popf
jg
jns
insb
mov
decl
xchg
js
test
or
std
dec
add
fcmovnu
adc
or
cmp
inc
inc
jecxz
pop
xor
push
mov
cltd
mov
fs
dec
mov
xchg
fs
add
sbb
and
pop
dec
mov
push
fdivl
ror
sbbb
imul
jno
fisubrl
xor
out
popf
in
mov
lea
mov
jae
or
sub
scas
addb
mov
nop
cli
movsb
add
into
jmp
xchg
jo
and
add
adc
inc
in
es
fidivrl
push
insl
mov
pop
and
int
mov
cwtl
cmc
ss
mov
push
mov
je
push
dec
mov
pushf
jp
fwait
lea
mov
jp
out
jnp,pn
sub
mov
pop
outsl
shl
iret
sbb
jge
cmp
or
pop
popa
push
fistpl
adc
jecxz
sub
ss
je
sbb
sbb
mov
jmp
fcompl
xlat
aas
pop
out
rcr
int3
stc
imul
mov
sbb
pusha
xchg
dec
mov
loop
test
std
scas
mov
and
jp
outsb
mov
das
test
sbb
adc
fidivrs
adc
lea
out
nop
call
clc
adc
adc
push
lea
fldt
shlb
adc
mov
and
lods
or
rcl
push
sbb
jl
xchg
insb
int
mov
push
imul
xor
lret
imul
test
movsl
push
ljmp
aad
shrl
movsl
fwait
je
mov
ljmp
cmp
push
pop
push
insl
sbb
jge
xor
test
push
test
iret
fisttpll
xor
outsl
aad
mov
scas
sbb
sti
push
dec
ja
push
jnp
inc
adc
mov
mov
je
or
leave
inc
or
pop
xor
inc
les
push
out
jo
popa
psrlw
loopne
fsubs
pusha
adc
and
inc
dec
push
scas
lcall
mull
sbb
xlat
pop
dec
fdivs
sbb
stc
and
mov
pop
push
xor
fcomps
or
movntq
int
sbb
lahf
hlt
les
nop
shl
testl
add
int
les
dec
mov
cwtl
dec
mov
sti
adc
push
imul
repz
xchg
aas
sarb
fwait
loopne
enter
pop
cmp
or
fxch
inc
out
popa
jae
push
push
mov
xor
ss
push
ficompl
std
add
orb
lahf
mov
jl
jge
aas
xor
mov
test
mov
ljmp
pop
rcrb
mov
fadds
or
sbb
insb
xchg
std
xor
xchg
xor
shrl
movsb
frstor
inc
pop
arpl
push
jns
jl
mov
xor
aam
pushl
inc
arpl
pusha
lds
fisubs
cmp
repz
sbb
sti
sarb
loop
cmp
jnp
ret
mov
sbb
and
daa
cli
mov
dec
stos
push
sub
repz
movsb
roll
sbb
imul
dec
mov
lea
sarl
in
imul
sub
pop
mov
arpl
or
rorl
inc
cmpb
pop
mov
mov
test
test
jno
push
cmp
ja
je
and
and
in
fmuls
add
fisttpll
ret
fsubl
lods
cmc
pop
xchg
inc
mov
inc
cmp
mov
mov
lcall
movsl
out
xchg
mov
mov
mov
cmpsl
lods
adc
out
jne
mov
cmp
fdivs
mov
negb
arpl
dec
and
stc
repnz
sbb
add
jae
xchg
xor
pop
jbe
jl
sub
inc
cmp
sbb
mov
mov
or
cmp
in
jb
xorl
lds
aas
ss
sub
xorps
sbb
cmp
mov
outsl
adc
sbb
jne
fidivrs
cmpl
adc
xchg
lahf
xchg
fnstenv
sbb
inc
cmp
xor
call
decl
jecxz
add
and
mov
fwait
and
stos
loopne
xor
push
addb
loop
xchg
stc
sbb
lcall
lret
adc
jns
jp
andb
or
js
filds
stos
and
cmc
dec
mov
inc
push
test
pop
sbb
aas
rolb
cs
and
insb
mov
repz
call
dec
mov
mov
jne
stos
inc
push
es
enter
add
clc
xchg
test
pop
mov
mov
repnz
pop
pop
fisubrl
fisttpll
int3
xchg
in
out
shll
mov
dec
int3
das
lock
xchg
or
mov
mov
ja
out
cmp
sbb
xor
lds
mov
push
jge
sub
adc
jnp
movsl
adc
xchg
out
call
mov
lret
push
int3
test
mov
inc
dec
push
jae
lods
adc
jmp
push
inc
outsl
push
cmp
iret
cld
pop
push
push
adc
out
andl
cmp
test
pop
jmp
inc
das
xor
push
out
call
cltd
mov
push
in
fnstsw
adc
cli
push
js
outsl
mov
mov
xchg
and
imul
push
int3
std
out
mov
and
repnz
sub
ret
sbb
mov
mov
xor
pop
test
mov
rclb
aad
roll
dec
sub
inc
pop
test
and
js
sub
xor
lcall
push
pop
sbb
dec
xlat
sbb
add
jp
push
shr
jns
xchg
sub
inc
test
xchg
test
mov
pop
rcr
and
add
push
sub
popa
or
leave
lods
mov
pop
daa
lcall
add
inc
push
cmp
arpl
mov
imul
mov
sar
data16
mov
fcomp
jecxz
leave
jb
mov
jg
mov
punpckhbw
out
or
push
negl
dec
dec
repnz
cmp
shrb
push
add
push
out
cmpsl
xchg
orb
push
cmp
lds
pop
fdivrl
mov
mov
outsl
sahf
sbb
dec
sub
jb
fiaddl
ss
xchg
sbb
lods
or
aad
pop
mov
cmp
mov
dec
pop
mov
lahf
adc
or
hlt
lcall
adc
push
and
out
jb
movsb
mov
sbb
dec
push
test
js
xchg
jle
jl
sub
xchg
repnz
jae
mov
xor
and
rcr
push
jbe
push
dec
fs
mov
fcoml
push
aas
xchg
shr
daa
jno
fdivrs
push
dec
scas
push
sbb
inc
loop
movsb
sbb
add
jge
pop
lahf
pop
add
aad
pop
fnstsw
add
inc
fcmovnbe
fimuls
inc
loope
movb
jae
lock
xchg
out
and
xchg
shll
sbb
orl
pushf
ds
mov
fcomip
test
sbb
lods
add
rcr
sahf
xchg
or
shl
jmp
inc
push
test
leave
popa
test
jmp
clc
add
jg
rcrl
inc
movsb
pusha
inc
enter
int
mov
dec
loop
push
xlat
jns
mov
in
mov
push
ja
insb
rcrb
mov
femms
popa
out
out
dec
adc
push
add
cmc
out
xchg
outsl
mov
dec
repz
fs
cmpsb
stos
int
loop
scas
je
dec
pushf
arpl
test
push
scas
and
push
mov
xchg
push
or
enter
jne
mov
cmp
adc
ja
push
fst
ds
sbb
or
push
fidivrl
dec
inc
shlb
push
pop
fldenv
fstl
inc
outsl
push
pop
lea
push
out
addr16
daa
and
and
aad
cmc
jno
cmp
cltd
movsl
ss
add
ss
xor
or
sub
pop
jnp
pop
test
daa
xor
rcrl
mov
bound
stc
int
inc
es
fldt
stc
cltd
aam
ret
aad
xlat
pop
loopne
push
mov
sbb
addb
stos
jnp
pushf
jnp
mov
aam
mov
xor
movsb
jmp
add
mov
push
inc
mov
lahf
push
sbb
lret
arpl
testl
or
mov
add
mov
into
mov
adc
or
push
pop
and
loopne
outsl
push
ret
fnsave
xchg
pop
mov
into
push
out
push
and
sub
mov
aad
jp
in
fsubrs
and
pop
push
mov
icebp
xchg
xchg
push
movsb
pop
sub
cmp
loop
mov
push
es
out
cs
pushf
fcmove
aas
movsl
mov
inc
adc
add
fbld
std
mov
jl
ret
xor
sbb
call
xchg
aam
orb
pop
jbe
fidivrs
and
xchg
xlat
pop
jecxz
jl
rcl
stc
mov
inc
stc
xchg
mov
xor
push
or
mov
test
cmc
xor
rorb
sbb
jo
jo
out
jmp
cmc
pushf
push
add
or
shrb
jbe
cld
in
mov
stos
mov
mov
mov
repnz
pop
mov
imulb
sub
push
fidivrl
xchg
lcall
xor
out
inc
movsl
sub
xchg
mov
mov
cmc
mov
aad
es
sbb
test
aaa
inc
dec
arpl
inc
add
cmp
add
icebp
stos
fwait
jl
inc
leave
sub
fsubrp
lds
or
or
jnp
pop
pop
addb
in
movsb
push
clc
out
inc
imul
in
rcll
je
test
inc
push
or
add
popa
xor
sub
pop
notb
enter
inc
xchg
insb
sub
jge
in
in
push
je
pop
inc
roll
adc
les
push
fsubrl
imul
loope
mov
rorl
jnp
out
mov
mov
popf
pop
jno
cli
inc
nop
aaa
sub
mov
out
outsb
aad
add
jle
rcrb
mov
add
aad
les
mov
and
in
push
rorl
sarl
cmp
mov
je
scas
adc
xchg
mov
dec
add
in
das
insb
dec
xchg
arpl
fucompp
mov
and
lfs
jae,pn
xchg
das
fs
and
lret
test
inc
add
mov
fcmovb
sahf
fwait
mov
sub
jno
dec
dec
adc
sub
cwtl
jmp
icebp
add
push
xchg
es
push
popa
fcmovbe
xor
dec
icebp
dec
repz
jnp
pop
out
ljmp
lret
stc
out
sub
xor
sub
imul
fnstcw
push
hlt
inc
cwtl
push
jno
addb
mov
arpl
fidivrs
shl
ljmp
mov
scas
cmpsb
and
dec
idivl
pushf
or
shrl
mov
pop
mov
scas
or
iret
jp
sbb
mov
lock
pop
sarb
outsl
jl
jbe
in
sti
jo
inc
mov
mov
shrl
inc
popa
mov
lods
sbb
mov
ja
adc
sarb
loope
xchg
adc
repz
lods
dec
or
nop
insb
fisttpll
popa
cmp
xchg
sub
rcrb
das
or
lret
or
pop
cmp
fsubl
cld
stc
jecxz
loope
imul
cmp
jmp
je
pop
mov
sub
leave
xchg
or
imul
jae,pn
leave
sbb
inc
ror
add
adc
or
iret
mov
cli
out
adc
je
out
je
push
inc
rorl
and
es
sbb
out
adc
adc
test
xchg
dec
push
push
adc
div
mov
or
pop
mov
dec
cmp
leave
rcr
fcomip
loop
fsubl
jne
scas
sbb
mov
or
pop
stos
sub
adc
mov
ljmp
inc
fwait
pop
enter
adc
sub
test
jle
xacquire
add
or
push
xorl
push
push
in
or
subl
mov
addr16
dec
mov
inc
hlt
popf
call
adc
and
out
sahf
ret
aas
sub
filds
fcompl
repnz
pusha
sub
loope
lock
ud2
in
jp
adc
jp
or
es
aam
sar
cmpsl
jne
pusha
cltd
ss
sub
or
repnz
mov
or
fisubrl
inc
ds
xor
push
hlt
and
lea
sbb
dec
pop
ss
ds
dec
jle
xchg
js
rol
cmpsb
daa
fistl
mov
ret
insb
nop
loopne
ret
mov
test
pop
xchg
filds
leave
data16
push
and
int
cld
xchg
push
lea
clc
sbb
sub
jecxz
daa
mov
gs
daa
pop
lock
icebp
lds
lea
jmp
pop
sbb
inc
cmpl
sar
frstor
add
xchg
cltd
adc
or
jmp
movsl
adcb
popf
jecxz
inc
adc
fistpl
xchg
ljmp
fs
inc
sbb
push
call
push
pop
shrl
arpl
out
xor
xchg
dec
and
mov
jbe,pt
mov
jns
fsubs
dec
aad
std
std
lods
fcmove
jge
fsts
mov
mov
push
pop
scas
js
sbb
sahf
sub
push
pop
adc
out
or
xor
ss
sbb
sub
dec
push
out
lcall
mov
adc
mov
dec
and
and
out
pop
add
arpl
pop
in
stc
arpl
mov
add
push
clc
rcrb
fimuls
jno
push
sbb
lea
xor
cltd
mov
pop
out
stc
xorl
sbb
popa
jo
push
aas
aad
ds
sbb
push
repz
or
mov
add
inc
rcrb
push
adc
cwtl
lds
push
cmp
jl
aas
lea
loop
out
loop
nop
adc
and
fdivrs
mov
inc
mov
cmp
inc
pop
cs
xchg
popa
inc
out
out
outsl
cmp
lret
push
jmp
mov
cmpsl
lret
xor
arpl
repnz
ljmp
ja
inc
sub
push
push
in
mov
jnp
mov
filds
std
and
stos
sbb
xchg
out
jge
cmpsl
in
cmp
xchg
lds
or
ljmp
mov
xchg
dec
mov
das
mov
insb
mov
iret
testl
stos
movsb
into
xor
cmpsb
sbb
int3
mov
rcr
clc
out
imul
test
movsb
inc
je
xor
ficoms
and
int3
lods
movsb
inc
clc
xchg
psubb
cmp
mov
push
lods
cmp
insb
bound
aad
fstl
push
lret
fisubs
scas
sbb
mov
jae
pshufw
cmp
std
xchg
testl
pop
mov
aas
rcll
or
xchg
cmp
sbb
jb
sub
pop
ret
pop
and
jg
sbbb
lahf
sti
stos
lcall
mov
test
stc
daa
ret
pop
imul
mov
sub
mov
mov
aam
inc
insb
or
fwait
rol
daa
pop
lods
jno
mov
sub
mov
lcall
shr
or
pop
xor
cli
bound
icebp
lahf
stos
or
insb
les
lret
xor
push
push
popf
scas
test
ja
ja
cld
fwait
sahf
shrl
mov
push
add
shrb
cmp
cmp
aam
in
sbb
mov
out
fidivrl
hlt
test
push
insb
xor
fs
test
pop
mov
push
lcall
xor
adcl
add
mov
jno
movsl
out
mov
sub
sbb
int
push
sbb
mov
sar
xchg
in
rcll
je
dec
jns
or
and
cmp
lods
add
xchg
pop
dec
imul
xchg
dec
or
in
xchg
loope
cmp
adc
jp
mov
mov
lret
test
stos
xor
xchg
jnp
pop
push
ljmp
scas
dec
and
dec
jne
fstps
xchg
rcrb
cmpb
into
cmpsl
jg
xlat
inc
inc
cmc
cmp
or
or
stos
add
mov
adc
jg
pop
pusha
cmpsb
xor
xchg
sbb
xor
xor
sub
hlt
xor
lret
ds
adc
add
sub
mov
jl
mov
or
sbb
mov
sub
mov
xor
test
mov
dec
jno
ja
cmpsl
dec
xor
xchg
rcrl
push
lock
mov
jns
jge
imul
pop
mov
mov
pop
test
pop
mov
mov
xchg
lcall
inc
je
add
addb
inc
adc
xchg
inc
pop
mov
rolb
negl
dec
add
inc
inc
inc
divl
mov
fsubrs
push
loop
xor
out
xchg
pop
or
pop
or
mov
rol
cmp
outsb
or
sub
mov
xchg
sub
pop
pop
lds
sub
cmp
ljmp
cltd
push
add
inc
jns
mov
ja
les
enter
in
insb
loope
sahf
push
cmpsb
dec
mov
out
mov
mov
adc
or
cmpsb
sbb
js
mov
roll
lods
push
mov
and
cmpsb
cmp
push
out
imul
mov
leave
cli
pop
outsb
pop
into
xchg
out
push
es
gs
or
dec
cs
mov
std
loopne
or
xlat
hlt
and
js
jge
pusha
lods
rcrb
mov
xchg
hlt
ja
add
into
mov
push
add
jmp
or
addr16
sbb
shl
mov
mov
cltd
iret
pop
jecxz
sarl
sbb
jo
shrl
pop
push
fistps
xchg
xor
scas
dec
adc
pop
sub
xchg
int3
jecxz
push
in
lock
je
js
lret
or
lahf
addb
call
xchg
in
nop
adc
pop
subl
in
cli
jmp
cltd
mov
roll
scas
mov
dec
mov
mov
lods
gs
cmp
fstpl
and
jbe
ljmp
pmovmskb
popa
dec
rol
fldcw
movsl
cmp
inc
cmpl
sahf
inc
aad
dec
xchg
mov
inc
mov
cld
loop
insl
rolb
mov
fldenv
or
leave
ss
and
inc
loope
stos
stc
das
sub
sub
sbbb
push
es
add
adc
rcl
cld
lds
ljmp
xchg
es
lahf
add
or
lods
cmp
ljmp
mov
stc
mov
cmpsb
push
jae
mov
sub
rorl
mov
cmp
loope
inc
push
loope
cmc
sbb
cld
insb
cli
push
xor
fistpll
sub
cmpsb
insl
ss
in
xchg
cmc
xchg
push
int
inc
mov
mov
xchg
outsb
movl
push
jbe
mov
cld
xor
adc
cmc
push
mov
je
popa
lods
push
sarb
inc
notl
xor
mov
fnstcw
and
sub
push
lcall
mov
mov
in
mov
cmp
inc
iret
cmp
in
mov
imul
adc
push
sub
push
in
jle
push
xchg
fstpl
sbb
mov
or
stos
or
lret
imul
dec
jnp
add
pusha
pop
in
jne
sub
test
mov
xchg
jo
stos
scas
mov
andl
jae
loop
xor
add
lret
dec
in
in
xchg
jge
jae
imul
loopne
aas
xchg
hlt
stc
mov
dec
sub
mov
out
dec
and
jnp
add
pop
leave
rcl
sub
mov
jnp
cmp
cmp
sub
inc
sub
xor
inc
mov
push
out
xor
lcall
xchg
mov
lahf
xchg
gs
fs
repz
lret
insb
add
movsl
and
in
add
xchg
xlat
xor
jno
iret
sbb
add
scas
or
mov
push
xchg
adc
shl
stos
test
xor
mov
fcoml
pop
mov
pop
sbb
or
movl
jo
jb
xchg
adc
ret
cmp
out
mov
insl
test
sar
inc
in
xor
inc
lods
and
jno
xchg
xor
cmp
push
xor
and
enter
sbb
dec
out
pop
mov
stos
insb
lahf
pop
add
pushf
lds
push
pusha
mov
and
loope
aam
mov
sbb
push
call
jecxz
mov
sbb
mov
mov
xchg
pop
pop
dec
push
lea
loopne
push
adc
cmpsl
int
xor
sub
jge
xor
fcoms
dec
sub
xlat
das
jmp
mov
daa
ss
xor
cmp
sbb
mov
and
mov
adc
add
jp
popf
jp
mov
sub
faddp
mov
ss
lds
pusha
lods
lret
lcall
mov
movsl
sahf
sahf
or
pushf
in
xchg
shrl
and
mov
add
pop
xchg
mov
mov
push
in
jb
inc
leave
xor
mulb
sbb
rcrb
shll
jbe
mov
popa
cmpb
lret
mov
push
inc
into
xchg
mov
cltd
jae
dec
xor
and
aaa
cld
or
pusha
and
nop
nop
xchg
nop
jmp
into
rcr
inc
xchg
in
in
mov
push
sahf
and
pop
scas
iret
mov
lods
repnz
mov
mov
repz
lsl
aaa
push
popa
push
iretw
mov
jmp
dec
xchg
cmp
mov
in
mov
cmp
aam
add
stos
xchg
into
out
aas
jmp
iret
add
aaa
or
fsubl
popa
mov
xor
or
mov
leave
fsubl
add
inc
xchg
popa
lahf
mov
sub
pmaxsw
pop
mov
mov
mov
mov
adc
lock
shrb
cs
addr16
sub
and
xor
inc
jae
lods
sbb
cmpsb
lcall
dec
orl
sbb
push
add
mov
push
mov
or
enter
mov
hlt
add
mov
ret
mov
loopne
jg
or
jns
scas
cmp
mov
push
imul
imul
data16
sub
adc
dec
psubusw
add
jno
negl
lock
das
sbb
testl
xchg
sub
adc
daa
xor
jp
popf
mov
cmp
or
mov
jmp
je
inc
adc
and
mov
sbb
lahf
or
jb
pop
dec
cmpsb
and
fs
xchg
pop
arpl
sub
or
int3
xchg
popf
jmp
insl
adc
insb
mov
dec
cli
adc
bound
and
aad
dec
jne
push
mov
xchg
ds
sbb
dec
and
out
inc
xchg
and
or
testb
cmpsl
mov
inc
movsl
je
xchg
sub
lea
inc
lods
sti
mov
pop
cmp
push
sub
jae
dec
sbb
inc
testb
push
repnz
repz
or
xchg
push
add
and
es
cld
cld
mov
andb
into
fs
pop
sahf
jb
push
mov
add
mov
out
xor
leave
cltd
ds
add
mov
dec
dec
leave
in
ds
bound
mov
jecxz
rcrl
shlb
jg
pop
and
mov
sbb
dec
lods
pop
test
mov
loop
fbstp
sub
xchg
les
imul
mov
stc
int3
xchg
lock
inc
xlat
pop
scas
fwait
shr
dec
sbb
adc
in
cmp
mov
pusha
sbb
xlat
subl
out
rclb
xor
in
pop
daa
xor
test
pushf
dec
sbb
jle
fwait
lahf
fstpl
negl
pop
xchg
mov
add
scas
xchg
out
int3
insl
je
push
adc
mov
or
jb
fwait
int
jp
cmpsb
mov
and
dec
adc
xchg
push
adc
mov
je
and
in
cmpl
pop
ss
imul
add
push
orl
or
rorl
pop
jb
lea
sar
xor
cmp
ljmp
adc
rcl
xchg
in
mov
pop
fbstp
pop
lods
dec
outsl
aad
push
cmp
das
shll
das
dec
insl
xor
shlb
xchg
leave
xchg
enter
fistpl
push
dec
cltd
pop
or
xor
adc
repz
sbb
jnp
out
ss
sub
sbb
scas
setb
fs
pop
jns
sub
adc
andps
jo
popa
lock
push
xor
jno
dec
pop
mov
sbb
inc
imul
into
lods
adc
jb
fwait
push
dec
aad
sbb
cmpsl
and
bnd
into
sub
jp
xchg
out
push
fbld
call
sbb
inc
lahf
push
loop
jnp
aam
mov
jne
add
ret
stos
mov
scas
loopne
es
cmpsb
pop
inc
je
nop
xchg
stos
out
cmp
mov
jl
out
xorl
mov
and
lds
jp
sbb
arpl
shl
ds
stos
xlat
es
pushf
imul
fs
movswl
aam
in
and
dec
movsl
out
sbb
mov
and
int
pop
push
xchg
pop
call
xlat
call
hlt
subl
xor
lock
sub
outsb
loop
jl
jns
rcl
jbe
repnz
into
xchg
mov
mov
mov
add
inc
ficoms
xchg
rcr
xchg
inc
rcl
stc
mov
cmp
enter
and
lods
inc
xor
out
int
xchg
push
xchg
dec
inc
fwait
add
std
pop
push
leave
xchg
testb
push
jo
pushf
lcall
movl
adc
mov
test
xchg
bound
test
add
addr16
jmp
push
dec
xor
out
mov
dec
push
stos
aam
sbb
or
loope
sub
mov
mov
rcll
mov
loop
jl
movsl
mov
mov
xor
sub
movsl
dec
enter
mov
jno
mov
push
dec
jno
sti
insl
rcrl
or
out
or
dec
aam
iret
xor
mov
lds
stos
mov
movsl
xchg
cmpsl
fisttpl
in
lahf
movsb
jecxz
or
jne
int
xchg
and
jnp
enter
leave
add
dec
inc
inc
int
je
jne
xchg
push
mov
dec
in
test
mov
in
dec
aad
adcl
int
xchg
mul
pop
fidivrl
sub
mov
ficoml
xchg
sti
popf
leave
adcl
inc
shrl
push
mov
rolb
ja
push
lods
and
cmpsb
scas
call
stos
pop
mov
mov
int
mov
ret
xchg
nop
mov
jg
in
sbb
aaa
mov
jo
lock
fdivl
or
and
jmp
jmp
cli
jo
test
nop
ret
inc
es
repnz
cmpsb
pop
rcrb
shll
movsl
add
scas
mov
addr16
mov
cmc
imulb
xchg
xor
sub
inc
fwait
add
add
cltd
xor
dec
push
xor
dec
and
mov
inc
into
cli
movl
or
pop
jg
in
stos
cmp
outsl
stos
repnz
js
shrl
lahf
js
js
mov
cmp
jge
mov
or
xor
imul
jne
dec
bndstx
incb
mov
push
push
leave
movsb
xlat
push
shll
mov
jge
xchg
insb
imul
mov
lea
dec
cli
out
sbb
lea
negl
mov
push
cmp
mov
fbld
pushf
dec
in
add
notl
sbb
outsl
jbe
sub
inc
sete
cmp
insb
outsb
gs
clc
repnz
adc
cmp
cmc
xchg
cmp
dec
push
leave
or
push
test
loop
repnz
cli
repnz
lods
lds
test
popf
mov
jne
les
insl
dec
shld
shr
sbb
dec
jmp
xor
mov
enter
jnp
fistl
push
test
xor
xchg
xchg
or
dec
adc
mov
rcll
pop
and
add
das
repz
pop
cltd
jp
popf
test
sahf
pop
lods
jne
mov
jle
lock
mov
arpl
xchg
arpl
call
mov
cmpsl
loopne
mov
ret
cltd
inc
mov
in
pop
mov
repz
es
sbb
mov
mov
into
lret
xchg
pop
lds
shl
lcall
xchg
adc
pushw
les
mov
rorl
ja
xor
xlat
jo
loop
cmp
adc
jge
xchg
pusha
mov
imul
push
push
add
in
shl
and
test
dec
gs
sub
xchg
scas
pop
dec
push
pop
jno
jg
xor
sub
int3
fcmovb
addr16
jnp
lret
out
in
lcall
aaa
cmp
xchg
mov
hlt
loope
jle
aad
mov
sub
sbb
outsl
ret
xor
xor
jle
fsts
pop
xchg
movsb
shlb
push
aam
mov
sti
insl
and
andb
idivl
pop
jecxz
imul
sbb
cmpsl
arpl
orl
ret
inc
xchg
pop
es
xchg
repnz
fs
out
push
ss
xchg
push
imul
mov
ljmp
andb
cs
jmp
cmc
fisttps
or
lcall
pop
outsl
fsubrs
or
insb
jb
mov
inc
add
insl
mov
enter
outsb
insl
jp
mov
cmp
nop
test
mov
notw
fidivl
mov
sbb
fnstsw
adc
mov
add
jle
mov
push
scas
and
mov
pop
mov
push
push
imul
clc
dec
mov
rcrb
add
pop
faddl
mov
cs
nop
shll
cmp
inc
ret
cmc
arpl
fld
ja
outsl
or
popa
jbe
fsubr
and
outsl
pop
data16
ror
stos
adc
inc
fcmovne
fidivs
xchg
xor
push
adc
mov
mov
inc
push
inc
insb
ds
mov
dec
jns
or
adc
pop
jne
jns
adc
push
mov
mov
push
hlt
cs
mov
lret
movsb
dec
and
loope
mov
push
sbb
fyl2xp1
add
ljmp
mov
or
xchg
mov
mov
ret
and
xor
mov
out
inc
rcl
pop
mov
adc
outsl
pmaddwd
adc
movsb
fimuls
ror
push
popf
mov
xchg
outsb
adc
fwait
test
mov
mov
and
sahf
test
cli
or
jecxz
test
hlt
cmpsb
add
in
ret
shlb
popa
cmp
test
xchg
rclb
pop
pop
dec
sub
dec
inc
pop
pusha
ficoms
add
int3
xchg
xchg
fidivrl
fwait
dec
and
in
stc
pop
lods
fwait
nop
inc
loop
test
es
fcomi
mov
sti
xchg
das
mov
test
xchg
lods
pop
dec
btr
test
mov
call
iret
pushf
repz
ss
inc
enter
mov
rolb
icebp
pop
cmp
push
fcompl
fidivrs
xchg
push
std
inc
mov
cmp
insb
sahf
ficoms
jge
mov
sub
das
xor
adc
pop
jo
js
daa
xor
jnp
jle
fmuls
jge
lea
test
mov
jae
into
sbb
icebp
xlat
sahf
sub
aad
test
mov
mov
ret
xchg
pop
xchg
rorl
mov
rcr
mov
pop
add
outsb
rdmsr
push
jo
rclb
adc
cld
aas
sbb
loop
xor
lahf
push
mov
adc
imul
dec
or
xchg
or
out
test
xor
xchg
shr
stc
dec
loop
popa
cmp
sarl
outsl
out
sar
xchg
arpl
shlb
loope
mov
cmp
ucomiss
or
shlb
xchg
fnstenv
xchg
and
jno
sbb
outsl
es
xor
push
add
aas
xchg
jae
or
cmp
or
push
aad
jg
insl
daa
add
ljmp
jne
int3
pusha
dec
cmp
imul
jg
mov
push
cmp
add
xchg
pop
or
jae
xchg
and
int3
roll
lcall
sbb
shl
mov
add
dec
inc
jnp
stc
loop
or
sbb
pop
adc
xor
inc
fcomi
lods
push
lret
sar
sti
sub
xchg
add
sbb
pushl
decl
jb
pop
cmp
stos
mov
cmp
inc
scas
pop
mov
jb
jbe
test
pop
nop
cmpsl
cmc
dec
out
mov
bound
rcll
shl
sub
arpl
fistpll
xor
addr16
inc
call
mov
and
std
or
cmpsb
lret
jecxz
dec
movsl
mov
xchg
arpl
mov
cmc
xchg
lds
and
inc
in
mov
add
ds
fidivrs
sbbl
sahf
cmp
fstpl
mov
lcall
ret
loopne
loop
data16
aam
sti
jmp
cmp
fisttpll
jp
out
xchg
mov
xchg
sbb
in
jl
test
sbb
jmp
cmc
mov
sbb
pop
js
insb
adcl
adc
cmpsb
xor
aas
sub
or
cs
and
mov
pushf
fs
xor
dec
js
in
sahf
enter
mov
stos
xor
sub
cmp
jbe
rcl
lcall
mov
hlt
mov
mov
sar
sub
pop
lcall
ret
and
pop
enter
mov
dec
insb
xchg
into
and
enter
mov
inc
popf
std
stos
sub
cmpsl
or
and
stos
xor
pop
ficoms
dec
xchg
imul
mov
sub
mov
and
xchg
cmp
into
es
cmp
sub
and
les
lret
arpl
add
leave
insb
cmp
mov
or
xor
shlb
adc
cmpsl
dec
clc
orl
call
out
and
movsl
and
and
or
lcall
imul
add
jae
pop
lds
orl
fisubs
fdivl
dec
xor
inc
mov
dec
inc
mov
pop
movb
mov
push
push
fimull
dec
in
out
inc
inc
loopne
cmp
push
test
pop
pop
les
movsl
out
adc
jl
fsubrl
ljmp
shll
mov
and
andb
out
add
mov
push
repz
dec
mov
ss
inc
iret
cld
sbb
fidivs
rcll
bound
test
push
adc
fisttps
adc
aam
dec
bndstx
les
pop
lods
ret
mov
daa
add
popf
xchg
es
jns
in
push
pop
jae
test
or
sub
xlat
gs
in
js
jnp
jne
and
loopne
sub
sbb
cmpsb
orb
inc
adc
adc
pop
aas
ss
mov
sub
jno
cmp
notb
out
or
dec
dec
mov
fcmovnbe
stc
data16
cwtl
push
push
gs
imul
pop
jmp
fcompl
enter
xor
lahf
xchg
and
mov
sub
sbb
and
or
and
scas
rclb
pop
sbb
xor
sub
mov
cmc
cli
movsl
mov
sarb
mov
call
pop
push
les
xor
test
data16
xchg
push
cmpsl
mov
int3
cmp
push
push
mov
aam
hlt
jmp
int
xor
pop
xor
cli
inc
or
cmp
movsl
inc
jmp
jo
stos
clc
xor
mov
ret
push
xor
pop
jb
cmp
fsubrs
int
out
pop
aas
inc
enter
mov
in
push
push
sbb
mov
lahf
dec
rorl
xchg
sti
stc
xchg
outsb
scas
loopne
push
adc
dec
jecxz
adc
fldcw
xor
jae
mov
sarl
insl
xchg
jbe
test
xor
in
call
cmp
mov
jge
jne
pop
and
fcomps
lods
pushf
int
repz
fdivrs
iret
sub
xor
out
lods
jl
loop
cmp
xchg
fldt
sbb
lea
jne
cmp
out
add
movsl
lods
test
or
cmp
xor
into
xor
int3
cmpsl
enter
mov
xchg
mov
negb
loope
scas
pop
inc
pminsw
jecxz
ljmp
loop
cltd
out
mov
dec
xchg
std
hlt
and
movsb
jne
dec
rcr
fptan
aas
push
in
incb
out
sub
adc
mov
mull
cmp
adc
jp
lret
push
and
mov
pop
int3
pop
adc
in
je
mov
leave
pop
add
sbb
or
inc
xchg
adc
jno
xorl
subl
and
push
out
mov
idiv
popa
pop
idivb
test
dec
les
mov
fcom
arpl
dec
out
inc
push
inc
iret
iret
mov
mov
loope
and
fldenv
or
fwait
repnz
dec
lock
sub
cmp
fs
fwait
mov
pop
int
inc
lods
push
cmpb
dec
das
rcr
xlat
lahf
mov
test
pop
mov
jbe
adc
adc
inc
faddl
xchg
repz
fldl
fsubrp
jns
jmp
pop
jbe
xchg
dec
mov
testb
subl
mov
ljmp
ss
push
test
or
sub
sub
xor
pop
rorl
outsb
imul
jno
xor
sbb
jl
lret
jmp
outsl
movsb
mov
cmc
pop
mov
sbbb
cmp
xlat
pop
clc
popa
mov
jne
add
fwait
sar
xor
dec
imul
mov
jecxz
cltd
jg
xorb
xchg
jns
dec
or
repz
daa
cmpsb
es
mov
jbe
insl
lret
in
sti
and
jae
push
push
adc
sub
divb
mov
sbb
hlt
jns
subl
clc
hlt
mov
ds
xchg
xchg
test
pop
std
fcompl
fisubl
cs
jae
rclb
lea
mov
mov
stc
add
adc
aad
xor
push
and
add
addr16
cmp
lret
mov
cmc
xchg
out
dec
inc
mov
subb
and
sbb
loop
mov
cli
fsubs
nop
outsb
jmp
xchg
mov
test
ret
sti
into
xchg
and
outsb
imul
aad
dec
out
push
imul
adc
lods
pop
aaa
xor
pop
and
pop
xor
mov
adc
fcomp
bound
outsb
test
xchg
xchg
sbb
mov
add
dec
outsl
mov
nop
xchg
mov
in
imul
sbb
xchg
pop
fsub
pop
ljmp
rol
cwtl
ficoml
and
jo
sub
pop
lods
mov
mov
loop
adc
loopne
cmpsl
xor
mov
iret
into
je
leave
icebp
stos
jns
ja
lds
scas
mov
dec
dec
adc
sahf
test
dec
cmc
jo
or
loop
pop
xchg
xor
adc
mov
repnz
inc
pop
dec
mov
jmp
fstp
mov
lcall
xchg
or
mov
or
dec
in
pop
cli
or
cld
pop
iret
mov
lret
cli
sub
xchg
mov
xor
rcrb
push
mov
mov
lcall
fnstcw
push
mov
enter
movsl
jne
dec
pushf
pop
arpl
inc
lahf
pusha
divb
cmp
arpl
mov
movsb
mov
pop
adc
out
lods
cmp
pop
addb
pop
ja
push
insl
cmp
dec
lcall
pusha
push
jle
in
sbb
cld
scas
sub
inc
imul
jle
cwtl
xchg
scas
clc
mov
nop
and
fdivs
daa
sub
ficoms
mov
dec
mov
adc
lods
lock
xchg
xor
inc
loope
in
cwtd
and
lret
movsl
in
shll
out
test
mov
or
sbb
ret
adc
sti
aam
dec
push
inc
or
xlat
popf
enter
je
push
sub
mov
cmpsb
add
cmpsb
add
mov
in
addl
inc
xchg
clc
xorl
mov
push
push
mov
xchg
pop
and
dec
xor
iret
jmp
push
rclb
fiadds
xchg
pop
cmp
out
mov
fildl
fimuls
lcall
popf
shlb
xchg
xchg
popa
add
cld
mov
xlat
out
into
add
cmp
insb
inc
and
sbb
push
push
fisubrl
roll
lock
or
mov
fcoms
xchg
in
icebp
dec
inc
pop
fs
inc
and
xchg
fs
movsb
lods
jb
dec
fisubrs
iret
inc
xchg
icebp
jle
icebp
int3
sbb
dec
loope
mov
sbb
rcll
es
mov
ror
fldln2
push
or
add
jns
mov
push
or
xchg
and
and
int3
and
and
lret
push
mov
shrb
sbb
lock
nop
fsub
divl
enter
insb
mov
adc
loope
dec
in
aas
insb
sbb
cmpsb
mov
push
outsb
push
mov
or
push
loop
pop
push
out
inc
pop
add
jle
es
cmp
sbb
fs
movsl
sar
jbe
ja
pop
std
cltd
pop
imul
or
xchg
mov
cltd
lret
cmpsl
cltd
fsubs
mov
pop
xchg
xchg
adc
test
lcall
hlt
loop
push
adc
hlt
pop
imul
mov
xchg
pop
sub
adc
dec
jno
test
pop
fwait
mov
xor
jmp
into
adc
movsl
pop
mov
enter
clc
into
xchg
loope
int
stc
fstl
ds
mov
fwait
or
mov
cmp
fdiv
icebp
push
cli
mov
jl
push
imulb
into
iret
stos
jp
pop
bound
pushf
push
fs
inc
out
pop
movsl
mov
into
pop
jne
leave
mov
adc
ret
arpl
dec
cmpsl
lret
insl
insb
jmp
cmpsl
pop
adc
sti
sbb
cmp
xchg
pop
cli
iret
int3
inc
push
adc
js
push
mov
dec
inc
movl
mov
cmp
call
je
inc
or
push
test
xchg
and
ja
imul
dec
pop
or
cld
or
popa
mov
add
xor
sub
inc
sti
push
mov
xor
stos
push
push
push
push
das
or
mov
push
cmpsl
mov
cmp
sti
push
les
or
in
imull
in
xor
xor
mov
addr16
das
xchg
je
and
xchg
push
mov
notl
shrb
iret
mov
adc
fdivl
mov
sub
jbe
mov
fisubs
cmp
aaa
fs
pop
sbb
inc
fistpll
sub
mov
xchg
jnp
les
aas
les
fadd
ja
xorl
mov
inc
bound
lea
mov
pop
adc
fdivrl
cltd
jne
mov
xchg
lock
pop
int
push
or
mov
cli
inc
repz
hlt
cmpl
popf
inc
xchg
xor
dec
mov
sbb
negl
sbb
push
fcoml
repnz
sbb
ja
lahf
mov
add
out
fists
std
mov
mov
pop
lidtl
add
sbb
push
movsl
popa
mov
inc
stos
dec
sti
mov
xchg
or
inc
cmpsl
fwait
jp
cld
fdivrs
or
dec
cmp
push
xchg
xchg
jp
ds
js
push
jmp
dec
push
popa
es
sub
in
jnp
cli
nop
mov
dec
add
in
lea
imul
dec
xor
lahf
test
xlat
gs
dec
push
dec
xchg
pop
push
gs
scas
outsb
xor
int3
pushf
sbb
jp
and
adc
mov
cld
and
aad
arpl
in
sbb
insl
pop
pop
rcll
xchg
es
mov
daa
int3
loopne
sbbb
cltd
imul
sbb
xchg
sub
stos
or
and
inc
aad
xchg
je
inc
xor
inc
jmp
jp
sbb
sbb
pusha
nop
ret
xor
dec
imul
fimuls
jo
jae
dec
or
mov
inc
and
es
pusha
rolb
out
shlb
inc
jcxz
pop
aaa
jecxz
pop
stc
add
jnp
and
sbb
dec
sub
xor
dec
push
rcl
mov
adc
repnz
imul
iret
lahf
lds
lcall
mov
sub
inc
and
cmc
lret
jg
cli
sbb
aam
push
mov
int
lods
clc
js
bound
lcall
inc
arpl
sbb
and
xor
stc
sbb
cmpsb
push
xchg
pop
imul
jge
rcrl
add
push
aad
pop
lds
sbb
xor
ds
sahf
push
push
dec
fisttps
sbb
push
lock
xor
popf
push
pop
loop
filds
sbb
xchg
cmp
inc
nop
xor
lea
loopne
inc
push
jecxz
cmpsb
lock
repnz
inc
mov
xor
adc
add
ja
xor
iret
cmp
dec
push
push
stos
and
imull
mov
cmp
sbb
or
andb
outsl
push
xchg
shrl
jle
mov
inc
push
fstpt
or
fsubr
mov
subl
pop
cmp
ror
adc
js
loopne
repz
outsl
inc
push
lret
and
xchg
imul
int3
rep
push
or
sbb
jmp
sbb
mov
adc
xor
push
lcall
pop
cld
push
mov
mov
enter
dec
push
nop
adcl
bound
mov
push
jb
xchg
rcll
pushf
mov
mov
in
xor
pop
mov
call
push
mov
repz
movsl
mov
arpl
popa
sub
inc
lods
fmul
and
arpl
xor
jge
cwtl
jge
jmp
jp
adc
inc
and
in
pusha
pop
push
push
fnstsw
clc
fisubrl
mov
mov
lret
fldl
or
xchg
jle
or
sub
enter
loope
imul
mov
xchg
leave
cs
fistl
sub
je
ja
jle
jmp
push
push
jae
shlb
cmp
push
jg
lea
pop
addr16
push
pop
mov
inc
sbb
js
je
jp
cli
sbb
push
jl
cmp
in
lods
sbb
mov
gs
clc
popa
lahf
in
cld
out
cmpsl
dec
daa
dec
sbb
aad
ljmp
jge
in
mov
mov
fists
ret
hlt
fsubrs
add
mov
sarb
pop
xchg
or
jp
sub
gs
ret
arpl
pop
xchg
mov
sub
lahf
cld
aad
sub
add
dec
out
xchg
cmp
pop
andl
adc
xchg
dec
loop
mov
xchg
add
bound
cmp
xchg
outsb
sarl
sub
in
push
xchg
push
or
ficomps
jb
and
inc
cmp
aam
lahf
mov
and
adc
icebp
mov
push
imul
call
ja
mov
negb
xor
sbb
mov
movsl
adc
push
mov
cld
xchg
add
xorb
insb
inc
pop
adc
push
mov
xchg
pop
add
dec
mov
fcmove
mov
inc
xchg
rcrl
sbb
mov
out
push
sub
add
cs
sbbb
sahf
faddl
outsb
mov
es
enter
and
mov
xor
aaa
ja
sub
shrb
stos
sub
jg,pn
fs
xlat
jo
cmpb
popa
add
add
jno
jae
xchg
xor
cmp
cmpsb
sbb
les
es
or
call
sti
int3
ret
mov
dec
sbb
push
xchg
ss
lock
fisttps
sub
sbb
mov
in
mov
fstpt
ret
xor
xchg
inc
addb
or
cmpsl
lret
adc
mov
fstpl
push
nop
push
sub
dec
adc
mov
insb
xlat
sbb
mov
repz
push
pop
fsubrl
jg
les
aas
cmp
add
fwait
xor
and
pop
imul
sbb
sbb
adc
lods
cwtl
mov
sub
or
mov
cmp
ss
ja
mov
das
pop
and
xchg
aam
push
inc
dec
xchg
push
cli
arpl
aas
jo
pop
sahf
es
lock
les
bound
pusha
aaa
cmp
test
mov
lods
rorl
adc
dec
cmp
sbb
into
in
imul
adc
aam
addr16
addr16
sbb
xchg
push
cltd
repz
push
pop
das
jb
cmp
mov
cmp
aaa
test
fcomps
mov
sbb
mov
sbb
xor
pop
jb
and
lahf
mov
lret
sub
insb
hlt
or
rcll
push
loopne
inc
dec
xchg
cmp
sarb
outsl
and
pop
push
movb
mov
or
cmc
cmp
les
jno
sub
ljmp
sbb
out
out
repz
xchg
xor
call
pop
gs
pop
mov
call
jns
shl
movsl
dec
mov
xlat
arpl
es
sbb
cli
ds
pushf
pop
icebp
shlb
mov
je
ficompl
ficompl
push
sbb
sub
sbb
sarb
ds
ret
xor
push
dec
xlat
lcall
test
in
dec
or
aam
popf
repnz
out
jmp
lret
cmp
fldcw
or
hlt
mov
in
cltd
loop
jno
mov
xchg
fistl
mov
mov
aaa
xchg
bound
add
dec
cmpsl
adc
xchg
loop
push
dec
jmp
fstpl
jp
ds
pop
ror
shll
xchg
adcl
cmp
mov
jmp
int
dec
cmp
sub
mov
push
cltd
pop
hlt
adc
xchg
scas
ja
je
testb
mulb
test
rcll
or
out
dec
and
mov
pop
jae
add
bswap
es
push
lods
je
gs
data16
xchg
cltd
xor
insb
lret
cs
cmpsb
and
mov
out
or
je
or
incl
movsl
in
push
shl
xor
push
cmp
ljmp
adc
test
hlt
mov
xchg
mov
add
jg
push
sbb
and
insl
push
leave
hlt
xchg
adc
mov
loop
jne
clc
cmpsb
fwait
adc
mov
test
mov
lea
or
xor
out
or
push
out
imul
rorb
cld
js
cmpsl
and
sbb
stos
inc
in
insb
out
sbb
sbb
ja
mov
inc
xor
das
mov
in
enter
add
shl
pop
jnp
push
pop
adc
mov
ds
jns
in
test
xlat
cld
enter
or
push
ficoms
stos
ds
daa
sub
ret
or
push
ret
stos
dec
fwait
xchg
jnp
add
test
sarb
in
inc
cmc
pushf
push
pop
cmp
aas
push
xor
ljmp
mov
stos
sbb
popa
mov
xchg
mov
test
pushf
fbstp
imull
xchg
push
jae,pn
mov
lahf
mov
xor
inc
mov
test
mov
inc
pop
lea
fisttpl
xor
loope
pop
adc
add
push
inc
dec
and
dec
out
jb
xchg
mov
mov
cmp
jmp
loope
inc
pop
fstpt
lds
mov
fstps
mov
cmp
ret
mov
lock
je
xchg
test
add
mulb
xchg
xchg
sub
mov
jmp
js
fwait
push
jno
lahf
mov
sub
es
dec
or
rcl
jg
jns
sub
movsl
test
sbb
in
xor
mov
cwtl
in
pop
mov
int3
jp
push
mov
outsl
call
xchg
arpl
loope
xlat
lret
mov
call
repz
icebp
inc
sbbl
repz
mov
inc
jno
mov
into
lds
lret
fiadds
mov
xor
xchg
out
lret
jle
gs
test
mov
or
mov
sub
test
cmp
cmpsl
loopne
dec
shrb
xchg
clc
sti
jnp
arpl
inc
push
adc
out
xor
lock
mov
sub
cmc
bound
imul
pop
std
push
out
mov
outsb
mov
cmpxchg
xchg
push
mov
or
stos
pop
push
mov
push
inc
fwait
cmp
rcll
dec
sbb
cmc
in
push
stos
cmp
andb
stc
movsb
pop
push
xlat
je
adc
add
push
push
je
pop
pop
jbe
in
jle
stos
bound
nop
imul
lods
aam
mov
mov
mov
xlat
movsb
pop
push
fisttpll
outsb
pop
int
cwtl
and
cmp
mov
push
push
inc
push
and
jecxz
mov
imul
mov
dec
cmp
leave
loopne
mov
cmp
add
push
movsb
pop
sub
loopne
lods
cmpsb
sbbb
dec
cmp
sbb
loop
das
movsb
movl
pop
cs
rorl
roll
pusha
sbbb
lea
out
jg
lret
fimuls
movsl
fisttpll
insl
fsubr
mov
push
inc
lock
repz
shr
test
adc
adc
sub
sbb
cmp
mov
xchg
cli
lods
pop
mov
mov
loopne
test
fiadds
inc
out
push
shll
jne
popf
jno
fwait
pop
and
xchg
pop
bound
fstps
and
aas
mov
fwait
loop
es
add
sbb
leave
adc
ret
clc
sub
push
or
and
pusha
in
pop
sbb
or
ret
and
les
movsl
in
push
and
arpl
mov
das
sbb
xor
mov
jl
pop
dec
out
into
dec
insb
lcall
sbb
fdivs
dec
ds
pop
sub
add
aas
push
les
jecxz
ficompl
xchg
stos
insb
test
xorb
jle
repnz
fimuls
in
ljmp
push
sahf
out
pop
int3
out
push
test
xor
out
cltd
into
cmp
mov
stos
jbe
push
mov
pop
and
imul
test
jnp
adc
fsubr
in
ja
dec
call
nop
push
xchg
push
lods
icebp
push
jb
mov
xchg
enter
push
popf
iret
jecxz
adc
dec
mov
xor
mov
movb
pop
jg
lods
adc
es
mov
and
popa
sub
in
cmp
mov
fisttps
test
out
mov
cmc
outsb
mov
addr16
loopne
cmpsl
push
xor
jo
mov
dec
jns
adc
les
fnstenv
aaa
push
imull
insb
xor
lret
scas
outsl
dec
aad
xor
fs
pop
xchg
mov
pop
push
sub
cmp
push
nop
fs
addl
xor
sbb
mov
out
enter
add
xor
or
xorw
repz
jge
jae
or
jmp
enter
mov
std
out
jmp
clc
mov
jne
xor
push
cmp
add
mov
pushf
out
movb
int
push
mov
push
stos
or
cmp
add
imull
loop
pop
outsb
fiaddl
ds
jmp
call
lods
loop
sbb
lods
push
jle
popf
addr16
sti
stos
imull
push
sbb
or
pop
mov
fstl
xor
hlt
add
xchg
sbb
negb
icebp
lret
enter
out
push
adc
sbb
ret
testl
jnp
clc
sub
out
push
ret
in
stos
push
inc
imul
add
xchg
mov
mov
jg
insl
iret
movsb
mov
call
cmc
inc
adc
mov
repnz
inc
mov
push
ljmp
fdivp
jae
sbb
std
xchg
mov
cmpsb
pop
push
and
stc
add
pop
mov
gs
inc
pop
mov
sbb
aam
pop
daa
icebp
mov
into
pop
jae
enter
or
sbb
push
addr16
ret
mov
mov
and
xorb
jno
rcll
idiv
cwtl
push
push
test
insb
out
mov
xchg
xor
enter
sbb
push
push
test
sub
stos
cmpsb
mov
or
fadds
ja
adc
lret
or
xor
leave
inc
adc
not
mov
dec
add
cmc
insl
adc
push
xor
and
mov
cmp
xchg
pop
call
xchg
lock
cmpsl
xor
xor
rcrl
dec
xchg
adc
xor
pop
icebp
and
push
or
lcall
xlat
xchg
fidivrs
add
pop
dec
in
and
dec
rcrl
shlb
jae
cs
push
fcompl
out
push
sahf
sarb
xchg
je
xor
cmc
pop
push
jbe
pop
cld
ficoms
pusha
in
mov
xor
inc
js
mov
rcrb
loop
or
cmc
inc
mov
and
or
scas
sub
leave
mov
jo
fs
xchg
push
leave
mov
insl
push
lea
out
lret
dec
je
pop
cmp
mov
stos
loope
jns
movsb
fsubrs
fldcw
aam
cmp
cmpsl
push
das
jnp
pop
jnp
adc
mov
insl
mov
aaa
add
adc
push
adcb
les
push
sbb
test
sub
mov
insb
push
pushf
add
int
add
adc
xchg
push
call
sbb
mov
add
dec
cmp
test
hlt
mov
lods
pop
and
lods
mov
lahf
jecxz
cld
les
xorb
loopne
cltd
stos
sbb
jmp
aam
inc
jp
mov
add
testl
sbb
sub
int3
mov
daa
in
inc
add
hlt
mov
in
aaa
stc
xor
shlb
xchg
lods
lock
cmp
pushf
xchg
cmp
xor
shr
or
xor
pop
sti
cmp
insl
push
jno
insl
and
ret
cwtl
fsubp
aad
push
pusha
xchg
push
pop
test
hlt
mov
mov
into
fadds
mov
mov
inc
movsl
das
dec
lds
or
or
fstl
scas
or
xchg
imul
add
out
fs
out
pop
fwait
sub
pop
insb
imul
add
jl
icebp
lds
insl
xor
dec
push
nop
sbb
enter
sub
jbe
add
andl
es
dec
or
lret
or
clc
enter
movsl
out
add
pop
jle
and
push
xchg
sbbb
outsl
push
fistpll
cs
mov
xor
push
sbb
ret
outsl
dec
test
add
mov
repnz
insb
aam
jns
inc
dec
xor
in
push
test
jb
xlat
scas
fstpt
shrl
ficompl
inc
pop
inc
push
andl
ja
aam
mov
es
pop
pop
movsl
push
xor
mov
pop
lret
mov
push
cmp
cwtl
call
lds
jo
mov
stc
inc
inc
insb
lahf
xchg
fsts
jo
insl
sbb
clc
fstps
mov
add
xor
xchg
xor
xchg
jmp
cmp
xor
push
pop
stos
cmp
int
leave
rorl
ljmp
sti
add
es
or
mov
pop
mov
loop
or
jmp
xchg
xchg
mov
imull
dec
sub
int
je
stos
repz
popf
cwtl
leave
call
mov
pop
pop
dec
scas
jp
out
loop
mov
ret
jl
lret
add
sbb
push
jmp
std
in
bnd
or
imul
inc
cltd
loopne
lock
xchg
lcall
enter
rcl
xchg
popa
mov
push
pop
mov
and
ja
push
test
inc
pop
bound
pop
push
dec
ret
pop
cld
cli
mov
pop
das
push
fcomps
rcll
pop
push
sub
sbb
int
faddl
dec
movsl
cmp
aaa
repnz
adc
mov
shrb
mov
mov
out
in
test
iret
add
shrb
enter
sbb
les
and
inc
xor
add
cmp
cmp
arpl
repnz
movsb
xor
fldenv
sub
sub
inc
rcrb
xor
mov
xor
test
jnp
lcall
pop
xchg
mov
and
icebp
mov
and
mov
push
ret
fcom
repnz
or
repnz
mov
inc
pop
out
mov
push
jae
movl
std
cld
lds
cmpsl
fiaddl
and
pop
push
sahf
sarb
outsb
scas
add
mov
loopne
fwait
add
setl
out
fadds
pusha
ds
arpl
popf
sub
mov
std
call
enter
fisubrl
fldt
lods
xchg
jnp
js
or
lahf
lock
adc
xor
cmp
insb
xchg
mov
mov
mov
jp
fsts
scas
cmp
imul
in
cmc
test
dec
iret
fs
inc
or
fdiv
mov
mov
cmp
push
adc
push
aas
or
mov
jmp
add
mov
push
out
sti
std
addr16
jo
outsb
daa
pop
repnz
fwait
and
or
jne
pop
repz
out
sti
or
adc
fidivs
pop
call
dec
cmp
fxch
mov
into
testl
aaa
in
or
daa
add
or
push
hlt
mov
movsl
fstpt
mov
jle
fidivrl
out
jb
mov
jl
movsl
xor
das
and
fstpl
sarb
cmp
dec
in
pop
orb
inc
adc
rclb
xchg
add
iret
pop
sub
mov
loop
sub
mov
xchg
adc
mov
cmp
sbb
lret
ret
or
jns
push
mov
in
sub
jp
int3
icebp
mov
loopne
enter
lcall
and
fdivrl
movsb
xor
enter
rclb
in
imul
sbb
mov
lods
int3
dec
mov
test
inc
in
in
and
in
lods
je
in
and
xorl
sub
jg
jle
add
cmpps
adc
imul
pop
sub
leave
bound
pop
jo
lret
subl
scas
dec
loopne
repz
jns
pop
out
lock
mov
inc
pop
jo,pn
push
outsb
jmp
adc
sbb
imul
sub
sti
gs
mov
outsb
mov
lcall
xchg
daa
mov
adc
xchg
push
lcall
xchg
mov
lds
in
inc
push
adc
push
pop
dec
or
fsubs
popf
cmp
jo
jge
pop
jne
pop
mov
cwtl
ret
imul
jmp
adc
adc
mov
push
jbe
data16
mov
and
mov
repnz
sub
jne
jae
movsb
push
int3
mov
or
or
mov
mov
out
outsb
andl
push
lds
orl
pop
xor
pushf
and
sbb
outsl
or
push
dec
mov
jbe
int3
stc
jb
les
sub
xchg
add
sub
ss
inc
fdivrl
mov
dec
push
pop
dec
jns
push
mov
jo
lea
iret
dec
aaa
daa
out
or
pop
ljmp
xchg
xor
sbb
mov
jg
mov
mov
push
sbb
add
xor
mov
or
dec
cmc
ljmp
shll
cs
insb
je
mov
jp
add
or
enter
or
sbb
mov
sbb
pop
mov
rol
int
mov
xchg
lods
sbb
mov
pushf
inc
in
movsb
pop
pushf
jl
fcmovnu
fsubrl
movsl
ret
mov
pop
push
push
sub
int
sub
cmpb
and
xchg
loope
repnz
dec
lods
sbb
in
test
xor
or
jne
or
aaa
or
sti
pop
jle
stos
lret
notl
js
cmp
mov
cld
jp
push
inc
inc
xor
je
mov
mov
fistpl
mov
xor
pusha
jae
jb
mov
sub
xchg
push
sub
out
and
in
nop
hlt
scas
scas
jnp
push
adc
fsts
xor
clc
and
dec
mov
jo
mov
popa
cld
adc
ret
jmp
pop
dec
hlt
jl
dec
in
shlb
push
jae
xchg
roll
cmp
mov
cltd
mov
cmp
xor
sarl
inc
rcll
mov
mov
or
and
xchg
cwtl
dec
push
shlb
push
pusha
xchg
add
mov
jg
testb
jbe
test
sarl
pop
pop
xchg
sub
loope
mov
jnp
std
call
cmpsb
sbb
and
inc
fwait
xchg
push
jmp
add
jle
imul
push
jl
or
mov
mov
or
jae
cmp
xor
hlt
pushf
fcmovbe
fucomip
sbb
sbb
xchg
and
xchg
dec
fdivrl
repz
stos
insb
in
or
dec
outsb
mov
gs
dec
mov
xor
add
xchg
test
outsl
pop
xchg
outsl
jge
into
add
push
pop
mov
xor
insb
mov
rorb
loopne
maskmovq
testl
insl
pop
fcmovbe
scas
hlt
loopne
pop
imul
test
mov
add
in
dec
adcb
decl
dec
push
jg,pt
test
subb
gs
imul
dec
inc
cmc
jns
mov
negl
ljmp
jmp
roll
frstor
lods
fcmovbe
jo
jp
and
push
aad
mov
in
sub
test
cmp
loop
call
sbb
inc
fidivs
xchg
pusha
jb
push
scas
sub
mov
xchg
lods
xchg
sub
out
out
ja
jmp
adc
pop
mov
xchg
sub
iret
mov
les
scas
mov
imull
push
sbbl
xchg
dec
mov
sbb
insb
mov
jmp
adc
xlat
xor
pop
push
pop
lret
sets
push
js
out
push
adc
sub
mov
mov
lcall
xor
xor
and
sub
cltd
jmp
das
inc
out
jp
aad
jge
push
into
scas
ret
and
cltd
lret
and
mov
int3
mov
out
pop
push
mov
outsl
hlt
push
sbb
stc
movsl
add
hlt
nop
add
inc
mov
pop
and
loop
xchg
and
popa
sbb
in
fwait
sbb
data16
es
jno
xchg
ljmp
popf
pop
jmp
out
sbb
dec
sub
mov
inc
xor
pop
out
loop
xchg
push
adc
push
mov
mov
test
fisubs
push
mov
add
or
sahf
sub
inc
cld
pop
xor
and
in
shll
xchg
cmp
pop
sbb
push
mov
xchg
gs
test
and
sub
fdivs
xor
fsubrl
push
aad
mov
loopne
jns
add
aam
xor
mov
std
mov
mov
sbb
jnp
loope
fcmovne
cmpsl
push
mov
push
stos
or
push
pop
pop
and
stc
pusha
pop
lahf
lock
mov
sbb
or
cmp
or
movsb
cltd
inc
fidivrs
adc
test
push
mov
rclb
xchg
cwtl
mov
aam
addl
mov
adc
mov
sbb
mov
pop
scas
ret
add
xorl
jae
cmp
ss
xchg
dec
addr16
daa
pop
jge
xchg
add
sbb
data16
cmp
mov
pop
das
cmp
add
flds
xor
cmp
hlt
pusha
aad
mov
les
pop
or
inc
dec
pop
outsl
fldl
mov
jno
fwait
cmpsb
inc
not
cmp
xor
scas
cmp
inc
test
push
mov
xchg
cmp
mov
mov
les
add
xchg
adc
fwait
xchg
add
decl
push
fisttpll
xchg
int3
sbbl
js
inc
inc
aaa
adc
push
and
lahf
push
lret
fdivrl
out
sbb
testb
mov
mov
je
jmp
lahf
jno
add
push
call
push
inc
cmp
or
or
mov
sbb
repnz
cmc
xor
inc
in
cmp
mov
mov
push
gs
jbe
mov
call
lahf
inc
fcmovnbe
adc
in
aaa
add
or
adc
das
push
scas
test
mov
jns
sub
in
cli
pop
sub
jge
cs
aad
inc
sarb
dec
pop
subl
popf
ss
aas
sbb
inc
test
push
xchg
inc
add
mov
add
dec
adc
mov
xor
jb
push
sub
loope
jg
push
repz
dec
fcompl
xchg
sub
xchg
cwtl
dec
and
or
mov
out
xor
pop
adc
loop
mov
mov
dec
pop
sbb
jae
inc
jbe
cli
sbb
int
pop
fwait
lods
pop
mov
or
in
mov
pusha
mov
adc
and
mov
test
pop
and
mov
stc
cmpsb
pop
push
in
das
sbb
inc
xor
std
stos
and
adc
sub
xchg
repnz
pop
rorb
mov
inc
and
rorb
outsb
and
and
inc
in
hlt
xchg
push
lcall
mull
xchg
pop
xchg
push
leave
loop
inc
imul
or
xor
pop
push
jp
cld
lock
xchg
push
mov
in
leave
adc
adc
cld
add
dec
outsl
cld
scas
mov
xchg
mov
inc
test
lods
test
add
mov
scas
into
sahf
xchg
das
and
adc
scas
inc
jmp
pop
sbb
out
repnz
repnz
and
sub
adc
adc
mov
mov
cs
mov
mov
xchg
add
add
icebp
cwtl
scas
aad
ret
push
test
fiadds
into
jecxz
movsb
lods
push
repnz
jae
imul
inc
mov
mov
enter
or
repz
fistpll
sbb
sahf
dec
cs
pop
in
lods
push
mov
jg
cld
jnp
out
push
cmp
out
shll
sar
mov
pop
push
jp
push
lods
icebp
mov
mov
add
or
pop
adc
dec
xlat
imul
jp
pusha
and
in
push
mov
or
jp
movsb
mov
xchg
pop
jecxz
xchg
loope
sub
in
roll
rorl
jp
or
push
xchg
push
inc
pop
stos
fucom
je
jge
lock
int3
ljmp
aas
jmp
push
fcoml
mov
scas
out
sbb
aaa
mov
repz
jo,pn
jns
mov
and
lahf
loopne
push
adc
jp
fdivs
or
or
or
je
pop
mov
push
loop
jp
rcrb
in
xlat
jnp
ret
out
sti
insb
negl
xchg
xor
roll
mov
adc
out
lcall
fiadds
adc
jge
push
lock
dec
jl
inc
cmc
add
xchg
sub
mov
cld
adc
adcl
subl
insl
mov
outsl
add
pop
daa
sub
mov
lods
insb
pusha
jo
sub
hlt
loop
repz
adc
mov
decb
push
pop
sahf
aam
les
sar
mov
popf
push
sbb
jae
hlt
fwait
mov
fbstp
cs
push
pop
xchg
call
sahf
popf
dec
les
cs
dec
scas
lds
fistpl
pushf
jae
sub
jno
aas
mov
out
in
adc
inc
sub
lea
mov
xchg
sbb
pushaw
int
mov
xchg
fs
mov
and
pop
mov
imul
xor
fdivl
fdiv
sbb
cmp
jg
ss
iret
shll
adc
xor
push
mov
aas
sub
pop
fwait
notb
movsl
bound
dec
xor
shrb
or
mov
mov
mov
stos
addb
mov
mov
into
inc
aas
fs
loopne
mov
jns
movsl
fmuls
cli
jo
pop
ret
repz
jge
bswap
out
jg
mov
dec
insb
xlat
mov
add
adc
pushf
leave
jo
push
aam
repnz
int
dec
clc
bound
xchg
mov
fdivl
bound
dec
cmp
mov
xchg
cmp
mov
jns
gs
shrl
pusha
fisubrl
ror
cld
sar
pop
jb
push
xlat
arpl
xchg
cmp
int
pop
lret
lea
loopne
call
fldl
inc
cmp
in
ret
mov
mov
push
cltd
jbe
mov
push
push
sbb
mov
xor
jle
xchg
scas
imul
fiaddl
mov
out
sbb
popa
add
fbld
and
jecxz
ja
mov
adc
jbe
scas
pop
adc
clc
mov
test
dec
daa
push
in
sbb
mov
shl
jl
mov
jmp
popl
out
pop
or
insb
xlat
sti
mov
ret
mov
mov
mov
and
fisubrl
jne
rorl
popf
test
insl
call
incb
dec
xchg
mov
cwtl
mov
mov
cli
popa
test
push
leave
cmpsb
aaa
rorl
dec
or
cmpsb
ret
mov
add
fmull
arpl
inc
out
pop
push
pop
sub
inc
pop
vmread
inc
cmp
push
call
rclb
movsb
sti
xchg
nop
cmp
jp
jbe
sub
rcr
add
push
pop
pop
mov
mov
repz
cmp
dec
lcall
ret
lods
add
xchg
outsl
sub
ss
xor
xchg
cmpsb
xchg
inc
mov
mov
movsb
xor
stos
jg
out
inc
dec
xlat
xor
repz
sub
lea
pop
jge
push
ds
lret
imul
outsl
mov
add
or
sub
rcll
addr16
aam
cwtl
push
shll
mov
lds
jl
push
movsb
iret
mov
dec
mov
hlt
push
sub
jge
rcrb
or
sbb
fildll
dec
mov
out
xchg
jns
xlat
push
mov
jmp
dec
inc
lock
cmp
and
push
xor
getsec
inc
push
into
or
mov
xor
sbb
mov
fidivrs
jmp
rcll
mov
fistl
pop
repz
push
cwtl
and
out
and
add
cmp
add
les
xlat
std
mov
pop
or
stc
dec
cs
dec
cld
movsb
pop
mov
dec
enter
sub
loopne
lods
iret
xor
lods
ret
sbb
es
dec
inc
inc
fimull
adc
mov
mov
xchg
push
and
mov
mov
rolb
cwtl
sbb
fbld
test
fmull
lds
jbe
xlat
mov
push
dec
cltd
mov
inc
mov
shlb
jecxz
test
push
iret
out
cs
mov
cmp
outsb
rcrl
das
mov
cmp
adc
push
out
sti
icebp
xlat
pop
inc
jle
cwtl
mov
cmp
aad
mov
adc
push
rorb
dec
sub
sub
add
push
cmp
jne
mov
jb
popf
idiv
adc
ret
sub
test
and
xchg
test
lret
pop
fcmovnu
jno
sbb
cmpsb
xchg
xor
xor
icebp
ljmp
xchg
adc
sti
das
add
dec
or
jl
sbb
pop
idivl
mov
js
stos
pop
mov
inc
cmpsb
mov
and
add
fucomip
cltd
or
call
adc
aam
outsl
push
mov
es
out
lret
xlat
dec
out
sbb
lods
xchg
pop
pop
inc
cmpsb
adc
inc
push
movsl
hlt
inc
enter
inc
pop
cmpsl
int
jmp
loopne
dec
cltd
loopne
hlt
sbb
dec
ss
sub
pusha
inc
inc
and
dec
xchg
xor
xchg
mov
mov
mov
std
lds
push
lods
repz
jp
push
repnz
add
mov
fwait
out
call
push
shll
push
xor
mov
ret
pop
test
cwtl
mov
push
cmp
push
jecxz
sbb
popf
pop
xchg
outsb
or
push
loop
daa
rcrl
sarb
push
mov
sub
lret
mov
mov
or
push
aam
or
popf
sbb
leave
loope
cmpsl
jbe
shll
and
insl
ljmp
sbb
adc
out
mov
shrb
pusha
call
inc
repnz
lcall
adc
je
push
ja
inc
pusha
sbb
add
push
or
or
push
or
and
sub
cmp
mov
fwait
add
flds
and
sub
cmpsl
mov
iret
stos
cli
pusha
mov
lods
jle
clc
popf
cmpsl
inc
rcrb
adc
sbb
pop
pop
mov
inc
xor
push
arpl
xor
leave
cltd
add
call
dec
jg
addr16
jns
push
mov
or
xorl
push
or
in
jae
enter
ret
inc
es
outsb
fwait
jp
ja
lahf
imul
push
dec
dec
xor
sub
out
and
out
fbstp
mov
sbb
repnz
lcall
fcomi
mov
imul
cs
ljmp
mov
jno
mov
jmp
mov
jae
mov
jp
lea
ret
shrl
fdivl
shll
stos
cwtl
xor
cmpsb
repz
hlt
xchg
data16
sub
daa
mov
stos
popf
cmp
imul
mov
sbb
cmp
outsb
push
lods
cmp
cmp
xchg
sahf
jae
xor
clc
mov
jle
jg
lahf
inc
mov
pop
xor
enter
fcomp
test
mov
xchg
in
sbb
lds
sub
and
adc
jecxz
lods
lods
dec
pop
mov
fs
les
mov
push
sbb
repnz
dec
push
sbb
add
mov
adc
fsts
cli
xchg
jg
jmp
lock
jecxz
jb
rcl
outsl
cltd
pop
and
icebp
dec
push
jle
pushf
insl
repz
mov
adc
aas
pop
icebp
out
dec
std
cli
mov
sbb
sub
out
mov
push
jge
ja
shlb
and
int3
rcrl
lods
out
cmpl
push
mull
push
out
das
cli
hlt
jge
in
mov
popf
push
adc
dec
cltd
jp
adc
test
ljmp
out
ja
sbb
mov
xor
loop
test
in
xlat
and
clc
jo
fs
aas
lods
pop
xchg
lret
mov
aam
pop
dec
in
rorb
out
fdivs
xor
pop
adc
mov
sub
mov
adc
push
pop
popf
mov
loop
sub
pusha
bound
or
out
jle
inc
andb
cmp
in
push
ss
clc
pop
inc
inc
push
inc
das
jmp
pop
test
pop
push
rcl
sub
or
jmp
ret
jae
insb
mov
add
or
in
xor
sub
xchg
imul
fwait
imul
movsb
xchg
sti
and
int
imulb
lea
ret
out
lea
test
lret
iret
inc
repnz
cmp
add
pop
push
into
subl
fiadds
xor
inc
ss
mov
sub
mov
pushf
arpl
sarb
popf
cltd
adc
in
cs
jae
inc
sti
jle
sarl
pop
dec
sbb
jl
stos
fcmovne
mov
push
cmp
push
add
lcall
pop
and
mov
dec
stc
not
dec
inc
push
test
adc
loopne
subl
sbb
fs
adc
sub
cmpsl
stc
pop
test
or
addr16
push
dec
mov
movsb
jmp
js
lret
xchg
cli
lret
push
sahf
std
mov
or
aas
daa
push
test
mov
mov
outsb
test
test
inc
lret
mov
sbb
adc
fsubr
push
shll
sbb
cmpl
int3
inc
cmc
push
sbb
cs
add
rcll
pop
pop
or
fidivrl
ffree
cld
shrl
mov
xor
inc
pop
fisttpl
xor
mov
jg
sbb
js
add
inc
mov
je
sahf
sbbl
fimuls
addl
xor
mov
xchg
and
in
shlb
ds
mov
sti
inc
add
scas
push
push
and
jnp
sbb
icebp
xor
push
icebp
aas
mov
pop
std
sarb
dec
pop
pop
fwait
rcrb
jg
js
mov
xchg
fcom
and
popa
adc
dec
sub
loop
aas
repz
sbb
jbe
test
and
mov
in
rcrb
call
dec
xor
cmp
hlt
jae
scas
push
lock
cs
xchg
addr16
xchg
or
cs
inc
clc
stos
mov
hlt
pop
scas
lcall
pop
cmp
loope
pop
shlb
loopne
aad
js
shll
push
mov
cmpl
std
cmc
cmpsb
jns
data16
pop
sub
scas
push
inc
jnp
sahf
xor
and
cld
addr16
push
mov
test
call
push
mov
cld
aaa
push
inc
insl
imul
and
mov
ficoms
jmp
nop
imul
jp
add
add
mov
mov
mov
push
daa
dec
pusha
outsl
push
stos
adc
mov
test
subb
stc
xor
adc
daa
mov
dec
jbe
ja
icebp
clc
cltd
and
dec
or
out
pcmpgtb
dec
sti
and
sub
movsb
push
jp
or
xor
jns
outsb
ret
daa
xor
push
xor
lock
js
inc
cmp
cmc
mov
outsl
faddp
xchg
shlb
cmp
push
out
dec
aaa
xor
fisttpl
movsl
mov
xchg
mov
sar
into
sub
mov
pop
stos
ficoml
xchg
xlat
dec
cltd
addb
mov
pop
sub
and
jae
pop
dec
arpl
shrl
pop
stos
out
lock
xor
imul
adc
xchg
les
and
pop
adc
lret
push
dec
loop
scas
or
jecxz
cli
lret
sti
sub
mov
xchg
push
mov
pop
loopne
nop
int
pushf
xchg
lock
pop
dec
fildl
inc
popa
or
lods
sub
aad
fs
and
cli
mov
cmc
outsl
sbb
dec
cld
inc
xchg
mov
mov
or
mov
pop
shrl
popa
push
enter
jo
ret
outsl
jmp
data16
cmp
mov
xor
and
iret
insb
sub
popf
xor
and
data16
push
xor
shlb
ds
jno
out
icebp
repnz
dec
dec
inc
mov
and
pop
cmp
push
fidivrl
insl
jl
into
dec
inc
in
push
dec
cwtl
stos
push
leave
testl
push
and
mov
or
das
xor
rcr
movsl
in
cmpsb
cwtl
mov
dec
jbe
jo
scas
pop
mov
or
pusha
sub
xor
mov
imul
mov
push
mov
add
shlb
inc
sbb
sub
cli
mov
push
sbb
adc
add
cmpsb
xchg
cmc
mov
not
push
cmp
cmpsl
aas
outsl
aam
jge
inc
inc
or
sub
into
sub
fcmovnbe
cmp
dec
pusha
addr16
mov
stos
xchg
test
jmp
jge
dec
cmpl
rcrl
lret
shll
sub
xor
shll
lods
gs
dec
mov
in
adc
outsb
sbb
push
std
add
inc
lds
xor
scas
push
sti
inc
rolb
and
mov
call
xchg
sub
sub
ret
or
mov
push
stos
outsb
or
and
pop
pop
dec
lods
test
nop
aas
dec
outsl
pop
stos
jbe
sub
outsl
rolb
out
ljmp
xchg
inc
stos
jno
das
sbb
dec
adc
leavew
sbb
and
lea
in
add
lret
mov
arpl
sub
aam
es
inc
fwait
or
mov
sbb
sahf
push
cmp
mov
cltd
mov
imul
sbb
repnz
xchg
fmuls
pop
adc
ds
jo
jle
fs
aaa
push
mov
xlat
sbb
xchg
fbld
push
sbb
cmp
push
test
adcl
mov
mov
and
xor
or
mov
jno
mov
int3
push
mov
jbe
lret
xor
std
mov
push
inc
cli
push
sub
lock
lock
cmpsb
pusha
or
pop
xchg
pop
inc
inc
clc
jae
aam
mov
inc
push
jnp
int3
xchg
cmp
mov
mov
and
sbb
jecxz
jg
dec
daa
and
or
into
lahf
not
icebp
push
xor
js
pop
jo
sub
fwait
loope
stos
xchg
bound
push
push
mov
or
pop
adc
or
mov
popa
or
adc
aas
repz
loope
out
and
sub
mov
cmp
and
mov
mov
cmp
mov
cmp
jp
jmp
adc
out
addr16
stos
fwait
jp
inc
mov
inc
push
ficoml
sbb
mov
rol
push
out
jge
pop
push
jge
or
popa
push
and
js
jle
mov
pop
iret
mov
jle
test
jp
shlb
fistps
loop
repnz
mov
push
and
sbb
leave
xchg
xchg
arpl
add
jo
iret
popf
loop
std
lods
lock
mov
cld
js
stos
mov
mov
loope
out
inc
test
loop
lret
addl
test
std
jge
or
mov
inc
test
sub
and
sti
mov
mov
out
jge
test
and
cmp
jp
paddusw
insl
cmp
mov
xor
js
inc
adc
je
test
inc
aam
inc
cltd
arpl
das
mulb
test
cmp
addr16
mull
popf
frstor
mov
push
aam
mov
xchg
dec
xor
bound
inc
cmp
sarb
aad
daa
xchg
jb
test
inc
adc
sar
inc
dec
jg
and
sub
dec
push
xor
cmp
rclb
out
cmpsl
mov
inc
pop
jge
mov
push
outsb
xchg
in
mov
xchg
pop
jo
push
aas
ljmp
scas
and
aam
jle
fwait
into
insl
pop
pusha
mov
mov
arpl
mov
sbb
roll
ret
movsl
adc
push
popf
xchg
scas
bound
and
mov
lods
mov
xchg
fimuls
sbb
bound
adc
mov
ds
cmp
and
or
sub
stos
orb
mov
arpl
lret
mov
filds
mov
popa
pop
fldenv
test
cli
imul
lahf
int3
repnz
xor
imull
hlt
pusha
mov
stos
push
lds
jmp
popa
push
fidivl
sbb
sbb
mov
ss
sbb
cmpb
jg
dec
add
stos
mov
es
lock
jl
xor
or
fdivrl
repnz
mov
repz
add
sbb
push
fnsave
out
cmp
inc
sbb
aam
ficoms
std
or
pusha
popf
push
out
mov
push
push
pushf
lcall
enter
in
andps
jge
test
pop
incb
pusha
rcrb
test
movl
xor
mov
repnz
inc
mov
sti
inc
mov
mov
outsl
add
pushf
and
or
fucomi
push
and
adc
sub
aad
lcall
inc
or
or
dec
popf
call
sti
mov
inc
fs
sub
les
add
jp
pop
dec
enter
xchg
push
outsl
adc
mov
test
fadd
xor
in
mov
inc
fcoml
out
and
push
jg
mov
xor
icebp
adc
cmp
shrd
out
push
subb
adc
mov
adc
mov
xchg
test
add
adc
sbb
stc
jns
mov
adc
mov
ja
xchg
mov
pop
lcall
imul
xor
inc
dec
idiv
mov
push
mov
fcomps
sbb
dec
mov
repnz
jg
mov
sti
add
idiv
aad
mov
jae
pop
mov
xlat
cmp
shll
mov
pusha
mov
dec
orb
mov
mov
push
lods
aam
scas
jae
mov
cmp
pop
fidivl
ja
and
or
call
sarl
lock
inc
iret
into
cltd
fadd
mov
das
bound
inc
push
ud1
sbb
or
push
roll
sahf
in
or
jb
rorl
aas
dec
dec
fbstp
add
test
mov
jno
jbe
xor
loopne
pop
add
add
mov
loopne
cwtl
shlb
jbe
push
mov
or
add
pop
enter
in
add
stos
sbb
lahf
lret
shlb
test
cmpsb
sbb
and
mov
out
sarb
mov
fs
shll
shl
sub
out
and
mov
inc
fucomi
push
call
imul
xchg
xchg
jge
xchg
sbb
inc
ss
out
inc
lods
cld
inc
or
cmp
pusha
push
mov
push
xchg
imul
fists
add
jns
je
push
js
ds
xchg
or
call
inc
aad
incb
insb
push
movsb
pop
adc
mov
pop
or
jo
aad
clc
mov
xchg
iret
mov
mov
push
mov
loop
lcall
xor
jae
pushf
mov
xchg
fsubl
in
loopne
lods
std
cmpl
add
add
movsb
sbb
in
outsl
repnz
xlat
sub
xor
lds
jnp
int
push
jb
in
mov
in
jne
xchg
jns
rorl
test
loopne
inc
cmpsl
ds
cmpsl
leave
xor
idivl
ror
lcall
clc
mov
in
xchg
or
pop
bound
int
jecxz
stos
int
pop
mov
add
push
ljmp
sub
pushf
mov
jbe
cmp
push
and
pop
mov
into
cpuid
enter
add
cli
or
mov
jns
sbb
shl
inc
cs
cmpsb
inc
fnsave
mov
cltd
fwait
jnp
out
stc
imul
outsl
mov
cbtw
xchg
test
jns
imul
mov
xchg
lret
icebp
popa
sahf
jecxz
xor
jb
dec
mov
xchg
jae
in
adcl
or
fisttps
mov
icebp
xor
xchg
inc
push
notl
scas
xchg
push
fimuls
roll
lds
mov
in
lods
call
lret
cmp
add
push
sub
or
cmp
dec
cli
push
repnz
test
adc
adc
mov
jp
xor
mov
ficomps
enter
es
and
mov
rclb
aaa
jmp
and
loope
fs
mov
jle
ss
sti
mov
clc
shrb
mull
pop
test
pop
cmpsl
rolb
sub
mov
not
daa
and
adc
outsb
jle
push
lcall
lcall
lahf
pop
mov
xchg
jmp
loopne
xchg
lods
xchg
cmp
leave
shrb
xlat
mov
notb
pop
dec
ljmp
repz
or
insl
xchg
cmpsl
outsb
mov
pop
jge
and
pusha
ret
scas
punpckldq
in
push
fsubrs
sbb
add
pop
aaa
jmp
dec
sub
xor
rcl
adc
icebp
sub
pop
js
adcl
aad
idivl
jl
insb
xor
add
xchg
xor
leave
pop
inc
pop
ficoms
pop
or
mov
push
cmp
data16
or
cltd
int
lea
pop
aam
subb
es
fstpt
mov
cmp
stc
lods
adc
jl
adc
mov
fdivr
mov
xorl
movsb
pop
or
and
test
in
jb
shl
xor
mov
sarb
insb
cmp
xor
sbbl
addr16
xor
xor
push
jmp
loopne
stos
adcb
inc
push
and
shll
bound
sbb
cmp
aaa
lea
cltd
mov
mov
mov
push
jle
popa
hlt
xor
mov
repnz
cmc
adcb
pop
jbe
das
test
sahf
cmp
repz
or
add
pushf
sub
sbb
sub
ljmp
sbb
adcl
fildl
mov
cld
stc
repnz
icebp
lret
mov
movsl
pop
or
push
leave
xor
jl
mov
int3
mov
cli
jbe
dec
push
testl
pop
cmp
or
and
andl
xor
lret
sub
shll
mov
idivb
sbb
xchg
jbe
ret
jle
insl
xchg
pusha
jae
cmc
jb
pop
mov
and
xchg
and
mov
popa
mov
push
cld
stc
std
cmpsb
push
sbb
pop
push
xchg
dec
pop
flds
push
mov
dec
xor
rcll
sahf
mov
dec
ret
pop
or
dec
or
mov
test
mov
or
push
and
dec
les
sbb
out
mov
xchg
or
lock
out
loopne
mov
aam
icebp
pop
lods
std
xor
in
out
ffree
cmpsb
mov
mov
inc
lock
or
sub
push
int3
fstpl
es
push
std
pop
xchg
cmp
mov
cmpsb
test
sti
ret
loope
ret
lret
js
inc
jnp
stos
loopne
or
aas
movsl
push
cmp
in
movsl
cmpsb
imul
loope
nop
ss
cli
sub
jp
scas
push
xchg
sub
push
outsb
push
cld
cwtl
jmp
andl
cs
ds
out
stc
rcl
aaa
xchg
mov
dec
cmp
test
shl
xchg
jno
das
daa
pop
xchg
xchg
jmp
enter
cmp
lods
dec
mov
sub
call
xor
and
aad
stos
and
xor
mov
in
sbb
rolb
xchg
mov
das
std
pop
sar
aas
sub
loope
mov
or
xor
cld
xchg
aad
and
inc
pushf
and
into
loopne
pop
test
leave
mov
adc
hlt
adc
jmp
aas
xchg
rorl
xlat
xor
fbld
fucomip
lock
pop
leave
cmp
scas
cmpsb
mov
or
push
fidivrl
sub
sbbl
xchg
sti
std
cmpsb
sbbb
imul
sbb
sbb
add
sub
loope
xchg
dec
sub
insl
repnz
inc
rorl
ret
jle
repnz
pop
or
mov
adc
push
cmp
decb
leave
shll
shrl
cmp
jns
pop
icebp
mov
sbb
loopne
aas
xlat
cld
jmp
sbb
sub
jg
add
xchg
or
nop
loop
roll
stos
fnstcw
xchg
in
call
or
push
in
jle
hlt
cmp
jp
dec
inc
icebp
pop
jp
sbb
imul
and
add
mov
jbe
xor
mov
ja
mov
sbbl
stc
pushf
jns
or
lahf
xchg
cltd
jbe
dec
das
sub
lods
fadd
lret
pop
call
dec
call
pop
pusha
pusha
movsl
scas
mov
dec
lahf
mov
mov
call
aaa
test
mov
int3
inc
mov
jg
mov
mov
push
dec
mov
cmp
outsl
inc
daa
mov
movsb
fdiv
movl
ja
pop
mov
jl
rorb
aam
cmc
dec
fs
mov
jp
sub
and
lret
cltd
ja
cltd
cmp
pop
movsl
nop
or
cmpsl
fldenv
mov
xor
vprotb
push
cmp
sub
push
mov
mov
push
xchg
pop
push
ja
int
cmp
push
fistl
dec
lea
into
aas
pop
xor
adc
pushf
out
lcall
xchg
sbb
ret
xchg
mov
or
dec
inc
fsincos
les
loopne
jns
outsb
jmp
dec
pop
stos
notl
mov
or
jnp
aad
adcb
cmp
daa
push
lods
insb
mov
dec
jbe
push
ss
mov
inc
sbb
pushf
sub
xor
aad
leave
sbb
mov
lods
lock
inc
fisubrl
ljmp
mov
mov
lea
stos
push
lcall
adc
fnstenv
jl
repz
cli
cmp
pop
inc
mov
dec
inc
push
pop
pop
xor
pop
pushl
jbe
mov
push
fs
dec
or
aaa
js
lahf
jmp
dec
orb
shrl
xchg
out
lds
aad
mov
and
or
mov
jbe
pop
and
mov
lock
xor
push
mov
jg
push
mov
mov
lea
lret
inc
or
adc
loopne
add
jb
call
inc
out
das
rclb
ret
mov
xchg
dec
dec
xor
push
push
outsl
lods
fidivrs
add
mov
pop
pop
and
in
mov
adc
jnp
sub
in
mov
out
in
cs
scas
call
push
stc
outsl
dec
adc
or
testb
dec
rcl
push
mov
jge
and
addl
ljmp
and
mov
into
in
push
fmuls
xchg
das
cld
mov
test
pop
and
loop
dec
cmp
rol
lret
mov
lock
dec
outsl
and
and
ret
aad
aam
pop
mov
stos
pop
jp
imul
mov
insb
adc
cmp
test
mov
jnp
shr
push
scas
pop
xchg
push
nop
dec
rcrb
sti
out
lret
or
cwtl
sub
aam
or
mov
mov
mov
jo
test
cli
pushf
mov
push
fucomi
lds
mov
test
cmp
add
push
and
cmp
fs
sbb
out
xor
hlt
or
push
lock
and
inc
sbb
ljmp
inc
fdivrl
xlat
sub
sub
aaa
cli
xchg
je
shrd
cwtl
cmp
mov
sub
add
mov
fdivs
arpl
sbb
aam
in
stos
xor
jb
inc
pop
mov
push
fiadds
mov
mov
jle
scas
sbb
mov
loop
push
ljmp
sub
call
jo
andl
icebp
pop
and
in
and
ret
xor
hlt
and
clc
pop
arpl
jns
or
inc
inc
cmp
dec
jecxz
bound
lods
insb
test
pop
outsl
int
out
xor
iret
mov
xor
push
mov
xor
mov
pxor
cld
lods
testl
jb
cltd
cmp
aaa
fisttpl
mov
cmp
add
and
sbb
repnz
jl
xor
mov
in
leave
fdivl
and
or
aas
mov
jmp
mov
push
sub
jno
into
lods
sbb
dec
cld
jne
aad
push
xchg
xchg
push
jae
divl
xor
mov
sti
lahf
pop
cmpsb
xchg
mov
xor
push
sbb
in
sbb
mov
out
mov
js
sub
outsl
lea
cmp
out
add
test
or
sbb
dec
cli
or
loopne
mov
jl
ljmp
dec
test
and
xchg
inc
adcl
hlt
or
mov
std
adc
jo
jnp
popa
addr16
jecxz
cmp
push
mov
sbb
inc
stc
into
mov
jmp
inc
pusha
decl
xor
cmc
inc
bnd
sahf
or
mov
mov
or
int3
pop
push
ror
mov
fimull
lret
les
sbb
and
or
mov
imul
mov
insl
cmp
fldcw
mov
inc
fcoms
adc
xor
pop
data16
cltd
mov
jb
push
je
adc
jmp
je
cld
pop
dec
cmp
iret
lret
mov
les
mov
sbb
sbb
es
mov
push
out
pop
xchg
inc
aam
jo
jle
ss
sbb
inc
mov
sub
push
nop
push
in
mov
shlb
mov
sub
mov
cmpb
movsl
lcall
enter
mov
pop
adc
or
seta
cmc
sbb
pop
adc
ljmp
cs
xchg
popf
lods
sub
ss
pop
inc
push
aaa
dec
jbe
pop
mov
mov
hlt
insl
fidivs
jno
jo
out
cmp
pop
ret
cmc
or
pop
adc
cmp
mov
xor
add
lret
jl
mov
shrl
jecxz
mov
mov
int3
nop
cmp
adc
and
test
test
inc
inc
mov
mov
mov
add
pop
enter
in
mov
divl
ret
clc
mov
mov
jle
mov
mov
and
test
iret
pop
adcl
cmp
pop
push
movsb
inc
ljmp
test
sub
lret
jnp
inc
enter
push
aad
insl
fstl
out
shr
sahf
sub
inc
mov
pop
sub
test
icebp
add
mov
pusha
jo
fstps
clc
sub
std
mov
nop
pushf
pop
iret
mov
into
lock
xlat
mov
aam
sahf
sbb
into
shlb
popa
push
insb
rorl
cltd
enter
test
ss
and
inc
out
inc
aas
test
lea
movsl
mov
lods
jae
dec
ja
and
cs
and
push
stc
lods
stos
test
jecxz
and
shrl
mov
jge
and
call
mov
xchg
setns
in
mov
loop
test
xor
and
repnz
xchg
lods
cmp
cmp
ret
and
ret
or
outsl
cld
xor
fs
mov
sbb
lock
mov
adc
out
repz
out
test
std
push
mov
jp
mov
pop
out
jbe
xchg
jmp
push
adc
push
inc
test
outsl
xchg
pop
dec
mov
xchg
adc
repz
outsl
adc
pop
stos
arpl
in
movsl
mov
push
mov
or
fisubs
daa
movl
jne
adc
in
lret
push
sbb
into
mov
pop
mov
shll
jbe
jnp
xchg
xor
cmpsb
gs
loop
shll
dec
inc
and
mov
popl
movsb
rorl
sti
cwtl
jg
xchg
inc
mov
ss
call
imul
inc
scas
ret
mov
mov
mov
cltd
out
pop
dec
sub
jmp
adc
jno
outsb
pop
divb
xchg
addb
inc
fs
dec
mov
jp
int
mov
aad
xor
mov
leave
jge
mov
nop
pop
lods
iret
call
mov
popa
ljmp
xchg
call
dec
sbb
mov
add
lret
xlat
das
jbe
mov
je
and
inc
jg
mov
push
pop
xor
xchg
or
add
es
mov
push
lret
stos
and
in
bnd
pop
cmp
enter
pushf
in
mov
popa
and
mov
adc
jno
jno
pop
call
mull
and
mov
jns
inc
push
dec
jmp
in
repz
mov
icebp
or
and
iret
jns
jecxz
cmp
clc
aas
and
sbb
mov
fsts
push
cmp
cli
push
xorl
mov
pop
out
cs
jl
mov
fsubrs
dec
jo
push
inc
or
cmp
pop
xchg
mov
push
movl
jb
stc
aaa
lret
clflush
stos
push
addb
aad
dec
clc
subb
inc
test
mov
dec
test
push
add
sbb
leave
ret
mov
stc
sub
fistl
mov
mov
jmp
sbb
es
xchg
fwait
lahf
lods
hlt
inc
add
shl
sbb
popa
imul
test
mov
fbstp
jge
sbb
and
insb
es
lock
imul
bound
test
outsb
movsl
mov
rclb
adc
add
xchg
scas
fld
xchg
scas
lahf
push
loopne
rorb
ficoml
and
inc
add
or
mov
sbb
sub
jp
inc
jecxz
or
mov
les
jl
push
movdq2q
sti
push
fsubl
jp
loop
push
add
mov
outsl
daa
test
mov
pop
stc
outsb
icebp
insl
js
in
and
add
jp
pop
in
inc
pop
stos
cmp
movsb
mov
imul
in
xchg
lcall
xor
popf
jbe
mov
out
mov
xchg
leave
adc
adc
xchg
dec
mov
scas
shlb
es
insb
cmp
xchg
mov
or
in
mov
push
cmc
mov
pushf
das
nop
mov
jne
jno
lods
mov
repnz
sbb
imul
repz
dec
fisubl
enter
ret
push
sbb
pop
clc
xchg
or
loop
ficomps
lahf
cmpsl
xor
movsl
xor
mov
inc
cld
pop
pop
sbb
pushf
push
push
push
movsl
xor
int
int
mov
icebp
mov
movsb
inc
dec
test
pop
lea
scas
xchg
pop
movsb
jae
sub
sbb
lahf
pop
mov
enter
mov
ret
mov
fs
sbbb
xorb
sub
std
dec
lods
repz
std
ds
in
pop
jo
pop
and
jne
imulb
sub
gs
out
cli
add
insb
daa
dec
nop
and
movsb
popa
loop
mov
testl
gs
sbbl
mulb
js
cltd
nop
sahf
mov
scas
outsl
xor
loope
pop
lods
add
pop
fstpl
mov
sbb
sbb
lods
dec
leave
jb,pn
pop
adc
aas
ljmp
jno
and
dec
add
stc
or
jle
movsl
fidivrl
mov
fcmovbe
pop
adc
fs
cmp
cs
push
adc
cs
aam
cli
adc
mov
and
mov
fisubrl
popa
dec
outsl
adc
push
les
ss
mov
stos
add
pusha
cwtl
clc
or
lcall
add
dec
lcall
js
aam
insb
cmp
jae
loope
testb
test
cli
sub
jno
sbb
jmp
lahf
pop
imul
adc
or
add
les
cs
cmp
cmpsb
andl
mulb
outsb
rcr
mov
mov
adc
repnz
sbb
lock
fidivrl
insl
or
inc
pop
mov
or
jecxz
or
pusha
gs
les
cmp
xchg
jne
mov
out
out
in
arpl
mov
test
ds
fldt
push
fwait
movsl
dec
notl
adc
cmp
push
fbld
ljmp
pop
adc
cmp
daa
je
enter
jg
mov
pop
jecxz
sub
jbe
mov
pop
adc
mov
ror
sarl
fiadds
subb
aad
jns
mov
es
pusha
mov
popa
outsl
cmp
adc
push
mov
push
fucomp
repnz
mov
jb
adc
outsl
int3
sbb
out
push
adc
fildl
mov
cli
shl
lds
enter
or
push
cli
mov
sbb
imul
idivl
ljmp
pop
mov
sbb
and
inc
scas
xor
sahf
adc
cmpsl
lret
xchg
mov
xor
adc
vminsd
push
cmp
xor
add
bound
pop
jo
add
or
test
stos
ret
mov
sub
mov
cmpsb
xchg
dec
pop
add
addr16
jae
push
inc
xor
push
sbb
lahf
pop
mov
xchg
or
cmp
jno
ret
cmpsb
cltd
cld
jp
push
sub
lret
mov
ljmp
and
cmp
flds
fisttpl
pop
mov
adc
test
stos
or
fmul
push
cli
or
sarl
xchg
das
lret
sahf
fwait
cwtl
push
sarb
push
inc
dec
aad
aam
cmp
repnz
pushf
clc
aad
imulb
shll
mov
repz
add
xchg
adc
xchg
ds
lock
cltd
mov
test
sub
mov
loop
push
or
fiadds
inc
inc
or
ja
jno
test
dec
xor
out
test
mov
negl
xchg
leave
adc
xlat
adc
jmp
mov
jns
or
xor
pop
add
jl
arpl
and
mov
lret
ja
enter
dec
sbb
sub
lret
push
mov
jge
iret
or
rorb
lods
iret
imul
popa
fcmove
ret
mov
and
dec
xchg
jge
aam
add
ret
rclb
popf
scas
int3
cmp
mov
add
std
pop
push
imul
sbb
je
push
push
xchg
xchg
sbb
sbb
rorl
mov
and
inc
or
xchg
pop
mov
or
pop
andl
push
lock
rcll
loopne
jo
mov
jg
mov
repz
adc
sbb
loop
xchg
jge
cmp
cli
lahf
mov
pop
outsb
and
jle
pop
or
dec
cli
lret
in
pop
aaa
xchg
sti
jbe
rcl
mov
or
pop
or
add
arpl
push
xor
sbb
push
xor
jg
pop
mov
clc
mov
xor
das
mov
outsl
inc
sub
aaa
mov
lahf
mov
mov
shll
jb
xlat
jo
roll
test
xchg
lret
loopne
add
bound
mov
outsl
and
xchg
dec
xor
add
fstps
test
adcb
mov
sbb
jg
nop
imul
ss
inc
test
gs
xchg
jle
dec
adcb
sub
in
mov
lret
ret
push
test
int3
ljmp
loope
adc
in
int
dec
clc
arpl
push
pusha
dec
adc
cli
mov
xor
and
or
popa
jmp
mov
fcoms
mov
jmp
mov
cld
stos
jno
out
shll
cmp
popf
shrl
pop
mov
or
sbb
mov
push
sbb
mov
inc
rorb
lret
popf
dec
cmp
lret
jg
loope
add
lea
xor
in
pop
inc
test
orl
imul
and
fmull
subl
inc
and
cs
lea
jmp
pop
jae
rcrb
dec
cmp
test
hlt
xchg
jo
jg
cmp
inc
xor
stos
fs
mov
mov
dec
outsl
andps
repz
pop
sbb
rorl
dec
xchg
mov
inc
dec
stos
sbb
imul
pop
pop
mov
std
out
movsl
mov
pusha
inc
ss
dec
lret
sbb
or
pop
fdivs
push
cld
outsl
xchg
dec
ret
or
cmpsb
push
pusha
adc
or
mov
pop
int
cltd
push
jne
xor
sub
jmp
fcoml
mov
or
je
mov
stos
fptan
fisubl
mov
jo
stos
pop
adc
jg
xchg
mov
and
gs
cmp
mov
fisttpl
pusha
int3
insb
lock
movsb
andb
js
shll
cmp
fldl
adc
dec
fldenv
xor
je
mov
pop
cs
jmp
sbb
sbb
mov
fisubrl
sbb
add
stos
dec
stc
out
lahf
fbstp
mov
andl
lret
ja
push
mull
and
cmp
das
and
repnz
and
loope
mov
push
lret
leave
jns
pushf
cmp
sbb
sub
pop
xor
imul
xor
sub
pop
repz
ret
xchg
sub
xor
in
push
bound
mov
jo
inc
push
jmp
jbe
push
mov
add
sbb
sbb
dec
sbb
lret
sub
adc
xor
push
push
lock
arpl
inc
mov
and
xor
lcall
cwtl
je
dec
jo
add
pusha
div
mov
cmp
daa
fdivrl
fmuls
mov
mov
jne
data16
scas
mov
ja
push
sbb
push
inc
add
sbb
and
mov
inc
pusha
or
cmc
cmova
aam
lock
xor
mov
sarb
add
sub
mov
jmp
je
aas
adc
sub
test
jmp
stos
mov
cmp
xor
pop
and
push
loope
mov
cmp
mov
inc
pushl
xor
pop
mov
hlt
lea
clc
imul
mov
fs
jbe
mov
mov
sbb
cld
add
shr
lods
cmpsb
jno
mov
iret
inc
loop
aas
mov
or
ss
sub
or
push
xor
pop
sub
int3
stos
xor
push
fstl
stc
jb
es
addr16
or
lret
dec
mov
cmp
sbb
jns
dec
fs
xor
push
mov
scas
out
push
pop
jae
push
xchg
adc
subl
mov
call
jbe
mov
dec
movsb
xchg
jmp
sub
sarl
sub
insb
out
pop
or
dec
dec
push
int3
xor
cld
fisttpl
aas
aam
test
add
enter
sbb
sbb
fs
cs
add
shrb
push
push
add
push
call
outsb
push
mov
pop
hlt
js
lea
cld
lahf
pop
inc
ja
sbb
xchg
dec
popf
and
cmpsb
test
leave
dec
pusha
in
test
push
ud1
cwtl
out
dec
mov
adc
push
imul
movsb
mov
test
cs
or
cmp
inc
incb
andb
mov
into
mov
js
xor
lcall
add
jp
je
jge
push
lcall
mov
cmc
je
mov
push
lret
jno
into
mov
popf
and
pop
push
add
cmp
and
fwait
les
or
dec
mov
mov
cmp
popa
push
es
jecxz
ficoms
dec
xchg
ja
int
lcall
xor
insl
les
popf
xor
lock
fcmovbe
lcall
pop
xor
fisubs
jae
daa
and
daa
dec
cs
push
jg
jb
clc
mov
ja
rclb
pop
xor
jmp
push
push
cs
and
cmp
sbbb
loopne
pop
jb
cld
test
loop
movb
fs
imul
and
xchg
mov
popa
push
adc
push
aam
daa
mov
jp
or
add
enter
or
mov
pop
pusha
ja
call
mov
shrl
jbe
pusha
cmp
sbb
lea
adc
add
stos
aam
inc
jmp
inc
xchg
jp
repz
sub
nop
dec
out
and
pop
std
xchg
repz
andb
add
cmp
cmp
adc
aas
inc
repz
fwait
push
call
mov
xchg
push
insb
xchg
or
int
fildll
repnz
loopne
adc
stos
and
dec
sbb
add
pushf
sub
stos
lret
xor
cmp
jne
add
xor
cmp
mov
cmp
mov
aas
fcmovnu
mov
cmp
lods
inc
in
test
rorl
jecxz
lahf
mov
push
out
scas
cmpsl
flds
cmp
or
push
xchg
shlb
lock
cmp
fcoml
jnp
ds
mov
into
dec
setl
mov
xchg
mov
in
adc
mov
add
inc
cmp
je
and
xor
xchg
jno
insl
inc
xor
and
add
jg
push
jle
mov
adc
es
or
mov
inc
fbstp
bound
lret
fistpl
aas
add
xchg
xchg
dec
sbb
push
push
in
mov
mov
push
xlat
imul
mov
sub
repz
icebp
mov
push
xchg
push
orb
or
or
jecxz
mov
icebp
cmc
addb
mov
sbb
jb
push
imul
jg
dec
xor
pop
mov
adc
lret
fisubs
lea
push
imul
pop
push
dec
ljmp
jmp
pusha
and
push
stc
notl
dec
adc
fisttps
fdivs
ljmp
ret
inc
jg
pushf
les
fbstp
lods
cmp
dec
dec
in
jmp
adc
addb
loop
call
in
nop
jmp
xor
push
jno
loop
out
lods
jmp
fwait
repz
push
inc
imulb
adc
sbb
cmp
pop
ja
fcmovnu
mov
xchg
mov
aam
push
cmpsb
arpl
jle
fidivrs
or
out
fldt
jle
fsubp
mov
jns
mov
cmp
xor
cltd
ljmp
data16
add
mov
jecxz
inc
mov
sbb
subb
and
jmp
push
jg
sbb
pushf
ds
cmp
dec
push
pushf
fsub
fsubrl
mov
mov
stos
sarl
or
stos
inc
fstpt
add
push
inc
rcrb
jecxz
int3
or
xchg
mov
aaa
jno
xor
mov
jae
jb
push
cltd
pop
add
pop
xchg
arpl
enter
icebp
stos
int
fcmovb
cmpsl
sub
lods
icebp
xor
ret
pop
cmp
sbb
xchg
jg
lods
add
into
mov
cltd
es
daa
daa
mov
xchg
neg
and
stos
sub
mov
and
mov
lcall
enter
mov
sti
mov
add
imul
mov
imul
pop
ret
movsl
push
adc
fstpl
repz
adc
inc
jo
xor
add
or
jmp
cs
adc
mov
jb
inc
push
cmpsb
jb
fprem1
mov
jmp
xchg
and
enter
divb
pop
es
mov
pop
lods
add
push
outsb
adc
lret
dec
add
dec
mov
sub
enter
add
subl
sahf
mov
popf
mov
push
leave
shll
dec
inc
and
or
mov
adc
mov
roll
xorl
ss
mov
mov
shl
cmp
sarb
arpl
mov
sbb
popf
out
cmp
outsl
clc
xchg
adcb
xor
icebp
imul
arpl
dec
lret
inc
outsb
rorl
inc
push
xor
sub
test
cld
cld
adc
es
rolb
add
sub
mov
lods
and
dec
mov
faddl
fs
xor
xor
sbb
push
mov
je
insl
mov
mov
or
iret
cmc
sbb
push
or
xchg
les
fisubs
aam
fisubs
ljmp
nop
cmp
xor
push
sbb
out
push
mov
dec
les
pop
roll
aam
xlat
out
mov
pop
int
mov
ss
aam
mov
adc
fadds
mov
sub
insb
fistpl
or
lcall
call
jae
and
nop
mov
imul
fldcw
lock
jbe
mov
cwtl
sub
js
mov
pop
or
dec
or
add
jg
pushf
sub
cmpsb
or
cmp
adc
push
faddl
sub
add
dec
mov
xchg
mov
ljmp
push
aam
adc
idiv
mov
mov
jb
inc
xchg
icebp
rcr
add
push
jns
pop
shll
dec
and
jne
mov
xor
pop
test
xor
mov
out
fildl
rcr
adcl
xchg
int3
adc
jns
push
jae
sbb
push
test
jecxz
data16
and
inc
inc
repz
or
insb
add
fisubrs
insb
pop
je
push
jno
test
mov
loop
or
push
dec
inc
pop
push
lret
pushf
inc
subb
cmpsb
xor
aad
cmp
rcll
pop
xchg
fs
sbb
jecxz
js
enter
push
jge
imul
fisttps
cmp
gs
std
jbe
adc
inc
sbb
mov
std
gs
push
into
es
cwtl
out
ss
sbb
sahf
icebp
jns
and
push
std
mov
ficomps
mov
int
fldt
jl
adc
inc
aad
sub
sub
fnstsw
call
pop
stos
aaa
insl
sub
insb
sub
scas
cs
adc
xor
push
aas
cltd
inc
mov
or
and
lahf
fcmovnbe
fnsave
std
jno
mov
std
loop
push
loop
lds
push
fisubrs
mov
cltd
mov
dec
or
sub
mov
xor
jo
sub
push
pop
mov
jmp
inc
xor
clc
sub
pushf
xchg
xlat
dec
adc
mov
pop
lods
insb
push
out
xor
out
xor
ja
xor
stos
sarb
jge
cld
push
xor
xlat
scas
ds
sbb
mov
js
dec
or
call
std
xor
xorl
add
das
ds
push
popf
mov
fisubl
outsl
sbb
enter
sarb
repz
pop
ja
cs
nop
cmp
lods
jecxz
cs
pop
mov
dec
aam
jp
mov
cmp
pop
fimuls
sub
shll
outsb
sbb
addb
inc
stos
gs
je
lret
push
ret
xchg
and
push
cmp
das
pop
jp
push
cmp
shr
sbb
fadds
lods
push
mov
jae
ja
jmp
add
sub
daa
adc
cs
mov
fnstsw
inc
push
insb
and
dec
ret
lahf
mov
push
incl
arpl
and
pop
lcall
mov
pop
fs
sub
out
sbb
subb
int
push
mov
notb
fcoml
mov
stos
xchg
vpextrw
lds
aad
dec
mov
cmp
lret
fs
and
into
leave
ss
jne
out
pushf
subl
fsubr
dec
mov
mov
sbb
in
xlat
or
mov
push
sahf
xchg
fcoms
in
or
and
lea
xchg
inc
xor
jg
out
lahf
sahf
mov
xor
test
sbb
and
repz
int3
pop
aam
sbb
or
pusha
ja
hlt
ret
and
dec
xchg
jbe
mov
mov
arpl
cmp
add
or
out
test
xchg
rorb
sbb
xchg
fidivrs
in
add
repz
mov
jle
cmp
and
je
hlt
mov
jg
pop
data16
inc
inc
and
cmp
xor
ret
jl
or
mov
mov
jg
lahf
mov
lods
mov
lods
call
dec
inc
repnz
fcompl
loop
stc
adc
scas
rorl
sbb
je
sub
dec
pop
arpl
ret
lcall
sub
cmp
add
mov
or
insb
or
cmpl
inc
add
les
or
outsb
outsb
movsl
dec
pushf
ds
pop
shll
mov
jno
and
sub
xor
dec
pop
mov
inc
inc
push
add
sub
dec
out
or
xchg
test
je
and
cmp
enter
sub
or
xorb
xchg
mov
sti
idivb
cmpsl
in
std
and
pushf
cmp
seta
fwait
jge
push
test
sub
pop
dec
in
aad
mov
sbb
mov
xchg
mov
dec
int
add
stc
mov
add
loopne
imul
shrb
push
cmp
jl
mov
jmp
cmpsb
xchg
int3
pop
sub
out
xchg
sub
aad
add
jecxz
enter
rclb
adcl
loop
jp
mov
push
outsb
push
jecxz
pop
lock
mov
xor
nop
fiadds
bound
lds
pop
gs
jnp
incb
pop
mov
adc
cmp
stos
jne
jl
scas
aam
ret
mov
xchg
je
xor
lock
jmp
mov
mov
imul
xor
cmp
xor
mov
mov
movsl
fsubr
shrl
sbb
jnp
sbb
roll
ljmp
das
repnz
and
cmp
inc
cmp
and
cltd
xor
pop
mov
mov
cld
inc
popa
mov
inc
mov
loope
pop
rcr
imul
insb
test
xchg
fistps
jns
cli
mov
mov
lods
fwait
jbe
and
rcrl
pop
mov
lret
loopne
cwtl
cmp
pop
stos
enter
xchg
dec
fildl
out
dec
lcall
or
add
repnz
cmovg
add
push
xor
mov
out
and
add
mov
aam
dec
adc
pop
xlat
push
gs
cmpsb
mov
mov
cli
xor
rcrb
call
or
neg
sub
test
orl
into
xor
jns
inc
and
fnstenv
jbe
dec
pop
or
mov
jns
xchg
mov
pop
icebp
and
xor
syscall
jp
sbb
add
xor
pop
mov
mov
ss
es
rcr
mov
fidivrl
data16
cmp
jno
mov
and
sbb
adc
pop
fsubl
insb
fimull
addr16
stc
sti
xor
nop
dec
mov
dec
mov
dec
xchg
insl
inc
xchg
jle
les
mov
pop
mov
cltd
fsubrl
fsubl
mov
inc
cmpl
icebp
push
dec
dec
xor
or
lcall
test
inc
jecxz
xchg
fnstsw
add
lahf
jbe
or
out
sbb
xlat
lock
in
pop
xor
in
add
or
iret
xchg
out
cmpsl
mov
or
cli
pop
iret
lahf
icebp
in
mov
stc
clc
lret
mov
jl
insl
push
sbb
in
inc
and
loope
sbb
daa
sbb
rorl
add
xchg
jmp
hlt
movsb
sub
mov
jge
xchg
into
cmpsl
add
repz
jge
add
mov
mov
pop
dec
rorb
into
dec
ror
test
dec
sub
daa
shl
in
dec
fisttpl
or
orl
test
jae
dec
cmp
dec
push
lods
jle
add
inc
push
negb
cwtl
aad
push
repnz
push
icebp
jnp
das
xor
xchg
xor
sahf
inc
pop
pop
cli
scas
mov
stos
inc
leave
jnp
pop
sbb
adcl
fidivrl
ja
mov
push
cmp
pop
adc
mov
or
aam
fstpl
popl
gs
push
addl
iret
imul
rcl
mov
rorl
divl
pop
je
push
popf
sub
jbe
cmc
int
add
dec
pop
jle
rclb
fcmovnbe
jbe
pop
pop
js
mov
fsubrs
lret
mov
inc
mov
sti
shlb
sub
addr16
xor
gs
mov
add
iret
addr16
inc
inc
lods
push
js
push
andl
mov
jl
mov
outsl
inc
push
aad
inc
xor
loop
add
stos
push
mov
cmp
jle
pushf
cmp
mov
jle
pushf
enter
sti
mov
jp
cs
lahf
frstor
lods
lret
xchg
outsb
nop
cmp
adc
xor
pushf
icebp
fadds
jns
repnz
test
jnp
inc
mov
stc
and
push
add
xor
inc
sub
loop
mov
es
adc
lea
and
and
je
or
sub
xor
movsl
adc
jno
xchg
inc
out
inc
cmp
out
pop
mov
sbb
jnp
notl
pop
lds
int
sbb
add
xor
mov
ljmp
notl
jmp
or
movsb
rorl
cs
addr16
leave
ret
es
add
sbb
cmpsl
lret
adc
push
test
iret
sub
and
fadd
stc
in
or
push
icebp
cs
rclb
jne
data16
scas
jb
imul
in
push
daa
or
jno
lahf
inc
dec
jb
les
lods
icebp
add
fldt
adc
bound
add
js
frstor
inc
pop
dec
es
mov
cmp
mov
dec
test
enter
nop
mov
sbb
aaa
lcall
push
es
cmp
xchg
add
inc
fadds
iret
push
jmp
mov
pop
rclb
cwtl
pop
insb
fisubs
sbb
test
dec
ret
mov
test
sbbl
add
rcrb
xlat
mov
add
mov
pop
mov
bnd
sub
test
pop
mov
mov
lret
xchg
orb
mov
inc
roll
cmpl
sbb
leave
aas
mov
dec
push
fdiv
loope
mov
mov
clc
lods
aad
shlb
xor
add
cmp
mov
in
and
push
and
fiaddl
or
pop
or
testb
pop
push
inc
and
cmc
jecxz
jbe
add
jmp
inc
out
mov
jl
and
dec
or
outsl
mov
or
mov
pop
fldenv
pop
mov
test
negb
sub
add
add
bound
jge
scas
add
test
push
mov
cmp
mov
cmp
mov
enter
inc
inc
jecxz
inc
mov
mov
push
in
mov
je
mov
fistl
scas
or
lahf
jmp
repz
push
mov
loope
or
aas
in
jecxz
jle
add
push
movsl
roll
pop
out
push
push
add
cmp
pop
in
adc
negl
hlt
jge
shrl
sbb
cmp
sbb
jb
addl
add
sub
fdivrs
fcomps
mov
xchg
andl
fcompl
int3
testl
adc
pop
popa
cmp
aad
or
mov
fstl
jne
cmp
ret
cs
xlat
xchg
lret
jbe
xor
mov
or
xor
iret
adc
push
mov
mov
ss
dec
xor
fisttps
cmp
iret
mov
sbb
push
push
scas
bound
ficoml
jne
xor
and
imul
push
test
movsb
push
mov
sahf
fadds
mov
imul
lock
sub
clc
shr
in
push
and
nop
icebp
push
call
pusha
inc
inc
xor
pop
push
or
pop
jb
jmp
test
mov
or
mov
mulb
push
xchg
mov
mov
sub
jge
rcl
cs
ret
test
jae
mov
mov
mov
push
addr16
ret
fdivrl
pop
cmp
stc
or
popf
insl
mov
mov
loope
pop
sbb
mov
xor
sbb
xlat
int3
xor
or
inc
add
or
enter
das
movsb
add
outsl
out
sub
push
add
les
repz
pop
jl
fadds
fcomp
inc
loopne
cmpsb
imul
test
mov
or
push
aas
addr16
inc
enter
lock
imul
dec
aaa
js
jp
pop
cltd
mov
sbb
cli
imul
xor
icebp
into
lcall
ret
inc
jp
push
ret
lret
cmp
jg
es
fcomps
cld
dec
std
out
or
lea
aad
xchg
repz
xor
sub
sub
aad
call
xchg
mov
dec
jl
rcll
xor
mov
push
inc
jne
test
xlat
hlt
ret
sti
xor
fcmovu
shrb
cmp
das
mov
outsb
adc
stos
dec
test
add
mov
dec
in
inc
jne
mov
cwtl
aad
in
sub
cmp
sti
xchg
or
frstor
and
movsb
add
jno
inc
cld
adc
inc
pop
or
std
dec
dec
jnp
aaa
daa
lahf
loopne
add
sti
scas
adc
lret
add
jbe
or
shrb
int
popf
add
push
and
in
vpaddusb
fnstsw
sbb
adc
jmp
gs
inc
insl
pop
xchg
sbb
mov
ret
das
cmp
push
mov
dec
int
pop
stos
popa
in
adc
mov
pop
test
sbb
cmp
in
dec
mov
push
dec
xchg
xor
mov
pop
jl
es
sbb
dec
dec
sarl
and
fsubr
cmp
xor
into
add
xorl
movsl
icebp
arpl
outsb
mov
mov
hlt
xor
xchg
pop
and
outsb
mov
sti
out
ret
ret
push
or
ss
fimuls
add
leave
movsb
xor
lret
test
inc
cmpsb
cmpsl
add
fcmovnu
insl
mov
pop
sti
pop
jmp
enter
iret
cli
sbb
xor
mov
jmp
push
imul
sub
iret
cmc
mov
call
inc
pop
jle
fscale
jb
pop
jge
mov
sarb
push
setno
daa
lods
xchg
scas
mov
push
dec
mov
rorb
test
cmp
outsb
push
and
pop
adc
stos
in
arpl
mov
data16
sub
push
les
cmp
pop
mov
dec
mov
dec
iret
popl
push
imul
fcompl
ret
cmpsb
aas
cmpsb
sbbb
into
sbb
fwait
cmp
push
scas
out
mov
inc
mov
mov
cmpsl
sub
mov
test
aas
cmp
cmpsb
aam
xor
fstp
inc
pop
push
jae
loopne
lahf
mov
xor
out
gs
ds
jnp
stos
inc
pop
mov
jb
adc
aaa
into
imul
pop
cmpsb
adc
inc
out
lods
inc
inc
xchg
jl
lcall
sub
sbb
fidivl
mov
rcrl
mov
inc
jg
xor
out
ret
push
gs
lahf
ljmp
mov
xlat
mov
out
dec
pop
fs
out
imul
int
test
mov
ljmp
into
test
inc
stos
test
jb
push
jl
xchg
fs
call
cmp
xor
cli
cwtl
add
fmull
js
xchg
and
mov
or
int3
mov
and
fstpt
and
outsb
pop
pop
icebp
push
outsl
mov
mov
pop
into
je
imul
cs
mov
ja
das
fmulp
cmp
dec
stos
cmp
insl
push
gs
lods
xor
insb
nop
enter
and
stc
rolb
push
xchg
adc
repnz
sbb
sub
cmp
arpl
popa
adc
inc
mov
mov
rcrl
mov
inc
and
inc
popl
xorb
mov
in
ss
sub
push
sub
add
test
mov
push
in
sbb
and
mov
mov
xchg
jecxz
pop
cltd
cmp
andb
jecxz
ret
push
mov
cmpb
fnstenv
mov
jle
pop
hlt
cmpsb
gs
outsb
pusha
mov
inc
rol
add
and
mov
mov
cltd
adc
leave
stos
lahf
push
das
int3
out
pop
iret
add
xor
aaa
lds
data16
fsubrs
mov
add
xor
adc
arpl
std
fsubrs
sarl
in
cmpl
pop
outsb
dec
cld
sub
pop
les
add
xchg
call
pushf
sub
mov
push
xchg
or
outsl
xor
pop
arpl
push
into
xor
sahf
push
inc
jmp
dec
adc
ds
out
or
fldt
pusha
mov
cwtl
xchg
test
adc
rorl
sbb
xor
jno
lea
dec
out
scas
jl
stos
add
fcomps
test
outsl
mov
mov
dec
sahf
in
ja
sub
imul
pop
aaa
addr16
stos
jmp
ret
fdivrs
negl
xchg
ss
add
sbb
insb
inc
xchg
mov
dec
rorb
in
cmp
test
faddl
jno
jle
cld
dec
adc
cltd
out
mov
dec
jno
aas
and
inc
fstps
mov
dec
push
mov
loope
int3
dec
imul
rclb
add
int
movsb
inc
fisubs
fisubrs
out
mov
cs
xlat
insl
cmp
pop
and
adc
fiadds
inc
sub
nop
imul
mov
lret
dec
adc
adc
shll
mov
mov
mov
movl
jg
in
add
sub
test
gs
gs
sbb
jle
jns
push
je
out
icebp
sbb
or
jbe
push
mov
jecxz
testl
jecxz
inc
data16
push
mov
lahf
fwait
cmp
cmp
into
cmp
xchg
mov
inc
xchg
jae
shlb
mov
lock
xchg
shlb
in
cmp
rolb
lock
cs
std
mov
lods
add
ficoml
jb
popa
dec
jmp
jmp
pop
sbb
push
fmuls
test
fsubrs
pop
xor
jle
aad
cwtl
xor
adc
pop
mov
push
int
mov
pop
or
cmp
fisubrl
xor
aad
jle
leave
dec
sbb
loop
popa
fdivl
idivb
jae
das
inc
xchg
fcmovne
mov
mov
test
cmc
negb
inc
pop
or
outsb
and
mov
outsb
and
xor
jg
push
push
pop
mov
cmpl
dec
shll
aas
inc
shlb
mov
pop
pop
xchg
lea
repnz
or
jp
ret
push
stc
jge
cltd
lods
rcrb
pop
mov
aad
push
mov
ja
test
fisttps
xor
add
iret
out
or
jmp
ja
jb
ret
mov
addr16
or
lds
sub
or
adc
xchg
pop
punpckhwd
or
pop
push
jmp
add
addr16
sub
pop
sti
lcall
dec
loop
insb
les
mov
jo
xchg
in
push
mov
mov
xchg
or
pop
mov
xor
pop
sbb
mov
int3
sbb
fidivrl
push
adc
daa
jne
into
loop
jl
jb
sub
mov
mov
out
gs
inc
mov
push
ret
dec
pop
pusha
cwtl
push
scas
fistpl
add
xor
test
mov
adcb
mov
sub
xchg
add
movl
push
stos
dec
lcall
cmp
add
xchg
stos
fildl
or
into
pushf
cmp
stos
mov
mov
int
mov
inc
loopne
jns
testb
adc
aaa
jbe
cmpsb
sbb
mov
loope
mov
arpl
dec
call
jp
jp
mov
cld
sub
inc
icebp
aam
sub
pop
aaa
mov
enter
or
adc
push
push
mov
shlb
loopne
leave
stos
js
mov
dec
mov
rcl
pop
inc
pop
loop
jmp
jp
pop
mov
push
cmp
sub
in
or
mov
cmp
mov
adc
dec
mov
es
pusha
jo
cmp
pop
lock
orl
inc
mov
mov
jnp
dec
and
in
ret
test
xchg
addr16
daa
cmpsb
sbb
test
push
jle
mov
xor
xor
inc
push
cmp
inc
jno
out
dec
fnstcw
cwtl
xchg
fwait
lret
dec
outsb
mov
mov
mov
sbb
mov
and
into
add
inc
push
notb
or
roll
stos
jne
sub
mov
dec
repnz
xorb
mov
dec
ja
xlat
scas
xor
in
out
inc
pop
mov
adc
nop
dec
xor
lods
iret
ss
fnstenv
xlat
inc
loopne
cmc
insl
stc
mov
imul
jecxz
inc
mov
in
cmp
xchg
loop
in
cmp
sub
mov
insb
out
lock
push
cmp
jp
cmp
mov
push
imul
iret
frstor
nop
aad
mov
repnz
pop
adcb
push
lret
out
ds
mov
in
or
dec
in
icebp
xchg
sub
cmp
adc
lret
flds
pop
xchg
pusha
or
fistps
dec
stos
das
adcb
adc
cmp
jb
mov
fists
in
add
insb
and
inc
pusha
jp
pusha
xor
imul
repnz
xchg
and
ljmp
xor
push
outsl
addr16
aad
adc
aas
jo
sbb
cmpsl
pushf
push
data16
jbe
test
sbb
dec
stos
mov
cmp
stos
mulb
lds
fs
mov
arpl
push
and
lock
cmp
mov
xor
mov
pop
inc
cltd
cli
sbb
cmp
jb
mov
call
xchg
decl
sbb
imul
icebp
cli
jbe
pop
xlat
popa
adc
data16
adc
mov
add
cmp
enter
pop
add
imul
adc
xchg
sbb
rcr
push
or
mov
in
dec
mov
stos
add
popf
test
cmp
in
jno
dec
and
out
pop
aad
adc
rcll
pop
sti
dec
adc
lods
adc
dec
push
aad
cmpsl
fdiv
fmuls
ljmp
sar
xchg
test
jbe
inc
mov
xor
pop
mov
in
das
leave
loopne
jecxz
rorb
adcl
lahf
push
push
xchg
xor
dec
shl
jbe
cld
add
scas
mov
pusha
xchg
add
xor
mov
scas
adc
and
lret
orb
rclb
xor
ds
jb
jo,pn
pop
inc
adc
pusha
into
push
mov
mov
jbe
inc
sbb
adc
std
mov
stos
lret
fsubs
popf
mov
rorb
push
gs
pop
loop
mov
xchg
push
fstpl
js
lret
sub
push
pusha
mov
and
jne
rep
fistpl
pop
ret
insl
imul
rcll
in
popa
xchg
mov
les
fists
xor
lahf
adc
or
mov
jge
cmpsb
out
jge
or
mov
das
paddb
sub
mov
sub
dec
loopne
scas
out
mov
sbb
dec
das
mov
cmp
stc
add
sub
call
inc
loopne
cmp
xor
jle
adc
push
fcomps
dec
xor
sub
jl
mov
pop
sbb
lods
xor
outsb
jnp
push
fstpt
in
xor
jg
out
mov
sub
lret
je
icebp
jg
sub
cmp
cmpsl
add
ss
ss
jg
stc
ljmp
dec
mov
in
xchg
lods
int
pop
hlt
mov
mov
add
jnp
push
je
pushf
inc
stos
das
lret
inc
fwait
insb
insl
int
data16
fsub
jl
cmp
mov
and
mov
dec
or
xor
lret
rorl
or
adc
cmpsb
mov
add
shlb
and
test
adc
mov
movsl
popf
cld
adc
adc
jp
inc
and
sbb
dec
cmpsb
adc
jle
or
pop
sub
or
pop
mov
stc
pop
pop
cmp
xchg
pop
sub
incl
xor
es
aaa
sub
mov
aas
add
cmp
in
sub
jns
jne
call
push
es
add
cli
out
std
lea
fdivrp
mov
push
mov
xor
and
inc
push
cmpsl
fstpt
or
jo
and
add
das
stos
aaa
fsubl
jne
mov
or
push
mov
out
or
hlt
mov
xchg
inc
mov
mov
pop
gs
jecxz
pusha
shll
add
mov
mov
orl
xorl
lds
mov
es
pushf
xchg
ljmp
loop
inc
clc
push
popa
roll
insb
dec
sbb
adcb
mov
cmp
xorb
arpl
mov
lret
mov
and
jo
inc
iret
rclb
mov
mov
jge
dec
ljmp
mov
xor
push
aad
insb
inc
push
add
or
je
mov
mov
ret
and
movsb
xor
inc
leave
gs
fimuls
stos
or
pop
outsb
test
inc
push
xor
jo
sub
test
pop
mov
imul
mov
pop
push
and
in
pop
adc
out
mov
jmp
or
adc
mov
pop
std
jmp
xchg
xchg
dec
testl
xor
fsubrs
mov
add
shll
js
rep
movsl
or
cmc
out
push
popf
jne
push
or
push
mov
sub
xchg
or
adc
repz
js
xlat
xchg
cmp
outsb
repz
lret
pop
std
push
mov
inc
lret
mov
or
mov
inc
mov
inc
int3
aad
ljmp
sub
pop
fldt
push
sbb
fisubs
mov
pushf
push
jg
fstl
arpl
imul
es
cmp
hlt
leave
ret
inc
daa
call
out
xor
mov
mov
notl
fistpll
fsubr
sti
test
adc
rorl
gs
stc
std
stos
lcall
jmpw
add
outsb
push
and
popf
push
inc
dec
int
xor
sub
es
outsl
cmp
jecxz
sub
or
cmp
pusha
call
cmp
iret
roll
out
dec
popf
test
xchg
fidivrl
mov
repz
les
add
lret
sbb
push
lock
pop
mov
mov
jnp
jae
ret
adc
fdivl
stos
int3
xchg
imul
mov
ret
or
sbb
daa
imul
push
loop
or
jnp
fstpl
pop
jb
jnp
cld
xchg
lds
or
mov
lahf
push
fsubr
pop
or
out
push
xor
push
outsl
add
push
or
fidivrl
test
fstps
cwtl
ja
repz
je
jle
cs
shlb
pushf
xchg
jp
rol
mov
add
dec
lea
les
cs
nop
std
mov
cld
imul
push
add
daa
mov
clc
inc
lret
xchg
std
dec
add
push
pop
jnp
xchg
mov
int
cmp
repnz
push
dec
lods
ss
sahf
out
sbb
cmp
or
mov
pop
sbb
mov
pop
imul
or
rorb
push
negb
popf
rcr
lock
in
lret
lahf
nop
mov
fs
shlb
sbb
mov
pushf
jp
add
das
xchg
and
pop
bound
ja
sbb
push
ret
pushf
pop
inc
test
or
cmpsl
or
sub
inc
fst
xlat
adc
inc
lock
int
outsl
aaa
js
mov
cmp
cmp
lea
xchg
sub
ror
xchg
sahf
popa
and
mov
popf
fdivrs
mov
dec
mov
mov
lahf
or
adc
cmp
enter
push
add
movb
call
add
test
jnp
jle
adc
je
icebp
pop
push
mov
inc
fimuls
xchg
jmp
orl
sub
aam
mov
scas
call
cmp
lods
js
jp
xchg
iret
out
mov
mov
movsl
arpl
lds
popf
stc
sub
out
fs
or
outsl
mov
xchg
out
jae
or
cmp
push
xchg
outsl
iret
and
movsl
xchg
mov
pop
push
or
or
sbb
or
pop
test
lock
cli
mov
dec
stos
adc
mov
aad
mov
orb
dec
je
ret
inc
pop
or
xchg
test
hlt
pop
mov
lea
mov
shlb
jns
and
fldenv
das
pushf
in
jo
add
inc
and
jno
and
rcll
repnz
cmp
cmc
movsb
rcrl
insb
out
xor
js
popa
int3
sub
out
es
add
stc
xchg
inc
js
xchg
mov
call
push
lods
hlt
mov
cmp
mov
xor
lcall
cmp
mov
cmp
mov
xchg
es
pop
or
in
jp
leave
add
gs
ret
fcoml
cs
push
cmp
clc
sbb
jle
cmp
dec
jp
jmp
lret
xor
inc
test
cmp
mov
and
pushf
stos
mov
xlat
inc
js
addb
sbb
popf
add
arpl
fcomps
xor
and
jbe
xlat
xchg
or
jno
and
and
pop
and
test
sbb
dec
xor
in
ja
iret
cmp
sub
insb
mov
mov
out
jns
js
jp
add
shll
out
sub
mov
les
sbb
adc
sbb
jmp
lods
icebp
cmp
xchg
adc
push
xchg
popf
out
or
ja
mov
dec
jae
dec
dec
addr16
das
inc
pop
adc
iret
sbbl
mov
fidivrl
pop
rcrl
or
stos
cmp
inc
pop
adc
lret
dec
and
cmpsl
mov
icebp
cmp
dec
mov
cli
xor
gs
loop
int3
cwtl
pop
mov
push
mul
and
loopne
sbb
mov
xchg
movsl
add
insl
mov
xor
popf
jns
out
daa
mov
mov
push
mov
jge
data16
cwtl
lcall
xchg
out
fwait
incb
jle
inc
xor
mov
orb
adc
ss
cmp
pop
pop
or
mov
xchg
out
add
pop
adc
cmp
xor
lds
xorb
dec
in
xor
or
popa
je
push
sahf
es
xchg
push
add
popa
imul
jne
cmpb
adc
mov
mov
fistpll
out
mov
bswap
sbb
cmc
push
imul
out
shll
shll
jg
lods
hlt
inc
xchg
mov
mov
ds
scas
push
xchg
mov
sahf
mov
jge
jb
push
addr16
fdivrp
xor
cmp
xchg
mov
and
push
in
hlt
mov
rorl
je
ss
mov
vpaddq
cmp
xchg
addr16
xor
insl
test
pop
add
lds
push
xor
jbe
push
out
lea
mov
es
xchg
add
scas
xor
or
in
daa
js
mov
data16
test
mov
xchg
das
fs
pop
dec
mov
xchg
push
cmp
push
lret
lods
mov
insl
or
pop
sub
inc
adcb
sbb
add
negb
cmp
adc
ds
mov
jno
popf
cs
pop
mov
mov
jge
sbb
cmp
ret
outsb
sbb
fimuls
xlat
enter
jns
push
imul
loopne
fadds
cltd
fisttpl
imul
int3
push
add
scas
fwait
dec
int
fs
cld
adc
add
pop
insl
inc
lds
into
xorb
lahf
mov
fldl
sbb
cli
jno
popa
sbb
inc
cmpsb
jno
repnz
out
dec
adc
fisttpll
neg
in
popa
ret
hlt
addr16
je
inc
add
xchg
mov
xchg
push
mov
push
pusha
and
pop
in
pop
jns
jl
jecxz
dec
leave
test
cmpb
xchg
and
add
ret
in
aaa
xor
ss
adc
in
insl
push
addr16
test
stos
mov
repnz
out
sbb
and
add
inc
shrb
aaa
nop
das
imul
fcompl
dec
mov
gs
jp
sarl
inc
clc
cwtl
lcall
add
aaa
sub
xchg
or
mov
pop
mov
sub
icebp
and
lds
push
mov
lcall
cmpsl
lret
push
or
mov
cmp
xor
cmp
mov
jne
mov
nop
test
pop
add
je
sub
bound
in
loope
lods
imul
stos
ja
outsl
mov
pop
xor
xor
fisubs
out
adc
insb
ret
aaa
mov
cmp
jp
jl,pt
lds
mov
or
push
arpl
scas
pop
sbb
aas
mov
push
and
test
pusha
xchg
in
sub
les
popf
cmpxchg
dec
mov
ljmp
xchg
loopne
cmp
ja
enter
pop
jae
dec
pop
add
fnstcw
pop
push
bts
push
jno
jo
push
xchg
push
addr16
xor
pop
sbb
aas
leave
repnz
test
mov
pop
lret
add
testl
lea
insl
mov
push
mov
cmc
rcrb
adc
push
push
jecxz
ljmp
les
ss
adc
pop
inc
das
shrb
stos
mov
mov
ja
jg
mov
and
int
cmp
call
das
sub
jge
pop
lret
mov
ret
jo
mov
sar
jne
movsl
push
daa
mov
push
mov
or
xchg
jns
jmp
mov
or
add
insl
sub
xor
xor
popf
cs
mov
into
repnz
mov
andl
push
shrb
int3
sub
xlat
jle
xchg
nop
sbb
mov
dec
adc
jb
xorl
sbbl
in
rcrl
outsl
inc
push
dec
lock
insb
adc
or
das
in
ds
les
ljmp
or
sbb
je
xchg
int3
data16
dec
jge
fdivl
leave
pop
mov
and
scas
test
sub
jle
jecxz
dec
cli
cmpsb
push
adc
cli
mov
dec
mov
mov
nop
sub
xchg
out
out
rolb
mov
lods
lods
and
jmp
mov
sahf
outsb
push
push
xchg
xchg
ja
jmp
and
xchg
mov
mov
mov
iret
aas
into
bound
call
nop
mov
sbb
movsb
jl
stc
sbbl
pop
jo
add
mov
mov
out
xor
pop
xorl
inc
test
sub
mov
push
pop
mov
mov
lcall
sbb
push
insb
mov
aad
fs
xchg
addl
dec
lods
mov
sub
dec
inc
pop
outsl
jp
jg
xor
mov
inc
imul
push
or
cmpl
icebp
or
aam
dec
mov
push
inc
add
out
inc
lret
jl
inc
xchg
jg
xchg
mov
jae
cmp
std
jp
mov
enter
push
inc
das
fs
mov
or
push
inc
movsl
cmc
mov
leave
xchg
pop
add
add
push
aam
scas
clc
call
repnz
mov
mov
iret
add
mov
dec
stc
notb
fwait
std
push
push
aam
inc
jb
push
pop
lds
sub
jl
js
out
outsb
pop
lahf
dec
push
push
jns
enter
push
and
cmp
dec
mov
std
shlb
ljmp
push
mov
adc
dec
sub
pushf
loope
dec
rcll
xor
xchg
push
ret
in
mov
xchg
daa
ret
sbb
jnp
adc
ret
mov
sbb
push
jno
lea
or
fwait
xlat
xor
in
mov
lds
aaa
sbb
add
dec
mov
inc
gs
mov
test
sub
cmp
sbb
or
add
mov
dec
push
dec
xchg
movsl
cwtl
sub
and
ficompl
push
lds
mov
lods
insb
sbb
sub
dec
jge
bnd
mov
notb
ret
jb
int
pop
mov
jno
icebp
jg
in
dec
cmp
in
mov
xlat
ljmp
fwait
out
cltd
xchg
add
cmp
inc
roll
mov
std
divl
mov
fsubr
shl
pop
adc
mov
xor
mov
sbb
je
in
xchg
movsl
fbstp
ds
cld
mov
mov
pop
daa
adc
into
dec
pop
or
addr16
sti
outsl
xor
movsl
dec
shrl
fldcw
stc
jle,pt
sbb
xor
sbb
rcll
push
arpl
or
push
in
sbb
bnd
sarl
clc
fisubrl
push
imul
jb
fdivl
daa
scas
cmpsl
add
je
add
jbe
dec
js
xlat
ss
xchg
and
movsl
push
popf
mov
mov
jno
loopne
enter
div
jmp
roll
xchg
inc
lods
xchg
push
add
xor
jle
add
add
push
inc
add
int3
std
sub
lahf
cmp
int
adc
cltd
aam
jnp
sbb
inc
dec
sub
arpl
push
data16
and
mov
pop
xchg
dec
jns
push
pushf
cmp
test
pop
imul
lds
jae
shlb
leave
push
inc
and
add
dec
fdivrs
fmulp
std
int
adc
add
bound
call
es
lcall
lahf
fsts
movsl
sbb
inc
pushf
sahf
or
jg
push
fdivrp
ret
xor
and
mov
xchg
imul
in
sarb
mov
outsb
popl
rcr
sbb
mov
out
mov
pop
les
add
aam
adc
shrb
out
xchg
imul
cwtl
xor
inc
cltd
push
test
adc
aam
sbb
fisttps
lods
arpl
xlat
ljmp
shll
call
dec
pop
clc
mov
pop
inc
dec
out
je
push
divl
xor
jg
xchg
ds
scas
rcll
ss
bound
int
mov
pop
pop
repnz
or
or
ss
fs
or
mov
repnz
ds
pop
popa
push
pop
cmp
mov
mov
out
enter
jns
jecxz
inc
cwtl
ret
add
cwtl
adc
jle
loope
mov
lods
add
mov
inc
mov
bound
jbe
mov
popa
fcomi
push
shlb
in
test
pop
sub
in
add
stos
aad
arpl
into
out
lret
mov
popf
into
loop
mov
in
out
push
add
aaa
dec
jmp
gs
adc
ljmp
jbe
dec
enter
int3
xchg
pop
dec
bound
data16
in
mov
lahf
mov
cmp
cmp
mov
sbb
sub
mov
test
add
or
jge
xor
imul
cmpsb
xor
fsub
push
cmpsl
lcall
cltd
fdivs
les
xchg
sub
inc
mov
pop
mov
dec
inc
cmpb
adc
push
xor
xchg
loop
fs
fiadds
in
cmp
incl
mov
fldcw
cltd
sbb
pushf
mov
mov
push
into
cmp
sarb
loopne
and
cmp
or
sub
mov
adc
ret
adc
shl
xor
lock
push
ret
pop
in
mov
aas
repnz
adc
push
je
mov
sbb
cmp
orl
jmp
xchg
adc
push
add
jge
loopne
cmp
loope
xchg
cwtl
cmp
pop
xchg
adc
loopne
mov
add
lods
gs
cmp
cltd
aam
ljmp
mov
add
adc
and
clc
cmp
lahf
repnz
xor
xchg
js
mov
movsb
clc
popa
out
mov
gs
insb
push
fwait
add
sahf
iret
push
dec
xchg
or
sub
lods
pop
and
in
push
mov
in
les
mov
icebp
ds
sbb
addb
xor
pop
xor
ljmp
stos
lock
popf
test
mov
mov
jae
orb
push
cmp
mov
mov
xchg
insb
and
sbb
mov
xchg
and
out
jmp
push
bound
rcrl
sbb
and
jae
push
jmp
test
ss
cmp
sbb
fsubrs
mov
jo
lods
push
int3
sbb
movsb
inc
stos
push
enter
sbb
rol
inc
inc
pop
jge
mov
or
andb
sub
ljmp
test
lds
lea
ljmp
xor
jmp
inc
cmpsl
dec
sub
outsb
std
bound
sub
and
and
rclb
call
add
imul
xor
add
pop
mov
adc
cmpsl
movsl
sbb
mov
repnz
fstpt
push
mov
and
dec
mov
add
fwait
pusha
cmpb
cld
jb
addr16
mov
into
xchg
push
test
pop
push
sti
mov
dec
movsl
cwtl
cltd
and
jbe
je
out
lods
cmp
sbb
fisubrl
jo
mov
mov
fldt
rcrl
push
mov
jbe
and
hlt
cmp
jo
pop
lods
push
adc
xchg
cwtl
dec
mov
lcall
arpl
pop
nop
jle
insl
stos
fists
call
cmp
movsl
xchg
xchg
out
iret
in
cmp
jbe
jmp
dec
sbb
xchg
int3
adcl
addr16
push
jecxz
bound
ficompl
sbb
fcoms
inc
gs
cs
mov
push
push
loopne
imul
or
dec
popf
sbb
xchg
into
mov
mov
dec
add
xchg
test
xchg
nop
mov
xor
out
ss
pop
stc
push
and
push
mov
cmp
push
pop
xor
fcoml
idivl
pop
divl
mov
jg
popa
mov
mov
stc
es
pop
xor
repnz
pop
and
sbb
rolb
mov
hlt
les
lret
imul
out
inc
xor
adc
ror
adc
test
fwait
push
pop
aad
cmp
sub
inc
sub
or
lahf
xor
adc
pusha
xchg
inc
mov
jb
sti
or
inc
add
dec
mov
nopl
call
cmpsl
push
xchg
push
out
addb
adc
cwtl
xor
cltd
xor
xchg
adc
add
std
and
sub
lods
sbb
adc
xor
jbe
ret
jno
mov
test
es
loope
or
js
mov
arpl
mov
push
push
or
jle
loope
cmp
sub
dec
mov
jnp
pop
xchg
mov
leave
loopne
xlat
imul
out
mov
mov
xchg
pop
and
or
js
add
cmp
cmpsb
pop
lods
repnz
push
int
out
shl
push
push
in
jb
push
adc
loopne
pop
int
aad
lea
gs
pop
cld
aad
insb
pop
cli
jge
and
sbb
inc
adc
ror
mov
loope
dec
add
stc
add
ss
jo
xor
sbb
mov
out
push
mov
mov
cld
mov
cmpsb
inc
jl
mov
movsb
cmpsb
pop
fdivrs
mov
jae
idivl
adc
data16
loop
fwait
mov
cs
xor
mov
and
pop
push
lcall
inc
mov
fisubl
movsb
cmp
inc
sub
daa
mov
mov
int3
rorl
sbb
xor
cmp
sbb
xchg
mov
into
rclb
imul
lahf
ret
push
pop
lods
mov
mov
stos
xchg
push
push
push
pop
or
mov
vpunpcklqdq
and
aam
xchg
push
and
fwait
dec
inc
and
dec
flds
xchg
scas
add
gs
pop
dec
daa
imul
mov
xor
inc
lea
sahf
sub
cwtl
push
loope
shll
in
movsb
mov
xchg
xchg
dec
sarb
inc
sub
inc
pop
mov
jge
das
js
xchg
fists
shl
ror
xchg
test
sub
sbb
aam
pop
push
pushl
data16
mov
xchg
call
jno
inc
push
or
call
and
sub
shll
imul
adc
cmpb
fdivs
inc
push
inc
cmp
mov
pop
into
clc
cs
shl
sahf
fnstenv
push
imul
cmc
notb
fidivs
je
movsb
idivl
sub
sbb
adc
or
ret
mov
fs
cmp
ss
push
mov
add
jg
into
jmp
stos
nop
roll
mov
push
fcomps
test
pusha
fcmovnbe
leave
sbb
inc
mov
jae
cli
mov
lock
push
dec
cltd
lds
bound
push
pop
adc
sbb
mov
and
aas
icebp
int
cltd
mov
xor
fstpl
iret
mov
or
push
sub
in
and
popa
pop
movsl
out
sbb
aam
jg
pop
test
push
sbb
adc
add
mov
loopne
cmc
shlb
out
sarb
fld
loop
aam
pop
jle
and
dec
fcoms
les
adc
stc
mov
push
ss
mov
movsb
inc
ja
leave
jp
push
daa
mov
add
bound
sbb
xchg
ljmp
stos
push
mov
xor
cmp
out
lock
mov
adc
dec
mov
sbb
cmp
and
push
xchg
test
xchg
out
jmp
jecxz
mov
pop
les
sbb
mov
fs
clc
fincstp
shll
lea
jg
mov
dec
mov
sub
lcall
fnstenv
hlt
cmpsl
fisubrs
imul
push
lds
ljmp
cmp
rclb
nop
sub
cwtl
and
cmp
dec
lods
jg
shll
xchg
adc
xor
das
insb
negb
jb
stos
mov
xor
inc
in
push
inc
and
add
test
dec
pop
push
jae
ljmp
dec
outsb
sti
es
fwait
ret
mov
xchg
rolb
ret
inc
dec
xorb
cmpsb
or
fsqrt
data16
xor
js
aad
mov
and
icebp
shll
push
ljmp
jle
push
fbld
mov
xchg
mov
inc
mov
aaa
mov
je
pop
adc
ret
sbb
sbb
pop
scas
mov
or
or
shrb
mov
or
adc
add
pop
fisubl
push
imulb
das
jne
aaa
bound
cwtl
mov
mov
jmp
test
stos
xor
mov
adc
xchg
jmp
jmp
rcrb
dec
inc
push
cmp
xchg
dec
mov
xor
hlt
push
sub
push
cld
push
mov
push
mov
fs
adc
mov
jl
je
pop
add
fstpl
fdivrl
fs
stos
adc
mov
int3
pop
leave
xlat
dec
in
les
mov
push
daa
xor
stos
lahf
loope
loopne
sub
stos
ret
in
arpl
fs
add
mull
ljmp
cmp
das
mov
out
cwtl
sub
jp
out
mov
xchg
pusha
aad
xchg
test
add
popa
or
pusha
outsb
mov
scas
popf
mov
aas
jbe
cmc
stos
scas
lods
loop
xor
sbb
jmp
pop
xor
xchg
jae
nop
fdivrs
fwait
mov
xlat
pushf
sbb
add
fistps
inc
outsl
jne
divb
xlat
out
mov
xchg
aas
popa
push
idivb
int3
mov
adc
leave
andl
in
inc
cmp
in
out
pusha
in
fcoms
sub
xchg
icebp
xchg
pop
xlat
xchg
stc
xchg
cld
xchg
in
enter
or
or
sub
dec
or
mov
cmp
adc
add
mov
sbb
sbb
in
inc
fmulp
pop
insb
inc
int3
stos
push
adc
push
ss
scas
std
pop
fcmovu
mov
ror
xchg
inc
inc
xchg
jb
mov
fnstcw
inc
lahf
out
out
rolb
repz
and
lcall
pushl
cmp
fwait
ljmp
xchg
push
lods
adc
nop
inc
and
cld
into
addr16
sbb
js
push
adc
aad
and
loop
mov
lods
fnsave
mov
push
into
inc
gs
jg
and
lods
inc
scas
inc
adc
arpl
dec
fdivrs
lcall
cmp
cmp
ficompl
pop
push
dec
loopne
cli
js
jg
dec
fdivl
cmp
je
cmp
jle
mov
adc
or
sbb
and
or
inc
cmp
daa
aad
push
jae
mov
sti
push
or
inc
push
push
lock
sti
scas
outsb
and
inc
shlb
and
ljmp
jno
in
push
push
aaa
push
cmp
pushf
lea
arpl
inc
jle
push
scas
adc
xchg
push
leave
ja
mov
sub
mov
mov
ljmp
ret
add
pop
pop
xor
jecxz
push
fadds
sbb
jg
or
adc
pop
test
adc
out
add
dec
ds
cmp
mov
cltd
push
xchg
std
ljmp
js
dec
addr16
dec
jo
and
cmpsl
pop
xchg
icebp
lret
stc
jae
insb
arpl
and
xchg
sbb
das
mul
xchg
mov
xor
xchg
pop
bound
test
mov
repz
bound
cmp
notl
pop
fmuls
and
sub
sbb
mull
xchg
sbb
lea
scas
adc
pop
popf
pop
or
mov
scas
and
cmpsl
or
mov
int
and
adc
push
mov
outsb
bound
into
rcrl
stc
daa
push
cmpsl
mov
clc
push
sbb
ret
mov
cld
pop
inc
jne
nop
cmp
push
mov
add
adc
hlt
lcall
sub
pushf
add
aas
push
and
dec
xchg
or
sbb
imul
xchg
adc
cmp
xchg
loopne
ds
pushf
leave
sbb
in
in
cli
xchg
push
aaa
fistpl
orb
cwtl
icebp
dec
es
iret
movsl
sub
or
mov
mov
jp
pop
adc
adc
mov
lcall
lahf
out
lret
xchg
pop
ret
cmp
cmp
outsl
shr
cli
push
lret
dec
cmpsb
dec
loope
aam
pop
inc
popa
fnstcw
inc
pushf
inc
xlat
adc
leave
sub
jns
test
imul
ret
inc
fiadds
into
into
lcall
push
mov
mov
mov
adc
test
aas
je
out
lahf
sub
add
in
or
jbe
arpl
cld
call
out
add
or
icebp
pusha
cmp
mov
add
cmp
xchg
ljmp
movsb
mov
jl
inc
in
in
mov
pop
cmp
push
leave
js
add
cmp
aad
leave
mov
xchg
loope
mov
pop
cmp
or
mov
in
ret
inc
sbb
loop
mov
cmc
mov
fsubrs
cmp
sub
lcall
int
aam
cwtl
int3
dec
dec
icebp
lock
test
dec
sti
loop
pop
fucomp
jge
add
test
jno
pop
in
mov
add
jnp
clc
mov
mov
out
stos
mov
and
mov
sbb
mov
jo
mov
and
loopne
mov
inc
insl
xchg
push
clc
es
mov
jecxz
movsb
jp
add
cmpsl
sub
jg
js
cmp
scas
fsqrt
inc
push
scas
lods
pop
rcr
xor
mov
jnp
mov
test
cltd
sub
jle
pop
cmp
fwait
outsl
fs
mov
and
enter
idiv
push
pusha
mov
xor
cltd
push
fwait
sub
adc
scas
rcrl
pop
mov
xchg
and
rep
fidivrs
int3
les
in
bound
mov
dec
jmp
imul
mov
shrd
jp
imul
sub
aad
ss
xor
push
push
andb
scas
shr
push
push
test
addb
pop
add
xor
int3
xchg
sub
sarb
add
sub
inc
scas
test
inc
cmpsb
aam
scas
jmp
pusha
mov
out
or
inc
xor
inc
adc
jb
and
popf
xchg
jb
sti
arpl
mov
sub
scas
sti
imul
sub
jg
inc
xor
xchg
daa
call
jo
dec
jmp
jno
dec
cld
sub
push
add
cmp
mov
dec
add
pop
mov
jns
push
adc
mov
lcall
mov
inc
arpl
rcll
mov
cltd
es
dec
push
pop
and
jecxz
mov
mov
sub
std
outsb
mov
pop
jb
test
test
jg
jge
xchg
add
sbb
ret
std
adc
out
shll
cmp
sti
sub
mov
rorb
lea
int3
pop
push
adc
jmp
sbb
sbb
aaa
xchg
shl
mov
pop
and
xchg
mov
lret
lock
fbld
xor
or
imul
ljmp
lods
inc
xor
subl
and
enter
sbbl
das
adc
and
mov
bound
push
adc
cmp
call
adc
in
fsubrp
push
and
stos
mov
les
nop
adc
xor
adc
mov
add
push
xchg
mov
stc
fisubrs
out
hlt
adc
cmpb
xchg
lret
sub
cmc
shrl
das
inc
sti
xor
push
lret
mov
pop
push
cmp
and
or
ss
mov
xchg
push
mov
lods
sub
gs
mov
aad
cmp
push
jo
pop
mov
aad
jmp
push
stc
inc
mov
fmull
loop
out
xor
popf
fsubr
jne
loope
and
sub
jae
subb
add
unpckhps
rclb
leave
hlt
xchg
ficoml
jl
pop
xor
fiaddl
cmp
outsb
es
inc
cli
cmpsl
aaa
gs
sti
sub
add
dec
adc
sub
outsb
xchg
sbb
mov
lods
inc
lret
sub
scas
push
pop
jae
lds
addl
inc
and
lret
sbb
outsl
xchg
fdivrl
sub
mov
mov
pop
aaa
mov
cmp
or
push
outsb
aas
push
mov
aad
test
mov
mov
das
mov
repnz
jb
jp
or
xor
or
outsl
adc
add
unpcklps
or
pop
xor
fidivrl
ja
jl
and
jecxz
adc
das
dec
les
insl
or
test
sbb
or
sbb
xchg
shrb
popf
mov
xorb
cmpsb
mov
js
inc
and
dec
fstpl
dec
xchg
push
leave
add
cld
pop
in
daa
shl
cld
jnp
cmovb
pusha
aaa
ret
ljmp
repnz
inc
or
ss
lock
dec
mov
icebp
test
push
sub
sub
repz
popf
jo
mov
and
std
repnz
shrb
ds
add
repnz
loope
cli
or
xlat
nop
push
cli
cmp
or
out
lret
out
sub
lock
jno
xchg
lcall
xor
out
and
fcmovb
xor
lahf
sub
jl
and
insl
ret
push
aam
pusha
and
push
pop
cmp
sub
pop
jl
mov
jbe
cltd
inc
mov
dec
mov
loope
shll
dec
xchg
mov
cmp
push
cmpb
mov
popf
notb
dec
or
shrl
mov
mov
cld
pusha
leave
xchg
lcall
les
addb
sahf
push
sub
push
mov
xor
stc
es
cwtl
push
test
clc
ret
cmc
fldt
cmp
jno
lret
mov
aas
ja
jbe
stos
sbb
fcompl
data16
xchg
and
shl
pop
jp
adc
andb
addb
addb
cmp
in
xchg
xor
stos
hlt
pop
cli
xchg
arpl
pushf
pop
scas
in
ss
sub
cmp
mov
sbb
fnstsw
cmp
pop
fxtract
sbb
add
xor
fsubrl
enter
cmp
out
movsb
inc
cmp
sub
pop
push
insb
or
adc
fcompl
stos
lahf
cmp
pop
into
adc
mov
dec
mov
adcl
inc
inc
mov
sbb
in
call
rclb
push
sub
add
adc
ss
mov
mov
movsb
aas
fists
mov
rcrl
adc
and
dec
ror
mov
jle
sbb
inc
and
lock
xchg
push
jo
add
dec
sbbl
pushf
cmpsb
scas
cmpsb
push
mov
std
pop
sbb
sub
push
cmpsb
dec
je
pop
nop
push
pop
jne
pop
jge
das
cs
xchg
mov
or
pop
decl
icebp
push
jp
leave
repnz
inc
shr
iret
dec
fidivs
mov
add
jbe
add
loope
ja
ret
fidivrs
hlt
and
movsb
outsl
sbb
push
xchg
test
or
cltd
push
call
lcall
jns
dec
aad
pop
in
cmp
pop
ret
addl
inc
mov
fidivrl
jg
rcrl
jae
addr16
bound
cmp
xor
xchg
xor
lret
or
mov
fsub
jle
push
loope
loopne
xchg
cwtl
dec
mull
rorb
xor
pop
movsl
adcl
and
mov
clc
pop
jb
push
sub
leave
xchg
pop
lods
jae
js
int
push
nop
idivb
fwait
or
popa
test
in
mov
scas
sub
sbb
cs
mov
cld
jl
cmp
mov
fbld
push
pop
mov
sub
int
fcom
jg
jno
out
dec
add
aaa
in
mov
jp
mov
jns
mov
xchg
jns
out
mov
pop
std
sub
jge
hlt
mov
pop
mov
ljmp
pop
je
ss
inc
cmp
clc
dec
jo
xor
out
sbbb
dec
je
mul
gs
sub
mov
popa
ss
pop
jmp
lcall
sbb
shll
mov
add
mov
nop
ret
ljmp
mov
call
in
movsl
jmp
fisubrl
bound
inc
fldcw
arpl
aaa
or
pop
bound
test
aas
movsb
popa
mov
jp
pop
pop
pop
sbb
repz
push
dec
outsl
jmp
jbe
push
bound
mov
cld
iret
stc
mov
lock
sub
push
das
in
das
pop
ljmp
fimull
cmp
iret
mov
cmp
mov
pop
lret
mov
pop
andb
mov
imul
jp
loopne
imul
sbb
jl
push
inc
sbbb
lds
sub
inc
iret
xchg
fildl
inc
ret
cmp
and
xchg
pusha
jb
sbb
je
sahf
loop
adc
std
or
inc
inc
sbb
scas
push
fs
jmp
imul
addr16
fmuls
subl
pop
loop
push
pop
ficoms
push
in
icebp
cmp
sub
cmp
pop
enter
ljmp
mov
mov
inc
adc
cltd
xchg
dec
xor
sbb
mov
outsl
insb
dec
stos
popf
add
mov
lahf
stc
xchg
and
test
jg
xchg
lret
jg
inc
sbb
insb
dec
cmp
in
sti
lret
sub
lods
mov
test
rcrl
push
add
sub
les
push
add
rclb
and
and
in
jae
or
es
cltd
inc
mov
ret
or
cmc
pop
xor
or
dec
xchg
ffree
pop
adc
mov
jp
pop
cmp
cmp
xor
xchg
add
sti
mov
ret
push
inc
sub
nop
loop
orl
bnd
std
outsb
jno
pop
scas
lahf
jmp
sbb
sbb
fwait
mov
mov
and
decl
scas
ljmp
inc
dec
mov
fs
enter
push
mov
jge
lods
jl
bound
sbb
mov
jp
xchg
leave
mov
jg
inc
aad
or
jbe
iret
jge
stos
mov
or
arpl
mov
mov
sbb
aas
dec
inc
pop
aaa
mov
rolb
addb
add
cli
out
add
test
addl
out
stc
loop
dec
sbb
aas
or
sub
es
ja
out
jo
xor
jl
adc
sbb
mov
lods
push
mov
inc
push
lds
jne
xor
ljmp
xor
jno
jmp
sub
sub
mov
or
sbb
into
scas
jnp
test
leave
sub
sahf
xchg
jge
mov
cmc
and
cmpsb
or
and
push
rorl
fs
push
dec
xchg
cmp
addb
pop
fstpl
lret
xchg
mov
mov
loop
jno
call
and
or
out
mov
repnz
dec
cmc
xchg
std
imul
or
lds
test
adc
outsl
xlat
sub
insb
das
iret
movzbl
jb
js
or
add
loope
jle
xchg
adc
pop
cmp
adc
lock
dec
push
addr16
nop
cmp
ficoms
inc
popa
inc
lret
jl
add
and
cmpsl
std
xchg
mov
sbb
or
mov
adc
lret
arpl
sub
mov
xor
ret
fnstenv
add
ljmp
into
xor
mov
or
push
jp
and
mov
cmp
jmp
pop
or
std
dec
push
gs
jbe
cmp
outsb
mov
xor
xor
pusha
inc
push
xchg
or
push
adc
adc
fiaddl
push
mov
jo
hlt
or
xor
or
push
adc
adc
xor
mov
mov
sub
or
inc
mov
fwait
inc
imul
mov
mov
sbb
or
xchg
push
inc
aam
fistl
cmpsl
xchg
push
xchg
icebp
dec
add
push
fists
in
push
js
cmp
xlat
xchg
xchg
das
jle
shl
scas
mov
sbb
mov
movsl
or
imul
mov
mov
mov
data16
imul
stc
daa
cli
repz
pop
andb
in
mov
xchg
mov
loope
sbb
daa
pop
and
cwtl
jnp
xchg
inc
ljmp
xor
sbb
pop
test
push
cmp
sbbl
pop
out
adc
mov
lock
sub
jg
cmp
popa
insl
daa
out
rolb
loopne
mov
sub
sti
popf
es
popf
dec
out
es
jnp
push
sbbb
lods
mov
insl
lahf
cmp
sbb
roll
and
sbb
push
test
fdiv
ljmp
notb
dec
or
pop
inc
pop
sub
and
pop
cmp
and
xchg
or
xchg
inc
ret
xchg
mov
out
xchg
jle
mov
dec
or
xor
xchg
shlb
out
test
jo
inc
jns
mov
mov
push
iret
sbb
dec
sahf
ljmp
inc
mov
imul
fcomps
lods
shlb
std
int
fwait
xchg
outsb
test
js
int3
sbb
mov
mov
inc
stos
mov
adcl
rol
ljmp
fnstenv
outsl
cmp
shlb
fadds
push
dec
pop
push
xor
call
pop
push
add
mov
inc
xlat
xchg
sub
xlat
ret
outsb
scas
push
and
jns
or
ljmp
inc
in
fidivs
pop
out
int
sub
sbb
scas
push
cmp
mov
fmul
sbb
hlt
cli
or
into
or
jmp
mov
in
cmpsl
imul
jno
leave
mov
mov
and
lret
push
ljmp
adc
jge
movsb
add
sbb
dec
aaa
jge
pop
insl
mov
push
bound
das
aaa
jmp
icebp
jbe
in
pop
mov
xor
pop
pop
das
jae
mov
test
inc
push
xchg
hlt
xchg
lods
mov
out
jge
fisttpl
cwtl
xor
jle
sbb
push
pop
fs
repnz
shll
jno
enter
outsb
cli
jle
cli
movsb
cwtl
xchg
mov
cmc
and
or
xchg
test
mov
jb
out
insl
push
arpl
push
jo
in
xchg
adcb
popf
enter
jb,pt
pop
fsubl
scas
or
mov
enter
cmpsb
cmp
scas
adc
cltd
nop
test
xor
out
and
shr
in
inc
adc
push
in
jge
mov
adc
rcrb
fs
stos
xchg
std
xlat
pop
or
push
inc
sub
xchg
hlt
pop
and
mov
aad
mov
cmp
std
jmp
loop
push
pusha
leave
jno
mov
icebp
jp
int3
sbb
lret
std
sbb
mov
popa
rol
sbb
push
dec
add
cmp
sahf
push
push
sub
dec
sub
or
adc
js
pop
scas
mov
outsb
aaa
outsb
lods
test
scas
xor
ja
loop
aas
cmpsl
jp
mov
sbb
imul
cmp
mov
sahf
icebp
repz
jno
addr16
orl
sbb
jb
aam
aad
out
inc
lret
push
xchg
sarb
int3
cwtl
add
cli
movsb
cmp
or
outsb
out
dec
push
adc
mov
insl
push
push
popf
fs
push
stos
inc
mov
xchg
mov
inc
jmpw
out
pop
lcall
in
jo
sbb
jmp
loope
xchg
repnz
sub
fsubl
mov
stc
cmpsl
push
jo
jne
sar
xor
pushl
das
out
xor
jae
dec
push
jns
xchg
pop
hlt
repz
int3
pop
cld
sub
add
push
mov
into
lahf
xlat
insb
jnp
addr16
xlat
ds
lret
jne
mov
mov
fnstenv
jp
nop
inc
xchg
and
pop
leave
popf
das
cmp
call
mov
xchg
mov
sahf
cmp
incb
rolb
mov
push
push
repnz
outsb
dec
push
in
push
cli
sbb
cmpb
orl
insl
sbb
xchg
jg
mov
jge
push
mov
pop
lock
pop
xor
cmp
push
jne
shlb
fimull
xchg
mov
das
cmpl
dec
inc
jnp
inc
jge
push
mov
adc
into
outsl
in
mov
imul
sbb
lcall
push
mov
xchg
aad
pop
add
mov
mov
mov
sub
addl
jmp
fdivp
dec
out
mov
and
or
lock
stos
test
dec
loop
pop
sub
imull
jmp
rol
es
and
jmp
std
xchg
cmpsl
mov
test
sbbl
or
out
inc
dec
mov
gs
pop
lods
and
cmp
add
dec
fmull
push
and
mov
inc
sub
mov
jl
addb
test
outsb
push
push
mov
and
push
ficoms
in
mov
mov
mov
fidivrl
loop
push
ret
pop
std
test
pusha
movaps
sub
inc
popa
ret
cmpsl
popa
push
push
outsb
ret
mov
push
mov
cmp
popa
cli
lds
clc
mov
cmpsl
loope
lret
movsb
and
lea
call
pop
fdivs
lock
xchg
arpl
sub
fs
stos
movsl
add
mov
bound
xchg
mov
lods
test
dec
mov
mov
clc
cltd
sub
in
in
sbb
xchg
mov
je
sbb
mov
jg
adc
mov
or
cmp
call
jns
popa
sub
mov
sbb
mov
push
lcall
or
cmp
mov
mov
ja
xor
dec
xor
adc
pop
xchg
jp
das
daa
iret
gs
mov
mov
orb
daa
jle
icebp
mov
stos
scas
xchg
popa
out
cltd
sbb
movsl
je
sti
inc
cmc
mov
cld
psadbw
test
into
sub
push
jb
sbbb
pop
mov
test
lods
lods
push
test
xchg
sbb
into
fldl
adc
sbb
lahf
add
jne
imul
es
arpl
pop
inc
fld1
ss
loop
adc
mov
dec
dec
pop
stos
xchg
ss
shll
lock
mov
inc
or
jae
arpl
sub
xchg
mov
mov
lock
fimuls
aas
stc
dec
mov
fdivl
cmp
mov
mov
push
lock
jne
or
xor
cmp
push
adcb
mov
scas
test
mov
push
mov
icebp
fsubl
ret
push
jnp
loopne
cmp
fwait
add
scas
or
nop
stc
testl
mov
les
stc
xor
pop
jl
sub
mov
mov
das
cmpsl
popa
dec
movsl
sbb
pushf
ljmp
jmp
stc
shlb
sbb
mov
jp
mov
out
scas
imul
push
jno
or
xchg
pop
adc
or
ja
fs
mov
sbb
fimull
push
dec
jmp
dec
push
fdivs
sbb
sbb
sub
dec
and
rcrb
or
imul
adc
clc
scas
aad
mov
pop
outsb
in
movsl
jecxz
jmp
cmpsl
xchg
pop
jmp
add
aad
dec
out
jecxz
xor
xor
jl
xchg
int3
pop
push
inc
push
je
sbb
cmp
aam
out
mov
jmp
mov
addb
push
fwait
or
add
xor
push
stos
rorl
neg
mov
je
xchg
or
lods
push
add
cmpsb
mov
mov
std
or
aaa
cmpsl
out
nop
lock
jnp
dec
loope
mov
mov
mov
and
push
push
or
sbb
inc
hlt
shrb
scas
jle
popf
mov
xchg
push
pop
ror
cli
dec
addr16
ljmp
bound
pop
sbb
inc
mov
ss
jb
inc
cli
mov
push
mov
cmpsb
out
repz
sti
mov
neg
lods
rorl
push
pop
dec
adc
inc
into
cmp
iret
mov
and
push
dec
hlt
aad
rcll
xchg
rcll
popf
or
loop
dec
vpunpckhdq
in
call
out
jp
orl
xchg
mov
mov
test
inc
sub
xor
jb
scas
inc
mov
inc
aaa
add
dec
pop
push
scas
sbb
ror
xchg
jle
mov
aaa
dec
cwtl
pop
push
inc
sbb
mov
push
hlt
pop
arpl
imul
nop
mov
mov
push
sbb
xchg
xor
mov
xor
push
ljmp
or
mov
fwait
daa
cmp
xor
sbb
cmp
push
cld
mov
xchg
jmp
aaa
movsb
jp
or
andb
dec
push
xchg
arpl
bound
inc
shlb
clc
hlt
lods
dec
pop
jg
int
push
push
pop
icebp
insl
je
stos
stos
jg
push
or
enter
daa
jb
popfw
cmpsl
fbld
out
xor
pusha
adc
push
ss
jno
jmp
dec
and
insl
dec
addr16
out
sti
fdivs
out
pop
fs
into
xor
xchg
fs
ds
loopne
repz
jae
push
popa
jnp
pop
sbb
test
lods
arpl
arpl
int
or
dec
or
and
cmpl
flds
push
or
add
mov
pop
xchg
and
add
mov
test
adc
cmp
lods
mov
ffree
xor
cmp
lock
add
mov
clc
pop
jo
jg
out
push
mov
or
dec
shl
jbe
in
in
jecxz
jmp
mov
cmp
out
jnp
mov
mov
lds
jmp
test
xor
or
nop
stc
decb
lret
adc
ds
ljmp
mov
mov
addb
gs
ljmp
mov
ljmp
jg
jmp
push
push
xor
rorb
xlat
add
push
pop
test
pop
fs
ds
inc
fsubr
lods
fisttps
fisubrs
and
sbb
in
jmp
sub
mov
popf
push
lds
imul
or
fldcw
lcall
cmp
das
pop
sbbb
in
lds
pop
das
jns
cmp
xor
dec
mov
imul
pop
je
or
pop
mov
mov
cmpsb
popa
icebp
lcall
insl
in
and
jbe
repz
ret
mov
int
jl
add
ss
pop
in
je
mov
adc
cltd
fwait
sbb
cmp
fidivs
pop
inc
adc
adc
or
push
dec
inc
jl
jmp
mov
pop
jae
rorb
scas
cmp
fnstcw
adc
mov
or
inc
pop
dec
ret
aad
xor
and
xor
mov
mov
in
cmc
and
fistpl
movl
js
push
cmp
sbb
mov
movsl
mov
pop
daa
and
jae
jno
dec
mov
add
sub
les
dec
push
icebp
sbb
repnz
jl
cli
frstor
scas
in
fsubrl
inc
xchg
int3
daa
hlt
or
sub
in
mov
inc
or
ds
int
ret
daa
dec
mov
cmc
dec
mov
sbb
dec
xchg
push
enter
cmp
cmp
ja
xchg
lret
xchg
xor
movsl
or
sbb
and
push
les
dec
jo
fsubp
les
and
and
adc
leave
orb
adc
pop
rorb
and
filds
mov
xorl
xor
pop
das
hlt
mov
cmc
mov
out
stos
fnstenv
cld
stc
jae
add
adc
rolb
ss
fcoml
dec
mov
dec
in
mov
inc
inc
sbb
scas
jecxz
fldt
dec
adc
sti
or
mov
push
jno
pop
mov
pop
pushf
mov
jnp
pop
call
popf
jg
and
dec
cmp
mov
xor
xor
daa
fidivs
pop
dec
imul
roll
xor
out
xorb
dec
cvtps2pd
mov
cmpsl
jmp
sbbb
sub
sbb
jo
nop
in
xor
aad
cltd
mov
push
push
cwtl
mov
xor
xor
repnz
out
jp
sub
ss
int3
push
cs
dec
es
xchg
movsb
in
ljmp
jl
jecxz
ja
imul
inc
repz
fwait
roll
sbb
jmp
add
rorb
clc
dec
mov
inc
std
push
imul
sub
lea
sub
mov
add
cmp
mov
mov
sbb
daa
sub
sarb
and
mov
stos
addr16
je
test
push
pop
cmpsb
add
mov
arpl
jb
leave
lods
mov
sub
xor
sub
aaa
shrb
dec
in
pop
inc
jl
es
stc
ja
ficomps
mov
lea
jb,pt
push
pop
enter
inc
enter
sbbb
cmpsb
xchg
ret
shl
ss
call
push
int3
icebp
xchg
xchg
out
mov
stc
inc
insb
dec
xchg
jo
push
jge
insl
xchg
in
fwait
mov
frstor
mov
outsb
cmpl
je
fbld
pop
cmp
leave
in
mov
ljmp
cmp
sbb
nop
cli
fadd
into
jg
ljmp
jg
sub
and
nop
imul
cmp
mov
add
stc
loop
push
imul
push
dec
jg
mov
xchg
mov
pop
gs
insl
inc
pop
inc
lret
mov
mov
cmc
pop
sbb
jle
in
lock
push
push
stc
shll
and
loopne
pusha
jl
adc
mov
mov
inc
mov
leave
out
das
pop
mov
mov
fistpl
cmp
dec
mov
fisubs
outsl
jo
mov
jo
fistps
in
cmp
xchg
ret
popf
repz
jne
mov
inc
xor
add
cli
xor
aas
mov
out
fistpl
xchg
int
jecxz
iret
add
pushf
mov
cmp
adc
insb
clc
push
jl
pop
dec
or
and
sbb
push
scas
packssdw
hlt
cmpsb
xlat
shlb
and
sub
addl
lahf
aaa
scas
dec
imul
jmp
add
ret
fidivrl
push
xchg
ss
add
or
sahf
adc
les
int3
in
pop
ret
adc
xor
mov
xor
pop
lahf
aam
xchg
cmp
cmp
ss
jne
jno
add
mov
daa
aas
xor
jb
mov
rclb
aam
push
popa
lcall
loopne
jl
cli
mov
loop
fiadds
sub
dec
insl
into
fstl
out
sub
jle
int3
test
sbb
pop
xchg
xchg
fnstcw
jae
cmpsl
xchg
xor
fiaddl
sbb
jmp
inc
pop
push
pusha
sti
out
out
mov
movups
adc
mov
inc
dec
cld
cwtl
das
mov
push
rcll
inc
fcompl
scas
fnstenv
cli
into
popf
or
pop
add
xor
jns
sub
push
outsb
into
test
gs
xchg
push
mov
gs
outsb
mov
cmp
fs
sti
fnstcw
push
cwtl
sub
out
mov
aad
and
pop
dec
cmc
int3
dec
xchg
into
jmp
mov
and
lahf
and
pop
lahf
mov
test
push
xchg
gs
dec
test
repnz
adc
mov
loop
fstpl
ret
gs
pop
cmp
adc
cs
mov
insb
in
pop
sbb
cwtl
sahf
mov
scas
mov
popa
in
cmp
adc
cli
pop
inc
hlt
std
push
mov
inc
adc
in
lods
and
in
adc
scas
popa
pop
push
cmpl
pop
and
mov
mov
sbb
daa
xchg
jmp
loopew
lret
pop
push
or
xchg
xchg
lcall
dec
in
xchg
mov
jbe
jp
scas
mov
xchg
inc
cs
cmp
sub
test
mov
ret
pop
push
loop
pop
mov
xchg
daa
jmp
jmp
adc
fcmovb
cmpsb
adc
stc
adc
stos
pop
out
add
jbe
popa
subl
adc
std
das
dec
popa
int
inc
int
push
xor
mov
in
adc
pop
cmp
mov
jae
test
mov
test
pop
or
fimuls
adc
cld
pop
mov
scas
cs
popa
pusha
data16
pop
xlat
or
dec
idivl
adc
sub
push
call
in
int3
fwait
std
sub
and
in
lahf
out
ret
cltd
aam
pusha
pop
sti
lock
xor
clc
inc
test
sub
out
dec
dec
sarb
xor
stos
nop
data16
xchg
add
fsqrt
ja
and
imul
jge
sbb
pop
jo
int
cmp
lds
icebp
push
and
dec
jecxz
shrl
sbbl
int
xchg
push
dec
jns
std
and
dec
insl
dec
dec
insl
push
insb
pop
pop
cmpsb
xlat
pop
mov
je
jg
les
stos
loopne
cwtl
xor
jae
imul
xchg
pop
add
fsubs
mov
push
sub
scas
in
jp
mov
adc
loop
sbb
addb
jmp
mov
leave
clc
aam
xor
dec
or
xchg
stc
cs
imul
mov
dec
or
js
es
add
insl
in
lods
imul
ljmp
aas
sbb
jmp
and
mov
stos
and
jae
jae
data16
in
xchg
ss
std
imulb
repnz
nop
jmp
mov
rol
test
jno
push
shrb
dec
mov
cmovp
jmp
es
test
pop
sahf
movsb
adc
mov
jo
shlb
inc
mov
je
adc
shll
insb
cmp
inc
sbb
scas
dec
repnz
jge
je
sbb
pusha
gs
sub
or
addl
mov
mov
cld
fisubl
xor
mov
dec
mov
mov
incb
cld
mov
int3
rolb
fdivrs
loopne
push
push
and
inc
sbb
lea
dec
add
push
arpl
mov
cmc
add
cmpl
pushf
push
in
xor
pop
call
xchg
cltd
popf
fmull
jg
movl
and
repz
adc
xchg
test
cltd
inc
cmp
jmp
mov
push
out
cwtl
mov
pop
jp
jle
mov
xor
imul
cmp
in
cmp
and
xchg
loopne
js
mov
ret
fistps
popa
mov
les
mov
jns
stc
inc
out
mov
iret
outsl
dec
adc
pop
cmp
cmp
dec
stos
out
stos
sahf
sub
add
shrb
add
lret
inc
dec
sub
lret
add
mov
dec
and
pop
in
jo
fwait
arpl
mov
add
cwtl
mov
outsl
loop
mov
in
outsl
je
fwait
pop
add
cmp
repz
sub
int3
dec
and
xor
aam
test
push
push
fildl
sbb
inc
cmc
mov
ljmp
push
dec
push
in
dec
loop
jp
cmp
xor
aad
jl
cli
push
mov
cmpsl
icebp
jle
jl
sub
aaa
push
jns
pop
dec
loop
out
fldl
adc
dec
andl
in
out
ljmp
cmp
dec
push
sub
shrl
mov
repnz
add
mov
add
xor
cmovnp
cmpsl
addr16
hlt
mov
mov
ss
mov
das
cmpsl
xchg
test
cs
loopne
add
inc
and
or
inc
lret
fiadds
inc
pop
pop
and
cmp
and
push
js
cmp
movsl
clc
cs
mov
xchg
in
inc
sub
mov
sub
repnz
repz
in
pop
add
lahf
and
lret
aad
test
cwtl
fdivl
insl
out
fcom
jp
mov
xchg
mov
lock
mov
mov
aad
lea
jecxz
xchg
mov
pop
and
pop
add
ja
dec
xor
shrb
popl
jns
and
stos
mov
dec
and
addb
sbb
pop
sahf
test
adc
out
or
cmp
sahf
dec
mov
out
loop
out
and
mov
fisttpll
addr16
jp
int3
add
push
cmp
or
add
dec
sub
push
jo
mov
mov
fldenv
or
mov
xchg
stos
aas
dec
outsl
std
inc
movsb
pop
xchg
shl
orb
imul
xor
test
add
xchg
test
dec
arpl
inc
adc
aad
push
mov
repz
fadd
adc
popa
rcrb
mov
sbb
mov
movsl
inc
xor
loope
pop
imul
jne
dec
les
or
jle
mov
cmp
jbe
push
or
cwtl
pop
and
aam
out
cmp
test
in
popa
cmpb
cmp
mov
mov
jg
jmp
mov
inc
add
cmpsl
lahf
sbb
dec
push
mov
jnp
push
xchg
test
jp
push
arpl
sub
xor
dec
daa
xor
add
pop
test
xor
push
pop
lret
and
out
std
addl
mov
pushf
fistps
jge
cmpsl
loopne
mov
or
pop
das
outsl
lock
jecxz
xchg
insb
push
daa
cwtl
test
push
xchg
cmp
mov
fidivrl
arpl
mov
adc
ja
imul
insl
jne
fucomi
outsb
push
sti
or
nop
ds
sbb
ret
lods
xor
imul
in
rclb
or
or
cmp
iret
lods
aaa
jne
sbb
scas
pop
and
jo
lret
cmp
cmp
arpl
and
pop
xor
xor
or
dec
stc
cwtl
in
mov
fmull
testb
scas
int
sbb
jno
out
notb
ror
jno
mov
lcall
scas
notb
mov
test
aam
pop
mov
int
add
push
rol
mov
stos
cmp
fistpl
jg
cmp
shll
std
push
cmp
mov
test
in
in
push
push
dec
dec
sarb
pop
repz
std
dec
loop
insl
mov
mov
stos
rolb
jmp
dec
mov
lock
mov
imul
ret
nop
ret
into
sarb
enter
mov
sub
jmp
out
ja
sahf
push
lock
incl
sbb
sar
fmuls
mov
pop
adc
cmp
daa
fstps
cmpsb
lock
out
xor
mov
inc
imul
pop
fcomip
push
int3
aad
aas
fdivrs
test
pop
xor
mov
push
adc
std
popf
lcall
sbb
xor
clc
addr16
mov
orb
insl
jge
cmp
push
jl
xor
xchg
push
out
test
and
cld
dec
jbe
xor
mov
and
mov
inc
pop
aad
dec
mov
xchg
sub
cmpsl
or
jnp
jmp
and
repnz
xchg
xor
mov
sub
xchg
cli
jno
adc
subb
xchg
mov
clc
xchg
push
mov
and
inc
lods
dec
es
and
sbb
cld
imul
mov
test
and
xchg
adc
iret
sbbl
in
in
mov
icebp
push
pushf
jo
and
sbb
add
or
out
aam
ret
aas
adcb
xor
cmp
sbb
mov
push
push
clc
pop
cli
and
mov
lods
xchg
insl
call
xor
adc
mov
pop
xor
ds
test
mov
mov
sbb
or
xor
rcr
xchg
cmp
add
adc
lods
test
fwait
push
scas
mov
lds
mov
adc
dec
imul
pop
push
pop
mov
test
imul
pop
pop
adc
lret
mov
cmp
xor
imul
pop
call
and
or
xchg
add
jnp
adc
mov
lods
push
fcomi
mov
cmp
sbb
cmpsl
aaa
add
fists
sbbb
bound
into
lahf
xchg
cli
int
add
loopne
add
mov
pop
das
inc
jmp
movsl
sub
shl
test
or
addb
into
add
jge
lahf
out
cli
ja
aad
sahf
popa
addr16
pop
pop
clc
inc
mov
sbb
in
push
cld
xor
stos
pop
inc
mov
loope
aaa
mov
xchg
xchg
mov
ss
fs
or
in
lods
xor
push
jb
orl
inc
xor
xor
add
inc
cmp
movsl
hlt
mov
mov
lea
cld
add
mov
loop
push
cli
xor
insl
in
sbb
scas
leave
mov
xor
mov
inc
sbb
inc
test
push
cmp
fsubs
pop
mov
movsb
pop
xchg
and
add
je
test
jnp
test
std
inc
mov
dec
hlt
das
sahf
jmp
and
mov
or
in
dec
sub
enter
je
or
lret
stos
mov
pushf
adc
inc
jns
into
sub
push
sbb
sahf
push
test
jb
repz
mov
nop
dec
jo
push
jb
add
push
rcll
and
aas
mov
sub
jo
cmp
dec
jecxz
jns
popa
or
aaa
test
fst
cmp
mov
test
adc
and
jmp
pop
xor
test
xor
scas
push
ds
movsl
popf
in
lret
xlat
call
mov
push
lret
je
stos
popa
or
jge
sti
jp
jl
outsl
xchg
lret
jmp
fisubrs
in
int
inc
in
xor
js
xor
aam
insb
pop
dec
lods
in
scas
sub
and
fisttpl
ds
inc
aam
push
push
loopne
sbb
or
pop
inc
dec
inc
mov
add
push
mov
call
nop
sub
out
sbb
xchg
and
out
xchg
push
std
xor
xchg
lret
mov
and
mov
lods
std
push
xchg
dec
sbb
in
jnp
or
movsl
pushf
sbb
mov
mov
movsb
jb
xor
dec
cmp
addr16
hlt
pop
shll
jns
imull
sbb
mov
ret
jne
jge
pop
dec
sbb
and
push
int
jbe
cwtl
mov
fcoms
push
arpl
fs
sti
test
cmp
call
sbb
dec
das
pop
pop
xchg
mov
cmp
mov
cmp
dec
push
movsl
outsl
inc
mov
call
lds
add
sub
add
lret
dec
popf
adc
imul
xchg
mov
repz
dec
jae
bound
add
nop
push
cmp
mov
mov
inc
aaa
adc
js
mov
or
mov
outsl
aaa
xchg
ljmp
sbb
loopne
std
data16
pop
jle
mov
jb
mov
hlt
jbe
outsb
les
mov
lods
sbb
cmc
cwtl
pushf
mov
sub
jno
iret
mov
lods
in
outsl
movsl
mov
nop
aad
jg
add
movsl
push
loope
shr
adc
push
cwtl
mov
jmp
and
out
cs
inc
lea
mov
loop
in
insb
adc
aad
enter
adc
add
iret
inc
inc
or
xorl
loop
mov
bnd
sub
imul
xchg
add
push
push
ja
mov
int3
stc
sahf
int
add
xor
outsl
pop
outsb
cwtl
shll
xchg
xchg
out
pop
int3
subb
dec
imul
stos
divb
or
stos
adc
push
sbb
jne
push
ljmp
push
lds
das
add
stc
sbb
icebp
inc
add
inc
popf
mov
push
jg
dec
or
mov
adc
int
ret
mov
cmpsl
ds
cld
punpckhwd
loope
pop
cmp
mov
and
cltd
loop
jmp
pusha
scas
add
pop
xchg
jns
pop
sbb
xchg
adc
jp
mov
enter
movsl
xor
lret
fsubl
xor
jp
sbb
cmp
jl
scas
cld
clc
sbb
jbe
xchg
add
test
adc
dec
mov
xchg
mov
scas
outsb
xchg
lods
loope
sbb
dec
xchg
dec
xchg
rol
stos
std
adc
ds
aaa
cmpl
push
repnz
sub
sub
test
std
cld
out
shll
inc
mov
jb
adc
ss
mov
pop
pop
sbb
add
or
sub
stos
test
aaa
cltd
jl
loope
xchg
pop
pop
add
nop
iret
push
mov
mov
in
test
pop
xchg
jmp
cmp
fwait
mov
addr16
pop
rorb
add
push
mov
pushf
int
adc
push
push
pushf
cli
cli
shll
cwtl
inc
stos
adc
cmp
data16
pcmpeqb
mov
add
adc
adcb
jbe
inc
rcll
movb
mov
mov
xchg
push
adc
or
dec
icebp
xor
inc
xorl
pop
xchg
imul
cmc
and
or
imul
lea
fs
jae
mov
lret
orl
test
push
adc
jmp
mov
pop
jno
mov
addr16
loopne
lahf
pusha
xchg
int
sub
out
fnstcw
movsb
enter
aas
in
push
push
cmc
mov
dec
cmp
xchg
call
loopne
pop
cmp
push
mov
stc
jo
ss
mov
xlat
push
dec
js
push
cld
stc
insl
inc
test
test
std
popa
push
in
pop
lcall
shll
mov
mov
shl
jecxz
xchg
xor
cld
into
push
pushf
add
lods
ds
mov
mov
dec
fwait
mov
out
jmp
cmp
sbb
xor
sbb
addl
xor
in
add
popl
and
mov
sbb
inc
or
pop
int
mov
inc
fmull
cwtl
leave
pop
sub
sub
push
mov
out
cmc
icebp
cmpb
lret
add
pop
loopne
loopne
fistl
mov
pcmpeqw
sub
mov
mov
xchg
pop
out
jbe
mov
cmpb
jmp
mov
xor
mov
into
xor
data16
mov
mov
xor
sahf
fwait
mov
rdtsc
cmp
mov
std
sub
xchg
jg
fwait
aas
adc
push
or
and
cmp
cld
mov
es
or
sahf
cmp
or
popf
cmpsb
stc
push
inc
mov
pop
mov
mov
adc
mov
stc
mov
cmp
jae
mov
xor
popa
fnstcw
jmp
gs
clc
xchg
xchg
mov
lds
xor
aas
jg
scas
mov
xchg
loopne
mov
out
pop
dec
cmpsl
dec
lcall
inc
xor
arpl
mull
cli
enter
scas
push
cmp
nop
lret
sbb
dec
arpl
adc
fcompl
std
insb
mov
mov
dec
jge
stos
cmp
sbb
enter
xor
jp
pusha
nop
ret
ja
jae
stc
add
ds
fstps
or
shlb
dec
in
loope
and
add
sbb
push
inc
scas
jb
mov
xlat
lret
ja
pop
push
inc
std
ja
loop
sar
xchg
xor
lds
xlat
inc
cwtl
mov
sub
xor
int
adc
lahf
cli
jl
jne
hlt
xor
mov
xchg
cmp
arpl
subl
mov
fistpll
cld
sub
mov
ret
in
add
int
pop
das
imulb
divl
imull
sbb
dec
xchg
and
ds
leave
ljmp
outsb
adc
push
jl
mov
sub
fld
aas
sub
fdivr
sbb
arpl
push
dec
rclb
inc
mov
fidivl
vmmcall
les
add
xorb
mov
xchg
testb
cmp
adc
cmp
loop
or
cmpsl
iret
pop
pop
bound
sahf
xchg
xor
pop
jle
mov
pop
pushf
sbbb
xor
rcrb
inc
dec
je
cmc
dec
mov
test
pusha
int
or
mov
and
call
mov
push
cwtl
cmpsb
push
sub
and
inc
mov
popa
int3
mov
pop
into
lcall
cli
inc
fwait
nop
cs
fcmovnb
inc
stos
popa
daa
jl
mov
mov
loopne
ja
ja
mov
mov
pushf
sbb
fdivr
pushf
mov
jmp
sub
pop
dec
jb
push
jmp
and
xlat
cmp
mov
arpl
jns
movsl
outsl
addr16
iret
push
sub
push
inc
ljmp
les
mov
int3
test
aaa
aam
jl
es
fs
aas
cld
push
or
xchg
adc
and
stc
call
aas
xchg
fwait
dec
mov
shrb
xchg
es
xchg
outsb
lret
popf
loop
es
aas
mov
aad
dec
push
mov
repnz
jp
jp
pop
jbe
jle
call
xor
add
fimull
jecxz
addr16
adc
add
cmpsb
mov
cwtl
pop
mov
iret
pop
sbb
push
out
push
fisubs
pop
xchg
outsl
in
sub
push
sahf
mov
push
mov
jne
push
ja
or
xor
movsb
js
cmp
scas
icebp
cld
out
out
xor
out
int3
gs
sbb
mov
xor
sub
mov
into
mov
iret
and
shll
push
sub
inc
pop
lret
mov
push
je
xchg
xor
dec
xorl
adc
mov
test
leave
fs
repz
mov
loope
mov
in
push
push
sar
call
in
add
mov
dec
xor
inc
fxch
negb
sub
mov
jge
dec
mov
or
xor
cmp
sahf
jge
mov
xchg
sbb
add
aaa
add
mov
mov
mov
ja
cmp
adcl
push
cmp
dec
dec
leave
and
add
int3
test
fildl
jmp
or
jae
sub
std
fists
fcomps
lock
cwtl
xor
or
cli
roll
jle
xchg
dec
lods
mov
loope
cs
ftst
sub
enter
add
cmpsl
scas
mov
sbb
jbe
lea
movsl
pop
repnz
out
lcall
dec
or
push
test
xchg
sub
xchg
pop
sahf
lods
jmp
pushf
inc
jg
sbb
sbb
out
mov
outsl
fs
divl
pop
stos
lahf
xchg
out
xchg
adc
ja
mov
jbe
aad
cld
xor
push
mov
rolb
push
ret
push
jg
mov
jo
and
push
xchg
sbb
inc
push
test
and
adc
pop
imul
mov
pop
lods
ret
inc
xor
rorb
insb
scas
leave
mov
fidivrs
ljmp
je
mov
sbb
movsb
xchg
loope
pop
mov
mov
ja
dec
out
cwtl
sub
pop
inc
loop
inc
mov
and
push
cmp
scas
outsl
and
inc
mov
mov
mov
lahf
lods
lcall
sahf
imul
test
into
std
pop
int
aas
movsl
icebp
das
xlat
orl
fcompl
inc
hlt
inc
gs
push
sti
fisttpll
cmp
fdivrs
cmp
lds
mov
lods
les
adc
arpl
mov
jg
stos
out
jno
dec
cmp
jl
xrelease
cltd
lods
lods
sbb
scas
cmp
mov
dec
jns
or
es
xlat
out
mov
andl
mov
decl
adc
daa
cli
test
lfs
mov
movsb
call
sbbb
rcrl
lock
xchg
aaa
adc
je
outsb
data16
pop
lret
frstor
mov
push
iret
add
jmp
gs
stc
xchg
pushl
popf
inc
rolb
insb
leave
ja
leave
fstpl
sub
outsb
addr16
arpl
arpl
out
jp
adc
inc
fdivl
insl
shrl
lahf
stos
add
jno
rcr
push
dec
cltd
and
lahf
push
add
mov
lods
insb
int3
and
int
add
jmp
subl
sbb
pop
lahf
jle
shlb
push
lahf
mov
fwait
inc
push
addr16
aas
mov
lock
sbbl
push
mov
xor
sub
lret
loop
push
xchg
jl
inc
in
dec
movsb
std
dec
push
sti
je
xchg
jecxz
stc
outsl
jb
in
pop
or
fstpt
imul
std
in
jg
js
xor
xchg
cmpsb
pop
iret
gs
mov
cmp
lds
mov
and
push
in
loop
mov
sarb
addr16
pop
setb
dec
stc
test
sub
arpl
loope
sub
loop
hlt
xor
insl
mov
pop
scas
mov
sub
xlat
jb
mov
inc
jne
fwait
mov
xchg
jns
mov
mov
mov
pop
sbb
test
add
sub
inc
dec
xor
xchg
push
dec
stc
xor
jle
aad
xchg
int3
adc
mov
test
push
xor
es
movsb
ja
mull
call
clc
cmp
int
scas
xchg
or
mov
and
push
nop
cli
mov
shrl
es
add
sbb
add
ret
xor
cmp
enter
add
mov
jae
lahf
jg
push
fs
mov
roll
mov
cmp
ss
insb
pop
insb
test
int3
je
xchg
loope
jge
pop
outsl
or
lock
fsubrl
xchg
ja
rcll
stos
jb
cld
and
inc
outsb
mov
or
subl
and
dec
shrb
push
mov
sub
test
adc
out
sub
outsl
popa
inc
fnsave
fmull
das
iret
in
sahf
add
bound
in
mov
pop
mov
lahf
mov
out
clc
xchg
pop
dec
cs
inc
cmpsl
in
mov
dec
push
push
orl
mov
orl
push
test
jbe
sbb
cmp
mov
sti
add
jbe
shrb
mov
imul
and
fcomi
clc
fsubs
mulb
arpl
cmp
nop
xchg
xor
popa
xor
or
and
push
in
repz
cmp
lods
aaa
lds
fbstp
jae
xchg
push
dec
mov
jae
mov
cltd
mov
cmp
and
jle
sub
xchg
adc
push
push
out
push
cmp
data16
cmpsb
lods
lods
inc
leave
inc
icebp
or
popf
pop
lahf
xchg
int
mov
std
sahf
lret
adc
xlat
mov
testl
cmp
jb
push
push
das
jno
addr16
je
in
cmp
push
or
int3
into
push
pop
xor
int3
pop
mov
clc
leave
jle
inc
sti
sbbl
xor
mov
jbe
das
in
pop
mov
in
lahf
push
cmp
push
xor
push
adc
ud0
add
mov
fwait
dec
sbb
push
into
cs
push
dec
mov
pop
pop
push
mov
inc
repnz
je
roll
xor
mov
lret
adc
jecxz
ljmp
dec
orb
imul
repz
sahf
push
pop
stos
fsubp
jp
sarb
repz
sbb
and
pop
or
sti
xor
imul
xor
sbb
adc
inc
adc
ret
repnz
insb
es
mov
sbb
mov
cs
bound
out
out
mov
outsw
jl
push
xlat
mov
mov
das
cmpl
bound
test
fdivrp
pop
mov
sbb
idiv
out
js
clc
out
xchg
sbb
cltd
adc
jp
das
sbbb
jle
push
adc
cld
in
mov
pop
mov
in
lds
inc
push
dec
pop
aaa
xor
dec
xlat
aad
scas
fsub
stos
inc
push
jle
xor
sti
mov
jecxz
mov
xor
and
cmova
ds
scas
pop
adc
and
aas
jnp
add
in
and
add
popf
inc
inc
div
stos
sbb
lahf
sbb
in
xor
cmp
ss
clc
add
inc
push
jae
add
mov
mov
sbb
dec
sbb
dec
jo
pusha
mov
sbb
adc
daa
push
or
or
jp
add
bnd
sahf
sbb
sub
sub
lahf
cld
inc
jnp
negl
arpl
lret
sbb
movsl
mov
out
dec
or
push
test
repz
mov
or
mov
addr16
sbb
jbe
lods
rcrl
xchg
dec
aam
aaa
push
mov
stc
enter
push
incb
call
push
out
loopne
movsb
cmp
xor
loope
lea
mov
aad
scas
lock
add
into
mov
call
out
cmp
testb
jno
int
out
loopne
xor
push
popa
popa
pop
lds
test
xor
or
aad
rcrl
arpl
push
loop
mov
adc
jle
pop
movsb
scas
std
jp
mov
push
movsb
loopne
mov
pusha
popl
add
jmp
mov
lods
test
lods
testb
dec
and
hlt
mov
add
jne
and
insl
stos
mov
out
popf
inc
xchg
dec
out
test
add
mov
clc
push
inc
ds
inc
pop
pusha
bnd
adc
inc
and
lea
rorb
or
dec
cmp
cmp
lea
adc
adc
daa
mov
cmp
xchg
movsb
push
cs
mov
daa
mov
fbstp
shl
xchg
sbb
mov
daa
insb
cli
cmp
xchg
jge
mov
sub
in
and
cld
xor
ror
jg
add
pop
inc
cmpsl
xchg
int
imul
and
xchg
std
pop
sub
mov
cld
ds
in
sub
loope
shlb
stos
cs
and
data16
sub
xor
movsl
xchg
inc
fstl
cmpb
cmpl
mov
sbb
loopne
push
outsl
push
stos
cs
fidivrs
or
in
mov
cmp
outsl
xchg
out
cmp
stos
dec
je
stos
mov
data16
ja
sub
mov
les
mov
jnp
cmp
repnz
mov
fbld
pop
jae
iret
mov
add
xchg
inc
adc
push
imul
lds
inc
lret
out
sub
jnp
ljmp
dec
sahf
push
mov
jle
stos
mov
xchg
xor
xchg
add
addr16
dec
data16
push
and
ret
shlb
subb
pop
mov
js
cwtl
jne
and
sbbb
xor
xchg
adc
insb
mov
pop
sub
jns
cmovne
in
jae
cmp
or
insl
in
dec
adc
popl
mov
leave
mov
jo
int
stc
push
add
sahf
ja
enterw
pushf
stos
test
push
inc
jecxz
mov
lea
jo
adc
jb
cmp
sbb
xchg
xor
xchg
dec
es
rcrb
push
inc
mov
dec
in
and
in
fnstsw
pop
lods
hlt
sub
sbb
and
fstl
movsbl
call
negl
in
rol
arpl
push
mov
push
leave
mov
cmp
jns
lahf
lods
aas
ret
lea
fmull
fcmovne
xlat
in
and
sahf
fiaddl
popf
mov
lods
mov
inc
fisubs
jb
or
inc
push
sbb
cli
mov
lahf
inc
mov
cmp
add
ja
sbb
or
jne
cs
popf
or
push
mov
or
iret
ds
shl
repz
or
inc
stc
pop
jns
movsl
rorb
and
inc
rcrb
shll
xor
pop
mov
nop
mov
add
sub
das
sbbb
push
xor
hlt
in
adc
dec
jmp
mov
lds
sbb
sub
dec
add
xchg
fdivrs
xor
mov
or
addr16
pop
inc
push
sbb
cmp
xchg
xchg
adc
pop
jmp
inc
ds
sub
fistl
cmp
or
pop
lea
test
mov
int
lds
stos
out
add
aam
or
mov
sti
xchg
dec
push
shrl
testb
jl
mov
iret
xchg
xchg
lcall
lds
pusha
sahf
jmp
aam
jle
sub
pop
xlat
dec
ret
dec
cmp
push
or
iret
mov
rorl
or
popf
jno
cmpsl
push
int3
and
jb
xlat
cmpsl
mov
mov
inc
lcall
fisubs
mov
jcxz
scas
psrld
insl
inc
mov
roll
aad
adc
movsl
mov
mov
jge
mov
pusha
daa
leave
int
fs
xchg
push
test
rorl
adc
dec
sbb
xor
repnz
sub
xor
inc
cmp
jle
adc
xorb
rclb
sbb
data16
pop
mov
mov
mov
addr16
hlt
and
fcompl
sahf
lds
pop
jg
pushf
test
ret
add
sqrtps
ds
sub
jge
xor
loopne
es
imul
xor
sub
xchg
es
jae
dec
mov
loop
cmp
scas
inc
jl
cmp
mov
ds
adc
mov
lahf
loopne
xor
adc
out
movsl
adc
sbb
rcll
jecxz
xchg
jmp
sub
cs
xor
xchg
jns
xor
cmp
lods
cli
fyl2x
lcall
std
shr
loope
sub
orl
gs
jnp
and
stc
cmp
jbe
popa
xor
ret
push
and
jns
jg
or
push
mov
out
cmp
pop
jge
call
push
fcmovnu
mov
xor
mov
dec
cmp
mov
dec
xor
out
jmp
mov
cld
imul
adc
add
in
arpl
imul
sarl
jbe
imul
push
sub
mov
mov
cmp
dec
testl
cli
sahf
xchg
pop
mov
ljmp
test
mov
mov
jg
ja
icebp
imul
arpl
or
inc
and
mov
aas
push
setbe
fwait
sbb
push
dec
jp
imul
arpl
xor
xor
pop
sub
data16
popa
jle
pop
jp
lods
and
jmp
cld
ja
sub
sub
lcall
add
mov
test
loope
nop
or
mov
iret
xor
pop
or
jns
stc
sub
push
push
das
lods
sbb
ret
jmp
pop
cmp
mov
in
adc
mov
xchg
adc
int
inc
jns
cld
cmp
sarb
cmpsb
cltd
test
out
mov
xchg
popl
cli
je
dec
sbb
mov
push
xchg
mov
repz
arpl
mov
mov
mov
sub
in
or
imul
jbe
mov
sbb
sbb
pop
pushf
divl
pop
mov
mov
cmpsb
cmp
arpl
pop
outsb
add
jb
or
or
jl
push
jb
xor
iret
outsl
imul
jle
fisubrl
out
push
inc
mov
dec
sub
pop
or
in
ja
cmp
ja
popf
jp
xlat
daa
lods
sahf
push
cmp
add
mov
fldl
jl
repnz
arpl
mull
xor
loope
jmp
mov
add
add
mov
rcl
mov
dec
enter
ljmp
out
fdivrs
aad
std
fldl
insb
out
cltd
imul
outsl
xchg
aam
out
mov
bnd
cmp
push
lods
and
pushf
adc
jo
mov
jo
mov
inc
push
out
pop
mov
scas
fs
mov
jnp
mov
sbb
in
mov
jb
mov
or
sub
enter
adc
in
aad
or
pop
movsl
div
jo
push
fiadds
or
dec
add
movsl
ret
or
dec
and
outsb
es
cmp
shll
addr16
aad
add
cld
in
dec
pusha
and
divb
lret
sub
pop
enter
inc
fimuls
into
js
xchg
fnstsw
pop
outsl
add
outsl
push
pop
cmc
xor
mov
popf
xchg
test
jo
test
pop
mov
jmp
in
enter
mov
lahf
jb
or
fwait
xor
xor
xorl
mov
adc
iret
mov
mov
repz
jmp
xorl
or
hlt
call
outsl
or
add
mov
sarb
cmp
inc
xchg
test
xor
xchg
mov
mov
or
cmp
mov
rcrb
mov
andl
insl
cs
ret
inc
push
int3
les
cli
sub
test
test
rol
ds
adc
sti
lock
dec
scas
xchg
nop
xchg
or
push
data16
xor
dec
icebp
inc
pop
cmp
pop
mov
sbb
cmc
add
sti
jb
outsb
cld
test
jns
or
std
cmp
cltd
pop
pop
and
cmp
jb
arpl
lret
mov
lods
fadd
ficomps
aas
inc
inc
pop
andb
mov
xchg
sbb
dec
add
or
bound
mov
notl
imul
scas
fcomps
sub
pop
adc
inc
mov
lahf
cmpsl
daa
xchg
scas
add
add
jle
pushf
rorl
or
push
mov
dec
cwtl
xor
bound
cmp
lahf
addb
iret
sbb
mov
jle
mov
xor
cmpsl
or
cmpsb
shlb
sbb
gs
inc
shll
push
xor
or
stos
mov
popf
push
xchg
sbb
mov
xchg
pop
and
cmp
sarl
mov
sbb
lcall
pop
rclb
and
lret
add
imul
mov
mov
mov
mov
cmc
jg
rolb
mov
das
xor
int
out
inc
mov
and
aaa
mov
fmul
mov
neg
xchg
shll
cmc
jno
shr
adc
add
mov
icebp
pop
xor
es
push
sbb
iret
and
push
and
cmp
repz
sub
inc
adc
loopne
popa
mov
shlb
loope
mov
int3
testb
out
pop
adc
adc
arpl
daa
mov
std
sub
inc
add
shrl
popa
ds
mov
jo
cmpb
jp
xor
xor
out
ljmp
shll
pushf
and
ror
mov
adc
push
pushf
int3
push
pop
lea
sti
xchg
jge
clc
lcall
lret
push
movsl
jl
sahf
popa
outsl
aam
dec
dec
push
jge
out
cli
or
mov
sub
and
out
jo
jl
mov
lock
pop
jbe
icebp
fwait
into
popf
mov
xorb
das
mov
sahf
xchg
push
xor
fisubs
and
cli
sub
sub
mov
int3
mov
out
insl
je
jns
int3
std
cltd
das
cmc
sub
es
sahf
and
cmp
cmp
inc
sub
loopne
jo
lods
ljmp
push
add
or
arpl
xor
pop
push
mov
add
mov
sbb
jae
push
enter
or
inc
xor
xchg
in
mov
cmp
gs
stos
ja
sarb
dec
push
xor
int3
and
jno
loop
sahf
pop
test
loopne
fistl
ljmp
adcl
push
pushf
inc
ret
mov
mov
pusha
aas
push
pushf
sub
or
pop
adc
nop
fisttpll
inc
rolb
into
movsl
out
xor
decl
fwait
sbb
adc
fimuls
mov
xchg
mov
sbb
pop
push
aas
fistpl
sub
stos
ret
fcomps
push
cmp
dec
xlat
aam
cmpsl
mov
cmp
push
out
out
jl
aas
mov
mov
mov
xchg
cmc
and
clc
fcmovnu
lds
or
and
nop
test
ret
adc
sbb
xor
cltd
adc
jo
dec
mov
dec
pop
lret
dec
xchg
cmc
enter
aam
in
sub
add
mov
repz
push
rclb
out
stos
pop
rolb
fcmovnb
inc
addr16
bound
sub
or
loope
adc
pushf
stos
fsub
sbb
fwait
lahf
hlt
in
or
ljmp
dec
jno
push
icebp
or
xor
subb
int3
adc
fists
cmp
icebp
ljmp
nop
xchg
movl
or
cmpb
movb
sbb
out
int3
mov
in
adc
jns
push
add
mov
loop
and
in
icebp
out
push
ljmp
jge
test
dec
in
pop
pop
pop
xor
dec
or
mov
stc
fisttps
dec
push
stos
in
inc
jge
mov
dec
rcrb
lcall
dec
push
push
sbb
mov
mov
push
lret
fcmovne
test
scas
mov
shll
je
sub
cmp
shll
mov
imul
repz
je
data16
mov
mov
loopne
xor
mov
arpl
sbb
iret
out
xor
pop
cli
mov
shlb
jns
adc
inc
imull
sub
std
xchg
fmulp
adc
scas
int
jnp
in
dec
mov
cmp
pop
dec
jnp
sbb
aas
enter
out
jnp
push
jns
rclb
fisubrl
mov
arpl
mov
repz
cmpsl
mov
mov
xor
cmp
dec
int3
cmc
mov
adc
add
in
inc
xor
push
sbb
mov
bound
and
or
mov
jmp
mov
sbb
mov
adc
and
jne
dec
dec
pusha
sub
cs
hlt
mov
notl
lret
rorl
push
inc
push
sub
fimull
or
sahf
xchg
out
xor
fsub
psubw
and
pop
mov
nop
mov
arpl
pop
xor
dec
arpl
mov
sahf
xorl
cmp
jge
ljmp
fs
scas
loop
nop
mov
repnz
nop
xlat
test
cmpsb
jnp
or
xchg
out
sbb
arpl
add
sti
or
adc
scas
push
flds
mov
testb
inc
fmul
pop
pushf
jecxz
pop
gs
pop
lahf
xor
insb
add
addr16
call
pop
pop
push
mov
and
icebp
lret
lcall
sub
mov
jns
in
negb
imul
adc
lahf
lods
test
ret
mov
ret
insl
jo
popf
cmp
mov
push
cmc
cmp
and
andl
lcall
and
sub
inc
flds
push
sub
mov
sbb
add
push
out
cmp
rcrl
test
test
cld
or
lea
push
into
dec
out
add
ja
xchg
stos
stos
push
adc
jg
pop
mov
out
dec
fcmovnb
neg
fisubs
xchg
jp
sbb
push
mov
or
cwtl
xchg
or
cmp
sarb
or
pop
popf
xchg
sub
xor
ds
shll
imul
cmp
iret
mov
mov
scas
dec
es
lods
movsl
mov
mov
xor
inc
test
nop
js
dec
push
or
int3
test
fcoms
mov
adc
stos
add
cmp
sahf
xor
sub
jle
movsl
int
bound
jnp
lret
mov
and
xchg
jne
xor
jle
out
or
test
imul
inc
mov
data16
nop
scas
andl
dec
into
bound
add
jp
popf
inc
xor
sub
stc
cmp
push
mov
mov
icebp
xor
popa
in
and
or
inc
or
addr16
xchg
enter
data16
and
adc
jg
mov
mov
sub
dec
add
sbb
mov
test
iret
push
cmp
movsl
dec
sbb
jns
push
dec
ja
pop
mov
outsl
pop
and
fildll
xchg
fiaddl
mov
into
mov
mov
outsl
mov
cmp
adc
jo
cmp
aas
cmp
pop
ss
jg
inc
out
out
mov
push
stos
xchg
iret
popa
shrl
shl
xchg
push
xor
pop
gs
loopne
sub
add
in
js
xor
mov
jno
sbb
in
pop
popa
push
fwait
add
enter
aad
dec
inc
push
in
rol
imul
jmp
lods
leave
imul
arpl
sahf
dec
ret
sub
pushf
aad
push
out
dec
sub
stos
jle
in
in
sub
sarl
mov
mov
mov
nop
fstl
pop
in
inc
sub
adc
adc
loope
repnz
cwtl
or
sub
mov
dec
sti
add
adc
pop
cmpsl
mov
adc
adc
inc
dec
in
je
push
pusha
mov
enter
adc
inc
and
mov
data16
pop
inc
and
scas
sub
mov
xabort
dec
add
repz
push
pop
aas
push
fwait
ret
adc
xchg
fistps
sti
dec
sub
xor
and
in
mov
imul
clc
js
leave
movsl
cli
pushf
mov
mov
sub
mov
fimuls
cld
xchg
in
mov
sub
mov
loopne
sti
int
divb
jno
dec
inc
std
mov
jnp
cwtl
lret
jmp
in
loope
pop
rol
scas
jo
imul
inc
fdivl
mov
or
insl
jae
jae
push
fdivl
pop
adc
mov
push
iret
out
aad
add
sbb
cmpsb
mov
out
push
call
sub
mov
sub
sbb
jne
jne
test
add
push
push
pop
xor
es
xchg
push
int
mov
in
mov
xchg
in
idivb
das
xor
clc
rcll
add
mov
xor
aaa
add
in
aam
add
cmp
addr16
inc
ljmp
xchg
mov
outsb
sbb
cmpsb
aam
sbb
mov
outsb
cwtl
setno
jno
push
loop
loopne
lock
out
and
js
sbb
pop
test
jb
sub
inc
stc
hlt
pop
or
clc
pop
sbb
push
dec
call
mov
and
enter
pop
addr16
cmp
inc
iret
outsl
jp
int3
add
in
icebp
add
pusha
mov
in
lods
scas
leave
or
add
lock
adc
mov
sbb
shrd
mov
cmp
sub
rcrb
imul
scas
sbb
adc
repnz
xchg
test
cmp
sub
out
push
pop
daa
mov
mov
sbb
insb
das
iret
xchg
fdivrs
mov
test
jp
or
data16
mov
aam
mov
jno
add
mov
adc
pop
add
mov
dec
mov
xchg
int3
bnd
icebp
insl
add
adc
fstpl
iret
test
pop
pop
daa
add
repnz
cld
cmc
push
cmp
shlb
dec
sub
adc
cmp
int
lret
flds
into
pop
pop
or
fst
into
cmp
fstl
aaa
mov
lea
outsb
jl
inc
andl
cmp
and
push
pop
gs
and
in
test
aaa
mov
sub
fbstp
repz
and
pop
cmp
jl
out
push
out
mov
adc
and
cwtl
add
jl
add
arpl
push
push
aad
mov
insl
cmp
call
and
mov
sbb
popa
cmp
sub
mov
sbb
in
aad
inc
gs
mov
xchg
cmp
mov
mov
fcomip
pop
fs
or
adc
fxam
cmp
insb
mov
mov
cmpsl
jp
lods
clc
and
insl
mov
add
cs
cmc
fidivl
test
jl
daa
add
mov
stos
xor
mov
mov
adc
lcall
pop
out
iret
idivl
pop
loop
push
das
pop
cs
pop
adc
imul
iret
aaa
in
push
lahf
aaa
cmp
jge
divl
mov
movsb
push
dec
cmp
push
in
fldcw
adc
bound
ret
std
push
icebp
int
mov
add
dec
scas
mov
and
add
jae
adc
push
inc
inc
popf
lock
add
mov
push
aad
pusha
loope
movsb
in
jns
lock
je
sub
fadds
packsswb
xchg
cld
mov
sub
pusha
cwtl
xchg
sub
rol
adc
bound
pushf
sbbl
sub
xchg
xor
or
pop
mov
sub
gs
push
mov
dec
push
sbb
xchg
mov
imul
inc
aas
cwtl
mov
inc
dec
or
jmp
inc
xorb
jp
push
cmp
in
das
push
and
insb
ds
int3
pushf
scas
icebp
jmp
and
and
pop
adc
push
dec
inc
idiv
int
divl
sti
loope
or
pop
inc
mov
es
mov
jb
dec
pop
mov
scas
sbb
adc
mov
dec
mov
jecxz
shl
out
fstps
jne
lds
leave
popw
inc
cmp
outsb
lods
inc
mov
loopne
dec
mov
pop
inc
or
in
pop
mov
sbb
cmpsl
or
push
mov
gs
mov
push
sarb
movsb
jne
xchg
mov
or
fistps
xor
loope
or
push
hlt
fisttpl
rcll
inc
int3
fistpll
mov
es
sub
es
xchg
rolb
stos
cmp
jmp
cmpsl
xor
ret
fisttpll
push
push
outsl
mov
sbb
test
fnsave
lcall
addw
dec
xchg
xchg
enter
jns
fbld
mov
js
adc
ss
shlb
icebp
fisttpl
sbb
es
cmpsl
inc
jb
imul
and
xor
ret
jb
inc
rcll
frstor
loop
cmpsl
loopne
push
mov
push
inc
ss
xor
jmp
fs
pop
jl
int
xlat
ljmp
pop
mov
pop
or
xor
and
xlat
pop
xchg
lock
sbb
dec
jmp
fwait
mov
cmp
jo
add
xchg
or
pop
and
inc
add
dec
test
push
imul
inc
fsts
stos
push
sbb
clc
fnstenv
xchg
ljmp
loope
fcoml
jp
sub
or
insl
mov
inc
xor
dec
sbb
or
int
jmp
shll
sub
cmp
push
fwait
cmp
mov
rcrl
dec
sub
pop
and
scas
int3
push
xchg
in
mov
out
adc
lahf
adc
dec
test
loop
rolb
rorl
and
pop
out
sub
mov
cwtl
dec
sbb
push
pop
in
and
add
cmp
jns
mov
lret
jno
scas
addb
scas
adcb
es
push
and
repz
cwtl
outsb
xor
or
mov
mov
push
inc
int3
jl
es
sbbb
xor
addr16
pusha
loop
push
xchg
fs
dec
in
in
mov
sahf
aas
out
loope
out
pop
call
in
jmp
mov
push
jle
bound
jecxz
das
es
sbb
lea
inc
sbb
inc
sbb
add
gs
test
xchg
out
push
shll
cmpsl
iret
pop
sub
out
lds
lods
mov
sbb
mov
ds
sub
sbb
sarl
inc
scas
mov
push
adc
inc
and
and
mov
je
out
mov
add
mov
or
ja
mov
xchg
ficoml
ret
dec
out
xor
mov
pop
xor
jl
adc
mov
xchg
negb
add
in
les
repnz
fcompl
mov
pop
fisubrs
and
repnz
jns
add
test
stos
stos
pop
negl
cmpsl
jg
imul
xor
jecxz
inc
and
insl
in
xlat
xlat
test
push
leave
xchg
cmp
lds
sub
and
stos
jne
pop
in
pop
lock
iret
cmp
or
imul
sub
je
xor
xor
xor
lea
cs
pop
dec
aad
stos
cli
jnp
xchg
sbb
lcall
jae
sub
ds
sub
loopne
test
ret
or
inc
adc
dec
lret
mov
sbb
scas
insb
dec
add
movsb
sub
sbb
mov
imul
inc
cmpsl
hlt
push
dec
dec
test
mov
int3
mov
lock
pop
pusha
jb
mov
and
ret
fiaddl
ret
stos
lock
arpl
bound
add
out
sub
movsb
dec
push
cmpsb
xchg
popf
stc
pop
fcmovb
mov
and
hlt
and
hlt
sahf
sub
xchg
mov
lods
fcoml
stc
push
out
int3
and
jnp
push
insl
xchg
fwait
push
or
daa
push
ja
mov
push
mov
jne
cmp
inc
loopne
lock
adc
mov
adcl
cmp
das
jle
xor
stos
jmp
movsl
aad
faddl
hlt
insl
test
shll
popf
lds
mov
sbb
rcrb
cmp
xchg
rcr
cmp
mov
xor
mov
pop
dec
adcb
jae
sbb
aad
mov
int3
mov
sbb
mov
movsl
and
xchg
loop
inc
xor
loope
cld
xchg
mov
dec
ljmp
fdivp
in
cwtl
adc
add
add
int
mov
xchg
or
mov
or
ljmpw
xchg
orb
xchg
js
stos
lea
and
mov
pop
xor
lret
fcmovb
sbb
push
imul
adcb
nop
in
mov
xchg
sub
mov
adc
stc
int3
dec
fisubrl
mov
pop
lds
mov
lret
sub
adc
mov
andl
dec
lods
out
xchg
enter
or
xchg
jnp
sti
sbb
out
cmp
adc
mov
mov
add
pop
inc
xor
sub
push
jle
add
sbb
out
mov
inc
fsubr
adc
jmp
or
or
cmp
lods
sbb
aas
das
dec
inc
js
xchg
arpl
cmp
into
sub
push
xchg
adc
int3
cmc
movsb
inc
adc
repz
push
mov
mov
push
lock
cwtl
out
movsl
inc
movsb
outsl
sbb
dec
mov
pop
and
jp
cld
pop
fdivp
insw
push
inc
adc
mov
mov
div
out
mov
lods
stos
xchg
push
dec
lret
jb
add
arpl
outsb
push
inc
lret
xchg
xlat
es
in
xchg
adc
jecxz
jmp
adc
mov
dec
je
lahf
mov
cmpl
push
xor
xchg
out
lds
sti
jne
adc
test
pop
call
dec
cmpsl
xor
clc
jae
jb
inc
out
inc
or
cmp
pop
pop
repnz
adc
int
pushl
frstpm(287
clc
out
pop
push
std
pop
cmp
push
push
out
cmpsl
scas
jno
insb
icebp
push
push
ret
add
xor
inc
leave
sub
xchg
add
pop
das
xor
mov
jae
or
pushf
inc
push
pusha
lea
xor
test
rcl
push
and
jne
xchg
mov
ret
sarl
mov
mov
test
jae
or
lock
sub
dec
das
xor
mov
mov
ljmp
xor
adc
push
inc
inc
test
les
mov
out
frstor
inc
jmp
cltd
dec
and
mov
lcall
and
mov
in
jcxz
cmc
jae
adc
popa
aaa
fstpt
nop
imul
pavgw
add
and
and
or
xlat
cltd
scas
imulb
fistpl
mov
js
fdivl
lods
pop
or
test
shrl
push
pop
movsl
dec
push
mov
aas
jge
sbb
pushf
inc
adc
mov
sbb
and
ret
mov
push
cmp
ficoms
pop
and
inc
cli
inc
aad
std
sti
rcl
pop
mov
in
movsb
popa
xchg
sbbl
out
inc
dec
fs
sub
lcall
mov
sbb
mov
in
pop
xchg
inc
icebp
insl
mov
cmp
andps
mov
mov
ret
and
ficompl
scas
add
push
add
mov
fs
xchg
mov
or
and
inc
push
test
inc
incl
std
out
cmp
pop
test
mov
sarb
outsl
dec
jl
arpl
gs
rsm
cmc
test
mov
fistpl
dec
jbe
sbb
sub
cltd
movl
ret
push
pop
jl
jno
adc
or
jns
mov
and
lret
sbbl
movzbl
leave
bound
fcoms
mov
mov
fnop
cmpsl
fcoml
in
or
nop
xchg
mov
test
aam
sub
pop
clc
push
fstpl
std
in
xor
icebp
test
sub
mov
fnstcw
inc
push
adcl
adc
jnp
pop
in
pop
jmp
cmpb
cld
out
pop
sbb
mov
xchg
decl
ss
int3
xor
pop
call
hlt
sub
test
adc
pop
aad
add
adc
rorb
es
xor
add
aad
xchg
mov
adc
xchg
jp
xor
fcoml
jge
insb
int3
xchg
and
mov
rorl
dec
faddl
and
subb
dec
and
adc
outsl
loop
inc
xchg
ficompl
invd
stos
xor
aad
lret
mov
les
and
shll
sub
jns
mov
jnp
fwait
pop
es
push
jl
popa
stos
test
shr
jno
movsl
mov
lds
add
push
mov
sbb
insb
dec
sub
xor
outsl
pop
loopne
and
add
jo
dec
out
lcall
jno
xor
pop
cmpsl
push
sub
in
repz
xchg
pushf
mov
jl
hlt
fadds
xchg
and
push
in
lods
push
insb
mov
mov
insb
pop
aam
mov
fwait
dec
fwait
shlb
fistpll
movl
adc
aad
loopne
adc
jno
xor
xchg
cmp
push
cltd
ss
cmp
inc
push
daa
cmc
sbb
stc
xor
mov
xlat
or
mov
and
push
mov
je
pop
jecxz
dec
xchg
insl
addr16
adc
dec
pop
jns
jbe
fwait
insl
enter
je
shlb
invd
dec
sbb
jbe
cmp
popa
xor
pushf
xor
jnp
push
xchg
idiv
shrb
inc
movsl
add
divl
mov
xchg
cmp
adc
iret
mov
pop
xor
movsl
sbb
das
out
xor
push
test
jg
sub
add
sub
enter
hlt
mov
pop
dec
ret
addb
fstpt
popa
and
rclb
cltd
dec
mov
sub
push
sbb
pop
pop
pop
fisttpll
jecxz
lds
ret
adc
aaa
or
movsb
mov
pop
jo
xor
outsl
add
pop
push
push
inc
pop
repnz
sub
push
pop
sahf
and
cmpsl
and
orl
das
or
fwait
push
out
lds
mov
inc
sub
lcall
fcom
mov
lahf
adc
and
lds
pop
outsb
icebp
push
lret
enter
cld
shrb
mov
and
mov
stc
std
inc
xchg
test
push
mov
jle
add
movsl
shr
ljmp
mov
lods
xchg
mov
push
or
push
daa
repnz
fdivp
nop
mov
xchg
roll
cmpsb
loopne
sbbl
sub
or
mov
mov
mov
lock
je
in
rcll
incl
and
data16
dec
mov
aas
dec
cld
inc
bound
arpl
in
adc
mov
inc
mov
imul
stc
jg
test
or
push
mov
jnp
cmp
iret
and
jns
sub
nop
xchg
sarb
cwtl
dec
sub
sbb
cltd
loope
in
adc
adc
adc
mov
int3
loop
notb
push
enter
or
std
daa
mov
or
mov
jg
sbb
cmpsb
cmp
mov
insb
xchg
je
add
pushf
shl
shrb
cmc
mov
sbb
outsb
sbb
out
imul
iret
in
push
and
and
out
fnstsw
ret
xchg
sti
das
sbb
xor
xlat
cltd
adc
jl
in
hlt
or
lods
sarl
add
dec
pop
mov
inc
rcrl
mov
push
insb
scas
pushf
xchg
lcall
data16
int3
add
imul
imul
popa
jecxz
add
imul
adc
or
adc
jno
cwtl
test
sub
sbb
fcmovbe
cwtl
push
call
addr16
data16
jnp
adc
dec
mov
add
sub
push
lret
aaa
inc
dec
loope
in
dec
pop
ficoms
mov
cmp
cmp
outsb
lret
pop
adc
dec
jns
jge
arpl
sbb
das
movsl
cmpsb
mov
cwtl
sahf
js
fidivrs
aaa
sub
jp
mov
and
icebp
push
outsb
cmc
xor
adc
and
cli
inc
out
notb
pop
or
loope
adc
dec
daa
pop
fldt
mov
aad
cmc
pushf
hlt
add
inc
mov
xchg
fisubs
jecxz
mov
enter
enter
push
daa
jle
es
call
dec
inc
jns
mov
dec
pop
xchg
push
or
jge
xor
cmp
jmp
sub
lock
dec
addb
sub
fmuls
mov
mov
pop
aas
gs
jbe
pop
and
lcall
push
mov
pop
scas
mov
sbb
lcall
xchg
int3
test
clc
movsl
outsl
int3
pop
icebp
dec
pop
dec
and
inc
lods
repnz
test
mov
idiv
std
mov
push
cs
out
cmpl
pusha
in
gs
call
add
push
and
es
imul
test
dec
xor
scas
daa
jne
inc
loop
add
inc
aaa
stos
jne
xchg
cwtl
leave
lock
adc
xchg
and
xor
inc
sub
stos
iret
add
inc
flds
andl
cmp
mov
push
push
mov
cmc
and
inc
imul
ja
jp
pop
data16
shrb
sub
aam
adc
jecxz
lock
push
rclb
xchg
dec
and
lods
ret
cmp
xor
fs
xchg
psrlw
out
cltd
mov
xchg
repnz
push
dec
inc
and
popa
sbb
into
popa
sahf
adc
mov
mov
jbe
push
cmc
rcl
test
sbb
fsubp
leave
lds
sub
or
jecxz
ljmp
jp
stos
mov
xchg
fwait
mov
jb
xchg
stos
test
out
icebp
aam
xchg
cmpsl
push
sbb
scas
mov
fidivl
inc
sbb
jnp
push
jecxz
push
jmp
xlat
int3
scas
lock
xchg
rorb
clc
add
pop
xor
movsl
jp
inc
xchg
and
addr16
ljmp
or
fdiv
sub
and
into
lret
xor
stos
enter
pop
mov
xlat
cmpsb
sub
xor
jb
repz
and
xchg
or
lock
push
cmp
fcompl
rcl
js
sbb
aaa
mov
leave
orb
insl
push
xor
es
push
dec
add
ss
mov
jg
aaa
or
bound
and
add
push
roll
jne
cmc
into
mov
inc
fs
mov
jmp
adc
les
adc
dec
dec
add
fmul
and
and
sub
div
sahf
or
out
cmpsb
es
inc
insb
pop
pop
mov
mov
rorb
sbb
sub
into
fldt
cmpsl
add
aam
or
jno
fstpl
xor
adc
xchg
cli
rorl
inc
shlb
inc
adc
push
int3
repnz
add
mov
jp
std
push
jb
or
pop
add
jno
shll
or
std
addr16
jmp
mov
aaa
xchg
xor
jnp
adcb
lcall
xchg
sub
aaa
xor
mov
in
popa
fdivrs
outsl
jne
jo
sbb
inc
mov
or
mov
cs
idivl
cmpsb
arpl
icebp
jo
inc
addr16
and
or
roll
pop
dec
out
loope
add
out
cmp
arpl
inc
sub
and
ja
into
in
lret
sub
xor
call
stos
push
test
mov
xor
ljmp
adc
xor
mov
out
jbe
mov
or
out
sbb
int
mov
adc
imul
mov
lods
or
dec
leave
lret
and
std
int
mov
xchg
adc
mov
and
test
add
outsb
scas
push
into
jbe
dec
pop
shrb
imul
jp
enter
inc
sub
fcmovnb
fwait
sbb
ljmp
in
pop
and
and
pop
inc
int3
cmp
dec
gs
fstl
mov
popa
mov
shrl
add
int3
jp
xor
mov
fisttpl
repnz
test
add
dec
scas
shll
call
cwtl
pop
inc
xor
frstor
jno
xlat
push
nop
out
rolb
jp
push
cmpsb
test
sub
mov
lds
or
test
add
cld
cmp
push
cltd
out
loope
test
mov
fiadds
mov
sbb
xchg
push
sarl
xor
sub
push
popa
inc
mov
dec
ja
daa
fistpl
fsubrl
and
in
mov
insb
jecxz
cmc
xor
je
jmp
std
cmp
xchg
cmp
inc
push
mov
jnp
les
popa
push
out
dec
pop
outsb
xor
addr16
mov
inc
dec
sub
decb
inc
xchg
sub
out
inc
add
push
xor
add
jno
xor
xchg
mov
dec
adc
fadd
pop
mov
add
pop
call
pop
pop
mov
mov
cmp
pop
cmpsl
inc
popl
sbb
mov
xor
push
push
pop
insl
nop
test
pop
xchg
fdivl
iret
and
and
xor
push
cmc
int
mov
adc
dec
mov
ret
imul
adc
or
mov
push
imul
jo
lret
ja
das
add
out
push
sbb
icebp
dec
lods
rcll
push
sub
inc
loop
fdivrs
repz
xor
mov
imul
les
dec
cli
mov
loopne
sbb
add
jl
outsb
jl
addr16
add
xlat
and
pop
cli
jmp
dec
gs
fdiv
sbb
sbb
pop
divb
pushf
adc
outsl
call
call
fildl
stc
iret
sub
les
popa
sti
rcrb
push
mov
jl
or
outsb
jl
push
xlat
push
jae
mov
xor
mov
xor
push
sbb
xchg
fsts
les
cmpsb
cs
add
cmc
xchg
hlt
add
cltd
adc
push
int3
hlt
mov
pop
jns
mov
adc
clc
ds
sub
outsb
adc
sbb
dec
sbb
aas
cmp
das
lahf
sarl
dec
inc
out
ljmp
adc
lret
pop
adc
loop
jne
cmpsb
cld
cwtl
pop
mov
fidivl
stos
mov
cmp
mov
adc
repnz
cltd
push
repz
add
xor
jnp
mov
jnp
xchg
aad
push
fdivp
mov
jl
pop
mov
sbb
iret
xlat
xchg
lds
mull
pop
leave
adc
ja
mov
fs
movsl
mov
daa
inc
into
dec
repz
enter
aad
les
add
shlb
sbb
ss
jecxz
mov
outsl
in
addl
mov
loop
xchg
nop
mov
int
sub
jne
enter
add
xor
jno
aas
inc
aaa
hlt
add
xor
sbb
pop
movsb
jno
scas
mov
pop
imul
push
inc
test
ljmp
jns
lcall
push
and
lods
lcall
pop
sub
repz
out
xor
and
sub
dec
and
xor
fnstenv
scas
cmp
shrl
loopne
movsb
and
cwtl
add
xor
sbb
lret
mov
pop
or
xorl
xchg
sub
mov
jb
mov
add
inc
rorl
xchg
in
or
add
leave
cmp
xchg
pop
mov
or
mov
jae
popl
outsl
xor
mov
test
and
push
fnstenv
pop
pop
in
cmp
and
std
imul
xchg
xorl
cmp
jae
add
or
sbb
jb
inc
push
xchg
adc
arpl
mov
add
dec
add
imul
inc
push
rcrl
sub
add
aam
mov
sub
insl
test
adc
xor
jmp
or
sub
inc
out
mov
mov
mov
and
xor
nop
pop
jno
sub
das
and
fwait
lds
fnstenv
inc
dec
cs
adc
add
fildll
adc
cmc
shll
insl
outsl
out
mov
mov
leave
rcrb
dec
xchg
jne
cs
daa
sub
movb
test
dec
sbb
fcompl
aaa
insl
addr16
leave
lods
aaa
mov
mov
cltd
cmp
hlt
fildl
cld
popl
ret
jnp
dec
sbb
faddl
loop
ljmp
pop
scas
push
xchg
clc
mov
fwait
out
loope
push
adc
sbb
adc
stos
adc
inc
mov
fildl
or
xor
push
icebp
xchg
jns
clc
sbb
das
addr16
std
cli
dec
sarb
or
and
addr16
leave
xchg
popa
jmp
movsl
inc
nop
jae
loope
cld
pop
jnp
cmp
gs
fistl
mov
fwait
dec
test
dec
adc
mov
mov
into
mov
mov
push
pop
inc
out
add
jmp
sub
jmp
sbb
mov
mov
pop
jne
ds
in
adc
inc
add
rcll
fcmove
pop
mov
dec
sbb
fs
mov
ss
mov
fildl
popa
fmull
addr16
inc
frstor
testb
mov
mov
scas
xor
xchg
stc
push
and
divl
sbb
lret
dec
loop
cmp
adc
rcrb
daa
pop
sbb
stos
lds
adc
pusha
lret
inc
sarb
pushf
out
cmpsl
ds
andb
ret
fldl
and
subl
addr16
mov
push
sub
xchg
push
push
scas
jp
rcl
xor
or
std
sbb
int3
inc
and
push
andl
dec
mov
mov
dec
test
testb
mov
test
ljmp
sub
xor
lods
adc
mov
add
xor
sbb
iret
aas
fidivs
dec
in
push
dec
jecxz
mov
ret
mov
sbb
xlat
test
jb
jno
ss
scas
pop
popa
jbe
dec
lret
mov
jge
iret
pop
jmp
clc
movb
mov
push
icebp
std
dec
into
incb
cmc
jae
mov
addr16
jo
scas
dec
cld
mov
mov
xchg
add
fdivrs
jns
movsb
mov
imul
and
adc
cmpsb
cmc
lods
int3
push
xor
mov
ja
shrl
add
fwait
lock
cmp
and
sbb
fs
nop
xchg
js
das
adcb
aad
xchg
add
iret
daa
sub
mov
pop
stc
or
pop
push
xor
jmp
adc
push
fwait
ja
xchg
ljmp
nop
pop
lds
or
inc
lods
mov
lea
and
jbe
xchg
int3
dec
pushw
pop
jle
xor
ret
cmp
int
pusha
sahf
sbb
call
sbb
testb
pop
hlt
dec
int
imul
jmp
jb
add
nop
js
test
fidivrl
xor
mov
jmp
push
push
add
lahf
pusha
mov
pop
mov
stos
les
cwtl
and
jo
cmp
dec
mov
clc
gs
call
sbb
mov
dec
jmp
xor
shll
xchg
mov
add
mov
inc
test
mov
das
stos
mov
mov
das
outsb
push
adc
gs
sbb
mov
xor
lahf
push
mov
xchg
adc
imul
xchg
inc
ffree
add
mov
cmpsl
and
sub
sahf
dec
insl
fucomp
jns
lods
das
js
fisttps
jmp
lds
leave
shll
sbb
pop
xchg
mov
or
push
lcall
xor
repnz
repnz
cmp
mov
je
push
jno
mov
loopne
les
cltd
xor
sub
sbb
loop
xchg
iret
in
inc
and
mov
and
scas
pusha
xor
repz
scas
inc
and
test
jo
or
lea
movsb
or
push
cmpsb
cmp
mov
cmp
cmp
xor
sub
loopne
or
push
dec
mov
or
fisubl
push
movsl
xchg
push
adc
inc
and
stos
pop
lcall
scas
and
mov
or
mov
stos
insl
lock
sbb
ja
bound
dec
and
iret
sbb
xchg
or
scas
fucomi
cs
roll
inc
xchg
es
push
scas
xor
test
lahf
scas
jae
push
ljmp
mov
jne
mov
int
dec
cli
daa
adc
cli
cmp
jno
sub
mov
add
or
push
fdivrp
hlt
ja
shrl
push
out
xchg
xchg
fsts
es
xchg
lahf
jmp
ss
test
inc
mov
xchg
cmp
lret
xor
jmp
fwait
dec
enter
pop
cmp
jecxz
jmp
jbe
mov
icebp
and
imul
into
jns
push
push
dec
aam
adc
loopne
add
fs
sbb
mov
sub
jae
push
adc
ja
cmpsl
lock
xor
dec
sbb
pop
lret
pusha
or
enter
mov
cmp
inc
jmp
cmpsl
mov
fadds
test
jecxz
sbb
fwait
shrd
mov
test
pop
push
cmp
subb
jns
cmp
orl
pusha
test
testb
aad
jg
mov
hlt
and
pop
and
inc
popl
dec
inc
insb
cmp
es
xchg
lds
pop
out
cmpsl
test
pop
movsl
add
xor
and
push
push
xchg
rclb
test
shld
and
mov
add
cmp
add
int
scas
sarb
mov
shlb
push
gs
mov
sbb
mov
addr16
xchg
jmp
push
dec
sbb
aaa
lds
repnz
sbb
xchg
scas
scas
jno
pop
dec
cmp
sahf
stos
mov
cwtl
add
inc
jle
insb
inc
jg
cld
fadds
lods
push
bound
xor
popa
cmp
sub
sahf
adc
mov
mov
in
iret
inc
movsb
rclb
jg
push
cmp
fsubrs
cmp
adc
imul
push
and
mov
std
cmp
sti
pop
adc
adc
inc
into
lock
into
js
push
gs
mov
xchg
mov
hlt
ja
andb
roll
arpl
push
adc
push
fnstenv
push
inc
shll
out
loop
xchg
adc
mov
mov
xchg
sbb
cmpsl
dec
loopne
push
clc
push
test
enter
push
in
dec
sarl
xchg
sub
dec
dec
jne
or
aaa
or
bound
inc
scas
popf
outsl
add
mov
cmp
out
and
add
mov
xorl
pop
lret
leave
test
scas
push
test
popa
popa
cmp
or
jae
xchg
mov
pop
xor
movsl
inc
pusha
int
imul
pop
xor
daa
jnp
pop
flds
aas
roll
jo
mov
pop
fsubrl
or
dec
loopne
mov
xchg
adc
movsl
inc
ljmp
testl
push
cmc
std
mov
mov
mov
or
sub
cmpsb
pop
mov
jne
mov
add
sbbl
xlat
jnp
xchg
xor
and
mov
outsl
fwait
movl
or
mov
xorl
inc
mov
ja
pop
das
xor
push
push
mov
ficoml
flds
jb
xchg
pop
gs
popf
and
aam
jge
sub
sarb
push
stc
xchg
jne
lret
roll
or
or
es
inc
lcall
mov
repnz
or
test
les
daa
test
fsubp
fimuls
mull
xchg
xchg
div
inc
std
ja
sbb
lret
loopne
or
cmp
mov
push
push
call
cmc
sbb
xchg
push
pop
mov
nop
sbb
fs
sbb
mov
xchg
aas
jae
shlb
test
out
lds
dec
xchg
int
jge
xor
ds
or
lods
push
mov
push
frstor
js
sbb
roll
inc
fistpl
enter
iret
or
dec
imul
push
stos
mov
and
xor
testb
rolb
pop
rcrb
jmp
push
xchg
aaa
cmp
into
sbbb
sbb
out
rcll
and
sbbl
test
test
mov
fidivrl
adc
dec
adc
das
jno
cmp
sub
jmp
sub
movb
cmc
out
cli
jb
cmp
jne
mov
mov
mov
mov
stos
adc
jo
cltd
adc
insl
mov
scas
dec
stos
inc
gs
imul
lea
fstps
sub
dec
add
xchg
lret
mov
icebp
outsb
adc
leave
stos
enter
or
test
push
pop
aas
sub
push
mov
sub
lahf
int3
popa
sub
enter
push
mov
mov
lods
fmuls
aad
outsl
iret
push
xchg
data16
dec
pop
stos
fstl
cwtl
lea
adc
fists
div
add
movsb
imul
pushf
cmp
push
not
jne
or
xchg
push
and
mov
jbe
add
sub
mov
fcmovne
ja
lcall
sarb
aas
pop
nop
mov
push
jg
dec
dec
sarb
subb
dec
je
add
jmp
std
sub
imul
or
sbb
cwtl
out
cmp
js
inc
rcrl
int3
pop
adc
mov
ret
add
fwait
cwtl
xchg
jp
test
loop
xchg
cld
call
jo
rolb
jnp
inc
pop
test
push
insb
cmc
cld
shlb
dec
dec
es
insb
je
popa
jg
mov
sbb
movsb
loopne
outsl
xor
jmp
mov
xchg
mov
int3
or
rclb
push
xor
xchg
js
mov
mov
ret
je
cmpb
gs
sbb
in
dec
fisttps
orb
ds
xchg
cltd
setbe
fisubrl
movsb
divl
jmp
movsl
pop
lock
or
cmp
dec
pop
test
mov
and
and
fwait
loopew
jnp
daa
cld
aad
jo
pusha
sub
in
out
push
or
sbb
jne
xor
jl
and
fstpl
cli
mov
imul
shrl
cmc
cmpsl
popa
jnp
fisttps
mov
jle
and
incl
fwait
jb
movsb
pop
xchg
xor
jae
test
or
movsl
adc
push
mov
push
add
loopne
ret
jne
pop
push
std
bts
stos
inc
roll
lock
push
lea
hlt
or
jmp
cltd
rcl
xchg
js
das
dec
mov
faddl
xor
out
iret
mov
dec
dec
sub
roll
mov
iret
inc
push
mov
or
jle
out
sbb
dec
adc
jno
or
mov
sarl
mov
sbb
insl
into
adc
or
lret
dec
push
push
cmpsb
push
jnp
lds
sbb
xchg
test
lock
mov
lds
dec
fiaddl
xor
andl
fmuls
pop
incb
into
push
movsl
add
pop
insb
fidivs
fs
mov
lret
pop
xchg
daa
sub
popfw
stos
add
addb
inc
or
test
lret
xchg
sti
in
mov
jge
jns
inc
ret
mov
bound
sahf
mov
and
aaa
inc
add
dec
mov
push
daa
pop
push
rolb
into
scas
mov
test
pop
fisttpll
rcrb
lods
sbb
test
push
adc
in
insl
subps
repnz
cmp
jmp
inc
mov
mov
nop
cli
mov
mov
sarb
and
out
adc
mov
negb
loopne
push
add
jb
xor
lcall
mov
call
lock
test
sbbl
lret
sub
xor
orl
sbb
in
ret
mov
rcll
popf
pop
shrb
loopne
dec
scas
push
cmp
mov
movsb
xor
int3
cmpl
stc
mov
imul
sbb
and
mov
movsb
and
adc
push
sub
cmp
adc
sti
fmull
inc
shl
mov
and
push
or
hlt
inc
push
fstpt
and
aas
push
imul
jbe
in
fiaddl
sub
lcall
stos
pop
rcrl
lods
leave
adc
pushf
sbb
sahf
pushf
in
mov
xchg
aam
and
cmp
hlt
divl
sub
out
dec
js,pn
movsl
mov
pusha
shl
jo
dec
rcl
jl
mov
jl
mov
push
out
imul
mov
repnz
ss
aaa
imull
push
inc
cld
test
pusha
xlat
mov
mov
cld
adc
stos
je
or
cltd
pop
inc
rorb
push
add
movl
in
ljmp
out
bound
std
lcall
fcomp
dec
and
hlt
push
dec
and
sbb
mov
sub
cmpsl
dec
mov
dec
or
add
cmpb
adc
js
adc
ds
out
fcompl
pop
testl
insb
in
jne
movsl
mov
sbb
xor
pop
outsb
adc
push
sahf
aad
out
mov
and
test
xorl
int3
adc
mov
mov
cmp
fs
shlb
lods
rcl
jmp
adcl
mov
jb
jns
bound
jmp
aas
out
adcb
mov
cmp
inc
mul
or
data16
test
loope
jb
or
nop
fidivrs
add
mov
test
rorl
push
jb
and
mov
sub
and
sub
push
pop
xchg
lcall
dec
inc
int
loope
jl
xchg
jo
or
add
adc
dec
or
mov
jne
out
cli
outsb
jne
je
and
notl
push
popf
xlat
iret
push
call
pushf
jb
arpl
or
inc
mov
cmp
mov
pop
jns
je
fisubl
mov
in
and
in
xchg
lcall
movsb
sub
mov
clc
pop
sahf
xchg
cmp
adc
cld
in
movsl
and
and
or
jne
aam
mov
cmp
mov
ljmp
or
or
jle
scas
mov
fcoms
int3
mov
add
mov
sahf
nop
cmpsl
jmp
ja
arpl
xchg
jne
mov
sub
mov
fistpll
add
fcomp
mov
jge
test
stos
or
popf
stos
mov
aas
pop
dec
filds
jp
jp
insl
leave
sub
adc
mov
cli
imull
push
insb
pop
sahf
mov
ss
popf
js
pop
pop
pop
xchg
mov
xchg
and
mov
mov
push
push
int
pop
adc
icebp
add
sbb
hlt
mov
inc
xor
shl
cs
adc
mov
insl
dec
mov
bound
jns
sbb
mov
dec
xor
movsl
jge
pop
inc
mov
rcll
jae
lahf
mov
out
dec
and
je
cld
push
push
push
lea
adc
inc
inc
aas
aas
cltd
pop
xchg
out
inc
cmp
push
push
mov
mov
repz
gs
and
xor
or
push
xor
xchg
cmp
cmp
push
test
jmp
cmp
aam
loop
jb
sbb
push
roll
jae
mov
or
pop
xchg
jmp
cli
ss
notl
out
mov
push
sbb
mov
in
stos
mov
xchg
adc
xchg
hlt
pop
dec
and
jae
scas
add
mov
push
icebp
xor
pop
adc
outsb
xchg
addl
rclb
sub
sbb
inc
adc
push
inc
and
xchg
xchg
nop
xchg
mov
ss
add
cmp
sub
fisttpl
sbb
adc
ss
js
clc
int
xchg
mov
adc
test
push
daa
add
mov
jae
dec
movb
iret
hlt
xchg
mov
lahf
stc
xor
les
mov
sub
ret
ror
adc
adc
mov
mov
xchg
into
inc
mov
clc
aam
scas
cltd
faddl
ja
hlt
and
sub
test
ja
jo
clts
sub
rcll
js
xchg
cmp
sbbb
add
mov
mov
sbb
dec
mov
cmpsb
xchg
movsb
mov
je
mov
loop
jbe
pop
outsb
rcl
fldt
daa
mov
sarb
jecxz
insl
or
lock
movsb
decl
sub
test
xchg
add
dec
mov
mov
lret
sub
push
sbb
xor
hlt
ret
push
ret
dec
test
mov
cmpl
inc
mov
rclb
jecxz
xchg
add
addr16
cmp
pusha
xor
xor
mov
adc
jmp
cmpl
lret
lock
mov
rcll
jle
les
push
sbb
faddl
push
mov
sbb
pop
repnz
mov
in
outsb
dec
pop
mov
data16
leave
sar
and
adc
mov
popa
xor
cmp
or
cmp
mov
sub
jl
cmp
push
cmp
outsb
jl
mov
gs
movsb
sti
fistpl
jmp
adc
shll
lret
mov
cmpsl
mov
or
adcl
enter
adc
ret
and
fsubrl
test
adc
push
lds
mov
push
fwait
addr16
nop
mov
ror
out
mov
lods
push
stos
mov
xor
ret
lods
xor
mov
xor
aam
movsb
push
add
jle
adc
int3
xchg
mov
scas
fldcw
sbb
outsl
call
hlt
push
inc
icebp
stc
mov
add
mov
push
adc
mov
gs
rcrb
mov
push
scas
or
and
xchg
jnp
cmc
sti
das
add
adc
shr
push
movaps
ss
adc
imul
out
roll
xchg
enter
mov
add
mov
mov
jns
jmp
popf
pop
lock
jns
mov
lret
stc
mov
adc
jno
dec
xor
rcrb
mov
icebp
cmp
and
sbb
cltd
fimull
sbb
out
or
test
scas
push
clc
call
jle
sub
ret
icebp
fisubs
mov
mov
add
arpl
cmp
sbb
data16
mov
xor
cld
arpl
pop
mov
inc
sbb
xchg
add
subl
sub
mov
sbb
in
jge
push
sub
jg
add
inc
sbb
xchg
add
xchg
sbb
cmpsl
and
push
mov
inc
into
fldcw
scas
dec
xor
cltd
push
ds
pop
jns
mov
cmp
jle
jne
xchg
les
sub
ret
ret
xchg
popa
pop
push
push
fisttpll
aad
mov
rclb
jp
jmp
aad
pop
xor
std
lret
cmp
faddl
push
jle
and
xor
popa
pop
inc
rorl
or
lcall
jae
scas
lods
add
adc
push
xchg
repnz
shll
fisubrs
out
push
sahf
pushf
adc
pop
ret
push
fwait
push
and
mov
in
or
push
orb
jge
mov
mov
inc
mov
fcompl
test
imul
push
fadd
and
cmpsb
std
out
pop
clc
mov
jp
push
jae
mov
sub
clc
lret
adc
stos
sti
fnstenv
sub
lret
or
out
enter
lds
jns
push
mov
adc
into
out
inc
mov
daa
or
sarl
cmc
dec
dec
pop
mov
sub
add
das
cmp
and
mov
or
shl
mov
inc
inc
mov
mov
jae
push
outsl
test
stos
xchg
mov
shll
dec
sahf
subb
maxps
xchg
ret
pop
daa
aad
popf
test
scas
dec
push
je
or
movsb
xlat
xor
jnp
fcompl
daa
dec
leave
mov
add
lcall
dec
or
movsl
mov
push
xchg
test
jne
and
fisubrs
imul
mov
popf
test
lds
cli
pusha
lods
jg
sbb
lahf
adc
adcb
sar
inc
mov
mov
ss
out
lret
stos
dec
iret
mov
ds
jns
out
loope
add
setl
ljmp
les
xchg
aad
xlat
mov
aaa
fadds
shl
push
cmp
push
loop
lret
mov
int3
in
lcall
cmpsl
jge
into
je
jae
cmp
in
movsb
push
xchg
sub
mov
in
sti
movsl
and
cmp
add
icebp
inc
sbb
ds
fisubrl
mov
es
rep
xchg
and
jb
rorb
mov
jecxz
xor
into
or
idivl
cmpsb
sub
filds
dec
call
and
jmp
icebp
sub
ffreep
push
mov
in
popa
out
cmp
mov
adc
push
aam
adc
xor
aad
lret
stos
stos
adc
xlat
mov
push
stos
rcl
loop
ret
sbb
jne
repz
cmp
mov
or
and
mov
fwait
subl
xor
xchg
sub
xorb
inc
popa
mov
push
inc
mov
inc
xchg
ja
lock
enter
push
dec
adc
lcall
into
xlat
mov
xlat
out
xor
jne
mov
cmp
roll
and
or
sbb
push
mov
mov
or
lods
nop
sbb
fsubrl
jae
inc
xor
jae
or
xor
push
sbb
xor
adc
int
std
lods
cmc
mov
push
mov
pop
lods
mov
sbbl
sub
loopne
ljmp
out
mov
cli
gs
cmp
loop
jae
sbb
clc
loope
push
and
insb
inc
inc
jg
cmp
push
mov
or
lea
adc
call
jle
repnz
mov
cmc
dec
iret
mov
mov
adc
adc
mov
push
mov
mov
sahf
xchg
mov
push
int
adc
je
mov
xchg
pop
lret
xor
pop
dec
add
inc
push
sbb
jp
enter
andl
inc
add
roll
mov
xchg
jmp
clc
cltd
inc
mov
inc
cli
inc
jge
mov
call
and
mov
into
inc
xchg
sub
je
or
in
stc
arpl
fdivl
mov
cmp
mov
lock
rorl
int
jbe
js
bound
xor
inc
mov
mov
dec
loope
jge
sbb
mov
test
jle
cmp
sub
dec
lods
call
inc
iret
ljmp
xor
mov
fcompl
sub
push
mov
scas
pop
stos
scas
pop
xchg
mov
add
ret
fcoml
inc
add
fstl
stc
imul
sub
outsb
xchg
aaa
adcl
movsl
xchg
ret
pusha
sahf
add
and
xor
dec
in
jb
xor
jecxz
addr16
add
pop
popf
cmpsl
pop
push
pop
pop
out
sub
mov
mov
call
movsb
aad
ja
inc
fcmovb
or
cmpsl
sbb
jmp
dec
mov
arpl
mov
ss
incl
repnz
inc
adc
pop
addr16
mov
insb
imul
nop
cmp
scas
xchg
popl
xor
out
movsb
arpl
inc
inc
jb
fistps
scas
mov
repnz
push
call
xorb
add
das
aad
jge
push
lret
jl
mov
inc
iret
shl
sbb
mull
push
sub
adc
dec
cmpb
icebp
inc
add
push
loopne
cmp
mov
cs
pop
or
fldcw
in
cmpsb
cmp
loope
or
sub
and
lods
out
sti
mov
or
mov
inc
lret
cmp
add
adc
jbe
test
dec
ja
xor
pop
cwtl
adc
or
and
lcall
sbb
mov
shlb
xchg
pop
pop
in
cmc
xchg
mov
movl
xchg
stc
int
lock
out
inc
aad
or
lods
scas
xor
inc
inc
jge
push
mov
lds
loop
jmp
or
mov
and
test
out
jg
mov
dec
jge
inc
repnz
xor
pop
mov
lock
mov
nop
aas
jbe
adc
xor
shrb
xor
out
outsw
mov
lock
xchg
insl
lahf
mov
or
xchg
outsb
pop
add
xor
sub
fisttpll
sub
jmp
pop
clc
add
ljmp
xor
ljmp
movsl
inc
jge
fwait
sub
out
mov
movsl
xchg
in
mov
sub
push
cmpsl
out
jne
jg
stc
push
repz
pop
into
sbbb
mov
fcomip
push
mov
mov
jge
push
insb
sub
icebp
imul
daa
push
push
cmp
sarl
in
insb
push
or
fistl
sbbl
cmp
add
jmp
enter
shlb
jge
xlat
iret
cwtl
sbb
lret
cld
leave
xchg
loope
and
cld
sub
ffreep
gs
or
outsb
jmp
pushf
cmpsb
cmp
mov
mov
sbb
loopne
cmp
inc
sbb
gs
scas
lahf
daa
mov
cmc
int3
sbbb
pop
cmp
nop
pop
pop
cmp
push
xchg
not
xor
popf
dec
cld
stos
and
lds
lock
lods
gs
xor
pop
mov
out
xchg
inc
out
aas
bound
movb
add
xor
push
and
decl
mov
das
push
dec
mov
scas
outsb
xlat
mov
adc
inc
js
sbb
mov
lret
add
and
rcrl
mov
repz
adc
inc
jge
outsb
mov
repnz
lahf
xchg
mov
das
cmp
sbb
ficoms
mov
mov
shrb
push
scas
and
xor
popf
mov
dec
sahf
mov
adc
lea
bound
scas
jge
fnsetpm(287
aad
iret
xchg
jns
mov
and
scas
push
add
mov
xchg
mov
cmp
clc
hlt
jo
push
mov
inc
ja
ret
mov
test
push
add
gs
cmp
mov
lret
fimull
inc
xor
inc
je
push
cmp
xlat
xor
jb
sbb
push
inc
pushf
add
xchg
out
lea
ss
xor
mov
stos
popa
scas
pop
dec
pop
sbbl
xchg
daa
mov
scas
mov
popa
and
add
xor
pop
call
inc
mov
icebp
cld
adc
subl
inc
ss
mov
dec
xchg
imul
or
or
sub
in
mov
sti
adc
repz
dec
sub
ds
sub
pop
fldl
mov
fs
xor
cwtl
push
fadd
in
popa
dec
inc
jnp
pusha
add
fs
icebp
jae
stc
imul
js
ret
imul
xor
cli
stos
inc
and
inc
pop
inc
or
xor
in
pop
bound
mov
repnz
pop
pop
jae
aaa
jne
call
jne
fcomi
fists
addr16
cmc
into
push
mov
pusha
dec
imul
jae
xor
or
push
jl
scas
xor
push
loope
int
nop
ljmp
out
andl
add
cmp
mov
add
jb
ret
lods
pop
cmp
pop
cmp
sub
adc
xchg
sbb
ja
cmp
into
mov
mov
insl
cmp
enter
lds
out
push
aam
mov
mov
jo
jnp
adc
scas
lcall
fwait
push
inc
sbb
fs
jne
and
lea
sub
xor
outsl
arpl
add
out
aaa
hlt
sbb
cli
cmp
repz
xchg
push
xchg
in
and
shll
cmp
mov
fcomip
cwtl
xchg
push
mov
cmpsl
or
es
mov
mov
add
adc
cmp
ds
dec
flds
push
and
pop
sbb
into
int3
pusha
cmp
aad
mov
enter
rcrl
movsl
test
sbbb
mov
in
mov
sbb
adc
jne
loopne
lods
imul
xchg
insl
call
pop
shl
aam
add
fldenv
iret
int3
xor
stos
icebp
jp
test
fisubl
incl
dec
pushf
dec
mov
fists
cmp
popa
cmp
and
mov
test
push
dec
add
jns
jle
movsb
mov
pop
or
lods
push
xor
sbb
mov
int3
ss
enter
icebp
mov
mov
or
fists
cmpsl
pop
pop
cmp
int
fisttps
or
adc
lea
in
mov
ja
pop
jl
pop
loope
nop
jne
movl
mov
and
ret
mov
jge
ds
rcrl
aas
lock
mov
lods
cmpsl
roll
test
insl
enter
mov
cwtl
or
mov
subb
lcall
xchg
arpl
icebp
test
add
inc
mov
pop
push
cmc
add
xorb
and
lretw
add
in
push
mov
ret
cli
cmpsl
ficomps
xchg
test
test
push
push
int
inc
nop
mov
les
setno
inc
mov
cld
jl
in
pop
out
dec
aas
fdivl
xchg
fistps
inc
push
xchg
cmpsb
xor
rclb
inc
cmpsb
and
inc
jecxz
repnz
loope
push
out
frstor
cmc
gs
sub
or
mov
push
lods
push
test
pop
aam
jo
cmp
pop
mov
push
push
dec
out
cs
mov
test
ds
outsb
cli
pop
call
push
cmp
sti
pop
scas
mov
ret
inc
out
adc
adc
out
jmp
or
popf
push
lods
daa
sub
mov
dec
imul
sbb
push
and
psrlw
inc
in
jnp
outsl
dec
adc
push
jl
add
push
fnstcw
pop
mov
in
out
mov
and
icebp
pop
mov
adc
dec
inc
xor
jne
arpl
adc
insb
adc
test
repz
loope
jg
add
mov
cmp
sbb
pop
fiadds
int3
roll
pop
or
add
adc
sbb
or
dec
sbb
mov
cmc
xor
cmp
cmp
push
mov
aas
call
pop
mov
xchg
leave
arpl
sub
cmpsb
sub
sub
mov
leave
in
das
lcall
jo
insl
xor
inc
mov
inc
loop
shlb
mov
cmpsl
mov
mov
cld
xor
and
inc
cmp
dec
inc
mov
sub
mov
aaa
mov
xchg
sarb
mov
aaa
sti
test
sub
enter
nop
mov
notl
rcll
pop
dec
xchg
jae
lods
sarb
or
xchg
outsl
xchg
mov
sahf
push
sbbl
imul
xor
aas
clc
daa
jb
xchg
aas
fisttpll
faddl
in
dec
or
push
outsb
nop
enter
cmp
mov
jmp
movsl
jbe
pop
fiadds
inc
push
mov
fcomps
mov
enter
inc
push
sahf
pop
in
sbb
jnp
imul
lret
lds
jmp
or
or
ljmp
imul
jle
enter
popf
in
jecxz
mov
or
push
mov
jo
in
push
ret
sbbb
insl
lea
jne
sub
push
pop
and
xchg
cmpsb
inc
sub
mov
sbb
outsb
fcoms
mov
cltd
push
xor
insb
hlt
mov
outsb
fmulp
mov
xchg
push
movsb
xchg
lea
outsl
mov
lret
mov
ret
or
fisubl
inc
push
mov
cmp
cs
mov
sbb
mov
fwait
lods
inc
mov
push
mov
pop
lea
jns
aam
push
lcall
loope
dec
adc
pop
repnz
movsb
addr16
cmpsl
mov
mov
pushf
mov
and
jns
mov
call
add
into
adc
bnd
push
inc
jge
push
js
aas
iret
and
shll
xor
shlb
insl
ficompl
jle
sub
xor
xchg
loope
jnp
lahf
mov
aaa
cmp
jge
out
adc
out
out
movsl
ss
jo
xchg
mov
jo
adc
cltd
jp
cmpb
mov
xor
mov
ds
xchg
push
inc
xor
cwtl
inc
data16
stc
addr16
add
sbb
outsb
cmp
push
cmpsl
mov
jo
jle
insb
push
loope
xchg
stos
adc
push
adc
or
dec
add
iret
stc
mov
push
ret
push
sub
cmp
js
iret
fldt
in
aad
cmp
mov
movsl
push
mov
pop
fbstp
mov
add
out
jne
push
arpl
push
js
lods
fstpl
out
and
xlat
sbb
cmpsl
fldcw
xchg
pop
xorb
stc
lret
and
jne
xchg
xlat
mov
mov
out
xor
add
stos
cmc
pop
pop
lock
out
add
push
mov
fidivrl
ja
add
dec
clc
rcll
pop
cmpsl
xor
cmc
sbb
push
lret
inc
fwait
rorb
adc
js
and
and
test
clc
adc
jl
imul
addb
and
int3
mov
mov
mov
jmp
out
mov
push
cwtl
or
or
sub
jno
test
mov
call
pop
mov
xchg
in
push
mov
test
shll
xchg
or
pop
es
mov
mov
dec
into
xorl
int
pop
mov
addr16
mov
inc
mov
xlat
dec
enter
test
in
xlat
xor
jge
mov
rolb
or
push
and
repz
mov
pusha
jg
repz
test
dec
fisttpl
test
jbe
xorl
xor
jp
icebp
loope
jmp
jl
movsb
in
pop
lahf
ljmp
dec
ss
mov
andb
sub
adc
xor
cltd
ljmp
in
add
mov
ret
pop
xchg
mov
loop
xor
jl
xchg
adc
mov
js
or
leave
mov
int
sbbl
push
fimuls
dec
and
and
dec
sbb
lcall
fdivs
loope
ds
int
sar
repz
push
push
jnp
adc
add
push
pushf
pop
and
rorl
mov
pop
and
xor
shrb
jne
mov
sbb
lcall
sbb
mov
jecxz
rolb
lods
call
lret
ds
loop
mov
sbb
adc
lret
xchg
sar
movsb
add
movl
sti
inc
cli
cmc
add
in
inc
cmpsl
mov
add
jmp
adc
call
push
notb
mov
mov
test
ds
jl
stc
mov
ret
adc
pop
jl
fidivrs
xchg
mov
negl
fldenv
icebp
xchg
jmp
fwait
mov
fdivrl
xchg
std
shl
mov
subl
pusha
nop
jmp
movsb
mov
jle
pop
or
mov
mov
lods
sbb
jle
test
and
jl
cmp
push
add
xchg
arpl
scas
jnp
cmp
je
fwait
out
pop
xchg
aam
dec
xchg
rcrb
cmp
xchg
repz
inc
ljmp
call
adc
push
push
xor
ljmp
push
ljmp
mov
mov
sub
bnd
sarb
aaa
and
fisttpll
lock
push
movsl
ss
shlb
xchg
mov
mov
js
jno
ret
mov
pop
fcmovnu
push
mov
cld
mov
clc
scas
mov
and
sub
or
movsb
dec
sbb
les
je
push
inc
mov
xor
or
adc
pop
hlt
ret
fbld
fbld
mov
std
pop
xchg
outsl
cli
and
cmp
insl
xchg
cld
mov
adc
cli
icebp
test
test
test
jae
mov
mov
sti
jle
icebp
popa
nop
cs
pop
nop
cmc
mov
add
mov
mov
push
out
cmp
or
mov
xchg
aam
orb
sub
sbbl
pop
loopne
shrb
sbb
lock
and
and
mov
xorb
into
inc
jmp
loop
insl
adc
int
mov
idiv
dec
stos
insb
jle
and
jo
or
dec
push
inc
rcrl
mov
loopne
mov
cli
xor
mov
cltd
fs
imul
dec
lret
pusha
imul
jp
insl
ret
notb
decl
jns
hlt
pavgw
iret
pop
fstpl
ja
stos
jnp
in
push
push
nop
pushf
jecxz
lcall
xor
mov
adc
addr16
pop
jns
sti
adc
add
popa
in
roll
int3
nop
ljmp
outsb
in
sbbl
xor
aam
push
mov
push
xor
mov
ds
ds
mov
mov
jmp
and
mov
iret
and
jne
pop
jnp
outsb
adc
mov
cltd
jl
movsl
mov
jae
dec
push
push
pop
out
popf
nop
rol
mov
dec
aaa
cli
cmp
adc
mov
fldt
sub
loopne
lahf
xor
xchg
jbe
aas
jp
push
cs
adc
movsl
mov
adc
mov
arpl
sub
xor
add
pop
inc
lods
mov
out
cmc
sub
and
dec
call
jecxz
cmp
adc
shll
sub
adc
insl
or
loopne
test
jns
mov
adc
cmpsb
add
outsl
movntps
inc
loopne
sub
es
or
cmc
lock
sub
icebp
aad
fs
dec
ja
repnz
fisubl
adcb
stc
outsl
or
sti
out
pinsrw
cltd
lret
outsb
sbb
push
fldl
fildl
lods
dec
cmp
stos
lret
jae
xchg
imul
push
inc
fadd
or
dec
xchg
mov
sbb
jae
sub
and
rorb
jle
leave
fwait
pop
adc
cs
pop
push
mov
aaa
adc
add
cmc
test
sub
adc
call
adc
dec
or
xor
pop
mov
test
cmp
pusha
ret
jmp
mov
xlat
sub
sahf
dec
sbb
mov
std
sub
scas
xor
loopne
dec
jo
cmp
fdivl
outsb
in
inc
ret
mov
dec
jno
fldcw
lfs
outsl
mulb
sbb
aad
shrl
mov
push
lods
jbe
cmpsb
leave
adc
push
insl
movsb
adc
mov
out
imul
xor
push
mov
fmuls
cmp
and
cwtl
sub
sbb
pause
pop
outsl
dec
addr16
cli
cmp
inc
push
mov
sbb
call
insl
xchg
cwtl
mov
jge
nop
orb
cmp
cli
adc
adc
orl
outsb
sub
setnp
lcall
adc
lods
and
stos
call
out
jecxz
bound
or
test
xor
sbb
lcall
lea
out
pop
push
pop
xchg
ret
add
in
or
sarl
ss
pop
lods
rclb
insb
scas
loop
or
jl
mov
gs
clc
sbb
lods
mov
lods
mov
lret
mov
fs
aam
dec
sub
data16
fists
hlt
rcrl
adcb
xor
mov
out
xor
cmp
mov
jns
test
fldcw
call
or
adc
or
pushf
pop
jmp
notl
push
or
mov
sub
push
push
adc
xchg
shl
loopne
pop
dec
push
mov
in
cmp
stos
pop
test
aam
repz
mov
dec
pushf
pop
xor
rcr
jecxz
pop
aad
push
jp
xor
rcll
aam
fsts
xchg
cmp
sub
ret
stos
movsl
mov
int3
inc
daa
mov
sub
test
dec
out
dec
shrl
adc
test
xlat
adc
cmp
cmp
cld
repz
cmc
nop
out
cmp
jnp
xchg
std
scas
dec
xchg
mov
and
mov
dec
leave
mov
stos
adc
paddw
arpl
cmpsl
mov
lods
xorb
andb
add
hlt
cmpsb
sub
and
in
dec
stos
int
pop
iret
mov
nop
jg
in
repz
pusha
or
push
push
out
shlb
ja
lret
jae
mov
dec
push
pop
ret
jae
sbb
and
jbe
fistl
rorb
pop
mov
pop
imul
je
mov
ret
inc
addr16
imul
aas
mov
fisttps
ss
push
and
popf
aaa
pop
push
push
sub
jbe
mov
sbb
push
jge
push
aad
xlat
in
adc
cs
rolb
xor
jns,pt
aas
inc
movb
jmp
cmpsb
stc
fiaddl
sub
xchg
mov
nop
xor
add
dec
fstps
adc
lahf
adc
jmp
into
sbb
jp
into
pushf
or
fcmovu
rcll
cli
lcall
push
scas
xchg
cmpsl
xor
in
notb
jb
stos
jp
fs
cmc
sbb
pop
mov
push
push
insb
pop
outsl
or
adc
push
dec
push
scas
cmpb
xor
cmp
jne
inc
and
cmp
enter
jnp
dec
xor
add
mov
jnp
mov
push
xchg
rcrb
dec
aas
push
std
cmpb
xlat
rorl
cmp
outsl
or
push
push
dec
lahf
xchg
pop
sub
cmc
pop
cmpsb
inc
outsl
inc
sbb
addr16
mov
aas
pop
lret
orb
andl
inc
loop
sbb
scas
mov
mov
repnz
jbe
pushf
push
mov
xchg
push
push
test
aad
cmp
out
sbb
mov
vmaskmovdqu
hlt
push
or
mov
lods
insl
adc
xlat
cmp
xchg
push
mov
xor
nop
cmpsb
faddl
clc
lret
dec
into
stc
mov
inc
ss
sbb
nop
fistps
xchg
jl
repnz
and
jb
mov
scas
pushf
loop
or
sub
enter
in
inc
mov
pop
inc
popf
mov
out
sarb
mov
jmp
cmpb
sub
add
out
adc
aad
xchg
ljmp
or
je
cmpsl
sub
sbb
cmp
cs
lret
out
es
mov
pop
aam
pop
xor
jno
dec
lds
sbb
out
add
cmc
in
adc
cmp
push
sahf
repnz
cli
mov
je
test
dec
jo
mov
lods
lock
inc
cltd
adc
push
xor
xchg
les
sub
dec
sbb
inc
cmp
sub
mov
loopne
and
sbb
insb
cmc
in
mov
jle
mov
jle
mov
data16
adcb
sub
sub
shlb
cmp
and
jae
inc
mov
add
mov
and
fs
and
mov
sbb
and
cmp
xor
shll
adc
nop
and
fbld
add
pop
arpl
mov
jecxz
pop
xchg
lds
push
and
addr16
aas
jp
pushf
mov
sarl
xchg
pop
stc
mov
and
xchg
mov
ror
xchg
daa
imul
std
xchg
add
add
test
sbb
in
mov
ds
adc
dec
cltd
shlb
rorl
mov
int
icebp
or
pop
mov
mov
jmp
dec
xor
or
xorl
adc
nop
test
icebp
xor
sbb
popf
mov
sbb
push
sbb
stc
sub
mov
shll
mov
sub
jmp
inc
out
mov
xchg
and
in
dec
fs
scas
add
xchg
leave
and
mov
push
push
jg
mov
push
xchg
cmp
mov
mov
iret
shr
push
adc
pusha
mov
pop
in
mov
mov
fwait
pop
adcb
inc
add
adc
xor
add
inc
cld
fistpll
fstl
adc
icebp
sbb
adc
repnz
dec
pop
flds
dec
enter
sbb
incl
cmpsl
jae
inc
xor
movl
sbb
mov
pop
mov
aad
mov
add
mov
scas
mov
mov
hlt
addl
mov
mov
sbb
das
xor
xor
test
mov
inc
mov
fs
cmpsb
loop
inc
lret
inc
sbb
cmp
rcrb
out
jmp
icebp
mov
mov
push
pop
cmp
jae
shrl
cmp
clc
mov
std
jecxz
jmp
std
rolb
cmp
nop
xchg
sub
cli
and
outsl
mulb
add
shlb
fsub
les
dec
or
fildll
stos
dec
iret
sbb
sbb
test
or
cmp
pusha
cmp
lods
lods
jl
sarl
pop
aad
sub
movsb
or
push
pop
xor
leave
jno
and
fsubl
fstpt
inc
cmp
mov
mov
je
lahf
outsl
xchg
loop
in
cmpb
scas
int
call
stos
sbb
imul
mov
and
or
daa
push
outsl
arpl
fs
inc
mov
or
aam
mov
xor
in
sub
jp
mov
movb
sub
fadd
adc
push
mov
or
dec
push
loop
callw
test
mov
rolb
and
inc
xchg
aaa
adc
cltd
and
rcr
lcall
scas
lret
iret
sub
sub
adc
sub
cmp
cs
enter
sub
ret
pop
testb
mov
mov
pop
xrelease
mov
mov
pop
dec
mov
fistpll
out
sbb
or
jb
jbe
inc
pushw
mov
dec
cld
sbb
mov
adc
inc
xor
xor
sbb
sarb
sub
mov
mov
jp
add
jmp
adc
or
mov
push
cmpsb
fcmovnu
pop
shr
mov
jnp
sbb
mov
popa
aaa
xchg
gs
mov
pop
test
out
and
fwait
aam
fdivs
mov
adc
xchg
fstpl
pop
jae
cmp
movsb
out
push
lods
js
jecxz
popa
xchg
fidivrs
dec
cmc
fbstp
cmp
add
aaa
mov
push
jge
cltd
aaa
mov
adc
in
out
pushf
pop
test
cmp
mov
pushf
cmp
fimuls
cwtl
xchg
mov
push
pop
ljmp
ja
mov
nop
out
sahf
push
aas
cmp
arpl
cmpsb
lret
dec
pop
jmp
sti
xchg
into
mov
rorb
adc
mov
loopne
andl
scas
shrl
cmp
lock
jnp
dec
rclb
adc
enter
stos
inc
clc
arpl
movsl
adcl
mov
push
jle
jge
daa
shrl
sbb
gs
stos
jo
mov
dec
jnp
iret
outsl
repz
pop
adc
push
data16
inc
fstps
adc
dec
inc
jae
cmp
push
clc
and
jecxz
test
pop
add
lret
pop
pop
xchg
adc
popf
imul
mov
fldt
clc
inc
mov
and
sub
mov
add
movsb
test
lcall
jg
jmp
bound
push
push
lock
aaa
and
fbstp
std
cli
xchg
mov
adc
push
dec
rol
jb
add
sbb
out
pushl
mov
pop
cld
jb
dec
jge
mov
cwtl
xchg
pop
pop
dec
js
std
mov
mov
add
clc
popa
mov
stc
dec
mov
pop
dec
scas
xchg
roll
inc
in
xor
cmp
mov
jl
xor
push
jge
or
add
and
outsl
test
mov
mov
clc
xlat
mov
fistps
mov
scas
mov
andl
mov
push
jmp
cmp
xchg
cmp
mov
jb
test
jp
jmp
mov
cmp
lret
xchg
shll
sbbb
mov
rcrb
ja
xchg
test
jne
int3
test
jp
lea
xchg
fs
and
movsl
pop
adc
nop
or
sti
fs
mov
sub
mov
mov
dec
jmp
adc
xchg
xchg
mov
xor
mov
mov
int3
mov
lea
jp
negl
xchg
xor
test
add
pop
sub
into
test
mov
pushl
pop
mov
dec
xlat
in
fnstcw
pop
push
push
in
jo
cmc
push
loopne
ficompl
icebp
lcall
cs
push
xchg
and
cmp
dec
adc
jae
jo
xor
adcb
inc
movsb
push
or
vsqrtpd
fistps
mov
pop
pop
js
hlt
sub
ss
and
std
cmp
scas
adc
jge
rcrb
adc
sub
testl
adc
xchg
roll
hlt
mov
insl
mov
pushf
add
arpl
out
or
or
aaa
cmc
in
mov
cmc
je
std
or
mov
and
shrl
push
arpl
mov
fidivrl
loope
push
ror
cs
flds
nop
jg
mov
lea
cmp
les
dec
popf
out
lock
and
incl
pop
xchg
inc
sub
add
loopne
mov
addr16
mov
sbb
sbb
mov
and
and
sbb
in
int
fdivrs
loopne
mov
std
das
rorb
or
mov
mov
mull
std
xchg
nop
pop
sarb
in
cmpsb
mov
xor
loope
es
adc
sbb
cmc
fneni(8087
fptan
int
sbb
cs
arpl
cmpsl
fsubrs
mov
mov
negl
push
push
mov
pop
pop
mov
push
outsb
stos
dec
adc
sub
cli
mov
scas
in
loop
pop
push
std
mov
push
inc
test
mov
sti
mov
dec
fidivrl
cwtl
inc
and
xchg
mov
fldl
sub
jb
sarl
shlb
lds
mov
daa
pop
adc
out
inc
xchg
in
mov
in
gs
add
aaa
push
adcw
shll
call
jo
repz
dec
cmp
jge
jae
cmp
in
lcall
pop
testl
roll
inc
cmc
push
sub
and
xchg
xchg
mov
cmp
and
mov
xor
mov
and
inc
repz
cmpsl
mov
out
ja
pop
cwtl
push
in
dec
add
push
xchg
mov
push
and
mov
pushf
pop
mov
push
pop
mov
and
xor
xchg
push
in
fmuls
mov
sbb
adcl
or
push
sbb
mov
das
or
or
xchg
mov
popa
fucomi
xchg
sbb
ss
add
and
int
xchg
push
insl
iret
or
pop
push
or
shrb
addr16
inc
dec
sub
add
and
jb
and
mov
mov
inc
andb
xor
mov
movsb
out
nop
sbb
js
and
pop
rolb
jl
inc
sub
sub
cmp
ja
xlat
inc
jg
mov
adc
test
js
das
sarb
mov
add
cli
fnsave
pop
push
in
sbb
outsb
mov
or
mov
pop
dec
xchg
ljmp
dec
mov
gs
loopne
lods
dec
xchg
aad
mov
mov
in
mov
stos
jb
push
inc
decl
fs
xchg
insb
pushf
popf
std
in
neg
xor
and
rorb
out
sbbl
dec
nopl
ljmp
insb
out
dec
mov
or
fwait
jmp
cmc
mov
pusha
jge
arpl
cmp
fnstenv
jg
pop
pusha
lock
cli
dec
xchg
jne
push
push
cmova
push
out
cmp
rorb
dec
mov
dec
mov
shll
cmc
out
adc
jp
adc
in
jp
fisttps
push
loop
push
cld
jo
in
pushf
aad
test
adc
lea
pushf
dec
lock
ja
mov
xor
lret
fsubr
popa
sbb
mov
out
sub
push
xor
mov
jne
outsl
adc
ss
adc
clc
inc
gs
fs
inc
xor
pop
or
mov
mov
fmuls
mov
cld
inc
lods
sub
loop
rep
jmp
call
fs
std
push
mov
mov
pop
stos
push
jae
add
xor
lahf
push
lahf
jg
push
pop
push
iret
ja
iret
jp
mov
jb
ljmp
loop
out
jecxz
adc
sbb
cs
pusha
repz
xor
lahf
loop
data16
bound
jge
mov
in
jae
or
pop
loopne
inc
les
mov
lods
mov
xor
push
mov
lea
fst
mov
xlat
adc
popf
mov
in
into
rorb
mov
mov
dec
xor
fisubs
scas
iret
sbb
lods
xchg
mov
mov
mul
and
cmp
lock
cmc
out
dec
push
push
dec
mov
lods
push
sub
jb
pop
cmp
aas
pop
mov
incl
sarl
inc
neg
cwtl
dec
imul
scas
hlt
push
xchg
mov
or
dec
popl
add
out
sub
mov
xchg
mov
sbb
imul
cli
imul
repnz
sub
notb
sahf
repz
jecxz
cmp
aam
and
cmp
sahf
xchg
adc
mov
mov
xchg
jb
andl
mov
loope
shlb
aas
sahf
lcall
test
or
xchg
jnp
xchg
sbb
add
mov
icebp
push
jmp
xchg
cmp
pop
sbb
call
jne
push
push
add
clc
test
push
insl
xchg
mov
lock
push
sub
test
push
cmc
and
push
gs
sub
xchg
int
pop
stos
mov
dec
pushf
pushf
in
mov
das
cli
dec
or
ret
stc
dec
jge
inc
push
jo
or
testb
icebp
icebp
adc
adc
add
jp
pop
icebp
je
scas
adc
daa
movsl
pop
xchg
pop
rol
sub
mov
adc
fwait
imul
pop
lcall
daa
jg
adc
decb
fdivrl
imul
mov
leave
xchg
add
mov
push
nop
dec
mov
out
and
lahf
sub
mov
lahf
jecxz
xor
das
xchg
enter
stos
cs
cmpsl
push
pop
sbbb
and
inc
lods
adc
cmp
pop
popf
ror
in
iret
sub
xchg
push
inc
adc
sub
xchg
adc
ret
aam
xlat
add
mov
mov
sbb
or
call
sub
mov
pop
sub
enter
adc
mov
out
mov
inc
lret
inc
call
movsb
divl
adc
sbb
mov
cmp
jne
pop
sub
and
mov
adc
imul
cmpsb
hlt
loopne
dec
adc
mov
inc
adc
ret
cli
push
jl
mov
dec
scas
mov
pop
stos
and
inc
dec
stos
mov
or
mov
inc
cmpsl
adcb
inc
sahf
jge
dec
fstpt
sbb
pop
xorb
mov
inc
push
adc
adc
pop
int
sbb
mov
pop
pop
lahf
mov
rol
addr16
daa
lret
inc
fbld
icebp
sub
sbb
mov
fdivp
mov
imull
call
add
pop
jno
sub
mov
xor
or
sbb
rcrl
sub
dec
add
js
lds
cltd
or
mov
in
push
cltd
aam
xor
out
fisubrs
pop
popa
stos
ljmp
cmp
xor
enter
push
pop
cmp
dec
mov
shrl
mov
jnp
fsubp
loopne
mov
pushf
adc
test
push
sbb
lret
sub
sahf
xchg
dec
dec
mov
push
or
cld
cs
and
andb
in
dec
mov
es
bound
cld
or
dec
imul
xchg
jg
test
fwait
ja
jae
push
jmp
jecxz
notb
inc
jnp
jo
sbb
addr16
jnp
add
lods
add
insl
in
mov
inc
xor
cmp
push
mov
insl
aaa
mov
ss
sub
aam
fcmovnbe
adc
repnz
mov
push
mov
inc
cmp
xchg
hlt
and
inc
xor
push
call
and
hlt
jbe
xchg
lods
push
imul
in
stos
mov
mov
inc
lock
repz
pop
imul
pop
inc
cmp
testb
nop
mov
insb
lret
mov
sub
jg
imul
nop
cmp
imul
inc
xlat
in
repnz
ret
xorl
inc
sahf
add
mov
jae
add
repz
arpl
jbe
or
fwait
cmp
int3
out
pop
arpl
jo
push
dec
imul
pop
in
dec
aam
xchg
jecxz
cwtl
and
rcrb
stos
stos
or
data16
dec
push
cmp
out
pop
push
push
or
shrl
ja
xor
sarb
imul
sub
jmp
pop
xchg
pop
inc
pusha
sbbl
xchg
inc
roll
outsl
mov
rcrl
repz
jg
pusha
mov
xchg
adc
loope
out
push
ret
cmp
xor
cmp
sbb
xchg
jns
aaa
loopne
enter
scas
jne
imul
aam
lret
icebp
pop
mov
add
sub
dec
sarb
mov
dec
les
leave
es
mov
sahf
icebp
add
jnp
pop
insl
outsb
and
and
stc
or
jecxz
adc
sarl
lahf
mov
sbb
mov
xchg
in
cmp
into
xchg
adc
bound
stos
leave
add
shll
into
into
sub
pop
out
ja
into
mov
mov
dec
ljmp
inc
mov
add
stos
lods
ja
int
cmpsl
arpl
pop
pop
dec
add
stos
dec
dec
xchg
inc
or
xor
pop
aas
dec
push
out
fildll
lret
int
mov
pop
jmp
mov
ret
dec
cmp
sbb
ss
iret
call
xor
arpl
sti
push
adc
out
adc
or
inc
mov
cmp
fldt
fs
jne
jmp
loop
pop
out
dec
out
das
mov
movl
jne
int
lret
fcoml
ja
mov
les
test
stc
ficomps
dec
add
push
ds
sbb
in
lea
enter
rcl
xchg
faddl
pop
pop
pushf
clc
xlat
icebp
bound
jg
hlt
lahf
in
pop
addb
push
or
xor
jns
push
bswap
movsl
out
jp
shrb
rcl
call
inc
xor
aaa
cmc
jne
js
jo
add
mov
adc
aad
jne
repnz
ljmp
arpl
inc
xchg
sbb
hlt
sbb
std
cmc
mov
mov
push
jl
stc
stos
add
xor
pop
sub
sub
lock
jge
ret
pop
nop
imul
sar
jecxz
sub
hlt
ss
orl
cmp
insl
arpl
into
andb
cmp
nop
mov
pop
bound
sbb
add
sbb
imul
popf
dec
int
out
dec
inc
fld
jmp
push
loopne
aam
out
adc
or
push
inc
rolb
cmpsl
jbe
lahf
scas
xor
sbb
les
push
sbb
leave
xor
sub
xor
out
adc
mov
and
dec
jnp
and
adcl
lcall
out
sarb
xchg
xchg
sub
mov
dec
xchg
cmp
int
cmp
outsl
inc
mov
mov
jmp
jbe
aaa
lods
arpl
js
jo
int
dec
mov
or
fdivl
orl
inc
daa
push
lret
pop
sbb
inc
pop
test
into
inc
loop
cmp
or
shrb
outsb
mov
leave
add
push
lds
movl
mull
movsb
je
mov
wbinvd
jp
xchg
or
subb
ss
dec
lods
cmp
insl
bound
mov
mov
push
mov
fbld
js
and
ds
mov
xchg
sub
or
stc
jge
dec
push
add
rol
xchg
repnz
push
fnstenv
add
add
jl
mov
add
lea
in
xor
aaa
in
mov
cmp
jo
pop
xor
mov
inc
inc
inc
pop
xchg
ss
fmul
cltd
or
dec
stc
mov
jecxz
test
imul
je
dec
or
mov
inc
or
popf
xchg
cmp
das
sub
push
sub
mov
sub
pop
or
out
pop
jns
inc
mov
test
sbb
lods
cltd
shll
leave
test
xor
cmp
adc
jns
mov
fdivl
dec
push
data16
xor
dec
iret
mov
push
push
pop
pop
adc
popa
mov
clc
movsb
mov
repz
aaa
xor
lock
pop
data16
fmuls
mov
jns
mov
out
mov
jp
inc
or
outsb
lea
fistl
stc
push
mov
sub
fs
sub
int
cmc
fwait
enter
jl
sub
cmp
or
out
add
dec
jle
cmc
inc
test
test
adc
and
push
mov
push
in
das
test
pop
fisubrs
cmc
and
in
lock
and
scas
out
jae
sahf
mov
jo
add
js
pop
es
stos
mov
jbe
xchg
movsb
push
aad
test
scas
dec
pop
xlat
aaa
sub
movsl
and
lea
jnp
dec
stos
stos
mov
ja
loop
mov
pop
repz
aas
and
cmp
xchg
lea
pop
xlat
js
mov
jg
xchg
ja
mov
daa
mov
ret
jno
dec
push
std
out
xlat
adc
xchg
mov
add
xlat
cmpsb
fisttpl
cmp
lcall
jnp
sahf
mov
sbb
in
pop
jmp
cmp
mov
fwait
adc
pushf
mov
jmp
ds
imul
ror
movsl
jne
sub
inc
sub
lds
mov
push
les
push
fsubrp
dec
mov
repnz
mov
sub
mov
xchg
sub
insb
sub
cmp
mov
push
js
inc
jne
xor
pusha
xlat
mov
xor
xchg
add
aaa
lock
pop
loop
bound
sbb
mov
or
mov
sti
mov
mov
pop
jg
loopne
pop
xchg
mov
sbb
leave
jecxz
add
adc
mov
jmp
sti
out
call
cmp
bound
adc
iret
mov
stc
in
lea
cld
mov
adc
sbb
sub
fdivrl
xchg
fucomip
sbb
ja
add
fsubl
cmpsb
mov
jecxz
or
add
lods
adc
flds
pop
fldl
mov
outsb
inc
sub
in
xchg
mov
sarl
mov
cli
add
and
test
call
filds
data16
mov
out
push
jp
testl
cld
out
jnp
jg
mov
push
in
jle
orb
call
add
jo
adcb
adc
mov
movsl
imull
js
sahf
std
mov
and
imul
jle
mov
mov
add
or
cs
jnp
push
fdivr
and
out
in
push
sub
adc
push
popa
sbb
leave
jns
mov
stos
dec
sub
and
cmpsb
js
mov
or
xchg
nop
loopne
jg
lea
inc
dec
pop
adc
arpl
mov
lods
jb
push
jp
ja
sbb
in
cwtl
jmp
jle
mov
das
xorb
es
andb
movsl
rcrb
mov
aad
ja
gs
mov
stos
outsb
out
ljmp
es
add
xor
mov
fisubrs
cmpsl
sub
in
leave
adcl
mov
dec
stos
sbbb
mov
stc
movsb
mov
scas
ja
lods
das
mul
add
or
popf
iret
mov
test
dec
add
gs
outsl
pop
push
sub
shll
jae
out
out
repnz
dec
cs
push
sbb
nop
lret
mov
sub
adc
fsubl
out
mov
cmpsb
jno
mov
pusha
aaa
cld
sbb
sti
cmp
movsb
cld
loopne
inc
pop
push
mov
cmpl
fmull
cld
ret
ljmp
add
sub
cmp
xchg
pop
mov
je
loop
ss
ljmp
stos
add
mov
fs
adc
xchg
test
jae
adc
push
xor
jg
mov
call
mov
add
push
add
and
out
xchg
addr16
jle
cmp
jg
fstl
push
sub
and
stc
push
mov
orb
rcrb
or
test
popf
xchg
cltd
orb
sbb
insb
mov
mov
fld
inc
loopne
adc
mov
pop
push
iret
pop
or
inc
addr16
mov
div
cmpsb
jg
test
and
sti
cmpsl
jne
jp
add
mov
nop
push
mov
je
inc
sbbl
pop
xchg
movsl
and
jo
mov
je
repnz
mov
iret
out
sti
xlat
enter
test
push
or
loopne,pt
call
sbb
sahf
sbb
test
cmp
push
and
ss
or
das
fsubp
fstl
loop
std
inc
cmp
xchg
push
sub
sub
xlat
pop
loop
cltd
loope
call
pop
popf
sub
testl
push
mov
cmp
repz
push
jge
test
cmpsl
aad
xorl
lea
hlt
mov
mov
adc
out
sbb
int
test
cmp
push
pusha
shl
adc
cld
leave
inc
outsl
sbb
xor
adc
fsubp
roll
in
fistpll
lcall
aas
adc
and
pop
mov
cltd
dec
sub
xor
fs
andl
loop
ret
pushf
cmp
ss
cld
in
lahf
push
lret
xchg
cmpsl
push
mov
aas
jns
test
push
pushl
roll
mov
push
testb
out
adc
push
and
testb
hlt
outsb
enter
daa
inc
cmp
xchg
daa
addr16
or
pop
mov
jg
out
js
imul
pop
mov
cmpb
imul
bound
in
ret
call
push
in
xor
jle
sub
or
push
mov
repnz
pop
es
dec
and
and
xchg
inc
fstl
cmp
xchg
adc
repz
push
mov
pushf
js
outsb
jg
test
xchg
and
rclb
pop
and
fs
mov
loope
mov
jmp
jecxz
xchg
in
push
jp
cmc
ss
es
fnstcw
ror
sahf
push
icebp
stc
push
inc
push
mov
push
add
bnd
push
fcoms
sub
push
loope
sub
jp
mov
scas
pop
pop
ret
and
xor
aas
inc
ss
movsl
push
jne
fcoms
or
dec
mov
js
push
daa
outsl
das
popw
outsb
addb
inc
xchg
sub
jne
cmc
loop
pushf
subb
cmpsb
jmp
mov
xlat
mov
jecxz
and
sub
mov
int
or
std
and
add
mov
aam
pop
call
lret
call
jae
sbb
xor
mov
dec
or
ficompl
test
stos
lahf
fsubl
mov
scas
fcmovne
es
outsb
arpl
mov
xchg
dec
push
int3
push
movsl
push
pop
mov
in
cmpsb
and
iret
push
mov
or
pop
xchg
data16
rcl
jns
je
mov
jmp
mov
push
mov
xor
dec
stos
repz
adc
in
nop
xor
lret
add
fmull
mov
jl
pop
mov
iret
xchg
mov
sbb
push
out
iret
xor
and
cmc
jg
cmovs
pop
rclb
in
inc
inc
jno
push
icebp
mov
xchg
mov
mov
incl
in
mov
and
daa
or
jecxz
mov
testb
stc
fsubl
ret
sub
addr16
or
fisttpl
dec
pop
add
rcr
dec
jge
mov
daa
shll
roll
dec
mov
or
daa
fwait
mov
xchg
lcall
xchg
adc
mov
into
das
outsl
aaa
hlt
pop
sbb
adc
mov
and
sbb
mov
movsl
push
pop
inc
cmc
fcmovu
mov
cli
pop
inc
cs
clc
enter
adc
adc
jle
push
dec
es
jbe
and
rolb
jb
fstl
sbb
cmp
push
add
mov
inc
ret
lahf
out
xchg
jae
dec
cwtl
push
mov
pushf
pop
ds
es
dec
pop
mov
lods
pop
sarb
mov
in
clc
xor
or
sarl
xchg
in
xchg
into
jge
int
outsb
inc
lret
inc
aas
xchg
adc
enter
push
mov
lds
mov
mov
jmp
into
jmp
add
cmpsl
nop
push
cmpsb
fdivrl
xchg
scas
adc
xor
testl
xor
clc
bound
dec
or
outsb
clc
hlt
lret
push
inc
mov
loop
mov
idiv
sahf
xor
cmc
cmp
mov
imul
out
dec
or
jbe
xor
push
push
in
jnp
mov
movsb
addl
inc
and
and
aas
mov
out
fiaddl
push
adc
add
loope
clc
xchg
addr16
call
popa
std
inc
loopne
clc
push
pop
icebp
dec
adc
pop
jge
shlb
jae
or
xor
pusha
andl
sbb
jae
cmp
sub
xor
mov
rorl
and
sub
xchg
orb
lock
mov
or
lcall
out
and
movsl
pop
outsl
ja
xor
fcmovu
or
xor
xchg
insl
into
adc
lock
jns
mov
lods
sti
sbb
inc
cmp
nop
mov
ficoml
cltd
std
dec
repz
fdivs
add
aad
inc
jg
jae
mov
and
mov
mov
jecxz
bound
jp
sub
ror
lock
mov
mov
cmc
leave
fldenv
push
into
mov
inc
ret
fiadds
jecxz
jmp
or
stos
inc
psllq
iret
mov
test
mov
fsubrs
aad
mov
std
ss
mov
adc
inc
pop
insb
cmc
jnp
in
sbb
ss
xchg
incl
mov
inc
int
xchg
sbbl
test
dec
mov
xlat
lret
inc
inc
popf
inc
mov
in
mov
std
xchg
adc
mov
mov
mov
stos
stc
outsl
rorb
ds
push
ja
sub
ds
cmp
shll
lock
sub
push
hlt
fs
adc
xlat
cmc
xor
andb
shrb
cmp
faddp
jbe
pop
push
sub
adc
test
push
adc
and
and
loope
add
out
aad
cmp
pusha
cmp
int3
sbb
nop
and
mov
lea
dec
int3
add
lahf
cli
stos
cli
cmpsl
bound
add
lret
jp
ret
mov
ja
cs
add
or
ficompl
dec
rcr
xchg
or
aam
mov
mov
lods
call
inc
inc
inc
loop
sub
ss
sti
xor
inc
fistps
adc
fsubl
push
stos
mov
das
ret
push
push
and
out
mov
sub
pusha
mov
add
enter
and
mov
loope
rorb
lods
mov
pop
fisttps
andl
xor
hlt
sbbb
repnz
jb
jecxz
mov
pop
sti
iret
or
jno
push
cwtl
sarb
inc
dec
xchg
xchg
pop
push
mov
sbb
mov
andl
add
and
sahf
add
sbb
xchg
out
das
pop
push
mov
mov
fsubrl
mov
inc
jge
lahf
jb
das
clc
xchg
inc
mov
in
and
inc
cmc
shrl
hlt
fidivrl
mov
inc
fwait
dec
and
mov
cmp
push
adc
sub
out
in
jb
and
data16
movsl
mov
out
pop
dec
add
nop
orb
or
daa
movsb
inc
cmpsl
adc
shll
mov
sub
lds
push
loopne
out
loope
jbe
xchg
xchg
cmp
adc
mov
dec
das
stos
fsubr
mov
lahf
cli
mov
push
and
jp
adcb
push
fs
ficompl
roll
repnz
cmc
imul
stos
fsubrs
fstpl
aad
iret
xor
cmp
push
pushl
or
pushf
xchg
rcll
push
dec
dec
shl
mov
stos
xchg
mov
add
jnp
jp
bound
mov
or
test
lret
dec
into
xchg
outsb
bound
xor
pop
jmp
inc
imul
int3
call
mov
add
sbb
cltd
lcall
mov
mov
inc
daa
mov
sub
into
aam
mov
mov
movsb
imul
repz
mov
push
out
sbb
daa
cmc
dec
aam
popf
cli
push
imul
adc
push
add
aaa
pop
add
push
sbb
dec
cmpsl
xchg
dec
ret
jg
inc
iret
lahf
cmp
cmp
pop
pop
les
mov
pop
sub
add
fsubrs
shll
or
inc
insl
pop
dec
or
or
push
xor
daa
lds
cmc
mov
iret
mov
xchg
jo
push
imulb
clc
mov
jmp
dec
inc
or
leave
sub
fnstcw
in
out
cmc
jge
aad
fwait
lds
jne
pop
mov
jbe
xor
jl
cmp
int
andl
sub
add
repnz
pop
cs
rcrl
ret
jecxz
pusha
mov
push
inc
pop
in
or
test
add
out
sbbb
and
add
insb
jp
jle
bound
xchg
push
data16
mov
test
lret
data16
std
jmp
mov
xor
rcrb
adc
in
loop
mov
stos
mov
icebp
xchg
push
cmp
or
and
int3
adc
pop
jnp
addr16
sarl
push
dec
ds
mov
rep
inc
mov
push
and
xchg
scas
jl,pn
xchg
xor
test
or
movsb
or
and
and
lods
in
add
adc
loope
adc
testl
push
add
jge
jl
mov
ret
mov
scas
pusha
cmp
xchg
into
jmp
push
push
loope
push
cmpsb
sub
or
mov
aas
mov
dec
inc
addr16
or
test
sub
mov
sti
or
dec
xchg
mov
dec
sub
lcall
std
clc
insl
push
and
or
insb
add
cmp
dec
mov
cmp
add
movsl
ret
clc
in
xchg
call
inc
mov
xlat
into
mov
push
jno
and
mov
xchg
inc
push
out
or
xchg
add
popa
or
cmp
sub
pop
mov
std
rcr
jbe
movsl
out
xor
inc
repz
imulb
insb
imulb
adc
add
and
cmp
cmpsl
mov
std
sbb
aaa
push
push
outsl
fisubrl
jl
inc
out
pop
pop
int
es
movsb
and
ret
jae
jg
xchg
rcrl
dec
inc
mov
fisttps
jg
mov
adc
pop
xor
xor
andb
fdivl
aaa
enter
jnp
pop
enter
add
dec
popf
fucom
sub
aam
inc
sub
mov
jge
and
push
pusha
mov
push
inc
mov
cmp
repz
ret
dec
xchg
push
jnp
xchg
hlt
jno
sbb
sub
lods
jge
test
sahf
lret
rcll
lret
cs
cld
mov
insl
pop
iret
pop
xor
movsb
pop
cmpsl
xchg
jns
dec
push
or
sub
stc
and
std
mov
clc
iret
sbb
jg
cli
loopne
mov
test
push
pop
and
xchg
ja
pop
jg
mov
xchg
dec
mov
shll
jge
sbb
adc
xchg
lahf
adcl
or
pop
insb
loop
pop
xchg
ret
aas
repz
jg
push
mov
in
emms
mov
out
ljmp
adc
jle
sub
mov
lock
stos
jle
jecxz
popf
ja
rcr
push
out
inc
mov
cmp
lret
dec
or
call
call
add
ret
pop
aas
cmp
insb
jmp
sarb
into
cs
pop
jb
pusha
imul
xchg
fs
lret
popa
out
pop
pop
outsb
addr16
cli
icebp
in
test
cmp
push
jle
dec
push
addb
out
test
cld
gs
mov
or
dec
movsl
mov
adc
mov
addr16
jnp
or
xor
push
or
pushf
inc
shrl
jbe
js
push
fimuls
scas
sub
inc
jle
sbb
push
dec
sub
div
jmp
enter
lea
popa
sahf
lret
sub
jge
cmc
jae
sub
stos
sti
sar
imul
jle
push
mov
cwtl
outsl
fwait
or
jbe
std
jg
pop
std
add
xchg
xor
lea
fcompl
bound
push
adc
repz
jecxz
ja,pn
add
and
adc
std
sub
or
stos
xor
push
test
mov
adc
inc
fcmovbe
je
jg
loopne
js
lcall
sbb
adc
call
mov
mov
das
sub
push
loopne
or
or
mov
jns
inc
lretw
and
das
pop
inc
or
mov
cmp
mov
adc
push
cmp
loop
push
scas
ds
and
or
ficomps
in
xlat
lods
push
dec
repnz
pusha
negl
adc
add
lcall
add
rol
leave
sbb
push
push
sahf
test
jae
clc
jnp
test
and
sub
jb
scas
fisttpll
sbb
and
mov
sub
outsb
xlat
cmc
or
mov
mov
fadds
mov
aaa
adc
inc
in
sub
loop
int3
scas
ljmp
jns
pop
push
cmp
std
mov
push
cmc
push
fs
or
daa
nop
fsubs
sarb
or
cmpsb
shll
ja
mov
js
testb
inc
in
mov
sahf
fnsave
insb
gs
add
or
nop
push
bndldx
pop
pop
fbld
pop
add
mov
adc
popf
mov
xor
add
ds
inc
sbb
or
fwait
cltd
sub
cmp
add
jae
out
mov
pushf
mov
and
and
clc
sub
jo
mov
jne
movsb
pop
call
sub
enter
adc
loop
mov
cmp
dec
enter
adc
ljmp
xor
fsubs
sub
test
cli
test
cmp
ds
push
and
sub
adc
jb
test
pushf
adc
jmp
mov
mov
jge
and
fimull
into
push
addr16
adc
sbb
lods
inc
mov
scas
and
rolb
adc
cmp
das
pop
jne
xchg
adc
or
jbe
xor
es
mov
mov
lret
cmpsl
sub
test
mov
xchg
xchg
cmc
cmp
popf
adc
push
aaa
cmpsb
in
shlb
decl
inc
xor
mov
daa
icebp
mov
sbb
aas
cmp
call
jbe
lret
sbb
out
xchg
lds
jb
push
outsl
dec
loope
ret
sbb
jecxz
push
pushf
cli
nop
cmpsl
test
stc
in
jnp
jno
dec
lea
shlb
inc
fcmovb
jle
push
test
jo
popa
pop
jp
push
pusha
sbb
les
cmpsb
imul
sbb
pop
jo
push
stos
into
dec
and
xor
mov
xor
das
negb
jge
dec
loopne
dec
inc
out
js
dec
repz
pop
adc
bound
sbb
push
es
imul
or
mov
insl
xor
sub
das
mov
cmp
xchg
pop
inc
js
es
lcall
sbb
push
inc
sbb
xchg
mov
push
pop
mov
mov
push
xor
jmp
daa
in
jne
inc
inc
mov
add
rclb
test
xchg
push
adc
adc
mov
pop
mov
cmpl
addr16
pop
push
jmp
andl
add
sbb
sub
popf
aas
pop
ss
nop
adc
pusha
repz
sub
inc
push
jle
loop
mov
jb
mov
jmp
jl
push
popf
push
xor
push
sub
add
stos
hlt
les
mov
pusha
loop
ss
mov
ja
add
xchg
add
movsl
mov
cmp
imul
dec
fisubrs
jns
mov
decl
push
mov
xchg
xor
add
lret
and
sub
and
in
push
loope
dec
xor
dec
outsb
mov
mov
mov
dec
push
aam
or
int3
add
adc
jne
add
mov
inc
jp
or
int
sbb
popa
rorb
or
mov
inc
fldcw
test
adc
mov
pop
insl
push
mov
stos
dec
pop
add
inc
hlt
popa
jae
mov
rcrl
bnd
pop
mov
mov
loop
jle
pop
inc
fnstsw
lock
xor
pop
push
daa
lock
cltd
push
or
jecxz
sbb
rcl
in
daa
int
imul
test
pop
sub
adc
je
sbb
sahf
xor
cmp
mov
incb
pop
or
jns
psrlw
in
mov
sti
push
lahf
daa
imul
jecxz
sarb
ljmp
outsb
or
and
or
in
aas
in
clc
mov
je
push
mov
mov
gs
rclb
rcrb
pop
or
xor
or
int
out
pop
push
test
push
in
xor
andb
mov
stos
push
cmp
pop
jmp
inc
pop
jne
rcrl
in
test
xchg
mov
rcrl
sbb
mov
and
adc
lcall
mov
add
aaa
xor
dec
jbe
aad
scas
sahf
outsb
dec
and
xchg
jns
cmp
cmp
jbe
sbb
xchg
pop
mov
cmpsl
mov
mov
add
je
mov
or
and
push
sub
fwait
fwait
mov
data16
dec
nop
loop
cwtl
sbb
mov
mov
addl
and
inc
enter
inc
repz
jbe
jns
cmpsl
bound
in
mov
jmp
jge
dec
mov
jo,pt
rorb
test
je
hlt
cmp
dec
pusha
sub
fmull
and
scas
enter
xchg
lock
aas
push
dec
jns
cmp
pop
rcl
fwait
mov
inc
fsts
cmp
sub
outsl
add
ljmp
sti
mov
icebp
loope
sti
incl
jae
pop
cmp
or
test
sub
mov
push
cmp
add
push
jno
sbb
mov
popf
lods
mov
les
adc
xor
jmp
leave
add
sbb
xchg
and
fstps
cmpsl
mov
push
sahf
jge
popa
inc
mov
cmp
mov
sahf
ss
and
nop
cmp
andb
jae
sbb
push
mov
adc
push
inc
fmul
inc
arpl
cltd
pop
xchg
test
adc
repnz
push
cmpsl
adc
out
iret
lret
jmp
test
fsubs
test
dec
pop
std
jecxz
xchg
sbb
pop
add
aas
jmp
push
sub
push
or
sbb
repnz
movsl
lock
das
mov
lds
lret
in
adc
dec
cmp
cwtl
sub
xor
and
and
mov
jbe
push
mov
aam
nop
int3
fiadds
cli
adc
push
add
mov
mov
divl
mov
test
pop
popf
pop
xchg
xor
jmp
jmp
cmp
xor
lahf
movsb
mov
out
pop
mov
fbld
mov
repz
pop
mov
scas
in
jno
mov
pop
xor
sbb
mov
icebp
stos
adc
inc
adc
out
or
popf
outsb
sbb
and
out
out
inc
mov
cmpsl
xlat
test
lods
pop
dec
push
xchg
dec
test
les
fldenv
xor
or
xchg
inc
sti
movl
pop
mov
sbb
jo
ss
popa
push
fdivrs
ss
aas
bound
pop
pop
lds
add
pop
pop
jb
mov
jecxz
push
cmpsb
sti
addb
mov
pop
bound
cmovg
movsl
mov
aaa
fisubs
imull
scas
jbe
fdivl
cmp
pop
add
mov
hlt
testb
mov
and
popf
xlat
shlb
sub
cmp
addb
int
test
mov
xlat
cmp
rorb
daa
dec
test
jmp
scas
add
xor
cs
cmp
ds
jmp
out
push
aad
pop
inc
iret
in
mov
out
cmp
ss
push
push
adc
das
daa
in
int
sbb
cmpsl
stos
or
dec
sub
int3
in
mov
xor
test
addr16
push
lods
jmp
stos
push
imul
test
inc
rcrb
sub
stos
das
int
movsl
roll
cmp
lahf
sahf
stos
test
xchg
pop
mov
imull
dec
addr16
pop
insl
mov
pop
sub
aam
fwait
popa
xchg
mov
push
out
mov
ds
jecxz
shrl
inc
mov
add
pop
sahf
lea
and
push
and
ficoml
in
inc
cmp
sbb
pop
xlat
or
mov
lahf
dec
jmp
or
hlt
cmpsb
jo
test
stos
or
inc
pop
incb
lods
dec
sub
out
fisttpll
xchg
mov
lret
add
jnp
loope
leave
xchg
sub
mov
and
jge
mov
dec
aad
addr16
fcomip
sbb
fldcw
addr16
ret
repz
mov
add
into
mov
add
shrb
mov
icebp
test
dec
lods
push
adc
xchg
lcall
adcl
roll
sub
aam
fistpll
inc
sbb
mov
push
mov
outsl
xchg
mov
xor
addl
and
pop
mov
jns
adc
xchg
inc
test
mov
into
bound
adc
rolb
and
and
add
adc
stc
push
imul
repz
das
pushf
mov
mov
xor
popa
sti
movb
out
dec
mov
push
push
lcall
mov
das
add
cs
sub
call
bound
and
sbb
sahf
iret
ds
cli
fimull
adc
push
enter
nop
cmpsl
xlat
cli
xchg
sbb
adc
in
sti
data16
mov
data16
movsl
cmp
pop
addb
fnstsw
in
insl
imul
push
mov
pop
mov
into
ficoml
lret
adc
sbb
and
adc
jbe
mov
jne
or
pop
data16
mov
xor
mov
pop
inc
push
iret
cmp
mov
mov
sub
cmp
fmuls
dec
outsb
mov
jge
je
pushf
imull
mov
adc
or
outsl
or
fs
sub
push
jnp
popa
mov
add
test
int
xor
pop
pop
rorl
add
pop
ss
jle
dec
mov
cmp
jno
outsb
enter
repnz
fwait
jno
js
rcl
imull
rcll
sbb
pop
aam
sub
mov
add
jns
cwtl
mov
lcall
xchg
sti
mov
jbe
mov
stos
shll
dec
imulb
out
out
xor
xor
xor
subl
mov
mov
jb
add
and
stc
sub
das
inc
ss
mov
lret
sahf
mov
in
lret
push
imul
lcall
shrb
iret
jmp
xor
mov
and
cs
imul
jae
push
out
xor
ret
enter
nop
push
xchg
cmp
enter
cmp
xlat
cmp
movsb
mov
cld
inc
ja
jb
pop
add
xor
push
sub
pop
clc
mov
ljmp
inc
cmp
mov
mov
ret
fidivrs
in
js
hlt
mov
pop
mov
push
test
mov
mov
ss
out
inc
je
dec
rorl
mov
mov
sbbl
inc
imul
es
mov
aad
leave
push
in
push
mov
jge
into
movsb
aas
xor
imul
push
rcll
dec
or
popa
lods
and
notl
sarb
inc
mov
arpl
push
cmp
fidivl
negb
in
mov
jmp
mov
mov
ljmp
pop
adc
xor
loope
jo
mov
pop
mov
jo
adc
sub
imul
sbb
aad
int3
and
repz
xor
sti
lock
and
int
xlat
dec
cwtl
test
add
and
aaa
out
pop
mov
inc
bnd
rcrb
adc
lock
sub
lahf
lcall
pop
sti
ficoms
insl
in
mov
sarl
inc
mov
fdiv
mov
int
jecxz
idivl
push
jne
orl
push
xor
mov
xchg
mov
push
jnp
gs
add
and
cld
mov
or
test
mov
into
or
inc
leave
mov
xchg
mov
in
icebp
or
inc
test
push
push
xor
shlb
stos
ss
imul
dec
sbb
xchg
lret
mov
mov
push
sbb
repnz
xchg
jg
out
cmpsb
mov
cmp
test
add
cld
cmp
jne
lods
int3
inc
mov
stc
pop
and
lods
imul
daa
add
sahf
lret
nop
es
pop
push
ja
pop
pop
xor
fldz
pop
inc
inc
or
sbb
sub
or
mov
pop
xchg
rcll
sub
fistpll
and
push
aad
sahf
push
pop
pop
dec
loope
cwtl
push
and
push
imul
mov
mov
andb
and
outsl
mov
addr16
dec
mov
fwait
sub
push
imul
sbb
push
xlat
cmp
frstor
lahf
int3
dec
jbe
jle
xchg
call
shll
dec
je
cltd
shlb
shrb
ret
adcb
fwait
mov
out
int
lods
adc
adc
dec
scas
dec
mov
insb
and
mov
sbb
jne
sub
inc
and
jmp
out
out
pusha
negb
movsl
dec
clc
arpl
push
xchg
mulb
mov
lods
xor
jmp
jne
and
add
jge
fstps
lods
sahf
lahf
cltd
push
pop
fsts
adc
gs
push
mov
cmpsb
sbb
cli
push
pop
aas
in
mov
mov
sub
cmp
insb
es
mov
or
cmp
lret
call
scas
jno
daa
cmp
shrb
addps
sub
aaa
adc
cmp
or
enter
shlb
jg
mov
and
adc
push
pusha
push
pop
je
dec
mov
repz
xor
mov
push
scas
enter
dec
sub
loope
idivb
js
mov
push
into
cmp
call
xor
movsb
jecxz
cs
movsl
call
test
fstps
repnz
je
mov
push
clc
inc
pop
xchg
repz
pop
out
sub
mov
jp
fistpll
lret
push
xchg
cmc
jb
lahf
jbe
and
or
pushl
ljmp
leave
outsl
xor
fsubrl
xchg
mov
jle
leave
xlat
stc
xor
jge
loope
adc
cli
sub
pop
pop
rcrb
iret
or
dec
dec
or
push
push
lahf
and
jnp
fistpl
and
les
xor
or
clc
mov
mov
pop
xchg
lahf
sbb
xor
sbb
std
hlt
cmp
sbb
mov
lods
fstpl
dec
dec
push
xor
dec
inc
cmp
negl
xchg
mov
pop
cmc
aam
stos
movsl
repnz
sbb
stos
stos
add
fbld
pop
outsb
push
xor
aaa
fstpt
cmc
std
sti
iret
nop
fldenv
dec
push
inc
das
loope
xchg
fldcw
ret
aas
test
add
cmpsb
pop
pop
push
arpl
das
nop
cmpsb
jbe
jb
cmp
xchg
and
inc
inc
jmp
fcmovnbe
lds
mov
lret
mov
nop
aaa
aam
xchg
cltd
push
fistl
cmpsb
jb
push
xor
fs
lcall
mov
stc
xchg
cmp
sub
sbb
aam
xor
scas
or
fsubp
sbb
lds
test
test
jl
xchg
iret
push
xor
and
xor
add
sbb
int3
faddl
adc
in
xchg
enter
xchg
push
jp
pop
inc
sar
fdivrl
push
sub
loopne
stc
pop
mov
stos
stos
inc
cs
aam
pop
outsl
dec
pop
inc
dec
scas
sbb
jns
jp
adc
out
cmpsl
in
xor
mov
fnstsw
dec
mov
xchg
mov
mov
cmp
movsb
jge
std
push
outsb
sub
sbb
sbb
pop
push
aad
test
sbb
ja
mov
pop
addr16
cli
push
xchg
sub
push
jecxz
cmpsl
push
jg
pop
insl
mov
sbb
aaa
fbstp
jbe
mov
mov
stos
dec
cli
mov
adc
adc
nop
xor
mov
sub
xchg
cmp
bound
mov
out
addr16
sbb
mov
xchg
dec
jae
test
outsl
sub
imulb
xor
out
imul
or
and
dec
jne
cmc
mov
das
lcall
xor
add
pop
popa
enter
hlt
mov
or
jbe
xchg
pop
xor
pop
push
daa
insb
xchg
mov
push
dec
jmp
bound
test
sti
push
es
shlb
sbb
xor
rclb
xchg
lods
mov
fucomip
popa
xor
pusha
sbb
lds
movb
out
mov
sbb
rcll
mov
fistpll
mov
add
inc
sbb
mov
pushw
xchg
test
push
pop
aad
les
ljmp
xor
adc
pusha
in
jle
jns
sub
push
popl
scas
stos
push
sub
lret
push
or
add
fisttps
aas
and
aas
lds
fisubl
test
jnp
in
les
mov
idivb
mov
dec
add
mov
iret
jle
in
push
and
scas
data16
mov
mov
inc
std
lahf
sbb
pushf
out
add
shll
pop
pop
push
adc
mov
mov
xchg
sub
pop
push
and
jg
scas
jle
xchg
cmpsb
cmp
insb
in
loope
repnz
pop
jo
inc
ja
mov
mov
fnstcw
data16
int
sbb
or
popa
inc
mov
mov
sub
sub
mov
in
cltd
jl
cmp
pop
add
add
adc
pop
adc
or
xor
sub
or
xlat
clc
fisttpl
jle
pop
icebp
movsl
xchg
icebp
jge
sbb
sub
lods
sbb
or
jae
mov
out
mov
cmp
enter
adcb
out
add
lock
sub
jg
dec
add
in
ss
adc
sbb
popf
jne
push
movl
daa
cld
ss
ret
mov
inc
sti
dec
sbb
fcomi
xchg
xchg
outsb
adc
inc
sbb
jno
inc
mov
and
sub
pop
or
repz
mov
xchg
dec
aas
cmp
xor
arpl
andl
rclb
in
push
pushf
test
push
mov
inc
dec
push
push
shll
jo
inc
imul
xchg
lea
dec
movsl
daa
xchg
pop
cmp
jl
inc
adc
popl
stc
cmp
pop
inc
mov
lods
sub
fstpl
pop
push
sub
mov
jp
fwait
sbb
loopne
dec
shl
xchg
aam
and
gs
in
mov
mov
aas
mov
jae
std
mov
das
push
stc
jb
pushf
jecxz
aad
lahf
xchg
in
jae
inc
pop
xchg
cmp
repnz
cwtl
cmp
js
shll
dec
mov
aad
scas
or
mov
or
ret
js
or
dec
jle
xchg
out
in
fidivrs
ja
es
fnstenv
or
mov
sub
movsl
scas
fiaddl
pop
push
fcoms
mov
pusha
and
cmp
aas
rorb
fwait
stos
dec
test
lock
push
loopne
rolb
push
pop
test
push
mov
push
out
je
push
xor
push
notl
arpl
mov
enter
jb
rcl
arpl
mov
xchg
dec
pop
cmc
aaa
add
sti
rol
outsb
adc
aaa
popa
lahf
icebp
lahf
jp
mov
iretw
das
mov
fbld
mov
push
loop
cmp
mov
out
aas
popf
fwait
adc
ljmp
ja
jmp
jno
inc
out
cmp
mov
int
push
fidivl
cmc
sbb
fnclex
adcb
ja
loopne
sbb
cmp
fdivrl
jmp
lcall
mov
lods
add
into
and
out
jmp
xor
or
in
mov
push
mov
aaa
mov
dec
push
rcrb
lahf
jecxz
add
jb
scas
out
inc
pop
xchg
fcompl
ss
mov
lret
bound
mov
in
xchg
pop
dec
mov
into
pop
and
push
jo
pop
push
dec
mov
lret
ljmp
jmp
or
outsl
aaa
ror
push
xor
dec
push
insb
mov
cwtl
jnp
fistpll
fwait
push
mov
and
fdivr
daa
je
stos
test
clc
repnz
sbb
daa
arpl
push
push
pop
xchg
repz
mov
das
addb
jno
xor
inc
divb
mov
push
xor
fcoms
push
pop
and
insb
adc
loop
pop
or
xlat
out
es
pop
lret
xchg
xchg
fwait
rcrb
dec
and
lcall
pop
inc
outsb
cmp
loopne,pt
pop
ror
mov
push
arpl
xchg
sti
popa
push
xadd
jmp
xor
rcll
jmp
cmp
cmp
xor
stc
mov
into
inc
je
inc
mov
shrl
xchg
xor
jo
mov
dec
unpcklps
jge
mov
scas
mov
adc
xor
cs
xor
call
pop
addr16
out
and
int
or
xchg
add
ss
inc
je
cmpsb
mull
das
xchg
lea
daa
sbb
test
adc
shrl
out
mov
inc
xorb
pop
outsb
daa
das
nop
ror
fs
in
idivl
push
stos
jae
sahf
add
mov
mov
cmp
mov
movsl
insl
arpl
scas
push
adc
aad
push
xchg
pop
roll
sbb
lods
adc
mov
addr16
mov
sbb
jb
jbe
int
mov
lret
mov
xchg
ss
cmc
repnz
pop
cld
stos
or
cltd
std
push
mov
aam
rclb
sbb
mov
mov
sbb
jl,pt
sbb
test
sarb
jmp
out
jle
xchg
sbb
add
xor
mov
dec
pop
out
fdivl
imul
insb
cmp
out
jle
rcll
mov
mov
push
push
add
mov
push
mov
and
or
mov
fadd
or
push
xchg
push
sub
dec
imul
pop
jb
mov
mov
push
mov
dec
repnz
fstpl
pushf
lcall
scas
int
sti
in
aad
ficoms
shll
sbb
jns
leave
movsl
pop
xor
lahf
lcall
loop
jo
stos
or
sub
lret
push
adc
xchg
rcl
pop
push
push
insl
lcall
aad
sbb
pop
loope
ljmp
imul
xchg
loopne
xor
imul
popf
dec
loope
mov
xchg
pop
sahf
mov
mov
test
aad
nop
leave
cmc
lds
xchg
mov
inc
add
pop
and
mov
and
adc
out
push
es
or
mov
std
cmpsb
stc
and
dec
add
mov
inc
nop
shrb
pop
lods
fcomps
gs
mov
push
mov
pop
aaa
imul
xor
sbb
sti
mov
jle
clc
push
clc
mov
sbb
mov
leave
or
into
mov
inc
dec
mov
shlb
pop
decb
jae
andl
lea
jge
push
into
aaa
mov
in
ds
xchg
jno
and
xor
jbe
aas
and
cmp
mov
jns
hlt
rolb
add
push
sub
fsqrt
mov
sahf
shl
pop
mov
cmp
mov
fidivs
mov
fcomi
pop
adcl
mov
mov
inc
test
sbb
lds
addr16
inc
mov
call
sub
sbb
mov
inc
mov
ds
add
mov
or
mov
cmc
push
sarl
dec
adc
repnz
dec
movsb
or
push
pop
jnp
push
fildl
sbb
pop
push
jns
ret
xchg
pop
jge
mov
or
mov
dec
sub
push
std
xchg
es
lcall
xchg
rorl
xor
stos
bnd
add
inc
icebp
popf
mov
pop
push
sub
out
xor
imul
popf
aas
sbb
jle
or
out
addl
push
jp
js
mov
xorb
mov
out
dec
sbb
outsb
aas
pop
cmp
adc
mov
jge
loopne
jo
inc
lods
jmp
arpl
es
xorl
adc
lea
push
fsubs
sbb
js
sbb
cli
std
push
mov
lock
repz
push
jecxz
inc
xor
loope
test
fisttpl
or
dec
push
xchg
and
leave
int3
hlt
push
into
aaa
or
std
mov
outsl
sub
push
imul
cld
jo
cmp
xor
cmpsb
sbb
aas
dec
dec
pop
iret
sub
data16
enter
dec
das
add
add
fists
addr16
inc
sbb
setnp
insl
test
and
xchg
mov
or
lock
xor
adcb
test
shrl
jge
add
push
insb
sti
xchg
mov
loope
cs
and
repz
pusha
xor
scas
cmpsb
adc
sbb
fists
sub
ds
notl
sarl
pop
sti
mov
xor
out
inc
cmp
scas
test
or
jne
imul
cmc
fwait
ja
cmpl
pop
out
sub
mov
aas
jg
push
mov
xchg
mov
push
pop
lock
jl
les
mov
inc
insl
push
nop
jge
mov
repnz
popf
push
fdivp
jnp
xlat
or
mov
lock
lods
lahf
push
fdivl
push
daa
adc
paddusb
jg
loope
jns
mov
outsl
and
xlat
mov
imulb
cmc
sti
lret
es
mov
lods
or
clc
loopne
movsl
inc
and
fwait
jp
mov
sub
inc
mov
pop
das
jns
inc
push
pop
cmpsl
mov
lock
cmp
mov
mov
mov
xchg
loopne
orb
adc
mov
fimuls
sub
dec
dec
rorl
dec
adc
inc
cmp
mov
cs
jle
lret
sub
adc
mov
adc
ljmp
out
out
add
ret
inc
push
or
les
cmp
lcall
jno
xchg
or
pop
mov
push
aas
mov
push
add
mov
and
mov
xor
mov
shlb
es
mov
mov
aaa
gs
push
out
aas
cmp
mov
pop
pop
lcall
imul
cmp
inc
mov
adc
xor
data16
mov
popa
dec
pop
and
cld
insb
imulb
mov
test
fbld
sti
and
and
push
test
mov
ret
xorb
popa
xchg
icebp
fidivrs
sub
add
mov
jo
cld
sbb
mov
js
jmp
mov
pop
inc
mov
adc
cmp
jns
ljmp
int3
pushf
sbb
or
mov
mov
ja
mov
js
les
lcall
stos
addb
push
push
inc
xchg
or
xor
leave
push
sbb
fimull
gs
testb
sbb
pop
mov
cs
mov
pop
aaa
lds
mov
insb
in
xchg
ja
daa
fisttpll
xor
lea
jns
test
movsl
jo
push
das
pop
sbb
ja
subb
pop
test
or
push
jo
push
pop
cmc
jns
insb
or
aas
pop
into
adc
sbb
jecxz
lea
mov
stc
xor
adc
scas
popf
sbb
sbb
mov
xchg
loop
lods
sbb
pop
stos
xor
jcxz
das
adc
dec
pusha
cmp
arpl
pop
xchg
iret
mov
sbb
das
and
ret
and
push
mov
and
pushf
lock
jg
pop
or
mov
je
dec
js
aad
aad
adc
ret
hlt
push
inc
ss
adc
push
and
and
push
pop
loop
jno
xchg
cmpb
pusha
and
loopne
push
lret
inc
inc
inc
sti
sahf
push
sub
adc
cmovl
data16
cmp
jg
aam
sahf
cs
push
or
mov
stc
cs
fnstenv
fstp
pop
mov
ret
outsl
clc
dec
in
scas
in
fisttpll
ja
mull
jae
test
adc
jmp
pop
loop
out
push
pop
fadd
mov
push
ficompl
sub
mov
je,pt
jo
repnz
adc
in
add
or
dec
mov
push
cltd
pushf
xchg
mull
add
adc
dec
and
lds
mov
dec
mov
mov
sub
leave
jle
push
nop
dec
hlt
out
jecxz
fwait
rorl
and
loop
add
loopne
test
aaa
jb
outsb
fimuls
cmp
or
popa
adc
xor
rcrb
sbb
mov
mov
lret
cwtl
mov
inc
cltd
jnp
repnz
push
cltd
lds
dec
jecxz
fiaddl
xchg
sahf
ds
jo
jmp
jae
lods
loopne
adc
jmp
pop
outsl
xor
stos
push
cmpsb
aad
out
mov
icebp
sbb
mov
ljmp
das
cli
xor
cmpsb
sub
jp
xchg
and
ss
mov
gs
sbb
sub
or
fmuls
pusha
das
subw
inc
cmp
aaa
and
jae
lret
into
repz
jbe
cmp
inc
mov
pinsrw
adc
xlat
das
sbb
mov
mov
mov
push
jne
xor
rcll
adc
dec
mov
in
outsb
sti
jae
pushf
dec
mov
xor
jecxz
lods
mov
adc
xor
je
dec
fistl
cwtl
xor
jae,pn
gs
push
xchg
rorb
mov
fdivs
adc
shll
bound
outsb
les
lahf
jns
imull
inc
movsb
sub
int3
xor
or
lahf
sub
mov
fcmovb
jo
jecxz
jp
mov
xor
pop
mov
lods
cmp
ss
mov
pop
inc
es
arpl
add
xor
mov
mov
jg
ret
jo
insl
xor
dec
ja
pop
mov
jge
rcl
mov
aam
mov
dec
mov
dec
sbb
fisubrs
sti
gs
enter
sbb
ret
fsubl
pop
xchg
call
mov
pop
cmp
cwtl
data16
pop
repnz
push
test
xor
cmp
out
push
cmp
popf
pop
or
mov
scas
mov
mov
jo
xchg
fsubs
insb
cmp
stos
stos
add
pop
in
dec
push
sbb
sbb
out
sub
mov
stos
fwait
sub
jne
sub
jae
mov
jns
sub
jge
shrl
or
xchg
push
pop
add
cmpsl
push
cmp
pop
xor
jp
js
cmp
pop
scas
push
push
out
fsubr
xorl
adc
xor
fwait
stos
lods
sub
mov
mov
xor
cld
jmp
jno
inc
sbb
xchg
adcb
ds
jle
loop
je
repnz
mov
lods
adc
mov
mov
jecxz
pop
rcrb
or
or
add
pop
test
xchg
mov
mov
mov
je
xchg
cmp
insb
dec
int3
addr16
loopne
sti
rorb
sarl
xlat
dec
pop
sub
out
fldl
inc
loopne
pop
sbb
mov
pop
subl
xchg
sbb
xor
out
and
cmpb
jl
add
out
in
leave
push
loope
mov
sbb
mov
rcrb
arpl
leave
lret
enter
jp
add
mov
push
inc
xor
sbb
adc
in
pop
incl
int
mov
shrb
mov
into
inc
fs
adc
pop
rolb
cmp
loope
sbb
negb
or
mov
xchg
push
jle
ret
nop
bound
lret
dec
lcall
test
jo
addr16
jo
jmp
mov
cmp
mov
sarb
aaa
stc
adc
xchg
lock
cmp
int
xchg
mov
mov
pop
dec
push
and
xor
iret
aad
imul
fnstsw
inc
ficoms
push
xor
mov
jae
mov
mulb
sbb
jno
fwait
ja
pop
or
shl
sti
pusha
xchg
int3
pop
adc
jo
sub
enter
notb
jno
adcl
imul
push
sbb
adc
stos
hlt
lods
cli
stc
mov
sub
das
or
xor
incb
inc
sbb
or
and
add
into
sbbb
mov
int
pop
call
addr16
lods
jb
in
pop
xchg
mov
jmp
pop
stc
pop
pop
mov
mov
gs
out
and
sub
pop
xchg
pushf
cmp
sbb
loop
jne
xlat
mov
cltd
mov
mov
test
mov
cs
clc
cmp
jl
mov
mov
cli
and
sbb
pop
test
cmp
stc
aas
loopne
test
xor
pop
push
pop
cld
push
bound
dec
movsb
dec
jmp
sub
or
inc
mov
out
and
push
rcrl
pop
aas
das
outsb
xor
jnp
test
xchg
sub
fcoms
idiv
loope
cmc
negb
jp
dec
xchg
inc
mov
or
mov
pop
repnz
mov
lcall
stc
inc
movsb
inc
ret
and
lcall
jmp
shll
or
fidivrl
cld
ficoml
xor
mov
mov
jae
sbb
pop
push
mov
fwait
push
pop
adc
jno
mov
jg
test
xchg
mov
xor
fwait
rcr
fisttpl
aam
orl
icebp
imul
jnp
pushf
jo
mov
or
notb
mov
adc
or
mov
lahf
je
mov
sbb
je
mov
addr16
jno
clc
stos
popf
sbbb
fsubl
jno
ds
jbe
in
mov
aaa
sub
pop
mov
adc
mov
test
popf
push
push
mov
jb
add
and
pop
mov
negl
cmpb
daa
push
jl
dec
xor
dec
cmp
sub
or
push
call
ret
cmpsb
orb
imul
cltd
push
enter
movsb
xor
jecxz
sbb
sub
pop
lcall
cmp
mov
mov
push
mov
and
out
lock
rcl
les
add
and
mov
jo
xlat
pop
sarb
mov
movsb
icebp
add
int
lea
ss
mov
popf
test
push
push
sbb
aas
cmp
push
jp
addr16
into
inc
out
sbb
mov
xor
pop
sub
insl
popf
dec
xorl
lcall
aaa
or
arpl
dec
into
imul
dec
xchg
mov
scas
mov
movsl
mov
loop
cmc
inc
sub
jmp
loopne
nop
andl
in
adc
insl
sub
call
imul
mov
mov
mov
lea
jge
clc
loopne
fistpll
shr
loop
xor
xchg
cmovs
jae
lret
in
js
pop
movsl
popa
cmpsb
mov
enter
inc
dec
enter
adc
adc
ljmp
test
dec
push
jg
xchg
iret
mov
xchg
in
stc
and
rcll
xchg
mov
stc
mov
lret
xchg
push
fs
mov
sbb
mov
jbe
sub
xstore-rng
cmpsl
rcr
push
inc
push
and
push
stc
repz
sub
stos
xorl
inc
or
ja
fisttpll
pop
in
pop
add
push
jnp
or
rcrl
pop
es
and
inc
loopne
xchg
pop
jmp
pop
adc
ror
mov
in
cs
je
push
pop
or
push
mov
in
bound
sub
and
mov
jg
jns
in
push
push
pop
mov
scas
jae
push
insb
xor
xchg
pop
stos
or
push
sbb
sub
cmp
adcl
test
xchg
imul
dec
jg
pop
cld
or
sbb
jb
adc
mov
repnz
aaa
or
adc
outsb
dec
mov
dec
jae
push
jge
mov
fisttpll
repz
subb
mov
in
arpl
cli
xchg
mov
adc
and
push
xor
adc
mov
or
push
test
xor
cwtl
scas
mov
lods
mov
push
mov
movsb
xor
ja
cmpsl
je
lahf
jne
out
jle
xchg
fsubr
or
lods
sub
fnsetpm(287
inc
and
xchg
imull
cld
fnsave
add
mov
sbb
mov
jnp
jl
in
push
dec
dec
sub
jp
push
movsl
cwtl
pop
inc
stos
mov
mov
mov
dec
jecxz
movsl
rcr
sahf
adc
addr16
rorb
push
dec
xchg
mov
fmul
aad
push
jo
xchg
hlt
xchg
jecxz
andb
das
push
xchg
out
push
sub
in
js
ljmp
sub
int3
pop
repz
add
sarb
into
andl
pop
roll
insb
mov
push
arpl
push
lahf
test
scas
xchg
or
mov
icebp
mov
sarl
hlt
jl
in
out
lds
and
int3
jl
ja
sbb
cmp
fdivrs
in
and
pusha
adc
cwtl
and
stos
pop
push
fcmovu
out
addr16
push
push
test
sbb
add
inc
push
sti
jbe
mov
jno
loop
push
clc
xor
insl
jp
rclb
xor
or
cmp
fs
mov
push
cmp
push
mov
sub
mov
xchg
outsb
mov
cld
mov
je
add
stos
mov
jl
mov
add
clc
sbb
mov
lcall
dec
mov
rorb
xlat
in
xchg
out
aas
ret
mov
js
jns
int3
xor
cmp
pop
test
aas
stos
fisttpll
dec
mov
mov
out
out
xchg
scas
add
mov
inc
push
mov
aas
dec
test
ret
ss
rolb
fs
sahf
push
out
dec
fwait
rolb
mov
lods
jo
jb,pn
cmpsl
mov
pushf
aas
pop
iret
mov
stos
and
std
hlt
xor
jnp
sahf
ret
lea
pushf
xor
xor
gs
addl
dec
add
dec
pop
imul
and
in
inc
jo
loope
mov
imul
inc
int3
adc
sbb
fwait
shrb
jle
mov
aam
insb
rcrb
hlt
insb
out
push
lock
mov
inc
fwait
adc
sbb
mov
adc
pop
icebp
repz
arpl
mov
push
cld
sbb
mov
pop
ret
les
jbe
fwait
or
je
mov
shrb
outsl
push
pop
lcall
sahf
cmp
sub
or
cmc
inc
dec
outsb
lods
cmp
xchg
inc
push
and
shl
filds
jne
aam
mov
je
push
jecxz
gs
scas
mov
cmpsb
fsts
xor
inc
jns
push
jno
jmp
lock
ljmp
pop
jb
adc
ja
sahf
repz
cltd
outsb
push
or
adc
sarl
jno
adc
stos
out
jge
mov
outsl
lcall
xor
popa
xor
iret
stos
jge
xlat
insb
dec
adc
sub
ljmp
cmpsl
lea
jmp
cmp
mov
dec
mov
iret
mov
clc
pop
cld
mov
js
xchg
cltd
inc
je
enter
js
movsl
or
sbb
and
mov
into
fnstcw
push
mov
cmp
push
jb
jle
mov
pushf
pop
int3
fwait
sbb
insb
cmp
daa
dec
es
and
mov
adc
lds
xor
call
sub
mov
mov
lret
mov
adc
je
jae
sub
xchg
sbb
sub
mov
adc
cmpsl
mov
jecxz
pop
inc
mov
push
stos
test
xchg
int3
push
cmp
jae
mov
push
test
push
jbe
jmp
sub
push
outsl
cli
std
arpl
fmul
insb
lds
popa
push
mov
popf
push
xchg
cwtl
lods
xchg
mov
enter
scas
mov
dec
or
mov
adc
inc
pop
mov
mov
xor
aad
mov
sahf
fsubs
pop
lods
or
out
pop
fisubrl
xchg
pop
bound
fs
push
imul
pop
les
mov
test
or
stos
stos
sub
jl
dec
scas
jb
iret
mov
in
dec
adc
lcall
adc
dec
cld
pop
adc
popf
adc
mov
pop
push
repz
sub
pusha
ljmp
aad
movsl
scas
shll
popf
sarb
inc
dec
mov
jbe
sbb
inc
scas
adc
adc
mov
enter
xor
clc
inc
in
pop
fadds
jno
cli
cmp
fadds
and
rorb
mov
les
cs
outsb
adc
inc
mov
or
scas
inc
icebp
adc
jo
repnz
xchg
bound
ret
insl
loop
xchg
mov
sbb
mov
sbb
fcom
xlat
test
xchg
pop
ret
push
mov
fstl
pop
ret
adc
inc
jb
in
cmp
push
mov
xchg
hlt
mov
rcl
aam
xchg
add
inc
clc
push
jb
imul
ja
dec
clc
loope
cld
shl
inc
jbe
sub
addr16
ljmp
push
jb
mov
push
xor
repnz
sti
pop
ret
sar
xchg
pushf
sarl
lcall
clc
pop
mov
mov
and
test
mov
je
xor
ds
inc
cld
jp
fmull
push
negb
mov
or
cltd
sbbb
adc
mov
and
bound
fistps
fisttpl
xlat
add
fnsave
pushf
xchg
xor
xorl
jecxz
clc
shlb
mov
aam
push
lods
push
push
mov
pop
jns
shll
jge
dec
out
mov
cwtl
daa
movsb
inc
data16
mov
jb
dec
push
imul
pop
dec
loop
fidivl
iret
cmp
jns
test
pop
fmuls
jnp
inc
arpl
lea
xorl
movsb
xor
loop
push
ljmp
jns
loope
push
xor
fs
call
jns
loopne
xchg
push
cwtl
loopne
xchg
out
fcompl
ljmp
movsb
frstor
inc
or
xor
inc
add
sub
icebp
mov
ficomps
push
rcll
pop
data16
cli
enter
sub
sub
cmp
xor
pop
mov
fistpl
or
loope
bound
push
mov
bsf
pop
xchg
push
xchg
js
loope
inc
and
leave
xor
call
adc
das
mov
inc
loope
imul
adc
data16
mov
fsubl
mov
cmc
xlat
jp
mov
and
insb
and
rol
cwtl
jecxz
shrb
popf
es
add
sub
and
das
out
gs
hlt
sbb
dec
and
and
int3
inc
hlt
push
movsb
mov
dec
dec
sahf
pop
dec
scas
imul
add
popa
je
rclb
in
mov
jge
insb
mov
ja
mov
sub
out
in
xchg
or
hlt
jg
fbstp
fcompl
mov
loope
aam
cld
cmc
test
mov
fimull
or
aas
jno
push
addr16
and
adc
mov
jecxz
inc
hlt
push
lods
out
ljmp
dec
icebp
xlat
in
movsb
lods
adc
sub
pop
push
sub
das
mov
hlt
sbb
adc
imul
stos
cmp
mov
fs
repnz
sub
fimull
ret
lret
sbb
pop
lods
cmp
jns
jne
push
mov
xor
roll
adcb
mov
lcall
pop
popa
popa
jb
mov
push
xchg
inc
or
aad
push
xchg
nop
mov
adc
adc
fs
std
cld
xchg
dec
mov
xor
pop
or
pop
stos
test
sub
sbbl
jge
test
out
sbb
insl
cltd
mov
imul
mov
fbstp
push
push
and
loope
dec
mov
push
cld
hlt
add
decl
fnstenv
andb
pop
out
fidivs
inc
lock
lahf
cmp
mov
adc
mov
adc
test
in
and
mov
xor
leave
mov
ret
outsl
pushf
mov
jo
cmp
add
mov
imulb
cmp
arpl
mov
push
add
sarl
dec
ds
xchg
mov
push
jbe
mov
sub
mov
imul
inc
les
pushf
inc
sub
hlt
clc
xchg
inc
pop
jg
xchg
sub
mov
jle
test
out
loopne
mov
mov
cwtl
pop
ds
enter
mov
sub
loopne
in
mov
mov
lcall
in
push
in
iret
dec
dec
sbb
fwait
int3
push
push
push
sbb
shll
xor
aaa
movsb
mov
movsb
push
mov
repnz
jg
pop
sbb
gs
data16
sbb
pop
lock
in
mov
xor
jle
stos
fidivs
or
pop
fistpll
inc
adc
jmp
mov
sbb
cmp
dec
negb
shrb
outsl
lods
fnstenv
insl
jle
lahf
pushf
mov
aam
push
cmp
pop
test
adc
repnz
lahf
or
movsb
mov
lret
adc
popa
in
test
cs
mov
lret
lds
jl
xchg
jno,pn
mov
mov
and
ds
add
divb
xchg
inc
pop
shr
es
or
xchg
aaa
scas
roll
pop
jg
stc
lcallw
in
mov
add
push
cmp
sarb
pusha
cmp
mov
sub
scas
dec
cld
mov
ret
dec
fcomps
sub
pop
cmp
push
jmp
ja
add
add
jg
sub
lds
dec
lahf
std
test
subb
das
pop
sbb
arpl
stos
push
ss
cmc
or
mov
lds
in
lods
cltd
jle
test
insl
or
insb
shll
mov
bound
je
push
psraw
test
mov
pop
lret
sub
test
pop
lods
cli
cmp
pop
pop
inc
loope
outsb
mov
push
js
pop
xor
andl
leave
lods
out
mov
inc
pop
mov
add
outsb
add
repnz
adcl
out
push
out
repz
scas
bound
and
jne
pop
bound
push
mov
xor
mov
xor
cltd
cmp
xlat
sahf
flds
gs
ret
push
ss
fidivrs
sbb
movsb
lret
mov
sub
pop
push
fs
mov
xchg
mov
mov
push
test
popf
aaa
andl
jmp
insl
mov
nop
mov
jns
cs
mov
add
cli
scas
movsb
testl
mov
push
inc
sbb
out
adc
lret
pop
outsl
popl
push
orb
aad
cmp
sbb
enter
mov
and
push
push
cmp
das
imulb
lds
xlat
pop
add
push
call
ljmp
les
fisubrl
rorl
rcrl
xor
inc
fistpll
call
mov
sub
mov
clc
out
dec
mov
mov
xchg
jg
rcll
daa
ret
push
test
fidivrs
out
mov
or
test
shlb
into
cld
adc
stos
or
stos
lods
inc
inc
es
loopne
mov
lock
mov
lods
lcall
aad
pop
insl
pop
dec
mov
mov
mov
jecxz
imul
bound
adc
pop
pop
sbb
rolb
push
xor
subl
xor
jns
cmp
scas
jg
xchg
or
cmp
loopne
jle
insl
xor
pop
adc
shl
push
cmp
out
repz
ss
ss
sub
mov
push
pop
mov
add
jp
or
push
fldl
and
stc
add
adc
jnp
ret
mov
adc
gs
shr
cli
mov
inc
pop
inc
cld
mov
in
jge
dec
xor
mul
loop
jno
dec
mov
rcrl
scas
fistpl
mov
push
xchg
xchg
fildl
popf
or
adc
push
mov
xor
lock
jne
js
inc
nop
lock
jmp
divb
aas
mov
pop
pop
fists
fs
adc
mov
mov
cwtl
xor
xor
sub
icebp
mov
push
dec
mov
test
or
out
xor
shll
mov
mov
jg
cmc
dec
mov
or
testb
add
orl
mov
insl
jge
gs
sbb
cmp
cmpsl
xor
loopne
mov
mov
xor
xchg
sahf
mov
lods
idivl
vminps
push
and
outsl
lret
push
mov
xor
test
rcrl
jp
or
div
int3
cmc
lea
sahf
dec
lret
push
popf
add
inc
fnstcw
data16
jmp
pop
outsb
sti
sbb
cmp
in
mov
das
iret
cld
sets
sbbb
xor
int
push
sbb
xor
fstpl
stos
xor
enter
lods
sti
mov
lea
jecxz
mov
jle
push
mov
pusha
pop
xchg
adc
rolb
rolb
adc
scas
xor
dec
dec
pop
repz
ljmp
lds
lock
mov
adcl
xchg
cs
inc
fistpl
es
hlt
outsb
cmpsb
outsb
mov
aas
mov
ja
scas
sbb
jbe
mov
sbbl
es
push
jnp
lock
jp
scas
bnd
popf
mov
add
xchg
mov
imul
jae
pop
adc
add
out
jne
pop
mov
dec
lret
addr16
xchg
xchg
pop
jmp
test
test
dec
xchg
movsl
add
xchg
lock
subb
fdivl
addr16
mov
lds
or
fwait
mov
iret
push
test
xor
ljmp
mov
cmc
cmp
jae
sbb
neg
ret
xor
mov
idivb
cmpsb
mov
hlt
sbb
cmp
out
mov
out
xchg
int3
jo
cmpsb
sti
scas
fiadds
leave
filds
push
lock
adc
sar
fucomip
pop
shr
sbb
in
fcomi
mov
leave
call
xor
inc
iret
ret
add
fdivr
or
fs
sbb
jne
xchg
pop
fisubrl
cmc
sbb
fisubs
push
push
mov
insb
in
out
insb
inc
xchg
cmp
scas
test
xor
cwtl
mov
pop
dec
ret
and
repz
insl
sub
cli
fidivs
lds
lods
sub
mov
push
mov
subl
and
lods
ret
loop
adc
cwtl
jl
mov
icebp
inc
push
mulb
push
pop
mov
mov
or
cmpsb
xor
xlat
fwait
inc
sbb
xor
xor
mov
fisttpl
arpl
icebp
imul
pop
ds
enter
stc
sbb
adc
outsb
cmp
outsl
inc
aam
xchg
mov
or
add
aad
mov
jo
repnz
es
xor
mov
xor
idivb
lods
sti
jne
adc
repnz
push
dec
pause
inc
repnz
lret
mov
inc
sbb
inc
pop
sub
imul
xchg
jb
clc
es
fistpl
xchg
push
pop
fwait
adc
test
mov
or
mov
iret
sti
filds
out
cli
xchg
in
gs
sarb
jmp
sahf
pop
mov
jno
in
imul
mov
add
fmuls
sub
insl
mov
mov
sub
mov
lods
adc
ss
test
dec
mov
nop
push
lret
mov
dec
sub
fnstcw
lds
or
cmc
push
scas
push
hlt
ja
subb
xchg
cmpsl
repz
pusha
or
fimull
pop
jo
xchg
push
mov
jo
scas
cmc
mov
gs
mov
pop
call
data16
incb
cmp
scas
inc
pop
adc
stos
lret
xchg
pop
xchg
mov
add
inc
mov
cwtl
adc
mov
pop
pop
cmp
inc
fucomi
sbb
sbb
lea
mov
mov
lret
mov
sub
push
mov
sub
sarl
adc
fldz
push
mov
push
imul
cwtl
sub
adc
sahf
push
inc
push
inc
stos
adc
pcmpeqw
fnstsw
lahf
out
dec
aam
add
stc
jo
dec
mov
xor
mov
lea
out
aad
hlt
adc
in
jne
xlat
test
and
cltd
mov
lret
lret
std
xor
or
sbb
pop
inc
push
jmp
inc
push
adc
les
in
cmpsl
icebp
pop
mov
pop
inc
jmp
movsb
xchg
push
leave
xor
xchg
idivb
int3
push
andb
popf
int
mov
scas
jno
aaa
inc
xchg
sbb
scas
and
cli
inc
or
addr16
mov
pop
popf
and
mov
push
jl
inc
lahf
mov
cmp
fcoml
icebp
cwtl
dec
movsl
adc
xchg
lea
push
xchg
jae
aas
dec
out
in
pop
ds
adc
in
repz
outsb
stos
pop
aaa
sbb
test
clc
mov
push
pop
imul
dec
repz
dec
mov
lret
adc
inc
test
mov
mov
inc
arpl
xchg
pop
fsubl
mov
xorb
sbb
add
or
stc
pop
dec
xchg
mov
push
jp
dec
gs
mov
xlat
es
das
adc
aad
out
cmp
jmp
ficoms
mov
mov
pop
add
lods
sbb
mulb
sub
or
ret
xchg
mov
inc
cmp
push
add
adcl
jmp
es
pop
out
dec
xor
jne
inc
xchg
adc
sbb
sub
test
ds
mov
in
add
cli
add
lea
mov
loope
lret
mov
inc
cwtl
xor
mov
outsb
mov
mov
les
add
adc
push
dec
mov
fstps
and
gs
push
sbbl
imul
sbb
icebp
xor
rcr
rorb
cmpsb
jmp
mov
and
xchg
out
sbb
jnp
pop
test
mov
add
pop
xor
daa
jno
ror
inc
shrl
outsl
mov
lret
fstps
mov
outsl
ds
in
sub
jmp
cld
leave
mov
lods
out
sub
add
popa
and
inc
dec
xor
es
cmpsl
jecxz
popf
push
icebp
es
jle
inc
xchg
xchg
jae
adc
mov
out
in
js
xor
cmp
imul
test
lret
dec
and
in
and
scas
mov
imul
adc
jp
xchg
mov
mov
sbbl
cmp
hlt
lds
in
inc
fnsave
dec
pop
jnp
jl
test
aas
mov
mov
pop
xchg
ja
sbb
pop
loopne
stos
or
sub
inc
imul
repz
sub
out
pop
push
pop
mov
adcb
lret
mov
scas
and
add
lock
cli
adc
leave
jle
icebp
push
dec
cs
outsl
clc
lods
sbb
jmp
popa
paddsb
shlb
and
jecxz
inc
inc
xchg
leave
pop
xchg
sbb
dec
add
ljmp
add
jl
xor
mov
mov
in
xorb
mov
or
shrl
mov
mov
fidivrs
sbb
push
xchg
subb
cmp
xchg
xchg
push
imul
pop
imul
mov
in
sbb
lods
out
jb
xchg
sbbl
cli
adc
jb
mov
bound
ret
sti
sub
adc
cwtl
repz
and
cmp
sub
fwait
test
lock
jp
mov
sub
std
fildl
insl
mov
mov
dec
movsb
loope
xchg
jno
ljmp
pop
jmp
push
jle
cmp
cwtl
in
out
mov
dec
pop
sub
iret
mov
cwtl
mov
out
cmpsb
addl
lods
out
fwait
jno
and
sbb
sub
data16
xchg
jl
or
mov
dec
cmc
inc
adc
mov
mov
shrl
push
push
imul
mov
pop
outsb
out
xchg
cld
pushf
mov
test
rclb
add
xlat
mov
ss
roll
push
outsb
sub
lret
xor
pop
add
movsb
js
orl
hlt
out
je
lcall
fdivl
jmp
testl
dec
dec
lds
jmp
push
aad
pop
icebp
push
mov
jno
ret
addr16
and
add
adc
lea
pop
mov
mov
push
jne
add
fsubrp
and
rcll
dec
lret
fucom
inc
rol
aam
mov
push
insl
or
addr16
fcompl
pop
add
icebp
in
fcmovu
es
push
out
mov
in
mov
dec
push
pop
stos
sub
sub
les
sbb
sti
daa
mov
cmpsb
xor
insl
jp
xor
or
mov
mov
shrl
jns
pop
fmul
xor
jb
jge
cld
loopne
adc
xor
call
xor
call
sub
dec
roll
movsl
mov
pop
and
popf
mov
repnz
lcall
cmp
fists
xor
pop
sbb
outsl
inc
movsl
out
fstpl
ss
push
cmpsl
push
nop
add
negb
add
lret
je
bound
mov
lret
jge
jle
fsubr
cmp
decb
icebp
enter
push
aad
sahf
outsl
out
inc
inc
sbb
sbb
gs
push
add
mov
leave
icebp
les
inc
and
cld
shlb
add
dec
xchg
mov
push
xor
sahf
call
or
cs
lret
loopne
sbb
dec
mov
incl
daa
xlat
sar
xor
and
pop
mov
lret
add
rcrl
lcall
adc
test
loop
stos
jb,pt
and
in
cmp
insb
push
jnp
and
je
insb
xor
mov
mov
ljmp
dec
ret
jl
enter
fistpll
cmpsb
fcoml
pop
xchg
sahf
push
repz
push
push
pop
and
jb
lock
nop
test
scas
adc
aad
push
push
es
sti
movhps
sbb
loop
fs
add
dec
ret
jns
pushf
xlat
sbb
out
aas
lcall
xchg
lods
sbb
xor
hlt
dec
mov
mov
xor
dec
insl
in
push
popf
popa
repnz
insl
xchg
cmpl
fwait
lds
outsb
fimull
jae,pn
insb
bound
adc
pop
or
adc
xor
lahf
mov
xor
mov
out
aam
push
ret
mov
xor
test
cmp
leave
addr16
pop
pop
loopne
push
cwtl
xor
mov
dec
and
loop
mov
out
inc
adc
cmc
rolb
ret
fs
pop
movb
xor
stc
out
popa
cltd
xor
push
xlat
popf
ljmp
mov
ret
mov
jl
mov
inc
mov
pop
rclb
xlat
and
es
dec
pop
data16
ja
ret
fldcw
sbb
add
mov
xor
dec
test
icebp
add
mov
sub
push
jo
imulb
xor
inc
jmp
push
jl
jno
jmp
outsl
jb
cmpsb
dec
lock
push
inc
movsl
enter
outsl
lods
das
mov
adc
or
inc
in
dec
or
call
dec
out
sub
mov
or
jmp
ss
mov
jmp
dec
ret
jle
mov
je
aas
dec
jge
cs
mov
mov
xchg
gs
sahf
inc
pop
mov
cmp
mov
pop
jl
mov
push
imul
jmp
jno
fsubs
ja
pop
int3
xchg
jo
sti
inc
add
and
adc
stos
mov
xor
or
pop
outsl
adc
cmpsb
jg
cmp
mov
xchg
aad
inc
xor
push
cmp
sqrtps
mov
ror
lods
lods
mov
fists
mov
fcoms
xchg
pop
mov
mov
inc
mov
dec
pushf
dec
sub
movsl
ficoml
lahf
mov
adc
pop
adc
outsb
call
js
imul
pop
inc
adc
jl
out
xor
addl
pop
ljmp
jns
cltd
xor
jb
dec
jp
popf
cwtl
mov
mov
popf
push
dec
pop
cmp
cmp
scas
fadds
jno
enter
cltd
jg
lds
imul
incl
iret
mov
mov
pushl
sbb
push
pop
dec
xchg
adcb
pop
pop
arpl
cmpsb
cltd
iret
jbe
stos
int3
cld
xchg
shr
mov
mov
stos
push
movsl
xchg
test
or
inc
or
mov
rcl
data16
lock
push
je
sbb
fstl
fisubrl
mov
pusha
out
xor
lahf
xor
fildll
lods
imul
mov
aam
icebp
mov
fs
stos
dec
push
inc
fcomps
jns
mov
test
shlb
flds
push
pushf
je
push
jle
mov
fadds
dec
jo
xchg
iret
sahf
inc
mov
dec
sub
push
and
cmp
mov
or
cmc
scas
test
sbbb
int
push
aaa
jb
push
cmp
test
xchg
out
pop
jno
loop
fdivr
stos
lret
les
fmul
push
lock
xchg
orb
ja
fsubl
sub
addb
ret
cld
mov
adc
and
jno
out
hlt
scas
jp
mov
lock
std
repz
rorb
ss
scas
stos
mov
xchg
dec
loopne
leave
sahf
test
adc
aad
dec
push
and
mov
push
push
or
imul
cmpsl
sbb
repnz
jo
testl
mov
cmpb
test
push
mov
cwtl
mov
and
jle
cmp
int3
in
add
pop
mov
rcr
jne
mov
push
and
mov
lock
es
jmp
lret
push
lds
push
icebp
xchg
shlb
jge
stc
jbe
cs
andb
repnz
adc
xor
add
cmp
mov
mov
pop
inc
ss
int
out
or
inc
testb
sub
lea
push
fs
in
sbb
rcl
inc
paddsw
inc
or
dec
repz
inc
cmc
shrb
ss
xlat
sbb
inc
or
jecxz
lahf
add
push
inc
leave
mov
movsl
xchg
mov
ret
dec
sub
xchg
lahf
cmp
pop
hlt
push
mov
push
or
lcall
and
out
push
mov
outsb
mov
jge
xor
jle
adc
fistpll
xchg
cmpsb
ss
jge
das
push
push
jl
mov
shl
imul
jne
out
mov
mov
and
pop
push
inc
bound
lods
test
cmc
adc
rcr
fwait
outsl
fcmovnb
lea
fwait
inc
dec
push
imul
test
xorl
movsl
mov
jge
sbbb
jns
push
xchg
jb
jae
fcmovnb
push
push
ret
subb
xchg
js
in
daa
mov
or
push
jecxz
cs
sbb
lods
xor
imul
sarb
mov
push
ljmp
imul
mov
rcrb
mov
clc
test
loopne
mov
dec
addr16
iret
sbb
les
fcompl
lock
imul
or
in
out
lahf
jmp
loopne
mov
les
test
dec
mov
adc
push
inc
mov
xchg
repz
aad
punpcklwd
or
jg
pop
ds
sbb
xchg
insl
rcll
mov
mov
movsb
cmp
mov
mov
std
push
movl
popf
adc
lods
or
mov
dec
xor
inc
dec
dec
jmp
jl
lret
imul
clc
pop
cmp
les
bound
sbb
loopne
insb
add
add
movsl
incl
mov
mov
cmp
in
ljmp
push
mov
insl
dec
cmp
xorb
repz
loopne
bound
and
fcmovne
mov
aad
and
xor
popa
adc
sahf
inc
mov
mov
add
popa
jo
cmp
or
lods
out
pop
push
mov
push
je
or
xor
sbb
cmp
push
mov
xchg
cltd
or
ljmp
clc
out
int
lock
dec
mov
arpl
mov
sub
add
add
shlb
cmp
jmp
jo
aaa
jmp
adc
adcl
inc
jecxz
adc
lds
mov
or
push
pop
push
insb
outsl
ja
ret
and
or
or
mov
pop
inc
imul
sub
mov
xchg
or
push
test
bound
adc
lret
inc
sub
arpl
mov
sub
shr
icebp
mov
xchg
push
mov
jns
add
or
fisubrs
aam
push
nop
movnti
adcb
jle
mov
jle
xchg
rcl
mov
gs
jb
lods
cmpsl
repnz
jecxz
mov
pop
cld
mov
push
cwtl
daa
fcomps
sarb
inc
or
in
dec
ljmp
out
cli
dec
arpl
or
in
sahf
mov
cmp
arpl
fimull
mov
daa
call
std
cmp
fsubl
push
mov
xchg
movsb
mov
ja
pusha
cli
pop
jo
xchg
int
fsubr
xchg
insb
mov
mov
clc
xchg
push
push
xor
std
adcb
xor
dec
ret
mov
sbb
and
jge
adc
fisttpl
add
inc
xchg
push
inc
shrb
xor
lea
pop
out
jo
mov
js
inc
mov
addl
in
aam
adc
fcomi
mov
sbb
xchg
gs
insb
pop
inc
popa
call
mov
sahf
lahf
repz
push
push
sbb
fimull
lds
aad
add
xchg
iret
mov
xchg
std
dec
push
shll
test
test
cmp
fstpt
lea
and
inc
add
sub
xchg
aas
ret
outsb
jnp
add
and
test
test
test
adc
sub
push
adc
adc
pushf
mov
sub
ljmp
fwait
pop
xchg
or
mov
in
fsubr
mov
loope
out
or
shlb
sub
and
adc
mov
call
push
rcll
jge
mov
adc
mov
xchg
mov
dec
mov
loope
jl
sub
lods
repz
outsb
push
lds
xchg
stos
mov
cmp
sbb
loop
ret
and
inc
sub
sbb
dec
fistpl
dec
cmp
leave
dec
popa
fistpll
jp,pt
and
test
pop
jg
lret
xor
or
push
dec
clc
js
es
xchg
insb
jbe
mov
sbb
sbb
out
adc
sbb
xor
mov
ss
and
lock
cmpsl
lods
pop
inc
xor
and
sbb
xchg
pop
fsub
fwait
mov
or
xor
addb
mov
ljmp
rorb
push
sbb
int
push
out
cltd
add
jmp
data16
xchg
leave
xor
adc
bound
fwait
stos
idivb
inc
lods
insb
push
push
aam
xchg
in
ljmp
iret
or
jnp
cmp
insl
dec
mov
mov
insl
hlt
adc
mov
push
lcall
aas
in
in
in
lock
xchg
mov
lods
fldl
jns
push
push
cltd
rcrb
insb
addr16
or
shrl
xchg
jge
inc
pop
xchg
enter
cmp
and
sbbl
vmulpd
inc
xchg
cwtl
dec
dec
pop
xchg
loopne
fdiv
and
mov
std
sbb
push
scas
push
iret
loopne
jp
insb
lods
stos
lcall
call
loope
in
jno
mov
outsl
mov
leave
adc
cwtl
repz
add
jo
inc
dec
outsb
rorl
inc
in
jno
je
pop
sbb
dec
xorl
insl
fiaddl
inc
push
inc
xchg
out
mov
mov
xchg
cld
mov
pop
rclb
inc
dec
dec
jge
cmp
pusha
std
add
je
xchg
cltd
push
cmp
lret
adc
rorb
sub
loope
jnp
pop
cltd
or
shrl
mov
push
jl
dec
mov
mov
enter
sub
pushf
add
and
mov
mov
lock
inc
repz
out
sar
std
movsl
sub
pop
fadds
arpl
stos
xor
adcl
test
inc
repz
xor
xlat
cmp
subb
mov
insb
mov
into
push
ss
jno
aad
dec
cmp
das
iret
testl
iret
mov
pop
mov
jbe
iret
jecxz
lahf
sbb
xchg
cmp
jae
mov
add
mov
repnz
inc
jne
mov
pop
mov
dec
pop
subb
push
sub
sahf
push
adc
and
mov
gs
movsl
lcall
mov
inc
lods
inc
outsl
pop
scas
sahf
inc
insb
shll
scas
inc
sub
bound
lret
pop
xlat
notb
popa
inc
xchg
jns
out
movsl
getsec
ds
push
mov
dec
jb
test
or
dec
cmp
adc
sti
roll
loop
push
xchg
inc
movsb
push
or
in
sub
inc
movsl
jge
lds
pusha
mov
loopne
xor
repz
cwtl
cmp
jbe
jbe
mov
loop
xchg
xor
cs
push
mov
out
cmp
add
loope
loop
popl
mov
ret
mov
enter
mov
sahf
mov
xlat
stos
push
adc
xchg
in
sbb
ret
out
mov
xor
stos
nop
scas
dec
pop
gs
cmp
inc
aaa
daa
rcr
push
iret
bound
dec
mov
jl
inc
insb
xchg
arpl
pop
pop
dec
jl
fistpl
addr16
popa
push
ljmp
sub
and
sbbb
lods
shrb
lcall
mov
lock
mov
xorl
pop
sbb
popa
push
or
xchg
fwait
mov
push
cltd
sysenter
push
fildl
jmp
push
test
ds
add
lret
dec
imull
cmp
or
jmp
jecxz
repz
lahf
js
sub
push
int
push
mov
sub
xor
insb
lret
or
and
outsl
pop
lcall
ret
cmp
scas
cmpsb
hlt
xor
jnp
push
lea
cmp
and
in
test
ja
ss
mov
cmp
dec
cmp
pop
lahf
ret
loop
cld
add
into
imul
sub
std
xchg
cmp
andb
outsb
and
imul
addr16
leave
and
mov
mov
das
das
dec
jno
sub
push
and
push
test
and
adc
test
fldl
mov
or
mov
ljmp
or
push
imul
xchg
pushf
stos
loop
rcr
repnz
jns
cs
add
lcall
xchg
stc
adc
cmp
jno
stos
aad
in
sub
roll
cmp
popa
xchg
aas
pop
into
xchg
mov
sarb
scas
dec
mov
repz
pop
cmp
test
inc
lret
pop
lcall
pop
sbb
dec
fldt
pushf
sbb
xor
scas
xchg
fwait
pop
mov
pop
test
xor
ljmp
jg
sbbl
call
xchg
fnstenv
popf
js
cwtl
ret
scas
loop
adc
enter
outsl
repz
inc
das
movsl
sbb
std
loope
ret
and
leave
cld
out
jae
jb
xor
ja
mov
cltd
in
pop
xor
cmp
add
stc
out
mov
push
jge
stc
ret
les
test
nop
sarl
cmp
out
pop
sub
push
out
pop
add
jg
jmp
and
loop
dec
inc
mov
mov
push
ret
push
pushl
iret
pop
out
in
push
lret
mov
xor
les
pop
in
mov
mov
test
push
jae
cmp
jno
mov
sarb
cmp
loope
cmp
adc
sub
xchg
and
aam
rolb
testb
fnstsw
andb
pop
in
cmp
clc
out
cld
pop
jae
cmp
js
add
mov
jg
inc
ds
cmp
bound
inc
push
pop
sbb
push
les
dec
mov
xchg
pop
sbbb
cld
push
pop
jo
push
xor
fistpll
mov
in
sbb
xor
sub
mov
mov
movsb
or
imul
out
cli
cltd
adc
jb
mov
pop
inc
je,pt
dec
loop
mov
jbe
jno
nop
adc
test
xchg
outsl
mov
cltd
out
adc
lret
ja
enter
imul
aaa
lods
dec
sbb
xor
sti
fistps
or
sbbb
stc
imul
mov
adc
rolb
dec
inc
inc
cmpsb
lods
stc
xchg
or
iret
aad
sub
outsb
out
dec
or
cmpb
in
jg
pop
jg
xchg
ret
xchg
pop
mov
lahf
jge
dec
in
push
sub
call
popa
add
cmp
scas
sbb
stos
sbb
push
mov
dec
sbb
jo,pt
xor
and
mov
mov
mov
inc
and
ret
out
cmp
int3
lock
cs
sub
ret
out
shrb
push
out
insb
data16
xchg
cmp
cmpsl
sub
ror
in
in
mov
xchg
aad
fmulp
pop
push
adc
es
mulb
fwait
rorl
mov
fwait
lea
cltd
jno
jae
dec
ret
fcmovnbe
mov
sbb
test
scas
mov
inc
out
inc
pop
cmpl
lods
pop
mov
loope
movsl
dec
loopne
and
pop
arpl
icebp
dec
mov
loopne
lcall
fsubp
add
dec
pop
in
pop
push
xor
mov
xor
dec
pop
pop
xor
mov
mov
push
adc
dec
add
push
sbb
adc
fnsave
cld
inc
test
test
dec
aas
jbe
inc
push
pushf
cmpsl
das
imul
call
enter
jg
mov
stos
lods
adcl
and
rolb
or
xchg
iret
push
lcall
mov
cmp
in
push
dec
push
pop
jo
leave
xchg
xchg
mov
and
dec
mov
cwtl
push
mov
mov
sub
out
das
sbb
and
inc
mov
ja
movsb
cmp
in
sub
sti
sub
push
cmp
mov
stos
stos
sbb
movsb
je
orl
sub
fucomip
enter
cmpsl
dec
and
xor
cmp
xor
push
and
push
push
lods
xchg
cmp
cmpsl
jne
mov
sub
and
subl
mov
arpl
xchg
cmpsb
mov
push
or
xor
cmp
push
lds
xchg
add
fsubrs
pop
sbb
idiv
test
cmp
pop
cmp
jmp
xor
mov
and
stos
ret
pop
jnp
iret
mov
into
jg
div
jno
test
fdivp
pop
in
fdivl
cvttps2pi
test
daa
mov
mov
mov
push
fs
stc
roll
or
clc
pop
cmp
lods
xrelease
in
xor
mov
cltd
imul
scas
dec
xchg
mov
or
sbb
lcall
sub
cmp
pop
int3
xor
xor
mov
cmpsl
aaa
outsl
pushf
inc
mov
inc
add
xor
cmp
or
sub
call
sub
lock
dec
lock
or
int3
cs
repnz
xor
movsl
jo
cmp
mov
pushf
sbb
shrb
mov
test
adc
clc
and
push
in
push
rorl
out
out
or
jnp
addr16
cs
mov
test
loopne
inc
adc
iret
mov
es
out
adc
cmovae
lods
aaa
sbb
movl
mov
mov
jg
sub
repnz
fs
push
lds
sub
cmpb
inc
adc
add
dec
ljmp
insb
and
jne
aad
xchg
jmp
push
movsl
adc
mov
and
xor
in
mov
rorl
adcb
leave
scas
xorl
jo
cwtl
pop
cmp
pop
mov
repz
sbb
test
xchg
inc
cs
adc
jo
and
insl
inc
adc
jl
jmp
mov
scas
sub
pop
in
in
filds
js
jns
pop
lds
test
jmp
aas
xchg
rclb
pop
xor
roll
push
push
mov
and
inc
ss
xlat
push
fistpl
aas
mov
mov
out
xlat
hlt
xchg
test
mov
push
les
shlb
pop
cwtl
jl
std
mov
addb
mov
test
clc
addr16
push
and
and
adc
aas
scas
push
mov
sarb
jg
rcl
js
fsubrs
ret
push
pop
sbb
ja
mov
mov
in
mov
mov
xchg
outsl
xor
rorb
jo
or
dec
inc
add
push
mov
mov
sbb
pmaddwd
nop
pop
jae
cs
push
jge
cltd
in
xlat
adc
jge
jb
imul
or
push
std
lods
lahf
mov
or
loop
push
das
fcomps
push
fstl
add
adc
gs
mov
adc
sub
inc
scas
xchg
adc
mov
pop
mov
adc
sub
add
dec
sbb
jbe
dec
fnclex
ljmp
xor
fwait
inc
mov
push
cs
xchg
test
mov
iret
inc
inc
jae
add
imul
adc
add
sbb
add
fadd
int3
cmp
xor
mov
into
fsubrs
xchg
mov
stos
call
or
sbb
mov
lods
pop
pushf
xchg
in
fnsave
dec
cmp
pop
arpl
pop
insl
mov
or
imull
in
cld
push
insb
negb
inc
dec
mov
pop
pop
mov
xor
push
shll
mov
mov
pop
mov
mov
lods
daa
mov
mulps
mov
xor
insb
or
ds
adc
or
out
xor
aas
imul
sarl
sbb
xorb
dec
pop
dec
xchg
loope
outsb
cwtl
neg
mov
int
popf
add
lret
stos
jne
pop
xor
xor
pop
leave
sub
adcb
rcrl
popa
sbb
ja
divl
repnz
daa
mov
push
mov
and
imul
mov
pop
lods
rcr
or
mov
dec
pop
test
xor
sti
mov
loope
mov
outsl
mov
sub
xchg
mov
push
pop
xchg
xor
dec
idivl
or
mov
ret
sbb
sub
pop
loop
or
cmp
lcall
imul
and
mov
or
stos
aam
rorl
negl
lret
jo
inc
jp
sub
call
sub
inc
and
int
testb
push
into
adc
and
dec
xor
fwait
ret
mov
inc
fwait
rolb
orl
out
mov
xor
add
cli
dec
imul
int3
jbe
ja
pop
push
sub
jge
mov
lahf
mov
pop
dec
xor
sub
push
rorb
push
je
mov
push
sbb
outsl
rorb
pop
popf
int3
cmp
arpl
lret
test
pop
enter
mov
cmc
and
cmp
sbb
shl
cmp
sub
jle
pop
lret
nop
mov
cmp
mov
xor
mov
and
outsl
cmpsl
inc
mov
mov
popf
mov
xchg
clc
or
mov
adc
pop
jecxz
or
sub
loopne
or
push
shlb
lret
sahf
pusha
xor
and
shlb
lret
push
pop
cmp
or
dec
inc
adc
into
push
inc
sub
movsb
fst
loopne
testl
or
cmp
call
push
jl
mov
xchg
popa
dec
or
sbb
fmul
inc
sarb
mov
ja
aaa
mov
lcall
inc
insb
push
inc
push
adc
inc
sbb
add
cmp
negl
pop
add
lret
cmp
xchg
out
jbe
lods
ja
sbb
fsubrs
cmc
lret
add
fcomps
mov
cwtl
mov
pusha
sub
in
xchg
sub
push
test
mov
xchg
cltd
fwait
and
mov
dec
movsb
into
jl
cwtl
imul
sub
lahf
mov
cmpb
push
and
orl
push
imul
inc
mov
test
jp
popa
cmp
sbb
into
call
aam
fcomps
mov
xchg
loopne
or
adc
inc
cmp
mov
adc
mov
loopne
scas
push
clc
push
or
sub
jmp
cmp
fcmovu
fnstenv
inc
stc
lock
int
mov
repnz
orl
dec
sti
mov
adc
push
stos
ss
lods
aad
push
iret
rcrb
sub
sub
jbe
bound
lods
stos
lods
adc
pop
test
repnz
movsl
inc
test
stc
xchg
cmpsl
jae
adc
aaa
shr
lods
jge
rolb
jae
cmpsl
loop
ror
pop
rep
add
dec
out
mov
and
adc
pop
addl
in
repnz
in
add
test
out
mov
add
sbbb
mov
add
or
and
xor
ret
xor
aam
push
adc
aaa
popf
jno
jno
cmp
mov
and
push
jecxz
cwtl
pop
mov
add
movsl
iret
lock
pop
ret
into
out
mov
mov
sbb
fildll
mov
imul
push
aas
jns
and
inc
jg
inc
dec
out
sub
testl
push
ds
jnp
pop
inc
mov
lret
cmpsl
push
mov
and
icebp
daa
sahf
jno
jns
sub
hlt
mov
pop
xor
xchg
push
mov
js
sub
xor
lahf
movsl
into
arpl
xchg
arpl
cmp
sarb
sub
pop
fldln2
scas
xor
pop
fisubl
sti
cltd
mov
add
adc
fildll
add
jne
iret
jp
and
test
mov
and
jne
js
xlat
test
iret
add
les
pushf
mov
dec
xor
inc
cmp
insb
ljmp
fsts
mov
je
adc
test
scas
repnz
pushf
and
sbb
push
into
leave
stc
push
cmp
mov
icebp
scas
fdivrl
idivb
mov
fldt
das
ljmp
pushf
cmc
std
sbbl
sbb
sub
xchg
mov
mov
jnp
pushf
jb
pop
arpl
xor
cmpsb
push
jecxz
push
out
and
or
jmp
stos
mov
cld
pop
add
sbb
push
jmp
test
inc
xlat
push
xor
cmc
es
or
mov
pusha
fadds
shrl
sbb
lcall
in
adc
sub
icebp
loop
stc
popa
iret
xlat
andb
adc
lret
or
test
pop
pop
stos
or
stos
in
loop
mov
or
pop
and
pop
sbb
xor
mov
repnz
or
out
cmp
out
mov
stos
pop
ret
sub
jo
ljmp
fmull
mov
ret
or
lcall
inc
jl
lret
leave
sbb
mov
fimull
push
mov
jle
pushf
pop
push
ljmp
inc
cmpsb
cmc
push
rep
es
pop
push
fs
out
push
mov
ds
mov
push
xor
cmc
inc
xchg
mov
jo
cli
cmp
out
xor
gs
pop
add
into
in
cmp
iret
aaa
mov
mov
ja
test
addr16
mov
dec
adc
sbb
hlt
js
mov
stos
add
add
mov
push
fsts
test
xor
pop
mov
sti
add
jl
in
test
aad
add
pop
mulb
jnp
push
mov
push
movsl
jmp
xchg
fstpl
cli
inc
dec
sbb
shll
mov
mov
xor
aad
xchg
xchg
mov
repnz
scas
outsb
jecxz
push
cmp
xor
cmp
leave
inc
loopne
add
lock
sub
add
xchg
sbb
stos
and
sub
jle
sub
cwtl
leave
movsb
adc
das
sar
jnp
mov
mov
push
shrl
outsl
loop
mov
out
sti
decb
imul
fwait
mov
sbb
aad
push
dec
pop
call
mov
inc
mov
pop
stos
dec
push
ljmp
fmuls
mov
mov
sub
add
clc
or
and
xor
pop
es
mov
ret
xor
and
jno
dec
aam
in
mov
inc
outsb
sub
in
sbb
xor
stc
push
xchg
lods
insl
mov
mov
shl
or
iret
aas
pop
sub
cmp
adc
fmuls
shll
icebp
adc
add
aad
clc
jmp
aad
nop
lds
mov
xor
clc
xor
in
inc
push
aas
mov
fcoml
xchg
sbb
or
cmp
fisttpll
cmp
xor
cld
mov
mov
mov
cli
dec
xchg
pop
out
xor
cmpsb
and
jo
inc
aas
push
call
jg
jno
cmpsb
adc
or
mov
movsb
add
fcmovnu
mov
push
outsl
jno
stos
or
outsb
arpl
mov
xchg
scas
scas
subl
mov
movsl
rorl
dec
xlat
mov
hlt
lds
addr16
xchg
jae
in
insl
mov
xlat
shrl
push
sbb
add
mov
jne
jb
mov
cld
sbb
lcall
in
movzwl
pop
dec
aam
mov
popa
fmul
and
lcall
ds
ret
movsl
jl
jno
xchg
pusha
addr16
or
xor
sbb
inc
dec
push
or
inc
push
or
addr16
inc
into
and
xor
std
setno
sbb
sbb
dec
sbb
aam
mov
mov
cmpsb
test
mov
sbb
mov
sahf
in
or
out
mov
dec
push
inc
cmpsb
jb
imul
cmp
jp
mov
mov
dec
lods
repnz
andb
test
dec
inc
add
pop
int3
arpl
mov
mov
or
mov
insb
dec
cltd
iret
mov
shr
fsubrs
and
jmp
jmp
xchg
cmp
int
jg
and
out
shll
in
jl
stos
stos
lock
mov
jp
lods
faddl
test
lret
inc
mov
call
sub
test
lcall
rcrb
stos
jmp
jbe
add
icebp
inc
mov
sbb
or
push
pushf
pop
dec
mov
push
cwtl
push
lods
pop
das
cs
in
andl
add
xchg
pop
gs
mov
inc
hlt
in
inc
call
hlt
outsb
pop
push
sbb
xchg
cli
cmp
sub
adc
mov
xchg
cmp
outsl
mov
push
in
out
pop
or
add
fimuls
mov
xchg
notb
cwtl
dec
aaa
xor
stos
push
lock
add
outsl
sbb
jge
shll
cmpsb
xchg
icebp
add
and
inc
std
pop
icebp
dec
mov
adcb
cmp
aas
and
push
mov
pop
sahf
aad
dec
pop
jmp
push
fisttps
cmp
jo
pop
push
sahf
pushf
pop
imul
and
push
or
in
or
fcmovnu
hlt
push
mov
inc
dec
push
mov
repz
jns
adc
hlt
push
popa
dec
and
dec
xchg
test
cli
sahf
clc
sar
clc
lcall
cmp
addr16
adc
sarl
or
out
mov
xor
js
faddl
hlt
adc
xchg
and
mov
lods
out
mov
jg
push
insl
test
adc
stos
or
fiaddl
jmp
dec
popa
push
mov
jnp
test
icebp
sbb
scas
negb
sub
daa
jl
jo
insb
out
xchg
xchg
loope
cmp
lret
rcrb
lods
and
mov
mov
mov
and
shll
mov
push
add
loop
xchg
adc
push
loop
into
add
jg
dec
jp
orb
jbe
jo
sbb
jle
stos
xor
push
add
mov
cmpsl
fwait
mov
xor
lock
mov
mov
sar
test
dec
add
jns
js
push
out
push
in
xchg
lods
stos
jb
push
pushl
inc
push
pusha
sub
pop
xlat
and
rcrb
fs
xchg
mov
add
loop
popf
testl
push
popf
in
mov
idivb
push
stos
pop
sub
ljmp
xchg
cli
clc
pop
add
mov
cmpsb
or
outsb
xchg
mulb
das
push
sbb
arpl
pop
adc
jecxz
cmpsl
cs
aaa
negb
test
pop
notb
fidivrl
fs
lods
mov
cmpsl
add
mov
mov
jg
inc
xor
fsubl
xchg
pop
dec
mov
inc
pop
cmp
rol
sub
scas
int3
push
inc
int
dec
dec
dec
jae
add
arpl
cmc
dec
mov
faddl
fcom
pop
mov
jb
push
mov
jl
mov
push
sbb
push
mov
jno
or
cmpb
shrb
mov
or
xor
fdivrp
scas
adc
and
iret
jnp
test
jle
mov
lahf
sbb
ljmp
mov
pop
rep
lock
fiaddl
mov
aam
stc
ss
repnz
xor
idiv
mov
sbb
push
aaa
or
cli
scas
inc
push
jmp
gs
pushf
stc
mov
call
popf
in
sub
outsb
xchg
fnstenv
or
insl
fwait
mov
cs
mov
cmpsb
adc
arpl
aad
mov
std
inc
fs
scas
loope
jmp
mov
dec
jo
mov
loop
push
inc
dec
call
cmp
sti
addr16
loope
dec
outsb
sarb
rolb
nopl
cmpsl
icebp
outsl
add
mov
or
mov
inc
cmp
fbld
rol
aad
push
gs
pop
fsts
lret
adc
xchg
cmc
in
push
fcoms
test
insb
cld
cmpsl
jno
jg
mov
testl
and
popa
mov
scas
das
xor
dec
fdivr
xchg
push
jns
sarl
and
cmp
or
fdivrs
leave
je
mov
cmpsb
sub
jmp
lds
pop
xchg
sbb
int
jbe
cmp
mov
dec
cmp
mov
test
fwait
shrl
pop
orl
and
inc
jecxz
dec
sub
mov
sub
call
aam
jl
xchg
icebp
dec
push
imul
out
push
lea
mov
jmp
lods
into
rclb
add
iret
jge
or
fsubrs
xchg
pusha
hlt
mov
int
add
fildll
and
xor
mov
loope
adcl
mov
adc
ja
xor
cmp
mov
call
mov
sbb
push
fwait
push
inc
inc
mov
fwait
stc
inc
movb
rcrl
jl
fbstp
cmpsl
add
and
rol
xchg
insb
mov
cs
enter
ret
cs
cmp
lods
jno
cmp
les
aaa
lahf
in
mov
cmc
lahf
cmp
inc
xchg
xor
jg
mov
xchg
lcall
push
add
push
add
xchg
arpl
mov
pushf
movsb
gs
mov
mov
inc
pop
mov
xchg
mov
cltd
xchg
mov
sub
in
cmpsl
repz
cmpsb
mov
sti
popa
pop
std
sub
insl
pop
jmp
jp
mov
jno
lea
ss
into
aam
filds
sub
call
mov
sub
mov
push
mov
pop
sub
push
lods
negl
ljmp
arpl
mulb
es
movsl
sbb
movsl
cmpb
pop
or
pop
bndstx
mov
add
jg
add
pop
fimull
and
pop
mov
in
lock
sbb
xchg
cld
xchg
aas
dec
sub
loopne
push
in
pusha
fcompl
mov
jmp
es
sub
test
or
ljmp
sub
mov
xchg
dec
int3
aad
sub
sub
and
pop
jle
pop
or
and
fidivrl
fdivrs
iret
dec
je
je
sub
xchg
cmc
call
jbe
push
jo
jbe
mov
add
stc
inc
dec
stos
addr16
shlb
xchg
repnz
int
jo
sbb
sti
mov
or
sbb
arpl
jnp
fistpll
xchg
pop
cmp
pop
dec
dec
subl
mov
js
icebp
fbstp
jmp
pop
add
lock
add
std
dec
js
jecxz
lods
jl
add
mov
imul
jg
or
cli
sarb
inc
or
shll
scas
out
pop
push
dec
jb
popa
push
ret
jle
cmpsb
cmp
mov
test
pop
pop
jmp
pop
sub
push
inc
sbb
outsl
mov
push
jmp
arpl
inc
shlb
rorb
stc
outsl
mov
daa
cmp
mov
xor
and
daa
sub
pop
mov
sub
fcoml
loopne
mov
divl
cld
xor
repz
mov
lcall
jg
xor
cmc
add
repz
ret
mov
mov
icebp
xor
cld
pop
imul
xor
ja
je
js
xchg
pop
sub
xor
movsb
out
cld
in
mov
push
push
pop
inc
das
popa
int3
push
jb
jae
inc
cwtl
call
dec
cmp
mov
cmpsb
stc
mov
call
mov
aad
sti
sbbb
jl
pop
cmp
push
in
mov
pop
inc
adc
cwtl
mov
jo
jge
mov
in
in
imul
pop
cmpsl
mov
jb
outsl
fucomp
pusha
push
inc
fs
cmp
cmpsl
repnz
imul
lds
stos
fldl
sbbl
movsl
in
loopne
jae
adc
adc
rcrb
sub
and
cmp
add
mov
scas
adc
daa
or
fs
jnp
dec
fcmovne
and
cld
test
sub
icebp
jb
les
pop
pop
addl
jb
std
je
inc
enter
xchg
sbb
test
xor
gs
xchg
sub
int
adc
nop
movsb
push
dec
cmp
cli
gs
sahf
jae
add
inc
cmp
adc
cmp
js
mov
mov
xor
or
test
fcmove
lds
les
pop
lcall
mov
dec
into
cmp
lods
mov
dec
into
xchg
pop
mov
push
mov
into
cmpsl
outsb
cmpsl
lea
jb
push
out
scas
jbe
jp
xor
mov
xchg
out
clc
lea
sarb
enter
sbb
movsb
cmpxchg
sbb
sahf
lods
mov
sbb
adc
lcall
outsl
xchg
fnstenv
mov
mov
outsl
jmp
shrl
sar
bnd
dec
aam
pop
cmp
sub
pop
xchg
idivl
jno
ja
into
inc
in
xchg
addr16
test
jnp
pop
int
into
mov
push
mov
stos
jg
mov
or
out
sti
mov
test
mov
dec
cld
pop
fcoml
ss
sahf
lock
repnz
stos
or
repz
ja
sbb
sbb
icebp
in
loop
push
outsb
fwait
out
push
mov
push
mov
arpl
movzbl
or
jns
sub
xchg
es
filds
ret
and
jle
inc
mov
out
imul
bound
jbe
fcomps
pop
data16
adc
adc
aam
and
jns
mov
inc
jg
or
and
in
cmp
jmp
add
sub
mov
pop
incb
scas
cmp
jp
popf
mov
jle
add
sub
dec
adc
repz
cmp
adc
popf
outsb
insb
incl
outsl
clc
dec
scas
pop
xor
inc
jmp
cmp
mov
lret
add
inc
pushf
sbb
call
sar
lahf
ret
outsl
shl
sbb
jecxz
mov
sbb
shrb
leave
push
ret
cwtl
sbb
and
push
xchg
inc
data16
cmp
lea
fnsave
fcmovb
pop
imul
push
not
cli
stos
imul
leave
sbb
mov
ret
or
xor
xchg
addr16
dec
xchg
bound
aad
cmp
andb
stos
aaa
inc
mov
mov
fwait
movsb
in
gs
jne
dec
jp
frstor
jl
xor
ret
ja
jmp
pop
lahf
pop
fs
lds
sti
insl
aas
pushf
pushl
mov
add
dec
in
xchg
add
aad
xchg
push
pop
jecxz
cmc
xor
out
cmpl
dec
ds
mov
push
jg
sbb
cmpsb
push
push
movsb
sub
xlat
dec
push
call
mov
jmp
mov
mov
movlps
negb
or
lret
mov
push
inc
mov
das
pop
les
jmp
sub
jg
and
into
add
inc
jne
jge
mov
cli
mov
data16
je
jnp
jnp
and
sbb
adc
xchg
sbb
sub
icebp
out
hlt
sbb
icebp
mov
aaa
fwait
xchg
sti
inc
cmpsl
mov
mov
jb
pop
xor
or
cs
cmp
mov
lds
sub
fs
jmp
xor
xchg
into
push
dec
xchg
cmp
sti
xchg
daa
rcrl
jp
rcrb
pop
fbld
lods
jne
ret
outsb
shlb
xchg
push
xchg
xor
jp
xchg
ljmp
hlt
mov
push
add
scas
negl
dec
sbb
or
mov
test
pop
shrl
iret
leave
mov
je
fwait
mov
jbe
jae
scas
nop
scas
std
insb
inc
push
ja
xor
scas
movsb
jo
lods
xchg
pushf
stos
mov
jle
mov
into
push
or
jo
xor
dec
xchg
rcr
jp
pop
mov
pop
ja
icebp
jge
mov
stc
xchg
mov
aaa
sub
cmpsl
push
ljmp
frstor
push
bswap
mov
push
outsb
fisttps
push
xor
test
shr
sbb
cs
mov
dec
jcxz
pop
cli
add
add
stos
movsb
stos
sub
push
sarl
add
xchg
xchg
aam
imul
test
in
dec
or
dec
jle
add
popa
dec
and
fimull
rcrb
mov
xor
and
mov
sbb
mov
fistps
fs
mov
pusha
xchg
bound
cmp
aam
cld
jmp
add
int3
shrl
jge
and
aam
fcoms
adc
inc
fisttps
lret
sbb
ja
cmp
cmpl
dec
sbb
xchg
ss
aam
bnd
pop
fucom
mov
scas
and
loop
pop
dec
rorb
cwtl
int
out
pusha
xchg
push
rcrl
mov
sbb
sbb
mov
jns
pushf
nop
fisubrl
pop
jmp
clc
sbb
mov
add
cmp
shl
arpl
mov
into
es
push
pop
push
mov
sub
mov
sbb
cmp
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
cltd
call
sbb
movsb
jmp
inc
ret
daa
cmp
inc
sbb
stc
jp
push
es
aas
icebp
lea
mov
repnz
pop
mov
jno
xchg
inc
xor
push
call
testb
mov
jge
xchg
jecxz
push
test
data16
inc
or
aaa
mov
dec
cmp
in
add
sarl
js
mov
stc
mov
inc
jnp
mov
imul
jle
loop
stos
xlat
push
jo
xor
mov
adc
mov
repnz
shll
inc
xchg
sbb
inc
imul
mov
rcrb
out
xchg
gs
xor
mov
add
stos
or
insb
xchg
sbb
xor
and
mov
in
or
rol
xor
stc
lods
or
push
cmp
outsl
aad
enter
cmp
fcmovne
adc
mov
jge
sbb
das
pop
stos
sbb
add
sarl
jno
jns
cli
cld
fidivl
or
fwait
enter
fs
and
push
sbb
lret
and
stos
test
mov
xor
notb
mov
fstpt
mov
or
push
repz
push
cwtl
xor
mov
rclb
fimull
idiv
sub
add
notl
aam
test
mov
jmp
rolb
sub
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
