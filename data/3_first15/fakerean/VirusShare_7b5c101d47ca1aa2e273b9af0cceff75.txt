jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
push
add
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
adc
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
stc
xor
push
push
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
xor
adc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
adc
addb
ss
add
add
or
lea
mov
add
mov
add
sbb
add
addb
pop
inc
add
add
or
mov
mov
mov
lea
mov
mov
lea
push
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
inc
inc
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
and
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
in
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
add
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
aaa
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
add
add
je
mov
negb
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
addb
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
xorb
add
lea
mov
stos
adc
lea
pushf
xor
sbb
pop
and
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
int3
adc
add
add
push
push
call
test
js
lea
lea
adc
add
add
add
or
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
dec
adc
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
cmp
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
and
xor
inc
cmp
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
stos
sub
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fdivr
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
push
push
call
mov
test
jo
pop
popf
add
enterw
leave
push
clc
pushf
out
enter
jns
add
hlt
add
icebp
test
testl
andl
add
add
lahf
add
test
add
fwait
mov
add
ret
imul
pop
popl
add
xchg
mov
cwtl
icebp
scas
push
call
roll
mov
std
add
jle
jne
cmpsl
add
lock
ror
add
ja
add
jns
add
ret
jae
je
mov
add
lret
mov
mov
pop
aam
cli
push
mov
test
jo
sub
pop
popl
push
lea
push
push
lea
push
push
push
push
push
call
mov
jnp
add
iret
jle
add
add
add
xchg
add
add
lcall
add
add
pop
add
rolb
add
stos
sti
jno
popf
mov
fildl
clc
xlat
fisubs
icebp
fwait
mov
add
xchg
popa
cld
push
add
jmp
add
add
add
push
loopne
push
push
push
push
push
lea
push
push
push
push
push
call
fcomps
sahf
add
add
stc
add
stos
outsl
add
lcall
add
fs
add
fnsave
jo
stos
jo
add
jp
pop
js
add
fdivl
add
sar
add
stos
add
jmp
jle
add
add
movsl
ja
cli
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
add
mov
pop
mov
add
cli
fsubrs
xchg
add
out
add
flds
rolb
mov
pop
add
mov
add
mov
add
lcall
pop
sub
add
cmp
add
push
push
push
lea
push
call
add
in
add
pop
mov
push
add
out
out
mov
add
cmc
add
incb
aam
call
lods
add
shll
add
add
jne
mov
xchg
add
enter
add
fnsave
in
roll
add
add
jae
add
add
in
lock
push
call
push
push
call
out
mov
clc
pop
add
popf
imul
add
stos
ja
pop
scas
add
filds
jp
add
fiaddl
add
testl
fcmove
sub
pop
jmp
push
lea
push
push
lea
push
call
pop
add
mov
addb
add
push
mov
add
fmuls
lcall
pop
mov
add
add
add
mov
add
sti
std
pop
add
mov
add
add
cmc
add
mov
sub
pop
ret
push
push
push
push
push
lea
push
push
push
call
les
add
add
add
test
addb
lock
lods
add
int3
into
add
popf
add
mov
add
cmpsb
xchg
ljmp
add
add
xchg
cli
add
jns
add
push
add
shrb
lcall
inc
hlt
mov
push
lea
push
lea
push
push
call
fnstcw
loope
add
rolb
jle
xchg
jecxz
add
add
add
sahf
add
add
push
iret
jp
xchg
in
loopne
mov
test
add
shl
add
adcl
push
sub
pop
add
push
lea
push
push
call
in
fs
add
in
popl
std
gs
add
stos
add
imul
add
sub
pop
add
push
push
push
push
push
push
push
call
mov
push
filds
js
add
fwait
add
push
scas
stos
add
add
lahf
pop
scas
xchg
add
add
cli
push
mov
jl
jmp
mov
xlat
stc
add
sub
pop
add
push
push
call
add
mov
add
add
int3
mov
mov
add
jno
cld
pop
push
rolb
test
xlat
nop
std
mov
add
pop
add
repz
push
push
push
dec
push
or
inc
add
sub
pop
sub
pop
push
push
push
push
push
push
call
add
add
xchg
ja
jmp
mov
add
add
les
add
add
add
add
outsl
pop
imul
add
add
cmpb
jmp
nop
movsb
lcall
lcall
jne
push
push
push
call
fidivrs
fst
add
add
jbe
addb
jmp
add
nop
mov
xchg
add
pop
pop
add
out
fcmovne
pop
add
addl
add
xchg
push
add
test
pop
clc
mov
sub
pop
call
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
addr16
add
je
je
jo
test
add
add
fadds
add
add
addl
add
add
in
sub
pop
movl
push
lea
push
push
lea
push
push
push
push
push
push
call
add
imul
add
xchg
scas
jge
icebp
out
add
rolb
arpl
cli
fwait
mov
stc
add
add
add
std
add
add
add
sub
pop
lea
push
push
push
push
push
push
call
hlt
xchg
add
lahf
mov
movsl
stc
pop
mov
je
add
movsb
fildl
add
cld
add
enter
xchg
push
add
mov
add
repnz
lret
mov
add
add
push
jecxz
icebp
out
add
push
sti
add
add
add
arpl
pop
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
aad
add
data16
lahf
add
enter
out
add
add
add
insb
lea
pusha
jb
test
mov
mov
add
lret
add
add
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
nop
add
xchg
add
jle
mov
into
pop
add
add
stos
lret
outsl
stos
jle
add
add
add
mov
add
test
push
lret
add
loopne
stos
lcall
roll
in
fcompl
jne
push
push
push
call
add
mov
mov
into
jbe
scas
add
add
push
fstpt
add
aad
outsl
add
add
add
popf
push
add
add
add
pop
test
test
jecxz
add
mov
js
jae
pop
in
stc
roll
add
sub
pop
call
push
push
push
call
add
mov
xlat
mov
add
pop
add
test
push
xchg
add
add
add
jae
mov
sti
add
add
xchg
fwait
sub
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
call
add
scas
hlt
push
mov
add
std
jmpw
roll
add
ja
xchg
add
std
add
scas
mov
lret
bound
outsl
add
jnp
clc
shr
add
into
add
test
add
andb
add
fcompl
pop
push
testb
lods
add
int
mov
idiv
add
lcall
jne
push
push
call
add
roll
add
jno
jle
push
ljmp
add
je
push
push
rcrl
mov
add
mov
fwait
jne
outsl
fidivrl
pop
lods
mov
add
ljmp
jnp
add
add
mov
add
mov
sub
pop
call
push
push
sub
shl
push
push
pop
add
shl
dec
sub
sub
rol
dec
sub
sub
pop
not
pop
push
push
push
push
push
lea
push
push
push
push
call
xchg
scas
add
lods
mov
je
mov
add
add
flds
mov
pop
add
add
cmc
add
out
add
mov
add
jmp
add
in
fdivr
lcall
jne
push
push
push
push
push
push
call
add
fildl
mov
in
push
add
add
cli
addb
shrb
add
add
flds
add
mov
lret
add
jl
add
add
add
add
push
push
push
call
add
in
add
mov
add
jb
imul
pop
add
add
cltd
pop
jecxz
lret
push
mov
jae
in
sarb
hlt
test
push
push
xchg
std
add
jp
nop
add
insb
add
lret
push
add
add
loopne
out
add
add
add
iret
add
sub
pop
push
push
push
xor
push
xor
add
not
sub
shl
pop
shl
xor
xor
pop
push
push
call
add
add
negb
lea
xchg
cmpsl
add
mov
bnd
add
scas
mov
cmpsb
add
mov
mov
data16
jae
jge
fcmovnbe
in
add
add
add
aad
sub
pop
push
push
push
push
push
push
call
arpl
add
in
push
add
jl
jmp
jbe
repnz
jb
out
mov
test
add
add
loopne
cli
add
add
add
push
pop
arpl
mov
add
add
add
js
rcrl
add
push
jmp
mov
add
faddl
lcall
add
rclb
lea
push
call
add
push
int3
in
lds
imul
pop
mov
addl
add
mov
xchg
add
add
add
add
xchg
cmpsl
stc
jle
out
pop
xchg
mov
add
add
pop
push
xchg
aad
add
insb
mov
test
out
mov
add
js
in
hlt
pop
mov
push
push
lea
push
push
push
push
push
call
fadds
mov
mov
shrl
jmp
xchg
add
mov
incb
pop
add
mov
xchg
in
add
add
xchg
clc
pop
add
add
insb
add
add
mov
add
fistl
add
repnz
jecxz
fiadds
lcall
push
push
push
lea
push
push
push
call
jle
mov
js
jbe
add
out
int
int
arpl
jmp
lods
jo
loopne
cmpl
add
add
xchg
pop
imul
add
lret
jae
sub
pop
mov
push
push
lea
push
push
call
push
in
loope
add
add
xchg
pop
add
add
add
add
xchg
add
jae
add
add
pop
in
add
push
push
push
push
push
lea
push
call
mov
add
xlat
add
mov
add
lods
mov
fldl
cwtl
add
add
push
aad
out
je
addr16
add
add
add
popa
add
add
mov
xchg
ja
add
in
cli
add
popf
jo
loop
sub
pop
add
mov
xor
push
lea
push
call
jae
jns
mov
ljmp
mov
call
lods
in
add
add
ljmp
fstl
add
out
mov
stc
iret
mov
add
add
les
shlb
mov
test
imul
add
add
loop
cmpsb
sub
pop
add
push
push
push
push
push
push
call
jmp
push
orl
fimull
fisubrs
movsl
out
mov
scas
cld
add
lods
int
add
add
cmpsl
lret
test
add
fiaddl
mov
add
lods
add
call
add
pop
add
nop
add
sub
pop
push
push
push
push
call
add
jp
add
xlat
lcall
loop
imul
add
add
mov
cmpsl
add
mov
mov
repnz
add
iret
imul
ret
add
cwtl
mov
out
pop
jnp
jno
push
lea
arpl
stos
add
sahf
in
rolb
add
pop
mov
push
push
lea
push
push
push
lea
push
push
call
shll
in
ja
add
xchg
push
mov
std
add
icebp
add
push
jns
add
push
xchg
add
in
testb
mov
pop
xor
push
push
push
call
push
add
add
pop
add
incb
in
rcrb
lcall
add
xchg
call
sub
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
scas
roll
add
add
add
add
xchg
repnz
stc
in
add
cmpl
mov
in
loopne
lcall
lock
push
push
push
push
lea
push
push
lea
push
lea
push
call
lret
xchg
push
lcall
add
mov
sarl
in
int
in
mov
pop
lods
add
add
add
push
add
test
ljmp
lcall
push
push
lea
push
push
push
call
in
loope
jmp
cmc
rcll
mov
loop
jbe
add
add
int
jp
movsl
add
mov
jb
mov
lcall
dec
add
test
push
push
push
call
les
pushf
mov
mov
add
add
mov
pop
jp
pop
sar
movl
pop
rcrb
add
mov
in
clc
pop
xor
push
push
lea
push
lea
push
lea
push
push
call
add
add
test
icebp
add
jnp
int3
testb
add
stc
jns
add
int
out
test
add
orl
movb
loope
xchg
les
add
cmpsb
push
pop
shlb
lcall
les
add
push
push
call
shr
add
call
fists
push
add
add
add
add
add
add
cmpsb
jo
in
add
xchg
push
push
push
lea
push
lea
push
push
lea
push
call
shll
outsl
mov
add
fs
jle
add
add
add
pop
and
add
add
cmpsl
mov
sti
jle
add
into
pop
sub
pop
mov
push
push
push
push
push
push
push
call
mov
add
mov
mov
imul
ja
add
add
pop
loopne
add
jmp
ret
add
mov
mov
in
xchg
mov
xchg
scas
cmc
add
pop
xor
push
push
push
push
push
call
lock
add
enter
nop
pop
cli
imul
sahf
xchg
xlat
mov
imul
add
movsl
add
aad
add
cltd
lcall
lcall
les
push
push
lea
push
push
call
stc
adc
in
out
leave
mov
sti
add
add
pop
pusha
mov
push
mov
add
add
push
add
add
mov
sub
push
push
push
call
add
faddl
nop
addb
add
add
add
gs
mov
pop
popf
je
int
addr16
movsl
add
add
jmp
add
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
test
out
add
mov
cmpsb
mov
add
stos
add
bound
add
std
andb
add
add
lret
add
mov
xchg
add
movsb
pop
push
push
lea
push
push
lea
push
push
push
push
call
pop
pop
in
add
add
add
add
mov
test
popa
fiaddl
jae
pop
add
gs
jb
xchg
jmp
mov
in
jp
xchg
rolb
add
sub
pop
mov
add
push
push
call
jne
enter
jp
add
add
faddl
out
add
lret
mov
add
addr16
mov
mov
fcomi
add
outsl
add
add
mov
into
cmc
add
pushf
int3
stc
xchg
cmpsb
lcall
jle
add
add
jbe
movsb
pop
add
add
sub
pop
add
add
push
lea
push
lea
push
lea
push
push
call
jns
add
add
add
xchg
add
rol
enter
fldl
pusha
testl
stos
test
add
lcall
pushf
stos
add
add
push
outsl
add
in
incb
lcall
inc
and
push
push
lea
push
call
xchg
jb
jnp
add
movsl
add
into
push
test
pop
mov
imul
add
call
imul
stos
shll
call
nop
add
imul
mov
clc
lcall
push
and
repnz
push
push
lea
push
call
add
add
mov
fs
mov
mov
ret
add
roll
lret
testb
add
add
sarb
jp
jne
add
test
add
xchg
add
arpl
xchg
loop
add
add
in
addl
in
clc
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
push
call
out
out
call
mov
add
add
gs
cltd
add
popa
add
add
sarb
in
nop
in
cmpb
in
fcomps
or
push
push
push
lea
push
push
push
push
push
call
add
add
fadds
cli
add
in
rolb
add
fldl
add
lods
add
mov
ja
jl
xlat
popf
in
push
add
add
sub
pop
add
push
push
lea
push
push
push
push
call
add
lds
push
stos
loope
add
in
add
jecxz
addb
push
add
jnp
fiaddl
mov
add
push
add
mov
add
add
jmp
add
loopne
add
lret
add
mull
lret
jmp
jae
cltd
add
lods
sub
pop
add
add
push
push
push
lea
push
push
push
call
xchg
add
add
add
fadds
cmpb
jbe
add
xchg
xchg
jo
aad
pop
aam
add
mov
aad
jmp
out
mov
mov
movb
add
add
cltd
add
add
in
popa
add
mov
cmpsl
cli
ljmp
roll
in
call
stc
inc
mov
push
shl
inc
push
or
not
add
lea
shr
sub
add
add
pop
not
dec
pop
push
push
lea
push
push
push
lea
push
call
xchg
lcall
icebp
xchg
jno
lods
add
mov
jle
shll
ja
add
add
mov
fsubp
mov
add
add
in
jle
add
aad
jp
jne
mov
mov
jae
mov
push
mov
enter
movsb
lods
add
std
test
add
jne
push
lea
pop
call
push
push
push
inc
push
or
not
add
sub
sub
not
lea
pop
ror
shr
not
pop
push
push
push
push
lea
push
push
call
push
push
cwtl
roll
addr16
lock
lcall
add
add
loopne
filds
lds
filds
add
add
outsl
add
leave
lods
sbbb
add
push
add
add
push
aad
popf
add
add
add
popl
add
in
call
push
push
push
lea
push
push
push
lea
push
call
mov
add
into
movsb
xchg
mov
jnp
mov
add
jge
scas
add
add
stos
pop
pop
mov
push
add
mov
gs
add
ljmp
aam
add
aam
stos
add
lahf
add
andl
sub
pop
call
push
push
call
filds
movsl
int3
add
out
mov
jmp
fmul
add
lret
add
imul
add
scas
add
add
xlat
repnz
add
add
mov
add
sub
pop
mov
push
rol
add
add
pop
push
push
push
call
add
sti
add
icebp
imul
mov
xchg
add
push
repnz
add
add
cwtl
cltd
testb
push
mov
aam
xchg
gs
in
outsl
add
addr16
add
iret
add
mov
std
add
add
add
movsl
sub
pop
push
push
pop
mov
push
pop
add
push
push
push
lea
push
push
push
push
push
push
call
add
mov
lret
add
mov
add
loop
add
mov
mov
int
rcr
add
shr
ja
push
stc
mov
mov
xlat
add
jne
insb
movsl
mov
test
pop
add
out
test
cld
stos
add
aam
iret
add
fdivr
lcall
ret
add
add
add
push
push
push
push
push
call
push
xchg
addb
popf
add
clc
add
add
jb
add
mov
add
fs
std
fwait
add
div
pusha
fimuls
add
ror
movsb
jle
add
js
icebp
add
sub
pop
mov
push
push
push
push
push
push
call
add
out
cmp
add
pop
mov
mov
add
mov
cmc
mov
mov
jb
popa
add
cmp
testb
add
add
jl
xchg
add
add
add
pushf
sti
push
sub
pop
xor
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
rolb
add
push
add
push
mov
int3
in
add
add
mov
scas
xchg
mov
fimuls
movb
add
push
mov
add
add
data16
faddl
add
cmpsl
je
outsl
into
add
les
lea
push
push
push
call
add
add
add
push
into
add
out
test
add
lcall
push
add
add
xchg
mul
add
test
add
icebp
lods
xchg
sub
pop
add
push
push
push
push
push
lea
push
lea
push
call
lods
into
add
add
iret
add
jle
icebp
jo
push
add
push
add
pop
clc
mov
add
mov
add
sub
pop
mov
push
push
push
push
push
push
call
test
push
lret
add
add
jne
fsts
movsb
xlat
mov
decb
add
mov
add
pop
movsl
add
add
add
jle
leave
mov
pop
xor
push
push
push
push
push
call
mov
sbbl
mov
add
push
stos
push
xchg
add
stos
add
add
jmp
add
mov
in
add
cmpsb
clc
fadds
les
add
push
not
dec
pop
add
push
inc
pop
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
aad
push
rcrl
jmp
aam
add
push
jbe
add
sar
add
in
xchg
add
xchg
repnz
imul
ret
mov
je
add
stos
add
loope
loop
out
add
jne
add
add
sub
pop
xor
push
push
push
push
push
push
push
call
test
icebp
add
test
mov
data16
add
lret
pop
mov
jbe
mov
mov
outsl
mov
add
mov
add
pop
push
push
push
add
sub
pop
add
push
not
shl
inc
not
pop
rep
mov
xor
push
lea
push
push
lea
push
push
lea
push
call
add
not
lods
fwait
add
add
add
jmp
xchg
sti
stos
mov
mov
add
movsb
lea
test
add
leave
je
mov
xor
push
xor
lea
inc
pop
mov
push
push
push
call
mov
push
jnp
bnd
pop
xchg
sbbl
fwait
mov
add
testb
mov
addb
mov
pop
mov
add
jno
add
mov
add
adc
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
push
add
xor
add
fwait
rolb
call
add
mov
into
add
mov
mov
in
pop
mov
lret
lock
movsb
jnp
imul
add
add
xchg
jae
mov
mov
insb
mov
sti
add
add
lcall
les
add
push
inc
shl
lea
pop
add
push
push
push
push
push
push
push
call
add
mov
mov
add
movsb
pop
mov
add
call
add
int
lods
pop
int3
std
xchg
add
loope
add
mov
mov
scas
movsb
jno
add
add
add
cmc
add
add
jb
mov
add
push
push
push
push
call
xor
in
add
mov
pop
in
aam
call
push
out
push
add
add
add
pop
push
fs
sti
jmp
mov
in
lock
lcall
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
mov
sub
jge
jmp
add
add
cli
int
add
add
cli
fldt
add
add
aad
mov
repnz
pop
rolb
lahf
mov
add
add
add
movsl
test
mov
push
xchg
data16
popa
fildl
add
add
arpl
gs
add
add
inc
or
push
push
lea
push
push
call
aam
xchg
add
add
add
cmpb
xchg
std
add
add
add
iret
mov
xchg
add
out
in
call
arpl
sarl
add
add
lds
mov
out
add
faddl
push
add
jns
je
add
mov
fucomi
add
add
push
lea
push
push
lea
push
push
push
push
push
call
add
jle
add
out
xchg
add
mov
arpl
jecxz
add
jge
stos
ja
push
fs
add
mov
add
call
xorl
add
mov
add
add
imul
fstps
icebp
mov
in
loopne
pop
push
sub
add
pop
rep
push
push
push
call
movsb
addl
add
jbe
pop
add
imul
jecxz
lret
add
add
iret
add
cmpsb
lds
xchg
add
push
add
enter
jge
add
faddl
mov
lcall
dec
sub
push
push
lea
push
push
push
call
imul
hlt
add
push
outsl
add
sbb
jnp
mov
mov
in
add
les
xlat
sti
add
add
mov
fmuls
add
xchg
add
add
std
add
mov
jo
nop
mov
pop
addl
lock
lcall
leave
je
mov
push
push
push
call
negb
add
sahf
sarb
mov
add
je
mov
xchg
fiadds
pop
add
add
into
movsb
add
xchg
roll
pop
mov
lcall
sub
xor
sub
inc
shr
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
fisubl
add
ja
add
mov
lret
add
push
add
jb
popa
shr
in
mov
mov
out
add
add
add
fisubs
sahf
add
add
add
push
cmpb
add
jl
fcoml
add
pop
xchg
scas
push
leave
add
rolb
lcall
movsb
push
push
lea
push
push
push
push
push
push
push
lea
push
call
imul
add
jno
add
push
add
fadds
jbe
mov
fsts
push
rcl
mov
add
add
add
mov
lret
mov
pusha
pop
mov
sub
pop
pop
push
push
add
add
push
or
not
add
not
sub
add
sub
xor
add
pop
rol
not
lea
pop
push
lea
push
push
push
push
push
push
call
test
pop
js
mov
add
bound
add
mov
add
loopne
fnop
add
cwtl
xchg
add
mov
add
mov
lahf
cmpsb
stos
add
sahf
pop
pop
movsb
xor
mov
add
imul
add
add
mov
xchg
add
int3
cmpb
in
in
lcall
push
push
call
pop
je
cwtl
mov
xchg
add
add
mov
iret
add
int3
push
sbbb
shll
lret
leave
add
hlt
sbbb
pop
jns
pop
xchg
add
mov
pop
mov
add
pop
add
push
out
movsl
add
mov
add
add
scas
mov
add
add
mov
movl
in
clc
lcall
jne
mov
push
add
pop
mov
push
xor
rol
sub
pop
jmp
push
add
sub
shr
pop
push
mov
push
lea
ror
pop
add
push
shl
add
shl
shr
pop
push
push
push
lea
add
ror
pop
push
push
push
push
lea
push
lea
push
call
add
jbe
push
gs
pop
add
push
add
fnstenv
iret
add
add
rcrl
add
imul
xchg
add
xchg
pusha
add
std
sub
pop
mov
push
lea
inc
dec
pop
pop
push
lea
push
push
lea
push
push
call
lods
add
faddl
add
aad
hlt
mov
mov
add
add
rol
out
mov
push
repnz
shll
add
jl
add
add
lcall
ljmp
add
mov
lcall
push
push
lea
push
push
push
push
push
call
lea
jge
add
in
addr16
jecxz
mov
lret
jne
add
push
je
fistpll
cmc
jae
ror
sub
pop
pop
push
push
lea
push
call
mov
test
add
mulb
lock
stc
add
add
add
cmp
lcall
mov
jns
jns
add
flds
mov
ljmp
mov
sub
pop
pop
push
lea
push
push
push
call
add
jo
xchg
pop
pusha
add
out
cmpsb
enter
add
add
add
in
jmp
add
pop
jecxz
in
add
mov
add
movsl
add
add
iret
loop
stc
add
in
lock
lcall
push
add
pop
ret
push
add
not
pop
push
push
ror
pop
mov
add
push
push
push
call
test
hlt
into
add
scas
pop
pop
aam
aam
call
pop
adc
jp
jmp
enter
frstpm(287
jl
jl
fdivp
add
sti
out
test
andl
mov
add
lcall
push
push
ror
inc
dec
pop
push
push
push
push
call
push
add
jo
faddl
rcll
xlat
cltd
add
leave
hlt
add
scas
add
insb
faddl
in
add
mov
popa
cli
add
add
mov
add
imul
mov
add
add
add
add
addl
pop
sub
pop
movl
addl
push
ror
pop
test
je
push
push
push
call
icebp
hlt
mov
sti
add
pop
jmp
clc
xchg
jno
add
pop
add
leave
pop
addb
into
add
in
add
pop
cmpsb
add
add
xchg
jne
add
test
loop
incb
add
cmpsb
fadds
jns
mov
in
hlt
lcall
inc
or
jmp
pop
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
jo
add
jp
add
add
add
add
fldl
fnstenv
add
fsts
add
add
add
out
add
lcall
pop
push
add
add
pop
leave
push
push
lea
push
push
push
push
call
add
add
cli
jns
mov
iret
add
add
cltd
jge
add
jp
add
add
shl
out
add
repnz
add
pop
add
jp
add
add
je
xchg
imul
lcall
add
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
addl
addb
mov
add
jo
cmpsl
mov
xchg
add
add
add
add
xlat
add
pop
add
cmpsl
add
add
aam
mov
test
testl
jnp
movsb
mov
mov
push
add
mov
push
push
push
push
push
lea
push
push
call
add
lret
add
hlt
mov
add
push
repnz
add
in
scas
mov
movsb
faddl
mov
push
add
jecxz
cmpsb
mov
add
idivl
fincstp
mov
push
add
add
mov
mov
pop
add
push
push
lea
push
call
add
add
rcrb
std
xlat
loopne
add
les
pop
xchg
loop
mov
add
add
add
add
add
cld
mov
scas
jno
add
int3
add
xchg
push
movsl
pop
mov
push
arpl
mov
add
pop
leave
int3
add
add
into
fiadds
lcall
push
push
push
push
push
push
push
call
add
mov
add
add
pop
add
fnstsw
add
test
mov
insb
stos
xlat
add
add
call
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
lods
add
add
loop
jle
imul
shr
stos
add
clc
add
add
add
jne
lahf
xchg
add
jl
sub
pop
testl
push
inc
sub
pop
addl
push
push
xor
pop
call
mov
push
inc
pop
pushl
push
shl
sub
not
lea
pop
push
push
not
dec
not
pop
push
push
lea
pop
call
cmpl
jne
push
lea
sub
pop
pop
push
shr
rol
pop
pop
push
push
push
call
add
adc
test
push
repnz
jns
mov
mov
jae
lds
add
mov
xchg
jnp
mov
filds
iret
loopne
add
add
lcall
push
sub
xor
pop
pop
push
add
xor
pop
leave
push
push
lea
push
push
call
insb
add
outsl
call
mov
sahf
add
add
jle
rcll
add
ret
loop
add
add
gs
in
mov
add
add
add
push
add
lcall
add
push
add
not
not
pop
push
push
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
jecxz
add
bound
out
add
add
cli
fld1
cltd
jp
add
mulb
add
mov
jl
enter
add
mov
add
movsl
rcrb
fcomps
cld
push
push
push
push
push
push
push
push
call
add
popa
add
sar
add
cld
add
fistps
fiaddl
add
shlb
push
jne
pusha
icebp
mov
mov
lcall
out
xchg
add
jecxz
loop
add
cwtl
add
jl
test
rolb
add
add
out
pop
push
cli
sub
pop
push
push
shl
pop
push
push
push
push
push
push
push
push
call
add
fwait
loop
add
mov
jmp
jbe
xchg
add
sahf
les
cmpsl
test
pop
add
add
cmpsl
add
sti
jl
add
add
xlat
mov
xchg
add
lods
lds
call
or
mov
push
push
push
call
add
add
int3
addr16
add
xchg
movsl
add
mov
add
into
jge
add
mov
push
iret
testl
cwtl
jnp
mov
push
addb
add
js
std
add
in
fldl
imul
stos
jbe
in
cmpsb
add
push
cmc
test
add
mov
lods
sub
pop
movl
push
xor
rol
sub
add
pop
push
push
add
xor
pop
call
push
push
push
lea
push
push
call
add
add
loope
nop
pop
cmc
pop
mov
push
add
add
jnp
in
add
fstps
add
shrl
add
lcall
or
mov
push
push
push
call
add
add
jge
filds
int3
add
stos
mov
xchg
mov
repnz
mov
mov
add
add
cli
aad
add
jns
add
add
ror
fdivs
fildl
scas
add
mov
add
lcall
insl
cld
add
cmpl
jne
push
push
call
add
pop
lods
stc
add
cld
test
idivl
mov
fdivp
out
pop
add
jecxz
mov
add
std
outsl
cwtl
add
roll
add
push
push
add
fbstp
cwtl
popf
add
xchg
scas
add
popa
lret
loope
scas
add
xchg
clc
jp
add
in
clc
pop
pop
push
shr
dec
add
pop
pop
pop
push
dec
add
add
pop
pop
push
push
push
push
lea
push
call
push
mov
mov
add
in
lcall
ret
into
notl
int
cmpsb
mov
arpl
add
gs
pop
leave
push
lea
ror
add
pop
ret
push
sub
shr
pop
push
mov
push
push
push
push
push
push
push
push
push
call
sti
mov
mov
bound
add
fadds
lcall
enter
rcl
mov
jmp
jbe
lret
std
lret
push
je
add
add
mov
add
hlt
pop
mov
mov
test
mov
push
add
add
cld
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
fsubp
xchg
xchg
iret
add
add
mov
jecxz
add
add
add
push
pop
cmc
xlat
push
je
aad
jne
out
mov
jle
aam
rolw
jl
into
mov
pop
jecxz
bound
add
add
add
mov
add
pop
pop
push
int
lahf
add
sub
pop
push
push
push
push
call
rcl
add
mov
add
fldt
jnp
add
jl
mov
mov
add
pop
add
add
add
aad
lret
mov
jnp
imul
stos
jl
pop
mov
jge
rolb
add
add
imul
in
in
add
lods
add
mov
add
bound
push
push
lea
push
push
push
push
lea
push
push
call
movsl
add
mov
lahf
fiadds
add
add
ja
out
pop
add
add
add
pop
mov
mov
jl
xlat
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
imulb
add
loopne
add
add
test
add
add
insb
test
stos
add
pop
mov
lea
push
sub
rol
pop
sub
push
push
call
js
add
add
mov
jge
mov
add
test
movl
add
filds
into
popf
add
fsubrp
jle
add
imul
in
clc
lcall
add
call
ret
mov
push
push
push
push
push
push
push
push
call
ret
jb
lahf
jle
out
add
pop
loop
add
je
add
jge
add
add
aad
stos
pop
add
mov
add
jge
shlb
add
add
leave
mov
sub
pop
add
mov
push
lea
push
push
lea
push
push
push
push
call
out
imul
mov
add
out
add
add
xchg
pop
add
xchg
add
add
add
cwtl
add
fwait
cld
add
mov
pop
movl
leave
add
add
add
add
pop
sahf
add
andb
ret
jle
jmp
pop
add
add
push
dec
ror
shr
pop
mov
push
push
push
call
add
pop
mov
int
add
add
mov
test
add
cld
lods
add
pop
add
jecxz
jne
add
ret
add
test
add
addb
add
add
add
test
add
xchg
call
iret
scas
testl
mov
mov
cmp
jne
push
push
lea
push
push
push
lea
push
call
popa
addl
jmp
mov
cwtl
add
arpl
lods
mov
add
pop
jecxz
add
mov
add
aad
jno
mov
lcall
cwtl
fadds
add
jne
push
rol
ror
inc
pop
mov
push
push
push
call
movsb
xchg
pop
mov
push
add
in
add
mov
notl
mov
add
aam
add
add
repnz
sahf
xchg
faddl
movl
push
inc
pop
jmp
push
lea
push
push
push
push
push
push
call
out
data16
incb
add
xchg
cld
mov
add
lea
push
ret
aad
add
add
arpl
add
sti
fadds
sub
pop
mov
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
movsl
add
add
add
jae
bound
xchg
add
in
mov
mov
add
mov
lcall
mov
add
shrb
int
push
scas
add
add
add
add
jmp
in
fcomps
ljmp
fadds
add
push
push
lea
push
lea
push
push
call
jbe
mov
pop
loop
mov
je
add
frstor
add
mulb
add
aad
clc
add
aam
pusha
add
pop
sbbb
mov
add
sub
pop
mov
push
lea
push
push
call
add
int
add
into
add
add
add
stc
iret
add
pushf
add
add
add
add
out
add
fwait
pop
jo
imul
ret
cmpsl
je
fwait
enter
mov
xchg
jnp
imul
add
xchg
add
test
loope
mov
sub
pop
movl
jmp
push
lea
pop
mov
mov
push
push
push
lea
push
push
call
add
testb
test
aam
add
mov
nop
cmpsb
lds
je
add
jecxz
mov
lea
arpl
push
mov
add
mov
jp
add
add
add
sahf
int3
add
xchg
loope
add
add
testl
add
test
add
mov
push
dec
pop
movl
push
lea
pop
jmp
push
push
push
push
push
lea
push
call
mov
xchg
rcll
outsl
loope
mov
add
data16
jmp
add
out
mov
add
add
in
call
push
shl
pop
cmpw
jne
push
xor
add
add
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
call
push
push
filds
les
shll
mov
add
xlat
out
lods
lcall
in
mov
je
lret
mov
mov
fdivl
push
push
ret
cld
xchg
add
sub
pop
movl
jmp
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
lret
jb
icebp
mov
out
out
mov
ljmp
jle
add
add
jmp
mov
fcoml
add
in
mov
orl
mov
add
add
scas
mov
add
filds
pushl
push
shr
pop
pop
mov
push
rol
pop
mov
push
push
push
push
push
push
push
call
ljmp
add
add
xchg
push
jb
add
pusha
add
sahf
andl
add
mov
sub
pop
mov
push
push
push
and
add
dec
shr
sub
xor
sub
lea
pop
lea
dec
not
pop
push
lea
push
push
push
push
push
call
add
xchg
nop
movb
add
test
mov
arpl
mov
fldt
pop
lods
xchg
add
mov
jno
add
movsl
testl
test
movsl
add
add
loope
push
pop
mov
testb
sub
pop
push
call
push
lea
push
push
call
mov
add
movl
imul
cld
add
add
jmp
mov
xlat
xchg
add
addl
in
hlt
pop
cmpl
je
push
push
add
push
and
add
sub
sub
sub
shr
add
pop
inc
dec
lea
dec
pop
push
xor
dec
inc
pop
push
call
push
inc
shr
rol
pop
cmpl
je
push
push
inc
shl
push
or
inc
add
ror
sub
ror
sub
add
sub
xor
xor
pop
sub
inc
pop
push
push
push
push
push
push
call
fsubrl
add
mov
add
mov
mov
add
repnz
cli
iret
std
xchg
add
mov
fcmovnb
hlt
mov
xchg
fs
out
addl
lea
insb
lcall
imul
add
imul
lods
scas
sub
pop
push
push
push
lea
push
push
push
call
jbe
je
push
jne
les
mov
mov
insb
push
add
xlat
add
add
in
std
addl
bound
add
lcall
enter
push
push
lea
push
push
push
push
call
mov
add
add
add
cli
add
add
testl
xchg
in
loopne
add
push
stos
mov
add
mov
fdivrl
in
mov
jle
push
add
jo
test
call
cmpl
je
push
push
dec
sub
push
or
inc
add
sub
sub
dec
pop
sub
pop
push
dec
pop
push
push
lea
push
push
push
push
call
stc
add
mov
add
fadds
push
fwait
pusha
xchg
add
add
add
xchg
add
out
sub
pop
call
push
push
call
fidivrs
add
nop
add
jmp
add
loope
je
iret
push
jo
add
push
push
lcall
cmp
add
int3
je
push
push
add
ror
shr
push
and
add
sub
add
add
pop
not
pop
push
xor
pop
push
push
shr
rol
pop
call
cmpl
je
push
push
shr
push
and
add
lea
sub
lea
sub
add
pop
shl
xor
pop
push
push
push
push
push
push
call
add
mov
add
fcmovnbe
add
pop
fiaddl
mov
add
mov
in
rcrl
lds
xchg
add
jo
add
pushf
shll
mov
fcompl
in
call
cmp
add
push
call
mov
addl
cmpb
ficoml
mov
lods
add
out
mov
pop
pop
mov
push
into
out
nop
loop
out
sub
pop
cmpl
je
push
push
add
push
or
not
add
add
sub
not
sub
add
pop
not
pop
push
add
pop
push
call
push
push
push
push
call
lea
clc
jl
push
repnz
shrl
out
push
add
out
add
add
pop
add
add
fildl
jl
add
pop
lock
cmpsl
imul
add
add
add
pushf
sub
pop
cmpl
je
push
push
not
sub
push
sub
add
ror
lea
not
sub
shl
pop
ror
add
sub
pop
push
push
push
lea
push
push
lea
push
call
out
mov
enter
add
jl
jmp
fwait
jp
add
add
add
in
mov
in
call
push
call
push
add
pop
cmpl
je
push
push
xor
xor
dec
lea
push
xor
add
shl
shl
rol
sub
shr
pop
rol
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
pop
lods
xchg
mov
add
add
add
add
jl
ja
add
push
push
xchg
add
fcomps
push
add
xor
pop
call
push
inc
sub
pop
cmpl
je
push
push
add
push
and
add
add
sub
add
pop
add
lea
pop
push
shr
shr
add
pop
push
push
shl
pop
call
push
not
add
shr
dec
pop
cmpl
je
push
push
rol
add
inc
lea
push
or
inc
add
shr
shr
sub
sub
pop
sub
xor
add
xor
pop
push
push
push
push
push
push
push
push
call
test
add
cltd
add
cli
add
add
jp
mov
add
repnz
add
scas
insb
add
ja
fsubl
incb
xchg
out
xlat
jnp
add
lret
pop
xchg
rolb
lea
add
lea
pop
call
push
push
push
lea
push
lea
push
push
push
push
push
push
call
in
fcmovb
stc
add
mov
mov
add
push
fwait
jmp
mov
push
imul
add
pop
add
lock
add
aad
add
add
lcall
js
xor
ret
test
add
add
ljmp
ror
push
xor
add
ror
sub
sub
sub
add
add
pop
inc
pop
push
push
push
push
push
push
push
push
push
call
xchg
lea
add
mov
mov
add
scas
jne
mov
add
fiadds
jnp
orl
add
add
xchg
je
jno
fucomi
imul
add
test
fwait
xchg
pushf
mov
mov
jp
add
add
xchg
scas
jecxz
insb
shr
sub
pop
push
call
push
pop
cmpl
je
push
push
sub
add
shl
not
push
and
add
sub
add
sub
sub
pop
pop
push
shl
inc
pop
push
push
dec
sub
pop
call
push
xor
rol
inc
ror
pop
cmpl
jne
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
mov
add
add
add
add
testl
add
pop
mov
add
jb
add
jnp
shl
push
cltd
push
sub
pop
movl
jmp
push
push
push
push
push
push
push
push
lea
push
call
add
lods
add
add
lock
add
movl
mov
lods
imul
jp
hlt
add
pop
add
add
mov
test
idivl
fiadds
push
test
aad
jle
add
add
add
add
xor
push
lea
pop
pop
pop
push
push
call
roll
mov
add
lods
add
hlt
fisubrl
pop
pusha
in
add
mov
pop
mov
pop
mov
add
jbe
popa
jo
push
mov
add
mov
fdivr
xchg
into
popa
fists
pop
xchg
add
add
add
mov
lcall
push
ror
pop
pop
push
add
pop
leave
push
sub
sub
pop
ret
push
dec
dec
pop
push
push
push
call
mov
add
add
add
add
push
jnp
mov
iret
add
mov
insb
add
in
mov
out
and
xchg
jb
add
add
roll
add
addb
jo
add
enter
add
sti
mov
add
sub
pop
mov
add
push
shr
pop
cmpl
jne
push
push
not
lea
push
push
pop
add
add
not
add
sub
sub
sub
xor
pop
shr
pop
push
push
call
movsb
add
add
arpl
add
add
push
ret
add
mov
lret
add
sub
pop
pushl
push
push
push
push
call
add
add
adc
add
add
ljmp
imul
add
add
xchg
jge
stos
jno
loope
mov
add
add
int3
add
popl
add
add
fs
ret
add
mov
arpl
add
out
add
les
popf
les
arpl
add
push
rol
pop
push
call
push
sub
xor
add
shr
pop
jmp
cmpl
je
push
not
not
add
add
pop
cmpl
jne
push
add
not
sub
add
pop
leave
push
xor
inc
pop
add
push
push
lea
push
push
call
mov
add
jp
add
lret
add
mov
stc
mov
sbbb
popa
outsl
pop
stos
add
arpl
lock
lcall
pop
push
push
push
push
push
push
push
push
push
push
call
mov
loope
add
test
jae
add
add
add
add
jns
in
add
leave
push
add
rcrb
sub
pop
pop
push
sub
pop
pop
leave
push
push
push
push
push
push
push
push
lea
push
push
call
push
lea
xchg
push
scas
mov
stos
int3
mov
jnp
flds
fldl
imul
int
add
add
faddp
add
lcall
les
shr
not
pop
ret
push
push
push
push
lea
push
push
call
add
push
add
mov
testb
test
outsl
lcall
xchg
fildl
add
stos
adcl
jmp
push
push
push
lea
push
push
lea
push
call
add
sub
cli
divb
add
pop
add
add
in
mov
add
fiadds
rcll
add
add
incb
mov
imul
xchg
add
mov
call
add
test
add
add
addr16
xlat
push
push
and
add
not
shr
sub
shr
pop
dec
pop
push
inc
lea
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
add
add
add
lods
push
cwtl
addb
outsl
add
mov
add
fwait
jns
add
add
cmpsl
pop
test
add
add
movb
in
fdivr
lcall
movsl
das
add
push
push
push
push
push
lea
push
push
call
add
add
push
adc
sbb
lahf
push
flds
test
mov
add
jmp
repnz
sarl
test
mov
xchg
add
int
movsl
add
out
jmp
out
push
pop
rorl
add
mov
lahf
shl
repnz
sub
pop
push
push
rol
inc
rol
pop
call
jmp
push
pop
cmpl
jne
mov
push
push
push
call
fcomi
out
mov
add
add
cmc
fstpt
scas
test
add
add
add
add
fdivrp
push
add
bound
add
popf
jnp
pop
add
add
add
sub
pop
mov
push
push
lea
push
call
mov
pop
clc
add
icebp
loope
pop
add
test
add
mov
jp
les
add
out
mov
mov
mov
pop
add
jl
push
ljmp
jmp
add
mov
ljmp
add
lcall
cli
sbb
fiaddl
ffreep
jmp
dec
pop
push
push
push
dec
shl
push
or
inc
add
inc
ror
not
lea
sub
sub
add
pop
sub
xor
pop
push
lea
push
call
mov
fstpl
add
in
add
push
loop
push
xchg
add
sarl
add
popa
add
testl
hlt
int
pop
scas
add
add
add
sti
pusha
jmp
add
add
jne
call
push
lea
push
push
push
call
add
mov
mov
ret
addl
scas
add
add
roll
lds
loop
add
fildl
pop
push
std
add
mov
loop
in
lock
call
push
push
not
push
push
pop
add
shl
inc
ror
sub
shl
dec
ror
not
pop
inc
ror
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
shrl
add
push
jb
add
out
andl
lret
test
sub
pop
pushl
push
push
push
push
push
push
call
std
xchg
pop
add
xlat
cltd
xchg
lret
push
mov
add
mov
stos
add
pop
popf
pop
js
add
out
fwait
sub
pop
call
push
lea
push
push
push
push
push
call
add
add
scas
add
mov
add
cld
fadds
mov
add
rcl
rcll
in
mov
push
mov
sub
pop
call
push
push
rol
push
sub
add
add
sub
sub
pop
add
xor
add
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
jb
fiaddl
cltd
add
rolb
add
ljmp
add
mov
add
mov
test
stos
add
mov
add
add
loope
mov
add
pop
imul
add
push
mov
mov
add
add
mov
xchg
jecxz
add
add
mov
add
add
lcall
jne
push
push
push
push
call
scas
add
mov
sarb
addl
add
mov
out
mov
add
add
loop
cld
add
cld
std
mov
xchg
add
add
mov
mov
add
jne
push
add
movl
in
lock
lcall
push
sub
add
shrb
insb
pop
dec
push
sub
sub
add
xor
push
and
add
rol
sub
sub
rol
sub
pop
xor
xor
add
pop
push
rol
sub
shl
pop
pushl
push
shr
pop
call
push
xor
pop
call
push
push
inc
rol
add
sub
push
push
pop
add
dec
add
ror
sub
ror
ror
pop
rol
pop
push
inc
dec
shr
pop
pushl
push
sub
not
pop
call
push
inc
xor
pop
call
push
push
dec
ror
dec
push
push
pop
add
add
add
rol
sub
rol
pop
shl
add
add
pop
push
push
push
push
lea
push
push
push
lea
push
call
in
add
add
mov
add
add
add
rolb
sti
mov
lahf
lcall
outsl
pop
jno
cwtl
cmc
add
sub
pop
pushl
call
push
dec
not
not
not
pop
call
push
push
dec
push
sub
add
dec
xor
sub
rol
pop
sub
lea
rol
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
cwtl
add
jno
fwait
insb
pushf
je
lods
jge
add
data16
hlt
push
add
mov
lcall
add
pop
pop
add
out
add
adcb
xchg
xchg
add
loop
add
push
add
mov
pushl
call
push
lea
push
push
lea
push
lea
push
push
push
push
call
repnz
fwait
jnp
roll
add
test
add
jmp
jl
add
mov
add
add
add
rorl
add
lods
push
add
xchg
add
bound
add
jge
jo
add
jb
aam
jb
fldl
sub
pop
call
push
push
add
lea
lea
dec
push
or
inc
add
sub
dec
sub
ror
sub
pop
not
pop
push
push
push
lea
push
call
xchg
add
scas
add
mov
jae
push
xchg
in
add
mov
add
lcall
jne
call
push
push
call
add
jne
add
add
movsb
xchg
add
add
mov
fsubp
add
andl
int
int
xchg
jae
add
add
shrb
add
shl
shl
add
push
xor
add
xor
sub
not
pop
shr
dec
pop
push
add
shr
dec
pop
pushl
push
lea
push
push
push
call
jmp
add
movsl
pop
add
add
stos
icebp
add
mov
sbb
mov
pop
add
mov
hlt
mov
add
add
add
pop
mov
add
movsb
add
mov
add
pop
movsb
fs
flds
iret
add
pop
call
push
add
xor
xor
shl
pop
call
push
push
dec
rol
lea
push
or
not
add
xor
sub
not
not
add
sub
pop
xor
pop
push
lea
push
push
lea
push
push
push
call
mov
stc
addb
add
add
mov
je
cmc
fnstcw
add
jl
scas
mov
popa
pop
add
mov
out
add
add
add
in
call
call
push
push
push
push
push
call
fcmovnbe
jnp
add
add
add
add
add
cmc
mov
jnp
mov
add
add
lock
add
add
jl
mov
pop
addl
lcall
pushf
and
call
and
mov
lea
push
push
push
lea
push
push
lea
push
call
add
pop
add
add
call
outsl
mov
add
pop
push
sub
pop
add
leave
stos
push
ret
fsubs
lea
mov
test
add
test
hlt
jmp
out
faddl
pop
arpl
add
js
add
mov
icebp
add
jp
test
in
loopne
push
push
pop
call
push
push
dec
push
or
inc
add
sub
sub
add
ror
pop
shl
pop
push
push
lea
push
push
push
push
push
call
adc
mov
jo
sahf
add
pop
add
lret
pop
add
xchg
add
bound
cmpsl
add
fcoms
stos
cwtl
add
loope
add
mov
testl
fwait
stos
je
ret
jecxz
data16
xchg
scas
sub
pop
pushl
push
push
lea
push
push
push
call
add
add
mov
test
add
jns
mov
mov
add
mov
add
lret
leave
int3
add
add
mov
add
jbe
scas
rcr
sti
xorb
pop
lret
add
add
jo
add
cltd
add
sub
pop
call
push
shr
pop
call
push
push
dec
add
inc
push
xor
add
add
sub
xor
sub
shl
sub
ror
pop
sub
pop
push
lea
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
call
add
in
mov
pusha
xchg
xchg
push
popl
in
icebp
jle
add
jge
add
lods
cld
add
add
flds
lods
add
add
fadds
pop
hlt
aam
add
add
cltd
hlt
lahf
lahf
add
add
add
aam
adcb
add
lds
in
fcomps
shrb
push
stos
push
dec
push
xor
add
not
sub
xor
sub
rol
pop
inc
ror
shr
pop
push
add
shl
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
fistl
pop
jb
mov
add
lcall
neg
push
fwait
mov
jb
add
out
stos
bound
stc
sub
pop
call
push
push
push
push
push
call
xchg
xchg
mov
jnp
pop
add
add
push
mov
add
movsb
addl
add
add
add
movsb
ret
add
arpl
shl
add
sub
pop
lea
push
push
sub
push
and
add
ror
sub
not
sub
shl
pop
rol
add
sub
pop
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
sahf
add
push
add
push
push
add
jne
add
jnp
lret
cmc
std
leave
in
imulb
lods
add
arpl
cwtl
add
add
add
pop
add
push
testl
fcomps
jne
push
push
push
push
call
aam
jo
aad
add
movsb
add
add
pop
push
clc
mov
idiv
add
stc
in
rolb
add
mov
xchg
mov
add
in
lock
lcall
sbb
add
push
push
pop
call
push
push
shl
push
and
add
add
add
inc
sub
shl
dec
add
pop
add
not
inc
pop
push
push
push
push
push
push
push
push
call
loop
int
xchg
je
frstor
lahf
mov
jb
add
mov
xchg
test
add
add
mov
add
push
add
sub
pop
pushl
push
push
push
push
push
push
push
call
in
add
popa
add
add
xchg
in
icebp
add
jns
lret
addr16
add
add
movsl
xchg
add
out
add
pop
pop
add
add
add
ret
jns
call
add
mov
testb
add
in
in
call
push
rol
sub
pop
call
push
pop
mov
push
push
rol
ror
push
or
not
add
add
ror
sub
add
inc
shl
pop
xor
pop
push
pop
pushl
call
push
lea
add
add
pop
push
push
sub
lea
pop
pushl
call
push
push
sub
inc
push
sub
add
add
dec
add
xor
sub
dec
add
pop
sub
pop
push
push
push
push
lea
push
push
call
mov
add
jmp
fistps
add
add
mov
loop
pop
xchg
iret
push
out
loope
add
fadds
jo
add
xlat
add
call
push
push
push
call
add
fs
in
mov
pop
loop
add
jne
add
pop
add
pop
add
jb
add
add
mul
iret
lock
add
hlt
lcall
push
and
add
pop
add
push
shl
push
or
not
add
shr
sub
rol
sub
shl
sub
pop
add
sub
inc
pop
push
push
add
rol
push
or
not
add
shl
rol
xor
sub
sub
ror
shr
pop
dec
add
pop
push
push
push
lea
push
push
call
mov
testb
add
popf
add
mov
add
cltd
xlat
stc
popa
add
ljmp
add
add
fs
xchg
mov
add
mov
push
rolb
push
cmpsl
out
andl
hlt
add
mov
add
add
add
ret
movsb
push
imul
sub
pop
call
push
push
add
add
push
sub
add
rol
sub
sub
pop
sub
rol
pop
push
xor
add
pop
pushl
push
push
push
lea
push
push
push
call
add
add
add
add
add
test
rcrl
add
add
in
mov
lahf
jns
mov
add
filds
add
add
in
call
add
push
not
ror
sub
pop
mov
push
push
lea
push
push
call
in
add
add
pop
in
add
bound
add
je
repnz
xchg
add
lcall
add
jno
rcr
mov
stos
add
mov
jns
xchg
jmp
enter
mov
sub
pop
lea
lea
push
push
lea
push
push
push
push
lea
push
push
call
push
out
add
hlt
scas
int3
repnz
pushf
mov
jno
lcall
mov
add
add
add
lods
add
mov
add
add
loop
repnz
add
lahf
lret
aad
add
test
out
add
lea
jb
leave
stos
mov
stos
ljmp
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
xchg
mov
lret
add
orb
add
fsts
movl
jbe
pop
add
mov
icebp
mov
cmpsb
add
leave
pop
lods
fscale
add
jne
mov
jle
mov
add
add
sub
pop
push
push
not
rol
dec
add
pop
push
push
dec
xor
add
pop
push
push
lea
sub
shr
pop
push
push
push
sub
not
not
pop
push
push
pop
pushl
push
push
push
call
test
add
nop
jns
push
enter
add
cmpsl
lock
add
push
jecxz
add
cwtl
les
add
add
scas
add
popa
add
lcall
add
call
push
push
add
push
sub
add
sub
inc
add
sub
lea
sub
shl
pop
add
pop
push
lea
push
lea
push
call
add
movsb
add
add
jmp
add
mov
add
fistpl
lret
rcll
jl
xchg
mov
mov
lds
sub
pop
pushl
push
add
ror
pop
call
push
push
push
push
push
push
push
push
call
les
popa
mov
std
movsb
movsb
hlt
movl
std
add
jbe
add
stos
arpl
clc
add
sti
into
add
xchg
mov
add
add
add
add
in
aad
in
sub
pop
call
push
push
lea
push
push
lea
push
lea
push
call
add
add
xchg
ja
add
jp
add
add
addl
add
out
push
xchg
add
push
aad
jge
js
add
add
lret
ja
repnz
sub
pop
mov
pop
push
lea
push
push
push
call
add
mov
add
add
fcomp
mov
pop
add
add
rolb
add
lret
in
add
add
add
add
mov
add
add
add
xchg
push
nop
jmp
add
add
mov
add
sub
pop
dec
jne
push
add
pop
call
push
push
dec
add
shr
push
and
add
inc
rol
lea
sub
shr
pop
add
sub
dec
pop
push
inc
shr
shl
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
call
push
add
aam
stos
push
jle
add
imul
mov
xchg
jmp
scas
add
insb
xchg
add
fcompl
stc
jnp
fisttpl
fadds
push
pusha
cltd
in
add
add
add
hlt
movb
out
ljmp
push
push
jl
pop
fiaddl
push
out
add
add
hlt
jmp
call
push
push
lea
push
call
cmpl
add
mov
mov
add
fcoml
fistpl
shrl
add
imul
xchg
bnd
add
add
jmp
add
add
lods
stos
add
jecxz
outsl
add
popa
add
fst
cltd
mov
sub
pop
call
mov
push
sub
pop
lea
push
push
xor
shl
push
or
inc
add
xor
add
sub
rol
inc
pop
sub
lea
pop
push
lea
push
push
push
push
push
call
add
xlat
int
push
fsts
add
mov
insb
cli
push
add
ror
ret
mov
add
add
mov
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
call
stos
push
loope
add
add
add
scas
add
in
mov
mov
jbe
adcl
push
lea
push
call
add
cmc
fs
add
add
add
xchg
mov
lods
stc
add
push
in
add
mov
add
movsb
out
add
mov
outsl
add
fucom
pop
fdivl
add
add
movsl
out
pushf
add
in
clc
lcall
push
lea
push
call
imul
add
rclb
add
mov
add
shll
clc
fwait
add
pop
add
xchg
mov
nop
mov
movb
jge
iret
add
add
leave
lods
add
add
cli
add
fmull
add
push
scas
cld
add
sub
pop
call
push
push
sub
push
or
inc
add
add
sub
sub
rol
sub
ror
pop
shr
add
inc
pop
push
push
lea
push
push
push
push
lea
push
push
call
movl
stos
fstp
lcall
test
lret
add
mov
jno
add
mov
movl
add
fdivl
fnstenv
push
push
lods
hlt
xchg
fs
pushf
add
hlt
add
shll
mov
roll
add
add
rclb
loopne
pushl
call
push
push
lea
push
push
push
lea
push
push
call
add
enter
add
add
pop
add
add
pop
je
clc
fists
push
in
mov
add
cmc
add
xchg
sahf
popf
add
movsb
cmc
popa
mov
mov
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
call
pop
ljmp
mov
add
add
repnz
jbe
add
add
fsubrl
testl
add
insb
add
pop
add
in
add
add
neg
add
add
sub
pop
mov
push
ror
inc
pop
lea
push
push
xor
push
sub
add
ror
sub
sub
pop
sub
add
pop
push
push
lea
push
push
push
push
push
call
mov
push
add
in
add
add
repnz
add
lahf
add
add
mov
add
xchg
add
xchg
fucomi
imul
std
xchg
xchg
fst
scas
add
jp
mov
jb
imul
mov
jbe
stos
lahf
mov
push
notb
sub
pop
pushl
call
push
dec
pop
lea
push
push
push
push
push
call
movsl
call
cli
mov
xchg
jae
add
push
add
add
push
add
lret
xlat
mov
xchg
cwtl
add
stos
loop
add
add
sti
lods
lret
jno
mov
lcall
add
push
rol
inc
inc
inc
pop
pushl
push
push
dec
rol
shr
push
push
pop
add
sub
add
pop
sub
rol
ror
pop
push
push
lea
push
push
push
lea
push
call
add
add
add
push
xchg
testl
mov
add
add
push
jecxz
enter
filds
mov
add
jp
add
lcall
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
push
xchg
mov
sti
add
add
add
add
fbstp
test
push
add
add
mov
push
add
add
add
movb
sub
pop
call
push
push
rol
xor
not
push
push
pop
add
lea
ror
sub
shr
sub
sub
dec
pop
pop
push
lea
push
lea
push
push
call
add
jp
add
cltd
rcrl
and
add
scas
jmp
in
add
gs
add
add
fwait
repnz
add
add
jge
push
addl
mov
add
jbe
cld
add
test
jp
mov
mov
in
lock
pushl
push
add
not
shr
pop
call
push
push
lea
push
call
and
add
add
mov
mov
jno
xchg
pop
popf
add
sti
into
add
mov
clc
je
orb
cmc
out
add
add
add
mov
xchg
scas
xchg
add
arpl
add
in
clc
pop
call
push
push
sub
add
sub
dec
push
or
inc
add
dec
sub
inc
rol
inc
not
pop
sub
ror
not
pop
push
dec
pop
pushl
push
pop
call
call
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
push
push
mov
cmpsl
add
pusha
add
add
add
xchg
add
add
add
aam
lods
jnp
pop
push
add
out
sub
pop
jmp
push
not
add
pop
pushl
mov
push
push
push
push
push
lea
push
push
push
push
call
add
add
out
loop
add
add
les
cwtl
mov
add
nop
push
add
in
add
rolb
rolb
addl
enter
les
lret
add
xchg
into
add
jle
add
mov
mov
test
lock
fldl
add
add
xlat
sub
pop
jmp
push
push
lea
push
push
pop
add
add
rol
sub
shl
pop
shr
dec
pop
push
push
lea
push
push
call
jo
mov
pop
cwtl
push
mov
push
outsl
add
mov
jge
add
add
roll
add
xchg
cwtl
leave
add
add
xchg
outsl
pop
add
test
stos
add
lods
cli
subl
add
jne
call
push
add
lea
pop
push
push
push
push
push
push
push
call
add
add
xchg
insb
icebp
stos
add
out
stc
jmp
add
test
add
add
add
add
mov
in
addl
movb
add
add
add
cmc
cld
sub
pop
call
push
push
sub
push
or
not
add
not
sub
sub
shr
sub
dec
pop
shr
shr
xor
pop
push
push
push
push
lea
push
lea
push
call
roll
add
les
pop
cld
add
add
add
aad
add
fwait
add
mov
add
add
loopne
pushf
add
lods
add
add
shlb
movl
in
add
lock
aad
pop
add
stos
nop
lock
jns
sub
pop
pushl
call
push
lea
pop
push
push
sub
pop
call
leave
push
push
push
push
push
lea
push
call
add
add
out
cmc
jle
add
xchg
addb
ja
popa
add
ret
pop
jge
add
jecxz
in
movsb
pop
push
stos
mov
cli
add
add
add
add
xchg
fucompp
iret
add
les
testb
add
movsl
sub
pop
add
push
push
push
push
push
push
push
push
call
pop
sti
iret
mov
ja
icebp
mov
add
pushf
add
add
jecxz
mov
add
in
sub
pop
pop
pop
push
not
ror
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
int
jmp
mov
add
loopew
bound
push
add
aam
pop
lock
mov
popa
movsl
xlat
xchg
add
mov
in
fdivr
lcall
push
shl
sub
pop
leave
push
lea
push
push
push
call
cmpsl
bound
push
push
mov
mov
in
in
jb
add
add
add
stos
jns
ja
call
mov
mov
movsb
mov
sub
pop
add
ret
push
push
push
call
mov
mov
add
fcomps
ljmp
loopne
add
add
insb
add
add
add
sub
pop
leave
push
lea
rol
pop
ret
push
push
push
push
call
arpl
add
imul
add
add
jbe
xchg
scas
add
mov
les
add
mov
lret
stc
add
add
fmul
add
add
divl
in
hlt
lcall
in
push
push
lea
push
push
push
push
push
call
mov
fwait
xchg
mov
jmp
enter
mov
add
add
lcall
in
add
mov
je
add
sub
pop
cmpl
jne
mov
push
ror
pop
jmp
mov
push
push
push
push
push
call
lret
add
xlat
in
filds
add
jae
insb
rcl
mov
push
jge
add
add
incb
add
push
add
mov
add
in
in
pop
and
push
lea
add
pop
xor
xor
push
push
call
add
add
out
add
add
jo
add
add
xchg
add
mov
filds
pusha
in
ja
mov
add
add
fldl
mov
fstpl
clc
pop
add
xor
push
pop
dec
push
push
call
jl
add
lcall
add
add
add
mov
in
js
add
add
lea
jns
mov
rcrl
fldl
sub
pop
sub
push
sub
lea
sub
pop
jmp
push
inc
rol
dec
pop
sub
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
stos
incb
in
filds
movsb
ficompl
les
fwait
lret
push
stc
push
je
add
nop
loopne
mov
mov
in
fdivr
lcall
xor
iret
xchg
jge
lea
push
push
lea
push
push
push
call
mov
push
push
lods
imul
mov
add
add
add
je
stc
fcmovb
lahf
js
add
div
imulb
add
sbbb
lods
addb
in
in
pop
push
add
pop
sub
cmp
jne
push
push
call
in
addl
lods
add
addr16
mov
cmc
stos
shr
add
add
push
pop
mov
add
jmp
add
add
add
fwait
push
add
add
sti
mov
lds
jns
out
jmp
repnz
sahf
add
div
mov
jmp
pop
add
loope
jl
std
add
sub
pop
mov
push
shr
pop
lea
sub
push
lea
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
outsl
std
je
adcl
fsubr
mov
shll
fwait
add
mov
pop
mov
add
call
in
idivb
mov
clc
mov
cwtl
out
je
add
add
jne
sti
sub
pop
mov
push
lea
push
push
push
push
push
call
js
cwtl
mov
xchg
add
sahf
js
add
cli
add
in
fiadds
add
add
add
in
add
add
add
jns
add
push
roll
add
jp
add
mov
filds
add
movsb
push
sahf
add
stc
add
sti
pop
jecxz
mov
lds
lock
pop
shr
push
shr
lea
sub
pop
add
sub
push
push
push
push
push
push
push
push
call
add
add
into
xchg
add
add
xchg
add
xor
int
add
add
fldl
jno
xlat
fld
mov
outsl
add
nop
fsubrl
pop
add
enter
in
loopne
lcall
xor
std
push
push
push
push
push
call
jmp
add
add
jns
imul
add
data16
je
add
pop
pop
cwtl
mov
add
add
out
push
out
lods
add
add
add
pop
add
fcmovbe
add
lcall
push
push
push
lea
push
call
je
add
push
movb
add
ljmp
add
add
mov
into
add
aam
add
xchg
mov
add
lcall
jmp
incl
add
ret
sub
lcall
jmp
push
push
push
push
push
push
push
push
push
call
add
js
call
mov
add
fs
into
mov
mov
add
sar
mov
lcall
hlt
imul
out
add
add
mov
add
xchg
addl
repnz
add
add
in
fcompl
stc
sbb
test
call
jmp
lea
pop
leave
push
push
push
push
lea
push
call
add
in
iret
filds
sahf
fsubs
test
add
lock
cmc
insb
in
ret
jl
add
jns
add
add
add
in
mov
cmc
pusha
pop
add
add
mov
lret
add
cmpsl
sub
pop
ret
push
ror
xor
pop
push
push
push
push
push
push
push
push
call
add
vpshufb
push
add
test
add
add
stos
shr
loopne
add
aad
bound
mov
bound
add
js
pop
pusha
add
add
pusha
stc
aad
add
mov
rcl
fcmovne
add
jmp
pop
mov
add
push
not
not
dec
pop
push
push
push
add
ror
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
leave
add
add
jecxz
jecxz
hlt
pop
imul
mov
add
add
stos
sti
iret
fwait
mov
addb
add
int
sub
pop
push
push
sub
dec
inc
not
pop
mov
lea
push
dec
xor
pop
sub
push
dec
pop
mov
push
push
push
push
call
push
rcll
mov
jmp
add
add
lcall
add
add
add
orb
add
add
test
addb
out
imul
add
lcall
ljmp
push
push
push
push
call
add
mov
hlt
xchg
jno
test
add
add
xlat
add
jmp
pop
pop
add
add
add
cmc
add
out
mov
imul
stc
loope
in
in
pop
add
push
not
add
pop
mov
add
push
inc
not
add
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
add
add
cwtl
lret
int
mov
mov
loopne
rolb
sub
pop
add
push
push
push
push
push
call
add
mov
insb
stc
add
rcrl
mov
add
add
add
add
lds
in
in
pop
xor
push
add
ror
shr
inc
pop
mov
push
add
dec
pop
and
push
not
inc
rol
pop
rol
push
push
call
add
add
div
in
mov
add
push
mov
add
push
jge
add
add
push
jo
out
arpl
addb
mov
add
add
fadds
aad
testl
lret
fidivs
add
aad
add
add
rolb
xor
sub
lea
pop
xor
push
shr
shl
inc
sub
pop
inc
cmpb
jne
push
add
sub
xor
pop
add
push
sub
pop
cmp
je
add
push
push
push
push
call
mov
pop
shll
add
add
add
arpl
xchg
add
mov
add
test
add
xchg
add
cltd
lahf
xchg
push
test
sahf
jle
test
ficoms
in
add
jmp
jl
gs
cmc
rcr
addl
mov
add
jb
add
add
stos
add
jnp
add
test
call
adc
push
push
push
push
lea
push
push
call
out
insb
jnp
fildl
add
mov
pop
add
lods
add
leave
xchg
jl
pop
imul
jp
add
stos
push
faddl
ja
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
push
push
call
add
imul
out
mov
add
add
mov
jne
add
add
adcl
add
add
imulb
jecxz
mov
mov
cmpsb
data16
jae
add
pop
imul
lds
sub
pop
pop
push
push
push
push
push
call
cmc
push
frstor
pop
add
scas
ror
aam
rcrb
add
subl
jnp
add
arpl
jns
rcll
jns
add
sarb
add
jns
push
add
pushf
add
sub
pop
pop
pop
push
not
lea
pop
pop
pop
push
lea
push
push
push
push
push
call
outsl
ja
add
add
iret
subb
shrb
test
add
cwtl
mov
add
add
stos
enter
mov
add
fnstenv
jmp
data16
mov
add
loop
fildl
add
int
add
add
add
push
xchg
add
leave
push
not
pop
ret
push
push
lea
push
push
push
push
call
addr16
bound
add
bound
mov
add
in
add
stos
mov
pushf
add
ret
add
push
fwait
stos
imul
mov
add
call
mov
push
lea
push
push
push
push
lea
push
lea
push
push
call
insb
add
add
add
add
js
add
push
add
call
mov
sti
roll
stos
faddl
push
add
lds
mov
loope
push
add
add
mov
lock
add
add
cltd
lahf
mov
in
loopne
add
push
push
ror
sub
pop
push
push
push
push
push
lea
push
lea
push
call
add
filds
mov
rcrl
add
shll
add
fadds
add
add
lret
mul
add
pusha
mov
loop
testl
jecxz
add
add
std
mov
fldz
aad
xchg
xchg
mov
popf
pop
int
add
pusha
jmp
jl
ret
fsubp
jle
in
call
push
pop
mov
push
lea
push
lea
push
call
lcall
mov
gs
add
incb
scas
or
adcb
mov
rorl
cli
add
add
repnz
jo
add
add
xchg
addb
lahf
data16
fdiv
add
jo
push
aad
xlat
addl
add
mov
add
in
hlt
lcall
testl
push
lea
push
push
call
add
test
in
add
into
imul
push
out
fst
pusha
clc
xchg
add
add
add
add
fnsave
push
in
pop
ja
out
mov
add
add
leave
jecxz
mov
mov
add
mov
push
add
sub
pop
pop
push
pop
mov
push
push
lea
push
push
push
call
xchg
lcall
in
add
add
out
add
xchg
mov
stos
add
add
pop
test
mov
mov
imul
push
call
push
sub
ror
shr
pop
xor
push
dec
xor
pop
pop
pop
push
push
push
push
call
scas
jecxz
ja
fsubl
les
add
pusha
bound
add
out
gs
add
bound
add
add
add
add
add
add
push
add
sahf
fisubs
add
data16
mov
call
jp
les
icebp
add
lcall
pop
push
inc
sub
shr
shl
pop
pop
leave
push
inc
pop
ret
push
push
push
call
pop
add
add
mov
loope
arpl
add
add
add
mov
insb
add
jmp
add
rcrl
mov
in
jp
push
aad
xchg
xchg
jmp
aad
mov
lcall
in
add
push
not
pop
push
push
not
pop
push
push
shr
sub
add
pop
push
push
add
shl
pop
push
mov
push
push
push
push
push
call
add
cltd
leave
add
stc
gs
jo
call
xlat
addl
mov
in
add
add
cli
xchg
xchg
add
pop
mov
incb
add
shl
data16
add
jb
xchg
movsb
push
add
insb
add
add
add
xlat
add
loope
incb
out
add
lods
cli
jnp
shl
xlat
add
sub
pop
push
push
push
push
push
lea
push
push
push
call
bound
add
mov
jb
gs
add
stos
in
mov
add
add
divl
sub
pop
pop
lea
push
push
push
push
push
push
push
lea
push
push
call
add
movsl
mov
mov
add
loope
add
in
rolb
push
pop
xchg
sahf
neg
add
out
sub
pop
sub
push
shr
pop
mov
push
push
lea
push
push
lea
push
lea
push
call
icebp
pushf
xchg
cmpsb
jb
add
pop
add
test
mov
arpl
add
enter
call
add
aam
scas
mov
add
pop
leave
outsl
add
add
addr16
jno
add
arpl
add
loope
add
add
xchg
test
jns
xchg
jnp
in
call
shr
push
shl
pop
add
push
lea
push
push
push
push
push
push
call
add
hlt
fistpll
fstpl
mov
gs
add
flds
add
aad
add
push
mov
cwtl
jb
add
pop
js
push
push
call
xchg
mov
sbb
add
test
movsb
mov
addb
add
js
call
idiv
xorl
add
mov
jno
fnstenv
add
add
scas
push
in
add
lcall
fsts
mov
mov
lcall
cltd
pop
or
ja
xchg
push
push
push
push
call
outsl
mov
mov
adcb
add
cmc
lea
jno
push
leave
add
rcr
mov
mov
add
aam
cmpsl
imul
filds
fadds
stos
add
fadds
mov
xchg
lret
add
jns
cmpsb
add
enter
add
xchg
mov
add
jae
push
add
pop
popl
push
push
push
push
push
push
push
push
call
push
mov
add
fiadds
icebp
in
add
add
xchg
add
add
add
hlt
jne
lret
add
filds
add
jne
add
mov
jae
sub
add
rolb
popf
scas
loop
mov
icebp
jb
add
div
std
push
frstor
sub
pop
mov
push
add
add
sub
pop
add
push
dec
xor
add
pop
xor
lea
push
dec
pop
mov
add
push
lea
add
ror
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
shrl
add
sahf
add
lds
idivb
add
add
add
add
add
add
mov
add
sahf
add
add
fsts
add
mov
call
add
in
add
movsl
sub
pop
rol
nop
push
lea
xor
pop
nop
push
push
lea
push
push
call
popf
add
out
add
std
push
push
aam
add
jne
mov
int
mov
gs
cmpb
jl
add
enter
mov
add
loope
add
push
pop
mov
in
lock
lcall
add
pop
nop
inc
push
shl
rol
pop
nop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
out
add
rolb
mov
cltd
pushf
int3
mov
out
sti
je
add
jp
lods
add
add
push
test
add
add
add
gs
add
add
test
in
fcomps
push
lea
push
push
lea
push
push
call
jbe
jbe
xchg
add
clc
add
mov
add
add
mov
add
clc
jne
add
test
addr16
sti
add
jae
push
sub
pop
cmpb
jne
push
push
push
push
call
add
jae
add
add
stos
add
test
add
xchg
xlat
in
add
imul
call
jo
std
add
add
add
xchg
pop
add
add
pop
add
clc
les
xchg
add
scas
add
fdivp
sub
pop
add
nop
push
shr
ror
add
pop
nop
push
sub
sub
sub
sub
pop
cmp
je
push
push
call
add
insb
add
push
movb
imul
add
add
add
add
into
push
mov
jl
mov
leave
pop
leave
ret
add
scas
enter
add
mov
add
add
popf
scas
add
add
add
pop
jmp
xchg
add
mov
stos
push
incb
lcall
nop
push
rol
add
rol
dec
pop
inc
push
shr
pop
nop
push
push
call
outsl
add
lahf
add
fcomip
add
add
loopne
add
push
mov
add
in
cld
mov
movsb
test
add
mov
add
add
pop
std
pop
add
add
flds
pop
out
jne
jns
add
ja
sahf
mov
scas
add
popf
test
add
add
push
push
push
call
add
add
add
add
leave
push
popl
add
jo
jle
add
add
pop
ret
add
add
push
mov
add
sar
add
aad
stos
add
in
add
std
add
addb
enter
icebp
sub
pop
cmp
jb
push
lea
rol
add
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
out
div
add
mov
icebp
mov
push
adcb
jecxz
imul
lds
ljmp
fldl
lcall
jge
add
push
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
movsl
add
add
add
add
add
add
outsl
add
jecxz
add
cmpsb
mov
out
add
add
cmpsb
pop
cwtl
jecxz
loop
add
add
add
in
fcomps
push
and
lea
push
push
push
push
push
push
push
push
push
call
mov
mov
push
add
push
mov
jecxz
mov
mov
popl
jmp
fsubp
push
add
std
mov
ret
addb
mov
mov
mov
mov
mov
add
testw
push
add
add
sub
pop
add
push
push
push
lea
push
push
push
push
call
scas
mov
lods
hlt
lds
rolb
fstpt
add
jmp
add
out
add
jns
mov
out
push
sub
pop
movzwl
mov
push
shr
shr
shr
add
pop
add
push
not
rol
sub
lea
pop
mov
push
shl
inc
pop
xor
xor
push
sub
pop
shl
push
sub
add
shr
pop
xor
push
rol
ror
sub
pop
shl
push
push
push
lea
push
push
push
call
mov
int3
gs
add
mov
add
ror
int3
pop
je
std
cld
add
add
jnp
movsl
je
andb
movsb
bound
loop
add
scas
cmc
in
jae
push
call
lcall
dec
nop
add
loope
push
xor
pop
xor
mov
push
push
push
lea
push
call
add
add
lock
mov
push
add
xchg
xchg
add
add
loopne
add
lcall
inc
hlt
push
push
push
push
push
call
fwait
add
mov
incb
add
lock
push
add
add
mov
repnz
mov
fisubrl
lret
push
add
fcmovne
addl
aad
jmp
pop
push
push
lea
push
push
push
push
lea
push
call
lret
xchg
add
jecxz
add
outsl
add
out
xlat
add
rcrb
mov
add
mov
loopne
add
add
add
js
add
fadds
add
mov
jbe
gs
arpl
add
add
xchg
add
cmpsl
popa
add
add
add
lcall
push
push
push
push
push
lea
push
push
call
add
in
add
ret
shlb
hlt
mov
adcl
loopne
stc
pop
mov
popf
cwtl
movsl
fs
ljmp
add
je
out
add
xchg
add
cltd
int
lret
sbbl
add
add
add
mov
pop
pop
push
add
sub
rol
add
pop
pop
push
push
push
call
nop
sahf
add
rolb
pop
mov
stos
fists
roll
add
add
in
add
add
add
jne
add
add
add
add
out
popa
mov
hlt
mov
call
add
add
arpl
into
add
add
jge
into
icebp
mov
aam
add
jmp
sub
pop
leave
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
in
call
add
test
scas
xchg
jb
fdivl
cwtl
add
add
out
add
pushf
add
fistl
out
cltd
add
add
iret
add
mov
in
fcompl
or
push
xor
pop
push
push
push
push
push
push
push
push
call
add
add
jnp
test
mov
movsb
add
sahf
add
cwtl
imul
rol
out
add
add
add
add
add
add
roll
std
mov
scas
lock
js
add
lret
bound
add
add
add
sub
pop
mov
push
push
call
add
jo
push
imul
add
add
xorb
add
mov
mulb
fildl
mov
test
mov
shl
add
add
add
add
push
add
add
add
add
test
in
clc
pop
push
push
lea
push
push
call
mov
movsb
in
lds
add
jne
fwait
add
add
add
out
add
ficompl
mov
add
add
push
xchg
popf
fildl
mov
sub
pop
push
push
push
add
shr
pop
push
push
sub
sub
pop
mov
push
not
sub
rol
shr
pop
mov
push
push
push
push
push
push
push
push
push
call
add
hlt
incb
arpl
mov
add
add
add
add
jns
cmc
mov
add
insb
movsb
xchg
add
add
push
ja
lahf
flds
pop
int
add
lahf
add
xchg
add
ja
add
aam
xchg
add
lret
add
add
mov
loop
sub
pop
mov
push
push
push
push
push
call
add
xchg
flds
add
add
in
sti
jl
imul
lahf
out
mov
scas
add
push
add
add
pop
add
jb
xchg
cmc
rolb
add
mov
add
lcall
rorb
test
lea
push
push
push
push
push
call
add
add
add
xchg
pusha
add
pop
mov
loope
add
add
add
add
mov
xchg
add
stos
jecxz
addb
mov
add
loop
fistpl
out
cld
imul
sub
pop
mov
test
je
push
push
push
push
push
lea
push
push
push
push
call
add
add
cmpsb
in
push
cltd
lock
addl
xlat
add
cmpsb
in
enter
add
push
mov
repnz
add
mov
add
pushf
mov
jnp
out
add
add
add
add
add
lcall
testl
pop
cli
push
lea
push
lea
push
push
call
add
add
add
fsubrs
add
add
scas
test
add
add
add
arpl
push
mov
add
add
rcll
call
movsb
mov
pusha
add
lods
fbstp
lret
fistl
push
in
in
pop
mov
push
lea
push
push
push
push
call
jle
gs
add
lods
lea
call
add
int
add
jne
mov
testb
addb
add
vpsubw
xchg
mov
xchg
add
mov
in
lcall
cmp
je
push
push
push
push
push
lea
push
lea
push
call
xchg
add
addr16
pop
add
imul
jnp
lea
add
add
lods
jo
add
pop
xchg
jl
add
add
cmc
into
cmpsb
pop
pop
call
outsl
ljmp
je
mov
push
shr
add
pop
inc
push
rol
xor
pop
cmp
je
push
push
push
push
push
push
push
lea
push
call
push
pushf
xchg
repnz
add
imul
adc
loopne
repnz
xlat
jmp
add
xorl
fildl
xlat
movsl
cltd
add
add
imul
enter
fstl
movb
call
arpl
lahf
mov
testb
add
push
add
cli
mov
pop
test
jne
push
not
xor
pop
xor
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
xchg
test
lds
push
add
fistpll
mov
xchg
mov
mov
mov
mov
addl
push
mov
sti
lret
add
fs
add
add
pop
push
inc
rol
add
pop
pop
leave
push
add
ror
pop
ret
push
push
push
lea
push
push
push
push
push
push
push
call
sahf
sub
jno
mov
cmpsb
add
aad
add
jle
mov
lds
int3
test
add
add
add
mov
add
xchg
fwait
add
stos
mov
xchg
mov
std
add
fildl
add
add
jo
sub
pop
mov
inc
push
add
sub
shl
xor
pop
cmp
jne
push
push
call
add
loope
lods
lock
add
add
mov
add
add
pop
push
mov
cld
je
mov
int
movsb
imul
pushf
add
cld
mov
std
test
add
lcall
add
pop
add
pop
mov
lcall
ja
add
pop
add
push
add
jle
push
dec
pop
mov
push
add
add
pop
test
je
mov
push
add
sub
ror
pop
add
push
lea
lea
pop
cmp
jne
push
push
push
lea
push
call
mov
add
add
add
sahf
mov
movb
jecxz
add
mov
add
add
mov
add
add
loop
add
imul
xchg
push
add
mov
in
add
call
add
add
mov
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
lea
lods
add
mov
mov
add
shrb
hlt
jo
mov
pop
add
xchg
leave
int
jo
in
jge
addb
add
jge
pop
fildl
rorb
jne
add
push
xor
pop
mov
add
push
push
push
call
add
mov
call
mov
add
rolb
add
add
add
enter
add
add
data16
pushf
fstps
shl
lahf
add
add
add
leave
xchg
jle
xchg
add
mov
mov
test
lock
lcall
loopne
test
shrl
ficomps
add
call
mov
push
push
push
call
add
push
loopne
imul
test
jge
cmpsl
sti
pop
popf
sahf
add
add
incb
mov
cmc
mov
filds
int3
sti
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
jne
add
movsb
add
out
xchg
add
mov
push
pop
jl
mov
add
add
pusha
add
mov
hlt
add
rorb
lahf
leave
add
pushf
cmp
add
call
mov
lcall
push
lea
push
push
push
push
lea
push
call
incb
jns
add
pop
add
rorl
imul
lea
lahf
stos
fiaddl
add
aam
pop
push
add
add
test
jno
mov
imul
call
ret
add
not
shl
pop
pop
push
ror
rol
shl
pop
pop
leave
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
xchg
test
fildl
jne
into
mov
mov
add
xchg
lret
je
add
add
add
loopne
addl
pop
ret
push
push
push
push
push
lea
push
lea
push
push
call
add
out
add
negb
add
add
outsl
add
mov
mov
xchg
loop
fisttps
addl
add
out
add
add
stc
add
add
add
xchg
jbe
stos
sub
pop
lea
pop
push
lea
push
push
push
push
push
push
call
gs
push
add
add
add
add
add
push
popf
add
mov
add
add
add
mov
nop
jb
mov
mov
add
imul
in
mov
add
call
add
lcall
pop
push
pop
pop
push
lea
pop
leave
push
push
lea
push
call
lahf
testb
xchg
add
mov
popf
ljmp
movsb
roll
stos
repnz
add
fisubrl
push
add
in
out
add
xchg
jecxz
sub
pop
ret
mov
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
filds
pop
add
pop
add
add
insb
add
jge
xchg
xchg
add
push
ljmp
jne
add
add
pop
add
faddp
pop
mov
in
loopne
pop
push
push
lea
push
lea
push
push
push
push
call
pushf
hlt
fildl
add
lcall
mov
addl
add
add
add
int
std
adc
out
lods
xchg
icebp
cmc
add
jno
in
in
lcall
push
lea
push
push
push
push
push
push
push
call
add
loopne
fisubrl
fistps
jl
add
incb
add
arpl
xchg
iret
popa
push
testb
add
fldenv
add
rolb
cmpsb
mov
jae
cmc
add
imul
add
test
lret
add
pop
in
in
loopne
pop
pop
push
add
pop
leave
push
sub
add
pop
ret
test
push
test
jae
test
jb
out
jae
les
jae
insb
aad
push
test
jae
mov
add
add
inc
sbb
loop
movsl
mov
cmpsl
adc
cmp
or
int
and
lcall
dec
mov
lds
jno
sahf
mov
ljmp
xor
hlt
push
adc
cld
test
xchg
icebp
test
add
in
sbb
test
jle
xor
out
pop
jbe
mov
cmp
ja
xchg
mov
add
test
mov
xchg
repnz
pop
insb
call
lcall
mov
sbb
sub
inc
popl
cmp
dec
les
inc
jmp
test
cmp
mov
test
roll
repnz
add
test
test
fsubp
mov
push
into
data16
lcall
sub
mov
aaa
es
and
fbstp
fimuls
insl
je
js
cmp
lods
outsb
adc
dec
xchg
jp
pop
popa
lock
dec
push
sub
adc
loop
cmp
cmp
in
xchg
pop
test
jb
test
pop
dec
or
xor
xlat
mov
repz
mov
cmp
cmc
jbe
not
and
mov
je
jae
or
xchg
shl
mov
and
sub
xchg
mov
dec
mov
xchg
cmpl
lods
lock
div
movsb
lods
sahf
xor
sbb
fwait
cmc
out
jns
popf
fildll
sahf
sbb
inc
rolb
movsl
fwait
fwait
cltd
xchg
jns
arpl
popa
sarb
es
jb
sub
xchg
mov
mov
js
mov
push
push
in
lret
fsubr
test
iret
push
sub
mov
lods
rcll
and
mov
add
pop
lock
or
push
push
mov
sbb
mov
sbb
out
mov
and
out
cmp
shll
pushf
cli
pop
push
in
push
enter
mov
mov
or
repz
xor
pmuludq
pop
xchg
in
dec
test
push
dec
dec
outsb
add
mov
mov
cmp
lds
inc
lds
and
icebp
mov
es
fs
test
loopne
mov
mov
mov
je
inc
sub
xor
ja
sub
sti
ja
sub
fisubrl
jmp
subl
and
or
pop
pop
push
push
mov
adcb
jb
out
mov
icebp
ret
out
mov
rcll
jne
jmp
popf
pop
mov
aad
inc
je
pusha
popa
jae
mov
popf
xchg
jb
lods
rclb
xlat
ja
xchg
adc
inc
out
adc
push
xchg
lcall
fidivrs
out
sbb
scas
stos
and
inc
pop
repnz
sub
cmp
mov
insl
in
cmpsb
fs
sub
cmpsl
incl
inc
push
loopne
mov
dec
iret
push
dec
sub
outsb
sarb
jge
iret
std
xor
out
pop
sti
aaa
data16
mov
out
mov
push
jae
std
push
jb
adc
xchg
nop
pop
or
ljmp
daa
int
mov
jb
lods
sbb
mov
std
outsl
out
pop
out
ja
jge
dec
int
and
xchg
mov
fldt
jle
cs
fsubs
lcall
mov
addl
int3
push
pop
out
mov
cwtl
adc
pop
adc
je
mov
lock
mov
js
cmpsl
andb
rorl
adcl
paddq
shl
xchg
sub
xchg
jo
pushf
adc
cmpsl
push
fwait
and
lods
out
jbe
addr16
leave
adc
sub
jbe
in
imul
cmp
leave
pop
mov
adc
jae
xor
mov
out
add
adc
icebp
push
ljmp
mov
in
int3
inc
mov
in
ja
mov
pop
push
jge,pt
dec
push
pop
push
gs
adc
loopne
pop
cmp
jo
cli
repz
orl
mov
pusha
cwtl
outsb
dec
sub
sub
pop
pop
leave
shll
mov
ljmp
das
mov
rorb
aam
les
push
xor
decl
fisttpll
adc
sbb
es
cmp
xor
icebp
mov
push
lock
inc
lock
dec
stc
mov
cwtl
or
mov
cmp
into
les
mov
cmp
push
jmp
jno
cmp
out
push
lahf
pop
ret
add
mov
mov
daa
mov
or
xchg
scas
xor
dec
out
xor
sbb
xchg
and
ss
cmp
dec
rorl
sahf
stos
rcr
dec
jge
dec
cmc
lods
push
jp
popa
xchg
in
ljmp
adcl
lret
out
sbbb
cmp
or
cmp
notl
sbb
add
shrb
push
sbb
sub
push
inc
rorl
xchg
jg
mov
cmp
xchg
ret
pop
bound
xchg
xlat
push
mov
iret
mov
cmp
jp
popa
mov
cld
or
pusha
out
sbb
outsl
int
xchg
xor
lret
cmc
and
jne
negl
inc
mov
ret
cmc
in
test
arpl
repz
lods
cmpsb
subl
pop
sub
in
popf
add
push
js
pop
or
negb
das
xchg
out
daa
negb
hlt
icebp
and
lods
adc
xchg
cwtl
std
jbe
rorb
mov
lea
gs
adc
sub
mov
push
inc
adc
out
ret
inc
in
jbe
in
cwtl
cmp
inc
fpatan
loop
pop
andb
es
aas
add
push
sub
cmpb
leave
push
jne
les
inc
add
leave
sbb
pop
mov
push
add
movsb
aaa
lods
sti
sbb
jb
mov
or
inc
push
test
es
xchg
nop
push
icebp
cmp
sub
jmp
out
js
cmp
jno
lods
cwtl
pop
in
pop
xchg
scas
and
sbb
ret
mov
test
lahf
out
stos
les
mov
mov
stos
xchg
or
lds
int
ss
mov
pusha
adc
push
and
adc
lret
jns
rorl
movsb
add
mov
sahf
push
or
lcall
jo
sbb
push
jle
dec
xchg
mov
shrb
pop
add
pop
ds
xchg
dec
cwtl
inc
test
dec
pop
scas
loope
xor
sbb
pop
dec
mov
leave
pop
or
xor
bound
stos
jmp
ret
adc
insl
mov
xchg
xchg
les
adc
dec
imul
ljmp
stos
loop
outsb
sbb
add
dec
sahf
jecxz
xchg
int
mov
enter
xchg
leave
popf
or
fs
push
ja
cmp
in
call
xor
hlt
jne
push
xchg
xor
push
jo
fstl
push
test
mov
or
jle
dec
inc
inc
test
jmp
dec
push
jnp
cmpsb
in
fistpl
fwait
sbb
inc
mov
inc
movsl
sbbb
mov
jl
xor
aam
sub
sub
decb
pushf
cmpsl
mov
fsubl
lcall
and
mov
xor
inc
loop
xor
jnp
imul
mov
cwtl
mov
data16
jae
in
sbb
jmp
in
into
lock
scas
mov
mov
pop
rclb
lret
adc
push
dec
int
or
cwtl
push
push
cmp
stc
jle
iret
mov
daa
lea
xor
mov
aad
ficompl
movsb
adc
dec
sub
lahf
xchg
cmc
sub
mov
mov
cltd
and
pop
pop
pop
mov
repnz
cmp
loopne
aas
mov
and
aam
xchg
inc
repz
test
into
push
dec
loop
mov
testb
in
addb
lods
sbb
adc
imul
lds
je
das
mov
sub
jg
push
leave
scas
push
fs
mov
jg
mov
leave
mov
push
pop
in
lds
lods
loope
int
data16
xlat
bsf
push
out
stc
jb
mov
jo
mov
out
mov
loopne
inc
mov
sbb
mov
xor
pop
in
es
dec
adc
inc
sbb
adc
ljmp
call
ljmp
pop
ret
mov
add
lods
ret
in
xchg
nop
xor
cmpsb
cmp
loopnew
sahf
pop
sub
xchg
jle
adc
ljmp
pop
push
ja
add
add
ret
dec
mov
xchg
movsb
notb
mov
pop
push
stos
lret
jo
pop
xchg
sbb
xor
imul
mov
out
jae
lea
mov
imul
nop
shl
sti
xor
aad
inc
add
and
dec
addb
cmp
lcall
sub
inc
inc
mov
or
push
cld
pop
or
cs
pop
popf
mov
lahf
mov
push
pop
mov
cmp
jo
push
imul
icebp
push
pushf
or
unpcklps
mov
push
in
fdivs
mov
pop
lods
mov
xchg
lret
fnstenv
lcall
incb
mov
shlb
cmc
dec
outsb
xchg
jno
mov
fs
dec
xlat
iret
mov
icebp
xchg
rcrb
shl
ret
jne
insb
js
fidivl
fwait
les
in
in
addl
and
sub
insb
pop
cwtl
mov
push
popl
sbb
lds
bound
aas
push
je
mov
lahf
pop
iret
or
inc
cltd
decb
jne
lcall
mov
sub
ljmp
popf
dec
ljmp
push
cmpsl
imul
mov
push
movsb
mov
popa
pop
mov
mov
and
lret
aaa
cmp
and
pop
in
pushf
jns
sbb
jle
testb
in
fdivrs
pop
repz
inc
dec
aam
test
xchg
push
lock
lret
in
aam
add
or
in
sahf
cmpsl
jp
insb
ja
ret
outsb
and
add
mov
jnp
jne
push
les
dec
dec
xor
inc
push
les
pusha
sbb
je
xchg
mov
pop
push
in
or
jge
xchg
dec
ss
sbb
pop
gs
scas
in
in
add
daa
imul
fnsave
jp
jne
mov
in
xchg
mov
stc
add
clc
fmull
testb
dec
nop
mov
inc
pop
test
aam
pop
int3
pop
sbb
es
sub
jmp
sub
jnp
mov
cs
std
in
lods
jbe
ret
popf
lods
repz
jmp
outsl
mov
adc
pmulhw
loopne
cmpsl
xchg
push
dec
jmp
and
mov
dec
shr
jnp
mov
sbb
push
adc
test
sbbb
sub
mov
movsb
add
subl
lahf
adc
les
fiaddl
test
adc
rcrl
out
push
pop
fstps
shll
scas
out
push
lret
xchg
pop
xorb
in
inc
mov
push
inc
cs
jo
pop
or
mov
jle
and
xor
notb
xchg
dec
sub
daa
mov
lret
cld
jecxz,pt
sub
bound
sbb
push
cmpsl
out
mov
dec
aaa
add
xchg
icebp
and
push
xor
popf
insb
push
movsl
into
pop
aad
notb
pop
or
orb
call
testl
xchg
aas
lock
ds
push
pop
cwtl
inc
pop
sbb
fstpl
out
scas
cmp
cmp
pop
cwtl
call
aad
mov
mov
pop
add
cltd
stos
call
inc
into
fnsetpm(287
cld
mov
sbb
cmpsb
dec
cmpsl
in
sarb
mov
cld
insb
fcmovnb
xchg
lds
bound
xchg
sbb
fcomi
int
xor
sub
pop
nop
mov
xchg
pushl
push
jmp
push
pop
xchg
push
cmp
sti
lock
jge,pt
jo
pop
xor
xchg
push
mov
cmp
mov
sarl
gs
mov
sbb
push
push
add
fidivl
clc
or
fmuls
in
mov
fs
xchg
pop
or
sarl
jnp
test
or
fmuls
pop
xchg
xchg
lea
push
jge
addr16
push
push
inc
push
pop
data16
divb
and
movsl
pop
fs
enter
test
cmp
and
xor
cmp
and
mov
out
leave
push
ret
sub
sbb
nop
addr16
mov
lock
push
mov
insl
inc
lcall
rol
aam
mov
mov
cmp
fnstcw
outsl
push
push
popa
fwait
jne
sbb
jne
shl
mov
xor
js
call
shlb
das
sbb
add
dec
push
fadds
sub
mov
out
mov
dec
mov
imul
xchg
dec
inc
xchg
xor
or
ss
orl
or
mov
inc
add
lods
inc
jle
movsb
popa
push
mov
test
gs
mov
mov
or
hlt
add
mov
pop
addr16
cmpsl
scas
sub
icebp
addr16
cltd
add
sub
dec
lcall
adcb
inc
cmc
and
inc
jno
add
std
mov
pop
sbb
movsl
popa
cmp
mov
repnz
insb
movsb
inc
gs
push
fistpll
xchg
fld
inc
sahf
andl
mov
icebp
insb
lods
out
sub
out
lea
jmp
ljmp
push
addr16
jno
idiv
dec
je
adc
fs
nop
add
lahf
and
and
and
clts
lret
rorb
mov
push
xor
and
aam
mov
lods
inc
xlat
mov
xchg
sub
adc
cmpsb
enter
inc
das
les
mov
out
test
dec
sbb
imul
jns
aam
mov
mov
pop
mov
bnd
shlb
fs
mov
xchg
dec
inc
pop
pop
mov
roll
mov
push
mov
lock
mov
fwait
add
inc
sarl
in
push
cmp
add
fs
popa
sarl
inc
jns
inc
pop
push
nop
add
jecxz
addr16
lock
mov
sbbb
rolb
sbbl
loopne
mull
imul
xor
test
je
cmp
and
cltd
daa
mov
int3
das
popa
dec
push
cmp
inc
jmp
fs
mov
das
mov
pushl
outsb
mov
dec
lea
nop
mov
jns
cmpsl
or
push
push
cmpsl
out
or
rclb
mov
mov
cltd
jne
stos
and
jg
push
outsb
in
adc
sub
inc
cmp
cmc
dec
add
mov
dec
outsl
jb
aam
and
or
xor
fstps
xor
test
sub
jp
cmpsl
or
in
rcrb
repnz
xor
push
mov
push
out
jno
sub
gs
jmp
push
pop
addr16
es
adc
push
stos
fsubrl
mov
hlt
push
cwtl
and
pusha
mov
ficoml
cmp
mov
fsub
dec
stos
pop
add
jge
rcll
outsb
in
in
mov
mov
scas
cmp
jb
jp
pop
push
outsb
cmp
pop
sbb
pop
stos
jne
loop
pop
fisubrs
xchg
mov
repz
add
xor
cmpsb
add
daa
push
sbb
in
cmpsl
enter
outsb
pop
cmp
fwait
testl
test
out
xor
std
mov
pop
repnz
stc
pop
cmpsl
mov
cwtl
rcrb
xchg
xor
mov
sbb
adc
repnz
push
sub
fadd
mov
xchg
xor
sub
jnp
inc
out
mov
mov
pop
cwtl
mov
jns
sbb
pop
or
push
es
not
mov
sbb
lds
outsl
inc
mov
das
jle
pushf
cmp
fdivs
mov
push
jno
and
out
mov
mov
insb
pop
orb
fnstenv
addl
mov
mov
and
jl
dec
xchg
xchg
daa
fimuls
fldenv
mov
andb
push
xchg
jae
mov
sbb
gs
add
scas
mov
pop
add
lock
sahf
clc
and
add
jae
mov
jns
pop
sbb
cwtl
jns
cwtl
lcall
pop
mov
outsb
int3
cld
jae
dec
sub
cli
inc
add
cmpsl
dec
lods
into
arpl
inc
push
fldenv
int
inc
test
jo
scas
sub
xchg
mov
sub
ss
adc
xchg
arpl
inc
pop
lea
push
jecxz
mov
popf
jmp
adc
cmpsb
sbb
mov
xor
mov
jmp
mov
jo
pop
cmp
cmc
lods
inc
icebp
mov
pop
mov
push
lret
ret
add
xor
mov
movsb
ss
pushf
sub
adc
and
mov
imul
shlb
out
mov
or
dec
into
or
sub
pusha
xor
lret
lock
cltd
mov
and
or
js
int
cmp
cmpsl
ret
test
and
mov
or
dec
daa
lcall
cmpsl
xor
out
pop
cmp
push
push
notb
pop
cmp
cmp
add
xchg
xor
fistpll
push
xchg
add
loop
cwtl
and
mov
mov
test
mov
inc
pop
adc
adc
shlb
sbb
cmp
rcll
lret
stos
imul
inc
push
add
push
jmp
in
cltd
stos
movsl
and
repnz
popf
lea
dec
lods
int3
jmp
ljmp
jns
aas
xlat
aaa
sub
fwait
push
dec
mov
adc
int3
sti
push
add
add
xor
sbb
daa
dec
loopne
jp
loop
aam
rorb
pop
mov
and
movsl
or
adc
xchg
pop
test
lret
fnstcw
outsb
insl
ret
lahf
dec
mov
ficoms
push
cld
int
jb
fs
jne
iret
in
push
popf
sbbb
sub
test
and
push
dec
nop
cmp
inc
orb
fcmovbe
or
sbb
mov
cmp
jae
icebp
and
push
sub
push
ficompl
jg
dec
adc
and
mov
xchg
xchg
adc
mov
je
adc
and
std
inc
pop
pop
dec
loopne
mov
cmp
adc
test
jae
mov
out
lods
adc
imul
out
mov
aam
fsubr
sub
fcmovnu
imulb
les
fisttps
mov
jo
addr16
mov
test
inc
or
je
inc
mov
inc
dec
insb
or
movsl
xchg
imul
inc
inc
mulb
jle
add
mov
arpl
inc
lods
je
adc
imul
jge
jae
xchg
in
adc
sub
in
push
inc
shll
mov
movsb
and
cmpsb
sub
mov
adc
outsb
cmpsb
dec
mov
push
ret
pop
jo
jecxz
jl
or
movsb
or
xchg
xor
mov
jae
loope
dec
mov
std
xchg
dec
adc
mulb
inc
add
je
movsl
and
cmp
repnz
dec
gs
mov
and
adcb
jnp
pop
and
jmp
test
sbb
ds
pop
fdivrp
das
out
in
adc
mov
sti
mov
in
or
pop
out
jle
out
xor
xchg
mov
pop
sbb
sbb
push
sar
mov
negb
icebp
ja
mov
leave
mov
xchg
adc
icebp
pop
and
movsl
xchg
iret
lret
cmp
int
jg
aaa
aas
sub
cld
es
test
jge
fldt
pop
mov
jne
pop
clc
xor
mov
or
arpl
cmp
add
adc
outsl
cmp
les
ljmp
mov
xorl
in
jl
jge
xor
sbb
xchg
arpl
idiv
dec
xor
scas
insb
fwait
hlt
lds
repnz
pop
notl
or
add
nop
and
pop
push
mov
push
mov
cs
mov
sbb
imul
pop
fldenv
test
into
dec
aas
test
std
daa
push
cmp
mov
mov
pop
sahf
aas
mov
lods
dec
cmpsl
jae
lea
sbb
aas
xchg
ja
and
ja
lock
scas
jo
stc
call
in
fucomp
push
ret
ret
popa
push
add
lea
pop
movsl
loope
push
fidivrl
mov
das
imul
ret
push
mov
inc
push
sub
in
jecxz
adc
mov
rorb
sbbb
push
push
pop
xchg
push
subl
loope
add
ret
lock
inc
in
mov
movsl
outsl
mov
add
mov
mov
movsb
lock
lds
imul
push
out
ret
inc
insb
xchg
cmp
out
mov
or
faddp
test
fcoml
dec
lods
leave
mov
fisubl
xchg
sub
rclb
xchg
jp
adc
xor
inc
shll
xchg
sbb
arpl
xor
adc
lds
push
out
or
fs
mov
jmp
loope
lds
jp
inc
inc
sbb
cli
jae
or
pop
ret
xor
or
nop
pop
xchg
pop
add
and
sbb
imulb
popa
into
bound
push
adc
repz
push
aas
lret
testl
push
mov
sbb
test
js
imul
mov
outsb
aaa
and
mov
mov
adc
loop
jno
cmp
sbb
inc
pop
xchg
dec
repnz
sub
push
add
aas
lret
repz
loop
cli
cltd
mov
push
leave
aaa
sbb
movsb
mov
fwait
jecxz
cld
sbb
test
mov
int3
in
mov
inc
repnz
mov
js
pop
mov
adc
and
out
mov
push
sarl
rorl
sbb
mov
test
pop
push
es
decl
add
xchg
lods
into
ret
xlat
push
inc
inc
lods
push
fcompl
out
and
push
jns
iret
aad
pushf
shrb
int3
add
cld
daa
inc
in
repnz
popf
push
mov
shll
shrl
dec
and
mov
push
pop
push
dec
inc
xor
stos
pop
mov
xchg
cli
and
and
push
mov
nop
xlat
mov
pop
sbb
sub
fwait
adc
dec
shlb
push
loopne
pop
inc
xor
ret
dec
push
mov
xchg
inc
or
add
xchg
jnp
mov
dec
mov
gs
mov
jne
outsb
loope
shll
push
dec
pop
sbb
cmc
hlt
pop
push
push
ja
insl
push
and
in
jp
jnp
mov
insb
xchg
les
inc
push
xor
mov
sbb
mov
mov
sub
sbb
filds
add
mov
sbb
imul
jo
in
icebp
pop
stc
mov
xchg
mov
lcall
lds
push
in
bound
loop
addr16
nop
and
scas
stos
or
test
or
scas
xchg
ss
sbb
jge
jae
mov
aam
shr
dec
ret
outsb
pop
in
or
in
mov
mov
dec
cli
mov
enter
mov
or
filds
inc
push
mov
mov
lret
push
mov
lock
xor
enter
mov
into
jl
push
jae
test
aaa
sti
mov
cltd
lods
ficoms
pop
iret
sbb
cmp
clc
fcmovnbe
or
into
sub
mov
add
mov
or
add
in
mov
jmp
pop
imulb
mov
dec
cmpsb
add
or
ret
iret
add
xor
jno
cmp
je
fsubrs
and
inc
pop
xchg
adc
mov
lret
hlt
or
mov
push
dec
inc
xchg
lods
faddp
notb
dec
rorb
fs
je
and
lds
mov
or
add
cmovle
pop
or
daa
iret
add
icebp
add
movsl
push
sbb
shll
insb
dec
adc
popf
inc
xchg
mov
adcl
push
scas
cwtl
mov
mov
xchg
push
or
xor
push
mov
xor
clc
lea
sub
repz
xor
das
pusha
xchg
adc
pop
jle
lock
cli
pusha
mov
push
test
push
movsl
jmp
in
test
dec
add
jb
push
outsb
add
pop
ret
sub
lret
fcoml
add
pop
mov
test
lods
scas
mov
or
iret
ds
fistl
lret
aam
xchg
push
push
push
int
sbb
dec
mov
mov
sub
loopne
js
push
and
into
popa
incb
lcall
in
jb
xor
je
ret
adc
in
stos
and
cwtl
pop
bound
push
fstpl
mov
iret
or
xchg
add
pop
ds
cmp
jbe
orl
push
test
daa
xor
hlt
stc
inc
xor
shr
mov
or
jne
xchg
lds
push
mov
cmp
scas
jns
sbb
les
mov
mov
pusha
and
push
cmp
sbb
mov
ret
ss
dec
cmp
sub
mov
sub
test
xchg
hlt
lds
fcmovu
adc
hlt
cmpsb
sbb
jle
aad
jno
mov
inc
out
or
aam
mov
sub
fsts
cld
int
cmp
repnz
mov
decb
pop
add
in
pop
cmpsb
jne
rorl
repz
mov
mov
in
sub
xor
aad
and
adc
inc
push
rcrb
in
and
push
dec
testl
ret
repz
loop
nop
into
insb
mov
adcl
fcoml
pop
test
mov
idivb
and
xchg
xchg
jp
mov
xchg
sbb
hlt
cld
sub
cmp
pop
xchg
pop
pushf
popf
mov
sbb
dec
mov
push
adc
insl
xor
mov
add
mov
popa
jae
jmp
xlat
xor
or
subps
test
adcb
sti
mov
mov
jg
pop
mov
xlat
and
jbe
cmpsl
stc
mov
dec
or
add
repz
test
inc
in
test
xchg
out
int3
dec
addr16
clc
lock
pop
push
test
movsl
out
xor
pop
ss
add
jb
jp
jl
daa
cmpsb
xor
xor
adc
fldcw
mov
mov
ret
mov
negb
arpl
cmp
pop
pushf
sbb
mov
pop
inc
scas
cs
xchg
push
movsb
and
ss
and
mov
xor
loop
push
add
adc
cli
mov
imul
fistpl
cs
or
cltd
insl
mov
scas
mov
ds
add
adc
scas
sahf
xchg
xor
mov
push
ret
adc
popa
jae
mov
mov
hlt
test
aad
inc
ljmp
cmc
inc
sbb
xor
in
mov
andb
mov
icebp
adc
popa
jecxz
mov
or
push
mov
inc
mov
fldl
test
and
or
sbb
je
jb
add
insl
ret
int3
imul
lds
repz
fistps
fnsave
adc
dec
jbe,pn
jmp
aas
add
enter
fnstsw
outsb
cmpsl
movsb
or
das
xor
out
mov
push
jb
push
add
sub
ret
mov
lods
mov
lahf
jae
aad
fnsave
repz
adc
dec
xchg
pop
inc
sti
jecxz
add
pop
push
aad
and
sarb
push
and
addr16
dec
repz
xor
jns
or
loop
in
stos
xchg
stos
sahf
jp
xchg
cltd
cmp
push
rorb
and
mov
xchg
mov
movsb
pop
push
rcll
jg
jmp
or
hlt
xor
movsb
cs
mov
push
sbb
and
or
aaa
ja
divl
jecxz
inc
insl
andl
addr16
xor
mov
and
mov
cmp
or
outsb
fisubl
xor
hlt
fistl
push
movsb
notb
jns
and
loope
sahf
jmp
sbb
insb
stos
jecxz
and
popf
sbb
xchg
push
mov
cmp
sahf
cwtl
out
xor
mov
jno
cmp
enter
pop
dec
test
xchg
cmpsl
pop
cwtl
negl
inc
xchg
movsl
mov
mov
in
roll
int
cli
sbb
adc
scas
adc
add
and
xor
dec
in
mov
mov
jle
push
lret
jp
aaa
out
in
jns
and
cmp
cmpsl
xchg
cmp
cltd
sub
pushf
out
lods
clc
mov
sub
xlat
mov
insb
lock
shll
out
inc
jnp
xlat
jne
lods
data16
andb
mov
mov
outsb
repnz
clc
sub
js
or
dec
push
stos
stos
inc
xchg
lret
jle
sbb
adc
stos
or
pop
jge
push
jne
lcall
out
ret
adc
or
decl
mov
mov
dec
add
add
inc
repz
mov
das
dec
out
lcall
sub
xlat
mov
es
fiadds
push
aaa
ja
add
and
inc
sbb
sbb
mov
aad
lds
adc
xor
movb
ljmp
adc
push
ljmp
pop
scas
leave
data16
sbbb
rol
aad
jne
subl
cwtl
xchg
test
push
daa
cmp
adc
nop
add
lods
jl
pop
addr16
inc
jno
sti
jecxz
and
mov
test
daa
fcomps
jnp
push
pop
pop
push
xlat
in
lea
jge
xchg
mov
add
sub
jnp
test
inc
out
das
shr
sbb
mov
mov
sahf
bound
push
xchg
out
cli
mov
or
and
xor
test
js
cmp
lock
push
movsb
inc
sub
lds
out
or
dec
rorl
jg
sub
notb
add
imul
push
cltd
fstps
fsubp
repz
sbbl
jnp
add
into
shll
imul
mov
mov
fstpl
test
mov
xchg
repz
std
dec
cmc
jae
test
xor
stos
movzwl
inc
adc
xchg
xor
and
imul
push
adc
cltd
sub
insb
ret
mov
test
and
xor
push
fstps
push
aaa
add
cli
xchg
out
push
mov
mov
and
mov
xor
push
xor
push
jo
jns
push
imul
jnp
stc
or
xor
xchg
into
adc
adc
or
cmp
or
test
dec
nop
sbb
sarl
adc
cli
imul
lret
cmp
sub
call
mov
jle
pop
mov
loope
jl
sub
ret
push
cmc
mov
jl
popa
incb
pop
pop
ja
xor
push
rorb
stos
test
or
add
pop
rdmsr
les
push
cltd
sub
cli
aas
push
jne
add
sbb
add
cmpsb
outsb
lcall
xor
xor
movsl
fisttps
fwait
and
jae
xor
sbb
adc
push
pop
and
sahf
mov
sbb
mov
mov
lds
sbb
inc
lret
lret
in
push
into
cmp
fnstenv
jb
xchg
cmpsl
out
or
adc
dec
mov
inc
fcoml
cmp
outsb
les
xor
mov
outsb
jnp
xchg
loopne
sub
inc
or
sub
xchg
sbb
mov
sub
fs
mov
and
mov
mov
loopne
mov
push
fidivrl
push
cli
pop
add
fwait
inc
xor
push
shrl
ss
add
mov
jb
insb
ret
cmc
push
outsb
dec
out
rcrl
mov
xorb
mov
cmc
and
aas
call
lahf
ret
nop
push
outsl
and
inc
adc
or
imul
mov
ret
je
mov
outsl
cmpl
in
inc
ss
cmpsl
sub
xchg
hlt
and
pop
jb
adc
sub
cmpsl
sub
mov
pop
jp
adc
cmpsb
cmp
cmc
and
mov
pusha
int
xor
jmp
cli
shlb
neg
test
lods
jecxz
in
in
mov
lret
xor
xor
push
mov
jb
loop
and
daa
mov
mov
daa
cmp
pop
loop
jge
push
and
cmp
aam
aas
cmp
mov
pushf
mov
filds
mov
in
xor
push
xchg
jbe
lret
hlt
add
sub
rol
iret
pop
inc
push
adcb
dec
pause
std
sbb
and
push
daa
cmp
mov
pop
fucom
mov
inc
imul
popa
cs
xor
xchg
pop
fmuls
daa
mov
mov
pop
push
mov
ror
pop
adc
jmp
jg
jp
cmpsb
shll
sub
adc
lds
dec
lcall
inc
mov
sub
mov
sbb
inc
mov
cli
sbb
add
or
xor
subl
mov
dec
push
fwait
add
pop
cwtl
cs
xor
jmp
sti
sub
xchg
xchg
push
insl
js
insb
sti
inc
mov
xor
outsl
pop
inc
call
add
fldz
jns
sub
mov
mov
add
cmp
mov
sbb
inc
std
sbb
icebp
into
jl
xchg
lods
adc
sbb
rorb
adc
mov
inc
mov
nop
fs
int3
mov
ja
mov
test
ret
vcvtpd2dqx
xorb
repnz
mov
arpl
pop
inc
iret
sahf
jae
pop
dec
popa
arpl
cmpsl
adc
adc
imul
pop
shl
call
pop
mov
shl
negb
adc
sbb
dec
sub
out
push
push
mov
mov
movsl
lock
test
jbe
loope
cmp
shlb
inc
dec
sarb
out
jle
pop
test
lods
mov
xlat
sub
pop
xchg
aad
jo
push
push
inc
sbb
dec
inc
pop
adc
dec
cs
jp
std
xchg
mov
aad
stos
cld
das
fildll
adc
sahf
adc
in
and
nop
cld
mov
sti
pop
cmp
xor
mov
adcl
repz
scas
arpl
daa
inc
jno
gs
in
push
fildl
sbb
imul
lds
ljmp
xchg
cmpsb
mov
and
add
je
mov
movsb
imul
add
aad
shrl
and
orb
or
jb
enter
and
pop
scas
cmp
outsb
repz
loope
mulb
jo
out
in
push
dec
xor
cltd
add
cmp
adc
icebp
pop
stos
arpl
ds
scas
sbb
call
sbb
into
dec
test
imul
cld
sub
mov
ret
push
lods
add
fdivrl
lods
ret
cli
nop
shll
movsl
adc
clc
aad
and
push
push
add
and
cli
push
pusha
sub
mov
lea
negb
and
data16
mov
clc
sub
push
scas
and
mov
cs
xchg
mov
push
adc
lods
stc
daa
insl
ret
add
orl
clc
inc
jle
sub
sub
mov
dec
and
arpl
pop
dec
dec
loop
inc
nop
shrb
ja
push
cmp
jb
mov
and
fcoml
mov
aas
out
sahf
xchg
or
cli
int
sbb
sub
ficomps
dec
cmp
rcrl
or
out
jmp
push
push
pop
in
repz
add
jnp
scas
test
icebp
movsl
cli
xor
or
inc
dec
inc
pop
cmp
jae
sahf
jbe
sbb
out
pop
lods
jp
stc
xchg
subb
cli
adc
sahf
and
lahf
pop
test
cmp
pop
xchg
inc
mov
repz
cltd
jbe
movsl
es
test
orb
mov
mov
xor
out
mov
or
stc
les
mov
cmp
enter
inc
mov
cltd
dec
sbb
test
pushf
nop
test
repz
arpl
push
adc
lret
js
rcl
xor
mulb
push
popf
xchg
shlb
pop
xor
insb
aam
pop
adc
enter
xor
cmp
mov
stos
adc
mov
hlt
dec
fsubr
fidivs
xlat
xor
mov
cmp
dec
pop
dec
cmc
popa
inc
insl
cltd
pop
into
sbb
dec
data16
popa
js
push
cmp
push
cmp
dec
pop
sbb
jb
xchg
jne
or
fmuls
or
add
pop
mov
je
inc
leave
lcall
ret
out
dec
je
sub
ss
pop
jnp
push
xor
popa
stos
nop
movsb
xchg
pop
inc
mov
adc
xchg
je
movd
into
test
aad
std
movsb
dec
les
mov
hlt
lds
jbe
adc
into
scas
aad
xor
stos
in
push
outsl
jns
loopne
mov
in
push
aas
sub
idivb
mov
jg
sbb
lock
jbe
sbb
adc
sbb
call
mov
ljmp
or
movsb
lret
inc
dec
lods
shrl
xchg
sbb
mov
mov
mov
cltd
sub
in
pusha
cmp
stos
mov
rclb
daa
movsl
jecxz
lea
enter
add
xchg
fs
sahf
lret
xchg
mov
je
add
mov
jge
dec
push
popa
cmpsl
inc
or
gs
cltd
subl
sbb
or
jb
cmp
mov
shlb
fidivrs
in
sub
decb
sbb
daa
sub
sbb
jne
jmp
push
pop
ss
jl
sbb
lods
movsb
push
sahf
lock
mov
mull
testl
mov
xchg
or
loopne
outsb
outsb
add
test
enter
loopne
xor
cmp
xor
sub
or
xor
dec
lcall
pop
push
push
xchg
push
mov
out
shll
cwtl
inc
pusha
mov
das
mov
cmp
lret
mov
cld
push
shrl
movsb
push
xchg
xlat
cltd
sub
mov
sbb
and
xor
push
fwait
inc
xchg
jbe
out
fsubs
sti
sahf
shr
mov
in
enter
ss
mov
adcl
jne
stos
into
cmp
sub
jp
in
dec
negl
ret
cmc
jbe
je
mov
jmp
adc
fbstp
icebp
stos
or
and
leave
cld
mov
jno
movsb
dec
mov
xor
push
stos
std
jg
push
adc
decb
cli
sub
push
cmp
loop
outsl
nop
jl
pop
repnz
cmp
mov
and
leave
xchg
sbb
mov
jmp
mov
pusha
ljmp
cmp
xchg
jae
es
mov
loope
or
loope
push
cmpsb
fidivl
jle
xor
sarl
jne
mov
jg
test
movsl
add
pop
sete
sti
xor
int3
xor
int
jnp
outsl
cmp
faddl
add
cld
ret
jnp
dec
dec
js
jle
inc
mov
rcl
int
add
or
shl
push
outsb
xlat
xor
arpl
or
jl
pushf
pop
addr16
insb
push
sbb
xchg
test
sahf
fildl
inc
cmc
add
fisttpl
dec
call
mov
subb
mov
call
das
out
mov
ror
inc
xchg
lret
or
push
jno
in
inc
or
cwtl
add
xchg
mov
into
test
fs
xchg
adc
push
adc
lds
mov
ss
dec
sbb
push
popa
sarb
enter
arpl
mov
sbb
jmp
mov
or
push
or
bound
jbe
cmp
jmp
xor
sarb
sub
out
jnp
movsl
push
ds
mov
mov
test
jle
stc
std
and
stc
aad
fildl
cmpsl
fidivrl
sub
and
push
or
push
and
lret
sub
dec
popf
dec
push
dec
jne
push
rcll
aaa
pusha
cmp
js
ret
xchg
or
aaa
lods
in
jne
out
andb
pop
rorb
add
adc
adc
inc
testl
push
xchg
add
jl
movsb
popf
add
mov
and
pop
fwait
or
jns
push
rcl
inc
sbb
push
push
add
inc
jo
and
pusha
mov
dec
out
rclb
mov
mov
sbb
xor
in
subl
cs
enter
sbb
add
jb
mov
test
mov
cld
and
mov
fstl
sbb
lahf
loope
push
pop
sub
mov
in
jge
cmp
jb
cmpsl
das
inc
rorl
add
test
jmp
icebp
cs
cmpb
jno
movsl
shll
jno
addl
fs
xor
mov
imul
jg
fidivrs
inc
jae
xor
pop
filds
inc
add
push
xchg
push
pop
es
mov
add
aas
sti
pop
push
roll
xor
jmp
cli
andl
es
inc
pop
icebp
fcmovne
leave
xchg
inc
out
cmpsl
lock
out
adc
in
and
push
stc
sti
imul
das
sahf
out
ds
push
dec
cmpsl
adc
stos
xor
test
arpl
jno
rcl
pop
pop
sub
fs
in
push
adc
and
or
cmpsl
ss
xchg
mov
mov
mov
sahf
xchg
imul
lahf
and
mov
stc
enter
fs
or
pop
iret
ret
mov
mov
push
out
sbb
jnp
or
and
dec
mov
xchg
sbb
mov
movsb
pop
stc
mov
ss
shrl
mov
test
aad
in
dec
pop
andl
js
mov
imul
or
idiv
sbb
imul
scas
fs
mov
sub
pop
xchg
pushf
into
mov
mov
rorb
and
inc
fcmovnbe
imul
lea
xor
das
rclb
mov
xchg
jl
mov
out
loopne
mov
inc
jno
jae
xchg
addr16
arpl
jo
and
rcrl
inc
or
jmp
cmpsl
fimull
fildll
jp
jp
sub
vxorps
aad
or
ss
mov
in
xchg
push
jns
mov
push
mov
xor
jb
testl
movsb
decb
jge
loopne
imul
and
cmp
push
mov
cmpsl
and
int3
cltd
push
js
clc
clc
icebp
pop
insb
test
or
lea
mov
inc
dec
lahf
mov
fldenv
into
push
mov
sti
sub
cltd
fldl2e
fwait
dec
iret
test
cwtl
sbb
jmp
test
loope
fisubs
add
pop
xor
fadd
push
mov
imul
leave
mov
jae
mov
js
inc
dec
and
js
push
int
loopne
cltd
jp
leave
or
orl
leave
pop
mov
push
idivl
mov
dec
sarb
xor
stos
scas
inc
aaa
lds
int
pop
aas
mov
xchg
mov
sub
in
repz
mov
popf
xchg
dec
sub
xchg
dec
mov
jp
xchg
cltd
push
pop
xchg
shlb
sbbb
pusha
ret
jg
pop
xchg
xchg
sarb
sbb
dec
fisubrs
fucomi
das
or
sahf
fnstsw
mov
sub
in
mov
mov
ja
or
repz
xlat
ds
sub
mov
cmpsl
mov
mov
test
ds
test
inc
xor
pop
xor
shll
pop
inc
ljmp
fdivrl
jnp
fisubl
inc
aas
hlt
add
sub
stos
cltd
lret
in
aaa
pop
jne
subl
rclb
sti
das
scas
jo
loope
idiv
pop
mov
ljmp
push
xlat
inc
inc
inc
inc
cmp
mov
dec
and
imul
xlat
lcall
roll
jns
and
mov
xor
mov
pop
mov
ljmp
imul
fdivrs
dec
icebp
fnsave
pop
push
push
in
xchg
dec
sub
cmp
out
mov
push
sub
xchg
fstpt
fcompl
cmp
push
sbb
lods
or
cmp
jmp
imul
int
pop
rep
inc
mov
adcl
mov
inc
and
adc
loope
test
call
orb
cmp
hlt
mov
cmp
jb
data16
gs
or
xchg
pop
jo
jne
add
ret
mov
mov
fs
sarl
ret
outsl
fcomp
pushf
inc
in
ljmp
scas
out
outsb
push
inc
mov
pop
loop
sbb
repnz
dec
test
mull
in
loope
xchg
sbb
mov
jecxz
xchg
fimull
sbb
or
daa
lahf
cmpsl
sub
jae
out
xchg
les
stos
lock
jno
cmc
push
mov
mov
scas
in
mov
std
out
popl
ret
loop
or
jg
lcall
and
fisttpll
jl
into
mov
inc
jo
addr16
mov
cmpsb
pop
outsl
adc
adc
callw
push
es
sub
and
scas
cld
test
mov
ret
cmp
jmp
dec
ds
rorl
xchg
std
fsubl
out
xchg
push
subl
sbb
ja
cmp
push
and
dec
loop
push
es
sbb
mov
push
data16
stos
sarb
stos
dec
dec
add
pop
out
fs
and
jge
mov
cld
stc
mov
je
pop
loopne
rorb
push
and
icebp
jbe
mov
sbb
fiaddl
nop
mov
gs
stos
outsl
aaa
push
mov
xchg
adc
mov
and
stos
sub
add
pop
jmp
adc
xor
dec
or
fildl
and
loope
cmp
fistl
push
cmp
jo
sbb
repnz
pushf
mov
loop
fbstp
push
sub
scas
aad
les
adc
xor
ds
sub
fcmove
dec
popa
mov
clc
out
repnz
dec
inc
pop
clc
test
jecxz
mov
inc
mov
leave
push
cli
sub
loop
test
push
es
cli
xchg
jmp
dec
jle
pop
or
jnp
inc
loop
rcr
xor
popa
fimull
jo,pn
ja
push
stos
hlt
sub
push
lods
daa
pusha
jecxz
lock
pop
xchg
mov
in
sbb
cmp
xchg
testb
dec
dec
in
mov
outsl
add
out
sbb
decb
push
cmp
lret
popa
iret
fsubrl
leave
push
xor
push
int
cmp
in
xor
les
repnz
call
shll
aam
push
cwtl
jno
inc
cmp
mov
inc
rcll
push
mov
sbb
loope
insl
iret
test
jne
jge
negb
inc
mov
xchg
mov
jbe
push
lcall
movsb
or
aaa
cmp
xchg
sbb
dec
out
cmp
mov
mov
add
adc
das
dec
sahf
dec
out
imul
loop
jecxz
aad
flds
jmp
out
pushf
push
sbb
fsts
je
adc
push
fildll
hlt
push
cmp
rdpmc
lret
xor
mov
lods
push
mov
fs
mov
imul
jl
into
sub
enter
cwtl
arpl
cmp
jmp
addr16
jp
cmp
icebp
ss
movsb
hlt
push
lods
jno
scas
jecxz
imul
cmc
xchg
insb
push
xor
jae
pop
insb
xchg
mov
daa
inc
mov
in
add
scas
mov
dec
loopne
xchg
fistpl
test
add
sbb
xchg
jnp
arpl
or
outsl
mov
jge
mov
add
sub
cld
or
pop
data16
add
mov
mov
push
jne
xchg
jle
fcoml
push
or
lods
mov
addl
jecxz
pop
pop
mov
into
add
out
lods
hlt
cmp
cmp
push
pop
dec
jmp
stos
pop
dec
mov
xchg
cmpb
jg
cmp
cwtl
insb
or
out
xor
push
icebp
or
in
dec
jge
and
pop
and
add
aaa
js
scas
cmp
pop
add
out
sbb
xchg
xchg
ffreep
and
loope
jns
es
dec
cmpsl
adc
pop
or
orb
fsts
mov
jns
cmpsb
out
mov
test
and
in
ss
jle
cmp
bound
mov
in
fisubrs
rcrb
mov
ds
inc
xchg
sahf
fsts
inc
pop
push
insl
ss
aas
rcr
cmpsb
mov
insb
pop
mov
add
and
pusha
divb
mov
jecxz
pop
pusha
inc
cmp
sbbb
adc
mov
lcall
stc
cmovp
xor
addr16
rcrl
inc
fstpl
adc
mov
dec
repnz
lret
sub
scas
pop
inc
sbb
dec
xor
roll
sub
sbb
add
inc
add
repnz
lods
arpl
jp
push
jge
inc
mov
imul
sub
mov
sbb
es
xchg
roll
out
or
lcall
or
mov
adc
or
popa
fucomip
movb
mov
arpl
add
add
clc
or
mov
fwait
fcoml
data16
fdivl
fdivrl
sbb
mov
call
call
pusha
mov
dec
jmp
gs
mov
adc
mov
lahf
cli
sub
xchg
sbb
sbb
ss
cwtl
and
mov
cmpsb
repz
push
jbe
inc
inc
push
dec
adc
in
add
pop
hlt
insb
cmp
mov
loopne
or
pusha
ret
ret
or
outsl
jl
mov
add
pop
ss
stos
sahf
cmpsb
add
pop
scas
jp
sahf
cmpsl
xlat
mov
out
mov
ret
outsb
mov
test
aaa
out
inc
pop
popa
mov
cmp
add
data16
inc
sbb
sar
int3
adc
icebp
hlt
sbb
mov
lods
loopne
xor
xchg
mov
adc
scas
mov
es
arpl
push
sbb
push
mov
dec
jae
ficoml
aam
jecxz
dec
push
ds
ja
inc
sbb
pop
jg
lcall
dec
pop
cmp
and
arpl
lahf
cmpsb
pop
adc
fsubs
jnp
aam
xchg
imul
jns
cli
in
sub
mov
les
out
xchg
pop
inc
sti
out
dec
and
out
in
mov
outsl
aad
ss
sbb
or
cld
xchg
pop
insb
xchg
out
or
mov
xchg
add
mov
dec
in
push
xor
adc
jge
xorl
roll
xor
lcall
mov
pusha
jl
aam
adc
lods
xor
cmpsb
popf
xbegin
mov
cwtl
xchg
mov
sahf
or
fwait
pop
jle
out
or
ss
sbb
subb
fs
aas
mov
cmp
sub
outsl
loopne
outsl
sbb
jmp
xlat
fs
mov
pop
repz
pop
xor
movb
es
cld
mov
fstpl
scas
mov
sbb
inc
dec
in
push
sbb
test
out
repz
inc
stc
aad
cwtl
sbb
fs
sar
je
jno
fldcw
lret
in
test
cmp
mov
loop
jnp
sbb
pop
add
xorb
cmp
in
mov
mov
fldenv
jl
out
testl
in
mov
pop
loop
dec
jg
lock
push
adcl
in
mov
jne
mov
dec
loop
inc
cmp
sub
jnp
out
push
repnz
mov
sti
mov
push
push
iret
jecxz
dec
dec
dec
mov
cmp
mov
decb
dec
adc
mov
imul
cmpsb
sti
aam
les
pusha
test
jg
sbb
subl
xchg
into
sub
xlat
xchg
ffree
push
testl
dec
idivl
xchg
jb
mov
mov
fxch
and
js
cmp
sub
fisubs
js
sub
je
or
adc
xor
stc
cltd
ret
imul
xor
enter
push
xor
push
adc
arpl
pop
daa
test
and
gs
ljmp
pop
ret
iret
test
lods
ljmp
shlb
or
jns
in
xchg
test
stos
mov
inc
mov
sbb
lds
adc
sub
cmp
xchg
out
mov
dec
pop
add
xchg
je
mov
into
add
in
in
aam
jne
jp
aas
xchg
fucomi
sub
sub
shrb
push
xchg
adc
aaa
aam
cld
add
jns
loop
sbb
loop
jecxz
lods
rol
pop
mov
lret
and
repnz
pop
lods
pop
jbe
mov
push
jne
xchg
frstpm(287
rcrb
lret
in
lret
sbb
fisubl
cmp
cld
pop
cmp
mov
out
fistl
xor
movsl
push
imul
scas
mov
popa
add
cmp
pop
mov
test
jbe
nop
mov
pop
add
pop
or
or
out
popa
shlb
cmp
add
inc
adc
sbb
and
lcall
fdivp
xchg
or
inc
pop
jae
xor
outsb
in
jg
mov
movsb
in
mov
or
stc
sub
lret
lcall
das
cmp
pop
scas
xchg
jecxz
xlat
sub
pop
aas
cmpsb
ja
in
push
pop
jnp
popa
aaa
mov
roll
mov
inc
pop
int3
inc
cmpsb
dec
jge
inc
insl
mov
out
jne
rorb
mov
push
movsb
sbb
mov
addr16
call
lahf
xor
fcomps
in
ss
arpl
loopne
dec
fisttps
ficoml
rorb
sbb
rcll
mov
vpaddusw
xor
lret
loope
testb
shrb
xchg
dec
jae
icebp
rcl
popa
sub
push
inc
bound
sub
xchg
aad
pop
jno
xor
mov
in
cmp
xchg
push
outsl
pop
es
xor
test
repz
insl
inc
stos
push
into
pop
or
sub
inc
test
pushl
lods
push
cmp
icebp
add
sub
pop
in
jnp
leave
adc
jne
jmp
cmpl
pop
dec
ret
sub
mov
mov
inc
pop
xor
bound
mov
mov
movb
sbb
pop
fisubrs
in
pop
mov
pop
cmp
iret
mov
inc
push
test
imull
jp
call
idivl
cltd
lea
mov
sbb
pop
loope
pop
lret
cwtl
sub
or
sub
sub
out
or
sub
push
lds
push
mov
pushf
and
cmp
mov
daa
daa
push
rorb
xchg
mov
cli
sub
repnz
mov
pop
shrb
xchg
inc
pushf
jno
outsb
sbb
mov
lods
fisttps
ss
inc
lods
mov
call
inc
dec
imul
jnp
js
jl
jb
mov
xor
xor
es
stos
mov
mov
jbe
adcl
dec
lds
sar
and
pop
je
sub
ljmp
cmpsb
pop
add
mov
xor
fisttpll
pop
mov
xchg
pop
std
cmp
sbb
rcl
neg
pop
mov
fldcw
data16
cwtl
mov
ret
push
mov
add
xchg
call
hlt
stc
and
mov
mov
hlt
add
inc
cmpsb
inc
cmpsl
mov
mov
pop
cmpsb
cltd
nop
add
dec
inc
dec
xchg
out
cwtl
in
pop
push
mov
movsb
mov
xchg
push
or
dec
and
jge
adc
sub
mov
add
mov
insb
lods
mov
dec
out
icebp
sub
push
mov
lods
aas
pop
push
push
ja
pop
js
out
scas
lahf
add
xor
mov
packssdw
stc
lds
das
aaa
clc
popa
inc
adcl
pop
push
test
inc
out
imul
pop
in
shlb
cmp
movsb
inc
or
dec
inc
mov
xchg
cmp
jbe
and
pop
loop
pop
fcoml
lcall
mov
pop
and
ljmp
add
imul
cmc
or
xchg
stc
daa
add
mov
mov
pushf
fdivrl
mov
lret
dec
dec
fcomp
cwtl
ror
adc
lret
imul
mov
jae
iret
mov
fwait
lds
fadds
mov
subb
inc
enter
pop
or
call
shll
in
neg
xor
test
loop
pop
dec
pushf
test
sub
push
mov
outsb
add
mov
jmp
mov
inc
xor
mov
adc
push
pop
pop
movsb
les
aam
std
xor
sbb
aam
mov
cmpsb
xor
or
mov
hlt
sarb
dec
shl
dec
jno
push
push
add
dec
gs
push
pushf
out
xchg
pop
jb
cmc
sub
fstps
add
pop
shrb
adc
sub
mov
sbb
mov
in
inc
leave
ret
dec
push
lahf
cltd
fisubrl
into
sahf
ds
outsb
je
push
push
adc
out
lock
or
mov
into
add
les
xor
mov
inc
push
scas
repnz
pushf
ret
stos
icebp
dec
call
hlt
gs
movhps
ja
enter
mov
fistl
mov
repz
xchg
mov
xor
mov
ret
jg
movsb
adc
out
xchg
shr
dec
rcl
push
scas
push
js
dec
lahf
jno
mov
adc
subl
lcall
enter
adcl
in
adcb
je
xchg
stc
clc
xor
pop
xor
lret
test
test
mov
mov
jns
stos
sbb
add
popf
sub
sub
xor
out
lock
inc
int3
jle
or
shlb
push
mov
mov
push
bound
dec
xor
nop
fstpt
xchg
jo
cmp
mov
js
jne
mov
and
insl
fisttps
jg
mov
inc
mov
clc
loope
jae
xchg
pop
imul
ret
ss
shl
jbe
inc
cmp
ja
lds
adc
sbb
jp
jge
fs
lds
lods
inc
sti
adc
ret
jo
mov
aam
imul
cld
cmc
fadd
sbb
fildl
mov
cmp
cmp
aaa
movsl
xchg
aas
mov
jmp
push
out
in
and
xor
xchg
push
repz
push
push
sti
cmpsb
movsb
push
addl
push
push
add
fidivrs
gs
pop
jmp
rcll
adc
andb
icebp
sbb
cs
test
loop
cld
lds
adc
add
mov
adc
daa
sub
or
xchg
push
adc
test
call
xlat
jae
add
decl
xchg
dec
out
pop
test
add
scas
icebp
sbb
das
lcall
add
inc
pop
mov
sbb
in
ljmp
push
sbb
sbb
jge
xchg
repz
mov
cltd
pop
sar
movsb
shlb
mov
sub
jne
mov
cld
sbb
cwtl
lock
and
arpl
pavgb
mov
xchg
mov
addb
xlat
sbb
push
fistl
inc
mov
push
and
add
lods
pop
lcall
push
jp
movsl
push
cmp
mov
or
pop
pop
testl
bound
ja
lret
mov
inc
mov
or
sbb
daa
jnp
sti
test
mov
pop
xchg
cwtl
or
or
mov
add
lods
mov
js
sub
es
push
cmp
in
sub
sbb
imul
enter
lds
pop
les
cmp
movsl
add
loope
adc
lds
cmpsl
inc
imul
pushf
push
sarl
sbb
out
jecxz
orb
cmp
popf
jmp
fadd
push
mov
and
pop
inc
dec
jo
xchg
mov
add
push
cmp
cmpsb
adc
nop
sbb
int3
jae
mov
add
dec
cmp
dec
xchg
bound
incl
mov
mov
ret
pop
pop
leave
mov
and
shll
cltd
mov
or
xor
xchg
mov
inc
icebp
ffree
pop
xchg
shrb
jl
dec
loop
or
icebp
jbe
imul
mov
pop
lcall
adc
xchg
sbb
xchg
xlat
rclb
iret
hlt
hlt
or
lds
mov
jns
sub
stos
pop
out
jbe
cltd
add
mov
mov
mov
xchg
scas
push
insb
or
movsl
js
imul
lret
movsl
sbb
sub
andb
mov
push
push
gs
fdivrs
pop
jg
insb
mov
adc
dec
pop
cmp
or
sub
push
repz
jnp
inc
dec
xor
sub
push
or
js
mov
or
leave
aas
fdivl
xchg
ljmp
jae
and
js
mov
cltd
mov
sub
mov
testb
ret
jmp
mov
lods
cmp
push
adc
outsl
xchg
inc
inc
insl
in
cmp
out
popf
imul
test
jmp
shll
jge
lods
sbb
mov
mov
push
cli
adcb
rcll
outsb
in
sti
movsl
push
add
pushf
xchg
pop
in
sbb
add
mov
push
rclb
mov
mov
mov
inc
sti
pop
sub
cmp
pop
cmpsl
ret
sbb
jae
pop
cmp
rcll
xchg
lock
loop
adc
jnp
jno
mov
rolb
je
dec
pop
and
pop
xchg
icebp
daa
mov
test
ja
stos
call
arpl
fstpl
jle
sbb
adc
dec
sbb
repz
adc
out
std
or
dec
push
xchg
sub
xor
dec
pop
movsl
xlat
jecxz
xor
dec
jge
adc
jns
xchg
testl
je
jo
lds
lods
jo
bound
out
loopne
sub
shlb
push
mov
js
lock
mov
aas
dec
cmpsl
add
loopne
sub
sbb
mov
adcl
jmp
daa
dec
das
out
sub
dec
aad
jge
mov
loopne
ss
mov
cmp
shr
outsb
fsubl
mov
testb
sub
cmp
cmp
cmpb
in
xor
call
cli
test
xor
xor
xorl
mov
dec
rorb
inc
xchg
hlt
in
jl
push
jp
push
loopne
mov
xor
iret
jp
dec
mulb
out
cld
out
mov
cmpsl
mov
std
sbb
pop
pop
sub
ficoms
aad
xchg
inc
inc
gs
sub
fwait
les
push
rcrl
jb
sub
inc
pop
outsl
mov
stos
cmpsl
push
dec
test
xlat
jo
pop
and
push
daa
jp
test
push
lret
fadds
jb
or
std
lea
mov
aam
add
and
jb
mov
dec
mov
lahf
xor
insb
lds
add
sbb
or
pushf
ljmp
lret
fistpl
sub
popf
push
cmp
inc
out
cmpsb
rclb
lcall
jl
arpl
cmp
xchg
adc
add
test
mov
cmp
xchg
push
jnp
lret
mov
daa
pop
in
call
sbb
jle
hlt
sbb
xor
das
xor
add
dec
cmp
mov
jg
or
push
shll
push
shll
or
stos
repz
lahf
test
jmp
dec
rcrl
mov
orl
jp
jl
lock
lcall
out
push
and
pop
sub
xchg
fcmovnu
loopne
ret
add
xor
mov
or
inc
icebp
rcrb
push
ljmp
mov
loope
stos
xlat
imul
xchg
rcrl
in
jge
and
xor
mov
xor
inc
push
sbb
aaa
mov
cmc
loope
mov
nop
mov
stc
imul
stos
mov
mov
push
adc
pop
out
push
adc
cmp
popf
mov
or
dec
out
xor
jmp
nop
sbb
push
or
fs
scas
inc
dec
pushf
lret
xchg
and
mov
adc
popa
scas
clc
sahf
je
adc
pop
pusha
popl
bound
clc
icebp
add
inc
ss
xor
adc
cmp
pop
lds
cmp
flds
xlat
or
push
in
jl
and
cmp
cltd
int
sti
leave
and
cli
adc
in
sub
adc
push
mov
ss
jg
imul
add
mov
enter
push
jnp
mov
loope
icebp
dec
adc
popf
fidivrs
out
fidivl
in
gs
clc
lock
enter
fmull
dec
shll
sbbl
or
test
ret
popf
pop
lods
in
push
jo
xchg
mov
and
ds
lock
aam
lcall
sub
gs
xchg
add
aaa
pop
enter
stos
or
add
push
shll
cltd
fmull
orb
inc
push
mov
cli
out
outsl
adc
push
mov
dec
push
push
data16
xor
cli
popf
ljmp
icebp
fwait
cmpsl
jnp
into
jnp
adc
aam
push
push
cld
mov
gs
fs
inc
test
lods
nop
mov
mov
arpl
push
xorb
adc
in
ret
mov
inc
lret
mov
add
mov
mov
adc
adc
pushf
push
dec
ss
sbb
inc
mov
jnp
ret
xlat
mov
cmpsb
jle
mov
sub
jne
mov
and
add
sub
mov
mov
xchg
mov
xor
adc
mov
lds
push
test
mov
inc
in
ret
shll
insb
and
out
mov
xor
lret
pop
xchg
sbb
shlb
jns
jns
stc
or
test
mov
mov
and
jle
arpl
dec
imul
aaa
sti
xchg
dec
gs
loop
in
mov
inc
sbb
push
daa
mov
dec
fmuls
enter
or
mov
lods
ljmp
mov
push
lret
test
cmp
ljmp
cld
mov
mov
mov
lods
fstpl
mov
mov
sub
dec
out
inc
push
out
pop
xor
sub
or
sbb
adc
xchg
test
jb
lock
xchg
mov
into
xchg
aam
in
pop
outsb
pop
in
adc
stos
in
sbb
pop
add
sbb
sub
bound
out
adc
jne
clc
mov
nop
sbb
orl
ror
adc
cmp
inc
mov
cld
bnd
dec
pop
rol
gs
lcall
stos
push
sbb
jle
cli
and
fnstenv
lock
push
pop
adc
nop
mov
and
mov
add
ja
mov
jae
les
pop
push
pusha
pushf
xchg
push
gs
cmp
mov
push
jo
ss
pusha
shrb
sub
loope
out
mov
rcr
idivl
fdivl
lock
test
mov
dec
ds
jmp
not
sub
std
push
push
xchg
loopne
sub
mov
lret
sahf
imul
push
hlt
dec
aaa
jnp
jmp
leave
mov
in
jb
dec
mov
xchg
mov
rcll
pop
pop
mov
cltd
fnsave
mov
pop
inc
xadd
pop
out
xchg
mov
adc
and
xor
dec
in
cmpsb
add
and
gs
aaa
je
out
nop
adc
mov
cmp
test
pop
jno
arpl
add
icebp
adc
inc
inc
cld
jnp
jo
xor
cwtl
addr16
pop
pusha
pop
xor
rclb
xchg
sbbb
adc
mov
pop
je
inc
outsb
outsb
xor
out
pop
or
adc
sbb
bound
xchg
inc
addps
fsubr
repz
add
push
xlat
or
imul
aas
rcrb
jb
pop
and
shl
pop
cmp
push
inc
xor
pop
outsl
jnp
sbb
movsb
int3
xor
cltd
je
adc
mov
js
fsqrt
and
js
sahf
push
dec
sub
add
repnz
popf
orb
adc
jg
movsb
mov
xchg
mov
cmpsl
jbe
jl
adc
lcall
or
subl
sub
test
or
sarl
mov
mov
js
pop
repnz
xor
jae
xchg
les
rclb
push
mov
std
add
loop
jb
lea
stos
jne
jne
mov
inc
bound
mov
mov
lret
sahf
add
sub
mov
stos
push
aad
xchg
sbb
sub
outsl
cmpsb
xlat
mov
sbb
sub
pop
bnd
push
test
lock
cmp
int3
inc
insl
xor
int3
xor
jo
push
add
std
mov
pop
out
xchg
and
lock
mov
mov
mov
push
out
in
divl
rcr
and
sub
adc
mov
cld
jnp
or
adc
aas
or
xchg
lahf
xchg
inc
push
jbe
or
test
pop
ficomps
jne
ret
mov
std
ret
or
sub
int3
push
and
inc
pop
mov
cmp
mov
std
inc
fcompl
mov
pop
jecxz
sub
xorb
sbb
cmpsl
push
rorl
test
int
jp
cmpsl
je
ljmp
int3
push
jns
shr
int3
add
jnp
add
or
test
mov
lret
hlt
lods
push
por
add
xor
mov
mov
cmp
sbb
pop
stc
rep
sar
mov
fbld
scas
xchg
cmp
leave
ljmp
mov
xchg
mov
xor
cmp
adc
pushw
pop
mov
push
ss
outsb
outsb
pop
mov
ret
mov
jne
stos
sbb
imul
jo
cmp
adc
orb
pushf
fdivl
dec
js
ss
pop
lea
std
xchg
popa
mov
arpl
and
add
adc
loopne
ret
iret
jbe
sub
scas
hlt
pop
dec
add
inc
xchg
xchg
cmp
dec
push
pop
addb
fcomps
roll
mov
mov
sub
sub
sahf
add
dec
sarb
xchg
push
inc
ret
cmp
pop
xchg
iret
ficoml
xchg
pop
jecxz
mov
lcall
lea
bound
xchg
cmp
adc
scas
cs
js
lcall
mov
xchg
pop
loope
add
mov
loopne
out
outsb
and
clc
in
jo
int3
inc
ja
pop
push
jmp
push
sbb
fldt
ret
add
add
and
jne
faddl
movl
mov
movsl
fidivrs
ja
sub
xchg
sub
adc
cmp
std
mov
push
cmp
test
xchg
out
repnz
mov
test
lds
pop
xchg
mov
lea
mov
inc
sub
inc
movsl
inc
push
lea
std
scas
ljmp
leave
xchg
out
out
call
hlt
sub
xchg
push
jns
iret
inc
or
fsubrl
jns
addr16
or
bound
mov
scas
jb
sub
pop
sti
int3
mov
std
pop
jo
jb
xor
ficomps
mov
outsl
mov
push
sahf
and
adc
cmpsl
push
cmp
xor
daa
add
mov
pop
repnz
dec
jno
rclb
aam
sbb
cmp
loope
shrl
sub
cltd
out
pop
lock
cmpsb
push
sbb
cwtl
fcmove
pushf
popa
ret
cwtd
jmp
iret
adc
sub
dec
mov
in
inc
push
pop
jle
pop
xchg
mov
or
int
add
pop
mov
cs
js
clc
leave
or
lahf
bound
mov
pop
mulb
daa
cmpsl
push
outsl
pop
daa
jbe
fcmovbe
leave
imul
int
stos
inc
sarl
cmpsl
add
dec
pop
pop
jle
xchg
int3
aas
pushf
shll
sub
add
push
loope
mov
sbb
push
push
cmp
dec
rorl
mov
pop
rcrl
ret
add
push
cmp
xchg
fnstenv
das
fisubs
lret
cmpsl
inc
xchg
and
push
notb
xorb
inc
pop
sbb
and
adc
inc
sbb
mov
push
je
xchg
jp
push
adcb
aam
mov
loopne
insl
stos
ret
mov
xor
or
jb
jne
cltd
xchg
lret
mov
pop
repz
stc
inc
inc
testl
in
adc
push
pop
and
inc
aas
and
fld
mov
stos
mov
movsl
shll
in
dec
mov
repz
sbb
or
mov
lcall
jnp
sub
mov
cld
sub
xchg
inc
jge
add
cs
mov
lcall
lcall
adc
mov
adc
inc
mov
or
xor
cmp
jge
mov
fadd
lret
in
jo
mov
in
jmp
inc
mov
movsl
lds
fdivrl
jl
jl
xor
shr
cmp
cltd
dec
mov
mov
cmpsb
sbb
cmp
shl
cmpl
aad
push
mov
push
fists
fdivp
fisubrl
cmp
mov
lods
fiaddl
xlat
jb
sbb
aam
xchg
sar
mov
xor
aam
mov
bound
ja
xor
mov
pushf
pop
cmc
xor
fiaddl
sbb
dec
cmp
xchg
filds
xchg
xor
fstps
push
inc
mov
test
push
inc
mov
movsl
dec
xchg
addb
adc
sbb
les
mov
mov
in
push
xchg
mov
cmpsl
and
sub
lcall
cmpb
addr16
lods
dec
call
inc
cmpsl
add
dec
push
xlat
das
popf
inc
add
ja
test
pop
repz
sub
fcoml
out
orl
add
xchg
sub
pop
jge,pt
xchg
pop
jecxz
push
add
repz
push
repz
and
insb
repz
pusha
mov
jl
test
and
push
mov
push
mov
insl
push
lds
push
out
pop
fcomps
fwait
xorl
sub
cmpsl
sbb
popf
fwait
mov
into
scas
mov
fs
push
mov
push
jae
test
or
lods
repz
ret
xchg
xor
insb
addr16
mov
pushf
xchg
addr16
or
add
addb
mov
mov
jmp
js
and
clc
cmp
mov
sbb
cmpsb
fwait
push
push
call
pusha
sub
sbb
mov
jge
push
rolb
lahf
jne
push
gs
int3
fs
cltd
lret
ja
int
les
lods
or
decl
sbb
pop
cs
mov
gs
je
fdivrs
dec
cmp
push
hlt
sub
sub
fsubs
idivb
lds
cltd
scas
sbb
aas
repnz
sbbl
fwait
adc
xchg
das
rcrl
imull
push
push
bound
stc
jle
sub
jnp
ret
out
jns
loop
rolb
cmp
mov
or
and
das
andl
and
dec
push
mov
cmpsl
leave
cmpsl
mov
sub
iret
add
out
jl
ljmp
sar
dec
out
cmp
fstpl
mov
lret
movsb
push
push
test
inc
clc
push
sti
roll
fimull
aam
adc
pushf
das
jl
inc
mov
jmp
mov
mov
adc
pop
scas
out
subl
or
fsub
mov
cmp
xor
jns
ss
in
xchg
andb
mov
add
pushf
addr16
insb
cltd
xor
push
fs
jns
inc
mov
pop
dec
hlt
sub
and
mov
test
pop
lret
inc
ljmp
lock
adc
sub
mov
mov
out
lods
push
mov
ljmp
pop
jg
add
add
mov
shrl
inc
dec
les
mov
pop
mov
push
outsl
adc
insl
out
int
dec
fdivrs
jg
pop
pop
jns
in
les
xor
adc
or
rcrl
ret
ljmp
cmc
xchg
pop
fwait
or
mov
les
mov
aad
push
es
cli
out
mov
and
xchg
lea
jb
or
add
aam
lods
push
dec
xor
imul
aad
and
adc
pushf
data16
push
aam
fcomp
adc
cmpsl
mov
fdivrp
jo
sahf
ss
inc
sbb
jmp
data16
scas
xchg
and
jmp
cmpsb
adc
xor
pop
jo
lret
mov
ficoml
imul
dec
into
idiv
mov
push
ljmp
jg
pop
xchg
lcall
movsb
or
repz
insl
and
mov
jb
push
and
ss
testb
pushf
xchg
std
xchg
jp
sub
in
daa
mov
push
out
imul
lcall
ror
xor
xchg
adc
dec
xor
cmpsl
mov
jno
cmc
aas
mov
xchg
jp
push
and
fistpl
push
jae
pop
loope
mov
stc
fwait
enter
loop
test
push
inc
sbb
test
call
and
and
test
data16
xchg
jge
add
stos
into
or
mov
inc
std
and
xor
cmp
das
mov
mov
pop
dec
pop
or
pop
xor
mov
jno
xchg
das
bound
add
scas
addr16
lcall
jl
sbb
push
sbb
push
mov
add
into
mov
jecxz
cltd
fisubrl
cmp
int
scas
pop
fldenv
mov
add
loope
sti
fcoms
sbb
dec
dec
jb
or
mov
push
stos
cmp
xor
adc
xchg
cs
stc
push
dec
and
icebp
jecxz
aad
xchg
pop
mov
hlt
inc
je
dec
or
push
sub
imul
insb
jmp
xchg
sbb
je
bswap
lcall
daa
push
pop
ljmp
add
sarl
js
ds
sti
lcall
scas
mov
loope
mov
mov
adc
lahf
or
pushf
cmc
out
iret
jbe
cld
fadds
nop
ret
lret
sbb
mov
jns
lock
fimull
xchg
jmp
push
pop
pop
aad
aas
roll
ljmp
mov
mov
mov
cmp
outsb
cmpl
loop
ja
nop
insl
scas
or
or
nop
fcoms
add
or
insl
cwtl
pop
popa
xchg
push
xchg
push
nop
pop
jmp
push
add
push
cs
mov
mov
fwait
leave
xor
adc
shrb
sub
std
das
mov
mov
add
shrb
and
inc
iret
cmp
mov
shlb
and
or
lahf
xchg
add
scas
xchg
add
and
in
aam
cmp
cmpl
mov
ja
sub
dec
inc
sub
adc
arpl
data16
ljmp
mov
jbe
mov
scas
sbb
jne
pop
leave
fimull
lds
std
inc
push
fs
jp
stos
sbb
fsubr
mov
pop
dec
movsb
movsb
cmp
xchg
cmp
xchg
test
push
pusha
pushf
push
lods
cli
xor
pop
shl
in
jmp
cmp
pushf
jbe
repnz
insb
sub
xor
je
lret
fwait
jp
test
add
push
dec
cli
pop
mov
push
test
mov
sbb
aas
fimull
mov
pop
push
enter
das
jns
insb
mov
jbe
sub
pop
aaa
pop
jg
xchg
push
pop
repnz
out
mov
arpl
adc
xchg
mov
das
jecxz
repz
clc
leave
fisubl
dec
adc
in
jo
mov
ret
shlb
stos
mov
neg
dec
mov
pop
in
pushw
jg
in
lds
jmp
movhps
and
xchg
in
mov
jb
mov
sub
ret
lret
lret
pop
xor
in
lret
scas
xor
mov
jmp
addps
leave
cmp
mov
mov
xchg
loop
dec
lock
and
xchg
add
cmp
enter
lret
mov
cmp
cmp
jnp
les
push
daa
cmp
pop
arpl
out
js
inc
mov
cmpsb
jbe
mov
sti
stos
dec
dec
and
faddl
iret
jne
dec
adc
les
out
xchg
dec
pop
popf
sub
sahf
imul
jge
pop
in
das
pop
jo
mov
gs
rorb
fidivrs
lret
lahf
shr
mov
into
dec
jl
scas
xor
into
mov
fistpl
jecxz
and
inc
pushf
lock
xchg
inc
out
adc
in
push
popa
pop
jmp
adc
jne
sbb
add
add
mov
mov
xor
add
sbb
in
gs
das
push
sti
xchg
pop
cmpl
mov
test
add
outsb
mov
xlat
mov
cmpsl
inc
rolb
mov
mov
js
insb
cwtl
cmp
les
arpl
cmpb
and
bnd
mov
mov
xchg
aad
cmp
xor
aad
push
lds
fdivrp
mov
pop
pop
xor
pusha
fstcw
and
dec
lret
mov
ja
pop
mov
leave
sbb
adc
das
cmp
cmpb
leave
nop
adc
jmp
cmp
ret
lods
test
xchg
mov
or
pop
jmp
jle
out
scas
cltd
push
stos
cld
clc
pop
push
or
xor
in
in
lock
and
jle
dec
test
sahf
rorb
xlat
xchg
outsl
mov
int3
jl
out
xor
adc
or
adc
mov
adc
add
cwtl
adc
xchg
repz
dec
cmp
dec
xchg
xor
orb
je
std
push
popf
dec
cmp
pop
test
jne
icebp
sbbb
imull
insl
pop
rorl
mov
sub
pop
inc
daa
insl
xchg
clc
cmp
fwait
mov
or
push
aaa
mov
or
es
inc
mov
push
mov
leave
inc
dec
mulb
out
jo
cmp
pop
cli
sbb
mov
cs
std
or
fists
aad
xor
data16
mov
test
data16
cmp
inc
jmp
lret
mov
js
and
jecxz
and
mov
inc
test
xor
add
flds
in
sti
xor
fstps
ds
mov
dec
and
dec
aad
dec
je
lcall
sti
repz
aam
pushw
inc
add
mov
rorl
scas
pusha
sub
push
add
ret
jo
subb
mov
jl
add
or
les
fstpt
jb
shrb
dec
cwtl
jl
pop
ja
gs
jne
inc
cli
adc
xlat
add
mov
sti
mov
sub
inc
lcall
mov
cmp
lea
mov
xchg
das
dec
cvtps2pd
stos
pop
cmp
fdivrl
mov
loop
cli
xor
repz
je
into
mov
roll
fsts
lea
cmp
xor
mov
js
push
sti
mov
outsl
sub
out
adc
lock
and
std
jecxz
rcrb
jae
call
or
pop
mov
jns
cmpsl
pop
pop
repz
xchg
mov
movsb
push
jge
xchg
incl
sub
cld
out
cmc
and
fistpll
mov
jmp
in
mov
push
jb
stos
ret
or
mov
mov
fisubrl
fsubs
jo
jp
and
imul
adc
fwait
mov
pop
or
adc
bound
add
enter
xor
movsb
fs
jo
xor
push
and
mov
jge
jecxz
loop
clc
mov
nop
xchg
pusha
jmp
insl
stos
xor
inc
ja
dec
pop
insl
mov
loopne
int3
enter
mov
add
pushf
lcall
int3
popf
push
jg
sub
das
xchg
lea
pushf
xor
icebp
jmp
jno
fwait
mov
dec
inc
mov
cmpsl
xchg
mov
fldl2t
into
imul
adc
cmpsb
and
dec
jp
jle
adc
cmp
adc
ss
pop
insb
and
pop
jnp
mov
sbb
mov
jle
fs
fwait
cmp
pusha
out
loop
inc
adc
mov
orb
in
nop
fildll
dec
test
insl
adc
mov
cmp
fstps
ss
pushf
iret
data16
outsl
pop
mov
push
fwait
jle
ljmp
xchg
cmp
fs
jmp
rcrb
aad
mov
jp
inc
sbb
xchg
push
lea
jno
js
sbb
inc
cwtl
out
in
mov
jle
shl
sbb
adcl
lods
loopne
sbb
and
arpl
pop
pop
jecxz
push
and
movsl
push
dec
mov
stos
mov
test
gs
sub
sbb
jmp
add
jno
aas
mov
push
ficoml
aad
rol
arpl
xchg
cltd
popa
cmp
loopne
jb
cmp
mov
dec
in
jo
sub
xchg
jle
test
dec
ret
xchg
or
aam
iret
ret
inc
insl
es
leave
cli
cld
xor
ret
fldl
mov
mov
rcrb
sub
jmp
sahf
bound
jg
or
rcll
adc
push
pop
jmp
lcall
add
lock
pushf
mov
and
pop
and
test
fmul
xor
loop
lods
pop
xchg
insb
jb
adc
arpl
cmp
loopne
jne
push
test
cmpsb
inc
pop
in
clc
lcall
leave
aaa
sbb
es
scas
cmp
inc
mov
mov
scas
mov
flds
push
outsb
cmp
mov
xchg
popf
xor
int
pmaxsw
cwtl
cmc
adc
ljmp
dec
mov
testl
add
jb
mov
cmp
in
or
dec
ljmp
movsb
aad
pop
or
adc
adc
add
jecxz
loopne
jecxz
shlb
mov
leave
mov
ficoml
pop
mov
popa
arpl
or
cltd
scas
sbb
movsb
out
mov
shr
dec
xchg
inc
pusha
pop
aad
data16
sub
mov
jge
inc
jns
shrl
stos
scas
sub
lret
bound
sub
or
divb
jl
fldcw
loopne
xor
lock
rorb
lahf
xlat
jne
xor
add
test
loop
out
leave
fs
lahf
xchg
xchg
add
xchg
xchg
push
sub
mov
pop
shlb
push
shl
mov
mov
and
jge
mov
lret
inc
out
js
cmp
testb
mov
xor
mov
push
cmp
lds
les
pop
in
pop
push
imul
icebp
in
orw
xorb
sbb
xor
in
stos
add
xchg
out
jl
xor
dec
loop
out
cli
and
dec
in
sbbl
and
push
adc
pop
repz
mov
ja
cmp
bound
fcmovne
push
jo
stos
fs
sarl
aam
out
cmp
adc
rclb
mov
fwait
clc
and
or
jno
subl
les
das
imulb
int3
jl
testl
test
push
sbb
clc
adc
sbbb
aaa
or
jl
jle
fadds
or
in
mov
xor
mov
movl
sbb
sarb
ljmp
and
fdivrs
jp
mov
pop
adc
in
mov
sbbb
mov
mov
aas
fiadds
jbe
shrl
xor
out
and
xchg
inc
or
mov
dec
xor
cmpsl
or
mov
scas
push
fisubl
jl
pushf
movsl
add
cmp
pop
test
fisubl
icebp
cli
sub
in
and
jge
fcmovbe
insb
mov
push
mov
inc
rclb
insl
pushf
sti
loopne
push
or
add
pop
push
ficoml
arpl
fmull
cltd
out
mov
shlb
inc
jg
jno
into
je
fnstenv
stos
cmp
jae
dec
sti
rorb
int
lea
add
push
lock
mov
inc
cld
daa
aaa
cmp
push
and
insb
dec
push
pop
rcrb
lea
adc
add
xchg
jl
dec
xchg
je
dec
mov
inc
cmpsb
into
int3
jno
add
dec
cmp
outsb
jmp
xchg
push
mov
xchg
rcll
ljmp
stc
add
cltd
data16
xchg
add
leave
cmpsl
fildl
out
daa
mov
pop
test
sbb
outsb
loop
pop
aas
ja
in
je
es
push
notl
cld
stc
mov
es
pushf
and
sbb
jle
inc
sbbl
and
fs
shl
jecxz
scas
inc
jl
loope
sub
ja
adc
addl
mov
push
out
adc
imul
pushf
dec
fwait
test
adc
mov
jl
xor
cltd
mov
xor
jg
add
sbb
in
lret
incl
dec
lret
xor
and
sub
adc
int
int
cltd
dec
adc
xchg
sbb
sub
cmp
cmp
jns
jecxz
xor
push
xor
fwait
ror
das
sbb
push
mov
pop
inc
aam
mov
push
xchg
push
andw
js
mov
mov
loop
pop
add
pop
ljmp
imul
mov
xchg
mov
pusha
jl
insb
jnp
pop
jecxz
xor
or
lods
inc
sbb
pop
shrb
mov
push
jb
icebp
sbb
scas
xor
add
sub
xchg
lea
pop
shlb
enter
mov
int
shrb
addr16
test
inc
xor
xor
mov
int3
xor
rorb
in
adc
ret
lahf
jp
dec
push
stos
inc
es
push
add
fcomi
arpl
xchg
mov
xor
add
ror
mov
mov
dec
push
xor
inc
xchg
pop
xchg
or
pop
test
jl
mov
pop
mov
sbb
dec
test
sahf
dec
dec
jp
adcb
cmpsl
sub
or
adcl
push
mov
and
mov
fldl
int3
adc
push
mov
jo
cmp
loop
imul
mov
aaa
pop
pop
mov
push
xor
jle
adc
sbb
movsl
xchg
dec
movl
pop
xchg
mov
jns
push
or
leave
push
sub
into
bound
xor
pop
pop
test
and
mov
pop
js
fdivrs
jmp
adc
ss
or
jne
stc
push
gs
sub
or
jno
sbb
adc
push
mov
pop
pop
je
fwait
inc
int
mov
xor
and
sbb
call
or
sti
into
ljmp
jbe
rclb
mov
fldcw
mov
sbb
or
fs
or
cmp
bound
mov
repz
idivl
int
ret
loop
xor
mov
scas
out
sbb
fs
mov
push
cmp
sbb
mov
sbb
dec
popa
or
xchg
mov
rcrl
sub
mov
xchg
or
pop
mov
jg
cmp
mov
out
mov
xchg
add
sub
push
pop
jb
jnp
shrb
cmp
stc
push
jbe
lock
sbb
xchg
xchg
fwait
test
mov
inc
nop
push
xlat
test
add
xor
frstor
and
xlat
iret
adc
pop
outsl
repz
xchg
sbb
jb
xor
lret
jle
sbb
stc
sbb
aam
or
fstl
pop
mov
mov
inc
jbe
arpl
js
and
jno
mov
inc
mov
xor
mov
ret
rorb
lods
scas
push
shll
xor
cmp
push
mov
scas
test
xor
xor
cmp
lds
or
xchg
mov
movsl
xchg
and
repnz
pop
fcmovbe
add
je
xchg
cmpsb
push
jle
add
pop
out
jecxz
mov
mov
xorl
loopne
adc
cmp
movsl
je
movsl
inc
jns
mov
push
fsubs
sti
pop
fcomp
jbe
sub
enter
fldt
cwtl
jns
sub
stos
stc
je
mov
add
pushl
sbb
rcl
and
xchg
jmp
pop
ljmp
push
cmp
xchg
popf
or
outsb
sti
or
xor
jp
in
aas
xchg
ficomps
jp
int
aaa
xorl
jle
xchg
jge
out
xchg
xor
jnp
xlat
mov
in
fs
outsl
adc
inc
sub
xlat
clc
js
negl
add
jmp
aaa
pop
ljmp
inc
jo
repnz
or
mov
lds
inc
fdivr
aaa
xlat
lret
in
sub
fwait
scas
pop
push
insb
cmp
lods
and
cmp
enter
and
cwtl
out
or
mov
sub
imul
ss
push
add
gs
sbb
bound
lods
jp
sub
fwait
push
aaa
lods
cmp
adc
mov
int
cmp
adc
xlat
push
add
jle
mov
push
lea
sbb
adc
cmpl
jb
cmp
clc
cld
pop
stc
xlat
in
xor
push
push
sbb
push
mov
or
pop
adc
inc
sbb
ss
adc
jge
movsb
jp
xor
aam
test
adc
sub
sbb
ret
movsl
fxch
imul
cmc
leave
adc
sub
sub
in
movsb
jno
or
cli
test
dec
fists
enter
jns
xchg
jl
or
addr16
std
mov
push
jb
mov
mov
cwtl
negl
icebp
aam
dec
fs
rorl
ja
insb
sbb
addr16
mov
loopne
push
add
add
add
daa
mov
mov
orb
dec
pop
cs
push
xchg
or
pop
push
and
pop
fisubrs
pop
push
xor
inc
lock
std
sbb
xchg
push
and
jle
gs
cld
dec
lahf
hlt
xchg
lret
shrb
jp
xchg
xor
push
adc
sub
jne
push
shlb
xor
xor
and
sub
rcll
inc
push
ja
cmpsb
testb
jl
ds
cmpsb
mov
adc
or
pop
and
inc
leave
or
xor
push
inc
push
pop
xor
out
stc
pop
shlb
mov
jb
inc
cmp
adc
mov
xor
ja
sbb
pop
loope
cmp
ljmp
sbb
fstl
lcall
cmp
movsb
push
cmc
stos
movsl
in
jae
scas
scas
xchg
push
add
leave
lcall
xchg
bound
mov
ja
jle
icebp
jb
outsb
or
fsubs
sti
dec
ret
mulb
je
xchg
add
subl
pop
out
popf
jmp
aas
lret
push
shll
in
mov
adc
fdivrs
mov
xchg
fiaddl
and
fidivs
rolb
xor
xchg
lea
jmp
pop
ficoms
scas
lock
mov
lcall
mov
imul
sbb
xor
jmp
fldz
cmc
sbb
cmpsl
pop
add
pop
insl
test
shr
pop
xchg
xchg
sub
inc
into
xor
lret
add
inc
mov
pop
into
push
mov
dec
pop
jno
add
imul
es
jp
or
into
out
or
pop
add
mov
rcrl
inc
je
lods
std
in
divl
fs
dec
lret
aad
outsl
test
sub
data16
jge
mov
or
dec
push
and
cld
mov
jno
mov
or
pop
loop
movsl
ror
pop
aam
scas
xor
push
ja
ljmp
inc
filds
pop
ficompl
std
call
add
mov
push
out
fs
jno
xchg
push
cmp
sbb
pop
or
cmp
bound
xchg
mov
mov
and
lcall
mov
push
and
lret
and
dec
outsl
xchg
xor
mov
cmpsb
stos
sub
inc
mov
xchg
ds
std
xchg
xor
xor
movsb
aaa
aas
faddl
cmp
movsb
das
sub
bound
inc
mov
and
xor
cmp
hlt
jg
xor
jne
xor
mov
stos
fcoml
xor
movsb
or
inc
je
imulb
test
ds
loopne
jle
dec
mov
jne
cmc
stos
les
mov
loop
push
insb
decl
lds
push
pop
inc
jo
jle
insb
aam
adc
sbb
shr
int
jg
mov
xchg
sub
adc
cli
cltd
ss
push
loopne
sbb
fnsave
loope
imul
sarl
fistpl
cmpl
dec
xor
and
imul
push
out
insl
and
fbld
adc
sub
cmp
cmp
push
mov
shlb
jmp
adc
sbb
adc
stos
push
outsl
jge
pop
cmp
je
scas
dec
inc
cmc
sbb
mov
xchg
push
dec
and
sbb
push
mov
movsb
xchg
aam
fistl
adcl
mov
xlat
sarl
outsb
std
scas
ss
jecxz
mov
jp
dec
js
insb
add
stos
inc
sbb
mov
xchg
popf
les
cltd
popa
xor
add
inc
sbb
cli
jbe
inc
rcrl
pop
sbbb
cmp
test
rcr
ja
pop
imul
lods
popf
cmpsl
jb
jle
js
shr
xor
lret
mov
and
cmp
shlb
outsl
aas
mov
and
pop
bound
push
add
add
cmp
mov
xorb
repz
sub
lods
in
cmp
dec
push
mov
flds
jb
fistps
dec
aaa
sbb
xor
push
xchg
cmp
pop
sarl
sti
fcomip
and
sub
push
out
out
jns
lods
mov
sarl
rcl
adc
jne
add
xchg
sbb
pop
sbb
ds
sub
lods
aaa
and
xor
adc
sbb
xchg
jecxz
movsl
mov
mov
adc
arpl
jp
mov
sahf
add
pusha
cwtl
pop
xchg
imul
in
imul
dec
mov
ret
mov
sub
in
cld
dec
lret
dec
push
and
xor
arpl
push
jb
mov
jae
insl
mov
repnz
mov
mov
and
popf
jns
mov
jl
push
fnstenv
mov
mov
lcall
shll
ret
loop
xchg
aaa
jae
mov
inc
divl
mov
data16
mov
ja
inc
loope
ret
inc
or
adc
sbbb
pop
enter
cmpsl
fbld
add
dec
add
sti
inc
scas
insb
addr16
sub
push
mov
mov
outsb
jl
push
xor
addb
mov
cmpsb
push
lock
ss
outsb
movl
loope
out
and
ds
mov
in
sbb
fcomps
shll
movsb
aad
stc
xchg
xor
xor
or
add
lods
sbb
repz
adc
dec
dec
cltd
roll
negl
push
pop
sbb
aam
popa
mov
or
or
pushf
cmpsb
stos
sbb
call
sub
mov
inc
add
inc
divl
hlt
int
fstps
xor
pushl
insl
pop
clc
mov
cmp
cmc
sub
xchg
insl
mov
or
ljmp
xor
dec
lahf
cmp
aas
daa
push
sbb
orb
iret
inc
add
pop
int3
addr16
jl
dec
arpl
fimuls
lea
sbb
in
insb
in
aas
leave
inc
lret
sub
cli
mov
mov
mov
mov
data16
push
dec
adc
mov
mov
or
or
insb
in
jmp
mov
dec
add
cwtl
arpl
adc
cmpb
shll
jge
aaa
sub
cmp
popa
mov
loopne
dec
sub
fbld
repz
cltd
mov
or
mov
mov
adc
jb
mov
ret
push
loope
fisubl
adc
jp
push
hlt
adc
xlat
cmpb
lock
lods
lret
int3
sbb
xchg
data16
and
push
add
jae
inc
in
push
lods
ja
daa
mov
or
adc
sub
imul
jecxz
sbb
or
out
adc
mov
fldl
mov
mov
jmp
inc
lods
jmp
mov
inc
out
icebp
stc
shll
mov
mov
xchg
cmc
sub
subb
push
pop
mov
mov
aas
or
aad
mov
inc
push
lods
lods
fxch
cltd
mov
je
jmp
or
pop
dec
xor
ret
ljmp
sbb
iret
and
sub
mov
int3
outsl
inc
sarb
jo
lahf
dec
loopne
sub
int3
jbe
addr16
sub
inc
ja
and
f2xm1
out
jecxz
les
sbb
push
sub
inc
out
loopne
movsl
jmp
punpcklwd
popf
or
lds
cs
out
clc
and
sub
pop
in
and
stc
jns
orb
push
mov
adc
mov
mov
addb
jo
mov
std
sbb
in
jmp
xchg
inc
push
or
dec
shrb
movsl
or
add
popf
scas
int3
nop
cmp
sbb
push
scas
cmp
sbb
jmp
jmp
clc
mov
dec
and
push
xchg
lods
cltd
pop
sbb
lret
pop
test
mov
cmp
sub
jo
pop
mov
xor
push
or
fs
or
test
xor
fwait
sbb
ret
enter
lods
in
ret
adc
mov
cltd
out
pop
jmp
cld
jb
bound
jge
jge
mov
pop
std
cmp
jne
movsl
pop
sbb
fbstp
mov
cmp
rcl
or
ficoml
cmp
mov
sbb
mov
pushf
and
adc
sub
ret
addr16
dec
jmp
push
jmp
mov
lods
hlt
xlat
jmp
scas
je
repnz
dec
lahf
jge
cli
inc
out
xor
inc
add
jl
cli
cmp
adc
push
bound
push
push
mov
les
dec
aas
hlt
adc
bound
rcll
xor
and
push
outsl
xchg
inc
inc
inc
dec
jbe
lcall
arpl
jmp
lcall
pushf
push
stos
mov
sbb
shrl
sti
pop
fsubrs
fisubrl
stos
sbb
insb
sub
push
insb
jo
pop
add
call
call
mov
mov
adc
push
mov
sub
add
mov
inc
cmp
scas
movsb
sbb
subl
adc
test
dec
subb
adc
out
pop
into
js
gs
aam
fildll
inc
fwait
icebp
fstpl
call
or
ds
sub
jmp
stc
jne
cli
and
xchg
adc
or
imul
xor
imul
outsl
mov
test
aas
push
pop
jmp
into
in
xor
frstor
push
scas
jge
divl
pop
push
das
add
push
jmp
cltd
xor
stc
xor
sub
insb
fdivr
adc
testl
mov
cmp
jg
outsl
test
cs
cmc
xchg
and
sub
pop
sub
add
fwait
or
insb
scas
iret
lret
jb
int
int3
push
xor
pop
jb
lds
lods
inc
sub
cmc
pop
cmc
lds
scas
repnz
jno
into
inc
sbb
imul
fcmovnbe
mov
push
shrb
jo
bound
fcompl
test
andl
cmp
mov
jbe
arpl
clc
adcl
mov
lea
gs
push
cmpsb
push
inc
pusha
cli
int3
ljmp
aaa
adc
mov
mov
xchg
std
ds
inc
lods
mov
cmp
xchg
arpl
fistpl
adc
cltd
pop
cmp
test
stc
push
mov
or
es
stc
xor
das
add
dec
push
out
xchg
ret
dec
xchg
es
mov
add
lock
mov
sti
mov
push
mov
les
and
mov
mov
sarb
or
sbb
add
lret
jecxz
jp
mov
out
inc
xchg
pusha
mov
aad
aam
cmp
cmc
jne
pop
mov
imul
dec
jge
fdivp
and
lods
stc
fisubrs
fsts
mov
das
mov
mov
xor
sub
jno
add
inc
test
mov
mov
stos
sbb
xchg
pop
fists
lods
mov
jns
jmp
fimull
xchg
nop
clc
nop
push
dec
mov
hlt
push
jne
pushf
xchg
stos
das
jmp
and
cmp
lret
pop
int
gs
xor
xchg
fsts
adc
out
inc
icebp
sbb
inc
mov
dec
or
mov
mov
push
mov
adc
insl
or
adc
mov
and
and
addr16
popf
dec
dec
mov
or
je
pop
dec
pop
leave
sbb
test
enter
addb
or
or
mov
js
gs
mov
jns
fcoml
sbb
ljmp
fsubl
leave
sbb
stc
sub
shll
cmpl
or
inc
neg
in
lret
sub
jmp
aad
popl
mov
pushf
repz
pusha
xor
lods
setne
pop
xchg
mov
cli
ret
push
push
cmpsb
dec
xchg
xor
popf
sbb
sti
mov
and
adc
call
notb
push
jp
pop
mov
in
and
mov
cmp
push
mov
jns
movl
repz
jecxz
mov
jns
sbb
subl
or
pop
add
sbb
aam
xor
mov
pop
imul
mov
in
sbb
xor
push
xor
in
fs
mov
daa
push
mov
dec
or
push
pusha
pop
aaa
jns
leave
icebp
jge
iret
movl
lahf
scas
sbb
je
lret
mov
jmp
bound
xchg
lea
shl
pop
and
gs
shll
enter
xchg
sub
lret
xchg
outsl
addb
xchg
dec
add
jg
lods
sub
int3
sbb
fidivs
push
xchg
into
mov
scas
xlat
or
push
pop
notb
in
and
nopl
ret
pop
jb
outsl
xchg
jae
out
nop
xchg
xchg
hlt
xabort
push
in
xchg
cmp
pop
mov
std
sbb
cli
and
fcoml
imul
out
es
ja
push
test
sar
inc
es
sbb
push
sub
mov
scas
mull
and
jo
sbb
jbe
rcll
inc
push
adc
mov
lahf
aas
daa
loope
lcall
daa
jecxz
adc
mov
in
sbb
clc
add
imul
push
sbbb
mov
push
or
dec
inc
mov
push
xchg
orb
sbb
insl
mov
jne
jo
or
add
lds
fwait
aas
out
dec
cld
call
addr16
ret
je
jl
adc
push
pop
jne
js
cwtl
or
or
loop
or
insb
sbbb
sahf
lcall
mov
add
pop
jae
mov
sbb
jbe
outsb
fwait
call
movsl
push
popa
mov
sbb
jp
xchg
lcall
sub
xchg
int
stos
je
iret
push
daa
movsb
add
nop
movsl
pop
pop
cmp
mov
nop
enter
pop
push
addr16
clc
xchg
mov
xorb
jle
mov
aas
sbb
lahf
and
pop
dec
mov
dec
sbb
push
xchg
jl
xchg
dec
pop
aad
mov
movsl
in
div
jno
cmovo
pop
ds
stos
push
test
jnp
ret
lods
and
out
shlb
paddw
mov
aad
hlt
inc
sub
leave
lcall
adc
in
fstpt
mov
out
jecxz
xchg
cmp
insl
mov
stos
icebp
or
fildll
and
cli
call
or
jns
outsl
xchg
jmp
rcr
sub
shlb
pusha
mov
mov
mov
dec
data16
scas
sub
out
jmp
pop
mov
in
dec
inc
xor
imul
lcall
outsb
loop
sbb
xchg
push
adc
xchg
adc
enter
add
push
push
movsl
xor
stos
jmp
mov
lret
ror
xchg
scas
mov
lea
xchg
lds
jge
and
add
leave
fwait
addr16
jns
outsb
cmp
and
incb
rorl
rclb
test
dec
sbb
mov
adc
fiadds
or
cmpsb
push
mov
dec
mov
inc
sub
jge
sub
in
insb
inc
pop
jbe
pop
negb
mov
pop
mov
aaa
xor
or
ds
sub
pop
cmp
ljmp
mov
bound
xor
or
lods
fisubrs
jo
xorl
xor
lcall
enter
dec
daa
dec
cmp
sahf
add
jecxz
pop
mov
lods
test
cmp
into
fs
incl
addr16
test
subb
xchg
out
pop
add
sub
data16
mov
add
lcall
mov
cmpsl
lds
ss
or
lret
mov
inc
adc
fcoml
bswap
loop
test
js
fidivrl
ds
je
loopne
sub
in
icebp
out
xchg
mov
cmc
jl
inc
inc
dec
cmpsb
sub
inc
stos
or
mov
rcll
shl
int3
in
arpl
in
es
cmp
outsl
pushf
loope
or
rol
std
int3
int
loop
into
dec
push
jmp
fs
push
and
xchg
pop
xor
arpl
stos
inc
dec
dec
dec
fisubrs
pop
push
jmp
or
sub
mov
in
aas
into
enter
sub
pop
pushl
inc
sbb
push
rcr
sbb
push
push
aam
pop
mov
es
cmpsl
push
and
mov
lret
rcll
cmovl
add
ss
jmp
cmp
roll
test
or
addr16
or
pop
roll
mov
push
sub
mov
repnz
bound
daa
add
fldcw
push
xchg
cmp
jnp
inc
stc
mov
xor
pop
mov
gs
cmp
daa
jg
sbb
bound
insb
sbb
xor
xor
adc
fstpl
mov
cmpb
std
jle
jae
mov
mov
sub
or
int3
jmp
in
add
dec
or
sub
push
inc
loopne
enter
mov
pop
es
sbb
cmp
std
or
mul
cmp
mov
pop
leave
icebp
mov
lret
movsl
aam
into
adc
inc
inc
sarb
mov
rcrb
cld
ljmp
movsb
sub
push
push
adc
ss
shll
dec
sarb
mov
in
adc
in
cmpsl
iret
insl
idivb
xor
fsubr
pushf
mov
xor
push
ret
push
mov
cmp
shlb
dec
bound
pop
mov
rolb
mov
mov
lahf
xchg
push
neg
fistpll
cmp
in
fwait
dec
fwait
enter
repnz
jno
mov
lcall
adc
inc
add
jmp
popf
pop
aas
mov
dec
jne
aaa
push
pop
sub
mov
lods
aam
js
imul
ret
sarb
call
insl
dec
insb
xchg
fs
ret
lds
fdivrl
clc
std
ret
stc
mov
sbb
dec
xchg
pop
addr16
sub
in
aad
dec
adc
push
leave
or
push
daa
hlt
add
data16
jge
cmp
jge
data16
lret
cmp
and
nop
or
iret
push
xlat
test
jbe
andb
mov
shl
aaa
rcl
enter
xchg
lret
jb
sbb
mov
out
popf
push
xor
jne
lock
fisttps
or
cs
xor
popl
imul
test
lahf
es
hlt
cmpsl
jno
adc
xchg
or
rol
out
or
sub
push
or
into
or
lea
mov
insl
call
movsl
jl
sbb
rolb
icebp
aaa
inc
orb
das
mov
mov
xlat
rdtsc
sbb
mov
jecxz
adc
cli
dec
push
lds
jo
sub
xor
mov
sub
push
and
or
dec
dec
cmp
xchg
mov
cmc
fdivrs
xchg
sub
mov
inc
inc
mov
mov
out
xor
out
mov
sbbb
push
add
mov
dec
addr16
push
cli
mov
daa
push
mov
aaa
shl
cwtl
rolb
push
test
lcall
add
scas
lock
lock
test
cs
lods
dec
add
bound
dec
fwait
pop
lds
xchg
jae
stos
mov
xchg
daa
add
mov
push
cmp
pop
jle
adc
lret
cmpsl
jns
iret
inc
push
inc
sbb
fdivp
hlt
stos
cs
push
arpl
jg
jp
andps
dec
dec
fiaddl
je
sub
cld
inc
sbb
sub
fldt
mov
pop
not
push
xorl
mov
mov
mov
inc
dec
push
test
mov
scas
shll
mov
jmp
mov
jg
out
cmp
dec
movsl
cld
jns
adc
mov
addr16
loope
dec
das
lock
push
or
clc
sbb
int
hlt
cmpsl
xchg
pushf
sbb
nop
imul
push
das
in
pop
cmpsl
movsl
inc
sar
push
fsubrs
ja
and
clc
dec
sub
enter
jge
cmp
dec
cltd
cmp
in
pop
adc
push
jns
jnp
mov
stc
fs
roll
dec
or
cld
mov
jle
bound
ja
dec
xchg
jle
sub
xorb
jg
hlt
sub
js
mov
call
das
insb
stos
inc
lret
rclb
mov
cli
sarl
loopne
sub
mov
pop
icebp
adc
inc
mov
push
pop
adc
lret
sub
adc
mov
jb
lods
gs
adc
sub
xor
stc
lahf
inc
loope
adc
dec
jno
adc
pop
mov
xor
pop
out
sub
jne
aad
nop
shl
pushf
sub
cmp
mov
mov
xlat
dec
xchg
lret
adc
lea
decl
or
push
mov
rcrl
fbld
ret
invd
ficoml
jle
lea
aam
mov
imul
xor
jmp
dec
pushw
or
sub
xchg
scas
lock
pop
shrl
mov
lea
and
movsb
lock
mov
jge
test
fisttps
bound
xchg
hlt
fcoms
push
push
inc
xlat
gs
mov
xor
cs
inc
jl
dec
cmp
test
fcomps
and
sahf
jg
out
stc
mov
inc
vmovapd
jge
pop
cmp
mov
or
insb
bound
je
rclb
loop
fimuls
jb
dec
pop
je
mov
xchg
les
paddsb
popf
rorb
push
cwtl
sub
push
jb
mov
dec
ljmp
iret
or
aam
enter
test
jns
add
push
stc
push
and
adc
pop
test
pop
popa
mov
mov
push
js
adc
jmp
inc
shrl
cltd
cmp
outsb
int
lds
inc
pop
test
addr16
clc
push
or
cmpl
mov
shlb
add
imul
iret
pop
out
es
mov
sti
int
mov
dec
dec
cmp
push
sahf
movsl
adc
jno
or
dec
and
adc
js,pn
push
pop
int
enter
sub
mov
pop
js
push
pop
or
adc
lds
sbb
mov
cmp
cmp
imul
je
adc
ljmp
dec
sbb
leave
dec
cltd
sub
sahf
adc
loope
cmp
and
ja
mov
cmp
gs
stc
ds
pop
sbb
lock
roll
std
pop
add
mov
cmp
or
add
inc
shl
stos
out
mov
test
pop
xchg
mov
aaa
cltd
or
push
mov
sbb
mov
stc
xchg
xchg
push
or
jmp
inc
shrb
mov
lret
or
sub
lret
add
inc
mov
scas
sub
shl
js
and
outsb
ret
fwait
mov
sti
push
ret
mov
jp
in
lds
inc
lret
push
pusha
pusha
sbb
or
adc
out
pop
cmp
push
fistps
cltd
pop
scas
adc
add
jge
roll
scas
lsl
lcall
mov
ja
rorl
sub
add
cmp
imul
lea
and
cmp
imul
xchg
and
mov
jg
ret
jae
adc
jp
rep
insb
cli
popa
js
jnp
jle
fbld
push
cmp
ljmp
sbb
sbbl
sub
pop
adc
jnp
jge
xor
fs
shlb
push
iret
dec
xchg
sbb
ret
jmp
cmp
orb
stos
jne
push
fsts
push
arpl
bound
push
stc
call
aaa
int
mov
cs
mov
sub
into
jno
xchg
xor
adc
dec
adc
das
push
scas
jo
jnp
cmp
pusha
paddusb
int3
add
or
negl
xor
flds
dec
push
repnz
jb
adc
cld
push
lock
adc
mov
push
rcrl
add
inc
in
ljmp
mov
gs
test
fimull
mov
js
pusha
in
mov
rcl
mov
dec
les
jae
ss
sub
sahf
dec
sbb
aam
jg
push
xlat
sbb
pop
sub
adc
xchg
dec
into
addl
into
outsb
shl
xchg
ret
lds
push
aaa
mov
sub
cs
cmp
inc
sbb
xchg
std
sbb
pop
pusha
jno,pn
jl
fbstp
mov
cmpsl
xor
sub
cwtl
mov
nop
loop
sbb
xlat
add
imul
push
out
pushf
pop
sbb
cmp
mov
mov
sbb
scas
jge
inc
scas
add
push
sbb
xchg
xor
ftst
ret
in
dec
mov
rcrb
jo
and
in
pop
inc
mov
movsb
push
mov
xor
ja
lea
imul
add
arpl
stc
insl
fwait
mov
mov
xchg
xlat
add
xor
adc
or
cli
xor
and
sarb
movsl
adc
bound
mov
inc
adc
jo
sbb
sub
push
notb
or
xchg
xchg
mov
sbb
xchg
pop
mov
sbb
das
rcrb
pop
fsubl
mov
rorl
jb
xchg
cmp
pop
cmp
jg
cltd
shl
lea
pop
hlt
push
mov
push
fwait
ds
or
jb
push
mov
mov
adc
mov
in
int
je
ljmp
dec
shlb
je
push
inc
test
call
push
push
fiaddl
mov
inc
push
or
xchg
sub
push
fisttpll
push
loope
add
sbb
add
xor
mov
pop
xor
jge
ds
rorl
movsl
roll
mov
lret
cmp
je
add
pushf
jns
xchg
loopne
mov
cmpb
cwtl
pop
add
bound
ss
ljmp
sub
lret
hlt
push
mov
pushf
dec
xchg
jecxz
mov
jge
inc
mov
hlt
rclb
fsub
xchg
sub
adc
je
xrelease
add
sbb
loop
hlt
test
add
sbb
push
jmp
pushf
pushf
int
imulb
repz
mov
pop
aas
nop
lcall
gs
xchg
jle
dec
jns
insl
or
loopne
adc
xchg
lret
int3
repz
jnp
jbe
fwait
mulb
fucomp
adc
bound
pop
pusha
cs
outsl
or
mov
scas
je
pop
shr
or
movsb
cs
sub
xor
test
adc
sti
dec
lcall
cmp
or
jne
test
mov
roll
pop
fdiv
mov
inc
out
sub
sbb
cltd
scas
cld
test
inc
jnp
adc
lds
popa
int
jecxz
cmp
cmc
adcl
inc
mov
jp
add
popf
and
scas
sahf
push
xor
ret
add
aaa
into
cmp
dec
sbb
and
inc
pop
out
push
and
out
cmp
push
dec
push
pop
mov
faddl
xchg
mov
or
inc
mov
mov
or
dec
ud0
fcoml
xchg
push
mov
rol
into
scas
scas
jmp
xor
or
fisttpll
mov
sbb
mov
lahf
jb
sub
repz
fprem
pop
sub
cmpsb
mov
fwait
das
pop
and
out
jmp
pop
mov
es
push
mov
mov
pop
mov
xchg
pop
test
je
dec
test
adc
movsb
sub
lahf
push
lret
bound
pop
fwait
daa
pop
xlat
jmp
xchg
fucom
inc
imul
dec
ds
cmp
mov
xor
sub
mov
dec
je
pop
js
pop
pop
sbbb
decb
cltd
das
pop
add
adc
out
shr
pop
xchg
imul
pop
faddl
pop
jle
in
stos
inc
aam
or
xor
cli
fisttpll
cld
into
pop
jne
sub
jbe
push
xchg
mov
repnz
add
jle
dec
mov
jo
pop
cmp
jae
icebp
mov
jmp
and
lret
xor
mov
jbe
or
push
mov
lret
xor
sub
sub
and
popf
and
je
enter
xor
lds
les
mov
cld
inc
push
push
push
add
add
and
dec
scas
sub
cmp
xchg
xlat
jnp
lods
xchg
repz
cwtl
mov
cli
mov
pop
cmp
aaa
ret
jp
fisttps
lret
add
fsincos
or
dec
pop
dec
movsl
ss
rcrb
lds
subl
inc
xchg
test
popa
mov
repnz
xor
es
cmpsl
rcr
daa
aad
add
jbe
add
pusha
gs
push
cltd
shll
iret
adc
imul
push
aad
cwtl
shrl
fwait
cmp
jbe
in
ficoms
pop
dec
bnd
pop
jle
mull
bound
pushf
fmull
movsb
mov
push
ja
dec
je
repz
rcr
dec
ss
movsb
dec
lock
mov
xchg
mov
jnp
sahf
outsl
jns
cmpsb
sub
adc
jbe
pop
add
push
jp
mov
notb
shl
test
add
insl
mov
add
fsubrl
jl
jnp
xor
mov
test
out
push
or
insb
fisubl
incl
add
xchg
mov
cmp
push
xor
mov
test
inc
lds
xor
mov
leave
outsb
pusha
je
pushf
shl
xor
push
fcoml
pop
xcrypt-cfb
cmpsl
out
shll
and
test
je
aas
test
shlb
mov
pop
rorl
cltd
cs
sbb
sub
xor
out
add
cwtl
xlat
aaa
aas
jle
push
mov
into
int3
aaa
enter
jmp
jle
or
add
nop
in
out
stc
xor
aam
xchg
leave
sub
and
pop
test
ljmp
ja
repz
lret
test
sahf
sti
jg
sbb
ja
shll
cltd
pop
outsl
shlb
ret
mov
pop
mov
cmp
ds
or
fnstenv
aaa
mov
ror
pop
adc
out
pop
add
mov
xchg
dec
sbbl
fs
mov
leave
jp
pop
out
insb
add
mov
mov
pushf
test
xor
movsl
sbb
inc
fisubrs
sar
ds
jge
in
xor
jae
inc
stos
sub
push
mov
daa
dec
pop
pop
jmp
adc
xchg
fdivs
and
dec
faddl
adc
cld
fisubrs
insb
shrl
rcrl
xchg
add
xor
sahf
mov
inc
iret
dec
xor
mov
arpl
mov
adc
je
les
testb
sbb
sti
inc
push
test
sub
xchg
or
inc
pushf
jge
adc
push
sbb
mulb
cwtl
data16
mov
sbb
sbb
cmc
mov
cmp
jo
aas
inc
fists
push
rorb
lret
add
in
add
icebp
cmp
ret
mov
scas
xchg
add
std
into
mov
or
insb
repnz
cld
insb
out
rorb
cli
mov
mov
ror
cli
incb
repnz
jp
sbb
push
sbb
mov
push
stos
mov
mov
mov
push
fnstenv
loopne
push
ds
cmp
stos
cmpsl
out
fisttpll
les
mov
mov
or
xchg
mov
test
pop
les
and
or
testb
imul
cltd
fadds
mov
and
scas
cmp
xchg
mov
ss
fcompl
xor
xchg
data16
lahf
mov
dec
pop
xor
fucompp
lods
addl
jns
movsb
pop
ds
jp
fidivl
or
dec
push
std
cli
cmpsl
or
jb
lods
ret
sub
dec
or
stos
sub
or
enter
jbe
push
dec
jmp
mov
add
scas
adc
sub
cli
mov
jp
dec
pop
mov
cmp
in
aad
sbb
or
shrb
add
push
popa
push
sub
push
cmpsl
imul
pop
daa
lods
loopne
xor
and
in
insl
xchg
and
push
adc
notb
inc
xor
sub
inc
sub
jmp
int
mov
sub
cmpsl
aam
scas
stos
sbb
hlt
ja
cmp
sti
pushf
inc
jle
sbb
adc
dec
jp
push
xchg
or
jns
sbb
movsb
push
aas
adc
test
shl
cli
out
lods
fmull
test
insl
dec
loope
push
push
adcb
movsl
xchg
into
dec
lock
xor
dec
mov
jo
outsl
cltd
in
or
mov
mov
and
and
std
fsts
add
cmp
mov
fsubl
xchg
loope
sub
push
push
add
and
ret
mov
and
loope
jnp
ds
in
rcl
fcomip
mov
lahf
push
add
out
and
jmp
inc
sub
xchg
loope
aaa
mov
inc
rcrb
pop
mov
loopne
ds
xchg
out
stc
xchg
lahf
jns
in
sbbl
repnz
sahf
jp
lcall
hlt
sarl
aas
mov
or
leave
pop
jno
insl
jbe
jecxz
xor
mov
jecxz,pt
mov
dec
sub
std
pop
lahf
in
subl
xor
pop
stos
aaa
aad
add
and
cmp
adc
ljmp
pop
cmp
pop
mov
and
cli
cmc
or
push
fcmovu
shr
mov
fwait
sbb
mov
call
xlat
mov
sbb
mov
repnz
fisubrl
imul
or
rorl
or
or
andb
and
mov
xchg
lock
mov
mov
or
inc
xor
fnsave
test
pop
inc
pop
jp
mov
mov
loop
mov
xchg
push
testb
sbb
addr16
sbb
fabs
scas
roll
inc
inc
mov
cmp
addr16
call
andl
imulb
jne
loope
js
mov
loopne
pop
jg
xor
lret
mov
xor
push
outsb
pop
mov
clc
int3
pop
push
scas
scas
stos
not
pop
loope
inc
xor
lock
inc
or
lret
mov
fbld
mov
fldl
aas
ficoms
lahf
leave
lock
cmp
in
out
mov
hlt
adc
lahf
lock
insl
data16
xor
lcall
add
xchg
dec
push
outsl
lods
cmp
stos
ss
jae
push
psubusw
out
sub
push
xchg
es
mov
clc
push
cmp
dec
stos
adc
push
inc
cli
in
mov
jbe
out
dec
daa
sbb
hlt
and
mull
repz
gs
or
mov
xchg
push
out
arpl
push
in
gs
mov
mov
adc
rcrl
jl
inc
stos
jns
das
push
and
shrl
and
out
js
push
mov
inc
inc
fisttpl
mov
in
jnp
lea
stc
fidivl
xchg
adc
repz
dec
inc
push
cmp
out
daa
notl
xor
js
jnp,pt
outsl
fs
xchg
push
pop
testl
cli
in
pop
cli
in
push
xchg
adc
mov
pop
cmp
mov
and
iret
jge
cmp
jg
stos
and
sbb
cmp
enter
movsl
mov
inc
jl
sub
mov
xchg
out
aam
negl
iret
cltd
shll
jmp
push
icebp
loopne
mov
or
ret
inc
stos
pop
adc
or
pushf
jle
jl
or
inc
stos
fwait
shlb
jno
in
cmp
cltd
fsub
or
stos
int3
lods
sub
sbb
push
stc
sub
push
sarb
repz
cmc
and
or
and
pop
in
add
inc
jmp
into
lret
mov
xor
sub
pop
cmp
xchg
inc
or
movsb
xor
cld
jne
xor
inc
add
js
inc
leave
idivl
cmp
cli
jnp
bound
and
inc
shr
out
mov
fst
fwait
push
xor
shlb
ja
ret
mov
test
lods
add
dec
mov
int3
jg
adc
push
jmp
in
mov
mov
sbb
jg
and
lea
push
inc
and
lret
jl
clts
push
and
dec
lret
scas
popa
pop
xchg
inc
stos
aaa
or
scas
inc
shlb
sbb
xchg
cmpsb
pop
inc
pop
mov
mov
sub
in
dec
or
jno
and
ret
mov
test
lds
insb
pop
stos
inc
inc
mov
aas
popf
cld
mov
inc
jb
test
dec
xchg
lods
xchg
movl
ja
sub
out
fldt
sub
scas
push
lds
jb
xlat
cltd
adc
lahf
mov
add
dec
dec
push
xor
pop
mov
cmc
pop
loope
jmp
test
push
push
jge
sub
dec
sahf
cmc
ss
xchg
jno
dec
enter
aad
xchg
mov
movsl
push
icebp
mov
ss
adc
inc
push
dec
out
jnp
mov
pop
jmp
inc
xchg
xchg
mov
fmull
sbb
bound
ret
loop
ret
lock
fadd
mov
push
mov
xchg
add
jl
xor
adc
inc
data16
push
ret
xorl
pop
mov
xorb
cmp
mov
ja
fdivrs
out
or
add
and
lods
or
hlt
pushf
addr16
popl
fcmovne
pop
jmp
push
or
scas
mov
mov
xchg
dec
xchg
fwait
fwait
fs
push
pop
pusha
lret
insl
mov
fildll
clc
scas
fsubrl
xchg
push
ljmp
movsb
pop
rcrl
mov
stos
scas
sub
popa
xor
mov
mov
jge
dec
lret
sti
mov
push
loopne
or
lret
xor
mov
je
std
dec
pop
repz
cmpsb
sub
sti
jle
add
insb
cmp
xchg
dec
push
rcrb
cltd
inc
inc
xor
or
or
push
lods
xor
mov
pop
cmp
mov
jl
clc
push
or
std
xlat
call
loopne
filds
lods
std
pop
xor
inc
in
xchg
inc
mov
dec
jl
mov
sbb
push
sbb
adc
mov
data16
xorl
cmp
aaa
xor
adc
test
cmp
fucomp
sbb
push
jp
dec
aam
dec
stos
and
imul
add
cltd
mov
and
rolb
daa
lods
in
xchg
fldl
scas
cli
aas
cmp
jb
mov
cltd
add
mov
sub
stc
mov
pushf
adc
cmp
pop
enter
int
sub
sbb
and
cmc
xor
arpl
pushf
loop
sahf
repz
pushf
test
cli
sbb
cs
popa
je
push
stos
dec
jnp
sub
mov
ljmp
mov
mov
add
mov
mov
mov
fcmovnbe
add
xchg
rcrl
cmp
ss
push
and
ficompl
mov
xor
fisttpll
cmp
cmpsb
and
rcr
add
sbb
jge
pop
jecxz
rol
mov
push
mov
fs
insb
mov
pop
inc
sti
gs
adc
jo
loopne
mov
xlat
sarl
popa
cmc
ret
dec
xor
imul
mov
aaa
ret
imul
xchg
or
jmp
and
xor
sahf
mov
push
enter
push
adc
fnsave
data16
imulb
mov
aas
jb
inc
psubw
pop
cmc
repz
mov
sbbl
jmp
cmp
or
fwait
add
jns,pn
loope
aaa
out
enter
outsb
and
or
jl
faddl
filds
or
sbb
sbb
adc
js
shll
fwait
dec
mull
xchg
in
mov
bound
stc
dec
fwait
cmp
arpl
sbb
test
mov
test
outsl
jmp
imul
jb
enter
insb
or
cmp
push
pop
or
data16
jno
add
dec
jae
sub
pusha
jnp
jge
loop
call
into
jnp
lcall
ss
jle
cmp
adc
in
mov
lods
inc
jne
xchg
icebp
push
int3
xchg
sub
mov
jae
push
mov
lret
mov
imul
out
in
xchg
and
ljmp
dec
cwtl
in
sub
pusha
in
ret
mov
int3
push
sbb
dec
xor
js
aam
addr16
adc
mov
stc
xor
jns
jp
adc
mov
or
xchg
cmp
icebp
ret
movsb
pop
sub
jo
push
jae
inc
or
pop
jp
out
scas
push
mov
sahf
fwait
shlb
test
mov
dec
pop
lahf
aad
add
and
jnp
fcoms
push
call
fldt
jp
jnp
mov
cmp
es
pop
xchg
loopne
mov
test
dec
cld
mov
pop
jmp
fdivl
pop
popf
jge
clc
and
negl
cld
rol
jns
xchg
aam
or
dec
out
push
inc
mov
cli
mov
loop
sub
mov
test
xor
imul
cmp
xor
fs
pop
frndint
sti
mov
arpl
mov
adc
push
outsl
cmpsl
mov
mov
js
push
push
mov
mov
cmc
aas
mov
movsl
push
mov
sub
sti
aas
pop
pop
mov
and
sahf
jb
push
into
push
mov
mov
int
imul
sub
jl
adc
push
dec
sbb
jg
lret
jp
leave
pop
sub
inc
xchg
cs
and
or
adc
mov
arpl
jno
clc
repnz
push
js
leave
dec
and
add
mov
pusha
insb
cmp
shl
aam
gs
std
push
call
jl
loop
push
aam
unpcklps
jle
mov
orb
repnz
movsl
stos
pop
adc
andb
sbbb
mov
aad
dec
xlat
xor
sub
test
ljmp
enter
call
fsubrl
add
lods
loope
daa
sbbl
rclb
mov
test
push
imul
xor
iret
xchg
push
add
mov
ljmp
jae
arpl
in
and
mov
imul
add
mov
fists
pop
ljmp
jo
xchg
jl
mov
in
insb
mov
sub
cltd
xorb
fisubrl
inc
sahf
jnp
jl
shlb
aam
push
outsl
cmp
jp
roll
dec
mov
lahf
push
ret
push
sbb
xor
lods
lock
xchg
inc
or
sbb
dec
xor
fsub
sub
fbstp
cmp
adc
push
push
imul
adc
stos
mov
int3
xchg
jge
int
iret
jl
scas
pop
mov
cmp
xor
inc
xchg
mov
std
fstl
mov
repnz
push
push
mov
ds
sbb
clc
dec
push
clc
xchg
shlb
addb
pop
je
xchg
in
fstl
mov
mov
lds
mov
push
push
les
push
pop
arpl
xor
xor
aad
ja
loopne
inc
mov
push
ja
xchg
bound
bound
xchg
pop
xor
mov
pushf
xor
cwtl
js
push
insl
mov
cmp
loope
adc
ja
xchg
mov
mov
in
bound
push
mov
shrl
in
data16
cli
xchg
lahf
push
jnp
cwtl
int
loope
es
ja
jp
in
inc
adc
mov
adc
repz
std
aas
push
loopne
lahf
into
xor
push
cs
out
and
ds
mov
cmp
shl
push
in
cmp
adc
cmp
shl
loop
dec
test
lahf
lahf
test
cmpsl
andb
outsb
outsb
sahf
push
jg
mov
push
jb
mov
inc
out
arpl
imul
mov
or
fbstp
loopne
pushf
aaa
in
movsl
lea
cmc
cwtl
leave
lods
enter
ss
sub
ret
push
sbb
inc
pop
mov
int
xor
ss
out
inc
popa
notl
cmp
int
popl
shll
pushf
aas
push
sbbl
aad
fldt
call
pop
std
js
and
adc
aaa
sub
jne
sub
fldcw
sar
std
aas
out
imul
cltd
adc
jnp
lret
das
add
mov
adcb
cs
movsl
cmpsb
std
gs
xor
mov
int
call
divb
out
in
fildl
cmp
outsl
add
dec
sub
sti
fs
mov
xchg
add
sub
into
mov
add
cmp
push
cmp
shrb
mov
pop
push
cmovb
lret
mov
xchg
and
inc
mov
dec
sbb
jbe
fs
pusha
dec
sarl
and
mov
cltd
out
test
xor
mov
dec
mov
lcall
adc
je
dec
push
div
sbb
mov
lods
fstpl
and
xchg
stc
mov
xor
mov
mov
jg
xor
data16
adc
jecxz
ja
pop
and
dec
nop
sbbb
test
jmp
insl
and
nop
das
ret
inc
jb
inc
xor
pop
mov
inc
dec
or
fidivl
popa
xchg
dec
aas
pop
sub
fs
jg
pop
out
mov
push
and
and
mov
dec
stos
sub
dec
or
clc
arpl
dec
cmpsb
out
sahf
repz
pop
xor
lds
nop
mov
int
pushf
dec
ss
fwait
xchg
retw
test
movsb
pop
xchg
mov
js
stc
adc
push
lock
into
neg
mov
mov
popf
shll
dec
push
fs
out
dec
outsl
push
xor
dec
jne
aaa
out
or
mov
jle
mov
aad
or
bound
repz
scas
mov
daa
and
jo
jmp
movsb
sbb
mov
and
cmp
mov
xchg
daa
out
outsl
adc
or
sub
ss
dec
rcll
and
or
xchg
shll
sub
add
cltd
in
scas
and
rolb
xor
add
xorb
xchg
stc
push
inc
stos
sub
add
lret
popa
pop
mov
arpl
into
sub
add
dec
pop
sbb
jns
mov
mov
push
sti
pushf
mov
aam
subl
int
add
fwait
mov
mov
sbbl
jns
inc
adc
hlt
push
int
mov
popa
mov
sti
add
mov
sub
inc
in
push
mov
add
add
pusha
ror
dec
adc
arpl
mov
movsb
ret
add
pop
jl
lret
js
push
mov
mov
xor
sbb
inc
aas
test
dec
and
jne
fs
push
mov
pop
test
les
data16
dec
adc
shll
xchg
pop
ret
incl
les
adc
scas
push
gs
popa
faddl
sahf
xor
pop
xorl
clc
call
fucomi
pop
dec
push
xchg
push
js
jecxz
imul
jl
out
jl
add
dec
int3
inc
sub
rorl
addl
pop
jno
dec
dec
mov
xchg
fdivl
xor
add
push
f2xm1
push
mov
test
scas
push
jge
gs
jmp
fnstsw
loope
sbb
shll
xlat
sbb
cltd
inc
mov
xchg
imul
jb
xchg
in
stc
dec
sbb
aas
flds
rcrl
test
pop
es
inc
call
mov
pop
pusha
cmpsb
cmc
les
loop
dec
cmp
jnp
insl
pop
push
sub
pop
outsl
fwait
add
sbb
cmp
or
ret
jo
sbb
sti
cmp
out
daa
or
xor
mov
sub
loopne
cmp
incb
add
push
cmp
xchg
cwtl
push
stos
pop
push
or
mov
jp
popf
lea
sahf
sbb
jnp
add
test
rcrb
push
xor
dec
and
scas
je
sbb
jo
sahf
or
movb
aad
push
sti
movups
fstl
inc
pushf
xchg
adc
xchg
pop
mov
mov
out
imul
and
loopne
cmpsl
cmpsl
jae
push
inc
faddl
stos
jecxz
adcb
sub
ds
out
pop
les
pop
mov
lea
mov
sub
je
and
mov
mov
pop
cmc
pusha
hlt
dec
sbb
xchg
mov
stos
lret
daa
rolb
and
inc
ret
dec
movsl
jge
cmpb
lret
lcall
mov
imul
lods
dec
push
imul
arpl
add
sub
mov
lcall
lret
fwait
dec
lock
idivl
int
ret
int
and
loopne
fadd
cmpsl
or
jns
sbb
cmp
notb
out
movsl
nop
pop
or
lret
jl
popa
aas
inc
out
adc
daa
pop
loop
lcall
and
enter
das
inc
inc
fisttpll
stos
das
in
scas
xor
and
dec
fdivrl
pop
faddl
and
insl
lret
int
mov
arpl
cltd
icebp
adc
movsl
inc
cmp
loopne
pop
mov
loope
push
or
dec
clc
or
addr16
sarb
cltd
sub
mov
ljmp
pop
adc
jns
cmp
xor
push
sbb
pop
push
cmp
sub
dec
dec
xchg
inc
lret
and
rcrl
test
ljmp
xor
movsl
xor
pop
stos
out
les
jmp
addl
xor
test
cmp
pushf
fists
jle
jg
mov
ret
mov
push
push
in
insb
pop
jno
je
aam
cs
data16
mov
or
lea
in
adc
aam
or
fwait
out
pop
mov
jg
dec
test
adc
push
jg
int
dec
pop
dec
cmpsl
mov
fs
aam
mov
jnp
xor
xor
pavgw
outsl
pop
les
iret
out
lret
sbb
lds
aaa
xlat
bound
xchg
xchg
shl
sub
add
loop
or
int3
sub
fnstsw
sub
mov
fbld
arpl
mov
push
test
pop
pop
fisubs
das
imul
dec
jno
adc
pop
ljmp
add
sbb
iret
jae
adc
int3
fistpl
jmp
ds
cmp
leave
les
test
stc
push
dec
ss
push
mov
jbe
std
adc
xchg
add
jns
test
cli
test
je
sbb
jno
repz
popf
dec
andl
cmp
cmpsb
fs
hlt
out
mov
lret
jns
loop
cmpsl
sub
inc
out
scas
leave
addr16
js
ret
into
in
mov
pushf
rcrb
xor
inc
mov
repnz
pop
fs
repz
cmc
div
call
jle
xor
fidivrs
xchg
cli
adc
fmuls
fisttpll
mov
test
sub
or
inc
stos
and
mov
dec
adc
popa
adc
out
mov
or
cmpsb
pop
jo
mov
dec
ss
cmp
jecxz
jecxz
outsb
xor
jbe
mov
mov
xchg
pushf
jno
adc
jo
push
and
and
jns
xchg
nop
repnz
fldl
jge
leave
adc
add
cmp
lret
test
adcb
sbb
pop
inc
scas
sbb
pop
ss
sti
and
outsb
addr16
xchg
ljmp
xor
fimuls
rcll
sbb
fmulp
shrb
sub
push
pop
push
xchg
lock
fimuls
add
dec
mov
pop
dec
lods
ret
xchg
lds
jbe
or
jmp
outsb
int3
mov
mov
lock
ret
sahf
negl
sahf
lahf
out
add
outsb
jp
in
add
xlat
sbb
data16
xor
stos
gs
std
pop
mov
pop
movsl
adc
xchg
lds
mov
cmp
sahf
mov
aas
mov
mov
outsl
cltd
leave
hlt
push
jmp
pop
adc
scas
xor
mov
dec
je
sbb
jns
cli
pop
lret
sub
ljmp
repz
int
dec
xor
clc
add
rcr
lcall
outsl
aam
loope
and
pop
dec
inc
stc
xchg
iret
xor
js
cwtl
sar
mov
add
shll
repnz
shrb
jmp
dec
mov
cld
int
insb
adc
hlt
in
cwtl
push
sbb
andb
jecxz
dec
outsl
add
mov
fadd
or
arpl
xchg
aam
decl
xchg
addb
jge
lock
add
sbb
mov
sub
inc
andl
inc
push
sub
aas
scas
jnp
jae
adc
pop
insb
rcl
inc
dec
and
sti
fdivl
out
jg
and
jp
mov
sub
and
mov
sbb
xor
dec
sbb
sbb
pop
push
xchg
jno
cmpl
imul
jecxz
mov
sbb
jae
mov
mov
cmpsl
cld
movsb
push
inc
mov
lret
mov
int
or
add
icebp
scas
ds
std
sahf
adc
adc
cmpsb
iretw
or
jmp
ret
fwait
mov
cmp
lcall
scas
fcmove
mov
int3
lahf
mov
aas
adc
loopne
mov
lret
scas
jl
lods
sub
arpl
sub
in
nop
pushf
push
or
mov
fsubs
dec
sbb
mov
dec
mov
sbb
or
inc
or
mov
sub
and
mov
int
and
stos
adc
imul
push
clc
or
jp
and
lcall
cmpl
in
andb
cmp
inc
stc
sub
bound
cmp
imul
and
push
pop
filds
popf
mov
fcomi
mov
cmp
call
scas
jb
or
icebp
out
mov
mov
mov
pop
jno
arpl
dec
xchg
mov
icebp
aam
cwtl
ja
ret
mov
in
jae
xor
scas
lret
pushf
jbe
cltd
adc
imul
adc
lret
ret
cld
out
xor
leave
mov
stc
and
int3
sbb
mov
adc
jecxz
icebp
push
or
cmpsl
xor
jecxz
push
xchg
ret
std
mov
je
sti
clc
lret
xchg
pop
jecxz
or
lods
cmc
nop
and
negb
cmpsl
mov
imul
mov
js
xchg
jno
out
in
xchg
xchg
cmp
inc
pusha
inc
dec
jo
lcall
jae
movsl
in
or
jo
xor
mov
push
xor
ljmp
int
inc
stc
cmp
inc
enter
sbb
nop
sahf
fsubr
cs
push
pop
mov
ss
cmp
mov
xchg
add
sbb
cmpsb
out
push
cmpl
iret
adc
mov
pop
pop
pushf
fiaddl
jne
pop
or
pop
inc
stc
jle
outsl
mov
vcvttpd2dqx
pop
or
bound
push
mov
mov
imul
out
sub
inc
nop
and
sbb
mov
mov
jecxz
and
push
cltd
das
pop
pop
xchg
dec
stos
push
mov
add
fcomps
mov
cmpsl
inc
lods
push
daa
cmp
dec
in
or
je
mov
and
fstpt
sti
jbe
jecxz
sub
cli
shll
pop
sub
std
and
enter
push
add
pop
imul
mov
pop
mov
lods
clc
sbb
add
aaa
lods
or
cmp
lock
jl
jns
es
adc
adcl
hlt
stos
imul
sub
add
gs
mov
pushf
xchg
xor
push
push
mov
push
scas
mov
sbb
sbb
mov
pop
insl
rcrl
jecxz
es
xlat
movb
shr
lds
rcl
mov
cmp
mov
mov
sbb
pop
mov
lods
aaa
and
mov
fsubrs
sbb
adc
pop
mov
sub
and
outsl
scas
mov
pop
test
adc
pop
or
test
lea
push
adc
jle
and
aam
mov
jmp
inc
into
in
stos
push
jns
or
mov
lds
sbbl
jae
jp
insb
xchg
icebp
cli
in
cmp
cmp
loop
bound
pop
xchg
sub
add
mov
pop
xchg
xorl
lcall
insl
mov
sbb
les
call
xchg
insl
sub
lret
in
in
cmp
ds
testb
mov
call
iret
subb
sar
or
hlt
push
mov
mov
cmp
call
cmpsl
mov
inc
sbb
mov
xchg
sbb
icebp
aad
imul
ret
mov
movsw
pop
xlat
inc
pop
add
jmp
popa
push
pop
outsb
sub
out
or
xchg
insb
pop
mov
adc
xchg
push
clc
sbb
fistl
ret
cmp
shrb
jmp
in
sub
add
aaa
push
sbb
sub
inc
push
dec
out
push
enter
add
add
mov
cmc
adc
inc
fsubrl
out
sbb
mov
sub
dec
dec
movsl
fcom
xchg
add
sub
aas
pop
dec
mov
into
test
xor
lret
aam
jns
lock
jle
mov
call
cmp
popa
rcrb
sbb
mov
ja
aas
xor
call
mov
nop
and
fistpll
icebp
cmp
lcall
cld
cmp
jae
jmp
push
push
mov
les
shll
lret
push
push
aas
mov
stos
sbb
jecxz
add
dec
push
jns
sar
fcmovnb
es
sub
mov
pop
sbb
aad
movsb
push
aad
lret
or
out
test
cmp
sub
mov
test
and
cs
stc
fmulp
je
aam
mov
xor
sub
fwait
arpl
dec
mov
xchg
out
jmp
fists
mov
cwtl
push
dec
in
pop
and
shlb
push
aas
lret
scas
pop
cmp
mov
fnstenv
add
sti
pop
js
rcll
or
imul
jg
je,pn
mov
pop
push
inc
cmpsl
fists
inc
stos
mov
sbb
adc
xchg
xchg
mov
pushf
jne
scas
mov
insl
sbb
sbb
push
bound
mov
mov
xchg
mov
jo
add
test
incb
popf
xchg
loop
icebp
adc
and
mov
repz
ret
test
push
add
add
push
push
pop
or
adc
test
and
sub
jns
popf
and
push
cmp
sub
neg
mov
mov
xlat
fstps
enter
hlt
lahf
ss
icebp
jecxz
xor
dec
arpl
lcall
mov
in
js
jo,pt
out
aad
into
inc
clc
jns
sti
mov
inc
inc
pop
enter
dec
dec
mov
std
loope
mov
loope
xor
clc
and
adc
add
pop
int
push
jecxz
jl
sbb
xchg
sbb
push
repnz
adc
iret
inc
inc
loope
add
sub
das
cmp
fwait
sbb
arpl
dec
adc
mov
jb
enter
insl
push
mov
jl
mov
mov
repnz
push
lret
test
mov
cmp
rorl
outsl
cmp
mov
jecxz
and
add
push
push
dec
cmp
xchg
ja
int
iret
push
jbe
insl
sub
scas
cmp
jecxz
sti
mov
xchg
int3
in
push
or
mov
inc
adc
or
mov
test
je
outsb
fadd
insl
add
pop
sbb
aam
mov
pushf
fstpt
or
jb
add
jl
sbb
fcmove
lods
cmc
clflush
lods
or
cmp
xor
and
aam
mov
mov
popa
xor
xor
xchg
sbb
mov
jae
rorb
xchg
mov
aam
jle
pop
sar
sbb
ror
inc
dec
cmc
pusha
push
clc
stos
inc
xorl
jge
pushf
and
repnz
fsubrs
mov
nop
jb
jmp
scas
dec
cmpsl
mov
jp
push
push
fnstenv
inc
sbb
add
and
call
pop
stos
loop
adc
cwtl
mov
and
dec
push
mov
fdivl
les
fwait
cmp
and
rcrb
jnp
dec
mov
popl
dec
xchg
cli
sbb
mov
pop
mov
cmc
pop
or
cmpsb
js
lock
fmuls
push
xchg
pop
or
sahf
and
xchg
jbe
dec
in
dec
scas
add
lods
bound
js
xchg
push
jne
fmul
jne
jl
les
mov
cld
adc
xchg
vpshlq
cmp
add
xor
mov
pop
jp
ret
jp
cmp
push
test
push
test
popa
jae
data16
fs
fs
jae
and
sub
mulb
push
cli
xchg
dec
xchg
or
and
mov
aas
inc
rcrb
incl
mov
mov
addr16
push
jmp
in
stos
jmp
cltd
in
cli
mov
sub
mov
out
inc
xor
mov
dec
mov
add
cmpsl
inc
int
adc
cmp
jg
fildl
call
imul
adc
fmuls
ja
jmp
dec
sti
or
and
jl
fs
jle
lret
hlt
pop
cmp
adc
movsb
dec
lahf
mov
test
jl
xlat
sub
cmpsb
out
lret
inc
std
jbe
scas
inc
pmaddwd
cmp
fcmove
jnp
stos
add
pop
aaa
cli
pop
cmc
xor
fwait
jae
xchg
xor
out
fs
and
lret
js
mov
enter
inc
mov
and
fwait
adc
add
jg
andl
push
mov
or
add
push
jns
sbb
fdivs
out
rcl
cwtl
les
add
sub
xchg
ret
jp
mov
mulb
stos
and
fbstp
fstpl
jmp
in
gs
dec
movsb
nop
jnp
sbb
lea
jo
shrl
xchg
mov
push
jge
add
lret
popa
inc
cmpsb
cs
cmpsb
sub
xchg
pop
sub
jae
mov
pop
lds
sub
mov
pop
xor
cmc
mov
mov
xchg
sub
inc
int
loope
sbb
out
adc
aas
mov
sub
sbb
fadd
cmpsb
test
jge
cmp
movb
fs
pop
jnp
mov
mov
shlb
jge
pop
pop
add
push
cmp
dec
and
or
mov
shll
popa
movsl
aam
in
lret
icebp
pop
fimull
pop
lcall
imul
shlb
inc
sub
push
in
sbb
mov
outsl
mov
idivb
and
mov
cmp
push
push
out
mov
addr16
lahf
sbb
jle
fistpll
ss
cli
xchg
or
or
repz
cmpsl
cs
or
arpl
push
adcb
sbb
divb
mov
scas
testb
das
sbb
push
push
mov
mov
sub
scas
inc
sbb
pop
les
and
sub
sarl
fwait
jb
cmp
mov
lea
dec
es
icebp
arpl
negb
pushf
sbb
push
pop
pop
pop
mov
lret
push
lock
addb
cmpsl
cmc
mov
fisttpll
add
dec
mov
movsb
lret
cmpsb
dec
shll
out
cwtl
test
lahf
add
mov
cmp
xor
mov
pushf
call
test
cmp
or
adc
sar
out
repnz
out
inc
mov
fistps
pusha
xchg
mov
mov
cltd
pop
inc
sti
push
fwait
out
push
or
repz
mov
in
xchg
jne
sub
cs
dec
test
pop
pop
daa
lods
mov
jge
mov
repnz
addr16
cmp
fs
adc
ss
mov
jae
inc
xchg
cmp
xchg
outsl
adc
xor
mov
in
scas
mov
in
sbb
jl
mov
pop
and
rcrb
shll
ss
and
ficompl
inc
stos
or
sti
and
adc
popf
inc
cmpsl
shrl
cltd
sbbl
xor
jmp
lret
fldl
inc
into
xchg
inc
sti
xchg
les
ret
pop
mov
xor
fdivs
pop
cmpsb
jg
out
fiadds
in
adcl
mov
lock
movsb
jns
bts
push
adc
or
add
push
dec
fistpl
jp
pop
inc
mov
sub
adc
dec
cmp
scas
sub
fcompl
cmp
mov
pop
sub
ficoms
xor
fdiv
and
mov
std
push
test
fisttps
cli
jge
add
inc
sbb
cmpsb
jnp
lret
das
jns
mov
or
pop
out
push
lods
je
cli
aam
xchg
add
repz
cmpsb
mov
and
mov
cmp
aam
test
jp
xchg
in
negl
sbb
cli
and
popf
nop
pop
and
js
int
cmc
aas
cmp
rcll
pop
sbb
mov
test
sub
test
ljmp
andl
mov
cmp
loop
pop
mov
sahf
adc
add
fs
dec
dec
fsubrp
aam
or
stc
jnp
sub
mov
popa
inc
push
cltd
jne
in
and
insb
mov
in
scas
cmpsl
mov
xchg
pop
cmp
hlt
lods
push
std
jno
fnsave
sub
pop
fdivp
icebp
clc
in
push
in
mov
sti
enter
out
loope
jbe
dec
fimull
add
arpl
and
sub
loop
adc
cmp
pusha
and
cmpb
lods
pop
ja
pop
push
cmpsl
jb
scas
pop
xor
in
mov
mov
push
sub
faddl
adc
pusha
repz
pusha
inc
inc
adc
nop
lret
inc
xchg
mov
aad
popa
adc
pop
in
push
mov
dec
mov
or
icebp
xor
dec
pop
or
bound
sub
aaa
xor
jl
movsb
pop
les
test
jl
std
adc
mov
mov
and
loop
pop
jp
jno
jge
add
repnz
fs
shrb
cltd
push
pushf
mov
mov
mov
sub
pop
je
lods
jmp
jo
fldt
outsl
or
mov
sub
into
rcrb
fsubl
sub
int3
pop
xor
mov
or
test
stc
mov
cwtl
cmp
icebp
mov
mov
outsb
inc
xchg
xor
insl
xor
mov
mov
push
in
movsl
jl
push
mov
jecxz
call
and
jl
bnd
pop
cmp
std
adc
push
out
rolb
fidivl
fbld
mov
push
add
pushf
in
addr16
xor
jmp
or
leave
test
fmul
ss
insb
xchg
pop
data16
movsl
sahf
and
popf
or
pop
xchg
mov
out
push
test
fmuls
and
xor
lea
repz
sub
stc
arpl
inc
and
in
das
mov
add
mov
dec
push
lds
or
xchg
and
and
stc
xchg
adc
int3
fsub
iret
cs
mov
or
xor
jecxz
lahf
in
mov
push
das
mov
mov
inc
xor
in
inc
nop
das
mov
jns
imul
jbe
sub
js
dec
aaa
mov
pop
test
fs
sbb
jnp
or
push
inc
mov
inc
notb
ja
nop
into
aad
cmp
test
in
push
arpl
push
dec
mov
dec
imul
add
xchg
inc
js
push
stc
or
stos
js
rclb
jae
popa
push
add
xchg
lea
or
lds
sub
mov
nop
dec
rcr
mov
push
adc
sbb
negb
jp
rorl
sub
xchg
in
mov
nop
xchg
mov
jmp
cmp
xor
xorl
sub
jp
xlat
mov
popf
xor
mov
pop
test
sbb
pop
shrl
cmp
sar
xchg
and
lahf
loopne
loop
aad
into
add
sbb
mov
mov
dec
jae
xor
cmc
pushf
jecxz
jp
pop
lea
cmp
mov
cmp
cs
stos
inc
cmpsb
inc
mov
mov
adcl
cmp
loopne
add
pop
jmp
roll
and
cmpsb
mov
mov
in
xchg
call
lea
iret
in
aam
mov
jmp
fisubrs
or
mov
xlat
setb
xorl
push
imul
mov
push
sub
arpl
or
or
nop
or
pop
adc
jne
enter
dec
mov
inc
mov
mov
inc
rcl
movsl
xchg
int3
pop
jge
scas
inc
mov
dec
or
pop
add
stos
xchg
jae
sarl
cs
mov
bound
jecxz
mov
not
or
mov
cmpsb
hlt
cli
cmp
sbb
imul
loope
adc
jbe
bound
cs
xchg
mov
mov
dec
daa
fcmovbe
dec
sbb
or
outsl
cs
add
fwait
push
push
inc
add
fimull
xor
jnp
mov
sbb
lock
xchg
xlat
fiadds
loop
inc
mov
or
inc
scas
jl
inc
mov
sub
cltd
cmp
xor
rcrb
bound
mov
push
add
sub
mov
push
pop
push
sub
fildll
mov
dec
dec
shll
xchg
adc
xchg
out
sub
lahf
xchg
arpl
fwait
rol
sub
push
jnp
imul
aad
popf
dec
cmp
pop
fadds
dec
pop
push
shrb
aam
std
push
outsb
fsubr
sbb
pop
jno
ljmp
enter
jae
in
in
iret
ficoml
or
fcoml
int3
xor
push
popf
cmpsl
mov
add
push
dec
stos
or
lcall
aaa
sbb
cmpsb
bound
dec
mov
xlat
xor
push
into
jle
dec
clc
orb
mov
mov
rorb
xor
mov
pop
out
icebp
stc
sub
in
pop
repz
adcb
lret
movsl
clc
les
jmp
adc
xor
into
loope
add
pop
sarl
and
hlt
adc
jp
mov
es
push
dec
enter
rcrl
mov
outsl
pop
xor
mov
push
xor
lahf
inc
pop
stos
mov
adc
mov
add
push
adc
lret
inc
and
cmp
loop
scas
lock
xor
pop
icebp
mov
fistpll
leave
pop
jmp
jne
xchg
dec
fstpl
in
xorl
xor
sbb
les
or
jno
sub
jl
xchg
dec
int3
out
es
inc
imul
ret
push
aam
xchg
jo
das
stc
sbbb
lea
push
dec
subl
jns
mov
out
sbb
cwtl
adcb
cmp
cmp
and
adc
jp
shl
lea
mov
xchg
out
hlt
xchg
jnp
in
add
pop
test
mov
lret
xor
cmpsl
outsl
mov
or
or
mov
mov
pushf
jae
push
push
mov
cmc
mov
sbb
imul
mov
sti
xchg
hlt
xchg
movsl
adc
mov
stos
jg
adc
mov
dec
mov
clc
sub
aaa
rcll
fcompl
pop
adc
fidivl
pop
mov
dec
pop
sub
addr16
shll
outsl
lret
cltd
aas
pushf
or
sbb
mov
or
out
js
andl
or
clc
push
movl
sbb
clc
mov
ret
sbb
push
inc
xor
test
test
push
test
dec
aam
xchg
adc
jb
mov
push
dec
dec
and
rorl
pop
testb
scas
fucom
inc
sbb
mov
pusha
and
sbb
jge
add
inc
add
aam
jne
push
ret
xor
push
jmp
or
imulb
mov
jecxz
or
push
loop
les
mov
pop
adc
jnp
cmp
test
cmp
mov
and
mov
test
push
push
ret
jge
js
xor
out
mov
test
das
iret
loope
jp
pop
rcrb
stos
call
out
mov
into
jbe
sahf
hlt
mov
adc
pop
push
fwait
xlat
mov
leave
lea
push
xor
and
inc
and
sar
test
push
shrb
pop
out
or
in
mov
pop
stos
fsubrl
mov
gs
sti
lret
test
aam
outsl
xor
mov
cmp
jge
push
xor
es
cmc
enter
xchg
imul
out
cmpl
loopne
lds
jno
rolb
clc
push
adc
dec
cltd
sbb
cwtl
cltd
jp
jb
sarl
adc
xlat
mov
xor
add
push
not
xchg
jg
popf
inc
jmp
stos
stos
sub
sub
sbb
fcom
mov
or
xlat
stc
notl
jge
loopne
xchg
in
movsb
mov
in
icebp
test
aas
add
sti
sbb
cmp
mov
test
test
mov
mov
movsl
sbb
loope
movb
mov
jg
and
ficomps
jns
jno
xor
xchg
scas
call
pop
out
add
or
xchg
jnp
and
sub
sbb
cmp
pop
fwait
xchg
iret
scas
mov
in
push
jl
in
adc
jle
stc
jp
cmp
pop
xchg
sti
jo
pusha
xchg
pop
iret
add
fsubl
xor
sbb
jmp
cld
pop
push
scas
push
pop
xchg
nop
mov
fs
xor
call
mov
pop
aaa
test
xchg
lret
cli
mov
jl
adc
pop
jne
pop
sub
repz
inc
out
popf
inc
mov
xchg
insb
movsl
add
movsl
sub
lret
popa
sbb
sbb
lahf
add
insb
cs
lret
mov
cltd
outsl
jb
lea
iret
mov
outsl
xchg
add
cmp
rorb
mov
xor
cmc
dec
sar
xor
jl
fiadds
jmp
popa
cwtl
mov
jnp
imul
and
push
call
lds
adc
adc
inc
sbb
mov
jne
mov
mov
sub
icebp
iret
jae
xchg
and
shrb
outsl
fstps
test
stc
fisttpll
in
lock
divl
ss
mov
sub
imul
xchg
sub
pushf
xchg
or
test
jle
ror
inc
pop
adc
pusha
movsl
ret
jecxz
lods
mov
jp
inc
fists
call
rolb
ds
je
mov
cmpsl
ss
sbb
scas
sub
lret
out
iret
or
push
add
push
push
popf
cmp
xchg
pop
testl
in
lret
push
cli
xor
call
sbb
push
in
sbb
fildl
cltd
xchg
stc
mov
pop
jo,pn
push
mov
in
sub
sub
mov
adc
and
data16
jns
fdivs
push
sub
xchg
mov
jne
push
lea
in
fs
xchg
mov
xchg
inc
cli
pop
cmp
fidivrs
bound
sar
fs
movsl
jno
out
mov
jg
fwait
test
mov
ljmp
dec
loopne
das
inc
ficomps
fs
sti
pop
pop
lcall
je
arpl
mov
testb
add
mov
neg
cmp
sbb
rclb
mov
ss
jle
gs
push
out
mov
ds
sub
shlb
mov
pop
sti
mov
lret
mov
xor
mov
xchg
and
inc
hlt
aas
out
imul
pusha
add
in
subl
outsb
out
adc
inc
sub
repz
jl
inc
inc
xor
mov
lds
pop
adc
xor
jns
shl
jnp
fsubrl
int
test
pop
std
sbb
insb
xchg
mov
sub
or
push
adc
inc
jmp
out
dec
test
add
cmc
shrl
mov
xchg
pop
mov
dec
jmp
adc
mov
xchg
roll
mov
scas
xorb
lea
cli
push
cmp
mov
lds
xchg
loope
les
adc
dec
xchg
es
push
sub
gs
xlat
fsubs
inc
cmpsl
in
in
imul
repz
jb
jne
dec
xchg
adc
jp
push
push
inc
push
jno
pop
andb
jmp
xchg
adc
lods
imul
xor
clc
outsb
inc
mov
sub
fstl
aad
jg
incb
mov
xchg
dec
popa
fdivl
outsl
shl
sbb
pop
inc
fldenv
mov
fdiv
cwtl
popa
rcll
sbb
and
pusha
add
mov
pop
enter
mov
inc
ss
mov
mov
jl
jge
fstpt
cltd
adc
xchg
pop
mov
out
jo
xor
aaa
or
mov
add
push
sbb
push
insb
mov
stos
adc
shlb
in
push
adcb
fcomps
jge
jp
mov
in
shlb
rclb
push
jmp
or
into
pop
jge
cmp
sti
outsb
inc
inc
flds
jmp
outsl
push
or
mov
adc
movsb
aas
cmp
mov
insb
les
std
inc
test
cmc
and
mov
jle
pop
dec
pushf
out
mov
sub
sub
dec
push
mov
or
js
jb
push
jg
pushf
cltd
push
cmp
xchg
scas
jb
cmp
push
mov
cmp
push
push
inc
call
mov
or
dec
cltd
mov
sarb
sub
ffreep
mov
xchg
and
pop
add
adc
dec
push
andl
sarl
jo
xor
mov
sahf
stos
xor
pop
and
test
shll
out
sbb
mov
les
pop
frstor
add
outsb
or
xor
mov
daa
imul
mov
mov
ja
or
or
sahf
das
and
xchg
adc
adc
stc
and
fdivs
cltd
mov
or
push
aas
jp
movsb
xchg
js
xchg
imul
push
aam
imul
xor
sbb
fdivrl
shlb
xor
stc
jne
addl
loop
cmpb
add
pushf
mov
or
adc
lock
cltd
es
roll
insb
dec
xchg
loop
pop
imul
out
mov
in
and
push
lcall
jno
nop
insl
sarl
loop
movsb
mov
pop
or
push
lods
btc
aam
mov
sub
mov
cltd
loop
push
imul
ss
pop
cmp
xchg
adc
pop
mov
sub
jne
pop
push
cmp
daa
fisubs
mov
mov
sbb
into
xchg
idivl
mov
cli
out
push
adc
sub
fcom
int3
mov
cli
push
pop
xchg
push
ljmp
sti
mov
mov
jecxz
push
leave
xor
xor
call
dec
xor
ja
xchg
fwait
hlt
cmp
lcall
cmpsb
mov
mov
jp
jmp
aas
or
into
ljmp
cli
test
ffreep
xor
imul
bound
cmpsl
xchg
rcl
movl
jns
popa
sub
push
bound
fs
mov
jne
xchg
out
mov
xchg
xchg
subl
sub
push
andl
test
addr16
popa
adc
pusha
test
fisubs
or
jle
adc
mov
add
cwtl
fwait
mov
test
sub
mov
ret
test
jge
xchg
repnz
add
sub
fwait
movsl
push
xchg
mov
and
and
pop
rorl
xchg
fdivs
fists
movsl
repnz
jle
and
mov
imul
imul
mov
push
in
sub
rolb
data16
adc
inc
push
cmpsl
idivb
ss
pop
movsl
repnz
loope
in
xor
push
mov
je
and
cmp
xchg
cmp
out
mov
in
push
mov
dec
push
out
and
xchg
mov
jle
push
adc
add
icebp
xchg
test
adc
enter
xor
xor
mov
jl
cmpsl
dec
jle
xchg
rorl
or
mov
jb
mov
adc
leave
repnz
push
sub
xor
jo
jecxz
mov
andb
mov
out
repz
adc
push
mov
iret
inc
ljmp
popf
aad
daa
bound
sbb
xchg
or
mov
subb
movsl
jmp
std
add
loop
dec
imul
sub
xchg
jg
out
push
cwtl
std
mov
out
xchg
cmp
cmp
jl
dec
shrb
jge
das
add
lods
pop
xchg
push
push
mov
dec
fadd
jg
mov
xor
popf
shrl
lahf
inc
ss
jne
push
cld
negb
fs
orb
fdivrs
and
pop
mov
push
sbb
jo
stos
xor
dec
jg
add
in
add
xor
and
fstps
arpl
in
xor
outsl
lret
ja
cmp
mov
jns
dec
mov
or
add
mov
xchg
int
push
pop
fidivl
sub
iret
adc
xchg
mov
popf
inc
int3
int3
fs
push
ds
repz
fldl
fcmovne
and
lahf
ljmp
xchg
cs
inc
ficoml
cmp
aam
sbb
add
nop
out
mov
mov
dec
les
btc
fwait
sub
xchg
imul
mov
fsubrl
std
cltd
fidivrl
cld
leave
jae
and
fneni(8087
dec
and
sbb
sarl
fnstenv
jnp
jae
pusha
or
add
xchg
outsb
aam
dec
mov
add
mov
pop
repz
lahf
test
les
rolb
inc
enter
out
popf
dec
scas
into
jle
mov
into
std
icebp
sbb
dec
repnz
xor
int
mov
stos
sbb
andl
cld
and
sub
je
dec
add
addb
cmp
mov
pop
jcxz
arpl
xlat
xchg
cmp
out
nop
mov
ja
popf
repz
sub
xchg
jmp
dec
mov
mov
sti
mov
mov
cltd
fbstp
dec
js
and
call
mov
inc
std
mov
cwtl
pushf
imul
cmpsb
aad
pop
push
mov
icebp
mov
cs
int
mov
push
xchg
mov
aad
and
xor
and
mov
test
arpl
xor
pop
or
inc
arpl
sbb
sub
fwait
jecxz
push
xchg
shrb
jl
add
lods
cmpl
bound
xchg
pop
fwait
inc
xchg
adc
hlt
aam
negb
dec
and
sbb
ljmp
fs
add
test
pop
or
add
es
leave
pusha
adc
dec
xor
inc
repz
iret
pop
sub
aam
cmp
popf
pop
or
and
out
fcmovnbe
push
or
pusha
adc
sbb
pop
add
sbb
ret
sbb
out
dec
push
fists
xchg
cli
lock
pop
rorl
clc
sub
nop
lahf
jb
jne
cmp
ss
add
std
ss
arpl
dec
push
xor
sub
adc
inc
push
add
lret
mov
imul
lods
jns
das
cmp
mov
and
outsb
xchg
iret
cwtl
js
add
mov
sub
sub
into
repnz
imul
mov
stc
push
ds
outsb
out
push
sbb
lock
lret
test
and
push
sbb
jnp
or
mov
pop
hlt
out
mov
mov
imul
lret
mov
sub
jb
jbe
xor
lret
mov
mov
out
aaa
xchg
insb
add
test
nop
je
imul
inc
mov
ljmp
inc
insb
jle
stos
cwtl
popa
ds
insb
test
ficomps
cmp
push
je
testl
sbb
mov
cs
sbb
mov
cmp
mov
dec
lea
mov
jae
inc
mov
fcomp
pop
lods
jae
add
xor
xor
ficompl
push
popa
imul
mov
mov
out
jg
repz
cwtl
jo
cmp
push
cmc
xchg
stos
ret
xchg
mov
clc
cmpsl
js
out
fnstenv
pushf
not
rcl
xchg
mov
xchg
dec
adc
push
mov
jbe
in
popa
fdivs
add
lock
jp
mov
xor
sbb
and
scas
lcall
jo
shrb
cpuid
adc
dec
sbb
cmpsb
adc
movsb
pop
push
push
jl
out
jmp
sbb
dec
addr16
das
jb
incl
cmp
xchg
xchg
ds
repnz
xchg
in
cwtl
scas
mov
or
subl
mov
push
mov
dec
divb
push
mov
xchg
mulb
push
adc
in
jecxz
mov
outsb
xchg
push
mov
mov
ret
jg
xor
sub
sbb
icebp
jae
inc
je
outsl
mov
fwait
or
inc
adc
repz
dec
test
jge
adc
movsb
popa
add
cwtl
push
and
push
insb
popa
jg
jae
sahf
in
pop
aad
fidivrl
iret
pop
xchg
testl
cmc
xor
repnz
mov
or
xchg
and
imul
outsl
scas
pop
inc
cmp
add
int3
popf
push
mov
clc
push
mov
and
push
shlb
and
xchg
sbbb
aaa
mov
scas
icebp
cmp
jge
testl
mov
shl
jmp
jl
inc
cltd
stos
clc
dec
pop
push
fstpt
pushf
ljmp
lcall
fs
shlb
sbb
imul
or
jle
pusha
cld
scas
enter
orb
add
rclb
pusha
imul
dec
xchg
cwtl
mov
movsl
mov
out
out
pop
push
pop
call
fiadds
or
add
vmovdqa
xor
loop
adc
mov
mov
push
mov
push
mov
inc
pop
aas
out
pop
cld
and
es
push
dec
mov
or
enter
loop
notb
xchg
xor
inc
mov
mov
cwtl
and
sbb
cmp
inc
push
cmp
inc
icebp
stos
or
jo
mov
repnz
adc
mov
popa
push
mov
pop
and
push
add
shrl
mov
sbb
mov
data16
or
lret
xchg
andl
sub
out
dec
movsl
ja
imul
inc
cmp
lods
inc
sub
out
sub
es
test
xchg
stos
lds
push
sbb
push
dec
pop
aas
pop
mov
bnd
fisttps
ss
sub
out
lret
rcrl
hlt
jl
adc
jnp
rclb
adc
and
inc
mov
sub
sub
cmp
in
lret
sahf
into
iret
push
jns
dec
jp
sub
jnp
addb
pop
imul
add
clc
mov
pop
aas
fisubrl
push
fsubrl
cmp
mov
movsb
in
mov
lea
pop
dec
stos
stos
push
data16
mov
orb
mov
lret
out
adc
aad
or
or
ficoms
andb
fs
mov
jne
sbb
cmpsb
fdivrl
sti
mov
dec
and
xchg
lods
add
pop
loopne
outsb
jno
in
ljmp
sub
ds
add
xor
pop
je
fpatan
fsubl
cs
inc
adc
in
faddp
inc
popa
test
or
das
pop
add
pop
push
movsl
sub
scas
lahf
mov
daa
fs
or
cli
add
xor
lock
or
cltd
push
fistps
xor
call
test
loop
cmpsb
mov
cmp
and
insb
or
mov
mov
lods
stos
cmp
dec
aas
mov
adc
jmp
mov
add
cs
sbb
inc
cmovg
adcl
push
jo
outsl
sarb
outsb
push
xchg
fadds
cwtl
lret
scas
fldl
dec
and
xor
cli
sbbb
mov
rcll
sub
fcomi
xchg
mov
inc
ljmp
imul
outsb
push
call
outsl
popf
xorb
mov
outsl
dec
jns
mov
mov
inc
in
repnz
jmp
outsb
mov
jno
lcall
dec
neg
fldenv
aam
jmp
mov
hlt
movsb
scas
mov
push
int
imul
xor
mov
out
cs
in
xor
int3
cmpb
cld
das
lret
add
xchg
adc
fcmovu
jo
mov
add
into
push
and
sub
and
sti
sub
popa
lcall
mov
rcr
inc
inc
mov
ljmp
ja
cltd
loop
pextrw
cmp
push
cmp
or
iret
setl
rcr
or
pop
orl
enter
das
sti
jo
jmp
add
jp
data16
push
sbb
mov
xor
rolb
mov
dec
adc
and
push
cmc
test
in
imul
jne
fdivrs
dec
cwtl
dec
aas
mov
je
icebp
popf
in
out
jns
mov
out
fs
repz
dec
xor
cwtl
add
pushf
ljmp
sarb
test
push
jg
pminub
subl
in
mov
add
or
adc
jle
or
inc
addr16
scas
fxch
and
outsb
les
pop
xchg
cld
iret
divb
data16
sub
inc
fdivr
mov
push
mov
nop
addl
scas
mov
sub
mov
inc
bound
dec
icebp
adc
rolb
xor
or
mov
gs
cmpsl
adc
mov
test
rorl
test
cmp
cmovs
jns
sbb
stos
pop
sbb
mov
popa
das
push
or
ret
adc
hlt
fcmovnu
inc
sub
jmp
test
pop
and
nop
imulb
xor
inc
push
fsubl
mov
xchg
add
xchg
and
jle
cld
inc
in
jl
adc
jp
cmpl
fdivs
cmpsb
mov
popl
xchg
test
jp
sub
pop
and
pop
sbb
mov
jne
repz
fucomi
sbb
fstps
sbbl
push
mov
repnz
ficomps
jge
add
xchg
pushf
dec
int3
jbe
pusha
jbe
test
iret
sbb
mov
xchg
inc
lods
xchg
jo
xchg
sub
cmpsb
outsb
xchg
pop
into
es
add
push
movsl
incl
mov
orl
xchg
mov
dec
test
inc
push
dec
inc
lods
lcall
int3
mov
aam
test
pop
and
mov
pusha
mov
stos
cmc
mov
and
adc
or
jmp
fwait
icebp
je
mull
dec
xchg
mov
mov
xchg
out
cs
pop
test
xchg
rcl
push
cmp
scas
push
inc
jb
loop
mov
xor
mov
or
clc
mov
js
lahf
in
ja
inc
adc
mov
mov
lret
scas
inc
clc
iret
or
outsb
mov
inc
xchg
add
or
faddl
cmpsl
and
aas
dec
pop
xchg
push
jg
aas
inc
and
jle
mov
int3
jmp
lret
add
sbb
insl
leave
sub
incl
shrb
cmc
push
xor
pusha
gs
addr16
dec
xor
pusha
pop
pop
pop
imul
mov
popa
adcb
rcrl
push
scas
enter
lds
sti
xor
and
cmpsl
out
xchg
into
sti
das
mov
into
lock
inc
popa
aas
add
mov
push
xchg
adc
sbb
in
lock
inc
adc
test
and
xchg
nop
mov
or
into
and
dec
push
mov
add
inc
shrl
icebp
divl
sbb
fwait
shll
and
pop
popl
sbb
push
loopne
mov
inc
sti
push
dec
std
outsl
or
pop
in
lds
cmp
lea
mov
ret
adc
cmp
scas
and
mov
ss
negb
sbb
ja
add
dec
mov
gs
fcmovbe
std
dec
cmpsb
cmp
repnz
push
and
pop
xchg
and
int3
das
push
fsubp
pop
je
addr16
mov
bnd
andl
cmpsl
mov
mov
in
xor
cmc
or
add
or
mov
lock
shrl
movsb
daa
or
cmpsl
mov
sti
mov
lock
rclb
lcall
imul
mov
mov
int
dec
jmp
inc
pusha
adc
dec
aad
mov
sub
xor
jnp
shrb
sbb
movl
orb
and
inc
jmp
inc
lret
mov
and
jns
scas
cmpsl
jg
xor
jmp
bound
add
add
fisttpl
sbb
adc
jmp
cwtl
and
mov
mul
xchg
stc
mov
das
xchg
jo
cli
mov
pop
xor
adc
addr16
f2xm1
outsb
pop
sub
das
sbb
in
or
or
cmp
test
sbb
repz
mov
mov
fwait
jmp
mov
fstp
or
ja
insb
pop
das
xchg
sbb
xor
movsl
pop
insb
inc
popa
loop
fiadds
mov
testb
sti
jp
sbb
dec
sarb
sbb
shll
fs
or
jp
lods
pop
int
nop
push
ret
sahf
fsubrp
addb
scas
pop
leave
mov
push
mov
cmp
mov
add
sbb
mov
movsb
and
sbb
push
pop
jecxz
inc
cli
cli
and
xchg
pusha
fdivrl
mov
fwait
pop
xchg
jg
ljmp
addr16
rcr
and
outsb
daa
stc
or
ljmp
shrl
sbb
push
out
insl
mov
add
movsb
data16
xchg
cmp
xchg
scas
inc
pop
sub
js
mov
mov
push
and
sbb
out
loop
inc
pop
xor
int
xchg
mov
mov
fcompl
scas
in
sub
push
add
pop
or
jo
inc
data16
mov
push
mov
sbb
sub
cmovl
pop
mov
dec
popa
xchg
fs
into
mov
fwait
repz
clc
add
adc
mov
mov
lock
insl
cmpsl
dec
or
stc
mov
sub
rcl
mov
push
jmp
bound
jae
and
imul
out
cmp
leave
mov
mov
fidivl
mov
jecxz
clc
hlt
mov
mov
lret
repnz
gs
push
add
dec
push
test
test
dec
sub
data16
jo
sarb
xor
insl
pushf
stos
sysexit
pop
in
and
sbb
xor
repnz
cs
test
mov
push
in
inc
jp
es
mov
inc
dec
js
mov
xchg
out
leave
rolb
cmc
inc
in
shl
test
int
movsl
jb
cld
mov
movsb
and
jp
and
add
sahf
pop
pop
sbb
cmp
gs
push
ret
jb
and
xor
shld
arpl
repz
cmc
adc
xchg
pop
hlt
mov
stc
pop
mov
and
lods
xchg
cmp
jnp
es
mov
sub
sahf
inc
mov
jle
sub
lods
mov
clc
mov
leave
adc
mov
cmp
movsb
popf
insb
push
push
sub
fidivs
mov
jno
andb
push
in
in
xchg
xchg
xor
scas
sub
in
cmp
mov
mov
scas
inc
inc
subl
jle
fldcw
repnz
inc
xchg
mov
rcrl
push
mov
push
adc
xor
mov
mov
fwait
xchg
mov
pop
loope
bound
sub
sbb
test
out
subb
lea
push
leave
pop
and
fisubs
out
sbb
sbb
maxps
cmpsb
sub
mov
je
fldl
cmp
cmpsb
mulb
pop
loopne
or
hlt
or
dec
pop
mov
xorl
loope
dec
sahf
out
std
add
xor
push
or
fcomp
dec
lds
cwtl
ss
cmpsb
iret
call
mov
xchg
sbb
arpl
dec
shll
or
leave
mov
add
push
push
repnz
jne
or
mov
lcall
and
mov
push
ja
aaa
lret
and
shlb
pop
push
sub
movsl
ljmp
xor
sbb
mov
sub
pushf
adc
dec
into
cmpsl
mov
pop
adc
mov
xchg
sub
bound
jbe
movsb
test
xor
insb
call
sbb
movsb
ljmp
sub
lea
aad
mov
ror
fnstcw
lahf
sbb
pop
and
sub
cmp
int3
mov
es
sbb
fwait
push
pop
out
lods
int
dec
stos
nop
shlb
mov
add
in
rclb
push
fadd
cmpsl
mov
cmp
push
pop
test
arpl
stos
cwtl
sbb
lock
ds
enter
fidivrl
stc
ficomps
mov
xchg
sub
cmp
sahf
lcall
shrl
cltd
xor
inc
les
xchg
repz
fistpl
xor
lret
fbstp
mov
pop
jbe
decb
lds
aad
xor
in
clc
adc
adc
rcll
hlt
sbb
dec
orb
pop
sbb
cltd
mov
ret
inc
pop
movl
push
mov
jle
enter
mov
or
ret
xchg
loopne
std
fmull
lret
jns
and
in
mov
or
cmc
adc
xlat
mov
cmpsb
sbb
or
das
fmulp
movsb
in
jg
es
inc
mov
gs
jmp
adc
popa
lcall
mov
in
sbb
dec
jbe
cli
mov
and
inc
or
cmpl
inc
ljmp
sbb
mov
jo
jmp
jle
mov
pop
mov
cld
adc
xor
int3
and
jns
in
pop
outsl
or
imul
cmc
sar
cmovle
rcrl
into
and
inc
shll
out
fistpl
int
jnp
arpl
push
sub
push
add
stc
ds
mov
mov
add
xchg
sbb
nop
sbb
dec
rcr
xchg
jnp
mov
cmp
mov
cmp
xor
mov
xor
xor
sbb
clc
subb
enter
lret
xor
pop
ret
jo
cwtl
sbb
fsts
sub
addr16
lds
rcll
adc
or
jno
pop
pushf
xor
push
movsl
pop
mov
push
addl
movsl
xlat
inc
add
dec
loope
inc
movl
ljmp
push
sbb
sub
hlt
ret
inc
outsl
loopne
jl
rcll
pop
scas
jge
pop
es
mov
imul
shl
lods
pop
jo
dec
fmull
dec
fcoms
ja
mov
psrld
stos
inc
int3
es
mov
cmp
mov
push
lea
ret
roll
sbb
idivb
shr
xor
mov
and
call
pop
xor
pusha
arpl
or
xor
dec
pop
aam
ret
or
in
test
xor
rclb
loopne
xchg
orb
push
pushf
xchg
inc
sub
cmp
and
sub
repz
jl
dec
loop
dec
les
shll
push
xchg
inc
sub
xchg
lea
xor
or
aas
pop
push
mov
sub
mov
iretw
push
xor
jns
push
mov
aad
adc
ret
int3
mov
jge
gs
imul
int3
xor
cmc
lods
and
mov
mov
jl
pusha
jae
mov
jp
mov
mov
popf
mov
adc
hlt
insl
das
inc
xchg
int
pop
sub
ds
dec
push
aaa
jo
pusha
fs
lahf
add
inc
or
xchg
imull
add
repnz
sub
xchg
shlb
arpl
fidivl
es
mov
out
push
cli
fistl
sub
add
xor
int
or
cmpsb
or
aam
jcxz
add
mov
mov
stos
outsl
adc
cmp
jecxz
cmp
sbb
inc
sub
pop
lock
mov
mov
sarb
aam
jp
leave
ret
jne
xchg
and
adc
and
sub
and
mov
fcoml
dec
std
dec
int3
icebp
and
or
add
jmp
fnstenv
stos
mov
iret
pushf
inc
bound
clc
insb
nop
pop
xchg
mov
es
jnp
in
pop
pop
out
pop
add
lcall
adc
je
xlat
sbb
jne
stc
orb
mov
hlt
lds
mov
repz
inc
mov
in
push
loope
bnd
cmp
lock
in
ret
inc
out
mov
test
sub
and
clc
sub
mov
call
jbe
sbb
js
ficoml
enter
popa
inc
mov
leave
push
loop
shl
movsl
dec
pop
sbb
mov
stc
cmp
in
les
sub
jnp
pop
pop
sbb
and
sub
sub
cltd
push
pushf
xor
adc
cmp
xorb
es
popf
mov
sub
mov
or
sub
xchg
fstps
lcall
loope
lods
imul
pcmpeqw
and
arpl
loope
adc
jne
or
sbb
arpl
and
sbb
fsubl
call
hlt
ret
xchg
pop
or
fnsave
fwait
test
repnz
iret
dec
xor
ret
or
cltd
sbb
sbb
loop
lcall
insl
dec
pop
lea
fiaddl
pop
dec
int3
and
mov
mov
out
mov
push
and
push
repnz
pop
iret
lret
cld
out
sbbl
addb
rolb
mov
in
mov
jp
aad
popa
call
mov
clc
push
sub
mov
fmull
or
int3
fimuls
aad
fwait
mov
push
mov
ror
pop
xor
push
cmp
inc
popf
xchg
inc
xchg
jecxz
cmpsl
jp
push
pop
mov
pop
push
xor
xchg
push
loope
clc
pop
push
hlt
sub
int3
loope
mov
imul
aas
rolb
sbb
mov
dec
lcall
gs
lret
or
xchg
fisttpll
adc
test
cmp
addr16
cmp
lret
shlb
negl
add
mov
out
cltd
jl
imull
and
out
fcoml
int3
pop
dec
shlb
in
jp
bnd
jbe
xchg
inc
sti
or
daa
fs
pushf
ficoml
xchg
cmp
cmp
ficompl
mov
ret
xlat
or
or
push
mov
in
sub
or
pop
mov
add
sub
inc
call
mov
inc
loope
xchg
in
push
leave
lret
push
ret
dec
sub
adc
mov
inc
iretw
dec
jle
popf
aaa
pushf
daa
stos
sub
call
xor
test
les
dec
cmp
adc
out
xor
push
dec
jmp
pop
cmp
hlt
xchg
push
call
out
in
jle
cmp
jo
testb
dec
xchg
in
fs
jmp
mov
cmpsb
arpl
std
inc
add
sbb
lret
push
inc
adc
enter
adcb
es
sbb
lock
ljmp
and
pop
sub
mov
mov
fcmovu
cmp
xchg
xchg
sub
pusha
cmpsl
jle
pop
nop
cmc
jbe
repnz
and
jnp
fisubrs
xor
mov
lock
leave
int
mov
xchg
adc
pusha
mov
movsl
shlb
outsl
dec
addr16
ss
pop
push
fpatan
pop
outsb
dec
insb
xchg
sbb
iret
and
iret
out
cmpsb
adc
insl
fldl2e
push
mov
jmp
dec
adc
cmp
repz
scas
dec
xchg
into
movsb
jb
pushf
in
mov
inc
push
xchg
adc
inc
mov
outsl
imul
addb
or
ss
inc
insb
bound
pop
pop
mov
adcb
or
pop
mov
mov
push
inc
mov
ja
sahf
xchg
movsb
mov
xor
sub
aam
push
imul
sarb
mov
xor
dec
jns
and
lcall
iret
push
stos
psrad
xchg
iret
mov
and
xor
rolb
jp
test
add
imul
sarb
mov
movsl
mov
into
dec
xlat
adc
adc
xchg
jns
in
push
sub
mov
push
imul
popa
int
fwait
in
repnz
mov
nop
pop
dec
cmp
arpl
jnp
adc
shll
adc
xchg
and
ds
push
jle
cltd
xchg
lahf
stc
sbb
and
pop
cltd
mov
sbb
mov
pusha
call
add
push
frstor
or
fistps
inc
jl
push
xor
lea
ret
outsb
cmc
dec
loope
int
ret
add
xlat
push
inc
adc
push
push
pop
int
inc
dec
lret
jns
sub
ja
xchg
xchg
mov
sub
ret
pop
push
std
cmp
imul
cmp
and
push
mov
inc
push
mov
and
pop
dec
scas
jg
arpl
jl
into
pop
out
cmp
inc
push
dec
outsb
int3
movsb
or
imul
das
lahf
mov
clc
cmp
je
push
call
ljmp
xlat
cs
int3
jns
push
jbe
insb
pop
stos
fwait
andb
dec
mov
sahf
aad
mov
sahf
fs
jl
sub
xchg
hlt
stos
mov
fucom
sub
mov
scas
sahf
nop
jle
jl
pop
xchg
je
scas
adc
xchg
mov
cmp
or
ret
mov
das
jbe
ficomps
dec
or
in
xlat
insl
lcall
out
sbb
mov
xchg
mov
jge
fs
dec
jnp
leave
fsubs
sti
mov
and
add
mov
subl
adc
sahf
xor
loope
in
cmp
arpl
dec
ja
out
test
js
test
in
ret
cmp
jo
movsl
inc
cmc
sbb
das
or
cmp
xor
jb
mov
fldl
lcall
ret
add
push
pop
jne
sub
fwait
mov
and
xchg
or
push
repnz
jne
lret
mov
sbb
sbb
sbb
insb
xlat
ljmp
pusha
mov
test
and
sub
mov
or
in
sub
cmpsl
sbb
dec
sub
mov
es
mov
cwtl
push
je
dec
data16
aaa
mov
stos
xchg
cli
int
pusha
mov
fistps
repz
xlat
mov
mov
aaa
xchg
aaa
inc
lahf
dec
stos
adc
dec
fsubrl
faddp
mov
rol
xchg
repz
scas
and
shll
sub
cmp
xlat
cmpsl
out
pop
inc
sbb
cmp
push
ret
clc
lcall
sub
add
loopne
fistl
push
rcll
and
mov
fcomps
adc
lret
mov
pop
fstpl
push
cmp
jno
insl
dec
sti
faddl
sbb
out
adc
out
mov
push
stos
mov
mov
test
in
insl
iret
mov
scas
push
aaa
jne
jnp
sbb
mov
ds
clc
dec
jae
xor
int
outsb
rclb
test
jae
push
sub
push
jns
pop
cld
and
add
cmp
mov
aam
dec
mov
loopne
mov
add
or
cld
cld
mov
push
pop
adc
in
std
mov
sbb
adc
and
add
push
fidivs
shrb
mov
popa
sub
icebp
fwait
and
inc
call
pop
jg
xor
mov
fsubl
ds
sub
and
adc
pop
cmp
loop
or
mov
adc
jp
pop
insl
sbb
aas
push
xor
lods
jge
xchg
daa
jo
mov
push
out
jb
inc
pushf
add
pop
mov
into
andb
lds
in
lret
push
sbb
adc
or
pop
les
sub
pop
push
dec
sub
popf
enter
in
inc
jnp
push
mov
shrb
adc
leave
out
lock
shrl
add
sahf
test
imul
or
pop
movsl
imul
repz
loopne
ret
xchg
ret
and
stos
sbb
cmp
cmp
jge
mov
dec
scas
add
add
jmp
in
jno
fdivs
jno
pop
incl
icebp
mov
popf
add
cmp
shrb
jne
and
jns
xadd
stos
mov
sub
or
cmc
mov
mov
mov
dec
dec
dec
mov
mov
inc
inc
cltd
adc
add
or
push
or
adc
cmp
fdivl
pop
jmp
or
sub
cmpsb
mov
fidivrl
mov
sarl
cmp
push
xchg
out
or
clc
dec
adc
scas
loop
int3
sub
inc
int3
mov
jno
shrb
out
fdivrl
daa
mov
sub
xchg
mov
inc
lods
mov
adc
imul
xchg
add
incl
jae
ljmp
rclb
xlat
ret
lahf
push
repz
mov
mov
into
rolb
movsl
test
lods
ds
and
jl
jne
cs
or
stos
insl
xchg
pop
and
pop
into
ja
mov
cmc
pushf
imul
test
das
imul
dec
pop
add
dec
adc
mov
neg
add
sub
push
aaa
pop
ret
inc
sub
jg
or
adc
fadd
aas
pop
fnstenv
sub
stos
rcll
mov
and
xor
fiadds
fistpll
out
sti
pop
mov
sti
pop
xor
inc
dec
outsb
dec
adcb
shrl
inc
sub
lcall
sbb
std
out
scas
rcr
in
fildll
les
mov
xchg
jo
push
cmp
lock
push
movsl
or
mov
shlb
out
mov
push
xor
adc
mov
mov
ret
jno
js
push
test
xchg
xchg
xchg
cld
stc
inc
cs
or
adc
sub
and
cwtl
aas
push
inc
push
dec
push
inc
cwtl
ret
sub
mov
and
rcrb
xor
xor
xor
loopne
out
rcr
xor
shrl
cmpsb
arpl
and
xchg
xor
out
add
push
call
int
xchg
test
xchg
lcall
dec
cs
imul
sub
cmpsl
xor
fsts
jecxz
mov
adc
cmp
sbb
sahf
hlt
add
scas
repnz
cmpsl
ljmp
jno
push
add
mov
push
nop
shrb
and
cmovnp
inc
jne
push
and
dec
sbb
cmp
int
dec
repnz
xor
or
rcrl
cmpb
adc
xchg
cmpsl
outsb
nop
cmp
mov
xor
pusha
jae
cmc
mov
sbb
mov
cmp
orb
movsb
sbb
mov
sbb
jl
leave
leave
testb
mov
icebp
insl
mov
add
cmp
leave
in
negl
popf
int3
addr16
sbb
xchg
in
mov
pop
sub
inc
pop
pop
jae
popa
mov
mov
sahf
aaa
cmc
jbe
aam
sbb
shlb
sub
shrl
ret
stos
ffree
and
pushf
pop
fildl
cltd
dec
nop
and
pop
inc
aam
repz
add
data16
int
dec
or
ds
xorb
inc
gs
int3
leave
adc
aam
inc
inc
push
insb
orl
push
sub
xor
pop
adc
xor
push
pop
adc
shl
pop
pusha
adc
and
ja
xchg
pop
test
cltd
jns
addr16
test
add
out
adc
imul
sub
int3
push
cmpsl
idivb
ret
xchg
jns
jecxz
loop
xor
and
icebp
ja
inc
jne
jns
cmp
lret
daa
pushl
fbstp
dec
in
push
dec
push
cld
and
pop
popf
fsubs
xor
inc
mov
push
insb
imul
cmp
jmp
adc
xchg
daa
sub
popa
jbe
jae
scas
dec
sub
sahf
inc
push
lock
fildll
lds
lahf
pop
jae
push
add
mov
xor
scas
jae
shrl
ret
lret
sbbb
xchg
cmp
icebp
lahf
adc
mov
or
loopne
xchg
cvtdq2ps
jp
dec
push
adc
mov
mov
in
movsl
xor
rcr
les
popa
ret
sub
fstp
sbb
das
hlt
shll
cmc
and
aam
lds
mov
dec
lret
repnz
mov
andb
repz
ds
mov
xor
clc
sub
mov
dec
lods
sbb
lcall
cwtl
addl
je
in
nop
fidivrs
stos
aad
mov
push
cmc
inc
mov
mov
pop
jge
dec
push
ss
lea
rcl
leave
push
cmpb
or
cld
pop
or
add
insb
sbb
jecxz
add
pushf
es
sbb
repnz
add
dec
pop
arpl
or
add
fiadds
in
dec
dec
adcb
fucomip
mov
subl
inc
dec
and
jae
sbb
pushf
subl
mov
cmp
nop
cltd
jb
xchg
dec
inc
scas
test
xor
jnp
iret
movsl
jbe
mov
dec
jb
aad
rorb
xor
aaa
pop
nop
mov
jg
stos
clc
inc
stos
mov
test
mov
xchg
cmp
repnz
lock
push
fildl
cmp
push
jbe
andl
pusha
stc
inc
dec
loope
xor
ss
mov
fs
cmpsl
cmpsb
add
cmp
scas
sahf
ds
inc
xor
imul
andps
aaa
mov
hlt
add
jo
loop
sub
pop
adc
cwtl
cmc
arpl
or
mov
cs
xchg
inc
cltd
aad
jo
repz
pop
inc
sbb
jg
mov
hlt
ljmp
and
mov
movsb
sahf
repz
mov
and
add
xchg
xor
insb
dec
mov
dec
cltd
ret
jmp
or
ljmp
pop
sbb
pop
in
adc
hlt
ret
test
lcall
mov
pop
fs
mov
test
cltd
andl
iret
mov
maskmovq
imull
xchg
jl
insb
std
das
sbb
test
lahf
ret
mov
repz
out
jecxz
add
movsl
fimuls
loopne
les
ja
sbb
fcom
test
std
cld
call
out
mov
xchg
mov
cmp
ficoml
lret
xchg
or
arpl
jle
punpcklwd
cmpb
jb
cmpsb
inc
jb
movsb
lock
fcmovnbe
incb
mov
push
lcall
and
sbb
std
mov
and
in
pop
test
sub
xor
mov
lock
sarb
lahf
arpl
mov
into
jnp
or
sahf
xchg
jb
pop
insb
fildll
insl
xor
sbb
lret
adc
pop
das
idivl
adc
leave
ss
lods
xor
or
movsb
jecxz
pop
in
mov
loope
in
shrl
jecxz
loopne
mov
xchg
ds
and
dec
mov
movsb
mov
xchg
aad
cmpl
add
or
dec
test
test
leave
pop
and
out
xchg
negb
xchg
int3
loopne
xor
mov
orl
out
dec
mov
loop
repnz
outsl
add
cmp
cmp
aam
push
fmulp
nop
das
xor
inc
and
popa
mov
sub
sbb
cltd
lock
mov
or
repnz
call
and
or
adc
and
sbb
mov
cli
inc
xchg
and
fstpl
fimuls
push
cltd
lahf
cmp
or
outsb
jnp
jg
aas
out
fimull
pushw
mov
fidivs
jg
stos
stos
sub
icebp
sub
out
lods
inc
aas
leave
daa
cwtl
mov
push
pop
mov
add
add
adc
mov
ret
or
mov
dec
dec
pusha
dec
movsl
addr16
add
lret
xchg
stc
aaa
mov
aaa
lcall
mov
rorl
imul
pop
ficoml
pop
mov
lahf
dec
sbb
fistpl
sub
mov
lahf
fiadds
arpl
mov
mov
add
je
dec
jl
sub
imul
or
xor
mov
cmp
jecxz
jb
scas
inc
pushf
sbb
xchg
sub
and
pop
jne
jbe
push
lods
jmp
divl
shl
or
cmp
data16
pushf
mov
jg
movsb
and
aad
cmp
in
mov
sub
pushf
aas
pop
jmp
loopne
sbb
sbb
dec
push
fidivrl
xorb
scas
jmp
dec
outsl
cmc
jo
out
aas
outsl
aaa
dec
xor
gs
xchg
fldt
cld
xchg
jb
fdivl
adc
ret
mov
inc
stos
stc
mov
or
jle
inc
in
call
imul
sub
jae
js
push
push
push
fnstenv
sbb
jmp
xchg
or
mov
cmpsb
push
iret
stos
xchg
daa
add
mov
push
sub
ret
jp
dec
push
stos
or
sbb
pop
fcomp
movsb
inc
add
dec
mov
ljmp
subb
xchg
push
inc
add
add
in
sbb
dec
inc
cld
and
sbb
or
pop
mov
sahf
mov
cwtl
les
es
add
inc
movl
insb
out
fsubp
jb
shll
or
dec
dec
jmp
jb
cld
sbb
mov
and
jmp
pop
sub
faddp
scas
mov
mov
hlt
xchg
lret
aad
lret
into
jno
test
jae
movsl
repnz
xor
and
jle
rclb
cmpsb
ds
loop
pop
cmc
add
mov
cs
insl
jbe
dec
inc
push
pop
sti
xchg
jge
cli
inc
fs
bound
cli
subb
cld
or
movsl
stc
sti
icebp
bound
in
xor
jle
cmp
jle
xorl
and
pop
and
mov
sti
shlb
dec
mov
leave
inc
out
stc
push
cltd
add
pop
mov
mov
loope
adc
push
and
ds
jo
xchg
shrd
or
scas
pop
out
adc
mov
xchg
gs
clc
aam
pusha
sbb
movsb
lods
sbb
fcmovne
and
loopne
in
push
mov
xor
dec
enter
xchg
or
notb
sub
data16
call
and
icebp
test
lods
cltd
jge
or
mov
shll
in
aad
xor
push
mov
ficompl
jmp
pop
aam
in
cwtl
lock
sahf
adc
pop
mov
out
add
push
sahf
push
jmp
dec
das
jecxz
cmp
fcoms
pop
neg
jge
cmp
mov
dec
loop
cmp
or
inc
inc
xor
and
adc
stc
jge
bound
xchg
cmc
loopne
rcrl
rorl
aad
ds
or
push
test
cmp
ljmp
arpl
notl
pop
ror
sbb
jne
cmp
mov
lds
fstps
popa
xchg
aad
andl
sbb
cmp
inc
jbe
add
je
pusha
inc
div
cli
push
xchg
and
pop
dec
adc
outsb
jge
and
xchg
arpl
stos
clc
jo
adc
sub
leave
fisubrl
lret
pushf
inc
add
test
cmp
pop
push
mov
fbstp
jp
clc
testl
add
cmpsb
lret
loopne
adc
aas
xchg
out
and
dec
xchg
add
pop
mov
sbb
sub
mov
std
or
dec
mov
mov
xor
push
xchg
mov
xlat
cmp
mov
ds
mov
lcall
lret
dec
aas
iret
loope
shr
or
out
push
jb
mov
xor
movq
imul
rcl
jmp
mov
lods
xchg
mov
pushl
sbb
mov
jnp
fiaddl
scas
rolb
xchg
jle
add
fists
sub
in
loop
push
cmpsb
push
test
jb
out
jae
into
jae
xor
push
jae
add
mov
add
sti
jbe
push
movsb
test
or
xor
cs
sbb
dec
add
mov
dec
test
sbb
das
cmp
pop
lods
es
adc
jno
lret
nop
insl
push
insb
out
pop
test
cli
lret
push
rcrb
data16
xchg
test
js
pop
jbe
mov
outsb
pusha
int
inc
adc
in
cltd
shll
sbb
js
insb
lds
lock
fisubrs
and
ret
lds
jno
xchg
ret
int
xchg
mov
cmp
xor
test
mov
jl
sbbb
mov
or
dec
or
repz
and
fildl
mov
in
mov
cmp
int3
mov
and
or
movl
jg
or
lea
repnz
push
sbb
test
push
mov
mov
inc
in
sarb
popf
jns
sub
cltd
ljmp
les
ret
sbbl
xchg
add
push
add
inc
and
lds
xchg
cld
cmc
call
xchg
scas
jne
cmp
jbe
test
jl
mov
dec
xchg
dec
dec
scas
mov
xlat
inc
loopne
ficompl
arpl
lds
adc
mov
xchg
jo
shll
sub
std
leave
mov
popa
cmpsl
aaa
addb
je
xorb
in
gs
cmp
js
cmc
out
cwtl
pusha
sarl
bound
dec
imul
xlat
orb
mov
cmp
push
cwtl
and
daa
pushf
jnp
int
sbb
inc
fisttps
incl
je
sub
aad
mov
adc
jne
les
mov
lret
jnp
insb
roll
and
cltd
mov
jp
or
sbb
xchg
int3
and
sub
aad
jae
ficoml
jo
inc
test
push
cmpsb
scas
add
and
mov
adc
loope
and
cwtl
xlat
jae
jno
jl
insb
loope
lea
adc
inc
pop
xchg
xchg
or
mov
adc
mov
lahf
lret
jmp
jae
je
jle
cld
mov
and
sub
fmull
adc
rep
orb
aas
mov
fdivr
jbe
int
shr
test
push
jns
arpl
lock
stos
je
jmp
inc
fisttps
movsb
or
fwait
fs
sbb
out
aas
cld
daa
in
rolb
stc
cmp
hlt
mov
xchg
inc
xorb
or
movsl
call
cmp
arpl
in
mov
adc
sub
stc
inc
pop
sub
lods
cmp
aam
add
jno
iret
mov
popf
clc
xlat
jns
sub
jle
pop
mov
shrb
leave
xor
inc
jl
jb
jmp
test
cmp
repz
popf
mov
mov
pop
push
dec
sbb
stos
test
lret
push
jge
repnz
fs
push
loop
in
repnz
andb
lds
mov
inc
or
cmp
je
add
stos
mov
cmp
add
insl
push
jg
jo
mov
inc
jno
std
mov
jae
and
mov
inc
in
push
stc
add
shl
adc
int3
divl
mov
cmpsb
jno
add
addr16
fbld
pop
mov
or
push
mov
mov
sbb
xchg
inc
sbb
pop
mov
dec
push
xor
add
ret
pop
into
jno
push
out
mov
stc
add
mov
pushl
into
inc
arpl
leave
inc
push
add
call
shrl
ficoms
xor
lahf
js
test
pop
add
or
push
jmp
cmp
mov
cmp
pusha
pop
or
cmpsb
shll
and
sbb
je
pop
lds
in
movntq
int
adc
adc
dec
cmp
ljmp
outsb
and
xlat
out
lods
sbb
sub
enter
in
mov
into
popa
rol
or
cltd
scas
insb
or
pop
ljmp
sub
aaa
std
xorb
mov
dec
aas
inc
test
pusha
pusha
das
xchg
mov
jp
lcall
jg
or
cmp
vhsubpd
sbb
and
push
push
lds
and
jne
lcall
cmc
fnsave
xchg
dec
sbb
call
fnstenv
xchg
shll
movsl
add
cmpsl
add
popl
xchg
sub
push
incb
aad
stos
dec
lds
mov
fwait
shll
orb
arpl
cmp
rcr
add
mov
pop
cld
in
shr
hlt
sub
int3
scas
sub
push
xor
repnz
or
shll
push
out
lock
lahf
out
push
andb
stc
xchg
and
jge
fadds
mov
das
pop
sub
orb
imul
andl
mov
dec
mov
xchg
shll
mov
xchg
add
outsl
fbstp
popf
sub
jmp
jle
sub
xchg
inc
inc
push
lock
stc
in
adc
sub
or
pop
into
mov
fsubl
jg
daa
jae
adc
popl
popa
stc
xchg
addb
and
jp
mov
lahf
pop
dec
imul
mov
adc
mov
jno
lcall
loop
mov
adc
fsubl
jbe
hlt
bound
add
push
nop
into
dec
or
cmpl
adc
cmp
push
or
in
outsb
mov
pushf
push
nop
cmp
pop
pop
gs
cmp
xor
fucomip
mov
loopne
cmp
loope
lret
xor
es
adc
leave
insb
lret
sub
jl
or
in
xlat
or
ds
test
movl
movsl
and
mov
orl
sbb
cmpsb
jns
in
mov
aas
push
push
or
mulb
mov
sub
xchg
cmpsb
dec
sub
cmp
mov
into
inc
flds
popa
inc
ficompl
pushf
mov
lahf
inc
push
add
aam
mov
cmp
jo
xchg
jmp
mov
les
jne
mov
data16
jecxz
push
xchg
dec
pop
xchg
cmp
mov
js
jg
je
pop
sub
es
enter
xlat
filds
fistps
fmul
pop
or
xchg
scas
stos
ja
movsb
or
addr16
cs
popa
insb
rsm
xor
lahf
add
mov
dec
and
jecxz
loopne
pop
pop
loopne
push
xlat
test
movsb
xchg
sbb
stc
fsub
sbb
mov
out
or
xchg
xchg
xor
and
rolb
adc
pop
stos
mov
mov
xchg
syscall
sbb
push
lret
mov
je
jo
xchg
lret
adc
cld
insb
mov
setbe
pop
sub
jp
jb
pop
or
bound
adc
adc
dec
bound
imul
adc
adc
mov
pop
mov
dec
jnp
jl
int3
ret
and
xchg
or
fnstenv
imul
push
cmpsl
cmp
mov
mov
xchg
adc
aaa
negl
xor
and
cmp
in
xchg
push
mov
pop
inc
int
data16
or
mov
add
xchg
sub
mov
decb
lcall
push
int
jl
fwait
push
mov
dec
xchg
xlat
iret
out
pop
outsb
mov
push
imul
xchg
jo
jp
mov
into
sahf
fildl
aam
dec
mov
sti
lret
test
pusha
aam
fnstsw
imul
sar
call
arpl
sahf
testb
lret
loop
aam
es
inc
cs
dec
clc
shlb
call
loop
in
inc
les
cwtl
out
enter
or
movsb
jl
push
cmpsb
loope
mov
push
orb
sbb
mov
loope
ss
adc
stos
or
push
sbb
lret
iret
out
pop
orl
jge
or
jle
addr16
into
notb
adc
aaa
std
inc
fsubl
ret
pop
sub
sub
mov
cmp
loop
imul
jb
push
shl
sbb
push
int
add
stos
int3
xchg
adc
jg
pop
call
cmpl
xlat
mov
mov
jns
int
xchg
movsl
sub
inc
fdivs
xchg
xor
mov
xchg
call
cld
inc
mov
jnp
pop
popa
clc
sub
pusha
add
pop
dec
sub
sub
flds
fistps
ja
sbb
cmpl
outsb
push
jo
push
xchg
sbb
adc
pop
push
outsl
bound
stos
in
sbb
lret
test
lds
and
mov
loop
es
add
xchg
out
and
cltd
sub
sbbb
pop
outsb
sub
and
out
sbb
pop
ljmp
or
fisttpll
fldcw
inc
fiadds
out
loopne
xorl
mov
test
cli
loopne
cmp
xchg
xchg
loope
jge
xchg
enter
js
mov
mov
jns
nop
mov
add
shrb
cmpsb
adc
mov
pop
in
and
or
test
add
mov
pop
mov
ljmp
lcall
xchg
xlat
push
jmp
adc
and
into
xor
into
pop
push
sub
scas
or
sub
cmpsb
dec
mov
sbb
ds
mov
xchg
ret
je
fistl
out
or
dec
push
repz
lock
or
sti
pop
lret
xchg
ficompl
aaa
xlat
pop
pop
push
mul
sbb
das
xor
or
dec
pop
push
sbb
or
insl
cmp
and
aad
fwait
leave
dec
cmp
sbb
sarl
lret
add
xchg
xor
sbb
jne
stos
insl
lret
sahf
mov
add
cltd
jo
jg
js
pop
sbb
adc
ss
mov
test
or
jne
daa
subl
sub
das
adc
stc
dec
jge
ret
adc
mov
dec
mov
jmp
jo
mov
mov
sub
lods
test
sti
xor
subl
repnz
or
jle
ret
and
cmp
movsl
xor
push
lock
mov
or
mov
roll
mov
cld
les
movsb
pop
xchg
inc
jae
jp
aas
js
or
sbb
hlt
xchg
adcb
out
xor
ds
in
push
es
mov
mov
ss
mov
jno
cmp
jb
adc
mov
mov
sub
xchg
xchg
pop
mov
ljmp
clc
dec
pop
insb
jge
popa
jle
and
jb
fs
pop
xor
outsl
fcomps
push
sti
addr16
fdivp
jmp
jnp
sub
mov
add
xor
dec
in
push
sbb
jge
stc
mov
mov
xor
mov
pop
dec
xor
enter
pop
decb
mov
gs
sbb
subb
and
shrb
sbb
ss
inc
out
fwait
out
enter
inc
jne
int
add
je
or
lret
and
adc
and
inc
popf
testb
imul
nop
mov
outsb
orb
sub
sub
xor
aaa
mov
xor
outsb
aas
dec
ljmp
jl
stc
cmp
ds
enter
add
daa
ljmp
xor
je
xor
aam
sub
scas
fninit
mov
fistpl
pop
fnstenv
fmul
sbbb
int
popa
rorb
cmpl
add
pop
mov
ds
into
dec
in
enter
sarl
jbe
nop
jg
scas
pop
bound
mov
movsb
or
or
repz
pop
imul
in
push
lea
cwtl
decb
icebp
pushf
in
mov
sbb
cmp
mov
std
pop
push
jne
aad
lods
adc
dec
gs
imul
xchg
lock
out
xchg
mov
cmpsb
int
imul
out
pop
mov
mov
sub
pop
das
cltd
aaa
adc
out
in
cwtl
cltd
sbb
pushf
or
mov
test
aas
add
push
add
out
pop
out
add
cmp
add
mov
les
insb
stc
jmp
push
je
xor
jno
pop
cmp
popa
pop
sbb
dec
sub
add
rep
jno
stos
mov
push
jo
inc
in
mov
jle
gs
inc
in
aas
mov
jb
jae
mov
cmp
pop
imul
stos
movsl
cmp
xchg
js
push
clc
pushf
inc
cmpl
iret
cmp
cmpsl
xor
and
je
xchg
and
push
shr
pop
pop
cltd
aam
lods
sbb
fs
mov
enter
jb
mov
pop
cwtl
cmpsl
inc
pop
out
sbb
mov
jl
test
fscale
sbb
and
jb
es
or
int3
push
fcomps
stc
js
imul
mov
outsl
roll
inc
cmpsb
jge
loope
xor
push
xchg
mov
mov
dec
or
pusha
sub
pop
loopne
xorb
lret
mov
fisubs
insb
pop
inc
out
add
sbb
add
add
adc
pushf
sub
mov
movsl
test
mov
lods
jge
jnp
js
cmp
mov
cmc
lock
jp
and
iret
sub
push
and
pusha
fiadds
loopne
mov
clc
repnz
adc
vunpckhps
outsb
pop
adc
cwtl
aam
aaa
push
xor
aad
add
scas
sub
mov
sub
or
das
mov
in
imul
in
dec
lods
stos
or
lods
mov
jge
dec
cmp
daa
xchg
pop
rcrb
fwait
dec
mov
cli
fildl
std
mov
leave
test
lahf
mov
jnp
xchg
and
mov
dec
push
rcll
mov
int3
xor
sbb
fdivl
aam
dec
int
inc
pop
and
xchg
or
int3
lret
rclb
jle
add
push
xchg
pushf
sahf
addb
mov
repnz
lea
in
cmc
les
inc
cmp
sub
mov
inc
rcrb
in
sbb
mov
pand
cltd
pop
cmp
sbb
push
sub
sub
xor
out
jb
sub
adc
cmp
out
jbe
pop
rcrb
cmc
fsubr
or
cmp
cltd
test
mov
push
push
daa
fidivs
pusha
pop
pop
aaa
into
mov
js
addr16
inc
outsl
cmp
sub
cmc
jo
movsb
xchg
jmp
push
pushf
push
sub
mov
xorl
inc
cmp
inc
mov
cli
push
lods
mov
adcb
lcall
push
mov
movl
negb
rclb
mov
popf
dec
mov
jge
aaa
jl
outsb
adc
fs
je
call
push
push
pop
jge
lock
out
mov
add
mov
in
bound
popa
push
aaa
in
jp
rol
in
imul
inc
lods
jnp
sbb
sbb
jle
les
addl
pop
or
mov
fmull
push
test
or
cmpsl
hlt
sub
dec
push
out
cmp
mov
cmp
es
outsb
mov
jle
aaa
lret
jp
mul
popa
push
rcrb
test
mov
adc
jnp
imul
mov
push
inc
add
sub
ret
sbb
nop
pop
or
dec
outsb
xchg
lret
or
inc
sti
hlt
jae
pop
xchg
js
xor
sti
push
and
movsl
aaa
xor
insl
mov
inc
adc
popa
in
sub
and
mov
lcall
mov
test
xor
and
xchg
xor
adc
decb
or
add
xor
movsb
lret
das
mov
ret
scas
mov
icebp
leave
mov
xchg
sub
and
insl
pusha
aad
dec
mov
flds
push
and
adc
dec
and
adc
test
into
sbb
xor
jo
outsb
xchg
stos
jne
je
xor
mov
mov
test
dec
xor
dec
push
ja
mov
mov
cwtl
out
aad
sub
jl
outsb
mov
xchg
dec
rcl
lds
fildll
mov
xor
incl
scas
cmp
aam
cld
xchg
mov
mov
mov
mov
divb
rorl
mov
cmpsl
pop
push
insl
add
inc
jno
lret
or
sub
jge
fildll
ffreep
cmp
push
fisubs
sub
add
imull
inc
xchg
leave
cwtl
fs
in
insl
sbb
jl
outsb
push
adc
mov
je
cmp
cmp
jbe
jae
inc
nop
jbe
stos
xor
fld
sbb
mov
cwtl
cmp
outsb
test
adcl
clc
lret
fwait
cmc
pusha
mov
loopne
mov
fdivs
pop
popa
out
cmc
fwait
and
testb
loopne
cmc
lea
setbe
cli
sub
aaa
push
ret
mov
mov
sbb
jle
mov
fldt
inc
inc
cmp
or
xchg
loopne
mov
mov
mov
outsl
sbbl
sbb
xchg
mov
lock
scas
sbb
cmp
icebp
sar
dec
std
movsl
pop
dec
xor
push
shll
xchg
std
jg
xchg
mov
popf
fisttpl
js
mov
aas
or
fdiv
push
xor
xchg
inc
xor
and
adc
dec
or
pop
push
mov
push
xchg
rclb
jge
bound
and
cmp
push
popf
sahf
test
sarb
mov
inc
cmpsb
andb
adc
push
jmp
inc
enter
test
mov
mov
call
ds
mov
dec
push
cli
or
pop
mov
fucom
jae
rol
ja
jae
xchg
jne
dec
or
mov
mov
sub
popa
hlt
push
jmp
and
scas
jno
jmp
repz
dec
sub
in
mov
adc
loop
mov
mov
dec
mov
add
push
jo
insb
call
in
dec
ret
jge
loope
pop
push
mov
test
fwait
cmp
stc
xchg
faddp
and
xchg
mov
inc
add
mov
push
mov
insb
pusha
imul
or
stos
icebp
data16
std
movsl
outsb
pushf
xchg
cmp
push
iret
cmp
daa
or
sub
xor
dec
mov
aam
add
mov
pop
popa
lods
aas
ret
fwait
cld
or
sbb
andb
stos
push
pop
cmp
rcrl
cmp
or
fimull
xchg
loopne
cltd
mov
cmp
push
or
les
mov
bound
in
cs
ja
adc
jbe
je
sbb
cmp
dec
arpl
outsl
jb
clc
fistps
shrl
xchg
insl
je
mov
mov
adc
mov
xor
inc
sarb
icebp
push
push
nop
mov
call
add
je
sbb
sbb
into
fwait
adc
lcall
mov
push
jne
push
insb
jge
pushf
xor
sbb
out
out
fdivl
push
sbb
insl
ret
ja
sub
enter
pop
loopne
sub
pop
xor
dec
mov
push
test
gs
push
ds
mov
jne
out
jl
pop
push
cwtl
mov
movsl
lea
nop
lcall
stc
and
add
or
aam
jns
call
repnz
mov
adc
imul
jg
aas
int
push
xor
cmp
cwtl
dec
test
mov
icebp
mov
mov
add
mov
mov
mov
das
vcvttpd2dqy
sti
xor
call
xor
imul
push
and
dec
push
fisubl
lds
cmpsl
mov
pop
mov
repnz
cmp
scas
cmc
dec
or
pop
fnstsw
popa
outsl
mov
rol
les
loope
push
xchg
cmp
out
stos
mov
push
movsl
jecxz
sbb
inc
inc
sbb
out
adc
repz
rol
fdivr
cs
mov
mov
push
jbe
pop
or
test
in
mov
sub
xchg
outsb
sbb
ss
sub
or
repnz
xchg
jge
xor
out
mov
scas
sbb
loop
sbb
aas
pop
scas
cmp
mov
movsb
dec
lret
mov
add
and
out
cmp
call
scas
cld
insb
lea
ja
sub
loopne
nop
mov
out
ljmp
xor
lods
addb
insb
dec
xlat
push
loop
ret
cmpsl
cmp
jg
fstpt
pusha
adc
sub
or
ljmp
or
mov
inc
out
out
adc
mov
xchg
sbb
cmpsb
sahf
dec
movsl
data16
xchg
ficoms
mov
decl
cmp
pop
sub
or
push
sub
jb
push
adc
jl
insl
xchg
add
sub
loop
adc
xchg
jns
cmpsl
nop
cmpsl
inc
sbb
sbb
push
sbb
push
fdivs
dec
push
push
js
push
lahf
push
arpl
cmpsb
push
or
or
lret
add
push
add
xchg
sub
adc
push
fwait
jne,pt
movsl
cmc
add
lods
ja
fcoms
push
mov
jge
fwait
adc
fcmovnbe
sbb
pop
shrb
hlt
call
lret
jmp
jmp
mov
roll
xchg
mov
inc
and
scas
push
call
jmp
in
push
pop
cmp
dec
pop
mov
inc
stos
cmpsl
imul
add
test
sbb
xor
cmp
push
lds
cmp
aad
push
or
clc
mov
jnp
adc
outsb
fxch
test
push
sub
jb
pushl
js
into
lahf
popf
scas
mov
push
pop
in
lods
mov
outsb
addr16
repnz
and
outsb
sti
iret
orl
out
sub
xor
mov
shlb
mov
test
stos
mov
test
mov
popf
xchg
sub
scas
jb
and
mov
mov
inc
cld
cwtl
icebp
mov
lcall
pop
adc
les
daa
pop
xchg
xchg
jecxz
stos
fcmovnbe
hlt
clc
andl
aas
insb
jl
pop
ret
dec
enter
fsubl
mov
sub
insl
or
jle
das
ficomps
jg
mov
sbb
inc
push
inc
mov
loope
aad
jge
and
pop
cmp
xor
rcll
mov
ret
sbb
repz
mov
fidivl
push
pop
xchg
outsb
pop
popf
nop
adc
pop
dec
cmpsl
or
mov
xchg
std
rcrb
dec
xor
das
and
cmp
push
add
stc
sub
push
inc
push
outsb
pop
jmp
xor
mov
add
and
jne
pushf
lods
jl
call
leave
clc
xor
inc
mov
shrb
test
add
xlat
xchg
inc
add
jb
stc
data16
sub
cmpsl
and
xor
flds
std
push
sti
aam
lods
frstor
test
and
das
dec
xor
shll
jo
repnz
lahf
mov
ret
pop
dec
out
int3
lds
add
sbb
xchg
dec
xor
lea
in
or
push
fnsave
aas
popa
shrb
flds
pop
loopne
xchg
jecxz
mov
rcl
mov
xchg
test
mov
mov
adc
negl
push
fwait
rorb
push
and
xor
popf
testl
inc
dec
popf
movsl
push
icebp
xorl
repnz
jae
hlt
sbb
jle
xlat
rorb
inc
sahf
or
cmpsb
or
xor
shrl
fcomps
sub
adc
lret
pop
daa
bound
outsl
jno
push
mov
adc
loope
pcmpeqw
stos
or
test
jge
and
sbb
ja,pt
push
or
jge
lock
test
cli
es
lcall
sbb
lods
jp
or
jne
dec
fldl
cli
fwait
popf
push
cmp
cmp
fsts
nop
arpl
mov
mov
addr16
and
sub
cmp
test
sub
lock
ja
test
mov
leave
or
icebp
fdivr
sahf
pushf
aaa
ss
or
rorb
mov
lcall
pop
mov
push
sbb
mov
sarl
jno
aad
cmp
mov
add
imul
repz
loope
jno
xchg
shl
inc
enter
lds
and
jo
push
push
or
test
sarl
out
in
clc
jo
dec
push
sub
loope
adc
push
mov
add
in
cmp
xchg
out
fsubp
ret
scas
addr16
movsl
dec
jne
xchg
mov
aas
jo
mov
dec
sub
lds
mov
or
jmp
dec
mov
lds
sub
xchg
iret
cld
stc
call
fadds
cmp
fldcw
jb
push
dec
sbb
dec
pop
sub
push
ljmp
or
repz
pop
sahf
addl
xchg
jmp
nop
std
pop
cmp
and
stos
in
repz
clc
aas
ljmp
insb
mov
cld
adc
and
and
scas
xor
fimull
jb
ffree
fcomip
lds
mov
movsl
lahf
mov
and
adc
popf
cmp
mov
outsl
ret
data16
std
stos
mov
ret
cwtl
idivb
dec
aam
pop
fists
jns
mov
aaa
popa
xchg
cmp
lret
repz
sbb
inc
into
movl
sbb
mov
sbb
pop
sbb
or
dec
mov
pop
mov
arpl
jb
shl
mov
addl
jecxz
sub
cmp
dec
cmp
sar
mov
xchg
mov
or
xchg
std
mov
icebp
test
cli
cli
mov
pop
mov
scas
and
xchg
mov
js
pop
cwtl
das
cmp
mov
xchg
pop
ja
sbb
dec
dec
dec
push
sbb
ljmp
mov
adc
mov
int
jnp
mov
out
pop
dec
xchg
or
test
mov
sti
sub
movsl
imul
mov
xchg
mov
or
movsl
sub
pop
cmpsb
push
inc
push
push
adc
xchg
scas
jb
out
subl
dec
jecxz
lock
mov
je
sub
cmovnp
inc
test
insl
ljmp
imull
inc
movsb
dec
and
fsubl
stos
lods
xor
mul
sarl
sbb
test
icebp
addl
imul
xor
mov
mov
aam
movsl
lahf
xor
inc
dec
movb
push
pop
pop
jo
jbe
pusha
lret
ret
ss
and
sub
lea
mov
jge
mov
rcrb
inc
sti
fdivrl
dec
add
icebp
mov
aad
insl
pop
iret
lea
pop
fnsave
or
stos
jp
fsubp
dec
sar
fidivl
add
mov
mov
fsubl
jo
jmp
vrsqrtss
dec
test
dec
pop
arpl
enter
mov
ds
push
imul
inc
lcall
mov
cmp
pop
arpl
sub
popfw
pop
dec
js
cmp
sbb
and
pop
movsb
add
add
insb
cmp
jg
ret
icebp
jmp
mov
mov
inc
xchg
xchg
cwtl
lea
cmp
inc
andl
mov
cmp
push
out
and
dec
and
cmc
xchg
ljmp
cmc
data16
pop
jne
push
dec
gs
jge
push
rcll
inc
pop
in
ja
adc
scas
imul
jl
cmpsb
jle
mov
ss
lahf
xchg
bound
ds
jbe
jbe
and
mov
inc
sahf
sar
nop
mov
lock
iret
pop
push
adc
fdivs
xchg
inc
arpl
rclb
into
push
outsb
xchg
or
xlat
adcl
or
xor
and
ja
mov
fwait
mov
fimuls
movsl
outsb
out
pop
mov
adc
adc
xchg
and
outsl
jmp
je
addr16
jno
movsl
add
xchg
ret
enter
pusha
jbe
iret
ja
fs
and
daa
sbb
sbb
cmp
lcall
xchg
data16
lret
mov
out
fmulp
enter
sub
xchg
in
imul
loop
cld
push
fstps
add
call
push
mov
aad
pop
jo
pop
loop
ljmp
sub
in
jb
jge
push
sub
jae
into
out
dec
inc
and
mov
and
repnz
push
cmp
pop
push
je
pusha
pop
int3
lea
cmp
jecxz
xor
lret
mov
xchg
lahf
repz
lods
sti
outsl
ja
push
cli
and
mov
push
xchg
daa
mov
pop
loope
sti
fdivrs
push
int3
cmp
outsb
pop
data16
lcall
mov
pushf
aaa
inc
jnp
pop
testl
arpl
out
mov
or
xchg
sarb
cmp
jo
mov
sbb
iret
cmp
call
pop
sbb
in
mov
jb
stc
fwait
stos
push
jg
popf
mov
int
mov
sbb
sub
cmpsb
lret
stos
cmp
shlb
mov
bnd
and
xchg
pop
and
inc
js
out
sbbl
jmp
xor
popf
sbb
sub
cs
call
aaa
mov
cmp
roll
frstor
sbb
pop
pop
adc
inc
addr16
lea
adc
jns
adc
nop
repz
mov
add
jl
pop
test
mov
jmp
lcall
icebp
loope
sbb
cmp
add
std
nop
and
cmp
xor
push
hlt
and
mov
jns
dec
ficompl
push
inc
aas
or
sbb
lret
adc
std
cli
icebp
sbb
adc
add
shlb
push
fisttpll
std
dec
fsubrp
push
inc
sub
adc
xor
call
push
xchg
std
out
and
pop
inc
xchg
push
adc
mov
add
fldcw
adc
or
pop
in
ficompl
jmp
xor
fstps
leave
xor
mov
mov
test
in
test
jne
rolb
inc
or
dec
dec
cld
dec
or
fadds
nop
imul
test
xor
lahf
rorb
lods
fwait
ja
sar
jns
sub
mov
call
ja
in
xor
mov
hlt
dec
jge
fildl
mov
shlb
repnz
mov
cmp
mov
mov
sub
ror
push
ja
lods
arpl
hlt
xchg
sbb
sti
ret
test
lret
cltd
cmp
sbb
shll
movsl
out
mov
mov
ficomps
adc
or
xlat
add
int3
enter
and
add
xor
push
mov
push
inc
scas
adc
cli
push
push
xlat
aam
push
fwait
and
enter
xor
or
mov
xor
mov
xor
pop
dec
cli
mov
mov
bound
loop
push
sub
sahf
sbb
xor
jb
stos
ljmp
imul
lcall
shlb
dec
lds
int3
imul
fs
xor
inc
sbb
pop
push
sbb
fmull
sti
test
cmp
sbb
jp
cwtl
dec
dec
push
test
in
mov
push
xor
adc
push
mov
scas
fcomp
cmp
mov
dec
lret
jbe
mov
xchg
ljmp
adc
ret
icebp
call
push
shll
loope
in
and
lret
sbb
clc
mov
mov
enter
sti
or
mov
or
or
call
push
jae
imul
popf
aas
in
push
neg
sti
jnp
enter
push
stos
leave
popa
stc
xor
xchg
mov
sahf
int3
cmp
mov
addr16
into
mov
pop
pop
pop
movsl
add
nop
cli
sti
xchg
inc
lea
or
mov
and
mov
and
mov
stos
mov
add
rorl
push
lock
aas
mov
pop
sbb
lret
pop
call
pop
and
push
enter
jns
push
ss
xlat
lahf
or
pop
shll
sub
test
fildll
enter
orl
lods
fwait
fs
lret
testl
arpl
cmc
push
ret
add
xor
inc
out
dec
gs
test
arpl
mov
inc
mov
rcl
inc
pop
stc
icebp
jl
inc
add
pop
jg
sub
imul
shr
jno
stos
loope
mov
je
pushf
shrl
jecxz
mov
sbbb
ret
cltd
adc
pop
push
mov
std
mov
js
mov
mov
push
movsl
sub
xor
pop
jle
xchg
mov
pop
jp
xor
in
insl
push
mov
mov
into
nop
icebp
dec
inc
popa
mov
cmc
sbb
mov
pop
dec
test
outsl
mov
mov
cmp
dec
shr
push
cmpsb
add
lcall
jns
pop
outsb
push
mov
mov
ret
add
pop
inc
cli
imul
push
cwtl
jle
push
rcll
lret
pop
mov
push
sti
push
mov
daa
aas
cmp
dec
mov
imul
pop
hlt
in
pop
mov
and
add
sahf
xchg
jbe
fs
shlb
aas
mov
fidivrl
xchg
push
call
fiaddl
rcll
xor
push
cmp
sub
ret
mov
out
ja
repnz
pop
das
ret
xor
pop
inc
cli
pushf
jle
aas
scas
sub
push
popa
xchg
inc
ss
inc
inc
rorb
sbb
ljmp
aad
mov
popa
dec
gs
inc
pop
cmp
test
mov
imul
push
hlt
movsb
movsb
mov
mov
pusha
pushf
call
loopne
mov
in
mov
pusha
inc
nop
pop
out
scas
daa
outsl
sbb
push
gs
leave
jbe
outsl
xchg
dec
xorl
fdivl
inc
fwait
addr16
jns
rcrl
loope
fs
fs
std
cmp
and
or
mov
jnp
dec
sub
push
xor
lea
pop
dec
les
mov
fisubrl
out
negl
cmp
jmp
dec
inc
or
or
pop
sub
inc
and
pop
pushf
push
stos
pop
adc
idiv
sub
xlat
mov
pop
push
inc
and
pop
dec
mov
push
das
sbb
mov
iret
adc
sub
xchg
bound
push
test
je
add
push
or
mov
add
jne
sub
notl
mov
fwait
cli
mov
rcll
cwtl
outsl
outsb
movsl
cmpb
xor
push
das
imul
in
test
repz
popf
cmpsb
push
sub
mulb
bound
aad
lods
pop
cmpsb
add
xchg
push
test
xor
fdivrl
adc
jge
icebp
lahf
fs
loop
xor
or
or
sbb
imul
and
shrl
cmpsb
call
cmp
mov
ficoms
inc
lret
cltd
pop
mov
xchg
jmp
inc
mov
jmp
mov
in
cmp
adc
push
pusha
sub
insl
pop
sub
or
push
icebp
inc
pop
pxor
xchg
xchg
in
in
push
cmpsb
insb
xchg
pop
shl
dec
out
fsubr
push
add
int3
mov
pusha
xor
push
jnp
pop
and
iret
repnz
jp
add
mov
jl
pusha
push
lret
daa
jbe
inc
mov
daa
add
inc
leave
push
dec
pop
mov
cld
jmp
loop
in
cmpsl
sub
out
lret
sti
jmp
jl
cmp
or
cmp
add
arpl
mov
xor
dec
adc
pushf
jmp
rorb
fsubrp
add
imul
pop
mov
loopne
mov
pushf
int
leave
mov
mov
sub
xchg
pop
mov
and
lcall
scas
mov
cmp
sahf
fdecstp
and
mov
je
xor
fs
leave
xchg
xchg
movsl
dec
or
mov
xor
sbb
sahf
mov
jl
movsl
mov
sar
test
in
andb
pop
ret
add
sti
jl
or
bound
mov
and
add
mov
sahf
in
push
xlat
test
loope
repnz
rclb
lret
loop
lea
pop
sbb
subb
sahf
jo
mov
out
scas
mov
arpl
adc
mov
clc
ljmp
movsl
dec
std
cwtl
dec
jmp
in
repz
jns
sbbl
adc
push
mov
fisttpll
gs
shlb
mov
lret
sub
mov
clc
sbb
sbb
rol
xchg
gs
pushf
sub
outsb
push
jb
into
cmp
rol
sub
shr
pop
movups
cmpsb
imul
jmp
in
mov
xchg
sub
cmpsl
push
mov
add
mov
les
mov
int
xchg
mov
dec
mov
dec
je
pushf
jbe
fdivs
mov
sarl
adc
pusha
or
cmp
popf
mov
cmpb
pusha
xchg
dec
cmp
jp
cltd
jl
or
cmp
stos
ds
xchg
lret
inc
xlat
mov
movb
sahf
sbb
out
mov
pop
mov
in
inc
xchg
fildl
add
push
aaa
pop
sbb
mov
mov
insb
fldt
sub
dec
xchg
aas
js
jle
mov
popa
repnz
lock
push
mov
cmpsl
dec
push
lds
stos
mov
shrl
add
jge
sbb
es
sub
pop
call
mov
add
mov
sahf
dec
lock
in
add
jne
icebp
sbb
fldl
movsb
add
test
sub
mov
cmp
and
inc
leave
push
ss
xor
or
cmp
nop
push
dec
jo
fwait
adc
cmpsl
cmp
add
xchg
movsl
imul
xor
out
nop
push
cmp
or
push
lock
and
fdivrl
rorb
xchg
push
fcoml
push
call
mov
in
call
mov
and
loopne
out
fisubs
and
dec
cwtl
loop
pushf
icebp
scas
pop
adc
xchg
dec
fsubl
fimuls
fcoms
sub
jmp
mov
mov
sub
psllw
dec
bound
dec
enter
xchg
bound
sbb
and
call
sub
and
lock
adc
sbb
add
pop
cmp
dec
mov
and
lds
add
movsb
aaa
sbb
fldl
jne
push
sub
dec
mov
data16
aas
test
mov
push
insb
xor
or
mov
imul
dec
sahf
adc
jl
or
adcb
push
nop
in
loopne
lea
pop
mov
pop
ja
pop
fstl
sarb
cmp
cmp
dec
jp
iret
clc
inc
mov
loopne
roll
and
icebp
popf
imul
popf
into
add
mov
adc
ja
jecxz
lret
jle
iret
jmp
aam
bound
test
test
mov
lcall
mov
mov
sbb
add
sbb
fmull
rcrb
xchg
ljmp
mov
stc
aam
loop
xor
or
aas
cli
add
cmc
ljmp
mov
mov
lock
jae
and
in
dec
dec
or
pop
sub
shrb
push
shll
mov
out
sbb
sti
fwait
movsb
rcl
sub
imul
js
fwait
pushl
mov
pop
clc
inc
inc
xor
or
adc
sub
sarb
jl
addl
lret
pushf
cmpsb
psrlw
in
rclb
inc
pushf
insl
scas
sbb
lods
lock
xchg
and
inc
pop
push
jne
push
cmpsb
jmp
jae
iret
mov
cmc
loopne
test
int
mov
daa
push
mov
mov
pusha
sub
push
pop
mov
cltd
or
mov
inc
mov
rcll
xchg
cmp
sbb
rcll
or
repz
jo
pop
dec
pop
iret
stc
ret
ret
pop
xchg
add
or
stc
jmp
iret
push
jns
jns
lret
xchg
scas
addl
dec
stos
jl
pop
or
jl
push
rcll
mov
adc
lcall
jle
jmp
out
pop
rolb
pop
dec
loopne
imul
add
jbe
gs
mov
adc
cmpsl
fsubr
add
bnd
in
mov
scas
xchg
test
rorl
mov
hlt
cmpsl
sbb
or
cmp
into
dec
and
in
push
fdiv
xor
lcall
sbb
cmp
mov
pop
loop
dec
sbb
sbb
mov
jb
in
cmp
outsb
xchg
stc
cmp
mov
stos
pop
xchg
jno
jno
repz
sbb
movsb
xchg
mov
cld
in
add
sub
mov
push
mov
or
dec
mov
scas
sub
imul
in
lret
mov
adc
pop
int
data16
mull
jecxz
adc
sti
cltd
ja
rcrb
sti
mov
sbb
lds
fistl
stos
arpl
maskmovq
divl
dec
xchg
sbb
inc
aad
push
push
mov
dec
jae
icebp
ret
push
inc
xor
mov
cli
xor
add
pusha
jno
add
inc
and
jno
shl
pop
leave
inc
arpl
sbb
jno
aaa
dec
into
enter
mov
or
jnp
sbb
mov
xchg
scas
shl
in
jecxz
in
mov
jg
aas
mov
cmpb
mov
inc
sub
add
inc
xor
out
jmp
aad
sbb
inc
push
and
dec
cs
mov
fs
inc
mov
movsl
iret
lahf
rep
add
pop
pop
loop
or
pop
adc
jge
shll
insb
add
pop
push
xchg
mov
push
ret
inc
scas
add
daa
pop
inc
mov
test
mov
or
inc
fs
xor
bound
push
dec
mov
shll
gs
xchg
les
je
add
or
sbb
in
or
jo
popf
loop
mov
mov
and
testb
call
negb
inc
sub
mov
lock
mov
add
outsb
lea
jmp
int
mov
gs
and
mov
aad
loope
jle
hlt
cmp
mov
loopne
outsl
rcrl
fisttpl
roll
xor
aam
push
mov
mov
into
test
xchg
dec
in
jle
cmp
xor
cmp
dec
mov
out
cs
dec
mov
inc
cld
jecxz
pop
add
jge
xor
sbb
loopne
dec
jnp
jle
sbb
dec
popf
dec
dec
jno
add
jns
mov
mov
or
js
cs
mov
cltd
les
out
mov
fists
bnd
or
aaa
sbb
sub
les
test
shl
push
pop
or
das
or
xor
movsl
std
jecxz
mov
mov
jle
je
scas
insb
repz
decl
imul
cmp
push
add
rcrl
imul
cmp
push
xchg
mov
iret
adc
or
jns
jae
mov
pop
sbb
sub
in
lret
cmp
sbb
dec
fcomp
pop
shrb
imul
mov
dec
loopne
jne
add
or
lahf
sbb
nop
mov
xlat
mov
pushf
push
and
add
push
sub
int3
pop
fs
sub
mov
jp
cs
jle
pop
push
arpl
jne
negl
xor
jne
jnp
stos
lret
cmp
inc
out
mov
sub
stc
sub
notb
out
mov
decb
shrb
mov
fimull
je
push
adc
imul
out
lahf
pop
repz
out
mov
mov
movsb
inc
sub
sub
rcll
dec
aad
pop
scas
loope
mov
sub
dec
and
pusha
aas
xchg
lea
mov
mov
xor
fistpll
int3
jg
xchg
scas
jno
pop
mov
jae
sarl
outsb
out
dec
inc
cli
ret
add
andb
jae
xchg
sahf
mov
add
jne
cmp
push
repnz
sbb
call
xor
cmp
jg
or
lds
dec
shll
sbb
dec
mov
adc
mov
orl
aam
jbe
adcl
push
xchg
jbe
sbb
pushf
xor
insl
fyl2xp1
xor
push
mov
cmp
lahf
jl
in
cmc
xchg
aad
pop
sbb
aas
push
xor
and
push
insl
outsb
inc
imul
mov
xchg
pop
imul
pushf
push
cltd
clc
pop
pop
lods
dec
loopne
lret
popf
mov
les
repnz
popf
push
pop
pop
pop
sbb
add
pop
fcomp
sub
fldenv
mov
popf
mov
daa
or
cld
scas
push
arpl
cmpsb
enter
adc
imul
pop
sub
xor
sbb
pushf
idiv
arpl
push
mov
lahf
scas
ds
sbb
adc
into
pushf
enter
push
pop
xchg
mov
jae
mov
fnstenv
scas
fisubs
jp
jb
xor
jl
mov
sub
daa
mov
sub
cmp
mov
mov
mov
call
and
aad
cmp
andb
pop
push
cmc
imul
and
sub
stos
xlat
dec
jl
inc
repnz
sub
xor
negl
je
andl
call
cmp
mov
incb
adc
inc
or
push
inc
mov
adcb
jge
mov
push
iret
and
dec
clc
mov
sub
pop
push
in
insl
daa
adc
popa
mov
jne
jmp
dec
lret
icebp
xor
out
push
das
jne
pop
leave
jle
out
push
mov
dec
inc
add
popa
gs
jnp
int
arpl
dec
jmp
arpl
xor
inc
arpl
repz
pushl
dec
loop
jae
jge
std
inc
insl
int
hlt
or
addl
mov
push
xchg
inc
xchg
addr16
inc
insb
inc
in
mov
mov
sub
mov
fimull
sbbl
outsb
enter
cmp
out
and
add
fistpl
movb
pop
or
xchg
adc
icebp
lret
sub
sub
lock
stc
jbe
jae
xor
jbe
sub
icebp
xchg
mov
nop
pop
test
cs
fcmovb
sbb
xchg
push
lds
xor
out
shll
adc
js
test
fisttps
mov
cld
add
dec
pushf
xorb
cs
mov
cmp
addr16
mov
adc
jno
in
mov
cltd
push
ds
xor
cli
mov
mov
fcmovnu
loope
xchg
mov
in
es
or
jae
push
pop
stos
and
shll
jl
fistpll
imul
popa
in
daa
fidivs
gs
fcomps
rorl
sahf
repnz
mov
fs
mov
sub
add
mov
cld
lret
mov
test
leave
cwtl
nop
jecxz
mov
rep
push
lret
dec
add
mov
mov
xchg
lret
mov
std
repz
testb
mov
mov
cmp
fstpt
jmp
test
xchg
cltd
ds
pop
jne,pn
mov
test
and
or
cmp
les
inc
sub
cmp
mov
mov
out
sti
xchg
cli
push
and
adc
lret
js
push
jmp
push
ds
pop
loop
jns
xchg
bound
std
cmp
cwtl
sbb
jmp
cmc
mov
test
hlt
pop
jecxz
sub
gs
cli
cmpsl
gs
sbb
sub
mov
dec
scas
negb
or
cmpsl
cmp
cmp
jg
sbb
addl
pop
adc
popa
fstpt
imul
push
jb
rcr
mov
aam
mov
pop
mov
xchg
push
aad
add
int
lods
ret
lds
int
pop
adc
xchg
test
push
xor
mov
jno
dec
test
repz
enter
adc
jo
mov
cmpsl
cmc
or
rorl
adc
fldt
scas
jns
fisttpll
fs
cmp
mov
orb
pusha
imul
enter
mov
loop
sbb
sub
je
push
push
mov
pop
sub
inc
pusha
decl
les
mov
sub
ret
stos
cmpb
adc
sub
mov
jnp
inc
loop
pop
loop
xor
jo,pn
std
mov
sbb
stos
jp
jns
fwait
pop
dec
jns
and
enter
mov
mov
fmull
es
lds
lahf
push
mov
xor
add
adc
test
sbb
push
mov
lea
pop
loopne
lea
mov
jbe
cltd
jnp
stos
arpl
push
mov
push
dec
jne
pop
mov
mov
subl
sahf
dec
xorl
jmp
sub
mov
aas
jbe
lods
sub
hlt
pop
xchg
fdivl
int
push
insl
and
mov
movsl
mov
adc
pushf
and
or
adc
pushf
lret
or
fisubl
mov
imul
cmp
mov
dec
xlat
pop
sub
mov
cltd
and
xlat
fnstcw
add
ljmp
lahf
test
xchg
in
jmp
cs
xchg
mov
lret
test
or
dec
sub
arpl
fwait
and
xor
loopne
jbe
nop
lcall
xlat
andb
and
push
aaa
sub
pop
adc
mov
std
adc
pusha
jae
xor
mov
mov
popa
pushf
int
add
imul
out
lods
aad
adc
aad
std
inc
mov
dec
xchg
add
mov
push
xchg
lahf
mov
mov
cmp
or
mov
inc
pop
adc
icebp
sub
enter
add
jl
or
pop
mov
movsl
jo
mov
das
outsl
fiadds
adc
sbb
adc
sub
mov
mov
jmp
jecxz
xchg
cli
adc
subl
in
pop
ljmp
lcall
cmpsl
in
lret
cmp
xor
scas
or
icebp
push
movsb
xor
cmp
adc
jne
orl
push
jb
sti
sbb
sub
add
add
das
enter
emms
jnp
loope
sub
xchg
outsb
fisttpl
add
out
testb
sub
aam
inc
mov
dec
adc
pop
mov
gs
sahf
nop
xchg
add
ss
addr16
jo
mov
movsl
ret
shlb
in
data16
je
cltd
test
adc
push
xchg
mov
das
fwait
enter
scas
pop
adc
xchg
outsb
adc
dec
ss
add
cmc
adc
rep
fnstcw
add
cmc
cld
pop
mov
add
gs
stos
push
add
dec
pusha
pop
mov
negb
loopne
lods
adc
inc
cmp
daa
rcll
gs
xchg
sbb
and
dec
aaa
jl
jnp
repz
cmpsb
sub
addr16
enter
mov
pop
aam
jecxz
pop
cmp
stos
movsb
pop
int3
fstpt
fmull
stos
add
shlb
insb
je
xchg
inc
sbb
dec
jmp
cmpl
dec
fsubl
ljmp
sbb
sbb
push
enter
cmp
push
fwait
mov
sti
dec
dec
mov
pop
pop
cmp
adc
fmul
inc
lret
push
sbb
test
outsl
insb
out
xchg
lret
jnp
mov
push
data16
cmpsl
lea
jecxz
imul
jmp
push
ss
pmuludq
ret
mov
bound
sbb
or
xlat
jle
sub
lret
cmp
loopne
lret
scas
add
mov
cmp
inc
jns
ljmp
daa
or
jb
mov
jl
mov
add
xchg
pop
std
scas
scas
and
andl
sub
cs
ret
ret
and
ds
into
enter
pop
rcrb
xchg
roll
cmp
mov
xlat
scas
xorb
stos
pop
fs
test
test
subl
lcall
pop
or
lods
push
xchg
pop
fwait
adc
mov
mov
imul
dec
push
xor
orb
sarl
in
lcall
sub
andb
je
sbb
nop
sub
push
dec
sbb
add
int3
inc
jg
xchg
movsb
shlb
push
aas
dec
adc
and
popf
lods
sbb
sbbb
dec
stos
cli
sub
sbb
push
fptan
stos
test
addr16
lods
xchg
and
push
cmp
out
jecxz
mov
cmp
ret
fs
push
test
push
ss
inc
push
push
fmul
jo
call
pop
push
rcrb
sbb
mov
repz
nop
fs
fwait
xchg
movsl
daa
int
cld
sub
jp
jbe
out
adc
dec
jg
mov
pop
mov
ja
repnz
imul
mull
cmc
xchg
push
repz
mov
es
nop
icebp
dec
in
pop
push
shrl
pop
std
and
xchg
loop
mov
aam
pop
inc
ja,pt
sub
jmp
mov
ss
rorl
xor
push
jns
pop
les
mov
mov
sub
add
cld
cmp
out
adc
add
test
loop
mov
cmpsl
xor
lea
xchg
stos
clc
xchg
push
popa
jge
loopne
mov
adc
push
inc
sbb
dec
adc
pop
arpl
daa
fucomip
cmp
and
xchg
cmp
or
lds
sarb
push
cmc
mov
adc
cmp
xchg
mov
push
test
mov
xor
pushf
js
push
cmpsb
popa
inc
cli
shlb
cmp
sarb
fs
jns
adc
in
lret
dec
popf
inc
push
rorb
outsb
int
std
mov
mov
inc
fsts
pop
mov
xchg
adc
hlt
push
mov
sti
add
sub
pshufw
adcl
xor
and
jp
lods
icebp
jmp
data16
sub
sbb
cld
ret
xchg
sbb
mov
mov
cmp
and
pop
test
ds
mov
mov
add
in
jmp
out
lcall
push
jnp
mov
clc
sub
popf
out
mov
in
icebp
and
std
call
out
jg
test
lret
repnz
xchg
dec
xorl
push
mov
je
and
xchg
ret
jmp
cmp
loop
mov
mov
mov
mov
pop
cmp
or
push
clc
adcl
das
pushf
or
mov
jbe
mov
rcr
adc
daa
stos
adcl
aad
and
popa
mov
sub
roll
push
inc
jp
adc
orb
dec
js
mov
repz
or
and
xor
sbb
add
push
dec
sahf
mov
cmp
or
rcrb
cmp
call
test
mov
add
lret
adc
call
fisttps
mov
dec
shr
lods
sbb
or
test
out
in
jl
xchg
dec
or
inc
pusha
or
pop
push
inc
adc
call
subb
nop
sub
arpl
cs
adcb
call
fsubrs
movsb
das
mov
ja
imul
mov
fnstenv
cmp
ss
inc
push
push
cwtl
inc
inc
repz
mov
and
xchg
inc
movsb
push
jge
xchg
pusha
or
stc
insb
push
xchg
shl
fmul
cmc
cmpsb
outsl
repz
cmp
inc
in
fdivrl
pop
pusha
xor
cmp
mov
mov
daa
add
and
aas
mov
cmpxchg
jl
push
mov
sub
mov
sbb
pushf
mov
test
pusha
push
sbb
or
lcall
push
test
lods
push
dec
jo
imulb
push
jge
pop
mov
mov
jl
or
dec
push
in
cmp
aaa
arpl
lods
mov
outsb
mov
stos
jb
xor
cmp
shlb
inc
adc
lahf
fldl
xorb
out
lods
cwtl
adcl
add
mov
inc
push
addb
nop
into
adc
mov
cmp
inc
xor
jo
sahf
outsb
movsl
fnsave
lret
faddl
lret
lcall
or
mov
sub
repz
insl
sbb
out
in
lret
repnz
xor
dec
cwtl
out
xchg
fnstcw
stos
cmp
jo
rclb
jae
add
inc
or
mov
push
dec
shr
push
lods
mov
mov
pop
xadd
das
call
adc
mov
xor
xchg
add
push
fwait
aaa
adc
pop
sub
enter
repz
and
lcall
pop
mov
ficoml
push
mov
inc
xchg
push
scas
fs
add
std
cmp
iret
stc
cmp
mov
inc
adcl
mov
fdivp
outsl
xorl
mov
mov
cmpsb
iret
add
orl
inc
mov
stos
xchg
push
js
out
mov
fwait
sarl
sub
fwait
icebp
scas
push
fsubr
cmp
jno
pop
lock
lcall
xor
aas
je
std
movsl
sbb
add
test
mov
fs
cmpsb
dec
repz
mov
rolb
sub
xchg
sub
xor
and
push
in
outsb
movsl
stos
js
cld
push
adc
inc
movsl
int
aaa
dec
sahf
jmp
shlb
adc
mov
das
mov
jae
leave
cmp
xor
leave
aas
push
movsb
pop
pop
add
jb
imul
jb
sahf
sub
mov
and
hlt
mov
pusha
adcb
dec
mov
push
push
lock
jns
fldcw
std
lahf
mov
es
std
into
pop
inc
inc
cmc
insl
adc
jnp,pt
fidivrl
xlat
jp
mov
lahf
jbe
sub
hlt
not
jb
test
pop
fwait
fs
gs
jmp
mov
divl
iret
ja
loopne
pop
xorb
pop
aad
sub
and
cmp
lds
subl
cmp
xchg
sub
js
shlb
mov
faddp
jmp
cmp
mov
loopne
inc
repz
pushf
push
stc
stos
ds
sbb
adc
aad
cmpsb
test
mov
inc
negb
insb
mov
mov
hlt
pop
sarb
lret
mov
fldenv
xchg
mov
inc
push
inc
imul
lea
push
pop
inc
cld
cltd
push
mov
js
jb
mull
push
je
clc
inc
xor
sub
mov
cmp
xor
fildll
test
pinsrw
fstpl
repz
ss
jae
fcoml
cli
jmp
mov
cltd
sti
in
cmp
mov
cmp
mov
in
jae
jae
push
add
out
stos
mov
push
cmpsl
fildll
popf
pop
and
mov
xchg
daa
test
fldenv
repnz
dec
mov
popw
mov
fists
ret
cwtl
mov
inc
inc
or
dec
fwait
pusha
lods
hlt
or
inc
cmp
adc
or
push
shrb
fisubrl
sub
js
shll
mov
adc
cmp
fidivrl
jb
add
test
push
or
sub
xchg
inc
push
mov
pop
lret
in
call
test
push
jne
pop
pushf
fadds
push
negb
jl
stos
sub
push
jbe
pop
jmp
scas
xchg
lcall
adcb
sbb
insl
lret
mov
clc
pop
outsl
imul
clc
xor
cmpsl
out
pop
aaa
mov
das
pop
mov
push
jno
mov
shrl
outsl
popf
outsl
add
pusha
adc
mov
fists
out
call
mov
or
cwtl
adc
pop
push
sbb
add
jle
or
push
mov
push
add
mov
jae
mov
dec
ret
fwait
pop
pop
fmul
pop
pop
jge
dec
jne
aas
and
jnp
xchg
fsubr
and
fs
cmpsl
xchg
lods
adc
es
xor
xor
xchg
in
rep
fdivrl
add
xor
or
xor
mov
insb
int
cmp
das
popf
clc
bound
int
stos
push
dec
addr16
push
sbb
inc
fsubs
ror
dec
scas
pushf
xor
es
divl
loope
push
lods
imulb
and
sub
cld
mov
mov
shlb
js
xor
mov
inc
mov
sbb
jecxz
sbb
lahf
test
jmp
mov
push
pop
shlb
iret
jae
aas
mov
jns
mov
add
ds
sbb
imul
push
js
stc
mov
mov
xchg
xor
cs
adc
addb
test
push
das
aad
fwait
adc
loope
cmp
ret
inc
xchg
mov
adc
push
jecxz
jo
mov
test
cltd
jno
cli
mov
cmc
repnz
mov
inc
ss
xor
jbe
testl
cs
xchg
aaa
dec
xchg
xchg
ss
fst
jne
jno
leave
lods
popa
cltd
sbb
jns
pushf
js
pop
popa
add
pop
sahf
fisubrl
xor
mov
jge
mov
or
rcl
notb
outsl
cmp
cmp
int
fcomip
neg
les
mov
out
sbb
fimuls
or
in
fsts
scas
or
mov
dec
frstor
mov
push
xchg
pop
rorb
adc
jne
sbb
ja
inc
dec
sti
int
test
jmp
clc
mov
inc
movsl
push
mov
pop
xor
cmp
mov
jg
sub
mov
pop
outsl
mov
nop
cmp
movsb
out
push
into
mov
int3
dec
and
jle
sbb
arpl
movsl
sbb
xor
cli
push
push
lea
int3
mov
lods
push
sti
stos
mov
push
clc
test
xor
pop
jp
add
mov
pop
insl
mov
popf
mov
sbb
insl
sub
orb
wbinvd
nop
dec
xchg
adc
cmpsl
aaa
lods
add
test
mov
lock
push
imul
and
in
mov
clc
mov
out
cmp
xchg
push
into
pop
lret
and
and
int3
xor
pop
int
int3
js
adc
in
cmc
xchg
scas
das
jle
jge
inc
push
ret
gs
mov
fcmovnu
xchg
xchg
sub
jnp
jbe
lods
push
xchg
ret
add
push
out
icebp
fmuls
idivl
inc
add
ja
or
pop
or
scas
push
inc
add
fcomip
stos
out
imul
ja
lods
je
aas
adc
push
jo
pop
adc
fisubrs
lcall
jg
lods
and
ljmp
inc
and
bound
fcompl
sub
xchg
shll
jle
pop
push
jae
lcall
mov
loop
cmp
adc
sbb
sub
jecxz
and
adc
mov
xchg
dec
pop
lahf
add
jns
fistps
mov
cmp
push
sbb
xchg
push
in
cli
stc
jge
xchg
mov
clc
test
in
pop
fcmovbe
sub
ljmp
or
jl
and
ror
testb
mov
adc
sbb
jne
dec
mov
jno
xor
dec
cli
adc
jo
jnp
push
push
mov
cmp
mov
sub
jmp
xchg
cmpsl
pop
xchg
push
mov
jmp
shrb
mov
or
and
fists
adc
inc
inc
mov
xchg
lds
jo
pop
push
mov
ds
ds
lea
mov
ds
pop
jnp
int
aaa
ljmp
sti
mov
dec
sbb
sub
push
pop
mov
dec
das
mov
andb
sbb
mov
jbe
xchg
sbb
mov
mov
dec
or
add
sbb
cmp
cltd
les
sub
fldenv
inc
jmp
pop
stos
and
pop
lcall
leave
push
loop
fidivs
popa
test
call
mov
jl
add
adc
roll
or
pusha
cmp
mov
xor
mov
add
xchg
mov
cmp
mov
jecxz
loope
mov
in
mov
lret
lret
mov
mov
popa
nop
shlb
cmpsb
cmp
rorb
and
iret
pop
jmp
and
jb
cmpsl
or
xchg
mov
jle
cmp
mov
mov
mov
in
dec
fistpll
stos
cmpsb
mov
xchg
lods
dec
dec
inc
jb
jle
pop
das
xchg
xor
pusha
mov
loop
dec
xchg
adc
ss
icebp
xchg
mov
popa
iret
dec
or
xchg
movsb
lcall
inc
imul
dec
mov
lea
inc
mov
mov
in
fcoms
arpl
mov
or
pop
push
adc
add
popf
lret
sbb
out
mov
in
movntq
test
lcall
push
or
cmp
fdivs
aas
insl
pop
jnp
mov
xor
push
fwait
icebp
incl
orb
in
jg
add
roll
mov
inc
add
out
inc
adc
nop
lds
push
mulb
mov
leave
hlt
fs
inc
movsb
cmpsl
mov
inc
xor
addr16
dec
cs
mov
pop
sbb
movsb
push
fcmovbe
hlt
add
imul
cmp
ret
jg
popa
repnz
or
int
xchg
arpl
pop
ret
les
mov
popf
iret
inc
fiaddl
pusha
mov
mov
mov
in
loopne
pushf
in
pop
push
repnz
aaa
cmp
call
gs
or
pop
packuswb
cmpsb
mov
mov
mov
pop
ret
add
lds
dec
jne
mov
in
jbe
insl
dec
sbb
xchg
lret
aam
lahf
xchg
es
popf
and
lods
shr
or
cmp
jge
mov
adc
repnz
mov
sarb
inc
out
pop
push
lea
and
in
ret
add
mov
sub
adc
push
imul
ret
fwait
dec
xchg
cmpsb
dec
in
mov
data16
push
jle
pop
xchg
test
adc
mov
push
es
dec
mov
inc
pop
push
int3
imulb
jae
fildl
adc
inc
add
stc
shlb
mov
add
adc
movb
lds
mov
dec
and
jbe
jns
dec
add
dec
xor
mov
loop
push
mov
cmpsb
sub
movsb
pop
popf
jo
dec
outsb
push
mov
sub
inc
addl
jp
insl
bound
xchg
jno
xchg
sahf
nop
push
inc
insb
mov
call
ds
sub
xchg
cmpsl
lcall
sub
aad
fsubr
popa
lret
and
inc
dec
out
jno
pop
mov
rcrl
pop
mov
and
sbb
insb
or
and
lahf
pop
test
jecxz
dec
xchg
fisttpl
mov
out
loopne
clc
mov
loopne
rol
je
je
pop
jmp
stos
xchg
mov
mov
jmp
test
clc
cmpsl
scas
shrb
dec
jmp
cmp
mov
add
pusha
push
popf
aam
out
inc
cld
mov
pop
xor
ss
push
daa
inc
xchg
sarb
sub
fcmovnb
js
cli
popa
hlt
inc
test
mov
mov
sbb
jg
adc
in
or
call
push
test
imul
mov
inc
sbb
pop
and
pop
and
enter
jmp
mulb
imul
jnp
test
cld
xchg
shll
jb
jo
dec
xor
lcall
cmp
mov
jne
adc
testl
mov
mov
into
pop
push
cmp
inc
cmp
fimull
fistpl
fwait
sbb
insl
aas
pop
cmpsb
jno
mov
aaa
imull
xor
push
daa
mov
xchg
xchg
test
add
popa
mov
push
adc
cmpsb
shl
cmp
push
movsb
lret
out
aad
std
movsb
add
xchg
pop
int3
xchg
popa
mov
xchg
test
lahf
outsl
jle
jno
add
ljmp
pop
xlat
inc
cmpsb
outsl
jge
loope
aad
add
xchg
push
shrl
inc
lcall
call
jmp
insb
inc
pop
enter
je
xlat
jp
fnstsw
inc
jge
push
push
pop
insl
hlt
inc
fisubrs
fdivl
sub
sar
js
mov
sub
loopne
test
arpl
lea
jnp
lcall
popa
in
adc
pop
icebp
mov
mov
pop
test
lret
or
sarb
push
adc
std
cmp
stc
lea
fwait
addb
sbb
incl
es
xchg
shl
cmpsl
dec
jnp
imull
aaa
out
push
mov
sub
test
lds
hlt
sti
or
ja
or
cltd
cmp
arpl
adc
sbb
jae
inc
xchg
int3
mov
popf
pop
push
bnd
cwtl
pop
enter
leave
push
insl
push
loopne
idiv
add
aam
xchg
int3
mov
pop
hlt
inc
fwait
mull
js
push
repnz
mov
xchg
psubq
pop
lret
popa
sub
aam
lods
sub
pop
jge
and
add
push
and
lret
xchg
push
cmp
jbe
jns
xchg
mov
jbe
add
inc
rorb
sub
fisttpll
popf
jbe
cwtl
mov
mov
xchg
flds
sarb
int3
dec
push
xor
jbe
fstl
aam
pusha
ret
jb
popf
hlt
aam
push
xchg
push
mov
mov
mov
add
push
cs
mov
push
shll
pop
cmpsb
cmp
incl
mov
add
mov
mov
mov
mov
xchg
mov
jne
gs
sub
cmpb
lret
ss
jmp
sub
loope
and
sti
dec
and
or
popa
mov
dec
add
jb
mov
mov
jp
psubusw
rorl
and
cmp
aad
ret
addb
sub
fdivs
enter
jg
lea
andl
jb
cli
test
cmpsl
xchg
mov
lret
and
xor
in
shll
push
xchg
push
fisttpll
movb
cmpsb
mov
mov
xor
jg
addr16
loopne
gs
jae
loope
xchg
adc
loop
daa
fs
loopne
lret
imul
push
sub
add
ds
out
mov
push
or
movsb
push
insb
arpl
loop
lods
dec
jg
push
mov
push
add
pop
jp
or
pop
pushf
mov
push
cmpsl
test
test
call
push
push
xchg
and
daa
xor
xor
aam
outsb
sbb
xchg
jno
das
lock
idivb
mov
xor
dec
loopne
mov
sbb
and
add
je
test
icebp
les
push
movsl
jns
mov
mov
jo
xlat
popa
jns
and
mov
lret
pusha
adc
test
lods
push
cmp
arpl
fildll
test
cmp
jge
pop
push
mov
popa
inc
cmc
or
ljmp
mov
add
dec
in
jmp
sarb
icebp
and
and
mov
inc
mov
pop
dec
bound
movsl
pmaxub
orb
dec
fcoms
lret
lahf
ljmp
push
mov
in
subb
jno
call
push
mov
sbb
pop
cmc
mov
jno
fwait
scas
sub
fnstenv
sbb
in
or
insl
stos
test
sub
mov
cmp
mov
pop
cs
hlt
mov
std
pop
push
sbb
adc
shrl
aaa
shll
cmc
sub
mov
cld
stos
mov
imul
dec
or
dec
imul
jo
mov
mov
les
or
cmp
aam
addr16
xchg
ret
repnz
xor
mov
mov
pop
ds
stos
cmpsb
or
or
sbb
imull
fnstsw
cmp
ljmp
add
aaa
ss
push
xor
js
imul
stos
jg
xor
aas
adc
std
jp
pusha
scas
mov
stos
in
sub
cmp
push
out
and
and
leave
lcall
jne
xchg
rcrl
push
push
xchg
push
jo
leave
jno,pt
lret
shll
adc
dec
das
aas
mov
es
cmp
sub
daa
adc
js
lea
popf
jge
fsubrp
out
es
lds
lret
or
iret
lock
push
dec
cmpsl
jnp
pop
lods
xor
mov
pop
repnz
fists
mov
repz
inc
jle
pop
test
and
push
xchg
outsl
inc
into
mov
push
out
cs
mov
aad
xor
movsl
and
jb
pushf
mov
stos
or
addl
jp
inc
dec
icebp
cltd
repnz
xchg
lea
shl
inc
and
movsb
mov
shll
cmp
sbb
xchg
jl
dec
int3
sbb
out
xor
mov
mov
nop
loope
mov
mov
push
push
sbb
rcrl
cmp
mov
out
lcall
push
jnp
adcb
add
or
mov
push
push
nop
inc
mov
mov
xchg
rcrl
xor
xor
jecxz
sbb
xchg
pop
fldenv
repz
jmp
test
rcrl
repnz
mov
rcr
xor
rcrb
or
sub
add
rcrb
cmp
xchg
mov
fs
adc
lret
lods
mov
add
ds
aam
nop
cmp
or
sub
das
scas
out
push
scas
mov
inc
mov
icebp
dec
insl
dec
in
ds
xchg
and
lds
dec
test
dec
cs
aaa
cld
pop
push
push
es
cmp
jmp
xor
daa
shll
lock
mov
adc
lods
mov
dec
fwait
cmpsl
push
jl
stos
mov
pusha
cld
xor
cmpsl
stc
mov
and
jl
push
adcb
enter
movsl
cmpsl
adc
mov
inc
iret
sub
mov
or
insl
stos
add
jg
sbb
or
sahf
repnz
insl
in
pop
mov
scas
inc
sub
nop
cmpsl
xchg
sub
dec
movsl
sbb
repz
pop
iret
aad
jp
mov
shr
insl
scas
outsl
repz
repnz
bound
ret
out
push
adc
and
cltd
lods
push
mov
rclb
mov
cmp
in
dec
fs
jae
xchg
and
scas
test
mov
sbb
xchg
inc
sbb
cltd
out
jne
push
andb
lcall
inc
addr16
and
xchg
dec
imul
andl
push
inc
movsb
xchg
fldenv
mov
xor
mov
dec
add
mov
inc
ss
xor
inc
pop
mov
mov
je
mov
push
ss
gs
cmp
je
imul
xchg
adc
or
mov
push
sbb
addr16
mov
les
or
lods
push
aaa
cmp
xchg
aam
ret
shrl
imul
les
ljmp
or
hlt
loop
int3
sbb
adc
sbb
dec
dec
rcr
pop
mov
mov
lret
push
insl
andl
pop
mov
mov
cmpsl
sbb
xor
jns
and
ljmp
and
les
push
jo
dec
int3
ret
or
xorl
cmovno
daa
test
sub
xchg
lret
mov
or
mov
test
push
stc
cmp
cmc
push
sub
xchg
xlat
stc
and
lcall
lods
mov
sbb
hlt
imul
push
jnp
rcr
mov
mov
and
in
adc
xchg
xchg
sbb
je
pushf
imul
repz
push
in
data16
or
add
mov
jno
ljmp
imul
movsb
dec
mov
shll
pusha
pop
push
mov
adc
push
sahf
aas
jp
addr16
mov
mov
int
sbb
mov
jmp
repz
xchg
sti
repz
push
xor
clc
pop
outsl
or
cmp
loop
das
inc
repnz
jle
aam
imul
fistpl
cmp
sbb
mov
or
xchg
dec
mulb
pushf
pop
sub
out
jl
sahf
outsl
dec
loope
out
xchg
repnz
shlb
sti
xor
and
cmp
int3
pand
dec
jb
shrl
or
scas
into
push
std
addr16
cmc
cmp
xorl
data16
aaa
inc
jae
arpl
adc
adc
sub
ss
shll
and
aas
std
fstpl
ljmp
sub
test
push
icebp
xchg
in
shl
test
cmpb
in
fwait
lcall
lds
sbb
test
es
fucomip
and
popf
sbb
sbb
mov
bound
cs
repz
xchg
or
enter
aad
mov
jae
adc
adc
test
mov
push
adc
cmp
cmpsl
fcmovne
and
stos
and
fs
insl
addr16
mov
cli
in
cmp
sub
mov
and
adc
add
stos
xor
sarl
push
call
mov
std
xchg
sarb
or
es
out
inc
sub
es
xchg
dec
das
push
jg
fucomi
pop
sbb
clc
gs
adc
cmp
insl
int
pop
fcmovu
sbb
jo
cmp
xor
out
cwtl
inc
es
fisubs
cltd
sub
sub
mov
call
lods
dec
sub
inc
movsl
pop
adc
xor
adc
sub
sbb
mov
arpl
inc
jge
mov
xchg
movsl
jle
dec
imulb
aad
fistps
mov
in
rclb
daa
popa
jl
adc
xchg
mov
jns
sub
mov
ja
pop
or
mov
in
mov
jae
and
push
xchg
mov
lahf
lods
sbb
push
lfs
in
mov
movsl
bound
xor
inc
sbb
mov
jmp
xchg
fcmove
or
dec
mov
push
xor
jge
jne
call
scas
jnp
xor
cs
push
pop
pop
xor
icebp
pop
movsl
adc
and
cmp
dec
out
dec
and
push
adc
mov
sub
push
mov
sub
ja
clc
ljmp
adc
inc
jne
pushf
pushf
bound
xchg
sbb
xchg
or
adc
pop
inc
inc
cmp
stos
insl
jb
test
adc
movsl
cmp
fsubrl
xor
mov
xor
sbb
outsb
mov
mov
test
xchg
pop
iret
or
int
cld
dec
scas
inc
movsl
and
shll
aad
imul
scas
ret
divl
adc
push
inc
shlb
adc
faddp
fnstenv
push
pop
mov
call
into
sbb
dec
test
cmp
mov
imul
mov
daa
and
jno
pop
push
xorl
stos
cmc
cmp
pop
unpckhps
add
or
xor
add
dec
mov
xlat
inc
lods
mov
fyl2xp1
jge
in
popf
fidivl
cmp
inc
dec
xor
pop
or
addl
pop
inc
inc
imul
je
mov
xchg
mov
in
or
pop
loop
ret
test
mov
fsub
xor
lahf
push
jp
add
stos
loope
loop
imull
mov
fsubs
bound
adc
cmp
cli
jg
add
fxch
punpcklbw
mov
pop
or
sahf
pop
ljmp
mov
pop
mov
mov
mov
rorl
pusha
ds
jno
inc
testl
xchg
mov
pusha
cmpsl
pop
mov
add
mov
fsts
and
les
cwtl
push
nop
xchg
dec
mov
push
jle
icebp
mov
jecxz
out
leave
xchg
mov
mov
mov
dec
jns
add
test
inc
daa
scas
jle
and
dec
lds
dec
push
mov
dec
inc
xlat
push
jb
lahf
lea
cmp
inc
sarb
cltd
pushf
push
push
loop
adc
call
nop
jmp
test
xchg
enter
sub
dec
jnp
out
adc
cmp
popa
inc
nop
movb
cmpsl
xchg
push
lret
adc
sub
push
rorb
cmpb
rol
push
test
repz
sub
out
mov
sbb
sti
cwtl
shlb
xchg
rclb
or
mov
call
push
sub
adc
fs
inc
ljmp
data16
xchg
shll
dec
nop
clc
mov
mulb
mov
in
push
inc
add
jge
pop
daa
fld
dec
mov
sahf
loope
xchg
xchg
push
or
aam
jne
or
pusha
jo
daa
es
or
mov
lods
sbb
mov
lret
inc
je
dec
jae
jmp
ucomiss
and
push
sub
xchg
stc
xor
mov
or
enter
out
out
or
loop
adc
pushf
jmp
sahf
cmpsl
push
lds
popa
fst
add
out
stos
popf
mov
cmp
xchg
les
fsubl
mov
jp
jo
out
sub
jb
jmp
mov
add
inc
push
bound
sbb
loope
mov
xor
ja
loopne
jle
gs
sbb
sbb
mov
cmpsl
mov
fldt
repnz
shll
mov
daa
sahf
call
imul
or
dec
movsb
addr16
pop
or
push
fimull
push
test
xor
in
xchg
mov
and
jle
out
xor
in
out
cli
cmp
mov
adc
popa
mov
out
fwait
ret
sub
dec
rol
push
arpl
shl
pop
les
imul
imul
dec
iret
cli
mov
and
rcrb
in
nop
repz
lods
movsb
fwait
mov
imul
push
mov
push
idivl
sbb
roll
rorb
enter
push
ljmp
shll
adc
shlw
pop
sbb
setno
jmp
in
mov
imul
mov
jl
pop
negb
out
xor
and
cli
cmp
loopne
inc
cs
mov
aad
xchg
outsb
xorl
xchg
lods
mov
popf
jecxz
fldl
cwtl
pusha
and
daa
xchg
bound
arpl
data16
xchg
mov
add
rolb
adc
jo
hlt
push
imul
adc
push
sub
sbb
in
sti
add
pop
shlb
cld
icebp
in
imul
mov
scas
rorb
ffree
insb
cmove
jnp
or
jl
jnp
cs
xchg
cmp
mov
arpl
lret
inc
in
mov
inc
push
cs
insb
mov
aas
xlat
push
xchg
sub
xchg
jp
adc
adc
in
or
pusha
add
xor
mov
jbe
cmc
lcall
dec
add
inc
mov
and
ja
aas
xchg
mov
sbb
sbb
cmpsl
dec
andl
mov
clc
xor
fcomps
pop
fistpll
jle
sbb
cli
dec
cmp
pop
inc
inc
loop
mov
adc
sub
pop
daa
pop
adc
add
xor
xor
mov
mov
cmpl
adc
and
fdivrs
sbb
repnz
in
hlt
jp,pt
lret
bound
cmc
pushf
insb
sbb
pop
andb
sbb
lea
xchg
inc
push
fisubl
mov
inc
js
xlat
jmp
pop
inc
pop
repz
les
call
outsl
and
jno
dec
lret
xsave
inc
pop
cltd
and
cmpsl
shlb
lods
adc
mov
lea
call
mov
jg
mov
orl
sub
mov
jle
xchg
push
inc
sub
jmp
daa
dec
aam
pop
pushf
test
mov
dec
mov
fldl
int3
ds
rsm
and
adc
xor
rolb
mov
inc
jne
pop
xchg
bnd
inc
in
jmp
icebp
xor
add
in
sub
je
pusha
xchg
pop
dec
cmp
mov
jo
andb
pop
add
cmc
mov
sti
call
es
lods
iret
mov
fdivl
aad
mov
out
fldenv
jbe
mov
mov
sbb
xor
aad
mov
arpl
inc
in
in
mov
data16
test
shrl
popf
xor
adc
imul
je
insb
mov
push
add
mov
daa
out
xor
leave
lods
bound
lahf
stc
mov
inc
push
push
pop
jmp
fildll
in
push
push
pop
lret
loop
sbb
inc
rcll
xor
push
inc
es
aad
push
lret
sbb
fistpll
ss
add
stos
push
dec
fsubp
rcll
cmp
enter
xchg
out
sbb
in
mov
stc
push
insb
lock
xor
stc
cld
mull
shrb
cmp
and
xchg
cmp
pusha
cmpsb
push
pop
lods
cmpsl
filds
js
pop
ds
xor
sti
cmp
movsb
or
xor
cmp
push
fnstenv
stc
sub
inc
inc
sbb
sub
push
shll
or
lahf
inc
ficoml
sub
addr16
pop
mov
mov
xchg
mov
jl
adc
out
xchg
xchg
ljmp
pop
mov
out
pop
push
jns
sbb
lret
in
or
bound
les
xor
mov
lods
or
imul
pop
es
andb
dec
stc
sti
mov
out
mov
sub
bound
mov
data16
mov
ficoml
pop
push
scas
or
lea
or
sub
cld
lods
lea
cli
sbb
in
sbb
xor
push
ret
and
subb
sbb
mov
cmc
xchg
imul
adc
lock
jnp
test
dec
inc
test
dec
push
cmp
test
or
pop
mov
loop
lcall
mov
mov
lock
aad
or
lret
subl
pop
or
add
push
mov
xor
xor
test
and
popf
out
fucomp
add
ja
xlat
imul
addr16
int3
popa
mov
test
dec
xchg
push
xchg
repnz
loope
rorb
xchg
dec
sahf
adc
hlt
enter
je
add
repz
icebp
adc
std
mov
xchg
fwait
cmpsl
iret
aas
dec
xchg
dec
jl
lcall
and
xor
push
mov
je
or
inc
out
loope
test
push
dec
xchg
sub
movsb
scas
xchg
enter
add
aas
pusha
mov
and
sahf
jb
dec
enter
inc
inc
mov
mov
aad
xor
mov
lods
in
daa
aad
mov
addr16
dec
bound
insb
dec
jl
jp
icebp
insl
in
pop
jecxz
std
out
fcoml
sarb
pop
fdivs
mov
ss
je
xor
inc
insl
pop
xor
inc
dec
in
cmp
push
test
push
jae
jo
jl
jl
pop
and
mov
ja
outsb
mov
xlat
iret
jns
jle
lahf
outsb
adc
lcall
bswap
or
cmp
adc
mov
popf
loopne
lock
es
rolb
lods
out
xor
enter
lret
sbb
sti
add
adc
push
movsb
imul
sub
push
notb
imul
lea
int
outsl
sbbl
cmp
mov
mov
and
adc
add
jp
iret
fldl
faddl
shl
mov
decb
add
dec
jnp
pop
adc
bound
mov
adc
into
mov
outsl
fisubrs
jno
pushf
pop
insl
pop
addr16
cwtl
mov
lds
sbb
daa
add
or
hlt
push
lret
and
cmpsb
push
xchg
add
inc
xchg
jae
mov
mov
sub
fstps
nop
scas
rorl
cmp
mov
push
dec
repnz
sbb
cs
pop
sbb
sub
jno
aam
in
leavew
ficoml
jo
div
in
in
sbb
mov
cmp
lcall
in
mov
aaa
xchg
adc
dec
movl
inc
flds
icebp
push
and
pop
out
xchg
adc
cmp
mov
sub
mov
out
std
or
pusha
mov
mov
adc
movsl
iret
add
das
mov
jmp
or
fcoms
insl
mov
stos
add
fsubl
sbb
add
mov
imul
cmp
daa
addb
sub
jmp
mov
mov
dec
sub
xorl
dec
mov
stos
nop
adc
push
je
popf
movsl
push
fisubrs
cmp
loope
orb
hlt
sbb
shl
orb
adc
cmp
sbb
jg
inc
inc
fldenv
mov
adc
mov
jnp
outsl
divl
cwtl
cwtl
pushf
or
xor
dec
pop
pop
ss
in
cmc
leave
jae
push
mov
xchg
push
inc
mov
xor
icebp
iret
xchg
ja
test
sub
divb
shrb
pop
cwtl
sub
push
lcall
sarl
or
repz
je
and
fmull
cli
mov
or
loope
jp
push
sti
mov
or
cmp
lret
adc
test
dec
out
es
mov
ljmp
mov
ss
push
test
pusha
aas
push
pop
jge
outsl
lea
cltd
fsubrs
inc
xor
pop
repz
in
jbe
add
imul
push
cmpsb
add
repz
outsl
pop
leave
sub
sub
push
sbb
int3
xchg
jne
xchg
push
mov
outsl
push
test
push
jle
or
mov
lcall
rcll
sub
loopne
in
ljmp
fimuls
testb
jbe
outsl
jns
push
add
mov
jo
in
add
and
pop
lahf
ficoms
pop
xor
and
out
outsb
or
and
out
hlt
pop
pop
in
movsl
ret
in
in
sub
scas
popf
xchg
and
in
adc
dec
cmovp
rorl
hlt
or
cmp
sbb
jnp
mov
sbb
call
push
cmpsl
mov
sub
dec
in
in
inc
dec
mov
addr16
inc
lea
inc
xadd
inc
mov
cmpsl
ds
xchg
outsl
clc
sub
std
mov
stos
hlt
mov
xchg
call
ret
cmpsl
sub
repnz
push
scas
stc
push
repz
ss
popa
adc
jg
cmp
fwait
jns
dec
loope
in
and
mov
lods
aaa
adc
adc
sub
ror
adc
or
xor
ja
jecxz
shll
mov
loop
xor
adc
outsb
das
sbb
pop
dec
sub
lods
mov
scas
ret
jmp
sbb
and
sub
add
pop
lret
and
push
sub
nop
xchg
ds
in
rolb
jg
aad
sarb
shl
mov
pop
sbb
pop
ret
fwait
outsl
mov
jmp
jp
jae
outsb
mov
push
fildll
loopne
aaa
xchg
ljmp
adc
ret
and
std
pop
xchg
pop
adc
push
and
or
mov
aaa
push
iret
sub
push
pop
shlb
rol
and
sarb
sbb
mov
mov
sbb
push
loope
xor
mov
inc
stos
mov
add
jne
rol
inc
push
xor
dec
mulb
shr
pop
leave
or
cmp
cmp
inc
mov
or
in
inc
add
repz
dec
call
pop
insb
add
xchg
push
dec
es
mov
jl
loope
mov
cmp
aam
sahf
mov
mov
clc
cld
jge
pop
inc
iret
and
repz
inc
nop
push
xor
mov
nop
bound
loope
xchg
sbb
push
in
jp
pop
lret
add
adc
mov
sbb
out
stos
add
adc
loope
push
sbb
mov
insb
fwait
testl
mov
stos
push
sbb
xchg
jmp
aas
and
sbb
push
mov
or
and
mov
push
fwait
dec
and
adc
arpl
cmpsl
in
jo
les
xchg
test
cmpsl
test
jbe
cli
cld
je
add
hlt
pop
inc
lea
cmp
iret
or
sahf
mov
mov
fs
pop
jno
xchg
sbb
add
inc
stos
inc
sub
clc
xor
icebp
in
adc
xchg
inc
addr16
cmpsl
adcl
insl
push
fidivl
mov
sbb
jecxz
cmp
out
mov
test
fmuls
mov
and
push
and
lahf
push
test
mov
fsubrl
jnp
adc
fsubrs
insl
aaa
test
in
sar
xor
jge
xchg
lock
xchg
xchg
in
jne
scas
outsb
xchg
xchg
inc
data16
ficoms
mov
lds
fisubs
add
mov
mov
imul
xor
sbb
pop
insb
pop
orl
iret
popa
je
popf
call
pop
mov
in
shll
or
push
add
ljmp
mov
cmp
push
push
test
data16
call
mov
arpl
movsb
cmpsb
sbb
jb
ljmp
and
pop
inc
hlt
enter
jb
add
fucomp
push
sub
pop
xchg
cmp
lock
das
add
rorl
mov
dec
repnz
mov
mov
cs
repnz
and
imul
in
inc
fsubrs
push
mov
sbb
lea
fisttps
jnp
sahf
lsl
cmp
add
ljmp
aad
lds
mov
fs
pop
sub
mov
inc
pop
ds
fstps
xor
sub
jge
and
sbb
icebp
aad
jg
ja
test
xchg
dec
arpl
sub
xor
cmpsl
jno
and
push
jg
dec
shlb
add
test
mov
mov
cmp
shll
stc
mov
fwait
lods
jno
aas
xchg
stc
cltd
mov
subl
pushf
outsb
stos
addb
xchg
pop
mov
push
out
test
xchg
test
fistpll
test
adc
add
add
jmp
adc
pusha
mov
jl
xor
cmp
addl
mov
js
mov
push
dec
or
mov
xor
test
iret
mul
iret
popa
scas
dec
xchg
sti
stos
sahf
push
stc
imul
xor
jmp
stos
repnz
daa
test
xchg
popf
ljmp
int
add
daa
adc
cs
imul
ljmp
inc
xor
adc
cmp
nop
lret
add
je
roll
in
in
das
fidivs
add
mov
adc
dec
insl
vmovaps
jg
clc
sub
lock
inc
xchg
mov
pop
aas
fisubrl
outsl
inc
shrb
out
or
test
mov
in
stos
mov
pusha
in
movsb
xor
hlt
add
cmp
cli
pop
cmpsb
outsb
outsl
imul
push
cld
mov
pop
jb,pn
aas
xchg
push
pop
mov
lret
div
and
sbb
movsl
loopne
cld
mov
and
adc
jmp
jnp
inc
push
out
ror
adc
clc
dec
je
pop
orl
jg
lret
mov
int
add
jbe
mov
dec
les
or
mov
jecxz
mov
stc
in
popf
jo
outsl
pop
adc
mov
shrl
inc
mov
imul
mov
xchg
and
xchg
sub
jp
stos
cmc
mov
xor
insl
rorb
out
add
sti
pop
test
mov
push
adc
mov
add
mov
test
cmpsb
jmp
lods
dec
sar
outsl
jns
data16
in
inc
push
push
shlb
lret
insl
jb
xchg
dec
jnp
cmpsb
or
call
xchg
push
mov
xchg
call
xchg
mov
les
mov
xchg
cmpsb
imulb
ror
js
std
loope
subl
mov
sub
xchg
cmp
in
loop
inc
cmp
or
imul
cmpsb
scas
mov
sbb
sbb
testb
and
adc
popf
mov
inc
scas
mov
pop
add
rol
jno
aaa
inc
pop
pop
bound
lock
cmp
jbe
adc
insl
fwait
sbb
stos
inc
cmp
sub
data16
push
mov
adc
add
adcl
fmull
cmp
sub
mov
add
sub
dec
cmpsb
fcompl
fistpll
mov
loopne
mov
inc
lods
pop
scas
push
clc
lcall
mov
cmp
in
inc
shl
dec
in
shlb
jmp
jmp
or
es
dec
cmc
addr16
into
mov
arpl
outsl
aaa
into
or
jp
mov
mov
jecxz
push
or
stc
cmp
pop
int3
sub
nop
movsb
dec
mov
mov
mov
jno
mov
fidivrl
mov
add
jbe
mov
inc
aam
mov
xor
lahf
je
xchg
je
imul
test
sub
xor
iret
mov
stos
jns
lock
jae
cmpsl
cmp
mov
sub
xor
jecxz
mov
add
dec
jne
pop
add
push
mov
movsb
mov
cmp
sub
scas
pop
dec
inc
aaa
sub
adc
int
inc
xor
in
inc
sbb
or
fists
mov
scas
dec
sub
xor
xchg
sbb
shlb
in
mov
icebp
shlb
je
adcb
jmp
jp
fs
push
call
or
xchg
add
sahf
cmp
icebp
in
ljmp
ret
cmp
sbb
mov
test
and
pop
mov
xchg
dec
aad
test
mov
inc
sub
mov
jb
test
mov
lock
cmp
xchg
je
sbb
scas
into
and
rcrb
sbb
outsl
xchg
rorl
jmp
lods
aad
in
sti
in
arpl
mov
xor
and
cmp
loopne
fiaddl
adc
movsb
mov
stos
insl
fsts
insb
xchg
adc
int3
mov
sub
imul
cmp
xchg
and
jnp
insl
xchg
loope
adc
movsl
cmpsb
push
xchg
xor
jnp
jb
daa
sub
and
or
mov
loopne
roll
jmp
int3
loope
cmp
cmp
fnstcw
add
popf
lock
mov
mov
mov
push
jb
enter
es
jno
test
les
arpl
sub
loop
aam
les
loop
pop
cwtl
inc
shll
movsb
add
sub
stos
subl
jmp
xor
jne
hlt
sub
js
sub
lret
pop
mov
lods
or
jns
cmc
call
scas
andl
gs
imul
icebp
or
lods
jnp
add
test
jecxz
movsl
pop
cltd
and
or
mov
mov
xor
scas
inc
das
or
imul
popf
xchg
clc
fwait
pop
mov
shll
sub
sub
jl
mov
mov
mov
in
fwait
mov
mov
xorb
addl
inc
inc
hlt
xchg
jmp
aam
push
fwait
shrl
out
pop
pop
pop
fs
sbb
jbe
mov
or
daa
xlat
mov
xor
or
sbb
gs
enter
add
les
repnz
pop
jne
imul
orb
enter
out
xchg
adc
xchg
sbb
fisttpl
popf
ret
xadd
sbb
cmp
and
imul
adc
fmul
jge
or
mov
test
fcompl
inc
sub
cmp
push
sbb
dec
cld
lret
mov
push
mov
loopne
int
dec
sbb
xor
and
xor
jno
call
xchg
inc
dec
inc
mov
push
push
push
inc
sbb
out
pop
xor
mov
jne
fisttps
out
rcll
ret
mov
xchg
mov
addl
aaa
push
dec
test
adc
add
add
fwait
mov
icebp
in
clc
adc
dec
sbb
ja
adcb
cwtl
push
mov
xchg
dec
dec
jecxz
mov
scas
iret
adcl
xchg
ud1
add
aas
mov
sbb
pop
jne
jmp
push
mov
out
push
cmovs
xlat
mov
outsl
shll
iret
mov
cmpsl
pop
mov
out
lahf
xor
scas
pop
clc
cltd
lret
sub
cmpsb
clc
add
fiadds
xchg
es
mov
xchg
xor
mov
or
cmp
mov
push
xor
jmp
popf
lcall
iret
imull
stc
inc
sbb
pop
cs
insb
shll
cmp
fimull
movsl
mov
aam
inc
das
mov
dec
mov
mov
out
mov
stc
iret
jnp
push
into
rcrl
dec
in
fs
push
push
cs
add
hlt
clc
add
jnp
rol
outsl
fists
push
mov
jbe
push
jmp
pop
stc
bound
loop
jbe
shrb
out
adc
jae
jns
or
sbb
dec
push
repnz
das
popa
add
lea
inc
pusha
cmpsb
mov
jl
sub
push
int
adc
jmp
and
xchg
data16
sbb
mov
dec
ret
push
jns
roll
fisttpl
mov
or
mov
bound
fstpl
dec
mov
and
stos
mov
lds
pop
jl
test
xor
fst
scas
je
cmpl
jae
push
shll
out
sub
inc
mov
xadd
test
loopne
dec
mov
rorb
popa
mov
roll
sbb
xor
pop
fidivs
pop
pusha
or
stos
mov
imul
xchg
rcrl
fstpt
shll
push
adc
imul
sub
int3
xchg
and
or
addr16
adc
add
int
pop
insl
shr
dec
xchg
jmp
xchg
sbb
xchg
cmpsb
movl
inc
negb
inc
dec
aas
scas
push
int3
and
adc
mov
pusha
inc
loop
stos
inc
popf
mov
jl
data16
jl
mov
push
cli
into
lea
push
sbb
insl
and
hlt
or
cmp
mov
outsb
std
mov
add
imul
mov
mov
dec
pop
hlt
repnz
jle
ja
incb
test
mov
cmp
lds
pop
cmp
adc
xor
xchg
fcmovnu
jae
mov
out
xchg
gs
cs
mov
cs
data16
sarb
bound
mov
test
ror
cmc
add
scas
fs
push
addr16
dec
cmc
sarl
popa
ret
rcl
sarl
rcrb
out
add
lods
inc
mov
xchg
scas
pushf
pop
xchg
push
pop
pop
out
js
xchg
or
jecxz
imul
cmp
lret
jo
mov
mov
mov
sub
push
dec
inc
loope
lods
in
ret
fwait
or
imul
ljmp
sub
inc
popa
mov
sub
lds
icebp
stc
push
ds
fisubrl
jnp
or
dec
push
in
sub
cmp
dec
sbb
jmp
dec
loop
sbbl
sub
jbe
cs
testl
xchg
sbb
jge,pt
jle
test
cmpsb
xchg
lods
mov
repz
or
gs
es
mov
idivb
mov
push
xor
cmp
push
dec
orb
popf
mov
sbb
mov
repz
mov
lcall
fsubrs
rol
arpl
mov
cmp
pop
dec
jge
mov
out
rorb
xchg
and
or
inc
jno
adc
aaa
xchg
xor
sbb
sbb
arpl
sub
pop
pusha
cmp
cmp
enter
ret
outsb
adc
or
xchg
xchg
mov
cmp
test
cld
mov
fiaddl
mov
mov
adc
xchg
jo
mov
xor
insb
sub
lock
insl
cwtl
movsb
xor
popf
out
and
jp
in
inc
cmp
shrb
push
jge
leave
insb
out
clc
ss
int3
call
jnp
mov
dec
add
add
xchg
push
dec
adc
shlb
lret
or
push
push
dec
push
jle
dec
push
adc
pop
mov
jo
jno
negb
add
or
subl
xchg
jno
int
pushf
adc
clc
cmc
pop
pop
mov
scas
inc
or
idivl
rclb
sbb
xor
push
lock
dec
mov
loop
add
mov
xor
dec
test
popf
mov
cmp
push
and
jne
cmp
daa
mov
ror
aam
sahf
add
es
popf
fwait
sub
hlt
outsl
movsl
push
out
adc
pusha
popf
call
lret
push
inc
or
dec
jmp
inc
sahf
scas
test
jle
pushf
push
and
xchg
aas
insw
lahf
mov
sub
pop
xor
jo
repnz
dec
lds
inc
inc
inc
pusha
xor
mov
aas
dec
xchg
cmc
pop
ror
jl
adc
in
push
mov
mov
push
xchg
mov
push
xor
dec
scas
cmp
sbbb
dec
push
inc
sub
mov
in
mov
addb
les
daa
sub
cltd
add
cmp
cmp
mov
and
xor
or
pop
xor
add
lret
mov
jmp
clc
movsl
divl
sbb
test
fwait
testb
cmpsb
cli
add
lock
popaw
sbb
enter
ss
push
jo
inc
lock
movsl
jne
fisubrs
aaa
icebp
addr16
mull
aaa
xorl
stos
andl
jns
leave
fs
cmp
testb
dec
pop
mov
mov
xor
xchg
inc
mov
aaa
sub
jmp
pushf
sbb
sub
movsl
push
pop
test
jne
loopne
or
mov
scas
pop
or
call
insl
lret
movsb
dec
pop
fwait
scas
ss
push
repz
int
clc
ret
and
lcall
jl
add
cmpsl
ficompl
adc
push
xchg
mov
out
lahf
cmp
pop
mov
enter
cli
mov
cli
daa
cmc
in
xor
enterw
negb
xlat
aam
cmp
fnstsw
or
andl
dec
pushf
cli
rcll
sub
cwtl
pop
mov
aaa
je
pop
in
or
or
cwtl
jae
les
jp
xor
cmc
push
or
mov
mov
jb
or
movsl
sbb
sbb
test
add
lret
popa
loope
insl
sbb
pop
lock
push
or
push
and
cmp
pop
fucomi
inc
imul
xchg
push
outsl
leave
cmc
outsb
inc
fs
or
xchg
out
push
mov
jl
imul
aas
fmuls
jae
adc
mov
mov
iret
enter
adc
stos
mov
jmp
repnz
and
xchg
out
adc
jae
pushf
bnd
mov
inc
xchg
mov
repz
das
and
pop
push
cmp
sub
adc
inc
mov
das
pop
imul
push
jnp
orb
lods
rcrl
xor
mov
mov
insb
stos
jecxz
jne
pushf
or
cmp
fwait
aad
sti
aaa
nop
iret
pop
mov
sbb
sub
add
out
fcmovbe
es
inc
or
push
xor
fstpt
lock
or
mov
or
mov
neg
lds
or
lcall
fimuls
jecxz
xor
jp
dec
or
cmp
loop
xchg
push
imull
sbb
xor
mov
and
fsubl
das
imul
data16
ret
cs
pop
mov
mov
pop
mov
inc
pop
mov
mov
sub
jp
jb
jmp
inc
loop
cmp
sub
pusha
mov
xchg
clc
aam
aam
cmp
out
pushf
stos
mov
cmp
pop
xchg
aad
add
insl
mov
test
xchg
rol
psubsw
inc
cwtl
scas
pop
and
fcomip
push
xchg
in
jg
scas
mov
idivb
mov
cld
mov
aad
inc
jl
lds
jl
mov
xchg
inc
push
pop
jecxz
or
pop
push
mov
inc
aaa
push
add
xor
cwtl
push
imul
in
inc
out
or
jo
add
pushf
adc
lea
pop
clc
xlat
push
rclb
mov
jle
out
rolb
inc
jl
mov
pop
mov
dec
pop
stos
inc
fstps
push
xor
es
pop
push
mov
cld
and
xor
or
aas
mov
push
lahf
jbe
pushf
dec
dec
icebp
daa
pop
jl
xor
xor
adcb
adc
jp
imul
inc
jne
dec
popa
sub
mov
ret
and
mov
inc
cmp
push
pop
jecxz
xchg
xorl
mov
ret
mov
sbb
cli
stos
fcmovb
inc
jns,pt
xor
push
lea
mov
add
inc
inc
push
add
fisubs
add
clc
mov
arpl
push
push
and
mov
sarl
cmp
roll
fstl
les
aas
mov
jae
jno
adc
mov
jmp
es
outsl
mov
adc
out
mov
cmpb
adc
decl
pusha
int
jp
arpl
fsubp
sub
lret
adc
inc
push
or
imulb
in
fdivs
testl
xor
aad
in
cli
test
loope
les
adcb
add
xchg
das
jg
jle
test
push
xlat
mov
fcmovnb
push
mov
cmp
jge
mov
mov
paddq
stos
call
xor
adc
lret
insb
pop
pop
push
xchg
push
fs
test
and
std
ss
xchg
popa
ret
scas
scas
ret
cmpsb
pop
mov
and
jo
dec
sbb
add
mov
mov
mov
in
xchg
ja
and
std
mov
in
hlt
sbb
aaa
mov
add
sub
shlb
add
jmp
push
jge
pop
jle
stos
adc
sub
addr16
sub
mov
sub
insl
mov
repz
fistl
push
ret
cmpsb
ret
orl
mov
xor
lock
adc
or
jl
add
cmp
or
inc
xor
mov
movsl
pop
outsl
dec
mov
jbe
int3
xor
arpl
aaa
lcall
loopne
cmp
mov
cmp
sbb
iret
es
jae
jg
mov
imul
jmp
cwtl
and
xchg
sub
jno
pop
movsl
and
int
and
and
in
xchg
xchg
shll
lods
in
ljmp
jmp
test
jge
pop
sub
fcompl
push
jle
sti
js
fucomi
cmp
fs
inc
insb
push
out
pop
push
push
dec
adc
cmpb
add
jns
xor
and
je
stos
in
lret
cmp
adc
dec
jge
andl
add
dec
or
jg
rolb
and
cmp
ret
fimull
adc
in
movsb
push
jl
loope
rol
rorl
imul
and
xchg
rcrb
js
scas
xchg
mov
push
rclb
cmp
test
cmp
xchg
add
adc
cmc
or
dec
sbb
fdivrp
pop
dec
sahf
jne
jnp
pop
push
enter
mov
popf
xor
dec
jp
or
imul
mov
and
inc
and
insb
testb
push
pushf
dec
lods
in
sub
sub
push
pop
sub
mov
loop
rcrb
jle
and
in
inc
cmpsl
add
jae
testl
pop
ljmp
jns
ficomps
das
out
xchg
jbe
addr16
xor
xorl
es
push
inc
pop
aas
loopne
mov
dec
adc
js
cs
adc
mov
push
int3
test
out
shll
shrl
xor
xor
stos
or
fwait
ret
movsb
jp
mov
push
mov
ss
pushf
inc
inc
sub
jmp
dec
xchg
dec
jne
call
icebp
inc
popf
mov
cmp
enter
addr16
es
stos
push
and
lock
or
cli
imul
fs
addl
lds
rcl
add
xor
hlt
sbb
cltd
add
add
jp
push
ds
jnp
lret
cmp
mov
sbb
into
repz
inc
imul
icebp
xchg
inc
fdivs
ffreep
jne
loope
jmp
push
fiaddl
es
add
jb
pop
movsl
push
addb
scas
xchg
mov
push
mov
push
cmc
adcl
aas
ljmp
inc
test
mov
ret
in
push
sbb
or
repz
and
shl
add
xor
push
mov
aaa
dec
jp
es
lock
arpl
mov
fists
je
mov
icebp
test
sbb
cltd
lea
mov
dec
cmp
leave
add
or
call
xlat
dec
mov
dec
lahf
in
call
cmp
neg
push
int3
cmp
aas
pop
icebp
jno
in
jns
aas
loope
mov
andl
and
rcrl
out
mov
lret
fs
jmp
xor
mov
add
cltd
or
test
lds
jmp
dec
loopne
flds
adc
in
scas
gs
aad
mov
cltd
xchg
dec
pop
sbb
inc
cmpsl
clc
sub
dec
push
cmp
inc
fisttps
inc
int3
pop
add
push
push
add
ret
add
loope
add
push
iret
cmp
ret
sbb
test
adc
sbb
notl
scas
push
cmp
fwait
dec
sub
adc
bound
mov
xor
iret
inc
nop
out
push
jecxz
push
lret
enter
sub
cltd
dec
test
jmp
sub
aas
cwtl
or
sub
mov
adc
jmp
imul
test
sub
hlt
pop
fwait
idivl
mov
pop
aad
and
mov
testb
mov
sub
shl
cmpl
sub
xchg
popf
xchg
mov
test
bound
adc
pop
inc
lret
outsl
shll
cmc
push
stos
jno
mov
inc
shlb
fmul
jecxz
inc
lahf
in
test
sbb
xchg
dec
mov
add
cli
idivb
inc
mov
dec
pop
or
bound
mov
mov
cmc
ss
pop
mov
jmp
pop
mov
pop
ret
mov
iret
scas
inc
pop
icebp
enter
loopne
loop
mov
test
in
inc
or
and
jmp
lds
mov
dec
adc
jo
pop
test
les
sub
lea
push
pushf
out
popl
push
aaa
dec
popf
push
pop
pop
pop
in
in
rorb
pop
and
mov
shl
aaa
cmp
dec
or
push
xchg
mov
stos
push
cmp
inc
cmpsb
push
push
jmp
jmp
xor
adc
sbb
fsubl
cmp
sub
bound
aam
das
out
lret
xor
lock
insl
or
fwait
nop
xor
shl
cltd
push
push
jns
sub
jg
jbe
mov
pop
jae
xchg
pop
sub
movsb
bnd
xor
enter
adc
sub
xchg
cs
mov
add
push
lds
or
inc
sbb
and
test
jne
add
dec
push
fldl2t
jmp
jp
push
out
arpl
icebp
rolb
xchg
xchg
push
sbb
xchg
jb
sahf
jo
and
aam
addb
sbb
ds
pop
insb
aaa
cmpsb
repz
cmpsb
fiaddl
push
repz
push
ds
mov
pushf
lret
jle
cmc
dec
hlt
pop
xor
jbe
out
insb
mov
into
fpatan
out
pop
aas
in
and
in
xor
adc
sbb
jbe
or
pushf
cmp
test
outsl
insl
std
and
es
cmpsb
dec
cmp
push
out
sub
arpl
addr16
dec
pop
mov
andl
xchg
cmc
mov
xor
dec
push
push
or
lahf
xor
lret
mov
jbe
repz
sbb
adc
movsl
xchg
shl
outsl
add
and
aam
pop
sbb
lea
lret
cmpsb
fildll
adc
inc
mov
push
scas
jmp
cltd
and
rolb
pop
aaa
stc
mov
jo
jmp
shll
sub
mov
stc
ss
mov
xchg
ror
mov
mov
aam
xchg
cmc
cmp
lret
das
sub
mov
scas
mov
sbb
lods
popf
push
in
and
push
inc
cmp
jae
lock
ja
aas
xlat
ror
mov
das
clc
and
mov
mov
mov
addr16
repz
dec
inc
pushf
push
push
pop
movsl
push
imul
mov
rcrl
mov
adc
pop
sahf
and
dec
arpl
add
mov
and
ljmp
cmpsl
add
dec
loop
arpl
mov
adc
enter
add
mov
adcb
call
mov
push
dec
push
jb
sub
popf
fistpl
and
jnp
ljmp
pop
loopne
lock
xchg
mov
in
sbb
outsb
int3
ucomiss
and
dec
cmc
fldcw
sti
stc
clc
jmp
jns
inc
adc
out
sub
xor
scas
fldpi
cwtl
or
imul
dec
inc
sbb
cmpl
push
pop
loope
or
sub
dec
ljmp
push
mov
xor
jecxz
cld
ja
sti
mov
jl
punpckldq
enter
test
mov
arpl
push
mov
pop
add
inc
push
jmp
dec
push
movsb
cwtl
sbb
push
pop
dec
ds
mov
sbb
sub
or
les
pushf
jns
insb
mov
adc
es
adcb
cld
add
loop
dec
xor
pop
popa
dec
les
fiaddl
nop
cmpb
xchg
sub
pop
call
pop
inc
imul
out
out
loop
popa
push
aam
rclb
adc
das
pop
mov
in
jecxz
inc
lahf
xchg
sub
outsl
jae
int3
negb
test
imul
xchg
out
stos
or
cmp
or
cmp
clc
ret
and
repz
fcomps
pop
mov
sbb
lds
sub
imul
mov
mov
gs
out
push
popf
and
add
ja
in
cld
iret
push
scas
outsl
inc
lahf
and
jg
gs
pop
jno,pn
push
pop
and
mov
xor
xor
scas
sbb
or
sbb
iret
iret
dec
push
push
push
aam
cld
push
jl
cmp
xchg
adc
sub
adc
sti
mov
or
mov
pop
mov
cltd
fs
dec
rcrb
or
fwait
push
xchg
lock
add
addr16
lahf
jecxz
fcomi
xchg
sti
and
shlb
push
sti
ficoml
adc
leave
out
sti
pop
sbb
add
insl
test
sti
and
decl
jmp
sbb
out
xchg
inc
mov
adc
sub
xchg
sar
cli
lret
mov
xchg
xchg
cltd
mov
xchg
inc
cmpsl
mov
mov
stos
push
lods
sbb
lds
push
das
orb
lds
cltd
fsts
shll
pop
cmp
mov
test
adc
jmp
pop
daa
mov
push
in
add
xchg
loope
or
push
add
out
pop
les
fmull
insb
sub
lock
clc
mov
pop
imull
hlt
pop
pop
sahf
xor
ljmp
jmp
pop
jne
inc
mov
jl
fildl
cld
cmpsl
cmpsl
lea
loopne
xor
fistl
inc
sarl
pop
cmp
pop
rcl
jae
sti
sbb
xchg
ljmp
cmp
or
add
push
mov
repnz
nop
sub
cld
sbb
dec
dec
add
insl
add
cmp
pop
sti
int3
cmp
and
stc
cmp
push
or
adc
fwait
pop
mov
and
pop
cmpsb
out
in
dec
xor
jno
xorb
xchg
push
jne
adc
push
jns
sti
sub
xor
mov
sbb
movsl
sbb
pop
dec
fwait
cmpsb
mov
inc
mov
pop
push
cmp
pop
adc
or
jg
xlat
rorl
jl
add
mov
push
sub
add
push
std
mov
mov
pop
sub
sub
jmp
cltd
mov
in
stos
fcmovnu
mov
and
addb
dec
outsl
pop
and
mov
jle
xchg
mov
int
xchg
std
stos
loope
jne
or
adc
icebp
pop
mov
das
cmpsb
xchg
cli
pop
dec
push
mov
adc
pop
loope
lds
and
sbb
aas
mov
into
pop
inc
cmc
mov
pop
jp
sbb
pop
repz
rcll
jmp
and
pop
xor
and
or
push
add
sub
jns
in
push
addr16
bnd
adcb
cmp
scas
lock
imul
push
adc
nop
add
mov
xor
mov
nop
push
daa
pop
mov
std
dec
shll
mov
int
xchg
fidivrs
popa
shll
and
pushf
mov
push
pop
in
pop
dec
sub
and
or
jg
inc
xchg
out
out
adc
popa
or
in
adc
xchg
adc
imul
in
ret
das
adc
cmpl
iret
pop
faddl
cmp
orl
mov
test
adc
out
inc
push
jmp
xor
cld
mov
inc
pop
xor
xchg
push
pop
mov
je
pop
sub
repz
adc
aas
xor
movsl
push
data16
xchg
and
push
dec
adc
push
pop
mov
mov
xor
or
pop
cmp
mov
fadds
dec
popf
pop
popf
int
cmp
call
push
outsb
jb
jp
scas
add
add
mov
lods
mov
outsb
into
testb
jo
jl
push
fnstsw
int
push
popf
pop
fldenv
ljmp
xchg
cmp
stc
mov
jmp
jb
mov
fxch
push
adc
or
in
add
jae
gs
enter
push
adcl
das
outsw
clc
cmp
mov
iret
sub
add
and
ljmp
push
push
dec
iret
dec
sbb
je
hlt
mov
or
es
mov
out
mov
xchg
push
ffree
jmp
out
adc
mov
stc
lcall
loope
sbb
scas
pop
xchg
add
mov
xchg
jg
nop
out
aaa
sub
les
and
adc
sahf
in
cs
xor
mov
and
add
lcall
lea
xchg
popa
stc
aaa
cmp
cmp
pop
in
sbb
fwait
mov
in
adc
repz
hlt
and
data16
rclb
stos
jnp
inc
pop
cmc
lods
mov
stos
jmp
push
and
ds
jge
cmp
add
leave
push
out
rorl
dec
js
imul
es
cmp
or
or
cmp
adc
dec
dec
decb
or
cmp
mov
pusha
cmp
int
xchg
mov
or
xchg
inc
and
fxsave
shr
rorb
sahf
mov
or
mov
sarl
fnstsw
adc
mov
or
jae
cmp
mov
movsl
xchg
sbb
stos
call
mov
mov
jmp
sarl
scas
jg
inc
lods
rorb
mov
ret
das
ficompl
std
inc
dec
popa
mull
push
call
xchg
daa
add
notb
mov
sbb
mov
push
rorl
push
jne
lret
out
inc
sbbl
xor
inc
mov
in
mov
push
mov
mov
cld
jbe
lcall
fnstenv
lret
inc
push
sub
loopne
sbb
mov
push
jbe
paddq
rclb
enter
leave
das
pop
xorb
cmp
inc
xlat
addb
or
inc
pushf
xchg
daa
cmpsb
iret
or
pop
jle
es
push
xchg
add
and
int
in
xor
pop
movsb
arpl
xor
sub
mov
pop
aam
sbb
cmp
or
xchg
inc
cs
mov
mov
inc
mov
lea
or
arpl
aam
mov
int
loop
pop
jp
loop
es
es
mulb
std
shl
mov
and
mov
xchg
mov
xor
pop
fwait
mov
data16
das
inc
les
xor
sbb
shrl
push
inc
fldl
mov
outsb
pop
jle
push
sub
mov
shl
movsb
test
sbb
shrl
hlt
mov
rolb
out
sbb
cmp
in
cmp
mov
cmp
cmp
adc
popl
xor
cmp
mov
fistpl
inc
inc
fsub
in
sub
gs
jle
fwait
mov
dec
out
and
add
scas
mov
jae
sahf
sbb
mov
cmpsb
imul
cmc
addps
xlat
or
inc
push
push
js
in
push
xlat
add
rcll
and
push
add
addl
cs
cmp
fldenv
and
subl
stos
out
outsl
js
pop
push
lcall
ds
rorb
mov
push
popa
loop
cltd
dec
js
mov
ljmp
dec
test
movzwl
push
mov
outsl
leave
fmuls
adc
lds
outsb
mov
xchg
decb
stos
enter
pop
jg
dec
lods
call
sub
aas
jmp
call
cmp
jl
mov
out
mov
addr16
out
push
stos
inc
cmp
sub
arpl
leave
out
dec
mov
push
neg
jns
push
mov
fs
sbb
push
pop
or
pusha
sub
rcll
loope
cwtl
fwait
ret
push
bound
cmp
je
inc
xchg
adc
cltd
or
imul
adc
cli
jnp
in
pushl
inc
loop
cmpsl
inc
adc
jmp
push
arpl
push
and
ficoml
mov
jne
rcll
ljmp
int
cli
cmp
mov
cmp
cmp
cli
jl
mov
ret
ja
nop
add
sbb
std
ret
dec
out
push
roll
mov
lods
stos
cmc
popf
in
push
ss
mov
pop
loope
enter
cmp
mov
mov
add
outsb
xchg
int3
mov
mov
dec
mov
or
mov
outsl
clc
mov
mov
cmp
mov
push
subb
mov
loopne
adc
ja
in
xchg
and
cld
inc
jecxz
jae
notb
add
cmpsl
insl
inc
addr16
pop
lock
sahf
shrb
dec
ljmp
jp
cltd
pop
dec
into
push
push
aas
dec
movsb
xor
mov
loope
and
and
jne
push
das
loop
test
pop
lahf
loope
mov
xchg
sbb
and
pop
push
addr16
cmp
xchg
and
jg
xor
mov
test
sbb
add
push
mov
xchg
and
sti
xchg
int
adc
or
add
pop
adc
pop
inc
pop
fldenv
jne
arpl
push
mov
mov
xchg
or
loopne
dec
inc
cld
push
or
ret
sbb
fstps
mov
sahf
adc
insb
std
stos
rcrl
sub
ljmp
sbb
lahf
pop
dec
or
enter
insl
popa
aas
lcall
in
lods
insb
ret
add
adc
fisubl
pop
dec
iret
das
xor
jne
shrl
repnz
bound
xor
lods
sub
out
mov
aam
stos
test
and
jo
mov
xchg
xchg
loope
cmp
sbb
xor
cmp
in
cmc
adc
push
cld
and
cmp
aad
xor
fildll
cmp
stc
mov
xlat
in
xchg
xorb
insl
jp
pop
xchg
xor
lds
test
adc
or
push
adc
sti
sti
sub
mov
cmc
jnp
aas
js
outsb
notl
sub
pop
mov
add
movsl
push
mov
outsb
fstps
push
and
jl
mov
lock
cmp
arpl
mov
add
mov
fisttpl
add
pop
cmp
jnp
push
dec
leave
inc
push
insl
cs
lods
lret
sti
sub
fstps
sub
or
cmc
stos
jbe
sbb
inc
xchg
mov
gs
stos
in
leave
out
mov
cwtl
mov
sbb
popa
rcrb
xchg
jecxz
lcall
in
xor
dec
mov
add
fisubl
xor
adc
mov
pop
sub
ret
mov
fadd
xchg
mov
das
movsl
adc
sub
ret
gs
inc
push
sub
and
test
jg
sub
and
out
mov
push
aas
dec
fwait
insl
dec
cld
subl
bound
mov
cmpsb
inc
add
in
dec
repnz
iret
and
pop
imul
jle
pop
adc
mov
mov
shrb
jb
adc
iret
xchg
loope
sarb
mov
sbb
inc
cmp
call
or
sbb
xor
sbb
mov
lods
popf
cli
lret
inc
push
fimull
scas
clc
std
lcall
dec
push
pop
gs
les
iret
data16
rolb
push
push
insl
pop
ret
cmp
sbb
sahf
fs
pop
pusha
xor
dec
push
aaa
test
loopne
adcb
inc
inc
popf
jnp
adc
cmpsl
pusha
iret
arpl
mov
xorb
add
mulb
sub
mov
shrb
cltd
add
jae
test
enter
and
cld
adc
or
shrb
add
xorl
adc
outsb
xor
mov
cmp
leave
jmp
fdivr
xlat
and
xchg
sbb
push
fsubrl
or
xchg
mov
test
iret
cmp
call
stos
in
xorb
xor
cltd
dec
scas
lret
js
adc
stos
aaa
mov
mov
jmp
fsubrl
jno
movsb
repnz
xlat
mov
insb
pop
mov
daa
and
int3
je
jo
out
aas
mov
and
inc
sub
dec
pop
pop
cmpl
or
xorb
int
add
sub
in
pop
fisubrl
inc
mov
cld
cmp
xor
test
inc
xchg
mov
push
pop
nop
add
dec
mov
leave
cmp
cmp
out
mov
push
mov
repnz
sub
out
xchg
hlt
sti
inc
aam
push
pushf
fidivl
jb
mov
shr
fdivrs
xor
pop
inc
adcb
loope
xchg
sbb
leave
pop
adc
sbb
xor
inc
icebp
push
sbb
adc
test
sub
xchg
out
sub
xor
stos
xor
inc
aas
adc
sub
mov
inc
fcmovu
aaa
scas
mov
add
lahf
mov
es
std
movsb
push
test
mov
sti
movl
pop
mov
and
lods
lea
les
adc
int
out
scas
mov
xchg
xor
xlat
mov
icebp
fwait
mov
dec
pop
in
xor
sbbl
inc
notb
dec
or
pop
xcrypt-cfb
cmpsl
movsb
xor
movsb
push
fcmovnu
xor
push
jmp
in
cld
loopne
cmp
sbb
cs
mov
pop
lds
lds
jmp
push
nop
xchg
mov
push
sub
out
and
adc
aam
mov
mov
outsl
inc
cmpb
mov
out
adc
aaa
dec
jmp
cmp
pop
pop
and
dec
shlb
or
addr16
jecxz
sub
sti
cmp
hlt
popf
mov
mov
cmp
pop
sbb
pop
insl
out
add
aad
lds
and
add
fcoms
loop
dec
mov
sarl
add
add
mov
or
idiv
add
or
pop
out
ret
add
add
in
outsl
rorl
mov
sub
cltd
sahf
sub
add
sbb
movsl
mov
jg
xchg
mov
cmp
and
xor
jb
adc
std
mov
dec
xchg
dec
ret
lds
push
divl
outsl
in
add
mov
mov
jns
fsub
hlt
int
lods
sbb
cli
dec
lret
xchg
fistpl
or
aad
mov
sub
ja
adc
sbb
xor
push
and
sbb
mov
pop
notb
aaa
mov
insl
stc
pusha
enter
cmc
dec
dec
mov
outsb
js
cwtl
push
sub
mov
jb
and
ljmp
lcall
jb
subb
pop
xor
mov
or
xor
lds
out
add
pop
lcall
mov
movsb
adc
leave
test
sbb
push
cld
scas
sti
sahf
sub
lahf
inc
mov
mov
aad
add
and
dec
mov
cmpl
jae
jne
fidivrl
fisttps
jle
psrlw
cmp
xchg
push
cmp
decb
pop
inc
add
mov
in
mov
lret
mov
add
dec
mov
repnz
mov
mov
test
cs
pop
pop
ja
imulb
push
lds
roll
divl
pusha
or
cmp
mov
enter
icebp
dec
outsl
es
xor
jmp
adc
mov
sub
mov
sbb
mov
frstor
daa
stc
push
inc
mov
outsl
adc
int
cmp
sbb
test
pop
fwait
and
or
icebp
inc
insb
addr16
and
add
push
enter
test
sub
lcall
movb
mov
negl
scas
pop
adc
sbb
call
and
xor
inc
into
movsb
scas
insb
into
mov
addr16
repz
lock
ret
mov
popf
shll
call
cmc
hlt
jecxz
insb
mov
cmpsb
inc
shld
stos
lods
cmpb
add
test
cmp
out
xchg
pop
ds
push
fnstenv
sub
in
push
cmp
push
into
in
ror
adc
mov
push
scas
rcl
stc
sub
icebp
add
or
dec
fsub
ss
adc
inc
pop
add
and
cmpsb
mov
out
aaa
shr
fwait
stc
push
imul
sub
jne
mov
fnsave
ja
xchg
adcl
testb
scas
add
test
sahf
orl
mov
sbb
inc
cmpb
cmpsb
out
lock
cltd
pop
pop
mov
jo
xchg
imul
and
call
inc
fsubrl
in
push
addr16
adc
cwtl
inc
xor
mov
jecxz
mov
sbbb
mov
ficompl
inc
enter
fcmovnb
add
filds
test
dec
iret
test
outsb
xchg
add
jle
cmp
xchg
cmp
mov
push
dec
xor
or
cmp
dec
arpl
jns
dec
sahf
jb
movsb
pop
out
fisttpl
cmp
pop
cmp
stc
cmp
and
sar
inc
hlt
cmc
xchg
js
inc
mov
and
pushf
cmp
xlat
dec
jnp
cmp
sub
mov
ret
jmp
cmp
in
dec
xlat
inc
in
gs
dec
sti
std
mov
pop
jns
in
out
and
fwait
imul
xorb
aad
mov
xchg
les
mov
push
lds
add
popf
ds
push
in
clc
popf
pusha
movsb
mov
mov
pop
mov
dec
aad
mov
sub
cmp
jae
dec
push
cmp
dec
jne
pop
scas
test
psraw
mov
lret
xlat
jmp
stc
insb
xor
mov
cltd
in
fs
cmp
sbb
push
xor
adc
fldl
push
std
pop
push
in
mov
mov
inc
dec
and
fmulp
repnz
inc
xor
lods
pop
subb
out
inc
mov
mov
fisubs
rdpmc
inc
push
cmpsl
lahf
cmpb
sarb
lret
movsl
push
mov
aaa
xchg
mov
in
sub
push
daa
sub
mov
sbb
jl
and
push
pop
fadds
sahf
mov
icebp
movsl
jg
pop
stc
xor
es
push
jecxz
mov
popw
mov
pop
pop
jns
sbb
pop
and
out
add
pop
in
std
lock
push
mov
or
jg
js
cmc
mov
add
inc
push
repnz
ja
jp
icebp
inc
xchg
sub
sti
pop
int3
mov
ret
int3
fiadds
cwtl
dec
push
insl
sub
and
or
sti
mov
pop
out
xor
cld
mov
dec
leave
mov
aas
hlt
xchg
mov
and
fsubs
fbstp
cmp
out
out
mov
ss
lods
daa
rcrb
mov
xchg
pop
stos
mov
pop
mov
xchg
sub
int3
stos
xchg
lcall
and
ss
xchg
xlat
jle
outsb
stc
push
jns
ss
cld
inc
push
test
insl
sub
gs
mov
inc
addl
lcall
ds
iret
push
xchg
cli
jo
cld
lock
push
push
mov
mov
or
or
insl
shll
in
popa
movsl
add
jle
sbb
push
and
jno
and
jecxz
adc
cmp
mov
push
lock
mov
pop
rcrb
mov
daa
in
sub
pop
fsubrs
jno
mov
inc
test
adc
std
bound
pushf
daa
imul
ds
in
adc
pop
mov
pop
aas
enter
mov
mov
out
shr
add
xlat
jb
inc
jno
inc
popl
xor
xchg
mov
call
push
ja
int
pop
je
scas
js
jns
shlb
xchg
pop
xchg
mov
mov
push
rorb
inc
mov
pop
ljmp
push
pop
pop
xor
cli
cmp
pop
stc
cmp
outsb
movsl
jge
and
mov
movsl
ljmp
in
push
adc
movsl
pushf
push
mov
test
or
sti
clc
shll
cmp
pushf
dec
outsb
dec
ss
sub
fists
push
sub
in
and
mov
sbb
xor
out
inc
xchg
cmp
mov
jecxz
test
sub
inc
mov
fwait
sti
lret
xor
gs
or
or
xor
lcall
mov
mov
jl
pop
xchg
hlt
mov
push
js
ret
iret
jg
jmp
and
sti
sub
push
in
test
jae
mov
fadds
push
xadd
adc
sbb
xor
dec
mov
out
add
mull
xor
mov
pop
push
pop
lods
icebp
repnz
cltd
mov
sub
jne
nop
ret
cmp
daa
les
jl
jmp
adc
dec
dec
and
cmp
daa
int
enter
cmp
daa
test
cmpl
data16
imul
sbb
or
jnp
std
insb
cs
aaa
mov
add
dec
pop
and
maxps
nop
shrb
je
lea
cli
xor
out
sbb
stc
aam
sub
inc
out
cmpsb
xchg
adc
xchg
adc
pop
lock
cli
popf
push
pusha
cmc
or
filds
add
adc
inc
sbb
test
frstor
lret
pop
cltd
push
cmp
repnz
jo
sub
imul
test
sbb
inc
loope
fnstenv
inc
jbe
adc
sbb
inc
mov
and
inc
or
in
cmc
insb
mulb
push
or
jns
adc
icebp
dec
mov
sarl
inc
xchg
dec
xchg
sub
imul
push
pop
or
fldt
cmpsl
fiadds
dec
ds
pusha
cmp
scas
test
mov
xchg
sbb
aas
mov
adc
and
or
cltd
aaa
clc
sbb
xchg
fisubrs
xchg
dec
jnp
stos
aas
dec
xchg
lret
lods
sub
and
sub
enter
jno
adc
mov
ss
dec
cli
jne
mov
loop
mov
mov
inc
push
mov
fists
jg
shll
out
jns
test
dec
and
clc
xchg
xchg
adc
sbb
rcll
cltd
fbstp
jbe
xlat
mov
or
das
fisubl
movb
jmp
jnp
sub
xchg
dec
int
data16
and
adc
testb
mov
rcrl
and
subb
mov
jmp
popa
adc
aaa
or
adcb
push
nop
jno
andb
adcl
fisubl
xchg
mov
or
lea
data16
adc
push
in
sbb
sub
sub
adc
dec
dec
imul
dec
adc
inc
lods
add
mov
ret
mov
imul
repz
rcrl
or
or
out
push
jae
test
inc
pusha
add
jecxz
or
and
push
mov
out
sbb
xor
popa
hlt
inc
orb
out
jb
xchg
xor
lods
or
mov
mov
xor
and
es
fwait
mov
lcall
mov
inc
adc
movsl
sub
and
mov
sub
push
icebp
popf
mov
sbbl
pmaxub
in
clc
lods
xor
pusha
test
mov
and
xchg
enter
divl
xchg
hlt
jmp
sub
adc
lock
add
pop
aas
in
xor
xor
leave
xorb
sub
mov
push
incl
call
repz
les
pop
xchg
cmpsl
add
fisttpll
pinsrw
ljmp
cmp
loopne
add
sub
imul
mov
mov
test
jge
mov
fdivp
and
int
jecxz
movsl
rclb
fiadds
push
push
icebp
mov
jl
pop
aad
xchg
lods
pop
sub
mov
movl
shl
lret
std
mov
xor
pusha
loopne
pop
adc
xor
out
cld
jo
pop
insb
or
rcrb
lods
divl
mov
cwtl
lds
out
scas
sub
xchg
sbb
movsl
scas
call
dec
insl
lods
out
in
aam
sub
pusha
pop
inc
cwtl
aam
dec
imul
in
cmpsb
push
inc
and
fs
push
jbe
pop
or
lret
jo
or
jge
mov
insb
pop
cmp
pop
fwait
aam
ret
mov
divl
or
mov
cwtl
push
loop
and
cmp
push
fidivl
daa
leave
push
stos
mov
or
xchg
movntps
push
mov
xchg
xchg
and
inc
and
popa
sub
pop
and
outsb
repz
clc
shrb
push
mulb
add
rolb
or
cld
sub
mov
sarb
push
sub
add
nop
dec
dec
push
push
insb
dec
add
pop
push
sub
mov
jmp
sub
shrb
ds
ljmp
jnp
test
test
lret
outsl
cmpsl
ds
cld
or
mov
lret
pop
mov
mov
inc
in
scas
data16
int
cltd
and
cmpsb
jle
cld
cltd
lret
inc
jne
pop
mov
fs
mov
inc
xchg
jmp
rcll
inc
push
jg
mov
js
sub
xchg
add
mov
mov
jnp
and
arpl
icebp
sahf
jp
hlt
mov
push
fwait
xor
pop
mov
lods
fidivrl
dec
push
mov
sub
ja
mov
inc
out
mov
mov
sub
rol
mov
jg
jbe
and
lods
divl
ret
fisubs
jo
mov
and
mov
cmp
push
subb
leave
cmc
gs
pop
mov
lods
in
ret
lods
pop
popa
enter
inc
sbb
mov
iret
pop
cwtl
movsb
scas
gs
leave
aaa
or
jno
push
lcall
lds
xchg
popf
add
jb
dec
add
mov
and
push
xor
shrb
clc
xchg
push
sub
or
loop
inc
shll
mov
jbe
jmp
mov
test
jge,pn
jl
pop
mov
inc
mov
notb
jmp
icebp
jb
push
ficoml
adc
cmp
push
inc
fs
das
mov
cmp
sub
fisttpll
jp
xchg
inc
repnz
adcb
pop
aam
enter
mov
pop
add
aam
out
gs
mov
sub
js
push
sti
test
jmp
cmp
xchg
sub
test
push
sbb
lods
mov
or
xlat
notl
fisttpl
xor
or
dec
jae
or
adc
jmp
andb
and
outsl
sbb
int3
lret
xchg
data16
cmc
jb
pop
dec
fsub
adc
stos
pmaddwd
insl
xor
pop
jb
or
pop
push
xor
or
rcrl
ss
ds
testl
jge
in
xor
divb
pushf
mov
push
shl
cmc
stos
adc
push
cwtl
push
pop
xchg
inc
ss
cmp
pop
or
out
lret
push
ja
jo
and
lahf
inc
sub
icebp
jae
loope
fimuls
inc
hlt
mov
test
dec
mov
xor
mov
pop
xchg
loope,pn
add
mov
mov
mov
pop
sbb
ds
or
movl
add
sbb
mov
sub
dec
sub
and
xor
arpl
scas
movsb
mov
shl
imul
fwait
or
push
or
les
sbb
filds
push
das
iret
pop
jnp
or
addb
push
fstpl
adc
or
inc
xchg
ror
dec
sub
out
cld
or
push
shr
nop
sbb
and
in
jg
and
sahf
pop
cmpsb
cli
xchg
mov
push
jne
mov
clc
mov
adc
loopne
dec
add
lret
mov
jae
cmp
nop
mov
jp
sarb
lret
mov
push
test
adc
inc
in
outsl
sbb
xchg
daa
pop
movsb
in
aas
xorl
mov
pop
inc
js
test
mov
push
jg
lea
sbb
push
mov
sbb
loop
lcall
cwtl
outsb
xchg
and
xor
ret
and
jge
jns
lods
rolb
adc
in
sub
cs
subb
out
out
pop
adc
push
mov
fs
pop
sti
out
sahf
pop
out
or
push
xchg
sbb
cmp
pusha
int
icebp
adc
xchg
sar
fstps
mov
movb
mov
or
arpl
inc
push
sarl
sub
ss
call
out
loop
push
js
rorl
push
jle
idivb
sbb
jbe
pop
in
push
ss
ljmp
mov
cli
insb
imul
xchg
imul
mov
scas
mov
inc
sub
push
out
or
repz
add
xchg
push
xchg
loopne
pop
push
adc
insl
inc
sub
jl
jecxz
add
bound
loop
arpl
inc
in
mov
xlat
in
xor
xor
jcxz
pop
fwait
cwtl
aas
movsb
in
cwtl
jae
cmp
pop
test
test
xor
mov
adc
daa
orl
pop
shl
xor
mov
shr
sub
or
leave
sub
jle
pop
loope
divl
xor
cmpsb
lock
jmp
lods
fnstsw
arpl
jne
xchg
out
mov
fisubrs
scas
xor
outsb
xor
or
sbb
mov
mov
hlt
or
push
aad
jle
cmp
psubq
int3
xor
cs
or
dec
sub
cmp
mov
in
push
sbb
loop
into
lret
mov
xor
inc
leave
iret
call
bound
mov
rcrl
test
sahf
xchg
nop
mov
loopne
push
mov
aad
mov
lahf
aas
push
sbb
lock
mull
or
in
outsl
add
cmp
bound
mov
cmp
fisttpll
lods
insb
cmp
fildll
fs
loope
dec
pop
decb
or
cmp
loopne
xor
pop
rolb
add
ret
xor
testl
push
into
mov
xor
add
fwait
xor
jns
mov
sarl
and
rcll
call
push
cmp
cmp
mov
jb
or
push
pop
loope
jl
xchg
js
mov
adc
movsl
or
jbe
insl
rcrb
lds
mov
ret
int3
stos
sahf
cli
lret
ret
dec
cs
inc
inc
les
insl
pusha
cmp
cmp
in
movsl
mov
ret
ljmp
mov
dec
jbe
cmp
cmp
dec
jl
push
or
push
shrl
pop
sbb
pandn
push
fadds
push
fld1
pushf
mov
inc
pop
stos
fidivl
frstor
xchg
aas
jne
and
cmp
push
rcr
ja
cmpsb
cltd
sub
ja
jle
sbb
hlt
sub
in
xchg
pop
outsl
dec
ljmp
pop
add
les
xor
cmp
out
pop
jg
nop
and
out
sub
pop
das
mov
idiv
mov
call
inc
dec
nop
daa
jns
push
and
rolb
pop
outsl
jns
mov
adc
xchg
scas
iret
jg
cltd
jp
les
das
lret
mov
fsubs
lods
rcrl
loop
bnd
adc
shrl
inc
dec
jg
push
mov
xchg
jnp
sbb
in
out
add
int3
mov
jns
insb
lea
pop
test
jge
inc
por
sarb
mov
in
loopne
xor
add
dec
cmp
das
jmp
nop
jg
or
adc
fcmovu
test
sti
insl
push
adc
xor
mov
cmc
shl
or
pop
bound
mov
mov
shrb
jecxz
or
cmp
ds
insb
mov
nop
jne
cmpsb
xor
and
push
sbb
push
xchg
pop
std
jb
pop
xchg
and
leave
jnp
jae
xchg
mov
and
mov
mov
lret
rclb
jmp
push
xor
mov
incb
xchg
add
xlat
nop
push
adc
mov
mov
mov
fs
mov
int3
pop
out
push
jns
les
and
pop
adc
scas
scas
mov
shrb
pop
push
mov
sti
mov
fnstcw
dec
adc
mov
pop
xor
mov
cmp
test
xchg
jecxz,pn
jne
testl
xor
xor
repnz
mov
out
ffree
dec
cmpsb
iret
push
xor
mov
not
adc
lods
mov
popf
jae
xor
jmp
imul
cmpsl
cwtl
add
add
ljmp
sbb
fisttps
movsb
or
add
clc
pop
repnz
nop
jns
lea
push
add
cmc
sbb
shr
cmp
dec
lds
shlb
fildll
aas
sub
cli
outsb
mov
add
movsl
mov
mov
hlt
fucomi
lods
xchg
sub
in
ret
sub
cmp
rcrb
dec
mov
inc
and
call
lock
xchg
insl
jge
jne
jae
loope
mov
inc
jge
imul
icebp
sub
pusha
das
and
xchg
xchg
bound
rcrb
push
stc
data16
icebp
mov
and
fmull
push
rcl
in
lock
cmp
fwait
inc
push
pop
jne
data16
mov
inc
pop
clc
arpl
sarb
add
fwait
adc
hlt
loope
call
xchg
icebp
popl
ret
ret
mov
pop
cmpsl
adc
test
jbe
jne
inc
inc
jp
fstpl
mov
or
imul
xor
fcomi
lret
cmc
in
or
cwtl
into
out
popa
xchg
adc
pusha
and
mov
addr16
or
sbb
xchg
xchg
cmpsb
jnp
inc
ds
add
sbb
das
xchg
and
mov
in
jg
mov
in
pop
xchg
pop
or
jae
sbbb
sub
stos
loopne
jge
sbb
cmp
mov
cmp
out
push
cmc
push
pop
push
inc
fcomp
cmpsb
sbb
and
push
aaa
mov
or
push
lret
in
ss
add
xchg
std
pop
mov
lods
imul
add
cmp
mov
inc
xor
push
push
fstp
push
jecxz
xchg
dec
imul
xor
ja
pop
push
pop
sub
leave
in
movsb
fstpl
mov
sub
loopne
ss
cwtl
sbb
mov
mov
add
sbb
push
stos
pop
mov
or
xchg
sbb
sub
pop
add
xchg
cmpsl
negl
add
add
notb
or
sti
jge
out
lock
mov
cltd
sub
stos
aad
std
cmp
in
lcall
add
ja
push
in
xchg
call
mov
jno
jecxz
stos
call
mov
sbb
imul
data16
aam
stos
pop
dec
pop
rclb
ret
in
ret
push
push
mov
push
subb
in
stc
cltd
movsb
dec
dec
pop
pop
mov
les
push
mov
aam
les
or
mov
mov
int3
ds
not
jg
jb
xor
and
stos
or
jno
pop
movsb
adc
mov
mov
fstpt
or
in
and
ret
adc
push
mov
leave
rcr
imul
aaa
out
xlat
cmpsl
out
or
jbe
sub
pop
jbe
push
das
jl
mov
fidivl
pop
add
add
adc
xor
lea
inc
xchg
and
adcl
push
push
mov
stos
xchg
xor
mov
cli
cmp
enter
insl
pop
add
jae
push
and
sahf
pop
test
sub
xchg
add
pushf
mov
and
cmp
push
das
shll
inc
push
sahf
adc
or
icebp
mov
mov
mov
adc
out
sysret
mov
mov
xor
stc
int
cmp
stos
stos
mov
rolb
outsl
and
xchg
test
or
pop
pusha
push
mov
pop
outsb
into
in
lea
in
mov
jb
adc
mov
xchg
cs
in
sub
pop
xchg
mov
jl
ffree
or
pop
push
mov
ret
int
data16
mov
mov
rcr
ljmp
xchg
jno
addr16
add
xor
xor
sub
jge
lds
outsl
fldcw
inc
push
scas
and
cmp
sub
pop
ljmp
inc
sarl
pop
jns
xor
mov
inc
aam
xchg
sbb
out
xchg
cmp
mov
push
call
repnz
adc
in
and
call
mov
jmp
adc
sbb
push
gs
adc
std
jl
xchg
inc
fildll
icebp
xchg
mov
push
lret
jmp
sub
cmpb
sahf
mov
movsl
mov
shlb
into
in
mov
icebp
mov
mov
jb
int3
mov
and
adc
adc
adc
mov
iret
jge
dec
inc
out
call
hlt
sbb
loopne
sub
ret
pop
scas
out
xchg
dec
cli
xchg
mov
and
les
aaa
sub
mov
dec
adc
mov
cs
pusha
adc
loopne
dec
jno
jbe
lods
aam
psubw
pusha
cmpsb
sahf
testl
sub
push
sti
dec
and
nop
scas
cmp
sub
push
cld
cltd
mov
imul
inc
xchg
push
push
dec
jae
ljmp
decl
fsub
push
xor
mov
fidivrs
inc
out
test
stc
sbb
out
adc
pop
sti
cmpsl
lret
lahf
popf
jns
roll
das
int3
insl
ljmp
inc
push
push
xchg
push
in
push
xchg
int
movsl
gs
daa
xor
add
push
addr16
or
cli
and
imul
ret
cwtl
add
xchg
and
or
sub
cmp
andb
jmp
sub
lods
sub
jg
addl
fisttpl
rcrb
jae
cmp
dec
sub
out
jb
sub
jmp
je
dec
adc
add
mov
adc
xchg
pop
hlt
arpl
push
outsb
xchg
andl
andl
loop
mov
cmpsl
xor
lods
ljmp
push
cmp
or
stc
jbe
pop
jnp
repz
scas
jmp
fnstcw
and
in
jp
inc
sbb
push
pop
pop
pop
subl
xor
orl
sbb
xor
dec
xor
sub
inc
test
dec
test
xor
adc
mov
mov
xor
rolb
sub
jecxz
or
jns
aad
dec
ja
ret
mov
adc
mov
sarl
out
xchg
sbb
stc
sub
test
sbb
leave
and
xchg
out
ljmp
xchg
aaa
mov
jno
xor
pop
scas
repnz
sbb
or
test
fstpt
cs
sub
fisubl
xchg
stos
cmpsl
andl
mov
ret
cmp
mov
daa
or
sub
filds
add
push
lods
std
cmp
pop
loop
and
mov
out
and
aad
adc
jnp
sub
jmp
mov
jmp
pop
call
mov
nop
push
movsl
dec
aad
das
out
leave
shlb
adc
adc
push
subb
fsubrl
push
dec
incl
daa
adc
sarb
push
jp,pt
xor
jne
jle
insb
or
popa
sbbb
mov
lret
sub
xor
loop
pusha
or
hlt
pop
pop
pop
pop
aam
mov
out
cwtl
lock
into
push
add
aam
scas
mov
subb
pop
pop
dec
or
add
lret
cmp
pop
lods
cmp
push
mov
push
shl
add
pop
sbb
icebp
lods
data16
sbb
bnd
into
xor
sti
repnz
cmc
shlb
mov
add
out
sub
subb
pop
push
sub
mov
out
popa
mov
jnp
sti
je
popf
out
xlat
push
mov
sub
adc
faddp
clc
add
out
addr16
das
inc
lea
cld
fnsave
outsb
jno
lds
sbb
popf
fstl
mov
stos
inc
popf
decl
daa
cmc
xchg
xor
daa
repz
lock
xor
insb
jge
rcr
rcll
xchg
add
or
inc
ret
sbb
lds
out
xor
mov
mov
repz
adc
rcl
xchg
ret
lods
or
cmp
mov
movsl
push
fcoml
dec
in
xorb
mov
test
xlat
sbb
in
fcoms
push
inc
mov
je
sbb
leave
fcomps
mov
jecxz
adc
es
pusha
add
sub
test
mov
lock
dec
cmp
ljmp
clc
fnstenv
pushf
xor
daa
inc
push
adc
mov
jl
mov
cli
dec
lret
push
mov
sar
les
pop
cwtl
stos
ret
int3
inc
dec
mov
adc
push
and
inc
jb
test
out
test
pop
fstpl
mov
inc
xchg
mov
sbb
push
add
pushf
int3
and
jb
into
cmp
xchg
pop
push
movsb
mov
stos
mov
sub
lret
mov
pop
mov
mov
pop
imul
push
pop
popf
xchg
xchg
add
daa
sub
mov
adc
scas
or
int
mov
aaa
pop
out
mov
xor
pop
xchg
les
in
push
adc
sbb
inc
imul
sbb
jmp
lahf
nop
add
pop
mov
pop
dec
hlt
and
cmp
dec
push
sahf
ljmp
and
dec
mov
xor
mov
inc
ds
sbb
ss
and
mov
push
mov
cli
sub
stos
out
cmp
dec
jge
adc
xchg
hlt
xchg
stc
pop
jmp
dec
es
mov
add
fs
fcmovne
mov
sub
mov
jne
shll
je
lods
xchg
adc
xchg
jae
push
pop
sub
fistpl
ss
test
pop
pop
stos
pop
int
cmpsb
fucom
mov
mov
pop
mov
lods
or
or
mov
and
ja
cmp
mov
xchg
fmulp
pop
dec
lea
adc
movsb
cld
inc
cmp
jg
inc
cmp
aad
into
dec
scas
mov
push
or
pop
push
cld
add
aad
ret
xor
out
leave
adc
mov
ss
sub
xor
mov
lea
mov
push
jmp
pop
in
pusha
pop
aas
push
jge
leave
sub
add
pop
cmp
ds
xor
in
ja
jno
repnz
lret
lock
xor
outsb
inc
push
and
pop
inc
xlat
movsb
jge,pt
mov
loopne
mov
stos
pop
inc
xchg
imul
adc
jg
imul
mov
cmp
adc
adc
js
stc
incb
ret
jns
test
jle
int3
loope
inc
jae
mov
xor
sub
push
jle
sub
aad
push
std
mov
loope
sub
push
mov
aaa
mov
push
scas
int
mov
xor
mov
pop
dec
bound
dec
in
or
mov
fimull
lea
arpl
or
jl
pop
movsl
xchg
lock
sarl
popf
push
out
dec
aam
xchg
and
dec
cmp
ret
mov
aas
sub
push
ss
jecxz
sub
jnp
test
jle
enter
movsb
rcrl
pop
out
mov
jae
xor
xlat
pop
sti
dec
std
lret
mov
lods
xchg
pop
pop
rcrb
push
cltd
or
and
xchg
int
pop
pop
jmp
jecxz
test
xchg
bound
sbb
cmpsb
repnz
bound
jnp
call
push
outsl
fistpl
lock
in
xor
insl
adc
adcb
cmc
xchg
dec
inc
push
pusha
add
cmpsb
loope
adc
repz
jae
dec
lock
sub
add
mov
sub
adc
add
fwait
xchg
in
inc
xchg
rcl
in
fisubl
mov
inc
movsb
imul
jmp
clc
pusha
and
push
and
rorb
stos
cli
inc
sub
xchg
std
dec
outsl
test
xchg
movsb
ss
lea
mov
fldenv
pop
or
mov
dec
out
mov
xchg
cmp
loopne
xchg
cmp
pusha
imul
mov
sahf
jae
adc
int3
jo
decl
lods
or
pop
mov
lods
and
dec
int
je
mov
and
inc
jge
xor
mov
jg
fsubl
or
push
call
std
pushf
leave
sub
les
test
fstps
xchg
cmc
das
mov
and
jns
arpl
ficoml
sub
out
das
mov
adc
clc
outsl
pop
add
out
pop
xchg
out
popa
test
pop
ss
pop
dec
out
hlt
pop
or
fmull
mov
jle
push
mov
jmp
cwtl
mov
lret
cltd
rcr
cmp
ret
test
mov
and
les
jge
mov
rcrl
sub
pusha
fcoms
jmp
push
sub
enter
mov
fsubs
sub
inc
adc
mov
pop
iret
xchg
adc
xlat
cmpsl
insb
mov
ja
test
xor
fs
sbb
stc
mov
movsb
add
shrb
cmp
dec
push
in
enter
lods
cmp
nop
sub
cmp
mov
push
or
icebp
and
pop
add
mov
stos
decl
xor
sahf
xchg
cltd
sub
nop
pop
and
jecxz
cmpsl
mov
push
popa
jo
clc
adc
lret
loop
call
jno
cmpsl
fwait
ret
pop
jb
js
xor
shr
mov
inc
jle
adc
push
imul
xchg
push
xor
ljmp
loop
xchg
cwtl
mov
mov
push
or
scas
cmc
and
xchg
mov
adc
add
lcall
sub
mov
jecxz
mov
inc
stos
pop
pop
xor
jge
pop
pushf
xchg
xor
js
xchg
orl
je
jecxz
bnd
xor
ret
ja
cmp
imul
jno,pn
mov
test
mov
xchg
xchg
sub
lds
lcall
push
jns
outsl
dec
adc
mov
jbe
sub
add
test
xchg
pop
mov
pop
push
inc
data16
mov
ss
and
xchg
int3
adc
jae
jl
adc
enter
mov
push
mov
jp
call
and
inc
dec
mov
cmp
bsr
out
rcll
cwtl
cmp
adc
adc
mov
xchg
mov
adc
mov
mov
mov
sub
xor
jecxz
and
cmp
sub
les
xchg
and
mov
or
xchg
and
insl
aam
push
cs
push
sbb
add
and
testb
adc
addr16
jo
cli
mov
mov
cmc
fwait
cmp
cmp
mov
arpl
jle
les
xor
in
outsl
in
icebp
cmp
push
mov
cld
xor
push
pop
push
push
or
stc
mov
pusha
leave
or
mov
dec
ret
push
lcall
out
dec
nop
push
jo
sub
add
pop
jbe
add
mov
addr16
rorb
xchg
mov
adc
jle
and
adc
aad
mov
pop
ds
inc
mov
push
pop
in
adc
adc
fsubs
lret
cs
adc
int3
jge
hlt
xchg
lds
pusha
jp
gs
scas
les
das
rcll
add
repz
mov
sbb
xor
pop
arpl
scas
in
in
out
xchg
xor
into
rol
inc
xchg
xor
cs
mov
pop
icebp
push
xor
adc
mov
push
loopne
int3
mov
adc
inc
sub
aad
xor
sub
int3
add
mov
dec
xor
push
insl
stos
xchg
int
mov
lcall
ret
sarl
fdivs
mov
sbb
xchg
sbb
pop
mov
dec
aaa
mov
xor
frstor
scas
xor
jle
mov
sbb
or
cs
out
jnp
jp
sbb
call
mov
jecxz
or
movsl
fsubrl
mov
scas
scas
push
push
cmp
mov
hlt
scas
ss
jnp
xor
xor
inc
fcomps
xchg
dec
rorb
xchg
xlat
or
xchg
insb
sub
sbbb
adc
cmp
mov
xchg
mov
dec
and
lcall
stos
arpl
into
rclb
pop
idivb
jl
xor
mov
sub
in
xchg
cmp
or
dec
rcrl
pop
cld
pop
xorl
stos
test
adc
inc
adc
or
das
lcall
inc
xchg
dec
loope
in
insl
push
or
mov
xor
andb
push
mov
adc
xlat
mov
xchg
out
negb
mov
fwait
or
inc
test
fs
jnp
arpl
add
insl
dec
pop
xchg
push
dec
mov
subb
add
mov
hlt
dec
cmpl
mov
cli
ljmp
stos
loope
sub
ds
xchg
push
ret
mov
mov
sub
push
jns
repnz
jno
pop
out
sbb
fistpl
or
inc
aam
arpl
add
pop
and
imul
imul
sbb
fcmovnbe
repz
push
or
lret
sub
mov
sbb
xor
rcr
sti
cmp
pop
pop
into
cmp
scas
and
pop
imul
xor
pushf
mov
mov
clc
xchg
arpl
mov
lret
shlb
loop
jbe
testb
add
or
test
mov
fmull
dec
mov
xor
xchg
push
in
xor
fcoml
cmc
xchg
es
imul
pop
mov
add
add
test
cmc
sbb
pop
xor
enter
mov
mov
aad
fistps
push
sub
loop
jg
daa
jp
mov
mov
mov
movsb
mov
jmp
bnd
jo
sub
mov
inc
mov
rcrb
adc
add
and
dec
dec
stc
mov
je
cmpsl
dec
fcmovnu
mov
dec
sub
pop
mov
shrb
inc
fcoms
cmp
mov
lods
imul
mov
fnstsw
int
and
enter
inc
pop
test
cs
add
ja
push
mov
fldl
stos
cld
and
jnp
push
mov
xor
xchg
negb
pmulhw
sahf
xchg
adc
mov
sahf
aad
cmp
xlat
imul
andb
ret
and
xor
mov
dec
jns
test
cld
and
add
sbb
imul
sbb
pusha
and
aaa
fistpl
arpl
aas
push
sub
movsl
sbb
xchg
jecxz
addb
adc
lods
dec
jmp
inc
pop
sti
fstpt
and
stc
enter
xchg
repnz
insl
mov
push
gs
das
pop
xchg
jl
int
pop
ficoml
popf
adc
jno
mov
repz
or
dec
cltd
mov
mov
sub
mov
pushl
clc
leave
data16
push
mov
pop
repnz
sbb
mov
cli
push
sub
jbe
popa
mov
mov
fadds
popa
push
xor
jp
sarb
dec
ds
stos
jmp
push
loop
mov
sbb
inc
sbb
pop
out
jns
and
inc
sub
daa
mov
mov
inc
out
sub
or
mov
and
ret
lret
bnd
pushf
mov
sub
fcom
in
jg
bound
cmp
add
and
pop
fiaddl
cmp
sub
aas
icebp
decl
cs
movsb
and
mov
ss
popa
sbb
fcmovnbe
and
xchg
push
pop
sbb
ljmp
mov
xor
lock
loopne
push
push
adc
shrl
push
inc
rcrb
scas
push
jle
cmp
mov
popf
mov
daa
fstpl
pop
in
or
in
cld
ss
ret
stc
cmp
push
pop
movsl
mov
dec
lret
addb
pushf
or
dec
mov
mov
ficomps
sbb
mov
ljmp
outsb
push
jo
xor
pop
scas
icebp
cs
rcl
pop
sahf
mov
inc
mov
sub
or
fldl
je,pt
pop
cwtl
xchg
sbb
leave
and
push
sti
cmp
popa
mov
out
xchg
xor
push
fmuls
movsb
jne
pop
popf
loope
outsl
mov
ja
int3
adc
movsl
es
lahf
pop
push
fsubp
sub
mov
and
push
mov
xchg
dec
pushl
mov
js
movsb
xor
outsb
mov
ljmp
mov
mov
subb
and
or
adcb
je
call
inc
inc
pushf
sahf
cmp
mov
in
aas
flds
fbld
test
cmc
or
dec
inc
std
push
sbb
ret
add
cmp
mov
mov
sub
dec
roll
sbb
cli
dec
sbbb
out
outsl
xchg
in
je
jl
mov
push
xor
xor
adcb
and
xor
xchg
jae
and
mov
cmp
gs
cwtl
add
mov
clc
std
pushf
xchg
loopne
fistpl
xchg
imul
cld
cmp
nop
and
movsl
ficomps
rorl
movsl
pop
xor
rorl
lahf
dec
or
sbb
inc
mov
into
mov
pop
inc
bound
insb
loope
xchg
fcom
orl
jecxz
int
or
outsl
mov
test
ljmp
in
dec
out
cmp
mov
mov
sti
mov
xchg
inc
mov
imul
fs
push
mov
scas
rorb
jbe
ds
andl
test
push
inc
mov
idivl
pop
jl
out
push
xchg
insl
add
ret
out
lods
repz
inc
outsb
mov
in
xchg
adc
lret
fsubrl
pop
int
cmp
pop
gs
sbb
xor
push
xchg
xchg
adc
lods
fisubrl
jp
int
mov
sbb
fimuls
pusha
popf
scas
mov
pop
push
mov
cwtl
push
jge
dec
popf
sub
dec
dec
adc
das
sbb
jecxz
mov
jno
sbb
or
fidivrl
outsb
int3
ja
push
dec
inc
xchg
jb
mov
cmp
push
sub
dec
push
stc
insb
test
xchg
iret
ficompl
xor
add
adc
out
rol
or
fimull
inc
adc
les
daa
js
sbb
es
rorl
and
in
lcall
add
push
inc
pop
pop
arpl
adc
rcrl
into
push
rcrl
adc
add
adc
test
fcmovu
ss
inc
adc
mov
addr16
sbb
jmp
lods
sub
divl
jne
xor
mov
inc
aam
das
dec
lods
mov
sbb
decl
pop
pushf
add
outsl
leave
popa
imul
jo
imul
imul
inc
je
push
mov
xor
dec
movsl
add
aam
mov
call
mov
shlb
mov
push
fwait
push
xor
fwait
xor
cmp
in
mov
sti
inc
imul
repnz
sub
inc
jnp
test
subb
mov
in
rorl
hlt
lcall
jnp
out
and
fucom
lea
cld
add
out
addr16
mov
pmaxsw
jnp
pop
aad
xchg
lods
xor
dec
dec
cmpsb
insl
dec
mov
jge
cmp
xchg
popa
mov
int
dec
loopne
stc
imul
inc
jp
jae
iret
movsb
and
imul
dec
push
pop
shll
jmp
push
push
insb
lock
in
pop
sub
mov
mov
stc
adc
and
in
sub
push
adc
pop
pop
or
stos
sbbl
scas
adc
js
cmpsl
cltd
xchg
or
cltd
or
shl
out
rcl
lock
adc
pop
out
jecxz
or
ja
test
in
push
sub
loop
hlt
mov
mov
scas
js
or
lret
jge
push
lret
aad
out
out
mov
push
into
daa
jl
jne
cmpl
loope
ds
push
ror
xchg
jo
stc
pop
pop
adc
andb
cmp
stc
cld
cmpsb
pop
add
stc
mov
dec
into
icebp
cld
into
xor
or
pop
mov
or
jecxz
pop
loop
jb
addr16
aaa
out
jl
jae
pop
xor
lock
pop
fmuls
push
insl
push
inc
mov
inc
pop
add
mov
aaa
bound
mov
cmp
and
pusha
or
jb
sbb
adc
out
repnz
mov
cmpsb
loopne
xchg
pop
dec
insl
mov
mov
push
jnp
loope
add
mov
inc
adc
sbb
icebp
add
sbbb
mov
push
mov
dec
loope
mov
add
ret
xor
imul
popf
stos
cmp
ss
int
jnp
inc
xchg
cld
cmpl
ljmp
add
test
and
aas
movsb
adc
sbb
pusha
rcll
shlb
mov
xor
std
dec
xchg
xchg
mov
imulb
enter
pop
dec
arpl
sub
rcl
aaa
mov
xor
push
jns
mov
mov
test
inc
rcrb
push
dec
pop
stos
mov
ret
xchg
imul
push
xor
and
cmc
add
aad
push
dec
add
mov
pop
sub
add
daa
mov
sbb
arpl
int
mulb
push
xchg
sbb
in
out
fistps
mov
in
and
divl
xchg
jmp
add
jno
outsl
por
mov
mov
jae
daa
push
adc
arpl
fdivrl
out
jne
test
mov
xor
fdivl
xchg
je
outsl
cmp
test
lcall
xor
mov
jb
negb
push
inc
mov
xor
dec
in
rcrl
jb
xor
cmp
add
fdivrl
lds
xor
arpl
fisubl
and
cli
sub
add
xchg
in
xor
daa
push
decl
push
leave
aam
fsts
dec
xor
cmp
jge
jl
mov
sub
adc
fists
fs
mov
cmp
pop
sbb
mov
adc
aaa
sub
ja
mov
lods
sub
sub
sbb
mov
push
imul
scas
or
jmp
add
push
in
clc
mov
jns
cwtl
mov
fcmove
add
mov
pop
int3
movsl
inc
sbb
xchg
cwtl
test
jl
and
xchg
sbb
scas
mov
lahf
adc
in
mov
mov
sub
cmc
testb
mov
imul
cwtl
pop
inc
je
test
add
push
test
pop
mov
test
aas
push
enter
clc
das
xchg
mov
push
outsb
cmpsb
xchg
or
push
nop
add
mov
stos
push
aaa
fs
lea
das
dec
dec
lahf
into
stos
pop
fisttpll
mov
clc
sub
mov
aaa
push
pop
push
lret
and
inc
push
test
sbb
cmp
in
jno
sti
xchg
and
xchg
dec
shrb
jmp
mov
frstor
subl
lds
ret
gs
ss
or
push
dec
cs
dec
cltd
sub
sub
dec
sub
mov
xor
inc
jno
ljmp
clc
xor
mov
sbb
push
nop
pop
pop
and
xchg
mov
cltd
subb
stos
and
jmp
push
push
iret
fistps
mov
or
test
pop
push
fs
fs
dec
leave
out
cltd
inc
xor
aad
cltd
pop
lods
mov
mov
inc
add
jmp
pop
call
roll
cmp
sarl
cld
pop
push
aam
stos
mov
dec
cmc
pushf
mov
out
push
call
xor
cmc
inc
mov
lret
stc
or
ret
inc
xchg
js
and
loope
clc
incl
arpl
les
repnz
outsl
sbb
add
dec
call
push
push
jmp
loope
outsb
fimull
mov
sahf
outsb
int
or
fstpt
inc
lret
repnz
or
xlat
cmp
cwtl
mov
or
push
xchg
xor
mov
or
cmp
dec
mov
cltd
rcrl
mulb
jp
mov
jnp
sub
lock
and
inc
jge
mov
jo
repz
mov
popa
mov
add
xor
cmpsb
dec
xchg
push
clc
call
inc
aas
in
dec
push
pop
xor
sbb
cwtl
scas
push
mov
and
or
or
gs
cmp
push
sbb
stos
dec
mov
jo
and
loope
out
or
push
jp
pop
add
lods
movsb
popf
dec
test
test
popw
call
aas
cmp
andb
xchg
lret
in
cmp
scas
test
cld
pop
loop
mov
add
ret
cmp
xchg
sahf
pushf
loopne
aas
loope
sub
leave
jmp
aas
add
sbb
gs
cs
sbb
dec
mov
fwait
cmpsl
adc
sbb
icebp
mov
xor
push
orb
call
xor
cmp
adc
ja
sbb
add
fistpll
fdivrl
mov
mov
mov
arpl
orl
mov
and
lock
dec
jp
pop
idivb
cltd
ficoml
cwtl
roll
leave
fwait
jo
or
mov
sbb
xor
scas
movsb
jge
pop
mov
mov
shrb
out
mov
jl
jl
fimull
insl
roll
dec
adc
clc
inc
dec
xchg
dec
ja
or
or
insb
cld
xlat
and
pop
popa
xor
out
and
jb
sbb
adcl
sti
daa
stos
leave
lret
aas
jge
decl
psadbw
inc
cmp
mov
shrb
push
cmp
lret
loope
push
popf
jns
bound
sbb
fiaddl
mov
in
sub
in
mov
lods
add
xor
sub
add
jno
mov
mov
aas
dec
jmp
lret
jmp
mov
inc
jne
jno
xchg
mov
or
ljmp
pop
mov
pop
jbe
hlt
ja
imul
mov
subl
and
mov
jge
jnp
add
aad
push
xchg
xlat
jle
bound
js,pt
xor
dec
stos
and
pop
leave
ss
sub
mov
dec
dec
sub
mov
xchg
sarb
rcl
out
or
or
add
mov
pushaw
mov
shr
push
cmpsb
insb
push
sbb
movsb
pushf
dec
iret
daa
mov
mov
subb
repnz
arpl
bound
stc
pop
mov
adc
sarb
cltd
dec
mov
xchg
into
and
aaa
jmp
lea
adc
int3
mov
push
das
push
dec
mov
and
and
mov
bound
test
insl
ret
pop
fcoml
sbb
orb
andb
push
xlat
jecxz
jmp
xchg
and
and
outsl
pop
cld
pop
outsl
imull
mov
push
adc
jb
push
inc
fwait
inc
xchg
je
lcall
dec
mov
add
enter
jmp
xchg
xlat
cmc
push
inc
xchg
pop
push
push
fnsave
sbb
sti
add
sbbb
dec
jmp
call
mov
jg
sbb
outsb
and
and
das
dec
and
pop
dec
aaa
sbb
push
inc
aam
mov
addr16
mov
jno
hlt
loop
faddl
testl
jno
insl
cld
add
testl
xor
jno
xor
cs
call
add
and
pushf
dec
sub
or
cltd
in
out
popa
in
and
js
pop
push
push
or
hlt
scas
jecxz
add
imul
push
mov
outsb
adc
bound
xor
adc
dec
dec
push
clc
mov
push
inc
mov
gs
xor
daa
add
pushf
pop
int
loope
cltd
je
test
mov
fwait
dec
cmp
aam
pop
mov
mov
adc
cmp
jle
pop
or
mov
push
bound
jecxz
pop
imul
test
adc
scas
mov
add
inc
je
or
out
sbb
xor
mov
mov
js
arpl
cmp
push
out
cltd
adc
out
fstl
fisttpll
pop
xchg
cmp
imul
jno
xchg
mov
dec
jbe
ss
and
add
inc
popa
imul
jns
inc
adc
mov
call
dec
cli
in
xchg
or
add
mov
jnp
leave
and
xchg
cltd
jns
sub
scas
add
xor
inc
inc
adc
mov
enter
mov
jnp
and
sbb
push
mov
cmp
das
cltd
ja
mov
jp
daa
or
pushl
adcb
xor
mov
and
mov
in
adc
sbb
fcoml
fldcw
or
fbld
pop
imul
inc
wrmsr
lock
jle
mov
sbb
enter
cld
fdivl
dec
add
adc
push
dec
mov
out
icebp
sbb
push
fisttpll
lret
pop
cmp
xor
inc
sahf
jae
call
or
mov
iret
test
mov
bound
adc
pop
iret
in
inc
movsl
sub
xorb
cwtl
popa
jmp
outsl
popf
mov
lcall
sbb
mov
mov
cmovg
cmpsl
sub
loop
lods
cmc
das
mov
lea
shll
imul
shll
adc
sahf
push
pop
cmc
aad
xor
inc
pop
cmpsl
adc
pop
jp
and
sbb
repnz
xchg
xor
mov
mov
mov
add
sti
lock
and
add
out
xor
leave
mov
xor
or
sar
iret
mov
shr
inc
cs
mov
sbb
icebp
sub
pop
dec
out
lret
mov
fistl
or
dec
in
ljmp
inc
push
sbb
mov
and
cmp
cmpsl
fcmovnb
inc
sub
cmp
pop
orb
mov
lds
sbb
gs
mov
in
mov
adc
ss
pop
cli
dec
loope
mov
mov
call
sbb
dec
cltd
inc
or
stos
lods
stos
inc
add
loope
adc
rol
xchg
and
pop
pushf
jp
add
mov
and
push
dec
jno
pushl
and
mov
or
in
ds
add
xor
cltd
into
push
cli
fsub
clc
mov
add
stc
pop
scas
hlt
or
out
cmp
icebp
jae
loopne
pop
xorl
mov
and
inc
fmuls
into
jno
fisttps
push
mov
loopne
push
sbb
cmp
into
fadd
mov
les
mov
cwtl
inc
jnp
sub
sub
xor
out
sbb
dec
lahf
cmp
push
push
mov
push
into
mov
or
or
cmp
arpl
pop
lret
mov
sub
aad
stos
lcall
pop
je
add
popa
call
jns
fsubl
imul
push
xchg
xor
lds
loopne
pop
push
pop
lds
movsl
adc
pushf
jle
mov
adc
mov
movsl
xor
data16
xchg
pop
dec
inc
pmaxsw
adc
into
imul
jle
sti
pop
sub
fadd
cmp
cwtl
sbb
push
or
movsl
lds
icebp
cmp
add
or
imul
dec
jns
in
inc
pushf
enter
js
aad
mov
lds
pop
dec
shll
push
ja
jle
fdivrl
fmuls
or
and
jge
cld
inc
pop
addb
repz
jmp
enter
mov
mov
cltd
loop
call
stos
jp
push
sti
add
dec
pop
mov
add
mov
mov
jg
divps
inc
ret
xor
vpminsw
sub
push
mov
or
ds
not
and
imulb
nop
mov
mov
lcall
decb
push
push
inc
movsl
mov
pop
movsl
hlt
and
lret
aam
cmp
xchg
xor
shrb
and
in
loope
add
xor
push
aas
push
push
mov
push
cmp
lock
jno
adc
and
xor
mov
dec
or
fdivrl
ja
mov
xchg
cltd
ja
cmp
loop
and
cwtl
les
nop
cmp
mov
sub
je
clc
pop
xor
outsb
dec
adc
xor
sarb
aas
xor
outsb
jb
and
fsubrl
hlt
movsb
sti
arpl
hlt
mov
sbb
pop
cmp
iret
add
add
testb
orl
push
fldt
inc
imul
add
push
inc
sub
hlt
es
cli
or
ja
push
icebp
adc
out
fwait
sub
sub
test
fmul
lea
xorb
js
fwait
out
pop
add
je
adc
sub
push
and
movsb
ss
in
or
pop
mov
jns
lcall
int3
int
adc
dec
adcl
mov
ret
loopne
pop
out
jle
xchg
fstpt
in
iret
rorl
cmp
adcb
sti
loop
sahf
mov
aas
xchg
xor
std
adc
data16
dec
lods
xchg
fbstp
lret
xor
sub
mov
aam
sub
xor
xchg
stc
jmp
sbb
shrb
stc
or
sbb
sbb
push
insb
add
out
mulb
mov
add
lods
sahf
xor
adc
jp
repz
test
add
cmpsb
inc
ss
xor
pop
mov
cmc
push
pop
cs
sub
inc
mov
and
mov
cmp
xchg
adc
and
jge
cli
and
sub
sahf
add
xchg
leave
in
dec
jl
orl
pop
xchg
jns
mov
mov
adc
bound
or
pop
mov
push
stos
adc
out
mov
pop
scas
dec
xor
xor
jmp
aas
ret
fdivrs
inc
cmc
or
xchg
addr16
xor
out
lods
lods
add
xchg
pop
push
rclb
pop
cwtl
sbb
xchg
xlat
mov
mov
cmc
icebp
pop
test
cld
gs
pop
into
pop
mov
into
adc
dec
dec
dec
pop
idiv
fcoms
shr
mov
cld
pop
js
mov
cmc
fs
jae
mov
js
push
add
xstore-rng
cmpsl
addb
rcrb
insb
test
stos
cmp
fidivl
mov
call
addr16
fdivrp
sub
mov
fdivrs
lods
adc
adc
sarl
outsb
mov
cltd
jmp
adc
xor
or
movsl
inc
mov
scas
imul
dec
lods
mov
adc
and
shll
and
push
sarl
popa
orl
adc
repz
js
subl
int
pop
lods
push
jg
scas
dec
xchg
mov
xchg
aas
adc
push
pop
rclb
insl
push
ss
shrl
es
xor
sbb
cmc
xchg
inc
addl
pop
xchg
or
mov
das
sahf
xlat
hlt
jl
cmp
mov
arpl
stc
adc
aaa
sub
out
pop
jg
and
out
pop
andl
or
testl
push
xchg
sub
xchg
setne
rcrb
mov
pop
xchg
xor
and
mov
jno
movsb
test
fildl
out
jp
jno
popf
inc
ror
add
jp
adc
and
imull
lahf
aaa
or
inc
cltd
test
jg
adc
cltd
and
fucomip
test
or
fcmovne
jecxz
mov
mov
jo
xlat
mull
cmp
pop
pop
cltd
nop
adc
push
cmp
lret
ds
out
sub
push
aas
mov
pushw
mov
cmp
daa
pop
xchg
in
xchg
test
in
fwait
test
mov
adc
je
fldl
fadd
ret
mov
pop
jns
push
cs
ret
pop
mov
test
inc
fisubrl
mov
sahf
iret
arpl
or
ss
mov
cwtl
fmul
mov
in
xchg
aad
shll
leave
xor
roll
sub
xor
outsb
shlb
rolb
mov
loope
push
fcomip
inc
rcll
cltd
lret
add
mov
insb
mov
lds
sbb
push
pushl
int3
push
dec
xor
es
adcb
cld
ljmp
sti
pop
push
jecxz
cs
lahf
sbb
negl
pop
inc
xlat
hlt
cwtl
cld
in
stc
pop
dec
mov
mov
stos
repnz
loopne
sahf
xor
mov
dec
les
movl
dec
mov
inc
xor
adc
popa
pop
dec
cmp
jmp
sbb
jmp
neg
lea
fisubs
cmp
add
fsubrl
lcall
cmpsl
pop
stos
shrb
dec
xor
mov
add
add
mov
dec
jp
adc
loop
iret
cmp
add
pushf
xchg
add
movsl
inc
mov
xorb
das
xchg
dec
sub
lock
mov
loop
outsl
mov
mov
adc
sub
rorb
repz
es
sub
int
inc
sar
imul
mov
das
cld
xor
xor
hlt
sbbl
jns
add
pop
jg
int
push
jns
out
scas
loopne
jmp
ds
decl
cld
sbb
cli
testb
fwait
std
sbb
in
mov
out
out
or
aam
and
hlt
adc
and
je
cmp
adc
dec
data16
mov
in
sub
pop
es
dec
div
addr16
negl
pop
mov
loopne
mov
nop
iret
cs
ljmp
jns
sbbl
stos
lahf
and
jns
mov
cmpsb
cltd
push
out
mov
dec
pop
les
sub
push
dec
push
loop
testl
xlat
inc
jp
ss
add
inc
ficompl
dec
loopne
jge
and
xor
mov
jp
lock
add
je
dec
test
jp
mov
inc
rorb
fwait
out
jae
push
adc
mov
