mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
insb
or
add
je
mov
mov
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
sbb
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
push
xlat
inc
add
lea
mov
clc
faddl
lea
sbb
pop
and
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
adc
add
mov
mov
push
push
call
test
js
lea
lea
pop
hlt
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
add
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
or
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
icebp
inc
add
mov
lea
cmp
faddl
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
add
inc
and
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
jl
inc
add
or
push
add
inc
and
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
clc
inc
add
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
push
inc
add
addb
in
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
or
add
add
addl
test
jle
mov
mov
add
adcl
mov
push
call
add
test
js
test
jle
mov
push
call
mov
pop
pop
pop
pop
add
ret
jge
call
cmp
jne
push
call
add
pop
pop
pop
mov
pop
add
ret
cmpl
je
push
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
je
pushl
mov
pushl
call
cmpb
je
push
mov
call
push
push
lea
call
pop
call
pop
ret
push
call
jmp
call
jmp
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
pushl
mov
xor
push
mov
call
test
jne
mov
mov
call
test
jne
lea
call
pop
ret
xor
inc
jmp
push
mov
push
andl
mov
test
mov
push
mov
je
add
mov
andl
mov
push
call
pushl
mov
push
call
mov
test
pop
pop
je
mov
push
call
mov
neg
sbb
and
add
lea
call
mov
pop
pop
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
lea
call
testb
movl
movl
jne
mov
pop
ret
push
call
pop
jmp
push
mov
push
lea
push
mov
call
test
jne
mov
xor
cmp
mov
jne
mov
push
mov
call
xor
pop
pop
ret
push
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
repz
adc
add
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
cmp
inc
add
or
test
inc
and
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
xchg
add
lea
je
call
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
push
push
call
mov
mov
stos
mov
add
cwtl
pop
out
add
scas
js
push
test
int3
lea
js
add
add
mov
add
push
mov
add
push
push
push
push
push
lea
push
push
call
mov
jge
add
add
rcrl
mov
add
push
into
add
mov
add
jae
jne
add
movsl
add
clc
sub
pop
popl
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
jge
add
add
add
add
add
sahf
add
std
popf
push
add
out
pop
loopne
mov
rolb
mov
mov
add
pop
fildl
incb
jne
sub
pop
push
push
push
push
push
push
call
lock
pop
add
add
add
loope
add
fistpl
in
add
enter
mov
mov
mov
test
jle
pop
xchg
imul
mov
add
jmp
lods
stos
popa
jp
in
in
pop
push
push
push
lea
push
lea
push
push
call
test
mov
add
mov
add
testb
mov
int
jmp
add
in
filds
mov
mov
mov
mov
add
add
lcall
push
push
call
add
lds
insb
add
add
mov
rcl
mov
add
add
mov
mov
popa
add
mov
add
add
jbe
sub
pop
push
call
push
push
push
lea
push
push
lea
push
call
mov
mov
mov
js
pop
out
pop
xchg
add
rolb
notb
les
jae
lock
in
pop
add
rcrb
les
cmc
sti
add
lds
fidivs
lcall
jg
add
push
push
push
lea
push
push
push
call
in
mov
jmp
int3
add
js
jmp
push
stos
add
add
add
addb
add
movsb
scas
add
flds
add
push
je
add
int3
push
push
jp
movsl
loopne
add
into
out
leave
lea
pop
test
popa
mov
mov
xchg
add
sub
pop
push
push
push
push
push
push
call
add
add
add
add
pop
in
icebp
ljmp
pop
lcall
arpl
push
out
aad
add
in
pop
call
push
push
push
push
lea
push
push
push
push
call
jmp
mov
add
cli
xchg
mov
add
add
in
xchg
add
add
add
add
add
roll
xchg
add
jp
ljmp
add
mov
add
mov
test
xchg
shll
jecxz
add
lcall
mov
add
push
lea
push
call
add
push
imul
lcall
in
add
add
mov
jle
test
add
add
rolb
add
mov
add
add
fisttpll
add
cmpsl
add
std
mov
lcall
push
push
push
lea
push
push
push
push
call
fisubl
scas
add
movsb
jne
sahf
add
loop
jo
js
xchg
mov
mov
adcl
add
add
testb
out
jl
adc
push
mov
xchg
add
mov
push
push
push
lea
push
lea
push
push
lea
push
call
add
xchg
addl
mov
in
out
add
add
push
add
add
mov
scas
sahf
test
add
pop
mov
add
push
push
push
push
push
push
push
push
push
push
call
je
xchg
aad
add
xchg
lahf
pop
pop
xchg
add
add
lahf
jecxz
add
add
lahf
push
sahf
mov
xchg
out
lret
push
out
repnz
add
mov
lcall
ret
add
add
push
push
lea
push
push
lea
push
lea
push
push
call
pusha
xchg
jmp
lcall
add
push
fbstp
mov
mov
call
add
mov
test
je
enter
push
add
add
mov
add
enter
xchg
mov
add
sub
pop
add
push
push
push
push
call
fadds
mov
pop
imul
add
leave
out
test
sti
add
add
cmc
incb
add
pop
add
repz
push
push
push
shr
xor
inc
shr
push
or
not
add
shl
sub
sub
add
pop
sub
lea
pop
push
push
push
lea
push
push
push
push
push
call
add
add
rolb
clc
add
pop
pop
pop
add
add
faddl
lret
add
add
clc
cmpsl
mov
pop
xchg
add
stc
add
add
in
mov
pusha
pop
add
add
ret
add
lcall
jne
push
push
push
push
lea
push
push
push
push
call
add
je
add
add
add
push
test
add
mov
cmpsb
xchg
outsl
jnp
add
rolb
into
add
xchg
add
in
imul
push
std
mov
jl
enter
mov
data16
mov
add
lods
jmp
xchg
add
add
jge
loopne
fldl
lcall
lods
data16
push
push
push
lea
push
push
push
push
push
call
sahf
fildl
add
push
add
les
lods
test
gs
add
add
fildl
jnp
lds
xchg
loopne
add
jl
add
inc
lock
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
arpl
add
mov
fildll
add
imul
add
add
push
mov
mov
mov
scas
stc
add
add
ljmp
call
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
filds
add
push
xchg
outsl
add
addl
add
mov
add
add
gs
scas
fcoml
add
mov
mov
ja
add
lea
push
push
push
push
push
lea
push
push
push
call
pop
jmp
movsl
mov
cmpsb
add
in
add
mov
jge
lahf
pop
add
add
add
jne
mov
add
xchg
mov
jns
sarb
add
jecxz
filds
jno
jmp
icebp
add
cmc
add
add
lods
add
add
lcall
push
lea
push
push
lea
push
push
push
lea
push
push
call
in
add
mov
lcall
stos
add
gs
jne
add
add
add
add
lcall
jne
push
push
push
push
call
test
add
add
stc
add
fisttpll
fwait
stos
add
mov
push
les
add
xchg
in
mov
push
out
jno
add
add
add
fistps
in
lock
pushl
push
push
push
push
push
lea
push
push
lea
push
call
pop
add
add
xchg
mov
fs
fdecstp
add
fwait
xchg
jne
into
jge
mov
out
mov
clc
add
add
push
xchg
test
pop
add
lcall
xchg
add
test
lea
xchg
sub
add
call
nop
add
fsubs
push
add
jnp
add
add
movsb
rclb
add
push
add
push
pop
jp
add
sahf
mov
clc
pop
pushl
push
lea
push
call
add
add
add
add
push
jne
fiaddl
add
mov
push
lods
add
std
in
fld
stc
lods
add
cwtl
mov
fldl
mov
fcoml
add
mov
add
add
jne
call
push
push
add
add
push
or
not
add
xor
add
rol
sub
ror
shl
add
not
pop
xor
lea
inc
pop
push
push
push
lea
push
push
call
pop
jp
add
stc
mov
mov
add
add
pop
stos
add
cmpsb
fisubrl
xchg
add
aam
addr16
pop
test
add
jne
push
push
push
push
lea
push
push
lea
push
call
lods
pop
add
test
xlat
outsl
add
add
bound
mov
fsubs
add
jo
out
push
add
add
add
mov
enter
in
call
push
lea
push
push
lea
push
push
call
iret
addb
add
pop
rcll
clc
xchg
add
add
add
js
add
fucomp
lcall
jbe
mov
sub
pop
push
push
push
ror
rol
not
push
xor
add
rol
sub
pop
sub
ror
add
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
push
jo
mov
add
stos
test
movsl
scas
out
jecxz
jbe
mov
add
jns
add
mov
loopne
cltd
add
data16
pushf
xchg
add
jge
mov
js
gs
in
sbbl
add
push
xchg
xorl
push
push
push
push
lea
push
push
push
push
push
call
add
mov
fwait
add
jno
add
jmp
add
jge
fidivl
iret
jmp
add
add
fisttps
mov
add
add
fbstp
add
sub
pop
push
call
push
push
push
call
mov
mov
mov
jb
bound
add
jae
lret
std
add
jle
jge
add
add
shll
repnz
outsl
mov
add
add
lods
lcall
mov
data16
aam
sub
pop
mov
push
push
lea
push
push
call
mov
cwtl
ja
out
pushw
fs
je
out
jmp
add
xchg
fs
mov
add
add
mov
add
add
add
add
jmp
int3
add
mov
int3
push
add
shl
push
cmpsb
addr16
add
add
ja
add
lcall
add
add
sub
pop
push
push
push
call
shr
add
outsl
arpl
test
lea
mov
stc
add
add
lods
add
icebp
push
add
add
sahf
add
mov
add
push
push
call
push
movsl
add
aam
ljmp
nop
repnz
xchg
add
add
bound
cli
jmp
jns
add
sahf
add
int
pusha
lcall
test
jl
add
imul
add
rcrl
pusha
add
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
push
call
lret
leave
mov
xchg
add
bound
add
mov
add
mov
jo
testl
jae
mov
ret
add
in
add
enter
jl
in
fdivr
lcall
ret
inc
dec
add
mov
xor
push
lea
push
push
push
push
push
lea
push
call
out
outsl
push
mov
imul
add
xchg
fildl
add
imul
add
mov
add
aam
cltd
test
cli
mov
lcall
jne
push
push
call
add
add
popf
add
add
add
add
add
xchg
mov
mov
mov
add
fs
add
add
jnp
xchg
mov
fldcw
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
sahf
lea
data16
push
mov
lds
mov
insb
add
into
scas
add
out
add
add
add
clc
add
add
addr16
lahf
js
in
movsb
add
add
roll
add
in
add
loope
stc
add
push
xchg
popl
sub
pop
mov
xor
push
push
push
push
lea
push
push
call
add
add
add
negb
add
xchg
aad
les
add
add
fiadds
add
cltd
insb
sub
pop
add
push
push
push
lea
push
push
push
lea
push
call
add
imul
add
mov
add
jne
sahf
mov
add
xchg
ja
imul
add
push
rclb
mov
in
in
lcall
mov
push
push
push
push
call
add
js
add
add
cmpsb
mov
mov
add
jae
lods
add
add
hlt
mov
pusha
in
loop
add
loopne
add
leave
jnp
lret
add
push
stos
add
add
xchg
add
pop
popa
add
movsl
add
scas
add
mov
pop
xor
push
lea
push
push
lea
push
lea
push
push
call
fcmovb
rol
add
add
push
int3
fidivs
mov
add
add
rcl
add
rcl
sub
pop
add
push
push
push
lea
push
push
push
push
push
push
call
add
subl
add
cltd
aam
add
add
jge
gs
xchg
loope
add
xchg
loopne
pop
gs
add
in
jnp
addb
lods
add
mov
cmc
add
jae
add
add
add
xchg
loop
mov
xchg
addl
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
bound
jbe
add
xchg
add
add
add
add
mov
pop
std
add
add
loop
mov
cwtl
arpl
in
lcall
inc
or
push
push
push
push
call
fstpl
add
jmp
scas
mov
js
mov
add
add
jge
add
push
add
jmp
ja
iret
add
xchg
test
pop
add
ja
mov
ret
ja
add
push
jnp
test
xchg
jne
add
enter
add
push
add
add
add
hlt
pop
add
push
add
add
testb
add
lcall
add
mov
add
mov
stos
add
faddl
fbstp
pushf
popl
pop
add
pop
add
xchg
rolb
out
lret
add
test
mov
add
add
loopne
mov
hlt
lcall
push
push
push
lea
push
call
mov
lea
add
pushf
leave
fidivrs
add
out
add
add
add
mov
in
mov
lcall
movsb
push
push
push
call
lcall
mov
in
lock
mov
add
mov
in
jns
add
mov
mov
jo
nop
mov
movl
add
mov
cwtl
rol
add
add
out
addr16
add
add
imul
add
push
arpl
cwtl
add
add
in
hlt
lcall
push
push
push
push
push
push
call
stos
clc
xchg
pusha
push
lcall
add
mov
pop
lods
cld
mov
add
add
mov
cmpsl
leave
addl
push
je
in
add
clc
add
mov
cmc
fcmovu
xchg
or
xchg
mov
add
add
add
pop
jecxz
ret
sarl
jo
in
call
mov
add
push
lea
push
push
push
call
test
enter
mov
jge
into
cmpsl
faddp
test
lods
into
add
mov
add
pop
popf
push
add
jecxz
mov
test
jl
cli
add
mov
pop
add
add
add
in
push
add
add
ljmp
add
jp
mov
jb
push
mov
lcall
pop
add
add
push
push
push
push
push
push
lea
push
lea
push
push
call
add
movsl
add
add
add
add
push
insb
mov
add
bnd
movsl
or
jo
pop
ret
sahf
add
gs
push
add
mov
fdivr
lcall
inc
and
pop
jae
push
push
call
aad
add
pop
add
jmp
stc
ret
ja
fwait
add
add
jns
lea
mov
stos
test
pop
add
add
mov
add
xlat
mov
add
loope
add
add
add
push
lock
add
add
fistps
add
cwtl
add
ja
test
in
clc
lcall
add
push
push
push
push
push
lea
push
lea
push
push
call
add
add
sahf
iret
mov
mov
add
add
mov
jne
insb
push
add
cmpsl
fstps
mov
test
mov
in
movsb
pushf
add
add
popf
insb
add
pushf
movsl
sub
pop
add
push
push
lea
push
push
call
scas
add
enter
imul
add
ret
add
xchg
imul
jno
add
pop
add
add
mov
out
aam
popf
xchg
out
add
cld
xchg
xchg
jns
add
out
ror
xlat
mov
add
out
mov
lcall
push
and
test
push
push
push
lea
push
push
push
push
push
push
call
lods
idiv
fsubrp
sahf
nop
in
mov
lds
ja
leave
addl
jecxz
mov
push
add
pusha
add
push
add
add
add
xchg
add
addl
add
add
add
test
add
in
test
lret
add
push
add
adc
push
push
push
push
push
lea
push
push
push
call
jbe
add
ret
add
out
clc
xchg
enter
add
rolb
xlat
lock
add
add
ret
iret
add
lcall
les
add
push
push
push
push
lea
push
push
push
call
mov
ffreep
add
add
add
enter
lock
add
fnsave
fildl
jb
add
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
mov
add
mov
out
icebp
jmp
fadds
loope
mov
ja
hlt
movl
add
add
pushf
out
mov
lcall
or
push
push
push
lea
push
push
call
add
loope
add
add
mov
fwait
mov
in
add
lret
cmpsl
pushf
add
add
cli
mov
imul
add
add
add
add
mov
cmc
mov
mov
add
mov
scas
pushf
mov
in
lcall
les
lea
push
push
push
push
call
add
add
mov
add
nop
mov
test
mov
add
ja
pop
shll
orl
add
add
jo
pop
add
mov
add
fwait
gs
into
add
in
add
add
add
mov
mov
stc
jp
sub
pop
add
add
push
push
push
push
call
js
mov
test
mov
out
add
add
ja
ljmp
mov
add
add
pop
data16
pop
push
mov
push
into
add
add
sub
pop
mov
push
push
inc
rol
xor
ror
push
xor
add
rol
sub
sub
ror
add
pop
xor
add
pop
push
push
push
push
push
call
add
nop
cmc
add
mov
add
add
ljmp
mov
add
jp
add
gs
stos
add
add
pop
push
add
jecxz
lahf
lret
add
jae
push
test
xchg
out
add
cmpsb
jge
jecxz
sub
pop
pushl
call
push
push
push
push
push
push
call
clc
lahf
add
mov
roll
test
loop
mov
rol
pop
scas
add
popa
faddl
sub
pop
push
push
push
inc
sub
rol
push
or
inc
add
dec
sub
add
inc
sub
xor
xor
add
pop
sub
add
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
lcall
cmpsl
ret
add
jle
incb
stos
lcall
pop
add
pushf
add
arpl
jae
out
add
cld
xchg
mov
movl
add
rolb
add
add
pop
push
push
shr
shl
pop
push
call
push
push
call
add
add
add
mov
pop
push
add
add
add
push
lds
xchg
stos
int
shll
fnop
call
push
mov
jne
add
mov
mov
arpl
fisttps
add
cld
add
roll
sub
pop
mov
push
push
call
jae
add
add
add
add
filds
add
mov
out
add
test
leave
push
lahf
nop
add
fcmovb
add
jnp
add
add
add
add
add
ffreep
add
fadds
push
push
lea
push
push
push
push
lea
push
call
repnz
add
imul
mov
data16
arpl
flds
add
div
add
sti
fdivrs
cwtl
mov
pop
cwtl
add
mov
fimull
call
ja
push
mov
in
lcall
push
shr
rol
pop
mov
push
dec
inc
pop
add
push
push
lea
push
push
push
push
call
std
mov
sti
jle
add
mov
popa
add
mov
adcl
jmp
sahf
rcll
add
add
add
mov
jge
add
mov
cmpsl
into
enter
add
push
add
jecxz
add
test
add
jl
pop
cli
add
ret
add
add
add
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
add
test
xchg
mov
mov
filds
int3
testb
lods
xchg
test
add
jp
jnp
mov
fmuls
cwtl
pushf
mov
xchg
mov
add
push
add
add
lahf
add
xchg
repnz
jl
out
stos
add
xchg
add
lock
in
fcompl
jae
xor
push
push
push
lea
push
push
push
push
push
lea
push
call
data16
popa
mov
add
lea
push
mov
rcrb
add
add
add
push
add
mov
lcall
push
push
test
sub
pop
add
push
push
push
push
push
lea
push
call
add
add
icebp
add
add
add
add
lds
jmp
add
mov
fwait
add
add
in
push
pop
mov
sub
pop
push
mov
xor
push
push
push
push
push
push
lea
push
call
pop
add
add
add
xlat
imul
cli
jns
add
add
call
pop
int3
add
shl
nop
cwtl
add
stos
in
add
cld
jno
add
pop
mov
add
xchg
out
mov
lcall
lock
shr
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
bound
aam
roll
add
andl
add
pushf
lock
movsb
add
add
xchg
add
sub
pop
mov
push
push
push
lea
push
push
call
icebp
mov
add
cmpsb
scas
add
jp
mov
jnp
mov
cltd
test
push
mov
add
lods
add
flds
hlt
out
subb
add
enter
push
out
push
add
add
pop
jle
xorw
mov
add
ja
add
in
lock
xor
push
lea
push
call
subl
add
roll
push
cmpsb
lcall
add
add
push
in
popa
add
jmp
sub
pop
add
push
inc
sub
shl
ror
pop
rep
push
rol
shr
pop
mov
xor
push
lea
not
pop
or
je
mov
push
push
push
push
lea
push
call
add
enter
pop
jbe
fcmovnbe
lahf
push
loopne
push
add
rolb
add
hlt
std
push
mov
add
mov
mov
add
xor
push
lea
push
push
call
repnz
push
cmc
mov
add
xchg
add
xchg
push
mov
movsl
test
push
lcall
add
hlt
push
add
mov
lcall
les
lea
push
push
push
push
push
push
lea
push
push
push
call
stos
jl
je
mov
add
lds
add
cli
cmpsl
ljmp
enter
add
fcomps
push
sbb
pop
jae
push
lea
push
push
push
push
push
push
push
call
fimull
loop
add
add
leave
add
call
add
mov
fildl
addb
mov
out
add
add
jbe
xchg
add
stc
sub
pop
xor
push
push
push
lea
push
call
mov
stos
stc
jmp
enter
bound
add
push
add
out
lods
repnz
nop
testl
test
add
pop
add
add
icebp
pop
add
in
lock
lcall
les
add
push
push
push
call
xchg
add
jbe
push
loope
rolb
jle
hlt
cmpl
add
cli
stos
enter
out
add
shll
addr16
push
add
add
orb
add
loope
xchg
fcompl
xchg
lds
add
pop
in
add
in
hlt
lcall
repnz
push
lea
push
push
push
lea
push
push
call
testb
call
mov
add
push
add
xchg
push
add
out
movb
xchg
fwait
data16
add
insb
iret
push
jb
pop
add
mov
std
roll
add
add
add
mov
nop
push
ror
in
call
dec
adc
out
lret
push
lea
push
push
call
add
add
in
push
add
xchg
add
outsl
add
repnz
add
iret
popa
lret
jle
add
add
scas
roll
arpl
loope
add
add
inc
or
pop
jae
push
push
push
push
push
lea
push
push
lea
push
call
add
add
push
pop
lcall
add
into
rol
add
add
add
xchg
add
lahf
add
xchg
std
add
lret
xchg
add
add
add
add
fcmovnb
add
aam
xchg
cli
add
jbe
add
add
add
lcall
add
push
push
push
lea
push
lea
push
push
call
aad
pop
cmpsb
add
into
push
add
add
iret
add
push
add
mov
lock
andl
lds
lcall
les
push
lea
push
push
call
data16
push
lahf
pusha
push
mov
mov
mov
mov
jge
mov
popa
add
pop
push
cltd
flds
add
mov
jbe
add
int
push
int
mov
test
in
lock
add
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
cltd
popa
jns
mov
loopne
add
in
add
cmc
add
leave
add
mov
jge
out
add
pop
add
popf
mov
fildl
xchg
add
add
add
sub
pop
pop
rep
push
lea
pop
mov
xor
push
push
push
push
call
bound
add
mov
add
add
jo
mov
cmc
xchg
roll
add
add
lods
cmc
add
add
add
push
add
add
add
add
xchg
add
add
iret
icebp
add
add
add
add
mov
in
lock
lcall
leave
je
mov
push
lea
push
push
push
lea
push
call
push
jno
push
add
add
add
jbe
add
pop
push
mov
add
outsl
jb
add
mov
mov
mov
addb
cmpsb
xor
add
lcall
sub
not
pop
add
rep
push
rol
sub
pop
pop
push
push
shr
push
xor
add
shl
rol
sub
shr
dec
pop
add
lea
sub
shr
pop
push
lea
push
push
call
add
add
add
add
pop
add
push
jecxz
add
mov
jmp
add
jb
in
push
scas
mov
jp
cmpsl
add
add
filds
push
add
js
imul
insb
xchg
flds
lret
add
mov
pop
add
push
lea
push
push
push
lea
push
push
push
call
cwtl
add
jmp
in
jge
push
movsb
mov
lahf
add
outsl
loope
jbe
lret
add
push
jno
add
movl
add
mov
repnz
add
icebp
out
push
add
add
jb
add
add
in
jbe
sub
pop
mov
push
push
push
push
call
jmp
mov
add
add
mov
add
fsubp
arpl
pusha
mov
cwtl
add
add
add
xlat
add
add
add
loope
add
enter
mov
out
cld
add
imul
jo
add
add
lcall
insl
hlt
push
shl
shr
shr
pop
mov
push
lea
push
push
push
lea
push
lea
push
call
fdivrs
add
mov
xchg
add
add
repnz
add
add
movsb
enter
add
stos
cwtl
add
lret
add
add
add
push
add
add
gs
je
aad
add
loopne
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
xchg
add
lret
ja
mov
mov
addl
popl
mov
ja
add
movsl
cli
mov
lods
add
in
push
dec
pop
add
push
push
sub
inc
pop
push
push
push
call
out
push
add
add
clc
call
pusha
movsb
into
mov
add
pushf
movsl
xlat
add
adcb
adcb
pop
addb
mov
add
add
pop
ror
mov
lcall
push
push
lea
push
push
push
push
push
push
push
push
call
mov
fwait
pop
mov
add
ljmp
xchg
add
add
add
add
lods
jge
nop
lock
add
push
aam
mov
mov
int
subl
push
xchg
roll
push
add
mov
mov
mov
add
add
mov
fdivr
lcall
inc
cld
push
push
push
push
push
push
call
mov
out
lea
rol
je
jno
add
add
add
out
mov
stos
push
xchg
pop
lea
stos
test
jp
mov
jnp
loopne
stos
cmp
push
mov
xchg
cli
mov
add
movsl
xchg
add
add
lcall
pop
push
xor
pop
pop
push
not
sub
pop
pop
leave
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
add
add
int
lods
mov
add
mov
clc
add
lcall
or
push
lea
push
push
push
push
lea
push
push
push
call
jne
sahf
mov
add
icebp
add
jnp
cmpsl
scas
add
add
movl
cmpsl
rcl
add
add
test
ffreep
rclb
popa
add
ret
lret
cltd
add
lcall
std
out
mov
add
sub
pop
push
push
add
pop
mov
add
push
push
call
add
jge
cld
jb
mov
jle
mov
lea
sarl
add
mov
scas
ficompl
add
push
icebp
cld
mov
mov
add
pop
push
push
push
lea
push
push
lea
push
push
call
push
mov
fwait
out
add
mov
lods
add
std
push
lods
mov
popa
repnz
mov
jbe
add
insb
add
pop
je
cmc
mov
testb
lcall
push
push
push
push
push
push
push
push
push
lea
push
call
jle
iret
fwait
lcall
pop
add
lea
pop
add
cmpsl
lods
add
test
cmpsl
movsb
add
add
scas
add
mov
push
pop
add
sub
pop
push
push
inc
pop
push
movl
push
add
pop
addl
push
shl
shr
pop
test
je
push
lea
inc
rol
pop
mov
push
pop
pop
push
push
push
call
lret
add
in
jecxz
add
mov
mov
push
add
mov
add
pop
stos
add
nop
sub
pop
pop
push
lea
rol
shr
pop
pop
push
push
push
push
push
call
add
cwtl
add
mov
mov
mov
pusha
fiaddl
stos
insb
pushf
lds
push
add
and
add
add
fildll
je
mov
out
mov
add
into
add
add
push
lea
pop
leave
push
lea
push
push
push
lea
push
push
push
push
call
addb
add
push
push
add
mov
add
mov
scas
add
add
mov
imul
push
add
lret
mov
add
cli
xchg
cmc
nop
pop
int
fcoml
sti
clc
add
add
test
add
add
addr16
in
loopne
ret
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
les
js
fsts
in
lret
lods
add
add
push
add
sarb
ljmp
add
add
sub
pop
mov
add
push
push
push
push
lea
push
push
push
push
call
fcoml
stc
sti
add
popf
push
mov
add
mov
add
add
add
addb
add
add
in
push
lahf
ljmp
xchg
addb
add
rcr
add
sti
add
jp
test
push
in
sti
testl
mov
mov
push
add
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
and
push
add
in
add
mov
mulb
add
add
push
stc
xlat
add
add
add
add
stos
into
add
rolb
cld
testl
add
imul
fdivr
lcall
push
push
push
push
call
xchg
mov
mov
imul
add
add
jae
jmp
cli
cli
jge
test
add
mov
sub
pop
testl
push
push
push
push
lea
push
push
push
call
push
xchg
add
add
pop
add
add
pop
cmpsl
jo
fldl
popf
in
add
add
in
lcall
inc
or
push
push
push
push
push
push
call
in
add
lret
add
xchg
repnz
fcmovbe
lods
mov
mov
mov
cmc
je
stos
cltd
pushf
add
lcall
add
pop
pop
inc
inc
pop
call
push
ror
not
pop
mov
push
lea
push
push
push
call
bound
add
mov
outsl
pusha
sarb
loope
mul
add
add
imul
jbe
in
je
mov
add
movl
add
pop
add
mov
pop
lods
add
add
int3
xchg
xchg
fsts
clc
scas
cwtl
movb
add
pop
pushl
push
push
push
lea
push
push
push
push
push
call
add
add
xchg
add
add
add
add
add
add
mov
add
icebp
mov
add
outsl
add
add
movsl
add
in
mov
mov
add
ja
mov
add
scas
add
add
lahf
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
test
test
add
shl
testb
add
pusha
cli
jo
add
xchg
lahf
ret
mov
add
ljmp
pop
add
movsb
lock
mov
add
pop
add
xchg
int
pop
add
testb
jge
imul
in
in
lcall
add
or
roll
push
push
lea
push
lea
push
call
add
pushf
mov
out
pop
mov
xchg
lock
add
bound
add
add
jnp
add
add
push
sahf
add
lret
xchg
sub
pop
call
push
sub
inc
pop
cmpl
jne
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
pushf
add
add
push
add
stos
mov
mov
icebp
fsubp
add
mov
sahf
add
push
mov
jge
push
mov
je
addr16
push
repnz
add
imul
add
mov
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
lods
mov
add
mov
int3
filds
cmc
addb
jmp
mov
add
xchg
nop
add
xchg
scas
mov
cli
andl
test
lcall
add
vpmovmskb
add
popf
add
add
xchg
pop
push
push
lea
push
push
lea
push
call
stos
mov
add
lahf
add
mov
push
xlat
ret
bound
fs
add
fisubrl
push
lcall
mov
add
xchg
mov
add
enter
add
roll
push
add
in
movsl
add
jae
add
add
sub
pop
leave
ret
push
push
call
add
add
pushf
add
lcall
loope
cwtl
clc
add
xchg
add
xchg
add
add
out
add
fld
lods
add
stos
add
int3
add
cltd
int3
les
mov
add
xchg
xlat
je
negb
lcall
push
push
lea
push
push
push
call
add
add
add
add
mov
add
mov
add
add
jmp
pop
roll
add
in
clc
add
mov
add
roll
jle
add
cmpsb
mov
mov
push
push
push
push
push
call
jo
jne
test
add
lea
repnz
shl
out
push
add
add
add
add
stos
cmpsb
cld
add
add
add
scas
push
add
lcall
cld
push
push
lea
push
lea
push
push
push
call
xchg
jbe
add
add
add
enter
add
add
lret
fprem1
mov
popa
arpl
add
shll
mov
icebp
jle
xchg
cwtl
jno
xchg
hlt
add
sub
pop
push
push
lea
push
push
lea
push
push
call
mov
add
add
mov
sarb
xlat
cmc
mov
insb
mov
sar
in
add
je
add
pop
pop
add
push
into
add
pop
xchg
mov
nop
mov
add
mov
fsubs
mov
jns
add
addr16
test
ret
xchg
add
out
scas
add
sub
pop
push
push
shr
sub
dec
pop
push
push
push
call
add
push
add
pop
xchg
add
add
xchg
jo
xchg
roll
jmp
add
add
add
add
add
mov
in
clc
pop
movl
push
not
pop
push
push
push
push
call
jp
xlat
add
mov
jmp
mov
add
sti
int
add
loop
jl
int
out
push
xchg
jbe
loope
movsl
ljmp
jmp
adcl
jmp
icebp
iret
add
sub
pop
call
push
push
sub
pop
call
push
rol
sub
not
pop
subl
push
shr
pop
cmpl
jne
push
sub
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
movsl
int3
lret
mov
mov
iret
add
mov
data16
imul
add
add
mov
add
push
mov
test
add
add
test
pop
mov
out
loopne
add
test
sti
add
pusha
mov
pop
pop
push
rol
lea
dec
pop
pop
leave
push
push
push
push
push
lea
push
push
push
push
call
add
push
mov
clc
cmpsl
push
add
push
mov
add
lods
add
std
data16
mov
add
add
push
add
fs
xchg
mov
add
pop
mov
sub
pop
ret
push
shr
not
pop
push
mov
push
ror
inc
pop
add
push
push
call
rcl
lret
pushf
cli
add
mov
jbe
insb
mov
mov
add
test
imul
int
add
add
mov
xchg
fld1
jb
add
add
mov
add
enter
call
in
clc
lcall
push
push
push
push
push
push
call
add
les
add
mov
lods
jmp
add
shlb
add
add
add
add
add
mov
add
mov
in
call
ss
jo
lock
rol
pop
push
push
push
sub
inc
pop
mov
push
not
sub
sub
pop
lea
sub
push
push
push
push
push
push
push
lea
push
lea
push
push
call
push
push
js
add
test
imul
add
jnp
add
pushf
cmpsl
pop
lods
test
test
xchg
cld
pop
add
lret
add
jmp
pop
jbe
jo
filds
sahf
outsl
sti
pushf
add
mov
rcl
push
push
jmp
add
add
add
add
loopne
sub
pop
mov
push
pop
shr
push
rol
lea
pop
add
push
push
push
push
push
call
xchg
xchg
add
pop
add
shrl
add
add
push
push
mov
lods
add
add
cmpsl
bound
add
sti
hlt
lock
roll
add
add
add
add
shl
ret
outsl
add
in
in
pop
mov
push
shr
shl
pop
mov
add
push
push
lea
push
push
push
call
add
mov
rcrl
into
sbbb
add
int
push
test
loope
add
mov
add
jge
add
sahf
add
add
lcall
shlb
inc
add
add
push
push
call
add
add
push
add
mov
push
out
std
fiaddl
add
fiadds
jge
jge
lds
add
test
mov
test
test
add
add
add
iret
push
fcmovb
stos
int3
loop
push
cltd
mov
mov
mov
push
ror
pop
cmp
jne
push
xor
inc
add
add
pop
cmp
jne
mov
push
shr
dec
pop
movl
push
push
push
push
lea
push
push
push
push
push
call
mov
les
lcall
xchg
nop
add
add
imul
add
add
rcrb
fdivrp
sbbl
je
pop
push
sub
pop
jmp
push
push
call
data16
xchg
test
cld
mov
jae
ret
add
add
xchg
mov
mov
add
xchg
add
fwait
add
xchg
mov
movsb
add
loop
aam
add
fiadds
jno
in
clc
pop
mov
mov
push
not
pop
sub
jne
push
add
xor
lea
pop
mov
push
lea
shl
rol
pop
movl
jmp
push
not
dec
pop
mov
mov
push
push
push
push
push
push
lea
push
push
call
in
mov
add
mov
lcall
add
push
add
add
add
int3
push
add
clc
out
add
stos
out
ret
add
add
cli
mov
pop
int
push
add
add
loopne
lcall
cli
add
test
add
push
push
push
push
push
lea
push
push
call
imul
xlat
int
add
jle
fnstsw
add
xlat
mov
mov
ret
int
mov
cmpsl
pop
into
pusha
mov
fidivrs
add
mov
add
jno
mov
mov
movl
push
ror
xor
dec
sub
pop
jmp
push
shl
shl
pop
mov
push
sub
shl
pop
cmpw
jne
push
lea
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
andl
scas
add
shll
fsubl
mov
add
movsb
add
add
push
push
add
add
mov
mov
add
add
imul
out
add
add
cmpsb
roll
fsubrl
mov
add
sub
pop
mov
push
lea
push
push
push
call
les
addl
add
lahf
fistl
add
xchg
add
bnd
movsl
xchg
adcl
push
add
add
add
in
lock
movl
jmp
push
push
call
add
mov
cwtl
add
add
add
movsb
xchg
aam
bound
add
mov
add
add
add
xchg
jmp
mov
repnz
add
add
js
add
lret
add
mov
add
mov
test
cwtl
add
jne
pop
fiaddl
pushl
push
push
push
call
jge
mov
xchg
add
add
mov
add
pop
add
add
add
add
mov
add
add
arpl
mov
add
mov
fidivrs
add
add
fiadds
add
lahf
push
mov
jbe
add
push
push
push
push
call
add
notl
jb
add
mov
xchg
add
add
call
addr16
out
xchg
jno
add
loopne
test
add
sarl
add
in
insb
add
mov
xchg
xchg
add
inc
or
push
lea
push
push
lea
push
push
push
call
mov
add
jge
into
lds
int3
jecxz
xchg
xchg
add
addl
xchg
push
mov
test
xchg
add
add
push
add
cmpsb
in
ret
sbbb
in
mov
push
inc
add
pop
mov
push
push
dec
push
or
not
add
add
not
sub
sub
xor
inc
pop
ror
sub
shr
pop
push
sub
pop
push
call
push
push
push
push
push
push
push
push
call
out
in
shll
in
filds
add
imul
add
add
sti
std
mov
jle
mov
in
loopne
cmpl
je
push
push
lea
shl
shl
push
xor
add
xor
lea
sub
inc
sub
shl
sub
pop
sub
add
shl
add
pop
push
push
lea
push
push
push
lea
push
call
in
int
mov
mov
mov
sahf
push
lods
fadds
add
pop
add
into
add
add
js
add
mov
int3
testl
pop
out
ret
add
add
sbbl
add
mov
pop
push
push
xor
sub
shl
pop
call
cmpl
je
push
push
add
sub
xor
xor
push
push
pop
add
lea
add
sub
ror
xor
shr
pop
sub
shr
lea
inc
pop
push
rol
lea
sub
add
pop
push
push
push
lea
push
call
xchg
aam
in
leave
add
add
nop
xchg
xchg
add
add
add
add
mov
add
add
xchg
xlat
add
flds
mov
int
pop
add
add
add
add
jo
add
clc
in
sub
pop
call
cmpl
je
push
push
xor
push
push
pop
add
inc
sub
sub
add
xor
sub
pop
rol
shr
not
pop
push
lea
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
in
add
push
add
pusha
loopne
pop
stos
add
xchg
repnz
add
add
jge
push
imul
add
pushf
cltd
add
add
sahf
lea
push
sub
pop
call
push
sub
pop
cmpl
je
push
push
inc
shr
xor
push
or
not
add
add
rol
sub
shr
sub
not
not
lea
pop
lea
sub
pop
push
shr
sub
rol
pop
push
push
push
push
call
std
add
xlat
shrl
popf
mov
lahf
add
add
add
add
add
add
int
test
xchg
ret
add
add
sarl
push
add
into
add
mov
mov
loop
add
in
hlt
pop
call
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
icebp
add
xlat
lcall
add
add
add
add
icebp
xchg
pop
jp
jns
add
addb
xor
ret
test
add
push
push
add
shr
shr
push
and
add
shl
sub
ror
pop
dec
sub
shr
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
out
add
mov
lock
stc
add
mov
test
jle
add
aam
add
add
mov
into
fiadds
mov
in
fdivr
lcall
push
shr
pop
call
cmpl
je
push
push
rol
lea
push
sub
add
xor
sub
inc
not
pop
dec
rol
pop
push
push
push
lea
push
call
lcall
lods
add
add
mov
add
jp
lret
mov
mov
add
push
test
mov
push
jno
mov
lcall
push
sub
pop
call
push
push
push
push
push
push
lea
push
push
call
out
mov
xchg
add
add
cmpsb
add
out
add
add
rcl
mov
jne
mov
xchg
jo
out
add
add
lcall
cmp
or
int3
je
push
push
shr
lea
ror
not
push
sub
add
sub
ror
ror
lea
sub
shr
ror
pop
add
not
pop
push
lea
push
lea
push
lea
push
push
push
call
mov
shll
add
xchg
add
mov
lds
mov
lcall
add
add
add
add
shrb
push
clc
lods
add
cmpsl
add
roll
push
shl
rol
pop
call
push
inc
dec
shl
pop
cmpl
je
push
push
inc
add
push
xor
add
shl
sub
dec
pop
ror
rol
ror
pop
push
add
shl
shl
pop
push
push
push
push
push
push
lea
push
lea
push
call
mov
cltd
xlat
add
rorl
add
popf
mov
test
stos
add
jae
add
stos
jb
aam
jne
add
add
mov
movb
add
mov
js
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
call
push
gs
push
insb
add
lahf
add
push
out
lea
loop
fbstp
add
ffreep
xchg
sub
pop
cmpl
je
push
push
inc
push
push
pop
add
ror
sub
inc
pop
inc
shl
pop
push
push
push
push
push
call
add
lret
add
add
jle
add
add
add
clc
add
add
add
add
add
add
add
in
in
lcall
push
push
push
push
push
push
push
lea
push
push
call
lods
jmp
movsb
in
pop
add
lds
mov
add
add
js
add
cmpsl
add
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
je
add
add
pop
loope
div
out
pushf
xchg
add
bound
xchg
imul
clc
movsb
add
sti
sbbl
out
jl
mov
xchg
add
mov
lods
out
add
add
jns
sub
pop
cmpl
je
push
push
rol
push
or
not
add
sub
dec
sub
pop
sub
dec
pop
push
push
push
call
pop
cltd
jbe
add
add
add
mov
divl
add
push
mov
add
add
add
add
push
jno
lock
hlt
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
test
xchg
add
add
les
mov
xchg
add
test
imul
add
add
mov
mov
lret
add
add
add
fdivr
lcall
jl
add
cmpl
je
push
push
shr
sub
push
and
add
dec
not
sub
sub
sub
add
pop
ror
pop
push
push
push
push
push
call
pop
add
rcrl
xchg
add
ljmp
ljmp
jo
aad
add
cmc
scas
mov
fsubr
cwtl
mov
xchg
sti
add
jmp
add
add
aam
in
adc
add
movl
test
in
add
lret
popa
add
add
add
out
add
pop
add
push
lea
pop
call
push
push
call
add
popa
mul
add
mov
add
add
fst
mov
ror
add
mov
mov
outsl
xchg
faddl
add
clc
pop
cmpl
je
push
push
inc
add
shr
push
or
inc
add
inc
shr
sub
not
shl
add
pop
lea
sub
add
pop
push
add
sub
pop
push
call
push
lea
push
call
lahf
mov
add
add
add
loopne
add
cltd
add
pop
shrb
mov
push
cltd
add
mov
in
add
add
add
add
add
add
xchg
int3
iret
scas
ljmp
jno
add
push
add
add
add
jns
in
clc
lcall
js
xor
pop
ret
in
add
push
push
push
push
push
push
call
out
pop
fwait
add
pop
in
rolb
cmpb
jecxz
lds
lcall
add
fcompl
test
popa
add
jmp
add
out
mov
je
add
push
mov
iret
pop
add
add
add
outsl
sub
pop
mov
push
lea
push
lea
push
push
push
lea
push
call
mov
add
sbbb
add
add
add
ret
add
mov
int3
mov
popf
movsb
popa
stos
incb
xchg
arpl
arpl
cmpsb
add
add
pop
add
rolb
pop
faddl
sub
pop
movl
jmp
push
inc
not
pop
xor
push
sub
pop
pop
push
sub
add
pop
pop
pop
push
not
pop
pop
push
shl
xor
pop
leave
ret
push
push
lea
push
push
push
push
push
push
push
push
call
add
out
add
rolb
add
ja
ret
add
add
add
jp
add
lds
xchg
fisttps
roll
std
add
out
bound
jbe
add
add
loopne
popl
add
ljmp
lcall
push
sub
shl
pop
mov
push
not
not
pop
add
cmpl
jne
push
push
sub
sub
dec
not
push
xor
add
sub
sub
pop
xor
pop
push
push
call
mov
sti
pushf
pushf
add
add
add
popf
jne
popa
out
mov
loope
add
add
addb
mov
jp
xchg
sub
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
push
call
push
scas
jmp
add
mov
xchg
xchg
add
add
add
push
repnz
ret
mov
jno
pusha
add
fldl
add
leave
hlt
les
aam
add
add
add
add
pop
push
push
xor
dec
pop
call
jmp
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
int3
imull
xchg
add
cmc
add
mov
add
les
mov
lret
mov
nop
add
jo
lcall
add
fldl
pop
add
test
mov
nop
insb
repnz
aad
shlb
add
xchg
add
sub
pop
cmpl
je
push
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
add
add
scas
add
out
std
add
in
jmp
add
jle
jbe
add
int
add
int
fsts
jae
scas
mov
std
add
add
sub
pop
cmpl
jne
push
shl
add
pop
leave
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
cld
add
add
add
rolb
ja
add
mov
mov
loopne
push
mov
add
add
repnz
lcall
les
pop
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
xchg
fdivrs
add
fidivl
add
sarl
add
push
addb
mov
add
add
lret
in
pop
push
ror
shl
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
jbe
add
mov
mov
call
clc
pushf
addl
into
out
add
add
lds
movl
pop
add
lahf
mov
jl
add
into
mov
repnz
pop
stc
add
movsb
loop
orb
cwtl
add
add
push
mov
test
loopne
pop
leave
push
rol
add
pop
add
push
dec
sub
lea
pop
ret
jmp
push
push
lea
push
lea
push
push
call
add
cmpsb
test
jge
add
test
cmc
mov
mov
add
jne
jecxz
add
add
lock
add
push
add
jge
add
test
add
add
and
xlat
push
rol
push
or
inc
add
ror
rol
not
sub
xor
pop
dec
not
pop
push
sub
pop
pushl
call
push
xor
shl
sub
pop
push
push
sub
pop
call
push
push
lea
push
push
lea
push
push
push
call
add
bound
add
add
add
bnd
flds
add
mov
xchg
sahf
jns
jbe
fcomps
loop
push
cld
je
add
test
fcoml
add
add
addr16
stc
add
push
pop
add
out
lods
popf
add
loop
add
in
fucom
icebp
in
sub
pop
jmp
cmpl
jne
push
lea
push
push
lea
push
push
push
push
lea
push
call
repnz
lret
mov
out
add
std
add
mov
cmpsl
add
addb
jp
jle
add
add
mov
push
jno
in
loopne
mov
push
push
lea
push
lea
push
push
lea
push
call
sarl
xchg
lret
add
pop
roll
add
lret
push
add
add
add
add
add
push
shrb
insb
rorb
loop
add
sarl
xchg
movsl
cli
rorl
jns
out
ficomps
add
test
add
out
add
cmpl
pop
mov
push
push
call
out
add
mov
mov
ror
stos
mov
roll
add
pop
add
jge
mov
add
add
jecxz
jbe
cli
bound
add
aam
add
outsl
jl
fs
stos
mov
mov
jb
lret
sub
pop
jmp
push
push
call
add
in
add
leave
jp
add
push
add
add
add
add
cmpsl
push
add
xchg
add
shl
jb
mov
mov
sti
test
sarl
add
add
add
and
sub
pop
push
push
push
shr
rol
push
or
inc
add
ror
add
not
sub
add
sub
pop
add
pop
push
add
shr
xor
pop
pushl
push
push
call
cli
xchg
xchg
xchg
add
nop
pushf
add
add
addb
mov
add
add
add
add
fwait
add
ja
mov
jne
scas
add
pushf
cmpsb
add
add
add
insb
add
call
mov
add
lcall
xchg
daa
add
push
push
push
push
push
call
rolb
fldl
sarb
add
mov
cmc
add
add
mov
add
in
test
add
add
addr16
mov
cmpsl
mov
add
mov
sahf
jmp
add
lret
imul
divl
lcall
shrb
rcl
cmp
add
lds
leave
add
ror
sub
sub
xor
pop
shr
not
xor
pop
push
not
pop
pushl
call
push
lea
add
pop
call
push
push
dec
shl
push
and
add
ror
sub
add
shr
pop
ror
add
not
sub
pop
push
lea
push
push
push
push
call
scas
add
lret
mov
lea
jmp
jne
pop
enter
cwtl
mov
mov
pop
xchg
push
loop
push
add
mov
add
rol
add
mov
std
aam
add
cld
mov
icebp
in
call
pop
add
add
xchg
sub
pop
pushl
push
push
lea
push
push
call
cltd
add
stos
add
add
push
add
pop
xchg
addr16
add
stos
stc
fcmovbe
add
add
jecxz
shrb
pop
add
add
add
jne
test
add
xchg
int3
out
pop
clc
cmc
cwtl
push
add
loope
jmp
js
mov
jle
sub
pop
call
call
push
push
shr
shl
xor
push
xor
add
ror
sub
lea
not
add
add
pop
pop
push
sub
pop
pushl
push
push
push
push
push
call
add
xchg
pop
lea
insb
add
lock
faddl
in
outsl
mov
loope
add
mov
add
in
pop
call
push
add
shl
pop
call
push
push
dec
add
add
not
push
or
inc
add
sub
shl
add
sub
lea
pop
shr
pop
push
push
lea
push
push
push
lea
push
push
call
lods
js
xchg
mov
add
add
nop
add
jle
add
movl
lock
xchg
jmp
mov
shll
push
add
add
add
out
sbb
popa
stc
sahf
add
mov
jno
add
add
add
add
mov
add
add
jne
call
push
add
dec
pop
call
push
push
shr
add
add
push
sub
add
rol
shr
sub
add
pop
add
rol
pop
push
push
lea
push
push
call
scas
add
cli
add
filds
add
roll
shll
add
sub
cld
in
jbe
add
aad
out
icebp
pop
in
add
add
in
cmc
jmp
add
add
add
add
add
xchg
add
test
cmpsb
push
add
lcall
jne
push
push
call
loop
mov
mov
add
js
add
mov
movsb
add
xchg
fstl
mov
push
add
xchg
mov
call
push
push
push
push
push
call
add
add
out
push
lret
sarl
add
mov
lcall
loopne
mov
add
xchg
add
test
data16
add
xchg
mov
fwait
repnz
add
jno
movb
sti
add
ret
in
lcall
shrb
imul
inc
add
add
dec
push
xor
add
dec
add
sub
rol
shr
lea
pop
xor
inc
dec
pop
push
lea
pop
pushl
push
lea
xor
pop
call
push
push
push
push
push
push
push
call
add
mov
test
ret
add
xchg
in
lret
fnstsw
add
scas
add
add
sti
int3
in
int
add
mov
nop
mov
mov
push
lods
ljmp
lds
add
xchg
test
pop
call
push
push
rol
not
rol
push
or
inc
add
sub
sub
ror
pop
sub
add
inc
pop
push
push
lea
push
push
push
call
push
add
mov
add
loopne
add
add
add
mov
mov
add
mov
insb
mov
in
in
pop
pushl
call
push
shl
add
pop
call
push
push
not
sub
rol
push
or
inc
add
add
sub
dec
pop
ror
shr
inc
pop
push
add
dec
add
pop
pushl
push
shr
shr
not
pop
call
push
push
push
push
push
push
push
lea
push
call
mov
stos
hlt
add
add
lcall
rolb
add
mov
jmp
mov
pop
mov
add
scas
fisubs
add
add
rolb
add
add
pop
icebp
add
fcmovnbe
loop
add
mov
loopne
roll
pop
call
push
push
shr
push
xor
add
lea
sub
sub
sub
shl
shr
pop
add
pop
push
ror
add
rol
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
loopne
add
add
je
add
pop
notb
cltd
jge
add
testb
add
mov
lret
push
add
add
jno
mov
add
jle
arpl
add
les
push
std
cwtl
pusha
mov
jecxz
add
add
add
xchg
add
pop
jo
mov
jmp
imul
in
fcompl
pushf
and
call
lea
xor
pop
call
push
push
xor
dec
sub
dec
push
xor
add
shr
sub
not
inc
shl
pop
xor
dec
sub
ror
pop
push
xor
add
shl
pop
pushl
call
push
push
push
push
push
push
push
push
call
add
lea
add
aam
loopne
enter
add
add
xlat
in
into
mov
pusha
add
mov
mov
xchg
ficoml
jl
into
mov
mov
ficompl
lret
sub
pop
call
push
push
xor
push
or
not
add
not
sub
shr
add
pop
shl
pop
push
dec
shr
pop
pushl
push
not
shr
xor
pop
call
call
push
push
lea
push
push
pop
add
shl
add
sub
lea
xor
not
xor
pop
rol
add
sub
pop
push
push
push
call
add
cwtl
mov
sti
jge
mov
in
add
add
mov
add
add
add
mov
mov
add
pushl
push
push
lea
push
push
push
call
add
add
add
add
add
jp
sarl
add
add
jbe
mov
jecxz
xchg
cmpsl
xlat
add
add
pop
mov
add
xchg
push
clc
ret
add
mov
pop
add
jle
add
add
lahf
test
fadds
cli
push
cmpsl
movsl
sub
pop
call
push
add
dec
pop
call
lea
push
push
sub
push
or
not
add
xor
lea
sub
sub
not
sub
pop
not
add
rol
shl
pop
push
not
lea
add
sub
pop
pushl
push
dec
sub
xor
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
test
cmpsb
xchg
int
cmpsl
pop
mov
shll
ljmp
loopne
test
add
add
mov
pop
add
push
scas
add
fiadds
div
add
add
add
add
scas
add
stc
addb
outsl
add
stc
add
pop
push
add
mov
lcall
call
push
push
dec
push
push
pop
add
rol
dec
dec
sub
rol
pop
sub
sub
pop
push
lea
push
lea
push
call
test
lret
mov
in
mov
add
pop
out
mov
iret
test
add
lods
jno
in
hlt
lcall
jne
push
push
push
push
lea
push
push
lea
push
push
push
push
call
jle
add
mov
add
mov
add
add
add
add
pop
in
rolb
add
mov
add
add
add
cmc
mov
add
pop
aam
add
sub
pop
call
push
push
push
push
push
lea
push
push
call
add
sti
sahf
add
jns
stos
pop
push
add
jne
push
jp
ja
add
xchg
push
mov
ja
add
lret
mov
add
lret
pop
pop
fcomps
add
push
add
jbe
add
stc
cmpsb
add
add
add
enter
sub
pop
call
mov
push
push
inc
push
xor
add
shl
inc
not
sub
dec
dec
sub
pop
inc
pop
push
sub
inc
pop
pushl
push
push
push
push
push
push
push
push
call
jo
add
pop
filds
fadds
mov
js
xchg
add
mov
add
addl
add
filds
vcvtpd2psx
add
jb
add
sbb
add
sti
not
lea
pop
push
push
sub
not
lea
pop
pushl
push
ror
add
pop
call
push
push
ror
shl
add
push
push
pop
add
ror
sub
xor
pop
add
xor
pop
push
lea
push
push
push
push
push
call
add
add
scas
lahf
mov
add
pop
add
mov
ficoml
add
add
xchg
push
data16
popf
into
call
add
add
mov
lcall
jne
call
push
push
sub
ror
dec
push
or
inc
add
sub
inc
shr
dec
pop
lea
pop
push
push
xor
push
xor
add
shr
sub
dec
pop
inc
ror
shr
ror
pop
push
push
push
lea
push
call
jno
add
mov
add
loopne
jl
xlat
lock
mov
add
add
xchg
stos
imul
cmc
test
hlt
mov
add
push
addr16
loope
jmp
stc
xchg
add
sub
pop
call
push
push
dec
push
push
pop
add
rol
sub
inc
rol
sub
inc
dec
dec
ror
pop
not
pop
push
rol
pop
pushl
push
push
push
call
push
sahf
cwtl
je
lcall
fmulp
xchg
pusha
jle
in
add
pusha
in
shl
push
add
sti
aam
add
lcall
inc
sbb
add
clc
push
lea
push
call
mov
add
mov
pop
add
add
add
jbe
lret
jne
add
add
push
out
xorl
scas
mov
movl
push
addb
mov
outsl
frstpm(287
call
js
lret
addr16
test
push
pop
sub
pop
lea
push
add
sub
pop
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
add
out
loop
add
movsb
lods
mov
mov
add
xor
add
pop
add
jb
mov
mov
in
test
mov
add
frstpm(287
add
add
outsl
fucompp
hlt
leave
hlt
nop
add
sub
pop
push
push
ror
pop
push
push
ror
dec
lea
add
pop
push
push
dec
not
lea
shr
pop
push
push
push
xor
pop
push
push
not
pop
push
push
push
push
push
push
call
cwtl
push
add
add
std
pop
add
cld
ja
add
scas
add
in
add
push
hlt
add
add
fcomp
in
imul
add
sahf
in
mov
sub
pop
push
pushl
push
add
sub
add
pop
push
push
pop
call
push
push
not
add
inc
push
sub
add
add
dec
add
sub
add
sub
pop
lea
pop
push
push
push
push
call
add
mov
filds
push
cli
hlt
add
add
add
xchg
xchg
add
fiaddl
jnp
add
scas
add
add
loopne
mov
push
mov
add
loope
add
shll
sub
pop
pushl
call
push
add
pop
call
mov
push
sub
sub
add
xor
pop
pop
push
xor
xor
inc
pop
dec
jne
push
push
call
jge
add
add
add
mov
popf
rcl
add
mov
xchg
add
repnz
mov
add
and
add
push
push
add
sub
lea
push
push
pop
add
sub
sub
shr
sub
lea
pop
sub
pop
push
push
lea
push
push
push
call
add
pop
loope
add
loop
add
add
jge
add
add
jne
popa
add
stos
cmpsb
scas
add
pop
stos
add
push
test
fisttpll
cmpsl
add
movsb
in
add
xchg
add
add
aad
fs
add
sub
pop
pushl
push
push
push
push
call
mov
add
insb
lahf
add
pop
add
lret
int3
add
add
add
jne
loope
add
add
add
xchg
push
add
out
cmc
mov
jle
add
add
add
push
sub
pop
call
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
xchg
xchg
outsl
add
addl
mov
imul
mov
mov
add
xchg
fwait
hlt
pop
flds
sub
pop
push
push
rol
inc
rol
pop
call
push
push
push
push
push
push
call
scas
mov
jb
rcr
int
lret
add
loop
add
rcl
add
add
add
add
call
sub
pop
mov
push
add
add
shr
pop
lea
push
push
add
shl
push
and
add
lea
sub
not
sub
rol
sub
shr
lea
pop
ror
ror
pop
push
not
xor
shl
pop
pushl
call
push
pop
push
push
push
lea
push
call
add
jno
std
add
mov
popl
add
sbbl
loop
mov
out
aad
add
mov
test
in
xchg
test
std
mov
outsl
lock
sahf
add
hlt
lcall
shrb
in
push
push
add
dec
dec
push
xor
add
xor
ror
sub
rol
pop
not
dec
shr
pop
push
lea
push
lea
push
push
push
call
push
add
nop
add
mov
add
add
add
pop
add
add
lea
add
mov
add
add
sti
add
jae
icebp
leave
add
add
filds
sahf
shlb
pop
pushl
push
rol
add
shl
pop
call
push
xor
pop
call
push
not
pop
mov
lea
push
push
lea
sub
inc
push
or
inc
add
shl
not
sub
lea
pop
sub
pop
push
dec
pop
pushl
push
push
push
push
push
push
push
call
popl
lahf
jnp
mov
faddl
roll
hlt
add
add
in
scas
mov
add
add
icebp
add
add
rcrb
mov
add
out
cmc
add
sti
add
add
xchg
lock
add
incb
sub
pop
call
lea
push
dec
add
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
jl
add
mov
movl
add
add
mov
notb
loopne
add
mov
popf
mov
stc
repnz
add
push
test
imul
add
add
aad
mov
xchg
mov
data16
addl
push
push
push
push
push
lea
push
push
call
aad
test
push
imul
bound
add
add
fldl2t
mov
testb
add
add
in
add
add
add
shrl
cmpsb
add
mov
andl
imul
mov
movsl
add
in
in
push
push
sub
add
pop
pushl
push
push
ror
shr
dec
push
push
pop
add
not
xor
ror
sub
pop
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
push
aam
add
add
rorb
push
aam
add
add
add
mov
popa
shll
popa
mul
push
xchg
scas
push
repnz
add
enter
pop
push
hlt
add
xchg
les
lea
test
sub
pop
push
push
lea
pop
call
push
push
xor
push
push
pop
add
dec
dec
lea
sub
sub
xor
sub
sub
pop
rol
pop
push
push
push
call
jmp
rcr
scas
fadds
add
mov
add
add
movsb
stc
add
add
stc
test
sarb
add
add
add
cmpb
add
add
sub
pop
pushl
push
dec
shl
pop
call
push
ror
pop
push
push
push
push
push
push
lea
push
call
add
mov
mov
ja
movsl
mov
fdivrs
repnz
add
cmpsl
lods
add
add
shrb
xchg
fisttpl
xlat
not
push
push
pop
add
not
sub
add
sub
pop
sub
pop
push
pop
pushl
push
ror
xor
pop
call
push
push
lea
push
lea
push
push
call
test
jge
add
out
push
add
push
add
mov
outsl
clc
pop
push
cli
movl
pop
add
add
push
add
push
mov
cwtl
test
add
stos
testl
add
jno
xlat
test
sub
pop
call
push
shr
ror
pop
jmp
push
dec
lea
pop
pushl
mov
push
lea
push
push
push
call
pop
adcb
popa
movsl
mov
arpl
lods
add
popa
add
mov
std
add
mov
cld
bound
add
pop
add
ljmp
add
lea
add
fadds
aad
fldl
mov
add
mov
fwait
add
lcall
and
ljmp
jl
mov
leave
add
push
or
inc
add
shr
sub
shl
add
inc
pop
inc
not
pop
push
shr
sub
pop
pushl
push
add
add
pop
call
push
push
push
push
push
push
push
push
call
testl
fldl
in
mov
xlat
je
pop
jnp
pop
test
fs
je
add
mov
fiadds
mov
addr16
jle
in
in
lcall
shrb
rcl
push
sub
rol
push
and
add
xor
rol
lea
shr
sub
inc
pop
ror
not
add
add
pop
push
push
push
lea
push
call
add
out
les
mov
lcall
add
add
lea
sti
jmp
mov
mov
pop
lock
rol
add
fyl2xp1
loop
fwait
out
test
add
insb
add
pop
pushl
push
sub
inc
not
shl
pop
call
push
not
pop
push
call
push
push
push
lea
push
push
push
push
push
call
mov
add
add
leave
jecxz
push
add
add
add
shr
nop
jl
add
les
add
mov
mov
xchg
sub
pop
leave
push
inc
pop
add
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
stos
fs
addb
fstpl
mov
scas
fbstp
adcb
je
pop
lock
lret
in
roll
add
lcall
push
pop
pop
push
sub
pop
pop
leave
push
lea
push
push
push
push
call
imul
mov
add
add
mov
popf
aad
add
jge
rolb
testl
add
fldl
mov
push
add
add
mov
sub
pop
add
push
lea
push
push
push
push
push
push
call
add
loope
push
mov
movsl
imul
lret
add
test
mov
hlt
jmp
roll
into
into
add
mov
add
xchg
fiaddl
in
in
lcall
push
not
pop
leave
push
xor
sub
pop
ret
push
push
push
push
lea
push
push
call
add
add
add
add
add
out
mov
add
pop
std
outsl
arpl
jb
mov
call
lea
push
push
lea
push
call
les
aam
addb
insb
add
rolb
add
push
test
iret
shrl
mov
add
imul
pusha
lock
push
jno
in
mov
add
add
popf
add
mov
lcall
in
cmpl
jne
push
push
push
push
push
push
call
fadds
lahf
lods
in
add
add
add
add
add
add
pushf
add
ja
pop
push
testb
add
add
jne
loope
pop
cmpsb
add
add
nop
mov
popa
add
add
xorl
push
add
sub
pop
mov
jmp
push
push
call
add
add
xchg
out
add
mov
scas
lret
mov
add
jmp
pop
add
cwtl
mov
js
fwait
jnp
in
clc
pop
mov
and
push
lea
push
push
lea
push
call
fwait
add
out
aam
pop
jne
mov
iret
add
lds
shlb
push
xchg
mov
orb
lds
add
mov
outsl
add
leave
push
shr
shr
pop
xor
push
push
push
push
call
add
add
add
data16
xlat
add
add
mov
hlt
add
add
add
ret
add
pop
add
testl
faddl
lcall
rolb
dec
xor
pop
xor
push
lea
sub
sub
pop
dec
push
inc
xor
inc
pop
sub
push
push
lea
push
push
push
push
push
call
xorb
lahf
test
pop
add
mov
xchg
xchg
mov
sahf
pop
mov
xchg
nop
std
lret
cmpb
jne
filds
add
xchg
add
andb
add
add
pop
xchg
add
popa
mov
add
rolb
cli
add
mov
add
add
sub
pop
jmp
sub
push
lea
push
call
addl
lret
cli
clc
jo
jecxz
add
add
add
mov
out
mov
popf
int3
push
add
jmp
jp
mov
xchg
pop
add
test
jmp
mov
pop
mov
jp
scas
mov
mov
in
clc
pop
pushl
push
rol
pop
pop
push
inc
shl
sub
pop
sub
cmp
jne
push
sub
pop
mov
push
add
sub
pop
lea
push
push
push
push
push
lea
push
push
push
call
insb
aad
movsl
rcll
mov
add
add
pusha
add
add
out
pop
jge
cmpsb
imul
out
movsl
fnstcw
add
in
jecxz
push
mov
add
int3
push
add
push
fldt
jle
add
add
add
in
loopne
lcall
jmp
xor
add
pop
shr
add
push
lea
push
push
push
push
push
push
call
stc
mov
xchg
pop
push
mov
pop
out
jno
add
jle
jmp
add
push
roll
add
add
add
add
add
jae
add
fsubl
mov
lahf
cwtd
cld
add
sub
push
sub
shl
add
ror
pop
pushl
pop
push
shr
add
pop
shr
and
push
sub
ror
shr
dec
pop
sub
cmp
jne
push
push
push
call
xlat
pusha
les
add
xchg
jle
add
add
rclb
lret
mov
mov
jo
enter
cmc
add
add
fsubrs
lcall
push
push
push
push
lea
push
push
push
call
pop
xchg
movsl
cli
cmpsl
push
add
sahf
pop
xchg
jns
jecxz
add
nop
je
jbe
add
xchg
std
clc
mov
mov
mov
icebp
fidivrl
in
lcall
add
push
push
sub
xor
not
pop
mov
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
rolb
add
faddl
imul
add
mov
add
xlat
mov
enter
cld
movsl
gs
xchg
clc
push
out
popf
loop
mov
add
add
fcompl
cld
push
push
push
push
push
lea
push
call
xchg
xchg
movsb
sarl
add
add
cli
add
add
add
add
add
add
cmpsb
cmpsl
add
lock
add
mov
add
add
add
add
mov
add
add
test
add
pop
push
push
sub
xor
shr
shl
pop
push
push
push
inc
not
ror
pop
push
push
push
push
push
call
add
mov
add
pop
add
fadd
add
clc
add
mov
add
add
lcall
push
push
lea
push
push
push
lea
push
push
push
call
add
add
xchg
in
mov
add
mov
add
add
add
push
mov
add
pop
add
mov
lea
shr
jne
fiaddl
xchg
popf
add
movsb
pop
pop
enter
add
in
lahf
mov
add
xchg
jns
in
loopne
lcall
pop
or
out
mov
dec
pop
mov
sbb
add
add
add
incb
enter
add
add
xchg
xchg
out
add
add
fiadds
add
add
mov
add
add
add
add
loopne
in
lock
lcall
push
cmp
push
push
push
push
push
push
call
loope
add
lea
add
mov
add
mov
add
add
in
in
lcall
ljmp
add
not
pop
shr
add
push
push
push
lea
push
lea
push
lea
push
push
push
call
hlt
add
mov
orl
mov
jo
movsb
into
iret
in
mov
sti
add
add
add
mov
push
push
lea
push
push
push
push
lea
push
lea
push
call
hlt
add
cli
mov
testb
mov
cwtl
lods
addl
push
jp
cmp
add
addl
push
out
nop
add
add
push
gs
sub
pop
add
push
push
push
push
call
mov
scas
add
stc
add
rcrl
roll
add
add
add
iret
add
add
add
jo
xlat
add
negl
lret
add
jnp
add
movsb
pop
push
jl
test
xchg
add
lcall
jnp
push
rol
add
pop
add
xor
push
push
lea
push
push
push
call
shll
add
lods
movsl
jl
cmpsl
roll
jle
mov
gs
add
testb
mov
sub
pop
mov
push
pop
and
rol
push
push
push
lea
push
lea
push
call
test
out
add
add
add
scas
add
enter
fadds
data16
in
fisttpll
idiv
stos
int
rcll
add
add
movsl
mov
sub
pop
rol
xor
push
sub
shr
sub
pop
inc
push
not
pop
cmpb
jne
push
lea
rol
pop
add
cmp
je
push
not
not
sub
pop
add
push
lea
add
shl
not
pop
cmpl
jne
push
push
push
push
push
push
push
push
lea
push
push
call
push
add
xchg
add
push
push
add
add
jmp
pop
shlb
add
add
shll
aad
add
aam
in
add
int
xchg
fiadds
add
mov
add
add
insb
xchg
data16
fs
push
sub
pop
xor
pop
push
push
push
call
out
xchg
push
stos
aam
push
add
add
pusha
call
mov
fildl
test
clc
adc
sub
pop
pop
push
shl
pop
pop
push
dec
pop
pop
push
push
lea
push
lea
push
push
push
call
xlat
gs
add
add
add
jae
sti
xchg
std
add
js
call
call
int
add
dec
sti
call
add
push
lods
mov
data16
in
add
jmp
add
jnp
sti
add
mov
ret
in
call
push
lea
push
lea
push
push
lea
push
push
push
push
call
push
jb
into
mov
add
icebp
push
fcmovnbe
add
add
add
addr16
jae
push
les
hlt
test
add
add
push
lret
mov
add
push
add
mov
xchg
add
loop
add
repnz
push
stc
pusha
xchg
add
push
sub
pop
ret
push
shl
not
pop
mov
add
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
pop
fiadds
add
fs
into
les
mov
iret
mov
add
add
jae
mov
add
jmp
push
loopne
push
sub
pop
push
push
ror
xor
pop
push
push
push
push
call
add
std
add
add
mov
cmpsb
mov
ret
add
add
mov
cwtl
js
add
movsl
add
pusha
jns
stos
aad
iret
add
add
mov
lahf
test
faddl
add
cmpsl
xlat
addr16
mov
mov
add
fbstp
sub
lcall
ret
add
pop
testw
pop
push
push
push
push
lea
push
push
call
add
fsubp
mul
add
xchg
into
mov
add
add
sar
add
mov
jo
bound
mov
test
cli
add
into
and
movsl
add
add
add
add
flds
roll
mov
push
dec
shr
sub
pop
push
call
push
push
push
lea
push
call
into
addr16
nop
add
xchg
add
add
add
add
add
rolb
mov
add
arpl
add
add
jo
mov
fsubrp
test
add
add
jbe
pop
in
fcoml
fdivrs
sub
pop
xor
push
push
push
push
push
push
call
mov
jge
push
in
pushf
add
hlt
pop
mov
add
out
add
loop
mov
add
add
stos
add
mov
fdivrs
cli
add
into
xchg
popf
add
lcall
pop
push
inc
xor
pop
pop
pop
push
dec
not
add
pop
pop
leave
push
xor
not
ror
pop
ret
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
int3
pop
lcall
pop
add
rolb
add
add
data16
add
int
mov
leave
add
add
out
rolb
add
add
mov
add
ret
add
add
enter
add
xchg
mov
sub
pop
mov
add
push
push
lea
push
push
push
push
call
jmp
cwtl
push
add
addb
add
jge
cmpsb
and
ja
add
xorl
add
int3
test
add
xchg
cmpsl
addl
mov
add
std
add
ja
pusha
pushf
gs
sub
pop
push
push
push
push
push
lea
push
push
push
call
add
in
add
out
add
add
mov
add
fildl
roll
mov
add
add
add
xchg
lods
add
movsb
sub
pop
push
push
sub
pop
push
push
pop
push
push
push
push
push
push
call
xlat
insb
hlt
lahf
mov
data16
fsubp
rolb
add
add
cli
stos
add
xchg
js
add
mov
loop
gs
out
add
rolb
mov
pop
mov
in
lcall
pop
or
sub
shl
pop
pop
push
not
not
pop
lea
sub
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
pop
out
mov
test
add
add
add
jo
add
pop
cwtl
push
add
jns
xorl
out
mov
xchg
mov
test
call
add
enter
add
popf
xlat
rolb
bound
cmpsl
into
aad
add
add
hlt
add
mov
xchg
in
fdivr
lcall
adc
aam
shr
push
push
push
lea
push
push
push
call
out
movsl
jmp
add
add
add
jns
fidivs
add
xchg
std
add
sti
add
jge
add
push
mov
call
add
push
push
push
push
call
jbe
arpl
jl
mov
in
push
sti
add
add
test
add
hlt
add
subb
add
add
add
lahf
flds
add
lods
aad
add
test
loopne
sbbb
add
add
xchg
add
iret
sub
pop
mov
push
sub
not
pop
add
push
pop
pushl
popl
push
rol
rol
sub
dec
pop
mov
push
rol
add
sub
sub
pop
add
xor
push
lea
push
push
push
push
push
lea
push
push
call
push
into
add
xchg
frstor
jnp
int3
lret
add
scas
ja
rclb
mov
ljmp
cld
add
add
mov
sti
add
lcall
lock
add
mov
add
add
push
mov
push
jb
add
jmp
lcall
adc
push
shr
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
push
add
gs
jno
add
pushf
fucomi
add
add
add
test
cmc
fucomp
lds
addr16
push
jae
out
push
mov
lods
add
rolb
pop
mov
fadd
cld
jnp
add
sahf
push
add
add
fcomps
rcll
pop
test
call
insb
nop
add
rolb
xchg
arpl
roll
add
fisubrs
add
add
movsb
fldl
add
push
add
mov
add
popl
lcall
rol
pop
push
shl
lea
pop
nop
push
xor
inc
lea
pop
nop
push
push
push
lea
push
push
push
push
lea
push
push
call
std
jo
add
addl
lcall
jmp
xchg
add
faddl
add
std
sti
faddl
loop
add
add
imul
mov
push
push
jbe
std
mov
jnp
mov
xor
push
dec
shl
inc
pop
nop
push
push
push
push
push
push
push
call
add
add
add
jge
push
nop
add
fwait
add
jnp
add
add
stos
sbbb
add
add
add
out
lods
xchg
add
add
add
add
stos
jae
in
in
lcall
push
xor
pop
inc
push
push
lea
push
push
push
call
mov
aam
lock
add
add
addb
out
mov
add
lret
add
cwtl
jnp
cltd
icebp
in
mov
ret
add
lcall
push
shl
sub
not
pop
nop
cmpb
jne
push
push
push
push
lea
push
push
call
add
add
xchg
test
add
std
loopne
mov
sti
add
popl
pop
add
add
mov
add
sti
add
fisubl
add
mov
add
pop
add
push
addl
add
fadds
push
add
out
push
lods
mov
call
ss
push
shl
pop
nop
nop
push
shl
pop
cmp
je
push
lea
lea
pop
nop
push
ror
lea
pop
nop
push
xor
dec
pop
inc
push
push
push
push
call
mov
pop
add
insb
sti
add
frstor
add
add
add
sar
pusha
jnp
xchg
add
stc
fadds
lods
jmp
jecxz
add
push
add
add
add
add
bnd
lret
add
test
add
add
aam
jmp
in
lock
nop
push
push
push
push
push
lea
push
call
add
mov
jbe
push
js
add
add
add
rolb
add
add
add
test
sahf
jp
add
xchg
add
mov
pusha
ja
mov
stos
add
icebp
add
je
add
push
shr
pop
cmp
jb
push
pop
xor
push
push
call
adcb
pusha
ljmp
push
fisubrl
mov
add
fwait
push
fstpt
add
push
clc
add
int3
pushf
add
add
out
add
popf
add
testb
in
call
in
clc
lcall
adc
add
push
lea
push
lea
push
push
push
call
scas
add
xchg
add
add
incb
sahf
faddl
jle
mov
rol
testb
shl
add
stos
add
ret
mov
lret
add
add
push
je
cmp
add
add
add
out
mov
fsubrp
add
out
int
aad
lds
sub
pop
mov
push
sub
add
pop
add
movzwl
push
sub
add
pop
mov
add
push
push
call
mov
add
push
js
add
pop
jnp
add
add
out
add
in
add
test
add
fadds
add
add
lahf
mov
in
sahf
add
add
in
sub
pop
mov
xor
push
shl
xor
shl
add
pop
xor
push
lea
pop
shl
push
push
lea
push
push
lea
push
lea
push
call
xlat
jle
add
into
test
roll
mov
add
add
stos
add
add
xchg
mov
popf
mov
add
stos
pop
mov
mov
add
add
repnz
add
add
cmpsb
add
je
add
mov
imul
addb
nop
add
loope
push
push
push
call
jnp
sar
jne
add
jmp
mov
add
int
int
push
add
add
faddl
add
add
stc
int
mov
filds
add
add
fistpll
add
out
add
mov
xchg
ret
hlt
pop
xor
push
rol
inc
pop
shl
push
lea
push
call
push
push
add
add
sti
add
add
add
out
aad
mov
movsb
add
mov
pop
pop
mov
add
xchg
add
add
aam
in
clc
pop
xor
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
ret
lret
add
iret
mov
mov
mov
add
add
add
xchg
lret
add
add
add
lret
sahf
add
roll
enter
hlt
fidivl
out
add
lahf
cld
mov
add
cmpsl
addr16
add
enter
xchg
addl
hlt
push
push
push
push
lea
push
push
push
call
out
add
mov
xchg
add
mov
add
add
clc
in
pop
rclb
testl
clc
add
add
loope
into
mov
add
add
mov
je
add
into
pushf
sti
add
add
add
test
lcall
push
push
push
call
imul
data16
add
push
jno
in
mov
add
jns
mov
addb
lock
je
outsl
add
aad
clc
into
add
sub
pop
pop
push
push
push
lea
push
push
call
hlt
mov
add
popa
addb
mov
roll
add
add
loop
push
add
testb
jecxz
nop
xchg
add
addr16
add
addr16
add
mov
add
cmpsl
push
imul
shr
popf
imul
pop
sahf
sahf
ja
add
in
in
lcall
pop
push
add
pop
leave
push
pop
ret
push
push
push
lea
push
call
test
in
add
nop
push
add
cld
push
sahf
push
mov
mov
scas
cli
xlat
add
ja
ror
cwtl
test
addr16
fs
lea
add
mov
mov
push
not
xor
pop
push
push
push
push
push
lea
push
call
add
pop
pop
fildll
jecxz
in
add
add
add
roll
aam
add
add
fs
xchg
nop
scas
add
add
movsb
add
add
clc
lds
jae
ja
sub
pop
push
push
push
dec
add
rol
xor
pop
push
push
dec
pop
mov
push
add
sub
pop
mov
mov
push
pop
test
je
mov
push
inc
pop
test
je
push
lea
push
lea
push
call
add
add
ret
add
jbe
out
les
mov
xchg
push
add
rolb
add
faddl
jne
add
mov
sti
xchg
xchg
roll
add
jle
leave
add
rolb
in
hlt
lcall
notl
imulb
cmc
dec
pop
mov
push
sub
inc
shl
xor
pop
mov
push
ror
rol
add
lea
pop
inc
push
push
call
mov
push
test
lcall
add
add
add
sahf
add
add
jbe
icebp
add
add
popa
jmp
add
add
shl
aam
out
add
movsb
add
lcall
rorb
test
rorb
cmp
add
push
lea
dec
inc
pop
mov
push
sub
not
ror
shl
pop
inc
push
ror
ror
rol
pop
cmp
je
push
shl
pop
test
jne
xor
push
not
dec
pop
pop
push
push
push
call
add
jno
add
movb
popf
movb
add
xchg
xchg
mov
mov
push
add
loopne
add
addr16
xchg
jle
nop
push
iret
pop
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
scas
jl
iret
push
mov
icebp
mov
add
add
lods
stos
add
in
test
popa
test
test
lcall
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
call
arpl
add
ret
adc
icebp
add
add
mov
scas
add
roll
add
add
pop
xorb
push
push
push
push
push
lea
push
push
push
push
call
filds
lods
jecxz
add
pop
add
add
gs
pop
stos
pop
rcl
ret
push
cmpsl
add
shr
testl
jp
lcall
mov
add
cwtl
mov
add
sub
pop
leave
push
sub
add
pop
ret
mov
push
lea
pop
inc
cmp
jne
push
sub
sub
pop
lea
push
xor
shl
add
shl
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
mov
ret
out
cmpl
mov
add
ret
add
jmp
add
jmp
cltd
jecxz
data16
xchg
pop
add
addb
add
hlt
sub
pop
test
je
push
push
push
push
lea
push
push
call
xchg
lods
lea
pushf
add
add
mov
in
int
incb
add
add
add
add
jnp
add
add
imul
mov
in
jb
cltd
roll
add
jmp
xchg
jae
jmp
mov
add
cltd
cmc
leave
xchg
add
in
call
mov
push
lea
lea
lea
pop
add
cmp
jne
push
sub
ror
pop
mov
push
push
push
call
rolb
mov
add
mov
lret
outsl
mov
call
mov
stos
scas
push
add
mov
lret
add
xchg
xchg
scas
pop
mov
add
add
add
imul
scas
add
jle
add
pop
call
popl
rorb
into
add
add
xchg
inc
testb
jl
dec
lea
push
lea
push
push
push
push
lea
push
call
ret
bound
hlt
popl
pop
jnp
mov
jne
add
ror
add
sarb
aad
fistps
mov
repnz
pop
pushf
add
ret
add
add
pop
add
mov
add
lcall
roll
push
push
lea
push
push
push
push
call
arpl
mov
jns
out
loope
push
jnp
jns
add
pushf
add
add
loope
add
gs
mov
push
add
add
add
test
cltd
cmpsb
mov
mov
shr
ficoml
add
loopne
in
in
cmp
je
jmp
push
lea
push
push
push
lea
push
push
push
push
push
call
out
cmpsl
add
add
mov
imul
test
add
lock
lods
add
in
hlt
add
lods
add
sub
pop
xor
pop
push
pop
pop
push
push
call
push
call
mov
out
add
lea
iret
mov
add
fdivp
jo
add
arpl
add
movsl
add
add
repnz
mov
or
pop
out
add
ja
add
add
jns
add
fstps
add
sub
pop
pop
push
sub
dec
xor
sub
pop
pop
push
sub
pop
leave
ret
push
shr
inc
ror
sub
pop
lea
push
push
push
push
push
push
call
cld
jo
stos
xchg
add
imul
rolb
shll
insb
fs
add
add
movsl
add
add
pop
in
idiv
jl
lret
jno
mov
pop
pop
pop
push
add
pop
pop
pop
push
push
push
push
lea
push
push
call
add
mov
out
cwtl
add
mov
add
scas
add
jns
jnp
popa
mov
add
push
add
std
mov
in
call
add
push
lea
push
push
push
push
lea
push
push
call
add
add
mov
add
cld
add
rclb
les
add
add
xchg
xchg
mov
add
xchg
add
pop
sub
pop
mov
push
shl
xor
rol
pop
pop
pop
push
push
push
lea
push
push
call
add
add
mov
pop
add
ffree
insb
add
mov
pop
add
gs
add
add
popf
add
add
add
imul
add
movsl
cld
mov
imul
out
sub
pop
pop
push
sub
pop
pop
push
shl
pop
leave
ret
test
jae
stc
data16
test
ja
test
jae
sub
push
movsb
sub
cmp
jae
test
push
test
push
sub
jno
int
xchg
subb
add
out
add
sub
or
add
cmp
sbb
leave
repnz
jns
xchg
push
in
add
sti
pop
orl
inc
js
ret
adc
dec
pop
mov
mov
je
mov
loopne
cmc
sub
dec
cs
and
sub
loopne
dec
xor
pop
jb
outsl
pop
adc
xlat
sti
pop
mov
and
push
cmp
test
jl
xchg
ljmp
fiadds
arpl
dec
pop
dec
test
mov
lret
xor
cmp
cmp
in
test
push
ret
push
test
pusha
xchg
pop
cs
xor
pop
xchg
or
inc
mov
lcall
inc
scas
xchg
xchg
xlat
loopne
push
lea
mov
xchg
mov
lcall
add
pop
stc
into
cmp
xor
mov
sbb
mov
inc
movsb
xlat
pcmpeqd
or
cwtl
or
sbb
push
js
lret
dec
dec
leave
cld
out
mov
xchg
add
xchg
lea
xor
mov
xchg
js
jnp
test
jne
jp
jb
jnp
inc
and
and
in
inc
js
ret
imul
fisubs
fmuls
mov
cmp
bound
sbb
jg
push
sub
push
or
test
push
xchg
call
cmp
lods
cltd
fldcw
or
int
sbb
insl
inc
cld
mov
mov
int
mov
dec
mov
mov
fadds
addr16
es
push
mov
mov
imul
cmpb
stos
jge
icebp
cltd
xchg
loope
mov
dec
sbb
shrb
es
adcb
test
imul
imul
inc
adc
faddp
xchg
pop
xchg
xchg
or
xchg
inc
dec
mov
iret
dec
outsl
inc
xchg
clc
xor
mov
dec
hlt
or
fmull
lcall
dec
xor
push
lods
cmp
iret
adc
jmp
xor
gs
or
jae
int
mov
sbb
xchg
loopne
mov
mov
push
orb
or
jo
test
shr
pop
pusha
fidivrl
jbe
in
stc
cld
jno
or
and
mov
imul
rorl
jns
mov
pop
loop
test
lock
pextrw
outsb
pushf
hlt
fnstenv
push
pop
and
jb
cmpsb
lret
mov
scas
mov
xlat
or
es
addb
inc
shll
mov
push
jle
in
cmpl
push
test
jmp
rclb
mov
xchg
add
jne
scas
lods
cmp
int
fadds
gs
xor
hlt
outsb
icebp
and
xchg
push
stc
adc
ja
lcall
pop
inc
jle
inc
popf
push
not
into
push
sbb
movsl
xor
mov
adc
sarb
pop
mov
setle
stc
shll
lea
lods
lods
sub
leave
push
pusha
sub
adc
loope
adc
mov
cmp
xor
push
out
pop
add
mov
push
jecxz
rorb
mov
jno
dec
push
imul
lods
loope
add
ljmp
ret
dec
ds
sbb
push
inc
and
xlat
test
loop
cmp
push
ror
or
mov
sub
pusha
cltd
xchg
mov
pusha
out
jo
nop
scas
into
fimuls
inc
in
adc
adc
inc
push
sub
mov
mov
jae
test
lock
adc
repnz
sub
push
lods
pop
data16
das
lea
lcall
xchg
adcl
inc
fst
dec
dec
mov
mov
loop
jnp
mov
mov
movsl
inc
pop
pop
enter
mov
iret
adc
push
jnp
mov
mov
fprem1
push
dec
js
fwait
cmp
mov
pop
xor
std
mov
fld1
dec
and
loope
dec
out
jo
xchg
vcvttps2dq
aas
dec
mov
insl
rcll
movsl
dec
sbb
shrb
mov
xchg
adc
aam
pop
inc
adc
jmp
sub
cltd
mov
xor
xchg
loop
push
mov
add
cmp
dec
data16
ret
inc
test
repz
cmp
mov
mov
add
mov
ret
mov
inc
cmp
inc
inc
data16
movl
sti
es
cltd
shl
sub
push
movsl
std
dec
mov
inc
adc
jne
jnp
fcmovnb
out
pop
pop
xchg
int3
stc
or
or
cmp
pusha
push
xchg
xchg
rcrl
push
xchg
insl
rcrb
sbb
dec
sahf
push
pop
lret
cs
sbb
mov
addl
lret
jp
test
mov
js
jp
and
popf
and
push
pop
xchg
add
pop
cwtl
xchg
add
shl
cld
ss
mov
mov
xchg
pop
xchg
ss
fs
or
dec
inc
or
testb
lahf
cltd
mov
lock
sbb
push
std
aas
mov
pop
add
xor
fprem1
or
stc
aad
cld
icebp
mov
mov
in
dec
ja
and
adc
popf
sub
loope
out
mov
xchg
or
jb
xchg
add
push
xchg
mov
repnz
xor
mov
ficoms
add
ds
add
mov
mov
leave
popf
mov
mov
adc
pop
sbb
pop
daa
fstps
or
js
insl
arpl
jg
fwait
sahf
negl
test
or
and
clc
subl
add
shrb
inc
and
sub
lods
sbb
jecxz
adc
and
in
mov
xchg
shlb
jp
out
dec
pop
popf
sbb
jno
movsl
sahf
mov
adc
dec
or
sti
sahf
lock
or
inc
pop
and
sub
add
xor
ds
aad
xor
sub
or
and
out
loopne
dec
inc
sub
maxps
cltd
iret
mov
inc
repz
out
push
mov
xchg
and
jnp
push
mov
xchg
mov
fiaddl
mov
jne
jo
in
sti
or
fisubrs
mov
push
sub
dec
js
inc
faddl
adc
xorb
hlt
lret
repnz
sahf
and
test
ret
out
stc
sub
dec
push
mov
divb
xchg
clc
jmp
pop
out
stos
jne
inc
scas
mov
dec
icebp
mov
mov
sahf
or
icebp
jno
leave
out
pop
mov
cmpsb
bnd
pop
pop
pop
adc
or
sbb
into
cmp
sbb
or
out
or
test
cmp
xchg
fstp
pop
jge
or
and
mov
sbb
ja
and
pop
lret
clc
pop
fstpt
xor
mov
adc
xchg
cmp
or
andl
and
cmp
pop
fstl
sbb
xchg
sub
aad
negb
dec
lret
popa
mov
adc
addr16
xorl
enter
xchg
fwait
adc
jmp
fistpll
pop
insb
cmp
inc
out
pop
xor
fildll
out
xchg
sbb
dec
movsb
test
dec
in
mov
mov
iret
sbb
add
fmull
lods
dec
sbbb
fs
js
aas
jnp
movsl
jnp
cld
mov
push
mov
dec
dec
dec
push
adc
cmp
test
test
outsb
jne
add
jmp
in
xor
lods
dec
icebp
cmpsl
pushf
in
das
icebp
dec
push
add
imul
jmp
imul
mov
jg
in
icebp
mov
inc
test
cmp
addr16
pop
stos
insl
push
negl
ds
or
repnz
or
dec
pop
xchg
mov
andb
enter
add
xchg
adc
add
popf
outsl
dec
lahf
ret
orl
xlat
push
and
shrl
nop
insb
jp
jg
inc
sbb
je
pop
das
jns
mov
in
xlat
cld
in
sbb
js
hlt
insl
or
cmp
icebp
xor
lods
lods
int3
add
push
dec
fcom
test
add
push
cmpl
ja
enter
xchg
sar
daa
es
rorl
aaa
or
call
and
or
dec
cmc
ljmp
gs
cld
mov
call
push
mov
xchg
push
sub
js
out
add
pop
adc
dec
jbe
xchg
clc
cs
dec
add
dec
adc
push
sarl
pop
push
mov
adc
jbe
push
fwait
inc
cli
fnstcw
aam
cmp
dec
popa
sub
and
jmp
sbb
cltd
or
cltd
test
movsl
mov
lods
or
adc
lcall
mov
mov
inc
int
popf
test
sub
fsts
nop
icebp
dec
lods
push
inc
test
inc
outsb
imul
jge
xchg
inc
sbb
jmp
add
jo
or
add
popl
aam
jp
xor
cmp
imul
ja
pop
iret
mov
push
inc
daa
jle
or
mov
xor
arpl
pop
dec
je
xor
mov
dec
mov
cli
cltd
push
insl
mov
jl
lret
stc
jo
push
mov
adc
cmpb
cwtl
dec
sbb
in
mov
mov
push
dec
add
out
mov
stc
sbb
test
or
xchg
cmp
repz
loope
adc
push
cmp
jns
mov
adc
jbe
adc
cmp
lea
cmpsl
cli
lret
push
jl
pushf
icebp
leave
imul
and
pop
shl
adc
nop
mov
mov
dec
jno
xor
inc
jnp
sbb
push
pop
in
into
loope
inc
jno
fnsave
ss
push
jge
cmc
jb
pop
jno
dec
daa
outsl
sahf
lock
xchg
xchg
fxch
or
aad
imul
sahf
xchg
push
mov
aad
pop
adc
ret
enter
scas
aam
and
mov
dec
xchg
add
sub
popa
nop
xor
test
sbb
loopne
push
les
pushf
mov
lods
inc
cltd
push
jo
inc
add
cltd
jmp
xor
mov
int
mov
mov
dec
leave
xchg
or
sub
mov
mov
xlat
test
push
shlb
lods
lret
dec
adc
inc
insl
lods
lock
aas
or
and
ret
pop
jg
clc
inc
popa
adc
jle
xlat
mov
mov
inc
shll
pusha
add
xor
lahf
add
mov
dec
dec
ficoml
push
sub
adc
dec
int
dec
je
sub
xor
out
pop
sbb
dec
pop
push
testl
lret
stc
je
dec
aas
inc
icebp
bound
ficoms
xchg
lahf
inc
jbe
sbb
xor
and
repnz
lea
test
sbb
es
shlb
in
push
or
or
int
pop
filds
iret
es
cmc
mov
aas
testl
std
mov
and
fsubs
mov
sub
and
fwait
stc
mov
sahf
mov
test
flds
pop
or
ss
mov
test
jno
aad
inc
jl
daa
inc
inc
jecxz
sti
es
loopne
lret
bound
push
adc
and
dec
fwait
les
mov
aaa
inc
push
aas
inc
addb
cmc
mov
fs
loop
ss
or
gs
dec
mov
jl
repz
mov
dec
jae
sbbl
ljmp
es
rcll
insl
scas
fs
pushf
xchg
mov
in
pop
test
jmp
stos
cmp
outsl
mov
imul
fcmovne
arpl
add
push
aad
jg
xor
inc
fdivl
mov
inc
push
lret
mov
sbb
push
push
or
or
movsb
push
cmp
pop
std
push
rcl
inc
rolb
loope
jae
lcall
dec
lock
mov
mov
jno
pusha
test
dec
push
mov
out
outsb
repz
push
aam
outsb
push
pop
cwtl
fisttpll
leave
add
and
fcoms
jge
nop
loopne
push
sahf
outsl
lret
pusha
jns
repnz
mov
in
add
cwtl
pop
fldcw
shll
sbb
iret
pop
jg
arpl
ja
push
and
sti
mov
push
decl
ret
cmp
mov
mov
inc
sub
sub
pop
test
repnz
xlat
cmp
dec
cwtl
push
aam
mov
cmc
sbbl
push
daa
pop
cld
jle
cmp
jmp
and
mov
cld
pop
rcrb
mov
mov
pop
dec
ss
sub
sub
scas
jno
test
popf
fmuls
cmp
mov
sub
jp
scas
mov
push
cli
mov
xchg
pop
sbb
shll
dec
bound
dec
jecxz
jge
jns
sub
push
das
lcall
cmp
imul
pop
cld
lods
pushf
dec
popl
test
mov
pop
fwait
loop
mov
fsubrp
or
adc
ret
call
in
sub
xor
clc
cltd
subb
push
pop
loopne
xor
sbb
jns
dec
loop
add
sbb
mov
cmpl
mov
std
sub
mov
js
mov
or
mov
inc
add
stos
lret
test
movsb
cs
mov
mov
ret
fwait
inc
jns
push
cmp
lods
arpl
and
push
fdivrp
and
sbb
xchg
lods
or
in
cmpsb
imul
loop
js
leave
sub
cs
mov
add
adcb
fidivrs
stos
icebp
jle
jl
mov
push
scas
stc
rorl
loop
sbb
mov
dec
add
cmp
lret
cwtl
addl
push
mov
je
jnp
jns
pop
lods
loopne
adc
aam
rcll
jno
hlt
mov
fwait
movsb
xor
mov
add
out
insl
mov
lods
jge
inc
mov
data16
push
data16
in
jmp
subb
mov
sub
adc
jmp
fadds
int3
mov
std
push
sbb
adc
scas
outsl
outsb
jae
imul
dec
add
call
call
out
mulb
push
jg
mov
fiaddl
int
mov
cmpsb
and
jne
lahf
sbb
lock
incb
sti
or
loopne
xchg
push
jl
cwtl
lret
push
lret
pushf
cmpsl
xchg
movsb
inc
mov
int
mov
pushf
imul
pop
mov
hlt
dec
imul
rcrl
es
mov
in
scas
movsl
or
nop
push
xchg
in
mov
push
ljmp
cwtl
sbb
push
mov
mov
stc
es
push
or
mov
clc
lret
pop
std
fmuls
hlt
mov
xchg
push
mov
cmpl
xor
orb
dec
addr16
adc
scas
push
mov
xor
cli
dec
aad
ja
adc
cmp
outsb
shlb
adc
and
cmp
call
sbbl
dec
dec
mov
mov
add
adc
rcrl
inc
ss
mov
jle
push
faddl
sbb
es
pushf
inc
ljmp
jns
vmovaps
lds
pop
lret
fstp
shrb
push
dec
xchg
jb
stos
pop
dec
xor
loopne
pcmpeqb
test
push
js
std
mov
ret
fildll
mov
adc
xor
xor
xchg
add
popf
pop
sti
cmp
mov
or
cmc
xlat
jl
lods
lds
fwait
out
push
pop
xor
lret
repnz
cli
es
pop
sub
push
jb
sbb
adc
xchg
pop
cmp
push
push
leave
pushf
fs
sbb
mov
cmp
push
mov
adc
jb
lcall
arpl
sub
adc
cltd
dec
pop
and
mov
scas
mov
mov
out
popf
push
pusha
cmp
jle
cltd
in
add
xchg
pop
pop
jle
sub
int
cli
rcl
jnp
pop
hlt
sub
fadds
ss
repz
sbb
ret
inc
out
lods
cld
push
fnstenv
out
test
add
or
jmp
pushf
inc
sti
fdivrs
inc
xor
and
mov
icebp
jle
out
pop
sahf
mov
mov
fiaddl
push
dec
jnp
jg
xor
cmp
mov
sbb
xchg
sub
hlt
fmuls
sub
jle
xchg
and
cmpsb
jne
sbb
mov
mov
test
aad
push
lds
jecxz
or
ficoml
movsb
mov
shrl
jb
dec
insb
jno
filds
inc
jg
and
rclb
sahf
push
jle
jecxz
mov
out
adc
icebp
arpl
xchg
aas
xor
call
gs
ljmp
and
pushf
shll
hlt
aam
mov
jg
or
xor
jp
out
in
and
adc
sub
mov
mov
into
test
dec
std
mov
cmpb
and
jbe
dec
inc
sbb
mov
or
inc
lcall
cli
mov
pop
mov
faddl
mov
lret
adc
shll
rcl
xchg
inc
sbb
fdivrp
scas
xchg
add
and
adc
ds
mov
sub
dec
jp
xchg
and
and
xchg
mov
data16
arpl
in
lds
jecxz
pop
mov
push
jecxz
and
sub
cltd
imul
xchg
out
lahf
jbe
test
mov
dec
cmp
ss
and
dec
or
in
jae
test
loop
xchg
imul
xchg
xchg
jbe
shlb
mov
sarl
sbb
mov
fnstsw
mov
and
xor
xchg
popf
inc
aaa
add
jns
out
leave
or
or
fcmovne
jne
inc
lahf
fldt
and
sbb
mov
sbb
call
xchg
add
int3
cmc
adc
jnp
movsl
aam
xor
push
enter
pop
sbb
xchg
fsub
jecxz
mov
in
sbb
in
or
js
ss
and
push
add
popa
in
cli
es
ja
addr16
dec
addr16
xor
jno
lods
shrb
adc
cmp
and
adcl
push
push
inc
shrl
ret
inc
aas
repz
subl
jbe
outsl
sbb
add
fidivs
ret
adc
dec
xchg
push
shr
mov
cld
mov
pop
das
scas
ja
push
sahf
iret
aas
mov
add
jbe
pop
cmpb
xchg
js
shll
test
scas
stos
sbb
shll
xlat
data16
not
or
pushf
aad
adc
push
mov
jg
cmp
aam
inc
shl
fdivrp
push
fiadds
mov
jb
fstpt
fisttps
pop
add
ljmp
in
jl
outsl
aas
xchg
add
loopne
mov
sub
movsb
sbb
pop
clc
cmp
pop
xchg
lret
int3
notl
jge
out
lock
jbe
mov
xchg
lret
movsb
aam
roll
es
mov
xchg
dec
mov
lcall
mov
jns
div
imul
pop
pop
repnz
xlat
dec
mov
xor
inc
jl
outsl
lods
ja
pop
pop
mov
adc
dec
insb
adc
adc
xchg
push
jno
jle
stos
ss
xor
call
aas
loope
clc
xor
cmp
fistpll
cmp
ljmp
stos
mov
inc
mov
lahf
mov
mov
orl
mov
movsl
pop
lea
cmp
xor
pop
jmp
inc
xor
and
lret
cmp
mov
pop
xor
inc
xor
fs
lods
jae
ds
mov
notl
xchg
rcrb
mov
add
icebp
xchg
test
test
imul
enter
sti
ss
fidivrl
in
dec
sbb
push
jb
pop
xor
and
sub
aam
inc
cmp
mov
sahf
lods
lahf
add
cmc
mov
fsubl
mov
xchg
test
cmc
into
inc
mov
rol
gs
jno
push
pop
inc
mul
sahf
xchg
bound
jno
fs
sbb
sub
mov
xor
xchg
push
dec
insb
inc
jl
iret
leave
icebp
mov
mov
adc
push
inc
insb
lcall
xlat
test
scas
aas
in
push
inc
add
add
in
loope
inc
jne
test
dec
mov
and
fistpll
js
push
imul
out
and
ds
lcall
jp
sarb
fsubl
xchg
add
lods
les
iret
jnp
adc
int3
inc
cmp
jmp
cs
ret
push
pop
sbb
xchg
mov
into
add
lret
fidivs
jecxz
hlt
out
outsb
mov
jne
out
out
aam
xchg
push
dec
leave
inc
sub
xor
add
arpl
pusha
fs
pop
and
push
sub
dec
insb
pop
mov
scas
mov
mov
orl
lahf
pop
dec
loope
add
pop
adcl
int3
lret
xor
in
fildl
aam
mov
scas
or
in
adc
sub
cmp
xor
iret
pusha
jb
lret
fs
fidivl
push
mov
push
mov
push
jns
push
jo
sysret
push
jl
and
push
fistpll
lods
sub
cmpsb
and
fmull
std
cld
sbb
inc
mov
xchg
test
xchg
icebp
adc
out
out
mov
adc
cmpsb
xchg
fldcw
jecxz
mov
cmc
pop
jnp
mov
lcall
xor
gs
mov
or
sub
pop
pop
addr16
mov
pop
outsb
cmp
push
andb
int
enter
mov
cmp
adc
dec
adcl
sub
fcomps
add
add
lds
lock
sbb
popa
jnp
mov
imul
test
jle
sub
shll
sub
mov
pop
pop
mov
in
test
lahf
xchg
dec
push
push
popa
xchg
dec
repz
imul
fisttps
cld
shlb
jp
out
and
in
jl
inc
ja
mov
xchg
jp
pop
lods
xchg
add
jecxz
fisubrs
push
sbb
nop
test
nop
push
in
incb
xchg
mov
insb
mov
cmpl
xor
sub
mov
sarl
add
divl
subb
adc
fadds
dec
cmp
stos
xlat
cmp
push
pop
xor
insl
cmp
movsl
mov
in
shl
rcr
dec
mov
jecxz
and
fidivrl
push
adc
hlt
cmp
cmpsb
pushf
das
adc
pop
out
adc
add
loopne
jb
ljmp
pop
sub
adc
dec
cmp
inc
cmp
bound
test
mov
fldenv
insb
mov
sarl
mov
pop
test
cmc
int3
inc
ja
sub
push
xchg
lods
test
jg
push
dec
imul
fcom
xor
pop
jmp
add
cmp
inc
sahf
movsl
popa
repnz
inc
out
mov
leave
or
lock
mov
lahf
std
mov
mov
inc
xorb
or
pop
arpl
push
aas
aaa
xchg
cmp
xor
jnp
icebp
push
movsb
repnz
fdivrl
mov
jp
mov
call
add
dec
xchg
sub
xor
xor
in
pushf
mov
ffree
or
sub
push
xor
in
push
dec
test
jmp
sbb
stos
mov
stos
mov
pop
inc
cmc
test
cmpsb
cmpsb
movsl
arpl
jp
loopne
sub
sbb
pop
sti
lret
mov
add
jmp
lods
mov
rcrl
adc
in
loopne
push
pop
and
push
mov
ja
and
sbb
stc
push
cmp
ret
pop
cmc
or
cmpsl
iret
in
mov
sbb
xchg
pop
in
mov
enter
iret
add
shrl
aas
and
rclb
jno
jb
ljmp
pop
stos
es
adc
or
inc
test
rcll
pop
mov
stos
or
ficoml
jle
push
and
or
xchg
sub
enter
cli
loope
adc
imul
aaa
pushf
imul
enter
fmull
dec
in
in
popa
cmpsl
pop
mov
lret
aad
and
mov
inc
stos
inc
mov
iret
sbb
jmp
rcll
nop
add
jo
mov
rcl
repnz
mov
loope
adc
popf
fcomps
lcall
jge
xor
loop
mov
lock
fmuls
popf
mov
sbb
shr
repz
and
pusha
out
mov
lret
or
loope
cmp
mov
inc
stc
in
aaa
icebp
or
and
scas
push
jg
fnstcw
xchg
arpl
and
outsl
mov
arpl
lahf
shll
push
add
dec
cmp
andl
mov
fdiv
inc
push
or
mov
jbe
movsb
out
fisubl
mov
cmpl
mov
in
out
mov
cmp
test
xor
cltd
sbb
adc
pop
push
pop
mov
adc
add
sbb
mov
dec
adc
xlat
and
pusha
and
and
mov
stos
shl
mov
sbb
bound
sub
mov
loopne
std
cmp
or
outsb
dec
mov
dec
mov
out
pop
pop
shrl
repnz
test
adc
ret
into
inc
cmc
loopne
ror
arpl
mov
sbb
fucomi
dec
push
lcall
inc
inc
adc
fstl
jmp
repz
out
pop
inc
lods
sar
mov
cwtl
push
sbb
or
fwait
push
hlt
ret
popf
and
divb
mov
and
xchg
std
and
in
scas
insl
addb
sbb
loop
cmpsb
mov
push
jne
push
inc
cld
cmp
pop
cmpsb
lods
cmp
iret
jne
jbe
add
hlt
and
cmp
rdtsc
mov
call
clc
mov
cmp
std
or
dec
add
nop
bound
iret
inc
repnz
inc
in
div
fdivs
mov
mov
stos
mov
loopne
mov
pop
xchg
mov
into
push
enter
hlt
imul
and
test
daa
dec
data16
push
ss
push
cmp
das
ss
fwait
aas
mov
mov
or
push
push
sbbb
jp
rolb
bound
pop
sarb
fs
pop
jbe
mov
jecxz
add
sahf
leave
bound
fwait
mov
insl
sbb
js
pop
addb
movsl
insl
ljmp
mov
push
insb
and
insb
cli
push
stos
and
je
icebp
stos
jo
fisubl
cmp
cmpsb
sbb
inc
sbb
cmp
or
dec
hlt
mov
add
incb
sbb
dec
pop
or
and
or
ret
xchg
pop
in
mov
ja
sub
mov
popa
idivb
fwait
pop
mov
jle
or
jno
rcrl
out
sub
cmp
testb
fsubl
test
mov
fst
rorl
or
or
add
cwtl
hlt
outsb
or
cmp
mov
mov
into
test
gs
xchg
sbb
out
mov
sub
fwait
cmp
stos
in
inc
test
jge
add
jbe
incl
pop
add
lret
sbb
inc
pop
call
lds
jmp
cwtl
enter
push
lock
std
call
gs
add
sub
aad
mov
or
int3
jp
notb
in
mov
and
pushf
stc
lods
cmp
fisubrl
mov
aas
inc
lret
adc
inc
xchg
add
cld
out
xchg
sbb
and
nop
jecxz
push
or
movsbl
loope
and
xor
xor
and
mov
or
dec
loop
jae
or
loopne
scas
add
mov
lcall
icebp
bound
pop
sub
jl
adc
push
dec
dec
popf
lock
pop
jl
pop
jp
std
cwtl
push
mov
jb
test
imul
sub
fucomi
xor
push
int
push
rcr
add
scas
xor
dec
jae
add
inc
fdivrp
jo
ret
push
fnsave
add
andl
je
jg
add
fiadds
cmc
movsl
inc
popf
adc
ds
fcompl
push
in
push
cwtl
ja
or
ret
and
jb
int
mov
cltd
fldenv
aad
das
mov
jmp
push
aam
cmc
dec
mov
sub
jnp
gs
es
fsubs
push
cmp
pushf
shl
inc
lods
fadds
int3
jne
mov
jb
xor
inc
cli
sbb
cmp
xlat
xchg
ret
cmp
lret
stos
or
jbe
fisubrl
push
mov
sub
bound
push
sub
inc
dec
insl
mov
mov
rcll
das
mov
and
mov
iret
mov
lret
xchg
inc
add
in
jle
xchg
jecxz
aas
decb
out
mov
mov
add
or
add
pop
mov
movsb
adc
imul
sbb
lret
sub
pop
js
pop
add
jb
popf
out
cmp
shld
or
inc
sub
test
in
fcmovb
add
lret
jge
cmp
repz
lret
loope
scas
inc
sbb
add
xchg
mov
xor
xor
sbb
xchg
xchg
dec
jnp
cmp
dec
popa
add
inc
out
nop
in
mov
cld
lods
lods
mov
adc
sub
sarb
iret
sub
xor
push
and
add
lret
push
sahf
push
pop
repz
push
repnz
dec
leave
xchg
sbb
mov
je
frstor
xlat
inc
bound
mov
in
mov
fmull
idiv
mov
or
adc
mov
add
mov
lods
pop
stos
xchg
xchg
or
lods
mov
sub
lods
cmp
push
movsl
loopne
lods
jbe
fwait
outsb
xor
push
inc
push
dec
arpl
push
or
sub
mov
jl
andl
enter
test
movsl
cmpsb
push
dec
push
mov
lock
push
sbb
push
mov
in
and
pop
cli
gs
test
aad
dec
cmp
ds
aam
dec
push
arpl
rclb
push
xchg
aad
neg
sahf
sub
test
sub
insb
dec
das
repnz
jae
movsb
or
les
stos
sub
push
daa
mov
js
in
lods
mov
mov
ficoms
insb
mov
pop
inc
push
cmp
subb
int3
and
stc
cmp
es
cwtl
testb
sub
pop
insb
addr16
jnp
and
repnz
cmpsl
imul
sub
mov
call
inc
inc
xchg
dec
and
pop
aaa
test
xchg
cs
sub
les
mov
cmpb
mov
lcall
fs
mov
into
sbb
loop
aad
pop
fld1
jne
outsl
xchg
mov
inc
jb
mov
iret
ret
repnz
cwtl
test
jecxz
call
cmpsl
mov
jecxz
jecxz
dec
mov
inc
outsl
dec
dec
push
adc
loop
and
and
push
mov
rolb
stos
push
icebp
xchg
mov
imul
add
fidivrs
sbb
pop
outsb
sbb
cmpsb
andb
sahf
inc
sbb
pop
jmp
rclb
orb
xor
scas
or
inc
subb
les
rcrb
nop
pop
mov
push
and
pop
data16
je
insl
xor
fdivrs
cmp
add
nop
jb
dec
dec
stos
cwtl
cmp
cmp
sbb
jb
jge
and
lret
mov
cmp
pop
inc
flds
lahf
shl
sbb
pusha
jno
mov
push
addr16
mov
or
repz
out
xchg
js
xchg
cmp
test
jg
mov
add
ret
test
and
loope
jmp
and
lods
add
mov
sub
mov
adc
mov
das
push
aas
movsb
dec
xchg
jecxz
add
cmp
mov
hlt
and
mov
inc
jle
hlt
or
loope
sahf
cmp
ljmp
fcmovu
mov
mov
stc
add
adc
cmp
mov
rclb
adc
xchg
mov
jp
stc
mov
ja
cmp
arpl
fnsave
movsl
push
sbb
cwtl
sub
xor
pop
stos
xor
movsb
fdivr
movsb
xchg
fnstenv
in
jg
sub
adc
cmp
or
sahf
mulb
fildll
cs
sub
scas
std
aad
sbb
int
aas
dec
jnp
lds
adc
add
jle
xor
sbb
ret
aad
nop
sbb
lcall
fwait
or
bound
jmp
repnz
xchg
mov
mov
push
fcmovbe
mov
ss
lds
pop
test
mov
inc
add
lds
dec
or
mov
or
sub
add
nop
push
cmp
push
jle
pusha
mov
sahf
fldl2t
bound
pop
dec
adc
dec
add
ficomps
sub
cltd
jecxz
mov
add
ret
call
dec
mov
addb
loope
fs
add
gs
imul
push
or
dec
insb
jne
out
mov
jle
rorb
dec
fimull
pop
popf
shrl
add
pop
pop
push
mov
xor
jle
ffree
pop
cmp
sub
mov
mov
mov
and
enter
in
mov
sbb
or
jae
cmp
popa
in
ja
or
mov
and
push
jno
cmp
inc
add
fwait
or
inc
pop
lret
and
jp
out
cwtl
add
and
push
pop
loopne
mov
cmpl
jne
pop
xor
xchg
out
or
in
jne
std
pop
jge
aas
std
push
push
xchg
imul
daa
xchg
fnsetpm(287
lahf
jno
jl
imulb
mov
push
out
xchg
clc
sub
fldl
push
aaa
push
and
add
std
push
jb
sbb
push
push
xchg
lea
inc
push
cli
dec
jns
jecxz
inc
pop
mov
push
stc
inc
dec
xor
sbb
cmp
pop
stos
cmp
xchg
ror
test
call
mov
std
dec
adc
xlat
call
or
mov
incl
pop
pop
scas
lock
cld
adc
sub
pusha
loope,pt
jge
or
sbb
dec
mov
in
test
movsb
test
pop
pop
lcall
nop
popf
imul
roll
pop
cli
sarb
dec
mov
adc
fisttpll
cwtl
call
jl
faddl
inc
or
sub
jl
in
arpl
dec
inc
pop
daa
xchg
and
mulb
xchg
ret
ja
loopne
mov
or
out
psubsw
ret
and
jbe
push
bound
movsb
jmp
cmp
fstp
adc
in
test
inc
push
dec
test
push
and
sbb
adcb
jl
nop
das
xchg
jmp
call
movsb
sahf
and
sbb
jecxz
adc
jmp
sarl
pop
nop
filds
push
adc
push
ss
push
mov
aad
or
sbb
mov
insl
inc
stos
test
jp
hlt
in
cmpsl
adc
cmp
insl
rcll
test
inc
and
js
jp
enter
dec
or
stos
enter
int3
loop
fwait
imull
xor
mov
or
jp
mov
and
pop
dec
stos
push
daa
stos
adc
xchg
das
sub
push
dec
adc
cltd
add
mov
xor
xchg
jb
xor
mov
adc
imul
outsl
stc
or
lahf
jg
in
mov
addr16
push
cmp
fwait
int
scas
into
popf
out
cmp
iret
stos
cltd
sub
and
push
ret
test
mov
les
cmp
xor
or
or
pop
daa
sbb
inc
std
mov
arpl
xchg
push
inc
daa
fisttps
jbe
arpl
cmp
adc
xor
mull
sub
lahf
in
sub
push
outsl
loopne
pop
shll
lret
iret
pop
and
push
pop
imul
pop
jg
hlt
push
in
xchg
push
mov
xchg
insl
fdivrl
enter
xorl
ja
push
pop
jecxz
iret
lock
rcl
add
add
mov
fdivs
mov
movsl
jbe
mov
outsl
sub
dec
clc
push
mov
popa
mov
popa
push
test
loope
add
clc
test
jp
ljmp
inc
xchg
xor
inc
cmpsl
cltd
out
notb
cmp
adc
mov
ret
call
cltd
push
nop
push
push
dec
sub
pop
or
sub
mov
pop
xchg
mov
push
aaa
xchg
inc
xchg
decl
sbb
daa
jns
push
sarb
adc
push
xchg
clc
fistl
leave
push
data16
xchg
test
jmp
addb
mov
rcrl
adc
scas
inc
stos
pop
stos
add
lret
mov
adc
xchg
pushf
insb
pop
xlat
into
inc
pop
inc
push
cmp
ret
ret
mov
lret
or
into
lcall
adc
and
fs
sti
lods
xor
test
jge
fisubrl
scas
mov
push
bnd
dec
mov
stos
nop
rorl
jno
lods
mov
int
pop
mov
imul
out
cmc
ds
pop
inc
cwtl
loop
ds
std
xchg
and
xchg
xor
push
out
cmp
das
xor
movsl
sahf
mov
in
ret
fisttpl
mov
dec
xor
add
cs
aas
clc
daa
sbbb
int
mov
imul
lahf
mov
pop
hlt
jnp
jmp
pop
mov
mov
stos
divb
jg
popa
inc
dec
add
cmp
jne
inc
icebp
xor
xchg
idivl
cmp
sbb
and
pusha
inc
pop
adc
addr16
push
xor
xchg
add
rep
imul
xchg
fcoms
int
int
xor
or
idivb
push
xchg
loop
jbe
rcrl
loop
sbb
in
adc
pop
sbb
push
pop
xor
mov
mov
dec
mov
xor
lea
out
ljmp
cmp
les
inc
mov
pop
jb
movsb
and
adc
pusha
in
cmp
inc
and
fcomp
mov
push
scas
jae
idivl
int3
mov
imul
fadd
mov
mov
pop
icebp
testl
or
xor
stos
cmpsb
dec
xor
dec
clc
ds
xchg
jno
aaa
out
cmc
lahf
push
lods
jl
rclb
cmc
sub
incb
loope
jo
xor
mov
xor
sahf
imul
pop
sub
inc
pushf
lahf
sti
jno
push
icebp
cltd
popa
jge
xchg
repnz
movsl
adc
inc
iret
in
cmp
pop
mov
js
jns
sbb
dec
push
sub
dec
mov
inc
lods
jle
push
xor
or
fcoms
fwait
sbb
or
cli
es
popf
aas
es
and
xchg
push
pop
ds
mov
mov
and
cld
mov
inc
repz
lods
rcl
xor
mov
fwait
test
sti
jecxz
scas
inc
pop
cmpb
nop
stc
xchg
or
lcall
jne
mov
sbb
adc
sub
cltd
leave
xchg
fcoml
push
mov
xchg
iret
push
cmp
inc
or
mov
fistl
cmp
lock
sbb
insl
ret
int3
js
cld
in
ret
imul
dec
mov
xchg
flds
aad
dec
mov
enter
scas
popa
pop
insb
lcall
mov
push
int3
stos
fcoms
push
sar
daa
xchg
sub
adc
jb
std
jb
jmp
mov
push
push
xchg
in
aad
xchg
mov
addr16
add
fadd
sub
insb
pushf
rorl
leave
movb
fisubs
pusha
adc
jg
mov
stos
lods
enter
lods
jno
lea
das
xor
and
jo
jp
shrb
sbb
je
aas
and
or
sbbl
jp
add
or
jl
cmpsb
test
pop
cs
js
mov
pushf
sub
xlat
lds
xlat
dec
add
data16
push
rcrb
mov
or
es
fistps
push
mov
cmpsl
jnp
push
mov
jge
sub
jmp
pop
inc
sbb
push
fstpt
xor
sahf
pop
mov
inc
std
xchg
ret
adc
icebp
sub
outsl
shrl
orb
xchg
add
clc
mov
enter
pop
push
jecxz
jmp
gs
xchg
test
stos
jnp
in
dec
cmpsb
jb
adc
sbb
mov
mov
mov
sub
cmc
inc
pop
jecxz
sub
jmp
adc
incb
iret
mov
and
pop
cmp
add
loope
or
mov
pop
das
mov
aam
adc
movsb
je
out
jl
mov
mov
cmpb
xlat
pop
sar
jbe
pushf
pop
mov
xor
mov
mov
mov
xchg
sbb
add
imull
pusha
ja
dec
in
xchg
test
push
std
sbb
ljmp
lret
fsts
in
or
add
daa
dec
jnp
sti
xchg
ror
mov
pop
mov
mov
gs
jo
imul
lock
xor
notl
lcall
sub
xor
insl
lea
sahf
in
mov
inc
sub
push
fxtract
in
testb
xchg
dec
fisttps
jg
lods
pop
mov
mov
or
fistpl
dec
enter
push
fidivrs
xorl
sbb
orl
les
adcl
inc
cs
in
repz
aad
sub
mov
out
sahf
dec
sub
sbb
loopne
push
incb
fldenv
pusha
in
mov
mov
sbb
jecxz
loop
push
cmp
leave
fwait
loop
andb
cmp
push
sarl
sub
pop
movsl
mov
push
lret
das
or
xor
sub
mov
cmp
mov
sub
mov
sti
movsb
jl
test
push
cli
sub
and
pop
pop
lds
or
jle
out
aam
pusha
aam
stos
mov
jnp
jle
or
rclb
pop
cmp
jg
popf
sub
insb
scas
outsl
and
mov
inc
xchg
lret
lret
loopne
int3
loop
loopne
adc
cmp
popf
sbb
adc
mov
aaa
leave
mov
arpl
nop
xor
f2xm1
push
add
adc
cmpsb
pusha
lret
iret
dec
xor
inc
enter
mov
ret
or
fmuls
jl
cltd
sti
jne
sti
pop
mov
push
adc
push
int
mov
pop
stos
sahf
pop
shrl
xchg
sub
aam
mov
call
or
arpl
jg
push
dec
popf
cli
insb
mov
mov
mov
fidivl
popa
ljmp
lock
icebp
int
xor
pop
ja
sarb
xchg
sub
mov
fs
ds
sub
mov
leave
imul
pop
lock
sbb
mov
wbinvd
xchg
cs
ljmp
nop
call
and
shl
outsb
orl
cmpsl
sbb
cmp
pop
push
lock
test
mov
xchg
repnz
cmpsl
ret
mov
add
adc
aad
sub
mov
movaps
pop
and
push
nop
fwait
mov
xor
add
pop
lods
shlb
ret
cmpsb
shrb
xchg
ffree
rorl
cld
add
xchg
movsl
scas
adc
push
inc
pop
push
ds
xchg
mov
adc
inc
mov
rcll
add
push
notl
mov
lods
popf
adc
lods
pop
cmp
shrl
sbb
jns
stos
pop
ds
xchg
lods
adc
gs
push
gs
jmp
sub
xchg
icebp
out
xchg
add
or
and
push
es
xchg
xchg
loop
addr16
mov
into
xchg
sub
mov
pop
shl
push
add
ret
dec
loope
test
inc
mov
xor
xor
jne
es
cmp
mov
pop
or
sub
jecxz
xchg
test
popf
mov
and
cmp
enter
aas
les
add
mov
loop
mov
cmp
push
adc
in
andl
out
sbb
and
sub
call
xchg
dec
out
jg
cwtl
mov
jl
outsb
adc
outsl
pushf
sbb
mov
jp
lods
pop
popf
xchg
rorl
xor
mov
mov
fimuls
fs
cld
nop
test
mov
lcall
mov
mov
testl
in
adc
push
inc
outsb
out
iret
sbb
cmp
push
test
sub
inc
jle
stc
bound
fsubrp
lods
jecxz
xor
clc
push
xor
mov
adc
leave
icebp
push
aad
js
outsl
xchg
or
fcoms
daa
push
scas
leave
lahf
and
mov
ficompl
lds
icebp
push
dec
lods
movsb
cmp
cmp
out
mov
icebp
mov
mov
sbb
test
sbb
popa
stc
push
cwtl
mov
lahf
or
cli
sbb
dec
cmp
or
and
sub
ret
insl
inc
mov
pop
sub
lods
outsb
bound
divb
movsb
out
int3
ljmp
push
lret
testl
les
rcr
fmull
lahf
pop
add
stc
sub
xchg
push
and
xor
fistps
xchg
xchg
cs
xlat
pop
bnd
add
loope
test
xor
test
mov
push
sub
xor
movsl
stos
inc
dec
mov
adc
mov
fisubs
xor
xchg
cli
test
jl
and
std
clc
cmp
aad
sahf
fisttps
inc
inc
aad
pop
add
and
push
les
mov
mull
das
xor
imul
lahf
sub
mov
addr16
mov
dec
sbb
jmp
fsubp
gs
gs
push
imul
into
fsts
fnstsw
enter
popa
add
lret
push
push
inc
pop
lds
orb
test
incl
dec
setae
cmp
adc
xchg
pop
iret
or
mov
mov
xchg
add
and
and
hlt
les
mov
sahf
cld
mov
adc
es
in
stc
adc
xor
stos
cmp
repz
xor
dec
leave
sbb
and
dec
push
jp
shlb
movsb
mov
mov
xor
xchg
dec
jg
hlt
icebp
aam
and
add
gs
icebp
add
inc
js
sub
andl
mov
pop
pop
mov
movsl
sub
addr16
ljmp
xor
jnp
cs
xchg
nop
or
stos
or
das
cld
lods
push
pop
fs
push
fildll
mul
adc
popf
sarb
sti
and
mov
sbb
nop
and
test
pop
sbb
aam
xor
pop
negl
xorl
iret
cmp
ds
mov
push
int
mov
nop
push
push
sub
mov
dec
data16
ret
fwait
sbb
xor
sub
push
cmc
dec
fs
lcall
lds
mov
add
imul
jns
aam
fmull
rolb
mov
stos
cld
mov
sub
vrsqrtss
aad
ret
mov
loopne
fcoml
enter
js
scas
mov
insl
add
adc
push
push
in
daa
ljmp
pop
pop
jb
mov
insl
sub
or
enter
sti
pop
mov
popl
xchg
lock
add
jmp
dec
jp
fbstp
fwait
add
out
daa
int3
inc
sub
gs
movsb
aam
pop
sub
dec
xchg
lcall
rcr
jg
jl,pn
adc
outsl
flds
pop
lret
push
mov
ret
xchg
sti
lock
dec
mov
and
fwait
test
icebp
lret
mov
sbb
push
in
mov
push
pop
sub
jae
mov
jbe
das
jnp
shll
je
dec
mov
push
mov
cmc
sbb
mov
imul
jb
iret
ljmp
shlb
sti
fwait
leave
xchg
dec
les
test
jnp
clc
ja
jp,pn
push
pop
adc
or
data16
pop
mov
fidivrl
xor
adcb
pop
loope
mov
sub
dec
pop
in
mov
iret
jne
enter
out
js
cmp
das
mov
push
gs
sbb
addr16
aad
sarb
xorl
lea
sbb
mov
sbbl
ja
push
adc
out
dec
jns
xor
imul
xchg
repnz
call
shll
pop
push
mov
repnz
push
dec
icebp
or
lret
dec
xchg
xchg
in
jl
inc
or
jmp
rcl
inc
andl
popa
shl
daa
add
ss
cmpsl
mov
lods
aaa
outsb
and
fidivrl
and
cwtl
cld
aaa
test
arpl
ljmp
sbb
outsb
nop
loop
into
popf
in
in
shll
shrb
mov
sub
lods
mov
frstor
sarl
mov
inc
pop
jns
fs
push
pusha
sub
mov
dec
xchg
gs
mov
movsb
inc
pop
mov
pop
fs
sub
in
cmp
mov
shl
jge
loope
cmp
ret
icebp
cs
pop
sti
mov
xor
sbb
out
mov
sbb
mov
rclb
cmp
pop
loope
loope
cmp
inc
cmp
adc
in
push
jl
pop
movsl
xchg
loope
lret
xchg
mov
adc
jae
lods
adcb
pop
xchg
ret
loope
sbb
dec
inc
ss
cltd
dec
jle
inc
aaa
adc
xchg
imul
sbb
and
and
xlat
dec
out
jecxz
jno
in
add
mov
mov
test
lods
sub
mov
sbb
cs
loopne
and
mov
cmpsb
js
jg
lea
pop
shlb
push
mov
add
enter
jns
xchg
pop
stos
stos
pop
cmp
push
dec
mov
sbbb
hlt
rcr
xchg
add
jbe
xor
aas
mov
xor
dec
jae
and
dec
inc
fistpll
mov
lods
and
jb
sub
xchg
hlt
adc
xchg
sbb
es
les
test
or
icebp
shrl
pop
loope
pop
filds
addr16
dec
jb
stc
adc
mov
dec
lods
stos
sbb
mov
shl
into
sub
cmp
mov
jmp
arpl
cmp
xchg
or
cs
js
push
test
mov
add
add
in
cmc
and
into
je
lret
sub
xchg
xchg
in
in
mov
pusha
cltd
or
xor
jne
jge
dec
xacquire
movsb
js
mov
add
push
dec
jno
loope
scas
push
dec
xchg
icebp
jo
inc
cld
sub
or
add
sbbb
jge
rep
arpl
inc
lock
and
mov
cli
in
xlat
jge
int3
cmp
inc
dec
scas
jge
lcall
popa
in
sub
sbb
mov
scas
push
enter
push
out
xor
hlt
leave
into
pop
cmp
ss
jecxz
ds
mov
xor
data16
in
xchg
int
jl
inc
aad
xchg
adc
push
xor
in
mov
jbe
push
or
inc
mov
mov
jb
xchg
mov
dec
es
mov
mov
test
or
pushf
jnp
add
jecxz
std
push
cmpsl
mov
pop
and
xchg
jl
in
xchg
mov
cmc
pop
mov
pop
loope
lret
dec
data16
arpl
mov
int
outsb
mov
push
xor
xchg
jne
or
add
sub
decb
jge
mov
and
xor
ja
sbb
ret
aad
cmpsl
push
mov
push
shrl
mov
sub
pop
xchg
cmp
jb
mov
xor
pop
aam
fs
ja
vpmacssdd
inc
push
lds
pop
cs
jnp
cwtl
xchg
pop
sbb
dec
pusha
movsb
mulb
pop
fwait
mov
hlt
pop
pop
sub
add
int3
adc
mov
sub
push
jle
push
sub
push
xlat
lods
arpl
js
xlat
sub
push
pop
sarl
lret
sahf
in
inc
dec
cmp
cltd
repnz
int
and
sub
xor
and
dec
and
dec
add
pop
dec
jmp
cld
arpl
je
push
pusha
pop
inc
jge
push
into
mov
and
sbb
dec
xchg
bound
or
mov
jmp
jnp
aas
push
xchg
notl
ret
push
hlt
in
addr16
sbb
ficomps
dec
out
call
fwait
adc
jae
mov
imul
iret
hlt
bound
or
jge
arpl
jne
lret
mov
sbb
lods
and
test
jmp
and
outsl
mov
cwtl
add
inc
jnp
dec
ja
lds
icebp
ljmp
pop
lock
inc
mov
mov
mov
or
lahf
test
mov
jns
or
pop
xor
nop
outsl
or
pop
call
sbb
pop
xchg
ficompl
sbb
mov
xor
std
aas
xor
test
push
std
lock
xorl
clc
fwait
push
pop
mov
arpl
insb
inc
mov
adc
jmp
jns
lods
fildl
jp
push
leave
into
gs
cmpsb
stc
mov
fcompl
xchg
adc
rol
mov
test
push
dec
xchg
pop
icebp
sahf
inc
adcb
loope
mov
cli
mov
pop
add
inc
mov
test
or
loope
jb
pop
inc
xor
out
mov
repnz
jbe
lcall
and
and
push
repnz
in
jp
push
pop
cld
in
pop
sub
cmp
xor
shll
push
js
mov
adc
mov
pop
ret
fwait
test
or
sub
cmp
mov
push
push
mov
loope
orb
and
test
out
jns
in
or
mov
out
imul
sbbl
stc
repnz
fs
jmp
int
mov
cltd
and
rorb
mov
push
pop
stos
jbe
pop
out
add
xor
movsl
iret
sbb
bound
inc
pop
rol
sub
xor
sbbl
mov
push
loope
pop
repnz
xor
outsl
out
adc
inc
add
xor
fldt
movsb
and
pop
in
fnsave
pushf
int
outsb
test
sbb
repnz
pop
jno
cmpsl
mov
inc
lret
getsec
stos
fldenv
ret
jne
pushf
mov
or
cmpsl
inc
test
fsubrs
sub
lods
sub
les
inc
shl
insb
sub
pop
dec
or
aaa
or
sub
jnp
xor
sub
arpl
mov
push
fcoms
or
sub
dec
bound
sbb
mov
dec
mov
cltd
out
push
incl
insb
dec
daa
mov
dec
xchg
sti
pusha
jmp
clc
lret
jle
mov
and
cmp
xor
data16
stc
rep
xchg
sbb
or
jns
adc
fdivp
lods
inc
fs
mov
test
or
sub
cmp
mov
jae
xchg
sbb
fmull
fcmovne
into
jmp
shll
stc
cmpsb
lods
leave
mov
lock
clc
les
loop
jbe
xchg
in
dec
bnd
mov
aam
sbb
cld
pop
and
loop
inc
sub
in
pop
cmp
push
mov
dec
into
and
lahf
mov
ret
in
int
pop
add
lahf
ret
push
fsubrp
insl
in
inc
stc
add
loope
jae
or
scas
push
dec
cmp
and
push
aas
dec
jle
xor
sub
out
or
jecxz
sbb
fcoml
push
mov
push
or
icebp
mov
dec
cmp
in
ss
aas
push
jmp
add
inc
dec
std
in
jo
push
fsubl
pop
ret
inc
and
cwtl
sbb
fwait
cld
push
mov
adc
lea
shlb
jae
dec
lcall
add
pop
dec
cmp
mov
push
mov
add
movsl
and
push
cs
repnz
mov
hlt
ja
jle
sbb
xor
hlt
hlt
lcall
fsubrl
in
pop
jle
sbb
jo
icebp
enter
cmp
sub
pop
push
mov
je
adc
es
mov
cli
adc
cmp
add
sub
mov
dec
fsub
inc
hlt
jbe
add
jge
inc
vhsubpd
sahf
decl
popf
mov
pop
pcmpeqw
push
lds
sub
cmp
mov
fcoml
in
shl
mov
jo
sub
dec
mov
lock
rcr
push
scas
fists
mov
mov
clc
imul
or
xor
jg
lcall
cmpsl
icebp
faddl
xlat
and
cmp
outsb
into
nop
bound
stc
fmul
add
in
sar
or
nop
mov
jg
fs
imul
icebp
mov
rolb
sbb
inc
test
mov
fbstp
rolb
push
cvtps2pi
cmpsb
outsl
or
stos
sub
pop
xchg
mov
outsl
adc
dec
pop
xchg
addb
dec
or
and
out
xchg
popf
mov
or
loopne
pop
pop
dec
stc
mov
mov
imul
dec
dec
jecxz
test
dec
stc
gs
aad
cmp
jne
add
push
out
cmp
popf
and
shrl
fmul
subl
pop
js
ficompl
mull
imul
cwtl
insb
mov
repz
or
pop
fucomip
fnsave
sbb
sbb
rcl
scas
dec
mov
push
stos
fcmovb
dec
gs
jno
movsb
mov
ret
sbb
stos
insl
dec
lret
adcl
add
jg
cmpsb
fcmovnu
dec
sub
cmp
out
xchg
js
bound
stos
nop
bound
or
push
into
adc
imul
bound
xor
lock
aad
mov
jle
fstp
mov
sbbb
fcompl
popf
int3
mov
push
into
imul
push
pushf
jp
or
outsb
jns,pn
ja
cmp
lahf
pusha
xchg
stc
pop
aaa
imul
xor
aas
mov
dec
lods
addr16
mov
adc
sub
popa
ss
inc
pop
push
add
cmp
pop
test
pop
out
or
add
sub
xchg
nop
fisttpl
sbb
push
insl
adc
push
jg
xor
lods
rcrl
add
popa
lock
pop
mov
pop
mov
sbb
cmpsl
xchg
sbb
imul
rolb
xchg
sbb
aas
in
pop
nop
fsubrl
xlat
sub
in
fmul
cs
mov
sbb
xchg
jecxz
mov
mov
sbb
mov
mov
addl
addr16
adc
mov
lods
and
or
test
mov
xlat
mov
mov
or
mov
jno
addb
out
adc
nop
out
ret
jae
push
pop
mov
adc
decl
sbb
addb
arpl
cmp
std
fildl
mov
scas
into
fmuls
ret
ret
sub
les
sti
ja
insb
xchg
rorl
pop
mov
out
mov
mov
into
jne
out
lds
faddp
xchg
frstor
pusha
adcl
sti
mov
pop
mov
scas
int
push
outsl
jnp
adc
mov
push
int3
cld
lcall
mov
lcall
out
inc
xor
adc
jb
cmc
adc
loope
pop
xor
adc
mov
jb
in
pop
cmp
nop
jg
and
xchg
xor
xchg
xor
mov
add
add
shll
popf
cli
std
rcrl
xor
pop
aam
sub
mov
mov
xchg
add
pop
add
lcall
sbb
xor
out
lahf
fdivs
xor
sbb
fstl
push
lea
jns
push
dec
sbb
adcl
cli
test
pusha
pop
sub
mov
xchg
adc
xchg
test
aaa
insl
nop
mov
les
movsb
jae
add
shrb
adc
mov
xchg
sahf
mov
mov
adcl
cmp
push
jl
dec
cmc
dec
data16
fdivl
xor
lods
dec
sbb
mov
jb
mov
insb
or
aas
inc
push
push
das
lret
leave
adc
xlat
cmc
shlb
sbb
mov
aaa
dec
int3
loopne
js
xchg
jne
sbb
stos
push
dec
call
lcall
insl
ficoml
and
popf
pop
or
cmpb
ret
add
mov
pop
xchg
popa
cmpb
data16
je
lods
sbbl
push
in
and
pop
dec
rorb
jecxz
rorb
pop
mov
adc
sbb
xor
sarl
mov
xchg
lock
fisubrl
add
sbb
sbb
cltd
adc
xchg
cwtl
dec
dec
jecxz
push
cmp
outsl
ds
mov
and
push
pop
js
xor
movsl
dec
pop
in
pop
jo
cmp
mov
cld
adc
repz
les
pop
xlat
jp
inc
and
xchg
or
lods
repnz
add
pop
stos
mov
pushf
popf
loope
test
outsl
negl
jo
cmp
fstps
cmp
lahf
divl
daa
pop
sbb
mov
and
sub
mov
xlat
ret
outsb
push
cmpsl
sbb
or
sbb
iret
imul
mov
imull
dec
aas
cwtl
dec
ja
jb
jmp
out
movsl
jb
jge
lock
dec
out
push
lds
mov
popa
gs
or
mov
ret
arpl
outsb
inc
push
add
xchg
pop
jmp
sbb
add
push
inc
push
dec
adc
sbb
call
pop
dec
jns
push
fs
imul
adc
and
iret
in
xor
pop
icebp
pop
adcl
xor
pop
jp
cmp
jae
in
pushf
inc
sbbl
mov
hlt
xchg
std
push
inc
push
pop
test
xchg
dec
rcrl
lods
xor
mov
and
or
loop
pop
pop
fidivl
xor
mov
addr16
nop
mov
xchg
insl
xchg
mov
cwtl
stc
pop
pushf
cmp
nop
inc
fstl
int
ret
fwait
adc
xchg
aaa
aam
mov
inc
nop
adc
xor
loop
scas
pop
or
out
cwtl
sub
xor
xchg
xor
cwtl
lods
cmp
test
fldt
cltd
jmp
movsb
pusha
mov
mov
cmp
adc
lcall
push
lock
cwtl
in
lods
push
and
cmp
stos
xchg
pop
stos
pop
push
jo
push
sub
loopne,pn
push
sub
aaa
adcb
leave
sbb
jmp
push
adc
xchg
ja
dec
fdivs
jge
iret
in
push
adcb
push
mov
movsl
outsb
out
xor
xor
lret
cmp
jno
movb
add
xchg
movsb
and
js
sahf
scas
mov
xchg
gs
push
mov
movsl
mov
lahf
imul
in
push
das
push
xor
jecxz
fnstcw
or
loope
push
jnp
daa
int
jg
ljmp
fs
dec
push
mov
xor
stc
lds
inc
push
sbb
push
sub
aas
dec
dec
aad
call
cmp
lcall
pop
mov
fldenv
and
cwtl
cmpsl
js
inc
push
lods
int3
sub
loopne,pt
push
sub
sarb
cltd
jp
incb
xor
stos
ljmp
inc
cmp
imul
aaa
icebp
and
in
push
push
add
imul
cmp
adc
cmp
add
stos
jg
cltd
cwtl
arpl
inc
cmp
xchg
mov
data16
dec
add
or
cmp
or
jo
and
sub
test
inc
sbb
ds
sbb
mov
lahf
jmp
call
dec
lods
lods
add
aad
in
adc
adc
xchg
and
xchg
xor
push
inc
jb
mov
into
scas
mov
pusha
stos
int
mov
sub
adc
divl
pop
pop
nop
call
and
mov
popa
das
and
pop
pop
xchg
insl
jns
mov
rcrl
jo
jo
jmp
in
es
xchg
or
lahf
xor
mov
lret
cmp
cmp
stos
cltd
fstp
lret
je
clc
js
cld
pop
mov
jbe
bound
xchg
adc
jg
js
fucomi
aam
pop
xor
rorl
insl
and
add
jge
data16
in
pop
mov
inc
push
cwtl
add
mov
int
movsl
and
xchg
or
fs
xchg
adc
jnp
mov
stos
mov
cmpsl
push
es
fidivrl
adc
inc
inc
test
enter
and
imul
push
and
pop
push
pushf
aam
inc
jle
imul
pop
pop
xchg
inc
ja
lods
out
adc
rorl
inc
subb
push
stos
aaa
lea
lods
mov
dec
xor
imul
int3
pop
xor
pusha
test
in
aas
in
fwait
adc
scas
movsl
push
pop
ficomps
lods
popf
xor
aaa
out
xor
push
jbe
fs
or
iret
push
pop
sub
cltd
rcrb
shll
mov
test
cltd
inc
adc
cmpsl
sbb
add
mov
int3
out
pop
clc
pop
lods
sub
pushf
inc
arpl
pop
jno
mov
mov
inc
mov
mov
and
test
int3
lea
adcb
movsb
dec
xor
iret
ret
dec
pop
shll
mov
push
inc
daa
fbstp
popf
mov
fiaddl
mov
dec
out
adc
jb
cs
xchg
mov
mov
shll
mov
and
pushf
subb
xchg
lods
es
lods
pushf
stc
push
xlat
ljmp
and
int3
xchg
pusha
sub
shll
mov
jmp
lea
int
enter
inc
fstpt
inc
cltd
xlat
xor
arpl
jnp
inc
push
and
imull
jl
jbe
fadds
jp
jne
adc
mov
ja
shrb
mov
out
out
sti
call
popf
daa
lcall
shlb
enter
and
dec
cmp
dec
fdivrs
mov
mov
andl
outsb
xchg
mov
ss
mov
cli
imul
jl
adc
push
sub
sahf
jno
and
jns
aas
mov
in
fiaddl
mulw
cli
jae
sahf
jnp
push
insb
faddp
scas
xor
es
enter
addr16
in
and
lock
pop
xor
shll
pop
pop
mov
sub
stos
repz
mov
inc
aad
pop
add
sub
and
outsb
push
out
cmpl
mov
mov
fstpt
shrb
mov
pop
push
cmpsb
fiaddl
in
insb
imul
jl
cmpsb
mov
repz
jp
mov
and
dec
ljmp
add
mov
imul
lea
mov
push
mov
jb
stos
sub
sahf
mov
mov
insl
loope
repnz
mov
push
std
xchg
stc
jno
leave
shl
pop
lods
push
mov
pop
bound
adc
lret
pop
pop
fcomps
mov
fdivrp
test
aaa
imulb
cmp
gs
je
mov
mov
xlat
out
pop
adc
mov
repz
mov
repz
addr16
cmp
push
imull
fldcw
sub
stc
loopne
inc
sbb
pavgb
fnstcw
outsb
decl
xor
mov
rcll
loop
sub
std
outsl
sub
sbb
mov
jb
add
sbb
fistpll
je
outsl
repz
xor
jge
cmp
xchg
add
shlb
mov
pushf
adc
cmpsb
mov
adc
mov
mov
ja
fdivrs
cwtl
mov
mov
dec
jns
xor
cmpl
mov
lods
sbb
in
into
sbb
sub
add
out
dec
jle
out
jmp
jp
clc
stc
sub
xchg
lahf
dec
adc
xor
push
roll
jns
xchg
dec
ret
fisubs
jnp
pop
mov
or
xor
incl
sbb
out
jnp
dec
pop
jmp
scas
testb
inc
sahf
jecxz
cld
adc
fwait
xchg
inc
sub
movsl
push
and
cltd
jl
jmp
call
loope
pusha
sbb
inc
outsb
sbb
cmp
jp
dec
and
jnp
push
sub
call
lods
je
xor
imul
shrb
clc
ret
push
daa
sub
mov
xchg
fisubrs
jbe
outsl
movsb
stos
inc
mov
jno
into
or
scas
std
and
adc
inc
pusha
cmp
sbb
andb
bound
xor
fwait
data16
jae
ficomps
dec
push
ficoml
aas
imul
out
repnz
ss
mov
mov
xorb
sti
rclb
lahf
pop
sbb
cmpsl
imulb
fstpl
je
push
nop
inc
js
cmpsb
push
pop
cmc
mov
test
test
int3
mov
mov
int
add
jmp
aas
push
adc
xchg
xchg
mov
sahf
jl
mov
cltd
xchg
aad
add
mov
mov
pop
ja
adc
and
addr16
mov
sub
sub
imul
daa
pop
cmp
icebp
lcall
insl
and
ljmp
test
cmp
dec
inc
mov
and
mov
mov
cmp
sub
jecxz
dec
mov
mov
ljmp
lock
or
mov
test
sub
xlat
movsb
cmp
andl
cli
or
xor
sahf
cld
cld
sarb
dec
push
cwtl
cmp
enter
mov
inc
lds
movsb
std
loopne
stc
fcoms
jl
jb
imul
rorl
rcll
fnstsw
jge
cmp
enter
ror
outsl
push
inc
mov
insb
je
sbb
fistpll
cmpsl
add
fucomi
push
add
inc
mov
dec
xlat
or
inc
jl
jbe
lock
dec
and
das
popf
testb
add
lods
lahf
push
cli
jno
scas
aad
jl
push
add
lods
testl
cwtl
addb
and
out
add
inc
negb
inc
xlat
inc
pop
sub
imul
test
shlb
data16
cmp
cmp
mov
or
lods
ja
mov
imul
ljmp
out
cs
ret
mov
pushf
pusha
pop
jb
xchg
pop
xor
js
pop
lods
jnp
mov
andb
mov
inc
out
adc
cli
je
inc
mov
lret
push
loop
je
fcomps
mov
cmp
cmp
sub
cmp
lods
cwtl
mov
push
out
scas
adc
xor
pop
cmpsl
outsb
jne
lahf
pop
xor
aam
xlat
lds
sti
fwait
sub
das
xor
out
dec
lret
dec
lcall
sbb
sbb
add
inc
add
cmp
fisttpl
loope
xchg
lods
jle
cmp
xchg
pop
in
int3
sbb
rolb
lock
mov
nop
sarl
xchg
pop
jb
addr16
mov
adc
mov
shr
stos
and
call
pop
mov
aad
mov
adc
mov
shrb
cli
jmp
inc
xor
adc
jno
inc
loope
or
ret
inc
jge
sub
in
push
int
lods
arpl
fistl
and
xchg
rcll
aam
push
mov
push
rolb
aam
test
scas
icebp
iret
and
vpunpckldq
inc
popa
push
jecxz
or
lods
pop
inc
xchg
cli
cmp
or
mov
orb
lea
jae
cld
ja
leave
cmp
icebp
scas
int
test
fisttpl
dec
mov
add
sbb
sub
clc
xor
inc
leave
fildl
out
or
outsb
les
add
test
xchg
loope
nop
xchg
mov
into
lret
xor
xchg
mov
stos
mov
xor
fcomi
and
mov
in
pop
data16
les
and
push
push
mov
mov
clc
dec
insl
inc
inc
popa
arpl
adc
adc
sbb
xor
aam
cmp
xchg
sbb
mov
adc
push
mov
mov
cmp
cld
ds
in
aas
cmpsb
sbb
cmp
test
enter
test
xchg
adc
xor
iret
pop
xor
nop
jb
imul
sbb
xchg
xchg
push
out
scas
imul
xlat
ja
insl
dec
push
sub
cmp
jl
call
sbb
aam
push
sbb
rcrl
fcompl
cli
push
pushf
push
lds
mov
insl
jle
fimuls
std
pop
and
mov
and
push
scas
jmp
cmpsl
cmp
ret
mov
push
lods
mov
add
std
test
fnsave
js
test
mov
inc
xchg
mov
outsb
xor
shrd
mov
mov
iret
rol
insb
pusha
sbb
lds
lret
test
loopne
push
pop
ret
popa
dec
or
lahf
hlt
cld
into
push
shll
mov
inc
jne
sub
hlt
inc
sbb
out
aaa
stos
xor
jo
add
fildll
in
rclb
fld
xchg
lahf
push
push
mov
pop
ljmp
add
jge
in
mov
mov
movsl
les
lds
icebp
pop
icebp
ret
mov
iret
imul
roll
gs
loopne
in
ja
inc
pop
mov
xor
dec
lret
cltd
lret
jb
add
and
push
clc
cwtl
mov
lahf
int3
push
pop
jmp
push
xor
inc
pop
cmpb
cmp
xchg
mov
sahf
movsl
ss
dec
test
or
jmp
add
mov
ds
sti
xchg
cld
cmpsb
pushf
jne
rcrb
xchg
mov
fcmovnb
cmpsb
andl
outsl
negl
xor
mov
mov
mov
and
fld
repnz
xor
test
xor
cld
popf
divb
cltd
movsl
add
movsb
std
inc
mov
imul
in
lock
std
sbbb
jae
loope
sub
jno
mov
clc
fs
or
cmpb
xchg
lea
push
cmp
pop
fwait
sbb
sub
xchg
rolb
xor
test
lcall
mov
das
xor
testl
aam
cmpsl
cmc
jb
ret
call
or
ds
movsb
jecxz
add
into
roll
add
jnp
add
into
call
fnstenv
pop
pop
sub
jb
and
psrlq
push
lods
jne
neg
mull
addr16
and
mov
scas
mov
popa
bound
mov
dec
iret
clc
inc
ss
push
adc
test
loop
pushf
es
jecxz
or
add
mov
lahf
mov
ljmp
decb
xchg
push
sbb
dec
int3
sub
push
outsb
pop
push
ffree
and
or
sahf
shr
sar
or
negb
mov
fs
cmpsl
mov
mov
pop
or
std
and
push
and
sbb
ss
lcall
ss
jo
popf
repz
push
push
and
push
mov
pop
push
cmp
pop
movsb
cld
andl
neg
sbb
pop
or
mov
out
and
mov
lret
cmc
cld
cmp
sbb
pop
adc
ret
imul
jmp
xor
adcb
inc
cmp
enter
stos
insl
roll
mov
adc
xor
pop
xlat
dec
push
js
gs
loopne
and
fwait
push
add
mov
dec
data16
je
mov
aas
sub
mov
and
push
gs
adc
xchg
adc
out
adc
push
test
ss
movsb
ljmp
stc
jo
lret
xor
mov
pop
and
popf
stos
daa
jmp
ss
shll
sub
xor
sub
xchg
leave
scas
lea
inc
fsub
fs
lcall
data16
mov
lods
mov
push
cmpsb
mov
adc
rcll
shlb
fucomp
inc
xchg
mov
add
ret
push
push
or
mov
js
shll
addr16
fwait
push
fcmovnbe
mov
dec
into
push
cmpsb
lods
out
lods
aad
push
mov
add
mov
or
mov
xor
jl
mov
pop
cli
scas
dec
xor
ljmp
sbb
inc
add
leave
sahf
dec
or
jno
and
sub
sub
movsb
inc
inc
or
or
xchg
stos
lods
push
ljmp
pop
or
push
inc
fiaddl
add
insl
shr
xchg
add
daa
movsb
fcoms
or
cli
lahf
stc
lds
adc
ds
mov
lahf
pop
fsubp
shll
fidivl
loop
inc
cmpsl
lds
add
dec
adc
out
aam
mov
or
pop
jl
mov
in
pop
das
ret
mov
movsl
iret
ljmpw
js
insl
push
out
stos
orb
inc
int
push
mov
pop
loop
lds
push
push
or
nop
sarl
mov
scas
popa
icebp
jo
push
jbe
stc
nop
xchg
mov
fwait
push
sbb
aaa
jb
lods
add
jge
add
mov
cmp
sub
inc
aad
and
push
jmp
push
fnsave
add
daa
loopne
mov
addr16
rolb
adc
push
push
mov
jl
sub
mov
cmpsl
inc
lret
lcall
sub
ret
adc
jl
jb
hlt
into
and
ret
repz
cmp
mov
and
adc
aam
mov
int
movsb
scas
xchg
cmp
sahf
rcrb
push
cli
aam
push
jle
scas
dec
jl
xchg
and
mov
icebp
mov
mov
and
add
std
loopne
fsts
test
mov
pop
and
adc
jmp
fisubs
mov
xor
pop
and
sbb
leave
push
es
mov
add
sub
inc
pop
shlb
sbb
pop
mov
inc
je
sahf
adc
jl
test
cmpsl
push
cmpsl
test
mov
stos
jmp
loope
pop
mov
mov
push
inc
iret
cmp
adc
sbb
movsl
cmpsb
lret
and
mov
xor
push
cmp
jo
push
ja
cmpsb
mov
cmp
mov
mov
or
jmp
and
mov
cmp
mov
xor
or
mov
aam
int
imul
xchg
sbb
in
xor
inc
xchg
inc
adc
xchg
mov
and
in
fsubrp
sbb
fistps
pop
jecxz
mov
xchg
aam
aad
push
call
mov
push
sbb
xor
xlat
in
pop
dec
adc
movsb
out
cmpsb
or
test
xchg
add
add
popf
push
mov
push
or
push
mov
cmpb
adc
ljmp
or
add
xor
out
lea
gs
neg
rcrl
sahf
divb
mov
and
in
addr16
or
cltd
jmp
std
imul
mov
jnp
fidivrs
cmp
sti
add
cmp
repnz
mov
imul
std
std
jmp
add
mov
ja
xchg
test
daa
loop
loope
adc
and
mov
inc
mov
fisttps
push
imul
pop
lods
scas
in
pop
icebp
stos
jns
add
lods
pop
mov
ficoml
aad
lret
jg
xchg
dec
mov
pop
jmp
or
inc
lret
test
bnd
fs
mov
push
xor
loopne
andb
divb
cs
pop
adc
mov
sbb
imul
pop
imul
push
outsb
mov
adc
dec
ss
adc
aas
ljmpw
les
in
lahf
mov
pusha
and
test
lds
lds
xchg
dec
scas
sahf
mov
out
jae
push
xor
sarl
into
test
xchg
or
mov
das
jle
loope
pop
xor
xchg
cmp
jbe
popf
fxch
add
sbb
fdivrs
mov
loopne
aad
das
cs
sub
mov
dec
les
push
push
scas
pop
mov
mov
cltd
push
shrl
add
sarl
test
push
cld
add
bound
out
shll
iret
cmp
sti
insl
daa
push
leave
pop
les
sbb
jl
dec
loop
shl
in
out
mov
mov
daa
mov
sbb
stos
mov
mov
adc
mov
icebp
lret
pop
push
cmp
nop
imul
inc
insb
in
iret
ror
stos
jns
sub
xchg
clc
cltd
xchg
test
inc
rorb
push
jns
mov
jl
iret
in
mov
movsl
dec
fildl
pushf
xchg
fbld
or
jnp
ret
mov
mov
sarl
mov
hlt
jne
mov
jo
jp
sub
jmp
sahf
mov
dec
and
mov
imulb
inc
mov
or
int3
pop
fdivl
fstpl
xchg
les
jnp
fcoms
imul
iret
icebp
mov
pushf
cmp
outsl
loopne
mov
imul
and
call
xor
add
aaa
xlat
ret
js
das
mov
xor
lock
mov
adc
jae
add
xor
test
add
stos
mov
data16
lret
sahf
mov
repnz
adc
je
mov
addr16
and
dec
adcl
xchg
pusha
jb
xchg
jnp
loope
pop
dec
fsubrs
sub
fcmovbe
pushf
mov
push
mov
clc
negl
and
adc
xchg
insl
out
adc
and
xchg
mov
xor
cmp
fdivrl
mov
adc
xor
imul
jecxz
xor
xor
ljmp
mov
pop
dec
sub
ljmp
mov
les
sbb
sbbb
fsubs
push
enter
movsl
ss
inc
notl
jp
pushf
lds
into
rol
xchg
mov
mov
test
jp
push
push
push
popa
add
sbb
cmpb
fbld
les
dec
jge
dec
and
adc
lret
cmc
lods
clc
sub
aad
mov
pop
or
xchg
stos
sbb
shr
cmp
sbb
mov
int
push
scas
test
out
jbe
sub
dec
test
aam
fnstenv
loop
in
int3
push
das
xor
scas
cmc
xchg
sbb
ret
test
sbb
xor
mov
pop
push
mov
xchg
mov
add
dec
sbb
loope
push
fadds
shlb
pop
test
je
dec
mov
sbb
sub
cs
inc
sti
repnz
in
add
fs
adc
ja
xchg
movsb
test
testb
cmpsb
sbb
out
jmp
lods
and
push
sub
mov
pop
push
out
push
dec
stos
push
dec
in
jbe
pop
add
call
dec
sub
nop
lahf
fsubs
sbb
in
inc
jns
sbb
das
mov
scas
add
inc
jae
jne
push
cli
jno
jl
jg
lock
jno
insb
and
xchg
lods
je
push
imul
mov
or
mov
popa
jecxz
inc
shll
in
push
cmp
add
lcall
jne
int
cmpl
mov
lret
sub
xchg
aas
mov
xorl
or
jae
or
stc
sbb
lds
jmp
dec
or
add
cmp
cmp
mov
lea
insb
cmp
test
shl
shll
aaa
jno
loop
jg
icebp
call
jns
lss
loop
mov
ljmp
cs
inc
and
aas
aad
cmp
cmp
inc
mov
cltd
push
sti
and
stos
jae
cmp
scas
mov
test
push
xor
xchg
mov
and
add
mov
sub
push
std
stos
xchg
pop
sbb
and
mov
sarl
pop
add
lods
mov
push
fs
mov
repnz
movsl
mov
in
and
push
dec
push
outsb
insb
sbb
jmp
pop
push
cli
cmp
mov
sub
or
hlt
call
mov
mov
push
adc
cmpsl
jge
fidivrl
adc
dec
imul
mov
lods
sahf
add
test
xchg
mov
mov
ds
fwait
loopne
nop
jg
cmp
dec
xchg
push
jl
or
dec
lahf
inc
test
cwtl
sbbb
scas
jmp
push
sbb
jecxz
fisubl
jae
popa
xor
andl
mov
add
test
cmp
pop
fistps
and
mov
ss
cwtl
int
arpl
add
in
xor
xlat
mov
jl
repz
cmpb
push
xor
sub
ficompl
pushw
xor
stos
add
jae
push
mov
mov
mov
mov
loop
mov
mov
stos
out
jb
or
mulb
xor
and
jnp
push
pop
inc
mov
pop
mov
push
gs
ja
xorl
std
int3
cmp
jle
imul
lods
stos
inc
xor
pop
sub
lcall
mov
jle
mov
mov
push
sbb
cmp
out
pop
in
xchg
xchg
popf
leave
add
enter
inc
or
dec
rcrb
cmp
fwait
and
dec
orb
push
pop
mov
pop
in
popf
int
and
adc
jle
xchg
mov
and
and
sbb
mov
fiadds
mov
or
es
xchg
testl
jne
inc
xor
dec
push
lcall
lock
repz
push
jmp
fstpl
inc
xchg
aas
shll
xor
cmp
fldenv
and
mov
mov
jne
push
das
mov
mov
mov
fcomps
mov
aaa
fwait
push
popf
or
test
sbb
mov
sub
xchg
test
and
jmp
mov
insb
shrb
mov
pop
push
into
popa
lock
jecxz
dec
rorl
adc
push
xor
movsl
stc
adc
xchg
xchg
add
aas
sahf
ret
inc
jle
mov
and
or
push
hlt
and
mov
clc
xchg
sbb
jo
adcb
in
adc
subl
cmp
mov
int3
push
data16
icebp
xor
shrb
push
repz
sbb
insb
sar
mov
imul
jbe
arpl
xor
mov
insl
xor
imul
imul
insb
sbb
adc
xlat
jo
mov
jns
and
rol
mov
std
pop
outsb
into
push
mov
repz
cmp
inc
test
and
xchg
jno
fmull
sub
lds
pop
outsb
jns
jae
adc
call
push
xchg
add
dec
data16
insl
lcall
pop
rclb
xchg
adc
rol
mov
ljmp
aad
push
dec
std
fadd
dec
iret
xchg
push
movsl
jnp
in
mov
mov
pop
rcrb
neg
cwtl
jne
insb
jae
push
data16
inc
inc
sbb
inc
inc
push
push
addr16
mov
out
mov
cmpsl
insb
push
mov
mov
pop
and
lret
pusha
ficoml
dec
cmp
jne,pt
sbb
mov
mov
lods
ss
pop
mov
cmpsl
in
inc
pop
cmpsb
dec
cs
pusha
and
cmp
and
or
sbb
testl
mov
and
dec
dec
dec
adc
test
mov
inc
fadd
fidivrs
sbb
pop
pop
imul
push
dec
loop
xchg
dec
lret
aas
sub
adc
mov
js
adc
cmp
loop
mov
inc
xchg
test
bound
loopne
jns
sbb
mov
mov
dec
roll
push
xchg
mov
push
pop
outsb
or
push
mov
lret
das
movsl
xor
movsb
jmp
out
xor
lret
dec
insl
xor
mov
pusha
xor
jmp
sbb
movl
xchg
ds
int
lret
mov
fs
aas
xchg
rcll
ds
pop
add
push
pop
pop
pushf
popa
inc
sbb
mov
adc
push
and
mov
mov
pop
lock
mov
jne
pop
popf
lods
icebp
fistpl
dec
xchg
push
aaa
mov
dec
mov
inc
or
mov
lret
call
mov
mov
mov
outsb
test
arpl
mov
cmpsl
mov
push
dec
mull
sbb
jns
dec
mov
push
sbb
and
mov
roll
int
pop
jg
push
and
jge
cmp
pop
scas
int3
outsl
lods
aam
testb
inc
mov
push
mov
data16
pop
or
xchg
fisttps
xor
incb
push
xchg
xchg
das
inc
mov
arpl
fcmove
rcrb
sub
xchg
mov
cmp
cmp
test
inc
jl
imul
mov
sub
inc
pop
lcall
psubsw
fistpll
pop
test
xor
dec
mov
lcall
jmp
popf
dec
jmp
addb
loope
repnz
inc
jnp
sbb
push
aam
negb
loopne
rorb
lods
or
mov
push
dec
mov
mov
sub
mov
orb
dec
cs
int
cli
fidivrs
rcr
stc
and
mov
cmp
inc
cs
repnz
jb
pusha
insl
cwtl
add
adc
pop
jg
mov
loop
ljmp
es
or
stos
pop
testl
pop
aas
sub
in
adc
mov
std
adc
jmp
mov
pop
pop
cmp
jecxz
das
inc
xlat
jg
std
stc
scas
cmpsb
frstor
xchg
cmc
nop
and
popf
cld
adc
push
stc
arpl
test
mov
cltd
fists
add
xor
sub
jne
popa
push
popf
jno
sub
mov
xchg
in
adc
add
orb
xor
aas
fdivrs
int
ds
sub
sub
inc
fstl
push
and
repz
rcll
enter
lcall
icebp
aas
pop
sbb
xchg
xor
je
hlt
icebp
or
cmp
clc
push
and
jl
scas
cltd
mov
xlat
xor
adcl
out
ficompl
jecxz
cmp
int
aam
mov
jns
push
xor
ret
fcmovnu
xchg
pop
fisttps
add
and
clc
add
and
push
lret
xchg
pop
movlps
or
cmpsl
shr
dec
iret
or
sub
pushf
in
push
andl
jnp
xchg
aaa
xchg
or
dec
iret
sbb
add
fdivs
add
xchg
jge
outsl
nop
test
negl
cs
ss
mov
mov
jbe
or
sub
and
mov
sbb
xor
jp
cmp
mov
insl
stc
xchg
out
cmovne
add
adcb
jl
xchg
ficomps
ret
sub
push
sbb
xchg
js
imul
pop
jne
or
cmc
jecxz
cltd
stos
addr16
shlb
scas
add
nop
mov
bound
jo
inc
mov
mov
mov
lcall
ja
push
mov
mov
std
inc
cmpsl
scas
inc
fs
pop
jb
push
or
jg
pop
push
mov
cmpsb
loopne
add
sbb
cmpsl
lods
mov
scas
mov
mov
xchg
mov
leave
test
xchg
fnstcw
nop
shl
lcall
jae
addb
jp
faddl
imul
out
cmp
sub
icebp
inc
enter
loope
out
lahf
xchg
add
insb
in
jl
mov
mov
cmp
xchg
popa
outsb
xor
dec
sub
add
cmc
inc
sti
loop
roll
push
push
out
push
pop
dec
shr
aaa
mov
push
xchg
add
push
daa
cmpsb
mov
inc
adc
lahf
jae
cmp
imul
fisttpll
xchg
push
and
aaa
inc
or
rcrb
mov
mov
movsb
movsb
xor
add
xor
addr16
into
movsb
add
ficomps
mov
mov
insl
outsb
aas
rol
loopne
sbb
jecxz
mov
test
loopne
add
and
sbb
mov
call
or
push
stos
out
or
ja
in
imul
arpl
das
inc
mov
mov
fwait
xor
aaa
mov
pusha
fdivrs
jmp
adc
shlb
mov
in
idivb
adc
cld
sub
cmpsl
cld
dec
jo
hlt
cmp
loopne
mov
shrl
scas
push
outsb
enter
mov
xchg
in
cwtl
sub
jbe
xchg
push
nop
inc
fmuls
hlt
push
jle
cmp
in
daa
enter
outsl
adc
cltd
xchg
pushf
or
lea
add
inc
push
sbb
pop
or
xchg
mov
movsl
jo
cld
add
xchg
xchg
xor
les
inc
aas
dec
push
jge
loope
ret
sahf
int
mov
inc
xor
mov
dec
or
push
add
lret
cmc
push
mov
jle
outsl
fcmove
inc
test
repnz
out
mov
ret
adc
pop
mov
lods
cmpsb
sub
sub
pop
jo
mov
popa
or
inc
data16
ljmp
sub
fiaddl
sub
dec
cltd
jge
add
push
pushl
insl
negb
push
dec
add
or
mov
lahf
fwait
mov
adc
pusha
rolb
movzbl
es
jge
in
sahf
mov
mov
sbb
mov
mov
lcall
push
call
sbbb
aaa
mov
aad
inc
sub
or
or
dec
dec
gs
push
mov
lods
cmpsl
bnd
iret
add
mov
movsb
and
and
fucomp
xor
ret
hlt
cld
jno
mov
imul
fnsave
test
push
or
jbe
subb
xchg
shrb
icebp
sub
mov
lods
ja
gs
sbbb
cmpsl
scas
push
loopne
mov
sbbb
push
or
dec
cmc
sarl
jae
mulb
enter
lcall
cmp
push
or
mov
dec
cmpb
daa
std
adc
lods
mov
jge
xor
lret
adc
sbbb
out
fsubrl
pop
decb
adc
cmc
and
push
sahf
loop
bound
pop
xor
or
icebp
jmp
jns
lds
popa
imul
dec
sub
cmp
pushl
and
jmp
fstpl
movsb
ret
pushw
cld
cmc
pop
xor
pop
cli
nop
jb
enter
sti
std
sub
in
aaa
sub
or
out
inc
mul
pusha
gs
arpl
pop
mov
or
mov
aam
stos
xor
pcmpeqd
test
mov
std
rcrb
sbb
dec
and
push
cmp
jnp
push
adc
insb
xlat
dec
xchg
sub
insl
jne
fstl
cmp
sbb
rolb
imul
fs
add
in
jl
call
cld
std
icebp
sbb
jns
sbb
cmp
add
xchg
cli
repz
mov
xor
sahf
cmp
pop
nop
lods
gs
jecxz
icebp
int3
inc
pop
subl
aas
jp
jg
or
and
xor
cmc
mov
mov
inc
mov
pop
mov
les
mov
lea
sub
mov
xchg
movsl
and
mov
loop
lcall
adc
ret
inc
in
mov
rcll
stos
or
cmp
aaa
sti
push
lock
loopne
in
and
add
mov
xor
or
mov
mov
dec
mov
dec
sbb
sete
cmp
mov
mov
imul
add
jmp
xchg
jno
sub
popf
aad
sbbl
and
mov
and
cltd
lret
mov
out
stc
ret
xlat
iret
jae
xor
cli
in
inc
mov
jp
pop
test
fisttpll
lcall
fstp
lock
jl
lcall
push
dec
jmp
xor
sarl
es
in
imul
pop
or
jp,pt
jbe
arpl
mov
cmpsl
inc
lea
mov
in
push
add
addr16
inc
mov
out
addl
enter
lods
pusha
sub
fcmovnu
aam
scas
inc
mov
mov
movsl
leave
mov
inc
or
jb
pop
sarl
fwait
inc
adc
fsubs
mov
subl
inc
out
mov
pop
or
xlat
or
fisubs
inc
mov
xchg
jge
inc
shrl
fildl
cmp
push
enter
sahf
daa
scas
fcmovbe
sbb
mov
pop
insl
xor
jae
test
mov
xlat
jo
mov
cltd
pop
pop
lds
jne
aad
jmp
cltd
add
xchg
std
mov
icebp
jb
outsl
and
push
popf
les
faddl
mov
adc
icebp
lods
and
mov
xor
pop
xchg
adc
push
dec
icebp
shrl
cmp
sub
sahf
lahf
or
fsubrl
lds
sbbl
pop
jbe
movsl
out
pop
adc
les
push
cmp
add
and
inc
xlat
repnz
stc
and
and
jg
mov
push
outsl
and
push
inc
jns
test
test
les
dec
outsb
sub
push
ret
in
cmp
xchg
cmp
cmp
orb
mov
shl
vhsubpd
jecxz
inc
scas
int
xor
fdivs
xchg
add
outsl
xchg
rolb
xor
lret
test
adc
mov
push
pop
imul
sbb
xchg
push
repnz
sbb
pop
and
and
adc
pop
adc
jp
push
add
mov
or
jge
push
outsb
cmp
mov
sbb
push
sbb
push
xchg
imul
sub
loop
pusha
in
lcall
subl
lahf
cmp
mov
or
mov
repnz
pop
data16
aaa
add
jbe
fcompl
and
ror
gs
fistps
pop
adc
push
mul
and
inc
mov
data16
cmp
xlat
shrl
gs
push
repnz
adcb
rolb
popa
inc
test
pop
push
das
dec
push
mov
mov
adc
or
lods
cmpsb
lahf
jns
sbb
sub
cmp
mull
xchg
test
scas
push
sbb
nop
jg
xchg
mov
sub
ret
shl
pop
xchg
ret
mov
lods
stos
shr
jb
sbb
xchg
adc
jmp
subl
push
add
jno
mov
ret
sub
enter
cltd
pop
inc
out
dec
pusha
cmpb
aas
leavew
cli
inc
and
aad
add
pop
test
cmp
aam
nop
jge,pt
and
xchg
jbe
fbstp
xor
sub
push
mov
dec
jl
les
icebp
imul
ror
mov
xchg
ljmp
mov
ror
ret
in
mov
sti
adc
jno
fdivs
add
je
cmp
push
in
frstor
sbb
jae
jno
sti
push
add
mov
pushf
ret
movsb
xorl
inc
pop
mov
mov
rcll
hlt
pop
fwait
xchg
daa
xchg
jno
jne
das
cmp
xor
xor
mov
sti
dec
push
sar
outsb
neg
jg
or
xor
fucomp
mov
cli
dec
dec
aas
xchg
inc
xor
ret
fs
mov
cmp
sub
cmpsb
mov
pushf
push
sub
ljmp
xchg
jge
outsl
inc
xor
gs
dec
jb
fcoms
sub
add
mov
decl
in
pop
sbb
stos
fs
mov
pop
sar
fimull
mov
aad
xchg
sub
adc
outsl
sub
ljmp
std
insb
std
mov
shll
inc
mov
cmp
jg
sarb
xchg
jle
xchg
testl
or
cs
mov
sarb
ds
jmp
mov
ja
iret
outsl
jg
add
adc
add
fwait
adc
aas
inc
loopne
or
mov
mov
cmp
daa
xchg
cld
sbb
movsl
out
push
sbb
int3
push
insl
mov
jecxz
mov
or
push
jb
push
mov
aaa
xchg
sub
inc
mov
pop
mov
and
fcoml
cld
icebp
jecxz
lldt
or
out
das
sbb
sti
push
sbb
and
stos
cmp
and
lock
mov
add
ja
xor
jo
enter
aam
xor
add
aas
pop
cltd
xor
ljmp
cmp
loopne
out
push
das
stc
test
push
dec
filds
lods
ficomps
fwait
popf
popa
sub
push
repnz
nop
enter
loopne
add
mov
cwtl
aas
mov
and
add
sub
dec
mov
imul
aad
xchg
pop
xor
in
xlat
mov
pminub
dec
gs
into
push
adc
sbb
movzbl
loopne
cs
cmp
lds
xlat
aaa
push
mov
xchg
lcall
dec
xor
xchg
mov
lahf
or
daa
pop
push
mov
push
xchg
and
out
mov
test
andb
je
inc
push
sbb
xchg
ds
out
dec
and
or
mov
and
pop
fwait
adc
aaa
stc
xchg
xchg
adc
mov
jecxz
sbb
mov
cmp
xor
ds
jae
jl
les
cmpsl
ss
add
push
push
fists
mov
stc
into
shll
adc
or
dec
jbe
stos
and
repz
leave
ljmp
sbb
xchg
addr16
pop
cmpsl
out
shld
lahf
test
test
fisubrl
rcl
sub
out
fsub
mov
jne
call
in
push
bound
repnz
sbb
mov
stc
cmc
ret
shl
scas
popf
xchg
xchg
mov
sub
cltd
add
aam
mov
lret
xor
xchg
push
lods
ret
roll
jp
imul
mov
fadd
xchg
mov
std
mov
adc
and
scas
inc
pusha
out
jg
mov
rcl
inc
xor
sbb
fwait
dec
rcll
mov
push
into
push
dec
jbe
fadds
add
xchg
lods
cmp
mov
mov
sbb
test
gs
popf
andl
lds
mov
mov
scas
jl
xchg
fnstcw
jge
iret
dec
fwait
xchg
fidivrs
xor
adc
xcrypt-cfb
cmpsl
fstps
sbb
lock
sub
sub
push
inc
in
xor
lcall
cs
icebp
push
inc
or
roll
adc
push
push
mov
mov
pop
xor
mov
xor
add
pop
sbb
inc
mov
iret
popa
loope
jg
daa
ljmp
dec
xor
mov
mov
lods
sbb
mov
cmp
jl
dec
hlt
data16
in
subb
cmp
mov
addr16
insb
sar
jecxz
jle
jb
add
adc
inc
mov
adc
mov
call
repnz
and
jo
cmpsb
cmpsl
outsl
icebp
call
mov
lcall
or
fisttps
xor
nop
sti
fmul
push
addr16
mov
fsubs
int
sbb
mov
and
ret
adc
in
data16
sahf
ret
jbe
pop
push
call
lahf
jp
test
insl
pop
mov
out
shrb
or
loope
push
push
push
sub
pop
js
and
outsl
jge
movsb
sub
popf
pushf
sahf
sub
gs
mov
stos
movsb
stc
js
push
add
xor
sub
imul
pop
or
in
or
add
pop
jecxz
ljmp
sub
shlb
mov
int
dec
pop
loopne
adc
mov
mov
inc
stos
sub
into
call
into
out
inc
jge
aad
sbbb
arpl
ja
int
ss
xchg
popl
std
pop
imul
je
mov
int3
mov
adc
push
call
jne
sahf
pushf
fs
icebp
fsubrl
adc
or
pop
mov
and
cmc
add
insb
push
sahf
dec
push
ret
and
mov
jl
mov
pop
mov
jecxz
notl
cmp
jae
jmp
and
aad
into
inc
mov
and
push
and
fwait
mov
sbb
repnz
sub
insb
or
aad
test
je
sbb
add
mov
push
push
enter
pushf
aaa
ss
loopne
cmp
push
adc
mov
push
cltd
push
pushf
ds
fists
add
ljmp
mov
fisubs
in
inc
mov
ja
testb
push
call
cmp
mov
push
xchg
out
sub
cmc
cmp
jae
aad
sbb
dec
push
or
cmc
push
sbb
jecxz
out
mov
mov
mov
mov
mov
jl
call
outsb
data16
call
and
cwtl
and
jmp
les
xor
pop
fwait
pop
xor
mov
jecxz
imull
or
sub
push
hlt
mov
xor
xchg
out
sbb
mov
in
or
cmpsl
sahf
xor
cmc
add
lods
push
jns
outsb
add
out
loop
xchg
dec
fcmovu
cmp
adc
xchg
push
cld
sahf
mov
xchg
sub
shl
cs
pop
and
lea
js
jnp
outsb
pushf
jge
adcl
out
movsb
je
mov
jge
fisubrs
int
xor
in
push
xor
cld
adc
push
pusha
es
dec
fdivrl
shll
ljmp
in
ds
insl
and
js
aam
out
std
inc
outsl
lods
pop
dec
or
pop
repnz
mov
push
push
lcall
or
or
xchg
in
adc
loop
dec
mov
lods
lcall
mov
aas
add
jnp
sti
cmp
ret
mov
xor
add
aam
fldl
xlat
lcall
adc
pop
add
cmp
bound
xchg
shrb
loop
movsl
ja
mov
push
dec
sub
imul
adc
jo
push
call
bnd
or
inc
pop
mov
sarl
push
in
repnz
cli
push
mov
test
pop
sub
rolb
mov
mov
into
movsb
xchg
xchg
push
dec
xor
enter
mov
mov
lahf
mov
sub
outsb
mov
adc
outsb
cli
mov
jl
std
push
out
stos
lret
icebp
ret
pop
xor
jecxz
into
push
fdivs
inc
or
ret
xor
inc
sarb
lods
loop
mov
jmp
xchg
mov
insb
pop
outsb
mov
ret
sub
lds
outsl
cld
arpl
xchg
ret
outsl
pop
push
inc
mov
xchg
inc
adc
mov
sub
sbb
in
std
je
mov
ficoml
in
adc
dec
mov
daa
test
shll
or
jne
adc
imul
mov
dec
mov
out
or
mov
dec
bound
jge
fsubr
test
lret
pop
xor
sar
popf
into
stos
outsb
fnstenv
dec
aaa
ret
dec
jl
jnp
lret
push
or
mov
cmc
movsl
push
ret
cmc
xchg
cmpsl
popf
inc
and
mov
mov
mov
push
cmp
cmp
lods
mov
push
xchg
fidivrs
cmp
iret
int
jl
clc
pop
in
jb
or
add
pop
fisubrs
lods
mov
pop
fs
sub
repnz
ja
lahf
dec
je
push
testl
mov
aas
leave
cmp
xchg
jne
sub
sti
imul
stc
cltd
ja
pop
fnstsw
into
testb
adc
or
in
jne
inc
test
jl
ds
imul
cmp
cmpsb
inc
push
inc
xor
test
pop
cltd
mov
mov
xor
repz
pop
call
sub
cmp
push
push
mov
sub
adc
addb
into
arpl
pop
ror
jns
out
dec
aas
sarb
jmp
mov
addb
add
popa
dec
dec
aaa
outsb
jecxz
ljmp
add
in
cmp
and
jne
add
ljmp
clc
aad
movsb
repz
push
mov
ret
sbb
pop
xor
pop
cmc
loopne
shlb
xor
inc
jl
stos
add
cmp
mov
adc
sbb
cld
ret
xchg
cmp
mulb
dec
jne
repnz
mov
push
add
ret
fs
insb
inc
jb
test
jg
sti
ret
mov
xchg
ljmp
or
lds
xor
ds
push
xchg
inc
addr16
movsb
in
inc
jno
roll
fs
mov
stos
ds
push
add
pop
lods
jg
sub
inc
adc
mov
pusha
mov
je
sti
mov
dec
jae
push
test
xor
popf
cld
sbb
loope
daa
fdivl
add
mov
mov
test
std
mov
sbb
out
xchg
mov
and
popf
push
orb
push
cmp
stc
out
or
iret
adc
iret
out
xchg
inc
sahf
fsts
xor
jns
jb
stos
mov
loope
push
shlb
inc
or
fcomp
jo
test
clc
lcall
jg
or
inc
stc
rcr
xchg
rcl
or
lds
scas
imul
ja
xor
nop
fiadds
pop
jno
pop
fsub
jae
xchg
scas
adc
sub
adc
jns
dec
and
mov
je
and
inc
cmpsl
int3
mov
sub
out
sub
mov
mov
out
mov
jne
pop
pop
outsl
fdivl
ds
mov
or
pop
cmp
or
dec
push
fucomp
pop
icebp
not
stc
push
mov
mov
in
cs
les
dec
pop
jnp
mov
mov
lods
mov
data16
lcall
mov
ffreep
adc
ret
add
out
xor
fadd
mov
fldt
lret
pop
loopne
out
dec
pushf
orl
out
push
cmp
icebp
nop
mov
sbb
scas
subb
cmp
dec
xchg
ret
xor
or
mov
mov
mov
add
push
repnz
lahf
inc
roll
push
cmp
arpl
cltd
aad
mov
mov
movsb
call
mov
xchg
dec
cmp
mov
adc
sbb
das
add
pop
loopne
notb
scas
mov
bound
mov
fnstcw
dec
gs
imulb
pushf
push
stc
stos
pop
xchg
gs
pusha
ds
lock
mov
mov
and
mov
mov
rolb
xchg
in
xchg
ja
enter
adc
daa
or
push
out
lret
mov
xorl
xchg
jne
inc
sbb
push
iret
and
cmp
inc
cmp
cwtl
pop
cmp
push
mov
jae
leave
scas
push
scas
sbb
dec
cld
ja
lock
in
xor
ficompl
adc
popf
mov
loop
test
aad
lods
or
es
sub
xor
test
lahf
adc
mov
pop
cmp
lods
sarl
in
xchg
daa
add
aas
lcall
loop
xchg
mov
insl
mov
pop
or
mov
mov
cltd
sub
into
inc
test
sbb
or
mov
scas
fnstsw
inc
add
cmp
mov
ret
fs
stos
ficomps
ss
ficompl
jbe
pop
call
ret
mov
icebp
shrl
iret
fs
sub
sti
data16
das
stos
adc
aam
inc
lret
jne
pop
pushf
aam
das
out
lcall
xor
mov
mov
ds
pop
scas
lret
mov
lret
adc
incl
ficoml
popl
das
in
pop
das
or
push
lret
enter
lret
jb
or
mov
int3
ret
shrl
mov
aam
mov
adc
iret
or
xchg
add
adc
clc
cwtl
and
leave
fldcw
cmpb
shlb
push
and
std
xchg
pusha
inc
add
mull
xchg
jno
cmp
sub
jo
adc
test
lods
icebp
ja
mov
jne
pop
mov
or
push
movsl
mov
pusha
ja
lret
pop
adc
pop
sub
cmpsl
adc
sarl
std
mov
mov
ficoml
push
or
pop
cld
push
cwtl
daa
sbb
int
arpl
into
out
add
cltd
push
insl
out
add
sub
lahf
or
pop
xor
push
in
mov
repnz
jo
sbb
mov
test
repnz
xchg
lahf
mov
sbb
add
ret
xchg
lock
push
sub
aad
pop
adc
ds
out
mov
fmulp
or
cmp
ja
cmpsl
cli
js
lock
into
sub
push
test
sub
fsts
mov
mov
sub
js
fisttpl
movsb
mov
cmp
push
cwtl
and
jb
inc
dec
jb
ret
jmp
mov
fisubl
jno
aaa
lcall
pop
scas
mov
cwtl
lcall
in
xor
out
es
xlat
shl
adc
sahf
es
shrb
test
or
into
ficompl
cmpsb
mov
das
sbb
and
mov
inc
adc
and
pop
cmp
inc
sub
mov
sbb
xchg
mov
lods
inc
mov
inc
cmpsl
mov
mov
subb
js
outsb
push
mov
sbb
in
adc
arpl
cmp
outsl
push
in
jp
jp
xor
pushf
das
bound
inc
xchg
xlat
mov
and
aaa
cld
add
loopne
pop
pop
popf
mov
stos
std
mov
int
les
or
pop
mov
mov
cli
pop
jl
dec
sub
add
mov
in
pop
jo
outsl
sar
outsl
es
sub
cs
jle
in
in
push
jp
inc
ds
push
and
into
cli
test
fadd
lcall
push
pop
jle
ljmp
vmovhpd
scas
rcrb
stc
shll
lcall
fs
jne
rclb
enter
mov
out
les
sbb
imul
fstl
push
push
imul
inc
aad
add
test
insl
jno
mov
dec
push
jmp
jmp
movsl
jp
mov
sbb
mov
lcall
mov
and
xor
in
and
dec
sbb
cwtl
iret
mov
daa
int
loopne
or
adc
dec
pop
in
cwtl
enter
pop
repz
cmpsb
leave
ds
mov
lcall
add
stos
pushf
mov
clc
lret
and
testb
cld
jge
sub
push
sbb
jo
inc
jecxz
sub
sub
jno
aaa
push
shll
int
xor
and
aas
add
sar
rolb
add
and
jbe
dec
xlat
push
cmp
sbb
cmp
cmp
rolb
or
mov
dec
aad
xor
jg
jno
xlat
lods
rorl
subl
dec
and
or
pop
arpl
cmp
stos
int3
pop
sbb
out
xchg
push
adc
dec
or
inc
xor
loopne
or
fcomps
insl
lds
lcall
in
pop
out
mov
mov
je
and
xchg
jb
loopne
arpl
ret
fstpt
lahf
pop
xchg
lret
int
sub
sub
and
das
repz
ret
popa
push
test
xor
outsl
cmp
jg
inc
jb
dec
cmpsb
lods
int
test
inc
mov
mov
xchg
sbb
fimuls
stos
add
mov
ljmp
movl
cld
mov
popa
adc
push
imul
int3
or
add
popa
cmc
mov
inc
in
into
jge
repnz
mov
pop
add
bound
xchg
xor
adc
negb
ret
jecxz
in
inc
into
inc
add
xchg
sbb
pop
movsb
push
int3
dec
lea
fldpi
inc
cmp
nop
inc
popf
dec
xor
data16
and
jo
in
jbe
dec
jle
out
fwait
push
es
lret
sub
fidivrl
popa
jmp
fnstenv
sub
jl
inc
sub
ja
fs
add
jl
fimull
into
cs
dec
jle
stos
push
or
cmp
mov
pop
jp
sti
cwtl
int3
addl
scas
push
jg
lahf
pushf
sbb
mov
ja
rcrl
rolb
add
pop
mov
pop
or
dec
popf
inc
mov
pop
popf
pop
push
shrl
in
add
enter
xchg
adc
es
das
imul
inc
cmp
or
insl
stos
push
xor
add
cmp
jl
pop
fldenv
pop
cs
sbb
adc
ret
xor
shlb
ljmp
and
or
aaa
add
in
lcall
mov
sahf
pop
push
rolb
out
xchg
aad
lods
imul
outsl
shll
fnstsw
lea
or
scas
mov
pop
js
test
jg
testw
in
es
loop
in
stos
cmpsl
or
mov
scas
test
push
xchg
test
xchg
addr16
popf
xor
push
mov
dec
cmp
mov
xlat
test
cwtl
sar
inc
loope
repnz
dec
lcall
imul
es
jnp
pop
inc
in
jmp
bound
jae
mov
cmpsb
dec
pop
cmpsl
cli
jae
call
jle
mov
mov
rcrb
adc
push
scas
mov
inc
testb
push
inc
mov
mov
shll
inc
insb
and
sbb
mov
pop
mov
adc
sbb
fwait
mov
inc
out
push
mov
enter
nop
das
clc
sub
aas
pusha
test
stos
mov
sbb
jae
dec
and
fidivrs
nop
xchg
iret
or
inc
in
addr16
push
insb
repz
int
imul
cmp
pop
call
push
ljmp
shll
mov
pop
pop
cmp
pop
dec
pop
push
sub
sub
je
ds
mov
lods
cmpb
ss
jle
movsb
adc
xchg
dec
inc
or
andl
jnp
xchg
ret
add
inc
scas
xchg
rcrl
inc
icebp
sbbb
pop
push
xchg
pop
cmp
push
add
lcall
and
adc
cmpl
cld
frstor
jno
inc
test
mov
dec
dec
and
pop
adc
lcall
sbb
cmp
xlat
leave
sub
ret
dec
pop
shll
les
mov
push
inc
fldenv
dec
sub
dec
in
mov
out
les
sub
jg
dec
aam
cltd
pop
scas
xchg
es
jbe
cmp
push
dec
aas
sbb
jne
in
dec
mov
test
movsl
add
insl
jg
jne
insb
pop
ja
lcall
mov
stos
mov
xchg
aas
sbb
movb
daa
sub
inc
cltd
ja
neg
ljmp
icebp
movsl
xchg
adc
mov
popa
cmpsb
arpl
icebp
or
dec
outsb
jg
push
lahf
std
lahf
xchg
mov
cmp
out
nop
ficoml
and
sub
sbb
mov
mov
push
ds
in
pop
fucomi
insb
mov
sarb
inc
bound
lock
sarb
daa
or
dec
sbb
inc
cmp
imul
jmp
dec
mov
or
cmpsb
lds
and
cmpsb
mov
xchg
and
lds
in
repnz
rorl
cli
scas
test
cwtl
push
mov
mov
mov
sbb
inc
dec
out
in
hlt
add
add
jmp
jg
mov
mov
mov
dec
mov
fsubrs
test
mov
test
stos
push
loopne
add
fistpll
xchg
das
pop
dec
dec
jae
sbb
je
aam
sbb
ss
cmpsb
sbb
xor
jg
xchg
add
je
mov
xor
fists
enter
fnsave
push
push
push
aaa
stc
jl
mov
mov
test
out
dec
mov
leave
dec
cmp
adc
mov
mov
cmp
inc
fadd
in
sbb
bound
fcompl
xor
adc
orb
dec
not
imul
push
push
mov
pop
mov
ja
shrl
xchg
fisubrl
dec
sub
stc
loopne
lcall
mov
and
push
or
fsubrl
xor
dec
xor
cmpsl
enter
ja
pop
lods
push
mov
ret
imul
mov
push
mov
stos
lret
inc
push
vprotd
jbe
cmpsb
imul
addl
mov
mov
and
imul
sbb
mov
cwtl
mov
dec
jle
jb
imul
add
jae
pop
aad
xchg
mov
dec
fmul
add
rolb
xchg
mov
rorl
jbe
daa
popa
es
loop
mov
or
daa
mov
push
lock
pop
call
and
sbb
loope
outsl
push
jns
or
jge
fyl2xp1
cwtl
dec
and
cmp
clc
jle
sbb
in
pop
sbb
in
push
push
xchg
push
xchg
lds
mov
outsb
cmp
push
xor
in
aas
push
dec
add
mov
mov
aaa
test
movsl
xor
and
das
aas
jl
jbe
imul
cmpl
adc
mov
mov
dec
ss
cltd
andl
js
cbtw
lds
add
push
add
pushf
inc
hlt
mov
xchg
into
dec
loopne
sub
xchg
and
inc
loopne
insl
add
xchg
and
dec
jno
and
sub
test
scas
ja
lods
xchg
sbb
mov
loopne
sbb
test
cwtl
cld
loopne
lock
dec
inc
jae
mov
dec
xchg
ss
orl
dec
jle
scas
xor
push
jmp
xlat
pushf
out
jae
sbb
push
test
adc
inc
shll
leave
out
sub
add
jns
pop
sbb
fiaddl
jbe
insl
jecxz
pop
mov
sarl
out
sbb
jmp
push
clc
jno
arpl
loope
jbe
in
shlb
and
cmpl
shlb
je
add
adc
imul
and
add
add
fisubs
ljmp
call
and
mov
dec
or
jns
pushl
adcl
aas
outsl
test
adc
mov
pop
push
xchg
inc
dec
hlt
sub
sbb
cmp
call
mov
popf
iret
pop
lock
das
cli
dec
and
push
xor
push
dec
sbb
lods
int
xchg
popa
shlb
leave
jne
mov
daa
dec
and
jnp
stc
push
xor
push
test
adc
test
movsb
pop
fs
push
or
clc
push
rorl
out
mov
inc
sbb
cmp
xchg
mov
and
insl
int3
fimuls
neg
dec
inc
daa
jo
loope
push
add
icebp
dec
mov
jno
cltd
das
xchg
shrl
dec
push
and
cmp
fcoms
cmpl
and
cmp
sbb
xor
and
jne
and
mov
inc
mov
test
xor
cs
jg
adcb
test
shl
adc
cmp
cmp
scas
push
xchg
out
sbb
out
cmp
sti
iret
cmp
enter
stos
add
out
adc
push
or
fcomps
mov
in
dec
add
mov
inc
push
jge
out
enter
aaa
gs
sbb
jg
rorb
testl
cltd
sbb
pop
fcoms
mov
out
lea
pop
push
lods
dec
mov
sub
je
mov
push
dec
sub
sti
mov
iret
out
and
in
rcrl
jns
mov
into
daa
cmp
fstp
sti
aad
xor
push
fildll
adc
push
aaa
adc
aam
xor
sahf
out
jmp
or
pusha
mov
pushf
cmp
outsl
in
or
enter
cltd
or
push
jb
ret
xor
call
nop
xchg
popl
push
popf
push
push
mov
insb
rcrl
popf
movsb
jmp
dec
mov
jl
test
push
mov
push
xor
mov
adc
jbe
scas
mov
cmp
js
fbld
xchg
loopne
pushf
lods
push
inc
jge
outsl
sbb
sti
push
push
sub
imul
jmp
ja,pn
jbe
ja
xchg
xchg
fldenv
roll
aad
lea
cmpsb
in
es
repz
cmp
arpl
and
push
push
je
push
dec
leave
fwait
cli
or
inc
mov
ljmp
cld
sub
dec
mov
sbb
push
add
sub
divb
fwait
mov
xor
sub
or
insb
cmpsl
xor
mov
pop
lods
xchg
scas
fmuls
mov
je
xor
pop
mov
loop
xor
or
pop
je
decb
and
cwtl
inc
adc
jmp
sub
inc
add
push
lcall
sarb
movsb
aad
jecxz
pop
pusha
jle
push
and
cmp
xor
cmp
xor
xor
repnz
pop
ret
mov
dec
lock
mov
jo
adc
notb
or
arpl
rorl
jmp
or
mov
lret
mov
jle
cmp
out
mov
dec
push
mov
popf
inc
pop
ja
sahf
adc
push
mov
cmpsb
mov
jno
dec
mov
sub
pop
ror
jnp
loopne
iret
adc
add
pop
iret
icebp
pop
and
and
push
repnz
xchg
inc
call
inc
enter
dec
nop
xchg
mov
fsts
push
lcall
sbb
mov
ret
je
push
lods
pop
addr16
push
dec
lahf
inc
cmc
arpl
jle
into
pop
jbe
or
rolb
clc
sub
or
stc
scas
sti
lods
mov
jge
jae
pop
xchg
dec
dec
pushf
or
es
stc
lret
ljmp
cwtl
clc
in
add
add
xor
and
sub
pushf
sbb
adc
out
push
ret
mov
xchg
in
fstpt
cltd
in
lcall
stc
or
ja
pop
cmp
sub
imul
mov
insl
in
dec
jle
fistl
jb
dec
xchg
mov
leave
xor
push
pop
jno
outsb
mov
js
lret
cmc
data16
push
adc
daa
dec
lahf
jb
pushf
nop
les
in
shll
repnz
sub
sbb
and
mov
sub
nop
lret
leave
fnstsw
mov
xor
test
xchg
int
push
sub
mov
aam
bound
pusha
push
pop
aaa
outsl
imul
push
enter
lret
jae
or
jno
inc
jmp
das
push
jg
incl
cmp
xor
loope
test
inc
fidivrs
lret
idivb
jl
dec
dec
mov
out
cmp
aas
adc
jmp
mov
stos
inc
sti
lock
mov
insl
movsl
loop
repz
cli
scas
inc
mov
cmp
faddp
and
adc
push
nop
inc
or
clc
push
jnp
push
shll
imul
lock
and
push
jmp
mov
fcomp
rcll
mov
pop
shrb
pop
stos
add
or
stos
xchg
and
push
mov
ret
mov
cmpsl
icebp
lret
stc
fs
in
fldl
cmpsl
repnz
in
dec
rcll
inc
addr16
push
fucomi
enter
cmp
cli
cmp
mov
dec
andl
xchg
les
shlb
xor
int
mov
popf
sub
push
mov
mov
data16
popf
je
push
leave
mov
xchg
and
cmp
inc
and
repnz
gs
ljmp
add
jb
jne
lock
jo
cmc
shlb
mov
nop
pop
roll
fsubrp
jbe
call
movl
es
xchg
dec
les
push
in
lds
adc
inc
xchg
push
lods
inc
hlt
stc
xor
and
stc
aam
sub
and
xchg
repz
icebp
mov
js
jo
aas
jno
adc
xchg
xor
jb
in
pop
dec
cmp
push
mov
mov
lcall
push
ror
jecxz
loope
adc
or
mul
jp
notl
loop
or
out
in
mov
ja
shl
mov
daa
test
cmp
std
in
xchg
in
jp
lods
arpl
into
dec
sbb
jbe
out
jecxz
scas
sub
adc
outsl
lds
lahf
adc
mov
jae
nop
pop
jecxz
or
aaa
jno
inc
ret
data16
inc
mov
ret
push
lret
push
dec
jnp
int
pop
jle
sbb
sbb
adc
mov
lds
mov
and
jns
mov
jl
mov
cltd
fstpl
lock
mov
inc
add
lahf
addr16
in
stos
pop
mov
shlb
pusha
ljmp
sbb
push
sti
or
lret
imul
mov
aaa
daa
sub
mov
fiadds
andb
jge
in
ja
ljmp
sub
inc
xor
cmp
call
bound
push
pop
fninit
xchg
cmpps
shll
mulb
mov
or
pop
mov
push
jnp
sub
aaa
adc
ds
pop
lahf
xchg
mov
add
mov
xchg
popf
push
popf
or
aad
inc
xor
xorl
push
notl
pop
pop
test
lret
test
loop
cmp
loop
out
sub
push
lods
aad
ret
xor
cmp
push
scas
imul
mov
mov
dec
inc
xchg
data16
sbb
sub
mov
cmp
jo
and
decb
repz
fdivl
insb
inc
leave
jl
cmp
inc
repnz
sub
movsl
sbb
mov
inc
jo
call
push
mov
inc
movsl
test
mov
lret
sbb
notl
mov
or
sti
cltd
in
out
outsb
sbb
xor
xchg
lret
adcb
fimull
imul
pop
lret
sbbl
mov
repnz
loop
jle
cmp
mov
fmul
dec
leave
xor
out
cltd
sti
sub
cmp
and
mov
jle
aaa
or
cmp
push
sti
mov
rcrb
lods
sub
sahf
mov
fcompl
sarb
xorl
out
mov
adc
mov
xchg
mov
sbb
xlat
or
subb
sbb
mov
fistps
jb
pop
dec
pop
loop
ljmp
stos
add
add
sub
sub
test
pop
in
rclb
test
adc
mov
and
outsb
cmpsb
push
aad
or
adc
jns
xchg
or
inc
dec
in
mov
sbb
fcmovu
js
int3
cld
loop
aad
jg
int
inc
or
cmc
imul
mov
xchg
sbb
jne
jl
or
jmp
ss
clc
mov
mov
mov
in
or
repz
cmp
fnstsw
or
ret
lods
jno
lds
mov
cmpsb
ljmp
sbb
mov
or
decb
mov
xchg
data16
dec
out
dec
stos
or
movsl
cmp
arpl
cmp
xlat
mov
sub
ret
sub
inc
lret
cmc
adc
jmp
dec
dec
ja
std
adc
mov
cmpsb
je
xchg
lods
pop
lcall
les
jae
lods
leave
dec
outsb
pop
insb
and
ljmp
mov
divb
lods
mov
lret
push
inc
push
aam
add
lret
icebp
adc
lahf
pop
lcall
jecxz
jno
sbb
pop
sbbb
cwtl
in
movl
inc
in
add
sbb
jae
sub
inc
out
sbb
jg
add
stc
mov
mov
sub
enter
call
xchg
adc
into
mov
sti
adc
out
mov
mov
adc
xor
pushf
adc
pop
and
mov
xchg
push
pop
test
or
mov
mov
aas
mov
aam
add
jno
gs
mov
pop
xchg
sub
jbe
in
movl
xchg
push
or
sbb
pop
or
sub
inc
insl
mov
aaa
repz
aam
mov
sbb
fisubs
mov
sbb
sti
nop
pop
aaa
clc
add
xor
stc
daa
jns
xor
xchg
xchg
push
jb
and
bound
arpl
add
mov
addr16
xor
dec
icebp
pop
pop
scas
decb
test
adc
mov
out
push
add
jg
cs
imul
jnp
enter
mov
lcall
out
add
push
add
aad
cs
push
out
test
lods
mov
dec
push
inc
mov
std
and
sub
and
push
dec
in
mov
jne
out
inc
cmpsb
pop
js
stc
rolb
adc
aas
addr16
or
rep
in
mov
es
push
sbb
or
inc
cmpsl
pushf
loop
dec
jne
popf
js
lods
cmp
loop
ljmp
push
idiv
sbbb
aas
mov
sub
inc
outsl
or
icebp
lcall
clc
or
stos
adc
mov
mov
popf
sahf
ret
js
dec
xchg
pop
adc
jl
xchg
cli
or
rorl
or
and
fwait
jnp
pmuludq
mov
lods
adc
mov
ljmp
insl
cmpsl
popl
and
push
loopne
inc
mov
int
jmp
stos
and
das
cs
test
inc
or
ja
sub
add
xor
adc
loop
ljmp
mov
jmp
adc
mov
and
fildll
flds
push
cmp
mov
mov
call
cmp
test
pop
push
stos
lock
lds
fistpll
xlat
outsb
out
cmc
pop
inc
je
jo
cmpsb
lods
pop
mov
in
out
repnz
hlt
iret
inc
sbb
jae
jbe
mov
aaa
or
adc
aaa
push
dec
xor
mov
sbb
pop
adc
clc
jmp
rol
adc
adc
cmpsl
dec
jle
scas
mov
test
xchg
loop
jl
int
xor
adc
jecxz
push
call
leave
add
and
les
ret
mov
mov
int3
ret
cmp
lcall
adc
xor
adc
add
sub
in
std
jae
stos
insl
cmp
push
adc
int3
call
sti
jle
add
sbbb
mov
in
xor
lcall
push
sbb
loope
js
stc
cmp
and
arpl
insl
jmp
dec
xor
jmp
in
fistps
sub
xchg
jbe
sbb
push
das
pop
adc
out
into
jns
xchg
iret
push
repnz
push
and
xchg
mov
out
aad
jae
cmc
cmp
leave
mov
xor
push
movsl
aaa
stos
xchg
out
xor
insb
int
mov
pop
push
pop
int3
rol
int3
xor
hlt
xchg
mov
jbe
pop
int
jns
leave
mov
xchg
cli
outsl
lcall
sbb
aaa
mov
jle
sbb
sub
out
jns
arpl
inc
jnp
jb
mov
mov
imul
inc
add
pop
push
mov
adc
xlat
jbe
xor
mov
cmp
pop
push
mov
fstps
lret
xor
leave
cld
inc
sub
adc
iret
popa
push
add
mov
sub
push
mov
mov
cmp
lret
pop
lcall
push
add
popf
fidivrs
sub
sbb
lods
inc
lods
or
sub
wrmsr
fmuls
cmp
push
or
inc
pushf
das
cmpsb
lock
nop
mov
pushw
mov
add
stos
lret
jbe
sahf
pusha
outsl
inc
fsubrl
pop
scas
idiv
xchg
push
enter
mov
inc
jmp
jle
push
test
or
adc
pcmpeqw
sub
cmpsb
dec
roll
sub
xchg
cwtl
jmp
fidivl
push
lret
lea
or
loope
rcll
jb
out
adc
jnp
insb
push
sbb
iret
out
out
sbb
mov
xor
jecxz
jge
cmp
cmp
stos
dec
mov
in
mov
movsl
pusha
aas
ja
dec
les
adc
nop
pop
jne
or
or
inc
sub
xor
pop
mov
xor
xor
sub
mov
daa
jg
add
inc
aad
dec
adc
stc
pop
cmc
cmp
rcr
jmp
es
and
mov
daa
sub
cmpsb
cmp
mov
jle
aas
rcr
test
mov
push
xchg
dec
sub
mov
mov
shll
mov
popf
in
rorb
int
or
movsl
test
stos
add
push
jo
pop
sbb
pusha
add
sub
out
movsl
pop
daa
cmp
lret
aaa
adc
repnz
mov
push
cmc
pop
ja
mov
mov
das
pushf
jmp
cmp
mov
cmc
xchg
int3
jle
jecxz
adc
jo
and
pop
mov
cmpsb
xchg
imul
jge
sahf
mov
test
aaa
xchg
mov
push
push
jo
loope
xor
push
mov
rclb
getsec
roll
sbb
adc
mov
bound
gs
xchg
out
mov
jmp
data16
stc
sarb
lret
xor
js
mull
push
lods
loop
inc
fwait
and
iret
mov
ljmp
mov
rolb
mov
mov
jmp
xor
mov
cmp
xor
mov
sub
ja
adc
shll
stos
ds
dec
xor
dec
insb
repz
ficoml
sbb
cli
pop
dec
and
aaa
out
pop
and
add
cmpb
ret
aas
jb
jle
icebp
and
arpl
mov
imul
inc
push
sub
out
in
push
and
push
test
mov
cmpsl
data16
sbb
orb
jge
jo
pop
call
scas
mov
stos
cmp
stos
mov
xor
fidivs
movsb
addl
popf
in
test
or
add
sbb
mov
inc
mov
xchg
push
sbb
addr16
repnz
std
pop
xchg
dec
add
in
push
and
movsl
push
xor
jmp
dec
ja
or
test
and
cmpl
cmc
pop
push
into
fucomp
roll
inc
add
cmp
not
inc
jb
popf
out
push
cli
enter
loopne
jl
add
addr16
mov
and
add
xchg
dec
loope
loope
or
shlb
adc
fs
cmp
test
out
mov
adcb
sbb
insb
mov
icebp
icebp
pop
mov
dec
xlat
in
or
test
imul
add
jno
int
js
jae
mov
mov
ud2
jl
inc
jns
xor
test
mov
ss
lods
fstpl
xchg
pusha
xchg
add
push
cmp
lods
sbbl
jp
adc
mov
sub
inc
or
xchg
sub
mov
int3
popa
data16
int3
jo
out
test
shlb
sub
loope
xchg
mov
repnz
mov
rcrl
cmpsl
leave
subb
adc
mov
dec
mov
mov
mov
push
jmp
sub
hlt
mov
dec
mov
mov
loopne
pop
inc
ds
dec
xchg
dec
and
aaa
out
nop
dec
jnp
pop
adc
jg
adc
ficoml
addb
push
mov
adc
loop
addr16
fst
ret
mov
add
add
call
xorl
lahf
imul
ficoms
icebp
sbb
leave
insl
adc
xor
sbb
cmp
cmp
out
scas
or
popa
jge
pop
fwait
add
jno
rclb
or
jmp
int
jnp
mulb
repz
loop
jp
dec
sub
adc
jno
int3
pop
js
mov
lahf
pop
xchg
pusha
mov
test
cmp
icebp
or
arpl
xor
mov
sub
push
imul
dec
fs
pushw
das
shll
pop
mov
into
dec
int3
lcall
push
aam
fdivr
clc
sbb
aad
mov
pop
out
out
inc
jbe
push
add
fcmove
and
or
jns
sub
pop
inc
int
fadds
lahf
jae
mov
adc
inc
sbb
jo
cmp
cmpl
sbb
data16
aas
addps
jl
ret
in
ljmp
or
or
and
stos
add
pop
mov
dec
mov
movsb
xchg
icebp
mov
jl
test
mov
mov
out
cmc
repnz
mov
shll
sub
das
call
in
adc
sti
shll
lea
xchg
shr
movsl
lods
inc
or
and
out
inc
cwtl
lea
filds
sub
les
mov
fstps
push
sahf
es
xchg
jge
mov
dec
or
imul
flds
add
ja
xor
mov
inc
sbb
sbb
lret
inc
mov
and
int
jo
subb
call
arpl
dec
arpl
cmpsb
mov
jnp
mov
pop
idiv
jnp
dec
xchg
adc
aaa
mov
pop
push
repz
cld
jbe
hlt
shl
inc
pushf
es
jae
or
mov
test
dec
cli
jle
mov
lods
mov
fisttpll
cmp
out
sbb
lahf
imul
insb
rcrl
pop
lods
jle
jl
jl
std
stc
inc
dec
fcomps
inc
xor
fidivl
cltd
outsb
push
dec
subl
push
mov
mov
inc
mov
sub
neg
jecxz
mov
jne
aam
xchg
xor
js
sahf
lea
bnd
addr16
arpl
pop
jae
dec
gs
repnz
cmp
movsl
pushf
jg
sub
outsl
adc
cld
pop
in
lret
adc
mov
fisubl
jg
xchg
arpl
add
or
addl
cmpsb
es
lods
imul
dec
push
fsin
es
iret
or
pop
jb
lahf
insb
jo
les
add
jp
test
in
fwait
addl
ja
jne
cmpb
xchg
inc
sub
jo
sti
push
in
stc
mov
test
cmp
jl
cmpb
jo
in
mov
aad
jb
push
jmp
fs
addb
add
fmulp
jle
add
add
out
sahf
pop
pop
icebp
mov
jno
push
xor
sbb
xchg
xor
pop
dec
adc
movups
dec
push
mov
dec
popa
adc
jno
bound
mov
dec
inc
adc
ljmp
jmp
daa
mov
mov
adc
cmp
nop
push
fninit
int
std
mov
in
out
fiadds
ss
fidivrs
mov
das
push
loop
lock
dec
sbb
repz
fisttps
and
test
adc
lcall
es
lock
sbb
fcompl
je
je
popa
adc
cmp
jg
xlat
cmp
and
dec
push
xchg
add
shrb
inc
xchg
ss
add
stos
mov
insb
jnp
pop
out
aam
call
gs
inc
xchg
das
enter
ss
inc
sub
incl
dec
movsl
push
dec
js
test
clc
push
cmc
hlt
jns
jbe
inc
fstpl
push
inc
and
es
adc
das
addr16
add
shlb
aad
jg
outsb
aas
xchg
mov
inc
scas
cmp
push
mov
daa
nop
xor
adc
jbe
aas
nop
insl
pop
leave
mov
lods
cmp
int3
sarb
jecxz
dec
sarb
cmp
xchg
lret
mov
pop
in
jl
movsl
mov
cmp
or
inc
adc
cmp
jo
and
and
xchg
mov
movsl
imul
xchg
std
cmp
out
ja
andl
push
xlat
adc
mov
cmp
xor
push
cld
fdivr
or
mov
js
mov
fistpl
xchg
cli
push
push
jmp
mov
jno
mov
mov
mov
pusha
pushf
cmp
rolb
push
je
roll
sub
dec
outsb
shll
inc
mov
repz
lahf
test
pop
rcll
adc
into
or
mov
xor
data16
add
and
adc
mov
or
jne
sub
push
push
mov
jo
sbb
in
nop
fistpll
add
filds
mov
mov
es
fldcw
pop
call
lahf
hlt
arpl
rep
pop
mov
aad
pop
ljmp
mov
scas
repz
rorl
cmp
pusha
aad
push
das
pop
mov
sti
cli
mov
jl
inc
imul
nop
imul
xor
dec
mov
pop
cld
in
sub
cmp
les
jp
jmp
xor
popf
mov
movl
jae
outsl
sbb
rol
shrl
push
mov
mov
xchg
aas
jno
push
dec
aaa
cltd
gs
inc
jmp
adc
test
repz
imul
enter
imul
mov
cld
inc
lret
cwtl
cmp
cld
mov
in
ret
popl
push
jb
mov
dec
enter
xchg
daa
cs
nop/reserved
dec
dec
add
cmpsb
dec
jmp
mov
leave
jecxz
lret
and
scas
lods
loop
jo
pop
or
std
fprem1
pop
loop,pt
adc
mov
xchg
lret
call
fldenv
pop
out
andb
movsl
rcrl
fwait
cwtl
push
sbb
mov
cmp
jmp
aas
fidivl
mov
pop
loope
rolb
js
and
into
fadds
cmc
jle
ds
xchg
leave
sub
cmp
bound
enter
es
insb
push
inc
xchg
xor
ds
imul
scas
cmp
lods
add
push
loop
cld
push
mov
inc
daa
cmp
dec
xlat
jb
dec
insl
cmp
adc
sbb
cld
sbb
ljmp
rcrb
les
rorb
notb
jo
mov
sbb
jnp
ror
pop
pop
mov
mulb
mov
pop
sub
addr16
cmp
mov
pop
cmp
mov
mov
cmpsl
or
shlb
lret
push
adc
add
cmp
cmp
push
inc
cmp
or
movsl
xor
insl
loopne
lea
lret
loopne
inc
sahf
mov
shrb
or
mov
or
dec
outsb
jle
inc
loopne
sbb
or
mov
inc
lods
mov
dec
pop
ja
in
cwtl
xchg
xchg
out
push
scas
pusha
aas
bound
mov
test
cltd
jp
or
mov
outsb
loope
bound
inc
clc
inc
cs
clc
cmp
ds
mov
iret
xor
arpl
jo
cmp
mov
push
and
inc
mov
xchg
pop
insb
std
push
mov
or
hlt
sbb
push
cmp
sbb
inc
sbb
and
lcall
test
aad
cmp
xlat
ret
test
fcmovne
iret
movsl
jnp
aad
add
scas
in
pop
adc
pop
sbb
lods
add
mov
pop
enter
xchg
xor
jno
adc
sub
jmp
cltd
push
imul
imul
inc
loopne
sub
into
cmp
push
jle
mov
and
jae
cmpsl
pusha
lods
out
add
add
std
and
js
mov
cmpsb
and
mov
rolb
daa
enter
inc
sub
cmp
rclb
mov
or
cmp
testl
adc
dec
xchg
sbb
repnz
dec
xor
movsl
jge
dec
pop
mov
pop
in
sbb
lock
lret
fidivrl
jnp
insl
sub
clc
stc
add
out
jbe
fcomps
pop
mov
sarb
and
xor
and
ljmp
out
clc
es
into
mov
and
mov
mov
jns
and
lret
inc
ja
mov
cs
sarb
popf
mov
jnp
and
out
es
sbb
push
stos
or
stos
xchg
mov
mov
jg
add
cs
inc
pop
test
adc
sbb
ljmp
cmp
fwait
dec
sbb
fidivl
mov
sub
and
mov
pop
inc
pusha
cmp
and
jo
adc
inc
mov
mov
std
sub
mov
push
test
add
nop
dec
push
sbb
dec
mov
roll
sbb
mov
sahf
and
jp
xor
adc
lret
sub
push
pop
addr16
inc
jmp
je
adc
movsl
pusha
out
or
adc
mov
push
cmc
mov
fimuls
int3
dec
pop
inc
cltd
addr16
pop
pop
mov
dec
mov
inc
sti
iret
inc
cmpsb
adc
jb
js
lds
cmpsb
sbb
pop
adc
xor
out
add
dec
sbb
dec
es
shl
and
or
in
mov
add
xadd
xor
mov
add
adc
xchg
scas
rorl
rcrl
data16
add
pop
xlat
test
sbb
cltd
inc
and
mov
lret
sub
js
sbb
xchg
push
mov
mov
fisubs
das
frstor
clc
dec
jae
mov
data16
ficomps
mov
jns
decl
xchg
test
jnp
pop
xchg
pop
push
daa
nop
dec
pop
adc
or
out
sub
sbb
dec
dec
sub
jns
adc
pop
fisttps
arpl
xor
repz
inc
mov
cli
divl
push
mov
mov
lret
in
cmp
daa
sbb
add
add
mov
mov
fcmovnu
jmp
cmp
pop
movsb
or
or
cmp
add
std
lret
adc
out
inc
dec
mov
mov
lods
repz
clc
jns
scas
dec
hlt
pop
adc
rolb
rcrl
in
cli
das
call
push
cs
std
mov
dec
sub
adcl
cwtl
push
fwait
push
repz
pop
lods
add
mov
jmp
adc
daa
jbe
mov
dec
add
rorl
fdivp
xor
mov
sbb
lret
daa
std
jge
add
jmp
push
lock
push
dec
mov
and
mov
sbb
xor
lret
add
inc
dec
or
ficoms
dec
xchg
sub
out
sti
fwait
cmp
adc
dec
idivb
mov
adcl
loope
dec
mov
xchg
ss
es
out
jmp
test
xchg
mov
inc
mov
gs
enter
push
aad
mov
push
mov
std
aam
or
inc
shlb
mov
xchg
jp
nop
xor
or
xor
or
jp
xlat
movsl
fdivs
add
sub
mov
jg
pop
clc
out
nop
add
jg
or
movsl
in
rclb
cmp
adc
idivb
dec
daa
in
and
je
out
mov
out
inc
mov
push
mov
xor
push
idivl
outsl
shr
hlt
cli
imul
pusha
mov
sti
int
adc
mov
orl
lret
jp
jae
aaa
test
testl
xor
ljmp
clc
jmp
jo
arpl
mov
popf
inc
adc
lcall
gs
or
sbb
xchg
inc
cmp
pop
xorb
call
add
pop
push
inc
xor
xchg
add
jle
scas
add
pop
cmpsl
inc
mov
push
xchg
aam
push
cwtl
mov
inc
and
cli
negl
dec
rcll
ja
dec
mov
xor
sbb
sarl
sti
test
xchg
call
rcll
out
inc
ss
mov
pushf
cld
aad
rorb
lret
inc
sub
pop
xchg
int
das
mov
je
stos
repnz
ret
gs
lock
inc
icebp
pxor
ja
hlt
arpl
insl
dec
add
movsb
fnstcw
fisubl
sub
dec
mov
push
cmp
dec
out
test
popf
cld
or
sub
ss
xchg
out
outsl
icebp
frstor
push
icebp
lods
pop
orl
fmull
mov
ljmp
loop
jp
sub
js
push
addl
in
mov
dec
push
adc
inc
and
bswap
out
sbb
es
mov
sahf
inc
popf
lret
scas
dec
icebp
inc
mov
pushf
jno
out
lods
pop
mov
xchg
orb
popf
jno
std
xor
das
fnstsw
mov
xor
mov
clc
and
pop
pop
jnp
sti
mov
inc
ret
push
inc
js
and
jb
sahf
subl
mov
dec
push
ljmp
fiadds
mov
mov
adc
inc
and
test
and
outsl
dec
sbbl
xchg
inc
es
stos
sub
cwtl
out
sbb
in
or
dec
fsubrp
mov
mov
lcall
pop
fsubrl
push
push
sbb
sbb
cmp
cmp
inc
jp
push
and
cwtl
or
adc
push
lret
das
repnz
loop
movsb
sbb
mulb
push
in
repz
pop
adc
or
push
xchg
or
fldt
mov
test
lods
mov
sbb
mov
xor
pop
dec
jno
or
roll
fcomp
pop
imul
xchg
add
test
push
xor
les
push
cmpl
lods
xlat
mov
int
inc
icebp
pop
mov
repz
mov
aam
fs
daa
pop
xchg
stc
mov
gs
jp
ret
xor
fadds
push
mov
pushf
add
sbb
pextrw
imul
jne
loope
push
cmpxchg
jb
inc
jno
fcoml
cltd
sub
xchg
add
sub
adc
sub
add
mov
ja
loopne
xchg
out
mov
pop
dec
loopne
into
or
adc
loope
xor
les
es
test
mov
test
lods
push
ja
pop
sti
addr16
sbb
jg
adc
inc
adc
lea
jp
mov
xor
mov
xor
dec
push
clc
xor
lahf
xor
jge
ss
push
lret
popa
mov
mov
and
mov
addl
pop
nop
pop
pop
jp
and
sub
push
pushf
sub
bound
push
in
ljmp
fld
xor
inc
int3
xlat
ret
dec
test
rclb
mov
daa
inc
fistl
subl
xchg
aad
mov
pop
xchg
imul
push
cmc
in
push
cld
add
mov
mov
mov
mov
icebp
jmp
addb
mov
push
push
je
jno
cmovge
cwtl
inc
inc
push
inc
dec
inc
fwait
jecxz
or
pop
dec
test
push
inc
or
mov
fcomps
and
pop
nop
push
int
push
in
aaa
sub
cmpb
mov
shl
lret
mov
addb
xchg
fwait
cmp
sbb
jnp
outsl
push
sahf
and
repz
mov
repnz
ret
push
mov
mov
xchg
scas
or
in
and
mov
aas
inc
and
push
push
and
fwait
cmpsl
cmc
dec
fsubrp
ja
jae
sbb
push
add
cmp
push
mov
pop
aas
or
push
lods
jno
mov
insl
add
pop
mov
test
sbb
pop
mov
or
jmp
js
push
insb
push
outsl
push
or
sbb
gs
test
dec
push
aas
dec
push
es
jnp
pop
jns
vmovdqa
jecxz
ss
pop
call
sub
sbb
add
lret
lret
out
addr16
int3
loope
hlt
outsl
int3
lods
cmpsl
in
and
mov
out
mov
dec
or
cli
out
mov
push
adc
mov
inc
jg
insl
mov
daa
xchg
popf
cmc
push
test
pop
add
jnp
inc
cmp
stos
movsl
ret
sub
mov
mov
mov
rcrb
sbb
fmuls
filds
pop
sahf
lcall
pushl
arpl
sub
add
hlt
test
ret
mov
outsb
sti
ljmp
aas
std
jns
pop
and
mov
push
mov
xorb
mov
jb
cmpsl
call
pop
mov
and
mov
in
out
and
mov
adc
mov
cmp
test
and
mov
das
mov
das
dec
push
xlat
xor
hlt
daa
pop
lret
hlt
out
pusha
addl
aas
jge
inc
lods
andps
into
mov
inc
and
ds
sti
mov
adc
mov
aam
push
push
or
inc
inc
leave
mov
and
lock
pop
aas
fistpll
gs
pop
cs
sub
cmp
or
movsb
jl
and
adcb
jg
pop
adc
add
adc
fldenv
je
lcall
ficomps
leave
scas
dec
pop
dec
std
in
cmp
push
scas
stos
and
xchg
out
sub
or
adc
dec
and
cli
xchg
dec
jns
cmc
jne
jg
into
test
out
stc
push
test
jmp
xchg
lock
pushl
mov
xchg
push
pop
daa
xchg
jmp
rcl
add
rorb
sti
adcb
mov
jns
push
shl
movl
add
sub
xchg
sbb
xor
xorb
mov
dec
test
ret
nop
sub
in
addr16
sbb
lock
dec
dec
mov
inc
xor
repz
into
pusha
in
cmc
outsb
pop
ljmp
inc
xor
repz
push
inc
pop
mov
pop
mov
or
dec
add
insl
mov
out
xlat
push
dec
add
pop
shll
xor
sarl
scas
sti
mov
mov
outsl
xor
adc
mov
shrb
jbe
lds
mov
adc
popa
push
fiaddl
repz
fwait
xchg
mov
mov
ds
sbb
push
xchg
call
dec
sbb
sbb
dec
sbb
xchg
push
xor
std
xor
imulb
shll
in
cs
mov
mov
cltd
mov
mov
sahf
pop
sbb
jbe
ret
pop
mov
lods
fsubs
ja
sub
mov
das
cmp
ffree
pusha
cwtl
mov
xchg
mov
jecxz
rcll
bnd
jno
lcall
test
lret
outsl
es
cmpsb
mov
pop
stos
inc
push
dec
loopne
xorl
adc
idivb
fistpl
ret
movb
push
adc
repnz
js
cwtl
jmp
xchg
xor
add
ret
stc
insl
orl
or
fcmovnbe
or
call
sbb
pushf
sub
ds
xor
int3
cltd
das
pop
pop
loopne
pusha
inc
mov
sti
pop
lock
xor
adc
std
inc
in
add
add
mov
test
shlb
xor
addr16
or
dec
sub
xchg
dec
and
add
iret
xor
ret
addr16
sub
xchg
sub
stos
push
mov
stos
imulb
popa
dec
jne
inc
fnstcw
fdivrs
jne
jno
js
pusha
leave
xchg
dec
ret
lods
dec
sbb
or
fsubs
xchg
and
mov
xor
mov
out
push
hlt
mov
and
mov
out
push
or
or
shlb
rcrl
out
jno
xorl
mov
rorl
mov
and
cmp
inc
add
sbb
aad
xlat
in
lods
jae
loopne
pop
push
adc
xor
repnz
sbb
mov
repz
adcl
cmpxchg
imul
sbb
aad
mov
lahf
sbb
into
pop
mov
fistps
sbb
in
or
stos
xchg
pusha
mov
jb
xor
mov
or
mov
add
add
int3
or
inc
xchg
in
cmp
frstor
adc
arpl
cmp
rcll
test
pusha
cmpsb
pop
inc
repnz
mov
cmp
iret
out
jmp
into
pop
cmp
sbb
ja
out
xchg
out
xchg
aaa
lret
lahf
or
out
into
jle
mov
push
es
aaa
movsb
shl
adc
xchg
mov
jne
cmp
mov
mov
int
lret
inc
cmp
inc
xor
pop
mov
repnz
mov
or
add
scas
mov
test
push
inc
imul
insb
sub
in
sub
dec
shrb
jbe
call
cltd
inc
push
fisttps
push
fldenv
inc
jmp
jae
xchg
inc
ret
jle
push
xchg
les
push
fmull
pop
pop
or
xor
cmp
es
fmul
out
xor
clc
jg
popa
lret
pop
and
subb
xor
movsb
or
call
push
jl
sti
mov
xchg
in
and
xchg
ljmp
cmp
test
jns
jl
add
int3
in
mov
in
xchg
and
jb
jg
rorl
pushf
mov
cltd
test
dec
lcall
loopne
pop
imul
arpl
sbb
inc
mov
jbe
icebp
jo
fcomp
push
aam
nop
lcall
mov
xor
jp
dec
imull
enter
pop
sbb
addr16
push
shlb
ret
xlat
mov
ja
gs
scas
xor
pop
sbb
xor
call
push
imul
jge
mov
lods
jnp
stc
shl
outsb
mov
xchg
pusha
add
js
test
mov
ret
push
lea
xor
scas
leave
add
clc
mov
jmp
loopne
fildll
lcall
stos
inc
jo
sbb
insl
test
xchg
pop
js
pop
stc
xchg
clc
js
cmp
dec
and
in
fistpl
mov
xchg
movl
sub
mov
sbb
or
xchg
rcrl
sub
insb
cwtl
mov
ret
or
rorl
and
incb
xorl
or
inc
and
sahf
stos
jmp
lfs
decl
xchg
mov
rcl
imull
adc
jno
ficompl
or
test
js
cmpsb
cmp
xchg
in
and
loopne
clc
stos
jae
jae
and
pop
scas
ja
scas
aad
call
pop
sub
outsb
sub
or
mov
in
jbe
xchg
ds
mov
pop
xor
mov
jge
sti
sub
insl
ljmp
mov
add
jnp
mov
sub
add
fwait
push
cmpsb
test
sub
call
sub
xchg
dec
or
in
repz
jno
flds
cmp
and
inc
rorb
into
das
inc
std
mov
mov
mov
or
pusha
jecxz
fcomps
mov
sub
lock
ljmp
js
jne
imul
and
mov
mov
outsb
xchg
xchg
stc
mov
idiv
clc
shrl
xchg
cmp
sbb
jo
icebp
sti
and
mov
mov
mov
jg
cli
push
add
lcall
add
movsb
outsl
inc
jnp
ljmp
mov
pop
dec
sbb
mov
adc
stos
jbe
cmpb
insl
decl
jg
jl
rclb
xchg
push
mov
jne
mov
lret
and
mov
sub
jle
in
rclb
and
test
dec
pop
aad
push
lret
inc
jg
xchg
lods
rcl
cwtl
push
pop
outsl
mov
jb
xchg
inc
sub
imul
out
mov
aad
jno
js
xchg
in
cs
popa
fistl
inc
lahf
insl
ret
jge
cmpsb
xor
dec
xchg
adc
jecxz
push
pop
movsb
xlat
push
rclb
mov
push
or
arpl
test
fs
xor
fisttpll
call
sub
xchg
aaa
jge
punpckhbw
xchg
imul
push
add
or
xchg
rcr
cmpsl
hlt
enter
ror
orl
jg
test
mov
call
and
xchg
movsl
fwait
clc
cmp
ja
sub
test
lods
rolb
in
mov
cmp
fninit
shll
mov
ja
push
push
add
push
and
fists
mulb
push
xor
in
nop
daa
sbb
add
cmpsl
shr
lret
cmp
mov
sarl
clc
lock
aam
and
sahf
and
loop
or
and
lea
inc
mov
adc
leave
lods
add
ja
out
mov
mov
fistpl
add
imul
xlat
sub
in
repz
and
nop
or
pushf
dec
cmp
pop
enter
rorl
loop
popa
pop
mov
shrb
iret
inc
pop
pop
cs
cwtl
sub
or
lret
sub
cmp
sub
loopne
mov
mov
mov
xorb
xor
adc
pop
mov
mov
xchg
fwait
lahf
mov
adc
shrb
xchg
lea
pop
lock
imul
movsb
dec
cmp
fwait
mov
call
xlat
movsl
loope
pop
add
mov
faddl
lea
mov
push
dec
sahf
adc
arpl
mov
and
mov
imul
push
rcll
cli
inc
dec
mov
loop
inc
addl
cmpsl
insb
jle
rorl
xor
test
push
and
xchg
lret
jge
mov
inc
pop
mov
out
sbb
inc
out
and
mov
dec
push
push
int3
into
call
cmp
inc
sbb
pop
push
or
xchg
mov
jne
movaps
les
mov
nop
iret
outsl
out
mov
lret
mov
mov
xchg
cltd
jb
out
lea
into
js
mov
sub
xor
mov
popa
xchg
sarl
shll
push
in
fcompl
jmp
mov
push
and
in
dec
imul
into
cmp
sub
mov
jne
sbb
test
dec
mov
xchg
pusha
sbb
imul
std
out
xchg
fimuls
movsl
inc
leave
push
push
pop
mov
push
icebp
lds
mov
mov
or
xchg
loope
insb
sub
dec
push
lods
ds
outsl
dec
mov
test
ret
dec
out
pop
inc
push
or
inc
sub
push
and
and
xchg
test
and
mov
xorb
pop
mov
mov
sbbl
push
imul
mov
lock
add
adc
xor
rorb
and
xchg
jae
addb
cmp
mov
jbe
outsb
xor
repnz
inc
mov
arpl
lock
sub
ffree
mov
ja
sbb
jbe
aaa
sbb
pushf
stc
or
cmp
or
clc
pop
lahf
out
cmp
pusha
and
jbe
fnstenv
jle
inc
std
scas
mov
jbe
ret
aas
shl
sbb
pop
jle
add
lods
pop
cli
pop
movsb
mov
test
add
mov
aas
jg
sqrtps
sbbl
xchg
or
mov
pop
stos
dec
inc
outsb
mov
cmp
cli
fs
push
ja
out
or
push
mov
xchg
fcompl
stc
mov
pusha
dec
dec
pop
or
pop
or
out
pxor
leave
cwtl
push
iret
test
add
and
xor
and
lret
je
out
jnp
aam
push
outsb
pusha
mov
inc
aam
pop
xlat
decb
dec
pause
incb
cs
out
das
jmp
call
movb
test
pop
bound
adc
inc
mov
cwtl
mov
int
pop
cwtl
ret
dec
jp
jne
dec
cmp
js
mov
xchg
push
mov
mov
mov
popl
mov
fwait
xchg
adc
sbb
mov
aam
fcomip
dec
cmp
fdivrl
shll
lret
mov
popf
mov
fimull
cmp
incl
push
xchg
dec
ljmp
jo
cmpsl
add
sub
or
stc
xchg
mov
or
xchg
push
mov
loop
gs
sub
fimuls
out
stos
rolb
add
push
dec
cmpsl
push
sbb
mov
cmp
mov
mov
mov
push
jecxz
pushf
xchg
and
test
cltd
mov
push
pop
pop
test
adc
or
int
xchg
pop
mov
divl
xchg
es
iret
fisttpll
pop
out
and
add
dec
mov
mov
sbb
add
mov
mov
sub
int
call
lret
adc
scas
pop
dec
outsb
ss
xchg
arpl
sarb
sub
rorb
enter
testb
into
fcmovu
fs
dec
xchg
sub
adc
cmp
xlat
pushl
aas
xchg
and
jl,pt
shr
adc
xor
mulb
daa
inc
ljmp
ljmp
xchg
mov
aad
and
mov
fstpt
push
fcompl
insb
enter
in
icebp
mov
fidivl
mov
sbb
lods
fs
loopne
movsl
aam
mov
out
cwtl
mov
xchg
mov
cmp
mov
cmpl
cs
lahf
notb
cs
pop
cmpl
or
jb
mov
cmp
jnp
push
cmp
outsl
lahf
mov
add
scas
cmp
dec
scas
sbb
xchg
mov
xchg
push
and
sbb
aam
scas
out
fimuls
scas
call
or
and
push
adc
push
inc
pop
pop
xchg
out
or
cs
mov
cld
insb
dec
inc
and
pop
scas
in
dec
int3
out
mov
movsb
sahf
mov
sub
push
nop
and
into
std
pushf
dec
pop
jl
subb
leave
dec
pushw
mov
xor
xchg
dec
mov
hlt
push
push
ja
sub
insb
cmc
call
adc
mov
xor
xor
aam
cmc
dec
mov
adc
sbb
pop
les
pop
cmp
ret
xchg
int
dec
mov
lcall
mov
insl
aad
or
std
leave
or
ret
jle
mov
mov
pop
inc
into
sar
daa
jecxz
imul
sbb
int
arpl
cmpsl
shlb
sarb
push
das
mov
jb
rcrb
popf
add
sub
push
mov
into
test
xlat
out
cmpsl
jle
pop
mov
inc
adc
inc
aam
or
cltd
cmp
lahf
cmpsb
outsl
jmp
push
fs
adc
sbb
dec
inc
in
pop
ret
cmp
and
mov
ljmp
jbe
xchg
or
and
mov
or
jg
clc
fistpll
mov
jp
mov
cmp
mov
addr16
pop
adc
fisttpl
mov
jp
adc
test
push
mov
call
fstps
xor
pop
cwtl
or
clc
cld
jns
mov
adc
push
loope
cmp
or
adc
lret
push
sbb
out
imul
mov
mov
sub
pop
push
pushf
sbb
xorl
fcmovne
jnp
in
aaa
and
adc
dec
movsb
inc
ret
and
and
movsb
pop
cli
sub
xchg
and
rorl
jbe
jns
pop
mov
mov
xor
mov
bound
outsb
push
pushf
and
xor
stos
arpl
fistpl
addr16
nop
pop
push
mov
pusha
lds
mov
loope
cmc
shrl
lret
mov
hlt
sbb
cwtl
dec
push
roll
icebp
mov
jl
outsb
xor
pop
xor
dec
int3
mov
mov
in
iret
pusha
push
pushl
adc
mov
and
pop
sahf
imul
push
push
pop
jp
jae
scas
outsl
pop
or
inc
xlat
stos
sub
cltd
cmp
adc
test
adc
repnz
or
fstps
loope
xchg
inc
movsl
pusha
sbb
sahf
sbb
and
sbbb
leave
xor
in
sar
mov
mov
daa
addb
mov
mov
stc
xchg
outsb
push
lahf
bound
dec
or
lcall
xchg
xor
es
push
or
sbb
xor
loop
adc
enter
stos
xchg
ljmp
fsub
jno
xchg
xlat
in
test
in
je
hlt
inc
aad
xchg
insl
sbb
xorb
jne
pop
leave
xchg
int3
mov
pop
xor
jne
sbb
pop
lods
mov
cmp
cmp
mov
das
es
jnp
fcoms
std
xor
jno
lcall
mov
mov
xor
jp,pt
jmp
aas
sub
mov
sub
sub
dec
xchg
jne
xchg
mov
push
out
shll
insl
dec
xor
xor
mov
jbe
jns
adc
xchg
gs
mov
fwait
insb
stc
and
outsb
fiaddl
cmp
or
mov
xlat
jg
mov
jae
mov
pop
lods
in
adc
push
pop
mov
mov
pop
mov
dec
xchg
cld
ss
cmpsl
fiaddl
aad
pop
push
mov
std
adc
and
dec
dec
ss
gs
xorl
adc
jmp
lock
aaa
push
xor
stos
or
push
jmp
push
out
sub
pop
faddl
repz
lods
lock
xchg
xor
pop
movsl
int3
and
in
out
lret
dec
xchg
cld
xchg
loopne
insb
xor
push
inc
stos
rcll
imul
pop
push
ret
sar
mov
sbb
dec
outsl
jg
rcll
or
ficoml
inc
popf
aam
sbb
jae
insb
dec
lret
push
adc
xor
pop
shll
ds
repnz
div
inc
into
repz
jno
subb
mulb
int
fdivrs
sub
inc
fildl
cmp
mov
hlt
ja
leave
xchg
xor
mov
adc
test
fsubrl
repz
fcoms
mov
add
xor
cmp
add
aad
mov
fistpll
jle
or
push
mov
jmp
pop
or
xor
add
fld
test
fnstsw
mov
jecxz
outsl
jne
push
les
inc
test
sub
inc
fisubrs
sub
pushf
stos
xchg
jl
imul
cmpl
inc
sub
sbb
mov
ficoms
or
mov
pop
shll
fs
cmpl
or
or
mov
sub
dec
or
cs
jg
fdivrl
outsb
xchg
push
xchg
and
cmp
inc
mov
push
rcrb
sbb
cmp
pop
adc
pop
cmpsl
loopne
mov
aam
out
stos
push
rcrb
cmp
xchg
mov
scas
pop
popa
cmp
pop
pop
jb
mov
mov
fldcw
pop
push
test
add
dec
adc
inc
xchg
xchg
sbb
fld
adcl
icebp
imul
sbb
outsb
mov
stc
arpl
dec
ss
jecxz
pop
jmp
xorb
push
subb
jp
dec
decl
sbb
test
adc
psubusb
scas
nop
jecxz
test
pop
jle
mov
rclb
push
hlt
test
cltd
out
xchg
cs
inc
dec
pop
loope
pop
leave
add
cs
stos
sbb
shll
mov
or
and
mov
leave
push
ficoms
std
xor
std
xchg
nop
aas
push
jae
aad
xchg
and
pop
movsb
hlt
or
rcll
addr16
cmp
out
inc
add
aas
test
lahf
pop
xor
cli
loop
stos
adc
xchg
test
pushf
fiaddl
xchg
xor
out
fsub
adc
mov
out
loopne
cs
or
pusha
inc
fildll
mov
jo
ds
dec
jp
loope
jmp
push
push
or
fbld
popw
cmp
into
push
imul
ljmp
popf
add
pop
gs
daa
in
xchg
std
jg
int3
into
testb
sarl
or
adc
adc
inc
fs
ret
outsl
loop
dec
into
pop
or
arpl
cld
lret
and
nop
push
repz
mov
cmp
icebp
add
je
cmpsb
lds
add
xchg
mov
dec
das
inc
repnz
cmp
add
jno
dec
mov
push
ds
test
orb
xor
cmp
pop
sbb
sbb
mov
ds
idivb
mov
xchg
sar
dec
mov
hlt
ficomps
xchg
fadd
fists
lret
sub
aad
adc
or
push
test
clc
and
lret
add
inc
imul
mov
mov
ljmp
adc
add
mov
call
jb
mov
sbb
push
in
xchg
outsb
jo
inc
mov
repz
push
cmp
cwtl
in
xchg
push
add
add
xchg
rorb
push
sub
add
add
fxam
fadd
pop
pop
inc
jp
and
and
pop
mov
pop
and
loopne
push
xor
ss
adc
aam
lock
nop
cmpsl
add
outsl
jl
shlb
bound
dec
les
push
nop
sub
xor
push
add
mov
out
jge
xorl
and
ss
push
rdmsr
mov
cmp
pop
xchg
jnp
or
push
add
imul
mov
popa
sti
test
int3
nop
push
das
shl
pop
pushf
push
and
lock
xchg
jle
int3
enter
pop
mov
clc
clc
aaa
cmpsb
mov
test
jno
jnp
imul
push
jbe
lahf
xor
xchg
ja
mov
xchg
sbb
pop
pop
in
cmpsl
int
les
es
inc
icebp
in
fldenv
sti
mov
inc
arpl
stc
scas
insb
cmp
imul
mov
add
and
sbb
sahf
mov
dec
scas
in
mov
fcompl
std
mov
out
xor
jae,pt
push
dec
adc
sbb
xor
adc
mov
xchg
insb
out
inc
cwtl
dec
mov
leave
pop
jg
sub
adc
das
call
jno
ret
pusha
clc
es
adc
repnz
stc
dec
icebp
outsb
enter
gs
xor
stos
sbb
out
stc
mov
pop
pop
jnp
sbb
pusha
fnsave
xchg
popf
add
adc
call
mov
and
andb
cmp
das
inc
mov
sub
adc
dec
xchg
enter
add
cmp
shrl
cmp
sub
into
test
push
sbb
sub
and
mov
ret
cmp
mov
in
push
push
daa
add
les
cli
sub
inc
ljmp
negl
mov
jecxz
insb
sbb
cmp
imul
cli
xchg
insl
cmc
bound
in
sti
cmp
mov
push
outsb
jo
mov
cmpsl
je
gs
es
in
stc
loopne
arpl
out
cmp
lods
ret
mov
fs
push
sub
sbb
xchg
mov
cmp
mov
push
fsub
addb
hlt
jbe
or
add
push
aas
jmp
jge,pn
or
xchg
mov
jno
push
and
add
add
jnp
imul
lret
adc
faddl
xchg
orb
insl
arpl
pop
divb
fisttpl
mov
in
push
scas
push
xchg
imul
mov
mov
cld
aas
jno
inc
sub
xorb
dec
or
clc
xchg
push
negb
js
sbb
sbb
lods
xlat
xchg
das
jle
or
sub
ss
xchg
aam
lea
xor
and
shlb
cmp
sbb
stc
xlat
stos
mov
sub
xchg
fldenv
dec
push
sub
stc
add
push
sysenter
sbb
or
dec
popf
dec
jb
push
mov
loope
nop
mov
and
cltd
xchg
mov
into
stc
sub
mov
xor
addr16
add
cltd
adc
or
loop
dec
negl
jae
pop
jp
les
push
pop
inc
pop
in
or
sbb
loope
xchg
sbb
add
and
pop
push
adc
jge
push
xchg
aam
push
mov
sub
imul
ja
vcvtph2ps
push
imul
cli
dec
or
in
jmp
lea
mov
mov
pop
in
and
adc
and
fimull
or
ret
and
mov
in
aaa
call
lock
jmp
out
in
sub
adcb
or
icebp
lcall
adc
lcall
mov
cmp
outsl
jae
testl
addr16
mov
mov
adc
jno
inc
dec
cld
aam
adc
dec
out
xor
and
gs
dec
push
bound
fwait
adc
inc
pop
data16
pop
pop
ret
das
inc
pop
push
sbb
xor
clc
ret
mov
test
jl
mov
sbb
pop
je
cwtl
cmp
jb
and
xor
mov
loope
or
notb
bnd
sbbl
out
stos
cmp
mov
push
int
jb
lret
inc
outsb
cwtl
and
rorb
fbstp
sub
dec
dec
aam
adc
mov
rorl
mov
fisubrl
cmp
mov
mov
sahf
sbb
imul
xor
adc
popa
pushf
mov
iret
mov
aaa
pop
mov
mov
je
sahf
pop
dec
mov
ret
clc
adc
xlat
adc
jle
mov
cltd
xchg
call
inc
hlt
sbb
fldcw
mov
ret
jl
shrl
jle
mov
mov
out
cmp
test
mov
xchg
mov
push
ds
rcr
lcall
pusha
push
or
repnz
jns
cmpsb
or
or
daa
call
mov
out
ja
jns
mov
pop
and
pop
ret
mov
aaa
sbb
pop
pop
fdivr
outsb
filds
fildl
outsl
cwtl
inc
leave
ret
mov
mov
jecxz
xchg
and
shll
jmp
pusha
adc
cmpsb
dec
sub
ret
xor
lock
xor
xchg
push
push
or
lods
in
sub
mov
jp
in
in
dec
decl
data16
loope
mov
ret
or
xchg
js
mov
out
or
and
outsb
daa
jnp
adc
xchg
push
adc
mov
lcall
jmp
pop
hlt
lods
in
mov
pop
out
mov
rcrl
jo
and
push
cmc
xchg
jmp
cmpsl
movsb
xor
dec
jnp
inc
mov
and
cmp
lahf
jmp
hlt
stos
xor
sbb
lds
test
idiv
ljmp
or
adc
rorb
test
es
xchg
pop
push
xchg
inc
sbb
fstps
mov
dec
pop
jbe
mov
addr16
loopne
jl
xor
mov
sahf
scas
sub
sbb
sbb
add
or
test
xor
xlat
cwtl
aam
sub
fildl
mov
add
mov
mov
int
addr16
pop
xchg
inc
or
ljmp
push
add
outsb
push
lahf
sbb
jnp
mov
xlat
xor
push
jb
orb
ds
call
lods
mov
or
mov
pop
dec
gs
in
insb
cmpsb
mov
sub
inc
cltd
pop
xlat
movsl
mov
mov
in
cmp
ds
add
push
sub
adc
subl
pop
in
insb
push
cmp
jmp
lds
and
lea
daa
call
jge
sub
pop
leave
xchg
mov
out
test
cmp
jmp
cmp
subl
cld
andl
push
mov
addr16
bound
jns
in
sbb
nop
ljmp
ja
and
paddq
out
fiadds
adc
js
dec
mov
push
lcall
inc
mov
icebp
stc
into
aam
cmp
push
jecxz
shl
test
inc
out
imulb
jae
aaa
xor
out
ret
movsb
cltd
aad
pushf
je
std
inc
jp
mov
test
jg
inc
xlat
mov
jno
iret
push
push
mov
sub
gs
je
and
xchg
inc
ror
xchg
jb
mov
mov
imul
lret
push
xchg
dec
sub
pop
jbe
push
ret
sub
xor
adcl
fcompl
bound
jo
fidivrl
and
das
ret
mov
jnp
xor
mov
mov
inc
outsl
sub
mov
leave
lods
and
or
cmp
mov
jl
inc
clc
sbb
sub
and
loop
repnz
pusha
mov
dec
ret
cld
inc
divb
jmp
fistpll
fdivrs
pop
mov
mov
imul
or
xchg
subl
push
jno
push
loopne
scas
jo
ror
outsb
mov
sbb
aam
inc
pushf
ds
mov
rorl
mov
dec
fucomip
movsl
xchg
xor
push
out
shlb
std
or
mov
rep
sbb
pop
stos
mov
xlat
dec
das
nop
les
cmp
mov
push
mov
xor
stos
or
sahf
dec
aad
and
cs
out
lea
push
and
mov
fwait
leave
nop
imul
add
or
loop
jno
adc
dec
mov
lds
popf
jae
xor
jne
and
subb
mov
aas
mov
shrl
clc
hlt
push
ss
xor
ss
add
add
push
lahf
cli
xchg
icebp
es
and
jecxz
rcr
cltd
mov
jecxz
mov
lods
xchg
pusha
roll
cmp
add
and
xor
shl
loop
xchg
aaa
mov
dec
repz
out
or
inc
push
push
pop
inc
pop
stc
pop
jmp
lret
dec
mov
jno
add
out
bound
sbb
inc
jae
testl
mov
out
imul
jp
out
add
movsb
xor
cmp
dec
shll
jne
mov
inc
push
mov
dec
outsl
mov
lret
sub
pop
ret
jl
call
push
shlb
pop
and
pop
mov
push
cltd
in
jbe
int3
outsl
call
sahf
mov
or
lret
dec
jb
add
faddl
ljmp
cltd
enter
ljmp
sub
ret
sub
decl
push
mov
adc
jo
push
jmp
push
aas
dec
mov
loopne
cmp
mov
movsb
cwtl
dec
jno
mov
repz
pop
dec
cmc
push
shlb
push
jmp
ret
push
imul
fisubl
rcrb
icebp
ljmp
and
nop
pop
fsubrs
pop
push
sub
xor
dec
shll
add
cli
test
push
inc
add
sbb
cmc
imul
sub
mov
pop
pop
push
cmpb
sub
lcall
movsb
add
gs
sar
lods
lods
insb
sbb
insl
adc
or
dec
xlat
jecxz
lods
mov
sub
pop
outsl
nop
jg
inc
pop
aad
xchg
pop
mov
mov
mov
dec
fcomps
sub
inc
lods
adc
inc
pusha
test
xorb
xchg
outsb
push
mov
xorl
xchg
push
adc
lcall
ds
mov
push
push
jnp
imul
mov
inc
daa
adc
clc
xor
sbb
test
or
rcr
in
fisubrl
cmp
jmp
fisubs
shl
sbb
gs
xchg
push
test
push
imulb
and
and
shlb
inc
xchg
mov
cli
inc
call
mov
into
pop
fidivrl
mov
lret
mov
mov
push
cld
pushf
jno
jl
rcrl
mov
jnp
push
pop
ss
or
mov
fcoml
push
push
data16
cmp
adc
pop
fidivl
decl
mov
call
bound
xor
es
push
mov
insb
mov
fistps
fwait
inc
mov
dec
mov
sarl
imul
movb
std
xor
xchg
dec
inc
sbb
lcall
leave
loop
rcrb
lods
lods
add
and
mov
push
outsb
loope
push
push
jle
lock
add
cmpsb
mov
dec
leave
mov
xor
and
fimull
mov
inc
push
pop
in
sub
xlat
xchg
mov
sbb
cmp
add
dec
dec
jnp
jno
push
frstor
pushf
je
inc
repz
mov
lds
call
inc
fisubrs
std
adc
and
and
das
cmp
dec
cs
xlat
arpl
jmp
sub
or
gs
aas
sbb
lods
movsl
icebp
pop
cmp
and
lock
dec
stos
sbb
cmp
jle
setge
bound
push
mov
xor
stc
add
adc
cli
push
inc
adc
and
sub
push
xchg
fs
push
mov
or
adc
push
xchg
nop
ficomps
push
add
mov
lock
mov
sbb
outsl
or
jmp
sub
insl
xor
js
rorl
xchg
pop
inc
pop
sar
imul
push
out
jnp
cwtl
jns
push
inc
and
sbb
and
xchg
sub
push
fldenv
sbb
sbbl
adcb
dec
add
xchg
and
out
and
fdivs
push
jle
out
adc
adc
pop
sub
das
or
jecxz
jne
pop
add
sarl
loopne
outsb
dec
mov
arpl
pop
mov
mov
enter
cmpsb
hlt
push
mov
cmpsl
mov
xchg
push
stos
add
add
xchg
or
sub
inc
add
jl
es
jae
push
pusha
jae
pushf
lods
sbb
cld
mov
test
js
sub
test
loopne
mov
sbb
and
xor
test
or
js
mov
ret
enter
movsb
push
in
arpl
cmpsl
test
out
icebp
imul
das
or
dec
outsb
or
rorb
jnp
sahf
sub
pop
enter
pop
pop
mov
or
xlat
lahf
test
xorb
fsts
mov
roll
aam
sbb
xchg
jno
dec
inc
js
jmp
push
mov
loope
jecxz
mov
out
mov
xchg
pop
add
adc
stos
jo
push
jg
into
xchg
es
cmc
aaa
fwait
adc
decb
test
push
fdivrp
add
cmpsb
pusha
mov
mov
adc
cmp
cmp
cmc
imul
jb
repz
je
fcoms
imul
jmp
mov
mov
icebp
cmp
or
stc
jb
jle
imul
mov
cltd
mov
inc
in
aad
scas
cmp
fs
std
nop
sbb
push
in
push
aas
or
push
in
inc
enter
xchg
jge
mov
adc
pop
bnd
jb
out
cmp
sub
add
pop
pop
cmpsl
in
mov
aad
ret
mov
in
in
test
fisttpll
mulb
es
ljmp
jl
shll
inc
outsl
aad
aad
mov
adc
dec
or
pop
fistpl
addr16
xchg
je
lret
cmpl
das
test
fwait
insl
mov
push
andl
ffreep
mov
cltd
sbb
scas
jg
pop
sbb
test
or
lods
cli
lahf
or
test
xlat
daa
aad
movsl
ja
clc
lock
sbb
in
ss
push
es
mov
std
and
imull
out
dec
shr
test
pop
data16
test
daa
push
and
out
push
xlat
gs
rorb
mov
xchg
and
pop
pop
loop
lods
loopne
cmp
jno
stc
cwtl
add
jne
push
adc
xchg
push
mov
add
lcall
mov
jbe
imul
xchg
dec
lret
jge
inc
negb
xchg
jecxz
fsubs
mov
push
addr16
mov
fildll
mov
mov
sahf
inc
mov
ljmp
add
das
sbb
es
sub
adc
dec
in
out
fildll
stc
dec
jne
shll
add
sub
fisubrs
andb
dec
inc
cmp
call
fcmovnb
int
lret
lds
stos
pop
push
pop
in
je
mov
cmc
sbb
stos
jno
fiaddl
jb
gs
sbb
add
xchg
fdivl
das
dec
lcall
mov
pop
pusha
jne
mov
lea
push
scas
aas
mov
jge
fimuls
add
lret
stos
add
call
and
xor
jns
sti
pop
dec
lds
push
loopne
stos
push
fs
fwait
sbb
repnz
lea
pushf
ret
subl
hlt
add
iret
cltd
div
jl
int
es
cmp
stc
out
cmp
sbb
movsl
aas
hlt
push
xchg
or
jecxz
pop
repnz
subl
add
sub
fucomip
inc
push
adc
lock
xor
addr16
sbb
xchg
xor
or
xchg
fwait
cmp
jmp
fdivr
push
mov
cmp
mov
addr16
outsl
sub
inc
fwait
sbb
enter
repz
dec
in
add
in
push
ret
int3
lock
rclb
mov
ficoml
sub
dec
popf
js
xchg
add
sub
fisttpll
sbb
movsl
lds
push
in
xchg
sub
outsl
lock
cmp
xor
sarl
mov
into
out
je
outsl
clc
push
out
aad
add
mov
cmovg
inc
adc
mov
cmp
pop
mov
daa
jmp
jle
je
pushf
sti
inc
inc
jo
insl
loop
pop
pusha
mov
inc
mov
jecxz
cwtl
push
push
mov
adcl
sub
mov
inc
pop
ss
pop
sub
ljmp
push
mov
mov
cmp
pop
mov
and
jle
pop
and
and
nop
cmp
add
aaa
pop
add
jmp
mov
mov
sahf
in
mov
jge
sbb
jns
xchg
push
fistpll
push
aaa
push
icebp
les
nop
loope
adc
adc
cwtl
setbe
cs
or
or
sbb
pushf
xchg
inc
pop
inc
scas
sbb
or
push
xchg
pop
inc
pop
or
mov
inc
jbe
jge
pusha
test
addr16
jge
test
jo
jne
aaa
dec
in
andps
dec
jl
xor
cmc
jne
ret
sub
mov
je
sbb
std
push
push
outsl
bnd
test
xor
in
in
cmp
imul
std
mov
sahf
jno
aaa
mov
int3
xchg
pop
dec
add
mov
data16
sub
mov
mov
pop
mov
add
inc
inc
fcmovnb
and
xor
xchg
jae
adc
leave
inc
jae
xchg
jnp
outsb
sub
dec
mov
jp
jae
pop
stc
or
or
and
xchg
inc
cmpsb
mov
dec
sbb
mov
out
jle
jae
sbb
pop
push
imul
orl
fstl
xlat
push
adc
fistl
inc
jns
mov
je
stos
stos
cli
pop
pop
mov
loope
add
xchg
xor
lahf
sbb
stos
sbb
sub
in
in
mov
ss
sub
dec
aas
bound
sbb
cmpsl
inc
jge
rclb
lahf
cld
mov
add
jnp
insl
add
mov
mov
outsl
jmp
cs
lods
jle
es
xlat
xchg
rorb
jle
mov
repz
pop
mov
jmp
cs
clc
xchg
testl
pop
mov
and
decb
mov
or
paddsw
lea
push
dec
mov
divb
js
adc
scas
add
push
xor
cmp
xor
in
sahf
cmpsb
sbb
enter
sti
sbb
mov
insl
jnp
or
mov
cmpsl
setno
mov
cmp
std
lret
dec
gs
rcrl
jecxz
mov
and
push
push
movsl
cltd
or
inc
lcall
into
add
pop
shlb
push
in
add
cltd
pushf
adc
push
xchg
sub
iret
jmp
subl
clc
imul
lock
inc
pop
das
sub
inc
xchg
or
js
test
jmp
inc
repnz
push
push
mov
loope
jbe
jle
jb
sbb
mov
imul
jno
dec
test
push
je
pop
mov
btc
outsb
les
adc
xchg
and
insl
jne
xchg
out
aas
icebp
mov
jae
push
lea
xor
mull
sub
push
inc
pop
addr16
fistpll
inc
adc
lret
jecxz
push
lret
mov
stc
push
jle
or
mov
mov
aam
mov
and
dec
jecxz
loopne
pop
scas
repnz
and
inc
es
out
idivb
adc
push
inc
mov
pop
sbb
mov
aas
or
loopne
push
int
loop
jmp
pop
enter
cmpsl
scas
cmp
outsl
clc
dec
loope
xchg
cwtl
test
out
xchg
pusha
and
cmp
jge
pop
lcall
sub
test
sahf
and
jae
mov
in
or
dec
call
sub
xchg
scas
fnsave
or
sbb
xor
inc
test
bnd
movsb
lock
inc
push
mov
jp
repnz
fdivs
xchg
mov
jp
nop
sub
sarl
push
mov
mov
orl
out
lcall
je
cmc
cs
aam
jns
out
adc
and
add
sbb
adc
insl
pop
lods
out
xor
mov
jp
cmp
ds
mov
mov
mov
lock
sbb
mov
in
fdivs
inc
lret
clc
jp
dec
jb
jae
mov
inc
pop
inc
lea
xor
mov
mov
test
and
popf
out
movsl
add
jbe
jmp
ret
imul
mov
jecxz
xor
pushf
sti
jmp
adc
xor
mov
dec
inc
mov
imul
cmpl
mov
icebp
lea
cli
stc
push
in
mov
fldl
popf
and
das
pop
or
cmc
movsl
je
in
loop
shll
je
pop
push
int3
stos
cmp
sub
mov
pushf
sub
fs
loopne
stos
stos
and
jmp
inc
add
pop
and
leave
subl
jns
test
push
mov
cmp
dec
imul
hlt
int
mov
sub
int3
mov
rcr
and
ss
decl
add
jns
les
outsl
notb
sbbb
ret
mov
cwtl
daa
insl
sub
in
loopne
mov
insb
sub
adc
mov
jge
ret
stos
fidivrs
int3
sub
sbb
and
jmp
cmp
lret
out
mov
sbbl
jge
sub
popl
loope
inc
rcr
and
pop
jle
les
jg
push
adc
mov
adc
divb
movsl
scas
int3
push
in
xor
je
cmp
lods
xor
pop
pop
cmp
sbb
mov
add
dec
ficoml
mov
outsb
dec
les
out
lret
ljmp
out
jmp
cmpsl
jle
and
out
pop
das
mov
imul
loop
add
jle
mov
popf
mov
js
mov
das
mov
js
out
or
rcr
push
lea
and
push
mov
mov
inc
insl
lea
inc
pop
iret
dec
lock
std
jecxz
out
ret
lret
aas
xchg
xor
push
mov
push
and
add
adc
jnp
xor
pop
insb
pop
mov
pop
mov
jno
mov
aam
outsb
push
pop
mov
mov
scas
xchg
or
mov
fwait
dec
mov
mov
or
adc
xor
fsubrp
je
jno
inc
pop
cmpsl
cmp
mov
or
fs
jge
sbb
out
or
jns
clc
mov
add
inc
sub
ss
lret
pop
inc
sbb
mov
sbb
xchg
jne
imul
push
adcl
dec
and
lcall
xchg
scas
sbb
aas
aad
ds
pop
das
mov
testb
icebp
mov
outsb
adc
lahf
mov
inc
push
ret
dec
scas
adc
into
sub
nop
jo
dec
leave
adc
cmp
and
dec
inc
inc
cmp
pop
and
sbb
add
and
cld
cmpsl
call
mov
mov
insl
cltd
es
jp
inc
dec
ret
jg
sub
pop
popf
sar
xchg
inc
adcb
fisubl
insb
cmp
loope
cmp
loopne
lock
fcomi
aam
cmpsb
insb
leave
outsb
sbb
xchg
sti
cli
jmp
adc
mov
fdivl
in
into
ror
in
cmpsb
insl
xor
push
aas
cmp
mov
aam
inc
mov
lock
das
inc
arpl
inc
imul
adc
mov
xchg
ss
stos
inc
cmp
nop
sub
faddl
xchg
fcmovnu
in
mov
rorl
in
sub
adc
test
push
fistpl
inc
loope
and
inc
xor
mov
or
int3
jp
leave
or
mov
mov
fwait
and
inc
iret
jecxz
cmpsl
sub
out
inc
fidivs
int
pop
mov
data16
aad
test
clc
sbb
test
add
iret
pop
bound
movsl
pushf
loopne
cmp
mov
xchg
mov
ss
or
iret
mov
and
fidivl
push
xor
jge
imul
nop
hlt
pop
sub
scas
push
adc
insb
xchg
mov
jbe
mov
nop
jns
push
dec
cmpsb
push
sar
dec
js
data16
cmp
jne
movsb
and
push
enter
frstpm(287
or
sbb
mov
fisubl
sub
jb
sub
sbb
dec
das
fldt
out
hlt
insl
enter
test
enter
shlb
outsb
icebp
mov
flds
or
push
mov
push
inc
xchg
ja
dec
add
cmp
dec
shrb
fnstcw
mov
das
rcl
cmp
jp
pop
add
push
imul
or
push
jnp
out
int3
push
mov
sub
add
shll
enter
push
jecxz,pn
mov
xchg
and
adc
mov
lds
inc
cmp
mov
or
fildll
ljmp
sbb
xor
push
ret
pop
sbb
adc
gs
js
dec
push
pushf
mov
cmp
inc
jge
push
cwtl
imul
pop
ljmp
cmp
adc
lods
pop
sbb
add
fidivl
add
lret
xchg
sbb
adc
or
mov
pop
das
test
mov
dec
fidivrs
call
movsl
das
xchg
pop
mov
inc
mov
cmp
insl
popa
mov
fwait
inc
xor
push
dec
nop
add
scas
loope
sub
stc
jns
daa
dec
iret
cmp
loopne
jle
stc
dec
insl
inc
xchg
pop
nop
jle
cmp
imul
ds
inc
sbb
ljmp
pop
fisttps
mov
xor
imul
adc
sub
cli
rolb
ret
jns
mov
scas
jns
pop
push
in
ds
xchg
std
lret
ljmp
sub
or
adc
mov
lcall
jl
xor
pop
and
cmp
xchg
inc
jle
aam
and
lock
add
dec
in
daa
sub
jnp
dec
ja
inc
addr16
fstl
mov
loope
or
clc
pop
push
daa
shlb
xor
gs
enter
das
bound
int
in
cmp
or
or
adc
fcomps
iret
xor
or
mov
das
xor
mov
int3
rorl
aam
pop
lods
mov
lcall
sarl
addl
mov
in
mov
jle
das
ja
jmp
clc
aam
test
int3
aas
and
sbb
mov
mov
and
aad
cmc
push
in
push
cmp
stc
fistps
popa
inc
dec
adc
xor
outsl
mov
xor
mov
cmp
aad
adc
jle
lahf
mov
or
and
sub
mov
fisubl
rcr
pop
shll
pop
pop
orl
cld
pop
mov
mov
loop
lock
add
jp
or
gs
stos
cmp
add
and
and
push
cs
push
jg
int
jno
mov
shll
pusha
push
xchg
jb
sbb
sub
and
xchg
mov
cmp
inc
sub
decl
cmp
push
add
loop
mov
jle
out
and
lret
stos
cmpb
mov
jg
push
cmp
push
xchg
and
and
das
jns
sub
popf
cmp
xchg
int
mov
and
loop
mov
xor
push
pop
jp
stos
fnstsw
push
gs
push
ret
add
iret
mov
xchg
xchg
stos
sbb
xor
in
scas
gs
pop
pop
mov
in
pop
mov
sbb
addl
fldcw
imul
xor
inc
mov
loop
pop
aad
mov
mov
cmpsl
add
fdivrl
jo
les
lock
lret
dec
notl
mov
jg
mov
add
cmp
inc
int3
imul
aaa
fs
inc
std
or
imull
sbb
or
push
pop
push
cs
dec
imul
dec
loopne
mov
add
jae
lea
mov
addl
out
popa
std
fcmovnbe
daa
push
arpl
add
dec
add
subl
sarl
xorps
jno
mov
int3
mov
aaa
out
iret
mov
add
push
test
mov
cli
dec
loopne
es
call
or
inc
lahf
es
lret
cld
jmp
mov
rcll
dec
pop
cmpsb
bound
aas
sbb
dec
xchg
add
pop
out
scas
popa
imull
punpckhdq
push
icebp
fs
js
sub
imul
add
pop
in
call
in
imul
mov
cmp
imul
pop
sub
dec
jmp
and
dec
clc
jl
pushf
xchg
lret
in
mov
cwtl
fdivr
pop
aam
pusha
das
mov
xchg
adc
roll
aaa
xchg
dec
pushf
bound
test
call
in
push
imull
jmp
shr
lret
pop
dec
lcall
ret
mov
and
adc
mov
insb
pop
fcomps
dec
jmp
push
fcoms
pop
sti
in
clc
rorl
and
cmpsb
fimull
add
nop
cmpsb
cmp
adc
sub
bound
or
pop
pop
or
fsubl
pop
push
mov
jno
push
decb
aad
arpl
es
lods
mov
in
roll
mov
imul
jmp
and
push
out
add
nop
shll
mov
fldcw
es
push
sar
inc
out
inc
cmpl
and
cmp
push
jb
fnclex
mulb
cmp
cmp
lcall
pop
xchg
ss
jno
loope
jns
fnstsw
outsb
lahf
test
pop
out
xor
sti
pop
jbe
stc
inc
sbb
mov
mov
dec
dec
mov
adc
cmpsl
cmp
fwait
cmp
push
dec
lret
scas
sub
xchg
aam
lods
repnz
jg
mov
mov
xlat
inc
jns
mov
cmp
push
loop
test
add
jmp
stos
insl
sbb
inc
movsb
imul
int3
cld
xchg
fs
xor
clc
cltd
aaa
cld
inc
add
jnp
pop
pop
cmpsb
dec
push
test
mov
inc
imul
roll
jp
sub
div
fs
cltd
movsl
mov
clc
jo
test
subb
int
aam
shl
dec
cld
dec
xor
push
cs
inc
movsb
ficoml
rcll
shll
push
push
xor
mov
sub
negb
xchg
lret
sub
lods
and
add
add
and
sbb
aad
movsb
daa
inc
inc
daa
mov
subb
jmp
repnz
mov
test
and
jae
jl
inc
sub
jns
mov
sub
fwait
shlb
stos
repnz
jne
mov
fsubr
fildl
js
or
imul
mov
adc
sub
lahf
pop
cmp
jmp
std
mov
xchg
arpl
jge
stc
nop
stos
je
loopne
inc
sahf
rclb
pop
sbb
xor
btc
mov
jecxz
out
and
pop
sbb
jge
mov
fstpl
xlat
mov
loopne
insl
mov
test
aaa
hlt
mov
fsubrl
icebp
mov
pop
cmp
push
mov
adc
or
xchg
cld
push
mov
int3
push
add
ljmp
ret
xor
ret
mov
mov
sarb
mov
iret
iret
lods
ret
call
mov
les
dec
fucom
ret
lret
jo
test
mov
cmp
cmp
stos
fidivrs
lea
rorb
in
iret
mov
jae
inc
in
pop
mov
es
cmp
jl
sub
insl
push
movsb
cmp
enter
pushf
mov
dec
mov
gs
fildll
adc
xchg
aad
test
movsb
mov
js
popa
cwtl
add
jo
xchg
sbb
fildl
and
shll
xchg
add
test
jecxz
js
adc
or
inc
push
xchg
sbb
testl
ret
sub
stc
xchg
and
sbb
addl
in
iret
mov
add
scas
dec
bound
testl
mov
jo
mov
lds
sub
adc
push
notl
dec
sti
push
xchg
mov
inc
adc
or
je
xchg
mov
push
fmull
es
or
lret
out
arpl
mov
rcrb
add
shlb
rcll
mov
test
mov
dec
in
jmp
fsubrp
mov
stos
ror
or
fistpl
lods
movsb
sarl
movsl
mov
dec
mov
jb
fnstcw
jp
int3
adc
and
out
mov
mov
jle
fnstsw
and
jmp
fwait
xlat
sub
es
dec
or
push
pusha
aam
adc
sbb
les
adc
cltd
cltd
cwtl
xor
cmp
es
test
mov
cmp
fwait
hlt
scas
sbb
jnp
jecxz
mulb
rclb
adcl
imul
and
xchg
jae
push
adc
mov
jnp
mov
jle
fcoms
test
or
push
loopne
in
cmpsb
pop
arpl
insl
pop
push
mov
fistl
add
jmp
dec
ss
xor
mov
push
mov
ret
repnz
pop
or
out
pushf
jmp
ficoms
clc
sarb
cs
icebp
mov
cld
jecxz
int3
icebp
cmp
sub
xor
push
mov
test
imul
mov
jne
fldcw
sub
cmp
inc
sti
insl
icebp
out
sbb
push
fiaddl
mov
pop
mov
arpl
cs
lds
and
in
add
rorb
add
and
mov
ds
mov
jg
pop
es
jae
iret
fstl
fistpll
sbb
and
inc
pop
fisttpl
or
cmp
cmpsl
sbb
or
cmp
sub
outsl
xchg
cmc
and
rol
push
iret
add
lods
arpl
in
not
test
test
sbb
mov
or
cld
mov
pop
imul
fnstcw
mov
add
pop
cltd
and
rorb
test
ret
dec
outsb
adcb
or
push
daa
jp
scas
xor
into
dec
sbb
lret
insl
push
mov
pop
nop
int3
sbb
jns
scas
xchg
jne
dec
aad
call
lret
dec
out
cmpl
loop
out
cmpsb
xchg
fcoms
icebp
movl
mov
dec
sbb
into
loop
dec
cmp
mov
sbb
xor
bound
push
adc
mov
mov
data16
and
test
ret
loop
fs
mov
mov
lcall
cmpsb
into
pop
lret
mov
out
xchg
xchg
and
fnstcw
cmpsb
ja
dec
rclb
cs
inc
rcr
add
popa
add
rcrl
cmp
out
cltd
xlat
mov
clc
repz
mov
leave
mov
adc
push
cld
repnz
jecxz
stos
mov
mov
stos
pusha
sarl
cmp
pop
xchg
fidivrs
pop
popf
mov
adc
push
sub
dec
adc
fs
pushf
js
inc
cmp
es
cltd
jecxz
fxch
xor
aas
scas
cmc
xor
movl
pushf
insl
lods
mov
mov
fwait
push
adc
lret
inc
movsl
repz
jecxz
in
cmp
fucom
push
mov
inc
lods
in
cld
sarb
insl
jle
push
sbb
fistl
xchg
and
xlat
mov
ficompl
inc
and
pop
push
dec
dec
sti
or
jmp
je
movsb
push
mov
sub
sahf
mov
mov
mov
push
ret
dec
ljmp
add
add
daa
jge
imul
ss
xor
shlb
sahf
lret
pop
adc
in
pop
idivl
cmp
lock
mov
mov
sbb
enter
lret
insl
stos
loope
push
repz
sbb
mov
fdivrp
sub
dec
sbb
and
test
aad
sub
fs
out
jbe
sub
pop
jb
sbb
or
mov
inc
outsb
mov
cmp
sbb
push
stos
mov
out
pop
dec
mov
aad
movsl
test
cmp
inc
mov
push
lcall
shr
push
lret
mov
lea
xchg
push
cltd
fbld
mov
repz
add
pop
or
add
xchg
mov
jb
mov
mov
pop
adc
and
push
sub
aas
adc
cwtl
into
dec
roll
test
jecxz
sbb
pop
and
call
xor
push
sbb
sarb
repnz
mov
fldl
mov
pop
jg
dec
rcrl
pop
imul
in
cmpsb
xor
xchg
xchg
cwtl
std
xor
lret
loop
popf
and
mov
out
fistl
aad
push
mov
or
or
jecxz
out
and
mov
shl
insb
add
sub
xlat
stc
jo
pop
adc
xchg
call
hlt
mov
jge
push
dec
icebp
xor
ficompl
loop
xor
mov
movsl
pop
ljmp
xchg
pop
xor
and
adc
mov
jge
adcl
stos
xchg
dec
xor
or
jne
shl
mov
push
cli
sahf
test
adc
add
and
clc
xchg
xchg
fisubs
and
jecxz
movsl
iret
scas
fimull
call
cwtl
and
adc
pop
std
xor
dec
je
inc
pop
mov
sub
mov
xchg
add
mov
loope
pop
pusha
jge
shrb
repz
xchg
test
repz
nop
iret
inc
sub
scas
stc
fwait
das
add
shrb
lods
into
add
sbb
inc
inc
in
inc
jle
fldl
cltd
stc
sub
and
lahf
clc
lcall
or
jmp
cmpsl
shll
mov
cwtl
dec
repnz
sti
dec
arpl
call
jno
jno
sbb
xchg
xor
aam
cli
add
jbe
jae
rolb
int
fwait
push
dec
int
mov
aad
mov
dec
loope
add
loope
push
ds
cmpsl
adc
pop
dec
lret
out
movsl
xchg
dec
aad
xchg
mov
cmp
lds
int3
test
mov
cmc
subl
dec
dec
adc
mov
or
iret
push
jle
movsb
and
push
mov
sub
fbstp
push
ret
xor
xchg
pop
sbb
movsl
movsb
xor
adc
mov
push
or
lea
popa
orb
hlt
mov
push
fldl
adc
je
sbb
pushf
mov
cmpsl
lods
cmp
fiaddl
inc
mov
hlt
mov
int3
adc
lds
inc
jg
cmc
roll
dec
push
push
push
adc
add
pop
loopne
push
hlt
mov
jge
pop
mov
out
in
mov
pop
mov
dec
iret
mov
cwtl
pop
out
adc
jmp
sbbb
xchg
add
push
mov
sarl
adc
out
mov
xlat
push
movsb
mov
mov
xchg
sbb
roll
stos
or
xlat
pop
cltd
dec
adc
xchg
fwait
sub
mov
jg
xchg
rclb
add
inc
jnp
sbb
jp
fcompl
popf
enter
fcomi
test
inc
hlt
lahf
mov
mov
aam
les
xor
hlt
and
cmp
in
rolb
or
mov
or
sbb
pop
adc
xchg
xchg
popa
enter
loope
xchg
lcall
jp
xchg
sub
sub
ds
mov
sbb
mov
aaa
mov
iret
adc
pop
aas
sbb
xchg
and
mov
stos
push
adc
and
popa
mov
loop
mov
pop
lods
mov
lods
mov
xchg
fsts
push
adc
push
or
pop
es
dec
incl
xor
xor
roll
or
push
push
out
cltd
adcl
mov
loop
and
bound
and
fldcw
mov
jno
pop
pop
mov
fwait
stos
iret
add
or
mov
jmp
push
or
cmc
ss
loopne
test
cmp
scas
and
outsb
stos
cmp
sbb
ljmp
jb
or
jecxz
sahf
jp
scas
mov
mov
loopne
je
fadds
pop
shrb
adc
jge
loope
sbb
outsb
pop
jmp
ja
lahf
popf
mov
mov
mov
fs
aam
and
push
movsb
push
or
sub
test
add
dec
aaa
cs
adc
pop
shl
movl
pushf
sub
sysexit
fwait
fs
insb
movsb
xor
inc
subl
adc
xlat
arpl
lcall
xchg
xchg
dec
in
test
daa
je
orb
push
sbb
sub
frstor
ficoml
push
push
pop
adc
mov
aam
sbb
sbb
jo
push
insl
add
mov
test
fisubrl
loopne
sbb
divl
jp
stos
xchg
cs
repnz
mov
shll
int
fwait
sbb
push
imul
popa
mov
or
xchg
mov
flds
mov
mov
fsubrl
insb
icebp
cwtl
pop
loope
gs
add
and
stos
inc
seto
jg
in
add
inc
repz
dec
or
xor
add
jb
adc
das
inc
mov
cmp
fxch
dec
cwtl
dec
outsb
cmp
fstl
mov
cmp
nop
and
xchg
into
aas
into
out
hlt
jno
mov
int3
stos
or
sahf
add
inc
es
xchg
leave
jmp
pop
arpl
repz
cmpsb
lahf
jae
dec
lods
mov
push
cltd
sub
mov
aas
fnstcw
shl
or
sub
fwait
pop
cmp
mov
pop
add
loopne
enter
or
mov
lods
jo
lods
ja
adc
pop
bound
aaa
repz
fidivrl
pop
mov
pusha
call
mov
outsl
or
cmp
inc
xor
add
addr16
mov
pop
in
push
leave
movsl
cmp
mov
mov
sub
xchg
xor
push
cs
shll
xchg
out
inc
pop
cld
mov
dec
fistl
push
aas
jb
psubusb
and
sbb
ds
and
imul
sbb
pop
in
in
jns
shlb
or
into
and
loope
xchg
jle
jmp
mov
dec
adc
xor
js
iret
mov
xor
dec
leave
arpl
mov
mov
dec
add
sub
lds
cmp
mov
fcmovne
adc
addl
sub
fldl2e
xor
dec
cmpsb
nop
or
in
les
or
add
repnz
mov
sbb
cmp
outsb
inc
or
push
scas
hlt
stos
inc
sbb
les
adc
jecxz
and
push
out
es
inc
add
test
cmpsb
flds
pop
inc
repnz
dec
call
out
sti
sub
shl
popa
mov
or
jl
jbe
mov
clc
ja
dec
dec
jle
mov
lahf
and
mov
daa
popf
in
and
cmp
loope
ret
dec
loope
scas
sub
scas
cmp
loop
sbb
ret
sbb
inc
push
xchg
out
cmp
mov
iret
shll
repnz
cmpsl
push
jb
loop
jle
pop
jb
mov
fbld
inc
dec
repz
pop
or
ds
fs
mov
gs
push
adc
pop
add
popl
cs
adcl
adc
adcl
inc
pushf
add
mov
mov
and
loopne
sbb
dec
cmp
jecxz
jp
xchg
mov
into
pop
fsubrl
push
in
cld
or
jg
rcr
cmp
ror
imul
xor
lcall
jo
insl
mov
pop
out
cmp
mov
sub
loop
mov
adc
int
fwait
lret
pop
in
xor
lods
inc
pop
dec
sti
mov
nop
push
in
xor
pop
andl
mov
adcl
add
hlt
ret
je
adc
pop
jb
mov
lods
mov
mov
lahf
inc
push
xchg
jmp
push
leave
xlat
jae
push
push
imul
jae
fdiv
jne
ljmp
ret
stos
inc
pop
sbb
mov
gs
fwait
pop
bound
pop
mov
cmp
jne
xchg
ss
pop
sbbl
sub
lock
and
sti
dec
aad
mov
test
and
outsl
les
es
jge
js
mov
cwtl
out
jo
insl
insb
mov
sarb
pushf
and
test
jg
push
mov
popa
sub
pusha
jae
sbb
jmp
sbb
cwtl
sub
add
sub
outsb
lds
ds
mov
pop
mov
jp
ret
inc
leave
loopne
out
mov
in
cs
cmp
popf
leave
pop
pushf
stc
xchg
pop
pop
dec
dec
stc
xchg
test
shlb
and
sahf
lock
cmp
rolb
add
jge
xlat
rcrb
aam
sbb
adc
test
inc
call
or
sti
jae
fdivrs
or
dec
ret
dec
lods
lret
sbb
push
mov
sbb
sub
popf
es
dec
lea
sub
add
pushf
data16
sbb
add
cmc
ficompl
inc
cmp
addr16
es
inc
sub
stos
jge
fcmovnbe
sbb
test
jle
jmp
movsb
add
adc
mov
enter
sub
xchg
pop
dec
push
fistpll
push
je
mov
mov
xor
lahf
pushf
pop
setb
rcr
test
push
sti
cli
je
outsb
cmp
push
mov
rcl
ret
fsubr
jmp
in
fisubl
dec
jmp
mov
dec
adc
cltd
xor
cmp
sbb
je
loop
jb
lds
into
jns
dec
pop
sbb
mov
adc
and
jp
ret
inc
int3
inc
stos
loop
sbb
inc
xchg
pop
popf
or
pop
es
das
mov
call
mov
popf
sbb
jnp
pop
mov
pop
cwtl
pop
mov
sub
adc
cmpsb
cmp
leave
sub
lret
cs
sub
pop
jge
add
adc
outsb
jae
mov
inc
cmp
mov
aaa
scas
fcmovbe
sub
sbb
jp
dec
and
iret
sub
sti
icebp
out
rcr
mov
test
mov
push
lcall
xchg
popf
cmpsl
push
sti
mov
and
sbb
aas
ja
cmc
std
mov
fs
lds
iret
sbb
push
mov
loopne
out
pop
pushf
or
dec
cmp
and
lahf
cwtd
into
nop
dec
push
xchg
dec
iret
push
sahf
mov
mov
xchg
xchg
ficomps
sbb
and
cmpsl
push
js
negb
mov
xchg
sub
mov
xchg
popa
daa
mov
test
daa
das
insl
cmpb
dec
enter
jo
jne
mov
jns
jo
jg
imull
add
imul
sub
js
dec
xchg
sbb
push
push
sub
pop
mov
fiadds
cmp
or
dec
call
mov
sub
pop
imul
out
or
cwtl
push
shl
inc
lods
in
mov
std
xchg
cmp
out
jnp
xor
push
mov
jne
bound
popl
jno
call
mov
xorb
fcoms
cmc
in
subb
int
sbb
mov
repnz
stos
mov
and
nop
adc
sbb
popa
xchg
rcrb
stc
mov
ret
addr16
lock
push
pop
cmp
and
or
daa
inc
pop
in
xchg
out
andb
xchg
cmpsl
in
add
mov
xchg
add
js
pusha
cmp
pop
xchg
push
push
std
cmc
dec
xchg
push
test
es
stos
cli
int3
std
icebp
jecxz
xchg
dec
jmp
cli
mov
cwtl
xchg
and
lahf
ficoml
pop
ja
inc
push
jb
fnstcw
dec
jge
add
lods
adc
shr
nop
lahf
notb
ret
fldenv
dec
mull
cmp
pop
in
cltd
daa
dec
push
jecxz
xor
pop
scas
or
rclb
mov
lcall
jnp
lds
pusha
jnp
es
ja
addr16
or
cli
es
js
adc
sbb
aam
or
push
repz
sub
inc
clc
lret
std
jns
leave
jns
jne
orb
push
sbb
js
sub
outsb
sub
cld
or
lock
mov
mov
ss
sbb
aas
sub
jle
push
cmp
dec
xor
dec
ret
adc
inc
jg
out
mov
dec
stc
mov
shlb
or
test
nop
and
pusha
dec
repz
pop
sub
and
cmpsb
mov
mov
sbb
jns
or
pop
sub
pop
mov
cmpsb
push
out
push
xor
mov
add
and
in
xor
aaa
mov
pop
fstps
notl
ljmp
lcall
incl
push
and
and
aaa
xchg
cmp
adc
ss
aad
mov
cmp
push
lods
popf
push
sbb
xor
sbb
mov
push
dec
lods
in
cmpsl
out
flds
mov
pop
mov
sbb
or
push
mov
push
cwtl
inc
lret
dec
cmpsl
test
repz
adc
popa
aaa
jmp
leave
push
inc
push
insb
stos
aad
push
sub
xchg
and
dec
and
and
out
sahf
rclb
mov
rol
dec
sbb
jle
dec
imul
enter
pop
adc
push
outsb
cld
inc
push
inc
rcrl
mov
rcrl
xlat
adc
mov
insl
mov
into
outsb
in
dec
into
inc
mov
insb
mov
cld
jl
pop
hlt
shll
pushf
clc
clc
mov
out
xor
in
adc
aas
popa
cmc
jae
pop
addr16
mov
pushf
mov
mov
dec
adc
xor
dec
mov
mov
popa
push
mov
add
out
rcrb
andb
rcll
lret
or
and
loope
jl
lret
xchg
cmp
lds
jge
cld
xchg
fisubl
out
test
jbe
or
add
das
daa
iret
lock
jo
cmp
mov
icebp
stos
cmp
or
in
push
in
fnstcw
cmpsl
jmp
fs
fcom
shll
pop
and
imul
pusha
jmp
and
inc
pop
cwtl
fcomps
outsb
movsl
inc
push
out
adc
and
stos
push
shrb
push
ror
fbld
adc
outsl
es
jg
mov
mov
mov
cmp
lock
cltd
mov
push
rorl
arpl
mov
out
mov
cwtl
loopne
mov
loopne
pop
rorl
push
add
inc
repz
leave
sbb
jno
jge
push
ds
mov
adc
dec
xchg
sarb
icebp
loope
push
mov
push
pop
cmp
xchg
out
cmpxchg
mov
push
cmp
nop
sbb
js
ja
jae
popf
push
cmp
jns
sub
add
repnz
mov
jno
es
add
dec
cmc
in
cwtl
into
or
mov
xchg
repz
in
fs
hlt
inc
pop
jo
adc
adc
aad
push
mov
mov
insl
mov
add
jne
cmp
push
sbb
nop
sub
pop
ret
daa
adc
es
push
sbb
outsl
inc
pop
js
pop
adc
out
and
dec
sarl
insl
mov
jl
push
mov
bound
shrl
or
cmc
or
out
sbb
out
mov
stos
jb
sub
sbb
sub
pop
pop
bound
and
rcrl
test
in
stos
arpl
nop
enter
sub
push
jne
pop
shll
add
mov
aad
data16
shrb
pop
or
in
lock
push
nop
shrl
mov
or
cltd
outsl
push
pop
jne
mov
pop
clc
dec
ljmp
incl
dec
mov
mov
mov
xchg
or
pop
arpl
jo
sbb
mov
adc
push
adc
das
add
es
pop
mov
xchg
lret
jge
in
stc
push
sub
test
and
cmp
xor
xorb
sub
jp
sbb
lcall
sahf
mov
dec
xor
xor
lods
lahf
ret
aas
gs
mov
inc
sub
lahf
lret
or
ret
inc
pop
dec
pop
xor
rolb
lods
rcll
and
cltd
daa
and
outsb
shrl
mov
lcall
pushf
mov
xchg
insl
ljmp
insl
pop
scas
sbb
mov
lret
dec
push
call
or
push
adc
jb
mov
mov
repz
mov
jnp
xor
scas
push
inc
scas
insl
mov
lds
xchg
mov
clc
shlb
add
jle
mov
out
fiaddl
mov
inc
cmpsl
ret
sbb
lds
jns
mov
icebp
add
mov
repz
lret
shl
cwtl
mov
iret
sbb
scas
adc
sarl
rcl
cmpsl
sbb
xchg
pop
das
sbb
or
push
cmpb
pop
sub
jmp
stos
repnz
sub
sub
mov
pop
test
cmp
jle
adc
jno
mov
loopne
ret
push
data16
cmpsl
sbb
mov
sbb
sub
test
fsubs
ja
adc
sbb
in
add
dec
jb
cmp
mov
jp
push
test
mov
pop
xor
repz
inc
jle
pop
mov
jb
daa
mov
adc
inc
enter
sbb
cmp
jne
push
mov
adc
stos
in
mov
and
les
push
push
cmp
into
popf
jne
popf
and
int3
imul
ret
push
mov
jmp
fisttpll
dec
stc
mov
scas
dec
jb,pn
imul
rolb
sub
repz
mov
pop
sub
jnp
adc
adc
jb
jle
imul
or
addr16
imul
xor
jne
and
pop
mov
daa
pop
jl
movsl
iret
leave
xchg
inc
pop
pop
push
repnz
orl
test
jle
inc
test
stos
push
jno
testl
jno
xchg
loop
dec
sti
lret
rcrb
add
mov
stc
adc
inc
add
or
lods
lods
mov
test
repz
xchg
mov
js
imul
and
xchg
call
mov
loopne
jbe
mov
jmp
dec
pusha
xchg
fstp
dec
adc
xchg
aaa
ja
mov
loopne
xor
aaa
mov
shl
arpl
mov
jne
jecxz
movl
icebp
cmp
xor
lds
stc
add
nop
inc
imul
pop
jmp
movsl
popf
adc
rcrl
push
sarb
push
pop
ret
pop
and
and
jge
and
or
sub
dec
repz
aam
inc
in
enter
mov
jns
mov
jmp
mov
jae
lock
in
cld
xchg
jb
cmp
or
adc
fstl
xor
cmp
bound
ficoml
psraw
adc
sub
std
dec
sbb
dec
cmpsl
daa
ja
in
in
or
std
lret
xchg
mov
arpl
jo
xchg
shr
adc
bound
sbb
pop
fcmovnb
cmp
mov
push
inc
lods
pushf
mov
pop
mov
cmp
outsl
jne
add
jl
xor
insl
xchg
loope
cmp
enter
or
out
mov
lods
mov
sub
pop
imul
clc
mov
and
out
jg
mov
bound
and
adc
inc
inc
inc
lcall
cmpsl
xchg
orl
nop
push
mov
push
aas
movsb
jo
repz
sub
jg
push
dec
or
clc
mov
xchg
pop
les
test
cli
and
lret
insb
lahf
or
xor
dec
faddl
xchg
in
stc
push
jae
or
clc
mov
int3
aad
test
cmpsb
lock
lods
xorb
inc
outsl
jae
or
fildll
push
jge
pusha
repnz
lods
insb
es
sub
ficoml
mov
or
xchg
outsl
cmpsl
das
test
jbe
lea
rclb
pushf
push
pop
add
adc
into
mov
fmul
sarb
fcmovb
minps
mov
icebp
aaa
mov
add
stos
and
jg
sub
in
mov
mov
ljmp
scas
or
xchg
sbb
add
and
fs
addr16
or
push
mov
jns
xchg
in
add
aad
adc
jno
xchg
pop
jb
jnp
push
mov
add
aad
add
popa
cmpsl
rorb
stos
sbb
fdivr
stos
stos
jbe
testl
and
scas
cmc
rolb
adc
and
xor
gs
fnstenv
or
mov
addr16
jae
xchg
movsl
dec
sub
add
cmpsb
lret
cmpsl
push
out
dec
push
icebp
faddl
or
or
inc
cmpsb
jns
xor
out
lods
js
add
dec
fsubp
sbb
loopne
sub
cmp
sbb
test
xor
dec
in
pop
ljmp
out
insl
outsl
mov
adc
dec
int
cs
mov
imul
jecxz
movl
ss
mov
sbb
jnp
sbb
outsl
inc
cmpsb
add
aaa
stos
mov
mov
repz
loop
insb
stos
stc
mov
mov
mov
cmpsl
mov
adc
les
jmp
insb
xchg
add
lds
mov
xor
xor
or
push
popf
ret
ss
sbb
jge
out
lahf
shll
push
jno
inc
push
cmp
sbb
cs
out
mov
scas
cmp
outsl
pop
mov
clc
and
cli
orb
sti
ja
add
inc
mov
daa
call
adc
dec
test
push
mov
lock
xchg
pop
xchg
data16
cs
mov
and
xchg
pop
add
cltd
xchg
hlt
inc
push
test
mov
mov
scas
arpl
outsl
sbb
xor
pop
xchg
sub
in
inc
sbb
xor
in
mov
push
das
inc
insb
adcl
in
mov
and
xor
and
sbb
mov
dec
out
and
out
sbb
dec
pop
shll
adcb
ss
xor
adc
or
out
sbb
xchg
mov
sarl
out
scas
mov
stc
xchg
xchg
mov
mov
loop
mov
xchg
test
pop
add
pop
pop
lcall
sbb
jbe
push
gs
add
or
cld
mov
lock
jno
fwait
push
int
pop
jmp
js
movsl
out
push
push
jne
mov
popf
adc
ret
push
gs
repz
pushf
insb
stc
inc
fbstp
ret
fsubr
or
jnp
jmp
mov
hlt
or
jb
push
push
shlb
arpl
ffreep
mov
das
inc
out
cmp
iret
faddl
fwait
mov
lods
enter
fldt
fsubs
xor
insl
inc
jg
pop
lods
pop
jecxz
xchg
add
push
ljmp
jg
imul
data16
mov
test
xchg
gs
pop
jo
insl
andl
cwtl
mov
hlt
ret
push
mov
jae
dec
sub
fbld
mov
mov
testl
cld
and
mov
int3
popw
mov
push
data16
and
sbb
jp
cmp
fbld
in
mov
stos
fsubl
cmpl
repz
xor
int
popf
repnz
arpl
jmp
outsw
fs
sti
arpl
les
mov
lret
pop
pushf
test
pop
enter
mov
inc
pop
sbb
sub
shrl
mov
xchg
sarl
push
das
jg
rcrl
outsb
test
pusha
cli
cltd
adc
xchg
or
mov
imul
aaa
int3
lret
and
cmc
mov
in
cmp
leave
push
scas
sub
scas
mov
lock
lods
lret
lds
adc
loopne
cmc
pop
add
xor
loop
lret
fisubl
push
popa
mov
js
mov
test
mov
int
mov
ret
xor
xchg
xchg
jnp
enter
pop
xlat
inc
adc
in
not
push
das
movsb
mov
mov
fisubrl
xchg
das
mov
adc
cmp
push
dec
mov
push
mov
mov
xor
jmp
sbb
rolb
sub
dec
cwtl
scas
fildll
ljmp
adc
jns
xor
cmpsl
xchg
loop
cld
insl
adc
repz
leave
addr16
shlb
outsl
push
adc
mov
ret
data16
lcall
xchg
or
push
mov
add
and
mov
mov
out
dec
dec
test
adc
lret
xchg
pop
dec
aas
and
sbb
in
sub
push
mov
mov
gs
inc
sbb
add
xchg
sub
adcb
cwtl
sub
out
shr
out
xor
fmuls
jb
lcall
pop
mov
shrb
ret
and
mov
leave
mov
mov
repnz
fs
inc
mov
ret
cld
lahf
or
loope
test
jno
outsl
lcall
mov
inc
repz
and
xchg
adc
ljmp
test
daa
inc
incb
sahf
jne
jge
jle
mov
and
and
inc
data16
lods
mov
mov
adc
aad
push
sbb
insl
xchg
fsubr
push
in
lret
jge
xlat
aas
sub
shlb
ret
rcrl
fistpl
xchg
mov
loope
pop
testb
jmp
jge
inc
data16
and
and
or
hlt
jb
cmp
ljmp
and
adc
pushf
leave
xchg
sbb
scas
sbb
ljmp
sub
das
add
push
pop
sub
popa
push
stos
out
push
cwtl
jnp
scas
jb
cmpsb
push
aad
data16
mov
mov
pusha
hlt
test
in
pop
je
add
jno
das
sub
pop
loope
cwtl
cmp
mov
cli
in
std
dec
and
pop
add
and
add
int3
js
cli
cmp
jg
push
ret
inc
cmc
sti
mov
aaa
sarl
pop
jmp
xor
sti
mov
sub
jbe
cwtl
pop
je
out
popf
mov
mov
push
sti
jp
mov
sbb
fimull
mov
jmp
cld
decb
inc
cli
into
sub
rcrb
scas
cltd
jno
insl
cmpsb
out
and
jmp
adc
xor
cmp
sahf
int3
add
mov
push
nop
push
pop
cmp
in
dec
xchg
sub
xchg
cmp
cmp
cltd
mov
dec
push
cmc
lods
pop
test
sbb
or
mov
inc
int
mov
and
in
sub
dec
gs
leave
je,pt
lock
ja
shr
clc
push
dec
sbb
jecxz
cmpsb
xchg
pushf
test
fwait
or
test
mov
mov
inc
pop
popl
js
iret
lea
xor
push
mov
cltd
sub
xchg
cmpl
mov
aam
fdiv
stc
fiadds
insb
inc
popa
outsb
mov
arpl
out
jmp
mov
sahf
sbb
push
movsl
mov
bound
adc
lret
pop
mov
pop
or
pop
sub
inc
into
inc
jmp
clc
cmp
cwtl
add
and
insb
cmp
push
fcompl
sub
inc
add
or
iret
inc
out
into
fdivrs
push
into
mov
rol
xor
ret
out
out
decb
sti
sti
adc
iret
sarl
lods
stc
jns
pop
or
cmc
cmc
or
pop
imul
leave
add
and
dec
adc
xchg
or
mov
sbb
cwtl
scas
lahf
cld
mov
mov
push
lret
imul
mov
xchg
push
push
test
fadds
scas
jo,pt
mov
inc
jns
dec
arpl
or
stos
shll
sub
in
into
std
icebp
and
mov
push
mov
movsl
imul
mov
sub
add
adc
aas
add
testl
xor
inc
stos
add
std
aam
mov
mov
ja
push
imul
dec
jae
adc
lock
push
mov
cs
aad
pop
popa
xchg
mov
add
xchg
ljmp
cmp
or
mov
dec
xor
xchg
in
loop
push
das
ret
and
push
stc
pop
push
and
jbe
dec
pop
jns
jecxz
fisttpl
scas
cmp
and
inc
scas
add
jo
mov
add
enter
and
adc
call
dec
aad
popa
xor
dec
scas
sbb
fnstcw
insb
in
popa
pop
arpl
jl
inc
inc
dec
scas
mov
imulb
fmull
repz
or
in
rcrb
sbb
stos
adc
mov
cmp
pusha
pand
fsubrl
inc
or
adc
fwait
jb
mov
test
mov
enter
enter
adc
popa
fcompl
sbb
les
push
sub
dec
or
data16
xor
adc
adc
lret
pop
bound
xchg
jle
push
lret
push
add
incb
sbb
jle
mov
xor
adc
popf
mov
xchg
and
shrl
insb
push
xlat
jo
push
stos
or
cli
gs
inc
push
pushf
mov
pop
and
outsl
sub
sbb
icebp
jmp
push
cwtl
mov
rcl
inc
push
or
lret
jge
call
and
push
lret
xor
clc
imul
mov
repz
ja
pusha
ret
pop
pop
xchg
xchg
fwait
pusha
in
mov
mov
adc
lcall
mov
in
cld
push
cmp
sarl
jge
xor
orl
hlt
push
xchg
test
push
sub
iret
fs
adc
cmp
sbb
xor
fisttps
jecxz
push
xlat
addl
sub
xchg
jo
lds
lret
pop
jne
les
rorb
add
jecxz
or
xchg
loopne
daa
fcmovb
test
inc
aam
ffree
in
sbb
mov
bound
sbb
daa
js
add
fistpl
adc
push
inc
mov
data16
sahf
inc
js
push
shrl
dec
nop
test
xchg
pop
push
cltd
add
hlt
and
js
repz
into
sbb
insb
add
jg
rep
xlat
int3
push
movsb
mov
add
mov
imul
adc
push
adc
out
idiv
aaa
sbb
sarb
cmp
test
jo
sub
adc
or
inc
dec
stc
arpl
std
sti
cmp
push
dec
push
shl
sub
xchg
xchg
ds
mov
lock
and
and
push
cmc
or
inc
cmp
cld
loopne
mov
and
adc
call
mov
addr16
mov
mov
sub
lahf
xlat
and
sub
mov
scas
jae
mov
movsb
test
add
mov
mov
lods
std
pop
sar
fwait
jl
inc
rorl
xchg
decl
jmp
stc
call
divb
jl
mov
test
movsb
lcall
or
pusha
out
iret
and
dec
xchg
rcll
mov
arpl
in
or
shrl
sbb
xchg
pop
incb
scas
cmpb
leave
xor
jne
push
push
fbstp
test
lea
pop
jg
sbb
push
loope
cltd
jmp
push
jbe
lods
jecxz
jns
cmp
andb
icebp
mov
cli
jb
nop
mov
sub
push
cmp
mov
and
cmc
mov
jnp
ss
mov
inc
xor
sti
jbe
pop
rorb
sti
mov
push
fistps
hlt
adc
push
and
notb
dec
hlt
mov
or
or
cmp
icebp
mulb
mov
sahf
shl
ss
bound
jno
dec
push
out
jecxz
mov
lret
les
cli
pop
dec
inc
mov
dec
aam
adc
push
jmp
push
mov
inc
stos
lods
outsb
xchg
stc
xchg
adc
xor
cmp
jg
push
divl
cmc
dec
and
lcall
sti
jmp
jle
es
xchg
jmp
lea
jmp
mov
push
inc
inc
cmpsl
inc
jle
xchg
cmp
mov
leave
dec
mov
mov
nop
aaa
stos
ja
mov
stos
loop
jecxz
jecxz
dec
imulb
inc
dec
inc
sbb
cmp
push
call
push
and
fidivrl
in
and
or
lahf
cltd
movsl
mov
push
ret
inc
scas
or
pextrw
es
hlt
xor
mov
cmpsb
sub
add
add
cmp
mov
mov
and
icebp
aaa
mov
fcoml
rorb
lret
mov
test
mov
idiv
adc
xor
lcall
nop
dec
nop
mov
push
int
imul
repz
or
dec
arpl
hlt
iret
mov
leave
fldl
daa
xor
sbb
sti
jg
loopne
into
lds
es
leave
fstpt
mov
scas
adc
mov
push
leave
xchg
mov
rcll
xchg
aad
ret
in
mov
addr16
cmp
sbb
insl
push
lea
inc
cmp
adc
aas
jno
test
and
das
pop
jp
test
loop
out
mov
adc
icebp
nop
fldt
push
fcmovu
and
lret
sbb
xchg
push
xchg
inc
xchg
xor
cmp
sahf
cltd
jg
cltd
test
xor
push
cmp
ljmp
addr16
xchg
in
cli
push
push
or
xor
popa
mov
push
fbld
add
movsl
out
pusha
in
sbbl
ss
in
cmpl
hlt
out
stos
or
jle
dec
push
loopne
inc
cli
sbb
jb,pt
fdivrs
jecxz
mov
xchg
lock
int3
lret
jmp
aad
ret
dec
mov
insl
and
mov
fidivs
sarb
fucomi
popf
pop
ja
notl
fisttps
mov
outsl
sub
pop
mov
mov
sub
lock
cmc
jmp
ret
or
test
mov
pusha
test
pop
fldcw
push
push
shll
sarb
fmulp
add
jg
call
out
jbe
dec
push
push
and
add
adc
mov
xor
lcall
push
fmull
repz
lahf
das
rol
push
jns
xor
pop
sbb
addr16
fwait
arpl
mov
inc
and
push
xor
ljmp
mov
and
mov
pop
lahf
inc
popa
and
mov
jbe,pn
test
sbb
mov
test
xchg
mov
pop
add
das
hlt
std
scas
add
push
test
pop
mov
and
xchg
pop
add
fisubrs
sbb
inc
fisubl
mov
ss
xor
push
sub
test
fimuls
pop
pop
inc
repnz
clc
movsb
in
aaa
leave
cld
jge
fldenv
out
pop
cmc
scas
fnsave
xchg
pop
maskmovq
divl
test
loope
loope
or
sbb
pop
push
jne
lea
adc
mov
mov
push
cmc
xlat
inc
dec
push
dec
cmp
cltd
scas
ret
mov
fstl
inc
sub
daa
push
and
jnp
and
rcrb
lods
aam
and
loopne
xchg
loop
xchg
jne
jo
add
push
jbe
jmp
hlt
adc
das
loopne
sub
in
popf
mov
xor
pusha
jmp
cmp
xchg
sub
ret
and
mov
pop
adc
sub
repz
fcoms
pop
faddl
in
adc
mov
push
cli
pop
adc
out
adc
xchg
pop
mov
fwait
fs
lahf
shll
xorl
sbb
sub
stos
cmp
rclb
sbb
dec
fisubrl
gs
or
or
adc
push
xchg
xchg
popa
xchg
les
inc
dec
xchg
int3
xchg
xchg
inc
cmp
ret
mov
arpl
cmp
dec
loopne
pop
andb
xor
mov
js
scas
cld
cs
test
jae
hlt
out
out
push
imul
mov
cwtl
sarl
rcr
xlat
xor
mov
cmp
push
inc
sbb
and
xchg
inc
xchg
in
insl
out
or
xlat
dec
dec
mov
addb
sub
rcr
aad
shll
jg
outsb
fdivrp
dec
dec
pop
orl
mov
fists
dec
mov
xchg
les
push
mov
into
mov
int
insl
lahf
stc
dec
cmp
nop
xchg
dec
mov
xchg
mov
mov
jp
cmp
mov
sub
sti
xchg
push
loopne
mov
dec
adc
mov
sbb
sarb
sbb
stos
outsl
add
add
test
jne
cmpsb
inc
cmpsl
adc
and
inc
pusha
mov
sbb
sub
xor
insb
popf
cld
cmp
lods
call
loop
dec
test
push
jl
cmpsb
gs
sbb
adc
pop
jg
xor
mov
mov
xor
sbb
xor
mov
push
or
ror
out
shl
add
cmpsb
dec
jle
popf
lret
or
inc
pop
jg
pop
xchg
mov
iret
popa
pop
dec
sub
jno
sbb
dec
add
add
outsb
cwtl
dec
mov
test
jg
mov
outsl
movb
xor
cld
std
imulb
inc
ja
std
cmc
cmp
popa
push
adc
pop
add
iret
shlb
faddl
xor
es
repz
lahf
into
imul
mov
mov
pop
adc
data16
and
xchg
jnp
sbb
pop
in
inc
cmp
cwtl
pushf
push
pop
or
mov
dec
int3
push
out
pushf
adc
cmpsl
sbb
fs
jl
lahf
xchg
add
daa
dec
pushf
outsb
xchg
fcoms
push
xor
push
test
outsl
or
sbb
mov
or
push
mov
std
sbb
or
ret
fs
cmp
mov
xor
stc
pop
or
mov
mov
jno
ret
cmpl
lea
mov
shr
xchg
cmp
outsl
ds
mov
or
fsubrs
cltd
or
cmc
dec
mov
cmp
or
jne
inc
mov
enter
dec
jnp
jge
jle
inc
mov
leave
push
xor
pop
or
or
repz
sbb
scas
int
icebp
push
sbb
mov
push
iret
cli
sbb
cmove
and
test
mov
inc
lds
das
es
mov
xor
sub
inc
in
jne
xchg
movsb
push
pop
pop
mov
cmp
dec
fsubrs
js
mov
jp
xchg
test
inc
fisubrs
mov
adc
add
jo
into
iret
ljmp
push
dec
adc
scas
cmpl
mov
sub
xchg
adc
es
cwtl
movsb
es
mov
mov
cwtl
inc
mov
cmc
ret
pop
inc
mov
jecxz
pop
adc
daa
pop
jmp
repnz
cs
mov
insb
push
orw
repnz
inc
adc
pop
add
and
pop
repz
inc
fstpl
inc
lock
ja
push
inc
nop
lock
or
es
push
pop
cmpsl
cmp
scas
jno
mov
pop
aas
int3
push
mov
test
sub
pushf
stos
mov
pushf
dec
or
hlt
push
cmp
xor
adc
mov
and
cmp
and
pop
dec
cmc
or
insl
or
sbb
xchg
pusha
xor
cmc
roll
enter
xchg
enter
jae
leave
int3
call
insl
sahf
bound
and
cmp
cmp
and
jnp
aam
test
sahf
test
nop
imul
out
test
sbb
mov
gs
xchg
rcr
push
out
or
push
nop
xchg
mov
popa
jno
loop
sub
and
jnp
mov
addr16
mov
pop
push
pop
std
dec
inc
jae
sbb
push
pop
pop
sub
mov
lods
xchg
dec
jle
cmp
and
ss
in
inc
push
pushf
mov
push
inc
push
adc
pop
add
and
scas
pop
pusha
and
adc
subl
stc
dec
lock
or
adc
push
pusha
jbe
inc
push
cmpsb
lods
xor
mov
xchg
and
repnz
in
jae,pt
jne
ljmp
aad
adc
sbb
cltd
dec
fnstenv
stos
es
jbe
fidivrs
sbb
xor
xchg
shll
scas
push
stos
int
xchg
jp
push
mov
lods
lahf
xor
dec
inc
or
pop
into
adc
stos
cmp
inc
fstpl
mov
jmp
jg
loope
cld
xor
cltd
flds
lds
pop
push
sahf
ss
or
or
ds
and
sahf
mov
sub
imul
insl
or
jle
add
xor
rorl
jmp
sbb
cmpsl
out
in
dec
mov
jecxz
cmpsb
hlt
sub
rclb
push
js
mov
mov
lret
add
mov
outsl
sahf
sub
cmp
mov
les
mov
mov
jecxz
adcb
aad
call
mov
cmp
jmp
mov
test
fs
pusha
shrl
xor
cmp
sbb
mov
push
xchg
lods
xor
pop
sbb
jae
xchg
xor
cmp
rcrb
lahf
mull
fsts
push
sub
sbb
daa
push
clc
or
push
mov
punpcklbw
stc
lahf
jmp
lcall
mov
mov
jae
inc
pop
sar
push
jmp
in
mov
mov
mov
mov
xchg
dec
loope
xor
fs
sbb
leave
add
dec
mov
add
mov
into
mov
aad
adc
xchg
rcrb
out
test
jbe
xlat
pop
es
dec
jecxz
daa
sub
and
add
out
sub
xchg
inc
mov
test
jl
push
mov
mov
push
je
in
in
insb
out
dec
sbb
popa
inc
into
cld
mov
xlat
inc
xor
add
jae
in
cltd
inc
xor
popl
int
enter
out
sbb
movsb
push
mov
insb
cmpl
xchg
xchg
inc
aad
lods
test
xor
icebp
or
cmpb
jbe
mov
pop
andl
inc
mov
mov
push
jb
int3
aas
push
jns
dec
mulb
pop
xchg
push
mov
pop
sarl
lret
icebp
mov
cwtl
popf
loopne
pop
sti
mov
push
inc
lea
xchg
insb
push
jns
xchg
test
es
cmc
xor
push
push
lret
imulb
fsubrs
jb
in
lea
push
cmp
sub
out
dec
out
ljmp
cwtl
popf
fstps
ds
sbb
push
xlat
ret
cli
dec
loopne
inc
mov
rolb
rcr
pop
or
sub
fnstenv
and
shrl
jecxz
outsl
in
jbe
dec
cmp
fmuls
sbb
mull
and
sarl
jae
je
dec
and
lret
adc
dec
cmc
mov
jae
rcl
je
icebp
ss
test
adc
test
cmp
adc
push
and
imul
scas
clc
mov
imul
mov
jmp
mov
xchg
mov
call
xchg
pop
jl
xchg
fildl
pop
inc
cmp
shlb
cs
push
lcall
fadds
test
jmp
outsb
lds
mov
or
rcrl
push
lds
es
stc
inc
xchg
pushf
dec
imul
mov
imul
or
sub
shrl
dec
daa
or
push
pop
xor
cmp
adc
add
ja
loopne
lds
aaa
or
adc
mov
ret
cmp
popw
loop
mov
sbb
and
or
ds
add
negb
ret
in
xchg
xchg
aad
lods
mov
pop
jp
fwait
test
mov
mull
dec
jbe
popa
daa
mov
sti
adcb
add
test
call
cs
and
lret
add
mov
stos
lock
jl
mov
out
and
je
add
pop
lcall
cmp
push
jnp
mov
fstpl
xlat
movsb
push
popa
dec
mov
push
stos
adc
or
push
sahf
repnz
xor
or
push
rolb
sub
int
xorb
insl
and
sti
pop
test
dec
inc
inc
in
push
or
sbb
out
sti
cmp
test
mov
js
stc
dec
pop
push
adc
clc
je
pusha
jl
pop
sbb
xchg
movsl
lds
pushl
stos
test
dec
xlat
lret
jecxz
lret
loopne
mov
mov
xchg
jbe
pop
sub
add
dec
cmp
sub
pusha
pop
jnp
scas
fcoms
je
ds
pop
xlat
mov
out
push
loope
push
shl
adc
es
int3
sub
cmp
or
push
mov
jae
or
adc
add
mov
cmp
pushf
lods
jb
fcmovnb
xor
cltd
sbb
jb
stos
xor
push
out
in
fimull
mov
repz
inc
pop
in
jl
std
out
lock
add
data16
sbb
fs
mov
xchg
and
cld
mov
push
xor
sub
cmc
sub
inc
dec
dec
adc
pop
mov
sub
add
dec
lods
fs
mov
push
add
inc
daa
pop
fcoml
mov
cld
fcompl
cltd
jmp
sub
push
push
cmp
gs
add
mov
cltd
add
add
dec
and
cmc
ja
ja
cmp
pop
xchg
add
ja
stos
push
call
insl
lods
mov
sub
es
ljmp
dec
incl
iret
xchg
das
cmpsl
and
mov
mov
lods
stos
mov
fwait
insb
stos
xchg
fidivrl
arpl
data16
push
imul
adc
or
and
sbb
mov
or
add
imul
push
add
shlb
dec
clc
imul
mov
cmpsb
xchg
pushf
in
fdivrl
imul
dec
pop
sbb
movsb
mov
sub
sub
cmp
daa
push
cmp
in
test
cmpsb
mov
faddl
insb
jmp
sub
mov
mov
or
xlat
push
movsl
jbe
ljmp
cmpsl
fisttpll
inc
push
pop
inc
jle
push
xchg
rclb
dec
repnz
ds
add
fstpl
sub
das
lock
xor
je
lods
jmp
sti
mov
xlat
dec
cmpl
sub
xchg
push
ds
je
iret
loop
push
inc
fsubp
pop
aam
mov
pusha
sbb
jl
xchg
xchg
mov
mov
loope
sbb
mov
fwait
jge
push
push
leave
mov
rolb
sub
movsl
adc
ret
dec
jl
sub
xor
notl
cmp
mov
ljmp
fcmovnu
dec
pop
jl
lcall
inc
or
cmp
pusha
sahf
cs
push
lds
out
leave
cmp
mov
inc
lods
in
cmc
mov
jns
dec
ss
adc
outsb
call
arpl
loop
push
xor
mov
xchg
out
cs
cli
mov
sub
scas
adc
xor
xchg
pop
dec
cmc
enter
push
fisttps
jae
lahf
fwait
pop
es
mov
xor
mulb
daa
cmc
cs
insb
push
mov
popf
inc
push
sbb
jns
cmp
push
aam
pop
add
jge
movsl
mov
mov
test
add
sub
pop
adc
shlb
pop
out
imul
hlt
loope
push
pop
push
mov
rolb
fsubrs
mov
push
or
mov
or
fmul
mov
loop
sub
out
pop
pop
movsl
adc
add
push
jle
mov
xchg
dec
jns
rcll
adc
sbb
push
cmp
dec
shl
mov
push
mov
push
ds
cwtl
shr
fisubrl
jne
mov
fistl
leave
popa
daa
jg
cs
push
setne
lds
les
push
lods
add
sbb
mov
fiaddl
das
or
cwtl
adc
popf
adc
jg
mov
movb
shrl
sbb
xlat
add
or
stos
mov
xor
sbb
mov
enter
fimuls
fwait
stc
or
ja
mov
hlt
in
jg
push
ret
mov
je
decl
or
outsl
sahf
imul
push
mov
xor
cltd
mov
shrl
dec
add
stc
push
aad
pop
inc
cmpsb
xchg
out
pushf
das
xchg
je
sub
adc
pop
lock
mov
pop
js
xor
pop
stos
mov
int
lock
arpl
int
into
and
pop
hlt
xchg
test
mov
jne
in
cmp
ds
cmovnp
jo
insb
mov
cltd
xchg
push
mov
lret
dec
cs
inc
out
dec
jnp
fldt
lret
or
lahf
sub
sysexit
inc
sub
pop
mov
push
dec
adc
cmpsl
aam
lock
gs
les
add
or
push
gs
nop
jno
daa
in
sub
dec
cli
cmp
and
sub
outsl
mov
in
dec
out
fcoml
fcoml
int
or
in
pop
insl
mov
movups
mov
pop
ds
in
cmp
dec
mov
dec
dec
syscall
out
sub
or
and
mov
outsb
mov
es
test
push
push
add
test
imull
and
out
pop
int3
dec
mov
push
sbb
push
fwait
hlt
mov
mov
push
jbe
adc
or
dec
repnz
inc
push
xchg
inc
mov
imul
and
or
push
out
mov
daa
das
fsubl
pop
je
pop
xlat
sti
push
arpl
add
add
inc
scas
out
orl
dec
addr16
ljmp
cltd
sahf
add
push
fisubrl
pop
or
pop
inc
mov
and
cmp
arpl
je
rorl
pop
cmc
fidivrs
nop
popa
test
sbb
xchg
mov
cmp
stc
aad
dec
clc
xchg
popf
mov
sbb
fidivrs
and
jmp
sub
cwtl
pushf
dec
pop
lahf
jecxz
test
jns
xchg
pop
push
std
xchg
scas
or
mov
mov
push
insb
sbb
or
or
jnp
sbb
ja
sbb
dec
sub
push
pop
dec
rcll
rclb
and
cmp
sbb
std
movsl
fldcw
sahf
cmp
push
mov
lcall
in
cmc
jp
dec
sbb
add
pop
out
pop
push
popf
inc
enter
std
insl
call
pop
mov
lea
mov
out
lret
in
push
xor
mov
jecxz
xchg
out
ret
mov
dec
or
clc
pop
leave
push
dec
hlt
pop
mov
ret
mov
sar
xorb
or
cli
xchg
jne
mov
xchg
jecxz
add
scas
sub
xchg
fildll
jb
sub
jle
lds
out
inc
clc
call
xor
mov
inc
push
xchg
xchg
ret
movsb
aam
mov
arpl
mov
mov
push
lods
mov
mov
mov
sbb
fnstcw
popa
sub
clc
mov
enter
jae
push
adc
repz
andb
cvtps2pi
and
shlb
dec
outsl
xor
mov
mov
adc
ljmp
stc
xor
ss
aad
xchg
stos
pop
xchg
jle
adc
in
pop
test
in
xor
push
xchg
scas
in
sbb
mov
xchg
stc
push
cli
test
add
cmp
lcall
in
test
sbb
cmp
push
in
adc
adc
test
test
jb
sbb
fwait
inc
mov
jle
mov
popf
jl
das
lahf
das
lock
xchg
pop
mov
push
pop
sub
sti
ljmp
pop
push
sbb
jne
cmp
and
push
rolb
sti
mov
nop
xor
fdivl
xor
cwtl
mov
inc
ficomps
lahf
fisubrl
data16
leave
fcmovne
inc
inc
lret
shrl
adcb
sbb
lds
outsb
rolb
mov
dec
mov
call
pop
in
test
pop
cmp
ss
push
sti
jns
call
hlt
push
mov
fcompl
mov
dec
lea
aad
test
cld
and
sbb
xchg
xlat
adc
jno
adcl
es
enter
and
test
or
movsl
pop
loopne
mov
jmp
jnp
sbb
pop
rorb
out
inc
dec
popf
outsl
jno
jbe
mov
mov
imul
out
add
stc
pop
push
cmpsb
cmp
add
add
lcall
cmp
out
movsb
loope
and
inc
push
mov
vcvtss2si
or
cmp
cli
push
test
sti
stos
push
std
cmp
or
mov
mov
insb
pop
mov
ret
lret
xlat
mov
push
cmp
xchg
mov
pushf
and
mov
jns
jb
jmp
pop
rorb
stos
and
cmp
or
jbe
pop
cmp
sbb
in
add
xchg
bnd
cwtl
addb
shrb
xchg
ja
sub
cmpsl
add
and
push
or
into
jb
inc
xor
movsl
daa
mov
rorb
mov
push
sbbl
push
or
jno
xchg
aad
cwtl
xchg
div
xchg
xchg
mov
or
fwait
xchg
lock
cmp
decb
xchg
push
and
out
mov
sbb
in
clc
mov
push
pop
pop
and
insb
cld
xor
ret
fiaddl
imul
xor
fucomi
lcall
mov
call
in
aas
loope
clc
mov
xor
test
pop
mov
lahf
push
mov
fnstsw
dec
sub
das
int3
inc
es
cld
mov
cmp
jp
insl
inc
rolb
dec
je
mov
inc
jge
lret
pop
in
mov
jmp
cmpsb
mov
lret
nop
mov
jmp
adc
jp
icebp
stos
out
out
sbb
shr
lcall
stos
shll
jg
inc
je
fisubrs
pop
aam
sbb
popa
out
and
push
pop
mov
mov
push
xor
jbe
pusha
add
mov
aaa
rorl
ficompl
push
stos
out
test
sub
inc
ss
sub
sbb
mov
mov
pop
pop
mov
sub
add
push
sub
xchg
pop
sti
dec
les
sbb
or
mov
imull
repnz
inc
fcmovnb
js
sub
sar
sub
mov
movsl
xor
fwait
dec
and
repz
pop
repnz
jg
sbb
xor
cli
test
pop
push
mov
pusha
cmp
jl
or
loope
imul
mov
xchg
stos
int
fs
jecxz
dec
mov
and
inc
sbb
loopne
test
xchg
xchg
inc
xchg
mov
das
mov
push
pop
jmp
and
inc
test
xor
cmp
jno
or
dec
lock
push
stos
lahf
sbb
lret
jmp
sub
push
daa
pop
and
cmpsl
fnstcw
std
jmp
lods
gs
into
fcmovu
fs
xchg
in
in
push
insl
pop
cs
daa
jg
fimull
shll
sub
das
cltd
adc
cld
rclb
out
loop
cmpsb
xor
cmp
loop
mov
sti
pop
cmp
sarb
sbb
icebp
ss
das
div
jnp
push
loop
nop
xor
mov
in
aas
mov
hlt
cmpsb
aad
mov
int3
mov
pop
and
push
sub
inc
mov
mov
popl
leave
xchg
cmp
adc
mov
sahf
jns
call
lock
jge
iret
or
jb
cmpsb
movsw
popa
daa
sbb
jnp
sub
in
lret
pusha
pop
mov
jo
xchg
sti
stos
xchg
mov
jecxz
das
sbb
pop
push
cmp
loopne
testb
in
jne
int3
xchg
test
cld
xchg
js
jns
dec
xor
test
sbb
add
movsb
inc
mov
mov
sbb
insb
dec
push
add
gs
mov
imul
jge
jo
pusha
mov
xchg
cmp
ret
js
mov
clc
arpl
mov
dec
xchg
in
andl
fwait
sub
dec
out
pop
mov
shrb
loopne
loop
fidivs
lret
cmp
add
imul
jbe
xchg
popa
testl
push
ljmp
enter
sub
dec
stc
fistl
enter
call
test
ds
scas
iret
cs
or
and
ja
or
cmc
and
insb
cmpsl
out
cmp
add
fiaddl
movsb
adc
adc
shrb
mov
cli
lods
idivl
xchg
cmp
push
push
insb
clc
push
dec
mov
mov
xlat
call
pop
icebp
jp
outsw
pop
test
mov
out
add
lds
xchg
and
sbb
sbb
sbb
push
in
and
adc
adc
mov
ret
mov
stos
pushf
or
repnz
or
jbe
inc
aas
stc
mov
fs
js
xchg
add
push
mov
cmp
jo
jae
adc
inc
mov
sbb
cli
aad
xor
popa
loop
pop
pop
les
out
adc
cmpsl
ds
add
push
cmp
data16
fcmovnb
or
and
sbb
mov
cmpsb
movsb
cltd
cmpsl
pop
mov
fmul
aam
and
popf
pop
jmp
bound
push
cmp
mov
cmp
clc
mov
mov
lahf
stos
sub
mov
das
jne
test
movsl
push
aam
dec
jp
je
mov
push
mov
inc
je
int
adc
icebp
out
add
mov
loopne
addr16
es
or
gs
push
test
daa
cmp
mov
outsl
scas
and
push
push
lret
shrl
pop
outsb
out
pop
hlt
popa
movsb
xchg
or
aaa
roll
cli
inc
xor
adc
outsb
sti
jae
das
and
and
mov
mov
sbb
pop
xchg
std
jl
mov
aad
cld
das
mov
cld
add
mov
cmp
lods
int
lods
lahf
add
pop
pop
mov
pop
jge
push
jb
push
arpl
jns
and
lods
and
mov
mov
clc
flds
jge
clc
imul
mov
loop
pop
sahf
mov
push
jbe
filds
push
daa
popa
fucomp
dec
mov
inc
adc
pop
cmp
cltd
jns
sbb
loope
shrb
push
in
pop
xchg
nop
jno
push
ficoms
mov
icebp
pop
roll
imul
stos
push
push
leave
test
loop
lods
and
inc
cmp
gs
adc
push
je
cmpsl
add
je
mov
mov
xchg
or
add
pop
sub
or
xlat
push
or
push
jbe
xchg
xorb
rcl
test
push
pop
and
dec
lret
les
jmp
mov
std
or
sti
push
hlt
outsb
and
test
inc
packuswb
or
jb
mov
aas
pop
stos
mov
adc
or
adc
cmpsb
xchg
jp
mov
pop
xchg
mov
mov
adc
inc
scas
movsl
ja
mov
xchg
lods
test
orb
mov
inc
and
les
inc
push
mov
mov
insb
int
mov
and
outsb
sub
nop
mov
loop
movsb
scas
jns
dec
jl
repnz
aas
es
iret
dec
pmaxsw
cmp
push
dec
sbbb
fs
jecxz
sub
fisubrl
dec
pop
xor
inc
cmp
imul
dec
gs
sti
xor
das
ss
jg
mov
jae
dec
aaa
sub
out
je
rcr
xchg
dec
xor
xor
sub
dec
test
mov
dec
popa
and
stc
imul
inc
aad
nop
push
fdivrp
mov
fidivs
sbb
mov
mov
or
fwait
daa
jns
xor
hlt
insb
repz
std
sbb
sbb
test
shr
add
xor
mov
outsb
sbb
mov
jmp
cs
mov
call
pop
sub
mov
pop
ret
push
fwait
add
add
jle
fld
xchg
push
pop
push
hlt
test
pusha
in
xlat
insl
or
add
cmp
test
push
movsl
and
mov
push
ds
mov
hlt
call
cmp
pop
hlt
js
push
cmpsl
movsl
push
lea
pop
adc
inc
cmc
mov
in
dec
addl
dec
xor
nop
xor
jb
enter
or
test
imul
mov
inc
shlb
mov
test
xor
sbbl
rclb
xchg
stos
mov
ret
xchg
icebp
pop
mov
out
das
pop
ret
cmc
sub
sbb
xchg
sub
and
and
xchg
cmp
add
scas
jecxz
mov
icebp
push
movsl
test
lret
in
lahf
cmp
lods
xchg
stos
int3
dec
dec
pop
nop
sub
xchg
mov
mov
scas
and
mov
clc
mov
movsl
inc
sub
mov
jp
and
xchg
test
sarb
mov
test
mov
aam
fldenv
mov
and
inc
daa
add
push
int
arpl
inc
pusha
sahf
lcall
cmp
mov
xlat
rcrb
pop
pop
std
xor
inc
sbb
xchg
cmp
jnp
imul
or
jp
fsubl
repz
jne
stc
mov
sub
or
popa
cmc
enter
shrb
dec
rclb
xchg
in
insl
loop
cltd
into
out
mov
aas
popa
jle
xchg
std
ja
loop
jmp
lods
je
data16
push
jmp
jle
pop
lods
push
ljmp
jnp
jno
stos
ret
scas
outsl
mov
repnz
popa
fs
xor
arpl
mov
xor
sbb
scas
insl
sub
cmpsb
leave
jg
int
mov
aam
sbb
jae
xlat
hlt
jle
test
and
mov
stos
pop
leave
jecxz
xor
arpl
loopne
cs
mov
popf
daa
push
add
and
xor
xchg
jb
mov
add
inc
push
add
dec
or
or
xor
mov
and
inc
pop
orl
xor
push
lods
pop
out
inc
into
sub
imul
mov
pop
into
lds
push
movsb
push
enter
mov
fiaddl
adc
test
in
cmp
sti
cmp
ds
lds
daa
jno
mov
mov
mov
jno
cmp
push
and
mov
or
jb
sub
pop
sbb
mov
cmp
xchg
repz
push
sub
push
outsl
imul
sbb
xor
and
jae
addr16
or
stos
add
inc
xor
fimull
pop
pop
stc
fadds
jg
lods
mov
cli
cmc
cmp
in
sarl
mov
aad
movsb
add
popf
cs
jle
ficoml
jp
fisubrl
push
adc
inc
loope
clc
mov
mov
popa
jmp
inc
mov
test
add
ja
jne
sub
mov
lcall
pop
pop
and
xchg
movsb
mov
mov
mov
popf
pusha
in
xor
mov
mov
cmp
icebp
xchg
cmp
repz
jne
cmpsl
sub
sub
cmp
pop
lcall
add
cld
movsb
fidivl
das
rcrb
cmp
lret
stc
mov
jae
sbb
popf
adc
cmpsl
repz
hlt
cmc
inc
popf
lock
dec
lds
bound
xchg
lahf
pop
imul
mov
sub
adc
in
cmpsl
int3
mov
out
out
aam
in
icebp
inc
enter
mov
sbb
aad
xor
pop
das
iret
test
push
outsl
not
push
push
aad
inc
imul
flds
inc
inc
pop
fs
stos
out
andl
dec
or
mov
fldcw
jl
lahf
roll
in
movsb
notl
inc
incl
dec
aad
mov
fsubr
jo
push
or
je
mov
jle
and
clc
sbb
mov
pop
xor
lods
mov
bnd
cmp
imul
and
push
daa
mov
leave
loop
loopne
sbb
mov
pusha
scas
cmp
in
mov
test
mov
lods
mov
gs
xor
pop
push
testb
test
xor
push
xor
stos
xor
add
adc
xor
push
mov
out
push
adc
jmp
cmpsl
arpl
inc
lock
popf
sub
cmp
nop
fwait
dec
test
jmp
mov
pop
dec
mov
fnstenv
pushf
test
int3
adc
adcb
test
mov
or
add
cmp
movsb
add
push
ja
cmp
into
pop
mov
dec
jmp
dec
bound
divl
mov
aad
adc
sub
aam
cwtl
stc
jle
test
and
outsl
stos
cmp
pop
push
ret
fwait
jge
pushf
jae
insl
jmp
sub
xchg
jbe
sub
cmp
sub
dec
push
repnz
sbb
jmp
pop
addl
sbb
jmp
bound
mov
fisubs
cmpsl
test
and
dec
push
cld
ret
call
sbb
inc
pusha
dec
jb
xchg
repnz
push
jb
cli
fildl
xchg
pop
lret
inc
pop
xchg
cwtl
hlt
lods
xchg
push
pop
pop
lcall
mov
test
loopne
push
addl
sbb
push
dec
push
lret
ret
out
dec
das
ffree
sub
imul
ficomps
dec
sbb
inc
jg
adc
loopne
adc
bound
int3
cltd
cmp
filds
aad
or
inc
lock
inc
iret
pop
xorb
popa
xchg
test
hlt
or
inc
pushf
mov
scas
mov
pusha
rolb
outsb
dec
pop
cmc
in
pop
pop
jne
les
int3
popf
cld
adc
outsb
mov
jo
jns
push
movsb
ds
enter
lods
jb
insl
cmp
pop
mov
gs
js
cmp
mov
mov
xchg
jae
push
inc
dec
repnz
shll
jo
add
push
xchg
sub
sbb
test
xchg
stos
sti
std
out
inc
cmc
ss
test
dec
mov
and
xlat
cmp
iret
dec
mov
jmp
popf
cs
pusha
daa
stc
pop
xor
scas
pushf
insb
and
fisttps
movl
icebp
fsubrl
or
mov
adc
inc
xchg
add
rclb
cmp
call
popa
adc
cmp
fldenv
addr16
popa
mov
xchg
xchg
jecxz
mov
pop
jge
adc
sbb
xchg
incb
leave
outsb
ds
cmp
pop
in
or
push
testl
add
daa
adc
sbb
dec
push
inc
inc
xor
and
cwtl
shlb
cli
imul
ja
sub
and
and
ret
lret
inc
sar
rcl
mov
dec
int
dec
mov
cmpsb
std
stc
mov
outsl
daa
mov
or
pusha
hlt
mov
push
mov
movsl
sub
push
aaa
wrmsr
inc
inc
mov
int3
fldl
addr16
xor
cld
scas
gs
fdivrl
pop
dec
fnstsw
cwtl
repnz
rcr
cltd
add
shll
test
lods
xchg
stos
movsl
out
or
mov
xor
bound
insb
mov
cmp
scas
daa
push
lods
repnz
push
jo
add
inc
sub
push
push
mov
and
mov
aaa
lock
xor
dec
xchg
push
scas
pop
inc
mov
jno
xchg
out
xor
and
pop
jecxz
repz
cmp
jmp
jl
repnz
xor
and
mov
rcrl
scas
push
mov
or
leave
inc
dec
or
push
mov
cmpsb
xchg
push
std
repz
cmpsl
hlt
rolb
jo
xor
lock
jmp
cmc
rcr
cltd
loope
sub
dec
fwait
mov
lret
jne
cmp
sbb
inc
call
push
xor
and
pop
dec
fdiv
clc
addr16
insb
aaa
mov
mov
mov
fimull
push
xchg
push
inc
rcl
push
xor
in
sbbb
shll
dec
or
pop
add
xchg
mov
sbb
dec
xchg
pop
into
sbb
sub
orb
pop
cmp
call
adc
and
push
add
fnstcw
add
lock
aam
sbbb
cmp
push
addr16
xchg
xchg
std
or
clc
cmp
test
aas
pop
frstpm(287
mov
clc
hlt
jnp
mov
ss
ljmp
std
in
repz
dec
pop
cmp
mov
push
pop
fwait
and
mov
sub
aas
cld
rcrl
imul
xor
fnsave
jecxz
mov
jns
pop
bound
push
ret
adc
stos
adc
xchg
rorb
push
mov
ret
jecxz
das
loop
jo
or
dec
not
in
push
pop
ret
inc
scas
out
xchg
mov
fsubrl
cmp
dec
lahf
jmp
jmp
or
out
out
aas
pop
jg
cmp
imul
lcall
or
mov
dec
test
pop
test
sub
xchg
inc
repz
adc
or
sub
pop
in
hlt
imul
jns
aad
les
and
jg
cmp
inc
cmpsb
xchg
push
mov
stc
mov
data16
loopne
jp
pop
mov
cmpsb
les
add
dec
jmp
xchg
repz
jmp
xchg
mov
aaa
cmp
fs
adc
push
mov
lcall
sub
int3
or
push
pop
xchg
push
mov
sbb
jnp
cwtl
mov
arpl
aas
inc
hlt
jp
pop
push
lret
or
int3
int
push
push
cmp
movsl
add
jmp
cs
jp
or
jle
pusha
movsb
hlt
xor
scas
dec
lods
dec
adc
arpl
out
or
das
sti
clc
lods
in
fsubrs
sbb
sbb
stc
add
stc
xchg
iret
xchg
jecxz
and
clc
addl
fcompl
sub
sub
or
push
shll
pushf
push
pop
add
ret
push
insb
mov
lret
test
ss
enter
enter
push
dec
sbb
mov
test
divb
stc
xlat
into
adc
mov
int3
or
fsubp
mov
repnz
sar
mov
mov
or
jl
or
lods
xchg
or
cli
jne
mov
mov
shr
lret
mov
jg
mov
daa
xor
and
mov
fwait
sub
mov
jle
scas
adc
mov
or
or
sbb
outsb
sub
cwtl
cmp
popa
add
cmp
and
ljmp
mov
dec
add
add
adc
mov
movsl
mov
lea
mov
daa
hlt
test
cmpsb
xchg
test
mov
mov
aas
gs
jo
pop
daa
orb
arpl
sub
xchg
jmp
test
mov
outsb
loopne
push
jno
lahf
mov
sub
out
adc
mov
mov
pop
cwtl
cmc
stos
mov
movsl
lahf
sub
or
insl
lret
xor
push
arpl
std
or
scas
int3
insb
and
les
shr
cmp
fcompl
or
sbb
jmp
mov
scas
cli
scas
fsubrl
in
jmp
lods
aaa
aaa
ljmp
ljmp
arpl
in
das
xchg
mov
xor
pop
sub
bound
jb
test
jmp
mov
call
jnp
pushf
stos
or
mov
test
test
ret
arpl
mov
mov
in
and
mov
adc
add
in
mov
fdivrl
cmc
push
lds
xor
js
enter
xchg
imulb
lods
loope
mov
stos
dec
fmul
mov
mov
push
lods
sbb
gs
out
mov
adc
sub
xlat
jecxz
jge
lods
cli
int3
pusha
aad
jns
pop
insl
or
sub
lods
lods
daa
add
std
push
xchg
sub
or
mov
std
insb
dec
sahf
mov
dec
clc
daa
inc
inc
mov
pop
pop
call
cmpsl
xchg
cmp
ljmp
jnp
mov
and
mov
lods
adc
push
pop
adc
jne
push
jns
and
lcall
imul
jge
sbb
or
pop
push
sarl
pop
lahf
je
daa
clc
in
sbbb
out
push
out
adc
outsl
test
adc
outsl
inc
nop
das
cwtl
outsb
jmp
xor
sub
xchg
lds
sbb
push
cmp
fsubr
rorb
mov
stc
mov
icebp
iret
mov
pop
or
dec
mov
and
add
adc
dec
xchg
scas
mov
cmp
mov
aaa
pop
xchg
int3
xor
adc
call
inc
adc
subb
jmp
in
mov
mov
add
mov
push
fdivrs
js
xchg
sub
adc
rcrb
les
push
pop
jne
stos
jle
movsl
and
cwtl
mov
ret
data16
lret
and
sahf
movsb
xchg
or
xchg
cmp
and
hlt
add
mov
xorb
cltd
dec
jb
push
cmpsb
pop
jb
add
xorb
pop
cmpsb
scas
cmpsl
test
cmpl
push
pop
mov
in
push
mov
addr16
mov
iret
jl
add
lock
ja
sub
leave
pop
push
add
iret
popf
call
adc
and
and
mov
loop
outsb
sahf
xlat
sbb
mov
mov
pop
mov
insb
or
xchg
jecxz
cwtl
cli
sbb
xorb
mov
cli
xchg
or
andl
jnp
lahf
xchg
aas
aam
dec
sub
shrb
das
pushf
xacquire
and
rclb
bound
cmc
sub
push
sahf
cmc
int
call
outsl
push
mov
stos
or
rol
outsb
adc
je
jae
adc
push
pusha
pushf
sahf
mov
dec
loopne
dec
sub
xchg
xchg
xor
stos
adc
adc
xchg
and
incl
inc
test
test
cli
xor
mov
hlt
hlt
adc
pusha
mov
or
pop
push
xchg
mov
fbstp
lea
xchg
sbb
dec
pop
insb
pop
and
imul
jae
rcrb
pop
xchg
mov
clc
xor
daa
pop
insl
mov
jo
jae
fdivrp
jne
adc
subl
dec
or
lea
inc
pop
sbb
ror
lds
out
sbb
inc
adc
shlb
cli
test
mov
and
shlb
pushf
jns
jne
in
xchg
addr16
pop
mov
pop
jl
mov
repz
jecxz
stc
loopne
ljmp
imul
test
mov
lock
inc
daa
mov
xchg
cs
stc
push
stc
mov
push
jb
push
les
sub
adc
and
mov
inc
orb
sti
xor
xchg
xlat
dec
jecxz
mov
out
sbb
pop
int3
sub
jno
dec
fdivrl
hlt
icebp
cs
loopne
xorb
inc
sti
pop
rorb
cmp
dec
add
arpl
add
cmp
push
icebp
mov
lock
add
cmpsb
movb
cli
mov
xchg
loope
repz
out
frstpm(287
mov
into
loopne
sbb
cld
pusha
push
cmpsl
or
add
or
ss
insl
inc
mov
stos
mov
in
insl
mov
sahf
in
add
jo
movb
shll
jp
push
fimuls
pop
pop
test
mov
inc
pop
push
sub
jle
mov
dec
testl
fnsave
mov
mov
mov
test
jle
lret
fistpll
cmpl
cmp
xlat
pop
xlat
or
mov
sub
cltd
dec
add
cwtl
repnz
je
mov
pop
pop
int3
stc
dec
pop
add
sarl
mov
jb
mov
adc
jg
dec
ss
jnp
and
jl
and
push
jo
sub
and
lahf
jmp
add
adcb
rcrb
cld
stos
nop
or
mov
jle
adc
xchg
ss
in
xor
inc
xchg
cmp
pop
jne
icebp
fsubr
jne
ja
clc
cmpl
jmp
and
enter
subl
ljmp
push
mov
and
mov
test
in
dec
jle
pop
scas
inc
mov
mul
sbb
int3
pop
orl
sub
andl
add
pop
call
movsl
push
aad
mov
adcl
jne
movsb
int3
incb
into
and
jnp
dec
adc
add
sub
push
enter
mov
stos
sub
sbb
jb
dec
cltd
clc
enter
sbb
sbb
inc
ffree
adc
pop
sarb
mov
testb
arpl
mov
in
cmp
mov
arpl
sub
push
cmp
jge
inc
cwtl
push
cs
fcompl
add
mov
test
and
fcmovb
jnp
fcom
daa
fcmovnb
lock
lret
pop
addr16
mov
mov
sti
fdivrp
lcall
sub
inc
mov
loop
mov
lea
shlb
std
or
dec
jae
xor
cmp
rcll
xor
sub
xchg
xor
in
out
add
ficompl
int
imul
je
ss
mov
inc
jg
and
xchg
pop
cmp
jns
popf
pop
dec
push
mov
loopne
mov
cmp
dec
or
cmc
pop
out
mov
in
inc
jbe
mov
jp
stos
dec
outsl
mov
loop
push
xor
add
rorl
dec
push
cmp
adc
push
mov
repnz
cmpsl
cs
xchg
and
lea
popf
les
xchg
sub
subb
sbb
xchg
lahf
and
pop
pushf
push
jne
outsl
mov
adc
cwtl
sbb
repz
shr
jecxz
cld
std
mov
jmp
in
pop
int3
push
mov
mov
lahf
push
ret
popa
sub
fadd
mov
pop
iret
inc
cltd
sti
ljmp
rorb
inc
cmp
out
repnz
fcomps
jo
sbb
icebp
es
mov
adc
mov
stc
sub
and
xor
mov
jno
sbb
inc
jl
cmp
clc
aas
mov
pop
movsb
stc
in
arpl
inc
adc
mov
add
mov
int3
in
sub
add
jno
inc
mov
inc
and
leave
aaa
push
inc
cmp
dec
xor
fwait
push
and
adc
jg
scas
negl
flds
aad
xchg
cmp
pop
xchg
bound
dec
mov
xor
mov
fadds
add
inc
xor
mov
pop
popf
xchg
fdivrl
jp
call
jmp
adc
es
mov
out
xchg
add
in
push
movsl
decb
dec
mov
push
addr16
push
jbe
cmp
mov
cmp
lea
jle
lahf
into
stc
sub
jmp
add
cld
push
adc
out
xchg
xchg
push
mov
or
cmp
testl
sub
add
push
repnz
in
jmp
dec
cmp
rcll
repnz
nop
cld
push
das
cs
pop
and
mov
sub
addr16
add
mov
or
pop
das
pop
xchg
hlt
or
call
fistl
call
enter
push
cmp
js
or
test
pop
loop
jbe
loopne
sbb
pop
sti
mov
sbb
test
std
insb
mov
les
xorl
imul
test
sbb
pop
cli
or
inc
adc
addb
lcall
shlb
dec
call
and
sub
popf
hlt
add
dec
pop
mov
cmp
fdivrl
or
xchg
mov
xchg
stos
insb
sahf
jp
fsts
jle
in
pop
jns
xor
add
iret
mov
rorl
outsl
dec
arpl
repnz
repz
mov
cmpsb
daa
sub
testb
out
sbb
leave
cmp
sbb
push
mov
pop
icebp
enter
jle
push
outsl
mov
orl
xchg
cwtl
sbb
adc
cld
test
imul
flds
inc
and
jl
outsb
cmp
sub
jl
dec
jge
inc
divl
pusha
inc
cmc
movsb
pusha
xor
jne
cmp
mov
dec
mov
sub
lds
sbbb
daa
cmp
xor
fistl
pop
fwait
pop
or
sub
popa
push
pop
adc
or
cmpsb
jb
mov
movsb
adc
xchg
xchg
mov
leave
repnz
jecxz
shrb
mov
jge
cmp
add
rolb
mov
int3
mov
enter
xchg
andl
ja
fildll
call
xor
or
fidivl
in
int
push
dec
arpl
scas
cld
aaa
lds
inc
adc
das
loope
leave
movsl
rclb
cmp
mov
push
cli
xchg
inc
int
mov
mov
cli
sarb
add
mov
fbld
inc
jbe
sbb
pop
nop
aas
aad
xchg
push
fldl
arpl
or
xchg
jae
sbb
add
lahf
inc
and
ret
push
mov
xchg
sub
adc
jns
je
mov
stc
out
sbb
ficoms
stos
xchg
neg
dec
int
push
lods
mov
mov
lods
aad
sbb
jp
clc
inc
inc
bound
cmp
out
pop
shrb
sahf
jbe
into
cmp
mov
insl
inc
jp
or
pop
test
xor
xor
push
hlt
push
les
aas
repnz
rcrl
mov
mov
push
pop
imul
outsb
shl
mov
mov
out
test
nop
sbb
pop
jp
jmp
test
cmp
xor
sbb
mov
rcr
leave
test
cli
xor
jbe
icebp
push
inc
jbe
mov
clc
rorl
fildll
fmuls
sub
push
push
sub
mov
mov
dec
xchg
fs
test
jmp
push
xor
in
vmwrite
or
repnz
outsb
xchg
lods
ret
push
lock
fiadds
cmp
jae
pop
cmp
lods
mov
js
sub
faddl
call
sahf
lcall
mov
mov
push
fdivr
xor
mov
daa
xor
hlt
mov
jbe
lret
out
shll
lea
push
adc
insl
and
add
dec
imul
icebp
mov
mov
adc
jmpw
shlb
mov
adc
lahf
mov
sub
mov
in
dec
insb
adc
call
in
movsl
mov
and
iret
adc
les
testl
cmpsl
addr16
xor
ljmp
add
mov
cmp
sub
xlat
add
jo
push
xor
pusha
mov
notl
mov
push
cmp
adc
aas
lods
cmp
test
inc
loopne
pop
and
adc
movsl
fsts
pop
es
mov
or
test
jno
adc
sarl
aad
sbb
ret
push
sbb
push
das
push
add
bound
loop
jmp
ret
xchg
cmpsl
aad
fs
xor
fisubs
pop
sub
xor
or
mov
mov
xor
lahf
les
sbb
lea
jle
dec
dec
pop
push
lcall
jb
pmulhw
lret
mov
popf
sub
add
ficoms
xchg
js
lea
cmpsb
mov
xor
stos
nop
dec
pop
out
mov
mov
xor
cmp
movsl
add
gs
ret
mov
or
mov
xchg
test
and
adc
pop
faddl
or
mov
adc
push
hlt
dec
xchg
mov
mov
xor
sbb
fsubrp
and
jo
sub
hlt
push
dec
hlt
lret
loope
fidivrs
mov
inc
mov
pop
push
dec
inc
outsb
xchg
test
enter
adc
in
fistps
int3
jl
icebp
jecxz
pop
repnz
sbb
popl
pop
add
sbb
scas
int3
mov
fbld
adc
push
sbb
cs
fisttpl
aaa
popa
icebp
loopne
push
sub
jle
in
aam
in
xor
push
enter
pop
loop
xor
xchg
jmp
popa
insb
in
jl
out
pop
xchg
mov
cltd
jae
inc
and
out
ljmp
pop
and
push
sahf
subl
punpckldq
imul
js
adc
cmp
or
iret
outsl
jo
lds
scas
xchg
or
and
xor
xchg
sti
jle
popa
jnp
sbb
scas
xor
adc
xchg
mov
xor
or
adc
decb
dec
mov
pop
mov
daa
into
cmc
in
enter
jge
mov
adc
add
fildl
clc
push
cmp
sbb
incl
stos
lods
jns
pop
in
stos
fwait
mov
mov
repnz
aas
mov
xchg
mov
dec
pop
add
lea
lds
xor
lea
out
iret
pop
and
pop
mov
mov
pusha
inc
and
lock
mov
adc
jmp
xchg
xchg
lahf
out
call
pop
pop
or
es
clc
or
jb
pop
cltd
lret
in
or
jae
pushf
mov
pop
lods
xchg
mov
jbe
fmuls
add
cwtl
push
test
xor
scas
cltd
enter
fimuls
insl
jnp
int
hlt
push
call
scas
dec
repnz
and
push
mov
gs
fwait
outsb
push
jns
popf
inc
lds
add
fdivl
bound
sub
cwtl
les
mov
in
push
or
push
mov
loopne
pop
test
xchg
test
enter
test
push
cmc
mov
xchg
jmp
test
jae
and
sub
mov
std
leave
lretw
xchg
inc
lahf
loopne
insl
push
inc
xor
add
push
adc
mov
jo,pt
xor
jl
rol
mov
out
es
insb
add
repnz
xchg
jno
and
adc
loopne
int
xorl
fpatan
xchg
imul
daa
sub
incb
ljmp
fistps
push
lock
inc
lods
sarb
negb
cmp
cmc
mov
cli
addb
mov
or
rorl
push
sti
adc
popa
icebp
mov
call
scas
push
jne
fildll
or
movsl
or
fcomps
or
sbb
cmp
and
cmp
xor
roll
cmp
sbbb
pop
cmc
repz
sbb
repnz
inc
addr16
mov
divb
inc
mov
add
cs
int3
imul
ficompl
xchg
cmpsb
std
outsl
loope
subb
pushf
dec
pop
jbe
add
aam
outsb
jg
std
loope
push
cmp
out
roll
pushf
fcmovu
sbb
out
gs
fwait
jae
mov
out
sahf
iret
fcoml
push
push
pop
mov
and
enter
push
mov
jmp
enter
ja
xchg
popf
movsl
adc
and
rol
pop
ss
xor
lahf
dec
sahf
adc
push
sub
push
add
jns
iret
stos
insb
orb
adc
addr16
inc
ficompl
xor
xor
das
lcall
inc
mov
cmp
rcrl
and
pop
dec
movsl
js
ret
ds
adc
jecxz
loope
xor
xor
add
add
mov
repz
cmp
shlb
push
push
fisttpl
cmc
fiadds
or
lock
movsl
xor
rcll
push
enter
cmpb
cwtl
fistpl
and
push
pop
mov
xor
mov
aaa
test
xchg
arpl
and
mov
popa
cmp
adc
mov
roll
mov
out
jae
leave
pop
fdivr
dec
pop
jno
push
inc
mov
sti
push
and
sub
or
mov
dec
xor
movsb
push
bound
mov
push
sbb
icebp
outsl
int
lcall
aam
lea
sbb
fsts
clts
adc
sarl
pop
test
xorl
std
sbb
mov
mov
jb
outsb
test
xchg
jo
scas
sbb
mov
dec
cmpsl
jae
dec
xchg
and
out
lods
mov
out
xorl
test
enter
aam
jae
push
repnz
mov
insl
xor
pop
icebp
mov
lret
sahf
dec
aam
lret
cmp
push
stos
sti
jg
popf
xlat
mov
mov
and
add
dec
loop
inc
dec
inc
cli
pop
sbb
jae
adc
xor
push
jp
insl
in
dec
mov
mov
icebp
scas
cmpsl
mov
jp
inc
ret
movsl
jecxz
imul
pop
sub
cs
pop
in
cld
sbb
adc
xchg
ficompl
push
add
cltd
mov
sar
xor
jae
jge
cmp
gs
sub
adc
out
xchg
insb
dec
arpl
hlt
lea
or
sub
or
and
dec
nop
ret
add
insl
pop
pop
cli
pop
fimull
push
in
stc
insb
es
rcl
stos
imul
xchg
mov
cmpsb
js
lret
bnd
jle
dec
or
or
popf
and
aas
loope
jle
add
xor
lods
enter
fldl2e
stc
test
pop
mov
and
jb
sbb
lods
xchg
lea
cmpl
and
pop
add
mov
lret
jecxz
lea
aad
das
mov
idivl
cld
adc
hlt
xchg
je
jecxz
in
fdivl
cld
push
sahf
daa
dec
push
xor
xor
test
adc
push
xchg
pop
aaa
dec
jle
inc
cli
and
icebp
fwait
icebp
jno
dec
and
lahf
cmp
jmp
xchg
push
lods
lea
pop
cmc
rcrl
mov
jne
std
add
and
jp
pop
clc
cmp
mov
lret
mov
jl
out
lret
stc
or
shll
pop
inc
sub
ret
lods
fdivrl
pop
xchg
in
mov
add
push
in
in
xchg
jno
and
or
jb
pop
mov
in
clc
mov
adc
and
pushf
adc
ds
mov
xor
insl
push
pop
cmc
aas
push
push
fistps
sub
jae
mov
adc
jbe
mov
lcall
mov
aas
dec
sbb
jmp
sbb
xchg
push
jns
aas
sbb
jne
sub
shlb
or
xor
in
add
into
out
fstps
daa
sti
pop
xchg
or
aam
mov
insb
aad
aas
mov
das
jge
loop,pn
cmpsl
inc
fcomps
out
sub
dec
jnp
sbb
loope
popf
icebp
pop
leave
sub
lcall
sahf
xchg
test
aas
xlat
popa
mov
jp
stos
pusha
sbb
outsl
call
lcall
into
and
cmpsb
jb
sub
mov
mov
dec
ljmp
sub
out
cli
sbb
lahf
xchg
nop
pop
pop
push
clc
pop
xchg
fs
aaa
shl
and
dec
shl
or
rolb
jl
stos
scas
or
pop
push
iret
mulb
mov
mov
adc
in
push
mov
hlt
aaa
fiadds
or
enter
repz
sub
fdivrl
push
repnz
push
cmp
adc
xchg
imul
pop
cs
jae
or
mov
jae
jge
mov
test
xchg
xor
cmp
pushf
mov
xor
dec
or
dec
pop
dec
ljmp
sub
aad
jg
pop
sub
adc
xor
mov
jmp
ret
enter
popf
pusha
dec
cmp
mov
movsb
cmc
inc
sarl
and
int
adc
cwtl
aad
arpl
imul
jl
inc
push
fisttps
pusha
add
push
test
jae
and
imul
aas
repnz
sbb
add
add
push
lock
adc
lds
int
and
inc
mov
xchg
cmpsl
outsb
bound
xchg
mov
clc
mov
mov
fwait
dec
loopne
push
popa
add
sbb
add
dec
jne
push
jns
out
dec
xlat
dec
pop
adcb
xor
out
fnstsw
xchg
pop
mov
dec
in
jmp
and
jge
sub
pop
movsb
push
or
mov
inc
cmp
test
mov
mov
je
mov
mov
mov
add
cmc
andb
daa
aas
mov
adc
es
adc
fldt
mov
into
xchg
push
daa
push
sub
jmp
inc
jp
cmp
fwait
mov
cmc
test
gs
xor
or
jb
in
into
aas
jb
dec
or
nop
cmp
push
popa
aas
clc
imul
cli
mov
ficompl
hlt
dec
out
stos
sub
jns
adc
jo
add
pop
out
dec
out
fwait
inc
push
mov
cmp
xor
lahf
dec
shl
lock
insl
ljmp
sub
mov
mov
or
in
call
push
and
mov
push
pop
jp
stc
adc
call
or
sub
in
cld
cmp
int
add
xlat
push
jg
dec
in
fiadds
or
stos
sub
or
stc
inc
xchg
push
aam
clc
cwtl
sub
in
sahf
addl
add
xor
and
fnstsw
je
into
mov
in
and
jmp
movsl
mov
fstpt
pop
xor
adc
mov
add
and
inc
mov
adc
cmpsb
push
push
int
lods
lcall
and
ja
mov
xchg
pop
sbb
pusha
mov
cli
bound
es
cld
je
test
ja
pop
mov
stos
sub
cmpsb
js
inc
pop
mov
cld
jle
dec
sub
out
jo
xchg
push
cs
mov
add
out
and
int
jbe
add
sub
push
cmc
data16
out
xchg
and
cmc
insl
mov
pop
fwait
daa
dec
roll
adc
push
in
or
gs
fs
lock
stos
inc
mov
outsb
subb
loopne
jp
insb
mov
or
hlt
jmp
push
fsubp
jns
dec
sub
sahf
jecxz
push
push
dec
scas
popf
movsb
fxch
ss
addr16
mov
fwait
xchg
enter
adc
cmp
fcomip
mov
dec
ja
add
shll
mov
in
mov
out
dec
xchg
imul
jl
orl
out
dec
jae
imul
mov
jecxz
mov
cmp
popa
add
in
rcrb
xor
js
xor
xchg
dec
inc
adc
pop
jmp
lcall
insb
popf
in
and
push
out
adc
sub
or
mov
lahf
dec
aam
cltd
std
push
sub
adc
jns
popa
dec
popa
jns
shrb
xchg
insl
mov
and
scas
or
out
sub
in
xor
pop
xor
mov
sbb
into
adc
dec
push
mov
mov
cmp
jbe
data16
pop
fwait
jg
or
bound
imul
xor
pop
aas
movsb
cld
in
test
pusha
loopne
popa
mov
push
jp
sahf
repnz
fnstcw
outsl
nop
mov
push
sbb
pop
hlt
mov
push
dec
or
movb
sbb
imul
imul
ret
adc
fdivs
mov
mov
iret
dec
shrb
shrl
cli
fistl
insb
xlat
add
jle
mov
adc
idivb
mov
mov
mov
xchg
cli
popf
es
not
cmp
scas
lods
jmp
ficoml
xor
adc
and
dec
push
insl
xchg
ljmp
frstor
pusha
and
inc
adc
pop
icebp
jb
lods
stc
cmp
pop
mov
cmpsl
mov
cmp
popa
dec
mov
insb
dec
or
call
jo
xchg
pop
xchg
inc
adc
push
and
mov
or
in
ret
aaa
push
xchg
out
xchg
push
cs
fs
inc
js
mov
xchg
ds
insl
shll
mov
xchg
xchg
repnz
mov
cmp
enter
jo
xor
dec
sbb
and
popa
cmp
movsl
ret
sbb
sbb
xchg
repnz
xchg
rcrb
dec
fisttpll
dec
dec
mov
sbb
cmp
pop
notb
cmp
stos
push
lahf
ja
mov
pop
scas
std
sub
aas
inc
mov
cmc
mov
push
test
cmp
mov
sbb
push
js
or
int3
lds
or
lea
xor
mull
mov
mov
out
fisubrs
int
lcall
outsw
pop
mov
scas
std
mov
xchg
fildll
mov
daa
movsl
mov
mov
cmp
cltd
daa
cmp
inc
jp
enter
clc
repnz
fwait
mov
cmpsb
insb
out
jle
into
inc
shll
scas
dec
sub
movsb
and
lahf
mov
test
mov
mov
jmp
aam
cwtl
leave
mov
rcl
xlat
jno
sti
lret
add
ss
sub
jne
je
xchg
mov
sub
mov
les
scas
sbb
mov
loope
mov
or
sbb
or
enter
mov
mov
fsts
jb
mov
lret
push
cwtl
xlat
push
fdivrp
testl
into
mov
outsb
aam
jnp
fstpl
cmp
push
das
cmp
mov
adc
jno
and
sub
push
outsb
add
or
xor
aam
or
lcall
or
dec
adc
and
inc
and
mov
or
jno
push
cmp
adc
and
xchg
pop
xchg
ror
or
ret
mov
lret
loope
or
or
les
out
xlat
push
sub
insl
dec
dec
or
pushf
imul
inc
xchg
xor
ret
mov
jle
clc
and
jge
jnp
lret
mov
pop
sub
into
adc
rorl
test
xor
adc
mov
test
fsubs
cmp
or
lods
or
push
mov
add
movsb
mov
dec
jno
arpl
fcoml
or
jns
add
lds
clc
rorl
ret
inc
fwait
push
or
test
pushf
mov
pop
shl
xor
fstpl
and
jg
pop
out
dec
add
aas
test
sbb
xor
popa
push
inc
xchg
sbb
arpl
les
pop
ds
inc
mov
xor
mov
push
xchg
arpl
cmp
sub
insb
mov
pop
xor
fwait
or
or
or
shl
mov
out
or
push
jl
call
sbb
mov
orl
sub
push
cmc
and
add
or
mov
mov
xchg
xchg
mov
out
and
cmpsl
mov
js
std
push
fmul
stos
call
pop
pop
xor
into
call
lock
call
xor
sub
cmpsb
pop
inc
mov
je
imul
sub
sti
jns
push
mov
es
pop
pop
loope
and
dec
sbb
stc
lds
mov
dec
mov
sbb
jno
adc
add
stc
fwait
add
sahf
and
adc
jl
cmp
dec
fcoml
and
lret
ljmp
push
push
mov
sub
or
cmpsl
pop
dec
sbb
frstpm(287
das
xchg
divb
adc
pop
adc
xchg
push
mov
inc
rorl
hlt
mov
popa
int3
jle
repnz
movsl
mov
lret
fdivrs
out
mov
mov
movsb
xor
test
js
mov
sub
movsl
aad
inc
push
mov
pop
xor
pop
mov
cs
and
xchg
add
dec
rcrb
sub
aam
cmp
or
jmp
std
mov
clc
stos
loop
shrl
adc
jbe
shlb
sbb
and
pop
or
cmp
xchg
push
xchg
cmp
xor
in
push
cmp
push
cltd
add
out
jmp
int3
aad
sub
insb
leave
int3
mov
sub
je
test
and
mov
jg
sub
jmp
push
push
inc
imul
aam
negl
or
pop
adc
nop
lods
mov
cltd
movswl
cmp
fsubrl
insl
pop
sub
pushf
icebp
mov
add
sub
push
repnz
negb
jmp
idivl
jnp
jle
mov
push
xlat
insb
sub
jne
repz
je
cmp
mov
or
cmp
pop
cmpsb
fs
stos
adc
jo
popf
pop
inc
notb
pop
xor
xchg
cmp
add
flds
fucompp
mov
push
js
mov
stc
push
aad
jae
insb
sub
popa
cmp
jb
icebp
add
and
int3
jge
fists
pop
outsl
and
cwtl
ljmp
out
shrb
loope
stos
cs
jb
mov
mov
pop
ret
inc
imul
jbe
push
or
sub
xor
jnp
cld
mov
pushf
jnp
and
stc
movsl
and
inc
jp
or
xor
inc
sbb
repnz
jmp
cmc
mov
in
imulb
dec
clc
nop
dec
sbb
mov
jp
popf
push
iret
cwtl
jne
mov
inc
mov
dec
mov
push
push
lret
cmp
mov
xchg
jecxz
cwtl
mov
loope
adc
cmpsb
dec
xor
ret
jae
add
mov
scas
pop
aad
aaa
das
xchg
mov
push
cmpsb
insb
push
rcl
push
cmpsl
repnz
or
sub
jecxz
cmc
cwtl
pop
cmp
in
je
data16
or
test
mov
xchg
pop
mov
xchg
xchg
and
shl
leave
loope
bound
add
jg
xchg
sbb
mov
ljmp
andb
outsb
jmp
jns
pop
stos
mov
push
dec
mov
mov
roll
cmp
mov
jbe
dec
incl
jp
js
in
mov
jmp
mov
mov
mov
scas
push
roll
push
sbb
inc
dec
das
imul
mull
movsl
mov
cli
sahf
dec
rorl
xor
pop
int
stc
sbb
cmpsb
sbb
roll
loope
rclb
mul
xor
push
mov
inc
sti
mov
jne
mov
sbb
loope,pt
fldcw
jecxz
jns,pt
sbb
jnp
iret
aaa
arpl
dec
push
jg
inc
and
test
popa
mov
arpl
ja
mov
jmp
sarl
mov
fmulp
push
adc
pop
or
inc
mov
mulps
aaa
in
mov
scas
add
out
inc
jne
imul
inc
ja
mov
out
push
jbe
ljmp
cmpsl
test
inc
cmpsl
push
scas
pop
mov
ficompl
loopne
inc
push
out
push
enter
mov
movsb
ds
mov
popa
jp
pop
popa
push
mov
push
pop
test
add
insb
cs
rclb
cmp
outsb
stos
sbb
dec
rep
or
das
cmp
pop
mov
outsl
lret
mov
add
rolb
lcall
jle
mov
addr16
stos
rol
xor
xchg
push
inc
cmp
sti
je
inc
stc
das
inc
fcomi
add
or
inc
les
les
or
xchg
out
pop
or
push
rorb
mov
orl
add
jns
cs
cmp
je
sbb
pop
sub
lret
inc
and
lret
pop
pushf
adc
fwait
js
sub
int3
mov
adc
lcall
ja
cmpsb
test
mov
repz
jne
xlat
mov
mov
and
out
inc
adc
stos
inc
sbb
adc
inc
ror
inc
in
sub
rol
sbb
pop
cmpsb
add
hlt
add
out
inc
outsb
inc
stos
inc
cmpsl
push
sbb
or
addr16
test
push
leave
movsb
into
rol
jp
pop
sbb
rol
addr16
idiv
jge
insb
jg
test
movsb
pop
fucom
cld
inc
sbb
jne
or
xchg
xchg
int
inc
jmp
add
rorl
mov
pop
out
cmp
shrb
push
imul
icebp
jns
roll
add
add
xor
lods
movsb
imul
out
mov
ret
pop
pushf
ret
cmp
jne
shll
pop
pop
pop
fwait
jno
fisubrl
out
adc
lret
int
jg
jecxz
cltd
xlat
push
test
rcrl
outsb
jp
mov
xor
cmpsb
iret
inc
sbb
das
aad
mov
out
jg
push
mov
sbb
mov
repnz
dec
xor
cwtl
mov
and
jmp
scas
sub
aaa
jg
icebp
movsl
xor
mov
xchg
stc
mov
adc
sbb
jle
jne
cmp
popa
add
fisttpl
pop
push
mov
jno
fnstcw
hlt
pop
fidivrl
push
lods
lods
test
cwtl
in
mov
adc
and
mov
cmpsb
pop
clc
mov
sbb
cmp
shll
cltd
adc
push
out
into
push
sbb
xchg
int
fsubrp
fdivr
sub
leave
stos
or
push
test
jnp
fnstenv
cmp
mov
push
adcl
xor
popf
dec
dec
loope
insb
xchg
addr16
in
fmuls
sub
into
outsl
pop
push
jbe
sahf
int
std
enter
scas
adc
ja
rclb
jne
sbb
repz
sti
jl
mov
clc
repz
cmpsl
push
mov
jae
shrb
jp
insb
insl
push
add
adc
inc
push
inc
gs
xchg
mov
jmp
push
cmc
jbe
mov
shr
testb
xchg
lahf
lcall
pop
fsubrp
in
add
sbb
cmp
xor
loopne
jbe
repz
dec
sbbb
dec
rcl
xor
and
aaa
dec
fiadds
lods
mov
cvtdq2ps
mov
filds
mov
aaa
cmp
mov
loope
add
pop
mov
clc
pop
out
orl
sbb
push
push
add
je
mov
add
jge
and
adc
xor
das
xchg
imul
lds
fcomp
test
adc
dec
fsubrs
roll
xchg
stos
sub
mov
imul
pop
sbb
adc
arpl
push
fstl
imul
out
xor
mov
and
xlat
sub
jl
aas
sub
ja
push
jne
adc
inc
icebp
push
int
cmp
sub
mov
push
enter
dec
repz
outsb
in
lods
fs
faddl
push
inc
or
jbe
mov
jo
hlt
je
sbb
dec
push
test
rorb
or
imul
shrl
mov
add
shl
cmp
mov
jb
or
dec
mov
xchg
ret
and
imul
add
mov
xchg
jo
pop
cmpsl
cmp
jns
xor
fisttps
adc
cs
je
stos
int
or
xchg
xchg
fcoml
or
lods
addr16
mov
mov
push
imul
adc
je
sub
popf
lods
push
jge
gs
paddusw
lret
or
outsb
sbb
push
sbb
stos
lods
inc
popf
and
mov
xchg
mov
jl
pop
mov
push
cs
aas
fsubl
lds
xor
leave
mull
cmp
pshufw
packuswb
mov
sti
jg
mov
jle
leave
iret
test
popf
in
or
out
mov
icebp
stc
add
cmpb
lahf
mov
shll
ss
imul
sub
aas
aaa
dec
mov
or
scas
shll
xchg
push
stc
ljmp
sbb
jg
sub
pop
or
and
cmpl
lock
sbb
lret
in
push
push
inc
cli
push
js
adc
cmp
pop
push
jge
dec
in
mov
adc
loopne
arpl
push
gs
push
movsl
and
jb
outsb
imull
fisubrs
xor
imul
cmpsb
test
xor
or
mov
pop
pop
adc
pmullw
lret
dec
test
adc
sbb
insb
add
dec
test
pop
xor
or
inc
gs
xor
loopne
jp
push
lahf
lcall
jmp
fiaddl
fsubrs
enter
andl
xor
lret
imul
mov
inc
push
sbb
inc
jl
rol
lcall
shlb
ss
adc
add
int3
les
in
scas
loop
xchg
and
pop
mov
xor
test
aam
stos
stos
pop
dec
xchg
jp
push
sbb
stos
cmpsl
add
das
outsl
aam
mov
cmp
jns
inc
xchg
xchg
pop
mov
shrb
sub
mov
loop
pop
xchg
out
lock
aad
adc
inc
gs
rol
mov
jnp
push
jge
ja
push
test
add
cld
loope
call
aam
test
lahf
fmul
lret
rorb
jne
mov
stc
in
jbe
push
xchg
stos
cmp
pop
xor
insb
sub
mov
sbb
cli
xor
je,pt
pop
call
in
aam
scas
aas
push
test
lcall
xchg
les
imul
lahf
bound
shll
pop
orl
jl
pop
mov
faddp
xor
mov
jle
mov
icebp
pop
push
sub
daa
lods
int
pusha
hlt
popf
ret
inc
icebp
orl
dec
jo
cmp
orb
sub
out
mov
sar
pop
sbb
lea
push
or
adc
and
push
ds
fwait
jbe
add
loopne
jns
outsb
sbb
or
scas
inc
push
sub
lods
and
jge
or
in
mov
jo
nop
enter
lcall
sbb
xchg
js
loope
jle
test
leave
inc
mov
inc
cmp
push
mov
sub
dec
cs
ljmp
or
pop
pop
outsl
aam
mov
outsl
inc
mov
dec
std
mov
ficoml
repz
push
adcl
mov
sbb
push
pusha
adc
outsb
inc
pushf
pushf
out
push
movsb
sarl
mov
lcall
in
add
cmp
clc
jg
push
pop
lret
xor
add
xchg
jns
mov
dec
repnz
jp
ljmp
ret
sbb
cld
stos
aas
pop
call
iret
gs
xorl
test
xor
lret
js
cmpsl
lahf
add
and
shrb
imul
mov
inc
loop
pop
dec
lock
lcall
out
and
mov
and
insb
pop
mov
aas
xchg
xor
push
mov
dec
pop
fcoml
cmp
pop
gs
jb
sbb
xchg
out
cmpsb
cmc
sarl
fadds
lret
faddl
daa
dec
and
scas
jns
cmp
popf
test
loopne
adc
std
inc
es
sbb
test
xchg
xor
in
sarl
xorl
jb
jbe
arpl
dec
cmp
in
test
inc
mov
mov
mov
dec
adcb
add
and
xchg
lahf
push
mov
icebp
jnp
js
push
scas
pop
test
shrb
mov
cli
rorl
sbb
leave
inc
lods
pusha
enter
lods
ret
xchg
les
adc
push
in
out
dec
in
je
dec
xor
insb
sbb
pop
push
sbb
dec
rcrb
into
mov
shlb
je
std
ss
pushf
dec
cmp
ret
mov
imul
movsb
or
mov
sub
outsl
mov
pop
mov
sar
mov
mov
inc
aam
dec
test
cltd
sbb
into
fsub
rcll
cltd
jnp
xor
mov
push
notb
inc
les
jno
mov
lds
xchg
xor
int
mov
push
mov
outsw
stos
sbb
or
nop
andl
imul
or
inc
dec
push
nop
loopne
cs
pop
dec
nop
inc
lcall
push
sub
ret
push
mov
test
xchg
jno
sub
sbb
push
pop
add
insl
sbb
mov
and
and
ss
jb
pop
inc
xor
andb
sub
sbb
js
push
cwtl
sub
add
cwtl
push
pop
xchg
insb
pop
icebp
push
aas
pop
imul
rclb
sahf
movsl
movsl
jg
add
hlt
loop
pop
add
adc
imul
ffree
mov
jae
in
mov
ret
sbb
js
jle
mov
movsb
daa
mov
and
cmp
mov
jmp
addl
mov
insb
add
lods
in
loop
push
rol
cld
rolb
ljmp
sub
enter
test
push
xchg
lods
push
jge
inc
ret
dec
adc
lahf
xchg
dec
or
pop
lds
in
adc
mov
stc
mov
arpl
dec
mov
ljmp
out
fs
dec
addr16
outsl
movsl
add
cwtl
add
pusha
add
xor
xlat
lods
inc
push
aas
inc
xor
inc
push
adc
loope
inc
jb
js
pop
in
das
mov
lahf
sbb
xchg
mov
iret
push
jno
and
cmpsb
insl
jne
and
notl
enter
jns
lahf
ret
adc
in
testb
leave
mov
sub
pop
fwait
into
mov
mov
dec
mov
enter
ljmp
adc
mov
dec
jl
out
jge
mov
mov
pushf
cli
cld
pop
sbb
movsb
push
fucom
xlat
dec
stos
outsb
aaa
mov
rcll
mov
enter
xor
pop
jbe
inc
sarl
add
or
xchg
into
dec
mov
jnp
mov
xlat
rcrb
dec
sbb
popf
push
or
push
mov
loope
cmpsb
xor
out
xchg
clc
imul
dec
inc
fisttps
sub
inc
cmp
mov
push
out
xor
mov
xor
in
jl
in
enter
mov
shlb
adc
lock
scas
pop
fs
dec
scas
add
xchg
adc
loope
std
lods
cwtl
xor
lods
into
xor
push
fcmovb
jb
fs
pop
es
fdivrs
mov
adc
roll
pop
fnsave
mov
icebp
sub
aaa
cld
inc
jb
daa
jecxz
adc
jo
adcl
imul
insl
sub
mov
mov
popl
enter
movsb
idivl
iret
ss
dec
xchg
or
out
iret
jne
cwtl
xor
scas
xor
and
xchg
sbb
lret
pop
cld
xchg
cmp
mov
fildl
out
ss
mul
test
imul
xchg
push
fisubs
adc
cmc
imul
cmpl
pushf
and
aad
jmp
mov
adc
pop
stos
mov
mov
and
mov
cs
cwtl
mov
lret
sbb
push
in
sub
es
push
add
test
mov
xchg
sbb
lods
mov
pop
xor
push
xchg
les
sub
sarb
jg
decl
xor
pop
lods
mov
fwait
cmp
mov
out
push
fmuls
dec
sbb
pop
inc
subl
cltd
addr16
or
cltd
loopne
mov
loop
andb
jmp
jne
push
push
mov
int3
xchg
fiadds
mov
sarb
in
pop
fisubrl
dec
mov
cmpsl
xchg
test
mov
push
pop
aaa
stos
jg
cltd
dec
inc
in
outsl
sbb
push
xchg
and
cmp
xchg
add
pop
fnstsw
sbb
mov
inc
jecxz
jo
cmp
into
in
daa
stc
cmpsl
mov
push
xor
mov
mov
rol
jnp
mov
dec
and
loopne
es
mov
lea
fadds
pusha
pop
lahf
xor
pop
adc
je
dec
data16
ljmp
jmp
push
popf
mov
pushf
fidivs
mov
iret
cld
cmc
or
and
inc
pop
fldenv
sub
inc
jecxz
aam
inc
pop
clc
daa
and
push
or
xchg
mov
xor
cmp
fisubrs
xor
mov
incb
or
out
push
xchg
fs
or
and
dec
or
jl
shlb
stc
shl
and
xor
and
into
inc
fsubrs
loope
stos
addb
xchg
adc
sti
cmpb
into
test
test
inc
mov
sarl
push
cld
and
adc
aas
cmp
mov
xchg
xchg
mov
sub
out
addr16
or
add
mov
pop
imull
scas
mov
jno
push
jb
scas
mov
xchg
pop
sbb
cmp
in
push
push
shrl
idivb
in
inc
out
cmpsb
popf
pop
stc
sub
rcrb
pop
fdiv
lret
hlt
fnstcw
xchg
insb
mov
adc
jae
ret
into
movsb
aas
add
outsb
int3
dec
fwait
insl
idiv
cmpsl
mov
jecxz
xchg
mov
ficoms
cmpsb
xchg
insl
lret
lret
mov
dec
mov
sub
pop
and
fwait
imull
sub
popf
xchg
icebp
cmp
sub
jbe
int3
paddusw
jg
test
es
mov
lds
adc
out
cmp
imul
and
loop
or
mov
insb
mov
mov
in
jne
sub
addr16
pop
in
dec
xchg
ret
push
adc
inc
aaa
dec
sub
pandn
sbbl
mov
inc
jge
fldl2e
cmp
les
aam
imul
repz
push
xorl
and
add
adc
mov
popa
orb
pop
js
stc
adc
mov
xor
movb
pop
ret
ret
lods
pop
loop
inc
lcall
neg
popf
stos
push
push
scas
fildl
sub
in
or
sahf
inc
pop
adc
pop
xor
adc
js
and
adc
jns
ret
pop
pop
mov
mov
adc
lret
icebp
fidivrs
in
fbstp
ljmp
into
pop
shl
lret
ret
jo
sbb
sti
mov
hlt
sub
sbb
das
inc
into
fwait
or
in
aaa
cmp
jl
dec
in
cli
or
adc
cmp
mov
fists
mov
fisttps
dec
shlb
xor
cld
mov
jl
push
add
push
dec
xor
addr16
and
push
in
sub
leave
xchg
iret
mov
inc
popa
ret
or
sbb
cmp
sub
ret
aas
sub
push
push
cld
xchg
mov
sti
leave
inc
add
adc
xor
addr16
sbb
adc
repz
out
aad
daa
arpl
and
out
cmp
push
mov
cltd
cmp
cld
clc
ret
mov
jnp
and
add
inc
push
mov
rcrl
pop
push
dec
add
insl
or
jle
fists
pop
into
shl
insb
shll
xlat
jmp
rol
mov
divl
dec
cmp
inc
scas
push
cltd
sub
cmp
test
fcmovnbe
dec
xchg
pop
sarb
pop
sbb
xor
xor
repnz
adc
nop
xchg
sbbb
xor
mov
mov
pop
mov
pop
aam
pop
pop
mov
push
push
jmp
cmpsl
aas
cmpsb
adc
sbb
mov
mov
inc
jns
cmpl
xor
lock
add
jp
xchg
adc
roll
test
out
sbb
cwtl
insb
out
and
mov
xor
flds
insl
or
cmp
and
mov
lahf
adc
adc
out
idivb
stos
ficompl
xor
sti
rcll
lret
pop
push
jnp
xchg
aam
sbb
out
sub
dec
arpl
jecxz
mov
mov
cmp
aaa
ret
inc
pop
mov
xor
inc
rcll
loopne
js
cltd
sbb
mov
leave
bound
dec
dec
dec
add
xchg
int
mov
xlat
mov
push
es
jno
fwait
lret
insb
cwtl
rcrl
lock
insb
sub
js
jne
mov
test
das
xchg
add
cmp
jno
aas
outsb
push
jo
dec
xor
loope
xchg
cmp
imul
call
popf
andb
mov
jmp
out
daa
and
test
es
xor
cs
add
cmc
mov
push
jae
sbb
add
clc
mov
push
in
aaa
pop
push
fcmovbe
sbb
aaa
idivl
jmp
push
push
mov
rclb
rcrl
fstl
in
movsl
and
pusha
scas
insl
adc
jae
in
movsb
mov
out
mov
pushf
cmpb
jge
ficoms
aas
jns
and
xor
fldcw
cwtl
cltd
and
int3
jmp
imul
rcr
and
xchg
imull
jecxz
setnp
mov
sub
and
add
adc
xor
mov
lods
mov
aaa
mov
inc
push
mov
push
push
movsl
idivl
mov
stos
jle
push
jmp
mov
mov
testl
mov
pusha
arpl
cmp
mov
out
out
pop
xlat
scas
xor
cmp
shrb
mov
push
nop
push
scas
rorb
push
lods
xchg
mov
xor
jno
rcr
jno
sub
xchg
add
xor
cmp
adc
mov
stos
repnz
adc
in
stos
sbb
xchg
repnz
addr16
xorl
popa
jl
std
xor
clc
rolb
aaa
in
sub
aaa
mov
adc
aam
roll
pop
dec
lcall
mov
jl
or
stos
test
sub
sbb
movsb
nop
sti
mov
mov
es
fisttpll
mov
mov
inc
fcoml
sahf
stos
pop
clc
dec
xor
outsb
add
adc
and
jg
dec
mov
popa
mov
xorl
daa
pop
movsl
sub
adc
popa
and
ret
enter
push
jnp
mov
scas
leave
mov
cmp
cmp
lret
sarb
mov
pop
in
fbstp
movsl
xchg
or
fcmovb
rolb
sbb
push
add
mull
jbe
lcall
pop
jbe
adc
cmp
lret
sub
les
fnstenv
pop
inc
aad
out
out
xor
mov
fs
loopne
cs
into
sbb
and
idiv
xchg
sbb
jmp
inc
xchg
repnz
movsl
jecxz
test
shr
jns
sub
add
or
int
fsubrl
and
ss
std
inc
repnz
test
mov
dec
mov
pop
scas
js
lods
cli
push
out
and
sbb
push
inc
outsl
add
or
pushf
stos
mov
daa
pxor
mov
cmp
rorb
into
lcall
pop
mov
push
dec
mov
pop
push
fiadds
dec
repnz
mov
enter
insl
cltd
orl
sbb
cmp
mov
ss
lods
clc
jp
jp
mov
add
mov
and
xchg
add
cld
jnp
xor
icebp
inc
cmp
cmp
xor
faddl
xor
jo
clc
xchg
movsl
movsb
xor
stos
xchg
cmpsb
push
dec
jl
adc
mov
xlat
pop
or
fidivrs
int3
inc
xor
adc
push
jo
mov
xor
dec
inc
out
movsl
scas
pop
out
inc
imul
lret
mov
test
daa
adc
imul
rcr
mov
lcall
push
andb
jae
mov
movb
in
xchg
push
mov
popa
mov
jle
or
sub
rclb
pushf
in
test
scas
mulb
cmp
cmp
data16
movsb
pop
fldcw
inc
push
mov
negl
push
in
jae
jmp
lea
leave
repz
dec
mov
imul
xor
xchg
mov
mov
imul
sub
pushf
mulb
push
pop
fisubrs
lcall
les
inc
inc
pop
or
jg
out
pop
mov
cld
xsha256
cmpsb
pop
fcompl
cmp
cmp
aaa
lea
outsl
add
nop
shll
shlb
sub
les
mov
pop
insb
mov
mov
ja
xchg
pop
cmc
pop
sbb
mov
sub
adc
inc
test
mov
dec
sbb
adc
jl
fsubr
push
cmc
xchg
test
push
ljmp
fsubs
inc
roll
rcr
sub
ret
aad
jbe
adc
cli
adc
dec
dec
sbb
fwait
add
jno
or
cmp
fnstenv
dec
mov
or
mov
push
rorb
cmpsb
sub
bound
jae
js
mov
dec
in
lret
fmulp
into
jg
fwait
int
scas
fdivrp
mov
pop
testb
ret
std
xor
sbb
addr16
stos
scas
inc
jmp
stc
cmp
mov
inc
aad
fadd
out
jmp
lds
lret
repz
xor
xor
es
fs
inc
mov
sub
in
mov
decb
or
sbb
scas
xchg
test
aad
adc
jnp
sub
xor
mov
adc
sbb
sarl
dec
push
xlat
jae
xor
pop
mov
inc
jp
adc
and
adc
je
repnz
js
lods
dec
lret
push
dec
pop
xchg
dec
movsl
mov
test
mov
sti
daa
jl
pop
pop
into
in
xchg
js
ja
ds
push
adc
xlat
inc
out
stc
adc
out
and
cmp
loopne
jns
mov
push
ljmp
push
xchg
jge
dec
and
sub
in
inc
mov
rorb
out
mov
pop
sub
stos
xor
cmp
xor
aad
add
mov
adc
cmc
dec
xor
cli
or
cmpsl
icebp
imul
or
cmpsb
stos
adc
in
lds
xchg
push
xor
ds
adc
loop
jae
cmpsb
fsubrs
scas
jle
jbe
add
jns
loop
add
outsl
outsl
sub
loope
fstp
sbb
adc
push
pop
shll
sbb
loop
inc
add
stos
dec
jg
xor
fwait
push
mov
lods
mov
xor
pop
scas
add
outsb
xor
rcr
iret
xchg
lret
add
dec
mov
and
mov
xchg
jo
rcll
jbe
jb
loop
mov
pop
dec
aam
sti
mov
sbb
imul
shl
cli
mov
ficoms
ds
fsubs
pusha
lds
xchg
arpl
xchg
ljmp
xor
or
xchg
cmc
pop
lea
jns
jg
adc
pop
jbe
pushf
xchg
add
test
sbb
push
mov
jle
cmp
jl
xchg
mov
outsl
sub
sub
insb
add
pop
repnz
int3
aam
pop
mov
pop
pop
mov
mov
ljmp
out
lea
aam
push
add
stc
dec
and
jle
or
into
dec
jne
jns
cmpsb
or
jae
xor
sbb
in
out
ja
pop
push
inc
dec
jb
cmc
push
jmp
push
fstl
imul
xchg
insb
pop
outsb
jno
data16
pop
into
aas
cmp
lods
push
or
pusha
or
jl
in
lret
cld
dec
xlat
mov
xor
in
pop
loop
sbb
mov
lret
arpl
mov
mov
mov
in
lahf
lahf
xchg
add
and
mov
cmc
jne
sti
je
push
loope
fisttps
adc
decb
jnp
icebp
in
stos
sub
test
jecxz
push
aad
fstpl
cltd
cmc
pop
pop
scas
xchg
stc
shlb
test
adc
mov
inc
fwait
push
stos
lock
adc
loopne
cli
sub
inc
cltd
imul
icebp
scas
sub
cmpsl
sub
inc
xor
aas
test
mov
mov
aam
icebp
pop
lea
call
add
lret
test
dec
movsl
mov
mov
scas
int3
fistl
das
cld
add
adc
push
bnd
aaa
iret
push
xor
or
xchg
cmp
sbbl
int3
jne
adc
dec
sub
mov
xor
push
xchg
push
cmpl
jge
pop
mov
mov
jns
add
test
loop
iret
xchg
dec
je
sbb
loop
loopne
fs
stos
rorb
in
dec
movb
dec
inc
mov
aaa
mov
sbb
aad
scas
and
cmpsl
fldenv
pop
mov
pop
sbb
dec
dec
lock
jge
pop
ret
popf
xorl
es
aad
mov
push
pop
out
fisttpll
repnz
aad
and
sbb
and
pushf
pop
imul
xchg
add
sbb
cltd
mov
test
inc
push
add
jns
loopne
and
outsl
inc
movsl
adc
test
dec
in
cmpsl
test
loope
sti
mov
das
xor
pop
scas
xchg
xor
sti
lahf
mov
outsl
pop
mov
repnz
pop
sbb
cmpsl
lret
xlat
inc
adc
or
cltd
test
cmpsb
inc
fistps
adc
push
cmp
and
or
ficoml
or
mov
ss
lahf
xlat
push
ljmp
sti
hlt
scas
gs
shrl
add
jbe
add
leave
scas
push
mov
aas
fs
clc
adc
mov
lods
icebp
sbb
adc
fldcw
dec
popf
inc
pop
sbb
fisubrs
mov
shll
push
inc
cwtl
mov
es
pop
inc
sti
lods
sbb
add
mov
lock
mov
movsl
cmpsl
mov
xor
and
or
inc
xchg
and
mov
stc
nop
mov
inc
repnz
inc
int
pusha
enter
fiadds
jns
and
sbbl
sbb
pop
add
dec
jg
adc
iret
mov
rcrl
dec
ljmp
and
mov
push
mov
jno
ret
fdivrs
fimuls
int3
pop
push
mov
pop
xchg
pop
sbb
sbb
sub
icebp
out
int
pop
xchg
dec
rorl
add
xchg
test
jb
clc
dec
sahf
pushf
push
ret
dec
mov
je
cmp
adc
jns
arpl
fstpl
mov
pop
imul
lds
stos
repnz
or
sbb
ljmp
sub
add
fsub
mov
test
loop
xchg
popa
fistpl
xchg
inc
pop
xor
sbb
fldenv
shrl
scas
ror
in
or
jmp
sbbl
jecxz
shlb
out
jno
xchg
sbb
fwait
sbb
das
xchg
pop
inc
mov
jmp
pop
jne
stos
cwtl
pop
daa
xor
mov
mov
lahf
inc
lods
push
daa
ja
mov
push
outsb
popa
xlat
popf
pop
mov
stc
xchg
into
sbb
adc
daa
sbb
mov
sbb
jp
push
lea
xchg
jecxz
cmp
cmpb
add
xor
fisttps
fs
mov
jge
cmp
cmpsb
lret
lea
repnz
push
ja
lcall
mov
fldenv
cmpsl
movsl
cli
dec
out
std
or
mov
aas
lret
or
test
mov
out
xchg
lods
xlat
pop
js
es
addr16
xchg
test
mov
xchg
fldl
pop
cltd
mov
ja
mov
rcl
pop
or
fistpl
mov
dec
add
or
sti
or
dec
clc
mov
cmpsb
jp
into
pop
sahf
rcr
in
mov
mov
mov
loopne
std
das
out
xchg
movsb
ja
dec
dec
leave
mov
cmp
sbb
xchg
jbe
xlat
stc
push
cmp
push
cmc
pop
add
aaa
mov
loopne
dec
aaa
pop
mov
fisubl
fsubs
fwait
adc
sbb
mov
stos
pop
int3
stc
inc
jno
jns
pop
icebp
pusha
sbb
aad
mov
call
lods
repnz
cmpsb
fstpt
mov
or
ss
pop
pop
add
jb
push
mov
xlat
xchg
jo
fsubs
lods
lahf
fildl
add
inc
push
add
jb
call
sub
and
dec
test
out
psubsw
pushf
ds
cmp
fildll
popf
lods
sbb
cli
cmpsl
dec
in
and
fisubrl
pop
push
pop
dec
xor
mov
ficoms
sub
pop
cli
or
inc
xchg
xchg
push
adc
dec
mov
dec
idivb
test
mov
das
xor
sub
cmpsl
xchg
adc
stos
or
push
jecxz
cmpsb
jg
mov
adc
sub
lods
adc
inc
pop
je
sub
aas
xchg
lods
lods
imul
ljmp
fnsave
cmp
scas
pop
movsl
gs
fadds
inc
jne
enter
pop
add
fdivrl
xchg
mov
inc
mov
push
pushf
cmc
ret
push
imul
cmp
adc
insl
pop
lahf
pop
in
xchg
jecxz
leave
xchg
lret
nop
jno
insl
rorl
in
les
push
lea
mov
jae
push
push
push
fnstsw
inc
pop
pop
and
sbb
dec
or
mov
shrb
out
repnz
rclb
xor
out
scas
mov
mov
mov
int
cmpsl
bound
jno
cli
xor
xor
and
mov
jle
jb
mov
xor
loope
push
fisubs
cmp
jl
movsl
inc
sub
push
cmp
inc
dec
or
or
shll
inc
pop
or
or
call
das
dec
subb
cmp
sti
test
or
outsb
lock
adc
bnd
cmpb
mov
outsl
icebp
lock
mov
test
push
sub
pushf
popf
loop
xchg
leave
mov
popa
mov
dec
pop
jnp
mov
std
sbb
jns
add
sahf
loop
sbb
xor
xchg
lock
pop
sub
js
jb
sub
push
in
mov
in
or
push
and
popa
lds
lods
hlt
adc
mov
cmpsl
sahf
sti
or
cmp
ss
in
cmp
arpl
ds
pop
movsl
cmp
popf
jb
add
aam
mov
and
mov
and
add
mov
push
or
scas
ds
inc
repz
sti
fisubl
add
cli
xor
adc
and
aad
dec
add
sbb
stos
ss
shlb
sub
in
and
movsb
insl
sbb
mov
xor
aam
mov
xchg
mov
imul
cmp
push
push
fs
xchg
insb
imul
pop
xorl
lret
sub
or
adc
pop
pandn
in
sbb
rcll
push
dec
pop
aaa
mov
andl
test
loopne
std
js
adc
mov
sbb
mov
rcrl
inc
push
ljmp
xor
pop
lret
or
sub
xchg
jp
in
ficompl
dec
ljmp
ss
and
int
testl
mov
mov
or
roll
negb
cltd
mov
iret
fcompl
aad
mov
add
out
test
mov
xchg
aas
shlb
ficoml
and
int
jnp
mov
add
fwait
aad
jo
arpl
jno
imul
push
mov
jo
pop
jo
test
movsb
dec
in
daa
inc
cld
and
ds
inc
push
mov
cmp
daa
xchg
pop
mov
dec
cmp
lahf
incl
push
xchg
lods
fldt
lds
addr16
dec
cld
fstpt
mov
es
xchg
push
and
lret
pusha
jmp
sti
mov
lods
sbb
imul
xchg
inc
and
fists
stos
dec
ficoms
repz
add
mov
and
dec
insb
cmpsb
push
jge
enter
mov
pop
arpl
xchg
and
sbb
jo
fiaddl
cmp
cmp
sbb
sub
fnsave
add
xchg
fxch
in
mov
test
ds
mov
es
add
push
dec
fldl
pop
jne
sub
repz
stc
dec
jp
nop
inc
sahf
push
lods
nop
mov
js
fbstp
in
popa
imul
inc
out
pop
jbe
xchg
fsts
cs
dec
adcb
push
outsb
or
lds
repz
inc
scas
aad
loop
sub
sub
lret
andb
mov
ret
movsb
mov
and
sub
jo
xor
test
adc
test
mov
mov
in
dec
or
sbb
fcmovne
cs
ljmp
cmpsb
or
mov
cmpsb
lret
add
mov
insl
cmc
dec
insl
xchg
jae
shlb
sub
and
dec
stos
inc
mov
stos
pop
mov
pop
icebp
loopne
push
push
inc
rorl
lock
stc
popf
bound
fistps
test
mov
push
mov
bound
mov
mov
js
cmpsl
gs
scas
push
fmull
sub
clc
mov
jge
fdivrs
mov
inc
aam
faddl
ss
sbb
sbb
mov
push
das
fildl
sub
in
cmp
mov
ds
ret
pusha
shll
lret
loop
push
leave
xchg
push
mov
ljmp
mov
mov
movsb
add
mov
roll
sub
scas
push
in
fildll
pusha
std
push
cli
xchg
mov
out
int
popf
lcall
xor
fbld
iret
sbb
lret
bound
adc
cwtl
push
and
add
mov
addr16
pushf
pop
push
push
adc
mov
mov
lret
jb
mov
lret
sub
enter
das
pop
ss
inc
in
jecxz
add
mov
jb
or
add
fistpll
lock
out
cmpsb
xor
sahf
scas
std
inc
sbb
and
fbld
jp
out
clc
dec
pushf
xchg
lds
jbe
jb
cwtl
and
out
jne
rcrl
mov
mov
pop
dec
mov
fisubrs
shl
xor
and
inc
sbb
test
xchg
pop
les
sbb
out
mov
cmpsb
inc
xchg
ja
insl
or
lods
popa
dec
mov
scas
jb
hlt
les
subl
lea
pop
loopne
dec
bound
inc
sub
imul
push
test
sar
mov
mov
ds
sub
rol
xor
loope
das
lods
push
sbbl
gs
addl
loope
push
fwait
sbb
mov
clc
stos
adc
inc
sbb
nop
sub
dec
jl
lcall
in
in
sbb
repz
mov
test
stos
add
movsb
sbb
je
popaw
xchg
stos
sbb
xchg
js
inc
mov
cmp
subl
xor
jbe
cmpsl
cs
daa
shll
add
push
cwtl
lods
adc
notl
xchg
jge
mov
sbb
mov
fdiv
sbb
mov
push
js
mov
or
cli
mulb
sbbb
cmp
push
inc
add
pop
push
out
dec
xchg
dec
cmp
ljmp
cmp
push
ftst
push
xchg
dec
fs
out
xorl
pop
ljmp
pop
and
mov
mov
xchg
sbbl
dec
push
rcrl
jg
ficoms
shr
inc
pop
add
inc
ret
icebp
pop
push
sub
das
jl
test
outsl
dec
mov
sbb
xchg
loop
adc
lea
js
lods
cmp
xchg
pop
inc
sub
sub
dec
pop
out
mov
test
out
jg
leave
and
xor
in
popa
outsb
lret
or
inc
mov
pushf
xlat
ss
mov
repz
jnp
enter
and
adc
jp
dec
cmp
mov
jg
ljmp
int
inc
mov
and
std
mov
cmpl
scas
pop
or
insb
gs
xor
and
popf
pop
and
call
and
popa
test
movsb
adc
stc
xchg
ljmp
pop
jge
jge
or
inc
jns
xlat
test
jecxz
pop
cmp
mov
ljmp
mov
jg
fwait
xchg
push
repz
jo
xor
mov
fwait
mov
jnp
mov
push
push
decb
in
lock
or
and
mov
or
xchg
pop
mov
int3
ficomps
jbe
mov
rclb
jno
mov
cmp
out
jecxz
mov
stc
mov
push
ss
sub
mov
pop
jo
or
mov
xchg
mov
xchg
idiv
dec
xor
or
shll
loope
xor
inc
in
test
jno
or
jae
add
and
dec
xchg
movb
inc
cmp
xchg
pop
subl
lds
and
cmp
addl
jmp
pop
add
inc
push
in
cmp
sub
fwait
int
icebp
pop
jecxz
scas
daa
movsb
pop
stc
fisubs
pop
sbb
loop
in
lock
mov
xchg
fisubs
pop
cwtl
or
push
lcall
or
add
or
pop
repnz
sbb
xchg
mov
push
lods
icebp
in
inc
inc
xor
push
mov
ljmp
aas
imul
and
inc
call
push
dec
and
pop
inc
pop
mov
xor
and
mov
and
push
xlat
cmp
jp
push
mov
inc
xchg
xor
xchg
fiaddl
dec
add
adc
xor
pop
push
jg
loope
sbb
lods
mov
xchg
ja
sarb
sbb
adcl
pop
fstp
jb
pop
and
xchg
ret
daa
cwtl
lea
stos
fistpll
leave
lods
fwait
shl
fidivl
test
pop
push
add
imul
out
adc
pop
cmp
xor
popa
sbb
shll
push
add
std
insl
lret
rcrb
jl
inc
call
sub
pusha
lds
mov
rcr
cs
mov
lret
cmp
push
add
nop
dec
inc
or
and
sbb
xchg
cld
jl
cld
rol
jmp
ret
mov
aad
js
addb
jns
dec
stos
scas
icebp
sub
aad
stc
inc
push
xchg
movsl
cmp
divl
js
iret
push
add
out
lret
fstpl
loope
inc
jge
mov
ret
mov
dec
rorl
in
insb
movl
mov
idivl
stos
aaa
push
es
test
xor
sbb
and
pop
dec
hlt
cmc
lret
cmp
mov
sbb
fmull
rclb
inc
and
mov
jno
sbb
xor
jl
shrl
mov
inc
cmp
imul
xchg
sub
push
xorb
inc
out
out
pop
sbb
sub
xor
loope
sbb
or
adcl
mov
pop
xor
enter
scas
lods
out
adc
aas
mov
lock
jne
xor
test
push
push
cmpsb
daa
inc
mov
pop
inc
and
ss
bndldx
mov
out
es
cmp
add
cmc
mov
sti
xor
lea
mov
mov
jl
bound
xchg
jp
sbbb
lahf
dec
adc
ror
scas
push
sbb
mov
pop
cmp
and
mov
xchg
in
mov
mov
loope
jns
nop
lcall
xor
mov
jns
inc
pop
jae
insb
popf
ret
ja
sub
negb
push
cwtl
cmp
pushf
sub
test
sbb
add
mov
test
add
mov
loop
adc
jl
push
xor
push
aad
sbb
inc
test
or
loop
call
test
mov
mov
nop
inc
and
ret
dec
xor
jecxz
lahf
jl
jle
dec
mov
clc
out
std
or
xchg
addl
repz
mov
adc
orl
shr
push
movb
mov
pop
push
cld
jno
fists
jmp
jmp
xchg
ret
mov
mov
mov
scas
push
daa
test
jle
outsb
mov
xlat
int
imul
xchg
mov
test
adc
xlat
mov
sbb
iret
fisubrs
adc
and
pop
jle
shll
call
xchg
callw
cmp
mov
mov
jae
outsl
je
lahf
movsl
add
dec
xchg
lods
and
mov
arpl
shll
jmp
fnstsw
jecxz
mov
gs
mov
mov
and
shl
dec
aam
loopne
mov
adc
and
in
cmc
nop
scas
enter
pop
mov
push
aas
mov
aad
pop
mov
mov
fcoms
jmp
and
and
sub
loope
jns
fidivl
dec
jge
icebp
ret
inc
mov
fmull
pushf
pusha
mov
xor
mov
xor
nop
mov
mov
rclb
fnstsw
sub
sarb
into
daa
mov
test
shlb
aam
test
mov
pop
mov
sbb
mov
mov
filds
movsl
js
dec
mov
push
aad
mov
adc
pushf
mov
loop
xor
or
adc
mov
jae
and
repnz
cld
lds
rcrl
jge
lret
xor
and
setb
mov
aad
or
test
nop
ljmp
ret
jb
jl
xchg
ja
or
pop
sub
dec
das
cli
and
pop
adc
push
xor
bound
insl
std
aam
jmp
xor
xchg
sub
aad
xlat
nop
mov
les
rolb
fcmovne
cltd
push
andb
in
jge
jae
mov
cmp
cmpsl
sbb
ss
enter
dec
dec
mov
cmp
add
pop
rclb
xchg
cmp
mov
js
jmp
push
inc
movsb
andb
shrl
pushf
stc
nop
andl
sub
push
xlat
sbb
mov
mov
movsb
inc
inc
push
andb
cmpsl
sahf
jmp
push
xchg
stos
data16
push
sub
mov
call
jge
cwtl
aam
sbb
mov
lods
ret
pop
stos
ja
imul
test
stos
nop
jae
cmp
into
inc
push
loopne
push
mov
dec
sub
jns
mov
ficompl
ss
xchg
jbe
jge
add
jne
fimull
xor
mov
call
lods
mov
lds
shr
daa
ds
xchg
xor
fs
lock
adc
mov
js
mov
stos
push
fidivs
adc
and
push
dec
inc
pop
int3
sarl
or
push
idivb
repnz
xchg
xor
xor
sub
adc
test
cld
rcrl
push
in
pop
xor
push
hlt
sub
sub
xchg
jecxz
js
lcall
cmp
cmp
sti
lods
xlat
ljmp
cltd
nop
xchg
int
aad
fistl
jbe
sahf
push
mov
lds
sti
add
cs
push
pop
mov
jnp
dec
in
add
push
push
aaa
jp
sarb
movsb
addr16
dec
mov
push
stc
pop
ljmp
xor
imul
mov
sub
outsl
scas
xor
pusha
dec
fs
xchg
js
or
stc
shlb
mov
mov
in
jg
mov
mov
xchg
sbb
rcl
aam
pop
repnz
mov
popa
xor
outsb
cmc
enter
xchg
daa
and
cmp
dec
mov
or
lea
icebp
in
roll
cmp
adc
push
clc
sub
pop
push
loopne
xor
pop
movsl
xor
imul
cmp
push
lods
pop
sarl
lods
and
xlat
xchg
nop
push
das
sbb
cmpsl
aam
pcmpgtb
psrld
pop
cmp
and
or
hlt
mov
jns
cmp
jne
les
mov
test
mov
push
sbb
push
xchg
mov
cmp
bound
inc
pop
inc
fnsave
inc
js
pusha
xlat
cmpsl
outsb
xchg
push
mov
adcl
sbb
xor
cmp
sbb
cmp
mov
add
jge
mov
bswap
rolb
mov
xchg
push
cli
imul
xchg
andl
jp
add
cwtl
inc
cmp
pop
into
pop
push
mov
mov
adc
dec
repz
mov
insb
imul
xor
inc
push
sahf
dec
ficoml
xchg
cmpsb
add
es
cld
adc
lods
dec
leave
dec
loop
lahf
pop
xchg
fcompl
nop
jmp
rolb
lret
push
addb
mov
mov
lcall
icebp
scas
or
pop
sub
xchg
cmpsl
lods
and
or
push
mov
insl
mov
sbb
out
sub
mov
iret
push
jne
sahf
mov
mov
xor
xchg
test
mov
std
xchg
popf
mov
pop
pop
sbb
jne
mov
fwait
pushl
clc
or
scas
push
icebp
pop
clc
add
orb
ret
cmp
dec
mov
cld
insl
sub
xor
adc
ret
dec
pop
vpaddq
add
int
push
cwtl
outsl
sbb
filds
loopne
mov
jno
inc
xchg
and
mov
xchg
lcall
bound
outsl
scas
pop
outsb
hlt
or
and
gs
ss
inc
mov
jne
dec
jb
aad
cltd
pop
mov
cmp
sbb
roll
std
adc
test
and
dec
mov
inc
aam
es
cwtl
add
mov
leave
notb
xor
arpl
aaa
inc
add
xlat
mov
cmc
jb
leave
fstl
clc
popf
xchg
in
jge
jle
xchg
add
mov
add
js
xor
pushf
and
adc
into
dec
cmp
clc
negl
pop
jl
scas
daa
sbb
popl
rorb
mov
sub
add
outsb
or
movsl
sbb
inc
int3
sbb
ljmp
sub
mov
in
mov
repnz
cmp
mov
xorl
pop
into
ret
cmp
cmp
mov
adc
cmp
or
mov
arpl
mov
test
mov
dec
push
cwtl
lds
xchg
out
pop
mov
mov
xor
sahf
pushf
dec
cmp
imul
cli
aas
pop
mov
pushf
es
and
lock
jo
xorb
lcall
jbe
or
cmp
outsl
lahf
daa
mov
dec
push
xor
pop
mov
lods
jns
in
xchg
aad
inc
je
sub
ss
rcll
sbb
das
std
lds
test
mov
pop
lds
lds
mov
push
ss
mov
or
fsubrs
inc
cmpsb
add
adc
and
mov
test
into
cwtl
jmp
pusha
xchg
inc
fdivl
test
sahf
mov
enter
mov
jbe
cs
cmc
xor
add
cltd
dec
mov
fxch
popa
es
leave
cmp
mov
mov
cli
and
loope
push
mov
jne
xor
add
pop
jno
adc
ds
test
movsb
jno
sahf
jg
push
dec
and
mov
lds
in
loop
stos
xor
xchg
cmp
sub
scas
movl
sub
mov
inc
lret
insl
jg
mov
mov
mov
and
adc
mov
pop
inc
les
dec
jl
notb
call
adc
or
cmp
cltd
xor
popf
xchg
push
pop
adc
mov
xchg
sbb
dec
xchg
xchg
fldcw
adc
fcompp
mov
cmpsb
inc
inc
addl
xorb
inc
cmc
lahf
xchg
adc
pop
das
in
ret
leave
fcmovnb
pop
fldenv
insl
mov
movsl
jle
cmp
jmp
jmp
inc
adc
loop
mov
xchg
enter
shll
jp
fwait
cmp
mov
dec
adc
jmp
stos
out
mov
xchg
adc
add
push
andl
mov
and
adc
sbb
pop
fsubrp
pop
outsl
int3
int3
rolb
inc
add
jge
or
or
aam
popa
iret
cmc
popf
out
daa
pop
frstpm(287
in
pop
into
mov
arpl
xchg
xor
cli
ret
shlb
adc
arpl
testb
add
inc
and
lea
mov
pop
mov
sub
sbbl
iret
stos
mov
push
in
or
stos
into
cmp
mov
push
bound
or
mov
clc
iret
xchg
sub
lods
es
ja
xchg
out
pop
cmpsb
jl
mov
lods
cld
es
jg
mov
popf
pop
movsb
inc
icebp
dec
push
push
and
pop
rcrb
rol
or
outsl
out
je
lcall
pop
aaa
adc
inc
jecxz
sub
mov
gs
push
lcall
leave
test
mov
out
dec
adc
out
mov
push
or
jmp
mov
mov
inc
rclb
xlat
push
xchg
ljmp
sub
movsl
pop
ficompl
fistpl
fstps
xchg
cmpsb
mov
punpckhbw
cmc
pushf
imul
lods
pop
and
mov
adcl
push
nop
test
add
jmp
dec
mov
shlb
dec
or
dec
imul
loope
adc
lea
mov
mov
push
lahf
and
adcb
sbb
adc
iret
sub
push
je
mov
loope
nop
lods
xor
mov
or
imul
sahf
sub
mov
jne
pop
push
fs
pop
subl
add
inc
mov
rcrl
in
and
push
dec
leave
xchg
negl
jo
push
gs
icebp
test
sub
sbb
loope
test
dec
cli
mov
js
or
jg
adc
adc
push
sti
arpl
xchg
xchg
mov
pop
ja
sub
sbb
test
mov
xlat
mov
dec
inc
es
xorl
roll
adc
mov
adc
and
insb
and
pop
dec
jae
push
fildl
sbb
addr16
lret
inc
out
test
shlb
mov
cmp
sub
fcmovbe
decl
jae
sub
ror
movsl
xchg
aam
xor
and
lods
popa
vsubsd
xchg
orb
aad
pop
cmp
repnz
fimull
mov
jo
addr16
sbb
cmp
cmc
add
push
jle
adc
popa
loope
push
aad
or
mov
mov
pop
adc
cli
cmpsb
cmc
ljmp
stos
jmp
add
sbb
sub
dec
gs
and
in
mov
jge
daa
xchg
fucomip
pop
mov
sub
xor
jns
mov
mov
ficomps
cmp
sub
jae
add
loope
xchg
lds
mov
adc
divl
push
scas
popa
test
aaa
mov
pop
shl
mov
xor
jp
jp
push
mov
lock
out
imul
mov
cs
fsubp
ss
sub
stc
rcrb
insl
pop
hlt
data16
push
xchg
rol
xchg
sub
fisttps
or
mov
scas
cmp
sbb
adc
fbstp
adc
mov
jg
movsl
std
mov
aad
lret
les
movsb
fimuls
ja
mov
or
lret
sahf
mov
jg
push
fwait
dec
outsl
and
jbe
mov
cmp
xchg
dec
fsubr
icebp
push
sti
inc
xchg
nop
xchg
bound
xchg
push
mov
sub
das
std
pop
aaa
xchg
or
stos
ja
sti
sbb
hlt
jge
das
arpl
jmp
mov
xchg
rclb
lcall
daa
into
in
sub
xor
shrl
lods
xchg
push
icebp
sub
inc
dec
pop
sub
mov
or
stos
sbb
sub
shll
xchg
jp
lods
sarl
xor
dec
dec
neg
shl
cmp
aaa
cmc
sub
call
add
cs
dec
dec
cmpsl
cmp
mov
lods
or
xlat
mov
lret
xor
mov
mov
sti
das
dec
stc
mov
jle
popa
mov
push
js
jns
cmp
or
sub
scas
rcpps
cmp
andl
dec
dec
nop
jle
mov
in
out
aas
pushf
outsb
mov
mov
xor
mov
test
add
mov
mov
adc
lea
roll
adc
xchg
mov
xchg
dec
and
dec
mov
ja
add
popa
xor
push
sbb
xchg
fdivs
mul
push
cmp
scas
xor
int
push
push
jbe
sbb
orl
lock
in
jmp
pop
mov
adc
movsl
pop
push
iret
loop
fnstenv
or
outsl
js
repnz
adc
rcll
mov
push
cvttps2pi
not
jae
pop
testl
jno
scas
jmp
aaa
cmpsb
cli
fwait
pop
stos
push
pop
aaa
adc
or
jg
mov
inc
fnstsw
push
nop
fnstenv
jecxz
push
jb
xor
pop
cmp
pop
movsl
push
lret
mov
cmp
mov
jnp
inc
pop
and
and
out
add
loopne
test
sbb
inc
jno
mov
in
push
pop
jle
mov
sub
addb
jle
push
pop
jbe
out
or
inc
nop
xchg
movsl
decl
out
fwait
pop
into
mov
mov
aad
push
scas
out
xor
sbb
insl
data16
ja
cmp
xchg
cmp
cmp
adc
dec
jbe
adc
roll
add
aad
push
repnz
fs
pushf
andnps
push
clc
out
ja
adc
iret
add
push
mov
push
test
lret
popa
inc
aaa
dec
into
push
addr16
cltd
inc
stc
sub
sbb
hlt
xor
pop
pushf
shr
out
xor
lock
popl
leave
pop
inc
aad
pop
xchg
xchg
std
dec
jg
inc
lods
int
sub
inc
jmp
movl
pop
mov
das
test
sbb
mov
shlb
lea
fucomip
call
cmp
aam
mov
xchg
xor
jns
fistl
fsts
lcall
mov
out
or
inc
jns
std
push
mov
cmp
int
repnz
les
lods
ds
pop
mov
mov
subl
sahf
cwtl
and
and
cmpsb
mov
cld
testb
shrl
pushf
or
lods
sub
les
stc
cwtl
add
out
jmp
dec
outsl
imul
sub
stos
lcall
xor
cmc
popf
ret
add
xchg
and
shl
and
movsl
mov
out
pop
lret
pop
aas
pop
pop
ret
xor
mov
jl
xchg
fdivl
outsl
xchg
adc
out
mov
mov
std
cmc
fcoms
add
push
sarl
pusha
popa
out
and
sbb
adc
in
scas
sub
ss
add
adc
cmpsl
push
sarl
jl
cltd
inc
mov
mov
fldenv
inc
mov
xor
mov
enter
lret
bound
pop
jmp
cwtl
repnz
inc
cs
rorl
movsb
push
sub
loopne
fnstcw
fs
test
das
xchg
popa
mov
pop
addr16
test
stc
imul
lea
and
shlb
jecxz
ficompl
aaa
xlat
ja
lods
lock
stc
fdivrs
enter
xchg
out
xchg
push
pop
cmc
aaa
rclb
rorl
in
sub
mov
cmp
pop
adc
fiaddl
mov
repnz
xor
push
pop
test
mov
scas
mov
adc
ret
imul
fnsave
or
cwtl
jle
dec
sbb
or
das
add
jp
push
orb
popa
loope
and
sbb
ret
bound
enter
andb
dec
sbbb
push
pop
cli
into
cmp
data16
xchg
xchg
sbb
mov
jecxz
hlt
jno
sbb
cmp
addr16
sub
fwait
outsb
xchg
pop
ret
lahf
and
fwait
adc
mov
mov
pop
in
bnd
adc
fstp
pop
jecxz
cwtl
jle
and
push
out
adcb
sarl
mov
dec
in
dec
dec
shrl
fcmovnbe
lods
faddp
jmp
in
stc
add
sub
add
insb
pushf
fcoms
out
mov
aaa
push
adc
enter
fs
xor
mov
pop
mov
cwtl
or
ljmp
sbb
or
dec
roll
mov
int3
add
cmp
mov
dec
lods
ficoml
in
mov
mov
sbb
push
push
in
cltd
test
push
shlb
inc
dec
mov
stc
push
jg
mov
pop
dec
cmp
in
inc
out
loope
sbb
insl
js
mov
pop
sti
scas
dec
cmpsl
jne
mov
mov
pop
mov
and
daa
dec
popa
lods
fsts
cmp
dec
outsb
xor
sub
aam
mov
dec
insb
mov
sarb
fucomip
dec
and
xchg
int3
mov
decl
xchg
jns
fidivrs
mov
mov
pop
push
test
mov
inc
rorb
test
or
mov
or
sbb
xor
cmp
pushf
xor
mov
cmpsl
inc
je
out
mov
add
test
ficoml
push
lock
sbb
pop
out
jp
sub
or
in
inc
test
addr16
mov
xchg
ljmp
popa
sbb
or
leave
or
cmp
push
push
mov
add
inc
push
sub
cmpsb
mov
fadd
dec
xchg
into
jae
mov
xor
pop
ljmp
pusha
inc
sub
push
ds
into
dec
in
in
cwtl
in
push
sbb
ja
and
jne
repz
test
cltd
int3
mov
rcl
test
imul
lods
ljmp
int3
repnz
std
add
push
jae
add
pop
test
push
test
stos
dec
lret
mov
pop
pop
mov
out
int3
nop
push
scas
jnp
popa
iret
or
lock
test
fildll
inc
add
bswap
icebp
iret
sub
pop
lahf
pop
outsl
sub
aaa
popf
sbb
dec
lea
out
in
jmp
lea
push
add
cmpsl
shll
add
mov
xchg
xchg
daa
sub
shll
fldl
int3
bound
cmp
es
mov
mov
push
xor
jp
mov
push
sti
adc
add
int
xchg
ljmp
adc
or
push
outsl
cmpsl
divb
fdivl
or
mov
sbb
adc
std
cld
insb
pusha
mov
not
cltd
cmpsl
sub
mov
es
inc
push
arpl
sub
mov
lds
imul
loope
out
xchg
mov
inc
xlat
or
in
lds
cmpsb
xor
ljmp
arpl
rcrl
nop
adc
xchg
push
lcall
aad
and
adc
lahf
mov
je
push
xchg
xchg
xchg
xchg
cmp
xchg
mov
mov
repz
lret
xlat
lods
dec
addl
adc
xchg
jge
mov
jb
int3
jmp
lock
dec
push
leave
lcall
jne
dec
shrl
sub
rcrl
sbbl
jle
fisubrs
lods
add
mov
add
lea
pushf
leave
inc
push
hlt
addr16
mov
jp
enter
pop
cli
xchg
sub
int
ret
ret
es
das
inc
push
dec
jns
cmp
inc
dec
add
or
inc
mov
push
dec
dec
jl
dec
xchg
add
jp
xchg
inc
aaa
pop
in
xchg
icebp
xchg
into
lea
push
dec
add
xchg
cmp
out
dec
mov
inc
shll
stos
stc
mov
jns
jmp
xchg
mov
lret
dec
lods
lods
pushf
or
sub
cmp
mov
dec
lret
push
or
pop
int
stc
scas
in
push
test
jbe
cltd
aas
mov
dec
dec
aam
lret
mov
dec
out
scas
mov
hlt
mov
sub
mov
dec
arpl
mov
dec
lock
arpl
js
loope
mov
or
cmpl
aad
push
jo
or
push
jae
xor
pop
mov
jl
clc
cs
lods
comiss
out
mov
pop
mov
mov
stos
mov
gs
gs
cltd
jns
dec
push
lds
rorb
mov
pop
lcall
cmc
jg
fsubrl
std
sbb
cs
sbb
cwtl
push
mov
inc
test
pop
push
outsb
mov
insl
aas
ret
fsubl
sbb
inc
push
lods
sub
lret
or
shl
adc
mov
jne
wrmsr
sub
inc
push
push
or
bound
jp
pop
rorl
lods
push
push
mov
mov
and
loope
enter
cmp
fdivl
sub
xchg
imul
cmpsb
mov
fdiv
sahf
sbb
in
add
lahf
dec
fldt
inc
inc
sbb
sub
aaa
xor
cmpsl
fwait
dec
imul
mov
lds
fidivrl
mov
mov
pop
scas
mov
ljmp
dec
inc
xor
xor
data16
ja
xchg
leave
bound
adc
jno
dec
shll
loop
or
repnz
push
fstpl
sbb
push
cmc
loop
cmc
out
scas
jb
jecxz
lock
add
lea
and
xchg
getsec
cmpsb
push
inc
cmp
mov
pop
outsl
pop
xchg
mov
jns
leave
fs
pop
cltd
or
icebp
cmc
outsb
call
sbb
pop
xchg
push
addr16
push
cld
push
push
ds
addb
mov
bound
mov
test
in
fcoms
cmp
xor
orb
jne
mov
aam
sub
and
jno
push
inc
das
outsl
mov
ret
lods
sbb
push
shlb
outsl
and
xlat
or
cld
call
add
push
ret
mov
pop
imul
sub
stos
cmc
jle
jecxz
hlt
aam
les
je
ret
add
mov
sbb
cmpb
or
sbb
mov
xor
ret
xchg
les
daa
dec
push
mov
loop
push
rorb
call
loopne
push
ds
lcall
jle
pop
mov
lret
pop
mov
mov
or
lds
imul
dec
adc
in
and
gs
jg
inc
xchg
repnz
push
mov
movsb
add
xor
pop
outsl
jno
inc
push
mov
movsl
xor
hlt
fisubrs
daa
pop
sbb
scas
xor
adc
jbe
xchg
cs
aas
mov
je
cmp
push
mov
or
cmp
xchg
out
adc
mov
imul
mov
outsl
pushf
cltd
xlat
mov
repnz
outsb
into
or
hlt
sbb
inc
rclb
adc
sbbl
xchg
push
daa
lods
call
scas
imul
and
fistps
or
push
es
lods
inc
rcr
scas
jns
dec
xchg
xchg
mov
out
jmp
xlat
cmp
je
add
xchg
sbb
ds
insb
mov
mov
cmpsl
jno
es
inc
scas
cmp
cmc
dec
dec
jb
test
shl
fistl
cmpsl
adc
sub
aas
jo
push
sub
push
std
orl
mov
fbld
aam
sub
xchg
roll
pusha
mov
in
sbb
negl
test
out
fld
or
mov
addr16
jnp
daa
mov
adc
mov
xlat
sub
cs
movhlps
idivl
jae
enter
sub
fwait
dec
push
dec
sub
cmpsb
cmpsl
sub
shl
jecxz
iret
lods
mov
repz
push
add
fs
cmpb
sbb
negb
int3
pop
push
repnz
and
add
in
push
bound
dec
xchg
xchg
shl
icebp
movsb
mov
jecxz
add
rolb
and
cmpsb
jae
add
sbb
gs
adc
arpl
arpl
jo
ret
pop
fldl
mov
xor
xchg
je
pop
lods
ret
xchg
rcll
stc
ss
int3
xchg
cmp
loope
cmp
iret
fnstenv
out
pop
xor
lea
sub
fs
jo
push
adc
rcll
and
outsb
inc
ja
jno
jnp
or
lret
dec
sti
push
jmp
pop
imul
cltd
icebp
mov
fisttpl
outsb
xor
dec
daa
icebp
cwtl
dec
cwtl
daa
pop
loop
int
orb
xchg
ficomps
lock
lds
push
outsl
mov
jl
jae
mull
add
sub
jl
pop
mov
push
and
xchg
mov
pop
xor
mov
jecxz
mov
ficoml
sbb
mov
out
jno
xchg
jbe
add
inc
hlt
imull
fs
cmpl
aaa
lea
mov
call
pop
rcr
sbb
jge
cmp
jnp
jl
lcall
frstor
mov
roll
xor
enter
push
dec
fnstenv
in
sub
inc
sti
jl
mov
pop
scas
sbb
ljmp
push
mov
mov
mov
lods
or
lds
int
jb
push
ljmp
lcall
lods
fsubrl
aad
dec
imulb
dec
les
or
mov
adc
jns
data16
inc
cwtl
test
es
fsts
out
std
call
stos
outsb
sub
test
ss
mov
aaa
adc
es
es
mov
xchg
pushf
movsb
jmp
xor
clc
enter
mov
outsl
int
mov
add
outsb
xor
ss
pop
ret
pop
mov
or
popa
popf
pop
xor
xchg
testl
or
sbb
sub
std
enter
mov
dec
int3
xchg
push
clc
shll
test
mov
dec
and
xchg
data16
mov
jbe
xorb
lods
lcall
ret
jmp
shll
mov
inc
sbb
out
stos
mov
pop
in
gs
pop
push
dec
insl
lods
sbb
je
test
scas
mov
fdivl
jle
jae
ds
cmp
adc
aad
das
push
add
sbbb
shrl
dec
adc
push
adc
inc
cld
sti
mov
push
lret
and
dec
add
inc
adc
mov
inc
fwait
cmp
xor
dec
xchg
ret
ja
pop
xchg
mov
jae
rcrb
cmp
cmpsb
add
xlat
fildll
loopne
in
add
test
jge
dec
dec
jno
icebp
aad
fisttpl
pop
sar
sti
scas
adc
add
or
scas
pop
sub
xor
push
fwait
int
fadd
fs
lds
jno
push
mov
or
xor
clc
test
imul
push
and
add
lcall
aad
sbb
movb
xor
cmp
shll
pop
jmp
repnz
ret
jo
fdivrs
adc
pusha
ds
pop
add
sub
cs
mov
mov
out
push
ret
out
and
out
or
popf
lret
mov
sbb
mov
lret
sbb
sub
and
pop
jmp
or
ljmp
fcoms
aaa
stos
mov
clc
xorl
int3
fnstenv
add
mov
cli
cmp
xor
loope
fmull
loope
mov
data16
test
xchg
cwtl
pop
fwait
xchg
cmp
out
in
bound
lret
sbb
outsl
into
mov
fwait
sbb
out
or
dec
and
sub
pop
mov
das
mov
imul
xlat
push
add
xchg
fdivl
push
or
in
outsl
fsubr
push
test
add
and
push
sub
test
add
push
idivb
mov
xor
hlt
jge
push
lds
mov
sub
sahf
cmp
jg
std
push
out
pmulhw
push
jbe
mov
sub
nop
sbb
movsl
mov
sbb
sub
add
xchg
arpl
jae
inc
pop
int3
xor
test
add
jb
ficompl
mov
sti
xor
cmpsb
scas
cld
testb
mov
cmp
mov
push
add
xchg
pop
pop
inc
inc
js
xlat
sahf
dec
out
xchg
bound
in
mov
dec
inc
and
outsb
xor
mov
pop
cmpsl
in
test
jp
add
or
xchg
pop
pop
mov
mov
push
mov
stos
sti
cltd
sbb
sub
jp
xchg
iret
or
cld
or
pop
lahf
ljmp
inc
xor
out
rcrl
jmp
sub
pop
lahf
cmp
xchg
mov
mov
cmp
push
addr16
mov
les
adc
in
xchg
popf
test
fistpll
jl
or
push
in
inc
cmpl
call
movsb
pop
shlb
dec
cli
aam
iret
xor
lret
cmp
out
hlt
xor
pop
xchg
sbb
leave
testb
stos
push
sub
lock
and
cmp
mov
ror
imull
bound
pop
inc
mov
mov
test
les
push
sbb
loop
cmp
jno
mov
test
cmp
fcmovbe
je
fisubl
sub
dec
popa
mov
in
scas
aaa
adc
pop
dec
mov
ja
rcrb
mov
pop
sbb
xchg
mov
in
or
mov
add
mov
das
lcall
sub
xchg
arpl
leave
repz
es
cmpsb
jg
cwtl
adc
inc
push
cli
mov
test
dec
sub
add
adc
mov
jo
sti
fmuls
adc
add
fcmovnu
pop
aam
push
pop
fstl
ljmp
push
push
pop
sub
push
cmp
fmulp
cmp
xchg
xchg
daa
xor
aad
in
sbb
sbb
sub
pop
dec
xlat
shr
xchg
inc
xchg
hlt
data16
gs
pop
dec
add
cmp
jnp
repz
pop
sbb
cmpsl
cmpb
dec
push
or
iret
sub
jg
inc
popf
jnp
push
inc
push
sti
fidivs
mov
hlt
xor
loop
adc
rcl
divb
and
mov
sbb
jnp
sbb
in
scas
mov
daa
outsb
jle
push
das
adc
adc
pop
pop
mov
scas
shlb
imul
pop
mov
xor
outsb
mov
jns
sub
or
in
mov
arpl
push
jo
cmp
addr16
mov
aam
pop
in
add
ret
fdivl
pop
add
add
rorl
xchg
add
fidivl
sub
aaa
fistps
fistps
sub
mov
push
or
inc
mov
xchg
and
adc
add
shlb
xchg
mov
ret
inc
adc
pop
xchg
lahf
sarl
mov
iret
xor
adc
cmp
and
xchg
dec
sub
into
and
push
pop
das
js
dec
pop
loopne
add
jmp
ds
jg,pt
xor
add
inc
lods
mov
push
dec
or
pop
cmp
mov
pop
cmp
ja
push
sbb
popa
cmp
outsb
adc
dec
lret
push
mov
stc
push
data16
adc
sti
inc
dec
push
dec
cmp
fcomi
push
sub
pop
add
cld
iret
dec
jl
fldenv
ret
fisubrl
cmpsl
mov
pop
aas
loope
enter
mov
and
dec
mov
imul
lcall
jecxz
or
and
clc
clc
inc
xchg
dec
cld
hlt
mov
push
out
stos
loop
enter
stc
xchg
lea
xor
fwait
xchg
xor
jb
sbb
rclb
sbb
xor
addr16
or
lds
in
inc
jge
enter
xchg
cmp
or
fwait
nop
call
dec
testl
jae
or
in
fs
jne
and
dec
das
js
imul
cmpsl
sub
jge
aas
test
cmp
push
inc
and
jmp
cmp
mov
mov
fsubs
mov
arpl
clc
lods
jp
aas
mov
mov
cmp
pusha
mov
scas
sbb
pop
jae
adc
xor
mov
and
ret
fldl
cwtl
mov
test
jb
mov
rcll
jbe
xchg
js
repz
pop
xchg
add
jnp
lds
cmp
sbb
fs
fcompl
adc
and
in
loopne
fsubs
cld
gs
sbb
adc
bound
in
dec
in
push
xor
loope
jns
aam
js
aad
repz
mov
mov
xchg
mov
xchg
outsl
or
sub
pop
cmp
out
fistl
add
and
out
popa
push
and
insb
roll
fs
test
push
hlt
ror
mov
xor
nop
or
sbb
mov
dec
xor
push
cld
cs
std
sub
sub
cmp
icebp
outsb
sbb
ljmp
nop
outsb
jge
lea
test
outsl
dec
test
cmp
xor
mov
pop
cmp
inc
in
jbe
pop
mov
jle
shl
jbe
insl
and
jnp
pushf
fistl
fistl
sarb
push
jp
lret
dec
test
adc
out
ds
loopne
push
pop
test
or
adc
cmpsb
shl
insl
stos
adc
icebp
cmpsb
cmpb
mov
lahf
gs
cmpsl
pop
sbb
jge
roll
or
inc
xchg
pop
xor
or
push
loop
test
inc
ljmp
in
dec
push
xchg
daa
xchg
mov
pop
ds
cmpsl
pop
dec
adc
or
ret
push
test
into
xor
mov
cmp
jns
test
ss
nop
push
add
popw
jno
mov
push
mov
mov
mov
jmp
mov
and
mov
xchg
fistps
cwtl
jmp
enter
xor
pop
repz
add
pop
pushf
cmc
sub
or
mov
daa
fidivrs
lahf
mov
imul
movb
stos
lods
adc
clc
aaa
xchg
loope
cs
mov
push
cltd
xlat
imul
and
aam
aaa
daa
mov
sub
cmpl
xchg
inc
mov
divl
xor
repz
scas
ss
push
sub
xor
mov
mov
inc
addl
pop
scas
cltd
adc
mov
dec
push
lret
push
xor
pusha
sub
cld
pop
iret
pop
lret
dec
popf
addr16
addr16
jae,pt
out
sub
or
pop
repnz
aaa
adc
pop
dec
data16
or
xor
inc
or
das
sbb
in
dec
std
mov
mov
test
gs
pop
fidivl
jmp
dec
xchg
loopne
icebp
in
ljmp
int3
sahf
das
xchg
lea
xor
push
or
cmpsl
jge
lahf
jecxz
mov
mov
dec
cmc
cmpsl
push
movsb
push
in
clc
xor
daa
cmc
pop
in
out
cmpsb
jmp
dec
mov
insl
rcrb
arpl
mov
imul
js
and
inc
pop
icebp
lahf
in
push
xor
sub
mov
popf
sbb
call
sbbl
in
jns
push
lahf
mov
in
enter
jmp
in
mov
pop
push
cmc
rcrb
sbb
aad
jns
scas
arpl
je
mov
or
rol
das
pop
out
add
lahf
lock
stos
or
add
cmpsb
pop
pop
push
inc
mov
scas
jl
xlat
cmpsl
addr16
mov
mov
sbb
das
inc
inc
dec
mov
push
test
push
iret
sub
xchg
jno
adc
or
in
les
stos
mov
and
push
mov
jbe
nop
mov
mov
mov
sti
cmp
out
inc
jmp
xchg
xchg
pop
cmp
cmp
and
sbb
add
int
mov
xchg
or
inc
jo
pop
xchg
push
pop
movb
sbb
popa
inc
movl
in
sub
xor
cmp
mov
aaa
push
andb
jbe
mov
adc
sarl
pop
sbb
push
push
loopne
shll
adc
xchg
adc
imul
aas
int3
repnz
adc
push
neg
fistpll
lcall
lcall
idiv
das
cmpsb
das
dec
jo
js
clc
push
push
in
insl
aaa
push
lock
dec
inc
rclb
or
mov
mov
adc
scas
ret
mov
jl
adc
add
mov
sbb
ret
out
sub
push
xor
pop
inc
push
mov
mov
dec
push
pusha
push
sbb
adc
int
in
sbbl
cs
orl
repnz
iret
cwtl
out
rcll
out
hlt
pop
and
adc
push
sarb
out
ficoml
cld
test
ret
aaa
mov
and
shrb
inc
in
xchg
lcall
lea
fsubr
push
adc
cmp
pop
jb
sub
jl
das
lret
bound
out
fwait
xchg
inc
add
lds
and
add
inc
lahf
and
or
sti
cmp
push
imul
lcall
loop
roll
inc
imul
pop
pusha
dec
testl
inc
insb
xor
in
xchg
inc
or
into
mov
lods
ret
cmp
add
icebp
fmuls
mov
ds
push
enter
lods
ret
push
jo
roll
fisubrs
cmp
mov
into
sbbl
and
ret
daa
mov
test
dec
push
sub
push
pop
js
lds
and
popf
adc
shrl
lahf
push
mov
mov
cli
inc
cmp
loop
imul
je
dec
inc
shlb
sbb
or
sub
mov
ljmp
dec
dec
stos
inc
jae
xchg
push
sti
dec
add
enter
inc
in
out
pop
aaa
fsubr
xor
or
fs
fisttpll
lcall
dec
jo
mov
dec
pop
popa
mov
mov
and
inc
lret
xlat
fwait
out
outsl
inc
out
jb
dec
mov
inc
dec
or
sub
mov
fmuls
adc
imul
and
ds
mov
push
mov
fbstp
pop
cmp
xor
sar
push
les
insb
lock
sub
xchg
filds
pop
jae
scas
jo
imull
sbb
dec
iret
pop
stc
stc
inc
hlt
lods
add
pop
test
shlb
mov
xor
movsl
adc
fsubrl
sbb
xor
mov
in
adc
scas
cwtl
or
cs
or
inc
add
and
rorb
mov
lock
xchg
adc
sahf
cmp
and
mov
test
or
pop
dec
out
aam
imul
imul
ret
shrl
in
or
idivb
scas
and
add
xor
sbb
mov
cli
cld
sbb
mov
dec
in
in
add
push
mov
cmp
sub
sbb
cmpsb
cmp
fwait
movsl
es
dec
test
fcoml
xchg
aas
ret
arpl
sbb
enter
cmp
icebp
and
rolb
add
mov
mov
dec
sti
enter
idivl
sub
push
mov
dec
mov
jmp
cs
int
jbe
cwtl
insl
loopne
xchg
xchg
and
xchg
repz
pop
test
nop
push
repnz
and
sbb
int
sub
loop
lcall
push
inc
adc
pop
mov
sbb
cmp
add
fwait
ja
cmc
ficoms
cmp
jbe
or
xor
push
cli
mov
je
das
dec
sti
mov
jns
mov
adc
and
sbb
movsb
outsl
and
shll
out
cwtl
aaa
xchg
insl
dec
xorb
aaa
pop
std
aad
add
xchg
fiaddl
outsl
lods
xor
jmp
std
cmc
mov
adc
and
jg
loopne
add
add
clc
sub
xlat
mov
cmc
push
or
xor
xchg
nop
mov
lcall
cmp
cmp
push
fsubrs
pop
and
jae
shr
mov
or
xor
jb
int
mov
bound
das
adc
inc
xchg
mov
stc
lret
outsb
int3
inc
aaa
pop
dec
loop
cmpsl
scas
fidivrs
test
xchg
hlt
mov
loop
adc
or
pop
fs
and
xor
cwtl
adc
xchg
repz
mov
clc
fsubr
sbb
mov
les
into
ret
push
xchg
jp
in
or
pop
pop
xchg
sbb
in
fisubrs
scas
pop
lds
dec
movsb
pop
ret
ds
shl
lahf
xchg
fiaddl
cmc
mov
sub
fwait
mov
mov
fimuls
adc
mov
pop
fistl
push
adc
aam
fdiv
imul
stos
lahf
mov
rol
shrb
lret
mov
lock
mov
and
pop
int
test
jle
scas
aas
xchg
dec
lods
rcl
dec
sbb
xlat
xlat
ja
cmc
bound
adc
push
insb
out
add
pop
out
jecxz
cmc
xor
mov
test
dec
in
or
out
sub
sbb
cmp
mov
dec
je
idivb
shl
mov
mov
ds
mov
jo
lahf
ret
mov
ljmp
daa
xor
push
lods
push
rcll
je
pop
imul
pop
cmp
jp
xchg
xlat
or
inc
sbb
notl
sub
dec
jnp
adc
int
aaa
xchg
nop
enter
cwtl
mov
push
cmc
cmp
imul
outsl
mov
mov
in
dec
mov
push
sbb
aas
pop
mov
cmpsl
mov
mov
shll
icebp
mov
sbb
rorl
out
mov
add
popa
mov
mov
inc
call
daa
insl
bound
subl
iretw
xchg
add
insb
scas
leave
call
inc
sub
lds
pop
out
mov
sbb
shrl
fstpl
ret
xlat
test
push
and
jnp
pop
mov
lret
ss
jno
cli
shr
movsb
fldcw
xchg
stos
lret
daa
mov
cld
call
adc
push
movsl
cmc
and
mov
push
mov
add
outsb
pushf
lods
fs
arpl
int
movsb
rorb
test
bound
or
iret
cli
std
lods
jns
sbb
lcall
fists
test
icebp
scas
mov
dec
int
rcll
sbb
sbb
mov
xchg
fisttps
gs
cmpsb
loope
add
push
inc
ljmp
mov
sahf
inc
sub
xchg
fistl
les
js
addr16
cmc
das
imul
cmpsb
dec
xchg
iret
out
mov
in
mov
mov
jb
sbb
jns
cwtl
mov
sub
mov
mov
cwtl
inc
jnp
or
pushf
mov
mov
ljmp
mov
cmp
xor
sbb
sub
loop
aad
out
push
dec
pusha
jae
fnstcw
loopne
mov
inc
inc
mov
xlat
cmc
test
sbb
xchg
sub
and
popa
mov
ret
loope
out
test
sub
xor
loopne
cmc
sub
inc
ret
jbe
ds
lods
out
test
mov
jne
sub
sbb
push
or
dec
push
fsubr
testb
sub
xor
mov
dec
lea
mov
call
es
pop
push
dec
and
xor
sub
mov
add
stc
jecxz
dec
mov
rclb
sbb
adc
xor
xchg
mov
cmp
aas
jecxz
out
stos
cmp
lock
nop
mov
cmp
stc
daa
daa
pushf
shlb
outsb
std
je
outsl
xor
outsl
sub
push
stos
jns
dec
fidivrs
push
sub
jbe
mov
flds
outsb
push
nop
and
les
int
std
pop
xor
into
into
jg
loop
rcl
pushf
imull
data16
clc
mov
and
inc
inc
mov
insl
daa
mov
cmc
das
mov
and
lahf
or
adc
inc
sbb
xchg
mov
and
loop
in
mov
out
xchg
dec
fidivs
or
mov
lret
add
data16
sub
insl
pushf
call
fiadds
sbb
adc
cmpsl
jle
es
repz
sti
sbb
aam
loop
shlb
in
cmpb
push
es
mov
mov
pop
movsl
mov
nop
dec
out
mov
jle
mov
sub
repz
sbb
ljmp
xlat
mov
cltd
fdivrs
xor
xchg
test
ds
mov
mov
ss
jl
daa
cvtps2pi
inc
lds
movsb
dec
add
jne
out
test
push
and
jp
mov
je
push
push
movsl
cmp
ja
jnp
mov
sahf
and
sub
rorb
pop
mov
je
and
jg
test
in
xchg
negl
pusha
adc
stos
or
insb
xchg
leave
call
adc
pushf
pop
sbb
fsubl
pop
xorb
daa
or
sub
mov
or
je
inc
jnp
or
cmc
rclb
jl
push
enter
ds
dec
mov
daa
jmp
sti
or
and
insb
int
xchg
jecxz
aaa
insb
mov
inc
iret
inc
jae
rcrb
xchg
pop
lret
pop
push
and
in
push
cmc
dec
mov
cmp
ret
push
jns
xor
test
into
and
std
cmp
movsb
loope
mov
and
pop
lock
cs
xor
clc
push
dec
ljmp
negl
insl
pop
add
sub
jne
inc
xchg
or
xchg
adc
inc
dec
dec
or
or
rcr
gs
and
outsl
fs
in
aad
std
inc
dec
jl
pusha
aaa
mov
lret
pop
pop
mov
test
jnp
nop
inc
fidivrl
and
pop
clc
or
sbb
punpckhbw
inc
cltd
dec
das
sbb
xchg
mov
push
outsl
add
icebp
push
test
xchg
adc
lea
xchg
and
add
jns
sbb
xor
in
les
and
cmpsl
inc
mov
je
mov
pushf
push
enter
lahf
dec
mov
dec
ret
push
push
sub
inc
sbb
mov
mov
cmpl
cmp
push
cmp
xor
mov
imul
xchg
lock
jg
jb
adcb
sarb
dec
inc
jo
pop
loop
jne
ja
inc
jae
mov
jno
pop
inc
mov
push
rcrl
int3
push
push
xor
jge
push
sbb
push
popa
mov
idiv
jo
add
dec
int3
rorb
nop
cmp
movsl
sub
xchg
mov
pusha
mov
mov
dec
sub
in
mov
pop
aam
daa
xlat
gs
jmp
add
cmp
scas
aaa
sti
push
sbbl
pop
jecxz
jge
and
cmpl
push
mov
call
adc
adc
jbe
ljmp
dec
scas
mov
push
out
inc
adc
daa
dec
test
fsts
xor
inc
lods
rcr
lea
xchg
int3
mov
push
repnz
cmp
lods
adc
sub
add
pop
pop
xchg
xadd
ljmp
push
js
hlt
sti
add
fcmovbe
rcll
dec
movsb
pop
rcl
sti
xor
pop
cld
jo
add
test
push
cmpsl
mov
xchg
push
add
inc
stos
repz
sub
mov
addb
insl
mov
inc
sbb
enter
mov
push
mov
mov
jl
data16
inc
sub
out
and
fidivrs
xchg
add
push
call
push
cli
xor
push
inc
cltd
or
pusha
fsts
movsb
mov
jp
hlt
leave
cli
mov
or
lahf
ret
mov
cli
xorb
xor
jle
fstpt
cmp
loope
and
scas
es
mov
pop
mov
xchg
sub
shrb
bound
js
loop
in
push
mov
mov
dec
push
sti
mov
iret
repnz
xor
sbb
xchg
mov
sbb
xchg
scas
jge
repnz
fmuls
icebp
es
cmc
fbstp
popf
jecxz
push
negb
and
inc
xchg
adc
daa
imulb
inc
jl
add
out
sub
imul
in
test
scas
pop
mov
push
mov
mov
jl
lods
dec
inc
pop
lret
jbe
xorb
push
inc
xor
pop
mov
cvtpi2ps
inc
shr
clc
mov
mov
aad
fcom
mov
xor
sub
shl
inc
lret
hlt
test
jns
add
mov
push
or
or
lods
mov
lret
inc
jo
jne
jo
lods
xor
aas
mov
cltd
test
push
mov
mov
pusha
out
dec
es
jbe
pop
mov
and
std
mov
mov
icebp
sbb
mov
cltd
inc
mov
popa
loop
js
out
sgdtl
xor
xor
in
iret
xor
sbb
das
and
xchg
inc
push
sbb
cmp
fwait
mov
rorb
xor
lods
pusha
aad
call
jb
and
pusha
sub
push
cmpsb
sti
int
sub
xchg
aad
pop
mov
or
cwtl
lret
fiadds
inc
pop
mov
mov
or
sub
pop
sarb
loope
pop
xor
cltd
add
out
mov
outsb
mov
jnp
cmp
adc
xchg
push
inc
mov
mov
out
xchg
aam
popf
push
les
jg
jge
xchg
mov
clc
xorb
cmp
les
xchg
or
inc
int
cmp
insl
cmp
ret
addr16
imul
movsb
xchg
out
out
in
test
pop
mov
mov
jle
aas
lret
xor
push
sbb
xor
xor
inc
test
mov
xchg
pusha
cld
dec
movsl
daa
xchg
adc
push
xchg
pop
push
js
lahf
jmp
gs
das
imul
mov
cmpxchg
fdivr
lods
clc
lret
xor
adc
or
push
and
xor
xchg
mov
pop
test
pushf
xchg
call
testl
testl
push
xchg
and
dec
mov
ret
es
mov
xchg
daa
scas
addl
jbe
add
inc
aad
jmp
push
ret
imul
or
insb
lods
and
jecxz
jo
push
push
movb
adc
insb
fnsave
loope
pusha
or
mov
pusha
mov
out
mov
nop
and
lcall
inc
call
jp
mov
in
and
xor
fisubrl
inc
xor
daa
out
xchg
dec
sbb
sub
mov
push
jmp
pop
pop
cmp
data16
xor
jb
sbb
ret
pop
jae
jbe
push
movsl
subb
sbb
or
sbb
pop
imul
xchg
sti
frstor
cmp
and
jmp
jg
lret
rclb
dec
dec
adc
adc
sub
clc
fsubrl
insl
inc
mov
in
mov
addr16
jmp
punpckhdq
push
xchg
and
lock
xchg
cpuid
add
pusha
push
into
rcl
outsb
xor
xchg
jle
pop
and
xor
pop
jo
cmc
outsb
xor
lods
cmp
dec
aas
push
jae
and
jecxz
lcall
ss
stc
verr
notb
cmpsb
mov
mov
pop
lea
test
cmp
fwait
pop
inc
and
cld
imul
cmpsl
or
pop
rcr
xchg
cmp
scas
insl
in
sub
adc
cs
push
add
dec
push
cld
popa
xchg
lods
dec
jle
rorb
and
adc
push
push
icebp
mov
jecxz
dec
xor
orb
cwtl
lret
outsl
fisubrs
aad
jns
push
lret
out
cmp
out
add
imul
insl
jne
call
cmp
sbb
arpl
and
outsb
imul
jo
and
mov
mov
rorl
xchg
mov
mov
cwtd
dec
mov
mov
push
lods
xor
adc
dec
dec
adc
push
mov
sub
sub
gs
push
mov
xor
adc
sub
cli
shr
les
aam
pop
das
aam
dec
lcall
sub
push
das
cwtl
xchg
insl
pop
aas
push
or
loop
and
pusha
and
jns
jg
xor
loop
fisubl
stc
fists
push
sqrtps
sbb
mov
jno
int3
sub
idivl
sbb
jnp
pop
test
adcb
xlat
cltd
or
cmpsl
xchg
out
arpl
mov
mov
dec
sbb
cmp
jmp
stos
lcall
sub
push
inc
rorl
mov
inc
add
adc
subl
inc
scas
nop
js
jne
lods
leave
sub
dec
sub
shr
leave
and
fld1
mov
ret
sti
mov
shr
pushw
mov
call
stc
mov
xor
mov
add
cwtl
dec
mov
add
add
mov
push
out
dec
xchg
jecxz
punpckldq
test
add
sti
cmp
dec
cmp
dec
pop
and
rol
fidivrs
add
cmp
inc
jbe
cs
lahf
or
adc
cmp
hlt
dec
push
add
sub
je
movsl
xchg
jp
push
pop
ret
mov
add
or
cmp
cmpsl
add
and
pop
cltd
lods
sub
sub
push
pop
das
sub
ds
notb
mov
gs
cmpsb
dec
sub
jl
and
negb
iret
and
sarl
pop
hlt
sub
sbb
push
std
loop
mov
push
inc
dec
les
xor
xchg
or
mov
bound
or
mov
lea
ds
and
aas
test
iret
lret
dec
test
mov
dec
mov
enter
mov
mov
int
jns
cmc
push
loopne
jae
mov
sub
add
test
js
rcll
cs
xchg
ja
cld
ret
adc
jmp
pop
or
rclb
pop
mov
popa
loope
xchg
cmp
ss
mov
sub
into
xor
outsb
mov
test
dec
cmpsl
add
mov
cmpsl
jl
push
pop
and
or
xchg
ror
mov
or
rclb
inc
or
in
orb
test
testl
dec
popa
xor
pusha
sbb
adc
popl
movl
push
sti
in
dec
cmpsb
fnstcw
cli
out
xor
push
adc
push
mov
loopne
cmpsl
sbb
fs
je
push
fisttpl
movsb
lret
xchg
mov
sti
loopne
dec
and
mov
mov
xchg
stc
leave
shlb
rol
mov
push
andb
jo
fisubrl
les
jne
hlt
std
mov
xchg
lock
push
cwtl
adc
in
sub
loope
fcomi
fs
in
sbb
stos
jl
cmovle
scas
jb
ret
jns
fnstenv
xchg
jg
gs
sbbl
push
cmpl
outsb
jb
std
sub
ja
mov
mov
adc
add
testl
imul
ds
daa
cmp
ljmp
pop
mov
jge
pop
lock
pop
add
mov
test
inc
pop
jl
sbb
les
xor
sbb
ret
sbb
js
push
scas
inc
inc
sbb
popf
sbb
ds
rcrb
pop
aas
mov
cmp
stos
je
xor
mov
add
nopl
insb
imul
std
cwtl
add
sbb
in
inc
inc
push
pop
fcomi
insb
dec
xor
ret
in
sahf
loope
dec
enter
pop
or
inc
push
mov
cmp
fstl
cmp
xlat
cmp
mov
fsub
cmc
fwait
jb
xchg
push
ss
sub
jb
push
add
mov
loop
popa
jne
mov
lock
mov
push
test
jecxz
and
pop
add
test
xor
imul
fs
dec
add
lahf
lods
adc
adc
lretw
cwtl
repz
pop
lcall
pop
add
mov
add
cwtl
mov
and
arpl
mov
jg
and
jmp
sti
cli
sub
sbb
paddsb
gs
leave
inc
in
add
out
aas
aam
jb
lock
out
jle
mov
sbb
pushl
mov
mov
pop
lret
inc
inc
sbb
jb
jg
jle
jbe
mov
and
push
and
cmpsl
mov
stc
cmp
push
mov
incb
dec
cltd
iret
jmp
and
imul
xor
aad
sub
inc
clc
mov
fistps
movsb
lahf
movsb
inc
and
cltd
xchg
cmpsb
xor
xchg
jo
cmp
stos
fld
jmp
sbb
rcll
mov
out
int3
orl
test
adc
gs
xchg
scas
test
mov
inc
adc
dec
push
js
sbb
fs
adcl
dec
enter
dec
mov
and
cmp
dec
dec
hlt
imull
inc
lahf
dec
jmp
pop
in
das
sub
repz
icebp
out
mov
clc
inc
inc
fs
flds
or
addr16
jmp
jno
push
es
imull
sarb
rcrb
or
int3
sbb
jae
insb
mov
and
dec
pop
fwait
or
or
mov
push
aaa
arpl
jecxz
or
and
dec
andl
loopne
mov
lea
push
dec
sub
inc
add
sar
inc
lods
adc
jle
sbb
push
les
xchg
js
adc
pop
xlat
jg
mov
pop
cmp
aaa
sarl
scas
out
inc
lcall
jne
inc
addr16
pusha
fdivrl
jge
int3
stos
add
into
fstpt
cwtl
clc
out
in
jae
fidivl
out
insb
lds
pop
ljmp
jge
ror
loopne
sbb
divb
fists
loope
sbb
xor
cmpsl
mov
insl
repz
pop
pop
cmc
push
mov
jl
sbb
cmp
push
popa
jp
add
out
into
fadds
stc
jmp
mov
ffree
add
adc
sahf
add
pusha
mov
daa
dec
mov
lods
sub
imul
dec
nop
push
fimull
or
lcall
mov
inc
sub
fldcw
pop
js
mov
mov
in
fsubl
pop
stos
mov
mov
rorl
call
loope
icebp
lds
stos
jo
outsb
pop
testb
fadds
mov
pop
lods
bound
jbe
shrl
sti
sti
arpl
xchg
imul
mov
into
push
lret
lods
bound
out
frstor
fs
loopne
xor
loopne
push
jg
out
mov
leave
fistps
cmp
iret
sbb
les
and
jbe
pop
or
cwtl
jae
jmp
ljmp
mov
and
xor
mov
lock
mov
or
cmp
adc
sbb
push
jl
add
add
adc
sub
gs
pushf
cltd
mov
jnp
pop
movsl
hlt
mov
xchg
jge
mov
in
lea
push
cs
add
cmp
test
jg
popa
push
mov
jno
jp
cmp
sbb
cmpsl
or
sub
loope
inc
mov
andl
mov
push
pop
mov
mov
mov
je
in
sbb
xor
mov
pop
int3
sbb
loope
inc
repnz
xor
dec
jl
push
xchg
sbb
in
push
enter
notb
jb
add
or
scas
clc
ja
jne
stos
cmp
mov
or
loopne
cmp
mov
into
rorl
mov
push
stc
cmp
add
fidivs
xor
xchg
es
stc
jno
cltd
xchg
mov
jno
rcrb
dec
ljmp
rcl
sbb
pop
mov
xor
pop
mov
or
jmp
jbe
cld
pushl
sbb
add
pop
jg
fwait
add
cmp
xchg
pushf
xor
mov
clc
cwtl
or
push
fs
mov
mov
clc
mov
or
ljmp
push
mov
gs
in
mov
cld
add
xor
stos
outsl
int3
mov
test
ret
insb
xor
ror
aam
inc
stc
andl
xchg
fdiv
and
pop
clc
dec
sub
roll
rolb
idivb
mov
sbb
and
pop
dec
dec
mov
push
fwait
pop
xchg
mov
outsl
nop
test
lock
cmpsl
mov
iret
adc
fidivs
push
addr16
jg
test
lret
jb
sahf
bound
dec
test
shrb
movsl
cmc
fstl
aam
push
imul
sti
jo
ss
jb
xor
sbb
ljmp
push
loop
xor
orb
dec
xchg
stos
cwtl
outsb
icebp
xchg
mov
push
and
xor
test
aad
ret
jae
inc
sarl
sub
sbb
pop
sub
inc
pop
mov
pop
lods
pop
scas
lock
push
cmp
pop
scas
out
lock
andb
frstor
sbb
and
push
movsl
test
mov
ret
mov
fildll
jbe
mov
jmp
cmc
out
pop
insb
push
push
sub
push
pop
ljmp
mov
lret
or
and
cmpsb
pop
sbb
outsb
xor
mov
out
add
pop
xchg
repnz
outsb
test
cld
mov
cmc
mov
call
xchg
ds
shrb
dec
int3
sub
sbb
mov
lahf
fcomp
add
shlb
test
xor
out
mov
dec
repz
mov
enter
aad
outsb
stos
dec
xchg
hlt
dec
lahf
push
aaa
call
jp
push
xchg
ja
add
daa
cmp
je
negl
inc
sbb
pop
mov
mov
sbb
rorb
xchg
cwtl
bound
scas
dec
xchg
stc
cmpsb
stos
cmp
pop
xor
xor
popa
cmpxchg
xchg
sahf
mov
sbb
and
mov
jns
int
ja
pop
pop
pop
cmp
ds
test
sbb
stos
sub
loopne
mov
aam
stos
push
xchg
dec
jae
imul
fxch
sub
mov
mov
pushf
mov
sbb
cmp
dec
das
mov
dec
popa
cmp
ficoml
rolb
sbbl
jp
insb
lret
or
xor
and
inc
add
jbe
lods
ret
lahf
mov
and
mov
sub
jae
mov
into
leave
add
iret
xchg
jb
adc
push
dec
mov
mov
mov
mov
je
outsb
pop
mov
pop
pop
cwtl
ja
aam
fld
leave
inc
scas
sbb
es
mov
ficoms
push
mov
popa
sbb
pop
cmp
jmp
je
imul
sub
sub
dec
xchg
stc
sub
mov
jg
lods
aas
pushf
jo
jp
aaa
and
cmp
adc
and
push
jmp
fwait
xchg
jnp
xchg
test
lods
jae
pop
xchg
mov
iret
and
xchg
inc
call
push
test
fwait
ret
out
jns
andl
fnstsw
enter
push
lea
mov
cli
es
fndisi(8087
adcb
pop
push
pop
mov
jp
cmp
inc
xchg
xchg
sub
push
fadd
jne
dec
imul
inc
and
and
enter
aaa
rcl
testl
mov
test
or
jb
shrb
mov
mov
test
jge
inc
jp
mov
outsb
xor
cmp
push
negb
mov
mov
dec
mov
les
filds
pop
mov
jl
shrl
std
add
mov
les
xchg
repz
push
fsubl
add
fistps
xchg
lret
in
jge
mov
inc
cmpsl
fistpll
and
repnz
jg
pop
inc
pop
xor
xor
in
std
sbb
iret
scas
sbb
daa
shll
push
sbbb
cmpsb
mov
push
sbb
cmp
sbb
lds
fmul
pop
fldenv
xchg
gs
mov
and
in
cmpsl
dec
inc
dec
scas
jg
loope
push
out
jne
dec
push
in
pop
ljmp
rcrb
pusha
xor
xchg
jo
mov
iret
mov
sbbb
shlb
cmc
xchg
mov
shlb
movsl
mov
xchg
rcrb
pusha
push
push
nop
xchg
xor
test
stc
sbb
adc
test
or
push
enter
add
or
jno
lods
scas
sbb
das
call
jp
loop
inc
pushf
divl
cmpsb
rolb
ja
push
movsl
inc
dec
iret
mov
cmp
es
add
aad
cwtl
icebp
shrl
gs
push
mov
aas
jb
cli
add
and
lock
mov
jmp
in
in
push
xor
xchg
xor
mov
das
mov
lock
popa
push
inc
and
dec
es
test
jbe
scas
mov
or
xor
aam
repz
fwait
or
das
dec
idiv
cwtl
dec
pop
xchg
jecxz
pop
fadd
adc
aad
mov
outsb
scas
mov
data16
ret
cmp
js
lret
vcmpss
xchg
aad
lret
mov
add
sbb
xlat
hlt
mov
xchg
jno
fcmovb
test
stos
adc
in
data16
jmp
in
ss
loopne
lret
call
jnp
add
movsb
mov
mov
sti
cmp
sub
stos
mov
sbb
jnp
pushf
dec
cltd
and
jne
popf
mov
sub
call
iret
sti
sub
fiaddl
sub
lds
jg
inc
jecxz
mov
hlt
adc
xchg
rcrl
xchg
ds
add
pushf
dec
jb
xchg
cmc
mov
clc
mov
idivb
sub
adc
push
cmp
mov
loope
addr16
xchg
pop
es
cmpsb
movsl
pop
jmp
repnz
addr16
jecxz
and
sbbl
js
shll
cmp
test
add
xchg
cwtl
mov
jae
dec
cltd
movsl
int
das
lcall
test
out
mov
add
mov
test
pop
aas
dec
push
repnz
sbb
sbb
xchg
xor
movsb
sub
or
popa
sarl
xchg
inc
into
jmp
adcl
scas
jns
dec
outsb
and
int3
or
mov
lds
cwtl
add
ss
pop
mov
jp
push
out
xor
sbbl
mov
out
gs
fld
sbb
fs
sub
lds
push
inc
mov
push
mov
shlb
mov
movsb
xorb
iret
ja
lock
sahf
mov
xchg
xchg
ljmp
loop
test
stos
cmp
or
sbb
dec
repz
into
sub
xor
cmp
pushf
std
adc
loopne
xor
mov
mov
xor
dec
pop
sbb
cmpsl
mov
pop
aaa
inc
gs
and
cmp
aam
adc
sbbb
jmp
xchg
jns
sub
in
popa
lret
cld
test
and
lods
cmpsb
stos
adc
xchg
sti
inc
or
mov
mov
stos
das
push
and
jo
or
jg
out
or
mov
sub
or
lock
and
mov
nop
dec
mov
test
add
inc
pop
xchg
push
adc
addl
mov
lahf
into
mov
mov
jmp
pop
pop
frstor
add
sub
add
sub
outsl
fildll
push
jbe
jge
dec
imul
xor
sarb
test
pop
daa
pop
cli
out
stos
mov
lods
adc
fs
xor
jb
fnstsw
mov
jg
mov
repnz
inc
sub
jb
out
adc
inc
mov
adc
scas
jnp
xchg
and
into
mov
sbb
jne
pop
jecxz
inc
sub
sub
shrl
xor
add
das
stos
in
les
xchg
iret
mov
sahf
dec
cmp
push
add
sub
sbb
xchg
cli
xor
imul
push
push
pop
adc
rcll
and
sbb
aam
xchg
and
jbe
vsqrtss
fs
imul
xchg
fsubp
adc
sbb
sar
imull
mov
dec
mov
adc
cwtl
hlt
jp
jb
and
jge
jmp
push
pop
jp
pop
lret
add
mov
xor
xchg
jl
in
ss
sub
mov
bound
pop
out
out
cmpsb
mov
xchg
mov
sub
mov
iret
insl
popa
sbb
add
push
fwait
mov
or
xor
mov
xchg
pop
aam
jnp
int3
or
push
addr16
pop
in
adc
push
and
xor
aad
scas
add
int3
xsetbv
xchg
jecxz
fsubrp
clc
add
into
sbb
pop
dec
xor
and
push
repz
and
mov
je
out
jmp
clc
cld
pop
dec
adc
lds
mov
loop
clc
pop
push
lock
cmpsb
add
mov
leave
cmp
cmc
adc
lret
cmp
dec
cmp
les
pop
pop
loope
sbb
mov
jle
add
lods
cmp
push
push
je
jmp
mov
push
xor
push
js
pop
dec
testb
je
shlb
loopne
xchg
inc
dec
inc
test
xor
dec
jns
add
cmpsl
dec
dec
shrl
xchg
and
add
jno
jb
je
scas
pop
jbe
push
repz
lcall
jo
popa
pop
xchg
xor
add
outsl
loopne
test
aaa
outsb
jne
lret
xchg
arpl
jno
in
fwait
sub
xchg
and
jae
adc
mov
repz
test
out
sub
jle
movsb
test
and
bnd
push
mov
jecxz
sub
mov
rol
inc
dec
aas
inc
jae
ja
mulb
mov
rcll
inc
push
push
xor
mov
sahf
cmp
stos
add
cmp
or
cmc
push
insb
jle
sbb
cmp
mov
adc
cmp
mov
adc
push
lock
cmp
and
push
xor
cmpsl
es
test
push
testb
pusha
mov
mov
in
js
xchg
mov
outsl
lcall
test
dec
cmp
and
pushf
push
pop
lahf
outsl
push
outsb
stc
mov
dec
push
mov
push
sub
imul
sbb
insl
mov
lret
dec
es
mov
jne
frstor
mov
pop
mov
inc
cwtl
cld
push
loop
mov
and
repnz
dec
stc
and
mov
sbbl
sub
clc
mov
iret
sbb
test
jge
fsubrl
insb
mov
int
ljmp
xor
mov
push
sbb
dec
pop
mov
add
sbb
rorl
rclb
movsb
pusha
jp
push
outsb
fidivrs
adc
imul
xor
mov
fsubl
and
or
ficomps
faddp
jmp
stc
pushf
lds
dec
ss
jl
in
cmpsb
mov
andl
xchg
jns
xchg
imul
adc
cmp
add
in
pop
mov
pop
or
pop
push
jb
mov
mov
jle
std
ret
fs
pusha
cmp
das
cmp
mov
outsl
movsb
dec
rclb
lret
dec
push
pushf
adc
sbb
es
sahf
inc
push
test
pop
aaa
push
fwait
xchg
push
out
cli
xchg
add
call
mov
out
movsb
jp
in
ds
or
cmpsb
adc
stc
xor
loopne
jo
xchg
add
outsl
xchg
mov
mov
pop
or
lret
lret
lds
sub
xor
adc
lahf
sbb
xchg
inc
loope
adc
test
int
or
jnp
ss
push
xchg
push
mov
addl
mov
mov
xor
js
fs
lods
sbbb
sbb
sub
jnp
add
xchg
cmp
cmp
jle
sbb
jge
stos
rorb
add
test
andb
mov
xor
out
jmp
enter
jge
push
dec
pop
cmpsb
testb
lret
imul
out
enter
mov
pop
nop
ret
fbld
les
xor
jne
and
push
push
sub
push
or
pop
push
mov
xor
sub
pushf
sarb
sbb
lret
lds
inc
jl
xor
mov
pop
lret
adc
fst
dec
in
scas
cmp
dec
loopne
sti
pop
leave
xchg
andb
adc
jno
in
mov
xchg
cmp
jno
mov
xchg
lahf
cltd
call
jge
lods
insl
roll
add
xchg
cmp
pop
mov
cmp
jg
das
je
popa
add
scas
xor
xor
aaa
shrl
aad
inc
insb
jns
cltd
std
push
mov
movsb
and
dec
movsl
push
cwtl
out
jg
jne
xchg
stc
shl
jp
fwait
mov
imul
push
stos
iret
xor
mov
lods
inc
orl
sbb
sti
sbb
in
adc
fsub
mov
insb
hlt
add
dec
add
add
push
arpl
adc
sbb
js
xchg
xor
mov
dec
cmp
or
roll
aad
lcall
inc
pop
cmpsl
dec
jnp
gs
stc
or
test
cltd
jmp
mov
mov
push
je
repnz
inc
dec
insl
cs
test
iret
sub
std
mov
mov
cmp
or
jne
rclb
inc
or
mov
jno
jle
cld
cmpsl
or
push
rorl
jmp
xchg
sbb
jg
orb
or
insb
stos
jmp
movsb
gs
call
inc
pop
jbe
out
sub
imul
pop
mov
xchg
mov
mov
or
lods
shl
xor
jg
or
jb
sub
js
pop
je
adcl
das
std
xchg
fnstsw
mov
subl
pop
out
adc
lods
out
or
ss
jge
inc
xchg
jb
out
rclb
sbb
shl
xchg
push
jmp
pop
cltd
mov
dec
rcrl
nop
sbb
lret
and
inc
insl
adc
or
stos
sub
dec
xor
jbe
xor
sbb
mov
cs
dec
mov
cld
das
pop
jp
sar
cli
ss
pop
pop
sub
cmc
sub
lahf
push
or
xchg
sbb
dec
mov
push
je
or
lret
and
ret
sub
div
cmp
jno
or
pop
cld
leave
xchg
cmove
xchg
scas
andb
jo
and
jl
sub
xchg
daa
fdiv
iret
push
lods
or
mov
pop
mov
mov
cmp
push
imul
mov
dec
mov
js
dec
mov
adc
mov
xchg
or
add
call
insb
mov
rclb
mov
xor
out
loop
stos
dec
sbb
hlt
loope
jns
jle
fiaddl
adc
cmpsb
adc
dec
movsl
mov
adc
xchg
mov
stc
cmp
mov
jo
bound
mov
pusha
cltd
pop
sbb
scas
jbe
pop
or
mov
xchg
popf
ljmp
pop
fs
test
es
mov
sbb
ja
pop
sub
out
dec
shrl
dec
xor
lods
cmpsl
cmp
insb
outsl
dec
mov
lods
mov
inc
mov
enter
push
sbb
addr16
out
fmul
test
adc
in
dec
lahf
pop
shrb
pop
test
loope
xor
xor
jg
enter
cwtl
mov
cltd
test
int3
in
sub
in
adc
and
jb
mov
mov
and
xor
jge
jns
cmp
repnz
mov
mov
pop
push
ds
js
out
pop
and
std
js
ss
jns
aad
add
cmp
push
ja
in
cwtl
subb
pop
cwtl
loopne
xor
cli
dec
add
dec
ds
inc
mulb
pop
rcrl
xchg
pop
push
mov
call
arpl
jmp
jmp
insl
fisubrl
push
inc
mov
insb
inc
push
sub
rcll
daa
fsubl
or
jmp
inc
adc
xor
lods
movsl
orb
lcall
pusha
cmc
dec
or
mov
movl
gs
out
mov
sarb
adc
mov
test
cltd
adc
adc
pop
push
xchg
mov
rcll
mov
mov
cmp
jp
lcall
pop
fiaddl
lock
addb
in
lcall
inc
inc
fdivrl
sub
fwait
adc
dec
or
int
pop
jbe
adc
arpl
xchg
fwait
fwait
mov
dec
mov
sub
fsubl
mov
dec
inc
loop
cmpsb
dec
jle
std
adc
cmp
daa
idivb
flds
inc
push
mov
mov
sbb
xchg
dec
push
addr16
inc
xchg
pop
insl
mov
mov
xor
xchg
out
ret
loope
mov
lods
std
cmp
mov
xchg
dec
xchg
test
jne
sbb
decb
lods
jb
mov
fimull
xchg
cli
jnp
cmp
dec
lea
and
test
shlb
mov
rorb
imul
push
loopne
in
bound
mov
xchg
and
arpl
addl
jl
add
bound
cs
ds
stc
cmp
jae
gs
imul
mov
mov
inc
stos
outsl
inc
sahf
testl
bound
popa
push
inc
xchg
jae
pop
push
nop
pshufw
fcmovu
stc
jno
jo
jne
jno
gs
xchg
dec
push
pop
bound
xlat
pop
aaa
int3
jl
sarl
pusha
jnp
sub
ljmp
imul
nop
repnz
pushf
adc
xor
mov
call
incb
lcall
mov
lds
sbb
repz
insl
dec
wrmsr
test
scas
notb
sbb
gs
ficoms
fnstsw
jo
xchg
negl
sti
fisttpll
pusha
into
sar
mov
popa
adc
bound
dec
stos
lock
jns
mov
out
push
dec
test
fists
push
xchg
jmp
fadd
clc
mov
push
jl
push
dec
mov
mov
stc
sub
push
loopne
mov
fmul
xchg
xchg
mov
data16
push
sbb
clc
sbb
push
mov
mov
adc
adc
dec
sub
jl
mov
repnz
mov
mov
icebp
push
popa
sbb
or
lock
loopne
fiaddl
test
jbe
iret
cmp
in
pusha
int
push
sarb
popa
add
lret
arpl
adc
mov
xchg
inc
cli
pop
pop
lea
inc
dec
aam
int3
add
dec
loopne
ficompl
push
stos
jb
pop
je
lret
fcmovbe
dec
mov
cmp
lahf
mov
out
js
lahf
out
repnz
xlat
xchg
dec
push
call
add
adc
inc
cld
jbe
mov
push
call
arpl
stos
aam
pop
std
inc
es
lret
mov
xchg
outsl
and
outsl
and
fs
sbbb
pop
and
fsub
sub
data16
and
arpl
adc
mov
sbb
mov
mov
jo
idivl
icebp
dec
lea
dec
mov
ja
into
xchg
and
out
sbb
xorl
mov
mov
sub
jp
sub
xor
mov
xchg
xchg
inc
push
jno
in
rolb
cmp
xchg
jmp
xchg
inc
lds
jmp
push
jg
jnp
add
fucomip
testb
inc
push
jns
push
mov
aam
sub
jg
push
movsb
les
in
sub
fcmovb
xchg
push
adc
jnp
jnp
lods
insl
cmp
in
sbbl
out
rorl
fiaddl
jmp
pop
sub
jo
mov
into
jg
mov
push
push
mov
movsb
and
stc
jb
adc
dec
aas
lret
inc
cltd
fcmovnb
pop
xchg
mov
test
in
dec
ja
bound
or
test
insl
ret
xchg
out
mov
mov
insb
pop
xchg
sbb
xchg
mov
and
xchg
sub
das
jbe
rcl
pop
sarl
in
xor
test
test
imul
add
push
rcr
adc
jg
mov
fisubs
inc
sbb
xchg
cmp
imul
out
sub
pop
cli
inc
pushf
hlt
scas
loop
sbb
mov
mov
push
fs
pop
sub
or
pop
mov
add
sub
je
test
out
les
inc
in
sti
sub
cmp
sub
mov
stos
enter
nop
pop
stos
stos
dec
shll
scas
mov
xor
and
adc
lock
iret
sbb
dec
shlb
pop
push
inc
jnp
mov
addr16
push
dec
sub
or
pop
push
incb
insl
jle
or
fwait
xchg
cmp
movsb
sub
cwtl
lods
push
dec
mov
push
pop
cmc
mov
mov
jl
out
add
adc
pop
dec
push
dec
inc
pop
jl
xchg
in
sbb
outsb
rolb
scas
fsubr
je
imull
clc
ret
adc
les
in
sbb
mov
xor
cmpsl
dec
rcrb
stos
or
cltd
add
outsb
cmpsb
mov
inc
push
fyl2x
fisttpl
testl
push
out
mov
out
fsubr
or
mov
and
hlt
adcb
pushf
int
inc
mov
cmp
xor
outsb
clc
imul
pop
mov
add
lret
ret
sub
push
inc
xchg
js
jns
xchg
in
sbb
popa
pushl
push
sbb
into
xlat
data16
jecxz
int
fyl2x
lahf
das
aad
cmpsl
cld
inc
lret
outsl
lret
xchg
std
divb
lds
push
jg
rep
or
sar
xor
cmp
mov
iret
xchg
pop
adc
sbb
pop
push
push
xor
pop
call
xlat
mov
dec
out
icebp
sub
cmp
jo
in
leave
fidivrs
lea
subb
lret
dec
dec
push
sarl
gs
int3
mov
ds
xchg
sub
mov
dec
xor
mov
cli
cld
into
rorl
adc
lahf
ds
or
sub
jge,pt
repz
push
jbe
dec
inc
movsb
lret
fwait
popf
in
dec
ret
outsb
mov
daa
pushf
xchg
inc
jmp
mov
fistpl
cmp
in
ss
mov
movsb
popf
lcall
mov
cmp
cmp
push
adc
adc
popl
dec
mov
cmpsl
xchg
push
rcrb
out
pop
push
scas
inc
mov
pop
xor
xchg
stos
lret
ljmp
clc
xchg
inc
cmp
inc
lods
imul
divb
shrb
lds
xor
out
arpl
sub
mov
fprem
jne
jecxz
ret
mov
xor
xlat
jmp
enter
mov
jl
movsb
inc
clc
je
fistpl
push
inc
fists
cltd
dec
test
mov
sub
int
sub
fiaddl
xchg
push
mov
or
pop
xchg
mov
fstl
fsubs
mov
sbb
lods
mov
xor
aam
clc
cs
dec
inc
push
test
and
pop
mov
sub
adc
in
and
adcl
shll
mov
movsb
mov
mov
cmc
or
inc
outsb
rcrl
cmp
and
xor
cmp
pop
fimuls
loopne
sub
popf
inc
outsb
pop
ss
inc
and
jl
xchg
jecxz
mov
mov
xor
ds
stos
lret
xchg
mov
scas
jno
movl
mov
lretw
xor
test
mov
enter
pop
push
dec
sub
sub
pop
bound
adc
push
sub
insb
repnz
xor
out
inc
push
gs
sbb
add
test
add
int3
mov
inc
and
mov
sti
outsb
jp
sti
icebp
mov
and
loopne
stc
leave
ss
lods
ja
nop
sbb
mov
sahf
insb
shl
push
testl
cmp
add
dec
insl
fnclex
xorl
inc
mov
pop
fs
loop
cltd
mov
pop
cmp
test
mov
sbb
rorb
pop
insl
leave
imul
push
add
or
daa
adc
lods
push
mov
pop
xchg
in
sbb
inc
pop
pop
and
mov
pop
nop
pop
clc
ja
imul
dec
mov
mov
jnp
mov
pop
in
xchg
dec
inc
rep
pop
aad
mov
push
inc
popa
adc
je
xor
inc
aad
sbb
xor
popf
out
push
gs
push
mov
lods
lock
push
adc
push
jns
pusha
mov
mov
lds
popf
add
arpl
pop
movsl
push
addl
or
xchg
fcoms
ljmp
cmpsb
and
dec
arpl
mulb
into
pop
inc
push
out
fnstenv
or
int
pop
clc
pop
sbb
rcr
outsb
dec
leave
aad
movsb
mov
mov
jbe
andl
dec
andb
pop
cltd
lods
mov
daa
ret
jge
xchg
filds
xor
mov
jecxz
and
add
scas
inc
jg
adc
mov
push
cs
xor
out
add
idivl
subb
sub
lahf
stos
jae
arpl
in
cwtl
dec
cmp
in
xchg
stos
pop
cmp
xor
aam
in
jg
dec
sub
inc
adc
enter
jno
lret
mov
insw
xor
jnp
loope
lcall
mov
imul
outsl
lret
lcall
shl
call
sbb
lods
in
popf
xchg
inc
fcmovne
inc
xlat
cmp
pop
or
int3
movsb
pushf
stos
mov
xchg
ficoml
pop
js
loopne
out
cmp
pop
dec
mov
std
sahf
mov
fisubrl
fcomps
or
push
mov
int3
fchs
out
lods
aad
int3
and
daa
jg
and
push
adc
aad
ret
mov
stos
pop
outsb
or
and
popa
fsubr
rcrb
pop
jp
adcl
or
sub
shll
pop
addb
dec
out
out
cmp
push
loope
push
pop
lret
xchg
loop
xor
int
in
mov
adcb
push
push
call
decb
xor
and
xor
jo
rcrl
ja
pushf
pusha
hlt
adc
leave
add
aas
stos
imul
dec
xchg
lods
mov
bound
pop
insb
scas
mov
xor
xchg
jg
sub
in
cli
in
aam
and
jle
push
add
mov
push
sub
push
or
mov
jae
xor
or
inc
mov
test
dec
dec
sub
dec
shll
xor
scas
fwait
rcl
outsl
mov
popa
sar
andl
dec
pop
bound
popf
cmpsl
inc
lods
dec
stc
cli
inc
adc
insb
out
mov
outsl
cli
movsl
xor
mov
jbe
in
test
ret
jmp
aad
adc
test
pop
xchg
js
xlat
mov
fsubr
xchg
jmp
andl
sub
add
lods
add
sub
fnstsw
mov
addb
mov
aam
pop
xchg
imul
jno
mov
lods
in
and
sahf
test
adc
mov
jbe
stos
adc
stos
movl
push
sbb
sbb
xor
test
mov
lret
sub
cmp
and
ret
cmp
sub
test
fcoms
filds
mov
mov
jl
gs
test
pop
nop
xor
cmpsb
push
inc
sbb
cmp
sub
rcrb
out
rorb
fcoml
pop
push
jno
std
add
mov
icebp
test
rolb
push
add
jecxz
cwtl
imul
fimuls
xchg
mov
in
push
push
ret
mov
flds
loop
and
cmp
push
aad
cmc
ds
test
cmp
lds
xorl
add
adc
sarb
mov
mov
inc
pop
negl
stos
arpl
daa
mov
hlt
cmp
inc
fdivr
mov
arpl
sbb
vaddpd
scas
cmp
lret
movsb
dec
loopne
jnp
pop
xchg
jle
push
jl
mov
loope
bnd
or
loopne
sub
xchg
in
sub
aam
lahf
int
sbb
mov
sub
stos
movsb
dec
in
in
out
hlt
lds
loope
pop
jg,pt
lcall
adc
aam
mov
mov
pop
daa
movsb
inc
lcall
sub
mov
outsb
jge
mov
rcll
lea
stos
push
add
inc
lret
stos
cs
or
push
dec
js
cltd
or
mov
mov
cmc
xchg
mov
mov
and
push
jns
cld
in
jo
dec
into
lods
addr16
je
jmp
xchg
rcr
add
aad
mov
or
pop
std
and
pop
xor
jne
shrb
ret
out
fsubl
lcall
icebp
push
sbb
test
add
xchg
add
test
stos
xor
xchg
pop
mov
inc
test
cmp
add
pushf
stos
outsl
shrd
arpl
mov
jg
cmp
xchg
movsb
pop
xchg
scas
stc
insb
out
jp
ss
imul
rcll
movsl
jo
out
lods
ja
mov
mov
dec
and
pusha
inc
mov
mov
pop
mov
imul
hlt
imul
pop
mov
xor
out
or
sar
ret
aas
mov
stc
cwtl
frstor
and
dec
sbb
push
fsubl
lods
inc
jbe
daa
stos
jl
sbb
clc
sbb
xor
ret
jnp
push
pushf
dec
ret
xor
idivl
mov
scas
int3
mov
loope
shrl
inc
cmp
out
movsb
cld
cmp
sti
mov
bound
inc
mov
jb
add
xchg
mov
lcall
std
fdivl
in
mov
push
inc
cmp
xor
aad
call
jnp
leave
cmp
or
add
aaa
dec
cs
xlat
mov
jae
dec
popa
dec
jle
test
mov
rcll
jmp
dec
and
cld
int3
push
lock
ljmp
lcall
fcoms
shrb
test
fnstenv
mov
add
pop
mov
add
pushf
lock
lock
out
call
imulb
andl
cmp
and
rclb
sarb
push
mov
fdivl
out
cmc
in
in
add
call
rcrl
or
cmp
pop
sbb
jbe
sub
jns
loopne
inc
aad
test
cmp
mov
and
dec
adc
out
add
fcomp
add
lahf
inc
xlat
hlt
mov
inc
rcll
int3
mov
inc
flds
stc
mov
and
mov
or
sub
movsl
fistpl
pushf
lret
mov
jl
pushf
call
mov
mov
jle
fbld
sarl
dec
dec
or
jecxz
mov
shll
mov
jne
cmp
dec
jge
aaa
loopne
mov
test
rorl
mov
stos
inc
movsb
data16
cltd
orb
mov
dec
jecxz
incb
push
jle
inc
adc
shlb
and
ret
in
gs
mov
jnp
bound
mov
cmp
pop
jmp
mov
xor
sbb
lcall
test
mov
dec
sub
push
aas
ret
adc
cld
leave
test
jle
popf
push
shrl
inc
nop
pusha
decl
inc
lahf
insb
xchg
xor
sbb
mov
test
add
in
fs
cmc
pushaw
adc
andl
pop
cli
iret
adc
push
and
cmpsl
movsb
adc
mov
xlat
pushf
test
fbstp
test
fs
adc
cwtl
push
push
out
or
pop
cwtl
xor
leave
push
bound
icebp
mov
bound
stos
add
rcr
or
jl
add
out
adc
mov
and
or
inc
xchg
pusha
cld
testb
cmp
jge
push
cmp
cltd
or
negl
fnstsw
adc
add
negb
call
mov
inc
cwtl
mov
enter
add
movsl
aaa
xchg
insl
les
decl
ss
test
jg
fisttpl
xlat
xchg
cmp
cmp
push
lcall
jbe
stos
adc
sbb
cmc
push
xor
movsl
jno
xor
push
std
outsb
or
sub
dec
sbb
jne
mov
es
stc
jno
cmpsl
notb
xor
adc
xchg
mov
icebp
sti
dec
pop
inc
rolb
les
jge
inc
pop
faddp
loopne
scas
lds
add
sub
rorl
les
stc
add
dec
aaa
mov
cwtl
mov
dec
lods
les
mov
cmp
inc
mov
xor
fwait
sbbl
push
lods
or
xadd
add
sub
add
xor
add
or
pop
push
push
add
rcrb
adc
rcll
mov
mov
mov
int
push
adc
mov
int3
xchg
pop
sub
cmpsl
test
mov
call
jo
sbb
insl
sub
push
loopne
ja
cmp
mov
xchg
stos
and
mov
mov
mov
ret
stos
xchg
adc
dec
ret
xchg
shrb
cmp
ficoms
dec
and
pop
mov
mov
orb
jg
inc
sub
xchg
and
xchg
in
imul
fsubrs
cmp
in
ret
mov
dec
loopne
mov
std
adc
outsl
lcall
nop
sbb
xchg
jnp
scas
out
sub
push
pop
adc
or
jnp
hlt
cmpsl
xor
jb
out
ljmp
test
push
cmpsl
pushf
xchg
inc
bound
scas
hlt
ret
fdivrl
shl
xchg
sub
pop
out
cs
int3
sub
push
inc
dec
mov
xor
fisttpl
mov
mov
stos
cmp
testb
and
xchg
jge
add
fiadds
rorl
jno
dec
adc
inc
out
pop
jnp
pop
fsubs
rcll
cmp
push
inc
mov
and
jecxz
out
jecxz
push
inc
decb
jb
mov
scas
scas
fsubrs
or
mov
gs
push
push
sbb
or
add
arpl
shlb
mov
adc
dec
jecxz
loopne
jp
jns
addb
loop
mov
inc
repz
pop
xorl
outsl
lds
pusha
inc
and
dec
xchg
fidivrs
cmp
outsl
jg
test
test
mov
and
add
enter
js
fiaddl
inc
mov
cwtl
fcom
adc
les
cld
add
sbb
lahf
ss
mov
jge
mov
stc
je
and
js
dec
cli
add
and
jnp
push
adc
rsqrtps
pop
sub
imull
out
xchg
fcomps
ljmp
cmp
mov
push
loopne
out
push
and
movsb
cltd
int3
pop
dec
inc
in
mov
arpl
faddp
mov
lcall
add
ret
xchg
lds
xchg
mov
add
aas
sahf
mov
xchg
push
mov
jecxz
out
jp
mov
sbb
or
mov
pop
bound
sub
dec
push
xchg
mov
inc
add
cmp
xchg
jnp
int
inc
hlt
addr16
mov
sbb
clc
mov
mov
cli
pop
pop
out
cld
pop
decl
cmp
loope
xchg
sub
pushf
fwait
fcmovnb
sbb
fs
cmc
jle
les
arpl
mov
popf
leave
adc
js
adc
jp
inc
and
dec
data16
mov
loopne
jb
mov
adc
mov
repz
daa
lahf
xor
mov
jmp
outsb
pop
sub
ss
jmp
sbbl
xchg
mov
clc
xor
lock
fidivrl
nop
mov
inc
fisttpl
decl
insb
sahf
inc
push
add
inc
ret
movsb
or
ret
dec
movzwl
rol
addsubpd
mov
push
sbb
xchg
jp
pop
lret
sbb
dec
xlat
cmp
shlb
mov
cmc
mov
inc
ret
imul
dec
mov
test
inc
out
add
mov
push
hlt
cmp
mov
outsl
or
pop
dec
mov
incb
sarl
fcoml
ds
daa
std
and
in
insb
xor
mulb
lock
test
mov
enter
pop
cmp
mov
mov
out
mov
sub
popl
sbbb
pusha
mov
sarl
and
inc
icebp
push
or
push
mov
push
fwait
push
test
inc
dec
pop
leave
enter
nop
sub
sbb
xor
icebp
xchg
mov
sub
enter
lret
aaa
clc
repz
fidivl
cmp
sti
mov
xchg
sub
push
fldl
xchg
aad
sbb
sub
fs
cmc
mov
pop
jnp
inc
jne
sub
andb
movsl
orb
mov
clc
es
sbb
das
cltd
mov
mov
aam
shrl
fsubr
mov
or
bound
loope
push
sub
push
scas
dec
adc
dec
out
push
es
or
repnz
pop
inc
mov
inc
sub
imul
jp
sbb
test
sbbb
popf
test
pop
fisttpl
mov
sbb
jno
jnp
movsl
add
nop
test
fisubrs
inc
add
xlat
iret
pop
into
mov
jne
loopne
mov
add
mov
outsb
inc
in
inc
dec
lock
jg
fldl
sub
cmp
xor
mov
or
and
xor
cmpsl
call
aam
mov
lret
shl
pop
iret
mov
outsl
hlt
imul
cmp
hlt
jmp
jmp
les
imul
cmp
test
subl
or
cmc
ret
mov
movsb
aam
mov
es
cmpsb
pushf
mov
stos
push
add
or
addl
sbb
imul
jnp
inc
and
bound
rorb
jl
das
xor
mov
xchg
cmpsb
mov
jo
imul
or
inc
add
aad
xor
ss
mov
cs
xor
inc
lea
xor
outsb
lock
iret
notb
lret
inc
jns
fbld
add
call
test
push
aam
pop
out
dec
inc
xor
popa
cli
adc
xchg
cmp
or
sub
dec
add
xlat
cmp
stc
xchg
aaa
pop
xor
mov
and
cwtl
mov
hlt
xchg
mov
pusha
inc
leave
xchg
jne
fnstsw
and
pushf
setnp
xchg
loop
rcrl
test
xchg
test
lret
pop
mov
cmp
hlt
outsl
inc
fimuls
es
inc
sbb
adc
or
lods
scas
push
dec
inc
out
in
push
mov
mov
pop
movsl
std
out
repz
mov
add
push
pop
cmp
popa
push
popa
pop
es
fcomip
cmpsl
sti
nop
xor
xchg
call
mov
pop
sbb
xchg
aad
mov
inc
sbb
mov
and
cmp
inc
inc
das
sbb
xor
push
leave
pop
loopne
jmp
aad
out
mov
outsl
jecxz
cli
pop
jbe
mov
negb
repnz
out
insb
push
push
fwait
jecxz
mov
rclb
xchg
outsl
dec
push
mov
jne,pt
adc
out
jge
and
lcall
shll
outsl
loope
push
pop
or
add
out
dec
mov
mov
jmp
mov
cld
ja
fistps
mov
mov
inc
dec
mov
mov
mov
xchg
in
je
stc
aam
lret
bound
test
cmc
stos
push
cltd
cltd
cld
lds
mov
sar
mulb
mov
imul
test
lods
mov
loop
scas
add
shrb
sbb
add
pmaxsw
bound
repnz
xchg
aas
cmp
rclb
gs
xchg
jmp
push
leave
mov
or
addr16
fdivs
out
pop
lea
js
adc
pushf
sti
xchg
push
inc
jae
jno,pn
pop
daa
cwtl
rclb
mov
daa
int3
mov
add
pushl
push
pop
mov
lods
int3
aaa
lds
popf
pop
pop
xor
sub
hlt
adc
push
cmc
pop
fwait
adc
mov
adc
cmp
setno
dec
jbe
insb
mov
dec
mov
mov
imul
cmc
rolb
push
testl
fcomps
out
ja
push
bnd
scas
adcl
pop
add
pop
pop
pusha
daa
pop
inc
adc
push
and
movsb
xchg
negb
cs
mov
es
mov
loope
jg
xchg
out
movsl
or
cmc
or
mov
xchg
jle
movsl
pop
inc
jl
test
ss
int
lea
lds
aaa
daa
sub
cmp
and
and
mov
cmp
stos
push
imulb
mov
mov
dec
push
scas
sbb
sbb
dec
bound
rol
fimuls
adc
sti
sub
and
ret
stc
lds
movsb
mov
xor
xchg
shll
or
push
push
leave
dec
push
fiadds
or
leave
adc
inc
push
call
scas
shl
add
adc
lds
mov
pusha
add
inc
stc
push
mov
loopne
mov
mov
shr
fdivl
fildll
mov
sub
inc
cltd
rol
push
push
adc
xchg
dec
jge
add
je
and
data16
movsb
xchg
push
xchg
mov
fs
or
sti
jle
xlat
push
movsb
out
test
push
sub
inc
jge
dec
imul
mov
lods
xchg
pop
insl
xor
and
and
push
pop
lret
movsb
jns
add
dec
mov
add
xchg
xchg
mov
xlat
cmp
andb
pop
mov
pop
je
arpl
pop
fsubrs
lret
inc
adc
mov
add
call
adc
movsb
adc
hlt
fcmovnu
lods
icebp
es
inc
or
xchg
cmpsl
cmpsl
and
adc
and
xchg
in
dec
je
mov
std
inc
xorl
mov
sbb
mov
inc
sub
pop
mov
in
inc
cmp
aad
test
pusha
ja
sar
push
pop
sbb
repz
in
pop
lods
daa
cmp
gs
ds
pop
pushf
out
sbb
arpl
jnp
pop
inc
sti
mov
andl
cmc
sub
jp
dec
push
mov
adc
popa
lds
inc
testl
pop
adc
push
pop
popa
and
push
data16
fmull
je
aam
add
shlb
xchg
sub
xor
xchg
imul
mov
push
push
sub
cmp
out
les
je
mov
lods
incb
and
mov
and
push
pop
das
test
in
sbb
stc
aaa
hlt
adc
pop
jl
xor
dec
loopne
sub
sub
fldl
mov
cmp
scas
jae
add
mov
leave
and
xchg
pop
pop
xor
inc
shlb
cmp
aaa
xlat
sub
jle
out
imul
xor
cmp
pop
les
inc
mov
jnp
xchg
cmpsb
stos
test
stos
add
dec
jbe
hlt
subb
mov
pop
xor
push
add
xor
nop
testb
push
sbb
lods
jmp
adc
mov
cmp
pop
and
jg
test
push
pop
mov
fnstcw
aaa
dec
ss
insb
hlt
ljmp
dec
lret
fsubrp
mov
mov
in
lret
xchg
icebp
mov
test
shlb
pushf
leave
imul
mov
aam
insb
push
cmp
imul
fs
pop
sbb
cmc
jae
add
jle
outsb
pop
aad
jne
mov
andb
lock
and
mov
test
sbb
loop
std
mov
es
xchg
nop
lock
mov
or
hlt
data16
dec
jb
mov
sti
ret
jp
popf
fcoms
ljmp
ja
mov
and
dec
add
adc
outsb
imul
std
push
lret
sbb
cs
add
jb
cwtl
js
dec
into
sbb
fdivp
sub
les
and
pop
xor
test
ljmp
cmpsl
mov
cltd
jno
xchg
inc
sarb
fcoml
sub
std
leave
in
sarl
inc
cpuid
jp
xchg
daa
daa
or
xor
cmp
sbb
pop
lret
cli
push
push
jns
pop
movsb
imul
sub
outsb
mov
jb
jae
jo
out
push
push
addr16
outsl
outsb
xchg
negl
mov
inc
mov
or
mov
xchg
loop
aas
xorb
sub
cmp
loop
jp
mov
test
cs
jmp
xchg
lods
cmc
push
push
dec
in
mov
xchg
shrb
mov
lahf
popf
cwtl
xchg
dec
loopne
test
loop
pop
pop
ret
xchg
jb
lods
dec
sub
lods
test
data16
or
or
in
jmp
std
int3
or
jae
xlat
jl
dec
in
or
mov
pop
sub
das
popa
add
js
jmp
jne
mov
call
cmp
add
inc
aam
cmpsl
aas
push
pop
or
loop
mov
jae
xchg
mov
xchg
sbb
xor
jle
jo
enter
fsubrl
mov
xorl
cli
aaa
or
fwait
in
mov
mov
cmp
jmp
pop
sbb
mov
cmp
sbb
insl
loope
jnp
sub
sbb
push
mov
repz
mov
test
mov
cmp
jmp
mov
bound
jecxz
ljmp
out
mov
jecxz
pop
jae
pop
mov
xchg
or
sbb
outsl
fmull
inc
fs
in
sub
imul
push
fstp
mov
in
jbe
cmp
scas
fmull
push
enter
out
jmp
or
pop
repnz
fisubl
xchg
js
dec
cmp
jno
sub
lcall
inc
xchg
je
cmp
cltd
lea
orb
adc
mov
add
lret
js
dec
subb
hlt
sub
mov
and
cmpsb
stos
js
ljmp
sub
mov
das
mov
cwtl
aam
stos
sbb
and
and
inc
jl
add
sarb
jb
mov
insl
xchg
jmp
cmp
lea
jb
mov
fninit
dec
lds
cmp
mov
aaa
mov
mov
bnd
cmp
fwait
adc
jle
in
mov
es
and
mov
pop
out
sub
pushl
xor
push
jno
fnstcw
xchg
lods
aam
jo
mov
in
ds
jns
sahf
xchg
push
repz
and
repnz
or
jae
sub
jo
jnp
pop
jns
cmc
std
aaa
shll
int
das
push
cs
push
lret
in
push
xchg
aam
lahf
mov
xor
imul
popf
popa
cmc
jp
cmc
mov
sbb
push
xor
fbstp
push
dec
mov
movsl
enter
lretw
mov
ljmp
arpl
inc
or
jae
push
cmp
arpl
sbb
enter
lcall
fstp
xchg
sti
pop
insl
arpl
sub
xor
mov
pop
das
inc
mov
pop
imul
pop
imul
imul
movsb
mov
push
mov
ljmp
sbb
pushf
inc
sbb
inc
cmp
outsl
lahf
or
pop
cmp
loop
icebp
test
mov
cmp
negl
dec
adc
imul
pushf
test
adc
jae
mov
cmp
add
ss
pop
inc
push
jns
or
cli
ret
jp
sahf
lods
ja
sahf
mov
mov
ss
clc
adc
cmp
mov
cmp
jle
mov
movsb
mov
xor
pop
and
inc
insl
push
dec
test
mov
mov
in
xchg
sti
or
mov
jle
inc
in
daa
je
mov
xor
adc
sahf
cmc
call
push
faddl
sarl
pop
push
adc
aaa
stos
int3
cmc
jo
insl
bound
mov
out
xchg
pop
inc
pop
mov
xchg
mov
pop
gs
mov
sub
jl
add
das
fwait
pop
mov
pop
mov
jl
enter
inc
adc
aas
inc
xchg
fcoml
mov
push
sbb
fcmovnu
es
cwtl
mov
mov
mov
inc
mov
nop
shl
xchg
out
jb
push
or
mov
stc
push
push
push
or
psubb
lods
push
dec
andl
aam
push
insb
scas
adcl
fnstcw
sahf
sar
cmpsb
and
inc
cwtl
or
ja
fmuls
dec
or
cmpsb
pop
shlb
ljmp
pop
lds
movsb
outsl
jmp
popa
addb
mov
inc
dec
mov
rcrb
movsb
fdivrl
mov
adc
cmp
mov
or
cmpsl
mov
push
std
scas
in
arpl
dec
pop
test
mov
es
sbb
test
int3
shrl
nop
mov
loope
push
xchg
mov
push
cld
fadd
into
std
mov
aas
fimull
aaa
inc
in
mov
outsb
repnz
cmp
jg
gs
repz
stc
mov
fldl
out
iret
in
stc
rorl
dec
push
adc
push
mov
test
xchg
cli
and
outsb
scas
test
push
outsb
xor
push
xchg
jmp
ret
and
pusha
sar
fstl
popf
jo
dec
ja
jne
call
loopne
fsubr
or
jno
icebp
inc
divb
sub
fs
fldt
push
js
lock
jp
and
and
popf
aaa
loopne
add
arpl
pusha
mov
mov
movsb
aaa
jb
add
xor
cmpsl
or
decb
dec
push
push
pop
push
es
push
pop
mov
xorb
adc
add
jmp
je
loopne
xor
dec
sti
loopne
fstpt
test
sub
sbb
fcoml
fstl
mov
mov
xchg
inc
cmp
sti
lods
cltd
dec
jne
cltd
jmp
cld
mov
mov
jb
and
mov
mov
push
mov
jl
sub
inc
cmpsb
pop
jle
mov
idiv
dec
xchg
push
jle
sahf
rorl
jg
mov
mov
mov
push
pop
add
push
cmp
cli
aam
sbb
adc
popf
ljmp
pop
dec
ss
shl
push
mov
mov
clc
and
pushf
mov
cmp
sbb
adc
jecxz
in
lret
frstor
pop
jbe
outsb
cmp
js
push
scas
addr16
test
jnp
dec
data16
and
jecxz
xlat
enter
mov
mov
ja
push
daa
cmc
xor
adc
or
sarb
pop
adc
inc
pop
sub
mov
popf
ja
mov
shrb
mov
in
shrb
jo
sub
lods
mov
and
cmp
scas
sbbl
pop
repnz
in
loop
imul
jle
xor
push
pushf
movups
mov
xor
orl
pop
dec
sub
and
incb
cmc
test
xchg
lcall
cmpl
add
ds
sarb
aad
es
and
mov
repz
ja
mov
icebp
popa
movsb
pop
jno
fstpl
dec
inc
and
lret
xor
leave
outsb
xor
sub
fwait
outsl
jl
mov
jns
pushf
in
sub
subl
xor
xchg
gs
aad
mov
mov
push
rcr
sbb
cmp
xchg
fwait
shrb
add
mov
and
fsubrs
cmp
fdiv
jae
stc
and
jb
cmp
and
push
mov
xchg
fbld
add
test
cmp
in
in
push
outsl
xlat
lret
das
gs
inc
shll
jge
bswap
adc
inc
hlt
xchg
imul
jno
cmp
int
xchg
rcrl
insb
adc
adc
add
scas
jns
mov
fidivrl
das
xor
into
int3
shlb
inc
xchg
mov
xor
mov
rol
xchg
enter
xchg
push
gs
ja
push
mov
lea
mov
mov
dec
popf
je
inc
es
imul
dec
push
shlb
mov
or
js
sahf
pop
std
adc
lret
or
dec
andl
add
bound
pop
arpl
push
inc
test
add
das
lods
aas
daa
sub
pcmpeqw
fcomi
scas
xchg
cmp
mov
cmp
scas
mov
mov
je
jle
mov
jae
xchg
test
out
fldcw
pop
xor
push
pop
inc
sbb
pushf
invd
mov
in
icebp
rcrl
jp
je
je
lret
mov
pusha
push
sbb
bound
inc
loopne
xchg
and
loope
jb
mov
icebp
je
lock
jns
adcl
dec
popa
cmp
jge
mov
mov
sbb
jge
cmp
daa
adc
roll
sti
push
push
and
pop
into
stc
pusha
add
fisttps
leave
pushf
sub
push
push
dec
or
bound
xor
push
jbe
mov
sub
shr
xor
out
mov
ret
xchg
mov
xor
test
mov
jmp
addr16
or
loop
lret
pop
cmp
jl
inc
out
dec
cmpsl
mov
pop
enter
cmp
out
ret
pop
sbb
call
movsb
mov
adc
out
ja
jg
or
adc
jb
xor
mov
gs
out
dec
pop
push
test
ja
mov
imul
or
dec
aad
nop
aas
mov
pop
lds
testb
xlat
pop
fs
dec
mov
inc
roll
and
nop
jp
sbb
stos
and
add
mov
rorb
fs
mov
jnp
sarl
sbb
fistpl
pop
dec
push
pop
push
mov
scas
push
sbb
jb
fcoml
jmp
push
fldl
insb
clc
outsb
jl
and
cli
mov
in
cmp
add
rclb
cmp
dec
lds
cli
test
cmc
pop
jbe
gs
cmpsb
or
fsts
mov
xlat
sub
addr16
mov
test
ficomps
mov
pushf
outsb
std
pop
divl
pminsw
mov
mov
pop
mov
mov
pop
cmc
repnz
xchg
mov
adc
add
pop
cwtl
mov
rorl
loop,pt
rorl
jp
rclb
or
insb
mov
flds
mov
mov
sub
addr16
add
lret
pop
xor
push
loopne
sub
loopne
add
jl
rcr
lcall
ja
inc
lret
and
ret
aaa
popa
fistpll
pop
ds
pop
out
idivb
xor
or
xchg
jle
push
out
jbe
shr
or
scas
xchg
test
testl
inc
dec
cld
pop
imul
jns
fiadds
xchg
popf
inc
jns
ret
shlb
jle
and
aas
adc
into
jecxz
std
rol
cmp
test
sbbl
movsb
jno
cmpsb
add
mov
cmp
pop
sbb
lods
subb
iret
mov
jl
sti
out
aam
push
es
jne
jmp
fistl
dec
pop
pop
pop
push
fidivs
inc
cmc
add
lret
jo
jmp
jb
std
and
sahf
insl
in
xor
aaa
test
es
rcll
in
mov
out
xchg
jg
test
daa
addr16
xchg
jecxz
or
jp
inc
addr16
push
pop
cmp
roll
jnp
or
push
pop
test
movsl
or
dec
iret
pop
or
jo
lret
mov
inc
mov
arpl
je
aam
frstor
xchg
cmp
pop
mov
ficompl
and
outsl
xlat
xchg
lea
addr16
je
stos
mov
sub
pop
push
lret
adc
inc
pop
lcall
push
pop
push
ja
daa
sub
clc
cmp
and
cwtl
lret
mov
into
adcb
movsb
inc
rolb
jecxz
sbbl
sbb
mov
out
lret
sub
fxch
or
stos
orb
repnz
nop
sbb
pop
or
add
adc
mov
adc
jno
mov
pop
movsb
push
add
fcmovnu
hlt
pop
mov
jle
sub
je
mov
push
cmp
push
lret
test
add
push
pop
fcompl
adc
cmp
lds
rol
test
icebp
js
mov
imul
xor
inc
faddl
cmp
cli
mov
ret
lahf
jmp
xor
push
scas
inc
push
cmp
outsl
dec
adc
dec
cld
dec
test
in
out
lret
lret
xor
fiaddl
jecxz
jno
leave
pushf
daa
movsb
cmp
repz
das
mov
fists
std
xchg
xor
negl
mov
lods
push
cmp
cmp
and
xchg
addr16
add
lret
fcmovnb
mov
js
or
jae
fnstsw
movsb
shll
cmpsb
mov
test
mov
inc
ljmp
scas
jbe
dec
jne
push
hlt
lea
push
ljmp
testl
sarl
movsl
or
xor
jmp
mov
in
adc
enter
pop
inc
mov
xchg
fnstsw
pop
sub
outsb
gs
iret
and
sbb
mov
cmp
fcoml
inc
xorl
ficoml
jns
inc
rolb
sbb
pop
jmp
xchg
mov
rcrb
sub
test
repz
jle
add
out
mov
push
sub
insl
mov
mov
xor
ficompl
out
in
push
adc
daa
add
push
push
jge
mov
jecxz
stc
dec
aas
mov
test
sbb
in
jb
hlt
sub
test
std
pop
cmp
or
pop
mov
mov
push
cli
shr
cltd
cmpl
push
sbb
mov
jl
or
mov
sub
dec
dec
or
adc
movsl
pushf
icebp
mov
adc
mov
sarb
mov
ficoms
lods
or
mov
pusha
mov
fistps
sbbb
into
mov
jo
push
fidivrl
xchg
pop
cmp
jb
mov
mov
jns
divl
xchg
mov
sbb
fwait
dec
test
das
lods
jl
dec
out
and
pop
push
shll
push
leave
pop
enter
add
into
vpaddusw
ss
jl
test
gs
aam
leave
cltd
jp
mov
loope
loopne
push
stc
sbb
sub
add
or
jge
sbb
xor
lcall
dec
cmpl
into
bsf
repz
lea
lret
stos
aaa
mov
sbb
icebp
and
loop
shlb
loop
arpl
sbb
mov
inc
adc
mov
and
jl
dec
jg
and
jne
adc
pop
fnstenv
out
mov
ss
rcll
repnz
mov
imull
mov
das
xlat
and
sarl
mov
push
es
and
loop
inc
mov
rcll
cmp
and
pop
sti
jae
fs
jbe
and
loopne
shlb
clc
push
ja
push
mov
in
sahf
mov
mov
adc
aam
mov
mov
mov
inc
pushf
or
aaa
dec
add
jnp
enter
ficompl
sarl
fbstp
fmul
adc
mulb
inc
rcll
addr16
xchg
pop
es
jae
inc
pop
int3
xor
nop
enter
movl
scas
xchg
leave
inc
mov
pop
cmp
sub
adc
and
push
sarl
faddl
jnp
push
jno
sub
mov
je
imul
sub
mov
in
add
jg
fadds
push
ret
sbb
lret
xchg
xchg
sbb
les
sub
adc
scas
xor
movsl
and
xchg
or
rorb
cli
cmp
out
test
rorb
loope
fidivrl
cli
popa
movsb
ret
outsb
xlat
inc
movsb
scas
in
pop
les
and
pop
sub
out
fnstsw
int3
repnz
lods
or
adc
adc
test
cltd
sub
testb
jo
icebp
jnp
jp
cmc
pop
addb
inc
inc
lcall
fidivrl
ret
std
jecxz
stos
rcr
int
xchg
push
dec
jbe
fisttpll
pop
adc
mov
mov
dec
mov
push
ftst
push
out
mov
ja
inc
adc
mov
sub
enter
movsb
fcoms
sti
cmp
mov
les
test
call
xorb
xor
mov
in
mov
fidivrs
ret
inc
shrl
and
int3
mov
xor
shrl
add
mov
loop
dec
out
push
xchg
xchg
mov
stc
dec
adc
push
subl
pusha
pop
iret
push
mov
repz
cld
xchg
sbb
inc
cs
dec
xchg
mov
mov
jle
cli
popf
decb
pop
icebp
test
das
pop
ljmp
stos
add
sbbb
cmp
pushf
ret
fsubrl
sbb
gs
movsb
fisubrl
pop
imul
xor
jbe
add
out
loopne
mov
add
cmp
mov
out
sub
sbb
enter
adc
add
shlb
add
ss
gs
call
sahf
lahf
xor
fdivs
test
adc
xchg
and
xchg
nop
jbe
loope
jb
inc
shrb
popa
lea
lods
cmpsb
fisubrs
lock
xor
jae
mov
push
movsb
sbb
dec
sbb
cmp
ds
mov
and
and
int3
xlat
in
sub
enter
jo
hlt
and
leave
fimull
sar
mov
or
in
insl
sbb
arpl
mov
inc
repz
push
mov
js
jmp
test
cmpsb
mov
incl
or
mov
out
mov
dec
dec
push
arpl
dec
into
xchg
aaa
push
xchg
and
push
fwait
insb
adc
repnz
cmc
enter
xchg
add
lods
mov
sbb
dec
dec
dec
cmpsl
stc
dec
mov
repnz
inc
pop
mov
dec
or
push
jp
sbb
inc
and
enter
xchg
fdivrs
jb
mov
jae
mov
dec
cmp
mov
insb
rcll
in
cmp
sub
jle
inc
movl
repnz
in
mov
sbb
or
push
inc
lds
in
adc
adc
xor
cli
mov
sub
fidivs
in
xor
and
scas
int3
orb
rcll
ljmp
adc
aaa
or
jno
add
popf
jle
test
add
lds
pop
xchg
xor
pop
lret
orl
int3
dec
out
lock
xchg
stos
jecxz
mov
sbb
mov
outsl
pushl
fwait
xchg
out
or
daa
lds
mov
sub
pop
sub
add
mov
inc
pop
jb
dec
movsb
jge
add
pop
xlat
outsl
cltd
sti
shlb
pcmpeqb
lahf
mov
pop
add
js
movsl
faddp
inc
push
adc
aam
mov
arpl
cltd
mov
in
inc
rorb
inc
jnp
std
mov
je
cli
sbb
inc
push
sub
mov
dec
push
addr16
sahf
cmp
mov
xchg
iret
or
je
stos
or
loopne
push
and
mov
dec
and
dec
pusha
out
jp
cmp
sub
dec
xor
call
imul
and
mov
dec
sahf
or
fistpl
xchg
xor
fldt
and
jne
xor
sub
inc
add
sub
jb
cmp
add
insb
inc
jmp
filds
jno
mov
enter
lcall
insl
xorl
push
fstps
mov
aas
pop
mov
inc
push
jecxz
fnstsw
pop
adc
mov
xlat
dec
pop
lds
stc
mov
jmp
push
dec
scas
and
fs
push
int
bound
xchg
aad
jbe
mov
lock
cmp
fistps
jmp
aas
adc
ljmp
icebp
dec
gs
pop
inc
cmpsb
repnz
out
loope
sub
jbe
xlat
mov
inc
mov
lods
cmpsb
xor
lock
dec
mov
xchg
mov
nop
push
test
bound
inc
sub
imul
test
and
imul
mov
jne
fiadds
or
pusha
repnz
xchg
scas
fs
scas
cmp
dec
adc
add
mov
idiv
cmpsb
push
pusha
pushf
addb
push
cwtl
jae
jne
arpl
push
mov
adc
mov
jg
aad
jmp
stc
daa
lods
adc
test
xchg
int3
shr
pop
xor
dec
lods
rclb
mov
push
hlt
adc
jge
jbe
out
pop
xchg
mov
into
sub
test
nop
adc
mov
iret
inc
frstor
jno
fimull
rclb
jno
inc
les
inc
sbb
int
int
add
mov
xor
inc
mov
in
push
mov
add
jmp
dec
jmp
ss
mov
nop
lret
ss
dec
js
cmp
xchg
shll
rcrl
call
sbb
add
jl
push
loope
jns
sbb
into
test
and
mov
xchg
rcrl
or
loope
jg
mov
insl
das
cmc
or
jecxz
sbb
insl
ret
adc
sbb
sbb
std
jne
sub
loopne
icebp
or
xchg
mov
das
lods
pop
push
push
xor
addr16
test
push
push
dec
popf
mov
or
neg
mov
xchg
adc
icebp
in
pusha
sahf
jmp
lods
hlt
sbb
out
hlt
fdivl
mov
xchg
jno
pop
adcl
jae
mov
cli
xor
in
xor
push
repz
or
lock
fistpl
dec
pop
sub
imul
push
jae
roll
pop
or
mov
jo
dec
lods
rorb
jb
sbb
popf
xchg
pop
dec
scas
adc
pop
fisttpll
jp
lcall
push
cli
fidivl
sbb
cmp
jmp
push
movsl
cmp
xchg
xlat
fisttps
sets
les
iret
jnp
xchg
fsubs
jge
dec
dec
xor
pop
imul
xchg
pop
pop
or
jp
mov
movsl
rcrl
das
and
pcmpgtb
inc
sbb
ljmp
push
push
cmp
hlt
subb
adc
xchg
sub
mov
test
and
adc
adc
lock
fwait
xchg
mov
adc
add
cltd
xor
std
push
sub
cmp
clc
mov
jp
sub
pop
arpl
loopne
aaa
sub
call
into
or
cld
aad
and
dec
ljmp
mov
enter
cltd
mov
jae
mov
pusha
decl
jnp
mov
or
add
loop
into
push
loope
dec
or
inc
pop
movsl
lods
cmp
jge
xchg
fbld
ret
clc
cmp
xor
inc
adc
pop
arpl
push
mov
cmc
push
xchg
mov
cmp
scas
popa
adc
scas
sbb
mov
ret
popa
cmpl
adcb
ja
ljmp
pop
roll
imul
inc
mov
bnd
out
mov
dec
jno
fnstcw
xorl
mov
out
mov
nop
pop
data16
sub
arpl
mov
pushf
sbb
mov
push
pop
sbb
mulb
fs
test
imul
and
fnstcw
sub
pop
adc
and
sub
mov
mov
cmc
mov
jb
in
xor
xchg
fmul
orb
inc
gs
cmpb
jmp
stc
and
push
or
call
movb
cwtl
pop
pop
xchg
and
pop
pop
mov
rorb
dec
imul
dec
or
in
aad
mov
push
mov
stos
into
push
fs
das
mov
les
push
jl
cmp
xchg
lea
xlat
xchg
or
testl
jg
mov
int
xor
xchg
rcrl
int
push
cmp
xor
ret
ss
cmp
jge
xlat
jmp
cmp
lcall
ds
mov
jle
sub
sbb
outsl
inc
dec
sbb
in
lret
cld
icebp
in
mov
xor
push
and
in
pop
lea
lret
sub
loopne
mov
or
outsl
inc
iret
inc
sub
aas
push
enter
cmp
mov
insb
jmp
leave
sti
jge
in
ja
sub
cmp
or
xchg
clc
lock
xchg
mov
push
xchg
cmp
int
xorl
cmp
dec
stos
cmp
dec
ret
add
jb
fstpl
iret
loope
lahf
xlat
and
pop
add
cmp
daa
stos
mov
or
sbb
fld
loop
loope
arpl
push
xor
lea
mov
xlat
cmpsl
and
iret
pop
bound
mov
mov
fimuls
and
out
mov
cmp
stos
dec
es
cmp
stc
cwtl
int3
negb
aas
iret
sahf
je
push
dec
inc
or
or
mov
mov
subb
jb
jo
stc
cwtl
adc
sub
sub
test
movsb
mov
adc
add
lods
fwait
arpl
dec
inc
into
or
shlb
sbb
and
cmp
mov
negb
sbb
pushf
cmp
xor
pop
test
inc
sarb
sub
mov
xor
dec
out
adc
insl
int
adc
loope
hlt
mov
into
stc
sub
jb
sbb
sar
xchg
sahf
and
add
mov
and
addl
mov
mov
and
xor
mov
add
cmp
pop
adc
mov
sbb
dec
ss
lahf
pop
cli
inc
push
mov
adc
lahf
inc
ds
add
int3
cld
orb
outsl
fstpl
and
loope
jl
pop
dec
pop
mov
push
in
out
js
popf
ljmp
sub
cmp
push
in
stos
cmp
mov
xchg
fstl
gs
cwtl
cwtl
ss
outsl
cmp
pop
xorb
adc
loope
imul
adc
out
sbb
push
stos
sub
jmp
loop
mov
in
cmpsb
push
mov
xchg
insb
sub
sub
leave
jbe
adc
jns
orl
cmpsb
out
jbe
sbb
sbb
cwtl
push
call
mov
mov
xor
adc
addr16
xchg
and
cmpb
mov
mov
jl
or
push
test
fsubrs
cmp
lods
lcall
cmpsb
sti
mov
les
pop
lea
adc
and
push
outsl
inc
inc
pop
stos
jno
push
pop
addr16
in
dec
std
rcll
mov
xchg
iret
mov
cmpsl
repz
sbb
hlt
mov
jo
push
dec
push
popf
inc
lgs
outsl
dec
fnstcw
jecxz
add
ret
orl
fadds
shlb
sbb
cld
stc
fisubl
jnp
lods
add
or
sahf
sti
stos
xchg
and
dec
and
sbb
sbb
in
jl
fsubs
insl
outsl
cmpsb
add
negb
cmp
push
mov
icebp
call
lods
test
mov
mov
jns
jbe
enter
in
js
popa
xor
dec
ds
outsl
sahf
sub
shl
sbb
mov
popf
and
imul
test
movsb
xchg
and
fimull
fdivs
mov
out
mov
mov
or
mov
dec
mov
arpl
push
leave
in
dec
test
out
mov
test
scas
hlt
cli
cwtl
pop
nop
xor
inc
sti
and
mov
fs
es
popf
inc
std
cmc
test
out
loopne
push
sbb
imul
mov
test
mov
cmp
jmp
inc
jb
aaa
outsl
mov
mov
enterw
fisttps
inc
push
and
mov
ljmp
xor
push
mov
js
fnstcw
dec
pusha
test
in
mov
imul
push
xlat
sbb
xchg
les
cmpsb
movsl
into
inc
cld
lret
sub
ret
sbb
cwtl
push
mov
icebp
mov
mov
pop
stos
shll
in
dec
mov
insl
ljmp
dec
icebp
mov
fsubrl
rcrl
mov
sub
push
xchg
inc
loop
mov
inc
movsb
and
adc
sbb
or
idivl
or
scas
je
jp
mov
or
outsl
scas
xchg
imul
mov
add
mov
lea
aaa
push
dec
mov
sub
dec
push
jne
stos
jg
insl
jo
lods
nop
push
mov
lret
rolb
rcll
stos
or
fadds
out
cmc
jl
and
add
jmp
cmp
mov
movsb
adc
lock
sub
cmp
mov
orb
mov
test
js
jbe
push
add
mov
jmp
xor
sbb
or
aas
int
je
mov
and
mov
xlat
ret
xor
xchg
sbb
fldenv
pop
pop
dec
loopne
cmpsb
pop
mov
dec
fdivl
xchg
sbb
mov
fsts
je
fs
mov
xor
add
stos
ret
fistpl
jp
sub
rorb
sub
mov
jp
cld
mul
dec
and
in
push
pop
pop
xchg
sti
inc
mov
inc
ret
imull
xchg
jns
pop
add
pop
arpl
pushf
adc
movsl
xchg
outsb
in
adc
xor
bound
dec
pop
cltd
push
les
add
jecxz
push
cmp
lea
inc
adcb
sub
lds
mov
adc
or
pop
xor
sub
adc
inc
push
push
and
mov
or
cmp
or
std
fisttps
add
stos
subb
jb
outsl
push
xchg
repnz
sbb
lcall
addr16
xchg
mov
mov
mov
mov
xor
gs
mov
popa
nop
loopne
and
pop
inc
cmp
mov
sahf
ret
add
fs
mov
xor
mov
loope
loopne
das
add
ja
cmp
ljmp
outsb
xlat
xlat
lock
push
cmc
xchg
jnp
xor
cwtl
mov
xchg
adc
adc
xchg
pop
xchg
movsb
jns
insb
mov
mov
xchg
xor
js
mov
movsb
out
test
sub
mov
mov
sahf
je
adc
pop
jno
cli
jge
mov
mov
mov
lods
addb
jmp
aad
ficoms
push
cmpsl
cwtl
mov
inc
shrb
ficompl
out
icebp
bound
addb
inc
rcrb
jge
and
and
hlt
mov
lods
xor
xchg
arpl
aaa
mov
test
and
inc
test
inc
pop
sbb
push
add
mov
ds
scas
adc
mov
dec
sub
test
in
xchg
mov
mov
or
mov
aaa
lea
iretw
sbb
sbb
mov
int
and
and
rcr
adc
push
fiadds
or
add
xlat
mov
sbb
orb
xchg
and
mov
sbb
stc
cltd
push
outsl
int3
mov
das
nop
xchg
frstor
xchg
cmp
je
inc
sbb
jo
adc
cmpl
mov
dec
dec
dec
fs
sbb
mov
push
mov
pop
cmpsb
push
and
scas
push
and
mov
jmp
push
into
cmc
mov
idiv
lret
jge
sbb
xor
dec
std
jmp
ss
and
add
push
hlt
mov
icebp
jb
jno
imul
stc
push
cmpsl
pop
pushf
xchg
enter
pusha
xchg
sbb
addl
adc
mov
cwtl
addr16
lret
loop
mov
into
pop
ret
sub
xchg
or
and
xor
leave
aaa
cltd
dec
pop
adc
push
idiv
andb
xor
into
mov
jbe
mov
jnp
outsb
jle
jb
or
testl
jl
out
int3
xor
jae
cli
scas
cmp
jle
mov
sub
mov
loopne
lret
mov
sub
push
rclb
rcrb
push
sti
pop
scas
inc
into
pusha
add
fdivs
and
mov
cmp
and
pop
cli
push
fcmovne
es
out
lahf
mov
fs
lock
arpl
or
cld
ljmp
sbb
sub
mov
push
pop
orl
leave
popf
mov
pop
xchg
or
dec
shll
in
addr16
pop
cmc
addl
mov
out
loopne
jg
pop
or
jle
adc
sarb
inc
test
mov
and
sahf
adcl
data16
mov
pushf
push
lahf
adc
rep
dec
xor
mov
fnstsw
add
mov
rcl
or
and
cmpsl
bound
push
push
mov
mov
sub
out
xchg
cmp
cmp
mov
out
adc
xchg
int3
mov
test
jne
sti
xor
fmul
cmp
pop
pop
jl
into
movsl
jo
mov
cs
xchg
gs
js
xchg
stos
mov
dec
sbb
inc
cmp
jmp
push
and
test
xchg
testl
dec
gs
cmp
fstps
mov
dec
sahf
call
sub
repz
sbb
and
scas
ret
fistl
mov
adc
adc
ret
ja
clc
popf
out
push
ja
xchg
mov
or
lods
cmp
and
inc
jo
outsb
call
pop
adc
test
aad
andb
lahf
push
imul
fidivrl
dec
fwait
xchg
cmp
out
ret
dec
dec
cld
lock
lea
jno
je
roll
call
cltd
clc
in
xchg
sti
inc
jns
in
or
lret
in
jno
pop
mov
dec
pop
sub
add
jl
add
cltd
sbb
mov
push
jge,pt
outsb
add
xor
sbb
mov
mov
es
mov
push
xchg
int
jmp
jbe
mov
ja
arpl
sbbl
jo
push
adc
push
inc
push
sub
int
rclb
loope
xor
pop
adc
mov
add
push
jle
aas
or
loope
xchg
sub
jg
pop
sbb
int
popa
fsubrs
sbb
mov
unpcklps
add
inc
rcrl
jmp
pusha
out
xlat
sarl
stos
fsubr
fimull
and
add
shll
push
stos
ljmp
imul
mov
ud1
inc
xor
cwtl
lock
jo
inc
aas
icebp
sub
shrb
jb
outsb
js
dec
rcll
mov
xchg
mov
sti
or
imul
shl
rcl
fstl
outsb
lahf
sahf
xlat
cmp
ss
out
dec
jo
jg
out
dec
xor
cmc
movsl
add
pop
sub
adc
inc
xlat
xchg
es
and
data16
bound
pop
arpl
jge
dec
lea
neg
jle
repz
cmp
ret
out
adc
aaa
mov
cmp
jns
jnp
and
cmp
add
sbbb
xchg
xchg
ja
add
push
lock
cmp
fcompl
rcrb
popa
ret
or
movsl
mov
push
nop
and
sub
sub
jb
fimuls
enter
adc
lret
mov
cli
or
cmpsb
mov
ud0
scas
popf
xchg
inc
cmp
dec
stos
adc
pop
xor
fisubrs
push
in
mov
mov
int
sub
insb
mov
cmp
pop
rorb
add
jb
dec
xor
dec
dec
pop
clc
pop
outsl
cmp
pop
data16
push
std
xchg
cld
cmc
clc
scas
push
int
dec
into
cwtl
clc
into
jb,pn
test
aaa
push
imul
icebp
das
ret
mov
rol
mov
push
jmp
rcrl
out
inc
push
dec
out
or
mov
mov
call
jbe,pn
jns
into
and
add
aas
sub
or
out
repnz
loop
mov
jnp
add
call
xchg
xchg
push
xchg
cmp
or
mov
jae
jecxz
cltd
push
aam
nop
mov
mov
sarl
ret
or
sub
movsb
add
test
inc
push
jnp
int3
or
jl
adc
xor
sbb
fsubrs
and
push
out
fdivl
jb
in
dec
add
icebp
mov
popa
sub
cmc
sti
pop
roll
add
rclb
jns
fs
fists
jb
mov
sub
cmp
add
xor
sub
jg
mov
jnp
lret
out
ss
xor
sar
xchg
lods
add
push
mov
pop
rclb
or
icebp
lods
cwtl
xorb
lret
fs
fists
dec
mov
es
cs
push
xchg
cmpl
lahf
call
ljmp
or
mov
mov
and
dec
or
ficoms
enter
out
outsb
mov
clc
mov
cmp
pop
sbb
fidivrs
xchg
enter
pushf
jns
dec
push
push
lret
mov
mov
out
loop
shll
add
jbe
or
xor
clc
or
inc
fs
shr
xlat
or
xchg
sub
int3
dec
pushf
and
in
dec
dec
pop
pop
mov
mov
adc
mov
into
or
mov
cmp
in
jno
fidivrs
pop
fldt
mov
xchg
mov
mov
gs
mov
sub
dec
xchg
rclb
ds
pop
sub
dec
cmpsl
je
dec
rclb
add
and
ss
faddl
js
jl
sti
clc
mov
sub
repnz
mov
mov
xorl
dec
rorb
adc
inc
nop
sbb
out
movsb
nop
xchg
fbstp
sub
pop
shrb
roll
xchg
dec
jae
jnp
int3
jmp
test
mov
push
xchg
push
push
shlb
adc
sti
faddl
xorl
dec
mov
jns
or
pop
subb
push
mov
lret
test
adc
mov
popf
cmpsl
push
jns
es
out
hlt
sub
inc
fwait
mov
mov
add
push
out
dec
push
mov
decb
and
scas
mov
fcoml
mov
outsb
nop
xchg
pushf
test
out
repnz
jae
and
shrl
decl
ret
sub
inc
jmp
ror
jp
idivl
mov
cs
int3
in
jnp
push
into
and
add
pop
das
dec
je
mov
mov
jnp
dec
xchg
add
jmp
popa
push
push
fcompl
mov
xchg
out
ljmp
test
ret
test
fidivs
leave
push
push
and
mov
fdivrs
cmpsb
repz
movsb
lods
pop
insl
dec
fdivp
inc
dec
outsb
movl
xchg
lea
lea
stos
push
in
sbb
test
out
inc
pop
es
mov
rsqrtps
dec
jb
jno
js
dec
add
mov
xor
mov
jns
add
mov
lds
outsl
mov
add
dec
and
jbe
aas
mov
cmp
pushl
sbb
push
jbe
divl
jb,pn
iret
movsb
test
mov
sbb
or
jl
daa
in
lahf
lea
xor
sarb
sub
xchg
dec
jge
mov
push
jnp
xchg
push
stos
into
gs
pushf
pusha
ds
and
mov
fadds
cmp
hlt
and
test
sbb
jge
std
or
lods
sbb
in
enter
and
add
rcll
mov
popa
fisubrs
mov
mov
mov
les
ret
mov
stos
jl
mov
adc
pop
mov
andl
dec
jmp
push
pop
push
adc
repnz
iret
jae
bound
clc
push
mov
dec
adc
popa
adc
daa
sub
push
pushf
inc
popf
mov
test
imul
inc
fwait
pop
icebp
add
push
movl
xchg
call
pop
pop
add
jecxz
ss
add
fst
loopne
xchg
lea
sub
int
and
jge
mov
xor
aad
shll
fldenv
mov
and
lods
fimull
jmp
test
pusha
pop
into
and
pusha
mov
push
decb
push
clc
jae
clc
popf
xor
inc
xchg
and
shl
adc
movsl
ret
das
cmp
lcall
xchg
push
mov
cld
xor
push
pop
aam
mov
daa
ret
xor
ja
pop
into
or
lea
adc
adc
xchg
xor
sub
pop
das
adc
inc
pop
repz
jbe
fs
divb
mov
jno
int
test
pusha
daa
fwait
jbe
pop
jge
and
mov
cmp
jb
mov
lcall
sbb
out
pop
mov
dec
jns
cmp
sub
cmp
or
mov
repz
mov
xlat
idiv
or
sbb
sub
jmp
jle
call
or
sbb
loopne
dec
in
add
adc
push
push
lods
sbb
paddb
leave
or
fwait
insl
or
adc
movsl
loop
cwtl
jmp
fcmovnu
lods
sub
pop
mov
out
or
push
addr16
mov
adc
sbbl
pop
fldenv
out
arpl
fcmovne
mov
or
pusha
sti
push
mov
scas
ja
subl
dec
fidivl
xchg
jge
jns
fnstsw
movsl
repnz
xor
int
iret
push
in
shlb
popl
out
mov
mov
lods
in
cmp
mov
mov
mov
adc
xlat
push
aam
test
lahf
ret
pop
mov
imul
xchg
aas
lock
enter
cmp
sbb
dec
stos
arpl
pop
ss
mov
out
inc
push
dec
imul
or
fnstsw
in
inc
add
dec
mov
aad
rcrb
sarl
dec
lea
lahf
mov
ss
aas
mov
leave
jae,pt
loop
sahf
xor
divl
mov
sub
inc
xor
addl
bound
aam
xchg
femms
push
push
xchg
stos
lods
or
and
inc
fs
popf
mov
inc
ss
mov
sub
mov
repz
push
jg
push
xchg
lods
lcall
jne
outsb
push
jne
cmp
fs
jae
push
daa
or
js
mov
stos
loopne
cli
loop
xchg
and
icebp
mov
insl
add
cmp
test
dec
daa
jne
stc
adc
xchg
repz
lcall
xchg
lods
cli
in
pop
aam
test
dec
sub
fs
dec
adc
add
inc
call
ds
int3
enter
aas
rcll
push
xor
out
scas
fldenv
movsl
mov
daa
cmpsb
mov
lds
cli
mov
jns
inc
scas
test
test
pmulhw
mov
scas
fnstsw
loop
shll
dec
call
pusha
mov
mov
cli
jle
sahf
xchg
mov
repnz
mov
jne
lods
or
cmp
jp
sub
pop
popf
jno
add
stos
push
ljmp
nop
sbb
stos
mov
pop
lcall
mov
pop
jnp
jmp
outsb
out
inc
and
adc
nop
xlat
cmp
fwait
sbb
daa
lock
stos
sbb
add
add
add
popf
dec
sti
cmp
scas
ret
sbb
outsb
xor
sbb
dec
int3
in
imul
fstps
icebp
or
lcall
sbb
ja
push
in
out
pop
ja
and
repnz
mov
jo
pop
leave
ds
out
lea
aad
and
or
or
jns
popa
mov
ja
and
push
out
arpl
sbb
cmp
mov
rcrl
fmull
lret
push
mov
sub
xchg
insl
leave
xor
lods
es
mov
jmp
test
dec
mov
daa
mov
in
sub
fldcw
jle
sub
cmp
fcomps
lds
pop
outsl
mov
push
sbb
adc
push
fcomip
int
inc
dec
loope
pop
clc
ljmp
out
or
adc
push
sbb
push
inc
push
dec
jae
jae
lds
cmp
je
dec
mov
and
xor
fldt
sub
pop
rcrl
inc
mov
outsb
mov
cltd
cltd
jae
xchg
push
pop
insb
aas
sub
mov
push
movsl
jl
aaa
sub
jbe
mov
add
sub
std
aaa
adc
sbb
mov
jo
pop
jae
xor
push
adc
adc
xor
aad
lods
test
push
push
add
insb
js
xor
xchg
scas
roll
test
cmp
cwtl
movsb
mov
test
add
cmp
outsl
mov
pop
je
rcrl
or
or
mov
lea
es
mov
mov
add
push
xchg
dec
rsm
push
or
lods
cld
enter
add
ja
mov
dec
aaa
mov
ljmp
jb
call
jle
adc
xchg
cmp
int
in
stc
jge
mov
or
orb
or
mov
aaa
add
int3
hlt
sub
arpl
sbb
xchg
mov
out
sub
add
pop
out
movsb
mov
push
sub
ret
jo
div
or
js
test
and
lahf
ljmp
push
cmp
lcall
ja
pop
pop
adc
xor
test
push
out
sub
adcl
pop
xor
je
addr16
pop
cmp
add
xor
inc
mov
sar
leave
decb
not
push
mov
sbb
and
mov
add
adcl
stc
sbb
adc
xor
repz
fdiv
mov
stos
ror
cs
lock
dec
test
inc
aas
adc
pusha
aas
inc
sbbl
cmp
or
cmpsl
fucom
jmp
dec
xor
add
add
or
movsl
sbb
je
jnp
outsb
fildl
shrl
cmp
shll
lods
sub
loope
mov
mov
mov
push
mov
dec
and
push
fsub
insb
pushf
pushf
add
mov
inc
add
mov
lds
int3
jg
out
stc
xchg
push
popf
decb
sub
lods
sub
in
ja
test
test
ja
sahf
sbb
pop
in
testb
mov
loope
cmp
hlt
out
jmp
es
ret
adc
in
inc
sbb
mov
jbe
insl
pop
in
cltd
clc
dec
xor
aas
sub
sbb
dec
xor
dec
push
les
mov
cli
ja
jne
cmp
psubsb
jns
loope
in
cmp
inc
jo
lret
lods
pop
enter
iret
repnz
lret
cmpb
out
fisubrs
xor
pushf
iret
fisubl
nop
scas
arpl
mov
mov
loop
cltd
adc
jmp
call
sbb
mov
sub
push
sub
xchg
adcb
sbb
inc
push
cltd
ret
or
pushf
push
mov
or
adc
pop
jns
movsb
jo
stos
aaa
lods
fwait
mov
pusha
jb
sbb
ds
ja
mov
push
imul
xchg
mov
push
in
roll
shll
cmpsb
push
mov
push
mov
out
das
popf
jp
test
push
icebp
ficoms
and
dec
aam
xchg
out
pop
and
sti
sbb
inc
test
mov
jge
fldl
mov
fists
rclb
push
sub
mov
movsb
cli
dec
and
add
repz
pushf
xchg
les
jmp
adc
sar
or
popf
in
add
fs
push
ret
in
inc
scas
fcomi
lods
inc
mov
dec
add
sbb
dec
cmp
cmp
fcomps
dec
lock
je
stos
inc
mov
rolb
xlat
sub
orb
sahf
cmp
adc
lahf
mov
pop
mov
fcmovbe
dec
or
icebp
int3
jno
mov
jmp
mov
push
pop
mov
rorb
pop
mov
rcrb
inc
outsl
pushf
inc
xor
pop
fsubl
cmc
sub
sub
pusha
test
loop
clc
jp
pop
out
mov
push
pop
mov
inc
fcos
mov
js
cmp
shrl
mov
imul
das
cmp
mov
into
lcall
pop
mov
adc
dec
leave
dec
add
loope
dec
into
lret
scas
push
mov
xor
scas
repz
mov
test
out
lods
cmp
mov
outsb
pop
or
pusha
pushf
or
hlt
leave
sub
add
jmp
mov
lret
imul
js
xor
xor
xchg
insb
mov
cmp
push
push
mov
cmp
stos
xchg
xchg
outsl
or
or
cltd
mov
pop
cmp
mov
adc
pop
hlt
incb
mov
fs
mov
daa
lds
movsb
stos
imul
add
scas
and
jecxz
push
push
pop
jg
in
lahf
push
outsl
add
insl
xchg
xchg
ret
in
lds
rcrl
mov
and
in
imul
rorl
xchg
test
cltd
pop
mov
bound
push
int3
cmpsl
mov
sub
sets
and
jbe
xchg
int
int3
aas
add
inc
aaa
cmpsl
enter
cmp
loopne
xor
pop
out
mov
dec
lret
stos
fnsave
jecxz
loop
insl
cs
jns
push
add
loope
push
es
or
out
iret
sbb
imul
mov
adcl
mov
sbb
imul
sub
push
ret
divb
mov
ljmp
arpl
sub
insl
xchg
lock
push
cmp
cmpsb
dec
int
int
xor
inc
jae
lea
dec
inc
js
push
insl
cmpsb
push
xor
and
add
sbb
add
mov
xor
fdivrs
xlat
cmp
mov
cmp
dec
add
adc
and
cmp
fsubp
sbb
sub
testl
xor
add
inc
ljmp
mov
divb
inc
sbb
sbb
scas
jp
fwait
jecxz
pop
imul
sub
mov
add
cmp
xor
lods
dec
mov
repz
push
insl
mov
movsl
push
mov
push
pop
jns
in
cmp
adc
std
pop
popa
xchg
in
and
nop
and
add
xchg
cmp
lods
mov
xchg
adc
mov
out
in
cmpsl
inc
aaa
xchg
adc
dec
shl
mov
ljmp
mov
xor
rcrb
popf
cmp
pop
les
cmp
int3
adc
jb
xor
popf
pop
call
pop
adc
sbb
mov
xchg
dec
fistpll
sub
xor
pop
dec
pop
cmp
push
aaa
add
mov
sbb
xor
push
shl
incl
sbb
pop
inc
cmp
gs
dec
loop
mov
add
mov
mov
test
in
jno
vpsllw
fidivs
in
cmp
stos
push
call
shrb
jmp
addr16
addr16
xlat
mov
pushf
je
int
out
cmp
fsubp
xchg
sbb
into
enter
xor
cmp
movsb
pushf
cs
pop
int
or
mov
push
jmp
dec
rcll
imul
insl
or
shlb
das
inc
pop
cmp
mov
sub
mov
cmpsb
xlat
in
sbb
out
cmp
lahf
mov
xchg
adc
fwait
push
stos
test
and
movsb
xor
mov
arpl
xor
jle
jnp
inc
mov
addb
xor
nop
pop
scas
pop
inc
push
mov
xor
das
add
rol
add
clc
addr16
jmp
inc
test
icebp
sub
inc
scas
cmp
mov
mov
adc
arpl
xchg
dec
mov
dec
mov
push
adc
enter
in
insl
int3
jno
fsubrs
in
lock
jg
push
sub
mov
int
test
stos
int
pushl
and
jle
cltd
xchg
pop
add
imul
loope
mov
inc
mov
cmp
lods
js
adc
test
ds
scas
out
test
xor
push
cmp
loopne
jecxz
adc
add
iret
xchg
jmp
js
adcl
adc
mov
js
xchg
xchg
ss
ficomps
jp
andl
loop
stc
mov
push
xor
jge
dec
cmp
sbb
xchg
push
mov
cmc
adcl
mov
mov
pop
sub
sti
imul
stos
cli
shrl
or
and
out
pop
sahf
daa
push
lods
inc
inc
jp
jne
cmpsl
addr16
shrb
xlat
xchg
stos
ret
pop
shl
add
xchg
in
scas
pop
mov
lods
xchg
add
pop
aad
pop
push
in
dec
repnz
arpl
cmp
jae
cld
lock
push
sub
pop
sub
aaa
mov
sti
cmp
sahf
out
movl
inc
sbb
mov
cmpsl
sahf
cmc
inc
sbb
mov
fisubl
addb
fsubs
and
and
xlat
xchg
jbe
fs
imulb
lcall
adc
add
xchg
sbb
pop
daa
push
sbbl
les
cmp
insl
sub
in
or
pop
add
inc
cmp
fstpl
test
idivl
sbb
repnz
outsb
cwtl
js
sarl
pop
hlt
pop
js
adcb
fidivrs
dec
fldenv
testl
push
notl
dec
ret
scas
jl
jae
inc
sarl
call
shll
int
pop
fmul
popa
jbe
cmp
xor
mov
scas
mov
sub
dec
pop
cmp
in
sbb
mov
stc
mul
jmp
mov
mov
push
mov
or
adc
lahf
stc
inc
xlat
fstps
into
fwait
sbb
out
xor
add
movsl
jbe
jne
push
mov
movsb
cmp
sub
lock
movsb
sub
test
lret
mov
mov
jo
sub
inc
loop
lea
jmp
adc
pop
les
pop
xchg
pop
jmp
imul
enter
mov
or
dec
adc
popl
sahf
sti
sub
sti
rclb
int
repz
lock
push
sub
sub
xor
fcoml
scas
adc
pop
adc
and
xchg
cli
jmp
mov
xchg
nop
pop
xchg
inc
pushf
call
insb
cwtl
mov
mov
pop
inc
xorl
xlat
ja
pop
mov
in
test
adc
enter
cmp
xchg
push
sbbl
cmp
mov
hlt
dec
inc
mov
push
push
repz
pop
jbe
adc
jno
orb
jle
js
into
adc
aad
scas
xlat
dec
mov
and
pushf
add
inc
xor
jp
nop
xorl
stos
dec
test
push
xchg
cmp
scas
push
xchg
mov
mov
lods
data16
cmp
jg
setne
sub
mov
push
push
jbe
rorl
movsl
aaa
mov
jmp
xor
and
and
rcrb
shl
fucomip
pop
jno
dec
lahf
pop
stos
sbb
in
cmp
xor
fwait
push
out
pop
rcll
loope
pop
sbb
and
shlb
out
push
lods
imul
ja
and
in
or
cmc
mov
fdivrs
sub
push
xor
outsb
je
sub
xchg
adc
inc
sti
icebp
call
lahf
and
push
mov
dec
push
std
sub
pop
lods
test
ret
mov
pop
ret
fisubs
addl
or
or
xchg
mov
push
fmul
mov
pop
mov
mov
adc
shll
test
bound
notl
mov
mov
and
inc
and
fldenv
sahf
mov
lahf
push
pop
cltd
or
je
jl
cmp
movsb
movsl
jge
cltd
enter
scas
xchg
cmp
inc
mov
sahf
jp
jnp
je
fcompl
js
ret
push
push
xlat
cmp
decl
out
sbb
imul
lcall
shl
mov
push
xor
mov
adc
das
xor
xchg
pop
pop
xor
scas
fistpl
mov
push
scas
cld
test
popf
cld
out
movsb
jnp
pusha
or
add
sub
call
sub
pop
test
add
sti
add
clc
out
sbb
cltd
fldt
lcall
pop
out
daa
mov
outsl
hlt
ret
in
ss
add
dec
fildl
jg
in
cmp
cltd
sub
imul
popf
and
xor
in
rcr
gs
and
xor
rclb
hlt
xchg
in
rcl
rolb
push
daa
fucomip
pop
sbb
aaa
and
sbb
ss
inc
sub
inc
jnp
divl
mov
lods
cmp
mov
push
inc
imul
jne
fs
cmp
mov
mov
or
jp
daa
aad
cltd
loope
ror
inc
pop
cmc
mov
or
mov
xor
xchg
lahf
or
sub
andl
js
pop
cltd
icebp
xor
pop
jp
loope
and
stc
das
jg
add
inc
fwait
or
enter
sub
pop
sbb
lds
jno
ljmp
push
stos
in
dec
adc
push
hlt
das
repz
xchg
mov
and
cmpsb
push
enter
push
hlt
or
data16
ret
pop
sub
pop
mov
add
cmp
cmc
int
jecxz
mov
stos
outsl
xchg
cwtl
int3
pop
pop
push
popf
imul
adc
mov
into
or
ja
or
jbe
dec
sub
sub
repz
pop
shlb
mov
mov
sti
dec
icebp
lret
fwait
inc
cmpsb
in
xchg
sbb
inc
in
scas
xchg
push
pop
push
push
jle
iret
aas
sub
lds
jns
and
aam
mov
mov
popa
jno
in
popa
ja
add
sbb
lea
pop
cs
cli
repnz
in
or
rorl
jne
add
inc
outsb
sub
out
sbb
mov
pop
jns
mov
shll
negl
sarl
mov
cmp
jmp
sti
cli
out
add
dec
mov
cmp
fdivl
jl
jbe
mov
subb
sub
sub
mov
dec
loopne
fs
test
sub
or
in
push
setl
push
push
mov
ret
mov
adcl
cld
ja
sub
lret
and
not
js
lods
jg
ficoms
xor
cltd
es
std
lret
xor
out
jmp
inc
push
cmp
and
mov
mov
xchg
ret
arpl
fldl
pop
mov
in
pusha
and
jo
cmp
push
mov
mov
lret
inc
movsb
in
jle
mov
stc
cmc
imul
stos
stos
mov
dec
sub
xor
push
daa
aad
arpl
xor
sbb
jb
out
test
lods
cwtl
adc
in
in
push
sbb
aaa
or
outsl
shlb
jbe
in
out
insb
mov
adc
cwtl
xor
and
into
addl
and
dec
lcall
popf
xchg
mov
dec
jne
rcll
cltd
adc
mov
pusha
ret
ss
add
adc
pop
mov
aas
add
loope
pusha
pop
mov
xchg
push
cbtw
push
cld
sub
int
xchg
jle
push
out
mov
mov
rol
mov
jg
sub
jp
repz
out
leave
mov
fidivrl
cmp
pop
sbb
outsl
push
addr16
scas
fnsave
pusha
in
cmp
out
in
gs
jnp
inc
stc
pop
mov
cmp
pop
sub
sbb
insl
sbb
out
dec
jnp
in
enter
test
xchg
cmp
loopne
dec
dec
and
movsb
mov
mov
int
mov
test
jae
bound
rclb
mov
or
mov
pop
hlt
adc
dec
sti
pop
arpl
repz
jbe
push
inc
mov
mov
test
cmpsb
add
mov
icebp
push
pusha
int3
inc
test
scas
mov
inc
dec
push
mov
inc
push
shl
add
inc
in
and
mov
into
pop
ficoml
sub
and
mov
mov
mov
shr
scas
fs
aad
fs
add
mov
cmp
mov
aas
xorb
mov
xchg
sub
and
pop
mov
xlat
clc
mov
pop
pop
push
inc
cmc
dec
mov
enter
add
dec
push
fmul
sub
aam
stos
cmp
add
stos
jp
add
scas
les
cmp
xchg
inc
pushf
pop
sbb
into
test
jmp
adc
enter
daa
insb
jb
pop
hlt
cmp
xchg
sub
dec
pushf
push
push
int
test
mov
xchg
insl
mov
data16
fs
incb
ljmp
mov
adc
ud1
insl
cmpsl
jecxz
test
inc
in
push
mov
aam
loop
pop
cmpl
or
test
pusha
and
jp
mov
jmp
outsb
sub
imul
int3
cmp
nop
lock
fbstp
inc
sti
pusha
je
mov
xor
cmp
or
test
jle
fcmovu
xchg
in
adc
shl
repnz
push
xor
jo
dec
sbbb
inc
aaa
sahf
fcom
sbb
jbe
into
inc
cmp
pop
leave
cmp
jp
add
mov
sbb
xor
pushf
rclb
pop
int
sub
push
xchg
out
call
lret
mov
cwtl
pop
xor
jle
ret
fstl
xchg
lds
mov
mov
pop
mov
inc
je
sbb
insl
test
addr16
dec
push
xlat
repnz
and
sub
pop
fwait
add
cmp
insl
push
sbb
rclb
add
fistps
and
je
sbb
test
mov
xor
out
cmpsb
jbe
fnstsw
mov
jp
xor
jbe
sub
arpl
sarl
mov
lret
fcomps
mov
xor
in
cmpsb
in
add
jbe
or
inc
and
lods
adc
sub
mov
movsb
jge
xchg
xchg
daa
shrl
popf
pop
lret
out
jne
cmc
or
test
mov
pop
fs
and
int3
test
test
inc
jp
dec
ja
push
jl
aaa
mov
add
mov
je
pop
lret
pop
sbb
or
dec
ds
stos
lds
mov
ja
mov
cmc
test
rorl
js
movl
fdivrs
jae
sarl
mov
outsl
jp
fcmove
jg
out
or
clc
shll
repnz
xchg
aaa
icebp
fucomp
insb
ret
data16
fs
scas
ficompl
movsb
in
jns
push
fst
mov
movsb
movl
xor
lds
adc
ss
pop
mov
cmp
add
faddl
mov
pop
sbb
fisttps
xor
mov
mov
dec
mov
lret
nop
jle
push
repnz
jnp
fwait
jge
icebp
repz
push
or
mov
xchg
pop
mov
mov
call
loop
jns
loopne
cs
pop
inc
dec
and
fiaddl
inc
popf
inc
xchg
sti
sar
inc
lods
xchg
fistpl
inc
subl
inc
or
mov
or
xchg
and
orb
enter
aad
sub
push
or
and
outsl
loopne
jne
popf
std
or
add
fnsave
mov
push
jae
and
jmp
mov
mov
outsl
jecxz
add
push
popf
add
jo
hlt
repnz
cmp
add
pop
clc
or
jo
xlat
xchg
xchg
repnz
add
add
into
pop
enter
je
shrb
aam
push
pop
and
lods
ss
xor
mov
icebp
clc
inc
jnp
push
cmp
pop
mov
inc
shr
repz
pushf
cmp
adc
ljmp
cwtl
in
jb
clc
mov
inc
ffree
cmp
mov
scas
stc
jns
enter
push
pop
jge
lea
or
aaa
push
into
mov
movsl
movntps
je
imul
repnz
xchg
cmp
popa
push
push
pop
inc
sub
call
push
inc
dec
imul
dec
pop
sub
mov
daa
mov
xchg
roll
imul
mov
dec
inc
insb
dec
push
xchg
jp
cli
inc
jno
or
mov
mov
xchg
mull
stos
repz
in
jecxz
pop
or
cmp
push
sti
adc
cmpsl
popa
jl
mov
adc
cmp
idivb
je
jg
mov
xchg
pushf
mov
cmc
add
cmc
rcr
mov
jae
imul
fistpll
std
mov
fisttpll
jge
inc
jecxz
repnz
or
pop
aas
faddl
mov
data16
movsl
pop
jmp
mov
dec
rorb
inc
lods
incl
and
out
ret
dec
lods
lods
popa
xchg
inc
inc
push
mov
into
push
inc
js
cmp
fcompl
sbbl
fsub
xor
cmpsl
or
ret
mov
jo
push
mov
stos
push
lds
fiadds
mov
push
cs
sbb
cmp
das
out
mov
push
nop
adc
xchg
jo
xor
push
divb
jne
pop
jnp
sar
je
enter
add
xorb
pop
push
and
mov
icebp
repnz
out
push
out
into
mov
inc
lahf
inc
cmp
xchg
test
imul
sub
jg
mov
int
jno
js
mov
push
jno
jmp
xor
or
ffree
pop
jns
into
scas
mov
cli
pop
adc
xchg
movsl
loop
lret
rorl
fbld
cmpsl
mov
lret
mov
push
push
aas
xor
lock
or
xchg
adc
insb
or
daa
mov
adc
mov
dec
inc
out
ret
lods
rcrl
dec
cmpsl
cmp
xchg
mov
jnp
stos
negb
sbb
xchg
popf
insb
mov
push
mov
inc
imul
in
outsl
int3
and
dec
rcll
add
pop
roll
or
movsb
addr16
pop
in
pusha
aas
lret
test
jo
je
jle
test
push
fisubs
xor
xor
cwtl
sbb
jae
adc
adc
jg
clc
test
neg
push
call
jne
fwait
iret
shl
pop
fucom
mov
mov
addr16
jo
mov
mov
shll
xchg
jns
cltd
in
fldenv
jecxz
jns
jmp
mov
or
adc
lcall
dec
in
orl
iret
andb
mov
addr16
jge
cmp
pop
mov
popf
mov
or
fwait
loope
popf
data16
dec
sbb
repnz
sub
mov
pusha
pop
jmp
push
add
in
hlt
daa
cmp
xchg
dec
mov
inc
pop
test
out
add
test
ss
push
bound
dec
cli
out
push
mov
in
and
mov
clc
mov
sbb
fldt
adc
xor
subb
sbb
xchg
cmp
pop
pop
rcrl
rolb
dec
fldenv
pop
imul
dec
testl
cmpsb
cmpsb
xor
push
mov
push
push
add
repz
sub
popf
sub
out
inc
sbb
int
jp
icebp
mov
mov
test
or
mov
inc
sub
adc
dec
js
lock
cmp
popa
jp
adc
or
mov
stc
stos
in
cmp
test
xchg
or
jmp
or
cmpsl
xor
fsubl
pop
jp
jns
jg
cmp
repnz
into
in
addr16
out
pop
cmp
xchg
adcb
or
imul
lahf
sub
stos
lods
pop
pop
adc
lcall
std
popa
out
push
xchg
xor
inc
stos
dec
mov
les
aad
jl
jg
shlb
arpl
movsb
repnz
adc
or
mov
sbb
inc
fneni(8087
mov
enter
xchg
outsl
lahf
push
ja
inc
pushf
scas
inc
dec
outsb
push
jne
stos
orb
jp
xchg
xor
aaa
adc
push
ret
mov
sub
pop
dec
sbb
mov
das
sbb
sub
mov
cmp
xchg
pop
inc
sbbb
shlb
test
and
push
lret
xor
lods
lea
mov
scas
xchg
hlt
and
or
out
mov
cli
xchg
test
mov
xlat
jg
cli
xor
aad
xchg
mov
dec
mov
or
jp
xorb
outsb
sbb
in
cmc
mov
stos
mov
stc
push
and
orb
jne
jecxz
js
aam
lahf
jns
mov
add
fadds
mov
cmc
insb
sbb
fildl
pusha
loope
dec
add
hlt
popf
jp
adc
test
add
push
mov
mov
popf
sub
int3
popf
xchg
lret
mov
scas
mov
adc
nop
and
xor
ss
test
or
cmpsb
add
and
adc
mov
sub
sbb
bnd
fistps
in
repnz
nop
sub
int3
addl
hlt
push
loopne
pop
jbe
lret
ja
aas
leave
jo
mov
stos
and
sub
scas
clc
xor
std
jae
jmp
insb
into
xchg
adc
inc
hlt
out
dec
cmc
and
nop
dec
sub
in
ss
dec
bound
xchg
cmp
mov
cs
inc
lea
push
movl
out
pop
dec
icebp
dec
sbb
sahf
gs
lds
fwait
enter
loop
or
stc
icebp
or
add
xchg
out
pop
mov
stc
xchg
adc
xor
or
fldenv
ljmp
fninit
popa
scas
daa
lret
or
xchg
fucomp
sub
test
or
cltd
cmp
sbb
push
dec
dec
std
inc
pop
testb
std
adc
dec
dec
lcall
mov
out
jb
mov
xchg
sahf
and
xor
sbb
xlat
cmpsl
loop
gs
jo
adc
clc
les
mov
adc
lret
icebp
and
xchg
push
sub
push
out
add
mov
sub
shrl
add
in
sbb
mov
das
js
jae
xchg
lret
sub
push
cltd
mov
sti
adc
dec
seta
or
or
push
aas
popa
mov
lds
sub
aam
mov
jno
mov
fld
out
and
ret
xchg
ds
mov
imulb
pop
or
and
mov
sbb
fadds
inc
inc
lods
das
sbb
enter
mov
xchg
fsubr
sbb
and
jmp
daa
movl
repnz
cmp
sub
and
imul
dec
sbb
ret
and
jns
std
push
fsubl
push
outsb
jl
jmp
jae
or
jne
outsb
xchg
adc
scas
mov
enter
leave
mov
ss
cwtl
pop
fwait
outsl
lea
int
adc
sbb
sbb
mov
popa
inc
inc
in
ret
mov
inc
pop
pop
adc
jno
lea
std
sub
or
fistpl
xor
dec
or
sti
imul
pop
shl
imul
push
mov
jae
add
xchg
push
xchg
xor
sub
cmp
addr16
push
sbb
gs
aas
add
dec
mov
dec
cmc
repz
mov
ja
inc
movzbl
cmp
divl
pop
mov
pop
mov
js
adc
mov
pop
into
pusha
les
fnstsw
mov
pop
lcall
or
loop
in
or
pop
adc
rcrb
pop
jl
cmp
dec
dec
pop
sbb
out
mov
lahf
dec
xchg
mov
mov
outsl
dec
sbb
test
shr
xchg
in
leave
outsb
sub
sub
fstps
xchg
or
das
int3
mov
outsb
mov
int3
adc
jnp
and
sbb
mov
mov
lcall
into
and
cmp
dec
stos
mov
cmp
sbb
xchg
jmp
add
dec
fistl
loop
dec
mov
xchg
or
sti
sbb
push
das
jmp
or
dec
inc
jb
fs
stc
stos
mov
or
mov
rorl
leave
rcll
test
push
aaa
xor
xor
sub
fdecstp
enter
pop
add
lret
add
cmp
push
xchg
shll
mov
pop
andb
fst
int
cmp
sarl
xchg
arpl
or
scas
cltd
push
xchg
lock
cmp
sub
xor
les
movsl
jae
dec
and
addr16
or
adc
roll
imul
xchg
inc
push
push
cmpl
pop
sbb
mov
imul
lahf
push
mov
cmpsl
ss
out
cltd
dec
popa
shlb
lcall
jmp
push
nop
lcall
dec
mov
dec
mov
cmp
push
xor
push
bound
mov
cmp
lret
insb
lea
addr16
clc
mov
push
jecxz
and
sbb
xchg
lcall
sarl
cli
sbb
sbb
shlb
jnp
je
jmp
movsl
les
or
jno
fdivl
in
rclb
pop
lahf
pop
daa
leave
push
xor
xchg
lds
add
pop
in
jb
add
jb
cvtps2pd
out
repnz
test
js
xchg
mov
stc
popa
test
ljmp
push
mov
adc
add
iret
push
sub
sbb
shlb
negb
sbb
pushf
mov
jne
dec
adc
mov
add
cmp
add
dec
stos
xor
nop
call
mov
push
push
pop
adc
jl
adc
cmp
lea
rcrl
xor
rclb
push
cmpsl
dec
push
jecxz
adc
lahf
sbb
or
cmp
inc
xchg
mov
pop
dec
cli
push
mull
lea
test
test
lods
pop
testb
or
testb
lea
in
jb
add
sbb
call
enterw
mov
mov
or
testl
ret
mov
sarl
fidivs
or
sbb
push
loope
lret
stos
add
daa
in
pop
pop
dec
dec
mov
shlb
mov
loop
aad
fidivs
loop
add
mov
add
push
sbb
addr16
xchg
ret
pop
jne
or
add
cwtl
insl
push
and
mov
xchg
cmp
mov
out
out
sbb
pop
daa
cmpsl
jns
in
faddl
aad
nop
ret
inc
bound
sub
or
jnp
add
fwait
cmp
inc
xchg
push
dec
xlat
jecxz
fisubrl
daa
sahf
mov
cli
xchg
jp
fwait
pop
xchg
nop
push
mov
mov
push
mov
push
jle
jmp
rorb
data16
out
sub
add
cmp
arpl
lret
repz
pop
scas
sbb
adc
xchg
es
lods
popf
jge
std
sbb
int3
mov
push
sbbl
pop
clc
negl
repnz
jne
cmp
rorb
sbb
jl
sbb
out
int
mov
cmc
std
mov
imul
lock
mov
cmp
mov
sub
das
sarl
mov
jae
cmp
test
mov
data16
cltd
aaa
xchg
outsb
out
and
xlat
xor
es
sbb
out
lods
stos
jae
test
jne
xor
adc
dec
and
std
mov
imul
imul
dec
or
pop
cmp
xchg
pop
push
negb
iret
sbb
lea
cltd
shl
mov
jbe
adc
jge
shll
enter
cmp
out
add
xchg
int3
lea
push
mov
ss
adc
inc
mov
in
clc
hlt
cmp
loope
mov
lcall
int
loope
inc
inc
and
xchg
mov
dec
and
fdivl
sarb
pusha
lds
jl
jg
ljmp
jmp
shll
aas
push
out
imul
cmp
inc
stc
cmp
shrb
and
xchg
pop
js
pop
xor
jl
pop
mov
cmp
or
imull
sbb
aas
enter
pop
mov
adc
push
xor
push
mov
mov
cwtl
cwtl
bswap
movsl
xor
test
mov
inc
fnstcw
xor
cld
ds
jecxz
cmp
mov
cltd
nop
icebp
adc
push
xor
cld
out
loope
mov
mov
xor
and
ret
cmp
dec
jo
jno
jmp
pop
xchg
fstl
fidivl
iret
out
push
fwait
out
rcll
add
lret
mov
test
pop
cmc
pop
addr16
add
mov
and
imul
fs
inc
hlt
push
xchg
fstps
mov
test
xor
push
ret
das
xorl
out
test
sub
add
daa
andl
stos
pop
push
jp
mov
scas
popf
jb
mov
hlt
enter
movsl
push
sub
ss
leave
xchg
or
out
cmc
add
out
xor
maskmovq
negl
cmpl
pop
add
push
data16
loopne
popf
dec
mov
or
mov
cmp
jge
jne
xchg
cmp
sti
lahf
divl
cld
push
ss
int
sub
ror
int3
fildl
ficomps
fldcw
daa
out
xchg
nop
cld
fidivs
pop
aad
xchg
pop
jle
xchg
sti
lods
pop
test
mov
mov
jnp
jl
push
scas
mov
scas
cmpsb
jo
ficoms
push
adc
test
jp
scas
call
out
cld
test
gs
cmp
mov
mov
push
xor
insb
cli
lods
cltd
sbb
int
dec
test
fnstsw
clc
xor
cmp
je
inc
rol
lods
or
sbb
push
mov
lds
cwtl
mov
cmp
pop
lcall
cmc
xor
or
pop
jmp
test
cmc
lock
hlt
test
ljmp
xor
pop
dec
adc
ret
loope
mov
pusha
cwtl
test
shll
das
dec
test
sbb
or
adc
lods
inc
faddp
in
aas
jmp
fistpll
mov
inc
cmp
out
inc
mov
dec
adc
iret
movsl
call
lahf
cmp
sub
leave
scas
fdivs
repz
in
call
out
les
xor
out
icebp
lods
fmull
jne
enter
rolb
cmp
xor
dec
sbb
mov
int3
scas
fldt
inc
setne
cld
cmp
push
and
adc
xchg
mov
data16
insl
push
pop
dec
xor
cmpsl
in
out
push
lds
ljmp
outsl
rclw
push
pop
sbbl
add
push
out
aam
mov
in
arpl
shlb
adc
lcall
mov
push
cmp
and
add
jg
pop
cs
sbb
aaa
or
push
xchg
and
dec
jb
dec
mov
aas
jnp
ret
push
das
cmpsl
push
fisttps
inc
cmovl
shr
shlb
loop
aam
scas
dec
das
stos
mov
outsl
movsb
xchg
jg
repz
data16
cltd
pop
sub
mov
push
cmpsl
outsb
mov
gs
lods
fdivl
adc
cmc
ja
enter
dec
push
jmp
repnz
mov
nop
aam
fmull
outsb
inc
addb
cmpb
pop
xor
dec
dec
sarl
cmp
lds
jecxz
push
push
mov
in
popa
or
outsl
xchg
mov
into
fistl
sub
clc
ficomps
or
dec
mov
sbb
test
xor
cmpsl
dec
sub
push
cmp
shlb
mov
xchg
test
jge
lods
scas
sbb
jns
andl
outsb
fbld
sub
jg
into
enter
das
jno
aam
pushw
xor
mov
add
cmp
movsb
jnp
loope
bnd
xchg
or
mov
daa
jmp
scas
pop
movsb
xlat
and
add
enter
xchg
inc
fnstcw
daa
in
cmp
sbb
and
aas
jnp
mov
push
cli
inc
sub
mov
or
jg
shrb
loope
fistps
xor
into
sarb
sub
cld
mov
mov
jmp
bound
jno
push
mov
xchg
test
insb
icebp
inc
ja
and
ret
add
push
call
jno
jge
dec
loop
ja
ficoml
lods
sub
sub
out
stc
daa
adc
stos
scas
rclb
or
jp
pop
mov
inc
icebp
inc
xchg
sub
ret
mov
xchg
scas
cwtl
stc
sahf
mov
pop
sub
lcall
mov
push
aam
aas
aam
xchg
push
int3
popf
jae
push
cmp
jno
pop
sub
andl
lahf
add
aad
mov
jl
mov
mov
sar
xor
test
andb
sbb
lods
mov
mov
or
cmp
push
inc
fs
sbb
pop
arpl
mov
sub
sti
js
paddsw
decl
push
and
mov
sbb
popa
sub
cmp
xchg
xchg
loop
cwtl
ret
rolb
mov
add
fmulp
loop
pop
std
stos
cs
push
mov
stos
sbbb
cmp
pop
push
inc
out
mov
rcrb
mov
sbb
jae
inc
sti
shl
mov
and
je
xor
and
andl
push
and
and
fidivl
xorb
bound
push
push
ret
leave
adc
fistpll
inc
cmp
test
clc
and
stos
mov
movsl
inc
call
add
sbbl
push
ret
fimull
ret
pop
repnz
fldl
xchg
push
cltd
or
cmpsl
or
pop
lods
cmp
sub
out
into
inc
mov
dec
mov
je
pop
and
shl
movsl
xchg
ljmp
pop
clc
out
outsl
js
sti
sub
and
loopne
pop
test
xchg
inc
add
mov
test
mov
sti
adc
add
je
icebp
lods
fcmovnb
outsb
inc
fwait
shll
push
push
rclb
cmp
push
mov
push
fdivl
add
jo
jbe
dec
pop
cmpsb
in
xor
pushf
dec
xor
ret
aam
push
sbb
fldl
add
mov
rorl
xor
loopne
add
adc
mov
adc
xor
lret
jg
dec
mov
cmpsl
or
add
rcll
out
into
xchg
les
lret
inc
mov
push
movsl
jnp
repz
mov
push
in
stos
cmp
iret
pop
pop
loop
fisttpll
lds
dec
lea
mov
ret
mov
mov
dec
mov
dec
xor
stos
mov
ss
adc
rolb
mov
popf
dec
mov
mov
sub
comiss
outsl
fidivrs
xchg
out
std
scas
mov
push
psllq
and
sahf
ds
ds
inc
je
mov
inc
stc
inc
inc
xchg
dec
cli
outsl
int
add
ret
and
xor
mov
subb
jge
sub
mov
das
pop
adc
add
sub
std
mov
mov
addr16
mov
clc
jp
mov
stc
sbb
xchg
sti
mov
negb
fstps
popf
xlat
das
in
adc
or
decb
xor
push
lret
sti
inc
dec
imul
sahf
loopne
dec
or
out
and
fucomp
jae
or
ds
out
xchg
dec
inc
shrb
push
outsl
daa
adc
push
sarl
nop
xchg
xor
cmp
rclb
cmpsl
fstps
lock
sub
mov
addr16
cmc
xchg
les
jp
mov
outsl
xchg
xchg
dec
sbb
das
sti
push
cmp
in
call
fsubrp
pop
xor
pop
jp
subb
hlt
arpl
mov
mov
inc
jle
js
out
mov
add
jne
jg
jecxz
jno
fdivr
jmp
or
adc
mov
xchg
adc
inc
mov
test
in
clc
push
leave
mov
es
jl
cwtl
outsb
mov
mov
mov
out
mov
repnz
sbbb
jecxz
loop
xor
ss
jbe
pop
loopne
call
stc
cmp
scas
mov
pop
in
inc
stos
cmp
jns
sarl
inc
cltd
stc
cvtps2pi
rcrb
test
adc
push
and
les
pop
test
add
int3
roll
fmuls
ss
test
mov
and
icebp
mov
in
ljmp
sub
cld
fxtract
pop
pusha
int3
daa
mov
or
ret
out
dec
loope
fimuls
adc
mov
mov
pop
mov
jg
push
cs
inc
cltd
fs
out
imul
adc
das
sbb
aad
inc
push
adc
mov
pop
adc
aaa
hlt
lea
mov
popfw
xor
iret
cmp
insb
xor
test
mov
push
or
imul
es
std
mov
dec
in
lock
mov
dec
mov
push
xchg
mov
mov
or
add
aad
mov
mov
mov
ret
imul
bound
ljmp
dec
inc
aam
pop
dec
push
cmp
dec
mov
xchg
fldenv
mov
das
push
mov
cltd
xchg
int
aas
cmc
dec
push
sbb
mov
insb
push
pusha
mov
add
out
ret
mov
or
adc
add
out
cmp
mov
hlt
sub
cld
arpl
sti
xchg
jl
sub
mov
push
inc
data16
shrl
inc
dec
mov
mov
movsl
pusha
dec
pushf
inc
xor
hlt
and
loope
in
out
mov
cmc
cmpsb
push
loope
inc
push
or
jmp
pop
addb
xchg
mov
sub
ja
hlt
jg
shrl
pop
mov
aaa
nop
jo
mov
dec
or
adc
push
data16
outsb
inc
jecxz
and
and
outsl
mov
cmc
jb
lahf
mov
push
insb
icebp
add
aam
insl
retw
push
xchg
out
stos
xchg
sub
sbb
arpl
sbbb
cmpsb
into
jmp
lds
loopne
mov
fptan
shlb
adc
xor
push
je
es
push
mov
mov
leave
sahf
xor
lods
out
int
mov
pop
mov
scas
fnsave
push
cmp
jp
aaa
data16
xchg
push
push
xchg
popa
fsub
rcll
cmpb
shrb
cmp
jno
pop
or
pop
sbb
adc
jns
jnp
pusha
cmpsw
mov
in
outsb
cmp
out
inc
dec
pop
sbb
inc
rolb
xor
cmpsb
or
cmp
mov
or
enter
lods
push
mov
popa
out
das
mov
xchg
lods
jp
jle
aas
popf
dec
push
jns
outsl
mov
arpl
lods
lods
in
and
scas
sbb
outsl
fxch
inc
out
xor
jmp
mov
cltd
push
ljmp
pop
pop
pop
mov
in
scas
push
js
inc
mov
xorl
mov
mov
test
push
mov
jp
cmp
jl
outsb
sub
movsb
jne
or
icebp
adcb
das
cmp
push
pop
stos
push
outsb
test
stos
dec
pop
dec
push
popa
test
scas
sub
pop
pcmpgtb
sbb
jg
add
inc
inc
push
sbbl
mov
or
cmpsl
add
cmp
int3
js
bswap
ret
sub
jl
ret
add
inc
in
push
loop
out
adc
les
cmpb
pop
sahf
imul
repz
dec
js
fwait
lahf
jnp
aam
xchg
sti
test
or
and
lods
ret
stc
outsb
ret
rcll
test
jl
mov
and
loop
bound
mov
popf
mov
movsl
loope
push
std
push
sti
das
inc
out
mov
sub
aam
cmp
fwait
pop
push
mov
cld
push
sub
mov
test
bound
into
jo
push
fstl
insb
adc
stos
cmpsb
sub
cmp
lret
pushf
and
cmpb
adc
mov
arpl
js
fsubs
or
and
ret
jae
clc
sbb
std
scas
and
xchg
lahf
ljmp
loopne
cld
imul
popfw
enter
dec
lahf
pop
pop
dec
dec
out
mov
imulb
dec
push
aad
jns
outsl
fcmovnb
or
pop
arpl
push
insb
stc
xchg
ds
movsb
cmp
jo
lret
cmp
imul
jns
push
and
pushf
xchg
xadd
enter
lahf
sub
cltd
mulb
addb
mov
add
out
xor
mov
jns
test
xchg
movsb
xlat
sub
in
aaa
mov
xor
ficoms
push
xor
add
cmpsl
subb
fmul
xchg
dec
popf
repnz
or
test
in
movsb
adcl
cmp
push
cmc
adc
mov
sub
cld
out
and
js
inc
push
push
arpl
jle
sub
mov
mov
xlat
xor
push
mov
pop
dec
push
xorl
adc
mov
xchg
mov
bnd
mov
xchg
loopne
pop
add
daa
add
xchg
mov
or
xor
lods
pusha
lods
ljmp
stos
adc
insl
orl
and
int3
inc
rcrb
enter
adc
stos
and
test
jmp
in
pop
xchg
pop
popf
mov
inc
stos
add
stos
mov
mov
mov
xchg
aad
pop
jnp
cs
out
jl
inc
add
jp
dec
jecxz
pop
mov
lods
jmp
js
adc
fadd
fsub
sti
adc
and
or
icebp
xchg
xor
hlt
sub
and
mov
sbb
ja
sub
cmc
fsubl
mov
in
xchg
sti
jge
scas
sub
push
dec
cwtl
push
push
sbb
dec
xchg
scas
cmpsl
push
xor
cwtl
push
pop
mov
jl
sub
notb
jb
sub
add
push
xlat
jb
add
dec
insl
es
imul
in
sbb
mov
sbb
jno
lods
cltd
pop
xlat
out
ret
add
jmp
push
rcl
or
mov
ds
out
cmpsl
in
repz
in
cmc
xor
cld
inc
aam
aad
idivl
pop
push
push
fsubrs
popl
lds
sbb
movsl
push
xchg
fiaddl
or
cmpsb
mov
pop
ds
pop
aas
pop
xlat
je
sti
cld
loope
mov
add
inc
jnp
push
into
cs
loopne
push
cmc
ret
stos
fimuls
lret
mov
mov
in
lods
sbb
push
pop
lock
mov
inc
repz
sbb
int
adc
dec
push
mov
push
aaa
or
push
clc
test
pop
cwtl
fmull
push
dec
xor
add
bound
js
test
fdivrs
jle
sbb
fwait
pop
outsl
std
divb
in
add
sti
out
pop
jo
iret
or
xchg
fsts
jmp
ret
jns
es
inc
jmp
xchg
loopw
adc
pop
mov
push
cmp
inc
mov
push
adc
and
aaa
loope
or
icebp
stos
xchg
fisttpll
jge
mov
loopne
sub
dec
aaa
and
or
jmp
pop
and
lahf
jne
and
jo,pt
cs
sbb
push
xor
xor
test
aad
stos
add
int3
cmpsb
and
mov
ljmp
aas
and
push
adc
fwait
add
fsubs
mov
push
addb
shll
pusha
push
pop
fadd
leave
jmp
push
jecxz
xor
adc
cs
loopne
popa
sub
cmpsb
mov
mov
push
add
mov
stos
jecxz
add
inc
inc
icebp
sub
jge
ljmp
jle
js
xor
xchg
adc
or
sub
scas
adc
test
scas
mov
fldt
aam
mov
addb
jns
sbb
fdiv
adc
xchg
jmp
ds
in
and
or
in
cwtl
add
stc
cmp
sbbl
test
mov
movsl
std
dec
daa
xchg
divl
dec
ret
xchg
lea
pop
or
in
int
dec
sub
mov
jp
mov
popf
sbb
mov
sub
mov
jg
and
mov
sub
or
test
adc
sbb
addb
or
push
sub
stc
aad
outsb
add
outsb
arpl
aam
stc
add
inc
testb
xchg
xchg
push
xor
push
mov
add
and
mov
and
mov
add
dec
into
loopne
or
add
insb
sub
fcoms
pop
jg
inc
popa
pop
mov
cmp
lds
inc
mov
addr16
ss
cmp
pop
sub
imul
pop
adc
adc
adc
repnz
lcall
push
mov
test
and
jl
xor
sbb
in
pop
mov
mov
test
in
adc
pop
fistpll
jno,pn
cmp
pop
pop
fisttps
lea
ja
push
mov
xchg
mov
ja
add
aas
pushw
mov
ja
fchs
mov
push
push
mov
fcos
ljmp
inc
mov
push
inc
in
cwtl
sbb
pushf
add
mov
pop
mov
shlb
data16
sbbl
add
inc
inc
push
in
lods
fninit
rorb
xchg
xor
sub
jle
pop
jno
notb
sub
cmp
cmp
enter
push
mov
and
jle
pop
or
out
pop
negb
divl
sbbb
aad
imul
test
push
jns
lcall
loope
das
jae
mov
aaa
add
loope
notl
cmpsl
stos
or
cmc
sub
nop
sbb
int3
test
sub
out
out
fs
xchg
loopne
add
or
adc
xor
adc
mov
adc
cmpsb
loope,pt
mov
shlb
mov
cltd
in
or
xor
xchg
fdiv
in
sub
clc
movsb
movsb
cmp
xor
and
inc
mov
jp
sub
std
mov
push
and
push
mov
cmpsb
iret
and
mov
ret
xchg
fnsave
mov
and
cmp
push
popf
leave
mov
shrl
in
pop
popf
int3
mov
ds
cmp
sub
fbstp
fs
int3
pop
jns
xorb
sbbl
jmp
std
sbb
push
lret
lahf
je
pop
aaa
loope
cmc
push
cwtl
inc
jmp
cmp
sbb
movsl
sub
adc
xchg
es
and
fists
imul
xor
sub
aam
psubd
sub
mov
xchg
inc
adc
movsl
push
add
sub
fsubrp
and
ljmp
loope
shlb
bound
stc
leave
pop
push
cltd
cmp
jp
cli
daa
pop
lcall
push
es
pop
and
in
insl
adc
cmp
pop
or
loopne
nop
arpl
es
lods
adc
repnz
sub
pop
rcll
mov
lea
movsb
push
outsb
sti
arpl
xchg
and
jge
mov
xor
cld
mov
shl
in
adc
push
mov
xchg
cmp
pop
stos
shll
pop
push
aas
dec
pop
pop
push
pusha
xlat
xchg
cmp
xchg
mov
out
xchg
add
ds
int
xlat
js
aad
push
xchg
fiaddl
xchg
scas
enter
jae
loop
std
mov
push
xchg
pop
pop
ss
mov
or
pop
xor
sti
test
cmp
jbe
gs
sub
fistl
jecxz
bound
sub
jnp
fstps
popa
scas
jb
clc
pop
aad
test
push
xchg
fidivs
aaa
mov
sub
daa
out
jecxz
imul
pop
mov
icebp
enter
pop
ljmp
mov
ret
push
adc
addb
lock
int3
imul
les
je
jnp
aam
imul
in
or
pushf
das
push
inc
clc
xchg
mov
jb
mov
daa
push
add
pop
cwtl
aad
les
pushf
mov
jne
inc
push
mov
mov
or
aam
icebp
sub
sbb
rol
push
cmp
fisubrs
sub
jo
out
pop
jne
inc
mov
jns
out
sbb
jmp
xchg
pop
fucomp
ds
lahf
pop
loopne
popf
inc
cmp
fbld
adc
fs
aaa
mov
mov
cmpsl
mov
pushf
lea
adc
clc
cmp
into
stos
dec
mov
pop
jle
pop
cld
or
iret
push
in
sti
fstps
scas
add
adc
push
jl
nop
imul
testl
xchg
fists
pushf
js
dec
push
filds
hlt
orl
scas
rorl
out
outsb
pop
mov
pop
int
das
in
mov
inc
pusha
shl
inc
aam
pop
in
int3
outsl
jp
mov
lret
and
xchg
jne,pn
in
lds
aaa
enter
daa
mov
inc
mov
sub
stc
cltd
aad
enter
pop
push
mov
push
mov
or
xor
adc
cmp
jbe
dec
out
lock
or
jg
cmp
adc
dec
ss
cmp
scas
push
aaa
cmp
lods
jp
inc
int
ljmp
xor
stos
add
bound
mov
and
mov
mov
hlt
dec
push
les
fcmovnbe
mov
xor
cltd
test
neg
or
sbb
sbb
jecxz
adc
push
jg
je
xchg
push
fidivs
lds
sub
mov
subl
test
push
inc
arpl
add
push
dec
ljmp
jbe
imul
add
int3
hlt
ds
xchg
jno
out
sbb
aad
dec
pop
cmpsl
fwait
jecxz
lcall
cmpsl
cmp
and
push
es
stos
or
lret
arpl
and
cmpsb
mov
fisttps
mov
push
push
xor
fwait
std
push
add
outsl
stc
mov
dec
add
pop
push
flds
push
dec
sub
mov
add
test
loop,pt
hlt
inc
test
stos
dec
mov
and
into
xchg
ljmp
lods
lea
cmp
and
cmpsb
pop
jbe
mov
aaa
or
jo
xor
mov
repz
scas
push
cli
imul
push
or
adc
xchg
sbb
pop
push
std
adc
xchg
and
cmp
adc
test
cmc
shlb
fistpl
lea
push
mov
in
inc
dec
test
lret
outsb
push
mov
xchg
daa
in
ljmp
pop
lock
lock
cli
sbb
push
fs
xchg
ret
jne
nop
pushf
xor
mov
outsl
xchg
sbb
sub
mov
enter
mov
in
sbb
rcr
rcll
aaa
aas
cmpsb
stos
outsl
xor
fistl
fisubrs
xor
mov
pop
fwait
xchg
cli
repz
jmp
dec
push
push
mov
push
dec
call
cltd
sbb
pop
aam
inc
inc
inc
xor
rolb
lods
into
mov
mov
mov
push
push
cmp
lret
sbb
pop
ret
cld
mov
imul
mov
inc
rorb
add
loopne
sub
jo
mov
jb
scas
lahf
mov
inc
pop
push
xchg
js
inc
int3
loope
lods
sbb
ret
sub
push
dec
xor
test
lods
pop
arpl
push
mov
mov
push
mov
popf
sbb
bound
mov
xlat
pop
out
clc
mov
sub
adc
mov
fs
movsb
cli
inc
dec
cmc
nop
les
adc
sub
mov
mov
test
lods
ret
sub
test
inc
xchg
arpl
mov
ss
data16
push
xor
xchg
dec
int3
push
aas
test
shlb
jbe
imul
xchg
mov
fs
jnp
inc
push
stos
aam
jmp
mov
roll
and
jmp
rorl
pop
dec
mov
pop
push
mov
jl
xchg
rorb
mov
push
sub
push
rolb
cmpsl
sahf
icebp
or
mov
gs
enter
and
dec
sarl
jg
or
mov
push
movsl
sub
push
rorb
enter
shrb
xlat
xchg
xor
ret
adc
adc
in
in
mov
dec
lock
lods
fcmovbe
fnstsw
mov
push
aas
je
jne
imul
insl
cmp
mov
mov
gs
dec
jecxz
cmp
pop
jo
lds
ja
loop
mov
movsb
xor
test
into
out
repz
pop
jge
xorl
mov
jne
inc
adc
mov
cmp
popf
mov
sbb
mov
mov
outsb
scas
cs
inc
arpl
jbe
mov
xor
arpl
pusha
pop
push
fistps
stos
lds
xor
out
imul
mov
pop
mov
jb
test
cmp
cmp
test
cmp
pop
push
pop
push
jne
and
dec
jae
sbb
incl
mov
inc
ljmp
test
push
cmp
shlb
outsb
rclb
les
pusha
cwtl
repnz
xlat
mov
pop
or
dec
ss
out
sub
mov
xorb
je
loope
mov
out
sbb
jae
jo
arpl
stos
ret
popa
nop
mov
inc
mov
jbe
enter
filds
jbe
rol
daa
xor
xor
outsl
mov
xor
enter
xlat
inc
ret
jo
mov
sahf
std
sbb
movsl
xlat
scas
sarl
negb
xchg
mov
arpl
in
je
js
pop
or
push
sub
mov
push
sbb
rcrb
dec
imul
fisubrl
pop
js
cmp
shlb
cmp
jae
xchg
inc
in
inc
jmp
cmpsb
inc
cli
sbb
dec
pop
mov
mov
mov
add
rcl
ss
inc
adc
test
mov
insb
icebp
lock
xchg
ds
test
dec
loope
mov
aas
inc
lret
add
in
ljmp
xchg
add
mov
xchg
scas
mov
mov
and
push
lcall
xchg
scas
pop
clc
ss
shl
dec
pop
inc
cmp
sbb
mov
cwtl
jnp
mov
and
jnp
arpl
xchg
jecxz
fistl
call
cs
aas
add
cmp
sub
fldcw
mov
js
jae
mov
pop
sbb
adc
mov
out
jne
mov
dec
or
int3
mov
or
pop
pop
ret
dec
push
ret
push
cmc
fsubr
or
xlat
jcxz
or
test
lds
sub
jp
jle
inc
fcoml
mov
shrl
sbb
movsb
fimuls
mov
inc
fnstsw
push
mov
stos
lods
lods
and
imul
inc
xchg
mov
push
add
stc
mov
insb
add
das
mov
xor
dec
mov
out
pop
pop
cltd
jbe
pushf
popa
lret
jo
mov
xchg
mov
mov
dec
push
mov
ret
mov
arpl
lcall
int3
fildl
cmp
cmp
xlat
adc
push
data16
xorb
lahf
int
mov
sbb
or
mov
loope
ss
std
movsl
dec
or
outsb
mov
jmp
pop
sti
jnp
xlat
xchg
pop
dec
out
loopne
imul
cs
cmp
loope
call
mov
xlat
inc
xlat
lods
and
sub
add
fdivs
adc
push
adc
mov
cmp
xor
imul
fldcw
pop
mov
outsl
jmp
xorl
jbe
in
std
mov
dec
xlat
and
gs
shrb
repnz
push
leave
add
ss
mov
arpl
mov
in
mov
test
jle
popf
push
repnz
daa
test
xor
pushf
jge
out
xchg
adc
leave
and
iret
data16
fidivs
test
scas
xlat
stc
jbe
add
sub
inc
nop
loop
in
out
test
jp
lods
ljmp
insl
adc
adc
mov
add
outsb
outsb
adc
test
lods
and
stos
dec
inc
enter
nop
inc
xor
and
xor
icebp
pop
sub
std
sub
fcomps
sub
xchg
fstpl
mulb
or
in
iret
sub
push
arpl
push
xchg
add
pop
mov
sarl
fdivrs
lods
repz
mulb
stos
divb
add
cltd
cli
push
mov
cmc
lret
jle
jns
into
sub
subb
sarb
lea
push
or
push
pop
push
lods
adc
rcl
ja
aaa
xchg
popl
pop
mov
out
xor
cltd
xchg
dec
and
leave
xchg
push
lds
mov
and
ljmp
jnp
cli
dec
xor
data16
jle
mov
stc
gs
aas
mov
jno
into
in
imul
dec
inc
add
inc
les
cwtl
dec
mov
loopne
dec
cmpsb
shlb
movsb
and
int3
mov
mov
fs
std
lret
outsb
aam
cli
adc
xor
das
xor
jne
fcmove
int3
mov
adc
jmp
dec
test
pop
jb
cld
js
andl
push
jge
aaa
jb
shlb
ja
shrl
pop
and
insl
inc
lods
out
dec
jmp
jmp
inc
cmpsb
test
push
fsubr
clc
leave
movsb
fdiv
adcl
roll
cmp
clc
jle
and
pop
add
jmp
test
lret
jae,pt
test
shll
sbb
pusha
cmp
fldenv
insb
mov
insl
jg
jge
call
cmc
inc
mov
clc
sbbb
int
out
movb
dec
fs
repnz
idivl
jle
int
xchg
bswap
movl
or
addl
fdivrs
fwait
cmp
xchg
adc
insb
and
pop
shll
or
adc
push
fcoms
icebp
inc
jp
movsb
sti
mov
jno
adc
dec
mov
pop
or
xchg
ljmp
or
inc
mov
jge
mov
dec
test
ret
js
mov
sub
pop
pop
sub
xor
jno
rcrl
cmpsl
push
movsl
cltd
sub
loopne
movsl
mov
cmpl
notb
out
xor
imul
test
pop
and
rcr
lods
loop
aad
daa
jae
or
mov
daa
add
cmp
or
ljmp
jl
push
mov
push
xorl
mov
mov
xchg
push
lea
adc
adc
jo
mov
inc
xchg
jnp
outsb
ljmp
sub
add
add
lods
hlt
xchg
test
add
pop
dec
jg
push
mov
test
out
jl
sub
fsubl
or
mov
pop
addr16
sub
fcompp
adcl
movsl
cmp
imul
dec
xchg
mov
jp
adc
add
in
pop
push
in
lret
xchg
fildll
fsubl
xchg
mov
mov
cld
aaa
cmpsl
call
mov
loope
dec
inc
icebp
sti
loop
inc
fnstenv
test
pusha
push
sub
leave
int3
fldenv
xor
dec
pop
test
jae
cmp
cld
xor
xchg
add
pop
rcrb
in
mov
dec
adcl
xor
jo
cmp
out
jnp
enter
insl
shl
dec
jnp
mov
adc
jbe
mov
sbb
js
fisubrl
lcall
add
ds
sti
sbb
in
std
xor
jbe
test
out
dec
xchg
out
popf
xchg
push
mov
mov
jecxz
repnz
pop
push
or
icebp
fwait
sarl
imul
stos
push
pusha
push
jecxz
sub
xlat
pop
jbe
int
ds
and
ficoms
call
push
jl
out
cli
add
or
addr16
insb
ljmp
test
scas
inc
push
fisubs
loope
aas
gs
xchg
scas
lock
xor
aad
cmp
sbbb
icebp
lcall
push
fistpll
cmp
bswap
xchg
jmp
push
or
sbb
in
enter
js
mov
cld
sahf
or
call
mov
sbb
xchg
xchg
sub
lahf
test
xor
fnsave
fistpll
lock
push
jge
cli
inc
insb
add
add
cld
add
rcr
xchg
sbb
sbb
sub
add
iret
push
stc
lods
push
jl
push
mov
push
loopne
or
sbb
mov
nop
mov
addr16
pop
loop
dec
sbb
mov
imul
jbe
jne
call
pop
popa
movsl
jne
push
jb
arpl
idivb
inc
or
xchg
movsl
int
js
mov
cmp
addl
adc
add
decb
dec
sub
stos
xor
ja
scas
arpl
insb
cmp
push
jo
mov
arpl
rcr
sub
xor
dec
cmp
and
pop
std
in
push
sbb
addr16
xchg
fwait
stc
fidivrs
das
or
mov
repz
lahf
pop
pop
ret
mov
mov
into
insb
pusha
mov
mov
testl
outsl
jb
adc
jmp
and
cmpsl
mov
out
loop
mov
xor
sbb
scas
xchg
or
or
jg
test
push
jo
mov
cmp
push
pop
lods
cmp
fdivrl
test
fwait
test
in
je
test
lret
das
aaa
dec
jns
jmp
jle
into
cmc
rolb
add
xchg
out
or
jb
mov
fmull
das
aad
cld
cmc
mov
inc
gs
mov
cmp
loopne
int3
scas
clc
sti
outsb
int
add
dec
daa
dec
xchg
add
mov
cs
rcrl
iret
mov
sbb
sbb
icebp
adc
pop
ror
inc
cmp
ja
vaddsd
loop
ss
mov
xchg
test
movb
push
sub
fbld
mov
lcall
repnz
pop
push
push
es
hlt
jmp
jb
jo
push
inc
test
mov
lret
out
fcomps
daa
cmp
mov
sbb
outsl
dec
adc
test
hlt
insb
pushf
cmp
jnp
mov
push
test
xor
clc
pusha
xchg
inc
aam
addr16
pop
jg
das
stos
dec
movsl
jg
adcb
adc
mov
or
xlat
lods
push
xor
inc
jbe
lahf
lea
inc
ds
arpl
loop
mov
xor
cmpsb
loopne
fisubrs
mov
ljmp
test
jnp
jbe
inc
aaa
aad
add
mov
jp
iret
jo
xchg
hlt
shr
cmpsb
stc
fwait
sbb
test
or
jmp
push
add
cmp
push
mov
fnstsw
xchg
pop
dec
adc
jb
or
lods
cmp
and
pop
sbb
test
loop
inc
jns
cmp
addr16
pusha
shlb
and
std
arpl
or
xchg
in
mov
xlat
das
push
lret
sbb
xchg
and
xor
cmp
addr16
popf
fidivs
cmpsl
adc
xchg
push
sahf
enter
lods
xor
stc
movsb
push
pop
push
cmp
stc
xor
bnd
fsubs
mov
xor
xchg
gs
xor
mov
je
xor
mov
pushf
jp
xchg
cld
add
sbb
push
notl
lods
bound
pop
xor
cmc
sub
shl
ficompl
jbe
cmp
ss
lods
push
in
inc
lcall
adc
cmpsb
mov
das
pushf
in
scas
adc
rclb
je
loopne
pop
dec
inc
add
shll
loope
and
push
dec
arpl
add
sbb
cltd
mov
lds
ret
xor
xchg
sahf
dec
xchg
push
jmp
cs
das
add
inc
add
into
mov
and
push
jge
sbb
xor
fadd
jae
hlt
mov
dec
and
inc
leave
mov
in
sub
mov
mov
pop
ja
cwtl
in
in
lahf
xchg
inc
call
popa
lea
popa
mov
sub
xorl
int3
adc
mov
add
push
subb
pop
ljmp
sar
scas
inc
lods
in
in
jns
out
push
imul
jp
mov
icebp
cmp
out
nop
xor
jbe
and
rorb
push
pop
fwait
fs
add
scas
lahf
inc
notb
or
aaa
fbstp
shrl
leave
lret
orb
insb
sub
orb
xchg
mov
scas
or
dec
lods
aaa
mov
inc
leave
sbb
jecxz
adc
sbb
mov
mov
idiv
xchg
movsb
xchg
sub
or
aam
sub
call
in
bound
inc
popl
fldl2e
lcall
and
test
lods
or
or
pop
rolb
inc
cmpsb
mov
xor
mov
dec
jmp
int3
popf
arpl
push
and
pop
or
push
scas
mov
outsl
jmp
xor
jnp
stos
xchg
pop
ss
out
inc
dec
dec
and
sahf
mov
movsb
mov
push
mov
loope
pop
in
or
loopne
xchg
and
xor
pop
and
push
cmp
lea
cs
dec
in
dec
fcomip
fldenv
jmp
movsl
inc
add
pop
roll
jns
cli
add
cld
sub
popf
pop
dec
add
ret
push
enter
scas
cmp
cmp
jg
xchg
xchg
mov
pop
mov
insl
das
mov
stos
mov
popa
lds
loope
pop
xlat
inc
mov
adc
aas
arpl
addr16
inc
cltd
push
dec
clc
ljmp
out
arpl
push
xchg
inc
addr16
cltd
mov
add
sti
xchg
rcrl
test
cmp
mov
xor
sub
or
enter
push
jp
jns
sbb
or
sub
fmull
push
mov
stos
xchg
cld
pushl
xor
icebp
mov
xchg
shlb
push
cld
adc
loopne
rcrl
rcll
call
adc
out
xchg
nop
enter
lahf
jge
icebp
scas
idivb
cli
mov
push
add
clc
sarl
test
insl
adc
cld
push
xor
das
sub
lock
xor
out
into
mov
fsts
jge
inc
hlt
test
sbb
add
mov
pop
imul
loope
testb
loope
dec
or
es
leave
sbb
sbb
std
lea
js
shrb
push
mov
jbe
sti
inc
and
cmp
lahf
leave
jl
divl
test
sub
inc
sti
add
popf
ret
push
cltd
cmp
inc
into
inc
icebp
sub
test
leave
lods
cmp
xor
jns
loop
cli
sub
jg
cmp
sti
push
test
test
pop
sub
dec
sbb
jns
fbstp
pop
in
sub
cmp
or
sbb
xchg
sub
leave
dec
xor
mov
nop
xor
cmc
jno
or
test
testb
test
in
hlt
inc
shrl
ficoml
gs
push
in
push
mov
inc
icebp
pop
mov
xchg
sbb
pop
jmp
add
push
inc
aaa
dec
dec
icebp
jb
popf
xor
imul
and
push
into
xchg
movsl
cmp
xor
sbb
mov
cmp
add
lcall
mov
insb
jmp
in
cmp
and
sub
mov
jno
ljmp
enter
or
and
sub
bound
add
dec
dec
loop
call
inc
sbb
push
mov
cmp
aam
out
outsb
fldenv
jne
rorl
cwtl
ja
in
mov
cmp
bound
idivb
add
sbb
mov
xlat
xlat
ret
or
subl
out
test
fdiv
pcmpeqw
xor
adc
scas
in
xorb
inc
stos
adc
xor
and
out
stos
jecxz
nop
icebp
jb
inc
jp
iret
je
mov
imul
cltd
fcompl
outsb
ss
int3
les
add
clc
lahf
cli
call
or
or
adcb
and
mov
push
jno
jb
sbb
xchg
mov
stc
cmc
or
sub
or
roll
mov
stc
js
push
jno
ret
xchg
push
sar
inc
pop
and
icebp
mov
jecxz
mov
pop
cmp
mov
add
xor
jecxz
imul
repnz
js
imul
jl
jo
pop
notl
popa
and
aaa
int3
cmp
in
pop
bound
pop
pop
pushl
fcmovu
data16
mov
bnd
adc
mov
xchg
gs
inc
inc
fs
outsl
fcoml
jge
sbb
fldenv
dec
popa
inc
iret
test
dec
cli
fisttps
sbb
xchg
cmp
push
pushf
and
ljmp
add
adc
test
cld
pop
push
jo
pop
xor
mov
xchg
xor
sbb
dec
and
call
pop
mov
xchg
mov
mov
and
and
inc
mov
daa
call
icebp
push
outsb
bound
pop
cwtl
push
dec
testb
enter
shrl
rcrl
add
lret
in
push
or
mov
pop
ret
push
dec
inc
pop
icebp
pop
movsb
mov
adc
rol
and
pop
call
call
into
xchg
dec
movsl
cmp
aas
dec
mov
cmp
mov
sbb
dec
inc
rol
and
or
les
dec
push
mov
inc
lea
jp
push
das
push
rorb
adc
cli
add
mov
sbb
xchg
cwtl
or
into
dec
cmp
add
hlt
flds
sub
ds
xor
push
jbe
push
mov
ljmp
pop
or
ret
jbe
int
dec
daa
and
popf
lea
xchg
cli
xchg
bound
fneni(8087
cmc
mov
popf
mov
fstpl
nop
sub
push
stos
cmp
cmp
dec
mov
push
fstl
cmp
cmpsb
mov
dec
ror
xchg
stos
or
cmp
rcll
int3
and
pop
xchg
lcall
adc
enter
leave
mov
adc
add
xor
aaa
dec
repnz
xchg
loope
bound
loop
add
mov
mov
lahf
dec
xchg
xor
sarb
sub
sbbb
aas
mov
xchg
cli
xor
and
xchg
pop
lcall
dec
lret
mov
jg
das
dec
bound
push
mov
jno
movsb
jnp
in
inc
push
stos
dec
pop
adc
sub
jg
mov
add
iret
ja
dec
pop
ljmp
test
cli
pop
sti
lret
and
lahf
dec
fildl
dec
frstpm(287
lods
sbb
inc
bound
mov
fldt
test
push
scas
cmpsl
dec
jge
xchg
mov
arpl
mov
jbe
xor
lods
push
enter
inc
fadds
in
sbb
push
scas
nop
mov
mov
addr16
pop
fwait
and
jo
add
sbb
loope
push
insb
xor
imul
stos
pop
fisttpl
cmp
cmc
shufps
ja
aaa
or
or
shll
pushf
lret
mov
sbb
dec
sahf
mov
mov
loopne
inc
icebp
inc
mov
test
ficomps
sbb
push
jg
cwtl
test
mov
mov
and
or
sahf
mov
pop
fistps
fwait
lret
sub
pop
call
dec
outsl
add
pop
mov
sar
inc
jle
lds
insl
dec
inc
ljmp
or
movsl
repz
cmp
and
pop
mov
sbb
addl
lret
lea
out
jmp
mull
sub
sbb
in
dec
mov
arpl
cmp
dec
or
lcall
in
pop
xor
push
mov
sub
mov
and
or
adc
mov
insl
lret
int
leave
xor
mov
sbbb
bound
add
xchg
push
dec
sub
jge
arpl
inc
rorb
cltd
push
mov
pop
fdivs
insb
adc
add
cmp
bound
mov
dec
lock
push
xor
push
mov
sahf
movsb
cs
xchg
inc
int3
lods
xor
or
jno
mov
es
adc
cli
lds
cmpsl
mov
and
push
std
push
aaa
mov
insb
movsl
dec
sti
sbb
pop
sbb
dec
jne
pop
mov
std
mov
sbb
xchg
lret
mov
std
mov
notl
or
es
shlb
roll
dec
pop
sub
inc
movsb
jb
enter
xor
pop
insb
ljmp
sbb
mov
fcmovnbe
jge
jae
jbe
lret
mov
clc
cmp
push
and
xchg
arpl
test
pop
lret
inc
call
outsb
jb
cltd
dec
aam
or
pop
es
xchg
int
add
dec
lea
outsb
push
js
insl
lock
sahf
xor
mov
movsb
pop
xchg
fs
sub
pop
aaa
imul
out
pop
mov
mov
push
sbb
mov
xchg
out
sahf
cld
pop
out
scas
cmp
cmp
mov
dec
add
xor
adc
call
xchg
dec
mov
nop
les
inc
jl
lds
fistpll
lea
sub
or
pop
sbb
in
cmp
push
dec
mov
mull
call
cmp
add
fists
loope
push
or
pop
cs
mov
mov
test
in
sub
jns
adc
push
cwtl
pushf
xor
push
jmp
jp
pop
std
and
dec
cli
dec
mov
add
hlt
ljmp
aas
pop
inc
sti
scas
clc
idivb
cmp
lock
pusha
cmp
add
ret
clc
mov
mov
into
aam
jo
or
aad
aas
push
repz
xor
loopne
cmpsb
pop
dec
jo
inc
mov
emms
mov
enter
sbb
mov
push
push
xor
sahf
dec
adc
sbb
push
cmp
testb
xchg
cwtl
mov
test
cmc
dec
dec
jmp
fistpl
and
cs
mov
mov
pop
insl
push
inc
mov
test
stos
insb
ret
sub
mov
cld
jl
mov
out
add
inc
sub
outsl
jl
mov
fwait
inc
test
movsl
stos
sti
sbbb
shll
pop
test
push
xlat
xchg
js
sbb
mov
jle
or
pop
mov
sbb
mov
mov
es
xor
setnp
lahf
cmp
lret
push
ret
pop
adc
inc
sbb
notl
xchg
push
gs
xchg
scas
push
push
shrb
xor
outsb
jb
cmp
cltd
xor
pop
lock
adc
movsb
fstps
movsl
insl
push
lds
or
push
or
cwtl
imull
mov
mov
shll
cwtl
or
lret
add
xor
cmp
push
addb
pushf
xchg
mov
mov
xchg
ret
mov
mov
mov
mov
cwtl
xchg
adc
mov
mov
xor
and
mov
push
repz
sarl
mov
out
mov
push
adc
or
inc
roll
push
xchg
push
dec
mov
imul
pop
nop
xor
enter
int
in
mov
inc
ds
ljmp
mov
btc
pop
inc
insl
clc
sbb
or
mov
and
push
leave
inc
sbb
push
stc
movsb
lods
push
fdivrl
lcall
mov
div
ss
ret
jno
rcl
push
das
dec
cli
mov
sub
ja
pop
pop
xor
xchg
daa
sbb
xor
lcall
jno
scas
mov
inc
adcb
sbb
sbb
jge
mov
pop
pop
cmp
das
add
shrb
test
rol
sub
jae,pn
fcoml
cmp
fsts
mov
sbb
fmul
cli
jne
imul
jae
fnstenv
or
mov
movsb
or
jle
or
test
jb
push
int3
xchg
push
push
sub
cmc
jb
cltd
pop
lods
sub
enter
xchg
xchg
in
in
lcall
pop
pop
ret
add
and
sahf
mov
shll
std
cs
sbb
jne
pushf
pop
inc
in
cld
in
xor
add
ficomps
jmp
popa
fucomi
cmp
push
mov
je
sbb
jne
xchg
in
out
imul
in
mov
jge
addb
sub
inc
mov
add
call
mov
std
adc
xor
adc
pop
sbb
pop
push
lahf
push
inc
adc
xchg
sahf
repnz
in
or
fisubrl
adc
dec
add
cmp
inc
ret
movq
shlb
push
jns
stc
inc
push
xor
test
shll
mov
lret
jnp
pop
jno
test
repz
push
add
inc
mov
xchg
lcall
test
sbb
mov
xchg
ror
xchg
mov
pop
sbb
mov
ja
mov
test
sub
jno
repnz
sbb
mov
xchg
mov
ss
in
push
and
sbb
push
adc
and
sbb
daa
mov
lods
loop
mov
xor
push
lock
xchg
ficoms
push
add
cmpsl
lret
xchg
dec
sti
leave
nop
mov
addr16
loope
xor
sub
fwait
jmp
mov
mov
sbb
into
lret
xchg
pop
adc
push
or
xchg
xlat
testl
std
lret
pop
idivb
scas
mov
mov
add
add
leave
into
lock
or
pop
cmc
adc
dec
adc
mov
jg
add
mov
ds
mov
lret
rcr
lret
ss
repz
xchg
mov
push
dec
int
aaa
xlat
adc
repnz
and
xor
sub
loop
lock
int3
js
jge
daa
scas
mov
push
fsts
pop
and
pop
stc
shr
dec
xchg
or
shlb
pop
cld
in
add
mov
jecxz
pop
cld
cmp
ja
push
in
fidivrl
rolb
mov
or
lds
test
add
sbb
pop
outsb
call
pushf
xlat
pop
test
repz
popa
mov
in
fs
dec
arpl
or
pop
add
jb
test
int
mov
adc
adc
fs
add
mov
in
push
mov
iret
popf
cld
scas
inc
jnp
sbb
loopne
add
xchg
in
arpl
int
lock
loop
rcl
pop
push
adc
les
sbb
ds
xor
stos
dec
div
inc
xchg
xchg
inc
mov
push
mov
mov
hlt
push
and
roll
mov
cmpsl
movsl
xor
xchg
loopne
sarb
push
fwait
cwtl
neg
dec
dec
sti
lods
xchg
push
repz
mov
outsb
outsb
cmp
mov
jmp
daa
or
fsubs
shl
repnz
xchg
push
cmpsb
cld
jp
xchg
jp
push
arpl
outsb
insb
push
cmc
pop
mov
cmp
mov
or
fucom
push
lods
and
pop
xor
jo
xor
xchg
fmull
test
push
adc
sub
subl
mov
out
or
lret
adc
xor
fmull
sub
in
push
inc
rorb
je
popf
inc
movsb
in
jo
and
andl
xlat
push
mov
loopne
mov
dec
int
dec
repnz
lcall
mov
cld
dec
ret
mull
sahf
loope
insl
push
out
out
jle
mov
inc
add
jae
xor
jp
sbb
jmp
mov
and
shll
inc
add
ficoml
jmp
sub
mov
fwait
repnz
fsubs
mov
sahf
test
sub
call
inc
sub
sbb
enter
idivb
or
cmpsb
rorb
mov
int3
jae
scas
jecxz
test
outsl
ret
lret
sar
pop
arpl
inc
jb
and
fsubrl
dec
push
popf
ds
adc
sbb
daa
push
add
ret
cltd
sub
xor
jae
pusha
out
pop
cmp
xchg
outsb
sub
arpl
sti
rol
nop
cmc
mov
mov
movl
lret
test
negb
xchg
inc
lock
loop
sbb
leave
sbb
in
pushf
daa
pushf
inc
mov
xchg
push
sub
lahf
dec
mov
out
cmc
ja
xchg
mov
out
cmp
xchg
fs
rcrb
imul
inc
push
jnp
aad
loopne
iret
repnz
push
sti
test
sbb
and
ficomps
xchg
fbstp
sbb
mov
sahf
push
lods
call
sbb
pop
push
add
pop
pop
sarl
shr
je
mov
gs
pop
loop
cmp
or
mov
jle
inc
xor
jae
sti
jg
lea
fsubrs
cmp
xor
repz
and
movsb
pop
sahf
jnp
icebp
fidivrl
out
dec
adc
pop
xchg
sub
ret
mov
in
push
inc
movsb
inc
inc
mov
adc
cmp
sub
int3
push
sbb
out
das
mov
imul
aaa
mov
adc
iret
mov
pop
cmp
xchg
push
xchg
or
inc
es
xor
repz
xor
pop
in
xor
add
std
sub
push
out
xchg
repz
mov
scas
push
aam
inc
mov
insb
pop
in
and
cltd
dec
rclb
call
cli
inc
mov
lods
xor
fldt
push
or
enter
adc
aad
shrd
rcr
cmp
mov
adc
cmp
mov
push
popf
jo
shl
orl
xor
pop
push
cmp
xchg
adc
lock
push
add
test
mov
aam
icebp
rsqrtps
xor
insb
hlt
pushf
pusha
add
sbb
xchg
das
cmp
jbe
cmp
cmp
add
bound
jb
fldt
lds
and
js
mov
or
or
je
shlb
jg
jmp
shl
ds
inc
icebp
in
je
add
andb
inc
xchg
push
or
daa
sbb
test
leave
sbbb
cmp
rorl
and
rorl
pop
nop
mov
push
std
popf
xor
xorb
movsl
push
leave
xor
ret
adc
mov
lds
out
inc
div
adc
sbb
cmpsl
or
mov
pop
sub
aas
addb
add
sbb
pop
popa
in
pop
sbb
mov
add
sub
stos
inc
popf
mov
adc
fmull
inc
in
cs
scas
sbb
mov
mov
xchg
cmp
and
mov
inc
stc
movsb
insb
add
jns
cltd
push
mov
push
and
mov
das
test
cli
sbb
and
pusha
rol
jae
arpl
dec
and
add
and
mov
or
pop
sub
out
sbb
cmp
shl
cs
cwtl
popl
movsl
outsb
out
cli
cmp
adc
out
imull
xorl
outsl
lea
pop
shll
xor
lock
addb
jge
ja
jne
les
orb
negl
push
inc
mov
ret
or
push
push
xchg
sub
dec
jecxz
mov
orl
das
inc
cmp
decl
sbb
pop
push
cld
adc
fsubrp
cmpb
shl
pop
xor
bound
push
push
cmp
inc
cwtl
imul
sbb
pop
cmc
sbb
xor
jmp
std
imul
push
popa
insl
orb
jecxz
cltd
inc
jo
jmp
cmp
jo
inc
add
lods
fisttpll
mov
lcall
jns
pop
jae
cmp
push
xorb
or
push
or
aas
mov
imul
imull
jns
pop
xor
pusha
arpl
data16
push
stos
xor
idivl
cmp
je
mov
mov
jno
and
fcompl
stc
aad
pop
pop
aas
in
inc
cwtl
jbe
data16
sub
xor
push
subl
lds
ret
xor
scas
scas
or
enter
js
adc
sbb
adc
cmp
sbb
lahf
pop
test
add
push
mov
xchg
in
and
mov
inc
jl
mov
insl
push
orb
mov
mov
xchg
jb,pn
aam
call
xchg
adc
jbe
mov
sbb
stos
sbb
loopne
stos
pop
inc
inc
adc
in
mov
pop
or
dec
shl
out
sub
adc
mov
cli
or
mov
pusha
movsl
mov
mov
sub
jnp
mov
xlat
gs
in
popf
mov
add
std
inc
or
jp
faddp
cmp
addr16
jmp
clc
mov
sbb
and
ljmp
jge
in
or
pop
jne
sbb
xchg
test
ljmp
insl
jno
fcoml
inc
data16
mov
xlat
popa
out
jnp
pop
icebp
mov
add
dec
push
cmp
lret
pop
and
mov
imul
pop
adc
jecxz
push
push
push
and
sbb
adc
pop
stos
nop
mov
pop
scas
mov
sub
stos
or
sbb
gs
into
sub
sbb
push
sbb
imul
decb
fbld
aam
mov
jg
push
adc
imul
lahf
inc
xor
out
scas
sahf
std
stos
adc
xchg
cmpsl
push
jnp
mov
dec
cmpsb
xchg
cmp
js
mov
jge
ror
popf
xor
add
rcr
cmp
push
movsb
cld
adc
rcr
inc
mov
fisubs
push
fimull
clc
movsb
inc
mov
movsb
scas
push
pop
push
sahf
sbb
lret
add
jnp
xchg
xchg
aaa
fistpll
jne
fisttpll
insb
popf
outsl
add
fiadds
aad
inc
repnz
sub
add
call
jmp
and
push
stos
mov
or
xrelease
arpl
xchg
gs
xor
adc
and
jb
or
sbb
mov
inc
fwait
push
inc
lret
push
sub
ficoml
sahf
fwait
cs
hlt
shrl
or
pop
sbb
adc
lea
push
icebp
sub
arpl
push
cld
cld
in
add
xchg
xchg
outsb
sub
xor
add
cmp
mov
movsb
dec
jnp
adc
xchg
in
mov
xor
loop
outsb
and
add
loop
aaa
jge
dec
xor
add
push
orb
xor
test
imul
xor
insb
mov
sbb
xor
gs
push
push
push
stc
cmp
mov
jno
je
adc
cld
neg
jmp
fcmovbe
in
mov
pop
jecxz
mov
dec
fildll
lcall
mov
fidivs
pop
adc
mov
dec
into
jno
iret
stos
dec
sub
or
and
mov
aam
jae
mov
bnd
aas
mov
cld
inc
mov
ljmp
aas
insl
mov
mov
mov
push
xor
les
mov
aam
data16
pop
aaa
ss
repz
int3
cmovns
movsb
adc
fwait
enter
fs
rcl
sub
mov
jno
notl
add
push
out
push
mov
movsb
js
xor
mov
shrb
adc
imul
pop
mov
xchg
add
mov
scas
xor
fcmovbe
lahf
call
fdivr
imul
aas
dec
ror
lcall
pop
xor
cmp
mov
mov
jbe
add
dec
xorl
in
push
outsb
xchg
adc
fstl
pop
xor
aas
fistl
sbb
aam
pop
es
push
xchg
mov
insl
xor
mov
loopne
sbb
lret
pop
add
nop
push
lret
push
lret
xor
jle
es
cwtl
ja
and
push
std
jne
fisttpl
loopne
pop
sub
mov
ljmp
xchg
faddl
iret
mov
cld
ret
dec
insb
aad
scas
fabs
jp
mov
mov
push
je
or
dec
mov
jge
clc
sbb
jg
fwait
and
add
push
dec
out
push
je
xchg
ds
out
jbe
movsb
cmp
cmp
movsl
das
cmp
or
dec
jae
jns
jge
push
jmp
add
rcll
and
lods
add
mov
mov
sbb
test
sbb
cmp
inc
or
in
js
push
cmp
iret
outsb
push
push
jg
or
dec
in
push
mov
imul
ror
popf
mov
mov
icebp
add
std
pop
and
movsl
out
push
xor
adc
test
repnz
sub
ret
out
test
mov
jp
and
adc
or
stc
sbb
dec
push
mov
stos
xor
clc
out
in
imul
aad
push
sbb
lods
lret
int3
mov
mov
pushf
aam
mov
out
mov
xor
in
loop
in
ja
pop
jne
adc
les
add
inc
or
xor
cmp
adc
ja
fcmovne
dec
rolb
xor
and
sarl
mov
dec
sbb
xchg
lret
dec
mov
mov
xchg
int
add
loopne
fstl
mov
jg
fisubrs
inc
rcrb
jg
jmp
mov
popf
rorl
cmpsl
adc
mov
cs
xchg
scas
mov
bsr
push
pandn
test
push
lds
imul
outsl
dec
mov
sub
lods
sub
inc
shll
fdivr
sti
sbb
std
push
jp
push
punpcklwd
repz
bnd
mov
or
mov
jns
mov
cld
xlat
lods
add
dec
lea
jns
mov
add
xor
xor
or
xchg
das
pop
ficompl
in
test
push
enter
fwait
inc
imul
outsl
sbb
out
fnstsw
sub
data16
scas
add
mov
int3
jecxz
sub
outsl
sub
push
dec
cmp
in
adc
jbe
int
mov
sarl
mov
lcall
cld
test
pop
mov
in
sub
and
mov
inc
insb
in
jmp
mov
stc
jg
bound
mov
jp
fistl
pop
cmp
lahf
xchg
call
test
in
fadds
xchg
shrl
es
std
les
xchg
mov
xlat
xor
dec
sub
stos
mov
push
or
or
or
jae
in
in
cmpsl
or
scas
out
or
push
je
mov
outsb
pop
pusha
push
jecxz
ss
pop
mov
insb
lret
mov
add
inc
dec
lret
and
xor
adc
das
jo
in
inc
push
push
out
bound
stc
mov
fcoms
adc
es
push
daa
mov
sub
lretw
fsubrs
repz
inc
jbe
xchg
inc
pop
pop
dec
mov
dec
lods
xchg
outsb
mov
fistps
adc
adc
cld
jne
dec
jle
or
es
lods
aad
sub
mov
test
popf
sahf
dec
sub
fs
fildll
add
loope
rorl
push
pop
sti
mov
or
xor
gs
mov
loop
inc
push
mov
fwait
shll
xor
mov
mov
push
lcall
jne
jmp
bound
xchg
rcll
pop
enter
shl
ss
invd
dec
test
faddl
notl
test
pop
push
cmp
adc
xchg
movsb
icebp
out
sbb
lods
jae
loop
adc
inc
mov
in
adc
outsl
mov
in
mov
push
repz
and
dec
in
lret
cmp
xchg
cmp
xor
sbb
or
imul
pop
stc
sub
xchg
dec
ret
sbb
sub
jno
mov
iret
shlb
test
xlat
adc
shrb
sbb
bound
jge
adc
arpl
icebp
insl
daa
lods
dec
mov
mov
xor
push
mov
and
nop
lret
mov
lahf
pop
fs
adc
ja
mov
or
test
iret
je
dec
push
add
outsb
aaa
push
cld
jle
lret
sbb
movsb
xchg
repnz
lret
xchg
push
adc
or
jl
icebp
insl
push
dec
mov
sbb
jo
lea
push
mov
movsl
dec
mov
mov
mov
js
sub
es
sbb
subb
pop
mov
xchg
mov
or
xchg
or
sub
sub
loop
dec
out
ljmp
xchg
mov
adc
cmc
mov
loop
mov
jno
push
inc
sbb
loop
pop
adc
loopne
imul
repnz
insl
scas
pop
inc
sbb
es
mov
pushf
and
mov
xchg
andl
jnp
in
cld
pop
xor
jmp
jne
popa
flds
xor
rcrl
or
in
pop
adc
cmp
jnp
cmp
push
mov
dec
or
push
inc
and
inc
xchg
leave
stc
cmpb
xlat
ret
lock
outsb
adc
mov
jg
mov
mov
push
push
pop
jecxz
xchg
in
mov
push
inc
cmp
loope
inc
push
pop
or
sti
mov
lds
lret
push
adc
out
ret
popw
xchg
and
decb
jg
cmp
add
cmp
lods
adc
push
aam
push
sub
xchg
sub
into
loop
jbe
repz
jne
lahf
jg
stos
sbbl
mov
insl
sbb
push
mov
cmpsl
int
fdivrp
pop
add
fsubr
clc
sub
xchg
js
out
cmpsl
cmpsl
sub
push
jo
enter
push
outsb
inc
mov
cmpsl
jb
scas
mov
cmpl
popa
inc
push
jnp
jge
popf
mov
fsubrp
frstor
out
and
add
nop
jo
inc
loope
aam
jle
faddl
cmp
mov
xorb
mov
xor
push
adc
sbb
sahf
sub
or
xchg
scas
pop
and
adc
ss
leave
notb
pop
mov
idivl
inc
in
jno
in
ja
scas
sub
dec
js
imul
sub
cld
sub
mov
mov
pushf
sub
mov
nop
shll
movb
mov
aad
mov
cs
imul
push
test
ja
int3
bound
decb
fcoml
and
xlat
test
adc
call
aam
mov
cmpsb
or
imull
fdivrs
xlat
ljmp
movsl
pop
cmp
dec
subb
gs
cld
in
test
mov
js
fnstcw
pop
and
inc
jns
outsb
dec
inc
dec
popa
inc
data16
or
adc
xchg
popf
push
lret
lea
mov
cmc
sbb
insl
ljmp
movsl
mov
add
jp
icebp
jno
xor
mov
int
jle
adc
ss
dec
popf
addb
rcll
add
xchg
jl
or
nop
daa
shlb
cmc
sub
movsl
pop
cmp
ss
sbb
stos
outsl
mov
mov
jno
and
inc
dec
mov
sbb
mov
movsb
xchg
or
pop
insb
subl
stc
cmpsl
fisubs
cmp
xor
jno
pushf
add
loop
xchg
lods
xor
push
adc
shrl
inc
in
dec
mov
fwait
sahf
inc
roll
imul
push
ja
xchg
je
int
mov
dec
push
jbe
dec
test
dec
and
std
or
out
jo
xchg
int
dec
jb
push
lahf
and
cmp
pusha
mov
outsb
or
jae
mov
aas
in
nop
and
arpl
push
sub
rolb
adc
mov
dec
push
xor
jge
int3
push
or
stos
or
loope
gs
andl
ja
rcr
les
xor
push
xchg
xchg
fnsave
xchg
xchg
subb
xlat
mov
insb
mov
fmuls
inc
lods
cmpsl
rcrl
dec
dec
dec
inc
xor
and
mov
ds
movb
ret
insb
xchg
push
or
mov
inc
and
push
dec
int3
dec
mov
or
pop
sub
loopne
cwtl
fists
ss
lock
inc
hlt
ja
push
leave
movsb
jmp
or
nop
cmpsb
and
mov
cmp
mov
mov
jmp
jle
mov
out
and
ret
dec
call
push
data16
mov
xor
fcomps
jl
in
pushf
cwtl
hlt
in
push
push
xor
pop
jle
xchg
pop
pop
cmp
pop
aaa
cmpsl
sub
add
int3
inc
call
pop
jb
imul
ljmp
mov
stc
lcall
lret
or
mov
xlat
xchg
inc
push
xor
xor
sti
xor
push
scas
adc
cmp
mov
mov
add
pop
lret
popf
fisubl
jbe
leave
lcall
inc
pop
pop
cmp
pop
pop
mov
fisttpll
xchg
je
dec
in
add
push
inc
loopne
cltd
jg
imul
hlt
rorb
cwtl
aas
push
mov
bound
push
cmp
cmp
idiv
aaa
pop
lcall
add
xchg
inc
cmc
aas
jae
fcoml
lea
dec
arpl
enter
pop
lret
andl
xor
pushf
and
stos
imul
jmp
popa
jge
inc
push
shrl
movsl
dec
xchg
fmull
leave
inc
enter
fidivl
dec
insb
add
in
mov
out
stos
into
fdivs
jp
mov
